
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcc1.so.0.0.0_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000005268 <.init>:
    5268:	stp	x29, x30, [sp, #-16]!
    526c:	mov	x29, sp
    5270:	bl	5850 <_ZNSt6localeC1Ev@plt+0x10>
    5274:	ldp	x29, x30, [sp], #16
    5278:	ret

Disassembly of section .plt:

0000000000005280 <_Znam@plt-0x20>:
    5280:	stp	x16, x30, [sp, #-16]!
    5284:	adrp	x16, 2a000 <xexit@@Base+0x14e10>
    5288:	ldr	x17, [x16, #4088]
    528c:	add	x16, x16, #0xff8
    5290:	br	x17
    5294:	nop
    5298:	nop
    529c:	nop

00000000000052a0 <_Znam@plt>:
    52a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52a4:	ldr	x17, [x16]
    52a8:	add	x16, x16, #0x0
    52ac:	br	x17

00000000000052b0 <memcpy@plt>:
    52b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52b4:	ldr	x17, [x16, #8]
    52b8:	add	x16, x16, #0x8
    52bc:	br	x17

00000000000052c0 <select@plt>:
    52c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52c4:	ldr	x17, [x16, #16]
    52c8:	add	x16, x16, #0x10
    52cc:	br	x17

00000000000052d0 <xregcomp@plt>:
    52d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52d4:	ldr	x17, [x16, #24]
    52d8:	add	x16, x16, #0x18
    52dc:	br	x17

00000000000052e0 <execvp@plt>:
    52e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52e4:	ldr	x17, [x16, #32]
    52e8:	add	x16, x16, #0x20
    52ec:	br	x17

00000000000052f0 <socketpair@plt>:
    52f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52f4:	ldr	x17, [x16, #40]
    52f8:	add	x16, x16, #0x28
    52fc:	br	x17

0000000000005300 <calloc@plt>:
    5300:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5304:	ldr	x17, [x16, #48]
    5308:	add	x16, x16, #0x30
    530c:	br	x17

0000000000005310 <pipe@plt>:
    5310:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5314:	ldr	x17, [x16, #56]
    5318:	add	x16, x16, #0x38
    531c:	br	x17

0000000000005320 <dup2@plt>:
    5320:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5324:	ldr	x17, [x16, #64]
    5328:	add	x16, x16, #0x40
    532c:	br	x17

0000000000005330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@plt>:
    5330:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5334:	ldr	x17, [x16, #72]
    5338:	add	x16, x16, #0x48
    533c:	br	x17

0000000000005340 <xre_compile_fastmap@plt>:
    5340:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5344:	ldr	x17, [x16, #80]
    5348:	add	x16, x16, #0x50
    534c:	br	x17

0000000000005350 <_ZNSt8ios_baseC2Ev@plt>:
    5350:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5354:	ldr	x17, [x16, #88]
    5358:	add	x16, x16, #0x58
    535c:	br	x17

0000000000005360 <strlen@plt>:
    5360:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5364:	ldr	x17, [x16, #96]
    5368:	add	x16, x16, #0x60
    536c:	br	x17

0000000000005370 <fprintf@plt>:
    5370:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5374:	ldr	x17, [x16, #104]
    5378:	add	x16, x16, #0x68
    537c:	br	x17

0000000000005380 <xregfree@plt>:
    5380:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5384:	ldr	x17, [x16, #112]
    5388:	add	x16, x16, #0x70
    538c:	br	x17

0000000000005390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>:
    5390:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5394:	ldr	x17, [x16, #120]
    5398:	add	x16, x16, #0x78
    539c:	br	x17

00000000000053a0 <_ZNSt8ios_baseD2Ev@plt>:
    53a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53a4:	ldr	x17, [x16, #128]
    53a8:	add	x16, x16, #0x80
    53ac:	br	x17

00000000000053b0 <waitpid@plt>:
    53b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53b4:	ldr	x17, [x16, #136]
    53b8:	add	x16, x16, #0x88
    53bc:	br	x17

00000000000053c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>:
    53c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53c4:	ldr	x17, [x16, #144]
    53c8:	add	x16, x16, #0x90
    53cc:	br	x17

00000000000053d0 <htab_create_alloc@plt>:
    53d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53d4:	ldr	x17, [x16, #152]
    53d8:	add	x16, x16, #0x98
    53dc:	br	x17

00000000000053e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>:
    53e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53e4:	ldr	x17, [x16, #160]
    53e8:	add	x16, x16, #0xa0
    53ec:	br	x17

00000000000053f0 <__cxa_begin_catch@plt>:
    53f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53f4:	ldr	x17, [x16, #168]
    53f8:	add	x16, x16, #0xa8
    53fc:	br	x17

0000000000005400 <xstrdup@plt>:
    5400:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5404:	ldr	x17, [x16, #176]
    5408:	add	x16, x16, #0xb0
    540c:	br	x17

0000000000005410 <memcmp@plt>:
    5410:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5414:	ldr	x17, [x16, #184]
    5418:	add	x16, x16, #0xb8
    541c:	br	x17

0000000000005420 <_ZSt20__throw_length_errorPKc@plt>:
    5420:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5424:	ldr	x17, [x16, #192]
    5428:	add	x16, x16, #0xc0
    542c:	br	x17

0000000000005430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>:
    5430:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5434:	ldr	x17, [x16, #200]
    5438:	add	x16, x16, #0xc8
    543c:	br	x17

0000000000005440 <free@plt>:
    5440:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5444:	ldr	x17, [x16, #208]
    5448:	add	x16, x16, #0xd0
    544c:	br	x17

0000000000005450 <memset@plt>:
    5450:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5454:	ldr	x17, [x16, #216]
    5458:	add	x16, x16, #0xd8
    545c:	br	x17

0000000000005460 <__cxa_finalize@plt>:
    5460:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5464:	ldr	x17, [x16, #224]
    5468:	add	x16, x16, #0xe0
    546c:	br	x17

0000000000005470 <realloc@plt>:
    5470:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5474:	ldr	x17, [x16, #232]
    5478:	add	x16, x16, #0xe8
    547c:	br	x17

0000000000005480 <xregexec@plt>:
    5480:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5484:	ldr	x17, [x16, #240]
    5488:	add	x16, x16, #0xf0
    548c:	br	x17

0000000000005490 <_exit@plt>:
    5490:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5494:	ldr	x17, [x16, #248]
    5498:	add	x16, x16, #0xf8
    549c:	br	x17

00000000000054a0 <htab_find_slot_with_hash@plt>:
    54a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    54a4:	ldr	x17, [x16, #256]
    54a8:	add	x16, x16, #0x100
    54ac:	br	x17

00000000000054b0 <htab_create_typed_alloc@plt>:
    54b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    54b4:	ldr	x17, [x16, #264]
    54b8:	add	x16, x16, #0x108
    54bc:	br	x17

00000000000054c0 <read@plt>:
    54c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    54c4:	ldr	x17, [x16, #272]
    54c8:	add	x16, x16, #0x110
    54cc:	br	x17

00000000000054d0 <_ZSt19__throw_logic_errorPKc@plt>:
    54d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    54d4:	ldr	x17, [x16, #280]
    54d8:	add	x16, x16, #0x118
    54dc:	br	x17

00000000000054e0 <htab_find@plt>:
    54e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    54e4:	ldr	x17, [x16, #288]
    54e8:	add	x16, x16, #0x120
    54ec:	br	x17

00000000000054f0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>:
    54f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    54f4:	ldr	x17, [x16, #296]
    54f8:	add	x16, x16, #0x128
    54fc:	br	x17

0000000000005500 <closedir@plt>:
    5500:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5504:	ldr	x17, [x16, #304]
    5508:	add	x16, x16, #0x130
    550c:	br	x17

0000000000005510 <concat@plt>:
    5510:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5514:	ldr	x17, [x16, #312]
    5518:	add	x16, x16, #0x138
    551c:	br	x17

0000000000005520 <xmalloc_failed@plt>:
    5520:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5524:	ldr	x17, [x16, #320]
    5528:	add	x16, x16, #0x140
    552c:	br	x17

0000000000005530 <htab_hash_string@plt>:
    5530:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5534:	ldr	x17, [x16, #328]
    5538:	add	x16, x16, #0x148
    553c:	br	x17

0000000000005540 <_ZdlPv@plt>:
    5540:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5544:	ldr	x17, [x16, #336]
    5548:	add	x16, x16, #0x150
    554c:	br	x17

0000000000005550 <_Znwm@plt>:
    5550:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5554:	ldr	x17, [x16, #344]
    5558:	add	x16, x16, #0x158
    555c:	br	x17

0000000000005560 <_ZdlPvm@plt>:
    5560:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5564:	ldr	x17, [x16, #352]
    5568:	add	x16, x16, #0x160
    556c:	br	x17

0000000000005570 <readdir@plt>:
    5570:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5574:	ldr	x17, [x16, #360]
    5578:	add	x16, x16, #0x168
    557c:	br	x17

0000000000005580 <opendir@plt>:
    5580:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5584:	ldr	x17, [x16, #368]
    5588:	add	x16, x16, #0x170
    558c:	br	x17

0000000000005590 <__ctype_b_loc@plt>:
    5590:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5594:	ldr	x17, [x16, #376]
    5598:	add	x16, x16, #0x178
    559c:	br	x17

00000000000055a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>:
    55a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    55a4:	ldr	x17, [x16, #384]
    55a8:	add	x16, x16, #0x180
    55ac:	br	x17

00000000000055b0 <snprintf@plt>:
    55b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    55b4:	ldr	x17, [x16, #392]
    55b8:	add	x16, x16, #0x188
    55bc:	br	x17

00000000000055c0 <xre_search@plt>:
    55c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    55c4:	ldr	x17, [x16, #400]
    55c8:	add	x16, x16, #0x190
    55cc:	br	x17

00000000000055d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>:
    55d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    55d4:	ldr	x17, [x16, #408]
    55d8:	add	x16, x16, #0x198
    55dc:	br	x17

00000000000055e0 <sbrk@plt>:
    55e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    55e4:	ldr	x17, [x16, #416]
    55e8:	add	x16, x16, #0x1a0
    55ec:	br	x17

00000000000055f0 <htab_remove_elt_with_hash@plt>:
    55f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    55f4:	ldr	x17, [x16, #424]
    55f8:	add	x16, x16, #0x1a8
    55fc:	br	x17

0000000000005600 <htab_find_slot@plt>:
    5600:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5604:	ldr	x17, [x16, #432]
    5608:	add	x16, x16, #0x1b0
    560c:	br	x17

0000000000005610 <_ZdaPv@plt>:
    5610:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5614:	ldr	x17, [x16, #440]
    5618:	add	x16, x16, #0x1b8
    561c:	br	x17

0000000000005620 <__errno_location@plt>:
    5620:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5624:	ldr	x17, [x16, #448]
    5628:	add	x16, x16, #0x1c0
    562c:	br	x17

0000000000005630 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm@plt>:
    5630:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5634:	ldr	x17, [x16, #456]
    5638:	add	x16, x16, #0x1c8
    563c:	br	x17

0000000000005640 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>:
    5640:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5644:	ldr	x17, [x16, #464]
    5648:	add	x16, x16, #0x1d0
    564c:	br	x17

0000000000005650 <__ctype_tolower_loc@plt>:
    5650:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5654:	ldr	x17, [x16, #472]
    5658:	add	x16, x16, #0x1d8
    565c:	br	x17

0000000000005660 <htab_traverse_noresize@plt>:
    5660:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5664:	ldr	x17, [x16, #480]
    5668:	add	x16, x16, #0x1e0
    566c:	br	x17

0000000000005670 <xmalloc@plt>:
    5670:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5674:	ldr	x17, [x16, #488]
    5678:	add	x16, x16, #0x1e8
    567c:	br	x17

0000000000005680 <fork@plt>:
    5680:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5684:	ldr	x17, [x16, #496]
    5688:	add	x16, x16, #0x1f0
    568c:	br	x17

0000000000005690 <_ZNSt6localeD1Ev@plt>:
    5690:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5694:	ldr	x17, [x16, #504]
    5698:	add	x16, x16, #0x1f8
    569c:	br	x17

00000000000056a0 <__cxa_throw_bad_array_new_length@plt>:
    56a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    56a4:	ldr	x17, [x16, #512]
    56a8:	add	x16, x16, #0x200
    56ac:	br	x17

00000000000056b0 <close@plt>:
    56b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    56b4:	ldr	x17, [x16, #520]
    56b8:	add	x16, x16, #0x208
    56bc:	br	x17

00000000000056c0 <strcmp@plt>:
    56c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    56c4:	ldr	x17, [x16, #528]
    56c8:	add	x16, x16, #0x210
    56cc:	br	x17

00000000000056d0 <__cxa_rethrow@plt>:
    56d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    56d4:	ldr	x17, [x16, #536]
    56d8:	add	x16, x16, #0x218
    56dc:	br	x17

00000000000056e0 <_ZSt24__throw_out_of_range_fmtPKcz@plt>:
    56e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    56e4:	ldr	x17, [x16, #544]
    56e8:	add	x16, x16, #0x220
    56ec:	br	x17

00000000000056f0 <write@plt>:
    56f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    56f4:	ldr	x17, [x16, #552]
    56f8:	add	x16, x16, #0x228
    56fc:	br	x17

0000000000005700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>:
    5700:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5704:	ldr	x17, [x16, #560]
    5708:	add	x16, x16, #0x230
    570c:	br	x17

0000000000005710 <malloc@plt>:
    5710:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5714:	ldr	x17, [x16, #568]
    5718:	add	x16, x16, #0x238
    571c:	br	x17

0000000000005720 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>:
    5720:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5724:	ldr	x17, [x16, #576]
    5728:	add	x16, x16, #0x240
    572c:	br	x17

0000000000005730 <xexit@plt>:
    5730:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5734:	ldr	x17, [x16, #584]
    5738:	add	x16, x16, #0x248
    573c:	br	x17

0000000000005740 <abort@plt>:
    5740:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5744:	ldr	x17, [x16, #592]
    5748:	add	x16, x16, #0x250
    574c:	br	x17

0000000000005750 <getenv@plt>:
    5750:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5754:	ldr	x17, [x16, #600]
    5758:	add	x16, x16, #0x258
    575c:	br	x17

0000000000005760 <__cxa_end_catch@plt>:
    5760:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5764:	ldr	x17, [x16, #608]
    5768:	add	x16, x16, #0x260
    576c:	br	x17

0000000000005770 <_ZnamRKSt9nothrow_t@plt>:
    5770:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5774:	ldr	x17, [x16, #616]
    5778:	add	x16, x16, #0x268
    577c:	br	x17

0000000000005780 <__gxx_personality_v0@plt>:
    5780:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5784:	ldr	x17, [x16, #624]
    5788:	add	x16, x16, #0x270
    578c:	br	x17

0000000000005790 <htab_find_with_hash@plt>:
    5790:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5794:	ldr	x17, [x16, #632]
    5798:	add	x16, x16, #0x278
    579c:	br	x17

00000000000057a0 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>:
    57a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    57a4:	ldr	x17, [x16, #640]
    57a8:	add	x16, x16, #0x280
    57ac:	br	x17

00000000000057b0 <xregerror@plt>:
    57b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    57b4:	ldr	x17, [x16, #648]
    57b8:	add	x16, x16, #0x288
    57bc:	br	x17

00000000000057c0 <exit@plt>:
    57c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    57c4:	ldr	x17, [x16, #656]
    57c8:	add	x16, x16, #0x290
    57cc:	br	x17

00000000000057d0 <htab_delete@plt>:
    57d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    57d4:	ldr	x17, [x16, #664]
    57d8:	add	x16, x16, #0x298
    57dc:	br	x17

00000000000057e0 <_Unwind_Resume@plt>:
    57e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    57e4:	ldr	x17, [x16, #672]
    57e8:	add	x16, x16, #0x2a0
    57ec:	br	x17

00000000000057f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    57f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    57f4:	ldr	x17, [x16, #680]
    57f8:	add	x16, x16, #0x2a8
    57fc:	br	x17

0000000000005800 <xre_search_2@plt>:
    5800:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5804:	ldr	x17, [x16, #688]
    5808:	add	x16, x16, #0x2b0
    580c:	br	x17

0000000000005810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@plt>:
    5810:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5814:	ldr	x17, [x16, #696]
    5818:	add	x16, x16, #0x2b8
    581c:	br	x17

0000000000005820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>:
    5820:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5824:	ldr	x17, [x16, #704]
    5828:	add	x16, x16, #0x2c0
    582c:	br	x17

0000000000005830 <__gmon_start__@plt>:
    5830:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5834:	ldr	x17, [x16, #712]
    5838:	add	x16, x16, #0x2c8
    583c:	br	x17

0000000000005840 <_ZNSt6localeC1Ev@plt>:
    5840:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5844:	ldr	x17, [x16, #720]
    5848:	add	x16, x16, #0x2d0
    584c:	br	x17

Disassembly of section .text:

0000000000005850 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base-0x728>:
    5850:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    5854:	ldr	x0, [x0, #3960]
    5858:	cbz	x0, 5860 <_ZNSt6localeC1Ev@plt+0x20>
    585c:	b	5830 <__gmon_start__@plt>
    5860:	ret
    5864:	nop
    5868:	adrp	x0, 2b000 <xexit@@Base+0x15e10>
    586c:	add	x0, x0, #0x5f0
    5870:	adrp	x1, 2b000 <xexit@@Base+0x15e10>
    5874:	add	x1, x1, #0x5f0
    5878:	cmp	x1, x0
    587c:	b.eq	5894 <_ZNSt6localeC1Ev@plt+0x54>  // b.none
    5880:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    5884:	ldr	x1, [x1, #3904]
    5888:	cbz	x1, 5894 <_ZNSt6localeC1Ev@plt+0x54>
    588c:	mov	x16, x1
    5890:	br	x16
    5894:	ret
    5898:	adrp	x0, 2b000 <xexit@@Base+0x15e10>
    589c:	add	x0, x0, #0x5f0
    58a0:	adrp	x1, 2b000 <xexit@@Base+0x15e10>
    58a4:	add	x1, x1, #0x5f0
    58a8:	sub	x1, x1, x0
    58ac:	lsr	x2, x1, #63
    58b0:	add	x1, x2, x1, asr #3
    58b4:	cmp	xzr, x1, asr #1
    58b8:	asr	x1, x1, #1
    58bc:	b.eq	58d4 <_ZNSt6localeC1Ev@plt+0x94>  // b.none
    58c0:	adrp	x2, 2a000 <xexit@@Base+0x14e10>
    58c4:	ldr	x2, [x2, #3992]
    58c8:	cbz	x2, 58d4 <_ZNSt6localeC1Ev@plt+0x94>
    58cc:	mov	x16, x2
    58d0:	br	x16
    58d4:	ret
    58d8:	stp	x29, x30, [sp, #-32]!
    58dc:	mov	x29, sp
    58e0:	str	x19, [sp, #16]
    58e4:	adrp	x19, 2b000 <xexit@@Base+0x15e10>
    58e8:	ldrb	w0, [x19, #1520]
    58ec:	cbnz	w0, 5914 <_ZNSt6localeC1Ev@plt+0xd4>
    58f0:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    58f4:	ldr	x0, [x0, #3408]
    58f8:	cbz	x0, 5908 <_ZNSt6localeC1Ev@plt+0xc8>
    58fc:	adrp	x0, 2b000 <xexit@@Base+0x15e10>
    5900:	ldr	x0, [x0, #728]
    5904:	bl	5460 <__cxa_finalize@plt>
    5908:	bl	5868 <_ZNSt6localeC1Ev@plt+0x28>
    590c:	mov	w0, #0x1                   	// #1
    5910:	strb	w0, [x19, #1520]
    5914:	ldr	x19, [sp, #16]
    5918:	ldp	x29, x30, [sp], #32
    591c:	ret
    5920:	b	5898 <_ZNSt6localeC1Ev@plt+0x58>
    5924:	nop
    5928:	stp	x29, x30, [sp, #-240]!
    592c:	mov	x29, sp
    5930:	stp	x19, x20, [sp, #16]
    5934:	stp	x21, x22, [sp, #32]
    5938:	mov	x22, x0
    593c:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    5940:	add	x0, x0, #0x260
    5944:	stp	x23, x24, [sp, #48]
    5948:	mov	x24, x1
    594c:	bl	5750 <getenv@plt>
    5950:	cbz	x0, 5df4 <_ZNSt6localeC1Ev@plt+0x5b4>
    5954:	add	x21, sp, #0xc8
    5958:	stp	x25, x26, [sp, #64]
    595c:	add	x1, x21, #0x10
    5960:	add	x25, sp, #0x88
    5964:	add	x26, sp, #0xa8
    5968:	add	x20, x25, #0x10
    596c:	add	x23, x26, #0x10
    5970:	add	x19, sp, #0x68
    5974:	stp	x27, x28, [sp, #80]
    5978:	mov	x27, x0
    597c:	str	x1, [sp, #200]
    5980:	bl	5360 <strlen@plt>
    5984:	mov	x1, x27
    5988:	add	x2, x27, x0
    598c:	mov	w3, #0x0                   	// #0
    5990:	mov	x0, x21
    5994:	mov	x27, #0x0                   	// #0
    5998:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    599c:	str	xzr, [sp, #232]
    59a0:	mov	x2, x27
    59a4:	mov	w1, #0x3a                  	// #58
    59a8:	mov	x0, x21
    59ac:	bl	5630 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm@plt>
    59b0:	add	x1, x19, #0x10
    59b4:	stp	x1, xzr, [sp, #104]
    59b8:	cmn	x0, #0x1
    59bc:	strb	wzr, [sp, #120]
    59c0:	ldr	x2, [sp, #208]
    59c4:	b.eq	5c80 <_ZNSt6localeC1Ev@plt+0x440>  // b.none
    59c8:	add	x1, x0, #0x1
    59cc:	str	x1, [sp, #232]
    59d0:	sub	x0, x0, x27
    59d4:	cmp	x27, x2
    59d8:	b.hi	5e98 <_ZNSt6localeC1Ev@plt+0x658>  // b.pmore
    59dc:	sub	x2, x2, x27
    59e0:	mov	w3, #0x0                   	// #0
    59e4:	ldr	x1, [sp, #200]
    59e8:	cmp	x2, x0
    59ec:	csel	x2, x2, x0, ls  // ls = plast
    59f0:	mov	x0, x25
    59f4:	add	x1, x1, x27
    59f8:	str	x20, [sp, #136]
    59fc:	add	x2, x1, x2
    5a00:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    5a04:	ldp	x1, x2, [sp, #136]
    5a08:	ldr	x0, [sp, #104]
    5a0c:	cmp	x1, x20
    5a10:	b.eq	5d28 <_ZNSt6localeC1Ev@plt+0x4e8>  // b.none
    5a14:	stp	x1, x2, [sp, #104]
    5a18:	add	x3, x19, #0x10
    5a1c:	cmp	x0, x3
    5a20:	ldr	x3, [sp, #152]
    5a24:	b.eq	5d54 <_ZNSt6localeC1Ev@plt+0x514>  // b.none
    5a28:	ldr	x1, [sp, #120]
    5a2c:	str	x3, [sp, #120]
    5a30:	cbz	x0, 5d58 <_ZNSt6localeC1Ev@plt+0x518>
    5a34:	str	x0, [sp, #136]
    5a38:	str	x1, [sp, #152]
    5a3c:	str	xzr, [sp, #144]
    5a40:	strb	wzr, [x0]
    5a44:	ldr	x0, [sp, #136]
    5a48:	cmp	x0, x20
    5a4c:	b.eq	5a54 <_ZNSt6localeC1Ev@plt+0x214>  // b.none
    5a50:	bl	5540 <_ZdlPv@plt>
    5a54:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    5a58:	mov	x0, x19
    5a5c:	add	x1, x1, #0xe10
    5a60:	bl	5330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@plt>
    5a64:	cbz	w0, 5d08 <_ZNSt6localeC1Ev@plt+0x4c8>
    5a68:	ldr	x0, [sp, #104]
    5a6c:	bl	5580 <opendir@plt>
    5a70:	mov	x27, x0
    5a74:	cbz	x27, 5c28 <_ZNSt6localeC1Ev@plt+0x3e8>
    5a78:	mov	x0, x27
    5a7c:	bl	5570 <readdir@plt>
    5a80:	cbz	x0, 5c20 <_ZNSt6localeC1Ev@plt+0x3e0>
    5a84:	add	x28, x0, #0x13
    5a88:	mov	w4, #0x0                   	// #0
    5a8c:	mov	x1, x28
    5a90:	mov	x0, x22
    5a94:	mov	x3, #0x0                   	// #0
    5a98:	mov	x2, #0x0                   	// #0
    5a9c:	bl	5480 <xregexec@plt>
    5aa0:	cbnz	w0, 5a74 <_ZNSt6localeC1Ev@plt+0x234>
    5aa4:	ldp	x23, x20, [sp, #104]
    5aa8:	add	x22, sp, #0x88
    5aac:	add	x0, x22, #0x10
    5ab0:	str	x0, [sp, #136]
    5ab4:	cmn	x23, x20
    5ab8:	ccmp	x23, #0x0, #0x0, ne  // ne = any
    5abc:	b.eq	5edc <_ZNSt6localeC1Ev@plt+0x69c>  // b.none
    5ac0:	str	x20, [sp, #168]
    5ac4:	cmp	x20, #0xf
    5ac8:	b.hi	5d90 <_ZNSt6localeC1Ev@plt+0x550>  // b.pmore
    5acc:	cmp	x20, #0x1
    5ad0:	b.ne	5e10 <_ZNSt6localeC1Ev@plt+0x5d0>  // b.any
    5ad4:	ldrb	w2, [x23]
    5ad8:	mov	x1, x0
    5adc:	strb	w2, [sp, #152]
    5ae0:	str	x20, [sp, #144]
    5ae4:	mov	x0, x22
    5ae8:	strb	wzr, [x1, x20]
    5aec:	mov	w4, #0x2f                  	// #47
    5af0:	mov	x3, #0x1                   	// #1
    5af4:	mov	x2, #0x0                   	// #0
    5af8:	ldr	x1, [sp, #144]
    5afc:	bl	5810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@plt>
    5b00:	mov	x0, x28
    5b04:	bl	5360 <strlen@plt>
    5b08:	ldr	x3, [sp, #144]
    5b0c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
    5b10:	mov	x2, x0
    5b14:	sub	x1, x1, x3
    5b18:	cmp	x0, x1
    5b1c:	b.hi	5ed0 <_ZNSt6localeC1Ev@plt+0x690>  // b.pmore
    5b20:	mov	x1, x28
    5b24:	mov	x0, x22
    5b28:	bl	5390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
    5b2c:	mov	x1, x0
    5b30:	add	x20, sp, #0xa8
    5b34:	add	x2, x20, #0x10
    5b38:	str	x2, [sp, #168]
    5b3c:	ldr	x2, [x1], #16
    5b40:	cmp	x2, x1
    5b44:	b.eq	5e1c <_ZNSt6localeC1Ev@plt+0x5dc>  // b.none
    5b48:	str	x2, [sp, #168]
    5b4c:	ldr	x2, [x0, #16]
    5b50:	str	x2, [sp, #184]
    5b54:	ldr	x2, [x0, #8]
    5b58:	str	x2, [sp, #176]
    5b5c:	stp	x1, xzr, [x0]
    5b60:	add	x2, x20, #0x10
    5b64:	strb	wzr, [x0, #16]
    5b68:	ldr	x1, [sp, #168]
    5b6c:	ldr	x0, [x24]
    5b70:	cmp	x1, x2
    5b74:	b.eq	5e28 <_ZNSt6localeC1Ev@plt+0x5e8>  // b.none
    5b78:	add	x2, x24, #0x10
    5b7c:	cmp	x0, x2
    5b80:	ldp	x3, x2, [sp, #176]
    5b84:	stp	x1, x3, [x24]
    5b88:	b.eq	5e54 <_ZNSt6localeC1Ev@plt+0x614>  // b.none
    5b8c:	ldr	x1, [x24, #16]
    5b90:	str	x2, [x24, #16]
    5b94:	cbz	x0, 5e58 <_ZNSt6localeC1Ev@plt+0x618>
    5b98:	str	x0, [sp, #168]
    5b9c:	str	x1, [sp, #184]
    5ba0:	str	xzr, [sp, #176]
    5ba4:	add	x20, x20, #0x10
    5ba8:	strb	wzr, [x0]
    5bac:	ldr	x0, [sp, #168]
    5bb0:	cmp	x0, x20
    5bb4:	b.eq	5bbc <_ZNSt6localeC1Ev@plt+0x37c>  // b.none
    5bb8:	bl	5540 <_ZdlPv@plt>
    5bbc:	ldr	x0, [sp, #136]
    5bc0:	add	x22, x22, #0x10
    5bc4:	cmp	x0, x22
    5bc8:	b.eq	5bd0 <_ZNSt6localeC1Ev@plt+0x390>  // b.none
    5bcc:	bl	5540 <_ZdlPv@plt>
    5bd0:	mov	x0, x27
    5bd4:	bl	5500 <closedir@plt>
    5bd8:	ldr	x0, [sp, #104]
    5bdc:	add	x19, x19, #0x10
    5be0:	cmp	x0, x19
    5be4:	b.eq	5bec <_ZNSt6localeC1Ev@plt+0x3ac>  // b.none
    5be8:	bl	5540 <_ZdlPv@plt>
    5bec:	ldr	x0, [sp, #200]
    5bf0:	add	x21, x21, #0x10
    5bf4:	mov	w19, #0x1                   	// #1
    5bf8:	cmp	x0, x21
    5bfc:	b.ne	5c5c <_ZNSt6localeC1Ev@plt+0x41c>  // b.any
    5c00:	mov	w0, w19
    5c04:	ldp	x19, x20, [sp, #16]
    5c08:	ldp	x21, x22, [sp, #32]
    5c0c:	ldp	x23, x24, [sp, #48]
    5c10:	ldp	x25, x26, [sp, #64]
    5c14:	ldp	x27, x28, [sp, #80]
    5c18:	ldp	x29, x30, [sp], #240
    5c1c:	ret
    5c20:	mov	x0, x27
    5c24:	bl	5500 <closedir@plt>
    5c28:	ldr	x0, [sp, #104]
    5c2c:	add	x1, x19, #0x10
    5c30:	cmp	x0, x1
    5c34:	b.eq	5c3c <_ZNSt6localeC1Ev@plt+0x3fc>  // b.none
    5c38:	bl	5540 <_ZdlPv@plt>
    5c3c:	ldr	x27, [sp, #232]
    5c40:	cmn	x27, #0x1
    5c44:	b.ne	59a0 <_ZNSt6localeC1Ev@plt+0x160>  // b.any
    5c48:	ldr	x0, [sp, #200]
    5c4c:	add	x21, x21, #0x10
    5c50:	mov	w19, #0x0                   	// #0
    5c54:	cmp	x0, x21
    5c58:	b.eq	5c00 <_ZNSt6localeC1Ev@plt+0x3c0>  // b.none
    5c5c:	bl	5540 <_ZdlPv@plt>
    5c60:	mov	w0, w19
    5c64:	ldp	x19, x20, [sp, #16]
    5c68:	ldp	x21, x22, [sp, #32]
    5c6c:	ldp	x23, x24, [sp, #48]
    5c70:	ldp	x25, x26, [sp, #64]
    5c74:	ldp	x27, x28, [sp, #80]
    5c78:	ldp	x29, x30, [sp], #240
    5c7c:	ret
    5c80:	str	x0, [sp, #232]
    5c84:	cmp	x2, x27
    5c88:	b.cc	5eb4 <_ZNSt6localeC1Ev@plt+0x674>  // b.lo, b.ul, b.last
    5c8c:	ldr	x1, [sp, #200]
    5c90:	mov	x0, x26
    5c94:	mov	w3, #0x0                   	// #0
    5c98:	str	x23, [sp, #168]
    5c9c:	add	x2, x1, x2
    5ca0:	add	x1, x1, x27
    5ca4:	bl	53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    5ca8:	ldp	x1, x2, [sp, #168]
    5cac:	ldr	x0, [sp, #104]
    5cb0:	cmp	x1, x23
    5cb4:	b.eq	5d64 <_ZNSt6localeC1Ev@plt+0x524>  // b.none
    5cb8:	stp	x1, x2, [sp, #104]
    5cbc:	add	x3, x19, #0x10
    5cc0:	cmp	x0, x3
    5cc4:	ldr	x3, [sp, #184]
    5cc8:	b.eq	5de4 <_ZNSt6localeC1Ev@plt+0x5a4>  // b.none
    5ccc:	ldr	x1, [sp, #120]
    5cd0:	str	x3, [sp, #120]
    5cd4:	cbz	x0, 5de8 <_ZNSt6localeC1Ev@plt+0x5a8>
    5cd8:	str	x0, [sp, #168]
    5cdc:	str	x1, [sp, #184]
    5ce0:	str	xzr, [sp, #176]
    5ce4:	strb	wzr, [x0]
    5ce8:	ldr	x0, [sp, #168]
    5cec:	cmp	x0, x23
    5cf0:	b.ne	5a50 <_ZNSt6localeC1Ev@plt+0x210>  // b.any
    5cf4:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    5cf8:	mov	x0, x19
    5cfc:	add	x1, x1, #0xe10
    5d00:	bl	5330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@plt>
    5d04:	cbnz	w0, 5a68 <_ZNSt6localeC1Ev@plt+0x228>
    5d08:	ldr	x2, [sp, #112]
    5d0c:	adrp	x3, 15000 <iterative_hash@@Base+0x2c8>
    5d10:	mov	x0, x19
    5d14:	add	x3, x3, #0x2b8
    5d18:	mov	x4, #0x1                   	// #1
    5d1c:	mov	x1, #0x0                   	// #0
    5d20:	bl	5700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    5d24:	b	5a68 <_ZNSt6localeC1Ev@plt+0x228>
    5d28:	cbz	x2, 5d44 <_ZNSt6localeC1Ev@plt+0x504>
    5d2c:	cmp	x2, #0x1
    5d30:	b.eq	5dc4 <_ZNSt6localeC1Ev@plt+0x584>  // b.none
    5d34:	mov	x1, x20
    5d38:	bl	52b0 <memcpy@plt>
    5d3c:	ldr	x0, [sp, #104]
    5d40:	ldr	x2, [sp, #144]
    5d44:	str	x2, [sp, #112]
    5d48:	strb	wzr, [x0, x2]
    5d4c:	ldr	x0, [sp, #136]
    5d50:	b	5a3c <_ZNSt6localeC1Ev@plt+0x1fc>
    5d54:	str	x3, [sp, #120]
    5d58:	mov	x0, x20
    5d5c:	str	x20, [sp, #136]
    5d60:	b	5a3c <_ZNSt6localeC1Ev@plt+0x1fc>
    5d64:	cbz	x2, 5d80 <_ZNSt6localeC1Ev@plt+0x540>
    5d68:	cmp	x2, #0x1
    5d6c:	b.eq	5e64 <_ZNSt6localeC1Ev@plt+0x624>  // b.none
    5d70:	mov	x1, x23
    5d74:	bl	52b0 <memcpy@plt>
    5d78:	ldr	x0, [sp, #104]
    5d7c:	ldr	x2, [sp, #176]
    5d80:	str	x2, [sp, #112]
    5d84:	strb	wzr, [x0, x2]
    5d88:	ldr	x0, [sp, #168]
    5d8c:	b	5ce0 <_ZNSt6localeC1Ev@plt+0x4a0>
    5d90:	add	x1, sp, #0xa8
    5d94:	mov	x0, x22
    5d98:	mov	x2, #0x0                   	// #0
    5d9c:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    5da0:	ldr	x1, [sp, #168]
    5da4:	str	x0, [sp, #136]
    5da8:	str	x1, [sp, #152]
    5dac:	mov	x2, x20
    5db0:	mov	x1, x23
    5db4:	bl	52b0 <memcpy@plt>
    5db8:	ldr	x1, [sp, #136]
    5dbc:	ldr	x20, [sp, #168]
    5dc0:	b	5ae0 <_ZNSt6localeC1Ev@plt+0x2a0>
    5dc4:	ldrb	w1, [sp, #152]
    5dc8:	strb	w1, [x0]
    5dcc:	ldr	x0, [sp, #104]
    5dd0:	ldr	x2, [sp, #144]
    5dd4:	str	x2, [sp, #112]
    5dd8:	strb	wzr, [x0, x2]
    5ddc:	ldr	x0, [sp, #136]
    5de0:	b	5a3c <_ZNSt6localeC1Ev@plt+0x1fc>
    5de4:	str	x3, [sp, #120]
    5de8:	mov	x0, x23
    5dec:	str	x23, [sp, #168]
    5df0:	b	5ce0 <_ZNSt6localeC1Ev@plt+0x4a0>
    5df4:	mov	w19, #0x0                   	// #0
    5df8:	mov	w0, w19
    5dfc:	ldp	x19, x20, [sp, #16]
    5e00:	ldp	x21, x22, [sp, #32]
    5e04:	ldp	x23, x24, [sp, #48]
    5e08:	ldp	x29, x30, [sp], #240
    5e0c:	ret
    5e10:	mov	x1, x0
    5e14:	cbz	x20, 5ae0 <_ZNSt6localeC1Ev@plt+0x2a0>
    5e18:	b	5dac <_ZNSt6localeC1Ev@plt+0x56c>
    5e1c:	ldp	x2, x3, [x0, #16]
    5e20:	stp	x2, x3, [sp, #184]
    5e24:	b	5b54 <_ZNSt6localeC1Ev@plt+0x314>
    5e28:	ldr	x2, [sp, #176]
    5e2c:	cbz	x2, 5e44 <_ZNSt6localeC1Ev@plt+0x604>
    5e30:	cmp	x2, #0x1
    5e34:	b.eq	5e84 <_ZNSt6localeC1Ev@plt+0x644>  // b.none
    5e38:	bl	52b0 <memcpy@plt>
    5e3c:	ldr	x0, [x24]
    5e40:	ldr	x2, [sp, #176]
    5e44:	str	x2, [x24, #8]
    5e48:	strb	wzr, [x0, x2]
    5e4c:	ldr	x0, [sp, #168]
    5e50:	b	5ba0 <_ZNSt6localeC1Ev@plt+0x360>
    5e54:	str	x2, [x24, #16]
    5e58:	add	x0, x20, #0x10
    5e5c:	str	x0, [sp, #168]
    5e60:	b	5ba0 <_ZNSt6localeC1Ev@plt+0x360>
    5e64:	ldrb	w1, [sp, #184]
    5e68:	strb	w1, [x0]
    5e6c:	ldr	x0, [sp, #104]
    5e70:	ldr	x2, [sp, #176]
    5e74:	str	x2, [sp, #112]
    5e78:	strb	wzr, [x0, x2]
    5e7c:	ldr	x0, [sp, #168]
    5e80:	b	5ce0 <_ZNSt6localeC1Ev@plt+0x4a0>
    5e84:	ldrb	w1, [sp, #184]
    5e88:	strb	w1, [x0]
    5e8c:	ldr	x0, [x24]
    5e90:	ldr	x2, [sp, #176]
    5e94:	b	5e44 <_ZNSt6localeC1Ev@plt+0x604>
    5e98:	mov	x3, x2
    5e9c:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    5ea0:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    5ea4:	mov	x2, x27
    5ea8:	add	x1, x1, #0x268
    5eac:	add	x0, x0, #0x280
    5eb0:	bl	56e0 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
    5eb4:	mov	x3, x2
    5eb8:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    5ebc:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    5ec0:	mov	x2, x27
    5ec4:	add	x1, x1, #0x268
    5ec8:	add	x0, x0, #0x280
    5ecc:	bl	56e0 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
    5ed0:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    5ed4:	add	x0, x0, #0x2c0
    5ed8:	bl	5420 <_ZSt20__throw_length_errorPKc@plt>
    5edc:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    5ee0:	add	x0, x0, #0x230
    5ee4:	bl	54d0 <_ZSt19__throw_logic_errorPKc@plt>
    5ee8:	mov	x1, x0
    5eec:	mov	x0, x27
    5ef0:	mov	x20, x1
    5ef4:	bl	5500 <closedir@plt>
    5ef8:	ldr	x0, [sp, #104]
    5efc:	add	x19, x19, #0x10
    5f00:	cmp	x0, x19
    5f04:	b.eq	5f0c <_ZNSt6localeC1Ev@plt+0x6cc>  // b.none
    5f08:	bl	5540 <_ZdlPv@plt>
    5f0c:	ldr	x0, [sp, #200]
    5f10:	add	x21, x21, #0x10
    5f14:	cmp	x0, x21
    5f18:	b.eq	5f20 <_ZNSt6localeC1Ev@plt+0x6e0>  // b.none
    5f1c:	bl	5540 <_ZdlPv@plt>
    5f20:	mov	x0, x20
    5f24:	bl	57e0 <_Unwind_Resume@plt>
    5f28:	mov	x20, x0
    5f2c:	b	5ef8 <_ZNSt6localeC1Ev@plt+0x6b8>
    5f30:	ldr	x1, [sp, #136]
    5f34:	add	x22, x22, #0x10
    5f38:	mov	x20, x0
    5f3c:	cmp	x1, x22
    5f40:	b.eq	5f4c <_ZNSt6localeC1Ev@plt+0x70c>  // b.none
    5f44:	mov	x0, x1
    5f48:	bl	5540 <_ZdlPv@plt>
    5f4c:	mov	x1, x20
    5f50:	b	5eec <_ZNSt6localeC1Ev@plt+0x6ac>
    5f54:	ldr	x1, [sp, #104]
    5f58:	add	x19, x19, #0x10
    5f5c:	mov	x20, x0
    5f60:	cmp	x1, x19
    5f64:	b.eq	5f0c <_ZNSt6localeC1Ev@plt+0x6cc>  // b.none
    5f68:	mov	x0, x1
    5f6c:	bl	5540 <_ZdlPv@plt>
    5f70:	b	5f0c <_ZNSt6localeC1Ev@plt+0x6cc>
    5f74:	b	5f30 <_ZNSt6localeC1Ev@plt+0x6f0>

0000000000005f78 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base>:
    5f78:	stp	x29, x30, [sp, #-64]!
    5f7c:	cmp	x2, #0x0
    5f80:	ccmp	x1, #0x0, #0x0, ne  // ne = any
    5f84:	mov	x29, sp
    5f88:	stp	x19, x20, [sp, #16]
    5f8c:	str	x21, [sp, #32]
    5f90:	b.eq	6040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0xc8>  // b.none
    5f94:	sub	x19, x2, x1
    5f98:	str	x19, [sp, #56]
    5f9c:	mov	x21, x1
    5fa0:	mov	x20, x0
    5fa4:	cmp	x19, #0xf
    5fa8:	b.hi	5ffc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x84>  // b.pmore
    5fac:	cmp	x19, #0x1
    5fb0:	ldr	x0, [x0]
    5fb4:	b.ne	5fe0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x68>  // b.any
    5fb8:	ldrb	w1, [x1]
    5fbc:	strb	w1, [x0]
    5fc0:	ldr	x0, [x20]
    5fc4:	ldr	x19, [sp, #56]
    5fc8:	str	x19, [x20, #8]
    5fcc:	strb	wzr, [x0, x19]
    5fd0:	ldp	x19, x20, [sp, #16]
    5fd4:	ldr	x21, [sp, #32]
    5fd8:	ldp	x29, x30, [sp], #64
    5fdc:	ret
    5fe0:	cbnz	x19, 6014 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x9c>
    5fe4:	str	x19, [x20, #8]
    5fe8:	strb	wzr, [x0, x19]
    5fec:	ldp	x19, x20, [sp, #16]
    5ff0:	ldr	x21, [sp, #32]
    5ff4:	ldp	x29, x30, [sp], #64
    5ff8:	ret
    5ffc:	add	x1, sp, #0x38
    6000:	mov	x2, #0x0                   	// #0
    6004:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6008:	str	x0, [x20]
    600c:	ldr	x1, [sp, #56]
    6010:	str	x1, [x20, #16]
    6014:	mov	x2, x19
    6018:	mov	x1, x21
    601c:	bl	52b0 <memcpy@plt>
    6020:	ldr	x0, [x20]
    6024:	ldr	x19, [sp, #56]
    6028:	str	x19, [x20, #8]
    602c:	strb	wzr, [x0, x19]
    6030:	ldp	x19, x20, [sp, #16]
    6034:	ldr	x21, [sp, #32]
    6038:	ldp	x29, x30, [sp], #64
    603c:	ret
    6040:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    6044:	add	x0, x0, #0x230
    6048:	bl	54d0 <_ZSt19__throw_logic_errorPKc@plt>
    604c:	nop
    6050:	stp	x1, x2, [x0, #24]
    6054:	str	x3, [x0, #40]
    6058:	ret
    605c:	nop
    6060:	cmp	w1, #0x0
    6064:	cset	w1, ne  // ne = any
    6068:	strb	w1, [x0, #120]
    606c:	ret
    6070:	stp	x1, x2, [x0, #48]
    6074:	ret
    6078:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    607c:	add	x0, x0, #0x2d8
    6080:	b	5400 <xstrdup@plt>
    6084:	nop
    6088:	stp	x29, x30, [sp, #-32]!
    608c:	mov	x29, sp
    6090:	stp	x19, x20, [sp, #16]
    6094:	mov	x19, x0
    6098:	mov	x20, x1
    609c:	mov	x0, x1
    60a0:	bl	5360 <strlen@plt>
    60a4:	mov	x3, x20
    60a8:	mov	x4, x0
    60ac:	add	x0, x19, #0x58
    60b0:	mov	x1, #0x0                   	// #0
    60b4:	ldr	x2, [x19, #96]
    60b8:	ldp	x19, x20, [sp, #16]
    60bc:	ldp	x29, x30, [sp], #32
    60c0:	b	5700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    60c4:	nop
    60c8:	stp	x29, x30, [sp, #-32]!
    60cc:	mov	x29, sp
    60d0:	stp	x19, x20, [sp, #16]
    60d4:	mov	x19, x0
    60d8:	mov	x20, x1
    60dc:	ldr	x0, [x0, #8]
    60e0:	ldrb	w0, [x0, #120]
    60e4:	cbnz	w0, 6104 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x18c>
    60e8:	add	x1, x19, #0x10
    60ec:	mov	x0, x20
    60f0:	bl	5430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    60f4:	mov	x0, #0x0                   	// #0
    60f8:	ldp	x19, x20, [sp, #16]
    60fc:	ldp	x29, x30, [sp], #32
    6100:	ret
    6104:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    6108:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    610c:	ldr	x2, [x19, #16]
    6110:	add	x1, x1, #0x2f8
    6114:	ldr	x0, [x0, #3968]
    6118:	ldr	x0, [x0]
    611c:	bl	5370 <fprintf@plt>
    6120:	add	x1, x19, #0x10
    6124:	mov	x0, x20
    6128:	bl	5430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    612c:	mov	x0, #0x0                   	// #0
    6130:	ldp	x19, x20, [sp, #16]
    6134:	ldp	x29, x30, [sp], #32
    6138:	ret
    613c:	nop
    6140:	stp	x29, x30, [sp, #-64]!
    6144:	mov	x1, #0x2                   	// #2
    6148:	mov	x29, sp
    614c:	stp	x19, x20, [sp, #16]
    6150:	mov	x20, x0
    6154:	str	x21, [sp, #32]
    6158:	str	xzr, [sp, #48]
    615c:	bl	dce8 <gcc_cp_fe_context@@Base+0x3fc8>
    6160:	mov	w19, w0
    6164:	cbnz	w0, 6188 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x210>
    6168:	ldr	x0, [sp, #48]
    616c:	cbz	x0, 6174 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x1fc>
    6170:	bl	5610 <_ZdaPv@plt>
    6174:	mov	w0, w19
    6178:	ldp	x19, x20, [sp, #16]
    617c:	ldr	x21, [sp, #32]
    6180:	ldp	x29, x30, [sp], #64
    6184:	ret
    6188:	add	x1, sp, #0x38
    618c:	mov	x0, x20
    6190:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    6194:	mov	w19, w0
    6198:	cbz	w0, 6168 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x1f0>
    619c:	add	x1, sp, #0x30
    61a0:	mov	x0, x20
    61a4:	ldr	x21, [sp, #56]
    61a8:	bl	ddc0 <gcc_cp_fe_context@@Base+0x40a0>
    61ac:	mov	w19, w0
    61b0:	ldr	x0, [sp, #48]
    61b4:	cbz	w19, 616c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x1f4>
    61b8:	ldr	x1, [x20, #24]
    61bc:	mov	x3, x0
    61c0:	mov	w2, w21
    61c4:	ldr	x4, [x1, #24]
    61c8:	ldr	x0, [x1, #40]
    61cc:	blr	x4
    61d0:	mov	x0, x20
    61d4:	mov	w1, #0x52                  	// #82
    61d8:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    61dc:	mov	w19, w0
    61e0:	cbz	w0, 6168 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x1f0>
    61e4:	mov	x0, x20
    61e8:	mov	x1, #0x1                   	// #1
    61ec:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    61f0:	mov	w19, w0
    61f4:	ldr	x0, [sp, #48]
    61f8:	b	616c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x1f4>
    61fc:	ldr	x1, [sp, #48]
    6200:	mov	x19, x0
    6204:	cbz	x1, 6210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x298>
    6208:	mov	x0, x1
    620c:	bl	5610 <_ZdaPv@plt>
    6210:	mov	x0, x19
    6214:	bl	57e0 <_Unwind_Resume@plt>
    6218:	stp	x29, x30, [sp, #-64]!
    621c:	mov	x1, #0x1                   	// #1
    6220:	mov	x29, sp
    6224:	stp	x19, x20, [sp, #16]
    6228:	mov	x20, x0
    622c:	str	x21, [sp, #32]
    6230:	str	xzr, [sp, #56]
    6234:	bl	dce8 <gcc_cp_fe_context@@Base+0x3fc8>
    6238:	mov	w19, w0
    623c:	cbnz	w0, 6260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x2e8>
    6240:	ldr	x0, [sp, #56]
    6244:	cbz	x0, 624c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x2d4>
    6248:	bl	5610 <_ZdaPv@plt>
    624c:	mov	w0, w19
    6250:	ldp	x19, x20, [sp, #16]
    6254:	ldr	x21, [sp, #32]
    6258:	ldp	x29, x30, [sp], #64
    625c:	ret
    6260:	add	x1, sp, #0x38
    6264:	mov	x0, x20
    6268:	bl	ddc0 <gcc_cp_fe_context@@Base+0x40a0>
    626c:	mov	w19, w0
    6270:	ldr	x0, [sp, #56]
    6274:	cbz	w19, 6244 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x2cc>
    6278:	ldr	x1, [x20, #24]
    627c:	mov	x2, x0
    6280:	ldp	x3, x0, [x1, #32]
    6284:	blr	x3
    6288:	mov	x21, x0
    628c:	mov	w1, #0x52                  	// #82
    6290:	mov	x0, x20
    6294:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    6298:	mov	w19, w0
    629c:	cbz	w0, 6240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x2c8>
    62a0:	mov	x1, x21
    62a4:	mov	x0, x20
    62a8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    62ac:	mov	w19, w0
    62b0:	ldr	x0, [sp, #56]
    62b4:	b	6244 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x2cc>
    62b8:	ldr	x1, [sp, #56]
    62bc:	mov	x19, x0
    62c0:	cbz	x1, 62cc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x354>
    62c4:	mov	x0, x1
    62c8:	bl	5610 <_ZdaPv@plt>
    62cc:	mov	x0, x19
    62d0:	bl	57e0 <_Unwind_Resume@plt>
    62d4:	nop
    62d8:	stp	x29, x30, [sp, #-48]!
    62dc:	mov	x29, sp
    62e0:	str	x19, [sp, #16]
    62e4:	mov	x19, x1
    62e8:	add	x1, sp, #0x28
    62ec:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    62f0:	cbz	w0, 6300 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x388>
    62f4:	ldr	x1, [sp, #40]
    62f8:	mov	w0, #0x1                   	// #1
    62fc:	str	x1, [x19]
    6300:	ldr	x19, [sp, #16]
    6304:	ldp	x29, x30, [sp], #48
    6308:	ret
    630c:	nop
    6310:	stp	x29, x30, [sp, #-48]!
    6314:	mov	x29, sp
    6318:	stp	x19, x20, [sp, #16]
    631c:	mov	x20, x1
    6320:	mov	x19, x0
    6324:	mov	w1, #0x1                   	// #1
    6328:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    632c:	cbnz	w0, 633c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x3c4>
    6330:	ldp	x19, x20, [sp, #16]
    6334:	ldp	x29, x30, [sp], #48
    6338:	ret
    633c:	mov	x0, x19
    6340:	add	x1, sp, #0x28
    6344:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    6348:	cbz	w0, 6330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x3b8>
    634c:	ldr	x1, [sp, #40]
    6350:	str	x1, [x20]
    6354:	mov	w0, #0x1                   	// #1
    6358:	ldp	x19, x20, [sp, #16]
    635c:	ldp	x29, x30, [sp], #48
    6360:	ret
    6364:	nop
    6368:	stp	x29, x30, [sp, #-48]!
    636c:	mov	x29, sp
    6370:	stp	x19, x20, [sp, #16]
    6374:	mov	x20, x1
    6378:	mov	x19, x0
    637c:	mov	w1, #0x1                   	// #1
    6380:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    6384:	cbnz	w0, 6394 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x41c>
    6388:	ldp	x19, x20, [sp, #16]
    638c:	ldp	x29, x30, [sp], #48
    6390:	ret
    6394:	mov	x0, x19
    6398:	add	x1, sp, #0x28
    639c:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    63a0:	cbz	w0, 6388 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x410>
    63a4:	ldr	x1, [sp, #40]
    63a8:	str	w1, [x20]
    63ac:	mov	w0, #0x1                   	// #1
    63b0:	ldp	x19, x20, [sp, #16]
    63b4:	ldp	x29, x30, [sp], #48
    63b8:	ret
    63bc:	nop
    63c0:	stp	x29, x30, [sp, #-48]!
    63c4:	mov	x29, sp
    63c8:	str	x19, [sp, #16]
    63cc:	mov	x19, x1
    63d0:	add	x1, sp, #0x28
    63d4:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    63d8:	cbz	w0, 63e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x470>
    63dc:	ldr	x1, [sp, #40]
    63e0:	mov	w0, #0x1                   	// #1
    63e4:	str	w1, [x19]
    63e8:	ldr	x19, [sp, #16]
    63ec:	ldp	x29, x30, [sp], #48
    63f0:	ret
    63f4:	nop
    63f8:	stp	x29, x30, [sp, #-48]!
    63fc:	mov	x29, sp
    6400:	str	x19, [sp, #16]
    6404:	mov	x19, x1
    6408:	add	x1, sp, #0x28
    640c:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    6410:	cbz	w0, 6420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x4a8>
    6414:	ldr	x1, [sp, #40]
    6418:	mov	w0, #0x1                   	// #1
    641c:	str	w1, [x19]
    6420:	ldr	x19, [sp, #16]
    6424:	ldp	x29, x30, [sp], #48
    6428:	ret
    642c:	nop
    6430:	stp	x29, x30, [sp, #-48]!
    6434:	mov	x29, sp
    6438:	str	x19, [sp, #16]
    643c:	mov	x19, x1
    6440:	add	x1, sp, #0x28
    6444:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    6448:	cbz	w0, 6458 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x4e0>
    644c:	ldr	x1, [sp, #40]
    6450:	mov	w0, #0x1                   	// #1
    6454:	str	w1, [x19]
    6458:	ldr	x19, [sp, #16]
    645c:	ldp	x29, x30, [sp], #48
    6460:	ret
    6464:	nop
    6468:	stp	x29, x30, [sp, #-64]!
    646c:	mov	x29, sp
    6470:	stp	x19, x20, [sp, #16]
    6474:	mov	x19, x0
    6478:	mov	x20, x2
    647c:	stp	x21, x22, [sp, #32]
    6480:	add	x22, x0, #0x40
    6484:	mov	x21, x1
    6488:	str	x23, [sp, #48]
    648c:	add	x23, x19, #0x68
    6490:	stp	xzr, xzr, [x19, #16]
    6494:	mov	x0, #0x10                  	// #16
    6498:	stp	xzr, xzr, [x19, #32]
    649c:	stp	xzr, xzr, [x19, #48]
    64a0:	str	xzr, [x19, #64]
    64a4:	stp	xzr, xzr, [x22, #8]
    64a8:	stp	x23, xzr, [x19, #88]
    64ac:	strb	wzr, [x19, #104]
    64b0:	strb	wzr, [x19, #120]
    64b4:	bl	5550 <_Znwm@plt>
    64b8:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    64bc:	add	x3, x3, #0x418
    64c0:	ldr	x23, [sp, #48]
    64c4:	stp	x21, x20, [x19]
    64c8:	stp	x3, x19, [x0]
    64cc:	str	x0, [x19, #128]
    64d0:	ldp	x19, x20, [sp, #16]
    64d4:	ldp	x21, x22, [sp, #32]
    64d8:	ldp	x29, x30, [sp], #64
    64dc:	ret
    64e0:	ldr	x1, [x19, #88]
    64e4:	mov	x21, x0
    64e8:	cmp	x23, x1
    64ec:	b.eq	64f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x580>  // b.none
    64f0:	mov	x0, x1
    64f4:	bl	5540 <_ZdlPv@plt>
    64f8:	ldr	x22, [x22, #8]
    64fc:	ldr	x20, [x19, #64]
    6500:	cmp	x22, x20
    6504:	b.ne	651c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x5a4>  // b.any
    6508:	ldr	x0, [x19, #64]
    650c:	cbz	x0, 6514 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x59c>
    6510:	bl	5540 <_ZdlPv@plt>
    6514:	mov	x0, x21
    6518:	bl	57e0 <_Unwind_Resume@plt>
    651c:	mov	x1, x20
    6520:	ldr	x0, [x1], #16
    6524:	cmp	x0, x1
    6528:	b.eq	6530 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x5b8>  // b.none
    652c:	bl	5540 <_ZdlPv@plt>
    6530:	add	x20, x20, #0x20
    6534:	b	6500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x588>
    6538:	stp	x29, x30, [sp, #-48]!
    653c:	mov	x29, sp
    6540:	stp	x19, x20, [sp, #16]
    6544:	mov	x19, x0
    6548:	ldr	x0, [x0, #16]
    654c:	str	x21, [sp, #32]
    6550:	cbz	x0, 6560 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x5e8>
    6554:	ldr	x1, [x0]
    6558:	ldr	x1, [x1, #8]
    655c:	blr	x1
    6560:	ldr	x0, [x19, #128]
    6564:	cbz	x0, 6574 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x5fc>
    6568:	ldr	x1, [x0]
    656c:	ldr	x1, [x1, #16]
    6570:	blr	x1
    6574:	ldr	x0, [x19, #88]
    6578:	add	x1, x19, #0x68
    657c:	cmp	x0, x1
    6580:	b.eq	6588 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x610>  // b.none
    6584:	bl	5540 <_ZdlPv@plt>
    6588:	ldp	x20, x21, [x19, #64]
    658c:	cmp	x20, x21
    6590:	b.eq	65bc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x644>  // b.none
    6594:	nop
    6598:	mov	x1, x20
    659c:	add	x20, x20, #0x20
    65a0:	ldr	x0, [x1], #16
    65a4:	cmp	x0, x1
    65a8:	b.eq	65b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x638>  // b.none
    65ac:	bl	5540 <_ZdlPv@plt>
    65b0:	cmp	x21, x20
    65b4:	b.ne	6598 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x620>  // b.any
    65b8:	ldr	x21, [x19, #64]
    65bc:	cbz	x21, 65d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x65c>
    65c0:	mov	x0, x21
    65c4:	ldp	x19, x20, [sp, #16]
    65c8:	ldr	x21, [sp, #32]
    65cc:	ldp	x29, x30, [sp], #48
    65d0:	b	5540 <_ZdlPv@plt>
    65d4:	ldp	x19, x20, [sp, #16]
    65d8:	ldr	x21, [sp, #32]
    65dc:	ldp	x29, x30, [sp], #48
    65e0:	ret
    65e4:	nop
    65e8:	cbz	x0, 6614 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x69c>
    65ec:	stp	x29, x30, [sp, #-32]!
    65f0:	mov	x29, sp
    65f4:	str	x19, [sp, #16]
    65f8:	mov	x19, x0
    65fc:	bl	6538 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x5c0>
    6600:	mov	x0, x19
    6604:	mov	x1, #0x88                  	// #136
    6608:	ldr	x19, [sp, #16]
    660c:	ldp	x29, x30, [sp], #32
    6610:	b	5560 <_ZdlPvm@plt>
    6614:	ret

0000000000006618 <gcc_c_fe_context@@Base>:
    6618:	stp	x29, x30, [sp, #-32]!
    661c:	cmp	w0, #0x1
    6620:	ccmp	w1, #0x1, #0x2, ls  // ls = plast
    6624:	mov	x29, sp
    6628:	stp	x19, x20, [sp, #16]
    662c:	b.hi	665c <gcc_c_fe_context@@Base+0x44>  // b.pmore
    6630:	mov	x0, #0x88                  	// #136
    6634:	bl	5550 <_Znwm@plt>
    6638:	adrp	x2, 2a000 <xexit@@Base+0x14e10>
    663c:	add	x2, x2, #0x480
    6640:	mov	x19, x0
    6644:	add	x1, x2, #0xe0
    6648:	bl	6468 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x4f0>
    664c:	mov	x0, x19
    6650:	ldp	x19, x20, [sp, #16]
    6654:	ldp	x29, x30, [sp], #32
    6658:	ret
    665c:	mov	x19, #0x0                   	// #0
    6660:	mov	x0, x19
    6664:	ldp	x19, x20, [sp, #16]
    6668:	ldp	x29, x30, [sp], #32
    666c:	ret
    6670:	mov	x1, #0x88                  	// #136
    6674:	mov	x20, x0
    6678:	mov	x0, x19
    667c:	bl	5560 <_ZdlPvm@plt>
    6680:	mov	x0, x20
    6684:	bl	57e0 <_Unwind_Resume@plt>
    6688:	sub	sp, sp, #0x240
    668c:	stp	x29, x30, [sp]
    6690:	mov	x29, sp
    6694:	stp	x23, x24, [sp, #48]
    6698:	mov	x24, x0
    669c:	stp	x19, x20, [sp, #16]
    66a0:	add	x19, x29, #0xb8
    66a4:	add	x0, x19, #0x80
    66a8:	stp	x21, x22, [sp, #32]
    66ac:	adrp	x21, 2a000 <xexit@@Base+0x14e10>
    66b0:	stp	x25, x26, [sp, #64]
    66b4:	stp	x27, x28, [sp, #80]
    66b8:	str	x1, [x29, #96]
    66bc:	ldr	x20, [x24, #16]
    66c0:	bl	5350 <_ZNSt8ios_baseC2Ev@plt>
    66c4:	ldr	x2, [x21, #3296]
    66c8:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    66cc:	strh	wzr, [x29, #536]
    66d0:	mov	x1, #0x0                   	// #0
    66d4:	ldr	x0, [x0, #3216]
    66d8:	str	xzr, [x29, #528]
    66dc:	ldp	x23, x26, [x2, #16]
    66e0:	add	x0, x0, #0x10
    66e4:	add	x2, x29, #0x220
    66e8:	str	x0, [x29, #312]
    66ec:	str	x23, [x29, #184]
    66f0:	ldur	x0, [x23, #-24]
    66f4:	stp	xzr, xzr, [x2]
    66f8:	stp	xzr, xzr, [x2, #16]
    66fc:	str	x26, [x19, x0]
    6700:	str	xzr, [x29, #192]
    6704:	ldur	x0, [x23, #-24]
    6708:	add	x0, x19, x0
    670c:	bl	5640 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    6710:	ldr	x0, [x21, #3296]
    6714:	add	x2, x19, #0x10
    6718:	mov	x1, #0x0                   	// #0
    671c:	ldp	x25, x4, [x0, #32]
    6720:	str	x4, [x29, #128]
    6724:	ldur	x3, [x25, #-24]
    6728:	str	x25, [x29, #200]
    672c:	add	x0, x2, x3
    6730:	str	x4, [x2, x3]
    6734:	bl	5640 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    6738:	ldr	x1, [x21, #3296]
    673c:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    6740:	adrp	x21, 2a000 <xexit@@Base+0x14e10>
    6744:	adrp	x22, 2a000 <xexit@@Base+0x14e10>
    6748:	ldr	x2, [x0, #3576]
    674c:	add	x0, x19, #0x50
    6750:	ldr	x27, [x1, #8]
    6754:	add	x4, x2, #0x68
    6758:	ldr	x3, [x21, #3432]
    675c:	add	x5, x2, #0x18
    6760:	ldur	x6, [x27, #-24]
    6764:	add	x2, x2, #0x40
    6768:	ldr	x7, [x1, #48]
    676c:	add	x1, x3, #0x10
    6770:	str	x7, [x19, x6]
    6774:	str	x7, [x29, #120]
    6778:	str	x5, [x29, #184]
    677c:	stp	x2, x1, [x29, #200]
    6780:	stp	xzr, xzr, [x29, #216]
    6784:	stp	xzr, xzr, [x29, #232]
    6788:	stp	xzr, xzr, [x29, #248]
    678c:	str	x4, [x29, #312]
    6790:	bl	5840 <_ZNSt6localeC1Ev@plt>
    6794:	ldr	x2, [x22, #4048]
    6798:	add	x3, x19, #0x70
    679c:	mov	w4, #0x18                  	// #24
    67a0:	add	x1, x19, #0x18
    67a4:	add	x2, x2, #0x10
    67a8:	add	x0, x19, #0x80
    67ac:	str	x2, [x29, #208]
    67b0:	str	w4, [x29, #272]
    67b4:	stp	x3, xzr, [x29, #280]
    67b8:	strb	wzr, [x29, #296]
    67bc:	bl	5640 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    67c0:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    67c4:	add	x0, x19, #0x10
    67c8:	add	x1, x1, #0xef0
    67cc:	mov	x2, #0x1                   	// #1
    67d0:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    67d4:	cbz	x20, 6ae8 <gcc_c_fe_context@@Base+0x4d0>
    67d8:	mov	x0, x20
    67dc:	bl	5360 <strlen@plt>
    67e0:	mov	x1, x20
    67e4:	mov	x2, x0
    67e8:	add	x0, x19, #0x10
    67ec:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    67f0:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    67f4:	add	x0, x19, #0x10
    67f8:	add	x1, x1, #0x328
    67fc:	mov	x2, #0x1                   	// #1
    6800:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    6804:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    6808:	add	x28, x19, #0x10
    680c:	add	x0, x0, #0x320
    6810:	add	x1, x29, #0x96
    6814:	mov	w20, #0x67                  	// #103
    6818:	str	x1, [x29, #112]
    681c:	str	x0, [x29, #136]
    6820:	add	x0, x29, #0x97
    6824:	str	x0, [x29, #104]
    6828:	ldr	x1, [x29, #112]
    682c:	mov	x0, x28
    6830:	mov	x2, #0x1                   	// #1
    6834:	strb	w20, [x29, #150]
    6838:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    683c:	ldr	x0, [x29, #136]
    6840:	ldrb	w20, [x0, #1]!
    6844:	str	x0, [x29, #136]
    6848:	cbz	w20, 68d4 <gcc_c_fe_context@@Base+0x2bc>
    684c:	cmp	w20, #0x2e
    6850:	b.ls	689c <gcc_c_fe_context@@Base+0x284>  // b.plast
    6854:	sub	w0, w20, #0x3f
    6858:	and	w0, w0, #0xff
    685c:	cmp	w0, #0x3d
    6860:	b.hi	6828 <gcc_c_fe_context@@Base+0x210>  // b.pmore
    6864:	mov	x1, #0x1                   	// #1
    6868:	lsl	x0, x1, x0
    686c:	mov	x1, #0x1                   	// #1
    6870:	movk	x1, #0xb000, lsl #16
    6874:	movk	x1, #0x3000, lsl #48
    6878:	tst	x0, x1
    687c:	b.eq	6828 <gcc_c_fe_context@@Base+0x210>  // b.none
    6880:	ldr	x1, [x29, #104]
    6884:	mov	w3, #0x5c                  	// #92
    6888:	mov	x0, x28
    688c:	mov	x2, #0x1                   	// #1
    6890:	strb	w3, [x29, #151]
    6894:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    6898:	b	6828 <gcc_c_fe_context@@Base+0x210>
    689c:	cmp	w20, #0x23
    68a0:	b.ls	6828 <gcc_c_fe_context@@Base+0x210>  // b.plast
    68a4:	mov	x0, #0x1                   	// #1
    68a8:	mov	x1, #0x4f1000000000        	// #86930138071040
    68ac:	lsl	x0, x0, x20
    68b0:	tst	x0, x1
    68b4:	b.eq	6828 <gcc_c_fe_context@@Base+0x210>  // b.none
    68b8:	ldr	x1, [x29, #104]
    68bc:	mov	w3, #0x5c                  	// #92
    68c0:	mov	x0, x28
    68c4:	mov	x2, #0x1                   	// #1
    68c8:	strb	w3, [x29, #151]
    68cc:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    68d0:	b	6828 <gcc_c_fe_context@@Base+0x210>
    68d4:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    68d8:	add	x0, x19, #0x10
    68dc:	add	x1, x1, #0x330
    68e0:	mov	x2, #0x1                   	// #1
    68e4:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    68e8:	ldr	x0, [x29, #248]
    68ec:	add	x20, x29, #0x98
    68f0:	add	x1, x20, #0x10
    68f4:	stp	x1, xzr, [x29, #152]
    68f8:	strb	wzr, [x29, #168]
    68fc:	cbz	x0, 6b40 <gcc_c_fe_context@@Base+0x528>
    6900:	ldp	x4, x3, [x29, #232]
    6904:	cmp	x0, x4
    6908:	b.hi	6a90 <gcc_c_fe_context@@Base+0x478>  // b.pmore
    690c:	sub	x4, x4, x3
    6910:	mov	x0, x20
    6914:	mov	x2, #0x0                   	// #0
    6918:	mov	x1, #0x0                   	// #0
    691c:	bl	5700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    6920:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    6924:	add	x2, x19, #0x70
    6928:	ldr	x22, [x22, #4048]
    692c:	ldr	x1, [x0, #3576]
    6930:	add	x22, x22, #0x10
    6934:	ldr	x0, [x29, #280]
    6938:	add	x4, x1, #0x18
    693c:	add	x3, x1, #0x68
    6940:	add	x1, x1, #0x40
    6944:	str	x4, [x29, #184]
    6948:	cmp	x0, x2
    694c:	stp	x1, x22, [x29, #200]
    6950:	str	x3, [x29, #312]
    6954:	b.eq	695c <gcc_c_fe_context@@Base+0x344>  // b.none
    6958:	bl	5540 <_ZdlPv@plt>
    695c:	ldr	x21, [x21, #3432]
    6960:	add	x0, x19, #0x50
    6964:	add	x21, x21, #0x10
    6968:	str	x21, [x29, #208]
    696c:	bl	5690 <_ZNSt6localeD1Ev@plt>
    6970:	ldur	x1, [x27, #-24]
    6974:	add	x2, x29, #0xc8
    6978:	ldp	x3, x5, [x29, #120]
    697c:	add	x0, x19, #0x80
    6980:	ldur	x4, [x25, #-24]
    6984:	str	x3, [x19, x1]
    6988:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    698c:	ldur	x3, [x23, #-24]
    6990:	str	x25, [x29, #200]
    6994:	ldr	x1, [x1, #3216]
    6998:	str	x5, [x2, x4]
    699c:	str	x23, [x29, #184]
    69a0:	add	x1, x1, #0x10
    69a4:	str	x26, [x19, x3]
    69a8:	str	xzr, [x29, #192]
    69ac:	str	x1, [x29, #312]
    69b0:	bl	53a0 <_ZNSt8ios_baseD2Ev@plt>
    69b4:	ldr	x0, [x24, #8]
    69b8:	ldrb	w0, [x0, #120]
    69bc:	cbz	w0, 69dc <gcc_c_fe_context@@Base+0x3c4>
    69c0:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    69c4:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    69c8:	ldr	x2, [x29, #152]
    69cc:	add	x1, x1, #0x338
    69d0:	ldr	x0, [x0, #3968]
    69d4:	ldr	x0, [x0]
    69d8:	bl	5370 <fprintf@plt>
    69dc:	ldr	x1, [x29, #152]
    69e0:	mov	x0, x19
    69e4:	mov	w2, #0x9                   	// #9
    69e8:	bl	52d0 <xregcomp@plt>
    69ec:	mov	w21, w0
    69f0:	cbz	w0, 6aa8 <gcc_c_fe_context@@Base+0x490>
    69f4:	mov	x22, sp
    69f8:	mov	x1, x19
    69fc:	mov	x3, #0x0                   	// #0
    6a00:	mov	x2, #0x0                   	// #0
    6a04:	bl	57b0 <xregerror@plt>
    6a08:	mov	x3, x0
    6a0c:	mov	x1, x19
    6a10:	add	x2, x3, #0xf
    6a14:	mov	w0, w21
    6a18:	and	x2, x2, #0xfffffffffffffff0
    6a1c:	sub	sp, sp, x2
    6a20:	mov	x19, sp
    6a24:	mov	x2, sp
    6a28:	bl	57b0 <xregerror@plt>
    6a2c:	ldr	x1, [x29, #152]
    6a30:	adrp	x2, 15000 <iterative_hash@@Base+0x2c8>
    6a34:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    6a38:	mov	x3, x19
    6a3c:	add	x2, x2, #0x368
    6a40:	add	x0, x0, #0x370
    6a44:	mov	x4, #0x0                   	// #0
    6a48:	bl	5510 <concat@plt>
    6a4c:	mov	x19, x0
    6a50:	mov	sp, x22
    6a54:	ldr	x0, [x29, #152]
    6a58:	add	x20, x20, #0x10
    6a5c:	cmp	x0, x20
    6a60:	b.eq	6a68 <gcc_c_fe_context@@Base+0x450>  // b.none
    6a64:	bl	5540 <_ZdlPv@plt>
    6a68:	mov	sp, x29
    6a6c:	mov	x0, x19
    6a70:	ldp	x29, x30, [sp]
    6a74:	ldp	x19, x20, [sp, #16]
    6a78:	ldp	x21, x22, [sp, #32]
    6a7c:	ldp	x23, x24, [sp, #48]
    6a80:	ldp	x25, x26, [sp, #64]
    6a84:	ldp	x27, x28, [sp, #80]
    6a88:	add	sp, sp, #0x240
    6a8c:	ret
    6a90:	sub	x4, x0, x3
    6a94:	mov	x2, #0x0                   	// #0
    6a98:	mov	x0, x20
    6a9c:	mov	x1, #0x0                   	// #0
    6aa0:	bl	5700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    6aa4:	b	6920 <gcc_c_fe_context@@Base+0x308>
    6aa8:	ldr	x1, [x29, #96]
    6aac:	mov	x0, x19
    6ab0:	bl	5928 <_ZNSt6localeC1Ev@plt+0xe8>
    6ab4:	tst	w0, #0xff
    6ab8:	mov	x0, x19
    6abc:	b.ne	6b08 <gcc_c_fe_context@@Base+0x4f0>  // b.any
    6ac0:	bl	5380 <xregfree@plt>
    6ac4:	ldr	x1, [x29, #152]
    6ac8:	adrp	x2, 15000 <iterative_hash@@Base+0x2c8>
    6acc:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    6ad0:	add	x2, x2, #0x390
    6ad4:	add	x0, x0, #0x398
    6ad8:	mov	x3, #0x0                   	// #0
    6adc:	bl	5510 <concat@plt>
    6ae0:	mov	x19, x0
    6ae4:	b	6a54 <gcc_c_fe_context@@Base+0x43c>
    6ae8:	ldr	x1, [x29, #200]
    6aec:	add	x0, x19, #0x10
    6af0:	ldur	x1, [x1, #-24]
    6af4:	add	x0, x0, x1
    6af8:	ldr	w1, [x0, #32]
    6afc:	orr	w1, w1, #0x1
    6b00:	bl	57a0 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
    6b04:	b	67f0 <gcc_c_fe_context@@Base+0x1d8>
    6b08:	bl	5380 <xregfree@plt>
    6b0c:	ldr	x0, [x24, #8]
    6b10:	ldrb	w0, [x0, #120]
    6b14:	cbz	w0, 6b38 <gcc_c_fe_context@@Base+0x520>
    6b18:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    6b1c:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    6b20:	ldr	x2, [x29, #96]
    6b24:	add	x1, x1, #0x3c0
    6b28:	ldr	x0, [x0, #3968]
    6b2c:	ldr	x2, [x2]
    6b30:	ldr	x0, [x0]
    6b34:	bl	5370 <fprintf@plt>
    6b38:	mov	x19, #0x0                   	// #0
    6b3c:	b	6a54 <gcc_c_fe_context@@Base+0x43c>
    6b40:	add	x1, x19, #0x60
    6b44:	mov	x0, x20
    6b48:	bl	5430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    6b4c:	b	6920 <gcc_c_fe_context@@Base+0x308>
    6b50:	mov	x20, x0
    6b54:	mov	x0, x19
    6b58:	bl	54f0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    6b5c:	mov	x0, x20
    6b60:	bl	57e0 <_Unwind_Resume@plt>
    6b64:	mov	x20, x0
    6b68:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    6b6c:	ldr	x1, [x0, #3216]
    6b70:	add	x0, x19, #0x80
    6b74:	add	x1, x1, #0x10
    6b78:	str	x1, [x29, #312]
    6b7c:	bl	53a0 <_ZNSt8ios_baseD2Ev@plt>
    6b80:	mov	x0, x20
    6b84:	bl	57e0 <_Unwind_Resume@plt>
    6b88:	ldr	x1, [x29, #152]
    6b8c:	add	x2, x20, #0x10
    6b90:	mov	x20, x0
    6b94:	cmp	x1, x2
    6b98:	b.eq	6b54 <gcc_c_fe_context@@Base+0x53c>  // b.none
    6b9c:	mov	x0, x1
    6ba0:	bl	5540 <_ZdlPv@plt>
    6ba4:	b	6b54 <gcc_c_fe_context@@Base+0x53c>
    6ba8:	mov	x19, x0
    6bac:	ldr	x0, [x29, #152]
    6bb0:	add	x20, x20, #0x10
    6bb4:	cmp	x0, x20
    6bb8:	b.eq	6bc0 <gcc_c_fe_context@@Base+0x5a8>  // b.none
    6bbc:	bl	5540 <_ZdlPv@plt>
    6bc0:	mov	x0, x19
    6bc4:	bl	57e0 <_Unwind_Resume@plt>
    6bc8:	mov	x19, x0
    6bcc:	mov	sp, x22
    6bd0:	b	6bac <gcc_c_fe_context@@Base+0x594>
    6bd4:	ldr	x22, [x22, #4048]
    6bd8:	mov	x20, x0
    6bdc:	ldr	x0, [x29, #280]
    6be0:	add	x22, x22, #0x10
    6be4:	str	x22, [x29, #208]
    6be8:	add	x1, x19, #0x70
    6bec:	cmp	x0, x1
    6bf0:	b.eq	6bf8 <gcc_c_fe_context@@Base+0x5e0>  // b.none
    6bf4:	bl	5540 <_ZdlPv@plt>
    6bf8:	ldr	x1, [x21, #3432]
    6bfc:	add	x0, x19, #0x50
    6c00:	add	x1, x1, #0x10
    6c04:	str	x1, [x29, #208]
    6c08:	bl	5690 <_ZNSt6localeD1Ev@plt>
    6c0c:	ldur	x1, [x27, #-24]
    6c10:	add	x0, x29, #0xc8
    6c14:	ldur	x2, [x25, #-24]
    6c18:	ldr	x3, [x29, #120]
    6c1c:	str	x3, [x19, x1]
    6c20:	ldur	x1, [x23, #-24]
    6c24:	str	x25, [x29, #200]
    6c28:	ldr	x3, [x29, #128]
    6c2c:	str	x3, [x0, x2]
    6c30:	str	x23, [x29, #184]
    6c34:	str	x26, [x19, x1]
    6c38:	str	xzr, [x29, #192]
    6c3c:	b	6b68 <gcc_c_fe_context@@Base+0x550>
    6c40:	ldur	x1, [x23, #-24]
    6c44:	str	x23, [x29, #184]
    6c48:	mov	x20, x0
    6c4c:	str	x26, [x19, x1]
    6c50:	str	xzr, [x29, #192]
    6c54:	b	6b68 <gcc_c_fe_context@@Base+0x550>
    6c58:	stp	x29, x30, [sp, #-112]!
    6c5c:	mov	x29, sp
    6c60:	stp	x19, x20, [sp, #16]
    6c64:	mov	x20, x0
    6c68:	ldr	x0, [x0, #128]
    6c6c:	stp	x21, x22, [sp, #32]
    6c70:	mov	x21, x1
    6c74:	str	x23, [sp, #48]
    6c78:	cbz	x0, 6c88 <gcc_c_fe_context@@Base+0x670>
    6c7c:	ldr	x1, [x0]
    6c80:	ldr	x1, [x1, #16]
    6c84:	blr	x1
    6c88:	add	x22, sp, #0x50
    6c8c:	add	x23, x22, #0x10
    6c90:	str	x23, [sp, #80]
    6c94:	cbnz	x21, 6ca4 <gcc_c_fe_context@@Base+0x68c>
    6c98:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    6c9c:	add	x0, x0, #0x230
    6ca0:	bl	54d0 <_ZSt19__throw_logic_errorPKc@plt>
    6ca4:	mov	x0, x21
    6ca8:	bl	5360 <strlen@plt>
    6cac:	str	x0, [sp, #72]
    6cb0:	mov	x19, x0
    6cb4:	cmp	x0, #0xf
    6cb8:	b.hi	6d48 <gcc_c_fe_context@@Base+0x730>  // b.pmore
    6cbc:	cmp	x19, #0x1
    6cc0:	b.ne	6d3c <gcc_c_fe_context@@Base+0x724>  // b.any
    6cc4:	ldrb	w1, [x21]
    6cc8:	mov	x0, x23
    6ccc:	strb	w1, [sp, #96]
    6cd0:	str	x19, [sp, #88]
    6cd4:	strb	wzr, [x0, x19]
    6cd8:	mov	x0, #0x30                  	// #48
    6cdc:	bl	5550 <_Znwm@plt>
    6ce0:	str	x20, [x0, #8]
    6ce4:	mov	x19, x0
    6ce8:	ldp	x1, x2, [sp, #80]
    6cec:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    6cf0:	add	x4, x4, #0x468
    6cf4:	str	x4, [x0], #16
    6cf8:	mov	w3, #0x0                   	// #0
    6cfc:	add	x4, x0, #0x10
    6d00:	str	x4, [x19, #16]
    6d04:	add	x2, x1, x2
    6d08:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    6d0c:	ldr	x0, [sp, #80]
    6d10:	str	x19, [x20, #128]
    6d14:	add	x22, x22, #0x10
    6d18:	cmp	x0, x22
    6d1c:	b.eq	6d24 <gcc_c_fe_context@@Base+0x70c>  // b.none
    6d20:	bl	5540 <_ZdlPv@plt>
    6d24:	mov	x0, #0x0                   	// #0
    6d28:	ldp	x19, x20, [sp, #16]
    6d2c:	ldp	x21, x22, [sp, #32]
    6d30:	ldr	x23, [sp, #48]
    6d34:	ldp	x29, x30, [sp], #112
    6d38:	ret
    6d3c:	mov	x0, x23
    6d40:	cbz	x19, 6cd0 <gcc_c_fe_context@@Base+0x6b8>
    6d44:	b	6d64 <gcc_c_fe_context@@Base+0x74c>
    6d48:	add	x1, sp, #0x48
    6d4c:	mov	x0, x22
    6d50:	mov	x2, #0x0                   	// #0
    6d54:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6d58:	ldr	x1, [sp, #72]
    6d5c:	str	x0, [sp, #80]
    6d60:	str	x1, [sp, #96]
    6d64:	mov	x2, x19
    6d68:	mov	x1, x21
    6d6c:	bl	52b0 <memcpy@plt>
    6d70:	ldp	x19, x0, [sp, #72]
    6d74:	b	6cd0 <gcc_c_fe_context@@Base+0x6b8>
    6d78:	mov	x19, x0
    6d7c:	b	6d94 <gcc_c_fe_context@@Base+0x77c>
    6d80:	mov	x2, x0
    6d84:	mov	x1, #0x30                  	// #48
    6d88:	mov	x0, x19
    6d8c:	mov	x19, x2
    6d90:	bl	5560 <_ZdlPvm@plt>
    6d94:	ldr	x0, [sp, #80]
    6d98:	add	x22, x22, #0x10
    6d9c:	cmp	x0, x22
    6da0:	b.eq	6da8 <gcc_c_fe_context@@Base+0x790>  // b.none
    6da4:	bl	5540 <_ZdlPv@plt>
    6da8:	mov	x0, x19
    6dac:	bl	57e0 <_Unwind_Resume@plt>
    6db0:	stp	x29, x30, [sp, #-112]!
    6db4:	mov	x29, sp
    6db8:	stp	x19, x20, [sp, #16]
    6dbc:	mov	x20, x0
    6dc0:	ldr	x0, [x0, #128]
    6dc4:	stp	x21, x22, [sp, #32]
    6dc8:	mov	x21, x1
    6dcc:	str	x23, [sp, #48]
    6dd0:	cbz	x0, 6de0 <gcc_c_fe_context@@Base+0x7c8>
    6dd4:	ldr	x1, [x0]
    6dd8:	ldr	x1, [x1, #16]
    6ddc:	blr	x1
    6de0:	add	x22, sp, #0x50
    6de4:	add	x23, x22, #0x10
    6de8:	str	x23, [sp, #80]
    6dec:	cbnz	x21, 6dfc <gcc_c_fe_context@@Base+0x7e4>
    6df0:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    6df4:	add	x0, x0, #0x230
    6df8:	bl	54d0 <_ZSt19__throw_logic_errorPKc@plt>
    6dfc:	mov	x0, x21
    6e00:	bl	5360 <strlen@plt>
    6e04:	str	x0, [sp, #72]
    6e08:	mov	x19, x0
    6e0c:	cmp	x0, #0xf
    6e10:	b.hi	6ea0 <gcc_c_fe_context@@Base+0x888>  // b.pmore
    6e14:	cmp	x19, #0x1
    6e18:	b.ne	6e94 <gcc_c_fe_context@@Base+0x87c>  // b.any
    6e1c:	ldrb	w1, [x21]
    6e20:	mov	x0, x23
    6e24:	strb	w1, [sp, #96]
    6e28:	str	x19, [sp, #88]
    6e2c:	strb	wzr, [x0, x19]
    6e30:	mov	x0, #0x30                  	// #48
    6e34:	bl	5550 <_Znwm@plt>
    6e38:	str	x20, [x0, #8]
    6e3c:	mov	x19, x0
    6e40:	ldp	x1, x2, [sp, #80]
    6e44:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    6e48:	add	x4, x4, #0x440
    6e4c:	str	x4, [x0], #16
    6e50:	mov	w3, #0x0                   	// #0
    6e54:	add	x4, x0, #0x10
    6e58:	str	x4, [x19, #16]
    6e5c:	add	x2, x1, x2
    6e60:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    6e64:	ldr	x0, [sp, #80]
    6e68:	str	x19, [x20, #128]
    6e6c:	add	x22, x22, #0x10
    6e70:	cmp	x0, x22
    6e74:	b.eq	6e7c <gcc_c_fe_context@@Base+0x864>  // b.none
    6e78:	bl	5540 <_ZdlPv@plt>
    6e7c:	mov	x0, #0x0                   	// #0
    6e80:	ldp	x19, x20, [sp, #16]
    6e84:	ldp	x21, x22, [sp, #32]
    6e88:	ldr	x23, [sp, #48]
    6e8c:	ldp	x29, x30, [sp], #112
    6e90:	ret
    6e94:	mov	x0, x23
    6e98:	cbz	x19, 6e28 <gcc_c_fe_context@@Base+0x810>
    6e9c:	b	6ebc <gcc_c_fe_context@@Base+0x8a4>
    6ea0:	add	x1, sp, #0x48
    6ea4:	mov	x0, x22
    6ea8:	mov	x2, #0x0                   	// #0
    6eac:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6eb0:	ldr	x1, [sp, #72]
    6eb4:	str	x0, [sp, #80]
    6eb8:	str	x1, [sp, #96]
    6ebc:	mov	x2, x19
    6ec0:	mov	x1, x21
    6ec4:	bl	52b0 <memcpy@plt>
    6ec8:	ldp	x19, x0, [sp, #72]
    6ecc:	b	6e28 <gcc_c_fe_context@@Base+0x810>
    6ed0:	mov	x19, x0
    6ed4:	b	6eec <gcc_c_fe_context@@Base+0x8d4>
    6ed8:	mov	x2, x0
    6edc:	mov	x1, #0x30                  	// #48
    6ee0:	mov	x0, x19
    6ee4:	mov	x19, x2
    6ee8:	bl	5560 <_ZdlPvm@plt>
    6eec:	ldr	x0, [sp, #80]
    6ef0:	add	x22, x22, #0x10
    6ef4:	cmp	x0, x22
    6ef8:	b.eq	6f00 <gcc_c_fe_context@@Base+0x8e8>  // b.none
    6efc:	bl	5540 <_ZdlPv@plt>
    6f00:	mov	x0, x19
    6f04:	bl	57e0 <_Unwind_Resume@plt>
    6f08:	stp	x29, x30, [sp, #-240]!
    6f0c:	mov	w2, #0x0                   	// #0
    6f10:	mov	x29, sp
    6f14:	add	x3, sp, #0x50
    6f18:	stp	x19, x20, [sp, #16]
    6f1c:	mov	x19, x0
    6f20:	stp	x21, x22, [sp, #32]
    6f24:	mov	x21, x1
    6f28:	mov	w1, #0x1                   	// #1
    6f2c:	mov	w0, w1
    6f30:	bl	52f0 <socketpair@plt>
    6f34:	cbz	w0, 6f60 <gcc_c_fe_context@@Base+0x948>
    6f38:	ldp	x2, x0, [x19, #48]
    6f3c:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    6f40:	mov	w20, #0x0                   	// #0
    6f44:	add	x1, x1, #0x3d8
    6f48:	blr	x2
    6f4c:	mov	w0, w20
    6f50:	ldp	x19, x20, [sp, #16]
    6f54:	ldp	x21, x22, [sp, #32]
    6f58:	ldp	x29, x30, [sp], #240
    6f5c:	ret
    6f60:	mov	w20, w0
    6f64:	add	x0, sp, #0x58
    6f68:	bl	5310 <pipe@plt>
    6f6c:	cbz	w0, 6fa4 <gcc_c_fe_context@@Base+0x98c>
    6f70:	ldp	x2, x0, [x19, #48]
    6f74:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    6f78:	add	x1, x1, #0x3f8
    6f7c:	blr	x2
    6f80:	ldr	w0, [sp, #80]
    6f84:	bl	56b0 <close@plt>
    6f88:	ldr	w0, [sp, #84]
    6f8c:	bl	56b0 <close@plt>
    6f90:	mov	w0, w20
    6f94:	ldp	x19, x20, [sp, #16]
    6f98:	ldp	x21, x22, [sp, #32]
    6f9c:	ldp	x29, x30, [sp], #240
    6fa0:	ret
    6fa4:	stp	x23, x24, [sp, #48]
    6fa8:	add	x24, sp, #0x88
    6fac:	add	x3, x24, #0x10
    6fb0:	mov	x4, #0x15                  	// #21
    6fb4:	add	x20, sp, #0x68
    6fb8:	mov	x1, x20
    6fbc:	mov	x2, #0x0                   	// #0
    6fc0:	mov	x0, x24
    6fc4:	str	x25, [sp, #64]
    6fc8:	str	x4, [sp, #104]
    6fcc:	add	x22, x19, #0x40
    6fd0:	str	x3, [sp, #136]
    6fd4:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6fd8:	adrp	x2, 15000 <iterative_hash@@Base+0x2c8>
    6fdc:	add	x2, x2, #0x410
    6fe0:	ldr	x1, [sp, #104]
    6fe4:	str	x0, [sp, #136]
    6fe8:	str	x1, [sp, #152]
    6fec:	mov	x1, x24
    6ff0:	ldp	x4, x5, [x2]
    6ff4:	stp	x4, x5, [x0]
    6ff8:	ldur	x2, [x2, #13]
    6ffc:	stur	x2, [x0, #13]
    7000:	mov	x0, x22
    7004:	ldr	x2, [sp, #104]
    7008:	str	x2, [sp, #144]
    700c:	ldr	x3, [sp, #136]
    7010:	strb	wzr, [x3, x2]
    7014:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    7018:	ldr	x0, [sp, #136]
    701c:	add	x1, x24, #0x10
    7020:	cmp	x0, x1
    7024:	b.eq	702c <gcc_c_fe_context@@Base+0xa14>  // b.none
    7028:	bl	5540 <_ZdlPv@plt>
    702c:	ldr	w3, [sp, #84]
    7030:	adrp	x2, 15000 <iterative_hash@@Base+0x2c8>
    7034:	add	x2, x2, #0x428
    7038:	mov	x1, #0x64                  	// #100
    703c:	mov	x0, x24
    7040:	add	x25, x20, #0x10
    7044:	bl	55b0 <snprintf@plt>
    7048:	str	x25, [sp, #104]
    704c:	mov	x0, x24
    7050:	bl	5360 <strlen@plt>
    7054:	str	x0, [sp, #96]
    7058:	mov	x23, x0
    705c:	cmp	x0, #0xf
    7060:	b.hi	715c <gcc_c_fe_context@@Base+0xb44>  // b.pmore
    7064:	cmp	x0, #0x1
    7068:	b.ne	740c <gcc_c_fe_context@@Base+0xdf4>  // b.any
    706c:	ldrb	w1, [sp, #136]
    7070:	mov	x0, x25
    7074:	strb	w1, [sp, #120]
    7078:	str	x23, [sp, #112]
    707c:	mov	x1, x20
    7080:	strb	wzr, [x0, x23]
    7084:	mov	x0, x22
    7088:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    708c:	ldr	x0, [sp, #104]
    7090:	add	x1, x20, #0x10
    7094:	cmp	x0, x1
    7098:	b.eq	70a0 <gcc_c_fe_context@@Base+0xa88>  // b.none
    709c:	bl	5540 <_ZdlPv@plt>
    70a0:	ldp	x0, x1, [x22, #8]
    70a4:	cmp	x0, x1
    70a8:	b.eq	7448 <gcc_c_fe_context@@Base+0xe30>  // b.none
    70ac:	add	x1, x0, #0x10
    70b0:	mov	w3, #0x0                   	// #0
    70b4:	ldr	x2, [x19, #96]
    70b8:	str	x1, [x0]
    70bc:	ldr	x1, [x19, #88]
    70c0:	add	x2, x1, x2
    70c4:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    70c8:	ldr	x0, [x22, #8]
    70cc:	add	x0, x0, #0x20
    70d0:	str	x0, [x22, #8]
    70d4:	add	x4, x20, #0x10
    70d8:	mov	w2, #0x632d                	// #25389
    70dc:	mov	x3, #0x2                   	// #2
    70e0:	mov	x1, x20
    70e4:	mov	x0, x22
    70e8:	stp	x4, x3, [sp, #104]
    70ec:	strh	w2, [sp, #120]
    70f0:	strb	wzr, [sp, #122]
    70f4:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    70f8:	ldr	x0, [sp, #104]
    70fc:	add	x1, x20, #0x10
    7100:	cmp	x0, x1
    7104:	b.eq	710c <gcc_c_fe_context@@Base+0xaf4>  // b.none
    7108:	bl	5540 <_ZdlPv@plt>
    710c:	add	x4, x20, #0x10
    7110:	mov	w2, #0x6f2d                	// #28461
    7114:	mov	x3, #0x2                   	// #2
    7118:	mov	x1, x20
    711c:	mov	x0, x22
    7120:	stp	x4, x3, [sp, #104]
    7124:	strh	w2, [sp, #120]
    7128:	strb	wzr, [sp, #122]
    712c:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    7130:	ldr	x0, [sp, #104]
    7134:	add	x1, x20, #0x10
    7138:	cmp	x0, x1
    713c:	b.eq	7144 <gcc_c_fe_context@@Base+0xb2c>  // b.none
    7140:	bl	5540 <_ZdlPv@plt>
    7144:	add	x24, x20, #0x10
    7148:	str	x24, [sp, #104]
    714c:	cbnz	x21, 718c <gcc_c_fe_context@@Base+0xb74>
    7150:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    7154:	add	x0, x0, #0x230
    7158:	bl	54d0 <_ZSt19__throw_logic_errorPKc@plt>
    715c:	add	x1, sp, #0x60
    7160:	mov	x0, x20
    7164:	mov	x2, #0x0                   	// #0
    7168:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    716c:	ldr	x1, [sp, #96]
    7170:	str	x0, [sp, #104]
    7174:	str	x1, [sp, #120]
    7178:	mov	x2, x23
    717c:	mov	x1, x24
    7180:	bl	52b0 <memcpy@plt>
    7184:	ldp	x23, x0, [sp, #96]
    7188:	b	7078 <gcc_c_fe_context@@Base+0xa60>
    718c:	mov	x0, x21
    7190:	bl	5360 <strlen@plt>
    7194:	str	x0, [sp, #96]
    7198:	mov	x23, x0
    719c:	cmp	x0, #0xf
    71a0:	b.hi	7418 <gcc_c_fe_context@@Base+0xe00>  // b.pmore
    71a4:	cmp	x23, #0x1
    71a8:	b.ne	7400 <gcc_c_fe_context@@Base+0xde8>  // b.any
    71ac:	ldrb	w1, [x21]
    71b0:	mov	x0, x24
    71b4:	strb	w1, [sp, #120]
    71b8:	str	x23, [sp, #112]
    71bc:	mov	x1, x20
    71c0:	strb	wzr, [x0, x23]
    71c4:	mov	x0, x22
    71c8:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    71cc:	ldr	x0, [sp, #104]
    71d0:	add	x1, x20, #0x10
    71d4:	cmp	x0, x1
    71d8:	b.eq	71e0 <gcc_c_fe_context@@Base+0xbc8>  // b.none
    71dc:	bl	5540 <_ZdlPv@plt>
    71e0:	ldrb	w0, [x19, #120]
    71e4:	cbz	w0, 7220 <gcc_c_fe_context@@Base+0xc08>
    71e8:	add	x4, x20, #0x10
    71ec:	mov	w2, #0x762d                	// #30253
    71f0:	mov	x3, #0x2                   	// #2
    71f4:	mov	x0, x22
    71f8:	mov	x1, x20
    71fc:	stp	x4, x3, [sp, #104]
    7200:	strh	w2, [sp, #120]
    7204:	strb	wzr, [sp, #122]
    7208:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    720c:	ldr	x0, [sp, #104]
    7210:	add	x1, x20, #0x10
    7214:	cmp	x0, x1
    7218:	b.eq	7220 <gcc_c_fe_context@@Base+0xc08>  // b.none
    721c:	bl	5540 <_ZdlPv@plt>
    7220:	mov	x0, #0x20                  	// #32
    7224:	bl	5550 <_Znwm@plt>
    7228:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    722c:	mov	x21, x0
    7230:	ldr	w3, [sp, #80]
    7234:	add	x22, x0, #0x10
    7238:	ldr	x1, [x1, #3344]
    723c:	mov	x0, x22
    7240:	ldr	w2, [sp, #88]
    7244:	add	x1, x1, #0x10
    7248:	str	x1, [x21]
    724c:	stp	w3, w2, [x21, #8]
    7250:	bl	d7e0 <gcc_cp_fe_context@@Base+0x3ac0>
    7254:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    7258:	add	x3, x3, #0x3f0
    725c:	str	x3, [x21]
    7260:	mov	x0, x22
    7264:	str	x21, [x19, #16]
    7268:	adrp	x2, 6000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x88>
    726c:	str	x19, [x21, #24]
    7270:	add	x2, x2, #0x140
    7274:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    7278:	add	x1, x1, #0x448
    727c:	bl	d848 <gcc_cp_fe_context@@Base+0x3b28>
    7280:	ldr	x0, [x19, #16]
    7284:	adrp	x2, 6000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x88>
    7288:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    728c:	add	x2, x2, #0x218
    7290:	add	x1, x1, #0x458
    7294:	add	x0, x0, #0x10
    7298:	bl	d848 <gcc_cp_fe_context@@Base+0x3b28>
    729c:	ldp	x2, x0, [x19, #64]
    72a0:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    72a4:	sub	x0, x0, x2
    72a8:	asr	x0, x0, #5
    72ac:	add	x0, x0, #0x1
    72b0:	cmp	x0, x1
    72b4:	b.hi	74d8 <gcc_c_fe_context@@Base+0xec0>  // b.pmore
    72b8:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    72bc:	lsl	x0, x0, #3
    72c0:	ldr	x1, [x1, #3256]
    72c4:	bl	5770 <_ZnamRKSt9nothrow_t@plt>
    72c8:	mov	x21, x0
    72cc:	cbz	x0, 73e0 <gcc_c_fe_context@@Base+0xdc8>
    72d0:	ldp	x0, x3, [x19, #64]
    72d4:	sub	x3, x3, x0
    72d8:	cmp	xzr, x3, asr #5
    72dc:	asr	x3, x3, #5
    72e0:	b.eq	748c <gcc_c_fe_context@@Base+0xe74>  // b.none
    72e4:	mov	w1, #0x0                   	// #0
    72e8:	mov	x2, #0x0                   	// #0
    72ec:	nop
    72f0:	lsl	x4, x2, #5
    72f4:	add	w1, w1, #0x1
    72f8:	cmp	x3, w1, uxtw
    72fc:	ldr	x4, [x0, x4]
    7300:	str	x4, [x21, x2, lsl #3]
    7304:	mov	w2, w1
    7308:	b.hi	72f0 <gcc_c_fe_context@@Base+0xcd8>  // b.pmore
    730c:	add	x3, x21, x3, lsl #3
    7310:	str	xzr, [x3]
    7314:	bl	5680 <fork@plt>
    7318:	mov	w22, w0
    731c:	cmn	w0, #0x1
    7320:	b.eq	745c <gcc_c_fe_context@@Base+0xe44>  // b.none
    7324:	cbz	w0, 7494 <gcc_c_fe_context@@Base+0xe7c>
    7328:	ldr	w0, [sp, #84]
    732c:	bl	56b0 <close@plt>
    7330:	ldr	w0, [sp, #92]
    7334:	bl	56b0 <close@plt>
    7338:	ldr	x0, [x19, #16]
    733c:	mov	w1, #0x48                  	// #72
    7340:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    7344:	cbnz	w0, 73ac <gcc_c_fe_context@@Base+0xd94>
    7348:	mov	w19, #0x0                   	// #0
    734c:	ldr	w0, [sp, #80]
    7350:	bl	56b0 <close@plt>
    7354:	ldr	w0, [sp, #88]
    7358:	bl	56b0 <close@plt>
    735c:	mov	x1, x20
    7360:	mov	w0, w22
    7364:	mov	w2, #0x0                   	// #0
    7368:	bl	53b0 <waitpid@plt>
    736c:	cmn	w0, #0x1
    7370:	b.eq	73d0 <gcc_c_fe_context@@Base+0xdb8>  // b.none
    7374:	ldr	w1, [sp, #104]
    7378:	cmp	w19, #0x0
    737c:	cset	w20, ne  // ne = any
    7380:	and	w0, w1, #0x7f
    7384:	ubfx	x1, x1, #8, #8
    7388:	orr	w1, w1, w0
    738c:	cbnz	w1, 73e0 <gcc_c_fe_context@@Base+0xdc8>
    7390:	mov	w0, w20
    7394:	ldp	x19, x20, [sp, #16]
    7398:	ldp	x21, x22, [sp, #32]
    739c:	ldp	x23, x24, [sp, #48]
    73a0:	ldr	x25, [sp, #64]
    73a4:	ldp	x29, x30, [sp], #240
    73a8:	ret
    73ac:	ldr	x0, [x19, #16]
    73b0:	mov	x1, #0x1                   	// #1
    73b4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    73b8:	cbz	w0, 7348 <gcc_c_fe_context@@Base+0xd30>
    73bc:	ldr	x0, [x19, #16]
    73c0:	mov	w1, #0x0                   	// #0
    73c4:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    73c8:	mov	w19, w0
    73cc:	b	734c <gcc_c_fe_context@@Base+0xd34>
    73d0:	bl	5620 <__errno_location@plt>
    73d4:	ldr	w0, [x0]
    73d8:	cmp	w0, #0x4
    73dc:	b.eq	7374 <gcc_c_fe_context@@Base+0xd5c>  // b.none
    73e0:	mov	w20, #0x0                   	// #0
    73e4:	mov	w0, w20
    73e8:	ldp	x19, x20, [sp, #16]
    73ec:	ldp	x21, x22, [sp, #32]
    73f0:	ldp	x23, x24, [sp, #48]
    73f4:	ldr	x25, [sp, #64]
    73f8:	ldp	x29, x30, [sp], #240
    73fc:	ret
    7400:	mov	x0, x24
    7404:	cbz	x23, 71b8 <gcc_c_fe_context@@Base+0xba0>
    7408:	b	7434 <gcc_c_fe_context@@Base+0xe1c>
    740c:	mov	x0, x25
    7410:	cbz	x23, 7078 <gcc_c_fe_context@@Base+0xa60>
    7414:	b	7178 <gcc_c_fe_context@@Base+0xb60>
    7418:	add	x1, sp, #0x60
    741c:	mov	x0, x20
    7420:	mov	x2, #0x0                   	// #0
    7424:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    7428:	ldr	x1, [sp, #96]
    742c:	str	x0, [sp, #104]
    7430:	str	x1, [sp, #120]
    7434:	mov	x2, x23
    7438:	mov	x1, x21
    743c:	bl	52b0 <memcpy@plt>
    7440:	ldp	x23, x0, [sp, #96]
    7444:	b	71b8 <gcc_c_fe_context@@Base+0xba0>
    7448:	mov	x1, x0
    744c:	add	x2, x19, #0x58
    7450:	mov	x0, x22
    7454:	bl	55d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    7458:	b	70d4 <gcc_c_fe_context@@Base+0xabc>
    745c:	ldr	w0, [sp, #80]
    7460:	mov	w20, #0x0                   	// #0
    7464:	bl	56b0 <close@plt>
    7468:	ldr	w0, [sp, #84]
    746c:	bl	56b0 <close@plt>
    7470:	ldr	w0, [sp, #88]
    7474:	bl	56b0 <close@plt>
    7478:	ldr	w0, [sp, #92]
    747c:	bl	56b0 <close@plt>
    7480:	ldp	x23, x24, [sp, #48]
    7484:	ldr	x25, [sp, #64]
    7488:	b	6f4c <gcc_c_fe_context@@Base+0x934>
    748c:	mov	x3, x21
    7490:	b	7310 <gcc_c_fe_context@@Base+0xcf8>
    7494:	ldr	w0, [sp, #92]
    7498:	mov	w1, #0x1                   	// #1
    749c:	bl	5320 <dup2@plt>
    74a0:	ldr	w0, [sp, #92]
    74a4:	mov	w1, #0x2                   	// #2
    74a8:	bl	5320 <dup2@plt>
    74ac:	ldr	w0, [sp, #88]
    74b0:	bl	56b0 <close@plt>
    74b4:	ldr	w0, [sp, #92]
    74b8:	bl	56b0 <close@plt>
    74bc:	ldr	w0, [sp, #80]
    74c0:	bl	56b0 <close@plt>
    74c4:	ldr	x0, [x21]
    74c8:	mov	x1, x21
    74cc:	bl	52e0 <execvp@plt>
    74d0:	mov	w0, #0x7f                  	// #127
    74d4:	bl	5490 <_exit@plt>
    74d8:	bl	56a0 <__cxa_throw_bad_array_new_length@plt>
    74dc:	mov	x19, x0
    74e0:	mov	x1, #0x20                  	// #32
    74e4:	mov	x0, x21
    74e8:	bl	5560 <_ZdlPvm@plt>
    74ec:	mov	x0, x19
    74f0:	bl	57e0 <_Unwind_Resume@plt>
    74f4:	ldr	x1, [sp, #104]
    74f8:	add	x20, x20, #0x10
    74fc:	mov	x19, x0
    7500:	cmp	x1, x20
    7504:	b.eq	74ec <gcc_c_fe_context@@Base+0xed4>  // b.none
    7508:	mov	x0, x1
    750c:	bl	5540 <_ZdlPv@plt>
    7510:	b	74ec <gcc_c_fe_context@@Base+0xed4>
    7514:	b	74f4 <gcc_c_fe_context@@Base+0xedc>
    7518:	b	74f4 <gcc_c_fe_context@@Base+0xedc>
    751c:	b	74f4 <gcc_c_fe_context@@Base+0xedc>
    7520:	ldr	x1, [sp, #136]
    7524:	add	x24, x24, #0x10
    7528:	mov	x19, x0
    752c:	cmp	x1, x24
    7530:	b.ne	7508 <gcc_c_fe_context@@Base+0xef0>  // b.any
    7534:	b	74ec <gcc_c_fe_context@@Base+0xed4>
    7538:	b	74f4 <gcc_c_fe_context@@Base+0xedc>
    753c:	nop
    7540:	cmp	w2, #0x0
    7544:	cset	w2, ne  // ne = any
    7548:	strb	w2, [x0, #120]
    754c:	b	6f08 <gcc_c_fe_context@@Base+0x8f0>
    7550:	stp	x29, x30, [sp, #-176]!
    7554:	mov	x29, sp
    7558:	stp	x21, x22, [sp, #32]
    755c:	mov	x22, x0
    7560:	stp	x25, x26, [sp, #64]
    7564:	add	x25, sp, #0x70
    7568:	add	x0, x25, #0x10
    756c:	stp	x0, xzr, [sp, #112]
    7570:	ldr	x0, [x22, #128]
    7574:	strb	wzr, [sp, #128]
    7578:	stp	x19, x20, [sp, #16]
    757c:	mov	x20, x2
    7580:	ldr	x3, [x0]
    7584:	stp	x23, x24, [sp, #48]
    7588:	mov	w23, w1
    758c:	stp	x27, x28, [sp, #80]
    7590:	mov	x1, x25
    7594:	ldr	x3, [x3]
    7598:	blr	x3
    759c:	mov	x26, x0
    75a0:	cbz	x0, 75d8 <gcc_c_fe_context@@Base+0xfc0>
    75a4:	ldr	x0, [sp, #112]
    75a8:	add	x25, x25, #0x10
    75ac:	cmp	x0, x25
    75b0:	b.eq	75b8 <gcc_c_fe_context@@Base+0xfa0>  // b.none
    75b4:	bl	5540 <_ZdlPv@plt>
    75b8:	mov	x0, x26
    75bc:	ldp	x19, x20, [sp, #16]
    75c0:	ldp	x21, x22, [sp, #32]
    75c4:	ldp	x23, x24, [sp, #48]
    75c8:	ldp	x25, x26, [sp, #64]
    75cc:	ldp	x27, x28, [sp, #80]
    75d0:	ldp	x29, x30, [sp], #176
    75d4:	ret
    75d8:	add	x22, x22, #0x40
    75dc:	ldp	x0, x1, [x22, #8]
    75e0:	cmp	x0, x1
    75e4:	b.eq	76e8 <gcc_c_fe_context@@Base+0x10d0>  // b.none
    75e8:	add	x1, x0, #0x10
    75ec:	mov	w3, #0x0                   	// #0
    75f0:	ldr	x2, [sp, #120]
    75f4:	str	x1, [x0]
    75f8:	ldr	x1, [sp, #112]
    75fc:	add	x2, x1, x2
    7600:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    7604:	ldr	x0, [x22, #8]
    7608:	add	x0, x0, #0x20
    760c:	str	x0, [x22, #8]
    7610:	cmp	w23, #0x0
    7614:	b.le	75a4 <gcc_c_fe_context@@Base+0xf8c>
    7618:	sub	w23, w23, #0x1
    761c:	add	x0, x20, #0x8
    7620:	add	x27, sp, #0x90
    7624:	add	x28, sp, #0x68
    7628:	add	x23, x0, w23, uxtw #3
    762c:	add	x24, x27, #0x10
    7630:	b	7678 <gcc_c_fe_context@@Base+0x1060>
    7634:	cmp	x0, #0x1
    7638:	b.ne	76d0 <gcc_c_fe_context@@Base+0x10b8>  // b.any
    763c:	ldrb	w1, [x21]
    7640:	mov	x0, x24
    7644:	strb	w1, [sp, #160]
    7648:	str	x19, [sp, #152]
    764c:	mov	x1, x27
    7650:	strb	wzr, [x0, x19]
    7654:	mov	x0, x22
    7658:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    765c:	ldr	x0, [sp, #144]
    7660:	cmp	x0, x24
    7664:	b.eq	766c <gcc_c_fe_context@@Base+0x1054>  // b.none
    7668:	bl	5540 <_ZdlPv@plt>
    766c:	add	x20, x20, #0x8
    7670:	cmp	x23, x20
    7674:	b.eq	75a4 <gcc_c_fe_context@@Base+0xf8c>  // b.none
    7678:	ldr	x21, [x20]
    767c:	str	x24, [sp, #144]
    7680:	cbz	x21, 76dc <gcc_c_fe_context@@Base+0x10c4>
    7684:	mov	x0, x21
    7688:	bl	5360 <strlen@plt>
    768c:	str	x0, [sp, #104]
    7690:	mov	x19, x0
    7694:	cmp	x0, #0xf
    7698:	b.ls	7634 <gcc_c_fe_context@@Base+0x101c>  // b.plast
    769c:	mov	x1, x28
    76a0:	mov	x0, x27
    76a4:	mov	x2, #0x0                   	// #0
    76a8:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    76ac:	ldr	x1, [sp, #104]
    76b0:	str	x0, [sp, #144]
    76b4:	str	x1, [sp, #160]
    76b8:	mov	x2, x19
    76bc:	mov	x1, x21
    76c0:	bl	52b0 <memcpy@plt>
    76c4:	ldr	x19, [sp, #104]
    76c8:	ldr	x0, [sp, #144]
    76cc:	b	7648 <gcc_c_fe_context@@Base+0x1030>
    76d0:	mov	x0, x24
    76d4:	cbz	x19, 7648 <gcc_c_fe_context@@Base+0x1030>
    76d8:	b	76b8 <gcc_c_fe_context@@Base+0x10a0>
    76dc:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    76e0:	add	x0, x0, #0x230
    76e4:	bl	54d0 <_ZSt19__throw_logic_errorPKc@plt>
    76e8:	mov	x1, x0
    76ec:	mov	x2, x25
    76f0:	mov	x0, x22
    76f4:	bl	55d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    76f8:	b	7610 <gcc_c_fe_context@@Base+0xff8>
    76fc:	mov	x19, x0
    7700:	ldr	x0, [sp, #112]
    7704:	add	x25, x25, #0x10
    7708:	cmp	x0, x25
    770c:	b.eq	7714 <gcc_c_fe_context@@Base+0x10fc>  // b.none
    7710:	bl	5540 <_ZdlPv@plt>
    7714:	mov	x0, x19
    7718:	bl	57e0 <_Unwind_Resume@plt>
    771c:	ldr	x1, [sp, #144]
    7720:	add	x27, x27, #0x10
    7724:	mov	x19, x0
    7728:	cmp	x1, x27
    772c:	b.eq	7700 <gcc_c_fe_context@@Base+0x10e8>  // b.none
    7730:	mov	x0, x1
    7734:	bl	5540 <_ZdlPv@plt>
    7738:	b	7700 <gcc_c_fe_context@@Base+0x10e8>
    773c:	nop
    7740:	stp	x29, x30, [sp, #-48]!
    7744:	mov	x29, sp
    7748:	stp	x19, x20, [sp, #16]
    774c:	mov	w20, w2
    7750:	mov	x19, x0
    7754:	str	x21, [sp, #32]
    7758:	mov	x21, x3
    775c:	bl	6db0 <gcc_c_fe_context@@Base+0x798>
    7760:	cbz	x0, 7774 <gcc_c_fe_context@@Base+0x115c>
    7764:	ldp	x19, x20, [sp, #16]
    7768:	ldr	x21, [sp, #32]
    776c:	ldp	x29, x30, [sp], #48
    7770:	ret
    7774:	mov	x2, x21
    7778:	mov	w1, w20
    777c:	mov	x0, x19
    7780:	ldp	x19, x20, [sp, #16]
    7784:	ldr	x21, [sp, #32]
    7788:	ldp	x29, x30, [sp], #48
    778c:	b	7550 <gcc_c_fe_context@@Base+0xf38>
    7790:	ret
    7794:	nop
    7798:	ldr	x0, [x0, #24]
    779c:	ldp	x2, x0, [x0, #48]
    77a0:	mov	x16, x2
    77a4:	br	x16
    77a8:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    77ac:	add	x2, x1, #0x468
    77b0:	mov	x1, x0
    77b4:	str	x2, [x0]
    77b8:	ldr	x0, [x1, #16]!
    77bc:	add	x1, x1, #0x10
    77c0:	cmp	x0, x1
    77c4:	b.eq	77cc <gcc_c_fe_context@@Base+0x11b4>  // b.none
    77c8:	b	5540 <_ZdlPv@plt>
    77cc:	ret
    77d0:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    77d4:	add	x2, x1, #0x440
    77d8:	mov	x1, x0
    77dc:	str	x2, [x0]
    77e0:	ldr	x0, [x1, #16]!
    77e4:	add	x1, x1, #0x10
    77e8:	cmp	x0, x1
    77ec:	b.eq	77f4 <gcc_c_fe_context@@Base+0x11dc>  // b.none
    77f0:	b	5540 <_ZdlPv@plt>
    77f4:	ret
    77f8:	mov	x1, #0x10                  	// #16
    77fc:	b	5560 <_ZdlPvm@plt>
    7800:	stp	x29, x30, [sp, #-32]!
    7804:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    7808:	mov	x29, sp
    780c:	str	x19, [sp, #16]
    7810:	mov	x19, x0
    7814:	add	x0, x1, #0x468
    7818:	mov	x1, x19
    781c:	str	x0, [x19]
    7820:	ldr	x0, [x1, #16]!
    7824:	add	x1, x1, #0x10
    7828:	cmp	x0, x1
    782c:	b.eq	7834 <gcc_c_fe_context@@Base+0x121c>  // b.none
    7830:	bl	5540 <_ZdlPv@plt>
    7834:	mov	x0, x19
    7838:	mov	x1, #0x30                  	// #48
    783c:	ldr	x19, [sp, #16]
    7840:	ldp	x29, x30, [sp], #32
    7844:	b	5560 <_ZdlPvm@plt>
    7848:	stp	x29, x30, [sp, #-32]!
    784c:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    7850:	mov	x29, sp
    7854:	str	x19, [sp, #16]
    7858:	mov	x19, x0
    785c:	add	x0, x1, #0x440
    7860:	mov	x1, x19
    7864:	str	x0, [x19]
    7868:	ldr	x0, [x1, #16]!
    786c:	add	x1, x1, #0x10
    7870:	cmp	x0, x1
    7874:	b.eq	787c <gcc_c_fe_context@@Base+0x1264>  // b.none
    7878:	bl	5540 <_ZdlPv@plt>
    787c:	mov	x0, x19
    7880:	mov	x1, #0x30                  	// #48
    7884:	ldr	x19, [sp, #16]
    7888:	ldp	x29, x30, [sp], #32
    788c:	b	5560 <_ZdlPvm@plt>
    7890:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    7894:	add	x1, x1, #0x3f0
    7898:	str	x1, [x0]
    789c:	b	d8d8 <gcc_cp_fe_context@@Base+0x3bb8>
    78a0:	stp	x29, x30, [sp, #-32]!
    78a4:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    78a8:	add	x1, x1, #0x3f0
    78ac:	mov	x29, sp
    78b0:	str	x19, [sp, #16]
    78b4:	mov	x19, x0
    78b8:	str	x1, [x0]
    78bc:	bl	d8d8 <gcc_cp_fe_context@@Base+0x3bb8>
    78c0:	mov	x0, x19
    78c4:	mov	x1, #0x20                  	// #32
    78c8:	ldr	x19, [sp, #16]
    78cc:	ldp	x29, x30, [sp], #32
    78d0:	b	5560 <_ZdlPvm@plt>
    78d4:	nop
    78d8:	stp	x29, x30, [sp, #-112]!
    78dc:	adrp	x8, 2a000 <xexit@@Base+0x14e10>
    78e0:	mov	x29, sp
    78e4:	ldr	x8, [x8, #3288]
    78e8:	stp	x25, x26, [sp, #64]
    78ec:	mov	w26, w7
    78f0:	ldr	x25, [x0, #16]
    78f4:	stp	x19, x20, [sp, #16]
    78f8:	mov	x19, x1
    78fc:	mov	w20, w2
    7900:	mov	x0, x25
    7904:	mov	w1, #0x51                  	// #81
    7908:	stp	x21, x22, [sp, #32]
    790c:	mov	x21, x3
    7910:	mov	x22, x4
    7914:	stp	x23, x24, [sp, #48]
    7918:	mov	x23, x5
    791c:	mov	x24, x6
    7920:	str	x27, [sp, #80]
    7924:	ldr	x27, [x8]
    7928:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    792c:	cbnz	w0, 7950 <gcc_c_fe_context@@Base+0x1338>
    7930:	mov	x0, #0x0                   	// #0
    7934:	ldp	x19, x20, [sp, #16]
    7938:	ldp	x21, x22, [sp, #32]
    793c:	ldp	x23, x24, [sp, #48]
    7940:	ldp	x25, x26, [sp, #64]
    7944:	ldr	x27, [sp, #80]
    7948:	ldp	x29, x30, [sp], #112
    794c:	ret
    7950:	mov	x1, x27
    7954:	mov	x0, x25
    7958:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    795c:	cbz	w0, 7930 <gcc_c_fe_context@@Base+0x1318>
    7960:	mov	x0, x25
    7964:	mov	x1, #0x7                   	// #7
    7968:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    796c:	cbz	w0, 7930 <gcc_c_fe_context@@Base+0x1318>
    7970:	mov	x1, x19
    7974:	mov	x0, x25
    7978:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    797c:	cbz	w0, 7930 <gcc_c_fe_context@@Base+0x1318>
    7980:	mov	w1, w20
    7984:	mov	x0, x25
    7988:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    798c:	cbz	w0, 7930 <gcc_c_fe_context@@Base+0x1318>
    7990:	mov	x1, x21
    7994:	mov	x0, x25
    7998:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    799c:	cbz	w0, 7930 <gcc_c_fe_context@@Base+0x1318>
    79a0:	mov	x1, x22
    79a4:	mov	x0, x25
    79a8:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    79ac:	cbz	w0, 7930 <gcc_c_fe_context@@Base+0x1318>
    79b0:	mov	x1, x23
    79b4:	mov	x0, x25
    79b8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    79bc:	cbz	w0, 7930 <gcc_c_fe_context@@Base+0x1318>
    79c0:	mov	x1, x24
    79c4:	mov	x0, x25
    79c8:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    79cc:	cbz	w0, 7930 <gcc_c_fe_context@@Base+0x1318>
    79d0:	mov	w1, w26
    79d4:	mov	x0, x25
    79d8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    79dc:	cbz	w0, 7930 <gcc_c_fe_context@@Base+0x1318>
    79e0:	mov	x0, x25
    79e4:	mov	w1, #0x1                   	// #1
    79e8:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    79ec:	cbz	w0, 7930 <gcc_c_fe_context@@Base+0x1318>
    79f0:	add	x1, sp, #0x68
    79f4:	mov	x0, x25
    79f8:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    79fc:	cmp	w0, #0x0
    7a00:	ldr	x1, [sp, #104]
    7a04:	csel	x0, xzr, x1, eq  // eq = none
    7a08:	b	7934 <gcc_c_fe_context@@Base+0x131c>
    7a0c:	nop
    7a10:	stp	x29, x30, [sp, #-64]!
    7a14:	adrp	x2, 2a000 <xexit@@Base+0x14e10>
    7a18:	mov	x29, sp
    7a1c:	ldr	x2, [x2, #3192]
    7a20:	stp	x19, x20, [sp, #16]
    7a24:	mov	x19, x1
    7a28:	ldr	x20, [x0, #16]
    7a2c:	mov	w1, #0x51                  	// #81
    7a30:	str	x21, [sp, #32]
    7a34:	mov	x0, x20
    7a38:	ldr	x21, [x2]
    7a3c:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    7a40:	cbnz	w0, 7a58 <gcc_c_fe_context@@Base+0x1440>
    7a44:	mov	x0, #0x0                   	// #0
    7a48:	ldp	x19, x20, [sp, #16]
    7a4c:	ldr	x21, [sp, #32]
    7a50:	ldp	x29, x30, [sp], #64
    7a54:	ret
    7a58:	mov	x1, x21
    7a5c:	mov	x0, x20
    7a60:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    7a64:	cbz	w0, 7a44 <gcc_c_fe_context@@Base+0x142c>
    7a68:	mov	x0, x20
    7a6c:	mov	x1, #0x1                   	// #1
    7a70:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7a74:	cbz	w0, 7a44 <gcc_c_fe_context@@Base+0x142c>
    7a78:	mov	x1, x19
    7a7c:	mov	x0, x20
    7a80:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    7a84:	cbz	w0, 7a44 <gcc_c_fe_context@@Base+0x142c>
    7a88:	mov	x0, x20
    7a8c:	mov	w1, #0x1                   	// #1
    7a90:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    7a94:	cbz	w0, 7a44 <gcc_c_fe_context@@Base+0x142c>
    7a98:	mov	x0, x20
    7a9c:	add	x1, sp, #0x38
    7aa0:	bl	62d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x360>
    7aa4:	cbz	w0, 7a44 <gcc_c_fe_context@@Base+0x142c>
    7aa8:	ldp	x19, x20, [sp, #16]
    7aac:	ldr	x21, [sp, #32]
    7ab0:	ldr	x0, [sp, #56]
    7ab4:	ldp	x29, x30, [sp], #64
    7ab8:	ret
    7abc:	nop
    7ac0:	stp	x29, x30, [sp, #-64]!
    7ac4:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    7ac8:	mov	x29, sp
    7acc:	ldr	x3, [x3, #3184]
    7ad0:	stp	x21, x22, [sp, #32]
    7ad4:	ldr	x21, [x0, #16]
    7ad8:	stp	x19, x20, [sp, #16]
    7adc:	mov	x19, x1
    7ae0:	mov	x20, x2
    7ae4:	mov	x0, x21
    7ae8:	mov	w1, #0x51                  	// #81
    7aec:	ldr	x22, [x3]
    7af0:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    7af4:	cbnz	w0, 7b0c <gcc_c_fe_context@@Base+0x14f4>
    7af8:	mov	x0, #0x0                   	// #0
    7afc:	ldp	x19, x20, [sp, #16]
    7b00:	ldp	x21, x22, [sp, #32]
    7b04:	ldp	x29, x30, [sp], #64
    7b08:	ret
    7b0c:	mov	x1, x22
    7b10:	mov	x0, x21
    7b14:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    7b18:	cbz	w0, 7af8 <gcc_c_fe_context@@Base+0x14e0>
    7b1c:	mov	x0, x21
    7b20:	mov	x1, #0x2                   	// #2
    7b24:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7b28:	cbz	w0, 7af8 <gcc_c_fe_context@@Base+0x14e0>
    7b2c:	mov	x1, x19
    7b30:	mov	x0, x21
    7b34:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7b38:	cbz	w0, 7af8 <gcc_c_fe_context@@Base+0x14e0>
    7b3c:	mov	x1, x20
    7b40:	mov	x0, x21
    7b44:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    7b48:	cbz	w0, 7af8 <gcc_c_fe_context@@Base+0x14e0>
    7b4c:	mov	x0, x21
    7b50:	add	x1, sp, #0x38
    7b54:	bl	6310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x398>
    7b58:	cbz	w0, 7af8 <gcc_c_fe_context@@Base+0x14e0>
    7b5c:	ldp	x19, x20, [sp, #16]
    7b60:	ldp	x21, x22, [sp, #32]
    7b64:	ldr	x0, [sp, #56]
    7b68:	ldp	x29, x30, [sp], #64
    7b6c:	ret
    7b70:	stp	x29, x30, [sp, #-80]!
    7b74:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    7b78:	mov	x29, sp
    7b7c:	ldr	x4, [x4, #3944]
    7b80:	stp	x19, x20, [sp, #16]
    7b84:	mov	w20, w3
    7b88:	ldr	x19, [x0, #16]
    7b8c:	stp	x21, x22, [sp, #32]
    7b90:	mov	x22, x1
    7b94:	mov	x21, x2
    7b98:	mov	x0, x19
    7b9c:	mov	w1, #0x51                  	// #81
    7ba0:	str	x23, [sp, #48]
    7ba4:	ldr	x23, [x4]
    7ba8:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    7bac:	cbnz	w0, 7bc8 <gcc_c_fe_context@@Base+0x15b0>
    7bb0:	mov	x0, #0x0                   	// #0
    7bb4:	ldp	x19, x20, [sp, #16]
    7bb8:	ldp	x21, x22, [sp, #32]
    7bbc:	ldr	x23, [sp, #48]
    7bc0:	ldp	x29, x30, [sp], #80
    7bc4:	ret
    7bc8:	mov	x1, x23
    7bcc:	mov	x0, x19
    7bd0:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    7bd4:	cbz	w0, 7bb0 <gcc_c_fe_context@@Base+0x1598>
    7bd8:	mov	x0, x19
    7bdc:	mov	x1, #0x3                   	// #3
    7be0:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7be4:	cbz	w0, 7bb0 <gcc_c_fe_context@@Base+0x1598>
    7be8:	mov	x1, x22
    7bec:	mov	x0, x19
    7bf0:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7bf4:	cbz	w0, 7bb0 <gcc_c_fe_context@@Base+0x1598>
    7bf8:	mov	x1, x21
    7bfc:	mov	x0, x19
    7c00:	bl	df60 <gcc_cp_fe_context@@Base+0x4240>
    7c04:	cbz	w0, 7bb0 <gcc_c_fe_context@@Base+0x1598>
    7c08:	sxtw	x1, w20
    7c0c:	mov	x0, x19
    7c10:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7c14:	cbz	w0, 7bb0 <gcc_c_fe_context@@Base+0x1598>
    7c18:	mov	x0, x19
    7c1c:	mov	w1, #0x1                   	// #1
    7c20:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    7c24:	cbz	w0, 7bb0 <gcc_c_fe_context@@Base+0x1598>
    7c28:	add	x1, sp, #0x48
    7c2c:	mov	x0, x19
    7c30:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    7c34:	cmp	w0, #0x0
    7c38:	ldr	x1, [sp, #72]
    7c3c:	csel	x0, xzr, x1, eq  // eq = none
    7c40:	b	7bb4 <gcc_c_fe_context@@Base+0x159c>
    7c44:	nop
    7c48:	stp	x29, x30, [sp, #-64]!
    7c4c:	adrp	x2, 2a000 <xexit@@Base+0x14e10>
    7c50:	mov	x29, sp
    7c54:	ldr	x2, [x2, #3648]
    7c58:	stp	x19, x20, [sp, #16]
    7c5c:	mov	x19, x1
    7c60:	ldr	x20, [x0, #16]
    7c64:	mov	w1, #0x51                  	// #81
    7c68:	str	x21, [sp, #32]
    7c6c:	mov	x0, x20
    7c70:	ldr	x21, [x2]
    7c74:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    7c78:	cbnz	w0, 7c90 <gcc_c_fe_context@@Base+0x1678>
    7c7c:	mov	w0, #0x0                   	// #0
    7c80:	ldp	x19, x20, [sp, #16]
    7c84:	ldr	x21, [sp, #32]
    7c88:	ldp	x29, x30, [sp], #64
    7c8c:	ret
    7c90:	mov	x1, x21
    7c94:	mov	x0, x20
    7c98:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    7c9c:	cbz	w0, 7c7c <gcc_c_fe_context@@Base+0x1664>
    7ca0:	mov	x0, x20
    7ca4:	mov	x1, #0x1                   	// #1
    7ca8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7cac:	cbz	w0, 7c7c <gcc_c_fe_context@@Base+0x1664>
    7cb0:	mov	x1, x19
    7cb4:	mov	x0, x20
    7cb8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7cbc:	cbz	w0, 7c7c <gcc_c_fe_context@@Base+0x1664>
    7cc0:	mov	x0, x20
    7cc4:	mov	w1, #0x1                   	// #1
    7cc8:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    7ccc:	cbz	w0, 7c7c <gcc_c_fe_context@@Base+0x1664>
    7cd0:	add	x1, sp, #0x38
    7cd4:	mov	x0, x20
    7cd8:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    7cdc:	cmp	w0, #0x0
    7ce0:	ldr	w1, [sp, #56]
    7ce4:	mov	w0, #0x0                   	// #0
    7ce8:	csel	w0, w0, w1, eq  // eq = none
    7cec:	b	7c80 <gcc_c_fe_context@@Base+0x1668>
    7cf0:	stp	x29, x30, [sp, #-80]!
    7cf4:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    7cf8:	mov	x29, sp
    7cfc:	ldr	x5, [x5, #3624]
    7d00:	stp	x19, x20, [sp, #16]
    7d04:	mov	w20, w4
    7d08:	ldr	x19, [x0, #16]
    7d0c:	stp	x21, x22, [sp, #32]
    7d10:	mov	x22, x2
    7d14:	mov	x21, x3
    7d18:	mov	x0, x19
    7d1c:	stp	x23, x24, [sp, #48]
    7d20:	mov	x23, x1
    7d24:	mov	w1, #0x51                  	// #81
    7d28:	ldr	x24, [x5]
    7d2c:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    7d30:	cbnz	w0, 7d4c <gcc_c_fe_context@@Base+0x1734>
    7d34:	mov	w0, #0x0                   	// #0
    7d38:	ldp	x19, x20, [sp, #16]
    7d3c:	ldp	x21, x22, [sp, #32]
    7d40:	ldp	x23, x24, [sp, #48]
    7d44:	ldp	x29, x30, [sp], #80
    7d48:	ret
    7d4c:	mov	x1, x24
    7d50:	mov	x0, x19
    7d54:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    7d58:	cbz	w0, 7d34 <gcc_c_fe_context@@Base+0x171c>
    7d5c:	mov	x0, x19
    7d60:	mov	x1, #0x4                   	// #4
    7d64:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7d68:	cbz	w0, 7d34 <gcc_c_fe_context@@Base+0x171c>
    7d6c:	mov	x1, x23
    7d70:	mov	x0, x19
    7d74:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    7d78:	cbz	w0, 7d34 <gcc_c_fe_context@@Base+0x171c>
    7d7c:	mov	x1, x22
    7d80:	mov	x0, x19
    7d84:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7d88:	cbz	w0, 7d34 <gcc_c_fe_context@@Base+0x171c>
    7d8c:	mov	x1, x21
    7d90:	mov	x0, x19
    7d94:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    7d98:	cbz	w0, 7d34 <gcc_c_fe_context@@Base+0x171c>
    7d9c:	mov	w1, w20
    7da0:	mov	x0, x19
    7da4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7da8:	cbz	w0, 7d34 <gcc_c_fe_context@@Base+0x171c>
    7dac:	mov	x0, x19
    7db0:	mov	w1, #0x1                   	// #1
    7db4:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    7db8:	cbz	w0, 7d34 <gcc_c_fe_context@@Base+0x171c>
    7dbc:	add	x1, sp, #0x48
    7dc0:	mov	x0, x19
    7dc4:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    7dc8:	cmp	w0, #0x0
    7dcc:	ldr	w1, [sp, #72]
    7dd0:	mov	w0, #0x0                   	// #0
    7dd4:	csel	w0, w0, w1, eq  // eq = none
    7dd8:	b	7d38 <gcc_c_fe_context@@Base+0x1720>
    7ddc:	nop
    7de0:	stp	x29, x30, [sp, #-64]!
    7de4:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    7de8:	mov	x29, sp
    7dec:	ldr	x3, [x3, #4040]
    7df0:	stp	x21, x22, [sp, #32]
    7df4:	ldr	x21, [x0, #16]
    7df8:	stp	x19, x20, [sp, #16]
    7dfc:	mov	x19, x1
    7e00:	mov	w20, w2
    7e04:	mov	x0, x21
    7e08:	mov	w1, #0x51                  	// #81
    7e0c:	ldr	x22, [x3]
    7e10:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    7e14:	cbnz	w0, 7e2c <gcc_c_fe_context@@Base+0x1814>
    7e18:	mov	w0, #0x0                   	// #0
    7e1c:	ldp	x19, x20, [sp, #16]
    7e20:	ldp	x21, x22, [sp, #32]
    7e24:	ldp	x29, x30, [sp], #64
    7e28:	ret
    7e2c:	mov	x1, x22
    7e30:	mov	x0, x21
    7e34:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    7e38:	cbz	w0, 7e18 <gcc_c_fe_context@@Base+0x1800>
    7e3c:	mov	x0, x21
    7e40:	mov	x1, #0x2                   	// #2
    7e44:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7e48:	cbz	w0, 7e18 <gcc_c_fe_context@@Base+0x1800>
    7e4c:	mov	x1, x19
    7e50:	mov	x0, x21
    7e54:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7e58:	cbz	w0, 7e18 <gcc_c_fe_context@@Base+0x1800>
    7e5c:	sxtw	x1, w20
    7e60:	mov	x0, x21
    7e64:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7e68:	cbz	w0, 7e18 <gcc_c_fe_context@@Base+0x1800>
    7e6c:	mov	x0, x21
    7e70:	add	x1, sp, #0x3c
    7e74:	bl	6368 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x3f0>
    7e78:	cbz	w0, 7e18 <gcc_c_fe_context@@Base+0x1800>
    7e7c:	ldr	w0, [sp, #60]
    7e80:	ldp	x19, x20, [sp, #16]
    7e84:	ldp	x21, x22, [sp, #32]
    7e88:	ldp	x29, x30, [sp], #64
    7e8c:	ret
    7e90:	stp	x29, x30, [sp, #-64]!
    7e94:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    7e98:	mov	x29, sp
    7e9c:	ldr	x3, [x3, #3224]
    7ea0:	stp	x21, x22, [sp, #32]
    7ea4:	ldr	x21, [x0, #16]
    7ea8:	stp	x19, x20, [sp, #16]
    7eac:	mov	x19, x1
    7eb0:	mov	x20, x2
    7eb4:	mov	x0, x21
    7eb8:	mov	w1, #0x51                  	// #81
    7ebc:	ldr	x22, [x3]
    7ec0:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    7ec4:	cbnz	w0, 7edc <gcc_c_fe_context@@Base+0x18c4>
    7ec8:	mov	x0, #0x0                   	// #0
    7ecc:	ldp	x19, x20, [sp, #16]
    7ed0:	ldp	x21, x22, [sp, #32]
    7ed4:	ldp	x29, x30, [sp], #64
    7ed8:	ret
    7edc:	mov	x1, x22
    7ee0:	mov	x0, x21
    7ee4:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    7ee8:	cbz	w0, 7ec8 <gcc_c_fe_context@@Base+0x18b0>
    7eec:	mov	x0, x21
    7ef0:	mov	x1, #0x2                   	// #2
    7ef4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7ef8:	cbz	w0, 7ec8 <gcc_c_fe_context@@Base+0x18b0>
    7efc:	mov	x1, x19
    7f00:	mov	x0, x21
    7f04:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7f08:	cbz	w0, 7ec8 <gcc_c_fe_context@@Base+0x18b0>
    7f0c:	mov	x1, x20
    7f10:	mov	x0, x21
    7f14:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    7f18:	cbz	w0, 7ec8 <gcc_c_fe_context@@Base+0x18b0>
    7f1c:	mov	x0, x21
    7f20:	add	x1, sp, #0x38
    7f24:	bl	6310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x398>
    7f28:	cbz	w0, 7ec8 <gcc_c_fe_context@@Base+0x18b0>
    7f2c:	ldp	x19, x20, [sp, #16]
    7f30:	ldp	x21, x22, [sp, #32]
    7f34:	ldr	x0, [sp, #56]
    7f38:	ldp	x29, x30, [sp], #64
    7f3c:	ret
    7f40:	stp	x29, x30, [sp, #-80]!
    7f44:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    7f48:	mov	x29, sp
    7f4c:	ldr	x4, [x4, #3832]
    7f50:	stp	x19, x20, [sp, #16]
    7f54:	mov	x20, x3
    7f58:	ldr	x19, [x0, #16]
    7f5c:	stp	x21, x22, [sp, #32]
    7f60:	mov	w22, w1
    7f64:	mov	x21, x2
    7f68:	mov	x0, x19
    7f6c:	mov	w1, #0x51                  	// #81
    7f70:	str	x23, [sp, #48]
    7f74:	ldr	x23, [x4]
    7f78:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    7f7c:	cbnz	w0, 7f98 <gcc_c_fe_context@@Base+0x1980>
    7f80:	mov	x0, #0x0                   	// #0
    7f84:	ldp	x19, x20, [sp, #16]
    7f88:	ldp	x21, x22, [sp, #32]
    7f8c:	ldr	x23, [sp, #48]
    7f90:	ldp	x29, x30, [sp], #80
    7f94:	ret
    7f98:	mov	x1, x23
    7f9c:	mov	x0, x19
    7fa0:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    7fa4:	cbz	w0, 7f80 <gcc_c_fe_context@@Base+0x1968>
    7fa8:	mov	x0, x19
    7fac:	mov	x1, #0x3                   	// #3
    7fb0:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7fb4:	cbz	w0, 7f80 <gcc_c_fe_context@@Base+0x1968>
    7fb8:	sxtw	x1, w22
    7fbc:	mov	x0, x19
    7fc0:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7fc4:	cbz	w0, 7f80 <gcc_c_fe_context@@Base+0x1968>
    7fc8:	mov	x1, x21
    7fcc:	mov	x0, x19
    7fd0:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    7fd4:	cbz	w0, 7f80 <gcc_c_fe_context@@Base+0x1968>
    7fd8:	mov	x1, x20
    7fdc:	mov	x0, x19
    7fe0:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    7fe4:	cbz	w0, 7f80 <gcc_c_fe_context@@Base+0x1968>
    7fe8:	mov	x0, x19
    7fec:	mov	w1, #0x1                   	// #1
    7ff0:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    7ff4:	cbz	w0, 7f80 <gcc_c_fe_context@@Base+0x1968>
    7ff8:	add	x1, sp, #0x48
    7ffc:	mov	x0, x19
    8000:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    8004:	cmp	w0, #0x0
    8008:	ldr	x1, [sp, #72]
    800c:	csel	x0, xzr, x1, eq  // eq = none
    8010:	b	7f84 <gcc_c_fe_context@@Base+0x196c>
    8014:	nop
    8018:	stp	x29, x30, [sp, #-96]!
    801c:	adrp	x6, 2a000 <xexit@@Base+0x14e10>
    8020:	mov	x29, sp
    8024:	ldr	x6, [x6, #3384]
    8028:	stp	x21, x22, [sp, #32]
    802c:	mov	w22, w5
    8030:	ldr	x21, [x0, #16]
    8034:	stp	x19, x20, [sp, #16]
    8038:	mov	x19, x1
    803c:	mov	x20, x2
    8040:	mov	x0, x21
    8044:	mov	w1, #0x51                  	// #81
    8048:	stp	x23, x24, [sp, #48]
    804c:	mov	x24, x3
    8050:	mov	x23, x4
    8054:	str	x25, [sp, #64]
    8058:	ldr	x25, [x6]
    805c:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    8060:	cbnz	w0, 8080 <gcc_c_fe_context@@Base+0x1a68>
    8064:	mov	w0, #0x0                   	// #0
    8068:	ldp	x19, x20, [sp, #16]
    806c:	ldp	x21, x22, [sp, #32]
    8070:	ldp	x23, x24, [sp, #48]
    8074:	ldr	x25, [sp, #64]
    8078:	ldp	x29, x30, [sp], #96
    807c:	ret
    8080:	mov	x1, x25
    8084:	mov	x0, x21
    8088:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    808c:	cbz	w0, 8064 <gcc_c_fe_context@@Base+0x1a4c>
    8090:	mov	x0, x21
    8094:	mov	x1, #0x5                   	// #5
    8098:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    809c:	cbz	w0, 8064 <gcc_c_fe_context@@Base+0x1a4c>
    80a0:	mov	x1, x19
    80a4:	mov	x0, x21
    80a8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    80ac:	cbz	w0, 8064 <gcc_c_fe_context@@Base+0x1a4c>
    80b0:	mov	x1, x20
    80b4:	mov	x0, x21
    80b8:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    80bc:	cbz	w0, 8064 <gcc_c_fe_context@@Base+0x1a4c>
    80c0:	mov	x1, x24
    80c4:	mov	x0, x21
    80c8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    80cc:	cbz	w0, 8064 <gcc_c_fe_context@@Base+0x1a4c>
    80d0:	mov	x1, x23
    80d4:	mov	x0, x21
    80d8:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    80dc:	cbz	w0, 8064 <gcc_c_fe_context@@Base+0x1a4c>
    80e0:	mov	w1, w22
    80e4:	mov	x0, x21
    80e8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    80ec:	cbz	w0, 8064 <gcc_c_fe_context@@Base+0x1a4c>
    80f0:	mov	x0, x21
    80f4:	mov	w1, #0x1                   	// #1
    80f8:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    80fc:	cbz	w0, 8064 <gcc_c_fe_context@@Base+0x1a4c>
    8100:	add	x1, sp, #0x58
    8104:	mov	x0, x21
    8108:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    810c:	cmp	w0, #0x0
    8110:	ldr	w1, [sp, #88]
    8114:	mov	w0, #0x0                   	// #0
    8118:	csel	w0, w0, w1, eq  // eq = none
    811c:	b	8068 <gcc_c_fe_context@@Base+0x1a50>
    8120:	stp	x29, x30, [sp, #-64]!
    8124:	adrp	x2, 2a000 <xexit@@Base+0x14e10>
    8128:	mov	x29, sp
    812c:	ldr	x2, [x2, #3512]
    8130:	stp	x19, x20, [sp, #16]
    8134:	mov	x19, x1
    8138:	ldr	x20, [x0, #16]
    813c:	mov	w1, #0x51                  	// #81
    8140:	str	x21, [sp, #32]
    8144:	mov	x0, x20
    8148:	ldr	x21, [x2]
    814c:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    8150:	cbnz	w0, 8168 <gcc_c_fe_context@@Base+0x1b50>
    8154:	mov	x0, #0x0                   	// #0
    8158:	ldp	x19, x20, [sp, #16]
    815c:	ldr	x21, [sp, #32]
    8160:	ldp	x29, x30, [sp], #64
    8164:	ret
    8168:	mov	x1, x21
    816c:	mov	x0, x20
    8170:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    8174:	cbz	w0, 8154 <gcc_c_fe_context@@Base+0x1b3c>
    8178:	mov	x0, x20
    817c:	mov	x1, #0x1                   	// #1
    8180:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    8184:	cbz	w0, 8154 <gcc_c_fe_context@@Base+0x1b3c>
    8188:	mov	x1, x19
    818c:	mov	x0, x20
    8190:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    8194:	cbz	w0, 8154 <gcc_c_fe_context@@Base+0x1b3c>
    8198:	mov	x0, x20
    819c:	mov	w1, #0x1                   	// #1
    81a0:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    81a4:	cbz	w0, 8154 <gcc_c_fe_context@@Base+0x1b3c>
    81a8:	mov	x0, x20
    81ac:	add	x1, sp, #0x38
    81b0:	bl	62d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x360>
    81b4:	cbz	w0, 8154 <gcc_c_fe_context@@Base+0x1b3c>
    81b8:	ldp	x19, x20, [sp, #16]
    81bc:	ldr	x21, [sp, #32]
    81c0:	ldr	x0, [sp, #56]
    81c4:	ldp	x29, x30, [sp], #64
    81c8:	ret
    81cc:	nop
    81d0:	stp	x29, x30, [sp, #-64]!
    81d4:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    81d8:	mov	x29, sp
    81dc:	ldr	x3, [x3, #3456]
    81e0:	stp	x21, x22, [sp, #32]
    81e4:	ldr	x21, [x0, #16]
    81e8:	stp	x19, x20, [sp, #16]
    81ec:	mov	w19, w1
    81f0:	mov	x20, x2
    81f4:	mov	x0, x21
    81f8:	mov	w1, #0x51                  	// #81
    81fc:	ldr	x22, [x3]
    8200:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    8204:	cbnz	w0, 821c <gcc_c_fe_context@@Base+0x1c04>
    8208:	mov	x0, #0x0                   	// #0
    820c:	ldp	x19, x20, [sp, #16]
    8210:	ldp	x21, x22, [sp, #32]
    8214:	ldp	x29, x30, [sp], #64
    8218:	ret
    821c:	mov	x1, x22
    8220:	mov	x0, x21
    8224:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    8228:	cbz	w0, 8208 <gcc_c_fe_context@@Base+0x1bf0>
    822c:	mov	x0, x21
    8230:	mov	x1, #0x2                   	// #2
    8234:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    8238:	cbz	w0, 8208 <gcc_c_fe_context@@Base+0x1bf0>
    823c:	sxtw	x1, w19
    8240:	mov	x0, x21
    8244:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    8248:	cbz	w0, 8208 <gcc_c_fe_context@@Base+0x1bf0>
    824c:	mov	x1, x20
    8250:	mov	x0, x21
    8254:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    8258:	cbz	w0, 8208 <gcc_c_fe_context@@Base+0x1bf0>
    825c:	mov	x0, x21
    8260:	add	x1, sp, #0x38
    8264:	bl	6310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x398>
    8268:	cbz	w0, 8208 <gcc_c_fe_context@@Base+0x1bf0>
    826c:	ldp	x19, x20, [sp, #16]
    8270:	ldp	x21, x22, [sp, #32]
    8274:	ldr	x0, [sp, #56]
    8278:	ldp	x29, x30, [sp], #64
    827c:	ret
    8280:	stp	x29, x30, [sp, #-80]!
    8284:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    8288:	mov	x29, sp
    828c:	ldr	x4, [x4, #3424]
    8290:	stp	x19, x20, [sp, #16]
    8294:	mov	x20, x3
    8298:	ldr	x19, [x0, #16]
    829c:	stp	x21, x22, [sp, #32]
    82a0:	mov	x22, x1
    82a4:	mov	x21, x2
    82a8:	mov	x0, x19
    82ac:	mov	w1, #0x51                  	// #81
    82b0:	str	x23, [sp, #48]
    82b4:	ldr	x23, [x4]
    82b8:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    82bc:	cbnz	w0, 82d8 <gcc_c_fe_context@@Base+0x1cc0>
    82c0:	mov	w0, #0x0                   	// #0
    82c4:	ldp	x19, x20, [sp, #16]
    82c8:	ldp	x21, x22, [sp, #32]
    82cc:	ldr	x23, [sp, #48]
    82d0:	ldp	x29, x30, [sp], #80
    82d4:	ret
    82d8:	mov	x1, x23
    82dc:	mov	x0, x19
    82e0:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    82e4:	cbz	w0, 82c0 <gcc_c_fe_context@@Base+0x1ca8>
    82e8:	mov	x0, x19
    82ec:	mov	x1, #0x3                   	// #3
    82f0:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    82f4:	cbz	w0, 82c0 <gcc_c_fe_context@@Base+0x1ca8>
    82f8:	mov	x1, x22
    82fc:	mov	x0, x19
    8300:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    8304:	cbz	w0, 82c0 <gcc_c_fe_context@@Base+0x1ca8>
    8308:	mov	x1, x21
    830c:	mov	x0, x19
    8310:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    8314:	cbz	w0, 82c0 <gcc_c_fe_context@@Base+0x1ca8>
    8318:	mov	x1, x20
    831c:	mov	x0, x19
    8320:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    8324:	cbz	w0, 82c0 <gcc_c_fe_context@@Base+0x1ca8>
    8328:	mov	x0, x19
    832c:	mov	w1, #0x1                   	// #1
    8330:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    8334:	cbz	w0, 82c0 <gcc_c_fe_context@@Base+0x1ca8>
    8338:	add	x1, sp, #0x48
    833c:	mov	x0, x19
    8340:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    8344:	cmp	w0, #0x0
    8348:	ldr	w1, [sp, #72]
    834c:	mov	w0, #0x0                   	// #0
    8350:	csel	w0, w0, w1, eq  // eq = none
    8354:	b	82c4 <gcc_c_fe_context@@Base+0x1cac>
    8358:	stp	x29, x30, [sp, #-64]!
    835c:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    8360:	mov	x29, sp
    8364:	ldr	x3, [x3, #4056]
    8368:	stp	x21, x22, [sp, #32]
    836c:	ldr	x21, [x0, #16]
    8370:	stp	x19, x20, [sp, #16]
    8374:	mov	x19, x1
    8378:	mov	x20, x2
    837c:	mov	x0, x21
    8380:	mov	w1, #0x51                  	// #81
    8384:	ldr	x22, [x3]
    8388:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    838c:	cbnz	w0, 83a4 <gcc_c_fe_context@@Base+0x1d8c>
    8390:	mov	w0, #0x0                   	// #0
    8394:	ldp	x19, x20, [sp, #16]
    8398:	ldp	x21, x22, [sp, #32]
    839c:	ldp	x29, x30, [sp], #64
    83a0:	ret
    83a4:	mov	x1, x22
    83a8:	mov	x0, x21
    83ac:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    83b0:	cbz	w0, 8390 <gcc_c_fe_context@@Base+0x1d78>
    83b4:	mov	x0, x21
    83b8:	mov	x1, #0x2                   	// #2
    83bc:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    83c0:	cbz	w0, 8390 <gcc_c_fe_context@@Base+0x1d78>
    83c4:	mov	x1, x19
    83c8:	mov	x0, x21
    83cc:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    83d0:	cbz	w0, 8390 <gcc_c_fe_context@@Base+0x1d78>
    83d4:	mov	x1, x20
    83d8:	mov	x0, x21
    83dc:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    83e0:	cbz	w0, 8390 <gcc_c_fe_context@@Base+0x1d78>
    83e4:	mov	x0, x21
    83e8:	add	x1, sp, #0x3c
    83ec:	bl	6368 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x3f0>
    83f0:	cbz	w0, 8390 <gcc_c_fe_context@@Base+0x1d78>
    83f4:	ldr	w0, [sp, #60]
    83f8:	ldp	x19, x20, [sp, #16]
    83fc:	ldp	x21, x22, [sp, #32]
    8400:	ldp	x29, x30, [sp], #64
    8404:	ret
    8408:	stp	x29, x30, [sp, #-96]!
    840c:	adrp	x6, 2a000 <xexit@@Base+0x14e10>
    8410:	mov	x29, sp
    8414:	ldr	x6, [x6, #3368]
    8418:	stp	x21, x22, [sp, #32]
    841c:	mov	x22, x5
    8420:	ldr	x21, [x0, #16]
    8424:	stp	x19, x20, [sp, #16]
    8428:	mov	x19, x1
    842c:	mov	x20, x2
    8430:	mov	x0, x21
    8434:	mov	w1, #0x51                  	// #81
    8438:	stp	x23, x24, [sp, #48]
    843c:	mov	x24, x3
    8440:	mov	x23, x4
    8444:	str	x25, [sp, #64]
    8448:	ldr	x25, [x6]
    844c:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    8450:	cbnz	w0, 8470 <gcc_c_fe_context@@Base+0x1e58>
    8454:	mov	w0, #0x0                   	// #0
    8458:	ldp	x19, x20, [sp, #16]
    845c:	ldp	x21, x22, [sp, #32]
    8460:	ldp	x23, x24, [sp, #48]
    8464:	ldr	x25, [sp, #64]
    8468:	ldp	x29, x30, [sp], #96
    846c:	ret
    8470:	mov	x1, x25
    8474:	mov	x0, x21
    8478:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    847c:	cbz	w0, 8454 <gcc_c_fe_context@@Base+0x1e3c>
    8480:	mov	x0, x21
    8484:	mov	x1, #0x5                   	// #5
    8488:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    848c:	cbz	w0, 8454 <gcc_c_fe_context@@Base+0x1e3c>
    8490:	mov	x1, x19
    8494:	mov	x0, x21
    8498:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    849c:	cbz	w0, 8454 <gcc_c_fe_context@@Base+0x1e3c>
    84a0:	mov	x1, x20
    84a4:	mov	x0, x21
    84a8:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    84ac:	cbz	w0, 8454 <gcc_c_fe_context@@Base+0x1e3c>
    84b0:	mov	x1, x24
    84b4:	mov	x0, x21
    84b8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    84bc:	cbz	w0, 8454 <gcc_c_fe_context@@Base+0x1e3c>
    84c0:	mov	x1, x23
    84c4:	mov	x0, x21
    84c8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    84cc:	cbz	w0, 8454 <gcc_c_fe_context@@Base+0x1e3c>
    84d0:	mov	x1, x22
    84d4:	mov	x0, x21
    84d8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    84dc:	cbz	w0, 8454 <gcc_c_fe_context@@Base+0x1e3c>
    84e0:	mov	x0, x21
    84e4:	mov	w1, #0x1                   	// #1
    84e8:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    84ec:	cbz	w0, 8454 <gcc_c_fe_context@@Base+0x1e3c>
    84f0:	add	x1, sp, #0x58
    84f4:	mov	x0, x21
    84f8:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    84fc:	cmp	w0, #0x0
    8500:	ldr	w1, [sp, #88]
    8504:	mov	w0, #0x0                   	// #0
    8508:	csel	w0, w0, w1, eq  // eq = none
    850c:	b	8458 <gcc_c_fe_context@@Base+0x1e40>
    8510:	stp	x29, x30, [sp, #-64]!
    8514:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    8518:	mov	x29, sp
    851c:	ldr	x3, [x3, #3672]
    8520:	stp	x21, x22, [sp, #32]
    8524:	ldr	x21, [x0, #16]
    8528:	stp	x19, x20, [sp, #16]
    852c:	mov	x19, x1
    8530:	mov	w20, w2
    8534:	mov	x0, x21
    8538:	mov	w1, #0x51                  	// #81
    853c:	ldr	x22, [x3]
    8540:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    8544:	cbnz	w0, 855c <gcc_c_fe_context@@Base+0x1f44>
    8548:	mov	x0, #0x0                   	// #0
    854c:	ldp	x19, x20, [sp, #16]
    8550:	ldp	x21, x22, [sp, #32]
    8554:	ldp	x29, x30, [sp], #64
    8558:	ret
    855c:	mov	x1, x22
    8560:	mov	x0, x21
    8564:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    8568:	cbz	w0, 8548 <gcc_c_fe_context@@Base+0x1f30>
    856c:	mov	x0, x21
    8570:	mov	x1, #0x2                   	// #2
    8574:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    8578:	cbz	w0, 8548 <gcc_c_fe_context@@Base+0x1f30>
    857c:	mov	x1, x19
    8580:	mov	x0, x21
    8584:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    8588:	cbz	w0, 8548 <gcc_c_fe_context@@Base+0x1f30>
    858c:	mov	w1, w20
    8590:	mov	x0, x21
    8594:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    8598:	cbz	w0, 8548 <gcc_c_fe_context@@Base+0x1f30>
    859c:	mov	x0, x21
    85a0:	add	x1, sp, #0x38
    85a4:	bl	6310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x398>
    85a8:	cbz	w0, 8548 <gcc_c_fe_context@@Base+0x1f30>
    85ac:	ldp	x19, x20, [sp, #16]
    85b0:	ldp	x21, x22, [sp, #32]
    85b4:	ldr	x0, [sp, #56]
    85b8:	ldp	x29, x30, [sp], #64
    85bc:	ret
    85c0:	stp	x29, x30, [sp, #-48]!
    85c4:	mov	x29, sp
    85c8:	stp	x19, x20, [sp, #16]
    85cc:	mov	x20, x1
    85d0:	mov	x19, x0
    85d4:	mov	w1, #0x51                  	// #81
    85d8:	stp	x21, x22, [sp, #32]
    85dc:	mov	x22, x2
    85e0:	mov	x21, x3
    85e4:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    85e8:	cbnz	w0, 8600 <gcc_c_fe_context@@Base+0x1fe8>
    85ec:	mov	w0, #0x0                   	// #0
    85f0:	ldp	x19, x20, [sp, #16]
    85f4:	ldp	x21, x22, [sp, #32]
    85f8:	ldp	x29, x30, [sp], #48
    85fc:	ret
    8600:	mov	x1, x20
    8604:	mov	x0, x19
    8608:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    860c:	cbz	w0, 85ec <gcc_c_fe_context@@Base+0x1fd4>
    8610:	mov	x0, x19
    8614:	mov	x1, #0x1                   	// #1
    8618:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    861c:	cbz	w0, 85ec <gcc_c_fe_context@@Base+0x1fd4>
    8620:	mov	x1, x21
    8624:	mov	x0, x19
    8628:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    862c:	cbz	w0, 85ec <gcc_c_fe_context@@Base+0x1fd4>
    8630:	mov	x0, x19
    8634:	mov	w1, #0x1                   	// #1
    8638:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    863c:	cbz	w0, 85ec <gcc_c_fe_context@@Base+0x1fd4>
    8640:	mov	x1, x22
    8644:	mov	x0, x19
    8648:	ldp	x19, x20, [sp, #16]
    864c:	ldp	x21, x22, [sp, #32]
    8650:	ldp	x29, x30, [sp], #48
    8654:	b	62d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x360>
    8658:	stp	x29, x30, [sp, #-32]!
    865c:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    8660:	mov	x3, x1
    8664:	mov	x29, sp
    8668:	ldr	x4, [x4, #3752]
    866c:	add	x2, sp, #0x18
    8670:	ldr	x0, [x0, #16]
    8674:	ldr	x1, [x4]
    8678:	bl	85c0 <gcc_c_fe_context@@Base+0x1fa8>
    867c:	cmp	w0, #0x0
    8680:	ldr	x1, [sp, #24]
    8684:	ldp	x29, x30, [sp], #32
    8688:	csel	x0, x1, xzr, ne  // ne = any
    868c:	ret
    8690:	stp	x29, x30, [sp, #-32]!
    8694:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    8698:	mov	x3, x1
    869c:	mov	x29, sp
    86a0:	ldr	x4, [x4, #3936]
    86a4:	add	x2, sp, #0x18
    86a8:	ldr	x0, [x0, #16]
    86ac:	ldr	x1, [x4]
    86b0:	bl	85c0 <gcc_c_fe_context@@Base+0x1fa8>
    86b4:	cmp	w0, #0x0
    86b8:	ldr	x1, [sp, #24]
    86bc:	ldp	x29, x30, [sp], #32
    86c0:	csel	x0, x1, xzr, ne  // ne = any
    86c4:	ret
    86c8:	stp	x29, x30, [sp, #-32]!
    86cc:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    86d0:	mov	x3, x1
    86d4:	mov	x29, sp
    86d8:	ldr	x4, [x4, #3520]
    86dc:	add	x2, sp, #0x18
    86e0:	ldr	x0, [x0, #16]
    86e4:	ldr	x1, [x4]
    86e8:	bl	85c0 <gcc_c_fe_context@@Base+0x1fa8>
    86ec:	cmp	w0, #0x0
    86f0:	ldr	x1, [sp, #24]
    86f4:	ldp	x29, x30, [sp], #32
    86f8:	csel	x0, x1, xzr, ne  // ne = any
    86fc:	ret
    8700:	stp	x29, x30, [sp, #-48]!
    8704:	mov	x29, sp
    8708:	stp	x19, x20, [sp, #16]
    870c:	mov	x20, x1
    8710:	mov	x19, x0
    8714:	mov	w1, #0x51                  	// #81
    8718:	str	x21, [sp, #32]
    871c:	mov	x21, x2
    8720:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    8724:	cbnz	w0, 873c <gcc_c_fe_context@@Base+0x2124>
    8728:	mov	w0, #0x0                   	// #0
    872c:	ldp	x19, x20, [sp, #16]
    8730:	ldr	x21, [sp, #32]
    8734:	ldp	x29, x30, [sp], #48
    8738:	ret
    873c:	mov	x1, x20
    8740:	mov	x0, x19
    8744:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    8748:	cbz	w0, 8728 <gcc_c_fe_context@@Base+0x2110>
    874c:	mov	x0, x19
    8750:	mov	x1, #0x0                   	// #0
    8754:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    8758:	cbz	w0, 8728 <gcc_c_fe_context@@Base+0x2110>
    875c:	mov	x0, x19
    8760:	mov	w1, #0x1                   	// #1
    8764:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    8768:	cbz	w0, 8728 <gcc_c_fe_context@@Base+0x2110>
    876c:	mov	x1, x21
    8770:	mov	x0, x19
    8774:	ldp	x19, x20, [sp, #16]
    8778:	ldr	x21, [sp, #32]
    877c:	ldp	x29, x30, [sp], #48
    8780:	b	62d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x360>
    8784:	nop
    8788:	stp	x29, x30, [sp, #-32]!
    878c:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    8790:	mov	x29, sp
    8794:	ldr	x1, [x1, #3568]
    8798:	add	x2, sp, #0x18
    879c:	ldr	x0, [x0, #16]
    87a0:	ldr	x1, [x1]
    87a4:	bl	8700 <gcc_c_fe_context@@Base+0x20e8>
    87a8:	cmp	w0, #0x0
    87ac:	ldr	x1, [sp, #24]
    87b0:	ldp	x29, x30, [sp], #32
    87b4:	csel	x0, x1, xzr, ne  // ne = any
    87b8:	ret
    87bc:	nop
    87c0:	stp	x29, x30, [sp, #-32]!
    87c4:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    87c8:	mov	x29, sp
    87cc:	ldr	x1, [x1, #3856]
    87d0:	add	x2, sp, #0x18
    87d4:	ldr	x0, [x0, #16]
    87d8:	ldr	x1, [x1]
    87dc:	bl	8700 <gcc_c_fe_context@@Base+0x20e8>
    87e0:	cmp	w0, #0x0
    87e4:	ldr	x1, [sp, #24]
    87e8:	ldp	x29, x30, [sp], #32
    87ec:	csel	x0, x1, xzr, ne  // ne = any
    87f0:	ret
    87f4:	nop
    87f8:	stp	x29, x30, [sp, #-32]!
    87fc:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    8800:	mov	x29, sp
    8804:	ldr	x1, [x1, #3304]
    8808:	add	x2, sp, #0x18
    880c:	ldr	x0, [x0, #16]
    8810:	ldr	x1, [x1]
    8814:	bl	8700 <gcc_c_fe_context@@Base+0x20e8>
    8818:	cmp	w0, #0x0
    881c:	ldr	x1, [sp, #24]
    8820:	ldp	x29, x30, [sp], #32
    8824:	csel	x0, x1, xzr, ne  // ne = any
    8828:	ret
    882c:	nop
    8830:	stp	x29, x30, [sp, #-32]!
    8834:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    8838:	mov	x29, sp
    883c:	ldr	x1, [x1, #3200]
    8840:	add	x2, sp, #0x18
    8844:	ldr	x0, [x0, #16]
    8848:	ldr	x1, [x1]
    884c:	bl	8700 <gcc_c_fe_context@@Base+0x20e8>
    8850:	cmp	w0, #0x0
    8854:	ldr	x1, [sp, #24]
    8858:	ldp	x29, x30, [sp], #32
    885c:	csel	x0, x1, xzr, ne  // ne = any
    8860:	ret
    8864:	nop
    8868:	stp	x29, x30, [sp, #-32]!
    886c:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    8870:	mov	x29, sp
    8874:	ldr	x1, [x1, #3920]
    8878:	add	x2, sp, #0x18
    887c:	ldr	x0, [x0, #16]
    8880:	ldr	x1, [x1]
    8884:	bl	8700 <gcc_c_fe_context@@Base+0x20e8>
    8888:	cmp	w0, #0x0
    888c:	ldr	x1, [sp, #24]
    8890:	ldp	x29, x30, [sp], #32
    8894:	csel	x0, x1, xzr, ne  // ne = any
    8898:	ret
    889c:	nop
    88a0:	stp	x29, x30, [sp, #-64]!
    88a4:	mov	x29, sp
    88a8:	stp	x19, x20, [sp, #16]
    88ac:	mov	x20, x1
    88b0:	mov	x19, x0
    88b4:	mov	w1, #0x51                  	// #81
    88b8:	stp	x21, x22, [sp, #32]
    88bc:	mov	x21, x3
    88c0:	mov	w22, w4
    88c4:	str	x23, [sp, #48]
    88c8:	mov	x23, x2
    88cc:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    88d0:	cbnz	w0, 88ec <gcc_c_fe_context@@Base+0x22d4>
    88d4:	mov	w0, #0x0                   	// #0
    88d8:	ldp	x19, x20, [sp, #16]
    88dc:	ldp	x21, x22, [sp, #32]
    88e0:	ldr	x23, [sp, #48]
    88e4:	ldp	x29, x30, [sp], #64
    88e8:	ret
    88ec:	mov	x1, x20
    88f0:	mov	x0, x19
    88f4:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    88f8:	cbz	w0, 88d4 <gcc_c_fe_context@@Base+0x22bc>
    88fc:	mov	x0, x19
    8900:	mov	x1, #0x2                   	// #2
    8904:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    8908:	cbz	w0, 88d4 <gcc_c_fe_context@@Base+0x22bc>
    890c:	mov	x1, x21
    8910:	mov	x0, x19
    8914:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    8918:	cbz	w0, 88d4 <gcc_c_fe_context@@Base+0x22bc>
    891c:	sxtw	x1, w22
    8920:	mov	x0, x19
    8924:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    8928:	cbz	w0, 88d4 <gcc_c_fe_context@@Base+0x22bc>
    892c:	mov	x1, x23
    8930:	mov	x0, x19
    8934:	ldp	x19, x20, [sp, #16]
    8938:	ldp	x21, x22, [sp, #32]
    893c:	ldr	x23, [sp, #48]
    8940:	ldp	x29, x30, [sp], #64
    8944:	b	6310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x398>
    8948:	stp	x29, x30, [sp, #-32]!
    894c:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    8950:	mov	x3, x1
    8954:	mov	x29, sp
    8958:	ldr	x5, [x5, #3816]
    895c:	mov	w4, w2
    8960:	ldr	x0, [x0, #16]
    8964:	add	x2, sp, #0x18
    8968:	ldr	x1, [x5]
    896c:	bl	88a0 <gcc_c_fe_context@@Base+0x2288>
    8970:	cmp	w0, #0x0
    8974:	ldr	x1, [sp, #24]
    8978:	ldp	x29, x30, [sp], #32
    897c:	csel	x0, x1, xzr, ne  // ne = any
    8980:	ret
    8984:	nop
    8988:	stp	x29, x30, [sp, #-32]!
    898c:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    8990:	mov	x3, x1
    8994:	mov	x29, sp
    8998:	ldr	x5, [x5, #3600]
    899c:	mov	w4, w2
    89a0:	ldr	x0, [x0, #16]
    89a4:	add	x2, sp, #0x18
    89a8:	ldr	x1, [x5]
    89ac:	bl	88a0 <gcc_c_fe_context@@Base+0x2288>
    89b0:	cmp	w0, #0x0
    89b4:	ldr	x1, [sp, #24]
    89b8:	ldp	x29, x30, [sp], #32
    89bc:	csel	x0, x1, xzr, ne  // ne = any
    89c0:	ret
    89c4:	nop

00000000000089c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base>:
    89c8:	stp	x29, x30, [sp, #-96]!
    89cc:	mov	x4, #0x3ffffffffffffff     	// #288230376151711743
    89d0:	mov	x29, sp
    89d4:	stp	x19, x20, [sp, #16]
    89d8:	mov	x19, x1
    89dc:	stp	x23, x24, [sp, #48]
    89e0:	ldp	x24, x20, [x0]
    89e4:	stp	x21, x22, [sp, #32]
    89e8:	stp	x25, x26, [sp, #64]
    89ec:	str	x27, [sp, #80]
    89f0:	sub	x1, x20, x24
    89f4:	cmp	x4, x1, asr #5
    89f8:	b.eq	8be0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x218>  // b.none
    89fc:	mov	x23, x0
    8a00:	mov	x26, x2
    8a04:	asr	x0, x1, #5
    8a08:	sub	x27, x19, x24
    8a0c:	cbz	x0, 8bc8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x200>
    8a10:	cmp	x0, x0, lsl #1
    8a14:	mov	x25, #0x7fffffffffffffe0    	// #9223372036854775776
    8a18:	lsl	x0, x0, #1
    8a1c:	b.ls	8b90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1c8>  // b.plast
    8a20:	mov	x0, x25
    8a24:	bl	5550 <_Znwm@plt>
    8a28:	mov	x2, x26
    8a2c:	mov	x21, x0
    8a30:	add	x3, x21, x27
    8a34:	add	x25, x0, x25
    8a38:	add	x22, x0, #0x20
    8a3c:	add	x0, x3, #0x10
    8a40:	str	x0, [x21, x27]
    8a44:	ldr	x0, [x2], #16
    8a48:	cmp	x0, x2
    8a4c:	b.eq	8bbc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f4>  // b.none
    8a50:	str	x0, [x21, x27]
    8a54:	ldr	x0, [x26, #16]
    8a58:	str	x0, [x3, #16]
    8a5c:	ldr	x0, [x26, #8]
    8a60:	stp	x2, xzr, [x26]
    8a64:	cmp	x19, x24
    8a68:	str	x0, [x3, #8]
    8a6c:	strb	wzr, [x26, #16]
    8a70:	b.eq	8ae8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x120>  // b.none
    8a74:	mov	x2, x21
    8a78:	mov	x4, x24
    8a7c:	b	8aa4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xdc>
    8a80:	str	x6, [x2]
    8a84:	add	x4, x4, #0x20
    8a88:	add	x2, x2, #0x20
    8a8c:	ldur	x1, [x4, #-16]
    8a90:	stur	x1, [x2, #-16]
    8a94:	ldur	x1, [x4, #-24]
    8a98:	stur	x1, [x2, #-24]
    8a9c:	cmp	x19, x4
    8aa0:	b.eq	8adc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x114>  // b.none
    8aa4:	mov	x5, x4
    8aa8:	add	x1, x2, #0x10
    8aac:	str	x1, [x2]
    8ab0:	ldr	x6, [x5], #16
    8ab4:	cmp	x6, x5
    8ab8:	b.ne	8a80 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb8>  // b.any
    8abc:	ldp	x0, x1, [x4, #16]
    8ac0:	stp	x0, x1, [x2, #16]
    8ac4:	add	x4, x4, #0x20
    8ac8:	ldur	x1, [x4, #-24]
    8acc:	str	x1, [x2, #8]
    8ad0:	cmp	x19, x4
    8ad4:	add	x2, x2, #0x20
    8ad8:	b.ne	8aa4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xdc>  // b.any
    8adc:	sub	x22, x19, x24
    8ae0:	add	x22, x22, #0x20
    8ae4:	add	x22, x21, x22
    8ae8:	cmp	x19, x20
    8aec:	b.eq	8b60 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x198>  // b.none
    8af0:	mov	x3, x19
    8af4:	mov	x2, x22
    8af8:	b	8b20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x158>
    8afc:	ldr	x1, [x3, #16]
    8b00:	str	x1, [x2, #16]
    8b04:	ldr	x1, [x3, #8]
    8b08:	str	x5, [x2]
    8b0c:	str	x1, [x2, #8]
    8b10:	add	x3, x3, #0x20
    8b14:	cmp	x3, x20
    8b18:	add	x2, x2, #0x20
    8b1c:	b.eq	8b58 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x190>  // b.none
    8b20:	mov	x4, x3
    8b24:	add	x1, x2, #0x10
    8b28:	str	x1, [x2]
    8b2c:	ldr	x5, [x4], #16
    8b30:	cmp	x5, x4
    8b34:	b.ne	8afc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x134>  // b.any
    8b38:	ldr	x1, [x3, #8]
    8b3c:	str	x1, [x2, #8]
    8b40:	ldp	x4, x5, [x3, #16]
    8b44:	stp	x4, x5, [x2, #16]
    8b48:	add	x3, x3, #0x20
    8b4c:	cmp	x3, x20
    8b50:	add	x2, x2, #0x20
    8b54:	b.ne	8b20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x158>  // b.any
    8b58:	sub	x3, x3, x19
    8b5c:	add	x22, x22, x3
    8b60:	cbz	x24, 8b6c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a4>
    8b64:	mov	x0, x24
    8b68:	bl	5540 <_ZdlPv@plt>
    8b6c:	ldp	x19, x20, [sp, #16]
    8b70:	ldr	x27, [sp, #80]
    8b74:	stp	x21, x22, [x23]
    8b78:	str	x25, [x23, #16]
    8b7c:	ldp	x21, x22, [sp, #32]
    8b80:	ldp	x23, x24, [sp, #48]
    8b84:	ldp	x25, x26, [sp, #64]
    8b88:	ldp	x29, x30, [sp], #96
    8b8c:	ret
    8b90:	cbnz	x0, 8bd0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x208>
    8b94:	mov	x2, x26
    8b98:	mov	x21, #0x0                   	// #0
    8b9c:	add	x3, x21, x27
    8ba0:	mov	x22, #0x20                  	// #32
    8ba4:	add	x0, x3, #0x10
    8ba8:	str	x0, [x21, x27]
    8bac:	ldr	x0, [x2], #16
    8bb0:	mov	x25, #0x0                   	// #0
    8bb4:	cmp	x0, x2
    8bb8:	b.ne	8a50 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x88>  // b.any
    8bbc:	ldp	x0, x1, [x26, #16]
    8bc0:	stp	x0, x1, [x3, #16]
    8bc4:	b	8a5c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x94>
    8bc8:	mov	x25, #0x20                  	// #32
    8bcc:	b	8a20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x58>
    8bd0:	cmp	x0, x4
    8bd4:	csel	x0, x0, x4, ls  // ls = plast
    8bd8:	lsl	x25, x0, #5
    8bdc:	b	8a20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x58>
    8be0:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    8be4:	add	x0, x0, #0x468
    8be8:	bl	5420 <_ZSt20__throw_length_errorPKc@plt>
    8bec:	nop

0000000000008bf0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@@Base>:
    8bf0:	mov	x2, x1
    8bf4:	mov	x3, x0
    8bf8:	ldp	x1, x4, [x0, #8]
    8bfc:	cmp	x1, x4
    8c00:	b.eq	8c58 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@@Base+0x68>  // b.none
    8c04:	mov	x0, x2
    8c08:	add	x4, x1, #0x10
    8c0c:	str	x4, [x1]
    8c10:	ldr	x4, [x0], #16
    8c14:	cmp	x4, x0
    8c18:	b.eq	8c4c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@@Base+0x5c>  // b.none
    8c1c:	ldr	x5, [x2, #16]
    8c20:	str	x4, [x1]
    8c24:	str	x5, [x1, #16]
    8c28:	ldr	x4, [x2, #8]
    8c2c:	str	x4, [x1, #8]
    8c30:	strb	wzr, [x2, #16]
    8c34:	str	x0, [x2]
    8c38:	ldr	x0, [x3, #8]
    8c3c:	str	xzr, [x2, #8]
    8c40:	add	x0, x0, #0x20
    8c44:	str	x0, [x3, #8]
    8c48:	ret
    8c4c:	ldp	x4, x5, [x2, #16]
    8c50:	stp	x4, x5, [x1, #16]
    8c54:	b	8c28 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@@Base+0x38>
    8c58:	b	5720 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    8c5c:	nop

0000000000008c60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base>:
    8c60:	stp	x29, x30, [sp, #-64]!
    8c64:	cmp	x2, #0x0
    8c68:	ccmp	x1, #0x0, #0x0, ne  // ne = any
    8c6c:	mov	x29, sp
    8c70:	stp	x19, x20, [sp, #16]
    8c74:	str	x21, [sp, #32]
    8c78:	b.eq	8d28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0xc8>  // b.none
    8c7c:	sub	x19, x2, x1
    8c80:	str	x19, [sp, #56]
    8c84:	mov	x21, x1
    8c88:	mov	x20, x0
    8c8c:	cmp	x19, #0xf
    8c90:	b.hi	8ce4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x84>  // b.pmore
    8c94:	cmp	x19, #0x1
    8c98:	ldr	x0, [x0]
    8c9c:	b.ne	8cc8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x68>  // b.any
    8ca0:	ldrb	w1, [x1]
    8ca4:	strb	w1, [x0]
    8ca8:	ldr	x0, [x20]
    8cac:	ldr	x19, [sp, #56]
    8cb0:	str	x19, [x20, #8]
    8cb4:	strb	wzr, [x0, x19]
    8cb8:	ldp	x19, x20, [sp, #16]
    8cbc:	ldr	x21, [sp, #32]
    8cc0:	ldp	x29, x30, [sp], #64
    8cc4:	ret
    8cc8:	cbnz	x19, 8cfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x9c>
    8ccc:	str	x19, [x20, #8]
    8cd0:	strb	wzr, [x0, x19]
    8cd4:	ldp	x19, x20, [sp, #16]
    8cd8:	ldr	x21, [sp, #32]
    8cdc:	ldp	x29, x30, [sp], #64
    8ce0:	ret
    8ce4:	add	x1, sp, #0x38
    8ce8:	mov	x2, #0x0                   	// #0
    8cec:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    8cf0:	str	x0, [x20]
    8cf4:	ldr	x1, [sp, #56]
    8cf8:	str	x1, [x20, #16]
    8cfc:	mov	x2, x19
    8d00:	mov	x1, x21
    8d04:	bl	52b0 <memcpy@plt>
    8d08:	ldr	x0, [x20]
    8d0c:	ldr	x19, [sp, #56]
    8d10:	str	x19, [x20, #8]
    8d14:	strb	wzr, [x0, x19]
    8d18:	ldp	x19, x20, [sp, #16]
    8d1c:	ldr	x21, [sp, #32]
    8d20:	ldp	x29, x30, [sp], #64
    8d24:	ret
    8d28:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    8d2c:	add	x0, x0, #0x230
    8d30:	bl	54d0 <_ZSt19__throw_logic_errorPKc@plt>
    8d34:	nop

0000000000008d38 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base>:
    8d38:	stp	x29, x30, [sp, #-96]!
    8d3c:	mov	x4, #0x3ffffffffffffff     	// #288230376151711743
    8d40:	mov	x29, sp
    8d44:	stp	x23, x24, [sp, #48]
    8d48:	ldp	x23, x24, [x0]
    8d4c:	stp	x19, x20, [sp, #16]
    8d50:	stp	x21, x22, [sp, #32]
    8d54:	mov	x22, x0
    8d58:	stp	x25, x26, [sp, #64]
    8d5c:	sub	x0, x24, x23
    8d60:	stp	x27, x28, [sp, #80]
    8d64:	cmp	x4, x0, asr #5
    8d68:	b.eq	8f04 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1cc>  // b.none
    8d6c:	mov	x19, x1
    8d70:	mov	x25, x2
    8d74:	asr	x20, x0, #5
    8d78:	sub	x26, x1, x23
    8d7c:	cbz	x20, 8ef0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b8>
    8d80:	cmp	x20, x20, lsl #1
    8d84:	lsl	x20, x20, #1
    8d88:	b.ls	8ee4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1ac>  // b.plast
    8d8c:	mov	x20, x4
    8d90:	mov	x0, #0x7fffffffffffffe0    	// #9223372036854775776
    8d94:	bl	5550 <_Znwm@plt>
    8d98:	mov	x21, x0
    8d9c:	ldp	x1, x2, [x25]
    8da0:	add	x27, x21, x26
    8da4:	add	x28, x27, #0x10
    8da8:	str	x28, [x21, x26]
    8dac:	mov	x0, x27
    8db0:	mov	w3, #0x0                   	// #0
    8db4:	add	x2, x1, x2
    8db8:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    8dbc:	cmp	x19, x23
    8dc0:	b.eq	8efc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1c4>  // b.none
    8dc4:	mov	x2, x21
    8dc8:	mov	x4, x23
    8dcc:	b	8df4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbc>
    8dd0:	str	x1, [x2]
    8dd4:	add	x4, x4, #0x20
    8dd8:	add	x2, x2, #0x20
    8ddc:	ldur	x0, [x4, #-16]
    8de0:	stur	x0, [x2, #-16]
    8de4:	ldur	x0, [x4, #-24]
    8de8:	stur	x0, [x2, #-24]
    8dec:	cmp	x19, x4
    8df0:	b.eq	8e2c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf4>  // b.none
    8df4:	mov	x0, x4
    8df8:	add	x1, x2, #0x10
    8dfc:	str	x1, [x2]
    8e00:	ldr	x1, [x0], #16
    8e04:	cmp	x1, x0
    8e08:	b.ne	8dd0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x98>  // b.any
    8e0c:	ldp	x0, x1, [x4, #16]
    8e10:	stp	x0, x1, [x2, #16]
    8e14:	add	x4, x4, #0x20
    8e18:	ldur	x0, [x4, #-24]
    8e1c:	str	x0, [x2, #8]
    8e20:	cmp	x19, x4
    8e24:	add	x2, x2, #0x20
    8e28:	b.ne	8df4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbc>  // b.any
    8e2c:	sub	x25, x19, x23
    8e30:	add	x25, x21, x25
    8e34:	add	x25, x25, #0x20
    8e38:	cmp	x19, x24
    8e3c:	b.eq	8eb0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x178>  // b.none
    8e40:	mov	x2, x25
    8e44:	mov	x3, x19
    8e48:	b	8e70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x138>
    8e4c:	ldr	x0, [x3, #16]
    8e50:	str	x0, [x2, #16]
    8e54:	ldr	x0, [x3, #8]
    8e58:	str	x1, [x2]
    8e5c:	str	x0, [x2, #8]
    8e60:	add	x3, x3, #0x20
    8e64:	cmp	x3, x24
    8e68:	add	x2, x2, #0x20
    8e6c:	b.eq	8ea8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x170>  // b.none
    8e70:	mov	x0, x3
    8e74:	add	x1, x2, #0x10
    8e78:	str	x1, [x2]
    8e7c:	ldr	x1, [x0], #16
    8e80:	cmp	x1, x0
    8e84:	b.ne	8e4c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x114>  // b.any
    8e88:	ldp	x0, x1, [x3, #16]
    8e8c:	stp	x0, x1, [x2, #16]
    8e90:	add	x3, x3, #0x20
    8e94:	ldur	x0, [x3, #-24]
    8e98:	str	x0, [x2, #8]
    8e9c:	cmp	x3, x24
    8ea0:	add	x2, x2, #0x20
    8ea4:	b.ne	8e70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x138>  // b.any
    8ea8:	sub	x3, x3, x19
    8eac:	add	x25, x25, x3
    8eb0:	cbz	x23, 8ebc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x184>
    8eb4:	mov	x0, x23
    8eb8:	bl	5540 <_ZdlPv@plt>
    8ebc:	add	x20, x21, x20, lsl #5
    8ec0:	ldp	x23, x24, [sp, #48]
    8ec4:	ldp	x27, x28, [sp, #80]
    8ec8:	stp	x21, x25, [x22]
    8ecc:	str	x20, [x22, #16]
    8ed0:	ldp	x19, x20, [sp, #16]
    8ed4:	ldp	x21, x22, [sp, #32]
    8ed8:	ldp	x25, x26, [sp, #64]
    8edc:	ldp	x29, x30, [sp], #96
    8ee0:	ret
    8ee4:	cbnz	x20, 8f10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d8>
    8ee8:	mov	x21, #0x0                   	// #0
    8eec:	b	8d9c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x64>
    8ef0:	mov	x0, #0x20                  	// #32
    8ef4:	mov	x20, #0x1                   	// #1
    8ef8:	b	8d94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5c>
    8efc:	mov	x25, x21
    8f00:	b	8e34 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xfc>
    8f04:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    8f08:	add	x0, x0, #0x468
    8f0c:	bl	5420 <_ZSt20__throw_length_errorPKc@plt>
    8f10:	cmp	x20, x4
    8f14:	csel	x20, x20, x4, ls  // ls = plast
    8f18:	lsl	x0, x20, #5
    8f1c:	b	8d94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5c>
    8f20:	bl	53f0 <__cxa_begin_catch@plt>
    8f24:	cbnz	x21, 8f3c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x204>
    8f28:	ldr	x0, [x27]
    8f2c:	cmp	x28, x0
    8f30:	b.eq	8f38 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x200>  // b.none
    8f34:	bl	5540 <_ZdlPv@plt>
    8f38:	bl	56d0 <__cxa_rethrow@plt>
    8f3c:	mov	x0, x21
    8f40:	bl	5540 <_ZdlPv@plt>
    8f44:	bl	56d0 <__cxa_rethrow@plt>
    8f48:	mov	x19, x0
    8f4c:	bl	5760 <__cxa_end_catch@plt>
    8f50:	mov	x0, x19
    8f54:	bl	57e0 <_Unwind_Resume@plt>
    8f58:	stp	x1, x2, [x0, #24]
    8f5c:	stp	x3, x4, [x0, #40]
    8f60:	str	x5, [x0, #56]
    8f64:	ret
    8f68:	cmp	w1, #0x0
    8f6c:	cset	w1, ne  // ne = any
    8f70:	strb	w1, [x0, #136]
    8f74:	ret
    8f78:	stp	x1, x2, [x0, #64]
    8f7c:	ret
    8f80:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    8f84:	add	x0, x0, #0x2d8
    8f88:	b	5400 <xstrdup@plt>
    8f8c:	nop
    8f90:	stp	x29, x30, [sp, #-32]!
    8f94:	mov	x29, sp
    8f98:	stp	x19, x20, [sp, #16]
    8f9c:	mov	x19, x0
    8fa0:	mov	x20, x1
    8fa4:	mov	x0, x1
    8fa8:	bl	5360 <strlen@plt>
    8fac:	mov	x3, x20
    8fb0:	mov	x4, x0
    8fb4:	add	x0, x19, #0x68
    8fb8:	mov	x1, #0x0                   	// #0
    8fbc:	ldr	x2, [x19, #112]
    8fc0:	ldp	x19, x20, [sp, #16]
    8fc4:	ldp	x29, x30, [sp], #32
    8fc8:	b	5700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    8fcc:	nop
    8fd0:	stp	x29, x30, [sp, #-32]!
    8fd4:	mov	x29, sp
    8fd8:	stp	x19, x20, [sp, #16]
    8fdc:	mov	x19, x0
    8fe0:	mov	x20, x1
    8fe4:	ldr	x0, [x0, #8]
    8fe8:	ldrb	w0, [x0, #136]
    8fec:	cbnz	w0, 900c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2d4>
    8ff0:	add	x1, x19, #0x10
    8ff4:	mov	x0, x20
    8ff8:	bl	5430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    8ffc:	mov	x0, #0x0                   	// #0
    9000:	ldp	x19, x20, [sp, #16]
    9004:	ldp	x29, x30, [sp], #32
    9008:	ret
    900c:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    9010:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    9014:	ldr	x2, [x19, #16]
    9018:	add	x1, x1, #0x2f8
    901c:	ldr	x0, [x0, #3968]
    9020:	ldr	x0, [x0]
    9024:	bl	5370 <fprintf@plt>
    9028:	add	x1, x19, #0x10
    902c:	mov	x0, x20
    9030:	bl	5430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    9034:	mov	x0, #0x0                   	// #0
    9038:	ldp	x19, x20, [sp, #16]
    903c:	ldp	x29, x30, [sp], #32
    9040:	ret
    9044:	nop
    9048:	stp	x29, x30, [sp, #-64]!
    904c:	mov	x1, #0x2                   	// #2
    9050:	mov	x29, sp
    9054:	stp	x19, x20, [sp, #16]
    9058:	mov	x20, x0
    905c:	str	x21, [sp, #32]
    9060:	str	xzr, [sp, #48]
    9064:	bl	dce8 <gcc_cp_fe_context@@Base+0x3fc8>
    9068:	mov	w19, w0
    906c:	cbnz	w0, 9090 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x358>
    9070:	ldr	x0, [sp, #48]
    9074:	cbz	x0, 907c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x344>
    9078:	bl	5610 <_ZdaPv@plt>
    907c:	mov	w0, w19
    9080:	ldp	x19, x20, [sp, #16]
    9084:	ldr	x21, [sp, #32]
    9088:	ldp	x29, x30, [sp], #64
    908c:	ret
    9090:	add	x1, sp, #0x38
    9094:	mov	x0, x20
    9098:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    909c:	mov	w19, w0
    90a0:	cbz	w0, 9070 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x338>
    90a4:	add	x1, sp, #0x30
    90a8:	mov	x0, x20
    90ac:	ldr	x21, [sp, #56]
    90b0:	bl	ddc0 <gcc_cp_fe_context@@Base+0x40a0>
    90b4:	mov	w19, w0
    90b8:	ldr	x0, [sp, #48]
    90bc:	cbz	w19, 9074 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x33c>
    90c0:	ldr	x1, [x20, #24]
    90c4:	mov	x3, x0
    90c8:	mov	w2, w21
    90cc:	ldr	x4, [x1, #24]
    90d0:	ldr	x0, [x1, #56]
    90d4:	blr	x4
    90d8:	mov	x0, x20
    90dc:	mov	w1, #0x52                  	// #82
    90e0:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    90e4:	mov	w19, w0
    90e8:	cbz	w0, 9070 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x338>
    90ec:	mov	x0, x20
    90f0:	mov	x1, #0x1                   	// #1
    90f4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    90f8:	mov	w19, w0
    90fc:	ldr	x0, [sp, #48]
    9100:	b	9074 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x33c>
    9104:	ldr	x1, [sp, #48]
    9108:	mov	x19, x0
    910c:	cbz	x1, 9118 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x3e0>
    9110:	mov	x0, x1
    9114:	bl	5610 <_ZdaPv@plt>
    9118:	mov	x0, x19
    911c:	bl	57e0 <_Unwind_Resume@plt>
    9120:	stp	x29, x30, [sp, #-64]!
    9124:	mov	x1, #0x1                   	// #1
    9128:	mov	x29, sp
    912c:	stp	x19, x20, [sp, #16]
    9130:	mov	x20, x0
    9134:	str	x21, [sp, #32]
    9138:	str	xzr, [sp, #56]
    913c:	bl	dce8 <gcc_cp_fe_context@@Base+0x3fc8>
    9140:	mov	w19, w0
    9144:	cbnz	w0, 9168 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x430>
    9148:	ldr	x0, [sp, #56]
    914c:	cbz	x0, 9154 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x41c>
    9150:	bl	5610 <_ZdaPv@plt>
    9154:	mov	w0, w19
    9158:	ldp	x19, x20, [sp, #16]
    915c:	ldr	x21, [sp, #32]
    9160:	ldp	x29, x30, [sp], #64
    9164:	ret
    9168:	add	x1, sp, #0x38
    916c:	mov	x0, x20
    9170:	bl	ddc0 <gcc_cp_fe_context@@Base+0x40a0>
    9174:	mov	w19, w0
    9178:	ldr	x0, [sp, #56]
    917c:	cbz	w19, 914c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x414>
    9180:	ldr	x1, [x20, #24]
    9184:	mov	x2, x0
    9188:	ldr	x3, [x1, #32]
    918c:	ldr	x0, [x1, #56]
    9190:	blr	x3
    9194:	mov	x21, x0
    9198:	mov	w1, #0x52                  	// #82
    919c:	mov	x0, x20
    91a0:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    91a4:	mov	w19, w0
    91a8:	cbz	w0, 9148 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x410>
    91ac:	mov	x1, x21
    91b0:	mov	x0, x20
    91b4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    91b8:	mov	w19, w0
    91bc:	ldr	x0, [sp, #56]
    91c0:	b	914c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x414>
    91c4:	ldr	x1, [sp, #56]
    91c8:	mov	x19, x0
    91cc:	cbz	x1, 91d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4a0>
    91d0:	mov	x0, x1
    91d4:	bl	5610 <_ZdaPv@plt>
    91d8:	mov	x0, x19
    91dc:	bl	57e0 <_Unwind_Resume@plt>
    91e0:	stp	x29, x30, [sp, #-32]!
    91e4:	mov	x1, #0x0                   	// #0
    91e8:	mov	x29, sp
    91ec:	str	x19, [sp, #16]
    91f0:	mov	x19, x0
    91f4:	bl	dce8 <gcc_cp_fe_context@@Base+0x3fc8>
    91f8:	cbz	w0, 9218 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4e0>
    91fc:	ldr	x1, [x19, #24]
    9200:	ldp	x2, x0, [x1, #48]
    9204:	blr	x2
    9208:	mov	x0, x19
    920c:	mov	w1, #0x52                  	// #82
    9210:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    9214:	cbnz	w0, 9228 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4f0>
    9218:	mov	w0, #0x0                   	// #0
    921c:	ldr	x19, [sp, #16]
    9220:	ldp	x29, x30, [sp], #32
    9224:	ret
    9228:	mov	x0, x19
    922c:	mov	x1, #0x1                   	// #1
    9230:	ldr	x19, [sp, #16]
    9234:	ldp	x29, x30, [sp], #32
    9238:	b	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    923c:	nop
    9240:	stp	x29, x30, [sp, #-48]!
    9244:	mov	x29, sp
    9248:	str	x19, [sp, #16]
    924c:	mov	x19, x1
    9250:	add	x1, sp, #0x28
    9254:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    9258:	cbz	w0, 9268 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x530>
    925c:	ldr	x1, [sp, #40]
    9260:	mov	w0, #0x1                   	// #1
    9264:	str	w1, [x19]
    9268:	ldr	x19, [sp, #16]
    926c:	ldp	x29, x30, [sp], #48
    9270:	ret
    9274:	nop
    9278:	stp	x29, x30, [sp, #-48]!
    927c:	mov	x29, sp
    9280:	stp	x19, x20, [sp, #16]
    9284:	mov	x20, x1
    9288:	mov	x19, x0
    928c:	mov	w1, #0x1                   	// #1
    9290:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    9294:	cbnz	w0, 92a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x56c>
    9298:	ldp	x19, x20, [sp, #16]
    929c:	ldp	x29, x30, [sp], #48
    92a0:	ret
    92a4:	mov	x0, x19
    92a8:	add	x1, sp, #0x28
    92ac:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    92b0:	cbz	w0, 9298 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x560>
    92b4:	ldr	x1, [sp, #40]
    92b8:	str	w1, [x20]
    92bc:	mov	w0, #0x1                   	// #1
    92c0:	ldp	x19, x20, [sp, #16]
    92c4:	ldp	x29, x30, [sp], #48
    92c8:	ret
    92cc:	nop
    92d0:	stp	x29, x30, [sp, #-48]!
    92d4:	mov	x29, sp
    92d8:	str	x19, [sp, #16]
    92dc:	mov	x19, x1
    92e0:	add	x1, sp, #0x28
    92e4:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    92e8:	cbz	w0, 92f8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5c0>
    92ec:	ldr	x1, [sp, #40]
    92f0:	mov	w0, #0x1                   	// #1
    92f4:	str	x1, [x19]
    92f8:	ldr	x19, [sp, #16]
    92fc:	ldp	x29, x30, [sp], #48
    9300:	ret
    9304:	nop
    9308:	stp	x29, x30, [sp, #-48]!
    930c:	mov	x29, sp
    9310:	stp	x19, x20, [sp, #16]
    9314:	mov	x20, x1
    9318:	mov	x19, x0
    931c:	mov	w1, #0x1                   	// #1
    9320:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    9324:	cbnz	w0, 9334 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5fc>
    9328:	ldp	x19, x20, [sp, #16]
    932c:	ldp	x29, x30, [sp], #48
    9330:	ret
    9334:	mov	x0, x19
    9338:	add	x1, sp, #0x28
    933c:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    9340:	cbz	w0, 9328 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5f0>
    9344:	ldr	x1, [sp, #40]
    9348:	str	x1, [x20]
    934c:	mov	w0, #0x1                   	// #1
    9350:	ldp	x19, x20, [sp, #16]
    9354:	ldp	x29, x30, [sp], #48
    9358:	ret
    935c:	nop
    9360:	stp	x29, x30, [sp, #-64]!
    9364:	mov	x29, sp
    9368:	stp	x19, x20, [sp, #16]
    936c:	mov	x20, x3
    9370:	mov	x19, x0
    9374:	stp	x21, x22, [sp, #32]
    9378:	mov	x22, x1
    937c:	mov	w21, w4
    9380:	mov	w1, w2
    9384:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    9388:	cbnz	w0, 93a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x668>
    938c:	mov	w0, #0x0                   	// #0
    9390:	ldp	x19, x20, [sp, #16]
    9394:	ldp	x21, x22, [sp, #32]
    9398:	ldp	x29, x30, [sp], #64
    939c:	ret
    93a0:	mov	x1, x20
    93a4:	mov	x0, x19
    93a8:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    93ac:	cbz	w0, 938c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x654>
    93b0:	mov	w1, w21
    93b4:	mov	x0, x19
    93b8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    93bc:	cbz	w0, 938c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x654>
    93c0:	mov	x0, x19
    93c4:	mov	w1, #0x1                   	// #1
    93c8:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    93cc:	cbz	w0, 938c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x654>
    93d0:	mov	x0, x19
    93d4:	add	x1, sp, #0x38
    93d8:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    93dc:	cbz	w0, 9390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x658>
    93e0:	ldr	x1, [sp, #56]
    93e4:	mov	w0, #0x1                   	// #1
    93e8:	str	x1, [x22]
    93ec:	b	9390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x658>
    93f0:	stp	x29, x30, [sp, #-64]!
    93f4:	mov	x29, sp
    93f8:	stp	x19, x20, [sp, #16]
    93fc:	mov	w20, w3
    9400:	mov	x19, x0
    9404:	str	x21, [sp, #32]
    9408:	mov	x21, x1
    940c:	mov	x1, x2
    9410:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    9414:	cbnz	w0, 942c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x6f4>
    9418:	mov	w0, #0x0                   	// #0
    941c:	ldp	x19, x20, [sp, #16]
    9420:	ldr	x21, [sp, #32]
    9424:	ldp	x29, x30, [sp], #64
    9428:	ret
    942c:	mov	w1, w20
    9430:	mov	x0, x19
    9434:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    9438:	cbz	w0, 9418 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x6e0>
    943c:	mov	x0, x19
    9440:	mov	w1, #0x1                   	// #1
    9444:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    9448:	cbz	w0, 9418 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x6e0>
    944c:	mov	x0, x19
    9450:	add	x1, sp, #0x38
    9454:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    9458:	cbz	w0, 941c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x6e4>
    945c:	ldr	x1, [sp, #56]
    9460:	mov	w0, #0x1                   	// #1
    9464:	str	x1, [x21]
    9468:	b	941c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x6e4>
    946c:	nop
    9470:	stp	x29, x30, [sp, #-64]!
    9474:	mov	x29, sp
    9478:	stp	x19, x20, [sp, #16]
    947c:	mov	x20, x3
    9480:	mov	x19, x0
    9484:	stp	x21, x22, [sp, #32]
    9488:	mov	x22, x1
    948c:	mov	w21, w4
    9490:	mov	x1, x2
    9494:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    9498:	cbnz	w0, 94b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x778>
    949c:	mov	w0, #0x0                   	// #0
    94a0:	ldp	x19, x20, [sp, #16]
    94a4:	ldp	x21, x22, [sp, #32]
    94a8:	ldp	x29, x30, [sp], #64
    94ac:	ret
    94b0:	mov	x1, x20
    94b4:	mov	x0, x19
    94b8:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    94bc:	cbz	w0, 949c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x764>
    94c0:	mov	w1, w21
    94c4:	mov	x0, x19
    94c8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    94cc:	cbz	w0, 949c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x764>
    94d0:	mov	x0, x19
    94d4:	mov	w1, #0x1                   	// #1
    94d8:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    94dc:	cbz	w0, 949c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x764>
    94e0:	mov	x0, x19
    94e4:	add	x1, sp, #0x38
    94e8:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    94ec:	cbz	w0, 94a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x768>
    94f0:	ldr	x1, [sp, #56]
    94f4:	mov	w0, #0x1                   	// #1
    94f8:	str	x1, [x22]
    94fc:	b	94a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x768>
    9500:	stp	x29, x30, [sp, #-32]!
    9504:	mov	x1, #0x0                   	// #0
    9508:	mov	x29, sp
    950c:	str	x19, [sp, #16]
    9510:	mov	x19, x0
    9514:	bl	dce8 <gcc_cp_fe_context@@Base+0x3fc8>
    9518:	cbz	w0, 953c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x804>
    951c:	ldr	x1, [x19, #24]
    9520:	ldr	x2, [x1, #40]
    9524:	ldr	x0, [x1, #56]
    9528:	blr	x2
    952c:	mov	x0, x19
    9530:	mov	w1, #0x52                  	// #82
    9534:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    9538:	cbnz	w0, 954c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x814>
    953c:	mov	w0, #0x0                   	// #0
    9540:	ldr	x19, [sp, #16]
    9544:	ldp	x29, x30, [sp], #32
    9548:	ret
    954c:	mov	x0, x19
    9550:	mov	x1, #0x1                   	// #1
    9554:	ldr	x19, [sp, #16]
    9558:	ldp	x29, x30, [sp], #32
    955c:	b	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    9560:	stp	x29, x30, [sp, #-48]!
    9564:	mov	x29, sp
    9568:	str	x19, [sp, #16]
    956c:	mov	x19, x1
    9570:	add	x1, sp, #0x28
    9574:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    9578:	cbz	w0, 9588 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x850>
    957c:	ldr	x1, [sp, #40]
    9580:	mov	w0, #0x1                   	// #1
    9584:	str	w1, [x19]
    9588:	ldr	x19, [sp, #16]
    958c:	ldp	x29, x30, [sp], #48
    9590:	ret
    9594:	nop
    9598:	stp	x29, x30, [sp, #-48]!
    959c:	mov	x29, sp
    95a0:	str	x19, [sp, #16]
    95a4:	mov	x19, x1
    95a8:	add	x1, sp, #0x28
    95ac:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    95b0:	cbz	w0, 95c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x888>
    95b4:	ldr	x1, [sp, #40]
    95b8:	mov	w0, #0x1                   	// #1
    95bc:	str	w1, [x19]
    95c0:	ldr	x19, [sp, #16]
    95c4:	ldp	x29, x30, [sp], #48
    95c8:	ret
    95cc:	nop
    95d0:	stp	x29, x30, [sp, #-48]!
    95d4:	mov	x29, sp
    95d8:	str	x19, [sp, #16]
    95dc:	mov	x19, x1
    95e0:	add	x1, sp, #0x28
    95e4:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    95e8:	cbz	w0, 95f8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x8c0>
    95ec:	ldr	x1, [sp, #40]
    95f0:	mov	w0, #0x1                   	// #1
    95f4:	str	w1, [x19]
    95f8:	ldr	x19, [sp, #16]
    95fc:	ldp	x29, x30, [sp], #48
    9600:	ret
    9604:	nop
    9608:	stp	x29, x30, [sp, #-48]!
    960c:	mov	x29, sp
    9610:	str	x19, [sp, #16]
    9614:	mov	x19, x1
    9618:	add	x1, sp, #0x28
    961c:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    9620:	cbz	w0, 9630 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x8f8>
    9624:	ldr	x1, [sp, #40]
    9628:	mov	w0, #0x1                   	// #1
    962c:	str	w1, [x19]
    9630:	ldr	x19, [sp, #16]
    9634:	ldp	x29, x30, [sp], #48
    9638:	ret
    963c:	nop
    9640:	stp	x29, x30, [sp, #-48]!
    9644:	mov	x29, sp
    9648:	cbz	x1, 96b4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x97c>
    964c:	stp	x19, x20, [sp, #16]
    9650:	mov	x19, x1
    9654:	mov	x20, x0
    9658:	str	x21, [sp, #32]
    965c:	mov	w1, #0x76                  	// #118
    9660:	ldrsw	x21, [x19]
    9664:	mov	x2, x21
    9668:	bl	dea0 <gcc_cp_fe_context@@Base+0x4180>
    966c:	cbz	w0, 96a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x968>
    9670:	ldr	x2, [x19, #8]
    9674:	lsl	x1, x21, #3
    9678:	mov	x0, x20
    967c:	bl	dee8 <gcc_cp_fe_context@@Base+0x41c8>
    9680:	cbz	w0, 96a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x968>
    9684:	lsl	x1, x21, #2
    9688:	mov	x0, x20
    968c:	ldr	x2, [x19, #16]
    9690:	ldp	x19, x20, [sp, #16]
    9694:	ldr	x21, [sp, #32]
    9698:	ldp	x29, x30, [sp], #48
    969c:	b	dee8 <gcc_cp_fe_context@@Base+0x41c8>
    96a0:	mov	w0, #0x0                   	// #0
    96a4:	ldp	x19, x20, [sp, #16]
    96a8:	ldr	x21, [sp, #32]
    96ac:	ldp	x29, x30, [sp], #48
    96b0:	ret
    96b4:	mov	x2, #0xffffffffffffffff    	// #-1
    96b8:	mov	w1, #0x76                  	// #118
    96bc:	bl	dea0 <gcc_cp_fe_context@@Base+0x4180>
    96c0:	cmp	w0, #0x0
    96c4:	cset	w0, ne  // ne = any
    96c8:	ldp	x29, x30, [sp], #48
    96cc:	ret
    96d0:	stp	x29, x30, [sp, #-64]!
    96d4:	mov	x29, sp
    96d8:	add	x2, sp, #0x38
    96dc:	stp	x19, x20, [sp, #16]
    96e0:	mov	x20, x0
    96e4:	stp	x21, x22, [sp, #32]
    96e8:	mov	x22, x1
    96ec:	mov	w1, #0x76                  	// #118
    96f0:	bl	def8 <gcc_cp_fe_context@@Base+0x41d8>
    96f4:	mov	w19, w0
    96f8:	cbz	w0, 9790 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa58>
    96fc:	ldr	x0, [sp, #56]
    9700:	cmn	x0, #0x1
    9704:	b.eq	97a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa6c>  // b.none
    9708:	mov	x0, #0x18                  	// #24
    970c:	bl	5550 <_Znwm@plt>
    9710:	mov	x21, x0
    9714:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    9718:	ldr	x0, [sp, #56]
    971c:	str	w0, [x21]
    9720:	cmp	x0, x1
    9724:	b.hi	97f8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xac0>  // b.pmore
    9728:	lsl	x0, x0, #3
    972c:	bl	52a0 <_Znam@plt>
    9730:	ldr	x1, [sp, #56]
    9734:	mov	x2, x0
    9738:	mov	x0, x20
    973c:	str	x2, [x21, #8]
    9740:	lsl	x1, x1, #3
    9744:	bl	df50 <gcc_cp_fe_context@@Base+0x4230>
    9748:	mov	w19, w0
    974c:	cbz	w0, 97cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa94>
    9750:	ldr	x0, [sp, #56]
    9754:	mov	x1, #0x1ffffffffffffffe    	// #2305843009213693950
    9758:	cmp	x0, x1
    975c:	b.hi	97f8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xac0>  // b.pmore
    9760:	lsl	x0, x0, #2
    9764:	bl	52a0 <_Znam@plt>
    9768:	ldr	x1, [sp, #56]
    976c:	mov	x2, x0
    9770:	mov	x0, x20
    9774:	str	x2, [x21, #16]
    9778:	lsl	x1, x1, #2
    977c:	bl	df50 <gcc_cp_fe_context@@Base+0x4230>
    9780:	mov	w19, w0
    9784:	cbz	w0, 97c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa88>
    9788:	mov	w19, #0x1                   	// #1
    978c:	str	x21, [x22]
    9790:	mov	w0, w19
    9794:	ldp	x19, x20, [sp, #16]
    9798:	ldp	x21, x22, [sp, #32]
    979c:	ldp	x29, x30, [sp], #64
    97a0:	ret
    97a4:	str	xzr, [x22]
    97a8:	mov	w19, #0x1                   	// #1
    97ac:	mov	w0, w19
    97b0:	ldp	x19, x20, [sp, #16]
    97b4:	ldp	x21, x22, [sp, #32]
    97b8:	ldp	x29, x30, [sp], #64
    97bc:	ret
    97c0:	ldr	x0, [x21, #16]
    97c4:	cbz	x0, 97cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa94>
    97c8:	bl	5610 <_ZdaPv@plt>
    97cc:	ldr	x0, [x21, #8]
    97d0:	cbz	x0, 97d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xaa0>
    97d4:	bl	5610 <_ZdaPv@plt>
    97d8:	mov	x0, x21
    97dc:	mov	x1, #0x18                  	// #24
    97e0:	bl	5560 <_ZdlPvm@plt>
    97e4:	mov	w0, w19
    97e8:	ldp	x19, x20, [sp, #16]
    97ec:	ldp	x21, x22, [sp, #32]
    97f0:	ldp	x29, x30, [sp], #64
    97f4:	ret
    97f8:	bl	56a0 <__cxa_throw_bad_array_new_length@plt>
    97fc:	nop
    9800:	stp	x29, x30, [sp, #-48]!
    9804:	mov	x29, sp
    9808:	cbz	x1, 9874 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb3c>
    980c:	stp	x19, x20, [sp, #16]
    9810:	mov	x19, x1
    9814:	mov	x20, x0
    9818:	str	x21, [sp, #32]
    981c:	mov	w1, #0x74                  	// #116
    9820:	ldrsw	x21, [x19]
    9824:	mov	x2, x21
    9828:	bl	dea0 <gcc_cp_fe_context@@Base+0x4180>
    982c:	cbz	w0, 9860 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb28>
    9830:	ldr	x2, [x19, #8]
    9834:	mov	x1, x21
    9838:	mov	x0, x20
    983c:	bl	dee8 <gcc_cp_fe_context@@Base+0x41c8>
    9840:	cbz	w0, 9860 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb28>
    9844:	lsl	x1, x21, #3
    9848:	mov	x0, x20
    984c:	ldr	x2, [x19, #16]
    9850:	ldp	x19, x20, [sp, #16]
    9854:	ldr	x21, [sp, #32]
    9858:	ldp	x29, x30, [sp], #48
    985c:	b	dee8 <gcc_cp_fe_context@@Base+0x41c8>
    9860:	mov	w0, #0x0                   	// #0
    9864:	ldp	x19, x20, [sp, #16]
    9868:	ldr	x21, [sp, #32]
    986c:	ldp	x29, x30, [sp], #48
    9870:	ret
    9874:	mov	x2, #0xffffffffffffffff    	// #-1
    9878:	mov	w1, #0x74                  	// #116
    987c:	bl	dea0 <gcc_cp_fe_context@@Base+0x4180>
    9880:	cmp	w0, #0x0
    9884:	cset	w0, ne  // ne = any
    9888:	ldp	x29, x30, [sp], #48
    988c:	ret
    9890:	stp	x29, x30, [sp, #-64]!
    9894:	mov	x29, sp
    9898:	add	x2, sp, #0x38
    989c:	stp	x19, x20, [sp, #16]
    98a0:	stp	x21, x22, [sp, #32]
    98a4:	mov	x22, x1
    98a8:	mov	x21, x0
    98ac:	mov	w1, #0x74                  	// #116
    98b0:	bl	def8 <gcc_cp_fe_context@@Base+0x41d8>
    98b4:	mov	w19, w0
    98b8:	cbz	w0, 993c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc04>
    98bc:	ldr	x0, [sp, #56]
    98c0:	cmn	x0, #0x1
    98c4:	b.eq	9950 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc18>  // b.none
    98c8:	mov	x0, #0x18                  	// #24
    98cc:	bl	5550 <_Znwm@plt>
    98d0:	mov	x20, x0
    98d4:	ldr	x0, [sp, #56]
    98d8:	str	w0, [x20]
    98dc:	bl	52a0 <_Znam@plt>
    98e0:	mov	x2, x0
    98e4:	ldr	x1, [sp, #56]
    98e8:	mov	x0, x21
    98ec:	str	x2, [x20, #8]
    98f0:	bl	df50 <gcc_cp_fe_context@@Base+0x4230>
    98f4:	mov	w19, w0
    98f8:	cbz	w0, 9978 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc40>
    98fc:	ldr	x0, [sp, #56]
    9900:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    9904:	cmp	x0, x1
    9908:	b.hi	99a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc6c>  // b.pmore
    990c:	lsl	x0, x0, #3
    9910:	bl	52a0 <_Znam@plt>
    9914:	ldr	x1, [sp, #56]
    9918:	mov	x2, x0
    991c:	mov	x0, x21
    9920:	str	x2, [x20, #16]
    9924:	lsl	x1, x1, #3
    9928:	bl	df50 <gcc_cp_fe_context@@Base+0x4230>
    992c:	mov	w19, w0
    9930:	cbz	w0, 996c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc34>
    9934:	mov	w19, #0x1                   	// #1
    9938:	str	x20, [x22]
    993c:	mov	w0, w19
    9940:	ldp	x19, x20, [sp, #16]
    9944:	ldp	x21, x22, [sp, #32]
    9948:	ldp	x29, x30, [sp], #64
    994c:	ret
    9950:	str	xzr, [x22]
    9954:	mov	w19, #0x1                   	// #1
    9958:	mov	w0, w19
    995c:	ldp	x19, x20, [sp, #16]
    9960:	ldp	x21, x22, [sp, #32]
    9964:	ldp	x29, x30, [sp], #64
    9968:	ret
    996c:	ldr	x0, [x20, #16]
    9970:	cbz	x0, 9978 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc40>
    9974:	bl	5610 <_ZdaPv@plt>
    9978:	ldr	x0, [x20, #8]
    997c:	cbz	x0, 9984 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc4c>
    9980:	bl	5610 <_ZdaPv@plt>
    9984:	mov	x0, x20
    9988:	mov	x1, #0x18                  	// #24
    998c:	bl	5560 <_ZdlPvm@plt>
    9990:	mov	w0, w19
    9994:	ldp	x19, x20, [sp, #16]
    9998:	ldp	x21, x22, [sp, #32]
    999c:	ldp	x29, x30, [sp], #64
    99a0:	ret
    99a4:	bl	56a0 <__cxa_throw_bad_array_new_length@plt>
    99a8:	stp	x29, x30, [sp, #-48]!
    99ac:	mov	x29, sp
    99b0:	cbz	x1, 9a04 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xccc>
    99b4:	stp	x19, x20, [sp, #16]
    99b8:	mov	x19, x1
    99bc:	mov	x20, x0
    99c0:	str	x21, [sp, #32]
    99c4:	mov	w1, #0x64                  	// #100
    99c8:	ldrsw	x21, [x19]
    99cc:	mov	x2, x21
    99d0:	bl	dea0 <gcc_cp_fe_context@@Base+0x4180>
    99d4:	cbz	w0, 99f4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcbc>
    99d8:	lsl	x1, x21, #3
    99dc:	mov	x0, x20
    99e0:	ldr	x2, [x19, #8]
    99e4:	ldp	x19, x20, [sp, #16]
    99e8:	ldr	x21, [sp, #32]
    99ec:	ldp	x29, x30, [sp], #48
    99f0:	b	dee8 <gcc_cp_fe_context@@Base+0x41c8>
    99f4:	ldp	x19, x20, [sp, #16]
    99f8:	ldr	x21, [sp, #32]
    99fc:	ldp	x29, x30, [sp], #48
    9a00:	ret
    9a04:	mov	x2, #0xffffffffffffffff    	// #-1
    9a08:	mov	w1, #0x64                  	// #100
    9a0c:	bl	dea0 <gcc_cp_fe_context@@Base+0x4180>
    9a10:	cmp	w0, #0x0
    9a14:	cset	w0, ne  // ne = any
    9a18:	ldp	x29, x30, [sp], #48
    9a1c:	ret
    9a20:	stp	x29, x30, [sp, #-48]!
    9a24:	mov	x29, sp
    9a28:	stp	x19, x20, [sp, #16]
    9a2c:	mov	x20, x1
    9a30:	mov	x19, x0
    9a34:	mov	x1, x2
    9a38:	bl	99a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc70>
    9a3c:	cbnz	w0, 9a50 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd18>
    9a40:	mov	w0, #0x0                   	// #0
    9a44:	ldp	x19, x20, [sp, #16]
    9a48:	ldp	x29, x30, [sp], #48
    9a4c:	ret
    9a50:	mov	x0, x19
    9a54:	mov	w1, #0x1                   	// #1
    9a58:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    9a5c:	cbz	w0, 9a40 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd08>
    9a60:	mov	x0, x19
    9a64:	add	x1, sp, #0x28
    9a68:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    9a6c:	cbz	w0, 9a44 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd0c>
    9a70:	ldr	x1, [sp, #40]
    9a74:	str	x1, [x20]
    9a78:	mov	w0, #0x1                   	// #1
    9a7c:	ldp	x19, x20, [sp, #16]
    9a80:	ldp	x29, x30, [sp], #48
    9a84:	ret
    9a88:	stp	x29, x30, [sp, #-64]!
    9a8c:	mov	x29, sp
    9a90:	add	x2, sp, #0x38
    9a94:	stp	x19, x20, [sp, #16]
    9a98:	mov	x20, x0
    9a9c:	stp	x21, x22, [sp, #32]
    9aa0:	mov	x22, x1
    9aa4:	mov	w1, #0x64                  	// #100
    9aa8:	bl	def8 <gcc_cp_fe_context@@Base+0x41d8>
    9aac:	mov	w19, w0
    9ab0:	cbz	w0, 9b10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xdd8>
    9ab4:	ldr	x0, [sp, #56]
    9ab8:	cmn	x0, #0x1
    9abc:	b.eq	9b24 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xdec>  // b.none
    9ac0:	mov	x0, #0x10                  	// #16
    9ac4:	bl	5550 <_Znwm@plt>
    9ac8:	mov	x21, x0
    9acc:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    9ad0:	ldr	x0, [sp, #56]
    9ad4:	str	w0, [x21]
    9ad8:	cmp	x0, x1
    9adc:	b.hi	9b6c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe34>  // b.pmore
    9ae0:	lsl	x0, x0, #3
    9ae4:	bl	52a0 <_Znam@plt>
    9ae8:	ldr	x1, [sp, #56]
    9aec:	mov	x2, x0
    9af0:	mov	x0, x20
    9af4:	str	x2, [x21, #8]
    9af8:	lsl	x1, x1, #3
    9afc:	bl	df50 <gcc_cp_fe_context@@Base+0x4230>
    9b00:	mov	w19, w0
    9b04:	cbz	w0, 9b40 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe08>
    9b08:	mov	w19, #0x1                   	// #1
    9b0c:	str	x21, [x22]
    9b10:	mov	w0, w19
    9b14:	ldp	x19, x20, [sp, #16]
    9b18:	ldp	x21, x22, [sp, #32]
    9b1c:	ldp	x29, x30, [sp], #64
    9b20:	ret
    9b24:	str	xzr, [x22]
    9b28:	mov	w19, #0x1                   	// #1
    9b2c:	mov	w0, w19
    9b30:	ldp	x19, x20, [sp, #16]
    9b34:	ldp	x21, x22, [sp, #32]
    9b38:	ldp	x29, x30, [sp], #64
    9b3c:	ret
    9b40:	ldr	x0, [x21, #8]
    9b44:	cbz	x0, 9b4c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe14>
    9b48:	bl	5610 <_ZdaPv@plt>
    9b4c:	mov	x0, x21
    9b50:	mov	x1, #0x10                  	// #16
    9b54:	bl	5560 <_ZdlPvm@plt>
    9b58:	mov	w0, w19
    9b5c:	ldp	x19, x20, [sp, #16]
    9b60:	ldp	x21, x22, [sp, #32]
    9b64:	ldp	x29, x30, [sp], #64
    9b68:	ret
    9b6c:	bl	56a0 <__cxa_throw_bad_array_new_length@plt>
    9b70:	stp	x29, x30, [sp, #-64]!
    9b74:	mov	x29, sp
    9b78:	stp	x19, x20, [sp, #16]
    9b7c:	mov	x19, x0
    9b80:	mov	x20, x2
    9b84:	stp	x21, x22, [sp, #32]
    9b88:	add	x22, x0, #0x50
    9b8c:	mov	x21, x1
    9b90:	str	x23, [sp, #48]
    9b94:	add	x23, x19, #0x78
    9b98:	stp	xzr, xzr, [x19, #16]
    9b9c:	mov	x0, #0x10                  	// #16
    9ba0:	str	xzr, [x19, #32]
    9ba4:	stp	xzr, xzr, [x19, #56]
    9ba8:	stp	xzr, xzr, [x19, #72]
    9bac:	stp	xzr, xzr, [x22, #8]
    9bb0:	stp	x23, xzr, [x19, #104]
    9bb4:	strb	wzr, [x19, #120]
    9bb8:	strb	wzr, [x19, #136]
    9bbc:	bl	5550 <_Znwm@plt>
    9bc0:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    9bc4:	add	x3, x3, #0x5f0
    9bc8:	ldr	x23, [sp, #48]
    9bcc:	stp	x21, x20, [x19]
    9bd0:	stp	x3, x19, [x0]
    9bd4:	str	x0, [x19, #144]
    9bd8:	ldp	x19, x20, [sp, #16]
    9bdc:	ldp	x21, x22, [sp, #32]
    9be0:	ldp	x29, x30, [sp], #64
    9be4:	ret
    9be8:	ldr	x1, [x19, #104]
    9bec:	mov	x21, x0
    9bf0:	cmp	x23, x1
    9bf4:	b.eq	9c00 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xec8>  // b.none
    9bf8:	mov	x0, x1
    9bfc:	bl	5540 <_ZdlPv@plt>
    9c00:	ldr	x22, [x22, #8]
    9c04:	ldr	x20, [x19, #80]
    9c08:	cmp	x22, x20
    9c0c:	b.ne	9c24 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xeec>  // b.any
    9c10:	ldr	x0, [x19, #80]
    9c14:	cbz	x0, 9c1c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xee4>
    9c18:	bl	5540 <_ZdlPv@plt>
    9c1c:	mov	x0, x21
    9c20:	bl	57e0 <_Unwind_Resume@plt>
    9c24:	mov	x1, x20
    9c28:	ldr	x0, [x1], #16
    9c2c:	cmp	x0, x1
    9c30:	b.eq	9c38 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf00>  // b.none
    9c34:	bl	5540 <_ZdlPv@plt>
    9c38:	add	x20, x20, #0x20
    9c3c:	b	9c08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xed0>
    9c40:	stp	x29, x30, [sp, #-48]!
    9c44:	mov	x29, sp
    9c48:	stp	x19, x20, [sp, #16]
    9c4c:	mov	x19, x0
    9c50:	ldr	x0, [x0, #16]
    9c54:	str	x21, [sp, #32]
    9c58:	cbz	x0, 9c68 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf30>
    9c5c:	ldr	x1, [x0]
    9c60:	ldr	x1, [x1, #8]
    9c64:	blr	x1
    9c68:	ldr	x0, [x19, #144]
    9c6c:	cbz	x0, 9c7c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf44>
    9c70:	ldr	x1, [x0]
    9c74:	ldr	x1, [x1, #16]
    9c78:	blr	x1
    9c7c:	ldr	x0, [x19, #104]
    9c80:	add	x1, x19, #0x78
    9c84:	cmp	x0, x1
    9c88:	b.eq	9c90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf58>  // b.none
    9c8c:	bl	5540 <_ZdlPv@plt>
    9c90:	ldp	x20, x21, [x19, #80]
    9c94:	cmp	x20, x21
    9c98:	b.eq	9cc4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf8c>  // b.none
    9c9c:	nop
    9ca0:	mov	x1, x20
    9ca4:	add	x20, x20, #0x20
    9ca8:	ldr	x0, [x1], #16
    9cac:	cmp	x0, x1
    9cb0:	b.eq	9cb8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf80>  // b.none
    9cb4:	bl	5540 <_ZdlPv@plt>
    9cb8:	cmp	x21, x20
    9cbc:	b.ne	9ca0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf68>  // b.any
    9cc0:	ldr	x21, [x19, #80]
    9cc4:	cbz	x21, 9cdc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xfa4>
    9cc8:	mov	x0, x21
    9ccc:	ldp	x19, x20, [sp, #16]
    9cd0:	ldr	x21, [sp, #32]
    9cd4:	ldp	x29, x30, [sp], #48
    9cd8:	b	5540 <_ZdlPv@plt>
    9cdc:	ldp	x19, x20, [sp, #16]
    9ce0:	ldr	x21, [sp, #32]
    9ce4:	ldp	x29, x30, [sp], #48
    9ce8:	ret
    9cec:	nop
    9cf0:	cbz	x0, 9d1c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xfe4>
    9cf4:	stp	x29, x30, [sp, #-32]!
    9cf8:	mov	x29, sp
    9cfc:	str	x19, [sp, #16]
    9d00:	mov	x19, x0
    9d04:	bl	9c40 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf08>
    9d08:	mov	x0, x19
    9d0c:	mov	x1, #0x98                  	// #152
    9d10:	ldr	x19, [sp, #16]
    9d14:	ldp	x29, x30, [sp], #32
    9d18:	b	5560 <_ZdlPvm@plt>
    9d1c:	ret

0000000000009d20 <gcc_cp_fe_context@@Base>:
    9d20:	stp	x29, x30, [sp, #-32]!
    9d24:	cmp	w1, #0x0
    9d28:	ccmp	w0, #0x1, #0x2, eq  // eq = none
    9d2c:	mov	x29, sp
    9d30:	stp	x19, x20, [sp, #16]
    9d34:	b.hi	9d64 <gcc_cp_fe_context@@Base+0x44>  // b.pmore
    9d38:	mov	x0, #0x98                  	// #152
    9d3c:	bl	5550 <_Znwm@plt>
    9d40:	adrp	x2, 2a000 <xexit@@Base+0x14e10>
    9d44:	add	x2, x2, #0x658
    9d48:	mov	x19, x0
    9d4c:	add	x1, x2, #0x228
    9d50:	bl	9b70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe38>
    9d54:	mov	x0, x19
    9d58:	ldp	x19, x20, [sp, #16]
    9d5c:	ldp	x29, x30, [sp], #32
    9d60:	ret
    9d64:	mov	x19, #0x0                   	// #0
    9d68:	mov	x0, x19
    9d6c:	ldp	x19, x20, [sp, #16]
    9d70:	ldp	x29, x30, [sp], #32
    9d74:	ret
    9d78:	mov	x1, #0x98                  	// #152
    9d7c:	mov	x20, x0
    9d80:	mov	x0, x19
    9d84:	bl	5560 <_ZdlPvm@plt>
    9d88:	mov	x0, x20
    9d8c:	bl	57e0 <_Unwind_Resume@plt>
    9d90:	sub	sp, sp, #0x240
    9d94:	stp	x29, x30, [sp]
    9d98:	mov	x29, sp
    9d9c:	stp	x23, x24, [sp, #48]
    9da0:	mov	x24, x0
    9da4:	stp	x19, x20, [sp, #16]
    9da8:	add	x19, x29, #0xb8
    9dac:	add	x0, x19, #0x80
    9db0:	stp	x21, x22, [sp, #32]
    9db4:	adrp	x21, 2a000 <xexit@@Base+0x14e10>
    9db8:	stp	x25, x26, [sp, #64]
    9dbc:	stp	x27, x28, [sp, #80]
    9dc0:	str	x1, [x29, #96]
    9dc4:	ldr	x20, [x24, #16]
    9dc8:	bl	5350 <_ZNSt8ios_baseC2Ev@plt>
    9dcc:	ldr	x2, [x21, #3296]
    9dd0:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    9dd4:	strh	wzr, [x29, #536]
    9dd8:	mov	x1, #0x0                   	// #0
    9ddc:	ldr	x0, [x0, #3216]
    9de0:	str	xzr, [x29, #528]
    9de4:	ldp	x23, x26, [x2, #16]
    9de8:	add	x0, x0, #0x10
    9dec:	add	x2, x29, #0x220
    9df0:	str	x0, [x29, #312]
    9df4:	str	x23, [x29, #184]
    9df8:	ldur	x0, [x23, #-24]
    9dfc:	stp	xzr, xzr, [x2]
    9e00:	stp	xzr, xzr, [x2, #16]
    9e04:	str	x26, [x19, x0]
    9e08:	str	xzr, [x29, #192]
    9e0c:	ldur	x0, [x23, #-24]
    9e10:	add	x0, x19, x0
    9e14:	bl	5640 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    9e18:	ldr	x0, [x21, #3296]
    9e1c:	add	x2, x19, #0x10
    9e20:	mov	x1, #0x0                   	// #0
    9e24:	ldp	x25, x4, [x0, #32]
    9e28:	str	x4, [x29, #128]
    9e2c:	ldur	x3, [x25, #-24]
    9e30:	str	x25, [x29, #200]
    9e34:	add	x0, x2, x3
    9e38:	str	x4, [x2, x3]
    9e3c:	bl	5640 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    9e40:	ldr	x1, [x21, #3296]
    9e44:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    9e48:	adrp	x21, 2a000 <xexit@@Base+0x14e10>
    9e4c:	adrp	x22, 2a000 <xexit@@Base+0x14e10>
    9e50:	ldr	x2, [x0, #3576]
    9e54:	add	x0, x19, #0x50
    9e58:	ldr	x27, [x1, #8]
    9e5c:	add	x4, x2, #0x68
    9e60:	ldr	x3, [x21, #3432]
    9e64:	add	x5, x2, #0x18
    9e68:	ldur	x6, [x27, #-24]
    9e6c:	add	x2, x2, #0x40
    9e70:	ldr	x7, [x1, #48]
    9e74:	add	x1, x3, #0x10
    9e78:	str	x7, [x19, x6]
    9e7c:	str	x7, [x29, #120]
    9e80:	str	x5, [x29, #184]
    9e84:	stp	x2, x1, [x29, #200]
    9e88:	stp	xzr, xzr, [x29, #216]
    9e8c:	stp	xzr, xzr, [x29, #232]
    9e90:	stp	xzr, xzr, [x29, #248]
    9e94:	str	x4, [x29, #312]
    9e98:	bl	5840 <_ZNSt6localeC1Ev@plt>
    9e9c:	ldr	x2, [x22, #4048]
    9ea0:	add	x3, x19, #0x70
    9ea4:	mov	w4, #0x18                  	// #24
    9ea8:	add	x1, x19, #0x18
    9eac:	add	x2, x2, #0x10
    9eb0:	add	x0, x19, #0x80
    9eb4:	str	x2, [x29, #208]
    9eb8:	str	w4, [x29, #272]
    9ebc:	stp	x3, xzr, [x29, #280]
    9ec0:	strb	wzr, [x29, #296]
    9ec4:	bl	5640 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    9ec8:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    9ecc:	add	x0, x19, #0x10
    9ed0:	add	x1, x1, #0xef0
    9ed4:	mov	x2, #0x1                   	// #1
    9ed8:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    9edc:	cbz	x20, a1f0 <gcc_cp_fe_context@@Base+0x4d0>
    9ee0:	mov	x0, x20
    9ee4:	bl	5360 <strlen@plt>
    9ee8:	mov	x1, x20
    9eec:	mov	x2, x0
    9ef0:	add	x0, x19, #0x10
    9ef4:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    9ef8:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    9efc:	add	x0, x19, #0x10
    9f00:	add	x1, x1, #0x328
    9f04:	mov	x2, #0x1                   	// #1
    9f08:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    9f0c:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    9f10:	add	x28, x19, #0x10
    9f14:	add	x0, x0, #0x508
    9f18:	add	x1, x29, #0x96
    9f1c:	mov	w20, #0x67                  	// #103
    9f20:	str	x1, [x29, #112]
    9f24:	str	x0, [x29, #136]
    9f28:	add	x0, x29, #0x97
    9f2c:	str	x0, [x29, #104]
    9f30:	ldr	x1, [x29, #112]
    9f34:	mov	x0, x28
    9f38:	mov	x2, #0x1                   	// #1
    9f3c:	strb	w20, [x29, #150]
    9f40:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    9f44:	ldr	x0, [x29, #136]
    9f48:	ldrb	w20, [x0, #1]!
    9f4c:	str	x0, [x29, #136]
    9f50:	cbz	w20, 9fdc <gcc_cp_fe_context@@Base+0x2bc>
    9f54:	cmp	w20, #0x2e
    9f58:	b.ls	9fa4 <gcc_cp_fe_context@@Base+0x284>  // b.plast
    9f5c:	sub	w0, w20, #0x3f
    9f60:	and	w0, w0, #0xff
    9f64:	cmp	w0, #0x3d
    9f68:	b.hi	9f30 <gcc_cp_fe_context@@Base+0x210>  // b.pmore
    9f6c:	mov	x1, #0x1                   	// #1
    9f70:	lsl	x0, x1, x0
    9f74:	mov	x1, #0x1                   	// #1
    9f78:	movk	x1, #0xb000, lsl #16
    9f7c:	movk	x1, #0x3000, lsl #48
    9f80:	tst	x0, x1
    9f84:	b.eq	9f30 <gcc_cp_fe_context@@Base+0x210>  // b.none
    9f88:	ldr	x1, [x29, #104]
    9f8c:	mov	w3, #0x5c                  	// #92
    9f90:	mov	x0, x28
    9f94:	mov	x2, #0x1                   	// #1
    9f98:	strb	w3, [x29, #151]
    9f9c:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    9fa0:	b	9f30 <gcc_cp_fe_context@@Base+0x210>
    9fa4:	cmp	w20, #0x23
    9fa8:	b.ls	9f30 <gcc_cp_fe_context@@Base+0x210>  // b.plast
    9fac:	mov	x0, #0x1                   	// #1
    9fb0:	mov	x1, #0x4f1000000000        	// #86930138071040
    9fb4:	lsl	x0, x0, x20
    9fb8:	tst	x0, x1
    9fbc:	b.eq	9f30 <gcc_cp_fe_context@@Base+0x210>  // b.none
    9fc0:	ldr	x1, [x29, #104]
    9fc4:	mov	w3, #0x5c                  	// #92
    9fc8:	mov	x0, x28
    9fcc:	mov	x2, #0x1                   	// #1
    9fd0:	strb	w3, [x29, #151]
    9fd4:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    9fd8:	b	9f30 <gcc_cp_fe_context@@Base+0x210>
    9fdc:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    9fe0:	add	x0, x19, #0x10
    9fe4:	add	x1, x1, #0x330
    9fe8:	mov	x2, #0x1                   	// #1
    9fec:	bl	55a0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    9ff0:	ldr	x0, [x29, #248]
    9ff4:	add	x20, x29, #0x98
    9ff8:	add	x1, x20, #0x10
    9ffc:	stp	x1, xzr, [x29, #152]
    a000:	strb	wzr, [x29, #168]
    a004:	cbz	x0, a248 <gcc_cp_fe_context@@Base+0x528>
    a008:	ldp	x4, x3, [x29, #232]
    a00c:	cmp	x0, x4
    a010:	b.hi	a198 <gcc_cp_fe_context@@Base+0x478>  // b.pmore
    a014:	sub	x4, x4, x3
    a018:	mov	x0, x20
    a01c:	mov	x2, #0x0                   	// #0
    a020:	mov	x1, #0x0                   	// #0
    a024:	bl	5700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    a028:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    a02c:	add	x2, x19, #0x70
    a030:	ldr	x22, [x22, #4048]
    a034:	ldr	x1, [x0, #3576]
    a038:	add	x22, x22, #0x10
    a03c:	ldr	x0, [x29, #280]
    a040:	add	x4, x1, #0x18
    a044:	add	x3, x1, #0x68
    a048:	add	x1, x1, #0x40
    a04c:	str	x4, [x29, #184]
    a050:	cmp	x0, x2
    a054:	stp	x1, x22, [x29, #200]
    a058:	str	x3, [x29, #312]
    a05c:	b.eq	a064 <gcc_cp_fe_context@@Base+0x344>  // b.none
    a060:	bl	5540 <_ZdlPv@plt>
    a064:	ldr	x21, [x21, #3432]
    a068:	add	x0, x19, #0x50
    a06c:	add	x21, x21, #0x10
    a070:	str	x21, [x29, #208]
    a074:	bl	5690 <_ZNSt6localeD1Ev@plt>
    a078:	ldur	x1, [x27, #-24]
    a07c:	add	x2, x29, #0xc8
    a080:	ldp	x3, x5, [x29, #120]
    a084:	add	x0, x19, #0x80
    a088:	ldur	x4, [x25, #-24]
    a08c:	str	x3, [x19, x1]
    a090:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    a094:	ldur	x3, [x23, #-24]
    a098:	str	x25, [x29, #200]
    a09c:	ldr	x1, [x1, #3216]
    a0a0:	str	x5, [x2, x4]
    a0a4:	str	x23, [x29, #184]
    a0a8:	add	x1, x1, #0x10
    a0ac:	str	x26, [x19, x3]
    a0b0:	str	xzr, [x29, #192]
    a0b4:	str	x1, [x29, #312]
    a0b8:	bl	53a0 <_ZNSt8ios_baseD2Ev@plt>
    a0bc:	ldr	x0, [x24, #8]
    a0c0:	ldrb	w0, [x0, #136]
    a0c4:	cbz	w0, a0e4 <gcc_cp_fe_context@@Base+0x3c4>
    a0c8:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    a0cc:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    a0d0:	ldr	x2, [x29, #152]
    a0d4:	add	x1, x1, #0x338
    a0d8:	ldr	x0, [x0, #3968]
    a0dc:	ldr	x0, [x0]
    a0e0:	bl	5370 <fprintf@plt>
    a0e4:	ldr	x1, [x29, #152]
    a0e8:	mov	x0, x19
    a0ec:	mov	w2, #0x9                   	// #9
    a0f0:	bl	52d0 <xregcomp@plt>
    a0f4:	mov	w21, w0
    a0f8:	cbz	w0, a1b0 <gcc_cp_fe_context@@Base+0x490>
    a0fc:	mov	x22, sp
    a100:	mov	x1, x19
    a104:	mov	x3, #0x0                   	// #0
    a108:	mov	x2, #0x0                   	// #0
    a10c:	bl	57b0 <xregerror@plt>
    a110:	mov	x3, x0
    a114:	mov	x1, x19
    a118:	add	x2, x3, #0xf
    a11c:	mov	w0, w21
    a120:	and	x2, x2, #0xfffffffffffffff0
    a124:	sub	sp, sp, x2
    a128:	mov	x19, sp
    a12c:	mov	x2, sp
    a130:	bl	57b0 <xregerror@plt>
    a134:	ldr	x1, [x29, #152]
    a138:	adrp	x2, 15000 <iterative_hash@@Base+0x2c8>
    a13c:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    a140:	mov	x3, x19
    a144:	add	x2, x2, #0x368
    a148:	add	x0, x0, #0x370
    a14c:	mov	x4, #0x0                   	// #0
    a150:	bl	5510 <concat@plt>
    a154:	mov	x19, x0
    a158:	mov	sp, x22
    a15c:	ldr	x0, [x29, #152]
    a160:	add	x20, x20, #0x10
    a164:	cmp	x0, x20
    a168:	b.eq	a170 <gcc_cp_fe_context@@Base+0x450>  // b.none
    a16c:	bl	5540 <_ZdlPv@plt>
    a170:	mov	sp, x29
    a174:	mov	x0, x19
    a178:	ldp	x29, x30, [sp]
    a17c:	ldp	x19, x20, [sp, #16]
    a180:	ldp	x21, x22, [sp, #32]
    a184:	ldp	x23, x24, [sp, #48]
    a188:	ldp	x25, x26, [sp, #64]
    a18c:	ldp	x27, x28, [sp, #80]
    a190:	add	sp, sp, #0x240
    a194:	ret
    a198:	sub	x4, x0, x3
    a19c:	mov	x2, #0x0                   	// #0
    a1a0:	mov	x0, x20
    a1a4:	mov	x1, #0x0                   	// #0
    a1a8:	bl	5700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    a1ac:	b	a028 <gcc_cp_fe_context@@Base+0x308>
    a1b0:	ldr	x1, [x29, #96]
    a1b4:	mov	x0, x19
    a1b8:	bl	5928 <_ZNSt6localeC1Ev@plt+0xe8>
    a1bc:	tst	w0, #0xff
    a1c0:	mov	x0, x19
    a1c4:	b.ne	a210 <gcc_cp_fe_context@@Base+0x4f0>  // b.any
    a1c8:	bl	5380 <xregfree@plt>
    a1cc:	ldr	x1, [x29, #152]
    a1d0:	adrp	x2, 15000 <iterative_hash@@Base+0x2c8>
    a1d4:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    a1d8:	add	x2, x2, #0x390
    a1dc:	add	x0, x0, #0x398
    a1e0:	mov	x3, #0x0                   	// #0
    a1e4:	bl	5510 <concat@plt>
    a1e8:	mov	x19, x0
    a1ec:	b	a15c <gcc_cp_fe_context@@Base+0x43c>
    a1f0:	ldr	x1, [x29, #200]
    a1f4:	add	x0, x19, #0x10
    a1f8:	ldur	x1, [x1, #-24]
    a1fc:	add	x0, x0, x1
    a200:	ldr	w1, [x0, #32]
    a204:	orr	w1, w1, #0x1
    a208:	bl	57a0 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
    a20c:	b	9ef8 <gcc_cp_fe_context@@Base+0x1d8>
    a210:	bl	5380 <xregfree@plt>
    a214:	ldr	x0, [x24, #8]
    a218:	ldrb	w0, [x0, #136]
    a21c:	cbz	w0, a240 <gcc_cp_fe_context@@Base+0x520>
    a220:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    a224:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    a228:	ldr	x2, [x29, #96]
    a22c:	add	x1, x1, #0x3c0
    a230:	ldr	x0, [x0, #3968]
    a234:	ldr	x2, [x2]
    a238:	ldr	x0, [x0]
    a23c:	bl	5370 <fprintf@plt>
    a240:	mov	x19, #0x0                   	// #0
    a244:	b	a15c <gcc_cp_fe_context@@Base+0x43c>
    a248:	add	x1, x19, #0x60
    a24c:	mov	x0, x20
    a250:	bl	5430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    a254:	b	a028 <gcc_cp_fe_context@@Base+0x308>
    a258:	mov	x20, x0
    a25c:	mov	x0, x19
    a260:	bl	54f0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    a264:	mov	x0, x20
    a268:	bl	57e0 <_Unwind_Resume@plt>
    a26c:	mov	x20, x0
    a270:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    a274:	ldr	x1, [x0, #3216]
    a278:	add	x0, x19, #0x80
    a27c:	add	x1, x1, #0x10
    a280:	str	x1, [x29, #312]
    a284:	bl	53a0 <_ZNSt8ios_baseD2Ev@plt>
    a288:	mov	x0, x20
    a28c:	bl	57e0 <_Unwind_Resume@plt>
    a290:	ldr	x1, [x29, #152]
    a294:	add	x2, x20, #0x10
    a298:	mov	x20, x0
    a29c:	cmp	x1, x2
    a2a0:	b.eq	a25c <gcc_cp_fe_context@@Base+0x53c>  // b.none
    a2a4:	mov	x0, x1
    a2a8:	bl	5540 <_ZdlPv@plt>
    a2ac:	b	a25c <gcc_cp_fe_context@@Base+0x53c>
    a2b0:	mov	x19, x0
    a2b4:	ldr	x0, [x29, #152]
    a2b8:	add	x20, x20, #0x10
    a2bc:	cmp	x0, x20
    a2c0:	b.eq	a2c8 <gcc_cp_fe_context@@Base+0x5a8>  // b.none
    a2c4:	bl	5540 <_ZdlPv@plt>
    a2c8:	mov	x0, x19
    a2cc:	bl	57e0 <_Unwind_Resume@plt>
    a2d0:	mov	x19, x0
    a2d4:	mov	sp, x22
    a2d8:	b	a2b4 <gcc_cp_fe_context@@Base+0x594>
    a2dc:	ldr	x22, [x22, #4048]
    a2e0:	mov	x20, x0
    a2e4:	ldr	x0, [x29, #280]
    a2e8:	add	x22, x22, #0x10
    a2ec:	str	x22, [x29, #208]
    a2f0:	add	x1, x19, #0x70
    a2f4:	cmp	x0, x1
    a2f8:	b.eq	a300 <gcc_cp_fe_context@@Base+0x5e0>  // b.none
    a2fc:	bl	5540 <_ZdlPv@plt>
    a300:	ldr	x1, [x21, #3432]
    a304:	add	x0, x19, #0x50
    a308:	add	x1, x1, #0x10
    a30c:	str	x1, [x29, #208]
    a310:	bl	5690 <_ZNSt6localeD1Ev@plt>
    a314:	ldur	x1, [x27, #-24]
    a318:	add	x0, x29, #0xc8
    a31c:	ldur	x2, [x25, #-24]
    a320:	ldr	x3, [x29, #120]
    a324:	str	x3, [x19, x1]
    a328:	ldur	x1, [x23, #-24]
    a32c:	str	x25, [x29, #200]
    a330:	ldr	x3, [x29, #128]
    a334:	str	x3, [x0, x2]
    a338:	str	x23, [x29, #184]
    a33c:	str	x26, [x19, x1]
    a340:	str	xzr, [x29, #192]
    a344:	b	a270 <gcc_cp_fe_context@@Base+0x550>
    a348:	ldur	x1, [x23, #-24]
    a34c:	str	x23, [x29, #184]
    a350:	mov	x20, x0
    a354:	str	x26, [x19, x1]
    a358:	str	xzr, [x29, #192]
    a35c:	b	a270 <gcc_cp_fe_context@@Base+0x550>
    a360:	stp	x29, x30, [sp, #-112]!
    a364:	mov	x29, sp
    a368:	stp	x19, x20, [sp, #16]
    a36c:	mov	x20, x0
    a370:	ldr	x0, [x0, #144]
    a374:	stp	x21, x22, [sp, #32]
    a378:	mov	x21, x1
    a37c:	str	x23, [sp, #48]
    a380:	cbz	x0, a390 <gcc_cp_fe_context@@Base+0x670>
    a384:	ldr	x1, [x0]
    a388:	ldr	x1, [x1, #16]
    a38c:	blr	x1
    a390:	add	x22, sp, #0x50
    a394:	add	x23, x22, #0x10
    a398:	str	x23, [sp, #80]
    a39c:	cbnz	x21, a3ac <gcc_cp_fe_context@@Base+0x68c>
    a3a0:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    a3a4:	add	x0, x0, #0x230
    a3a8:	bl	54d0 <_ZSt19__throw_logic_errorPKc@plt>
    a3ac:	mov	x0, x21
    a3b0:	bl	5360 <strlen@plt>
    a3b4:	str	x0, [sp, #72]
    a3b8:	mov	x19, x0
    a3bc:	cmp	x0, #0xf
    a3c0:	b.hi	a450 <gcc_cp_fe_context@@Base+0x730>  // b.pmore
    a3c4:	cmp	x19, #0x1
    a3c8:	b.ne	a444 <gcc_cp_fe_context@@Base+0x724>  // b.any
    a3cc:	ldrb	w1, [x21]
    a3d0:	mov	x0, x23
    a3d4:	strb	w1, [sp, #96]
    a3d8:	str	x19, [sp, #88]
    a3dc:	strb	wzr, [x0, x19]
    a3e0:	mov	x0, #0x30                  	// #48
    a3e4:	bl	5550 <_Znwm@plt>
    a3e8:	str	x20, [x0, #8]
    a3ec:	mov	x19, x0
    a3f0:	ldp	x1, x2, [sp, #80]
    a3f4:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    a3f8:	add	x4, x4, #0x640
    a3fc:	str	x4, [x0], #16
    a400:	mov	w3, #0x0                   	// #0
    a404:	add	x4, x0, #0x10
    a408:	str	x4, [x19, #16]
    a40c:	add	x2, x1, x2
    a410:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    a414:	ldr	x0, [sp, #80]
    a418:	str	x19, [x20, #144]
    a41c:	add	x22, x22, #0x10
    a420:	cmp	x0, x22
    a424:	b.eq	a42c <gcc_cp_fe_context@@Base+0x70c>  // b.none
    a428:	bl	5540 <_ZdlPv@plt>
    a42c:	mov	x0, #0x0                   	// #0
    a430:	ldp	x19, x20, [sp, #16]
    a434:	ldp	x21, x22, [sp, #32]
    a438:	ldr	x23, [sp, #48]
    a43c:	ldp	x29, x30, [sp], #112
    a440:	ret
    a444:	mov	x0, x23
    a448:	cbz	x19, a3d8 <gcc_cp_fe_context@@Base+0x6b8>
    a44c:	b	a46c <gcc_cp_fe_context@@Base+0x74c>
    a450:	add	x1, sp, #0x48
    a454:	mov	x0, x22
    a458:	mov	x2, #0x0                   	// #0
    a45c:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a460:	ldr	x1, [sp, #72]
    a464:	str	x0, [sp, #80]
    a468:	str	x1, [sp, #96]
    a46c:	mov	x2, x19
    a470:	mov	x1, x21
    a474:	bl	52b0 <memcpy@plt>
    a478:	ldp	x19, x0, [sp, #72]
    a47c:	b	a3d8 <gcc_cp_fe_context@@Base+0x6b8>
    a480:	mov	x19, x0
    a484:	b	a49c <gcc_cp_fe_context@@Base+0x77c>
    a488:	mov	x2, x0
    a48c:	mov	x1, #0x30                  	// #48
    a490:	mov	x0, x19
    a494:	mov	x19, x2
    a498:	bl	5560 <_ZdlPvm@plt>
    a49c:	ldr	x0, [sp, #80]
    a4a0:	add	x22, x22, #0x10
    a4a4:	cmp	x0, x22
    a4a8:	b.eq	a4b0 <gcc_cp_fe_context@@Base+0x790>  // b.none
    a4ac:	bl	5540 <_ZdlPv@plt>
    a4b0:	mov	x0, x19
    a4b4:	bl	57e0 <_Unwind_Resume@plt>
    a4b8:	stp	x29, x30, [sp, #-112]!
    a4bc:	mov	x29, sp
    a4c0:	stp	x19, x20, [sp, #16]
    a4c4:	mov	x20, x0
    a4c8:	ldr	x0, [x0, #144]
    a4cc:	stp	x21, x22, [sp, #32]
    a4d0:	mov	x21, x1
    a4d4:	str	x23, [sp, #48]
    a4d8:	cbz	x0, a4e8 <gcc_cp_fe_context@@Base+0x7c8>
    a4dc:	ldr	x1, [x0]
    a4e0:	ldr	x1, [x1, #16]
    a4e4:	blr	x1
    a4e8:	add	x22, sp, #0x50
    a4ec:	add	x23, x22, #0x10
    a4f0:	str	x23, [sp, #80]
    a4f4:	cbnz	x21, a504 <gcc_cp_fe_context@@Base+0x7e4>
    a4f8:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    a4fc:	add	x0, x0, #0x230
    a500:	bl	54d0 <_ZSt19__throw_logic_errorPKc@plt>
    a504:	mov	x0, x21
    a508:	bl	5360 <strlen@plt>
    a50c:	str	x0, [sp, #72]
    a510:	mov	x19, x0
    a514:	cmp	x0, #0xf
    a518:	b.hi	a5a8 <gcc_cp_fe_context@@Base+0x888>  // b.pmore
    a51c:	cmp	x19, #0x1
    a520:	b.ne	a59c <gcc_cp_fe_context@@Base+0x87c>  // b.any
    a524:	ldrb	w1, [x21]
    a528:	mov	x0, x23
    a52c:	strb	w1, [sp, #96]
    a530:	str	x19, [sp, #88]
    a534:	strb	wzr, [x0, x19]
    a538:	mov	x0, #0x30                  	// #48
    a53c:	bl	5550 <_Znwm@plt>
    a540:	str	x20, [x0, #8]
    a544:	mov	x19, x0
    a548:	ldp	x1, x2, [sp, #80]
    a54c:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    a550:	add	x4, x4, #0x618
    a554:	str	x4, [x0], #16
    a558:	mov	w3, #0x0                   	// #0
    a55c:	add	x4, x0, #0x10
    a560:	str	x4, [x19, #16]
    a564:	add	x2, x1, x2
    a568:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    a56c:	ldr	x0, [sp, #80]
    a570:	str	x19, [x20, #144]
    a574:	add	x22, x22, #0x10
    a578:	cmp	x0, x22
    a57c:	b.eq	a584 <gcc_cp_fe_context@@Base+0x864>  // b.none
    a580:	bl	5540 <_ZdlPv@plt>
    a584:	mov	x0, #0x0                   	// #0
    a588:	ldp	x19, x20, [sp, #16]
    a58c:	ldp	x21, x22, [sp, #32]
    a590:	ldr	x23, [sp, #48]
    a594:	ldp	x29, x30, [sp], #112
    a598:	ret
    a59c:	mov	x0, x23
    a5a0:	cbz	x19, a530 <gcc_cp_fe_context@@Base+0x810>
    a5a4:	b	a5c4 <gcc_cp_fe_context@@Base+0x8a4>
    a5a8:	add	x1, sp, #0x48
    a5ac:	mov	x0, x22
    a5b0:	mov	x2, #0x0                   	// #0
    a5b4:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a5b8:	ldr	x1, [sp, #72]
    a5bc:	str	x0, [sp, #80]
    a5c0:	str	x1, [sp, #96]
    a5c4:	mov	x2, x19
    a5c8:	mov	x1, x21
    a5cc:	bl	52b0 <memcpy@plt>
    a5d0:	ldp	x19, x0, [sp, #72]
    a5d4:	b	a530 <gcc_cp_fe_context@@Base+0x810>
    a5d8:	mov	x19, x0
    a5dc:	b	a5f4 <gcc_cp_fe_context@@Base+0x8d4>
    a5e0:	mov	x2, x0
    a5e4:	mov	x1, #0x30                  	// #48
    a5e8:	mov	x0, x19
    a5ec:	mov	x19, x2
    a5f0:	bl	5560 <_ZdlPvm@plt>
    a5f4:	ldr	x0, [sp, #80]
    a5f8:	add	x22, x22, #0x10
    a5fc:	cmp	x0, x22
    a600:	b.eq	a608 <gcc_cp_fe_context@@Base+0x8e8>  // b.none
    a604:	bl	5540 <_ZdlPv@plt>
    a608:	mov	x0, x19
    a60c:	bl	57e0 <_Unwind_Resume@plt>
    a610:	stp	x29, x30, [sp, #-240]!
    a614:	mov	w2, #0x0                   	// #0
    a618:	mov	x29, sp
    a61c:	add	x3, sp, #0x50
    a620:	stp	x19, x20, [sp, #16]
    a624:	mov	x19, x0
    a628:	stp	x21, x22, [sp, #32]
    a62c:	mov	x21, x1
    a630:	mov	w1, #0x1                   	// #1
    a634:	mov	w0, w1
    a638:	bl	52f0 <socketpair@plt>
    a63c:	cbz	w0, a668 <gcc_cp_fe_context@@Base+0x948>
    a640:	ldp	x2, x0, [x19, #64]
    a644:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    a648:	mov	w20, #0x0                   	// #0
    a64c:	add	x1, x1, #0x3d8
    a650:	blr	x2
    a654:	mov	w0, w20
    a658:	ldp	x19, x20, [sp, #16]
    a65c:	ldp	x21, x22, [sp, #32]
    a660:	ldp	x29, x30, [sp], #240
    a664:	ret
    a668:	mov	w20, w0
    a66c:	add	x0, sp, #0x58
    a670:	bl	5310 <pipe@plt>
    a674:	cbz	w0, a6ac <gcc_cp_fe_context@@Base+0x98c>
    a678:	ldp	x2, x0, [x19, #64]
    a67c:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    a680:	add	x1, x1, #0x3f8
    a684:	blr	x2
    a688:	ldr	w0, [sp, #80]
    a68c:	bl	56b0 <close@plt>
    a690:	ldr	w0, [sp, #84]
    a694:	bl	56b0 <close@plt>
    a698:	mov	w0, w20
    a69c:	ldp	x19, x20, [sp, #16]
    a6a0:	ldp	x21, x22, [sp, #32]
    a6a4:	ldp	x29, x30, [sp], #240
    a6a8:	ret
    a6ac:	stp	x23, x24, [sp, #48]
    a6b0:	add	x24, sp, #0x88
    a6b4:	add	x3, x24, #0x10
    a6b8:	mov	x4, #0x15                  	// #21
    a6bc:	add	x20, sp, #0x68
    a6c0:	mov	x1, x20
    a6c4:	mov	x2, #0x0                   	// #0
    a6c8:	mov	x0, x24
    a6cc:	str	x25, [sp, #64]
    a6d0:	str	x4, [sp, #104]
    a6d4:	add	x22, x19, #0x50
    a6d8:	str	x3, [sp, #136]
    a6dc:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a6e0:	adrp	x2, 15000 <iterative_hash@@Base+0x2c8>
    a6e4:	add	x2, x2, #0x510
    a6e8:	ldr	x1, [sp, #104]
    a6ec:	str	x0, [sp, #136]
    a6f0:	str	x1, [sp, #152]
    a6f4:	mov	x1, x24
    a6f8:	ldp	x4, x5, [x2]
    a6fc:	stp	x4, x5, [x0]
    a700:	ldur	x2, [x2, #13]
    a704:	stur	x2, [x0, #13]
    a708:	mov	x0, x22
    a70c:	ldr	x2, [sp, #104]
    a710:	str	x2, [sp, #144]
    a714:	ldr	x3, [sp, #136]
    a718:	strb	wzr, [x3, x2]
    a71c:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    a720:	ldr	x0, [sp, #136]
    a724:	add	x1, x24, #0x10
    a728:	cmp	x0, x1
    a72c:	b.eq	a734 <gcc_cp_fe_context@@Base+0xa14>  // b.none
    a730:	bl	5540 <_ZdlPv@plt>
    a734:	ldr	w3, [sp, #84]
    a738:	adrp	x2, 15000 <iterative_hash@@Base+0x2c8>
    a73c:	add	x2, x2, #0x528
    a740:	mov	x1, #0x64                  	// #100
    a744:	mov	x0, x24
    a748:	add	x25, x20, #0x10
    a74c:	bl	55b0 <snprintf@plt>
    a750:	str	x25, [sp, #104]
    a754:	mov	x0, x24
    a758:	bl	5360 <strlen@plt>
    a75c:	str	x0, [sp, #96]
    a760:	mov	x23, x0
    a764:	cmp	x0, #0xf
    a768:	b.hi	a864 <gcc_cp_fe_context@@Base+0xb44>  // b.pmore
    a76c:	cmp	x0, #0x1
    a770:	b.ne	ab4c <gcc_cp_fe_context@@Base+0xe2c>  // b.any
    a774:	ldrb	w1, [sp, #136]
    a778:	mov	x0, x25
    a77c:	strb	w1, [sp, #120]
    a780:	str	x23, [sp, #112]
    a784:	mov	x1, x20
    a788:	strb	wzr, [x0, x23]
    a78c:	mov	x0, x22
    a790:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    a794:	ldr	x0, [sp, #104]
    a798:	add	x1, x20, #0x10
    a79c:	cmp	x0, x1
    a7a0:	b.eq	a7a8 <gcc_cp_fe_context@@Base+0xa88>  // b.none
    a7a4:	bl	5540 <_ZdlPv@plt>
    a7a8:	ldp	x0, x1, [x22, #8]
    a7ac:	cmp	x0, x1
    a7b0:	b.eq	ab88 <gcc_cp_fe_context@@Base+0xe68>  // b.none
    a7b4:	add	x1, x0, #0x10
    a7b8:	mov	w3, #0x0                   	// #0
    a7bc:	ldr	x2, [x19, #112]
    a7c0:	str	x1, [x0]
    a7c4:	ldr	x1, [x19, #104]
    a7c8:	add	x2, x1, x2
    a7cc:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    a7d0:	ldr	x0, [x22, #8]
    a7d4:	add	x0, x0, #0x20
    a7d8:	str	x0, [x22, #8]
    a7dc:	add	x4, x20, #0x10
    a7e0:	mov	w2, #0x632d                	// #25389
    a7e4:	mov	x3, #0x2                   	// #2
    a7e8:	mov	x1, x20
    a7ec:	mov	x0, x22
    a7f0:	stp	x4, x3, [sp, #104]
    a7f4:	strh	w2, [sp, #120]
    a7f8:	strb	wzr, [sp, #122]
    a7fc:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    a800:	ldr	x0, [sp, #104]
    a804:	add	x1, x20, #0x10
    a808:	cmp	x0, x1
    a80c:	b.eq	a814 <gcc_cp_fe_context@@Base+0xaf4>  // b.none
    a810:	bl	5540 <_ZdlPv@plt>
    a814:	add	x4, x20, #0x10
    a818:	mov	w2, #0x6f2d                	// #28461
    a81c:	mov	x3, #0x2                   	// #2
    a820:	mov	x1, x20
    a824:	mov	x0, x22
    a828:	stp	x4, x3, [sp, #104]
    a82c:	strh	w2, [sp, #120]
    a830:	strb	wzr, [sp, #122]
    a834:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    a838:	ldr	x0, [sp, #104]
    a83c:	add	x1, x20, #0x10
    a840:	cmp	x0, x1
    a844:	b.eq	a84c <gcc_cp_fe_context@@Base+0xb2c>  // b.none
    a848:	bl	5540 <_ZdlPv@plt>
    a84c:	add	x24, x20, #0x10
    a850:	str	x24, [sp, #104]
    a854:	cbnz	x21, a894 <gcc_cp_fe_context@@Base+0xb74>
    a858:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    a85c:	add	x0, x0, #0x230
    a860:	bl	54d0 <_ZSt19__throw_logic_errorPKc@plt>
    a864:	add	x1, sp, #0x60
    a868:	mov	x0, x20
    a86c:	mov	x2, #0x0                   	// #0
    a870:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a874:	ldr	x1, [sp, #96]
    a878:	str	x0, [sp, #104]
    a87c:	str	x1, [sp, #120]
    a880:	mov	x2, x23
    a884:	mov	x1, x24
    a888:	bl	52b0 <memcpy@plt>
    a88c:	ldp	x23, x0, [sp, #96]
    a890:	b	a780 <gcc_cp_fe_context@@Base+0xa60>
    a894:	mov	x0, x21
    a898:	bl	5360 <strlen@plt>
    a89c:	str	x0, [sp, #96]
    a8a0:	mov	x23, x0
    a8a4:	cmp	x0, #0xf
    a8a8:	b.hi	ab58 <gcc_cp_fe_context@@Base+0xe38>  // b.pmore
    a8ac:	cmp	x23, #0x1
    a8b0:	b.ne	ab40 <gcc_cp_fe_context@@Base+0xe20>  // b.any
    a8b4:	ldrb	w1, [x21]
    a8b8:	mov	x0, x24
    a8bc:	strb	w1, [sp, #120]
    a8c0:	str	x23, [sp, #112]
    a8c4:	mov	x1, x20
    a8c8:	strb	wzr, [x0, x23]
    a8cc:	mov	x0, x22
    a8d0:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    a8d4:	ldr	x0, [sp, #104]
    a8d8:	add	x1, x20, #0x10
    a8dc:	cmp	x0, x1
    a8e0:	b.eq	a8e8 <gcc_cp_fe_context@@Base+0xbc8>  // b.none
    a8e4:	bl	5540 <_ZdlPv@plt>
    a8e8:	ldrb	w0, [x19, #136]
    a8ec:	cbz	w0, a928 <gcc_cp_fe_context@@Base+0xc08>
    a8f0:	add	x4, x20, #0x10
    a8f4:	mov	w2, #0x762d                	// #30253
    a8f8:	mov	x3, #0x2                   	// #2
    a8fc:	mov	x0, x22
    a900:	mov	x1, x20
    a904:	stp	x4, x3, [sp, #104]
    a908:	strh	w2, [sp, #120]
    a90c:	strb	wzr, [sp, #122]
    a910:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    a914:	ldr	x0, [sp, #104]
    a918:	add	x1, x20, #0x10
    a91c:	cmp	x0, x1
    a920:	b.eq	a928 <gcc_cp_fe_context@@Base+0xc08>  // b.none
    a924:	bl	5540 <_ZdlPv@plt>
    a928:	mov	x0, #0x20                  	// #32
    a92c:	bl	5550 <_Znwm@plt>
    a930:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    a934:	mov	x21, x0
    a938:	ldr	w3, [sp, #80]
    a93c:	add	x22, x0, #0x10
    a940:	ldr	x1, [x1, #3344]
    a944:	mov	x0, x22
    a948:	ldr	w2, [sp, #88]
    a94c:	add	x1, x1, #0x10
    a950:	str	x1, [x21]
    a954:	stp	w3, w2, [x21, #8]
    a958:	bl	d7e0 <gcc_cp_fe_context@@Base+0x3ac0>
    a95c:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    a960:	add	x3, x3, #0x5c8
    a964:	str	x3, [x21]
    a968:	mov	x0, x22
    a96c:	str	x21, [x19, #16]
    a970:	adrp	x2, 9000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2c8>
    a974:	str	x19, [x21, #24]
    a978:	add	x2, x2, #0x48
    a97c:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    a980:	add	x1, x1, #0x448
    a984:	bl	d848 <gcc_cp_fe_context@@Base+0x3b28>
    a988:	ldr	x0, [x19, #16]
    a98c:	adrp	x2, 9000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2c8>
    a990:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    a994:	add	x2, x2, #0x120
    a998:	add	x1, x1, #0x458
    a99c:	add	x0, x0, #0x10
    a9a0:	bl	d848 <gcc_cp_fe_context@@Base+0x3b28>
    a9a4:	ldr	x0, [x19, #16]
    a9a8:	adrp	x2, 9000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2c8>
    a9ac:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    a9b0:	add	x2, x2, #0x500
    a9b4:	add	x1, x1, #0x548
    a9b8:	add	x0, x0, #0x10
    a9bc:	bl	d848 <gcc_cp_fe_context@@Base+0x3b28>
    a9c0:	ldr	x0, [x19, #16]
    a9c4:	adrp	x2, 9000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2c8>
    a9c8:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
    a9cc:	add	x2, x2, #0x1e0
    a9d0:	add	x1, x1, #0x558
    a9d4:	add	x0, x0, #0x10
    a9d8:	bl	d848 <gcc_cp_fe_context@@Base+0x3b28>
    a9dc:	ldp	x2, x0, [x19, #80]
    a9e0:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    a9e4:	sub	x0, x0, x2
    a9e8:	asr	x0, x0, #5
    a9ec:	add	x0, x0, #0x1
    a9f0:	cmp	x0, x1
    a9f4:	b.hi	ac18 <gcc_cp_fe_context@@Base+0xef8>  // b.pmore
    a9f8:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    a9fc:	lsl	x0, x0, #3
    aa00:	ldr	x1, [x1, #3256]
    aa04:	bl	5770 <_ZnamRKSt9nothrow_t@plt>
    aa08:	mov	x21, x0
    aa0c:	cbz	x0, ab20 <gcc_cp_fe_context@@Base+0xe00>
    aa10:	ldp	x0, x3, [x19, #80]
    aa14:	sub	x3, x3, x0
    aa18:	cmp	xzr, x3, asr #5
    aa1c:	asr	x3, x3, #5
    aa20:	b.eq	abcc <gcc_cp_fe_context@@Base+0xeac>  // b.none
    aa24:	mov	w1, #0x0                   	// #0
    aa28:	mov	x2, #0x0                   	// #0
    aa2c:	nop
    aa30:	lsl	x4, x2, #5
    aa34:	add	w1, w1, #0x1
    aa38:	cmp	x3, w1, uxtw
    aa3c:	ldr	x4, [x0, x4]
    aa40:	str	x4, [x21, x2, lsl #3]
    aa44:	mov	w2, w1
    aa48:	b.hi	aa30 <gcc_cp_fe_context@@Base+0xd10>  // b.pmore
    aa4c:	add	x3, x21, x3, lsl #3
    aa50:	str	xzr, [x3]
    aa54:	bl	5680 <fork@plt>
    aa58:	mov	w22, w0
    aa5c:	cmn	w0, #0x1
    aa60:	b.eq	ab9c <gcc_cp_fe_context@@Base+0xe7c>  // b.none
    aa64:	cbz	w0, abd4 <gcc_cp_fe_context@@Base+0xeb4>
    aa68:	ldr	w0, [sp, #84]
    aa6c:	bl	56b0 <close@plt>
    aa70:	ldr	w0, [sp, #92]
    aa74:	bl	56b0 <close@plt>
    aa78:	ldr	x0, [x19, #16]
    aa7c:	mov	w1, #0x48                  	// #72
    aa80:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    aa84:	cbnz	w0, aaec <gcc_cp_fe_context@@Base+0xdcc>
    aa88:	mov	w19, #0x0                   	// #0
    aa8c:	ldr	w0, [sp, #80]
    aa90:	bl	56b0 <close@plt>
    aa94:	ldr	w0, [sp, #88]
    aa98:	bl	56b0 <close@plt>
    aa9c:	mov	x1, x20
    aaa0:	mov	w0, w22
    aaa4:	mov	w2, #0x0                   	// #0
    aaa8:	bl	53b0 <waitpid@plt>
    aaac:	cmn	w0, #0x1
    aab0:	b.eq	ab10 <gcc_cp_fe_context@@Base+0xdf0>  // b.none
    aab4:	ldr	w1, [sp, #104]
    aab8:	cmp	w19, #0x0
    aabc:	cset	w20, ne  // ne = any
    aac0:	and	w0, w1, #0x7f
    aac4:	ubfx	x1, x1, #8, #8
    aac8:	orr	w1, w1, w0
    aacc:	cbnz	w1, ab20 <gcc_cp_fe_context@@Base+0xe00>
    aad0:	mov	w0, w20
    aad4:	ldp	x19, x20, [sp, #16]
    aad8:	ldp	x21, x22, [sp, #32]
    aadc:	ldp	x23, x24, [sp, #48]
    aae0:	ldr	x25, [sp, #64]
    aae4:	ldp	x29, x30, [sp], #240
    aae8:	ret
    aaec:	ldr	x0, [x19, #16]
    aaf0:	mov	x1, #0x0                   	// #0
    aaf4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    aaf8:	cbz	w0, aa88 <gcc_cp_fe_context@@Base+0xd68>
    aafc:	ldr	x0, [x19, #16]
    ab00:	mov	w1, #0x0                   	// #0
    ab04:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    ab08:	mov	w19, w0
    ab0c:	b	aa8c <gcc_cp_fe_context@@Base+0xd6c>
    ab10:	bl	5620 <__errno_location@plt>
    ab14:	ldr	w0, [x0]
    ab18:	cmp	w0, #0x4
    ab1c:	b.eq	aab4 <gcc_cp_fe_context@@Base+0xd94>  // b.none
    ab20:	mov	w20, #0x0                   	// #0
    ab24:	mov	w0, w20
    ab28:	ldp	x19, x20, [sp, #16]
    ab2c:	ldp	x21, x22, [sp, #32]
    ab30:	ldp	x23, x24, [sp, #48]
    ab34:	ldr	x25, [sp, #64]
    ab38:	ldp	x29, x30, [sp], #240
    ab3c:	ret
    ab40:	mov	x0, x24
    ab44:	cbz	x23, a8c0 <gcc_cp_fe_context@@Base+0xba0>
    ab48:	b	ab74 <gcc_cp_fe_context@@Base+0xe54>
    ab4c:	mov	x0, x25
    ab50:	cbz	x23, a780 <gcc_cp_fe_context@@Base+0xa60>
    ab54:	b	a880 <gcc_cp_fe_context@@Base+0xb60>
    ab58:	add	x1, sp, #0x60
    ab5c:	mov	x0, x20
    ab60:	mov	x2, #0x0                   	// #0
    ab64:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    ab68:	ldr	x1, [sp, #96]
    ab6c:	str	x0, [sp, #104]
    ab70:	str	x1, [sp, #120]
    ab74:	mov	x2, x23
    ab78:	mov	x1, x21
    ab7c:	bl	52b0 <memcpy@plt>
    ab80:	ldp	x23, x0, [sp, #96]
    ab84:	b	a8c0 <gcc_cp_fe_context@@Base+0xba0>
    ab88:	mov	x1, x0
    ab8c:	add	x2, x19, #0x68
    ab90:	mov	x0, x22
    ab94:	bl	55d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    ab98:	b	a7dc <gcc_cp_fe_context@@Base+0xabc>
    ab9c:	ldr	w0, [sp, #80]
    aba0:	mov	w20, #0x0                   	// #0
    aba4:	bl	56b0 <close@plt>
    aba8:	ldr	w0, [sp, #84]
    abac:	bl	56b0 <close@plt>
    abb0:	ldr	w0, [sp, #88]
    abb4:	bl	56b0 <close@plt>
    abb8:	ldr	w0, [sp, #92]
    abbc:	bl	56b0 <close@plt>
    abc0:	ldp	x23, x24, [sp, #48]
    abc4:	ldr	x25, [sp, #64]
    abc8:	b	a654 <gcc_cp_fe_context@@Base+0x934>
    abcc:	mov	x3, x21
    abd0:	b	aa50 <gcc_cp_fe_context@@Base+0xd30>
    abd4:	ldr	w0, [sp, #92]
    abd8:	mov	w1, #0x1                   	// #1
    abdc:	bl	5320 <dup2@plt>
    abe0:	ldr	w0, [sp, #92]
    abe4:	mov	w1, #0x2                   	// #2
    abe8:	bl	5320 <dup2@plt>
    abec:	ldr	w0, [sp, #88]
    abf0:	bl	56b0 <close@plt>
    abf4:	ldr	w0, [sp, #92]
    abf8:	bl	56b0 <close@plt>
    abfc:	ldr	w0, [sp, #80]
    ac00:	bl	56b0 <close@plt>
    ac04:	ldr	x0, [x21]
    ac08:	mov	x1, x21
    ac0c:	bl	52e0 <execvp@plt>
    ac10:	mov	w0, #0x7f                  	// #127
    ac14:	bl	5490 <_exit@plt>
    ac18:	bl	56a0 <__cxa_throw_bad_array_new_length@plt>
    ac1c:	mov	x19, x0
    ac20:	mov	x1, #0x20                  	// #32
    ac24:	mov	x0, x21
    ac28:	bl	5560 <_ZdlPvm@plt>
    ac2c:	mov	x0, x19
    ac30:	bl	57e0 <_Unwind_Resume@plt>
    ac34:	ldr	x1, [sp, #104]
    ac38:	add	x20, x20, #0x10
    ac3c:	mov	x19, x0
    ac40:	cmp	x1, x20
    ac44:	b.eq	ac2c <gcc_cp_fe_context@@Base+0xf0c>  // b.none
    ac48:	mov	x0, x1
    ac4c:	bl	5540 <_ZdlPv@plt>
    ac50:	b	ac2c <gcc_cp_fe_context@@Base+0xf0c>
    ac54:	b	ac34 <gcc_cp_fe_context@@Base+0xf14>
    ac58:	b	ac34 <gcc_cp_fe_context@@Base+0xf14>
    ac5c:	b	ac34 <gcc_cp_fe_context@@Base+0xf14>
    ac60:	ldr	x1, [sp, #136]
    ac64:	add	x24, x24, #0x10
    ac68:	mov	x19, x0
    ac6c:	cmp	x1, x24
    ac70:	b.ne	ac48 <gcc_cp_fe_context@@Base+0xf28>  // b.any
    ac74:	b	ac2c <gcc_cp_fe_context@@Base+0xf0c>
    ac78:	b	ac34 <gcc_cp_fe_context@@Base+0xf14>
    ac7c:	nop
    ac80:	cmp	w2, #0x0
    ac84:	cset	w2, ne  // ne = any
    ac88:	strb	w2, [x0, #136]
    ac8c:	b	a610 <gcc_cp_fe_context@@Base+0x8f0>
    ac90:	stp	x29, x30, [sp, #-176]!
    ac94:	mov	x29, sp
    ac98:	stp	x21, x22, [sp, #32]
    ac9c:	mov	x22, x0
    aca0:	stp	x25, x26, [sp, #64]
    aca4:	add	x25, sp, #0x70
    aca8:	add	x0, x25, #0x10
    acac:	stp	x0, xzr, [sp, #112]
    acb0:	ldr	x0, [x22, #144]
    acb4:	strb	wzr, [sp, #128]
    acb8:	stp	x19, x20, [sp, #16]
    acbc:	mov	x20, x2
    acc0:	ldr	x3, [x0]
    acc4:	stp	x23, x24, [sp, #48]
    acc8:	mov	w23, w1
    accc:	stp	x27, x28, [sp, #80]
    acd0:	mov	x1, x25
    acd4:	ldr	x3, [x3]
    acd8:	blr	x3
    acdc:	mov	x26, x0
    ace0:	cbz	x0, ad18 <gcc_cp_fe_context@@Base+0xff8>
    ace4:	ldr	x0, [sp, #112]
    ace8:	add	x25, x25, #0x10
    acec:	cmp	x0, x25
    acf0:	b.eq	acf8 <gcc_cp_fe_context@@Base+0xfd8>  // b.none
    acf4:	bl	5540 <_ZdlPv@plt>
    acf8:	mov	x0, x26
    acfc:	ldp	x19, x20, [sp, #16]
    ad00:	ldp	x21, x22, [sp, #32]
    ad04:	ldp	x23, x24, [sp, #48]
    ad08:	ldp	x25, x26, [sp, #64]
    ad0c:	ldp	x27, x28, [sp, #80]
    ad10:	ldp	x29, x30, [sp], #176
    ad14:	ret
    ad18:	add	x22, x22, #0x50
    ad1c:	ldp	x0, x1, [x22, #8]
    ad20:	cmp	x0, x1
    ad24:	b.eq	ae28 <gcc_cp_fe_context@@Base+0x1108>  // b.none
    ad28:	add	x1, x0, #0x10
    ad2c:	mov	w3, #0x0                   	// #0
    ad30:	ldr	x2, [sp, #120]
    ad34:	str	x1, [x0]
    ad38:	ldr	x1, [sp, #112]
    ad3c:	add	x2, x1, x2
    ad40:	bl	53e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    ad44:	ldr	x0, [x22, #8]
    ad48:	add	x0, x0, #0x20
    ad4c:	str	x0, [x22, #8]
    ad50:	cmp	w23, #0x0
    ad54:	b.le	ace4 <gcc_cp_fe_context@@Base+0xfc4>
    ad58:	sub	w23, w23, #0x1
    ad5c:	add	x0, x20, #0x8
    ad60:	add	x27, sp, #0x90
    ad64:	add	x28, sp, #0x68
    ad68:	add	x23, x0, w23, uxtw #3
    ad6c:	add	x24, x27, #0x10
    ad70:	b	adb8 <gcc_cp_fe_context@@Base+0x1098>
    ad74:	cmp	x0, #0x1
    ad78:	b.ne	ae10 <gcc_cp_fe_context@@Base+0x10f0>  // b.any
    ad7c:	ldrb	w1, [x21]
    ad80:	mov	x0, x24
    ad84:	strb	w1, [sp, #160]
    ad88:	str	x19, [sp, #152]
    ad8c:	mov	x1, x27
    ad90:	strb	wzr, [x0, x19]
    ad94:	mov	x0, x22
    ad98:	bl	5820 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    ad9c:	ldr	x0, [sp, #144]
    ada0:	cmp	x0, x24
    ada4:	b.eq	adac <gcc_cp_fe_context@@Base+0x108c>  // b.none
    ada8:	bl	5540 <_ZdlPv@plt>
    adac:	add	x20, x20, #0x8
    adb0:	cmp	x23, x20
    adb4:	b.eq	ace4 <gcc_cp_fe_context@@Base+0xfc4>  // b.none
    adb8:	ldr	x21, [x20]
    adbc:	str	x24, [sp, #144]
    adc0:	cbz	x21, ae1c <gcc_cp_fe_context@@Base+0x10fc>
    adc4:	mov	x0, x21
    adc8:	bl	5360 <strlen@plt>
    adcc:	str	x0, [sp, #104]
    add0:	mov	x19, x0
    add4:	cmp	x0, #0xf
    add8:	b.ls	ad74 <gcc_cp_fe_context@@Base+0x1054>  // b.plast
    addc:	mov	x1, x28
    ade0:	mov	x0, x27
    ade4:	mov	x2, #0x0                   	// #0
    ade8:	bl	57f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    adec:	ldr	x1, [sp, #104]
    adf0:	str	x0, [sp, #144]
    adf4:	str	x1, [sp, #160]
    adf8:	mov	x2, x19
    adfc:	mov	x1, x21
    ae00:	bl	52b0 <memcpy@plt>
    ae04:	ldr	x19, [sp, #104]
    ae08:	ldr	x0, [sp, #144]
    ae0c:	b	ad88 <gcc_cp_fe_context@@Base+0x1068>
    ae10:	mov	x0, x24
    ae14:	cbz	x19, ad88 <gcc_cp_fe_context@@Base+0x1068>
    ae18:	b	adf8 <gcc_cp_fe_context@@Base+0x10d8>
    ae1c:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    ae20:	add	x0, x0, #0x230
    ae24:	bl	54d0 <_ZSt19__throw_logic_errorPKc@plt>
    ae28:	mov	x1, x0
    ae2c:	mov	x2, x25
    ae30:	mov	x0, x22
    ae34:	bl	55d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    ae38:	b	ad50 <gcc_cp_fe_context@@Base+0x1030>
    ae3c:	mov	x19, x0
    ae40:	ldr	x0, [sp, #112]
    ae44:	add	x25, x25, #0x10
    ae48:	cmp	x0, x25
    ae4c:	b.eq	ae54 <gcc_cp_fe_context@@Base+0x1134>  // b.none
    ae50:	bl	5540 <_ZdlPv@plt>
    ae54:	mov	x0, x19
    ae58:	bl	57e0 <_Unwind_Resume@plt>
    ae5c:	ldr	x1, [sp, #144]
    ae60:	add	x27, x27, #0x10
    ae64:	mov	x19, x0
    ae68:	cmp	x1, x27
    ae6c:	b.eq	ae40 <gcc_cp_fe_context@@Base+0x1120>  // b.none
    ae70:	mov	x0, x1
    ae74:	bl	5540 <_ZdlPv@plt>
    ae78:	b	ae40 <gcc_cp_fe_context@@Base+0x1120>
    ae7c:	nop
    ae80:	stp	x29, x30, [sp, #-48]!
    ae84:	mov	x29, sp
    ae88:	stp	x19, x20, [sp, #16]
    ae8c:	mov	w20, w2
    ae90:	mov	x19, x0
    ae94:	str	x21, [sp, #32]
    ae98:	mov	x21, x3
    ae9c:	bl	a4b8 <gcc_cp_fe_context@@Base+0x798>
    aea0:	cbz	x0, aeb4 <gcc_cp_fe_context@@Base+0x1194>
    aea4:	ldp	x19, x20, [sp, #16]
    aea8:	ldr	x21, [sp, #32]
    aeac:	ldp	x29, x30, [sp], #48
    aeb0:	ret
    aeb4:	mov	x2, x21
    aeb8:	mov	w1, w20
    aebc:	mov	x0, x19
    aec0:	ldp	x19, x20, [sp, #16]
    aec4:	ldr	x21, [sp, #32]
    aec8:	ldp	x29, x30, [sp], #48
    aecc:	b	ac90 <gcc_cp_fe_context@@Base+0xf70>
    aed0:	ret
    aed4:	nop
    aed8:	ldr	x0, [x0, #24]
    aedc:	ldp	x2, x0, [x0, #64]
    aee0:	mov	x16, x2
    aee4:	br	x16
    aee8:	mov	x1, #0x10                  	// #16
    aeec:	b	5560 <_ZdlPvm@plt>
    aef0:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    aef4:	add	x2, x1, #0x640
    aef8:	mov	x1, x0
    aefc:	str	x2, [x0]
    af00:	ldr	x0, [x1, #16]!
    af04:	add	x1, x1, #0x10
    af08:	cmp	x0, x1
    af0c:	b.eq	af14 <gcc_cp_fe_context@@Base+0x11f4>  // b.none
    af10:	b	5540 <_ZdlPv@plt>
    af14:	ret
    af18:	stp	x29, x30, [sp, #-32]!
    af1c:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    af20:	mov	x29, sp
    af24:	str	x19, [sp, #16]
    af28:	mov	x19, x0
    af2c:	add	x0, x1, #0x640
    af30:	mov	x1, x19
    af34:	str	x0, [x19]
    af38:	ldr	x0, [x1, #16]!
    af3c:	add	x1, x1, #0x10
    af40:	cmp	x0, x1
    af44:	b.eq	af4c <gcc_cp_fe_context@@Base+0x122c>  // b.none
    af48:	bl	5540 <_ZdlPv@plt>
    af4c:	mov	x0, x19
    af50:	mov	x1, #0x30                  	// #48
    af54:	ldr	x19, [sp, #16]
    af58:	ldp	x29, x30, [sp], #32
    af5c:	b	5560 <_ZdlPvm@plt>
    af60:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    af64:	add	x2, x1, #0x618
    af68:	mov	x1, x0
    af6c:	str	x2, [x0]
    af70:	ldr	x0, [x1, #16]!
    af74:	add	x1, x1, #0x10
    af78:	cmp	x0, x1
    af7c:	b.eq	af84 <gcc_cp_fe_context@@Base+0x1264>  // b.none
    af80:	b	5540 <_ZdlPv@plt>
    af84:	ret
    af88:	stp	x29, x30, [sp, #-32]!
    af8c:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    af90:	mov	x29, sp
    af94:	str	x19, [sp, #16]
    af98:	mov	x19, x0
    af9c:	add	x0, x1, #0x618
    afa0:	mov	x1, x19
    afa4:	str	x0, [x19]
    afa8:	ldr	x0, [x1, #16]!
    afac:	add	x1, x1, #0x10
    afb0:	cmp	x0, x1
    afb4:	b.eq	afbc <gcc_cp_fe_context@@Base+0x129c>  // b.none
    afb8:	bl	5540 <_ZdlPv@plt>
    afbc:	mov	x0, x19
    afc0:	mov	x1, #0x30                  	// #48
    afc4:	ldr	x19, [sp, #16]
    afc8:	ldp	x29, x30, [sp], #32
    afcc:	b	5560 <_ZdlPvm@plt>
    afd0:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    afd4:	add	x1, x1, #0x5c8
    afd8:	str	x1, [x0]
    afdc:	b	d8d8 <gcc_cp_fe_context@@Base+0x3bb8>
    afe0:	stp	x29, x30, [sp, #-32]!
    afe4:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    afe8:	add	x1, x1, #0x5c8
    afec:	mov	x29, sp
    aff0:	str	x19, [sp, #16]
    aff4:	mov	x19, x0
    aff8:	str	x1, [x0]
    affc:	bl	d8d8 <gcc_cp_fe_context@@Base+0x3bb8>
    b000:	mov	x0, x19
    b004:	mov	x1, #0x20                  	// #32
    b008:	ldr	x19, [sp, #16]
    b00c:	ldp	x29, x30, [sp], #32
    b010:	b	5560 <_ZdlPvm@plt>
    b014:	nop
    b018:	stp	x29, x30, [sp, #-112]!
    b01c:	adrp	x8, 2a000 <xexit@@Base+0x14e10>
    b020:	mov	x29, sp
    b024:	ldr	x8, [x8, #3440]
    b028:	stp	x25, x26, [sp, #64]
    b02c:	mov	w26, w7
    b030:	ldr	x25, [x0, #16]
    b034:	stp	x19, x20, [sp, #16]
    b038:	mov	x19, x1
    b03c:	mov	w20, w2
    b040:	mov	x0, x25
    b044:	mov	w1, #0x51                  	// #81
    b048:	stp	x21, x22, [sp, #32]
    b04c:	mov	x21, x3
    b050:	mov	x22, x4
    b054:	stp	x23, x24, [sp, #48]
    b058:	mov	x23, x5
    b05c:	mov	x24, x6
    b060:	str	x27, [sp, #80]
    b064:	ldr	x27, [x8]
    b068:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    b06c:	cbnz	w0, b090 <gcc_cp_fe_context@@Base+0x1370>
    b070:	mov	x0, #0x0                   	// #0
    b074:	ldp	x19, x20, [sp, #16]
    b078:	ldp	x21, x22, [sp, #32]
    b07c:	ldp	x23, x24, [sp, #48]
    b080:	ldp	x25, x26, [sp, #64]
    b084:	ldr	x27, [sp, #80]
    b088:	ldp	x29, x30, [sp], #112
    b08c:	ret
    b090:	mov	x1, x27
    b094:	mov	x0, x25
    b098:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b09c:	cbz	w0, b070 <gcc_cp_fe_context@@Base+0x1350>
    b0a0:	mov	x0, x25
    b0a4:	mov	x1, #0x7                   	// #7
    b0a8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b0ac:	cbz	w0, b070 <gcc_cp_fe_context@@Base+0x1350>
    b0b0:	mov	x1, x19
    b0b4:	mov	x0, x25
    b0b8:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b0bc:	cbz	w0, b070 <gcc_cp_fe_context@@Base+0x1350>
    b0c0:	mov	w1, w20
    b0c4:	mov	x0, x25
    b0c8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b0cc:	cbz	w0, b070 <gcc_cp_fe_context@@Base+0x1350>
    b0d0:	mov	x1, x21
    b0d4:	mov	x0, x25
    b0d8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b0dc:	cbz	w0, b070 <gcc_cp_fe_context@@Base+0x1350>
    b0e0:	mov	x1, x22
    b0e4:	mov	x0, x25
    b0e8:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b0ec:	cbz	w0, b070 <gcc_cp_fe_context@@Base+0x1350>
    b0f0:	mov	x1, x23
    b0f4:	mov	x0, x25
    b0f8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b0fc:	cbz	w0, b070 <gcc_cp_fe_context@@Base+0x1350>
    b100:	mov	x1, x24
    b104:	mov	x0, x25
    b108:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b10c:	cbz	w0, b070 <gcc_cp_fe_context@@Base+0x1350>
    b110:	mov	w1, w26
    b114:	mov	x0, x25
    b118:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b11c:	cbz	w0, b070 <gcc_cp_fe_context@@Base+0x1350>
    b120:	mov	x0, x25
    b124:	mov	w1, #0x1                   	// #1
    b128:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    b12c:	cbz	w0, b070 <gcc_cp_fe_context@@Base+0x1350>
    b130:	add	x1, sp, #0x68
    b134:	mov	x0, x25
    b138:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    b13c:	cmp	w0, #0x0
    b140:	ldr	x1, [sp, #104]
    b144:	csel	x0, xzr, x1, eq  // eq = none
    b148:	b	b074 <gcc_cp_fe_context@@Base+0x1354>
    b14c:	nop
    b150:	stp	x29, x30, [sp, #-64]!
    b154:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    b158:	mov	x29, sp
    b15c:	ldr	x3, [x3, #3728]
    b160:	stp	x21, x22, [sp, #32]
    b164:	ldr	x21, [x0, #16]
    b168:	stp	x19, x20, [sp, #16]
    b16c:	mov	x19, x1
    b170:	mov	x20, x2
    b174:	mov	x0, x21
    b178:	mov	w1, #0x51                  	// #81
    b17c:	ldr	x22, [x3]
    b180:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    b184:	cbnz	w0, b19c <gcc_cp_fe_context@@Base+0x147c>
    b188:	mov	w0, #0x0                   	// #0
    b18c:	ldp	x19, x20, [sp, #16]
    b190:	ldp	x21, x22, [sp, #32]
    b194:	ldp	x29, x30, [sp], #64
    b198:	ret
    b19c:	mov	x1, x22
    b1a0:	mov	x0, x21
    b1a4:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b1a8:	cbz	w0, b188 <gcc_cp_fe_context@@Base+0x1468>
    b1ac:	mov	x0, x21
    b1b0:	mov	x1, #0x2                   	// #2
    b1b4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b1b8:	cbz	w0, b188 <gcc_cp_fe_context@@Base+0x1468>
    b1bc:	mov	x1, x19
    b1c0:	mov	x0, x21
    b1c4:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b1c8:	cbz	w0, b188 <gcc_cp_fe_context@@Base+0x1468>
    b1cc:	mov	x1, x20
    b1d0:	mov	x0, x21
    b1d4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b1d8:	cbz	w0, b188 <gcc_cp_fe_context@@Base+0x1468>
    b1dc:	mov	x0, x21
    b1e0:	add	x1, sp, #0x3c
    b1e4:	bl	9278 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x540>
    b1e8:	cbz	w0, b188 <gcc_cp_fe_context@@Base+0x1468>
    b1ec:	ldr	w0, [sp, #60]
    b1f0:	ldp	x19, x20, [sp, #16]
    b1f4:	ldp	x21, x22, [sp, #32]
    b1f8:	ldp	x29, x30, [sp], #64
    b1fc:	ret
    b200:	stp	x29, x30, [sp, #-64]!
    b204:	adrp	x2, 2a000 <xexit@@Base+0x14e10>
    b208:	mov	x29, sp
    b20c:	ldr	x2, [x2, #3448]
    b210:	stp	x19, x20, [sp, #16]
    b214:	mov	x19, x1
    b218:	ldr	x20, [x0, #16]
    b21c:	mov	w1, #0x51                  	// #81
    b220:	str	x21, [sp, #32]
    b224:	mov	x0, x20
    b228:	ldr	x21, [x2]
    b22c:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    b230:	cbnz	w0, b248 <gcc_cp_fe_context@@Base+0x1528>
    b234:	mov	w0, #0x0                   	// #0
    b238:	ldp	x19, x20, [sp, #16]
    b23c:	ldr	x21, [sp, #32]
    b240:	ldp	x29, x30, [sp], #64
    b244:	ret
    b248:	mov	x1, x21
    b24c:	mov	x0, x20
    b250:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b254:	cbz	w0, b234 <gcc_cp_fe_context@@Base+0x1514>
    b258:	mov	x0, x20
    b25c:	mov	x1, #0x1                   	// #1
    b260:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b264:	cbz	w0, b234 <gcc_cp_fe_context@@Base+0x1514>
    b268:	mov	x1, x19
    b26c:	mov	x0, x20
    b270:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b274:	cbz	w0, b234 <gcc_cp_fe_context@@Base+0x1514>
    b278:	mov	x0, x20
    b27c:	mov	w1, #0x1                   	// #1
    b280:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    b284:	cbz	w0, b234 <gcc_cp_fe_context@@Base+0x1514>
    b288:	mov	x0, x20
    b28c:	add	x1, sp, #0x3c
    b290:	bl	9240 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x508>
    b294:	cbz	w0, b234 <gcc_cp_fe_context@@Base+0x1514>
    b298:	ldr	w0, [sp, #60]
    b29c:	ldp	x19, x20, [sp, #16]
    b2a0:	ldr	x21, [sp, #32]
    b2a4:	ldp	x29, x30, [sp], #64
    b2a8:	ret
    b2ac:	nop
    b2b0:	stp	x29, x30, [sp, #-64]!
    b2b4:	adrp	x2, 2a000 <xexit@@Base+0x14e10>
    b2b8:	mov	x29, sp
    b2bc:	ldr	x2, [x2, #3640]
    b2c0:	stp	x19, x20, [sp, #16]
    b2c4:	mov	x19, x1
    b2c8:	ldr	x20, [x0, #16]
    b2cc:	mov	w1, #0x51                  	// #81
    b2d0:	str	x21, [sp, #32]
    b2d4:	mov	x0, x20
    b2d8:	ldr	x21, [x2]
    b2dc:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    b2e0:	cbnz	w0, b2f8 <gcc_cp_fe_context@@Base+0x15d8>
    b2e4:	mov	x0, #0x0                   	// #0
    b2e8:	ldp	x19, x20, [sp, #16]
    b2ec:	ldr	x21, [sp, #32]
    b2f0:	ldp	x29, x30, [sp], #64
    b2f4:	ret
    b2f8:	mov	x1, x21
    b2fc:	mov	x0, x20
    b300:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b304:	cbz	w0, b2e4 <gcc_cp_fe_context@@Base+0x15c4>
    b308:	mov	x0, x20
    b30c:	mov	x1, #0x1                   	// #1
    b310:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b314:	cbz	w0, b2e4 <gcc_cp_fe_context@@Base+0x15c4>
    b318:	mov	x1, x19
    b31c:	mov	x0, x20
    b320:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b324:	cbz	w0, b2e4 <gcc_cp_fe_context@@Base+0x15c4>
    b328:	mov	x0, x20
    b32c:	mov	w1, #0x1                   	// #1
    b330:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    b334:	cbz	w0, b2e4 <gcc_cp_fe_context@@Base+0x15c4>
    b338:	mov	x0, x20
    b33c:	add	x1, sp, #0x38
    b340:	bl	92d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x598>
    b344:	cbz	w0, b2e4 <gcc_cp_fe_context@@Base+0x15c4>
    b348:	ldp	x19, x20, [sp, #16]
    b34c:	ldr	x21, [sp, #32]
    b350:	ldr	x0, [sp, #56]
    b354:	ldp	x29, x30, [sp], #64
    b358:	ret
    b35c:	nop
    b360:	stp	x29, x30, [sp, #-64]!
    b364:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    b368:	mov	x29, sp
    b36c:	ldr	x3, [x3, #3272]
    b370:	stp	x21, x22, [sp, #32]
    b374:	ldr	x21, [x0, #16]
    b378:	stp	x19, x20, [sp, #16]
    b37c:	mov	x19, x1
    b380:	mov	x20, x2
    b384:	mov	x0, x21
    b388:	mov	w1, #0x51                  	// #81
    b38c:	ldr	x22, [x3]
    b390:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    b394:	cbnz	w0, b3ac <gcc_cp_fe_context@@Base+0x168c>
    b398:	mov	x0, #0x0                   	// #0
    b39c:	ldp	x19, x20, [sp, #16]
    b3a0:	ldp	x21, x22, [sp, #32]
    b3a4:	ldp	x29, x30, [sp], #64
    b3a8:	ret
    b3ac:	mov	x1, x22
    b3b0:	mov	x0, x21
    b3b4:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b3b8:	cbz	w0, b398 <gcc_cp_fe_context@@Base+0x1678>
    b3bc:	mov	x0, x21
    b3c0:	mov	x1, #0x2                   	// #2
    b3c4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b3c8:	cbz	w0, b398 <gcc_cp_fe_context@@Base+0x1678>
    b3cc:	mov	x1, x19
    b3d0:	mov	x0, x21
    b3d4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b3d8:	cbz	w0, b398 <gcc_cp_fe_context@@Base+0x1678>
    b3dc:	mov	x1, x20
    b3e0:	mov	x0, x21
    b3e4:	bl	df60 <gcc_cp_fe_context@@Base+0x4240>
    b3e8:	cbz	w0, b398 <gcc_cp_fe_context@@Base+0x1678>
    b3ec:	mov	x0, x21
    b3f0:	add	x1, sp, #0x38
    b3f4:	bl	9308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5d0>
    b3f8:	cbz	w0, b398 <gcc_cp_fe_context@@Base+0x1678>
    b3fc:	ldp	x19, x20, [sp, #16]
    b400:	ldp	x21, x22, [sp, #32]
    b404:	ldr	x0, [sp, #56]
    b408:	ldp	x29, x30, [sp], #64
    b40c:	ret
    b410:	stp	x29, x30, [sp, #-80]!
    b414:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    b418:	mov	x29, sp
    b41c:	ldr	x4, [x4, #3928]
    b420:	stp	x19, x20, [sp, #16]
    b424:	mov	w20, w3
    b428:	ldr	x19, [x0, #16]
    b42c:	stp	x21, x22, [sp, #32]
    b430:	mov	x22, x1
    b434:	mov	x21, x2
    b438:	mov	x0, x19
    b43c:	mov	w1, #0x51                  	// #81
    b440:	str	x23, [sp, #48]
    b444:	ldr	x23, [x4]
    b448:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    b44c:	cbnz	w0, b468 <gcc_cp_fe_context@@Base+0x1748>
    b450:	mov	x0, #0x0                   	// #0
    b454:	ldp	x19, x20, [sp, #16]
    b458:	ldp	x21, x22, [sp, #32]
    b45c:	ldr	x23, [sp, #48]
    b460:	ldp	x29, x30, [sp], #80
    b464:	ret
    b468:	mov	x1, x23
    b46c:	mov	x0, x19
    b470:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b474:	cbz	w0, b450 <gcc_cp_fe_context@@Base+0x1730>
    b478:	mov	x0, x19
    b47c:	mov	x1, #0x3                   	// #3
    b480:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b484:	cbz	w0, b450 <gcc_cp_fe_context@@Base+0x1730>
    b488:	mov	x1, x22
    b48c:	mov	x0, x19
    b490:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b494:	cbz	w0, b450 <gcc_cp_fe_context@@Base+0x1730>
    b498:	mov	x1, x21
    b49c:	mov	x0, x19
    b4a0:	bl	df60 <gcc_cp_fe_context@@Base+0x4240>
    b4a4:	cbz	w0, b450 <gcc_cp_fe_context@@Base+0x1730>
    b4a8:	sxtw	x1, w20
    b4ac:	mov	x0, x19
    b4b0:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b4b4:	cbz	w0, b450 <gcc_cp_fe_context@@Base+0x1730>
    b4b8:	mov	x0, x19
    b4bc:	mov	w1, #0x1                   	// #1
    b4c0:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    b4c4:	cbz	w0, b450 <gcc_cp_fe_context@@Base+0x1730>
    b4c8:	add	x1, sp, #0x48
    b4cc:	mov	x0, x19
    b4d0:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    b4d4:	cmp	w0, #0x0
    b4d8:	ldr	x1, [sp, #72]
    b4dc:	csel	x0, xzr, x1, eq  // eq = none
    b4e0:	b	b454 <gcc_cp_fe_context@@Base+0x1734>
    b4e4:	nop
    b4e8:	stp	x29, x30, [sp, #-80]!
    b4ec:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    b4f0:	mov	x29, sp
    b4f4:	ldr	x5, [x5, #3768]
    b4f8:	stp	x19, x20, [sp, #16]
    b4fc:	mov	x20, x4
    b500:	ldr	x19, [x0, #16]
    b504:	stp	x21, x22, [sp, #32]
    b508:	mov	x22, x2
    b50c:	mov	x21, x3
    b510:	mov	x0, x19
    b514:	stp	x23, x24, [sp, #48]
    b518:	mov	x23, x1
    b51c:	mov	w1, #0x51                  	// #81
    b520:	ldr	x24, [x5]
    b524:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    b528:	cbnz	w0, b544 <gcc_cp_fe_context@@Base+0x1824>
    b52c:	mov	x0, #0x0                   	// #0
    b530:	ldp	x19, x20, [sp, #16]
    b534:	ldp	x21, x22, [sp, #32]
    b538:	ldp	x23, x24, [sp, #48]
    b53c:	ldp	x29, x30, [sp], #80
    b540:	ret
    b544:	mov	x1, x24
    b548:	mov	x0, x19
    b54c:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b550:	cbz	w0, b52c <gcc_cp_fe_context@@Base+0x180c>
    b554:	mov	x0, x19
    b558:	mov	x1, #0x4                   	// #4
    b55c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b560:	cbz	w0, b52c <gcc_cp_fe_context@@Base+0x180c>
    b564:	mov	x1, x23
    b568:	mov	x0, x19
    b56c:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b570:	cbz	w0, b52c <gcc_cp_fe_context@@Base+0x180c>
    b574:	mov	x1, x22
    b578:	mov	x0, x19
    b57c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b580:	cbz	w0, b52c <gcc_cp_fe_context@@Base+0x180c>
    b584:	mov	x1, x21
    b588:	mov	x0, x19
    b58c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b590:	cbz	w0, b52c <gcc_cp_fe_context@@Base+0x180c>
    b594:	mov	x1, x20
    b598:	mov	x0, x19
    b59c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b5a0:	cbz	w0, b52c <gcc_cp_fe_context@@Base+0x180c>
    b5a4:	mov	x0, x19
    b5a8:	mov	w1, #0x1                   	// #1
    b5ac:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    b5b0:	cbz	w0, b52c <gcc_cp_fe_context@@Base+0x180c>
    b5b4:	add	x1, sp, #0x48
    b5b8:	mov	x0, x19
    b5bc:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    b5c0:	cmp	w0, #0x0
    b5c4:	ldr	x1, [sp, #72]
    b5c8:	csel	x0, xzr, x1, eq  // eq = none
    b5cc:	b	b530 <gcc_cp_fe_context@@Base+0x1810>
    b5d0:	stp	x29, x30, [sp, #-64]!
    b5d4:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    b5d8:	mov	x29, sp
    b5dc:	ldr	x3, [x3, #3336]
    b5e0:	stp	x21, x22, [sp, #32]
    b5e4:	ldr	x21, [x0, #16]
    b5e8:	stp	x19, x20, [sp, #16]
    b5ec:	mov	w19, w1
    b5f0:	mov	x20, x2
    b5f4:	mov	x0, x21
    b5f8:	mov	w1, #0x51                  	// #81
    b5fc:	ldr	x22, [x3]
    b600:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    b604:	cbnz	w0, b61c <gcc_cp_fe_context@@Base+0x18fc>
    b608:	mov	w0, #0x0                   	// #0
    b60c:	ldp	x19, x20, [sp, #16]
    b610:	ldp	x21, x22, [sp, #32]
    b614:	ldp	x29, x30, [sp], #64
    b618:	ret
    b61c:	mov	x1, x22
    b620:	mov	x0, x21
    b624:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b628:	cbz	w0, b608 <gcc_cp_fe_context@@Base+0x18e8>
    b62c:	mov	x0, x21
    b630:	mov	x1, #0x2                   	// #2
    b634:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b638:	cbz	w0, b608 <gcc_cp_fe_context@@Base+0x18e8>
    b63c:	mov	w1, w19
    b640:	mov	x0, x21
    b644:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b648:	cbz	w0, b608 <gcc_cp_fe_context@@Base+0x18e8>
    b64c:	mov	x1, x20
    b650:	mov	x0, x21
    b654:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b658:	cbz	w0, b608 <gcc_cp_fe_context@@Base+0x18e8>
    b65c:	mov	x0, x21
    b660:	add	x1, sp, #0x3c
    b664:	bl	9278 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x540>
    b668:	cbz	w0, b608 <gcc_cp_fe_context@@Base+0x18e8>
    b66c:	ldr	w0, [sp, #60]
    b670:	ldp	x19, x20, [sp, #16]
    b674:	ldp	x21, x22, [sp, #32]
    b678:	ldp	x29, x30, [sp], #64
    b67c:	ret
    b680:	stp	x29, x30, [sp, #-80]!
    b684:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    b688:	mov	x29, sp
    b68c:	ldr	x5, [x5, #3664]
    b690:	stp	x19, x20, [sp, #16]
    b694:	mov	w20, w4
    b698:	ldr	x19, [x0, #16]
    b69c:	stp	x21, x22, [sp, #32]
    b6a0:	mov	x22, x2
    b6a4:	mov	x21, x3
    b6a8:	mov	x0, x19
    b6ac:	stp	x23, x24, [sp, #48]
    b6b0:	mov	x23, x1
    b6b4:	mov	w1, #0x51                  	// #81
    b6b8:	ldr	x24, [x5]
    b6bc:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    b6c0:	cbnz	w0, b6dc <gcc_cp_fe_context@@Base+0x19bc>
    b6c4:	mov	w0, #0x0                   	// #0
    b6c8:	ldp	x19, x20, [sp, #16]
    b6cc:	ldp	x21, x22, [sp, #32]
    b6d0:	ldp	x23, x24, [sp, #48]
    b6d4:	ldp	x29, x30, [sp], #80
    b6d8:	ret
    b6dc:	mov	x1, x24
    b6e0:	mov	x0, x19
    b6e4:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b6e8:	cbz	w0, b6c4 <gcc_cp_fe_context@@Base+0x19a4>
    b6ec:	mov	x0, x19
    b6f0:	mov	x1, #0x4                   	// #4
    b6f4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b6f8:	cbz	w0, b6c4 <gcc_cp_fe_context@@Base+0x19a4>
    b6fc:	mov	x1, x23
    b700:	mov	x0, x19
    b704:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b708:	cbz	w0, b6c4 <gcc_cp_fe_context@@Base+0x19a4>
    b70c:	mov	x1, x22
    b710:	mov	x0, x19
    b714:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b718:	cbz	w0, b6c4 <gcc_cp_fe_context@@Base+0x19a4>
    b71c:	mov	x1, x21
    b720:	mov	x0, x19
    b724:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b728:	cbz	w0, b6c4 <gcc_cp_fe_context@@Base+0x19a4>
    b72c:	mov	w1, w20
    b730:	mov	x0, x19
    b734:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b738:	cbz	w0, b6c4 <gcc_cp_fe_context@@Base+0x19a4>
    b73c:	mov	x0, x19
    b740:	mov	w1, #0x1                   	// #1
    b744:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    b748:	cbz	w0, b6c4 <gcc_cp_fe_context@@Base+0x19a4>
    b74c:	add	x1, sp, #0x48
    b750:	mov	x0, x19
    b754:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    b758:	cmp	w0, #0x0
    b75c:	ldr	w1, [sp, #72]
    b760:	mov	w0, #0x0                   	// #0
    b764:	csel	w0, w0, w1, eq  // eq = none
    b768:	b	b6c8 <gcc_cp_fe_context@@Base+0x19a8>
    b76c:	nop
    b770:	stp	x29, x30, [sp, #-96]!
    b774:	adrp	x6, 2a000 <xexit@@Base+0x14e10>
    b778:	mov	x29, sp
    b77c:	ldr	x6, [x6, #3208]
    b780:	stp	x21, x22, [sp, #32]
    b784:	mov	w22, w5
    b788:	ldr	x21, [x0, #16]
    b78c:	stp	x19, x20, [sp, #16]
    b790:	mov	x19, x1
    b794:	mov	x20, x2
    b798:	mov	x0, x21
    b79c:	mov	w1, #0x51                  	// #81
    b7a0:	stp	x23, x24, [sp, #48]
    b7a4:	mov	w24, w3
    b7a8:	mov	x23, x4
    b7ac:	str	x25, [sp, #64]
    b7b0:	ldr	x25, [x6]
    b7b4:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    b7b8:	cbnz	w0, b7d8 <gcc_cp_fe_context@@Base+0x1ab8>
    b7bc:	mov	x0, #0x0                   	// #0
    b7c0:	ldp	x19, x20, [sp, #16]
    b7c4:	ldp	x21, x22, [sp, #32]
    b7c8:	ldp	x23, x24, [sp, #48]
    b7cc:	ldr	x25, [sp, #64]
    b7d0:	ldp	x29, x30, [sp], #96
    b7d4:	ret
    b7d8:	mov	x1, x25
    b7dc:	mov	x0, x21
    b7e0:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b7e4:	cbz	w0, b7bc <gcc_cp_fe_context@@Base+0x1a9c>
    b7e8:	mov	x0, x21
    b7ec:	mov	x1, #0x5                   	// #5
    b7f0:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b7f4:	cbz	w0, b7bc <gcc_cp_fe_context@@Base+0x1a9c>
    b7f8:	mov	x1, x19
    b7fc:	mov	x0, x21
    b800:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b804:	cbz	w0, b7bc <gcc_cp_fe_context@@Base+0x1a9c>
    b808:	mov	x1, x20
    b80c:	mov	x0, x21
    b810:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b814:	cbz	w0, b7bc <gcc_cp_fe_context@@Base+0x1a9c>
    b818:	mov	w4, w22
    b81c:	mov	x3, x23
    b820:	mov	w2, w24
    b824:	mov	x0, x21
    b828:	add	x1, sp, #0x58
    b82c:	bl	9360 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x628>
    b830:	cbz	w0, b7bc <gcc_cp_fe_context@@Base+0x1a9c>
    b834:	ldp	x19, x20, [sp, #16]
    b838:	ldp	x21, x22, [sp, #32]
    b83c:	ldp	x23, x24, [sp, #48]
    b840:	ldr	x25, [sp, #64]
    b844:	ldr	x0, [sp, #88]
    b848:	ldp	x29, x30, [sp], #96
    b84c:	ret
    b850:	stp	x29, x30, [sp, #-96]!
    b854:	adrp	x6, 2a000 <xexit@@Base+0x14e10>
    b858:	mov	x29, sp
    b85c:	ldr	x6, [x6, #3352]
    b860:	stp	x21, x22, [sp, #32]
    b864:	mov	w22, w5
    b868:	ldr	x21, [x0, #16]
    b86c:	stp	x19, x20, [sp, #16]
    b870:	mov	w19, w1
    b874:	mov	x20, x2
    b878:	mov	x0, x21
    b87c:	mov	w1, #0x51                  	// #81
    b880:	stp	x23, x24, [sp, #48]
    b884:	mov	w24, w3
    b888:	mov	x23, x4
    b88c:	str	x25, [sp, #64]
    b890:	ldr	x25, [x6]
    b894:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    b898:	cbnz	w0, b8b8 <gcc_cp_fe_context@@Base+0x1b98>
    b89c:	mov	x0, #0x0                   	// #0
    b8a0:	ldp	x19, x20, [sp, #16]
    b8a4:	ldp	x21, x22, [sp, #32]
    b8a8:	ldp	x23, x24, [sp, #48]
    b8ac:	ldr	x25, [sp, #64]
    b8b0:	ldp	x29, x30, [sp], #96
    b8b4:	ret
    b8b8:	mov	x1, x25
    b8bc:	mov	x0, x21
    b8c0:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b8c4:	cbz	w0, b89c <gcc_cp_fe_context@@Base+0x1b7c>
    b8c8:	mov	x0, x21
    b8cc:	mov	x1, #0x5                   	// #5
    b8d0:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b8d4:	cbz	w0, b89c <gcc_cp_fe_context@@Base+0x1b7c>
    b8d8:	sxtw	x1, w19
    b8dc:	mov	x0, x21
    b8e0:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b8e4:	cbz	w0, b89c <gcc_cp_fe_context@@Base+0x1b7c>
    b8e8:	mov	x1, x20
    b8ec:	mov	x0, x21
    b8f0:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b8f4:	cbz	w0, b89c <gcc_cp_fe_context@@Base+0x1b7c>
    b8f8:	mov	w4, w22
    b8fc:	mov	x3, x23
    b900:	mov	w2, w24
    b904:	mov	x0, x21
    b908:	add	x1, sp, #0x58
    b90c:	bl	9360 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x628>
    b910:	cbz	w0, b89c <gcc_cp_fe_context@@Base+0x1b7c>
    b914:	ldp	x19, x20, [sp, #16]
    b918:	ldp	x21, x22, [sp, #32]
    b91c:	ldp	x23, x24, [sp, #48]
    b920:	ldr	x25, [sp, #64]
    b924:	ldr	x0, [sp, #88]
    b928:	ldp	x29, x30, [sp], #96
    b92c:	ret
    b930:	stp	x29, x30, [sp, #-96]!
    b934:	adrp	x6, 2a000 <xexit@@Base+0x14e10>
    b938:	mov	x29, sp
    b93c:	ldr	x6, [x6, #3232]
    b940:	stp	x21, x22, [sp, #32]
    b944:	mov	w22, w5
    b948:	ldr	x21, [x0, #16]
    b94c:	stp	x19, x20, [sp, #16]
    b950:	mov	x19, x1
    b954:	mov	x20, x2
    b958:	mov	x0, x21
    b95c:	mov	w1, #0x51                  	// #81
    b960:	stp	x23, x24, [sp, #48]
    b964:	mov	x24, x3
    b968:	mov	x23, x4
    b96c:	str	x25, [sp, #64]
    b970:	ldr	x25, [x6]
    b974:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    b978:	cbnz	w0, b998 <gcc_cp_fe_context@@Base+0x1c78>
    b97c:	mov	x0, #0x0                   	// #0
    b980:	ldp	x19, x20, [sp, #16]
    b984:	ldp	x21, x22, [sp, #32]
    b988:	ldp	x23, x24, [sp, #48]
    b98c:	ldr	x25, [sp, #64]
    b990:	ldp	x29, x30, [sp], #96
    b994:	ret
    b998:	mov	x1, x25
    b99c:	mov	x0, x21
    b9a0:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b9a4:	cbz	w0, b97c <gcc_cp_fe_context@@Base+0x1c5c>
    b9a8:	mov	x0, x21
    b9ac:	mov	x1, #0x5                   	// #5
    b9b0:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b9b4:	cbz	w0, b97c <gcc_cp_fe_context@@Base+0x1c5c>
    b9b8:	mov	x1, x19
    b9bc:	mov	x0, x21
    b9c0:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    b9c4:	cbz	w0, b97c <gcc_cp_fe_context@@Base+0x1c5c>
    b9c8:	mov	x1, x20
    b9cc:	mov	x0, x21
    b9d0:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    b9d4:	cbz	w0, b97c <gcc_cp_fe_context@@Base+0x1c5c>
    b9d8:	mov	w4, w22
    b9dc:	mov	x3, x23
    b9e0:	mov	x2, x24
    b9e4:	mov	x0, x21
    b9e8:	add	x1, sp, #0x58
    b9ec:	bl	9470 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x738>
    b9f0:	cbz	w0, b97c <gcc_cp_fe_context@@Base+0x1c5c>
    b9f4:	ldp	x19, x20, [sp, #16]
    b9f8:	ldp	x21, x22, [sp, #32]
    b9fc:	ldp	x23, x24, [sp, #48]
    ba00:	ldr	x25, [sp, #64]
    ba04:	ldr	x0, [sp, #88]
    ba08:	ldp	x29, x30, [sp], #96
    ba0c:	ret
    ba10:	stp	x29, x30, [sp, #-64]!
    ba14:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    ba18:	mov	x29, sp
    ba1c:	ldr	x3, [x3, #3312]
    ba20:	stp	x21, x22, [sp, #32]
    ba24:	ldr	x21, [x0, #16]
    ba28:	stp	x19, x20, [sp, #16]
    ba2c:	mov	x19, x1
    ba30:	mov	w20, w2
    ba34:	mov	x0, x21
    ba38:	mov	w1, #0x51                  	// #81
    ba3c:	ldr	x22, [x3]
    ba40:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    ba44:	cbnz	w0, ba5c <gcc_cp_fe_context@@Base+0x1d3c>
    ba48:	mov	x0, #0x0                   	// #0
    ba4c:	ldp	x19, x20, [sp, #16]
    ba50:	ldp	x21, x22, [sp, #32]
    ba54:	ldp	x29, x30, [sp], #64
    ba58:	ret
    ba5c:	mov	x1, x22
    ba60:	mov	x0, x21
    ba64:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    ba68:	cbz	w0, ba48 <gcc_cp_fe_context@@Base+0x1d28>
    ba6c:	mov	x0, x21
    ba70:	mov	x1, #0x2                   	// #2
    ba74:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    ba78:	cbz	w0, ba48 <gcc_cp_fe_context@@Base+0x1d28>
    ba7c:	mov	x1, x19
    ba80:	mov	x0, x21
    ba84:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    ba88:	cbz	w0, ba48 <gcc_cp_fe_context@@Base+0x1d28>
    ba8c:	mov	w1, w20
    ba90:	mov	x0, x21
    ba94:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    ba98:	cbz	w0, ba48 <gcc_cp_fe_context@@Base+0x1d28>
    ba9c:	mov	x0, x21
    baa0:	add	x1, sp, #0x38
    baa4:	bl	9308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5d0>
    baa8:	cbz	w0, ba48 <gcc_cp_fe_context@@Base+0x1d28>
    baac:	ldp	x19, x20, [sp, #16]
    bab0:	ldp	x21, x22, [sp, #32]
    bab4:	ldr	x0, [sp, #56]
    bab8:	ldp	x29, x30, [sp], #64
    babc:	ret
    bac0:	stp	x29, x30, [sp, #-96]!
    bac4:	adrp	x6, 2a000 <xexit@@Base+0x14e10>
    bac8:	mov	x29, sp
    bacc:	ldr	x6, [x6, #4032]
    bad0:	stp	x21, x22, [sp, #32]
    bad4:	mov	w22, w5
    bad8:	ldr	x21, [x0, #16]
    badc:	stp	x19, x20, [sp, #16]
    bae0:	mov	x19, x1
    bae4:	mov	x20, x2
    bae8:	mov	x0, x21
    baec:	mov	w1, #0x51                  	// #81
    baf0:	stp	x23, x24, [sp, #48]
    baf4:	mov	x24, x3
    baf8:	mov	x23, x4
    bafc:	str	x25, [sp, #64]
    bb00:	ldr	x25, [x6]
    bb04:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    bb08:	cbnz	w0, bb28 <gcc_cp_fe_context@@Base+0x1e08>
    bb0c:	mov	w0, #0x0                   	// #0
    bb10:	ldp	x19, x20, [sp, #16]
    bb14:	ldp	x21, x22, [sp, #32]
    bb18:	ldp	x23, x24, [sp, #48]
    bb1c:	ldr	x25, [sp, #64]
    bb20:	ldp	x29, x30, [sp], #96
    bb24:	ret
    bb28:	mov	x1, x25
    bb2c:	mov	x0, x21
    bb30:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    bb34:	cbz	w0, bb0c <gcc_cp_fe_context@@Base+0x1dec>
    bb38:	mov	x0, x21
    bb3c:	mov	x1, #0x5                   	// #5
    bb40:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    bb44:	cbz	w0, bb0c <gcc_cp_fe_context@@Base+0x1dec>
    bb48:	mov	x1, x19
    bb4c:	mov	x0, x21
    bb50:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    bb54:	cbz	w0, bb0c <gcc_cp_fe_context@@Base+0x1dec>
    bb58:	mov	x1, x20
    bb5c:	mov	x0, x21
    bb60:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    bb64:	cbz	w0, bb0c <gcc_cp_fe_context@@Base+0x1dec>
    bb68:	mov	x1, x24
    bb6c:	mov	x0, x21
    bb70:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    bb74:	cbz	w0, bb0c <gcc_cp_fe_context@@Base+0x1dec>
    bb78:	mov	x1, x23
    bb7c:	mov	x0, x21
    bb80:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    bb84:	cbz	w0, bb0c <gcc_cp_fe_context@@Base+0x1dec>
    bb88:	mov	w1, w22
    bb8c:	mov	x0, x21
    bb90:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    bb94:	cbz	w0, bb0c <gcc_cp_fe_context@@Base+0x1dec>
    bb98:	mov	x0, x21
    bb9c:	mov	w1, #0x1                   	// #1
    bba0:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    bba4:	cbz	w0, bb0c <gcc_cp_fe_context@@Base+0x1dec>
    bba8:	add	x1, sp, #0x58
    bbac:	mov	x0, x21
    bbb0:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    bbb4:	cmp	w0, #0x0
    bbb8:	ldr	w1, [sp, #88]
    bbbc:	mov	w0, #0x0                   	// #0
    bbc0:	csel	w0, w0, w1, eq  // eq = none
    bbc4:	b	bb10 <gcc_cp_fe_context@@Base+0x1df0>
    bbc8:	stp	x29, x30, [sp, #-64]!
    bbcc:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    bbd0:	mov	x29, sp
    bbd4:	ldr	x3, [x3, #3280]
    bbd8:	stp	x21, x22, [sp, #32]
    bbdc:	ldr	x21, [x0, #16]
    bbe0:	stp	x19, x20, [sp, #16]
    bbe4:	mov	x19, x1
    bbe8:	mov	x20, x2
    bbec:	mov	x0, x21
    bbf0:	mov	w1, #0x51                  	// #81
    bbf4:	ldr	x22, [x3]
    bbf8:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    bbfc:	cbnz	w0, bc14 <gcc_cp_fe_context@@Base+0x1ef4>
    bc00:	mov	x0, #0x0                   	// #0
    bc04:	ldp	x19, x20, [sp, #16]
    bc08:	ldp	x21, x22, [sp, #32]
    bc0c:	ldp	x29, x30, [sp], #64
    bc10:	ret
    bc14:	mov	x1, x22
    bc18:	mov	x0, x21
    bc1c:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    bc20:	cbz	w0, bc00 <gcc_cp_fe_context@@Base+0x1ee0>
    bc24:	mov	x0, x21
    bc28:	mov	x1, #0x2                   	// #2
    bc2c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    bc30:	cbz	w0, bc00 <gcc_cp_fe_context@@Base+0x1ee0>
    bc34:	mov	x1, x19
    bc38:	mov	x0, x21
    bc3c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    bc40:	cbz	w0, bc00 <gcc_cp_fe_context@@Base+0x1ee0>
    bc44:	mov	x1, x20
    bc48:	mov	x0, x21
    bc4c:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    bc50:	cbz	w0, bc00 <gcc_cp_fe_context@@Base+0x1ee0>
    bc54:	mov	x0, x21
    bc58:	add	x1, sp, #0x38
    bc5c:	bl	9308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5d0>
    bc60:	cbz	w0, bc00 <gcc_cp_fe_context@@Base+0x1ee0>
    bc64:	ldp	x19, x20, [sp, #16]
    bc68:	ldp	x21, x22, [sp, #32]
    bc6c:	ldr	x0, [sp, #56]
    bc70:	ldp	x29, x30, [sp], #64
    bc74:	ret
    bc78:	stp	x29, x30, [sp, #-80]!
    bc7c:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    bc80:	mov	x29, sp
    bc84:	ldr	x4, [x4, #3264]
    bc88:	stp	x19, x20, [sp, #16]
    bc8c:	mov	x20, x3
    bc90:	ldr	x19, [x0, #16]
    bc94:	stp	x21, x22, [sp, #32]
    bc98:	mov	w22, w1
    bc9c:	mov	x21, x2
    bca0:	mov	x0, x19
    bca4:	mov	w1, #0x51                  	// #81
    bca8:	str	x23, [sp, #48]
    bcac:	ldr	x23, [x4]
    bcb0:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    bcb4:	cbnz	w0, bcd0 <gcc_cp_fe_context@@Base+0x1fb0>
    bcb8:	mov	x0, #0x0                   	// #0
    bcbc:	ldp	x19, x20, [sp, #16]
    bcc0:	ldp	x21, x22, [sp, #32]
    bcc4:	ldr	x23, [sp, #48]
    bcc8:	ldp	x29, x30, [sp], #80
    bccc:	ret
    bcd0:	mov	x1, x23
    bcd4:	mov	x0, x19
    bcd8:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    bcdc:	cbz	w0, bcb8 <gcc_cp_fe_context@@Base+0x1f98>
    bce0:	mov	x0, x19
    bce4:	mov	x1, #0x3                   	// #3
    bce8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    bcec:	cbz	w0, bcb8 <gcc_cp_fe_context@@Base+0x1f98>
    bcf0:	sxtw	x1, w22
    bcf4:	mov	x0, x19
    bcf8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    bcfc:	cbz	w0, bcb8 <gcc_cp_fe_context@@Base+0x1f98>
    bd00:	mov	x1, x21
    bd04:	mov	x0, x19
    bd08:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    bd0c:	cbz	w0, bcb8 <gcc_cp_fe_context@@Base+0x1f98>
    bd10:	mov	x1, x20
    bd14:	mov	x0, x19
    bd18:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    bd1c:	cbz	w0, bcb8 <gcc_cp_fe_context@@Base+0x1f98>
    bd20:	mov	x0, x19
    bd24:	mov	w1, #0x1                   	// #1
    bd28:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    bd2c:	cbz	w0, bcb8 <gcc_cp_fe_context@@Base+0x1f98>
    bd30:	add	x1, sp, #0x48
    bd34:	mov	x0, x19
    bd38:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    bd3c:	cmp	w0, #0x0
    bd40:	ldr	x1, [sp, #72]
    bd44:	csel	x0, xzr, x1, eq  // eq = none
    bd48:	b	bcbc <gcc_cp_fe_context@@Base+0x1f9c>
    bd4c:	nop
    bd50:	stp	x29, x30, [sp, #-80]!
    bd54:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    bd58:	mov	x29, sp
    bd5c:	ldr	x4, [x4, #3392]
    bd60:	stp	x19, x20, [sp, #16]
    bd64:	mov	x20, x3
    bd68:	ldr	x19, [x0, #16]
    bd6c:	stp	x21, x22, [sp, #32]
    bd70:	mov	x22, x1
    bd74:	mov	x21, x2
    bd78:	mov	x0, x19
    bd7c:	mov	w1, #0x51                  	// #81
    bd80:	str	x23, [sp, #48]
    bd84:	ldr	x23, [x4]
    bd88:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    bd8c:	cbnz	w0, bda8 <gcc_cp_fe_context@@Base+0x2088>
    bd90:	mov	x0, #0x0                   	// #0
    bd94:	ldp	x19, x20, [sp, #16]
    bd98:	ldp	x21, x22, [sp, #32]
    bd9c:	ldr	x23, [sp, #48]
    bda0:	ldp	x29, x30, [sp], #80
    bda4:	ret
    bda8:	mov	x1, x23
    bdac:	mov	x0, x19
    bdb0:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    bdb4:	cbz	w0, bd90 <gcc_cp_fe_context@@Base+0x2070>
    bdb8:	mov	x0, x19
    bdbc:	mov	x1, #0x3                   	// #3
    bdc0:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    bdc4:	cbz	w0, bd90 <gcc_cp_fe_context@@Base+0x2070>
    bdc8:	mov	x1, x22
    bdcc:	mov	x0, x19
    bdd0:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    bdd4:	cbz	w0, bd90 <gcc_cp_fe_context@@Base+0x2070>
    bdd8:	mov	x1, x21
    bddc:	mov	x0, x19
    bde0:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    bde4:	cbz	w0, bd90 <gcc_cp_fe_context@@Base+0x2070>
    bde8:	mov	x1, x20
    bdec:	mov	x0, x19
    bdf0:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    bdf4:	cbz	w0, bd90 <gcc_cp_fe_context@@Base+0x2070>
    bdf8:	mov	x0, x19
    bdfc:	mov	w1, #0x1                   	// #1
    be00:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    be04:	cbz	w0, bd90 <gcc_cp_fe_context@@Base+0x2070>
    be08:	add	x1, sp, #0x48
    be0c:	mov	x0, x19
    be10:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    be14:	cmp	w0, #0x0
    be18:	ldr	x1, [sp, #72]
    be1c:	csel	x0, xzr, x1, eq  // eq = none
    be20:	b	bd94 <gcc_cp_fe_context@@Base+0x2074>
    be24:	nop
    be28:	stp	x29, x30, [sp, #-64]!
    be2c:	adrp	x2, 2a000 <xexit@@Base+0x14e10>
    be30:	mov	x29, sp
    be34:	ldr	x2, [x2, #3888]
    be38:	stp	x19, x20, [sp, #16]
    be3c:	mov	x19, x1
    be40:	ldr	x20, [x0, #16]
    be44:	mov	w1, #0x51                  	// #81
    be48:	str	x21, [sp, #32]
    be4c:	mov	x0, x20
    be50:	ldr	x21, [x2]
    be54:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    be58:	cbnz	w0, be70 <gcc_cp_fe_context@@Base+0x2150>
    be5c:	mov	w0, #0x0                   	// #0
    be60:	ldp	x19, x20, [sp, #16]
    be64:	ldr	x21, [sp, #32]
    be68:	ldp	x29, x30, [sp], #64
    be6c:	ret
    be70:	mov	x1, x21
    be74:	mov	x0, x20
    be78:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    be7c:	cbz	w0, be5c <gcc_cp_fe_context@@Base+0x213c>
    be80:	mov	x0, x20
    be84:	mov	x1, #0x1                   	// #1
    be88:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    be8c:	cbz	w0, be5c <gcc_cp_fe_context@@Base+0x213c>
    be90:	mov	x1, x19
    be94:	mov	x0, x20
    be98:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    be9c:	cbz	w0, be5c <gcc_cp_fe_context@@Base+0x213c>
    bea0:	mov	x0, x20
    bea4:	mov	w1, #0x1                   	// #1
    bea8:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    beac:	cbz	w0, be5c <gcc_cp_fe_context@@Base+0x213c>
    beb0:	mov	x0, x20
    beb4:	add	x1, sp, #0x3c
    beb8:	bl	9240 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x508>
    bebc:	cbz	w0, be5c <gcc_cp_fe_context@@Base+0x213c>
    bec0:	ldr	w0, [sp, #60]
    bec4:	ldp	x19, x20, [sp, #16]
    bec8:	ldr	x21, [sp, #32]
    becc:	ldp	x29, x30, [sp], #64
    bed0:	ret
    bed4:	nop
    bed8:	stp	x29, x30, [sp, #-96]!
    bedc:	adrp	x6, 2a000 <xexit@@Base+0x14e10>
    bee0:	mov	x29, sp
    bee4:	ldr	x6, [x6, #3528]
    bee8:	stp	x21, x22, [sp, #32]
    beec:	mov	x22, x5
    bef0:	ldr	x21, [x0, #16]
    bef4:	stp	x19, x20, [sp, #16]
    bef8:	mov	x19, x1
    befc:	mov	x20, x2
    bf00:	mov	x0, x21
    bf04:	mov	w1, #0x51                  	// #81
    bf08:	stp	x23, x24, [sp, #48]
    bf0c:	mov	w24, w3
    bf10:	mov	x23, x4
    bf14:	str	x25, [sp, #64]
    bf18:	ldr	x25, [x6]
    bf1c:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    bf20:	cbnz	w0, bf40 <gcc_cp_fe_context@@Base+0x2220>
    bf24:	mov	x0, #0x0                   	// #0
    bf28:	ldp	x19, x20, [sp, #16]
    bf2c:	ldp	x21, x22, [sp, #32]
    bf30:	ldp	x23, x24, [sp, #48]
    bf34:	ldr	x25, [sp, #64]
    bf38:	ldp	x29, x30, [sp], #96
    bf3c:	ret
    bf40:	mov	x1, x25
    bf44:	mov	x0, x21
    bf48:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    bf4c:	cbz	w0, bf24 <gcc_cp_fe_context@@Base+0x2204>
    bf50:	mov	x0, x21
    bf54:	mov	x1, #0x5                   	// #5
    bf58:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    bf5c:	cbz	w0, bf24 <gcc_cp_fe_context@@Base+0x2204>
    bf60:	mov	x1, x19
    bf64:	mov	x0, x21
    bf68:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    bf6c:	cbz	w0, bf24 <gcc_cp_fe_context@@Base+0x2204>
    bf70:	mov	x1, x20
    bf74:	mov	x0, x21
    bf78:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    bf7c:	cbz	w0, bf24 <gcc_cp_fe_context@@Base+0x2204>
    bf80:	mov	w1, w24
    bf84:	mov	x0, x21
    bf88:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    bf8c:	cbz	w0, bf24 <gcc_cp_fe_context@@Base+0x2204>
    bf90:	mov	x1, x23
    bf94:	mov	x0, x21
    bf98:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    bf9c:	cbz	w0, bf24 <gcc_cp_fe_context@@Base+0x2204>
    bfa0:	mov	x1, x22
    bfa4:	mov	x0, x21
    bfa8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    bfac:	cbz	w0, bf24 <gcc_cp_fe_context@@Base+0x2204>
    bfb0:	mov	x0, x21
    bfb4:	mov	w1, #0x1                   	// #1
    bfb8:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    bfbc:	cbz	w0, bf24 <gcc_cp_fe_context@@Base+0x2204>
    bfc0:	add	x1, sp, #0x58
    bfc4:	mov	x0, x21
    bfc8:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    bfcc:	cmp	w0, #0x0
    bfd0:	ldr	x1, [sp, #88]
    bfd4:	csel	x0, xzr, x1, eq  // eq = none
    bfd8:	b	bf28 <gcc_cp_fe_context@@Base+0x2208>
    bfdc:	nop
    bfe0:	stp	x29, x30, [sp, #-64]!
    bfe4:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    bfe8:	mov	x29, sp
    bfec:	ldr	x3, [x3, #3824]
    bff0:	stp	x21, x22, [sp, #32]
    bff4:	ldr	x21, [x0, #16]
    bff8:	stp	x19, x20, [sp, #16]
    bffc:	mov	x19, x1
    c000:	mov	x20, x2
    c004:	mov	x0, x21
    c008:	mov	w1, #0x51                  	// #81
    c00c:	ldr	x22, [x3]
    c010:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    c014:	cbnz	w0, c02c <gcc_cp_fe_context@@Base+0x230c>
    c018:	mov	x0, #0x0                   	// #0
    c01c:	ldp	x19, x20, [sp, #16]
    c020:	ldp	x21, x22, [sp, #32]
    c024:	ldp	x29, x30, [sp], #64
    c028:	ret
    c02c:	mov	x1, x22
    c030:	mov	x0, x21
    c034:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    c038:	cbz	w0, c018 <gcc_cp_fe_context@@Base+0x22f8>
    c03c:	mov	x0, x21
    c040:	mov	x1, #0x2                   	// #2
    c044:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c048:	cbz	w0, c018 <gcc_cp_fe_context@@Base+0x22f8>
    c04c:	mov	x1, x19
    c050:	mov	x0, x21
    c054:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c058:	cbz	w0, c018 <gcc_cp_fe_context@@Base+0x22f8>
    c05c:	mov	x1, x20
    c060:	mov	x0, x21
    c064:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c068:	cbz	w0, c018 <gcc_cp_fe_context@@Base+0x22f8>
    c06c:	mov	x0, x21
    c070:	add	x1, sp, #0x38
    c074:	bl	9308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5d0>
    c078:	cbz	w0, c018 <gcc_cp_fe_context@@Base+0x22f8>
    c07c:	ldp	x19, x20, [sp, #16]
    c080:	ldp	x21, x22, [sp, #32]
    c084:	ldr	x0, [sp, #56]
    c088:	ldp	x29, x30, [sp], #64
    c08c:	ret
    c090:	stp	x29, x30, [sp, #-64]!
    c094:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    c098:	mov	x29, sp
    c09c:	ldr	x3, [x3, #4008]
    c0a0:	stp	x21, x22, [sp, #32]
    c0a4:	ldr	x21, [x0, #16]
    c0a8:	stp	x19, x20, [sp, #16]
    c0ac:	mov	x19, x1
    c0b0:	mov	w20, w2
    c0b4:	mov	x0, x21
    c0b8:	mov	w1, #0x51                  	// #81
    c0bc:	ldr	x22, [x3]
    c0c0:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    c0c4:	cbnz	w0, c0dc <gcc_cp_fe_context@@Base+0x23bc>
    c0c8:	mov	x0, #0x0                   	// #0
    c0cc:	ldp	x19, x20, [sp, #16]
    c0d0:	ldp	x21, x22, [sp, #32]
    c0d4:	ldp	x29, x30, [sp], #64
    c0d8:	ret
    c0dc:	mov	x1, x22
    c0e0:	mov	x0, x21
    c0e4:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    c0e8:	cbz	w0, c0c8 <gcc_cp_fe_context@@Base+0x23a8>
    c0ec:	mov	x0, x21
    c0f0:	mov	x1, #0x2                   	// #2
    c0f4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c0f8:	cbz	w0, c0c8 <gcc_cp_fe_context@@Base+0x23a8>
    c0fc:	mov	x1, x19
    c100:	mov	x0, x21
    c104:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c108:	cbz	w0, c0c8 <gcc_cp_fe_context@@Base+0x23a8>
    c10c:	mov	w1, w20
    c110:	mov	x0, x21
    c114:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c118:	cbz	w0, c0c8 <gcc_cp_fe_context@@Base+0x23a8>
    c11c:	mov	x0, x21
    c120:	add	x1, sp, #0x38
    c124:	bl	9308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5d0>
    c128:	cbz	w0, c0c8 <gcc_cp_fe_context@@Base+0x23a8>
    c12c:	ldp	x19, x20, [sp, #16]
    c130:	ldp	x21, x22, [sp, #32]
    c134:	ldr	x0, [sp, #56]
    c138:	ldp	x29, x30, [sp], #64
    c13c:	ret
    c140:	stp	x29, x30, [sp, #-80]!
    c144:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    c148:	mov	x29, sp
    c14c:	ldr	x5, [x5, #3632]
    c150:	stp	x19, x20, [sp, #16]
    c154:	mov	w20, w4
    c158:	ldr	x19, [x0, #16]
    c15c:	stp	x21, x22, [sp, #32]
    c160:	mov	x22, x2
    c164:	mov	w21, w3
    c168:	mov	x0, x19
    c16c:	stp	x23, x24, [sp, #48]
    c170:	mov	x23, x1
    c174:	mov	w1, #0x51                  	// #81
    c178:	ldr	x24, [x5]
    c17c:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    c180:	cbnz	w0, c19c <gcc_cp_fe_context@@Base+0x247c>
    c184:	mov	x0, #0x0                   	// #0
    c188:	ldp	x19, x20, [sp, #16]
    c18c:	ldp	x21, x22, [sp, #32]
    c190:	ldp	x23, x24, [sp, #48]
    c194:	ldp	x29, x30, [sp], #80
    c198:	ret
    c19c:	mov	x1, x24
    c1a0:	mov	x0, x19
    c1a4:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    c1a8:	cbz	w0, c184 <gcc_cp_fe_context@@Base+0x2464>
    c1ac:	mov	x0, x19
    c1b0:	mov	x1, #0x4                   	// #4
    c1b4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c1b8:	cbz	w0, c184 <gcc_cp_fe_context@@Base+0x2464>
    c1bc:	mov	x1, x23
    c1c0:	mov	x0, x19
    c1c4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c1c8:	cbz	w0, c184 <gcc_cp_fe_context@@Base+0x2464>
    c1cc:	mov	x1, x22
    c1d0:	mov	x0, x19
    c1d4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c1d8:	cbz	w0, c184 <gcc_cp_fe_context@@Base+0x2464>
    c1dc:	mov	w1, w21
    c1e0:	mov	x0, x19
    c1e4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c1e8:	cbz	w0, c184 <gcc_cp_fe_context@@Base+0x2464>
    c1ec:	mov	w1, w20
    c1f0:	mov	x0, x19
    c1f4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c1f8:	cbz	w0, c184 <gcc_cp_fe_context@@Base+0x2464>
    c1fc:	mov	x0, x19
    c200:	mov	w1, #0x1                   	// #1
    c204:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    c208:	cbz	w0, c184 <gcc_cp_fe_context@@Base+0x2464>
    c20c:	add	x1, sp, #0x48
    c210:	mov	x0, x19
    c214:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    c218:	cmp	w0, #0x0
    c21c:	ldr	x1, [sp, #72]
    c220:	csel	x0, xzr, x1, eq  // eq = none
    c224:	b	c188 <gcc_cp_fe_context@@Base+0x2468>
    c228:	stp	x29, x30, [sp, #-80]!
    c22c:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    c230:	mov	x29, sp
    c234:	ldr	x5, [x5, #3760]
    c238:	stp	x19, x20, [sp, #16]
    c23c:	mov	w20, w4
    c240:	ldr	x19, [x0, #16]
    c244:	stp	x21, x22, [sp, #32]
    c248:	mov	x22, x2
    c24c:	mov	x21, x3
    c250:	mov	x0, x19
    c254:	stp	x23, x24, [sp, #48]
    c258:	mov	x23, x1
    c25c:	mov	w1, #0x51                  	// #81
    c260:	ldr	x24, [x5]
    c264:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    c268:	cbnz	w0, c284 <gcc_cp_fe_context@@Base+0x2564>
    c26c:	mov	x0, #0x0                   	// #0
    c270:	ldp	x19, x20, [sp, #16]
    c274:	ldp	x21, x22, [sp, #32]
    c278:	ldp	x23, x24, [sp, #48]
    c27c:	ldp	x29, x30, [sp], #80
    c280:	ret
    c284:	mov	x1, x24
    c288:	mov	x0, x19
    c28c:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    c290:	cbz	w0, c26c <gcc_cp_fe_context@@Base+0x254c>
    c294:	mov	x0, x19
    c298:	mov	x1, #0x4                   	// #4
    c29c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c2a0:	cbz	w0, c26c <gcc_cp_fe_context@@Base+0x254c>
    c2a4:	mov	x1, x23
    c2a8:	mov	x0, x19
    c2ac:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c2b0:	cbz	w0, c26c <gcc_cp_fe_context@@Base+0x254c>
    c2b4:	mov	x1, x22
    c2b8:	mov	x0, x19
    c2bc:	bl	9640 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x908>
    c2c0:	cbz	w0, c26c <gcc_cp_fe_context@@Base+0x254c>
    c2c4:	mov	w3, w20
    c2c8:	mov	x2, x21
    c2cc:	mov	x0, x19
    c2d0:	add	x1, sp, #0x48
    c2d4:	bl	93f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x6b8>
    c2d8:	cbz	w0, c26c <gcc_cp_fe_context@@Base+0x254c>
    c2dc:	ldp	x19, x20, [sp, #16]
    c2e0:	ldp	x21, x22, [sp, #32]
    c2e4:	ldp	x23, x24, [sp, #48]
    c2e8:	ldr	x0, [sp, #72]
    c2ec:	ldp	x29, x30, [sp], #80
    c2f0:	ret
    c2f4:	nop
    c2f8:	stp	x29, x30, [sp, #-64]!
    c2fc:	adrp	x3, 2a000 <xexit@@Base+0x14e10>
    c300:	mov	x29, sp
    c304:	ldr	x3, [x3, #3496]
    c308:	stp	x21, x22, [sp, #32]
    c30c:	ldr	x21, [x0, #16]
    c310:	stp	x19, x20, [sp, #16]
    c314:	mov	x19, x1
    c318:	mov	x20, x2
    c31c:	mov	x0, x21
    c320:	mov	w1, #0x51                  	// #81
    c324:	ldr	x22, [x3]
    c328:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    c32c:	cbnz	w0, c344 <gcc_cp_fe_context@@Base+0x2624>
    c330:	mov	x0, #0x0                   	// #0
    c334:	ldp	x19, x20, [sp, #16]
    c338:	ldp	x21, x22, [sp, #32]
    c33c:	ldp	x29, x30, [sp], #64
    c340:	ret
    c344:	mov	x1, x22
    c348:	mov	x0, x21
    c34c:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    c350:	cbz	w0, c330 <gcc_cp_fe_context@@Base+0x2610>
    c354:	mov	x0, x21
    c358:	mov	x1, #0x2                   	// #2
    c35c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c360:	cbz	w0, c330 <gcc_cp_fe_context@@Base+0x2610>
    c364:	mov	x1, x19
    c368:	mov	x0, x21
    c36c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c370:	cbz	w0, c330 <gcc_cp_fe_context@@Base+0x2610>
    c374:	mov	x1, x20
    c378:	mov	x0, x21
    c37c:	bl	9800 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xac8>
    c380:	cbz	w0, c330 <gcc_cp_fe_context@@Base+0x2610>
    c384:	mov	x0, x21
    c388:	add	x1, sp, #0x38
    c38c:	bl	9308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5d0>
    c390:	cbz	w0, c330 <gcc_cp_fe_context@@Base+0x2610>
    c394:	ldp	x19, x20, [sp, #16]
    c398:	ldp	x21, x22, [sp, #32]
    c39c:	ldr	x0, [sp, #56]
    c3a0:	ldp	x29, x30, [sp], #64
    c3a4:	ret
    c3a8:	stp	x29, x30, [sp, #-80]!
    c3ac:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    c3b0:	mov	x29, sp
    c3b4:	ldr	x4, [x4, #3360]
    c3b8:	stp	x19, x20, [sp, #16]
    c3bc:	mov	x20, x3
    c3c0:	ldr	x19, [x0, #16]
    c3c4:	stp	x21, x22, [sp, #32]
    c3c8:	mov	x22, x1
    c3cc:	mov	x21, x2
    c3d0:	mov	x0, x19
    c3d4:	mov	w1, #0x51                  	// #81
    c3d8:	str	x23, [sp, #48]
    c3dc:	ldr	x23, [x4]
    c3e0:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    c3e4:	cbnz	w0, c400 <gcc_cp_fe_context@@Base+0x26e0>
    c3e8:	mov	x0, #0x0                   	// #0
    c3ec:	ldp	x19, x20, [sp, #16]
    c3f0:	ldp	x21, x22, [sp, #32]
    c3f4:	ldr	x23, [sp, #48]
    c3f8:	ldp	x29, x30, [sp], #80
    c3fc:	ret
    c400:	mov	x1, x23
    c404:	mov	x0, x19
    c408:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    c40c:	cbz	w0, c3e8 <gcc_cp_fe_context@@Base+0x26c8>
    c410:	mov	x0, x19
    c414:	mov	x1, #0x3                   	// #3
    c418:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c41c:	cbz	w0, c3e8 <gcc_cp_fe_context@@Base+0x26c8>
    c420:	mov	x1, x22
    c424:	mov	x0, x19
    c428:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c42c:	cbz	w0, c3e8 <gcc_cp_fe_context@@Base+0x26c8>
    c430:	mov	x1, x21
    c434:	mov	x0, x19
    c438:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    c43c:	cbz	w0, c3e8 <gcc_cp_fe_context@@Base+0x26c8>
    c440:	mov	x1, x20
    c444:	mov	x0, x19
    c448:	bl	9800 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xac8>
    c44c:	cbz	w0, c3e8 <gcc_cp_fe_context@@Base+0x26c8>
    c450:	mov	x0, x19
    c454:	mov	w1, #0x1                   	// #1
    c458:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    c45c:	cbz	w0, c3e8 <gcc_cp_fe_context@@Base+0x26c8>
    c460:	add	x1, sp, #0x48
    c464:	mov	x0, x19
    c468:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    c46c:	cmp	w0, #0x0
    c470:	ldr	x1, [sp, #72]
    c474:	csel	x0, xzr, x1, eq  // eq = none
    c478:	b	c3ec <gcc_cp_fe_context@@Base+0x26cc>
    c47c:	nop
    c480:	stp	x29, x30, [sp, #-96]!
    c484:	adrp	x6, 2a000 <xexit@@Base+0x14e10>
    c488:	mov	x29, sp
    c48c:	ldr	x6, [x6, #3784]
    c490:	stp	x21, x22, [sp, #32]
    c494:	mov	x22, x5
    c498:	ldr	x21, [x0, #16]
    c49c:	stp	x19, x20, [sp, #16]
    c4a0:	mov	x19, x1
    c4a4:	mov	w20, w2
    c4a8:	mov	x0, x21
    c4ac:	mov	w1, #0x51                  	// #81
    c4b0:	stp	x23, x24, [sp, #48]
    c4b4:	mov	x24, x3
    c4b8:	mov	x23, x4
    c4bc:	str	x25, [sp, #64]
    c4c0:	ldr	x25, [x6]
    c4c4:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    c4c8:	cbnz	w0, c4e8 <gcc_cp_fe_context@@Base+0x27c8>
    c4cc:	mov	x0, #0x0                   	// #0
    c4d0:	ldp	x19, x20, [sp, #16]
    c4d4:	ldp	x21, x22, [sp, #32]
    c4d8:	ldp	x23, x24, [sp, #48]
    c4dc:	ldr	x25, [sp, #64]
    c4e0:	ldp	x29, x30, [sp], #96
    c4e4:	ret
    c4e8:	mov	x1, x25
    c4ec:	mov	x0, x21
    c4f0:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    c4f4:	cbz	w0, c4cc <gcc_cp_fe_context@@Base+0x27ac>
    c4f8:	mov	x0, x21
    c4fc:	mov	x1, #0x5                   	// #5
    c500:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c504:	cbz	w0, c4cc <gcc_cp_fe_context@@Base+0x27ac>
    c508:	mov	x1, x19
    c50c:	mov	x0, x21
    c510:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c514:	cbz	w0, c4cc <gcc_cp_fe_context@@Base+0x27ac>
    c518:	mov	w1, w20
    c51c:	mov	x0, x21
    c520:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c524:	cbz	w0, c4cc <gcc_cp_fe_context@@Base+0x27ac>
    c528:	mov	x1, x24
    c52c:	mov	x0, x21
    c530:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    c534:	cbz	w0, c4cc <gcc_cp_fe_context@@Base+0x27ac>
    c538:	mov	x1, x23
    c53c:	mov	x0, x21
    c540:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c544:	cbz	w0, c4cc <gcc_cp_fe_context@@Base+0x27ac>
    c548:	mov	x1, x22
    c54c:	mov	x0, x21
    c550:	bl	9800 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xac8>
    c554:	cbz	w0, c4cc <gcc_cp_fe_context@@Base+0x27ac>
    c558:	mov	x0, x21
    c55c:	mov	w1, #0x1                   	// #1
    c560:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    c564:	cbz	w0, c4cc <gcc_cp_fe_context@@Base+0x27ac>
    c568:	add	x1, sp, #0x58
    c56c:	mov	x0, x21
    c570:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    c574:	cmp	w0, #0x0
    c578:	ldr	x1, [sp, #88]
    c57c:	csel	x0, xzr, x1, eq  // eq = none
    c580:	b	c4d0 <gcc_cp_fe_context@@Base+0x27b0>
    c584:	nop
    c588:	stp	x29, x30, [sp, #-80]!
    c58c:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    c590:	mov	x29, sp
    c594:	ldr	x5, [x5, #3720]
    c598:	stp	x19, x20, [sp, #16]
    c59c:	mov	w20, w4
    c5a0:	ldr	x19, [x0, #16]
    c5a4:	stp	x21, x22, [sp, #32]
    c5a8:	mov	x22, x2
    c5ac:	mov	x21, x3
    c5b0:	mov	x0, x19
    c5b4:	stp	x23, x24, [sp, #48]
    c5b8:	mov	x23, x1
    c5bc:	mov	w1, #0x51                  	// #81
    c5c0:	ldr	x24, [x5]
    c5c4:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    c5c8:	cbnz	w0, c5e4 <gcc_cp_fe_context@@Base+0x28c4>
    c5cc:	mov	x0, #0x0                   	// #0
    c5d0:	ldp	x19, x20, [sp, #16]
    c5d4:	ldp	x21, x22, [sp, #32]
    c5d8:	ldp	x23, x24, [sp, #48]
    c5dc:	ldp	x29, x30, [sp], #80
    c5e0:	ret
    c5e4:	mov	x1, x24
    c5e8:	mov	x0, x19
    c5ec:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    c5f0:	cbz	w0, c5cc <gcc_cp_fe_context@@Base+0x28ac>
    c5f4:	mov	x0, x19
    c5f8:	mov	x1, #0x4                   	// #4
    c5fc:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c600:	cbz	w0, c5cc <gcc_cp_fe_context@@Base+0x28ac>
    c604:	mov	x1, x23
    c608:	mov	x0, x19
    c60c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c610:	cbz	w0, c5cc <gcc_cp_fe_context@@Base+0x28ac>
    c614:	mov	x1, x22
    c618:	mov	x0, x19
    c61c:	bl	9800 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xac8>
    c620:	cbz	w0, c5cc <gcc_cp_fe_context@@Base+0x28ac>
    c624:	mov	w3, w20
    c628:	mov	x2, x21
    c62c:	mov	x0, x19
    c630:	add	x1, sp, #0x48
    c634:	bl	93f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x6b8>
    c638:	cbz	w0, c5cc <gcc_cp_fe_context@@Base+0x28ac>
    c63c:	ldp	x19, x20, [sp, #16]
    c640:	ldp	x21, x22, [sp, #32]
    c644:	ldp	x23, x24, [sp, #48]
    c648:	ldr	x0, [sp, #72]
    c64c:	ldp	x29, x30, [sp], #80
    c650:	ret
    c654:	nop
    c658:	stp	x29, x30, [sp, #-96]!
    c65c:	adrp	x6, 2a000 <xexit@@Base+0x14e10>
    c660:	mov	x29, sp
    c664:	ldr	x6, [x6, #3592]
    c668:	stp	x21, x22, [sp, #32]
    c66c:	mov	w22, w5
    c670:	ldr	x21, [x0, #16]
    c674:	stp	x19, x20, [sp, #16]
    c678:	mov	x19, x1
    c67c:	mov	x20, x2
    c680:	mov	x0, x21
    c684:	mov	w1, #0x51                  	// #81
    c688:	stp	x23, x24, [sp, #48]
    c68c:	mov	x24, x3
    c690:	mov	x23, x4
    c694:	str	x25, [sp, #64]
    c698:	ldr	x25, [x6]
    c69c:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    c6a0:	cbnz	w0, c6c0 <gcc_cp_fe_context@@Base+0x29a0>
    c6a4:	mov	x0, #0x0                   	// #0
    c6a8:	ldp	x19, x20, [sp, #16]
    c6ac:	ldp	x21, x22, [sp, #32]
    c6b0:	ldp	x23, x24, [sp, #48]
    c6b4:	ldr	x25, [sp, #64]
    c6b8:	ldp	x29, x30, [sp], #96
    c6bc:	ret
    c6c0:	mov	x1, x25
    c6c4:	mov	x0, x21
    c6c8:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    c6cc:	cbz	w0, c6a4 <gcc_cp_fe_context@@Base+0x2984>
    c6d0:	mov	x0, x21
    c6d4:	mov	x1, #0x5                   	// #5
    c6d8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c6dc:	cbz	w0, c6a4 <gcc_cp_fe_context@@Base+0x2984>
    c6e0:	mov	x1, x19
    c6e4:	mov	x0, x21
    c6e8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c6ec:	cbz	w0, c6a4 <gcc_cp_fe_context@@Base+0x2984>
    c6f0:	mov	x1, x20
    c6f4:	mov	x0, x21
    c6f8:	bl	9800 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xac8>
    c6fc:	cbz	w0, c6a4 <gcc_cp_fe_context@@Base+0x2984>
    c700:	mov	w4, w22
    c704:	mov	x3, x23
    c708:	mov	x2, x24
    c70c:	mov	x0, x21
    c710:	add	x1, sp, #0x58
    c714:	bl	9470 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x738>
    c718:	cbz	w0, c6a4 <gcc_cp_fe_context@@Base+0x2984>
    c71c:	ldp	x19, x20, [sp, #16]
    c720:	ldp	x21, x22, [sp, #32]
    c724:	ldp	x23, x24, [sp, #48]
    c728:	ldr	x25, [sp, #64]
    c72c:	ldr	x0, [sp, #88]
    c730:	ldp	x29, x30, [sp], #96
    c734:	ret
    c738:	stp	x29, x30, [sp, #-80]!
    c73c:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    c740:	mov	x29, sp
    c744:	ldr	x4, [x4, #3744]
    c748:	stp	x19, x20, [sp, #16]
    c74c:	mov	x20, x3
    c750:	ldr	x19, [x0, #16]
    c754:	stp	x21, x22, [sp, #32]
    c758:	mov	x22, x1
    c75c:	mov	x21, x2
    c760:	mov	x0, x19
    c764:	mov	w1, #0x51                  	// #81
    c768:	str	x23, [sp, #48]
    c76c:	ldr	x23, [x4]
    c770:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    c774:	cbnz	w0, c790 <gcc_cp_fe_context@@Base+0x2a70>
    c778:	mov	x0, #0x0                   	// #0
    c77c:	ldp	x19, x20, [sp, #16]
    c780:	ldp	x21, x22, [sp, #32]
    c784:	ldr	x23, [sp, #48]
    c788:	ldp	x29, x30, [sp], #80
    c78c:	ret
    c790:	mov	x1, x23
    c794:	mov	x0, x19
    c798:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    c79c:	cbz	w0, c778 <gcc_cp_fe_context@@Base+0x2a58>
    c7a0:	mov	x0, x19
    c7a4:	mov	x1, #0x3                   	// #3
    c7a8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c7ac:	cbz	w0, c778 <gcc_cp_fe_context@@Base+0x2a58>
    c7b0:	mov	x1, x22
    c7b4:	mov	x0, x19
    c7b8:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    c7bc:	cbz	w0, c778 <gcc_cp_fe_context@@Base+0x2a58>
    c7c0:	mov	x1, x21
    c7c4:	mov	x0, x19
    c7c8:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c7cc:	cbz	w0, c778 <gcc_cp_fe_context@@Base+0x2a58>
    c7d0:	mov	x2, x20
    c7d4:	mov	x0, x19
    c7d8:	add	x1, sp, #0x48
    c7dc:	bl	9a20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xce8>
    c7e0:	cbz	w0, c778 <gcc_cp_fe_context@@Base+0x2a58>
    c7e4:	ldp	x19, x20, [sp, #16]
    c7e8:	ldp	x21, x22, [sp, #32]
    c7ec:	ldr	x23, [sp, #48]
    c7f0:	ldr	x0, [sp, #72]
    c7f4:	ldp	x29, x30, [sp], #80
    c7f8:	ret
    c7fc:	nop
    c800:	stp	x29, x30, [sp, #-80]!
    c804:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    c808:	mov	x29, sp
    c80c:	ldr	x4, [x4, #3544]
    c810:	stp	x19, x20, [sp, #16]
    c814:	mov	x20, x3
    c818:	ldr	x19, [x0, #16]
    c81c:	stp	x21, x22, [sp, #32]
    c820:	mov	x22, x1
    c824:	mov	w21, w2
    c828:	mov	x0, x19
    c82c:	mov	w1, #0x51                  	// #81
    c830:	str	x23, [sp, #48]
    c834:	ldr	x23, [x4]
    c838:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    c83c:	cbnz	w0, c858 <gcc_cp_fe_context@@Base+0x2b38>
    c840:	mov	x0, #0x0                   	// #0
    c844:	ldp	x19, x20, [sp, #16]
    c848:	ldp	x21, x22, [sp, #32]
    c84c:	ldr	x23, [sp, #48]
    c850:	ldp	x29, x30, [sp], #80
    c854:	ret
    c858:	mov	x1, x23
    c85c:	mov	x0, x19
    c860:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    c864:	cbz	w0, c840 <gcc_cp_fe_context@@Base+0x2b20>
    c868:	mov	x0, x19
    c86c:	mov	x1, #0x3                   	// #3
    c870:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c874:	cbz	w0, c840 <gcc_cp_fe_context@@Base+0x2b20>
    c878:	mov	x1, x22
    c87c:	mov	x0, x19
    c880:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c884:	cbz	w0, c840 <gcc_cp_fe_context@@Base+0x2b20>
    c888:	sxtw	x1, w21
    c88c:	mov	x0, x19
    c890:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c894:	cbz	w0, c840 <gcc_cp_fe_context@@Base+0x2b20>
    c898:	mov	x2, x20
    c89c:	mov	x0, x19
    c8a0:	add	x1, sp, #0x48
    c8a4:	bl	9a20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xce8>
    c8a8:	cbz	w0, c840 <gcc_cp_fe_context@@Base+0x2b20>
    c8ac:	ldp	x19, x20, [sp, #16]
    c8b0:	ldp	x21, x22, [sp, #32]
    c8b4:	ldr	x23, [sp, #48]
    c8b8:	ldr	x0, [sp, #72]
    c8bc:	ldp	x29, x30, [sp], #80
    c8c0:	ret
    c8c4:	nop
    c8c8:	stp	x29, x30, [sp, #-80]!
    c8cc:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    c8d0:	mov	x29, sp
    c8d4:	ldr	x5, [x5, #3680]
    c8d8:	stp	x19, x20, [sp, #16]
    c8dc:	mov	x20, x4
    c8e0:	ldr	x19, [x0, #16]
    c8e4:	stp	x21, x22, [sp, #32]
    c8e8:	mov	x22, x2
    c8ec:	mov	x21, x3
    c8f0:	mov	x0, x19
    c8f4:	stp	x23, x24, [sp, #48]
    c8f8:	mov	x23, x1
    c8fc:	mov	w1, #0x51                  	// #81
    c900:	ldr	x24, [x5]
    c904:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    c908:	cbnz	w0, c924 <gcc_cp_fe_context@@Base+0x2c04>
    c90c:	mov	x0, #0x0                   	// #0
    c910:	ldp	x19, x20, [sp, #16]
    c914:	ldp	x21, x22, [sp, #32]
    c918:	ldp	x23, x24, [sp, #48]
    c91c:	ldp	x29, x30, [sp], #80
    c920:	ret
    c924:	mov	x1, x24
    c928:	mov	x0, x19
    c92c:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    c930:	cbz	w0, c90c <gcc_cp_fe_context@@Base+0x2bec>
    c934:	mov	x0, x19
    c938:	mov	x1, #0x4                   	// #4
    c93c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c940:	cbz	w0, c90c <gcc_cp_fe_context@@Base+0x2bec>
    c944:	mov	x1, x23
    c948:	mov	x0, x19
    c94c:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    c950:	cbz	w0, c90c <gcc_cp_fe_context@@Base+0x2bec>
    c954:	mov	x1, x22
    c958:	mov	x0, x19
    c95c:	bl	99a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc70>
    c960:	cbz	w0, c90c <gcc_cp_fe_context@@Base+0x2bec>
    c964:	mov	x1, x21
    c968:	mov	x0, x19
    c96c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    c970:	cbz	w0, c90c <gcc_cp_fe_context@@Base+0x2bec>
    c974:	mov	x1, x20
    c978:	mov	x0, x19
    c97c:	bl	99a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc70>
    c980:	cbz	w0, c90c <gcc_cp_fe_context@@Base+0x2bec>
    c984:	mov	x0, x19
    c988:	mov	w1, #0x1                   	// #1
    c98c:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    c990:	cbz	w0, c90c <gcc_cp_fe_context@@Base+0x2bec>
    c994:	add	x1, sp, #0x48
    c998:	mov	x0, x19
    c99c:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    c9a0:	cmp	w0, #0x0
    c9a4:	ldr	x1, [sp, #72]
    c9a8:	csel	x0, xzr, x1, eq  // eq = none
    c9ac:	b	c910 <gcc_cp_fe_context@@Base+0x2bf0>
    c9b0:	stp	x29, x30, [sp, #-48]!
    c9b4:	mov	x29, sp
    c9b8:	stp	x19, x20, [sp, #16]
    c9bc:	mov	x20, x1
    c9c0:	mov	x19, x0
    c9c4:	mov	w1, #0x51                  	// #81
    c9c8:	stp	x21, x22, [sp, #32]
    c9cc:	mov	x22, x2
    c9d0:	mov	x21, x3
    c9d4:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    c9d8:	cbnz	w0, c9f0 <gcc_cp_fe_context@@Base+0x2cd0>
    c9dc:	mov	w0, #0x0                   	// #0
    c9e0:	ldp	x19, x20, [sp, #16]
    c9e4:	ldp	x21, x22, [sp, #32]
    c9e8:	ldp	x29, x30, [sp], #48
    c9ec:	ret
    c9f0:	mov	x1, x20
    c9f4:	mov	x0, x19
    c9f8:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    c9fc:	cbz	w0, c9dc <gcc_cp_fe_context@@Base+0x2cbc>
    ca00:	mov	x0, x19
    ca04:	mov	x1, #0x1                   	// #1
    ca08:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    ca0c:	cbz	w0, c9dc <gcc_cp_fe_context@@Base+0x2cbc>
    ca10:	mov	x1, x21
    ca14:	mov	x0, x19
    ca18:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    ca1c:	cbz	w0, c9dc <gcc_cp_fe_context@@Base+0x2cbc>
    ca20:	mov	x0, x19
    ca24:	mov	w1, #0x1                   	// #1
    ca28:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    ca2c:	cbz	w0, c9dc <gcc_cp_fe_context@@Base+0x2cbc>
    ca30:	mov	x1, x22
    ca34:	mov	x0, x19
    ca38:	ldp	x19, x20, [sp, #16]
    ca3c:	ldp	x21, x22, [sp, #32]
    ca40:	ldp	x29, x30, [sp], #48
    ca44:	b	9240 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x508>
    ca48:	stp	x29, x30, [sp, #-32]!
    ca4c:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    ca50:	mov	x3, x1
    ca54:	mov	x29, sp
    ca58:	ldr	x4, [x4, #3696]
    ca5c:	add	x2, sp, #0x1c
    ca60:	ldr	x0, [x0, #16]
    ca64:	ldr	x1, [x4]
    ca68:	bl	c9b0 <gcc_cp_fe_context@@Base+0x2c90>
    ca6c:	cmp	w0, #0x0
    ca70:	ldr	w1, [sp, #28]
    ca74:	ldp	x29, x30, [sp], #32
    ca78:	csel	w0, w1, wzr, ne  // ne = any
    ca7c:	ret
    ca80:	stp	x29, x30, [sp, #-32]!
    ca84:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    ca88:	mov	x3, x1
    ca8c:	mov	x29, sp
    ca90:	ldr	x4, [x4, #3880]
    ca94:	add	x2, sp, #0x1c
    ca98:	ldr	x0, [x0, #16]
    ca9c:	ldr	x1, [x4]
    caa0:	bl	c9b0 <gcc_cp_fe_context@@Base+0x2c90>
    caa4:	cmp	w0, #0x0
    caa8:	ldr	w1, [sp, #28]
    caac:	ldp	x29, x30, [sp], #32
    cab0:	csel	w0, w1, wzr, ne  // ne = any
    cab4:	ret
    cab8:	stp	x29, x30, [sp, #-32]!
    cabc:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    cac0:	mov	x3, x1
    cac4:	mov	x29, sp
    cac8:	ldr	x4, [x4, #3488]
    cacc:	add	x2, sp, #0x1c
    cad0:	ldr	x0, [x0, #16]
    cad4:	ldr	x1, [x4]
    cad8:	bl	c9b0 <gcc_cp_fe_context@@Base+0x2c90>
    cadc:	cmp	w0, #0x0
    cae0:	ldr	w1, [sp, #28]
    cae4:	ldp	x29, x30, [sp], #32
    cae8:	csel	w0, w1, wzr, ne  // ne = any
    caec:	ret
    caf0:	stp	x29, x30, [sp, #-32]!
    caf4:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    caf8:	mov	x3, x1
    cafc:	mov	x29, sp
    cb00:	ldr	x4, [x4, #3584]
    cb04:	add	x2, sp, #0x1c
    cb08:	ldr	x0, [x0, #16]
    cb0c:	ldr	x1, [x4]
    cb10:	bl	c9b0 <gcc_cp_fe_context@@Base+0x2c90>
    cb14:	cmp	w0, #0x0
    cb18:	ldr	w1, [sp, #28]
    cb1c:	ldp	x29, x30, [sp], #32
    cb20:	csel	w0, w1, wzr, ne  // ne = any
    cb24:	ret
    cb28:	stp	x29, x30, [sp, #-64]!
    cb2c:	mov	x29, sp
    cb30:	stp	x19, x20, [sp, #16]
    cb34:	mov	x20, x1
    cb38:	mov	x19, x0
    cb3c:	mov	w1, #0x51                  	// #81
    cb40:	stp	x21, x22, [sp, #32]
    cb44:	mov	x21, x3
    cb48:	mov	x22, x4
    cb4c:	str	x23, [sp, #48]
    cb50:	mov	x23, x2
    cb54:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    cb58:	cbnz	w0, cb74 <gcc_cp_fe_context@@Base+0x2e54>
    cb5c:	mov	w0, #0x0                   	// #0
    cb60:	ldp	x19, x20, [sp, #16]
    cb64:	ldp	x21, x22, [sp, #32]
    cb68:	ldr	x23, [sp, #48]
    cb6c:	ldp	x29, x30, [sp], #64
    cb70:	ret
    cb74:	mov	x1, x20
    cb78:	mov	x0, x19
    cb7c:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    cb80:	cbz	w0, cb5c <gcc_cp_fe_context@@Base+0x2e3c>
    cb84:	mov	x0, x19
    cb88:	mov	x1, #0x2                   	// #2
    cb8c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    cb90:	cbz	w0, cb5c <gcc_cp_fe_context@@Base+0x2e3c>
    cb94:	mov	x1, x21
    cb98:	mov	x0, x19
    cb9c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    cba0:	cbz	w0, cb5c <gcc_cp_fe_context@@Base+0x2e3c>
    cba4:	mov	x1, x22
    cba8:	mov	x0, x19
    cbac:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    cbb0:	cbz	w0, cb5c <gcc_cp_fe_context@@Base+0x2e3c>
    cbb4:	mov	x1, x23
    cbb8:	mov	x0, x19
    cbbc:	ldp	x19, x20, [sp, #16]
    cbc0:	ldp	x21, x22, [sp, #32]
    cbc4:	ldr	x23, [sp, #48]
    cbc8:	ldp	x29, x30, [sp], #64
    cbcc:	b	9278 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x540>
    cbd0:	stp	x29, x30, [sp, #-32]!
    cbd4:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    cbd8:	mov	x3, x1
    cbdc:	mov	x29, sp
    cbe0:	ldr	x5, [x5, #3864]
    cbe4:	mov	x4, x2
    cbe8:	ldr	x0, [x0, #16]
    cbec:	add	x2, sp, #0x1c
    cbf0:	ldr	x1, [x5]
    cbf4:	bl	cb28 <gcc_cp_fe_context@@Base+0x2e08>
    cbf8:	cmp	w0, #0x0
    cbfc:	ldr	w1, [sp, #28]
    cc00:	ldp	x29, x30, [sp], #32
    cc04:	csel	w0, w1, wzr, ne  // ne = any
    cc08:	ret
    cc0c:	nop
    cc10:	stp	x29, x30, [sp, #-32]!
    cc14:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    cc18:	mov	x3, x1
    cc1c:	mov	x29, sp
    cc20:	ldr	x5, [x5, #3480]
    cc24:	mov	x4, x2
    cc28:	ldr	x0, [x0, #16]
    cc2c:	add	x2, sp, #0x1c
    cc30:	ldr	x1, [x5]
    cc34:	bl	cb28 <gcc_cp_fe_context@@Base+0x2e08>
    cc38:	cmp	w0, #0x0
    cc3c:	ldr	w1, [sp, #28]
    cc40:	ldp	x29, x30, [sp], #32
    cc44:	csel	w0, w1, wzr, ne  // ne = any
    cc48:	ret
    cc4c:	nop
    cc50:	stp	x29, x30, [sp, #-48]!
    cc54:	mov	x29, sp
    cc58:	stp	x19, x20, [sp, #16]
    cc5c:	mov	x20, x1
    cc60:	mov	x19, x0
    cc64:	mov	w1, #0x51                  	// #81
    cc68:	str	x21, [sp, #32]
    cc6c:	mov	x21, x2
    cc70:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    cc74:	cbnz	w0, cc8c <gcc_cp_fe_context@@Base+0x2f6c>
    cc78:	mov	w0, #0x0                   	// #0
    cc7c:	ldp	x19, x20, [sp, #16]
    cc80:	ldr	x21, [sp, #32]
    cc84:	ldp	x29, x30, [sp], #48
    cc88:	ret
    cc8c:	mov	x1, x20
    cc90:	mov	x0, x19
    cc94:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    cc98:	cbz	w0, cc78 <gcc_cp_fe_context@@Base+0x2f58>
    cc9c:	mov	x0, x19
    cca0:	mov	x1, #0x0                   	// #0
    cca4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    cca8:	cbz	w0, cc78 <gcc_cp_fe_context@@Base+0x2f58>
    ccac:	mov	x0, x19
    ccb0:	mov	w1, #0x1                   	// #1
    ccb4:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    ccb8:	cbz	w0, cc78 <gcc_cp_fe_context@@Base+0x2f58>
    ccbc:	mov	x1, x21
    ccc0:	mov	x0, x19
    ccc4:	ldp	x19, x20, [sp, #16]
    ccc8:	ldr	x21, [sp, #32]
    cccc:	ldp	x29, x30, [sp], #48
    ccd0:	b	9240 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x508>
    ccd4:	nop
    ccd8:	stp	x29, x30, [sp, #-32]!
    ccdc:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    cce0:	mov	x29, sp
    cce4:	ldr	x1, [x1, #3848]
    cce8:	add	x2, sp, #0x1c
    ccec:	ldr	x0, [x0, #16]
    ccf0:	ldr	x1, [x1]
    ccf4:	bl	cc50 <gcc_cp_fe_context@@Base+0x2f30>
    ccf8:	cmp	w0, #0x0
    ccfc:	ldr	w1, [sp, #28]
    cd00:	ldp	x29, x30, [sp], #32
    cd04:	csel	w0, w1, wzr, ne  // ne = any
    cd08:	ret
    cd0c:	nop
    cd10:	stp	x29, x30, [sp, #-32]!
    cd14:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    cd18:	mov	x29, sp
    cd1c:	ldr	x1, [x1, #3808]
    cd20:	add	x2, sp, #0x1c
    cd24:	ldr	x0, [x0, #16]
    cd28:	ldr	x1, [x1]
    cd2c:	bl	cc50 <gcc_cp_fe_context@@Base+0x2f30>
    cd30:	cmp	w0, #0x0
    cd34:	ldr	w1, [sp, #28]
    cd38:	ldp	x29, x30, [sp], #32
    cd3c:	csel	w0, w1, wzr, ne  // ne = any
    cd40:	ret
    cd44:	nop
    cd48:	stp	x29, x30, [sp, #-32]!
    cd4c:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    cd50:	mov	x29, sp
    cd54:	ldr	x1, [x1, #3608]
    cd58:	add	x2, sp, #0x1c
    cd5c:	ldr	x0, [x0, #16]
    cd60:	ldr	x1, [x1]
    cd64:	bl	cc50 <gcc_cp_fe_context@@Base+0x2f30>
    cd68:	cmp	w0, #0x0
    cd6c:	ldr	w1, [sp, #28]
    cd70:	ldp	x29, x30, [sp], #32
    cd74:	csel	w0, w1, wzr, ne  // ne = any
    cd78:	ret
    cd7c:	nop
    cd80:	stp	x29, x30, [sp, #-32]!
    cd84:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    cd88:	mov	x29, sp
    cd8c:	ldr	x1, [x1, #3536]
    cd90:	add	x2, sp, #0x18
    cd94:	ldr	x0, [x0, #16]
    cd98:	ldr	x1, [x1]
    cd9c:	bl	8700 <gcc_c_fe_context@@Base+0x20e8>
    cda0:	cmp	w0, #0x0
    cda4:	ldr	x1, [sp, #24]
    cda8:	ldp	x29, x30, [sp], #32
    cdac:	csel	x0, x1, xzr, ne  // ne = any
    cdb0:	ret
    cdb4:	nop
    cdb8:	stp	x29, x30, [sp, #-32]!
    cdbc:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    cdc0:	mov	x29, sp
    cdc4:	ldr	x1, [x1, #3328]
    cdc8:	add	x2, sp, #0x18
    cdcc:	ldr	x0, [x0, #16]
    cdd0:	ldr	x1, [x1]
    cdd4:	bl	8700 <gcc_c_fe_context@@Base+0x20e8>
    cdd8:	cmp	w0, #0x0
    cddc:	ldr	x1, [sp, #24]
    cde0:	ldp	x29, x30, [sp], #32
    cde4:	csel	x0, x1, xzr, ne  // ne = any
    cde8:	ret
    cdec:	nop
    cdf0:	stp	x29, x30, [sp, #-32]!
    cdf4:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    cdf8:	mov	x29, sp
    cdfc:	ldr	x1, [x1, #3976]
    ce00:	add	x2, sp, #0x18
    ce04:	ldr	x0, [x0, #16]
    ce08:	ldr	x1, [x1]
    ce0c:	bl	8700 <gcc_c_fe_context@@Base+0x20e8>
    ce10:	cmp	w0, #0x0
    ce14:	ldr	x1, [sp, #24]
    ce18:	ldp	x29, x30, [sp], #32
    ce1c:	csel	x0, x1, xzr, ne  // ne = any
    ce20:	ret
    ce24:	nop
    ce28:	stp	x29, x30, [sp, #-32]!
    ce2c:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    ce30:	mov	x29, sp
    ce34:	ldr	x1, [x1, #3248]
    ce38:	add	x2, sp, #0x18
    ce3c:	ldr	x0, [x0, #16]
    ce40:	ldr	x1, [x1]
    ce44:	bl	8700 <gcc_c_fe_context@@Base+0x20e8>
    ce48:	cmp	w0, #0x0
    ce4c:	ldr	x1, [sp, #24]
    ce50:	ldp	x29, x30, [sp], #32
    ce54:	csel	x0, x1, xzr, ne  // ne = any
    ce58:	ret
    ce5c:	nop
    ce60:	stp	x29, x30, [sp, #-32]!
    ce64:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    ce68:	mov	x29, sp
    ce6c:	ldr	x1, [x1, #4064]
    ce70:	add	x2, sp, #0x18
    ce74:	ldr	x0, [x0, #16]
    ce78:	ldr	x1, [x1]
    ce7c:	bl	8700 <gcc_c_fe_context@@Base+0x20e8>
    ce80:	cmp	w0, #0x0
    ce84:	ldr	x1, [sp, #24]
    ce88:	ldp	x29, x30, [sp], #32
    ce8c:	csel	x0, x1, xzr, ne  // ne = any
    ce90:	ret
    ce94:	nop
    ce98:	stp	x29, x30, [sp, #-32]!
    ce9c:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    cea0:	mov	x29, sp
    cea4:	ldr	x1, [x1, #4024]
    cea8:	add	x2, sp, #0x18
    ceac:	ldr	x0, [x0, #16]
    ceb0:	ldr	x1, [x1]
    ceb4:	bl	8700 <gcc_c_fe_context@@Base+0x20e8>
    ceb8:	cmp	w0, #0x0
    cebc:	ldr	x1, [sp, #24]
    cec0:	ldp	x29, x30, [sp], #32
    cec4:	csel	x0, x1, xzr, ne  // ne = any
    cec8:	ret
    cecc:	nop
    ced0:	stp	x29, x30, [sp, #-80]!
    ced4:	mov	x29, sp
    ced8:	stp	x19, x20, [sp, #16]
    cedc:	mov	x20, x1
    cee0:	mov	x19, x0
    cee4:	mov	w1, #0x51                  	// #81
    cee8:	stp	x21, x22, [sp, #32]
    ceec:	mov	x22, x2
    cef0:	mov	x21, x5
    cef4:	stp	x23, x24, [sp, #48]
    cef8:	mov	x24, x3
    cefc:	mov	x23, x4
    cf00:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    cf04:	cbnz	w0, cf20 <gcc_cp_fe_context@@Base+0x3200>
    cf08:	mov	w0, #0x0                   	// #0
    cf0c:	ldp	x19, x20, [sp, #16]
    cf10:	ldp	x21, x22, [sp, #32]
    cf14:	ldp	x23, x24, [sp, #48]
    cf18:	ldp	x29, x30, [sp], #80
    cf1c:	ret
    cf20:	mov	x1, x20
    cf24:	mov	x0, x19
    cf28:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    cf2c:	cbz	w0, cf08 <gcc_cp_fe_context@@Base+0x31e8>
    cf30:	mov	x0, x19
    cf34:	mov	x1, #0x3                   	// #3
    cf38:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    cf3c:	cbz	w0, cf08 <gcc_cp_fe_context@@Base+0x31e8>
    cf40:	mov	x1, x24
    cf44:	mov	x0, x19
    cf48:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    cf4c:	cbz	w0, cf08 <gcc_cp_fe_context@@Base+0x31e8>
    cf50:	mov	x1, x23
    cf54:	mov	x0, x19
    cf58:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    cf5c:	cbz	w0, cf08 <gcc_cp_fe_context@@Base+0x31e8>
    cf60:	mov	x1, x21
    cf64:	mov	x0, x19
    cf68:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    cf6c:	cbz	w0, cf08 <gcc_cp_fe_context@@Base+0x31e8>
    cf70:	mov	x0, x19
    cf74:	mov	w1, #0x1                   	// #1
    cf78:	bl	da00 <gcc_cp_fe_context@@Base+0x3ce0>
    cf7c:	cbz	w0, cf08 <gcc_cp_fe_context@@Base+0x31e8>
    cf80:	mov	x0, x19
    cf84:	add	x1, sp, #0x48
    cf88:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    cf8c:	cbz	w0, cf0c <gcc_cp_fe_context@@Base+0x31ec>
    cf90:	ldr	x1, [sp, #72]
    cf94:	mov	w0, #0x1                   	// #1
    cf98:	str	x1, [x22]
    cf9c:	b	cf0c <gcc_cp_fe_context@@Base+0x31ec>
    cfa0:	stp	x29, x30, [sp, #-32]!
    cfa4:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    cfa8:	mov	x6, x1
    cfac:	mov	x29, sp
    cfb0:	ldr	x1, [x5, #3320]
    cfb4:	mov	x4, x2
    cfb8:	ldr	x0, [x0, #16]
    cfbc:	mov	x5, x3
    cfc0:	ldr	x1, [x1]
    cfc4:	add	x2, sp, #0x18
    cfc8:	mov	x3, x6
    cfcc:	bl	ced0 <gcc_cp_fe_context@@Base+0x31b0>
    cfd0:	cmp	w0, #0x0
    cfd4:	ldr	x1, [sp, #24]
    cfd8:	ldp	x29, x30, [sp], #32
    cfdc:	csel	x0, x1, xzr, ne  // ne = any
    cfe0:	ret
    cfe4:	nop
    cfe8:	stp	x29, x30, [sp, #-32]!
    cfec:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    cff0:	mov	x6, x1
    cff4:	mov	x29, sp
    cff8:	ldr	x1, [x5, #3400]
    cffc:	mov	x4, x2
    d000:	ldr	x0, [x0, #16]
    d004:	mov	x5, x3
    d008:	ldr	x1, [x1]
    d00c:	add	x2, sp, #0x18
    d010:	mov	x3, x6
    d014:	bl	ced0 <gcc_cp_fe_context@@Base+0x31b0>
    d018:	cmp	w0, #0x0
    d01c:	ldr	x1, [sp, #24]
    d020:	ldp	x29, x30, [sp], #32
    d024:	csel	x0, x1, xzr, ne  // ne = any
    d028:	ret
    d02c:	nop
    d030:	stp	x29, x30, [sp, #-32]!
    d034:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    d038:	mov	x6, x1
    d03c:	mov	x29, sp
    d040:	ldr	x1, [x5, #3736]
    d044:	mov	x4, x2
    d048:	ldr	x0, [x0, #16]
    d04c:	mov	x5, x3
    d050:	ldr	x1, [x1]
    d054:	add	x2, sp, #0x18
    d058:	mov	x3, x6
    d05c:	bl	ced0 <gcc_cp_fe_context@@Base+0x31b0>
    d060:	cmp	w0, #0x0
    d064:	ldr	x1, [sp, #24]
    d068:	ldp	x29, x30, [sp], #32
    d06c:	csel	x0, x1, xzr, ne  // ne = any
    d070:	ret
    d074:	nop
    d078:	stp	x29, x30, [sp, #-32]!
    d07c:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    d080:	mov	x3, x1
    d084:	mov	x29, sp
    d088:	ldr	x4, [x4, #3984]
    d08c:	add	x2, sp, #0x18
    d090:	ldr	x0, [x0, #16]
    d094:	ldr	x1, [x4]
    d098:	bl	85c0 <gcc_c_fe_context@@Base+0x1fa8>
    d09c:	cmp	w0, #0x0
    d0a0:	ldr	x1, [sp, #24]
    d0a4:	ldp	x29, x30, [sp], #32
    d0a8:	csel	x0, x1, xzr, ne  // ne = any
    d0ac:	ret
    d0b0:	stp	x29, x30, [sp, #-32]!
    d0b4:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    d0b8:	mov	x3, x1
    d0bc:	mov	x29, sp
    d0c0:	ldr	x4, [x4, #3552]
    d0c4:	add	x2, sp, #0x18
    d0c8:	ldr	x0, [x0, #16]
    d0cc:	ldr	x1, [x4]
    d0d0:	bl	85c0 <gcc_c_fe_context@@Base+0x1fa8>
    d0d4:	cmp	w0, #0x0
    d0d8:	ldr	x1, [sp, #24]
    d0dc:	ldp	x29, x30, [sp], #32
    d0e0:	csel	x0, x1, xzr, ne  // ne = any
    d0e4:	ret
    d0e8:	stp	x29, x30, [sp, #-32]!
    d0ec:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    d0f0:	mov	x3, x1
    d0f4:	mov	x29, sp
    d0f8:	ldr	x4, [x4, #3704]
    d0fc:	add	x2, sp, #0x18
    d100:	ldr	x0, [x0, #16]
    d104:	ldr	x1, [x4]
    d108:	bl	85c0 <gcc_c_fe_context@@Base+0x1fa8>
    d10c:	cmp	w0, #0x0
    d110:	ldr	x1, [sp, #24]
    d114:	ldp	x29, x30, [sp], #32
    d118:	csel	x0, x1, xzr, ne  // ne = any
    d11c:	ret
    d120:	stp	x29, x30, [sp, #-32]!
    d124:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    d128:	mov	x3, x1
    d12c:	mov	x29, sp
    d130:	ldr	x4, [x4, #3912]
    d134:	add	x2, sp, #0x18
    d138:	ldr	x0, [x0, #16]
    d13c:	ldr	x1, [x4]
    d140:	bl	85c0 <gcc_c_fe_context@@Base+0x1fa8>
    d144:	cmp	w0, #0x0
    d148:	ldr	x1, [sp, #24]
    d14c:	ldp	x29, x30, [sp], #32
    d150:	csel	x0, x1, xzr, ne  // ne = any
    d154:	ret
    d158:	stp	x29, x30, [sp, #-32]!
    d15c:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    d160:	mov	x3, x1
    d164:	mov	x29, sp
    d168:	ldr	x4, [x4, #3688]
    d16c:	add	x2, sp, #0x18
    d170:	ldr	x0, [x0, #16]
    d174:	ldr	x1, [x4]
    d178:	bl	85c0 <gcc_c_fe_context@@Base+0x1fa8>
    d17c:	cmp	w0, #0x0
    d180:	ldr	x1, [sp, #24]
    d184:	ldp	x29, x30, [sp], #32
    d188:	csel	x0, x1, xzr, ne  // ne = any
    d18c:	ret
    d190:	stp	x29, x30, [sp, #-32]!
    d194:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    d198:	mov	x3, x1
    d19c:	mov	x29, sp
    d1a0:	ldr	x4, [x4, #3176]
    d1a4:	add	x2, sp, #0x18
    d1a8:	ldr	x0, [x0, #16]
    d1ac:	ldr	x1, [x4]
    d1b0:	bl	85c0 <gcc_c_fe_context@@Base+0x1fa8>
    d1b4:	cmp	w0, #0x0
    d1b8:	ldr	x1, [sp, #24]
    d1bc:	ldp	x29, x30, [sp], #32
    d1c0:	csel	x0, x1, xzr, ne  // ne = any
    d1c4:	ret
    d1c8:	stp	x29, x30, [sp, #-64]!
    d1cc:	mov	x29, sp
    d1d0:	stp	x19, x20, [sp, #16]
    d1d4:	mov	x20, x1
    d1d8:	mov	x19, x0
    d1dc:	mov	w1, #0x51                  	// #81
    d1e0:	stp	x21, x22, [sp, #32]
    d1e4:	mov	x21, x3
    d1e8:	mov	x22, x4
    d1ec:	str	x23, [sp, #48]
    d1f0:	mov	x23, x2
    d1f4:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    d1f8:	cbnz	w0, d214 <gcc_cp_fe_context@@Base+0x34f4>
    d1fc:	mov	w0, #0x0                   	// #0
    d200:	ldp	x19, x20, [sp, #16]
    d204:	ldp	x21, x22, [sp, #32]
    d208:	ldr	x23, [sp, #48]
    d20c:	ldp	x29, x30, [sp], #64
    d210:	ret
    d214:	mov	x1, x20
    d218:	mov	x0, x19
    d21c:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    d220:	cbz	w0, d1fc <gcc_cp_fe_context@@Base+0x34dc>
    d224:	mov	x0, x19
    d228:	mov	x1, #0x2                   	// #2
    d22c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    d230:	cbz	w0, d1fc <gcc_cp_fe_context@@Base+0x34dc>
    d234:	mov	x1, x21
    d238:	mov	x0, x19
    d23c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    d240:	cbz	w0, d1fc <gcc_cp_fe_context@@Base+0x34dc>
    d244:	mov	x1, x22
    d248:	mov	x0, x19
    d24c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    d250:	cbz	w0, d1fc <gcc_cp_fe_context@@Base+0x34dc>
    d254:	mov	x1, x23
    d258:	mov	x0, x19
    d25c:	ldp	x19, x20, [sp, #16]
    d260:	ldp	x21, x22, [sp, #32]
    d264:	ldr	x23, [sp, #48]
    d268:	ldp	x29, x30, [sp], #64
    d26c:	b	9308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5d0>
    d270:	stp	x29, x30, [sp, #-32]!
    d274:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    d278:	mov	x3, x1
    d27c:	mov	x29, sp
    d280:	ldr	x5, [x5, #3560]
    d284:	mov	x4, x2
    d288:	ldr	x0, [x0, #16]
    d28c:	add	x2, sp, #0x18
    d290:	ldr	x1, [x5]
    d294:	bl	d1c8 <gcc_cp_fe_context@@Base+0x34a8>
    d298:	cmp	w0, #0x0
    d29c:	ldr	x1, [sp, #24]
    d2a0:	ldp	x29, x30, [sp], #32
    d2a4:	csel	x0, x1, xzr, ne  // ne = any
    d2a8:	ret
    d2ac:	nop
    d2b0:	stp	x29, x30, [sp, #-32]!
    d2b4:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    d2b8:	mov	x3, x1
    d2bc:	mov	x29, sp
    d2c0:	ldr	x5, [x5, #4016]
    d2c4:	mov	x4, x2
    d2c8:	ldr	x0, [x0, #16]
    d2cc:	add	x2, sp, #0x18
    d2d0:	ldr	x1, [x5]
    d2d4:	bl	d1c8 <gcc_cp_fe_context@@Base+0x34a8>
    d2d8:	cmp	w0, #0x0
    d2dc:	ldr	x1, [sp, #24]
    d2e0:	ldp	x29, x30, [sp], #32
    d2e4:	csel	x0, x1, xzr, ne  // ne = any
    d2e8:	ret
    d2ec:	nop
    d2f0:	stp	x29, x30, [sp, #-80]!
    d2f4:	mov	x29, sp
    d2f8:	stp	x19, x20, [sp, #16]
    d2fc:	mov	x20, x1
    d300:	mov	x19, x0
    d304:	mov	w1, #0x51                  	// #81
    d308:	stp	x21, x22, [sp, #32]
    d30c:	mov	x21, x3
    d310:	mov	w22, w4
    d314:	stp	x23, x24, [sp, #48]
    d318:	mov	x23, x2
    d31c:	mov	x24, x5
    d320:	stp	x25, x26, [sp, #64]
    d324:	mov	x25, x6
    d328:	mov	w26, w7
    d32c:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    d330:	cbnz	w0, d350 <gcc_cp_fe_context@@Base+0x3630>
    d334:	mov	w0, #0x0                   	// #0
    d338:	ldp	x19, x20, [sp, #16]
    d33c:	ldp	x21, x22, [sp, #32]
    d340:	ldp	x23, x24, [sp, #48]
    d344:	ldp	x25, x26, [sp, #64]
    d348:	ldp	x29, x30, [sp], #80
    d34c:	ret
    d350:	mov	x1, x20
    d354:	mov	x0, x19
    d358:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    d35c:	cbz	w0, d334 <gcc_cp_fe_context@@Base+0x3614>
    d360:	mov	x0, x19
    d364:	mov	x1, #0x5                   	// #5
    d368:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    d36c:	cbz	w0, d334 <gcc_cp_fe_context@@Base+0x3614>
    d370:	mov	x1, x21
    d374:	mov	x0, x19
    d378:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    d37c:	cbz	w0, d334 <gcc_cp_fe_context@@Base+0x3614>
    d380:	sxtw	x1, w22
    d384:	mov	x0, x19
    d388:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    d38c:	cbz	w0, d334 <gcc_cp_fe_context@@Base+0x3614>
    d390:	mov	w4, w26
    d394:	mov	x3, x25
    d398:	mov	x2, x24
    d39c:	mov	x1, x23
    d3a0:	mov	x0, x19
    d3a4:	ldp	x19, x20, [sp, #16]
    d3a8:	ldp	x21, x22, [sp, #32]
    d3ac:	ldp	x23, x24, [sp, #48]
    d3b0:	ldp	x25, x26, [sp, #64]
    d3b4:	ldp	x29, x30, [sp], #80
    d3b8:	b	9470 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x738>
    d3bc:	nop
    d3c0:	stp	x29, x30, [sp, #-32]!
    d3c4:	adrp	x6, 2a000 <xexit@@Base+0x14e10>
    d3c8:	mov	x7, x1
    d3cc:	mov	x29, sp
    d3d0:	ldr	x1, [x6, #3464]
    d3d4:	mov	x8, x3
    d3d8:	ldr	x0, [x0, #16]
    d3dc:	mov	x3, x7
    d3e0:	ldr	x1, [x1]
    d3e4:	mov	x6, x4
    d3e8:	mov	w7, w5
    d3ec:	mov	w4, w2
    d3f0:	mov	x5, x8
    d3f4:	add	x2, sp, #0x18
    d3f8:	bl	d2f0 <gcc_cp_fe_context@@Base+0x35d0>
    d3fc:	cmp	w0, #0x0
    d400:	ldr	x1, [sp, #24]
    d404:	ldp	x29, x30, [sp], #32
    d408:	csel	x0, x1, xzr, ne  // ne = any
    d40c:	ret
    d410:	stp	x29, x30, [sp, #-32]!
    d414:	adrp	x6, 2a000 <xexit@@Base+0x14e10>
    d418:	mov	x7, x1
    d41c:	mov	x29, sp
    d420:	ldr	x1, [x6, #3616]
    d424:	mov	x8, x3
    d428:	ldr	x0, [x0, #16]
    d42c:	mov	x3, x7
    d430:	ldr	x1, [x1]
    d434:	mov	x6, x4
    d438:	mov	w7, w5
    d43c:	mov	w4, w2
    d440:	mov	x5, x8
    d444:	add	x2, sp, #0x18
    d448:	bl	d2f0 <gcc_cp_fe_context@@Base+0x35d0>
    d44c:	cmp	w0, #0x0
    d450:	ldr	x1, [sp, #24]
    d454:	ldp	x29, x30, [sp], #32
    d458:	csel	x0, x1, xzr, ne  // ne = any
    d45c:	ret
    d460:	stp	x29, x30, [sp, #-64]!
    d464:	mov	x29, sp
    d468:	stp	x19, x20, [sp, #16]
    d46c:	mov	x20, x1
    d470:	mov	x19, x0
    d474:	mov	w1, #0x51                  	// #81
    d478:	stp	x21, x22, [sp, #32]
    d47c:	mov	x21, x3
    d480:	mov	x22, x4
    d484:	str	x23, [sp, #48]
    d488:	mov	x23, x2
    d48c:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    d490:	cbnz	w0, d4ac <gcc_cp_fe_context@@Base+0x378c>
    d494:	mov	w0, #0x0                   	// #0
    d498:	ldp	x19, x20, [sp, #16]
    d49c:	ldp	x21, x22, [sp, #32]
    d4a0:	ldr	x23, [sp, #48]
    d4a4:	ldp	x29, x30, [sp], #64
    d4a8:	ret
    d4ac:	mov	x1, x20
    d4b0:	mov	x0, x19
    d4b4:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    d4b8:	cbz	w0, d494 <gcc_cp_fe_context@@Base+0x3774>
    d4bc:	mov	x0, x19
    d4c0:	mov	x1, #0x2                   	// #2
    d4c4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    d4c8:	cbz	w0, d494 <gcc_cp_fe_context@@Base+0x3774>
    d4cc:	mov	x1, x21
    d4d0:	mov	x0, x19
    d4d4:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    d4d8:	cbz	w0, d494 <gcc_cp_fe_context@@Base+0x3774>
    d4dc:	mov	x1, x22
    d4e0:	mov	x0, x19
    d4e4:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    d4e8:	cbz	w0, d494 <gcc_cp_fe_context@@Base+0x3774>
    d4ec:	mov	x1, x23
    d4f0:	mov	x0, x19
    d4f4:	ldp	x19, x20, [sp, #16]
    d4f8:	ldp	x21, x22, [sp, #32]
    d4fc:	ldr	x23, [sp, #48]
    d500:	ldp	x29, x30, [sp], #64
    d504:	b	9308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5d0>
    d508:	stp	x29, x30, [sp, #-32]!
    d50c:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    d510:	mov	x3, x1
    d514:	mov	x29, sp
    d518:	ldr	x5, [x5, #3896]
    d51c:	mov	x4, x2
    d520:	ldr	x0, [x0, #16]
    d524:	add	x2, sp, #0x18
    d528:	ldr	x1, [x5]
    d52c:	bl	d460 <gcc_cp_fe_context@@Base+0x3740>
    d530:	cmp	w0, #0x0
    d534:	ldr	x1, [sp, #24]
    d538:	ldp	x29, x30, [sp], #32
    d53c:	csel	x0, x1, xzr, ne  // ne = any
    d540:	ret
    d544:	nop
    d548:	stp	x29, x30, [sp, #-32]!
    d54c:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    d550:	mov	x3, x1
    d554:	mov	x29, sp
    d558:	ldr	x5, [x5, #3656]
    d55c:	mov	x4, x2
    d560:	ldr	x0, [x0, #16]
    d564:	add	x2, sp, #0x18
    d568:	ldr	x1, [x5]
    d56c:	bl	d460 <gcc_cp_fe_context@@Base+0x3740>
    d570:	cmp	w0, #0x0
    d574:	ldr	x1, [sp, #24]
    d578:	ldp	x29, x30, [sp], #32
    d57c:	csel	x0, x1, xzr, ne  // ne = any
    d580:	ret
    d584:	nop
    d588:	stp	x29, x30, [sp, #-32]!
    d58c:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    d590:	mov	x3, x1
    d594:	mov	x29, sp
    d598:	ldr	x5, [x5, #3712]
    d59c:	mov	w4, w2
    d5a0:	ldr	x0, [x0, #16]
    d5a4:	add	x2, sp, #0x18
    d5a8:	ldr	x1, [x5]
    d5ac:	bl	88a0 <gcc_c_fe_context@@Base+0x2288>
    d5b0:	cmp	w0, #0x0
    d5b4:	ldr	x1, [sp, #24]
    d5b8:	ldp	x29, x30, [sp], #32
    d5bc:	csel	x0, x1, xzr, ne  // ne = any
    d5c0:	ret
    d5c4:	nop
    d5c8:	stp	x29, x30, [sp, #-32]!
    d5cc:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    d5d0:	mov	x3, x1
    d5d4:	mov	x29, sp
    d5d8:	ldr	x5, [x5, #3504]
    d5dc:	mov	w4, w2
    d5e0:	ldr	x0, [x0, #16]
    d5e4:	add	x2, sp, #0x18
    d5e8:	ldr	x1, [x5]
    d5ec:	bl	88a0 <gcc_c_fe_context@@Base+0x2288>
    d5f0:	cmp	w0, #0x0
    d5f4:	ldr	x1, [sp, #24]
    d5f8:	ldp	x29, x30, [sp], #32
    d5fc:	csel	x0, x1, xzr, ne  // ne = any
    d600:	ret
    d604:	nop
    d608:	stp	x29, x30, [sp, #-32]!
    d60c:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    d610:	mov	x3, x1
    d614:	mov	x29, sp
    d618:	ldr	x5, [x5, #3792]
    d61c:	mov	w4, w2
    d620:	ldr	x0, [x0, #16]
    d624:	add	x2, sp, #0x18
    d628:	ldr	x1, [x5]
    d62c:	bl	88a0 <gcc_c_fe_context@@Base+0x2288>
    d630:	cmp	w0, #0x0
    d634:	ldr	x1, [sp, #24]
    d638:	ldp	x29, x30, [sp], #32
    d63c:	csel	x0, x1, xzr, ne  // ne = any
    d640:	ret
    d644:	nop
    d648:	stp	x29, x30, [sp, #-32]!
    d64c:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    d650:	mov	x3, x1
    d654:	mov	x29, sp
    d658:	ldr	x5, [x5, #3416]
    d65c:	mov	w4, w2
    d660:	ldr	x0, [x0, #16]
    d664:	add	x2, sp, #0x18
    d668:	ldr	x1, [x5]
    d66c:	bl	88a0 <gcc_c_fe_context@@Base+0x2288>
    d670:	cmp	w0, #0x0
    d674:	ldr	x1, [sp, #24]
    d678:	ldp	x29, x30, [sp], #32
    d67c:	csel	x0, x1, xzr, ne  // ne = any
    d680:	ret
    d684:	nop
    d688:	stp	x29, x30, [sp, #-64]!
    d68c:	mov	x29, sp
    d690:	stp	x19, x20, [sp, #16]
    d694:	mov	x20, x1
    d698:	mov	x19, x0
    d69c:	mov	w1, #0x51                  	// #81
    d6a0:	stp	x21, x22, [sp, #32]
    d6a4:	mov	x21, x3
    d6a8:	mov	x22, x4
    d6ac:	str	x23, [sp, #48]
    d6b0:	mov	x23, x2
    d6b4:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    d6b8:	cbnz	w0, d6d4 <gcc_cp_fe_context@@Base+0x39b4>
    d6bc:	mov	w0, #0x0                   	// #0
    d6c0:	ldp	x19, x20, [sp, #16]
    d6c4:	ldp	x21, x22, [sp, #32]
    d6c8:	ldr	x23, [sp, #48]
    d6cc:	ldp	x29, x30, [sp], #64
    d6d0:	ret
    d6d4:	mov	x1, x20
    d6d8:	mov	x0, x19
    d6dc:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    d6e0:	cbz	w0, d6bc <gcc_cp_fe_context@@Base+0x399c>
    d6e4:	mov	x0, x19
    d6e8:	mov	x1, #0x2                   	// #2
    d6ec:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    d6f0:	cbz	w0, d6bc <gcc_cp_fe_context@@Base+0x399c>
    d6f4:	mov	x1, x21
    d6f8:	mov	x0, x19
    d6fc:	bl	dd20 <gcc_cp_fe_context@@Base+0x4000>
    d700:	cbz	w0, d6bc <gcc_cp_fe_context@@Base+0x399c>
    d704:	mov	x1, x22
    d708:	mov	x0, x19
    d70c:	bl	dc60 <gcc_cp_fe_context@@Base+0x3f40>
    d710:	cbz	w0, d6bc <gcc_cp_fe_context@@Base+0x399c>
    d714:	mov	x1, x23
    d718:	mov	x0, x19
    d71c:	ldp	x19, x20, [sp, #16]
    d720:	ldp	x21, x22, [sp, #32]
    d724:	ldr	x23, [sp, #48]
    d728:	ldp	x29, x30, [sp], #64
    d72c:	b	9308 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5d0>
    d730:	stp	x29, x30, [sp, #-32]!
    d734:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    d738:	mov	x3, x1
    d73c:	mov	x29, sp
    d740:	ldr	x5, [x5, #3472]
    d744:	mov	x4, x2
    d748:	ldr	x0, [x0, #16]
    d74c:	add	x2, sp, #0x18
    d750:	ldr	x1, [x5]
    d754:	bl	d688 <gcc_cp_fe_context@@Base+0x3968>
    d758:	cmp	w0, #0x0
    d75c:	ldr	x1, [sp, #24]
    d760:	ldp	x29, x30, [sp], #32
    d764:	csel	x0, x1, xzr, ne  // ne = any
    d768:	ret
    d76c:	nop
    d770:	stp	x29, x30, [sp, #-32]!
    d774:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    d778:	mov	x3, x1
    d77c:	mov	x29, sp
    d780:	ldr	x5, [x5, #3776]
    d784:	mov	x4, x2
    d788:	ldr	x0, [x0, #16]
    d78c:	add	x2, sp, #0x18
    d790:	ldr	x1, [x5]
    d794:	bl	d688 <gcc_cp_fe_context@@Base+0x3968>
    d798:	cmp	w0, #0x0
    d79c:	ldr	x1, [sp, #24]
    d7a0:	ldp	x29, x30, [sp], #32
    d7a4:	csel	x0, x1, xzr, ne  // ne = any
    d7a8:	ret
    d7ac:	nop
    d7b0:	stp	x29, x30, [sp, #-16]!
    d7b4:	mov	x29, sp
    d7b8:	ldr	x0, [x0]
    d7bc:	ldr	x1, [x1]
    d7c0:	bl	56c0 <strcmp@plt>
    d7c4:	cmp	w0, #0x0
    d7c8:	cset	w0, eq  // eq = none
    d7cc:	ldp	x29, x30, [sp], #16
    d7d0:	ret
    d7d4:	nop
    d7d8:	ldr	x0, [x0]
    d7dc:	b	5530 <htab_hash_string@plt>
    d7e0:	stp	x29, x30, [sp, #-32]!
    d7e4:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
    d7e8:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
    d7ec:	mov	x29, sp
    d7f0:	ldr	x5, [x5, #3376]
    d7f4:	str	x19, [sp, #16]
    d7f8:	ldr	x4, [x4, #3872]
    d7fc:	mov	x19, x0
    d800:	mov	x3, x5
    d804:	adrp	x2, d000 <gcc_cp_fe_context@@Base+0x32e0>
    d808:	adrp	x1, d000 <gcc_cp_fe_context@@Base+0x32e0>
    d80c:	add	x2, x2, #0x7b0
    d810:	add	x1, x1, #0x7d8
    d814:	mov	x0, #0xa                   	// #10
    d818:	bl	53d0 <htab_create_alloc@plt>
    d81c:	str	x0, [x19]
    d820:	ldr	x19, [sp, #16]
    d824:	ldp	x29, x30, [sp], #32
    d828:	ret
    d82c:	nop
    d830:	stp	x29, x30, [sp, #-16]!
    d834:	mov	x29, sp
    d838:	ldr	x0, [x0]
    d83c:	bl	57d0 <htab_delete@plt>
    d840:	ldp	x29, x30, [sp], #16
    d844:	ret
    d848:	stp	x29, x30, [sp, #-48]!
    d84c:	mov	x4, x1
    d850:	mov	x3, x2
    d854:	mov	x29, sp
    d858:	ldr	x0, [x0]
    d85c:	add	x1, sp, #0x20
    d860:	mov	w2, #0x1                   	// #1
    d864:	str	x19, [sp, #16]
    d868:	stp	x4, x3, [sp, #32]
    d86c:	bl	5600 <htab_find_slot@plt>
    d870:	mov	x19, x0
    d874:	mov	x0, #0x10                  	// #16
    d878:	bl	5670 <xmalloc@plt>
    d87c:	ldp	x2, x3, [sp, #32]
    d880:	str	x0, [x19]
    d884:	stp	x2, x3, [x0]
    d888:	ldr	x19, [sp, #16]
    d88c:	ldp	x29, x30, [sp], #48
    d890:	ret
    d894:	nop
    d898:	stp	x29, x30, [sp, #-32]!
    d89c:	mov	x2, x1
    d8a0:	mov	x29, sp
    d8a4:	ldr	x0, [x0]
    d8a8:	add	x1, sp, #0x10
    d8ac:	str	x2, [sp, #16]
    d8b0:	bl	54e0 <htab_find@plt>
    d8b4:	cbz	x0, d8c4 <gcc_cp_fe_context@@Base+0x3ba4>
    d8b8:	ldr	x0, [x0, #8]
    d8bc:	ldp	x29, x30, [sp], #32
    d8c0:	ret
    d8c4:	mov	x0, #0x0                   	// #0
    d8c8:	b	d8bc <gcc_cp_fe_context@@Base+0x3b9c>
    d8cc:	nop
    d8d0:	ret
    d8d4:	nop
    d8d8:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    d8dc:	add	x1, x1, #0x8e8
    d8e0:	str	x1, [x0], #16
    d8e4:	b	d830 <gcc_cp_fe_context@@Base+0x3b10>
    d8e8:	stp	x29, x30, [sp, #-32]!
    d8ec:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    d8f0:	add	x1, x1, #0x8e8
    d8f4:	mov	x29, sp
    d8f8:	str	x19, [sp, #16]
    d8fc:	mov	x19, x0
    d900:	str	x1, [x0], #16
    d904:	bl	d830 <gcc_cp_fe_context@@Base+0x3b10>
    d908:	mov	x0, x19
    d90c:	mov	x1, #0x18                  	// #24
    d910:	ldr	x19, [sp, #16]
    d914:	ldp	x29, x30, [sp], #32
    d918:	b	5560 <_ZdlPvm@plt>
    d91c:	nop
    d920:	stp	x29, x30, [sp, #-32]!
    d924:	mov	x2, #0x1                   	// #1
    d928:	mov	x29, sp
    d92c:	ldr	w0, [x0, #8]
    d930:	strb	w1, [sp, #31]
    d934:	add	x1, sp, #0x1f
    d938:	bl	56f0 <write@plt>
    d93c:	cmp	x0, #0x1
    d940:	cset	w0, eq  // eq = none
    d944:	ldp	x29, x30, [sp], #32
    d948:	ret
    d94c:	nop
    d950:	stp	x29, x30, [sp, #-32]!
    d954:	mov	x29, sp
    d958:	ldr	w0, [x0, #8]
    d95c:	str	x19, [sp, #16]
    d960:	sxtw	x19, w2
    d964:	mov	x2, x19
    d968:	bl	56f0 <write@plt>
    d96c:	cmp	x19, x0
    d970:	cset	w0, eq  // eq = none
    d974:	ldr	x19, [sp, #16]
    d978:	ldp	x29, x30, [sp], #32
    d97c:	ret
    d980:	stp	x29, x30, [sp, #-48]!
    d984:	mov	x2, #0x1                   	// #1
    d988:	mov	x29, sp
    d98c:	ldr	w0, [x0, #8]
    d990:	str	x19, [sp, #16]
    d994:	and	w19, w1, #0xff
    d998:	add	x1, sp, #0x2f
    d99c:	bl	54c0 <read@plt>
    d9a0:	cmp	x0, #0x1
    d9a4:	b.ne	d9c0 <gcc_cp_fe_context@@Base+0x3ca0>  // b.any
    d9a8:	ldrb	w0, [sp, #47]
    d9ac:	cmp	w0, w19
    d9b0:	cset	w0, eq  // eq = none
    d9b4:	ldr	x19, [sp, #16]
    d9b8:	ldp	x29, x30, [sp], #48
    d9bc:	ret
    d9c0:	mov	w0, #0x0                   	// #0
    d9c4:	ldr	x19, [sp, #16]
    d9c8:	ldp	x29, x30, [sp], #48
    d9cc:	ret
    d9d0:	stp	x29, x30, [sp, #-32]!
    d9d4:	mov	x29, sp
    d9d8:	ldr	w0, [x0, #8]
    d9dc:	str	x19, [sp, #16]
    d9e0:	sxtw	x19, w2
    d9e4:	mov	x2, x19
    d9e8:	bl	54c0 <read@plt>
    d9ec:	cmp	x19, x0
    d9f0:	cset	w0, eq  // eq = none
    d9f4:	ldr	x19, [sp, #16]
    d9f8:	ldp	x29, x30, [sp], #32
    d9fc:	ret
    da00:	sub	sp, sp, #0x4e0
    da04:	stp	x29, x30, [sp]
    da08:	mov	x29, sp
    da0c:	stp	x19, x20, [sp, #16]
    da10:	mov	x19, x0
    da14:	ldr	w0, [x0, #8]
    da18:	str	x25, [sp, #64]
    da1c:	add	x25, sp, #0x60
    da20:	and	w20, w1, #0xff
    da24:	add	w3, w0, #0x3f
    da28:	and	w5, w0, #0x3f
    da2c:	stp	x21, x22, [sp, #32]
    da30:	adrp	x21, d000 <gcc_cp_fe_context@@Base+0x32e0>
    da34:	add	x22, sp, #0xe0
    da38:	add	x21, x21, #0x8d0
    da3c:	stp	x23, x24, [sp, #48]
    da40:	add	x23, sp, #0x5f
    da44:	add	x24, x25, #0x80
    da48:	mov	x1, x25
    da4c:	nop
    da50:	str	xzr, [x1], #8
    da54:	cmp	x24, x1
    da58:	b.ne	da50 <gcc_cp_fe_context@@Base+0x3d30>  // b.any
    da5c:	cmp	w0, #0x0
    da60:	mov	x4, #0x1                   	// #1
    da64:	csel	w3, w3, w0, lt  // lt = tstop
    da68:	negs	w1, w0
    da6c:	and	w1, w1, #0x3f
    da70:	ldr	w2, [x19, #12]
    da74:	asr	w3, w3, #6
    da78:	csneg	w1, w5, w1, mi  // mi = first
    da7c:	cmn	w2, #0x1
    da80:	sxtw	x0, w3
    da84:	lsl	x1, x4, x1
    da88:	ldr	x3, [x25, x0, lsl #3]
    da8c:	orr	x1, x1, x3
    da90:	str	x1, [x25, x0, lsl #3]
    da94:	b.eq	dacc <gcc_cp_fe_context@@Base+0x3dac>  // b.none
    da98:	cmp	w2, #0x0
    da9c:	add	w0, w2, #0x3f
    daa0:	csel	w0, w0, w2, lt  // lt = tstop
    daa4:	negs	w1, w2
    daa8:	and	w1, w1, #0x3f
    daac:	and	w2, w2, #0x3f
    dab0:	asr	w0, w0, #6
    dab4:	csneg	w2, w2, w1, mi  // mi = first
    dab8:	sxtw	x0, w0
    dabc:	lsl	x4, x4, x2
    dac0:	ldr	x1, [x25, x0, lsl #3]
    dac4:	orr	x4, x4, x1
    dac8:	str	x4, [x25, x0, lsl #3]
    dacc:	mov	x1, x25
    dad0:	mov	x4, #0x0                   	// #0
    dad4:	mov	x3, #0x0                   	// #0
    dad8:	mov	x2, #0x0                   	// #0
    dadc:	mov	w0, #0x400                 	// #1024
    dae0:	bl	52c0 <select@plt>
    dae4:	cmn	w0, #0x1
    dae8:	b.eq	dba8 <gcc_cp_fe_context@@Base+0x3e88>  // b.none
    daec:	ldr	w0, [x19, #12]
    daf0:	cmn	w0, #0x1
    daf4:	b.eq	db2c <gcc_cp_fe_context@@Base+0x3e0c>  // b.none
    daf8:	cmp	w0, #0x0
    dafc:	add	w1, w0, #0x3f
    db00:	csel	w1, w1, w0, lt  // lt = tstop
    db04:	negs	w2, w0
    db08:	and	w3, w2, #0x3f
    db0c:	and	w2, w0, #0x3f
    db10:	asr	w1, w1, #6
    db14:	csneg	w2, w2, w3, mi  // mi = first
    db18:	mov	x3, #0x1                   	// #1
    db1c:	lsl	x2, x3, x2
    db20:	ldr	x1, [x25, w1, sxtw #3]
    db24:	tst	x2, x1
    db28:	b.ne	dc18 <gcc_cp_fe_context@@Base+0x3ef8>  // b.any
    db2c:	ldr	w0, [x19, #8]
    db30:	mov	x2, #0x1                   	// #1
    db34:	cmp	w0, #0x0
    db38:	add	w3, w0, #0x3f
    db3c:	csel	w1, w3, w0, lt  // lt = tstop
    db40:	negs	w4, w0
    db44:	and	w4, w4, #0x3f
    db48:	and	w5, w0, #0x3f
    db4c:	asr	w1, w1, #6
    db50:	csneg	w4, w5, w4, mi  // mi = first
    db54:	lsl	x4, x2, x4
    db58:	ldr	x1, [x25, w1, sxtw #3]
    db5c:	tst	x4, x1
    db60:	b.eq	da48 <gcc_cp_fe_context@@Base+0x3d28>  // b.none
    db64:	mov	x1, x23
    db68:	bl	54c0 <read@plt>
    db6c:	cbz	w0, dc54 <gcc_cp_fe_context@@Base+0x3f34>
    db70:	cmp	w0, #0x1
    db74:	b.ne	dbb8 <gcc_cp_fe_context@@Base+0x3e98>  // b.any
    db78:	ldrb	w0, [sp, #95]
    db7c:	cmp	w0, #0x51
    db80:	b.eq	dbd8 <gcc_cp_fe_context@@Base+0x3eb8>  // b.none
    db84:	cmp	w0, #0x52
    db88:	csel	w0, w20, wzr, eq  // eq = none
    db8c:	ldp	x29, x30, [sp]
    db90:	ldp	x19, x20, [sp, #16]
    db94:	ldp	x21, x22, [sp, #32]
    db98:	ldp	x23, x24, [sp, #48]
    db9c:	ldr	x25, [sp, #64]
    dba0:	add	sp, sp, #0x4e0
    dba4:	ret
    dba8:	bl	5620 <__errno_location@plt>
    dbac:	ldr	w0, [x0]
    dbb0:	cmp	w0, #0x4
    dbb4:	b.eq	dc08 <gcc_cp_fe_context@@Base+0x3ee8>  // b.none
    dbb8:	mov	w0, #0x0                   	// #0
    dbbc:	ldp	x29, x30, [sp]
    dbc0:	ldp	x19, x20, [sp, #16]
    dbc4:	ldp	x21, x22, [sp, #32]
    dbc8:	ldp	x23, x24, [sp, #48]
    dbcc:	ldr	x25, [sp, #64]
    dbd0:	add	sp, sp, #0x4e0
    dbd4:	ret
    dbd8:	mov	x1, x22
    dbdc:	mov	x0, x19
    dbe0:	bl	ddc0 <gcc_cp_fe_context@@Base+0x40a0>
    dbe4:	cbz	w0, dbb8 <gcc_cp_fe_context@@Base+0x3e98>
    dbe8:	ldr	x1, [sp, #224]
    dbec:	add	x0, x19, #0x10
    dbf0:	bl	d898 <gcc_cp_fe_context@@Base+0x3b78>
    dbf4:	mov	x1, x0
    dbf8:	cbz	x0, dbb8 <gcc_cp_fe_context@@Base+0x3e98>
    dbfc:	mov	x0, x19
    dc00:	blr	x1
    dc04:	cbz	w0, dbb8 <gcc_cp_fe_context@@Base+0x3e98>
    dc08:	ldr	w0, [x19, #8]
    dc0c:	add	w3, w0, #0x3f
    dc10:	and	w5, w0, #0x3f
    dc14:	b	da48 <gcc_cp_fe_context@@Base+0x3d28>
    dc18:	mov	x1, x22
    dc1c:	mov	x2, #0x3ff                 	// #1023
    dc20:	bl	54c0 <read@plt>
    dc24:	cmp	w0, #0x0
    dc28:	b.lt	dbb8 <gcc_cp_fe_context@@Base+0x3e98>  // b.tstop
    dc2c:	b.eq	db2c <gcc_cp_fe_context@@Base+0x3e0c>  // b.none
    dc30:	ldr	x1, [x19]
    dc34:	strb	wzr, [x22, w0, sxtw]
    dc38:	ldr	x2, [x1, #16]
    dc3c:	cmp	x2, x21
    dc40:	b.eq	db2c <gcc_cp_fe_context@@Base+0x3e0c>  // b.none
    dc44:	mov	x1, x22
    dc48:	mov	x0, x19
    dc4c:	blr	x2
    dc50:	b	db2c <gcc_cp_fe_context@@Base+0x3e0c>
    dc54:	eor	w0, w20, #0x1
    dc58:	b	db8c <gcc_cp_fe_context@@Base+0x3e6c>
    dc5c:	nop
    dc60:	stp	x29, x30, [sp, #-48]!
    dc64:	mov	x29, sp
    dc68:	str	x19, [sp, #16]
    dc6c:	mov	x19, x0
    dc70:	str	x1, [sp, #40]
    dc74:	mov	w1, #0x69                  	// #105
    dc78:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    dc7c:	cbz	w0, dc90 <gcc_cp_fe_context@@Base+0x3f70>
    dc80:	mov	x0, x19
    dc84:	add	x1, sp, #0x28
    dc88:	mov	w2, #0x8                   	// #8
    dc8c:	bl	d950 <gcc_cp_fe_context@@Base+0x3c30>
    dc90:	ldr	x19, [sp, #16]
    dc94:	ldp	x29, x30, [sp], #48
    dc98:	ret
    dc9c:	nop
    dca0:	stp	x29, x30, [sp, #-32]!
    dca4:	mov	x29, sp
    dca8:	stp	x19, x20, [sp, #16]
    dcac:	mov	x20, x1
    dcb0:	mov	x19, x0
    dcb4:	mov	w1, #0x69                  	// #105
    dcb8:	bl	d980 <gcc_cp_fe_context@@Base+0x3c60>
    dcbc:	cbnz	w0, dccc <gcc_cp_fe_context@@Base+0x3fac>
    dcc0:	ldp	x19, x20, [sp, #16]
    dcc4:	ldp	x29, x30, [sp], #32
    dcc8:	ret
    dccc:	mov	x1, x20
    dcd0:	mov	x0, x19
    dcd4:	ldp	x19, x20, [sp, #16]
    dcd8:	mov	w2, #0x8                   	// #8
    dcdc:	ldp	x29, x30, [sp], #32
    dce0:	b	d9d0 <gcc_cp_fe_context@@Base+0x3cb0>
    dce4:	nop
    dce8:	stp	x29, x30, [sp, #-48]!
    dcec:	mov	x29, sp
    dcf0:	str	x19, [sp, #16]
    dcf4:	mov	x19, x1
    dcf8:	add	x1, sp, #0x28
    dcfc:	bl	dca0 <gcc_cp_fe_context@@Base+0x3f80>
    dd00:	cbz	w0, dd10 <gcc_cp_fe_context@@Base+0x3ff0>
    dd04:	ldr	x0, [sp, #40]
    dd08:	cmp	x19, x0
    dd0c:	cset	w0, eq  // eq = none
    dd10:	ldr	x19, [sp, #16]
    dd14:	ldp	x29, x30, [sp], #48
    dd18:	ret
    dd1c:	nop
    dd20:	stp	x29, x30, [sp, #-48]!
    dd24:	mov	x29, sp
    dd28:	stp	x19, x20, [sp, #16]
    dd2c:	mov	x19, x1
    dd30:	mov	x20, x0
    dd34:	mov	w1, #0x73                  	// #115
    dd38:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    dd3c:	cbz	w0, dd84 <gcc_cp_fe_context@@Base+0x4064>
    dd40:	cbz	x19, dd94 <gcc_cp_fe_context@@Base+0x4074>
    dd44:	mov	x0, x19
    dd48:	bl	5360 <strlen@plt>
    dd4c:	mov	x3, x0
    dd50:	add	x1, sp, #0x28
    dd54:	mov	x0, x20
    dd58:	mov	w2, #0x8                   	// #8
    dd5c:	str	x3, [sp, #40]
    dd60:	bl	d950 <gcc_cp_fe_context@@Base+0x3c30>
    dd64:	cbz	w0, dd84 <gcc_cp_fe_context@@Base+0x4064>
    dd68:	ldr	w2, [sp, #40]
    dd6c:	mov	x1, x19
    dd70:	mov	x0, x20
    dd74:	bl	d950 <gcc_cp_fe_context@@Base+0x3c30>
    dd78:	ldp	x19, x20, [sp, #16]
    dd7c:	ldp	x29, x30, [sp], #48
    dd80:	ret
    dd84:	mov	w0, #0x0                   	// #0
    dd88:	ldp	x19, x20, [sp, #16]
    dd8c:	ldp	x29, x30, [sp], #48
    dd90:	ret
    dd94:	mov	x3, #0xffffffffffffffff    	// #-1
    dd98:	add	x1, sp, #0x28
    dd9c:	mov	x0, x20
    dda0:	mov	w2, #0x8                   	// #8
    dda4:	str	x3, [sp, #40]
    dda8:	bl	d950 <gcc_cp_fe_context@@Base+0x3c30>
    ddac:	cmp	w0, #0x0
    ddb0:	cset	w0, ne  // ne = any
    ddb4:	ldp	x19, x20, [sp, #16]
    ddb8:	ldp	x29, x30, [sp], #48
    ddbc:	ret
    ddc0:	stp	x29, x30, [sp, #-64]!
    ddc4:	mov	x29, sp
    ddc8:	stp	x19, x20, [sp, #16]
    ddcc:	mov	x20, x1
    ddd0:	mov	x19, x0
    ddd4:	mov	w1, #0x73                  	// #115
    ddd8:	bl	d980 <gcc_cp_fe_context@@Base+0x3c60>
    dddc:	cbnz	w0, ddf4 <gcc_cp_fe_context@@Base+0x40d4>
    dde0:	mov	w19, #0x0                   	// #0
    dde4:	mov	w0, w19
    dde8:	ldp	x19, x20, [sp, #16]
    ddec:	ldp	x29, x30, [sp], #64
    ddf0:	ret
    ddf4:	add	x1, sp, #0x38
    ddf8:	mov	x0, x19
    ddfc:	mov	w2, #0x8                   	// #8
    de00:	bl	d9d0 <gcc_cp_fe_context@@Base+0x3cb0>
    de04:	cbz	w0, dde0 <gcc_cp_fe_context@@Base+0x40c0>
    de08:	ldr	x0, [sp, #56]
    de0c:	cmn	x0, #0x1
    de10:	b.eq	de6c <gcc_cp_fe_context@@Base+0x414c>  // b.none
    de14:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
    de18:	add	x0, x0, #0x1
    de1c:	str	x21, [sp, #32]
    de20:	ldr	x1, [x1, #3256]
    de24:	bl	5770 <_ZnamRKSt9nothrow_t@plt>
    de28:	mov	x21, x0
    de2c:	cbz	x0, de94 <gcc_cp_fe_context@@Base+0x4174>
    de30:	ldr	w2, [sp, #56]
    de34:	mov	x0, x19
    de38:	mov	x1, x21
    de3c:	bl	d9d0 <gcc_cp_fe_context@@Base+0x3cb0>
    de40:	mov	w19, w0
    de44:	cbz	w0, de84 <gcc_cp_fe_context@@Base+0x4164>
    de48:	ldr	x0, [sp, #56]
    de4c:	str	x21, [x20]
    de50:	mov	w19, #0x1                   	// #1
    de54:	strb	wzr, [x21, x0]
    de58:	mov	w0, w19
    de5c:	ldp	x19, x20, [sp, #16]
    de60:	ldr	x21, [sp, #32]
    de64:	ldp	x29, x30, [sp], #64
    de68:	ret
    de6c:	str	xzr, [x20]
    de70:	mov	w19, #0x1                   	// #1
    de74:	mov	w0, w19
    de78:	ldp	x19, x20, [sp, #16]
    de7c:	ldp	x29, x30, [sp], #64
    de80:	ret
    de84:	mov	x0, x21
    de88:	bl	5610 <_ZdaPv@plt>
    de8c:	ldr	x21, [sp, #32]
    de90:	b	dde4 <gcc_cp_fe_context@@Base+0x40c4>
    de94:	ldr	x21, [sp, #32]
    de98:	b	dde0 <gcc_cp_fe_context@@Base+0x40c0>
    de9c:	nop
    dea0:	stp	x29, x30, [sp, #-48]!
    dea4:	mov	x29, sp
    dea8:	stp	x19, x20, [sp, #16]
    deac:	mov	x19, x2
    deb0:	mov	x20, x0
    deb4:	bl	d920 <gcc_cp_fe_context@@Base+0x3c00>
    deb8:	cbz	w0, ded8 <gcc_cp_fe_context@@Base+0x41b8>
    debc:	mov	x0, x20
    dec0:	add	x1, sp, #0x28
    dec4:	mov	w2, #0x8                   	// #8
    dec8:	str	x19, [sp, #40]
    decc:	bl	d950 <gcc_cp_fe_context@@Base+0x3c30>
    ded0:	cmp	w0, #0x0
    ded4:	cset	w0, ne  // ne = any
    ded8:	ldp	x19, x20, [sp, #16]
    dedc:	ldp	x29, x30, [sp], #48
    dee0:	ret
    dee4:	nop
    dee8:	mov	x3, x1
    deec:	mov	x1, x2
    def0:	mov	w2, w3
    def4:	b	d950 <gcc_cp_fe_context@@Base+0x3c30>
    def8:	stp	x29, x30, [sp, #-48]!
    defc:	mov	x29, sp
    df00:	stp	x19, x20, [sp, #16]
    df04:	mov	x20, x2
    df08:	mov	x19, x0
    df0c:	bl	d980 <gcc_cp_fe_context@@Base+0x3c60>
    df10:	cbnz	w0, df20 <gcc_cp_fe_context@@Base+0x4200>
    df14:	ldp	x19, x20, [sp, #16]
    df18:	ldp	x29, x30, [sp], #48
    df1c:	ret
    df20:	mov	x0, x19
    df24:	add	x1, sp, #0x28
    df28:	mov	w2, #0x8                   	// #8
    df2c:	bl	d9d0 <gcc_cp_fe_context@@Base+0x3cb0>
    df30:	cbz	w0, df14 <gcc_cp_fe_context@@Base+0x41f4>
    df34:	ldr	x1, [sp, #40]
    df38:	str	x1, [x20]
    df3c:	mov	w0, #0x1                   	// #1
    df40:	ldp	x19, x20, [sp, #16]
    df44:	ldp	x29, x30, [sp], #48
    df48:	ret
    df4c:	nop
    df50:	mov	x3, x1
    df54:	mov	x1, x2
    df58:	mov	w2, w3
    df5c:	b	d9d0 <gcc_cp_fe_context@@Base+0x3cb0>
    df60:	stp	x29, x30, [sp, #-48]!
    df64:	mov	x29, sp
    df68:	cbz	x1, dfbc <gcc_cp_fe_context@@Base+0x429c>
    df6c:	stp	x19, x20, [sp, #16]
    df70:	mov	x19, x1
    df74:	mov	x20, x0
    df78:	str	x21, [sp, #32]
    df7c:	mov	w1, #0x61                  	// #97
    df80:	ldrsw	x21, [x19]
    df84:	mov	x2, x21
    df88:	bl	dea0 <gcc_cp_fe_context@@Base+0x4180>
    df8c:	cbz	w0, dfac <gcc_cp_fe_context@@Base+0x428c>
    df90:	lsl	w2, w21, #3
    df94:	mov	x0, x20
    df98:	ldr	x1, [x19, #8]
    df9c:	ldp	x19, x20, [sp, #16]
    dfa0:	ldr	x21, [sp, #32]
    dfa4:	ldp	x29, x30, [sp], #48
    dfa8:	b	d950 <gcc_cp_fe_context@@Base+0x3c30>
    dfac:	ldp	x19, x20, [sp, #16]
    dfb0:	ldr	x21, [sp, #32]
    dfb4:	ldp	x29, x30, [sp], #48
    dfb8:	ret
    dfbc:	mov	x2, #0xffffffffffffffff    	// #-1
    dfc0:	mov	w1, #0x61                  	// #97
    dfc4:	bl	dea0 <gcc_cp_fe_context@@Base+0x4180>
    dfc8:	cmp	w0, #0x0
    dfcc:	cset	w0, ne  // ne = any
    dfd0:	ldp	x29, x30, [sp], #48
    dfd4:	ret
    dfd8:	stp	x29, x30, [sp, #-64]!
    dfdc:	mov	x29, sp
    dfe0:	add	x2, sp, #0x38
    dfe4:	stp	x19, x20, [sp, #16]
    dfe8:	mov	x19, x0
    dfec:	str	x21, [sp, #32]
    dff0:	mov	x21, x1
    dff4:	mov	w1, #0x61                  	// #97
    dff8:	bl	def8 <gcc_cp_fe_context@@Base+0x41d8>
    dffc:	cbz	w0, e08c <gcc_cp_fe_context@@Base+0x436c>
    e000:	ldr	x0, [sp, #56]
    e004:	cmn	x0, #0x1
    e008:	b.eq	e070 <gcc_cp_fe_context@@Base+0x4350>  // b.none
    e00c:	mov	x0, #0x10                  	// #16
    e010:	bl	5550 <_Znwm@plt>
    e014:	mov	x20, x0
    e018:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    e01c:	ldr	x0, [sp, #56]
    e020:	str	w0, [x20]
    e024:	cmp	x0, x1
    e028:	b.hi	e0c4 <gcc_cp_fe_context@@Base+0x43a4>  // b.pmore
    e02c:	lsl	x0, x0, #3
    e030:	bl	52a0 <_Znam@plt>
    e034:	ldr	x2, [sp, #56]
    e038:	mov	x1, x0
    e03c:	mov	x0, x19
    e040:	str	x1, [x20, #8]
    e044:	lsl	w2, w2, #3
    e048:	bl	d9d0 <gcc_cp_fe_context@@Base+0x3cb0>
    e04c:	mov	w19, w0
    e050:	cbz	w0, e0a4 <gcc_cp_fe_context@@Base+0x4384>
    e054:	mov	w19, #0x1                   	// #1
    e058:	str	x20, [x21]
    e05c:	mov	w0, w19
    e060:	ldp	x19, x20, [sp, #16]
    e064:	ldr	x21, [sp, #32]
    e068:	ldp	x29, x30, [sp], #64
    e06c:	ret
    e070:	str	xzr, [x21]
    e074:	mov	w19, #0x1                   	// #1
    e078:	mov	w0, w19
    e07c:	ldp	x19, x20, [sp, #16]
    e080:	ldr	x21, [sp, #32]
    e084:	ldp	x29, x30, [sp], #64
    e088:	ret
    e08c:	mov	w19, #0x0                   	// #0
    e090:	mov	w0, w19
    e094:	ldp	x19, x20, [sp, #16]
    e098:	ldr	x21, [sp, #32]
    e09c:	ldp	x29, x30, [sp], #64
    e0a0:	ret
    e0a4:	ldr	x0, [x20, #8]
    e0a8:	cbz	x0, e0b0 <gcc_cp_fe_context@@Base+0x4390>
    e0ac:	bl	5610 <_ZdaPv@plt>
    e0b0:	ldr	x0, [x21]
    e0b4:	cbz	x0, e08c <gcc_cp_fe_context@@Base+0x436c>
    e0b8:	mov	x1, #0x10                  	// #16
    e0bc:	bl	5560 <_ZdlPvm@plt>
    e0c0:	b	e05c <gcc_cp_fe_context@@Base+0x433c>
    e0c4:	bl	56a0 <__cxa_throw_bad_array_new_length@plt>
    e0c8:	ldr	x7, [x1]
    e0cc:	mov	w6, w0
    e0d0:	cmp	x7, x2
    e0d4:	b.eq	e178 <gcc_cp_fe_context@@Base+0x4458>  // b.none
    e0d8:	add	x0, x7, #0x1
    e0dc:	str	x0, [x1]
    e0e0:	tst	x4, #0x10000
    e0e4:	mov	w0, #0xb                   	// #11
    e0e8:	ldrb	w1, [x7]
    e0ec:	csel	w0, w0, wzr, ne  // ne = any
    e0f0:	cbz	x3, e16c <gcc_cp_fe_context@@Base+0x444c>
    e0f4:	and	x2, x6, #0xff
    e0f8:	and	x6, x1, #0xff
    e0fc:	ldrb	w2, [x3, x2]
    e100:	ldrb	w6, [x3, x6]
    e104:	cmp	w6, w2
    e108:	b.cc	e14c <gcc_cp_fe_context@@Base+0x442c>  // b.lo, b.ul, b.last
    e10c:	mov	w7, #0x1                   	// #1
    e110:	cbz	x3, e150 <gcc_cp_fe_context@@Base+0x4430>
    e114:	ldrb	w1, [x3, x2]
    e118:	and	w0, w1, #0x7
    e11c:	asr	w4, w1, #3
    e120:	ubfx	x1, x1, #3, #5
    e124:	lsl	w0, w7, w0
    e128:	add	x1, x5, x1
    e12c:	sxtb	w0, w0
    e130:	ldrsb	w4, [x5, w4, sxtw]
    e134:	orr	w0, w0, w4
    e138:	strb	w0, [x1]
    e13c:	add	x2, x2, #0x1
    e140:	cmp	w6, w2
    e144:	b.cs	e110 <gcc_cp_fe_context@@Base+0x43f0>  // b.hs, b.nlast
    e148:	mov	w0, #0x0                   	// #0
    e14c:	ret
    e150:	asr	w4, w2, #3
    e154:	and	w0, w2, #0x7
    e158:	lsl	w0, w7, w0
    e15c:	add	x1, x5, w4, sxtw
    e160:	sxtb	w0, w0
    e164:	ldrsb	w4, [x5, w4, sxtw]
    e168:	b	e134 <gcc_cp_fe_context@@Base+0x4414>
    e16c:	and	w2, w6, #0xff
    e170:	mov	w6, w1
    e174:	b	e104 <gcc_cp_fe_context@@Base+0x43e4>
    e178:	mov	w0, #0xb                   	// #11
    e17c:	ret
    e180:	stp	x29, x30, [sp, #-64]!
    e184:	mov	x29, sp
    e188:	ldr	x4, [x0]
    e18c:	stp	x19, x20, [sp, #16]
    e190:	mov	x19, x0
    e194:	add	x5, x4, #0x1
    e198:	str	x5, [sp, #56]
    e19c:	ldrb	w3, [x4]
    e1a0:	cmp	w3, #0xc
    e1a4:	b.hi	e200 <gcc_cp_fe_context@@Base+0x44e0>  // b.pmore
    e1a8:	cmp	w3, #0x8
    e1ac:	b.hi	e1d8 <gcc_cp_fe_context@@Base+0x44b8>  // b.pmore
    e1b0:	mov	x20, x2
    e1b4:	cmp	w3, #0x6
    e1b8:	b.eq	e25c <gcc_cp_fe_context@@Base+0x453c>  // b.none
    e1bc:	cmp	w3, #0x8
    e1c0:	b.ne	e22c <gcc_cp_fe_context@@Base+0x450c>  // b.any
    e1c4:	ldrb	w0, [x4, #1]
    e1c8:	lsl	x0, x0, #3
    e1cc:	ldrb	w0, [x2, x0]
    e1d0:	tst	x0, #0x3
    e1d4:	b.eq	e1f0 <gcc_cp_fe_context@@Base+0x44d0>  // b.none
    e1d8:	str	x5, [x19]
    e1dc:	mov	w0, #0x1                   	// #1
    e1e0:	ldp	x19, x20, [sp, #16]
    e1e4:	ldp	x29, x30, [sp], #64
    e1e8:	ret
    e1ec:	ldr	x21, [sp, #32]
    e1f0:	mov	w0, #0x0                   	// #0
    e1f4:	ldp	x19, x20, [sp, #16]
    e1f8:	ldp	x29, x30, [sp], #64
    e1fc:	ret
    e200:	cmp	w3, #0x15
    e204:	b.eq	e2a0 <gcc_cp_fe_context@@Base+0x4580>  // b.none
    e208:	b.ls	e238 <gcc_cp_fe_context@@Base+0x4518>  // b.plast
    e20c:	sub	w3, w3, #0x1a
    e210:	mov	w0, #0x0                   	// #0
    e214:	and	w3, w3, #0xff
    e218:	cmp	w3, #0x3
    e21c:	b.ls	e1d8 <gcc_cp_fe_context@@Base+0x44b8>  // b.plast
    e220:	ldp	x19, x20, [sp, #16]
    e224:	ldp	x29, x30, [sp], #64
    e228:	ret
    e22c:	cbz	w3, e1d8 <gcc_cp_fe_context@@Base+0x44b8>
    e230:	mov	w0, #0x0                   	// #0
    e234:	b	e1f4 <gcc_cp_fe_context@@Base+0x44d4>
    e238:	cmp	w3, #0xd
    e23c:	b.ne	e1f0 <gcc_cp_fe_context@@Base+0x44d0>  // b.any
    e240:	ldrsb	w5, [x4, #2]
    e244:	ldrb	w0, [x4, #1]
    e248:	adds	w5, w0, w5, lsl #8
    e24c:	b.mi	e1f0 <gcc_cp_fe_context@@Base+0x44d0>  // b.first
    e250:	add	x4, x4, #0x3
    e254:	add	x5, x4, w5, sxtw
    e258:	b	e1d8 <gcc_cp_fe_context@@Base+0x44b8>
    e25c:	str	x21, [sp, #32]
    e260:	add	x0, sp, #0x38
    e264:	ldrb	w21, [x4, #1]
    e268:	bl	e380 <gcc_cp_fe_context@@Base+0x4660>
    e26c:	and	w0, w0, #0xff
    e270:	ubfiz	x1, x21, #3, #8
    e274:	ldrb	w2, [x20, x1]
    e278:	and	w3, w2, #0x3
    e27c:	cmp	w3, #0x3
    e280:	b.eq	e294 <gcc_cp_fe_context@@Base+0x4574>  // b.none
    e284:	cbz	w0, e1ec <gcc_cp_fe_context@@Base+0x44cc>
    e288:	ldr	x21, [sp, #32]
    e28c:	ldr	x5, [sp, #56]
    e290:	b	e1d8 <gcc_cp_fe_context@@Base+0x44b8>
    e294:	bfxil	w2, w0, #0, #2
    e298:	strb	w2, [x20, x1]
    e29c:	b	e284 <gcc_cp_fe_context@@Base+0x4564>
    e2a0:	add	x1, x4, #0x3
    e2a4:	str	x1, [sp, #56]
    e2a8:	ldrsb	w0, [x4, #4]
    e2ac:	ldrb	w2, [x4, #3]
    e2b0:	add	w0, w2, w0, lsl #8
    e2b4:	cbnz	w0, e1f0 <gcc_cp_fe_context@@Base+0x44d0>
    e2b8:	str	x5, [sp, #56]
    e2bc:	ldrsb	w5, [x4, #2]
    e2c0:	ldrb	w4, [x4, #1]
    e2c4:	add	w4, w4, w5, lsl #8
    e2c8:	add	x5, x1, w4, sxtw
    e2cc:	b	e1d8 <gcc_cp_fe_context@@Base+0x44b8>
    e2d0:	stp	x29, x30, [sp, #-64]!
    e2d4:	cmp	x0, x1
    e2d8:	mov	x29, sp
    e2dc:	str	x0, [sp, #56]
    e2e0:	b.cs	e360 <gcc_cp_fe_context@@Base+0x4640>  // b.hs, b.nlast
    e2e4:	mov	x3, x0
    e2e8:	stp	x19, x20, [sp, #16]
    e2ec:	mov	x19, x1
    e2f0:	mov	x20, x2
    e2f4:	str	x21, [sp, #32]
    e2f8:	add	x21, sp, #0x38
    e2fc:	b	e320 <gcc_cp_fe_context@@Base+0x4600>
    e300:	str	x6, [sp, #56]
    e304:	ldrsb	w0, [x3, #2]
    e308:	ldrb	w3, [x3, #1]
    e30c:	add	w3, w3, w0, lsl #8
    e310:	add	x3, x5, w3, sxtw
    e314:	str	x3, [sp, #56]
    e318:	cmp	x3, x19
    e31c:	b.cs	e358 <gcc_cp_fe_context@@Base+0x4638>  // b.hs, b.nlast
    e320:	ldrb	w4, [x3]
    e324:	add	x6, x3, #0x1
    e328:	add	x5, x3, #0x3
    e32c:	mov	x2, x20
    e330:	mov	x1, x19
    e334:	mov	x0, x21
    e338:	cmp	w4, #0xf
    e33c:	b.eq	e300 <gcc_cp_fe_context@@Base+0x45e0>  // b.none
    e340:	bl	e180 <gcc_cp_fe_context@@Base+0x4460>
    e344:	ands	w0, w0, #0xff
    e348:	b.eq	e36c <gcc_cp_fe_context@@Base+0x464c>  // b.none
    e34c:	ldr	x3, [sp, #56]
    e350:	cmp	x3, x19
    e354:	b.cc	e320 <gcc_cp_fe_context@@Base+0x4600>  // b.lo, b.ul, b.last
    e358:	ldp	x19, x20, [sp, #16]
    e35c:	ldr	x21, [sp, #32]
    e360:	mov	w0, #0x1                   	// #1
    e364:	ldp	x29, x30, [sp], #64
    e368:	ret
    e36c:	ldp	x19, x20, [sp, #16]
    e370:	ldr	x21, [sp, #32]
    e374:	ldp	x29, x30, [sp], #64
    e378:	ret
    e37c:	nop
    e380:	stp	x29, x30, [sp, #-80]!
    e384:	mov	x29, sp
    e388:	stp	x21, x22, [sp, #32]
    e38c:	mov	x21, x0
    e390:	ldr	x0, [x0]
    e394:	add	x0, x0, #0x2
    e398:	str	x0, [sp, #72]
    e39c:	cmp	x0, x1
    e3a0:	b.cs	e3fc <gcc_cp_fe_context@@Base+0x46dc>  // b.hs, b.nlast
    e3a4:	add	x22, sp, #0x48
    e3a8:	stp	x19, x20, [sp, #16]
    e3ac:	mov	x20, x1
    e3b0:	str	x23, [sp, #48]
    e3b4:	mov	x23, x2
    e3b8:	ldrb	w1, [x0]
    e3bc:	cmp	w1, #0x7
    e3c0:	b.eq	e40c <gcc_cp_fe_context@@Base+0x46ec>  // b.none
    e3c4:	cmp	w1, #0xf
    e3c8:	b.ne	e42c <gcc_cp_fe_context@@Base+0x470c>  // b.any
    e3cc:	add	x1, x0, #0x1
    e3d0:	str	x1, [sp, #72]
    e3d4:	add	x0, x0, #0x3
    e3d8:	ldursb	w19, [x0, #-1]
    e3dc:	ldurb	w1, [x0, #-2]
    e3e0:	str	x0, [sp, #72]
    e3e4:	adds	w19, w1, w19, lsl #8
    e3e8:	b.pl	e44c <gcc_cp_fe_context@@Base+0x472c>  // b.nfrst
    e3ec:	cmp	x20, x0
    e3f0:	b.hi	e3b8 <gcc_cp_fe_context@@Base+0x4698>  // b.pmore
    e3f4:	ldp	x19, x20, [sp, #16]
    e3f8:	ldr	x23, [sp, #48]
    e3fc:	mov	w0, #0x0                   	// #0
    e400:	ldp	x21, x22, [sp, #32]
    e404:	ldp	x29, x30, [sp], #80
    e408:	ret
    e40c:	add	x1, x0, #0x2
    e410:	mov	w0, #0x1                   	// #1
    e414:	ldp	x19, x20, [sp, #16]
    e418:	ldr	x23, [sp, #48]
    e41c:	str	x1, [x21]
    e420:	ldp	x21, x22, [sp, #32]
    e424:	ldp	x29, x30, [sp], #80
    e428:	ret
    e42c:	mov	x2, x23
    e430:	mov	x1, x20
    e434:	mov	x0, x22
    e438:	bl	e180 <gcc_cp_fe_context@@Base+0x4460>
    e43c:	tst	w0, #0xff
    e440:	b.eq	e3f4 <gcc_cp_fe_context@@Base+0x46d4>  // b.none
    e444:	ldr	x0, [sp, #72]
    e448:	b	e3ec <gcc_cp_fe_context@@Base+0x46cc>
    e44c:	sxtw	x19, w19
    e450:	add	x2, x0, x19
    e454:	sub	x1, x19, #0x3
    e458:	add	x1, x0, x1
    e45c:	ldurb	w2, [x2, #-3]
    e460:	cmp	w2, #0xe
    e464:	b.eq	e4bc <gcc_cp_fe_context@@Base+0x479c>  // b.none
    e468:	b	e4d0 <gcc_cp_fe_context@@Base+0x47b0>
    e46c:	ldr	x1, [sp, #72]
    e470:	add	x3, x1, x19
    e474:	str	x3, [sp, #72]
    e478:	add	x2, x3, #0x1
    e47c:	add	x0, x3, #0x3
    e480:	ldrb	w1, [x1, x19]
    e484:	cmp	w1, #0xf
    e488:	b.ne	e4d8 <gcc_cp_fe_context@@Base+0x47b8>  // b.any
    e48c:	str	x2, [sp, #72]
    e490:	ldrb	w1, [x3, #1]
    e494:	ldrsb	w19, [x3, #2]
    e498:	str	x0, [sp, #72]
    e49c:	add	w19, w1, w19, lsl #8
    e4a0:	sxtw	x19, w19
    e4a4:	add	x2, x0, x19
    e4a8:	sub	x1, x19, #0x3
    e4ac:	add	x1, x0, x1
    e4b0:	ldurb	w2, [x2, #-3]
    e4b4:	cmp	w2, #0xe
    e4b8:	b.ne	e510 <gcc_cp_fe_context@@Base+0x47f0>  // b.any
    e4bc:	mov	x2, x23
    e4c0:	bl	e2d0 <gcc_cp_fe_context@@Base+0x45b0>
    e4c4:	tst	w0, #0xff
    e4c8:	b.ne	e46c <gcc_cp_fe_context@@Base+0x474c>  // b.any
    e4cc:	b	e3f4 <gcc_cp_fe_context@@Base+0x46d4>
    e4d0:	mov	x3, x0
    e4d4:	nop
    e4d8:	ldurb	w1, [x3, #-2]
    e4dc:	mov	x0, x3
    e4e0:	ldursb	w19, [x3, #-1]
    e4e4:	mov	x2, x23
    e4e8:	add	w19, w1, w19, lsl #8
    e4ec:	sxtw	x19, w19
    e4f0:	add	x1, x3, x19
    e4f4:	bl	e2d0 <gcc_cp_fe_context@@Base+0x45b0>
    e4f8:	tst	w0, #0xff
    e4fc:	b.eq	e3f4 <gcc_cp_fe_context@@Base+0x46d4>  // b.none
    e500:	ldr	x0, [sp, #72]
    e504:	add	x0, x0, x19
    e508:	str	x0, [sp, #72]
    e50c:	b	e3ec <gcc_cp_fe_context@@Base+0x46cc>
    e510:	str	x3, [sp, #72]
    e514:	b	e4d8 <gcc_cp_fe_context@@Base+0x47b8>
    e518:	stp	x29, x30, [sp, #-112]!
    e51c:	mov	x2, #0x100                 	// #256
    e520:	mov	w1, #0x0                   	// #0
    e524:	mov	x29, sp
    e528:	stp	x19, x20, [sp, #16]
    e52c:	adrp	x20, 15000 <iterative_hash@@Base+0x2c8>
    e530:	add	x20, x20, #0xd24
    e534:	ldr	x19, [x0, #32]
    e538:	stp	x21, x22, [sp, #32]
    e53c:	mov	x22, x0
    e540:	stp	x23, x24, [sp, #48]
    e544:	stp	x25, x26, [sp, #64]
    e548:	adrp	x26, 2a000 <xexit@@Base+0x14e10>
    e54c:	mov	w25, #0x0                   	// #0
    e550:	stp	x27, x28, [sp, #80]
    e554:	sub	sp, sp, #0x30
    e558:	mov	x27, sp
    e55c:	ldr	x21, [x0]
    e560:	mov	w28, #0x1                   	// #1
    e564:	ldr	x24, [x0, #16]
    e568:	mov	x0, x19
    e56c:	bl	5450 <memset@plt>
    e570:	ldrb	w0, [x22, #56]
    e574:	mov	w1, #0xfffffff6            	// #-10
    e578:	ldr	x26, [x26, #3952]
    e57c:	and	w0, w0, w1
    e580:	add	x24, x21, x24
    e584:	orr	w0, w0, #0x8
    e588:	mov	w2, #0x5                   	// #5
    e58c:	strb	w0, [x22, #56]
    e590:	cmp	x21, x24
    e594:	b.eq	e5f8 <gcc_cp_fe_context@@Base+0x48d8>  // b.none
    e598:	ldrb	w1, [x21]
    e59c:	cmp	w1, #0x1
    e5a0:	b.eq	e5f8 <gcc_cp_fe_context@@Base+0x48d8>  // b.none
    e5a4:	cmp	w1, #0x1d
    e5a8:	b.hi	e8cc <gcc_cp_fe_context@@Base+0x4bac>  // b.pmore
    e5ac:	ldrh	w0, [x20, w1, uxtw #1]
    e5b0:	adr	x1, e5bc <gcc_cp_fe_context@@Base+0x489c>
    e5b4:	add	x0, x1, w0, sxth #2
    e5b8:	br	x0
    e5bc:	adrp	x1, 2b000 <xexit@@Base+0x15e10>
    e5c0:	add	x1, x1, #0x5f8
    e5c4:	mov	x3, #0x0                   	// #0
    e5c8:	mov	w5, #0x1                   	// #1
    e5cc:	ldrb	w4, [x3, x1]
    e5d0:	cmp	w4, #0x1
    e5d4:	b.eq	e5dc <gcc_cp_fe_context@@Base+0x48bc>  // b.none
    e5d8:	strb	w5, [x19, x3]
    e5dc:	add	x3, x3, #0x1
    e5e0:	cmp	x3, #0x100
    e5e4:	b.ne	e5cc <gcc_cp_fe_context@@Base+0x48ac>  // b.any
    e5e8:	mov	x21, x24
    e5ec:	mov	w28, #0x0                   	// #0
    e5f0:	cmp	x21, x24
    e5f4:	b.ne	e598 <gcc_cp_fe_context@@Base+0x4878>  // b.any
    e5f8:	ldrb	w1, [x22, #56]
    e5fc:	ubfx	x3, x1, #0, #1
    e600:	orr	w3, w28, w3
    e604:	and	w3, w3, #0x1
    e608:	cbnz	w25, e6e4 <gcc_cp_fe_context@@Base+0x49c4>
    e60c:	bfxil	w1, w3, #0, #1
    e610:	mov	w0, #0x0                   	// #0
    e614:	strb	w1, [x22, #56]
    e618:	mov	sp, x29
    e61c:	ldp	x19, x20, [sp, #16]
    e620:	ldp	x21, x22, [sp, #32]
    e624:	ldp	x23, x24, [sp, #48]
    e628:	ldp	x25, x26, [sp, #64]
    e62c:	ldp	x27, x28, [sp, #80]
    e630:	ldp	x29, x30, [sp], #112
    e634:	ret
    e638:	adrp	x1, 2b000 <xexit@@Base+0x15e10>
    e63c:	add	x1, x1, #0x5f8
    e640:	mov	x3, #0x0                   	// #0
    e644:	ldrb	w4, [x3, x1]
    e648:	cmp	w4, #0x1
    e64c:	b.ne	e654 <gcc_cp_fe_context@@Base+0x4934>  // b.any
    e650:	strb	w4, [x19, x3]
    e654:	add	x3, x3, #0x1
    e658:	cmp	x3, #0x100
    e65c:	b.ne	e644 <gcc_cp_fe_context@@Base+0x4924>  // b.any
    e660:	b	e5e8 <gcc_cp_fe_context@@Base+0x48c8>
    e664:	mov	w23, #0x0                   	// #0
    e668:	ldrsb	w3, [x21, #2]
    e66c:	add	x4, x21, #0x3
    e670:	ldrb	w0, [x21, #1]
    e674:	add	w3, w0, w3, lsl #8
    e678:	add	x3, x4, w3, sxtw
    e67c:	cmp	x3, x24
    e680:	b.cs	e89c <gcc_cp_fe_context@@Base+0x4b7c>  // b.hs, b.nlast
    e684:	cmp	w2, w25
    e688:	b.ne	e6cc <gcc_cp_fe_context@@Base+0x49ac>  // b.any
    e68c:	ldr	w0, [x26]
    e690:	mov	w1, #0x13                  	// #19
    e694:	stp	x4, x3, [x29, #96]
    e698:	mul	w0, w0, w1
    e69c:	cmp	w2, w0
    e6a0:	b.hi	e8bc <gcc_cp_fe_context@@Base+0x4b9c>  // b.pmore
    e6a4:	ubfiz	x0, x2, #4, #31
    e6a8:	mov	x1, x27
    e6ac:	sub	sp, sp, x0
    e6b0:	lsl	w27, w2, #1
    e6b4:	mov	x0, sp
    e6b8:	ubfiz	x2, x2, #3, #32
    e6bc:	bl	52b0 <memcpy@plt>
    e6c0:	ldp	x4, x3, [x29, #96]
    e6c4:	mov	w2, w27
    e6c8:	mov	x27, x0
    e6cc:	str	x3, [x27, w25, uxtw #3]
    e6d0:	add	w25, w25, #0x1
    e6d4:	add	x21, x21, #0x5
    e6d8:	cmp	w23, #0x0
    e6dc:	csel	x21, x21, x4, ne  // ne = any
    e6e0:	b	e590 <gcc_cp_fe_context@@Base+0x4870>
    e6e4:	sub	w25, w25, #0x1
    e6e8:	bfxil	w1, w3, #0, #1
    e6ec:	mov	w28, #0x1                   	// #1
    e6f0:	strb	w1, [x22, #56]
    e6f4:	ldr	x21, [x27, w25, uxtw #3]
    e6f8:	b	e590 <gcc_cp_fe_context@@Base+0x4870>
    e6fc:	ldrsb	w0, [x21, #4]
    e700:	mov	w23, #0x1                   	// #1
    e704:	ldrb	w1, [x21, #3]
    e708:	add	w0, w1, w0, lsl #8
    e70c:	cbz	w0, e668 <gcc_cp_fe_context@@Base+0x4948>
    e710:	add	x21, x21, #0x5
    e714:	b	e590 <gcc_cp_fe_context@@Base+0x4870>
    e718:	add	x21, x21, #0x1
    e71c:	b	e590 <gcc_cp_fe_context@@Base+0x4870>
    e720:	ldrb	w0, [x21, #2]
    e724:	mov	w1, #0x1                   	// #1
    e728:	mov	x21, x24
    e72c:	mov	w28, #0x0                   	// #0
    e730:	strb	w1, [x19, x0]
    e734:	b	e590 <gcc_cp_fe_context@@Base+0x4870>
    e738:	ldrb	w5, [x19, #10]
    e73c:	mov	x1, x19
    e740:	add	x4, x19, #0x100
    e744:	mov	w3, #0x1                   	// #1
    e748:	strb	w3, [x1], #1
    e74c:	cmp	x4, x1
    e750:	b.ne	e748 <gcc_cp_fe_context@@Base+0x4a28>  // b.any
    e754:	ldr	x0, [x22, #24]
    e758:	tbz	w0, #6, e8ac <gcc_cp_fe_context@@Base+0x4b8c>
    e75c:	ldrb	w0, [x22, #56]
    e760:	and	w28, w0, #0x1
    e764:	tbnz	w0, #0, e8c4 <gcc_cp_fe_context@@Base+0x4ba4>
    e768:	mov	x21, x24
    e76c:	b	e590 <gcc_cp_fe_context@@Base+0x4870>
    e770:	ldrb	w0, [x21, #1]
    e774:	lsl	w0, w0, #3
    e778:	sub	w1, w0, #0x1
    e77c:	cbz	w0, e5e8 <gcc_cp_fe_context@@Base+0x48c8>
    e780:	sxtw	x1, w1
    e784:	mov	w5, #0x1                   	// #1
    e788:	asr	w0, w1, #3
    e78c:	and	w4, w1, #0x7
    e790:	add	x0, x21, w0, sxtw
    e794:	ldrb	w3, [x0, #2]
    e798:	asr	w0, w3, w4
    e79c:	tbz	w0, #0, e7a4 <gcc_cp_fe_context@@Base+0x4a84>
    e7a0:	strb	w5, [x19, x1]
    e7a4:	sub	x1, x1, #0x1
    e7a8:	cmn	w1, #0x1
    e7ac:	b.ne	e788 <gcc_cp_fe_context@@Base+0x4a68>  // b.any
    e7b0:	b	e5e8 <gcc_cp_fe_context@@Base+0x48c8>
    e7b4:	add	x21, x21, #0x3
    e7b8:	b	e590 <gcc_cp_fe_context@@Base+0x4870>
    e7bc:	ldrb	w1, [x22, #56]
    e7c0:	mov	w0, #0x0                   	// #0
    e7c4:	orr	w1, w1, #0x1
    e7c8:	strb	w1, [x22, #56]
    e7cc:	b	e618 <gcc_cp_fe_context@@Base+0x48f8>
    e7d0:	ldrsb	w0, [x21, #2]
    e7d4:	ldrb	w1, [x21, #1]
    e7d8:	add	w0, w1, w0, lsl #8
    e7dc:	cmp	w0, #0x0
    e7e0:	sxtw	x0, w0
    e7e4:	add	x0, x0, #0x3
    e7e8:	add	x21, x21, x0
    e7ec:	b.gt	e590 <gcc_cp_fe_context@@Base+0x4870>
    e7f0:	ldrb	w0, [x21]
    e7f4:	cmp	w0, #0xf
    e7f8:	ccmp	w0, #0x15, #0x4, ne  // ne = any
    e7fc:	b.ne	e590 <gcc_cp_fe_context@@Base+0x4870>  // b.any
    e800:	ldrsb	w0, [x21, #2]
    e804:	add	x1, x21, #0x3
    e808:	ldrb	w21, [x21, #1]
    e80c:	add	w21, w21, w0, lsl #8
    e810:	add	x21, x1, w21, sxtw
    e814:	cbz	w25, e590 <gcc_cp_fe_context@@Base+0x4870>
    e818:	sub	w0, w25, #0x1
    e81c:	ldr	x1, [x27, w0, uxtw #3]
    e820:	cmp	x1, x21
    e824:	csel	w25, w25, w0, ne  // ne = any
    e828:	b	e590 <gcc_cp_fe_context@@Base+0x4870>
    e82c:	ldrb	w0, [x21, #1]
    e830:	lsl	w0, w0, #3
    e834:	cmp	w0, #0xff
    e838:	b.gt	e860 <gcc_cp_fe_context@@Base+0x4b40>
    e83c:	sxtw	x0, w0
    e840:	mov	w1, #0x1                   	// #1
    e844:	nop
    e848:	strb	w1, [x19, x0]
    e84c:	add	x0, x0, #0x1
    e850:	cmp	w0, #0xff
    e854:	b.le	e848 <gcc_cp_fe_context@@Base+0x4b28>
    e858:	ldrb	w0, [x21, #1]
    e85c:	lsl	w0, w0, #3
    e860:	sub	w1, w0, #0x1
    e864:	cbz	w0, e5e8 <gcc_cp_fe_context@@Base+0x48c8>
    e868:	sxtw	x1, w1
    e86c:	mov	w5, #0x1                   	// #1
    e870:	asr	w0, w1, #3
    e874:	and	w4, w1, #0x7
    e878:	add	x0, x21, w0, sxtw
    e87c:	ldrb	w3, [x0, #2]
    e880:	asr	w0, w3, w4
    e884:	tbnz	w0, #0, e88c <gcc_cp_fe_context@@Base+0x4b6c>
    e888:	strb	w5, [x19, x1]
    e88c:	sub	x1, x1, #0x1
    e890:	cmn	w1, #0x1
    e894:	b.ne	e870 <gcc_cp_fe_context@@Base+0x4b50>  // b.any
    e898:	b	e5e8 <gcc_cp_fe_context@@Base+0x48c8>
    e89c:	ldrb	w0, [x22, #56]
    e8a0:	orr	w0, w0, #0x1
    e8a4:	strb	w0, [x22, #56]
    e8a8:	b	e6d4 <gcc_cp_fe_context@@Base+0x49b4>
    e8ac:	mov	x21, x24
    e8b0:	mov	w28, #0x0                   	// #0
    e8b4:	strb	w5, [x19, #10]
    e8b8:	b	e590 <gcc_cp_fe_context@@Base+0x4870>
    e8bc:	mov	w0, #0xfffffffe            	// #-2
    e8c0:	b	e618 <gcc_cp_fe_context@@Base+0x48f8>
    e8c4:	mov	w0, #0x0                   	// #0
    e8c8:	b	e618 <gcc_cp_fe_context@@Base+0x48f8>
    e8cc:	bl	5740 <abort@plt>
    e8d0:	stp	x29, x30, [sp, #-416]!
    e8d4:	mov	x29, sp
    e8d8:	ldr	x9, [x0, #48]
    e8dc:	stp	x19, x20, [sp, #16]
    e8e0:	str	x0, [x29, #288]
    e8e4:	ldr	x11, [x0]
    e8e8:	stp	x21, x22, [sp, #32]
    e8ec:	ldr	x8, [x0, #16]
    e8f0:	stp	x23, x24, [sp, #48]
    e8f4:	ldr	x0, [x0, #40]
    e8f8:	stp	x25, x26, [sp, #64]
    e8fc:	mov	x25, x1
    e900:	add	x1, x9, #0x1
    e904:	stp	x27, x28, [sp, #80]
    e908:	sub	sp, sp, #0x30
    e90c:	str	x9, [x29, #192]
    e910:	mov	x19, sp
    e914:	str	x0, [x29, #248]
    e918:	add	x8, x11, x8
    e91c:	str	x6, [x29, #264]
    e920:	str	x1, [x29, #320]
    e924:	str	w5, [x29, #340]
    e928:	str	w2, [x29, #356]
    e92c:	cbz	x9, eb0c <gcc_cp_fe_context@@Base+0x4dec>
    e930:	lsl	x10, x1, #3
    e934:	add	x0, x10, #0xf
    e938:	and	x0, x0, #0xfffffffffffffff0
    e93c:	sub	sp, sp, x0
    e940:	mov	x23, sp
    e944:	sub	sp, sp, x0
    e948:	mov	x24, sp
    e94c:	sub	sp, sp, x0
    e950:	mov	x1, sp
    e954:	sub	sp, sp, x0
    e958:	str	x1, [x29, #280]
    e95c:	mov	x1, sp
    e960:	sub	sp, sp, x0
    e964:	str	x1, [x29, #272]
    e968:	mov	x1, sp
    e96c:	sub	sp, sp, x0
    e970:	str	x1, [x29, #232]
    e974:	mov	x1, sp
    e978:	sub	sp, sp, x0
    e97c:	str	x1, [x29, #224]
    e980:	mov	x22, sp
    e984:	sub	sp, sp, x0
    e988:	mov	x1, sp
    e98c:	sub	sp, sp, x0
    e990:	mov	x0, sp
    e994:	stp	x0, x1, [x29, #200]
    e998:	ldr	w1, [x29, #340]
    e99c:	tbnz	w1, #31, 103a0 <gcc_cp_fe_context@@Base+0x6680>
    e9a0:	ldr	w0, [x29, #356]
    e9a4:	add	w0, w0, w4
    e9a8:	cmp	w0, w1
    e9ac:	b.lt	103a0 <gcc_cp_fe_context@@Base+0x6680>  // b.tstop
    e9b0:	ldr	x1, [x29, #320]
    e9b4:	adrp	x0, 2b000 <xexit@@Base+0x15e10>
    e9b8:	add	x0, x0, #0x5f8
    e9bc:	add	x2, x0, #0x100
    e9c0:	cmp	x1, #0x1
    e9c4:	lsl	x10, x1, #3
    e9c8:	mov	x0, #0x8                   	// #8
    e9cc:	b.ls	ea04 <gcc_cp_fe_context@@Base+0x4ce4>  // b.plast
    e9d0:	ldp	x6, x5, [x29, #272]
    e9d4:	nop
    e9d8:	str	x2, [x6, x0]
    e9dc:	ldrb	w1, [x22, x0]
    e9e0:	str	x2, [x5, x0]
    e9e4:	and	w1, w1, #0xffffffe0
    e9e8:	str	x2, [x24, x0]
    e9ec:	orr	w1, w1, #0x3
    e9f0:	str	x2, [x23, x0]
    e9f4:	strb	w1, [x22, x0]
    e9f8:	add	x0, x0, #0x8
    e9fc:	cmp	x10, x0
    ea00:	b.ne	e9d8 <gcc_cp_fe_context@@Base+0x4cb8>  // b.any
    ea04:	ldrsw	x0, [x29, #356]
    ea08:	cmp	w4, #0x0
    ea0c:	str	x0, [x29, #312]
    ea10:	ccmp	x25, #0x0, #0x4, eq  // eq = none
    ea14:	add	x0, x25, x0
    ea18:	str	x0, [x29, #328]
    ea1c:	b.ne	eb28 <gcc_cp_fe_context@@Base+0x4e08>  // b.any
    ea20:	ldr	w2, [x29, #356]
    ea24:	ldr	w1, [x29, #340]
    ea28:	cmp	w2, #0x0
    ea2c:	str	w2, [x29, #352]
    ea30:	ldr	x0, [x29, #328]
    ea34:	stp	x25, x0, [x29, #384]
    ea38:	cset	w0, gt
    ea3c:	cmp	w1, w2
    ea40:	str	w4, [x29, #356]
    ea44:	cset	w1, le
    ea48:	mov	x25, x3
    ea4c:	and	w0, w0, w1
    ea50:	add	x1, x3, w4, sxtw
    ea54:	str	x1, [x29, #328]
    ea58:	ldr	w1, [x29, #352]
    ea5c:	cmp	w1, w7
    ea60:	sxtw	x7, w7
    ea64:	b.lt	eb48 <gcc_cp_fe_context@@Base+0x4e28>  // b.tstop
    ea68:	ldr	x1, [x29, #384]
    ea6c:	mov	x26, x25
    ea70:	add	x1, x1, x7
    ea74:	str	x1, [x29, #376]
    ea78:	ldrsw	x1, [x29, #340]
    ea7c:	str	x1, [x29, #256]
    ea80:	cbz	w0, eb68 <gcc_cp_fe_context@@Base+0x4e48>
    ea84:	ldp	x5, x0, [x29, #376]
    ea88:	add	x27, x0, x1
    ea8c:	ldr	w0, [x29, #352]
    ea90:	mov	x4, #0x100                 	// #256
    ea94:	ldr	x1, [x29, #384]
    ea98:	cmp	w0, #0x0
    ea9c:	adrp	x0, 2b000 <xexit@@Base+0x15e10>
    eaa0:	add	x0, x0, #0x5f8
    eaa4:	csel	x1, x1, x25, ne  // ne = any
    eaa8:	mov	x28, x26
    eaac:	mov	x26, x4
    eab0:	mov	x4, x25
    eab4:	mov	x25, x5
    eab8:	stp	x0, x1, [x29, #296]
    eabc:	add	x0, x0, #0x100
    eac0:	mov	w20, #0x0                   	// #0
    eac4:	mov	w7, #0x5                   	// #5
    eac8:	mov	x21, #0x101                 	// #257
    eacc:	str	x0, [x29, #216]
    ead0:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
    ead4:	add	x0, x0, #0xd60
    ead8:	str	xzr, [x29, #240]
    eadc:	str	wzr, [x29, #336]
    eae0:	str	xzr, [x29, #344]
    eae4:	str	x0, [x29, #360]
    eae8:	str	wzr, [x29, #368]
    eaec:	nop
    eaf0:	cmp	x11, x8
    eaf4:	b.eq	ec78 <gcc_cp_fe_context@@Base+0x4f58>  // b.none
    eaf8:	mov	x5, x11
    eafc:	ldrb	w0, [x5], #1
    eb00:	cmp	w0, #0x1d
    eb04:	b.ls	eb80 <gcc_cp_fe_context@@Base+0x4e60>  // b.plast
    eb08:	bl	5740 <abort@plt>
    eb0c:	mov	x22, #0x0                   	// #0
    eb10:	mov	x24, #0x0                   	// #0
    eb14:	mov	x23, #0x0                   	// #0
    eb18:	stp	xzr, xzr, [x29, #200]
    eb1c:	stp	xzr, xzr, [x29, #224]
    eb20:	stp	xzr, xzr, [x29, #272]
    eb24:	b	e998 <gcc_cp_fe_context@@Base+0x4c78>
    eb28:	str	wzr, [x29, #352]
    eb2c:	mov	w0, #0x0                   	// #0
    eb30:	str	xzr, [x29, #312]
    eb34:	ldr	w1, [x29, #352]
    eb38:	stp	xzr, xzr, [x29, #384]
    eb3c:	cmp	w1, w7
    eb40:	sxtw	x7, w7
    eb44:	b.ge	ea68 <gcc_cp_fe_context@@Base+0x4d48>  // b.tcont
    eb48:	ldr	x1, [x29, #312]
    eb4c:	sub	x7, x7, x1
    eb50:	ldr	x1, [x29, #392]
    eb54:	str	x1, [x29, #376]
    eb58:	ldrsw	x1, [x29, #340]
    eb5c:	add	x26, x25, x7
    eb60:	str	x1, [x29, #256]
    eb64:	cbnz	w0, ea84 <gcc_cp_fe_context@@Base+0x4d64>
    eb68:	ldr	x0, [x29, #256]
    eb6c:	mov	x5, x26
    eb70:	ldr	x1, [x29, #312]
    eb74:	sub	x3, x0, x1
    eb78:	add	x27, x25, x3
    eb7c:	b	ea8c <gcc_cp_fe_context@@Base+0x4d6c>
    eb80:	ldr	x1, [x29, #360]
    eb84:	ldrh	w1, [x1, w0, uxtw #1]
    eb88:	adr	x2, eb94 <gcc_cp_fe_context@@Base+0x4e74>
    eb8c:	add	x1, x2, w1, sxth #2
    eb90:	br	x1
    eb94:	cmp	x28, x27
    eb98:	b.eq	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.none
    eb9c:	mov	x25, x28
    eba0:	mov	x27, x4
    eba4:	cmp	x27, x25
    eba8:	b.eq	eb94 <gcc_cp_fe_context@@Base+0x4e74>  // b.none
    ebac:	ldr	x0, [x29, #288]
    ebb0:	ldr	x1, [x0, #24]
    ebb4:	tbnz	w1, #6, 1015c <gcc_cp_fe_context@@Base+0x643c>
    ebb8:	ldr	x2, [x29, #248]
    ebbc:	ldrb	w0, [x27]
    ebc0:	cbz	x2, 10338 <gcc_cp_fe_context@@Base+0x6618>
    ebc4:	and	x0, x0, #0xff
    ebc8:	ldrb	w0, [x2, x0]
    ebcc:	cmp	w0, #0xa
    ebd0:	b.eq	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.none
    ebd4:	tbz	w1, #7, ebdc <gcc_cp_fe_context@@Base+0x4ebc>
    ebd8:	cbz	w0, f6a8 <gcc_cp_fe_context@@Base+0x5988>
    ebdc:	ldr	w0, [x29, #368]
    ebe0:	cbnz	w0, ec5c <gcc_cp_fe_context@@Base+0x4f3c>
    ebe4:	cmp	x21, x26
    ebe8:	b.hi	ec5c <gcc_cp_fe_context@@Base+0x4f3c>  // b.pmore
    ebec:	add	x2, x22, x21, lsl #3
    ebf0:	mov	x1, x21
    ebf4:	ldrb	w0, [x2]
    ebf8:	add	x1, x1, #0x1
    ebfc:	cmp	x26, x1
    ec00:	orr	w0, w0, #0x18
    ec04:	strb	w0, [x2], #8
    ec08:	b.cs	ebf4 <gcc_cp_fe_context@@Base+0x4ed4>  // b.hs, b.nlast
    ec0c:	b	ec5c <gcc_cp_fe_context@@Base+0x4f3c>
    ec10:	cmp	x28, x27
    ec14:	b.eq	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.none
    ec18:	mov	x25, x28
    ec1c:	mov	x27, x4
    ec20:	cmp	x27, x25
    ec24:	b.eq	ec10 <gcc_cp_fe_context@@Base+0x4ef0>  // b.none
    ec28:	ldr	x0, [x29, #392]
    ec2c:	cmp	x27, x0
    ec30:	b.eq	10214 <gcc_cp_fe_context@@Base+0x64f4>  // b.none
    ec34:	sub	x0, x4, #0x1
    ec38:	cmp	x27, x0
    ec3c:	b.eq	10320 <gcc_cp_fe_context@@Base+0x6600>  // b.none
    ec40:	ldrb	w0, [x27]
    ec44:	ldr	x1, [x29, #296]
    ec48:	ldrb	w0, [x1, w0, sxtw]
    ec4c:	cmp	w0, #0x1
    ec50:	b.eq	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.none
    ec54:	ldr	w0, [x29, #368]
    ec58:	cbz	w0, 102f4 <gcc_cp_fe_context@@Base+0x65d4>
    ec5c:	add	x27, x27, #0x1
    ec60:	mov	x11, x5
    ec64:	mov	w0, #0x1                   	// #1
    ec68:	str	w0, [x29, #368]
    ec6c:	cmp	x11, x8
    ec70:	b.ne	eaf8 <gcc_cp_fe_context@@Base+0x4dd8>  // b.any
    ec74:	nop
    ec78:	cmp	x28, x27
    ec7c:	b.eq	fea8 <gcc_cp_fe_context@@Base+0x6188>  // b.none
    ec80:	ldp	x3, x1, [x29, #376]
    ec84:	ldr	x0, [x29, #344]
    ec88:	ldr	x2, [x29, #392]
    ec8c:	cmp	x1, x0
    ec90:	cset	w1, ls  // ls = plast
    ec94:	cmp	x0, x2
    ec98:	cset	w0, ls  // ls = plast
    ec9c:	cmp	x3, x25
    eca0:	and	w1, w1, w0
    eca4:	ldr	w0, [x29, #352]
    eca8:	cset	w5, eq  // eq = none
    ecac:	cmp	w0, #0x0
    ecb0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    ecb4:	cset	w2, ne  // ne = any
    ecb8:	cmp	x3, x25
    ecbc:	cset	w0, ne  // ne = any
    ecc0:	cmp	w5, w2
    ecc4:	b.eq	fd0c <gcc_cp_fe_context@@Base+0x5fec>  // b.none
    ecc8:	cbz	w20, 10348 <gcc_cp_fe_context@@Base+0x6628>
    eccc:	ldr	w1, [x29, #336]
    ecd0:	eor	w1, w1, #0x1
    ecd4:	orr	w0, w1, w0
    ecd8:	cbz	w0, f6ac <gcc_cp_fe_context@@Base+0x598c>
    ecdc:	ldr	x0, [x29, #320]
    ece0:	cmp	x0, #0x1
    ece4:	b.ls	ed0c <gcc_cp_fe_context@@Base+0x4fec>  // b.plast
    ece8:	ldp	x3, x2, [x29, #224]
    ecec:	mov	x0, #0x8                   	// #8
    ecf0:	ldr	x1, [x23, x0]
    ecf4:	str	x1, [x2, x0]
    ecf8:	ldr	x1, [x24, x0]
    ecfc:	str	x1, [x3, x0]
    ed00:	add	x0, x0, #0x8
    ed04:	cmp	x10, x0
    ed08:	b.ne	ecf0 <gcc_cp_fe_context@@Base+0x4fd0>  // b.any
    ed0c:	mov	w0, #0x1                   	// #1
    ed10:	str	w0, [x29, #336]
    ed14:	str	x27, [x29, #344]
    ed18:	b	f6ac <gcc_cp_fe_context@@Base+0x598c>
    ed1c:	cmp	x28, x27
    ed20:	b.eq	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.none
    ed24:	mov	x25, x28
    ed28:	mov	x27, x4
    ed2c:	cmp	x27, x25
    ed30:	b.eq	ed1c <gcc_cp_fe_context@@Base+0x4ffc>  // b.none
    ed34:	ldr	x0, [x29, #392]
    ed38:	cmp	x27, x0
    ed3c:	b.eq	10228 <gcc_cp_fe_context@@Base+0x6508>  // b.none
    ed40:	sub	x0, x4, #0x1
    ed44:	cmp	x27, x0
    ed48:	b.eq	1032c <gcc_cp_fe_context@@Base+0x660c>  // b.none
    ed4c:	ldrb	w0, [x27]
    ed50:	ldr	x1, [x29, #296]
    ed54:	ldrb	w0, [x1, w0, sxtw]
    ed58:	cmp	w0, #0x1
    ed5c:	b.ne	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.any
    ed60:	ldr	w0, [x29, #368]
    ed64:	cbnz	w0, ec5c <gcc_cp_fe_context@@Base+0x4f3c>
    ed68:	cmp	x21, x26
    ed6c:	b.hi	ec5c <gcc_cp_fe_context@@Base+0x4f3c>  // b.pmore
    ed70:	add	x2, x22, x21, lsl #3
    ed74:	mov	x1, x21
    ed78:	ldrb	w0, [x2]
    ed7c:	add	x1, x1, #0x1
    ed80:	cmp	x26, x1
    ed84:	orr	w0, w0, #0x18
    ed88:	strb	w0, [x2], #8
    ed8c:	b.cs	ed78 <gcc_cp_fe_context@@Base+0x5058>  // b.hs, b.nlast
    ed90:	b	ec5c <gcc_cp_fe_context@@Base+0x4f3c>
    ed94:	add	x6, x11, #0x3
    ed98:	ldrsb	w0, [x11, #2]
    ed9c:	ldrb	w11, [x11, #1]
    eda0:	add	w11, w11, w0, lsl #8
    eda4:	add	x11, x6, w11, sxtw
    eda8:	b	eaf0 <gcc_cp_fe_context@@Base+0x4dd0>
    edac:	cmp	w0, #0x5
    edb0:	cset	w2, eq  // eq = none
    edb4:	b	edc8 <gcc_cp_fe_context@@Base+0x50a8>
    edb8:	cmp	x28, x27
    edbc:	b.eq	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.none
    edc0:	mov	x25, x28
    edc4:	mov	x27, x4
    edc8:	cmp	x27, x25
    edcc:	b.eq	edb8 <gcc_cp_fe_context@@Base+0x5098>  // b.none
    edd0:	ldr	x3, [x29, #248]
    edd4:	ldrb	w1, [x27]
    edd8:	cbz	x3, ede4 <gcc_cp_fe_context@@Base+0x50c4>
    eddc:	and	x1, x1, #0xff
    ede0:	ldrb	w1, [x3, x1]
    ede4:	ldrb	w6, [x11, #1]
    ede8:	cmp	w1, w6, lsl #3
    edec:	b.cs	ee08 <gcc_cp_fe_context@@Base+0x50e8>  // b.hs, b.nlast
    edf0:	lsr	w9, w1, #3
    edf4:	and	w1, w1, #0x7
    edf8:	add	w9, w9, #0x1
    edfc:	ldrb	w9, [x5, w9, sxtw]
    ee00:	asr	w1, w9, w1
    ee04:	tbnz	w1, #0, 10248 <gcc_cp_fe_context@@Base+0x6528>
    ee08:	cbz	w2, f6a8 <gcc_cp_fe_context@@Base+0x5988>
    ee0c:	ldr	w0, [x29, #368]
    ee10:	cbz	w0, 10374 <gcc_cp_fe_context@@Base+0x6654>
    ee14:	add	w6, w6, #0x1
    ee18:	mov	w0, #0x1                   	// #1
    ee1c:	add	x27, x27, #0x1
    ee20:	str	w0, [x29, #368]
    ee24:	add	x11, x5, w6, sxtw
    ee28:	b	eaf0 <gcc_cp_fe_context@@Base+0x4dd0>
    ee2c:	ldr	x0, [x29, #304]
    ee30:	cmp	x27, x0
    ee34:	b.eq	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.none
    ee38:	ldr	w0, [x29, #356]
    ee3c:	cmp	w0, #0x0
    ee40:	ldr	x0, [x29, #328]
    ee44:	ccmp	x27, x0, #0x4, ne  // ne = any
    ee48:	b.eq	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.none
    ee4c:	ldr	x1, [x29, #392]
    ee50:	sub	x0, x27, #0x1
    ee54:	cmp	x1, x0
    ee58:	b.eq	ff18 <gcc_cp_fe_context@@Base+0x61f8>  // b.none
    ee5c:	cmp	x4, x27
    ee60:	b.eq	10230 <gcc_cp_fe_context@@Base+0x6510>  // b.none
    ee64:	ldurb	w0, [x27, #-1]
    ee68:	ldr	x1, [x29, #296]
    ee6c:	ldrb	w0, [x1, w0, sxtw]
    ee70:	cmp	w0, #0x1
    ee74:	ldr	x0, [x29, #392]
    ee78:	cset	w1, eq  // eq = none
    ee7c:	cmp	x27, x0
    ee80:	b.eq	10178 <gcc_cp_fe_context@@Base+0x6458>  // b.none
    ee84:	sub	x0, x4, #0x1
    ee88:	cmp	x27, x0
    ee8c:	b.eq	1021c <gcc_cp_fe_context@@Base+0x64fc>  // b.none
    ee90:	ldrb	w0, [x27]
    ee94:	ldr	x2, [x29, #296]
    ee98:	ldrb	w0, [x2, w0, sxtw]
    ee9c:	cmp	w0, #0x1
    eea0:	cset	w0, eq  // eq = none
    eea4:	cmp	w0, w1
    eea8:	b.ne	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.any
    eeac:	mov	x11, x5
    eeb0:	b	eaf0 <gcc_cp_fe_context@@Base+0x4dd0>
    eeb4:	ldrsb	w0, [x11, #4]
    eeb8:	ldrb	w1, [x11, #3]
    eebc:	add	w0, w1, w0, lsl #8
    eec0:	cmp	w0, #0x0
    eec4:	b.gt	feb4 <gcc_cp_fe_context@@Base+0x6194>
    eec8:	b.ne	eeac <gcc_cp_fe_context@@Base+0x518c>  // b.any
    eecc:	sturh	wzr, [x11, #3]
    eed0:	ldrsb	w2, [x11, #2]
    eed4:	add	x11, x11, #0x3
    eed8:	ldurb	w1, [x11, #-2]
    eedc:	cmp	x8, x11
    eee0:	str	x11, [x29, #408]
    eee4:	mov	x0, x11
    eee8:	add	w1, w1, w2, lsl #8
    eeec:	str	w1, [x29, #184]
    eef0:	b.hi	ef08 <gcc_cp_fe_context@@Base+0x51e8>  // b.pmore
    eef4:	b	ef3c <gcc_cp_fe_context@@Base+0x521c>
    eef8:	add	x0, x0, #0x1
    eefc:	str	x0, [x29, #408]
    ef00:	cmp	x0, x8
    ef04:	b.eq	ef3c <gcc_cp_fe_context@@Base+0x521c>  // b.none
    ef08:	ldrb	w1, [x0]
    ef0c:	cbz	w1, eef8 <gcc_cp_fe_context@@Base+0x51d8>
    ef10:	cmp	x8, x0
    ef14:	b.ls	ef3c <gcc_cp_fe_context@@Base+0x521c>  // b.plast
    ef18:	cmp	w1, #0x6
    ef1c:	b.ne	ef3c <gcc_cp_fe_context@@Base+0x521c>  // b.any
    ef20:	ldrb	w1, [x0, #1]
    ef24:	cmp	x21, #0x101
    ef28:	ldrb	w26, [x0, #2]
    ef2c:	and	x0, x1, #0xff
    ef30:	add	w26, w26, w1
    ef34:	csel	x21, x0, x21, eq  // eq = none
    ef38:	sxtw	x26, w26
    ef3c:	add	x0, x26, #0x1
    ef40:	sub	w1, w7, w20
    ef44:	sub	x0, x0, x21
    ef48:	add	x0, x0, x0, lsl #1
    ef4c:	add	x2, x0, #0x4
    ef50:	mov	x3, x2
    ef54:	cmp	x1, x2
    ef58:	b.cs	10200 <gcc_cp_fe_context@@Base+0x64e0>  // b.hs, b.nlast
    ef5c:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    ef60:	mov	w1, #0x13                  	// #19
    ef64:	stp	x10, x4, [x29, #136]
    ef68:	mov	w2, w7
    ef6c:	ldr	x0, [x0, #3952]
    ef70:	stp	x8, x22, [x29, #152]
    ef74:	stp	x21, x11, [x29, #168]
    ef78:	ldr	w0, [x0]
    ef7c:	mul	w0, w0, w1
    ef80:	mov	x1, x19
    ef84:	mov	x19, x3
    ef88:	mov	w21, w0
    ef8c:	cmp	w2, w21
    ef90:	b.hi	efc8 <gcc_cp_fe_context@@Base+0x52a8>  // b.pmore
    ef94:	ubfiz	x0, x2, #4, #31
    ef98:	lsl	w22, w2, #1
    ef9c:	sub	sp, sp, x0
    efa0:	ubfiz	x2, x2, #3, #32
    efa4:	mov	x0, sp
    efa8:	bl	52b0 <memcpy@plt>
    efac:	sub	w2, w22, w20
    efb0:	mov	x1, x0
    efb4:	cmp	x2, x19
    efb8:	b.cs	fdcc <gcc_cp_fe_context@@Base+0x60ac>  // b.hs, b.nlast
    efbc:	mov	w2, w22
    efc0:	cmp	w2, w21
    efc4:	b.ls	ef94 <gcc_cp_fe_context@@Base+0x5274>  // b.plast
    efc8:	mov	w0, #0xfffffffe            	// #-2
    efcc:	mov	sp, x29
    efd0:	ldp	x19, x20, [sp, #16]
    efd4:	ldp	x21, x22, [sp, #32]
    efd8:	ldp	x23, x24, [sp, #48]
    efdc:	ldp	x25, x26, [sp, #64]
    efe0:	ldp	x27, x28, [sp, #80]
    efe4:	ldp	x29, x30, [sp], #416
    efe8:	ret
    efec:	str	x5, [x29, #408]
    eff0:	ldrb	w0, [x11, #1]
    eff4:	lsl	x0, x0, #3
    eff8:	add	x2, x22, x0
    effc:	ldrb	w1, [x22, x0]
    f000:	and	w1, w1, #0x3
    f004:	cmp	w1, #0x3
    f008:	b.eq	10188 <gcc_cp_fe_context@@Base+0x6468>  // b.none
    f00c:	add	x6, x23, x0
    f010:	ldr	x5, [x23, x0]
    f014:	cbz	w1, f024 <gcc_cp_fe_context@@Base+0x5304>
    f018:	ldr	x1, [x29, #216]
    f01c:	cmp	x5, x1
    f020:	csel	x5, x5, x27, ne  // ne = any
    f024:	ldr	x3, [x29, #280]
    f028:	cmp	x21, #0x101
    f02c:	ldrb	w1, [x2]
    f030:	add	x11, x11, #0x3
    f034:	str	x27, [x6]
    f038:	str	x5, [x3, x0]
    f03c:	orr	w0, w1, #0x4
    f040:	strb	w0, [x2]
    f044:	str	wzr, [x29, #368]
    f048:	ldurb	w0, [x11, #-2]
    f04c:	lsl	x0, x0, #3
    f050:	ldrb	w1, [x22, x0]
    f054:	and	w1, w1, #0xfffffff7
    f058:	strb	w1, [x22, x0]
    f05c:	ldurb	w26, [x11, #-2]
    f060:	str	x11, [x29, #240]
    f064:	csel	x21, x21, x26, ne  // ne = any
    f068:	b	eaf0 <gcc_cp_fe_context@@Base+0x4dd0>
    f06c:	ldrb	w0, [x11, #1]
    f070:	add	x2, x11, #0x3
    f074:	ldrsb	w1, [x11, #2]
    f078:	add	x11, x11, #0x5
    f07c:	add	w1, w0, w1, lsl #8
    f080:	add	x0, x2, w1, sxtw
    f084:	str	x0, [x29, #408]
    f088:	ldursb	w0, [x11, #-1]
    f08c:	ldurb	w5, [x11, #-2]
    f090:	add	w0, w5, w0, lsl #8
    f094:	strb	w0, [x2, w1, sxtw]
    f098:	ldr	x1, [x29, #408]
    f09c:	asr	w0, w0, #8
    f0a0:	strb	w0, [x1, #1]
    f0a4:	b	eaf0 <gcc_cp_fe_context@@Base+0x4dd0>
    f0a8:	ldrsb	w0, [x11, #4]
    f0ac:	ldrb	w1, [x11, #3]
    f0b0:	adds	w0, w1, w0, lsl #8
    f0b4:	b.ne	100b8 <gcc_cp_fe_context@@Base+0x6398>  // b.any
    f0b8:	add	x11, x11, #0x5
    f0bc:	b	eaf0 <gcc_cp_fe_context@@Base+0x4dd0>
    f0c0:	ldr	x2, [x29, #248]
    f0c4:	add	x1, x11, #0x2
    f0c8:	ldrb	w0, [x11, #1]
    f0cc:	mov	x11, x1
    f0d0:	cbz	x2, f140 <gcc_cp_fe_context@@Base+0x5420>
    f0d4:	ldr	x3, [x29, #248]
    f0d8:	cmp	x27, x25
    f0dc:	b.eq	fd30 <gcc_cp_fe_context@@Base+0x6010>  // b.none
    f0e0:	ldrb	w2, [x27], #1
    f0e4:	ldrb	w1, [x11], #1
    f0e8:	ldrb	w2, [x3, x2]
    f0ec:	cmp	w2, w1
    f0f0:	b.ne	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.any
    f0f4:	subs	w0, w0, #0x1
    f0f8:	b.ne	f0d8 <gcc_cp_fe_context@@Base+0x53b8>  // b.any
    f0fc:	ldr	w0, [x29, #368]
    f100:	cbnz	w0, eaf0 <gcc_cp_fe_context@@Base+0x4dd0>
    f104:	cmp	x21, x26
    f108:	b.hi	ec64 <gcc_cp_fe_context@@Base+0x4f44>  // b.pmore
    f10c:	add	x2, x22, x21, lsl #3
    f110:	mov	x1, x21
    f114:	ldrb	w0, [x2]
    f118:	add	x1, x1, #0x1
    f11c:	cmp	x26, x1
    f120:	orr	w0, w0, #0x18
    f124:	strb	w0, [x2], #8
    f128:	b.cs	f114 <gcc_cp_fe_context@@Base+0x53f4>  // b.hs, b.nlast
    f12c:	b	ec64 <gcc_cp_fe_context@@Base+0x4f44>
    f130:	cmp	x28, x25
    f134:	b.eq	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.none
    f138:	mov	x25, x28
    f13c:	mov	x27, x4
    f140:	cmp	x27, x25
    f144:	b.eq	f130 <gcc_cp_fe_context@@Base+0x5410>  // b.none
    f148:	ldrb	w2, [x27], #1
    f14c:	ldrb	w1, [x11], #1
    f150:	cmp	w2, w1
    f154:	b.ne	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.any
    f158:	subs	w0, w0, #0x1
    f15c:	b.ne	f140 <gcc_cp_fe_context@@Base+0x5420>  // b.any
    f160:	b	f0fc <gcc_cp_fe_context@@Base+0x53dc>
    f164:	ldrb	w0, [x11, #1]
    f168:	ldr	x1, [x29, #216]
    f16c:	ldr	x3, [x23, x0, lsl #3]
    f170:	cmp	x3, x1
    f174:	b.eq	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.none
    f178:	ldr	x5, [x24, x0, lsl #3]
    f17c:	cmp	x5, x1
    f180:	b.eq	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.none
    f184:	ldr	x0, [x29, #392]
    f188:	cmp	x3, x0
    f18c:	ldr	x0, [x29, #384]
    f190:	ccmp	x3, x0, #0x0, ls  // ls = plast
    f194:	ldr	w0, [x29, #352]
    f198:	ccmp	w0, #0x0, #0x4, cs  // cs = hs, nlast
    f19c:	b.ne	1036c <gcc_cp_fe_context@@Base+0x664c>  // b.any
    f1a0:	mov	x6, x5
    f1a4:	cbnz	w0, fef0 <gcc_cp_fe_context@@Base+0x61d0>
    f1a8:	add	x9, x22, x21, lsl #3
    f1ac:	mov	x13, x22
    f1b0:	mov	x22, x19
    f1b4:	mov	x19, x26
    f1b8:	ldr	x26, [x29, #248]
    f1bc:	mov	x12, x24
    f1c0:	mov	x24, x23
    f1c4:	mov	w23, w20
    f1c8:	mov	x20, x21
    f1cc:	cmp	x3, x6
    f1d0:	b.ne	f1e8 <gcc_cp_fe_context@@Base+0x54c8>  // b.any
    f1d4:	b	10078 <gcc_cp_fe_context@@Base+0x6358>
    f1d8:	cmp	x28, x27
    f1dc:	b.eq	fe90 <gcc_cp_fe_context@@Base+0x6170>  // b.none
    f1e0:	mov	x25, x28
    f1e4:	mov	x27, x4
    f1e8:	cmp	x27, x25
    f1ec:	b.eq	f1d8 <gcc_cp_fe_context@@Base+0x54b8>  // b.none
    f1f0:	sub	x1, x25, x27
    f1f4:	sub	x21, x6, x3
    f1f8:	cmp	x21, w1, sxtw
    f1fc:	csel	w1, w1, w21, ge  // ge = tcont
    f200:	cbnz	x26, fe58 <gcc_cp_fe_context@@Base+0x6138>
    f204:	sxtw	x21, w1
    f208:	mov	x0, x27
    f20c:	mov	x1, x3
    f210:	mov	x2, x21
    f214:	stp	x10, x4, [x29, #104]
    f218:	stp	x9, x8, [x29, #120]
    f21c:	stp	x13, x12, [x29, #136]
    f220:	stp	x6, x11, [x29, #152]
    f224:	str	x5, [x29, #168]
    f228:	str	w7, [x29, #176]
    f22c:	str	x3, [x29, #184]
    f230:	bl	5410 <memcmp@plt>
    f234:	ldr	w7, [x29, #176]
    f238:	ldp	x10, x4, [x29, #104]
    f23c:	ldp	x9, x8, [x29, #120]
    f240:	ldp	x13, x12, [x29, #136]
    f244:	ldp	x6, x11, [x29, #152]
    f248:	ldr	x5, [x29, #168]
    f24c:	ldr	x3, [x29, #184]
    f250:	cbnz	w0, fe90 <gcc_cp_fe_context@@Base+0x6170>
    f254:	ldr	w0, [x29, #368]
    f258:	add	x27, x27, x21
    f25c:	add	x3, x3, x21
    f260:	cbnz	w0, f1cc <gcc_cp_fe_context@@Base+0x54ac>
    f264:	cmp	x20, x19
    f268:	b.hi	f28c <gcc_cp_fe_context@@Base+0x556c>  // b.pmore
    f26c:	mov	x2, x9
    f270:	mov	x1, x20
    f274:	ldrb	w0, [x2]
    f278:	add	x1, x1, #0x1
    f27c:	cmp	x19, x1
    f280:	orr	w0, w0, #0x18
    f284:	strb	w0, [x2], #8
    f288:	b.cs	f274 <gcc_cp_fe_context@@Base+0x5554>  // b.hs, b.nlast
    f28c:	mov	w0, #0x1                   	// #1
    f290:	str	w0, [x29, #368]
    f294:	b	f1cc <gcc_cp_fe_context@@Base+0x54ac>
    f298:	ldrb	w1, [x11, #1]
    f29c:	lsl	x0, x1, #3
    f2a0:	add	x2, x22, x0
    f2a4:	add	x6, x24, x0
    f2a8:	ldr	x5, [x24, x1, lsl #3]
    f2ac:	ldrb	w0, [x22, x0]
    f2b0:	tst	x0, #0x3
    f2b4:	b.eq	f2c4 <gcc_cp_fe_context@@Base+0x55a4>  // b.none
    f2b8:	ldr	x0, [x29, #216]
    f2bc:	cmp	x5, x0
    f2c0:	csel	x5, x5, x27, ne  // ne = any
    f2c4:	ldr	x3, [x29, #272]
    f2c8:	str	x27, [x6]
    f2cc:	ldrb	w0, [x2]
    f2d0:	cmp	x21, x26
    f2d4:	and	w0, w0, #0xfffffffb
    f2d8:	str	x5, [x3, x1, lsl #3]
    f2dc:	strb	w0, [x2]
    f2e0:	ldrb	w2, [x11, #1]
    f2e4:	b.ne	fec4 <gcc_cp_fe_context@@Base+0x61a4>  // b.any
    f2e8:	mov	x26, #0x100                 	// #256
    f2ec:	mov	x21, #0x101                 	// #257
    f2f0:	ubfiz	x2, x2, #3, #8
    f2f4:	add	x1, x11, #0x3
    f2f8:	ldrb	w0, [x22, x2]
    f2fc:	tst	x0, #0x8
    f300:	ldr	x0, [x29, #240]
    f304:	ccmp	x11, x0, #0x4, ne  // ne = any
    f308:	b.ne	fc98 <gcc_cp_fe_context@@Base+0x5f78>  // b.any
    f30c:	cmp	x8, x1
    f310:	b.ls	fc98 <gcc_cp_fe_context@@Base+0x5f78>  // b.plast
    f314:	add	x0, x11, #0x4
    f318:	str	x0, [x29, #408]
    f31c:	ldrb	w0, [x11, #3]
    f320:	cmp	w0, #0x13
    f324:	b.hi	1005c <gcc_cp_fe_context@@Base+0x633c>  // b.pmore
    f328:	cmp	w0, #0x10
    f32c:	b.hi	f338 <gcc_cp_fe_context@@Base+0x5618>  // b.pmore
    f330:	cmp	w0, #0xd
    f334:	b.ne	fc98 <gcc_cp_fe_context@@Base+0x5f78>  // b.any
    f338:	ldrsb	w0, [x11, #5]
    f33c:	add	x5, x11, #0x6
    f340:	ldrb	w2, [x11, #4]
    f344:	add	w0, w2, w0, lsl #8
    f348:	add	x2, x5, w0, sxtw
    f34c:	str	x2, [x29, #408]
    f350:	tbz	w0, #31, fc98 <gcc_cp_fe_context@@Base+0x5f78>
    f354:	ldrb	w0, [x5, w0, sxtw]
    f358:	cmp	w0, #0xf
    f35c:	b.ne	fc98 <gcc_cp_fe_context@@Base+0x5f78>  // b.any
    f360:	ldrb	w0, [x2, #3]
    f364:	cmp	w0, #0x6
    f368:	b.ne	fc98 <gcc_cp_fe_context@@Base+0x5f78>  // b.any
    f36c:	ldrb	w5, [x11, #1]
    f370:	ldrb	w0, [x2, #4]
    f374:	cmp	w0, w5
    f378:	b.ne	fc98 <gcc_cp_fe_context@@Base+0x5f78>  // b.any
    f37c:	ubfiz	x0, x0, #3, #8
    f380:	ldrb	w1, [x22, x0]
    f384:	tbnz	w1, #4, 10520 <gcc_cp_fe_context@@Base+0x6800>
    f388:	add	x1, x26, #0x1
    f38c:	add	x0, x2, #0x1
    f390:	sub	x1, x1, x21
    f394:	str	x0, [x29, #408]
    f398:	add	x5, x2, #0x3
    f39c:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    f3a0:	add	x1, x1, x1, lsl #1
    f3a4:	ldrb	w6, [x2, #1]
    f3a8:	ldrb	w9, [x2, #2]
    f3ac:	add	x3, x1, #0x4
    f3b0:	str	x5, [x29, #408]
    f3b4:	sub	w1, w7, w20
    f3b8:	ldr	x12, [x0, #3952]
    f3bc:	cmp	x3, x1
    f3c0:	mov	w13, #0x13                  	// #19
    f3c4:	b.ls	10494 <gcc_cp_fe_context@@Base+0x6774>  // b.plast
    f3c8:	mov	w2, w7
    f3cc:	mov	x1, x19
    f3d0:	stp	x22, x24, [x29, #160]
    f3d4:	mov	w24, w9
    f3d8:	mov	x22, x12
    f3dc:	stp	x23, x26, [x29, #176]
    f3e0:	mov	x26, x25
    f3e4:	mov	w23, w6
    f3e8:	mov	x25, x5
    f3ec:	str	x21, [x29, #368]
    f3f0:	mov	x21, x3
    f3f4:	b	f430 <gcc_cp_fe_context@@Base+0x5710>
    f3f8:	ubfiz	x0, x2, #4, #31
    f3fc:	lsl	w19, w2, #1
    f400:	sub	sp, sp, x0
    f404:	ubfiz	x2, x2, #3, #32
    f408:	mov	x0, sp
    f40c:	bl	52b0 <memcpy@plt>
    f410:	sub	w2, w19, w20
    f414:	mov	x1, x0
    f418:	cmp	x2, x21
    f41c:	mov	w13, #0x13                  	// #19
    f420:	ldp	x10, x4, [x29, #136]
    f424:	ldr	x8, [x29, #152]
    f428:	b.cs	1046c <gcc_cp_fe_context@@Base+0x674c>  // b.hs, b.nlast
    f42c:	mov	w2, w19
    f430:	ldr	w0, [x22]
    f434:	stp	x10, x4, [x29, #136]
    f438:	str	x8, [x29, #152]
    f43c:	mul	w0, w0, w13
    f440:	cmp	w0, w2
    f444:	b.cs	f3f8 <gcc_cp_fe_context@@Base+0x56d8>  // b.hs, b.nlast
    f448:	b	efc8 <gcc_cp_fe_context@@Base+0x52a8>
    f44c:	add	x0, x26, #0x1
    f450:	sub	w1, w7, w20
    f454:	sub	x0, x0, x21
    f458:	mov	w9, w7
    f45c:	add	x0, x0, x0, lsl #1
    f460:	add	x2, x0, #0x4
    f464:	mov	x3, x2
    f468:	cmp	x1, x2
    f46c:	b.cs	fd58 <gcc_cp_fe_context@@Base+0x6038>  // b.hs, b.nlast
    f470:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    f474:	mov	w1, #0x13                  	// #19
    f478:	stp	x10, x4, [x29, #144]
    f47c:	mov	w2, w7
    f480:	ldr	x0, [x0, #3952]
    f484:	stp	x5, x8, [x29, #160]
    f488:	stp	x22, x21, [x29, #176]
    f48c:	mov	x21, x3
    f490:	ldr	w0, [x0]
    f494:	mul	w0, w0, w1
    f498:	mov	x1, x19
    f49c:	mov	w19, w0
    f4a0:	cmp	w2, w19
    f4a4:	b.hi	efc8 <gcc_cp_fe_context@@Base+0x52a8>  // b.pmore
    f4a8:	ubfiz	x0, x2, #4, #31
    f4ac:	lsl	w22, w2, #1
    f4b0:	sub	sp, sp, x0
    f4b4:	ubfiz	x2, x2, #3, #32
    f4b8:	mov	x0, sp
    f4bc:	bl	52b0 <memcpy@plt>
    f4c0:	sub	w2, w22, w20
    f4c4:	mov	x1, x0
    f4c8:	cmp	x2, x21
    f4cc:	b.cs	fd44 <gcc_cp_fe_context@@Base+0x6024>  // b.hs, b.nlast
    f4d0:	mov	w2, w22
    f4d4:	cmp	w2, w19
    f4d8:	b.ls	f4a8 <gcc_cp_fe_context@@Base+0x5788>  // b.plast
    f4dc:	b	efc8 <gcc_cp_fe_context@@Base+0x52a8>
    f4e0:	add	x0, x26, #0x1
    f4e4:	sub	w1, w7, w20
    f4e8:	sub	x0, x0, x21
    f4ec:	mov	w5, w7
    f4f0:	add	x0, x0, x0, lsl #1
    f4f4:	add	x2, x0, #0x4
    f4f8:	mov	x3, x2
    f4fc:	cmp	x1, x2
    f500:	b.cs	f580 <gcc_cp_fe_context@@Base+0x5860>  // b.hs, b.nlast
    f504:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    f508:	mov	w1, #0x13                  	// #19
    f50c:	mov	w2, w7
    f510:	stp	x10, x4, [x29, #144]
    f514:	ldr	x0, [x0, #3952]
    f518:	stp	x8, x21, [x29, #160]
    f51c:	stp	x11, x28, [x29, #176]
    f520:	ldr	w0, [x0]
    f524:	mul	w0, w0, w1
    f528:	mov	x1, x19
    f52c:	mov	x19, x3
    f530:	mov	w28, w0
    f534:	b	f53c <gcc_cp_fe_context@@Base+0x581c>
    f538:	mov	w2, w21
    f53c:	cmp	w2, w28
    f540:	b.hi	efc8 <gcc_cp_fe_context@@Base+0x52a8>  // b.pmore
    f544:	ubfiz	x0, x2, #4, #31
    f548:	lsl	w21, w2, #1
    f54c:	sub	sp, sp, x0
    f550:	ubfiz	x2, x2, #3, #32
    f554:	mov	x0, sp
    f558:	bl	52b0 <memcpy@plt>
    f55c:	sub	w2, w21, w20
    f560:	mov	x1, x0
    f564:	cmp	x2, x19
    f568:	b.cc	f538 <gcc_cp_fe_context@@Base+0x5818>  // b.lo, b.ul, b.last
    f56c:	mov	w5, w21
    f570:	mov	x19, x0
    f574:	ldp	x10, x4, [x29, #144]
    f578:	ldp	x8, x21, [x29, #160]
    f57c:	ldp	x11, x28, [x29, #176]
    f580:	cmp	x21, x26
    f584:	b.hi	f5c0 <gcc_cp_fe_context@@Base+0x58a0>  // b.pmore
    f588:	mov	x0, x21
    f58c:	nop
    f590:	add	w2, w20, #0x1
    f594:	add	w1, w20, #0x2
    f598:	ldr	x3, [x23, x0, lsl #3]
    f59c:	str	x3, [x19, w20, uxtw #3]
    f5a0:	ldr	x3, [x24, x0, lsl #3]
    f5a4:	str	x3, [x19, x2, lsl #3]
    f5a8:	ldr	x2, [x22, x0, lsl #3]
    f5ac:	str	x2, [x19, w1, uxtw #3]
    f5b0:	add	x0, x0, #0x1
    f5b4:	add	w20, w20, #0x3
    f5b8:	cmp	x26, x0
    f5bc:	b.cs	f590 <gcc_cp_fe_context@@Base+0x5870>  // b.hs, b.nlast
    f5c0:	add	w1, w20, #0x1
    f5c4:	ubfiz	x0, x20, #3, #32
    f5c8:	add	w2, w20, #0x2
    f5cc:	mov	w7, w5
    f5d0:	lsl	x1, x1, #3
    f5d4:	add	x6, x11, #0x3
    f5d8:	str	w21, [x19, x0]
    f5dc:	add	w0, w20, #0x3
    f5e0:	add	w20, w20, #0x4
    f5e4:	str	w26, [x19, x1]
    f5e8:	str	xzr, [x19, x2, lsl #3]
    f5ec:	str	xzr, [x19, w0, uxtw #3]
    f5f0:	b	ed98 <gcc_cp_fe_context@@Base+0x5078>
    f5f4:	ldrsb	w1, [x11, #2]
    f5f8:	add	x6, x11, #0x3
    f5fc:	ldrb	w9, [x11, #1]
    f600:	mov	x0, x6
    f604:	add	w9, w9, w1, lsl #8
    f608:	add	x2, x0, #0x2
    f60c:	cmp	x2, x8
    f610:	b.cs	f628 <gcc_cp_fe_context@@Base+0x5908>  // b.hs, b.nlast
    f614:	ldrb	w1, [x0]
    f618:	sub	w1, w1, #0x6
    f61c:	and	w1, w1, #0xff
    f620:	cmp	w1, #0x1
    f624:	b.ls	fd24 <gcc_cp_fe_context@@Base+0x6004>  // b.plast
    f628:	add	x1, x0, #0x6
    f62c:	cmp	x1, x8
    f630:	b.cs	f648 <gcc_cp_fe_context@@Base+0x5928>  // b.hs, b.nlast
    f634:	ldrb	w3, [x0]
    f638:	cmp	w3, #0x13
    f63c:	b.ne	f648 <gcc_cp_fe_context@@Base+0x5928>  // b.any
    f640:	mov	x0, x1
    f644:	b	f608 <gcc_cp_fe_context@@Base+0x58e8>
    f648:	add	x1, x6, w9, sxtw
    f64c:	str	x1, [x29, #408]
    f650:	cmp	x0, x8
    f654:	b.eq	ff80 <gcc_cp_fe_context@@Base+0x6260>  // b.none
    f658:	ldrb	w5, [x0]
    f65c:	cmp	w5, #0x2
    f660:	b.eq	ff28 <gcc_cp_fe_context@@Base+0x6208>  // b.none
    f664:	ldr	x3, [x29, #288]
    f668:	ldrsb	w9, [x3, #56]
    f66c:	cmp	w9, #0x0
    f670:	ccmp	w5, #0xa, #0x0, lt  // lt = tstop
    f674:	b.eq	103b8 <gcc_cp_fe_context@@Base+0x6698>  // b.none
    f678:	cmp	w5, #0x4
    f67c:	b.eq	10270 <gcc_cp_fe_context@@Base+0x6550>  // b.none
    f680:	ldrb	w0, [x11]
    f684:	cmp	w0, #0x11
    f688:	b.eq	fba0 <gcc_cp_fe_context@@Base+0x5e80>  // b.none
    f68c:	mov	w0, #0xd                   	// #13
    f690:	strb	w0, [x11]
    f694:	b	ed98 <gcc_cp_fe_context@@Base+0x5078>
    f698:	ldr	x0, [x29, #328]
    f69c:	mov	x11, x5
    f6a0:	cmp	x27, x0
    f6a4:	b.eq	eaf0 <gcc_cp_fe_context@@Base+0x4dd0>  // b.none
    f6a8:	cbz	w20, f788 <gcc_cp_fe_context@@Base+0x5a68>
    f6ac:	sub	w2, w20, #0x1
    f6b0:	sub	w0, w20, #0x3
    f6b4:	sub	w3, w20, #0x4
    f6b8:	sub	w1, w20, #0x2
    f6bc:	lsl	x0, x0, #3
    f6c0:	ubfiz	x5, x3, #3, #32
    f6c4:	ldr	x2, [x19, x2, lsl #3]
    f6c8:	ldrsw	x26, [x19, x0]
    f6cc:	ldrsw	x21, [x19, x5]
    f6d0:	cmp	x2, #0x0
    f6d4:	csel	x27, x27, x2, eq  // eq = none
    f6d8:	cmp	x26, x21
    f6dc:	ldr	x11, [x19, x1, lsl #3]
    f6e0:	b.cc	fd1c <gcc_cp_fe_context@@Base+0x5ffc>  // b.lo, b.ul, b.last
    f6e4:	sub	w1, w20, #0x7
    f6e8:	mov	x0, x26
    f6ec:	nop
    f6f0:	add	w3, w1, #0x2
    f6f4:	add	w2, w1, #0x1
    f6f8:	ldr	x5, [x19, w1, uxtw #3]
    f6fc:	str	x5, [x23, x0, lsl #3]
    f700:	ldr	x3, [x19, x3, lsl #3]
    f704:	str	x3, [x22, x0, lsl #3]
    f708:	ldr	x2, [x19, x2, lsl #3]
    f70c:	str	x2, [x24, x0, lsl #3]
    f710:	sub	x0, x0, #0x1
    f714:	mov	w20, w1
    f718:	cmp	x21, x0
    f71c:	sub	w1, w1, #0x3
    f720:	b.ls	f6f0 <gcc_cp_fe_context@@Base+0x59d0>  // b.plast
    f724:	cbz	x11, f6a8 <gcc_cp_fe_context@@Base+0x5988>
    f728:	cmp	x8, x11
    f72c:	b.ls	f74c <gcc_cp_fe_context@@Base+0x5a2c>  // b.plast
    f730:	ldrb	w0, [x11]
    f734:	cmp	w0, #0x12
    f738:	b.hi	fca4 <gcc_cp_fe_context@@Base+0x5f84>  // b.pmore
    f73c:	cmp	w0, #0x10
    f740:	b.hi	fcdc <gcc_cp_fe_context@@Base+0x5fbc>  // b.pmore
    f744:	cmp	w0, #0xd
    f748:	b.eq	fcdc <gcc_cp_fe_context@@Base+0x5fbc>  // b.none
    f74c:	ldr	x0, [x29, #384]
    f750:	str	wzr, [x29, #368]
    f754:	cmp	x0, x27
    f758:	ldr	x0, [x29, #392]
    f75c:	ccmp	x27, x0, #0x2, ls  // ls = plast
    f760:	ldr	x0, [x29, #376]
    f764:	csel	x25, x0, x25, ls  // ls = plast
    f768:	b	eaf0 <gcc_cp_fe_context@@Base+0x4dd0>
    f76c:	ldr	w0, [x29, #356]
    f770:	mov	x11, x5
    f774:	cmp	w0, #0x0
    f778:	ldr	x0, [x29, #304]
    f77c:	ccmp	x27, x0, #0x4, ne  // ne = any
    f780:	b.eq	eaf0 <gcc_cp_fe_context@@Base+0x4dd0>  // b.none
    f784:	cbnz	w20, f6ac <gcc_cp_fe_context@@Base+0x598c>
    f788:	ldr	w0, [x29, #336]
    f78c:	mov	x26, x28
    f790:	mov	x25, x4
    f794:	cbz	w0, 103a0 <gcc_cp_fe_context@@Base+0x6680>
    f798:	ldp	x1, x2, [x29, #384]
    f79c:	ldr	x0, [x29, #344]
    f7a0:	mov	x27, x0
    f7a4:	cmp	x0, x1
    f7a8:	cset	w1, cs  // cs = hs, nlast
    f7ac:	cmp	x0, x2
    f7b0:	cset	w0, ls  // ls = plast
    f7b4:	and	w1, w1, w0
    f7b8:	ldr	x0, [x29, #376]
    f7bc:	cmp	w1, #0x0
    f7c0:	csel	x5, x26, x0, eq  // eq = none
    f7c4:	ldr	x0, [x29, #320]
    f7c8:	cmp	x0, #0x1
    f7cc:	b.ls	f7f4 <gcc_cp_fe_context@@Base+0x5ad4>  // b.plast
    f7d0:	ldp	x3, x2, [x29, #224]
    f7d4:	mov	x0, #0x8                   	// #8
    f7d8:	ldr	x1, [x2, x0]
    f7dc:	str	x1, [x23, x0]
    f7e0:	ldr	x1, [x3, x0]
    f7e4:	str	x1, [x24, x0]
    f7e8:	add	x0, x0, #0x8
    f7ec:	cmp	x10, x0
    f7f0:	b.ne	f7d8 <gcc_cp_fe_context@@Base+0x5ab8>  // b.any
    f7f4:	ldr	x0, [x29, #264]
    f7f8:	cbz	x0, f980 <gcc_cp_fe_context@@Base+0x5c60>
    f7fc:	ldr	x0, [x29, #288]
    f800:	ldrb	w0, [x0, #56]
    f804:	tbnz	w0, #4, f980 <gcc_cp_fe_context@@Base+0x5c60>
    f808:	ands	w0, w0, #0x6
    f80c:	b.eq	100c8 <gcc_cp_fe_context@@Base+0x63a8>  // b.none
    f810:	ldr	x1, [x29, #264]
    f814:	cmp	w0, #0x2
    f818:	ldr	x3, [x29, #320]
    f81c:	ldr	w20, [x1]
    f820:	mov	w19, w3
    f824:	b.ne	f888 <gcc_cp_fe_context@@Base+0x5b68>  // b.any
    f828:	ldr	x0, [x29, #192]
    f82c:	add	x0, x0, #0x2
    f830:	cmp	x0, w20, uxtw
    f834:	b.ls	f888 <gcc_cp_fe_context@@Base+0x5b68>  // b.plast
    f838:	mov	x20, x1
    f83c:	add	w1, w3, #0x1
    f840:	str	x5, [x29, #368]
    f844:	ldr	x0, [x20, #8]
    f848:	str	w1, [x20]
    f84c:	ubfiz	x1, x1, #2, #32
    f850:	bl	5470 <realloc@plt>
    f854:	mov	x1, x0
    f858:	ldr	x0, [x20, #16]
    f85c:	str	x1, [x20, #8]
    f860:	ldr	w1, [x20]
    f864:	lsl	x1, x1, #2
    f868:	bl	5470 <realloc@plt>
    f86c:	ldr	x1, [x20, #8]
    f870:	str	x0, [x20, #16]
    f874:	cmp	x1, #0x0
    f878:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    f87c:	b.eq	efc8 <gcc_cp_fe_context@@Base+0x52a8>  // b.none
    f880:	ldr	w20, [x20]
    f884:	ldr	x5, [x29, #368]
    f888:	cbz	w20, f980 <gcc_cp_fe_context@@Base+0x5c60>
    f88c:	ldr	x11, [x29, #264]
    f890:	sub	x0, x27, x25
    f894:	ldp	x1, x12, [x29, #376]
    f898:	ldp	x7, x6, [x11, #8]
    f89c:	ldr	w9, [x29, #352]
    f8a0:	ldr	w2, [x29, #340]
    f8a4:	cmp	x1, x5
    f8a8:	add	w0, w9, w0
    f8ac:	sub	x1, x27, x12
    f8b0:	str	w2, [x7]
    f8b4:	csel	w0, w0, w1, ne  // ne = any
    f8b8:	str	w0, [x6]
    f8bc:	ldr	x8, [x29, #320]
    f8c0:	ldr	w4, [x11]
    f8c4:	mov	w0, w4
    f8c8:	cmp	x0, x8
    f8cc:	csel	x0, x0, x8, ls  // ls = plast
    f8d0:	cmp	x0, #0x1
    f8d4:	b.ls	f954 <gcc_cp_fe_context@@Base+0x5c34>  // b.plast
    f8d8:	adrp	x0, 2b000 <xexit@@Base+0x15e10>
    f8dc:	add	x0, x0, #0x5f8
    f8e0:	ldr	x13, [x29, #392]
    f8e4:	add	x0, x0, #0x100
    f8e8:	mov	x1, #0x1                   	// #1
    f8ec:	mov	w10, #0xffffffff            	// #-1
    f8f0:	ldr	x2, [x23, x1, lsl #3]
    f8f4:	lsl	x4, x1, #2
    f8f8:	cmp	x2, x0
    f8fc:	b.eq	ffa8 <gcc_cp_fe_context@@Base+0x6288>  // b.none
    f900:	ldr	x3, [x24, x1, lsl #3]
    f904:	cmp	x3, x0
    f908:	b.eq	ffa8 <gcc_cp_fe_context@@Base+0x6288>  // b.none
    f90c:	cmp	x2, x13
    f910:	ccmp	x2, x12, #0x0, ls  // ls = plast
    f914:	ccmp	w9, #0x0, #0x4, cs  // cs = hs, nlast
    f918:	b.ne	ffb4 <gcc_cp_fe_context@@Base+0x6294>  // b.any
    f91c:	sub	x2, x2, x25
    f920:	add	w2, w9, w2
    f924:	str	w2, [x7, x4]
    f928:	cbnz	w9, ffbc <gcc_cp_fe_context@@Base+0x629c>
    f92c:	sub	x3, x3, x25
    f930:	add	w2, w9, w3
    f934:	str	w2, [x6, x4]
    f938:	ldr	w4, [x11]
    f93c:	add	x1, x1, #0x1
    f940:	mov	w2, w4
    f944:	cmp	x2, x8
    f948:	csel	x2, x2, x8, ls  // ls = plast
    f94c:	cmp	x2, x1
    f950:	b.hi	f8f0 <gcc_cp_fe_context@@Base+0x5bd0>  // b.pmore
    f954:	cmp	w4, w19
    f958:	b.ls	f980 <gcc_cp_fe_context@@Base+0x5c60>  // b.plast
    f95c:	ldrsw	x0, [x29, #320]
    f960:	mov	w1, #0xffffffff            	// #-1
    f964:	ldr	x3, [x29, #264]
    f968:	str	w1, [x6, x0, lsl #2]
    f96c:	str	w1, [x7, x0, lsl #2]
    f970:	add	x0, x0, #0x1
    f974:	ldr	w2, [x3]
    f978:	cmp	w2, w0
    f97c:	b.hi	f968 <gcc_cp_fe_context@@Base+0x5c48>  // b.pmore
    f980:	ldr	x0, [x29, #312]
    f984:	sub	x9, x25, x0
    f988:	ldr	x0, [x29, #376]
    f98c:	cmp	x0, x5
    f990:	ldr	x0, [x29, #384]
    f994:	csel	x1, x9, x0, ne  // ne = any
    f998:	ldr	x0, [x29, #256]
    f99c:	mov	sp, x29
    f9a0:	sub	x0, x27, x0
    f9a4:	sub	w0, w0, w1
    f9a8:	ldp	x19, x20, [sp, #16]
    f9ac:	ldp	x21, x22, [sp, #32]
    f9b0:	ldp	x23, x24, [sp, #48]
    f9b4:	ldp	x25, x26, [sp, #64]
    f9b8:	ldp	x27, x28, [sp, #80]
    f9bc:	ldp	x29, x30, [sp], #416
    f9c0:	ret
    f9c4:	ldr	x0, [x29, #328]
    f9c8:	cmp	x27, x0
    f9cc:	b.eq	10140 <gcc_cp_fe_context@@Base+0x6420>  // b.none
    f9d0:	ldr	x0, [x29, #392]
    f9d4:	cmp	x27, x0
    f9d8:	b.eq	ff8c <gcc_cp_fe_context@@Base+0x626c>  // b.none
    f9dc:	ldrb	w0, [x27]
    f9e0:	cmp	w0, #0xa
    f9e4:	cset	w0, eq  // eq = none
    f9e8:	cbz	w0, f6a8 <gcc_cp_fe_context@@Base+0x5988>
    f9ec:	ldr	x0, [x29, #288]
    f9f0:	mov	x11, x5
    f9f4:	ldrsb	w0, [x0, #56]
    f9f8:	tbnz	w0, #31, eaf0 <gcc_cp_fe_context@@Base+0x4dd0>
    f9fc:	b	f6a8 <gcc_cp_fe_context@@Base+0x5988>
    fa00:	ldr	w0, [x29, #356]
    fa04:	cmp	w0, #0x0
    fa08:	ldr	x0, [x29, #304]
    fa0c:	ccmp	x27, x0, #0x4, ne  // ne = any
    fa10:	b.ne	100a8 <gcc_cp_fe_context@@Base+0x6388>  // b.any
    fa14:	ldr	x0, [x29, #288]
    fa18:	mov	x11, x5
    fa1c:	ldrb	w0, [x0, #56]
    fa20:	tbz	w0, #5, eaf0 <gcc_cp_fe_context@@Base+0x4dd0>
    fa24:	b	f6a8 <gcc_cp_fe_context@@Base+0x5988>
    fa28:	ldr	w0, [x29, #356]
    fa2c:	cmp	w0, #0x0
    fa30:	ldr	x0, [x29, #304]
    fa34:	ccmp	x27, x0, #0x4, ne  // ne = any
    fa38:	b.eq	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.none
    fa3c:	ldr	x1, [x29, #392]
    fa40:	sub	x0, x27, #0x1
    fa44:	cmp	x1, x0
    fa48:	b.eq	ff20 <gcc_cp_fe_context@@Base+0x6200>  // b.none
    fa4c:	cmp	x4, x27
    fa50:	b.eq	1023c <gcc_cp_fe_context@@Base+0x651c>  // b.none
    fa54:	ldurb	w0, [x27, #-1]
    fa58:	ldr	x1, [x29, #296]
    fa5c:	ldrb	w0, [x1, w0, sxtw]
    fa60:	cmp	w0, #0x1
    fa64:	b.ne	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.any
    fa68:	ldr	x0, [x29, #328]
    fa6c:	cmp	x27, x0
    fa70:	b.eq	eeac <gcc_cp_fe_context@@Base+0x518c>  // b.none
    fa74:	ldr	x0, [x29, #392]
    fa78:	cmp	x27, x0
    fa7c:	b.eq	10180 <gcc_cp_fe_context@@Base+0x6460>  // b.none
    fa80:	sub	x0, x4, #0x1
    fa84:	cmp	x27, x0
    fa88:	b.eq	10208 <gcc_cp_fe_context@@Base+0x64e8>  // b.none
    fa8c:	ldrb	w0, [x27]
    fa90:	ldr	x1, [x29, #296]
    fa94:	mov	x11, x5
    fa98:	ldrb	w0, [x1, w0, sxtw]
    fa9c:	cmp	w0, #0x1
    faa0:	b.ne	eaf0 <gcc_cp_fe_context@@Base+0x4dd0>  // b.any
    faa4:	b	f6a8 <gcc_cp_fe_context@@Base+0x5988>
    faa8:	ldr	x0, [x29, #328]
    faac:	cmp	x27, x0
    fab0:	b.eq	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.none
    fab4:	ldr	x0, [x29, #392]
    fab8:	cmp	x27, x0
    fabc:	b.eq	10154 <gcc_cp_fe_context@@Base+0x6434>  // b.none
    fac0:	sub	x0, x4, #0x1
    fac4:	cmp	x27, x0
    fac8:	b.eq	ff9c <gcc_cp_fe_context@@Base+0x627c>  // b.none
    facc:	ldrb	w0, [x27]
    fad0:	ldr	x1, [x29, #296]
    fad4:	ldrb	w0, [x1, w0, sxtw]
    fad8:	cmp	w0, #0x1
    fadc:	b.ne	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.any
    fae0:	ldr	w0, [x29, #356]
    fae4:	cmp	w0, #0x0
    fae8:	ldr	x0, [x29, #304]
    faec:	ccmp	x27, x0, #0x4, ne  // ne = any
    faf0:	b.eq	eeac <gcc_cp_fe_context@@Base+0x518c>  // b.none
    faf4:	ldr	x1, [x29, #392]
    faf8:	sub	x0, x27, #0x1
    fafc:	cmp	x1, x0
    fb00:	b.eq	10180 <gcc_cp_fe_context@@Base+0x6460>  // b.none
    fb04:	cmp	x4, x27
    fb08:	b.eq	10208 <gcc_cp_fe_context@@Base+0x64e8>  // b.none
    fb0c:	ldurb	w0, [x27, #-1]
    fb10:	b	fa90 <gcc_cp_fe_context@@Base+0x5d70>
    fb14:	ldr	x0, [x29, #304]
    fb18:	cmp	x27, x0
    fb1c:	b.eq	eeac <gcc_cp_fe_context@@Base+0x518c>  // b.none
    fb20:	ldr	w0, [x29, #356]
    fb24:	cmp	w0, #0x0
    fb28:	ldr	x0, [x29, #328]
    fb2c:	ccmp	x27, x0, #0x4, ne  // ne = any
    fb30:	b.eq	eeac <gcc_cp_fe_context@@Base+0x518c>  // b.none
    fb34:	ldr	x1, [x29, #392]
    fb38:	sub	x0, x27, #0x1
    fb3c:	cmp	x1, x0
    fb40:	b.eq	101f8 <gcc_cp_fe_context@@Base+0x64d8>  // b.none
    fb44:	cmp	x4, x27
    fb48:	b.eq	102dc <gcc_cp_fe_context@@Base+0x65bc>  // b.none
    fb4c:	ldurb	w0, [x27, #-1]
    fb50:	ldr	x1, [x29, #296]
    fb54:	ldrb	w0, [x1, w0, sxtw]
    fb58:	cmp	w0, #0x1
    fb5c:	ldr	x0, [x29, #392]
    fb60:	cset	w1, eq  // eq = none
    fb64:	cmp	x27, x0
    fb68:	b.eq	101f0 <gcc_cp_fe_context@@Base+0x64d0>  // b.none
    fb6c:	sub	x0, x4, #0x1
    fb70:	cmp	x27, x0
    fb74:	b.eq	102e8 <gcc_cp_fe_context@@Base+0x65c8>  // b.none
    fb78:	ldrb	w0, [x27]
    fb7c:	ldr	x2, [x29, #296]
    fb80:	mov	x11, x5
    fb84:	ldrb	w0, [x2, w0, sxtw]
    fb88:	cmp	w0, #0x1
    fb8c:	cset	w0, eq  // eq = none
    fb90:	cmp	w0, w1
    fb94:	b.ne	eaf0 <gcc_cp_fe_context@@Base+0x4dd0>  // b.any
    fb98:	b	f6a8 <gcc_cp_fe_context@@Base+0x5988>
    fb9c:	add	x6, x11, #0x3
    fba0:	sub	w0, w20, #0x3
    fba4:	sub	w1, w20, #0x4
    fba8:	lsl	x0, x0, #3
    fbac:	ubfiz	x2, x1, #3, #32
    fbb0:	ldrsw	x0, [x19, x0]
    fbb4:	ldrsw	x5, [x19, x2]
    fbb8:	cmp	x0, x5
    fbbc:	b.cc	10254 <gcc_cp_fe_context@@Base+0x6534>  // b.lo, b.ul, b.last
    fbc0:	ldp	x9, x3, [x29, #200]
    fbc4:	sub	w1, w20, #0x7
    fbc8:	add	w2, w1, #0x2
    fbcc:	mov	w20, w1
    fbd0:	ldr	x1, [x19, w1, uxtw #3]
    fbd4:	str	x1, [x3, x0, lsl #3]
    fbd8:	ldr	x1, [x19, x2, lsl #3]
    fbdc:	str	x1, [x9, x0, lsl #3]
    fbe0:	sub	x0, x0, #0x1
    fbe4:	sub	w1, w20, #0x3
    fbe8:	cmp	x5, x0
    fbec:	b.ls	fbc8 <gcc_cp_fe_context@@Base+0x5ea8>  // b.plast
    fbf0:	str	wzr, [x29, #368]
    fbf4:	b	ed98 <gcc_cp_fe_context@@Base+0x5078>
    fbf8:	add	x0, x26, #0x1
    fbfc:	ldrsb	w5, [x11, #2]
    fc00:	ldrb	w2, [x11, #1]
    fc04:	sub	x0, x0, x21
    fc08:	sub	w1, w7, w20
    fc0c:	add	x11, x11, #0x3
    fc10:	add	x0, x0, x0, lsl #1
    fc14:	add	x3, x0, #0x4
    fc18:	add	w0, w2, w5, lsl #8
    fc1c:	str	w0, [x29, #184]
    fc20:	cmp	x3, x1
    fc24:	b.ls	10260 <gcc_cp_fe_context@@Base+0x6540>  // b.plast
    fc28:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
    fc2c:	mov	w1, #0x13                  	// #19
    fc30:	stp	x10, x4, [x29, #136]
    fc34:	mov	w2, w7
    fc38:	ldr	x0, [x0, #3952]
    fc3c:	stp	x8, x22, [x29, #152]
    fc40:	stp	x21, x11, [x29, #168]
    fc44:	mov	x21, x3
    fc48:	ldr	w0, [x0]
    fc4c:	mul	w0, w0, w1
    fc50:	mov	x1, x19
    fc54:	mov	w19, w0
    fc58:	cmp	w2, w19
    fc5c:	b.hi	efc8 <gcc_cp_fe_context@@Base+0x52a8>  // b.pmore
    fc60:	ubfiz	x0, x2, #4, #31
    fc64:	lsl	w22, w2, #1
    fc68:	sub	sp, sp, x0
    fc6c:	ubfiz	x2, x2, #3, #32
    fc70:	mov	x0, sp
    fc74:	bl	52b0 <memcpy@plt>
    fc78:	sub	w2, w22, w20
    fc7c:	mov	x1, x0
    fc80:	cmp	x2, x21
    fc84:	b.cs	ffd0 <gcc_cp_fe_context@@Base+0x62b0>  // b.hs, b.nlast
    fc88:	mov	w2, w22
    fc8c:	cmp	w2, w19
    fc90:	b.ls	fc60 <gcc_cp_fe_context@@Base+0x5f40>  // b.plast
    fc94:	b	efc8 <gcc_cp_fe_context@@Base+0x52a8>
    fc98:	mov	x11, x1
    fc9c:	str	wzr, [x29, #368]
    fca0:	b	eaf0 <gcc_cp_fe_context@@Base+0x4dd0>
    fca4:	cmp	w0, #0x16
    fca8:	b.ne	f74c <gcc_cp_fe_context@@Base+0x5a2c>  // b.any
    fcac:	add	x0, x11, #0x1
    fcb0:	str	x0, [x29, #408]
    fcb4:	add	x0, x11, #0x3
    fcb8:	ldrb	w2, [x11, #1]
    fcbc:	ldrsb	w1, [x11, #2]
    fcc0:	add	w1, w2, w1, lsl #8
    fcc4:	add	x2, x0, w1, sxtw
    fcc8:	str	x2, [x29, #408]
    fccc:	ldrb	w0, [x0, w1, sxtw]
    fcd0:	cmp	w0, #0x15
    fcd4:	b.ne	f74c <gcc_cp_fe_context@@Base+0x5a2c>  // b.any
    fcd8:	b	f6a8 <gcc_cp_fe_context@@Base+0x5988>
    fcdc:	add	x0, x11, #0x1
    fce0:	str	x0, [x29, #408]
    fce4:	add	x0, x11, #0x3
    fce8:	ldrb	w2, [x11, #1]
    fcec:	ldrsb	w1, [x11, #2]
    fcf0:	add	w1, w2, w1, lsl #8
    fcf4:	add	x2, x0, w1, sxtw
    fcf8:	str	x2, [x29, #408]
    fcfc:	ldrb	w0, [x0, w1, sxtw]
    fd00:	cmp	w0, #0xf
    fd04:	b.eq	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.none
    fd08:	b	f74c <gcc_cp_fe_context@@Base+0x5a2c>
    fd0c:	ldr	x0, [x29, #344]
    fd10:	cmp	x27, x0
    fd14:	cset	w0, hi  // hi = pmore
    fd18:	b	ecc8 <gcc_cp_fe_context@@Base+0x4fa8>
    fd1c:	mov	w20, w3
    fd20:	b	f724 <gcc_cp_fe_context@@Base+0x5a04>
    fd24:	add	x1, x0, #0x3
    fd28:	mov	x0, x1
    fd2c:	b	f608 <gcc_cp_fe_context@@Base+0x58e8>
    fd30:	cmp	x28, x25
    fd34:	b.eq	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.none
    fd38:	mov	x25, x28
    fd3c:	mov	x27, x4
    fd40:	b	f0d8 <gcc_cp_fe_context@@Base+0x53b8>
    fd44:	mov	w9, w22
    fd48:	mov	x19, x0
    fd4c:	ldp	x10, x4, [x29, #144]
    fd50:	ldp	x5, x8, [x29, #160]
    fd54:	ldp	x22, x21, [x29, #176]
    fd58:	cmp	x21, x26
    fd5c:	b.hi	fd98 <gcc_cp_fe_context@@Base+0x6078>  // b.pmore
    fd60:	mov	x0, x21
    fd64:	nop
    fd68:	add	w2, w20, #0x1
    fd6c:	add	w1, w20, #0x2
    fd70:	ldr	x3, [x23, x0, lsl #3]
    fd74:	str	x3, [x19, w20, uxtw #3]
    fd78:	ldr	x3, [x24, x0, lsl #3]
    fd7c:	str	x3, [x19, x2, lsl #3]
    fd80:	ldr	x2, [x22, x0, lsl #3]
    fd84:	str	x2, [x19, w1, uxtw #3]
    fd88:	add	x0, x0, #0x1
    fd8c:	add	w20, w20, #0x3
    fd90:	cmp	x26, x0
    fd94:	b.cs	fd68 <gcc_cp_fe_context@@Base+0x6048>  // b.hs, b.nlast
    fd98:	add	w1, w20, #0x1
    fd9c:	ubfiz	x0, x20, #3, #32
    fda0:	add	w2, w20, #0x2
    fda4:	mov	w7, w9
    fda8:	lsl	x1, x1, #3
    fdac:	mov	x11, x5
    fdb0:	str	w21, [x19, x0]
    fdb4:	add	w0, w20, #0x3
    fdb8:	add	w20, w20, #0x4
    fdbc:	str	w26, [x19, x1]
    fdc0:	str	xzr, [x19, x2, lsl #3]
    fdc4:	str	xzr, [x19, w0, uxtw #3]
    fdc8:	b	eaf0 <gcc_cp_fe_context@@Base+0x4dd0>
    fdcc:	mov	w6, w22
    fdd0:	mov	x19, x0
    fdd4:	ldp	x10, x4, [x29, #136]
    fdd8:	ldp	x8, x22, [x29, #152]
    fddc:	ldp	x21, x11, [x29, #168]
    fde0:	cmp	x21, x26
    fde4:	b.hi	fe20 <gcc_cp_fe_context@@Base+0x6100>  // b.pmore
    fde8:	mov	x0, x21
    fdec:	nop
    fdf0:	add	w2, w20, #0x1
    fdf4:	add	w1, w20, #0x2
    fdf8:	ldr	x3, [x23, x0, lsl #3]
    fdfc:	str	x3, [x19, w20, uxtw #3]
    fe00:	ldr	x3, [x24, x0, lsl #3]
    fe04:	str	x3, [x19, x2, lsl #3]
    fe08:	ldr	x2, [x22, x0, lsl #3]
    fe0c:	str	x2, [x19, w1, uxtw #3]
    fe10:	add	x0, x0, #0x1
    fe14:	add	w20, w20, #0x3
    fe18:	cmp	x0, x26
    fe1c:	b.ls	fdf0 <gcc_cp_fe_context@@Base+0x60d0>  // b.plast
    fe20:	add	w2, w20, #0x1
    fe24:	ubfiz	x0, x20, #3, #32
    fe28:	add	w5, w20, #0x2
    fe2c:	ldr	w1, [x29, #184]
    fe30:	lsl	x2, x2, #3
    fe34:	mov	w7, w6
    fe38:	str	w21, [x19, x0]
    fe3c:	add	w0, w20, #0x3
    fe40:	add	x1, x11, w1, sxtw
    fe44:	add	w20, w20, #0x4
    fe48:	str	w26, [x19, x2]
    fe4c:	str	x1, [x19, x5, lsl #3]
    fe50:	str	x27, [x19, w0, uxtw #3]
    fe54:	b	eaf0 <gcc_cp_fe_context@@Base+0x4dd0>
    fe58:	mov	x21, #0x0                   	// #0
    fe5c:	cbz	w1, f254 <gcc_cp_fe_context@@Base+0x5534>
    fe60:	sub	w15, w1, #0x1
    fe64:	mov	x0, #0x0                   	// #0
    fe68:	b	fe78 <gcc_cp_fe_context@@Base+0x6158>
    fe6c:	cmp	x15, x0
    fe70:	add	x0, x0, #0x1
    fe74:	b.eq	10268 <gcc_cp_fe_context@@Base+0x6548>  // b.none
    fe78:	ldrb	w14, [x27, x0]
    fe7c:	ldrb	w2, [x3, x0]
    fe80:	ldrb	w14, [x26, x14]
    fe84:	ldrb	w2, [x26, x2]
    fe88:	cmp	w14, w2
    fe8c:	b.eq	fe6c <gcc_cp_fe_context@@Base+0x614c>  // b.none
    fe90:	mov	x19, x22
    fe94:	mov	w20, w23
    fe98:	mov	x22, x13
    fe9c:	mov	x23, x24
    fea0:	mov	x24, x12
    fea4:	b	f6a8 <gcc_cp_fe_context@@Base+0x5988>
    fea8:	mov	x5, x25
    feac:	mov	x25, x4
    feb0:	b	f7f4 <gcc_cp_fe_context@@Base+0x5ad4>
    feb4:	sub	w0, w0, #0x1
    feb8:	add	x11, x11, #0x5
    febc:	sturh	w0, [x11, #-2]
    fec0:	b	eaf0 <gcc_cp_fe_context@@Base+0x4dd0>
    fec4:	sub	w0, w2, #0x1
    fec8:	ands	w0, w0, #0xff
    fecc:	b.eq	10448 <gcc_cp_fe_context@@Base+0x6728>  // b.none
    fed0:	and	x26, x0, #0xff
    fed4:	add	x0, x22, w0, uxtb #3
    fed8:	ldrb	w1, [x0]
    fedc:	tbnz	w1, #2, f2f0 <gcc_cp_fe_context@@Base+0x55d0>
    fee0:	sub	x0, x0, #0x8
    fee4:	subs	x26, x26, #0x1
    fee8:	b.ne	fed8 <gcc_cp_fe_context@@Base+0x61b8>  // b.any
    feec:	b	f2e8 <gcc_cp_fe_context@@Base+0x55c8>
    fef0:	mov	w0, #0x0                   	// #0
    fef4:	ldr	x1, [x29, #392]
    fef8:	cmp	x5, x1
    fefc:	ldr	x1, [x29, #384]
    ff00:	ccmp	x5, x1, #0x0, ls  // ls = plast
    ff04:	cset	w1, cs  // cs = hs, nlast
    ff08:	cmp	w1, w0
    ff0c:	ldr	x0, [x29, #376]
    ff10:	csel	x6, x0, x5, ne  // ne = any
    ff14:	b	f1a8 <gcc_cp_fe_context@@Base+0x5488>
    ff18:	ldrb	w0, [x4]
    ff1c:	b	ee68 <gcc_cp_fe_context@@Base+0x5148>
    ff20:	ldrb	w0, [x4]
    ff24:	b	fa58 <gcc_cp_fe_context@@Base+0x5d38>
    ff28:	ldrb	w0, [x0, #2]
    ff2c:	ldrb	w2, [x1, #3]
    ff30:	cmp	w2, #0x2
    ff34:	b.eq	103a8 <gcc_cp_fe_context@@Base+0x6688>  // b.none
    ff38:	sub	w5, w2, #0x4
    ff3c:	and	w5, w5, #0xff
    ff40:	cmp	w5, #0x1
    ff44:	b.hi	f680 <gcc_cp_fe_context@@Base+0x5960>  // b.pmore
    ff48:	ldrb	w5, [x1, #4]
    ff4c:	cmp	w2, #0x5
    ff50:	cset	w9, eq  // eq = none
    ff54:	cmp	w0, w5, lsl #3
    ff58:	b.cs	ff7c <gcc_cp_fe_context@@Base+0x625c>  // b.hs, b.nlast
    ff5c:	lsr	w5, w0, #3
    ff60:	and	w0, w0, #0x7
    ff64:	add	w5, w5, #0x5
    ff68:	ldrb	w1, [x1, w5, sxtw]
    ff6c:	asr	w0, w1, w0
    ff70:	tbz	w0, #0, ff7c <gcc_cp_fe_context@@Base+0x625c>
    ff74:	cmp	w2, #0x5
    ff78:	cset	w9, ne  // ne = any
    ff7c:	cbnz	w9, f680 <gcc_cp_fe_context@@Base+0x5960>
    ff80:	mov	w0, #0x11                  	// #17
    ff84:	strb	w0, [x11]
    ff88:	b	fba0 <gcc_cp_fe_context@@Base+0x5e80>
    ff8c:	ldrb	w0, [x4]
    ff90:	cmp	w0, #0xa
    ff94:	cset	w0, eq  // eq = none
    ff98:	b	f9e8 <gcc_cp_fe_context@@Base+0x5cc8>
    ff9c:	ldr	x0, [x29, #392]
    ffa0:	ldurb	w0, [x0, #-1]
    ffa4:	b	fad0 <gcc_cp_fe_context@@Base+0x5db0>
    ffa8:	str	w10, [x6, x4]
    ffac:	str	w10, [x7, x4]
    ffb0:	b	f938 <gcc_cp_fe_context@@Base+0x5c18>
    ffb4:	sub	x2, x2, x12
    ffb8:	str	w2, [x7, x4]
    ffbc:	cmp	x3, x12
    ffc0:	sub	w2, w3, w12
    ffc4:	ccmp	x3, x13, #0x2, cs  // cs = hs, nlast
    ffc8:	b.hi	f92c <gcc_cp_fe_context@@Base+0x5c0c>  // b.pmore
    ffcc:	b	f934 <gcc_cp_fe_context@@Base+0x5c14>
    ffd0:	mov	w5, w22
    ffd4:	mov	x19, x0
    ffd8:	ldp	x10, x4, [x29, #136]
    ffdc:	ldp	x8, x22, [x29, #152]
    ffe0:	ldp	x21, x11, [x29, #168]
    ffe4:	cmp	x21, x26
    ffe8:	b.hi	10020 <gcc_cp_fe_context@@Base+0x6300>  // b.pmore
    ffec:	mov	x0, x21
    fff0:	add	w2, w20, #0x1
    fff4:	add	w1, w20, #0x2
    fff8:	ldr	x3, [x23, x0, lsl #3]
    fffc:	str	x3, [x19, w20, uxtw #3]
   10000:	ldr	x3, [x24, x0, lsl #3]
   10004:	str	x3, [x19, x2, lsl #3]
   10008:	ldr	x2, [x22, x0, lsl #3]
   1000c:	str	x2, [x19, w1, uxtw #3]
   10010:	add	x0, x0, #0x1
   10014:	add	w20, w20, #0x3
   10018:	cmp	x26, x0
   1001c:	b.cs	fff0 <gcc_cp_fe_context@@Base+0x62d0>  // b.hs, b.nlast
   10020:	add	w2, w20, #0x1
   10024:	ubfiz	x1, x20, #3, #32
   10028:	ldr	w0, [x29, #184]
   1002c:	mov	w7, w5
   10030:	lsl	x2, x2, #3
   10034:	add	w5, w20, #0x2
   10038:	str	w21, [x19, x1]
   1003c:	add	w1, w20, #0x3
   10040:	add	x0, x11, w0, sxtw
   10044:	add	w20, w20, #0x4
   10048:	str	w26, [x19, x2]
   1004c:	str	x0, [x19, x5, lsl #3]
   10050:	mov	w0, w1
   10054:	str	xzr, [x19, w0, uxtw #3]
   10058:	b	eaf0 <gcc_cp_fe_context@@Base+0x4dd0>
   1005c:	cmp	w0, #0x16
   10060:	b.ne	fc98 <gcc_cp_fe_context@@Base+0x5f78>  // b.any
   10064:	ldrsb	w0, [x11, #5]
   10068:	add	x5, x11, #0x8
   1006c:	ldrb	w2, [x11, #4]
   10070:	add	w0, w2, w0, lsl #8
   10074:	b	f348 <gcc_cp_fe_context@@Base+0x5628>
   10078:	cmp	x28, x3
   1007c:	ccmp	x5, x3, #0x4, ne  // ne = any
   10080:	b.ne	101e4 <gcc_cp_fe_context@@Base+0x64c4>  // b.any
   10084:	mov	x21, x20
   10088:	mov	x26, x19
   1008c:	mov	w20, w23
   10090:	mov	x19, x22
   10094:	mov	x23, x24
   10098:	mov	x22, x13
   1009c:	mov	x24, x12
   100a0:	add	x11, x11, #0x2
   100a4:	b	eaf0 <gcc_cp_fe_context@@Base+0x4dd0>
   100a8:	ldurb	w0, [x27, #-1]
   100ac:	cmp	w0, #0xa
   100b0:	b.eq	f9ec <gcc_cp_fe_context@@Base+0x5ccc>  // b.none
   100b4:	b	f6a8 <gcc_cp_fe_context@@Base+0x5988>
   100b8:	mov	x6, x11
   100bc:	sub	w0, w0, #0x1
   100c0:	strh	w0, [x6, #3]!
   100c4:	b	ed98 <gcc_cp_fe_context@@Base+0x5078>
   100c8:	ldr	x0, [x29, #192]
   100cc:	mov	x1, #0x1e                  	// #30
   100d0:	ldr	x21, [x29, #264]
   100d4:	add	x0, x0, #0x2
   100d8:	cmp	x0, x1
   100dc:	str	x5, [x29, #368]
   100e0:	csel	x0, x0, x1, cs  // cs = hs, nlast
   100e4:	str	w0, [x21]
   100e8:	mov	w20, w0
   100ec:	ubfiz	x19, x0, #2, #32
   100f0:	mov	x0, x19
   100f4:	bl	5710 <malloc@plt>
   100f8:	mov	x1, x0
   100fc:	str	x1, [x21, #8]
   10100:	mov	x0, x19
   10104:	mov	x19, x1
   10108:	bl	5710 <malloc@plt>
   1010c:	str	x0, [x21, #16]
   10110:	cmp	x19, #0x0
   10114:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   10118:	ldr	x5, [x29, #368]
   1011c:	b.eq	efc8 <gcc_cp_fe_context@@Base+0x52a8>  // b.none
   10120:	ldr	x2, [x29, #288]
   10124:	mov	w1, #0x1                   	// #1
   10128:	ldr	w19, [x29, #320]
   1012c:	ldrb	w0, [x2, #56]
   10130:	bfi	w0, w1, #1, #2
   10134:	strb	w0, [x2, #56]
   10138:	cbz	w20, f980 <gcc_cp_fe_context@@Base+0x5c60>
   1013c:	b	f88c <gcc_cp_fe_context@@Base+0x5b6c>
   10140:	ldr	x0, [x29, #288]
   10144:	mov	x11, x5
   10148:	ldrb	w0, [x0, #56]
   1014c:	tbz	w0, #6, eaf0 <gcc_cp_fe_context@@Base+0x4dd0>
   10150:	b	f6a8 <gcc_cp_fe_context@@Base+0x5988>
   10154:	ldrb	w0, [x4]
   10158:	b	fad0 <gcc_cp_fe_context@@Base+0x5db0>
   1015c:	tbz	w1, #7, ebdc <gcc_cp_fe_context@@Base+0x4ebc>
   10160:	ldr	x1, [x29, #248]
   10164:	ldrb	w0, [x27]
   10168:	cbz	x1, ebd8 <gcc_cp_fe_context@@Base+0x4eb8>
   1016c:	and	x0, x0, #0xff
   10170:	ldrb	w0, [x1, x0]
   10174:	b	ebd8 <gcc_cp_fe_context@@Base+0x4eb8>
   10178:	ldrb	w0, [x4]
   1017c:	b	ee94 <gcc_cp_fe_context@@Base+0x5174>
   10180:	ldrb	w0, [x4]
   10184:	b	fa90 <gcc_cp_fe_context@@Base+0x5d70>
   10188:	mov	x1, x8
   1018c:	mov	x2, x22
   10190:	add	x0, x29, #0x198
   10194:	stp	x10, x4, [x29, #168]
   10198:	str	x11, [x29, #184]
   1019c:	str	w7, [x29, #240]
   101a0:	str	x8, [x29, #368]
   101a4:	bl	e380 <gcc_cp_fe_context@@Base+0x4660>
   101a8:	ldr	x11, [x29, #184]
   101ac:	ldr	w7, [x29, #240]
   101b0:	ldp	x10, x4, [x29, #168]
   101b4:	ldrb	w1, [x11, #1]
   101b8:	ldr	x8, [x29, #368]
   101bc:	lsl	x1, x1, #3
   101c0:	ldrb	w2, [x22, x1]
   101c4:	bfxil	w2, w0, #0, #2
   101c8:	strb	w2, [x22, x1]
   101cc:	ldrb	w0, [x11, #1]
   101d0:	lsl	x0, x0, #3
   101d4:	add	x2, x22, x0
   101d8:	ldrb	w1, [x22, x0]
   101dc:	and	w1, w1, #0x3
   101e0:	b	f00c <gcc_cp_fe_context@@Base+0x52ec>
   101e4:	mov	x6, x5
   101e8:	mov	x3, x4
   101ec:	b	f1cc <gcc_cp_fe_context@@Base+0x54ac>
   101f0:	ldrb	w0, [x4]
   101f4:	b	fb7c <gcc_cp_fe_context@@Base+0x5e5c>
   101f8:	ldrb	w0, [x4]
   101fc:	b	fb50 <gcc_cp_fe_context@@Base+0x5e30>
   10200:	mov	w6, w7
   10204:	b	fde0 <gcc_cp_fe_context@@Base+0x60c0>
   10208:	ldr	x0, [x29, #392]
   1020c:	ldurb	w0, [x0, #-1]
   10210:	b	fa90 <gcc_cp_fe_context@@Base+0x5d70>
   10214:	ldrb	w0, [x4]
   10218:	b	ec44 <gcc_cp_fe_context@@Base+0x4f24>
   1021c:	ldr	x0, [x29, #392]
   10220:	ldurb	w0, [x0, #-1]
   10224:	b	ee94 <gcc_cp_fe_context@@Base+0x5174>
   10228:	ldrb	w0, [x4]
   1022c:	b	ed50 <gcc_cp_fe_context@@Base+0x5030>
   10230:	ldr	x0, [x29, #392]
   10234:	ldurb	w0, [x0, #-1]
   10238:	b	ee68 <gcc_cp_fe_context@@Base+0x5148>
   1023c:	ldr	x0, [x29, #392]
   10240:	ldurb	w0, [x0, #-1]
   10244:	b	fa58 <gcc_cp_fe_context@@Base+0x5d38>
   10248:	cmp	w0, #0x5
   1024c:	cset	w2, ne  // ne = any
   10250:	b	ee08 <gcc_cp_fe_context@@Base+0x50e8>
   10254:	mov	w20, w1
   10258:	str	wzr, [x29, #368]
   1025c:	b	ed98 <gcc_cp_fe_context@@Base+0x5078>
   10260:	mov	w5, w7
   10264:	b	ffe4 <gcc_cp_fe_context@@Base+0x62c4>
   10268:	sxtw	x21, w1
   1026c:	b	f254 <gcc_cp_fe_context@@Base+0x5534>
   10270:	ldrb	w5, [x1, #3]
   10274:	cmp	w5, #0x2
   10278:	b.eq	103c0 <gcc_cp_fe_context@@Base+0x66a0>  // b.none
   1027c:	cmp	w5, #0x5
   10280:	b.eq	103ec <gcc_cp_fe_context@@Base+0x66cc>  // b.none
   10284:	cmp	w5, #0x4
   10288:	b.ne	f680 <gcc_cp_fe_context@@Base+0x5960>  // b.any
   1028c:	ldrb	w9, [x0, #1]
   10290:	cbz	w9, ff80 <gcc_cp_fe_context@@Base+0x6260>
   10294:	ldrb	w13, [x1, #4]
   10298:	mov	x0, #0x0                   	// #0
   1029c:	add	x1, x1, #0x5
   102a0:	and	x14, x13, #0xff
   102a4:	b	102cc <gcc_cp_fe_context@@Base+0x65ac>
   102a8:	ldrb	w3, [x1, x0]
   102ac:	ldrb	w12, [x2, x0]
   102b0:	and	w3, w3, w12
   102b4:	tst	w3, #0xff
   102b8:	b.ne	f680 <gcc_cp_fe_context@@Base+0x5960>  // b.any
   102bc:	add	x0, x0, #0x1
   102c0:	add	w5, w5, #0x1
   102c4:	cmp	w9, w0
   102c8:	b.le	10458 <gcc_cp_fe_context@@Base+0x6738>
   102cc:	cmp	x14, x0
   102d0:	mov	w5, w0
   102d4:	b.ne	102a8 <gcc_cp_fe_context@@Base+0x6588>  // b.any
   102d8:	b	10460 <gcc_cp_fe_context@@Base+0x6740>
   102dc:	ldr	x0, [x29, #392]
   102e0:	ldurb	w0, [x0, #-1]
   102e4:	b	fb50 <gcc_cp_fe_context@@Base+0x5e30>
   102e8:	ldr	x0, [x29, #392]
   102ec:	ldurb	w0, [x0, #-1]
   102f0:	b	fb7c <gcc_cp_fe_context@@Base+0x5e5c>
   102f4:	cmp	x21, x26
   102f8:	b.hi	ec5c <gcc_cp_fe_context@@Base+0x4f3c>  // b.pmore
   102fc:	add	x2, x22, x21, lsl #3
   10300:	mov	x1, x21
   10304:	ldrb	w0, [x2]
   10308:	add	x1, x1, #0x1
   1030c:	cmp	x26, x1
   10310:	orr	w0, w0, #0x18
   10314:	strb	w0, [x2], #8
   10318:	b.cs	10304 <gcc_cp_fe_context@@Base+0x65e4>  // b.hs, b.nlast
   1031c:	b	ec5c <gcc_cp_fe_context@@Base+0x4f3c>
   10320:	ldr	x0, [x29, #392]
   10324:	ldurb	w0, [x0, #-1]
   10328:	b	ec44 <gcc_cp_fe_context@@Base+0x4f24>
   1032c:	ldr	x0, [x29, #392]
   10330:	ldurb	w0, [x0, #-1]
   10334:	b	ed50 <gcc_cp_fe_context@@Base+0x5030>
   10338:	cmp	w0, #0xa
   1033c:	b.eq	f6a8 <gcc_cp_fe_context@@Base+0x5988>  // b.none
   10340:	tbnz	w1, #7, ebd8 <gcc_cp_fe_context@@Base+0x4eb8>
   10344:	b	ebdc <gcc_cp_fe_context@@Base+0x4ebc>
   10348:	ldr	w2, [x29, #336]
   1034c:	eor	w0, w0, #0x1
   10350:	mov	x5, x25
   10354:	mov	x26, x28
   10358:	mov	x25, x4
   1035c:	tst	w2, w0
   10360:	b.eq	f7f4 <gcc_cp_fe_context@@Base+0x5ad4>  // b.none
   10364:	ldr	x27, [x29, #344]
   10368:	b	f7b8 <gcc_cp_fe_context@@Base+0x5a98>
   1036c:	mov	w0, #0x1                   	// #1
   10370:	b	fef4 <gcc_cp_fe_context@@Base+0x61d4>
   10374:	cmp	x21, x26
   10378:	b.hi	ee14 <gcc_cp_fe_context@@Base+0x50f4>  // b.pmore
   1037c:	add	x2, x22, x21, lsl #3
   10380:	mov	x1, x21
   10384:	ldrb	w0, [x2]
   10388:	add	x1, x1, #0x1
   1038c:	cmp	x26, x1
   10390:	orr	w0, w0, #0x18
   10394:	strb	w0, [x2], #8
   10398:	b.cs	10384 <gcc_cp_fe_context@@Base+0x6664>  // b.hs, b.nlast
   1039c:	b	ee14 <gcc_cp_fe_context@@Base+0x50f4>
   103a0:	mov	w0, #0xffffffff            	// #-1
   103a4:	b	efcc <gcc_cp_fe_context@@Base+0x52ac>
   103a8:	ldrb	w1, [x1, #5]
   103ac:	cmp	w1, w0
   103b0:	b.ne	ff80 <gcc_cp_fe_context@@Base+0x6260>  // b.any
   103b4:	b	f680 <gcc_cp_fe_context@@Base+0x5960>
   103b8:	mov	w0, #0xa                   	// #10
   103bc:	b	ff2c <gcc_cp_fe_context@@Base+0x620c>
   103c0:	ldrb	w1, [x1, #5]
   103c4:	ldrb	w2, [x0, #1]
   103c8:	cmp	w1, w2, lsl #3
   103cc:	b.ge	ff80 <gcc_cp_fe_context@@Base+0x6260>  // b.tcont
   103d0:	lsr	w2, w1, #3
   103d4:	and	w1, w1, #0x7
   103d8:	add	w2, w2, #0x2
   103dc:	ldrb	w0, [x0, w2, sxtw]
   103e0:	asr	w1, w0, w1
   103e4:	tbnz	w1, #0, f680 <gcc_cp_fe_context@@Base+0x5960>
   103e8:	b	ff80 <gcc_cp_fe_context@@Base+0x6260>
   103ec:	ldrb	w9, [x0, #1]
   103f0:	cbz	w9, ff80 <gcc_cp_fe_context@@Base+0x6260>
   103f4:	sub	w5, w9, #0x1
   103f8:	add	x0, x0, #0x1
   103fc:	add	x5, x5, #0x2
   10400:	add	x13, x1, #0x4
   10404:	mov	x2, #0x1                   	// #1
   10408:	ldrb	w3, [x0, x2]
   1040c:	cbz	w3, 1042c <gcc_cp_fe_context@@Base+0x670c>
   10410:	ldrb	w14, [x1, #4]
   10414:	sub	w12, w2, #0x1
   10418:	cmp	w14, w12
   1041c:	b.le	f680 <gcc_cp_fe_context@@Base+0x5960>
   10420:	ldrb	w12, [x13, x2]
   10424:	bics	wzr, w3, w12
   10428:	b.ne	f680 <gcc_cp_fe_context@@Base+0x5960>  // b.any
   1042c:	mov	w12, w2
   10430:	add	x2, x2, #0x1
   10434:	cmp	x5, x2
   10438:	b.ne	10408 <gcc_cp_fe_context@@Base+0x66e8>  // b.any
   1043c:	cmp	w12, w9
   10440:	b.eq	ff80 <gcc_cp_fe_context@@Base+0x6260>  // b.none
   10444:	b	f680 <gcc_cp_fe_context@@Base+0x5960>
   10448:	mov	w2, #0x1                   	// #1
   1044c:	mov	x26, #0x100                 	// #256
   10450:	mov	x21, #0x101                 	// #257
   10454:	b	f2f0 <gcc_cp_fe_context@@Base+0x55d0>
   10458:	cmp	w5, w9
   1045c:	b.eq	ff80 <gcc_cp_fe_context@@Base+0x6260>  // b.none
   10460:	cmp	w5, w13
   10464:	b.eq	ff80 <gcc_cp_fe_context@@Base+0x6260>  // b.none
   10468:	b	f680 <gcc_cp_fe_context@@Base+0x5960>
   1046c:	mov	w6, w23
   10470:	mov	w9, w24
   10474:	mov	x5, x25
   10478:	mov	x25, x26
   1047c:	ldp	x22, x24, [x29, #160]
   10480:	mov	w11, w19
   10484:	ldp	x23, x26, [x29, #176]
   10488:	mov	x19, x0
   1048c:	ldr	x21, [x29, #368]
   10490:	mov	w7, w11
   10494:	cmp	x21, x26
   10498:	b.hi	104e4 <gcc_cp_fe_context@@Base+0x67c4>  // b.pmore
   1049c:	mov	w1, w20
   104a0:	mov	x0, x21
   104a4:	add	w3, w1, #0x1
   104a8:	add	w2, w1, #0x2
   104ac:	ldr	x11, [x23, x0, lsl #3]
   104b0:	str	x11, [x19, w1, uxtw #3]
   104b4:	ldr	x11, [x24, x0, lsl #3]
   104b8:	str	x11, [x19, x3, lsl #3]
   104bc:	ldr	x3, [x22, x0, lsl #3]
   104c0:	str	x3, [x19, x2, lsl #3]
   104c4:	cmp	x26, x0
   104c8:	add	w1, w1, #0x3
   104cc:	add	x0, x0, #0x1
   104d0:	b.ne	104a4 <gcc_cp_fe_context@@Base+0x6784>  // b.any
   104d4:	sub	x0, x26, x21
   104d8:	add	w20, w20, #0x3
   104dc:	add	w0, w0, w0, lsl #1
   104e0:	add	w20, w0, w20
   104e4:	add	w2, w20, #0x1
   104e8:	ubfiz	x1, x20, #3, #32
   104ec:	sbfiz	w0, w9, #8, #8
   104f0:	lsl	x2, x2, #3
   104f4:	add	w0, w0, w6
   104f8:	add	w6, w20, #0x2
   104fc:	str	w21, [x19, x1]
   10500:	add	x0, x5, w0, sxtw
   10504:	add	w1, w20, #0x3
   10508:	str	w26, [x19, x2]
   1050c:	add	w20, w20, #0x4
   10510:	str	x0, [x19, x6, lsl #3]
   10514:	mov	w0, w1
   10518:	str	x27, [x19, w0, uxtw #3]
   1051c:	b	f6a8 <gcc_cp_fe_context@@Base+0x5988>
   10520:	and	w1, w1, #0xffffffef
   10524:	strb	w1, [x22, x0]
   10528:	ldrb	w0, [x11, #1]
   1052c:	ldrb	w1, [x11, #2]
   10530:	add	w1, w1, w0
   10534:	cmp	w0, w1
   10538:	b.cs	f388 <gcc_cp_fe_context@@Base+0x5668>  // b.hs, b.nlast
   1053c:	ldr	x6, [x29, #280]
   10540:	and	x0, x0, #0xff
   10544:	ldr	x3, [x29, #272]
   10548:	ldr	x5, [x6, x0, lsl #3]
   1054c:	str	x5, [x23, x0, lsl #3]
   10550:	ldr	x3, [x3, x0, lsl #3]
   10554:	cmp	x5, x3
   10558:	b.hi	10560 <gcc_cp_fe_context@@Base+0x6840>  // b.pmore
   1055c:	str	x3, [x24, x0, lsl #3]
   10560:	add	x0, x0, #0x1
   10564:	cmp	w1, w0
   10568:	b.hi	10544 <gcc_cp_fe_context@@Base+0x6824>  // b.pmore
   1056c:	b	f388 <gcc_cp_fe_context@@Base+0x5668>
   10570:	stp	x29, x30, [sp, #-432]!
   10574:	mov	x29, sp
   10578:	str	x0, [sp, #128]
   1057c:	str	x0, [sp, #296]
   10580:	add	x0, x0, x1
   10584:	ldr	x1, [x3, #40]
   10588:	stp	x19, x20, [sp, #16]
   1058c:	stp	x25, x26, [sp, #64]
   10590:	mov	x26, x3
   10594:	str	x2, [sp, #104]
   10598:	stp	x0, x1, [sp, #112]
   1059c:	mov	x0, #0x500                 	// #1280
   105a0:	bl	5710 <malloc@plt>
   105a4:	str	x0, [sp, #136]
   105a8:	cbz	x0, 1187c <gcc_cp_fe_context@@Base+0x7b5c>
   105ac:	adrp	x20, 2b000 <xexit@@Base+0x15e10>
   105b0:	add	x19, x20, #0x5f8
   105b4:	ldrb	w0, [x26, #56]
   105b8:	mov	w2, #0xffffff97            	// #-105
   105bc:	stp	x21, x22, [sp, #32]
   105c0:	ldr	w1, [x19, #260]
   105c4:	and	w0, w0, w2
   105c8:	str	xzr, [x26, #48]
   105cc:	ldr	x2, [sp, #104]
   105d0:	stp	xzr, x2, [x26, #16]
   105d4:	strb	w0, [x26, #56]
   105d8:	cbz	w1, 10a7c <gcc_cp_fe_context@@Base+0x6d5c>
   105dc:	ldp	x22, x0, [x26]
   105e0:	cbz	x0, 1074c <gcc_cp_fe_context@@Base+0x6a2c>
   105e4:	ldr	x0, [sp, #128]
   105e8:	ldr	x1, [sp, #112]
   105ec:	cmp	x0, x1
   105f0:	b.eq	1169c <gcc_cp_fe_context@@Base+0x797c>  // b.none
   105f4:	add	x1, sp, #0x130
   105f8:	str	x1, [sp, #160]
   105fc:	mov	w1, #0x20                  	// #32
   10600:	stp	x27, x28, [sp, #80]
   10604:	mov	x28, #0x0                   	// #0
   10608:	str	w1, [sp, #156]
   1060c:	mov	x1, x26
   10610:	mov	x19, x22
   10614:	mov	x26, x28
   10618:	mov	x28, x1
   1061c:	mov	x27, #0x0                   	// #0
   10620:	mov	x25, #0x10000               	// #65536
   10624:	stp	x23, x24, [sp, #48]
   10628:	mov	x24, #0x0                   	// #0
   1062c:	stp	wzr, wzr, [sp, #148]
   10630:	ldr	x2, [sp, #120]
   10634:	add	x1, x0, #0x1
   10638:	str	x1, [sp, #296]
   1063c:	ldrb	w20, [x0]
   10640:	cbz	x2, 1064c <gcc_cp_fe_context@@Base+0x692c>
   10644:	and	x20, x20, #0xff
   10648:	ldrb	w20, [x2, x20]
   1064c:	cmp	w20, #0x2e
   10650:	b.eq	10ca8 <gcc_cp_fe_context@@Base+0x6f88>  // b.none
   10654:	b.hi	108ac <gcc_cp_fe_context@@Base+0x6b8c>  // b.pmore
   10658:	cmp	w20, #0x28
   1065c:	b.eq	10c14 <gcc_cp_fe_context@@Base+0x6ef4>  // b.none
   10660:	b.ls	107ac <gcc_cp_fe_context@@Base+0x6a8c>  // b.plast
   10664:	cmp	w20, #0x2a
   10668:	b.eq	10688 <gcc_cp_fe_context@@Base+0x6968>  // b.none
   1066c:	cmp	w20, #0x2b
   10670:	b.ne	10778 <gcc_cp_fe_context@@Base+0x6a58>  // b.any
   10674:	ldr	x1, [sp, #104]
   10678:	mov	x0, #0x402                 	// #1026
   1067c:	tst	x1, x0
   10680:	b.ne	1069c <gcc_cp_fe_context@@Base+0x697c>  // b.any
   10684:	nop
   10688:	cbnz	x26, 11344 <gcc_cp_fe_context@@Base+0x7624>
   1068c:	ldr	x0, [sp, #104]
   10690:	tbnz	w0, #5, 12a74 <gcc_cp_fe_context@@Base+0x8d54>
   10694:	ldr	x0, [sp, #104]
   10698:	tbnz	w0, #4, 11650 <gcc_cp_fe_context@@Base+0x7930>
   1069c:	ldp	x21, x2, [x28]
   106a0:	sub	x1, x22, x21
   106a4:	cbz	x27, 106c4 <gcc_cp_fe_context@@Base+0x69a4>
   106a8:	ldrb	w3, [x27]
   106ac:	and	x0, x3, #0xff
   106b0:	cmp	w3, #0xff
   106b4:	add	x0, x0, #0x1
   106b8:	add	x0, x27, x0
   106bc:	ccmp	x0, x22, #0x0, ne  // ne = any
   106c0:	b.eq	10b6c <gcc_cp_fe_context@@Base+0x6e4c>  // b.none
   106c4:	add	x1, x1, #0x2
   106c8:	mov	x26, x22
   106cc:	cmp	x1, x2
   106d0:	b.hi	1072c <gcc_cp_fe_context@@Base+0x6a0c>  // b.pmore
   106d4:	b	10acc <gcc_cp_fe_context@@Base+0x6dac>
   106d8:	str	x1, [x28, #8]
   106dc:	mov	x0, x21
   106e0:	bl	5470 <realloc@plt>
   106e4:	str	x0, [x28]
   106e8:	subs	x1, x0, x21
   106ec:	add	x3, x24, x1
   106f0:	add	x2, x26, x1
   106f4:	mov	x21, x0
   106f8:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   106fc:	b.eq	10718 <gcc_cp_fe_context@@Base+0x69f8>  // b.none
   10700:	cmp	x24, #0x0
   10704:	add	x22, x22, x1
   10708:	csel	x24, x3, x24, ne  // ne = any
   1070c:	cmp	x26, #0x0
   10710:	csel	x26, x2, x26, ne  // ne = any
   10714:	add	x19, x19, x1
   10718:	ldr	x2, [x28, #8]
   1071c:	sub	x0, x22, x0
   10720:	add	x0, x0, #0x2
   10724:	cmp	x0, x2
   10728:	b.ls	10acc <gcc_cp_fe_context@@Base+0x6dac>  // b.plast
   1072c:	lsl	x1, x2, #1
   10730:	cmp	x2, #0x10, lsl #12
   10734:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   10738:	cmp	x1, #0x10, lsl #12
   1073c:	b.ls	106d8 <gcc_cp_fe_context@@Base+0x69b8>  // b.plast
   10740:	mov	x1, #0x10000               	// #65536
   10744:	str	x25, [x28, #8]
   10748:	b	106dc <gcc_cp_fe_context@@Base+0x69bc>
   1074c:	cbz	x22, 10c00 <gcc_cp_fe_context@@Base+0x6ee0>
   10750:	mov	x0, x22
   10754:	mov	x1, #0x20                  	// #32
   10758:	bl	5470 <realloc@plt>
   1075c:	mov	x22, x0
   10760:	str	x0, [x26]
   10764:	cbz	x22, 11a04 <gcc_cp_fe_context@@Base+0x7ce4>
   10768:	mov	x0, #0x20                  	// #32
   1076c:	str	x0, [x26, #8]
   10770:	ldr	x0, [sp, #296]
   10774:	b	105e8 <gcc_cp_fe_context@@Base+0x68c8>
   10778:	cmp	w20, #0x29
   1077c:	b.ne	1069c <gcc_cp_fe_context@@Base+0x697c>  // b.any
   10780:	ldr	x0, [sp, #104]
   10784:	tbz	w0, #13, 1069c <gcc_cp_fe_context@@Base+0x697c>
   10788:	cbnz	x24, 1173c <gcc_cp_fe_context@@Base+0x7a1c>
   1078c:	ldr	w0, [sp, #148]
   10790:	cbnz	w0, 11ae0 <gcc_cp_fe_context@@Base+0x7dc0>
   10794:	ldr	x0, [sp, #104]
   10798:	tbz	w0, #17, 12e7c <gcc_cp_fe_context@@Base+0x915c>
   1079c:	ldp	x21, x2, [x28]
   107a0:	mov	w20, #0x29                  	// #41
   107a4:	sub	x1, x22, x21
   107a8:	b	106a4 <gcc_cp_fe_context@@Base+0x6984>
   107ac:	cmp	w20, #0xa
   107b0:	b.eq	10e44 <gcc_cp_fe_context@@Base+0x7124>  // b.none
   107b4:	cmp	w20, #0x24
   107b8:	b.ne	1069c <gcc_cp_fe_context@@Base+0x697c>  // b.any
   107bc:	ldp	x21, x2, [x28]
   107c0:	ldr	x6, [sp, #112]
   107c4:	cmp	x1, x6
   107c8:	sub	x1, x22, x21
   107cc:	b.eq	1081c <gcc_cp_fe_context@@Base+0x6afc>  // b.none
   107d0:	ldr	x7, [sp, #104]
   107d4:	tbnz	w7, #3, 1081c <gcc_cp_fe_context@@Base+0x6afc>
   107d8:	ldrb	w4, [x0, #1]
   107dc:	add	x3, x0, #0x2
   107e0:	cmp	w4, #0x5c
   107e4:	cset	w5, eq  // eq = none
   107e8:	cmp	x6, x3
   107ec:	b.ls	11718 <gcc_cp_fe_context@@Base+0x79f8>  // b.plast
   107f0:	tbnz	w7, #13, 118c0 <gcc_cp_fe_context@@Base+0x7ba0>
   107f4:	cmp	x3, #0x0
   107f8:	ccmp	w5, #0x0, #0x4, ne  // ne = any
   107fc:	b.eq	11724 <gcc_cp_fe_context@@Base+0x7a04>  // b.none
   10800:	ldrb	w0, [x0, #2]
   10804:	cmp	w0, #0x29
   10808:	b.eq	1081c <gcc_cp_fe_context@@Base+0x6afc>  // b.none
   1080c:	ldr	x3, [sp, #104]
   10810:	tbnz	w3, #15, 106a4 <gcc_cp_fe_context@@Base+0x6984>
   10814:	cmp	w0, #0x7c
   10818:	b.ne	106a4 <gcc_cp_fe_context@@Base+0x6984>  // b.any
   1081c:	add	x1, x1, #0x1
   10820:	cmp	x1, x2
   10824:	b.hi	1088c <gcc_cp_fe_context@@Base+0x6b6c>  // b.pmore
   10828:	b	118a8 <gcc_cp_fe_context@@Base+0x7b88>
   1082c:	str	x1, [x28, #8]
   10830:	mov	x0, x21
   10834:	bl	5470 <realloc@plt>
   10838:	str	x0, [x28]
   1083c:	subs	x1, x0, x21
   10840:	add	x4, x24, x1
   10844:	add	x3, x26, x1
   10848:	add	x2, x27, x1
   1084c:	mov	x21, x0
   10850:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   10854:	b.eq	10878 <gcc_cp_fe_context@@Base+0x6b58>  // b.none
   10858:	cmp	x24, #0x0
   1085c:	add	x22, x22, x1
   10860:	csel	x24, x4, x24, ne  // ne = any
   10864:	cmp	x26, #0x0
   10868:	csel	x26, x3, x26, ne  // ne = any
   1086c:	cmp	x27, #0x0
   10870:	csel	x27, x2, x27, ne  // ne = any
   10874:	add	x19, x19, x1
   10878:	ldr	x2, [x28, #8]
   1087c:	sub	x0, x22, x0
   10880:	add	x0, x0, #0x1
   10884:	cmp	x0, x2
   10888:	b.ls	118a8 <gcc_cp_fe_context@@Base+0x7b88>  // b.plast
   1088c:	lsl	x1, x2, #1
   10890:	cmp	x2, #0x10, lsl #12
   10894:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   10898:	cmp	x1, #0x10, lsl #12
   1089c:	b.ls	1082c <gcc_cp_fe_context@@Base+0x6b0c>  // b.plast
   108a0:	mov	x1, #0x10000               	// #65536
   108a4:	str	x25, [x28, #8]
   108a8:	b	10830 <gcc_cp_fe_context@@Base+0x6b10>
   108ac:	cmp	w20, #0x5e
   108b0:	b.eq	10d44 <gcc_cp_fe_context@@Base+0x7024>  // b.none
   108b4:	b.ls	10958 <gcc_cp_fe_context@@Base+0x6c38>  // b.plast
   108b8:	cmp	w20, #0x7b
   108bc:	b.eq	10e58 <gcc_cp_fe_context@@Base+0x7138>  // b.none
   108c0:	cmp	w20, #0x7c
   108c4:	b.ne	1069c <gcc_cp_fe_context@@Base+0x697c>  // b.any
   108c8:	ldp	x21, x2, [x28]
   108cc:	ldr	x0, [sp, #104]
   108d0:	sub	x1, x22, x21
   108d4:	tbz	w0, #15, 106a4 <gcc_cp_fe_context@@Base+0x6984>
   108d8:	ldr	x0, [sp, #104]
   108dc:	tbnz	w0, #10, 106a4 <gcc_cp_fe_context@@Base+0x6984>
   108e0:	add	x1, x1, #0x3
   108e4:	cmp	x1, x2
   108e8:	b.hi	10938 <gcc_cp_fe_context@@Base+0x6c18>  // b.pmore
   108ec:	b	11a18 <gcc_cp_fe_context@@Base+0x7cf8>
   108f0:	str	x1, [x28, #8]
   108f4:	mov	x0, x21
   108f8:	bl	5470 <realloc@plt>
   108fc:	str	x0, [x28]
   10900:	subs	x1, x0, x21
   10904:	add	x2, x24, x1
   10908:	mov	x21, x0
   1090c:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   10910:	b.eq	10924 <gcc_cp_fe_context@@Base+0x6c04>  // b.none
   10914:	cmp	x24, #0x0
   10918:	add	x22, x22, x1
   1091c:	csel	x24, x2, x24, ne  // ne = any
   10920:	add	x19, x19, x1
   10924:	ldr	x2, [x28, #8]
   10928:	sub	x0, x22, x0
   1092c:	add	x0, x0, #0x3
   10930:	cmp	x0, x2
   10934:	b.ls	11a18 <gcc_cp_fe_context@@Base+0x7cf8>  // b.plast
   10938:	lsl	x1, x2, #1
   1093c:	cmp	x2, #0x10, lsl #12
   10940:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   10944:	cmp	x1, #0x10, lsl #12
   10948:	b.ls	108f0 <gcc_cp_fe_context@@Base+0x6bd0>  // b.plast
   1094c:	mov	x1, #0x10000               	// #65536
   10950:	str	x25, [x28, #8]
   10954:	b	108f4 <gcc_cp_fe_context@@Base+0x6bd4>
   10958:	cmp	w20, #0x5b
   1095c:	b.eq	10f24 <gcc_cp_fe_context@@Base+0x7204>  // b.none
   10960:	cmp	w20, #0x5c
   10964:	b.ne	10a4c <gcc_cp_fe_context@@Base+0x6d2c>  // b.any
   10968:	ldr	x2, [sp, #112]
   1096c:	cmp	x1, x2
   10970:	b.eq	11884 <gcc_cp_fe_context@@Base+0x7b64>  // b.none
   10974:	add	x1, x0, #0x2
   10978:	str	x1, [sp, #296]
   1097c:	ldrb	w20, [x0, #1]
   10980:	cmp	w20, #0x3f
   10984:	b.eq	12110 <gcc_cp_fe_context@@Base+0x83f0>  // b.none
   10988:	b.hi	10ff4 <gcc_cp_fe_context@@Base+0x72d4>  // b.pmore
   1098c:	cmp	w20, #0x2b
   10990:	b.eq	12110 <gcc_cp_fe_context@@Base+0x83f0>  // b.none
   10994:	b.ls	10fc0 <gcc_cp_fe_context@@Base+0x72a0>  // b.plast
   10998:	cmp	w20, #0x3c
   1099c:	b.eq	12244 <gcc_cp_fe_context@@Base+0x8524>  // b.none
   109a0:	b.ls	11230 <gcc_cp_fe_context@@Base+0x7510>  // b.plast
   109a4:	cmp	w20, #0x3e
   109a8:	b.ne	10fe8 <gcc_cp_fe_context@@Base+0x72c8>  // b.any
   109ac:	ldp	x21, x2, [x28]
   109b0:	ldr	x0, [sp, #104]
   109b4:	sub	x1, x22, x21
   109b8:	tbnz	w0, #19, 106a4 <gcc_cp_fe_context@@Base+0x6984>
   109bc:	add	x1, x1, #0x1
   109c0:	cmp	x2, x1
   109c4:	b.cc	10a2c <gcc_cp_fe_context@@Base+0x6d0c>  // b.lo, b.ul, b.last
   109c8:	b	12a28 <gcc_cp_fe_context@@Base+0x8d08>
   109cc:	str	x1, [x28, #8]
   109d0:	mov	x0, x21
   109d4:	bl	5470 <realloc@plt>
   109d8:	str	x0, [x28]
   109dc:	subs	x1, x0, x21
   109e0:	add	x4, x24, x1
   109e4:	add	x3, x26, x1
   109e8:	add	x2, x27, x1
   109ec:	mov	x21, x0
   109f0:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   109f4:	b.eq	10a18 <gcc_cp_fe_context@@Base+0x6cf8>  // b.none
   109f8:	cmp	x24, #0x0
   109fc:	add	x22, x22, x1
   10a00:	csel	x24, x4, x24, ne  // ne = any
   10a04:	cmp	x26, #0x0
   10a08:	csel	x26, x3, x26, ne  // ne = any
   10a0c:	cmp	x27, #0x0
   10a10:	csel	x27, x2, x27, ne  // ne = any
   10a14:	add	x19, x19, x1
   10a18:	ldr	x2, [x28, #8]
   10a1c:	sub	x0, x22, x0
   10a20:	add	x0, x0, #0x1
   10a24:	cmp	x0, x2
   10a28:	b.ls	12a28 <gcc_cp_fe_context@@Base+0x8d08>  // b.plast
   10a2c:	lsl	x1, x2, #1
   10a30:	cmp	x2, #0x10, lsl #12
   10a34:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   10a38:	cmp	x1, #0x10, lsl #12
   10a3c:	b.ls	109cc <gcc_cp_fe_context@@Base+0x6cac>  // b.plast
   10a40:	mov	x1, #0x10000               	// #65536
   10a44:	str	x25, [x28, #8]
   10a48:	b	109d0 <gcc_cp_fe_context@@Base+0x6cb0>
   10a4c:	cmp	w20, #0x3f
   10a50:	b.eq	10674 <gcc_cp_fe_context@@Base+0x6954>  // b.none
   10a54:	b	1069c <gcc_cp_fe_context@@Base+0x697c>
   10a58:	ldp	x23, x24, [sp, #48]
   10a5c:	ldp	x27, x28, [sp, #80]
   10a60:	mov	w20, #0xf                   	// #15
   10a64:	ldp	x21, x22, [sp, #32]
   10a68:	mov	w0, w20
   10a6c:	ldp	x19, x20, [sp, #16]
   10a70:	ldp	x25, x26, [sp, #64]
   10a74:	ldp	x29, x30, [sp], #432
   10a78:	ret
   10a7c:	mov	x2, #0x100                 	// #256
   10a80:	mov	x0, x19
   10a84:	bl	5450 <memset@plt>
   10a88:	bl	5590 <__ctype_b_loc@plt>
   10a8c:	mov	x3, x19
   10a90:	mov	x1, #0x0                   	// #0
   10a94:	mov	w4, #0x1                   	// #1
   10a98:	ldr	x2, [x0]
   10a9c:	ldrh	w2, [x2, x1, lsl #1]
   10aa0:	tbz	w2, #3, 10aa8 <gcc_cp_fe_context@@Base+0x6d88>
   10aa4:	strb	w4, [x1, x3]
   10aa8:	add	x1, x1, #0x1
   10aac:	cmp	x1, #0x100
   10ab0:	b.ne	10a98 <gcc_cp_fe_context@@Base+0x6d78>  // b.any
   10ab4:	add	x20, x20, #0x5f8
   10ab8:	mov	w1, #0x1                   	// #1
   10abc:	mov	w0, #0x1                   	// #1
   10ac0:	strb	w1, [x20, #95]
   10ac4:	str	w0, [x20, #260]
   10ac8:	b	105dc <gcc_cp_fe_context@@Base+0x68bc>
   10acc:	mov	x23, x22
   10ad0:	mov	w0, #0x2                   	// #2
   10ad4:	add	x27, x22, #0x1
   10ad8:	strh	w0, [x23], #2
   10adc:	ldp	x21, x2, [x28]
   10ae0:	sub	x1, x23, x21
   10ae4:	add	x1, x1, #0x1
   10ae8:	cmp	x2, x1
   10aec:	b.cc	10b4c <gcc_cp_fe_context@@Base+0x6e2c>  // b.lo, b.ul, b.last
   10af0:	b	10bb8 <gcc_cp_fe_context@@Base+0x6e98>
   10af4:	str	x1, [x28, #8]
   10af8:	mov	x0, x21
   10afc:	bl	5470 <realloc@plt>
   10b00:	str	x0, [x28]
   10b04:	subs	x1, x0, x21
   10b08:	add	x3, x24, x1
   10b0c:	add	x2, x26, x1
   10b10:	mov	x21, x0
   10b14:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   10b18:	b.eq	10b38 <gcc_cp_fe_context@@Base+0x6e18>  // b.none
   10b1c:	cmp	x24, #0x0
   10b20:	add	x23, x23, x1
   10b24:	csel	x24, x3, x24, ne  // ne = any
   10b28:	cmp	x26, #0x0
   10b2c:	csel	x26, x2, x26, ne  // ne = any
   10b30:	add	x19, x19, x1
   10b34:	add	x27, x27, x1
   10b38:	ldr	x2, [x28, #8]
   10b3c:	sub	x0, x23, x0
   10b40:	add	x0, x0, #0x1
   10b44:	cmp	x0, x2
   10b48:	b.ls	10bb8 <gcc_cp_fe_context@@Base+0x6e98>  // b.plast
   10b4c:	lsl	x1, x2, #1
   10b50:	cmp	x2, #0x10, lsl #12
   10b54:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   10b58:	cmp	x1, #0x10, lsl #12
   10b5c:	b.ls	10af4 <gcc_cp_fe_context@@Base+0x6dd4>  // b.plast
   10b60:	mov	x1, #0x10000               	// #65536
   10b64:	str	x25, [x28, #8]
   10b68:	b	10af8 <gcc_cp_fe_context@@Base+0x6dd8>
   10b6c:	ldr	x3, [sp, #296]
   10b70:	mov	w4, #0x5e                  	// #94
   10b74:	ldrb	w0, [x3]
   10b78:	cmp	w0, #0x2a
   10b7c:	ccmp	w0, w4, #0x4, ne  // ne = any
   10b80:	b.eq	106c4 <gcc_cp_fe_context@@Base+0x69a4>  // b.none
   10b84:	ldr	x4, [sp, #104]
   10b88:	tbnz	w4, #1, 10be0 <gcc_cp_fe_context@@Base+0x6ec0>
   10b8c:	cmp	w0, #0x2b
   10b90:	mov	w4, #0x3f                  	// #63
   10b94:	ccmp	w0, w4, #0x4, ne  // ne = any
   10b98:	b.eq	106c4 <gcc_cp_fe_context@@Base+0x69a4>  // b.none
   10b9c:	ldr	x4, [sp, #104]
   10ba0:	tbz	w4, #9, 118a0 <gcc_cp_fe_context@@Base+0x7b80>
   10ba4:	tbz	w4, #12, 11598 <gcc_cp_fe_context@@Base+0x7878>
   10ba8:	cmp	w0, #0x7b
   10bac:	mov	x23, x22
   10bb0:	b.ne	10ae4 <gcc_cp_fe_context@@Base+0x6dc4>  // b.any
   10bb4:	b	106c4 <gcc_cp_fe_context@@Base+0x69a4>
   10bb8:	mov	x22, x23
   10bbc:	strb	w20, [x22], #1
   10bc0:	ldrb	w0, [x27]
   10bc4:	add	w0, w0, #0x1
   10bc8:	strb	w0, [x27]
   10bcc:	ldr	x1, [sp, #112]
   10bd0:	ldr	x0, [sp, #296]
   10bd4:	cmp	x0, x1
   10bd8:	b.ne	10630 <gcc_cp_fe_context@@Base+0x6910>  // b.any
   10bdc:	b	11670 <gcc_cp_fe_context@@Base+0x7950>
   10be0:	cmp	w0, #0x5c
   10be4:	b.ne	10b9c <gcc_cp_fe_context@@Base+0x6e7c>  // b.any
   10be8:	ldrb	w4, [x3, #1]
   10bec:	mov	w5, #0x3f                  	// #63
   10bf0:	cmp	w4, #0x2b
   10bf4:	ccmp	w4, w5, #0x4, ne  // ne = any
   10bf8:	b.eq	106c4 <gcc_cp_fe_context@@Base+0x69a4>  // b.none
   10bfc:	b	10b9c <gcc_cp_fe_context@@Base+0x6e7c>
   10c00:	mov	x0, #0x20                  	// #32
   10c04:	bl	5710 <malloc@plt>
   10c08:	mov	x22, x0
   10c0c:	str	x0, [x26]
   10c10:	b	10764 <gcc_cp_fe_context@@Base+0x6a44>
   10c14:	ldr	x0, [sp, #104]
   10c18:	tbz	w0, #13, 1069c <gcc_cp_fe_context@@Base+0x697c>
   10c1c:	ldp	w2, w1, [sp, #148]
   10c20:	ldr	x0, [x28, #48]
   10c24:	add	w1, w1, #0x1
   10c28:	str	w1, [sp, #152]
   10c2c:	add	x0, x0, #0x1
   10c30:	ldr	w1, [sp, #156]
   10c34:	str	x0, [x28, #48]
   10c38:	cmp	w1, w2
   10c3c:	b.eq	1184c <gcc_cp_fe_context@@Base+0x7b2c>  // b.none
   10c40:	ldr	w1, [sp, #148]
   10c44:	mov	w0, #0x28                  	// #40
   10c48:	ldr	x3, [sp, #136]
   10c4c:	cmp	x24, #0x0
   10c50:	ldr	x20, [x28]
   10c54:	umull	x0, w1, w0
   10c58:	add	x1, x3, x0
   10c5c:	sub	x6, x24, x20
   10c60:	sub	x19, x19, x20
   10c64:	sub	x2, x22, x20
   10c68:	str	x19, [x3, x0]
   10c6c:	csinc	x0, xzr, x6, eq  // eq = none
   10c70:	str	x0, [x1, #8]
   10c74:	ldr	w0, [sp, #152]
   10c78:	str	x2, [x1, #24]
   10c7c:	str	w0, [x1, #32]
   10c80:	cmp	w0, #0xff
   10c84:	b.ls	117d8 <gcc_cp_fe_context@@Base+0x7ab8>  // b.plast
   10c88:	ldr	w0, [sp, #148]
   10c8c:	mov	x19, x22
   10c90:	mov	x24, #0x0                   	// #0
   10c94:	mov	x26, #0x0                   	// #0
   10c98:	add	w0, w0, #0x1
   10c9c:	mov	x27, #0x0                   	// #0
   10ca0:	str	w0, [sp, #148]
   10ca4:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   10ca8:	ldp	x20, x2, [x28]
   10cac:	mov	x26, x22
   10cb0:	sub	x0, x22, x20
   10cb4:	add	x0, x0, #0x1
   10cb8:	cmp	x0, x2
   10cbc:	b.hi	10d24 <gcc_cp_fe_context@@Base+0x7004>  // b.pmore
   10cc0:	b	1158c <gcc_cp_fe_context@@Base+0x786c>
   10cc4:	str	x1, [x28, #8]
   10cc8:	mov	x0, x20
   10ccc:	bl	5470 <realloc@plt>
   10cd0:	str	x0, [x28]
   10cd4:	subs	x1, x0, x20
   10cd8:	add	x4, x24, x1
   10cdc:	add	x3, x26, x1
   10ce0:	add	x2, x27, x1
   10ce4:	mov	x20, x0
   10ce8:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   10cec:	b.eq	10d10 <gcc_cp_fe_context@@Base+0x6ff0>  // b.none
   10cf0:	cmp	x24, #0x0
   10cf4:	add	x22, x22, x1
   10cf8:	csel	x24, x4, x24, ne  // ne = any
   10cfc:	cmp	x26, #0x0
   10d00:	csel	x26, x3, x26, ne  // ne = any
   10d04:	cmp	x27, #0x0
   10d08:	csel	x27, x2, x27, ne  // ne = any
   10d0c:	add	x19, x19, x1
   10d10:	ldr	x2, [x28, #8]
   10d14:	sub	x0, x22, x0
   10d18:	add	x0, x0, #0x1
   10d1c:	cmp	x0, x2
   10d20:	b.ls	1158c <gcc_cp_fe_context@@Base+0x786c>  // b.plast
   10d24:	lsl	x1, x2, #1
   10d28:	cmp	x2, #0x10, lsl #12
   10d2c:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   10d30:	cmp	x1, #0x10, lsl #12
   10d34:	b.ls	10cc4 <gcc_cp_fe_context@@Base+0x6fa4>  // b.plast
   10d38:	mov	x1, #0x10000               	// #65536
   10d3c:	str	x25, [x28, #8]
   10d40:	b	10cc8 <gcc_cp_fe_context@@Base+0x6fa8>
   10d44:	ldr	x2, [sp, #128]
   10d48:	ldr	x21, [x28]
   10d4c:	add	x2, x2, #0x1
   10d50:	cmp	x1, x2
   10d54:	sub	x1, x22, x21
   10d58:	ldr	x2, [x28, #8]
   10d5c:	b.eq	10d98 <gcc_cp_fe_context@@Base+0x7078>  // b.none
   10d60:	ldr	x3, [sp, #104]
   10d64:	tbnz	w3, #3, 10d98 <gcc_cp_fe_context@@Base+0x7078>
   10d68:	mov	x3, x0
   10d6c:	ldr	x5, [sp, #128]
   10d70:	ldrb	w4, [x3, #-1]!
   10d74:	cmp	x5, x3
   10d78:	b.cs	10e28 <gcc_cp_fe_context@@Base+0x7108>  // b.hs, b.nlast
   10d7c:	ldurb	w0, [x0, #-2]
   10d80:	cmp	w0, #0x5c
   10d84:	b.ne	10e28 <gcc_cp_fe_context@@Base+0x7108>  // b.any
   10d88:	cmp	w4, #0x28
   10d8c:	b.eq	10d98 <gcc_cp_fe_context@@Base+0x7078>  // b.none
   10d90:	cmp	w4, #0x7c
   10d94:	b.ne	106a4 <gcc_cp_fe_context@@Base+0x6984>  // b.any
   10d98:	add	x1, x1, #0x1
   10d9c:	cmp	x2, x1
   10da0:	b.cc	10e08 <gcc_cp_fe_context@@Base+0x70e8>  // b.lo, b.ul, b.last
   10da4:	b	118b4 <gcc_cp_fe_context@@Base+0x7b94>
   10da8:	str	x1, [x28, #8]
   10dac:	mov	x0, x21
   10db0:	bl	5470 <realloc@plt>
   10db4:	str	x0, [x28]
   10db8:	subs	x1, x0, x21
   10dbc:	add	x4, x24, x1
   10dc0:	add	x3, x26, x1
   10dc4:	add	x2, x27, x1
   10dc8:	mov	x21, x0
   10dcc:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   10dd0:	b.eq	10df4 <gcc_cp_fe_context@@Base+0x70d4>  // b.none
   10dd4:	cmp	x24, #0x0
   10dd8:	add	x22, x22, x1
   10ddc:	csel	x24, x4, x24, ne  // ne = any
   10de0:	cmp	x26, #0x0
   10de4:	csel	x26, x3, x26, ne  // ne = any
   10de8:	cmp	x27, #0x0
   10dec:	csel	x27, x2, x27, ne  // ne = any
   10df0:	add	x19, x19, x1
   10df4:	ldr	x2, [x28, #8]
   10df8:	sub	x0, x22, x0
   10dfc:	add	x0, x0, #0x1
   10e00:	cmp	x0, x2
   10e04:	b.ls	118b4 <gcc_cp_fe_context@@Base+0x7b94>  // b.plast
   10e08:	lsl	x1, x2, #1
   10e0c:	cmp	x2, #0x10, lsl #12
   10e10:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   10e14:	cmp	x1, #0x10, lsl #12
   10e18:	b.ls	10da8 <gcc_cp_fe_context@@Base+0x7088>  // b.plast
   10e1c:	mov	x1, #0x10000               	// #65536
   10e20:	str	x25, [x28, #8]
   10e24:	b	10dac <gcc_cp_fe_context@@Base+0x708c>
   10e28:	cmp	w4, #0x28
   10e2c:	b.eq	117cc <gcc_cp_fe_context@@Base+0x7aac>  // b.none
   10e30:	cmp	w4, #0x7c
   10e34:	b.ne	106a4 <gcc_cp_fe_context@@Base+0x6984>  // b.any
   10e38:	ldr	x0, [sp, #104]
   10e3c:	tbnz	w0, #15, 10d98 <gcc_cp_fe_context@@Base+0x7078>
   10e40:	b	106a4 <gcc_cp_fe_context@@Base+0x6984>
   10e44:	ldp	x21, x2, [x28]
   10e48:	ldr	x0, [sp, #104]
   10e4c:	sub	x1, x22, x21
   10e50:	tbnz	w0, #11, 108d8 <gcc_cp_fe_context@@Base+0x6bb8>
   10e54:	b	106a4 <gcc_cp_fe_context@@Base+0x6984>
   10e58:	ldr	x2, [sp, #104]
   10e5c:	mov	x0, #0x1200                	// #4608
   10e60:	bics	xzr, x0, x2
   10e64:	b.ne	1069c <gcc_cp_fe_context@@Base+0x697c>  // b.any
   10e68:	ldr	x6, [sp, #112]
   10e6c:	cmp	x1, x6
   10e70:	b.eq	10ef0 <gcc_cp_fe_context@@Base+0x71d0>  // b.none
   10e74:	mov	x0, x1
   10e78:	mov	w23, #0xffffffff            	// #-1
   10e7c:	mov	w3, #0x7fff                	// #32767
   10e80:	ldr	x4, [sp, #120]
   10e84:	b	10eac <gcc_cp_fe_context@@Base+0x718c>
   10e88:	cmp	w23, w3
   10e8c:	b.gt	10ea4 <gcc_cp_fe_context@@Base+0x7184>
   10e90:	cmp	w23, #0x0
   10e94:	csel	w23, w23, wzr, ge  // ge = tcont
   10e98:	add	w23, w23, w23, lsl #2
   10e9c:	add	w23, w5, w23, lsl #1
   10ea0:	sub	w23, w23, #0x30
   10ea4:	cmp	x0, x6
   10ea8:	b.eq	11e74 <gcc_cp_fe_context@@Base+0x8154>  // b.none
   10eac:	add	x0, x0, #0x1
   10eb0:	str	x0, [sp, #296]
   10eb4:	ldurb	w5, [x0, #-1]
   10eb8:	cbz	x4, 10ec4 <gcc_cp_fe_context@@Base+0x71a4>
   10ebc:	and	x5, x5, #0xff
   10ec0:	ldrb	w5, [x4, x5]
   10ec4:	sub	w2, w5, #0x30
   10ec8:	and	w2, w2, #0xff
   10ecc:	cmp	w2, #0x9
   10ed0:	b.ls	10e88 <gcc_cp_fe_context@@Base+0x7168>  // b.plast
   10ed4:	cmp	w5, #0x2c
   10ed8:	mov	w3, w23
   10edc:	mov	w2, #0x0                   	// #0
   10ee0:	b.eq	1238c <gcc_cp_fe_context@@Base+0x866c>  // b.none
   10ee4:	cmp	w23, #0x0
   10ee8:	ccmp	w2, #0x0, #0x0, ge  // ge = tcont
   10eec:	b.eq	12350 <gcc_cp_fe_context@@Base+0x8630>  // b.none
   10ef0:	ldr	x0, [sp, #104]
   10ef4:	tbz	w0, #21, 12b74 <gcc_cp_fe_context@@Base+0x8e54>
   10ef8:	and	x0, x0, #0x1000
   10efc:	ldp	x21, x2, [x28]
   10f00:	str	x1, [sp, #296]
   10f04:	mov	w20, #0x7b                  	// #123
   10f08:	sub	x1, x22, x21
   10f0c:	cbnz	x0, 106a4 <gcc_cp_fe_context@@Base+0x6984>
   10f10:	ldr	x0, [sp, #120]
   10f14:	cbz	x0, 106a4 <gcc_cp_fe_context@@Base+0x6984>
   10f18:	and	x20, x20, #0xff
   10f1c:	ldrb	w20, [x0, x20]
   10f20:	b	106a4 <gcc_cp_fe_context@@Base+0x6984>
   10f24:	ldr	x0, [sp, #112]
   10f28:	cmp	x1, x0
   10f2c:	b.eq	1235c <gcc_cp_fe_context@@Base+0x863c>  // b.none
   10f30:	ldp	x21, x2, [x28]
   10f34:	sub	x0, x22, x21
   10f38:	mov	x20, x21
   10f3c:	add	x1, x0, #0x22
   10f40:	cmp	x2, x1
   10f44:	b.cc	10fa0 <gcc_cp_fe_context@@Base+0x7280>  // b.lo, b.ul, b.last
   10f48:	b	115bc <gcc_cp_fe_context@@Base+0x789c>
   10f4c:	str	x1, [x28, #8]
   10f50:	mov	x0, x21
   10f54:	bl	5470 <realloc@plt>
   10f58:	str	x0, [x28]
   10f5c:	subs	x1, x0, x21
   10f60:	add	x3, x24, x1
   10f64:	add	x2, x27, x1
   10f68:	mov	x21, x0
   10f6c:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   10f70:	b.eq	10f8c <gcc_cp_fe_context@@Base+0x726c>  // b.none
   10f74:	cmp	x24, #0x0
   10f78:	add	x22, x22, x1
   10f7c:	csel	x24, x3, x24, ne  // ne = any
   10f80:	cmp	x27, #0x0
   10f84:	csel	x27, x2, x27, ne  // ne = any
   10f88:	add	x19, x19, x1
   10f8c:	ldr	x2, [x28, #8]
   10f90:	sub	x1, x22, x0
   10f94:	add	x3, x1, #0x22
   10f98:	cmp	x3, x2
   10f9c:	b.ls	115b4 <gcc_cp_fe_context@@Base+0x7894>  // b.plast
   10fa0:	lsl	x1, x2, #1
   10fa4:	cmp	x2, #0x10, lsl #12
   10fa8:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   10fac:	cmp	x1, #0x10, lsl #12
   10fb0:	b.ls	10f4c <gcc_cp_fe_context@@Base+0x722c>  // b.plast
   10fb4:	mov	x1, #0x10000               	// #65536
   10fb8:	str	x25, [x28, #8]
   10fbc:	b	10f50 <gcc_cp_fe_context@@Base+0x7230>
   10fc0:	cmp	w20, #0x28
   10fc4:	b.eq	120ec <gcc_cp_fe_context@@Base+0x83cc>  // b.none
   10fc8:	cmp	w20, #0x29
   10fcc:	b.ne	1102c <gcc_cp_fe_context@@Base+0x730c>  // b.any
   10fd0:	ldr	x0, [sp, #104]
   10fd4:	tbnz	w0, #13, 10fe8 <gcc_cp_fe_context@@Base+0x72c8>
   10fd8:	ldr	w0, [sp, #148]
   10fdc:	cbnz	w0, 11738 <gcc_cp_fe_context@@Base+0x7a18>
   10fe0:	ldr	x0, [sp, #104]
   10fe4:	tbz	w0, #17, 12e7c <gcc_cp_fe_context@@Base+0x915c>
   10fe8:	ldp	x21, x2, [x28]
   10fec:	sub	x1, x22, x21
   10ff0:	b	10f10 <gcc_cp_fe_context@@Base+0x71f0>
   10ff4:	cmp	w20, #0x62
   10ff8:	b.eq	1204c <gcc_cp_fe_context@@Base+0x832c>  // b.none
   10ffc:	b.ls	11180 <gcc_cp_fe_context@@Base+0x7460>  // b.plast
   11000:	cmp	w20, #0x7b
   11004:	b.eq	120f8 <gcc_cp_fe_context@@Base+0x83d8>  // b.none
   11008:	cmp	w20, #0x7c
   1100c:	b.ne	110d4 <gcc_cp_fe_context@@Base+0x73b4>  // b.any
   11010:	ldp	x21, x2, [x28]
   11014:	mov	x0, #0x8400                	// #33792
   11018:	ldr	x1, [sp, #104]
   1101c:	tst	x1, x0
   11020:	sub	x1, x22, x21
   11024:	b.eq	108d8 <gcc_cp_fe_context@@Base+0x6bb8>  // b.none
   11028:	b	10f10 <gcc_cp_fe_context@@Base+0x71f0>
   1102c:	cmp	w20, #0x27
   11030:	b.ne	10fe8 <gcc_cp_fe_context@@Base+0x72c8>  // b.any
   11034:	ldp	x21, x2, [x28]
   11038:	ldr	x0, [sp, #104]
   1103c:	sub	x1, x22, x21
   11040:	tbnz	w0, #19, 106a4 <gcc_cp_fe_context@@Base+0x6984>
   11044:	add	x1, x1, #0x1
   11048:	cmp	x1, x2
   1104c:	b.hi	110b4 <gcc_cp_fe_context@@Base+0x7394>  // b.pmore
   11050:	b	12aa8 <gcc_cp_fe_context@@Base+0x8d88>
   11054:	str	x1, [x28, #8]
   11058:	mov	x0, x21
   1105c:	bl	5470 <realloc@plt>
   11060:	str	x0, [x28]
   11064:	subs	x1, x0, x21
   11068:	add	x4, x24, x1
   1106c:	add	x3, x26, x1
   11070:	add	x2, x27, x1
   11074:	mov	x21, x0
   11078:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   1107c:	b.eq	110a0 <gcc_cp_fe_context@@Base+0x7380>  // b.none
   11080:	cmp	x24, #0x0
   11084:	add	x22, x22, x1
   11088:	csel	x24, x4, x24, ne  // ne = any
   1108c:	cmp	x26, #0x0
   11090:	csel	x26, x3, x26, ne  // ne = any
   11094:	cmp	x27, #0x0
   11098:	csel	x27, x2, x27, ne  // ne = any
   1109c:	add	x19, x19, x1
   110a0:	ldr	x2, [x28, #8]
   110a4:	sub	x0, x22, x0
   110a8:	add	x0, x0, #0x1
   110ac:	cmp	x0, x2
   110b0:	b.ls	12aa8 <gcc_cp_fe_context@@Base+0x8d88>  // b.plast
   110b4:	lsl	x1, x2, #1
   110b8:	cmp	x2, #0x10, lsl #12
   110bc:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   110c0:	cmp	x1, #0x10, lsl #12
   110c4:	b.ls	11054 <gcc_cp_fe_context@@Base+0x7334>  // b.plast
   110c8:	mov	x1, #0x10000               	// #65536
   110cc:	str	x25, [x28, #8]
   110d0:	b	11058 <gcc_cp_fe_context@@Base+0x7338>
   110d4:	cmp	w20, #0x77
   110d8:	b.ne	10fe8 <gcc_cp_fe_context@@Base+0x72c8>  // b.any
   110dc:	ldp	x21, x2, [x28]
   110e0:	ldr	x0, [sp, #104]
   110e4:	sub	x1, x22, x21
   110e8:	tbnz	w0, #19, 106a4 <gcc_cp_fe_context@@Base+0x6984>
   110ec:	add	x1, x1, #0x1
   110f0:	mov	x26, x22
   110f4:	cmp	x2, x1
   110f8:	b.cc	11160 <gcc_cp_fe_context@@Base+0x7440>  // b.lo, b.ul, b.last
   110fc:	b	12ab4 <gcc_cp_fe_context@@Base+0x8d94>
   11100:	str	x1, [x28, #8]
   11104:	mov	x0, x21
   11108:	bl	5470 <realloc@plt>
   1110c:	str	x0, [x28]
   11110:	subs	x1, x0, x21
   11114:	add	x4, x24, x1
   11118:	add	x3, x26, x1
   1111c:	add	x2, x27, x1
   11120:	mov	x21, x0
   11124:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   11128:	b.eq	1114c <gcc_cp_fe_context@@Base+0x742c>  // b.none
   1112c:	cmp	x24, #0x0
   11130:	add	x22, x22, x1
   11134:	csel	x24, x4, x24, ne  // ne = any
   11138:	cmp	x26, #0x0
   1113c:	csel	x26, x3, x26, ne  // ne = any
   11140:	cmp	x27, #0x0
   11144:	csel	x27, x2, x27, ne  // ne = any
   11148:	add	x19, x19, x1
   1114c:	ldr	x2, [x28, #8]
   11150:	sub	x0, x22, x0
   11154:	add	x0, x0, #0x1
   11158:	cmp	x0, x2
   1115c:	b.ls	12ab4 <gcc_cp_fe_context@@Base+0x8d94>  // b.plast
   11160:	lsl	x1, x2, #1
   11164:	cmp	x2, #0x10, lsl #12
   11168:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   1116c:	cmp	x1, #0x10, lsl #12
   11170:	b.ls	11100 <gcc_cp_fe_context@@Base+0x73e0>  // b.plast
   11174:	mov	x1, #0x10000               	// #65536
   11178:	str	x25, [x28, #8]
   1117c:	b	11104 <gcc_cp_fe_context@@Base+0x73e4>
   11180:	cmp	w20, #0x57
   11184:	b.eq	121a0 <gcc_cp_fe_context@@Base+0x8480>  // b.none
   11188:	cmp	w20, #0x60
   1118c:	b.ne	1129c <gcc_cp_fe_context@@Base+0x757c>  // b.any
   11190:	ldp	x21, x2, [x28]
   11194:	ldr	x0, [sp, #104]
   11198:	sub	x1, x22, x21
   1119c:	tbnz	w0, #19, 106a4 <gcc_cp_fe_context@@Base+0x6984>
   111a0:	add	x1, x1, #0x1
   111a4:	cmp	x2, x1
   111a8:	b.cc	11210 <gcc_cp_fe_context@@Base+0x74f0>  // b.lo, b.ul, b.last
   111ac:	b	12a1c <gcc_cp_fe_context@@Base+0x8cfc>
   111b0:	str	x1, [x28, #8]
   111b4:	mov	x0, x21
   111b8:	bl	5470 <realloc@plt>
   111bc:	str	x0, [x28]
   111c0:	subs	x1, x0, x21
   111c4:	add	x4, x24, x1
   111c8:	add	x3, x26, x1
   111cc:	add	x2, x27, x1
   111d0:	mov	x21, x0
   111d4:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   111d8:	b.eq	111fc <gcc_cp_fe_context@@Base+0x74dc>  // b.none
   111dc:	cmp	x24, #0x0
   111e0:	add	x22, x22, x1
   111e4:	csel	x24, x4, x24, ne  // ne = any
   111e8:	cmp	x26, #0x0
   111ec:	csel	x26, x3, x26, ne  // ne = any
   111f0:	cmp	x27, #0x0
   111f4:	csel	x27, x2, x27, ne  // ne = any
   111f8:	add	x19, x19, x1
   111fc:	ldr	x2, [x28, #8]
   11200:	sub	x0, x22, x0
   11204:	add	x0, x0, #0x1
   11208:	cmp	x0, x2
   1120c:	b.ls	12a1c <gcc_cp_fe_context@@Base+0x8cfc>  // b.plast
   11210:	lsl	x1, x2, #1
   11214:	cmp	x2, #0x10, lsl #12
   11218:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   1121c:	cmp	x1, #0x10, lsl #12
   11220:	b.ls	111b0 <gcc_cp_fe_context@@Base+0x7490>  // b.plast
   11224:	mov	x1, #0x10000               	// #65536
   11228:	str	x25, [x28, #8]
   1122c:	b	111b4 <gcc_cp_fe_context@@Base+0x7494>
   11230:	sub	w0, w20, #0x31
   11234:	and	w0, w0, #0xff
   11238:	cmp	w0, #0x8
   1123c:	b.hi	10fe8 <gcc_cp_fe_context@@Base+0x72c8>  // b.pmore
   11240:	ldr	x0, [sp, #104]
   11244:	tbnz	w0, #14, 1069c <gcc_cp_fe_context@@Base+0x697c>
   11248:	ldr	w1, [sp, #152]
   1124c:	sub	w0, w20, #0x30
   11250:	and	w21, w0, #0xff
   11254:	cmp	w1, w0, uxtb
   11258:	b.cc	13024 <gcc_cp_fe_context@@Base+0x9304>  // b.lo, b.ul, b.last
   1125c:	ldr	w0, [sp, #148]
   11260:	subs	w1, w0, #0x1
   11264:	b.mi	12ac0 <gcc_cp_fe_context@@Base+0x8da0>  // b.first
   11268:	ldr	x2, [sp, #136]
   1126c:	mov	w0, #0x28                  	// #40
   11270:	smaddl	x0, w1, w0, x2
   11274:	add	x0, x0, #0x20
   11278:	b	11284 <gcc_cp_fe_context@@Base+0x7564>
   1127c:	cmn	w1, #0x1
   11280:	b.eq	12ac0 <gcc_cp_fe_context@@Base+0x8da0>  // b.none
   11284:	ldr	w2, [x0]
   11288:	sub	w1, w1, #0x1
   1128c:	sub	x0, x0, #0x28
   11290:	cmp	w21, w2
   11294:	b.ne	1127c <gcc_cp_fe_context@@Base+0x755c>  // b.any
   11298:	b	1069c <gcc_cp_fe_context@@Base+0x697c>
   1129c:	cmp	w20, #0x42
   112a0:	b.ne	10fe8 <gcc_cp_fe_context@@Base+0x72c8>  // b.any
   112a4:	ldp	x21, x2, [x28]
   112a8:	ldr	x0, [sp, #104]
   112ac:	sub	x1, x22, x21
   112b0:	tbnz	w0, #19, 106a4 <gcc_cp_fe_context@@Base+0x6984>
   112b4:	add	x1, x1, #0x1
   112b8:	cmp	x2, x1
   112bc:	b.cc	11324 <gcc_cp_fe_context@@Base+0x7604>  // b.lo, b.ul, b.last
   112c0:	b	12a90 <gcc_cp_fe_context@@Base+0x8d70>
   112c4:	str	x1, [x28, #8]
   112c8:	mov	x0, x21
   112cc:	bl	5470 <realloc@plt>
   112d0:	str	x0, [x28]
   112d4:	subs	x1, x0, x21
   112d8:	add	x4, x24, x1
   112dc:	add	x3, x26, x1
   112e0:	add	x2, x27, x1
   112e4:	mov	x21, x0
   112e8:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   112ec:	b.eq	11310 <gcc_cp_fe_context@@Base+0x75f0>  // b.none
   112f0:	cmp	x24, #0x0
   112f4:	add	x22, x22, x1
   112f8:	csel	x24, x4, x24, ne  // ne = any
   112fc:	cmp	x26, #0x0
   11300:	csel	x26, x3, x26, ne  // ne = any
   11304:	cmp	x27, #0x0
   11308:	csel	x27, x2, x27, ne  // ne = any
   1130c:	add	x19, x19, x1
   11310:	ldr	x2, [x28, #8]
   11314:	sub	x0, x22, x0
   11318:	add	x0, x0, #0x1
   1131c:	cmp	x0, x2
   11320:	b.ls	12a90 <gcc_cp_fe_context@@Base+0x8d70>  // b.plast
   11324:	lsl	x1, x2, #1
   11328:	cmp	x2, #0x10, lsl #12
   1132c:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   11330:	cmp	x1, #0x10, lsl #12
   11334:	b.ls	112c4 <gcc_cp_fe_context@@Base+0x75a4>  // b.plast
   11338:	mov	x1, #0x10000               	// #65536
   1133c:	str	x25, [x28, #8]
   11340:	b	112c8 <gcc_cp_fe_context@@Base+0x75a8>
   11344:	ldr	x0, [sp, #112]
   11348:	cmp	w20, #0x2b
   1134c:	ldr	x1, [sp, #296]
   11350:	cset	w21, ne  // ne = any
   11354:	cmp	w20, #0x3f
   11358:	cset	w20, ne  // ne = any
   1135c:	cmp	x0, x1
   11360:	b.eq	113b0 <gcc_cp_fe_context@@Base+0x7690>  // b.none
   11364:	ldp	x0, x6, [sp, #104]
   11368:	mov	w5, #0x3f                  	// #63
   1136c:	ldr	x3, [sp, #120]
   11370:	and	x4, x0, #0x2
   11374:	nop
   11378:	add	x2, x1, #0x1
   1137c:	str	x2, [sp, #296]
   11380:	ldrb	w0, [x1]
   11384:	cbz	x3, 11390 <gcc_cp_fe_context@@Base+0x7670>
   11388:	and	x0, x0, #0xff
   1138c:	ldrb	w0, [x3, x0]
   11390:	cmp	w0, #0x2a
   11394:	b.eq	11564 <gcc_cp_fe_context@@Base+0x7844>  // b.none
   11398:	cbnz	x4, 114fc <gcc_cp_fe_context@@Base+0x77dc>
   1139c:	cmp	w0, #0x2b
   113a0:	ccmp	w0, w5, #0x4, ne  // ne = any
   113a4:	b.eq	11574 <gcc_cp_fe_context@@Base+0x7854>  // b.none
   113a8:	str	x1, [sp, #296]
   113ac:	cbz	x26, 10bcc <gcc_cp_fe_context@@Base+0x6eac>
   113b0:	ldp	x23, x2, [x28]
   113b4:	sub	x0, x22, x23
   113b8:	add	x0, x0, #0x3
   113bc:	cbz	w20, 11484 <gcc_cp_fe_context@@Base+0x7764>
   113c0:	cmp	x2, x0
   113c4:	b.cc	11418 <gcc_cp_fe_context@@Base+0x76f8>  // b.lo, b.ul, b.last
   113c8:	b	11438 <gcc_cp_fe_context@@Base+0x7718>
   113cc:	str	x1, [x28, #8]
   113d0:	mov	x0, x23
   113d4:	bl	5470 <realloc@plt>
   113d8:	str	x0, [x28]
   113dc:	subs	x1, x0, x23
   113e0:	add	x2, x24, x1
   113e4:	mov	x23, x0
   113e8:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   113ec:	b.eq	11404 <gcc_cp_fe_context@@Base+0x76e4>  // b.none
   113f0:	cmp	x24, #0x0
   113f4:	add	x22, x22, x1
   113f8:	csel	x24, x2, x24, ne  // ne = any
   113fc:	add	x19, x19, x1
   11400:	add	x26, x26, x1
   11404:	ldr	x2, [x28, #8]
   11408:	sub	x0, x22, x0
   1140c:	add	x0, x0, #0x3
   11410:	cmp	x0, x2
   11414:	b.ls	11438 <gcc_cp_fe_context@@Base+0x7718>  // b.plast
   11418:	lsl	x1, x2, #1
   1141c:	cmp	x2, #0x10, lsl #12
   11420:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   11424:	cmp	x1, #0x10, lsl #12
   11428:	b.ls	113cc <gcc_cp_fe_context@@Base+0x76ac>  // b.plast
   1142c:	mov	x1, #0x10000               	// #65536
   11430:	str	x25, [x28, #8]
   11434:	b	113d0 <gcc_cp_fe_context@@Base+0x76b0>
   11438:	ldr	x3, [sp, #120]
   1143c:	ldr	x1, [sp, #296]
   11440:	ldurb	w0, [x1, #-2]
   11444:	cbz	x3, 12348 <gcc_cp_fe_context@@Base+0x8628>
   11448:	and	x0, x0, #0xff
   1144c:	ldrb	w2, [x3, #46]
   11450:	ldrb	w0, [x3, x0]
   11454:	cmp	w2, w0
   11458:	b.eq	122e4 <gcc_cp_fe_context@@Base+0x85c4>  // b.none
   1145c:	sub	w0, w26, w22
   11460:	mov	w1, #0x12                  	// #18
   11464:	sub	w0, w0, #0x6
   11468:	mov	w20, #0x0                   	// #0
   1146c:	strb	w1, [x22]
   11470:	sturh	w0, [x22, #1]
   11474:	ldp	x23, x2, [x28]
   11478:	add	x22, x22, #0x3
   1147c:	sub	x0, x22, x23
   11480:	add	x0, x0, #0x3
   11484:	cmp	x2, x0
   11488:	b.cc	114dc <gcc_cp_fe_context@@Base+0x77bc>  // b.lo, b.ul, b.last
   1148c:	b	118e4 <gcc_cp_fe_context@@Base+0x7bc4>
   11490:	str	x1, [x28, #8]
   11494:	mov	x0, x23
   11498:	bl	5470 <realloc@plt>
   1149c:	str	x0, [x28]
   114a0:	subs	x1, x0, x23
   114a4:	add	x2, x24, x1
   114a8:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   114ac:	b.eq	114c4 <gcc_cp_fe_context@@Base+0x77a4>  // b.none
   114b0:	cmp	x24, #0x0
   114b4:	add	x22, x22, x1
   114b8:	csel	x24, x2, x24, ne  // ne = any
   114bc:	add	x19, x19, x1
   114c0:	add	x26, x26, x1
   114c4:	ldr	x2, [x28, #8]
   114c8:	mov	x23, x0
   114cc:	sub	x0, x22, x0
   114d0:	add	x0, x0, #0x3
   114d4:	cmp	x0, x2
   114d8:	b.ls	118e4 <gcc_cp_fe_context@@Base+0x7bc4>  // b.plast
   114dc:	lsl	x1, x2, #1
   114e0:	cmp	x2, #0x10, lsl #12
   114e4:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   114e8:	cmp	x1, #0x10, lsl #12
   114ec:	b.ls	11490 <gcc_cp_fe_context@@Base+0x7770>  // b.plast
   114f0:	mov	x1, #0x10000               	// #65536
   114f4:	str	x25, [x28, #8]
   114f8:	b	11494 <gcc_cp_fe_context@@Base+0x7774>
   114fc:	cmp	w0, #0x5c
   11500:	b.ne	113a8 <gcc_cp_fe_context@@Base+0x7688>  // b.any
   11504:	cmp	x2, x6
   11508:	b.eq	11884 <gcc_cp_fe_context@@Base+0x7b64>  // b.none
   1150c:	add	x7, x1, #0x2
   11510:	str	x7, [sp, #296]
   11514:	ldrb	w0, [x1, #1]
   11518:	cbz	x3, 11524 <gcc_cp_fe_context@@Base+0x7804>
   1151c:	and	x0, x0, #0xff
   11520:	ldrb	w0, [x3, x0]
   11524:	cmp	w0, #0x2b
   11528:	cset	w2, ne  // ne = any
   1152c:	cmp	w0, #0x3f
   11530:	cset	w0, ne  // ne = any
   11534:	cmp	w2, #0x0
   11538:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   1153c:	b.ne	113a8 <gcc_cp_fe_context@@Base+0x7688>  // b.any
   11540:	sxtb	w2, w2
   11544:	sxtb	w0, w0
   11548:	mov	x1, x7
   1154c:	orr	w21, w2, w21
   11550:	orr	w20, w0, w20
   11554:	cmp	x1, x6
   11558:	b.ne	11378 <gcc_cp_fe_context@@Base+0x7658>  // b.any
   1155c:	cbnz	x26, 113b0 <gcc_cp_fe_context@@Base+0x7690>
   11560:	b	11670 <gcc_cp_fe_context@@Base+0x7950>
   11564:	mov	x1, x2
   11568:	mov	w0, #0x1                   	// #1
   1156c:	mov	w2, w0
   11570:	b	1154c <gcc_cp_fe_context@@Base+0x782c>
   11574:	cmp	w0, #0x2b
   11578:	mov	x1, x2
   1157c:	cset	w2, ne  // ne = any
   11580:	cmp	w0, #0x3f
   11584:	cset	w0, ne  // ne = any
   11588:	b	1154c <gcc_cp_fe_context@@Base+0x782c>
   1158c:	mov	w0, #0x3                   	// #3
   11590:	strb	w0, [x22], #1
   11594:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   11598:	cmp	w0, #0x5c
   1159c:	mov	x23, x22
   115a0:	b.ne	10ae4 <gcc_cp_fe_context@@Base+0x6dc4>  // b.any
   115a4:	ldrb	w0, [x3, #1]
   115a8:	cmp	w0, #0x7b
   115ac:	b.ne	10ae4 <gcc_cp_fe_context@@Base+0x6dc4>  // b.any
   115b0:	b	106c4 <gcc_cp_fe_context@@Base+0x69a4>
   115b4:	mov	x20, x0
   115b8:	mov	x0, x1
   115bc:	add	x0, x0, #0x1
   115c0:	mov	x26, x22
   115c4:	cmp	x2, x0
   115c8:	b.cc	11630 <gcc_cp_fe_context@@Base+0x7910>  // b.lo, b.ul, b.last
   115cc:	b	11930 <gcc_cp_fe_context@@Base+0x7c10>
   115d0:	str	x1, [x28, #8]
   115d4:	mov	x0, x20
   115d8:	bl	5470 <realloc@plt>
   115dc:	str	x0, [x28]
   115e0:	subs	x1, x0, x20
   115e4:	add	x4, x24, x1
   115e8:	add	x3, x26, x1
   115ec:	add	x2, x27, x1
   115f0:	mov	x20, x0
   115f4:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   115f8:	b.eq	1161c <gcc_cp_fe_context@@Base+0x78fc>  // b.none
   115fc:	cmp	x24, #0x0
   11600:	add	x22, x22, x1
   11604:	csel	x24, x4, x24, ne  // ne = any
   11608:	cmp	x26, #0x0
   1160c:	csel	x26, x3, x26, ne  // ne = any
   11610:	cmp	x27, #0x0
   11614:	csel	x27, x2, x27, ne  // ne = any
   11618:	add	x19, x19, x1
   1161c:	ldr	x2, [x28, #8]
   11620:	sub	x0, x22, x0
   11624:	add	x0, x0, #0x1
   11628:	cmp	x0, x2
   1162c:	b.ls	11930 <gcc_cp_fe_context@@Base+0x7c10>  // b.plast
   11630:	lsl	x1, x2, #1
   11634:	cmp	x2, #0x10, lsl #12
   11638:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   1163c:	cmp	x1, #0x10, lsl #12
   11640:	b.ls	115d0 <gcc_cp_fe_context@@Base+0x78b0>  // b.plast
   11644:	mov	x1, #0x10000               	// #65536
   11648:	str	x25, [x28, #8]
   1164c:	b	115d4 <gcc_cp_fe_context@@Base+0x78b4>
   11650:	ldr	x0, [sp, #112]
   11654:	cmp	w20, #0x2b
   11658:	ldr	x1, [sp, #296]
   1165c:	cset	w21, ne  // ne = any
   11660:	cmp	w20, #0x3f
   11664:	cset	w20, ne  // ne = any
   11668:	cmp	x1, x0
   1166c:	b.ne	11364 <gcc_cp_fe_context@@Base+0x7644>  // b.any
   11670:	mov	x26, x28
   11674:	cbz	x24, 1168c <gcc_cp_fe_context@@Base+0x796c>
   11678:	sub	x0, x22, x24
   1167c:	mov	w1, #0xe                   	// #14
   11680:	sub	w0, w0, #0x3
   11684:	strb	w1, [x24]
   11688:	sturh	w0, [x24, #1]
   1168c:	ldr	w0, [sp, #148]
   11690:	cbnz	w0, 12464 <gcc_cp_fe_context@@Base+0x8744>
   11694:	ldp	x23, x24, [sp, #48]
   11698:	ldp	x27, x28, [sp, #80]
   1169c:	ldr	x0, [sp, #104]
   116a0:	tbz	w0, #18, 11be4 <gcc_cp_fe_context@@Base+0x7ec4>
   116a4:	ldp	x19, x0, [x26]
   116a8:	sub	x1, x22, x19
   116ac:	add	x1, x1, #0x1
   116b0:	cmp	x1, x0
   116b4:	b.ls	11bdc <gcc_cp_fe_context@@Base+0x7ebc>  // b.plast
   116b8:	mov	x20, #0x10000               	// #65536
   116bc:	b	116f8 <gcc_cp_fe_context@@Base+0x79d8>
   116c0:	str	x1, [x26, #8]
   116c4:	mov	x0, x19
   116c8:	bl	5470 <realloc@plt>
   116cc:	subs	x1, x0, x19
   116d0:	str	x0, [x26]
   116d4:	add	x1, x22, x1
   116d8:	mov	x19, x0
   116dc:	csel	x22, x1, x22, ne  // ne = any
   116e0:	sub	x1, x22, x0
   116e4:	add	x1, x1, #0x1
   116e8:	cbz	x0, 13018 <gcc_cp_fe_context@@Base+0x92f8>
   116ec:	ldr	x0, [x26, #8]
   116f0:	cmp	x1, x0
   116f4:	b.ls	11bdc <gcc_cp_fe_context@@Base+0x7ebc>  // b.plast
   116f8:	lsl	x1, x0, #1
   116fc:	cmp	x0, #0x10, lsl #12
   11700:	b.eq	10a60 <gcc_cp_fe_context@@Base+0x6d40>  // b.none
   11704:	cmp	x1, #0x10, lsl #12
   11708:	b.ls	116c0 <gcc_cp_fe_context@@Base+0x79a0>  // b.plast
   1170c:	mov	x1, #0x10000               	// #65536
   11710:	str	x20, [x26, #8]
   11714:	b	116c4 <gcc_cp_fe_context@@Base+0x79a4>
   11718:	ldr	x0, [sp, #104]
   1171c:	mov	x3, #0x0                   	// #0
   11720:	tbnz	w0, #13, 118c0 <gcc_cp_fe_context@@Base+0x7ba0>
   11724:	ldr	x0, [sp, #104]
   11728:	tbz	w0, #15, 106a4 <gcc_cp_fe_context@@Base+0x6984>
   1172c:	cmp	w4, #0x7c
   11730:	b.ne	106a4 <gcc_cp_fe_context@@Base+0x6984>  // b.any
   11734:	b	1081c <gcc_cp_fe_context@@Base+0x6afc>
   11738:	cbz	x24, 11ae0 <gcc_cp_fe_context@@Base+0x7dc0>
   1173c:	ldp	x20, x2, [x28]
   11740:	sub	x0, x22, x20
   11744:	add	x0, x0, #0x1
   11748:	cmp	x0, x2
   1174c:	b.hi	117ac <gcc_cp_fe_context@@Base+0x7a8c>  // b.pmore
   11750:	b	11c04 <gcc_cp_fe_context@@Base+0x7ee4>
   11754:	str	x1, [x28, #8]
   11758:	mov	x0, x20
   1175c:	bl	5470 <realloc@plt>
   11760:	str	x0, [x28]
   11764:	subs	x1, x0, x20
   11768:	add	x3, x26, x1
   1176c:	add	x2, x27, x1
   11770:	mov	x20, x0
   11774:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   11778:	b.eq	11798 <gcc_cp_fe_context@@Base+0x7a78>  // b.none
   1177c:	cmp	x26, #0x0
   11780:	add	x22, x22, x1
   11784:	csel	x26, x3, x26, ne  // ne = any
   11788:	cmp	x27, #0x0
   1178c:	csel	x27, x2, x27, ne  // ne = any
   11790:	add	x19, x19, x1
   11794:	add	x24, x24, x1
   11798:	ldr	x2, [x28, #8]
   1179c:	sub	x0, x22, x0
   117a0:	add	x0, x0, #0x1
   117a4:	cmp	x0, x2
   117a8:	b.ls	11c04 <gcc_cp_fe_context@@Base+0x7ee4>  // b.plast
   117ac:	lsl	x1, x2, #1
   117b0:	cmp	x2, #0x10, lsl #12
   117b4:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   117b8:	cmp	x1, #0x10, lsl #12
   117bc:	b.ls	11754 <gcc_cp_fe_context@@Base+0x7a34>  // b.plast
   117c0:	mov	x1, #0x10000               	// #65536
   117c4:	str	x25, [x28, #8]
   117c8:	b	11758 <gcc_cp_fe_context@@Base+0x7a38>
   117cc:	ldr	x0, [sp, #104]
   117d0:	tbnz	w0, #13, 10d98 <gcc_cp_fe_context@@Base+0x7078>
   117d4:	b	106a4 <gcc_cp_fe_context@@Base+0x6984>
   117d8:	ldr	x0, [x28, #8]
   117dc:	add	x3, x2, #0x2
   117e0:	str	x3, [x1, #16]
   117e4:	add	x2, x2, #0x3
   117e8:	cmp	x0, x2
   117ec:	b.cc	1182c <gcc_cp_fe_context@@Base+0x7b0c>  // b.lo, b.ul, b.last
   117f0:	b	12030 <gcc_cp_fe_context@@Base+0x8310>
   117f4:	str	x1, [x28, #8]
   117f8:	mov	x0, x20
   117fc:	bl	5470 <realloc@plt>
   11800:	subs	x1, x0, x20
   11804:	str	x0, [x28]
   11808:	add	x1, x22, x1
   1180c:	mov	x20, x0
   11810:	csel	x22, x1, x22, ne  // ne = any
   11814:	sub	x1, x22, x0
   11818:	add	x1, x1, #0x3
   1181c:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   11820:	ldr	x0, [x28, #8]
   11824:	cmp	x1, x0
   11828:	b.ls	12030 <gcc_cp_fe_context@@Base+0x8310>  // b.plast
   1182c:	lsl	x1, x0, #1
   11830:	cmp	x0, #0x10, lsl #12
   11834:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   11838:	cmp	x1, #0x10, lsl #12
   1183c:	b.ls	117f4 <gcc_cp_fe_context@@Base+0x7ad4>  // b.plast
   11840:	mov	x1, #0x10000               	// #65536
   11844:	str	x25, [x28, #8]
   11848:	b	117f8 <gcc_cp_fe_context@@Base+0x7ad8>
   1184c:	lsl	w0, w1, #1
   11850:	mov	w1, #0x28                  	// #40
   11854:	mov	w2, w0
   11858:	str	w2, [sp, #156]
   1185c:	umull	x1, w0, w1
   11860:	ldr	x0, [sp, #136]
   11864:	bl	5470 <realloc@plt>
   11868:	str	x0, [sp, #136]
   1186c:	cbnz	x0, 10c40 <gcc_cp_fe_context@@Base+0x6f20>
   11870:	ldp	x21, x22, [sp, #32]
   11874:	ldp	x23, x24, [sp, #48]
   11878:	ldp	x27, x28, [sp, #80]
   1187c:	mov	w20, #0xc                   	// #12
   11880:	b	10a68 <gcc_cp_fe_context@@Base+0x6d48>
   11884:	ldr	x0, [sp, #136]
   11888:	mov	w20, #0x5                   	// #5
   1188c:	bl	5440 <free@plt>
   11890:	ldp	x21, x22, [sp, #32]
   11894:	ldp	x23, x24, [sp, #48]
   11898:	ldp	x27, x28, [sp, #80]
   1189c:	b	10a68 <gcc_cp_fe_context@@Base+0x6d48>
   118a0:	mov	x23, x22
   118a4:	b	10ae4 <gcc_cp_fe_context@@Base+0x6dc4>
   118a8:	mov	w0, #0xa                   	// #10
   118ac:	strb	w0, [x22], #1
   118b0:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   118b4:	mov	w0, #0x9                   	// #9
   118b8:	strb	w0, [x22], #1
   118bc:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   118c0:	cmp	w4, #0x29
   118c4:	b.eq	1081c <gcc_cp_fe_context@@Base+0x6afc>  // b.none
   118c8:	ldr	x0, [sp, #104]
   118cc:	tbnz	w0, #15, 1172c <gcc_cp_fe_context@@Base+0x7a0c>
   118d0:	cmp	x3, #0x0
   118d4:	ccmp	w5, #0x0, #0x4, ne  // ne = any
   118d8:	b.eq	106a4 <gcc_cp_fe_context@@Base+0x6984>  // b.none
   118dc:	ldrb	w0, [x3]
   118e0:	b	10814 <gcc_cp_fe_context@@Base+0x6af4>
   118e4:	add	x23, x22, #0x3
   118e8:	cmp	x26, x22
   118ec:	mov	x0, x23
   118f0:	sub	w22, w22, w26
   118f4:	add	x2, x26, #0x3
   118f8:	b.eq	11914 <gcc_cp_fe_context@@Base+0x7bf4>  // b.none
   118fc:	nop
   11900:	ldurb	w1, [x0, #-4]
   11904:	sub	x0, x0, #0x1
   11908:	strb	w1, [x0]
   1190c:	cmp	x0, x2
   11910:	b.ne	11900 <gcc_cp_fe_context@@Base+0x7be0>  // b.any
   11914:	add	w20, w20, #0xf
   11918:	strb	w20, [x26]
   1191c:	sturh	w22, [x26, #1]
   11920:	cbz	w21, 1211c <gcc_cp_fe_context@@Base+0x83fc>
   11924:	mov	x22, x23
   11928:	mov	x27, #0x0                   	// #0
   1192c:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   11930:	ldr	x0, [sp, #296]
   11934:	ldrb	w0, [x0]
   11938:	cmp	w0, #0x5e
   1193c:	cset	w0, eq  // eq = none
   11940:	add	w0, w0, #0x4
   11944:	strb	w0, [x22], #1
   11948:	ldr	x0, [sp, #296]
   1194c:	str	x0, [sp, #168]
   11950:	ldrb	w0, [x0]
   11954:	cmp	w0, #0x5e
   11958:	b.ne	1196c <gcc_cp_fe_context@@Base+0x7c4c>  // b.any
   1195c:	ldr	x0, [sp, #168]
   11960:	add	x0, x0, #0x1
   11964:	str	x0, [sp, #168]
   11968:	str	x0, [sp, #296]
   1196c:	ldp	x20, x2, [x28]
   11970:	sub	x0, x22, x20
   11974:	add	x0, x0, #0x1
   11978:	cmp	x2, x0
   1197c:	b.cc	119e4 <gcc_cp_fe_context@@Base+0x7cc4>  // b.lo, b.ul, b.last
   11980:	b	11c24 <gcc_cp_fe_context@@Base+0x7f04>
   11984:	str	x1, [x28, #8]
   11988:	mov	x0, x20
   1198c:	bl	5470 <realloc@plt>
   11990:	str	x0, [x28]
   11994:	subs	x1, x0, x20
   11998:	add	x4, x24, x1
   1199c:	add	x3, x26, x1
   119a0:	add	x2, x27, x1
   119a4:	mov	x20, x0
   119a8:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   119ac:	b.eq	119d0 <gcc_cp_fe_context@@Base+0x7cb0>  // b.none
   119b0:	cmp	x24, #0x0
   119b4:	add	x22, x22, x1
   119b8:	csel	x24, x4, x24, ne  // ne = any
   119bc:	cmp	x26, #0x0
   119c0:	csel	x26, x3, x26, ne  // ne = any
   119c4:	cmp	x27, #0x0
   119c8:	csel	x27, x2, x27, ne  // ne = any
   119cc:	add	x19, x19, x1
   119d0:	ldr	x2, [x28, #8]
   119d4:	sub	x0, x22, x0
   119d8:	add	x0, x0, #0x1
   119dc:	cmp	x0, x2
   119e0:	b.ls	11c24 <gcc_cp_fe_context@@Base+0x7f04>  // b.plast
   119e4:	lsl	x1, x2, #1
   119e8:	cmp	x2, #0x10, lsl #12
   119ec:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   119f0:	cmp	x1, #0x10, lsl #12
   119f4:	b.ls	11984 <gcc_cp_fe_context@@Base+0x7c64>  // b.plast
   119f8:	mov	x1, #0x10000               	// #65536
   119fc:	str	x25, [x28, #8]
   11a00:	b	11988 <gcc_cp_fe_context@@Base+0x7c68>
   11a04:	ldr	x0, [sp, #136]
   11a08:	mov	w20, #0xc                   	// #12
   11a0c:	bl	5440 <free@plt>
   11a10:	ldp	x21, x22, [sp, #32]
   11a14:	b	10a68 <gcc_cp_fe_context@@Base+0x6d48>
   11a18:	sub	w3, w22, w19
   11a1c:	add	x20, x22, #0x3
   11a20:	cmp	x22, x19
   11a24:	add	w3, w3, #0x3
   11a28:	mov	x0, x20
   11a2c:	add	x2, x19, #0x3
   11a30:	b.eq	11a4c <gcc_cp_fe_context@@Base+0x7d2c>  // b.none
   11a34:	nop
   11a38:	ldurb	w1, [x0, #-4]
   11a3c:	sub	x0, x0, #0x1
   11a40:	strb	w1, [x0]
   11a44:	cmp	x0, x2
   11a48:	b.ne	11a38 <gcc_cp_fe_context@@Base+0x7d18>  // b.any
   11a4c:	mov	w0, #0xf                   	// #15
   11a50:	strb	w0, [x19]
   11a54:	sturh	w3, [x19, #1]
   11a58:	cbz	x24, 11a70 <gcc_cp_fe_context@@Base+0x7d50>
   11a5c:	sub	x0, x20, x24
   11a60:	mov	w1, #0xe                   	// #14
   11a64:	sub	w0, w0, #0x3
   11a68:	strb	w1, [x24]
   11a6c:	sturh	w0, [x24, #1]
   11a70:	ldp	x19, x0, [x28]
   11a74:	sub	x1, x20, x19
   11a78:	add	x1, x1, #0x3
   11a7c:	cmp	x0, x1
   11a80:	b.cc	11ac0 <gcc_cp_fe_context@@Base+0x7da0>  // b.lo, b.ul, b.last
   11a84:	b	11e5c <gcc_cp_fe_context@@Base+0x813c>
   11a88:	str	x1, [x28, #8]
   11a8c:	mov	x0, x19
   11a90:	bl	5470 <realloc@plt>
   11a94:	subs	x1, x0, x19
   11a98:	str	x0, [x28]
   11a9c:	add	x1, x20, x1
   11aa0:	mov	x19, x0
   11aa4:	csel	x20, x1, x20, ne  // ne = any
   11aa8:	sub	x1, x20, x0
   11aac:	add	x1, x1, #0x3
   11ab0:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   11ab4:	ldr	x0, [x28, #8]
   11ab8:	cmp	x1, x0
   11abc:	b.ls	11e5c <gcc_cp_fe_context@@Base+0x813c>  // b.plast
   11ac0:	lsl	x1, x0, #1
   11ac4:	cmp	x0, #0x10, lsl #12
   11ac8:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   11acc:	cmp	x1, #0x10, lsl #12
   11ad0:	b.ls	11a88 <gcc_cp_fe_context@@Base+0x7d68>  // b.plast
   11ad4:	mov	x1, #0x10000               	// #65536
   11ad8:	str	x25, [x28, #8]
   11adc:	b	11a8c <gcc_cp_fe_context@@Base+0x7d6c>
   11ae0:	ldr	w0, [sp, #148]
   11ae4:	mov	x27, #0x0                   	// #0
   11ae8:	ldr	x3, [sp, #136]
   11aec:	sub	w0, w0, #0x1
   11af0:	mov	w2, w0
   11af4:	mov	w0, #0x28                  	// #40
   11af8:	str	w2, [sp, #148]
   11afc:	ldr	x1, [x28]
   11b00:	umull	x0, w2, w0
   11b04:	add	x2, x3, x0
   11b08:	ldr	x19, [x3, x0]
   11b0c:	ldr	x0, [x2, #8]
   11b10:	add	x19, x1, x19
   11b14:	ldr	x7, [x2, #24]
   11b18:	sub	x6, x0, #0x1
   11b1c:	ldr	w20, [x2, #32]
   11b20:	cmp	x0, #0x0
   11b24:	add	x6, x1, x6
   11b28:	add	x26, x1, x7
   11b2c:	csel	x24, x6, xzr, ne  // ne = any
   11b30:	cmp	w20, #0xff
   11b34:	b.hi	10bcc <gcc_cp_fe_context@@Base+0x6eac>  // b.pmore
   11b38:	ldr	x0, [x2, #16]
   11b3c:	ldr	w2, [sp, #152]
   11b40:	sub	w21, w2, w20, uxtb
   11b44:	and	w20, w20, #0xff
   11b48:	and	w21, w21, #0xff
   11b4c:	strb	w21, [x1, x0]
   11b50:	ldp	x23, x2, [x28]
   11b54:	sub	x0, x22, x23
   11b58:	add	x0, x0, #0x3
   11b5c:	cmp	x0, x2
   11b60:	b.hi	11bbc <gcc_cp_fe_context@@Base+0x7e9c>  // b.pmore
   11b64:	b	12540 <gcc_cp_fe_context@@Base+0x8820>
   11b68:	str	x1, [x28, #8]
   11b6c:	mov	x0, x23
   11b70:	bl	5470 <realloc@plt>
   11b74:	str	x0, [x28]
   11b78:	subs	x1, x0, x23
   11b7c:	add	x3, x24, x1
   11b80:	add	x2, x26, x1
   11b84:	mov	x23, x0
   11b88:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   11b8c:	b.eq	11ba8 <gcc_cp_fe_context@@Base+0x7e88>  // b.none
   11b90:	cmp	x24, #0x0
   11b94:	add	x22, x22, x1
   11b98:	csel	x24, x3, x24, ne  // ne = any
   11b9c:	cmp	x26, #0x0
   11ba0:	csel	x26, x2, x26, ne  // ne = any
   11ba4:	add	x19, x19, x1
   11ba8:	ldr	x2, [x28, #8]
   11bac:	sub	x0, x22, x0
   11bb0:	add	x0, x0, #0x3
   11bb4:	cmp	x0, x2
   11bb8:	b.ls	12540 <gcc_cp_fe_context@@Base+0x8820>  // b.plast
   11bbc:	lsl	x1, x2, #1
   11bc0:	cmp	x2, #0x10, lsl #12
   11bc4:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   11bc8:	cmp	x1, #0x10, lsl #12
   11bcc:	b.ls	11b68 <gcc_cp_fe_context@@Base+0x7e48>  // b.plast
   11bd0:	mov	x1, #0x10000               	// #65536
   11bd4:	str	x25, [x28, #8]
   11bd8:	b	11b6c <gcc_cp_fe_context@@Base+0x7e4c>
   11bdc:	mov	w0, #0x1                   	// #1
   11be0:	strb	w0, [x22], #1
   11be4:	ldr	x0, [sp, #136]
   11be8:	mov	w20, #0x0                   	// #0
   11bec:	bl	5440 <free@plt>
   11bf0:	ldr	x0, [x26]
   11bf4:	sub	x22, x22, x0
   11bf8:	str	x22, [x26, #16]
   11bfc:	ldp	x21, x22, [sp, #32]
   11c00:	b	10a68 <gcc_cp_fe_context@@Base+0x6d48>
   11c04:	sub	x0, x22, x24
   11c08:	mov	w2, #0x14                  	// #20
   11c0c:	strb	w2, [x22], #1
   11c10:	sub	w0, w0, #0x3
   11c14:	mov	w1, #0xe                   	// #14
   11c18:	strb	w1, [x24]
   11c1c:	sturh	w0, [x24, #1]
   11c20:	b	1078c <gcc_cp_fe_context@@Base+0x6a6c>
   11c24:	mov	x23, x22
   11c28:	mov	w0, #0x20                  	// #32
   11c2c:	strb	w0, [x23], #1
   11c30:	stp	xzr, xzr, [x23]
   11c34:	stp	xzr, xzr, [x23, #16]
   11c38:	ldurb	w0, [x22, #-1]
   11c3c:	cmp	w0, #0x5
   11c40:	b.eq	12378 <gcc_cp_fe_context@@Base+0x8658>  // b.none
   11c44:	ldr	x0, [sp, #112]
   11c48:	ldr	x3, [sp, #296]
   11c4c:	cmp	x0, x3
   11c50:	b.eq	1235c <gcc_cp_fe_context@@Base+0x863c>  // b.none
   11c54:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
   11c58:	add	x0, x0, #0xda8
   11c5c:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   11c60:	add	x1, x1, #0xda0
   11c64:	stp	x1, x0, [sp, #232]
   11c68:	mov	w1, #0xffffffff            	// #-1
   11c6c:	ldr	w0, [sp, #104]
   11c70:	mov	w10, #0x0                   	// #0
   11c74:	stp	x27, x19, [sp, #248]
   11c78:	and	w0, w0, #0x1
   11c7c:	mov	w19, w1
   11c80:	mov	x1, x3
   11c84:	stp	x26, x24, [sp, #264]
   11c88:	mov	x26, x23
   11c8c:	mov	w24, w0
   11c90:	str	x28, [sp, #280]
   11c94:	ldp	x23, x28, [sp, #112]
   11c98:	ldr	x21, [sp, #160]
   11c9c:	b	11d30 <gcc_cp_fe_context@@Base+0x8010>
   11ca0:	cmp	w0, #0x2d
   11ca4:	ldrb	w6, [x1, #1]
   11ca8:	ccmp	w10, #0x0, #0x4, eq  // eq = none
   11cac:	b.eq	11dc4 <gcc_cp_fe_context@@Base+0x80a4>  // b.none
   11cb0:	cmp	w6, #0x5d
   11cb4:	b.ne	12a34 <gcc_cp_fe_context@@Base+0x8d14>  // b.any
   11cb8:	ldr	x2, [sp, #128]
   11cbc:	sub	x7, x1, #0x1
   11cc0:	cmp	x2, x7
   11cc4:	b.hi	11cd4 <gcc_cp_fe_context@@Base+0x7fb4>  // b.pmore
   11cc8:	ldurb	w7, [x1, #-1]
   11ccc:	cmp	w7, #0x5b
   11cd0:	b.eq	11d70 <gcc_cp_fe_context@@Base+0x8050>  // b.none
   11cd4:	ldr	x2, [sp, #128]
   11cd8:	sub	x7, x1, #0x2
   11cdc:	cmp	x2, x7
   11ce0:	b.hi	11cf0 <gcc_cp_fe_context@@Base+0x7fd0>  // b.pmore
   11ce4:	ldurb	w7, [x1, #-2]
   11ce8:	cmp	w7, #0x5b
   11cec:	b.eq	12338 <gcc_cp_fe_context@@Base+0x8618>  // b.none
   11cf0:	cmp	w6, #0x5d
   11cf4:	b.eq	11d98 <gcc_cp_fe_context@@Base+0x8078>  // b.none
   11cf8:	ldr	x4, [sp, #104]
   11cfc:	mov	w0, w19
   11d00:	mov	x5, x26
   11d04:	mov	x3, x28
   11d08:	mov	x2, x23
   11d0c:	add	x1, sp, #0x128
   11d10:	bl	e0c8 <gcc_cp_fe_context@@Base+0x43a8>
   11d14:	mov	w20, w0
   11d18:	cbnz	w0, 12be4 <gcc_cp_fe_context@@Base+0x8ec4>
   11d1c:	ldr	x1, [sp, #296]
   11d20:	mov	w19, #0xffffffff            	// #-1
   11d24:	nop
   11d28:	cmp	x1, x23
   11d2c:	b.eq	1235c <gcc_cp_fe_context@@Base+0x863c>  // b.none
   11d30:	add	x4, x1, #0x1
   11d34:	str	x4, [sp, #296]
   11d38:	ldrb	w0, [x1]
   11d3c:	cbz	x28, 11d48 <gcc_cp_fe_context@@Base+0x8028>
   11d40:	and	x0, x0, #0xff
   11d44:	ldrb	w0, [x28, x0]
   11d48:	cmp	w0, #0x5c
   11d4c:	ccmp	w24, #0x0, #0x4, eq  // eq = none
   11d50:	b.ne	11e18 <gcc_cp_fe_context@@Base+0x80f8>  // b.any
   11d54:	cmp	w0, #0x5d
   11d58:	b.ne	11ca0 <gcc_cp_fe_context@@Base+0x7f80>  // b.any
   11d5c:	ldr	x2, [sp, #168]
   11d60:	add	x6, x2, #0x1
   11d64:	cmp	x4, x6
   11d68:	b.ne	12bfc <gcc_cp_fe_context@@Base+0x8edc>  // b.any
   11d6c:	ldrb	w6, [x1, #1]
   11d70:	cmp	w6, #0x2d
   11d74:	b.eq	11dd0 <gcc_cp_fe_context@@Base+0x80b0>  // b.none
   11d78:	ldr	x2, [sp, #104]
   11d7c:	tbz	w2, #2, 11d98 <gcc_cp_fe_context@@Base+0x8078>
   11d80:	cmp	w6, #0x3a
   11d84:	mov	w7, #0x5b                  	// #91
   11d88:	ccmp	w0, w7, #0x0, eq  // eq = none
   11d8c:	b.eq	125f8 <gcc_cp_fe_context@@Base+0x88d8>  // b.none
   11d90:	cmp	w0, #0x5b
   11d94:	b.eq	11f60 <gcc_cp_fe_context@@Base+0x8240>  // b.none
   11d98:	ubfx	x4, x0, #3, #5
   11d9c:	and	w6, w0, #0x7
   11da0:	mov	w1, #0x1                   	// #1
   11da4:	mov	w19, w0
   11da8:	lsl	w0, w1, w6
   11dac:	mov	w10, #0x0                   	// #0
   11db0:	ldrb	w1, [x26, x4]
   11db4:	orr	w0, w0, w1
   11db8:	strb	w0, [x26, x4]
   11dbc:	ldr	x1, [sp, #296]
   11dc0:	b	11d28 <gcc_cp_fe_context@@Base+0x8008>
   11dc4:	cmp	w0, #0x2d
   11dc8:	b.ne	11d70 <gcc_cp_fe_context@@Base+0x8050>  // b.any
   11dcc:	b	11cb8 <gcc_cp_fe_context@@Base+0x7f98>
   11dd0:	ldrb	w6, [x1, #2]
   11dd4:	cmp	w6, #0x5d
   11dd8:	b.eq	11d98 <gcc_cp_fe_context@@Base+0x8078>  // b.none
   11ddc:	cmp	x4, x23
   11de0:	b.eq	12da0 <gcc_cp_fe_context@@Base+0x9080>  // b.none
   11de4:	ldr	x4, [sp, #104]
   11de8:	add	x1, x1, #0x2
   11dec:	mov	x5, x26
   11df0:	mov	x3, x28
   11df4:	mov	x2, x23
   11df8:	str	x1, [sp, #296]
   11dfc:	add	x1, sp, #0x128
   11e00:	bl	e0c8 <gcc_cp_fe_context@@Base+0x43a8>
   11e04:	mov	w20, w0
   11e08:	cbnz	w0, 12be4 <gcc_cp_fe_context@@Base+0x8ec4>
   11e0c:	mov	w19, #0xffffffff            	// #-1
   11e10:	ldr	x1, [sp, #296]
   11e14:	b	11d28 <gcc_cp_fe_context@@Base+0x8008>
   11e18:	cmp	x4, x23
   11e1c:	b.eq	11884 <gcc_cp_fe_context@@Base+0x7b64>  // b.none
   11e20:	add	x0, x1, #0x2
   11e24:	str	x0, [sp, #296]
   11e28:	ldrb	w19, [x1, #1]
   11e2c:	cbz	x28, 11e38 <gcc_cp_fe_context@@Base+0x8118>
   11e30:	and	x19, x19, #0xff
   11e34:	ldrb	w19, [x28, x19]
   11e38:	ubfx	x1, x19, #3, #5
   11e3c:	and	w4, w19, #0x7
   11e40:	mov	w0, #0x1                   	// #1
   11e44:	lsl	w0, w0, w4
   11e48:	ldrb	w4, [x26, x1]
   11e4c:	orr	w0, w0, w4
   11e50:	strb	w0, [x26, x1]
   11e54:	ldr	x1, [sp, #296]
   11e58:	b	11d28 <gcc_cp_fe_context@@Base+0x8008>
   11e5c:	add	x22, x20, #0x3
   11e60:	mov	x24, x20
   11e64:	mov	x19, x22
   11e68:	mov	x26, #0x0                   	// #0
   11e6c:	mov	x27, #0x0                   	// #0
   11e70:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   11e74:	mov	w21, w23
   11e78:	ldr	x2, [sp, #104]
   11e7c:	and	x0, x2, #0x1000
   11e80:	tbnz	w2, #12, 11eb8 <gcc_cp_fe_context@@Base+0x8198>
   11e84:	cmp	w5, #0x5c
   11e88:	b.ne	1240c <gcc_cp_fe_context@@Base+0x86ec>  // b.any
   11e8c:	ldr	x3, [sp, #112]
   11e90:	ldr	x2, [sp, #296]
   11e94:	cmp	x2, x3
   11e98:	b.eq	1240c <gcc_cp_fe_context@@Base+0x86ec>  // b.none
   11e9c:	add	x3, x2, #0x1
   11ea0:	str	x3, [sp, #296]
   11ea4:	ldr	x3, [sp, #120]
   11ea8:	ldrb	w5, [x2]
   11eac:	cbz	x3, 11eb8 <gcc_cp_fe_context@@Base+0x8198>
   11eb0:	and	x2, x5, #0xff
   11eb4:	ldrb	w5, [x3, x2]
   11eb8:	cmp	w5, #0x7d
   11ebc:	b.ne	10ef0 <gcc_cp_fe_context@@Base+0x71d0>  // b.any
   11ec0:	cbz	x26, 12a50 <gcc_cp_fe_context@@Base+0x8d30>
   11ec4:	mov	w0, #0x7fff                	// #32767
   11ec8:	cmp	w23, w0
   11ecc:	b.gt	12f9c <gcc_cp_fe_context@@Base+0x927c>
   11ed0:	ldp	x27, x2, [x28]
   11ed4:	sub	x0, x22, x27
   11ed8:	cbnz	w23, 1255c <gcc_cp_fe_context@@Base+0x883c>
   11edc:	add	x0, x0, #0x3
   11ee0:	cmp	x2, x0
   11ee4:	b.cc	11f40 <gcc_cp_fe_context@@Base+0x8220>  // b.lo, b.ul, b.last
   11ee8:	b	12ba0 <gcc_cp_fe_context@@Base+0x8e80>
   11eec:	str	x1, [x28, #8]
   11ef0:	mov	x0, x27
   11ef4:	bl	5470 <realloc@plt>
   11ef8:	str	x0, [x28]
   11efc:	subs	x1, x0, x27
   11f00:	add	x3, x24, x1
   11f04:	add	x2, x26, x1
   11f08:	mov	x27, x0
   11f0c:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   11f10:	b.eq	11f2c <gcc_cp_fe_context@@Base+0x820c>  // b.none
   11f14:	cmp	x24, #0x0
   11f18:	add	x22, x22, x1
   11f1c:	csel	x24, x3, x24, ne  // ne = any
   11f20:	cmp	x26, #0x0
   11f24:	csel	x26, x2, x26, ne  // ne = any
   11f28:	add	x19, x19, x1
   11f2c:	ldr	x2, [x28, #8]
   11f30:	sub	x0, x22, x0
   11f34:	add	x0, x0, #0x3
   11f38:	cmp	x0, x2
   11f3c:	b.ls	12ba0 <gcc_cp_fe_context@@Base+0x8e80>  // b.plast
   11f40:	lsl	x1, x2, #1
   11f44:	cmp	x2, #0x10, lsl #12
   11f48:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   11f4c:	cmp	x1, #0x10, lsl #12
   11f50:	b.ls	11eec <gcc_cp_fe_context@@Base+0x81cc>  // b.plast
   11f54:	mov	x1, #0x10000               	// #65536
   11f58:	str	x25, [x28, #8]
   11f5c:	b	11ef0 <gcc_cp_fe_context@@Base+0x81d0>
   11f60:	cmp	w6, #0x3d
   11f64:	b.eq	12480 <gcc_cp_fe_context@@Base+0x8760>  // b.none
   11f68:	cmp	w6, #0x2e
   11f6c:	b.ne	11d98 <gcc_cp_fe_context@@Base+0x8078>  // b.any
   11f70:	cmp	x4, x23
   11f74:	b.eq	12da0 <gcc_cp_fe_context@@Base+0x9080>  // b.none
   11f78:	add	x1, x1, #0x2
   11f7c:	str	x1, [sp, #296]
   11f80:	cmp	x1, x23
   11f84:	b.eq	1235c <gcc_cp_fe_context@@Base+0x863c>  // b.none
   11f88:	mov	w0, #0x0                   	// #0
   11f8c:	add	x4, x1, #0x1
   11f90:	str	x4, [sp, #296]
   11f94:	add	w3, w0, #0x1
   11f98:	mov	w2, w0
   11f9c:	ldurb	w6, [x4, #-1]
   11fa0:	cbz	x28, 11fac <gcc_cp_fe_context@@Base+0x828c>
   11fa4:	and	x6, x6, #0xff
   11fa8:	ldrb	w6, [x28, x6]
   11fac:	cmp	w6, #0x2e
   11fb0:	b.eq	11fdc <gcc_cp_fe_context@@Base+0x82bc>  // b.none
   11fb4:	cmp	x4, x23
   11fb8:	b.eq	12dfc <gcc_cp_fe_context@@Base+0x90dc>  // b.none
   11fbc:	tbnz	w0, #7, 11fd0 <gcc_cp_fe_context@@Base+0x82b0>
   11fc0:	and	w0, w3, #0xff
   11fc4:	mov	x1, x4
   11fc8:	strb	w6, [x21, w2, sxtw]
   11fcc:	b	11f8c <gcc_cp_fe_context@@Base+0x826c>
   11fd0:	mov	x1, x4
   11fd4:	strb	wzr, [sp, #304]
   11fd8:	b	11f8c <gcc_cp_fe_context@@Base+0x826c>
   11fdc:	ldrb	w5, [x4]
   11fe0:	cmp	w5, #0x5d
   11fe4:	b.ne	11fb4 <gcc_cp_fe_context@@Base+0x8294>  // b.any
   11fe8:	strb	wzr, [x21, w0, sxtw]
   11fec:	ldrb	w19, [sp, #304]
   11ff0:	cbz	w19, 12e08 <gcc_cp_fe_context@@Base+0x90e8>
   11ff4:	cmp	w0, #0x1
   11ff8:	b.ne	12ffc <gcc_cp_fe_context@@Base+0x92dc>  // b.any
   11ffc:	cmp	x23, x4
   12000:	b.eq	12da0 <gcc_cp_fe_context@@Base+0x9080>  // b.none
   12004:	ubfx	x4, x19, #3, #5
   12008:	add	x1, x1, #0x2
   1200c:	str	x1, [sp, #296]
   12010:	and	w6, w19, #0x7
   12014:	mov	w10, #0x0                   	// #0
   12018:	ldrb	w1, [x26, x4]
   1201c:	lsl	w0, w0, w6
   12020:	orr	w0, w0, w1
   12024:	strb	w0, [x26, x4]
   12028:	ldr	x1, [sp, #296]
   1202c:	b	11d28 <gcc_cp_fe_context@@Base+0x8008>
   12030:	mov	w0, #0x6                   	// #6
   12034:	strb	w0, [x22]
   12038:	ldrb	w0, [sp, #152]
   1203c:	add	x22, x22, #0x3
   12040:	sturb	w0, [x22, #-2]
   12044:	sturb	wzr, [x22, #-1]
   12048:	b	10c88 <gcc_cp_fe_context@@Base+0x6f68>
   1204c:	ldp	x21, x2, [x28]
   12050:	ldr	x0, [sp, #104]
   12054:	sub	x1, x22, x21
   12058:	tbnz	w0, #19, 106a4 <gcc_cp_fe_context@@Base+0x6984>
   1205c:	add	x1, x1, #0x1
   12060:	cmp	x2, x1
   12064:	b.cc	120cc <gcc_cp_fe_context@@Base+0x83ac>  // b.lo, b.ul, b.last
   12068:	b	12a9c <gcc_cp_fe_context@@Base+0x8d7c>
   1206c:	str	x1, [x28, #8]
   12070:	mov	x0, x21
   12074:	bl	5470 <realloc@plt>
   12078:	str	x0, [x28]
   1207c:	subs	x1, x0, x21
   12080:	add	x4, x24, x1
   12084:	add	x3, x26, x1
   12088:	add	x2, x27, x1
   1208c:	mov	x21, x0
   12090:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   12094:	b.eq	120b8 <gcc_cp_fe_context@@Base+0x8398>  // b.none
   12098:	cmp	x24, #0x0
   1209c:	add	x22, x22, x1
   120a0:	csel	x24, x4, x24, ne  // ne = any
   120a4:	cmp	x26, #0x0
   120a8:	csel	x26, x3, x26, ne  // ne = any
   120ac:	cmp	x27, #0x0
   120b0:	csel	x27, x2, x27, ne  // ne = any
   120b4:	add	x19, x19, x1
   120b8:	ldr	x2, [x28, #8]
   120bc:	sub	x0, x22, x0
   120c0:	add	x0, x0, #0x1
   120c4:	cmp	x0, x2
   120c8:	b.ls	12a9c <gcc_cp_fe_context@@Base+0x8d7c>  // b.plast
   120cc:	lsl	x1, x2, #1
   120d0:	cmp	x2, #0x10, lsl #12
   120d4:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   120d8:	cmp	x1, #0x10, lsl #12
   120dc:	b.ls	1206c <gcc_cp_fe_context@@Base+0x834c>  // b.plast
   120e0:	mov	x1, #0x10000               	// #65536
   120e4:	str	x25, [x28, #8]
   120e8:	b	12070 <gcc_cp_fe_context@@Base+0x8350>
   120ec:	ldr	x0, [sp, #104]
   120f0:	tbz	w0, #13, 10c1c <gcc_cp_fe_context@@Base+0x6efc>
   120f4:	b	10fe8 <gcc_cp_fe_context@@Base+0x72c8>
   120f8:	ldr	x2, [sp, #104]
   120fc:	mov	x0, #0x1200                	// #4608
   12100:	and	x0, x2, x0
   12104:	cmp	x0, #0x200
   12108:	b.eq	10e68 <gcc_cp_fe_context@@Base+0x7148>  // b.none
   1210c:	b	10fe8 <gcc_cp_fe_context@@Base+0x72c8>
   12110:	ldr	x0, [sp, #104]
   12114:	tbnz	w0, #1, 10688 <gcc_cp_fe_context@@Base+0x6968>
   12118:	b	10fe8 <gcc_cp_fe_context@@Base+0x72c8>
   1211c:	ldp	x20, x2, [x28]
   12120:	sub	x0, x23, x20
   12124:	add	x0, x0, #0x3
   12128:	cmp	x0, x2
   1212c:	b.hi	12180 <gcc_cp_fe_context@@Base+0x8460>  // b.pmore
   12130:	b	12428 <gcc_cp_fe_context@@Base+0x8708>
   12134:	str	x1, [x28, #8]
   12138:	mov	x0, x20
   1213c:	bl	5470 <realloc@plt>
   12140:	str	x0, [x28]
   12144:	subs	x1, x0, x20
   12148:	add	x2, x24, x1
   1214c:	mov	x20, x0
   12150:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   12154:	b.eq	1216c <gcc_cp_fe_context@@Base+0x844c>  // b.none
   12158:	cmp	x24, #0x0
   1215c:	add	x23, x23, x1
   12160:	csel	x24, x2, x24, ne  // ne = any
   12164:	add	x19, x19, x1
   12168:	add	x26, x26, x1
   1216c:	ldr	x2, [x28, #8]
   12170:	sub	x0, x23, x0
   12174:	add	x0, x0, #0x3
   12178:	cmp	x0, x2
   1217c:	b.ls	12428 <gcc_cp_fe_context@@Base+0x8708>  // b.plast
   12180:	lsl	x1, x2, #1
   12184:	cmp	x2, #0x10, lsl #12
   12188:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   1218c:	cmp	x1, #0x10, lsl #12
   12190:	b.ls	12134 <gcc_cp_fe_context@@Base+0x8414>  // b.plast
   12194:	mov	x1, #0x10000               	// #65536
   12198:	str	x25, [x28, #8]
   1219c:	b	12138 <gcc_cp_fe_context@@Base+0x8418>
   121a0:	ldp	x21, x2, [x28]
   121a4:	ldr	x0, [sp, #104]
   121a8:	sub	x1, x22, x21
   121ac:	tbnz	w0, #19, 106a4 <gcc_cp_fe_context@@Base+0x6984>
   121b0:	add	x1, x1, #0x1
   121b4:	mov	x26, x22
   121b8:	cmp	x2, x1
   121bc:	b.cc	12224 <gcc_cp_fe_context@@Base+0x8504>  // b.lo, b.ul, b.last
   121c0:	b	12a10 <gcc_cp_fe_context@@Base+0x8cf0>
   121c4:	str	x1, [x28, #8]
   121c8:	mov	x0, x21
   121cc:	bl	5470 <realloc@plt>
   121d0:	str	x0, [x28]
   121d4:	subs	x1, x0, x21
   121d8:	add	x4, x24, x1
   121dc:	add	x3, x26, x1
   121e0:	add	x2, x27, x1
   121e4:	mov	x21, x0
   121e8:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   121ec:	b.eq	12210 <gcc_cp_fe_context@@Base+0x84f0>  // b.none
   121f0:	cmp	x24, #0x0
   121f4:	add	x22, x22, x1
   121f8:	csel	x24, x4, x24, ne  // ne = any
   121fc:	cmp	x26, #0x0
   12200:	csel	x26, x3, x26, ne  // ne = any
   12204:	cmp	x27, #0x0
   12208:	csel	x27, x2, x27, ne  // ne = any
   1220c:	add	x19, x19, x1
   12210:	ldr	x2, [x28, #8]
   12214:	sub	x0, x22, x0
   12218:	add	x0, x0, #0x1
   1221c:	cmp	x0, x2
   12220:	b.ls	12a10 <gcc_cp_fe_context@@Base+0x8cf0>  // b.plast
   12224:	lsl	x1, x2, #1
   12228:	cmp	x2, #0x10, lsl #12
   1222c:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   12230:	cmp	x1, #0x10, lsl #12
   12234:	b.ls	121c4 <gcc_cp_fe_context@@Base+0x84a4>  // b.plast
   12238:	mov	x1, #0x10000               	// #65536
   1223c:	str	x25, [x28, #8]
   12240:	b	121c8 <gcc_cp_fe_context@@Base+0x84a8>
   12244:	ldp	x21, x2, [x28]
   12248:	ldr	x0, [sp, #104]
   1224c:	sub	x1, x22, x21
   12250:	tbnz	w0, #19, 106a4 <gcc_cp_fe_context@@Base+0x6984>
   12254:	add	x1, x1, #0x1
   12258:	cmp	x2, x1
   1225c:	b.cc	122c4 <gcc_cp_fe_context@@Base+0x85a4>  // b.lo, b.ul, b.last
   12260:	b	12a04 <gcc_cp_fe_context@@Base+0x8ce4>
   12264:	str	x1, [x28, #8]
   12268:	mov	x0, x21
   1226c:	bl	5470 <realloc@plt>
   12270:	str	x0, [x28]
   12274:	subs	x1, x0, x21
   12278:	add	x4, x24, x1
   1227c:	add	x3, x26, x1
   12280:	add	x2, x27, x1
   12284:	mov	x21, x0
   12288:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   1228c:	b.eq	122b0 <gcc_cp_fe_context@@Base+0x8590>  // b.none
   12290:	cmp	x24, #0x0
   12294:	add	x22, x22, x1
   12298:	csel	x24, x4, x24, ne  // ne = any
   1229c:	cmp	x26, #0x0
   122a0:	csel	x26, x3, x26, ne  // ne = any
   122a4:	cmp	x27, #0x0
   122a8:	csel	x27, x2, x27, ne  // ne = any
   122ac:	add	x19, x19, x1
   122b0:	ldr	x2, [x28, #8]
   122b4:	sub	x0, x22, x0
   122b8:	add	x0, x0, #0x1
   122bc:	cmp	x0, x2
   122c0:	b.ls	12a04 <gcc_cp_fe_context@@Base+0x8ce4>  // b.plast
   122c4:	lsl	x1, x2, #1
   122c8:	cmp	x2, #0x10, lsl #12
   122cc:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   122d0:	cmp	x1, #0x10, lsl #12
   122d4:	b.ls	12264 <gcc_cp_fe_context@@Base+0x8544>  // b.plast
   122d8:	mov	x1, #0x10000               	// #65536
   122dc:	str	x25, [x28, #8]
   122e0:	b	12268 <gcc_cp_fe_context@@Base+0x8548>
   122e4:	ldr	x0, [sp, #112]
   122e8:	cmp	x0, x1
   122ec:	cset	w0, hi  // hi = pmore
   122f0:	tst	w21, w0
   122f4:	b.eq	1145c <gcc_cp_fe_context@@Base+0x773c>  // b.none
   122f8:	ldr	x2, [sp, #120]
   122fc:	ldrb	w0, [x1]
   12300:	cbz	x2, 12db4 <gcc_cp_fe_context@@Base+0x9094>
   12304:	and	x0, x0, #0xff
   12308:	ldrb	w1, [x2, #10]
   1230c:	ldrb	w0, [x2, x0]
   12310:	cmp	w1, w0
   12314:	b.ne	1145c <gcc_cp_fe_context@@Base+0x773c>  // b.any
   12318:	ldr	x0, [sp, #104]
   1231c:	tbnz	w0, #6, 1145c <gcc_cp_fe_context@@Base+0x773c>
   12320:	sub	x0, x26, x22
   12324:	mov	w1, #0xd                   	// #13
   12328:	sub	w0, w0, #0x3
   1232c:	strb	w1, [x22]
   12330:	sturh	w0, [x22, #1]
   12334:	b	11474 <gcc_cp_fe_context@@Base+0x7754>
   12338:	ldurb	w7, [x1, #-1]
   1233c:	cmp	w7, #0x5e
   12340:	b.ne	11cf0 <gcc_cp_fe_context@@Base+0x7fd0>  // b.any
   12344:	b	11d70 <gcc_cp_fe_context@@Base+0x8050>
   12348:	mov	w2, #0x2e                  	// #46
   1234c:	b	11454 <gcc_cp_fe_context@@Base+0x7734>
   12350:	mov	w21, w23
   12354:	mov	w23, w3
   12358:	b	11e78 <gcc_cp_fe_context@@Base+0x8158>
   1235c:	ldr	x0, [sp, #136]
   12360:	mov	w20, #0x7                   	// #7
   12364:	bl	5440 <free@plt>
   12368:	ldp	x21, x22, [sp, #32]
   1236c:	ldp	x23, x24, [sp, #48]
   12370:	ldp	x27, x28, [sp, #80]
   12374:	b	10a68 <gcc_cp_fe_context@@Base+0x6d48>
   12378:	ldr	x0, [sp, #104]
   1237c:	tbz	w0, #8, 11c44 <gcc_cp_fe_context@@Base+0x7f24>
   12380:	mov	w0, #0x4                   	// #4
   12384:	strb	w0, [x22, #2]
   12388:	b	11c44 <gcc_cp_fe_context@@Base+0x7f24>
   1238c:	ldr	x2, [sp, #112]
   12390:	mov	w3, #0xffffffff            	// #-1
   12394:	mov	w9, #0x7fff                	// #32767
   12398:	cmp	x0, x2
   1239c:	b.eq	123fc <gcc_cp_fe_context@@Base+0x86dc>  // b.none
   123a0:	ldp	x6, x4, [sp, #112]
   123a4:	b	123cc <gcc_cp_fe_context@@Base+0x86ac>
   123a8:	cmp	w3, w9
   123ac:	b.gt	123c4 <gcc_cp_fe_context@@Base+0x86a4>
   123b0:	cmp	w3, #0x0
   123b4:	csel	w3, w3, wzr, ge  // ge = tcont
   123b8:	add	w3, w3, w3, lsl #2
   123bc:	add	w3, w5, w3, lsl #1
   123c0:	sub	w3, w3, #0x30
   123c4:	cmp	x0, x6
   123c8:	b.eq	125ec <gcc_cp_fe_context@@Base+0x88cc>  // b.none
   123cc:	add	x0, x0, #0x1
   123d0:	str	x0, [sp, #296]
   123d4:	ldurb	w5, [x0, #-1]
   123d8:	cbz	x4, 123e4 <gcc_cp_fe_context@@Base+0x86c4>
   123dc:	and	x5, x5, #0xff
   123e0:	ldrb	w5, [x4, x5]
   123e4:	sub	w2, w5, #0x30
   123e8:	and	w2, w2, #0xff
   123ec:	cmp	w2, #0x9
   123f0:	b.ls	123a8 <gcc_cp_fe_context@@Base+0x8688>  // b.plast
   123f4:	cmn	w3, #0x1
   123f8:	b.ne	125ec <gcc_cp_fe_context@@Base+0x88cc>  // b.any
   123fc:	mov	w3, #0x7fff                	// #32767
   12400:	cmp	w23, w3
   12404:	cset	w2, gt
   12408:	b	10ee4 <gcc_cp_fe_context@@Base+0x71c4>
   1240c:	ldr	x0, [sp, #104]
   12410:	tbz	w0, #21, 12b74 <gcc_cp_fe_context@@Base+0x8e54>
   12414:	ldp	x21, x2, [x28]
   12418:	mov	w20, #0x7b                  	// #123
   1241c:	str	x1, [sp, #296]
   12420:	sub	x1, x22, x21
   12424:	b	10f10 <gcc_cp_fe_context@@Base+0x71f0>
   12428:	add	x22, x23, #0x3
   1242c:	cmp	x26, x23
   12430:	mov	x0, x22
   12434:	add	x2, x26, #0x3
   12438:	b.eq	12450 <gcc_cp_fe_context@@Base+0x8730>  // b.none
   1243c:	ldurb	w1, [x0, #-4]
   12440:	sub	x0, x0, #0x1
   12444:	strb	w1, [x0]
   12448:	cmp	x0, x2
   1244c:	b.ne	1243c <gcc_cp_fe_context@@Base+0x871c>  // b.any
   12450:	mov	w0, #0x313                 	// #787
   12454:	mov	x27, #0x0                   	// #0
   12458:	strh	w0, [x26]
   1245c:	strb	wzr, [x26, #2]
   12460:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   12464:	ldr	x0, [sp, #136]
   12468:	mov	w20, #0x8                   	// #8
   1246c:	bl	5440 <free@plt>
   12470:	ldp	x21, x22, [sp, #32]
   12474:	ldp	x23, x24, [sp, #48]
   12478:	ldp	x27, x28, [sp, #80]
   1247c:	b	10a68 <gcc_cp_fe_context@@Base+0x6d48>
   12480:	cmp	x4, x23
   12484:	b.eq	12da0 <gcc_cp_fe_context@@Base+0x9080>  // b.none
   12488:	add	x4, x1, #0x2
   1248c:	str	x4, [sp, #296]
   12490:	cmp	x4, x23
   12494:	b.eq	1235c <gcc_cp_fe_context@@Base+0x863c>  // b.none
   12498:	mov	w10, #0x0                   	// #0
   1249c:	add	x1, x4, #0x1
   124a0:	str	x1, [sp, #296]
   124a4:	add	w3, w10, #0x1
   124a8:	mov	w2, w10
   124ac:	ldurb	w0, [x1, #-1]
   124b0:	cbz	x28, 124bc <gcc_cp_fe_context@@Base+0x879c>
   124b4:	and	x0, x0, #0xff
   124b8:	ldrb	w0, [x28, x0]
   124bc:	cmp	w0, #0x3d
   124c0:	b.eq	124f0 <gcc_cp_fe_context@@Base+0x87d0>  // b.none
   124c4:	cmp	x1, x23
   124c8:	b.eq	12dbc <gcc_cp_fe_context@@Base+0x909c>  // b.none
   124cc:	cmp	w10, #0xf
   124d0:	b.hi	124e4 <gcc_cp_fe_context@@Base+0x87c4>  // b.pmore
   124d4:	and	w10, w3, #0xff
   124d8:	mov	x4, x1
   124dc:	strb	w0, [x21, w2, sxtw]
   124e0:	b	1249c <gcc_cp_fe_context@@Base+0x877c>
   124e4:	mov	x4, x1
   124e8:	strb	wzr, [sp, #304]
   124ec:	b	1249c <gcc_cp_fe_context@@Base+0x877c>
   124f0:	ldrb	w5, [x1]
   124f4:	cmp	w5, #0x5d
   124f8:	b.ne	124c4 <gcc_cp_fe_context@@Base+0x87a4>  // b.any
   124fc:	strb	wzr, [x21, w10, sxtw]
   12500:	ldrb	w0, [sp, #304]
   12504:	cbz	w0, 12dc8 <gcc_cp_fe_context@@Base+0x90a8>
   12508:	cmp	w10, #0x1
   1250c:	b.ne	12ffc <gcc_cp_fe_context@@Base+0x92dc>  // b.any
   12510:	cmp	x23, x1
   12514:	b.eq	12da0 <gcc_cp_fe_context@@Base+0x9080>  // b.none
   12518:	ubfx	x6, x0, #3, #5
   1251c:	add	x1, x4, #0x2
   12520:	str	x1, [sp, #296]
   12524:	and	w0, w0, #0x7
   12528:	ldrb	w1, [x26, x6]
   1252c:	lsl	w0, w10, w0
   12530:	orr	w0, w0, w1
   12534:	strb	w0, [x26, x6]
   12538:	ldr	x1, [sp, #296]
   1253c:	b	11d28 <gcc_cp_fe_context@@Base+0x8008>
   12540:	mov	w0, #0x7                   	// #7
   12544:	add	x22, x22, #0x3
   12548:	mov	x27, #0x0                   	// #0
   1254c:	sturb	w0, [x22, #-3]
   12550:	sturb	w20, [x22, #-2]
   12554:	sturb	w21, [x22, #-1]
   12558:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   1255c:	cmp	w23, #0x1
   12560:	b.le	12f2c <gcc_cp_fe_context@@Base+0x920c>
   12564:	add	x0, x0, #0x14
   12568:	mov	x20, #0x14                  	// #20
   1256c:	cmp	x2, x0
   12570:	b.cc	125cc <gcc_cp_fe_context@@Base+0x88ac>  // b.lo, b.ul, b.last
   12574:	b	12fe4 <gcc_cp_fe_context@@Base+0x92c4>
   12578:	str	x1, [x28, #8]
   1257c:	mov	x0, x27
   12580:	bl	5470 <realloc@plt>
   12584:	str	x0, [x28]
   12588:	subs	x1, x0, x27
   1258c:	add	x3, x24, x1
   12590:	add	x2, x26, x1
   12594:	mov	x27, x0
   12598:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   1259c:	b.eq	125b8 <gcc_cp_fe_context@@Base+0x8898>  // b.none
   125a0:	cmp	x24, #0x0
   125a4:	add	x22, x22, x1
   125a8:	csel	x24, x3, x24, ne  // ne = any
   125ac:	cmp	x26, #0x0
   125b0:	csel	x26, x2, x26, ne  // ne = any
   125b4:	add	x19, x19, x1
   125b8:	ldr	x2, [x28, #8]
   125bc:	sub	x0, x22, x0
   125c0:	add	x0, x0, x20
   125c4:	cmp	x0, x2
   125c8:	b.ls	12e98 <gcc_cp_fe_context@@Base+0x9178>  // b.plast
   125cc:	lsl	x1, x2, #1
   125d0:	cmp	x2, #0x10, lsl #12
   125d4:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   125d8:	cmp	x1, #0x10, lsl #12
   125dc:	b.ls	12578 <gcc_cp_fe_context@@Base+0x8858>  // b.plast
   125e0:	mov	x1, #0x10000               	// #65536
   125e4:	str	x25, [x28, #8]
   125e8:	b	1257c <gcc_cp_fe_context@@Base+0x885c>
   125ec:	cmp	w23, w3
   125f0:	cset	w2, gt
   125f4:	b	10ee4 <gcc_cp_fe_context@@Base+0x71c4>
   125f8:	cmp	x4, x23
   125fc:	b.eq	12da0 <gcc_cp_fe_context@@Base+0x9080>  // b.none
   12600:	add	x27, x1, #0x2
   12604:	str	x27, [sp, #296]
   12608:	cmp	x27, x23
   1260c:	b.eq	1235c <gcc_cp_fe_context@@Base+0x863c>  // b.none
   12610:	mov	w4, #0x0                   	// #0
   12614:	add	x20, x27, #0x1
   12618:	str	x20, [sp, #296]
   1261c:	add	w2, w4, #0x1
   12620:	mov	w1, w4
   12624:	ldurb	w0, [x20, #-1]
   12628:	cbz	x28, 12634 <gcc_cp_fe_context@@Base+0x8914>
   1262c:	and	x0, x0, #0xff
   12630:	ldrb	w0, [x28, x0]
   12634:	cmp	w0, #0x3a
   12638:	b.eq	12668 <gcc_cp_fe_context@@Base+0x8948>  // b.none
   1263c:	cmp	x20, x23
   12640:	b.eq	12e3c <gcc_cp_fe_context@@Base+0x911c>  // b.none
   12644:	cmp	w4, #0x5
   12648:	b.hi	1265c <gcc_cp_fe_context@@Base+0x893c>  // b.pmore
   1264c:	and	w4, w2, #0xff
   12650:	mov	x27, x20
   12654:	strb	w0, [x21, w1, sxtw]
   12658:	b	12614 <gcc_cp_fe_context@@Base+0x88f4>
   1265c:	mov	x27, x20
   12660:	strb	wzr, [sp, #304]
   12664:	b	12614 <gcc_cp_fe_context@@Base+0x88f4>
   12668:	ldrb	w3, [x20]
   1266c:	cmp	w3, #0x5d
   12670:	b.ne	1263c <gcc_cp_fe_context@@Base+0x891c>  // b.any
   12674:	ldr	x1, [sp, #232]
   12678:	mov	x0, x21
   1267c:	strb	wzr, [x21, w4, sxtw]
   12680:	bl	56c0 <strcmp@plt>
   12684:	str	w0, [sp, #176]
   12688:	ldr	x1, [sp, #240]
   1268c:	mov	x0, x21
   12690:	bl	56c0 <strcmp@plt>
   12694:	str	w0, [sp, #188]
   12698:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   1269c:	mov	x0, x21
   126a0:	add	x1, x1, #0xdb0
   126a4:	bl	56c0 <strcmp@plt>
   126a8:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   126ac:	add	x1, x1, #0xdb8
   126b0:	str	w0, [sp, #200]
   126b4:	mov	x0, x21
   126b8:	bl	56c0 <strcmp@plt>
   126bc:	str	w0, [sp, #204]
   126c0:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   126c4:	mov	x0, x21
   126c8:	add	x1, x1, #0xdc0
   126cc:	bl	56c0 <strcmp@plt>
   126d0:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   126d4:	add	x1, x1, #0xdc8
   126d8:	str	w0, [sp, #180]
   126dc:	mov	x0, x21
   126e0:	bl	56c0 <strcmp@plt>
   126e4:	str	w0, [sp, #192]
   126e8:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   126ec:	mov	x0, x21
   126f0:	add	x1, x1, #0xdd0
   126f4:	bl	56c0 <strcmp@plt>
   126f8:	cmp	w0, #0x0
   126fc:	mov	w2, w0
   12700:	cset	w3, eq  // eq = none
   12704:	mov	x0, x21
   12708:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   1270c:	add	x1, x1, #0xdd8
   12710:	stp	w2, w3, [sp, #208]
   12714:	bl	56c0 <strcmp@plt>
   12718:	str	w0, [sp, #216]
   1271c:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   12720:	mov	x0, x21
   12724:	add	x1, x1, #0xde0
   12728:	bl	56c0 <strcmp@plt>
   1272c:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   12730:	add	x1, x1, #0xde8
   12734:	str	w0, [sp, #184]
   12738:	mov	x0, x21
   1273c:	bl	56c0 <strcmp@plt>
   12740:	str	w0, [sp, #196]
   12744:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   12748:	mov	x0, x21
   1274c:	add	x1, x1, #0xdf0
   12750:	bl	56c0 <strcmp@plt>
   12754:	cmp	w0, #0x0
   12758:	mov	w3, w0
   1275c:	cset	w4, eq  // eq = none
   12760:	mov	x0, x21
   12764:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   12768:	add	x1, x1, #0xdf8
   1276c:	stp	w3, w4, [sp, #220]
   12770:	bl	56c0 <strcmp@plt>
   12774:	mov	w4, w0
   12778:	ldr	w1, [sp, #188]
   1277c:	ldr	w3, [sp, #220]
   12780:	cmp	w1, #0x0
   12784:	ldr	w2, [sp, #208]
   12788:	ldr	w1, [sp, #180]
   1278c:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   12790:	cset	w0, ne  // ne = any
   12794:	cmp	w2, #0x0
   12798:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   1279c:	ldr	w1, [sp, #176]
   127a0:	csel	w0, w0, wzr, ne  // ne = any
   127a4:	str	w4, [sp, #228]
   127a8:	cmp	w1, #0x0
   127ac:	ldr	w1, [sp, #196]
   127b0:	ccmp	w4, #0x0, #0x4, ne  // ne = any
   127b4:	csel	w0, w0, wzr, ne  // ne = any
   127b8:	cmp	w1, #0x0
   127bc:	ldr	w1, [sp, #216]
   127c0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   127c4:	ldr	w1, [sp, #192]
   127c8:	csel	w0, w0, wzr, ne  // ne = any
   127cc:	cmp	w1, #0x0
   127d0:	ldr	w1, [sp, #184]
   127d4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   127d8:	ldr	w1, [sp, #200]
   127dc:	csel	w0, w0, wzr, ne  // ne = any
   127e0:	cmp	w1, #0x0
   127e4:	ldr	w1, [sp, #204]
   127e8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   127ec:	csel	w0, w0, wzr, ne  // ne = any
   127f0:	cbnz	w0, 12fc8 <gcc_cp_fe_context@@Base+0x92a8>
   127f4:	cmp	x20, x23
   127f8:	b.eq	12da0 <gcc_cp_fe_context@@Base+0x9080>  // b.none
   127fc:	add	x1, x27, #0x2
   12800:	str	x1, [sp, #296]
   12804:	cmp	x1, x23
   12808:	b.eq	1235c <gcc_cp_fe_context@@Base+0x863c>  // b.none
   1280c:	mov	x0, x21
   12810:	mov	x27, #0x0                   	// #0
   12814:	mov	w21, w19
   12818:	mov	x19, x27
   1281c:	mov	x27, x0
   12820:	ldr	w0, [sp, #176]
   12824:	mov	w20, w19
   12828:	cbnz	w0, 1283c <gcc_cp_fe_context@@Base+0x8b1c>
   1282c:	bl	5590 <__ctype_b_loc@plt>
   12830:	ldr	x0, [x0]
   12834:	ldrh	w0, [x0, x19, lsl #1]
   12838:	tbnz	w0, #3, 12884 <gcc_cp_fe_context@@Base+0x8b64>
   1283c:	ldr	w0, [sp, #188]
   12840:	cbnz	w0, 12854 <gcc_cp_fe_context@@Base+0x8b34>
   12844:	bl	5590 <__ctype_b_loc@plt>
   12848:	ldr	x0, [x0]
   1284c:	ldrh	w0, [x0, x19, lsl #1]
   12850:	tbnz	w0, #10, 12884 <gcc_cp_fe_context@@Base+0x8b64>
   12854:	ldr	w0, [sp, #200]
   12858:	cbnz	w0, 1286c <gcc_cp_fe_context@@Base+0x8b4c>
   1285c:	bl	5590 <__ctype_b_loc@plt>
   12860:	ldr	x0, [x0]
   12864:	ldrh	w0, [x0, x19, lsl #1]
   12868:	tbnz	w0, #0, 12884 <gcc_cp_fe_context@@Base+0x8b64>
   1286c:	ldr	w0, [sp, #204]
   12870:	cbnz	w0, 128a0 <gcc_cp_fe_context@@Base+0x8b80>
   12874:	bl	5590 <__ctype_b_loc@plt>
   12878:	ldr	x0, [x0]
   1287c:	ldrh	w0, [x0, x19, lsl #1]
   12880:	tbz	w0, #1, 128a0 <gcc_cp_fe_context@@Base+0x8b80>
   12884:	ubfx	x2, x19, #3, #5
   12888:	and	w0, w20, #0x7
   1288c:	mov	w1, #0x1                   	// #1
   12890:	lsl	w0, w1, w0
   12894:	ldrb	w3, [x26, x2]
   12898:	orr	w0, w0, w3
   1289c:	strb	w0, [x26, x2]
   128a0:	ldr	w0, [sp, #180]
   128a4:	cbnz	w0, 129b8 <gcc_cp_fe_context@@Base+0x8c98>
   128a8:	bl	5590 <__ctype_b_loc@plt>
   128ac:	ldr	x0, [x0]
   128b0:	ldrh	w0, [x0, x19, lsl #1]
   128b4:	tbz	w0, #11, 129b8 <gcc_cp_fe_context@@Base+0x8c98>
   128b8:	ubfx	x2, x19, #3, #5
   128bc:	and	w0, w20, #0x7
   128c0:	mov	w1, #0x1                   	// #1
   128c4:	lsl	w0, w1, w0
   128c8:	ldrb	w3, [x26, x2]
   128cc:	orr	w0, w0, w3
   128d0:	strb	w0, [x26, x2]
   128d4:	ldr	w0, [sp, #184]
   128d8:	cbnz	w0, 128ec <gcc_cp_fe_context@@Base+0x8bcc>
   128dc:	bl	5590 <__ctype_b_loc@plt>
   128e0:	ldr	x0, [x0]
   128e4:	ldrh	w0, [x0, x19, lsl #1]
   128e8:	tbnz	w0, #2, 12934 <gcc_cp_fe_context@@Base+0x8c14>
   128ec:	ldr	w0, [sp, #196]
   128f0:	cbnz	w0, 12904 <gcc_cp_fe_context@@Base+0x8be4>
   128f4:	bl	5590 <__ctype_b_loc@plt>
   128f8:	ldr	x0, [x0]
   128fc:	ldrh	w0, [x0, x19, lsl #1]
   12900:	tbnz	w0, #13, 12934 <gcc_cp_fe_context@@Base+0x8c14>
   12904:	ldr	w0, [sp, #220]
   12908:	cbnz	w0, 1291c <gcc_cp_fe_context@@Base+0x8bfc>
   1290c:	bl	5590 <__ctype_b_loc@plt>
   12910:	ldr	x0, [x0]
   12914:	ldrh	w0, [x0, x19, lsl #1]
   12918:	tbnz	w0, #8, 12934 <gcc_cp_fe_context@@Base+0x8c14>
   1291c:	ldr	w0, [sp, #228]
   12920:	cbnz	w0, 12950 <gcc_cp_fe_context@@Base+0x8c30>
   12924:	bl	5590 <__ctype_b_loc@plt>
   12928:	ldr	x0, [x0]
   1292c:	ldrh	w0, [x0, x19, lsl #1]
   12930:	tbz	w0, #12, 12950 <gcc_cp_fe_context@@Base+0x8c30>
   12934:	ubfx	x2, x19, #3, #5
   12938:	and	w0, w20, #0x7
   1293c:	mov	w1, #0x1                   	// #1
   12940:	lsl	w0, w1, w0
   12944:	ldrb	w3, [x26, x2]
   12948:	orr	w0, w0, w3
   1294c:	strb	w0, [x26, x2]
   12950:	cbz	x28, 12998 <gcc_cp_fe_context@@Base+0x8c78>
   12954:	ldr	w0, [sp, #212]
   12958:	cmp	w0, #0x0
   1295c:	ldr	w0, [sp, #224]
   12960:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   12964:	b.eq	12998 <gcc_cp_fe_context@@Base+0x8c78>  // b.none
   12968:	bl	5590 <__ctype_b_loc@plt>
   1296c:	ldr	x0, [x0]
   12970:	ldrh	w0, [x0, x19, lsl #1]
   12974:	tst	w0, #0x300
   12978:	b.eq	12998 <gcc_cp_fe_context@@Base+0x8c78>  // b.none
   1297c:	ubfx	x2, x19, #3, #5
   12980:	and	w0, w20, #0x7
   12984:	mov	w1, #0x1                   	// #1
   12988:	lsl	w0, w1, w0
   1298c:	ldrb	w3, [x26, x2]
   12990:	orr	w0, w0, w3
   12994:	strb	w0, [x26, x2]
   12998:	add	x19, x19, #0x1
   1299c:	cmp	x19, #0x100
   129a0:	b.ne	12820 <gcc_cp_fe_context@@Base+0x8b00>  // b.any
   129a4:	mov	w19, w21
   129a8:	mov	w10, #0x1                   	// #1
   129ac:	mov	x21, x27
   129b0:	ldr	x1, [sp, #296]
   129b4:	b	11d28 <gcc_cp_fe_context@@Base+0x8008>
   129b8:	ldr	w0, [sp, #192]
   129bc:	cbnz	w0, 129d0 <gcc_cp_fe_context@@Base+0x8cb0>
   129c0:	bl	5590 <__ctype_b_loc@plt>
   129c4:	ldr	x0, [x0]
   129c8:	ldrsh	w0, [x0, x19, lsl #1]
   129cc:	tbnz	w0, #31, 128b8 <gcc_cp_fe_context@@Base+0x8b98>
   129d0:	ldr	w0, [sp, #208]
   129d4:	cbnz	w0, 129e8 <gcc_cp_fe_context@@Base+0x8cc8>
   129d8:	bl	5590 <__ctype_b_loc@plt>
   129dc:	ldr	x0, [x0]
   129e0:	ldrh	w0, [x0, x19, lsl #1]
   129e4:	tbnz	w0, #9, 128b8 <gcc_cp_fe_context@@Base+0x8b98>
   129e8:	ldr	w0, [sp, #216]
   129ec:	cbnz	w0, 128d4 <gcc_cp_fe_context@@Base+0x8bb4>
   129f0:	bl	5590 <__ctype_b_loc@plt>
   129f4:	ldr	x0, [x0]
   129f8:	ldrh	w0, [x0, x19, lsl #1]
   129fc:	tbz	w0, #14, 128d4 <gcc_cp_fe_context@@Base+0x8bb4>
   12a00:	b	128b8 <gcc_cp_fe_context@@Base+0x8b98>
   12a04:	mov	w0, #0x1a                  	// #26
   12a08:	strb	w0, [x22], #1
   12a0c:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   12a10:	mov	w0, #0x19                  	// #25
   12a14:	strb	w0, [x22], #1
   12a18:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   12a1c:	mov	w0, #0xb                   	// #11
   12a20:	strb	w0, [x22], #1
   12a24:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   12a28:	mov	w0, #0x1b                  	// #27
   12a2c:	strb	w0, [x22], #1
   12a30:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   12a34:	ldr	x0, [sp, #136]
   12a38:	mov	w20, #0xb                   	// #11
   12a3c:	bl	5440 <free@plt>
   12a40:	ldp	x21, x22, [sp, #32]
   12a44:	ldp	x23, x24, [sp, #48]
   12a48:	ldp	x27, x28, [sp, #80]
   12a4c:	b	10a68 <gcc_cp_fe_context@@Base+0x6d48>
   12a50:	ldr	x2, [sp, #104]
   12a54:	and	x2, x2, #0x3fffe0
   12a58:	and	x2, x2, #0xffffffffffe0003f
   12a5c:	cmp	x2, #0x20
   12a60:	b.eq	12a74 <gcc_cp_fe_context@@Base+0x8d54>  // b.none
   12a64:	ldr	x2, [sp, #104]
   12a68:	tbz	w2, #4, 10efc <gcc_cp_fe_context@@Base+0x71dc>
   12a6c:	mov	x26, x22
   12a70:	b	11ec4 <gcc_cp_fe_context@@Base+0x81a4>
   12a74:	ldr	x0, [sp, #136]
   12a78:	mov	w20, #0xd                   	// #13
   12a7c:	bl	5440 <free@plt>
   12a80:	ldp	x21, x22, [sp, #32]
   12a84:	ldp	x23, x24, [sp, #48]
   12a88:	ldp	x27, x28, [sp, #80]
   12a8c:	b	10a68 <gcc_cp_fe_context@@Base+0x6d48>
   12a90:	mov	w0, #0x1d                  	// #29
   12a94:	strb	w0, [x22], #1
   12a98:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   12a9c:	mov	w0, #0x1c                  	// #28
   12aa0:	strb	w0, [x22], #1
   12aa4:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   12aa8:	mov	w0, #0xc                   	// #12
   12aac:	strb	w0, [x22], #1
   12ab0:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   12ab4:	mov	w0, #0x18                  	// #24
   12ab8:	strb	w0, [x22], #1
   12abc:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   12ac0:	ldp	x20, x2, [x28]
   12ac4:	mov	x26, x22
   12ac8:	sub	x0, x22, x20
   12acc:	add	x0, x0, #0x2
   12ad0:	cmp	x0, x2
   12ad4:	b.hi	12b3c <gcc_cp_fe_context@@Base+0x8e1c>  // b.pmore
   12ad8:	b	12b5c <gcc_cp_fe_context@@Base+0x8e3c>
   12adc:	str	x1, [x28, #8]
   12ae0:	mov	x0, x20
   12ae4:	bl	5470 <realloc@plt>
   12ae8:	str	x0, [x28]
   12aec:	subs	x1, x0, x20
   12af0:	add	x4, x24, x1
   12af4:	add	x3, x26, x1
   12af8:	add	x2, x27, x1
   12afc:	mov	x20, x0
   12b00:	cbz	x0, 11870 <gcc_cp_fe_context@@Base+0x7b50>
   12b04:	b.eq	12b28 <gcc_cp_fe_context@@Base+0x8e08>  // b.none
   12b08:	cmp	x24, #0x0
   12b0c:	add	x22, x22, x1
   12b10:	csel	x24, x4, x24, ne  // ne = any
   12b14:	cmp	x26, #0x0
   12b18:	csel	x26, x3, x26, ne  // ne = any
   12b1c:	cmp	x27, #0x0
   12b20:	csel	x27, x2, x27, ne  // ne = any
   12b24:	add	x19, x19, x1
   12b28:	ldr	x2, [x28, #8]
   12b2c:	sub	x0, x22, x0
   12b30:	add	x0, x0, #0x2
   12b34:	cmp	x0, x2
   12b38:	b.ls	12b5c <gcc_cp_fe_context@@Base+0x8e3c>  // b.plast
   12b3c:	lsl	x1, x2, #1
   12b40:	cmp	x2, #0x10, lsl #12
   12b44:	b.eq	10a58 <gcc_cp_fe_context@@Base+0x6d38>  // b.none
   12b48:	cmp	x1, #0x10, lsl #12
   12b4c:	b.ls	12adc <gcc_cp_fe_context@@Base+0x8dbc>  // b.plast
   12b50:	mov	x1, #0x10000               	// #65536
   12b54:	str	x25, [x28, #8]
   12b58:	b	12ae0 <gcc_cp_fe_context@@Base+0x8dc0>
   12b5c:	mov	x0, x22
   12b60:	mov	w1, #0x8                   	// #8
   12b64:	strb	w1, [x0], #2
   12b68:	strb	w21, [x22, #1]
   12b6c:	mov	x22, x0
   12b70:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   12b74:	ldr	x0, [sp, #136]
   12b78:	bl	5440 <free@plt>
   12b7c:	ldr	x1, [sp, #112]
   12b80:	ldr	x0, [sp, #296]
   12b84:	ldp	x21, x22, [sp, #32]
   12b88:	cmp	x0, x1
   12b8c:	cset	w20, ne  // ne = any
   12b90:	add	w20, w20, #0x9
   12b94:	ldp	x23, x24, [sp, #48]
   12b98:	ldp	x27, x28, [sp, #80]
   12b9c:	b	10a68 <gcc_cp_fe_context@@Base+0x6d48>
   12ba0:	add	x1, x22, #0x3
   12ba4:	cmp	x22, x26
   12ba8:	sub	w2, w22, w26
   12bac:	mov	x0, x1
   12bb0:	add	x3, x26, #0x3
   12bb4:	b.eq	12bcc <gcc_cp_fe_context@@Base+0x8eac>  // b.none
   12bb8:	ldurb	w4, [x0, #-4]
   12bbc:	sub	x0, x0, #0x1
   12bc0:	strb	w4, [x0]
   12bc4:	cmp	x0, x3
   12bc8:	b.ne	12bb8 <gcc_cp_fe_context@@Base+0x8e98>  // b.any
   12bcc:	mov	w0, #0xd                   	// #13
   12bd0:	mov	x22, x1
   12bd4:	mov	x27, #0x0                   	// #0
   12bd8:	strb	w0, [x26]
   12bdc:	sturh	w2, [x26, #1]
   12be0:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   12be4:	ldr	x0, [sp, #136]
   12be8:	bl	5440 <free@plt>
   12bec:	ldp	x21, x22, [sp, #32]
   12bf0:	ldp	x23, x24, [sp, #48]
   12bf4:	ldp	x27, x28, [sp, #80]
   12bf8:	b	10a68 <gcc_cp_fe_context@@Base+0x6d48>
   12bfc:	ldrb	w3, [x22]
   12c00:	mov	x23, x26
   12c04:	ldp	x27, x19, [sp, #248]
   12c08:	ldp	x26, x24, [sp, #264]
   12c0c:	ldr	x28, [sp, #280]
   12c10:	cbz	w3, 12c40 <gcc_cp_fe_context@@Base+0x8f20>
   12c14:	add	x0, x22, w3, uxtb
   12c18:	b	12c28 <gcc_cp_fe_context@@Base+0x8f08>
   12c1c:	and	w3, w2, #0xff
   12c20:	strb	w3, [x22]
   12c24:	cbz	w3, 12c40 <gcc_cp_fe_context@@Base+0x8f20>
   12c28:	ldrb	w1, [x0]
   12c2c:	sub	w2, w3, #0x1
   12c30:	sub	x0, x0, #0x1
   12c34:	cbz	w1, 12c1c <gcc_cp_fe_context@@Base+0x8efc>
   12c38:	add	x22, x23, w3, uxtb
   12c3c:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   12c40:	mov	w3, #0x0                   	// #0
   12c44:	add	x22, x23, w3, uxtb
   12c48:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   12c4c:	ldrb	w0, [x27, #1]
   12c50:	cmp	w0, #0x5d
   12c54:	b.ne	12e48 <gcc_cp_fe_context@@Base+0x9128>  // b.any
   12c58:	ldr	x26, [sp, #160]
   12c5c:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   12c60:	add	x1, x1, #0xda0
   12c64:	mov	x0, x26
   12c68:	bl	56c0 <strcmp@plt>
   12c6c:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   12c70:	mov	w25, w0
   12c74:	add	x1, x1, #0xda8
   12c78:	mov	x0, x26
   12c7c:	bl	56c0 <strcmp@plt>
   12c80:	mov	w27, w0
   12c84:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   12c88:	mov	x0, x26
   12c8c:	add	x1, x1, #0xdb0
   12c90:	bl	56c0 <strcmp@plt>
   12c94:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   12c98:	mov	w20, w0
   12c9c:	add	x1, x1, #0xdb8
   12ca0:	mov	x0, x26
   12ca4:	bl	56c0 <strcmp@plt>
   12ca8:	mov	w19, w0
   12cac:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   12cb0:	mov	x0, x26
   12cb4:	add	x1, x1, #0xdc0
   12cb8:	bl	56c0 <strcmp@plt>
   12cbc:	mov	w2, w0
   12cc0:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   12cc4:	mov	x0, x26
   12cc8:	add	x1, x1, #0xdc8
   12ccc:	str	w2, [sp, #104]
   12cd0:	bl	56c0 <strcmp@plt>
   12cd4:	mov	w22, w0
   12cd8:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   12cdc:	mov	x0, x26
   12ce0:	add	x1, x1, #0xdd0
   12ce4:	bl	56c0 <strcmp@plt>
   12ce8:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   12cec:	mov	w28, w0
   12cf0:	add	x1, x1, #0xdd8
   12cf4:	mov	x0, x26
   12cf8:	bl	56c0 <strcmp@plt>
   12cfc:	mov	w24, w0
   12d00:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   12d04:	mov	x0, x26
   12d08:	add	x1, x1, #0xde0
   12d0c:	bl	56c0 <strcmp@plt>
   12d10:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   12d14:	mov	w21, w0
   12d18:	add	x1, x1, #0xde8
   12d1c:	mov	x0, x26
   12d20:	bl	56c0 <strcmp@plt>
   12d24:	mov	w23, w0
   12d28:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   12d2c:	mov	x0, x26
   12d30:	add	x1, x1, #0xdf0
   12d34:	str	x26, [sp, #160]
   12d38:	bl	56c0 <strcmp@plt>
   12d3c:	mov	w26, w0
   12d40:	ldr	x0, [sp, #160]
   12d44:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   12d48:	add	x1, x1, #0xdf8
   12d4c:	bl	56c0 <strcmp@plt>
   12d50:	ldr	w2, [sp, #104]
   12d54:	cmp	w2, #0x0
   12d58:	ccmp	w28, #0x0, #0x4, ne  // ne = any
   12d5c:	cset	w1, ne  // ne = any
   12d60:	cmp	w27, #0x0
   12d64:	ccmp	w26, #0x0, #0x4, ne  // ne = any
   12d68:	csel	w1, w1, wzr, ne  // ne = any
   12d6c:	cmp	w0, #0x0
   12d70:	ccmp	w25, #0x0, #0x4, ne  // ne = any
   12d74:	csel	w0, w1, wzr, ne  // ne = any
   12d78:	cmp	w24, #0x0
   12d7c:	ccmp	w23, #0x0, #0x4, ne  // ne = any
   12d80:	csel	w0, w0, wzr, ne  // ne = any
   12d84:	cmp	w22, #0x0
   12d88:	ccmp	w21, #0x0, #0x4, ne  // ne = any
   12d8c:	csel	w0, w0, wzr, ne  // ne = any
   12d90:	cmp	w20, #0x0
   12d94:	ccmp	w19, #0x0, #0x4, ne  // ne = any
   12d98:	csel	w0, w0, wzr, ne  // ne = any
   12d9c:	cbnz	w0, 12fc8 <gcc_cp_fe_context@@Base+0x92a8>
   12da0:	mov	w20, #0xe                   	// #14
   12da4:	ldp	x21, x22, [sp, #32]
   12da8:	ldp	x23, x24, [sp, #48]
   12dac:	ldp	x27, x28, [sp, #80]
   12db0:	b	10a68 <gcc_cp_fe_context@@Base+0x6d48>
   12db4:	mov	w1, #0xa                   	// #10
   12db8:	b	12310 <gcc_cp_fe_context@@Base+0x85f0>
   12dbc:	strb	wzr, [x21, w10, sxtw]
   12dc0:	cmp	w0, #0x3d
   12dc4:	b.eq	12fec <gcc_cp_fe_context@@Base+0x92cc>  // b.none
   12dc8:	ldrb	w4, [x22, #8]
   12dcc:	and	x6, x10, #0xff
   12dd0:	ldrb	w0, [x22, #12]
   12dd4:	mvn	x6, x6
   12dd8:	add	x1, x1, x6
   12ddc:	orr	w4, w4, #0x20
   12de0:	orr	w0, w0, #0x8
   12de4:	mov	w19, #0x3d                  	// #61
   12de8:	mov	w10, #0x0                   	// #0
   12dec:	strb	w4, [x22, #8]
   12df0:	strb	w0, [x22, #12]
   12df4:	str	x1, [sp, #296]
   12df8:	b	11d28 <gcc_cp_fe_context@@Base+0x8008>
   12dfc:	strb	wzr, [x21, w0, sxtw]
   12e00:	cmp	w6, #0x2e
   12e04:	b.eq	12fb8 <gcc_cp_fe_context@@Base+0x9298>  // b.none
   12e08:	and	x0, x0, #0xff
   12e0c:	ldrb	w1, [x22, #12]
   12e10:	mvn	x0, x0
   12e14:	mov	w19, #0x2e                  	// #46
   12e18:	add	x0, x4, x0
   12e1c:	str	x0, [sp, #296]
   12e20:	orr	w0, w1, #0x8
   12e24:	strb	w0, [x22, #12]
   12e28:	ldrb	w0, [x22, #6]
   12e2c:	mov	w10, #0x0                   	// #0
   12e30:	orr	w0, w0, #0x40
   12e34:	strb	w0, [x22, #6]
   12e38:	b	12028 <gcc_cp_fe_context@@Base+0x8308>
   12e3c:	strb	wzr, [x21, w4, sxtw]
   12e40:	cmp	w0, #0x3a
   12e44:	b.eq	12c4c <gcc_cp_fe_context@@Base+0x8f2c>  // b.none
   12e48:	ldrb	w1, [x22, #12]
   12e4c:	and	x0, x4, #0xff
   12e50:	ldrb	w4, [x22, #8]
   12e54:	mvn	x0, x0
   12e58:	add	x0, x23, x0
   12e5c:	orr	w1, w1, #0x8
   12e60:	orr	w4, w4, #0x4
   12e64:	mov	w19, #0x3a                  	// #58
   12e68:	mov	w10, #0x0                   	// #0
   12e6c:	strb	w4, [x22, #8]
   12e70:	strb	w1, [x22, #12]
   12e74:	str	x0, [sp, #296]
   12e78:	b	12028 <gcc_cp_fe_context@@Base+0x8308>
   12e7c:	ldr	x0, [sp, #136]
   12e80:	mov	w20, #0x10                  	// #16
   12e84:	bl	5440 <free@plt>
   12e88:	ldp	x21, x22, [sp, #32]
   12e8c:	ldp	x23, x24, [sp, #48]
   12e90:	ldp	x27, x28, [sp, #80]
   12e94:	b	10a68 <gcc_cp_fe_context@@Base+0x6d48>
   12e98:	cmp	w23, #0x1
   12e9c:	mov	x0, #0xa                   	// #10
   12ea0:	mov	x1, #0x5                   	// #5
   12ea4:	csel	x0, x0, x1, gt
   12ea8:	add	x0, x22, x0
   12eac:	add	x1, x22, #0x5
   12eb0:	sub	x0, x0, x26
   12eb4:	cmp	x22, x26
   12eb8:	sub	w0, w0, #0x3
   12ebc:	mov	x2, x1
   12ec0:	add	x3, x26, #0x5
   12ec4:	b.eq	12edc <gcc_cp_fe_context@@Base+0x91bc>  // b.none
   12ec8:	ldurb	w4, [x2, #-6]
   12ecc:	sub	x2, x2, #0x1
   12ed0:	strb	w4, [x2]
   12ed4:	cmp	x2, x3
   12ed8:	b.ne	12ec8 <gcc_cp_fe_context@@Base+0x91a8>  // b.any
   12edc:	mov	w2, #0x15                  	// #21
   12ee0:	strb	w2, [x26]
   12ee4:	sturh	w0, [x26, #1]
   12ee8:	cmp	x26, x1
   12eec:	sturh	w21, [x26, #3]
   12ef0:	add	x0, x22, #0xa
   12ef4:	b.eq	12f08 <gcc_cp_fe_context@@Base+0x91e8>  // b.none
   12ef8:	ldrb	w2, [x1, #-1]!
   12efc:	strb	w2, [x1, #5]
   12f00:	cmp	x26, x1
   12f04:	b.ne	12ef8 <gcc_cp_fe_context@@Base+0x91d8>  // b.any
   12f08:	mov	w1, #0x517                 	// #1303
   12f0c:	strh	w1, [x26]
   12f10:	strb	wzr, [x26, #2]
   12f14:	cmp	w23, #0x1
   12f18:	sturh	w21, [x26, #3]
   12f1c:	b.gt	12f44 <gcc_cp_fe_context@@Base+0x9224>
   12f20:	mov	x22, x0
   12f24:	mov	x27, #0x0                   	// #0
   12f28:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   12f2c:	add	x0, x0, #0xa
   12f30:	mov	x20, #0xa                   	// #10
   12f34:	cmp	x2, x0
   12f38:	b.cc	125cc <gcc_cp_fe_context@@Base+0x88ac>  // b.lo, b.ul, b.last
   12f3c:	mov	x0, #0x5                   	// #5
   12f40:	b	12ea8 <gcc_cp_fe_context@@Base+0x9188>
   12f44:	sub	w0, w26, w0
   12f48:	sub	w23, w23, #0x1
   12f4c:	add	w1, w0, #0x2
   12f50:	mov	w0, #0x16                  	// #22
   12f54:	strb	w0, [x22, #10]
   12f58:	add	x0, x22, #0xf
   12f5c:	sturh	w1, [x22, #11]
   12f60:	cmp	x26, x0
   12f64:	sturh	w23, [x22, #13]
   12f68:	sub	x1, x0, x26
   12f6c:	add	x22, x22, #0x14
   12f70:	b.eq	12f84 <gcc_cp_fe_context@@Base+0x9264>  // b.none
   12f74:	ldrb	w2, [x0, #-1]!
   12f78:	strb	w2, [x0, #5]
   12f7c:	cmp	x26, x0
   12f80:	b.ne	12f74 <gcc_cp_fe_context@@Base+0x9254>  // b.any
   12f84:	mov	w0, #0x17                  	// #23
   12f88:	mov	x27, #0x0                   	// #0
   12f8c:	strb	w0, [x26]
   12f90:	sturh	w1, [x26, #1]
   12f94:	sturh	w23, [x26, #3]
   12f98:	b	10bcc <gcc_cp_fe_context@@Base+0x6eac>
   12f9c:	ldr	x0, [sp, #136]
   12fa0:	mov	w20, #0xa                   	// #10
   12fa4:	bl	5440 <free@plt>
   12fa8:	ldp	x21, x22, [sp, #32]
   12fac:	ldp	x23, x24, [sp, #48]
   12fb0:	ldp	x27, x28, [sp, #80]
   12fb4:	b	10a68 <gcc_cp_fe_context@@Base+0x6d48>
   12fb8:	ldrb	w6, [x1, #1]
   12fbc:	cmp	w6, #0x5d
   12fc0:	b.ne	12e08 <gcc_cp_fe_context@@Base+0x90e8>  // b.any
   12fc4:	b	11fec <gcc_cp_fe_context@@Base+0x82cc>
   12fc8:	ldr	x0, [sp, #136]
   12fcc:	mov	w20, #0x4                   	// #4
   12fd0:	bl	5440 <free@plt>
   12fd4:	ldp	x21, x22, [sp, #32]
   12fd8:	ldp	x23, x24, [sp, #48]
   12fdc:	ldp	x27, x28, [sp, #80]
   12fe0:	b	10a68 <gcc_cp_fe_context@@Base+0x6d48>
   12fe4:	mov	x0, #0xa                   	// #10
   12fe8:	b	12ea8 <gcc_cp_fe_context@@Base+0x9188>
   12fec:	ldrb	w0, [x4, #1]
   12ff0:	cmp	w0, #0x5d
   12ff4:	b.ne	12dc8 <gcc_cp_fe_context@@Base+0x90a8>  // b.any
   12ff8:	b	12500 <gcc_cp_fe_context@@Base+0x87e0>
   12ffc:	ldr	x0, [sp, #136]
   13000:	mov	w20, #0x3                   	// #3
   13004:	bl	5440 <free@plt>
   13008:	ldp	x21, x22, [sp, #32]
   1300c:	ldp	x23, x24, [sp, #48]
   13010:	ldp	x27, x28, [sp, #80]
   13014:	b	10a68 <gcc_cp_fe_context@@Base+0x6d48>
   13018:	mov	w20, #0xc                   	// #12
   1301c:	ldp	x21, x22, [sp, #32]
   13020:	b	10a68 <gcc_cp_fe_context@@Base+0x6d48>
   13024:	ldr	x0, [sp, #136]
   13028:	mov	w20, #0x6                   	// #6
   1302c:	bl	5440 <free@plt>
   13030:	ldp	x21, x22, [sp, #32]
   13034:	ldp	x23, x24, [sp, #48]
   13038:	ldp	x27, x28, [sp, #80]
   1303c:	b	10a68 <gcc_cp_fe_context@@Base+0x6d48>

0000000000013040 <xre_set_syntax@@Base>:
   13040:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
   13044:	mov	x2, x0
   13048:	ldr	x1, [x1, #3800]
   1304c:	ldr	x0, [x1]
   13050:	str	x2, [x1]
   13054:	ret

0000000000013058 <xre_compile_fastmap@@Base>:
   13058:	b	e518 <gcc_cp_fe_context@@Base+0x47f8>
   1305c:	nop

0000000000013060 <xre_set_registers@@Base>:
   13060:	cbz	w2, 13080 <xre_set_registers@@Base+0x20>
   13064:	ldrb	w5, [x0, #56]
   13068:	mov	w6, #0x1                   	// #1
   1306c:	bfi	w5, w6, #1, #2
   13070:	strb	w5, [x0, #56]
   13074:	str	w2, [x1]
   13078:	stp	x3, x4, [x1, #8]
   1307c:	ret
   13080:	ldrb	w2, [x0, #56]
   13084:	and	w2, w2, #0xfffffff9
   13088:	strb	w2, [x0, #56]
   1308c:	str	wzr, [x1]
   13090:	stp	xzr, xzr, [x1, #8]
   13094:	ret

0000000000013098 <xre_search_2@@Base>:
   13098:	stp	x29, x30, [sp, #-128]!
   1309c:	cmp	w5, #0x0
   130a0:	mov	x29, sp
   130a4:	stp	x21, x22, [sp, #32]
   130a8:	mov	x22, x0
   130ac:	add	w0, w5, w6
   130b0:	stp	x19, x20, [sp, #16]
   130b4:	mov	w20, w6
   130b8:	stp	x23, x24, [sp, #48]
   130bc:	add	w23, w2, w4
   130c0:	ccmp	w5, w23, #0x0, ge  // ge = tcont
   130c4:	stp	x25, x26, [sp, #64]
   130c8:	stp	x27, x28, [sp, #80]
   130cc:	ldp	x25, x28, [x22, #32]
   130d0:	b.gt	131dc <xre_search_2@@Base+0x144>
   130d4:	mov	w21, w2
   130d8:	mov	w24, w4
   130dc:	mov	w19, w5
   130e0:	mov	x26, x1
   130e4:	mov	x27, x3
   130e8:	mov	x6, x7
   130ec:	tbnz	w0, #31, 1333c <xre_search_2@@Base+0x2a4>
   130f0:	ldr	x1, [x22, #16]
   130f4:	cmp	w23, w0
   130f8:	sub	w0, w23, w5
   130fc:	csel	w20, w0, w20, lt  // lt = tstop
   13100:	cbz	x1, 13138 <xre_search_2@@Base+0xa0>
   13104:	cmp	w20, #0x0
   13108:	b.le	13138 <xre_search_2@@Base+0xa0>
   1310c:	ldr	x0, [x22]
   13110:	ldrb	w0, [x0]
   13114:	cmp	w0, #0xb
   13118:	b.eq	1312c <xre_search_2@@Base+0x94>  // b.none
   1311c:	cmp	w0, #0x9
   13120:	b.ne	13138 <xre_search_2@@Base+0xa0>  // b.any
   13124:	ldrsb	w0, [x22, #56]
   13128:	tbnz	w0, #31, 13138 <xre_search_2@@Base+0xa0>
   1312c:	cbnz	w19, 131dc <xre_search_2@@Base+0x144>
   13130:	mov	w20, #0x1                   	// #1
   13134:	nop
   13138:	cbz	x25, 13144 <xre_search_2@@Base+0xac>
   1313c:	ldrb	w0, [x22, #56]
   13140:	tbz	w0, #3, 13304 <xre_search_2@@Base+0x26c>
   13144:	cmp	x25, #0x0
   13148:	sxtw	x0, w21
   1314c:	cset	w8, ne  // ne = any
   13150:	str	x0, [sp, #120]
   13154:	nop
   13158:	cmp	w8, #0x0
   1315c:	ccmp	w23, w19, #0x4, ne  // ne = any
   13160:	b.le	132cc <xre_search_2@@Base+0x234>
   13164:	ldrb	w0, [x22, #56]
   13168:	tbnz	w0, #0, 13270 <xre_search_2@@Base+0x1d8>
   1316c:	cmp	w20, #0x0
   13170:	b.le	13248 <xre_search_2@@Base+0x1b0>
   13174:	cmp	w21, w19
   13178:	sxtw	x5, w19
   1317c:	b.le	131fc <xre_search_2@@Base+0x164>
   13180:	add	w0, w19, w20
   13184:	add	x5, x26, x5
   13188:	cmp	w21, w0
   1318c:	b.gt	13208 <xre_search_2@@Base+0x170>
   13190:	sub	w0, w21, w19
   13194:	sub	w0, w20, w0
   13198:	cmp	w20, w0
   1319c:	cbz	x28, 13364 <xre_search_2@@Base+0x2cc>
   131a0:	b.le	13270 <xre_search_2@@Base+0x1d8>
   131a4:	mov	w2, w20
   131a8:	b	131b8 <xre_search_2@@Base+0x120>
   131ac:	sub	w2, w2, #0x1
   131b0:	cmp	w2, w0
   131b4:	b.le	131c8 <xre_search_2@@Base+0x130>
   131b8:	ldrb	w1, [x5], #1
   131bc:	ldrb	w1, [x28, x1]
   131c0:	ldrb	w1, [x25, x1]
   131c4:	cbz	w1, 131ac <xre_search_2@@Base+0x114>
   131c8:	sub	w20, w20, w2
   131cc:	cmp	w2, #0x0
   131d0:	add	w19, w19, w20
   131d4:	ccmp	w23, w19, #0x0, ge  // ge = tcont
   131d8:	b.ne	1336c <xre_search_2@@Base+0x2d4>  // b.any
   131dc:	mov	w0, #0xffffffff            	// #-1
   131e0:	ldp	x19, x20, [sp, #16]
   131e4:	ldp	x21, x22, [sp, #32]
   131e8:	ldp	x23, x24, [sp, #48]
   131ec:	ldp	x25, x26, [sp, #64]
   131f0:	ldp	x27, x28, [sp, #80]
   131f4:	ldp	x29, x30, [sp], #128
   131f8:	ret
   131fc:	ldr	x0, [sp, #120]
   13200:	sub	x5, x5, x0
   13204:	add	x5, x27, x5
   13208:	mov	w0, #0x0                   	// #0
   1320c:	cbnz	x28, 131a4 <xre_search_2@@Base+0x10c>
   13210:	mov	w2, w20
   13214:	b	13224 <xre_search_2@@Base+0x18c>
   13218:	sub	w2, w2, #0x1
   1321c:	cmp	w2, w0
   13220:	b.eq	131c8 <xre_search_2@@Base+0x130>  // b.none
   13224:	ldrb	w1, [x5], #1
   13228:	ldrb	w1, [x25, x1]
   1322c:	cbz	w1, 13218 <xre_search_2@@Base+0x180>
   13230:	sub	w20, w20, w2
   13234:	cmp	w2, #0x0
   13238:	add	w19, w19, w20
   1323c:	ccmp	w23, w19, #0x0, ge  // ge = tcont
   13240:	b.ne	1336c <xre_search_2@@Base+0x2d4>  // b.any
   13244:	b	131dc <xre_search_2@@Base+0x144>
   13248:	cmp	w21, #0x0
   1324c:	ccmp	w21, w19, #0x4, ne  // ne = any
   13250:	b.gt	132fc <xre_search_2@@Base+0x264>
   13254:	sub	w0, w19, w21
   13258:	ldrb	w0, [x27, w0, sxtw]
   1325c:	and	x0, x0, #0xff
   13260:	cbz	x28, 13268 <xre_search_2@@Base+0x1d0>
   13264:	ldrb	w0, [x28, x0]
   13268:	ldrb	w0, [x25, x0]
   1326c:	cbz	w0, 132e8 <xre_search_2@@Base+0x250>
   13270:	ldr	w7, [sp, #128]
   13274:	mov	w5, w19
   13278:	mov	w4, w24
   1327c:	mov	x3, x27
   13280:	mov	w2, w21
   13284:	mov	x1, x26
   13288:	mov	x0, x22
   1328c:	str	x6, [sp, #104]
   13290:	str	w8, [sp, #116]
   13294:	bl	e8d0 <gcc_cp_fe_context@@Base+0x4bb0>
   13298:	tbz	w0, #31, 13344 <xre_search_2@@Base+0x2ac>
   1329c:	cmn	w0, #0x2
   132a0:	b.eq	1331c <xre_search_2@@Base+0x284>  // b.none
   132a4:	cmp	w20, #0x0
   132a8:	cbz	w20, 131dc <xre_search_2@@Base+0x144>
   132ac:	ldr	w8, [sp, #116]
   132b0:	ldr	x6, [sp, #104]
   132b4:	b.le	132f0 <xre_search_2@@Base+0x258>
   132b8:	add	w19, w19, #0x1
   132bc:	cmp	w8, #0x0
   132c0:	sub	w20, w20, #0x1
   132c4:	ccmp	w23, w19, #0x4, ne  // ne = any
   132c8:	b.gt	13164 <xre_search_2@@Base+0xcc>
   132cc:	cmp	w20, #0x0
   132d0:	ccmp	w23, w19, #0x0, ge  // ge = tcont
   132d4:	ccmp	w8, #0x0, #0x4, eq  // eq = none
   132d8:	b.eq	13270 <xre_search_2@@Base+0x1d8>  // b.none
   132dc:	ldrb	w0, [x22, #56]
   132e0:	tbnz	w0, #0, 13270 <xre_search_2@@Base+0x1d8>
   132e4:	b	131dc <xre_search_2@@Base+0x144>
   132e8:	cbz	w20, 131dc <xre_search_2@@Base+0x144>
   132ec:	nop
   132f0:	add	w20, w20, #0x1
   132f4:	sub	w19, w19, #0x1
   132f8:	b	13158 <xre_search_2@@Base+0xc0>
   132fc:	ldrb	w0, [x26, w19, sxtw]
   13300:	b	1325c <xre_search_2@@Base+0x1c4>
   13304:	mov	x0, x22
   13308:	str	x6, [sp, #104]
   1330c:	bl	5340 <xre_compile_fastmap@plt>
   13310:	cmn	w0, #0x2
   13314:	ldr	x6, [sp, #104]
   13318:	b.ne	13144 <xre_search_2@@Base+0xac>  // b.any
   1331c:	mov	w0, #0xfffffffe            	// #-2
   13320:	ldp	x19, x20, [sp, #16]
   13324:	ldp	x21, x22, [sp, #32]
   13328:	ldp	x23, x24, [sp, #48]
   1332c:	ldp	x25, x26, [sp, #64]
   13330:	ldp	x27, x28, [sp, #80]
   13334:	ldp	x29, x30, [sp], #128
   13338:	ret
   1333c:	neg	w20, w5
   13340:	b	13138 <xre_search_2@@Base+0xa0>
   13344:	mov	w0, w19
   13348:	ldp	x19, x20, [sp, #16]
   1334c:	ldp	x21, x22, [sp, #32]
   13350:	ldp	x23, x24, [sp, #48]
   13354:	ldp	x25, x26, [sp, #64]
   13358:	ldp	x27, x28, [sp, #80]
   1335c:	ldp	x29, x30, [sp], #128
   13360:	ret
   13364:	b.gt	13210 <xre_search_2@@Base+0x178>
   13368:	b	13270 <xre_search_2@@Base+0x1d8>
   1336c:	mov	w20, w2
   13370:	b	13270 <xre_search_2@@Base+0x1d8>
   13374:	nop

0000000000013378 <xre_search@@Base>:
   13378:	sub	sp, sp, #0x20
   1337c:	mov	w8, w3
   13380:	mov	w6, w4
   13384:	mov	x3, x1
   13388:	mov	w4, w2
   1338c:	mov	x7, x5
   13390:	stp	x29, x30, [sp, #16]
   13394:	add	x29, sp, #0x10
   13398:	mov	w5, w8
   1339c:	mov	x1, #0x0                   	// #0
   133a0:	str	w2, [sp]
   133a4:	mov	w2, #0x0                   	// #0
   133a8:	bl	5800 <xre_search_2@plt>
   133ac:	ldp	x29, x30, [sp, #16]
   133b0:	add	sp, sp, #0x20
   133b4:	ret

00000000000133b8 <xre_match@@Base>:
   133b8:	mov	w7, w2
   133bc:	mov	w5, w3
   133c0:	mov	x6, x4
   133c4:	mov	x3, x1
   133c8:	mov	w4, w2
   133cc:	mov	x1, #0x0                   	// #0
   133d0:	mov	w2, #0x0                   	// #0
   133d4:	b	e8d0 <gcc_cp_fe_context@@Base+0x4bb0>

00000000000133d8 <xre_match_2@@Base>:
   133d8:	b	e8d0 <gcc_cp_fe_context@@Base+0x4bb0>
   133dc:	nop

00000000000133e0 <xre_compile_pattern@@Base>:
   133e0:	stp	x29, x30, [sp, #-16]!
   133e4:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
   133e8:	mov	w6, #0x69                  	// #105
   133ec:	mov	x29, sp
   133f0:	ldr	x5, [x5, #3800]
   133f4:	mov	x3, x2
   133f8:	ldrb	w4, [x2, #56]
   133fc:	and	w4, w4, w6
   13400:	orr	w4, w4, #0xffffff80
   13404:	strb	w4, [x2, #56]
   13408:	ldr	x2, [x5]
   1340c:	bl	10570 <gcc_cp_fe_context@@Base+0x6850>
   13410:	cbz	w0, 13428 <xre_compile_pattern@@Base+0x48>
   13414:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
   13418:	add	x1, x1, #0x900
   1341c:	ldp	x29, x30, [sp], #16
   13420:	ldr	x0, [x1, w0, sxtw #3]
   13424:	ret
   13428:	mov	x0, #0x0                   	// #0
   1342c:	ldp	x29, x30, [sp], #16
   13430:	ret
   13434:	nop

0000000000013438 <xre_comp@@Base>:
   13438:	stp	x29, x30, [sp, #-48]!
   1343c:	mov	x29, sp
   13440:	stp	x19, x20, [sp, #16]
   13444:	adrp	x19, 2b000 <xexit@@Base+0x15e10>
   13448:	mov	x20, x0
   1344c:	stp	x21, x22, [sp, #32]
   13450:	add	x21, x19, #0x5f8
   13454:	ldr	x0, [x21, #264]
   13458:	cbz	x20, 134f0 <xre_comp@@Base+0xb8>
   1345c:	cbz	x0, 134b8 <xre_comp@@Base+0x80>
   13460:	add	x19, x19, #0x5f8
   13464:	mov	x0, x20
   13468:	add	x19, x19, #0x108
   1346c:	ldrb	w1, [x19, #56]
   13470:	orr	w1, w1, #0xffffff80
   13474:	strb	w1, [x19, #56]
   13478:	bl	5360 <strlen@plt>
   1347c:	mov	x1, x0
   13480:	adrp	x2, 2a000 <xexit@@Base+0x14e10>
   13484:	mov	x3, x19
   13488:	mov	x0, x20
   1348c:	ldr	x2, [x2, #3800]
   13490:	ldr	x2, [x2]
   13494:	bl	10570 <gcc_cp_fe_context@@Base+0x6850>
   13498:	cbz	w0, 1350c <xre_comp@@Base+0xd4>
   1349c:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
   134a0:	add	x1, x1, #0x900
   134a4:	ldr	x0, [x1, w0, sxtw #3]
   134a8:	ldp	x19, x20, [sp, #16]
   134ac:	ldp	x21, x22, [sp, #32]
   134b0:	ldp	x29, x30, [sp], #48
   134b4:	ret
   134b8:	mov	x0, #0xc8                  	// #200
   134bc:	bl	5710 <malloc@plt>
   134c0:	str	x0, [x21, #264]
   134c4:	cbz	x0, 134e4 <xre_comp@@Base+0xac>
   134c8:	add	x22, x21, #0x108
   134cc:	mov	x1, #0xc8                  	// #200
   134d0:	mov	x0, #0x100                 	// #256
   134d4:	str	x1, [x22, #8]
   134d8:	bl	5710 <malloc@plt>
   134dc:	str	x0, [x22, #32]
   134e0:	cbnz	x0, 13460 <xre_comp@@Base+0x28>
   134e4:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
   134e8:	add	x0, x0, #0xe00
   134ec:	b	134a8 <xre_comp@@Base+0x70>
   134f0:	cbnz	x0, 1350c <xre_comp@@Base+0xd4>
   134f4:	adrp	x0, 15000 <iterative_hash@@Base+0x2c8>
   134f8:	add	x0, x0, #0xe18
   134fc:	ldp	x19, x20, [sp, #16]
   13500:	ldp	x21, x22, [sp, #32]
   13504:	ldp	x29, x30, [sp], #48
   13508:	ret
   1350c:	mov	x0, #0x0                   	// #0
   13510:	ldp	x19, x20, [sp, #16]
   13514:	ldp	x21, x22, [sp, #32]
   13518:	ldp	x29, x30, [sp], #48
   1351c:	ret

0000000000013520 <xre_exec@@Base>:
   13520:	stp	x29, x30, [sp, #-32]!
   13524:	mov	x29, sp
   13528:	str	x19, [sp, #16]
   1352c:	mov	x19, x0
   13530:	bl	5360 <strlen@plt>
   13534:	mov	x2, x0
   13538:	adrp	x3, 2b000 <xexit@@Base+0x15e10>
   1353c:	add	x0, x3, #0x5f8
   13540:	mov	x1, x19
   13544:	mov	w4, w2
   13548:	mov	x5, #0x0                   	// #0
   1354c:	mov	w3, #0x0                   	// #0
   13550:	add	x0, x0, #0x108
   13554:	bl	55c0 <xre_search@plt>
   13558:	mvn	w0, w0
   1355c:	ldr	x19, [sp, #16]
   13560:	lsr	w0, w0, #31
   13564:	ldp	x29, x30, [sp], #32
   13568:	ret
   1356c:	nop

0000000000013570 <xregcomp@@Base>:
   13570:	stp	x29, x30, [sp, #-80]!
   13574:	mov	x29, sp
   13578:	stp	x21, x22, [sp, #32]
   1357c:	mov	w21, w2
   13580:	mov	x22, #0xb2fc                	// #45820
   13584:	stp	x23, x24, [sp, #48]
   13588:	mov	x24, x0
   1358c:	tst	x21, #0x1
   13590:	stp	x19, x20, [sp, #16]
   13594:	mov	x23, x1
   13598:	movk	x22, #0x3, lsl #16
   1359c:	str	xzr, [x0]
   135a0:	mov	x0, #0x2c6                 	// #710
   135a4:	stp	xzr, xzr, [x24, #8]
   135a8:	movk	x0, #0x1, lsl #16
   135ac:	csel	x22, x22, x0, ne  // ne = any
   135b0:	mov	x0, #0x100                 	// #256
   135b4:	bl	5710 <malloc@plt>
   135b8:	str	x0, [x24, #32]
   135bc:	tbnz	w21, #1, 13658 <xregcomp@@Base+0xe8>
   135c0:	str	xzr, [x24, #40]
   135c4:	mov	w1, #0x0                   	// #0
   135c8:	tbnz	w21, #2, 13648 <xregcomp@@Base+0xd8>
   135cc:	ldrb	w2, [x24, #56]
   135d0:	ubfx	x0, x21, #3, #1
   135d4:	ubfiz	w1, w1, #7, #1
   135d8:	mov	w3, #0x6f                  	// #111
   135dc:	orr	w0, w1, w0, lsl #4
   135e0:	and	w1, w2, w3
   135e4:	orr	w0, w0, w1
   135e8:	strb	w0, [x24, #56]
   135ec:	mov	x0, x23
   135f0:	bl	5360 <strlen@plt>
   135f4:	mov	x1, x0
   135f8:	mov	x3, x24
   135fc:	mov	x2, x22
   13600:	mov	x0, x23
   13604:	bl	10570 <gcc_cp_fe_context@@Base+0x6850>
   13608:	mov	w19, w0
   1360c:	cmp	w0, #0x10
   13610:	b.eq	136bc <xregcomp@@Base+0x14c>  // b.none
   13614:	cbnz	w0, 13630 <xregcomp@@Base+0xc0>
   13618:	ldr	x0, [x24, #32]
   1361c:	cbz	x0, 13630 <xregcomp@@Base+0xc0>
   13620:	mov	x0, x24
   13624:	bl	5340 <xre_compile_fastmap@plt>
   13628:	cmn	w0, #0x2
   1362c:	b.eq	136d8 <xregcomp@@Base+0x168>  // b.none
   13630:	mov	w0, w19
   13634:	ldp	x19, x20, [sp, #16]
   13638:	ldp	x21, x22, [sp, #32]
   1363c:	ldp	x23, x24, [sp, #48]
   13640:	ldp	x29, x30, [sp], #80
   13644:	ret
   13648:	and	x22, x22, #0xffffffffffffffbf
   1364c:	mov	w1, #0x1                   	// #1
   13650:	orr	x22, x22, #0x100
   13654:	b	135cc <xregcomp@@Base+0x5c>
   13658:	mov	x0, #0x100                 	// #256
   1365c:	bl	5710 <malloc@plt>
   13660:	str	x0, [x24, #40]
   13664:	mov	x20, x0
   13668:	cbz	x0, 136e8 <xregcomp@@Base+0x178>
   1366c:	mov	x19, #0x0                   	// #0
   13670:	str	x25, [sp, #64]
   13674:	bl	5590 <__ctype_b_loc@plt>
   13678:	mov	x25, x0
   1367c:	b	13684 <xregcomp@@Base+0x114>
   13680:	ldr	x20, [x24, #40]
   13684:	and	w4, w19, #0xff
   13688:	ldr	x5, [x25]
   1368c:	ldrh	w5, [x5, x19, lsl #1]
   13690:	tbz	w5, #8, 136a4 <xregcomp@@Base+0x134>
   13694:	bl	5650 <__ctype_tolower_loc@plt>
   13698:	ldr	x0, [x0]
   1369c:	ldr	w4, [x0, x19, lsl #2]
   136a0:	and	w4, w4, #0xff
   136a4:	strb	w4, [x20, x19]
   136a8:	add	x19, x19, #0x1
   136ac:	cmp	x19, #0x100
   136b0:	b.ne	13680 <xregcomp@@Base+0x110>  // b.any
   136b4:	ldr	x25, [sp, #64]
   136b8:	b	135c4 <xregcomp@@Base+0x54>
   136bc:	mov	w19, #0x8                   	// #8
   136c0:	mov	w0, w19
   136c4:	ldp	x19, x20, [sp, #16]
   136c8:	ldp	x21, x22, [sp, #32]
   136cc:	ldp	x23, x24, [sp, #48]
   136d0:	ldp	x29, x30, [sp], #80
   136d4:	ret
   136d8:	ldr	x0, [x24, #32]
   136dc:	bl	5440 <free@plt>
   136e0:	str	xzr, [x24, #32]
   136e4:	b	13630 <xregcomp@@Base+0xc0>
   136e8:	mov	w19, #0xc                   	// #12
   136ec:	b	13630 <xregcomp@@Base+0xc0>

00000000000136f0 <xregexec@@Base>:
   136f0:	stp	x29, x30, [sp, #-160]!
   136f4:	mov	x29, sp
   136f8:	stp	x19, x20, [sp, #16]
   136fc:	mov	x19, x0
   13700:	mov	x20, x3
   13704:	mov	x0, x1
   13708:	stp	x21, x22, [sp, #32]
   1370c:	mov	w22, w4
   13710:	mov	x21, x2
   13714:	stp	x23, x24, [sp, #48]
   13718:	mov	x24, x1
   1371c:	bl	5360 <strlen@plt>
   13720:	mov	x23, x0
   13724:	ldrb	w1, [x19, #56]
   13728:	and	w4, w22, #0x1
   1372c:	ubfx	x22, x22, #1, #1
   13730:	tst	x1, #0x10
   13734:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   13738:	b.ne	137ac <xregexec@@Base+0xbc>  // b.any
   1373c:	ldp	x0, x1, [x19, #48]
   13740:	stp	x0, x1, [sp, #144]
   13744:	mov	w2, w23
   13748:	ldrb	w6, [sp, #152]
   1374c:	mov	x1, x24
   13750:	ldp	x12, x13, [x19]
   13754:	mov	w0, #0x2                   	// #2
   13758:	bfi	w6, w4, #5, #1
   1375c:	mov	x5, #0x0                   	// #0
   13760:	ldp	x10, x11, [x19, #16]
   13764:	bfi	w6, w22, #6, #1
   13768:	ldp	x8, x9, [x19, #32]
   1376c:	bfi	w6, w0, #1, #2
   13770:	mov	w4, w23
   13774:	add	x0, sp, #0x60
   13778:	mov	w3, #0x0                   	// #0
   1377c:	stp	x12, x13, [sp, #96]
   13780:	stp	x10, x11, [sp, #112]
   13784:	stp	x8, x9, [sp, #128]
   13788:	strb	w6, [sp, #152]
   1378c:	bl	55c0 <xre_search@plt>
   13790:	mov	w19, w0
   13794:	lsr	w0, w19, #31
   13798:	ldp	x19, x20, [sp, #16]
   1379c:	ldp	x21, x22, [sp, #32]
   137a0:	ldp	x23, x24, [sp, #48]
   137a4:	ldp	x29, x30, [sp], #160
   137a8:	ret
   137ac:	ldp	x0, x1, [x19, #48]
   137b0:	stp	x0, x1, [sp, #144]
   137b4:	mov	w5, #0x2                   	// #2
   137b8:	ldrb	w1, [sp, #152]
   137bc:	lsl	x0, x21, #3
   137c0:	ldp	x2, x3, [x19]
   137c4:	stp	x2, x3, [sp, #96]
   137c8:	bfi	w1, w4, #5, #1
   137cc:	ldp	x2, x3, [x19, #16]
   137d0:	stp	x2, x3, [sp, #112]
   137d4:	bfi	w1, w22, #6, #1
   137d8:	ldp	x2, x3, [x19, #32]
   137dc:	bfi	w1, w5, #1, #2
   137e0:	str	w21, [sp, #72]
   137e4:	add	x22, sp, #0x60
   137e8:	stp	x2, x3, [sp, #128]
   137ec:	strb	w1, [sp, #152]
   137f0:	bl	5710 <malloc@plt>
   137f4:	str	x0, [sp, #80]
   137f8:	cbz	x0, 13868 <xregexec@@Base+0x178>
   137fc:	add	x6, x0, x21, lsl #2
   13800:	mov	x1, x24
   13804:	mov	x0, x22
   13808:	add	x5, sp, #0x48
   1380c:	mov	w4, w23
   13810:	mov	w2, w23
   13814:	mov	w3, #0x0                   	// #0
   13818:	str	x6, [sp, #88]
   1381c:	bl	55c0 <xre_search@plt>
   13820:	mov	w19, w0
   13824:	ldr	x0, [sp, #80]
   13828:	tbnz	w19, #31, 13860 <xregexec@@Base+0x170>
   1382c:	ldr	x6, [sp, #88]
   13830:	mov	w4, #0x0                   	// #0
   13834:	mov	x1, #0x0                   	// #0
   13838:	lsl	x2, x1, #3
   1383c:	ldr	w5, [x0, x1, lsl #2]
   13840:	add	x3, x20, x2
   13844:	add	w4, w4, #0x1
   13848:	str	w5, [x20, x2]
   1384c:	cmp	x21, w4, uxtw
   13850:	ldr	w2, [x6, x1, lsl #2]
   13854:	mov	w1, w4
   13858:	str	w2, [x3, #4]
   1385c:	b.hi	13838 <xregexec@@Base+0x148>  // b.pmore
   13860:	bl	5440 <free@plt>
   13864:	b	13794 <xregexec@@Base+0xa4>
   13868:	mov	w0, #0x1                   	// #1
   1386c:	b	13798 <xregexec@@Base+0xa8>

0000000000013870 <xregerror@@Base>:
   13870:	stp	x29, x30, [sp, #-48]!
   13874:	cmp	w0, #0x10
   13878:	mov	x29, sp
   1387c:	stp	x19, x20, [sp, #16]
   13880:	stp	x21, x22, [sp, #32]
   13884:	b.hi	13904 <xregerror@@Base+0x94>  // b.pmore
   13888:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
   1388c:	add	x1, x1, #0x900
   13890:	mov	x21, x2
   13894:	mov	x19, x3
   13898:	ldr	x22, [x1, w0, sxtw #3]
   1389c:	mov	x0, x22
   138a0:	bl	5360 <strlen@plt>
   138a4:	add	x20, x0, #0x1
   138a8:	cbz	x19, 138cc <xregerror@@Base+0x5c>
   138ac:	cmp	x20, x19
   138b0:	b.ls	138e0 <xregerror@@Base+0x70>  // b.plast
   138b4:	sub	x19, x19, #0x1
   138b8:	mov	x1, x22
   138bc:	mov	x2, x19
   138c0:	mov	x0, x21
   138c4:	bl	52b0 <memcpy@plt>
   138c8:	strb	wzr, [x21, x19]
   138cc:	mov	x0, x20
   138d0:	ldp	x19, x20, [sp, #16]
   138d4:	ldp	x21, x22, [sp, #32]
   138d8:	ldp	x29, x30, [sp], #48
   138dc:	ret
   138e0:	mov	x1, x22
   138e4:	mov	x2, x20
   138e8:	mov	x0, x21
   138ec:	bl	52b0 <memcpy@plt>
   138f0:	mov	x0, x20
   138f4:	ldp	x19, x20, [sp, #16]
   138f8:	ldp	x21, x22, [sp, #32]
   138fc:	ldp	x29, x30, [sp], #48
   13900:	ret
   13904:	bl	5740 <abort@plt>

0000000000013908 <xregfree@@Base>:
   13908:	stp	x29, x30, [sp, #-32]!
   1390c:	mov	x29, sp
   13910:	str	x19, [sp, #16]
   13914:	mov	x19, x0
   13918:	ldr	x0, [x0]
   1391c:	bl	5440 <free@plt>
   13920:	stp	xzr, xzr, [x19]
   13924:	ldr	x0, [x19, #32]
   13928:	str	xzr, [x19, #16]
   1392c:	bl	5440 <free@plt>
   13930:	str	xzr, [x19, #32]
   13934:	ldrb	w1, [x19, #56]
   13938:	ldr	x0, [x19, #40]
   1393c:	and	w1, w1, #0xfffffff7
   13940:	strb	w1, [x19, #56]
   13944:	bl	5440 <free@plt>
   13948:	str	xzr, [x19, #40]
   1394c:	ldr	x19, [sp, #16]
   13950:	ldp	x29, x30, [sp], #32
   13954:	ret

0000000000013958 <concat_length@@Base>:
   13958:	stp	x29, x30, [sp, #-272]!
   1395c:	mov	w8, #0xffffffc8            	// #-56
   13960:	mov	w9, #0xffffff80            	// #-128
   13964:	mov	x29, sp
   13968:	add	x10, sp, #0xd0
   1396c:	stp	x19, x20, [sp, #16]
   13970:	add	x20, sp, #0x110
   13974:	stp	x21, x22, [sp, #32]
   13978:	stp	x20, x20, [sp, #48]
   1397c:	str	x10, [sp, #64]
   13980:	stp	w8, w9, [sp, #72]
   13984:	str	q0, [sp, #80]
   13988:	str	q1, [sp, #96]
   1398c:	str	q2, [sp, #112]
   13990:	str	q3, [sp, #128]
   13994:	str	q4, [sp, #144]
   13998:	str	q5, [sp, #160]
   1399c:	str	q6, [sp, #176]
   139a0:	str	q7, [sp, #192]
   139a4:	stp	x1, x2, [sp, #216]
   139a8:	stp	x3, x4, [sp, #232]
   139ac:	stp	x5, x6, [sp, #248]
   139b0:	str	x7, [sp, #264]
   139b4:	cbz	x0, 13a14 <concat_length@@Base+0xbc>
   139b8:	mov	w19, w8
   139bc:	mov	x22, x20
   139c0:	mov	x21, #0x0                   	// #0
   139c4:	b	139d8 <concat_length@@Base+0x80>
   139c8:	mov	x0, x20
   139cc:	add	x20, x20, #0x8
   139d0:	ldr	x0, [x0]
   139d4:	cbz	x0, 13a00 <concat_length@@Base+0xa8>
   139d8:	bl	5360 <strlen@plt>
   139dc:	add	x21, x21, x0
   139e0:	add	w1, w19, #0x8
   139e4:	tbz	w19, #31, 139c8 <concat_length@@Base+0x70>
   139e8:	add	x0, x22, w19, sxtw
   139ec:	cmp	w1, #0x0
   139f0:	mov	w19, w1
   139f4:	b.gt	139c8 <concat_length@@Base+0x70>
   139f8:	ldr	x0, [x0]
   139fc:	cbnz	x0, 139d8 <concat_length@@Base+0x80>
   13a00:	mov	x0, x21
   13a04:	ldp	x19, x20, [sp, #16]
   13a08:	ldp	x21, x22, [sp, #32]
   13a0c:	ldp	x29, x30, [sp], #272
   13a10:	ret
   13a14:	mov	x21, #0x0                   	// #0
   13a18:	mov	x0, x21
   13a1c:	ldp	x19, x20, [sp, #16]
   13a20:	ldp	x21, x22, [sp, #32]
   13a24:	ldp	x29, x30, [sp], #272
   13a28:	ret
   13a2c:	nop

0000000000013a30 <concat_copy@@Base>:
   13a30:	stp	x29, x30, [sp, #-272]!
   13a34:	mov	w8, #0xffffffd0            	// #-48
   13a38:	mov	w9, #0xffffff80            	// #-128
   13a3c:	mov	x29, sp
   13a40:	add	x10, sp, #0xe0
   13a44:	stp	x19, x20, [sp, #16]
   13a48:	add	x20, sp, #0x110
   13a4c:	stp	x21, x22, [sp, #32]
   13a50:	stp	x23, x24, [sp, #48]
   13a54:	mov	x23, x0
   13a58:	stp	x20, x20, [sp, #64]
   13a5c:	str	x10, [sp, #80]
   13a60:	stp	w8, w9, [sp, #88]
   13a64:	str	q0, [sp, #96]
   13a68:	str	q1, [sp, #112]
   13a6c:	str	q2, [sp, #128]
   13a70:	str	q3, [sp, #144]
   13a74:	str	q4, [sp, #160]
   13a78:	str	q5, [sp, #176]
   13a7c:	str	q6, [sp, #192]
   13a80:	str	q7, [sp, #208]
   13a84:	stp	x2, x3, [sp, #224]
   13a88:	stp	x4, x5, [sp, #240]
   13a8c:	stp	x6, x7, [sp, #256]
   13a90:	cbz	x1, 13b10 <concat_copy@@Base+0xe0>
   13a94:	mov	x19, x1
   13a98:	mov	w21, w8
   13a9c:	mov	x24, x20
   13aa0:	mov	x22, x0
   13aa4:	b	13ab8 <concat_copy@@Base+0x88>
   13aa8:	mov	x0, x20
   13aac:	add	x20, x20, #0x8
   13ab0:	ldr	x19, [x0]
   13ab4:	cbz	x19, 13af4 <concat_copy@@Base+0xc4>
   13ab8:	mov	x0, x19
   13abc:	bl	5360 <strlen@plt>
   13ac0:	mov	x2, x0
   13ac4:	mov	x1, x19
   13ac8:	mov	x0, x22
   13acc:	add	x22, x22, x2
   13ad0:	bl	52b0 <memcpy@plt>
   13ad4:	add	w1, w21, #0x8
   13ad8:	tbz	w21, #31, 13aa8 <concat_copy@@Base+0x78>
   13adc:	add	x0, x24, w21, sxtw
   13ae0:	cmp	w1, #0x0
   13ae4:	mov	w21, w1
   13ae8:	b.gt	13aa8 <concat_copy@@Base+0x78>
   13aec:	ldr	x19, [x0]
   13af0:	cbnz	x19, 13ab8 <concat_copy@@Base+0x88>
   13af4:	strb	wzr, [x22]
   13af8:	mov	x0, x23
   13afc:	ldp	x19, x20, [sp, #16]
   13b00:	ldp	x21, x22, [sp, #32]
   13b04:	ldp	x23, x24, [sp, #48]
   13b08:	ldp	x29, x30, [sp], #272
   13b0c:	ret
   13b10:	mov	x22, x0
   13b14:	mov	x0, x23
   13b18:	strb	wzr, [x22]
   13b1c:	ldp	x19, x20, [sp, #16]
   13b20:	ldp	x21, x22, [sp, #32]
   13b24:	ldp	x23, x24, [sp, #48]
   13b28:	ldp	x29, x30, [sp], #272
   13b2c:	ret

0000000000013b30 <concat_copy2@@Base>:
   13b30:	stp	x29, x30, [sp, #-288]!
   13b34:	mov	w8, #0xffffffc8            	// #-56
   13b38:	mov	w10, #0xffffff80            	// #-128
   13b3c:	mov	x29, sp
   13b40:	stp	x21, x22, [sp, #32]
   13b44:	adrp	x22, 2a000 <xexit@@Base+0x14e10>
   13b48:	add	x11, sp, #0xe0
   13b4c:	ldr	x9, [x22, #3840]
   13b50:	stp	x19, x20, [sp, #16]
   13b54:	add	x20, sp, #0x120
   13b58:	stp	x23, x24, [sp, #48]
   13b5c:	mov	x19, x0
   13b60:	stp	x20, x20, [sp, #64]
   13b64:	str	x11, [sp, #80]
   13b68:	stp	w8, w10, [sp, #88]
   13b6c:	str	q0, [sp, #96]
   13b70:	str	q1, [sp, #112]
   13b74:	str	q2, [sp, #128]
   13b78:	str	q3, [sp, #144]
   13b7c:	str	q4, [sp, #160]
   13b80:	str	q5, [sp, #176]
   13b84:	str	q6, [sp, #192]
   13b88:	str	q7, [sp, #208]
   13b8c:	stp	x1, x2, [sp, #232]
   13b90:	stp	x3, x4, [sp, #248]
   13b94:	stp	x5, x6, [sp, #264]
   13b98:	str	x7, [sp, #280]
   13b9c:	ldr	x23, [x9]
   13ba0:	cbz	x0, 13bfc <concat_copy2@@Base+0xcc>
   13ba4:	mov	w21, w8
   13ba8:	mov	x24, x20
   13bac:	b	13bc0 <concat_copy2@@Base+0x90>
   13bb0:	mov	x0, x20
   13bb4:	add	x20, x20, #0x8
   13bb8:	ldr	x19, [x0]
   13bbc:	cbz	x19, 13bfc <concat_copy2@@Base+0xcc>
   13bc0:	mov	x0, x19
   13bc4:	bl	5360 <strlen@plt>
   13bc8:	mov	x2, x0
   13bcc:	mov	x1, x19
   13bd0:	mov	x0, x23
   13bd4:	add	x23, x23, x2
   13bd8:	bl	52b0 <memcpy@plt>
   13bdc:	add	w1, w21, #0x8
   13be0:	tbz	w21, #31, 13bb0 <concat_copy2@@Base+0x80>
   13be4:	add	x0, x24, w21, sxtw
   13be8:	cmp	w1, #0x0
   13bec:	mov	w21, w1
   13bf0:	b.gt	13bb0 <concat_copy2@@Base+0x80>
   13bf4:	ldr	x19, [x0]
   13bf8:	cbnz	x19, 13bc0 <concat_copy2@@Base+0x90>
   13bfc:	ldr	x22, [x22, #3840]
   13c00:	strb	wzr, [x23]
   13c04:	ldp	x19, x20, [sp, #16]
   13c08:	ldr	x0, [x22]
   13c0c:	ldp	x21, x22, [sp, #32]
   13c10:	ldp	x23, x24, [sp, #48]
   13c14:	ldp	x29, x30, [sp], #288
   13c18:	ret
   13c1c:	nop

0000000000013c20 <concat@@Base>:
   13c20:	stp	x29, x30, [sp, #-304]!
   13c24:	mov	x29, sp
   13c28:	stp	x19, x20, [sp, #16]
   13c2c:	mov	x19, x0
   13c30:	stp	x21, x22, [sp, #32]
   13c34:	add	x21, sp, #0x130
   13c38:	mov	w22, #0xffffffc8            	// #-56
   13c3c:	stp	x23, x24, [sp, #48]
   13c40:	add	x23, sp, #0xf0
   13c44:	str	x25, [sp, #64]
   13c48:	mov	w25, #0xffffff80            	// #-128
   13c4c:	stp	x21, x21, [sp, #80]
   13c50:	str	x23, [sp, #96]
   13c54:	str	w22, [sp, #104]
   13c58:	str	w25, [sp, #108]
   13c5c:	str	q0, [sp, #112]
   13c60:	str	q1, [sp, #128]
   13c64:	str	q2, [sp, #144]
   13c68:	str	q3, [sp, #160]
   13c6c:	str	q4, [sp, #176]
   13c70:	str	q5, [sp, #192]
   13c74:	str	q6, [sp, #208]
   13c78:	str	q7, [sp, #224]
   13c7c:	stp	x1, x2, [sp, #248]
   13c80:	stp	x3, x4, [sp, #264]
   13c84:	stp	x5, x6, [sp, #280]
   13c88:	str	x7, [sp, #296]
   13c8c:	cbz	x0, 13d78 <concat@@Base+0x158>
   13c90:	mov	w20, w22
   13c94:	mov	x24, x21
   13c98:	mov	x22, #0x0                   	// #0
   13c9c:	b	13cb0 <concat@@Base+0x90>
   13ca0:	mov	x0, x21
   13ca4:	add	x21, x21, #0x8
   13ca8:	ldr	x0, [x0]
   13cac:	cbz	x0, 13cd8 <concat@@Base+0xb8>
   13cb0:	bl	5360 <strlen@plt>
   13cb4:	add	x22, x22, x0
   13cb8:	add	w1, w20, #0x8
   13cbc:	tbz	w20, #31, 13ca0 <concat@@Base+0x80>
   13cc0:	add	x0, x24, w20, sxtw
   13cc4:	cmp	w1, #0x0
   13cc8:	mov	w20, w1
   13ccc:	b.gt	13ca0 <concat@@Base+0x80>
   13cd0:	ldr	x0, [x0]
   13cd4:	cbnz	x0, 13cb0 <concat@@Base+0x90>
   13cd8:	add	x0, x22, #0x1
   13cdc:	add	x22, sp, #0x130
   13ce0:	bl	5670 <xmalloc@plt>
   13ce4:	mov	x25, x22
   13ce8:	mov	w1, #0xffffffc8            	// #-56
   13cec:	mov	x24, x0
   13cf0:	mov	x20, x0
   13cf4:	mov	w21, w1
   13cf8:	mov	w0, #0xffffff80            	// #-128
   13cfc:	stp	x22, x22, [sp, #80]
   13d00:	str	x23, [sp, #96]
   13d04:	stp	w1, w0, [sp, #104]
   13d08:	b	13d1c <concat@@Base+0xfc>
   13d0c:	mov	x1, x22
   13d10:	add	x22, x22, #0x8
   13d14:	ldr	x19, [x1]
   13d18:	cbz	x19, 13d58 <concat@@Base+0x138>
   13d1c:	mov	x0, x19
   13d20:	bl	5360 <strlen@plt>
   13d24:	mov	x2, x0
   13d28:	mov	x1, x19
   13d2c:	mov	x0, x20
   13d30:	add	x20, x20, x2
   13d34:	bl	52b0 <memcpy@plt>
   13d38:	add	w0, w21, #0x8
   13d3c:	tbz	w21, #31, 13d0c <concat@@Base+0xec>
   13d40:	add	x1, x25, w21, sxtw
   13d44:	cmp	w0, #0x0
   13d48:	mov	w21, w0
   13d4c:	b.gt	13d0c <concat@@Base+0xec>
   13d50:	ldr	x19, [x1]
   13d54:	cbnz	x19, 13d1c <concat@@Base+0xfc>
   13d58:	strb	wzr, [x20]
   13d5c:	mov	x0, x24
   13d60:	ldp	x19, x20, [sp, #16]
   13d64:	ldp	x21, x22, [sp, #32]
   13d68:	ldp	x23, x24, [sp, #48]
   13d6c:	ldr	x25, [sp, #64]
   13d70:	ldp	x29, x30, [sp], #304
   13d74:	ret
   13d78:	mov	x0, #0x1                   	// #1
   13d7c:	bl	5670 <xmalloc@plt>
   13d80:	mov	x20, x0
   13d84:	add	x1, sp, #0x130
   13d88:	stp	x1, x1, [sp, #80]
   13d8c:	mov	x24, x0
   13d90:	mov	x0, x24
   13d94:	strb	wzr, [x20]
   13d98:	str	x23, [sp, #96]
   13d9c:	stp	w22, w25, [sp, #104]
   13da0:	ldp	x19, x20, [sp, #16]
   13da4:	ldp	x21, x22, [sp, #32]
   13da8:	ldp	x23, x24, [sp, #48]
   13dac:	ldr	x25, [sp, #64]
   13db0:	ldp	x29, x30, [sp], #304
   13db4:	ret

0000000000013db8 <reconcat@@Base>:
   13db8:	stp	x29, x30, [sp, #-288]!
   13dbc:	mov	x29, sp
   13dc0:	stp	x19, x20, [sp, #16]
   13dc4:	stp	x21, x22, [sp, #32]
   13dc8:	add	x21, sp, #0x120
   13dcc:	mov	x22, x0
   13dd0:	stp	x23, x24, [sp, #48]
   13dd4:	add	x24, sp, #0xf0
   13dd8:	mov	w23, #0xffffffd0            	// #-48
   13ddc:	stp	x25, x26, [sp, #64]
   13de0:	mov	w26, #0xffffff80            	// #-128
   13de4:	stp	x21, x21, [sp, #80]
   13de8:	str	x24, [sp, #96]
   13dec:	stp	w23, w26, [sp, #104]
   13df0:	str	q0, [sp, #112]
   13df4:	str	q1, [sp, #128]
   13df8:	str	q2, [sp, #144]
   13dfc:	str	q3, [sp, #160]
   13e00:	str	q4, [sp, #176]
   13e04:	str	q5, [sp, #192]
   13e08:	str	q6, [sp, #208]
   13e0c:	str	q7, [sp, #224]
   13e10:	stp	x2, x3, [sp, #240]
   13e14:	stp	x4, x5, [sp, #256]
   13e18:	stp	x6, x7, [sp, #272]
   13e1c:	cbz	x1, 13f1c <reconcat@@Base+0x164>
   13e20:	mov	w20, w23
   13e24:	mov	x19, x1
   13e28:	mov	x25, x21
   13e2c:	mov	x0, x1
   13e30:	mov	x23, #0x0                   	// #0
   13e34:	b	13e48 <reconcat@@Base+0x90>
   13e38:	mov	x0, x21
   13e3c:	add	x21, x21, #0x8
   13e40:	ldr	x0, [x0]
   13e44:	cbz	x0, 13e70 <reconcat@@Base+0xb8>
   13e48:	bl	5360 <strlen@plt>
   13e4c:	add	x23, x23, x0
   13e50:	add	w1, w20, #0x8
   13e54:	tbz	w20, #31, 13e38 <reconcat@@Base+0x80>
   13e58:	add	x0, x25, w20, sxtw
   13e5c:	cmp	w1, #0x0
   13e60:	mov	w20, w1
   13e64:	b.gt	13e38 <reconcat@@Base+0x80>
   13e68:	ldr	x0, [x0]
   13e6c:	cbnz	x0, 13e48 <reconcat@@Base+0x90>
   13e70:	add	x0, x23, #0x1
   13e74:	add	x23, sp, #0x120
   13e78:	bl	5670 <xmalloc@plt>
   13e7c:	mov	x26, x23
   13e80:	mov	w1, #0xffffffd0            	// #-48
   13e84:	mov	x25, x0
   13e88:	mov	x20, x0
   13e8c:	mov	w21, w1
   13e90:	mov	w0, #0xffffff80            	// #-128
   13e94:	stp	x23, x23, [sp, #80]
   13e98:	str	x24, [sp, #96]
   13e9c:	stp	w1, w0, [sp, #104]
   13ea0:	b	13eb4 <reconcat@@Base+0xfc>
   13ea4:	mov	x0, x23
   13ea8:	add	x23, x23, #0x8
   13eac:	ldr	x19, [x0]
   13eb0:	cbz	x19, 13ef0 <reconcat@@Base+0x138>
   13eb4:	mov	x0, x19
   13eb8:	bl	5360 <strlen@plt>
   13ebc:	mov	x2, x0
   13ec0:	mov	x1, x19
   13ec4:	mov	x0, x20
   13ec8:	add	x20, x20, x2
   13ecc:	bl	52b0 <memcpy@plt>
   13ed0:	add	w1, w21, #0x8
   13ed4:	tbz	w21, #31, 13ea4 <reconcat@@Base+0xec>
   13ed8:	add	x0, x26, w21, sxtw
   13edc:	cmp	w1, #0x0
   13ee0:	mov	w21, w1
   13ee4:	b.gt	13ea4 <reconcat@@Base+0xec>
   13ee8:	ldr	x19, [x0]
   13eec:	cbnz	x19, 13eb4 <reconcat@@Base+0xfc>
   13ef0:	strb	wzr, [x20]
   13ef4:	cbz	x22, 13f00 <reconcat@@Base+0x148>
   13ef8:	mov	x0, x22
   13efc:	bl	5440 <free@plt>
   13f00:	mov	x0, x25
   13f04:	ldp	x19, x20, [sp, #16]
   13f08:	ldp	x21, x22, [sp, #32]
   13f0c:	ldp	x23, x24, [sp, #48]
   13f10:	ldp	x25, x26, [sp, #64]
   13f14:	ldp	x29, x30, [sp], #288
   13f18:	ret
   13f1c:	mov	x0, #0x1                   	// #1
   13f20:	bl	5670 <xmalloc@plt>
   13f24:	add	x1, sp, #0x120
   13f28:	mov	x20, x0
   13f2c:	mov	x25, x0
   13f30:	stp	x1, x1, [sp, #80]
   13f34:	str	x24, [sp, #96]
   13f38:	stp	w23, w26, [sp, #104]
   13f3c:	b	13ef0 <reconcat@@Base+0x138>
   13f40:	cmp	x1, x0
   13f44:	cset	w0, eq  // eq = none
   13f48:	ret
   13f4c:	nop
   13f50:	asr	x1, x0, #32
   13f54:	mov	w3, #0x2785                	// #10117
   13f58:	mov	w5, #0xadcc                	// #44492
   13f5c:	movk	w3, #0x5c24, lsl #16
   13f60:	add	w3, w3, w0
   13f64:	sub	w0, w1, w0
   13f68:	movk	w5, #0xbdec, lsl #16
   13f6c:	mov	w4, #0x109a                	// #4250
   13f70:	add	w0, w0, w5
   13f74:	movk	w4, #0x2, lsl #16
   13f78:	mov	w2, #0x5234                	// #21044
   13f7c:	eor	w0, w0, w4
   13f80:	sub	w3, w3, w0
   13f84:	movk	w2, #0x4213, lsl #16
   13f88:	sub	w1, w2, w0
   13f8c:	eor	w2, w3, w0, lsl #8
   13f90:	sub	w1, w1, w2
   13f94:	sub	w0, w0, w2
   13f98:	eor	w1, w1, w2, lsr #13
   13f9c:	sub	w0, w0, w1
   13fa0:	sub	w2, w2, w1
   13fa4:	eor	w0, w0, w1, lsr #12
   13fa8:	sub	w2, w2, w0
   13fac:	sub	w1, w1, w0
   13fb0:	eor	w2, w2, w0, lsl #16
   13fb4:	sub	w1, w1, w2
   13fb8:	sub	w0, w0, w2
   13fbc:	eor	w1, w1, w2, lsr #5
   13fc0:	sub	w0, w0, w1
   13fc4:	sub	w2, w2, w1
   13fc8:	eor	w0, w0, w1, lsr #3
   13fcc:	sub	w2, w2, w0
   13fd0:	sub	w1, w1, w0
   13fd4:	eor	w0, w2, w0, lsl #10
   13fd8:	sub	w1, w1, w0
   13fdc:	eor	w0, w1, w0, lsr #15
   13fe0:	ret
   13fe4:	nop
   13fe8:	mov	x2, x0
   13fec:	adrp	x6, 16000 <xexit@@Base+0xe10>
   13ff0:	mov	w0, #0x1e                  	// #30
   13ff4:	add	x5, x6, #0x0
   13ff8:	mov	w3, #0x0                   	// #0
   13ffc:	b	1401c <reconcat@@Base+0x264>
   14000:	sub	w1, w0, w3
   14004:	add	w1, w3, w1, lsr #1
   14008:	ubfiz	x4, x1, #4, #32
   1400c:	ldr	w4, [x5, x4]
   14010:	cmp	x4, x2
   14014:	b.cc	1403c <reconcat@@Base+0x284>  // b.lo, b.ul, b.last
   14018:	mov	w0, w1
   1401c:	cmp	w0, w3
   14020:	b.ne	14000 <reconcat@@Base+0x248>  // b.any
   14024:	add	x6, x6, #0x0
   14028:	ubfiz	x1, x0, #4, #32
   1402c:	ldr	w1, [x6, x1]
   14030:	cmp	x1, x2
   14034:	b.cc	14044 <reconcat@@Base+0x28c>  // b.lo, b.ul, b.last
   14038:	ret
   1403c:	add	w3, w1, #0x1
   14040:	b	1401c <reconcat@@Base+0x264>
   14044:	stp	x29, x30, [sp, #-16]!
   14048:	adrp	x0, 2a000 <xexit@@Base+0x14e10>
   1404c:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   14050:	mov	x29, sp
   14054:	ldr	x0, [x0, #3968]
   14058:	add	x1, x1, #0xfd8
   1405c:	ldr	x0, [x0]
   14060:	bl	5370 <fprintf@plt>
   14064:	bl	5740 <abort@plt>
   14068:	stp	x29, x30, [sp, #-80]!
   1406c:	mov	x29, sp
   14070:	stp	x21, x22, [sp, #32]
   14074:	mov	x21, x0
   14078:	ldp	x1, x0, [x0, #40]
   1407c:	stp	x19, x20, [sp, #16]
   14080:	stp	x23, x24, [sp, #48]
   14084:	ldp	x20, x23, [x21, #24]
   14088:	sub	x1, x1, x0
   1408c:	str	x25, [sp, #64]
   14090:	lsl	x0, x1, #1
   14094:	ldr	w25, [x21, #104]
   14098:	cmp	x23, x1, lsl #1
   1409c:	add	x19, x20, x23, lsl #3
   140a0:	b.cc	141f8 <reconcat@@Base+0x440>  // b.lo, b.ul, b.last
   140a4:	lsl	x1, x1, #3
   140a8:	mov	x2, #0x20                  	// #32
   140ac:	cmp	x1, x2
   140b0:	csel	x1, x1, x2, cs  // cs = hs, nlast
   140b4:	cmp	x23, x1
   140b8:	b.hi	141f8 <reconcat@@Base+0x440>  // b.pmore
   140bc:	ldr	x3, [x21, #88]
   140c0:	cbz	x3, 14218 <reconcat@@Base+0x460>
   140c4:	ldr	x0, [x21, #80]
   140c8:	mov	x1, x23
   140cc:	mov	x2, #0x8                   	// #8
   140d0:	blr	x3
   140d4:	cbz	x0, 1422c <reconcat@@Base+0x474>
   140d8:	ldp	x1, x2, [x21, #40]
   140dc:	adrp	x24, 16000 <xexit@@Base+0xe10>
   140e0:	mov	x22, x20
   140e4:	add	x24, x24, #0x0
   140e8:	stp	x0, x23, [x21, #24]
   140ec:	str	xzr, [x21, #48]
   140f0:	sub	x0, x1, x2
   140f4:	str	x0, [x21, #40]
   140f8:	str	w25, [x21, #104]
   140fc:	nop
   14100:	ldr	x23, [x22]
   14104:	cmp	x23, #0x1
   14108:	b.ls	141bc <reconcat@@Base+0x404>  // b.plast
   1410c:	ldr	x1, [x21]
   14110:	mov	x0, x23
   14114:	blr	x1
   14118:	ldr	w1, [x21, #104]
   1411c:	ldr	x4, [x21, #24]
   14120:	lsl	x1, x1, #4
   14124:	add	x6, x24, x1
   14128:	ldr	w5, [x24, x1]
   1412c:	ldr	w1, [x6, #4]
   14130:	ldr	w7, [x6, #12]
   14134:	umull	x1, w0, w1
   14138:	lsr	x3, x1, #32
   1413c:	sub	w1, w0, w3
   14140:	add	w1, w3, w1, lsr #1
   14144:	lsr	w1, w1, w7
   14148:	msub	w1, w1, w5, w0
   1414c:	add	x3, x4, w1, uxtw #3
   14150:	ldr	x2, [x4, w1, uxtw #3]
   14154:	cbz	x2, 141b8 <reconcat@@Base+0x400>
   14158:	cmp	x2, #0x1
   1415c:	b.eq	14280 <reconcat@@Base+0x4c8>  // b.none
   14160:	ldr	w3, [x6, #8]
   14164:	add	w8, w0, #0x1
   14168:	sub	w6, w5, #0x2
   1416c:	ldr	x5, [x21, #32]
   14170:	umull	x3, w0, w3
   14174:	lsr	x3, x3, #32
   14178:	sub	w2, w0, w3
   1417c:	add	w2, w3, w2, lsr #1
   14180:	lsr	w2, w2, w7
   14184:	msub	w2, w2, w6, w8
   14188:	b	14194 <reconcat@@Base+0x3dc>
   1418c:	cmp	x0, #0x1
   14190:	b.eq	14280 <reconcat@@Base+0x4c8>  // b.none
   14194:	add	w3, w1, w2
   14198:	mov	x1, x3
   1419c:	cmp	x5, w3, uxtw
   141a0:	b.hi	141ac <reconcat@@Base+0x3f4>  // b.pmore
   141a4:	sub	w3, w3, w5
   141a8:	mov	x1, x3
   141ac:	ldr	x0, [x4, x3, lsl #3]
   141b0:	add	x3, x4, x3, lsl #3
   141b4:	cbnz	x0, 1418c <reconcat@@Base+0x3d4>
   141b8:	str	x23, [x3]
   141bc:	add	x22, x22, #0x8
   141c0:	cmp	x19, x22
   141c4:	b.hi	14100 <reconcat@@Base+0x348>  // b.pmore
   141c8:	ldr	x1, [x21, #72]
   141cc:	cbz	x1, 1424c <reconcat@@Base+0x494>
   141d0:	mov	x0, x20
   141d4:	mov	w19, #0x1                   	// #1
   141d8:	blr	x1
   141dc:	mov	w0, w19
   141e0:	ldp	x19, x20, [sp, #16]
   141e4:	ldp	x21, x22, [sp, #32]
   141e8:	ldp	x23, x24, [sp, #48]
   141ec:	ldr	x25, [sp, #64]
   141f0:	ldp	x29, x30, [sp], #80
   141f4:	ret
   141f8:	bl	13fe8 <reconcat@@Base+0x230>
   141fc:	mov	w25, w0
   14200:	ldr	x3, [x21, #88]
   14204:	ubfiz	x0, x25, #4, #32
   14208:	adrp	x1, 16000 <xexit@@Base+0xe10>
   1420c:	add	x1, x1, #0x0
   14210:	ldr	w23, [x1, x0]
   14214:	cbnz	x3, 140c4 <reconcat@@Base+0x30c>
   14218:	ldr	x2, [x21, #64]
   1421c:	mov	x0, x23
   14220:	mov	x1, #0x8                   	// #8
   14224:	blr	x2
   14228:	cbnz	x0, 140d8 <reconcat@@Base+0x320>
   1422c:	mov	w19, #0x0                   	// #0
   14230:	mov	w0, w19
   14234:	ldp	x19, x20, [sp, #16]
   14238:	ldp	x21, x22, [sp, #32]
   1423c:	ldp	x23, x24, [sp, #48]
   14240:	ldr	x25, [sp, #64]
   14244:	ldp	x29, x30, [sp], #80
   14248:	ret
   1424c:	ldr	x2, [x21, #96]
   14250:	mov	w19, #0x1                   	// #1
   14254:	cbz	x2, 141dc <reconcat@@Base+0x424>
   14258:	ldr	x0, [x21, #80]
   1425c:	mov	x1, x20
   14260:	blr	x2
   14264:	mov	w0, w19
   14268:	ldp	x19, x20, [sp, #16]
   1426c:	ldp	x21, x22, [sp, #32]
   14270:	ldp	x23, x24, [sp, #48]
   14274:	ldr	x25, [sp, #64]
   14278:	ldp	x29, x30, [sp], #80
   1427c:	ret
   14280:	bl	5740 <abort@plt>
   14284:	nop

0000000000014288 <htab_size@@Base>:
   14288:	ldr	x0, [x0, #32]
   1428c:	ret

0000000000014290 <htab_elements@@Base>:
   14290:	ldp	x1, x0, [x0, #40]
   14294:	sub	x0, x1, x0
   14298:	ret
   1429c:	nop

00000000000142a0 <htab_create_alloc_ex@@Base>:
   142a0:	stp	x29, x30, [sp, #-96]!
   142a4:	mov	x29, sp
   142a8:	stp	x19, x20, [sp, #16]
   142ac:	mov	x20, x4
   142b0:	stp	x21, x22, [sp, #32]
   142b4:	mov	x21, x5
   142b8:	stp	x23, x24, [sp, #48]
   142bc:	mov	x24, x3
   142c0:	mov	x23, x6
   142c4:	stp	x25, x26, [sp, #64]
   142c8:	mov	x26, x1
   142cc:	mov	x25, x2
   142d0:	str	x27, [sp, #80]
   142d4:	bl	13fe8 <reconcat@@Base+0x230>
   142d8:	mov	w22, w0
   142dc:	adrp	x3, 16000 <xexit@@Base+0xe10>
   142e0:	add	x3, x3, #0x0
   142e4:	mov	x0, x20
   142e8:	ubfiz	x4, x22, #4, #32
   142ec:	mov	x2, #0x70                  	// #112
   142f0:	mov	x1, #0x1                   	// #1
   142f4:	ldr	w27, [x3, x4]
   142f8:	blr	x21
   142fc:	cbz	x0, 14354 <htab_create_alloc_ex@@Base+0xb4>
   14300:	mov	x19, x0
   14304:	mov	x1, x27
   14308:	mov	x0, x20
   1430c:	mov	x2, #0x8                   	// #8
   14310:	blr	x21
   14314:	str	x0, [x19, #24]
   14318:	cbz	x0, 14378 <htab_create_alloc_ex@@Base+0xd8>
   1431c:	stp	x26, x25, [x19]
   14320:	str	x24, [x19, #16]
   14324:	str	x27, [x19, #32]
   14328:	stp	x20, x21, [x19, #80]
   1432c:	str	x23, [x19, #96]
   14330:	str	w22, [x19, #104]
   14334:	mov	x0, x19
   14338:	ldp	x19, x20, [sp, #16]
   1433c:	ldp	x21, x22, [sp, #32]
   14340:	ldp	x23, x24, [sp, #48]
   14344:	ldp	x25, x26, [sp, #64]
   14348:	ldr	x27, [sp, #80]
   1434c:	ldp	x29, x30, [sp], #96
   14350:	ret
   14354:	mov	x19, #0x0                   	// #0
   14358:	mov	x0, x19
   1435c:	ldp	x19, x20, [sp, #16]
   14360:	ldp	x21, x22, [sp, #32]
   14364:	ldp	x23, x24, [sp, #48]
   14368:	ldp	x25, x26, [sp, #64]
   1436c:	ldr	x27, [sp, #80]
   14370:	ldp	x29, x30, [sp], #96
   14374:	ret
   14378:	cbz	x23, 14354 <htab_create_alloc_ex@@Base+0xb4>
   1437c:	mov	x1, x19
   14380:	mov	x0, x20
   14384:	mov	x19, #0x0                   	// #0
   14388:	blr	x23
   1438c:	b	14334 <htab_create_alloc_ex@@Base+0x94>

0000000000014390 <htab_create_typed_alloc@@Base>:
   14390:	stp	x29, x30, [sp, #-80]!
   14394:	mov	x29, sp
   14398:	stp	x19, x20, [sp, #16]
   1439c:	mov	x19, x4
   143a0:	stp	x21, x22, [sp, #32]
   143a4:	mov	x21, x5
   143a8:	mov	x22, x6
   143ac:	stp	x23, x24, [sp, #48]
   143b0:	mov	x24, x2
   143b4:	mov	x23, x3
   143b8:	stp	x25, x26, [sp, #64]
   143bc:	mov	x25, x1
   143c0:	bl	13fe8 <reconcat@@Base+0x230>
   143c4:	mov	w20, w0
   143c8:	adrp	x2, 16000 <xexit@@Base+0xe10>
   143cc:	add	x2, x2, #0x0
   143d0:	mov	x1, #0x70                  	// #112
   143d4:	ubfiz	x3, x20, #4, #32
   143d8:	mov	x0, #0x1                   	// #1
   143dc:	ldr	w26, [x2, x3]
   143e0:	blr	x19
   143e4:	cbz	x0, 14430 <htab_create_typed_alloc@@Base+0xa0>
   143e8:	mov	x19, x0
   143ec:	mov	x1, #0x8                   	// #8
   143f0:	mov	x0, x26
   143f4:	blr	x21
   143f8:	str	x0, [x19, #24]
   143fc:	cbz	x0, 14450 <htab_create_typed_alloc@@Base+0xc0>
   14400:	stp	x25, x24, [x19]
   14404:	str	x23, [x19, #16]
   14408:	str	x26, [x19, #32]
   1440c:	stp	x21, x22, [x19, #64]
   14410:	str	w20, [x19, #104]
   14414:	mov	x0, x19
   14418:	ldp	x19, x20, [sp, #16]
   1441c:	ldp	x21, x22, [sp, #32]
   14420:	ldp	x23, x24, [sp, #48]
   14424:	ldp	x25, x26, [sp, #64]
   14428:	ldp	x29, x30, [sp], #80
   1442c:	ret
   14430:	mov	x19, #0x0                   	// #0
   14434:	mov	x0, x19
   14438:	ldp	x19, x20, [sp, #16]
   1443c:	ldp	x21, x22, [sp, #32]
   14440:	ldp	x23, x24, [sp, #48]
   14444:	ldp	x25, x26, [sp, #64]
   14448:	ldp	x29, x30, [sp], #80
   1444c:	ret
   14450:	cbz	x22, 14430 <htab_create_typed_alloc@@Base+0xa0>
   14454:	mov	x0, x19
   14458:	mov	x19, #0x0                   	// #0
   1445c:	blr	x22
   14460:	b	14414 <htab_create_typed_alloc@@Base+0x84>
   14464:	nop

0000000000014468 <htab_create_alloc@@Base>:
   14468:	mov	x6, x5
   1446c:	mov	x5, x4
   14470:	b	54b0 <htab_create_typed_alloc@plt>
   14474:	nop

0000000000014478 <htab_set_functions_ex@@Base>:
   14478:	stp	x1, x2, [x0]
   1447c:	str	x3, [x0, #16]
   14480:	stp	x4, x5, [x0, #80]
   14484:	str	x6, [x0, #96]
   14488:	ret
   1448c:	nop

0000000000014490 <htab_create@@Base>:
   14490:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
   14494:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
   14498:	ldr	x5, [x5, #3376]
   1449c:	ldr	x4, [x4, #3872]
   144a0:	b	53d0 <htab_create_alloc@plt>
   144a4:	nop

00000000000144a8 <htab_try_create@@Base>:
   144a8:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
   144ac:	adrp	x4, 2a000 <xexit@@Base+0x14e10>
   144b0:	ldr	x5, [x5, #3376]
   144b4:	ldr	x4, [x4, #3240]
   144b8:	b	53d0 <htab_create_alloc@plt>
   144bc:	nop

00000000000144c0 <htab_delete@@Base>:
   144c0:	stp	x29, x30, [sp, #-48]!
   144c4:	mov	x29, sp
   144c8:	stp	x19, x20, [sp, #16]
   144cc:	mov	x20, x0
   144d0:	ldr	x0, [x0, #16]
   144d4:	str	x21, [sp, #32]
   144d8:	ldr	x21, [x20, #24]
   144dc:	cbz	x0, 1450c <htab_delete@@Base+0x4c>
   144e0:	ldr	x19, [x20, #32]
   144e4:	subs	w19, w19, #0x1
   144e8:	b.mi	1450c <htab_delete@@Base+0x4c>  // b.first
   144ec:	sxtw	x19, w19
   144f0:	ldr	x0, [x21, x19, lsl #3]
   144f4:	sub	x19, x19, #0x1
   144f8:	cmp	x0, #0x1
   144fc:	b.ls	14508 <htab_delete@@Base+0x48>  // b.plast
   14500:	ldr	x1, [x20, #16]
   14504:	blr	x1
   14508:	tbz	w19, #31, 144f0 <htab_delete@@Base+0x30>
   1450c:	ldr	x1, [x20, #72]
   14510:	cbz	x1, 14538 <htab_delete@@Base+0x78>
   14514:	mov	x0, x21
   14518:	blr	x1
   1451c:	mov	x0, x20
   14520:	ldr	x21, [sp, #32]
   14524:	ldr	x1, [x20, #72]
   14528:	ldp	x19, x20, [sp, #16]
   1452c:	mov	x16, x1
   14530:	ldp	x29, x30, [sp], #48
   14534:	br	x16
   14538:	ldr	x2, [x20, #96]
   1453c:	cbz	x2, 1456c <htab_delete@@Base+0xac>
   14540:	ldr	x0, [x20, #80]
   14544:	mov	x1, x21
   14548:	blr	x2
   1454c:	mov	x1, x20
   14550:	ldr	x21, [sp, #32]
   14554:	ldr	x0, [x20, #80]
   14558:	ldr	x2, [x20, #96]
   1455c:	ldp	x19, x20, [sp, #16]
   14560:	mov	x16, x2
   14564:	ldp	x29, x30, [sp], #48
   14568:	br	x16
   1456c:	ldp	x19, x20, [sp, #16]
   14570:	ldr	x21, [sp, #32]
   14574:	ldp	x29, x30, [sp], #48
   14578:	ret
   1457c:	nop

0000000000014580 <htab_empty@@Base>:
   14580:	stp	x29, x30, [sp, #-48]!
   14584:	mov	x29, sp
   14588:	stp	x19, x20, [sp, #16]
   1458c:	mov	x20, x0
   14590:	ldr	x0, [x0, #16]
   14594:	stp	x21, x22, [sp, #32]
   14598:	ldp	x21, x22, [x20, #24]
   1459c:	cbz	x0, 145cc <htab_empty@@Base+0x4c>
   145a0:	subs	w19, w22, #0x1
   145a4:	b.mi	145cc <htab_empty@@Base+0x4c>  // b.first
   145a8:	sxtw	x19, w19
   145ac:	nop
   145b0:	ldr	x0, [x21, x19, lsl #3]
   145b4:	sub	x19, x19, #0x1
   145b8:	cmp	x0, #0x1
   145bc:	b.ls	145c8 <htab_empty@@Base+0x48>  // b.plast
   145c0:	ldr	x1, [x20, #16]
   145c4:	blr	x1
   145c8:	tbz	w19, #31, 145b0 <htab_empty@@Base+0x30>
   145cc:	cmp	x22, #0x20, lsl #12
   145d0:	b.ls	1463c <htab_empty@@Base+0xbc>  // b.plast
   145d4:	mov	x0, #0x80                  	// #128
   145d8:	bl	13fe8 <reconcat@@Base+0x230>
   145dc:	ldr	x2, [x20, #72]
   145e0:	mov	w19, w0
   145e4:	adrp	x1, 16000 <xexit@@Base+0xe10>
   145e8:	sbfiz	x0, x0, #4, #32
   145ec:	add	x1, x1, #0x0
   145f0:	ldr	w21, [x1, x0]
   145f4:	cbz	x2, 14660 <htab_empty@@Base+0xe0>
   145f8:	ldr	x0, [x20, #24]
   145fc:	blr	x2
   14600:	ldr	x3, [x20, #88]
   14604:	sxtw	x21, w21
   14608:	cbz	x3, 14680 <htab_empty@@Base+0x100>
   1460c:	ldr	x0, [x20, #80]
   14610:	mov	x1, x21
   14614:	mov	x2, #0x8                   	// #8
   14618:	blr	x3
   1461c:	str	x0, [x20, #24]
   14620:	str	x21, [x20, #32]
   14624:	str	w19, [x20, #104]
   14628:	ldp	x21, x22, [sp, #32]
   1462c:	stp	xzr, xzr, [x20, #40]
   14630:	ldp	x19, x20, [sp, #16]
   14634:	ldp	x29, x30, [sp], #48
   14638:	ret
   1463c:	lsl	x2, x22, #3
   14640:	mov	x0, x21
   14644:	mov	w1, #0x0                   	// #0
   14648:	bl	5450 <memset@plt>
   1464c:	ldp	x21, x22, [sp, #32]
   14650:	stp	xzr, xzr, [x20, #40]
   14654:	ldp	x19, x20, [sp, #16]
   14658:	ldp	x29, x30, [sp], #48
   1465c:	ret
   14660:	ldr	x2, [x20, #96]
   14664:	cbz	x2, 14600 <htab_empty@@Base+0x80>
   14668:	ldr	x1, [x20, #24]
   1466c:	sxtw	x21, w21
   14670:	ldr	x0, [x20, #80]
   14674:	blr	x2
   14678:	ldr	x3, [x20, #88]
   1467c:	cbnz	x3, 1460c <htab_empty@@Base+0x8c>
   14680:	ldr	x2, [x20, #64]
   14684:	mov	x0, x21
   14688:	mov	x1, #0x8                   	// #8
   1468c:	blr	x2
   14690:	str	x0, [x20, #24]
   14694:	b	14620 <htab_empty@@Base+0xa0>

0000000000014698 <htab_find_with_hash@@Base>:
   14698:	stp	x29, x30, [sp, #-80]!
   1469c:	mov	x29, sp
   146a0:	stp	x21, x22, [sp, #32]
   146a4:	mov	x21, x0
   146a8:	ldr	w0, [x0, #104]
   146ac:	stp	x25, x26, [sp, #64]
   146b0:	adrp	x26, 16000 <xexit@@Base+0xe10>
   146b4:	add	x25, x26, #0x0
   146b8:	lsl	x3, x0, #4
   146bc:	mov	w22, w2
   146c0:	add	x5, x25, x3
   146c4:	ldr	w2, [x21, #56]
   146c8:	stp	x19, x20, [sp, #16]
   146cc:	add	w2, w2, #0x1
   146d0:	str	w2, [x21, #56]
   146d4:	ldr	w2, [x25, x3]
   146d8:	ldr	w3, [x5, #4]
   146dc:	ldr	w5, [x5, #12]
   146e0:	ldr	x4, [x21, #24]
   146e4:	umull	x3, w22, w3
   146e8:	lsr	x3, x3, #32
   146ec:	sub	w19, w22, w3
   146f0:	add	w19, w3, w19, lsr #1
   146f4:	lsr	w19, w19, w5
   146f8:	msub	w19, w19, w2, w22
   146fc:	ldr	x20, [x4, w19, uxtw #3]
   14700:	cbz	x20, 147ec <htab_find_with_hash@@Base+0x154>
   14704:	stp	x23, x24, [sp, #48]
   14708:	cmp	x20, #0x1
   1470c:	mov	x24, x1
   14710:	ldr	x23, [x21, #32]
   14714:	b.eq	14740 <htab_find_with_hash@@Base+0xa8>  // b.none
   14718:	ldr	x2, [x21, #8]
   1471c:	mov	x0, x20
   14720:	blr	x2
   14724:	cbnz	w0, 14808 <htab_find_with_hash@@Base+0x170>
   14728:	ldr	w0, [x21, #104]
   1472c:	ldr	x4, [x21, #24]
   14730:	lsl	x1, x0, #4
   14734:	add	x3, x25, x1
   14738:	ldr	w2, [x25, x1]
   1473c:	ldr	w5, [x3, #12]
   14740:	add	x26, x26, #0x0
   14744:	sub	w1, w2, #0x2
   14748:	add	x0, x26, x0, lsl #4
   1474c:	add	w6, w22, #0x1
   14750:	ldr	w3, [x21, #60]
   14754:	ldr	w0, [x0, #8]
   14758:	umull	x2, w22, w0
   1475c:	lsr	x0, x2, #32
   14760:	sub	w2, w22, w0
   14764:	add	w2, w0, w2, lsr #1
   14768:	lsr	w2, w2, w5
   1476c:	msub	w22, w2, w1, w6
   14770:	add	w2, w19, w22
   14774:	add	w3, w3, #0x1
   14778:	str	w3, [x21, #60]
   1477c:	mov	x19, x2
   14780:	cmp	x23, w2, uxtw
   14784:	mov	x1, x24
   14788:	b.hi	14794 <htab_find_with_hash@@Base+0xfc>  // b.pmore
   1478c:	sub	w2, w2, w23
   14790:	mov	x19, x2
   14794:	ldr	x20, [x4, x2, lsl #3]
   14798:	cmp	x20, #0x1
   1479c:	mov	x0, x20
   147a0:	cbz	x20, 147e8 <htab_find_with_hash@@Base+0x150>
   147a4:	b.eq	14770 <htab_find_with_hash@@Base+0xd8>  // b.none
   147a8:	ldr	x2, [x21, #8]
   147ac:	blr	x2
   147b0:	cbnz	w0, 14808 <htab_find_with_hash@@Base+0x170>
   147b4:	ldr	w3, [x21, #60]
   147b8:	add	w2, w19, w22
   147bc:	mov	x19, x2
   147c0:	mov	x1, x24
   147c4:	add	w3, w3, #0x1
   147c8:	str	w3, [x21, #60]
   147cc:	cmp	x23, w2, uxtw
   147d0:	ldr	x4, [x21, #24]
   147d4:	b.ls	1478c <htab_find_with_hash@@Base+0xf4>  // b.plast
   147d8:	ldr	x20, [x4, x2, lsl #3]
   147dc:	cmp	x20, #0x1
   147e0:	mov	x0, x20
   147e4:	cbnz	x20, 147a4 <htab_find_with_hash@@Base+0x10c>
   147e8:	ldp	x23, x24, [sp, #48]
   147ec:	mov	x20, #0x0                   	// #0
   147f0:	mov	x0, x20
   147f4:	ldp	x19, x20, [sp, #16]
   147f8:	ldp	x21, x22, [sp, #32]
   147fc:	ldp	x25, x26, [sp, #64]
   14800:	ldp	x29, x30, [sp], #80
   14804:	ret
   14808:	mov	x0, x20
   1480c:	ldp	x19, x20, [sp, #16]
   14810:	ldp	x21, x22, [sp, #32]
   14814:	ldp	x23, x24, [sp, #48]
   14818:	ldp	x25, x26, [sp, #64]
   1481c:	ldp	x29, x30, [sp], #80
   14820:	ret
   14824:	nop

0000000000014828 <htab_find@@Base>:
   14828:	stp	x29, x30, [sp, #-32]!
   1482c:	mov	x29, sp
   14830:	stp	x19, x20, [sp, #16]
   14834:	mov	x19, x0
   14838:	mov	x20, x1
   1483c:	mov	x0, x1
   14840:	ldr	x1, [x19]
   14844:	blr	x1
   14848:	mov	w2, w0
   1484c:	mov	x1, x20
   14850:	mov	x0, x19
   14854:	ldp	x19, x20, [sp, #16]
   14858:	ldp	x29, x30, [sp], #32
   1485c:	b	5790 <htab_find_with_hash@plt>

0000000000014860 <htab_find_slot_with_hash@@Base>:
   14860:	stp	x29, x30, [sp, #-96]!
   14864:	cmp	w3, #0x1
   14868:	mov	x29, sp
   1486c:	stp	x21, x22, [sp, #32]
   14870:	mov	w22, w3
   14874:	mov	w21, w2
   14878:	stp	x23, x24, [sp, #48]
   1487c:	mov	x24, x0
   14880:	stp	x25, x26, [sp, #64]
   14884:	mov	x26, x1
   14888:	ldr	x25, [x0, #32]
   1488c:	b.eq	14a18 <htab_find_slot_with_hash@@Base+0x1b8>  // b.none
   14890:	stp	x19, x20, [sp, #16]
   14894:	stp	x27, x28, [sp, #80]
   14898:	ldr	w1, [x24, #104]
   1489c:	adrp	x20, 16000 <xexit@@Base+0xe10>
   148a0:	add	x27, x20, #0x0
   148a4:	ldr	x3, [x24, #24]
   148a8:	lsl	x2, x1, #4
   148ac:	add	x5, x27, x2
   148b0:	ldr	w0, [x24, #56]
   148b4:	ldr	w4, [x27, x2]
   148b8:	add	w0, w0, #0x1
   148bc:	ldr	w2, [x5, #4]
   148c0:	ldr	w5, [x5, #12]
   148c4:	str	w0, [x24, #56]
   148c8:	umull	x2, w21, w2
   148cc:	lsr	x2, x2, #32
   148d0:	sub	w19, w21, w2
   148d4:	add	w19, w2, w19, lsr #1
   148d8:	lsr	w19, w19, w5
   148dc:	msub	w19, w19, w4, w21
   148e0:	ubfiz	x28, x19, #3, #32
   148e4:	ldr	x0, [x3, w19, uxtw #3]
   148e8:	add	x23, x3, x28
   148ec:	cbz	x0, 14a90 <htab_find_slot_with_hash@@Base+0x230>
   148f0:	cmp	x0, #0x1
   148f4:	b.eq	14924 <htab_find_slot_with_hash@@Base+0xc4>  // b.none
   148f8:	ldr	x2, [x24, #8]
   148fc:	mov	x1, x26
   14900:	blr	x2
   14904:	cbnz	w0, 14a68 <htab_find_slot_with_hash@@Base+0x208>
   14908:	ldr	w1, [x24, #104]
   1490c:	mov	x23, #0x0                   	// #0
   14910:	ldr	x3, [x24, #24]
   14914:	lsl	x0, x1, #4
   14918:	add	x2, x27, x0
   1491c:	ldr	w4, [x27, x0]
   14920:	ldr	w5, [x2, #12]
   14924:	add	x20, x20, #0x0
   14928:	sub	w2, w4, #0x2
   1492c:	add	x1, x20, x1, lsl #4
   14930:	add	w6, w21, #0x1
   14934:	ldr	w4, [x24, #60]
   14938:	ldr	w0, [x1, #8]
   1493c:	umull	x0, w21, w0
   14940:	lsr	x0, x0, #32
   14944:	sub	w20, w21, w0
   14948:	add	w20, w0, w20, lsr #1
   1494c:	lsr	w20, w20, w5
   14950:	msub	w20, w20, w2, w6
   14954:	add	w2, w19, w20
   14958:	add	w4, w4, #0x1
   1495c:	str	w4, [x24, #60]
   14960:	mov	x19, x2
   14964:	cmp	x25, w2, uxtw
   14968:	mov	x1, x26
   1496c:	b.hi	14978 <htab_find_slot_with_hash@@Base+0x118>  // b.pmore
   14970:	sub	w2, w2, w25
   14974:	mov	x19, x2
   14978:	ldr	x0, [x3, x2, lsl #3]
   1497c:	lsl	x21, x2, #3
   14980:	add	x2, x3, x21
   14984:	cmp	x0, #0x1
   14988:	cbz	x0, 149d4 <htab_find_slot_with_hash@@Base+0x174>
   1498c:	b.eq	14a0c <htab_find_slot_with_hash@@Base+0x1ac>  // b.none
   14990:	ldr	x2, [x24, #8]
   14994:	blr	x2
   14998:	cbnz	w0, 14a40 <htab_find_slot_with_hash@@Base+0x1e0>
   1499c:	ldr	w4, [x24, #60]
   149a0:	add	w2, w19, w20
   149a4:	mov	x19, x2
   149a8:	mov	x1, x26
   149ac:	add	w4, w4, #0x1
   149b0:	str	w4, [x24, #60]
   149b4:	cmp	x25, w2, uxtw
   149b8:	ldr	x3, [x24, #24]
   149bc:	b.ls	14970 <htab_find_slot_with_hash@@Base+0x110>  // b.plast
   149c0:	ldr	x0, [x3, x2, lsl #3]
   149c4:	lsl	x21, x2, #3
   149c8:	add	x2, x3, x21
   149cc:	cmp	x0, #0x1
   149d0:	cbnz	x0, 1498c <htab_find_slot_with_hash@@Base+0x12c>
   149d4:	cbz	w22, 14ac0 <htab_find_slot_with_hash@@Base+0x260>
   149d8:	cbz	x23, 14ae4 <htab_find_slot_with_hash@@Base+0x284>
   149dc:	ldr	x0, [x24, #48]
   149e0:	ldp	x19, x20, [sp, #16]
   149e4:	sub	x0, x0, #0x1
   149e8:	ldp	x27, x28, [sp, #80]
   149ec:	str	x0, [x24, #48]
   149f0:	str	xzr, [x23]
   149f4:	mov	x0, x23
   149f8:	ldp	x21, x22, [sp, #32]
   149fc:	ldp	x23, x24, [sp, #48]
   14a00:	ldp	x25, x26, [sp, #64]
   14a04:	ldp	x29, x30, [sp], #96
   14a08:	ret
   14a0c:	cmp	x23, #0x0
   14a10:	csel	x23, x23, x2, ne  // ne = any
   14a14:	b	14954 <htab_find_slot_with_hash@@Base+0xf4>
   14a18:	ldr	x2, [x0, #40]
   14a1c:	add	x1, x25, x25, lsl #1
   14a20:	cmp	x1, x2, lsl #2
   14a24:	b.hi	14890 <htab_find_slot_with_hash@@Base+0x30>  // b.pmore
   14a28:	bl	14068 <reconcat@@Base+0x2b0>
   14a2c:	cbz	w0, 14ac8 <htab_find_slot_with_hash@@Base+0x268>
   14a30:	stp	x19, x20, [sp, #16]
   14a34:	stp	x27, x28, [sp, #80]
   14a38:	ldr	x25, [x24, #32]
   14a3c:	b	14898 <htab_find_slot_with_hash@@Base+0x38>
   14a40:	ldr	x23, [x24, #24]
   14a44:	ldp	x19, x20, [sp, #16]
   14a48:	add	x23, x23, x21
   14a4c:	mov	x0, x23
   14a50:	ldp	x21, x22, [sp, #32]
   14a54:	ldp	x23, x24, [sp, #48]
   14a58:	ldp	x25, x26, [sp, #64]
   14a5c:	ldp	x27, x28, [sp, #80]
   14a60:	ldp	x29, x30, [sp], #96
   14a64:	ret
   14a68:	ldr	x23, [x24, #24]
   14a6c:	ldp	x19, x20, [sp, #16]
   14a70:	add	x23, x23, x28
   14a74:	mov	x0, x23
   14a78:	ldp	x21, x22, [sp, #32]
   14a7c:	ldp	x23, x24, [sp, #48]
   14a80:	ldp	x25, x26, [sp, #64]
   14a84:	ldp	x27, x28, [sp, #80]
   14a88:	ldp	x29, x30, [sp], #96
   14a8c:	ret
   14a90:	cbz	w22, 14ac0 <htab_find_slot_with_hash@@Base+0x260>
   14a94:	ldr	x0, [x24, #40]
   14a98:	ldp	x19, x20, [sp, #16]
   14a9c:	add	x0, x0, #0x1
   14aa0:	ldp	x27, x28, [sp, #80]
   14aa4:	str	x0, [x24, #40]
   14aa8:	mov	x0, x23
   14aac:	ldp	x21, x22, [sp, #32]
   14ab0:	ldp	x23, x24, [sp, #48]
   14ab4:	ldp	x25, x26, [sp, #64]
   14ab8:	ldp	x29, x30, [sp], #96
   14abc:	ret
   14ac0:	ldp	x19, x20, [sp, #16]
   14ac4:	ldp	x27, x28, [sp, #80]
   14ac8:	mov	x23, #0x0                   	// #0
   14acc:	mov	x0, x23
   14ad0:	ldp	x21, x22, [sp, #32]
   14ad4:	ldp	x23, x24, [sp, #48]
   14ad8:	ldp	x25, x26, [sp, #64]
   14adc:	ldp	x29, x30, [sp], #96
   14ae0:	ret
   14ae4:	mov	x23, x2
   14ae8:	b	14a94 <htab_find_slot_with_hash@@Base+0x234>
   14aec:	nop

0000000000014af0 <htab_find_slot@@Base>:
   14af0:	stp	x29, x30, [sp, #-48]!
   14af4:	mov	x29, sp
   14af8:	stp	x19, x20, [sp, #16]
   14afc:	mov	x19, x0
   14b00:	mov	x20, x1
   14b04:	mov	x0, x1
   14b08:	ldr	x1, [x19]
   14b0c:	str	x21, [sp, #32]
   14b10:	mov	w21, w2
   14b14:	blr	x1
   14b18:	mov	w2, w0
   14b1c:	mov	w3, w21
   14b20:	mov	x1, x20
   14b24:	mov	x0, x19
   14b28:	ldp	x19, x20, [sp, #16]
   14b2c:	ldr	x21, [sp, #32]
   14b30:	ldp	x29, x30, [sp], #48
   14b34:	b	54a0 <htab_find_slot_with_hash@plt>

0000000000014b38 <htab_remove_elt_with_hash@@Base>:
   14b38:	stp	x29, x30, [sp, #-32]!
   14b3c:	mov	w3, #0x0                   	// #0
   14b40:	mov	x29, sp
   14b44:	stp	x19, x20, [sp, #16]
   14b48:	mov	x19, x0
   14b4c:	bl	54a0 <htab_find_slot_with_hash@plt>
   14b50:	cbz	x0, 14b7c <htab_remove_elt_with_hash@@Base+0x44>
   14b54:	ldr	x1, [x19, #16]
   14b58:	mov	x20, x0
   14b5c:	cbz	x1, 14b68 <htab_remove_elt_with_hash@@Base+0x30>
   14b60:	ldr	x0, [x0]
   14b64:	blr	x1
   14b68:	ldr	x0, [x19, #48]
   14b6c:	mov	x1, #0x1                   	// #1
   14b70:	str	x1, [x20]
   14b74:	add	x0, x0, x1
   14b78:	str	x0, [x19, #48]
   14b7c:	ldp	x19, x20, [sp, #16]
   14b80:	ldp	x29, x30, [sp], #32
   14b84:	ret

0000000000014b88 <htab_remove_elt@@Base>:
   14b88:	stp	x29, x30, [sp, #-32]!
   14b8c:	mov	x29, sp
   14b90:	stp	x19, x20, [sp, #16]
   14b94:	mov	x19, x0
   14b98:	mov	x20, x1
   14b9c:	mov	x0, x1
   14ba0:	ldr	x1, [x19]
   14ba4:	blr	x1
   14ba8:	mov	w2, w0
   14bac:	mov	x1, x20
   14bb0:	mov	x0, x19
   14bb4:	ldp	x19, x20, [sp, #16]
   14bb8:	ldp	x29, x30, [sp], #32
   14bbc:	b	55f0 <htab_remove_elt_with_hash@plt>

0000000000014bc0 <htab_clear_slot@@Base>:
   14bc0:	stp	x29, x30, [sp, #-32]!
   14bc4:	mov	x29, sp
   14bc8:	stp	x19, x20, [sp, #16]
   14bcc:	mov	x20, x1
   14bd0:	ldr	x1, [x0, #24]
   14bd4:	cmp	x1, x20
   14bd8:	b.hi	14c28 <htab_clear_slot@@Base+0x68>  // b.pmore
   14bdc:	mov	x19, x0
   14be0:	ldr	x0, [x0, #32]
   14be4:	add	x0, x1, x0, lsl #3
   14be8:	cmp	x20, x0
   14bec:	b.cs	14c28 <htab_clear_slot@@Base+0x68>  // b.hs, b.nlast
   14bf0:	ldr	x0, [x20]
   14bf4:	cmp	x0, #0x1
   14bf8:	b.ls	14c28 <htab_clear_slot@@Base+0x68>  // b.plast
   14bfc:	ldr	x1, [x19, #16]
   14c00:	cbz	x1, 14c08 <htab_clear_slot@@Base+0x48>
   14c04:	blr	x1
   14c08:	ldr	x0, [x19, #48]
   14c0c:	mov	x1, #0x1                   	// #1
   14c10:	str	x1, [x20]
   14c14:	add	x0, x0, x1
   14c18:	str	x0, [x19, #48]
   14c1c:	ldp	x19, x20, [sp, #16]
   14c20:	ldp	x29, x30, [sp], #32
   14c24:	ret
   14c28:	bl	5740 <abort@plt>
   14c2c:	nop

0000000000014c30 <htab_traverse_noresize@@Base>:
   14c30:	stp	x29, x30, [sp, #-48]!
   14c34:	mov	x29, sp
   14c38:	stp	x19, x20, [sp, #16]
   14c3c:	mov	x20, x2
   14c40:	stp	x21, x22, [sp, #32]
   14c44:	mov	x22, x1
   14c48:	ldp	x19, x21, [x0, #24]
   14c4c:	add	x21, x19, x21, lsl #3
   14c50:	ldr	x3, [x19]
   14c54:	mov	x0, x19
   14c58:	mov	x1, x20
   14c5c:	add	x19, x19, #0x8
   14c60:	cmp	x3, #0x1
   14c64:	b.ls	14c70 <htab_traverse_noresize@@Base+0x40>  // b.plast
   14c68:	blr	x22
   14c6c:	cbz	w0, 14c78 <htab_traverse_noresize@@Base+0x48>
   14c70:	cmp	x21, x19
   14c74:	b.hi	14c50 <htab_traverse_noresize@@Base+0x20>  // b.pmore
   14c78:	ldp	x19, x20, [sp, #16]
   14c7c:	ldp	x21, x22, [sp, #32]
   14c80:	ldp	x29, x30, [sp], #48
   14c84:	ret

0000000000014c88 <htab_traverse@@Base>:
   14c88:	stp	x29, x30, [sp, #-48]!
   14c8c:	mov	x5, #0x20                  	// #32
   14c90:	mov	x29, sp
   14c94:	ldp	x4, x3, [x0, #32]
   14c98:	ldr	x6, [x0, #48]
   14c9c:	str	x19, [sp, #16]
   14ca0:	mov	x19, x0
   14ca4:	sub	x3, x3, x6
   14ca8:	lsl	x3, x3, #3
   14cac:	cmp	x3, x5
   14cb0:	csel	x3, x3, x5, cs  // cs = hs, nlast
   14cb4:	cmp	x4, x3
   14cb8:	b.hi	14ccc <htab_traverse@@Base+0x44>  // b.pmore
   14cbc:	mov	x0, x19
   14cc0:	ldr	x19, [sp, #16]
   14cc4:	ldp	x29, x30, [sp], #48
   14cc8:	b	5660 <htab_traverse_noresize@plt>
   14ccc:	stp	x1, x2, [sp, #32]
   14cd0:	bl	14068 <reconcat@@Base+0x2b0>
   14cd4:	mov	x0, x19
   14cd8:	ldr	x19, [sp, #16]
   14cdc:	ldp	x1, x2, [sp, #32]
   14ce0:	ldp	x29, x30, [sp], #48
   14ce4:	b	5660 <htab_traverse_noresize@plt>

0000000000014ce8 <htab_collisions@@Base>:
   14ce8:	ldr	w1, [x0, #56]
   14cec:	movi	d0, #0x0
   14cf0:	cbz	w1, 14d04 <htab_collisions@@Base+0x1c>
   14cf4:	ldr	w0, [x0, #60]
   14cf8:	ucvtf	d1, w1
   14cfc:	ucvtf	d0, w0
   14d00:	fdiv	d0, d0, d1
   14d04:	ret

0000000000014d08 <htab_hash_string@@Base>:
   14d08:	mov	x2, x0
   14d0c:	mov	w0, #0x0                   	// #0
   14d10:	ldrb	w1, [x2], #1
   14d14:	cbz	w1, 14d30 <htab_hash_string@@Base+0x28>
   14d18:	mov	w3, #0x43                  	// #67
   14d1c:	nop
   14d20:	madd	w0, w0, w3, w1
   14d24:	ldrb	w1, [x2], #1
   14d28:	sub	w0, w0, #0x71
   14d2c:	cbnz	w1, 14d20 <htab_hash_string@@Base+0x18>
   14d30:	ret
   14d34:	nop

0000000000014d38 <iterative_hash@@Base>:
   14d38:	mov	w8, #0x79b9                	// #31161
   14d3c:	mov	w5, w1
   14d40:	movk	w8, #0x9e37, lsl #16
   14d44:	tst	x0, #0x3
   14d48:	mov	w7, w8
   14d4c:	b.eq	14f78 <iterative_hash@@Base+0x240>  // b.none
   14d50:	cmp	w1, #0xb
   14d54:	b.ls	14e3c <iterative_hash@@Base+0x104>  // b.plast
   14d58:	ldrb	w3, [x0, #10]
   14d5c:	sub	w5, w5, #0xc
   14d60:	ldrb	w10, [x0, #6]
   14d64:	cmp	w5, #0xb
   14d68:	ldrb	w4, [x0, #5]
   14d6c:	ldrb	w9, [x0, #7]
   14d70:	lsl	w6, w3, #16
   14d74:	ldrb	w13, [x0, #4]
   14d78:	lsl	w10, w10, #16
   14d7c:	ldrb	w3, [x0, #9]
   14d80:	add	w4, w10, w4, lsl #8
   14d84:	ldrb	w11, [x0, #11]
   14d88:	ldrb	w12, [x0, #8]
   14d8c:	add	w9, w13, w9, lsl #24
   14d90:	ldrb	w10, [x0, #2]
   14d94:	add	w3, w6, w3, lsl #8
   14d98:	add	w4, w4, w9
   14d9c:	ldrb	w6, [x0, #1]
   14da0:	ldrb	w9, [x0, #3]
   14da4:	add	w11, w12, w11, lsl #24
   14da8:	ldrb	w12, [x0], #12
   14dac:	add	w3, w3, w11
   14db0:	lsl	w10, w10, #16
   14db4:	add	w2, w3, w2
   14db8:	add	w4, w4, w8
   14dbc:	add	w6, w10, w6, lsl #8
   14dc0:	add	w3, w12, w9, lsl #24
   14dc4:	add	w8, w4, w2
   14dc8:	add	w6, w6, w3
   14dcc:	sub	w3, w4, w2
   14dd0:	sub	w4, w6, w8
   14dd4:	add	w4, w4, w7
   14dd8:	eor	w4, w4, w2, lsr #13
   14ddc:	sub	w3, w3, w4
   14de0:	sub	w2, w2, w4
   14de4:	eor	w3, w3, w4, lsl #8
   14de8:	sub	w2, w2, w3
   14dec:	sub	w4, w4, w3
   14df0:	eor	w2, w2, w3, lsr #13
   14df4:	sub	w4, w4, w2
   14df8:	sub	w3, w3, w2
   14dfc:	eor	w4, w4, w2, lsr #12
   14e00:	sub	w3, w3, w4
   14e04:	sub	w2, w2, w4
   14e08:	eor	w3, w3, w4, lsl #16
   14e0c:	sub	w2, w2, w3
   14e10:	sub	w4, w4, w3
   14e14:	eor	w2, w2, w3, lsr #5
   14e18:	sub	w4, w4, w2
   14e1c:	sub	w3, w3, w2
   14e20:	eor	w7, w4, w2, lsr #3
   14e24:	sub	w3, w3, w7
   14e28:	sub	w2, w2, w7
   14e2c:	eor	w8, w3, w7, lsl #10
   14e30:	sub	w2, w2, w8
   14e34:	eor	w2, w2, w8, lsr #15
   14e38:	b.hi	14d58 <iterative_hash@@Base+0x20>  // b.pmore
   14e3c:	add	w2, w2, w1
   14e40:	cmp	w5, #0x6
   14e44:	b.eq	14e88 <iterative_hash@@Base+0x150>  // b.none
   14e48:	b.ls	14e94 <iterative_hash@@Base+0x15c>  // b.plast
   14e4c:	cmp	w5, #0x9
   14e50:	b.eq	14e70 <iterative_hash@@Base+0x138>  // b.none
   14e54:	b.ls	14f5c <iterative_hash@@Base+0x224>  // b.plast
   14e58:	cmp	w5, #0xa
   14e5c:	b.eq	14e68 <iterative_hash@@Base+0x130>  // b.none
   14e60:	ldrb	w1, [x0, #10]
   14e64:	add	w2, w2, w1, lsl #24
   14e68:	ldrb	w1, [x0, #9]
   14e6c:	add	w2, w2, w1, lsl #16
   14e70:	ldrb	w1, [x0, #8]
   14e74:	add	w2, w2, w1, lsl #8
   14e78:	ldrb	w1, [x0, #7]
   14e7c:	add	w8, w8, w1, lsl #24
   14e80:	ldrb	w1, [x0, #6]
   14e84:	add	w8, w8, w1, lsl #16
   14e88:	ldrb	w1, [x0, #5]
   14e8c:	add	w8, w8, w1, lsl #8
   14e90:	b	14eb0 <iterative_hash@@Base+0x178>
   14e94:	cmp	w5, #0x3
   14e98:	b.eq	14ec0 <iterative_hash@@Base+0x188>  // b.none
   14e9c:	b.ls	14f48 <iterative_hash@@Base+0x210>  // b.plast
   14ea0:	cmp	w5, #0x4
   14ea4:	b.eq	14eb8 <iterative_hash@@Base+0x180>  // b.none
   14ea8:	cmp	w5, #0x5
   14eac:	b.ne	14ed8 <iterative_hash@@Base+0x1a0>  // b.any
   14eb0:	ldrb	w1, [x0, #4]
   14eb4:	add	w8, w8, w1
   14eb8:	ldrb	w1, [x0, #3]
   14ebc:	add	w7, w7, w1, lsl #24
   14ec0:	ldrb	w1, [x0, #2]
   14ec4:	add	w7, w7, w1, lsl #16
   14ec8:	ldrb	w1, [x0, #1]
   14ecc:	add	w7, w7, w1, lsl #8
   14ed0:	ldrb	w0, [x0]
   14ed4:	add	w7, w7, w0
   14ed8:	add	w4, w8, w2
   14edc:	sub	w3, w8, w2
   14ee0:	sub	w4, w7, w4
   14ee4:	eor	w7, w4, w2, lsr #13
   14ee8:	sub	w3, w3, w7
   14eec:	sub	w2, w2, w7
   14ef0:	eor	w3, w3, w7, lsl #8
   14ef4:	sub	w2, w2, w3
   14ef8:	sub	w0, w7, w3
   14efc:	eor	w2, w2, w3, lsr #13
   14f00:	sub	w0, w0, w2
   14f04:	sub	w1, w3, w2
   14f08:	eor	w0, w0, w2, lsr #12
   14f0c:	sub	w1, w1, w0
   14f10:	sub	w2, w2, w0
   14f14:	eor	w1, w1, w0, lsl #16
   14f18:	sub	w2, w2, w1
   14f1c:	sub	w0, w0, w1
   14f20:	eor	w2, w2, w1, lsr #5
   14f24:	sub	w0, w0, w2
   14f28:	sub	w1, w1, w2
   14f2c:	eor	w0, w0, w2, lsr #3
   14f30:	sub	w1, w1, w0
   14f34:	sub	w2, w2, w0
   14f38:	eor	w0, w1, w0, lsl #10
   14f3c:	sub	w2, w2, w0
   14f40:	eor	w0, w2, w0, lsr #15
   14f44:	ret
   14f48:	cmp	w5, #0x1
   14f4c:	b.eq	14ed0 <iterative_hash@@Base+0x198>  // b.none
   14f50:	cmp	w5, #0x2
   14f54:	b.eq	14ec8 <iterative_hash@@Base+0x190>  // b.none
   14f58:	b	14ed8 <iterative_hash@@Base+0x1a0>
   14f5c:	cmp	w5, #0x7
   14f60:	b.eq	14e80 <iterative_hash@@Base+0x148>  // b.none
   14f64:	cmp	w5, #0x8
   14f68:	b.ne	14ed8 <iterative_hash@@Base+0x1a0>  // b.any
   14f6c:	ldrb	w1, [x0, #7]
   14f70:	add	w8, w8, w1, lsl #24
   14f74:	b	14e80 <iterative_hash@@Base+0x148>
   14f78:	cmp	w1, #0xb
   14f7c:	b.ls	14e3c <iterative_hash@@Base+0x104>  // b.plast
   14f80:	ldp	w4, w3, [x0]
   14f84:	sub	w5, w5, #0xc
   14f88:	ldr	w6, [x0, #8]
   14f8c:	cmp	w5, #0xb
   14f90:	add	w3, w8, w3
   14f94:	add	w4, w7, w4
   14f98:	add	w2, w2, w6
   14f9c:	add	x0, x0, #0xc
   14fa0:	add	w6, w3, w2
   14fa4:	sub	w3, w3, w2
   14fa8:	sub	w4, w4, w6
   14fac:	eor	w4, w4, w2, lsr #13
   14fb0:	sub	w3, w3, w4
   14fb4:	sub	w2, w2, w4
   14fb8:	eor	w3, w3, w4, lsl #8
   14fbc:	sub	w2, w2, w3
   14fc0:	sub	w4, w4, w3
   14fc4:	eor	w2, w2, w3, lsr #13
   14fc8:	sub	w4, w4, w2
   14fcc:	sub	w3, w3, w2
   14fd0:	eor	w4, w4, w2, lsr #12
   14fd4:	sub	w3, w3, w4
   14fd8:	sub	w2, w2, w4
   14fdc:	eor	w3, w3, w4, lsl #16
   14fe0:	sub	w2, w2, w3
   14fe4:	sub	w4, w4, w3
   14fe8:	eor	w2, w2, w3, lsr #5
   14fec:	sub	w4, w4, w2
   14ff0:	sub	w3, w3, w2
   14ff4:	eor	w7, w4, w2, lsr #3
   14ff8:	sub	w3, w3, w7
   14ffc:	sub	w2, w2, w7
   15000:	eor	w8, w3, w7, lsl #10
   15004:	sub	w2, w2, w8
   15008:	eor	w2, w2, w8, lsr #15
   1500c:	b.hi	14f80 <iterative_hash@@Base+0x248>  // b.pmore
   15010:	b	14e3c <iterative_hash@@Base+0x104>
   15014:	nop

0000000000015018 <xmalloc_set_program_name@@Base>:
   15018:	stp	x29, x30, [sp, #-32]!
   1501c:	adrp	x2, 2b000 <xexit@@Base+0x15e10>
   15020:	mov	x29, sp
   15024:	str	x19, [sp, #16]
   15028:	adrp	x19, 2b000 <xexit@@Base+0x15e10>
   1502c:	str	x0, [x2, #1512]
   15030:	ldr	x1, [x19, #1856]
   15034:	cbz	x1, 15044 <xmalloc_set_program_name@@Base+0x2c>
   15038:	ldr	x19, [sp, #16]
   1503c:	ldp	x29, x30, [sp], #32
   15040:	ret
   15044:	mov	x0, #0x0                   	// #0
   15048:	bl	55e0 <sbrk@plt>
   1504c:	str	x0, [x19, #1856]
   15050:	ldr	x19, [sp, #16]
   15054:	ldp	x29, x30, [sp], #32
   15058:	ret
   1505c:	nop

0000000000015060 <xmalloc_failed@@Base>:
   15060:	stp	x29, x30, [sp, #-32]!
   15064:	adrp	x1, 2b000 <xexit@@Base+0x15e10>
   15068:	mov	x29, sp
   1506c:	stp	x19, x20, [sp, #16]
   15070:	mov	x19, x0
   15074:	mov	x0, #0x0                   	// #0
   15078:	ldr	x20, [x1, #1856]
   1507c:	cbz	x20, 150d0 <xmalloc_failed@@Base+0x70>
   15080:	bl	55e0 <sbrk@plt>
   15084:	sub	x5, x0, x20
   15088:	adrp	x0, 2b000 <xexit@@Base+0x15e10>
   1508c:	adrp	x6, 2a000 <xexit@@Base+0x14e10>
   15090:	adrp	x1, 15000 <iterative_hash@@Base+0x2c8>
   15094:	adrp	x3, 16000 <xexit@@Base+0xe10>
   15098:	ldr	x2, [x0, #1512]
   1509c:	add	x1, x1, #0xe10
   150a0:	ldr	x6, [x6, #3968]
   150a4:	add	x3, x3, #0x1e0
   150a8:	ldrb	w7, [x2]
   150ac:	mov	x4, x19
   150b0:	ldr	x0, [x6]
   150b4:	cmp	w7, #0x0
   150b8:	csel	x3, x3, x1, ne  // ne = any
   150bc:	adrp	x1, 16000 <xexit@@Base+0xe10>
   150c0:	add	x1, x1, #0x1e8
   150c4:	bl	5370 <fprintf@plt>
   150c8:	mov	w0, #0x1                   	// #1
   150cc:	bl	5730 <xexit@plt>
   150d0:	bl	55e0 <sbrk@plt>
   150d4:	adrp	x5, 2a000 <xexit@@Base+0x14e10>
   150d8:	ldr	x5, [x5, #4000]
   150dc:	sub	x5, x0, x5
   150e0:	b	15088 <xmalloc_failed@@Base+0x28>
   150e4:	nop

00000000000150e8 <xmalloc@@Base>:
   150e8:	stp	x29, x30, [sp, #-32]!
   150ec:	cmp	x0, #0x0
   150f0:	mov	x29, sp
   150f4:	str	x19, [sp, #16]
   150f8:	csinc	x19, x0, xzr, ne  // ne = any
   150fc:	mov	x0, x19
   15100:	bl	5710 <malloc@plt>
   15104:	cbz	x0, 15114 <xmalloc@@Base+0x2c>
   15108:	ldr	x19, [sp, #16]
   1510c:	ldp	x29, x30, [sp], #32
   15110:	ret
   15114:	mov	x0, x19
   15118:	bl	5520 <xmalloc_failed@plt>
   1511c:	nop

0000000000015120 <xcalloc@@Base>:
   15120:	stp	x29, x30, [sp, #-32]!
   15124:	cmp	x0, #0x0
   15128:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1512c:	mov	x29, sp
   15130:	stp	x19, x20, [sp, #16]
   15134:	b.ne	1515c <xcalloc@@Base+0x3c>  // b.any
   15138:	mov	x19, #0x1                   	// #1
   1513c:	mov	x20, x19
   15140:	mov	x1, x19
   15144:	mov	x0, x20
   15148:	bl	5300 <calloc@plt>
   1514c:	cbz	x0, 15168 <xcalloc@@Base+0x48>
   15150:	ldp	x19, x20, [sp, #16]
   15154:	ldp	x29, x30, [sp], #32
   15158:	ret
   1515c:	mov	x20, x0
   15160:	mov	x19, x1
   15164:	b	15140 <xcalloc@@Base+0x20>
   15168:	mul	x0, x20, x19
   1516c:	bl	5520 <xmalloc_failed@plt>

0000000000015170 <xrealloc@@Base>:
   15170:	stp	x29, x30, [sp, #-32]!
   15174:	cmp	x1, #0x0
   15178:	mov	x29, sp
   1517c:	str	x19, [sp, #16]
   15180:	csinc	x19, x1, xzr, ne  // ne = any
   15184:	cbz	x0, 151a0 <xrealloc@@Base+0x30>
   15188:	mov	x1, x19
   1518c:	bl	5470 <realloc@plt>
   15190:	cbz	x0, 151ac <xrealloc@@Base+0x3c>
   15194:	ldr	x19, [sp, #16]
   15198:	ldp	x29, x30, [sp], #32
   1519c:	ret
   151a0:	mov	x0, x19
   151a4:	bl	5710 <malloc@plt>
   151a8:	b	15190 <xrealloc@@Base+0x20>
   151ac:	mov	x0, x19
   151b0:	bl	5520 <xmalloc_failed@plt>
   151b4:	nop

00000000000151b8 <xstrdup@@Base>:
   151b8:	stp	x29, x30, [sp, #-32]!
   151bc:	mov	x29, sp
   151c0:	stp	x19, x20, [sp, #16]
   151c4:	mov	x20, x0
   151c8:	bl	5360 <strlen@plt>
   151cc:	add	x19, x0, #0x1
   151d0:	mov	x0, x19
   151d4:	bl	5670 <xmalloc@plt>
   151d8:	mov	x2, x19
   151dc:	mov	x1, x20
   151e0:	ldp	x19, x20, [sp, #16]
   151e4:	ldp	x29, x30, [sp], #32
   151e8:	b	52b0 <memcpy@plt>
   151ec:	nop

00000000000151f0 <xexit@@Base>:
   151f0:	stp	x29, x30, [sp, #-32]!
   151f4:	adrp	x1, 2a000 <xexit@@Base+0x14e10>
   151f8:	mov	x29, sp
   151fc:	ldr	x1, [x1, #3168]
   15200:	str	x19, [sp, #16]
   15204:	mov	w19, w0
   15208:	ldr	x0, [x1]
   1520c:	cbz	x0, 15214 <xexit@@Base+0x24>
   15210:	blr	x0
   15214:	mov	w0, w19
   15218:	bl	57c0 <exit@plt>

Disassembly of section .fini:

000000000001521c <.fini>:
   1521c:	stp	x29, x30, [sp, #-16]!
   15220:	mov	x29, sp
   15224:	ldp	x29, x30, [sp], #16
   15228:	ret
