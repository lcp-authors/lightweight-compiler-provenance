
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//FastCalc.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000c08 <.init>:
 c08:	stp	x29, x30, [sp, #-16]!
 c0c:	mov	x29, sp
 c10:	bl	e00 <Perl_av_extend@plt+0x10>
 c14:	ldp	x29, x30, [sp], #16
 c18:	ret

Disassembly of section .plt:

0000000000000c20 <Perl_sv_2iv_flags@plt-0x20>:
 c20:	stp	x16, x30, [sp, #-16]!
 c24:	adrp	x16, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1018c>
 c28:	ldr	x17, [x16, #4088]
 c2c:	add	x16, x16, #0xff8
 c30:	br	x17
 c34:	nop
 c38:	nop
 c3c:	nop

0000000000000c40 <Perl_sv_2iv_flags@plt>:
 c40:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c44:	ldr	x17, [x16]
 c48:	add	x16, x16, #0x0
 c4c:	br	x17

0000000000000c50 <Perl_sv_setnv@plt>:
 c50:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c54:	ldr	x17, [x16, #8]
 c58:	add	x16, x16, #0x8
 c5c:	br	x17

0000000000000c60 <Perl_newRV_noinc@plt>:
 c60:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c64:	ldr	x17, [x16, #16]
 c68:	add	x16, x16, #0x10
 c6c:	br	x17

0000000000000c70 <Perl_sv_2uv_flags@plt>:
 c70:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c74:	ldr	x17, [x16, #24]
 c78:	add	x16, x16, #0x18
 c7c:	br	x17

0000000000000c80 <__cxa_finalize@plt>:
 c80:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c84:	ldr	x17, [x16, #32]
 c88:	add	x16, x16, #0x20
 c8c:	br	x17

0000000000000c90 <Perl_av_len@plt>:
 c90:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c94:	ldr	x17, [x16, #40]
 c98:	add	x16, x16, #0x28
 c9c:	br	x17

0000000000000ca0 <Perl_av_store@plt>:
 ca0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 ca4:	ldr	x17, [x16, #48]
 ca8:	add	x16, x16, #0x30
 cac:	br	x17

0000000000000cb0 <Perl_newSVnv@plt>:
 cb0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 cb4:	ldr	x17, [x16, #56]
 cb8:	add	x16, x16, #0x38
 cbc:	br	x17

0000000000000cc0 <Perl_sv_2pv_flags@plt>:
 cc0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 cc4:	ldr	x17, [x16, #64]
 cc8:	add	x16, x16, #0x40
 ccc:	br	x17

0000000000000cd0 <Perl_xs_boot_epilog@plt>:
 cd0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 cd4:	ldr	x17, [x16, #72]
 cd8:	add	x16, x16, #0x48
 cdc:	br	x17

0000000000000ce0 <__stack_chk_fail@plt>:
 ce0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 ce4:	ldr	x17, [x16, #80]
 ce8:	add	x16, x16, #0x50
 cec:	br	x17

0000000000000cf0 <__gmon_start__@plt>:
 cf0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 cf4:	ldr	x17, [x16, #88]
 cf8:	add	x16, x16, #0x58
 cfc:	br	x17

0000000000000d00 <Perl_croak_xs_usage@plt>:
 d00:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d04:	ldr	x17, [x16, #96]
 d08:	add	x16, x16, #0x60
 d0c:	br	x17

0000000000000d10 <Perl_sv_2nv_flags@plt>:
 d10:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d14:	ldr	x17, [x16, #104]
 d18:	add	x16, x16, #0x68
 d1c:	br	x17

0000000000000d20 <Perl_av_push@plt>:
 d20:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d24:	ldr	x17, [x16, #112]
 d28:	add	x16, x16, #0x70
 d2c:	br	x17

0000000000000d30 <Perl_av_pop@plt>:
 d30:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d34:	ldr	x17, [x16, #120]
 d38:	add	x16, x16, #0x78
 d3c:	br	x17

0000000000000d40 <Perl_croak_nocontext@plt>:
 d40:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d44:	ldr	x17, [x16, #128]
 d48:	add	x16, x16, #0x80
 d4c:	br	x17

0000000000000d50 <Perl_newXS_deffile@plt>:
 d50:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d54:	ldr	x17, [x16, #136]
 d58:	add	x16, x16, #0x88
 d5c:	br	x17

0000000000000d60 <Perl_sv_2mortal@plt>:
 d60:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d64:	ldr	x17, [x16, #144]
 d68:	add	x16, x16, #0x90
 d6c:	br	x17

0000000000000d70 <Perl_newSVuv@plt>:
 d70:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d74:	ldr	x17, [x16, #152]
 d78:	add	x16, x16, #0x98
 d7c:	br	x17

0000000000000d80 <Perl_xs_handshake@plt>:
 d80:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d84:	ldr	x17, [x16, #160]
 d88:	add	x16, x16, #0xa0
 d8c:	br	x17

0000000000000d90 <Perl_av_fetch@plt>:
 d90:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d94:	ldr	x17, [x16, #168]
 d98:	add	x16, x16, #0xa8
 d9c:	br	x17

0000000000000da0 <Perl_newRV@plt>:
 da0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 da4:	ldr	x17, [x16, #176]
 da8:	add	x16, x16, #0xb0
 dac:	br	x17

0000000000000db0 <Perl_newSV_type@plt>:
 db0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 db4:	ldr	x17, [x16, #184]
 db8:	add	x16, x16, #0xb8
 dbc:	br	x17

0000000000000dc0 <Perl_newSViv@plt>:
 dc0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 dc4:	ldr	x17, [x16, #192]
 dc8:	add	x16, x16, #0xc0
 dcc:	br	x17

0000000000000dd0 <Perl_sv_setiv@plt>:
 dd0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 dd4:	ldr	x17, [x16, #200]
 dd8:	add	x16, x16, #0xc8
 ddc:	br	x17

0000000000000de0 <Perl_newSVpvn@plt>:
 de0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 de4:	ldr	x17, [x16, #208]
 de8:	add	x16, x16, #0xd0
 dec:	br	x17

0000000000000df0 <Perl_av_extend@plt>:
 df0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 df4:	ldr	x17, [x16, #216]
 df8:	add	x16, x16, #0xd8
 dfc:	br	x17

Disassembly of section .text:

0000000000000e00 <boot_Math__BigInt__FastCalc@@Base-0x1074>:
     e00:	adrp	x0, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1018c>
     e04:	ldr	x0, [x0, #4048]
     e08:	cbz	x0, e10 <Perl_av_extend@plt+0x20>
     e0c:	b	cf0 <__gmon_start__@plt>
     e10:	ret
     e14:	adrp	x0, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1118c>
     e18:	add	x0, x0, #0xe8
     e1c:	adrp	x1, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1118c>
     e20:	add	x1, x1, #0xe8
     e24:	cmp	x1, x0
     e28:	b.eq	e40 <Perl_av_extend@plt+0x50>  // b.none
     e2c:	adrp	x1, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1018c>
     e30:	ldr	x1, [x1, #4032]
     e34:	cbz	x1, e40 <Perl_av_extend@plt+0x50>
     e38:	mov	x16, x1
     e3c:	br	x16
     e40:	ret
     e44:	adrp	x0, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1118c>
     e48:	add	x0, x0, #0xe8
     e4c:	adrp	x1, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1118c>
     e50:	add	x1, x1, #0xe8
     e54:	sub	x1, x1, x0
     e58:	mov	x2, #0x2                   	// #2
     e5c:	asr	x1, x1, #3
     e60:	sdiv	x1, x1, x2
     e64:	cbz	x1, e7c <Perl_av_extend@plt+0x8c>
     e68:	adrp	x2, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1018c>
     e6c:	ldr	x2, [x2, #4064]
     e70:	cbz	x2, e7c <Perl_av_extend@plt+0x8c>
     e74:	mov	x16, x2
     e78:	br	x16
     e7c:	ret
     e80:	adrp	x0, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1118c>
     e84:	ldrb	w1, [x0, #232]
     e88:	cbnz	w1, ecc <Perl_av_extend@plt+0xdc>
     e8c:	stp	x29, x30, [sp, #-32]!
     e90:	mov	x29, sp
     e94:	str	x19, [sp, #16]
     e98:	mov	x19, x0
     e9c:	adrp	x0, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1018c>
     ea0:	ldr	x0, [x0, #4040]
     ea4:	cbz	x0, eb4 <Perl_av_extend@plt+0xc4>
     ea8:	adrp	x0, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1118c>
     eac:	ldr	x0, [x0, #224]
     eb0:	bl	c80 <__cxa_finalize@plt>
     eb4:	bl	e14 <Perl_av_extend@plt+0x24>
     eb8:	mov	w0, #0x1                   	// #1
     ebc:	strb	w0, [x19, #232]
     ec0:	ldr	x19, [sp, #16]
     ec4:	ldp	x29, x30, [sp], #32
     ec8:	ret
     ecc:	ret
     ed0:	b	e44 <Perl_av_extend@plt+0x54>
     ed4:	stp	x29, x30, [sp, #-64]!
     ed8:	mov	x2, x1
     edc:	mov	x29, sp
     ee0:	stp	x19, x20, [sp, #16]
     ee4:	stp	x21, x22, [sp, #32]
     ee8:	str	x23, [sp, #48]
     eec:	ldr	x1, [x0, #120]
     ef0:	ldr	x21, [x0]
     ef4:	sub	x3, x1, #0x4
     ef8:	str	x3, [x0, #120]
     efc:	ldr	x3, [x0, #24]
     f00:	ldr	w1, [x1]
     f04:	ldr	x4, [x2]
     f08:	add	w20, w1, #0x1
     f0c:	add	x1, x3, w1, sxtw #3
     f10:	sub	x1, x21, x1
     f14:	ldr	w22, [x4, #40]
     f18:	asr	x21, x1, #3
     f1c:	cmp	w21, #0x2
     f20:	b.eq	f34 <Perl_av_extend@plt+0x144>  // b.none
     f24:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
     f28:	mov	x0, x2
     f2c:	add	x1, x1, #0x188
     f30:	bl	d00 <Perl_croak_xs_usage@plt>
     f34:	sxtw	x20, w20
     f38:	mov	x19, x0
     f3c:	add	x20, x20, #0x1
     f40:	lsl	x20, x20, #3
     f44:	ldr	x1, [x3, x20]
     f48:	sub	x20, x20, #0x8
     f4c:	ldr	x23, [x1, #16]
     f50:	mov	x1, x23
     f54:	bl	c90 <Perl_av_len@plt>
     f58:	cbz	x0, f88 <Perl_av_extend@plt+0x198>
     f5c:	ldr	x0, [x19, #24]
     f60:	add	x1, x19, #0x168
     f64:	str	x1, [x0, x20]
     f68:	ldr	x0, [x19, #24]
     f6c:	add	x20, x0, x20
     f70:	str	x20, [x19]
     f74:	ldp	x19, x20, [sp, #16]
     f78:	ldp	x21, x22, [sp, #32]
     f7c:	ldr	x23, [sp, #48]
     f80:	ldp	x29, x30, [sp], #64
     f84:	ret
     f88:	mov	x1, x23
     f8c:	mov	x0, x19
     f90:	mov	w3, #0x0                   	// #0
     f94:	mov	x2, #0x0                   	// #0
     f98:	bl	d90 <Perl_av_fetch@plt>
     f9c:	ldr	x1, [x0]
     fa0:	ldr	w0, [x1, #12]
     fa4:	and	w0, w0, #0x3fff00
     fa8:	and	w0, w0, #0xffe001ff
     fac:	cmp	w0, #0x100
     fb0:	b.ne	fd8 <Perl_av_extend@plt+0x1e8>  // b.any
     fb4:	ldr	x0, [x1]
     fb8:	ldr	x0, [x0, #32]
     fbc:	add	x1, x19, #0x168
     fc0:	add	x2, x19, #0x138
     fc4:	cmp	x0, w22, sxtw
     fc8:	csel	x0, x1, x2, ne  // ne = any
     fcc:	ldr	x1, [x19, #24]
     fd0:	str	x0, [x1, x20]
     fd4:	b	f68 <Perl_av_extend@plt+0x178>
     fd8:	mov	w2, w21
     fdc:	mov	x0, x19
     fe0:	bl	c40 <Perl_sv_2iv_flags@plt>
     fe4:	b	fbc <Perl_av_extend@plt+0x1cc>
     fe8:	stp	x29, x30, [sp, #-48]!
     fec:	mov	x2, x1
     ff0:	mov	x29, sp
     ff4:	stp	x19, x20, [sp, #16]
     ff8:	stp	x21, x22, [sp, #32]
     ffc:	ldr	x1, [x0, #120]
    1000:	ldr	x21, [x0]
    1004:	sub	x3, x1, #0x4
    1008:	str	x3, [x0, #120]
    100c:	ldr	x3, [x0, #24]
    1010:	ldr	w1, [x1]
    1014:	ldr	x4, [x2]
    1018:	add	w20, w1, #0x1
    101c:	add	x1, x3, w1, sxtw #3
    1020:	sub	x21, x21, x1
    1024:	ldr	w22, [x4, #40]
    1028:	asr	x21, x21, #3
    102c:	cmp	w21, #0x2
    1030:	b.eq	1044 <Perl_av_extend@plt+0x254>  // b.none
    1034:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1038:	mov	x0, x2
    103c:	add	x1, x1, #0x188
    1040:	bl	d00 <Perl_croak_xs_usage@plt>
    1044:	sxtw	x20, w20
    1048:	mov	x19, x0
    104c:	add	x20, x20, #0x1
    1050:	mov	x2, #0x0                   	// #0
    1054:	lsl	x20, x20, #3
    1058:	ldr	x1, [x3, x20]
    105c:	mov	w3, #0x0                   	// #0
    1060:	ldr	x1, [x1, #16]
    1064:	bl	d90 <Perl_av_fetch@plt>
    1068:	ldr	x1, [x0]
    106c:	ldr	w0, [x1, #12]
    1070:	and	w0, w0, #0x3fff00
    1074:	and	w0, w0, #0xffe001ff
    1078:	cmp	w0, #0x100
    107c:	b.ne	10cc <Perl_av_extend@plt+0x2dc>  // b.any
    1080:	ldr	x0, [x1]
    1084:	ldr	x0, [x0, #32]
    1088:	and	x0, x0, #0x1
    108c:	ldr	x21, [x19, #24]
    1090:	cmp	x0, w22, sxtw
    1094:	add	x2, x19, #0x168
    1098:	sub	x20, x20, #0x8
    109c:	add	x1, x19, #0x138
    10a0:	mov	x0, x19
    10a4:	csel	x1, x2, x1, ne  // ne = any
    10a8:	bl	d60 <Perl_sv_2mortal@plt>
    10ac:	str	x0, [x21, x20]
    10b0:	ldr	x0, [x19, #24]
    10b4:	add	x20, x0, x20
    10b8:	str	x20, [x19]
    10bc:	ldp	x19, x20, [sp, #16]
    10c0:	ldp	x21, x22, [sp, #32]
    10c4:	ldp	x29, x30, [sp], #48
    10c8:	ret
    10cc:	mov	w2, w21
    10d0:	mov	x0, x19
    10d4:	bl	c40 <Perl_sv_2iv_flags@plt>
    10d8:	b	1088 <Perl_av_extend@plt+0x298>
    10dc:	stp	x29, x30, [sp, #-128]!
    10e0:	mov	x5, x1
    10e4:	mov	x29, sp
    10e8:	stp	x21, x22, [sp, #32]
    10ec:	adrp	x22, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1018c>
    10f0:	ldr	x1, [x22, #4056]
    10f4:	stp	x19, x20, [sp, #16]
    10f8:	stp	x23, x24, [sp, #48]
    10fc:	stp	x25, x26, [sp, #64]
    1100:	str	x27, [sp, #80]
    1104:	str	d8, [sp, #88]
    1108:	ldr	x2, [x1]
    110c:	str	x2, [sp, #120]
    1110:	mov	x2, #0x0                   	// #0
    1114:	ldr	x1, [x0, #120]
    1118:	ldr	x3, [x0]
    111c:	sub	x2, x1, #0x4
    1120:	str	x2, [x0, #120]
    1124:	ldr	x2, [x0, #24]
    1128:	ldr	w4, [x1]
    112c:	add	w20, w4, #0x1
    1130:	add	x4, x2, w4, sxtw #3
    1134:	sub	x3, x3, x4
    1138:	asr	x3, x3, #3
    113c:	cmp	w3, #0x3
    1140:	b.eq	1154 <Perl_av_extend@plt+0x364>  // b.none
    1144:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1148:	mov	x0, x5
    114c:	add	x1, x1, #0x191
    1150:	bl	d00 <Perl_croak_xs_usage@plt>
    1154:	sxtw	x20, w20
    1158:	mov	x19, x0
    115c:	add	x20, x20, #0x1
    1160:	lsl	x20, x20, #3
    1164:	ldr	x1, [x2, x20]
    1168:	add	x2, x2, x20
    116c:	sub	x20, x20, #0x8
    1170:	ldr	x24, [x1, #16]
    1174:	ldr	x1, [x2, #8]
    1178:	ldr	x25, [x1, #16]
    117c:	mov	x1, x24
    1180:	bl	c90 <Perl_av_len@plt>
    1184:	mov	x21, x0
    1188:	mov	x1, x25
    118c:	mov	x0, x19
    1190:	bl	c90 <Perl_av_len@plt>
    1194:	sub	x0, x21, x0
    1198:	cmp	x0, #0x0
    119c:	b.le	11e4 <Perl_av_extend@plt+0x3f4>
    11a0:	mov	x1, #0x1                   	// #1
    11a4:	mov	x0, x19
    11a8:	bl	dc0 <Perl_newSViv@plt>
    11ac:	ldr	x21, [x19, #24]
    11b0:	mov	x1, x0
    11b4:	mov	x0, x19
    11b8:	bl	d60 <Perl_sv_2mortal@plt>
    11bc:	ldr	x22, [x22, #4056]
    11c0:	str	x0, [x21, x20]
    11c4:	ldr	x0, [x19, #24]
    11c8:	add	x20, x0, x20
    11cc:	str	x20, [x19]
    11d0:	ldr	x1, [sp, #120]
    11d4:	ldr	x0, [x22]
    11d8:	eor	x0, x1, x0
    11dc:	cbz	x0, 136c <Perl_av_extend@plt+0x57c>
    11e0:	bl	ce0 <__stack_chk_fail@plt>
    11e4:	b.eq	11f0 <Perl_av_extend@plt+0x400>  // b.none
    11e8:	mov	x1, #0xffffffffffffffff    	// #-1
    11ec:	b	11a4 <Perl_av_extend@plt+0x3b4>
    11f0:	mov	x2, x21
    11f4:	mov	x1, x24
    11f8:	mov	w3, #0x0                   	// #0
    11fc:	mov	x0, x19
    1200:	bl	d90 <Perl_av_fetch@plt>
    1204:	ldr	x27, [x0]
    1208:	mov	x1, x25
    120c:	mov	x2, x21
    1210:	mov	x0, x19
    1214:	mov	w3, #0x0                   	// #0
    1218:	bl	d90 <Perl_av_fetch@plt>
    121c:	ldr	w1, [x27, #12]
    1220:	ldr	x26, [x0]
    1224:	mov	w0, #0x400                 	// #1024
    1228:	movk	w0, #0x20, lsl #16
    122c:	and	w1, w1, w0
    1230:	cmp	w1, #0x400
    1234:	mov	w23, w0
    1238:	b.ne	1288 <Perl_av_extend@plt+0x498>  // b.any
    123c:	ldr	x0, [x27]
    1240:	ldr	x0, [x0, #16]
    1244:	str	x0, [sp, #104]
    1248:	ldr	w0, [x26, #12]
    124c:	and	w0, w0, w23
    1250:	cmp	w0, #0x400
    1254:	b.ne	12a0 <Perl_av_extend@plt+0x4b0>  // b.any
    1258:	ldr	x0, [x26]
    125c:	ldr	x0, [x0, #16]
    1260:	str	x0, [sp, #112]
    1264:	ldp	x0, x1, [sp, #104]
    1268:	sub	x0, x0, x1
    126c:	cmp	x0, #0x0
    1270:	b.gt	11a0 <Perl_av_extend@plt+0x3b0>
    1274:	b.ne	11e8 <Perl_av_extend@plt+0x3f8>  // b.any
    1278:	mov	w26, #0x200                 	// #512
    127c:	movi	d0, #0x0
    1280:	movk	w26, #0x20, lsl #16
    1284:	b	1328 <Perl_av_extend@plt+0x538>
    1288:	add	x2, sp, #0x68
    128c:	mov	x1, x27
    1290:	mov	x0, x19
    1294:	mov	w3, #0x2                   	// #2
    1298:	bl	cc0 <Perl_sv_2pv_flags@plt>
    129c:	b	1248 <Perl_av_extend@plt+0x458>
    12a0:	add	x2, sp, #0x70
    12a4:	mov	x1, x26
    12a8:	mov	x0, x19
    12ac:	mov	w3, #0x2                   	// #2
    12b0:	bl	cc0 <Perl_sv_2pv_flags@plt>
    12b4:	b	1264 <Perl_av_extend@plt+0x474>
    12b8:	mov	x2, x21
    12bc:	mov	x1, x24
    12c0:	mov	w3, #0x0                   	// #0
    12c4:	mov	x0, x19
    12c8:	bl	d90 <Perl_av_fetch@plt>
    12cc:	ldr	x27, [x0]
    12d0:	mov	x2, x21
    12d4:	mov	x1, x25
    12d8:	mov	x0, x19
    12dc:	mov	w3, #0x0                   	// #0
    12e0:	bl	d90 <Perl_av_fetch@plt>
    12e4:	ldr	x23, [x0]
    12e8:	ldr	w0, [x27, #12]
    12ec:	and	w0, w0, w26
    12f0:	cmp	w0, #0x200
    12f4:	b.ne	1340 <Perl_av_extend@plt+0x550>  // b.any
    12f8:	ldr	x0, [x27]
    12fc:	ldr	d8, [x0, #40]
    1300:	ldr	w0, [x23, #12]
    1304:	and	w0, w0, w26
    1308:	cmp	w0, #0x200
    130c:	b.ne	1358 <Perl_av_extend@plt+0x568>  // b.any
    1310:	ldr	x0, [x23]
    1314:	ldr	d0, [x0, #40]
    1318:	fsub	d0, d8, d0
    131c:	fcmp	d0, #0.0
    1320:	b.ne	132c <Perl_av_extend@plt+0x53c>  // b.any
    1324:	sub	x21, x21, #0x1
    1328:	tbz	x21, #63, 12b8 <Perl_av_extend@plt+0x4c8>
    132c:	fcmpe	d0, #0.0
    1330:	b.gt	11a0 <Perl_av_extend@plt+0x3b0>
    1334:	b.mi	11e8 <Perl_av_extend@plt+0x3f8>  // b.first
    1338:	mov	x1, #0x0                   	// #0
    133c:	b	11a4 <Perl_av_extend@plt+0x3b4>
    1340:	mov	x1, x27
    1344:	mov	x0, x19
    1348:	mov	w2, #0x2                   	// #2
    134c:	bl	d10 <Perl_sv_2nv_flags@plt>
    1350:	fmov	d8, d0
    1354:	b	1300 <Perl_av_extend@plt+0x510>
    1358:	mov	x1, x23
    135c:	mov	x0, x19
    1360:	mov	w2, #0x2                   	// #2
    1364:	bl	d10 <Perl_sv_2nv_flags@plt>
    1368:	b	1318 <Perl_av_extend@plt+0x528>
    136c:	ldp	x19, x20, [sp, #16]
    1370:	ldp	x21, x22, [sp, #32]
    1374:	ldp	x23, x24, [sp, #48]
    1378:	ldp	x25, x26, [sp, #64]
    137c:	ldr	x27, [sp, #80]
    1380:	ldr	d8, [sp, #88]
    1384:	ldp	x29, x30, [sp], #128
    1388:	ret
    138c:	stp	x29, x30, [sp, #-80]!
    1390:	mov	x3, x1
    1394:	mov	x29, sp
    1398:	stp	x21, x22, [sp, #32]
    139c:	adrp	x22, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1018c>
    13a0:	ldr	x1, [x22, #4056]
    13a4:	stp	x19, x20, [sp, #16]
    13a8:	stp	x23, x24, [sp, #48]
    13ac:	ldr	x2, [x1]
    13b0:	str	x2, [sp, #72]
    13b4:	mov	x2, #0x0                   	// #0
    13b8:	ldr	x1, [x0, #120]
    13bc:	ldr	x21, [x0]
    13c0:	sub	x2, x1, #0x4
    13c4:	str	x2, [x0, #120]
    13c8:	ldr	w2, [x1]
    13cc:	ldr	x1, [x0, #24]
    13d0:	add	w20, w2, #0x1
    13d4:	add	x2, x1, w2, sxtw #3
    13d8:	sub	x21, x21, x2
    13dc:	asr	x21, x21, #3
    13e0:	cmp	w21, #0x2
    13e4:	b.eq	13f8 <Perl_av_extend@plt+0x608>  // b.none
    13e8:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    13ec:	mov	x0, x3
    13f0:	add	x1, x1, #0x188
    13f4:	bl	d00 <Perl_croak_xs_usage@plt>
    13f8:	sxtw	x20, w20
    13fc:	mov	x19, x0
    1400:	add	x20, x20, #0x1
    1404:	lsl	x20, x20, #3
    1408:	ldr	x1, [x1, x20]
    140c:	ldr	x24, [x1, #16]
    1410:	mov	x1, x24
    1414:	bl	c90 <Perl_av_len@plt>
    1418:	mov	x1, x24
    141c:	mov	x2, x0
    1420:	mov	x23, x0
    1424:	mov	w3, #0x0                   	// #0
    1428:	mov	x0, x19
    142c:	bl	d90 <Perl_av_fetch@plt>
    1430:	ldr	x1, [x0]
    1434:	ldr	w2, [x1, #12]
    1438:	and	w2, w2, #0x3ffc00
    143c:	and	w2, w2, #0xffe007ff
    1440:	cmp	w2, #0x400
    1444:	b.ne	14b0 <Perl_av_extend@plt+0x6c0>  // b.any
    1448:	ldr	x0, [x1]
    144c:	ldr	x0, [x0, #16]
    1450:	str	x0, [sp, #64]
    1454:	adrp	x0, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1118c>
    1458:	sub	x20, x20, #0x8
    145c:	ldr	d0, [x0, #240]
    1460:	ldr	x0, [sp, #64]
    1464:	fcvtzs	x1, d0
    1468:	madd	x1, x1, x23, x0
    146c:	mov	x0, x19
    1470:	str	x1, [sp, #64]
    1474:	bl	dc0 <Perl_newSViv@plt>
    1478:	mov	x1, x0
    147c:	ldr	x21, [x19, #24]
    1480:	mov	x0, x19
    1484:	bl	d60 <Perl_sv_2mortal@plt>
    1488:	ldr	x22, [x22, #4056]
    148c:	str	x0, [x21, x20]
    1490:	ldr	x0, [x19, #24]
    1494:	add	x20, x0, x20
    1498:	str	x20, [x19]
    149c:	ldr	x1, [sp, #72]
    14a0:	ldr	x0, [x22]
    14a4:	eor	x0, x1, x0
    14a8:	cbz	x0, 14c4 <Perl_av_extend@plt+0x6d4>
    14ac:	bl	ce0 <__stack_chk_fail@plt>
    14b0:	mov	w3, w21
    14b4:	add	x2, sp, #0x40
    14b8:	mov	x0, x19
    14bc:	bl	cc0 <Perl_sv_2pv_flags@plt>
    14c0:	b	1454 <Perl_av_extend@plt+0x664>
    14c4:	ldp	x19, x20, [sp, #16]
    14c8:	ldp	x21, x22, [sp, #32]
    14cc:	ldp	x23, x24, [sp, #48]
    14d0:	ldp	x29, x30, [sp], #80
    14d4:	ret
    14d8:	stp	x29, x30, [sp, #-48]!
    14dc:	mov	x3, x1
    14e0:	mov	x29, sp
    14e4:	stp	x19, x20, [sp, #16]
    14e8:	stp	x21, x22, [sp, #32]
    14ec:	ldr	x1, [x0, #120]
    14f0:	ldr	x2, [x0]
    14f4:	sub	x4, x1, #0x4
    14f8:	str	x4, [x0, #120]
    14fc:	ldr	x4, [x3]
    1500:	ldr	w1, [x1]
    1504:	ldr	w22, [x4, #40]
    1508:	add	w20, w1, #0x1
    150c:	ldr	x4, [x0, #24]
    1510:	add	x1, x4, w1, sxtw #3
    1514:	sub	x2, x2, x1
    1518:	asr	x2, x2, #3
    151c:	cmp	w2, #0x1
    1520:	b.eq	1534 <Perl_av_extend@plt+0x744>  // b.none
    1524:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1528:	mov	x0, x3
    152c:	add	x1, x1, #0x19f
    1530:	bl	d00 <Perl_croak_xs_usage@plt>
    1534:	mov	x19, x0
    1538:	mov	w1, #0xb                   	// #11
    153c:	bl	db0 <Perl_newSV_type@plt>
    1540:	mov	x21, x0
    1544:	sxtw	x1, w22
    1548:	mov	x0, x19
    154c:	bl	dc0 <Perl_newSViv@plt>
    1550:	mov	x2, x0
    1554:	mov	x1, x21
    1558:	mov	x0, x19
    155c:	bl	d20 <Perl_av_push@plt>
    1560:	mov	x1, x21
    1564:	mov	x0, x19
    1568:	bl	c60 <Perl_newRV_noinc@plt>
    156c:	mov	x1, x0
    1570:	mov	x0, x19
    1574:	bl	d60 <Perl_sv_2mortal@plt>
    1578:	ldr	x2, [x19, #24]
    157c:	sbfiz	x1, x20, #3, #32
    1580:	str	x0, [x2, x1]
    1584:	ldr	x0, [x19, #24]
    1588:	add	x1, x0, x1
    158c:	str	x1, [x19]
    1590:	ldp	x19, x20, [sp, #16]
    1594:	ldp	x21, x22, [sp, #32]
    1598:	ldp	x29, x30, [sp], #48
    159c:	ret
    15a0:	stp	x29, x30, [sp, #-96]!
    15a4:	mov	x4, x1
    15a8:	mov	x29, sp
    15ac:	stp	x19, x20, [sp, #16]
    15b0:	stp	x21, x22, [sp, #32]
    15b4:	stp	x23, x24, [sp, #48]
    15b8:	str	x25, [sp, #64]
    15bc:	stp	d8, d9, [sp, #80]
    15c0:	ldr	x1, [x0, #120]
    15c4:	ldr	x2, [x0]
    15c8:	sub	x3, x1, #0x4
    15cc:	str	x3, [x0, #120]
    15d0:	ldr	w3, [x1]
    15d4:	ldr	x1, [x0, #24]
    15d8:	add	w20, w3, #0x1
    15dc:	add	x3, x1, w3, sxtw #3
    15e0:	sub	x2, x2, x3
    15e4:	asr	x2, x2, #3
    15e8:	cmp	w2, #0x2
    15ec:	b.eq	1600 <Perl_av_extend@plt+0x810>  // b.none
    15f0:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    15f4:	mov	x0, x4
    15f8:	add	x1, x1, #0x188
    15fc:	bl	d00 <Perl_croak_xs_usage@plt>
    1600:	sxtw	x20, w20
    1604:	mov	x19, x0
    1608:	add	x20, x20, #0x1
    160c:	mov	w25, #0x200                 	// #512
    1610:	mov	x24, #0x0                   	// #0
    1614:	movk	w25, #0x20, lsl #16
    1618:	lsl	x20, x20, #3
    161c:	ldr	x21, [x1, x20]
    1620:	ldr	x22, [x21, #16]
    1624:	mov	x1, x22
    1628:	bl	c90 <Perl_av_len@plt>
    162c:	mov	x23, x0
    1630:	fmov	d9, #1.000000000000000000e+00
    1634:	ldr	x0, [x19, #24]
    1638:	add	x0, x0, x20
    163c:	stur	x21, [x0, #-8]
    1640:	adrp	x0, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1118c>
    1644:	ldr	d8, [x0, #248]
    1648:	cmp	x24, x23
    164c:	mov	w3, #0x0                   	// #0
    1650:	b.le	16b0 <Perl_av_extend@plt+0x8c0>
    1654:	mov	x1, x22
    1658:	mov	x2, x23
    165c:	mov	x0, x19
    1660:	bl	d90 <Perl_av_fetch@plt>
    1664:	ldr	x1, [x0]
    1668:	ldr	w0, [x1, #12]
    166c:	and	w0, w0, #0x3fff00
    1670:	and	w0, w0, #0xffe001ff
    1674:	cmp	w0, #0x100
    1678:	b.ne	1778 <Perl_av_extend@plt+0x988>  // b.any
    167c:	ldr	x0, [x1]
    1680:	ldr	x0, [x0, #32]
    1684:	cmp	x0, #0x0
    1688:	cset	w0, eq  // eq = none
    168c:	cbz	w0, 170c <Perl_av_extend@plt+0x91c>
    1690:	mov	x0, x19
    1694:	mov	x1, #0x1                   	// #1
    1698:	bl	dc0 <Perl_newSViv@plt>
    169c:	mov	x2, x0
    16a0:	mov	x1, x22
    16a4:	mov	x0, x19
    16a8:	bl	d20 <Perl_av_push@plt>
    16ac:	b	170c <Perl_av_extend@plt+0x91c>
    16b0:	mov	x2, x24
    16b4:	mov	x1, x22
    16b8:	mov	x0, x19
    16bc:	bl	d90 <Perl_av_fetch@plt>
    16c0:	ldr	x21, [x0]
    16c4:	ldr	w0, [x21, #12]
    16c8:	and	w0, w0, w25
    16cc:	cmp	w0, #0x200
    16d0:	b.ne	1738 <Perl_av_extend@plt+0x948>  // b.any
    16d4:	ldr	x0, [x21]
    16d8:	ldr	d0, [x0, #40]
    16dc:	fadd	d0, d0, d9
    16e0:	mov	x0, x19
    16e4:	mov	x1, x21
    16e8:	bl	c50 <Perl_sv_setnv@plt>
    16ec:	ldr	w0, [x21, #12]
    16f0:	and	w0, w0, w25
    16f4:	cmp	w0, #0x200
    16f8:	b.ne	174c <Perl_av_extend@plt+0x95c>  // b.any
    16fc:	ldr	x0, [x21]
    1700:	ldr	d0, [x0, #40]
    1704:	fcmpe	d0, d8
    1708:	b.pl	1760 <Perl_av_extend@plt+0x970>  // b.nfrst
    170c:	ldr	x0, [x19, #24]
    1710:	sub	x20, x20, #0x8
    1714:	add	x20, x0, x20
    1718:	str	x20, [x19]
    171c:	ldp	x19, x20, [sp, #16]
    1720:	ldp	x21, x22, [sp, #32]
    1724:	ldp	x23, x24, [sp, #48]
    1728:	ldr	x25, [sp, #64]
    172c:	ldp	d8, d9, [sp, #80]
    1730:	ldp	x29, x30, [sp], #96
    1734:	ret
    1738:	mov	x1, x21
    173c:	mov	x0, x19
    1740:	mov	w2, #0x2                   	// #2
    1744:	bl	d10 <Perl_sv_2nv_flags@plt>
    1748:	b	16dc <Perl_av_extend@plt+0x8ec>
    174c:	mov	x1, x21
    1750:	mov	x0, x19
    1754:	mov	w2, #0x2                   	// #2
    1758:	bl	d10 <Perl_sv_2nv_flags@plt>
    175c:	b	1704 <Perl_av_extend@plt+0x914>
    1760:	mov	x1, x21
    1764:	mov	x0, x19
    1768:	mov	x2, #0x0                   	// #0
    176c:	add	x24, x24, #0x1
    1770:	bl	dd0 <Perl_sv_setiv@plt>
    1774:	b	1648 <Perl_av_extend@plt+0x858>
    1778:	mov	x0, x19
    177c:	mov	w2, #0x2                   	// #2
    1780:	bl	c40 <Perl_sv_2iv_flags@plt>
    1784:	b	1684 <Perl_av_extend@plt+0x894>
    1788:	stp	x29, x30, [sp, #-96]!
    178c:	mov	x4, x1
    1790:	mov	x29, sp
    1794:	stp	x19, x20, [sp, #16]
    1798:	stp	x21, x22, [sp, #32]
    179c:	stp	x23, x24, [sp, #48]
    17a0:	str	x25, [sp, #64]
    17a4:	stp	d8, d9, [sp, #80]
    17a8:	ldr	x1, [x0, #120]
    17ac:	ldr	x2, [x0]
    17b0:	sub	x3, x1, #0x4
    17b4:	str	x3, [x0, #120]
    17b8:	ldr	w3, [x1]
    17bc:	ldr	x1, [x0, #24]
    17c0:	add	w20, w3, #0x1
    17c4:	add	x3, x1, w3, sxtw #3
    17c8:	sub	x2, x2, x3
    17cc:	asr	x2, x2, #3
    17d0:	cmp	w2, #0x2
    17d4:	b.eq	17e8 <Perl_av_extend@plt+0x9f8>  // b.none
    17d8:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    17dc:	mov	x0, x4
    17e0:	add	x1, x1, #0x188
    17e4:	bl	d00 <Perl_croak_xs_usage@plt>
    17e8:	sxtw	x20, w20
    17ec:	mov	x19, x0
    17f0:	add	x20, x20, #0x1
    17f4:	mov	w25, #0x200                 	// #512
    17f8:	mov	x24, #0x0                   	// #0
    17fc:	movk	w25, #0x20, lsl #16
    1800:	lsl	x20, x20, #3
    1804:	ldr	x21, [x1, x20]
    1808:	ldr	x23, [x21, #16]
    180c:	mov	x1, x23
    1810:	bl	c90 <Perl_av_len@plt>
    1814:	mov	x22, x0
    1818:	fmov	d1, #1.000000000000000000e+00
    181c:	ldr	x0, [x19, #24]
    1820:	fmov	d8, d1
    1824:	add	x0, x0, x20
    1828:	stur	x21, [x0, #-8]
    182c:	adrp	x0, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1118c>
    1830:	ldr	d9, [x0, #248]
    1834:	fsub	d9, d9, d1
    1838:	cmp	x24, x22
    183c:	b.gt	18a4 <Perl_av_extend@plt+0xab4>
    1840:	mov	x2, x24
    1844:	mov	x1, x23
    1848:	mov	x0, x19
    184c:	mov	w3, #0x0                   	// #0
    1850:	bl	d90 <Perl_av_fetch@plt>
    1854:	ldr	x21, [x0]
    1858:	ldr	w0, [x21, #12]
    185c:	and	w0, w0, w25
    1860:	cmp	w0, #0x200
    1864:	b.ne	1924 <Perl_av_extend@plt+0xb34>  // b.any
    1868:	ldr	x0, [x21]
    186c:	ldr	d0, [x0, #40]
    1870:	fsub	d0, d0, d8
    1874:	mov	x0, x19
    1878:	mov	x1, x21
    187c:	bl	c50 <Perl_sv_setnv@plt>
    1880:	ldr	w0, [x21, #12]
    1884:	and	w0, w0, w25
    1888:	cmp	w0, #0x200
    188c:	b.ne	1938 <Perl_av_extend@plt+0xb48>  // b.any
    1890:	ldr	x0, [x21]
    1894:	ldr	d0, [x0, #40]
    1898:	fcmpe	d0, #0.0
    189c:	cset	w0, ge  // ge = tcont
    18a0:	cbz	w0, 194c <Perl_av_extend@plt+0xb5c>
    18a4:	cmp	x22, #0x0
    18a8:	b.le	18f8 <Perl_av_extend@plt+0xb08>
    18ac:	mov	x1, x23
    18b0:	mov	x2, x22
    18b4:	mov	x0, x19
    18b8:	mov	w3, #0x0                   	// #0
    18bc:	bl	d90 <Perl_av_fetch@plt>
    18c0:	ldr	x1, [x0]
    18c4:	ldr	w0, [x1, #12]
    18c8:	and	w0, w0, #0x3fff00
    18cc:	and	w0, w0, #0xffe001ff
    18d0:	cmp	w0, #0x100
    18d4:	b.ne	1964 <Perl_av_extend@plt+0xb74>  // b.any
    18d8:	ldr	x0, [x1]
    18dc:	ldr	x0, [x0, #32]
    18e0:	cmp	x0, #0x0
    18e4:	cset	w0, eq  // eq = none
    18e8:	cbz	w0, 18f8 <Perl_av_extend@plt+0xb08>
    18ec:	mov	x1, x23
    18f0:	mov	x0, x19
    18f4:	bl	d30 <Perl_av_pop@plt>
    18f8:	ldr	x0, [x19, #24]
    18fc:	sub	x20, x20, #0x8
    1900:	add	x20, x0, x20
    1904:	str	x20, [x19]
    1908:	ldp	x19, x20, [sp, #16]
    190c:	ldp	x21, x22, [sp, #32]
    1910:	ldp	x23, x24, [sp, #48]
    1914:	ldr	x25, [sp, #64]
    1918:	ldp	d8, d9, [sp, #80]
    191c:	ldp	x29, x30, [sp], #96
    1920:	ret
    1924:	mov	x1, x21
    1928:	mov	x0, x19
    192c:	mov	w2, #0x2                   	// #2
    1930:	bl	d10 <Perl_sv_2nv_flags@plt>
    1934:	b	1870 <Perl_av_extend@plt+0xa80>
    1938:	mov	x1, x21
    193c:	mov	x0, x19
    1940:	mov	w2, #0x2                   	// #2
    1944:	bl	d10 <Perl_sv_2nv_flags@plt>
    1948:	b	1898 <Perl_av_extend@plt+0xaa8>
    194c:	fmov	d0, d9
    1950:	mov	x1, x21
    1954:	mov	x0, x19
    1958:	add	x24, x24, #0x1
    195c:	bl	c50 <Perl_sv_setnv@plt>
    1960:	b	1838 <Perl_av_extend@plt+0xa48>
    1964:	mov	x0, x19
    1968:	mov	w2, #0x2                   	// #2
    196c:	bl	c40 <Perl_sv_2iv_flags@plt>
    1970:	b	18e0 <Perl_av_extend@plt+0xaf0>
    1974:	stp	x29, x30, [sp, #-64]!
    1978:	mov	x4, x1
    197c:	mov	x29, sp
    1980:	stp	x19, x20, [sp, #16]
    1984:	stp	x21, x22, [sp, #32]
    1988:	stp	x23, x24, [sp, #48]
    198c:	ldr	x1, [x0, #120]
    1990:	ldr	x2, [x0]
    1994:	sub	x3, x1, #0x4
    1998:	str	x3, [x0, #120]
    199c:	ldr	w3, [x1]
    19a0:	ldr	x1, [x0, #24]
    19a4:	add	w21, w3, #0x1
    19a8:	add	x3, x1, w3, sxtw #3
    19ac:	sub	x2, x2, x3
    19b0:	asr	x2, x2, #3
    19b4:	cmp	w2, #0x1
    19b8:	b.eq	19cc <Perl_av_extend@plt+0xbdc>  // b.none
    19bc:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    19c0:	mov	x0, x4
    19c4:	add	x1, x1, #0x18f
    19c8:	bl	d00 <Perl_croak_xs_usage@plt>
    19cc:	sbfiz	x21, x21, #3, #32
    19d0:	mov	x19, x0
    19d4:	ldr	x22, [x1, x21]
    19d8:	ldr	x23, [x22, #16]
    19dc:	mov	x1, x23
    19e0:	bl	c90 <Perl_av_len@plt>
    19e4:	mov	x20, x0
    19e8:	cmn	x0, #0x1
    19ec:	ldr	x0, [x19, #24]
    19f0:	str	x22, [x0, x21]
    19f4:	b.ne	1a34 <Perl_av_extend@plt+0xc44>  // b.any
    19f8:	mov	x1, #0x0                   	// #0
    19fc:	mov	x0, x19
    1a00:	bl	dc0 <Perl_newSViv@plt>
    1a04:	mov	x2, x0
    1a08:	mov	x1, x23
    1a0c:	mov	x0, x19
    1a10:	bl	d20 <Perl_av_push@plt>
    1a14:	ldr	x0, [x19, #24]
    1a18:	add	x21, x0, x21
    1a1c:	str	x21, [x19]
    1a20:	ldp	x19, x20, [sp, #16]
    1a24:	ldp	x21, x22, [sp, #32]
    1a28:	ldp	x23, x24, [sp, #48]
    1a2c:	ldp	x29, x30, [sp], #64
    1a30:	ret
    1a34:	cbz	x20, 1a14 <Perl_av_extend@plt+0xc24>
    1a38:	mov	w24, #0x200                 	// #512
    1a3c:	mov	x22, x20
    1a40:	movk	w24, #0x20, lsl #16
    1a44:	b	1a5c <Perl_av_extend@plt+0xc6c>
    1a48:	mov	x0, x19
    1a4c:	mov	w2, #0x2                   	// #2
    1a50:	bl	d10 <Perl_sv_2nv_flags@plt>
    1a54:	b	1a94 <Perl_av_extend@plt+0xca4>
    1a58:	sub	x22, x22, #0x1
    1a5c:	cmp	x22, #0x0
    1a60:	b.le	1aa0 <Perl_av_extend@plt+0xcb0>
    1a64:	mov	x1, x23
    1a68:	mov	x2, x22
    1a6c:	mov	x0, x19
    1a70:	mov	w3, #0x0                   	// #0
    1a74:	bl	d90 <Perl_av_fetch@plt>
    1a78:	ldr	x1, [x0]
    1a7c:	ldr	w0, [x1, #12]
    1a80:	and	w0, w0, w24
    1a84:	cmp	w0, #0x200
    1a88:	b.ne	1a48 <Perl_av_extend@plt+0xc58>  // b.any
    1a8c:	ldr	x0, [x1]
    1a90:	ldr	d0, [x0, #40]
    1a94:	fcmp	d0, #0.0
    1a98:	cset	w0, ne  // ne = any
    1a9c:	cbz	w0, 1a58 <Perl_av_extend@plt+0xc68>
    1aa0:	cmp	x22, x20
    1aa4:	b.ge	1a14 <Perl_av_extend@plt+0xc24>  // b.tcont
    1aa8:	sub	x20, x20, x22
    1aac:	cmp	x20, #0x0
    1ab0:	b.le	1a14 <Perl_av_extend@plt+0xc24>
    1ab4:	mov	x1, x23
    1ab8:	mov	x0, x19
    1abc:	sub	x20, x20, #0x1
    1ac0:	bl	d30 <Perl_av_pop@plt>
    1ac4:	b	1aac <Perl_av_extend@plt+0xcbc>
    1ac8:	stp	x29, x30, [sp, #-64]!
    1acc:	mov	x4, x1
    1ad0:	mov	x29, sp
    1ad4:	stp	x19, x20, [sp, #16]
    1ad8:	stp	x21, x22, [sp, #32]
    1adc:	stp	x23, x24, [sp, #48]
    1ae0:	ldr	x1, [x0, #120]
    1ae4:	ldr	x2, [x0]
    1ae8:	sub	x3, x1, #0x4
    1aec:	str	x3, [x0, #120]
    1af0:	ldr	w3, [x1]
    1af4:	ldr	x1, [x0, #24]
    1af8:	add	w20, w3, #0x1
    1afc:	add	x3, x1, w3, sxtw #3
    1b00:	sub	x2, x2, x3
    1b04:	asr	x2, x2, #3
    1b08:	cmp	w2, #0x2
    1b0c:	b.eq	1b20 <Perl_av_extend@plt+0xd30>  // b.none
    1b10:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1b14:	mov	x0, x4
    1b18:	add	x1, x1, #0x188
    1b1c:	bl	d00 <Perl_croak_xs_usage@plt>
    1b20:	sxtw	x20, w20
    1b24:	mov	x19, x0
    1b28:	add	x20, x20, #0x1
    1b2c:	mov	w24, #0x200                 	// #512
    1b30:	movk	w24, #0x20, lsl #16
    1b34:	lsl	x20, x20, #3
    1b38:	ldr	x1, [x1, x20]
    1b3c:	ldr	x23, [x1, #16]
    1b40:	mov	x1, x23
    1b44:	bl	c90 <Perl_av_len@plt>
    1b48:	mov	w1, #0xb                   	// #11
    1b4c:	mov	x21, x0
    1b50:	mov	x0, x19
    1b54:	bl	db0 <Perl_newSV_type@plt>
    1b58:	mov	x1, x0
    1b5c:	mov	x0, x19
    1b60:	bl	d60 <Perl_sv_2mortal@plt>
    1b64:	mov	x22, x0
    1b68:	mov	x1, x0
    1b6c:	mov	x2, x21
    1b70:	mov	x0, x19
    1b74:	bl	df0 <Perl_av_extend@plt>
    1b78:	tbz	x21, #63, 1bc0 <Perl_av_extend@plt+0xdd0>
    1b7c:	mov	x1, x22
    1b80:	mov	x0, x19
    1b84:	bl	da0 <Perl_newRV@plt>
    1b88:	sub	x20, x20, #0x8
    1b8c:	ldr	x21, [x19, #24]
    1b90:	mov	x1, x0
    1b94:	mov	x0, x19
    1b98:	bl	d60 <Perl_sv_2mortal@plt>
    1b9c:	str	x0, [x21, x20]
    1ba0:	ldr	x0, [x19, #24]
    1ba4:	add	x20, x0, x20
    1ba8:	str	x20, [x19]
    1bac:	ldp	x19, x20, [sp, #16]
    1bb0:	ldp	x21, x22, [sp, #32]
    1bb4:	ldp	x23, x24, [sp, #48]
    1bb8:	ldp	x29, x30, [sp], #64
    1bbc:	ret
    1bc0:	mov	x2, x21
    1bc4:	mov	x1, x23
    1bc8:	mov	w3, #0x0                   	// #0
    1bcc:	mov	x0, x19
    1bd0:	bl	d90 <Perl_av_fetch@plt>
    1bd4:	ldr	x0, [x0]
    1bd8:	mov	x2, x21
    1bdc:	mov	x1, x23
    1be0:	mov	w3, #0x0                   	// #0
    1be4:	ldr	w0, [x0, #12]
    1be8:	and	w0, w0, w24
    1bec:	cmp	w0, #0x200
    1bf0:	mov	x0, x19
    1bf4:	b.ne	1c2c <Perl_av_extend@plt+0xe3c>  // b.any
    1bf8:	bl	d90 <Perl_av_fetch@plt>
    1bfc:	ldr	x0, [x0]
    1c00:	ldr	x0, [x0]
    1c04:	ldr	d0, [x0, #40]
    1c08:	mov	x0, x19
    1c0c:	bl	cb0 <Perl_newSVnv@plt>
    1c10:	mov	x2, x21
    1c14:	mov	x3, x0
    1c18:	mov	x1, x22
    1c1c:	mov	x0, x19
    1c20:	sub	x21, x21, #0x1
    1c24:	bl	ca0 <Perl_av_store@plt>
    1c28:	b	1b78 <Perl_av_extend@plt+0xd88>
    1c2c:	bl	d90 <Perl_av_fetch@plt>
    1c30:	ldr	x1, [x0]
    1c34:	mov	w2, #0x2                   	// #2
    1c38:	mov	x0, x19
    1c3c:	bl	d10 <Perl_sv_2nv_flags@plt>
    1c40:	b	1c08 <Perl_av_extend@plt+0xe18>
    1c44:	stp	x29, x30, [sp, #-80]!
    1c48:	mov	x3, x1
    1c4c:	mov	x29, sp
    1c50:	stp	x21, x22, [sp, #32]
    1c54:	adrp	x22, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1018c>
    1c58:	ldr	x1, [x22, #4056]
    1c5c:	stp	x19, x20, [sp, #16]
    1c60:	stp	x23, x24, [sp, #48]
    1c64:	ldr	x2, [x1]
    1c68:	str	x2, [sp, #72]
    1c6c:	mov	x2, #0x0                   	// #0
    1c70:	ldr	x1, [x0, #120]
    1c74:	ldr	x24, [x0]
    1c78:	sub	x2, x1, #0x4
    1c7c:	str	x2, [x0, #120]
    1c80:	ldr	w2, [x1]
    1c84:	ldr	x1, [x0, #24]
    1c88:	add	w20, w2, #0x1
    1c8c:	add	x2, x1, w2, sxtw #3
    1c90:	sub	x24, x24, x2
    1c94:	asr	x24, x24, #3
    1c98:	cmp	w24, #0x2
    1c9c:	b.eq	1cb0 <Perl_av_extend@plt+0xec0>  // b.none
    1ca0:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1ca4:	mov	x0, x3
    1ca8:	add	x1, x1, #0x188
    1cac:	bl	d00 <Perl_croak_xs_usage@plt>
    1cb0:	sxtw	x20, w20
    1cb4:	mov	x19, x0
    1cb8:	add	x20, x20, #0x1
    1cbc:	lsl	x20, x20, #3
    1cc0:	ldr	x21, [x1, x20]
    1cc4:	mov	w1, #0xb                   	// #11
    1cc8:	bl	db0 <Perl_newSV_type@plt>
    1ccc:	mov	x23, x0
    1cd0:	mov	w1, #0x100                 	// #256
    1cd4:	ldr	w0, [x21, #12]
    1cd8:	movk	w1, #0x8000, lsl #16
    1cdc:	and	w2, w0, w1
    1ce0:	bics	wzr, w1, w0
    1ce4:	b.ne	1dd0 <Perl_av_extend@plt+0xfe0>  // b.any
    1ce8:	add	w1, w1, #0x200, lsl #12
    1cec:	and	w0, w0, w1
    1cf0:	cmp	w0, w2
    1cf4:	b.ne	1da0 <Perl_av_extend@plt+0xfb0>  // b.any
    1cf8:	ldr	x0, [x21]
    1cfc:	ldr	d0, [x0, #32]
    1d00:	ucvtf	d0, d0
    1d04:	adrp	x0, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1118c>
    1d08:	ldr	d1, [x0, #248]
    1d0c:	fcmpe	d1, d0
    1d10:	b.le	1dd0 <Perl_av_extend@plt+0xfe0>
    1d14:	ldr	w0, [x21, #12]
    1d18:	mov	w1, #0x100                 	// #256
    1d1c:	movk	w1, #0x8020, lsl #16
    1d20:	and	w0, w0, w1
    1d24:	mov	w1, #0x100                 	// #256
    1d28:	movk	w1, #0x8000, lsl #16
    1d2c:	cmp	w0, w1
    1d30:	b.ne	1db8 <Perl_av_extend@plt+0xfc8>  // b.any
    1d34:	ldr	x0, [x21]
    1d38:	ldr	x1, [x0, #32]
    1d3c:	mov	x0, x19
    1d40:	bl	d70 <Perl_newSVuv@plt>
    1d44:	mov	x2, x0
    1d48:	mov	x1, x23
    1d4c:	mov	x0, x19
    1d50:	bl	d20 <Perl_av_push@plt>
    1d54:	mov	x1, x23
    1d58:	mov	x0, x19
    1d5c:	bl	c60 <Perl_newRV_noinc@plt>
    1d60:	mov	x1, x0
    1d64:	mov	x0, x19
    1d68:	bl	d60 <Perl_sv_2mortal@plt>
    1d6c:	ldr	x1, [x19, #24]
    1d70:	ldr	x22, [x22, #4056]
    1d74:	add	x1, x1, x20
    1d78:	sub	x20, x20, #0x8
    1d7c:	stur	x0, [x1, #-8]
    1d80:	ldr	x0, [x19, #24]
    1d84:	add	x20, x0, x20
    1d88:	str	x20, [x19]
    1d8c:	ldr	x1, [sp, #72]
    1d90:	ldr	x0, [x22]
    1d94:	eor	x0, x1, x0
    1d98:	cbz	x0, 1e60 <Perl_av_extend@plt+0x1070>
    1d9c:	bl	ce0 <__stack_chk_fail@plt>
    1da0:	mov	w2, w24
    1da4:	mov	x1, x21
    1da8:	mov	x0, x19
    1dac:	bl	c70 <Perl_sv_2uv_flags@plt>
    1db0:	ucvtf	d0, x0
    1db4:	b	1d04 <Perl_av_extend@plt+0xf14>
    1db8:	mov	x1, x21
    1dbc:	mov	x0, x19
    1dc0:	mov	w2, #0x2                   	// #2
    1dc4:	bl	c70 <Perl_sv_2uv_flags@plt>
    1dc8:	mov	x1, x0
    1dcc:	b	1d3c <Perl_av_extend@plt+0xf4c>
    1dd0:	ldr	w0, [x21, #12]
    1dd4:	and	w0, w0, #0x3ffc00
    1dd8:	and	w0, w0, #0xffe007ff
    1ddc:	cmp	w0, #0x400
    1de0:	b.ne	1e48 <Perl_av_extend@plt+0x1058>  // b.any
    1de4:	ldr	x0, [x21]
    1de8:	ldr	x0, [x0, #16]
    1dec:	str	x0, [sp, #64]
    1df0:	ldr	x0, [x21, #16]
    1df4:	adrp	x24, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1118c>
    1df8:	ldr	x21, [sp, #64]
    1dfc:	add	x21, x0, x21
    1e00:	ldr	x0, [sp, #64]
    1e04:	cbz	x0, 1d54 <Perl_av_extend@plt+0xf64>
    1e08:	ldr	d0, [x24, #240]
    1e0c:	fcvtzu	x2, d0
    1e10:	cmp	x0, x2
    1e14:	csel	x2, x0, x2, ls  // ls = plast
    1e18:	sub	x0, x0, x2
    1e1c:	str	x0, [sp, #64]
    1e20:	sub	x21, x21, x2
    1e24:	cbz	x2, 1e00 <Perl_av_extend@plt+0x1010>
    1e28:	mov	x1, x21
    1e2c:	mov	x0, x19
    1e30:	bl	de0 <Perl_newSVpvn@plt>
    1e34:	mov	x2, x0
    1e38:	mov	x1, x23
    1e3c:	mov	x0, x19
    1e40:	bl	d20 <Perl_av_push@plt>
    1e44:	b	1e00 <Perl_av_extend@plt+0x1010>
    1e48:	add	x2, sp, #0x40
    1e4c:	mov	x1, x21
    1e50:	mov	x0, x19
    1e54:	mov	w3, #0x2                   	// #2
    1e58:	bl	cc0 <Perl_sv_2pv_flags@plt>
    1e5c:	b	1df4 <Perl_av_extend@plt+0x1004>
    1e60:	ldp	x19, x20, [sp, #16]
    1e64:	ldp	x21, x22, [sp, #32]
    1e68:	ldp	x23, x24, [sp, #48]
    1e6c:	ldp	x29, x30, [sp], #80
    1e70:	ret

0000000000001e74 <boot_Math__BigInt__FastCalc@@Base>:
    1e74:	stp	x29, x30, [sp, #-80]!
    1e78:	mov	x1, x0
    1e7c:	adrp	x4, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1e80:	mov	x29, sp
    1e84:	stp	x19, x20, [sp, #16]
    1e88:	mov	x19, x0
    1e8c:	mov	w0, #0x6e7                 	// #1767
    1e90:	add	x4, x4, #0x1a5
    1e94:	adrp	x3, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1e98:	adrp	x2, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1e9c:	add	x3, x3, #0x1ac
    1ea0:	add	x2, x2, #0x1b4
    1ea4:	movk	w0, #0xd30, lsl #16
    1ea8:	stp	x21, x22, [sp, #32]
    1eac:	adrp	x20, 1000 <Perl_av_extend@plt+0x210>
    1eb0:	add	x20, x20, #0x4d8
    1eb4:	stp	x23, x24, [sp, #48]
    1eb8:	mov	w24, #0x1                   	// #1
    1ebc:	stp	x25, x26, [sp, #64]
    1ec0:	bl	d80 <Perl_xs_handshake@plt>
    1ec4:	mov	w21, w0
    1ec8:	ldr	x23, [x19, #24]
    1ecc:	sbfiz	x22, x0, #3, #32
    1ed0:	adrp	x2, 1000 <Perl_av_extend@plt+0x210>
    1ed4:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1ed8:	add	x2, x2, #0xc44
    1edc:	add	x1, x1, #0x1bf
    1ee0:	add	x0, x23, w0, sxtw #3
    1ee4:	mov	w26, #0xa                   	// #10
    1ee8:	ldr	x23, [x19]
    1eec:	mov	w25, #0x2                   	// #2
    1ef0:	sub	x23, x23, x0
    1ef4:	mov	x0, x19
    1ef8:	bl	d50 <Perl_newXS_deffile@plt>
    1efc:	mov	x0, x19
    1f00:	adrp	x2, 1000 <Perl_av_extend@plt+0x210>
    1f04:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1f08:	add	x2, x2, #0xac8
    1f0c:	add	x1, x1, #0x1dc
    1f10:	bl	d50 <Perl_newXS_deffile@plt>
    1f14:	mov	x0, x19
    1f18:	adrp	x2, 1000 <Perl_av_extend@plt+0x210>
    1f1c:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1f20:	add	x2, x2, #0x974
    1f24:	add	x1, x1, #0x1fa
    1f28:	bl	d50 <Perl_newXS_deffile@plt>
    1f2c:	mov	x0, x19
    1f30:	adrp	x2, 1000 <Perl_av_extend@plt+0x210>
    1f34:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1f38:	add	x2, x2, #0x788
    1f3c:	add	x1, x1, #0x220
    1f40:	bl	d50 <Perl_newXS_deffile@plt>
    1f44:	mov	x0, x19
    1f48:	adrp	x2, 1000 <Perl_av_extend@plt+0x210>
    1f4c:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1f50:	add	x2, x2, #0x5a0
    1f54:	add	x1, x1, #0x23d
    1f58:	bl	d50 <Perl_newXS_deffile@plt>
    1f5c:	mov	x2, x20
    1f60:	mov	x0, x19
    1f64:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1f68:	add	x1, x1, #0x25a
    1f6c:	bl	d50 <Perl_newXS_deffile@plt>
    1f70:	asr	x23, x23, #3
    1f74:	ldr	x0, [x0]
    1f78:	mov	x2, x20
    1f7c:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1f80:	add	x1, x1, #0x277
    1f84:	str	w24, [x0, #40]
    1f88:	mov	x0, x19
    1f8c:	bl	d50 <Perl_newXS_deffile@plt>
    1f90:	ldr	x0, [x0]
    1f94:	mov	x2, x20
    1f98:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1f9c:	add	x1, x1, #0x294
    1fa0:	str	w26, [x0, #40]
    1fa4:	mov	x0, x19
    1fa8:	bl	d50 <Perl_newXS_deffile@plt>
    1fac:	ldr	x0, [x0]
    1fb0:	mov	x2, x20
    1fb4:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1fb8:	add	x1, x1, #0x2b1
    1fbc:	adrp	x20, 0 <Perl_sv_2iv_flags@plt-0xc40>
    1fc0:	add	x20, x20, #0xfe8
    1fc4:	str	w25, [x0, #40]
    1fc8:	mov	x0, x19
    1fcc:	bl	d50 <Perl_newXS_deffile@plt>
    1fd0:	ldr	x0, [x0]
    1fd4:	mov	x2, x20
    1fd8:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1fdc:	add	x1, x1, #0x2cf
    1fe0:	str	wzr, [x0, #40]
    1fe4:	mov	x0, x19
    1fe8:	bl	d50 <Perl_newXS_deffile@plt>
    1fec:	ldr	x0, [x0]
    1ff0:	mov	x2, x20
    1ff4:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    1ff8:	add	x1, x1, #0x2f0
    1ffc:	adrp	x20, 0 <Perl_sv_2iv_flags@plt-0xc40>
    2000:	add	x20, x20, #0xed4
    2004:	str	wzr, [x0, #40]
    2008:	mov	x0, x19
    200c:	bl	d50 <Perl_newXS_deffile@plt>
    2010:	ldr	x0, [x0]
    2014:	mov	x2, x20
    2018:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    201c:	add	x1, x1, #0x310
    2020:	str	w24, [x0, #40]
    2024:	mov	x0, x19
    2028:	bl	d50 <Perl_newXS_deffile@plt>
    202c:	ldr	x0, [x0]
    2030:	mov	x2, x20
    2034:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    2038:	add	x1, x1, #0x330
    203c:	str	w24, [x0, #40]
    2040:	mov	x0, x19
    2044:	bl	d50 <Perl_newXS_deffile@plt>
    2048:	ldr	x0, [x0]
    204c:	mov	x2, x20
    2050:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    2054:	add	x1, x1, #0x350
    2058:	str	w26, [x0, #40]
    205c:	mov	x0, x19
    2060:	bl	d50 <Perl_newXS_deffile@plt>
    2064:	ldr	x0, [x0]
    2068:	mov	x2, x20
    206c:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    2070:	add	x1, x1, #0x370
    2074:	str	w25, [x0, #40]
    2078:	mov	x0, x19
    207c:	bl	d50 <Perl_newXS_deffile@plt>
    2080:	ldr	x0, [x0]
    2084:	adrp	x2, 1000 <Perl_av_extend@plt+0x210>
    2088:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    208c:	add	x2, x2, #0x38c
    2090:	add	x1, x1, #0x391
    2094:	str	wzr, [x0, #40]
    2098:	mov	x0, x19
    209c:	bl	d50 <Perl_newXS_deffile@plt>
    20a0:	mov	x0, x19
    20a4:	adrp	x2, 1000 <Perl_av_extend@plt+0x210>
    20a8:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    20ac:	add	x2, x2, #0xdc
    20b0:	add	x1, x1, #0x3ae
    20b4:	bl	d50 <Perl_newXS_deffile@plt>
    20b8:	cmp	w23, #0x3
    20bc:	b.gt	20cc <boot_Math__BigInt__FastCalc@@Base+0x258>
    20c0:	adrp	x0, 2000 <boot_Math__BigInt__FastCalc@@Base+0x18c>
    20c4:	add	x0, x0, #0x3cc
    20c8:	bl	d40 <Perl_croak_nocontext@plt>
    20cc:	ldr	x0, [x19, #24]
    20d0:	add	x0, x0, x22
    20d4:	ldr	x1, [x0, #16]
    20d8:	ldr	w0, [x1, #12]
    20dc:	and	w0, w0, #0x3fff00
    20e0:	and	w0, w0, #0xffe001ff
    20e4:	cmp	w0, #0x100
    20e8:	b.ne	2154 <boot_Math__BigInt__FastCalc@@Base+0x2e0>  // b.any
    20ec:	ldr	x0, [x1]
    20f0:	ldr	d0, [x0, #32]
    20f4:	scvtf	d0, d0
    20f8:	ldr	x0, [x19, #24]
    20fc:	adrp	x2, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1118c>
    2100:	mov	x20, x2
    2104:	add	x22, x0, x22
    2108:	str	d0, [x2, #240]
    210c:	ldr	x1, [x22, #24]
    2110:	ldr	w0, [x1, #12]
    2114:	and	w0, w0, #0x3ffe00
    2118:	and	w0, w0, #0xffe003ff
    211c:	cmp	w0, #0x200
    2120:	b.ne	2168 <boot_Math__BigInt__FastCalc@@Base+0x2f4>  // b.any
    2124:	ldr	x0, [x1]
    2128:	ldr	d0, [x0, #40]
    212c:	add	x2, x20, #0xf0
    2130:	mov	w1, w21
    2134:	mov	x0, x19
    2138:	str	d0, [x2, #8]
    213c:	ldp	x19, x20, [sp, #16]
    2140:	ldp	x21, x22, [sp, #32]
    2144:	ldp	x23, x24, [sp, #48]
    2148:	ldp	x25, x26, [sp, #64]
    214c:	ldp	x29, x30, [sp], #80
    2150:	b	cd0 <Perl_xs_boot_epilog@plt>
    2154:	mov	w2, w25
    2158:	mov	x0, x19
    215c:	bl	c40 <Perl_sv_2iv_flags@plt>
    2160:	scvtf	d0, x0
    2164:	b	20f8 <boot_Math__BigInt__FastCalc@@Base+0x284>
    2168:	mov	x0, x19
    216c:	mov	w2, #0x2                   	// #2
    2170:	bl	d10 <Perl_sv_2nv_flags@plt>
    2174:	b	212c <boot_Math__BigInt__FastCalc@@Base+0x2b8>

Disassembly of section .fini:

0000000000002178 <.fini>:
    2178:	stp	x29, x30, [sp, #-16]!
    217c:	mov	x29, sp
    2180:	ldp	x29, x30, [sp], #16
    2184:	ret
