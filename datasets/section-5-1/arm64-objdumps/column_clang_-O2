
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//column_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402250 <.init>:
  402250:	stp	x29, x30, [sp, #-16]!
  402254:	mov	x29, sp
  402258:	bl	402950 <scols_reset_iter@plt+0x60>
  40225c:	ldp	x29, x30, [sp], #16
  402260:	ret

Disassembly of section .plt:

0000000000402270 <mbrtowc@plt-0x20>:
  402270:	stp	x16, x30, [sp, #-16]!
  402274:	adrp	x16, 419000 <scols_reset_iter@plt+0x16710>
  402278:	ldr	x17, [x16, #4088]
  40227c:	add	x16, x16, #0xff8
  402280:	br	x17
  402284:	nop
  402288:	nop
  40228c:	nop

0000000000402290 <mbrtowc@plt>:
  402290:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402294:	ldr	x17, [x16]
  402298:	add	x16, x16, #0x0
  40229c:	br	x17

00000000004022a0 <memcpy@plt>:
  4022a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4022a4:	ldr	x17, [x16, #8]
  4022a8:	add	x16, x16, #0x8
  4022ac:	br	x17

00000000004022b0 <_exit@plt>:
  4022b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4022b4:	ldr	x17, [x16, #16]
  4022b8:	add	x16, x16, #0x10
  4022bc:	br	x17

00000000004022c0 <strtoul@plt>:
  4022c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4022c4:	ldr	x17, [x16, #24]
  4022c8:	add	x16, x16, #0x18
  4022cc:	br	x17

00000000004022d0 <strlen@plt>:
  4022d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4022d4:	ldr	x17, [x16, #32]
  4022d8:	add	x16, x16, #0x20
  4022dc:	br	x17

00000000004022e0 <fputs@plt>:
  4022e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4022e4:	ldr	x17, [x16, #40]
  4022e8:	add	x16, x16, #0x28
  4022ec:	br	x17

00000000004022f0 <mbstowcs@plt>:
  4022f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4022f4:	ldr	x17, [x16, #48]
  4022f8:	add	x16, x16, #0x30
  4022fc:	br	x17

0000000000402300 <exit@plt>:
  402300:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402304:	ldr	x17, [x16, #56]
  402308:	add	x16, x16, #0x38
  40230c:	br	x17

0000000000402310 <dup@plt>:
  402310:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402314:	ldr	x17, [x16, #64]
  402318:	add	x16, x16, #0x40
  40231c:	br	x17

0000000000402320 <scols_line_refer_data@plt>:
  402320:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402324:	ldr	x17, [x16, #72]
  402328:	add	x16, x16, #0x48
  40232c:	br	x17

0000000000402330 <scols_line_get_column_cell@plt>:
  402330:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402334:	ldr	x17, [x16, #80]
  402338:	add	x16, x16, #0x50
  40233c:	br	x17

0000000000402340 <scols_table_set_name@plt>:
  402340:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402344:	ldr	x17, [x16, #88]
  402348:	add	x16, x16, #0x58
  40234c:	br	x17

0000000000402350 <strtod@plt>:
  402350:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402354:	ldr	x17, [x16, #96]
  402358:	add	x16, x16, #0x60
  40235c:	br	x17

0000000000402360 <scols_table_enable_noheadings@plt>:
  402360:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402364:	ldr	x17, [x16, #104]
  402368:	add	x16, x16, #0x68
  40236c:	br	x17

0000000000402370 <scols_column_get_header@plt>:
  402370:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402374:	ldr	x17, [x16, #112]
  402378:	add	x16, x16, #0x70
  40237c:	br	x17

0000000000402380 <scols_table_new_column@plt>:
  402380:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402384:	ldr	x17, [x16, #120]
  402388:	add	x16, x16, #0x78
  40238c:	br	x17

0000000000402390 <scols_free_iter@plt>:
  402390:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402394:	ldr	x17, [x16, #128]
  402398:	add	x16, x16, #0x80
  40239c:	br	x17

00000000004023a0 <ttyname@plt>:
  4023a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4023a4:	ldr	x17, [x16, #136]
  4023a8:	add	x16, x16, #0x88
  4023ac:	br	x17

00000000004023b0 <sprintf@plt>:
  4023b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4023b4:	ldr	x17, [x16, #144]
  4023b8:	add	x16, x16, #0x90
  4023bc:	br	x17

00000000004023c0 <__cxa_atexit@plt>:
  4023c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4023c4:	ldr	x17, [x16, #152]
  4023c8:	add	x16, x16, #0x98
  4023cc:	br	x17

00000000004023d0 <fputc@plt>:
  4023d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4023d4:	ldr	x17, [x16, #160]
  4023d8:	add	x16, x16, #0xa0
  4023dc:	br	x17

00000000004023e0 <putwchar@plt>:
  4023e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4023e4:	ldr	x17, [x16, #168]
  4023e8:	add	x16, x16, #0xa8
  4023ec:	br	x17

00000000004023f0 <scols_table_set_column_separator@plt>:
  4023f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4023f4:	ldr	x17, [x16, #176]
  4023f8:	add	x16, x16, #0xb0
  4023fc:	br	x17

0000000000402400 <snprintf@plt>:
  402400:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402404:	ldr	x17, [x16, #184]
  402408:	add	x16, x16, #0xb8
  40240c:	br	x17

0000000000402410 <localeconv@plt>:
  402410:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402414:	ldr	x17, [x16, #192]
  402418:	add	x16, x16, #0xc0
  40241c:	br	x17

0000000000402420 <stpcpy@plt>:
  402420:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402424:	ldr	x17, [x16, #200]
  402428:	add	x16, x16, #0xc8
  40242c:	br	x17

0000000000402430 <fileno@plt>:
  402430:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402434:	ldr	x17, [x16, #208]
  402438:	add	x16, x16, #0xd0
  40243c:	br	x17

0000000000402440 <wcspbrk@plt>:
  402440:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402444:	ldr	x17, [x16, #216]
  402448:	add	x16, x16, #0xd8
  40244c:	br	x17

0000000000402450 <fclose@plt>:
  402450:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402454:	ldr	x17, [x16, #224]
  402458:	add	x16, x16, #0xe0
  40245c:	br	x17

0000000000402460 <fopen@plt>:
  402460:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402464:	ldr	x17, [x16, #232]
  402468:	add	x16, x16, #0xe8
  40246c:	br	x17

0000000000402470 <malloc@plt>:
  402470:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402474:	ldr	x17, [x16, #240]
  402478:	add	x16, x16, #0xf0
  40247c:	br	x17

0000000000402480 <wcwidth@plt>:
  402480:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402484:	ldr	x17, [x16, #248]
  402488:	add	x16, x16, #0xf8
  40248c:	br	x17

0000000000402490 <scols_column_get_flags@plt>:
  402490:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402494:	ldr	x17, [x16, #256]
  402498:	add	x16, x16, #0x100
  40249c:	br	x17

00000000004024a0 <__strtol_internal@plt>:
  4024a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4024a4:	ldr	x17, [x16, #264]
  4024a8:	add	x16, x16, #0x108
  4024ac:	br	x17

00000000004024b0 <strncmp@plt>:
  4024b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4024b4:	ldr	x17, [x16, #272]
  4024b8:	add	x16, x16, #0x110
  4024bc:	br	x17

00000000004024c0 <bindtextdomain@plt>:
  4024c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4024c4:	ldr	x17, [x16, #280]
  4024c8:	add	x16, x16, #0x118
  4024cc:	br	x17

00000000004024d0 <__libc_start_main@plt>:
  4024d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4024d4:	ldr	x17, [x16, #288]
  4024d8:	add	x16, x16, #0x120
  4024dc:	br	x17

00000000004024e0 <fgetc@plt>:
  4024e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4024e4:	ldr	x17, [x16, #296]
  4024e8:	add	x16, x16, #0x128
  4024ec:	br	x17

00000000004024f0 <scols_table_get_column@plt>:
  4024f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4024f4:	ldr	x17, [x16, #304]
  4024f8:	add	x16, x16, #0x130
  4024fc:	br	x17

0000000000402500 <memset@plt>:
  402500:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402504:	ldr	x17, [x16, #312]
  402508:	add	x16, x16, #0x138
  40250c:	br	x17

0000000000402510 <scols_new_table@plt>:
  402510:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402514:	ldr	x17, [x16, #320]
  402518:	add	x16, x16, #0x140
  40251c:	br	x17

0000000000402520 <scols_column_set_flags@plt>:
  402520:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402524:	ldr	x17, [x16, #328]
  402528:	add	x16, x16, #0x148
  40252c:	br	x17

0000000000402530 <__strtoul_internal@plt>:
  402530:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402534:	ldr	x17, [x16, #336]
  402538:	add	x16, x16, #0x150
  40253c:	br	x17

0000000000402540 <calloc@plt>:
  402540:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402544:	ldr	x17, [x16, #344]
  402548:	add	x16, x16, #0x158
  40254c:	br	x17

0000000000402550 <strcasecmp@plt>:
  402550:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402554:	ldr	x17, [x16, #352]
  402558:	add	x16, x16, #0x160
  40255c:	br	x17

0000000000402560 <realloc@plt>:
  402560:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402564:	ldr	x17, [x16, #360]
  402568:	add	x16, x16, #0x168
  40256c:	br	x17

0000000000402570 <strdup@plt>:
  402570:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402574:	ldr	x17, [x16, #368]
  402578:	add	x16, x16, #0x170
  40257c:	br	x17

0000000000402580 <scols_table_new_line@plt>:
  402580:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402584:	ldr	x17, [x16, #376]
  402588:	add	x16, x16, #0x178
  40258c:	br	x17

0000000000402590 <wcstok@plt>:
  402590:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402594:	ldr	x17, [x16, #384]
  402598:	add	x16, x16, #0x180
  40259c:	br	x17

00000000004025a0 <close@plt>:
  4025a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4025a4:	ldr	x17, [x16, #392]
  4025a8:	add	x16, x16, #0x188
  4025ac:	br	x17

00000000004025b0 <scols_table_is_json@plt>:
  4025b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4025b4:	ldr	x17, [x16, #400]
  4025b8:	add	x16, x16, #0x190
  4025bc:	br	x17

00000000004025c0 <__gmon_start__@plt>:
  4025c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4025c4:	ldr	x17, [x16, #408]
  4025c8:	add	x16, x16, #0x198
  4025cc:	br	x17

00000000004025d0 <abort@plt>:
  4025d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4025d4:	ldr	x17, [x16, #416]
  4025d8:	add	x16, x16, #0x1a0
  4025dc:	br	x17

00000000004025e0 <scols_table_set_termforce@plt>:
  4025e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4025e4:	ldr	x17, [x16, #424]
  4025e8:	add	x16, x16, #0x1a8
  4025ec:	br	x17

00000000004025f0 <scols_table_get_ncols@plt>:
  4025f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4025f4:	ldr	x17, [x16, #432]
  4025f8:	add	x16, x16, #0x1b0
  4025fc:	br	x17

0000000000402600 <scols_table_enable_header_repeat@plt>:
  402600:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402604:	ldr	x17, [x16, #440]
  402608:	add	x16, x16, #0x1b8
  40260c:	br	x17

0000000000402610 <scols_table_next_line@plt>:
  402610:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402614:	ldr	x17, [x16, #448]
  402618:	add	x16, x16, #0x1c0
  40261c:	br	x17

0000000000402620 <feof@plt>:
  402620:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402624:	ldr	x17, [x16, #456]
  402628:	add	x16, x16, #0x1c8
  40262c:	br	x17

0000000000402630 <textdomain@plt>:
  402630:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402634:	ldr	x17, [x16, #464]
  402638:	add	x16, x16, #0x1d0
  40263c:	br	x17

0000000000402640 <getopt_long@plt>:
  402640:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402644:	ldr	x17, [x16, #472]
  402648:	add	x16, x16, #0x1d8
  40264c:	br	x17

0000000000402650 <strcmp@plt>:
  402650:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402654:	ldr	x17, [x16, #480]
  402658:	add	x16, x16, #0x1e0
  40265c:	br	x17

0000000000402660 <warn@plt>:
  402660:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402664:	ldr	x17, [x16, #488]
  402668:	add	x16, x16, #0x1e8
  40266c:	br	x17

0000000000402670 <__ctype_b_loc@plt>:
  402670:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402674:	ldr	x17, [x16, #496]
  402678:	add	x16, x16, #0x1f0
  40267c:	br	x17

0000000000402680 <strtol@plt>:
  402680:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402684:	ldr	x17, [x16, #504]
  402688:	add	x16, x16, #0x1f8
  40268c:	br	x17

0000000000402690 <scols_table_next_column@plt>:
  402690:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402694:	ldr	x17, [x16, #512]
  402698:	add	x16, x16, #0x200
  40269c:	br	x17

00000000004026a0 <scols_cell_get_data@plt>:
  4026a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4026a4:	ldr	x17, [x16, #520]
  4026a8:	add	x16, x16, #0x208
  4026ac:	br	x17

00000000004026b0 <free@plt>:
  4026b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4026b4:	ldr	x17, [x16, #528]
  4026b8:	add	x16, x16, #0x210
  4026bc:	br	x17

00000000004026c0 <scols_line_is_ancestor@plt>:
  4026c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4026c4:	ldr	x17, [x16, #536]
  4026c8:	add	x16, x16, #0x218
  4026cc:	br	x17

00000000004026d0 <__ctype_get_mb_cur_max@plt>:
  4026d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4026d4:	ldr	x17, [x16, #544]
  4026d8:	add	x16, x16, #0x220
  4026dc:	br	x17

00000000004026e0 <scols_table_get_nlines@plt>:
  4026e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4026e4:	ldr	x17, [x16, #552]
  4026e8:	add	x16, x16, #0x228
  4026ec:	br	x17

00000000004026f0 <scols_table_enable_json@plt>:
  4026f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4026f4:	ldr	x17, [x16, #560]
  4026f8:	add	x16, x16, #0x230
  4026fc:	br	x17

0000000000402700 <vasprintf@plt>:
  402700:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402704:	ldr	x17, [x16, #568]
  402708:	add	x16, x16, #0x238
  40270c:	br	x17

0000000000402710 <scols_table_move_column@plt>:
  402710:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402714:	ldr	x17, [x16, #576]
  402718:	add	x16, x16, #0x240
  40271c:	br	x17

0000000000402720 <scols_table_set_termwidth@plt>:
  402720:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402724:	ldr	x17, [x16, #584]
  402728:	add	x16, x16, #0x248
  40272c:	br	x17

0000000000402730 <strndup@plt>:
  402730:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402734:	ldr	x17, [x16, #592]
  402738:	add	x16, x16, #0x250
  40273c:	br	x17

0000000000402740 <strspn@plt>:
  402740:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402744:	ldr	x17, [x16, #600]
  402748:	add	x16, x16, #0x258
  40274c:	br	x17

0000000000402750 <strchr@plt>:
  402750:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402754:	ldr	x17, [x16, #608]
  402758:	add	x16, x16, #0x260
  40275c:	br	x17

0000000000402760 <fflush@plt>:
  402760:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402764:	ldr	x17, [x16, #616]
  402768:	add	x16, x16, #0x268
  40276c:	br	x17

0000000000402770 <scols_print_table@plt>:
  402770:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402774:	ldr	x17, [x16, #624]
  402778:	add	x16, x16, #0x270
  40277c:	br	x17

0000000000402780 <warnx@plt>:
  402780:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402784:	ldr	x17, [x16, #632]
  402788:	add	x16, x16, #0x278
  40278c:	br	x17

0000000000402790 <memchr@plt>:
  402790:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402794:	ldr	x17, [x16, #640]
  402798:	add	x16, x16, #0x280
  40279c:	br	x17

00000000004027a0 <isatty@plt>:
  4027a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4027a4:	ldr	x17, [x16, #648]
  4027a8:	add	x16, x16, #0x288
  4027ac:	br	x17

00000000004027b0 <wcstombs@plt>:
  4027b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4027b4:	ldr	x17, [x16, #656]
  4027b8:	add	x16, x16, #0x290
  4027bc:	br	x17

00000000004027c0 <fputws@plt>:
  4027c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4027c4:	ldr	x17, [x16, #664]
  4027c8:	add	x16, x16, #0x298
  4027cc:	br	x17

00000000004027d0 <scols_new_iter@plt>:
  4027d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4027d4:	ldr	x17, [x16, #672]
  4027d8:	add	x16, x16, #0x2a0
  4027dc:	br	x17

00000000004027e0 <dcgettext@plt>:
  4027e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4027e4:	ldr	x17, [x16, #680]
  4027e8:	add	x16, x16, #0x2a8
  4027ec:	br	x17

00000000004027f0 <scols_line_add_child@plt>:
  4027f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4027f4:	ldr	x17, [x16, #688]
  4027f8:	add	x16, x16, #0x2b0
  4027fc:	br	x17

0000000000402800 <errx@plt>:
  402800:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402804:	ldr	x17, [x16, #696]
  402808:	add	x16, x16, #0x2b8
  40280c:	br	x17

0000000000402810 <iswprint@plt>:
  402810:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402814:	ldr	x17, [x16, #704]
  402818:	add	x16, x16, #0x2c0
  40281c:	br	x17

0000000000402820 <strcspn@plt>:
  402820:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402824:	ldr	x17, [x16, #712]
  402828:	add	x16, x16, #0x2c8
  40282c:	br	x17

0000000000402830 <printf@plt>:
  402830:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402834:	ldr	x17, [x16, #720]
  402838:	add	x16, x16, #0x2d0
  40283c:	br	x17

0000000000402840 <__assert_fail@plt>:
  402840:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402844:	ldr	x17, [x16, #728]
  402848:	add	x16, x16, #0x2d8
  40284c:	br	x17

0000000000402850 <__errno_location@plt>:
  402850:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402854:	ldr	x17, [x16, #736]
  402858:	add	x16, x16, #0x2e0
  40285c:	br	x17

0000000000402860 <getenv@plt>:
  402860:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402864:	ldr	x17, [x16, #744]
  402868:	add	x16, x16, #0x2e8
  40286c:	br	x17

0000000000402870 <scols_table_enable_noencoding@plt>:
  402870:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402874:	ldr	x17, [x16, #752]
  402878:	add	x16, x16, #0x2f0
  40287c:	br	x17

0000000000402880 <__getdelim@plt>:
  402880:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402884:	ldr	x17, [x16, #760]
  402888:	add	x16, x16, #0x2f8
  40288c:	br	x17

0000000000402890 <fprintf@plt>:
  402890:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402894:	ldr	x17, [x16, #768]
  402898:	add	x16, x16, #0x300
  40289c:	br	x17

00000000004028a0 <scols_init_debug@plt>:
  4028a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4028a4:	ldr	x17, [x16, #776]
  4028a8:	add	x16, x16, #0x308
  4028ac:	br	x17

00000000004028b0 <err@plt>:
  4028b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4028b4:	ldr	x17, [x16, #784]
  4028b8:	add	x16, x16, #0x310
  4028bc:	br	x17

00000000004028c0 <ioctl@plt>:
  4028c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4028c4:	ldr	x17, [x16, #792]
  4028c8:	add	x16, x16, #0x318
  4028cc:	br	x17

00000000004028d0 <setlocale@plt>:
  4028d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4028d4:	ldr	x17, [x16, #800]
  4028d8:	add	x16, x16, #0x320
  4028dc:	br	x17

00000000004028e0 <ferror@plt>:
  4028e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4028e4:	ldr	x17, [x16, #808]
  4028e8:	add	x16, x16, #0x328
  4028ec:	br	x17

00000000004028f0 <scols_reset_iter@plt>:
  4028f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4028f4:	ldr	x17, [x16, #816]
  4028f8:	add	x16, x16, #0x330
  4028fc:	br	x17

Disassembly of section .text:

0000000000402900 <.text>:
  402900:	mov	x29, #0x0                   	// #0
  402904:	mov	x30, #0x0                   	// #0
  402908:	mov	x5, x0
  40290c:	ldr	x1, [sp]
  402910:	add	x2, sp, #0x8
  402914:	mov	x6, sp
  402918:	movz	x0, #0x0, lsl #48
  40291c:	movk	x0, #0x0, lsl #32
  402920:	movk	x0, #0x40, lsl #16
  402924:	movk	x0, #0x2a0c
  402928:	movz	x3, #0x0, lsl #48
  40292c:	movk	x3, #0x0, lsl #32
  402930:	movk	x3, #0x40, lsl #16
  402934:	movk	x3, #0x7c50
  402938:	movz	x4, #0x0, lsl #48
  40293c:	movk	x4, #0x0, lsl #32
  402940:	movk	x4, #0x40, lsl #16
  402944:	movk	x4, #0x7cd0
  402948:	bl	4024d0 <__libc_start_main@plt>
  40294c:	bl	4025d0 <abort@plt>
  402950:	adrp	x0, 419000 <scols_reset_iter@plt+0x16710>
  402954:	ldr	x0, [x0, #4064]
  402958:	cbz	x0, 402960 <scols_reset_iter@plt+0x70>
  40295c:	b	4025c0 <__gmon_start__@plt>
  402960:	ret
  402964:	nop
  402968:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17710>
  40296c:	add	x0, x0, #0x350
  402970:	adrp	x1, 41a000 <scols_reset_iter@plt+0x17710>
  402974:	add	x1, x1, #0x350
  402978:	cmp	x1, x0
  40297c:	b.eq	402994 <scols_reset_iter@plt+0xa4>  // b.none
  402980:	adrp	x1, 407000 <scols_reset_iter@plt+0x4710>
  402984:	ldr	x1, [x1, #3328]
  402988:	cbz	x1, 402994 <scols_reset_iter@plt+0xa4>
  40298c:	mov	x16, x1
  402990:	br	x16
  402994:	ret
  402998:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17710>
  40299c:	add	x0, x0, #0x350
  4029a0:	adrp	x1, 41a000 <scols_reset_iter@plt+0x17710>
  4029a4:	add	x1, x1, #0x350
  4029a8:	sub	x1, x1, x0
  4029ac:	lsr	x2, x1, #63
  4029b0:	add	x1, x2, x1, asr #3
  4029b4:	cmp	xzr, x1, asr #1
  4029b8:	asr	x1, x1, #1
  4029bc:	b.eq	4029d4 <scols_reset_iter@plt+0xe4>  // b.none
  4029c0:	adrp	x2, 407000 <scols_reset_iter@plt+0x4710>
  4029c4:	ldr	x2, [x2, #3336]
  4029c8:	cbz	x2, 4029d4 <scols_reset_iter@plt+0xe4>
  4029cc:	mov	x16, x2
  4029d0:	br	x16
  4029d4:	ret
  4029d8:	stp	x29, x30, [sp, #-32]!
  4029dc:	mov	x29, sp
  4029e0:	str	x19, [sp, #16]
  4029e4:	adrp	x19, 41a000 <scols_reset_iter@plt+0x17710>
  4029e8:	ldrb	w0, [x19, #896]
  4029ec:	cbnz	w0, 4029fc <scols_reset_iter@plt+0x10c>
  4029f0:	bl	402968 <scols_reset_iter@plt+0x78>
  4029f4:	mov	w0, #0x1                   	// #1
  4029f8:	strb	w0, [x19, #896]
  4029fc:	ldr	x19, [sp, #16]
  402a00:	ldp	x29, x30, [sp], #32
  402a04:	ret
  402a08:	b	402998 <scols_reset_iter@plt+0xa8>
  402a0c:	sub	sp, sp, #0x190
  402a10:	stp	x22, x21, [sp, #368]
  402a14:	mov	x22, x1
  402a18:	movi	v0.2d, #0x0
  402a1c:	mov	x8, #0xffffffffffffffff    	// #-1
  402a20:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402a24:	stp	x24, x23, [sp, #352]
  402a28:	mov	w23, w0
  402a2c:	stp	q0, q0, [sp, #112]
  402a30:	str	x8, [sp, #120]
  402a34:	mov	w8, #0x1                   	// #1
  402a38:	add	x1, x1, #0x9b0
  402a3c:	mov	w0, #0x6                   	// #6
  402a40:	stp	x29, x30, [sp, #304]
  402a44:	stp	x28, x27, [sp, #320]
  402a48:	stp	x26, x25, [sp, #336]
  402a4c:	stp	x20, x19, [sp, #384]
  402a50:	add	x29, sp, #0x130
  402a54:	str	wzr, [sp, #104]
  402a58:	stp	q0, q0, [sp, #240]
  402a5c:	stp	q0, q0, [sp, #208]
  402a60:	stp	q0, q0, [sp, #176]
  402a64:	stp	q0, q0, [sp, #144]
  402a68:	strb	w8, [sp, #264]
  402a6c:	str	xzr, [sp, #96]
  402a70:	bl	4028d0 <setlocale@plt>
  402a74:	adrp	x19, 408000 <scols_reset_iter@plt+0x5710>
  402a78:	add	x19, x19, #0x295
  402a7c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402a80:	add	x1, x1, #0x2a0
  402a84:	mov	x0, x19
  402a88:	bl	4024c0 <bindtextdomain@plt>
  402a8c:	mov	x0, x19
  402a90:	bl	402630 <textdomain@plt>
  402a94:	adrp	x0, 403000 <scols_reset_iter@plt+0x710>
  402a98:	add	x0, x0, #0xfbc
  402a9c:	bl	407cd8 <scols_reset_iter@plt+0x53e8>
  402aa0:	adrp	x8, 408000 <scols_reset_iter@plt+0x5710>
  402aa4:	adrp	x0, 408000 <scols_reset_iter@plt+0x5710>
  402aa8:	add	x8, x8, #0x2b2
  402aac:	add	x0, x0, #0x2b5
  402ab0:	str	x8, [sp, #232]
  402ab4:	bl	4037ec <scols_reset_iter@plt+0xefc>
  402ab8:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  402abc:	adrp	x3, 407000 <scols_reset_iter@plt+0x4710>
  402ac0:	mov	x24, x0
  402ac4:	str	x0, [sp, #224]
  402ac8:	add	x2, x2, #0x2b8
  402acc:	add	x3, x3, #0xdf8
  402ad0:	mov	w0, w23
  402ad4:	mov	x1, x22
  402ad8:	mov	x4, xzr
  402adc:	bl	402640 <getopt_long@plt>
  402ae0:	cmn	w0, #0x1
  402ae4:	b.eq	402dd8 <scols_reset_iter@plt+0x4e8>  // b.none
  402ae8:	adrp	x19, 407000 <scols_reset_iter@plt+0x4710>
  402aec:	adrp	x27, 408000 <scols_reset_iter@plt+0x5710>
  402af0:	mov	w28, wzr
  402af4:	mov	w21, #0x1                   	// #1
  402af8:	mov	x8, #0xffffffffffffffff    	// #-1
  402afc:	add	x19, x19, #0xd8a
  402b00:	adrp	x20, 41a000 <scols_reset_iter@plt+0x17710>
  402b04:	add	x27, x27, #0xf8
  402b08:	add	x26, sp, #0x60
  402b0c:	stp	xzr, xzr, [sp, #80]
  402b10:	stp	xzr, xzr, [sp, #24]
  402b14:	stp	xzr, xzr, [sp, #8]
  402b18:	str	xzr, [sp]
  402b1c:	stp	xzr, xzr, [sp, #40]
  402b20:	stp	xzr, xzr, [sp, #64]
  402b24:	str	x8, [sp, #56]
  402b28:	b	402b60 <scols_reset_iter@plt+0x270>
  402b2c:	ldr	x8, [x20, #856]
  402b30:	str	x8, [sp, #72]
  402b34:	str	x8, [sp, #216]
  402b38:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  402b3c:	adrp	x3, 407000 <scols_reset_iter@plt+0x4710>
  402b40:	mov	w0, w23
  402b44:	mov	x1, x22
  402b48:	add	x2, x2, #0x2b8
  402b4c:	add	x3, x3, #0xdf8
  402b50:	mov	x4, xzr
  402b54:	bl	402640 <getopt_long@plt>
  402b58:	cmn	w0, #0x1
  402b5c:	b.eq	402d9c <scols_reset_iter@plt+0x4ac>  // b.none
  402b60:	cmp	w0, #0x4a
  402b64:	b.lt	402bd8 <scols_reset_iter@plt+0x2e8>  // b.tstop
  402b68:	mov	x8, xzr
  402b6c:	mov	w9, #0x4a                  	// #74
  402b70:	mov	x25, x27
  402b74:	cbz	w9, 402bbc <scols_reset_iter@plt+0x2cc>
  402b78:	cmp	w9, w0
  402b7c:	b.gt	402bbc <scols_reset_iter@plt+0x2cc>
  402b80:	mov	w10, #0x4                   	// #4
  402b84:	cmp	w9, w0
  402b88:	b.eq	402ba4 <scols_reset_iter@plt+0x2b4>  // b.none
  402b8c:	ldr	w9, [x25, x10]
  402b90:	cbz	w9, 402bbc <scols_reset_iter@plt+0x2cc>
  402b94:	cmp	w9, w0
  402b98:	add	x10, x10, #0x4
  402b9c:	b.le	402b84 <scols_reset_iter@plt+0x294>
  402ba0:	b	402bbc <scols_reset_iter@plt+0x2cc>
  402ba4:	ldr	w9, [x26, x8, lsl #2]
  402ba8:	cbz	w9, 402bb8 <scols_reset_iter@plt+0x2c8>
  402bac:	cmp	w9, w0
  402bb0:	b.eq	402bbc <scols_reset_iter@plt+0x2cc>  // b.none
  402bb4:	b	40350c <scols_reset_iter@plt+0xc1c>
  402bb8:	str	w0, [x26, x8, lsl #2]
  402bbc:	add	x8, x8, #0x1
  402bc0:	lsl	x9, x8, #6
  402bc4:	ldr	w9, [x27, x9]
  402bc8:	cbz	w9, 402bd8 <scols_reset_iter@plt+0x2e8>
  402bcc:	cmp	w9, w0
  402bd0:	add	x25, x25, #0x40
  402bd4:	b.le	402b74 <scols_reset_iter@plt+0x284>
  402bd8:	sub	w8, w0, #0x45
  402bdc:	cmp	w8, #0x33
  402be0:	b.hi	4036d0 <scols_reset_iter@plt+0xde0>  // b.pmore
  402be4:	adr	x9, 402b2c <scols_reset_iter@plt+0x23c>
  402be8:	ldrh	w10, [x19, x8, lsl #1]
  402bec:	add	x9, x9, x10, lsl #2
  402bf0:	br	x9
  402bf4:	ldr	x8, [x20, #856]
  402bf8:	str	x8, [sp, #24]
  402bfc:	str	x8, [sp, #176]
  402c00:	b	402b38 <scols_reset_iter@plt+0x248>
  402c04:	ldr	x8, [x20, #856]
  402c08:	str	x8, [sp]
  402c0c:	str	x8, [sp, #184]
  402c10:	b	402b38 <scols_reset_iter@plt+0x248>
  402c14:	ldr	x8, [x20, #856]
  402c18:	str	x8, [sp, #16]
  402c1c:	str	x8, [sp, #168]
  402c20:	b	402b38 <scols_reset_iter@plt+0x248>
  402c24:	ldr	x8, [x20, #856]
  402c28:	str	x8, [sp, #48]
  402c2c:	str	x8, [sp, #144]
  402c30:	b	402b38 <scols_reset_iter@plt+0x248>
  402c34:	orr	w21, w21, #0x10
  402c38:	strb	w21, [sp, #264]
  402c3c:	b	402b38 <scols_reset_iter@plt+0x248>
  402c40:	mov	x0, x24
  402c44:	bl	4026b0 <free@plt>
  402c48:	ldr	x0, [x20, #856]
  402c4c:	bl	4037ec <scols_reset_iter@plt+0xefc>
  402c50:	and	w21, w21, #0xfffffffe
  402c54:	mov	x24, x0
  402c58:	str	x0, [sp, #224]
  402c5c:	strb	w21, [sp, #264]
  402c60:	b	402b38 <scols_reset_iter@plt+0x248>
  402c64:	ldr	x8, [x20, #856]
  402c68:	str	x8, [sp, #40]
  402c6c:	str	x8, [sp, #152]
  402c70:	b	402b38 <scols_reset_iter@plt+0x248>
  402c74:	ldr	x8, [x20, #856]
  402c78:	str	x8, [sp, #32]
  402c7c:	str	x8, [sp, #160]
  402c80:	b	402b38 <scols_reset_iter@plt+0x248>
  402c84:	mov	x25, x24
  402c88:	mov	w24, w23
  402c8c:	mov	x23, x22
  402c90:	mov	w22, w28
  402c94:	ldr	x28, [x20, #856]
  402c98:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402c9c:	mov	w2, #0x5                   	// #5
  402ca0:	mov	x0, xzr
  402ca4:	add	x1, x1, #0x2f6
  402ca8:	bl	4027e0 <dcgettext@plt>
  402cac:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402cb0:	mov	x19, x0
  402cb4:	mov	x0, x28
  402cb8:	add	x1, x1, #0x445
  402cbc:	bl	407448 <scols_reset_iter@plt+0x4b58>
  402cc0:	cbz	x0, 403748 <scols_reset_iter@plt+0xe58>
  402cc4:	adrp	x19, 407000 <scols_reset_iter@plt+0x4710>
  402cc8:	str	x0, [sp, #88]
  402ccc:	str	x0, [sp, #136]
  402cd0:	mov	w28, w22
  402cd4:	mov	x22, x23
  402cd8:	mov	w23, w24
  402cdc:	mov	x24, x25
  402ce0:	add	x19, x19, #0xd8a
  402ce4:	b	402b38 <scols_reset_iter@plt+0x248>
  402ce8:	orr	w21, w21, #0x8
  402cec:	strb	w21, [sp, #264]
  402cf0:	b	402b38 <scols_reset_iter@plt+0x248>
  402cf4:	mov	w28, #0x2                   	// #2
  402cf8:	str	w28, [sp, #112]
  402cfc:	b	402b38 <scols_reset_iter@plt+0x248>
  402d00:	ldr	x8, [x20, #856]
  402d04:	str	x8, [sp, #8]
  402d08:	str	x8, [sp, #192]
  402d0c:	b	402b38 <scols_reset_iter@plt+0x248>
  402d10:	orr	w21, w21, #0x2
  402d14:	mov	w28, #0x2                   	// #2
  402d18:	strb	w21, [sp, #264]
  402d1c:	str	w28, [sp, #112]
  402d20:	b	402b38 <scols_reset_iter@plt+0x248>
  402d24:	ldr	x25, [x20, #856]
  402d28:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402d2c:	mov	w2, #0x5                   	// #5
  402d30:	mov	x0, xzr
  402d34:	add	x1, x1, #0x2dd
  402d38:	bl	4027e0 <dcgettext@plt>
  402d3c:	mov	x1, x0
  402d40:	mov	x0, x25
  402d44:	bl	405844 <scols_reset_iter@plt+0x2f54>
  402d48:	mov	w8, w0
  402d4c:	str	x8, [sp, #56]
  402d50:	str	x8, [sp, #120]
  402d54:	b	402b38 <scols_reset_iter@plt+0x248>
  402d58:	ldr	x8, [x20, #856]
  402d5c:	str	x8, [sp, #232]
  402d60:	b	402b38 <scols_reset_iter@plt+0x248>
  402d64:	orr	w21, w21, #0x4
  402d68:	strb	w21, [sp, #264]
  402d6c:	b	402b38 <scols_reset_iter@plt+0x248>
  402d70:	mov	w28, #0x1                   	// #1
  402d74:	str	w28, [sp, #112]
  402d78:	b	402b38 <scols_reset_iter@plt+0x248>
  402d7c:	ldr	x8, [x20, #856]
  402d80:	str	x8, [sp, #64]
  402d84:	str	x8, [sp, #200]
  402d88:	b	402b38 <scols_reset_iter@plt+0x248>
  402d8c:	ldr	x8, [x20, #856]
  402d90:	str	x8, [sp, #80]
  402d94:	str	x8, [sp, #208]
  402d98:	b	402b38 <scols_reset_iter@plt+0x248>
  402d9c:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402da0:	ldrsw	x8, [x8, #864]
  402da4:	ldp	x9, x27, [sp, #56]
  402da8:	ldp	x25, x19, [sp, #72]
  402dac:	add	x20, x22, x8, lsl #3
  402db0:	cmn	x9, #0x1
  402db4:	b.eq	402e0c <scols_reset_iter@plt+0x51c>  // b.none
  402db8:	cbz	x27, 402e20 <scols_reset_iter@plt+0x530>
  402dbc:	mov	w8, #0x2                   	// #2
  402dc0:	str	w8, [sp, #112]
  402dc4:	cbz	x25, 402dcc <scols_reset_iter@plt+0x4dc>
  402dc8:	cbnz	x19, 402e28 <scols_reset_iter@plt+0x538>
  402dcc:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402dd0:	add	x1, x1, #0x358
  402dd4:	b	403788 <scols_reset_iter@plt+0xe98>
  402dd8:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402ddc:	ldrsw	x8, [x8, #864]
  402de0:	mov	x27, xzr
  402de4:	mov	x25, xzr
  402de8:	mov	x19, xzr
  402dec:	mov	w28, wzr
  402df0:	stp	xzr, xzr, [sp, #40]
  402df4:	stp	xzr, xzr, [sp]
  402df8:	stp	xzr, xzr, [sp, #16]
  402dfc:	str	xzr, [sp, #32]
  402e00:	str	xzr, [sp, #88]
  402e04:	add	x20, x22, x8, lsl #3
  402e08:	mov	w21, #0x1                   	// #1
  402e0c:	mov	w0, #0x50                  	// #80
  402e10:	bl	406c68 <scols_reset_iter@plt+0x4378>
  402e14:	sxtw	x8, w0
  402e18:	str	x8, [sp, #120]
  402e1c:	cbnz	x27, 402dbc <scols_reset_iter@plt+0x4cc>
  402e20:	cmp	w28, #0x2
  402e24:	b.ne	402e34 <scols_reset_iter@plt+0x544>  // b.any
  402e28:	ldr	x8, [sp, #88]
  402e2c:	cbnz	x8, 402e78 <scols_reset_iter@plt+0x588>
  402e30:	b	402e74 <scols_reset_iter@plt+0x584>
  402e34:	ldr	x8, [sp, #88]
  402e38:	ldr	x9, [sp, #40]
  402e3c:	cbnz	x9, 40373c <scols_reset_iter@plt+0xe4c>
  402e40:	ldr	x9, [sp, #48]
  402e44:	cbnz	x9, 40373c <scols_reset_iter@plt+0xe4c>
  402e48:	ldr	x9, [sp]
  402e4c:	cbnz	x9, 40373c <scols_reset_iter@plt+0xe4c>
  402e50:	ldr	x9, [sp, #8]
  402e54:	cbnz	x9, 40373c <scols_reset_iter@plt+0xe4c>
  402e58:	ldr	x9, [sp, #16]
  402e5c:	cbnz	x9, 40373c <scols_reset_iter@plt+0xe4c>
  402e60:	ldr	x9, [sp, #24]
  402e64:	cbnz	x9, 40373c <scols_reset_iter@plt+0xe4c>
  402e68:	ldr	x9, [sp, #32]
  402e6c:	cbnz	x9, 40373c <scols_reset_iter@plt+0xe4c>
  402e70:	cbnz	x8, 40373c <scols_reset_iter@plt+0xe4c>
  402e74:	tbnz	w21, #1, 403780 <scols_reset_iter@plt+0xe90>
  402e78:	ldr	x0, [x20]
  402e7c:	cbz	x0, 402ee4 <scols_reset_iter@plt+0x5f4>
  402e80:	add	x19, x20, #0x8
  402e84:	adrp	x20, 408000 <scols_reset_iter@plt+0x5710>
  402e88:	adrp	x21, 408000 <scols_reset_iter@plt+0x5710>
  402e8c:	mov	w24, wzr
  402e90:	add	x20, x20, #0x22e
  402e94:	add	x21, x21, #0x43d
  402e98:	b	402ebc <scols_reset_iter@plt+0x5cc>
  402e9c:	mov	x22, x0
  402ea0:	add	x0, sp, #0x70
  402ea4:	mov	x1, x22
  402ea8:	bl	403be4 <scols_reset_iter@plt+0x12f4>
  402eac:	mov	x0, x22
  402eb0:	bl	402450 <fclose@plt>
  402eb4:	ldr	x0, [x19], #8
  402eb8:	cbz	x0, 402ef8 <scols_reset_iter@plt+0x608>
  402ebc:	mov	x1, x20
  402ec0:	bl	402460 <fopen@plt>
  402ec4:	cbnz	x0, 402e9c <scols_reset_iter@plt+0x5ac>
  402ec8:	ldur	x1, [x19, #-8]
  402ecc:	mov	x0, x21
  402ed0:	bl	402660 <warn@plt>
  402ed4:	add	w24, w24, #0x1
  402ed8:	ldr	x0, [x19], #8
  402edc:	cbnz	x0, 402ebc <scols_reset_iter@plt+0x5cc>
  402ee0:	b	402ef8 <scols_reset_iter@plt+0x608>
  402ee4:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402ee8:	ldr	x1, [x8, #880]
  402eec:	add	x0, sp, #0x70
  402ef0:	bl	403be4 <scols_reset_iter@plt+0x12f4>
  402ef4:	mov	w24, wzr
  402ef8:	ldr	w9, [sp, #112]
  402efc:	cmp	w9, #0x2
  402f00:	b.ne	4031a0 <scols_reset_iter@plt+0x8b0>  // b.any
  402f04:	ldr	x20, [sp, #128]
  402f08:	cbz	x20, 4034e4 <scols_reset_iter@plt+0xbf4>
  402f0c:	mov	x0, x20
  402f10:	bl	4026e0 <scols_table_get_nlines@plt>
  402f14:	cbz	x0, 4034e4 <scols_reset_iter@plt+0xbf4>
  402f18:	ldr	x1, [sp, #120]
  402f1c:	mov	x0, x20
  402f20:	bl	402720 <scols_table_set_termwidth@plt>
  402f24:	mov	w1, #0x2                   	// #2
  402f28:	mov	x0, x20
  402f2c:	bl	4025e0 <scols_table_set_termforce@plt>
  402f30:	ldr	x19, [sp, #160]
  402f34:	cbz	x19, 402f60 <scols_reset_iter@plt+0x670>
  402f38:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402f3c:	add	x1, x1, #0xb5b
  402f40:	mov	w2, #0x5                   	// #5
  402f44:	mov	x0, xzr
  402f48:	bl	4027e0 <dcgettext@plt>
  402f4c:	mov	x3, x0
  402f50:	add	x0, sp, #0x70
  402f54:	mov	w2, #0x4                   	// #4
  402f58:	mov	x1, x19
  402f5c:	bl	4041d8 <scols_reset_iter@plt+0x18e8>
  402f60:	ldr	x19, [sp, #168]
  402f64:	cbz	x19, 402f90 <scols_reset_iter@plt+0x6a0>
  402f68:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402f6c:	add	x1, x1, #0xb7e
  402f70:	mov	w2, #0x5                   	// #5
  402f74:	mov	x0, xzr
  402f78:	bl	4027e0 <dcgettext@plt>
  402f7c:	mov	x3, x0
  402f80:	add	x0, sp, #0x70
  402f84:	mov	w2, #0x1                   	// #1
  402f88:	mov	x1, x19
  402f8c:	bl	4041d8 <scols_reset_iter@plt+0x18e8>
  402f90:	ldr	x19, [sp, #176]
  402f94:	cbz	x19, 402fc0 <scols_reset_iter@plt+0x6d0>
  402f98:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402f9c:	add	x1, x1, #0xba1
  402fa0:	mov	w2, #0x5                   	// #5
  402fa4:	mov	x0, xzr
  402fa8:	bl	4027e0 <dcgettext@plt>
  402fac:	mov	x3, x0
  402fb0:	add	x0, sp, #0x70
  402fb4:	mov	w2, #0x10                  	// #16
  402fb8:	mov	x1, x19
  402fbc:	bl	4041d8 <scols_reset_iter@plt+0x18e8>
  402fc0:	ldr	x19, [sp, #184]
  402fc4:	cbz	x19, 402ff0 <scols_reset_iter@plt+0x700>
  402fc8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402fcc:	add	x1, x1, #0xbc8
  402fd0:	mov	w2, #0x5                   	// #5
  402fd4:	mov	x0, xzr
  402fd8:	bl	4027e0 <dcgettext@plt>
  402fdc:	mov	x3, x0
  402fe0:	add	x0, sp, #0x70
  402fe4:	mov	w2, #0x40                  	// #64
  402fe8:	mov	x1, x19
  402fec:	bl	4041d8 <scols_reset_iter@plt+0x18e8>
  402ff0:	ldr	x19, [sp, #192]
  402ff4:	cbz	x19, 403020 <scols_reset_iter@plt+0x730>
  402ff8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402ffc:	add	x1, x1, #0xbea
  403000:	mov	w2, #0x5                   	// #5
  403004:	mov	x0, xzr
  403008:	bl	4027e0 <dcgettext@plt>
  40300c:	mov	x3, x0
  403010:	add	x0, sp, #0x70
  403014:	mov	w2, #0x20                  	// #32
  403018:	mov	x1, x19
  40301c:	bl	4041d8 <scols_reset_iter@plt+0x18e8>
  403020:	ldr	x8, [sp, #176]
  403024:	cbnz	x8, 40309c <scols_reset_iter@plt+0x7ac>
  403028:	mov	w0, wzr
  40302c:	bl	4027d0 <scols_new_iter@plt>
  403030:	cbz	x0, 4037e4 <scols_reset_iter@plt+0xef4>
  403034:	mov	x19, x0
  403038:	ldr	x0, [sp, #128]
  40303c:	sub	x2, x29, #0x10
  403040:	mov	x1, x19
  403044:	bl	402690 <scols_table_next_column@plt>
  403048:	mov	x20, xzr
  40304c:	cbnz	w0, 40307c <scols_reset_iter@plt+0x78c>
  403050:	ldur	x0, [x29, #-16]
  403054:	bl	402490 <scols_column_get_flags@plt>
  403058:	ldr	x8, [sp, #128]
  40305c:	ldur	x9, [x29, #-16]
  403060:	tst	w0, #0x20
  403064:	sub	x2, x29, #0x10
  403068:	mov	x0, x8
  40306c:	mov	x1, x19
  403070:	csel	x20, x9, x20, eq  // eq = none
  403074:	bl	402690 <scols_table_next_column@plt>
  403078:	cbz	w0, 403050 <scols_reset_iter@plt+0x760>
  40307c:	mov	x0, x19
  403080:	bl	402390 <scols_free_iter@plt>
  403084:	cbz	x20, 40309c <scols_reset_iter@plt+0x7ac>
  403088:	mov	x0, x20
  40308c:	bl	402490 <scols_column_get_flags@plt>
  403090:	orr	w1, w0, #0x10
  403094:	mov	x0, x20
  403098:	bl	402520 <scols_column_set_flags@plt>
  40309c:	ldr	x1, [sp, #200]
  4030a0:	cbz	x1, 403408 <scols_reset_iter@plt+0xb18>
  4030a4:	add	x0, sp, #0x70
  4030a8:	bl	40435c <scols_reset_iter@plt+0x1a6c>
  4030ac:	ldr	x1, [sp, #216]
  4030b0:	mov	x21, x0
  4030b4:	add	x0, sp, #0x70
  4030b8:	bl	40435c <scols_reset_iter@plt+0x1a6c>
  4030bc:	ldr	x1, [sp, #208]
  4030c0:	mov	x19, x0
  4030c4:	add	x0, sp, #0x70
  4030c8:	bl	40435c <scols_reset_iter@plt+0x1a6c>
  4030cc:	cbz	x21, 403408 <scols_reset_iter@plt+0xb18>
  4030d0:	cbz	x19, 403408 <scols_reset_iter@plt+0xb18>
  4030d4:	mov	x20, x0
  4030d8:	cbz	x0, 403408 <scols_reset_iter@plt+0xb18>
  4030dc:	mov	x0, x21
  4030e0:	bl	402490 <scols_column_get_flags@plt>
  4030e4:	orr	w1, w0, #0x2
  4030e8:	mov	x0, x21
  4030ec:	bl	402520 <scols_column_set_flags@plt>
  4030f0:	mov	w0, wzr
  4030f4:	bl	4027d0 <scols_new_iter@plt>
  4030f8:	mov	x21, x0
  4030fc:	mov	w0, wzr
  403100:	bl	4027d0 <scols_new_iter@plt>
  403104:	cbz	x21, 4037a0 <scols_reset_iter@plt+0xeb0>
  403108:	mov	x22, x0
  40310c:	cbz	x0, 4037a0 <scols_reset_iter@plt+0xeb0>
  403110:	ldr	x0, [sp, #128]
  403114:	sub	x2, x29, #0x10
  403118:	mov	x1, x22
  40311c:	bl	402610 <scols_table_next_line@plt>
  403120:	cbnz	w0, 4033f8 <scols_reset_iter@plt+0xb08>
  403124:	ldur	x0, [x29, #-16]
  403128:	mov	x1, x20
  40312c:	bl	402330 <scols_line_get_column_cell@plt>
  403130:	cbz	x0, 403110 <scols_reset_iter@plt+0x820>
  403134:	bl	4026a0 <scols_cell_get_data@plt>
  403138:	cbz	x0, 403110 <scols_reset_iter@plt+0x820>
  40313c:	mov	x23, x0
  403140:	mov	x0, x21
  403144:	mov	w1, wzr
  403148:	bl	4028f0 <scols_reset_iter@plt>
  40314c:	ldr	x0, [sp, #128]
  403150:	sub	x2, x29, #0x18
  403154:	mov	x1, x21
  403158:	bl	402610 <scols_table_next_line@plt>
  40315c:	cbnz	w0, 403110 <scols_reset_iter@plt+0x820>
  403160:	ldur	x0, [x29, #-24]
  403164:	mov	x1, x19
  403168:	bl	402330 <scols_line_get_column_cell@plt>
  40316c:	cbz	x0, 40314c <scols_reset_iter@plt+0x85c>
  403170:	bl	4026a0 <scols_cell_get_data@plt>
  403174:	cbz	x0, 40314c <scols_reset_iter@plt+0x85c>
  403178:	mov	x1, x0
  40317c:	mov	x0, x23
  403180:	bl	402650 <strcmp@plt>
  403184:	cbnz	w0, 40314c <scols_reset_iter@plt+0x85c>
  403188:	ldp	x0, x1, [x29, #-24]
  40318c:	bl	4026c0 <scols_line_is_ancestor@plt>
  403190:	cbnz	w0, 40314c <scols_reset_iter@plt+0x85c>
  403194:	ldp	x1, x0, [x29, #-24]
  403198:	bl	4027f0 <scols_line_add_child@plt>
  40319c:	b	40314c <scols_reset_iter@plt+0x85c>
  4031a0:	ldr	x20, [sp, #248]
  4031a4:	cbz	x20, 403778 <scols_reset_iter@plt+0xe88>
  4031a8:	ldr	x10, [sp, #256]
  4031ac:	ldr	x8, [sp, #120]
  4031b0:	cmp	x10, x8
  4031b4:	b.cs	4031d4 <scols_reset_iter@plt+0x8e4>  // b.hs, b.nlast
  4031b8:	cbz	w9, 4032f0 <scols_reset_iter@plt+0xa00>
  4031bc:	cmp	w9, #0x1
  4031c0:	b.eq	403208 <scols_reset_iter@plt+0x918>  // b.none
  4031c4:	cmp	w9, #0x3
  4031c8:	b.ne	4034e4 <scols_reset_iter@plt+0xbf4>  // b.any
  4031cc:	cbnz	w20, 4031e0 <scols_reset_iter@plt+0x8f0>
  4031d0:	b	4034e4 <scols_reset_iter@plt+0xbf4>
  4031d4:	mov	w8, #0x3                   	// #3
  4031d8:	str	w8, [sp, #112]
  4031dc:	cbz	w20, 4034e4 <scols_reset_iter@plt+0xbf4>
  4031e0:	ldr	x19, [sp, #240]
  4031e4:	adrp	x21, 41a000 <scols_reset_iter@plt+0x17710>
  4031e8:	ldr	x0, [x19], #8
  4031ec:	ldr	x1, [x21, #872]
  4031f0:	sub	w20, w20, #0x1
  4031f4:	bl	4027c0 <fputws@plt>
  4031f8:	mov	w0, #0xa                   	// #10
  4031fc:	bl	4023e0 <putwchar@plt>
  403200:	cbnz	w20, 4031e8 <scols_reset_iter@plt+0x8f8>
  403204:	b	4034e4 <scols_reset_iter@plt+0xbf4>
  403208:	ldr	x22, [sp, #240]
  40320c:	add	x9, x10, #0x8
  403210:	and	x23, x9, #0xfffffffffffffff8
  403214:	str	w24, [sp, #72]
  403218:	mov	x21, xzr
  40321c:	mov	x26, xzr
  403220:	udiv	x24, x8, x23
  403224:	adrp	x25, 41a000 <scols_reset_iter@plt+0x17710>
  403228:	mov	x27, x23
  40322c:	str	x23, [sp, #256]
  403230:	b	40324c <scols_reset_iter@plt+0x95c>
  403234:	mov	w0, #0xa                   	// #10
  403238:	bl	4023e0 <putwchar@plt>
  40323c:	mov	x21, xzr
  403240:	mov	x26, xzr
  403244:	mov	x27, x23
  403248:	add	x22, x22, #0x8
  40324c:	ldr	x0, [x22]
  403250:	ldr	x1, [x25, #872]
  403254:	bl	4027c0 <fputws@plt>
  403258:	ldr	x9, [x22]
  40325c:	ldr	w8, [x9]
  403260:	cbz	w8, 403288 <scols_reset_iter@plt+0x998>
  403264:	mov	x19, xzr
  403268:	add	x28, x9, #0x4
  40326c:	mov	w0, w8
  403270:	bl	402480 <wcwidth@plt>
  403274:	ldr	w8, [x28], #4
  403278:	bic	w9, w0, w0, asr #31
  40327c:	add	x19, x19, x9
  403280:	cbnz	w8, 40326c <scols_reset_iter@plt+0x97c>
  403284:	b	40328c <scols_reset_iter@plt+0x99c>
  403288:	mov	x19, xzr
  40328c:	subs	x20, x20, #0x1
  403290:	add	x26, x19, x26
  403294:	b.eq	4032d8 <scols_reset_iter@plt+0x9e8>  // b.none
  403298:	add	x21, x21, #0x1
  40329c:	cmp	x21, x24
  4032a0:	b.eq	403234 <scols_reset_iter@plt+0x944>  // b.none
  4032a4:	add	x8, x26, #0x8
  4032a8:	and	x19, x8, #0xfffffffffffffff8
  4032ac:	cmp	x19, x27
  4032b0:	b.hi	4032cc <scols_reset_iter@plt+0x9dc>  // b.pmore
  4032b4:	mov	w0, #0x9                   	// #9
  4032b8:	bl	4023e0 <putwchar@plt>
  4032bc:	add	x19, x19, #0x8
  4032c0:	cmp	x19, x27
  4032c4:	b.ls	4032b4 <scols_reset_iter@plt+0x9c4>  // b.plast
  4032c8:	sub	x26, x19, #0x8
  4032cc:	add	x27, x23, x27
  4032d0:	add	x22, x22, #0x8
  4032d4:	b	40324c <scols_reset_iter@plt+0x95c>
  4032d8:	str	xzr, [sp, #248]
  4032dc:	cbz	x26, 4032e8 <scols_reset_iter@plt+0x9f8>
  4032e0:	mov	w0, #0xa                   	// #10
  4032e4:	bl	4023e0 <putwchar@plt>
  4032e8:	ldr	w24, [sp, #72]
  4032ec:	b	4034e4 <scols_reset_iter@plt+0xbf4>
  4032f0:	add	x9, x10, #0x8
  4032f4:	and	x10, x9, #0xfffffffffffffff8
  4032f8:	udiv	x9, x8, x10
  4032fc:	cmp	x10, x8
  403300:	csinc	x22, x9, xzr, ls  // ls = plast
  403304:	udiv	x8, x20, x22
  403308:	msub	x9, x8, x22, x20
  40330c:	cmp	x9, #0x0
  403310:	cinc	x23, x8, ne  // ne = any
  403314:	str	x10, [sp, #88]
  403318:	str	x10, [sp, #256]
  40331c:	cbz	x23, 4034e4 <scols_reset_iter@plt+0xbf4>
  403320:	ldr	x25, [sp, #240]
  403324:	str	w24, [sp, #72]
  403328:	str	xzr, [sp, #80]
  40332c:	b	40334c <scols_reset_iter@plt+0xa5c>
  403330:	mov	w0, #0xa                   	// #10
  403334:	bl	4023e0 <putwchar@plt>
  403338:	ldr	x8, [sp, #80]
  40333c:	add	x8, x8, #0x1
  403340:	cmp	x8, x23
  403344:	str	x8, [sp, #80]
  403348:	b.cs	4032e8 <scols_reset_iter@plt+0x9f8>  // b.hs, b.nlast
  40334c:	cbz	x22, 403330 <scols_reset_iter@plt+0xa40>
  403350:	ldp	x24, x28, [sp, #80]
  403354:	mov	x27, xzr
  403358:	mov	x26, xzr
  40335c:	b	403374 <scols_reset_iter@plt+0xa84>
  403360:	ldr	x8, [sp, #88]
  403364:	add	x27, x27, #0x1
  403368:	cmp	x27, x22
  40336c:	add	x28, x8, x28
  403370:	b.eq	403330 <scols_reset_iter@plt+0xa40>  // b.none
  403374:	lsl	x19, x24, #3
  403378:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  40337c:	ldr	x0, [x25, x19]
  403380:	ldr	x1, [x8, #872]
  403384:	bl	4027c0 <fputws@plt>
  403388:	ldr	x9, [x25, x19]
  40338c:	ldr	w8, [x9]
  403390:	cbz	w8, 4033b8 <scols_reset_iter@plt+0xac8>
  403394:	mov	x19, xzr
  403398:	add	x21, x9, #0x4
  40339c:	mov	w0, w8
  4033a0:	bl	402480 <wcwidth@plt>
  4033a4:	ldr	w8, [x21], #4
  4033a8:	bic	w9, w0, w0, asr #31
  4033ac:	add	x19, x19, x9
  4033b0:	cbnz	w8, 40339c <scols_reset_iter@plt+0xaac>
  4033b4:	b	4033bc <scols_reset_iter@plt+0xacc>
  4033b8:	mov	x19, xzr
  4033bc:	add	x24, x24, x23
  4033c0:	cmp	x24, x20
  4033c4:	b.cs	403330 <scols_reset_iter@plt+0xa40>  // b.hs, b.nlast
  4033c8:	add	x26, x19, x26
  4033cc:	add	x8, x26, #0x8
  4033d0:	and	x19, x8, #0xfffffffffffffff8
  4033d4:	cmp	x19, x28
  4033d8:	b.hi	403360 <scols_reset_iter@plt+0xa70>  // b.pmore
  4033dc:	mov	w0, #0x9                   	// #9
  4033e0:	bl	4023e0 <putwchar@plt>
  4033e4:	add	x19, x19, #0x8
  4033e8:	cmp	x19, x28
  4033ec:	b.ls	4033dc <scols_reset_iter@plt+0xaec>  // b.plast
  4033f0:	sub	x26, x19, #0x8
  4033f4:	b	403360 <scols_reset_iter@plt+0xa70>
  4033f8:	mov	x0, x21
  4033fc:	bl	402390 <scols_free_iter@plt>
  403400:	mov	x0, x22
  403404:	bl	402390 <scols_free_iter@plt>
  403408:	ldr	x8, [sp, #152]
  40340c:	cbz	x8, 4034d8 <scols_reset_iter@plt+0xbe8>
  403410:	ldr	x0, [sp, #128]
  403414:	bl	4025f0 <scols_table_get_ncols@plt>
  403418:	ldr	x20, [sp, #152]
  40341c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403420:	mov	x21, x0
  403424:	add	x1, x1, #0xc40
  403428:	mov	w2, #0x5                   	// #5
  40342c:	mov	x0, xzr
  403430:	bl	4027e0 <dcgettext@plt>
  403434:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403438:	mov	x22, x0
  40343c:	add	x1, x1, #0x445
  403440:	mov	x0, x20
  403444:	bl	407448 <scols_reset_iter@plt+0x4b58>
  403448:	cbz	x0, 4037a8 <scols_reset_iter@plt+0xeb8>
  40344c:	mov	x19, x0
  403450:	mov	w1, #0x8                   	// #8
  403454:	mov	x0, x21
  403458:	bl	402540 <calloc@plt>
  40345c:	mov	x20, x0
  403460:	cbz	x21, 403468 <scols_reset_iter@plt+0xb78>
  403464:	cbz	x20, 4037d0 <scols_reset_iter@plt+0xee0>
  403468:	ldr	x1, [x19]
  40346c:	cbz	x1, 4034c8 <scols_reset_iter@plt+0xbd8>
  403470:	mov	x22, xzr
  403474:	add	x21, x19, #0x8
  403478:	b	403484 <scols_reset_iter@plt+0xb94>
  40347c:	ldr	x1, [x21], #8
  403480:	cbz	x1, 4034a0 <scols_reset_iter@plt+0xbb0>
  403484:	add	x0, sp, #0x70
  403488:	bl	40435c <scols_reset_iter@plt+0x1a6c>
  40348c:	cbz	x0, 40347c <scols_reset_iter@plt+0xb8c>
  403490:	add	x8, x22, #0x1
  403494:	str	x0, [x20, x22, lsl #3]
  403498:	mov	x22, x8
  40349c:	b	40347c <scols_reset_iter@plt+0xb8c>
  4034a0:	cbz	x22, 4034c8 <scols_reset_iter@plt+0xbd8>
  4034a4:	mov	x1, xzr
  4034a8:	mov	x23, x20
  4034ac:	ldr	x0, [sp, #128]
  4034b0:	ldr	x21, [x23], #8
  4034b4:	mov	x2, x21
  4034b8:	bl	402710 <scols_table_move_column@plt>
  4034bc:	subs	x22, x22, #0x1
  4034c0:	mov	x1, x21
  4034c4:	b.ne	4034ac <scols_reset_iter@plt+0xbbc>  // b.any
  4034c8:	mov	x0, x20
  4034cc:	bl	4026b0 <free@plt>
  4034d0:	mov	x0, x19
  4034d4:	bl	406e70 <scols_reset_iter@plt+0x4580>
  4034d8:	ldr	x0, [sp, #128]
  4034dc:	bl	402770 <scols_print_table@plt>
  4034e0:	mov	w24, w0
  4034e4:	cmp	w24, #0x0
  4034e8:	ldp	x20, x19, [sp, #384]
  4034ec:	ldp	x22, x21, [sp, #368]
  4034f0:	ldp	x24, x23, [sp, #352]
  4034f4:	ldp	x26, x25, [sp, #336]
  4034f8:	ldp	x28, x27, [sp, #320]
  4034fc:	ldp	x29, x30, [sp, #304]
  403500:	cset	w0, ne  // ne = any
  403504:	add	sp, sp, #0x190
  403508:	ret
  40350c:	adrp	x21, 41a000 <scols_reset_iter@plt+0x17710>
  403510:	ldr	x19, [x21, #848]
  403514:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403518:	add	x1, x1, #0x418
  40351c:	mov	w2, #0x5                   	// #5
  403520:	mov	x0, xzr
  403524:	bl	4027e0 <dcgettext@plt>
  403528:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  40352c:	ldr	x2, [x8, #888]
  403530:	mov	x1, x0
  403534:	mov	x0, x19
  403538:	bl	402890 <fprintf@plt>
  40353c:	adrp	x23, 408000 <scols_reset_iter@plt+0x5710>
  403540:	adrp	x24, 407000 <scols_reset_iter@plt+0x4710>
  403544:	adrp	x20, 408000 <scols_reset_iter@plt+0x5710>
  403548:	adrp	x27, 408000 <scols_reset_iter@plt+0x5710>
  40354c:	adrp	x28, 408000 <scols_reset_iter@plt+0x5710>
  403550:	adrp	x19, 408000 <scols_reset_iter@plt+0x5710>
  403554:	adrp	x26, 408000 <scols_reset_iter@plt+0x5710>
  403558:	mov	x22, xzr
  40355c:	add	x23, x23, #0x1e5
  403560:	add	x24, x24, #0xd10
  403564:	add	x20, x20, #0x43a
  403568:	add	x27, x27, #0x27c
  40356c:	add	x28, x28, #0x1c8
  403570:	add	x19, x19, #0xae2
  403574:	add	x26, x26, #0x1b8
  403578:	ldr	w8, [x25, x22]
  40357c:	cmp	w8, #0x78
  403580:	b.hi	4035a4 <scols_reset_iter@plt+0xcb4>  // b.pmore
  403584:	adr	x9, 403598 <scols_reset_iter@plt+0xca8>
  403588:	ldrb	w10, [x24, x8]
  40358c:	add	x9, x9, x10, lsl #2
  403590:	mov	x2, x23
  403594:	br	x9
  403598:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  40359c:	add	x2, x2, #0x203
  4035a0:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  4035a4:	sub	w9, w8, #0x21
  4035a8:	cmp	w9, #0x5d
  4035ac:	b.hi	4036b0 <scols_reset_iter@plt+0xdc0>  // b.pmore
  4035b0:	ldr	x0, [x21, #848]
  4035b4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4035b8:	add	x1, x1, #0x440
  4035bc:	mov	w2, w8
  4035c0:	bl	402890 <fprintf@plt>
  4035c4:	b	4036b0 <scols_reset_iter@plt+0xdc0>
  4035c8:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  4035cc:	add	x2, x2, #0x1ed
  4035d0:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  4035d4:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  4035d8:	add	x2, x2, #0x3ed
  4035dc:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  4035e0:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  4035e4:	add	x2, x2, #0x256
  4035e8:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  4035ec:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  4035f0:	add	x2, x2, #0x1df
  4035f4:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  4035f8:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  4035fc:	add	x2, x2, #0x224
  403600:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  403604:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403608:	add	x2, x2, #0x230
  40360c:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  403610:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403614:	add	x2, x2, #0x23c
  403618:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  40361c:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403620:	add	x2, x2, #0xa70
  403624:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  403628:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  40362c:	add	x2, x2, #0x24b
  403630:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  403634:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403638:	add	x2, x2, #0x213
  40363c:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  403640:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403644:	add	x2, x2, #0x268
  403648:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  40364c:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403650:	add	x2, x2, #0xa54
  403654:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  403658:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  40365c:	add	x2, x2, #0x281
  403660:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  403664:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403668:	add	x2, x2, #0x1f8
  40366c:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  403670:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403674:	add	x2, x2, #0x1c1
  403678:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  40367c:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403680:	add	x2, x2, #0x289
  403684:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  403688:	mov	x2, x27
  40368c:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  403690:	mov	x2, x28
  403694:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  403698:	mov	x2, x19
  40369c:	b	4036a4 <scols_reset_iter@plt+0xdb4>
  4036a0:	mov	x2, x26
  4036a4:	ldr	x0, [x21, #848]
  4036a8:	mov	x1, x20
  4036ac:	bl	402890 <fprintf@plt>
  4036b0:	add	x22, x22, #0x4
  4036b4:	cmp	x22, #0x3c
  4036b8:	b.ne	403578 <scols_reset_iter@plt+0xc88>  // b.any
  4036bc:	ldr	x1, [x21, #848]
  4036c0:	mov	w0, #0xa                   	// #10
  4036c4:	bl	4023d0 <fputc@plt>
  4036c8:	mov	w0, #0x1                   	// #1
  4036cc:	bl	402300 <exit@plt>
  4036d0:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  4036d4:	ldr	x19, [x8, #848]
  4036d8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4036dc:	add	x1, x1, #0x331
  4036e0:	mov	w2, #0x5                   	// #5
  4036e4:	mov	x0, xzr
  4036e8:	bl	4027e0 <dcgettext@plt>
  4036ec:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  4036f0:	ldr	x2, [x8, #888]
  4036f4:	mov	x1, x0
  4036f8:	mov	x0, x19
  4036fc:	bl	402890 <fprintf@plt>
  403700:	mov	w0, #0x1                   	// #1
  403704:	bl	402300 <exit@plt>
  403708:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  40370c:	add	x1, x1, #0x313
  403710:	mov	w2, #0x5                   	// #5
  403714:	mov	x0, xzr
  403718:	bl	4027e0 <dcgettext@plt>
  40371c:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  403720:	ldr	x1, [x8, #888]
  403724:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403728:	add	x2, x2, #0x31f
  40372c:	bl	402830 <printf@plt>
  403730:	mov	w0, wzr
  403734:	bl	402300 <exit@plt>
  403738:	bl	40387c <scols_reset_iter@plt+0xf8c>
  40373c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403740:	add	x1, x1, #0x39d
  403744:	b	403788 <scols_reset_iter@plt+0xe98>
  403748:	bl	402850 <__errno_location@plt>
  40374c:	ldr	w8, [x0]
  403750:	cmp	w8, #0xc
  403754:	b.ne	403760 <scols_reset_iter@plt+0xe70>  // b.any
  403758:	mov	w0, #0xc5                  	// #197
  40375c:	bl	4040cc <scols_reset_iter@plt+0x17dc>
  403760:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403764:	add	x1, x1, #0x45b
  403768:	mov	w0, #0x1                   	// #1
  40376c:	mov	x2, x19
  403770:	mov	x3, x28
  403774:	bl	402800 <errx@plt>
  403778:	mov	w0, w24
  40377c:	bl	402300 <exit@plt>
  403780:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403784:	add	x1, x1, #0x3c7
  403788:	mov	w2, #0x5                   	// #5
  40378c:	mov	x0, xzr
  403790:	bl	4027e0 <dcgettext@plt>
  403794:	mov	x1, x0
  403798:	mov	w0, #0x1                   	// #1
  40379c:	bl	402800 <errx@plt>
  4037a0:	mov	w0, #0x165                 	// #357
  4037a4:	bl	4040cc <scols_reset_iter@plt+0x17dc>
  4037a8:	bl	402850 <__errno_location@plt>
  4037ac:	ldr	w8, [x0]
  4037b0:	cmp	w8, #0xc
  4037b4:	b.eq	403758 <scols_reset_iter@plt+0xe68>  // b.none
  4037b8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4037bc:	add	x1, x1, #0x45b
  4037c0:	mov	w0, #0x1                   	// #1
  4037c4:	mov	x2, x22
  4037c8:	mov	x3, x20
  4037cc:	bl	402800 <errx@plt>
  4037d0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4037d4:	add	x1, x1, #0x3fe
  4037d8:	mov	w0, #0x1                   	// #1
  4037dc:	mov	w2, #0x8                   	// #8
  4037e0:	bl	4028b0 <err@plt>
  4037e4:	mov	w0, #0x102                 	// #258
  4037e8:	bl	4040cc <scols_reset_iter@plt+0x17dc>
  4037ec:	stp	x29, x30, [sp, #-48]!
  4037f0:	stp	x20, x19, [sp, #32]
  4037f4:	mov	x19, x0
  4037f8:	mov	x0, xzr
  4037fc:	mov	x1, x19
  403800:	mov	x2, xzr
  403804:	stp	x22, x21, [sp, #16]
  403808:	mov	x29, sp
  40380c:	bl	4022f0 <mbstowcs@plt>
  403810:	tbnz	x0, #63, 403850 <scols_reset_iter@plt+0xf60>
  403814:	add	x21, x0, #0x1
  403818:	lsl	x22, x21, #2
  40381c:	mov	w1, #0x1                   	// #1
  403820:	mov	x0, x22
  403824:	bl	402540 <calloc@plt>
  403828:	mov	x20, x0
  40382c:	cbz	x22, 403834 <scols_reset_iter@plt+0xf44>
  403830:	cbz	x20, 403868 <scols_reset_iter@plt+0xf78>
  403834:	mov	x0, x20
  403838:	mov	x1, x19
  40383c:	mov	x2, x21
  403840:	bl	4022f0 <mbstowcs@plt>
  403844:	tbz	x0, #63, 403854 <scols_reset_iter@plt+0xf64>
  403848:	mov	x0, x20
  40384c:	bl	4026b0 <free@plt>
  403850:	mov	x20, xzr
  403854:	mov	x0, x20
  403858:	ldp	x20, x19, [sp, #32]
  40385c:	ldp	x22, x21, [sp, #16]
  403860:	ldp	x29, x30, [sp], #48
  403864:	ret
  403868:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  40386c:	add	x1, x1, #0x3fe
  403870:	mov	w0, #0x1                   	// #1
  403874:	mov	w2, #0x1                   	// #1
  403878:	bl	4028b0 <err@plt>
  40387c:	stp	x29, x30, [sp, #-32]!
  403880:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  403884:	str	x19, [sp, #16]
  403888:	ldr	x19, [x8, #872]
  40388c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403890:	add	x1, x1, #0x483
  403894:	mov	w2, #0x5                   	// #5
  403898:	mov	x0, xzr
  40389c:	mov	x29, sp
  4038a0:	bl	4027e0 <dcgettext@plt>
  4038a4:	mov	x1, x19
  4038a8:	bl	4022e0 <fputs@plt>
  4038ac:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4038b0:	add	x1, x1, #0x48c
  4038b4:	mov	w2, #0x5                   	// #5
  4038b8:	mov	x0, xzr
  4038bc:	bl	4027e0 <dcgettext@plt>
  4038c0:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  4038c4:	ldr	x2, [x8, #888]
  4038c8:	mov	x1, x0
  4038cc:	mov	x0, x19
  4038d0:	bl	402890 <fprintf@plt>
  4038d4:	mov	w0, #0xa                   	// #10
  4038d8:	mov	x1, x19
  4038dc:	bl	4023d0 <fputc@plt>
  4038e0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4038e4:	add	x1, x1, #0x4a7
  4038e8:	mov	w2, #0x5                   	// #5
  4038ec:	mov	x0, xzr
  4038f0:	bl	4027e0 <dcgettext@plt>
  4038f4:	mov	x1, x19
  4038f8:	bl	4022e0 <fputs@plt>
  4038fc:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403900:	add	x1, x1, #0x4b9
  403904:	mov	w2, #0x5                   	// #5
  403908:	mov	x0, xzr
  40390c:	bl	4027e0 <dcgettext@plt>
  403910:	mov	x1, x19
  403914:	bl	4022e0 <fputs@plt>
  403918:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  40391c:	add	x1, x1, #0x4c4
  403920:	mov	w2, #0x5                   	// #5
  403924:	mov	x0, xzr
  403928:	bl	4027e0 <dcgettext@plt>
  40392c:	mov	x1, x19
  403930:	bl	4022e0 <fputs@plt>
  403934:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403938:	add	x1, x1, #0x4f6
  40393c:	mov	w2, #0x5                   	// #5
  403940:	mov	x0, xzr
  403944:	bl	4027e0 <dcgettext@plt>
  403948:	mov	x1, x19
  40394c:	bl	4022e0 <fputs@plt>
  403950:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403954:	add	x1, x1, #0x534
  403958:	mov	w2, #0x5                   	// #5
  40395c:	mov	x0, xzr
  403960:	bl	4027e0 <dcgettext@plt>
  403964:	mov	x1, x19
  403968:	bl	4022e0 <fputs@plt>
  40396c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403970:	add	x1, x1, #0x577
  403974:	mov	w2, #0x5                   	// #5
  403978:	mov	x0, xzr
  40397c:	bl	4027e0 <dcgettext@plt>
  403980:	mov	x1, x19
  403984:	bl	4022e0 <fputs@plt>
  403988:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  40398c:	add	x1, x1, #0x5b8
  403990:	mov	w2, #0x5                   	// #5
  403994:	mov	x0, xzr
  403998:	bl	4027e0 <dcgettext@plt>
  40399c:	mov	x1, x19
  4039a0:	bl	4022e0 <fputs@plt>
  4039a4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4039a8:	add	x1, x1, #0x612
  4039ac:	mov	w2, #0x5                   	// #5
  4039b0:	mov	x0, xzr
  4039b4:	bl	4027e0 <dcgettext@plt>
  4039b8:	mov	x1, x19
  4039bc:	bl	4022e0 <fputs@plt>
  4039c0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4039c4:	add	x1, x1, #0x648
  4039c8:	mov	w2, #0x5                   	// #5
  4039cc:	mov	x0, xzr
  4039d0:	bl	4027e0 <dcgettext@plt>
  4039d4:	mov	x1, x19
  4039d8:	bl	4022e0 <fputs@plt>
  4039dc:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4039e0:	add	x1, x1, #0x687
  4039e4:	mov	w2, #0x5                   	// #5
  4039e8:	mov	x0, xzr
  4039ec:	bl	4027e0 <dcgettext@plt>
  4039f0:	mov	x1, x19
  4039f4:	bl	4022e0 <fputs@plt>
  4039f8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4039fc:	add	x1, x1, #0x6c2
  403a00:	mov	w2, #0x5                   	// #5
  403a04:	mov	x0, xzr
  403a08:	bl	4027e0 <dcgettext@plt>
  403a0c:	mov	x1, x19
  403a10:	bl	4022e0 <fputs@plt>
  403a14:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403a18:	add	x1, x1, #0x707
  403a1c:	mov	w2, #0x5                   	// #5
  403a20:	mov	x0, xzr
  403a24:	bl	4027e0 <dcgettext@plt>
  403a28:	mov	x1, x19
  403a2c:	bl	4022e0 <fputs@plt>
  403a30:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403a34:	add	x1, x1, #0x756
  403a38:	mov	w2, #0x5                   	// #5
  403a3c:	mov	x0, xzr
  403a40:	bl	4027e0 <dcgettext@plt>
  403a44:	mov	x1, x19
  403a48:	bl	4022e0 <fputs@plt>
  403a4c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403a50:	add	x1, x1, #0x7a1
  403a54:	mov	w2, #0x5                   	// #5
  403a58:	mov	x0, xzr
  403a5c:	bl	4027e0 <dcgettext@plt>
  403a60:	mov	x1, x19
  403a64:	bl	4022e0 <fputs@plt>
  403a68:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403a6c:	add	x1, x1, #0x7dd
  403a70:	mov	w2, #0x5                   	// #5
  403a74:	mov	x0, xzr
  403a78:	bl	4027e0 <dcgettext@plt>
  403a7c:	mov	x1, x19
  403a80:	bl	4022e0 <fputs@plt>
  403a84:	mov	w0, #0xa                   	// #10
  403a88:	mov	x1, x19
  403a8c:	bl	4023d0 <fputc@plt>
  403a90:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403a94:	add	x1, x1, #0x821
  403a98:	mov	w2, #0x5                   	// #5
  403a9c:	mov	x0, xzr
  403aa0:	bl	4027e0 <dcgettext@plt>
  403aa4:	mov	x1, x19
  403aa8:	bl	4022e0 <fputs@plt>
  403aac:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403ab0:	add	x1, x1, #0x871
  403ab4:	mov	w2, #0x5                   	// #5
  403ab8:	mov	x0, xzr
  403abc:	bl	4027e0 <dcgettext@plt>
  403ac0:	mov	x1, x19
  403ac4:	bl	4022e0 <fputs@plt>
  403ac8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403acc:	add	x1, x1, #0x8bd
  403ad0:	mov	w2, #0x5                   	// #5
  403ad4:	mov	x0, xzr
  403ad8:	bl	4027e0 <dcgettext@plt>
  403adc:	mov	x1, x19
  403ae0:	bl	4022e0 <fputs@plt>
  403ae4:	mov	w0, #0xa                   	// #10
  403ae8:	mov	x1, x19
  403aec:	bl	4023d0 <fputc@plt>
  403af0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403af4:	add	x1, x1, #0x908
  403af8:	mov	w2, #0x5                   	// #5
  403afc:	mov	x0, xzr
  403b00:	bl	4027e0 <dcgettext@plt>
  403b04:	mov	x1, x19
  403b08:	bl	4022e0 <fputs@plt>
  403b0c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403b10:	add	x1, x1, #0x953
  403b14:	mov	w2, #0x5                   	// #5
  403b18:	mov	x0, xzr
  403b1c:	bl	4027e0 <dcgettext@plt>
  403b20:	mov	x1, x19
  403b24:	bl	4022e0 <fputs@plt>
  403b28:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403b2c:	add	x1, x1, #0x9b1
  403b30:	mov	w2, #0x5                   	// #5
  403b34:	mov	x0, xzr
  403b38:	bl	4027e0 <dcgettext@plt>
  403b3c:	mov	x1, x19
  403b40:	bl	4022e0 <fputs@plt>
  403b44:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403b48:	add	x1, x1, #0x9ee
  403b4c:	mov	w2, #0x5                   	// #5
  403b50:	mov	x0, xzr
  403b54:	bl	4027e0 <dcgettext@plt>
  403b58:	mov	x1, x19
  403b5c:	bl	4022e0 <fputs@plt>
  403b60:	mov	w0, #0xa                   	// #10
  403b64:	mov	x1, x19
  403b68:	bl	4023d0 <fputc@plt>
  403b6c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403b70:	add	x1, x1, #0xa47
  403b74:	mov	w2, #0x5                   	// #5
  403b78:	mov	x0, xzr
  403b7c:	bl	4027e0 <dcgettext@plt>
  403b80:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403b84:	mov	x19, x0
  403b88:	add	x1, x1, #0xa68
  403b8c:	mov	w2, #0x5                   	// #5
  403b90:	mov	x0, xzr
  403b94:	bl	4027e0 <dcgettext@plt>
  403b98:	mov	x4, x0
  403b9c:	adrp	x0, 408000 <scols_reset_iter@plt+0x5710>
  403ba0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403ba4:	adrp	x3, 408000 <scols_reset_iter@plt+0x5710>
  403ba8:	add	x0, x0, #0xa2a
  403bac:	add	x1, x1, #0xa3b
  403bb0:	add	x3, x3, #0xa59
  403bb4:	mov	x2, x19
  403bb8:	bl	402830 <printf@plt>
  403bbc:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403bc0:	add	x1, x1, #0xa78
  403bc4:	mov	w2, #0x5                   	// #5
  403bc8:	mov	x0, xzr
  403bcc:	bl	4027e0 <dcgettext@plt>
  403bd0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403bd4:	add	x1, x1, #0xa93
  403bd8:	bl	402830 <printf@plt>
  403bdc:	mov	w0, wzr
  403be0:	bl	402300 <exit@plt>
  403be4:	sub	sp, sp, #0x80
  403be8:	stp	x20, x19, [sp, #112]
  403bec:	mov	x20, x1
  403bf0:	mov	x19, x0
  403bf4:	add	x0, sp, #0x10
  403bf8:	add	x1, sp, #0x8
  403bfc:	mov	w2, #0xa                   	// #10
  403c00:	mov	x3, x20
  403c04:	stp	x29, x30, [sp, #32]
  403c08:	stp	x28, x27, [sp, #48]
  403c0c:	stp	x26, x25, [sp, #64]
  403c10:	stp	x24, x23, [sp, #80]
  403c14:	stp	x22, x21, [sp, #96]
  403c18:	add	x29, sp, #0x20
  403c1c:	stp	xzr, xzr, [sp, #8]
  403c20:	bl	402880 <__getdelim@plt>
  403c24:	tbnz	x0, #63, 403ed4 <scols_reset_iter@plt+0x15e4>
  403c28:	bl	402670 <__ctype_b_loc@plt>
  403c2c:	mov	x21, x0
  403c30:	mov	x24, xzr
  403c34:	b	403c5c <scols_reset_iter@plt+0x136c>
  403c38:	ldr	x8, [x19, #136]
  403c3c:	add	x8, x8, #0x1
  403c40:	str	x8, [x19, #136]
  403c44:	add	x0, sp, #0x10
  403c48:	add	x1, sp, #0x8
  403c4c:	mov	w2, #0xa                   	// #10
  403c50:	mov	x3, x20
  403c54:	bl	402880 <__getdelim@plt>
  403c58:	tbnz	x0, #63, 403ed4 <scols_reset_iter@plt+0x15e4>
  403c5c:	ldr	x9, [sp, #16]
  403c60:	ldr	x8, [x21]
  403c64:	sub	x22, x9, #0x1
  403c68:	ldrsb	x23, [x22, #1]!
  403c6c:	ldrh	w9, [x8, x23, lsl #1]
  403c70:	tbnz	w9, #13, 403c68 <scols_reset_iter@plt+0x1378>
  403c74:	mov	w1, #0xa                   	// #10
  403c78:	mov	x0, x22
  403c7c:	bl	402750 <strchr@plt>
  403c80:	cbz	x0, 403ce8 <scols_reset_iter@plt+0x13f8>
  403c84:	strb	wzr, [x0]
  403c88:	ldrb	w8, [x22]
  403c8c:	cbz	w8, 403cf0 <scols_reset_iter@plt+0x1400>
  403c90:	ldr	x0, [sp, #16]
  403c94:	bl	4037ec <scols_reset_iter@plt+0xefc>
  403c98:	mov	x22, x0
  403c9c:	cbnz	x0, 403cc8 <scols_reset_iter@plt+0x13d8>
  403ca0:	ldr	x0, [sp, #16]
  403ca4:	sub	x1, x29, #0x8
  403ca8:	stur	xzr, [x29, #-8]
  403cac:	bl	4049c4 <scols_reset_iter@plt+0x20d4>
  403cb0:	cbz	x0, 403f90 <scols_reset_iter@plt+0x16a0>
  403cb4:	mov	x23, x0
  403cb8:	bl	4037ec <scols_reset_iter@plt+0xefc>
  403cbc:	mov	x22, x0
  403cc0:	mov	x0, x23
  403cc4:	bl	4026b0 <free@plt>
  403cc8:	ldr	w8, [x19]
  403ccc:	cmp	w8, #0x2
  403cd0:	b.cs	403d28 <scols_reset_iter@plt+0x1438>  // b.hs, b.nlast
  403cd4:	ldr	x8, [x19, #136]
  403cd8:	cmp	x8, x24
  403cdc:	b.ls	403e48 <scols_reset_iter@plt+0x1558>  // b.plast
  403ce0:	ldr	x0, [x19, #128]
  403ce4:	b	403e6c <scols_reset_iter@plt+0x157c>
  403ce8:	and	w8, w23, #0xff
  403cec:	cbnz	w8, 403c90 <scols_reset_iter@plt+0x13a0>
  403cf0:	ldr	w8, [x19]
  403cf4:	cmp	w8, #0x2
  403cf8:	b.ne	403c44 <scols_reset_iter@plt+0x1354>  // b.any
  403cfc:	ldrb	w8, [x19, #152]
  403d00:	tbz	w8, #3, 403c44 <scols_reset_iter@plt+0x1354>
  403d04:	ldr	x0, [x19, #16]
  403d08:	cbnz	x0, 403d18 <scols_reset_iter@plt+0x1428>
  403d0c:	mov	x0, x19
  403d10:	bl	4040f0 <scols_reset_iter@plt+0x1800>
  403d14:	ldr	x0, [x19, #16]
  403d18:	mov	x1, xzr
  403d1c:	bl	402580 <scols_table_new_line@plt>
  403d20:	cbnz	x0, 403c44 <scols_reset_iter@plt+0x1354>
  403d24:	b	403f80 <scols_reset_iter@plt+0x1690>
  403d28:	b.ne	403eb8 <scols_reset_iter@plt+0x15c8>  // b.any
  403d2c:	stur	xzr, [x29, #-8]
  403d30:	ldr	x8, [x19, #16]
  403d34:	str	x24, [sp]
  403d38:	cbnz	x8, 403d44 <scols_reset_iter@plt+0x1454>
  403d3c:	mov	x0, x19
  403d40:	bl	4040f0 <scols_reset_iter@plt+0x1800>
  403d44:	mov	x28, xzr
  403d48:	mov	x24, xzr
  403d4c:	mov	x25, x22
  403d50:	ldrb	w8, [x19, #152]
  403d54:	tbnz	w8, #0, 403d80 <scols_reset_iter@plt+0x1490>
  403d58:	cbnz	x25, 403d64 <scols_reset_iter@plt+0x1474>
  403d5c:	ldur	x25, [x29, #-8]
  403d60:	cbz	x25, 403ec4 <scols_reset_iter@plt+0x15d4>
  403d64:	ldr	x1, [x19, #112]
  403d68:	mov	x0, x25
  403d6c:	bl	402440 <wcspbrk@plt>
  403d70:	cbz	x0, 403d78 <scols_reset_iter@plt+0x1488>
  403d74:	str	wzr, [x0], #4
  403d78:	stur	x0, [x29, #-8]
  403d7c:	b	403d98 <scols_reset_iter@plt+0x14a8>
  403d80:	ldr	x1, [x19, #112]
  403d84:	sub	x2, x29, #0x8
  403d88:	mov	x0, x25
  403d8c:	bl	402590 <wcstok@plt>
  403d90:	mov	x25, x0
  403d94:	cbz	x0, 403ec4 <scols_reset_iter@plt+0x15d4>
  403d98:	ldr	x0, [x19, #16]
  403d9c:	bl	4025f0 <scols_table_get_ncols@plt>
  403da0:	add	x23, x28, #0x1
  403da4:	cmp	x0, x23
  403da8:	b.cs	403dcc <scols_reset_iter@plt+0x14dc>  // b.hs, b.nlast
  403dac:	ldr	x0, [x19, #16]
  403db0:	bl	4025b0 <scols_table_is_json@plt>
  403db4:	cbnz	w0, 403f48 <scols_reset_iter@plt+0x1658>
  403db8:	ldr	x0, [x19, #16]
  403dbc:	fmov	d0, xzr
  403dc0:	mov	x1, xzr
  403dc4:	mov	w2, wzr
  403dc8:	bl	402380 <scols_table_new_column@plt>
  403dcc:	cbnz	x24, 403de4 <scols_reset_iter@plt+0x14f4>
  403dd0:	ldr	x0, [x19, #16]
  403dd4:	mov	x1, xzr
  403dd8:	bl	402580 <scols_table_new_line@plt>
  403ddc:	mov	x24, x0
  403de0:	cbz	x0, 403f80 <scols_reset_iter@plt+0x1690>
  403de4:	mov	x0, xzr
  403de8:	mov	x1, x25
  403dec:	mov	x2, xzr
  403df0:	bl	4027b0 <wcstombs@plt>
  403df4:	cmn	x0, #0x1
  403df8:	b.eq	403f1c <scols_reset_iter@plt+0x162c>  // b.none
  403dfc:	mov	x27, x0
  403e00:	add	x0, x0, #0x1
  403e04:	mov	w1, #0x1                   	// #1
  403e08:	bl	402540 <calloc@plt>
  403e0c:	cbz	x0, 403f00 <scols_reset_iter@plt+0x1610>
  403e10:	mov	x1, x25
  403e14:	mov	x2, x27
  403e18:	mov	x26, x0
  403e1c:	bl	4027b0 <wcstombs@plt>
  403e20:	cmn	x0, #0x1
  403e24:	b.eq	403f14 <scols_reset_iter@plt+0x1624>  // b.none
  403e28:	mov	x0, x24
  403e2c:	mov	x1, x28
  403e30:	mov	x2, x26
  403e34:	bl	402320 <scols_line_refer_data@plt>
  403e38:	mov	x25, xzr
  403e3c:	mov	x28, x23
  403e40:	cbz	w0, 403d50 <scols_reset_iter@plt+0x1460>
  403e44:	b	403f28 <scols_reset_iter@plt+0x1638>
  403e48:	ldr	x0, [x19, #128]
  403e4c:	add	x24, x24, #0x3e8
  403e50:	lsl	x23, x24, #3
  403e54:	mov	x1, x23
  403e58:	bl	402560 <realloc@plt>
  403e5c:	cbz	x23, 403e64 <scols_reset_iter@plt+0x1574>
  403e60:	cbz	x0, 403f9c <scols_reset_iter@plt+0x16ac>
  403e64:	ldr	x8, [x19, #136]
  403e68:	str	x0, [x19, #128]
  403e6c:	lsl	x8, x8, #3
  403e70:	str	x22, [x0, x8]
  403e74:	ldr	x9, [x19, #128]
  403e78:	ldr	x9, [x9, x8]
  403e7c:	ldr	w8, [x9]
  403e80:	cbz	w8, 403c38 <scols_reset_iter@plt+0x1348>
  403e84:	mov	x22, xzr
  403e88:	add	x23, x9, #0x4
  403e8c:	mov	w0, w8
  403e90:	bl	402480 <wcwidth@plt>
  403e94:	ldr	w8, [x23], #4
  403e98:	bic	w9, w0, w0, asr #31
  403e9c:	add	x22, x22, x9
  403ea0:	cbnz	w8, 403e8c <scols_reset_iter@plt+0x159c>
  403ea4:	ldr	x8, [x19, #144]
  403ea8:	cmp	x8, x22
  403eac:	b.cs	403c38 <scols_reset_iter@plt+0x1348>  // b.hs, b.nlast
  403eb0:	str	x22, [x19, #144]
  403eb4:	b	403c38 <scols_reset_iter@plt+0x1348>
  403eb8:	mov	x0, x22
  403ebc:	bl	4026b0 <free@plt>
  403ec0:	b	403c44 <scols_reset_iter@plt+0x1354>
  403ec4:	mov	x0, x22
  403ec8:	bl	4026b0 <free@plt>
  403ecc:	ldr	x24, [sp]
  403ed0:	b	403c44 <scols_reset_iter@plt+0x1354>
  403ed4:	mov	x0, x20
  403ed8:	bl	402620 <feof@plt>
  403edc:	cbz	w0, 403fb0 <scols_reset_iter@plt+0x16c0>
  403ee0:	ldp	x20, x19, [sp, #112]
  403ee4:	ldp	x22, x21, [sp, #96]
  403ee8:	ldp	x24, x23, [sp, #80]
  403eec:	ldp	x26, x25, [sp, #64]
  403ef0:	ldp	x28, x27, [sp, #48]
  403ef4:	ldp	x29, x30, [sp, #32]
  403ef8:	add	sp, sp, #0x80
  403efc:	ret
  403f00:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403f04:	add	x1, x1, #0x3fe
  403f08:	mov	w0, #0x1                   	// #1
  403f0c:	mov	w2, #0x1                   	// #1
  403f10:	bl	4028b0 <err@plt>
  403f14:	mov	x0, x26
  403f18:	bl	4026b0 <free@plt>
  403f1c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403f20:	add	x1, x1, #0xb22
  403f24:	b	403f30 <scols_reset_iter@plt+0x1640>
  403f28:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403f2c:	add	x1, x1, #0xb41
  403f30:	mov	w2, #0x5                   	// #5
  403f34:	mov	x0, xzr
  403f38:	bl	4027e0 <dcgettext@plt>
  403f3c:	mov	x1, x0
  403f40:	mov	w0, #0x1                   	// #1
  403f44:	bl	4028b0 <err@plt>
  403f48:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403f4c:	add	x1, x1, #0xae8
  403f50:	mov	w2, #0x5                   	// #5
  403f54:	mov	x0, xzr
  403f58:	bl	4027e0 <dcgettext@plt>
  403f5c:	ldr	x8, [x19, #16]
  403f60:	mov	x19, x0
  403f64:	mov	x0, x8
  403f68:	bl	4026e0 <scols_table_get_nlines@plt>
  403f6c:	add	x2, x0, #0x1
  403f70:	add	x3, x28, #0x1
  403f74:	mov	w0, #0x1                   	// #1
  403f78:	mov	x1, x19
  403f7c:	bl	402800 <errx@plt>
  403f80:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403f84:	add	x1, x1, #0xaa9
  403f88:	mov	w2, #0x5                   	// #5
  403f8c:	b	403f38 <scols_reset_iter@plt+0x1648>
  403f90:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403f94:	add	x1, x1, #0xa9d
  403f98:	b	403f88 <scols_reset_iter@plt+0x1698>
  403f9c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403fa0:	add	x1, x1, #0x3fe
  403fa4:	mov	w0, #0x1                   	// #1
  403fa8:	mov	x2, x23
  403fac:	bl	4028b0 <err@plt>
  403fb0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403fb4:	add	x1, x1, #0xa9d
  403fb8:	b	403f30 <scols_reset_iter@plt+0x1640>
  403fbc:	stp	x29, x30, [sp, #-32]!
  403fc0:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  403fc4:	stp	x20, x19, [sp, #16]
  403fc8:	ldr	x20, [x8, #872]
  403fcc:	mov	x29, sp
  403fd0:	bl	402850 <__errno_location@plt>
  403fd4:	mov	x19, x0
  403fd8:	str	wzr, [x0]
  403fdc:	mov	x0, x20
  403fe0:	bl	4028e0 <ferror@plt>
  403fe4:	cbnz	w0, 404084 <scols_reset_iter@plt+0x1794>
  403fe8:	mov	x0, x20
  403fec:	bl	402760 <fflush@plt>
  403ff0:	cbz	w0, 404044 <scols_reset_iter@plt+0x1754>
  403ff4:	ldr	w20, [x19]
  403ff8:	cmp	w20, #0x9
  403ffc:	b.eq	404008 <scols_reset_iter@plt+0x1718>  // b.none
  404000:	cmp	w20, #0x20
  404004:	b.ne	40409c <scols_reset_iter@plt+0x17ac>  // b.any
  404008:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  40400c:	ldr	x20, [x8, #848]
  404010:	str	wzr, [x19]
  404014:	mov	x0, x20
  404018:	bl	4028e0 <ferror@plt>
  40401c:	cbnz	w0, 4040c4 <scols_reset_iter@plt+0x17d4>
  404020:	mov	x0, x20
  404024:	bl	402760 <fflush@plt>
  404028:	cbz	w0, 404064 <scols_reset_iter@plt+0x1774>
  40402c:	ldr	w8, [x19]
  404030:	cmp	w8, #0x9
  404034:	b.ne	4040c4 <scols_reset_iter@plt+0x17d4>  // b.any
  404038:	ldp	x20, x19, [sp, #16]
  40403c:	ldp	x29, x30, [sp], #32
  404040:	ret
  404044:	mov	x0, x20
  404048:	bl	402430 <fileno@plt>
  40404c:	tbnz	w0, #31, 403ff4 <scols_reset_iter@plt+0x1704>
  404050:	bl	402310 <dup@plt>
  404054:	tbnz	w0, #31, 403ff4 <scols_reset_iter@plt+0x1704>
  404058:	bl	4025a0 <close@plt>
  40405c:	cbnz	w0, 403ff4 <scols_reset_iter@plt+0x1704>
  404060:	b	404008 <scols_reset_iter@plt+0x1718>
  404064:	mov	x0, x20
  404068:	bl	402430 <fileno@plt>
  40406c:	tbnz	w0, #31, 40402c <scols_reset_iter@plt+0x173c>
  404070:	bl	402310 <dup@plt>
  404074:	tbnz	w0, #31, 40402c <scols_reset_iter@plt+0x173c>
  404078:	bl	4025a0 <close@plt>
  40407c:	cbnz	w0, 40402c <scols_reset_iter@plt+0x173c>
  404080:	b	404038 <scols_reset_iter@plt+0x1748>
  404084:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  404088:	add	x1, x1, #0x3f2
  40408c:	mov	w2, #0x5                   	// #5
  404090:	mov	x0, xzr
  404094:	bl	4027e0 <dcgettext@plt>
  404098:	b	4040b4 <scols_reset_iter@plt+0x17c4>
  40409c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4040a0:	add	x1, x1, #0x3f2
  4040a4:	mov	w2, #0x5                   	// #5
  4040a8:	mov	x0, xzr
  4040ac:	bl	4027e0 <dcgettext@plt>
  4040b0:	cbnz	w20, 4040c0 <scols_reset_iter@plt+0x17d0>
  4040b4:	bl	402780 <warnx@plt>
  4040b8:	mov	w0, #0x1                   	// #1
  4040bc:	bl	4022b0 <_exit@plt>
  4040c0:	bl	402660 <warn@plt>
  4040c4:	mov	w0, #0x1                   	// #1
  4040c8:	bl	4022b0 <_exit@plt>
  4040cc:	stp	x29, x30, [sp, #-16]!
  4040d0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4040d4:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  4040d8:	mov	w3, w0
  4040dc:	add	x1, x1, #0x464
  4040e0:	add	x2, x2, #0x447
  4040e4:	mov	w0, #0x1                   	// #1
  4040e8:	mov	x29, sp
  4040ec:	bl	4028b0 <err@plt>
  4040f0:	stp	x29, x30, [sp, #-32]!
  4040f4:	stp	x20, x19, [sp, #16]
  4040f8:	mov	x19, x0
  4040fc:	mov	w0, wzr
  404100:	mov	x29, sp
  404104:	bl	4028a0 <scols_init_debug@plt>
  404108:	bl	402510 <scols_new_table@plt>
  40410c:	str	x0, [x19, #16]
  404110:	cbz	x0, 4041bc <scols_reset_iter@plt+0x18cc>
  404114:	ldr	x1, [x19, #120]
  404118:	bl	4023f0 <scols_table_set_column_separator@plt>
  40411c:	ldrb	w8, [x19, #152]
  404120:	ldr	x0, [x19, #16]
  404124:	mov	w1, #0x1                   	// #1
  404128:	tbnz	w8, #1, 404180 <scols_reset_iter@plt+0x1890>
  40412c:	bl	402870 <scols_table_enable_noencoding@plt>
  404130:	ldr	x8, [x19, #24]
  404134:	cbz	x8, 4041a8 <scols_reset_iter@plt+0x18b8>
  404138:	ldr	x1, [x8]
  40413c:	cbz	x1, 40415c <scols_reset_iter@plt+0x186c>
  404140:	add	x20, x8, #0x8
  404144:	ldr	x0, [x19, #16]
  404148:	fmov	d0, xzr
  40414c:	mov	w2, wzr
  404150:	bl	402380 <scols_table_new_column@plt>
  404154:	ldr	x1, [x20], #8
  404158:	cbnz	x1, 404144 <scols_reset_iter@plt+0x1854>
  40415c:	ldrb	w8, [x19, #152]
  404160:	tbz	w8, #2, 404174 <scols_reset_iter@plt+0x1884>
  404164:	ldr	x0, [x19, #16]
  404168:	mov	w1, #0x1                   	// #1
  40416c:	bl	402600 <scols_table_enable_header_repeat@plt>
  404170:	ldrb	w8, [x19, #152]
  404174:	ldr	x0, [x19, #16]
  404178:	ubfx	w1, w8, #4, #1
  40417c:	b	4041b0 <scols_reset_iter@plt+0x18c0>
  404180:	bl	4026f0 <scols_table_enable_json@plt>
  404184:	ldr	x8, [x19, #32]
  404188:	ldr	x0, [x19, #16]
  40418c:	adrp	x9, 408000 <scols_reset_iter@plt+0x5710>
  404190:	add	x9, x9, #0xae2
  404194:	cmp	x8, #0x0
  404198:	csel	x1, x9, x8, eq  // eq = none
  40419c:	bl	402340 <scols_table_set_name@plt>
  4041a0:	ldr	x8, [x19, #24]
  4041a4:	cbnz	x8, 404138 <scols_reset_iter@plt+0x1848>
  4041a8:	ldr	x0, [x19, #16]
  4041ac:	mov	w1, #0x1                   	// #1
  4041b0:	ldp	x20, x19, [sp, #16]
  4041b4:	ldp	x29, x30, [sp], #32
  4041b8:	b	402360 <scols_table_enable_noheadings@plt>
  4041bc:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4041c0:	add	x1, x1, #0xac8
  4041c4:	mov	w2, #0x5                   	// #5
  4041c8:	bl	4027e0 <dcgettext@plt>
  4041cc:	mov	x1, x0
  4041d0:	mov	w0, #0x1                   	// #1
  4041d4:	bl	4028b0 <err@plt>
  4041d8:	stp	x29, x30, [sp, #-80]!
  4041dc:	stp	x24, x23, [sp, #32]
  4041e0:	mov	x23, x1
  4041e4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4041e8:	stp	x20, x19, [sp, #64]
  4041ec:	mov	x20, x0
  4041f0:	add	x1, x1, #0x445
  4041f4:	mov	x0, x23
  4041f8:	str	x25, [sp, #16]
  4041fc:	stp	x22, x21, [sp, #48]
  404200:	mov	x29, sp
  404204:	mov	x22, x3
  404208:	mov	w19, w2
  40420c:	bl	407448 <scols_reset_iter@plt+0x4b58>
  404210:	cbz	x0, 404324 <scols_reset_iter@plt+0x1a34>
  404214:	ldr	x23, [x0]
  404218:	mov	x21, x0
  40421c:	cbz	x23, 404308 <scols_reset_iter@plt+0x1a18>
  404220:	adrp	x22, 408000 <scols_reset_iter@plt+0x5710>
  404224:	mov	w24, wzr
  404228:	mov	w25, #0x8                   	// #8
  40422c:	add	x22, x22, #0xc0c
  404230:	b	404244 <scols_reset_iter@plt+0x1954>
  404234:	mov	w24, #0x1                   	// #1
  404238:	ldr	x23, [x21, x25]
  40423c:	add	x25, x25, #0x8
  404240:	cbz	x23, 404284 <scols_reset_iter@plt+0x1994>
  404244:	cmp	w19, #0x20
  404248:	b.ne	40425c <scols_reset_iter@plt+0x196c>  // b.any
  40424c:	mov	x0, x23
  404250:	mov	x1, x22
  404254:	bl	402650 <strcmp@plt>
  404258:	cbz	w0, 404234 <scols_reset_iter@plt+0x1944>
  40425c:	mov	x0, x20
  404260:	mov	x1, x23
  404264:	bl	40435c <scols_reset_iter@plt+0x1a6c>
  404268:	cbz	x0, 404238 <scols_reset_iter@plt+0x1948>
  40426c:	mov	x23, x0
  404270:	bl	402490 <scols_column_get_flags@plt>
  404274:	orr	w1, w0, w19
  404278:	mov	x0, x23
  40427c:	bl	402520 <scols_column_set_flags@plt>
  404280:	b	404238 <scols_reset_iter@plt+0x1948>
  404284:	mov	x0, x21
  404288:	bl	406e70 <scols_reset_iter@plt+0x4580>
  40428c:	cbz	w24, 4042f0 <scols_reset_iter@plt+0x1a00>
  404290:	mov	w0, wzr
  404294:	bl	4027d0 <scols_new_iter@plt>
  404298:	cbz	x0, 404354 <scols_reset_iter@plt+0x1a64>
  40429c:	mov	x21, x0
  4042a0:	b	4042bc <scols_reset_iter@plt+0x19cc>
  4042a4:	ldr	x22, [x29, #24]
  4042a8:	mov	x0, x22
  4042ac:	bl	402490 <scols_column_get_flags@plt>
  4042b0:	orr	w1, w0, w19
  4042b4:	mov	x0, x22
  4042b8:	bl	402520 <scols_column_set_flags@plt>
  4042bc:	ldr	x0, [x20, #16]
  4042c0:	add	x2, x29, #0x18
  4042c4:	mov	x1, x21
  4042c8:	bl	402690 <scols_table_next_column@plt>
  4042cc:	cbnz	w0, 4042e8 <scols_reset_iter@plt+0x19f8>
  4042d0:	ldr	x0, [x29, #24]
  4042d4:	bl	402370 <scols_column_get_header@plt>
  4042d8:	cbz	x0, 4042a4 <scols_reset_iter@plt+0x19b4>
  4042dc:	bl	4026a0 <scols_cell_get_data@plt>
  4042e0:	cbnz	x0, 4042bc <scols_reset_iter@plt+0x19cc>
  4042e4:	b	4042a4 <scols_reset_iter@plt+0x19b4>
  4042e8:	mov	x0, x21
  4042ec:	bl	402390 <scols_free_iter@plt>
  4042f0:	ldp	x20, x19, [sp, #64]
  4042f4:	ldp	x22, x21, [sp, #48]
  4042f8:	ldp	x24, x23, [sp, #32]
  4042fc:	ldr	x25, [sp, #16]
  404300:	ldp	x29, x30, [sp], #80
  404304:	ret
  404308:	mov	x0, x21
  40430c:	ldp	x20, x19, [sp, #64]
  404310:	ldp	x22, x21, [sp, #48]
  404314:	ldp	x24, x23, [sp, #32]
  404318:	ldr	x25, [sp, #16]
  40431c:	ldp	x29, x30, [sp], #80
  404320:	b	406e70 <scols_reset_iter@plt+0x4580>
  404324:	bl	402850 <__errno_location@plt>
  404328:	ldr	w8, [x0]
  40432c:	cmp	w8, #0xc
  404330:	b.ne	40433c <scols_reset_iter@plt+0x1a4c>  // b.any
  404334:	mov	w0, #0xc5                  	// #197
  404338:	bl	4040cc <scols_reset_iter@plt+0x17dc>
  40433c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  404340:	add	x1, x1, #0x45b
  404344:	mov	w0, #0x1                   	// #1
  404348:	mov	x2, x22
  40434c:	mov	x3, x23
  404350:	bl	402800 <errx@plt>
  404354:	mov	w0, #0x130                 	// #304
  404358:	bl	4040cc <scols_reset_iter@plt+0x17dc>
  40435c:	stp	x29, x30, [sp, #-48]!
  404360:	stp	x20, x19, [sp, #32]
  404364:	mov	x19, x1
  404368:	mov	x20, x0
  40436c:	mov	x0, x1
  404370:	mov	x1, xzr
  404374:	stp	x22, x21, [sp, #16]
  404378:	mov	x29, sp
  40437c:	bl	4053b8 <scols_reset_iter@plt+0x2ac8>
  404380:	cbz	w0, 4043c0 <scols_reset_iter@plt+0x1ad0>
  404384:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  404388:	add	x1, x1, #0xc0e
  40438c:	mov	w2, #0x5                   	// #5
  404390:	mov	x0, xzr
  404394:	bl	4027e0 <dcgettext@plt>
  404398:	mov	x1, x0
  40439c:	mov	x0, x19
  4043a0:	bl	405844 <scols_reset_iter@plt+0x2f54>
  4043a4:	sub	w21, w0, #0x1
  4043a8:	ldr	x0, [x20, #16]
  4043ac:	mov	w1, w21
  4043b0:	ldp	x20, x19, [sp, #32]
  4043b4:	ldp	x22, x21, [sp, #16]
  4043b8:	ldp	x29, x30, [sp], #48
  4043bc:	b	4024f0 <scols_table_get_column@plt>
  4043c0:	ldr	x8, [x20, #24]
  4043c4:	cbz	x8, 4043f0 <scols_reset_iter@plt+0x1b00>
  4043c8:	ldr	x0, [x8]
  4043cc:	cbz	x0, 4043f0 <scols_reset_iter@plt+0x1b00>
  4043d0:	mov	x21, xzr
  4043d4:	add	x22, x8, #0x8
  4043d8:	mov	x1, x19
  4043dc:	bl	402550 <strcasecmp@plt>
  4043e0:	cbz	w0, 4043a8 <scols_reset_iter@plt+0x1ab8>
  4043e4:	ldr	x0, [x22, x21, lsl #3]
  4043e8:	add	x21, x21, #0x1
  4043ec:	cbnz	x0, 4043d8 <scols_reset_iter@plt+0x1ae8>
  4043f0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4043f4:	add	x1, x1, #0xc25
  4043f8:	mov	w2, #0x5                   	// #5
  4043fc:	mov	x0, xzr
  404400:	bl	4027e0 <dcgettext@plt>
  404404:	mov	x1, x0
  404408:	mov	w0, #0x1                   	// #1
  40440c:	mov	x2, x19
  404410:	bl	402800 <errx@plt>
  404414:	sub	sp, sp, #0x60
  404418:	stp	x29, x30, [sp, #16]
  40441c:	stp	x20, x19, [sp, #80]
  404420:	add	x29, sp, #0x10
  404424:	mov	x19, x2
  404428:	str	x25, [sp, #32]
  40442c:	stp	x24, x23, [sp, #48]
  404430:	stp	x22, x21, [sp, #64]
  404434:	str	xzr, [x29, #24]
  404438:	cbz	x0, 404568 <scols_reset_iter@plt+0x1c78>
  40443c:	ldrb	w22, [x0]
  404440:	mov	x20, x0
  404444:	mov	x21, xzr
  404448:	mov	x24, xzr
  40444c:	cmp	w22, #0x0
  404450:	cset	w8, ne  // ne = any
  404454:	subs	x9, x1, #0x1
  404458:	cset	w10, cs  // cs = hs, nlast
  40445c:	add	x9, x0, x9
  404460:	tst	w10, w8
  404464:	csel	x25, x9, x0, ne  // ne = any
  404468:	cmp	x25, x0
  40446c:	b.cc	404570 <scols_reset_iter@plt+0x1c80>  // b.lo, b.ul, b.last
  404470:	cbz	w22, 404570 <scols_reset_iter@plt+0x1c80>
  404474:	mov	x21, xzr
  404478:	mov	x24, xzr
  40447c:	cmp	x20, x25
  404480:	b.cs	40449c <scols_reset_iter@plt+0x1bac>  // b.hs, b.nlast
  404484:	and	w8, w22, #0xff
  404488:	cmp	w8, #0x5c
  40448c:	b.ne	40449c <scols_reset_iter@plt+0x1bac>  // b.any
  404490:	ldrb	w8, [x20, #1]
  404494:	cmp	w8, #0x78
  404498:	b.eq	4044fc <scols_reset_iter@plt+0x1c0c>  // b.none
  40449c:	bl	402670 <__ctype_b_loc@plt>
  4044a0:	ldr	x8, [x0]
  4044a4:	and	x9, x22, #0xff
  4044a8:	ldrh	w8, [x8, x9, lsl #1]
  4044ac:	tbnz	w8, #1, 4044fc <scols_reset_iter@plt+0x1c0c>
  4044b0:	mov	x23, x0
  4044b4:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  4044b8:	mov	x2, x0
  4044bc:	sub	x0, x29, #0x4
  4044c0:	add	x3, x29, #0x18
  4044c4:	mov	x1, x20
  4044c8:	bl	402290 <mbrtowc@plt>
  4044cc:	cbz	x0, 404570 <scols_reset_iter@plt+0x1c80>
  4044d0:	mov	x22, x0
  4044d4:	cmn	x0, #0x2
  4044d8:	b.cc	404514 <scols_reset_iter@plt+0x1c24>  // b.lo, b.ul, b.last
  4044dc:	ldr	x8, [x23]
  4044e0:	ldrb	w9, [x20]
  4044e4:	ldrh	w8, [x8, x9, lsl #1]
  4044e8:	tbnz	w8, #14, 404534 <scols_reset_iter@plt+0x1c44>
  4044ec:	add	x21, x21, #0x4
  4044f0:	add	x24, x24, #0x4
  4044f4:	mov	w22, #0x1                   	// #1
  4044f8:	b	404550 <scols_reset_iter@plt+0x1c60>
  4044fc:	add	x21, x21, #0x4
  404500:	add	x24, x24, #0x4
  404504:	add	x20, x20, #0x1
  404508:	cmp	x20, x25
  40450c:	b.ls	40455c <scols_reset_iter@plt+0x1c6c>  // b.plast
  404510:	b	404570 <scols_reset_iter@plt+0x1c80>
  404514:	ldur	w0, [x29, #-4]
  404518:	bl	402810 <iswprint@plt>
  40451c:	cbz	w0, 404544 <scols_reset_iter@plt+0x1c54>
  404520:	ldur	w0, [x29, #-4]
  404524:	bl	402480 <wcwidth@plt>
  404528:	add	x21, x21, w0, sxtw
  40452c:	add	x24, x22, x24
  404530:	b	404550 <scols_reset_iter@plt+0x1c60>
  404534:	add	x21, x21, #0x1
  404538:	add	x24, x24, #0x1
  40453c:	mov	w22, #0x1                   	// #1
  404540:	b	404550 <scols_reset_iter@plt+0x1c60>
  404544:	lsl	x8, x22, #2
  404548:	add	x21, x8, x21
  40454c:	add	x24, x8, x24
  404550:	add	x20, x20, x22
  404554:	cmp	x20, x25
  404558:	b.hi	404570 <scols_reset_iter@plt+0x1c80>  // b.pmore
  40455c:	ldrb	w22, [x20]
  404560:	cbnz	w22, 40447c <scols_reset_iter@plt+0x1b8c>
  404564:	b	404570 <scols_reset_iter@plt+0x1c80>
  404568:	mov	x21, xzr
  40456c:	mov	x24, xzr
  404570:	cbz	x19, 404578 <scols_reset_iter@plt+0x1c88>
  404574:	str	x24, [x19]
  404578:	mov	x0, x21
  40457c:	ldp	x20, x19, [sp, #80]
  404580:	ldp	x22, x21, [sp, #64]
  404584:	ldp	x24, x23, [sp, #48]
  404588:	ldr	x25, [sp, #32]
  40458c:	ldp	x29, x30, [sp, #16]
  404590:	add	sp, sp, #0x60
  404594:	ret
  404598:	stp	x29, x30, [sp, #-32]!
  40459c:	str	x19, [sp, #16]
  4045a0:	mov	x29, sp
  4045a4:	cbz	x0, 4045d4 <scols_reset_iter@plt+0x1ce4>
  4045a8:	ldrb	w8, [x0]
  4045ac:	mov	x19, x0
  4045b0:	cbz	w8, 4045d4 <scols_reset_iter@plt+0x1ce4>
  4045b4:	mov	x0, x19
  4045b8:	bl	4022d0 <strlen@plt>
  4045bc:	mov	x1, x0
  4045c0:	mov	x0, x19
  4045c4:	ldr	x19, [sp, #16]
  4045c8:	mov	x2, xzr
  4045cc:	ldp	x29, x30, [sp], #32
  4045d0:	b	404414 <scols_reset_iter@plt+0x1b24>
  4045d4:	ldr	x19, [sp, #16]
  4045d8:	mov	x0, xzr
  4045dc:	ldp	x29, x30, [sp], #32
  4045e0:	ret
  4045e4:	sub	sp, sp, #0x60
  4045e8:	stp	x29, x30, [sp, #16]
  4045ec:	stp	x26, x25, [sp, #32]
  4045f0:	stp	x24, x23, [sp, #48]
  4045f4:	stp	x22, x21, [sp, #64]
  4045f8:	stp	x20, x19, [sp, #80]
  4045fc:	add	x29, sp, #0x10
  404600:	cbz	x0, 4047ac <scols_reset_iter@plt+0x1ebc>
  404604:	mov	x22, x0
  404608:	ldrb	w8, [x22]
  40460c:	mov	x19, x2
  404610:	mov	x0, xzr
  404614:	str	xzr, [sp, #8]
  404618:	cbz	x2, 4047bc <scols_reset_iter@plt+0x1ecc>
  40461c:	cbz	w8, 4047bc <scols_reset_iter@plt+0x1ecc>
  404620:	str	xzr, [x1]
  404624:	ldrb	w25, [x22]
  404628:	mov	x21, x1
  40462c:	mov	x23, x19
  404630:	cbz	w25, 4047b4 <scols_reset_iter@plt+0x1ec4>
  404634:	adrp	x24, 408000 <scols_reset_iter@plt+0x5710>
  404638:	mov	x20, x3
  40463c:	add	x24, x24, #0xc63
  404640:	mov	x23, x19
  404644:	b	404658 <scols_reset_iter@plt+0x1d68>
  404648:	add	x22, x22, #0x1
  40464c:	strb	w25, [x23], #1
  404650:	ldrb	w25, [x22]
  404654:	cbz	w25, 4047b4 <scols_reset_iter@plt+0x1ec4>
  404658:	cbz	x20, 40466c <scols_reset_iter@plt+0x1d7c>
  40465c:	sxtb	w1, w25
  404660:	mov	x0, x20
  404664:	bl	402750 <strchr@plt>
  404668:	cbnz	x0, 404648 <scols_reset_iter@plt+0x1d58>
  40466c:	and	w8, w25, #0xff
  404670:	cmp	w8, #0x5c
  404674:	b.ne	404684 <scols_reset_iter@plt+0x1d94>  // b.any
  404678:	ldrb	w8, [x22, #1]
  40467c:	cmp	w8, #0x78
  404680:	b.eq	4046f4 <scols_reset_iter@plt+0x1e04>  // b.none
  404684:	bl	402670 <__ctype_b_loc@plt>
  404688:	ldr	x8, [x0]
  40468c:	and	x9, x25, #0xff
  404690:	ldrh	w8, [x8, x9, lsl #1]
  404694:	tbnz	w8, #1, 4046f4 <scols_reset_iter@plt+0x1e04>
  404698:	mov	x26, x0
  40469c:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  4046a0:	mov	x2, x0
  4046a4:	add	x0, sp, #0x4
  4046a8:	add	x3, sp, #0x8
  4046ac:	mov	x1, x22
  4046b0:	bl	402290 <mbrtowc@plt>
  4046b4:	cbz	x0, 4047b4 <scols_reset_iter@plt+0x1ec4>
  4046b8:	mov	x25, x0
  4046bc:	cmn	x0, #0x2
  4046c0:	b.cc	40471c <scols_reset_iter@plt+0x1e2c>  // b.lo, b.ul, b.last
  4046c4:	ldr	x8, [x26]
  4046c8:	ldrb	w2, [x22]
  4046cc:	ldrh	w8, [x8, x2, lsl #1]
  4046d0:	tbnz	w8, #14, 404754 <scols_reset_iter@plt+0x1e64>
  4046d4:	mov	x0, x23
  4046d8:	mov	x1, x24
  4046dc:	bl	4023b0 <sprintf@plt>
  4046e0:	ldr	x8, [x21]
  4046e4:	mov	w25, #0x1                   	// #1
  4046e8:	add	x23, x23, #0x4
  4046ec:	add	x22, x22, x25
  4046f0:	b	404710 <scols_reset_iter@plt+0x1e20>
  4046f4:	and	w2, w25, #0xff
  4046f8:	mov	x0, x23
  4046fc:	mov	x1, x24
  404700:	bl	4023b0 <sprintf@plt>
  404704:	ldr	x8, [x21]
  404708:	add	x23, x23, #0x4
  40470c:	add	x22, x22, #0x1
  404710:	add	x8, x8, #0x4
  404714:	str	x8, [x21]
  404718:	b	404650 <scols_reset_iter@plt+0x1d60>
  40471c:	ldr	w0, [sp, #4]
  404720:	bl	402810 <iswprint@plt>
  404724:	cbz	w0, 404774 <scols_reset_iter@plt+0x1e84>
  404728:	mov	x0, x23
  40472c:	mov	x1, x22
  404730:	mov	x2, x25
  404734:	bl	4022a0 <memcpy@plt>
  404738:	ldr	w0, [sp, #4]
  40473c:	add	x23, x23, x25
  404740:	bl	402480 <wcwidth@plt>
  404744:	ldr	x8, [x21]
  404748:	add	x8, x8, w0, sxtw
  40474c:	str	x8, [x21]
  404750:	b	4047a4 <scols_reset_iter@plt+0x1eb4>
  404754:	ldr	x8, [x21]
  404758:	mov	w25, #0x1                   	// #1
  40475c:	add	x8, x8, #0x1
  404760:	str	x8, [x21]
  404764:	ldrb	w8, [x22]
  404768:	add	x22, x22, x25
  40476c:	strb	w8, [x23], #1
  404770:	b	404650 <scols_reset_iter@plt+0x1d60>
  404774:	mov	x26, xzr
  404778:	ldrb	w2, [x22, x26]
  40477c:	mov	x0, x23
  404780:	mov	x1, x24
  404784:	bl	4023b0 <sprintf@plt>
  404788:	ldr	x8, [x21]
  40478c:	add	x26, x26, #0x1
  404790:	add	x23, x23, #0x4
  404794:	cmp	x25, x26
  404798:	add	x8, x8, #0x4
  40479c:	str	x8, [x21]
  4047a0:	b.ne	404778 <scols_reset_iter@plt+0x1e88>  // b.any
  4047a4:	add	x22, x22, x25
  4047a8:	b	404650 <scols_reset_iter@plt+0x1d60>
  4047ac:	str	xzr, [sp, #8]
  4047b0:	b	4047bc <scols_reset_iter@plt+0x1ecc>
  4047b4:	mov	x0, x19
  4047b8:	strb	wzr, [x23]
  4047bc:	ldp	x20, x19, [sp, #80]
  4047c0:	ldp	x22, x21, [sp, #64]
  4047c4:	ldp	x24, x23, [sp, #48]
  4047c8:	ldp	x26, x25, [sp, #32]
  4047cc:	ldp	x29, x30, [sp, #16]
  4047d0:	add	sp, sp, #0x60
  4047d4:	ret
  4047d8:	sub	sp, sp, #0x50
  4047dc:	stp	x29, x30, [sp, #16]
  4047e0:	stp	x24, x23, [sp, #32]
  4047e4:	stp	x22, x21, [sp, #48]
  4047e8:	stp	x20, x19, [sp, #64]
  4047ec:	add	x29, sp, #0x10
  4047f0:	cbz	x0, 40491c <scols_reset_iter@plt+0x202c>
  4047f4:	mov	x21, x0
  4047f8:	ldrb	w8, [x21]
  4047fc:	mov	x19, x2
  404800:	mov	x0, xzr
  404804:	str	xzr, [sp, #8]
  404808:	cbz	x2, 40492c <scols_reset_iter@plt+0x203c>
  40480c:	cbz	w8, 40492c <scols_reset_iter@plt+0x203c>
  404810:	str	xzr, [x1]
  404814:	ldrb	w8, [x21]
  404818:	mov	x20, x1
  40481c:	mov	x22, x19
  404820:	cbz	w8, 404924 <scols_reset_iter@plt+0x2034>
  404824:	adrp	x23, 408000 <scols_reset_iter@plt+0x5710>
  404828:	add	x23, x23, #0xc63
  40482c:	mov	x22, x19
  404830:	b	404858 <scols_reset_iter@plt+0x1f68>
  404834:	ldr	x8, [x20]
  404838:	mov	w24, #0x1                   	// #1
  40483c:	add	x8, x8, #0x1
  404840:	str	x8, [x20]
  404844:	ldrb	w8, [x21]
  404848:	strb	w8, [x22], #1
  40484c:	add	x21, x21, x24
  404850:	ldrb	w8, [x21]
  404854:	cbz	w8, 404924 <scols_reset_iter@plt+0x2034>
  404858:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  40485c:	mov	x2, x0
  404860:	add	x0, sp, #0x4
  404864:	add	x3, sp, #0x8
  404868:	mov	x1, x21
  40486c:	bl	402290 <mbrtowc@plt>
  404870:	cbz	x0, 404924 <scols_reset_iter@plt+0x2034>
  404874:	mov	x24, x0
  404878:	cmn	x0, #0x2
  40487c:	b.cc	4048b8 <scols_reset_iter@plt+0x1fc8>  // b.lo, b.ul, b.last
  404880:	bl	402670 <__ctype_b_loc@plt>
  404884:	ldr	x8, [x0]
  404888:	ldrb	w2, [x21]
  40488c:	ldrh	w8, [x8, x2, lsl #1]
  404890:	tbnz	w8, #14, 404834 <scols_reset_iter@plt+0x1f44>
  404894:	mov	x0, x22
  404898:	mov	x1, x23
  40489c:	bl	4023b0 <sprintf@plt>
  4048a0:	ldr	x8, [x20]
  4048a4:	add	x22, x22, #0x4
  4048a8:	mov	w24, #0x1                   	// #1
  4048ac:	add	x8, x8, #0x4
  4048b0:	str	x8, [x20]
  4048b4:	b	40484c <scols_reset_iter@plt+0x1f5c>
  4048b8:	ldrb	w8, [x21]
  4048bc:	cmp	w8, #0x5c
  4048c0:	b.ne	4048f0 <scols_reset_iter@plt+0x2000>  // b.any
  4048c4:	ldrb	w8, [x21, #1]
  4048c8:	cmp	w8, #0x78
  4048cc:	b.ne	4048f0 <scols_reset_iter@plt+0x2000>  // b.any
  4048d0:	mov	w2, #0x5c                  	// #92
  4048d4:	mov	x0, x22
  4048d8:	mov	x1, x23
  4048dc:	bl	4023b0 <sprintf@plt>
  4048e0:	ldr	x8, [x20]
  4048e4:	add	x22, x22, #0x4
  4048e8:	add	x8, x8, #0x4
  4048ec:	b	404914 <scols_reset_iter@plt+0x2024>
  4048f0:	mov	x0, x22
  4048f4:	mov	x1, x21
  4048f8:	mov	x2, x24
  4048fc:	bl	4022a0 <memcpy@plt>
  404900:	ldr	w0, [sp, #4]
  404904:	add	x22, x22, x24
  404908:	bl	402480 <wcwidth@plt>
  40490c:	ldr	x8, [x20]
  404910:	add	x8, x8, w0, sxtw
  404914:	str	x8, [x20]
  404918:	b	40484c <scols_reset_iter@plt+0x1f5c>
  40491c:	str	xzr, [sp, #8]
  404920:	b	40492c <scols_reset_iter@plt+0x203c>
  404924:	mov	x0, x19
  404928:	strb	wzr, [x22]
  40492c:	ldp	x20, x19, [sp, #64]
  404930:	ldp	x22, x21, [sp, #48]
  404934:	ldp	x24, x23, [sp, #32]
  404938:	ldp	x29, x30, [sp, #16]
  40493c:	add	sp, sp, #0x50
  404940:	ret
  404944:	mov	w8, #0x1                   	// #1
  404948:	bfi	x8, x0, #2, #62
  40494c:	mov	x0, x8
  404950:	ret
  404954:	stp	x29, x30, [sp, #-48]!
  404958:	str	x21, [sp, #16]
  40495c:	stp	x20, x19, [sp, #32]
  404960:	mov	x29, sp
  404964:	cbz	x0, 4049b4 <scols_reset_iter@plt+0x20c4>
  404968:	mov	x19, x1
  40496c:	mov	x20, x0
  404970:	bl	4022d0 <strlen@plt>
  404974:	cbz	x0, 4049b4 <scols_reset_iter@plt+0x20c4>
  404978:	mov	w8, #0x1                   	// #1
  40497c:	bfi	x8, x0, #2, #62
  404980:	mov	x0, x8
  404984:	bl	402470 <malloc@plt>
  404988:	mov	x21, x0
  40498c:	cbz	x0, 4049a8 <scols_reset_iter@plt+0x20b8>
  404990:	mov	x0, x20
  404994:	mov	x1, x19
  404998:	mov	x2, x21
  40499c:	mov	x3, xzr
  4049a0:	bl	4045e4 <scols_reset_iter@plt+0x1cf4>
  4049a4:	cbnz	x0, 4049b4 <scols_reset_iter@plt+0x20c4>
  4049a8:	mov	x0, x21
  4049ac:	bl	4026b0 <free@plt>
  4049b0:	mov	x0, xzr
  4049b4:	ldp	x20, x19, [sp, #32]
  4049b8:	ldr	x21, [sp, #16]
  4049bc:	ldp	x29, x30, [sp], #48
  4049c0:	ret
  4049c4:	stp	x29, x30, [sp, #-48]!
  4049c8:	str	x21, [sp, #16]
  4049cc:	stp	x20, x19, [sp, #32]
  4049d0:	mov	x29, sp
  4049d4:	cbz	x0, 404a20 <scols_reset_iter@plt+0x2130>
  4049d8:	mov	x19, x1
  4049dc:	mov	x20, x0
  4049e0:	bl	4022d0 <strlen@plt>
  4049e4:	cbz	x0, 404a20 <scols_reset_iter@plt+0x2130>
  4049e8:	mov	w8, #0x1                   	// #1
  4049ec:	bfi	x8, x0, #2, #62
  4049f0:	mov	x0, x8
  4049f4:	bl	402470 <malloc@plt>
  4049f8:	mov	x21, x0
  4049fc:	cbz	x0, 404a14 <scols_reset_iter@plt+0x2124>
  404a00:	mov	x0, x20
  404a04:	mov	x1, x19
  404a08:	mov	x2, x21
  404a0c:	bl	4047d8 <scols_reset_iter@plt+0x1ee8>
  404a10:	cbnz	x0, 404a20 <scols_reset_iter@plt+0x2130>
  404a14:	mov	x0, x21
  404a18:	bl	4026b0 <free@plt>
  404a1c:	mov	x0, xzr
  404a20:	ldp	x20, x19, [sp, #32]
  404a24:	ldr	x21, [sp, #16]
  404a28:	ldp	x29, x30, [sp], #48
  404a2c:	ret
  404a30:	stp	x29, x30, [sp, #-80]!
  404a34:	stp	x26, x25, [sp, #16]
  404a38:	stp	x24, x23, [sp, #32]
  404a3c:	stp	x22, x21, [sp, #48]
  404a40:	stp	x20, x19, [sp, #64]
  404a44:	mov	x29, sp
  404a48:	mov	x21, x1
  404a4c:	mov	x19, x0
  404a50:	bl	4022d0 <strlen@plt>
  404a54:	mov	x20, x0
  404a58:	mov	x0, xzr
  404a5c:	mov	x1, x19
  404a60:	mov	x2, xzr
  404a64:	bl	4022f0 <mbstowcs@plt>
  404a68:	cmn	x0, #0x1
  404a6c:	b.eq	404ae8 <scols_reset_iter@plt+0x21f8>  // b.none
  404a70:	lsl	x8, x0, #2
  404a74:	mov	x23, x0
  404a78:	add	x1, x8, #0x4
  404a7c:	mov	w0, #0x1                   	// #1
  404a80:	bl	402540 <calloc@plt>
  404a84:	mov	x22, x0
  404a88:	cbz	x0, 404b1c <scols_reset_iter@plt+0x222c>
  404a8c:	mov	x0, x22
  404a90:	mov	x1, x19
  404a94:	mov	x2, x23
  404a98:	bl	4022f0 <mbstowcs@plt>
  404a9c:	cbz	x0, 404b1c <scols_reset_iter@plt+0x222c>
  404aa0:	ldr	w0, [x22]
  404aa4:	cbz	w0, 404af0 <scols_reset_iter@plt+0x2200>
  404aa8:	ldr	x24, [x21]
  404aac:	mov	x25, xzr
  404ab0:	mov	w26, #0xfffd                	// #65533
  404ab4:	mov	x23, x22
  404ab8:	bl	402480 <wcwidth@plt>
  404abc:	cmn	w0, #0x1
  404ac0:	b.ne	404acc <scols_reset_iter@plt+0x21dc>  // b.any
  404ac4:	mov	w0, #0x1                   	// #1
  404ac8:	str	w26, [x23]
  404acc:	add	x8, x25, w0, sxtw
  404ad0:	cmp	x8, x24
  404ad4:	b.hi	404afc <scols_reset_iter@plt+0x220c>  // b.pmore
  404ad8:	ldr	w0, [x23, #4]!
  404adc:	mov	x25, x8
  404ae0:	cbnz	w0, 404ab8 <scols_reset_iter@plt+0x21c8>
  404ae4:	b	404b00 <scols_reset_iter@plt+0x2210>
  404ae8:	mov	x22, xzr
  404aec:	b	404b1c <scols_reset_iter@plt+0x222c>
  404af0:	mov	x8, xzr
  404af4:	mov	x23, x22
  404af8:	b	404b00 <scols_reset_iter@plt+0x2210>
  404afc:	mov	x8, x25
  404b00:	mov	x0, x19
  404b04:	mov	x1, x22
  404b08:	mov	x2, x20
  404b0c:	str	wzr, [x23]
  404b10:	str	x8, [x21]
  404b14:	bl	4027b0 <wcstombs@plt>
  404b18:	mov	x20, x0
  404b1c:	mov	x0, x22
  404b20:	bl	4026b0 <free@plt>
  404b24:	tbnz	x20, #63, 404b2c <scols_reset_iter@plt+0x223c>
  404b28:	strb	wzr, [x19, x20]
  404b2c:	mov	x0, x20
  404b30:	ldp	x20, x19, [sp, #64]
  404b34:	ldp	x22, x21, [sp, #48]
  404b38:	ldp	x24, x23, [sp, #32]
  404b3c:	ldp	x26, x25, [sp, #16]
  404b40:	ldp	x29, x30, [sp], #80
  404b44:	ret
  404b48:	mov	w6, #0x20                  	// #32
  404b4c:	b	404b50 <scols_reset_iter@plt+0x2260>
  404b50:	sub	sp, sp, #0x80
  404b54:	stp	x29, x30, [sp, #32]
  404b58:	stp	x28, x27, [sp, #48]
  404b5c:	stp	x26, x25, [sp, #64]
  404b60:	stp	x24, x23, [sp, #80]
  404b64:	stp	x22, x21, [sp, #96]
  404b68:	stp	x20, x19, [sp, #112]
  404b6c:	add	x29, sp, #0x20
  404b70:	mov	w19, w6
  404b74:	mov	w21, w5
  404b78:	mov	w25, w4
  404b7c:	mov	x24, x3
  404b80:	mov	x23, x2
  404b84:	mov	x20, x1
  404b88:	mov	x28, x0
  404b8c:	bl	4022d0 <strlen@plt>
  404b90:	mov	x27, x0
  404b94:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  404b98:	cmp	x0, #0x2
  404b9c:	b.cc	404c2c <scols_reset_iter@plt+0x233c>  // b.lo, b.ul, b.last
  404ba0:	mov	x0, xzr
  404ba4:	mov	x1, x28
  404ba8:	mov	x2, xzr
  404bac:	bl	4022f0 <mbstowcs@plt>
  404bb0:	cmn	x0, #0x1
  404bb4:	b.eq	404c3c <scols_reset_iter@plt+0x234c>  // b.none
  404bb8:	stur	w21, [x29, #-8]
  404bbc:	add	x21, x0, #0x1
  404bc0:	mov	x26, x0
  404bc4:	lsl	x0, x21, #2
  404bc8:	bl	402470 <malloc@plt>
  404bcc:	cbz	x0, 404c50 <scols_reset_iter@plt+0x2360>
  404bd0:	mov	x1, x28
  404bd4:	mov	x2, x21
  404bd8:	mov	x22, x0
  404bdc:	bl	4022f0 <mbstowcs@plt>
  404be0:	cbz	x0, 404c68 <scols_reset_iter@plt+0x2378>
  404be4:	str	wzr, [x22, x26, lsl #2]
  404be8:	ldr	w0, [x22]
  404bec:	str	w19, [sp]
  404bf0:	mov	x19, x20
  404bf4:	str	w25, [sp, #12]
  404bf8:	str	x23, [sp, #16]
  404bfc:	cbz	w0, 404c74 <scols_reset_iter@plt+0x2384>
  404c00:	mov	w23, wzr
  404c04:	add	x20, x22, #0x4
  404c08:	mov	w21, #0xfffd                	// #65533
  404c0c:	b	404c18 <scols_reset_iter@plt+0x2328>
  404c10:	ldr	w0, [x20], #4
  404c14:	cbz	w0, 404c78 <scols_reset_iter@plt+0x2388>
  404c18:	bl	402810 <iswprint@plt>
  404c1c:	cbnz	w0, 404c10 <scols_reset_iter@plt+0x2320>
  404c20:	mov	w23, #0x1                   	// #1
  404c24:	stur	w21, [x20, #-4]
  404c28:	b	404c10 <scols_reset_iter@plt+0x2320>
  404c2c:	mov	x26, xzr
  404c30:	mov	x22, xzr
  404c34:	mov	x21, x27
  404c38:	b	404dbc <scols_reset_iter@plt+0x24cc>
  404c3c:	mov	x26, xzr
  404c40:	tbnz	w21, #0, 404c5c <scols_reset_iter@plt+0x236c>
  404c44:	mov	x24, #0xffffffffffffffff    	// #-1
  404c48:	mov	x22, x26
  404c4c:	b	404f30 <scols_reset_iter@plt+0x2640>
  404c50:	ldur	w8, [x29, #-8]
  404c54:	mov	x26, xzr
  404c58:	tbz	w8, #0, 404c44 <scols_reset_iter@plt+0x2354>
  404c5c:	mov	x22, x26
  404c60:	mov	x21, x27
  404c64:	b	404dbc <scols_reset_iter@plt+0x24cc>
  404c68:	mov	x26, xzr
  404c6c:	mov	x21, x27
  404c70:	b	404dbc <scols_reset_iter@plt+0x24cc>
  404c74:	mov	w23, wzr
  404c78:	mov	x25, x28
  404c7c:	mov	x20, xzr
  404c80:	mov	w21, wzr
  404c84:	add	x26, x26, #0x1
  404c88:	mov	w28, #0x7fffffff            	// #2147483647
  404c8c:	cmp	x26, x20
  404c90:	b.eq	404cd0 <scols_reset_iter@plt+0x23e0>  // b.none
  404c94:	ldr	w0, [x22, x20, lsl #2]
  404c98:	cbz	w0, 404cd0 <scols_reset_iter@plt+0x23e0>
  404c9c:	bl	402480 <wcwidth@plt>
  404ca0:	cmn	w0, #0x1
  404ca4:	sub	w8, w28, w0
  404ca8:	cset	w9, eq  // eq = none
  404cac:	cmp	w21, w8
  404cb0:	cset	w8, gt
  404cb4:	orr	w8, w9, w8
  404cb8:	cmp	w8, #0x0
  404cbc:	csel	w9, wzr, w0, ne  // ne = any
  404cc0:	add	w21, w9, w21
  404cc4:	add	x20, x20, #0x1
  404cc8:	cbz	w8, 404c8c <scols_reset_iter@plt+0x239c>
  404ccc:	mov	w21, #0xffffffff            	// #-1
  404cd0:	sxtw	x21, w21
  404cd4:	mov	x20, x19
  404cd8:	mov	x28, x25
  404cdc:	tbz	w23, #0, 404cf8 <scols_reset_iter@plt+0x2408>
  404ce0:	mov	x0, xzr
  404ce4:	mov	x1, x22
  404ce8:	mov	x2, xzr
  404cec:	bl	4027b0 <wcstombs@plt>
  404cf0:	ldr	w19, [sp]
  404cf4:	b	404d0c <scols_reset_iter@plt+0x241c>
  404cf8:	ldr	x8, [x24]
  404cfc:	ldr	w19, [sp]
  404d00:	mov	x0, x27
  404d04:	cmp	x8, x21
  404d08:	b.cs	404d80 <scols_reset_iter@plt+0x2490>  // b.hs, b.nlast
  404d0c:	add	x0, x0, #0x1
  404d10:	str	x0, [sp]
  404d14:	bl	402470 <malloc@plt>
  404d18:	ldr	x23, [sp, #16]
  404d1c:	ldr	w25, [sp, #12]
  404d20:	mov	x26, x0
  404d24:	cbz	x0, 404d70 <scols_reset_iter@plt+0x2480>
  404d28:	ldr	w0, [x22]
  404d2c:	cbz	w0, 404d88 <scols_reset_iter@plt+0x2498>
  404d30:	ldr	x25, [x24]
  404d34:	mov	x27, xzr
  404d38:	mov	w28, #0xfffd                	// #65533
  404d3c:	mov	x23, x22
  404d40:	bl	402480 <wcwidth@plt>
  404d44:	cmn	w0, #0x1
  404d48:	b.ne	404d54 <scols_reset_iter@plt+0x2464>  // b.any
  404d4c:	mov	w0, #0x1                   	// #1
  404d50:	str	w28, [x23]
  404d54:	add	x21, x27, w0, sxtw
  404d58:	cmp	x21, x25
  404d5c:	b.hi	404d94 <scols_reset_iter@plt+0x24a4>  // b.pmore
  404d60:	ldr	w0, [x23, #4]!
  404d64:	mov	x27, x21
  404d68:	cbnz	w0, 404d40 <scols_reset_iter@plt+0x2450>
  404d6c:	b	404d98 <scols_reset_iter@plt+0x24a8>
  404d70:	ldur	w8, [x29, #-8]
  404d74:	tbnz	w8, #0, 404dbc <scols_reset_iter@plt+0x24cc>
  404d78:	mov	x24, #0xffffffffffffffff    	// #-1
  404d7c:	b	404f30 <scols_reset_iter@plt+0x2640>
  404d80:	mov	x26, xzr
  404d84:	b	404db4 <scols_reset_iter@plt+0x24c4>
  404d88:	mov	x21, xzr
  404d8c:	mov	x23, x22
  404d90:	b	404d98 <scols_reset_iter@plt+0x24a8>
  404d94:	mov	x21, x27
  404d98:	ldr	x2, [sp]
  404d9c:	mov	x0, x26
  404da0:	mov	x1, x22
  404da4:	str	wzr, [x23]
  404da8:	bl	4027b0 <wcstombs@plt>
  404dac:	mov	x27, x0
  404db0:	mov	x28, x26
  404db4:	ldr	x23, [sp, #16]
  404db8:	ldr	w25, [sp, #12]
  404dbc:	ldr	x8, [x24]
  404dc0:	cmp	x21, x8
  404dc4:	csel	x9, x8, x21, hi  // hi = pmore
  404dc8:	csel	x27, x8, x27, hi  // hi = pmore
  404dcc:	cmp	x8, x21
  404dd0:	sub	x8, x8, x9
  404dd4:	csel	x8, x8, xzr, hi  // hi = pmore
  404dd8:	str	x9, [x24]
  404ddc:	add	x24, x8, x27
  404de0:	cbz	x23, 404f30 <scols_reset_iter@plt+0x2640>
  404de4:	add	x9, x20, x23
  404de8:	sub	x21, x9, #0x1
  404dec:	stur	x22, [x29, #-8]
  404df0:	cbz	w25, 404e94 <scols_reset_iter@plt+0x25a4>
  404df4:	cmp	w25, #0x1
  404df8:	b.eq	404e20 <scols_reset_iter@plt+0x2530>  // b.none
  404dfc:	cmp	w25, #0x2
  404e00:	b.ne	404f64 <scols_reset_iter@plt+0x2674>  // b.any
  404e04:	mov	x22, x28
  404e08:	lsr	x28, x8, #1
  404e0c:	and	x8, x8, #0x1
  404e10:	add	x8, x28, x8
  404e14:	cmp	x21, x20
  404e18:	b.hi	404e30 <scols_reset_iter@plt+0x2540>  // b.pmore
  404e1c:	b	404e88 <scols_reset_iter@plt+0x2598>
  404e20:	mov	x22, x28
  404e24:	mov	x28, xzr
  404e28:	cmp	x21, x20
  404e2c:	b.ls	404e88 <scols_reset_iter@plt+0x2598>  // b.plast
  404e30:	cbz	x8, 404e88 <scols_reset_iter@plt+0x2598>
  404e34:	mvn	x9, x20
  404e38:	add	x9, x21, x9
  404e3c:	str	x26, [sp, #16]
  404e40:	mov	x26, x20
  404e44:	sub	x20, x8, #0x1
  404e48:	cmp	x20, x9
  404e4c:	csel	x8, x9, x20, hi  // hi = pmore
  404e50:	add	x2, x8, #0x1
  404e54:	mov	x0, x26
  404e58:	mov	w1, w19
  404e5c:	mov	w25, w19
  404e60:	bl	402500 <memset@plt>
  404e64:	sub	x8, x23, #0x2
  404e68:	cmp	x20, x8
  404e6c:	csel	x8, x20, x8, cc  // cc = lo, ul, last
  404e70:	mov	x20, x26
  404e74:	ldr	x26, [sp, #16]
  404e78:	add	x8, x8, x20
  404e7c:	mov	x19, x23
  404e80:	add	x23, x8, #0x1
  404e84:	b	404ea8 <scols_reset_iter@plt+0x25b8>
  404e88:	mov	w25, w19
  404e8c:	mov	x19, x23
  404e90:	b	404ea4 <scols_reset_iter@plt+0x25b4>
  404e94:	mov	x22, x28
  404e98:	mov	w25, w19
  404e9c:	mov	x19, x23
  404ea0:	mov	x28, x8
  404ea4:	mov	x23, x20
  404ea8:	sub	x8, x21, x23
  404eac:	cmp	x27, x8
  404eb0:	csel	x27, x27, x8, cc  // cc = lo, ul, last
  404eb4:	mov	x0, x23
  404eb8:	mov	x1, x22
  404ebc:	mov	x2, x27
  404ec0:	strb	wzr, [x23]
  404ec4:	bl	4022a0 <memcpy@plt>
  404ec8:	add	x0, x23, x27
  404ecc:	cbz	x28, 404f28 <scols_reset_iter@plt+0x2638>
  404ed0:	ldur	x22, [x29, #-8]
  404ed4:	cmp	x0, x21
  404ed8:	b.cs	404f2c <scols_reset_iter@plt+0x263c>  // b.hs, b.nlast
  404edc:	mvn	x8, x0
  404ee0:	add	x8, x21, x8
  404ee4:	mov	x21, x20
  404ee8:	sub	x20, x28, #0x1
  404eec:	cmp	x20, x8
  404ef0:	csel	x8, x8, x20, hi  // hi = pmore
  404ef4:	add	x2, x8, #0x1
  404ef8:	mov	w1, w25
  404efc:	bl	402500 <memset@plt>
  404f00:	sub	x8, x19, x23
  404f04:	sub	x8, x8, x27
  404f08:	add	x8, x8, x21
  404f0c:	sub	x8, x8, #0x2
  404f10:	cmp	x20, x8
  404f14:	csel	x8, x8, x20, hi  // hi = pmore
  404f18:	add	x8, x27, x8
  404f1c:	add	x8, x8, x23
  404f20:	add	x0, x8, #0x1
  404f24:	b	404f2c <scols_reset_iter@plt+0x263c>
  404f28:	ldur	x22, [x29, #-8]
  404f2c:	strb	wzr, [x0]
  404f30:	mov	x0, x22
  404f34:	bl	4026b0 <free@plt>
  404f38:	mov	x0, x26
  404f3c:	bl	4026b0 <free@plt>
  404f40:	mov	x0, x24
  404f44:	ldp	x20, x19, [sp, #112]
  404f48:	ldp	x22, x21, [sp, #96]
  404f4c:	ldp	x24, x23, [sp, #80]
  404f50:	ldp	x26, x25, [sp, #64]
  404f54:	ldp	x28, x27, [sp, #48]
  404f58:	ldp	x29, x30, [sp, #32]
  404f5c:	add	sp, sp, #0x80
  404f60:	ret
  404f64:	bl	4025d0 <abort@plt>
  404f68:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  404f6c:	str	w0, [x8, #840]
  404f70:	ret
  404f74:	sub	sp, sp, #0x70
  404f78:	stp	x29, x30, [sp, #16]
  404f7c:	stp	x28, x27, [sp, #32]
  404f80:	stp	x26, x25, [sp, #48]
  404f84:	stp	x24, x23, [sp, #64]
  404f88:	stp	x22, x21, [sp, #80]
  404f8c:	stp	x20, x19, [sp, #96]
  404f90:	add	x29, sp, #0x10
  404f94:	str	xzr, [x1]
  404f98:	cbz	x0, 404fdc <scols_reset_iter@plt+0x26ec>
  404f9c:	ldrb	w22, [x0]
  404fa0:	mov	x20, x0
  404fa4:	cbz	x22, 404fdc <scols_reset_iter@plt+0x26ec>
  404fa8:	mov	x21, x2
  404fac:	mov	x19, x1
  404fb0:	bl	402670 <__ctype_b_loc@plt>
  404fb4:	ldr	x8, [x0]
  404fb8:	mov	x23, x0
  404fbc:	ldrh	w9, [x8, x22, lsl #1]
  404fc0:	tbz	w9, #13, 404fd4 <scols_reset_iter@plt+0x26e4>
  404fc4:	add	x9, x20, #0x1
  404fc8:	ldrb	w22, [x9], #1
  404fcc:	ldrh	w10, [x8, x22, lsl #1]
  404fd0:	tbnz	w10, #13, 404fc8 <scols_reset_iter@plt+0x26d8>
  404fd4:	cmp	w22, #0x2d
  404fd8:	b.ne	405010 <scols_reset_iter@plt+0x2720>  // b.any
  404fdc:	mov	w22, #0xffffffea            	// #-22
  404fe0:	neg	w19, w22
  404fe4:	bl	402850 <__errno_location@plt>
  404fe8:	str	w19, [x0]
  404fec:	mov	w0, w22
  404ff0:	ldp	x20, x19, [sp, #96]
  404ff4:	ldp	x22, x21, [sp, #80]
  404ff8:	ldp	x24, x23, [sp, #64]
  404ffc:	ldp	x26, x25, [sp, #48]
  405000:	ldp	x28, x27, [sp, #32]
  405004:	ldp	x29, x30, [sp, #16]
  405008:	add	sp, sp, #0x70
  40500c:	ret
  405010:	bl	402850 <__errno_location@plt>
  405014:	mov	x24, x0
  405018:	str	wzr, [x0]
  40501c:	add	x1, sp, #0x8
  405020:	mov	x0, x20
  405024:	mov	w2, wzr
  405028:	mov	w3, wzr
  40502c:	str	xzr, [sp, #8]
  405030:	bl	402530 <__strtoul_internal@plt>
  405034:	ldr	x25, [sp, #8]
  405038:	ldr	w8, [x24]
  40503c:	cmp	x25, x20
  405040:	b.eq	4051c0 <scols_reset_iter@plt+0x28d0>  // b.none
  405044:	add	x9, x0, #0x1
  405048:	mov	x20, x0
  40504c:	cmp	x9, #0x1
  405050:	b.hi	405058 <scols_reset_iter@plt+0x2768>  // b.pmore
  405054:	cbnz	w8, 4051c4 <scols_reset_iter@plt+0x28d4>
  405058:	cbz	x25, 4051d0 <scols_reset_iter@plt+0x28e0>
  40505c:	ldrb	w8, [x25]
  405060:	cbz	w8, 4051d0 <scols_reset_iter@plt+0x28e0>
  405064:	mov	w27, wzr
  405068:	mov	x28, xzr
  40506c:	b	40507c <scols_reset_iter@plt+0x278c>
  405070:	mov	x28, xzr
  405074:	str	x22, [sp, #8]
  405078:	mov	x25, x22
  40507c:	ldrb	w8, [x25, #1]
  405080:	cmp	w8, #0x61
  405084:	b.le	4050b4 <scols_reset_iter@plt+0x27c4>
  405088:	cmp	w8, #0x62
  40508c:	b.eq	4050bc <scols_reset_iter@plt+0x27cc>  // b.none
  405090:	cmp	w8, #0x69
  405094:	b.ne	4050cc <scols_reset_iter@plt+0x27dc>  // b.any
  405098:	ldrb	w8, [x25, #2]
  40509c:	orr	w8, w8, #0x20
  4050a0:	cmp	w8, #0x62
  4050a4:	b.ne	4050cc <scols_reset_iter@plt+0x27dc>  // b.any
  4050a8:	ldrb	w8, [x25, #3]
  4050ac:	cbnz	w8, 4050cc <scols_reset_iter@plt+0x27dc>
  4050b0:	b	4051e0 <scols_reset_iter@plt+0x28f0>
  4050b4:	cmp	w8, #0x42
  4050b8:	b.ne	4050c8 <scols_reset_iter@plt+0x27d8>  // b.any
  4050bc:	ldrb	w8, [x25, #2]
  4050c0:	cbnz	w8, 4050cc <scols_reset_iter@plt+0x27dc>
  4050c4:	b	4051e8 <scols_reset_iter@plt+0x28f8>
  4050c8:	cbz	w8, 4051e0 <scols_reset_iter@plt+0x28f0>
  4050cc:	bl	402410 <localeconv@plt>
  4050d0:	cbz	x0, 4050f0 <scols_reset_iter@plt+0x2800>
  4050d4:	ldr	x22, [x0]
  4050d8:	cbz	x22, 4050fc <scols_reset_iter@plt+0x280c>
  4050dc:	mov	x0, x22
  4050e0:	bl	4022d0 <strlen@plt>
  4050e4:	mov	x26, x0
  4050e8:	mov	w8, #0x1                   	// #1
  4050ec:	b	405104 <scols_reset_iter@plt+0x2814>
  4050f0:	mov	w8, wzr
  4050f4:	mov	x22, xzr
  4050f8:	b	405100 <scols_reset_iter@plt+0x2810>
  4050fc:	mov	w8, wzr
  405100:	mov	x26, xzr
  405104:	cbnz	x28, 404fdc <scols_reset_iter@plt+0x26ec>
  405108:	ldrb	w9, [x25]
  40510c:	eor	w8, w8, #0x1
  405110:	cmp	w9, #0x0
  405114:	cset	w9, eq  // eq = none
  405118:	orr	w8, w8, w9
  40511c:	tbnz	w8, #0, 404fdc <scols_reset_iter@plt+0x26ec>
  405120:	mov	x0, x22
  405124:	mov	x1, x25
  405128:	mov	x2, x26
  40512c:	bl	4024b0 <strncmp@plt>
  405130:	cbnz	w0, 404fdc <scols_reset_iter@plt+0x26ec>
  405134:	add	x22, x25, x26
  405138:	ldrb	w8, [x22]
  40513c:	cmp	w8, #0x30
  405140:	b.ne	405154 <scols_reset_iter@plt+0x2864>  // b.any
  405144:	ldrb	w8, [x22, #1]!
  405148:	add	w27, w27, #0x1
  40514c:	cmp	w8, #0x30
  405150:	b.eq	405144 <scols_reset_iter@plt+0x2854>  // b.none
  405154:	ldr	x9, [x23]
  405158:	sxtb	x8, w8
  40515c:	ldrh	w8, [x9, x8, lsl #1]
  405160:	tbz	w8, #11, 405070 <scols_reset_iter@plt+0x2780>
  405164:	add	x1, sp, #0x8
  405168:	mov	x0, x22
  40516c:	mov	w2, wzr
  405170:	mov	w3, wzr
  405174:	str	wzr, [x24]
  405178:	str	xzr, [sp, #8]
  40517c:	bl	402530 <__strtoul_internal@plt>
  405180:	ldr	x25, [sp, #8]
  405184:	ldr	w8, [x24]
  405188:	cmp	x25, x22
  40518c:	b.eq	4051c0 <scols_reset_iter@plt+0x28d0>  // b.none
  405190:	add	x9, x0, #0x1
  405194:	cmp	x9, #0x1
  405198:	b.hi	4051a0 <scols_reset_iter@plt+0x28b0>  // b.pmore
  40519c:	cbnz	w8, 4051c4 <scols_reset_iter@plt+0x28d4>
  4051a0:	mov	x28, xzr
  4051a4:	cbz	x0, 40507c <scols_reset_iter@plt+0x278c>
  4051a8:	cbz	x25, 404fdc <scols_reset_iter@plt+0x26ec>
  4051ac:	ldrb	w8, [x25]
  4051b0:	mov	w22, #0xffffffea            	// #-22
  4051b4:	mov	x28, x0
  4051b8:	cbnz	w8, 40507c <scols_reset_iter@plt+0x278c>
  4051bc:	b	404fe0 <scols_reset_iter@plt+0x26f0>
  4051c0:	cbz	w8, 404fdc <scols_reset_iter@plt+0x26ec>
  4051c4:	neg	w22, w8
  4051c8:	tbz	w22, #31, 404fec <scols_reset_iter@plt+0x26fc>
  4051cc:	b	404fe0 <scols_reset_iter@plt+0x26f0>
  4051d0:	mov	w22, wzr
  4051d4:	str	x20, [x19]
  4051d8:	tbz	w22, #31, 404fec <scols_reset_iter@plt+0x26fc>
  4051dc:	b	404fe0 <scols_reset_iter@plt+0x26f0>
  4051e0:	mov	w24, #0x400                 	// #1024
  4051e4:	b	4051ec <scols_reset_iter@plt+0x28fc>
  4051e8:	mov	w24, #0x3e8                 	// #1000
  4051ec:	ldrsb	w22, [x25]
  4051f0:	adrp	x23, 408000 <scols_reset_iter@plt+0x5710>
  4051f4:	add	x23, x23, #0xc76
  4051f8:	mov	w2, #0x9                   	// #9
  4051fc:	mov	x0, x23
  405200:	mov	w1, w22
  405204:	bl	402790 <memchr@plt>
  405208:	cbnz	x0, 405228 <scols_reset_iter@plt+0x2938>
  40520c:	adrp	x23, 408000 <scols_reset_iter@plt+0x5710>
  405210:	add	x23, x23, #0xc7f
  405214:	mov	w2, #0x9                   	// #9
  405218:	mov	x0, x23
  40521c:	mov	w1, w22
  405220:	bl	402790 <memchr@plt>
  405224:	cbz	x0, 404fdc <scols_reset_iter@plt+0x26ec>
  405228:	sub	w8, w0, w23
  40522c:	adds	w8, w8, #0x1
  405230:	b.cs	405254 <scols_reset_iter@plt+0x2964>  // b.hs, b.nlast
  405234:	mvn	w9, w0
  405238:	add	w9, w9, w23
  40523c:	umulh	x10, x24, x20
  405240:	cmp	xzr, x10
  405244:	b.ne	40525c <scols_reset_iter@plt+0x296c>  // b.any
  405248:	adds	w9, w9, #0x1
  40524c:	mul	x20, x20, x24
  405250:	b.cc	40523c <scols_reset_iter@plt+0x294c>  // b.lo, b.ul, b.last
  405254:	mov	w22, wzr
  405258:	b	405260 <scols_reset_iter@plt+0x2970>
  40525c:	mov	w22, #0xffffffde            	// #-34
  405260:	cbz	x21, 405268 <scols_reset_iter@plt+0x2978>
  405264:	str	w8, [x21]
  405268:	cbz	x28, 4051d4 <scols_reset_iter@plt+0x28e4>
  40526c:	cbz	w8, 4051d4 <scols_reset_iter@plt+0x28e4>
  405270:	mvn	w8, w0
  405274:	add	w9, w8, w23
  405278:	mov	w8, #0x1                   	// #1
  40527c:	umulh	x10, x24, x8
  405280:	cmp	xzr, x10
  405284:	b.ne	405294 <scols_reset_iter@plt+0x29a4>  // b.any
  405288:	adds	w9, w9, #0x1
  40528c:	mul	x8, x8, x24
  405290:	b.cc	40527c <scols_reset_iter@plt+0x298c>  // b.lo, b.ul, b.last
  405294:	mov	w9, #0xa                   	// #10
  405298:	cmp	x28, #0xb
  40529c:	b.cc	4052b0 <scols_reset_iter@plt+0x29c0>  // b.lo, b.ul, b.last
  4052a0:	add	x9, x9, x9, lsl #2
  4052a4:	lsl	x9, x9, #1
  4052a8:	cmp	x9, x28
  4052ac:	b.cc	4052a0 <scols_reset_iter@plt+0x29b0>  // b.lo, b.ul, b.last
  4052b0:	cmp	w27, #0x1
  4052b4:	b.lt	405360 <scols_reset_iter@plt+0x2a70>  // b.tstop
  4052b8:	cmp	w27, #0x3
  4052bc:	b.hi	4052c8 <scols_reset_iter@plt+0x29d8>  // b.pmore
  4052c0:	mov	w10, wzr
  4052c4:	b	40534c <scols_reset_iter@plt+0x2a5c>
  4052c8:	mov	w10, #0x1                   	// #1
  4052cc:	dup	v0.2d, x10
  4052d0:	and	w10, w27, #0xfffffffc
  4052d4:	mov	v1.16b, v0.16b
  4052d8:	mov	v1.d[0], x9
  4052dc:	mov	w9, w10
  4052e0:	fmov	x12, d1
  4052e4:	mov	x11, v1.d[1]
  4052e8:	add	x12, x12, x12, lsl #2
  4052ec:	fmov	x13, d0
  4052f0:	lsl	x12, x12, #1
  4052f4:	add	x11, x11, x11, lsl #2
  4052f8:	add	x13, x13, x13, lsl #2
  4052fc:	mov	x14, v0.d[1]
  405300:	fmov	d1, x12
  405304:	lsl	x11, x11, #1
  405308:	lsl	x13, x13, #1
  40530c:	mov	v1.d[1], x11
  405310:	add	x11, x14, x14, lsl #2
  405314:	fmov	d0, x13
  405318:	lsl	x11, x11, #1
  40531c:	subs	w9, w9, #0x4
  405320:	mov	v0.d[1], x11
  405324:	b.ne	4052e0 <scols_reset_iter@plt+0x29f0>  // b.any
  405328:	mov	x9, v1.d[1]
  40532c:	mov	x11, v0.d[1]
  405330:	fmov	x12, d1
  405334:	fmov	x13, d0
  405338:	mul	x12, x13, x12
  40533c:	mul	x9, x11, x9
  405340:	cmp	w27, w10
  405344:	mul	x9, x12, x9
  405348:	b.eq	405360 <scols_reset_iter@plt+0x2a70>  // b.none
  40534c:	sub	w10, w27, w10
  405350:	add	x9, x9, x9, lsl #2
  405354:	subs	w10, w10, #0x1
  405358:	lsl	x9, x9, #1
  40535c:	b.ne	405350 <scols_reset_iter@plt+0x2a60>  // b.any
  405360:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  405364:	mov	w12, #0x1                   	// #1
  405368:	movk	x10, #0xcccd
  40536c:	mov	w11, #0xa                   	// #10
  405370:	b	405384 <scols_reset_iter@plt+0x2a94>
  405374:	cmp	x28, #0x9
  405378:	mov	x28, x13
  40537c:	mov	x12, x14
  405380:	b.ls	4051d4 <scols_reset_iter@plt+0x28e4>  // b.plast
  405384:	umulh	x13, x28, x10
  405388:	lsr	x13, x13, #3
  40538c:	add	x14, x12, x12, lsl #2
  405390:	msub	x15, x13, x11, x28
  405394:	lsl	x14, x14, #1
  405398:	cbz	x15, 405374 <scols_reset_iter@plt+0x2a84>
  40539c:	udiv	x12, x9, x12
  4053a0:	udiv	x12, x12, x15
  4053a4:	udiv	x12, x8, x12
  4053a8:	add	x20, x12, x20
  4053ac:	b	405374 <scols_reset_iter@plt+0x2a84>
  4053b0:	mov	x2, xzr
  4053b4:	b	404f74 <scols_reset_iter@plt+0x2684>
  4053b8:	stp	x29, x30, [sp, #-48]!
  4053bc:	stp	x20, x19, [sp, #32]
  4053c0:	mov	x20, x1
  4053c4:	mov	x19, x0
  4053c8:	str	x21, [sp, #16]
  4053cc:	mov	x29, sp
  4053d0:	cbz	x0, 405404 <scols_reset_iter@plt+0x2b14>
  4053d4:	ldrb	w21, [x19]
  4053d8:	mov	x8, x19
  4053dc:	cbz	w21, 405408 <scols_reset_iter@plt+0x2b18>
  4053e0:	bl	402670 <__ctype_b_loc@plt>
  4053e4:	ldr	x9, [x0]
  4053e8:	mov	x8, x19
  4053ec:	and	x10, x21, #0xff
  4053f0:	ldrh	w10, [x9, x10, lsl #1]
  4053f4:	tbz	w10, #11, 405408 <scols_reset_iter@plt+0x2b18>
  4053f8:	ldrb	w21, [x8, #1]!
  4053fc:	cbnz	w21, 4053ec <scols_reset_iter@plt+0x2afc>
  405400:	b	405408 <scols_reset_iter@plt+0x2b18>
  405404:	mov	x8, xzr
  405408:	cbz	x20, 405410 <scols_reset_iter@plt+0x2b20>
  40540c:	str	x8, [x20]
  405410:	cmp	x8, x19
  405414:	b.ls	405428 <scols_reset_iter@plt+0x2b38>  // b.plast
  405418:	ldrb	w8, [x8]
  40541c:	cmp	w8, #0x0
  405420:	cset	w0, eq  // eq = none
  405424:	b	40542c <scols_reset_iter@plt+0x2b3c>
  405428:	mov	w0, wzr
  40542c:	ldp	x20, x19, [sp, #32]
  405430:	ldr	x21, [sp, #16]
  405434:	ldp	x29, x30, [sp], #48
  405438:	ret
  40543c:	stp	x29, x30, [sp, #-48]!
  405440:	stp	x20, x19, [sp, #32]
  405444:	mov	x20, x1
  405448:	mov	x19, x0
  40544c:	str	x21, [sp, #16]
  405450:	mov	x29, sp
  405454:	cbz	x0, 405488 <scols_reset_iter@plt+0x2b98>
  405458:	ldrb	w21, [x19]
  40545c:	mov	x8, x19
  405460:	cbz	w21, 40548c <scols_reset_iter@plt+0x2b9c>
  405464:	bl	402670 <__ctype_b_loc@plt>
  405468:	ldr	x9, [x0]
  40546c:	mov	x8, x19
  405470:	and	x10, x21, #0xff
  405474:	ldrh	w10, [x9, x10, lsl #1]
  405478:	tbz	w10, #12, 40548c <scols_reset_iter@plt+0x2b9c>
  40547c:	ldrb	w21, [x8, #1]!
  405480:	cbnz	w21, 405470 <scols_reset_iter@plt+0x2b80>
  405484:	b	40548c <scols_reset_iter@plt+0x2b9c>
  405488:	mov	x8, xzr
  40548c:	cbz	x20, 405494 <scols_reset_iter@plt+0x2ba4>
  405490:	str	x8, [x20]
  405494:	cmp	x8, x19
  405498:	b.ls	4054ac <scols_reset_iter@plt+0x2bbc>  // b.plast
  40549c:	ldrb	w8, [x8]
  4054a0:	cmp	w8, #0x0
  4054a4:	cset	w0, eq  // eq = none
  4054a8:	b	4054b0 <scols_reset_iter@plt+0x2bc0>
  4054ac:	mov	w0, wzr
  4054b0:	ldp	x20, x19, [sp, #32]
  4054b4:	ldr	x21, [sp, #16]
  4054b8:	ldp	x29, x30, [sp], #48
  4054bc:	ret
  4054c0:	sub	sp, sp, #0x110
  4054c4:	stp	x29, x30, [sp, #208]
  4054c8:	add	x29, sp, #0xd0
  4054cc:	mov	x8, #0xffffffffffffffd0    	// #-48
  4054d0:	mov	x9, sp
  4054d4:	sub	x10, x29, #0x50
  4054d8:	stp	x28, x23, [sp, #224]
  4054dc:	stp	x22, x21, [sp, #240]
  4054e0:	stp	x20, x19, [sp, #256]
  4054e4:	mov	x20, x1
  4054e8:	mov	x19, x0
  4054ec:	movk	x8, #0xff80, lsl #32
  4054f0:	add	x11, x29, #0x40
  4054f4:	add	x9, x9, #0x80
  4054f8:	add	x22, x10, #0x30
  4054fc:	mov	w23, #0xffffffd0            	// #-48
  405500:	stp	x2, x3, [x29, #-80]
  405504:	stp	x4, x5, [x29, #-64]
  405508:	stp	x6, x7, [x29, #-48]
  40550c:	stp	q1, q2, [sp, #16]
  405510:	stp	q3, q4, [sp, #48]
  405514:	str	q0, [sp]
  405518:	stp	q5, q6, [sp, #80]
  40551c:	str	q7, [sp, #112]
  405520:	stp	x9, x8, [x29, #-16]
  405524:	stp	x11, x22, [x29, #-32]
  405528:	tbnz	w23, #31, 405534 <scols_reset_iter@plt+0x2c44>
  40552c:	mov	w8, w23
  405530:	b	40554c <scols_reset_iter@plt+0x2c5c>
  405534:	add	w8, w23, #0x8
  405538:	cmn	w23, #0x8
  40553c:	stur	w8, [x29, #-8]
  405540:	b.gt	40554c <scols_reset_iter@plt+0x2c5c>
  405544:	add	x9, x22, w23, sxtw
  405548:	b	405558 <scols_reset_iter@plt+0x2c68>
  40554c:	ldur	x9, [x29, #-32]
  405550:	add	x10, x9, #0x8
  405554:	stur	x10, [x29, #-32]
  405558:	ldr	x1, [x9]
  40555c:	cbz	x1, 4055d4 <scols_reset_iter@plt+0x2ce4>
  405560:	tbnz	w8, #31, 40556c <scols_reset_iter@plt+0x2c7c>
  405564:	mov	w23, w8
  405568:	b	405584 <scols_reset_iter@plt+0x2c94>
  40556c:	add	w23, w8, #0x8
  405570:	cmn	w8, #0x8
  405574:	stur	w23, [x29, #-8]
  405578:	b.gt	405584 <scols_reset_iter@plt+0x2c94>
  40557c:	add	x8, x22, w8, sxtw
  405580:	b	405590 <scols_reset_iter@plt+0x2ca0>
  405584:	ldur	x8, [x29, #-32]
  405588:	add	x9, x8, #0x8
  40558c:	stur	x9, [x29, #-32]
  405590:	ldr	x21, [x8]
  405594:	cbz	x21, 4055d4 <scols_reset_iter@plt+0x2ce4>
  405598:	mov	x0, x19
  40559c:	bl	402650 <strcmp@plt>
  4055a0:	cbz	w0, 4055b8 <scols_reset_iter@plt+0x2cc8>
  4055a4:	mov	x0, x19
  4055a8:	mov	x1, x21
  4055ac:	bl	402650 <strcmp@plt>
  4055b0:	cbnz	w0, 405528 <scols_reset_iter@plt+0x2c38>
  4055b4:	b	4055bc <scols_reset_iter@plt+0x2ccc>
  4055b8:	mov	w0, #0x1                   	// #1
  4055bc:	ldp	x20, x19, [sp, #256]
  4055c0:	ldp	x22, x21, [sp, #240]
  4055c4:	ldp	x28, x23, [sp, #224]
  4055c8:	ldp	x29, x30, [sp, #208]
  4055cc:	add	sp, sp, #0x110
  4055d0:	ret
  4055d4:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  4055d8:	ldr	w0, [x8, #840]
  4055dc:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4055e0:	add	x1, x1, #0x45b
  4055e4:	mov	x2, x20
  4055e8:	mov	x3, x19
  4055ec:	bl	402800 <errx@plt>
  4055f0:	cbz	x1, 405614 <scols_reset_iter@plt+0x2d24>
  4055f4:	sxtb	w8, w2
  4055f8:	ldrsb	w9, [x0]
  4055fc:	cbz	w9, 405614 <scols_reset_iter@plt+0x2d24>
  405600:	cmp	w8, w9
  405604:	b.eq	405618 <scols_reset_iter@plt+0x2d28>  // b.none
  405608:	sub	x1, x1, #0x1
  40560c:	add	x0, x0, #0x1
  405610:	cbnz	x1, 4055f8 <scols_reset_iter@plt+0x2d08>
  405614:	mov	x0, xzr
  405618:	ret
  40561c:	stp	x29, x30, [sp, #-32]!
  405620:	stp	x20, x19, [sp, #16]
  405624:	mov	x29, sp
  405628:	mov	x20, x1
  40562c:	mov	x19, x0
  405630:	bl	40578c <scols_reset_iter@plt+0x2e9c>
  405634:	cmp	x0, w0, sxtw
  405638:	b.ne	405650 <scols_reset_iter@plt+0x2d60>  // b.any
  40563c:	cmp	w0, w0, sxth
  405640:	b.ne	405650 <scols_reset_iter@plt+0x2d60>  // b.any
  405644:	ldp	x20, x19, [sp, #16]
  405648:	ldp	x29, x30, [sp], #32
  40564c:	ret
  405650:	bl	402850 <__errno_location@plt>
  405654:	mov	w8, #0x22                  	// #34
  405658:	str	w8, [x0]
  40565c:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405660:	ldr	w0, [x8, #840]
  405664:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405668:	add	x1, x1, #0x45b
  40566c:	mov	x2, x20
  405670:	mov	x3, x19
  405674:	bl	4028b0 <err@plt>
  405678:	stp	x29, x30, [sp, #-32]!
  40567c:	stp	x20, x19, [sp, #16]
  405680:	mov	x29, sp
  405684:	mov	x20, x1
  405688:	mov	x19, x0
  40568c:	bl	40578c <scols_reset_iter@plt+0x2e9c>
  405690:	cmp	x0, w0, sxtw
  405694:	b.ne	4056a4 <scols_reset_iter@plt+0x2db4>  // b.any
  405698:	ldp	x20, x19, [sp, #16]
  40569c:	ldp	x29, x30, [sp], #32
  4056a0:	ret
  4056a4:	bl	402850 <__errno_location@plt>
  4056a8:	mov	w8, #0x22                  	// #34
  4056ac:	str	w8, [x0]
  4056b0:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  4056b4:	ldr	w0, [x8, #840]
  4056b8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4056bc:	add	x1, x1, #0x45b
  4056c0:	mov	x2, x20
  4056c4:	mov	x3, x19
  4056c8:	bl	4028b0 <err@plt>
  4056cc:	stp	x29, x30, [sp, #-32]!
  4056d0:	mov	w2, #0xa                   	// #10
  4056d4:	stp	x20, x19, [sp, #16]
  4056d8:	mov	x29, sp
  4056dc:	mov	x20, x1
  4056e0:	mov	x19, x0
  4056e4:	bl	4058fc <scols_reset_iter@plt+0x300c>
  4056e8:	lsr	x8, x0, #32
  4056ec:	cbnz	x8, 405704 <scols_reset_iter@plt+0x2e14>
  4056f0:	cmp	w0, #0x10, lsl #12
  4056f4:	b.cs	405704 <scols_reset_iter@plt+0x2e14>  // b.hs, b.nlast
  4056f8:	ldp	x20, x19, [sp, #16]
  4056fc:	ldp	x29, x30, [sp], #32
  405700:	ret
  405704:	bl	402850 <__errno_location@plt>
  405708:	mov	w8, #0x22                  	// #34
  40570c:	str	w8, [x0]
  405710:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405714:	ldr	w0, [x8, #840]
  405718:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  40571c:	add	x1, x1, #0x45b
  405720:	mov	x2, x20
  405724:	mov	x3, x19
  405728:	bl	4028b0 <err@plt>
  40572c:	stp	x29, x30, [sp, #-32]!
  405730:	mov	w2, #0x10                  	// #16
  405734:	stp	x20, x19, [sp, #16]
  405738:	mov	x29, sp
  40573c:	mov	x20, x1
  405740:	mov	x19, x0
  405744:	bl	4058fc <scols_reset_iter@plt+0x300c>
  405748:	lsr	x8, x0, #32
  40574c:	cbnz	x8, 405764 <scols_reset_iter@plt+0x2e74>
  405750:	cmp	w0, #0x10, lsl #12
  405754:	b.cs	405764 <scols_reset_iter@plt+0x2e74>  // b.hs, b.nlast
  405758:	ldp	x20, x19, [sp, #16]
  40575c:	ldp	x29, x30, [sp], #32
  405760:	ret
  405764:	bl	402850 <__errno_location@plt>
  405768:	mov	w8, #0x22                  	// #34
  40576c:	str	w8, [x0]
  405770:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405774:	ldr	w0, [x8, #840]
  405778:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  40577c:	add	x1, x1, #0x45b
  405780:	mov	x2, x20
  405784:	mov	x3, x19
  405788:	bl	4028b0 <err@plt>
  40578c:	stp	x29, x30, [sp, #-48]!
  405790:	mov	x29, sp
  405794:	str	x21, [sp, #16]
  405798:	stp	x20, x19, [sp, #32]
  40579c:	mov	x20, x1
  4057a0:	mov	x19, x0
  4057a4:	str	xzr, [x29, #24]
  4057a8:	bl	402850 <__errno_location@plt>
  4057ac:	str	wzr, [x0]
  4057b0:	cbz	x19, 405804 <scols_reset_iter@plt+0x2f14>
  4057b4:	ldrb	w8, [x19]
  4057b8:	cbz	w8, 405804 <scols_reset_iter@plt+0x2f14>
  4057bc:	mov	x21, x0
  4057c0:	add	x1, x29, #0x18
  4057c4:	mov	w2, #0xa                   	// #10
  4057c8:	mov	x0, x19
  4057cc:	mov	w3, wzr
  4057d0:	bl	4024a0 <__strtol_internal@plt>
  4057d4:	ldr	w8, [x21]
  4057d8:	cbnz	w8, 405820 <scols_reset_iter@plt+0x2f30>
  4057dc:	ldr	x8, [x29, #24]
  4057e0:	cmp	x8, x19
  4057e4:	b.eq	405804 <scols_reset_iter@plt+0x2f14>  // b.none
  4057e8:	cbz	x8, 4057f4 <scols_reset_iter@plt+0x2f04>
  4057ec:	ldrb	w8, [x8]
  4057f0:	cbnz	w8, 405804 <scols_reset_iter@plt+0x2f14>
  4057f4:	ldp	x20, x19, [sp, #32]
  4057f8:	ldr	x21, [sp, #16]
  4057fc:	ldp	x29, x30, [sp], #48
  405800:	ret
  405804:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405808:	ldr	w0, [x8, #840]
  40580c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405810:	add	x1, x1, #0x45b
  405814:	mov	x2, x20
  405818:	mov	x3, x19
  40581c:	bl	402800 <errx@plt>
  405820:	adrp	x9, 41a000 <scols_reset_iter@plt+0x17710>
  405824:	ldr	w0, [x9, #840]
  405828:	cmp	w8, #0x22
  40582c:	b.ne	40580c <scols_reset_iter@plt+0x2f1c>  // b.any
  405830:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405834:	add	x1, x1, #0x45b
  405838:	mov	x2, x20
  40583c:	mov	x3, x19
  405840:	bl	4028b0 <err@plt>
  405844:	stp	x29, x30, [sp, #-32]!
  405848:	mov	w2, #0xa                   	// #10
  40584c:	stp	x20, x19, [sp, #16]
  405850:	mov	x29, sp
  405854:	mov	x20, x1
  405858:	mov	x19, x0
  40585c:	bl	4058fc <scols_reset_iter@plt+0x300c>
  405860:	lsr	x8, x0, #32
  405864:	cbnz	x8, 405874 <scols_reset_iter@plt+0x2f84>
  405868:	ldp	x20, x19, [sp, #16]
  40586c:	ldp	x29, x30, [sp], #32
  405870:	ret
  405874:	bl	402850 <__errno_location@plt>
  405878:	mov	w8, #0x22                  	// #34
  40587c:	str	w8, [x0]
  405880:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405884:	ldr	w0, [x8, #840]
  405888:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  40588c:	add	x1, x1, #0x45b
  405890:	mov	x2, x20
  405894:	mov	x3, x19
  405898:	bl	4028b0 <err@plt>
  40589c:	stp	x29, x30, [sp, #-32]!
  4058a0:	mov	w2, #0x10                  	// #16
  4058a4:	stp	x20, x19, [sp, #16]
  4058a8:	mov	x29, sp
  4058ac:	mov	x20, x1
  4058b0:	mov	x19, x0
  4058b4:	bl	4058fc <scols_reset_iter@plt+0x300c>
  4058b8:	lsr	x8, x0, #32
  4058bc:	cbnz	x8, 4058cc <scols_reset_iter@plt+0x2fdc>
  4058c0:	ldp	x20, x19, [sp, #16]
  4058c4:	ldp	x29, x30, [sp], #32
  4058c8:	ret
  4058cc:	bl	402850 <__errno_location@plt>
  4058d0:	mov	w8, #0x22                  	// #34
  4058d4:	str	w8, [x0]
  4058d8:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  4058dc:	ldr	w0, [x8, #840]
  4058e0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4058e4:	add	x1, x1, #0x45b
  4058e8:	mov	x2, x20
  4058ec:	mov	x3, x19
  4058f0:	bl	4028b0 <err@plt>
  4058f4:	mov	w2, #0xa                   	// #10
  4058f8:	b	4058fc <scols_reset_iter@plt+0x300c>
  4058fc:	sub	sp, sp, #0x40
  405900:	stp	x29, x30, [sp, #16]
  405904:	stp	x22, x21, [sp, #32]
  405908:	stp	x20, x19, [sp, #48]
  40590c:	add	x29, sp, #0x10
  405910:	mov	w21, w2
  405914:	mov	x20, x1
  405918:	mov	x19, x0
  40591c:	str	xzr, [sp, #8]
  405920:	bl	402850 <__errno_location@plt>
  405924:	str	wzr, [x0]
  405928:	cbz	x19, 405980 <scols_reset_iter@plt+0x3090>
  40592c:	ldrb	w8, [x19]
  405930:	cbz	w8, 405980 <scols_reset_iter@plt+0x3090>
  405934:	mov	x22, x0
  405938:	add	x1, sp, #0x8
  40593c:	mov	x0, x19
  405940:	mov	w2, w21
  405944:	mov	w3, wzr
  405948:	bl	402530 <__strtoul_internal@plt>
  40594c:	ldr	w8, [x22]
  405950:	cbnz	w8, 40599c <scols_reset_iter@plt+0x30ac>
  405954:	ldr	x8, [sp, #8]
  405958:	cmp	x8, x19
  40595c:	b.eq	405980 <scols_reset_iter@plt+0x3090>  // b.none
  405960:	cbz	x8, 40596c <scols_reset_iter@plt+0x307c>
  405964:	ldrb	w8, [x8]
  405968:	cbnz	w8, 405980 <scols_reset_iter@plt+0x3090>
  40596c:	ldp	x20, x19, [sp, #48]
  405970:	ldp	x22, x21, [sp, #32]
  405974:	ldp	x29, x30, [sp, #16]
  405978:	add	sp, sp, #0x40
  40597c:	ret
  405980:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405984:	ldr	w0, [x8, #840]
  405988:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  40598c:	add	x1, x1, #0x45b
  405990:	mov	x2, x20
  405994:	mov	x3, x19
  405998:	bl	402800 <errx@plt>
  40599c:	adrp	x9, 41a000 <scols_reset_iter@plt+0x17710>
  4059a0:	ldr	w0, [x9, #840]
  4059a4:	cmp	w8, #0x22
  4059a8:	b.ne	405988 <scols_reset_iter@plt+0x3098>  // b.any
  4059ac:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4059b0:	add	x1, x1, #0x45b
  4059b4:	mov	x2, x20
  4059b8:	mov	x3, x19
  4059bc:	bl	4028b0 <err@plt>
  4059c0:	mov	w2, #0x10                  	// #16
  4059c4:	b	4058fc <scols_reset_iter@plt+0x300c>
  4059c8:	stp	x29, x30, [sp, #-48]!
  4059cc:	mov	x29, sp
  4059d0:	str	x21, [sp, #16]
  4059d4:	stp	x20, x19, [sp, #32]
  4059d8:	mov	x20, x1
  4059dc:	mov	x19, x0
  4059e0:	str	xzr, [x29, #24]
  4059e4:	bl	402850 <__errno_location@plt>
  4059e8:	str	wzr, [x0]
  4059ec:	cbz	x19, 405a38 <scols_reset_iter@plt+0x3148>
  4059f0:	ldrb	w8, [x19]
  4059f4:	cbz	w8, 405a38 <scols_reset_iter@plt+0x3148>
  4059f8:	mov	x21, x0
  4059fc:	add	x1, x29, #0x18
  405a00:	mov	x0, x19
  405a04:	bl	402350 <strtod@plt>
  405a08:	ldr	w8, [x21]
  405a0c:	cbnz	w8, 405a54 <scols_reset_iter@plt+0x3164>
  405a10:	ldr	x8, [x29, #24]
  405a14:	cmp	x8, x19
  405a18:	b.eq	405a38 <scols_reset_iter@plt+0x3148>  // b.none
  405a1c:	cbz	x8, 405a28 <scols_reset_iter@plt+0x3138>
  405a20:	ldrb	w8, [x8]
  405a24:	cbnz	w8, 405a38 <scols_reset_iter@plt+0x3148>
  405a28:	ldp	x20, x19, [sp, #32]
  405a2c:	ldr	x21, [sp, #16]
  405a30:	ldp	x29, x30, [sp], #48
  405a34:	ret
  405a38:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405a3c:	ldr	w0, [x8, #840]
  405a40:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405a44:	add	x1, x1, #0x45b
  405a48:	mov	x2, x20
  405a4c:	mov	x3, x19
  405a50:	bl	402800 <errx@plt>
  405a54:	adrp	x9, 41a000 <scols_reset_iter@plt+0x17710>
  405a58:	ldr	w0, [x9, #840]
  405a5c:	cmp	w8, #0x22
  405a60:	b.ne	405a40 <scols_reset_iter@plt+0x3150>  // b.any
  405a64:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405a68:	add	x1, x1, #0x45b
  405a6c:	mov	x2, x20
  405a70:	mov	x3, x19
  405a74:	bl	4028b0 <err@plt>
  405a78:	stp	x29, x30, [sp, #-48]!
  405a7c:	mov	x29, sp
  405a80:	str	x21, [sp, #16]
  405a84:	stp	x20, x19, [sp, #32]
  405a88:	mov	x20, x1
  405a8c:	mov	x19, x0
  405a90:	str	xzr, [x29, #24]
  405a94:	bl	402850 <__errno_location@plt>
  405a98:	str	wzr, [x0]
  405a9c:	cbz	x19, 405aec <scols_reset_iter@plt+0x31fc>
  405aa0:	ldrb	w8, [x19]
  405aa4:	cbz	w8, 405aec <scols_reset_iter@plt+0x31fc>
  405aa8:	mov	x21, x0
  405aac:	add	x1, x29, #0x18
  405ab0:	mov	w2, #0xa                   	// #10
  405ab4:	mov	x0, x19
  405ab8:	bl	402680 <strtol@plt>
  405abc:	ldr	w8, [x21]
  405ac0:	cbnz	w8, 405b08 <scols_reset_iter@plt+0x3218>
  405ac4:	ldr	x8, [x29, #24]
  405ac8:	cmp	x8, x19
  405acc:	b.eq	405aec <scols_reset_iter@plt+0x31fc>  // b.none
  405ad0:	cbz	x8, 405adc <scols_reset_iter@plt+0x31ec>
  405ad4:	ldrb	w8, [x8]
  405ad8:	cbnz	w8, 405aec <scols_reset_iter@plt+0x31fc>
  405adc:	ldp	x20, x19, [sp, #32]
  405ae0:	ldr	x21, [sp, #16]
  405ae4:	ldp	x29, x30, [sp], #48
  405ae8:	ret
  405aec:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405af0:	ldr	w0, [x8, #840]
  405af4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405af8:	add	x1, x1, #0x45b
  405afc:	mov	x2, x20
  405b00:	mov	x3, x19
  405b04:	bl	402800 <errx@plt>
  405b08:	adrp	x9, 41a000 <scols_reset_iter@plt+0x17710>
  405b0c:	ldr	w0, [x9, #840]
  405b10:	cmp	w8, #0x22
  405b14:	b.ne	405af4 <scols_reset_iter@plt+0x3204>  // b.any
  405b18:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405b1c:	add	x1, x1, #0x45b
  405b20:	mov	x2, x20
  405b24:	mov	x3, x19
  405b28:	bl	4028b0 <err@plt>
  405b2c:	stp	x29, x30, [sp, #-48]!
  405b30:	mov	x29, sp
  405b34:	str	x21, [sp, #16]
  405b38:	stp	x20, x19, [sp, #32]
  405b3c:	mov	x20, x1
  405b40:	mov	x19, x0
  405b44:	str	xzr, [x29, #24]
  405b48:	bl	402850 <__errno_location@plt>
  405b4c:	str	wzr, [x0]
  405b50:	cbz	x19, 405ba0 <scols_reset_iter@plt+0x32b0>
  405b54:	ldrb	w8, [x19]
  405b58:	cbz	w8, 405ba0 <scols_reset_iter@plt+0x32b0>
  405b5c:	mov	x21, x0
  405b60:	add	x1, x29, #0x18
  405b64:	mov	w2, #0xa                   	// #10
  405b68:	mov	x0, x19
  405b6c:	bl	4022c0 <strtoul@plt>
  405b70:	ldr	w8, [x21]
  405b74:	cbnz	w8, 405bbc <scols_reset_iter@plt+0x32cc>
  405b78:	ldr	x8, [x29, #24]
  405b7c:	cmp	x8, x19
  405b80:	b.eq	405ba0 <scols_reset_iter@plt+0x32b0>  // b.none
  405b84:	cbz	x8, 405b90 <scols_reset_iter@plt+0x32a0>
  405b88:	ldrb	w8, [x8]
  405b8c:	cbnz	w8, 405ba0 <scols_reset_iter@plt+0x32b0>
  405b90:	ldp	x20, x19, [sp, #32]
  405b94:	ldr	x21, [sp, #16]
  405b98:	ldp	x29, x30, [sp], #48
  405b9c:	ret
  405ba0:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405ba4:	ldr	w0, [x8, #840]
  405ba8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405bac:	add	x1, x1, #0x45b
  405bb0:	mov	x2, x20
  405bb4:	mov	x3, x19
  405bb8:	bl	402800 <errx@plt>
  405bbc:	adrp	x9, 41a000 <scols_reset_iter@plt+0x17710>
  405bc0:	ldr	w0, [x9, #840]
  405bc4:	cmp	w8, #0x22
  405bc8:	b.ne	405ba8 <scols_reset_iter@plt+0x32b8>  // b.any
  405bcc:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405bd0:	add	x1, x1, #0x45b
  405bd4:	mov	x2, x20
  405bd8:	mov	x3, x19
  405bdc:	bl	4028b0 <err@plt>
  405be0:	sub	sp, sp, #0x30
  405be4:	stp	x20, x19, [sp, #32]
  405be8:	mov	x20, x1
  405bec:	add	x1, sp, #0x8
  405bf0:	mov	x2, xzr
  405bf4:	stp	x29, x30, [sp, #16]
  405bf8:	add	x29, sp, #0x10
  405bfc:	mov	x19, x0
  405c00:	bl	404f74 <scols_reset_iter@plt+0x2684>
  405c04:	cbnz	w0, 405c1c <scols_reset_iter@plt+0x332c>
  405c08:	ldr	x0, [sp, #8]
  405c0c:	ldp	x20, x19, [sp, #32]
  405c10:	ldp	x29, x30, [sp, #16]
  405c14:	add	sp, sp, #0x30
  405c18:	ret
  405c1c:	bl	402850 <__errno_location@plt>
  405c20:	adrp	x9, 41a000 <scols_reset_iter@plt+0x17710>
  405c24:	ldr	w8, [x0]
  405c28:	ldr	w0, [x9, #840]
  405c2c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405c30:	add	x1, x1, #0x45b
  405c34:	mov	x2, x20
  405c38:	mov	x3, x19
  405c3c:	cbnz	w8, 405c44 <scols_reset_iter@plt+0x3354>
  405c40:	bl	402800 <errx@plt>
  405c44:	bl	4028b0 <err@plt>
  405c48:	stp	x29, x30, [sp, #-32]!
  405c4c:	str	x19, [sp, #16]
  405c50:	mov	x19, x1
  405c54:	mov	x1, x2
  405c58:	mov	x29, sp
  405c5c:	bl	4059c8 <scols_reset_iter@plt+0x30d8>
  405c60:	fcvtzs	x8, d0
  405c64:	mov	x9, #0x848000000000        	// #145685290680320
  405c68:	movk	x9, #0x412e, lsl #48
  405c6c:	scvtf	d1, x8
  405c70:	fmov	d2, x9
  405c74:	fsub	d0, d0, d1
  405c78:	fmul	d0, d0, d2
  405c7c:	fcvtzs	x9, d0
  405c80:	stp	x8, x9, [x19]
  405c84:	ldr	x19, [sp, #16]
  405c88:	ldp	x29, x30, [sp], #32
  405c8c:	ret
  405c90:	and	w8, w0, #0xf000
  405c94:	sub	w8, w8, #0x1, lsl #12
  405c98:	lsr	w9, w8, #12
  405c9c:	cmp	w9, #0xb
  405ca0:	mov	w8, wzr
  405ca4:	b.hi	405cf8 <scols_reset_iter@plt+0x3408>  // b.pmore
  405ca8:	adrp	x10, 408000 <scols_reset_iter@plt+0x5710>
  405cac:	add	x10, x10, #0xc6a
  405cb0:	adr	x11, 405cc4 <scols_reset_iter@plt+0x33d4>
  405cb4:	ldrb	w12, [x10, x9]
  405cb8:	add	x11, x11, x12, lsl #2
  405cbc:	mov	w9, #0x64                  	// #100
  405cc0:	br	x11
  405cc4:	mov	w9, #0x70                  	// #112
  405cc8:	b	405cf0 <scols_reset_iter@plt+0x3400>
  405ccc:	mov	w9, #0x63                  	// #99
  405cd0:	b	405cf0 <scols_reset_iter@plt+0x3400>
  405cd4:	mov	w9, #0x62                  	// #98
  405cd8:	b	405cf0 <scols_reset_iter@plt+0x3400>
  405cdc:	mov	w9, #0x6c                  	// #108
  405ce0:	b	405cf0 <scols_reset_iter@plt+0x3400>
  405ce4:	mov	w9, #0x73                  	// #115
  405ce8:	b	405cf0 <scols_reset_iter@plt+0x3400>
  405cec:	mov	w9, #0x2d                  	// #45
  405cf0:	mov	w8, #0x1                   	// #1
  405cf4:	strb	w9, [x1]
  405cf8:	tst	w0, #0x100
  405cfc:	mov	w9, #0x72                  	// #114
  405d00:	mov	w10, #0x2d                  	// #45
  405d04:	add	x11, x1, x8
  405d08:	mov	w12, #0x77                  	// #119
  405d0c:	csel	w17, w10, w9, eq  // eq = none
  405d10:	tst	w0, #0x80
  405d14:	mov	w14, #0x53                  	// #83
  405d18:	mov	w15, #0x73                  	// #115
  405d1c:	mov	w16, #0x78                  	// #120
  405d20:	strb	w17, [x11]
  405d24:	csel	w17, w10, w12, eq  // eq = none
  405d28:	tst	w0, #0x40
  405d2c:	orr	x13, x8, #0x2
  405d30:	strb	w17, [x11, #1]
  405d34:	csel	w11, w15, w14, ne  // ne = any
  405d38:	csel	w17, w16, w10, ne  // ne = any
  405d3c:	tst	w0, #0x800
  405d40:	csel	w11, w17, w11, eq  // eq = none
  405d44:	add	x13, x13, x1
  405d48:	tst	w0, #0x20
  405d4c:	strb	w11, [x13]
  405d50:	csel	w11, w10, w9, eq  // eq = none
  405d54:	tst	w0, #0x10
  405d58:	strb	w11, [x13, #1]
  405d5c:	csel	w11, w10, w12, eq  // eq = none
  405d60:	tst	w0, #0x8
  405d64:	csel	w14, w15, w14, ne  // ne = any
  405d68:	csel	w15, w16, w10, ne  // ne = any
  405d6c:	tst	w0, #0x400
  405d70:	orr	x8, x8, #0x6
  405d74:	csel	w14, w15, w14, eq  // eq = none
  405d78:	tst	w0, #0x4
  405d7c:	add	x8, x8, x1
  405d80:	csel	w9, w10, w9, eq  // eq = none
  405d84:	tst	w0, #0x2
  405d88:	mov	w17, #0x54                  	// #84
  405d8c:	strb	w11, [x13, #2]
  405d90:	mov	w11, #0x74                  	// #116
  405d94:	strb	w14, [x13, #3]
  405d98:	strb	w9, [x8]
  405d9c:	csel	w9, w10, w12, eq  // eq = none
  405da0:	tst	w0, #0x1
  405da4:	strb	w9, [x8, #1]
  405da8:	csel	w9, w11, w17, ne  // ne = any
  405dac:	csel	w10, w16, w10, ne  // ne = any
  405db0:	tst	w0, #0x200
  405db4:	csel	w9, w10, w9, eq  // eq = none
  405db8:	mov	x0, x1
  405dbc:	strb	w9, [x8, #2]
  405dc0:	strb	wzr, [x8, #3]
  405dc4:	ret
  405dc8:	sub	sp, sp, #0x50
  405dcc:	add	x8, sp, #0x8
  405dd0:	stp	x29, x30, [sp, #48]
  405dd4:	stp	x20, x19, [sp, #64]
  405dd8:	add	x29, sp, #0x30
  405ddc:	tbz	w0, #1, 405dec <scols_reset_iter@plt+0x34fc>
  405de0:	orr	x8, x8, #0x1
  405de4:	mov	w9, #0x20                  	// #32
  405de8:	strb	w9, [sp, #8]
  405dec:	cmp	x1, #0x400
  405df0:	b.cs	405e04 <scols_reset_iter@plt+0x3514>  // b.hs, b.nlast
  405df4:	mov	w9, #0x42                  	// #66
  405df8:	mov	w19, w1
  405dfc:	strh	w9, [x8]
  405e00:	b	405f64 <scols_reset_iter@plt+0x3674>
  405e04:	cmp	x1, #0x100, lsl #12
  405e08:	b.cs	405e14 <scols_reset_iter@plt+0x3524>  // b.hs, b.nlast
  405e0c:	mov	w9, #0xa                   	// #10
  405e10:	b	405e58 <scols_reset_iter@plt+0x3568>
  405e14:	lsr	x9, x1, #30
  405e18:	cbnz	x9, 405e24 <scols_reset_iter@plt+0x3534>
  405e1c:	mov	w9, #0x14                  	// #20
  405e20:	b	405e58 <scols_reset_iter@plt+0x3568>
  405e24:	lsr	x9, x1, #40
  405e28:	cbnz	x9, 405e34 <scols_reset_iter@plt+0x3544>
  405e2c:	mov	w9, #0x1e                  	// #30
  405e30:	b	405e58 <scols_reset_iter@plt+0x3568>
  405e34:	lsr	x9, x1, #50
  405e38:	cbnz	x9, 405e44 <scols_reset_iter@plt+0x3554>
  405e3c:	mov	w9, #0x28                  	// #40
  405e40:	b	405e58 <scols_reset_iter@plt+0x3568>
  405e44:	lsr	x9, x1, #60
  405e48:	mov	w10, #0x3c                  	// #60
  405e4c:	cmp	x9, #0x0
  405e50:	mov	w9, #0x32                  	// #50
  405e54:	csel	w9, w9, w10, eq  // eq = none
  405e58:	mov	w10, #0xcccd                	// #52429
  405e5c:	movk	w10, #0xcccc, lsl #16
  405e60:	adrp	x11, 408000 <scols_reset_iter@plt+0x5710>
  405e64:	umull	x10, w9, w10
  405e68:	add	x11, x11, #0xc88
  405e6c:	lsr	x10, x10, #35
  405e70:	ldrb	w12, [x11, x10]
  405e74:	mov	x10, #0xffffffffffffffff    	// #-1
  405e78:	lsl	x10, x10, x9
  405e7c:	mov	x11, x8
  405e80:	lsr	x19, x1, x9
  405e84:	bic	x10, x1, x10
  405e88:	strb	w12, [x11], #1
  405e8c:	tbz	w0, #0, 405ea4 <scols_reset_iter@plt+0x35b4>
  405e90:	cmp	w9, #0xa
  405e94:	b.cc	405ea4 <scols_reset_iter@plt+0x35b4>  // b.lo, b.ul, b.last
  405e98:	mov	w11, #0x4269                	// #17001
  405e9c:	sturh	w11, [x8, #1]
  405ea0:	add	x11, x8, #0x3
  405ea4:	strb	wzr, [x11]
  405ea8:	cbz	x10, 405f64 <scols_reset_iter@plt+0x3674>
  405eac:	sub	w8, w9, #0xa
  405eb0:	lsr	x8, x10, x8
  405eb4:	tbnz	w0, #2, 405ecc <scols_reset_iter@plt+0x35dc>
  405eb8:	sub	x9, x8, #0x3b6
  405ebc:	cmp	x9, #0x64
  405ec0:	b.cs	405f40 <scols_reset_iter@plt+0x3650>  // b.hs, b.nlast
  405ec4:	add	w19, w19, #0x1
  405ec8:	b	405f64 <scols_reset_iter@plt+0x3674>
  405ecc:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
  405ed0:	add	x8, x8, #0x5
  405ed4:	movk	x9, #0xcccd
  405ed8:	umulh	x10, x8, x9
  405edc:	lsr	x20, x10, #3
  405ee0:	mul	x9, x20, x9
  405ee4:	mov	x10, #0x9999999999999999    	// #-7378697629483820647
  405ee8:	ror	x9, x9, #1
  405eec:	movk	x10, #0x1999, lsl #48
  405ef0:	cmp	x9, x10
  405ef4:	b.ls	405f44 <scols_reset_iter@plt+0x3654>  // b.plast
  405ef8:	cbz	x20, 405f64 <scols_reset_iter@plt+0x3674>
  405efc:	bl	402410 <localeconv@plt>
  405f00:	cbz	x0, 405f14 <scols_reset_iter@plt+0x3624>
  405f04:	ldr	x4, [x0]
  405f08:	cbz	x4, 405f14 <scols_reset_iter@plt+0x3624>
  405f0c:	ldrb	w8, [x4]
  405f10:	cbnz	w8, 405f1c <scols_reset_iter@plt+0x362c>
  405f14:	adrp	x4, 408000 <scols_reset_iter@plt+0x5710>
  405f18:	add	x4, x4, #0xc90
  405f1c:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  405f20:	add	x2, x2, #0xc92
  405f24:	add	x0, sp, #0x10
  405f28:	add	x6, sp, #0x8
  405f2c:	mov	w1, #0x20                  	// #32
  405f30:	mov	w3, w19
  405f34:	mov	x5, x20
  405f38:	bl	402400 <snprintf@plt>
  405f3c:	b	405f80 <scols_reset_iter@plt+0x3690>
  405f40:	add	x8, x8, #0x32
  405f44:	mov	x9, #0xf5c3                	// #62915
  405f48:	movk	x9, #0x5c28, lsl #16
  405f4c:	movk	x9, #0xc28f, lsl #32
  405f50:	lsr	x8, x8, #2
  405f54:	movk	x9, #0x28f5, lsl #48
  405f58:	umulh	x8, x8, x9
  405f5c:	lsr	x20, x8, #2
  405f60:	cbnz	x20, 405efc <scols_reset_iter@plt+0x360c>
  405f64:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  405f68:	add	x2, x2, #0xc9c
  405f6c:	add	x0, sp, #0x10
  405f70:	add	x4, sp, #0x8
  405f74:	mov	w1, #0x20                  	// #32
  405f78:	mov	w3, w19
  405f7c:	bl	402400 <snprintf@plt>
  405f80:	add	x0, sp, #0x10
  405f84:	bl	402570 <strdup@plt>
  405f88:	ldp	x20, x19, [sp, #64]
  405f8c:	ldp	x29, x30, [sp, #48]
  405f90:	add	sp, sp, #0x50
  405f94:	ret
  405f98:	stp	x29, x30, [sp, #-64]!
  405f9c:	stp	x24, x23, [sp, #16]
  405fa0:	stp	x22, x21, [sp, #32]
  405fa4:	stp	x20, x19, [sp, #48]
  405fa8:	mov	x29, sp
  405fac:	cbz	x0, 406060 <scols_reset_iter@plt+0x3770>
  405fb0:	mov	x19, x3
  405fb4:	mov	x9, x0
  405fb8:	mov	w0, #0xffffffff            	// #-1
  405fbc:	cbz	x3, 406064 <scols_reset_iter@plt+0x3774>
  405fc0:	mov	x20, x2
  405fc4:	cbz	x2, 406064 <scols_reset_iter@plt+0x3774>
  405fc8:	mov	x21, x1
  405fcc:	cbz	x1, 406064 <scols_reset_iter@plt+0x3774>
  405fd0:	ldrb	w10, [x9]
  405fd4:	cbz	w10, 406064 <scols_reset_iter@plt+0x3774>
  405fd8:	mov	x23, xzr
  405fdc:	mov	x8, xzr
  405fe0:	add	x22, x9, #0x1
  405fe4:	b	405ff8 <scols_reset_iter@plt+0x3708>
  405fe8:	mov	x0, x23
  405fec:	add	x22, x22, #0x1
  405ff0:	mov	x23, x0
  405ff4:	cbz	w10, 406064 <scols_reset_iter@plt+0x3774>
  405ff8:	cmp	x23, x20
  405ffc:	b.cs	406078 <scols_reset_iter@plt+0x3788>  // b.hs, b.nlast
  406000:	and	w11, w10, #0xff
  406004:	ldrb	w10, [x22]
  406008:	sub	x9, x22, #0x1
  40600c:	cmp	x8, #0x0
  406010:	csel	x8, x9, x8, eq  // eq = none
  406014:	cmp	w11, #0x2c
  406018:	csel	x9, x9, xzr, eq  // eq = none
  40601c:	cmp	w10, #0x0
  406020:	csel	x24, x22, x9, eq  // eq = none
  406024:	cbz	x8, 405fe8 <scols_reset_iter@plt+0x36f8>
  406028:	cbz	x24, 405fe8 <scols_reset_iter@plt+0x36f8>
  40602c:	subs	x1, x24, x8
  406030:	b.ls	406060 <scols_reset_iter@plt+0x3770>  // b.plast
  406034:	mov	x0, x8
  406038:	blr	x19
  40603c:	cmn	w0, #0x1
  406040:	b.eq	406060 <scols_reset_iter@plt+0x3770>  // b.none
  406044:	str	w0, [x21, x23, lsl #2]
  406048:	ldrb	w8, [x24]
  40604c:	add	x0, x23, #0x1
  406050:	cbz	w8, 406064 <scols_reset_iter@plt+0x3774>
  406054:	ldrb	w10, [x22]
  406058:	mov	x8, xzr
  40605c:	b	405fec <scols_reset_iter@plt+0x36fc>
  406060:	mov	w0, #0xffffffff            	// #-1
  406064:	ldp	x20, x19, [sp, #48]
  406068:	ldp	x22, x21, [sp, #32]
  40606c:	ldp	x24, x23, [sp, #16]
  406070:	ldp	x29, x30, [sp], #64
  406074:	ret
  406078:	mov	w0, #0xfffffffe            	// #-2
  40607c:	b	406064 <scols_reset_iter@plt+0x3774>
  406080:	stp	x29, x30, [sp, #-80]!
  406084:	str	x25, [sp, #16]
  406088:	stp	x24, x23, [sp, #32]
  40608c:	stp	x22, x21, [sp, #48]
  406090:	stp	x20, x19, [sp, #64]
  406094:	mov	x29, sp
  406098:	cbz	x0, 4060c0 <scols_reset_iter@plt+0x37d0>
  40609c:	mov	x19, x3
  4060a0:	mov	x9, x0
  4060a4:	mov	w0, #0xffffffff            	// #-1
  4060a8:	cbz	x3, 4060c4 <scols_reset_iter@plt+0x37d4>
  4060ac:	ldrb	w8, [x9]
  4060b0:	cbz	w8, 4060c4 <scols_reset_iter@plt+0x37d4>
  4060b4:	ldr	x11, [x19]
  4060b8:	cmp	x11, x2
  4060bc:	b.ls	4060dc <scols_reset_iter@plt+0x37ec>  // b.plast
  4060c0:	mov	w0, #0xffffffff            	// #-1
  4060c4:	ldp	x20, x19, [sp, #64]
  4060c8:	ldp	x22, x21, [sp, #48]
  4060cc:	ldp	x24, x23, [sp, #32]
  4060d0:	ldr	x25, [sp, #16]
  4060d4:	ldp	x29, x30, [sp], #80
  4060d8:	ret
  4060dc:	mov	x20, x4
  4060e0:	cmp	w8, #0x2b
  4060e4:	b.ne	4060f0 <scols_reset_iter@plt+0x3800>  // b.any
  4060e8:	add	x9, x9, #0x1
  4060ec:	b	4060f8 <scols_reset_iter@plt+0x3808>
  4060f0:	mov	x11, xzr
  4060f4:	str	xzr, [x19]
  4060f8:	mov	w0, #0xffffffff            	// #-1
  4060fc:	cbz	x20, 4060c4 <scols_reset_iter@plt+0x37d4>
  406100:	sub	x21, x2, x11
  406104:	cbz	x21, 4060c4 <scols_reset_iter@plt+0x37d4>
  406108:	cbz	x1, 4060c4 <scols_reset_iter@plt+0x37d4>
  40610c:	ldrb	w10, [x9]
  406110:	cbz	w10, 4060c4 <scols_reset_iter@plt+0x37d4>
  406114:	mov	x24, xzr
  406118:	mov	x8, xzr
  40611c:	add	x22, x1, x11, lsl #2
  406120:	add	x23, x9, #0x1
  406124:	b	406138 <scols_reset_iter@plt+0x3848>
  406128:	mov	x0, x24
  40612c:	add	x23, x23, #0x1
  406130:	mov	x24, x0
  406134:	cbz	w10, 4061a0 <scols_reset_iter@plt+0x38b0>
  406138:	cmp	x24, x21
  40613c:	b.cs	4061b8 <scols_reset_iter@plt+0x38c8>  // b.hs, b.nlast
  406140:	and	w11, w10, #0xff
  406144:	ldrb	w10, [x23]
  406148:	sub	x9, x23, #0x1
  40614c:	cmp	x8, #0x0
  406150:	csel	x8, x9, x8, eq  // eq = none
  406154:	cmp	w11, #0x2c
  406158:	csel	x9, x9, xzr, eq  // eq = none
  40615c:	cmp	w10, #0x0
  406160:	csel	x25, x23, x9, eq  // eq = none
  406164:	cbz	x8, 406128 <scols_reset_iter@plt+0x3838>
  406168:	cbz	x25, 406128 <scols_reset_iter@plt+0x3838>
  40616c:	subs	x1, x25, x8
  406170:	b.ls	4060c0 <scols_reset_iter@plt+0x37d0>  // b.plast
  406174:	mov	x0, x8
  406178:	blr	x20
  40617c:	cmn	w0, #0x1
  406180:	b.eq	4060c0 <scols_reset_iter@plt+0x37d0>  // b.none
  406184:	str	w0, [x22, x24, lsl #2]
  406188:	ldrb	w8, [x25]
  40618c:	add	x0, x24, #0x1
  406190:	cbz	w8, 4061a0 <scols_reset_iter@plt+0x38b0>
  406194:	ldrb	w10, [x23]
  406198:	mov	x8, xzr
  40619c:	b	40612c <scols_reset_iter@plt+0x383c>
  4061a0:	cmp	w0, #0x1
  4061a4:	b.lt	4060c4 <scols_reset_iter@plt+0x37d4>  // b.tstop
  4061a8:	ldr	x8, [x19]
  4061ac:	add	x8, x8, w0, uxtw
  4061b0:	str	x8, [x19]
  4061b4:	b	4060c4 <scols_reset_iter@plt+0x37d4>
  4061b8:	mov	w0, #0xfffffffe            	// #-2
  4061bc:	b	4060c4 <scols_reset_iter@plt+0x37d4>
  4061c0:	stp	x29, x30, [sp, #-64]!
  4061c4:	mov	x8, x0
  4061c8:	mov	w0, #0xffffffea            	// #-22
  4061cc:	str	x23, [sp, #16]
  4061d0:	stp	x22, x21, [sp, #32]
  4061d4:	stp	x20, x19, [sp, #48]
  4061d8:	mov	x29, sp
  4061dc:	cbz	x1, 406284 <scols_reset_iter@plt+0x3994>
  4061e0:	cbz	x8, 406284 <scols_reset_iter@plt+0x3994>
  4061e4:	mov	x19, x2
  4061e8:	cbz	x2, 406284 <scols_reset_iter@plt+0x3994>
  4061ec:	ldrb	w9, [x8]
  4061f0:	cbz	w9, 406280 <scols_reset_iter@plt+0x3990>
  4061f4:	mov	x20, x1
  4061f8:	mov	x0, xzr
  4061fc:	add	x21, x8, #0x1
  406200:	mov	w22, #0x1                   	// #1
  406204:	b	406210 <scols_reset_iter@plt+0x3920>
  406208:	add	x21, x21, #0x1
  40620c:	cbz	w9, 406280 <scols_reset_iter@plt+0x3990>
  406210:	mov	x8, x21
  406214:	ldrb	w10, [x8], #-1
  406218:	and	w9, w9, #0xff
  40621c:	cmp	x0, #0x0
  406220:	csel	x0, x8, x0, eq  // eq = none
  406224:	cmp	w9, #0x2c
  406228:	csel	x8, x8, xzr, eq  // eq = none
  40622c:	cmp	w10, #0x0
  406230:	mov	w9, w10
  406234:	csel	x23, x21, x8, eq  // eq = none
  406238:	cbz	x0, 406208 <scols_reset_iter@plt+0x3918>
  40623c:	cbz	x23, 406208 <scols_reset_iter@plt+0x3918>
  406240:	subs	x1, x23, x0
  406244:	b.ls	406298 <scols_reset_iter@plt+0x39a8>  // b.plast
  406248:	blr	x19
  40624c:	tbnz	w0, #31, 406284 <scols_reset_iter@plt+0x3994>
  406250:	mov	w8, w0
  406254:	lsr	x8, x8, #3
  406258:	ldrb	w9, [x20, x8]
  40625c:	and	w10, w0, #0x7
  406260:	lsl	w10, w22, w10
  406264:	orr	w9, w9, w10
  406268:	strb	w9, [x20, x8]
  40626c:	ldrb	w8, [x23]
  406270:	cbz	w8, 406280 <scols_reset_iter@plt+0x3990>
  406274:	ldrb	w9, [x21]
  406278:	mov	x0, xzr
  40627c:	b	406208 <scols_reset_iter@plt+0x3918>
  406280:	mov	w0, wzr
  406284:	ldp	x20, x19, [sp, #48]
  406288:	ldp	x22, x21, [sp, #32]
  40628c:	ldr	x23, [sp, #16]
  406290:	ldp	x29, x30, [sp], #64
  406294:	ret
  406298:	mov	w0, #0xffffffff            	// #-1
  40629c:	b	406284 <scols_reset_iter@plt+0x3994>
  4062a0:	stp	x29, x30, [sp, #-48]!
  4062a4:	mov	x8, x0
  4062a8:	mov	w0, #0xffffffea            	// #-22
  4062ac:	stp	x22, x21, [sp, #16]
  4062b0:	stp	x20, x19, [sp, #32]
  4062b4:	mov	x29, sp
  4062b8:	cbz	x1, 40634c <scols_reset_iter@plt+0x3a5c>
  4062bc:	cbz	x8, 40634c <scols_reset_iter@plt+0x3a5c>
  4062c0:	mov	x19, x2
  4062c4:	cbz	x2, 40634c <scols_reset_iter@plt+0x3a5c>
  4062c8:	ldrb	w9, [x8]
  4062cc:	cbz	w9, 406348 <scols_reset_iter@plt+0x3a58>
  4062d0:	mov	x20, x1
  4062d4:	mov	x0, xzr
  4062d8:	add	x21, x8, #0x1
  4062dc:	b	4062e8 <scols_reset_iter@plt+0x39f8>
  4062e0:	add	x21, x21, #0x1
  4062e4:	cbz	w9, 406348 <scols_reset_iter@plt+0x3a58>
  4062e8:	mov	x8, x21
  4062ec:	ldrb	w10, [x8], #-1
  4062f0:	and	w9, w9, #0xff
  4062f4:	cmp	x0, #0x0
  4062f8:	csel	x0, x8, x0, eq  // eq = none
  4062fc:	cmp	w9, #0x2c
  406300:	csel	x8, x8, xzr, eq  // eq = none
  406304:	cmp	w10, #0x0
  406308:	mov	w9, w10
  40630c:	csel	x22, x21, x8, eq  // eq = none
  406310:	cbz	x0, 4062e0 <scols_reset_iter@plt+0x39f0>
  406314:	cbz	x22, 4062e0 <scols_reset_iter@plt+0x39f0>
  406318:	subs	x1, x22, x0
  40631c:	b.ls	40635c <scols_reset_iter@plt+0x3a6c>  // b.plast
  406320:	blr	x19
  406324:	tbnz	x0, #63, 40634c <scols_reset_iter@plt+0x3a5c>
  406328:	ldr	x8, [x20]
  40632c:	orr	x8, x8, x0
  406330:	str	x8, [x20]
  406334:	ldrb	w8, [x22]
  406338:	cbz	w8, 406348 <scols_reset_iter@plt+0x3a58>
  40633c:	ldrb	w9, [x21]
  406340:	mov	x0, xzr
  406344:	b	4062e0 <scols_reset_iter@plt+0x39f0>
  406348:	mov	w0, wzr
  40634c:	ldp	x20, x19, [sp, #32]
  406350:	ldp	x22, x21, [sp, #16]
  406354:	ldp	x29, x30, [sp], #48
  406358:	ret
  40635c:	mov	w0, #0xffffffff            	// #-1
  406360:	b	40634c <scols_reset_iter@plt+0x3a5c>
  406364:	stp	x29, x30, [sp, #-64]!
  406368:	mov	x29, sp
  40636c:	str	x23, [sp, #16]
  406370:	stp	x22, x21, [sp, #32]
  406374:	stp	x20, x19, [sp, #48]
  406378:	str	xzr, [x29, #24]
  40637c:	cbz	x0, 406454 <scols_reset_iter@plt+0x3b64>
  406380:	mov	w21, w3
  406384:	mov	x19, x2
  406388:	mov	x23, x1
  40638c:	mov	x22, x0
  406390:	str	w3, [x1]
  406394:	str	w3, [x2]
  406398:	bl	402850 <__errno_location@plt>
  40639c:	str	wzr, [x0]
  4063a0:	ldrb	w8, [x22]
  4063a4:	mov	x20, x0
  4063a8:	cmp	w8, #0x3a
  4063ac:	b.ne	4063b8 <scols_reset_iter@plt+0x3ac8>  // b.any
  4063b0:	add	x21, x22, #0x1
  4063b4:	b	406414 <scols_reset_iter@plt+0x3b24>
  4063b8:	add	x1, x29, #0x18
  4063bc:	mov	w2, #0xa                   	// #10
  4063c0:	mov	x0, x22
  4063c4:	bl	402680 <strtol@plt>
  4063c8:	str	w0, [x23]
  4063cc:	str	w0, [x19]
  4063d0:	ldr	x8, [x29, #24]
  4063d4:	mov	w0, #0xffffffff            	// #-1
  4063d8:	cmp	x8, x22
  4063dc:	b.eq	406454 <scols_reset_iter@plt+0x3b64>  // b.none
  4063e0:	ldr	w9, [x20]
  4063e4:	cbnz	w9, 406454 <scols_reset_iter@plt+0x3b64>
  4063e8:	cbz	x8, 406454 <scols_reset_iter@plt+0x3b64>
  4063ec:	ldrb	w9, [x8]
  4063f0:	cmp	w9, #0x2d
  4063f4:	b.eq	406408 <scols_reset_iter@plt+0x3b18>  // b.none
  4063f8:	cmp	w9, #0x3a
  4063fc:	b.ne	406450 <scols_reset_iter@plt+0x3b60>  // b.any
  406400:	ldrb	w9, [x8, #1]
  406404:	cbz	w9, 406468 <scols_reset_iter@plt+0x3b78>
  406408:	add	x21, x8, #0x1
  40640c:	str	xzr, [x29, #24]
  406410:	str	wzr, [x20]
  406414:	add	x1, x29, #0x18
  406418:	mov	w2, #0xa                   	// #10
  40641c:	mov	x0, x21
  406420:	bl	402680 <strtol@plt>
  406424:	str	w0, [x19]
  406428:	ldr	w8, [x20]
  40642c:	mov	w0, #0xffffffff            	// #-1
  406430:	cbnz	w8, 406454 <scols_reset_iter@plt+0x3b64>
  406434:	ldr	x8, [x29, #24]
  406438:	cbz	x8, 406454 <scols_reset_iter@plt+0x3b64>
  40643c:	cmp	x8, x21
  406440:	mov	w0, #0xffffffff            	// #-1
  406444:	b.eq	406454 <scols_reset_iter@plt+0x3b64>  // b.none
  406448:	ldrb	w8, [x8]
  40644c:	cbnz	w8, 406454 <scols_reset_iter@plt+0x3b64>
  406450:	mov	w0, wzr
  406454:	ldp	x20, x19, [sp, #48]
  406458:	ldp	x22, x21, [sp, #32]
  40645c:	ldr	x23, [sp, #16]
  406460:	ldp	x29, x30, [sp], #64
  406464:	ret
  406468:	str	w21, [x19]
  40646c:	b	406450 <scols_reset_iter@plt+0x3b60>
  406470:	stp	x29, x30, [sp, #-48]!
  406474:	mov	w8, wzr
  406478:	str	x21, [sp, #16]
  40647c:	stp	x20, x19, [sp, #32]
  406480:	mov	x29, sp
  406484:	cbz	x1, 4065b8 <scols_reset_iter@plt+0x3cc8>
  406488:	cbz	x0, 4065b8 <scols_reset_iter@plt+0x3cc8>
  40648c:	ldrb	w8, [x0]
  406490:	and	w8, w8, #0xff
  406494:	cmp	w8, #0x2f
  406498:	mov	x19, x0
  40649c:	b.ne	4064b8 <scols_reset_iter@plt+0x3bc8>  // b.any
  4064a0:	mov	x0, x19
  4064a4:	ldrb	w8, [x0, #1]!
  4064a8:	cmp	w8, #0x2f
  4064ac:	mov	w8, #0x2f                  	// #47
  4064b0:	b.eq	406490 <scols_reset_iter@plt+0x3ba0>  // b.none
  4064b4:	b	4064c8 <scols_reset_iter@plt+0x3bd8>
  4064b8:	cbnz	w8, 4064c8 <scols_reset_iter@plt+0x3bd8>
  4064bc:	mov	x20, xzr
  4064c0:	mov	x19, xzr
  4064c4:	b	4064e8 <scols_reset_iter@plt+0x3bf8>
  4064c8:	mov	w20, #0x1                   	// #1
  4064cc:	ldrb	w8, [x19, x20]
  4064d0:	cbz	w8, 4064e8 <scols_reset_iter@plt+0x3bf8>
  4064d4:	cmp	w8, #0x2f
  4064d8:	b.eq	4064e8 <scols_reset_iter@plt+0x3bf8>  // b.none
  4064dc:	add	x20, x20, #0x1
  4064e0:	ldrb	w8, [x19, x20]
  4064e4:	cbnz	w8, 4064d4 <scols_reset_iter@plt+0x3be4>
  4064e8:	ldrb	w8, [x1]
  4064ec:	and	w8, w8, #0xff
  4064f0:	cmp	w8, #0x2f
  4064f4:	mov	x21, x1
  4064f8:	b.ne	406514 <scols_reset_iter@plt+0x3c24>  // b.any
  4064fc:	mov	x1, x21
  406500:	ldrb	w8, [x1, #1]!
  406504:	cmp	w8, #0x2f
  406508:	mov	w8, #0x2f                  	// #47
  40650c:	b.eq	4064ec <scols_reset_iter@plt+0x3bfc>  // b.none
  406510:	b	406524 <scols_reset_iter@plt+0x3c34>
  406514:	cbnz	w8, 406524 <scols_reset_iter@plt+0x3c34>
  406518:	mov	x8, xzr
  40651c:	mov	x21, xzr
  406520:	b	406544 <scols_reset_iter@plt+0x3c54>
  406524:	mov	w8, #0x1                   	// #1
  406528:	ldrb	w9, [x21, x8]
  40652c:	cbz	w9, 406544 <scols_reset_iter@plt+0x3c54>
  406530:	cmp	w9, #0x2f
  406534:	b.eq	406544 <scols_reset_iter@plt+0x3c54>  // b.none
  406538:	add	x8, x8, #0x1
  40653c:	ldrb	w9, [x21, x8]
  406540:	cbnz	w9, 406530 <scols_reset_iter@plt+0x3c40>
  406544:	add	x9, x8, x20
  406548:	cmp	x9, #0x1
  40654c:	b.eq	406558 <scols_reset_iter@plt+0x3c68>  // b.none
  406550:	cbnz	x9, 406578 <scols_reset_iter@plt+0x3c88>
  406554:	b	4065ac <scols_reset_iter@plt+0x3cbc>
  406558:	cbz	x19, 406568 <scols_reset_iter@plt+0x3c78>
  40655c:	ldrb	w9, [x19]
  406560:	cmp	w9, #0x2f
  406564:	b.eq	4065ac <scols_reset_iter@plt+0x3cbc>  // b.none
  406568:	cbz	x21, 4065b4 <scols_reset_iter@plt+0x3cc4>
  40656c:	ldrb	w9, [x21]
  406570:	cmp	w9, #0x2f
  406574:	b.eq	4065ac <scols_reset_iter@plt+0x3cbc>  // b.none
  406578:	cmp	x20, x8
  40657c:	mov	w8, wzr
  406580:	b.ne	4065b8 <scols_reset_iter@plt+0x3cc8>  // b.any
  406584:	cbz	x19, 4065b8 <scols_reset_iter@plt+0x3cc8>
  406588:	cbz	x21, 4065b8 <scols_reset_iter@plt+0x3cc8>
  40658c:	mov	x0, x19
  406590:	mov	x1, x21
  406594:	mov	x2, x20
  406598:	bl	4024b0 <strncmp@plt>
  40659c:	cbnz	w0, 4065b4 <scols_reset_iter@plt+0x3cc4>
  4065a0:	add	x0, x19, x20
  4065a4:	add	x1, x21, x20
  4065a8:	b	40648c <scols_reset_iter@plt+0x3b9c>
  4065ac:	mov	w8, #0x1                   	// #1
  4065b0:	b	4065b8 <scols_reset_iter@plt+0x3cc8>
  4065b4:	mov	w8, wzr
  4065b8:	ldp	x20, x19, [sp, #32]
  4065bc:	ldr	x21, [sp, #16]
  4065c0:	mov	w0, w8
  4065c4:	ldp	x29, x30, [sp], #48
  4065c8:	ret
  4065cc:	stp	x29, x30, [sp, #-64]!
  4065d0:	orr	x8, x0, x1
  4065d4:	stp	x24, x23, [sp, #16]
  4065d8:	stp	x22, x21, [sp, #32]
  4065dc:	stp	x20, x19, [sp, #48]
  4065e0:	mov	x29, sp
  4065e4:	cbz	x8, 406618 <scols_reset_iter@plt+0x3d28>
  4065e8:	mov	x19, x1
  4065ec:	mov	x21, x0
  4065f0:	mov	x20, x2
  4065f4:	cbz	x0, 406634 <scols_reset_iter@plt+0x3d44>
  4065f8:	cbz	x19, 406650 <scols_reset_iter@plt+0x3d60>
  4065fc:	mov	x0, x21
  406600:	bl	4022d0 <strlen@plt>
  406604:	mvn	x8, x0
  406608:	cmp	x8, x20
  40660c:	b.cs	406658 <scols_reset_iter@plt+0x3d68>  // b.hs, b.nlast
  406610:	mov	x22, xzr
  406614:	b	406694 <scols_reset_iter@plt+0x3da4>
  406618:	adrp	x0, 408000 <scols_reset_iter@plt+0x5710>
  40661c:	add	x0, x0, #0x9b0
  406620:	ldp	x20, x19, [sp, #48]
  406624:	ldp	x22, x21, [sp, #32]
  406628:	ldp	x24, x23, [sp, #16]
  40662c:	ldp	x29, x30, [sp], #64
  406630:	b	402570 <strdup@plt>
  406634:	mov	x0, x19
  406638:	mov	x1, x20
  40663c:	ldp	x20, x19, [sp, #48]
  406640:	ldp	x22, x21, [sp, #32]
  406644:	ldp	x24, x23, [sp, #16]
  406648:	ldp	x29, x30, [sp], #64
  40664c:	b	402730 <strndup@plt>
  406650:	mov	x0, x21
  406654:	b	406620 <scols_reset_iter@plt+0x3d30>
  406658:	add	x24, x0, x20
  40665c:	mov	x23, x0
  406660:	add	x0, x24, #0x1
  406664:	bl	402470 <malloc@plt>
  406668:	mov	x22, x0
  40666c:	cbz	x0, 406694 <scols_reset_iter@plt+0x3da4>
  406670:	mov	x0, x22
  406674:	mov	x1, x21
  406678:	mov	x2, x23
  40667c:	bl	4022a0 <memcpy@plt>
  406680:	add	x0, x22, x23
  406684:	mov	x1, x19
  406688:	mov	x2, x20
  40668c:	bl	4022a0 <memcpy@plt>
  406690:	strb	wzr, [x22, x24]
  406694:	mov	x0, x22
  406698:	ldp	x20, x19, [sp, #48]
  40669c:	ldp	x22, x21, [sp, #32]
  4066a0:	ldp	x24, x23, [sp, #16]
  4066a4:	ldp	x29, x30, [sp], #64
  4066a8:	ret
  4066ac:	stp	x29, x30, [sp, #-64]!
  4066b0:	stp	x20, x19, [sp, #48]
  4066b4:	mov	x20, x0
  4066b8:	stp	x24, x23, [sp, #16]
  4066bc:	stp	x22, x21, [sp, #32]
  4066c0:	mov	x29, sp
  4066c4:	cbz	x1, 4066f8 <scols_reset_iter@plt+0x3e08>
  4066c8:	mov	x0, x1
  4066cc:	mov	x19, x1
  4066d0:	bl	4022d0 <strlen@plt>
  4066d4:	mov	x21, x0
  4066d8:	cbz	x20, 406704 <scols_reset_iter@plt+0x3e14>
  4066dc:	mov	x0, x20
  4066e0:	bl	4022d0 <strlen@plt>
  4066e4:	mvn	x8, x0
  4066e8:	cmp	x21, x8
  4066ec:	b.ls	406720 <scols_reset_iter@plt+0x3e30>  // b.plast
  4066f0:	mov	x22, xzr
  4066f4:	b	40675c <scols_reset_iter@plt+0x3e6c>
  4066f8:	cbz	x20, 406774 <scols_reset_iter@plt+0x3e84>
  4066fc:	mov	x0, x20
  406700:	b	40677c <scols_reset_iter@plt+0x3e8c>
  406704:	mov	x0, x19
  406708:	mov	x1, x21
  40670c:	ldp	x20, x19, [sp, #48]
  406710:	ldp	x22, x21, [sp, #32]
  406714:	ldp	x24, x23, [sp, #16]
  406718:	ldp	x29, x30, [sp], #64
  40671c:	b	402730 <strndup@plt>
  406720:	add	x24, x0, x21
  406724:	mov	x23, x0
  406728:	add	x0, x24, #0x1
  40672c:	bl	402470 <malloc@plt>
  406730:	mov	x22, x0
  406734:	cbz	x0, 40675c <scols_reset_iter@plt+0x3e6c>
  406738:	mov	x0, x22
  40673c:	mov	x1, x20
  406740:	mov	x2, x23
  406744:	bl	4022a0 <memcpy@plt>
  406748:	add	x0, x22, x23
  40674c:	mov	x1, x19
  406750:	mov	x2, x21
  406754:	bl	4022a0 <memcpy@plt>
  406758:	strb	wzr, [x22, x24]
  40675c:	mov	x0, x22
  406760:	ldp	x20, x19, [sp, #48]
  406764:	ldp	x22, x21, [sp, #32]
  406768:	ldp	x24, x23, [sp, #16]
  40676c:	ldp	x29, x30, [sp], #64
  406770:	ret
  406774:	adrp	x0, 408000 <scols_reset_iter@plt+0x5710>
  406778:	add	x0, x0, #0x9b0
  40677c:	ldp	x20, x19, [sp, #48]
  406780:	ldp	x22, x21, [sp, #32]
  406784:	ldp	x24, x23, [sp, #16]
  406788:	ldp	x29, x30, [sp], #64
  40678c:	b	402570 <strdup@plt>
  406790:	sub	sp, sp, #0x140
  406794:	stp	x29, x30, [sp, #240]
  406798:	add	x29, sp, #0xf0
  40679c:	sub	x9, x29, #0x70
  4067a0:	mov	x10, sp
  4067a4:	mov	x11, #0xffffffffffffffd0    	// #-48
  4067a8:	add	x8, x29, #0x50
  4067ac:	movk	x11, #0xff80, lsl #32
  4067b0:	add	x9, x9, #0x30
  4067b4:	add	x10, x10, #0x80
  4067b8:	stp	x8, x9, [x29, #-32]
  4067bc:	stp	x10, x11, [x29, #-16]
  4067c0:	stp	x2, x3, [x29, #-112]
  4067c4:	stp	x4, x5, [x29, #-96]
  4067c8:	stp	x6, x7, [x29, #-80]
  4067cc:	stp	q1, q2, [sp, #16]
  4067d0:	str	q0, [sp]
  4067d4:	ldp	q0, q1, [x29, #-32]
  4067d8:	stp	x20, x19, [sp, #304]
  4067dc:	mov	x19, x0
  4067e0:	add	x0, x29, #0x18
  4067e4:	sub	x2, x29, #0x40
  4067e8:	str	x28, [sp, #256]
  4067ec:	stp	x24, x23, [sp, #272]
  4067f0:	stp	x22, x21, [sp, #288]
  4067f4:	stp	q3, q4, [sp, #48]
  4067f8:	stp	q5, q6, [sp, #80]
  4067fc:	str	q7, [sp, #112]
  406800:	stp	q0, q1, [x29, #-64]
  406804:	bl	402700 <vasprintf@plt>
  406808:	tbnz	w0, #31, 406840 <scols_reset_iter@plt+0x3f50>
  40680c:	ldr	x21, [x29, #24]
  406810:	orr	x8, x19, x21
  406814:	cbz	x8, 406848 <scols_reset_iter@plt+0x3f58>
  406818:	mov	w22, w0
  40681c:	cbz	x19, 40685c <scols_reset_iter@plt+0x3f6c>
  406820:	cbz	x21, 406870 <scols_reset_iter@plt+0x3f80>
  406824:	mov	x0, x19
  406828:	bl	4022d0 <strlen@plt>
  40682c:	mvn	x8, x0
  406830:	cmp	x8, x22
  406834:	b.cs	406878 <scols_reset_iter@plt+0x3f88>  // b.hs, b.nlast
  406838:	mov	x20, xzr
  40683c:	b	4068b4 <scols_reset_iter@plt+0x3fc4>
  406840:	mov	x20, xzr
  406844:	b	4068bc <scols_reset_iter@plt+0x3fcc>
  406848:	adrp	x0, 408000 <scols_reset_iter@plt+0x5710>
  40684c:	add	x0, x0, #0x9b0
  406850:	bl	402570 <strdup@plt>
  406854:	mov	x20, x0
  406858:	b	4068b4 <scols_reset_iter@plt+0x3fc4>
  40685c:	mov	x0, x21
  406860:	mov	x1, x22
  406864:	bl	402730 <strndup@plt>
  406868:	mov	x20, x0
  40686c:	b	4068b4 <scols_reset_iter@plt+0x3fc4>
  406870:	mov	x0, x19
  406874:	b	406850 <scols_reset_iter@plt+0x3f60>
  406878:	add	x24, x0, x22
  40687c:	mov	x23, x0
  406880:	add	x0, x24, #0x1
  406884:	bl	402470 <malloc@plt>
  406888:	mov	x20, x0
  40688c:	cbz	x0, 4068b4 <scols_reset_iter@plt+0x3fc4>
  406890:	mov	x0, x20
  406894:	mov	x1, x19
  406898:	mov	x2, x23
  40689c:	bl	4022a0 <memcpy@plt>
  4068a0:	add	x0, x20, x23
  4068a4:	mov	x1, x21
  4068a8:	mov	x2, x22
  4068ac:	bl	4022a0 <memcpy@plt>
  4068b0:	strb	wzr, [x20, x24]
  4068b4:	ldr	x0, [x29, #24]
  4068b8:	bl	4026b0 <free@plt>
  4068bc:	mov	x0, x20
  4068c0:	ldp	x20, x19, [sp, #304]
  4068c4:	ldp	x22, x21, [sp, #288]
  4068c8:	ldp	x24, x23, [sp, #272]
  4068cc:	ldr	x28, [sp, #256]
  4068d0:	ldp	x29, x30, [sp, #240]
  4068d4:	add	sp, sp, #0x140
  4068d8:	ret
  4068dc:	sub	sp, sp, #0x60
  4068e0:	stp	x29, x30, [sp, #16]
  4068e4:	stp	x26, x25, [sp, #32]
  4068e8:	stp	x24, x23, [sp, #48]
  4068ec:	stp	x22, x21, [sp, #64]
  4068f0:	stp	x20, x19, [sp, #80]
  4068f4:	ldr	x23, [x0]
  4068f8:	add	x29, sp, #0x10
  4068fc:	ldrb	w8, [x23]
  406900:	cbz	w8, 406ab0 <scols_reset_iter@plt+0x41c0>
  406904:	mov	x20, x0
  406908:	mov	x22, x1
  40690c:	mov	x0, x23
  406910:	mov	x1, x2
  406914:	mov	w24, w3
  406918:	mov	x21, x2
  40691c:	bl	402740 <strspn@plt>
  406920:	add	x19, x23, x0
  406924:	ldrb	w25, [x19]
  406928:	cbz	x25, 406aac <scols_reset_iter@plt+0x41bc>
  40692c:	cbz	w24, 4069b0 <scols_reset_iter@plt+0x40c0>
  406930:	cmp	w25, #0x3f
  406934:	b.hi	4069cc <scols_reset_iter@plt+0x40dc>  // b.pmore
  406938:	mov	w8, #0x1                   	// #1
  40693c:	mov	x9, #0x1                   	// #1
  406940:	lsl	x8, x8, x25
  406944:	movk	x9, #0x84, lsl #32
  406948:	and	x8, x8, x9
  40694c:	cbz	x8, 4069cc <scols_reset_iter@plt+0x40dc>
  406950:	sturb	w25, [x29, #-4]
  406954:	sturb	wzr, [x29, #-3]
  406958:	mov	x24, x19
  40695c:	ldrb	w9, [x24, #1]!
  406960:	cbz	w9, 406a48 <scols_reset_iter@plt+0x4158>
  406964:	add	x10, x0, x23
  406968:	mov	x26, xzr
  40696c:	mov	w8, wzr
  406970:	add	x23, x10, #0x2
  406974:	b	406998 <scols_reset_iter@plt+0x40a8>
  406978:	sxtb	w1, w9
  40697c:	sub	x0, x29, #0x4
  406980:	bl	402750 <strchr@plt>
  406984:	cbnz	x0, 406a5c <scols_reset_iter@plt+0x416c>
  406988:	mov	w8, wzr
  40698c:	ldrb	w9, [x23, x26]
  406990:	add	x26, x26, #0x1
  406994:	cbz	w9, 406a44 <scols_reset_iter@plt+0x4154>
  406998:	cbnz	w8, 406988 <scols_reset_iter@plt+0x4098>
  40699c:	and	w8, w9, #0xff
  4069a0:	cmp	w8, #0x5c
  4069a4:	b.ne	406978 <scols_reset_iter@plt+0x4088>  // b.any
  4069a8:	mov	w8, #0x1                   	// #1
  4069ac:	b	40698c <scols_reset_iter@plt+0x409c>
  4069b0:	mov	x0, x19
  4069b4:	mov	x1, x21
  4069b8:	bl	402820 <strcspn@plt>
  4069bc:	add	x8, x19, x0
  4069c0:	str	x0, [x22]
  4069c4:	str	x8, [x20]
  4069c8:	b	406ab4 <scols_reset_iter@plt+0x41c4>
  4069cc:	add	x9, x0, x23
  4069d0:	mov	x24, xzr
  4069d4:	mov	w8, wzr
  4069d8:	add	x23, x9, #0x1
  4069dc:	b	406a00 <scols_reset_iter@plt+0x4110>
  4069e0:	sxtb	w1, w25
  4069e4:	mov	x0, x21
  4069e8:	bl	402750 <strchr@plt>
  4069ec:	cbnz	x0, 406a54 <scols_reset_iter@plt+0x4164>
  4069f0:	mov	w8, wzr
  4069f4:	ldrb	w25, [x23, x24]
  4069f8:	add	x24, x24, #0x1
  4069fc:	cbz	w25, 406a18 <scols_reset_iter@plt+0x4128>
  406a00:	cbnz	w8, 4069f0 <scols_reset_iter@plt+0x4100>
  406a04:	and	w8, w25, #0xff
  406a08:	cmp	w8, #0x5c
  406a0c:	b.ne	4069e0 <scols_reset_iter@plt+0x40f0>  // b.any
  406a10:	mov	w8, #0x1                   	// #1
  406a14:	b	4069f4 <scols_reset_iter@plt+0x4104>
  406a18:	sub	w8, w24, w8
  406a1c:	sxtw	x8, w8
  406a20:	str	x8, [x22]
  406a24:	add	x22, x19, x8
  406a28:	ldrsb	w1, [x22]
  406a2c:	cbz	w1, 406a3c <scols_reset_iter@plt+0x414c>
  406a30:	mov	x0, x21
  406a34:	bl	402750 <strchr@plt>
  406a38:	cbz	x0, 406aac <scols_reset_iter@plt+0x41bc>
  406a3c:	str	x22, [x20]
  406a40:	b	406ab4 <scols_reset_iter@plt+0x41c4>
  406a44:	b	406a60 <scols_reset_iter@plt+0x4170>
  406a48:	mov	w8, wzr
  406a4c:	mov	w26, wzr
  406a50:	b	406a60 <scols_reset_iter@plt+0x4170>
  406a54:	mov	w8, wzr
  406a58:	b	406a18 <scols_reset_iter@plt+0x4128>
  406a5c:	mov	w8, wzr
  406a60:	sub	w8, w26, w8
  406a64:	sxtw	x23, w8
  406a68:	str	x23, [x22]
  406a6c:	add	x8, x23, x19
  406a70:	ldrb	w8, [x8, #1]
  406a74:	cbz	w8, 406aac <scols_reset_iter@plt+0x41bc>
  406a78:	cmp	w8, w25
  406a7c:	b.ne	406aac <scols_reset_iter@plt+0x41bc>  // b.any
  406a80:	add	x8, x23, x19
  406a84:	ldrsb	w1, [x8, #2]
  406a88:	cbz	w1, 406a98 <scols_reset_iter@plt+0x41a8>
  406a8c:	mov	x0, x21
  406a90:	bl	402750 <strchr@plt>
  406a94:	cbz	x0, 406aac <scols_reset_iter@plt+0x41bc>
  406a98:	add	x8, x19, x23
  406a9c:	add	x8, x8, #0x2
  406aa0:	str	x8, [x20]
  406aa4:	mov	x19, x24
  406aa8:	b	406ab4 <scols_reset_iter@plt+0x41c4>
  406aac:	str	x19, [x20]
  406ab0:	mov	x19, xzr
  406ab4:	mov	x0, x19
  406ab8:	ldp	x20, x19, [sp, #80]
  406abc:	ldp	x22, x21, [sp, #64]
  406ac0:	ldp	x24, x23, [sp, #48]
  406ac4:	ldp	x26, x25, [sp, #32]
  406ac8:	ldp	x29, x30, [sp, #16]
  406acc:	add	sp, sp, #0x60
  406ad0:	ret
  406ad4:	stp	x29, x30, [sp, #-32]!
  406ad8:	str	x19, [sp, #16]
  406adc:	mov	x19, x0
  406ae0:	mov	x29, sp
  406ae4:	mov	x0, x19
  406ae8:	bl	4024e0 <fgetc@plt>
  406aec:	cmp	w0, #0xa
  406af0:	b.eq	406b04 <scols_reset_iter@plt+0x4214>  // b.none
  406af4:	cmn	w0, #0x1
  406af8:	b.ne	406ae4 <scols_reset_iter@plt+0x41f4>  // b.any
  406afc:	mov	w0, #0x1                   	// #1
  406b00:	b	406b08 <scols_reset_iter@plt+0x4218>
  406b04:	mov	w0, wzr
  406b08:	ldr	x19, [sp, #16]
  406b0c:	ldp	x29, x30, [sp], #32
  406b10:	ret
  406b14:	sub	sp, sp, #0x50
  406b18:	stp	x22, x21, [sp, #48]
  406b1c:	stp	x20, x19, [sp, #64]
  406b20:	mov	x19, x1
  406b24:	mov	x21, x0
  406b28:	mov	x2, sp
  406b2c:	mov	w0, #0x1                   	// #1
  406b30:	mov	w1, #0x5413                	// #21523
  406b34:	stp	x29, x30, [sp, #16]
  406b38:	stp	x24, x23, [sp, #32]
  406b3c:	add	x29, sp, #0x10
  406b40:	bl	4028c0 <ioctl@plt>
  406b44:	ldrh	w20, [sp]
  406b48:	mov	w22, w0
  406b4c:	cbz	x21, 406bb0 <scols_reset_iter@plt+0x42c0>
  406b50:	ldrh	w0, [sp, #2]
  406b54:	cbz	w0, 406b5c <scols_reset_iter@plt+0x426c>
  406b58:	cbz	w22, 406bac <scols_reset_iter@plt+0x42bc>
  406b5c:	adrp	x0, 408000 <scols_reset_iter@plt+0x5710>
  406b60:	add	x0, x0, #0xca1
  406b64:	bl	402860 <getenv@plt>
  406b68:	cbz	x0, 406ba8 <scols_reset_iter@plt+0x42b8>
  406b6c:	mov	x23, x0
  406b70:	str	xzr, [sp, #8]
  406b74:	bl	402850 <__errno_location@plt>
  406b78:	mov	x24, x0
  406b7c:	str	wzr, [x0]
  406b80:	add	x1, sp, #0x8
  406b84:	mov	w2, #0xa                   	// #10
  406b88:	mov	x0, x23
  406b8c:	bl	402680 <strtol@plt>
  406b90:	ldr	w8, [x24]
  406b94:	cbnz	w8, 406ba8 <scols_reset_iter@plt+0x42b8>
  406b98:	ldr	x8, [sp, #8]
  406b9c:	cbz	x8, 406ba8 <scols_reset_iter@plt+0x42b8>
  406ba0:	ldrb	w9, [x8]
  406ba4:	cbz	w9, 406c2c <scols_reset_iter@plt+0x433c>
  406ba8:	mov	w0, #0xffffffff            	// #-1
  406bac:	str	w0, [x21]
  406bb0:	cbz	x19, 406c10 <scols_reset_iter@plt+0x4320>
  406bb4:	cbz	w20, 406bbc <scols_reset_iter@plt+0x42cc>
  406bb8:	cbz	w22, 406c0c <scols_reset_iter@plt+0x431c>
  406bbc:	adrp	x0, 408000 <scols_reset_iter@plt+0x5710>
  406bc0:	add	x0, x0, #0xca9
  406bc4:	bl	402860 <getenv@plt>
  406bc8:	cbz	x0, 406c08 <scols_reset_iter@plt+0x4318>
  406bcc:	mov	x21, x0
  406bd0:	str	xzr, [sp, #8]
  406bd4:	bl	402850 <__errno_location@plt>
  406bd8:	mov	x20, x0
  406bdc:	str	wzr, [x0]
  406be0:	add	x1, sp, #0x8
  406be4:	mov	w2, #0xa                   	// #10
  406be8:	mov	x0, x21
  406bec:	bl	402680 <strtol@plt>
  406bf0:	ldr	w8, [x20]
  406bf4:	cbnz	w8, 406c08 <scols_reset_iter@plt+0x4318>
  406bf8:	ldr	x8, [sp, #8]
  406bfc:	cbz	x8, 406c08 <scols_reset_iter@plt+0x4318>
  406c00:	ldrb	w9, [x8]
  406c04:	cbz	w9, 406c48 <scols_reset_iter@plt+0x4358>
  406c08:	mov	w20, #0xffffffff            	// #-1
  406c0c:	str	w20, [x19]
  406c10:	ldp	x20, x19, [sp, #64]
  406c14:	ldp	x22, x21, [sp, #48]
  406c18:	ldp	x24, x23, [sp, #32]
  406c1c:	ldp	x29, x30, [sp, #16]
  406c20:	mov	w0, wzr
  406c24:	add	sp, sp, #0x50
  406c28:	ret
  406c2c:	sub	x9, x0, #0x1
  406c30:	mov	w10, #0x7ffffffe            	// #2147483646
  406c34:	cmp	x9, x10
  406c38:	b.hi	406ba8 <scols_reset_iter@plt+0x42b8>  // b.pmore
  406c3c:	cmp	x8, x23
  406c40:	b.hi	406bac <scols_reset_iter@plt+0x42bc>  // b.pmore
  406c44:	b	406ba8 <scols_reset_iter@plt+0x42b8>
  406c48:	sub	x9, x0, #0x1
  406c4c:	mov	w10, #0x7ffffffe            	// #2147483646
  406c50:	mov	x20, x0
  406c54:	cmp	x9, x10
  406c58:	b.hi	406c08 <scols_reset_iter@plt+0x4318>  // b.pmore
  406c5c:	cmp	x8, x21
  406c60:	b.hi	406c0c <scols_reset_iter@plt+0x431c>  // b.pmore
  406c64:	b	406c08 <scols_reset_iter@plt+0x4318>
  406c68:	stp	x29, x30, [sp, #-32]!
  406c6c:	mov	x29, sp
  406c70:	str	x19, [sp, #16]
  406c74:	mov	w19, w0
  406c78:	add	x0, x29, #0x1c
  406c7c:	mov	x1, xzr
  406c80:	str	wzr, [x29, #28]
  406c84:	bl	406b14 <scols_reset_iter@plt+0x4224>
  406c88:	ldr	w8, [x29, #28]
  406c8c:	cmp	w8, #0x0
  406c90:	csel	w0, w8, w19, gt
  406c94:	ldr	x19, [sp, #16]
  406c98:	ldp	x29, x30, [sp], #32
  406c9c:	ret
  406ca0:	stp	x29, x30, [sp, #-32]!
  406ca4:	mov	w0, wzr
  406ca8:	str	x19, [sp, #16]
  406cac:	mov	x29, sp
  406cb0:	bl	4027a0 <isatty@plt>
  406cb4:	mov	w19, wzr
  406cb8:	cbnz	w0, 406ce4 <scols_reset_iter@plt+0x43f4>
  406cbc:	mov	w0, #0x1                   	// #1
  406cc0:	mov	w19, #0x1                   	// #1
  406cc4:	bl	4027a0 <isatty@plt>
  406cc8:	cbnz	w0, 406ce4 <scols_reset_iter@plt+0x43f4>
  406ccc:	mov	w0, #0x2                   	// #2
  406cd0:	mov	w19, #0x2                   	// #2
  406cd4:	bl	4027a0 <isatty@plt>
  406cd8:	cmp	w0, #0x0
  406cdc:	mov	w8, #0xffffffea            	// #-22
  406ce0:	csel	w19, w8, w19, eq  // eq = none
  406ce4:	mov	w0, w19
  406ce8:	ldr	x19, [sp, #16]
  406cec:	ldp	x29, x30, [sp], #32
  406cf0:	ret
  406cf4:	stp	x29, x30, [sp, #-48]!
  406cf8:	stp	x22, x21, [sp, #16]
  406cfc:	stp	x20, x19, [sp, #32]
  406d00:	mov	x19, x2
  406d04:	mov	x20, x1
  406d08:	mov	x22, x0
  406d0c:	mov	x29, sp
  406d10:	cbz	x1, 406d18 <scols_reset_iter@plt+0x4428>
  406d14:	str	xzr, [x20]
  406d18:	cbz	x22, 406d20 <scols_reset_iter@plt+0x4430>
  406d1c:	str	xzr, [x22]
  406d20:	cbz	x19, 406d28 <scols_reset_iter@plt+0x4438>
  406d24:	str	xzr, [x19]
  406d28:	mov	w0, wzr
  406d2c:	bl	4027a0 <isatty@plt>
  406d30:	mov	w21, wzr
  406d34:	cbnz	w0, 406d58 <scols_reset_iter@plt+0x4468>
  406d38:	mov	w0, #0x1                   	// #1
  406d3c:	mov	w21, #0x1                   	// #1
  406d40:	bl	4027a0 <isatty@plt>
  406d44:	cbnz	w0, 406d58 <scols_reset_iter@plt+0x4468>
  406d48:	mov	w0, #0x2                   	// #2
  406d4c:	mov	w21, #0x2                   	// #2
  406d50:	bl	4027a0 <isatty@plt>
  406d54:	cbz	w0, 406de4 <scols_reset_iter@plt+0x44f4>
  406d58:	mov	w0, w21
  406d5c:	bl	4023a0 <ttyname@plt>
  406d60:	cbz	x0, 406dd0 <scols_reset_iter@plt+0x44e0>
  406d64:	mov	x21, x0
  406d68:	cbz	x22, 406d70 <scols_reset_iter@plt+0x4480>
  406d6c:	str	x21, [x22]
  406d70:	orr	x8, x20, x19
  406d74:	cbz	x8, 406d98 <scols_reset_iter@plt+0x44a8>
  406d78:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  406d7c:	add	x1, x1, #0xcaf
  406d80:	mov	w2, #0x5                   	// #5
  406d84:	mov	x0, x21
  406d88:	bl	4024b0 <strncmp@plt>
  406d8c:	add	x8, x21, #0x5
  406d90:	cmp	w0, #0x0
  406d94:	csel	x21, x8, x21, eq  // eq = none
  406d98:	cbz	x20, 406da0 <scols_reset_iter@plt+0x44b0>
  406d9c:	str	x21, [x20]
  406da0:	cbz	x19, 406dc8 <scols_reset_iter@plt+0x44d8>
  406da4:	ldrb	w20, [x21]
  406da8:	cbz	w20, 406dc8 <scols_reset_iter@plt+0x44d8>
  406dac:	bl	402670 <__ctype_b_loc@plt>
  406db0:	ldr	x8, [x0]
  406db4:	sxtb	x9, w20
  406db8:	ldrh	w9, [x8, x9, lsl #1]
  406dbc:	tbnz	w9, #11, 406dd8 <scols_reset_iter@plt+0x44e8>
  406dc0:	ldrb	w20, [x21, #1]!
  406dc4:	cbnz	w20, 406db4 <scols_reset_iter@plt+0x44c4>
  406dc8:	mov	w0, wzr
  406dcc:	b	406de8 <scols_reset_iter@plt+0x44f8>
  406dd0:	mov	w0, #0xffffffff            	// #-1
  406dd4:	b	406de8 <scols_reset_iter@plt+0x44f8>
  406dd8:	mov	w0, wzr
  406ddc:	str	x21, [x19]
  406de0:	b	406de8 <scols_reset_iter@plt+0x44f8>
  406de4:	mov	w0, #0xffffffea            	// #-22
  406de8:	ldp	x20, x19, [sp, #32]
  406dec:	ldp	x22, x21, [sp, #16]
  406df0:	ldp	x29, x30, [sp], #48
  406df4:	ret
  406df8:	stp	x29, x30, [sp, #-32]!
  406dfc:	str	x19, [sp, #16]
  406e00:	mov	x19, x0
  406e04:	adrp	x0, 408000 <scols_reset_iter@plt+0x5710>
  406e08:	add	x0, x0, #0xcb5
  406e0c:	mov	x29, sp
  406e10:	bl	402860 <getenv@plt>
  406e14:	str	x0, [x19]
  406e18:	ldr	x19, [sp, #16]
  406e1c:	cmp	x0, #0x0
  406e20:	mov	w8, #0xffffffea            	// #-22
  406e24:	csel	w8, wzr, w8, eq  // eq = none
  406e28:	mov	w0, w8
  406e2c:	ldp	x29, x30, [sp], #32
  406e30:	ret
  406e34:	cbz	x0, 406e6c <scols_reset_iter@plt+0x457c>
  406e38:	stp	x29, x30, [sp, #-32]!
  406e3c:	stp	x20, x19, [sp, #16]
  406e40:	mov	x19, x0
  406e44:	ldr	x0, [x0]
  406e48:	mov	x29, sp
  406e4c:	cbz	x0, 406e60 <scols_reset_iter@plt+0x4570>
  406e50:	add	x20, x19, #0x8
  406e54:	bl	4026b0 <free@plt>
  406e58:	ldr	x0, [x20], #8
  406e5c:	cbnz	x0, 406e54 <scols_reset_iter@plt+0x4564>
  406e60:	str	xzr, [x19]
  406e64:	ldp	x20, x19, [sp, #16]
  406e68:	ldp	x29, x30, [sp], #32
  406e6c:	ret
  406e70:	stp	x29, x30, [sp, #-32]!
  406e74:	stp	x20, x19, [sp, #16]
  406e78:	mov	x19, x0
  406e7c:	mov	x29, sp
  406e80:	cbz	x0, 406e9c <scols_reset_iter@plt+0x45ac>
  406e84:	ldr	x0, [x19]
  406e88:	cbz	x0, 406e9c <scols_reset_iter@plt+0x45ac>
  406e8c:	add	x20, x19, #0x8
  406e90:	bl	4026b0 <free@plt>
  406e94:	ldr	x0, [x20], #8
  406e98:	cbnz	x0, 406e90 <scols_reset_iter@plt+0x45a0>
  406e9c:	mov	x0, x19
  406ea0:	bl	4026b0 <free@plt>
  406ea4:	ldp	x20, x19, [sp, #16]
  406ea8:	mov	x0, xzr
  406eac:	ldp	x29, x30, [sp], #32
  406eb0:	ret
  406eb4:	stp	x29, x30, [sp, #-48]!
  406eb8:	stp	x20, x19, [sp, #32]
  406ebc:	mov	x20, x0
  406ec0:	str	x21, [sp, #16]
  406ec4:	mov	x29, sp
  406ec8:	cbz	x0, 406ef0 <scols_reset_iter@plt+0x4600>
  406ecc:	ldr	x8, [x20]
  406ed0:	cbz	x8, 406ef0 <scols_reset_iter@plt+0x4600>
  406ed4:	mov	w8, #0x1                   	// #1
  406ed8:	ldr	x9, [x20, x8, lsl #3]
  406edc:	add	x8, x8, #0x1
  406ee0:	cbnz	x9, 406ed8 <scols_reset_iter@plt+0x45e8>
  406ee4:	and	x8, x8, #0xffffffff
  406ee8:	lsl	x0, x8, #3
  406eec:	b	406ef4 <scols_reset_iter@plt+0x4604>
  406ef0:	mov	w0, #0x8                   	// #8
  406ef4:	bl	402470 <malloc@plt>
  406ef8:	mov	x19, x0
  406efc:	cbz	x0, 406f3c <scols_reset_iter@plt+0x464c>
  406f00:	cbz	x20, 406f34 <scols_reset_iter@plt+0x4644>
  406f04:	ldr	x0, [x20]
  406f08:	cbz	x0, 406f34 <scols_reset_iter@plt+0x4644>
  406f0c:	mov	x21, xzr
  406f10:	add	x20, x20, #0x8
  406f14:	bl	402570 <strdup@plt>
  406f18:	str	x0, [x19, x21]
  406f1c:	cbz	x0, 406f50 <scols_reset_iter@plt+0x4660>
  406f20:	ldr	x0, [x20, x21]
  406f24:	add	x21, x21, #0x8
  406f28:	cbnz	x0, 406f14 <scols_reset_iter@plt+0x4624>
  406f2c:	add	x8, x19, x21
  406f30:	b	406f38 <scols_reset_iter@plt+0x4648>
  406f34:	mov	x8, x19
  406f38:	str	xzr, [x8]
  406f3c:	mov	x0, x19
  406f40:	ldp	x20, x19, [sp, #32]
  406f44:	ldr	x21, [sp, #16]
  406f48:	ldp	x29, x30, [sp], #48
  406f4c:	ret
  406f50:	ldr	x0, [x19]
  406f54:	cbz	x0, 406f68 <scols_reset_iter@plt+0x4678>
  406f58:	add	x20, x19, #0x8
  406f5c:	bl	4026b0 <free@plt>
  406f60:	ldr	x0, [x20], #8
  406f64:	cbnz	x0, 406f5c <scols_reset_iter@plt+0x466c>
  406f68:	mov	x0, x19
  406f6c:	bl	4026b0 <free@plt>
  406f70:	mov	x19, xzr
  406f74:	b	406f3c <scols_reset_iter@plt+0x464c>
  406f78:	cbz	x0, 406f9c <scols_reset_iter@plt+0x46ac>
  406f7c:	ldr	x9, [x0]
  406f80:	mov	x8, x0
  406f84:	cbz	x9, 406fa0 <scols_reset_iter@plt+0x46b0>
  406f88:	mov	x0, xzr
  406f8c:	add	x8, x8, #0x8
  406f90:	ldr	x9, [x8, x0, lsl #3]
  406f94:	add	x0, x0, #0x1
  406f98:	cbnz	x9, 406f90 <scols_reset_iter@plt+0x46a0>
  406f9c:	ret
  406fa0:	mov	w0, wzr
  406fa4:	ret
  406fa8:	sub	sp, sp, #0x50
  406fac:	str	x21, [sp, #48]
  406fb0:	stp	x20, x19, [sp, #64]
  406fb4:	mov	x19, x1
  406fb8:	mov	x21, x0
  406fbc:	stp	x29, x30, [sp, #32]
  406fc0:	add	x29, sp, #0x20
  406fc4:	cbz	x0, 407030 <scols_reset_iter@plt+0x4740>
  406fc8:	ldp	q0, q1, [x19]
  406fcc:	cmn	x21, #0x1
  406fd0:	cset	w8, ne  // ne = any
  406fd4:	stp	q0, q1, [sp]
  406fd8:	ldr	x9, [sp, #8]
  406fdc:	ldr	w10, [sp, #24]
  406fe0:	mov	w11, w10
  406fe4:	b	407004 <scols_reset_iter@plt+0x4714>
  406fe8:	mov	w11, w10
  406fec:	ldr	x12, [sp]
  406ff0:	add	x13, x12, #0x8
  406ff4:	str	x13, [sp]
  406ff8:	ldr	x12, [x12]
  406ffc:	cmn	x12, #0x1
  407000:	b.ne	407024 <scols_reset_iter@plt+0x4734>  // b.any
  407004:	tbz	w11, #31, 406fec <scols_reset_iter@plt+0x46fc>
  407008:	add	w10, w11, #0x8
  40700c:	cmn	w11, #0x8
  407010:	str	w10, [sp, #24]
  407014:	b.gt	406fe8 <scols_reset_iter@plt+0x46f8>
  407018:	add	x12, x9, w11, sxtw
  40701c:	mov	w11, w10
  407020:	b	406ff8 <scols_reset_iter@plt+0x4708>
  407024:	cbz	x12, 407034 <scols_reset_iter@plt+0x4744>
  407028:	add	w8, w8, #0x1
  40702c:	b	406fe0 <scols_reset_iter@plt+0x46f0>
  407030:	mov	w8, wzr
  407034:	add	w8, w8, #0x1
  407038:	lsl	x0, x8, #3
  40703c:	bl	402470 <malloc@plt>
  407040:	mov	x20, x0
  407044:	cbz	x0, 4070d8 <scols_reset_iter@plt+0x47e8>
  407048:	cbz	x21, 4070d4 <scols_reset_iter@plt+0x47e4>
  40704c:	cmn	x21, #0x1
  407050:	b.eq	40706c <scols_reset_iter@plt+0x477c>  // b.none
  407054:	mov	x0, x21
  407058:	bl	402570 <strdup@plt>
  40705c:	str	x0, [x20]
  407060:	cbz	x0, 407108 <scols_reset_iter@plt+0x4818>
  407064:	mov	w21, #0x1                   	// #1
  407068:	b	407084 <scols_reset_iter@plt+0x4794>
  40706c:	mov	w21, wzr
  407070:	b	407084 <scols_reset_iter@plt+0x4794>
  407074:	bl	402570 <strdup@plt>
  407078:	str	x0, [x20, w21, uxtw #3]
  40707c:	cbz	x0, 4070f0 <scols_reset_iter@plt+0x4800>
  407080:	add	w21, w21, #0x1
  407084:	ldr	w9, [x19, #24]
  407088:	b	4070a4 <scols_reset_iter@plt+0x47b4>
  40708c:	ldr	x10, [x19, #8]
  407090:	add	x9, x10, w9, sxtw
  407094:	ldr	x0, [x9]
  407098:	mov	w9, w8
  40709c:	cmn	x0, #0x1
  4070a0:	b.ne	4070d0 <scols_reset_iter@plt+0x47e0>  // b.any
  4070a4:	tbnz	w9, #31, 4070b0 <scols_reset_iter@plt+0x47c0>
  4070a8:	mov	w8, w9
  4070ac:	b	4070c0 <scols_reset_iter@plt+0x47d0>
  4070b0:	add	w8, w9, #0x8
  4070b4:	cmn	w9, #0x8
  4070b8:	str	w8, [x19, #24]
  4070bc:	b.le	40708c <scols_reset_iter@plt+0x479c>
  4070c0:	ldr	x9, [x19]
  4070c4:	add	x10, x9, #0x8
  4070c8:	str	x10, [x19]
  4070cc:	b	407094 <scols_reset_iter@plt+0x47a4>
  4070d0:	cbnz	x0, 407074 <scols_reset_iter@plt+0x4784>
  4070d4:	str	xzr, [x20, w21, uxtw #3]
  4070d8:	mov	x0, x20
  4070dc:	ldp	x20, x19, [sp, #64]
  4070e0:	ldr	x21, [sp, #48]
  4070e4:	ldp	x29, x30, [sp, #32]
  4070e8:	add	sp, sp, #0x50
  4070ec:	ret
  4070f0:	ldr	x0, [x20]
  4070f4:	cbz	x0, 407108 <scols_reset_iter@plt+0x4818>
  4070f8:	add	x19, x20, #0x8
  4070fc:	bl	4026b0 <free@plt>
  407100:	ldr	x0, [x19], #8
  407104:	cbnz	x0, 4070fc <scols_reset_iter@plt+0x480c>
  407108:	mov	x0, x20
  40710c:	bl	4026b0 <free@plt>
  407110:	mov	x20, xzr
  407114:	b	4070d8 <scols_reset_iter@plt+0x47e8>
  407118:	sub	sp, sp, #0x120
  40711c:	stp	x29, x30, [sp, #256]
  407120:	add	x29, sp, #0x100
  407124:	mov	x8, #0xffffffffffffffc8    	// #-56
  407128:	mov	x9, sp
  40712c:	sub	x10, x29, #0x78
  407130:	movk	x8, #0xff80, lsl #32
  407134:	add	x11, x29, #0x20
  407138:	add	x9, x9, #0x80
  40713c:	add	x10, x10, #0x38
  407140:	stp	x9, x8, [x29, #-16]
  407144:	stp	x11, x10, [x29, #-32]
  407148:	stp	x1, x2, [x29, #-120]
  40714c:	stp	x3, x4, [x29, #-104]
  407150:	stp	x5, x6, [x29, #-88]
  407154:	stur	x7, [x29, #-72]
  407158:	stp	q0, q1, [sp]
  40715c:	ldp	q0, q1, [x29, #-32]
  407160:	sub	x1, x29, #0x40
  407164:	str	x28, [sp, #272]
  407168:	stp	q2, q3, [sp, #32]
  40716c:	stp	q4, q5, [sp, #64]
  407170:	stp	q6, q7, [sp, #96]
  407174:	stp	q0, q1, [x29, #-64]
  407178:	bl	406fa8 <scols_reset_iter@plt+0x46b8>
  40717c:	ldr	x28, [sp, #272]
  407180:	ldp	x29, x30, [sp, #256]
  407184:	add	sp, sp, #0x120
  407188:	ret
  40718c:	stp	x29, x30, [sp, #-48]!
  407190:	stp	x22, x21, [sp, #16]
  407194:	stp	x20, x19, [sp, #32]
  407198:	mov	x29, sp
  40719c:	cbz	x1, 40721c <scols_reset_iter@plt+0x492c>
  4071a0:	mov	x20, x0
  4071a4:	ldr	x0, [x1]
  4071a8:	mov	x19, x1
  4071ac:	cbz	x0, 407230 <scols_reset_iter@plt+0x4940>
  4071b0:	bl	402570 <strdup@plt>
  4071b4:	cbz	x0, 40722c <scols_reset_iter@plt+0x493c>
  4071b8:	mov	x21, x0
  4071bc:	ldr	x0, [x20]
  4071c0:	cbz	x0, 4071ec <scols_reset_iter@plt+0x48fc>
  4071c4:	ldr	x8, [x0]
  4071c8:	cbz	x8, 4071ec <scols_reset_iter@plt+0x48fc>
  4071cc:	mov	x22, xzr
  4071d0:	add	x8, x0, #0x8
  4071d4:	ldr	x9, [x8, x22, lsl #3]
  4071d8:	add	x22, x22, #0x1
  4071dc:	cbnz	x9, 4071d4 <scols_reset_iter@plt+0x48e4>
  4071e0:	cmn	w22, #0x3
  4071e4:	b.ls	4071f0 <scols_reset_iter@plt+0x4900>  // b.plast
  4071e8:	b	407224 <scols_reset_iter@plt+0x4934>
  4071ec:	mov	w22, wzr
  4071f0:	add	w8, w22, #0x2
  4071f4:	lsl	x1, x8, #3
  4071f8:	bl	402560 <realloc@plt>
  4071fc:	cbz	x0, 407224 <scols_reset_iter@plt+0x4934>
  407200:	add	w8, w22, #0x1
  407204:	str	x21, [x0, w22, uxtw #3]
  407208:	str	xzr, [x0, w8, uxtw #3]
  40720c:	str	x0, [x20]
  407210:	ldr	x0, [x19, #8]!
  407214:	cbnz	x0, 4071b0 <scols_reset_iter@plt+0x48c0>
  407218:	b	407230 <scols_reset_iter@plt+0x4940>
  40721c:	mov	w0, wzr
  407220:	b	407230 <scols_reset_iter@plt+0x4940>
  407224:	mov	x0, x21
  407228:	bl	4026b0 <free@plt>
  40722c:	mov	w0, #0xfffffff4            	// #-12
  407230:	ldp	x20, x19, [sp, #32]
  407234:	ldp	x22, x21, [sp, #16]
  407238:	ldp	x29, x30, [sp], #48
  40723c:	ret
  407240:	stp	x29, x30, [sp, #-48]!
  407244:	str	x21, [sp, #16]
  407248:	stp	x20, x19, [sp, #32]
  40724c:	mov	x29, sp
  407250:	cbz	x1, 407298 <scols_reset_iter@plt+0x49a8>
  407254:	mov	x19, x0
  407258:	mov	x0, x1
  40725c:	bl	402570 <strdup@plt>
  407260:	cbz	x0, 4072d8 <scols_reset_iter@plt+0x49e8>
  407264:	mov	x20, x0
  407268:	ldr	x0, [x19]
  40726c:	cbz	x0, 4072a0 <scols_reset_iter@plt+0x49b0>
  407270:	ldr	x8, [x0]
  407274:	cbz	x8, 4072a0 <scols_reset_iter@plt+0x49b0>
  407278:	mov	x21, xzr
  40727c:	add	x8, x0, #0x8
  407280:	ldr	x9, [x8, x21, lsl #3]
  407284:	add	x21, x21, #0x1
  407288:	cbnz	x9, 407280 <scols_reset_iter@plt+0x4990>
  40728c:	cmn	w21, #0x3
  407290:	b.ls	4072a4 <scols_reset_iter@plt+0x49b4>  // b.plast
  407294:	b	4072d0 <scols_reset_iter@plt+0x49e0>
  407298:	mov	w0, wzr
  40729c:	b	4072dc <scols_reset_iter@plt+0x49ec>
  4072a0:	mov	w21, wzr
  4072a4:	add	w8, w21, #0x2
  4072a8:	lsl	x1, x8, #3
  4072ac:	bl	402560 <realloc@plt>
  4072b0:	cbz	x0, 4072d0 <scols_reset_iter@plt+0x49e0>
  4072b4:	mov	x8, x0
  4072b8:	add	w9, w21, #0x1
  4072bc:	mov	w0, wzr
  4072c0:	str	x20, [x8, w21, uxtw #3]
  4072c4:	str	xzr, [x8, w9, uxtw #3]
  4072c8:	str	x8, [x19]
  4072cc:	b	4072dc <scols_reset_iter@plt+0x49ec>
  4072d0:	mov	x0, x20
  4072d4:	bl	4026b0 <free@plt>
  4072d8:	mov	w0, #0xfffffff4            	// #-12
  4072dc:	ldp	x20, x19, [sp, #32]
  4072e0:	ldr	x21, [sp, #16]
  4072e4:	ldp	x29, x30, [sp], #48
  4072e8:	ret
  4072ec:	stp	x29, x30, [sp, #-64]!
  4072f0:	str	x23, [sp, #16]
  4072f4:	stp	x22, x21, [sp, #32]
  4072f8:	stp	x20, x19, [sp, #48]
  4072fc:	mov	x29, sp
  407300:	cbz	x1, 407388 <scols_reset_iter@plt+0x4a98>
  407304:	mov	x21, x0
  407308:	ldr	x0, [x1]
  40730c:	mov	x20, x1
  407310:	cbz	x0, 40739c <scols_reset_iter@plt+0x4aac>
  407314:	mov	x19, x2
  407318:	mov	x1, x19
  40731c:	bl	4066ac <scols_reset_iter@plt+0x3dbc>
  407320:	cbz	x0, 407398 <scols_reset_iter@plt+0x4aa8>
  407324:	mov	x22, x0
  407328:	ldr	x0, [x21]
  40732c:	cbz	x0, 407358 <scols_reset_iter@plt+0x4a68>
  407330:	ldr	x8, [x0]
  407334:	cbz	x8, 407358 <scols_reset_iter@plt+0x4a68>
  407338:	mov	x23, xzr
  40733c:	add	x8, x0, #0x8
  407340:	ldr	x9, [x8, x23, lsl #3]
  407344:	add	x23, x23, #0x1
  407348:	cbnz	x9, 407340 <scols_reset_iter@plt+0x4a50>
  40734c:	cmn	w23, #0x3
  407350:	b.ls	40735c <scols_reset_iter@plt+0x4a6c>  // b.plast
  407354:	b	407390 <scols_reset_iter@plt+0x4aa0>
  407358:	mov	w23, wzr
  40735c:	add	w8, w23, #0x2
  407360:	lsl	x1, x8, #3
  407364:	bl	402560 <realloc@plt>
  407368:	cbz	x0, 407390 <scols_reset_iter@plt+0x4aa0>
  40736c:	add	w8, w23, #0x1
  407370:	str	x22, [x0, w23, uxtw #3]
  407374:	str	xzr, [x0, w8, uxtw #3]
  407378:	str	x0, [x21]
  40737c:	ldr	x0, [x20, #8]!
  407380:	cbnz	x0, 407318 <scols_reset_iter@plt+0x4a28>
  407384:	b	40739c <scols_reset_iter@plt+0x4aac>
  407388:	mov	w0, wzr
  40738c:	b	40739c <scols_reset_iter@plt+0x4aac>
  407390:	mov	x0, x22
  407394:	bl	4026b0 <free@plt>
  407398:	mov	w0, #0xfffffff4            	// #-12
  40739c:	ldp	x20, x19, [sp, #48]
  4073a0:	ldp	x22, x21, [sp, #32]
  4073a4:	ldr	x23, [sp, #16]
  4073a8:	ldp	x29, x30, [sp], #64
  4073ac:	ret
  4073b0:	stp	x29, x30, [sp, #-48]!
  4073b4:	str	x21, [sp, #16]
  4073b8:	stp	x20, x19, [sp, #32]
  4073bc:	mov	x29, sp
  4073c0:	cbz	x1, 4073fc <scols_reset_iter@plt+0x4b0c>
  4073c4:	mov	x19, x0
  4073c8:	ldr	x0, [x0]
  4073cc:	mov	x20, x1
  4073d0:	cbz	x0, 407404 <scols_reset_iter@plt+0x4b14>
  4073d4:	ldr	x8, [x0]
  4073d8:	cbz	x8, 407404 <scols_reset_iter@plt+0x4b14>
  4073dc:	mov	x21, xzr
  4073e0:	add	x8, x0, #0x8
  4073e4:	ldr	x9, [x8, x21, lsl #3]
  4073e8:	add	x21, x21, #0x1
  4073ec:	cbnz	x9, 4073e4 <scols_reset_iter@plt+0x4af4>
  4073f0:	cmn	w21, #0x3
  4073f4:	b.ls	407408 <scols_reset_iter@plt+0x4b18>  // b.plast
  4073f8:	b	407434 <scols_reset_iter@plt+0x4b44>
  4073fc:	mov	w0, wzr
  407400:	b	407438 <scols_reset_iter@plt+0x4b48>
  407404:	mov	w21, wzr
  407408:	add	w8, w21, #0x2
  40740c:	lsl	x1, x8, #3
  407410:	bl	402560 <realloc@plt>
  407414:	cbz	x0, 407434 <scols_reset_iter@plt+0x4b44>
  407418:	mov	x8, x0
  40741c:	mov	w0, wzr
  407420:	add	w9, w21, #0x1
  407424:	str	x20, [x8, w21, uxtw #3]
  407428:	str	xzr, [x8, w9, uxtw #3]
  40742c:	str	x8, [x19]
  407430:	b	407438 <scols_reset_iter@plt+0x4b48>
  407434:	mov	w0, #0xfffffff4            	// #-12
  407438:	ldp	x20, x19, [sp, #32]
  40743c:	ldr	x21, [sp, #16]
  407440:	ldp	x29, x30, [sp], #48
  407444:	ret
  407448:	sub	sp, sp, #0x40
  40744c:	stp	x29, x30, [sp, #16]
  407450:	str	x21, [sp, #32]
  407454:	stp	x20, x19, [sp, #48]
  407458:	add	x29, sp, #0x10
  40745c:	cbz	x0, 40755c <scols_reset_iter@plt+0x4c6c>
  407460:	mov	x19, x1
  407464:	mov	x21, x0
  407468:	str	x0, [x29, #24]
  40746c:	add	x0, x29, #0x18
  407470:	add	x1, sp, #0x8
  407474:	mov	x2, x19
  407478:	mov	w3, wzr
  40747c:	bl	4068dc <scols_reset_iter@plt+0x3fec>
  407480:	cbz	x0, 4074b0 <scols_reset_iter@plt+0x4bc0>
  407484:	mov	w20, #0x1                   	// #1
  407488:	add	x0, x29, #0x18
  40748c:	add	x1, sp, #0x8
  407490:	mov	x2, x19
  407494:	mov	w3, wzr
  407498:	bl	4068dc <scols_reset_iter@plt+0x3fec>
  40749c:	add	w20, w20, #0x1
  4074a0:	cbnz	x0, 407488 <scols_reset_iter@plt+0x4b98>
  4074a4:	mov	w8, w20
  4074a8:	lsl	x0, x8, #3
  4074ac:	b	4074b4 <scols_reset_iter@plt+0x4bc4>
  4074b0:	mov	w0, #0x8                   	// #8
  4074b4:	bl	402470 <malloc@plt>
  4074b8:	mov	x20, x0
  4074bc:	cbz	x0, 407544 <scols_reset_iter@plt+0x4c54>
  4074c0:	add	x0, x29, #0x18
  4074c4:	add	x1, sp, #0x8
  4074c8:	mov	x2, x19
  4074cc:	mov	w3, wzr
  4074d0:	str	x21, [x29, #24]
  4074d4:	bl	4068dc <scols_reset_iter@plt+0x3fec>
  4074d8:	cbz	x0, 407514 <scols_reset_iter@plt+0x4c24>
  4074dc:	mov	w21, wzr
  4074e0:	ldr	x1, [sp, #8]
  4074e4:	bl	402730 <strndup@plt>
  4074e8:	str	x0, [x20, w21, uxtw #3]
  4074ec:	cbz	x0, 407520 <scols_reset_iter@plt+0x4c30>
  4074f0:	add	x0, x29, #0x18
  4074f4:	add	x1, sp, #0x8
  4074f8:	mov	x2, x19
  4074fc:	mov	w3, wzr
  407500:	add	w21, w21, #0x1
  407504:	bl	4068dc <scols_reset_iter@plt+0x3fec>
  407508:	cbnz	x0, 4074e0 <scols_reset_iter@plt+0x4bf0>
  40750c:	mov	w8, w21
  407510:	b	407518 <scols_reset_iter@plt+0x4c28>
  407514:	mov	x8, xzr
  407518:	str	xzr, [x20, x8, lsl #3]
  40751c:	b	407544 <scols_reset_iter@plt+0x4c54>
  407520:	ldr	x0, [x20]
  407524:	cbz	x0, 407538 <scols_reset_iter@plt+0x4c48>
  407528:	add	x19, x20, #0x8
  40752c:	bl	4026b0 <free@plt>
  407530:	ldr	x0, [x19], #8
  407534:	cbnz	x0, 40752c <scols_reset_iter@plt+0x4c3c>
  407538:	mov	x0, x20
  40753c:	bl	4026b0 <free@plt>
  407540:	mov	x20, xzr
  407544:	mov	x0, x20
  407548:	ldp	x20, x19, [sp, #48]
  40754c:	ldr	x21, [sp, #32]
  407550:	ldp	x29, x30, [sp, #16]
  407554:	add	sp, sp, #0x40
  407558:	ret
  40755c:	adrp	x0, 408000 <scols_reset_iter@plt+0x5710>
  407560:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  407564:	adrp	x3, 408000 <scols_reset_iter@plt+0x5710>
  407568:	add	x0, x0, #0x43e
  40756c:	add	x1, x1, #0xcba
  407570:	add	x3, x3, #0xcc5
  407574:	mov	w2, #0xc1                  	// #193
  407578:	bl	402840 <__assert_fail@plt>
  40757c:	stp	x29, x30, [sp, #-64]!
  407580:	adrp	x8, 408000 <scols_reset_iter@plt+0x5710>
  407584:	add	x8, x8, #0x2b6
  407588:	cmp	x1, #0x0
  40758c:	stp	x20, x19, [sp, #48]
  407590:	csel	x19, x8, x1, eq  // eq = none
  407594:	mov	x20, x0
  407598:	mov	x0, x19
  40759c:	str	x23, [sp, #16]
  4075a0:	stp	x22, x21, [sp, #32]
  4075a4:	mov	x29, sp
  4075a8:	bl	4022d0 <strlen@plt>
  4075ac:	cbz	x20, 4075ec <scols_reset_iter@plt+0x4cfc>
  4075b0:	ldr	x8, [x20]
  4075b4:	cbz	x8, 4075ec <scols_reset_iter@plt+0x4cfc>
  4075b8:	mov	x21, x0
  4075bc:	mov	x9, xzr
  4075c0:	add	x22, x20, #0x8
  4075c4:	add	x10, x9, x21
  4075c8:	cmp	x9, #0x0
  4075cc:	mov	x0, x8
  4075d0:	csel	x23, xzr, x10, eq  // eq = none
  4075d4:	bl	4022d0 <strlen@plt>
  4075d8:	ldr	x8, [x22], #8
  4075dc:	add	x9, x0, x23
  4075e0:	cbnz	x8, 4075c4 <scols_reset_iter@plt+0x4cd4>
  4075e4:	add	x0, x9, #0x1
  4075e8:	b	4075f0 <scols_reset_iter@plt+0x4d00>
  4075ec:	mov	w0, #0x1                   	// #1
  4075f0:	bl	402470 <malloc@plt>
  4075f4:	mov	x21, x0
  4075f8:	cbz	x0, 407650 <scols_reset_iter@plt+0x4d60>
  4075fc:	mov	x0, x21
  407600:	cbz	x20, 40764c <scols_reset_iter@plt+0x4d5c>
  407604:	ldr	x1, [x20]
  407608:	mov	x0, x21
  40760c:	cbz	x1, 40764c <scols_reset_iter@plt+0x4d5c>
  407610:	add	x20, x20, #0x8
  407614:	mov	x0, x21
  407618:	b	40762c <scols_reset_iter@plt+0x4d3c>
  40761c:	mov	x0, x2
  407620:	bl	402420 <stpcpy@plt>
  407624:	ldr	x1, [x20], #8
  407628:	cbz	x1, 40764c <scols_reset_iter@plt+0x4d5c>
  40762c:	cmp	x0, x21
  407630:	mov	x2, x21
  407634:	b.eq	40761c <scols_reset_iter@plt+0x4d2c>  // b.none
  407638:	mov	x1, x19
  40763c:	bl	402420 <stpcpy@plt>
  407640:	ldur	x1, [x20, #-8]
  407644:	mov	x2, x0
  407648:	b	40761c <scols_reset_iter@plt+0x4d2c>
  40764c:	strb	wzr, [x0]
  407650:	mov	x0, x21
  407654:	ldp	x20, x19, [sp, #48]
  407658:	ldp	x22, x21, [sp, #32]
  40765c:	ldr	x23, [sp, #16]
  407660:	ldp	x29, x30, [sp], #64
  407664:	ret
  407668:	stp	x29, x30, [sp, #-64]!
  40766c:	str	x23, [sp, #16]
  407670:	stp	x22, x21, [sp, #32]
  407674:	stp	x20, x19, [sp, #48]
  407678:	mov	x29, sp
  40767c:	cbz	x1, 40774c <scols_reset_iter@plt+0x4e5c>
  407680:	ldr	x20, [x0]
  407684:	mov	x21, x1
  407688:	mov	x19, x0
  40768c:	cbz	x20, 4076b8 <scols_reset_iter@plt+0x4dc8>
  407690:	ldr	x8, [x20]
  407694:	cbz	x8, 4076b8 <scols_reset_iter@plt+0x4dc8>
  407698:	mov	x23, xzr
  40769c:	add	x8, x20, #0x8
  4076a0:	ldr	x9, [x8, x23, lsl #3]
  4076a4:	add	x23, x23, #0x1
  4076a8:	cbnz	x9, 4076a0 <scols_reset_iter@plt+0x4db0>
  4076ac:	cmn	w23, #0x3
  4076b0:	b.ls	4076bc <scols_reset_iter@plt+0x4dcc>  // b.plast
  4076b4:	b	407754 <scols_reset_iter@plt+0x4e64>
  4076b8:	mov	w23, wzr
  4076bc:	add	w8, w23, #0x2
  4076c0:	lsl	x0, x8, #3
  4076c4:	bl	402470 <malloc@plt>
  4076c8:	cbz	x0, 407754 <scols_reset_iter@plt+0x4e64>
  4076cc:	mov	x22, x0
  4076d0:	cbz	w23, 40772c <scols_reset_iter@plt+0x4e3c>
  4076d4:	cmp	w23, #0x4
  4076d8:	mov	w8, w23
  4076dc:	b.cc	407704 <scols_reset_iter@plt+0x4e14>  // b.lo, b.ul, b.last
  4076e0:	lsl	x9, x8, #3
  4076e4:	add	x10, x22, #0x8
  4076e8:	add	x11, x20, x9
  4076ec:	cmp	x10, x11
  4076f0:	b.cs	40776c <scols_reset_iter@plt+0x4e7c>  // b.hs, b.nlast
  4076f4:	add	x9, x9, x22
  4076f8:	add	x9, x9, #0x8
  4076fc:	cmp	x9, x20
  407700:	b.ls	40776c <scols_reset_iter@plt+0x4e7c>  // b.plast
  407704:	mov	x9, xzr
  407708:	lsl	x10, x9, #3
  40770c:	sub	x8, x8, x9
  407710:	add	x9, x20, x10
  407714:	add	x10, x10, x22
  407718:	add	x10, x10, #0x8
  40771c:	ldr	x11, [x9], #8
  407720:	subs	x8, x8, #0x1
  407724:	str	x11, [x10], #8
  407728:	b.ne	40771c <scols_reset_iter@plt+0x4e2c>  // b.any
  40772c:	add	w8, w23, #0x1
  407730:	mov	x0, x20
  407734:	str	x21, [x22]
  407738:	str	xzr, [x22, w8, uxtw #3]
  40773c:	bl	4026b0 <free@plt>
  407740:	mov	w0, wzr
  407744:	str	x22, [x19]
  407748:	b	407758 <scols_reset_iter@plt+0x4e68>
  40774c:	mov	w0, wzr
  407750:	b	407758 <scols_reset_iter@plt+0x4e68>
  407754:	mov	w0, #0xfffffff4            	// #-12
  407758:	ldp	x20, x19, [sp, #48]
  40775c:	ldp	x22, x21, [sp, #32]
  407760:	ldr	x23, [sp, #16]
  407764:	ldp	x29, x30, [sp], #64
  407768:	ret
  40776c:	and	x9, x8, #0xfffffffc
  407770:	add	x10, x22, #0x18
  407774:	add	x11, x20, #0x10
  407778:	mov	x12, x9
  40777c:	ldp	q0, q1, [x11, #-16]
  407780:	subs	x12, x12, #0x4
  407784:	add	x11, x11, #0x20
  407788:	stp	q0, q1, [x10, #-16]
  40778c:	add	x10, x10, #0x20
  407790:	b.ne	40777c <scols_reset_iter@plt+0x4e8c>  // b.any
  407794:	cmp	x9, x8
  407798:	b.eq	40772c <scols_reset_iter@plt+0x4e3c>  // b.none
  40779c:	b	407708 <scols_reset_iter@plt+0x4e18>
  4077a0:	stp	x29, x30, [sp, #-48]!
  4077a4:	str	x21, [sp, #16]
  4077a8:	stp	x20, x19, [sp, #32]
  4077ac:	mov	x29, sp
  4077b0:	cbz	x1, 4077ec <scols_reset_iter@plt+0x4efc>
  4077b4:	mov	x19, x0
  4077b8:	ldr	x0, [x0]
  4077bc:	mov	x20, x1
  4077c0:	cbz	x0, 4077f4 <scols_reset_iter@plt+0x4f04>
  4077c4:	ldr	x8, [x0]
  4077c8:	cbz	x8, 4077f4 <scols_reset_iter@plt+0x4f04>
  4077cc:	mov	x21, xzr
  4077d0:	add	x8, x0, #0x8
  4077d4:	ldr	x9, [x8, x21, lsl #3]
  4077d8:	add	x21, x21, #0x1
  4077dc:	cbnz	x9, 4077d4 <scols_reset_iter@plt+0x4ee4>
  4077e0:	cmn	w21, #0x3
  4077e4:	b.ls	4077f8 <scols_reset_iter@plt+0x4f08>  // b.plast
  4077e8:	b	407824 <scols_reset_iter@plt+0x4f34>
  4077ec:	mov	w0, wzr
  4077f0:	b	407830 <scols_reset_iter@plt+0x4f40>
  4077f4:	mov	w21, wzr
  4077f8:	add	w8, w21, #0x2
  4077fc:	lsl	x1, x8, #3
  407800:	bl	402560 <realloc@plt>
  407804:	cbz	x0, 407824 <scols_reset_iter@plt+0x4f34>
  407808:	mov	x8, x0
  40780c:	add	w9, w21, #0x1
  407810:	mov	w0, wzr
  407814:	str	x20, [x8, w21, uxtw #3]
  407818:	str	xzr, [x8, w9, uxtw #3]
  40781c:	str	x8, [x19]
  407820:	b	407830 <scols_reset_iter@plt+0x4f40>
  407824:	mov	x0, x20
  407828:	bl	4026b0 <free@plt>
  40782c:	mov	w0, #0xfffffff4            	// #-12
  407830:	ldp	x20, x19, [sp, #32]
  407834:	ldr	x21, [sp, #16]
  407838:	ldp	x29, x30, [sp], #48
  40783c:	ret
  407840:	stp	x29, x30, [sp, #-64]!
  407844:	str	x23, [sp, #16]
  407848:	stp	x22, x21, [sp, #32]
  40784c:	stp	x20, x19, [sp, #48]
  407850:	mov	x29, sp
  407854:	cbz	x1, 407890 <scols_reset_iter@plt+0x4fa0>
  407858:	ldr	x21, [x0]
  40785c:	mov	x20, x1
  407860:	mov	x19, x0
  407864:	cbz	x21, 407898 <scols_reset_iter@plt+0x4fa8>
  407868:	ldr	x8, [x21]
  40786c:	cbz	x8, 407898 <scols_reset_iter@plt+0x4fa8>
  407870:	mov	x23, xzr
  407874:	add	x8, x21, #0x8
  407878:	ldr	x9, [x8, x23, lsl #3]
  40787c:	add	x23, x23, #0x1
  407880:	cbnz	x9, 407878 <scols_reset_iter@plt+0x4f88>
  407884:	cmn	w23, #0x3
  407888:	b.ls	40789c <scols_reset_iter@plt+0x4fac>  // b.plast
  40788c:	b	40792c <scols_reset_iter@plt+0x503c>
  407890:	mov	w0, wzr
  407894:	b	407938 <scols_reset_iter@plt+0x5048>
  407898:	mov	w23, wzr
  40789c:	add	w8, w23, #0x2
  4078a0:	lsl	x0, x8, #3
  4078a4:	bl	402470 <malloc@plt>
  4078a8:	cbz	x0, 40792c <scols_reset_iter@plt+0x503c>
  4078ac:	mov	x22, x0
  4078b0:	cbz	w23, 40790c <scols_reset_iter@plt+0x501c>
  4078b4:	cmp	w23, #0x4
  4078b8:	mov	w8, w23
  4078bc:	b.cc	4078e4 <scols_reset_iter@plt+0x4ff4>  // b.lo, b.ul, b.last
  4078c0:	lsl	x9, x8, #3
  4078c4:	add	x10, x22, #0x8
  4078c8:	add	x11, x21, x9
  4078cc:	cmp	x10, x11
  4078d0:	b.cs	40794c <scols_reset_iter@plt+0x505c>  // b.hs, b.nlast
  4078d4:	add	x9, x9, x22
  4078d8:	add	x9, x9, #0x8
  4078dc:	cmp	x9, x21
  4078e0:	b.ls	40794c <scols_reset_iter@plt+0x505c>  // b.plast
  4078e4:	mov	x9, xzr
  4078e8:	lsl	x10, x9, #3
  4078ec:	sub	x8, x8, x9
  4078f0:	add	x9, x10, x22
  4078f4:	add	x9, x9, #0x8
  4078f8:	add	x10, x21, x10
  4078fc:	ldr	x11, [x10], #8
  407900:	subs	x8, x8, #0x1
  407904:	str	x11, [x9], #8
  407908:	b.ne	4078fc <scols_reset_iter@plt+0x500c>  // b.any
  40790c:	add	w8, w23, #0x1
  407910:	mov	x0, x21
  407914:	str	x20, [x22]
  407918:	str	xzr, [x22, w8, uxtw #3]
  40791c:	bl	4026b0 <free@plt>
  407920:	mov	w0, wzr
  407924:	str	x22, [x19]
  407928:	b	407938 <scols_reset_iter@plt+0x5048>
  40792c:	mov	x0, x20
  407930:	bl	4026b0 <free@plt>
  407934:	mov	w0, #0xfffffff4            	// #-12
  407938:	ldp	x20, x19, [sp, #48]
  40793c:	ldp	x22, x21, [sp, #32]
  407940:	ldr	x23, [sp, #16]
  407944:	ldp	x29, x30, [sp], #64
  407948:	ret
  40794c:	and	x9, x8, #0xfffffffc
  407950:	add	x10, x22, #0x18
  407954:	add	x11, x21, #0x10
  407958:	mov	x12, x9
  40795c:	ldp	q0, q1, [x11, #-16]
  407960:	subs	x12, x12, #0x4
  407964:	add	x11, x11, #0x20
  407968:	stp	q0, q1, [x10, #-16]
  40796c:	add	x10, x10, #0x20
  407970:	b.ne	40795c <scols_reset_iter@plt+0x506c>  // b.any
  407974:	cmp	x9, x8
  407978:	b.eq	40790c <scols_reset_iter@plt+0x501c>  // b.none
  40797c:	b	4078e8 <scols_reset_iter@plt+0x4ff8>
  407980:	stp	x29, x30, [sp, #-64]!
  407984:	stp	x20, x19, [sp, #48]
  407988:	mov	x19, x0
  40798c:	str	x23, [sp, #16]
  407990:	stp	x22, x21, [sp, #32]
  407994:	mov	x29, sp
  407998:	cbz	x0, 4079ec <scols_reset_iter@plt+0x50fc>
  40799c:	mov	x20, x1
  4079a0:	cbz	x1, 407a04 <scols_reset_iter@plt+0x5114>
  4079a4:	ldr	x21, [x19]
  4079a8:	mov	x22, x19
  4079ac:	cbz	x21, 4079e8 <scols_reset_iter@plt+0x50f8>
  4079b0:	add	x23, x19, #0x8
  4079b4:	mov	x22, x19
  4079b8:	b	4079c8 <scols_reset_iter@plt+0x50d8>
  4079bc:	str	x21, [x22], #8
  4079c0:	ldr	x21, [x23], #8
  4079c4:	cbz	x21, 4079e8 <scols_reset_iter@plt+0x50f8>
  4079c8:	mov	x0, x21
  4079cc:	mov	x1, x20
  4079d0:	bl	402650 <strcmp@plt>
  4079d4:	cbnz	w0, 4079bc <scols_reset_iter@plt+0x50cc>
  4079d8:	mov	x0, x21
  4079dc:	bl	4026b0 <free@plt>
  4079e0:	ldr	x21, [x23], #8
  4079e4:	cbnz	x21, 4079c8 <scols_reset_iter@plt+0x50d8>
  4079e8:	str	xzr, [x22]
  4079ec:	mov	x0, x19
  4079f0:	ldp	x20, x19, [sp, #48]
  4079f4:	ldp	x22, x21, [sp, #32]
  4079f8:	ldr	x23, [sp, #16]
  4079fc:	ldp	x29, x30, [sp], #64
  407a00:	ret
  407a04:	adrp	x0, 408000 <scols_reset_iter@plt+0x5710>
  407a08:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  407a0c:	adrp	x3, 408000 <scols_reset_iter@plt+0x5710>
  407a10:	add	x0, x0, #0x43e
  407a14:	add	x1, x1, #0xcba
  407a18:	add	x3, x3, #0xcf3
  407a1c:	mov	w2, #0x15a                 	// #346
  407a20:	bl	402840 <__assert_fail@plt>
  407a24:	sub	sp, sp, #0x130
  407a28:	stp	x29, x30, [sp, #256]
  407a2c:	add	x29, sp, #0x100
  407a30:	add	x9, sp, #0x80
  407a34:	mov	x10, sp
  407a38:	mov	x11, #0xffffffffffffffd0    	// #-48
  407a3c:	add	x8, x29, #0x30
  407a40:	movk	x11, #0xff80, lsl #32
  407a44:	add	x9, x9, #0x30
  407a48:	add	x10, x10, #0x80
  407a4c:	stp	x8, x9, [x29, #-32]
  407a50:	stp	x10, x11, [x29, #-16]
  407a54:	stp	q1, q2, [sp, #16]
  407a58:	str	q0, [sp]
  407a5c:	ldp	q0, q1, [x29, #-32]
  407a60:	stp	x20, x19, [sp, #288]
  407a64:	mov	x19, x0
  407a68:	stp	x2, x3, [sp, #128]
  407a6c:	sub	x0, x29, #0x28
  407a70:	sub	x2, x29, #0x50
  407a74:	stp	x28, x21, [sp, #272]
  407a78:	stp	x4, x5, [sp, #144]
  407a7c:	stp	x6, x7, [sp, #160]
  407a80:	stp	q3, q4, [sp, #48]
  407a84:	stp	q5, q6, [sp, #80]
  407a88:	str	q7, [sp, #112]
  407a8c:	stp	q0, q1, [x29, #-80]
  407a90:	bl	402700 <vasprintf@plt>
  407a94:	tbnz	w0, #31, 407b10 <scols_reset_iter@plt+0x5220>
  407a98:	ldur	x20, [x29, #-40]
  407a9c:	cbz	x20, 407ad0 <scols_reset_iter@plt+0x51e0>
  407aa0:	ldr	x0, [x19]
  407aa4:	cbz	x0, 407ad8 <scols_reset_iter@plt+0x51e8>
  407aa8:	ldr	x8, [x0]
  407aac:	cbz	x8, 407ad8 <scols_reset_iter@plt+0x51e8>
  407ab0:	mov	x21, xzr
  407ab4:	add	x8, x0, #0x8
  407ab8:	ldr	x9, [x8, x21, lsl #3]
  407abc:	add	x21, x21, #0x1
  407ac0:	cbnz	x9, 407ab8 <scols_reset_iter@plt+0x51c8>
  407ac4:	cmn	w21, #0x3
  407ac8:	b.ls	407adc <scols_reset_iter@plt+0x51ec>  // b.plast
  407acc:	b	407b08 <scols_reset_iter@plt+0x5218>
  407ad0:	mov	w0, wzr
  407ad4:	b	407b14 <scols_reset_iter@plt+0x5224>
  407ad8:	mov	w21, wzr
  407adc:	add	w8, w21, #0x2
  407ae0:	lsl	x1, x8, #3
  407ae4:	bl	402560 <realloc@plt>
  407ae8:	cbz	x0, 407b08 <scols_reset_iter@plt+0x5218>
  407aec:	mov	x8, x0
  407af0:	add	w9, w21, #0x1
  407af4:	mov	w0, wzr
  407af8:	str	x20, [x8, w21, uxtw #3]
  407afc:	str	xzr, [x8, w9, uxtw #3]
  407b00:	str	x8, [x19]
  407b04:	b	407b14 <scols_reset_iter@plt+0x5224>
  407b08:	mov	x0, x20
  407b0c:	bl	4026b0 <free@plt>
  407b10:	mov	w0, #0xfffffff4            	// #-12
  407b14:	ldp	x20, x19, [sp, #288]
  407b18:	ldp	x28, x21, [sp, #272]
  407b1c:	ldp	x29, x30, [sp, #256]
  407b20:	add	sp, sp, #0x130
  407b24:	ret
  407b28:	sub	sp, sp, #0x50
  407b2c:	stp	x29, x30, [sp, #32]
  407b30:	str	x21, [sp, #48]
  407b34:	stp	x20, x19, [sp, #64]
  407b38:	ldp	q1, q0, [x2]
  407b3c:	add	x29, sp, #0x20
  407b40:	mov	x19, x0
  407b44:	add	x0, x29, #0x18
  407b48:	mov	x2, sp
  407b4c:	stp	q1, q0, [sp]
  407b50:	bl	402700 <vasprintf@plt>
  407b54:	tbnz	w0, #31, 407bd0 <scols_reset_iter@plt+0x52e0>
  407b58:	ldr	x20, [x29, #24]
  407b5c:	cbz	x20, 407b90 <scols_reset_iter@plt+0x52a0>
  407b60:	ldr	x0, [x19]
  407b64:	cbz	x0, 407b98 <scols_reset_iter@plt+0x52a8>
  407b68:	ldr	x8, [x0]
  407b6c:	cbz	x8, 407b98 <scols_reset_iter@plt+0x52a8>
  407b70:	mov	x21, xzr
  407b74:	add	x8, x0, #0x8
  407b78:	ldr	x9, [x8, x21, lsl #3]
  407b7c:	add	x21, x21, #0x1
  407b80:	cbnz	x9, 407b78 <scols_reset_iter@plt+0x5288>
  407b84:	cmn	w21, #0x3
  407b88:	b.ls	407b9c <scols_reset_iter@plt+0x52ac>  // b.plast
  407b8c:	b	407bc8 <scols_reset_iter@plt+0x52d8>
  407b90:	mov	w0, wzr
  407b94:	b	407bd4 <scols_reset_iter@plt+0x52e4>
  407b98:	mov	w21, wzr
  407b9c:	add	w8, w21, #0x2
  407ba0:	lsl	x1, x8, #3
  407ba4:	bl	402560 <realloc@plt>
  407ba8:	cbz	x0, 407bc8 <scols_reset_iter@plt+0x52d8>
  407bac:	mov	x8, x0
  407bb0:	add	w9, w21, #0x1
  407bb4:	mov	w0, wzr
  407bb8:	str	x20, [x8, w21, uxtw #3]
  407bbc:	str	xzr, [x8, w9, uxtw #3]
  407bc0:	str	x8, [x19]
  407bc4:	b	407bd4 <scols_reset_iter@plt+0x52e4>
  407bc8:	mov	x0, x20
  407bcc:	bl	4026b0 <free@plt>
  407bd0:	mov	w0, #0xfffffff4            	// #-12
  407bd4:	ldp	x20, x19, [sp, #64]
  407bd8:	ldr	x21, [sp, #48]
  407bdc:	ldp	x29, x30, [sp, #32]
  407be0:	add	sp, sp, #0x50
  407be4:	ret
  407be8:	cbz	x0, 407c4c <scols_reset_iter@plt+0x535c>
  407bec:	ldr	x8, [x0]
  407bf0:	cbz	x8, 407c4c <scols_reset_iter@plt+0x535c>
  407bf4:	mov	w9, wzr
  407bf8:	add	x8, x0, #0x8
  407bfc:	ldr	x10, [x8], #8
  407c00:	add	w9, w9, #0x1
  407c04:	cbnz	x10, 407bfc <scols_reset_iter@plt+0x530c>
  407c08:	cmp	w9, #0x2
  407c0c:	b.cc	407c4c <scols_reset_iter@plt+0x535c>  // b.lo, b.ul, b.last
  407c10:	lsr	w8, w9, #1
  407c14:	cbz	w8, 407c4c <scols_reset_iter@plt+0x535c>
  407c18:	sub	w8, w9, #0x1
  407c1c:	mov	w9, w9
  407c20:	lsr	x9, x9, #1
  407c24:	mov	x10, x0
  407c28:	mov	w11, w8
  407c2c:	lsl	x11, x11, #3
  407c30:	ldr	x12, [x0, x11]
  407c34:	ldr	x13, [x10]
  407c38:	subs	x9, x9, #0x1
  407c3c:	sub	w8, w8, #0x1
  407c40:	str	x12, [x10], #8
  407c44:	str	x13, [x0, x11]
  407c48:	b.ne	407c28 <scols_reset_iter@plt+0x5338>  // b.any
  407c4c:	ret
  407c50:	stp	x29, x30, [sp, #-64]!
  407c54:	mov	x29, sp
  407c58:	stp	x19, x20, [sp, #16]
  407c5c:	adrp	x20, 419000 <scols_reset_iter@plt+0x16710>
  407c60:	add	x20, x20, #0xde0
  407c64:	stp	x21, x22, [sp, #32]
  407c68:	adrp	x21, 419000 <scols_reset_iter@plt+0x16710>
  407c6c:	add	x21, x21, #0xdd8
  407c70:	sub	x20, x20, x21
  407c74:	mov	w22, w0
  407c78:	stp	x23, x24, [sp, #48]
  407c7c:	mov	x23, x1
  407c80:	mov	x24, x2
  407c84:	bl	402250 <mbrtowc@plt-0x40>
  407c88:	cmp	xzr, x20, asr #3
  407c8c:	b.eq	407cb8 <scols_reset_iter@plt+0x53c8>  // b.none
  407c90:	asr	x20, x20, #3
  407c94:	mov	x19, #0x0                   	// #0
  407c98:	ldr	x3, [x21, x19, lsl #3]
  407c9c:	mov	x2, x24
  407ca0:	add	x19, x19, #0x1
  407ca4:	mov	x1, x23
  407ca8:	mov	w0, w22
  407cac:	blr	x3
  407cb0:	cmp	x20, x19
  407cb4:	b.ne	407c98 <scols_reset_iter@plt+0x53a8>  // b.any
  407cb8:	ldp	x19, x20, [sp, #16]
  407cbc:	ldp	x21, x22, [sp, #32]
  407cc0:	ldp	x23, x24, [sp, #48]
  407cc4:	ldp	x29, x30, [sp], #64
  407cc8:	ret
  407ccc:	nop
  407cd0:	ret
  407cd4:	nop
  407cd8:	adrp	x2, 41a000 <scols_reset_iter@plt+0x17710>
  407cdc:	mov	x1, #0x0                   	// #0
  407ce0:	ldr	x2, [x2, #832]
  407ce4:	b	4023c0 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000407ce8 <.fini>:
  407ce8:	stp	x29, x30, [sp, #-16]!
  407cec:	mov	x29, sp
  407cf0:	ldp	x29, x30, [sp], #16
  407cf4:	ret
