
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//cmdline_cat_test.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x358>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x1, [sp, #16]
  14:	adrp	x0, 0 <grub_mod_init-0x358>
  18:	add	x0, x0, #0x0
  1c:	ldr	x0, [x0]
  20:	bl	0 <grub_list_push>
  24:	nop
  28:	ldp	x29, x30, [sp], #32
  2c:	ret
	...
  38:	stp	x29, x30, [sp, #-32]!
  3c:	mov	x29, sp
  40:	str	x0, [sp, #24]
  44:	ldr	x0, [sp, #24]
  48:	bl	0 <grub_list_remove>
  4c:	nop
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	stp	x29, x30, [sp, #-32]!
  5c:	mov	x29, sp
  60:	str	x0, [sp, #24]
  64:	adrp	x0, 0 <grub_mod_init-0x358>
  68:	add	x0, x0, #0x0
  6c:	ldr	x0, [x0]
  70:	bl	0 <grub_strlen>
  74:	mov	x1, x0
  78:	ldr	x0, [sp, #24]
  7c:	str	x1, [x0]
  80:	adrp	x0, 0 <grub_mod_init-0x358>
  84:	add	x0, x0, #0x0
  88:	ldr	x0, [x0]
  8c:	bl	0 <grub_strdup>
  90:	ldp	x29, x30, [sp], #32
  94:	ret
	...
  a0:	stp	x29, x30, [sp, #-128]!
  a4:	mov	x29, sp
  a8:	adrp	x0, 0 <grub_mod_init-0x358>
  ac:	add	x0, x0, #0x0
  b0:	ldr	x0, [x0]
  b4:	bl	0 <grub_dl_load>
  b8:	adrp	x0, 0 <grub_mod_init-0x358>
  bc:	add	x0, x0, #0x0
  c0:	ldr	x0, [x0]
  c4:	str	wzr, [x0]
  c8:	adrp	x0, 0 <grub_mod_init-0x358>
  cc:	add	x0, x0, #0x0
  d0:	ldr	x0, [x0]
  d4:	bl	0 <grub_font_get>
  d8:	str	x0, [sp, #112]
  dc:	ldr	x0, [sp, #112]
  e0:	cmp	x0, #0x0
  e4:	b.eq	110 <grub_mod_init-0x248>  // b.none
  e8:	ldr	x0, [sp, #112]
  ec:	ldr	x2, [x0]
  f0:	adrp	x0, 0 <grub_mod_init-0x358>
  f4:	add	x0, x0, #0x0
  f8:	ldr	x1, [x0]
  fc:	mov	x0, x2
 100:	bl	0 <grub_strcmp>
 104:	cmp	w0, #0x0
 108:	b.eq	110 <grub_mod_init-0x248>  // b.none
 10c:	str	xzr, [sp, #112]
 110:	ldr	x0, [sp, #112]
 114:	cmp	x0, #0x0
 118:	b.ne	130 <grub_mod_init-0x228>  // b.any
 11c:	adrp	x0, 0 <grub_mod_init-0x358>
 120:	add	x0, x0, #0x0
 124:	ldr	x0, [x0]
 128:	bl	0 <grub_font_load>
 12c:	str	x0, [sp, #112]
 130:	ldr	x0, [sp, #112]
 134:	cmp	x0, #0x0
 138:	b.ne	188 <grub_mod_init-0x1d0>  // b.any
 13c:	adrp	x0, 0 <grub_mod_init-0x358>
 140:	add	x0, x0, #0x0
 144:	ldr	x6, [x0]
 148:	adrp	x0, 0 <grub_mod_init-0x358>
 14c:	add	x0, x0, #0x0
 150:	ldr	x5, [x0]
 154:	adrp	x0, 0 <grub_mod_init-0x358>
 158:	add	x0, x0, #0x0
 15c:	ldr	x4, [x0]
 160:	mov	w3, #0x59                  	// #89
 164:	adrp	x0, 0 <grub_mod_init-0x358>
 168:	add	x0, x0, #0x0
 16c:	ldr	x2, [x0]
 170:	adrp	x0, 0 <grub_mod_init-0x358>
 174:	add	x0, x0, #0x0
 178:	ldr	x1, [x0]
 17c:	mov	w0, #0x0                   	// #0
 180:	bl	0 <grub_test_assert_helper>
 184:	b	2d4 <grub_mod_init-0x84>
 188:	adrp	x0, 0 <grub_mod_init-0x358>
 18c:	add	x0, x0, #0x0
 190:	ldr	x1, [x0]
 194:	adrp	x0, 0 <grub_mod_init-0x358>
 198:	add	x0, x0, #0x0
 19c:	ldr	x0, [x0]
 1a0:	bl	0 <grub_mod_init-0x358>
 1a4:	str	wzr, [sp, #124]
 1a8:	b	2b8 <grub_mod_init-0xa0>
 1ac:	ldr	w1, [sp, #124]
 1b0:	mov	x0, x1
 1b4:	lsl	x0, x0, #2
 1b8:	add	x0, x0, x1
 1bc:	lsl	x0, x0, #2
 1c0:	sub	x0, x0, x1
 1c4:	lsl	x0, x0, #2
 1c8:	adrp	x1, 0 <grub_mod_init-0x358>
 1cc:	add	x1, x1, #0x0
 1d0:	ldr	x1, [x1]
 1d4:	add	x3, x0, x1
 1d8:	adrp	x0, 0 <grub_mod_init-0x358>
 1dc:	add	x0, x0, #0x0
 1e0:	ldr	x2, [x0]
 1e4:	ldr	w1, [sp, #124]
 1e8:	mov	x0, x1
 1ec:	lsl	x0, x0, #2
 1f0:	add	x0, x0, x1
 1f4:	lsl	x0, x0, #2
 1f8:	sub	x0, x0, x1
 1fc:	lsl	x0, x0, #2
 200:	add	x0, x2, x0
 204:	ldr	w0, [x0, #24]
 208:	mov	w2, w0
 20c:	adrp	x0, 0 <grub_mod_init-0x358>
 210:	add	x0, x0, #0x0
 214:	ldr	x1, [x0]
 218:	mov	x0, x3
 21c:	bl	0 <grub_video_capture_start>
 220:	adrp	x0, 0 <grub_mod_init-0x358>
 224:	add	x0, x0, #0x0
 228:	ldr	x1, [x0]
 22c:	add	x0, sp, #0x10
 230:	ldp	x2, x3, [x1]
 234:	stp	x2, x3, [x0]
 238:	ldp	x2, x3, [x1, #16]
 23c:	stp	x2, x3, [x0, #16]
 240:	ldp	x2, x3, [x1, #32]
 244:	stp	x2, x3, [x0, #32]
 248:	ldp	x2, x3, [x1, #48]
 24c:	stp	x2, x3, [x0, #48]
 250:	ldp	x2, x3, [x1, #64]
 254:	stp	x2, x3, [x0, #64]
 258:	ldr	x2, [x1, #80]
 25c:	str	x2, [x0, #80]
 260:	ldr	w1, [x1, #88]
 264:	str	w1, [x0, #88]
 268:	add	x0, sp, #0x10
 26c:	mov	w1, #0x17                  	// #23
 270:	bl	0 <grub_terminal_input_fake_sequence>
 274:	adrp	x0, 0 <grub_mod_init-0x358>
 278:	add	x0, x0, #0x0
 27c:	ldr	x0, [x0]
 280:	bl	0 <grub_video_checksum>
 284:	bl	0 <grub_test_use_gfxterm>
 288:	cmp	w0, #0x0
 28c:	b.ne	29c <grub_mod_init-0xbc>  // b.any
 290:	mov	w1, #0x0                   	// #0
 294:	mov	w0, #0x1                   	// #1
 298:	bl	0 <grub_cmdline_run>
 29c:	bl	0 <grub_test_use_gfxterm_end>
 2a0:	bl	0 <grub_terminal_input_fake_sequence_end>
 2a4:	bl	0 <grub_video_checksum_end>
 2a8:	bl	0 <grub_video_capture_end>
 2ac:	ldr	w0, [sp, #124]
 2b0:	add	w0, w0, #0x1
 2b4:	str	w0, [sp, #124]
 2b8:	ldr	w0, [sp, #124]
 2bc:	cmp	w0, #0x6
 2c0:	b.ls	1ac <grub_mod_init-0x1ac>  // b.plast
 2c4:	adrp	x0, 0 <grub_mod_init-0x358>
 2c8:	add	x0, x0, #0x0
 2cc:	ldr	x0, [x0]
 2d0:	bl	38 <grub_mod_init-0x320>
 2d4:	ldp	x29, x30, [sp], #128
 2d8:	ret
 2dc:	nop
	...

0000000000000358 <grub_mod_init>:
 358:	stp	x29, x30, [sp, #-32]!
 35c:	mov	x29, sp
 360:	str	x0, [sp, #24]
 364:	adrp	x0, 0 <grub_mod_init-0x358>
 368:	add	x0, x0, #0x0
 36c:	ldr	x1, [x0]
 370:	adrp	x0, 0 <grub_mod_init-0x358>
 374:	add	x0, x0, #0x0
 378:	ldr	x0, [x0]
 37c:	bl	0 <grub_test_register>
 380:	nop
 384:	ldp	x29, x30, [sp], #32
 388:	ret
 38c:	nop
	...

00000000000003a0 <grub_mod_fini>:
 3a0:	stp	x29, x30, [sp, #-16]!
 3a4:	mov	x29, sp
 3a8:	adrp	x0, 0 <grub_mod_init-0x358>
 3ac:	add	x0, x0, #0x0
 3b0:	ldr	x0, [x0]
 3b4:	bl	0 <grub_test_unregister>
 3b8:	nop
 3bc:	ldp	x29, x30, [sp], #16
 3c0:	ret
 3c4:	nop
	...
