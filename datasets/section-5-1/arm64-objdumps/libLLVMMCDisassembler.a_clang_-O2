In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMMCDisassembler.a_clang_-O2:

Disassembler.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <LLVMCreateDisasmCPUFeatures>:
       0:	sub	sp, sp, #0x1d0
       4:	stp	x29, x30, [sp, #368]
       8:	stp	x28, x27, [sp, #384]
       c:	stp	x26, x25, [sp, #400]
      10:	stp	x24, x23, [sp, #416]
      14:	stp	x22, x21, [sp, #432]
      18:	stp	x20, x19, [sp, #448]
      1c:	add	x29, sp, #0x170
      20:	sub	x8, x29, #0x88
      24:	add	x9, sp, #0x88
      28:	add	x23, x8, #0x10
      2c:	add	x28, x9, #0x10
      30:	sturb	wzr, [x29, #-120]
      34:	stp	x23, xzr, [x29, #-136]
      38:	str	x28, [sp, #136]
      3c:	cbz	x0, 7b4 <LLVMCreateDisasmCPUFeatures+0x7b4>
      40:	mov	x25, x6
      44:	mov	x24, x5
      48:	mov	w20, w4
      4c:	mov	x26, x3
      50:	mov	x22, x2
      54:	mov	x21, x1
      58:	mov	x27, x0
      5c:	bl	0 <strlen>
      60:	mov	x19, x0
      64:	cmp	x0, #0xf
      68:	stur	x0, [x29, #-80]
      6c:	b.ls	94 <LLVMCreateDisasmCPUFeatures+0x94>  // b.plast
      70:	add	x0, sp, #0x88
      74:	sub	x1, x29, #0x50
      78:	mov	x2, xzr
      7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
      80:	ldur	x8, [x29, #-80]
      84:	str	x0, [sp, #136]
      88:	str	x8, [sp, #152]
      8c:	cbnz	x19, 9c <LLVMCreateDisasmCPUFeatures+0x9c>
      90:	b	bc <LLVMCreateDisasmCPUFeatures+0xbc>
      94:	mov	x0, x28
      98:	cbz	x19, bc <LLVMCreateDisasmCPUFeatures+0xbc>
      9c:	cmp	x19, #0x1
      a0:	b.ne	b0 <LLVMCreateDisasmCPUFeatures+0xb0>  // b.any
      a4:	ldrb	w8, [x27]
      a8:	strb	w8, [x0]
      ac:	b	bc <LLVMCreateDisasmCPUFeatures+0xbc>
      b0:	mov	x1, x27
      b4:	mov	x2, x19
      b8:	bl	0 <memcpy>
      bc:	ldur	x8, [x29, #-80]
      c0:	ldr	x9, [sp, #136]
      c4:	add	x0, sp, #0x88
      c8:	sub	x1, x29, #0x88
      cc:	str	x8, [sp, #144]
      d0:	strb	wzr, [x9, x8]
      d4:	bl	0 <_ZN4llvm14TargetRegistry12lookupTargetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_>
      d8:	ldr	x8, [sp, #136]
      dc:	cmp	x8, x28
      e0:	mov	x28, x0
      e4:	b.eq	f0 <LLVMCreateDisasmCPUFeatures+0xf0>  // b.none
      e8:	mov	x0, x8
      ec:	bl	0 <_ZdlPv>
      f0:	cbz	x28, 1f8 <LLVMCreateDisasmCPUFeatures+0x1f8>
      f4:	mov	x0, x27
      f8:	bl	0 <strlen>
      fc:	stp	x27, x0, [x29, #-104]
     100:	ldr	x19, [x28, #72]
     104:	cbz	x19, 1f8 <LLVMCreateDisasmCPUFeatures+0x1f8>
     108:	mov	w8, #0x105                 	// #261
     10c:	sub	x9, x29, #0x68
     110:	add	x0, sp, #0x88
     114:	sub	x1, x29, #0x50
     118:	str	w20, [sp, #84]
     11c:	sturh	w8, [x29, #-64]
     120:	stp	x9, xzr, [x29, #-80]
     124:	add	x20, sp, #0x88
     128:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     12c:	add	x0, sp, #0x88
     130:	blr	x19
     134:	ldr	x8, [sp, #136]
     138:	add	x9, x20, #0x10
     13c:	mov	x19, x0
     140:	cmp	x8, x9
     144:	b.eq	150 <LLVMCreateDisasmCPUFeatures+0x150>  // b.none
     148:	mov	x0, x8
     14c:	bl	0 <_ZdlPv>
     150:	cbz	x19, 1f8 <LLVMCreateDisasmCPUFeatures+0x1f8>
     154:	add	x0, sp, #0x88
     158:	bl	0 <_ZN4llvm15MCTargetOptionsC1Ev>
     15c:	mov	x0, x27
     160:	bl	0 <strlen>
     164:	stp	x27, x0, [x29, #-24]
     168:	ldr	x20, [x28, #48]
     16c:	cbz	x20, 238 <LLVMCreateDisasmCPUFeatures+0x238>
     170:	mov	w8, #0x105                 	// #261
     174:	sub	x9, x29, #0x18
     178:	sub	x0, x29, #0x50
     17c:	sub	x1, x29, #0x68
     180:	str	x25, [sp, #72]
     184:	sturh	w8, [x29, #-88]
     188:	stp	x9, xzr, [x29, #-104]
     18c:	sub	x25, x29, #0x50
     190:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     194:	sub	x1, x29, #0x50
     198:	add	x2, sp, #0x88
     19c:	mov	x0, x19
     1a0:	blr	x20
     1a4:	ldur	x8, [x29, #-80]
     1a8:	add	x9, x25, #0x10
     1ac:	mov	x25, x0
     1b0:	cmp	x8, x9
     1b4:	b.eq	1c0 <LLVMCreateDisasmCPUFeatures+0x1c0>  // b.none
     1b8:	mov	x0, x8
     1bc:	bl	0 <_ZdlPv>
     1c0:	cbz	x25, 230 <LLVMCreateDisasmCPUFeatures+0x230>
     1c4:	ldr	x8, [x28, #56]
     1c8:	cbz	x8, 230 <LLVMCreateDisasmCPUFeatures+0x230>
     1cc:	blr	x8
     1d0:	mov	x20, x0
     1d4:	cbz	x0, 240 <LLVMCreateDisasmCPUFeatures+0x240>
     1d8:	mov	x0, x27
     1dc:	bl	0 <strlen>
     1e0:	str	x0, [sp, #56]
     1e4:	cbz	x21, 248 <LLVMCreateDisasmCPUFeatures+0x248>
     1e8:	mov	x0, x21
     1ec:	bl	0 <strlen>
     1f0:	str	x0, [sp, #48]
     1f4:	b	24c <LLVMCreateDisasmCPUFeatures+0x24c>
     1f8:	mov	x22, xzr
     1fc:	ldur	x0, [x29, #-136]
     200:	cmp	x0, x23
     204:	b.eq	20c <LLVMCreateDisasmCPUFeatures+0x20c>  // b.none
     208:	bl	0 <_ZdlPv>
     20c:	mov	x0, x22
     210:	ldp	x20, x19, [sp, #448]
     214:	ldp	x22, x21, [sp, #432]
     218:	ldp	x24, x23, [sp, #416]
     21c:	ldp	x26, x25, [sp, #400]
     220:	ldp	x28, x27, [sp, #384]
     224:	ldp	x29, x30, [sp, #368]
     228:	add	sp, sp, #0x1d0
     22c:	ret
     230:	mov	x22, xzr
     234:	b	704 <LLVMCreateDisasmCPUFeatures+0x704>
     238:	mov	x22, xzr
     23c:	b	718 <LLVMCreateDisasmCPUFeatures+0x718>
     240:	mov	x22, xzr
     244:	b	6f8 <LLVMCreateDisasmCPUFeatures+0x6f8>
     248:	str	xzr, [sp, #48]
     24c:	str	x20, [sp, #64]
     250:	cbz	x22, 260 <LLVMCreateDisasmCPUFeatures+0x260>
     254:	mov	x0, x22
     258:	bl	0 <strlen>
     25c:	b	264 <LLVMCreateDisasmCPUFeatures+0x264>
     260:	mov	x0, xzr
     264:	ldr	x8, [sp, #56]
     268:	stp	x27, x8, [x29, #-24]
     26c:	ldr	x20, [x28, #80]
     270:	cbz	x20, 460 <LLVMCreateDisasmCPUFeatures+0x460>
     274:	str	x25, [sp, #40]
     278:	mov	w8, #0x105                 	// #261
     27c:	sub	x9, x29, #0x18
     280:	mov	x25, x0
     284:	sub	x0, x29, #0x50
     288:	sub	x1, x29, #0x68
     28c:	sturh	w8, [x29, #-88]
     290:	stp	x9, xzr, [x29, #-104]
     294:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     298:	ldr	x2, [sp, #48]
     29c:	sub	x0, x29, #0x50
     2a0:	mov	x1, x21
     2a4:	mov	x3, x22
     2a8:	mov	x4, x25
     2ac:	blr	x20
     2b0:	ldur	x8, [x29, #-80]
     2b4:	sub	x9, x29, #0x50
     2b8:	add	x9, x9, #0x10
     2bc:	mov	x22, x0
     2c0:	cmp	x8, x9
     2c4:	b.eq	2d0 <LLVMCreateDisasmCPUFeatures+0x2d0>  // b.none
     2c8:	mov	x0, x8
     2cc:	bl	0 <_ZdlPv>
     2d0:	ldr	x25, [sp, #40]
     2d4:	ldr	x20, [sp, #64]
     2d8:	str	x22, [sp, #56]
     2dc:	cbz	x22, 6e4 <LLVMCreateDisasmCPUFeatures+0x6e4>
     2e0:	mov	w0, #0x6b8                 	// #1720
     2e4:	bl	0 <_Znwm>
     2e8:	mov	w6, #0x1                   	// #1
     2ec:	mov	x1, x25
     2f0:	mov	x2, x19
     2f4:	mov	x3, xzr
     2f8:	mov	x4, xzr
     2fc:	mov	x5, xzr
     300:	str	x0, [sp, #48]
     304:	bl	0 <_ZN4llvm9MCContextC1EPKNS_9MCAsmInfoEPKNS_14MCRegisterInfoEPKNS_16MCObjectFileInfoEPKNS_9SourceMgrEPKNS_15MCTargetOptionsEb>
     308:	ldr	x8, [x28, #120]
     30c:	cbz	x8, 46c <LLVMCreateDisasmCPUFeatures+0x46c>
     310:	ldr	x2, [sp, #48]
     314:	mov	x0, x28
     318:	mov	x1, x22
     31c:	blr	x8
     320:	cbz	x0, 478 <LLVMCreateDisasmCPUFeatures+0x478>
     324:	str	x0, [sp, #32]
     328:	mov	x0, x27
     32c:	bl	0 <strlen>
     330:	stp	x27, x0, [x29, #-24]
     334:	adrp	x8, 0 <_ZN4llvm22createMCRelocationInfoERKNS_6TripleERNS_9MCContextE>
     338:	ldr	x8, [x8]
     33c:	ldr	x9, [x28, #200]
     340:	mov	w10, #0x105                 	// #261
     344:	sub	x11, x29, #0x18
     348:	sub	x0, x29, #0x50
     34c:	cmp	x9, #0x0
     350:	sub	x1, x29, #0x68
     354:	sturh	w10, [x29, #-88]
     358:	csel	x20, x8, x9, eq  // eq = none
     35c:	stp	x11, xzr, [x29, #-104]
     360:	sub	x22, x29, #0x50
     364:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     368:	ldr	x1, [sp, #48]
     36c:	sub	x0, x29, #0x50
     370:	blr	x20
     374:	ldur	x8, [x29, #-80]
     378:	add	x9, x22, #0x10
     37c:	mov	x22, x0
     380:	cmp	x8, x9
     384:	b.eq	390 <LLVMCreateDisasmCPUFeatures+0x390>  // b.none
     388:	mov	x0, x8
     38c:	bl	0 <_ZdlPv>
     390:	str	x22, [sp, #128]
     394:	cbz	x22, 484 <LLVMCreateDisasmCPUFeatures+0x484>
     398:	mov	x0, x27
     39c:	bl	0 <strlen>
     3a0:	stp	x27, x0, [x29, #-24]
     3a4:	adrp	x8, 0 <_ZN4llvm18createMCSymbolizerERKNS_6TripleEPFiPvmmmiS3_EPFPKcS3_mPmmPS7_ES3_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISF_EE>
     3a8:	ldr	x8, [x8]
     3ac:	ldr	x9, [x28, #208]
     3b0:	mov	w10, #0x105                 	// #261
     3b4:	sub	x11, x29, #0x18
     3b8:	sub	x0, x29, #0x50
     3bc:	cmp	x9, #0x0
     3c0:	sub	x1, x29, #0x68
     3c4:	sturh	w10, [x29, #-88]
     3c8:	csel	x20, x8, x9, eq  // eq = none
     3cc:	stp	x11, xzr, [x29, #-104]
     3d0:	sub	x22, x29, #0x50
     3d4:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     3d8:	ldr	x2, [sp, #72]
     3dc:	ldr	x4, [sp, #48]
     3e0:	sub	x0, x29, #0x50
     3e4:	add	x5, sp, #0x80
     3e8:	mov	x1, x24
     3ec:	mov	x3, x26
     3f0:	blr	x20
     3f4:	ldur	x8, [x29, #-80]
     3f8:	add	x9, x22, #0x10
     3fc:	mov	x22, x0
     400:	cmp	x8, x9
     404:	b.eq	410 <LLVMCreateDisasmCPUFeatures+0x410>  // b.none
     408:	mov	x0, x8
     40c:	bl	0 <_ZdlPv>
     410:	ldr	x0, [sp, #32]
     414:	add	x1, sp, #0x78
     418:	str	x22, [sp, #120]
     41c:	bl	0 <_ZN4llvm14MCDisassembler13setSymbolizerESt10unique_ptrINS_12MCSymbolizerESt14default_deleteIS2_EE>
     420:	ldr	x0, [sp, #120]
     424:	cbz	x0, 434 <LLVMCreateDisasmCPUFeatures+0x434>
     428:	ldr	x8, [x0]
     42c:	ldr	x8, [x8, #8]
     430:	blr	x8
     434:	str	xzr, [sp, #120]
     438:	mov	w8, #0x101                 	// #257
     43c:	ldr	w22, [x25, #168]
     440:	stp	xzr, xzr, [x29, #-104]
     444:	sturh	w8, [x29, #-88]
     448:	ldrb	w8, [x27]
     44c:	ldr	x20, [sp, #64]
     450:	cbz	w8, 490 <LLVMCreateDisasmCPUFeatures+0x490>
     454:	mov	w8, #0x3                   	// #3
     458:	stur	x27, [x29, #-104]
     45c:	b	494 <LLVMCreateDisasmCPUFeatures+0x494>
     460:	ldr	x20, [sp, #64]
     464:	mov	x22, xzr
     468:	b	6f8 <LLVMCreateDisasmCPUFeatures+0x6f8>
     46c:	ldr	x21, [sp, #48]
     470:	mov	x22, xzr
     474:	b	6d4 <LLVMCreateDisasmCPUFeatures+0x6d4>
     478:	ldr	x21, [sp, #48]
     47c:	mov	x22, xzr
     480:	b	6c0 <LLVMCreateDisasmCPUFeatures+0x6c0>
     484:	ldr	x20, [sp, #64]
     488:	ldr	x21, [sp, #48]
     48c:	b	6a8 <LLVMCreateDisasmCPUFeatures+0x6a8>
     490:	mov	w8, #0x1                   	// #1
     494:	sub	x0, x29, #0x50
     498:	sub	x1, x29, #0x68
     49c:	sturb	w8, [x29, #-88]
     4a0:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     4a4:	ldr	x8, [x28, #128]
     4a8:	cbz	x8, 4cc <LLVMCreateDisasmCPUFeatures+0x4cc>
     4ac:	sub	x0, x29, #0x50
     4b0:	mov	w1, w22
     4b4:	mov	x2, x25
     4b8:	mov	x3, x20
     4bc:	mov	x4, x19
     4c0:	blr	x8
     4c4:	mov	x22, x0
     4c8:	b	4d0 <LLVMCreateDisasmCPUFeatures+0x4d0>
     4cc:	mov	x22, xzr
     4d0:	ldur	x0, [x29, #-80]
     4d4:	sub	x8, x29, #0x50
     4d8:	add	x8, x8, #0x10
     4dc:	cmp	x0, x8
     4e0:	b.eq	4e8 <LLVMCreateDisasmCPUFeatures+0x4e8>  // b.none
     4e4:	bl	0 <_ZdlPv>
     4e8:	cbz	x22, 564 <LLVMCreateDisasmCPUFeatures+0x564>
     4ec:	mov	w0, #0x168                 	// #360
     4f0:	str	x22, [sp, #16]
     4f4:	bl	0 <_Znwm>
     4f8:	add	x8, sp, #0x58
     4fc:	mov	x22, x0
     500:	add	x8, x8, #0x10
     504:	mov	x0, x27
     508:	str	x8, [sp, #24]
     50c:	str	x8, [sp, #88]
     510:	bl	0 <strlen>
     514:	mov	x2, x0
     518:	cmp	x0, #0x10
     51c:	stur	x0, [x29, #-80]
     520:	ldr	x0, [sp, #24]
     524:	b.cc	54c <LLVMCreateDisasmCPUFeatures+0x54c>  // b.lo, b.ul, b.last
     528:	add	x0, sp, #0x58
     52c:	sub	x1, x29, #0x50
     530:	str	x2, [sp, #8]
     534:	mov	x2, xzr
     538:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     53c:	ldr	x2, [sp, #8]
     540:	ldur	x8, [x29, #-80]
     544:	str	x0, [sp, #88]
     548:	str	x8, [sp, #104]
     54c:	cbz	x2, 574 <LLVMCreateDisasmCPUFeatures+0x574>
     550:	cmp	x2, #0x1
     554:	b.ne	56c <LLVMCreateDisasmCPUFeatures+0x56c>  // b.any
     558:	ldrb	w8, [x27]
     55c:	strb	w8, [x0]
     560:	b	574 <LLVMCreateDisasmCPUFeatures+0x574>
     564:	ldr	x21, [sp, #48]
     568:	b	6a8 <LLVMCreateDisasmCPUFeatures+0x6a8>
     56c:	mov	x1, x27
     570:	bl	0 <memcpy>
     574:	ldur	x8, [x29, #-80]
     578:	ldr	x9, [sp, #88]
     57c:	ldr	x27, [sp, #24]
     580:	str	x8, [sp, #96]
     584:	strb	wzr, [x9, x8]
     588:	ldr	x8, [sp, #88]
     58c:	add	x9, x22, #0x10
     590:	str	x9, [x22]
     594:	cmp	x8, x27
     598:	b.eq	5ac <LLVMCreateDisasmCPUFeatures+0x5ac>  // b.none
     59c:	ldr	x9, [sp, #104]
     5a0:	str	x8, [x22]
     5a4:	str	x9, [x22, #16]
     5a8:	b	5b4 <LLVMCreateDisasmCPUFeatures+0x5b4>
     5ac:	ldr	q0, [x27]
     5b0:	str	q0, [x9]
     5b4:	ldr	x8, [sp, #96]
     5b8:	adrp	x9, 0 <LLVMCreateDisasmCPUFeatures>
     5bc:	ldr	d0, [x9]
     5c0:	add	x9, x22, #0xb8
     5c4:	str	x8, [x22, #8]
     5c8:	mov	x8, x22
     5cc:	str	x9, [x8, #168]!
     5d0:	stp	x27, xzr, [sp, #88]
     5d4:	strb	wzr, [sp, #104]
     5d8:	stur	x26, [x8, #-136]
     5dc:	adrp	x10, 0 <_ZTVN4llvm19raw_svector_ostreamE>
     5e0:	ldr	x12, [sp, #48]
     5e4:	ldr	x13, [sp, #32]
     5e8:	ldr	x10, [x10]
     5ec:	ldr	w11, [sp, #84]
     5f0:	mov	w9, #0x1                   	// #1
     5f4:	stp	x28, x25, [x8, #-104]
     5f8:	add	x10, x10, #0x10
     5fc:	stur	w11, [x8, #-128]
     600:	ldr	x11, [sp, #72]
     604:	stp	x20, x12, [x8, #-72]
     608:	stur	xzr, [x8, #-40]
     60c:	add	x0, x8, #0x90
     610:	stp	x24, x11, [x8, #-120]
     614:	ldr	x11, [sp, #56]
     618:	mov	x1, xzr
     61c:	mov	x2, xzr
     620:	mov	w3, wzr
     624:	stp	x19, x11, [x8, #-88]
     628:	ldr	x11, [sp, #16]
     62c:	mov	x19, x8
     630:	stp	x13, x11, [x8, #-56]
     634:	mov	x11, x8
     638:	strb	wzr, [x11, #-16]!
     63c:	str	x11, [x19, #-32]!
     640:	stur	xzr, [x8, #-24]
     644:	str	d0, [x8, #8]
     648:	str	w9, [x8, #176]
     64c:	stp	xzr, xzr, [x8, #160]
     650:	stp	x10, xzr, [x8, #144]
     654:	str	x8, [x8, #184]
     658:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     65c:	ldr	x0, [sp, #88]
     660:	cmp	x0, x27
     664:	b.eq	66c <LLVMCreateDisasmCPUFeatures+0x66c>  // b.none
     668:	bl	0 <_ZdlPv>
     66c:	ldr	x20, [x22, #144]
     670:	mov	x0, x21
     674:	bl	0 <strlen>
     678:	mov	x4, x0
     67c:	mov	x0, x19
     680:	mov	x1, xzr
     684:	mov	x2, x20
     688:	mov	x3, x21
     68c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     690:	mov	x21, xzr
     694:	mov	x20, xzr
     698:	mov	x25, xzr
     69c:	mov	x19, xzr
     6a0:	str	xzr, [sp, #32]
     6a4:	str	xzr, [sp, #56]
     6a8:	ldr	x0, [sp, #128]
     6ac:	cbz	x0, 6bc <LLVMCreateDisasmCPUFeatures+0x6bc>
     6b0:	ldr	x8, [x0]
     6b4:	ldr	x8, [x8, #8]
     6b8:	blr	x8
     6bc:	ldr	x0, [sp, #32]
     6c0:	cbz	x0, 6d0 <LLVMCreateDisasmCPUFeatures+0x6d0>
     6c4:	ldr	x8, [x0]
     6c8:	ldr	x8, [x8, #8]
     6cc:	blr	x8
     6d0:	cbz	x21, 6e4 <LLVMCreateDisasmCPUFeatures+0x6e4>
     6d4:	mov	x0, x21
     6d8:	bl	0 <_ZN4llvm9MCContextD1Ev>
     6dc:	mov	x0, x21
     6e0:	bl	0 <_ZdlPv>
     6e4:	ldr	x0, [sp, #56]
     6e8:	cbz	x0, 6f8 <LLVMCreateDisasmCPUFeatures+0x6f8>
     6ec:	ldr	x8, [x0]
     6f0:	ldr	x8, [x8, #8]
     6f4:	blr	x8
     6f8:	cbz	x20, 704 <LLVMCreateDisasmCPUFeatures+0x704>
     6fc:	mov	x0, x20
     700:	bl	0 <_ZdlPv>
     704:	cbz	x25, 718 <LLVMCreateDisasmCPUFeatures+0x718>
     708:	ldr	x8, [x25]
     70c:	mov	x0, x25
     710:	ldr	x8, [x8, #8]
     714:	blr	x8
     718:	ldp	x20, x21, [sp, #208]
     71c:	cmp	x20, x21
     720:	b.ne	794 <LLVMCreateDisasmCPUFeatures+0x794>  // b.any
     724:	cbz	x20, 730 <LLVMCreateDisasmCPUFeatures+0x730>
     728:	mov	x0, x20
     72c:	bl	0 <_ZdlPv>
     730:	ldr	x0, [sp, #176]
     734:	add	x20, sp, #0x88
     738:	add	x8, x20, #0x38
     73c:	cmp	x0, x8
     740:	b.eq	748 <LLVMCreateDisasmCPUFeatures+0x748>  // b.none
     744:	bl	0 <_ZdlPv>
     748:	ldr	x0, [sp, #144]
     74c:	add	x8, x20, #0x18
     750:	cmp	x0, x8
     754:	b.eq	75c <LLVMCreateDisasmCPUFeatures+0x75c>  // b.none
     758:	bl	0 <_ZdlPv>
     75c:	cbz	x19, 1fc <LLVMCreateDisasmCPUFeatures+0x1fc>
     760:	ldr	x0, [x19, #200]
     764:	bl	0 <_ZdlPv>
     768:	ldr	x8, [x19, #192]
     76c:	ldr	x0, [x19, #168]
     770:	add	x8, x8, #0x1
     774:	str	x8, [x19, #192]
     778:	bl	0 <_ZdlPv>
     77c:	mov	x0, x19
     780:	bl	0 <_ZdlPv>
     784:	b	1fc <LLVMCreateDisasmCPUFeatures+0x1fc>
     788:	add	x20, x20, #0x10
     78c:	cmp	x20, x21
     790:	b.eq	7a8 <LLVMCreateDisasmCPUFeatures+0x7a8>  // b.none
     794:	ldr	x0, [x20], #16
     798:	cmp	x0, x20
     79c:	b.eq	788 <LLVMCreateDisasmCPUFeatures+0x788>  // b.none
     7a0:	bl	0 <_ZdlPv>
     7a4:	b	788 <LLVMCreateDisasmCPUFeatures+0x788>
     7a8:	ldr	x20, [sp, #208]
     7ac:	cbnz	x20, 728 <LLVMCreateDisasmCPUFeatures+0x728>
     7b0:	b	730 <LLVMCreateDisasmCPUFeatures+0x730>
     7b4:	adrp	x0, 0 <LLVMCreateDisasmCPUFeatures>
     7b8:	add	x0, x0, #0x0
     7bc:	bl	0 <_ZSt19__throw_logic_errorPKc>

00000000000007c0 <LLVMCreateDisasmCPU>:
     7c0:	mov	x6, x5
     7c4:	mov	x5, x4
     7c8:	mov	w4, w3
     7cc:	mov	x3, x2
     7d0:	adrp	x2, 0 <LLVMCreateDisasmCPUFeatures>
     7d4:	add	x2, x2, #0x0
     7d8:	b	0 <LLVMCreateDisasmCPUFeatures>

00000000000007dc <LLVMCreateDisasm>:
     7dc:	mov	x5, x3
     7e0:	mov	x3, x1
     7e4:	adrp	x1, 0 <LLVMCreateDisasmCPUFeatures>
     7e8:	add	x1, x1, #0x0
     7ec:	mov	x6, x4
     7f0:	mov	w4, w2
     7f4:	mov	x2, x1
     7f8:	b	0 <LLVMCreateDisasmCPUFeatures>

00000000000007fc <LLVMDisasmDispose>:
     7fc:	cbz	x0, 824 <LLVMDisasmDispose+0x28>
     800:	stp	x29, x30, [sp, #-32]!
     804:	str	x19, [sp, #16]
     808:	mov	x29, sp
     80c:	mov	x19, x0
     810:	bl	0 <LLVMCreateDisasmCPUFeatures>
     814:	mov	x0, x19
     818:	ldr	x19, [sp, #16]
     81c:	ldp	x29, x30, [sp], #32
     820:	b	0 <_ZdlPv>
     824:	ret

0000000000000828 <LLVMDisasmInstruction>:
     828:	str	d8, [sp, #-112]!
     82c:	stp	x29, x30, [sp, #16]
     830:	stp	x28, x27, [sp, #32]
     834:	stp	x26, x25, [sp, #48]
     838:	stp	x24, x23, [sp, #64]
     83c:	stp	x22, x21, [sp, #80]
     840:	stp	x20, x19, [sp, #96]
     844:	mov	x29, sp
     848:	sub	sp, sp, #0x270
     84c:	adrp	x8, 0 <LLVMCreateDisasmCPUFeatures>
     850:	ldr	d0, [x8]
     854:	str	x5, [sp, #24]
     858:	add	x20, sp, #0x160
     85c:	stp	xzr, xzr, [sp, #352]
     860:	adrp	x21, 0 <_ZTVN4llvm19raw_svector_ostreamE>
     864:	adrp	x10, 0 <LLVMCreateDisasmCPUFeatures>
     868:	ldr	x21, [x21]
     86c:	add	x8, x20, #0x20
     870:	str	d0, [sp, #376]
     874:	ldr	d8, [x10]
     878:	str	x8, [sp, #368]
     87c:	ldp	x26, x19, [x0, #112]
     880:	add	x9, sp, #0x110
     884:	mov	x22, x3
     888:	mov	x24, x2
     88c:	mov	x25, x1
     890:	mov	x23, x0
     894:	mov	w11, #0x1                   	// #1
     898:	add	x27, x9, #0x10
     89c:	add	x8, x21, #0x10
     8a0:	add	x0, sp, #0xe0
     8a4:	mov	x1, xzr
     8a8:	mov	x2, xzr
     8ac:	mov	w3, wzr
     8b0:	mov	x28, x4
     8b4:	stp	x9, x27, [sp, #264]
     8b8:	str	d8, [sp, #280]
     8bc:	str	w11, [sp, #256]
     8c0:	stp	xzr, xzr, [sp, #240]
     8c4:	stp	x8, xzr, [sp, #224]
     8c8:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     8cc:	ldr	x8, [x26]
     8d0:	add	x1, sp, #0x160
     8d4:	add	x2, x29, #0x8
     8d8:	add	x6, sp, #0xe0
     8dc:	ldr	x8, [x8, #16]
     8e0:	mov	x0, x26
     8e4:	mov	x3, x25
     8e8:	mov	x4, x24
     8ec:	mov	x5, x22
     8f0:	blr	x8
     8f4:	cmp	w0, #0x2
     8f8:	mov	x24, xzr
     8fc:	b.cc	f28 <LLVMDisasmInstruction+0x700>  // b.lo, b.ul, b.last
     900:	mov	x11, x21
     904:	ldr	x21, [sp, #24]
     908:	cmp	w0, #0x3
     90c:	stp	x28, x23, [sp, #8]
     910:	b.ne	c08 <LLVMDisasmInstruction+0x3e0>  // b.any
     914:	ldr	x8, [sp, #264]
     918:	add	x9, sp, #0x90
     91c:	mov	w20, #0x1                   	// #1
     920:	add	x10, x9, #0x10
     924:	ldr	x24, [x8]
     928:	ldr	w25, [x8, #8]
     92c:	add	x8, x11, #0x10
     930:	add	x0, sp, #0x60
     934:	mov	x1, xzr
     938:	mov	x2, xzr
     93c:	mov	w3, wzr
     940:	stp	x9, x10, [sp, #136]
     944:	str	d8, [sp, #152]
     948:	str	w20, [sp, #128]
     94c:	stp	xzr, xzr, [sp, #112]
     950:	stp	x8, xzr, [sp, #96]
     954:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     958:	str	w20, [sp, #64]
     95c:	stp	xzr, xzr, [sp, #48]
     960:	adrp	x8, 0 <_ZTVN4llvm21formatted_raw_ostreamE>
     964:	ldr	x8, [x8]
     968:	add	x0, sp, #0x20
     96c:	add	x1, sp, #0x60
     970:	stp	xzr, xzr, [sp, #72]
     974:	add	x8, x8, #0x10
     978:	stp	x8, xzr, [sp, #32]
     97c:	bl	0 <LLVMCreateDisasmCPUFeatures>
     980:	ldr	x8, [x19]
     984:	ldr	x20, [sp, #16]
     988:	add	x1, sp, #0x160
     98c:	add	x6, sp, #0x20
     990:	ldr	x8, [x8, #24]
     994:	ldr	x5, [x20, #88]
     998:	mov	x0, x19
     99c:	mov	x2, x22
     9a0:	mov	x3, x24
     9a4:	mov	x4, x25
     9a8:	blr	x8
     9ac:	ldrb	w8, [x20, #128]
     9b0:	tbz	w8, #4, d20 <LLVMDisasmInstruction+0x4f8>
     9b4:	ldr	x0, [x20, #88]
     9b8:	ldr	x8, [x0, #152]
     9bc:	ldr	x10, [x8, #40]
     9c0:	cbz	x10, a3c <LLVMDisasmInstruction+0x214>
     9c4:	ldr	x11, [x20, #96]
     9c8:	ldr	w9, [sp, #352]
     9cc:	ldr	w12, [x11, #24]
     9d0:	cmp	w12, w9
     9d4:	b.ls	c20 <LLVMDisasmInstruction+0x3f8>  // b.plast
     9d8:	ldr	x11, [x11]
     9dc:	ldr	w8, [x8, #52]
     9e0:	add	x9, x11, x9, lsl #6
     9e4:	ldrh	w11, [x9, #6]
     9e8:	cmp	w8, w11
     9ec:	b.ls	c40 <LLVMDisasmInstruction+0x418>  // b.plast
     9f0:	mov	w8, #0x18                  	// #24
     9f4:	madd	x8, x11, x8, x10
     9f8:	ldrh	w8, [x8, #8]
     9fc:	mvn	w8, w8
     a00:	tst	w8, #0x3ffe
     a04:	b.eq	d20 <LLVMDisasmInstruction+0x4f8>  // b.none
     a08:	mov	w8, #0x18                  	// #24
     a0c:	madd	x8, x11, x8, x10
     a10:	ldrh	w8, [x8, #16]
     a14:	cbz	x8, d20 <LLVMDisasmInstruction+0x4f8>
     a18:	mov	w12, #0x18                  	// #24
     a1c:	madd	x10, x11, x12, x10
     a20:	ldr	x9, [x0, #136]
     a24:	ldrh	w10, [x10, #14]
     a28:	cmp	w8, #0x10
     a2c:	b.hi	aa4 <LLVMDisasmInstruction+0x27c>  // b.pmore
     a30:	mov	x11, xzr
     a34:	mov	w12, wzr
     a38:	b	af8 <LLVMDisasmInstruction+0x2d0>
     a3c:	ldr	x2, [x20, #144]
     a40:	cbz	x2, d20 <LLVMDisasmInstruction+0x4f8>
     a44:	ldr	x1, [x20, #136]
     a48:	sub	x8, x29, #0x70
     a4c:	bl	0 <_ZNK4llvm15MCSubtargetInfo23getInstrItineraryForCPUENS_9StringRefE>
     a50:	ldr	x10, [x20, #96]
     a54:	ldr	w9, [sp, #352]
     a58:	ldr	w8, [x10, #24]
     a5c:	cmp	w8, w9
     a60:	b.ls	c20 <LLVMDisasmInstruction+0x3f8>  // b.plast
     a64:	ldr	w8, [sp, #376]
     a68:	cbz	w8, b20 <LLVMDisasmInstruction+0x2f8>
     a6c:	ldr	x10, [x10]
     a70:	mov	w12, #0xa                   	// #10
     a74:	cmp	w8, #0x1
     a78:	add	x9, x10, x9, lsl #6
     a7c:	ldrh	w11, [x9, #6]
     a80:	ldur	x9, [x29, #-16]
     a84:	ldur	x10, [x29, #-32]
     a88:	madd	x12, x11, x12, x9
     a8c:	add	x11, x12, #0x6
     a90:	add	x12, x12, #0x8
     a94:	b.ne	b28 <LLVMDisasmInstruction+0x300>  // b.any
     a98:	mov	w13, wzr
     a9c:	mov	w19, wzr
     aa0:	b	c68 <LLVMDisasmInstruction+0x440>
     aa4:	and	x11, x8, #0xf
     aa8:	tst	x8, #0xf
     aac:	mov	w12, #0x10                  	// #16
     ab0:	csel	x11, x12, x11, eq  // eq = none
     ab4:	add	x13, x9, x10, lsl #2
     ab8:	sub	x11, x8, x11
     abc:	movi	v0.2d, #0x0
     ac0:	add	x12, x13, #0x20
     ac4:	mov	x13, x11
     ac8:	movi	v1.2d, #0x0
     acc:	sub	x14, x12, #0x20
     ad0:	ld2	{v2.8h, v3.8h}, [x12]
     ad4:	ld2	{v4.8h, v5.8h}, [x14]
     ad8:	subs	x13, x13, #0x10
     adc:	add	x12, x12, #0x40
     ae0:	smax	v1.8h, v1.8h, v2.8h
     ae4:	smax	v0.8h, v0.8h, v4.8h
     ae8:	b.ne	acc <LLVMDisasmInstruction+0x2a4>  // b.any
     aec:	smax	v0.8h, v0.8h, v1.8h
     af0:	smaxv	h0, v0.8h
     af4:	fmov	w12, s0
     af8:	add	x10, x11, x10
     afc:	add	x9, x9, x10, lsl #2
     b00:	sub	x8, x8, x11
     b04:	ldrsh	w10, [x9], #4
     b08:	cmp	w10, w12, sxth
     b0c:	csel	w12, w10, w12, gt
     b10:	subs	x8, x8, #0x1
     b14:	b.ne	b04 <LLVMDisasmInstruction+0x2dc>  // b.any
     b18:	sxth	w19, w12
     b1c:	b	c9c <LLVMDisasmInstruction+0x474>
     b20:	mov	w19, wzr
     b24:	b	c9c <LLVMDisasmInstruction+0x474>
     b28:	cmp	x9, #0x0
     b2c:	mov	w16, wzr
     b30:	mov	w14, wzr
     b34:	mov	w15, wzr
     b38:	cset	w17, ne  // ne = any
     b3c:	and	w13, w8, #0xfffffffe
     b40:	b	b90 <LLVMDisasmInstruction+0x368>
     b44:	cmp	w6, w4
     b48:	cset	w4, cs  // cs = hs, nlast
     b4c:	cmp	w0, w18
     b50:	cset	w18, cs  // cs = hs, nlast
     b54:	cmp	w1, #0x0
     b58:	csinv	w0, w3, wzr, ne  // ne = any
     b5c:	cmp	w2, #0x0
     b60:	csinv	w1, w5, wzr, ne  // ne = any
     b64:	tst	w18, w17
     b68:	csinv	w18, w0, wzr, eq  // eq = none
     b6c:	tst	w4, w17
     b70:	csinv	w0, w1, wzr, eq  // eq = none
     b74:	cmp	w14, w18
     b78:	add	w16, w16, #0x2
     b7c:	csel	w14, w18, w14, lt  // lt = tstop
     b80:	cmp	w15, w0
     b84:	csel	w15, w0, w15, lt  // lt = tstop
     b88:	cmp	w13, w16
     b8c:	b.eq	bfc <LLVMDisasmInstruction+0x3d4>  // b.none
     b90:	cbz	x9, b98 <LLVMDisasmInstruction+0x370>
     b94:	ldrh	w18, [x11]
     b98:	cbz	x9, ba0 <LLVMDisasmInstruction+0x378>
     b9c:	ldrh	w1, [x11]
     ba0:	cbz	x9, ba8 <LLVMDisasmInstruction+0x380>
     ba4:	ldrh	w0, [x12]
     ba8:	and	w2, w18, #0xffff
     bac:	and	w1, w1, #0xffff
     bb0:	cbz	x9, bb8 <LLVMDisasmInstruction+0x390>
     bb4:	ldrh	w3, [x12]
     bb8:	and	w18, w0, #0xffff
     bbc:	add	w0, w16, w2
     bc0:	add	w1, w16, w1
     bc4:	and	w4, w3, #0xffff
     bc8:	add	w6, w1, #0x1
     bcc:	cmp	w0, w18
     bd0:	cset	w1, cc  // cc = lo, ul, last
     bd4:	cmp	w6, w4
     bd8:	cset	w2, cc  // cc = lo, ul, last
     bdc:	and	w1, w1, w17
     be0:	cmp	w1, #0x1
     be4:	and	w2, w2, w17
     be8:	b.ne	bf0 <LLVMDisasmInstruction+0x3c8>  // b.any
     bec:	ldr	w3, [x10, w0, uxtw #2]
     bf0:	cbz	w2, b44 <LLVMDisasmInstruction+0x31c>
     bf4:	ldr	w5, [x10, w6, uxtw #2]
     bf8:	b	b44 <LLVMDisasmInstruction+0x31c>
     bfc:	cmp	w14, w15
     c00:	csel	w19, w14, w15, gt
     c04:	b	c60 <LLVMDisasmInstruction+0x438>
     c08:	adrp	x0, 0 <LLVMCreateDisasmCPUFeatures>
     c0c:	adrp	x1, 0 <LLVMCreateDisasmCPUFeatures>
     c10:	add	x0, x0, #0x0
     c14:	add	x1, x1, #0x0
     c18:	mov	w2, #0x127                 	// #295
     c1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     c20:	adrp	x0, 0 <LLVMCreateDisasmCPUFeatures>
     c24:	adrp	x1, 0 <LLVMCreateDisasmCPUFeatures>
     c28:	adrp	x3, 0 <LLVMCreateDisasmCPUFeatures>
     c2c:	add	x0, x0, #0x0
     c30:	add	x1, x1, #0x0
     c34:	add	x3, x3, #0x0
     c38:	mov	w2, #0x2d                  	// #45
     c3c:	bl	0 <__assert_fail>
     c40:	adrp	x0, 0 <LLVMCreateDisasmCPUFeatures>
     c44:	adrp	x1, 0 <LLVMCreateDisasmCPUFeatures>
     c48:	adrp	x3, 0 <LLVMCreateDisasmCPUFeatures>
     c4c:	add	x0, x0, #0x0
     c50:	add	x1, x1, #0x0
     c54:	add	x3, x3, #0x0
     c58:	mov	w2, #0x15d                 	// #349
     c5c:	bl	0 <__assert_fail>
     c60:	cmp	w8, w13
     c64:	b.eq	c9c <LLVMDisasmInstruction+0x474>  // b.none
     c68:	cbz	x9, c88 <LLVMDisasmInstruction+0x460>
     c6c:	ldrh	w14, [x11]
     c70:	ldrh	w15, [x12]
     c74:	add	w14, w13, w14
     c78:	cmp	w14, w15
     c7c:	b.cs	c88 <LLVMDisasmInstruction+0x460>  // b.hs, b.nlast
     c80:	ldr	w14, [x10, w14, uxtw #2]
     c84:	b	c8c <LLVMDisasmInstruction+0x464>
     c88:	mov	w14, #0xffffffff            	// #-1
     c8c:	cmp	w19, w14
     c90:	add	w13, w13, #0x1
     c94:	csel	w19, w14, w19, lt  // lt = tstop
     c98:	b	c60 <LLVMDisasmInstruction+0x438>
     c9c:	cmp	w19, #0x2
     ca0:	b.lt	d20 <LLVMDisasmInstruction+0x4f8>  // b.tstop
     ca4:	ldp	x9, x8, [x20, #328]
     ca8:	add	x0, x20, #0x138
     cac:	sub	x9, x9, x8
     cb0:	cmp	x9, #0x8
     cb4:	b.hi	ccc <LLVMDisasmInstruction+0x4a4>  // b.pmore
     cb8:	adrp	x1, 0 <LLVMCreateDisasmCPUFeatures>
     cbc:	add	x1, x1, #0x0
     cc0:	mov	w2, #0x9                   	// #9
     cc4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     cc8:	b	cf0 <LLVMDisasmInstruction+0x4c8>
     ccc:	adrp	x9, 0 <LLVMCreateDisasmCPUFeatures>
     cd0:	add	x9, x9, #0x0
     cd4:	ldr	x9, [x9]
     cd8:	mov	w10, #0x20                  	// #32
     cdc:	strb	w10, [x8, #8]
     ce0:	str	x9, [x8]
     ce4:	ldr	x8, [x20, #336]
     ce8:	add	x8, x8, #0x9
     cec:	str	x8, [x20, #336]
     cf0:	mov	w1, w19
     cf4:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     cf8:	ldp	x9, x8, [x0, #16]
     cfc:	cmp	x8, x9
     d00:	b.cs	d18 <LLVMDisasmInstruction+0x4f0>  // b.hs, b.nlast
     d04:	add	x9, x8, #0x1
     d08:	mov	w10, #0xa                   	// #10
     d0c:	str	x9, [x0, #24]
     d10:	strb	w10, [x8]
     d14:	b	d20 <LLVMDisasmInstruction+0x4f8>
     d18:	mov	w1, #0xa                   	// #10
     d1c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     d20:	ldr	w22, [x20, #176]
     d24:	cbz	w22, e80 <LLVMDisasmInstruction+0x658>
     d28:	ldr	x9, [sp, #16]
     d2c:	mov	w20, #0x20                  	// #32
     d30:	mov	x19, x27
     d34:	ldr	x8, [x9, #72]
     d38:	ldr	x25, [x9, #168]
     d3c:	ldp	x24, x23, [x8, #48]
     d40:	mov	w8, #0x1                   	// #1
     d44:	b	d78 <LLVMDisasmInstruction+0x550>
     d48:	mov	x0, x26
     d4c:	mov	x1, x25
     d50:	mov	x2, x27
     d54:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     d58:	add	x9, x28, #0x1
     d5c:	cmp	x22, x9
     d60:	csinc	x9, x22, x28, cc  // cc = lo, ul, last
     d64:	mov	w8, wzr
     d68:	subs	x22, x22, x9
     d6c:	add	x25, x25, x9
     d70:	mov	x27, x19
     d74:	b.eq	e80 <LLVMDisasmInstruction+0x658>  // b.none
     d78:	tbnz	w8, #0, da8 <LLVMDisasmInstruction+0x580>
     d7c:	ldp	x9, x8, [sp, #48]
     d80:	cmp	x8, x9
     d84:	b.cs	d9c <LLVMDisasmInstruction+0x574>  // b.hs, b.nlast
     d88:	add	x9, x8, #0x1
     d8c:	str	x9, [sp, #56]
     d90:	mov	w9, #0xa                   	// #10
     d94:	strb	w9, [x8]
     d98:	b	da8 <LLVMDisasmInstruction+0x580>
     d9c:	add	x0, sp, #0x20
     da0:	mov	w1, #0xa                   	// #10
     da4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     da8:	add	x0, sp, #0x20
     dac:	mov	w1, #0x28                  	// #40
     db0:	bl	0 <_ZN4llvm21formatted_raw_ostream11PadToColumnEj>
     db4:	mov	w1, #0xa                   	// #10
     db8:	mov	x0, x25
     dbc:	mov	x2, x22
     dc0:	bl	0 <memchr>
     dc4:	mov	x8, x0
     dc8:	ldp	x9, x0, [sp, #48]
     dcc:	sub	x10, x8, x25
     dd0:	cmp	x8, #0x0
     dd4:	csinv	x28, x10, xzr, ne  // ne = any
     dd8:	sub	x8, x9, x0
     ddc:	cmp	x23, x8
     de0:	b.ls	dfc <LLVMDisasmInstruction+0x5d4>  // b.plast
     de4:	add	x0, sp, #0x20
     de8:	mov	x1, x24
     dec:	mov	x2, x23
     df0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     df4:	mov	x26, x0
     df8:	b	e1c <LLVMDisasmInstruction+0x5f4>
     dfc:	add	x26, sp, #0x20
     e00:	cbz	x23, e1c <LLVMDisasmInstruction+0x5f4>
     e04:	mov	x1, x24
     e08:	mov	x2, x23
     e0c:	bl	0 <memcpy>
     e10:	ldr	x8, [sp, #56]
     e14:	add	x8, x8, x23
     e18:	str	x8, [sp, #56]
     e1c:	ldp	x9, x8, [x26, #16]
     e20:	cmp	x8, x9
     e24:	b.cs	e38 <LLVMDisasmInstruction+0x610>  // b.hs, b.nlast
     e28:	add	x9, x8, #0x1
     e2c:	str	x9, [x26, #24]
     e30:	strb	w20, [x8]
     e34:	b	e48 <LLVMDisasmInstruction+0x620>
     e38:	mov	w1, #0x20                  	// #32
     e3c:	mov	x0, x26
     e40:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     e44:	mov	x26, x0
     e48:	ldp	x8, x0, [x26, #16]
     e4c:	cmp	x22, x28
     e50:	csel	x27, x22, x28, cc  // cc = lo, ul, last
     e54:	sub	x8, x8, x0
     e58:	cmp	x27, x8
     e5c:	b.hi	d48 <LLVMDisasmInstruction+0x520>  // b.pmore
     e60:	cbz	x27, d58 <LLVMDisasmInstruction+0x530>
     e64:	mov	x1, x25
     e68:	mov	x2, x27
     e6c:	bl	0 <memcpy>
     e70:	ldr	x8, [x26, #24]
     e74:	add	x8, x8, x27
     e78:	str	x8, [x26, #24]
     e7c:	b	d58 <LLVMDisasmInstruction+0x530>
     e80:	ldr	x8, [sp, #56]
     e84:	ldr	x9, [sp, #40]
     e88:	cmp	x8, x9
     e8c:	b.eq	e98 <LLVMDisasmInstruction+0x670>  // b.none
     e90:	add	x0, sp, #0x20
     e94:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     e98:	ldp	x19, x8, [sp, #8]
     e9c:	str	wzr, [x8, #176]
     ea0:	cbz	x21, f80 <LLVMDisasmInstruction+0x758>
     ea4:	ldr	w8, [sp, #152]
     ea8:	ldr	x1, [sp, #144]
     eac:	sub	x9, x21, #0x1
     eb0:	mov	x0, x19
     eb4:	cmp	x9, x8
     eb8:	csel	x20, x8, x9, hi  // hi = pmore
     ebc:	mov	x2, x20
     ec0:	bl	0 <memcpy>
     ec4:	strb	wzr, [x19, x20]
     ec8:	adrp	x10, 0 <_ZTVN4llvm21formatted_raw_ostreamE>
     ecc:	ldr	x8, [sp, #56]
     ed0:	ldr	x9, [sp, #40]
     ed4:	ldr	x24, [x29, #8]
     ed8:	ldr	x10, [x10]
     edc:	cmp	x8, x9
     ee0:	add	x10, x10, #0x10
     ee4:	str	x10, [sp, #32]
     ee8:	b.eq	ef4 <LLVMDisasmInstruction+0x6cc>  // b.none
     eec:	add	x0, sp, #0x20
     ef0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     ef4:	add	x0, sp, #0x20
     ef8:	bl	0 <LLVMCreateDisasmCPUFeatures>
     efc:	add	x0, sp, #0x20
     f00:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
     f04:	add	x0, sp, #0x60
     f08:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
     f0c:	ldr	x0, [sp, #144]
     f10:	add	x8, sp, #0x90
     f14:	add	x8, x8, #0x10
     f18:	add	x20, sp, #0x160
     f1c:	cmp	x0, x8
     f20:	b.eq	f28 <LLVMDisasmInstruction+0x700>  // b.none
     f24:	bl	0 <free>
     f28:	add	x0, sp, #0xe0
     f2c:	add	x19, x20, #0x10
     f30:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
     f34:	ldr	x0, [sp, #272]
     f38:	cmp	x0, x27
     f3c:	b.eq	f44 <LLVMDisasmInstruction+0x71c>  // b.none
     f40:	bl	0 <free>
     f44:	ldr	x0, [sp, #368]
     f48:	add	x8, x19, #0x10
     f4c:	cmp	x0, x8
     f50:	b.eq	f58 <LLVMDisasmInstruction+0x730>  // b.none
     f54:	bl	0 <free>
     f58:	mov	x0, x24
     f5c:	add	sp, sp, #0x270
     f60:	ldp	x20, x19, [sp, #96]
     f64:	ldp	x22, x21, [sp, #80]
     f68:	ldp	x24, x23, [sp, #64]
     f6c:	ldp	x26, x25, [sp, #48]
     f70:	ldp	x28, x27, [sp, #32]
     f74:	ldp	x29, x30, [sp, #16]
     f78:	ldr	d8, [sp], #112
     f7c:	ret
     f80:	adrp	x0, 0 <LLVMCreateDisasmCPUFeatures>
     f84:	adrp	x1, 0 <LLVMCreateDisasmCPUFeatures>
     f88:	adrp	x3, 0 <LLVMCreateDisasmCPUFeatures>
     f8c:	add	x0, x0, #0x0
     f90:	add	x1, x1, #0x0
     f94:	add	x3, x3, #0x0
     f98:	mov	w2, #0x11f                 	// #287
     f9c:	bl	0 <__assert_fail>

0000000000000fa0 <LLVMSetDisasmOptions>:
     fa0:	sub	sp, sp, #0xa0
     fa4:	stp	x29, x30, [sp, #80]
     fa8:	stp	x26, x25, [sp, #96]
     fac:	stp	x24, x23, [sp, #112]
     fb0:	stp	x22, x21, [sp, #128]
     fb4:	stp	x20, x19, [sp, #144]
     fb8:	add	x29, sp, #0x50
     fbc:	mov	x19, x1
     fc0:	mov	x20, x0
     fc4:	tbnz	w19, #0, fd4 <LLVMSetDisasmOptions+0x34>
     fc8:	tbnz	w19, #1, ff4 <LLVMSetDisasmOptions+0x54>
     fcc:	tbnz	w19, #2, 1014 <LLVMSetDisasmOptions+0x74>
     fd0:	b	10b0 <LLVMSetDisasmOptions+0x110>
     fd4:	ldr	x8, [x20, #120]
     fd8:	mov	w9, #0x1                   	// #1
     fdc:	and	x19, x19, #0xfffffffffffffffe
     fe0:	strb	w9, [x8, #40]
     fe4:	ldr	x8, [x20, #128]
     fe8:	orr	x8, x8, #0x1
     fec:	str	x8, [x20, #128]
     ff0:	tbz	w19, #1, fcc <LLVMSetDisasmOptions+0x2c>
     ff4:	ldr	x8, [x20, #120]
     ff8:	mov	w9, #0x1                   	// #1
     ffc:	and	x19, x19, #0xfffffffffffffffd
    1000:	strb	w9, [x8, #41]
    1004:	ldr	x8, [x20, #128]
    1008:	orr	x8, x8, #0x2
    100c:	str	x8, [x20, #128]
    1010:	tbz	w19, #2, 10b0 <LLVMSetDisasmOptions+0x110>
    1014:	ldp	x21, x23, [x20, #72]
    1018:	ldr	x22, [x20, #96]
    101c:	ldr	x26, [x20, #64]
    1020:	mov	w8, #0x104                 	// #260
    1024:	ldr	w25, [x21, #168]
    1028:	add	x0, sp, #0x18
    102c:	mov	x1, sp
    1030:	strh	w8, [sp, #16]
    1034:	stp	x20, xzr, [sp]
    1038:	add	x24, sp, #0x18
    103c:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
    1040:	ldr	x8, [x26, #128]
    1044:	cbz	x8, 106c <LLVMSetDisasmOptions+0xcc>
    1048:	cmp	w25, #0x0
    104c:	cset	w1, eq  // eq = none
    1050:	add	x0, sp, #0x18
    1054:	mov	x2, x21
    1058:	mov	x3, x22
    105c:	mov	x4, x23
    1060:	blr	x8
    1064:	mov	x21, x0
    1068:	b	1070 <LLVMSetDisasmOptions+0xd0>
    106c:	mov	x21, xzr
    1070:	ldr	x0, [sp, #24]
    1074:	add	x8, x24, #0x10
    1078:	cmp	x0, x8
    107c:	b.eq	1084 <LLVMSetDisasmOptions+0xe4>  // b.none
    1080:	bl	0 <_ZdlPv>
    1084:	cbz	x21, 10b0 <LLVMSetDisasmOptions+0x110>
    1088:	ldr	x0, [x20, #120]
    108c:	str	x21, [x20, #120]
    1090:	cbz	x0, 10a0 <LLVMSetDisasmOptions+0x100>
    1094:	ldr	x8, [x0]
    1098:	ldr	x8, [x8, #8]
    109c:	blr	x8
    10a0:	ldr	x8, [x20, #128]
    10a4:	and	x19, x19, #0xfffffffffffffffb
    10a8:	orr	x8, x8, #0x4
    10ac:	str	x8, [x20, #128]
    10b0:	tbz	w19, #3, 10d0 <LLVMSetDisasmOptions+0x130>
    10b4:	ldr	x8, [x20, #120]
    10b8:	add	x9, x20, #0x138
    10bc:	and	x19, x19, #0xfffffffffffffff7
    10c0:	str	x9, [x8, #8]
    10c4:	ldr	x8, [x20, #128]
    10c8:	orr	x8, x8, #0x8
    10cc:	str	x8, [x20, #128]
    10d0:	tbz	w19, #4, 10e4 <LLVMSetDisasmOptions+0x144>
    10d4:	ldr	x8, [x20, #128]
    10d8:	and	x19, x19, #0xffffffffffffffef
    10dc:	orr	x8, x8, #0x10
    10e0:	str	x8, [x20, #128]
    10e4:	cmp	x19, #0x0
    10e8:	ldp	x20, x19, [sp, #144]
    10ec:	ldp	x22, x21, [sp, #128]
    10f0:	ldp	x24, x23, [sp, #112]
    10f4:	ldp	x26, x25, [sp, #96]
    10f8:	ldp	x29, x30, [sp, #80]
    10fc:	cset	w0, eq  // eq = none
    1100:	add	sp, sp, #0xa0
    1104:	ret

Disassembly of section .text._ZN4llvm17LLVMDisasmContextD2Ev:

0000000000000000 <_ZN4llvm17LLVMDisasmContextD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	add	x0, x0, #0x138
  14:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
  18:	ldr	x0, [x19, #168]
  1c:	add	x8, x19, #0xb8
  20:	cmp	x0, x8
  24:	b.eq	2c <_ZN4llvm17LLVMDisasmContextD2Ev+0x2c>  // b.none
  28:	bl	0 <free>
  2c:	ldr	x0, [x19, #136]
  30:	add	x8, x19, #0x98
  34:	cmp	x0, x8
  38:	b.eq	40 <_ZN4llvm17LLVMDisasmContextD2Ev+0x40>  // b.none
  3c:	bl	0 <_ZdlPv>
  40:	ldr	x0, [x19, #120]
  44:	cbz	x0, 54 <_ZN4llvm17LLVMDisasmContextD2Ev+0x54>
  48:	ldr	x8, [x0]
  4c:	ldr	x8, [x8, #8]
  50:	blr	x8
  54:	ldr	x0, [x19, #112]
  58:	str	xzr, [x19, #120]
  5c:	cbz	x0, 6c <_ZN4llvm17LLVMDisasmContextD2Ev+0x6c>
  60:	ldr	x8, [x0]
  64:	ldr	x8, [x8, #8]
  68:	blr	x8
  6c:	ldr	x20, [x19, #104]
  70:	str	xzr, [x19, #112]
  74:	cbz	x20, 88 <_ZN4llvm17LLVMDisasmContextD2Ev+0x88>
  78:	mov	x0, x20
  7c:	bl	0 <_ZN4llvm9MCContextD1Ev>
  80:	mov	x0, x20
  84:	bl	0 <_ZdlPv>
  88:	ldr	x0, [x19, #96]
  8c:	str	xzr, [x19, #104]
  90:	cbz	x0, 98 <_ZN4llvm17LLVMDisasmContextD2Ev+0x98>
  94:	bl	0 <_ZdlPv>
  98:	ldr	x0, [x19, #88]
  9c:	str	xzr, [x19, #96]
  a0:	cbz	x0, b0 <_ZN4llvm17LLVMDisasmContextD2Ev+0xb0>
  a4:	ldr	x8, [x0]
  a8:	ldr	x8, [x8, #8]
  ac:	blr	x8
  b0:	ldr	x20, [x19, #80]
  b4:	str	xzr, [x19, #88]
  b8:	cbz	x20, e0 <_ZN4llvm17LLVMDisasmContextD2Ev+0xe0>
  bc:	ldr	x0, [x20, #200]
  c0:	bl	0 <_ZdlPv>
  c4:	ldr	x8, [x20, #192]
  c8:	ldr	x0, [x20, #168]
  cc:	add	x8, x8, #0x1
  d0:	str	x8, [x20, #192]
  d4:	bl	0 <_ZdlPv>
  d8:	mov	x0, x20
  dc:	bl	0 <_ZdlPv>
  e0:	ldr	x0, [x19, #72]
  e4:	str	xzr, [x19, #80]
  e8:	cbz	x0, f8 <_ZN4llvm17LLVMDisasmContextD2Ev+0xf8>
  ec:	ldr	x8, [x0]
  f0:	ldr	x8, [x8, #8]
  f4:	blr	x8
  f8:	ldr	x0, [x19]
  fc:	add	x8, x19, #0x10
 100:	str	xzr, [x19, #72]
 104:	cmp	x0, x8
 108:	b.eq	118 <_ZN4llvm17LLVMDisasmContextD2Ev+0x118>  // b.none
 10c:	ldp	x20, x19, [sp, #16]
 110:	ldp	x29, x30, [sp], #32
 114:	b	0 <_ZdlPv>
 118:	ldp	x20, x19, [sp, #16]
 11c:	ldp	x29, x30, [sp], #32
 120:	ret

Disassembly of section .text._ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE:

0000000000000000 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE>
  18:	str	x20, [x19, #40]
  1c:	ldr	w8, [x20, #32]
  20:	cbz	w8, 44 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0x44>
  24:	ldr	x8, [x20, #8]
  28:	cbnz	x8, 48 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0x48>
  2c:	ldr	x8, [x20]
  30:	mov	x0, x20
  34:	ldr	x8, [x8, #80]
  38:	blr	x8
  3c:	mov	x20, x0
  40:	b	50 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0x50>
  44:	ldr	x8, [x20, #8]
  48:	ldr	x9, [x20, #16]
  4c:	sub	x20, x9, x8
  50:	ldr	x8, [x19, #24]
  54:	ldr	x9, [x19, #8]
  58:	cmp	x8, x9
  5c:	cbz	x20, 88 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0x88>
  60:	b.eq	6c <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0x6c>  // b.none
  64:	mov	x0, x19
  68:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  6c:	mov	x0, x20
  70:	bl	0 <_Znam>
  74:	mov	x1, x0
  78:	mov	w3, #0x1                   	// #1
  7c:	mov	x0, x19
  80:	mov	x2, x20
  84:	b	a4 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0xa4>
  88:	b.eq	94 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0x94>  // b.none
  8c:	mov	x0, x19
  90:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  94:	mov	x0, x19
  98:	mov	x1, xzr
  9c:	mov	x2, xzr
  a0:	mov	w3, wzr
  a4:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
  a8:	ldr	x20, [x19, #40]
  ac:	ldr	x8, [x20, #24]
  b0:	ldr	x9, [x20, #8]
  b4:	cmp	x8, x9
  b8:	b.eq	c4 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0xc4>  // b.none
  bc:	mov	x0, x20
  c0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  c4:	mov	x0, x20
  c8:	mov	x1, xzr
  cc:	mov	x2, xzr
  d0:	mov	w3, wzr
  d4:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
  d8:	str	xzr, [x19, #56]
  dc:	ldp	x20, x19, [sp, #16]
  e0:	ldp	x29, x30, [sp], #32
  e4:	ret

Disassembly of section .text._ZN4llvm21formatted_raw_ostream13releaseStreamEv:

0000000000000000 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x19, [x0, #40]
  10:	cbz	x19, 44 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0x44>
  14:	ldr	w8, [x0, #32]
  18:	mov	x20, x0
  1c:	cbz	w8, 50 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0x50>
  20:	ldr	x8, [x20, #8]
  24:	cbnz	x8, 54 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0x54>
  28:	ldr	x8, [x20]
  2c:	mov	x0, x20
  30:	ldr	x8, [x8, #80]
  34:	blr	x8
  38:	ldr	x19, [x20, #40]
  3c:	mov	x20, x0
  40:	b	5c <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0x5c>
  44:	ldp	x20, x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret
  50:	ldr	x8, [x20, #8]
  54:	ldr	x9, [x20, #16]
  58:	sub	x20, x9, x8
  5c:	ldr	x8, [x19, #24]
  60:	ldr	x9, [x19, #8]
  64:	cmp	x8, x9
  68:	cbz	x20, 94 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0x94>
  6c:	b.eq	78 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0x78>  // b.none
  70:	mov	x0, x19
  74:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  78:	mov	x0, x20
  7c:	bl	0 <_Znam>
  80:	mov	w3, #0x1                   	// #1
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	mov	x2, x20
  90:	b	b0 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0xb0>
  94:	b.eq	a0 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0xa0>  // b.none
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  a0:	mov	x0, x19
  a4:	mov	x1, xzr
  a8:	mov	x2, xzr
  ac:	mov	w3, wzr
  b0:	ldp	x20, x19, [sp, #16]
  b4:	ldp	x29, x30, [sp], #32
  b8:	b	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>

MCDisassembler.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm14MCDisassemblerD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm14MCDisassemblerD1Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #24]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 34 <_ZN4llvm14MCDisassemblerD1Ev+0x34>
  28:	ldr	x8, [x0]
  2c:	ldr	x8, [x8, #8]
  30:	blr	x8
  34:	str	xzr, [x19, #24]
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

0000000000000044 <_ZN4llvm14MCDisassemblerD0Ev>:
  44:	brk	#0x1

0000000000000048 <_ZNK4llvm14MCDisassembler13onSymbolStartENS_9StringRefERmNS_8ArrayRefIhEEmRNS_11raw_ostreamE>:
  48:	mov	w0, #0x3                   	// #3
  4c:	str	xzr, [x3]
  50:	ret

0000000000000054 <_ZNK4llvm14MCDisassembler24tryAddingSymbolicOperandERNS_6MCInstElmbmm>:
  54:	mov	x9, x0
  58:	ldr	x0, [x0, #24]
  5c:	cbz	x0, 88 <_ZNK4llvm14MCDisassembler24tryAddingSymbolicOperandERNS_6MCInstElmbmm+0x34>
  60:	ldr	x10, [x0]
  64:	mov	x8, x3
  68:	mov	x3, x2
  6c:	ldr	x2, [x9, #32]
  70:	ldr	x9, [x10, #16]
  74:	mov	x7, x6
  78:	mov	x6, x5
  7c:	and	w5, w4, #0x1
  80:	mov	x4, x8
  84:	br	x9
  88:	ret

000000000000008c <_ZNK4llvm14MCDisassembler31tryAddingPcLoadReferenceCommentElm>:
  8c:	mov	x8, x0
  90:	ldr	x0, [x0, #24]
  94:	cbz	x0, b0 <_ZNK4llvm14MCDisassembler31tryAddingPcLoadReferenceCommentElm+0x24>
  98:	ldr	x9, [x0]
  9c:	mov	x3, x2
  a0:	mov	x2, x1
  a4:	ldr	x1, [x8, #32]
  a8:	ldr	x4, [x9, #24]
  ac:	br	x4
  b0:	ret

00000000000000b4 <_ZN4llvm14MCDisassembler13setSymbolizerESt10unique_ptrINS_12MCSymbolizerESt14default_deleteIS2_EE>:
  b4:	ldr	x9, [x1]
  b8:	str	xzr, [x1]
  bc:	mov	x8, x0
  c0:	ldr	x0, [x0, #24]
  c4:	str	x9, [x8, #24]
  c8:	cbz	x0, d8 <_ZN4llvm14MCDisassembler13setSymbolizerESt10unique_ptrINS_12MCSymbolizerESt14default_deleteIS2_EE+0x24>
  cc:	ldr	x8, [x0]
  d0:	ldr	x1, [x8, #8]
  d4:	br	x1
  d8:	ret

MCExternalSymbolizer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>:
   0:	sub	sp, sp, #0xc0
   4:	stp	x29, x30, [sp, #112]
   8:	str	x25, [sp, #128]
   c:	stp	x24, x23, [sp, #144]
  10:	stp	x22, x21, [sp, #160]
  14:	stp	x20, x19, [sp, #176]
  18:	add	x29, sp, #0x70
  1c:	movi	v0.2d, #0x0
  20:	stp	q0, q0, [sp, #80]
  24:	stp	q0, q0, [sp, #48]
  28:	str	x3, [sp, #96]
  2c:	ldr	x8, [x0, #24]
  30:	mov	x25, x7
  34:	mov	w21, w5
  38:	mov	x23, x4
  3c:	mov	x24, x3
  40:	mov	x22, x2
  44:	mov	x20, x0
  48:	mov	x19, x1
  4c:	cbz	x8, c0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xc0>
  50:	ldr	x0, [x20, #40]
  54:	add	x5, sp, #0x30
  58:	mov	w4, #0x1                   	// #1
  5c:	mov	x1, x23
  60:	mov	x2, x6
  64:	mov	x3, x25
  68:	blr	x8
  6c:	movi	v0.2d, #0x0
  70:	cbz	w0, c0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xc0>
  74:	ldr	x8, [sp, #48]
  78:	cbz	x8, 13c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x13c>
  7c:	ldr	x0, [sp, #56]
  80:	cbz	x0, 174 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x174>
  84:	str	x0, [sp, #32]
  88:	bl	0 <strlen>
  8c:	str	x0, [sp, #40]
  90:	ldr	x0, [x20, #8]
  94:	mov	w8, #0x105                 	// #261
  98:	strh	w8, [sp, #24]
  9c:	add	x8, sp, #0x20
  a0:	add	x1, sp, #0x8
  a4:	stp	x8, xzr, [sp, #8]
  a8:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
  ac:	ldr	x2, [x20, #8]
  b0:	mov	w1, wzr
  b4:	mov	x3, xzr
  b8:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
  bc:	b	184 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x184>
  c0:	cmp	x25, #0x1
  c4:	eor	w8, w21, #0x1
  c8:	cset	w9, eq  // eq = none
  cc:	mov	w0, wzr
  d0:	and	w8, w9, w8
  d4:	stp	q0, q0, [sp, #80]
  d8:	stp	q0, q0, [sp, #48]
  dc:	tbnz	w8, #0, 440 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x440>
  e0:	ldr	x8, [x20, #32]
  e4:	cbz	x8, 440 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x440>
  e8:	and	x9, x21, #0x1
  ec:	str	x9, [sp, #8]
  f0:	ldr	x0, [x20, #40]
  f4:	add	x2, sp, #0x8
  f8:	add	x4, sp, #0x20
  fc:	mov	x1, x24
 100:	mov	x3, x23
 104:	blr	x8
 108:	mov	x23, x0
 10c:	cbz	x0, 268 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x268>
 110:	ldr	x8, [sp, #8]
 114:	mov	w9, #0x1                   	// #1
 118:	stp	x9, x23, [sp, #48]
 11c:	cmp	x8, #0x9
 120:	b.ne	330 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x330>  // b.any
 124:	ldr	x24, [sp, #32]
 128:	cbz	x24, 2e8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2e8>
 12c:	mov	x0, x24
 130:	bl	0 <strlen>
 134:	mov	x25, x0
 138:	b	2ec <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2ec>
 13c:	mov	x21, xzr
 140:	ldr	x8, [sp, #72]
 144:	cbnz	x8, 190 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x190>
 148:	mov	x23, xzr
 14c:	ldr	x0, [sp, #96]
 150:	cbnz	x0, 1f0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1f0>
 154:	mov	x22, xzr
 158:	cbnz	x23, 204 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x204>
 15c:	cbz	x21, 274 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x274>
 160:	cbz	x22, 28c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x28c>
 164:	ldr	x3, [x20, #8]
 168:	mov	w0, wzr
 16c:	mov	x1, x21
 170:	b	230 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x230>
 174:	ldrsw	x0, [sp, #64]
 178:	ldr	x1, [x20, #8]
 17c:	mov	w2, wzr
 180:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 184:	mov	x21, x0
 188:	ldr	x8, [sp, #72]
 18c:	cbz	x8, 148 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x148>
 190:	ldr	x0, [sp, #80]
 194:	cbz	x0, 1d4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1d4>
 198:	str	x0, [sp, #32]
 19c:	bl	0 <strlen>
 1a0:	str	x0, [sp, #40]
 1a4:	ldr	x0, [x20, #8]
 1a8:	mov	w8, #0x105                 	// #261
 1ac:	strh	w8, [sp, #24]
 1b0:	add	x8, sp, #0x20
 1b4:	add	x1, sp, #0x8
 1b8:	stp	x8, xzr, [sp, #8]
 1bc:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
 1c0:	ldr	x2, [x20, #8]
 1c4:	mov	w1, wzr
 1c8:	mov	x3, xzr
 1cc:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 1d0:	b	1e4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1e4>
 1d4:	ldrsw	x0, [sp, #88]
 1d8:	ldr	x1, [x20, #8]
 1dc:	mov	w2, wzr
 1e0:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 1e4:	mov	x23, x0
 1e8:	ldr	x0, [sp, #96]
 1ec:	cbz	x0, 154 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x154>
 1f0:	ldr	x1, [x20, #8]
 1f4:	mov	w2, wzr
 1f8:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 1fc:	mov	x22, x0
 200:	cbz	x23, 15c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x15c>
 204:	ldr	x3, [x20, #8]
 208:	cbz	x21, 244 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x244>
 20c:	mov	w0, #0x11                  	// #17
 210:	mov	x1, x21
 214:	mov	x2, x23
 218:	mov	x4, xzr
 21c:	bl	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 220:	mov	x1, x0
 224:	cbz	x22, 260 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x260>
 228:	ldr	x3, [x20, #8]
 22c:	mov	w0, wzr
 230:	mov	x2, x22
 234:	mov	x4, xzr
 238:	bl	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 23c:	mov	x22, x0
 240:	b	290 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x290>
 244:	mov	w0, #0x1                   	// #1
 248:	mov	x1, x23
 24c:	mov	x2, x3
 250:	mov	x3, xzr
 254:	bl	0 <_ZN4llvm11MCUnaryExpr6createENS0_6OpcodeEPKNS_6MCExprERNS_9MCContextENS_5SMLocE>
 258:	mov	x1, x0
 25c:	cbnz	x22, 228 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x228>
 260:	mov	x22, x1
 264:	b	290 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x290>
 268:	tbz	w21, #0, 32c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x32c>
 26c:	str	x24, [sp, #96]
 270:	b	32c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x32c>
 274:	cbnz	x22, 290 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x290>
 278:	ldr	x1, [x20, #8]
 27c:	mov	x0, xzr
 280:	mov	w2, wzr
 284:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 288:	b	23c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x23c>
 28c:	mov	x22, x21
 290:	ldr	x0, [x20, #16]
 294:	ldr	w2, [sp, #104]
 298:	mov	x1, x22
 29c:	ldr	x8, [x0]
 2a0:	ldr	x8, [x8, #16]
 2a4:	blr	x8
 2a8:	cbz	x0, 440 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x440>
 2ac:	ldp	w8, w9, [x19, #24]
 2b0:	mov	x20, x0
 2b4:	cmp	w8, w9
 2b8:	b.cs	45c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x45c>  // b.hs, b.nlast
 2bc:	ldr	x9, [x19, #16]
 2c0:	mov	w10, #0x4                   	// #4
 2c4:	add	x8, x9, w8, uxtw #4
 2c8:	stp	x10, x20, [x8]
 2cc:	ldp	w8, w9, [x19, #24]
 2d0:	cmp	w8, w9
 2d4:	b.cs	478 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x478>  // b.hs, b.nlast
 2d8:	add	w8, w8, #0x1
 2dc:	mov	w0, #0x1                   	// #1
 2e0:	str	w8, [x19, #24]
 2e4:	b	440 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x440>
 2e8:	mov	x25, xzr
 2ec:	ldp	x8, x0, [x22, #16]
 2f0:	sub	x8, x8, x0
 2f4:	cmp	x25, x8
 2f8:	b.ls	310 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x310>  // b.plast
 2fc:	mov	x0, x22
 300:	mov	x1, x24
 304:	mov	x2, x25
 308:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 30c:	b	32c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x32c>
 310:	cbz	x25, 32c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x32c>
 314:	mov	x1, x24
 318:	mov	x2, x25
 31c:	bl	0 <memcpy>
 320:	ldr	x8, [x22, #24]
 324:	add	x8, x8, x25
 328:	str	x8, [x22, #24]
 32c:	ldr	x8, [sp, #8]
 330:	cmp	x8, #0x5
 334:	b.eq	360 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x360>  // b.none
 338:	cmp	x8, #0x1
 33c:	b.ne	434 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x434>  // b.any
 340:	ldp	x9, x8, [x22, #16]
 344:	sub	x9, x9, x8
 348:	cmp	x9, #0x10
 34c:	b.hi	398 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x398>  // b.pmore
 350:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 354:	add	x1, x1, #0x0
 358:	mov	w2, #0x11                  	// #17
 35c:	b	37c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x37c>
 360:	ldp	x9, x8, [x22, #16]
 364:	sub	x9, x9, x8
 368:	cmp	x9, #0xd
 36c:	b.hi	3bc <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x3bc>  // b.pmore
 370:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 374:	add	x1, x1, #0x0
 378:	mov	w2, #0xe                   	// #14
 37c:	mov	x0, x22
 380:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 384:	mov	x22, x0
 388:	ldr	x24, [sp, #32]
 38c:	cbnz	x24, 3e8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x3e8>
 390:	mov	x25, xzr
 394:	b	3f4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x3f4>
 398:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 39c:	add	x9, x9, #0x0
 3a0:	ldr	q0, [x9]
 3a4:	mov	w9, #0x20                  	// #32
 3a8:	strb	w9, [x8, #16]
 3ac:	str	q0, [x8]
 3b0:	ldr	x8, [x22, #24]
 3b4:	add	x8, x8, #0x11
 3b8:	b	3dc <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x3dc>
 3bc:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 3c0:	add	x9, x9, #0x0
 3c4:	ldur	x10, [x9, #6]
 3c8:	ldr	x9, [x9]
 3cc:	stur	x10, [x8, #6]
 3d0:	str	x9, [x8]
 3d4:	ldr	x8, [x22, #24]
 3d8:	add	x8, x8, #0xe
 3dc:	str	x8, [x22, #24]
 3e0:	ldr	x24, [sp, #32]
 3e4:	cbz	x24, 390 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x390>
 3e8:	mov	x0, x24
 3ec:	bl	0 <strlen>
 3f0:	mov	x25, x0
 3f4:	ldp	x8, x0, [x22, #16]
 3f8:	sub	x8, x8, x0
 3fc:	cmp	x25, x8
 400:	b.ls	418 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x418>  // b.plast
 404:	mov	x0, x22
 408:	mov	x1, x24
 40c:	mov	x2, x25
 410:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 414:	b	434 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x434>
 418:	cbz	x25, 434 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x434>
 41c:	mov	x1, x24
 420:	mov	x2, x25
 424:	bl	0 <memcpy>
 428:	ldr	x8, [x22, #24]
 42c:	add	x8, x8, x25
 430:	str	x8, [x22, #24]
 434:	cbnz	x23, 74 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x74>
 438:	tbnz	w21, #0, 74 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x74>
 43c:	mov	w0, wzr
 440:	ldp	x20, x19, [sp, #176]
 444:	ldp	x22, x21, [sp, #160]
 448:	ldp	x24, x23, [sp, #144]
 44c:	ldr	x25, [sp, #128]
 450:	ldp	x29, x30, [sp, #112]
 454:	add	sp, sp, #0xc0
 458:	ret
 45c:	add	x0, x19, #0x10
 460:	add	x1, x0, #0x10
 464:	mov	w3, #0x10                  	// #16
 468:	mov	x2, xzr
 46c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 470:	ldr	w8, [x19, #24]
 474:	b	2bc <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2bc>
 478:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 47c:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 480:	adrp	x3, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 484:	add	x0, x0, #0x0
 488:	add	x1, x1, #0x0
 48c:	add	x3, x3, #0x0
 490:	mov	w2, #0x43                  	// #67
 494:	bl	0 <__assert_fail>

0000000000000498 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>:
 498:	sub	sp, sp, #0x40
 49c:	stp	x29, x30, [sp, #16]
 4a0:	str	x21, [sp, #32]
 4a4:	stp	x20, x19, [sp, #48]
 4a8:	add	x29, sp, #0x10
 4ac:	ldr	x9, [x0, #32]
 4b0:	cbz	x9, 844 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3ac>
 4b4:	mov	w10, #0x2                   	// #2
 4b8:	str	x10, [x29, #24]
 4bc:	ldr	x0, [x0, #40]
 4c0:	mov	x8, x2
 4c4:	mov	x19, x1
 4c8:	add	x2, x29, #0x18
 4cc:	add	x4, sp, #0x8
 4d0:	mov	x1, x8
 4d4:	blr	x9
 4d8:	ldr	x8, [x29, #24]
 4dc:	sub	x8, x8, #0x2
 4e0:	cmp	x8, #0x6
 4e4:	b.hi	844 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3ac>  // b.pmore
 4e8:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 4ec:	add	x9, x9, #0x0
 4f0:	adr	x10, 500 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x68>
 4f4:	ldrb	w11, [x9, x8]
 4f8:	add	x10, x10, x11, lsl #2
 4fc:	br	x10
 500:	ldp	x9, x8, [x19, #16]
 504:	sub	x9, x9, x8
 508:	cmp	x9, #0x1c
 50c:	b.hi	634 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x19c>  // b.pmore
 510:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 514:	add	x1, x1, #0x0
 518:	mov	w2, #0x1d                  	// #29
 51c:	b	618 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x180>
 520:	ldp	x9, x8, [x19, #16]
 524:	sub	x9, x9, x8
 528:	cmp	x9, #0x12
 52c:	b.hi	658 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1c0>  // b.pmore
 530:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 534:	add	x1, x1, #0x0
 538:	mov	w2, #0x13                  	// #19
 53c:	mov	x0, x19
 540:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 544:	ldr	x20, [sp, #8]
 548:	cbz	x20, 688 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1f0>
 54c:	mov	x0, x20
 550:	bl	0 <strlen>
 554:	mov	x2, x0
 558:	b	68c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1f4>
 55c:	ldp	x9, x8, [x19, #16]
 560:	sub	x9, x9, x8
 564:	cmp	x9, #0x14
 568:	b.hi	6b4 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x21c>  // b.pmore
 56c:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 570:	add	x1, x1, #0x0
 574:	mov	w2, #0x15                  	// #21
 578:	mov	x0, x19
 57c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 580:	mov	x19, x0
 584:	ldr	x20, [sp, #8]
 588:	cbz	x20, 6e0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x248>
 58c:	mov	x0, x20
 590:	bl	0 <strlen>
 594:	mov	x21, x0
 598:	b	6e4 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x24c>
 59c:	ldp	x9, x8, [x19, #16]
 5a0:	sub	x9, x9, x8
 5a4:	cmp	x9, #0xd
 5a8:	b.hi	710 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x278>  // b.pmore
 5ac:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 5b0:	add	x1, x1, #0x0
 5b4:	mov	w2, #0xe                   	// #14
 5b8:	b	618 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x180>
 5bc:	ldp	x9, x8, [x19, #16]
 5c0:	sub	x9, x9, x8
 5c4:	cmp	x9, #0x11
 5c8:	b.hi	734 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x29c>  // b.pmore
 5cc:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 5d0:	add	x1, x1, #0x0
 5d4:	mov	w2, #0x12                  	// #18
 5d8:	b	618 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x180>
 5dc:	ldp	x9, x8, [x19, #16]
 5e0:	sub	x9, x9, x8
 5e4:	cmp	x9, #0x12
 5e8:	b.hi	758 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x2c0>  // b.pmore
 5ec:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 5f0:	add	x1, x1, #0x0
 5f4:	mov	w2, #0x13                  	// #19
 5f8:	b	618 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x180>
 5fc:	ldp	x9, x8, [x19, #16]
 600:	sub	x9, x9, x8
 604:	cmp	x9, #0xf
 608:	b.hi	780 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x2e8>  // b.pmore
 60c:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 610:	add	x1, x1, #0x0
 614:	mov	w2, #0x10                  	// #16
 618:	mov	x0, x19
 61c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 620:	mov	x19, x0
 624:	ldr	x20, [sp, #8]
 628:	cbnz	x20, 7a4 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x30c>
 62c:	mov	x21, xzr
 630:	b	7b0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x318>
 634:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 638:	add	x9, x9, #0x0
 63c:	ldur	q0, [x9, #13]
 640:	ldr	q1, [x9]
 644:	stur	q0, [x8, #13]
 648:	str	q1, [x8]
 64c:	ldr	x8, [x19, #24]
 650:	add	x8, x8, #0x1d
 654:	b	798 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x300>
 658:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 65c:	add	x9, x9, #0x0
 660:	ldr	q0, [x9]
 664:	mov	w9, #0x3a72                	// #14962
 668:	movk	w9, #0x2220, lsl #16
 66c:	stur	w9, [x8, #15]
 670:	str	q0, [x8]
 674:	ldr	x8, [x19, #24]
 678:	add	x8, x8, #0x13
 67c:	str	x8, [x19, #24]
 680:	ldr	x20, [sp, #8]
 684:	cbnz	x20, 54c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0xb4>
 688:	mov	x2, xzr
 68c:	mov	x0, x19
 690:	mov	x1, x20
 694:	mov	w3, wzr
 698:	bl	0 <_ZN4llvm11raw_ostream13write_escapedENS_9StringRefEb>
 69c:	ldp	x9, x8, [x19, #16]
 6a0:	cmp	x9, x8
 6a4:	b.eq	818 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x380>  // b.none
 6a8:	mov	w9, #0x22                  	// #34
 6ac:	strb	w9, [x8]
 6b0:	b	838 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3a0>
 6b4:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 6b8:	add	x9, x9, #0x0
 6bc:	ldur	x10, [x9, #13]
 6c0:	ldr	q0, [x9]
 6c4:	stur	x10, [x8, #13]
 6c8:	str	q0, [x8]
 6cc:	ldr	x8, [x19, #24]
 6d0:	add	x8, x8, #0x15
 6d4:	str	x8, [x19, #24]
 6d8:	ldr	x20, [sp, #8]
 6dc:	cbnz	x20, 58c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0xf4>
 6e0:	mov	x21, xzr
 6e4:	ldp	x8, x0, [x19, #16]
 6e8:	sub	x8, x8, x0
 6ec:	cmp	x21, x8
 6f0:	b.ls	7f0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x358>  // b.plast
 6f4:	mov	x0, x19
 6f8:	mov	x1, x20
 6fc:	mov	x2, x21
 700:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 704:	mov	x19, x0
 708:	ldr	x0, [x0, #24]
 70c:	b	80c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x374>
 710:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 714:	add	x9, x9, #0x0
 718:	ldur	x10, [x9, #6]
 71c:	ldr	x9, [x9]
 720:	stur	x10, [x8, #6]
 724:	str	x9, [x8]
 728:	ldr	x8, [x19, #24]
 72c:	add	x8, x8, #0xe
 730:	b	798 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x300>
 734:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 738:	add	x9, x9, #0x0
 73c:	ldr	q0, [x9]
 740:	mov	w9, #0x203a                	// #8250
 744:	strh	w9, [x8, #16]
 748:	str	q0, [x8]
 74c:	ldr	x8, [x19, #24]
 750:	add	x8, x8, #0x12
 754:	b	798 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x300>
 758:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 75c:	add	x9, x9, #0x0
 760:	ldr	q0, [x9]
 764:	mov	w9, #0x6665                	// #26213
 768:	movk	w9, #0x203a, lsl #16
 76c:	stur	w9, [x8, #15]
 770:	str	q0, [x8]
 774:	ldr	x8, [x19, #24]
 778:	add	x8, x8, #0x13
 77c:	b	798 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x300>
 780:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 784:	add	x9, x9, #0x0
 788:	ldr	q0, [x9]
 78c:	str	q0, [x8]
 790:	ldr	x8, [x19, #24]
 794:	add	x8, x8, #0x10
 798:	str	x8, [x19, #24]
 79c:	ldr	x20, [sp, #8]
 7a0:	cbz	x20, 62c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x194>
 7a4:	mov	x0, x20
 7a8:	bl	0 <strlen>
 7ac:	mov	x21, x0
 7b0:	ldp	x8, x0, [x19, #16]
 7b4:	sub	x8, x8, x0
 7b8:	cmp	x21, x8
 7bc:	b.ls	7d4 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x33c>  // b.plast
 7c0:	mov	x0, x19
 7c4:	mov	x1, x20
 7c8:	mov	x2, x21
 7cc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 7d0:	b	844 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3ac>
 7d4:	cbz	x21, 844 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3ac>
 7d8:	mov	x1, x20
 7dc:	mov	x2, x21
 7e0:	bl	0 <memcpy>
 7e4:	ldr	x8, [x19, #24]
 7e8:	add	x8, x8, x21
 7ec:	b	840 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3a8>
 7f0:	cbz	x21, 80c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x374>
 7f4:	mov	x1, x20
 7f8:	mov	x2, x21
 7fc:	bl	0 <memcpy>
 800:	ldr	x8, [x19, #24]
 804:	add	x0, x8, x21
 808:	str	x0, [x19, #24]
 80c:	ldr	x8, [x19, #16]
 810:	cmp	x8, x0
 814:	b.ne	830 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x398>  // b.any
 818:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 81c:	add	x1, x1, #0x0
 820:	mov	w2, #0x1                   	// #1
 824:	mov	x0, x19
 828:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 82c:	b	844 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3ac>
 830:	mov	w8, #0x22                  	// #34
 834:	strb	w8, [x0]
 838:	ldr	x8, [x19, #24]
 83c:	add	x8, x8, #0x1
 840:	str	x8, [x19, #24]
 844:	ldp	x20, x19, [sp, #48]
 848:	ldr	x21, [sp, #32]
 84c:	ldp	x29, x30, [sp, #16]
 850:	add	sp, sp, #0x40
 854:	ret

0000000000000858 <_ZN4llvm18createMCSymbolizerERKNS_6TripleEPFiPvmmmiS3_EPFPKcS3_mPmmPS7_ES3_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISF_EE>:
 858:	stp	x29, x30, [sp, #-64]!
 85c:	str	x23, [sp, #16]
 860:	stp	x22, x21, [sp, #32]
 864:	stp	x20, x19, [sp, #48]
 868:	mov	x29, sp
 86c:	cbz	x4, 8c0 <_ZN4llvm18createMCSymbolizerERKNS_6TripleEPFiPvmmmiS3_EPFPKcS3_mPmmPS7_ES3_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISF_EE+0x68>
 870:	mov	w0, #0x30                  	// #48
 874:	mov	x23, x5
 878:	mov	x21, x4
 87c:	mov	x19, x3
 880:	mov	x20, x2
 884:	mov	x22, x1
 888:	bl	0 <_Znwm>
 88c:	ldr	x8, [x23]
 890:	str	xzr, [x23]
 894:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 898:	ldr	x9, [x9]
 89c:	stp	x8, x22, [x0, #16]
 8a0:	stp	x20, x19, [x0, #32]
 8a4:	ldp	x20, x19, [sp, #48]
 8a8:	add	x9, x9, #0x10
 8ac:	stp	x9, x21, [x0]
 8b0:	ldp	x22, x21, [sp, #32]
 8b4:	ldr	x23, [sp, #16]
 8b8:	ldp	x29, x30, [sp], #64
 8bc:	ret
 8c0:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 8c4:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 8c8:	adrp	x3, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 8cc:	add	x0, x0, #0x0
 8d0:	add	x1, x1, #0x0
 8d4:	add	x3, x3, #0x0
 8d8:	mov	w2, #0xc2                  	// #194
 8dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm20MCExternalSymbolizerD0Ev:

0000000000000000 <_ZN4llvm20MCExternalSymbolizerD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm12MCSymbolizerD2Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

MCRelocationInfo.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm16MCRelocationInfoC1ERNS_9MCContextE>:
   0:	adrp	x8, 0 <_ZN4llvm16MCRelocationInfoC1ERNS_9MCContextE>
   4:	ldr	x8, [x8]
   8:	add	x8, x8, #0x10
   c:	stp	x8, x1, [x0]
  10:	ret

0000000000000014 <_ZN4llvm16MCRelocationInfoD1Ev>:
  14:	ret

0000000000000018 <_ZN4llvm16MCRelocationInfoD0Ev>:
  18:	b	0 <_ZdlPv>

000000000000001c <_ZN4llvm16MCRelocationInfo28createExprForCAPIVariantKindEPKNS_6MCExprEj>:
  1c:	cmp	w2, #0x0
  20:	csel	x0, x1, xzr, eq  // eq = none
  24:	ret

0000000000000028 <_ZN4llvm22createMCRelocationInfoERKNS_6TripleERNS_9MCContextE>:
  28:	stp	x29, x30, [sp, #-32]!
  2c:	str	x19, [sp, #16]
  30:	mov	x29, sp
  34:	mov	w0, #0x10                  	// #16
  38:	mov	x19, x1
  3c:	bl	0 <_Znwm>
  40:	adrp	x8, 0 <_ZN4llvm16MCRelocationInfoC1ERNS_9MCContextE>
  44:	ldr	x8, [x8]
  48:	add	x8, x8, #0x10
  4c:	stp	x8, x19, [x0]
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret

MCSymbolizer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm12MCSymbolizerD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm12MCSymbolizerD1Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #16]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 34 <_ZN4llvm12MCSymbolizerD1Ev+0x34>
  28:	ldr	x8, [x0]
  2c:	ldr	x8, [x8, #8]
  30:	blr	x8
  34:	str	xzr, [x19, #16]
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

0000000000000044 <_ZN4llvm12MCSymbolizerD0Ev>:
  44:	brk	#0x1
