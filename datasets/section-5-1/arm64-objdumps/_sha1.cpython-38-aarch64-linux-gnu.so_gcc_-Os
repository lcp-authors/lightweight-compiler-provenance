
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_sha1.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000cc8 <.init>:
 cc8:	stp	x29, x30, [sp, #-16]!
 ccc:	mov	x29, sp
 cd0:	bl	e20 <_Py_strhex@plt+0x10>
 cd4:	ldp	x29, x30, [sp], #16
 cd8:	ret

Disassembly of section .plt:

0000000000000ce0 <memcpy@plt-0x20>:
 ce0:	stp	x16, x30, [sp, #-16]!
 ce4:	adrp	x16, 12000 <PyInit__sha1@@Base+0x10794>
 ce8:	ldr	x17, [x16, #4088]
 cec:	add	x16, x16, #0xff8
 cf0:	br	x17
 cf4:	nop
 cf8:	nop
 cfc:	nop

0000000000000d00 <memcpy@plt>:
 d00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d04:	ldr	x17, [x16]
 d08:	add	x16, x16, #0x0
 d0c:	br	x17

0000000000000d10 <PyBuffer_Release@plt>:
 d10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d14:	ldr	x17, [x16, #8]
 d18:	add	x16, x16, #0x8
 d1c:	br	x17

0000000000000d20 <__cxa_finalize@plt>:
 d20:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d24:	ldr	x17, [x16, #16]
 d28:	add	x16, x16, #0x10
 d2c:	br	x17

0000000000000d30 <PyBytes_FromStringAndSize@plt>:
 d30:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d34:	ldr	x17, [x16, #24]
 d38:	add	x16, x16, #0x18
 d3c:	br	x17

0000000000000d40 <_Py_Dealloc@plt>:
 d40:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d44:	ldr	x17, [x16, #32]
 d48:	add	x16, x16, #0x20
 d4c:	br	x17

0000000000000d50 <_PyArg_UnpackKeywords@plt>:
 d50:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d54:	ldr	x17, [x16, #40]
 d58:	add	x16, x16, #0x28
 d5c:	br	x17

0000000000000d60 <PyErr_SetString@plt>:
 d60:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d64:	ldr	x17, [x16, #48]
 d68:	add	x16, x16, #0x30
 d6c:	br	x17

0000000000000d70 <PyObject_Free@plt>:
 d70:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d74:	ldr	x17, [x16, #56]
 d78:	add	x16, x16, #0x38
 d7c:	br	x17

0000000000000d80 <PyType_Ready@plt>:
 d80:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d84:	ldr	x17, [x16, #64]
 d88:	add	x16, x16, #0x40
 d8c:	br	x17

0000000000000d90 <PyLong_FromLong@plt>:
 d90:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d94:	ldr	x17, [x16, #72]
 d98:	add	x16, x16, #0x48
 d9c:	br	x17

0000000000000da0 <__gmon_start__@plt>:
 da0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 da4:	ldr	x17, [x16, #80]
 da8:	add	x16, x16, #0x50
 dac:	br	x17

0000000000000db0 <PyErr_Occurred@plt>:
 db0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 db4:	ldr	x17, [x16, #88]
 db8:	add	x16, x16, #0x58
 dbc:	br	x17

0000000000000dc0 <PyModule_Create2@plt>:
 dc0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dc4:	ldr	x17, [x16, #96]
 dc8:	add	x16, x16, #0x60
 dcc:	br	x17

0000000000000dd0 <PyObject_GetBuffer@plt>:
 dd0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dd4:	ldr	x17, [x16, #104]
 dd8:	add	x16, x16, #0x68
 ddc:	br	x17

0000000000000de0 <_PyObject_New@plt>:
 de0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 de4:	ldr	x17, [x16, #112]
 de8:	add	x16, x16, #0x70
 dec:	br	x17

0000000000000df0 <PyModule_AddObject@plt>:
 df0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 df4:	ldr	x17, [x16, #120]
 df8:	add	x16, x16, #0x78
 dfc:	br	x17

0000000000000e00 <PyUnicode_FromStringAndSize@plt>:
 e00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e04:	ldr	x17, [x16, #128]
 e08:	add	x16, x16, #0x80
 e0c:	br	x17

0000000000000e10 <_Py_strhex@plt>:
 e10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e14:	ldr	x17, [x16, #136]
 e18:	add	x16, x16, #0x88
 e1c:	br	x17

Disassembly of section .text:

0000000000000e20 <PyInit__sha1@@Base-0xa4c>:
     e20:	adrp	x0, 12000 <PyInit__sha1@@Base+0x10794>
     e24:	ldr	x0, [x0, #4040]
     e28:	cbz	x0, e30 <_Py_strhex@plt+0x20>
     e2c:	b	da0 <__gmon_start__@plt>
     e30:	ret
     e34:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11794>
     e38:	add	x0, x0, #0x460
     e3c:	adrp	x1, 13000 <PyInit__sha1@@Base+0x11794>
     e40:	add	x1, x1, #0x460
     e44:	cmp	x1, x0
     e48:	b.eq	e60 <_Py_strhex@plt+0x50>  // b.none
     e4c:	adrp	x1, 12000 <PyInit__sha1@@Base+0x10794>
     e50:	ldr	x1, [x1, #4008]
     e54:	cbz	x1, e60 <_Py_strhex@plt+0x50>
     e58:	mov	x16, x1
     e5c:	br	x16
     e60:	ret
     e64:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11794>
     e68:	add	x0, x0, #0x460
     e6c:	adrp	x1, 13000 <PyInit__sha1@@Base+0x11794>
     e70:	add	x1, x1, #0x460
     e74:	sub	x1, x1, x0
     e78:	mov	x2, #0x2                   	// #2
     e7c:	asr	x1, x1, #3
     e80:	sdiv	x1, x1, x2
     e84:	cbz	x1, e9c <_Py_strhex@plt+0x8c>
     e88:	adrp	x2, 12000 <PyInit__sha1@@Base+0x10794>
     e8c:	ldr	x2, [x2, #4064]
     e90:	cbz	x2, e9c <_Py_strhex@plt+0x8c>
     e94:	mov	x16, x2
     e98:	br	x16
     e9c:	ret
     ea0:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11794>
     ea4:	ldrb	w1, [x0, #1120]
     ea8:	cbnz	w1, eec <_Py_strhex@plt+0xdc>
     eac:	stp	x29, x30, [sp, #-32]!
     eb0:	mov	x29, sp
     eb4:	str	x19, [sp, #16]
     eb8:	mov	x19, x0
     ebc:	adrp	x0, 12000 <PyInit__sha1@@Base+0x10794>
     ec0:	ldr	x0, [x0, #4016]
     ec4:	cbz	x0, ed4 <_Py_strhex@plt+0xc4>
     ec8:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11794>
     ecc:	ldr	x0, [x0, #144]
     ed0:	bl	d20 <__cxa_finalize@plt>
     ed4:	bl	e34 <_Py_strhex@plt+0x24>
     ed8:	mov	w0, #0x1                   	// #1
     edc:	strb	w0, [x19, #1120]
     ee0:	ldr	x19, [sp, #16]
     ee4:	ldp	x29, x30, [sp], #32
     ee8:	ret
     eec:	ret
     ef0:	b	e64 <_Py_strhex@plt+0x54>
     ef4:	sub	sp, sp, #0x140
     ef8:	mov	x3, #0x0                   	// #0
     efc:	mov	x14, sp
     f00:	ldrb	w4, [x1, #1]
     f04:	add	x1, x1, #0x4
     f08:	ldurb	w2, [x1, #-4]
     f0c:	ldurb	w5, [x1, #-1]
     f10:	lsl	w4, w4, #16
     f14:	orr	w2, w4, w2, lsl #24
     f18:	ldurb	w4, [x1, #-2]
     f1c:	orr	w4, w5, w4, lsl #8
     f20:	orr	w2, w2, w4
     f24:	str	w2, [x3, x14]
     f28:	add	x3, x3, #0x4
     f2c:	cmp	x3, #0x40
     f30:	b.ne	f00 <_Py_strhex@plt+0xf0>  // b.any
     f34:	ldp	w13, w12, [x0, #8]
     f38:	mov	x8, x14
     f3c:	ldp	w11, w10, [x0, #16]
     f40:	mov	x1, x14
     f44:	ldr	w9, [x0, #24]
     f48:	mov	w3, #0x10                  	// #16
     f4c:	ldr	w4, [x1]
     f50:	add	w3, w3, #0x1
     f54:	ldr	w2, [x1, #8]
     f58:	cmp	w3, #0x50
     f5c:	ldr	w5, [x1, #32]
     f60:	add	x1, x1, #0x4
     f64:	eor	w2, w2, w4
     f68:	ldr	w4, [x1, #48]
     f6c:	eor	w4, w4, w5
     f70:	eor	w2, w2, w4
     f74:	ror	w2, w2, #31
     f78:	str	w2, [x1, #60]
     f7c:	b.ne	f4c <_Py_strhex@plt+0x13c>  // b.any
     f80:	mov	w16, #0x7999                	// #31129
     f84:	mov	x15, x14
     f88:	mov	w7, w9
     f8c:	mov	w4, w10
     f90:	mov	w3, w11
     f94:	mov	w1, w12
     f98:	mov	w2, w13
     f9c:	mov	w6, #0x0                   	// #0
     fa0:	movk	w16, #0x5a82, lsl #16
     fa4:	ldp	w17, w18, [x15]
     fa8:	eor	w5, w3, w4
     fac:	and	w5, w5, w1
     fb0:	add	w6, w6, #0x5
     fb4:	eor	w5, w5, w4
     fb8:	add	w4, w4, w16
     fbc:	add	w5, w5, w17
     fc0:	ror	w17, w2, #27
     fc4:	add	w17, w17, w16
     fc8:	cmp	w6, #0x14
     fcc:	add	w5, w5, w17
     fd0:	ror	w17, w1, #2
     fd4:	add	w5, w5, w7
     fd8:	eor	w7, w3, w1, ror #2
     fdc:	and	w7, w7, w2
     fe0:	ror	w2, w2, #2
     fe4:	eor	w7, w7, w3
     fe8:	add	w3, w3, w16
     fec:	add	w7, w7, w18
     ff0:	add	w17, w17, w16
     ff4:	add	w4, w7, w4
     ff8:	ror	w7, w5, #27
     ffc:	add	w4, w7, w4
    1000:	eor	w7, w2, w1, ror #2
    1004:	and	w7, w7, w5
    1008:	eor	w7, w7, w1, ror #2
    100c:	ldp	w1, w18, [x15, #8]
    1010:	add	x15, x15, #0x14
    1014:	add	w7, w7, w1
    1018:	ror	w1, w4, #27
    101c:	add	w3, w7, w3
    1020:	ror	w7, w5, #2
    1024:	add	w3, w1, w3
    1028:	eor	w1, w2, w5, ror #2
    102c:	and	w1, w1, w4
    1030:	ror	w4, w4, #2
    1034:	eor	w1, w1, w2
    1038:	add	w2, w2, w16
    103c:	add	w1, w1, w18
    1040:	add	w1, w1, w17
    1044:	ror	w17, w3, #27
    1048:	add	w1, w17, w1
    104c:	eor	w17, w4, w5, ror #2
    1050:	and	w17, w17, w3
    1054:	ror	w3, w3, #2
    1058:	eor	w5, w17, w5, ror #2
    105c:	ldur	w17, [x15, #-4]
    1060:	add	w5, w5, w17
    1064:	add	w5, w5, w2
    1068:	ror	w2, w1, #27
    106c:	add	w2, w2, w5
    1070:	b.ne	fa4 <_Py_strhex@plt+0x194>  // b.any
    1074:	mov	w16, #0xeba1                	// #60321
    1078:	mov	x15, x14
    107c:	movk	w16, #0x6ed9, lsl #16
    1080:	ldp	w17, w18, [x15, #80]
    1084:	eor	w5, w1, w3
    1088:	eor	w5, w5, w4
    108c:	add	w4, w4, w16
    1090:	add	w5, w5, w17
    1094:	ror	w17, w2, #27
    1098:	add	w17, w17, w16
    109c:	add	w6, w6, #0x5
    10a0:	add	w5, w5, w17
    10a4:	ror	w17, w1, #2
    10a8:	add	w5, w5, w7
    10ac:	eor	w7, w2, w3
    10b0:	eor	w7, w7, w1, ror #2
    10b4:	ror	w2, w2, #2
    10b8:	add	w7, w7, w18
    10bc:	add	w3, w3, w16
    10c0:	add	w4, w7, w4
    10c4:	ror	w7, w5, #27
    10c8:	add	w4, w7, w4
    10cc:	eor	w7, w2, w1, ror #2
    10d0:	ldp	w1, w18, [x15, #88]
    10d4:	eor	w7, w7, w5
    10d8:	add	w17, w17, w16
    10dc:	cmp	w6, #0x28
    10e0:	add	w7, w7, w1
    10e4:	ror	w1, w4, #27
    10e8:	add	w3, w7, w3
    10ec:	ror	w7, w5, #2
    10f0:	add	w3, w1, w3
    10f4:	eor	w1, w2, w5, ror #2
    10f8:	eor	w1, w1, w4
    10fc:	ror	w4, w4, #2
    1100:	add	w1, w1, w18
    1104:	eor	w5, w4, w5, ror #2
    1108:	add	w1, w1, w17
    110c:	ror	w17, w3, #27
    1110:	add	w1, w17, w1
    1114:	ldr	w17, [x15, #96]
    1118:	eor	w5, w5, w3
    111c:	add	w2, w2, w16
    1120:	add	w5, w5, w17
    1124:	ror	w3, w3, #2
    1128:	add	w5, w5, w2
    112c:	ror	w2, w1, #27
    1130:	add	w2, w2, w5
    1134:	add	x15, x15, #0x14
    1138:	b.ne	1080 <_Py_strhex@plt+0x270>  // b.any
    113c:	mov	w15, #0xbcdc                	// #48348
    1140:	movk	w15, #0x8f1b, lsl #16
    1144:	orr	w5, w1, w3
    1148:	and	w16, w1, w3
    114c:	and	w5, w5, w4
    1150:	orr	w17, w2, w1, ror #2
    1154:	orr	w5, w5, w16
    1158:	ldr	w16, [x14, #160]
    115c:	and	w17, w17, w3
    1160:	add	w4, w4, w15
    1164:	add	w5, w5, w16
    1168:	ror	w16, w2, #27
    116c:	add	w16, w16, w15
    1170:	ror	w18, w1, #2
    1174:	add	w5, w5, w16
    1178:	add	w3, w3, w15
    117c:	add	w5, w5, w7
    1180:	and	w7, w2, w1, ror #2
    1184:	orr	w17, w17, w7
    1188:	ldr	w7, [x14, #164]
    118c:	add	w18, w18, w15
    1190:	ror	w16, w2, #2
    1194:	add	w17, w17, w7
    1198:	orr	w7, w5, w2, ror #2
    119c:	add	w4, w17, w4
    11a0:	ror	w17, w5, #27
    11a4:	add	w17, w17, w4
    11a8:	and	w7, w7, w1, ror #2
    11ac:	and	w1, w5, w2, ror #2
    11b0:	add	w6, w6, #0x5
    11b4:	orr	w7, w7, w1
    11b8:	ror	w1, w17, #27
    11bc:	add	w7, w7, w1
    11c0:	ldr	w1, [x14, #168]
    11c4:	add	w3, w7, w3
    11c8:	ror	w7, w5, #2
    11cc:	add	w3, w3, w1
    11d0:	orr	w1, w17, w5, ror #2
    11d4:	and	w1, w1, w2, ror #2
    11d8:	and	w2, w17, w5, ror #2
    11dc:	orr	w1, w1, w2
    11e0:	ldr	w2, [x14, #172]
    11e4:	cmp	w6, #0x3c
    11e8:	ror	w4, w17, #2
    11ec:	add	w1, w1, w2
    11f0:	ror	w2, w3, #27
    11f4:	add	w1, w1, w18
    11f8:	add	x14, x14, #0x14
    11fc:	add	w1, w2, w1
    1200:	orr	w2, w3, w17, ror #2
    1204:	and	w5, w2, w5, ror #2
    1208:	and	w2, w3, w17, ror #2
    120c:	orr	w5, w5, w2
    1210:	ror	w2, w1, #27
    1214:	add	w2, w5, w2
    1218:	add	w5, w16, w15
    121c:	add	w5, w2, w5
    1220:	ldr	w2, [x14, #156]
    1224:	ror	w3, w3, #2
    1228:	add	w2, w5, w2
    122c:	b.ne	1144 <_Py_strhex@plt+0x334>  // b.any
    1230:	mov	w14, #0xc1d6                	// #49622
    1234:	movk	w14, #0xca62, lsl #16
    1238:	ldp	w15, w16, [x8, #240]
    123c:	eor	w5, w1, w3
    1240:	eor	w5, w5, w4
    1244:	add	w4, w4, w14
    1248:	add	w5, w5, w15
    124c:	ror	w15, w2, #27
    1250:	add	w15, w15, w14
    1254:	add	w6, w6, #0x5
    1258:	add	w5, w5, w15
    125c:	ror	w15, w1, #2
    1260:	add	w5, w5, w7
    1264:	eor	w7, w2, w3
    1268:	eor	w7, w7, w1, ror #2
    126c:	ror	w2, w2, #2
    1270:	add	w7, w7, w16
    1274:	add	w3, w3, w14
    1278:	add	w4, w7, w4
    127c:	ror	w7, w5, #27
    1280:	add	w4, w7, w4
    1284:	eor	w7, w2, w1, ror #2
    1288:	ldp	w1, w16, [x8, #248]
    128c:	eor	w7, w7, w5
    1290:	add	w15, w15, w14
    1294:	cmp	w6, #0x50
    1298:	add	w7, w7, w1
    129c:	ror	w1, w4, #27
    12a0:	add	w3, w7, w3
    12a4:	ror	w7, w5, #2
    12a8:	add	w3, w1, w3
    12ac:	eor	w1, w2, w5, ror #2
    12b0:	eor	w1, w1, w4
    12b4:	ror	w4, w4, #2
    12b8:	add	w1, w1, w16
    12bc:	eor	w5, w4, w5, ror #2
    12c0:	add	w1, w1, w15
    12c4:	ror	w15, w3, #27
    12c8:	add	w1, w15, w1
    12cc:	ldr	w15, [x8, #256]
    12d0:	eor	w5, w5, w3
    12d4:	add	w2, w2, w14
    12d8:	add	w5, w5, w15
    12dc:	ror	w3, w3, #2
    12e0:	add	w5, w5, w2
    12e4:	ror	w2, w1, #27
    12e8:	add	w2, w2, w5
    12ec:	add	x8, x8, #0x14
    12f0:	b.ne	1238 <_Py_strhex@plt+0x428>  // b.any
    12f4:	add	w2, w13, w2
    12f8:	add	w1, w12, w1
    12fc:	add	w3, w11, w3
    1300:	add	w4, w10, w4
    1304:	add	w7, w9, w7
    1308:	stp	w2, w1, [x0, #8]
    130c:	stp	w3, w4, [x0, #16]
    1310:	str	w7, [x0, #24]
    1314:	add	sp, sp, #0x140
    1318:	ret
    131c:	stp	x29, x30, [sp, #-32]!
    1320:	mov	x29, sp
    1324:	ldr	x2, [x0]
    1328:	str	x19, [sp, #16]
    132c:	mov	x19, x1
    1330:	ldr	w1, [x0, #28]
    1334:	lsl	w3, w1, #3
    1338:	add	x2, x2, x3
    133c:	str	x2, [x0]
    1340:	add	w2, w1, #0x1
    1344:	add	x1, x0, w1, uxtw
    1348:	str	w2, [x0, #28]
    134c:	mov	w3, #0xffffff80            	// #-128
    1350:	cmp	w2, #0x38
    1354:	strb	w3, [x1, #32]
    1358:	b.hi	13d4 <_Py_strhex@plt+0x5c4>  // b.pmore
    135c:	ldr	w1, [x0, #28]
    1360:	cmp	w1, #0x37
    1364:	b.ls	13f0 <_Py_strhex@plt+0x5e0>  // b.plast
    1368:	ldr	x1, [x0]
    136c:	rev	x1, x1
    1370:	str	x1, [x0, #88]
    1374:	add	x1, x0, #0x20
    1378:	bl	ef4 <_Py_strhex@plt+0xe4>
    137c:	add	x0, x0, #0x8
    1380:	mov	x1, x19
    1384:	add	x3, x19, #0x14
    1388:	ldrb	w2, [x0, #3]
    138c:	add	x1, x1, #0x4
    1390:	sturb	w2, [x1, #-4]
    1394:	ldrh	w2, [x0, #2]
    1398:	sturb	w2, [x1, #-3]
    139c:	ldr	w2, [x0]
    13a0:	lsr	w2, w2, #8
    13a4:	sturb	w2, [x1, #-2]
    13a8:	ldr	w2, [x0], #4
    13ac:	sturb	w2, [x1, #-1]
    13b0:	cmp	x3, x1
    13b4:	b.ne	1388 <_Py_strhex@plt+0x578>  // b.any
    13b8:	ldr	x19, [sp, #16]
    13bc:	ldp	x29, x30, [sp], #32
    13c0:	ret
    13c4:	add	w2, w1, #0x1
    13c8:	add	x1, x0, w1, uxtw
    13cc:	str	w2, [x0, #28]
    13d0:	strb	wzr, [x1, #32]
    13d4:	ldr	w1, [x0, #28]
    13d8:	cmp	w1, #0x3f
    13dc:	b.ls	13c4 <_Py_strhex@plt+0x5b4>  // b.plast
    13e0:	add	x1, x0, #0x20
    13e4:	bl	ef4 <_Py_strhex@plt+0xe4>
    13e8:	str	wzr, [x0, #28]
    13ec:	b	135c <_Py_strhex@plt+0x54c>
    13f0:	add	w2, w1, #0x1
    13f4:	add	x1, x0, w1, uxtw
    13f8:	str	w2, [x0, #28]
    13fc:	strb	wzr, [x1, #32]
    1400:	b	135c <_Py_strhex@plt+0x54c>
    1404:	stp	x29, x30, [sp, #-64]!
    1408:	mov	x29, sp
    140c:	stp	x19, x20, [sp, #16]
    1410:	mov	x19, x0
    1414:	mov	x20, x2
    1418:	stp	x21, x22, [sp, #32]
    141c:	mov	x21, x1
    1420:	stp	x23, x24, [sp, #48]
    1424:	add	x23, x0, #0x20
    1428:	mov	w24, #0x40                  	// #64
    142c:	cmp	x20, #0x0
    1430:	b.gt	1448 <_Py_strhex@plt+0x638>
    1434:	ldp	x19, x20, [sp, #16]
    1438:	ldp	x21, x22, [sp, #32]
    143c:	ldp	x23, x24, [sp, #48]
    1440:	ldp	x29, x30, [sp], #64
    1444:	ret
    1448:	ldr	w0, [x19, #28]
    144c:	cbnz	w0, 147c <_Py_strhex@plt+0x66c>
    1450:	cmp	x20, #0x3f
    1454:	b.le	147c <_Py_strhex@plt+0x66c>
    1458:	mov	x1, x21
    145c:	mov	x0, x19
    1460:	bl	ef4 <_Py_strhex@plt+0xe4>
    1464:	add	x21, x21, #0x40
    1468:	ldr	x0, [x19]
    146c:	sub	x20, x20, #0x40
    1470:	add	x0, x0, #0x200
    1474:	str	x0, [x19]
    1478:	b	142c <_Py_strhex@plt+0x61c>
    147c:	sub	w22, w24, w0
    1480:	mov	x1, x21
    1484:	cmp	x22, x20
    1488:	add	x0, x23, w0, uxtw
    148c:	csel	x22, x22, x20, le
    1490:	mov	x2, x22
    1494:	add	x21, x21, x22
    1498:	bl	d00 <memcpy@plt>
    149c:	sub	x20, x20, x22
    14a0:	ldr	w0, [x19, #28]
    14a4:	add	w0, w0, w22
    14a8:	str	w0, [x19, #28]
    14ac:	cmp	w0, #0x40
    14b0:	b.ne	142c <_Py_strhex@plt+0x61c>  // b.any
    14b4:	mov	x0, x19
    14b8:	mov	x1, x23
    14bc:	bl	ef4 <_Py_strhex@plt+0xe4>
    14c0:	str	wzr, [x19, #28]
    14c4:	ldr	x0, [x19]
    14c8:	add	x0, x0, #0x200
    14cc:	str	x0, [x19]
    14d0:	b	142c <_Py_strhex@plt+0x61c>
    14d4:	stp	x29, x30, [sp, #-112]!
    14d8:	mov	x29, sp
    14dc:	stp	x19, x20, [sp, #16]
    14e0:	mov	x20, x0
    14e4:	mov	x0, x1
    14e8:	ldr	x1, [x1, #8]
    14ec:	ldr	x2, [x1, #168]
    14f0:	tbz	w2, #28, 1514 <_Py_strhex@plt+0x704>
    14f4:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    14f8:	add	x1, x1, #0x8fc
    14fc:	adrp	x0, 12000 <PyInit__sha1@@Base+0x10794>
    1500:	ldr	x0, [x0, #4032]
    1504:	ldr	x0, [x0]
    1508:	bl	d60 <PyErr_SetString@plt>
    150c:	mov	x0, #0x0                   	// #0
    1510:	b	15a4 <_Py_strhex@plt+0x794>
    1514:	ldr	x1, [x1, #160]
    1518:	cbz	x1, 1524 <_Py_strhex@plt+0x714>
    151c:	ldr	x1, [x1]
    1520:	cbnz	x1, 1530 <_Py_strhex@plt+0x720>
    1524:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    1528:	add	x1, x1, #0x92b
    152c:	b	14fc <_Py_strhex@plt+0x6ec>
    1530:	add	x19, sp, #0x20
    1534:	mov	w2, #0x0                   	// #0
    1538:	mov	x1, x19
    153c:	bl	dd0 <PyObject_GetBuffer@plt>
    1540:	cmn	w0, #0x1
    1544:	b.eq	150c <_Py_strhex@plt+0x6fc>  // b.none
    1548:	ldr	w0, [sp, #68]
    154c:	cmp	w0, #0x1
    1550:	b.le	1578 <_Py_strhex@plt+0x768>
    1554:	adrp	x0, 12000 <PyInit__sha1@@Base+0x10794>
    1558:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    155c:	add	x1, x1, #0x955
    1560:	ldr	x0, [x0, #4024]
    1564:	ldr	x0, [x0]
    1568:	bl	d60 <PyErr_SetString@plt>
    156c:	mov	x0, x19
    1570:	bl	d10 <PyBuffer_Release@plt>
    1574:	b	150c <_Py_strhex@plt+0x6fc>
    1578:	ldr	x1, [sp, #32]
    157c:	add	x0, x20, #0x10
    1580:	ldr	x2, [sp, #48]
    1584:	bl	1404 <_Py_strhex@plt+0x5f4>
    1588:	mov	x0, x19
    158c:	bl	d10 <PyBuffer_Release@plt>
    1590:	adrp	x0, 12000 <PyInit__sha1@@Base+0x10794>
    1594:	ldr	x0, [x0, #4056]
    1598:	ldr	x1, [x0]
    159c:	add	x1, x1, #0x1
    15a0:	str	x1, [x0]
    15a4:	ldp	x19, x20, [sp, #16]
    15a8:	ldp	x29, x30, [sp], #112
    15ac:	ret
    15b0:	mov	x0, #0x14                  	// #20
    15b4:	b	d90 <PyLong_FromLong@plt>
    15b8:	mov	x0, #0x40                  	// #64
    15bc:	b	d90 <PyLong_FromLong@plt>
    15c0:	mov	x1, #0x4                   	// #4
    15c4:	adrp	x0, 1000 <_Py_strhex@plt+0x1f0>
    15c8:	add	x0, x0, #0x9c3
    15cc:	b	e00 <PyUnicode_FromStringAndSize@plt>
    15d0:	stp	x29, x30, [sp, #-160]!
    15d4:	mov	x2, #0x60                  	// #96
    15d8:	add	x1, x0, #0x10
    15dc:	add	x3, sp, #0x40
    15e0:	mov	x29, sp
    15e4:	mov	x0, x3
    15e8:	str	x19, [sp, #16]
    15ec:	add	x19, sp, #0x28
    15f0:	bl	d00 <memcpy@plt>
    15f4:	mov	x1, x19
    15f8:	bl	131c <_Py_strhex@plt+0x50c>
    15fc:	mov	x0, x19
    1600:	mov	x1, #0x14                  	// #20
    1604:	bl	e10 <_Py_strhex@plt>
    1608:	ldr	x19, [sp, #16]
    160c:	ldp	x29, x30, [sp], #160
    1610:	ret
    1614:	stp	x29, x30, [sp, #-160]!
    1618:	mov	x2, #0x60                  	// #96
    161c:	add	x1, x0, #0x10
    1620:	add	x3, sp, #0x40
    1624:	mov	x29, sp
    1628:	mov	x0, x3
    162c:	str	x19, [sp, #16]
    1630:	add	x19, sp, #0x28
    1634:	bl	d00 <memcpy@plt>
    1638:	mov	x1, x19
    163c:	bl	131c <_Py_strhex@plt+0x50c>
    1640:	mov	x0, x19
    1644:	mov	x1, #0x14                  	// #20
    1648:	bl	d30 <PyBytes_FromStringAndSize@plt>
    164c:	ldr	x19, [sp, #16]
    1650:	ldp	x29, x30, [sp], #160
    1654:	ret
    1658:	b	d70 <PyObject_Free@plt>
    165c:	sub	sp, sp, #0xa0
    1660:	stp	x29, x30, [sp, #16]
    1664:	add	x29, sp, #0x10
    1668:	stp	x19, x20, [sp, #32]
    166c:	mov	x19, x1
    1670:	mov	x1, x2
    1674:	str	x21, [sp, #48]
    1678:	cbz	x3, 1710 <_Py_strhex@plt+0x900>
    167c:	ldr	x0, [x3, #16]
    1680:	add	x20, x0, x1
    1684:	cbnz	x3, 1694 <_Py_strhex@plt+0x884>
    1688:	cmp	x19, #0x0
    168c:	ccmp	x1, #0x1, #0x2, ne  // ne = any
    1690:	b.ls	16c4 <_Py_strhex@plt+0x8b4>  // b.plast
    1694:	add	x0, sp, #0x48
    1698:	str	x0, [sp]
    169c:	mov	w7, #0x0                   	// #0
    16a0:	mov	x0, x19
    16a4:	mov	w6, #0x1                   	// #1
    16a8:	mov	w5, #0x0                   	// #0
    16ac:	adrp	x4, 13000 <PyInit__sha1@@Base+0x11794>
    16b0:	mov	x2, #0x0                   	// #0
    16b4:	add	x4, x4, #0x98
    16b8:	bl	d50 <_PyArg_UnpackKeywords@plt>
    16bc:	mov	x19, x0
    16c0:	cbz	x0, 16f8 <_Py_strhex@plt+0x8e8>
    16c4:	cbz	x20, 1780 <_Py_strhex@plt+0x970>
    16c8:	ldr	x20, [x19]
    16cc:	cbz	x20, 1784 <_Py_strhex@plt+0x974>
    16d0:	ldr	x0, [x20, #8]
    16d4:	ldr	x1, [x0, #168]
    16d8:	tbz	w1, #28, 1718 <_Py_strhex@plt+0x908>
    16dc:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    16e0:	add	x1, x1, #0x8fc
    16e4:	adrp	x0, 12000 <PyInit__sha1@@Base+0x10794>
    16e8:	ldr	x0, [x0, #4032]
    16ec:	ldr	x0, [x0]
    16f0:	bl	d60 <PyErr_SetString@plt>
    16f4:	mov	x19, #0x0                   	// #0
    16f8:	mov	x0, x19
    16fc:	ldp	x29, x30, [sp, #16]
    1700:	ldp	x19, x20, [sp, #32]
    1704:	ldr	x21, [sp, #48]
    1708:	add	sp, sp, #0xa0
    170c:	ret
    1710:	mov	x0, #0x0                   	// #0
    1714:	b	1680 <_Py_strhex@plt+0x870>
    1718:	ldr	x0, [x0, #160]
    171c:	cbz	x0, 1728 <_Py_strhex@plt+0x918>
    1720:	ldr	x0, [x0]
    1724:	cbnz	x0, 1734 <_Py_strhex@plt+0x924>
    1728:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    172c:	add	x1, x1, #0x92b
    1730:	b	16e4 <_Py_strhex@plt+0x8d4>
    1734:	add	x19, sp, #0x50
    1738:	mov	x0, x20
    173c:	mov	x1, x19
    1740:	mov	w2, #0x0                   	// #0
    1744:	bl	dd0 <PyObject_GetBuffer@plt>
    1748:	cmn	w0, #0x1
    174c:	b.eq	16f4 <_Py_strhex@plt+0x8e4>  // b.none
    1750:	ldr	w0, [sp, #116]
    1754:	cmp	w0, #0x1
    1758:	b.le	1784 <_Py_strhex@plt+0x974>
    175c:	adrp	x0, 12000 <PyInit__sha1@@Base+0x10794>
    1760:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    1764:	add	x1, x1, #0x955
    1768:	ldr	x0, [x0, #4024]
    176c:	ldr	x0, [x0]
    1770:	bl	d60 <PyErr_SetString@plt>
    1774:	mov	x0, x19
    1778:	bl	d10 <PyBuffer_Release@plt>
    177c:	b	16f4 <_Py_strhex@plt+0x8e4>
    1780:	mov	x20, #0x0                   	// #0
    1784:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11794>
    1788:	add	x0, x0, #0x98
    178c:	add	x0, x0, #0x40
    1790:	bl	de0 <_PyObject_New@plt>
    1794:	mov	x19, x0
    1798:	cbnz	x0, 17a8 <_Py_strhex@plt+0x998>
    179c:	cbz	x20, 16f4 <_Py_strhex@plt+0x8e4>
    17a0:	add	x0, sp, #0x50
    17a4:	b	1778 <_Py_strhex@plt+0x968>
    17a8:	add	x21, x0, #0x10
    17ac:	mov	x0, #0x2301                	// #8961
    17b0:	movk	x0, #0x6745, lsl #16
    17b4:	movk	x0, #0xab89, lsl #32
    17b8:	movk	x0, #0xefcd, lsl #48
    17bc:	stp	xzr, x0, [x19, #16]
    17c0:	mov	x0, #0xdcfe                	// #56574
    17c4:	movk	x0, #0x98ba, lsl #16
    17c8:	movk	x0, #0x5476, lsl #32
    17cc:	movk	x0, #0x1032, lsl #48
    17d0:	str	x0, [x19, #32]
    17d4:	mov	x0, #0xe1f0                	// #57840
    17d8:	movk	x0, #0xc3d2, lsl #16
    17dc:	str	x0, [x19, #40]
    17e0:	bl	db0 <PyErr_Occurred@plt>
    17e4:	cbz	x0, 1804 <_Py_strhex@plt+0x9f4>
    17e8:	ldr	x0, [x19]
    17ec:	sub	x0, x0, #0x1
    17f0:	str	x0, [x19]
    17f4:	cbnz	x0, 179c <_Py_strhex@plt+0x98c>
    17f8:	mov	x0, x19
    17fc:	bl	d40 <_Py_Dealloc@plt>
    1800:	b	179c <_Py_strhex@plt+0x98c>
    1804:	cbz	x20, 16f8 <_Py_strhex@plt+0x8e8>
    1808:	ldr	x1, [sp, #80]
    180c:	mov	x0, x21
    1810:	ldr	x2, [sp, #96]
    1814:	bl	1404 <_Py_strhex@plt+0x5f4>
    1818:	add	x0, sp, #0x50
    181c:	bl	d10 <PyBuffer_Release@plt>
    1820:	b	16f8 <_Py_strhex@plt+0x8e8>
    1824:	stp	x29, x30, [sp, #-32]!
    1828:	mov	x29, sp
    182c:	stp	x19, x20, [sp, #16]
    1830:	mov	x20, x0
    1834:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11794>
    1838:	add	x0, x0, #0x98
    183c:	add	x0, x0, #0x40
    1840:	bl	de0 <_PyObject_New@plt>
    1844:	mov	x19, x0
    1848:	cbz	x0, 185c <_Py_strhex@plt+0xa4c>
    184c:	add	x1, x20, #0x10
    1850:	add	x0, x0, #0x10
    1854:	mov	x2, #0x60                  	// #96
    1858:	bl	d00 <memcpy@plt>
    185c:	mov	x0, x19
    1860:	ldp	x19, x20, [sp, #16]
    1864:	ldp	x29, x30, [sp], #32
    1868:	ret

000000000000186c <PyInit__sha1@@Base>:
    186c:	stp	x29, x30, [sp, #-48]!
    1870:	adrp	x0, 12000 <PyInit__sha1@@Base+0x10794>
    1874:	mov	x29, sp
    1878:	stp	x19, x20, [sp, #16]
    187c:	adrp	x19, 13000 <PyInit__sha1@@Base+0x11794>
    1880:	add	x19, x19, #0x98
    1884:	ldr	x0, [x0, #4048]
    1888:	str	x21, [sp, #32]
    188c:	add	x21, x19, #0x40
    1890:	str	x0, [x19, #72]
    1894:	mov	x0, x21
    1898:	bl	d80 <PyType_Ready@plt>
    189c:	tbnz	w0, #31, 18e4 <PyInit__sha1@@Base+0x78>
    18a0:	add	x0, x19, #0x1e0
    18a4:	mov	w1, #0x3f5                 	// #1013
    18a8:	bl	dc0 <PyModule_Create2@plt>
    18ac:	mov	x20, x0
    18b0:	cbz	x0, 18d0 <PyInit__sha1@@Base+0x64>
    18b4:	ldr	x1, [x19, #64]
    18b8:	mov	x2, x21
    18bc:	add	x1, x1, #0x1
    18c0:	str	x1, [x19, #64]
    18c4:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    18c8:	add	x1, x1, #0x975
    18cc:	bl	df0 <PyModule_AddObject@plt>
    18d0:	mov	x0, x20
    18d4:	ldp	x19, x20, [sp, #16]
    18d8:	ldr	x21, [sp, #32]
    18dc:	ldp	x29, x30, [sp], #48
    18e0:	ret
    18e4:	mov	x20, #0x0                   	// #0
    18e8:	b	18d0 <PyInit__sha1@@Base+0x64>

Disassembly of section .fini:

00000000000018ec <.fini>:
    18ec:	stp	x29, x30, [sp, #-16]!
    18f0:	mov	x29, sp
    18f4:	ldp	x29, x30, [sp], #16
    18f8:	ret
