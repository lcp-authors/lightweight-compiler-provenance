In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMMCA.a_clang_-O3:

CodeEmitter.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>:
   0:	sub	sp, sp, #0x120
   4:	stp	x29, x30, [sp, #224]
   8:	stp	x28, x23, [sp, #240]
   c:	stp	x22, x21, [sp, #256]
  10:	stp	x20, x19, [sp, #272]
  14:	add	x29, sp, #0xe0
  18:	ldr	w8, [x0, #368]
  1c:	cmp	w8, w1
  20:	b.ls	16c <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x16c>  // b.plast
  24:	ldr	x9, [x0, #360]
  28:	mov	w8, w1
  2c:	mov	x19, x0
  30:	add	x22, x9, x8, lsl #3
  34:	mov	x23, x22
  38:	ldr	w9, [x23, #4]!
  3c:	cbz	w9, 48 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x48>
  40:	ldr	x19, [x22]
  44:	b	150 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x150>
  48:	adrp	x9, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
  4c:	ldr	d0, [x9]
  50:	sub	x9, x29, #0x40
  54:	add	x9, x9, #0x10
  58:	stur	x9, [x29, #-64]
  5c:	stur	d0, [x29, #-56]
  60:	ldr	x9, [x19, #352]
  64:	cmp	x9, x8
  68:	b.ls	18c <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x18c>  // b.plast
  6c:	ldr	x9, [x19, #344]
  70:	mov	w10, #0xa0                  	// #160
  74:	adrp	x12, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
  78:	ldr	d1, [x12]
  7c:	madd	x21, x8, x10, x9
  80:	ldr	q0, [x21]
  84:	mov	x11, sp
  88:	add	x10, x11, #0x20
  8c:	str	x10, [sp, #16]
  90:	str	q0, [sp]
  94:	str	d1, [sp, #24]
  98:	ldr	w10, [x21, #24]
  9c:	add	x20, x11, #0x10
  a0:	cbz	w10, b8 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0xb8>
  a4:	mov	w10, #0xa0                  	// #160
  a8:	madd	x8, x8, x10, x9
  ac:	add	x1, x8, #0x10
  b0:	mov	x0, x20
  b4:	bl	0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
  b8:	ldp	x2, x0, [x19]
  bc:	mov	x1, x21
  c0:	ldr	x8, [x0]
  c4:	ldr	x8, [x8, #128]
  c8:	blr	x8
  cc:	tbz	w0, #0, e8 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0xe8>
  d0:	ldp	x2, x0, [x19]
  d4:	mov	x3, sp
  d8:	mov	x1, x21
  dc:	ldr	x8, [x0]
  e0:	ldr	x8, [x8, #152]
  e4:	blr	x8
  e8:	ldr	w8, [x19, #32]
  ec:	add	x2, x19, #0x128
  f0:	mov	x1, sp
  f4:	sub	x3, x29, #0x40
  f8:	str	w8, [x22]
  fc:	ldr	x0, [x19, #16]
 100:	ldr	x4, [x19]
 104:	sub	x21, x29, #0x40
 108:	ldr	x8, [x0]
 10c:	ldr	x8, [x8, #32]
 110:	blr	x8
 114:	ldr	w8, [x19, #32]
 118:	ldr	w9, [x22]
 11c:	sub	w8, w8, w9
 120:	str	w8, [x23]
 124:	ldr	x0, [sp, #16]
 128:	ldr	x19, [x22]
 12c:	add	x8, x20, #0x10
 130:	cmp	x0, x8
 134:	b.eq	13c <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x13c>  // b.none
 138:	bl	0 <free>
 13c:	ldur	x0, [x29, #-64]
 140:	add	x8, x21, #0x10
 144:	cmp	x0, x8
 148:	b.eq	150 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x150>  // b.none
 14c:	bl	0 <free>
 150:	mov	x0, x19
 154:	ldp	x20, x19, [sp, #272]
 158:	ldp	x22, x21, [sp, #256]
 15c:	ldp	x28, x23, [sp, #240]
 160:	ldp	x29, x30, [sp, #224]
 164:	add	sp, sp, #0x120
 168:	ret
 16c:	adrp	x0, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 170:	adrp	x1, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 174:	adrp	x3, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x95                  	// #149
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 190:	adrp	x1, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 194:	adrp	x3, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0xfa                  	// #250
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	cc <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xcc>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	68 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x68>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	80 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x80>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x10                  	// #16
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	mov	x22, xzr
  58:	ldr	w8, [x21, #8]
  5c:	cmp	x22, x8
  60:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xa0>  // b.any
  64:	b	bc <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xbc>
  68:	cbz	w20, bc <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xbc>
  6c:	ldr	x1, [x21]
  70:	ldr	x0, [x19]
  74:	lsl	x2, x20, #4
  78:	bl	0 <memmove>
  7c:	b	bc <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xbc>
  80:	cbz	w22, e0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xe0>
  84:	ldr	x1, [x21]
  88:	ldr	x0, [x19]
  8c:	lsl	x2, x22, #4
  90:	bl	0 <memmove>
  94:	ldr	w8, [x21, #8]
  98:	cmp	x22, x8
  9c:	b.eq	bc <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xbc>  // b.none
  a0:	ldr	x9, [x21]
  a4:	ldr	x10, [x19]
  a8:	add	x1, x9, x22, lsl #4
  ac:	add	x8, x9, x8, lsl #4
  b0:	add	x0, x10, x22, lsl #4
  b4:	sub	x2, x8, x1
  b8:	bl	0 <memcpy>
  bc:	ldr	w8, [x19, #12]
  c0:	cmp	w8, w20
  c4:	b.cc	f4 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xf4>  // b.lo, b.ul, b.last
  c8:	str	w20, [x19, #8]
  cc:	mov	x0, x19
  d0:	ldp	x20, x19, [sp, #32]
  d4:	ldp	x22, x21, [sp, #16]
  d8:	ldp	x29, x30, [sp], #48
  dc:	ret
  e0:	mov	x22, xzr
  e4:	ldr	w8, [x21, #8]
  e8:	cmp	x22, x8
  ec:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xa0>  // b.any
  f0:	b	bc <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xbc>
  f4:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  f8:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  fc:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 100:	add	x0, x0, #0x0
 104:	add	x1, x1, #0x0
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0x43                  	// #67
 110:	bl	0 <__assert_fail>

Context.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>:
   0:	sub	sp, sp, #0xa0
   4:	stp	x29, x30, [sp, #64]
   8:	stp	x28, x27, [sp, #80]
   c:	stp	x26, x25, [sp, #96]
  10:	stp	x24, x23, [sp, #112]
  14:	stp	x22, x21, [sp, #128]
  18:	stp	x20, x19, [sp, #144]
  1c:	add	x29, sp, #0x40
  20:	ldr	x9, [x0, #56]
  24:	mov	x21, x0
  28:	mov	w0, #0x38                  	// #56
  2c:	mov	x22, x2
  30:	ldr	x23, [x9, #152]
  34:	mov	x19, x1
  38:	str	x8, [sp, #8]
  3c:	bl	0 <_Znwm>
  40:	mov	x1, x23
  44:	mov	x20, x0
  48:	bl	0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  4c:	ldr	x24, [x21, #48]
  50:	mov	w0, #0x98                  	// #152
  54:	bl	0 <_Znwm>
  58:	ldr	w3, [x19, #12]
  5c:	mov	x1, x23
  60:	mov	x2, x24
  64:	mov	x28, x0
  68:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
  6c:	mov	w0, #0x50                  	// #80
  70:	bl	0 <_Znwm>
  74:	ldp	w2, w3, [x19, #16]
  78:	ldrb	w4, [x19, #24]
  7c:	mov	x1, x23
  80:	mov	x26, x0
  84:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
  88:	adrp	x8, 0 <_ZTVN4llvm3mca6LSUnitE>
  8c:	ldr	x8, [x8]
  90:	mov	w0, #0x90                  	// #144
  94:	str	xzr, [x26, #72]
  98:	str	wzr, [x26, #68]
  9c:	add	x8, x8, #0x10
  a0:	str	x8, [x26]
  a4:	bl	0 <_Znwm>
  a8:	mov	x25, x0
  ac:	mov	w0, #0x168                 	// #360
  b0:	bl	0 <_Znwm>
  b4:	mov	x1, x23
  b8:	mov	x24, x0
  bc:	bl	0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE>
  c0:	adrp	x8, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
  c4:	ldr	x8, [x8]
  c8:	movi	v0.2d, #0x0
  cc:	sub	x1, x29, #0x8
  d0:	mov	x0, x25
  d4:	add	x8, x8, #0x10
  d8:	stp	xzr, x24, [x25, #16]
  dc:	stp	q0, q0, [x25, #32]
  e0:	stp	q0, q0, [x25, #64]
  e4:	stp	q0, q0, [x25, #96]
  e8:	stur	q0, [x25, #125]
  ec:	stp	x8, x26, [x25]
  f0:	stur	xzr, [x29, #-8]
  f4:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
  f8:	ldur	x0, [x29, #-8]
  fc:	cbz	x0, 10c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x10c>
 100:	ldr	x8, [x0]
 104:	ldr	x8, [x8, #8]
 108:	blr	x8
 10c:	mov	w0, #0xf0                  	// #240
 110:	bl	0 <_Znwm>
 114:	mov	x8, x0
 118:	add	x9, x0, #0x60
 11c:	str	xzr, [x0, #8]
 120:	str	wzr, [x8, #24]!
 124:	stp	xzr, x9, [x0, #72]
 128:	adrp	x9, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 12c:	ldr	d0, [x9]
 130:	str	x22, [x0, #224]
 134:	adrp	x9, 0 <_ZTVN4llvm3mca10EntryStageE>
 138:	ldr	x9, [x9]
 13c:	str	wzr, [x0, #64]
 140:	str	wzr, [x0, #232]
 144:	stp	xzr, x8, [x0, #32]
 148:	add	x9, x9, #0x10
 14c:	stp	x8, xzr, [x0, #48]
 150:	str	x9, [x0]
 154:	str	d0, [x0, #88]
 158:	ldp	x23, x22, [x21, #48]
 15c:	mov	x27, x0
 160:	mov	w0, #0x78                  	// #120
 164:	bl	0 <_Znwm>
 168:	ldr	w3, [x19, #8]
 16c:	mov	x1, x22
 170:	mov	x2, x23
 174:	mov	x4, x20
 178:	mov	x5, x28
 17c:	mov	x24, x0
 180:	bl	0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 184:	mov	w0, #0x58                  	// #88
 188:	bl	0 <_Znwm>
 18c:	ldrb	w8, [x19, #25]
 190:	str	xzr, [x0, #8]
 194:	adrp	x10, 0 <_ZTVN4llvm3mca12ExecuteStageE>
 198:	ldr	x10, [x10]
 19c:	mov	x9, x0
 1a0:	str	wzr, [x9, #24]!
 1a4:	mov	x23, x0
 1a8:	add	x10, x10, #0x10
 1ac:	stp	xzr, x25, [x0, #56]
 1b0:	stp	xzr, x9, [x0, #32]
 1b4:	str	x9, [x0, #48]
 1b8:	str	x10, [x0]
 1bc:	str	xzr, [x0, #72]
 1c0:	strb	w8, [x0, #80]
 1c4:	mov	w0, #0x58                  	// #88
 1c8:	bl	0 <_Znwm>
 1cc:	str	xzr, [x0, #8]
 1d0:	adrp	x9, 0 <_ZTVN4llvm3mca11RetireStageE>
 1d4:	ldr	x9, [x9]
 1d8:	mov	x8, x0
 1dc:	str	wzr, [x8, #24]!
 1e0:	stp	x20, x28, [x0, #64]
 1e4:	add	x9, x9, #0x10
 1e8:	str	x26, [x0, #80]
 1ec:	stp	xzr, x8, [x0, #32]
 1f0:	stp	x8, xzr, [x0, #48]
 1f4:	str	x9, [x0]
 1f8:	ldp	w10, w8, [x21, #8]
 1fc:	mov	x22, x0
 200:	cmp	w10, w8
 204:	b.cs	3ac <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x3ac>  // b.hs, b.nlast
 208:	ldr	x9, [x21]
 20c:	cmp	w10, w8
 210:	str	x20, [x9, w10, uxtw #3]
 214:	b.cs	438 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x438>  // b.hs, b.nlast
 218:	add	w10, w10, #0x1
 21c:	cmp	w10, w8
 220:	str	w10, [x21, #8]
 224:	b.cs	3d0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x3d0>  // b.hs, b.nlast
 228:	cmp	w10, w8
 22c:	str	x28, [x9, w10, uxtw #3]
 230:	b.cs	438 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x438>  // b.hs, b.nlast
 234:	add	w10, w10, #0x1
 238:	cmp	w10, w8
 23c:	str	w10, [x21, #8]
 240:	b.cs	3f4 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x3f4>  // b.hs, b.nlast
 244:	cmp	w10, w8
 248:	str	x26, [x9, w10, uxtw #3]
 24c:	b.cs	438 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x438>  // b.hs, b.nlast
 250:	add	w10, w10, #0x1
 254:	cmp	w10, w8
 258:	str	w10, [x21, #8]
 25c:	b.cs	418 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x418>  // b.hs, b.nlast
 260:	cmp	w10, w8
 264:	str	x25, [x9, w10, uxtw #3]
 268:	b.cs	438 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x438>  // b.hs, b.nlast
 26c:	add	w8, w10, #0x1
 270:	mov	w0, #0x88                  	// #136
 274:	str	w8, [x21, #8]
 278:	bl	0 <_Znwm>
 27c:	adrp	x8, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 280:	ldr	d0, [x8]
 284:	ldr	x10, [sp, #8]
 288:	add	x8, x0, #0x10
 28c:	mov	x9, x0
 290:	str	x8, [x0]
 294:	str	d0, [x0, #8]
 298:	str	wzr, [x9, #88]!
 29c:	sub	x1, x29, #0x10
 2a0:	mov	x20, x0
 2a4:	str	x0, [x10]
 2a8:	str	wzr, [x0, #128]
 2ac:	stp	xzr, x9, [x0, #96]
 2b0:	stp	x9, xzr, [x0, #112]
 2b4:	stur	x27, [x29, #-16]
 2b8:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 2bc:	ldur	x0, [x29, #-16]
 2c0:	cbz	x0, 2d0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x2d0>
 2c4:	ldr	x8, [x0]
 2c8:	ldr	x8, [x8, #8]
 2cc:	blr	x8
 2d0:	stur	xzr, [x29, #-16]
 2d4:	ldr	w21, [x19]
 2d8:	cbz	w21, 320 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x320>
 2dc:	mov	w0, #0xe8                  	// #232
 2e0:	bl	0 <_Znwm>
 2e4:	ldr	w2, [x19, #4]
 2e8:	mov	w3, #0x1                   	// #1
 2ec:	mov	w1, w21
 2f0:	mov	x19, x0
 2f4:	bl	0 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb>
 2f8:	sub	x1, x29, #0x18
 2fc:	mov	x0, x20
 300:	stur	x19, [x29, #-24]
 304:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 308:	ldur	x0, [x29, #-24]
 30c:	cbz	x0, 31c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x31c>
 310:	ldr	x8, [x0]
 314:	ldr	x8, [x8, #8]
 318:	blr	x8
 31c:	stur	xzr, [x29, #-24]
 320:	add	x1, sp, #0x20
 324:	mov	x0, x20
 328:	str	x24, [sp, #32]
 32c:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 330:	ldr	x0, [sp, #32]
 334:	cbz	x0, 344 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x344>
 338:	ldr	x8, [x0]
 33c:	ldr	x8, [x8, #8]
 340:	blr	x8
 344:	add	x1, sp, #0x18
 348:	mov	x0, x20
 34c:	stp	x23, xzr, [sp, #24]
 350:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 354:	ldr	x0, [sp, #24]
 358:	cbz	x0, 368 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x368>
 35c:	ldr	x8, [x0]
 360:	ldr	x8, [x8, #8]
 364:	blr	x8
 368:	add	x1, sp, #0x10
 36c:	mov	x0, x20
 370:	stp	x22, xzr, [sp, #16]
 374:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 378:	ldr	x0, [sp, #16]
 37c:	cbz	x0, 38c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x38c>
 380:	ldr	x8, [x0]
 384:	ldr	x8, [x8, #8]
 388:	blr	x8
 38c:	ldp	x20, x19, [sp, #144]
 390:	ldp	x22, x21, [sp, #128]
 394:	ldp	x24, x23, [sp, #112]
 398:	ldp	x26, x25, [sp, #96]
 39c:	ldp	x28, x27, [sp, #80]
 3a0:	ldp	x29, x30, [sp, #64]
 3a4:	add	sp, sp, #0xa0
 3a8:	ret
 3ac:	mov	x0, x21
 3b0:	mov	x1, xzr
 3b4:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 3b8:	ldp	w10, w8, [x21, #8]
 3bc:	ldr	x9, [x21]
 3c0:	cmp	w10, w8
 3c4:	str	x20, [x9, w10, uxtw #3]
 3c8:	b.cc	218 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x218>  // b.lo, b.ul, b.last
 3cc:	b	438 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x438>
 3d0:	mov	x0, x21
 3d4:	mov	x1, xzr
 3d8:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 3dc:	ldp	w10, w8, [x21, #8]
 3e0:	ldr	x9, [x21]
 3e4:	cmp	w10, w8
 3e8:	str	x28, [x9, w10, uxtw #3]
 3ec:	b.cc	234 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x234>  // b.lo, b.ul, b.last
 3f0:	b	438 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x438>
 3f4:	mov	x0, x21
 3f8:	mov	x1, xzr
 3fc:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 400:	ldp	w10, w8, [x21, #8]
 404:	ldr	x9, [x21]
 408:	cmp	w10, w8
 40c:	str	x26, [x9, w10, uxtw #3]
 410:	b.cc	250 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x250>  // b.lo, b.ul, b.last
 414:	b	438 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x438>
 418:	mov	x0, x21
 41c:	mov	x1, xzr
 420:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 424:	ldp	w10, w8, [x21, #8]
 428:	ldr	x9, [x21]
 42c:	cmp	w10, w8
 430:	str	x25, [x9, w10, uxtw #3]
 434:	b.cc	26c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x26c>  // b.lo, b.ul, b.last
 438:	adrp	x0, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 43c:	adrp	x1, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 440:	adrp	x3, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 444:	add	x0, x0, #0x0
 448:	add	x1, x1, #0x0
 44c:	add	x3, x3, #0x0
 450:	mov	w2, #0x43                  	// #67
 454:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  6c:	lsl	x0, x21, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, 11c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x11c>
  c4:	lsl	x22, x8, #3
  c8:	mov	x9, x22
  cc:	mov	x10, x20
  d0:	ldr	x11, [x0]
  d4:	str	xzr, [x0], #8
  d8:	subs	x9, x9, #0x8
  dc:	str	x11, [x10], #8
  e0:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xd0>  // b.any
  e4:	ldr	x0, [x19]
  e8:	cbz	w8, 11c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x11c>
  ec:	sub	x23, x0, #0x8
  f0:	b	100 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x100>
  f4:	str	xzr, [x23, x22]
  f8:	subs	x22, x22, #0x8
  fc:	b.eq	118 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x118>  // b.none
 100:	ldr	x0, [x23, x22]
 104:	cbz	x0, f4 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xf4>
 108:	ldr	x8, [x0]
 10c:	ldr	x8, [x8, #8]
 110:	blr	x8
 114:	b	f4 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xf4>
 118:	ldr	x0, [x19]
 11c:	add	x8, x19, #0x10
 120:	cmp	x0, x8
 124:	b.eq	12c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x12c>  // b.none
 128:	bl	0 <free>
 12c:	str	x20, [x19]
 130:	str	w21, [x19, #12]
 134:	ldp	x20, x19, [sp, #48]
 138:	ldp	x22, x21, [sp, #32]
 13c:	ldr	x23, [sp, #16]
 140:	ldp	x29, x30, [sp], #64
 144:	ret

Disassembly of section .text._ZN4llvm3mca9SchedulerD2Ev:

0000000000000000 <_ZN4llvm3mca9SchedulerD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca9SchedulerD2Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #104]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca9SchedulerD2Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	ldr	x0, [x19, #80]
  30:	cbz	x0, 38 <_ZN4llvm3mca9SchedulerD2Ev+0x38>
  34:	bl	0 <_ZdlPv>
  38:	ldr	x0, [x19, #56]
  3c:	cbz	x0, 44 <_ZN4llvm3mca9SchedulerD2Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #32]
  48:	cbz	x0, 50 <_ZN4llvm3mca9SchedulerD2Ev+0x50>
  4c:	bl	0 <_ZdlPv>
  50:	ldr	x0, [x19, #24]
  54:	cbz	x0, 64 <_ZN4llvm3mca9SchedulerD2Ev+0x64>
  58:	ldr	x8, [x0]
  5c:	ldr	x8, [x8, #8]
  60:	blr	x8
  64:	ldr	x0, [x19, #16]
  68:	str	xzr, [x19, #24]
  6c:	cbz	x0, 7c <_ZN4llvm3mca9SchedulerD2Ev+0x7c>
  70:	ldr	x8, [x0]
  74:	ldr	x8, [x8, #8]
  78:	blr	x8
  7c:	str	xzr, [x19, #16]
  80:	mov	x0, x19
  84:	ldr	x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca9SchedulerD0Ev:

0000000000000000 <_ZN4llvm3mca9SchedulerD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca9SchedulerD0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #104]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca9SchedulerD0Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	ldr	x0, [x19, #80]
  30:	cbz	x0, 38 <_ZN4llvm3mca9SchedulerD0Ev+0x38>
  34:	bl	0 <_ZdlPv>
  38:	ldr	x0, [x19, #56]
  3c:	cbz	x0, 44 <_ZN4llvm3mca9SchedulerD0Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #32]
  48:	cbz	x0, 50 <_ZN4llvm3mca9SchedulerD0Ev+0x50>
  4c:	bl	0 <_ZdlPv>
  50:	ldr	x0, [x19, #24]
  54:	cbz	x0, 64 <_ZN4llvm3mca9SchedulerD0Ev+0x64>
  58:	ldr	x8, [x0]
  5c:	ldr	x8, [x8, #8]
  60:	blr	x8
  64:	ldr	x0, [x19, #16]
  68:	str	xzr, [x19, #24]
  6c:	cbz	x0, 7c <_ZN4llvm3mca9SchedulerD0Ev+0x7c>
  70:	ldr	x8, [x0]
  74:	ldr	x8, [x8, #8]
  78:	blr	x8
  7c:	mov	x0, x19
  80:	str	xzr, [x19, #16]
  84:	bl	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
  88:	mov	x0, x19
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	b	0 <_ZdlPv>

HWEventListener.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca15HWEventListener6anchorEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener12onCycleBeginEv:

0000000000000000 <_ZN4llvm3mca15HWEventListener12onCycleBeginEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener10onCycleEndEv:

0000000000000000 <_ZN4llvm3mca15HWEventListener10onCycleEndEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_15HWPressureEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_15HWPressureEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener19onResourceAvailableERKSt4pairImmE:

0000000000000000 <_ZN4llvm3mca15HWEventListener19onResourceAvailableERKSt4pairImmE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener17onReservedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE:

0000000000000000 <_ZN4llvm3mca15HWEventListener17onReservedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener17onReleasedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE:

0000000000000000 <_ZN4llvm3mca15HWEventListener17onReleasedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListenerD2Ev:

0000000000000000 <_ZN4llvm3mca15HWEventListenerD2Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListenerD0Ev:

0000000000000000 <_ZN4llvm3mca15HWEventListenerD0Ev>:
   0:	b	0 <_ZdlPv>

HardwareUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca12HardwareUnitD1Ev>:
   0:	ret

0000000000000004 <_ZN4llvm3mca12HardwareUnitD0Ev>:
   4:	b	0 <_ZdlPv>

LSUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	mov	x29, sp
       8:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
       c:	ldr	x9, [x9]
      10:	and	w8, w4, #0x1
      14:	strb	w8, [x0, #24]
      18:	mov	w8, #0x1                   	// #1
      1c:	add	x9, x9, #0x10
      20:	stp	w2, w3, [x0, #8]
      24:	str	xzr, [x0, #16]
      28:	stp	xzr, xzr, [x0, #40]
      2c:	str	xzr, [x0, #32]
      30:	str	wzr, [x0, #56]
      34:	str	x9, [x0]
      38:	str	w8, [x0, #64]
      3c:	ldr	x8, [x1, #64]
      40:	cbz	x8, 7c <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0x7c>
      44:	cbnz	w2, 78 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0x78>
      48:	ldr	w9, [x8, #36]
      4c:	cbz	w9, 78 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0x78>
      50:	ldr	x10, [x1, #40]
      54:	cbz	x10, bc <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0xbc>
      58:	ldr	w10, [x1, #48]
      5c:	cmp	w10, w9
      60:	b.ls	dc <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0xdc>  // b.plast
      64:	ldr	x10, [x1, #32]
      68:	add	x9, x10, x9, lsl #5
      6c:	ldr	w9, [x9, #16]
      70:	bic	w9, w9, w9, asr #31
      74:	str	w9, [x0, #8]
      78:	cbz	w3, 84 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0x84>
      7c:	ldp	x29, x30, [sp], #16
      80:	ret
      84:	ldr	w8, [x8, #40]
      88:	cbz	w8, 7c <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0x7c>
      8c:	ldr	x9, [x1, #40]
      90:	cbz	x9, bc <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0xbc>
      94:	ldr	w9, [x1, #48]
      98:	cmp	w9, w8
      9c:	b.ls	dc <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0xdc>  // b.plast
      a0:	ldr	x9, [x1, #32]
      a4:	add	x8, x9, x8, lsl #5
      a8:	ldr	w8, [x8, #16]
      ac:	bic	w8, w8, w8, asr #31
      b0:	str	w8, [x0, #12]
      b4:	ldp	x29, x30, [sp], #16
      b8:	ret
      bc:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
      c0:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
      c4:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
      c8:	add	x0, x0, #0x0
      cc:	add	x1, x1, #0x0
      d0:	add	x3, x3, #0x0
      d4:	mov	w2, #0x154                 	// #340
      d8:	bl	0 <__assert_fail>
      dc:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
      e0:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
      e4:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
      e8:	add	x0, x0, #0x0
      ec:	add	x1, x1, #0x0
      f0:	add	x3, x3, #0x0
      f4:	mov	w2, #0x156                 	// #342
      f8:	bl	0 <__assert_fail>

00000000000000fc <_ZN4llvm3mca10LSUnitBaseD0Ev>:
      fc:	brk	#0x1

0000000000000100 <_ZN4llvm3mca10LSUnitBase10cycleEventEv>:
     100:	stp	x29, x30, [sp, #-16]!
     104:	mov	x29, sp
     108:	ldr	w8, [x0, #48]
     10c:	cbz	w8, 1a8 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xa8>
     110:	ldr	x8, [x0, #40]
     114:	ldr	w10, [x0, #56]
     118:	add	x9, x8, x10, lsl #4
     11c:	cbz	w10, 144 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x44>
     120:	lsl	x11, x10, #4
     124:	add	x10, x11, x8
     128:	ldr	w12, [x8]
     12c:	cmn	w12, #0x2
     130:	b.cc	144 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x44>  // b.lo, b.ul, b.last
     134:	subs	x11, x11, #0x10
     138:	add	x8, x8, #0x10
     13c:	b.ne	128 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x28>  // b.any
     140:	mov	x8, x10
     144:	cmp	x8, x9
     148:	b.eq	1a8 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xa8>  // b.none
     14c:	ldr	x10, [x8, #8]
     150:	ldp	w11, w12, [x10, #4]
     154:	ldr	w13, [x10]
     158:	add	w11, w12, w11
     15c:	cmp	w13, w11
     160:	b.ls	174 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x74>  // b.plast
     164:	ldr	w11, [x10, #80]
     168:	cbz	w11, 174 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x74>
     16c:	sub	w11, w11, #0x1
     170:	str	w11, [x10, #80]
     174:	add	x8, x8, #0x10
     178:	cmp	x8, x9
     17c:	b.hi	1b0 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xb0>  // b.pmore
     180:	b.eq	1a8 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xa8>  // b.none
     184:	ldr	w10, [x8]
     188:	cmn	w10, #0x2
     18c:	b.cc	1a0 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xa0>  // b.lo, b.ul, b.last
     190:	add	x8, x8, #0x10
     194:	cmp	x9, x8
     198:	b.ne	184 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x84>  // b.any
     19c:	b	1a8 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xa8>
     1a0:	cmp	x9, x8
     1a4:	b.ne	14c <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x4c>  // b.any
     1a8:	ldp	x29, x30, [sp], #16
     1ac:	ret
     1b0:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     1b4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     1b8:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     1bc:	add	x0, x0, #0x0
     1c0:	add	x1, x1, #0x0
     1c4:	add	x3, x3, #0x0
     1c8:	mov	w2, #0x4e0                 	// #1248
     1cc:	bl	0 <__assert_fail>

00000000000001d0 <_ZNK4llvm3mca10LSUnitBase4dumpEv>:
     1d0:	stp	x29, x30, [sp, #-96]!
     1d4:	stp	x28, x27, [sp, #16]
     1d8:	stp	x26, x25, [sp, #32]
     1dc:	stp	x24, x23, [sp, #48]
     1e0:	stp	x22, x21, [sp, #64]
     1e4:	stp	x20, x19, [sp, #80]
     1e8:	mov	x29, sp
     1ec:	mov	x19, x0
     1f0:	bl	0 <_ZN4llvm4dbgsEv>
     1f4:	ldp	x9, x8, [x0, #16]
     1f8:	sub	x9, x9, x8
     1fc:	cmp	x9, #0x12
     200:	b.hi	218 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x48>  // b.pmore
     204:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     208:	add	x1, x1, #0x0
     20c:	mov	w2, #0x13                  	// #19
     210:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     214:	b	240 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x70>
     218:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     21c:	add	x9, x9, #0x0
     220:	ldr	q0, [x9]
     224:	mov	w9, #0x2065                	// #8293
     228:	movk	w9, #0x203d, lsl #16
     22c:	stur	w9, [x8, #15]
     230:	str	q0, [x8]
     234:	ldr	x8, [x0, #24]
     238:	add	x8, x8, #0x13
     23c:	str	x8, [x0, #24]
     240:	ldr	w1, [x19, #8]
     244:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     248:	ldp	x9, x8, [x0, #16]
     24c:	cmp	x8, x9
     250:	b.cs	268 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x98>  // b.hs, b.nlast
     254:	add	x9, x8, #0x1
     258:	mov	w10, #0xa                   	// #10
     25c:	str	x9, [x0, #24]
     260:	strb	w10, [x8]
     264:	b	270 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0xa0>
     268:	mov	w1, #0xa                   	// #10
     26c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     270:	bl	0 <_ZN4llvm4dbgsEv>
     274:	ldp	x9, x8, [x0, #16]
     278:	sub	x9, x9, x8
     27c:	cmp	x9, #0x12
     280:	b.hi	298 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0xc8>  // b.pmore
     284:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     288:	add	x1, x1, #0x0
     28c:	mov	w2, #0x13                  	// #19
     290:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     294:	b	2c0 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0xf0>
     298:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     29c:	add	x9, x9, #0x0
     2a0:	ldr	q0, [x9]
     2a4:	mov	w9, #0x2065                	// #8293
     2a8:	movk	w9, #0x203d, lsl #16
     2ac:	stur	w9, [x8, #15]
     2b0:	str	q0, [x8]
     2b4:	ldr	x8, [x0, #24]
     2b8:	add	x8, x8, #0x13
     2bc:	str	x8, [x0, #24]
     2c0:	ldr	w1, [x19, #12]
     2c4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     2c8:	ldp	x9, x8, [x0, #16]
     2cc:	cmp	x8, x9
     2d0:	b.cs	2e8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x118>  // b.hs, b.nlast
     2d4:	add	x9, x8, #0x1
     2d8:	mov	w10, #0xa                   	// #10
     2dc:	str	x9, [x0, #24]
     2e0:	strb	w10, [x8]
     2e4:	b	2f0 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x120>
     2e8:	mov	w1, #0xa                   	// #10
     2ec:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     2f0:	bl	0 <_ZN4llvm4dbgsEv>
     2f4:	ldp	x9, x8, [x0, #16]
     2f8:	sub	x9, x9, x8
     2fc:	cmp	x9, #0x18
     300:	b.hi	318 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x148>  // b.pmore
     304:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     308:	add	x1, x1, #0x0
     30c:	mov	w2, #0x19                  	// #25
     310:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     314:	b	33c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x16c>
     318:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     31c:	add	x9, x9, #0x0
     320:	ldur	q0, [x9, #9]
     324:	ldr	q1, [x9]
     328:	stur	q0, [x8, #9]
     32c:	str	q1, [x8]
     330:	ldr	x8, [x0, #24]
     334:	add	x8, x8, #0x19
     338:	str	x8, [x0, #24]
     33c:	ldr	w1, [x19, #16]
     340:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     344:	ldp	x9, x8, [x0, #16]
     348:	cmp	x8, x9
     34c:	b.cs	364 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x194>  // b.hs, b.nlast
     350:	add	x9, x8, #0x1
     354:	mov	w10, #0xa                   	// #10
     358:	str	x9, [x0, #24]
     35c:	strb	w10, [x8]
     360:	b	36c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x19c>
     364:	mov	w1, #0xa                   	// #10
     368:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     36c:	bl	0 <_ZN4llvm4dbgsEv>
     370:	ldp	x9, x8, [x0, #16]
     374:	sub	x9, x9, x8
     378:	cmp	x9, #0x18
     37c:	b.hi	394 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x1c4>  // b.pmore
     380:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     384:	add	x1, x1, #0x0
     388:	mov	w2, #0x19                  	// #25
     38c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     390:	b	3b8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x1e8>
     394:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     398:	add	x9, x9, #0x0
     39c:	ldur	q0, [x9, #9]
     3a0:	ldr	q1, [x9]
     3a4:	stur	q0, [x8, #9]
     3a8:	str	q1, [x8]
     3ac:	ldr	x8, [x0, #24]
     3b0:	add	x8, x8, #0x19
     3b4:	str	x8, [x0, #24]
     3b8:	ldr	w1, [x19, #20]
     3bc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     3c0:	ldp	x9, x8, [x0, #16]
     3c4:	cmp	x8, x9
     3c8:	b.cs	404 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x234>  // b.hs, b.nlast
     3cc:	add	x9, x8, #0x1
     3d0:	mov	w10, #0xa                   	// #10
     3d4:	str	x9, [x0, #24]
     3d8:	strb	w10, [x8]
     3dc:	bl	0 <_ZN4llvm4dbgsEv>
     3e0:	ldp	x9, x8, [x0, #16]
     3e4:	cmp	x9, x8
     3e8:	b.eq	41c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x24c>  // b.none
     3ec:	mov	w9, #0xa                   	// #10
     3f0:	strb	w9, [x8]
     3f4:	ldr	x8, [x0, #24]
     3f8:	add	x8, x8, #0x1
     3fc:	str	x8, [x0, #24]
     400:	b	42c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x25c>
     404:	mov	w1, #0xa                   	// #10
     408:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     40c:	bl	0 <_ZN4llvm4dbgsEv>
     410:	ldp	x9, x8, [x0, #16]
     414:	cmp	x9, x8
     418:	b.ne	3ec <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x21c>  // b.any
     41c:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     420:	add	x1, x1, #0x0
     424:	mov	w2, #0x1                   	// #1
     428:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     42c:	ldr	w9, [x19, #56]
     430:	ldp	x28, x8, [x19, #32]
     434:	ldr	w10, [x19, #48]
     438:	add	x21, x8, x9, lsl #4
     43c:	mov	x20, x21
     440:	cbz	w10, 470 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x2a0>
     444:	cbz	w9, 46c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x29c>
     448:	lsl	x9, x9, #4
     44c:	add	x20, x9, x8
     450:	ldr	w10, [x8]
     454:	cmn	w10, #0x2
     458:	b.cc	758 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x588>  // b.lo, b.ul, b.last
     45c:	subs	x9, x9, #0x10
     460:	add	x8, x8, #0x10
     464:	b.ne	450 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x280>  // b.any
     468:	b	470 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x2a0>
     46c:	mov	x20, x8
     470:	cmp	x20, x21
     474:	b.eq	764 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x594>  // b.none
     478:	adrp	x23, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     47c:	adrp	x24, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     480:	adrp	x25, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     484:	adrp	x26, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     488:	adrp	x27, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     48c:	add	x23, x23, #0x0
     490:	add	x24, x24, #0x0
     494:	add	x25, x25, #0x0
     498:	add	x26, x26, #0x0
     49c:	add	x27, x27, #0x0
     4a0:	b	4b0 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x2e0>
     4a4:	mov	x20, x8
     4a8:	cmp	x20, x21
     4ac:	b.eq	764 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x594>  // b.none
     4b0:	ldr	x22, [x20, #8]
     4b4:	bl	0 <_ZN4llvm4dbgsEv>
     4b8:	ldp	x9, x8, [x0, #16]
     4bc:	sub	x9, x9, x8
     4c0:	cmp	x9, #0xf
     4c4:	b.hi	4dc <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x30c>  // b.pmore
     4c8:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     4cc:	mov	w2, #0x10                  	// #16
     4d0:	add	x1, x1, #0x0
     4d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     4d8:	b	4f8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x328>
     4dc:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     4e0:	add	x9, x9, #0x0
     4e4:	ldr	q0, [x9]
     4e8:	str	q0, [x8]
     4ec:	ldr	x8, [x0, #24]
     4f0:	add	x8, x8, #0x10
     4f4:	str	x8, [x0, #24]
     4f8:	ldr	w1, [x20]
     4fc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     500:	ldp	x9, x8, [x0, #16]
     504:	sub	x9, x9, x8
     508:	cmp	x9, #0x2
     50c:	b.hi	55c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x38c>  // b.pmore
     510:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     514:	mov	w2, #0x3                   	// #3
     518:	add	x1, x1, #0x0
     51c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     520:	ldp	x9, x8, [x0, #16]
     524:	sub	x9, x9, x8
     528:	cmp	x9, #0xa
     52c:	b.ls	584 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x3b4>  // b.plast
     530:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     534:	add	x9, x9, #0x0
     538:	ldr	x9, [x9]
     53c:	mov	w10, #0x2073                	// #8307
     540:	movk	w10, #0x203d, lsl #16
     544:	stur	w10, [x8, #7]
     548:	str	x9, [x8]
     54c:	ldr	x8, [x0, #24]
     550:	add	x8, x8, #0xb
     554:	str	x8, [x0, #24]
     558:	b	594 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x3c4>
     55c:	mov	w9, #0x20                  	// #32
     560:	strb	w9, [x8, #2]
     564:	mov	w9, #0x3a29                	// #14889
     568:	strh	w9, [x8]
     56c:	ldp	x9, x8, [x0, #16]
     570:	add	x8, x8, #0x3
     574:	str	x8, [x0, #24]
     578:	sub	x9, x9, x8
     57c:	cmp	x9, #0xa
     580:	b.hi	530 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x360>  // b.pmore
     584:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     588:	mov	w2, #0xb                   	// #11
     58c:	add	x1, x1, #0x0
     590:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     594:	ldr	w1, [x22]
     598:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     59c:	ldp	x9, x8, [x0, #16]
     5a0:	sub	x9, x9, x8
     5a4:	cmp	x9, #0xc
     5a8:	b.hi	5bc <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x3ec>  // b.pmore
     5ac:	mov	w2, #0xd                   	// #13
     5b0:	mov	x1, x23
     5b4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5b8:	b	5d8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x408>
     5bc:	ldur	x9, [x23, #5]
     5c0:	ldr	x10, [x23]
     5c4:	stur	x9, [x8, #5]
     5c8:	str	x10, [x8]
     5cc:	ldr	x8, [x0, #24]
     5d0:	add	x8, x8, #0xd
     5d4:	str	x8, [x0, #24]
     5d8:	ldr	w1, [x22, #4]
     5dc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     5e0:	ldp	x9, x8, [x0, #16]
     5e4:	sub	x9, x9, x8
     5e8:	cmp	x9, #0xe
     5ec:	b.hi	600 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x430>  // b.pmore
     5f0:	mov	w2, #0xf                   	// #15
     5f4:	mov	x1, x24
     5f8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5fc:	b	61c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x44c>
     600:	ldur	x9, [x24, #7]
     604:	ldr	x10, [x24]
     608:	stur	x9, [x8, #7]
     60c:	str	x10, [x8]
     610:	ldr	x8, [x0, #24]
     614:	add	x8, x8, #0xf
     618:	str	x8, [x0, #24]
     61c:	ldr	w1, [x22, #8]
     620:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     624:	ldp	x9, x8, [x0, #16]
     628:	sub	x9, x9, x8
     62c:	cmp	x9, #0x9
     630:	b.hi	644 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x474>  // b.pmore
     634:	mov	w2, #0xa                   	// #10
     638:	mov	x1, x25
     63c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     640:	b	660 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x490>
     644:	ldr	x9, [x25]
     648:	mov	w10, #0x203d                	// #8253
     64c:	strh	w10, [x8, #8]
     650:	str	x9, [x8]
     654:	ldr	x8, [x0, #24]
     658:	add	x8, x8, #0xa
     65c:	str	x8, [x0, #24]
     660:	ldr	w1, [x22, #12]
     664:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     668:	ldp	x9, x8, [x0, #16]
     66c:	sub	x9, x9, x8
     670:	cmp	x9, #0xc
     674:	b.hi	688 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x4b8>  // b.pmore
     678:	mov	w2, #0xd                   	// #13
     67c:	mov	x1, x26
     680:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     684:	b	6a4 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x4d4>
     688:	ldur	x9, [x26, #5]
     68c:	ldr	x10, [x26]
     690:	stur	x9, [x8, #5]
     694:	str	x10, [x8]
     698:	ldr	x8, [x0, #24]
     69c:	add	x8, x8, #0xd
     6a0:	str	x8, [x0, #24]
     6a4:	ldr	w1, [x22, #16]
     6a8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     6ac:	ldp	x9, x8, [x0, #16]
     6b0:	sub	x9, x9, x8
     6b4:	cmp	x9, #0xe
     6b8:	b.hi	6cc <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x4fc>  // b.pmore
     6bc:	mov	w2, #0xf                   	// #15
     6c0:	mov	x1, x27
     6c4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     6c8:	b	6e8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x518>
     6cc:	ldur	x9, [x27, #7]
     6d0:	ldr	x10, [x27]
     6d4:	stur	x9, [x8, #7]
     6d8:	str	x10, [x8]
     6dc:	ldr	x8, [x0, #24]
     6e0:	add	x8, x8, #0xf
     6e4:	str	x8, [x0, #24]
     6e8:	ldr	w1, [x22, #20]
     6ec:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     6f0:	ldp	x9, x8, [x0, #16]
     6f4:	cmp	x8, x9
     6f8:	b.cs	710 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x540>  // b.hs, b.nlast
     6fc:	add	x9, x8, #0x1
     700:	str	x9, [x0, #24]
     704:	mov	w9, #0xa                   	// #10
     708:	strb	w9, [x8]
     70c:	b	718 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x548>
     710:	mov	w1, #0xa                   	// #10
     714:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     718:	ldr	x8, [x19, #32]
     71c:	cmp	x8, x28
     720:	b.ne	780 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x5b0>  // b.any
     724:	add	x8, x20, #0x10
     728:	cmp	x8, x21
     72c:	b.hi	7a0 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x5d0>  // b.pmore
     730:	mov	x20, x21
     734:	b.eq	4a8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x2d8>  // b.none
     738:	ldr	w9, [x8]
     73c:	cmn	w9, #0x2
     740:	b.cc	4a4 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x2d4>  // b.lo, b.ul, b.last
     744:	add	x8, x8, #0x10
     748:	cmp	x21, x8
     74c:	b.ne	738 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x568>  // b.any
     750:	mov	x20, x21
     754:	b	4a8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x2d8>
     758:	mov	x20, x8
     75c:	cmp	x20, x21
     760:	b.ne	478 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x2a8>  // b.any
     764:	ldp	x20, x19, [sp, #80]
     768:	ldp	x22, x21, [sp, #64]
     76c:	ldp	x24, x23, [sp, #48]
     770:	ldp	x26, x25, [sp, #32]
     774:	ldp	x28, x27, [sp, #16]
     778:	ldp	x29, x30, [sp], #96
     77c:	ret
     780:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     784:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     788:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     78c:	add	x0, x0, #0x0
     790:	add	x1, x1, #0x0
     794:	add	x3, x3, #0x0
     798:	mov	w2, #0x4cf                 	// #1231
     79c:	bl	0 <__assert_fail>
     7a0:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     7a4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     7a8:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     7ac:	add	x0, x0, #0x0
     7b0:	add	x1, x1, #0x0
     7b4:	add	x3, x3, #0x0
     7b8:	mov	w2, #0x4e0                 	// #1248
     7bc:	bl	0 <__assert_fail>

00000000000007c0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE>:
     7c0:	stp	x29, x30, [sp, #-80]!
     7c4:	str	x25, [sp, #16]
     7c8:	stp	x24, x23, [sp, #32]
     7cc:	stp	x22, x21, [sp, #48]
     7d0:	stp	x20, x19, [sp, #64]
     7d4:	mov	x29, sp
     7d8:	ldr	x8, [x1, #8]
     7dc:	mov	x19, x0
     7e0:	ldr	x25, [x8]
     7e4:	ldrb	w8, [x25, #324]
     7e8:	ldrb	w24, [x25, #326]
     7ec:	cbz	w8, 84c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x8c>
     7f0:	ldr	w8, [x19, #16]
     7f4:	add	w8, w8, #0x1
     7f8:	str	w8, [x19, #16]
     7fc:	ldrb	w8, [x25, #325]
     800:	cbnz	w8, 854 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x94>
     804:	cbnz	w24, 8f8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x138>
     808:	ldr	w1, [x19, #68]
     80c:	cbz	w1, 8f8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x138>
     810:	ldr	w8, [x19, #76]
     814:	cmp	w1, w8
     818:	b.ls	8f8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x138>  // b.plast
     81c:	ldr	w8, [x19, #72]
     820:	cmp	w1, w8
     824:	b.ls	8f8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x138>  // b.plast
     828:	mov	x0, x19
     82c:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     830:	ldr	w8, [x0, #32]
     834:	cbnz	w8, d7c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5bc>
     838:	ldr	w8, [x0, #12]
     83c:	add	w8, w8, #0x1
     840:	str	w8, [x0, #12]
     844:	ldr	w20, [x19, #68]
     848:	b	d60 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5a0>
     84c:	ldrb	w8, [x25, #325]
     850:	cbz	w8, d9c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5dc>
     854:	ldr	w8, [x19, #20]
     858:	mov	x0, x19
     85c:	add	w8, w8, #0x1
     860:	str	w8, [x19, #20]
     864:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     868:	mov	w20, w0
     86c:	mov	x0, x19
     870:	mov	w1, w20
     874:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     878:	ldr	w8, [x0, #32]
     87c:	cbnz	w8, d7c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5bc>
     880:	ldr	w8, [x0, #12]
     884:	mov	x21, x0
     888:	add	w8, w8, #0x1
     88c:	str	w8, [x0, #12]
     890:	ldp	w8, w9, [x19, #68]
     894:	cmp	w8, w9
     898:	csel	w23, w9, w8, cc  // cc = lo, ul, last
     89c:	cbz	w23, a4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x28c>
     8a0:	mov	x0, x19
     8a4:	mov	w1, w23
     8a8:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     8ac:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     8b0:	ldr	x8, [x8]
     8b4:	mov	x22, x0
     8b8:	ldrb	w8, [x8]
     8bc:	cbz	w8, a40 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x280>
     8c0:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     8c4:	add	x0, x0, #0x0
     8c8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     8cc:	tbz	w0, #0, a40 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x280>
     8d0:	bl	0 <_ZN4llvm4dbgsEv>
     8d4:	ldp	x9, x8, [x0, #16]
     8d8:	sub	x9, x9, x8
     8dc:	cmp	x9, #0x15
     8e0:	b.hi	98c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1cc>  // b.pmore
     8e4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     8e8:	add	x1, x1, #0x0
     8ec:	mov	w2, #0x16                  	// #22
     8f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     8f4:	b	9b0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1f0>
     8f8:	mov	x0, x19
     8fc:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     900:	mov	w20, w0
     904:	mov	x0, x19
     908:	mov	w1, w20
     90c:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     910:	ldr	w8, [x0, #32]
     914:	cbnz	w8, d7c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5bc>
     918:	ldr	w8, [x0, #12]
     91c:	mov	x21, x0
     920:	add	w8, w8, #0x1
     924:	str	w8, [x0, #12]
     928:	ldrb	w8, [x19, #24]
     92c:	cbnz	w8, c38 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x478>
     930:	ldr	w1, [x19, #76]
     934:	cbz	w1, c38 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x478>
     938:	mov	x0, x19
     93c:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     940:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     944:	ldr	x8, [x8]
     948:	mov	x22, x0
     94c:	ldrb	w8, [x8]
     950:	cbz	w8, c2c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x46c>
     954:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     958:	add	x0, x0, #0x0
     95c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     960:	tbz	w0, #0, c2c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x46c>
     964:	bl	0 <_ZN4llvm4dbgsEv>
     968:	ldp	x9, x8, [x0, #16]
     96c:	sub	x9, x9, x8
     970:	cmp	x9, #0x15
     974:	b.hi	b78 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3b8>  // b.pmore
     978:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     97c:	add	x1, x1, #0x0
     980:	mov	w2, #0x16                  	// #22
     984:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     988:	b	b9c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3dc>
     98c:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     990:	add	x9, x9, #0x0
     994:	ldur	x10, [x9, #14]
     998:	ldr	q0, [x9]
     99c:	stur	x10, [x8, #14]
     9a0:	str	q0, [x8]
     9a4:	ldr	x8, [x0, #24]
     9a8:	add	x8, x8, #0x16
     9ac:	str	x8, [x0, #24]
     9b0:	mov	w1, w23
     9b4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     9b8:	ldp	x9, x8, [x0, #16]
     9bc:	sub	x9, x9, x8
     9c0:	cmp	x9, #0x6
     9c4:	b.hi	9dc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x21c>  // b.pmore
     9c8:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     9cc:	add	x1, x1, #0x0
     9d0:	mov	w2, #0x7                   	// #7
     9d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     9d8:	b	a00 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x240>
     9dc:	mov	w9, #0x3e2d                	// #15917
     9e0:	mov	w10, #0x2029                	// #8233
     9e4:	movk	w9, #0x2820, lsl #16
     9e8:	movk	w10, #0x2d2d, lsl #16
     9ec:	stur	w9, [x8, #3]
     9f0:	str	w10, [x8]
     9f4:	ldr	x8, [x0, #24]
     9f8:	add	x8, x8, #0x7
     9fc:	str	x8, [x0, #24]
     a00:	mov	w1, w20
     a04:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     a08:	ldp	x9, x8, [x0, #16]
     a0c:	sub	x9, x9, x8
     a10:	cmp	x9, #0x1
     a14:	b.hi	a2c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x26c>  // b.pmore
     a18:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     a1c:	add	x1, x1, #0x0
     a20:	mov	w2, #0x2                   	// #2
     a24:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a28:	b	a40 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x280>
     a2c:	mov	w9, #0xa29                 	// #2601
     a30:	strh	w9, [x8]
     a34:	ldr	x8, [x0, #24]
     a38:	add	x8, x8, #0x2
     a3c:	str	x8, [x0, #24]
     a40:	mov	x0, x22
     a44:	mov	x1, x21
     a48:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     a4c:	ldr	w1, [x19, #76]
     a50:	cbz	w1, b68 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3a8>
     a54:	mov	x0, x19
     a58:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     a5c:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     a60:	ldr	x8, [x8]
     a64:	mov	x22, x0
     a68:	ldrb	w8, [x8]
     a6c:	cbz	w8, b5c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x39c>
     a70:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     a74:	add	x0, x0, #0x0
     a78:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     a7c:	tbz	w0, #0, b5c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x39c>
     a80:	bl	0 <_ZN4llvm4dbgsEv>
     a84:	ldp	x9, x8, [x0, #16]
     a88:	sub	x9, x9, x8
     a8c:	cmp	x9, #0x15
     a90:	b.hi	aa8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x2e8>  // b.pmore
     a94:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     a98:	add	x1, x1, #0x0
     a9c:	mov	w2, #0x16                  	// #22
     aa0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     aa4:	b	acc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x30c>
     aa8:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     aac:	add	x9, x9, #0x0
     ab0:	ldur	x10, [x9, #14]
     ab4:	ldr	q0, [x9]
     ab8:	stur	x10, [x8, #14]
     abc:	str	q0, [x8]
     ac0:	ldr	x8, [x0, #24]
     ac4:	add	x8, x8, #0x16
     ac8:	str	x8, [x0, #24]
     acc:	ldr	w1, [x19, #76]
     ad0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ad4:	ldp	x9, x8, [x0, #16]
     ad8:	sub	x9, x9, x8
     adc:	cmp	x9, #0x6
     ae0:	b.hi	af8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x338>  // b.pmore
     ae4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     ae8:	add	x1, x1, #0x0
     aec:	mov	w2, #0x7                   	// #7
     af0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     af4:	b	b1c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x35c>
     af8:	mov	w9, #0x3e2d                	// #15917
     afc:	mov	w10, #0x2029                	// #8233
     b00:	movk	w9, #0x2820, lsl #16
     b04:	movk	w10, #0x2d2d, lsl #16
     b08:	stur	w9, [x8, #3]
     b0c:	str	w10, [x8]
     b10:	ldr	x8, [x0, #24]
     b14:	add	x8, x8, #0x7
     b18:	str	x8, [x0, #24]
     b1c:	mov	w1, w20
     b20:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     b24:	ldp	x9, x8, [x0, #16]
     b28:	sub	x9, x9, x8
     b2c:	cmp	x9, #0x1
     b30:	b.hi	b48 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x388>  // b.pmore
     b34:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     b38:	add	x1, x1, #0x0
     b3c:	mov	w2, #0x2                   	// #2
     b40:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     b44:	b	b5c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x39c>
     b48:	mov	w9, #0xa29                 	// #2601
     b4c:	strh	w9, [x8]
     b50:	ldr	x8, [x0, #24]
     b54:	add	x8, x8, #0x2
     b58:	str	x8, [x0, #24]
     b5c:	mov	x0, x22
     b60:	mov	x1, x21
     b64:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     b68:	str	w20, [x19, #76]
     b6c:	ldrb	w8, [x25, #324]
     b70:	cbnz	w8, d54 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x594>
     b74:	b	d60 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5a0>
     b78:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     b7c:	add	x9, x9, #0x0
     b80:	ldur	x10, [x9, #14]
     b84:	ldr	q0, [x9]
     b88:	stur	x10, [x8, #14]
     b8c:	str	q0, [x8]
     b90:	ldr	x8, [x0, #24]
     b94:	add	x8, x8, #0x16
     b98:	str	x8, [x0, #24]
     b9c:	ldr	w1, [x19, #76]
     ba0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ba4:	ldp	x9, x8, [x0, #16]
     ba8:	sub	x9, x9, x8
     bac:	cmp	x9, #0x6
     bb0:	b.hi	bc8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x408>  // b.pmore
     bb4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     bb8:	add	x1, x1, #0x0
     bbc:	mov	w2, #0x7                   	// #7
     bc0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     bc4:	b	bec <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x42c>
     bc8:	mov	w9, #0x3e2d                	// #15917
     bcc:	mov	w10, #0x2029                	// #8233
     bd0:	movk	w9, #0x2820, lsl #16
     bd4:	movk	w10, #0x2d2d, lsl #16
     bd8:	stur	w9, [x8, #3]
     bdc:	str	w10, [x8]
     be0:	ldr	x8, [x0, #24]
     be4:	add	x8, x8, #0x7
     be8:	str	x8, [x0, #24]
     bec:	mov	w1, w20
     bf0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     bf4:	ldp	x9, x8, [x0, #16]
     bf8:	sub	x9, x9, x8
     bfc:	cmp	x9, #0x1
     c00:	b.hi	c18 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x458>  // b.pmore
     c04:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     c08:	add	x1, x1, #0x0
     c0c:	mov	w2, #0x2                   	// #2
     c10:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     c14:	b	c2c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x46c>
     c18:	mov	w9, #0xa29                 	// #2601
     c1c:	strh	w9, [x8]
     c20:	ldr	x8, [x0, #24]
     c24:	add	x8, x8, #0x2
     c28:	str	x8, [x0, #24]
     c2c:	mov	x0, x22
     c30:	mov	x1, x21
     c34:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     c38:	ldr	w1, [x19, #72]
     c3c:	cbz	w1, d54 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x594>
     c40:	mov	x0, x19
     c44:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     c48:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     c4c:	ldr	x8, [x8]
     c50:	mov	x22, x0
     c54:	ldrb	w8, [x8]
     c58:	cbz	w8, d48 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x588>
     c5c:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     c60:	add	x0, x0, #0x0
     c64:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     c68:	tbz	w0, #0, d48 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x588>
     c6c:	bl	0 <_ZN4llvm4dbgsEv>
     c70:	ldp	x9, x8, [x0, #16]
     c74:	sub	x9, x9, x8
     c78:	cmp	x9, #0x15
     c7c:	b.hi	c94 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x4d4>  // b.pmore
     c80:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     c84:	add	x1, x1, #0x0
     c88:	mov	w2, #0x16                  	// #22
     c8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     c90:	b	cb8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x4f8>
     c94:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     c98:	add	x9, x9, #0x0
     c9c:	ldur	x10, [x9, #14]
     ca0:	ldr	q0, [x9]
     ca4:	stur	x10, [x8, #14]
     ca8:	str	q0, [x8]
     cac:	ldr	x8, [x0, #24]
     cb0:	add	x8, x8, #0x16
     cb4:	str	x8, [x0, #24]
     cb8:	ldr	w1, [x19, #72]
     cbc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     cc0:	ldp	x9, x8, [x0, #16]
     cc4:	sub	x9, x9, x8
     cc8:	cmp	x9, #0x6
     ccc:	b.hi	ce4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x524>  // b.pmore
     cd0:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     cd4:	add	x1, x1, #0x0
     cd8:	mov	w2, #0x7                   	// #7
     cdc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ce0:	b	d08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x548>
     ce4:	mov	w9, #0x3e2d                	// #15917
     ce8:	mov	w10, #0x2029                	// #8233
     cec:	movk	w9, #0x2820, lsl #16
     cf0:	movk	w10, #0x2d2d, lsl #16
     cf4:	stur	w9, [x8, #3]
     cf8:	str	w10, [x8]
     cfc:	ldr	x8, [x0, #24]
     d00:	add	x8, x8, #0x7
     d04:	str	x8, [x0, #24]
     d08:	mov	w1, w20
     d0c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     d10:	ldp	x9, x8, [x0, #16]
     d14:	sub	x9, x9, x8
     d18:	cmp	x9, #0x1
     d1c:	b.hi	d34 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x574>  // b.pmore
     d20:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     d24:	add	x1, x1, #0x0
     d28:	mov	w2, #0x2                   	// #2
     d2c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     d30:	b	d48 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x588>
     d34:	mov	w9, #0xa29                 	// #2601
     d38:	strh	w9, [x8]
     d3c:	ldr	x8, [x0, #24]
     d40:	add	x8, x8, #0x2
     d44:	str	x8, [x0, #24]
     d48:	mov	x0, x22
     d4c:	mov	x1, x21
     d50:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     d54:	str	w20, [x19, #68]
     d58:	cbz	w24, d60 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5a0>
     d5c:	str	w20, [x19, #72]
     d60:	mov	w0, w20
     d64:	ldp	x20, x19, [sp, #64]
     d68:	ldp	x22, x21, [sp, #48]
     d6c:	ldp	x24, x23, [sp, #32]
     d70:	ldr	x25, [sp, #16]
     d74:	ldp	x29, x30, [sp], #80
     d78:	ret
     d7c:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     d80:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     d84:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     d88:	add	x0, x0, #0x0
     d8c:	add	x1, x1, #0x0
     d90:	add	x3, x3, #0x0
     d94:	mov	w2, #0x9c                  	// #156
     d98:	bl	0 <__assert_fail>
     d9c:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     da0:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     da4:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     da8:	add	x0, x0, #0x0
     dac:	add	x1, x1, #0x0
     db0:	add	x3, x3, #0x0
     db4:	mov	w2, #0x48                  	// #72
     db8:	bl	0 <__assert_fail>

0000000000000dbc <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>:
     dbc:	ldr	x8, [x1, #8]
     dc0:	ldr	x8, [x8]
     dc4:	ldrb	w9, [x8, #324]
     dc8:	cbz	w9, de8 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x2c>
     dcc:	ldr	w9, [x0, #8]
     dd0:	cbz	w9, de8 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x2c>
     dd4:	ldr	w10, [x0, #16]
     dd8:	cmp	w9, w10
     ddc:	b.ne	de8 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x2c>  // b.any
     de0:	mov	w0, #0x1                   	// #1
     de4:	ret
     de8:	ldrb	w8, [x8, #325]
     dec:	cbz	w8, e0c <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x50>
     df0:	ldr	w8, [x0, #12]
     df4:	cbz	w8, e0c <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x50>
     df8:	ldr	w9, [x0, #20]
     dfc:	cmp	w8, w9
     e00:	b.ne	e0c <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x50>  // b.any
     e04:	mov	w0, #0x2                   	// #2
     e08:	ret
     e0c:	mov	w0, wzr
     e10:	ret

0000000000000e14 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE>:
     e14:	stp	x29, x30, [sp, #-48]!
     e18:	str	x21, [sp, #16]
     e1c:	stp	x20, x19, [sp, #32]
     e20:	mov	x29, sp
     e24:	ldr	w8, [x0, #56]
     e28:	ldr	x9, [x0, #40]
     e2c:	mov	x19, x0
     e30:	cbz	w8, e90 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x7c>
     e34:	ldr	x10, [x1, #8]
     e38:	ldr	w10, [x10, #796]
     e3c:	cmn	w10, #0x2
     e40:	b.cs	fd0 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x1bc>  // b.hs, b.nlast
     e44:	mov	w11, #0x25                  	// #37
     e48:	mul	w12, w10, w11
     e4c:	sub	w11, w8, #0x1
     e50:	and	w12, w11, w12
     e54:	add	x21, x9, w12, uxtw #4
     e58:	ldr	w13, [x21]
     e5c:	cmp	w10, w13
     e60:	b.eq	e94 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x80>  // b.none
     e64:	mov	w14, #0x1                   	// #1
     e68:	cmn	w13, #0x1
     e6c:	b.eq	e90 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x7c>  // b.none
     e70:	add	w12, w12, w14
     e74:	and	w12, w12, w11
     e78:	add	x21, x9, w12, uxtw #4
     e7c:	ldr	w13, [x21]
     e80:	add	w14, w14, #0x1
     e84:	cmp	w10, w13
     e88:	b.eq	e94 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x80>  // b.none
     e8c:	b	e68 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x54>
     e90:	add	x21, x9, x8, lsl #4
     e94:	add	x8, x9, x8, lsl #4
     e98:	cmp	x21, x8
     e9c:	b.eq	fb0 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x19c>  // b.none
     ea0:	ldr	x20, [x21, #8]
     ea4:	ldr	w8, [x20, #8]
     ea8:	ldr	w9, [x20]
     eac:	cmp	w8, w9
     eb0:	b.ne	f90 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x17c>  // b.any
     eb4:	ldr	w8, [x20, #12]
     eb8:	ldr	w9, [x20, #20]
     ebc:	cmp	w8, w9
     ec0:	b.eq	f90 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x17c>  // b.none
     ec4:	ldr	w10, [x20, #16]
     ec8:	add	w9, w9, #0x1
     ecc:	cmp	w8, w9
     ed0:	sub	w8, w10, #0x1
     ed4:	stp	w8, w9, [x20, #16]
     ed8:	b.ne	f60 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x14c>  // b.any
     edc:	ldr	w8, [x20, #32]
     ee0:	ldr	x0, [x20, #24]
     ee4:	cbz	w8, f28 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x114>
     ee8:	lsl	x8, x8, #3
     eec:	mov	x9, x0
     ef0:	ldr	x10, [x9]
     ef4:	ldr	w11, [x10, #8]
     ef8:	ldr	w12, [x10]
     efc:	cmp	w11, w12
     f00:	b.eq	f70 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x15c>  // b.none
     f04:	ldr	w12, [x10, #4]
     f08:	add	w11, w11, #0x1
     f0c:	subs	x8, x8, #0x8
     f10:	str	w11, [x10, #8]
     f14:	sub	w11, w12, #0x1
     f18:	add	x9, x9, #0x8
     f1c:	str	w11, [x10, #4]
     f20:	b.ne	ef0 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0xdc>  // b.any
     f24:	cbz	x20, f40 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x12c>
     f28:	add	x8, x20, #0x28
     f2c:	cmp	x0, x8
     f30:	b.eq	f38 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x124>  // b.none
     f34:	bl	0 <free>
     f38:	mov	x0, x20
     f3c:	bl	0 <_ZdlPv>
     f40:	mov	w8, #0xfffffffe            	// #-2
     f44:	str	xzr, [x21, #8]
     f48:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     f4c:	str	w8, [x21]
     f50:	ldr	d0, [x19, #48]
     f54:	ldr	d1, [x9]
     f58:	add	v0.2s, v0.2s, v1.2s
     f5c:	str	d0, [x19, #48]
     f60:	ldp	x20, x19, [sp, #32]
     f64:	ldr	x21, [sp, #16]
     f68:	ldp	x29, x30, [sp], #48
     f6c:	ret
     f70:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     f74:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     f78:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     f7c:	add	x0, x0, #0x0
     f80:	add	x1, x1, #0x0
     f84:	add	x3, x3, #0x0
     f88:	mov	w2, #0x73                  	// #115
     f8c:	bl	0 <__assert_fail>
     f90:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     f94:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     f98:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     f9c:	add	x0, x0, #0x0
     fa0:	add	x1, x1, #0x0
     fa4:	add	x3, x3, #0x0
     fa8:	mov	w2, #0x8f                  	// #143
     fac:	bl	0 <__assert_fail>
     fb0:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     fb4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     fb8:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     fbc:	add	x0, x0, #0x0
     fc0:	add	x1, x1, #0x0
     fc4:	add	x3, x3, #0x0
     fc8:	mov	w2, #0xa5                  	// #165
     fcc:	bl	0 <__assert_fail>
     fd0:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     fd4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     fd8:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     fdc:	add	x0, x0, #0x0
     fe0:	add	x1, x1, #0x0
     fe4:	add	x3, x3, #0x0
     fe8:	mov	w2, #0x252                 	// #594
     fec:	bl	0 <__assert_fail>

0000000000000ff0 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE>:
     ff0:	stp	x29, x30, [sp, #-48]!
     ff4:	stp	x22, x21, [sp, #16]
     ff8:	stp	x20, x19, [sp, #32]
     ffc:	mov	x29, sp
    1000:	ldr	x8, [x1, #8]
    1004:	ldr	x9, [x8]
    1008:	ldrb	w8, [x9, #324]
    100c:	ldrb	w21, [x9, #325]
    1010:	orr	w9, w21, w8
    1014:	cbz	w9, 11d8 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x1e8>
    1018:	adrp	x22, 0 <_ZN4llvm9DebugFlagE>
    101c:	ldr	x22, [x22]
    1020:	mov	x19, x1
    1024:	mov	x20, x0
    1028:	cbz	w8, 10c4 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0xd4>
    102c:	ldr	w8, [x20, #16]
    1030:	sub	w8, w8, #0x1
    1034:	str	w8, [x20, #16]
    1038:	ldrb	w8, [x22]
    103c:	cbz	w8, 10c4 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0xd4>
    1040:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    1044:	add	x0, x0, #0x0
    1048:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    104c:	tbz	w0, #0, 10c4 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0xd4>
    1050:	bl	0 <_ZN4llvm4dbgsEv>
    1054:	ldp	x9, x8, [x0, #16]
    1058:	sub	x9, x9, x8
    105c:	cmp	x9, #0x19
    1060:	b.hi	1078 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x88>  // b.pmore
    1064:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    1068:	add	x1, x1, #0x0
    106c:	mov	w2, #0x1a                  	// #26
    1070:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1074:	b	109c <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0xac>
    1078:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    107c:	add	x9, x9, #0x0
    1080:	ldur	q0, [x9, #10]
    1084:	ldr	q1, [x9]
    1088:	stur	q0, [x8, #10]
    108c:	str	q1, [x8]
    1090:	ldr	x8, [x0, #24]
    1094:	add	x8, x8, #0x1a
    1098:	str	x8, [x0, #24]
    109c:	ldr	w1, [x19]
    10a0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    10a4:	ldp	x9, x8, [x0, #16]
    10a8:	sub	x9, x9, x8
    10ac:	cmp	x9, #0x26
    10b0:	b.hi	1114 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x124>  // b.pmore
    10b4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    10b8:	add	x1, x1, #0x0
    10bc:	mov	w2, #0x27                  	// #39
    10c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    10c4:	cbz	w21, 113c <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x14c>
    10c8:	ldr	w8, [x20, #20]
    10cc:	sub	w8, w8, #0x1
    10d0:	str	w8, [x20, #20]
    10d4:	ldrb	w8, [x22]
    10d8:	cbz	w8, 113c <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x14c>
    10dc:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    10e0:	add	x0, x0, #0x0
    10e4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    10e8:	tbz	w0, #0, 113c <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x14c>
    10ec:	bl	0 <_ZN4llvm4dbgsEv>
    10f0:	ldp	x9, x8, [x0, #16]
    10f4:	sub	x9, x9, x8
    10f8:	cmp	x9, #0x19
    10fc:	b.hi	114c <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x15c>  // b.pmore
    1100:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    1104:	add	x1, x1, #0x0
    1108:	mov	w2, #0x1a                  	// #26
    110c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1110:	b	1170 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x180>
    1114:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    1118:	add	x9, x9, #0x0
    111c:	ldur	x10, [x9, #31]
    1120:	ldp	q1, q0, [x9]
    1124:	stur	x10, [x8, #31]
    1128:	stp	q1, q0, [x8]
    112c:	ldr	x8, [x0, #24]
    1130:	add	x8, x8, #0x27
    1134:	str	x8, [x0, #24]
    1138:	cbnz	w21, 10c8 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0xd8>
    113c:	ldp	x20, x19, [sp, #32]
    1140:	ldp	x22, x21, [sp, #16]
    1144:	ldp	x29, x30, [sp], #48
    1148:	ret
    114c:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    1150:	add	x9, x9, #0x0
    1154:	ldur	q0, [x9, #10]
    1158:	ldr	q1, [x9]
    115c:	stur	q0, [x8, #10]
    1160:	str	q1, [x8]
    1164:	ldr	x8, [x0, #24]
    1168:	add	x8, x8, #0x1a
    116c:	str	x8, [x0, #24]
    1170:	ldr	w1, [x19]
    1174:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1178:	ldp	x9, x8, [x0, #16]
    117c:	sub	x9, x9, x8
    1180:	cmp	x9, #0x27
    1184:	b.hi	11a4 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x1b4>  // b.pmore
    1188:	ldp	x20, x19, [sp, #32]
    118c:	ldp	x22, x21, [sp, #16]
    1190:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    1194:	add	x1, x1, #0x0
    1198:	mov	w2, #0x28                  	// #40
    119c:	ldp	x29, x30, [sp], #48
    11a0:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    11a4:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    11a8:	add	x9, x9, #0x0
    11ac:	ldr	x10, [x9, #32]
    11b0:	ldp	q1, q0, [x9]
    11b4:	str	x10, [x8, #32]
    11b8:	stp	q1, q0, [x8]
    11bc:	ldr	x8, [x0, #24]
    11c0:	add	x8, x8, #0x28
    11c4:	str	x8, [x0, #24]
    11c8:	ldp	x20, x19, [sp, #32]
    11cc:	ldp	x22, x21, [sp, #16]
    11d0:	ldp	x29, x30, [sp], #48
    11d4:	ret
    11d8:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    11dc:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    11e0:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    11e4:	add	x0, x0, #0x0
    11e8:	add	x1, x1, #0x0
    11ec:	add	x3, x3, #0x0
    11f0:	mov	w2, #0xaf                  	// #175
    11f4:	bl	0 <__assert_fail>

00000000000011f8 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE>:
    11f8:	stp	x29, x30, [sp, #-32]!
    11fc:	stp	x20, x19, [sp, #16]
    1200:	mov	x29, sp
    1204:	ldr	x20, [x1, #8]
    1208:	mov	x19, x0
    120c:	ldr	x8, [x20]
    1210:	ldrb	w9, [x8, #324]
    1214:	cbnz	w9, 1220 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x28>
    1218:	ldrb	w8, [x8, #325]
    121c:	cbz	w8, 12a0 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xa8>
    1220:	mov	x0, x19
    1224:	bl	e14 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE>
    1228:	ldr	w8, [x20, #796]
    122c:	cbz	w8, 12ac <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xb4>
    1230:	ldr	w9, [x19, #56]
    1234:	ldr	x10, [x19, #40]
    1238:	cbz	w9, 1290 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x98>
    123c:	cmn	w8, #0x2
    1240:	b.cs	1304 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x10c>  // b.hs, b.nlast
    1244:	mov	w11, #0x25                  	// #37
    1248:	mul	w12, w8, w11
    124c:	sub	w11, w9, #0x1
    1250:	and	w12, w11, w12
    1254:	add	x15, x10, w12, uxtw #4
    1258:	ldr	w13, [x15]
    125c:	cmp	w13, w8
    1260:	b.eq	1294 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x9c>  // b.none
    1264:	mov	w14, #0x1                   	// #1
    1268:	cmn	w13, #0x1
    126c:	b.eq	1290 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x98>  // b.none
    1270:	add	w12, w12, w14
    1274:	and	w12, w12, w11
    1278:	add	x15, x10, w12, uxtw #4
    127c:	ldr	w13, [x15]
    1280:	add	w14, w14, #0x1
    1284:	cmp	w13, w8
    1288:	b.eq	1294 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x9c>  // b.none
    128c:	b	1268 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x70>
    1290:	add	x15, x10, x9, lsl #4
    1294:	add	x9, x10, x9, lsl #4
    1298:	cmp	x15, x9
    129c:	b.eq	12ac <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xb4>  // b.none
    12a0:	ldp	x20, x19, [sp, #16]
    12a4:	ldp	x29, x30, [sp], #32
    12a8:	ret
    12ac:	ldr	w9, [x19, #68]
    12b0:	cmp	w8, w9
    12b4:	b.eq	12d4 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xdc>  // b.none
    12b8:	ldr	w9, [x19, #76]
    12bc:	cmp	w8, w9
    12c0:	b.eq	12e4 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xec>  // b.none
    12c4:	ldr	w9, [x19, #72]
    12c8:	cmp	w8, w9
    12cc:	b.ne	12a0 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xa8>  // b.any
    12d0:	b	12f4 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xfc>
    12d4:	str	wzr, [x19, #68]
    12d8:	ldr	w9, [x19, #76]
    12dc:	cmp	w8, w9
    12e0:	b.ne	12c4 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xcc>  // b.any
    12e4:	str	wzr, [x19, #76]
    12e8:	ldr	w9, [x19, #72]
    12ec:	cmp	w8, w9
    12f0:	b.ne	12a0 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xa8>  // b.any
    12f4:	str	wzr, [x19, #72]
    12f8:	ldp	x20, x19, [sp, #16]
    12fc:	ldp	x29, x30, [sp], #32
    1300:	ret
    1304:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    1308:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    130c:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    1310:	add	x0, x0, #0x0
    1314:	add	x1, x1, #0x0
    1318:	add	x3, x3, #0x0
    131c:	mov	w2, #0x252                 	// #594
    1320:	bl	0 <__assert_fail>

0000000000001324 <_ZN4llvm3mca10LSUnitBaseD1Ev>:
    1324:	stp	x29, x30, [sp, #-48]!
    1328:	stp	x22, x21, [sp, #16]
    132c:	stp	x20, x19, [sp, #32]
    1330:	mov	x29, sp
    1334:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    1338:	ldr	w8, [x0, #56]
    133c:	ldr	x9, [x9]
    1340:	mov	x19, x0
    1344:	add	x9, x9, #0x10
    1348:	str	x9, [x0]
    134c:	cbz	w8, 13a4 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x80>
    1350:	ldr	x9, [x19, #40]
    1354:	lsl	x21, x8, #4
    1358:	add	x22, x9, #0x8
    135c:	b	1378 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x54>
    1360:	mov	x0, x20
    1364:	bl	0 <_ZdlPv>
    1368:	str	xzr, [x22]
    136c:	subs	x21, x21, #0x10
    1370:	add	x22, x22, #0x10
    1374:	b.eq	13a4 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x80>  // b.none
    1378:	ldur	w8, [x22, #-8]
    137c:	cmn	w8, #0x3
    1380:	b.hi	136c <_ZN4llvm3mca10LSUnitBaseD1Ev+0x48>  // b.pmore
    1384:	ldr	x20, [x22]
    1388:	cbz	x20, 1368 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x44>
    138c:	ldr	x0, [x20, #24]
    1390:	add	x8, x20, #0x28
    1394:	cmp	x0, x8
    1398:	b.eq	1360 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x3c>  // b.none
    139c:	bl	0 <free>
    13a0:	b	1360 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x3c>
    13a4:	ldr	x0, [x19, #40]
    13a8:	bl	0 <_ZdlPv>
    13ac:	ldr	x8, [x19, #32]
    13b0:	mov	x0, x19
    13b4:	add	x8, x8, #0x1
    13b8:	str	x8, [x19, #32]
    13bc:	ldp	x20, x19, [sp, #32]
    13c0:	ldp	x22, x21, [sp, #16]
    13c4:	ldp	x29, x30, [sp], #48
    13c8:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca10LSUnitBase17createMemoryGroupEv:

0000000000000000 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	mov	x19, x0
  14:	mov	w0, #0x68                  	// #104
  18:	bl	0 <_Znwm>
  1c:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>
  20:	ldr	d0, [x9]
  24:	add	x8, x0, #0x28
  28:	stp	xzr, xzr, [x0]
  2c:	str	xzr, [x0, #72]
  30:	str	wzr, [x0, #80]
  34:	str	wzr, [x0, #88]
  38:	str	xzr, [x0, #96]
  3c:	stp	xzr, x8, [x0, #16]
  40:	str	d0, [x0, #32]
  44:	ldr	w8, [x19, #64]
  48:	str	x0, [sp, #8]
  4c:	str	w8, [sp]
  50:	ldr	w10, [x19, #56]
  54:	cbz	w10, c8 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv+0xc8>
  58:	cmn	w8, #0x2
  5c:	b.cs	13c <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv+0x13c>  // b.hs, b.nlast
  60:	ldr	x9, [x19, #40]
  64:	mov	w11, #0x25                  	// #37
  68:	mul	w11, w8, w11
  6c:	sub	w10, w10, #0x1
  70:	and	w12, w10, w11
  74:	add	x11, x9, w12, uxtw #4
  78:	ldr	w14, [x11]
  7c:	mov	x20, x0
  80:	cmp	w8, w14
  84:	b.eq	f8 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv+0xf8>  // b.none
  88:	mov	x13, xzr
  8c:	mov	w16, #0x1                   	// #1
  90:	mov	w15, #0xfffffffe            	// #-2
  94:	cmn	w14, #0x1
  98:	b.eq	130 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv+0x130>  // b.none
  9c:	cmp	x13, #0x0
  a0:	add	w12, w12, w16
  a4:	ccmp	w14, w15, #0x0, eq  // eq = none
  a8:	and	w12, w12, w10
  ac:	csel	x13, x13, x11, ne  // ne = any
  b0:	add	x11, x9, w12, uxtw #4
  b4:	ldr	w14, [x11]
  b8:	add	w16, w16, #0x1
  bc:	cmp	w8, w14
  c0:	b.eq	f8 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv+0xf8>  // b.none
  c4:	b	94 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv+0x94>
  c8:	mov	x3, xzr
  cc:	add	x0, x19, #0x20
  d0:	mov	x1, sp
  d4:	mov	x2, sp
  d8:	bl	0 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>
  dc:	ldr	w8, [sp]
  e0:	str	w8, [x0]
  e4:	ldr	x8, [sp, #8]
  e8:	str	xzr, [sp, #8]
  ec:	str	x8, [x0, #8]
  f0:	ldr	x20, [sp, #8]
  f4:	cbz	x20, 114 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv+0x114>
  f8:	ldr	x0, [x20, #24]
  fc:	add	x8, x20, #0x28
 100:	cmp	x0, x8
 104:	b.eq	10c <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv+0x10c>  // b.none
 108:	bl	0 <free>
 10c:	mov	x0, x20
 110:	bl	0 <_ZdlPv>
 114:	ldr	w0, [x19, #64]
 118:	add	w8, w0, #0x1
 11c:	str	w8, [x19, #64]
 120:	ldp	x20, x19, [sp, #32]
 124:	ldp	x29, x30, [sp, #16]
 128:	add	sp, sp, #0x30
 12c:	ret
 130:	cmp	x13, #0x0
 134:	csel	x3, x11, x13, eq  // eq = none
 138:	b	cc <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv+0xcc>
 13c:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>
 140:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>
 144:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>
 148:	add	x0, x0, #0x0
 14c:	add	x1, x1, #0x0
 150:	add	x3, x3, #0x0
 154:	mov	w2, #0x252                 	// #594
 158:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca10LSUnitBase8getGroupEj:

0000000000000000 <_ZN4llvm3mca10LSUnitBase8getGroupEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	w1, f0 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xf0>
   c:	ldr	w9, [x0, #56]
  10:	ldr	x8, [x0, #40]
  14:	cbz	w9, 6c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x6c>
  18:	cmn	w1, #0x2
  1c:	b.cs	110 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x110>  // b.hs, b.nlast
  20:	mov	w10, #0x25                  	// #37
  24:	mul	w11, w1, w10
  28:	sub	w10, w9, #0x1
  2c:	and	w11, w10, w11
  30:	add	x14, x8, w11, uxtw #4
  34:	ldr	w12, [x14]
  38:	cmp	w12, w1
  3c:	b.eq	70 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x70>  // b.none
  40:	mov	w13, #0x1                   	// #1
  44:	cmn	w12, #0x1
  48:	b.eq	6c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x6c>  // b.none
  4c:	add	w11, w11, w13
  50:	and	w11, w11, w10
  54:	add	x14, x8, w11, uxtw #4
  58:	ldr	w12, [x14]
  5c:	add	w13, w13, #0x1
  60:	cmp	w12, w1
  64:	b.eq	70 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x70>  // b.none
  68:	b	44 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x44>
  6c:	add	x14, x8, x9, lsl #4
  70:	add	x10, x8, x9, lsl #4
  74:	cmp	x14, x10
  78:	b.eq	f0 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xf0>  // b.none
  7c:	cbz	w9, e0 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xe0>
  80:	cmn	w1, #0x2
  84:	b.cs	110 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x110>  // b.hs, b.nlast
  88:	mov	w11, #0x25                  	// #37
  8c:	mul	w11, w1, w11
  90:	sub	w9, w9, #0x1
  94:	and	w11, w9, w11
  98:	add	x13, x8, w11, uxtw #4
  9c:	ldr	w12, [x13]
  a0:	cmp	w12, w1
  a4:	b.ne	b4 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xb4>  // b.any
  a8:	ldr	x0, [x13, #8]
  ac:	ldp	x29, x30, [sp], #16
  b0:	ret
  b4:	mov	w14, #0x1                   	// #1
  b8:	cmn	w12, #0x1
  bc:	b.eq	e0 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xe0>  // b.none
  c0:	add	w11, w11, w14
  c4:	and	w11, w11, w9
  c8:	add	x13, x8, w11, uxtw #4
  cc:	ldr	w12, [x13]
  d0:	add	w14, w14, #0x1
  d4:	cmp	w12, w1
  d8:	b.eq	a8 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xa8>  // b.none
  dc:	b	b8 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xb8>
  e0:	mov	x13, x10
  e4:	ldr	x0, [x13, #8]
  e8:	ldp	x29, x30, [sp], #16
  ec:	ret
  f0:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  f4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  f8:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x11c                 	// #284
 10c:	bl	0 <__assert_fail>
 110:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 114:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 118:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 11c:	add	x0, x0, #0x0
 120:	add	x1, x1, #0x0
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x252                 	// #594
 12c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_:

0000000000000000 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x1]
  14:	add	w8, w8, #0x1
  18:	str	w8, [x1]
  1c:	ldr	w9, [x0, #12]
  20:	ldr	w10, [x0, #20]
  24:	subs	w9, w9, w10
  28:	b.eq	fc <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0xfc>  // b.none
  2c:	ldr	w10, [x0, #16]
  30:	mov	x20, x1
  34:	mov	x19, x0
  38:	cbz	w10, 7c <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x7c>
  3c:	cmp	w10, w9
  40:	b.ne	7c <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x7c>  // b.any
  44:	ldr	w9, [x20, #8]
  48:	cmp	w9, w8
  4c:	b.eq	11c <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x11c>  // b.none
  50:	ldr	w8, [x20, #4]
  54:	ldr	w9, [x20, #80]
  58:	add	w8, w8, #0x1
  5c:	str	w8, [x20, #4]
  60:	ldr	x8, [x19, #96]
  64:	ldr	w8, [x8, #788]
  68:	cmp	w9, w8
  6c:	b.cs	7c <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x7c>  // b.hs, b.nlast
  70:	ldr	w9, [x19, #88]
  74:	str	w8, [x20, #80]
  78:	str	w9, [x20, #72]
  7c:	ldp	w8, w9, [x19, #32]
  80:	add	x21, x19, #0x18
  84:	cmp	w8, w9
  88:	b.cs	b4 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0xb4>  // b.hs, b.nlast
  8c:	ldr	x10, [x21]
  90:	cmp	w8, w9
  94:	str	x20, [x10, w8, uxtw #3]
  98:	b.cs	dc <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0xdc>  // b.hs, b.nlast
  9c:	add	w8, w8, #0x1
  a0:	str	w8, [x19, #32]
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldr	x21, [sp, #16]
  ac:	ldp	x29, x30, [sp], #48
  b0:	ret
  b4:	add	x1, x21, #0x10
  b8:	mov	w3, #0x8                   	// #8
  bc:	mov	x0, x21
  c0:	mov	x2, xzr
  c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  c8:	ldp	w8, w9, [x19, #32]
  cc:	ldr	x10, [x21]
  d0:	cmp	w8, w9
  d4:	str	x20, [x10, w8, uxtw #3]
  d8:	b.cc	9c <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x9c>  // b.lo, b.ul, b.last
  dc:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  e0:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  e4:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x43                  	// #67
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
 100:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
 104:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x52                  	// #82
 118:	bl	0 <__assert_fail>
 11c:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
 120:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
 124:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0x68                  	// #104
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca6LSUnitD0Ev:

0000000000000000 <_ZN4llvm3mca6LSUnitD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x9, 0 <_ZN4llvm3mca6LSUnitD0Ev>
  14:	ldr	w8, [x0, #56]
  18:	ldr	x9, [x9]
  1c:	mov	x19, x0
  20:	add	x9, x9, #0x10
  24:	str	x9, [x0]
  28:	cbz	w8, 80 <_ZN4llvm3mca6LSUnitD0Ev+0x80>
  2c:	ldr	x9, [x19, #40]
  30:	lsl	x21, x8, #4
  34:	add	x22, x9, #0x8
  38:	b	54 <_ZN4llvm3mca6LSUnitD0Ev+0x54>
  3c:	mov	x0, x20
  40:	bl	0 <_ZdlPv>
  44:	str	xzr, [x22]
  48:	subs	x21, x21, #0x10
  4c:	add	x22, x22, #0x10
  50:	b.eq	80 <_ZN4llvm3mca6LSUnitD0Ev+0x80>  // b.none
  54:	ldur	w8, [x22, #-8]
  58:	cmn	w8, #0x3
  5c:	b.hi	48 <_ZN4llvm3mca6LSUnitD0Ev+0x48>  // b.pmore
  60:	ldr	x20, [x22]
  64:	cbz	x20, 44 <_ZN4llvm3mca6LSUnitD0Ev+0x44>
  68:	ldr	x0, [x20, #24]
  6c:	add	x8, x20, #0x28
  70:	cmp	x0, x8
  74:	b.eq	3c <_ZN4llvm3mca6LSUnitD0Ev+0x3c>  // b.none
  78:	bl	0 <free>
  7c:	b	3c <_ZN4llvm3mca6LSUnitD0Ev+0x3c>
  80:	ldr	x0, [x19, #40]
  84:	bl	0 <_ZdlPv>
  88:	ldr	x8, [x19, #32]
  8c:	mov	x0, x19
  90:	add	x8, x8, #0x1
  94:	str	x8, [x19, #32]
  98:	bl	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
  9c:	mov	x0, x19
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldp	x22, x21, [sp, #16]
  a8:	ldp	x29, x30, [sp], #48
  ac:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1, #8]
  10:	mov	x19, x1
  14:	ldr	w9, [x8, #796]
  18:	str	w9, [x29, #28]
  1c:	ldr	w8, [x0, #56]
  20:	cbz	w8, 90 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x90>
  24:	cmn	w9, #0x2
  28:	b.cs	d8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xd8>  // b.hs, b.nlast
  2c:	ldr	x10, [x0, #40]
  30:	mov	w11, #0x25                  	// #37
  34:	mul	w12, w9, w11
  38:	sub	w11, w8, #0x1
  3c:	and	w12, w11, w12
  40:	add	x8, x10, w12, uxtw #4
  44:	ldr	w14, [x8]
  48:	cmp	w9, w14
  4c:	b.eq	b4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xb4>  // b.none
  50:	mov	x13, xzr
  54:	mov	w16, #0x1                   	// #1
  58:	mov	w15, #0xfffffffe            	// #-2
  5c:	cmn	w14, #0x1
  60:	b.eq	cc <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xcc>  // b.none
  64:	cmp	x13, #0x0
  68:	add	w12, w12, w16
  6c:	ccmp	w14, w15, #0x0, eq  // eq = none
  70:	and	w12, w12, w11
  74:	csel	x13, x13, x8, ne  // ne = any
  78:	add	x8, x10, w12, uxtw #4
  7c:	ldr	w14, [x8]
  80:	add	w16, w16, #0x1
  84:	cmp	w9, w14
  88:	b.eq	b4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xb4>  // b.none
  8c:	b	5c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5c>
  90:	mov	x3, xzr
  94:	add	x0, x0, #0x20
  98:	add	x1, x29, #0x1c
  9c:	add	x2, x29, #0x1c
  a0:	bl	0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  a4:	ldr	w9, [x29, #28]
  a8:	mov	x8, x0
  ac:	str	xzr, [x0, #8]
  b0:	str	w9, [x0]
  b4:	ldr	x0, [x8, #8]
  b8:	mov	x1, x19
  bc:	bl	0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  c0:	ldr	x19, [sp, #16]
  c4:	ldp	x29, x30, [sp], #32
  c8:	ret
  cc:	cmp	x13, #0x0
  d0:	csel	x3, x8, x13, eq  // eq = none
  d4:	b	94 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x94>
  d8:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  dc:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  e0:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x252                 	// #594
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	110 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x110>  // b.plast
  54:	cbz	x3, 19c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x19c>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	w8, [x3]
  68:	cmn	w8, #0x1
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 19c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x19c>
  a0:	ldr	w8, [x20]
  a4:	cmn	w8, #0x2
  a8:	b.cs	1bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x1bc>  // b.hs, b.nlast
  ac:	ldr	x9, [x19, #8]
  b0:	mov	w11, #0x25                  	// #37
  b4:	mul	w11, w8, w11
  b8:	sub	w10, w10, #0x1
  bc:	and	w11, w11, w10
  c0:	add	x3, x9, w11, uxtw #4
  c4:	ldr	w13, [x3]
  c8:	cmp	w8, w13
  cc:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x54>  // b.none
  d0:	mov	x12, xzr
  d4:	mov	w15, #0x1                   	// #1
  d8:	mov	w14, #0xfffffffe            	// #-2
  dc:	cmn	w13, #0x1
  e0:	b.eq	190 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x190>  // b.none
  e4:	cmp	x12, #0x0
  e8:	add	w11, w11, w15
  ec:	ccmp	w13, w14, #0x0, eq  // eq = none
  f0:	and	w11, w11, w10
  f4:	csel	x12, x12, x3, ne  // ne = any
  f8:	add	x3, x9, w11, uxtw #4
  fc:	ldr	w13, [x3]
 100:	add	w15, w15, #0x1
 104:	cmp	w8, w13
 108:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x54>  // b.none
 10c:	b	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0xdc>
 110:	mov	x0, x19
 114:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
 118:	ldr	w10, [x19, #24]
 11c:	cbz	w10, 19c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x19c>
 120:	ldr	w8, [x20]
 124:	cmn	w8, #0x2
 128:	b.cs	1bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x1bc>  // b.hs, b.nlast
 12c:	ldr	x9, [x19, #8]
 130:	mov	w11, #0x25                  	// #37
 134:	mul	w11, w8, w11
 138:	sub	w10, w10, #0x1
 13c:	and	w11, w11, w10
 140:	add	x3, x9, w11, uxtw #4
 144:	ldr	w13, [x3]
 148:	cmp	w8, w13
 14c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x54>  // b.none
 150:	mov	x12, xzr
 154:	mov	w15, #0x1                   	// #1
 158:	mov	w14, #0xfffffffe            	// #-2
 15c:	cmn	w13, #0x1
 160:	b.eq	190 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x190>  // b.none
 164:	cmp	x12, #0x0
 168:	add	w11, w11, w15
 16c:	ccmp	w13, w14, #0x0, eq  // eq = none
 170:	and	w11, w11, w10
 174:	csel	x12, x12, x3, ne  // ne = any
 178:	add	x3, x9, w11, uxtw #4
 17c:	ldr	w13, [x3]
 180:	add	w15, w15, #0x1
 184:	cmp	w8, w13
 188:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x54>  // b.none
 18c:	b	15c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x15c>
 190:	cmp	x12, #0x0
 194:	csel	x3, x3, x12, eq  // eq = none
 198:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x54>
 19c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
 1a0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
 1a4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
 1a8:	add	x0, x0, #0x0
 1ac:	add	x1, x1, #0x0
 1b0:	add	x3, x3, #0x0
 1b4:	mov	w2, #0x22f                 	// #559
 1b8:	bl	0 <__assert_fail>
 1bc:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
 1c0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
 1c4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
 1c8:	add	x0, x0, #0x0
 1cc:	add	x1, x1, #0x0
 1d0:	add	x3, x3, #0x0
 1d4:	mov	w2, #0x252                 	// #594
 1d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	w13, #0xffffffff            	// #-1
  c0:	mov	x14, x11
  c4:	stur	w13, [x12, #-16]
  c8:	str	w13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	w10, #0xffffffff            	// #-1
  ec:	str	w10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w8, [x0, #24]
  18:	str	xzr, [x0, #16]
  1c:	sub	w9, w8, #0x1
  20:	tst	w8, w9
  24:	b.ne	1b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x1b4>  // b.any
  28:	mov	x19, x2
  2c:	mov	x20, x1
  30:	mov	x21, x0
  34:	cbz	w8, 98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x98>
  38:	ldr	x9, [x21, #8]
  3c:	lsl	x10, x8, #4
  40:	subs	x10, x10, #0x10
  44:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x80>  // b.none
  48:	lsr	x10, x10, #4
  4c:	add	x11, x10, #0x1
  50:	and	x12, x11, #0x1ffffffffffffffe
  54:	add	x13, x9, #0x10
  58:	add	x10, x9, x12, lsl #4
  5c:	mov	w14, #0xffffffff            	// #-1
  60:	mov	x15, x12
  64:	stur	w14, [x13, #-16]
  68:	str	w14, [x13], #32
  6c:	subs	x15, x15, #0x2
  70:	b.ne	64 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x64>  // b.any
  74:	cmp	x11, x12
  78:	b.ne	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x84>  // b.any
  7c:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x98>
  80:	mov	x10, x9
  84:	add	x8, x9, x8, lsl #4
  88:	mov	w9, #0xffffffff            	// #-1
  8c:	str	w9, [x10], #16
  90:	cmp	x8, x10
  94:	b.ne	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x8c>  // b.any
  98:	cmp	x20, x19
  9c:	b.eq	180 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x180>  // b.none
  a0:	mov	w23, #0x25                  	// #37
  a4:	mov	w24, #0xfffffffe            	// #-2
  a8:	b	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xc4>
  ac:	mov	x0, x22
  b0:	bl	0 <_ZdlPv>
  b4:	str	xzr, [x20, #8]
  b8:	add	x20, x20, #0x10
  bc:	cmp	x20, x19
  c0:	b.eq	180 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x180>  // b.none
  c4:	ldr	w8, [x20]
  c8:	cmn	w8, #0x3
  cc:	b.hi	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xb8>  // b.pmore
  d0:	ldr	w10, [x21, #24]
  d4:	cbz	w10, 140 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x140>
  d8:	ldr	x9, [x21, #8]
  dc:	mul	w11, w8, w23
  e0:	sub	w10, w10, #0x1
  e4:	and	w12, w10, w11
  e8:	add	x11, x9, w12, uxtw #4
  ec:	ldr	w14, [x11]
  f0:	cmp	w8, w14
  f4:	b.eq	194 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x194>  // b.none
  f8:	mov	x13, xzr
  fc:	mov	w15, #0x1                   	// #1
 100:	cmn	w14, #0x1
 104:	b.eq	134 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x134>  // b.none
 108:	cmp	x13, #0x0
 10c:	add	w12, w12, w15
 110:	ccmp	w14, w24, #0x0, eq  // eq = none
 114:	and	w12, w12, w10
 118:	csel	x13, x13, x11, ne  // ne = any
 11c:	add	x11, x9, w12, uxtw #4
 120:	ldr	w14, [x11]
 124:	add	w15, w15, #0x1
 128:	cmp	w8, w14
 12c:	b.ne	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x100>  // b.any
 130:	b	194 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x194>
 134:	cmp	x13, #0x0
 138:	csel	x9, x11, x13, eq  // eq = none
 13c:	b	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x144>
 140:	mov	x9, xzr
 144:	str	w8, [x9]
 148:	ldr	x8, [x20, #8]
 14c:	str	xzr, [x20, #8]
 150:	str	x8, [x9, #8]
 154:	ldr	w8, [x21, #16]
 158:	add	w8, w8, #0x1
 15c:	str	w8, [x21, #16]
 160:	ldr	x22, [x20, #8]
 164:	cbz	x22, b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xb4>
 168:	ldr	x0, [x22, #24]
 16c:	add	x8, x22, #0x28
 170:	cmp	x0, x8
 174:	b.eq	ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xac>  // b.none
 178:	bl	0 <free>
 17c:	b	ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xac>
 180:	ldp	x20, x19, [sp, #48]
 184:	ldp	x22, x21, [sp, #32]
 188:	ldp	x24, x23, [sp, #16]
 18c:	ldp	x29, x30, [sp], #64
 190:	ret
 194:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 198:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 19c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 1a0:	add	x0, x0, #0x0
 1a4:	add	x1, x1, #0x0
 1a8:	add	x3, x3, #0x0
 1ac:	mov	w2, #0x17a                 	// #378
 1b0:	bl	0 <__assert_fail>
 1b4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 1b8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 1bc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 1c0:	add	x0, x0, #0x0
 1c4:	add	x1, x1, #0x0
 1c8:	add	x3, x3, #0x0
 1cc:	mov	w2, #0x15c                 	// #348
 1d0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #16]
   c:	cbz	w9, 24 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x24>
  10:	ldr	w8, [x0, #12]
  14:	ldr	w10, [x0, #20]
  18:	sub	w8, w8, w10
  1c:	cmp	w9, w8
  20:	b.eq	110 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x110>  // b.none
  24:	ldr	x8, [x0, #96]
  28:	add	w9, w9, #0x1
  2c:	str	w9, [x0, #16]
  30:	cbz	x8, 60 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x60>
  34:	ldr	x10, [x1, #8]
  38:	ldr	w11, [x8, #788]
  3c:	ldr	w12, [x10, #788]
  40:	cmp	w11, w12
  44:	b.ge	58 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x58>  // b.tcont
  48:	ldr	w8, [x1]
  4c:	str	x10, [x0, #96]
  50:	str	w8, [x0, #88]
  54:	mov	x8, x10
  58:	cbnz	w9, 74 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x74>
  5c:	b	e8 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xe8>
  60:	ldr	w8, [x1]
  64:	str	w8, [x0, #88]
  68:	ldr	x8, [x1, #8]
  6c:	str	x8, [x0, #96]
  70:	cbz	w9, e8 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xe8>
  74:	ldr	w10, [x0, #12]
  78:	ldr	w11, [x0, #20]
  7c:	sub	w10, w10, w11
  80:	cmp	w9, w10
  84:	b.ne	e8 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xe8>  // b.any
  88:	ldr	w10, [x0, #32]
  8c:	cbz	w10, e8 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xe8>
  90:	ldr	x9, [x0, #24]
  94:	lsl	x10, x10, #3
  98:	b	a8 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xa8>
  9c:	subs	x10, x10, #0x8
  a0:	add	x9, x9, #0x8
  a4:	b.eq	e8 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xe8>  // b.none
  a8:	ldr	x11, [x9]
  ac:	ldr	w12, [x11, #8]
  b0:	ldr	w13, [x11]
  b4:	cmp	w12, w13
  b8:	b.eq	f0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xf0>  // b.none
  bc:	ldr	w12, [x11, #4]
  c0:	ldr	w13, [x11, #80]
  c4:	add	w12, w12, #0x1
  c8:	str	w12, [x11, #4]
  cc:	ldr	w12, [x8, #788]
  d0:	cmp	w13, w12
  d4:	b.cs	9c <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x9c>  // b.hs, b.nlast
  d8:	ldr	w13, [x0, #88]
  dc:	str	w12, [x11, #80]
  e0:	str	w13, [x11, #72]
  e4:	b	9c <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x9c>
  e8:	ldp	x29, x30, [sp], #16
  ec:	ret
  f0:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>
  f4:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>
  f8:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x68                  	// #104
 10c:	bl	0 <__assert_fail>
 110:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>
 114:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>
 118:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>
 11c:	add	x0, x0, #0x0
 120:	add	x1, x1, #0x0
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x79                  	// #121
 12c:	bl	0 <__assert_fail>

RegisterFile.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	str	x23, [sp, #16]
       8:	stp	x22, x21, [sp, #32]
       c:	stp	x20, x19, [sp, #48]
      10:	mov	x29, sp
      14:	adrp	x8, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
      18:	ldr	d0, [x8]
      1c:	adrp	x8, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
      20:	ldr	x8, [x8]
      24:	mov	w19, w3
      28:	str	d0, [x0, #24]
      2c:	mov	x22, x2
      30:	add	x8, x8, #0x10
      34:	stp	x8, x2, [x0]
      38:	add	x8, x0, #0x20
      3c:	str	x8, [x0, #16]
      40:	ldr	w23, [x2, #8]
      44:	mov	x20, x1
      48:	mov	x21, x0
      4c:	stp	xzr, xzr, [x0, #112]
      50:	str	xzr, [x0, #128]
      54:	cbz	w23, 74 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0x74>
      58:	lsl	x0, x23, #5
      5c:	bl	0 <_Znwm>
      60:	add	x8, x0, x23, lsl #5
      64:	stp	x0, x0, [x21, #112]
      68:	str	x8, [x21, #128]
      6c:	cbnz	w23, 88 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0x88>
      70:	b	c4 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0xc4>
      74:	mov	x0, xzr
      78:	add	x8, x0, x23, lsl #5
      7c:	stp	x0, x0, [x21, #112]
      80:	str	x8, [x21, #128]
      84:	cbz	w23, c4 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0xc4>
      88:	adrp	x8, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
      8c:	ldr	x8, [x8]
      90:	mov	x9, #0x100000000           	// #4294967296
      94:	ldr	w8, [x8]
      98:	str	w8, [x0]
      9c:	stp	xzr, x9, [x0, #8]
      a0:	str	wzr, [x0, #24]
      a4:	strb	wzr, [x0, #28]
      a8:	ldrb	w10, [x29, #30]
      ac:	ldrh	w11, [x29, #28]
      b0:	subs	x23, x23, #0x1
      b4:	strb	w10, [x0, #31]
      b8:	sturh	w11, [x0, #29]
      bc:	add	x0, x0, #0x20
      c0:	b.ne	98 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0x98>  // b.any
      c4:	str	x0, [x21, #120]
      c8:	ldr	w8, [x22, #8]
      cc:	str	w8, [x21, #144]
      d0:	cbz	w8, 114 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0x114>
      d4:	cmp	w8, #0x40
      d8:	add	x0, x21, #0x88
      dc:	b.hi	e8 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0xe8>  // b.pmore
      e0:	str	xzr, [x0]
      e4:	b	f4 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0xf4>
      e8:	mov	x1, xzr
      ec:	mov	w2, wzr
      f0:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
      f4:	mov	x0, x21
      f8:	mov	x1, x20
      fc:	mov	w2, w19
     100:	ldp	x20, x19, [sp, #48]
     104:	ldp	x22, x21, [sp, #32]
     108:	ldr	x23, [sp, #16]
     10c:	ldp	x29, x30, [sp], #64
     110:	b	134 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj>
     114:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     118:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     11c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     120:	add	x0, x0, #0x0
     124:	add	x1, x1, #0x0
     128:	add	x3, x3, #0x0
     12c:	mov	w2, #0x117                 	// #279
     130:	bl	0 <__assert_fail>

0000000000000134 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj>:
     134:	stp	x29, x30, [sp, #-64]!
     138:	str	x23, [sp, #16]
     13c:	stp	x22, x21, [sp, #32]
     140:	stp	x20, x19, [sp, #48]
     144:	mov	x29, sp
     148:	ldp	w8, w9, [x0, #24]
     14c:	mov	w21, w2
     150:	mov	x20, x1
     154:	mov	x19, x0
     158:	cmp	w8, w9
     15c:	add	x22, x0, #0x10
     160:	b.cs	1f8 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xc4>  // b.hs, b.nlast
     164:	ldr	x10, [x22]
     168:	mov	w11, #0x14                  	// #20
     16c:	cmp	w8, w9
     170:	umaddl	x9, w8, w11, x10
     174:	str	w21, [x9]
     178:	stur	xzr, [x9, #4]
     17c:	stur	xzr, [x9, #9]
     180:	b.cs	234 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x100>  // b.hs, b.nlast
     184:	add	w8, w8, #0x1
     188:	str	w8, [x19, #24]
     18c:	ldr	x20, [x20, #64]
     190:	cbz	x20, 1e4 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xb0>
     194:	ldr	w8, [x20, #16]
     198:	cmp	w8, #0x2
     19c:	b.cc	1e4 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xb0>  // b.lo, b.ul, b.last
     1a0:	mov	x21, xzr
     1a4:	sub	x22, x8, #0x1
     1a8:	mov	w23, #0xc                   	// #12
     1ac:	ldr	x8, [x20, #8]
     1b0:	add	x8, x8, x21
     1b4:	ldrh	w9, [x8, #32]
     1b8:	cbz	w9, 214 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xe0>
     1bc:	ldr	x9, [x20, #24]
     1c0:	ldrh	w10, [x8, #36]
     1c4:	ldrh	w3, [x8, #34]
     1c8:	add	x1, x8, #0x18
     1cc:	mov	x0, x19
     1d0:	madd	x2, x10, x23, x9
     1d4:	bl	254 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE>
     1d8:	subs	x22, x22, #0x1
     1dc:	add	x21, x21, #0x18
     1e0:	b.ne	1ac <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x78>  // b.any
     1e4:	ldp	x20, x19, [sp, #48]
     1e8:	ldp	x22, x21, [sp, #32]
     1ec:	ldr	x23, [sp, #16]
     1f0:	ldp	x29, x30, [sp], #64
     1f4:	ret
     1f8:	add	x1, x22, #0x10
     1fc:	mov	w3, #0x14                  	// #20
     200:	mov	x0, x22
     204:	mov	x2, xzr
     208:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     20c:	ldp	w8, w9, [x19, #24]
     210:	b	164 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x30>
     214:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     218:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     21c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     220:	add	x0, x0, #0x0
     224:	add	x1, x1, #0x0
     228:	add	x3, x3, #0x0
     22c:	mov	w2, #0x32                  	// #50
     230:	bl	0 <__assert_fail>
     234:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     238:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     23c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     240:	add	x0, x0, #0x0
     244:	add	x1, x1, #0x0
     248:	add	x3, x3, #0x0
     24c:	mov	w2, #0x43                  	// #67
     250:	bl	0 <__assert_fail>

0000000000000254 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE>:
     254:	sub	sp, sp, #0x70
     258:	stp	x29, x30, [sp, #16]
     25c:	stp	x28, x27, [sp, #32]
     260:	stp	x26, x25, [sp, #48]
     264:	stp	x24, x23, [sp, #64]
     268:	stp	x22, x21, [sp, #80]
     26c:	stp	x20, x19, [sp, #96]
     270:	add	x29, sp, #0x10
     274:	ldp	w24, w9, [x0, #24]
     278:	mov	x22, x3
     27c:	mov	x19, x2
     280:	mov	x21, x1
     284:	mov	x27, x0
     288:	cmp	w24, w9
     28c:	add	x23, x0, #0x10
     290:	mov	w8, w24
     294:	b.cs	58c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x338>  // b.hs, b.nlast
     298:	ldr	x10, [x23]
     29c:	ldrh	w11, [x21, #8]
     2a0:	ldrh	w12, [x21, #14]
     2a4:	ldrb	w13, [x21, #16]
     2a8:	mov	w14, #0x14                  	// #20
     2ac:	cmp	w8, w9
     2b0:	umaddl	x9, w8, w14, x10
     2b4:	stp	w11, wzr, [x9]
     2b8:	stp	w12, wzr, [x9, #8]
     2bc:	strb	w13, [x9, #16]
     2c0:	b.cs	608 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x3b4>  // b.hs, b.nlast
     2c4:	add	w8, w8, #0x1
     2c8:	str	w8, [x27, #24]
     2cc:	cbz	x22, 56c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x318>
     2d0:	ldr	x8, [x27, #8]
     2d4:	mov	w9, #0xc                   	// #12
     2d8:	mov	w25, #0x18                  	// #24
     2dc:	madd	x9, x22, x9, x19
     2e0:	str	x9, [sp]
     2e4:	b	2f8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xa4>
     2e8:	ldr	x9, [sp]
     2ec:	add	x19, x19, #0xc
     2f0:	cmp	x19, x9
     2f4:	b.eq	56c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x318>  // b.none
     2f8:	ldr	w9, [x19]
     2fc:	ldr	w10, [x8, #32]
     300:	cmp	w10, w9
     304:	b.ls	5e8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x394>  // b.plast
     308:	ldr	x10, [x8, #24]
     30c:	add	x10, x10, x9, lsl #5
     310:	ldrh	w9, [x10, #20]
     314:	cbz	x9, 2e8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x94>
     318:	ldr	x28, [x10]
     31c:	add	x3, x28, x9, lsl #1
     320:	str	x3, [sp, #8]
     324:	b	334 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xe0>
     328:	add	x28, x28, #0x2
     32c:	cmp	x28, x3
     330:	b.eq	2e8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x94>  // b.none
     334:	ldrh	w22, [x28]
     338:	ldr	x8, [x27, #112]
     33c:	add	x26, x8, x22, lsl #5
     340:	mov	x21, x26
     344:	ldr	w8, [x21, #16]!
     348:	cmp	w8, #0x0
     34c:	ccmp	w8, w24, #0x4, ne  // ne = any
     350:	b.eq	4a4 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x250>  // b.none
     354:	bl	0 <_ZN4llvm4errsEv>
     358:	ldp	x9, x8, [x0, #16]
     35c:	mov	x23, x0
     360:	sub	x9, x9, x8
     364:	cmp	x9, #0x11
     368:	b.hi	388 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x134>  // b.pmore
     36c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     370:	mov	w2, #0x12                  	// #18
     374:	mov	x0, x23
     378:	add	x1, x1, #0x0
     37c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     380:	mov	x23, x0
     384:	b	3ac <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x158>
     388:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     38c:	add	x9, x9, #0x0
     390:	ldr	q0, [x9]
     394:	mov	w9, #0x2072                	// #8306
     398:	strh	w9, [x8, #16]
     39c:	str	q0, [x8]
     3a0:	ldr	x8, [x23, #24]
     3a4:	add	x8, x8, #0x12
     3a8:	str	x8, [x23, #24]
     3ac:	ldr	x8, [x27, #8]
     3b0:	ldr	w9, [x8, #8]
     3b4:	cmp	w9, w22
     3b8:	b.ls	5a8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x354>  // b.plast
     3bc:	ldr	x9, [x8]
     3c0:	mul	x10, x22, x25
     3c4:	ldr	x8, [x8, #64]
     3c8:	mov	x20, x19
     3cc:	ldr	w9, [x9, x10]
     3d0:	mov	w19, w24
     3d4:	add	x24, x8, x9
     3d8:	cbz	x8, 414 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1c0>
     3dc:	mov	x0, x24
     3e0:	bl	0 <strlen>
     3e4:	mov	x25, x0
     3e8:	ldp	x8, x0, [x23, #16]
     3ec:	sub	x8, x8, x0
     3f0:	cmp	x25, x8
     3f4:	b.ls	428 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1d4>  // b.plast
     3f8:	mov	x0, x23
     3fc:	mov	x1, x24
     400:	mov	x2, x25
     404:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     408:	mov	x23, x0
     40c:	ldr	x0, [x0, #24]
     410:	b	444 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1f0>
     414:	mov	x25, xzr
     418:	ldp	x8, x0, [x23, #16]
     41c:	sub	x8, x8, x0
     420:	cmp	x25, x8
     424:	b.hi	3f8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1a4>  // b.pmore
     428:	cbz	x25, 444 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1f0>
     42c:	mov	x1, x24
     430:	mov	x2, x25
     434:	bl	0 <memcpy>
     438:	ldr	x8, [x23, #24]
     43c:	add	x0, x8, x25
     440:	str	x0, [x23, #24]
     444:	ldr	x8, [x23, #16]
     448:	mov	w24, w19
     44c:	mov	x19, x20
     450:	mov	w25, #0x18                  	// #24
     454:	sub	x8, x8, x0
     458:	cmp	x8, #0x23
     45c:	b.hi	478 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x224>  // b.pmore
     460:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     464:	mov	w2, #0x24                  	// #36
     468:	mov	x0, x23
     46c:	add	x1, x1, #0x0
     470:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     474:	b	4a0 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x24c>
     478:	adrp	x8, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     47c:	add	x8, x8, #0x0
     480:	ldp	q1, q0, [x8]
     484:	mov	w8, #0x656c                	// #25964
     488:	movk	w8, #0x2e73, lsl #16
     48c:	str	w8, [x0, #32]
     490:	stp	q1, q0, [x0]
     494:	ldr	x8, [x23, #24]
     498:	add	x8, x8, #0x24
     49c:	str	x8, [x23, #24]
     4a0:	ldr	x3, [sp, #8]
     4a4:	ldr	w8, [x19, #4]
     4a8:	str	w24, [x21]
     4ac:	strh	w22, [x26, #24]
     4b0:	str	w8, [x26, #20]
     4b4:	ldrb	w8, [x19, #8]
     4b8:	strb	w8, [x26, #28]
     4bc:	ldr	x8, [x27, #8]
     4c0:	ldr	w9, [x8, #8]
     4c4:	cmp	w9, w22
     4c8:	b.ls	5a8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x354>  // b.plast
     4cc:	ldr	x10, [x8, #48]
     4d0:	cbz	x10, 5c8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x374>
     4d4:	ldr	x11, [x8]
     4d8:	madd	x12, x22, x25, x11
     4dc:	ldr	w12, [x12, #4]
     4e0:	add	x12, x10, x12, lsl #1
     4e4:	ldrh	w14, [x12]
     4e8:	cbz	w14, 328 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xd4>
     4ec:	ldr	x13, [x27, #112]
     4f0:	add	w15, w14, w22
     4f4:	add	x14, x10, #0x2
     4f8:	b	518 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x2c4>
     4fc:	ldr	x18, [x21]
     500:	str	x18, [x17]
     504:	strh	w22, [x16]
     508:	add	x12, x12, #0x2
     50c:	ldrh	w16, [x12]
     510:	add	w15, w16, w15
     514:	cbz	w16, 328 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xd4>
     518:	and	x15, x15, #0xffff
     51c:	add	x16, x13, x15, lsl #5
     520:	mov	x17, x16
     524:	ldr	w18, [x17, #16]!
     528:	cbnz	w18, 508 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x2b4>
     52c:	ldrh	w18, [x16, #24]!
     530:	cbz	w18, 4fc <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x2a8>
     534:	cmp	w9, w15
     538:	b.ls	5a8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x354>  // b.plast
     53c:	madd	x0, x15, x25, x11
     540:	ldr	w1, [x0, #8]
     544:	ldrh	w0, [x10, x1, lsl #1]
     548:	cbz	w0, 508 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x2b4>
     54c:	add	w0, w0, w15
     550:	add	x1, x14, x1, lsl #1
     554:	cmp	w18, w0, uxth
     558:	b.eq	4fc <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x2a8>  // b.none
     55c:	ldrh	w2, [x1], #2
     560:	add	w0, w2, w0
     564:	cbnz	w2, 554 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x300>
     568:	b	508 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x2b4>
     56c:	ldp	x20, x19, [sp, #96]
     570:	ldp	x22, x21, [sp, #80]
     574:	ldp	x24, x23, [sp, #64]
     578:	ldp	x26, x25, [sp, #48]
     57c:	ldp	x28, x27, [sp, #32]
     580:	ldp	x29, x30, [sp, #16]
     584:	add	sp, sp, #0x70
     588:	ret
     58c:	add	x1, x23, #0x10
     590:	mov	w3, #0x14                  	// #20
     594:	mov	x0, x23
     598:	mov	x2, xzr
     59c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     5a0:	ldp	w8, w9, [x27, #24]
     5a4:	b	298 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x44>
     5a8:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5ac:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5b0:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5b4:	add	x0, x0, #0x0
     5b8:	add	x1, x1, #0x0
     5bc:	add	x3, x3, #0x0
     5c0:	mov	w2, #0x1b9                 	// #441
     5c4:	bl	0 <__assert_fail>
     5c8:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5cc:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5d0:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5d4:	add	x0, x0, #0x0
     5d8:	add	x1, x1, #0x0
     5dc:	add	x3, x3, #0x0
     5e0:	mov	w2, #0xd1                  	// #209
     5e4:	bl	0 <__assert_fail>
     5e8:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5ec:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5f0:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5f4:	add	x0, x0, #0x0
     5f8:	add	x1, x1, #0x0
     5fc:	add	x3, x3, #0x0
     600:	mov	w2, #0x219                 	// #537
     604:	bl	0 <__assert_fail>
     608:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     60c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     610:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     614:	add	x0, x0, #0x0
     618:	add	x1, x1, #0x0
     61c:	add	x3, x3, #0x0
     620:	mov	w2, #0x43                  	// #67
     624:	bl	0 <__assert_fail>

0000000000000628 <_ZN4llvm3mca12RegisterFile10cycleStartEv>:
     628:	ldr	w8, [x0, #24]
     62c:	cbz	w8, 6a4 <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x7c>
     630:	ldr	x9, [x0, #16]
     634:	mov	w10, #0x14                  	// #20
     638:	mul	x10, x8, x10
     63c:	sub	x11, x10, #0x14
     640:	cmp	x11, #0x13
     644:	mov	x10, x9
     648:	b.ls	68c <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x64>  // b.plast
     64c:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
     650:	movk	x10, #0xcccd
     654:	umulh	x10, x11, x10
     658:	lsr	x10, x10, #4
     65c:	add	x11, x10, #0x1
     660:	mov	w13, #0x14                  	// #20
     664:	and	x12, x11, #0x1ffffffffffffffe
     668:	madd	x10, x12, x13, x9
     66c:	add	x13, x9, #0x20
     670:	mov	x14, x12
     674:	stur	wzr, [x13, #-20]
     678:	str	wzr, [x13], #40
     67c:	subs	x14, x14, #0x2
     680:	b.ne	674 <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x4c>  // b.any
     684:	cmp	x11, x12
     688:	b.eq	6a4 <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x7c>  // b.none
     68c:	mov	w11, #0x14                  	// #20
     690:	madd	x8, x8, x11, x9
     694:	str	wzr, [x10, #12]
     698:	add	x10, x10, #0x14
     69c:	cmp	x8, x10
     6a0:	b.ne	694 <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x6c>  // b.any
     6a4:	ret

00000000000006a8 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>:
     6a8:	stp	x29, x30, [sp, #-16]!
     6ac:	mov	x29, sp
     6b0:	ldp	w9, w8, [x1]
     6b4:	cbz	w9, 6f4 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x4c>
     6b8:	ldr	w10, [x0, #24]
     6bc:	cmp	w10, w9
     6c0:	b.ls	724 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x7c>  // b.plast
     6c4:	ldr	x10, [x0, #16]
     6c8:	mov	w11, #0x14                  	// #20
     6cc:	cmp	x3, x9
     6d0:	madd	x10, x9, x11, x10
     6d4:	ldr	w11, [x10, #4]
     6d8:	add	w11, w11, w8
     6dc:	str	w11, [x10, #4]
     6e0:	b.ls	744 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x9c>  // b.plast
     6e4:	lsl	x9, x9, #2
     6e8:	ldr	w10, [x2, x9]
     6ec:	add	w10, w10, w8
     6f0:	str	w10, [x2, x9]
     6f4:	ldr	w9, [x0, #24]
     6f8:	cbz	w9, 724 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x7c>
     6fc:	ldr	x9, [x0, #16]
     700:	ldr	w10, [x9, #4]
     704:	add	w10, w10, w8
     708:	str	w10, [x9, #4]
     70c:	cbz	x3, 744 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x9c>
     710:	ldr	w9, [x2]
     714:	add	w8, w9, w8
     718:	str	w8, [x2]
     71c:	ldp	x29, x30, [sp], #16
     720:	ret
     724:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     728:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     72c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     730:	add	x0, x0, #0x0
     734:	add	x1, x1, #0x0
     738:	add	x3, x3, #0x0
     73c:	mov	w2, #0x95                  	// #149
     740:	bl	0 <__assert_fail>
     744:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     748:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     74c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     750:	add	x0, x0, #0x0
     754:	add	x1, x1, #0x0
     758:	add	x3, x3, #0x0
     75c:	mov	w2, #0x1ab                 	// #427
     760:	bl	0 <__assert_fail>

0000000000000764 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>:
     764:	stp	x29, x30, [sp, #-16]!
     768:	mov	x29, sp
     76c:	ldp	w9, w8, [x1]
     770:	cbz	w9, 7b0 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x4c>
     774:	ldr	w10, [x0, #24]
     778:	cmp	w10, w9
     77c:	b.ls	7e0 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x7c>  // b.plast
     780:	ldr	x10, [x0, #16]
     784:	mov	w11, #0x14                  	// #20
     788:	cmp	x3, x9
     78c:	madd	x10, x9, x11, x10
     790:	ldr	w11, [x10, #4]
     794:	sub	w11, w11, w8
     798:	str	w11, [x10, #4]
     79c:	b.ls	800 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x9c>  // b.plast
     7a0:	lsl	x9, x9, #2
     7a4:	ldr	w10, [x2, x9]
     7a8:	add	w10, w10, w8
     7ac:	str	w10, [x2, x9]
     7b0:	ldr	w9, [x0, #24]
     7b4:	cbz	w9, 7e0 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x7c>
     7b8:	ldr	x9, [x0, #16]
     7bc:	ldr	w10, [x9, #4]
     7c0:	sub	w10, w10, w8
     7c4:	str	w10, [x9, #4]
     7c8:	cbz	x3, 800 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x9c>
     7cc:	ldr	w9, [x2]
     7d0:	add	w8, w9, w8
     7d4:	str	w8, [x2]
     7d8:	ldp	x29, x30, [sp], #16
     7dc:	ret
     7e0:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     7e4:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     7e8:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     7ec:	add	x0, x0, #0x0
     7f0:	add	x1, x1, #0x0
     7f4:	add	x3, x3, #0x0
     7f8:	mov	w2, #0x95                  	// #149
     7fc:	bl	0 <__assert_fail>
     800:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     804:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     808:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     80c:	add	x0, x0, #0x0
     810:	add	x1, x1, #0x0
     814:	add	x3, x3, #0x0
     818:	mov	w2, #0x1ab                 	// #427
     81c:	bl	0 <__assert_fail>

0000000000000820 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE>:
     820:	stp	x29, x30, [sp, #-96]!
     824:	stp	x28, x27, [sp, #16]
     828:	stp	x26, x25, [sp, #32]
     82c:	stp	x24, x23, [sp, #48]
     830:	stp	x22, x21, [sp, #64]
     834:	stp	x20, x19, [sp, #80]
     838:	mov	x29, sp
     83c:	ldrh	w28, [x2, #12]
     840:	cbz	x28, f60 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x740>
     844:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     848:	ldr	x8, [x8]
     84c:	mov	x22, x4
     850:	mov	x23, x3
     854:	mov	x19, x2
     858:	ldrb	w8, [x8]
     85c:	mov	x20, x1
     860:	mov	x21, x0
     864:	cbz	w8, 9e0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1c0>
     868:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     86c:	add	x0, x0, #0x0
     870:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     874:	tbz	w0, #0, 9e0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1c0>
     878:	bl	0 <_ZN4llvm4dbgsEv>
     87c:	ldp	x9, x8, [x0, #16]
     880:	sub	x9, x9, x8
     884:	cmp	x9, #0x20
     888:	b.hi	8a0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x80>  // b.pmore
     88c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     890:	add	x1, x1, #0x0
     894:	mov	w2, #0x21                  	// #33
     898:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     89c:	b	8c4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0xa4>
     8a0:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     8a4:	add	x9, x9, #0x0
     8a8:	ldp	q1, q0, [x9]
     8ac:	mov	w9, #0x20                  	// #32
     8b0:	strb	w9, [x8, #32]
     8b4:	stp	q1, q0, [x8]
     8b8:	ldr	x8, [x0, #24]
     8bc:	add	x8, x8, #0x21
     8c0:	str	x8, [x0, #24]
     8c4:	and	x1, x20, #0xffffffff
     8c8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     8cc:	ldp	x9, x8, [x0, #16]
     8d0:	mov	x24, x0
     8d4:	sub	x9, x9, x8
     8d8:	cmp	x9, #0x1
     8dc:	b.hi	8fc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0xdc>  // b.pmore
     8e0:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     8e4:	add	x1, x1, #0x0
     8e8:	mov	w2, #0x2                   	// #2
     8ec:	mov	x0, x24
     8f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     8f4:	mov	x24, x0
     8f8:	b	910 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0xf0>
     8fc:	mov	w9, #0x202c                	// #8236
     900:	strh	w9, [x8]
     904:	ldr	x8, [x24, #24]
     908:	add	x8, x8, #0x2
     90c:	str	x8, [x24, #24]
     910:	ldr	x8, [x21, #8]
     914:	ldr	w9, [x8, #8]
     918:	cmp	w9, w28
     91c:	b.ls	f20 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x700>  // b.plast
     920:	ldr	x9, [x8]
     924:	mov	w10, #0x18                  	// #24
     928:	mul	x10, x28, x10
     92c:	ldr	x8, [x8, #64]
     930:	ldr	w9, [x9, x10]
     934:	add	x25, x8, x9
     938:	cbz	x8, 974 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x154>
     93c:	mov	x0, x25
     940:	bl	0 <strlen>
     944:	mov	x26, x0
     948:	ldp	x8, x0, [x24, #16]
     94c:	sub	x8, x8, x0
     950:	cmp	x26, x8
     954:	b.ls	988 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x168>  // b.plast
     958:	mov	x0, x24
     95c:	mov	x1, x25
     960:	mov	x2, x26
     964:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     968:	mov	x24, x0
     96c:	ldr	x0, [x0, #24]
     970:	b	9a4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x184>
     974:	mov	x26, xzr
     978:	ldp	x8, x0, [x24, #16]
     97c:	sub	x8, x8, x0
     980:	cmp	x26, x8
     984:	b.hi	958 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x138>  // b.pmore
     988:	cbz	x26, 9a4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x184>
     98c:	mov	x1, x25
     990:	mov	x2, x26
     994:	bl	0 <memcpy>
     998:	ldr	x8, [x24, #24]
     99c:	add	x0, x8, x26
     9a0:	str	x0, [x24, #24]
     9a4:	ldr	x8, [x24, #16]
     9a8:	sub	x8, x8, x0
     9ac:	cmp	x8, #0x1
     9b0:	b.hi	9cc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1ac>  // b.pmore
     9b4:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     9b8:	add	x1, x1, #0x0
     9bc:	mov	w2, #0x2                   	// #2
     9c0:	mov	x0, x24
     9c4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     9c8:	b	9e0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1c0>
     9cc:	mov	w8, #0xa5d                 	// #2653
     9d0:	strh	w8, [x0]
     9d4:	ldr	x8, [x24, #24]
     9d8:	add	x8, x8, #0x2
     9dc:	str	x8, [x24, #24]
     9e0:	ldr	x9, [x21, #112]
     9e4:	ldrb	w24, [x19, #21]
     9e8:	ldrb	w26, [x19, #22]
     9ec:	add	x8, x9, x28, lsl #5
     9f0:	ldr	w10, [x8, #16]
     9f4:	str	w10, [x19, #16]
     9f8:	ldrh	w27, [x8, #24]
     9fc:	orr	w8, w26, w24
     a00:	cmp	w8, #0x0
     a04:	cset	w8, eq  // eq = none
     a08:	cbz	x27, b58 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x338>
     a0c:	cmp	w27, w28
     a10:	b.eq	b14 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2f4>  // b.none
     a14:	ldrb	w10, [x19, #20]
     a18:	cbz	w10, b6c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x34c>
     a1c:	ldrb	w9, [x19, #20]
     a20:	mov	w11, w27
     a24:	cbz	w9, b24 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x304>
     a28:	ldr	w9, [x21, #144]
     a2c:	add	x25, x21, #0x88
     a30:	cmp	w9, w11
     a34:	cbz	w24, b38 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x318>
     a38:	b.ls	ee0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6c0>  // b.plast
     a3c:	mov	w10, #0x1                   	// #1
     a40:	cmp	w9, #0x40
     a44:	lsl	x10, x10, x11
     a48:	b.hi	a54 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x234>  // b.pmore
     a4c:	mov	x12, x25
     a50:	b	a60 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x240>
     a54:	ldr	x12, [x25]
     a58:	lsr	w13, w11, #6
     a5c:	add	x12, x12, w13, uxtw #3
     a60:	ldr	x13, [x12]
     a64:	orr	x10, x13, x10
     a68:	str	x10, [x12]
     a6c:	ldr	x10, [x21, #8]
     a70:	ldr	w12, [x10, #8]
     a74:	cmp	w12, w11
     a78:	b.ls	f20 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x700>  // b.plast
     a7c:	ldr	x12, [x10, #48]
     a80:	cbz	x12, f40 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x720>
     a84:	ldr	x13, [x10]
     a88:	mov	w14, #0x18                  	// #24
     a8c:	umaddl	x13, w11, w14, x13
     a90:	ldr	w13, [x13, #4]
     a94:	add	x12, x12, x13, lsl #1
     a98:	ldrh	w13, [x12], #2
     a9c:	cbz	w13, c64 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x444>
     aa0:	cmp	w9, #0x41
     aa4:	add	w13, w13, w11
     aa8:	mov	w11, #0x1                   	// #1
     aac:	b.cs	adc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2bc>  // b.hs, b.nlast
     ab0:	and	w13, w13, #0xffff
     ab4:	cmp	w9, w13
     ab8:	b.ls	ee0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6c0>  // b.plast
     abc:	ldr	x14, [x25]
     ac0:	lsl	x15, x11, x13
     ac4:	orr	x14, x14, x15
     ac8:	str	x14, [x25]
     acc:	ldrh	w14, [x12], #2
     ad0:	add	w13, w14, w13
     ad4:	cbnz	w14, ab0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x290>
     ad8:	b	c64 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x444>
     adc:	and	w13, w13, #0xffff
     ae0:	cmp	w9, w13
     ae4:	b.ls	ee0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6c0>  // b.plast
     ae8:	ldr	x14, [x25]
     aec:	lsr	w15, w13, #6
     af0:	lsl	x15, x15, #3
     af4:	lsl	x17, x11, x13
     af8:	ldr	x16, [x14, x15]
     afc:	orr	x16, x16, x17
     b00:	str	x16, [x14, x15]
     b04:	ldrh	w14, [x12], #2
     b08:	add	w13, w14, w13
     b0c:	cbnz	w14, adc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2bc>
     b10:	b	c64 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x444>
     b14:	mov	w27, w28
     b18:	ldrb	w9, [x19, #20]
     b1c:	mov	w11, w27
     b20:	cbnz	w9, a28 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x208>
     b24:	ldrh	w11, [x19, #12]
     b28:	ldr	w9, [x21, #144]
     b2c:	add	x25, x21, #0x88
     b30:	cmp	w9, w11
     b34:	cbnz	w24, a38 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x218>
     b38:	b.ls	f00 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6e0>  // b.plast
     b3c:	mov	w10, #0x1                   	// #1
     b40:	lsl	x10, x10, x11
     b44:	cmp	w9, #0x40
     b48:	mvn	x10, x10
     b4c:	b.hi	ba8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x388>  // b.pmore
     b50:	mov	x12, x25
     b54:	b	bb4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x394>
     b58:	mov	w27, w28
     b5c:	ldrb	w9, [x19, #20]
     b60:	mov	w11, w27
     b64:	cbnz	w9, a28 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x208>
     b68:	b	b24 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x304>
     b6c:	add	x8, x9, x27, lsl #5
     b70:	ldr	x0, [x8, #8]
     b74:	cbz	x0, b94 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x374>
     b78:	lsl	x8, x27, #5
     b7c:	ldr	w1, [x9, x8]
     b80:	cmp	w1, w20
     b84:	b.eq	b94 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x374>  // b.none
     b88:	cbnz	w26, f80 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x760>
     b8c:	mov	x2, x19
     b90:	bl	0 <_ZN4llvm3mca10WriteState7addUserEjPS1_>
     b94:	mov	w8, wzr
     b98:	ldrb	w9, [x19, #20]
     b9c:	mov	w11, w27
     ba0:	cbnz	w9, a28 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x208>
     ba4:	b	b24 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x304>
     ba8:	ldr	x12, [x25]
     bac:	lsr	w13, w11, #6
     bb0:	add	x12, x12, w13, uxtw #3
     bb4:	ldr	x13, [x12]
     bb8:	and	x10, x13, x10
     bbc:	str	x10, [x12]
     bc0:	ldr	x10, [x21, #8]
     bc4:	ldr	w12, [x10, #8]
     bc8:	cmp	w12, w11
     bcc:	b.ls	f20 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x700>  // b.plast
     bd0:	ldr	x12, [x10, #48]
     bd4:	cbz	x12, f40 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x720>
     bd8:	ldr	x13, [x10]
     bdc:	mov	w14, #0x18                  	// #24
     be0:	umaddl	x13, w11, w14, x13
     be4:	ldr	w13, [x13, #4]
     be8:	add	x12, x12, x13, lsl #1
     bec:	ldrh	w13, [x12], #2
     bf0:	cbz	w13, c64 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x444>
     bf4:	cmp	w9, #0x41
     bf8:	add	w13, w13, w11
     bfc:	mov	w11, #0x1                   	// #1
     c00:	b.cs	c30 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x410>  // b.hs, b.nlast
     c04:	and	w13, w13, #0xffff
     c08:	cmp	w9, w13
     c0c:	b.ls	f00 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6e0>  // b.plast
     c10:	ldr	x14, [x25]
     c14:	lsl	x15, x11, x13
     c18:	bic	x14, x14, x15
     c1c:	str	x14, [x25]
     c20:	ldrh	w14, [x12], #2
     c24:	add	w13, w14, w13
     c28:	cbnz	w14, c04 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x3e4>
     c2c:	b	c64 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x444>
     c30:	and	w13, w13, #0xffff
     c34:	cmp	w9, w13
     c38:	b.ls	f00 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6e0>  // b.plast
     c3c:	ldr	x14, [x25]
     c40:	lsr	w15, w13, #6
     c44:	lsl	x15, x15, #3
     c48:	lsl	x17, x11, x13
     c4c:	ldr	x16, [x14, x15]
     c50:	bic	x16, x16, x17
     c54:	str	x16, [x14, x15]
     c58:	ldrh	w14, [x12], #2
     c5c:	add	w13, w14, w13
     c60:	cbnz	w14, c30 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x410>
     c64:	cbnz	w26, cf0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x4d0>
     c68:	ldr	x9, [x21, #112]
     c6c:	add	x11, x9, x27, lsl #5
     c70:	str	w20, [x11]
     c74:	str	x19, [x11, #8]
     c78:	strh	wzr, [x11, #26]
     c7c:	ldr	w11, [x10, #8]
     c80:	cmp	w11, w27
     c84:	b.ls	f20 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x700>  // b.plast
     c88:	ldr	x11, [x10, #48]
     c8c:	cbz	x11, f40 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x720>
     c90:	ldr	x10, [x10]
     c94:	mov	w12, #0x18                  	// #24
     c98:	madd	x10, x27, x12, x10
     c9c:	ldr	w12, [x10, #4]
     ca0:	ldrh	w10, [x11, x12, lsl #1]
     ca4:	cbz	w10, cd4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x4b4>
     ca8:	add	x11, x11, x12, lsl #1
     cac:	add	w10, w10, w27
     cb0:	add	x11, x11, #0x2
     cb4:	and	x12, x10, #0xffff
     cb8:	add	x12, x9, x12, lsl #5
     cbc:	str	w20, [x12]
     cc0:	str	x19, [x12, #8]
     cc4:	strh	wzr, [x12, #26]
     cc8:	ldrh	w12, [x11], #2
     ccc:	add	w10, w12, w10
     cd0:	cbnz	w12, cb4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x494>
     cd4:	tbz	w8, #0, cf0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x4d0>
     cd8:	add	x8, x9, x27, lsl #5
     cdc:	add	x1, x8, #0x10
     ce0:	mov	x0, x21
     ce4:	mov	x2, x23
     ce8:	mov	x3, x22
     cec:	bl	6a8 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>
     cf0:	ldrb	w8, [x19, #20]
     cf4:	cbz	w8, ec4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6a4>
     cf8:	ldr	x8, [x21, #8]
     cfc:	ldr	w9, [x8, #8]
     d00:	cmp	w9, w27
     d04:	b.ls	f20 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x700>  // b.plast
     d08:	ldr	x9, [x8, #48]
     d0c:	cbz	x9, f40 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x720>
     d10:	ldr	x8, [x8]
     d14:	mov	w10, #0x18                  	// #24
     d18:	umaddl	x8, w27, w10, x8
     d1c:	ldr	w8, [x8, #8]
     d20:	add	x8, x9, x8, lsl #1
     d24:	ldrh	w10, [x8], #2
     d28:	cbz	w10, ec4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6a4>
     d2c:	ldr	w9, [x21, #144]
     d30:	add	w12, w10, w27
     d34:	cbz	w26, df4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5d4>
     d38:	mov	w10, #0x1                   	// #1
     d3c:	b	d64 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x544>
     d40:	ldr	x13, [x25]
     d44:	lsr	w14, w11, #6
     d48:	lsl	x14, x14, #3
     d4c:	ldr	x15, [x13, x14]
     d50:	orr	x12, x15, x12
     d54:	str	x12, [x13, x14]
     d58:	ldrh	w13, [x8], #2
     d5c:	add	w12, w13, w11
     d60:	cbz	w13, ec4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6a4>
     d64:	and	w11, w12, #0xffff
     d68:	cmp	w9, w11
     d6c:	cbz	w24, d9c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x57c>
     d70:	b.ls	ee0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6c0>  // b.plast
     d74:	cmp	w9, #0x41
     d78:	lsl	x12, x10, x11
     d7c:	b.cs	d40 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x520>  // b.hs, b.nlast
     d80:	ldr	x13, [x25]
     d84:	orr	x12, x13, x12
     d88:	str	x12, [x25]
     d8c:	ldrh	w13, [x8], #2
     d90:	add	w12, w13, w11
     d94:	cbnz	w13, d64 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x544>
     d98:	b	ec4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6a4>
     d9c:	b.ls	f00 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6e0>  // b.plast
     da0:	lsl	x12, x10, x11
     da4:	cmp	w9, #0x41
     da8:	mvn	x12, x12
     dac:	b.cs	dcc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5ac>  // b.hs, b.nlast
     db0:	ldr	x13, [x25]
     db4:	and	x12, x13, x12
     db8:	str	x12, [x25]
     dbc:	ldrh	w13, [x8], #2
     dc0:	add	w12, w13, w11
     dc4:	cbnz	w13, d64 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x544>
     dc8:	b	ec4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6a4>
     dcc:	ldr	x13, [x25]
     dd0:	lsr	w14, w11, #6
     dd4:	lsl	x14, x14, #3
     dd8:	ldr	x15, [x13, x14]
     ddc:	and	x12, x15, x12
     de0:	str	x12, [x13, x14]
     de4:	ldrh	w13, [x8], #2
     de8:	add	w12, w13, w11
     dec:	cbnz	w13, d64 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x544>
     df0:	b	ec4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6a4>
     df4:	ldr	x10, [x21, #112]
     df8:	mov	w11, #0x1                   	// #1
     dfc:	b	e18 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5f8>
     e00:	ldr	x14, [x25]
     e04:	orr	x13, x14, x13
     e08:	str	x13, [x25]
     e0c:	ldrh	w13, [x8], #2
     e10:	add	w12, w13, w12
     e14:	cbz	w13, ec4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6a4>
     e18:	and	x13, x12, #0xffff
     e1c:	and	w12, w12, #0xffff
     e20:	add	x13, x10, x13, lsl #5
     e24:	cmp	w9, w12
     e28:	str	w20, [x13]
     e2c:	str	x19, [x13, #8]
     e30:	strh	wzr, [x13, #26]
     e34:	cbz	w24, e70 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x650>
     e38:	b.ls	ee0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6c0>  // b.plast
     e3c:	cmp	w9, #0x40
     e40:	lsl	x13, x11, x12
     e44:	b.ls	e00 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5e0>  // b.plast
     e48:	ldr	x14, [x25]
     e4c:	lsr	w15, w12, #6
     e50:	lsl	x15, x15, #3
     e54:	ldr	x16, [x14, x15]
     e58:	orr	x13, x16, x13
     e5c:	str	x13, [x14, x15]
     e60:	ldrh	w13, [x8], #2
     e64:	add	w12, w13, w12
     e68:	cbnz	w13, e18 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5f8>
     e6c:	b	ec4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6a4>
     e70:	b.ls	f00 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6e0>  // b.plast
     e74:	lsl	x13, x11, x12
     e78:	cmp	w9, #0x40
     e7c:	mvn	x13, x13
     e80:	b.hi	ea0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x680>  // b.pmore
     e84:	ldr	x14, [x25]
     e88:	and	x13, x14, x13
     e8c:	str	x13, [x25]
     e90:	ldrh	w13, [x8], #2
     e94:	add	w12, w13, w12
     e98:	cbnz	w13, e18 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5f8>
     e9c:	b	ec4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6a4>
     ea0:	ldr	x14, [x25]
     ea4:	lsr	w15, w12, #6
     ea8:	lsl	x15, x15, #3
     eac:	ldr	x16, [x14, x15]
     eb0:	and	x13, x16, x13
     eb4:	str	x13, [x14, x15]
     eb8:	ldrh	w13, [x8], #2
     ebc:	add	w12, w13, w12
     ec0:	cbnz	w13, e18 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5f8>
     ec4:	ldp	x20, x19, [sp, #80]
     ec8:	ldp	x22, x21, [sp, #64]
     ecc:	ldp	x24, x23, [sp, #48]
     ed0:	ldp	x26, x25, [sp, #32]
     ed4:	ldp	x28, x27, [sp, #16]
     ed8:	ldp	x29, x30, [sp], #96
     edc:	ret
     ee0:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     ee4:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     ee8:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     eec:	add	x0, x0, #0x0
     ef0:	add	x1, x1, #0x0
     ef4:	add	x3, x3, #0x0
     ef8:	mov	w2, #0x59d                 	// #1437
     efc:	bl	0 <__assert_fail>
     f00:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f04:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f08:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f0c:	add	x0, x0, #0x0
     f10:	add	x1, x1, #0x0
     f14:	add	x3, x3, #0x0
     f18:	mov	w2, #0x5e7                 	// #1511
     f1c:	bl	0 <__assert_fail>
     f20:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f24:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f28:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f2c:	add	x0, x0, #0x0
     f30:	add	x1, x1, #0x0
     f34:	add	x3, x3, #0x0
     f38:	mov	w2, #0x1b9                 	// #441
     f3c:	bl	0 <__assert_fail>
     f40:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f44:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f48:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f4c:	add	x0, x0, #0x0
     f50:	add	x1, x1, #0x0
     f54:	add	x3, x3, #0x0
     f58:	mov	w2, #0xd1                  	// #209
     f5c:	bl	0 <__assert_fail>
     f60:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f64:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f68:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f6c:	add	x0, x0, #0x0
     f70:	add	x1, x1, #0x0
     f74:	add	x3, x3, #0x0
     f78:	mov	w2, #0x97                  	// #151
     f7c:	bl	0 <__assert_fail>
     f80:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f84:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f88:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     f8c:	add	x0, x0, #0x0
     f90:	add	x1, x1, #0x0
     f94:	add	x3, x3, #0x0
     f98:	mov	w2, #0xbe                  	// #190
     f9c:	bl	0 <__assert_fail>

0000000000000fa0 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE>:
     fa0:	stp	x29, x30, [sp, #-48]!
     fa4:	stp	x22, x21, [sp, #16]
     fa8:	stp	x20, x19, [sp, #32]
     fac:	mov	x29, sp
     fb0:	ldrb	w8, [x1, #22]
     fb4:	cbz	w8, fc8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x28>
     fb8:	ldp	x20, x19, [sp, #32]
     fbc:	ldp	x22, x21, [sp, #16]
     fc0:	ldp	x29, x30, [sp], #48
     fc4:	ret
     fc8:	ldrh	w21, [x1, #12]
     fcc:	mov	x19, x1
     fd0:	cbz	x21, 1128 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x188>
     fd4:	ldr	w8, [x19, #8]
     fd8:	cmn	w8, #0x200
     fdc:	b.eq	1148 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1a8>  // b.none
     fe0:	cmp	w8, #0x1
     fe4:	b.ge	1168 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1c8>  // b.tcont
     fe8:	ldr	x8, [x0, #112]
     fec:	ldrb	w10, [x19, #21]
     ff0:	mov	x20, x0
     ff4:	mov	w22, w21
     ff8:	add	x9, x8, x21, lsl #5
     ffc:	ldrh	w9, [x9, #24]
    1000:	cbz	x9, 1024 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x84>
    1004:	cmp	w9, w22
    1008:	b.eq	1024 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x84>  // b.none
    100c:	cbnz	w10, 110c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x16c>
    1010:	ldrb	w10, [x19, #20]
    1014:	mov	x21, x9
    1018:	mov	w22, w9
    101c:	cbnz	w10, 1028 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x88>
    1020:	b	103c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x9c>
    1024:	cbnz	w10, 103c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x9c>
    1028:	add	x8, x8, x21, lsl #5
    102c:	add	x1, x8, #0x10
    1030:	mov	x0, x20
    1034:	bl	764 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>
    1038:	ldr	x8, [x20, #112]
    103c:	add	x9, x8, x21, lsl #5
    1040:	ldr	x10, [x9, #8]!
    1044:	cmp	x10, x19
    1048:	b.ne	1050 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xb0>  // b.any
    104c:	str	xzr, [x9]
    1050:	ldr	x10, [x20, #8]
    1054:	ldr	w9, [x10, #8]
    1058:	cmp	w9, w22
    105c:	b.ls	1188 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1e8>  // b.plast
    1060:	ldr	x9, [x10, #48]
    1064:	cbz	x9, 11a8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x208>
    1068:	ldr	x10, [x10]
    106c:	mov	w11, #0x18                  	// #24
    1070:	madd	x11, x21, x11, x10
    1074:	ldr	w12, [x11, #4]
    1078:	ldrh	w11, [x9, x12, lsl #1]
    107c:	cbz	w11, 10b8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x118>
    1080:	add	x12, x9, x12, lsl #1
    1084:	add	w11, w11, w22
    1088:	add	x12, x12, #0x2
    108c:	b	109c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xfc>
    1090:	ldrh	w13, [x12], #2
    1094:	add	w11, w13, w11
    1098:	cbz	w13, 10b8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x118>
    109c:	and	x13, x11, #0xffff
    10a0:	add	x13, x8, x13, lsl #5
    10a4:	ldr	x14, [x13, #8]!
    10a8:	cmp	x14, x19
    10ac:	b.ne	1090 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xf0>  // b.any
    10b0:	str	xzr, [x13]
    10b4:	b	1090 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xf0>
    10b8:	ldrb	w11, [x19, #20]
    10bc:	cbz	w11, fb8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x18>
    10c0:	mov	w11, #0x18                  	// #24
    10c4:	madd	x10, x21, x11, x10
    10c8:	ldr	w11, [x10, #8]
    10cc:	ldrh	w10, [x9, x11, lsl #1]
    10d0:	cbz	w10, fb8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x18>
    10d4:	add	x9, x9, x11, lsl #1
    10d8:	add	w10, w10, w22
    10dc:	add	x9, x9, #0x2
    10e0:	b	10f0 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x150>
    10e4:	ldrh	w11, [x9], #2
    10e8:	add	w10, w11, w10
    10ec:	cbz	w11, fb8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x18>
    10f0:	and	x11, x10, #0xffff
    10f4:	add	x11, x8, x11, lsl #5
    10f8:	ldr	x12, [x11, #8]!
    10fc:	cmp	x12, x19
    1100:	b.ne	10e4 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x144>  // b.any
    1104:	str	xzr, [x11]
    1108:	b	10e4 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x144>
    110c:	mov	x21, x9
    1110:	mov	w22, w9
    1114:	add	x9, x8, x21, lsl #5
    1118:	ldr	x10, [x9, #8]!
    111c:	cmp	x10, x19
    1120:	b.ne	1050 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xb0>  // b.any
    1124:	b	104c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xac>
    1128:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    112c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1130:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1134:	add	x0, x0, #0x0
    1138:	add	x1, x1, #0x0
    113c:	add	x3, x3, #0x0
    1140:	mov	w2, #0xfc                  	// #252
    1144:	bl	0 <__assert_fail>
    1148:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    114c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1150:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1154:	add	x0, x0, #0x0
    1158:	add	x1, x1, #0x0
    115c:	add	x3, x3, #0x0
    1160:	mov	w2, #0xfe                  	// #254
    1164:	bl	0 <__assert_fail>
    1168:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    116c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1170:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1174:	add	x0, x0, #0x0
    1178:	add	x1, x1, #0x0
    117c:	add	x3, x3, #0x0
    1180:	mov	w2, #0xff                  	// #255
    1184:	bl	0 <__assert_fail>
    1188:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    118c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1190:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1194:	add	x0, x0, #0x0
    1198:	add	x1, x1, #0x0
    119c:	add	x3, x3, #0x0
    11a0:	mov	w2, #0x1b9                 	// #441
    11a4:	bl	0 <__assert_fail>
    11a8:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    11ac:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    11b0:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    11b4:	add	x0, x0, #0x0
    11b8:	add	x1, x1, #0x0
    11bc:	add	x3, x3, #0x0
    11c0:	mov	w2, #0xd1                  	// #209
    11c4:	bl	0 <__assert_fail>

00000000000011c8 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE>:
    11c8:	stp	x29, x30, [sp, #-16]!
    11cc:	mov	x29, sp
    11d0:	ldrh	w12, [x2, #8]
    11d4:	ldr	x9, [x0, #112]
    11d8:	ldrh	w11, [x1, #12]
    11dc:	add	x8, x9, x12, lsl #5
    11e0:	add	x10, x9, x11, lsl #5
    11e4:	ldr	w8, [x8, #16]
    11e8:	ldr	w13, [x10, #16]
    11ec:	cmp	w8, w13
    11f0:	b.ne	1298 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xd0>  // b.any
    11f4:	ldrh	w13, [x10, #24]
    11f8:	cbz	w13, 1218 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x50>
    11fc:	cmp	w13, w11
    1200:	b.eq	1218 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x50>  // b.none
    1204:	add	x10, x9, x13, lsl #5
    1208:	ldrb	w10, [x10, #28]
    120c:	cbz	w10, 1298 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xd0>
    1210:	ldrb	w10, [x1, #20]
    1214:	cbz	w10, 1298 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xd0>
    1218:	ldr	w10, [x0, #24]
    121c:	cmp	w10, w8
    1220:	b.ls	1368 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1a0>  // b.plast
    1224:	ldr	x10, [x0, #16]
    1228:	mov	w14, #0x14                  	// #20
    122c:	madd	x14, x8, x14, x10
    1230:	ldr	w14, [x14, #8]
    1234:	cbz	w14, 124c <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x84>
    1238:	mov	w15, #0x14                  	// #20
    123c:	madd	x15, x8, x15, x10
    1240:	ldr	w15, [x15, #12]
    1244:	cmp	w15, w14
    1248:	b.eq	1298 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xd0>  // b.none
    124c:	ldr	w14, [x0, #144]
    1250:	cmp	w14, w12
    1254:	b.ls	1388 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1c0>  // b.plast
    1258:	mov	w16, #0x1                   	// #1
    125c:	add	x15, x0, #0x88
    1260:	cmp	w14, #0x40
    1264:	lsl	x14, x16, x12
    1268:	b.ls	127c <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xb4>  // b.plast
    126c:	ldr	x15, [x15]
    1270:	lsr	x16, x12, #3
    1274:	and	x16, x16, #0x1ff8
    1278:	add	x15, x15, x16
    127c:	mov	w16, #0x14                  	// #20
    1280:	ldr	x15, [x15]
    1284:	madd	x16, x8, x16, x10
    1288:	ldrb	w16, [x16, #16]
    128c:	and	x14, x15, x14
    1290:	cbz	w16, 12a4 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xdc>
    1294:	cbnz	x14, 12a4 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xdc>
    1298:	mov	w0, wzr
    129c:	ldp	x29, x30, [sp], #16
    12a0:	ret
    12a4:	add	x15, x9, x12, lsl #5
    12a8:	ldrh	w15, [x15, #24]
    12ac:	cmp	w15, #0x0
    12b0:	csel	w15, w12, w15, eq  // eq = none
    12b4:	add	x12, x9, x15, lsl #5
    12b8:	ldrh	w16, [x12, #26]
    12bc:	cmp	w13, #0x0
    12c0:	csel	w12, w11, w13, eq  // eq = none
    12c4:	add	x13, x9, x12, lsl #5
    12c8:	cmp	w16, #0x0
    12cc:	csel	w11, w15, w16, eq  // eq = none
    12d0:	strh	w11, [x13, #26]
    12d4:	ldr	x15, [x0, #8]
    12d8:	ldr	w13, [x15, #8]
    12dc:	cmp	w13, w12
    12e0:	b.ls	13a8 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1e0>  // b.plast
    12e4:	ldr	x13, [x15, #48]
    12e8:	cbz	x13, 13c8 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x200>
    12ec:	ldr	x15, [x15]
    12f0:	mov	w16, #0x18                  	// #24
    12f4:	madd	x15, x12, x16, x15
    12f8:	ldr	w15, [x15, #4]
    12fc:	ldrh	w16, [x13, x15, lsl #1]
    1300:	cbz	w16, 1328 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x160>
    1304:	add	x13, x13, x15, lsl #1
    1308:	add	w12, w16, w12
    130c:	add	x13, x13, #0x2
    1310:	and	x15, x12, #0xffff
    1314:	add	x15, x9, x15, lsl #5
    1318:	strh	w11, [x15, #26]
    131c:	ldrh	w15, [x13], #2
    1320:	add	w12, w15, w12
    1324:	cbnz	w15, 1310 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x148>
    1328:	cbz	x14, 1338 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x170>
    132c:	mov	w9, #0x1                   	// #1
    1330:	strb	w9, [x1, #21]
    1334:	strb	w9, [x2, #41]
    1338:	ldr	w9, [x1, #64]
    133c:	cbnz	w9, 13e8 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x220>
    1340:	mov	w0, #0x1                   	// #1
    1344:	mov	w9, #0x14                  	// #20
    1348:	str	wzr, [x1, #8]
    134c:	strb	w0, [x1, #22]
    1350:	madd	x8, x8, x9, x10
    1354:	ldr	w9, [x8, #12]
    1358:	add	w9, w9, #0x1
    135c:	str	w9, [x8, #12]
    1360:	ldp	x29, x30, [sp], #16
    1364:	ret
    1368:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    136c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1370:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1374:	add	x0, x0, #0x0
    1378:	add	x1, x1, #0x0
    137c:	add	x3, x3, #0x0
    1380:	mov	w2, #0x95                  	// #149
    1384:	bl	0 <__assert_fail>
    1388:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    138c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1390:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1394:	add	x0, x0, #0x0
    1398:	add	x1, x1, #0x0
    139c:	add	x3, x3, #0x0
    13a0:	mov	w2, #0x472                 	// #1138
    13a4:	bl	0 <__assert_fail>
    13a8:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    13ac:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    13b0:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    13b4:	add	x0, x0, #0x0
    13b8:	add	x1, x1, #0x0
    13bc:	add	x3, x3, #0x0
    13c0:	mov	w2, #0x1b9                 	// #441
    13c4:	bl	0 <__assert_fail>
    13c8:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    13cc:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    13d0:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    13d4:	add	x0, x0, #0x0
    13d8:	add	x1, x1, #0x0
    13dc:	add	x3, x3, #0x0
    13e0:	mov	w2, #0xd1                  	// #209
    13e4:	bl	0 <__assert_fail>
    13e8:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    13ec:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    13f0:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    13f4:	add	x0, x0, #0x0
    13f8:	add	x1, x1, #0x0
    13fc:	add	x3, x3, #0x0
    1400:	mov	w2, #0xcf                  	// #207
    1404:	bl	0 <__assert_fail>

0000000000001408 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE>:
    1408:	stp	x29, x30, [sp, #-96]!
    140c:	stp	x28, x27, [sp, #16]
    1410:	stp	x26, x25, [sp, #32]
    1414:	stp	x24, x23, [sp, #48]
    1418:	stp	x22, x21, [sp, #64]
    141c:	stp	x20, x19, [sp, #80]
    1420:	mov	x29, sp
    1424:	ldrh	w25, [x1, #8]
    1428:	cbz	x25, 1c58 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x850>
    142c:	ldp	x9, x8, [x0, #112]
    1430:	mov	x19, x0
    1434:	sub	x8, x8, x9
    1438:	cmp	x25, x8, asr #5
    143c:	b.cs	1c58 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x850>  // b.hs, b.nlast
    1440:	adrp	x24, 0 <_ZN4llvm9DebugFlagE>
    1444:	ldr	x24, [x24]
    1448:	mov	x20, x2
    144c:	ldrb	w8, [x24]
    1450:	cbz	w8, 157c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x174>
    1454:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1458:	add	x0, x0, #0x0
    145c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1460:	tbz	w0, #0, 157c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x174>
    1464:	bl	0 <_ZN4llvm4dbgsEv>
    1468:	ldp	x9, x8, [x0, #16]
    146c:	mov	x21, x0
    1470:	sub	x9, x9, x8
    1474:	cmp	x9, #0x2c
    1478:	b.hi	1498 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x90>  // b.pmore
    147c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1480:	add	x1, x1, #0x0
    1484:	mov	w2, #0x2d                  	// #45
    1488:	mov	x0, x21
    148c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1490:	mov	x21, x0
    1494:	b	14bc <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xb4>
    1498:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    149c:	add	x9, x9, #0x0
    14a0:	ldur	q0, [x9, #29]
    14a4:	ldp	q2, q1, [x9]
    14a8:	stur	q0, [x8, #29]
    14ac:	stp	q2, q1, [x8]
    14b0:	ldr	x8, [x21, #24]
    14b4:	add	x8, x8, #0x2d
    14b8:	str	x8, [x21, #24]
    14bc:	ldr	x8, [x19, #8]
    14c0:	ldr	w9, [x8, #8]
    14c4:	cmp	w9, w25
    14c8:	b.ls	1c18 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x810>  // b.plast
    14cc:	ldr	x9, [x8]
    14d0:	mov	w10, #0x18                  	// #24
    14d4:	mul	x10, x25, x10
    14d8:	ldr	x8, [x8, #64]
    14dc:	ldr	w9, [x9, x10]
    14e0:	add	x22, x8, x9
    14e4:	cbz	x8, 1520 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x118>
    14e8:	mov	x0, x22
    14ec:	bl	0 <strlen>
    14f0:	mov	x23, x0
    14f4:	ldp	x8, x0, [x21, #16]
    14f8:	sub	x8, x8, x0
    14fc:	cmp	x23, x8
    1500:	b.ls	1534 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x12c>  // b.plast
    1504:	mov	x0, x21
    1508:	mov	x1, x22
    150c:	mov	x2, x23
    1510:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1514:	mov	x21, x0
    1518:	ldr	x0, [x0, #24]
    151c:	b	1550 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x148>
    1520:	mov	x23, xzr
    1524:	ldp	x8, x0, [x21, #16]
    1528:	sub	x8, x8, x0
    152c:	cmp	x23, x8
    1530:	b.hi	1504 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xfc>  // b.pmore
    1534:	cbz	x23, 1550 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x148>
    1538:	mov	x1, x22
    153c:	mov	x2, x23
    1540:	bl	0 <memcpy>
    1544:	ldr	x8, [x21, #24]
    1548:	add	x0, x8, x23
    154c:	str	x0, [x21, #24]
    1550:	ldr	x8, [x21, #16]
    1554:	cmp	x0, x8
    1558:	b.cs	1570 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x168>  // b.hs, b.nlast
    155c:	add	x8, x0, #0x1
    1560:	mov	w9, #0xa                   	// #10
    1564:	str	x8, [x21, #24]
    1568:	strb	w9, [x0]
    156c:	b	157c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x174>
    1570:	mov	w1, #0xa                   	// #10
    1574:	mov	x0, x21
    1578:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    157c:	ldr	x8, [x19, #112]
    1580:	adrp	x23, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
    1584:	add	x9, x8, x25, lsl #5
    1588:	ldrh	w9, [x9, #26]
    158c:	cmp	w9, #0x0
    1590:	csel	w21, w25, w9, eq  // eq = none
    1594:	add	x22, x8, x21, lsl #5
    1598:	ldr	x8, [x22, #8]
    159c:	ldr	x23, [x23]
    15a0:	cbz	x8, 15e0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1d8>
    15a4:	ldr	w8, [x22]
    15a8:	ldr	w9, [x23]
    15ac:	cmp	w8, w9
    15b0:	b.eq	15e0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1d8>  // b.none
    15b4:	ldp	w8, w9, [x20, #8]
    15b8:	cmp	w8, w9
    15bc:	b.cs	1c04 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x7fc>  // b.hs, b.nlast
    15c0:	ldr	x9, [x20]
    15c4:	ldr	q0, [x22]
    15c8:	str	q0, [x9, w8, uxtw #4]
    15cc:	ldp	w8, w9, [x20, #8]
    15d0:	cmp	w8, w9
    15d4:	b.cs	1c38 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x830>  // b.hs, b.nlast
    15d8:	add	w8, w8, #0x1
    15dc:	str	w8, [x20, #8]
    15e0:	ldr	x9, [x19, #8]
    15e4:	ldr	w8, [x9, #8]
    15e8:	cmp	w8, w21
    15ec:	b.ls	1c18 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x810>  // b.plast
    15f0:	ldr	x8, [x9, #48]
    15f4:	cbz	x8, 1c78 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x870>
    15f8:	ldr	x9, [x9]
    15fc:	mov	w10, #0x18                  	// #24
    1600:	madd	x9, x21, x10, x9
    1604:	ldr	w9, [x9, #4]
    1608:	ldrh	w10, [x8, x9, lsl #1]
    160c:	cbz	w10, 1694 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x28c>
    1610:	ldr	w22, [x23]
    1614:	add	x8, x8, x9, lsl #1
    1618:	add	w21, w10, w21
    161c:	add	x25, x8, #0x2
    1620:	b	1630 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x228>
    1624:	ldrh	w8, [x25], #2
    1628:	add	w21, w8, w21
    162c:	cbz	w8, 1694 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x28c>
    1630:	ldr	x8, [x19, #112]
    1634:	and	x9, x21, #0xffff
    1638:	add	x26, x8, x9, lsl #5
    163c:	ldr	x8, [x26, #8]
    1640:	cbz	x8, 1624 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x21c>
    1644:	ldr	w8, [x26]
    1648:	cmp	w8, w22
    164c:	b.eq	1624 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x21c>  // b.none
    1650:	ldp	w8, w9, [x20, #8]
    1654:	cmp	w8, w9
    1658:	b.cs	1680 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x278>  // b.hs, b.nlast
    165c:	ldr	x9, [x20]
    1660:	ldr	q0, [x26]
    1664:	str	q0, [x9, w8, uxtw #4]
    1668:	ldp	w8, w9, [x20, #8]
    166c:	cmp	w8, w9
    1670:	b.cs	1c38 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x830>  // b.hs, b.nlast
    1674:	add	w8, w8, #0x1
    1678:	str	w8, [x20, #8]
    167c:	b	1624 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x21c>
    1680:	mov	x0, x20
    1684:	mov	x1, xzr
    1688:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    168c:	ldr	w8, [x20, #8]
    1690:	b	165c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x254>
    1694:	ldr	w25, [x20, #8]
    1698:	cmp	w25, #0x1
    169c:	b.ls	19bc <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x5b4>  // b.plast
    16a0:	ldr	x22, [x20]
    16a4:	clz	x8, x25
    16a8:	mov	w9, #0x7e                  	// #126
    16ac:	sub	x2, x9, x8, lsl #1
    16b0:	add	x21, x22, x25, lsl #4
    16b4:	mov	x0, x22
    16b8:	mov	x1, x21
    16bc:	mov	x3, xzr
    16c0:	bl	2654 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_>
    16c4:	add	x8, x22, #0x8
    16c8:	cmp	w25, #0x11
    16cc:	b.cc	1790 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x388>  // b.lo, b.ul, b.last
    16d0:	mov	w9, #0x1                   	// #1
    16d4:	mov	w10, #0x2                   	// #2
    16d8:	mov	x11, x8
    16dc:	mov	x14, x22
    16e0:	b	1708 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x300>
    16e4:	add	x15, x15, #0x8
    16e8:	str	w14, [x15], #8
    16ec:	add	x9, x9, #0x1
    16f0:	add	x11, x11, #0x10
    16f4:	cmp	x9, #0x10
    16f8:	add	x10, x10, #0x1
    16fc:	mov	x14, x12
    1700:	str	x13, [x15]
    1704:	b.eq	1858 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x450>  // b.none
    1708:	ldr	x13, [x14, #24]
    170c:	ldr	x12, [x22, #8]
    1710:	cmp	x13, x12
    1714:	add	x12, x22, x9, lsl #4
    1718:	b.cs	1758 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x350>  // b.hs, b.nlast
    171c:	ldr	w14, [x14, #16]
    1720:	mov	x15, x10
    1724:	mov	x17, x12
    1728:	mov	x16, x12
    172c:	ldr	w18, [x16, #-16]!
    1730:	ldur	x0, [x17, #-8]
    1734:	sub	x15, x15, #0x1
    1738:	cmp	x15, #0x1
    173c:	str	w18, [x17]
    1740:	str	x0, [x17, #8]
    1744:	mov	x17, x16
    1748:	b.gt	172c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x324>
    174c:	str	w14, [x22]
    1750:	mov	x15, x8
    1754:	b	16ec <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x2e4>
    1758:	ldr	x15, [x14, #8]
    175c:	ldr	w14, [x12]
    1760:	cmp	x15, x13
    1764:	mov	x15, x12
    1768:	b.ls	16e8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x2e0>  // b.plast
    176c:	mov	x15, x11
    1770:	ldur	w16, [x15, #-8]
    1774:	ldr	x17, [x15]
    1778:	str	w16, [x15, #8]
    177c:	str	x17, [x15, #16]
    1780:	ldr	x16, [x15, #-16]!
    1784:	cmp	x16, x13
    1788:	b.hi	1770 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x368>  // b.pmore
    178c:	b	16e4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x2dc>
    1790:	add	x12, x22, #0x10
    1794:	mov	x9, x8
    1798:	mov	x13, x22
    179c:	b	17c0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x3b8>
    17a0:	add	x13, x13, #0x8
    17a4:	str	w12, [x13], #8
    17a8:	add	x12, x10, #0x10
    17ac:	str	x11, [x13]
    17b0:	cmp	x12, x21
    17b4:	add	x9, x9, #0x10
    17b8:	mov	x13, x10
    17bc:	b.eq	1860 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x458>  // b.none
    17c0:	ldr	x11, [x13, #24]
    17c4:	ldr	x10, [x22, #8]
    17c8:	cmp	x11, x10
    17cc:	mov	x10, x12
    17d0:	b.cs	1820 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x418>  // b.hs, b.nlast
    17d4:	ldr	w12, [x13, #16]
    17d8:	sub	x13, x10, x22
    17dc:	cmp	x13, #0x1
    17e0:	b.lt	1814 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x40c>  // b.tstop
    17e4:	lsr	x13, x13, #4
    17e8:	add	x13, x13, #0x1
    17ec:	mov	x15, x10
    17f0:	mov	x14, x10
    17f4:	ldr	w16, [x14, #-16]!
    17f8:	ldur	x17, [x15, #-8]
    17fc:	sub	x13, x13, #0x1
    1800:	cmp	x13, #0x1
    1804:	str	w16, [x15]
    1808:	str	x17, [x15, #8]
    180c:	mov	x15, x14
    1810:	b.gt	17f4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x3ec>
    1814:	str	w12, [x22]
    1818:	mov	x13, x8
    181c:	b	17a8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x3a0>
    1820:	ldr	x13, [x13, #8]
    1824:	ldr	w12, [x10]
    1828:	cmp	x13, x11
    182c:	mov	x13, x10
    1830:	b.ls	17a4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x39c>  // b.plast
    1834:	mov	x13, x9
    1838:	ldur	w14, [x13, #-8]
    183c:	ldr	x15, [x13]
    1840:	str	w14, [x13, #8]
    1844:	str	x15, [x13, #16]
    1848:	ldr	x14, [x13, #-16]!
    184c:	cmp	x14, x11
    1850:	b.hi	1838 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x430>  // b.pmore
    1854:	b	17a0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x398>
    1858:	cmp	w25, #0x10
    185c:	b.ne	1b9c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x794>  // b.any
    1860:	ldr	x8, [x20]
    1864:	ldr	w9, [x20, #8]
    1868:	mov	x11, x8
    186c:	add	x10, x8, x9, lsl #4
    1870:	cbz	w9, 18a8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4a0>
    1874:	lsl	x12, x9, #4
    1878:	sub	x11, x8, #0x10
    187c:	sub	x12, x12, #0x10
    1880:	cbz	x12, 18f4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4ec>
    1884:	ldr	w13, [x11, #16]!
    1888:	sub	x12, x12, #0x10
    188c:	ldr	w14, [x11, #16]
    1890:	cmp	w13, w14
    1894:	b.ne	1880 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x478>  // b.any
    1898:	ldr	x13, [x11, #8]
    189c:	ldr	x14, [x11, #24]
    18a0:	cmp	x13, x14
    18a4:	b.ne	1880 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x478>  // b.any
    18a8:	cmp	x11, x10
    18ac:	b.eq	18f4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4ec>  // b.none
    18b0:	add	x12, x11, #0x20
    18b4:	b	18c4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4bc>
    18b8:	str	w14, [x11, #16]!
    18bc:	str	x13, [x11, #8]
    18c0:	add	x12, x12, #0x10
    18c4:	cmp	x12, x10
    18c8:	b.eq	18f0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4e8>  // b.none
    18cc:	ldr	w15, [x11]
    18d0:	ldr	w14, [x12]
    18d4:	ldr	x13, [x12, #8]
    18d8:	cmp	w15, w14
    18dc:	b.ne	18b8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4b0>  // b.any
    18e0:	ldr	x15, [x11, #8]
    18e4:	cmp	x15, x13
    18e8:	b.eq	18c0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4b8>  // b.none
    18ec:	b	18b8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4b0>
    18f0:	add	x10, x11, #0x10
    18f4:	sub	x22, x10, x8
    18f8:	asr	x21, x22, #4
    18fc:	cmp	x21, x9
    1900:	b.cs	191c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x514>  // b.hs, b.nlast
    1904:	ldr	w8, [x20, #12]
    1908:	cmp	x21, x8
    190c:	b.hi	1c38 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x830>  // b.pmore
    1910:	lsr	x8, x22, #4
    1914:	str	w8, [x20, #8]
    1918:	b	19bc <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x5b4>
    191c:	b.ls	19bc <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x5b4>  // b.plast
    1920:	ldr	w10, [x20, #12]
    1924:	cmp	x21, x10
    1928:	b.ls	1940 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x538>  // b.plast
    192c:	mov	x0, x20
    1930:	mov	x1, x21
    1934:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1938:	ldr	w9, [x20, #8]
    193c:	ldr	x8, [x20]
    1940:	cmp	x9, x21
    1944:	b.eq	1904 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4fc>  // b.none
    1948:	lsl	x11, x9, #4
    194c:	ldr	w10, [x23]
    1950:	sub	x12, x22, x11
    1954:	sub	x12, x12, #0x10
    1958:	lsr	x12, x12, #4
    195c:	add	x11, x8, x11
    1960:	cbz	x12, 19a0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x598>
    1964:	add	x12, x12, #0x1
    1968:	add	x13, x8, x9, lsl #4
    196c:	and	x9, x12, #0x1ffffffffffffffe
    1970:	add	x11, x11, x9, lsl #4
    1974:	add	x13, x13, #0x10
    1978:	mov	x14, x9
    197c:	stur	w10, [x13, #-16]
    1980:	str	w10, [x13]
    1984:	stur	xzr, [x13, #-8]
    1988:	str	xzr, [x13, #8]
    198c:	subs	x14, x14, #0x2
    1990:	add	x13, x13, #0x20
    1994:	b.ne	197c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x574>  // b.any
    1998:	cmp	x12, x9
    199c:	b.eq	1904 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4fc>  // b.none
    19a0:	add	x8, x8, x21, lsl #4
    19a4:	str	w10, [x11]
    19a8:	str	xzr, [x11, #8]
    19ac:	add	x11, x11, #0x10
    19b0:	cmp	x11, x8
    19b4:	b.ne	19a4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x59c>  // b.any
    19b8:	b	1904 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4fc>
    19bc:	ldrb	w8, [x24]
    19c0:	cbz	w8, 1b80 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x778>
    19c4:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    19c8:	add	x0, x0, #0x0
    19cc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    19d0:	tbz	w0, #0, 1b80 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x778>
    19d4:	ldr	w8, [x20, #8]
    19d8:	cbz	w8, 1b80 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x778>
    19dc:	ldr	x9, [x20]
    19e0:	adrp	x20, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    19e4:	adrp	x21, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    19e8:	lsl	x26, x8, #4
    19ec:	add	x20, x20, #0x0
    19f0:	mov	w27, #0x18                  	// #24
    19f4:	add	x21, x21, #0x0
    19f8:	add	x28, x9, #0x8
    19fc:	mov	w22, #0xa29                 	// #2601
    1a00:	b	1a20 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x618>
    1a04:	strh	w22, [x8]
    1a08:	ldr	x8, [x0, #24]
    1a0c:	add	x8, x8, #0x2
    1a10:	str	x8, [x0, #24]
    1a14:	subs	x26, x26, #0x10
    1a18:	add	x28, x28, #0x10
    1a1c:	b.eq	1b80 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x778>  // b.none
    1a20:	ldr	x24, [x28]
    1a24:	bl	0 <_ZN4llvm4dbgsEv>
    1a28:	ldp	x9, x8, [x0, #16]
    1a2c:	mov	x23, x0
    1a30:	sub	x9, x9, x8
    1a34:	cmp	x9, #0x27
    1a38:	b.hi	1a54 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x64c>  // b.pmore
    1a3c:	mov	w2, #0x28                  	// #40
    1a40:	mov	x0, x23
    1a44:	mov	x1, x20
    1a48:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1a4c:	mov	x23, x0
    1a50:	b	1a70 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x668>
    1a54:	ldr	x9, [x20, #32]
    1a58:	ldp	q1, q0, [x20]
    1a5c:	str	x9, [x8, #32]
    1a60:	stp	q1, q0, [x8]
    1a64:	ldr	x8, [x23, #24]
    1a68:	add	x8, x8, #0x28
    1a6c:	str	x8, [x23, #24]
    1a70:	ldr	x8, [x19, #8]
    1a74:	ldrh	w9, [x24, #12]
    1a78:	ldr	w10, [x8, #8]
    1a7c:	cmp	w10, w9
    1a80:	b.ls	1c18 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x810>  // b.plast
    1a84:	ldr	x10, [x8]
    1a88:	mul	x9, x9, x27
    1a8c:	ldr	x8, [x8, #64]
    1a90:	ldr	w9, [x10, x9]
    1a94:	add	x24, x8, x9
    1a98:	cbz	x8, 1ad4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6cc>
    1a9c:	mov	x0, x24
    1aa0:	bl	0 <strlen>
    1aa4:	mov	x25, x0
    1aa8:	ldp	x8, x0, [x23, #16]
    1aac:	sub	x8, x8, x0
    1ab0:	cmp	x25, x8
    1ab4:	b.ls	1ae8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6e0>  // b.plast
    1ab8:	mov	x0, x23
    1abc:	mov	x1, x24
    1ac0:	mov	x2, x25
    1ac4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1ac8:	mov	x23, x0
    1acc:	ldr	x0, [x0, #24]
    1ad0:	b	1b04 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6fc>
    1ad4:	mov	x25, xzr
    1ad8:	ldp	x8, x0, [x23, #16]
    1adc:	sub	x8, x8, x0
    1ae0:	cmp	x25, x8
    1ae4:	b.hi	1ab8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6b0>  // b.pmore
    1ae8:	cbz	x25, 1b04 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6fc>
    1aec:	mov	x1, x24
    1af0:	mov	x2, x25
    1af4:	bl	0 <memcpy>
    1af8:	ldr	x8, [x23, #24]
    1afc:	add	x0, x8, x25
    1b00:	str	x0, [x23, #24]
    1b04:	ldr	x8, [x23, #16]
    1b08:	sub	x8, x8, x0
    1b0c:	cmp	x8, #0x19
    1b10:	b.hi	1b2c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x724>  // b.pmore
    1b14:	mov	w2, #0x1a                  	// #26
    1b18:	mov	x0, x23
    1b1c:	mov	x1, x21
    1b20:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1b24:	mov	x23, x0
    1b28:	b	1b48 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x740>
    1b2c:	ldur	q0, [x21, #10]
    1b30:	ldr	q1, [x21]
    1b34:	stur	q0, [x0, #10]
    1b38:	str	q1, [x0]
    1b3c:	ldr	x8, [x23, #24]
    1b40:	add	x8, x8, #0x1a
    1b44:	str	x8, [x23, #24]
    1b48:	ldur	w1, [x28, #-8]
    1b4c:	mov	x0, x23
    1b50:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1b54:	ldp	x9, x8, [x0, #16]
    1b58:	sub	x9, x9, x8
    1b5c:	cmp	x9, #0x1
    1b60:	b.hi	1a04 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x5fc>  // b.pmore
    1b64:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1b68:	mov	w2, #0x2                   	// #2
    1b6c:	add	x1, x1, #0x0
    1b70:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1b74:	subs	x26, x26, #0x10
    1b78:	add	x28, x28, #0x10
    1b7c:	b.ne	1a20 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x618>  // b.any
    1b80:	ldp	x20, x19, [sp, #80]
    1b84:	ldp	x22, x21, [sp, #64]
    1b88:	ldp	x24, x23, [sp, #48]
    1b8c:	ldp	x26, x25, [sp, #32]
    1b90:	ldp	x28, x27, [sp, #16]
    1b94:	ldp	x29, x30, [sp], #96
    1b98:	ret
    1b9c:	add	x8, x22, #0x100
    1ba0:	add	x9, x22, #0xe8
    1ba4:	b	1bc4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x7bc>
    1ba8:	add	x12, x12, #0x18
    1bac:	add	x8, x8, #0x10
    1bb0:	cmp	x8, x21
    1bb4:	add	x9, x9, #0x10
    1bb8:	str	w11, [x12]
    1bbc:	str	x10, [x12, #8]
    1bc0:	b.eq	1860 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x458>  // b.none
    1bc4:	ldr	x10, [x8, #8]
    1bc8:	ldur	x12, [x8, #-8]
    1bcc:	ldr	w11, [x8]
    1bd0:	cmp	x12, x10
    1bd4:	mov	x12, x8
    1bd8:	b.ls	1bac <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x7a4>  // b.plast
    1bdc:	mov	x12, x9
    1be0:	ldr	w13, [x12, #8]
    1be4:	ldr	x14, [x12, #16]
    1be8:	ldr	x15, [x12]
    1bec:	str	w13, [x12, #24]
    1bf0:	str	x14, [x12, #32]
    1bf4:	cmp	x15, x10
    1bf8:	sub	x12, x12, #0x10
    1bfc:	b.hi	1be0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x7d8>  // b.pmore
    1c00:	b	1ba8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x7a0>
    1c04:	mov	x0, x20
    1c08:	mov	x1, xzr
    1c0c:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c10:	ldr	w8, [x20, #8]
    1c14:	b	15c0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1b8>
    1c18:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c1c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c20:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c24:	add	x0, x0, #0x0
    1c28:	add	x1, x1, #0x0
    1c2c:	add	x3, x3, #0x0
    1c30:	mov	w2, #0x1b9                 	// #441
    1c34:	bl	0 <__assert_fail>
    1c38:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c3c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c40:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c44:	add	x0, x0, #0x0
    1c48:	add	x1, x1, #0x0
    1c4c:	add	x3, x3, #0x0
    1c50:	mov	w2, #0x43                  	// #67
    1c54:	bl	0 <__assert_fail>
    1c58:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c5c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c60:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c64:	add	x0, x0, #0x0
    1c68:	add	x1, x1, #0x0
    1c6c:	add	x3, x3, #0x0
    1c70:	mov	w2, #0x167                 	// #359
    1c74:	bl	0 <__assert_fail>
    1c78:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c7c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c80:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c84:	add	x0, x0, #0x0
    1c88:	add	x1, x1, #0x0
    1c8c:	add	x3, x3, #0x0
    1c90:	mov	w2, #0xd1                  	// #209
    1c94:	bl	0 <__assert_fail>

0000000000001c98 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE>:
    1c98:	sub	sp, sp, #0xa0
    1c9c:	stp	x29, x30, [sp, #80]
    1ca0:	stp	x26, x25, [sp, #96]
    1ca4:	stp	x24, x23, [sp, #112]
    1ca8:	stp	x22, x21, [sp, #128]
    1cac:	stp	x20, x19, [sp, #144]
    1cb0:	add	x29, sp, #0x50
    1cb4:	ldrh	w8, [x1, #8]
    1cb8:	ldr	x9, [x0, #112]
    1cbc:	ldrb	w10, [x1, #42]
    1cc0:	add	x9, x9, x8, lsl #5
    1cc4:	ldr	w9, [x9, #16]
    1cc8:	str	w9, [x1, #12]
    1ccc:	cbnz	w10, 1e34 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x19c>
    1cd0:	ldr	w10, [x0, #144]
    1cd4:	cmp	w10, w8
    1cd8:	b.ls	1e50 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x1b8>  // b.plast
    1cdc:	mov	w11, #0x1                   	// #1
    1ce0:	mov	x19, x2
    1ce4:	mov	x20, x1
    1ce8:	add	x9, x0, #0x88
    1cec:	cmp	w10, #0x40
    1cf0:	lsl	x10, x11, x8
    1cf4:	b.ls	1d08 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x70>  // b.plast
    1cf8:	ldr	x9, [x9]
    1cfc:	lsr	x8, x8, #3
    1d00:	and	x8, x8, #0x1ff8
    1d04:	add	x9, x9, x8
    1d08:	ldr	x8, [x9]
    1d0c:	tst	x8, x10
    1d10:	b.eq	1d1c <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x84>  // b.none
    1d14:	mov	w8, #0x1                   	// #1
    1d18:	strb	w8, [x20, #41]
    1d1c:	adrp	x8, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1d20:	ldr	d0, [x8]
    1d24:	mov	x8, sp
    1d28:	add	x8, x8, #0x10
    1d2c:	mov	x2, sp
    1d30:	mov	x1, x20
    1d34:	str	x8, [sp]
    1d38:	str	d0, [sp, #8]
    1d3c:	bl	1408 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE>
    1d40:	ldr	w8, [sp, #8]
    1d44:	cmp	x8, #0x0
    1d48:	cset	w9, eq  // eq = none
    1d4c:	str	w8, [x20, #16]
    1d50:	strb	w9, [x20, #40]
    1d54:	ldr	x11, [x19, #152]
    1d58:	ldr	x9, [x11, #40]
    1d5c:	cbz	x9, 1e70 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x1d8>
    1d60:	ldr	x22, [x20]
    1d64:	ldr	w11, [x11, #52]
    1d68:	ldr	w10, [x22, #12]
    1d6c:	cmp	w11, w10
    1d70:	b.ls	1e90 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x1f8>  // b.plast
    1d74:	ldr	x21, [sp]
    1d78:	cbz	w8, 1e1c <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x184>
    1d7c:	add	x23, x21, x8, lsl #4
    1d80:	mov	w8, #0x18                  	// #24
    1d84:	madd	x8, x10, x8, x9
    1d88:	add	x24, x8, #0x12
    1d8c:	add	x25, x8, #0x14
    1d90:	mov	w26, #0xc                   	// #12
    1d94:	b	1db0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x118>
    1d98:	mov	w3, wzr
    1d9c:	ldr	w1, [x21], #16
    1da0:	mov	x2, x20
    1da4:	bl	0 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi>
    1da8:	cmp	x21, x23
    1dac:	b.eq	1e18 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x180>  // b.none
    1db0:	ldrh	w11, [x25]
    1db4:	ldr	x0, [x21, #8]
    1db8:	cbz	x11, 1d98 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x100>
    1dbc:	ldr	x9, [x0]
    1dc0:	ldr	x10, [x19, #144]
    1dc4:	ldrh	w12, [x24]
    1dc8:	ldr	w8, [x22, #4]
    1dcc:	ldr	w9, [x9, #12]
    1dd0:	add	x11, x11, x11, lsl #1
    1dd4:	madd	x10, x12, x26, x10
    1dd8:	add	x10, x10, #0x8
    1ddc:	lsl	x11, x11, #2
    1de0:	b	1df0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x158>
    1de4:	subs	x11, x11, #0xc
    1de8:	add	x10, x10, #0xc
    1dec:	b.eq	1d98 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x100>  // b.none
    1df0:	ldur	w12, [x10, #-8]
    1df4:	cmp	w12, w8
    1df8:	b.cc	1de4 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x14c>  // b.lo, b.ul, b.last
    1dfc:	b.hi	1d98 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x100>  // b.pmore
    1e00:	ldur	w12, [x10, #-4]
    1e04:	cbz	w12, 1e10 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x178>
    1e08:	cmp	w12, w9
    1e0c:	b.ne	1de4 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x14c>  // b.any
    1e10:	ldr	w3, [x10]
    1e14:	b	1d9c <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x104>
    1e18:	ldr	x21, [sp]
    1e1c:	mov	x8, sp
    1e20:	add	x8, x8, #0x10
    1e24:	cmp	x21, x8
    1e28:	b.eq	1e34 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x19c>  // b.none
    1e2c:	mov	x0, x21
    1e30:	bl	0 <free>
    1e34:	ldp	x20, x19, [sp, #144]
    1e38:	ldp	x22, x21, [sp, #128]
    1e3c:	ldp	x24, x23, [sp, #112]
    1e40:	ldp	x26, x25, [sp, #96]
    1e44:	ldp	x29, x30, [sp, #80]
    1e48:	add	sp, sp, #0xa0
    1e4c:	ret
    1e50:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1e54:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1e58:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1e5c:	add	x0, x0, #0x0
    1e60:	add	x1, x1, #0x0
    1e64:	add	x3, x3, #0x0
    1e68:	mov	w2, #0x472                 	// #1138
    1e6c:	bl	0 <__assert_fail>
    1e70:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1e74:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1e78:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1e7c:	add	x0, x0, #0x0
    1e80:	add	x1, x1, #0x0
    1e84:	add	x3, x3, #0x0
    1e88:	mov	w2, #0x15b                 	// #347
    1e8c:	bl	0 <__assert_fail>
    1e90:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1e94:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1e98:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1e9c:	add	x0, x0, #0x0
    1ea0:	add	x1, x1, #0x0
    1ea4:	add	x3, x3, #0x0
    1ea8:	mov	w2, #0x15d                 	// #349
    1eac:	bl	0 <__assert_fail>

0000000000001eb0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE>:
    1eb0:	sub	sp, sp, #0x80
    1eb4:	stp	x29, x30, [sp, #32]
    1eb8:	stp	x28, x27, [sp, #48]
    1ebc:	stp	x26, x25, [sp, #64]
    1ec0:	stp	x24, x23, [sp, #80]
    1ec4:	stp	x22, x21, [sp, #96]
    1ec8:	stp	x20, x19, [sp, #112]
    1ecc:	add	x29, sp, #0x20
    1ed0:	ldr	w22, [x0, #24]
    1ed4:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1ed8:	ldr	d0, [x9]
    1edc:	mov	x8, sp
    1ee0:	mov	x21, x2
    1ee4:	mov	x20, x1
    1ee8:	mov	x19, x0
    1eec:	add	x1, x8, #0x10
    1ef0:	cmp	w22, #0x5
    1ef4:	str	x1, [sp]
    1ef8:	str	d0, [sp, #8]
    1efc:	b.cc	1f18 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x68>  // b.lo, b.ul, b.last
    1f00:	mov	x0, sp
    1f04:	mov	w3, #0x4                   	// #4
    1f08:	mov	x2, x22
    1f0c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1f10:	ldr	w8, [sp, #12]
    1f14:	b	1f1c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x6c>
    1f18:	mov	w8, #0x4                   	// #4
    1f1c:	cmp	x8, x22
    1f20:	b.cc	2118 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x268>  // b.lo, b.ul, b.last
    1f24:	str	w22, [sp, #8]
    1f28:	cbz	w22, 1f3c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x8c>
    1f2c:	ldr	x0, [sp]
    1f30:	lsl	x2, x22, #2
    1f34:	mov	w1, wzr
    1f38:	bl	0 <memset>
    1f3c:	cbz	x21, 1fa8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0xf8>
    1f40:	ldr	x8, [x19, #112]
    1f44:	ldr	x9, [sp]
    1f48:	lsl	x10, x21, #1
    1f4c:	ldrh	w11, [x20]
    1f50:	add	x12, x8, x11, lsl #5
    1f54:	ldr	w12, [x12, #16]
    1f58:	cbz	w12, 1f80 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0xd0>
    1f5c:	ldr	w13, [sp, #8]
    1f60:	cmp	w13, w12
    1f64:	b.ls	20d8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x228>  // b.plast
    1f68:	add	x13, x8, x11, lsl #5
    1f6c:	lsl	x12, x12, #2
    1f70:	ldr	w13, [x13, #20]
    1f74:	ldr	w14, [x9, x12]
    1f78:	add	w13, w14, w13
    1f7c:	str	w13, [x9, x12]
    1f80:	ldr	w12, [sp, #8]
    1f84:	cbz	w12, 20d8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x228>
    1f88:	add	x11, x8, x11, lsl #5
    1f8c:	ldr	w12, [x9]
    1f90:	ldr	w11, [x11, #20]
    1f94:	subs	x10, x10, #0x2
    1f98:	add	x20, x20, #0x2
    1f9c:	add	w11, w12, w11
    1fa0:	str	w11, [x9]
    1fa4:	b.ne	1f4c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x9c>  // b.any
    1fa8:	ldr	w23, [x19, #24]
    1fac:	cbz	w23, 2098 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x1e8>
    1fb0:	adrp	x26, 0 <_ZN4llvm9DebugFlagE>
    1fb4:	ldr	x26, [x26]
    1fb8:	adrp	x22, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1fbc:	mov	x24, xzr
    1fc0:	mov	w20, wzr
    1fc4:	mov	w25, #0x4                   	// #4
    1fc8:	add	x22, x22, #0x0
    1fcc:	mov	w27, #0x1                   	// #1
    1fd0:	b	2020 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x170>
    1fd4:	ldur	q0, [x22, #27]
    1fd8:	ldp	q2, q1, [x22]
    1fdc:	stur	q0, [x8, #27]
    1fe0:	stp	q2, q1, [x8]
    1fe4:	ldr	x8, [x0, #24]
    1fe8:	add	x8, x8, #0x2b
    1fec:	str	x8, [x0, #24]
    1ff0:	ldur	w9, [x21, #-4]
    1ff4:	mov	w8, w9
    1ff8:	ldr	w10, [x28, x25]
    1ffc:	add	w8, w10, w8
    2000:	lsl	w10, w27, w24
    2004:	cmp	w9, w8
    2008:	csel	w8, w10, wzr, cc  // cc = lo, ul, last
    200c:	orr	w20, w8, w20
    2010:	add	x24, x24, #0x1
    2014:	cmp	x23, x24
    2018:	add	x25, x25, #0x14
    201c:	b.eq	209c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x1ec>  // b.none
    2020:	ldr	w8, [sp, #8]
    2024:	cmp	x24, x8
    2028:	b.cs	20d8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x228>  // b.hs, b.nlast
    202c:	ldr	x8, [sp]
    2030:	ldr	w8, [x8, x24, lsl #2]
    2034:	cbz	w8, 2010 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x160>
    2038:	ldr	w9, [x19, #24]
    203c:	cmp	x24, x9
    2040:	b.cs	20f8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x248>  // b.hs, b.nlast
    2044:	ldr	x28, [x19, #16]
    2048:	add	x21, x28, x25
    204c:	ldur	w9, [x21, #-4]
    2050:	cbz	w9, 2010 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x160>
    2054:	cmp	w9, w8
    2058:	b.cs	1ff8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x148>  // b.hs, b.nlast
    205c:	ldrb	w8, [x26]
    2060:	cbz	w8, 1ff0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x140>
    2064:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2068:	add	x0, x0, #0x0
    206c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    2070:	tbz	w0, #0, 1ff0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x140>
    2074:	bl	0 <_ZN4llvm4dbgsEv>
    2078:	ldp	x9, x8, [x0, #16]
    207c:	sub	x9, x9, x8
    2080:	cmp	x9, #0x2a
    2084:	b.hi	1fd4 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x124>  // b.pmore
    2088:	mov	w2, #0x2b                  	// #43
    208c:	mov	x1, x22
    2090:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2094:	b	1ff0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x140>
    2098:	mov	w20, wzr
    209c:	ldr	x0, [sp]
    20a0:	mov	x8, sp
    20a4:	add	x8, x8, #0x10
    20a8:	cmp	x0, x8
    20ac:	b.eq	20b4 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x204>  // b.none
    20b0:	bl	0 <free>
    20b4:	mov	w0, w20
    20b8:	ldp	x20, x19, [sp, #112]
    20bc:	ldp	x22, x21, [sp, #96]
    20c0:	ldp	x24, x23, [sp, #80]
    20c4:	ldp	x26, x25, [sp, #64]
    20c8:	ldp	x28, x27, [sp, #48]
    20cc:	ldp	x29, x30, [sp, #32]
    20d0:	add	sp, sp, #0x80
    20d4:	ret
    20d8:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    20dc:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    20e0:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    20e4:	add	x0, x0, #0x0
    20e8:	add	x1, x1, #0x0
    20ec:	add	x3, x3, #0x0
    20f0:	mov	w2, #0x95                  	// #149
    20f4:	bl	0 <__assert_fail>
    20f8:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    20fc:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2100:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2104:	add	x0, x0, #0x0
    2108:	add	x1, x1, #0x0
    210c:	add	x3, x3, #0x0
    2110:	mov	w2, #0x99                  	// #153
    2114:	bl	0 <__assert_fail>
    2118:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    211c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2120:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2124:	add	x0, x0, #0x0
    2128:	add	x1, x1, #0x0
    212c:	add	x3, x3, #0x0
    2130:	mov	w2, #0x43                  	// #67
    2134:	bl	0 <__assert_fail>

0000000000002138 <_ZNK4llvm3mca12RegisterFile4dumpEv>:
    2138:	stp	x29, x30, [sp, #-96]!
    213c:	stp	x28, x27, [sp, #16]
    2140:	stp	x26, x25, [sp, #32]
    2144:	stp	x24, x23, [sp, #48]
    2148:	stp	x22, x21, [sp, #64]
    214c:	stp	x20, x19, [sp, #80]
    2150:	mov	x29, sp
    2154:	ldr	x8, [x0, #8]
    2158:	mov	x19, x0
    215c:	ldr	w22, [x8, #8]
    2160:	cbz	w22, 2480 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x348>
    2164:	mov	x20, xzr
    2168:	add	x23, x19, #0x88
    216c:	mov	w26, #0x1                   	// #1
    2170:	b	2190 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x58>
    2174:	add	x9, x8, #0x1
    2178:	str	x9, [x0, #24]
    217c:	mov	w9, #0xa                   	// #10
    2180:	strb	w9, [x8]
    2184:	add	x20, x20, #0x1
    2188:	cmp	x20, x22
    218c:	b.eq	2480 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x348>  // b.none
    2190:	ldr	w8, [x19, #144]
    2194:	cmp	x20, x8
    2198:	b.cs	25f4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4bc>  // b.hs, b.nlast
    219c:	ldr	x24, [x19, #112]
    21a0:	cmp	w8, #0x41
    21a4:	lsl	x25, x26, x20
    21a8:	mov	x8, x23
    21ac:	b.cc	21bc <_ZNK4llvm3mca12RegisterFile4dumpEv+0x84>  // b.lo, b.ul, b.last
    21b0:	ldr	x8, [x23]
    21b4:	ubfx	x9, x20, #6, #26
    21b8:	add	x8, x8, x9, lsl #3
    21bc:	ldr	x8, [x8]
    21c0:	tst	x8, x25
    21c4:	b.eq	2184 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4c>  // b.none
    21c8:	bl	0 <_ZN4llvm4dbgsEv>
    21cc:	ldr	x8, [x19, #8]
    21d0:	ldr	w9, [x8, #8]
    21d4:	cmp	x20, x9
    21d8:	b.cs	2634 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4fc>  // b.hs, b.nlast
    21dc:	ldr	x9, [x8]
    21e0:	mov	w10, #0x18                  	// #24
    21e4:	mul	x10, x20, x10
    21e8:	ldr	x8, [x8, #64]
    21ec:	ldr	w9, [x9, x10]
    21f0:	mov	x27, x0
    21f4:	add	x28, x8, x9
    21f8:	cbz	x8, 2234 <_ZNK4llvm3mca12RegisterFile4dumpEv+0xfc>
    21fc:	mov	x0, x28
    2200:	bl	0 <strlen>
    2204:	mov	x21, x0
    2208:	ldp	x8, x0, [x27, #16]
    220c:	sub	x8, x8, x0
    2210:	cmp	x21, x8
    2214:	b.ls	2248 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x110>  // b.plast
    2218:	mov	x0, x27
    221c:	mov	x1, x28
    2220:	mov	x2, x21
    2224:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2228:	mov	x27, x0
    222c:	ldr	x0, [x0, #24]
    2230:	b	2264 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x12c>
    2234:	mov	x21, xzr
    2238:	ldp	x8, x0, [x27, #16]
    223c:	sub	x8, x8, x0
    2240:	cmp	x21, x8
    2244:	b.hi	2218 <_ZNK4llvm3mca12RegisterFile4dumpEv+0xe0>  // b.pmore
    2248:	cbz	x21, 2264 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x12c>
    224c:	mov	x1, x28
    2250:	mov	x2, x21
    2254:	bl	0 <memcpy>
    2258:	ldr	x8, [x27, #24]
    225c:	add	x0, x8, x21
    2260:	str	x0, [x27, #24]
    2264:	ldr	x8, [x27, #16]
    2268:	sub	x8, x8, x0
    226c:	cmp	x8, #0x1
    2270:	b.hi	2290 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x158>  // b.pmore
    2274:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2278:	mov	w2, #0x2                   	// #2
    227c:	mov	x0, x27
    2280:	add	x1, x1, #0x0
    2284:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2288:	mov	x27, x0
    228c:	b	22a4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x16c>
    2290:	mov	w8, #0x202c                	// #8236
    2294:	strh	w8, [x0]
    2298:	ldr	x8, [x27, #24]
    229c:	add	x8, x8, #0x2
    22a0:	str	x8, [x27, #24]
    22a4:	mov	x0, x27
    22a8:	mov	x1, x20
    22ac:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    22b0:	ldp	x9, x8, [x0, #16]
    22b4:	sub	x9, x9, x8
    22b8:	cmp	x9, #0x5
    22bc:	b.hi	22d4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x19c>  // b.pmore
    22c0:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    22c4:	mov	w2, #0x6                   	// #6
    22c8:	add	x1, x1, #0x0
    22cc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    22d0:	b	22f4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x1bc>
    22d4:	mov	w9, #0x3d46                	// #15686
    22d8:	strh	w9, [x8, #4]
    22dc:	mov	w9, #0x202c                	// #8236
    22e0:	movk	w9, #0x5250, lsl #16
    22e4:	str	w9, [x8]
    22e8:	ldr	x8, [x0, #24]
    22ec:	add	x8, x8, #0x6
    22f0:	str	x8, [x0, #24]
    22f4:	add	x8, x24, x20, lsl #5
    22f8:	ldr	w1, [x8, #16]
    22fc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2300:	ldp	x9, x8, [x0, #16]
    2304:	sub	x9, x9, x8
    2308:	cmp	x9, #0x6
    230c:	b.hi	2324 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x1ec>  // b.pmore
    2310:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2314:	mov	w2, #0x7                   	// #7
    2318:	add	x1, x1, #0x0
    231c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2320:	b	2348 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x210>
    2324:	mov	w9, #0x736f                	// #29551
    2328:	movk	w9, #0x3d74, lsl #16
    232c:	stur	w9, [x8, #3]
    2330:	mov	w9, #0x202c                	// #8236
    2334:	movk	w9, #0x6f43, lsl #16
    2338:	str	w9, [x8]
    233c:	ldr	x8, [x0, #24]
    2340:	add	x8, x8, #0x7
    2344:	str	x8, [x0, #24]
    2348:	add	x8, x24, x20, lsl #5
    234c:	ldr	w1, [x8, #20]
    2350:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2354:	ldp	x9, x8, [x0, #16]
    2358:	sub	x9, x9, x8
    235c:	cmp	x9, #0xa
    2360:	b.hi	2378 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x240>  // b.pmore
    2364:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2368:	mov	w2, #0xb                   	// #11
    236c:	add	x1, x1, #0x0
    2370:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2374:	b	23a0 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x268>
    2378:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    237c:	add	x9, x9, #0x0
    2380:	ldr	x9, [x9]
    2384:	mov	w10, #0x4165                	// #16741
    2388:	movk	w10, #0x3d73, lsl #16
    238c:	stur	w10, [x8, #7]
    2390:	str	x9, [x8]
    2394:	ldr	x8, [x0, #24]
    2398:	add	x8, x8, #0xb
    239c:	str	x8, [x0, #24]
    23a0:	add	x8, x24, x20, lsl #5
    23a4:	ldrh	w1, [x8, #24]
    23a8:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    23ac:	ldp	x9, x8, [x0, #16]
    23b0:	sub	x9, x9, x8
    23b4:	cmp	x9, #0x8
    23b8:	b.hi	23d0 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x298>  // b.pmore
    23bc:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    23c0:	mov	w2, #0x9                   	// #9
    23c4:	add	x1, x1, #0x0
    23c8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    23cc:	b	23f4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x2bc>
    23d0:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    23d4:	add	x9, x9, #0x0
    23d8:	ldr	x9, [x9]
    23dc:	mov	w10, #0x3d                  	// #61
    23e0:	strb	w10, [x8, #8]
    23e4:	str	x9, [x8]
    23e8:	ldr	x8, [x0, #24]
    23ec:	add	x8, x8, #0x9
    23f0:	str	x8, [x0, #24]
    23f4:	ldr	w8, [x19, #144]
    23f8:	cmp	x20, x8
    23fc:	b.cs	25f4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4bc>  // b.hs, b.nlast
    2400:	cmp	w8, #0x41
    2404:	mov	x8, x23
    2408:	b.cc	2418 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x2e0>  // b.lo, b.ul, b.last
    240c:	ldr	x8, [x23]
    2410:	ubfx	x9, x20, #6, #26
    2414:	add	x8, x8, x9, lsl #3
    2418:	ldr	x8, [x8]
    241c:	tst	x8, x25
    2420:	cset	w1, ne  // ne = any
    2424:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    2428:	ldp	x9, x8, [x0, #16]
    242c:	cmp	x9, x8
    2430:	b.ne	2448 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x310>  // b.any
    2434:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2438:	mov	w2, #0x1                   	// #1
    243c:	add	x1, x1, #0x0
    2440:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2444:	b	245c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x324>
    2448:	mov	w9, #0x2c                  	// #44
    244c:	strb	w9, [x8]
    2450:	ldr	x8, [x0, #24]
    2454:	add	x8, x8, #0x1
    2458:	str	x8, [x0, #24]
    245c:	add	x0, x24, x20, lsl #5
    2460:	bl	0 <_ZNK4llvm3mca8WriteRef4dumpEv>
    2464:	bl	0 <_ZN4llvm4dbgsEv>
    2468:	ldp	x9, x8, [x0, #16]
    246c:	cmp	x8, x9
    2470:	b.cc	2174 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x3c>  // b.lo, b.ul, b.last
    2474:	mov	w1, #0xa                   	// #10
    2478:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    247c:	b	2184 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4c>
    2480:	ldr	w24, [x19, #24]
    2484:	cbz	w24, 25d8 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4a0>
    2488:	adrp	x21, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    248c:	adrp	x22, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2490:	adrp	x23, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2494:	mov	x20, xzr
    2498:	mov	w25, #0x4                   	// #4
    249c:	add	x21, x21, #0x0
    24a0:	add	x22, x22, #0x0
    24a4:	add	x23, x23, #0x0
    24a8:	mov	w26, #0xa                   	// #10
    24ac:	b	24cc <_ZNK4llvm3mca12RegisterFile4dumpEv+0x394>
    24b0:	add	x9, x8, #0x1
    24b4:	str	x9, [x0, #24]
    24b8:	strb	w26, [x8]
    24bc:	add	x20, x20, #0x1
    24c0:	cmp	x24, x20
    24c4:	add	x25, x25, #0x14
    24c8:	b.eq	25d8 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4a0>  // b.none
    24cc:	bl	0 <_ZN4llvm4dbgsEv>
    24d0:	ldp	x9, x8, [x0, #16]
    24d4:	sub	x9, x9, x8
    24d8:	cmp	x9, #0xe
    24dc:	b.hi	24f0 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x3b8>  // b.pmore
    24e0:	mov	w2, #0xf                   	// #15
    24e4:	mov	x1, x21
    24e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    24ec:	b	250c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x3d4>
    24f0:	ldur	x9, [x21, #7]
    24f4:	ldr	x10, [x21]
    24f8:	stur	x9, [x8, #7]
    24fc:	str	x10, [x8]
    2500:	ldr	x8, [x0, #24]
    2504:	add	x8, x8, #0xf
    2508:	str	x8, [x0, #24]
    250c:	mov	x1, x20
    2510:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2514:	ldr	w8, [x19, #24]
    2518:	cmp	x20, x8
    251c:	b.cs	2614 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4dc>  // b.hs, b.nlast
    2520:	ldr	x27, [x19, #16]
    2524:	bl	0 <_ZN4llvm4dbgsEv>
    2528:	ldp	x9, x8, [x0, #16]
    252c:	sub	x9, x9, x8
    2530:	cmp	x9, #0x18
    2534:	b.hi	2548 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x410>  // b.pmore
    2538:	mov	w2, #0x19                  	// #25
    253c:	mov	x1, x22
    2540:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2544:	b	2564 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x42c>
    2548:	ldur	q0, [x22, #9]
    254c:	ldr	q1, [x22]
    2550:	stur	q0, [x8, #9]
    2554:	str	q1, [x8]
    2558:	ldr	x8, [x0, #24]
    255c:	add	x8, x8, #0x19
    2560:	str	x8, [x0, #24]
    2564:	add	x8, x27, x25
    2568:	ldur	w1, [x8, #-4]
    256c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2570:	ldp	x9, x8, [x0, #16]
    2574:	sub	x9, x9, x8
    2578:	cmp	x9, #0x18
    257c:	b.hi	2590 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x458>  // b.pmore
    2580:	mov	w2, #0x19                  	// #25
    2584:	mov	x1, x23
    2588:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    258c:	b	25ac <_ZNK4llvm3mca12RegisterFile4dumpEv+0x474>
    2590:	ldur	q0, [x23, #9]
    2594:	ldr	q1, [x23]
    2598:	stur	q0, [x8, #9]
    259c:	str	q1, [x8]
    25a0:	ldr	x8, [x0, #24]
    25a4:	add	x8, x8, #0x19
    25a8:	str	x8, [x0, #24]
    25ac:	ldr	w1, [x27, x25]
    25b0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    25b4:	ldp	x9, x8, [x0, #16]
    25b8:	cmp	x8, x9
    25bc:	b.cc	24b0 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x378>  // b.lo, b.ul, b.last
    25c0:	mov	w1, #0xa                   	// #10
    25c4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    25c8:	add	x20, x20, #0x1
    25cc:	cmp	x24, x20
    25d0:	add	x25, x25, #0x14
    25d4:	b.ne	24cc <_ZNK4llvm3mca12RegisterFile4dumpEv+0x394>  // b.any
    25d8:	ldp	x20, x19, [sp, #80]
    25dc:	ldp	x22, x21, [sp, #64]
    25e0:	ldp	x24, x23, [sp, #48]
    25e4:	ldp	x26, x25, [sp, #32]
    25e8:	ldp	x28, x27, [sp, #16]
    25ec:	ldp	x29, x30, [sp], #96
    25f0:	ret
    25f4:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    25f8:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    25fc:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2600:	add	x0, x0, #0x0
    2604:	add	x1, x1, #0x0
    2608:	add	x3, x3, #0x0
    260c:	mov	w2, #0x472                 	// #1138
    2610:	bl	0 <__assert_fail>
    2614:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2618:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    261c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2620:	add	x0, x0, #0x0
    2624:	add	x1, x1, #0x0
    2628:	add	x3, x3, #0x0
    262c:	mov	w2, #0x99                  	// #153
    2630:	bl	0 <__assert_fail>
    2634:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2638:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    263c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2640:	add	x0, x0, #0x0
    2644:	add	x1, x1, #0x0
    2648:	add	x3, x3, #0x0
    264c:	mov	w2, #0x1b9                 	// #441
    2650:	bl	0 <__assert_fail>

0000000000002654 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_>:
    2654:	stp	x29, x30, [sp, #-80]!
    2658:	str	x25, [sp, #16]
    265c:	stp	x24, x23, [sp, #32]
    2660:	stp	x22, x21, [sp, #48]
    2664:	stp	x20, x19, [sp, #64]
    2668:	mov	x29, sp
    266c:	sub	x25, x1, x0
    2670:	cmp	x25, #0x101
    2674:	b.lt	2890 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x23c>  // b.tstop
    2678:	mov	x21, x1
    267c:	mov	x19, x0
    2680:	mov	x22, x2
    2684:	and	x20, x3, #0xff
    2688:	add	x24, x0, #0x10
    268c:	b	26b4 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x60>
    2690:	mov	x0, x23
    2694:	mov	x1, x21
    2698:	mov	x2, x22
    269c:	mov	x3, x20
    26a0:	bl	2654 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_>
    26a4:	sub	x25, x23, x19
    26a8:	cmp	x25, #0x100
    26ac:	mov	x21, x23
    26b0:	b.le	2890 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x23c>
    26b4:	cbz	x22, 2804 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x1b0>
    26b8:	lsr	x8, x25, #1
    26bc:	and	x8, x8, #0x7ffffffffffffff0
    26c0:	add	x8, x19, x8
    26c4:	mov	x9, x8
    26c8:	ldr	x10, [x19, #24]
    26cc:	ldr	x12, [x9, #8]!
    26d0:	ldur	x11, [x21, #-8]
    26d4:	sub	x22, x22, #0x1
    26d8:	cmp	x10, x12
    26dc:	b.cs	2708 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0xb4>  // b.hs, b.nlast
    26e0:	cmp	x12, x11
    26e4:	b.cs	2730 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0xdc>  // b.hs, b.nlast
    26e8:	ldr	w10, [x8]
    26ec:	ldr	w11, [x19]
    26f0:	ldr	x13, [x19, #8]
    26f4:	str	x12, [x19, #8]
    26f8:	str	w10, [x19]
    26fc:	str	w11, [x8]
    2700:	str	x13, [x9]
    2704:	b	27ac <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x158>
    2708:	cmp	x10, x11
    270c:	b.cs	2758 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x104>  // b.hs, b.nlast
    2710:	ldr	w8, [x19, #16]
    2714:	ldr	w9, [x19]
    2718:	ldr	x11, [x19, #8]
    271c:	str	x10, [x19, #8]
    2720:	str	w8, [x19]
    2724:	str	w9, [x19, #16]
    2728:	str	x11, [x19, #24]
    272c:	b	27ac <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x158>
    2730:	ldr	w9, [x19]
    2734:	ldr	x8, [x19, #8]
    2738:	cmp	x10, x11
    273c:	b.cs	2780 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x12c>  // b.hs, b.nlast
    2740:	ldur	w10, [x21, #-16]
    2744:	str	x11, [x19, #8]
    2748:	str	w10, [x19]
    274c:	stur	w9, [x21, #-16]
    2750:	stur	x8, [x21, #-8]
    2754:	b	27ac <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x158>
    2758:	ldr	w13, [x19]
    275c:	ldr	x10, [x19, #8]
    2760:	cmp	x12, x11
    2764:	b.cs	2798 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x144>  // b.hs, b.nlast
    2768:	ldur	w8, [x21, #-16]
    276c:	str	x11, [x19, #8]
    2770:	str	w8, [x19]
    2774:	stur	w13, [x21, #-16]
    2778:	stur	x10, [x21, #-8]
    277c:	b	27ac <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x158>
    2780:	ldr	w11, [x19, #16]
    2784:	str	x10, [x19, #8]
    2788:	str	w9, [x19, #16]
    278c:	str	x8, [x19, #24]
    2790:	str	w11, [x19]
    2794:	b	27ac <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x158>
    2798:	ldr	w11, [x8]
    279c:	str	x12, [x19, #8]
    27a0:	str	w11, [x19]
    27a4:	str	w13, [x8]
    27a8:	str	x10, [x9]
    27ac:	mov	x8, x21
    27b0:	mov	x10, x24
    27b4:	ldr	x11, [x19, #8]
    27b8:	sub	x23, x10, #0x10
    27bc:	ldr	x9, [x23, #24]
    27c0:	add	x23, x23, #0x10
    27c4:	cmp	x9, x11
    27c8:	b.cc	27bc <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x168>  // b.lo, b.ul, b.last
    27cc:	add	x10, x23, #0x10
    27d0:	ldur	x12, [x8, #-8]
    27d4:	sub	x8, x8, #0x10
    27d8:	cmp	x11, x12
    27dc:	b.cc	27d0 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x17c>  // b.lo, b.ul, b.last
    27e0:	cmp	x23, x8
    27e4:	b.cs	2690 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x3c>  // b.hs, b.nlast
    27e8:	ldr	w11, [x8]
    27ec:	ldr	w13, [x23]
    27f0:	str	x12, [x23, #8]
    27f4:	str	w11, [x23]
    27f8:	str	w13, [x8]
    27fc:	str	x9, [x8, #8]
    2800:	b	27b4 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x160>
    2804:	lsr	x22, x25, #4
    2808:	sub	x8, x22, #0x2
    280c:	sub	x9, x22, #0x1
    2810:	cmp	x8, #0x0
    2814:	csel	x8, x9, x8, lt  // lt = tstop
    2818:	asr	x23, x8, #1
    281c:	add	x8, x19, x23, lsl #4
    2820:	add	x24, x8, #0x8
    2824:	ldp	x3, x4, [x24, #-8]
    2828:	mov	x0, x19
    282c:	mov	x1, x23
    2830:	mov	x2, x22
    2834:	mov	x5, x20
    2838:	bl	28a8 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_>
    283c:	sub	x23, x23, #0x1
    2840:	cmn	x23, #0x1
    2844:	sub	x24, x24, #0x10
    2848:	b.ne	2824 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x1d0>  // b.any
    284c:	cmp	x25, #0x11
    2850:	b.lt	2890 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x23c>  // b.tstop
    2854:	sub	x21, x21, #0x10
    2858:	ldr	w8, [x19]
    285c:	ldp	x3, x4, [x21]
    2860:	sub	x22, x21, x19
    2864:	asr	x2, x22, #4
    2868:	str	w8, [x21]
    286c:	ldr	x8, [x19, #8]
    2870:	mov	x0, x19
    2874:	mov	x1, xzr
    2878:	mov	x5, x20
    287c:	str	x8, [x21, #8]
    2880:	bl	28a8 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_>
    2884:	cmp	x22, #0x10
    2888:	sub	x21, x21, #0x10
    288c:	b.gt	2858 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x204>
    2890:	ldp	x20, x19, [sp, #64]
    2894:	ldp	x22, x21, [sp, #48]
    2898:	ldp	x24, x23, [sp, #32]
    289c:	ldr	x25, [sp, #16]
    28a0:	ldp	x29, x30, [sp], #80
    28a4:	ret

00000000000028a8 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_>:
    28a8:	sub	x9, x2, #0x1
    28ac:	cmp	x9, #0x0
    28b0:	csel	x8, x2, x9, lt  // lt = tstop
    28b4:	asr	x10, x8, #1
    28b8:	cmp	x10, x1
    28bc:	mov	x8, x1
    28c0:	b.le	2914 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0x6c>
    28c4:	mov	x11, x1
    28c8:	lsl	x8, x11, #1
    28cc:	mov	w12, #0x1                   	// #1
    28d0:	add	x8, x8, #0x2
    28d4:	bfi	x12, x11, #1, #63
    28d8:	add	x13, x0, x8, lsl #4
    28dc:	add	x14, x0, x12, lsl #4
    28e0:	ldr	x13, [x13, #8]
    28e4:	ldr	x14, [x14, #8]
    28e8:	add	x11, x0, x11, lsl #4
    28ec:	cmp	x13, x14
    28f0:	csel	x8, x12, x8, cc  // cc = lo, ul, last
    28f4:	add	x12, x0, x8, lsl #4
    28f8:	ldr	w13, [x12]
    28fc:	cmp	x8, x10
    2900:	str	w13, [x11]
    2904:	ldr	x12, [x12, #8]
    2908:	str	x12, [x11, #8]
    290c:	mov	x11, x8
    2910:	b.lt	28c8 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0x20>  // b.tstop
    2914:	tbnz	w2, #0, 2950 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0xa8>
    2918:	sub	x10, x2, #0x2
    291c:	cmp	x10, #0x0
    2920:	csel	x9, x9, x10, lt  // lt = tstop
    2924:	cmp	x8, x9, asr #1
    2928:	b.ne	2950 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0xa8>  // b.any
    292c:	mov	w9, #0x1                   	// #1
    2930:	bfi	x9, x8, #1, #63
    2934:	add	x10, x0, x9, lsl #4
    2938:	ldr	w11, [x10]
    293c:	add	x8, x0, x8, lsl #4
    2940:	str	w11, [x8]
    2944:	ldr	x10, [x10, #8]
    2948:	str	x10, [x8, #8]
    294c:	mov	x8, x9
    2950:	cmp	x8, x1
    2954:	b.le	29a8 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0x100>
    2958:	sub	x9, x8, #0x1
    295c:	cmp	x9, #0x0
    2960:	csel	x9, x8, x9, lt  // lt = tstop
    2964:	asr	x9, x9, #1
    2968:	add	x10, x0, x9, lsl #4
    296c:	ldr	x10, [x10, #8]
    2970:	cmp	x10, x4
    2974:	b.cs	29a8 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0x100>  // b.hs, b.nlast
    2978:	lsl	x11, x9, #4
    297c:	ldr	w11, [x0, x11]
    2980:	add	x8, x0, x8, lsl #4
    2984:	cmp	x9, x1
    2988:	str	x10, [x8, #8]
    298c:	str	w11, [x8]
    2990:	mov	x8, x9
    2994:	b.gt	2958 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0xb0>
    2998:	add	x8, x0, x9, lsl #4
    299c:	str	w3, [x8]
    29a0:	str	x4, [x8, #8]
    29a4:	ret
    29a8:	mov	x9, x8
    29ac:	add	x8, x0, x9, lsl #4
    29b0:	str	w3, [x8]
    29b4:	str	x4, [x8, #8]
    29b8:	ret

Disassembly of section .text._ZN4llvm3mca12RegisterFileD2Ev:

0000000000000000 <_ZN4llvm3mca12RegisterFileD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileD2Ev>
  10:	ldr	w8, [x0, #144]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	cmp	w8, #0x41
  20:	add	x9, x9, #0x10
  24:	str	x9, [x0]
  28:	b.cc	38 <_ZN4llvm3mca12RegisterFileD2Ev+0x38>  // b.lo, b.ul, b.last
  2c:	ldr	x0, [x19, #136]
  30:	cbz	x0, 38 <_ZN4llvm3mca12RegisterFileD2Ev+0x38>
  34:	bl	0 <_ZdaPv>
  38:	ldr	x0, [x19, #112]
  3c:	cbz	x0, 44 <_ZN4llvm3mca12RegisterFileD2Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #16]
  48:	add	x8, x19, #0x20
  4c:	cmp	x0, x8
  50:	b.eq	58 <_ZN4llvm3mca12RegisterFileD2Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	mov	x0, x19
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca12RegisterFileD0Ev:

0000000000000000 <_ZN4llvm3mca12RegisterFileD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileD0Ev>
  10:	ldr	w8, [x0, #144]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	cmp	w8, #0x41
  20:	add	x9, x9, #0x10
  24:	str	x9, [x0]
  28:	b.cc	38 <_ZN4llvm3mca12RegisterFileD0Ev+0x38>  // b.lo, b.ul, b.last
  2c:	ldr	x0, [x19, #136]
  30:	cbz	x0, 38 <_ZN4llvm3mca12RegisterFileD0Ev+0x38>
  34:	bl	0 <_ZdaPv>
  38:	ldr	x0, [x19, #112]
  3c:	cbz	x0, 44 <_ZN4llvm3mca12RegisterFileD0Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #16]
  48:	add	x8, x19, #0x20
  4c:	cmp	x0, x8
  50:	b.eq	58 <_ZN4llvm3mca12RegisterFileD0Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	mov	x0, x19
  5c:	bl	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
  60:	mov	x0, x19
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

ResourceManager.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca16ResourceStrategyD0Ev>:
       0:	brk	#0x1

0000000000000004 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm>:
       4:	stp	x29, x30, [sp, #-16]!
       8:	mov	x29, sp
       c:	ldr	x9, [x0, #16]
      10:	ands	x8, x9, x1
      14:	b.ne	44 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x40>  // b.any
      18:	ldr	x9, [x0, #8]
      1c:	ldr	x8, [x0, #24]
      20:	eor	x10, x8, x9
      24:	ands	x8, x10, x1
      28:	stp	x10, xzr, [x0, #16]
      2c:	b.eq	38 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x34>  // b.none
      30:	mov	x9, x10
      34:	b	44 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x40>
      38:	ands	x8, x9, x1
      3c:	str	x9, [x0, #16]
      40:	b.eq	70 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x6c>  // b.none
      44:	clz	x8, x8
      48:	eor	x8, x8, #0x3f
      4c:	mov	w10, #0x1                   	// #1
      50:	lsl	x8, x10, x8
      54:	sub	x10, x8, #0x1
      58:	orr	x10, x10, x8
      5c:	and	x9, x10, x9
      60:	str	x9, [x0, #16]
      64:	mov	x0, x8
      68:	ldp	x29, x30, [sp], #16
      6c:	ret
      70:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
      74:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
      78:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
      7c:	add	x0, x0, #0x0
      80:	add	x1, x1, #0x0
      84:	add	x3, x3, #0x0
      88:	mov	w2, #0x64                  	// #100
      8c:	bl	0 <__assert_fail>

0000000000000090 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>:
      90:	ldr	x8, [x0, #16]
      94:	cmp	x8, x1
      98:	b.cs	ac <_ZN4llvm3mca23DefaultResourceStrategy4usedEm+0x1c>  // b.hs, b.nlast
      9c:	ldr	x8, [x0, #24]
      a0:	orr	x8, x8, x1
      a4:	str	x8, [x0, #24]
      a8:	ret
      ac:	bics	x8, x8, x1
      b0:	str	x8, [x0, #16]
      b4:	b.eq	bc <_ZN4llvm3mca23DefaultResourceStrategy4usedEm+0x2c>  // b.none
      b8:	ret
      bc:	ldr	x8, [x0, #8]
      c0:	ldr	x9, [x0, #24]
      c4:	eor	x8, x9, x8
      c8:	stp	x8, xzr, [x0, #16]
      cc:	ret

00000000000000d0 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm>:
      d0:	stp	x29, x30, [sp, #-16]!
      d4:	mov	x29, sp
      d8:	fmov	d0, x3
      dc:	str	w2, [x0]
      e0:	str	x3, [x0, #8]
      e4:	cnt	v0.8b, v0.8b
      e8:	uaddlv	h0, v0.8b
      ec:	ldr	w8, [x1, #16]
      f0:	fmov	w9, s0
      f4:	cmp	w9, #0x1
      f8:	cset	w10, hi  // hi = pmore
      fc:	cmp	w9, #0x2
     100:	str	w8, [x0, #32]
     104:	strb	w10, [x0, #41]
     108:	b.cc	124 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm+0x54>  // b.lo, b.ul, b.last
     10c:	cbz	x3, 150 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm+0x80>
     110:	clz	x9, x3
     114:	eor	x9, x9, #0x3f
     118:	mov	w10, #0x1                   	// #1
     11c:	lsl	x9, x10, x9
     120:	b	130 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm+0x60>
     124:	ldr	w9, [x1, #8]
     128:	mov	x3, #0xffffffffffffffff    	// #-1
     12c:	lsl	x9, x3, x9
     130:	cmn	w8, #0x1
     134:	eor	x9, x9, x3
     138:	csel	w8, wzr, w8, eq  // eq = none
     13c:	stp	x9, x9, [x0, #16]
     140:	str	w8, [x0, #36]
     144:	strb	wzr, [x0, #40]
     148:	ldp	x29, x30, [sp], #16
     14c:	ret
     150:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     154:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     158:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     15c:	add	x0, x0, #0x0
     160:	add	x1, x1, #0x0
     164:	add	x3, x3, #0x0
     168:	mov	w2, #0x64                  	// #100
     16c:	bl	0 <__assert_fail>

0000000000000170 <_ZNK4llvm3mca13ResourceState7isReadyEj>:
     170:	ldrb	w8, [x0, #40]
     174:	cbz	w8, 188 <_ZNK4llvm3mca13ResourceState7isReadyEj+0x18>
     178:	ldr	w8, [x0, #32]
     17c:	cbz	w8, 188 <_ZNK4llvm3mca13ResourceState7isReadyEj+0x18>
     180:	mov	w0, wzr
     184:	ret
     188:	ldr	d0, [x0, #24]
     18c:	cnt	v0.8b, v0.8b
     190:	uaddlv	h0, v0.8b
     194:	fmov	w8, s0
     198:	cmp	w8, w1
     19c:	cset	w0, cs  // cs = hs, nlast
     1a0:	ret

00000000000001a4 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv>:
     1a4:	ldr	w8, [x0, #32]
     1a8:	cbz	w8, 1c4 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv+0x20>
     1ac:	cmp	w8, #0x1
     1b0:	b.lt	1d0 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv+0x2c>  // b.tstop
     1b4:	ldr	w8, [x0, #36]
     1b8:	cmp	w8, #0x0
     1bc:	cset	w0, eq  // eq = none
     1c0:	ret
     1c4:	ldrb	w8, [x0, #40]
     1c8:	lsl	w0, w8, #1
     1cc:	ret
     1d0:	mov	w0, wzr
     1d4:	ret

00000000000001d8 <_ZNK4llvm3mca13ResourceState4dumpEv>:
     1d8:	sub	sp, sp, #0x70
     1dc:	stp	x29, x30, [sp, #80]
     1e0:	str	x19, [sp, #96]
     1e4:	add	x29, sp, #0x50
     1e8:	mov	x19, x0
     1ec:	bl	0 <_ZN4llvm4dbgsEv>
     1f0:	ldp	x9, x8, [x0, #16]
     1f4:	sub	x9, x9, x8
     1f8:	cmp	x9, #0x4
     1fc:	b.hi	214 <_ZNK4llvm3mca13ResourceState4dumpEv+0x3c>  // b.pmore
     200:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     204:	add	x1, x1, #0x0
     208:	mov	w2, #0x5                   	// #5
     20c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     210:	b	234 <_ZNK4llvm3mca13ResourceState4dumpEv+0x5c>
     214:	mov	w10, #0x414d                	// #16717
     218:	mov	w9, #0x3d                  	// #61
     21c:	movk	w10, #0x4b53, lsl #16
     220:	strb	w9, [x8, #4]
     224:	str	w10, [x8]
     228:	ldr	x8, [x0, #24]
     22c:	add	x8, x8, #0x5
     230:	str	x8, [x0, #24]
     234:	ldr	x8, [x19, #8]
     238:	mov	w9, #0x10                  	// #16
     23c:	mov	w10, #0x1                   	// #1
     240:	sub	x1, x29, #0x18
     244:	stur	w9, [x29, #-8]
     248:	sturh	w10, [x29, #-4]
     24c:	stp	x8, xzr, [x29, #-24]
     250:	sturb	w10, [x29, #-2]
     254:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     258:	ldp	x9, x8, [x0, #16]
     25c:	sub	x9, x9, x8
     260:	cmp	x9, #0x8
     264:	b.hi	27c <_ZNK4llvm3mca13ResourceState4dumpEv+0xa4>  // b.pmore
     268:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     26c:	add	x1, x1, #0x0
     270:	mov	w2, #0x9                   	// #9
     274:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     278:	b	2a0 <_ZNK4llvm3mca13ResourceState4dumpEv+0xc8>
     27c:	adrp	x9, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     280:	add	x9, x9, #0x0
     284:	ldr	x9, [x9]
     288:	mov	w10, #0x3d                  	// #61
     28c:	strb	w10, [x8, #8]
     290:	str	x9, [x8]
     294:	ldr	x8, [x0, #24]
     298:	add	x8, x8, #0x9
     29c:	str	x8, [x0, #24]
     2a0:	ldr	x8, [x19, #16]
     2a4:	mov	w9, #0x10                  	// #16
     2a8:	mov	w10, #0x1                   	// #1
     2ac:	add	x1, sp, #0x20
     2b0:	str	w9, [sp, #48]
     2b4:	strh	w10, [sp, #52]
     2b8:	stp	x8, xzr, [sp, #32]
     2bc:	strb	w10, [sp, #54]
     2c0:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     2c4:	ldp	x9, x8, [x0, #16]
     2c8:	sub	x9, x9, x8
     2cc:	cmp	x9, #0x9
     2d0:	b.hi	2e8 <_ZNK4llvm3mca13ResourceState4dumpEv+0x110>  // b.pmore
     2d4:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     2d8:	add	x1, x1, #0x0
     2dc:	mov	w2, #0xa                   	// #10
     2e0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2e4:	b	30c <_ZNK4llvm3mca13ResourceState4dumpEv+0x134>
     2e8:	adrp	x9, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     2ec:	add	x9, x9, #0x0
     2f0:	ldr	x9, [x9]
     2f4:	mov	w10, #0x3d4b                	// #15691
     2f8:	strh	w10, [x8, #8]
     2fc:	str	x9, [x8]
     300:	ldr	x8, [x0, #24]
     304:	add	x8, x8, #0xa
     308:	str	x8, [x0, #24]
     30c:	ldr	x8, [x19, #24]
     310:	mov	w9, #0x10                  	// #16
     314:	mov	w10, #0x1                   	// #1
     318:	add	x1, sp, #0x8
     31c:	str	w9, [sp, #24]
     320:	strh	w10, [sp, #28]
     324:	stp	x8, xzr, [sp, #8]
     328:	strb	w10, [sp, #30]
     32c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     330:	ldp	x9, x8, [x0, #16]
     334:	sub	x9, x9, x8
     338:	cmp	x9, #0xc
     33c:	b.hi	354 <_ZNK4llvm3mca13ResourceState4dumpEv+0x17c>  // b.pmore
     340:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     344:	add	x1, x1, #0x0
     348:	mov	w2, #0xd                   	// #13
     34c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     350:	b	378 <_ZNK4llvm3mca13ResourceState4dumpEv+0x1a0>
     354:	adrp	x9, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     358:	add	x9, x9, #0x0
     35c:	ldur	x10, [x9, #5]
     360:	ldr	x9, [x9]
     364:	stur	x10, [x8, #5]
     368:	str	x9, [x8]
     36c:	ldr	x8, [x0, #24]
     370:	add	x8, x8, #0xd
     374:	str	x8, [x0, #24]
     378:	ldrsw	x1, [x19, #32]
     37c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     380:	ldp	x9, x8, [x0, #16]
     384:	sub	x9, x9, x8
     388:	cmp	x9, #0x10
     38c:	b.hi	3a4 <_ZNK4llvm3mca13ResourceState4dumpEv+0x1cc>  // b.pmore
     390:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     394:	add	x1, x1, #0x0
     398:	mov	w2, #0x11                  	// #17
     39c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     3a0:	b	3c8 <_ZNK4llvm3mca13ResourceState4dumpEv+0x1f0>
     3a4:	adrp	x9, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     3a8:	add	x9, x9, #0x0
     3ac:	ldr	q0, [x9]
     3b0:	mov	w9, #0x3d                  	// #61
     3b4:	strb	w9, [x8, #16]
     3b8:	str	q0, [x8]
     3bc:	ldr	x8, [x0, #24]
     3c0:	add	x8, x8, #0x11
     3c4:	str	x8, [x0, #24]
     3c8:	ldr	w1, [x19, #36]
     3cc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     3d0:	ldp	x9, x8, [x0, #16]
     3d4:	sub	x9, x9, x8
     3d8:	cmp	x9, #0xa
     3dc:	b.hi	3f4 <_ZNK4llvm3mca13ResourceState4dumpEv+0x21c>  // b.pmore
     3e0:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     3e4:	add	x1, x1, #0x0
     3e8:	mov	w2, #0xb                   	// #11
     3ec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     3f0:	b	41c <_ZNK4llvm3mca13ResourceState4dumpEv+0x244>
     3f4:	adrp	x9, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     3f8:	add	x9, x9, #0x0
     3fc:	ldr	x9, [x9]
     400:	mov	w10, #0x6576                	// #25974
     404:	movk	w10, #0x3d64, lsl #16
     408:	stur	w10, [x8, #7]
     40c:	str	x9, [x8]
     410:	ldr	x8, [x0, #24]
     414:	add	x8, x8, #0xb
     418:	str	x8, [x0, #24]
     41c:	ldrb	w1, [x19, #40]
     420:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     424:	ldp	x9, x8, [x0, #16]
     428:	cmp	x8, x9
     42c:	b.cs	450 <_ZNK4llvm3mca13ResourceState4dumpEv+0x278>  // b.hs, b.nlast
     430:	add	x9, x8, #0x1
     434:	mov	w10, #0xa                   	// #10
     438:	str	x9, [x0, #24]
     43c:	strb	w10, [x8]
     440:	ldr	x19, [sp, #96]
     444:	ldp	x29, x30, [sp, #80]
     448:	add	sp, sp, #0x70
     44c:	ret
     450:	mov	w1, #0xa                   	// #10
     454:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     458:	ldr	x19, [sp, #96]
     45c:	ldp	x29, x30, [sp, #80]
     460:	add	sp, sp, #0x70
     464:	ret

0000000000000468 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE>:
     468:	sub	sp, sp, #0x80
     46c:	str	d8, [sp, #16]
     470:	stp	x29, x30, [sp, #32]
     474:	stp	x28, x27, [sp, #48]
     478:	stp	x26, x25, [sp, #64]
     47c:	stp	x24, x23, [sp, #80]
     480:	stp	x22, x21, [sp, #96]
     484:	stp	x20, x19, [sp, #112]
     488:	add	x29, sp, #0x10
     48c:	adrp	x8, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     490:	ldr	x8, [x8]
     494:	mov	x9, x0
     498:	mov	x20, x1
     49c:	mov	x19, x0
     4a0:	add	x8, x8, #0x10
     4a4:	str	x8, [x0]
     4a8:	ldr	w8, [x1, #48]
     4ac:	str	xzr, [x9, #8]!
     4b0:	stp	xzr, xzr, [x9, #8]
     4b4:	str	x9, [x29, #8]
     4b8:	subs	w22, w8, #0x1
     4bc:	lsl	x21, x22, #3
     4c0:	b.eq	578 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x110>  // b.none
     4c4:	mov	x0, x21
     4c8:	bl	0 <_Znwm>
     4cc:	add	x23, x0, x22, lsl #3
     4d0:	stp	x0, x0, [x19, #8]
     4d4:	str	x23, [x19, #24]
     4d8:	cbz	w22, 4ec <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x84>
     4dc:	mov	w1, wzr
     4e0:	mov	x2, x21
     4e4:	bl	0 <memset>
     4e8:	mov	x0, x23
     4ec:	str	x0, [x19, #16]
     4f0:	ldr	w8, [x20, #48]
     4f4:	mov	x9, x19
     4f8:	str	xzr, [x9, #32]!
     4fc:	stp	xzr, xzr, [x9, #8]
     500:	subs	w22, w8, #0x1
     504:	lsl	x21, x22, #3
     508:	str	x9, [sp, #8]
     50c:	b.eq	590 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x128>  // b.none
     510:	mov	x0, x21
     514:	bl	0 <_Znwm>
     518:	add	x23, x0, x22, lsl #3
     51c:	stp	x0, x0, [x19, #32]
     520:	str	x23, [x19, #48]
     524:	cbz	w22, 538 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xd0>
     528:	mov	w1, wzr
     52c:	mov	x2, x21
     530:	bl	0 <memset>
     534:	mov	x0, x23
     538:	str	x0, [x19, #40]
     53c:	ldr	w8, [x20, #48]
     540:	mov	x25, x19
     544:	str	xzr, [x25, #56]!
     548:	stp	xzr, xzr, [x25, #8]
     54c:	subs	w23, w8, #0x1
     550:	lsl	x22, x23, #3
     554:	b.eq	5a8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x140>  // b.none
     558:	mov	x0, x22
     55c:	bl	0 <_Znwm>
     560:	mov	x21, x0
     564:	add	x8, x21, x23, lsl #3
     568:	stp	x21, x21, [x19, #56]
     56c:	str	x8, [x19, #72]
     570:	cbnz	w23, 5bc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x154>
     574:	b	608 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1a0>
     578:	mov	x0, xzr
     57c:	add	x23, x0, x22, lsl #3
     580:	stp	x0, x0, [x19, #8]
     584:	str	x23, [x19, #24]
     588:	cbnz	w22, 4dc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x74>
     58c:	b	4ec <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x84>
     590:	mov	x0, xzr
     594:	add	x23, x0, x22, lsl #3
     598:	stp	x0, x0, [x19, #32]
     59c:	str	x23, [x19, #48]
     5a0:	cbnz	w22, 528 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xc0>
     5a4:	b	538 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xd0>
     5a8:	mov	x21, xzr
     5ac:	add	x8, x21, x23, lsl #3
     5b0:	stp	x21, x21, [x19, #56]
     5b4:	str	x8, [x19, #72]
     5b8:	cbz	w23, 608 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1a0>
     5bc:	mov	x0, x21
     5c0:	mov	w1, wzr
     5c4:	mov	x2, x22
     5c8:	bl	0 <memset>
     5cc:	cmp	w23, #0x1
     5d0:	b.ne	5dc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x174>  // b.any
     5d4:	mov	x8, x23
     5d8:	b	5fc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x194>
     5dc:	and	x9, x23, #0xfffffffe
     5e0:	and	x8, x23, #0x1
     5e4:	add	x21, x21, x9, lsl #3
     5e8:	mov	x10, x9
     5ec:	subs	x10, x10, #0x2
     5f0:	b.ne	5ec <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x184>  // b.any
     5f4:	cmp	x9, x23
     5f8:	b.eq	608 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1a0>  // b.none
     5fc:	subs	x8, x8, #0x1
     600:	add	x21, x21, #0x8
     604:	b.ne	5fc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x194>  // b.any
     608:	str	x21, [x19, #64]
     60c:	ldr	w22, [x20, #48]
     610:	adrp	x8, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     614:	ldr	d8, [x8]
     618:	add	x1, x19, #0x60
     61c:	mov	x21, x19
     620:	str	x1, [x21, #80]!
     624:	cmp	w22, #0x9
     628:	str	d8, [x21, #8]
     62c:	b.cc	648 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1e0>  // b.lo, b.ul, b.last
     630:	mov	w3, #0x8                   	// #8
     634:	mov	x0, x21
     638:	mov	x2, x22
     63c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     640:	ldr	w8, [x19, #92]
     644:	b	64c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1e4>
     648:	mov	w8, #0x8                   	// #8
     64c:	cmp	x8, x22
     650:	b.cc	a3c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x5d4>  // b.lo, b.ul, b.last
     654:	str	w22, [x19, #88]
     658:	cbz	w22, 66c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x204>
     65c:	ldr	x0, [x21]
     660:	lsl	x2, x22, #3
     664:	mov	w1, wzr
     668:	bl	0 <memset>
     66c:	ldr	w8, [x20, #48]
     670:	add	x1, x19, #0xb0
     674:	mov	x22, x19
     678:	str	x1, [x22, #160]!
     67c:	sub	w23, w8, #0x1
     680:	cmp	w23, #0x9
     684:	str	d8, [x22, #8]
     688:	b.cc	6a4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x23c>  // b.lo, b.ul, b.last
     68c:	mov	w3, #0x4                   	// #4
     690:	mov	x0, x22
     694:	mov	x2, x23
     698:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     69c:	ldr	w8, [x19, #172]
     6a0:	b	6a8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x240>
     6a4:	mov	w8, #0x8                   	// #8
     6a8:	cmp	x8, x23
     6ac:	b.cc	a3c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x5d4>  // b.lo, b.ul, b.last
     6b0:	str	w23, [x19, #168]
     6b4:	cbz	w23, 6c8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x260>
     6b8:	ldr	x0, [x22]
     6bc:	lsl	x2, x23, #2
     6c0:	mov	w1, wzr
     6c4:	bl	0 <memset>
     6c8:	adrp	x8, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     6cc:	ldr	d0, [x8]
     6d0:	adrp	x9, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     6d4:	ldr	x1, [x19, #80]
     6d8:	ldr	w2, [x19, #88]
     6dc:	str	d0, [x19, #216]
     6e0:	ldr	q0, [x9]
     6e4:	mov	x8, #0xffffffffffffffff    	// #-1
     6e8:	mov	x0, x20
     6ec:	str	xzr, [x19, #208]
     6f0:	stp	x8, x8, [x19, #224]
     6f4:	stp	x8, x8, [x19, #248]
     6f8:	stp	x8, x8, [x19, #272]
     6fc:	stp	x8, x8, [x19, #296]
     700:	str	xzr, [x19, #320]
     704:	str	q0, [x19, #336]
     708:	str	xzr, [x19, #352]
     70c:	bl	0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>
     710:	ldr	w8, [x20, #48]
     714:	cmp	w8, #0x2
     718:	b.cc	970 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x508>  // b.lo, b.ul, b.last
     71c:	mov	w9, #0x1                   	// #1
     720:	ldr	w10, [x19, #88]
     724:	cmp	x9, x10
     728:	b.cs	9bc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x554>  // b.hs, b.nlast
     72c:	ldr	x10, [x21]
     730:	ldr	x10, [x10, x9, lsl #3]
     734:	cbz	x10, 99c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x534>
     738:	ldr	w11, [x19, #168]
     73c:	clz	x10, x10
     740:	eor	x10, x10, #0x3f
     744:	cmp	x10, x11
     748:	b.cs	9dc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x574>  // b.hs, b.nlast
     74c:	ldr	x11, [x22]
     750:	str	w9, [x11, x10, lsl #2]
     754:	add	x9, x9, #0x1
     758:	cmp	x8, x9
     75c:	b.ne	720 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x2b8>  // b.any
     760:	ldr	w22, [x20, #48]
     764:	cmp	w22, #0x2
     768:	b.cc	970 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x508>  // b.lo, b.ul, b.last
     76c:	adrp	x8, 30 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x2c>
     770:	ldr	x8, [x8]
     774:	mov	w27, #0x30                  	// #48
     778:	mov	w23, #0x1                   	// #1
     77c:	add	x8, x8, #0x10
     780:	str	x8, [sp]
     784:	b	798 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x330>
     788:	add	x23, x23, #0x1
     78c:	cmp	x22, x23
     790:	add	x27, x27, #0x20
     794:	b.eq	8cc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x464>  // b.none
     798:	ldr	w8, [x19, #88]
     79c:	cmp	x23, x8
     7a0:	b.cs	9bc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x554>  // b.hs, b.nlast
     7a4:	ldr	x8, [x21]
     7a8:	ldr	x28, [x8, x23, lsl #3]
     7ac:	cbz	x28, 99c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x534>
     7b0:	ldr	x8, [x20, #40]
     7b4:	cbz	x8, 9fc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x594>
     7b8:	ldr	w8, [x20, #48]
     7bc:	cmp	x23, x8
     7c0:	b.cs	a1c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x5b4>  // b.hs, b.nlast
     7c4:	ldr	x24, [x20, #32]
     7c8:	clz	x8, x28
     7cc:	mov	w0, #0x30                  	// #48
     7d0:	eor	x26, x8, #0x3f
     7d4:	bl	0 <_Znwm>
     7d8:	fmov	d0, x28
     7dc:	str	w23, [x0]
     7e0:	str	x28, [x0, #8]
     7e4:	cnt	v0.8b, v0.8b
     7e8:	uaddlv	h0, v0.8b
     7ec:	ldr	w8, [x24, x27]
     7f0:	fmov	w9, s0
     7f4:	cmp	w9, #0x1
     7f8:	cset	w10, hi  // hi = pmore
     7fc:	cmp	w9, #0x2
     800:	str	w8, [x0, #32]
     804:	strb	w10, [x0, #41]
     808:	b.cc	818 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x3b0>  // b.lo, b.ul, b.last
     80c:	mov	w9, #0x1                   	// #1
     810:	lsl	x9, x9, x26
     814:	b	828 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x3c0>
     818:	add	x9, x24, x27
     81c:	ldur	w9, [x9, #-8]
     820:	mov	x28, #0xffffffffffffffff    	// #-1
     824:	lsl	x9, x28, x9
     828:	cmn	w8, #0x1
     82c:	csel	w8, wzr, w8, eq  // eq = none
     830:	str	w8, [x0, #36]
     834:	ldr	x8, [x29, #8]
     838:	eor	x9, x9, x28
     83c:	stp	x9, x9, [x0, #16]
     840:	strb	wzr, [x0, #40]
     844:	ldr	x9, [x8]
     848:	lsl	x28, x26, #3
     84c:	ldr	x8, [x9, x28]
     850:	str	x0, [x9, x28]
     854:	cbz	x8, 860 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x3f8>
     858:	mov	x0, x8
     85c:	bl	0 <_ZdlPv>
     860:	ldr	x8, [x29, #8]
     864:	ldr	x8, [x8]
     868:	ldr	x8, [x8, x26, lsl #3]
     86c:	ldrb	w9, [x8, #41]
     870:	ldr	x24, [x8, #24]
     874:	cbnz	w9, 888 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x420>
     878:	ldr	x8, [x8, #16]
     87c:	sub	x9, x8, #0x1
     880:	tst	x8, x9
     884:	b.eq	8c4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x45c>  // b.none
     888:	mov	w0, #0x20                  	// #32
     88c:	bl	0 <_Znwm>
     890:	ldr	x8, [sp]
     894:	stp	x24, xzr, [x0, #16]
     898:	stp	x8, x24, [x0]
     89c:	ldr	x8, [sp, #8]
     8a0:	ldr	x9, [x8]
     8a4:	ldr	x8, [x9, x28]
     8a8:	str	x0, [x9, x28]
     8ac:	cbz	x8, 788 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x320>
     8b0:	ldr	x9, [x8]
     8b4:	mov	x0, x8
     8b8:	ldr	x9, [x9, #8]
     8bc:	blr	x9
     8c0:	b	788 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x320>
     8c4:	mov	x0, xzr
     8c8:	b	89c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x434>
     8cc:	ldr	w8, [x20, #48]
     8d0:	cmp	w8, #0x2
     8d4:	b.cc	970 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x508>  // b.lo, b.ul, b.last
     8d8:	ldr	w9, [x19, #88]
     8dc:	mov	w10, #0x1                   	// #1
     8e0:	mov	w11, #0x1                   	// #1
     8e4:	b	900 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x498>
     8e8:	ldr	x12, [x19, #320]
     8ec:	orr	x12, x12, x13
     8f0:	str	x12, [x19, #320]
     8f4:	add	w11, w11, #0x1
     8f8:	cmp	w11, w8
     8fc:	b.eq	970 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x508>  // b.none
     900:	cmp	w9, w11
     904:	b.ls	9bc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x554>  // b.plast
     908:	ldr	x12, [x21]
     90c:	ldr	x13, [x12, w11, uxtw #3]
     910:	cbz	x13, 99c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x534>
     914:	ldr	x12, [x29, #8]
     918:	ldr	x14, [x12]
     91c:	clz	x12, x13
     920:	eor	x12, x12, #0x3f
     924:	ldr	x14, [x14, x12, lsl #3]
     928:	ldrb	w14, [x14, #41]
     92c:	cbz	w14, 8e8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x480>
     930:	lsl	x12, x10, x12
     934:	subs	x13, x13, x12
     938:	b.eq	8f4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x48c>  // b.none
     93c:	neg	x14, x13
     940:	ands	x14, x13, x14
     944:	b.eq	99c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x534>  // b.none
     948:	ldr	x15, [x25]
     94c:	clz	x16, x14
     950:	eor	x16, x16, #0x3f
     954:	lsl	x16, x16, #3
     958:	ldr	x17, [x15, x16]
     95c:	eor	x13, x14, x13
     960:	orr	x17, x17, x12
     964:	str	x17, [x15, x16]
     968:	cbnz	x13, 93c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x4d4>
     96c:	b	8f4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x48c>
     970:	ldr	x8, [x19, #320]
     974:	ldr	d8, [sp, #16]
     978:	str	x8, [x19, #328]
     97c:	ldp	x20, x19, [sp, #112]
     980:	ldp	x22, x21, [sp, #96]
     984:	ldp	x24, x23, [sp, #80]
     988:	ldp	x26, x25, [sp, #64]
     98c:	ldp	x28, x27, [sp, #48]
     990:	ldp	x29, x30, [sp, #32]
     994:	add	sp, sp, #0x80
     998:	ret
     99c:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9a0:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9a4:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9a8:	add	x0, x0, #0x0
     9ac:	add	x1, x1, #0x0
     9b0:	add	x3, x3, #0x0
     9b4:	mov	w2, #0x64                  	// #100
     9b8:	bl	0 <__assert_fail>
     9bc:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9c0:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9c4:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9c8:	add	x0, x0, #0x0
     9cc:	add	x1, x1, #0x0
     9d0:	add	x3, x3, #0x0
     9d4:	mov	w2, #0x95                  	// #149
     9d8:	bl	0 <__assert_fail>
     9dc:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9e0:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9e4:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9e8:	add	x0, x0, #0x0
     9ec:	add	x1, x1, #0x0
     9f0:	add	x3, x3, #0x0
     9f4:	mov	w2, #0x95                  	// #149
     9f8:	bl	0 <__assert_fail>
     9fc:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a00:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a04:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a08:	add	x0, x0, #0x0
     a0c:	add	x1, x1, #0x0
     a10:	add	x3, x3, #0x0
     a14:	mov	w2, #0x154                 	// #340
     a18:	bl	0 <__assert_fail>
     a1c:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a20:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a24:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a28:	add	x0, x0, #0x0
     a2c:	add	x1, x1, #0x0
     a30:	add	x3, x3, #0x0
     a34:	mov	w2, #0x156                 	// #342
     a38:	bl	0 <__assert_fail>
     a3c:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a40:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a44:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a48:	add	x0, x0, #0x0
     a4c:	add	x1, x1, #0x0
     a50:	add	x3, x3, #0x0
     a54:	mov	w2, #0x43                  	// #67
     a58:	bl	0 <__assert_fail>

0000000000000a5c <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm>:
     a5c:	stp	x29, x30, [sp, #-16]!
     a60:	mov	x29, sp
     a64:	cbz	x2, ab8 <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x5c>
     a68:	ldp	x10, x9, [x0, #8]
     a6c:	clz	x8, x2
     a70:	eor	x8, x8, #0x3f
     a74:	sub	x9, x9, x10
     a78:	cmp	x8, x9, asr #3
     a7c:	b.cs	ad8 <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x7c>  // b.hs, b.nlast
     a80:	ldr	x9, [x1]
     a84:	cbz	x9, af8 <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x9c>
     a88:	ldr	x10, [x0, #32]
     a8c:	lsl	x8, x8, #3
     a90:	str	xzr, [x1]
     a94:	ldr	x0, [x10, x8]
     a98:	str	x9, [x10, x8]
     a9c:	cbz	x0, ab0 <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x54>
     aa0:	ldr	x8, [x0]
     aa4:	ldr	x1, [x8, #8]
     aa8:	ldp	x29, x30, [sp], #16
     aac:	br	x1
     ab0:	ldp	x29, x30, [sp], #16
     ab4:	ret
     ab8:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     abc:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ac0:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ac4:	add	x0, x0, #0x0
     ac8:	add	x1, x1, #0x0
     acc:	add	x3, x3, #0x0
     ad0:	mov	w2, #0x64                  	// #100
     ad4:	bl	0 <__assert_fail>
     ad8:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     adc:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ae0:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ae4:	add	x0, x0, #0x0
     ae8:	add	x1, x1, #0x0
     aec:	add	x3, x3, #0x0
     af0:	mov	w2, #0xa1                  	// #161
     af4:	bl	0 <__assert_fail>
     af8:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     afc:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b00:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b04:	add	x0, x0, #0x0
     b08:	add	x1, x1, #0x0
     b0c:	add	x3, x3, #0x0
     b10:	mov	w2, #0xa2                  	// #162
     b14:	bl	0 <__assert_fail>

0000000000000b18 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>:
     b18:	stp	x29, x30, [sp, #-16]!
     b1c:	mov	x29, sp
     b20:	cbz	x1, b48 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm+0x30>
     b24:	ldr	w9, [x0, #168]
     b28:	clz	x8, x1
     b2c:	eor	x8, x8, #0x3f
     b30:	cmp	x8, x9
     b34:	b.cs	b68 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm+0x50>  // b.hs, b.nlast
     b38:	ldr	x9, [x0, #160]
     b3c:	ldr	w0, [x9, x8, lsl #2]
     b40:	ldp	x29, x30, [sp], #16
     b44:	ret
     b48:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b4c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b50:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b54:	add	x0, x0, #0x0
     b58:	add	x1, x1, #0x0
     b5c:	add	x3, x3, #0x0
     b60:	mov	w2, #0x64                  	// #100
     b64:	bl	0 <__assert_fail>
     b68:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b6c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b70:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b74:	add	x0, x0, #0x0
     b78:	add	x1, x1, #0x0
     b7c:	add	x3, x3, #0x0
     b80:	mov	w2, #0x99                  	// #153
     b84:	bl	0 <__assert_fail>

0000000000000b88 <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm>:
     b88:	stp	x29, x30, [sp, #-16]!
     b8c:	mov	x29, sp
     b90:	cbz	x1, bd0 <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm+0x48>
     b94:	ldr	x8, [x0, #8]
     b98:	clz	x9, x1
     b9c:	eor	x9, x9, #0x3f
     ba0:	ldr	x8, [x8, x9, lsl #3]
     ba4:	ldrb	w9, [x8, #41]
     ba8:	cbz	w9, bb8 <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm+0x30>
     bac:	mov	w0, #0x1                   	// #1
     bb0:	ldp	x29, x30, [sp], #16
     bb4:	ret
     bb8:	ldr	d0, [x8, #16]
     bbc:	cnt	v0.8b, v0.8b
     bc0:	uaddlv	h0, v0.8b
     bc4:	fmov	w0, s0
     bc8:	ldp	x29, x30, [sp], #16
     bcc:	ret
     bd0:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     bd4:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     bd8:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     bdc:	add	x0, x0, #0x0
     be0:	add	x1, x1, #0x0
     be4:	add	x3, x3, #0x0
     be8:	mov	w2, #0x64                  	// #100
     bec:	bl	0 <__assert_fail>

0000000000000bf0 <_ZN4llvm3mca15ResourceManager10selectPipeEm>:
     bf0:	stp	x29, x30, [sp, #-48]!
     bf4:	str	x21, [sp, #16]
     bf8:	stp	x20, x19, [sp, #32]
     bfc:	mov	x29, sp
     c00:	cbz	x1, cc0 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xd0>
     c04:	ldp	x9, x10, [x0, #8]
     c08:	clz	x8, x1
     c0c:	eor	x8, x8, #0x3f
     c10:	mov	x19, x1
     c14:	sub	x10, x10, x9
     c18:	mov	x20, x0
     c1c:	cmp	x8, x10, asr #3
     c20:	b.cs	ce0 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xf0>  // b.hs, b.nlast
     c24:	ldr	x21, [x9, x8, lsl #3]
     c28:	ldrb	w9, [x21, #40]
     c2c:	cbz	w9, c38 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x48>
     c30:	ldr	w9, [x21, #32]
     c34:	cbnz	w9, ca0 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xb0>
     c38:	ldr	x1, [x21, #24]
     c3c:	cbz	x1, ca0 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xb0>
     c40:	ldrb	w9, [x21, #41]
     c44:	cbnz	w9, c60 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x70>
     c48:	ldr	d0, [x21, #16]
     c4c:	cnt	v0.8b, v0.8b
     c50:	uaddlv	h0, v0.8b
     c54:	fmov	w9, s0
     c58:	cmp	x9, #0x1
     c5c:	b.eq	c8c <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x9c>  // b.none
     c60:	ldr	x9, [x20, #32]
     c64:	ldr	x0, [x9, x8, lsl #3]
     c68:	ldr	x8, [x0]
     c6c:	ldr	x8, [x8, #16]
     c70:	blr	x8
     c74:	ldrb	w8, [x21, #41]
     c78:	mov	x1, x0
     c7c:	cbz	w8, c8c <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x9c>
     c80:	mov	x0, x20
     c84:	bl	bf0 <_ZN4llvm3mca15ResourceManager10selectPipeEm>
     c88:	mov	x19, x0
     c8c:	mov	x0, x19
     c90:	ldp	x20, x19, [sp, #32]
     c94:	ldr	x21, [sp, #16]
     c98:	ldp	x29, x30, [sp], #48
     c9c:	ret
     ca0:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ca4:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ca8:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     cac:	add	x0, x0, #0x0
     cb0:	add	x1, x1, #0x0
     cb4:	add	x3, x3, #0x0
     cb8:	mov	w2, #0xb5                  	// #181
     cbc:	bl	0 <__assert_fail>
     cc0:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     cc4:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     cc8:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ccc:	add	x0, x0, #0x0
     cd0:	add	x1, x1, #0x0
     cd4:	add	x3, x3, #0x0
     cd8:	mov	w2, #0x64                  	// #100
     cdc:	bl	0 <__assert_fail>
     ce0:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ce4:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ce8:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     cec:	add	x0, x0, #0x0
     cf0:	add	x1, x1, #0x0
     cf4:	add	x3, x3, #0x0
     cf8:	mov	w2, #0xb3                  	// #179
     cfc:	bl	0 <__assert_fail>

0000000000000d00 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE>:
     d00:	stp	x29, x30, [sp, #-48]!
     d04:	stp	x22, x21, [sp, #16]
     d08:	stp	x20, x19, [sp, #32]
     d0c:	mov	x29, sp
     d10:	ldr	x8, [x1]
     d14:	cbz	x8, e0c <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x10c>
     d18:	ldr	x9, [x0, #8]
     d1c:	clz	x8, x8
     d20:	eor	x21, x8, #0x3f
     d24:	mov	x19, x1
     d28:	ldr	x22, [x9, x21, lsl #3]
     d2c:	ldr	x1, [x1, #8]
     d30:	mov	x20, x0
     d34:	ldr	x8, [x22, #24]
     d38:	tst	x8, x1
     d3c:	b.eq	e2c <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x12c>  // b.none
     d40:	ldrb	w9, [x22, #41]
     d44:	eor	x8, x8, x1
     d48:	str	x8, [x22, #24]
     d4c:	cbnz	w9, d74 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x74>
     d50:	ldr	x8, [x22, #16]
     d54:	sub	x9, x8, #0x1
     d58:	tst	x8, x9
     d5c:	b.eq	d74 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x74>  // b.none
     d60:	ldr	x8, [x20, #32]
     d64:	ldr	x0, [x8, x21, lsl #3]
     d68:	ldr	x8, [x0]
     d6c:	ldr	x8, [x8, #24]
     d70:	blr	x8
     d74:	ldrb	w8, [x22, #40]
     d78:	cbz	w8, d84 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x84>
     d7c:	ldr	w8, [x22, #32]
     d80:	cbnz	w8, d8c <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x8c>
     d84:	ldr	x8, [x22, #24]
     d88:	cbnz	x8, dfc <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xfc>
     d8c:	ldr	x8, [x19]
     d90:	ldr	x9, [x20, #328]
     d94:	ldr	x10, [x20, #56]
     d98:	eor	x8, x9, x8
     d9c:	str	x8, [x20, #328]
     da0:	ldr	x21, [x10, x21, lsl #3]
     da4:	cbz	x21, dfc <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xfc>
     da8:	neg	x8, x21
     dac:	ands	x8, x21, x8
     db0:	b.eq	e0c <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x10c>  // b.none
     db4:	ldr	x9, [x20, #8]
     db8:	clz	x8, x8
     dbc:	eor	x8, x8, #0x3f
     dc0:	ldr	x1, [x19]
     dc4:	ldr	x9, [x9, x8, lsl #3]
     dc8:	ldr	x10, [x9, #24]
     dcc:	tst	x10, x1
     dd0:	b.eq	e2c <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x12c>  // b.none
     dd4:	eor	x10, x10, x1
     dd8:	str	x10, [x9, #24]
     ddc:	ldr	x9, [x20, #32]
     de0:	ldr	x0, [x9, x8, lsl #3]
     de4:	ldr	x8, [x0]
     de8:	ldr	x8, [x8, #24]
     dec:	blr	x8
     df0:	sub	x8, x21, #0x1
     df4:	ands	x21, x8, x21
     df8:	b.ne	da8 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xa8>  // b.any
     dfc:	ldp	x20, x19, [sp, #32]
     e00:	ldp	x22, x21, [sp, #16]
     e04:	ldp	x29, x30, [sp], #48
     e08:	ret
     e0c:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     e10:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     e14:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     e18:	add	x0, x0, #0x0
     e1c:	add	x1, x1, #0x0
     e20:	add	x3, x3, #0x0
     e24:	mov	w2, #0x64                  	// #100
     e28:	bl	0 <__assert_fail>
     e2c:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     e30:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     e34:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     e38:	add	x0, x0, #0x0
     e3c:	add	x1, x1, #0x0
     e40:	add	x3, x3, #0x0
     e44:	mov	w2, #0xf1                  	// #241
     e48:	bl	0 <__assert_fail>

0000000000000e4c <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE>:
     e4c:	stp	x29, x30, [sp, #-16]!
     e50:	mov	x29, sp
     e54:	ldr	x8, [x1]
     e58:	cbz	x8, f24 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xd8>
     e5c:	ldr	x9, [x0, #8]
     e60:	clz	x10, x8
     e64:	eor	x10, x10, #0x3f
     e68:	ldr	x11, [x9, x10, lsl #3]
     e6c:	ldrb	w12, [x11, #40]
     e70:	cbz	w12, e88 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x3c>
     e74:	ldr	w12, [x11, #32]
     e78:	cbz	w12, e88 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x3c>
     e7c:	ldr	x12, [x11, #24]
     e80:	mov	w13, wzr
     e84:	b	e94 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x48>
     e88:	ldr	x12, [x11, #24]
     e8c:	cmp	x12, #0x0
     e90:	cset	w13, ne  // ne = any
     e94:	ldr	x14, [x1, #8]
     e98:	tst	x12, x14
     e9c:	b.ne	f04 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xb8>  // b.any
     ea0:	eor	x12, x12, x14
     ea4:	str	x12, [x11, #24]
     ea8:	tbnz	w13, #0, efc <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xb0>
     eac:	ldr	x11, [x0, #328]
     eb0:	ldr	x12, [x0, #56]
     eb4:	eor	x11, x11, x8
     eb8:	str	x11, [x0, #328]
     ebc:	ldr	x10, [x12, x10, lsl #3]
     ec0:	cbz	x10, efc <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xb0>
     ec4:	neg	x11, x10
     ec8:	ands	x11, x10, x11
     ecc:	b.eq	f24 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xd8>  // b.none
     ed0:	clz	x11, x11
     ed4:	eor	x11, x11, #0x3f
     ed8:	ldr	x11, [x9, x11, lsl #3]
     edc:	ldr	x12, [x11, #24]
     ee0:	tst	x12, x8
     ee4:	b.ne	f04 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xb8>  // b.any
     ee8:	sub	x13, x10, #0x1
     eec:	eor	x12, x12, x8
     ef0:	ands	x10, x13, x10
     ef4:	str	x12, [x11, #24]
     ef8:	b.ne	ec4 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x78>  // b.any
     efc:	ldp	x29, x30, [sp], #16
     f00:	ret
     f04:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     f08:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     f0c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     f10:	add	x0, x0, #0x0
     f14:	add	x1, x1, #0x0
     f18:	add	x3, x3, #0x0
     f1c:	mov	w2, #0xf6                  	// #246
     f20:	bl	0 <__assert_fail>
     f24:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     f28:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     f2c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     f30:	add	x0, x0, #0x0
     f34:	add	x1, x1, #0x0
     f38:	add	x3, x3, #0x0
     f3c:	mov	w2, #0x64                  	// #100
     f40:	bl	0 <__assert_fail>

0000000000000f44 <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm>:
     f44:	ldr	x8, [x0, #352]
     f48:	tst	x8, x1
     f4c:	b.eq	f58 <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm+0x14>  // b.none
     f50:	mov	w0, #0x2                   	// #2
     f54:	ret
     f58:	ldr	x8, [x0, #344]
     f5c:	bics	xzr, x1, x8
     f60:	cset	w0, ne  // ne = any
     f64:	ret

0000000000000f68 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm>:
     f68:	stp	x29, x30, [sp, #-16]!
     f6c:	mov	x29, sp
     f70:	cbnz	x1, f84 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x1c>
     f74:	ldp	x29, x30, [sp], #16
     f78:	ret
     f7c:	eor	x1, x8, x1
     f80:	cbz	x1, f74 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xc>
     f84:	neg	x8, x1
     f88:	ands	x8, x1, x8
     f8c:	b.eq	ff4 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x8c>  // b.none
     f90:	ldr	x9, [x0, #8]
     f94:	clz	x10, x8
     f98:	eor	x10, x10, #0x3f
     f9c:	ldr	x9, [x9, x10, lsl #3]
     fa0:	ldr	w10, [x9, #32]
     fa4:	cbz	w10, fdc <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x74>
     fa8:	cmp	w10, #0x1
     fac:	b.lt	f7c <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x14>  // b.tstop
     fb0:	ldr	w11, [x9, #36]
     fb4:	cbz	w11, 1014 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xac>
     fb8:	sub	w11, w11, #0x1
     fbc:	cmp	w11, w10
     fc0:	str	w11, [x9, #36]
     fc4:	b.hi	1034 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xcc>  // b.pmore
     fc8:	cbnz	w11, f7c <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x14>
     fcc:	ldr	x9, [x0, #344]
     fd0:	eor	x9, x9, x8
     fd4:	str	x9, [x0, #344]
     fd8:	b	f7c <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x14>
     fdc:	ldrb	w9, [x9, #40]
     fe0:	cbnz	w9, 1014 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xac>
     fe4:	ldr	x9, [x0, #352]
     fe8:	eor	x9, x9, x8
     fec:	str	x9, [x0, #352]
     ff0:	b	f7c <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x14>
     ff4:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ff8:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ffc:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1000:	add	x0, x0, #0x0
    1004:	add	x1, x1, #0x0
    1008:	add	x3, x3, #0x0
    100c:	mov	w2, #0x64                  	// #100
    1010:	bl	0 <__assert_fail>
    1014:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1018:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    101c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1020:	add	x0, x0, #0x0
    1024:	add	x1, x1, #0x0
    1028:	add	x3, x3, #0x0
    102c:	mov	w2, #0x102                 	// #258
    1030:	bl	0 <__assert_fail>
    1034:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1038:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    103c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1040:	add	x0, x0, #0x0
    1044:	add	x1, x1, #0x0
    1048:	add	x3, x3, #0x0
    104c:	mov	w2, #0x112                 	// #274
    1050:	bl	0 <__assert_fail>

0000000000001054 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm>:
    1054:	stp	x29, x30, [sp, #-16]!
    1058:	mov	x29, sp
    105c:	ldr	x8, [x0, #344]
    1060:	orr	x8, x8, x1
    1064:	str	x8, [x0, #344]
    1068:	cbnz	x1, 107c <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x28>
    106c:	ldp	x29, x30, [sp], #16
    1070:	ret
    1074:	eor	x1, x8, x1
    1078:	cbz	x1, 106c <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x18>
    107c:	neg	x8, x1
    1080:	ands	x8, x1, x8
    1084:	b.eq	10d8 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x84>  // b.none
    1088:	ldr	x9, [x0, #8]
    108c:	clz	x10, x8
    1090:	eor	x10, x10, #0x3f
    1094:	ldr	x9, [x9, x10, lsl #3]
    1098:	ldr	w10, [x9, #32]
    109c:	cmp	w10, #0x1
    10a0:	b.lt	1074 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x20>  // b.tstop
    10a4:	ldr	w11, [x9, #36]
    10a8:	add	w11, w11, #0x1
    10ac:	cmp	w11, w10
    10b0:	str	w11, [x9, #36]
    10b4:	b.ls	1074 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x20>  // b.plast
    10b8:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    10bc:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    10c0:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    10c4:	add	x0, x0, #0x0
    10c8:	add	x1, x1, #0x0
    10cc:	add	x3, x3, #0x0
    10d0:	mov	w2, #0x11d                 	// #285
    10d4:	bl	0 <__assert_fail>
    10d8:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    10dc:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    10e0:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    10e4:	add	x0, x0, #0x0
    10e8:	add	x1, x1, #0x0
    10ec:	add	x3, x3, #0x0
    10f0:	mov	w2, #0x64                  	// #100
    10f4:	bl	0 <__assert_fail>

00000000000010f8 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>:
    10f8:	stp	x29, x30, [sp, #-16]!
    10fc:	mov	x29, sp
    1100:	ldr	w9, [x1, #184]
    1104:	cbz	w9, 1190 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x98>
    1108:	ldr	x10, [x1, #176]
    110c:	add	x11, x9, x9, lsl #1
    1110:	mov	x8, xzr
    1114:	add	x9, x10, #0x14
    1118:	lsl	x10, x11, #3
    111c:	b	1130 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x38>
    1120:	orr	x8, x12, x8
    1124:	subs	x10, x10, #0x18
    1128:	add	x9, x9, #0x18
    112c:	b.eq	1194 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x9c>  // b.none
    1130:	ldurb	w11, [x9, #-4]
    1134:	cbz	w11, 1148 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x50>
    1138:	mov	w11, wzr
    113c:	ldur	x12, [x9, #-20]
    1140:	cbnz	x12, 1154 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x5c>
    1144:	b	11c4 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0xcc>
    1148:	ldr	w11, [x9]
    114c:	ldur	x12, [x9, #-20]
    1150:	cbz	x12, 11c4 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0xcc>
    1154:	ldr	x13, [x0, #8]
    1158:	clz	x14, x12
    115c:	eor	x14, x14, #0x3f
    1160:	ldr	x13, [x13, x14, lsl #3]
    1164:	ldrb	w14, [x13, #40]
    1168:	cbz	w14, 1174 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x7c>
    116c:	ldr	w14, [x13, #32]
    1170:	cbnz	w14, 1120 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x28>
    1174:	ldr	d0, [x13, #24]
    1178:	cnt	v0.8b, v0.8b
    117c:	uaddlv	h0, v0.8b
    1180:	fmov	w13, s0
    1184:	cmp	w11, w13
    1188:	b.hi	1120 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x28>  // b.pmore
    118c:	b	1124 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x2c>
    1190:	mov	x8, xzr
    1194:	ldr	x9, [x0, #320]
    1198:	ands	x8, x9, x8
    119c:	b.eq	11ac <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0xb4>  // b.none
    11a0:	mov	x0, x8
    11a4:	ldp	x29, x30, [sp], #16
    11a8:	ret
    11ac:	ldr	x8, [x1, #304]
    11b0:	ldr	x9, [x0, #336]
    11b4:	and	x8, x9, x8
    11b8:	mov	x0, x8
    11bc:	ldp	x29, x30, [sp], #16
    11c0:	ret
    11c4:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    11c8:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    11cc:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    11d0:	add	x0, x0, #0x0
    11d4:	add	x1, x1, #0x0
    11d8:	add	x3, x3, #0x0
    11dc:	mov	w2, #0x64                  	// #100
    11e0:	bl	0 <__assert_fail>

00000000000011e4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>:
    11e4:	sub	sp, sp, #0x70
    11e8:	stp	x29, x30, [sp, #32]
    11ec:	stp	x26, x25, [sp, #48]
    11f0:	stp	x24, x23, [sp, #64]
    11f4:	stp	x22, x21, [sp, #80]
    11f8:	stp	x20, x19, [sp, #96]
    11fc:	add	x29, sp, #0x20
    1200:	ldr	w8, [x1, #184]
    1204:	cbz	w8, 141c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x238>
    1208:	ldr	x22, [x1, #176]
    120c:	add	x8, x8, x8, lsl #1
    1210:	mov	x19, x2
    1214:	mov	x20, x0
    1218:	add	x21, x0, #0xd0
    121c:	lsl	x23, x8, #3
    1220:	mov	w24, #0x1                   	// #1
    1224:	mov	w25, #0x18                  	// #24
    1228:	b	126c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x88>
    122c:	add	x1, sp, #0x10
    1230:	add	x2, sp, #0x10
    1234:	mov	x0, x21
    1238:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    123c:	ldr	x9, [sp, #16]
    1240:	mov	x3, x0
    1244:	mov	w8, wzr
    1248:	str	x9, [x0]
    124c:	ldr	x9, [sp, #24]
    1250:	str	wzr, [x0, #16]
    1254:	str	x9, [x0, #8]
    1258:	add	w8, w8, w26
    125c:	str	w8, [x3, #16]
    1260:	subs	x23, x23, #0x18
    1264:	add	x22, x22, #0x18
    1268:	b.eq	141c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x238>  // b.none
    126c:	ldp	w8, w9, [x22, #8]
    1270:	subs	w26, w9, w8
    1274:	b.eq	12fc <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x118>  // b.none
    1278:	cbnz	w8, 1478 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x294>
    127c:	ldrb	w8, [x22, #16]
    1280:	cbz	w8, 134c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x168>
    1284:	ldr	x8, [x22]
    1288:	sub	x9, x8, #0x1
    128c:	tst	x8, x9
    1290:	b.eq	1498 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2b4>  // b.none
    1294:	cbz	x8, 1458 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x274>
    1298:	ldr	x9, [x20, #8]
    129c:	clz	x8, x8
    12a0:	eor	x8, x8, #0x3f
    12a4:	ldr	x9, [x9, x8, lsl #3]
    12a8:	ldrb	w10, [x9, #41]
    12ac:	cbz	w10, 1438 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x254>
    12b0:	ldrb	w10, [x9, #40]
    12b4:	cbnz	w10, 1438 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x254>
    12b8:	strb	w24, [x9, #40]
    12bc:	ldr	x9, [x20, #336]
    12c0:	lsl	x8, x24, x8
    12c4:	add	x1, sp, #0x10
    12c8:	mov	x2, sp
    12cc:	eor	x8, x9, x8
    12d0:	str	x8, [x20, #336]
    12d4:	ldr	x8, [x22]
    12d8:	mov	x0, x21
    12dc:	str	x8, [sp, #16]
    12e0:	ldr	x8, [x22]
    12e4:	str	x8, [sp, #24]
    12e8:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    12ec:	ldr	x3, [sp]
    12f0:	tbz	w0, #0, 122c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x48>
    12f4:	ldr	w8, [x3, #16]
    12f8:	b	1258 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x74>
    12fc:	ldr	x8, [x22]
    1300:	cbz	x8, 1458 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x274>
    1304:	ldr	x9, [x20, #8]
    1308:	clz	x8, x8
    130c:	eor	x8, x8, #0x3f
    1310:	ldr	x9, [x9, x8, lsl #3]
    1314:	ldrb	w10, [x9, #41]
    1318:	strb	wzr, [x9, #40]
    131c:	cbz	w10, 1330 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x14c>
    1320:	ldr	x10, [x20, #336]
    1324:	lsl	x11, x24, x8
    1328:	eor	x10, x10, x11
    132c:	str	x10, [x20, #336]
    1330:	ldr	w9, [x9, #32]
    1334:	cbnz	w9, 1260 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7c>
    1338:	ldr	x9, [x20, #352]
    133c:	lsl	x8, x24, x8
    1340:	eor	x8, x9, x8
    1344:	str	x8, [x20, #352]
    1348:	b	1260 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7c>
    134c:	ldr	x1, [x22]
    1350:	mov	x0, x20
    1354:	bl	bf0 <_ZN4llvm3mca15ResourceManager10selectPipeEm>
    1358:	stp	x0, x1, [sp, #16]
    135c:	add	x1, sp, #0x10
    1360:	mov	x0, x20
    1364:	bl	d00 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE>
    1368:	ldp	w9, w8, [x22, #8]
    136c:	add	x1, sp, #0x10
    1370:	mov	x2, sp
    1374:	mov	x0, x21
    1378:	sub	w26, w8, w9
    137c:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1380:	ldr	x3, [sp]
    1384:	tbz	w0, #0, 1390 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1ac>
    1388:	ldr	w8, [x3, #16]
    138c:	b	13b4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1d0>
    1390:	add	x1, sp, #0x10
    1394:	add	x2, sp, #0x10
    1398:	mov	x0, x21
    139c:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    13a0:	ldr	q0, [sp, #16]
    13a4:	mov	x3, x0
    13a8:	mov	w8, wzr
    13ac:	str	wzr, [x0, #16]
    13b0:	str	q0, [x0]
    13b4:	add	w8, w26, w8
    13b8:	str	w8, [x3, #16]
    13bc:	ldr	q0, [sp, #16]
    13c0:	ldp	w10, w9, [x22, #8]
    13c4:	str	q0, [sp]
    13c8:	ldp	w8, w11, [x19, #8]
    13cc:	sub	w9, w9, w10
    13d0:	orr	x26, x9, #0x100000000
    13d4:	cmp	w8, w11
    13d8:	b.cs	1408 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x224>  // b.hs, b.nlast
    13dc:	ldr	x9, [x19]
    13e0:	ldr	q0, [sp]
    13e4:	umaddl	x8, w8, w25, x9
    13e8:	str	q0, [x8]
    13ec:	str	x26, [x8, #16]
    13f0:	ldp	w8, w9, [x19, #8]
    13f4:	cmp	w8, w9
    13f8:	b.cs	14b8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2d4>  // b.hs, b.nlast
    13fc:	add	w8, w8, #0x1
    1400:	str	w8, [x19, #8]
    1404:	b	1260 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7c>
    1408:	mov	x0, x19
    140c:	mov	x1, xzr
    1410:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1414:	ldr	w8, [x19, #8]
    1418:	b	13dc <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1f8>
    141c:	ldp	x20, x19, [sp, #96]
    1420:	ldp	x22, x21, [sp, #80]
    1424:	ldp	x24, x23, [sp, #64]
    1428:	ldp	x26, x25, [sp, #48]
    142c:	ldp	x29, x30, [sp, #32]
    1430:	add	sp, sp, #0x70
    1434:	ret
    1438:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    143c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1440:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1444:	add	x0, x0, #0x0
    1448:	add	x1, x1, #0x0
    144c:	add	x3, x3, #0x0
    1450:	mov	w2, #0x15b                 	// #347
    1454:	bl	0 <__assert_fail>
    1458:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    145c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1460:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1464:	add	x0, x0, #0x0
    1468:	add	x1, x1, #0x0
    146c:	add	x3, x3, #0x0
    1470:	mov	w2, #0x64                  	// #100
    1474:	bl	0 <__assert_fail>
    1478:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    147c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1480:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1484:	add	x0, x0, #0x0
    1488:	add	x1, x1, #0x0
    148c:	add	x3, x3, #0x0
    1490:	mov	w2, #0x133                 	// #307
    1494:	bl	0 <__assert_fail>
    1498:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    149c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    14a0:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    14a4:	add	x0, x0, #0x0
    14a8:	add	x1, x1, #0x0
    14ac:	add	x3, x3, #0x0
    14b0:	mov	w2, #0x13b                 	// #315
    14b4:	bl	0 <__assert_fail>
    14b8:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    14bc:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    14c0:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    14c4:	add	x0, x0, #0x0
    14c8:	add	x1, x1, #0x0
    14cc:	add	x3, x3, #0x0
    14d0:	mov	w2, #0x43                  	// #67
    14d4:	bl	0 <__assert_fail>

00000000000014d8 <_ZN4llvm3mca15ResourceManager15releaseResourceEm>:
    14d8:	stp	x29, x30, [sp, #-16]!
    14dc:	mov	x29, sp
    14e0:	cbz	x1, 1540 <_ZN4llvm3mca15ResourceManager15releaseResourceEm+0x68>
    14e4:	ldr	x9, [x0, #8]
    14e8:	clz	x8, x1
    14ec:	eor	x8, x8, #0x3f
    14f0:	ldr	x9, [x9, x8, lsl #3]
    14f4:	ldrb	w10, [x9, #41]
    14f8:	strb	wzr, [x9, #40]
    14fc:	cbz	w10, 1514 <_ZN4llvm3mca15ResourceManager15releaseResourceEm+0x3c>
    1500:	ldr	x10, [x0, #336]
    1504:	mov	w11, #0x1                   	// #1
    1508:	lsl	x11, x11, x8
    150c:	eor	x10, x10, x11
    1510:	str	x10, [x0, #336]
    1514:	ldr	w9, [x9, #32]
    1518:	cbz	w9, 1524 <_ZN4llvm3mca15ResourceManager15releaseResourceEm+0x4c>
    151c:	ldp	x29, x30, [sp], #16
    1520:	ret
    1524:	ldr	x9, [x0, #352]
    1528:	mov	w10, #0x1                   	// #1
    152c:	lsl	x8, x10, x8
    1530:	eor	x8, x9, x8
    1534:	str	x8, [x0, #352]
    1538:	ldp	x29, x30, [sp], #16
    153c:	ret
    1540:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1544:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1548:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    154c:	add	x0, x0, #0x0
    1550:	add	x1, x1, #0x0
    1554:	add	x3, x3, #0x0
    1558:	mov	w2, #0x64                  	// #100
    155c:	bl	0 <__assert_fail>

0000000000001560 <_ZN4llvm3mca15ResourceManager15reserveResourceEm>:
    1560:	stp	x29, x30, [sp, #-16]!
    1564:	mov	x29, sp
    1568:	cbz	x1, 15cc <_ZN4llvm3mca15ResourceManager15reserveResourceEm+0x6c>
    156c:	ldr	x9, [x0, #8]
    1570:	clz	x8, x1
    1574:	eor	x8, x8, #0x3f
    1578:	ldr	x9, [x9, x8, lsl #3]
    157c:	ldrb	w10, [x9, #41]
    1580:	cbz	w10, 15ac <_ZN4llvm3mca15ResourceManager15reserveResourceEm+0x4c>
    1584:	ldrb	w10, [x9, #40]
    1588:	cbnz	w10, 15ac <_ZN4llvm3mca15ResourceManager15reserveResourceEm+0x4c>
    158c:	mov	w10, #0x1                   	// #1
    1590:	strb	w10, [x9, #40]
    1594:	ldr	x9, [x0, #336]
    1598:	lsl	x8, x10, x8
    159c:	eor	x8, x9, x8
    15a0:	str	x8, [x0, #336]
    15a4:	ldp	x29, x30, [sp], #16
    15a8:	ret
    15ac:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    15b0:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    15b4:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    15b8:	add	x0, x0, #0x0
    15bc:	add	x1, x1, #0x0
    15c0:	add	x3, x3, #0x0
    15c4:	mov	w2, #0x15b                 	// #347
    15c8:	bl	0 <__assert_fail>
    15cc:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    15d0:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    15d4:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    15d8:	add	x0, x0, #0x0
    15dc:	add	x1, x1, #0x0
    15e0:	add	x3, x3, #0x0
    15e4:	mov	w2, #0x64                  	// #100
    15e8:	bl	0 <__assert_fail>

00000000000015ec <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE>:
    15ec:	sub	sp, sp, #0x70
    15f0:	stp	x29, x30, [sp, #32]
    15f4:	stp	x26, x25, [sp, #48]
    15f8:	stp	x24, x23, [sp, #64]
    15fc:	stp	x22, x21, [sp, #80]
    1600:	stp	x20, x19, [sp, #96]
    1604:	add	x29, sp, #0x20
    1608:	ldr	w8, [x0, #216]
    160c:	mov	x20, x1
    1610:	mov	x21, x0
    1614:	add	x19, x0, #0xd0
    1618:	cmp	w8, #0x1
    161c:	b.hi	1644 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x58>  // b.pmore
    1620:	cbz	w8, 1818 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x22c>
    1624:	add	x9, x19, #0x10
    1628:	add	x22, x19, #0x70
    162c:	mov	w10, #0x4                   	// #4
    1630:	ldr	x24, [x19]
    1634:	mov	w11, #0x18                  	// #24
    1638:	madd	x23, x10, x11, x9
    163c:	cbnz	w8, 16cc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xe0>
    1640:	b	1838 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x24c>
    1644:	tbnz	w8, #0, 1664 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x78>
    1648:	ldr	x22, [x19, #16]
    164c:	ldr	w9, [x19, #24]
    1650:	ldr	x24, [x19]
    1654:	mov	w10, #0x18                  	// #24
    1658:	madd	x23, x9, x10, x22
    165c:	cbnz	w9, 1674 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x88>
    1660:	b	1838 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x24c>
    1664:	mov	x23, x19
    1668:	ldr	x24, [x23], #112
    166c:	add	x22, x19, #0x10
    1670:	mov	w9, #0x4                   	// #4
    1674:	lsl	x9, x9, #3
    1678:	sub	x9, x9, #0x8
    167c:	lsr	x9, x9, #3
    1680:	mov	w10, #0x18                  	// #24
    1684:	madd	x9, x9, x10, x22
    1688:	and	w8, w8, #0x1
    168c:	add	x9, x9, #0x18
    1690:	b	16a0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xb4>
    1694:	add	x22, x22, #0x18
    1698:	cmp	x22, x23
    169c:	b.eq	16c4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xd8>  // b.none
    16a0:	ldp	x11, x10, [x22]
    16a4:	and	x12, x10, x11
    16a8:	cmn	x12, #0x1
    16ac:	b.eq	1694 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xa8>  // b.none
    16b0:	cmn	x11, #0x2
    16b4:	b.ne	16c8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xdc>  // b.any
    16b8:	cmn	x10, #0x2
    16bc:	b.eq	1694 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xa8>  // b.none
    16c0:	b	16c8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xdc>
    16c4:	mov	x22, x9
    16c8:	cbz	w8, 1838 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x24c>
    16cc:	add	x25, x19, #0x70
    16d0:	cmp	x19, x19
    16d4:	cbz	x25, 1850 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x264>
    16d8:	b.ne	1a18 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x42c>  // b.any
    16dc:	mov	w26, #0x1                   	// #1
    16e0:	b	16f0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x104>
    16e4:	mov	x22, x23
    16e8:	cmp	x19, x19
    16ec:	b.ne	1a18 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x42c>  // b.any
    16f0:	cmp	x22, x25
    16f4:	b.eq	198c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3a0>  // b.none
    16f8:	ldr	w8, [x22, #16]
    16fc:	cbz	w8, 170c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x120>
    1700:	subs	w8, w8, #0x1
    1704:	str	w8, [x22, #16]
    1708:	b.ne	17b8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1cc>  // b.any
    170c:	ldr	x8, [x22]
    1710:	fmov	d0, x8
    1714:	cnt	v0.8b, v0.8b
    1718:	uaddlv	h0, v0.8b
    171c:	fmov	w9, s0
    1720:	cmp	x9, #0x1
    1724:	b.ne	1738 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x14c>  // b.any
    1728:	mov	x0, x21
    172c:	mov	x1, x22
    1730:	bl	e4c <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE>
    1734:	ldr	x8, [x22]
    1738:	cbz	x8, 1a58 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x46c>
    173c:	ldr	x9, [x21, #8]
    1740:	clz	x8, x8
    1744:	eor	x8, x8, #0x3f
    1748:	ldr	x9, [x9, x8, lsl #3]
    174c:	ldrb	w10, [x9, #41]
    1750:	strb	wzr, [x9, #40]
    1754:	cbz	w10, 1768 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x17c>
    1758:	ldr	x10, [x21, #336]
    175c:	lsl	x11, x26, x8
    1760:	eor	x10, x10, x11
    1764:	str	x10, [x21, #336]
    1768:	ldr	w9, [x9, #32]
    176c:	cbnz	w9, 1780 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x194>
    1770:	ldr	x9, [x21, #352]
    1774:	lsl	x8, x26, x8
    1778:	eor	x8, x9, x8
    177c:	str	x8, [x21, #352]
    1780:	ldp	w8, w9, [x20, #8]
    1784:	cmp	w8, w9
    1788:	b.cs	1804 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x218>  // b.hs, b.nlast
    178c:	ldr	x9, [x20]
    1790:	ldr	q0, [x22]
    1794:	str	q0, [x9, w8, uxtw #4]
    1798:	ldp	w8, w9, [x20, #8]
    179c:	cmp	w8, w9
    17a0:	b.cs	1a78 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x48c>  // b.hs, b.nlast
    17a4:	add	w8, w8, #0x1
    17a8:	str	w8, [x20, #8]
    17ac:	ldr	x8, [x19]
    17b0:	cmp	x8, x24
    17b4:	b.ne	1a98 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x4ac>  // b.any
    17b8:	add	x8, x22, #0x18
    17bc:	cmp	x8, x23
    17c0:	b.hi	1a38 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x44c>  // b.pmore
    17c4:	mov	x22, x23
    17c8:	b.ne	17dc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1f0>  // b.any
    17cc:	b	16e8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xfc>
    17d0:	add	x8, x8, #0x18
    17d4:	cmp	x8, x23
    17d8:	b.eq	16e4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xf8>  // b.none
    17dc:	ldp	x10, x9, [x8]
    17e0:	and	x11, x9, x10
    17e4:	cmn	x11, #0x1
    17e8:	b.eq	17d0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1e4>  // b.none
    17ec:	cmn	x10, #0x2
    17f0:	b.ne	17fc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x210>  // b.any
    17f4:	cmn	x9, #0x2
    17f8:	b.eq	17d0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1e4>  // b.none
    17fc:	mov	x22, x8
    1800:	b	16e8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xfc>
    1804:	mov	x0, x20
    1808:	mov	x1, xzr
    180c:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1810:	ldr	w8, [x20, #8]
    1814:	b	178c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1a0>
    1818:	ldr	x9, [x19, #16]
    181c:	ldr	w10, [x19, #24]
    1820:	mov	w11, #0x18                  	// #24
    1824:	madd	x22, x10, x11, x9
    1828:	ldr	x24, [x19]
    182c:	mov	w11, #0x18                  	// #24
    1830:	madd	x23, x10, x11, x9
    1834:	cbnz	w8, 16cc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xe0>
    1838:	ldr	x8, [x19, #16]
    183c:	ldr	w9, [x19, #24]
    1840:	mov	w10, #0x18                  	// #24
    1844:	madd	x25, x9, x10, x8
    1848:	cmp	x19, x19
    184c:	cbnz	x25, 16d8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xec>
    1850:	b.ne	1a18 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x42c>  // b.any
    1854:	mov	w25, #0x1                   	// #1
    1858:	b	1868 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x27c>
    185c:	mov	x22, x23
    1860:	cmp	x19, x19
    1864:	b.ne	1a18 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x42c>  // b.any
    1868:	cbz	x22, 198c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3a0>
    186c:	ldr	w8, [x22, #16]
    1870:	cbz	w8, 1880 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x294>
    1874:	subs	w8, w8, #0x1
    1878:	str	w8, [x22, #16]
    187c:	b.ne	192c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x340>  // b.any
    1880:	ldr	x8, [x22]
    1884:	fmov	d0, x8
    1888:	cnt	v0.8b, v0.8b
    188c:	uaddlv	h0, v0.8b
    1890:	fmov	w9, s0
    1894:	cmp	x9, #0x1
    1898:	b.ne	18ac <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2c0>  // b.any
    189c:	mov	x0, x21
    18a0:	mov	x1, x22
    18a4:	bl	e4c <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE>
    18a8:	ldr	x8, [x22]
    18ac:	cbz	x8, 1a58 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x46c>
    18b0:	ldr	x9, [x21, #8]
    18b4:	clz	x8, x8
    18b8:	eor	x8, x8, #0x3f
    18bc:	ldr	x9, [x9, x8, lsl #3]
    18c0:	ldrb	w10, [x9, #41]
    18c4:	strb	wzr, [x9, #40]
    18c8:	cbz	w10, 18dc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2f0>
    18cc:	ldr	x10, [x21, #336]
    18d0:	lsl	x11, x25, x8
    18d4:	eor	x10, x10, x11
    18d8:	str	x10, [x21, #336]
    18dc:	ldr	w9, [x9, #32]
    18e0:	cbnz	w9, 18f4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x308>
    18e4:	ldr	x9, [x21, #352]
    18e8:	lsl	x8, x25, x8
    18ec:	eor	x8, x9, x8
    18f0:	str	x8, [x21, #352]
    18f4:	ldp	w8, w9, [x20, #8]
    18f8:	cmp	w8, w9
    18fc:	b.cs	1978 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x38c>  // b.hs, b.nlast
    1900:	ldr	x9, [x20]
    1904:	ldr	q0, [x22]
    1908:	str	q0, [x9, w8, uxtw #4]
    190c:	ldp	w8, w9, [x20, #8]
    1910:	cmp	w8, w9
    1914:	b.cs	1a78 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x48c>  // b.hs, b.nlast
    1918:	add	w8, w8, #0x1
    191c:	str	w8, [x20, #8]
    1920:	ldr	x8, [x19]
    1924:	cmp	x8, x24
    1928:	b.ne	1a98 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x4ac>  // b.any
    192c:	add	x8, x22, #0x18
    1930:	cmp	x8, x23
    1934:	b.hi	1a38 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x44c>  // b.pmore
    1938:	mov	x22, x23
    193c:	b.eq	1860 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x274>  // b.none
    1940:	mov	x22, x8
    1944:	b	1954 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x368>
    1948:	add	x22, x22, #0x18
    194c:	cmp	x22, x23
    1950:	b.eq	185c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x270>  // b.none
    1954:	ldp	x9, x8, [x22]
    1958:	and	x10, x8, x9
    195c:	cmn	x10, #0x1
    1960:	b.eq	1948 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x35c>  // b.none
    1964:	cmn	x9, #0x2
    1968:	b.ne	1860 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x274>  // b.any
    196c:	cmn	x8, #0x2
    1970:	b.eq	1948 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x35c>  // b.none
    1974:	b	1860 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x274>
    1978:	mov	x0, x20
    197c:	mov	x1, xzr
    1980:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1984:	ldr	w8, [x20, #8]
    1988:	b	1900 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x314>
    198c:	ldr	w8, [x20, #8]
    1990:	cbz	w8, 19fc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x410>
    1994:	ldr	x20, [x20]
    1998:	lsl	x21, x8, #4
    199c:	mov	x8, #0xfffffffffffffffe    	// #-2
    19a0:	dup	v0.2d, x8
    19a4:	str	q0, [sp]
    19a8:	b	19b8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3cc>
    19ac:	subs	x21, x21, #0x10
    19b0:	add	x20, x20, #0x10
    19b4:	b.eq	19fc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x410>  // b.none
    19b8:	sub	x2, x29, #0x8
    19bc:	mov	x0, x19
    19c0:	mov	x1, x20
    19c4:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    19c8:	tbz	w0, #0, 19ac <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3c0>
    19cc:	ldur	x8, [x29, #-8]
    19d0:	ldr	q0, [sp]
    19d4:	str	q0, [x8]
    19d8:	ldr	w8, [x19, #8]
    19dc:	cmp	w8, #0x1
    19e0:	b.ls	1ab8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x4cc>  // b.plast
    19e4:	ldr	w9, [x19, #12]
    19e8:	sub	w8, w8, #0x2
    19ec:	str	w8, [x19, #8]
    19f0:	add	w8, w9, #0x1
    19f4:	str	w8, [x19, #12]
    19f8:	b	19ac <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3c0>
    19fc:	ldp	x20, x19, [sp, #96]
    1a00:	ldp	x22, x21, [sp, #80]
    1a04:	ldp	x24, x23, [sp, #64]
    1a08:	ldp	x26, x25, [sp, #48]
    1a0c:	ldp	x29, x30, [sp, #32]
    1a10:	add	sp, sp, #0x70
    1a14:	ret
    1a18:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1a1c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1a20:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1a24:	add	x0, x0, #0x0
    1a28:	add	x1, x1, #0x0
    1a2c:	add	x3, x3, #0x0
    1a30:	mov	w2, #0x4ca                 	// #1226
    1a34:	bl	0 <__assert_fail>
    1a38:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1a3c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1a40:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1a44:	add	x0, x0, #0x0
    1a48:	add	x1, x1, #0x0
    1a4c:	add	x3, x3, #0x0
    1a50:	mov	w2, #0x4e0                 	// #1248
    1a54:	bl	0 <__assert_fail>
    1a58:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1a5c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1a60:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1a64:	add	x0, x0, #0x0
    1a68:	add	x1, x1, #0x0
    1a6c:	add	x3, x3, #0x0
    1a70:	mov	w2, #0x64                  	// #100
    1a74:	bl	0 <__assert_fail>
    1a78:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1a7c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1a80:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1a84:	add	x0, x0, #0x0
    1a88:	add	x1, x1, #0x0
    1a8c:	add	x3, x3, #0x0
    1a90:	mov	w2, #0x43                  	// #67
    1a94:	bl	0 <__assert_fail>
    1a98:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1a9c:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1aa0:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1aa4:	add	x0, x0, #0x0
    1aa8:	add	x1, x1, #0x0
    1aac:	add	x3, x3, #0x0
    1ab0:	mov	w2, #0x4cf                 	// #1231
    1ab4:	bl	0 <__assert_fail>
    1ab8:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1abc:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1ac0:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1ac4:	add	x0, x0, #0x0
    1ac8:	add	x1, x1, #0x0
    1acc:	add	x3, x3, #0x0
    1ad0:	mov	w2, #0x441                 	// #1089
    1ad4:	bl	0 <__assert_fail>

0000000000001ad8 <_ZN4llvm3mca16ResourceStrategyD1Ev>:
    1ad8:	ret

Disassembly of section .text._ZN4llvm3mca16ResourceStrategy4usedEm:

0000000000000000 <_ZN4llvm3mca16ResourceStrategy4usedEm>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca23DefaultResourceStrategyD0Ev:

0000000000000000 <_ZN4llvm3mca23DefaultResourceStrategyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm3mca15ResourceManagerD2Ev:

0000000000000000 <_ZN4llvm3mca15ResourceManagerD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x9, 0 <_ZN4llvm3mca15ResourceManagerD2Ev>
  14:	ldrb	w8, [x0, #216]
  18:	ldr	x9, [x9]
  1c:	mov	x19, x0
  20:	add	x9, x9, #0x10
  24:	str	x9, [x0]
  28:	tbnz	w8, #0, 3c <_ZN4llvm3mca15ResourceManagerD2Ev+0x3c>
  2c:	ldr	x0, [x19, #224]
  30:	bl	0 <_ZdlPv>
  34:	ldrb	w8, [x19, #216]
  38:	tbnz	w8, #0, 11c <_ZN4llvm3mca15ResourceManagerD2Ev+0x11c>
  3c:	ldr	x8, [x19, #208]
  40:	ldr	x0, [x19, #160]
  44:	add	x9, x19, #0xb0
  48:	add	x8, x8, #0x1
  4c:	cmp	x0, x9
  50:	str	x8, [x19, #208]
  54:	b.eq	5c <_ZN4llvm3mca15ResourceManagerD2Ev+0x5c>  // b.none
  58:	bl	0 <free>
  5c:	ldr	x0, [x19, #80]
  60:	add	x8, x19, #0x60
  64:	cmp	x0, x8
  68:	b.eq	70 <_ZN4llvm3mca15ResourceManagerD2Ev+0x70>  // b.none
  6c:	bl	0 <free>
  70:	ldr	x0, [x19, #56]
  74:	cbz	x0, 7c <_ZN4llvm3mca15ResourceManagerD2Ev+0x7c>
  78:	bl	0 <_ZdlPv>
  7c:	ldp	x20, x21, [x19, #32]
  80:	cmp	x20, x21
  84:	b.ne	c4 <_ZN4llvm3mca15ResourceManagerD2Ev+0xc4>  // b.any
  88:	cbz	x20, 94 <_ZN4llvm3mca15ResourceManagerD2Ev+0x94>
  8c:	mov	x0, x20
  90:	bl	0 <_ZdlPv>
  94:	ldp	x20, x21, [x19, #8]
  98:	cmp	x20, x21
  9c:	b.ne	e8 <_ZN4llvm3mca15ResourceManagerD2Ev+0xe8>  // b.any
  a0:	cbz	x20, 10c <_ZN4llvm3mca15ResourceManagerD2Ev+0x10c>
  a4:	mov	x0, x20
  a8:	ldp	x20, x19, [sp, #32]
  ac:	ldr	x21, [sp, #16]
  b0:	ldp	x29, x30, [sp], #48
  b4:	b	0 <_ZdlPv>
  b8:	str	xzr, [x20], #8
  bc:	cmp	x21, x20
  c0:	b.eq	f8 <_ZN4llvm3mca15ResourceManagerD2Ev+0xf8>  // b.none
  c4:	ldr	x0, [x20]
  c8:	cbz	x0, b8 <_ZN4llvm3mca15ResourceManagerD2Ev+0xb8>
  cc:	ldr	x8, [x0]
  d0:	ldr	x8, [x8, #8]
  d4:	blr	x8
  d8:	b	b8 <_ZN4llvm3mca15ResourceManagerD2Ev+0xb8>
  dc:	str	xzr, [x20], #8
  e0:	cmp	x21, x20
  e4:	b.eq	104 <_ZN4llvm3mca15ResourceManagerD2Ev+0x104>  // b.none
  e8:	ldr	x0, [x20]
  ec:	cbz	x0, dc <_ZN4llvm3mca15ResourceManagerD2Ev+0xdc>
  f0:	bl	0 <_ZdlPv>
  f4:	b	dc <_ZN4llvm3mca15ResourceManagerD2Ev+0xdc>
  f8:	ldr	x20, [x19, #32]
  fc:	cbnz	x20, 8c <_ZN4llvm3mca15ResourceManagerD2Ev+0x8c>
 100:	b	94 <_ZN4llvm3mca15ResourceManagerD2Ev+0x94>
 104:	ldr	x20, [x19, #8]
 108:	cbnz	x20, a4 <_ZN4llvm3mca15ResourceManagerD2Ev+0xa4>
 10c:	ldp	x20, x19, [sp, #32]
 110:	ldr	x21, [sp, #16]
 114:	ldp	x29, x30, [sp], #48
 118:	ret
 11c:	adrp	x0, 0 <_ZN4llvm3mca15ResourceManagerD2Ev>
 120:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD2Ev>
 124:	adrp	x3, 0 <_ZN4llvm3mca15ResourceManagerD2Ev>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0x45b                 	// #1115
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca15ResourceManagerD0Ev:

0000000000000000 <_ZN4llvm3mca15ResourceManagerD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca15ResourceManagerD0Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	tbnz	w8, #0, 20 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x20>
  10:	ldr	w11, [x0, #24]
  14:	cbz	w11, c4 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xc4>
  18:	ldr	x8, [x0, #16]
  1c:	b	28 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x28>
  20:	add	x8, x0, #0x10
  24:	mov	w11, #0x4                   	// #4
  28:	ldp	x9, x10, [x1]
  2c:	and	x12, x10, x9
  30:	cmn	x12, #0x1
  34:	b.eq	14c <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x14c>  // b.none
  38:	cmn	x9, #0x2
  3c:	b.ne	48 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x48>  // b.any
  40:	cmn	x10, #0x2
  44:	b.eq	14c <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x14c>  // b.none
  48:	mov	x13, #0x2500000000          	// #158913789952
  4c:	mov	w14, #0x25                  	// #37
  50:	mov	x15, #0xffffffffffffffff    	// #-1
  54:	sub	w12, w11, #0x1
  58:	mul	x11, x9, x13
  5c:	mul	w13, w10, w14
  60:	orr	x11, x13, x11
  64:	eor	x13, x15, x13, lsl #32
  68:	add	x11, x11, x13
  6c:	eor	x11, x11, x11, lsr #22
  70:	eor	x13, x15, x11, lsl #13
  74:	add	x11, x11, x13
  78:	eor	x11, x11, x11, lsr #8
  7c:	add	x11, x11, x11, lsl #3
  80:	eor	x11, x11, x11, lsr #15
  84:	eor	x13, x15, x11, lsl #27
  88:	add	x11, x11, x13
  8c:	lsr	x13, x11, #31
  90:	eor	w11, w13, w11
  94:	and	w14, w12, w11
  98:	mov	w13, #0x18                  	// #24
  9c:	umaddl	x11, w14, w13, x8
  a0:	ldp	x16, x18, [x11]
  a4:	cmp	x9, x16
  a8:	b.ne	d8 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xd8>  // b.any
  ac:	cmp	x10, x18
  b0:	b.ne	d8 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xd8>  // b.any
  b4:	mov	w0, #0x1                   	// #1
  b8:	str	x11, [x2]
  bc:	ldp	x29, x30, [sp], #16
  c0:	ret
  c4:	mov	x11, xzr
  c8:	mov	w0, wzr
  cc:	str	x11, [x2]
  d0:	ldp	x29, x30, [sp], #16
  d4:	ret
  d8:	mov	x15, xzr
  dc:	mov	w1, #0x1                   	// #1
  e0:	mov	x17, #0xfffffffffffffffe    	// #-2
  e4:	and	x0, x18, x16
  e8:	cmn	x0, #0x1
  ec:	b.eq	134 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x134>  // b.none
  f0:	cmn	x18, #0x2
  f4:	add	w14, w14, w1
  f8:	ccmp	x16, x17, #0x0, eq  // eq = none
  fc:	and	w14, w14, w12
 100:	ccmp	x15, #0x0, #0x0, eq  // eq = none
 104:	csel	x15, x15, x11, ne  // ne = any
 108:	umaddl	x11, w14, w13, x8
 10c:	ldp	x16, x18, [x11]
 110:	add	w3, w1, #0x1
 114:	mov	w1, w3
 118:	cmp	x9, x16
 11c:	b.ne	e4 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xe4>  // b.any
 120:	cmp	x10, x18
 124:	mov	w0, #0x1                   	// #1
 128:	mov	w1, w3
 12c:	b.eq	b8 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xb8>  // b.none
 130:	b	e4 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xe4>
 134:	cmp	x15, #0x0
 138:	mov	w0, wzr
 13c:	csel	x11, x11, x15, eq  // eq = none
 140:	str	x11, [x2]
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
 150:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
 154:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x252                 	// #594
 168:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	x8, [x0]
  14:	ldr	w9, [x0, #8]
  18:	mov	x20, x2
  1c:	mov	x19, x0
  20:	add	x8, x8, #0x1
  24:	str	x8, [x0]
  28:	lsr	w8, w9, #1
  2c:	tbnz	w9, #0, 38 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x38>
  30:	ldr	w1, [x19, #24]
  34:	b	3c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x3c>
  38:	mov	w1, #0x4                   	// #4
  3c:	lsl	w9, w8, #2
  40:	add	w9, w9, #0x4
  44:	add	w10, w1, w1, lsl #1
  48:	cmp	w9, w10
  4c:	b.cs	b4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xb4>  // b.hs, b.nlast
  50:	ldr	w9, [x19, #12]
  54:	mvn	w8, w8
  58:	add	w8, w1, w8
  5c:	sub	w8, w8, w9
  60:	cmp	w8, w1, lsr #3
  64:	b.ls	b8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xb8>  // b.plast
  68:	cbz	x3, d8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xd8>
  6c:	ldr	w8, [x19, #8]
  70:	lsr	w9, w8, #1
  74:	adds	w9, w9, #0x1
  78:	b.mi	f8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xf8>  // b.first
  7c:	bfi	w8, w9, #1, #31
  80:	str	w8, [x19, #8]
  84:	ldp	x8, x9, [x3]
  88:	and	x8, x9, x8
  8c:	cmn	x8, #0x1
  90:	b.eq	a0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xa0>  // b.none
  94:	ldr	w8, [x19, #12]
  98:	sub	w8, w8, #0x1
  9c:	str	w8, [x19, #12]
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldp	x29, x30, [sp, #16]
  a8:	mov	x0, x3
  ac:	add	sp, sp, #0x30
  b0:	ret
  b4:	lsl	w1, w1, #1
  b8:	mov	x0, x19
  bc:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  c0:	add	x2, sp, #0x8
  c4:	mov	x0, x19
  c8:	mov	x1, x20
  cc:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  d0:	ldr	x3, [sp, #8]
  d4:	cbnz	x3, 6c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x6c>
  d8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  dc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  e0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x22f                 	// #559
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  fc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 100:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x441                 	// #1089
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj:

0000000000000000 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>:
   0:	sub	sp, sp, #0x90
   4:	stp	x29, x30, [sp, #96]
   8:	stp	x22, x21, [sp, #112]
   c:	stp	x20, x19, [sp, #128]
  10:	add	x29, sp, #0x60
  14:	cmp	w1, #0x5
  18:	mov	x19, x0
  1c:	b.cc	50 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x50>  // b.lo, b.ul, b.last
  20:	sub	w8, w1, #0x1
  24:	orr	x8, x8, x8, lsr #1
  28:	orr	x8, x8, x8, lsr #2
  2c:	orr	x8, x8, x8, lsr #4
  30:	orr	x8, x8, x8, lsr #8
  34:	orr	x8, x8, x8, lsr #16
  38:	lsr	x9, x8, #32
  3c:	orr	w8, w9, w8
  40:	add	w9, w8, #0x1
  44:	cmp	w9, #0x40
  48:	mov	w9, #0x40                  	// #64
  4c:	csinc	w1, w9, w8, ls  // ls = plast
  50:	ldr	w8, [x19, #8]
  54:	tbnz	w8, #0, 74 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x74>
  58:	ldr	x20, [x19, #16]
  5c:	ldr	w21, [x19, #24]
  60:	cmp	w1, #0x4
  64:	b.hi	b8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xb8>  // b.pmore
  68:	orr	w8, w8, #0x1
  6c:	str	w8, [x19, #8]
  70:	b	cc <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xcc>
  74:	mov	x8, x19
  78:	ldr	x10, [x8, #16]!
  7c:	ldr	x9, [x8, #8]
  80:	and	x11, x9, x10
  84:	cmn	x11, #0x1
  88:	b.eq	f8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xf8>  // b.none
  8c:	cmn	x10, #0x2
  90:	mov	x20, sp
  94:	b.ne	a0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xa0>  // b.any
  98:	cmn	x9, #0x2
  9c:	b.eq	fc <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xfc>  // b.none
  a0:	ldr	q0, [x8]
  a4:	add	x20, x20, #0x18
  a8:	str	q0, [sp]
  ac:	ldr	w8, [x19, #32]
  b0:	str	w8, [sp, #16]
  b4:	b	fc <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xfc>
  b8:	mov	w22, w1
  bc:	add	x8, x22, w1, uxtw #1
  c0:	lsl	x0, x8, #3
  c4:	bl	0 <_Znwm>
  c8:	stp	x0, x22, [x19, #16]
  cc:	mov	w8, #0x18                  	// #24
  d0:	madd	x2, x21, x8, x20
  d4:	mov	x0, x19
  d8:	mov	x1, x20
  dc:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  e0:	mov	x0, x20
  e4:	ldp	x20, x19, [sp, #128]
  e8:	ldp	x22, x21, [sp, #112]
  ec:	ldp	x29, x30, [sp, #96]
  f0:	add	sp, sp, #0x90
  f4:	b	0 <_ZdlPv>
  f8:	mov	x20, sp
  fc:	mov	x8, x19
 100:	ldr	x10, [x8, #40]!
 104:	ldr	x9, [x8, #8]
 108:	and	x11, x9, x10
 10c:	cmn	x11, #0x1
 110:	b.eq	158 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x158>  // b.none
 114:	cmn	x10, #0x2
 118:	b.ne	124 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x124>  // b.any
 11c:	cmn	x9, #0x2
 120:	b.eq	158 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x158>  // b.none
 124:	mov	x9, sp
 128:	sub	x9, x20, x9
 12c:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 130:	asr	x9, x9, #3
 134:	movk	x10, #0xaaab
 138:	mul	x9, x9, x10
 13c:	cmp	x9, #0x3
 140:	b.hi	25c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x25c>  // b.pmore
 144:	ldr	q0, [x8]
 148:	str	q0, [x20]
 14c:	ldr	w8, [x19, #56]
 150:	str	w8, [x20, #16]
 154:	add	x20, x20, #0x18
 158:	mov	x8, x19
 15c:	ldr	x10, [x8, #64]!
 160:	ldr	x9, [x8, #8]
 164:	and	x11, x9, x10
 168:	cmn	x11, #0x1
 16c:	b.eq	1b4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1b4>  // b.none
 170:	cmn	x10, #0x2
 174:	b.ne	180 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x180>  // b.any
 178:	cmn	x9, #0x2
 17c:	b.eq	1b4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1b4>  // b.none
 180:	mov	x9, sp
 184:	sub	x9, x20, x9
 188:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 18c:	asr	x9, x9, #3
 190:	movk	x10, #0xaaab
 194:	mul	x9, x9, x10
 198:	cmp	x9, #0x3
 19c:	b.hi	25c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x25c>  // b.pmore
 1a0:	ldr	q0, [x8]
 1a4:	str	q0, [x20]
 1a8:	ldr	w8, [x19, #80]
 1ac:	str	w8, [x20, #16]
 1b0:	add	x20, x20, #0x18
 1b4:	mov	x8, x19
 1b8:	ldr	x10, [x8, #88]!
 1bc:	ldr	x9, [x8, #8]
 1c0:	and	x11, x9, x10
 1c4:	cmn	x11, #0x1
 1c8:	b.eq	210 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x210>  // b.none
 1cc:	cmn	x10, #0x2
 1d0:	b.ne	1dc <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1dc>  // b.any
 1d4:	cmn	x9, #0x2
 1d8:	b.eq	210 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x210>  // b.none
 1dc:	mov	x9, sp
 1e0:	sub	x9, x20, x9
 1e4:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 1e8:	asr	x9, x9, #3
 1ec:	movk	x10, #0xaaab
 1f0:	mul	x9, x9, x10
 1f4:	cmp	x9, #0x3
 1f8:	b.hi	25c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x25c>  // b.pmore
 1fc:	ldr	q0, [x8]
 200:	str	q0, [x20]
 204:	ldr	w8, [x19, #104]
 208:	str	w8, [x20, #16]
 20c:	add	x20, x20, #0x18
 210:	cmp	w1, #0x4
 214:	b.ls	238 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x238>  // b.plast
 218:	ldr	w8, [x19, #8]
 21c:	mov	w21, w1
 220:	add	x9, x21, w1, uxtw #1
 224:	lsl	x0, x9, #3
 228:	and	w8, w8, #0xfffffffe
 22c:	str	w8, [x19, #8]
 230:	bl	0 <_Znwm>
 234:	stp	x0, x21, [x19, #16]
 238:	mov	x1, sp
 23c:	mov	x0, x19
 240:	mov	x2, x20
 244:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 248:	ldp	x20, x19, [sp, #128]
 24c:	ldp	x22, x21, [sp, #112]
 250:	ldp	x29, x30, [sp, #96]
 254:	add	sp, sp, #0x90
 258:	ret
 25c:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 260:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 264:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 268:	add	x0, x0, #0x0
 26c:	add	x1, x1, #0x0
 270:	add	x3, x3, #0x0
 274:	mov	w2, #0x402                 	// #1026
 278:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w9, [x0, #8]
  14:	mov	x19, x2
  18:	mov	x20, x1
  1c:	mov	x21, x0
  20:	and	w8, w9, #0x1
  24:	stp	w8, wzr, [x0, #8]
  28:	tbnz	w9, #0, 38 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x38>
  2c:	ldr	w9, [x21, #24]
  30:	sub	w10, w9, #0x1
  34:	b	40 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x40>
  38:	mov	w10, #0x3                   	// #3
  3c:	mov	w9, #0x4                   	// #4
  40:	tst	w10, w9
  44:	b.ne	154 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x154>  // b.any
  48:	cbnz	w8, 64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x64>
  4c:	ldr	w9, [x21, #24]
  50:	cbz	w9, 84 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x84>
  54:	ldr	x8, [x21, #16]
  58:	mov	w10, #0x18                  	// #24
  5c:	madd	x9, x9, x10, x8
  60:	b	6c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x6c>
  64:	add	x8, x21, #0x10
  68:	add	x9, x21, #0x70
  6c:	mov	x10, #0xffffffffffffffff    	// #-1
  70:	add	x11, x8, #0x18
  74:	cmp	x9, x11
  78:	stp	x10, x10, [x8]
  7c:	mov	x8, x11
  80:	b.ne	70 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x70>  // b.any
  84:	cmp	x20, x19
  88:	b.ne	a8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0xa8>  // b.any
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldr	x21, [sp, #16]
  94:	ldp	x29, x30, [sp], #48
  98:	ret
  9c:	add	x20, x20, #0x18
  a0:	cmp	x19, x20
  a4:	b.eq	8c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x8c>  // b.none
  a8:	ldp	x9, x8, [x20]
  ac:	and	x10, x8, x9
  b0:	cmn	x10, #0x1
  b4:	b.eq	9c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x9c>  // b.none
  b8:	cmn	x9, #0x2
  bc:	b.ne	c8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0xc8>  // b.any
  c0:	cmn	x8, #0x2
  c4:	b.eq	9c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x9c>  // b.none
  c8:	add	x2, x29, #0x18
  cc:	mov	x0, x21
  d0:	mov	x1, x20
  d4:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  d8:	tbnz	w0, #0, 114 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x114>
  dc:	ldr	x8, [x29, #24]
  e0:	ldr	x9, [x20]
  e4:	str	x9, [x8]
  e8:	ldr	x9, [x20, #8]
  ec:	str	x9, [x8, #8]
  f0:	ldr	w9, [x20, #16]
  f4:	str	w9, [x8, #16]
  f8:	ldr	w8, [x21, #8]
  fc:	lsr	w9, w8, #1
 100:	adds	w9, w9, #0x1
 104:	b.mi	134 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x134>  // b.first
 108:	bfi	w8, w9, #1, #31
 10c:	str	w8, [x21, #8]
 110:	b	9c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x9c>
 114:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 118:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 11c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 120:	add	x0, x0, #0x0
 124:	add	x1, x1, #0x0
 128:	add	x3, x3, #0x0
 12c:	mov	w2, #0x17a                 	// #378
 130:	bl	0 <__assert_fail>
 134:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 138:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 13c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 140:	add	x0, x0, #0x0
 144:	add	x1, x1, #0x0
 148:	add	x3, x3, #0x0
 14c:	mov	w2, #0x441                 	// #1089
 150:	bl	0 <__assert_fail>
 154:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 158:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 15c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 160:	add	x0, x0, #0x0
 164:	add	x1, x1, #0x0
 168:	add	x3, x3, #0x0
 16c:	mov	w2, #0x15c                 	// #348
 170:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	add	x8, x21, x21, lsl #1
  6c:	lsl	x0, x8, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, ec <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xec>
  c4:	add	x8, x8, x8, lsl #1
  c8:	lsl	x8, x8, #3
  cc:	mov	x9, x20
  d0:	ldr	x10, [x0, #16]
  d4:	ldr	q0, [x0], #24
  d8:	subs	x8, x8, #0x18
  dc:	str	x10, [x9, #16]
  e0:	str	q0, [x9], #24
  e4:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xd0>  // b.any
  e8:	ldr	x0, [x19]
  ec:	add	x8, x19, #0x10
  f0:	cmp	x0, x8
  f4:	b.eq	fc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xfc>  // b.none
  f8:	bl	0 <free>
  fc:	str	x20, [x19]
 100:	str	w21, [x19, #12]
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

RetireControlUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x9, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
   c:	ldr	x9, [x9]
  10:	mov	x8, x0
  14:	add	x9, x9, #0x10
  18:	stp	x9, xzr, [x0]
  1c:	ldr	w9, [x1, #4]
  20:	str	xzr, [x0, #32]!
  24:	stp	xzr, xzr, [x0, #8]
  28:	stp	w9, wzr, [x0, #-12]
  2c:	stur	w9, [x0, #-16]
  30:	ldr	x10, [x1, #64]
  34:	cbz	x10, 50 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x50>
  38:	ldr	w11, [x10]
  3c:	cbz	w11, 48 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x48>
  40:	mov	w9, w11
  44:	str	w11, [x8, #20]
  48:	ldr	w10, [x10, #4]
  4c:	str	w10, [x8, #24]
  50:	str	w9, [x8, #16]
  54:	cbz	w9, 74 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x74>
  58:	lsl	w8, w9, #1
  5c:	cbz	w8, 6c <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x6c>
  60:	mov	w1, w8
  64:	ldp	x29, x30, [sp], #16
  68:	b	0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  6c:	ldp	x29, x30, [sp], #16
  70:	ret
  74:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  78:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  7c:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0x24                  	// #36
  90:	bl	0 <__assert_fail>

0000000000000094 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>:
  94:	stp	x29, x30, [sp, #-16]!
  98:	mov	x29, sp
  9c:	ldr	x10, [x1, #8]
  a0:	ldp	w9, w11, [x0, #16]
  a4:	ldr	x8, [x10]
  a8:	ldr	w8, [x8, #316]
  ac:	cmp	w9, w8
  b0:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  b4:	cmp	w8, #0x0
  b8:	csinc	w9, w8, wzr, ne  // ne = any
  bc:	cmp	w11, w9
  c0:	b.cc	134 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE+0xa0>  // b.lo, b.ul, b.last
  c4:	ldr	w8, [x0, #8]
  c8:	ldr	x11, [x0, #32]
  cc:	ldr	w12, [x1]
  d0:	mov	w13, #0x18                  	// #24
  d4:	cmp	w9, #0x1
  d8:	madd	x11, x8, x13, x11
  dc:	str	w12, [x11]
  e0:	str	x10, [x11, #8]
  e4:	str	w9, [x11, #16]
  e8:	strb	wzr, [x11, #20]
  ec:	ldp	x12, x11, [x0, #32]
  f0:	ldr	w10, [x0, #8]
  f4:	ldr	w14, [x0, #20]
  f8:	csinc	w13, w9, wzr, hi  // hi = pmore
  fc:	sub	x11, x11, x12
 100:	mov	x12, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 104:	movk	x12, #0xaaab
 108:	asr	x11, x11, #3
 10c:	add	w10, w10, w13
 110:	mul	x11, x11, x12
 114:	udiv	x12, x10, x11
 118:	sub	w9, w14, w9
 11c:	msub	w10, w12, w11, w10
 120:	str	w10, [x0, #8]
 124:	str	w9, [x0, #20]
 128:	mov	w0, w8
 12c:	ldp	x29, x30, [sp], #16
 130:	ret
 134:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 138:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 13c:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 140:	add	x0, x0, #0x0
 144:	add	x1, x1, #0x0
 148:	add	x3, x3, #0x0
 14c:	mov	w2, #0x2c                  	// #44
 150:	bl	0 <__assert_fail>

0000000000000154 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>:
 154:	stp	x29, x30, [sp, #-16]!
 158:	mov	x29, sp
 15c:	ldr	w8, [x0, #12]
 160:	ldr	x9, [x0, #32]
 164:	mov	w10, #0x18                  	// #24
 168:	madd	x10, x8, x10, x9
 16c:	ldr	x10, [x10, #8]
 170:	cbz	x10, 184 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv+0x30>
 174:	mov	w10, #0x18                  	// #24
 178:	madd	x0, x8, x10, x9
 17c:	ldp	x29, x30, [sp], #16
 180:	ret
 184:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 188:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 18c:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 190:	add	x0, x0, #0x0
 194:	add	x1, x1, #0x0
 198:	add	x3, x3, #0x0
 19c:	mov	w2, #0x3b                  	// #59
 1a0:	bl	0 <__assert_fail>

00000000000001a4 <_ZNK4llvm3mca17RetireControlUnit18computeNextSlotIdxEv>:
 1a4:	stp	x29, x30, [sp, #-16]!
 1a8:	mov	x29, sp
 1ac:	ldr	w8, [x0, #12]
 1b0:	ldr	x9, [x0, #32]
 1b4:	mov	w10, #0x18                  	// #24
 1b8:	madd	x10, x8, x10, x9
 1bc:	ldr	x10, [x10, #8]
 1c0:	cbz	x10, 204 <_ZNK4llvm3mca17RetireControlUnit18computeNextSlotIdxEv+0x60>
 1c4:	mov	w10, #0x18                  	// #24
 1c8:	madd	x10, x8, x10, x9
 1cc:	ldr	x11, [x0, #40]
 1d0:	ldr	w10, [x10, #16]
 1d4:	mov	x12, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 1d8:	movk	x12, #0xaaab
 1dc:	sub	x9, x11, x9
 1e0:	cmp	w10, #0x1
 1e4:	asr	x9, x9, #3
 1e8:	csinc	w10, w10, wzr, hi  // hi = pmore
 1ec:	add	w8, w10, w8
 1f0:	mul	x9, x9, x12
 1f4:	udiv	x10, x8, x9
 1f8:	msub	w0, w10, w9, w8
 1fc:	ldp	x29, x30, [sp], #16
 200:	ret
 204:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 208:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 20c:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 210:	add	x0, x0, #0x0
 214:	add	x1, x1, #0x0
 218:	add	x3, x3, #0x0
 21c:	mov	w2, #0x3b                  	// #59
 220:	bl	0 <__assert_fail>

0000000000000224 <_ZNK4llvm3mca17RetireControlUnit13peekNextTokenEv>:
 224:	stp	x29, x30, [sp, #-16]!
 228:	mov	x29, sp
 22c:	ldr	w8, [x0, #12]
 230:	ldr	x9, [x0, #32]
 234:	mov	w10, #0x18                  	// #24
 238:	madd	x10, x8, x10, x9
 23c:	ldr	x10, [x10, #8]
 240:	cbz	x10, 288 <_ZNK4llvm3mca17RetireControlUnit13peekNextTokenEv+0x64>
 244:	mov	w10, #0x18                  	// #24
 248:	madd	x12, x8, x10, x9
 24c:	ldr	x11, [x0, #40]
 250:	ldr	w12, [x12, #16]
 254:	mov	x13, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 258:	movk	x13, #0xaaab
 25c:	sub	x11, x11, x9
 260:	cmp	w12, #0x1
 264:	asr	x11, x11, #3
 268:	csinc	w12, w12, wzr, hi  // hi = pmore
 26c:	add	w8, w12, w8
 270:	mul	x11, x11, x13
 274:	udiv	x12, x8, x11
 278:	msub	x8, x12, x11, x8
 27c:	madd	x0, x8, x10, x9
 280:	ldp	x29, x30, [sp], #16
 284:	ret
 288:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 28c:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 290:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 294:	add	x0, x0, #0x0
 298:	add	x1, x1, #0x0
 29c:	add	x3, x3, #0x0
 2a0:	mov	w2, #0x3b                  	// #59
 2a4:	bl	0 <__assert_fail>

00000000000002a8 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv>:
 2a8:	stp	x29, x30, [sp, #-16]!
 2ac:	mov	x29, sp
 2b0:	ldr	w8, [x0, #12]
 2b4:	ldr	x10, [x0, #32]
 2b8:	mov	w9, #0x18                  	// #24
 2bc:	madd	x9, x8, x9, x10
 2c0:	ldr	x11, [x9, #8]!
 2c4:	ldr	w12, [x11, #784]
 2c8:	cmp	w12, #0x5
 2cc:	b.ne	338 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv+0x90>  // b.any
 2d0:	mov	w12, #0x6                   	// #6
 2d4:	mov	w13, #0x18                  	// #24
 2d8:	str	w12, [x11, #784]
 2dc:	madd	x11, x8, x13, x10
 2e0:	ldr	w12, [x11, #16]
 2e4:	ldr	x13, [x0, #40]
 2e8:	ldr	w14, [x0, #20]
 2ec:	cmp	w12, #0x1
 2f0:	sub	x10, x13, x10
 2f4:	add	w13, w14, w12
 2f8:	str	w13, [x0, #20]
 2fc:	mov	x13, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 300:	movk	x13, #0xaaab
 304:	csinc	w12, w12, wzr, hi  // hi = pmore
 308:	asr	x10, x10, #3
 30c:	add	w8, w12, w8
 310:	mul	x10, x10, x13
 314:	udiv	x12, x8, x10
 318:	msub	w8, w12, w10, w8
 31c:	str	w8, [x0, #12]
 320:	str	wzr, [x11]
 324:	str	xzr, [x9]
 328:	str	wzr, [x11, #16]
 32c:	strb	wzr, [x11, #20]
 330:	ldp	x29, x30, [sp], #16
 334:	ret
 338:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 33c:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 340:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 344:	add	x0, x0, #0x0
 348:	add	x1, x1, #0x0
 34c:	add	x3, x3, #0x0
 350:	mov	w2, #0x21c                 	// #540
 354:	bl	0 <__assert_fail>

0000000000000358 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj>:
 358:	stp	x29, x30, [sp, #-16]!
 35c:	mov	x29, sp
 360:	ldp	x8, x9, [x0, #32]
 364:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 368:	movk	x10, #0xaaab
 36c:	sub	x9, x9, x8
 370:	asr	x9, x9, #3
 374:	mul	x10, x9, x10
 378:	mov	w9, w1
 37c:	cmp	x10, x9
 380:	b.ls	3b4 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x5c>  // b.plast
 384:	mov	w10, #0x18                  	// #24
 388:	madd	x10, x9, x10, x8
 38c:	ldr	x10, [x10, #8]
 390:	cbz	x10, 3d4 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x7c>
 394:	mov	w10, #0x18                  	// #24
 398:	madd	x8, x9, x10, x8
 39c:	ldrb	w9, [x8, #20]!
 3a0:	cbnz	w9, 3f4 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x9c>
 3a4:	mov	w9, #0x1                   	// #1
 3a8:	strb	w9, [x8]
 3ac:	ldp	x29, x30, [sp], #16
 3b0:	ret
 3b4:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3b8:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3bc:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3c0:	add	x0, x0, #0x0
 3c4:	add	x1, x1, #0x0
 3c8:	add	x3, x3, #0x0
 3cc:	mov	w2, #0x56                  	// #86
 3d0:	bl	0 <__assert_fail>
 3d4:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3d8:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3dc:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3e0:	add	x0, x0, #0x0
 3e4:	add	x1, x1, #0x0
 3e8:	add	x3, x3, #0x0
 3ec:	mov	w2, #0x57                  	// #87
 3f0:	bl	0 <__assert_fail>
 3f4:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3f8:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3fc:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 400:	add	x0, x0, #0x0
 404:	add	x1, x1, #0x0
 408:	add	x3, x3, #0x0
 40c:	mov	w2, #0x58                  	// #88
 410:	bl	0 <__assert_fail>

0000000000000414 <_ZNK4llvm3mca17RetireControlUnit4dumpEv>:
 414:	stp	x29, x30, [sp, #-32]!
 418:	str	x19, [sp, #16]
 41c:	mov	x29, sp
 420:	mov	x19, x0
 424:	bl	0 <_ZN4llvm4dbgsEv>
 428:	ldp	x9, x8, [x0, #16]
 42c:	sub	x9, x9, x8
 430:	cmp	x9, #0x21
 434:	b.hi	44c <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0x38>  // b.pmore
 438:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 43c:	add	x1, x1, #0x0
 440:	mov	w2, #0x22                  	// #34
 444:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 448:	b	470 <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0x5c>
 44c:	adrp	x9, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 450:	add	x9, x9, #0x0
 454:	ldp	q1, q0, [x9]
 458:	mov	w9, #0x3d20                	// #15648
 45c:	strh	w9, [x8, #32]
 460:	stp	q1, q0, [x8]
 464:	ldr	x8, [x0, #24]
 468:	add	x8, x8, #0x22
 46c:	str	x8, [x0, #24]
 470:	ldr	w1, [x19, #16]
 474:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 478:	ldp	x9, x8, [x0, #16]
 47c:	sub	x9, x9, x8
 480:	cmp	x9, #0x17
 484:	b.hi	49c <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0x88>  // b.pmore
 488:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 48c:	add	x1, x1, #0x0
 490:	mov	w2, #0x18                  	// #24
 494:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 498:	b	4c0 <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0xac>
 49c:	adrp	x9, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 4a0:	add	x9, x9, #0x0
 4a4:	ldr	x10, [x9, #16]
 4a8:	ldr	q0, [x9]
 4ac:	str	x10, [x8, #16]
 4b0:	str	q0, [x8]
 4b4:	ldr	x8, [x0, #24]
 4b8:	add	x8, x8, #0x18
 4bc:	str	x8, [x0, #24]
 4c0:	ldr	w1, [x19, #20]
 4c4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 4c8:	ldp	x9, x8, [x0, #16]
 4cc:	sub	x9, x9, x8
 4d0:	cmp	x9, #0x2
 4d4:	b.hi	4f0 <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0xdc>  // b.pmore
 4d8:	ldr	x19, [sp, #16]
 4dc:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 4e0:	add	x1, x1, #0x0
 4e4:	mov	w2, #0x3                   	// #3
 4e8:	ldp	x29, x30, [sp], #32
 4ec:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 4f0:	mov	w9, #0xa                   	// #10
 4f4:	mov	w10, #0x7d20                	// #32032
 4f8:	strb	w9, [x8, #2]
 4fc:	strh	w10, [x8]
 500:	ldr	x8, [x0, #24]
 504:	ldr	x19, [sp, #16]
 508:	add	x8, x8, #0x3
 50c:	str	x8, [x0, #24]
 510:	ldp	x29, x30, [sp], #32
 514:	ret

Disassembly of section .text._ZN4llvm3mca17RetireControlUnitD2Ev:

0000000000000000 <_ZN4llvm3mca17RetireControlUnitD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17RetireControlUnitD2Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #32]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca17RetireControlUnitD2Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca17RetireControlUnitD0Ev:

0000000000000000 <_ZN4llvm3mca17RetireControlUnitD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17RetireControlUnitD0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #32]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca17RetireControlUnitD0Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	mov	x0, x19
  30:	bl	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZdlPv>

Disassembly of section .text._ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	cbz	x1, 140 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x140>
  1c:	mov	x22, x0
  20:	mov	x24, x0
  24:	ldr	x21, [x22, #8]!
  28:	ldr	x26, [x0]
  2c:	ldr	x8, [x24, #16]!
  30:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  34:	movk	x9, #0xaaab
  38:	mov	x19, x1
  3c:	sub	x8, x8, x21
  40:	asr	x8, x8, #3
  44:	mul	x8, x8, x9
  48:	mov	x20, x0
  4c:	cmp	x8, x1
  50:	b.cs	b4 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0xb4>  // b.hs, b.nlast
  54:	sub	x10, x21, x26
  58:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  5c:	asr	x10, x10, #3
  60:	movk	x8, #0x555, lsl #48
  64:	mul	x23, x10, x9
  68:	sub	x9, x8, x23
  6c:	cmp	x9, x19
  70:	b.cc	158 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x158>  // b.lo, b.ul, b.last
  74:	cmp	x23, x19
  78:	csel	x9, x19, x23, cc  // cc = lo, ul, last
  7c:	adds	x9, x9, x23
  80:	cset	w10, cs  // cs = hs, nlast
  84:	cmp	x9, x8
  88:	cset	w11, hi  // hi = pmore
  8c:	orr	w10, w10, w11
  90:	cmp	w10, #0x0
  94:	csel	x25, x8, x9, ne  // ne = any
  98:	cbz	x25, d8 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0xd8>
  9c:	add	x8, x25, x25, lsl #1
  a0:	lsl	x0, x8, #3
  a4:	bl	0 <_Znwm>
  a8:	ldp	x26, x21, [x20]
  ac:	mov	x22, x0
  b0:	b	dc <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0xdc>
  b4:	add	x8, x19, x19, lsl #1
  b8:	lsl	x19, x8, #3
  bc:	mov	x0, x21
  c0:	mov	w1, wzr
  c4:	mov	x2, x19
  c8:	bl	0 <memset>
  cc:	add	x8, x21, x19
  d0:	mov	x24, x22
  d4:	b	13c <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x13c>
  d8:	mov	x22, xzr
  dc:	mov	w8, #0x18                  	// #24
  e0:	add	x9, x19, x19, lsl #1
  e4:	madd	x23, x23, x8, x22
  e8:	lsl	x2, x9, #3
  ec:	mov	x0, x23
  f0:	mov	w1, wzr
  f4:	bl	0 <memset>
  f8:	cmp	x26, x21
  fc:	b.eq	120 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x120>  // b.none
 100:	mov	x8, x22
 104:	ldr	x9, [x26, #16]
 108:	ldr	q0, [x26], #24
 10c:	str	x9, [x8, #16]
 110:	cmp	x21, x26
 114:	str	q0, [x8], #24
 118:	b.ne	104 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x104>  // b.any
 11c:	ldr	x21, [x20]
 120:	cbz	x21, 12c <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x12c>
 124:	mov	x0, x21
 128:	bl	0 <_ZdlPv>
 12c:	mov	w8, #0x18                  	// #24
 130:	madd	x9, x19, x8, x23
 134:	madd	x8, x25, x8, x22
 138:	stp	x22, x9, [x20]
 13c:	str	x8, [x24]
 140:	ldp	x20, x19, [sp, #64]
 144:	ldp	x22, x21, [sp, #48]
 148:	ldp	x24, x23, [sp, #32]
 14c:	ldp	x26, x25, [sp, #16]
 150:	ldp	x29, x30, [sp], #80
 154:	ret
 158:	adrp	x0, 0 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm>
 15c:	add	x0, x0, #0x0
 160:	bl	0 <_ZSt20__throw_length_errorPKc>

Scheduler.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	str	x19, [sp, #16]
       8:	mov	x29, sp
       c:	ldr	x8, [x1]
      10:	mov	x19, x0
      14:	cbz	x8, 3c <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x3c>
      18:	str	xzr, [x1]
      1c:	ldr	x0, [x19, #16]
      20:	str	x8, [x19, #16]
      24:	cbz	x0, 64 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x64>
      28:	ldr	x8, [x0]
      2c:	ldr	x19, [sp, #16]
      30:	ldr	x1, [x8, #8]
      34:	ldp	x29, x30, [sp], #32
      38:	br	x1
      3c:	mov	w0, #0x8                   	// #8
      40:	bl	0 <_Znwm>
      44:	adrp	x9, 28 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x28>
      48:	ldr	x9, [x9]
      4c:	mov	x8, x0
      50:	add	x9, x9, #0x10
      54:	str	x9, [x0]
      58:	ldr	x0, [x19, #16]
      5c:	str	x8, [x19, #16]
      60:	cbnz	x0, 28 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x28>
      64:	ldr	x19, [sp, #16]
      68:	ldp	x29, x30, [sp], #32
      6c:	ret

0000000000000070 <_ZN4llvm3mca17SchedulerStrategyD1Ev>:
      70:	ret

0000000000000074 <_ZN4llvm3mca17SchedulerStrategyD0Ev>:
      74:	brk	#0x1

0000000000000078 <_ZN4llvm3mca24DefaultSchedulerStrategyD0Ev>:
      78:	b	0 <_ZdlPv>

000000000000007c <_ZNK4llvm3mca9Scheduler4dumpEv>:
      7c:	stp	x29, x30, [sp, #-32]!
      80:	stp	x20, x19, [sp, #16]
      84:	mov	x29, sp
      88:	mov	x19, x0
      8c:	bl	0 <_ZN4llvm4dbgsEv>
      90:	ldp	x9, x8, [x0, #16]
      94:	sub	x9, x9, x8
      98:	cmp	x9, #0x1d
      9c:	b.hi	b4 <_ZNK4llvm3mca9Scheduler4dumpEv+0x38>  // b.pmore
      a0:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
      a4:	add	x1, x1, #0x0
      a8:	mov	w2, #0x1e                  	// #30
      ac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
      b0:	b	d8 <_ZNK4llvm3mca9Scheduler4dumpEv+0x5c>
      b4:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
      b8:	add	x9, x9, #0x0
      bc:	ldur	q0, [x9, #14]
      c0:	ldr	q1, [x9]
      c4:	stur	q0, [x8, #14]
      c8:	str	q1, [x8]
      cc:	ldr	x8, [x0, #24]
      d0:	add	x8, x8, #0x1e
      d4:	str	x8, [x0, #24]
      d8:	ldp	x9, x8, [x19, #32]
      dc:	sub	x8, x8, x9
      e0:	asr	x1, x8, #4
      e4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
      e8:	ldp	x9, x8, [x0, #16]
      ec:	cmp	x8, x9
      f0:	b.cs	108 <_ZNK4llvm3mca9Scheduler4dumpEv+0x8c>  // b.hs, b.nlast
      f4:	add	x9, x8, #0x1
      f8:	mov	w10, #0xa                   	// #10
      fc:	str	x9, [x0, #24]
     100:	strb	w10, [x8]
     104:	b	110 <_ZNK4llvm3mca9Scheduler4dumpEv+0x94>
     108:	mov	w1, #0xa                   	// #10
     10c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     110:	bl	0 <_ZN4llvm4dbgsEv>
     114:	ldp	x9, x8, [x0, #16]
     118:	sub	x9, x9, x8
     11c:	cmp	x9, #0x1e
     120:	b.hi	138 <_ZNK4llvm3mca9Scheduler4dumpEv+0xbc>  // b.pmore
     124:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     128:	add	x1, x1, #0x0
     12c:	mov	w2, #0x1f                  	// #31
     130:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     134:	b	15c <_ZNK4llvm3mca9Scheduler4dumpEv+0xe0>
     138:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     13c:	add	x9, x9, #0x0
     140:	ldur	q0, [x9, #15]
     144:	ldr	q1, [x9]
     148:	stur	q0, [x8, #15]
     14c:	str	q1, [x8]
     150:	ldr	x8, [x0, #24]
     154:	add	x8, x8, #0x1f
     158:	str	x8, [x0, #24]
     15c:	ldp	x9, x8, [x19, #80]
     160:	sub	x8, x8, x9
     164:	asr	x1, x8, #4
     168:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     16c:	ldp	x9, x8, [x0, #16]
     170:	cmp	x8, x9
     174:	b.cs	18c <_ZNK4llvm3mca9Scheduler4dumpEv+0x110>  // b.hs, b.nlast
     178:	add	x9, x8, #0x1
     17c:	mov	w10, #0xa                   	// #10
     180:	str	x9, [x0, #24]
     184:	strb	w10, [x8]
     188:	b	194 <_ZNK4llvm3mca9Scheduler4dumpEv+0x118>
     18c:	mov	w1, #0xa                   	// #10
     190:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     194:	bl	0 <_ZN4llvm4dbgsEv>
     198:	ldp	x9, x8, [x0, #16]
     19c:	sub	x9, x9, x8
     1a0:	cmp	x9, #0x1f
     1a4:	b.hi	1bc <_ZNK4llvm3mca9Scheduler4dumpEv+0x140>  // b.pmore
     1a8:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     1ac:	add	x1, x1, #0x0
     1b0:	mov	w2, #0x20                  	// #32
     1b4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     1b8:	b	1d8 <_ZNK4llvm3mca9Scheduler4dumpEv+0x15c>
     1bc:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     1c0:	add	x9, x9, #0x0
     1c4:	ldp	q1, q0, [x9]
     1c8:	stp	q1, q0, [x8]
     1cc:	ldr	x8, [x0, #24]
     1d0:	add	x8, x8, #0x20
     1d4:	str	x8, [x0, #24]
     1d8:	ldp	x9, x8, [x19, #104]
     1dc:	sub	x8, x8, x9
     1e0:	asr	x1, x8, #4
     1e4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     1e8:	ldp	x9, x8, [x0, #16]
     1ec:	cmp	x8, x9
     1f0:	b.cs	218 <_ZNK4llvm3mca9Scheduler4dumpEv+0x19c>  // b.hs, b.nlast
     1f4:	add	x9, x8, #0x1
     1f8:	mov	w10, #0xa                   	// #10
     1fc:	str	x9, [x0, #24]
     200:	strb	w10, [x8]
     204:	ldr	x8, [x19, #24]
     208:	ldp	x19, x20, [x8, #8]
     20c:	cmp	x19, x20
     210:	b.ne	230 <_ZNK4llvm3mca9Scheduler4dumpEv+0x1b4>  // b.any
     214:	b	240 <_ZNK4llvm3mca9Scheduler4dumpEv+0x1c4>
     218:	mov	w1, #0xa                   	// #10
     21c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     220:	ldr	x8, [x19, #24]
     224:	ldp	x19, x20, [x8, #8]
     228:	cmp	x19, x20
     22c:	b.eq	240 <_ZNK4llvm3mca9Scheduler4dumpEv+0x1c4>  // b.none
     230:	ldr	x0, [x19], #8
     234:	bl	0 <_ZNK4llvm3mca13ResourceState4dumpEv>
     238:	cmp	x20, x19
     23c:	b.ne	230 <_ZNK4llvm3mca9Scheduler4dumpEv+0x1b4>  // b.any
     240:	ldp	x20, x19, [sp, #16]
     244:	ldp	x29, x30, [sp], #32
     248:	ret

000000000000024c <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE>:
     24c:	stp	x29, x30, [sp, #-32]!
     250:	stp	x20, x19, [sp, #16]
     254:	mov	x29, sp
     258:	ldr	x8, [x1, #8]
     25c:	mov	x20, x1
     260:	mov	x19, x0
     264:	ldr	x0, [x0, #24]
     268:	ldr	x1, [x8, #800]
     26c:	bl	0 <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm>
     270:	cmp	w0, #0x0
     274:	cset	w8, ne  // ne = any
     278:	cmp	w0, #0x1
     27c:	strb	w8, [x19, #140]
     280:	b.eq	29c <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x50>  // b.none
     284:	cmp	w0, #0x2
     288:	b.ne	2ac <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x60>  // b.any
     28c:	mov	w0, #0x4                   	// #4
     290:	ldp	x20, x19, [sp, #16]
     294:	ldp	x29, x30, [sp], #32
     298:	ret
     29c:	mov	w0, #0x3                   	// #3
     2a0:	ldp	x20, x19, [sp, #16]
     2a4:	ldp	x29, x30, [sp], #32
     2a8:	ret
     2ac:	ldr	x0, [x19, #8]
     2b0:	mov	x1, x20
     2b4:	ldr	x8, [x0]
     2b8:	ldr	x8, [x8, #16]
     2bc:	blr	x8
     2c0:	cmp	w0, #0x0
     2c4:	cset	w8, ne  // ne = any
     2c8:	cmp	w0, #0x3
     2cc:	strb	w8, [x19, #140]
     2d0:	b.cc	290 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x44>  // b.lo, b.ul, b.last
     2d4:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     2d8:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     2dc:	add	x0, x0, #0x0
     2e0:	add	x1, x1, #0x0
     2e4:	mov	w2, #0x43                  	// #67
     2e8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000002ec <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE>:
     2ec:	stp	x29, x30, [sp, #-80]!
     2f0:	str	x25, [sp, #16]
     2f4:	stp	x24, x23, [sp, #32]
     2f8:	stp	x22, x21, [sp, #48]
     2fc:	stp	x20, x19, [sp, #64]
     300:	mov	x29, sp
     304:	ldr	x21, [x1, #8]
     308:	mov	x20, x1
     30c:	mov	x19, x0
     310:	ldr	x0, [x0, #24]
     314:	ldr	x1, [x21]
     318:	bl	0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
     31c:	ldr	w1, [x20]
     320:	mov	x0, x21
     324:	bl	0 <_ZN4llvm3mca11Instruction7executeEj>
     328:	mov	x0, x21
     32c:	bl	0 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv>
     330:	ldr	x8, [x21]
     334:	ldrb	w9, [x8, #324]
     338:	cbnz	w9, 344 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x58>
     33c:	ldrb	w8, [x8, #325]
     340:	cbz	w8, 378 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x8c>
     344:	ldr	x0, [x19, #8]
     348:	mov	x1, x20
     34c:	ldr	x8, [x0]
     350:	ldr	x8, [x8, #48]
     354:	blr	x8
     358:	ldr	x0, [x19, #8]
     35c:	ldr	w1, [x21, #796]
     360:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     364:	ldr	x8, [x0, #72]
     368:	ldr	w9, [x0, #80]
     36c:	add	x10, x21, #0x334
     370:	str	x8, [x10]
     374:	str	w9, [x10, #8]
     378:	ldr	w8, [x21, #784]
     37c:	cmp	w8, #0x5
     380:	b.eq	3b0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0xc4>  // b.none
     384:	cmp	w8, #0x4
     388:	b.ne	480 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x194>  // b.any
     38c:	ldp	x23, x8, [x19, #112]
     390:	cmp	x23, x8
     394:	b.eq	3d8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0xec>  // b.none
     398:	ldr	q0, [x20]
     39c:	str	q0, [x23]
     3a0:	ldr	x8, [x19, #112]
     3a4:	add	x8, x8, #0x10
     3a8:	str	x8, [x19, #112]
     3ac:	b	480 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x194>
     3b0:	ldr	x0, [x19, #8]
     3b4:	mov	x1, x20
     3b8:	ldp	x20, x19, [sp, #64]
     3bc:	ldp	x22, x21, [sp, #48]
     3c0:	ldr	x8, [x0]
     3c4:	ldp	x24, x23, [sp, #32]
     3c8:	ldr	x25, [sp, #16]
     3cc:	ldr	x2, [x8, #32]
     3d0:	ldp	x29, x30, [sp], #80
     3d4:	br	x2
     3d8:	ldr	x21, [x19, #104]
     3dc:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
     3e0:	sub	x8, x23, x21
     3e4:	cmp	x8, x9
     3e8:	b.eq	498 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x1ac>  // b.none
     3ec:	asr	x25, x8, #4
     3f0:	cmp	x8, #0x0
     3f4:	csinc	x8, x25, xzr, ne  // ne = any
     3f8:	adds	x8, x8, x25
     3fc:	lsr	x10, x8, #59
     400:	cset	w9, cs  // cs = hs, nlast
     404:	cmp	x10, #0x0
     408:	cset	w10, ne  // ne = any
     40c:	orr	w9, w9, w10
     410:	cmp	w9, #0x0
     414:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
     418:	csel	x24, x9, x8, ne  // ne = any
     41c:	cbz	x24, 430 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x144>
     420:	lsl	x0, x24, #4
     424:	bl	0 <_Znwm>
     428:	mov	x22, x0
     42c:	b	434 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x148>
     430:	mov	x22, xzr
     434:	ldr	q0, [x20]
     438:	cmp	x23, x21
     43c:	mov	x8, x22
     440:	str	q0, [x22, x25, lsl #4]
     444:	b.eq	464 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x178>  // b.none
     448:	mov	x8, x22
     44c:	mov	x9, x21
     450:	ldr	q0, [x9], #16
     454:	cmp	x23, x9
     458:	str	q0, [x8]
     45c:	add	x8, x8, #0x10
     460:	b.ne	450 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x164>  // b.any
     464:	add	x20, x8, #0x10
     468:	cbz	x21, 474 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x188>
     46c:	mov	x0, x21
     470:	bl	0 <_ZdlPv>
     474:	add	x8, x22, x24, lsl #4
     478:	stp	x22, x20, [x19, #104]
     47c:	str	x8, [x19, #120]
     480:	ldp	x20, x19, [sp, #64]
     484:	ldp	x22, x21, [sp, #48]
     488:	ldp	x24, x23, [sp, #32]
     48c:	ldr	x25, [sp, #16]
     490:	ldp	x29, x30, [sp], #80
     494:	ret
     498:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     49c:	add	x0, x0, #0x0
     4a0:	bl	0 <_ZSt20__throw_length_errorPKc>

00000000000004a4 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_>:
     4a4:	stp	x29, x30, [sp, #-80]!
     4a8:	str	x25, [sp, #16]
     4ac:	stp	x24, x23, [sp, #32]
     4b0:	stp	x22, x21, [sp, #48]
     4b4:	stp	x20, x19, [sp, #64]
     4b8:	mov	x29, sp
     4bc:	ldr	x25, [x1, #8]
     4c0:	mov	x20, x0
     4c4:	mov	x19, x4
     4c8:	mov	x21, x3
     4cc:	add	x0, x25, #0x10
     4d0:	mov	x22, x2
     4d4:	mov	x23, x1
     4d8:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     4dc:	ldr	x8, [x25]
     4e0:	mov	w24, w0
     4e4:	ldrb	w9, [x8, #324]
     4e8:	cbnz	w9, 4f4 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x50>
     4ec:	ldrb	w8, [x8, #325]
     4f0:	cbz	w8, 524 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x80>
     4f4:	ldr	x8, [x23, #8]
     4f8:	ldr	x0, [x20, #8]
     4fc:	ldr	w1, [x8, #796]
     500:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     504:	ldr	w8, [x0, #12]
     508:	ldr	w9, [x0, #20]
     50c:	ldr	w10, [x0, #32]
     510:	cmp	w8, w9
     514:	cset	w8, ne  // ne = any
     518:	cmp	w10, #0x0
     51c:	cset	w9, ne  // ne = any
     520:	and	w8, w8, w9
     524:	ldr	x0, [x20, #24]
     528:	ldr	x1, [x25, #800]
     52c:	and	w9, w24, #0x1
     530:	orr	w24, w8, w9
     534:	bl	0 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm>
     538:	mov	x0, x20
     53c:	mov	x1, x23
     540:	mov	x2, x22
     544:	bl	2ec <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE>
     548:	cbz	w24, 57c <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xd8>
     54c:	mov	x0, x20
     550:	mov	x1, x21
     554:	bl	594 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>
     558:	tbz	w0, #0, 57c <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xd8>
     55c:	mov	x0, x20
     560:	mov	x1, x19
     564:	ldp	x20, x19, [sp, #64]
     568:	ldp	x22, x21, [sp, #48]
     56c:	ldp	x24, x23, [sp, #32]
     570:	ldr	x25, [sp, #16]
     574:	ldp	x29, x30, [sp], #80
     578:	b	914 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>
     57c:	ldp	x20, x19, [sp, #64]
     580:	ldp	x22, x21, [sp, #48]
     584:	ldp	x24, x23, [sp, #32]
     588:	ldr	x25, [sp, #16]
     58c:	ldp	x29, x30, [sp], #80
     590:	ret

0000000000000594 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>:
     594:	sub	sp, sp, #0x80
     598:	stp	x29, x30, [sp, #32]
     59c:	stp	x28, x27, [sp, #48]
     5a0:	stp	x26, x25, [sp, #64]
     5a4:	stp	x24, x23, [sp, #80]
     5a8:	stp	x22, x21, [sp, #96]
     5ac:	stp	x20, x19, [sp, #112]
     5b0:	add	x29, sp, #0x20
     5b4:	mov	x8, x0
     5b8:	ldr	x28, [x8, #32]!
     5bc:	mov	x19, x0
     5c0:	ldr	x27, [x8, #8]
     5c4:	str	x8, [sp, #8]
     5c8:	cmp	x27, x28
     5cc:	b.eq	880 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2ec>  // b.none
     5d0:	adrp	x26, 0 <_ZN4llvm9DebugFlagE>
     5d4:	ldr	x26, [x26]
     5d8:	mov	x21, x1
     5dc:	mov	w23, wzr
     5e0:	add	x22, x19, #0x40
     5e4:	add	x24, x19, #0x48
     5e8:	stur	x22, [x29, #-8]
     5ec:	str	x24, [sp, #16]
     5f0:	b	600 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x6c>
     5f4:	add	x28, x28, #0x10
     5f8:	cmp	x27, x28
     5fc:	b.eq	878 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2e4>  // b.none
     600:	ldr	x25, [x28, #8]
     604:	cbz	x25, 878 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2e4>
     608:	ldr	w8, [x25, #784]
     60c:	cmp	w8, #0x1
     610:	b.ne	620 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x8c>  // b.any
     614:	mov	x0, x25
     618:	bl	0 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
     61c:	tbz	w0, #0, 5f4 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x60>
     620:	ldr	x8, [x25]
     624:	ldrb	w9, [x8, #324]
     628:	cbnz	w9, 634 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xa0>
     62c:	ldrb	w8, [x8, #325]
     630:	cbz	w8, 658 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xc4>
     634:	ldr	x8, [x28, #8]
     638:	ldr	x0, [x19, #8]
     63c:	ldr	w1, [x8, #796]
     640:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     644:	ldp	w8, w9, [x0, #4]
     648:	ldr	w10, [x0]
     64c:	add	w8, w9, w8
     650:	cmp	w10, w8
     654:	b.hi	5f4 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x60>  // b.pmore
     658:	ldrb	w8, [x26]
     65c:	cbz	w8, 720 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x18c>
     660:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     664:	add	x0, x0, #0x0
     668:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     66c:	tbz	w0, #0, 720 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x18c>
     670:	bl	0 <_ZN4llvm4dbgsEv>
     674:	ldp	x9, x8, [x0, #16]
     678:	mov	x25, x0
     67c:	sub	x9, x9, x8
     680:	cmp	x9, #0x19
     684:	b.hi	6a4 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x110>  // b.pmore
     688:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     68c:	mov	w2, #0x1a                  	// #26
     690:	mov	x0, x25
     694:	add	x1, x1, #0x0
     698:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     69c:	mov	x25, x0
     6a0:	b	6c8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x134>
     6a4:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     6a8:	add	x9, x9, #0x0
     6ac:	ldur	q0, [x9, #10]
     6b0:	ldr	q1, [x9]
     6b4:	stur	q0, [x8, #10]
     6b8:	str	q1, [x8]
     6bc:	ldr	x8, [x25, #24]
     6c0:	add	x8, x8, #0x1a
     6c4:	str	x8, [x25, #24]
     6c8:	ldr	w1, [x28]
     6cc:	mov	x0, x25
     6d0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     6d4:	ldp	x9, x8, [x25, #16]
     6d8:	sub	x9, x9, x8
     6dc:	cmp	x9, #0x1d
     6e0:	b.hi	6fc <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x168>  // b.pmore
     6e4:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     6e8:	mov	w2, #0x1e                  	// #30
     6ec:	mov	x0, x25
     6f0:	add	x1, x1, #0x0
     6f4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     6f8:	b	720 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x18c>
     6fc:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     700:	add	x9, x9, #0x0
     704:	ldur	q0, [x9, #14]
     708:	ldr	q1, [x9]
     70c:	stur	q0, [x8, #14]
     710:	str	q1, [x8]
     714:	ldr	x8, [x25, #24]
     718:	add	x8, x8, #0x1e
     71c:	str	x8, [x25, #24]
     720:	ldp	w8, w9, [x21, #8]
     724:	cmp	w8, w9
     728:	b.cs	864 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2d0>  // b.hs, b.nlast
     72c:	ldr	x9, [x21]
     730:	ldr	q0, [x28]
     734:	str	q0, [x9, w8, uxtw #4]
     738:	ldp	w8, w9, [x21, #8]
     73c:	cmp	w8, w9
     740:	b.cs	8e8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x354>  // b.hs, b.nlast
     744:	add	w8, w8, #0x1
     748:	str	w8, [x21, #8]
     74c:	ldr	x20, [x22]
     750:	ldr	x8, [x24]
     754:	cmp	x20, x8
     758:	b.eq	774 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1e0>  // b.none
     75c:	ldr	q0, [x28]
     760:	mov	x9, x22
     764:	str	q0, [x20]
     768:	ldr	x8, [x22]
     76c:	add	x8, x8, #0x10
     770:	b	82c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x298>
     774:	ldr	x25, [x19, #56]
     778:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
     77c:	sub	x8, x20, x25
     780:	cmp	x8, x9
     784:	b.eq	908 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x374>  // b.none
     788:	asr	x24, x8, #4
     78c:	cmp	x8, #0x0
     790:	csinc	x8, x24, xzr, ne  // ne = any
     794:	adds	x8, x8, x24
     798:	lsr	x10, x8, #59
     79c:	cset	w9, cs  // cs = hs, nlast
     7a0:	cmp	x10, #0x0
     7a4:	cset	w10, ne  // ne = any
     7a8:	orr	w9, w9, w10
     7ac:	cmp	w9, #0x0
     7b0:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
     7b4:	csel	x22, x9, x8, ne  // ne = any
     7b8:	cbz	x22, 7cc <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x238>
     7bc:	lsl	x0, x22, #4
     7c0:	bl	0 <_Znwm>
     7c4:	mov	x26, x0
     7c8:	b	7d0 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x23c>
     7cc:	mov	x26, xzr
     7d0:	ldr	q0, [x28]
     7d4:	cmp	x20, x25
     7d8:	mov	x8, x26
     7dc:	str	q0, [x26, x24, lsl #4]
     7e0:	b.eq	800 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x26c>  // b.none
     7e4:	mov	x8, x26
     7e8:	mov	x9, x25
     7ec:	ldr	q0, [x9], #16
     7f0:	cmp	x20, x9
     7f4:	str	q0, [x8]
     7f8:	add	x8, x8, #0x10
     7fc:	b.ne	7ec <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x258>  // b.any
     800:	add	x20, x8, #0x10
     804:	cbz	x25, 810 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x27c>
     808:	mov	x0, x25
     80c:	bl	0 <_ZdlPv>
     810:	stp	x26, x20, [x19, #56]
     814:	add	x8, x26, x22, lsl #4
     818:	ldr	x24, [sp, #16]
     81c:	adrp	x26, 0 <_ZN4llvm9DebugFlagE>
     820:	ldur	x22, [x29, #-8]
     824:	ldr	x26, [x26]
     828:	mov	x9, x24
     82c:	add	w23, w23, #0x1
     830:	str	x8, [x9]
     834:	str	xzr, [x28, #8]
     838:	sub	x8, x27, w23, uxtw #4
     83c:	ldr	w9, [x8]
     840:	ldr	w10, [x28]
     844:	str	w9, [x28]
     848:	ldr	x9, [x8, #8]
     84c:	str	x9, [x28, #8]
     850:	str	w10, [x8]
     854:	str	xzr, [x8, #8]
     858:	cmp	x27, x28
     85c:	b.ne	600 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x6c>  // b.any
     860:	b	878 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2e4>
     864:	mov	x0, x21
     868:	mov	x1, xzr
     86c:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     870:	ldr	w8, [x21, #8]
     874:	b	72c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x198>
     878:	ldp	x28, x27, [x19, #32]
     87c:	b	884 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2f0>
     880:	mov	w23, wzr
     884:	sub	x8, x27, x28
     888:	asr	x9, x8, #4
     88c:	mov	w20, w23
     890:	subs	x8, x9, x20
     894:	b.cs	8a8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x314>  // b.hs, b.nlast
     898:	ldr	x0, [sp, #8]
     89c:	neg	x1, x20
     8a0:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     8a4:	b	8c0 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x32c>
     8a8:	cmp	x8, x9
     8ac:	b.cs	8c0 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x32c>  // b.hs, b.nlast
     8b0:	add	x8, x28, x8, lsl #4
     8b4:	cmp	x8, x27
     8b8:	b.eq	8c0 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x32c>  // b.none
     8bc:	str	x8, [x19, #40]
     8c0:	cmp	w20, #0x0
     8c4:	ldp	x20, x19, [sp, #112]
     8c8:	ldp	x22, x21, [sp, #96]
     8cc:	ldp	x24, x23, [sp, #80]
     8d0:	ldp	x26, x25, [sp, #64]
     8d4:	ldp	x28, x27, [sp, #48]
     8d8:	ldp	x29, x30, [sp, #32]
     8dc:	cset	w0, ne  // ne = any
     8e0:	add	sp, sp, #0x80
     8e4:	ret
     8e8:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     8ec:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     8f0:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     8f4:	add	x0, x0, #0x0
     8f8:	add	x1, x1, #0x0
     8fc:	add	x3, x3, #0x0
     900:	mov	w2, #0x43                  	// #67
     904:	bl	0 <__assert_fail>
     908:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     90c:	add	x0, x0, #0x0
     910:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000000914 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>:
     914:	sub	sp, sp, #0x80
     918:	stp	x29, x30, [sp, #32]
     91c:	stp	x28, x27, [sp, #48]
     920:	stp	x26, x25, [sp, #64]
     924:	stp	x24, x23, [sp, #80]
     928:	stp	x22, x21, [sp, #96]
     92c:	stp	x20, x19, [sp, #112]
     930:	add	x29, sp, #0x20
     934:	mov	x8, x0
     938:	ldr	x28, [x8, #56]!
     93c:	mov	x19, x0
     940:	ldr	x27, [x8, #8]
     944:	str	x8, [sp, #8]
     948:	cmp	x27, x28
     94c:	b.eq	bfc <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2e8>  // b.none
     950:	adrp	x26, 0 <_ZN4llvm9DebugFlagE>
     954:	ldr	x26, [x26]
     958:	mov	x21, x1
     95c:	mov	w23, wzr
     960:	add	x22, x19, #0x58
     964:	add	x24, x19, #0x60
     968:	stur	x22, [x29, #-8]
     96c:	str	x24, [sp, #16]
     970:	b	980 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x6c>
     974:	add	x28, x28, #0x10
     978:	cmp	x27, x28
     97c:	b.eq	bf4 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2e0>  // b.none
     980:	ldr	x25, [x28, #8]
     984:	cbz	x25, bf4 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2e0>
     988:	ldr	w8, [x25, #784]
     98c:	cmp	w8, #0x3
     990:	b.eq	9a0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x8c>  // b.none
     994:	mov	x0, x25
     998:	bl	0 <_ZN4llvm3mca11Instruction13updatePendingEv>
     99c:	tbz	w0, #0, 974 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x60>
     9a0:	ldr	x8, [x25]
     9a4:	ldrb	w9, [x8, #324]
     9a8:	cbnz	w9, 9b4 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0xa0>
     9ac:	ldrb	w8, [x8, #325]
     9b0:	cbz	w8, 9d4 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0xc0>
     9b4:	ldr	x8, [x28, #8]
     9b8:	ldr	x0, [x19, #8]
     9bc:	ldr	w1, [x8, #796]
     9c0:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     9c4:	ldr	w8, [x0, #8]
     9c8:	ldr	w9, [x0]
     9cc:	cmp	w8, w9
     9d0:	b.ne	974 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x60>  // b.any
     9d4:	ldrb	w8, [x26]
     9d8:	cbz	w8, a9c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x188>
     9dc:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     9e0:	add	x0, x0, #0x0
     9e4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     9e8:	tbz	w0, #0, a9c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x188>
     9ec:	bl	0 <_ZN4llvm4dbgsEv>
     9f0:	ldp	x9, x8, [x0, #16]
     9f4:	mov	x25, x0
     9f8:	sub	x9, x9, x8
     9fc:	cmp	x9, #0x19
     a00:	b.hi	a20 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x10c>  // b.pmore
     a04:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     a08:	mov	w2, #0x1a                  	// #26
     a0c:	mov	x0, x25
     a10:	add	x1, x1, #0x0
     a14:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a18:	mov	x25, x0
     a1c:	b	a44 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x130>
     a20:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     a24:	add	x9, x9, #0x0
     a28:	ldur	q0, [x9, #10]
     a2c:	ldr	q1, [x9]
     a30:	stur	q0, [x8, #10]
     a34:	str	q1, [x8]
     a38:	ldr	x8, [x25, #24]
     a3c:	add	x8, x8, #0x1a
     a40:	str	x8, [x25, #24]
     a44:	ldr	w1, [x28]
     a48:	mov	x0, x25
     a4c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     a50:	ldp	x9, x8, [x25, #16]
     a54:	sub	x9, x9, x8
     a58:	cmp	x9, #0x1b
     a5c:	b.hi	a78 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x164>  // b.pmore
     a60:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     a64:	mov	w2, #0x1c                  	// #28
     a68:	mov	x0, x25
     a6c:	add	x1, x1, #0x0
     a70:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a74:	b	a9c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x188>
     a78:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     a7c:	add	x9, x9, #0x0
     a80:	ldur	q0, [x9, #12]
     a84:	ldr	q1, [x9]
     a88:	stur	q0, [x8, #12]
     a8c:	str	q1, [x8]
     a90:	ldr	x8, [x25, #24]
     a94:	add	x8, x8, #0x1c
     a98:	str	x8, [x25, #24]
     a9c:	ldp	w8, w9, [x21, #8]
     aa0:	cmp	w8, w9
     aa4:	b.cs	be0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2cc>  // b.hs, b.nlast
     aa8:	ldr	x9, [x21]
     aac:	ldr	q0, [x28]
     ab0:	str	q0, [x9, w8, uxtw #4]
     ab4:	ldp	w8, w9, [x21, #8]
     ab8:	cmp	w8, w9
     abc:	b.cs	c64 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x350>  // b.hs, b.nlast
     ac0:	add	w8, w8, #0x1
     ac4:	str	w8, [x21, #8]
     ac8:	ldr	x20, [x22]
     acc:	ldr	x8, [x24]
     ad0:	cmp	x20, x8
     ad4:	b.eq	af0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1dc>  // b.none
     ad8:	ldr	q0, [x28]
     adc:	mov	x9, x22
     ae0:	str	q0, [x20]
     ae4:	ldr	x8, [x22]
     ae8:	add	x8, x8, #0x10
     aec:	b	ba8 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x294>
     af0:	ldr	x25, [x19, #80]
     af4:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
     af8:	sub	x8, x20, x25
     afc:	cmp	x8, x9
     b00:	b.eq	c84 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x370>  // b.none
     b04:	asr	x24, x8, #4
     b08:	cmp	x8, #0x0
     b0c:	csinc	x8, x24, xzr, ne  // ne = any
     b10:	adds	x8, x8, x24
     b14:	lsr	x10, x8, #59
     b18:	cset	w9, cs  // cs = hs, nlast
     b1c:	cmp	x10, #0x0
     b20:	cset	w10, ne  // ne = any
     b24:	orr	w9, w9, w10
     b28:	cmp	w9, #0x0
     b2c:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
     b30:	csel	x22, x9, x8, ne  // ne = any
     b34:	cbz	x22, b48 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x234>
     b38:	lsl	x0, x22, #4
     b3c:	bl	0 <_Znwm>
     b40:	mov	x26, x0
     b44:	b	b4c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x238>
     b48:	mov	x26, xzr
     b4c:	ldr	q0, [x28]
     b50:	cmp	x20, x25
     b54:	mov	x8, x26
     b58:	str	q0, [x26, x24, lsl #4]
     b5c:	b.eq	b7c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x268>  // b.none
     b60:	mov	x8, x26
     b64:	mov	x9, x25
     b68:	ldr	q0, [x9], #16
     b6c:	cmp	x20, x9
     b70:	str	q0, [x8]
     b74:	add	x8, x8, #0x10
     b78:	b.ne	b68 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x254>  // b.any
     b7c:	add	x20, x8, #0x10
     b80:	cbz	x25, b8c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x278>
     b84:	mov	x0, x25
     b88:	bl	0 <_ZdlPv>
     b8c:	stp	x26, x20, [x19, #80]
     b90:	add	x8, x26, x22, lsl #4
     b94:	ldr	x24, [sp, #16]
     b98:	adrp	x26, 0 <_ZN4llvm9DebugFlagE>
     b9c:	ldur	x22, [x29, #-8]
     ba0:	ldr	x26, [x26]
     ba4:	mov	x9, x24
     ba8:	add	w23, w23, #0x1
     bac:	str	x8, [x9]
     bb0:	str	xzr, [x28, #8]
     bb4:	sub	x8, x27, w23, uxtw #4
     bb8:	ldr	w9, [x8]
     bbc:	ldr	w10, [x28]
     bc0:	str	w9, [x28]
     bc4:	ldr	x9, [x8, #8]
     bc8:	str	x9, [x28, #8]
     bcc:	str	w10, [x8]
     bd0:	str	xzr, [x8, #8]
     bd4:	cmp	x27, x28
     bd8:	b.ne	980 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x6c>  // b.any
     bdc:	b	bf4 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2e0>
     be0:	mov	x0, x21
     be4:	mov	x1, xzr
     be8:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     bec:	ldr	w8, [x21, #8]
     bf0:	b	aa8 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x194>
     bf4:	ldp	x28, x27, [x19, #56]
     bf8:	b	c00 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2ec>
     bfc:	mov	w23, wzr
     c00:	sub	x8, x27, x28
     c04:	asr	x9, x8, #4
     c08:	mov	w20, w23
     c0c:	subs	x8, x9, x20
     c10:	b.cs	c24 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x310>  // b.hs, b.nlast
     c14:	ldr	x0, [sp, #8]
     c18:	neg	x1, x20
     c1c:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     c20:	b	c3c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x328>
     c24:	cmp	x8, x9
     c28:	b.cs	c3c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x328>  // b.hs, b.nlast
     c2c:	add	x8, x28, x8, lsl #4
     c30:	cmp	x8, x27
     c34:	b.eq	c3c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x328>  // b.none
     c38:	str	x8, [x19, #64]
     c3c:	cmp	w20, #0x0
     c40:	ldp	x20, x19, [sp, #112]
     c44:	ldp	x22, x21, [sp, #96]
     c48:	ldp	x24, x23, [sp, #80]
     c4c:	ldp	x26, x25, [sp, #64]
     c50:	ldp	x28, x27, [sp, #48]
     c54:	ldp	x29, x30, [sp, #32]
     c58:	cset	w0, ne  // ne = any
     c5c:	add	sp, sp, #0x80
     c60:	ret
     c64:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     c68:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     c6c:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     c70:	add	x0, x0, #0x0
     c74:	add	x1, x1, #0x0
     c78:	add	x3, x3, #0x0
     c7c:	mov	w2, #0x43                  	// #67
     c80:	bl	0 <__assert_fail>
     c84:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     c88:	add	x0, x0, #0x0
     c8c:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000000c90 <_ZN4llvm3mca9Scheduler6selectEv>:
     c90:	stp	x29, x30, [sp, #-64]!
     c94:	stp	x24, x23, [sp, #16]
     c98:	stp	x22, x21, [sp, #32]
     c9c:	stp	x20, x19, [sp, #48]
     ca0:	mov	x29, sp
     ca4:	ldp	x21, x8, [x0, #80]
     ca8:	mov	x19, x0
     cac:	sub	x9, x8, x21
     cb0:	lsr	x20, x9, #4
     cb4:	cbz	w20, d54 <_ZN4llvm3mca9Scheduler6selectEv+0xc4>
     cb8:	ubfx	x9, x9, #4, #32
     cbc:	mov	x22, xzr
     cc0:	sub	x23, x9, #0x1
     cc4:	mov	w24, #0x8                   	// #8
     cc8:	mov	w9, w20
     ccc:	sub	x8, x8, x21
     cd0:	cmp	x9, x8, asr #4
     cd4:	b.eq	cf8 <_ZN4llvm3mca9Scheduler6selectEv+0x68>  // b.none
     cd8:	ldr	x0, [x19, #16]
     cdc:	add	x10, x21, x24
     ce0:	sub	x1, x10, #0x8
     ce4:	add	x2, x21, x9, lsl #4
     ce8:	ldr	x8, [x0]
     cec:	ldr	x8, [x8, #16]
     cf0:	blr	x8
     cf4:	tbz	w0, #0, d24 <_ZN4llvm3mca9Scheduler6selectEv+0x94>
     cf8:	ldr	x21, [x21, x24]
     cfc:	ldr	x0, [x19, #24]
     d00:	ldr	x1, [x21]
     d04:	bl	0 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>
     d08:	cbz	x0, d10 <_ZN4llvm3mca9Scheduler6selectEv+0x80>
     d0c:	str	x0, [x21, #832]
     d10:	ldr	x8, [x19, #128]
     d14:	cmp	x0, #0x0
     d18:	csel	w20, w20, w22, ne  // ne = any
     d1c:	orr	x8, x8, x0
     d20:	str	x8, [x19, #128]
     d24:	cmp	x23, x22
     d28:	b.eq	d4c <_ZN4llvm3mca9Scheduler6selectEv+0xbc>  // b.none
     d2c:	ldp	x21, x8, [x19, #80]
     d30:	add	x22, x22, #0x1
     d34:	add	x24, x24, #0x10
     d38:	mov	w9, w20
     d3c:	sub	x8, x8, x21
     d40:	cmp	x9, x8, asr #4
     d44:	b.ne	cd8 <_ZN4llvm3mca9Scheduler6selectEv+0x48>  // b.any
     d48:	b	cf8 <_ZN4llvm3mca9Scheduler6selectEv+0x68>
     d4c:	ldp	x21, x8, [x19, #80]
     d50:	sub	x9, x8, x21
     d54:	mov	w10, w20
     d58:	asr	x9, x9, #4
     d5c:	cmp	x9, x10
     d60:	b.ne	d74 <_ZN4llvm3mca9Scheduler6selectEv+0xe4>  // b.any
     d64:	mov	x8, xzr
     d68:	mov	x9, xzr
     d6c:	mov	x1, xzr
     d70:	b	da8 <_ZN4llvm3mca9Scheduler6selectEv+0x118>
     d74:	add	x9, x21, x9, lsl #4
     d78:	ldur	w11, [x9, #-16]
     d7c:	add	x10, x21, x10, lsl #4
     d80:	ldp	x12, x1, [x10]
     d84:	sub	x13, x8, #0x10
     d88:	str	w11, [x10]
     d8c:	ldur	x11, [x9, #-8]
     d90:	and	x8, x12, #0xffffffff00000000
     d94:	str	x11, [x10, #8]
     d98:	stur	w12, [x9, #-16]
     d9c:	stur	x1, [x9, #-8]
     da0:	and	x9, x12, #0xffffffff
     da4:	str	x13, [x19, #88]
     da8:	ldp	x20, x19, [sp, #48]
     dac:	ldp	x22, x21, [sp, #32]
     db0:	ldp	x24, x23, [sp, #16]
     db4:	orr	x0, x9, x8
     db8:	ldp	x29, x30, [sp], #64
     dbc:	ret

0000000000000dc0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE>:
     dc0:	stp	x29, x30, [sp, #-96]!
     dc4:	stp	x28, x27, [sp, #16]
     dc8:	stp	x26, x25, [sp, #32]
     dcc:	stp	x24, x23, [sp, #48]
     dd0:	stp	x22, x21, [sp, #64]
     dd4:	stp	x20, x19, [sp, #80]
     dd8:	mov	x29, sp
     ddc:	mov	x20, x0
     de0:	ldr	x21, [x20, #104]!
     de4:	mov	x19, x0
     de8:	ldr	x27, [x20, #8]
     dec:	cmp	x27, x21
     df0:	b.eq	f8c <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1cc>  // b.none
     df4:	adrp	x24, 0 <_ZN4llvm9DebugFlagE>
     df8:	ldr	x24, [x24]
     dfc:	adrp	x23, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     e00:	adrp	x25, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     e04:	mov	x22, x1
     e08:	mov	w28, wzr
     e0c:	add	x23, x23, #0x0
     e10:	add	x25, x25, #0x0
     e14:	b	e40 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x80>
     e18:	ldur	x9, [x25, #13]
     e1c:	ldr	q0, [x25]
     e20:	stur	x9, [x8, #13]
     e24:	str	q0, [x8]
     e28:	ldr	x8, [x26, #24]
     e2c:	add	x8, x8, #0x15
     e30:	str	x8, [x26, #24]
     e34:	add	x21, x21, #0x10
     e38:	cmp	x27, x21
     e3c:	b.eq	f84 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1c4>  // b.none
     e40:	ldr	x8, [x21, #8]
     e44:	cbz	x8, f84 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1c4>
     e48:	ldr	w8, [x8, #784]
     e4c:	cmp	w8, #0x5
     e50:	b.ne	ec8 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x108>  // b.any
     e54:	ldr	x0, [x19, #8]
     e58:	mov	x1, x21
     e5c:	ldr	x8, [x0]
     e60:	ldr	x8, [x8, #32]
     e64:	blr	x8
     e68:	ldp	w8, w9, [x22, #8]
     e6c:	cmp	w8, w9
     e70:	b.cs	f70 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1b0>  // b.hs, b.nlast
     e74:	ldr	x9, [x22]
     e78:	ldr	q0, [x21]
     e7c:	str	q0, [x9, w8, uxtw #4]
     e80:	ldp	w8, w9, [x22, #8]
     e84:	cmp	w8, w9
     e88:	b.cs	ffc <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x23c>  // b.hs, b.nlast
     e8c:	add	w8, w8, #0x1
     e90:	add	w28, w28, #0x1
     e94:	str	w8, [x22, #8]
     e98:	str	xzr, [x21, #8]
     e9c:	sub	x8, x27, w28, uxtw #4
     ea0:	ldr	w9, [x8]
     ea4:	ldr	w10, [x21]
     ea8:	str	w9, [x21]
     eac:	ldr	x9, [x8, #8]
     eb0:	str	x9, [x21, #8]
     eb4:	str	w10, [x8]
     eb8:	str	xzr, [x8, #8]
     ebc:	cmp	x27, x21
     ec0:	b.ne	e40 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x80>  // b.any
     ec4:	b	f84 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1c4>
     ec8:	ldrb	w8, [x24]
     ecc:	cbz	w8, e34 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x74>
     ed0:	mov	x0, x23
     ed4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     ed8:	tbz	w0, #0, e34 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x74>
     edc:	bl	0 <_ZN4llvm4dbgsEv>
     ee0:	ldp	x9, x8, [x0, #16]
     ee4:	mov	x26, x0
     ee8:	sub	x9, x9, x8
     eec:	cmp	x9, #0x19
     ef0:	b.hi	f10 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x150>  // b.pmore
     ef4:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     ef8:	mov	w2, #0x1a                  	// #26
     efc:	mov	x0, x26
     f00:	add	x1, x1, #0x0
     f04:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     f08:	mov	x26, x0
     f0c:	b	f34 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x174>
     f10:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     f14:	add	x9, x9, #0x0
     f18:	ldur	q0, [x9, #10]
     f1c:	ldr	q1, [x9]
     f20:	stur	q0, [x8, #10]
     f24:	str	q1, [x8]
     f28:	ldr	x8, [x26, #24]
     f2c:	add	x8, x8, #0x1a
     f30:	str	x8, [x26, #24]
     f34:	ldr	w1, [x21]
     f38:	mov	x0, x26
     f3c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     f40:	ldp	x9, x8, [x26, #16]
     f44:	sub	x9, x9, x8
     f48:	cmp	x9, #0x14
     f4c:	b.hi	e18 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x58>  // b.pmore
     f50:	mov	w2, #0x15                  	// #21
     f54:	mov	x0, x26
     f58:	mov	x1, x25
     f5c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     f60:	add	x21, x21, #0x10
     f64:	cmp	x27, x21
     f68:	b.ne	e40 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x80>  // b.any
     f6c:	b	f84 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1c4>
     f70:	mov	x0, x22
     f74:	mov	x1, xzr
     f78:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     f7c:	ldr	w8, [x22, #8]
     f80:	b	e74 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xb4>
     f84:	ldp	x21, x27, [x19, #104]
     f88:	b	f90 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1d0>
     f8c:	mov	w28, wzr
     f90:	sub	x8, x27, x21
     f94:	asr	x10, x8, #4
     f98:	mov	w8, w28
     f9c:	subs	x9, x10, x8
     fa0:	b.cs	fc8 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x208>  // b.hs, b.nlast
     fa4:	mov	x0, x20
     fa8:	ldp	x20, x19, [sp, #80]
     fac:	ldp	x22, x21, [sp, #64]
     fb0:	ldp	x24, x23, [sp, #48]
     fb4:	ldp	x26, x25, [sp, #32]
     fb8:	ldp	x28, x27, [sp, #16]
     fbc:	neg	x1, x8
     fc0:	ldp	x29, x30, [sp], #96
     fc4:	b	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     fc8:	cmp	x9, x10
     fcc:	b.cs	fe0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x220>  // b.hs, b.nlast
     fd0:	add	x8, x21, x9, lsl #4
     fd4:	cmp	x8, x27
     fd8:	b.eq	fe0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x220>  // b.none
     fdc:	str	x8, [x19, #112]
     fe0:	ldp	x20, x19, [sp, #80]
     fe4:	ldp	x22, x21, [sp, #64]
     fe8:	ldp	x24, x23, [sp, #48]
     fec:	ldp	x26, x25, [sp, #32]
     ff0:	ldp	x28, x27, [sp, #16]
     ff4:	ldp	x29, x30, [sp], #96
     ff8:	ret
     ffc:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1000:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1004:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1008:	add	x0, x0, #0x0
    100c:	add	x1, x1, #0x0
    1010:	add	x3, x3, #0x0
    1014:	mov	w2, #0x43                  	// #67
    1018:	bl	0 <__assert_fail>

000000000000101c <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE>:
    101c:	stp	x29, x30, [sp, #-32]!
    1020:	str	x19, [sp, #16]
    1024:	mov	x29, sp
    1028:	ldr	x9, [x1]
    102c:	ldr	w10, [x1, #8]
    1030:	ldp	x2, x3, [x0, #80]
    1034:	mov	x8, x1
    1038:	mov	x19, x0
    103c:	add	x1, x9, x10, lsl #4
    1040:	mov	x0, x8
    1044:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1048:	ldr	x0, [x19, #128]
    104c:	ldr	x19, [sp, #16]
    1050:	ldp	x29, x30, [sp], #32
    1054:	ret

0000000000001058 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_>:
    1058:	stp	x29, x30, [sp, #-64]!
    105c:	stp	x24, x23, [sp, #16]
    1060:	stp	x22, x21, [sp, #32]
    1064:	stp	x20, x19, [sp, #48]
    1068:	mov	x29, sp
    106c:	ldr	w8, [x0, #136]
    1070:	ldp	x22, x9, [x0, #56]
    1074:	sub	x23, x9, x8, lsl #4
    1078:	cmp	x22, x23
    107c:	b.eq	1180 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x128>  // b.none
    1080:	mov	x19, x2
    1084:	mov	x20, x0
    1088:	mov	x21, x1
    108c:	b	109c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x44>
    1090:	add	x22, x22, #0x10
    1094:	cmp	x23, x22
    1098:	b.eq	1180 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x128>  // b.none
    109c:	ldr	x24, [x22, #8]
    10a0:	ldr	x0, [x20, #24]
    10a4:	ldr	x1, [x24]
    10a8:	bl	0 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>
    10ac:	cbnz	x0, 1090 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x38>
    10b0:	ldr	x8, [x24]
    10b4:	ldrb	w9, [x8, #324]
    10b8:	cbnz	w9, 10c4 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x6c>
    10bc:	ldrb	w8, [x8, #325]
    10c0:	cbz	w8, 111c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0xc4>
    10c4:	ldr	x8, [x22, #8]
    10c8:	ldr	x0, [x20, #8]
    10cc:	ldr	w1, [x8, #796]
    10d0:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    10d4:	ldr	w8, [x0, #4]
    10d8:	cbz	w8, 111c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0xc4>
    10dc:	ldr	w9, [x0, #8]
    10e0:	ldr	w10, [x0]
    10e4:	add	w8, w9, w8
    10e8:	cmp	w8, w10
    10ec:	b.ne	111c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0xc4>  // b.any
    10f0:	ldp	w8, w9, [x19, #8]
    10f4:	cmp	w8, w9
    10f8:	b.cs	116c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x114>  // b.hs, b.nlast
    10fc:	ldr	x9, [x19]
    1100:	ldr	q0, [x22]
    1104:	str	q0, [x9, w8, uxtw #4]
    1108:	ldp	w8, w9, [x19, #8]
    110c:	cmp	w8, w9
    1110:	b.cs	1194 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x13c>  // b.hs, b.nlast
    1114:	add	w8, w8, #0x1
    1118:	str	w8, [x19, #8]
    111c:	ldr	w8, [x24, #784]
    1120:	cmp	w8, #0x2
    1124:	b.ne	1090 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x38>  // b.any
    1128:	ldp	w8, w9, [x21, #8]
    112c:	cmp	w8, w9
    1130:	b.cs	1158 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x100>  // b.hs, b.nlast
    1134:	ldr	x9, [x21]
    1138:	ldr	q0, [x22]
    113c:	str	q0, [x9, w8, uxtw #4]
    1140:	ldp	w8, w9, [x21, #8]
    1144:	cmp	w8, w9
    1148:	b.cs	1194 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x13c>  // b.hs, b.nlast
    114c:	add	w8, w8, #0x1
    1150:	str	w8, [x21, #8]
    1154:	b	1090 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x38>
    1158:	mov	x0, x21
    115c:	mov	x1, xzr
    1160:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1164:	ldr	w8, [x21, #8]
    1168:	b	1134 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0xdc>
    116c:	mov	x0, x19
    1170:	mov	x1, xzr
    1174:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1178:	ldr	w8, [x19, #8]
    117c:	b	10fc <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0xa4>
    1180:	ldp	x20, x19, [sp, #48]
    1184:	ldp	x22, x21, [sp, #32]
    1188:	ldp	x24, x23, [sp, #16]
    118c:	ldp	x29, x30, [sp], #64
    1190:	ret
    1194:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1198:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    119c:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    11a0:	add	x0, x0, #0x0
    11a4:	add	x1, x1, #0x0
    11a8:	add	x3, x3, #0x0
    11ac:	mov	w2, #0x43                  	// #67
    11b0:	bl	0 <__assert_fail>

00000000000011b4 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_>:
    11b4:	stp	x29, x30, [sp, #-64]!
    11b8:	stp	x24, x23, [sp, #16]
    11bc:	stp	x22, x21, [sp, #32]
    11c0:	stp	x20, x19, [sp, #48]
    11c4:	mov	x29, sp
    11c8:	mov	x19, x0
    11cc:	ldr	x0, [x0, #8]
    11d0:	mov	x20, x4
    11d4:	mov	x21, x3
    11d8:	mov	x22, x2
    11dc:	ldr	x8, [x0]
    11e0:	mov	x23, x1
    11e4:	ldr	x8, [x8, #56]
    11e8:	blr	x8
    11ec:	ldr	x0, [x19, #24]
    11f0:	mov	x1, x23
    11f4:	bl	0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE>
    11f8:	ldp	x23, x24, [x19, #104]
    11fc:	cmp	x23, x24
    1200:	b.eq	1218 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x64>  // b.none
    1204:	ldr	x0, [x23, #8]
    1208:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
    120c:	add	x23, x23, #0x10
    1210:	cmp	x24, x23
    1214:	b.ne	1204 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x50>  // b.any
    1218:	mov	x0, x19
    121c:	mov	x1, x22
    1220:	bl	dc0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE>
    1224:	ldp	x22, x23, [x19, #56]
    1228:	cmp	x22, x23
    122c:	b.eq	1244 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x90>  // b.none
    1230:	ldr	x0, [x22, #8]
    1234:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
    1238:	add	x22, x22, #0x10
    123c:	cmp	x23, x22
    1240:	b.ne	1230 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x7c>  // b.any
    1244:	ldp	x22, x23, [x19, #32]
    1248:	cmp	x22, x23
    124c:	b.eq	1264 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0xb0>  // b.none
    1250:	ldr	x0, [x22, #8]
    1254:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
    1258:	add	x22, x22, #0x10
    125c:	cmp	x23, x22
    1260:	b.ne	1250 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x9c>  // b.any
    1264:	mov	x0, x19
    1268:	mov	x1, x21
    126c:	bl	594 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>
    1270:	mov	x0, x19
    1274:	mov	x1, x20
    1278:	bl	914 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>
    127c:	str	wzr, [x19, #136]
    1280:	str	xzr, [x19, #128]
    1284:	ldp	x20, x19, [sp, #48]
    1288:	ldp	x22, x21, [sp, #32]
    128c:	ldp	x24, x23, [sp, #16]
    1290:	ldp	x29, x30, [sp], #64
    1294:	ret

0000000000001298 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE>:
    1298:	ldr	x8, [x1, #8]
    129c:	ldr	x8, [x8]
    12a0:	ldr	w9, [x8, #312]
    12a4:	cbz	w9, 12b8 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE+0x20>
    12a8:	ldrb	w8, [x8, #329]
    12ac:	cmp	w8, #0x0
    12b0:	cset	w0, ne  // ne = any
    12b4:	ret
    12b8:	ldr	w9, [x8, #184]
    12bc:	ldrb	w8, [x8, #329]
    12c0:	cmp	w9, #0x0
    12c4:	cset	w9, eq  // eq = none
    12c8:	cmp	w8, #0x0
    12cc:	cset	w8, ne  // ne = any
    12d0:	orr	w0, w9, w8
    12d4:	ret

00000000000012d8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE>:
    12d8:	stp	x29, x30, [sp, #-80]!
    12dc:	stp	x26, x25, [sp, #16]
    12e0:	stp	x24, x23, [sp, #32]
    12e4:	stp	x22, x21, [sp, #48]
    12e8:	stp	x20, x19, [sp, #64]
    12ec:	mov	x29, sp
    12f0:	ldr	x21, [x1, #8]
    12f4:	mov	x20, x1
    12f8:	mov	x19, x0
    12fc:	ldr	x0, [x0, #24]
    1300:	ldr	x1, [x21, #800]
    1304:	bl	0 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm>
    1308:	ldr	x8, [x21]
    130c:	ldrb	w9, [x8, #324]
    1310:	cbnz	w9, 131c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x44>
    1314:	ldrb	w8, [x8, #325]
    1318:	cbz	w8, 1334 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5c>
    131c:	ldr	x0, [x19, #8]
    1320:	mov	x1, x20
    1324:	ldr	x8, [x0]
    1328:	ldr	x8, [x8, #24]
    132c:	blr	x8
    1330:	str	w0, [x21, #796]
    1334:	ldr	w8, [x21, #784]
    1338:	cmp	w8, #0x1
    133c:	b.eq	1378 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xa0>  // b.none
    1340:	ldr	x9, [x21]
    1344:	ldrb	w10, [x9, #324]
    1348:	cbnz	w10, 1354 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x7c>
    134c:	ldrb	w9, [x9, #325]
    1350:	cbz	w9, 13d0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xf8>
    1354:	ldr	x8, [x20, #8]
    1358:	ldr	x0, [x19, #8]
    135c:	ldr	w1, [x8, #796]
    1360:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1364:	ldp	w8, w9, [x0, #4]
    1368:	ldr	w10, [x0]
    136c:	add	w8, w9, w8
    1370:	cmp	w10, w8
    1374:	b.ls	13cc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xf4>  // b.plast
    1378:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    137c:	ldr	x8, [x8]
    1380:	ldrb	w8, [x8]
    1384:	cbz	w8, 14c4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1ec>
    1388:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    138c:	add	x0, x0, #0x0
    1390:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1394:	tbz	w0, #0, 14c4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1ec>
    1398:	bl	0 <_ZN4llvm4dbgsEv>
    139c:	ldp	x9, x8, [x0, #16]
    13a0:	mov	x21, x0
    13a4:	sub	x9, x9, x8
    13a8:	cmp	x9, #0x13
    13ac:	b.hi	146c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x194>  // b.pmore
    13b0:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    13b4:	add	x1, x1, #0x0
    13b8:	mov	w2, #0x14                  	// #20
    13bc:	mov	x0, x21
    13c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    13c4:	mov	x21, x0
    13c8:	b	1494 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1bc>
    13cc:	ldr	w8, [x21, #784]
    13d0:	cmp	w8, #0x2
    13d4:	b.eq	1418 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x140>  // b.none
    13d8:	ldr	x9, [x21]
    13dc:	ldrb	w10, [x9, #324]
    13e0:	cbnz	w10, 13ec <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x114>
    13e4:	ldrb	w9, [x9, #325]
    13e8:	cbz	w9, 15c8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2f0>
    13ec:	ldr	x8, [x20, #8]
    13f0:	ldr	x0, [x19, #8]
    13f4:	ldr	w1, [x8, #796]
    13f8:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    13fc:	ldr	w8, [x0, #4]
    1400:	cbz	w8, 15c4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2ec>
    1404:	ldr	w9, [x0, #8]
    1408:	ldr	w10, [x0]
    140c:	add	w8, w9, w8
    1410:	cmp	w8, w10
    1414:	b.ne	15c4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2ec>  // b.any
    1418:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    141c:	ldr	x8, [x8]
    1420:	ldrb	w8, [x8]
    1424:	cbz	w8, 16a4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x3cc>
    1428:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    142c:	add	x0, x0, #0x0
    1430:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1434:	tbz	w0, #0, 16a4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x3cc>
    1438:	bl	0 <_ZN4llvm4dbgsEv>
    143c:	ldp	x9, x8, [x0, #16]
    1440:	mov	x21, x0
    1444:	sub	x9, x9, x8
    1448:	cmp	x9, #0x13
    144c:	b.hi	1620 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x348>  // b.pmore
    1450:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1454:	add	x1, x1, #0x0
    1458:	mov	w2, #0x14                  	// #20
    145c:	mov	x0, x21
    1460:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1464:	mov	x21, x0
    1468:	b	1648 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x370>
    146c:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1470:	add	x9, x9, #0x0
    1474:	ldr	q0, [x9]
    1478:	mov	w9, #0x676e                	// #26478
    147c:	movk	w9, #0x2320, lsl #16
    1480:	str	w9, [x8, #16]
    1484:	str	q0, [x8]
    1488:	ldr	x8, [x21, #24]
    148c:	add	x8, x8, #0x14
    1490:	str	x8, [x21, #24]
    1494:	ldr	w1, [x20]
    1498:	mov	x0, x21
    149c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    14a0:	ldp	x9, x8, [x21, #16]
    14a4:	sub	x9, x9, x8
    14a8:	cmp	x9, #0xf
    14ac:	b.hi	14ec <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x214>  // b.pmore
    14b0:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    14b4:	add	x1, x1, #0x0
    14b8:	mov	w2, #0x10                  	// #16
    14bc:	mov	x0, x21
    14c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    14c4:	ldp	x23, x8, [x19, #40]
    14c8:	cmp	x23, x8
    14cc:	b.eq	1514 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x23c>  // b.none
    14d0:	ldr	q0, [x20]
    14d4:	mov	w0, wzr
    14d8:	str	q0, [x23]
    14dc:	ldr	x8, [x19, #40]
    14e0:	add	x8, x8, #0x10
    14e4:	str	x8, [x19, #40]
    14e8:	b	1948 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x670>
    14ec:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    14f0:	add	x9, x9, #0x0
    14f4:	ldr	q0, [x9]
    14f8:	str	q0, [x8]
    14fc:	ldr	x8, [x21, #24]
    1500:	add	x8, x8, #0x10
    1504:	str	x8, [x21, #24]
    1508:	ldp	x23, x8, [x19, #40]
    150c:	cmp	x23, x8
    1510:	b.ne	14d0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1f8>  // b.any
    1514:	ldr	x21, [x19, #32]
    1518:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
    151c:	sub	x8, x23, x21
    1520:	cmp	x8, x9
    1524:	b.eq	1960 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x688>  // b.none
    1528:	asr	x25, x8, #4
    152c:	cmp	x8, #0x0
    1530:	csinc	x8, x25, xzr, ne  // ne = any
    1534:	adds	x8, x8, x25
    1538:	lsr	x10, x8, #59
    153c:	cset	w9, cs  // cs = hs, nlast
    1540:	cmp	x10, #0x0
    1544:	cset	w10, ne  // ne = any
    1548:	orr	w9, w9, w10
    154c:	cmp	w9, #0x0
    1550:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
    1554:	csel	x24, x9, x8, ne  // ne = any
    1558:	cbz	x24, 156c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x294>
    155c:	lsl	x0, x24, #4
    1560:	bl	0 <_Znwm>
    1564:	mov	x22, x0
    1568:	b	1570 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x298>
    156c:	mov	x22, xzr
    1570:	ldr	q0, [x20]
    1574:	cmp	x23, x21
    1578:	mov	x8, x22
    157c:	str	q0, [x22, x25, lsl #4]
    1580:	b.eq	15a0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2c8>  // b.none
    1584:	mov	x8, x22
    1588:	mov	x9, x21
    158c:	ldr	q0, [x9], #16
    1590:	cmp	x23, x9
    1594:	str	q0, [x8]
    1598:	add	x8, x8, #0x10
    159c:	b.ne	158c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2b4>  // b.any
    15a0:	add	x20, x8, #0x10
    15a4:	cbz	x21, 15b0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2d8>
    15a8:	mov	x0, x21
    15ac:	bl	0 <_ZdlPv>
    15b0:	add	x8, x22, x24, lsl #4
    15b4:	mov	w0, wzr
    15b8:	stp	x22, x20, [x19, #32]
    15bc:	str	x8, [x19, #48]
    15c0:	b	1948 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x670>
    15c4:	ldr	w8, [x21, #784]
    15c8:	cmp	w8, #0x3
    15cc:	b.ne	196c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x694>  // b.any
    15d0:	ldr	x8, [x21]
    15d4:	ldrb	w9, [x8, #324]
    15d8:	cbnz	w9, 15e4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x30c>
    15dc:	ldrb	w8, [x8, #325]
    15e0:	cbz	w8, 1604 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x32c>
    15e4:	ldr	x8, [x20, #8]
    15e8:	ldr	x0, [x19, #8]
    15ec:	ldr	w1, [x8, #796]
    15f0:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    15f4:	ldr	w8, [x0, #8]
    15f8:	ldr	w9, [x0]
    15fc:	cmp	w8, w9
    1600:	b.ne	196c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x694>  // b.any
    1604:	ldr	x8, [x20, #8]
    1608:	ldr	x8, [x8]
    160c:	ldr	w9, [x8, #312]
    1610:	cbz	w9, 1728 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x450>
    1614:	ldrb	w8, [x8, #329]
    1618:	cbnz	w8, 1944 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x66c>
    161c:	b	173c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x464>
    1620:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1624:	add	x9, x9, #0x0
    1628:	ldr	q0, [x9]
    162c:	mov	w9, #0x676e                	// #26478
    1630:	movk	w9, #0x2320, lsl #16
    1634:	str	w9, [x8, #16]
    1638:	str	q0, [x8]
    163c:	ldr	x8, [x21, #24]
    1640:	add	x8, x8, #0x14
    1644:	str	x8, [x21, #24]
    1648:	ldr	w1, [x20]
    164c:	mov	x0, x21
    1650:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1654:	ldp	x9, x8, [x21, #16]
    1658:	sub	x9, x9, x8
    165c:	cmp	x9, #0x12
    1660:	b.hi	167c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x3a4>  // b.pmore
    1664:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1668:	add	x1, x1, #0x0
    166c:	mov	w2, #0x13                  	// #19
    1670:	mov	x0, x21
    1674:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1678:	b	16a4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x3cc>
    167c:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1680:	add	x9, x9, #0x0
    1684:	ldr	q0, [x9]
    1688:	mov	w9, #0x6553                	// #25939
    168c:	movk	w9, #0xa74, lsl #16
    1690:	stur	w9, [x8, #15]
    1694:	str	q0, [x8]
    1698:	ldr	x8, [x21, #24]
    169c:	add	x8, x8, #0x13
    16a0:	str	x8, [x21, #24]
    16a4:	mov	x23, x19
    16a8:	ldr	x9, [x23, #72]!
    16ac:	mov	x8, x23
    16b0:	ldr	x24, [x8, #-8]!
    16b4:	cmp	x24, x9
    16b8:	b.eq	16d0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x3f8>  // b.none
    16bc:	ldr	q0, [x20]
    16c0:	str	q0, [x24]
    16c4:	ldr	x9, [x8]
    16c8:	add	x9, x9, #0x10
    16cc:	b	17e0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x508>
    16d0:	ldr	x21, [x19, #56]
    16d4:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
    16d8:	sub	x8, x24, x21
    16dc:	cmp	x8, x9
    16e0:	b.eq	1960 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x688>  // b.none
    16e4:	asr	x26, x8, #4
    16e8:	cmp	x8, #0x0
    16ec:	csinc	x8, x26, xzr, ne  // ne = any
    16f0:	adds	x8, x8, x26
    16f4:	lsr	x10, x8, #59
    16f8:	cset	w9, cs  // cs = hs, nlast
    16fc:	cmp	x10, #0x0
    1700:	cset	w10, ne  // ne = any
    1704:	orr	w9, w9, w10
    1708:	cmp	w9, #0x0
    170c:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
    1710:	csel	x25, x9, x8, ne  // ne = any
    1714:	cbz	x25, 1790 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x4b8>
    1718:	lsl	x0, x25, #4
    171c:	bl	0 <_Znwm>
    1720:	mov	x22, x0
    1724:	b	1794 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x4bc>
    1728:	ldr	w9, [x8, #184]
    172c:	mov	w0, #0x1                   	// #1
    1730:	cbz	w9, 1948 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x670>
    1734:	ldrb	w8, [x8, #329]
    1738:	cbnz	w8, 1948 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x670>
    173c:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    1740:	ldr	x8, [x8]
    1744:	ldrb	w8, [x8]
    1748:	cbz	w8, 1878 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5a0>
    174c:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1750:	add	x0, x0, #0x0
    1754:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1758:	tbz	w0, #0, 1878 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5a0>
    175c:	bl	0 <_ZN4llvm4dbgsEv>
    1760:	ldp	x9, x8, [x0, #16]
    1764:	mov	x21, x0
    1768:	sub	x9, x9, x8
    176c:	cmp	x9, #0x13
    1770:	b.hi	17f8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x520>  // b.pmore
    1774:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1778:	add	x1, x1, #0x0
    177c:	mov	w2, #0x14                  	// #20
    1780:	mov	x0, x21
    1784:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1788:	mov	x21, x0
    178c:	b	1820 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x548>
    1790:	mov	x22, xzr
    1794:	ldr	q0, [x20]
    1798:	cmp	x24, x21
    179c:	mov	x8, x22
    17a0:	str	q0, [x22, x26, lsl #4]
    17a4:	b.eq	17c4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x4ec>  // b.none
    17a8:	mov	x8, x22
    17ac:	mov	x9, x21
    17b0:	ldr	q0, [x9], #16
    17b4:	cmp	x24, x9
    17b8:	str	q0, [x8]
    17bc:	add	x8, x8, #0x10
    17c0:	b.ne	17b0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x4d8>  // b.any
    17c4:	add	x20, x8, #0x10
    17c8:	cbz	x21, 17d4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x4fc>
    17cc:	mov	x0, x21
    17d0:	bl	0 <_ZdlPv>
    17d4:	add	x9, x22, x25, lsl #4
    17d8:	mov	x8, x23
    17dc:	stp	x22, x20, [x19, #56]
    17e0:	str	x9, [x8]
    17e4:	ldr	w8, [x19, #136]
    17e8:	mov	w0, wzr
    17ec:	add	w8, w8, #0x1
    17f0:	str	w8, [x19, #136]
    17f4:	b	1948 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x670>
    17f8:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    17fc:	add	x9, x9, #0x0
    1800:	ldr	q0, [x9]
    1804:	mov	w9, #0x676e                	// #26478
    1808:	movk	w9, #0x2320, lsl #16
    180c:	str	w9, [x8, #16]
    1810:	str	q0, [x8]
    1814:	ldr	x8, [x21, #24]
    1818:	add	x8, x8, #0x14
    181c:	str	x8, [x21, #24]
    1820:	ldr	w1, [x20]
    1824:	mov	x0, x21
    1828:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    182c:	ldp	x9, x8, [x21, #16]
    1830:	sub	x9, x9, x8
    1834:	cmp	x9, #0x10
    1838:	b.hi	1854 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x57c>  // b.pmore
    183c:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1840:	add	x1, x1, #0x0
    1844:	mov	w2, #0x11                  	// #17
    1848:	mov	x0, x21
    184c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1850:	b	1878 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5a0>
    1854:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1858:	add	x9, x9, #0x0
    185c:	ldr	q0, [x9]
    1860:	mov	w9, #0xa                   	// #10
    1864:	strb	w9, [x8, #16]
    1868:	str	q0, [x8]
    186c:	ldr	x8, [x21, #24]
    1870:	add	x8, x8, #0x11
    1874:	str	x8, [x21, #24]
    1878:	ldp	x23, x8, [x19, #88]
    187c:	cmp	x23, x8
    1880:	b.eq	189c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5c4>  // b.none
    1884:	ldr	q0, [x20]
    1888:	str	q0, [x23]
    188c:	ldr	x8, [x19, #88]
    1890:	add	x8, x8, #0x10
    1894:	str	x8, [x19, #88]
    1898:	b	1944 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x66c>
    189c:	ldr	x21, [x19, #80]
    18a0:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
    18a4:	sub	x8, x23, x21
    18a8:	cmp	x8, x9
    18ac:	b.eq	1960 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x688>  // b.none
    18b0:	asr	x25, x8, #4
    18b4:	cmp	x8, #0x0
    18b8:	csinc	x8, x25, xzr, ne  // ne = any
    18bc:	adds	x8, x8, x25
    18c0:	lsr	x10, x8, #59
    18c4:	cset	w9, cs  // cs = hs, nlast
    18c8:	cmp	x10, #0x0
    18cc:	cset	w10, ne  // ne = any
    18d0:	orr	w9, w9, w10
    18d4:	cmp	w9, #0x0
    18d8:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
    18dc:	csel	x24, x9, x8, ne  // ne = any
    18e0:	cbz	x24, 18f4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x61c>
    18e4:	lsl	x0, x24, #4
    18e8:	bl	0 <_Znwm>
    18ec:	mov	x22, x0
    18f0:	b	18f8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x620>
    18f4:	mov	x22, xzr
    18f8:	ldr	q0, [x20]
    18fc:	cmp	x23, x21
    1900:	mov	x8, x22
    1904:	str	q0, [x22, x25, lsl #4]
    1908:	b.eq	1928 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x650>  // b.none
    190c:	mov	x8, x22
    1910:	mov	x9, x21
    1914:	ldr	q0, [x9], #16
    1918:	cmp	x23, x9
    191c:	str	q0, [x8]
    1920:	add	x8, x8, #0x10
    1924:	b.ne	1914 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x63c>  // b.any
    1928:	add	x20, x8, #0x10
    192c:	cbz	x21, 1938 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x660>
    1930:	mov	x0, x21
    1934:	bl	0 <_ZdlPv>
    1938:	add	x8, x22, x24, lsl #4
    193c:	stp	x22, x20, [x19, #80]
    1940:	str	x8, [x19, #96]
    1944:	mov	w0, #0x1                   	// #1
    1948:	ldp	x20, x19, [sp, #64]
    194c:	ldp	x22, x21, [sp, #48]
    1950:	ldp	x24, x23, [sp, #32]
    1954:	ldp	x26, x25, [sp, #16]
    1958:	ldp	x29, x30, [sp], #80
    195c:	ret
    1960:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1964:	add	x0, x0, #0x0
    1968:	bl	0 <_ZSt20__throw_length_errorPKc>
    196c:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1970:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1974:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1978:	add	x0, x0, #0x0
    197c:	add	x1, x1, #0x0
    1980:	add	x3, x3, #0x0
    1984:	mov	w2, #0x143                 	// #323
    1988:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca10LSUnitBase8getGroupEj:

0000000000000000 <_ZN4llvm3mca10LSUnitBase8getGroupEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	w1, f0 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xf0>
   c:	ldr	w9, [x0, #56]
  10:	ldr	x8, [x0, #40]
  14:	cbz	w9, 6c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x6c>
  18:	cmn	w1, #0x2
  1c:	b.cs	110 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x110>  // b.hs, b.nlast
  20:	mov	w10, #0x25                  	// #37
  24:	mul	w11, w1, w10
  28:	sub	w10, w9, #0x1
  2c:	and	w11, w10, w11
  30:	add	x14, x8, w11, uxtw #4
  34:	ldr	w12, [x14]
  38:	cmp	w12, w1
  3c:	b.eq	70 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x70>  // b.none
  40:	mov	w13, #0x1                   	// #1
  44:	cmn	w12, #0x1
  48:	b.eq	6c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x6c>  // b.none
  4c:	add	w11, w11, w13
  50:	and	w11, w11, w10
  54:	add	x14, x8, w11, uxtw #4
  58:	ldr	w12, [x14]
  5c:	add	w13, w13, #0x1
  60:	cmp	w12, w1
  64:	b.eq	70 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x70>  // b.none
  68:	b	44 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x44>
  6c:	add	x14, x8, x9, lsl #4
  70:	add	x10, x8, x9, lsl #4
  74:	cmp	x14, x10
  78:	b.eq	f0 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xf0>  // b.none
  7c:	cbz	w9, e0 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xe0>
  80:	cmn	w1, #0x2
  84:	b.cs	110 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x110>  // b.hs, b.nlast
  88:	mov	w11, #0x25                  	// #37
  8c:	mul	w11, w1, w11
  90:	sub	w9, w9, #0x1
  94:	and	w11, w9, w11
  98:	add	x13, x8, w11, uxtw #4
  9c:	ldr	w12, [x13]
  a0:	cmp	w12, w1
  a4:	b.ne	b4 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xb4>  // b.any
  a8:	ldr	x0, [x13, #8]
  ac:	ldp	x29, x30, [sp], #16
  b0:	ret
  b4:	mov	w14, #0x1                   	// #1
  b8:	cmn	w12, #0x1
  bc:	b.eq	e0 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xe0>  // b.none
  c0:	add	w11, w11, w14
  c4:	and	w11, w11, w9
  c8:	add	x13, x8, w11, uxtw #4
  cc:	ldr	w12, [x13]
  d0:	add	w14, w14, #0x1
  d4:	cmp	w12, w1
  d8:	b.eq	a8 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xa8>  // b.none
  dc:	b	b8 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xb8>
  e0:	mov	x13, x10
  e4:	ldr	x0, [x13, #8]
  e8:	ldp	x29, x30, [sp], #16
  ec:	ret
  f0:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  f4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  f8:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x11c                 	// #284
 10c:	bl	0 <__assert_fail>
 110:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 114:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 118:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 11c:	add	x0, x0, #0x0
 120:	add	x1, x1, #0x0
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x252                 	// #594
 12c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldr	x25, [x0]
  20:	ldr	w23, [x0, #8]
  24:	mov	x21, x3
  28:	mov	x19, x2
  2c:	sub	x9, x1, x25
  30:	add	x8, x25, x23, lsl #4
  34:	mov	x22, x0
  38:	cmp	x8, x1
  3c:	asr	x26, x9, #4
  40:	b.eq	120 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x120>  // b.none
  44:	cmp	x25, x1
  48:	b.hi	2ac <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x2ac>  // b.pmore
  4c:	cmp	x8, x1
  50:	b.cc	2cc <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x2cc>  // b.lo, b.ul, b.last
  54:	ldr	w8, [x22, #12]
  58:	sub	x27, x21, x19
  5c:	asr	x28, x27, #4
  60:	add	x1, x28, x23
  64:	cmp	x1, x8
  68:	b.ls	7c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x7c>  // b.plast
  6c:	mov	x0, x22
  70:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
  74:	ldr	x25, [x22]
  78:	ldr	w23, [x22, #8]
  7c:	add	x20, x25, x26, lsl #4
  80:	add	x24, x25, x23, lsl #4
  84:	sub	x9, x24, x20
  88:	asr	x8, x9, #4
  8c:	cmp	x8, x28
  90:	b.cs	190 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x190>  // b.hs, b.nlast
  94:	ldr	w11, [x22, #12]
  98:	add	x10, x28, x23
  9c:	cmp	x10, x11
  a0:	b.hi	28c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x28c>  // b.pmore
  a4:	cmp	x26, x23
  a8:	str	w10, [x22, #8]
  ac:	b.eq	d8 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0xd8>  // b.none
  b0:	add	x10, x25, w10, uxtw #4
  b4:	lsl	x11, x23, #4
  b8:	sub	x10, x10, x8, lsl #4
  bc:	sub	x11, x11, x26, lsl #4
  c0:	mov	x12, x20
  c4:	ldr	q0, [x12], #16
  c8:	subs	x11, x11, #0x10
  cc:	str	q0, [x10]
  d0:	add	x10, x10, #0x10
  d4:	b.ne	c4 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0xc4>  // b.any
  d8:	cbz	x9, 100 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x100>
  dc:	mov	x9, x20
  e0:	ldr	w10, [x19]
  e4:	subs	x8, x8, #0x1
  e8:	str	w10, [x9]
  ec:	ldr	x10, [x19, #8]
  f0:	add	x19, x19, #0x10
  f4:	str	x10, [x9, #8]
  f8:	add	x9, x9, #0x10
  fc:	b.ne	e0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0xe0>  // b.any
 100:	cmp	x19, x21
 104:	b.eq	26c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x26c>  // b.none
 108:	ldr	q0, [x19], #16
 10c:	cmp	x21, x19
 110:	str	q0, [x24]
 114:	add	x24, x24, #0x10
 118:	b.ne	108 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x108>  // b.any
 11c:	b	26c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x26c>
 120:	ldr	w8, [x22, #12]
 124:	sub	x9, x21, x19
 128:	asr	x20, x9, #4
 12c:	sub	x8, x8, x23
 130:	cmp	x20, x8
 134:	b.ls	148 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x148>  // b.plast
 138:	add	x1, x20, x23
 13c:	mov	x0, x22
 140:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 144:	ldr	w23, [x22, #8]
 148:	cmp	x19, x21
 14c:	b.eq	170 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x170>  // b.none
 150:	ldr	x8, [x22]
 154:	add	x8, x8, x23, lsl #4
 158:	ldr	q0, [x19], #16
 15c:	cmp	x21, x19
 160:	str	q0, [x8]
 164:	add	x8, x8, #0x10
 168:	b.ne	158 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x158>  // b.any
 16c:	ldr	w23, [x22, #8]
 170:	ldr	w9, [x22, #12]
 174:	add	x8, x23, x20
 178:	cmp	x8, x9
 17c:	b.hi	28c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x28c>  // b.pmore
 180:	ldr	x9, [x22]
 184:	str	w8, [x22, #8]
 188:	add	x20, x9, x26, lsl #4
 18c:	b	26c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x26c>
 190:	ldr	w8, [x22, #12]
 194:	sub	x8, x8, x23
 198:	cmp	x28, x8
 19c:	mov	x8, x23
 1a0:	b.ls	1b4 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x1b4>  // b.plast
 1a4:	add	x1, x28, x23
 1a8:	mov	x0, x22
 1ac:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 1b0:	ldr	w8, [x22, #8]
 1b4:	cbz	x27, 1dc <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x1dc>
 1b8:	ldr	x9, [x22]
 1bc:	add	x8, x9, x8, lsl #4
 1c0:	neg	x9, x28, lsl #4
 1c4:	ldr	q0, [x24, x9]
 1c8:	adds	x9, x9, #0x10
 1cc:	str	q0, [x8]
 1d0:	add	x8, x8, #0x10
 1d4:	b.ne	1c4 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x1c4>  // b.any
 1d8:	ldr	w8, [x22, #8]
 1dc:	ldr	w9, [x22, #12]
 1e0:	add	x8, x8, x28
 1e4:	cmp	x8, x9
 1e8:	b.hi	28c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x28c>  // b.pmore
 1ec:	sub	x9, x24, x28, lsl #4
 1f0:	sub	x9, x9, x20
 1f4:	cmp	x9, #0x1
 1f8:	str	w8, [x22, #8]
 1fc:	b.lt	234 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x234>  // b.tstop
 200:	lsr	x8, x9, #4
 204:	add	x9, x25, x23, lsl #4
 208:	add	x8, x8, #0x1
 20c:	sub	x9, x9, #0x8
 210:	neg	x10, x28, lsl #4
 214:	add	x11, x9, x10
 218:	ldur	w12, [x11, #-8]
 21c:	sub	x8, x8, #0x1
 220:	cmp	x8, #0x1
 224:	stur	w12, [x9, #-8]
 228:	ldr	x11, [x11]
 22c:	str	x11, [x9], #-16
 230:	b.gt	214 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x214>
 234:	cmp	x27, #0x1
 238:	b.lt	26c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x26c>  // b.tstop
 23c:	lsr	x8, x27, #4
 240:	add	x8, x8, #0x1
 244:	mov	x9, x20
 248:	ldr	w10, [x19]
 24c:	sub	x8, x8, #0x1
 250:	cmp	x8, #0x1
 254:	str	w10, [x9]
 258:	ldr	x10, [x19, #8]
 25c:	add	x19, x19, #0x10
 260:	str	x10, [x9, #8]
 264:	add	x9, x9, #0x10
 268:	b.gt	248 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x248>
 26c:	mov	x0, x20
 270:	ldp	x20, x19, [sp, #80]
 274:	ldp	x22, x21, [sp, #64]
 278:	ldp	x24, x23, [sp, #48]
 27c:	ldp	x26, x25, [sp, #32]
 280:	ldp	x28, x27, [sp, #16]
 284:	ldp	x29, x30, [sp], #96
 288:	ret
 28c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 290:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 294:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 298:	add	x0, x0, #0x0
 29c:	add	x1, x1, #0x0
 2a0:	add	x3, x3, #0x0
 2a4:	mov	w2, #0x43                  	// #67
 2a8:	bl	0 <__assert_fail>
 2ac:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 2b0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 2b4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 2b8:	add	x0, x0, #0x0
 2bc:	add	x1, x1, #0x0
 2c0:	add	x3, x3, #0x0
 2c4:	mov	w2, #0x24e                 	// #590
 2c8:	bl	0 <__assert_fail>
 2cc:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 2d0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 2d4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 2d8:	add	x0, x0, #0x0
 2dc:	add	x1, x1, #0x0
 2e0:	add	x3, x3, #0x0
 2e4:	mov	w2, #0x24f                 	// #591
 2e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_:

0000000000000000 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_>:
   0:	ldr	x10, [x1, #8]
   4:	ldr	w8, [x1]
   8:	ldr	w9, [x10, #24]
   c:	cbz	w9, 34 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x34>
  10:	ldr	x10, [x10, #16]
  14:	mov	w11, #0x88                  	// #136
  18:	mul	x11, x9, x11
  1c:	sub	x11, x11, #0x88
  20:	cmp	x11, #0x88
  24:	b.cs	3c <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x3c>  // b.hs, b.nlast
  28:	mov	w12, wzr
  2c:	mov	x11, x10
  30:	b	ac <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0xac>
  34:	mov	w12, wzr
  38:	b	d4 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0xd4>
  3c:	mov	x14, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  40:	movk	x14, #0xf0f1
  44:	umulh	x11, x11, x14
  48:	lsr	x11, x11, #7
  4c:	add	x14, x11, #0x1
  50:	mov	w16, #0x88                  	// #136
  54:	and	x15, x14, #0x3fffffffffffffe
  58:	mov	w13, wzr
  5c:	mov	w12, wzr
  60:	madd	x11, x15, x16, x10
  64:	add	x16, x10, #0xc8
  68:	mov	x17, x15
  6c:	ldur	x18, [x16, #-168]
  70:	ldur	w0, [x16, #-136]
  74:	ldr	w1, [x16]
  78:	ldur	x3, [x16, #-32]
  7c:	cmp	x18, #0x0
  80:	add	w13, w0, w13
  84:	add	w12, w1, w12
  88:	cinc	w13, w13, ne  // ne = any
  8c:	cmp	x3, #0x0
  90:	cinc	w12, w12, ne  // ne = any
  94:	subs	x17, x17, #0x2
  98:	add	x16, x16, #0x110
  9c:	b.ne	6c <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x6c>  // b.any
  a0:	cmp	x14, x15
  a4:	add	w12, w12, w13
  a8:	b.eq	d4 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0xd4>  // b.none
  ac:	mov	w13, #0x88                  	// #136
  b0:	madd	x9, x9, x13, x10
  b4:	ldr	x10, [x11, #32]
  b8:	ldr	w13, [x11, #64]
  bc:	add	x11, x11, #0x88
  c0:	cmp	x10, #0x0
  c4:	add	w10, w13, w12
  c8:	cinc	w12, w10, ne  // ne = any
  cc:	cmp	x9, x11
  d0:	b.ne	b4 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0xb4>  // b.any
  d4:	ldr	x13, [x2, #8]
  d8:	ldr	w10, [x2]
  dc:	sub	w9, w8, w12
  e0:	ldr	w11, [x13, #24]
  e4:	cbz	w11, 10c <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x10c>
  e8:	ldr	x12, [x13, #16]
  ec:	mov	w13, #0x88                  	// #136
  f0:	mul	x13, x11, x13
  f4:	sub	x13, x13, #0x88
  f8:	cmp	x13, #0x88
  fc:	b.cs	114 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x114>  // b.hs, b.nlast
 100:	mov	w14, wzr
 104:	mov	x13, x12
 108:	b	184 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x184>
 10c:	mov	w14, wzr
 110:	b	1ac <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x1ac>
 114:	mov	x16, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
 118:	movk	x16, #0xf0f1
 11c:	umulh	x13, x13, x16
 120:	lsr	x13, x13, #7
 124:	add	x16, x13, #0x1
 128:	mov	w18, #0x88                  	// #136
 12c:	and	x17, x16, #0x3fffffffffffffe
 130:	mov	w15, wzr
 134:	mov	w14, wzr
 138:	madd	x13, x17, x18, x12
 13c:	add	x18, x12, #0xc8
 140:	mov	x0, x17
 144:	ldur	x1, [x18, #-168]
 148:	ldur	w2, [x18, #-136]
 14c:	ldr	w3, [x18]
 150:	ldur	x4, [x18, #-32]
 154:	cmp	x1, #0x0
 158:	add	w15, w2, w15
 15c:	add	w14, w3, w14
 160:	cinc	w15, w15, ne  // ne = any
 164:	cmp	x4, #0x0
 168:	cinc	w14, w14, ne  // ne = any
 16c:	subs	x0, x0, #0x2
 170:	add	x18, x18, #0x110
 174:	b.ne	144 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x144>  // b.any
 178:	cmp	x16, x17
 17c:	add	w14, w14, w15
 180:	b.eq	1ac <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x1ac>  // b.none
 184:	mov	w15, #0x88                  	// #136
 188:	madd	x11, x11, x15, x12
 18c:	ldr	x12, [x13, #32]
 190:	ldr	w15, [x13, #64]
 194:	add	x13, x13, #0x88
 198:	cmp	x12, #0x0
 19c:	add	w12, w15, w14
 1a0:	cinc	w14, w12, ne  // ne = any
 1a4:	cmp	x11, x13
 1a8:	b.ne	18c <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x18c>  // b.any
 1ac:	sub	w11, w10, w14
 1b0:	cmp	w8, w10
 1b4:	cset	w8, cc  // cc = lo, ul, last
 1b8:	cmp	w9, w11
 1bc:	cset	w9, lt  // lt = tstop
 1c0:	csel	w0, w8, w9, eq  // eq = none
 1c4:	ret

Disassembly of section .text._ZN4llvm6any_ofIRKNS_11SmallVectorINS_3mca10WriteStateELj4EEEZNKS2_15InstructionBase17hasDependentUsersEvEUlRKS3_E_EEbOT_T0_:

0000000000000000 <_ZN4llvm6any_ofIRKNS_11SmallVectorINS_3mca10WriteStateELj4EEEZNKS2_15InstructionBase17hasDependentUsersEvEUlRKS3_E_EEbOT_T0_>:
   0:	ldr	w11, [x0, #8]
   4:	ldr	x8, [x0]
   8:	add	x9, x11, x11, lsl #4
   c:	lsl	x10, x9, #3
  10:	cmp	x10, #0x199
  14:	add	x9, x8, x10
  18:	b.cc	98 <_ZN4llvm6any_ofIRKNS_11SmallVectorINS_3mca10WriteStateELj4EEEZNKS2_15InstructionBase17hasDependentUsersEvEUlRKS3_E_EEbOT_T0_+0x98>  // b.lo, b.ul, b.last
  1c:	lsr	x10, x11, #2
  20:	add	x10, x10, #0x1
  24:	ldr	x11, [x8, #32]
  28:	ldr	w12, [x8, #64]
  2c:	cmp	x11, #0x0
  30:	csetm	w11, ne  // ne = any
  34:	cmp	w12, w11
  38:	b.ne	114 <_ZN4llvm6any_ofIRKNS_11SmallVectorINS_3mca10WriteStateELj4EEEZNKS2_15InstructionBase17hasDependentUsersEvEUlRKS3_E_EEbOT_T0_+0x114>  // b.any
  3c:	ldr	x11, [x8, #168]
  40:	ldr	w12, [x8, #200]
  44:	cmp	x11, #0x0
  48:	csetm	w11, ne  // ne = any
  4c:	cmp	w12, w11
  50:	b.ne	130 <_ZN4llvm6any_ofIRKNS_11SmallVectorINS_3mca10WriteStateELj4EEEZNKS2_15InstructionBase17hasDependentUsersEvEUlRKS3_E_EEbOT_T0_+0x130>  // b.any
  54:	ldr	x11, [x8, #304]
  58:	ldr	w12, [x8, #336]
  5c:	cmp	x11, #0x0
  60:	csetm	w11, ne  // ne = any
  64:	cmp	w12, w11
  68:	b.ne	140 <_ZN4llvm6any_ofIRKNS_11SmallVectorINS_3mca10WriteStateELj4EEEZNKS2_15InstructionBase17hasDependentUsersEvEUlRKS3_E_EEbOT_T0_+0x140>  // b.any
  6c:	ldr	x11, [x8, #440]
  70:	ldr	w12, [x8, #472]
  74:	cmp	x11, #0x0
  78:	csetm	w11, ne  // ne = any
  7c:	cmp	w12, w11
  80:	b.ne	150 <_ZN4llvm6any_ofIRKNS_11SmallVectorINS_3mca10WriteStateELj4EEEZNKS2_15InstructionBase17hasDependentUsersEvEUlRKS3_E_EEbOT_T0_+0x150>  // b.any
  84:	sub	x10, x10, #0x1
  88:	cmp	x10, #0x1
  8c:	add	x8, x8, #0x220
  90:	b.gt	24 <_ZN4llvm6any_ofIRKNS_11SmallVectorINS_3mca10WriteStateELj4EEEZNKS2_15InstructionBase17hasDependentUsersEvEUlRKS3_E_EEbOT_T0_+0x24>
  94:	sub	x10, x9, x8
  98:	mov	x11, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  9c:	asr	x10, x10, #3
  a0:	movk	x11, #0xf0f1
  a4:	mul	x10, x10, x11
  a8:	cmp	x10, #0x1
  ac:	b.eq	f8 <_ZN4llvm6any_ofIRKNS_11SmallVectorINS_3mca10WriteStateELj4EEEZNKS2_15InstructionBase17hasDependentUsersEvEUlRKS3_E_EEbOT_T0_+0xf8>  // b.none
  b0:	cmp	x10, #0x2
  b4:	b.eq	dc <_ZN4llvm6any_ofIRKNS_11SmallVectorINS_3mca10WriteStateELj4EEEZNKS2_15InstructionBase17hasDependentUsersEvEUlRKS3_E_EEbOT_T0_+0xdc>  // b.none
  b8:	cmp	x10, #0x3
  bc:	b.ne	120 <_ZN4llvm6any_ofIRKNS_11SmallVectorINS_3mca10WriteStateELj4EEEZNKS2_15InstructionBase17hasDependentUsersEvEUlRKS3_E_EEbOT_T0_+0x120>  // b.any
  c0:	ldr	x10, [x8, #32]
  c4:	ldr	w11, [x8, #64]
  c8:	cmp	x10, #0x0
  cc:	csetm	w10, ne  // ne = any
  d0:	cmp	w11, w10
  d4:	b.ne	114 <_ZN4llvm6any_ofIRKNS_11SmallVectorINS_3mca10WriteStateELj4EEEZNKS2_15InstructionBase17hasDependentUsersEvEUlRKS3_E_EEbOT_T0_+0x114>  // b.any
  d8:	add	x8, x8, #0x88
  dc:	ldr	x10, [x8, #32]
  e0:	ldr	w11, [x8, #64]
  e4:	cmp	x10, #0x0
  e8:	csetm	w10, ne  // ne = any
  ec:	cmp	w11, w10
  f0:	b.ne	114 <_ZN4llvm6any_ofIRKNS_11SmallVectorINS_3mca10WriteStateELj4EEEZNKS2_15InstructionBase17hasDependentUsersEvEUlRKS3_E_EEbOT_T0_+0x114>  // b.any
  f4:	add	x8, x8, #0x88
  f8:	ldr	x10, [x8, #32]
  fc:	ldr	w11, [x8, #64]
 100:	cmp	x10, #0x0
 104:	csetm	w10, ne  // ne = any
 108:	cmp	w11, w10
 10c:	b.ne	114 <_ZN4llvm6any_ofIRKNS_11SmallVectorINS_3mca10WriteStateELj4EEEZNKS2_15InstructionBase17hasDependentUsersEvEUlRKS3_E_EEbOT_T0_+0x114>  // b.any
 110:	mov	x8, x9
 114:	cmp	x8, x9
 118:	cset	w0, ne  // ne = any
 11c:	ret
 120:	mov	x8, x9
 124:	cmp	x8, x9
 128:	cset	w0, ne  // ne = any
 12c:	ret
 130:	add	x8, x8, #0x88
 134:	cmp	x8, x9
 138:	cset	w0, ne  // ne = any
 13c:	ret
 140:	add	x8, x8, #0x110
 144:	cmp	x8, x9
 148:	cset	w0, ne  // ne = any
 14c:	ret
 150:	add	x8, x8, #0x198
 154:	cmp	x8, x9
 158:	cset	w0, ne  // ne = any
 15c:	ret

Disassembly of section .text._ZNK4llvm3mca10LSUnitBase8getGroupEj:

0000000000000000 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	w1, f0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0xf0>
   c:	ldr	w9, [x0, #56]
  10:	ldr	x8, [x0, #40]
  14:	cbz	w9, 6c <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x6c>
  18:	cmn	w1, #0x2
  1c:	b.cs	110 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x110>  // b.hs, b.nlast
  20:	mov	w10, #0x25                  	// #37
  24:	mul	w11, w1, w10
  28:	sub	w10, w9, #0x1
  2c:	and	w11, w10, w11
  30:	add	x14, x8, w11, uxtw #4
  34:	ldr	w12, [x14]
  38:	cmp	w12, w1
  3c:	b.eq	70 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x70>  // b.none
  40:	mov	w13, #0x1                   	// #1
  44:	cmn	w12, #0x1
  48:	b.eq	6c <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x6c>  // b.none
  4c:	add	w11, w11, w13
  50:	and	w11, w11, w10
  54:	add	x14, x8, w11, uxtw #4
  58:	ldr	w12, [x14]
  5c:	add	w13, w13, #0x1
  60:	cmp	w12, w1
  64:	b.eq	70 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x70>  // b.none
  68:	b	44 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x44>
  6c:	add	x14, x8, x9, lsl #4
  70:	add	x10, x8, x9, lsl #4
  74:	cmp	x14, x10
  78:	b.eq	f0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0xf0>  // b.none
  7c:	cbz	w9, e0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0xe0>
  80:	cmn	w1, #0x2
  84:	b.cs	110 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x110>  // b.hs, b.nlast
  88:	mov	w11, #0x25                  	// #37
  8c:	mul	w11, w1, w11
  90:	sub	w9, w9, #0x1
  94:	and	w11, w9, w11
  98:	add	x13, x8, w11, uxtw #4
  9c:	ldr	w12, [x13]
  a0:	cmp	w12, w1
  a4:	b.ne	b4 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0xb4>  // b.any
  a8:	ldr	x0, [x13, #8]
  ac:	ldp	x29, x30, [sp], #16
  b0:	ret
  b4:	mov	w14, #0x1                   	// #1
  b8:	cmn	w12, #0x1
  bc:	b.eq	e0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0xe0>  // b.none
  c0:	add	w11, w11, w14
  c4:	and	w11, w11, w9
  c8:	add	x13, x8, w11, uxtw #4
  cc:	ldr	w12, [x13]
  d0:	add	w14, w14, #0x1
  d4:	cmp	w12, w1
  d8:	b.eq	a8 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0xa8>  // b.none
  dc:	b	b8 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0xb8>
  e0:	mov	x13, x10
  e4:	ldr	x0, [x13, #8]
  e8:	ldp	x29, x30, [sp], #16
  ec:	ret
  f0:	adrp	x0, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  f4:	adrp	x1, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  f8:	adrp	x3, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x117                 	// #279
 10c:	bl	0 <__assert_fail>
 110:	adrp	x0, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
 114:	adrp	x1, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
 118:	adrp	x3, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
 11c:	add	x0, x0, #0x0
 120:	add	x1, x1, #0x0
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x252                 	// #594
 12c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cbz	x1, 194 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x194>
  18:	ldp	x11, x8, [x0, #8]
  1c:	mov	x20, x1
  20:	mov	x19, x0
  24:	sub	x8, x8, x11
  28:	cmp	x1, x8, asr #4
  2c:	b.ls	88 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x88>  // b.plast
  30:	ldr	x8, [x19]
  34:	sub	x8, x11, x8
  38:	asr	x23, x8, #4
  3c:	eor	x8, x23, #0x7ffffffffffffff
  40:	cmp	x8, x20
  44:	b.cc	1a8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x1a8>  // b.lo, b.ul, b.last
  48:	cmp	x23, x20
  4c:	csel	x8, x20, x23, cc  // cc = lo, ul, last
  50:	adds	x8, x8, x23
  54:	lsr	x10, x8, #59
  58:	cset	w9, cs  // cs = hs, nlast
  5c:	cmp	x10, #0x0
  60:	cset	w10, ne  // ne = any
  64:	orr	w9, w9, w10
  68:	cmp	w9, #0x0
  6c:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  70:	csel	x22, x9, x8, ne  // ne = any
  74:	cbz	x22, f0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xf0>
  78:	lsl	x0, x22, #4
  7c:	bl	0 <_Znwm>
  80:	mov	x21, x0
  84:	b	f4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xf4>
  88:	cmp	x20, #0x2
  8c:	b.cs	9c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x9c>  // b.hs, b.nlast
  90:	mov	x8, x11
  94:	mov	x9, x20
  98:	b	d4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xd4>
  9c:	and	x10, x20, #0xfffffffffffffffe
  a0:	and	x9, x20, #0x1
  a4:	add	x8, x11, x10, lsl #4
  a8:	add	x11, x11, #0x10
  ac:	mov	x12, x10
  b0:	stur	wzr, [x11, #-16]
  b4:	str	wzr, [x11]
  b8:	stur	xzr, [x11, #-8]
  bc:	str	xzr, [x11, #8]
  c0:	subs	x12, x12, #0x2
  c4:	add	x11, x11, #0x20
  c8:	b.ne	b0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xb0>  // b.any
  cc:	cmp	x10, x20
  d0:	b.eq	e8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xe8>  // b.none
  d4:	str	wzr, [x8]
  d8:	str	xzr, [x8, #8]
  dc:	subs	x9, x9, #0x1
  e0:	add	x8, x8, #0x10
  e4:	b.ne	d4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xd4>  // b.any
  e8:	str	x8, [x19, #8]
  ec:	b	194 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x194>
  f0:	mov	x21, xzr
  f4:	add	x23, x21, x23, lsl #4
  f8:	cmp	x20, #0x2
  fc:	mov	x8, x23
 100:	mov	x9, x20
 104:	b.cc	140 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x140>  // b.lo, b.ul, b.last
 108:	and	x10, x20, #0xfffffffffffffffe
 10c:	and	x9, x20, #0x1
 110:	add	x8, x23, x10, lsl #4
 114:	add	x11, x23, #0x10
 118:	mov	x12, x10
 11c:	stur	wzr, [x11, #-16]
 120:	str	wzr, [x11]
 124:	stur	xzr, [x11, #-8]
 128:	str	xzr, [x11, #8]
 12c:	subs	x12, x12, #0x2
 130:	add	x11, x11, #0x20
 134:	b.ne	11c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x11c>  // b.any
 138:	cmp	x10, x20
 13c:	b.eq	154 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x154>  // b.none
 140:	str	wzr, [x8]
 144:	str	xzr, [x8, #8]
 148:	subs	x9, x9, #0x1
 14c:	add	x8, x8, #0x10
 150:	b.ne	140 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x140>  // b.any
 154:	ldp	x0, x8, [x19]
 158:	cmp	x0, x8
 15c:	b.eq	17c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x17c>  // b.none
 160:	mov	x9, x21
 164:	ldr	q0, [x0], #16
 168:	cmp	x8, x0
 16c:	str	q0, [x9]
 170:	add	x9, x9, #0x10
 174:	b.ne	164 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x164>  // b.any
 178:	ldr	x0, [x19]
 17c:	cbz	x0, 184 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x184>
 180:	bl	0 <_ZdlPv>
 184:	add	x8, x23, x20, lsl #4
 188:	add	x9, x21, x22, lsl #4
 18c:	stp	x21, x8, [x19]
 190:	str	x9, [x19, #16]
 194:	ldp	x20, x19, [sp, #48]
 198:	ldp	x22, x21, [sp, #32]
 19c:	ldr	x23, [sp, #16]
 1a0:	ldp	x29, x30, [sp], #64
 1a4:	ret
 1a8:	adrp	x0, 0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm>
 1ac:	add	x0, x0, #0x0
 1b0:	bl	0 <_ZSt20__throw_length_errorPKc>

InstrBuilder.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	str	x21, [sp, #16]
       8:	stp	x20, x19, [sp, #32]
       c:	mov	x29, sp
      10:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
      14:	ldr	d0, [x9]
      18:	mov	x8, x1
      1c:	stp	x1, x2, [x0]
      20:	add	x1, x0, #0x30
      24:	mov	x21, x0
      28:	mov	w9, #0x101                 	// #257
      2c:	stp	x3, x4, [x0, #16]
      30:	str	x1, [x21, #32]!
      34:	stp	xzr, xzr, [x0, #120]
      38:	str	xzr, [x0, #112]
      3c:	str	wzr, [x0, #136]
      40:	str	wzr, [x0, #168]
      44:	stp	xzr, xzr, [x0, #152]
      48:	str	xzr, [x0, #144]
      4c:	str	d0, [x0, #40]
      50:	strh	w9, [x0, #176]
      54:	mov	x19, x0
      58:	ldr	x0, [x8, #152]
      5c:	ldr	w20, [x0, #48]
      60:	cbz	w20, 8c <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0x8c>
      64:	cmp	w20, #0x9
      68:	b.cc	94 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0x94>  // b.lo, b.ul, b.last
      6c:	mov	w3, #0x8                   	// #8
      70:	mov	x0, x21
      74:	mov	x2, x20
      78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
      7c:	ldr	w8, [x19, #40]
      80:	cmp	w8, w20
      84:	b.ne	a0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0xa0>  // b.any
      88:	b	bc <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0xbc>
      8c:	mov	x20, xzr
      90:	b	d8 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0xd8>
      94:	mov	w8, wzr
      98:	cmp	w8, w20
      9c:	b.eq	bc <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0xbc>  // b.none
      a0:	ldr	x9, [x21]
      a4:	mov	w8, w8
      a8:	sub	x10, x20, x8
      ac:	lsl	x2, x10, #3
      b0:	add	x0, x9, x8, lsl #3
      b4:	mov	w1, wzr
      b8:	bl	0 <memset>
      bc:	ldr	w8, [x19, #44]
      c0:	cmp	w8, w20
      c4:	b.cc	ec <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0xec>  // b.lo, b.ul, b.last
      c8:	ldr	x8, [x19]
      cc:	str	w20, [x19, #40]
      d0:	ldr	x1, [x19, #32]
      d4:	ldr	x0, [x8, #152]
      d8:	mov	x2, x20
      dc:	ldp	x20, x19, [sp, #32]
      e0:	ldr	x21, [sp, #16]
      e4:	ldp	x29, x30, [sp], #48
      e8:	b	0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>
      ec:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
      f0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
      f4:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
      f8:	add	x0, x0, #0x0
      fc:	add	x1, x1, #0x0
     100:	add	x3, x3, #0x0
     104:	mov	w2, #0x43                  	// #67
     108:	bl	0 <__assert_fail>

000000000000010c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj>:
     10c:	sub	sp, sp, #0xc0
     110:	stp	x29, x30, [sp, #96]
     114:	stp	x28, x27, [sp, #112]
     118:	stp	x26, x25, [sp, #128]
     11c:	stp	x24, x23, [sp, #144]
     120:	stp	x22, x21, [sp, #160]
     124:	stp	x20, x19, [sp, #176]
     128:	add	x29, sp, #0x60
     12c:	ldr	x9, [x0, #8]
     130:	ldr	w8, [x2]
     134:	ldr	w10, [x9, #24]
     138:	cmp	w10, w8
     13c:	b.ls	c20 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xb14>  // b.plast
     140:	ldr	x10, [x0]
     144:	mov	x28, x0
     148:	ldr	x10, [x10, #152]
     14c:	ldr	x11, [x10, #40]
     150:	cbz	x11, c40 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xb34>
     154:	ldr	w10, [x10, #52]
     158:	cmp	w10, w3
     15c:	b.ls	c60 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xb54>  // b.plast
     160:	ldr	x9, [x9]
     164:	mov	x23, x2
     168:	mov	x20, x1
     16c:	mov	w12, w3
     170:	add	x10, x9, x8, lsl #6
     174:	mov	x9, x10
     178:	ldr	x8, [x9, #32]!
     17c:	ldurb	w22, [x9, #-28]
     180:	stur	x9, [x29, #-16]
     184:	cbz	x8, 19c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x90>
     188:	mov	w21, #0xffffffff            	// #-1
     18c:	add	w21, w21, #0x1
     190:	ldrh	w9, [x8, w21, uxtw #1]
     194:	cbnz	w9, 18c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x80>
     198:	b	1a0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x94>
     19c:	mov	w21, wzr
     1a0:	mov	w8, #0x18                  	// #24
     1a4:	str	x11, [sp, #40]
     1a8:	str	x12, [sp, #24]
     1ac:	madd	x8, x12, x8, x11
     1b0:	ldrh	w9, [x8, #16]!
     1b4:	mov	x0, x20
     1b8:	stur	x9, [x29, #-8]
     1bc:	str	x8, [sp, #48]
     1c0:	ldr	w8, [x10, #8]!
     1c4:	ldr	w9, [x23, #24]
     1c8:	str	x10, [sp, #16]
     1cc:	mov	x11, x10
     1d0:	ldrh	w10, [x11, #-6]!
     1d4:	ubfx	w8, w8, #2, #1
     1d8:	str	x11, [sp]
     1dc:	add	w11, w21, w22
     1e0:	add	w8, w8, w11
     1e4:	sub	w9, w9, w10
     1e8:	add	w1, w8, w9
     1ec:	str	w11, [sp, #12]
     1f0:	str	w9, [sp, #36]
     1f4:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     1f8:	mov	w19, wzr
     1fc:	stp	x23, x28, [x29, #-40]
     200:	cbz	w22, 444 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x338>
     204:	ldr	w8, [x23, #24]
     208:	cbz	w8, 444 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x338>
     20c:	ldr	x10, [sp, #40]
     210:	ldr	x11, [sp, #24]
     214:	mov	w9, #0x18                  	// #24
     218:	mov	x24, xzr
     21c:	mov	x25, xzr
     220:	madd	x9, x11, x9, x10
     224:	mov	w19, wzr
     228:	mov	w26, #0x14                  	// #20
     22c:	add	x9, x9, #0xe
     230:	stur	x9, [x29, #-24]
     234:	ldr	x9, [x23, #16]
     238:	ldrb	w9, [x9, x24]
     23c:	cmp	w9, #0x1
     240:	b.ne	428 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x31c>  // b.any
     244:	ldr	w8, [x20, #8]
     248:	cmp	w8, w19
     24c:	b.ls	b80 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa74>  // b.plast
     250:	ldr	x27, [x20]
     254:	ldur	x8, [x29, #-8]
     258:	mov	w28, w19
     25c:	umaddl	x23, w19, w26, x27
     260:	cmp	w19, w8
     264:	str	w25, [x23]
     268:	b.cs	2a4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x198>  // b.hs, b.nlast
     26c:	ldr	x8, [sp, #48]
     270:	ldrh	w8, [x8]
     274:	cmp	w19, w8
     278:	b.cs	bc0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xab4>  // b.hs, b.nlast
     27c:	ldp	x8, x9, [x29, #-32]
     280:	ldr	x8, [x8]
     284:	ldrh	w9, [x9]
     288:	ldr	x8, [x8, #136]
     28c:	add	w9, w19, w9
     290:	lsl	x10, x9, #2
     294:	ldrsh	w10, [x8, x10]
     298:	tbnz	w10, #31, 2b8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x1ac>
     29c:	and	w10, w10, #0xffff
     2a0:	b	2bc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x1b0>
     2a4:	ldr	w9, [x20, #312]
     2a8:	mov	w8, wzr
     2ac:	madd	x10, x28, x26, x27
     2b0:	str	w9, [x10, #4]
     2b4:	b	2cc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x1c0>
     2b8:	ldr	w10, [x20, #312]
     2bc:	madd	x11, x28, x26, x27
     2c0:	str	w10, [x11, #4]
     2c4:	add	x8, x8, x9, lsl #2
     2c8:	ldrh	w8, [x8, #2]
     2cc:	madd	x9, x28, x26, x27
     2d0:	str	w8, [x9, #12]
     2d4:	strb	wzr, [x9, #16]
     2d8:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     2dc:	ldr	x8, [x8]
     2e0:	ldrb	w8, [x8]
     2e4:	cbz	w8, 41c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x310>
     2e8:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     2ec:	add	x0, x0, #0x0
     2f0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     2f4:	tbz	w0, #0, 41c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x310>
     2f8:	bl	0 <_ZN4llvm4dbgsEv>
     2fc:	ldp	x9, x8, [x0, #16]
     300:	sub	x9, x9, x8
     304:	cmp	x9, #0x10
     308:	b.hi	320 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x214>  // b.pmore
     30c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     310:	mov	w2, #0x11                  	// #17
     314:	add	x1, x1, #0x0
     318:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     31c:	b	344 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x238>
     320:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     324:	add	x9, x9, #0x0
     328:	ldr	q0, [x9]
     32c:	mov	w9, #0x3d                  	// #61
     330:	strb	w9, [x8, #16]
     334:	str	q0, [x8]
     338:	ldr	x8, [x0, #24]
     33c:	add	x8, x8, #0x11
     340:	str	x8, [x0, #24]
     344:	ldrsw	x1, [x23]
     348:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     34c:	ldp	x9, x8, [x0, #16]
     350:	sub	x9, x9, x8
     354:	cmp	x9, #0x9
     358:	b.hi	370 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x264>  // b.pmore
     35c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     360:	mov	w2, #0xa                   	// #10
     364:	add	x1, x1, #0x0
     368:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     36c:	b	394 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x288>
     370:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     374:	add	x9, x9, #0x0
     378:	ldr	x9, [x9]
     37c:	mov	w10, #0x3d79                	// #15737
     380:	strh	w10, [x8, #8]
     384:	str	x9, [x8]
     388:	ldr	x8, [x0, #24]
     38c:	add	x8, x8, #0xa
     390:	str	x8, [x0, #24]
     394:	madd	x8, x28, x26, x27
     398:	ldr	w1, [x8, #4]
     39c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     3a0:	ldp	x9, x8, [x0, #16]
     3a4:	sub	x9, x9, x8
     3a8:	cmp	x9, #0x11
     3ac:	b.hi	3c4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x2b8>  // b.pmore
     3b0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     3b4:	mov	w2, #0x12                  	// #18
     3b8:	add	x1, x1, #0x0
     3bc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     3c0:	b	3e8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x2dc>
     3c4:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     3c8:	add	x9, x9, #0x0
     3cc:	ldr	q0, [x9]
     3d0:	mov	w9, #0x3d44                	// #15684
     3d4:	strh	w9, [x8, #16]
     3d8:	str	q0, [x8]
     3dc:	ldr	x8, [x0, #24]
     3e0:	add	x8, x8, #0x12
     3e4:	str	x8, [x0, #24]
     3e8:	madd	x8, x28, x26, x27
     3ec:	ldr	w1, [x8, #12]
     3f0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     3f4:	ldp	x9, x8, [x0, #16]
     3f8:	cmp	x8, x9
     3fc:	b.cs	414 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x308>  // b.hs, b.nlast
     400:	add	x9, x8, #0x1
     404:	str	x9, [x0, #24]
     408:	mov	w9, #0xa                   	// #10
     40c:	strb	w9, [x8]
     410:	b	41c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x310>
     414:	mov	w1, #0xa                   	// #10
     418:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     41c:	ldp	x23, x28, [x29, #-40]
     420:	add	w19, w19, #0x1
     424:	ldr	w8, [x23, #24]
     428:	cmp	w19, w22
     42c:	b.cs	444 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x338>  // b.hs, b.nlast
     430:	add	x25, x25, #0x1
     434:	mov	w9, w8
     438:	cmp	x25, x9
     43c:	add	x24, x24, #0x10
     440:	b.cc	234 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x128>  // b.lo, b.ul, b.last
     444:	cmp	w19, w22
     448:	b.ne	c80 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xb74>  // b.any
     44c:	cbz	w21, 7a4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x698>
     450:	ldr	x10, [sp, #40]
     454:	ldr	x11, [sp, #24]
     458:	mov	w12, #0x18                  	// #24
     45c:	add	x8, x22, w22, uxtw #2
     460:	mov	w9, #0x14                  	// #20
     464:	madd	x10, x11, x12, x10
     468:	lsl	x19, x8, #2
     46c:	umull	x8, w21, w9
     470:	mov	x25, xzr
     474:	mov	x23, xzr
     478:	mov	w26, #0xffffffff            	// #-1
     47c:	stur	x8, [x29, #-24]
     480:	add	x8, x10, #0xe
     484:	str	x8, [sp, #40]
     488:	b	4b4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x3a8>
     48c:	add	x9, x8, #0x1
     490:	str	x9, [x0, #24]
     494:	mov	w9, #0xa                   	// #10
     498:	strb	w9, [x8]
     49c:	ldur	x8, [x29, #-24]
     4a0:	add	x25, x25, #0x14
     4a4:	add	x23, x23, #0x1
     4a8:	sub	w26, w26, #0x1
     4ac:	cmp	x8, x25
     4b0:	b.eq	7a4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x698>  // b.none
     4b4:	ldr	w8, [x20, #8]
     4b8:	add	x9, x22, x23
     4bc:	cmp	x9, x8
     4c0:	b.cs	b80 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa74>  // b.hs, b.nlast
     4c4:	ldr	x24, [x20]
     4c8:	add	x27, x24, x19
     4cc:	add	x21, x27, x25
     4d0:	str	w26, [x21]
     4d4:	ldp	x8, x10, [x29, #-16]
     4d8:	ldr	x8, [x8]
     4dc:	cmp	x9, x10
     4e0:	ldrh	w8, [x8, x23, lsl #1]
     4e4:	strh	w8, [x21, #8]
     4e8:	b.cs	528 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x41c>  // b.hs, b.nlast
     4ec:	ldr	x10, [sp, #48]
     4f0:	ldrh	w10, [x10]
     4f4:	cmp	x9, x10
     4f8:	b.cs	bc0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xab4>  // b.hs, b.nlast
     4fc:	ldr	x10, [sp, #40]
     500:	ldr	x9, [x28]
     504:	add	w11, w22, w23
     508:	ldrh	w10, [x10]
     50c:	ldr	x9, [x9, #136]
     510:	add	w10, w11, w10
     514:	lsl	x11, x10, #2
     518:	ldrsh	w11, [x9, x11]
     51c:	tbnz	w11, #31, 538 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x42c>
     520:	and	w11, w11, #0xffff
     524:	b	53c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x430>
     528:	ldr	w10, [x20, #312]
     52c:	mov	w9, wzr
     530:	str	w10, [x21, #4]
     534:	b	550 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x444>
     538:	ldr	w11, [x20, #312]
     53c:	add	x12, x24, x19
     540:	add	x12, x12, x25
     544:	str	w11, [x12, #4]
     548:	add	x9, x9, x10, lsl #2
     54c:	ldrh	w9, [x9, #2]
     550:	add	x10, x24, x19
     554:	add	x10, x10, x25
     558:	str	w9, [x10, #12]
     55c:	strb	wzr, [x10, #16]
     560:	cbz	w8, ba0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa94>
     564:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     568:	ldr	x8, [x8]
     56c:	ldrb	w8, [x8]
     570:	cbz	w8, 49c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x390>
     574:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     578:	add	x0, x0, #0x0
     57c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     580:	tbz	w0, #0, 49c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x390>
     584:	bl	0 <_ZN4llvm4dbgsEv>
     588:	ldp	x9, x8, [x0, #16]
     58c:	sub	x9, x9, x8
     590:	cmp	x9, #0x10
     594:	b.hi	5ac <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x4a0>  // b.pmore
     598:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     59c:	mov	w2, #0x11                  	// #17
     5a0:	add	x1, x1, #0x0
     5a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5a8:	b	5d0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x4c4>
     5ac:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     5b0:	add	x9, x9, #0x0
     5b4:	ldr	q0, [x9]
     5b8:	mov	w9, #0x3d                  	// #61
     5bc:	strb	w9, [x8, #16]
     5c0:	str	q0, [x8]
     5c4:	ldr	x8, [x0, #24]
     5c8:	add	x8, x8, #0x11
     5cc:	str	x8, [x0, #24]
     5d0:	ldr	w8, [x27, x25]
     5d4:	mvn	w8, w8
     5d8:	sxtw	x1, w8
     5dc:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     5e0:	ldp	x9, x8, [x0, #16]
     5e4:	mov	x27, x0
     5e8:	sub	x9, x9, x8
     5ec:	cmp	x9, #0x9
     5f0:	b.hi	610 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x504>  // b.pmore
     5f4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     5f8:	mov	w2, #0xa                   	// #10
     5fc:	mov	x0, x27
     600:	add	x1, x1, #0x0
     604:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     608:	mov	x27, x0
     60c:	b	634 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x528>
     610:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     614:	add	x9, x9, #0x0
     618:	ldr	x9, [x9]
     61c:	mov	w10, #0x3d67                	// #15719
     620:	strh	w10, [x8, #8]
     624:	str	x9, [x8]
     628:	ldr	x8, [x27, #24]
     62c:	add	x8, x8, #0xa
     630:	str	x8, [x27, #24]
     634:	ldr	x9, [x28, #16]
     638:	ldrh	w8, [x21, #8]
     63c:	ldr	w10, [x9, #8]
     640:	cmp	w10, w8
     644:	b.ls	c00 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xaf4>  // b.plast
     648:	ldr	x10, [x9]
     64c:	mov	w11, #0x18                  	// #24
     650:	mul	x8, x8, x11
     654:	ldr	x9, [x9, #64]
     658:	ldr	w8, [x10, x8]
     65c:	add	x28, x9, x8
     660:	cbz	x9, 69c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x590>
     664:	mov	x0, x28
     668:	bl	0 <strlen>
     66c:	mov	x21, x0
     670:	ldp	x8, x0, [x27, #16]
     674:	sub	x8, x8, x0
     678:	cmp	x21, x8
     67c:	b.ls	6b0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5a4>  // b.plast
     680:	mov	x0, x27
     684:	mov	x1, x28
     688:	mov	x2, x21
     68c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     690:	mov	x27, x0
     694:	ldr	x0, [x0, #24]
     698:	b	6cc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5c0>
     69c:	mov	x21, xzr
     6a0:	ldp	x8, x0, [x27, #16]
     6a4:	sub	x8, x8, x0
     6a8:	cmp	x21, x8
     6ac:	b.hi	680 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x574>  // b.pmore
     6b0:	cbz	x21, 6cc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5c0>
     6b4:	mov	x1, x28
     6b8:	mov	x2, x21
     6bc:	bl	0 <memcpy>
     6c0:	ldr	x8, [x27, #24]
     6c4:	add	x0, x8, x21
     6c8:	str	x0, [x27, #24]
     6cc:	ldr	x8, [x27, #16]
     6d0:	ldur	x28, [x29, #-32]
     6d4:	sub	x8, x8, x0
     6d8:	cmp	x8, #0x9
     6dc:	b.hi	6fc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5f0>  // b.pmore
     6e0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     6e4:	mov	w2, #0xa                   	// #10
     6e8:	mov	x0, x27
     6ec:	add	x1, x1, #0x0
     6f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     6f4:	mov	x27, x0
     6f8:	b	720 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x614>
     6fc:	adrp	x8, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     700:	add	x8, x8, #0x0
     704:	ldr	x8, [x8]
     708:	mov	w9, #0x3d79                	// #15737
     70c:	strh	w9, [x0, #8]
     710:	str	x8, [x0]
     714:	ldr	x8, [x27, #24]
     718:	add	x8, x8, #0xa
     71c:	str	x8, [x27, #24]
     720:	add	x8, x24, x19
     724:	add	x8, x8, x25
     728:	ldr	w1, [x8, #4]
     72c:	mov	x0, x27
     730:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     734:	ldp	x9, x8, [x0, #16]
     738:	sub	x9, x9, x8
     73c:	cmp	x9, #0x11
     740:	b.hi	758 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x64c>  // b.pmore
     744:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     748:	mov	w2, #0x12                  	// #18
     74c:	add	x1, x1, #0x0
     750:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     754:	b	77c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x670>
     758:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     75c:	add	x9, x9, #0x0
     760:	ldr	q0, [x9]
     764:	mov	w9, #0x3d44                	// #15684
     768:	strh	w9, [x8, #16]
     76c:	str	q0, [x8]
     770:	ldr	x8, [x0, #24]
     774:	add	x8, x8, #0x12
     778:	str	x8, [x0, #24]
     77c:	add	x8, x24, x19
     780:	add	x8, x8, x25
     784:	ldr	w1, [x8, #12]
     788:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     78c:	ldp	x9, x8, [x0, #16]
     790:	cmp	x8, x9
     794:	b.cc	48c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x380>  // b.lo, b.ul, b.last
     798:	mov	w1, #0xa                   	// #10
     79c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     7a0:	b	49c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x390>
     7a4:	ldr	x23, [sp, #16]
     7a8:	ldur	x27, [x29, #-40]
     7ac:	ldr	w24, [sp, #12]
     7b0:	ldrb	w8, [x23]
     7b4:	tbz	w8, #2, 92c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x820>
     7b8:	ldr	w8, [x20, #8]
     7bc:	cmp	w8, w24
     7c0:	b.ls	b80 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa74>  // b.plast
     7c4:	ldr	x8, [sp]
     7c8:	ldr	x9, [x20]
     7cc:	mov	w10, #0x14                  	// #20
     7d0:	ldrh	w8, [x8]
     7d4:	umaddl	x22, w24, w10, x9
     7d8:	mov	w9, #0x1                   	// #1
     7dc:	mov	x21, x22
     7e0:	sub	w8, w8, #0x1
     7e4:	str	w8, [x22]
     7e8:	ldr	w8, [x20, #312]
     7ec:	mov	x19, x22
     7f0:	str	w8, [x21, #4]!
     7f4:	str	wzr, [x19, #12]!
     7f8:	strb	w9, [x22, #16]
     7fc:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     800:	ldr	x8, [x8]
     804:	ldrb	w8, [x8]
     808:	cbz	w8, 92c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x820>
     80c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     810:	add	x0, x0, #0x0
     814:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     818:	tbz	w0, #0, 92c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x820>
     81c:	bl	0 <_ZN4llvm4dbgsEv>
     820:	ldp	x9, x8, [x0, #16]
     824:	sub	x9, x9, x8
     828:	cmp	x9, #0x10
     82c:	b.hi	844 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x738>  // b.pmore
     830:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     834:	add	x1, x1, #0x0
     838:	mov	w2, #0x11                  	// #17
     83c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     840:	b	868 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x75c>
     844:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     848:	add	x9, x9, #0x0
     84c:	ldr	q0, [x9]
     850:	mov	w9, #0x3d                  	// #61
     854:	strb	w9, [x8, #16]
     858:	str	q0, [x8]
     85c:	ldr	x8, [x0, #24]
     860:	add	x8, x8, #0x11
     864:	str	x8, [x0, #24]
     868:	ldrsw	x1, [x22]
     86c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     870:	ldp	x9, x8, [x0, #16]
     874:	sub	x9, x9, x8
     878:	cmp	x9, #0x9
     87c:	b.hi	894 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x788>  // b.pmore
     880:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     884:	add	x1, x1, #0x0
     888:	mov	w2, #0xa                   	// #10
     88c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     890:	b	8b8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7ac>
     894:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     898:	add	x9, x9, #0x0
     89c:	ldr	x9, [x9]
     8a0:	mov	w10, #0x3d79                	// #15737
     8a4:	strh	w10, [x8, #8]
     8a8:	str	x9, [x8]
     8ac:	ldr	x8, [x0, #24]
     8b0:	add	x8, x8, #0xa
     8b4:	str	x8, [x0, #24]
     8b8:	ldr	w1, [x21]
     8bc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     8c0:	ldp	x9, x8, [x0, #16]
     8c4:	sub	x9, x9, x8
     8c8:	cmp	x9, #0x11
     8cc:	b.hi	8e4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7d8>  // b.pmore
     8d0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     8d4:	add	x1, x1, #0x0
     8d8:	mov	w2, #0x12                  	// #18
     8dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     8e0:	b	908 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7fc>
     8e4:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     8e8:	add	x9, x9, #0x0
     8ec:	ldr	q0, [x9]
     8f0:	mov	w9, #0x3d44                	// #15684
     8f4:	strh	w9, [x8, #16]
     8f8:	str	q0, [x8]
     8fc:	ldr	x8, [x0, #24]
     900:	add	x8, x8, #0x12
     904:	str	x8, [x0, #24]
     908:	ldr	w1, [x19]
     90c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     910:	ldp	x9, x8, [x0, #16]
     914:	cmp	x8, x9
     918:	b.cs	b50 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa44>  // b.hs, b.nlast
     91c:	add	x9, x8, #0x1
     920:	mov	w10, #0xa                   	// #10
     924:	str	x9, [x0, #24]
     928:	strb	w10, [x8]
     92c:	ldr	w10, [sp, #36]
     930:	cbz	w10, b60 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa54>
     934:	ldr	x8, [x23]
     938:	mov	w9, #0x8c0000              	// #9175040
     93c:	and	x9, x8, x9
     940:	ubfx	w8, w8, #2, #1
     944:	cmp	x9, #0x80, lsl #12
     948:	add	w19, w8, w24
     94c:	b.ne	978 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x86c>  // b.any
     950:	mov	w1, w19
     954:	mov	x0, x20
     958:	ldp	x20, x19, [sp, #176]
     95c:	ldp	x22, x21, [sp, #160]
     960:	ldp	x24, x23, [sp, #144]
     964:	ldp	x26, x25, [sp, #128]
     968:	ldp	x28, x27, [sp, #112]
     96c:	ldp	x29, x30, [sp, #96]
     970:	add	sp, sp, #0xc0
     974:	b	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     978:	ldr	x8, [sp]
     97c:	adrp	x23, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     980:	mov	x21, xzr
     984:	mov	w25, #0x14                  	// #20
     988:	ldrh	w22, [x8]
     98c:	add	x23, x23, #0x0
     990:	lsl	x26, x22, #4
     994:	b	9ac <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x8a0>
     998:	ldur	x27, [x29, #-40]
     99c:	add	x21, x21, #0x1
     9a0:	cmp	w21, w10
     9a4:	add	x26, x26, #0x10
     9a8:	b.cs	950 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x844>  // b.hs, b.nlast
     9ac:	ldr	w8, [x27, #24]
     9b0:	add	x9, x22, x21
     9b4:	cmp	x9, x8
     9b8:	b.cs	be0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xad4>  // b.hs, b.nlast
     9bc:	ldr	x8, [x27, #16]
     9c0:	ldrb	w8, [x8, x26]
     9c4:	cmp	w8, #0x1
     9c8:	b.ne	99c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x890>  // b.any
     9cc:	ldr	w8, [x20, #8]
     9d0:	cmp	w8, w19
     9d4:	b.ls	b80 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa74>  // b.plast
     9d8:	ldr	x8, [x20]
     9dc:	add	w9, w22, w21
     9e0:	umaddl	x27, w19, w25, x8
     9e4:	str	w9, [x27]
     9e8:	ldr	w8, [x20, #312]
     9ec:	mov	x24, x27
     9f0:	mov	x28, x27
     9f4:	add	w19, w19, #0x1
     9f8:	str	w8, [x24, #4]!
     9fc:	str	wzr, [x28, #12]!
     a00:	strb	wzr, [x27, #16]
     a04:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     a08:	ldr	x8, [x8]
     a0c:	ldrb	w8, [x8]
     a10:	cbz	w8, 998 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x88c>
     a14:	mov	x0, x23
     a18:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     a1c:	tbz	w0, #0, a48 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x93c>
     a20:	bl	0 <_ZN4llvm4dbgsEv>
     a24:	ldp	x9, x8, [x0, #16]
     a28:	sub	x9, x9, x8
     a2c:	cmp	x9, #0x10
     a30:	b.hi	a50 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x944>  // b.pmore
     a34:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     a38:	mov	w2, #0x11                  	// #17
     a3c:	add	x1, x1, #0x0
     a40:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a44:	b	a74 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x968>
     a48:	ldur	x27, [x29, #-40]
     a4c:	b	b48 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa3c>
     a50:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     a54:	add	x9, x9, #0x0
     a58:	ldr	q0, [x9]
     a5c:	mov	w9, #0x3d                  	// #61
     a60:	strb	w9, [x8, #16]
     a64:	str	q0, [x8]
     a68:	ldr	x8, [x0, #24]
     a6c:	add	x8, x8, #0x11
     a70:	str	x8, [x0, #24]
     a74:	ldrsw	x1, [x27]
     a78:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     a7c:	ldp	x9, x8, [x0, #16]
     a80:	sub	x9, x9, x8
     a84:	cmp	x9, #0x9
     a88:	b.hi	aa0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x994>  // b.pmore
     a8c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     a90:	mov	w2, #0xa                   	// #10
     a94:	add	x1, x1, #0x0
     a98:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a9c:	b	ac4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x9b8>
     aa0:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     aa4:	add	x9, x9, #0x0
     aa8:	ldr	x9, [x9]
     aac:	mov	w10, #0x3d79                	// #15737
     ab0:	strh	w10, [x8, #8]
     ab4:	str	x9, [x8]
     ab8:	ldr	x8, [x0, #24]
     abc:	add	x8, x8, #0xa
     ac0:	str	x8, [x0, #24]
     ac4:	ldr	w1, [x24]
     ac8:	ldur	x27, [x29, #-40]
     acc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ad0:	ldp	x9, x8, [x0, #16]
     ad4:	sub	x9, x9, x8
     ad8:	cmp	x9, #0x11
     adc:	b.hi	af4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x9e8>  // b.pmore
     ae0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     ae4:	mov	w2, #0x12                  	// #18
     ae8:	add	x1, x1, #0x0
     aec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     af0:	b	b18 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa0c>
     af4:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     af8:	add	x9, x9, #0x0
     afc:	ldr	q0, [x9]
     b00:	mov	w9, #0x3d44                	// #15684
     b04:	strh	w9, [x8, #16]
     b08:	str	q0, [x8]
     b0c:	ldr	x8, [x0, #24]
     b10:	add	x8, x8, #0x12
     b14:	str	x8, [x0, #24]
     b18:	ldr	w1, [x28]
     b1c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     b20:	ldp	x9, x8, [x0, #16]
     b24:	cmp	x8, x9
     b28:	b.cs	b40 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa34>  // b.hs, b.nlast
     b2c:	add	x9, x8, #0x1
     b30:	str	x9, [x0, #24]
     b34:	mov	w9, #0xa                   	// #10
     b38:	strb	w9, [x8]
     b3c:	b	b48 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa3c>
     b40:	mov	w1, #0xa                   	// #10
     b44:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     b48:	ldr	w10, [sp, #36]
     b4c:	b	99c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x890>
     b50:	mov	w1, #0xa                   	// #10
     b54:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     b58:	ldr	w10, [sp, #36]
     b5c:	cbnz	w10, 934 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x828>
     b60:	ldp	x20, x19, [sp, #176]
     b64:	ldp	x22, x21, [sp, #160]
     b68:	ldp	x24, x23, [sp, #144]
     b6c:	ldp	x26, x25, [sp, #128]
     b70:	ldp	x28, x27, [sp, #112]
     b74:	ldp	x29, x30, [sp, #96]
     b78:	add	sp, sp, #0xc0
     b7c:	ret
     b80:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b84:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b88:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b8c:	add	x0, x0, #0x0
     b90:	add	x1, x1, #0x0
     b94:	add	x3, x3, #0x0
     b98:	mov	w2, #0x95                  	// #149
     b9c:	bl	0 <__assert_fail>
     ba0:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     ba4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     ba8:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     bac:	add	x0, x0, #0x0
     bb0:	add	x1, x1, #0x0
     bb4:	add	x3, x3, #0x0
     bb8:	mov	w2, #0x166                 	// #358
     bbc:	bl	0 <__assert_fail>
     bc0:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     bc4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     bc8:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     bcc:	add	x0, x0, #0x0
     bd0:	add	x1, x1, #0x0
     bd4:	add	x3, x3, #0x0
     bd8:	mov	w2, #0xac                  	// #172
     bdc:	bl	0 <__assert_fail>
     be0:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     be4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     be8:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     bec:	add	x0, x0, #0x0
     bf0:	add	x1, x1, #0x0
     bf4:	add	x3, x3, #0x0
     bf8:	mov	w2, #0x99                  	// #153
     bfc:	bl	0 <__assert_fail>
     c00:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c04:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c08:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c0c:	add	x0, x0, #0x0
     c10:	add	x1, x1, #0x0
     c14:	add	x3, x3, #0x0
     c18:	mov	w2, #0x1b9                 	// #441
     c1c:	bl	0 <__assert_fail>
     c20:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c24:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c28:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c2c:	add	x0, x0, #0x0
     c30:	add	x1, x1, #0x0
     c34:	add	x3, x3, #0x0
     c38:	mov	w2, #0x2d                  	// #45
     c3c:	bl	0 <__assert_fail>
     c40:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c44:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c48:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c4c:	add	x0, x0, #0x0
     c50:	add	x1, x1, #0x0
     c54:	add	x3, x3, #0x0
     c58:	mov	w2, #0x15b                 	// #347
     c5c:	bl	0 <__assert_fail>
     c60:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c64:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c68:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c6c:	add	x0, x0, #0x0
     c70:	add	x1, x1, #0x0
     c74:	add	x3, x3, #0x0
     c78:	mov	w2, #0x15d                 	// #349
     c7c:	bl	0 <__assert_fail>
     c80:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c84:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c88:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     c8c:	add	x0, x0, #0x0
     c90:	add	x1, x1, #0x0
     c94:	add	x3, x3, #0x0
     c98:	mov	w2, #0x152                 	// #338
     c9c:	bl	0 <__assert_fail>

0000000000000ca0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj>:
     ca0:	sub	sp, sp, #0xc0
     ca4:	stp	x29, x30, [sp, #96]
     ca8:	stp	x28, x27, [sp, #112]
     cac:	stp	x26, x25, [sp, #128]
     cb0:	stp	x24, x23, [sp, #144]
     cb4:	stp	x22, x21, [sp, #160]
     cb8:	stp	x20, x19, [sp, #176]
     cbc:	add	x29, sp, #0x60
     cc0:	ldr	x9, [x0, #8]
     cc4:	ldr	w8, [x2]
     cc8:	stur	w3, [x29, #-12]
     ccc:	str	x0, [sp, #32]
     cd0:	ldr	w10, [x9, #24]
     cd4:	cmp	w10, w8
     cd8:	b.ls	14b4 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x814>  // b.plast
     cdc:	ldr	x9, [x9]
     ce0:	mov	x28, x1
     ce4:	add	x11, x9, x8, lsl #6
     ce8:	mov	x22, x11
     cec:	ldrh	w21, [x22, #2]!
     cf0:	mov	x19, x22
     cf4:	mov	x26, x22
     cf8:	ldrb	w8, [x19, #2]!
     cfc:	ldr	x9, [x26, #22]!
     d00:	stur	w8, [x29, #-40]
     d04:	sub	w8, w21, w8
     d08:	cbz	x9, d20 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x80>
     d0c:	mov	w25, #0xffffffff            	// #-1
     d10:	add	w25, w25, #0x1
     d14:	ldrh	w10, [x9, w25, uxtw #1]
     d18:	cbnz	w10, d10 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x70>
     d1c:	b	d24 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x84>
     d20:	mov	w25, wzr
     d24:	ldr	x10, [x11, #8]!
     d28:	ldr	w9, [x28, #104]
     d2c:	str	x2, [sp, #48]
     d30:	str	x11, [sp, #8]
     d34:	ldr	w11, [x2, #24]
     d38:	sbfx	x10, x10, #2, #1
     d3c:	add	w20, w8, w10
     d40:	add	w27, w20, w25
     d44:	sub	w24, w11, w21
     d48:	add	w23, w27, w24
     d4c:	cmp	w9, w23
     d50:	add	x8, x28, #0x60
     d54:	str	x10, [sp, #16]
     d58:	stur	x8, [x29, #-8]
     d5c:	b.ls	d74 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xd4>  // b.plast
     d60:	ldr	w8, [x28, #108]
     d64:	cmp	w8, w23
     d68:	b.cc	1494 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7f4>  // b.lo, b.ul, b.last
     d6c:	str	w23, [x28, #104]
     d70:	b	dd0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x130>
     d74:	b.cs	dd0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x130>  // b.hs, b.nlast
     d78:	ldr	w8, [x28, #108]
     d7c:	cmp	w8, w23
     d80:	b.cs	da0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x100>  // b.hs, b.nlast
     d84:	ldur	x0, [x29, #-8]
     d88:	mov	w3, #0x10                  	// #16
     d8c:	mov	x2, x23
     d90:	add	x1, x0, #0x10
     d94:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     d98:	ldr	x2, [sp, #48]
     d9c:	ldr	w9, [x28, #104]
     da0:	cmp	w9, w23
     da4:	b.eq	d60 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xc0>  // b.none
     da8:	ldur	x8, [x29, #-8]
     dac:	mov	w9, w9
     db0:	sub	x10, x23, x9
     db4:	lsl	x2, x10, #4
     db8:	ldr	x8, [x8]
     dbc:	mov	w1, wzr
     dc0:	add	x0, x8, x9, lsl #4
     dc4:	bl	0 <memset>
     dc8:	ldr	x2, [sp, #48]
     dcc:	b	d60 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xc0>
     dd0:	str	w21, [sp, #24]
     dd4:	str	x26, [sp, #40]
     dd8:	str	x22, [sp]
     ddc:	stur	x28, [x29, #-24]
     de0:	cbz	w20, f78 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x2d8>
     de4:	ldr	w8, [sp, #24]
     de8:	ldr	x9, [sp, #16]
     dec:	ldrb	w22, [x19]
     df0:	mov	x20, xzr
     df4:	mov	w21, wzr
     df8:	add	w8, w8, w9
     dfc:	ldur	w9, [x29, #-40]
     e00:	lsl	x26, x22, #4
     e04:	sub	w19, w8, w9
     e08:	b	e20 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x180>
     e0c:	ldur	x28, [x29, #-24]
     e10:	add	x20, x20, #0x1
     e14:	cmp	w19, w20
     e18:	add	x26, x26, #0x10
     e1c:	b.eq	f7c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x2dc>  // b.none
     e20:	ldr	w8, [x2, #24]
     e24:	add	x9, x22, x20
     e28:	cmp	x9, x8
     e2c:	b.cs	1454 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7b4>  // b.hs, b.nlast
     e30:	ldr	x8, [x2, #16]
     e34:	ldrb	w8, [x8, x26]
     e38:	cmp	w8, #0x1
     e3c:	b.ne	e10 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x170>  // b.any
     e40:	ldr	w8, [x28, #104]
     e44:	cmp	w8, w21
     e48:	b.ls	1434 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x794>  // b.plast
     e4c:	ldur	x8, [x29, #-8]
     e50:	add	w9, w22, w20
     e54:	ldr	x8, [x8]
     e58:	add	x28, x8, w21, uxtw #4
     e5c:	ldur	w8, [x29, #-12]
     e60:	mov	x23, x28
     e64:	str	w9, [x28]
     e68:	str	w20, [x23, #4]!
     e6c:	str	w8, [x28, #12]
     e70:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     e74:	ldr	x8, [x8]
     e78:	add	w21, w21, #0x1
     e7c:	ldrb	w8, [x8]
     e80:	cbz	w8, e0c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x16c>
     e84:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     e88:	add	x0, x0, #0x0
     e8c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     e90:	tbz	w0, #0, ebc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x21c>
     e94:	bl	0 <_ZN4llvm4dbgsEv>
     e98:	ldp	x9, x8, [x0, #16]
     e9c:	sub	x9, x9, x8
     ea0:	cmp	x9, #0x10
     ea4:	b.hi	ec4 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x224>  // b.pmore
     ea8:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     eac:	mov	w2, #0x11                  	// #17
     eb0:	add	x1, x1, #0x0
     eb4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     eb8:	b	ee8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x248>
     ebc:	ldur	x28, [x29, #-24]
     ec0:	b	f70 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x2d0>
     ec4:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     ec8:	add	x9, x9, #0x0
     ecc:	ldr	q0, [x9]
     ed0:	mov	w9, #0x3d                  	// #61
     ed4:	strb	w9, [x8, #16]
     ed8:	str	q0, [x8]
     edc:	ldr	x8, [x0, #24]
     ee0:	add	x8, x8, #0x11
     ee4:	str	x8, [x0, #24]
     ee8:	ldrsw	x1, [x28]
     eec:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     ef0:	ldp	x9, x8, [x0, #16]
     ef4:	sub	x9, x9, x8
     ef8:	cmp	x9, #0xa
     efc:	b.hi	f14 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x274>  // b.pmore
     f00:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     f04:	mov	w2, #0xb                   	// #11
     f08:	add	x1, x1, #0x0
     f0c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     f10:	b	f3c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x29c>
     f14:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     f18:	add	x9, x9, #0x0
     f1c:	ldr	x9, [x9]
     f20:	mov	w10, #0x6564                	// #25956
     f24:	movk	w10, #0x3d78, lsl #16
     f28:	stur	w10, [x8, #7]
     f2c:	str	x9, [x8]
     f30:	ldr	x8, [x0, #24]
     f34:	add	x8, x8, #0xb
     f38:	str	x8, [x0, #24]
     f3c:	ldr	w1, [x23]
     f40:	ldur	x28, [x29, #-24]
     f44:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     f48:	ldp	x9, x8, [x0, #16]
     f4c:	cmp	x8, x9
     f50:	b.cs	f68 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x2c8>  // b.hs, b.nlast
     f54:	add	x9, x8, #0x1
     f58:	str	x9, [x0, #24]
     f5c:	mov	w9, #0xa                   	// #10
     f60:	strb	w9, [x8]
     f64:	b	f70 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x2d0>
     f68:	mov	w1, #0xa                   	// #10
     f6c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     f70:	ldr	x2, [sp, #48]
     f74:	b	e10 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x170>
     f78:	mov	w21, wzr
     f7c:	ldr	x26, [sp, #40]
     f80:	str	w21, [sp, #28]
     f84:	cbz	w25, 1208 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x568>
     f88:	ldr	w8, [sp, #28]
     f8c:	ldr	x9, [sp, #16]
     f90:	mov	x22, xzr
     f94:	mov	w19, #0xffffffff            	// #-1
     f98:	mov	w21, w8
     f9c:	mov	w8, w25
     fa0:	stur	x8, [x29, #-32]
     fa4:	ldr	w8, [sp, #24]
     fa8:	lsl	x20, x21, #4
     fac:	add	w8, w8, w9
     fb0:	ldur	w9, [x29, #-40]
     fb4:	sub	w8, w8, w9
     fb8:	stur	x8, [x29, #-40]
     fbc:	b	fec <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x34c>
     fc0:	add	x8, x0, #0x1
     fc4:	str	x8, [x28, #24]
     fc8:	mov	w8, #0xa                   	// #10
     fcc:	strb	w8, [x0]
     fd0:	ldur	x28, [x29, #-24]
     fd4:	ldur	x8, [x29, #-32]
     fd8:	add	x22, x22, #0x1
     fdc:	add	x20, x20, #0x10
     fe0:	sub	w19, w19, #0x1
     fe4:	cmp	x8, x22
     fe8:	b.eq	1208 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x568>  // b.none
     fec:	ldr	w8, [x28, #104]
     ff0:	add	x9, x21, x22
     ff4:	cmp	x9, x8
     ff8:	b.cs	1434 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x794>  // b.hs, b.nlast
     ffc:	ldur	x8, [x29, #-8]
    1000:	ldur	x9, [x29, #-40]
    1004:	ldr	x8, [x8]
    1008:	add	w9, w9, w22
    100c:	add	x23, x8, x20
    1010:	stp	w19, w9, [x23]
    1014:	ldr	x8, [x26]
    1018:	ldrh	w8, [x8, x22, lsl #1]
    101c:	strh	w8, [x23, #8]
    1020:	ldur	w8, [x29, #-12]
    1024:	str	w8, [x23, #12]
    1028:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    102c:	ldr	x8, [x8]
    1030:	ldrb	w8, [x8]
    1034:	cbz	w8, fd4 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x334>
    1038:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    103c:	add	x0, x0, #0x0
    1040:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1044:	tbz	w0, #0, fd4 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x334>
    1048:	bl	0 <_ZN4llvm4dbgsEv>
    104c:	ldp	x9, x8, [x0, #16]
    1050:	sub	x9, x9, x8
    1054:	cmp	x9, #0x10
    1058:	b.hi	1070 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x3d0>  // b.pmore
    105c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1060:	mov	w2, #0x11                  	// #17
    1064:	add	x1, x1, #0x0
    1068:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    106c:	b	1094 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x3f4>
    1070:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1074:	add	x9, x9, #0x0
    1078:	ldr	q0, [x9]
    107c:	mov	w9, #0x3d                  	// #61
    1080:	strb	w9, [x8, #16]
    1084:	str	q0, [x8]
    1088:	ldr	x8, [x0, #24]
    108c:	add	x8, x8, #0x11
    1090:	str	x8, [x0, #24]
    1094:	ldr	w8, [x23]
    1098:	mvn	w8, w8
    109c:	sxtw	x1, w8
    10a0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    10a4:	ldp	x9, x8, [x0, #16]
    10a8:	sub	x9, x9, x8
    10ac:	cmp	x9, #0xa
    10b0:	b.hi	10c8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x428>  // b.pmore
    10b4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    10b8:	mov	w2, #0xb                   	// #11
    10bc:	add	x1, x1, #0x0
    10c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    10c4:	b	10f0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x450>
    10c8:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    10cc:	add	x9, x9, #0x0
    10d0:	ldr	x9, [x9]
    10d4:	mov	w10, #0x6564                	// #25956
    10d8:	movk	w10, #0x3d78, lsl #16
    10dc:	stur	w10, [x8, #7]
    10e0:	str	x9, [x8]
    10e4:	ldr	x8, [x0, #24]
    10e8:	add	x8, x8, #0xb
    10ec:	str	x8, [x0, #24]
    10f0:	ldr	w1, [x23, #4]
    10f4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    10f8:	ldp	x9, x8, [x0, #16]
    10fc:	mov	x28, x0
    1100:	sub	x9, x9, x8
    1104:	cmp	x9, #0xc
    1108:	b.hi	1128 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x488>  // b.pmore
    110c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1110:	mov	w2, #0xd                   	// #13
    1114:	mov	x0, x28
    1118:	add	x1, x1, #0x0
    111c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1120:	mov	x28, x0
    1124:	b	114c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x4ac>
    1128:	adrp	x10, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    112c:	add	x10, x10, #0x0
    1130:	ldur	x9, [x10, #5]
    1134:	ldr	x10, [x10]
    1138:	stur	x9, [x8, #5]
    113c:	str	x10, [x8]
    1140:	ldr	x8, [x28, #24]
    1144:	add	x8, x8, #0xd
    1148:	str	x8, [x28, #24]
    114c:	ldr	x8, [sp, #32]
    1150:	ldrh	w9, [x23, #8]
    1154:	ldr	x8, [x8, #16]
    1158:	ldr	w10, [x8, #8]
    115c:	cmp	w10, w9
    1160:	b.ls	1474 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7d4>  // b.plast
    1164:	ldr	x10, [x8]
    1168:	mov	w11, #0x18                  	// #24
    116c:	mul	x9, x9, x11
    1170:	ldr	x8, [x8, #64]
    1174:	ldr	w9, [x10, x9]
    1178:	add	x23, x8, x9
    117c:	cbz	x8, 11b8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x518>
    1180:	mov	x0, x23
    1184:	bl	0 <strlen>
    1188:	mov	x26, x0
    118c:	ldp	x8, x0, [x28, #16]
    1190:	sub	x8, x8, x0
    1194:	cmp	x26, x8
    1198:	b.ls	11cc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x52c>  // b.plast
    119c:	mov	x0, x28
    11a0:	mov	x1, x23
    11a4:	mov	x2, x26
    11a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    11ac:	mov	x28, x0
    11b0:	ldr	x0, [x0, #24]
    11b4:	b	11e8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x548>
    11b8:	mov	x26, xzr
    11bc:	ldp	x8, x0, [x28, #16]
    11c0:	sub	x8, x8, x0
    11c4:	cmp	x26, x8
    11c8:	b.hi	119c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x4fc>  // b.pmore
    11cc:	cbz	x26, 11e8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x548>
    11d0:	mov	x1, x23
    11d4:	mov	x2, x26
    11d8:	bl	0 <memcpy>
    11dc:	ldr	x8, [x28, #24]
    11e0:	add	x0, x8, x26
    11e4:	str	x0, [x28, #24]
    11e8:	ldr	x8, [x28, #16]
    11ec:	ldr	x26, [sp, #40]
    11f0:	cmp	x0, x8
    11f4:	b.cc	fc0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x320>  // b.lo, b.ul, b.last
    11f8:	mov	w1, #0xa                   	// #10
    11fc:	mov	x0, x28
    1200:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1204:	b	fd0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x330>
    1208:	ldr	x8, [sp, #8]
    120c:	mov	w9, #0x8c0000              	// #9175040
    1210:	ldr	x8, [x8]
    1214:	and	x8, x8, x9
    1218:	cmp	x8, #0x40, lsl #12
    121c:	ldr	w8, [sp, #28]
    1220:	add	w19, w8, w25
    1224:	b.eq	1398 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6f8>  // b.none
    1228:	cbz	w24, 1398 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6f8>
    122c:	ldr	x8, [sp]
    1230:	ldr	x9, [sp, #48]
    1234:	adrp	x23, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1238:	adrp	x26, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    123c:	ldrh	w20, [x8]
    1240:	add	x23, x23, #0x0
    1244:	add	x26, x26, #0x0
    1248:	mov	w21, #0xa                   	// #10
    124c:	lsl	x28, x20, #4
    1250:	b	1278 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x5d8>
    1254:	add	x9, x8, #0x1
    1258:	str	x9, [x0, #24]
    125c:	strb	w21, [x8]
    1260:	ldr	x9, [sp, #48]
    1264:	add	x20, x20, #0x1
    1268:	add	x28, x28, #0x10
    126c:	subs	w24, w24, #0x1
    1270:	add	w27, w27, #0x1
    1274:	b.eq	1398 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6f8>  // b.none
    1278:	ldr	w8, [x9, #24]
    127c:	cmp	x20, x8
    1280:	b.cs	1454 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7b4>  // b.hs, b.nlast
    1284:	ldr	x8, [x9, #16]
    1288:	ldrb	w8, [x8, x28]
    128c:	cmp	w8, #0x1
    1290:	b.ne	1264 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x5c4>  // b.any
    1294:	ldur	x8, [x29, #-24]
    1298:	ldr	w8, [x8, #104]
    129c:	cmp	w8, w19
    12a0:	b.ls	1434 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x794>  // b.plast
    12a4:	ldur	x8, [x29, #-8]
    12a8:	ldr	x8, [x8]
    12ac:	add	x25, x8, w19, uxtw #4
    12b0:	ldur	w8, [x29, #-12]
    12b4:	mov	x22, x25
    12b8:	str	w20, [x25]
    12bc:	str	w27, [x22, #4]!
    12c0:	str	w8, [x25, #12]
    12c4:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    12c8:	ldr	x8, [x8]
    12cc:	add	w19, w19, #0x1
    12d0:	ldrb	w8, [x8]
    12d4:	cbz	w8, 1264 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x5c4>
    12d8:	mov	x0, x23
    12dc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    12e0:	tbz	w0, #0, 1260 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x5c0>
    12e4:	bl	0 <_ZN4llvm4dbgsEv>
    12e8:	ldp	x9, x8, [x0, #16]
    12ec:	sub	x9, x9, x8
    12f0:	cmp	x9, #0x11
    12f4:	b.cs	1308 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x668>  // b.hs, b.nlast
    12f8:	mov	w2, #0x11                  	// #17
    12fc:	mov	x1, x26
    1300:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1304:	b	1324 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x684>
    1308:	ldr	q0, [x26]
    130c:	mov	w9, #0x3d                  	// #61
    1310:	strb	w9, [x8, #16]
    1314:	str	q0, [x8]
    1318:	ldr	x8, [x0, #24]
    131c:	add	x8, x8, #0x11
    1320:	str	x8, [x0, #24]
    1324:	ldrsw	x1, [x25]
    1328:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    132c:	ldp	x9, x8, [x0, #16]
    1330:	sub	x9, x9, x8
    1334:	cmp	x9, #0xb
    1338:	b.cs	1350 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6b0>  // b.hs, b.nlast
    133c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1340:	mov	w2, #0xb                   	// #11
    1344:	add	x1, x1, #0x0
    1348:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    134c:	b	1378 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6d8>
    1350:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1354:	add	x9, x9, #0x0
    1358:	ldr	x9, [x9]
    135c:	mov	w10, #0x6564                	// #25956
    1360:	movk	w10, #0x3d78, lsl #16
    1364:	stur	w10, [x8, #7]
    1368:	str	x9, [x8]
    136c:	ldr	x8, [x0, #24]
    1370:	add	x8, x8, #0xb
    1374:	str	x8, [x0, #24]
    1378:	ldr	w1, [x22]
    137c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1380:	ldp	x9, x8, [x0, #16]
    1384:	cmp	x8, x9
    1388:	b.cc	1254 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x5b4>  // b.lo, b.ul, b.last
    138c:	mov	w1, #0xa                   	// #10
    1390:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1394:	b	1260 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x5c0>
    1398:	ldur	x21, [x29, #-24]
    139c:	ldr	w8, [x21, #104]
    13a0:	cmp	w8, w19
    13a4:	b.ls	13bc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x71c>  // b.plast
    13a8:	ldr	w8, [x21, #108]
    13ac:	cmp	w8, w19
    13b0:	b.cc	1494 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7f4>  // b.lo, b.ul, b.last
    13b4:	str	w19, [x21, #104]
    13b8:	b	1414 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x774>
    13bc:	b.cs	1414 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x774>  // b.hs, b.nlast
    13c0:	ldr	w9, [x21, #108]
    13c4:	mov	w20, w19
    13c8:	cmp	w9, w19
    13cc:	b.cs	13e8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x748>  // b.hs, b.nlast
    13d0:	ldur	x0, [x29, #-8]
    13d4:	mov	w3, #0x10                  	// #16
    13d8:	mov	x2, x20
    13dc:	add	x1, x0, #0x10
    13e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    13e4:	ldr	w8, [x21, #104]
    13e8:	cmp	w8, w19
    13ec:	b.eq	13a8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x708>  // b.none
    13f0:	ldur	x9, [x29, #-8]
    13f4:	mov	w8, w8
    13f8:	sub	x10, x20, x8
    13fc:	lsl	x2, x10, #4
    1400:	ldr	x9, [x9]
    1404:	mov	w1, wzr
    1408:	add	x0, x9, x8, lsl #4
    140c:	bl	0 <memset>
    1410:	b	13a8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x708>
    1414:	ldp	x20, x19, [sp, #176]
    1418:	ldp	x22, x21, [sp, #160]
    141c:	ldp	x24, x23, [sp, #144]
    1420:	ldp	x26, x25, [sp, #128]
    1424:	ldp	x28, x27, [sp, #112]
    1428:	ldp	x29, x30, [sp, #96]
    142c:	add	sp, sp, #0xc0
    1430:	ret
    1434:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1438:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    143c:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1440:	add	x0, x0, #0x0
    1444:	add	x1, x1, #0x0
    1448:	add	x3, x3, #0x0
    144c:	mov	w2, #0x95                  	// #149
    1450:	bl	0 <__assert_fail>
    1454:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1458:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    145c:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1460:	add	x0, x0, #0x0
    1464:	add	x1, x1, #0x0
    1468:	add	x3, x3, #0x0
    146c:	mov	w2, #0x99                  	// #153
    1470:	bl	0 <__assert_fail>
    1474:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1478:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    147c:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1480:	add	x0, x0, #0x0
    1484:	add	x1, x1, #0x0
    1488:	add	x3, x3, #0x0
    148c:	mov	w2, #0x1b9                 	// #441
    1490:	bl	0 <__assert_fail>
    1494:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1498:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    149c:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    14a0:	add	x0, x0, #0x0
    14a4:	add	x1, x1, #0x0
    14a8:	add	x3, x3, #0x0
    14ac:	mov	w2, #0x43                  	// #67
    14b0:	bl	0 <__assert_fail>
    14b4:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    14b8:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    14bc:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    14c0:	add	x0, x0, #0x0
    14c4:	add	x1, x1, #0x0
    14c8:	add	x3, x3, #0x0
    14cc:	mov	w2, #0x2d                  	// #45
    14d0:	bl	0 <__assert_fail>

00000000000014d4 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE>:
    14d4:	sub	sp, sp, #0x70
    14d8:	stp	x29, x30, [sp, #48]
    14dc:	stp	x24, x23, [sp, #64]
    14e0:	stp	x22, x21, [sp, #80]
    14e4:	stp	x20, x19, [sp, #96]
    14e8:	add	x29, sp, #0x30
    14ec:	ldr	w9, [x1, #316]
    14f0:	mov	x19, x8
    14f4:	cbnz	w9, 1520 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x4c>
    14f8:	ldrb	w8, [x1, #324]
    14fc:	ldrb	w9, [x1, #325]
    1500:	mov	x20, x2
    1504:	orr	w8, w9, w8
    1508:	tst	w8, #0xff
    150c:	b.ne	1540 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x6c>  // b.any
    1510:	ldr	x9, [x1, #288]
    1514:	cbnz	x9, 1540 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x6c>
    1518:	ldr	w9, [x1, #184]
    151c:	cbnz	w9, 1540 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x6c>
    1520:	mov	w8, #0x1                   	// #1
    1524:	str	x8, [x19]
    1528:	ldp	x20, x19, [sp, #96]
    152c:	ldp	x22, x21, [sp, #80]
    1530:	ldp	x24, x23, [sp, #64]
    1534:	ldp	x29, x30, [sp, #48]
    1538:	add	sp, sp, #0x70
    153c:	ret
    1540:	adrp	x10, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1544:	adrp	x11, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1548:	tst	w8, #0xff
    154c:	mov	w8, #0x65                  	// #101
    1550:	mov	w9, #0x6d                  	// #109
    1554:	add	x10, x10, #0x0
    1558:	add	x11, x11, #0x0
    155c:	mov	w0, #0x30                  	// #48
    1560:	csel	x22, x9, x8, ne  // ne = any
    1564:	csel	x23, x11, x10, ne  // ne = any
    1568:	bl	0 <_Znwm>
    156c:	add	x8, sp, #0x8
    1570:	mov	x21, x0
    1574:	add	x24, x8, #0x10
    1578:	add	x0, sp, #0x8
    157c:	sub	x1, x29, #0x8
    1580:	mov	x2, xzr
    1584:	str	x24, [sp, #8]
    1588:	stur	x22, [x29, #-8]
    158c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1590:	ldur	x8, [x29, #-8]
    1594:	mov	x1, x23
    1598:	mov	x2, x22
    159c:	str	x0, [sp, #8]
    15a0:	str	x8, [sp, #24]
    15a4:	bl	0 <memcpy>
    15a8:	ldur	x8, [x29, #-8]
    15ac:	ldr	x9, [sp, #8]
    15b0:	adrp	x10, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    15b4:	str	x8, [sp, #16]
    15b8:	strb	wzr, [x9, x8]
    15bc:	ldr	x8, [sp, #8]
    15c0:	ldr	x10, [x10]
    15c4:	add	x9, x21, #0x18
    15c8:	cmp	x8, x24
    15cc:	add	x10, x10, #0x10
    15d0:	stp	x10, x9, [x21]
    15d4:	b.eq	15e8 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x114>  // b.none
    15d8:	ldr	x9, [sp, #24]
    15dc:	str	x8, [x21, #8]
    15e0:	str	x9, [x21, #24]
    15e4:	b	15f0 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x11c>
    15e8:	ldr	q0, [x24]
    15ec:	str	q0, [x9]
    15f0:	ldr	x8, [sp, #16]
    15f4:	orr	x9, x21, #0x1
    15f8:	str	x20, [x21, #40]
    15fc:	str	x9, [x19]
    1600:	str	x8, [x21, #16]
    1604:	b	1528 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x54>

0000000000001608 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE>:
    1608:	sub	sp, sp, #0x190
    160c:	stp	x29, x30, [sp, #304]
    1610:	stp	x28, x27, [sp, #320]
    1614:	stp	x26, x25, [sp, #336]
    1618:	stp	x24, x23, [sp, #352]
    161c:	stp	x22, x21, [sp, #368]
    1620:	stp	x20, x19, [sp, #384]
    1624:	add	x29, sp, #0x130
    1628:	ldr	x9, [x0]
    162c:	ldr	x21, [x9, #152]
    1630:	ldr	x20, [x21, #40]
    1634:	cbz	x20, 3cb8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x26b0>
    1638:	ldr	x10, [x0, #8]
    163c:	ldrh	w24, [x1]
    1640:	ldr	w9, [x10, #24]
    1644:	cmp	w9, w24
    1648:	b.ls	3cd8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x26d0>  // b.plast
    164c:	ldr	x9, [x10]
    1650:	ldr	w10, [x21, #52]
    1654:	str	x9, [sp, #72]
    1658:	add	x9, x9, x24, lsl #6
    165c:	ldrh	w12, [x9, #6]
    1660:	cmp	w10, w12
    1664:	b.ls	3c0c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2604>  // b.plast
    1668:	mov	w9, #0x18                  	// #24
    166c:	madd	x9, x12, x9, x20
    1670:	ldrh	w9, [x9, #8]
    1674:	str	x8, [sp, #88]
    1678:	str	x1, [sp, #152]
    167c:	str	x0, [sp, #120]
    1680:	and	w11, w9, #0x3fff
    1684:	mov	w9, #0x3ffe                	// #16382
    1688:	cmp	w11, w9
    168c:	str	w11, [sp, #60]
    1690:	b.ne	1714 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10c>  // b.any
    1694:	cbz	w12, 1790 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x188>
    1698:	ldr	w19, [x21, #28]
    169c:	mov	w22, #0x18                  	// #24
    16a0:	mov	w23, #0x3ffe                	// #16382
    16a4:	ldr	w10, [x21, #52]
    16a8:	ldr	x2, [sp, #152]
    16ac:	cmp	w10, w12
    16b0:	b.ls	3c0c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2604>  // b.plast
    16b4:	umaddl	x9, w12, w22, x20
    16b8:	ldrh	w9, [x9, #8]
    16bc:	and	w9, w9, #0x3fff
    16c0:	cmp	w9, w23
    16c4:	b.ne	1714 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10c>  // b.any
    16c8:	ldr	x8, [sp, #120]
    16cc:	mov	w1, w12
    16d0:	mov	w3, w19
    16d4:	ldr	x0, [x8]
    16d8:	ldr	x8, [x0]
    16dc:	ldr	x8, [x8, #16]
    16e0:	blr	x8
    16e4:	cbz	w0, 1790 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x188>
    16e8:	ldr	x20, [x21, #40]
    16ec:	mov	w12, w0
    16f0:	cbnz	x20, 16a4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x9c>
    16f4:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    16f8:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    16fc:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1700:	add	x0, x0, #0x0
    1704:	add	x1, x1, #0x0
    1708:	add	x3, x3, #0x0
    170c:	mov	w2, #0x15b                 	// #347
    1710:	bl	0 <__assert_fail>
    1714:	cmp	w10, w12
    1718:	b.ls	3c0c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2604>  // b.plast
    171c:	mov	w8, #0x18                  	// #24
    1720:	umaddl	x23, w12, w8, x20
    1724:	str	x23, [sp, #96]
    1728:	ldrh	w8, [x23, #8]!
    172c:	mvn	w8, w8
    1730:	tst	w8, #0x3fff
    1734:	b.ne	1824 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x21c>  // b.any
    1738:	mov	w0, #0x30                  	// #48
    173c:	bl	0 <_Znwm>
    1740:	sub	x8, x29, #0x28
    1744:	mov	x19, x0
    1748:	mov	w9, #0x40                  	// #64
    174c:	add	x20, x8, #0x10
    1750:	sub	x0, x29, #0x28
    1754:	sub	x1, x29, #0x50
    1758:	mov	x2, xzr
    175c:	stur	x20, [x29, #-40]
    1760:	stur	x9, [x29, #-80]
    1764:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1768:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    176c:	add	x9, x9, #0x0
    1770:	ldur	x8, [x29, #-80]
    1774:	ldp	q1, q0, [x9]
    1778:	ldp	q3, q2, [x9, #32]
    177c:	stur	x0, [x29, #-40]
    1780:	stur	x8, [x29, #-24]
    1784:	stp	q1, q0, [x0]
    1788:	stp	q3, q2, [x0, #32]
    178c:	b	17ec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e4>
    1790:	mov	w0, #0x30                  	// #48
    1794:	bl	0 <_Znwm>
    1798:	sub	x8, x29, #0x28
    179c:	mov	x19, x0
    17a0:	mov	w9, #0x35                  	// #53
    17a4:	add	x20, x8, #0x10
    17a8:	sub	x0, x29, #0x28
    17ac:	sub	x1, x29, #0x50
    17b0:	mov	x2, xzr
    17b4:	stur	x20, [x29, #-40]
    17b8:	stur	x9, [x29, #-80]
    17bc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    17c0:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    17c4:	add	x9, x9, #0x0
    17c8:	ldur	x8, [x29, #-80]
    17cc:	ldur	x10, [x9, #45]
    17d0:	ldp	q1, q0, [x9]
    17d4:	ldr	q2, [x9, #32]
    17d8:	stur	x0, [x29, #-40]
    17dc:	stur	x8, [x29, #-24]
    17e0:	stp	q1, q0, [x0]
    17e4:	str	q2, [x0, #32]
    17e8:	stur	x10, [x0, #45]
    17ec:	stur	x8, [x29, #-32]
    17f0:	strb	wzr, [x0, x8]
    17f4:	adrp	x10, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    17f8:	ldur	x8, [x29, #-40]
    17fc:	ldr	x10, [x10]
    1800:	add	x9, x19, #0x18
    1804:	cmp	x8, x20
    1808:	add	x10, x10, #0x10
    180c:	stp	x10, x9, [x19]
    1810:	b.eq	1884 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x27c>  // b.none
    1814:	ldur	x9, [x29, #-24]
    1818:	str	x8, [x19, #8]
    181c:	str	x9, [x19, #24]
    1820:	b	188c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x284>
    1824:	str	x24, [sp, #48]
    1828:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    182c:	ldr	x8, [x8]
    1830:	mov	w24, w12
    1834:	str	x12, [sp, #40]
    1838:	ldrb	w8, [x8]
    183c:	cbz	w8, 1a30 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x428>
    1840:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1844:	add	x0, x0, #0x0
    1848:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    184c:	tbz	w0, #0, 1994 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x38c>
    1850:	bl	0 <_ZN4llvm4dbgsEv>
    1854:	ldp	x9, x8, [x0, #16]
    1858:	mov	x19, x0
    185c:	sub	x9, x9, x8
    1860:	cmp	x9, #0xf
    1864:	b.hi	18bc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2b4>  // b.pmore
    1868:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    186c:	add	x1, x1, #0x0
    1870:	mov	w2, #0x10                  	// #16
    1874:	mov	x0, x19
    1878:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    187c:	mov	x19, x0
    1880:	b	18d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2d0>
    1884:	ldr	q0, [x20]
    1888:	str	q0, [x9]
    188c:	ldr	x10, [sp, #88]
    1890:	ldur	x8, [x29, #-32]
    1894:	ldr	x11, [sp, #152]
    1898:	ldrb	w9, [x10, #8]
    189c:	str	x8, [x19, #16]
    18a0:	ands	x8, x19, #0xfffffffffffffffe
    18a4:	str	x11, [x19, #40]
    18a8:	orr	w9, w9, #0x3
    18ac:	strb	w9, [x10, #8]
    18b0:	b.eq	3cf8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x26f0>  // b.none
    18b4:	str	x8, [x10]
    18b8:	b	3a70 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2468>
    18bc:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    18c0:	add	x9, x9, #0x0
    18c4:	ldr	q0, [x9]
    18c8:	str	q0, [x8]
    18cc:	ldr	x8, [x19, #24]
    18d0:	add	x8, x8, #0x10
    18d4:	str	x8, [x19, #24]
    18d8:	ldr	x8, [sp, #120]
    18dc:	ldr	x10, [sp, #48]
    18e0:	ldr	x8, [x8, #8]
    18e4:	ldr	w9, [x8, #24]
    18e8:	cmp	w9, w10
    18ec:	b.ls	3d80 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2778>  // b.plast
    18f0:	ldp	x9, x8, [x8, #8]
    18f4:	ldr	w9, [x9, x10, lsl #2]
    18f8:	add	x22, x8, x9
    18fc:	cbz	x8, 1938 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x330>
    1900:	mov	x0, x22
    1904:	bl	0 <strlen>
    1908:	mov	x21, x0
    190c:	ldp	x8, x0, [x19, #16]
    1910:	sub	x8, x8, x0
    1914:	cmp	x21, x8
    1918:	b.ls	194c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x344>  // b.plast
    191c:	mov	x0, x19
    1920:	mov	x1, x22
    1924:	mov	x2, x21
    1928:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    192c:	mov	x19, x0
    1930:	ldr	x0, [x0, #24]
    1934:	b	1968 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x360>
    1938:	mov	x21, xzr
    193c:	ldp	x8, x0, [x19, #16]
    1940:	sub	x8, x8, x0
    1944:	cmp	x21, x8
    1948:	b.hi	191c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x314>  // b.pmore
    194c:	cbz	x21, 1968 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x360>
    1950:	mov	x1, x22
    1954:	mov	x2, x21
    1958:	bl	0 <memcpy>
    195c:	ldr	x8, [x19, #24]
    1960:	add	x0, x8, x21
    1964:	str	x0, [x19, #24]
    1968:	ldr	x8, [x19, #16]
    196c:	cmp	x0, x8
    1970:	b.cs	1988 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x380>  // b.hs, b.nlast
    1974:	add	x8, x0, #0x1
    1978:	mov	w9, #0xa                   	// #10
    197c:	str	x8, [x19, #24]
    1980:	strb	w9, [x0]
    1984:	b	1994 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x38c>
    1988:	mov	w1, #0xa                   	// #10
    198c:	mov	x0, x19
    1990:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1994:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    1998:	ldr	x8, [x8]
    199c:	ldrb	w8, [x8]
    19a0:	cbz	w8, 1a30 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x428>
    19a4:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    19a8:	add	x0, x0, #0x0
    19ac:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    19b0:	tbz	w0, #0, 1a30 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x428>
    19b4:	bl	0 <_ZN4llvm4dbgsEv>
    19b8:	ldp	x9, x8, [x0, #16]
    19bc:	sub	x9, x9, x8
    19c0:	cmp	x9, #0xe
    19c4:	b.hi	19dc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x3d4>  // b.pmore
    19c8:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    19cc:	add	x1, x1, #0x0
    19d0:	mov	w2, #0xf                   	// #15
    19d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    19d8:	b	1a00 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x3f8>
    19dc:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    19e0:	add	x9, x9, #0x0
    19e4:	ldur	x10, [x9, #7]
    19e8:	ldr	x9, [x9]
    19ec:	stur	x10, [x8, #7]
    19f0:	str	x9, [x8]
    19f4:	ldr	x8, [x0, #24]
    19f8:	add	x8, x8, #0xf
    19fc:	str	x8, [x0, #24]
    1a00:	mov	x1, x24
    1a04:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1a08:	ldp	x9, x8, [x0, #16]
    1a0c:	cmp	x8, x9
    1a10:	b.cs	1a28 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x420>  // b.hs, b.nlast
    1a14:	add	x9, x8, #0x1
    1a18:	mov	w10, #0xa                   	// #10
    1a1c:	str	x9, [x0, #24]
    1a20:	strb	w10, [x8]
    1a24:	b	1a30 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x428>
    1a28:	mov	w1, #0xa                   	// #10
    1a2c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1a30:	mov	w0, #0x150                 	// #336
    1a34:	bl	0 <_Znwm>
    1a38:	adrp	x8, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1a3c:	ldr	d1, [x8]
    1a40:	movi	v0.2d, #0x0
    1a44:	mov	x9, x0
    1a48:	mov	x11, x0
    1a4c:	mov	x12, x0
    1a50:	mov	x10, x0
    1a54:	str	q0, [x9, #16]!
    1a58:	stp	q0, q0, [x0, #32]
    1a5c:	stp	q0, q0, [x0, #64]
    1a60:	stp	q0, q0, [x0, #128]
    1a64:	stp	q0, q0, [x0, #208]
    1a68:	stp	q0, q0, [x0, #240]
    1a6c:	stp	q0, q0, [x0, #272]
    1a70:	stp	q0, q0, [x0, #304]
    1a74:	str	q0, [x11, #176]!
    1a78:	str	q0, [x12, #192]!
    1a7c:	str	q0, [x10, #112]!
    1a80:	str	q0, [x0, #96]
    1a84:	str	q0, [x0, #160]
    1a88:	stp	x10, x9, [sp, #8]
    1a8c:	str	x9, [x0]
    1a90:	str	x10, [x0, #96]
    1a94:	str	d1, [x0, #8]
    1a98:	str	d1, [x0, #104]
    1a9c:	str	x12, [x11]
    1aa0:	str	d1, [x0, #184]
    1aa4:	ldrh	w8, [x23]
    1aa8:	ldr	x9, [sp, #40]
    1aac:	str	x11, [sp, #24]
    1ab0:	str	x12, [sp]
    1ab4:	and	w8, w8, #0x3fff
    1ab8:	str	w9, [x0, #320]
    1abc:	str	w8, [x0, #316]
    1ac0:	ldr	x8, [sp, #48]
    1ac4:	ldr	x9, [sp, #72]
    1ac8:	mov	x22, x0
    1acc:	add	x9, x9, x8, lsl #6
    1ad0:	ldr	x8, [x9, #8]!
    1ad4:	str	x9, [sp, #64]
    1ad8:	tbnz	w8, #6, 1ae4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x4dc>
    1adc:	ldr	x11, [sp, #120]
    1ae0:	b	1be8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x5e0>
    1ae4:	ldr	x11, [sp, #120]
    1ae8:	ldrb	w9, [x11, #176]
    1aec:	cbz	w9, 1be8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x5e0>
    1af0:	bl	0 <_ZN4llvm9WithColor7warningEv>
    1af4:	ldp	x9, x8, [x0, #16]
    1af8:	sub	x9, x9, x8
    1afc:	cmp	x9, #0x2c
    1b00:	b.hi	1b18 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x510>  // b.pmore
    1b04:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1b08:	add	x1, x1, #0x0
    1b0c:	mov	w2, #0x2d                  	// #45
    1b10:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1b14:	b	1b3c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x534>
    1b18:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1b1c:	add	x9, x9, #0x0
    1b20:	ldur	q0, [x9, #29]
    1b24:	ldp	q2, q1, [x9]
    1b28:	stur	q0, [x8, #29]
    1b2c:	stp	q2, q1, [x8]
    1b30:	ldr	x8, [x0, #24]
    1b34:	add	x8, x8, #0x2d
    1b38:	str	x8, [x0, #24]
    1b3c:	bl	0 <_ZN4llvm9WithColor4noteEv>
    1b40:	ldp	x9, x8, [x0, #16]
    1b44:	sub	x9, x9, x8
    1b48:	cmp	x9, #0x2c
    1b4c:	b.hi	1b98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x590>  // b.pmore
    1b50:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1b54:	add	x1, x1, #0x0
    1b58:	mov	w2, #0x2d                  	// #45
    1b5c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1b60:	ldp	x9, x8, [x0, #16]
    1b64:	sub	x9, x9, x8
    1b68:	cmp	x9, #0x1a
    1b6c:	b.ls	1bc8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x5c0>  // b.plast
    1b70:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1b74:	add	x9, x9, #0x0
    1b78:	ldur	q0, [x9, #11]
    1b7c:	ldr	q1, [x9]
    1b80:	stur	q0, [x8, #11]
    1b84:	str	q1, [x8]
    1b88:	ldr	x8, [x0, #24]
    1b8c:	add	x8, x8, #0x1b
    1b90:	str	x8, [x0, #24]
    1b94:	b	1bd8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x5d0>
    1b98:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1b9c:	add	x9, x9, #0x0
    1ba0:	ldur	q0, [x9, #29]
    1ba4:	ldp	q2, q1, [x9]
    1ba8:	stur	q0, [x8, #29]
    1bac:	stp	q2, q1, [x8]
    1bb0:	ldp	x9, x8, [x0, #16]
    1bb4:	add	x8, x8, #0x2d
    1bb8:	str	x8, [x0, #24]
    1bbc:	sub	x9, x9, x8
    1bc0:	cmp	x9, #0x1a
    1bc4:	b.hi	1b70 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x568>  // b.pmore
    1bc8:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1bcc:	add	x1, x1, #0x0
    1bd0:	mov	w2, #0x1b                  	// #27
    1bd4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1bd8:	ldr	x11, [sp, #120]
    1bdc:	ldr	x8, [sp, #64]
    1be0:	strb	wzr, [x11, #176]
    1be4:	ldr	x8, [x8]
    1be8:	tbz	w8, #4, 1cf0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x6e8>
    1bec:	ldrb	w9, [x11, #177]
    1bf0:	cbz	w9, 1cf0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x6e8>
    1bf4:	bl	0 <_ZN4llvm9WithColor7warningEv>
    1bf8:	ldp	x9, x8, [x0, #16]
    1bfc:	sub	x9, x9, x8
    1c00:	cmp	x9, #0x26
    1c04:	b.hi	1c54 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x64c>  // b.pmore
    1c08:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1c0c:	add	x1, x1, #0x0
    1c10:	mov	w2, #0x27                  	// #39
    1c14:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1c18:	ldp	x9, x8, [x0, #16]
    1c1c:	sub	x9, x9, x8
    1c20:	cmp	x9, #0x13
    1c24:	b.ls	1c84 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x67c>  // b.plast
    1c28:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1c2c:	add	x9, x9, #0x0
    1c30:	ldr	q0, [x9]
    1c34:	mov	w9, #0x6563                	// #25955
    1c38:	movk	w9, #0xa2e, lsl #16
    1c3c:	str	w9, [x8, #16]
    1c40:	str	q0, [x8]
    1c44:	ldr	x8, [x0, #24]
    1c48:	add	x8, x8, #0x14
    1c4c:	str	x8, [x0, #24]
    1c50:	b	1c94 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x68c>
    1c54:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1c58:	add	x9, x9, #0x0
    1c5c:	ldur	x10, [x9, #31]
    1c60:	ldp	q1, q0, [x9]
    1c64:	stur	x10, [x8, #31]
    1c68:	stp	q1, q0, [x8]
    1c6c:	ldp	x9, x8, [x0, #16]
    1c70:	add	x8, x8, #0x27
    1c74:	str	x8, [x0, #24]
    1c78:	sub	x9, x9, x8
    1c7c:	cmp	x9, #0x13
    1c80:	b.hi	1c28 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x620>  // b.pmore
    1c84:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1c88:	add	x1, x1, #0x0
    1c8c:	mov	w2, #0x14                  	// #20
    1c90:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1c94:	bl	0 <_ZN4llvm9WithColor4noteEv>
    1c98:	ldp	x9, x8, [x0, #16]
    1c9c:	sub	x9, x9, x8
    1ca0:	cmp	x9, #0x24
    1ca4:	b.hi	1cbc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x6b4>  // b.pmore
    1ca8:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1cac:	add	x1, x1, #0x0
    1cb0:	mov	w2, #0x25                  	// #37
    1cb4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1cb8:	b	1ce0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x6d8>
    1cbc:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1cc0:	add	x9, x9, #0x0
    1cc4:	ldur	x10, [x9, #29]
    1cc8:	ldp	q1, q0, [x9]
    1ccc:	stur	x10, [x8, #29]
    1cd0:	stp	q1, q0, [x8]
    1cd4:	ldr	x8, [x0, #24]
    1cd8:	add	x8, x8, #0x25
    1cdc:	str	x8, [x0, #24]
    1ce0:	ldr	x11, [sp, #120]
    1ce4:	ldr	x8, [sp, #64]
    1ce8:	strb	wzr, [x11, #177]
    1cec:	ldr	x8, [x8]
    1cf0:	ubfx	w9, w8, #18, #1
    1cf4:	ubfx	w10, w8, #19, #1
    1cf8:	ubfx	w8, w8, #23, #1
    1cfc:	strb	w9, [x22, #324]
    1d00:	strb	w10, [x22, #325]
    1d04:	strb	w8, [x22, #326]
    1d08:	ldrh	w8, [x23]
    1d0c:	ubfx	w8, w8, #14, #1
    1d10:	strb	w8, [x22, #327]
    1d14:	ldrh	w8, [x23]
    1d18:	lsr	w8, w8, #15
    1d1c:	strb	w8, [x22, #328]
    1d20:	ldr	x25, [x11]
    1d24:	ldr	w9, [x11, #40]
    1d28:	ldr	x8, [x11, #32]
    1d2c:	ldr	x21, [x25, #152]
    1d30:	stp	xzr, xzr, [x29, #-40]
    1d34:	stur	wzr, [x29, #-16]
    1d38:	stur	xzr, [x29, #-24]
    1d3c:	str	x9, [sp, #144]
    1d40:	ldr	w9, [x21, #48]
    1d44:	stur	w9, [x29, #-88]
    1d48:	cbz	w9, 3d18 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2710>
    1d4c:	cmp	w9, #0x40
    1d50:	str	x9, [sp, #32]
    1d54:	str	x8, [sp, #136]
    1d58:	b.hi	1d64 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x75c>  // b.pmore
    1d5c:	stur	xzr, [x29, #-96]
    1d60:	b	1d74 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x76c>
    1d64:	sub	x0, x29, #0x60
    1d68:	mov	x1, xzr
    1d6c:	mov	w2, wzr
    1d70:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    1d74:	mov	w8, #0x18                  	// #24
    1d78:	madd	x8, x24, x8, x20
    1d7c:	ldrh	w8, [x8, #12]
    1d80:	stur	x22, [x29, #-144]
    1d84:	str	x21, [sp, #128]
    1d88:	stur	x8, [x29, #-112]
    1d8c:	cbz	x8, 23c4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xdbc>
    1d90:	mov	w8, #0x18                  	// #24
    1d94:	madd	x8, x24, x8, x20
    1d98:	ldr	x20, [sp, #144]
    1d9c:	mov	x28, xzr
    1da0:	mov	x1, xzr
    1da4:	mov	x27, xzr
    1da8:	mov	x15, xzr
    1dac:	add	x24, x8, #0xa
    1db0:	mov	w13, #0x1                   	// #1
    1db4:	stur	wzr, [x29, #-120]
    1db8:	str	x24, [sp, #80]
    1dbc:	b	1e28 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x820>
    1dc0:	mov	w26, w16
    1dc4:	mov	x21, x15
    1dc8:	mov	x20, x1
    1dcc:	mov	x3, xzr
    1dd0:	sub	x0, x29, #0x28
    1dd4:	sub	x1, x29, #0x50
    1dd8:	sub	x2, x29, #0x50
    1ddc:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1de0:	ldur	x8, [x29, #-80]
    1de4:	mov	x1, x20
    1de8:	ldr	x20, [sp, #144]
    1dec:	mov	x15, x21
    1df0:	mov	w16, w26
    1df4:	str	wzr, [x0, #8]
    1df8:	str	x8, [x0]
    1dfc:	ldr	w8, [x0, #8]
    1e00:	add	w8, w8, w19
    1e04:	str	w8, [x0, #8]
    1e08:	ldr	x21, [sp, #128]
    1e0c:	cmp	w16, #0x0
    1e10:	add	x27, x27, #0x18
    1e14:	cset	w13, ne  // ne = any
    1e18:	ldur	x8, [x29, #-112]
    1e1c:	add	x28, x28, #0x1
    1e20:	cmp	x28, x8
    1e24:	b.eq	23d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xdd0>  // b.none
    1e28:	ldr	x8, [x21, #40]
    1e2c:	cbz	x8, 3bec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x25e4>
    1e30:	ldr	x8, [x25, #128]
    1e34:	ldrh	w9, [x24]
    1e38:	lsl	x10, x28, #2
    1e3c:	add	x8, x8, x9, lsl #2
    1e40:	ldrh	w19, [x8, x10]
    1e44:	ldr	w9, [x21, #48]
    1e48:	cmp	w9, w19
    1e4c:	b.ls	3b2c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2524>  // b.plast
    1e50:	ldr	x14, [x21, #32]
    1e54:	add	x21, x8, x28, lsl #2
    1e58:	ldrh	w8, [x21, #2]!
    1e5c:	cbz	w8, 1ebc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x8b4>
    1e60:	cmp	x20, x19
    1e64:	b.ls	3b4c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2544>  // b.plast
    1e68:	ldr	x9, [sp, #136]
    1e6c:	add	x10, x14, x19, lsl #5
    1e70:	ldr	x22, [x9, x19, lsl #3]
    1e74:	ldr	w9, [x10, #16]!
    1e78:	tbnz	w9, #31, 1f4c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x944>
    1e7c:	cbz	x22, 3b6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2564>
    1e80:	ldur	w11, [x29, #-88]
    1e84:	clz	x12, x22
    1e88:	eor	w12, w12, #0x3f
    1e8c:	cmp	w11, w12
    1e90:	b.ls	3b8c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2584>  // b.plast
    1e94:	cmp	w11, #0x40
    1e98:	mov	w11, #0x1                   	// #1
    1e9c:	lsl	x11, x11, x12
    1ea0:	b.hi	2060 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa58>  // b.pmore
    1ea4:	ldur	x8, [x29, #-96]
    1ea8:	orr	x8, x8, x11
    1eac:	stur	x8, [x29, #-96]
    1eb0:	ldr	w9, [x10]
    1eb4:	ldrh	w8, [x21]
    1eb8:	b	2070 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa68>
    1ebc:	mov	x21, x14
    1ec0:	stur	w13, [x29, #-128]
    1ec4:	mov	x22, x28
    1ec8:	mov	x28, x25
    1ecc:	mov	w25, w23
    1ed0:	mov	x26, x15
    1ed4:	mov	x23, x1
    1ed8:	bl	0 <_ZN4llvm9WithColor7warningEv>
    1edc:	ldp	x9, x8, [x0, #16]
    1ee0:	mov	x20, x0
    1ee4:	sub	x9, x9, x8
    1ee8:	cmp	x9, #0x3b
    1eec:	b.hi	2164 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb5c>  // b.pmore
    1ef0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1ef4:	mov	w2, #0x3c                  	// #60
    1ef8:	mov	x0, x20
    1efc:	add	x1, x1, #0x0
    1f00:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1f04:	mov	x20, x0
    1f08:	lsl	x8, x19, #5
    1f0c:	ldr	x21, [x21, x8]
    1f10:	cbz	x21, 219c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb94>
    1f14:	mov	x0, x21
    1f18:	bl	0 <strlen>
    1f1c:	mov	x19, x0
    1f20:	ldp	x8, x0, [x20, #16]
    1f24:	sub	x8, x8, x0
    1f28:	cmp	x19, x8
    1f2c:	b.ls	21b0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xba8>  // b.plast
    1f30:	mov	x0, x20
    1f34:	mov	x1, x21
    1f38:	mov	x2, x19
    1f3c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1f40:	mov	x20, x0
    1f44:	ldr	x0, [x0, #24]
    1f48:	b	21cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xbc4>
    1f4c:	mov	w16, wzr
    1f50:	and	w23, w23, #0xffffff00
    1f54:	cmp	x15, x27
    1f58:	lsl	x26, x8, #32
    1f5c:	b.ne	20a0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa98>  // b.any
    1f60:	sub	x8, x27, x1
    1f64:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
    1f68:	cmp	x8, x9
    1f6c:	str	x14, [sp, #112]
    1f70:	stur	w16, [x29, #-136]
    1f74:	stur	x28, [x29, #-128]
    1f78:	b.eq	3c8c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2684>  // b.none
    1f7c:	asr	x9, x8, #3
    1f80:	cmp	x8, #0x0
    1f84:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1f88:	movk	x8, #0xaaab
    1f8c:	mul	x27, x9, x8
    1f90:	csinc	x8, x27, xzr, ne  // ne = any
    1f94:	mov	x11, #0x5555555555555555    	// #6148914691236517205
    1f98:	adds	x8, x8, x27
    1f9c:	movk	x11, #0x555, lsl #48
    1fa0:	cset	w9, cs  // cs = hs, nlast
    1fa4:	cmp	x8, x11
    1fa8:	cset	w10, hi  // hi = pmore
    1fac:	orr	w9, w9, w10
    1fb0:	cmp	w9, #0x0
    1fb4:	csel	x8, x11, x8, ne  // ne = any
    1fb8:	str	x8, [sp, #104]
    1fbc:	add	x8, x8, x8, lsl #1
    1fc0:	lsl	x0, x8, #3
    1fc4:	mov	w28, w23
    1fc8:	mov	x24, x15
    1fcc:	mov	x23, x25
    1fd0:	mov	x25, x1
    1fd4:	bl	0 <_Znwm>
    1fd8:	mov	x20, x0
    1fdc:	mov	w8, #0x18                  	// #24
    1fe0:	madd	x8, x27, x8, x0
    1fe4:	cmp	x24, x25
    1fe8:	mov	w9, #0x1                   	// #1
    1fec:	mov	x0, x25
    1ff0:	mov	x27, x20
    1ff4:	stp	x22, x26, [x8]
    1ff8:	stp	w28, w9, [x8, #16]
    1ffc:	b.eq	23a4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd9c>  // b.none
    2000:	ldur	x22, [x29, #-144]
    2004:	mov	x8, x0
    2008:	mov	x25, x23
    200c:	ldr	x9, [x8, #16]
    2010:	ldr	q0, [x8], #24
    2014:	str	x9, [x27, #16]
    2018:	cmp	x24, x8
    201c:	str	q0, [x27], #24
    2020:	b.ne	200c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa04>  // b.any
    2024:	mov	w23, w28
    2028:	cbz	x0, 2030 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa28>
    202c:	bl	0 <_ZdlPv>
    2030:	ldp	x9, x14, [sp, #104]
    2034:	mov	w8, #0x18                  	// #24
    2038:	mov	x1, x20
    203c:	ldr	x24, [sp, #80]
    2040:	madd	x15, x9, x8, x20
    2044:	ldr	x20, [sp, #144]
    2048:	ldur	x28, [x29, #-128]
    204c:	ldur	w16, [x29, #-136]
    2050:	add	x8, x14, x19, lsl #5
    2054:	ldr	w8, [x8, #12]
    2058:	cbnz	w8, 20bc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xab4>
    205c:	b	1e08 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x800>
    2060:	ldur	x10, [x29, #-96]
    2064:	ldr	x12, [x10]
    2068:	orr	x11, x12, x11
    206c:	str	x11, [x10]
    2070:	cmp	w9, #0x0
    2074:	cset	w10, eq  // eq = none
    2078:	cmp	w9, #0x2
    207c:	ldur	w9, [x29, #-120]
    2080:	orr	w9, w9, w10
    2084:	stur	w9, [x29, #-120]
    2088:	cset	w9, lt  // lt = tstop
    208c:	and	w16, w13, w9
    2090:	and	w23, w23, #0xffffff00
    2094:	cmp	x15, x27
    2098:	lsl	x26, x8, #32
    209c:	b.eq	1f60 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x958>  // b.none
    20a0:	mov	w8, #0x1                   	// #1
    20a4:	stp	x22, x26, [x27]
    20a8:	stp	w23, w8, [x27, #16]
    20ac:	ldur	x22, [x29, #-144]
    20b0:	add	x8, x14, x19, lsl #5
    20b4:	ldr	w8, [x8, #12]
    20b8:	cbz	w8, 1e08 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x800>
    20bc:	cmp	w20, w8
    20c0:	b.ls	3b4c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2544>  // b.plast
    20c4:	ldr	x9, [sp, #136]
    20c8:	ldur	w10, [x29, #-16]
    20cc:	ldr	x8, [x9, x8, lsl #3]
    20d0:	stur	x8, [x29, #-80]
    20d4:	ldrh	w19, [x21]
    20d8:	cbz	w10, 1dc0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7b8>
    20dc:	cmn	x8, #0x2
    20e0:	b.cs	3bcc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x25c4>  // b.hs, b.nlast
    20e4:	ldur	x9, [x29, #-32]
    20e8:	mov	w11, #0x25                  	// #37
    20ec:	mul	w11, w8, w11
    20f0:	sub	w10, w10, #0x1
    20f4:	and	w11, w10, w11
    20f8:	add	x0, x9, w11, uxtw #4
    20fc:	ldr	x13, [x0]
    2100:	cmp	x8, x13
    2104:	b.eq	1dfc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7f4>  // b.none
    2108:	mov	x12, xzr
    210c:	mov	w14, #0x1                   	// #1
    2110:	mov	w26, w16
    2114:	mov	x21, x15
    2118:	mov	x20, x1
    211c:	cmn	x13, #0x1
    2120:	b.eq	23b8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xdb0>  // b.none
    2124:	cmp	x12, #0x0
    2128:	add	w11, w11, w14
    212c:	mov	x15, #0xfffffffffffffffe    	// #-2
    2130:	ccmp	x13, x15, #0x0, eq  // eq = none
    2134:	and	w11, w11, w10
    2138:	csel	x12, x12, x0, ne  // ne = any
    213c:	add	x0, x9, w11, uxtw #4
    2140:	ldr	x13, [x0]
    2144:	mov	x1, x20
    2148:	ldr	x20, [sp, #144]
    214c:	add	w14, w14, #0x1
    2150:	cmp	x8, x13
    2154:	mov	x15, x21
    2158:	mov	w16, w26
    215c:	b.eq	1dfc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7f4>  // b.none
    2160:	b	2110 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb08>
    2164:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2168:	add	x9, x9, #0x0
    216c:	ldur	q0, [x9, #44]
    2170:	ldp	q2, q1, [x9, #16]
    2174:	ldr	q3, [x9]
    2178:	stur	q0, [x8, #44]
    217c:	stp	q2, q1, [x8, #16]
    2180:	str	q3, [x8]
    2184:	ldr	x8, [x20, #24]
    2188:	add	x8, x8, #0x3c
    218c:	str	x8, [x20, #24]
    2190:	lsl	x8, x19, #5
    2194:	ldr	x21, [x21, x8]
    2198:	cbnz	x21, 1f14 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x90c>
    219c:	mov	x19, xzr
    21a0:	ldp	x8, x0, [x20, #16]
    21a4:	sub	x8, x8, x0
    21a8:	cmp	x19, x8
    21ac:	b.hi	1f30 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x928>  // b.pmore
    21b0:	cbz	x19, 21cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xbc4>
    21b4:	mov	x1, x21
    21b8:	mov	x2, x19
    21bc:	bl	0 <memcpy>
    21c0:	ldr	x8, [x20, #24]
    21c4:	add	x0, x8, x19
    21c8:	str	x0, [x20, #24]
    21cc:	ldr	x8, [x20, #16]
    21d0:	cmp	x8, x0
    21d4:	b.ne	21f0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xbe8>  // b.any
    21d8:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    21dc:	mov	w2, #0x1                   	// #1
    21e0:	mov	x0, x20
    21e4:	add	x1, x1, #0x0
    21e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    21ec:	b	2204 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xbfc>
    21f0:	mov	w8, #0xa                   	// #10
    21f4:	strb	w8, [x0]
    21f8:	ldr	x8, [x20, #24]
    21fc:	add	x8, x8, #0x1
    2200:	str	x8, [x20, #24]
    2204:	bl	0 <_ZN4llvm9WithColor4noteEv>
    2208:	ldp	x9, x8, [x0, #16]
    220c:	mov	x20, x0
    2210:	sub	x9, x9, x8
    2214:	cmp	x9, #0x19
    2218:	b.hi	2278 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc70>  // b.pmore
    221c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2220:	mov	w2, #0x1a                  	// #26
    2224:	mov	x0, x20
    2228:	add	x1, x1, #0x0
    222c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2230:	mov	x20, x0
    2234:	ldr	x8, [sp, #96]
    2238:	ldr	x21, [x8]
    223c:	cbz	x21, 22a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xca0>
    2240:	mov	x0, x21
    2244:	bl	0 <strlen>
    2248:	mov	x19, x0
    224c:	ldp	x8, x0, [x20, #16]
    2250:	sub	x8, x8, x0
    2254:	cmp	x19, x8
    2258:	b.ls	22bc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcb4>  // b.plast
    225c:	mov	x0, x20
    2260:	mov	x1, x21
    2264:	mov	x2, x19
    2268:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    226c:	mov	x20, x0
    2270:	ldr	x0, [x0, #24]
    2274:	b	22d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcd0>
    2278:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    227c:	add	x9, x9, #0x0
    2280:	ldur	q0, [x9, #10]
    2284:	ldr	q1, [x9]
    2288:	stur	q0, [x8, #10]
    228c:	str	q1, [x8]
    2290:	ldr	x8, [x20, #24]
    2294:	add	x8, x8, #0x1a
    2298:	str	x8, [x20, #24]
    229c:	ldr	x8, [sp, #96]
    22a0:	ldr	x21, [x8]
    22a4:	cbnz	x21, 2240 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc38>
    22a8:	mov	x19, xzr
    22ac:	ldp	x8, x0, [x20, #16]
    22b0:	sub	x8, x8, x0
    22b4:	cmp	x19, x8
    22b8:	b.hi	225c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc54>  // b.pmore
    22bc:	cbz	x19, 22d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcd0>
    22c0:	mov	x1, x21
    22c4:	mov	x2, x19
    22c8:	bl	0 <memcpy>
    22cc:	ldr	x8, [x20, #24]
    22d0:	add	x0, x8, x19
    22d4:	str	x0, [x20, #24]
    22d8:	ldr	x8, [x20, #16]
    22dc:	ldr	x21, [sp, #128]
    22e0:	sub	x8, x8, x0
    22e4:	cmp	x8, #0xe
    22e8:	b.hi	2308 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd00>  // b.pmore
    22ec:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    22f0:	mov	w2, #0xf                   	// #15
    22f4:	mov	x0, x20
    22f8:	add	x1, x1, #0x0
    22fc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2300:	mov	x20, x0
    2304:	b	232c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd24>
    2308:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    230c:	add	x9, x9, #0x0
    2310:	ldur	x8, [x9, #7]
    2314:	ldr	x9, [x9]
    2318:	stur	x8, [x0, #7]
    231c:	str	x9, [x0]
    2320:	ldr	x8, [x20, #24]
    2324:	add	x8, x8, #0xf
    2328:	str	x8, [x20, #24]
    232c:	mov	x0, x20
    2330:	mov	x1, x22
    2334:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2338:	ldp	x9, x8, [x0, #16]
    233c:	sub	x9, x9, x8
    2340:	cmp	x9, #0x1
    2344:	b.hi	235c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd54>  // b.pmore
    2348:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    234c:	mov	w2, #0x2                   	// #2
    2350:	add	x1, x1, #0x0
    2354:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2358:	b	2370 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd68>
    235c:	mov	w9, #0xa29                 	// #2601
    2360:	strh	w9, [x8]
    2364:	ldr	x8, [x0, #24]
    2368:	add	x8, x8, #0x2
    236c:	str	x8, [x0, #24]
    2370:	mov	x1, x23
    2374:	ldr	x20, [sp, #144]
    2378:	mov	w23, w25
    237c:	mov	x25, x28
    2380:	mov	x28, x22
    2384:	ldur	x22, [x29, #-144]
    2388:	ldur	w13, [x29, #-128]
    238c:	mov	x15, x26
    2390:	ldur	x8, [x29, #-112]
    2394:	add	x28, x28, #0x1
    2398:	cmp	x28, x8
    239c:	b.ne	1e28 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x820>  // b.any
    23a0:	b	23d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xdd0>
    23a4:	ldur	x22, [x29, #-144]
    23a8:	mov	x25, x23
    23ac:	mov	w23, w28
    23b0:	cbnz	x0, 202c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa24>
    23b4:	b	2030 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa28>
    23b8:	cmp	x12, #0x0
    23bc:	csel	x3, x0, x12, eq  // eq = none
    23c0:	b	1dd0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7c8>
    23c4:	ldr	x20, [sp, #144]
    23c8:	mov	x27, xzr
    23cc:	mov	x1, xzr
    23d0:	mov	w13, #0x1                   	// #1
    23d4:	stur	wzr, [x29, #-120]
    23d8:	ldur	w8, [x29, #-120]
    23dc:	subs	x19, x27, x1
    23e0:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    23e4:	movk	x9, #0xaaab
    23e8:	and	w8, w8, w13
    23ec:	asr	x10, x19, #3
    23f0:	and	w8, w8, #0x1
    23f4:	mul	x2, x10, x9
    23f8:	strb	w8, [x22, #329]
    23fc:	stur	x2, [x29, #-120]
    2400:	b.eq	273c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1134>  // b.none
    2404:	clz	x8, x2
    2408:	mov	w9, #0x7e                  	// #126
    240c:	sub	x2, x9, x8, lsl #1
    2410:	mov	x0, x1
    2414:	mov	x20, x1
    2418:	mov	x1, x27
    241c:	mov	x3, xzr
    2420:	bl	4790 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_>
    2424:	cmp	x19, #0x181
    2428:	b.lt	2564 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf5c>  // b.tstop
    242c:	add	x8, x20, #0x8
    2430:	add	x9, x20, #0x20
    2434:	mov	x14, x20
    2438:	mov	x12, x20
    243c:	mov	x1, x20
    2440:	ldr	x20, [sp, #144]
    2444:	ldur	x2, [x29, #-120]
    2448:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    244c:	mov	w10, #0x1                   	// #1
    2450:	movk	x11, #0xaaab
    2454:	b	2478 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe70>
    2458:	str	x13, [x1]
    245c:	ldur	q0, [x29, #-80]
    2460:	str	q0, [x8]
    2464:	add	x10, x10, #0x1
    2468:	cmp	x10, #0x10
    246c:	add	x9, x9, #0x18
    2470:	mov	x14, x12
    2474:	b.eq	26a4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x109c>  // b.none
    2478:	ldr	x13, [x12, #24]!
    247c:	ldr	x16, [x1]
    2480:	fmov	d0, x13
    2484:	fmov	d1, x16
    2488:	cnt	v0.8b, v0.8b
    248c:	cnt	v1.8b, v1.8b
    2490:	uaddlv	h0, v0.8b
    2494:	uaddlv	h1, v1.8b
    2498:	fmov	w15, s0
    249c:	fmov	w17, s1
    24a0:	cmp	w15, w17
    24a4:	b.cc	24b8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xeb0>  // b.lo, b.ul, b.last
    24a8:	cmp	x13, x16
    24ac:	b.cs	2504 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xefc>  // b.hs, b.nlast
    24b0:	cmp	w15, w17
    24b4:	b.hi	2504 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xefc>  // b.pmore
    24b8:	ldr	q0, [x14, #32]
    24bc:	sub	x14, x12, x1
    24c0:	cmp	x14, #0x1
    24c4:	stur	q0, [x29, #-80]
    24c8:	b.lt	2458 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe50>  // b.tstop
    24cc:	umulh	x14, x14, x11
    24d0:	lsr	x14, x14, #4
    24d4:	add	x14, x14, #0x1
    24d8:	mov	x15, x9
    24dc:	ldur	x16, [x15, #-32]
    24e0:	ldur	q0, [x15, #-24]
    24e4:	sub	x14, x14, #0x1
    24e8:	cmp	x14, #0x1
    24ec:	stur	x16, [x15, #-8]
    24f0:	sub	x16, x15, #0x18
    24f4:	str	q0, [x15]
    24f8:	mov	x15, x16
    24fc:	b.gt	24dc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xed4>
    2500:	b	2458 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe50>
    2504:	ldr	q0, [x14, #32]
    2508:	mov	x16, x12
    250c:	stur	q0, [x29, #-80]
    2510:	b	2528 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf20>
    2514:	str	x17, [x16]
    2518:	ldur	q0, [x14, #8]
    251c:	stur	q0, [x16, #8]
    2520:	mov	x16, x14
    2524:	sub	x14, x14, #0x18
    2528:	ldr	x17, [x14]
    252c:	fmov	d0, x17
    2530:	cnt	v0.8b, v0.8b
    2534:	uaddlv	h0, v0.8b
    2538:	fmov	w18, s0
    253c:	cmp	w15, w18
    2540:	b.cc	2514 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf0c>  // b.lo, b.ul, b.last
    2544:	cmp	x17, x13
    2548:	b.ls	2554 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf4c>  // b.plast
    254c:	cmp	w15, w18
    2550:	b.ls	2514 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf0c>  // b.plast
    2554:	str	x13, [x16]
    2558:	ldur	q0, [x29, #-80]
    255c:	stur	q0, [x16, #8]
    2560:	b	2464 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe5c>
    2564:	add	x8, x20, #0x18
    2568:	mov	x1, x20
    256c:	ldr	x20, [sp, #144]
    2570:	ldur	x2, [x29, #-120]
    2574:	cmp	x8, x27
    2578:	b.eq	273c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1134>  // b.none
    257c:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2580:	add	x9, x1, #0x8
    2584:	add	x10, x1, #0x20
    2588:	movk	x11, #0xaaab
    258c:	mov	x12, x1
    2590:	b	25b4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfac>
    2594:	str	x13, [x1]
    2598:	ldur	q0, [x29, #-80]
    259c:	str	q0, [x9]
    25a0:	add	x8, x8, #0x18
    25a4:	add	x12, x12, #0x18
    25a8:	cmp	x8, x27
    25ac:	add	x10, x10, #0x18
    25b0:	b.eq	273c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1134>  // b.none
    25b4:	ldr	x13, [x8]
    25b8:	ldr	x15, [x1]
    25bc:	fmov	d0, x13
    25c0:	fmov	d1, x15
    25c4:	cnt	v0.8b, v0.8b
    25c8:	cnt	v1.8b, v1.8b
    25cc:	uaddlv	h0, v0.8b
    25d0:	uaddlv	h1, v1.8b
    25d4:	fmov	w14, s0
    25d8:	fmov	w16, s1
    25dc:	cmp	w14, w16
    25e0:	b.cc	25f4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfec>  // b.lo, b.ul, b.last
    25e4:	cmp	x13, x15
    25e8:	b.cs	2640 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1038>  // b.hs, b.nlast
    25ec:	cmp	w14, w16
    25f0:	b.hi	2640 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1038>  // b.pmore
    25f4:	ldr	q0, [x12, #32]
    25f8:	sub	x14, x8, x1
    25fc:	cmp	x14, #0x1
    2600:	stur	q0, [x29, #-80]
    2604:	b.lt	2594 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf8c>  // b.tstop
    2608:	umulh	x14, x14, x11
    260c:	lsr	x14, x14, #4
    2610:	add	x14, x14, #0x1
    2614:	mov	x15, x10
    2618:	ldur	x16, [x15, #-32]
    261c:	ldur	q0, [x15, #-24]
    2620:	sub	x14, x14, #0x1
    2624:	cmp	x14, #0x1
    2628:	stur	x16, [x15, #-8]
    262c:	sub	x16, x15, #0x18
    2630:	str	q0, [x15]
    2634:	mov	x15, x16
    2638:	b.gt	2618 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1010>
    263c:	b	2594 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf8c>
    2640:	ldr	q0, [x12, #32]
    2644:	mov	x15, x12
    2648:	mov	x16, x8
    264c:	stur	q0, [x29, #-80]
    2650:	b	2668 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1060>
    2654:	str	x17, [x16]
    2658:	ldur	q0, [x15, #8]
    265c:	stur	q0, [x16, #8]
    2660:	mov	x16, x15
    2664:	sub	x15, x15, #0x18
    2668:	ldr	x17, [x15]
    266c:	fmov	d0, x17
    2670:	cnt	v0.8b, v0.8b
    2674:	uaddlv	h0, v0.8b
    2678:	fmov	w18, s0
    267c:	cmp	w14, w18
    2680:	b.cc	2654 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x104c>  // b.lo, b.ul, b.last
    2684:	cmp	x17, x13
    2688:	b.ls	2694 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x108c>  // b.plast
    268c:	cmp	w14, w18
    2690:	b.ls	2654 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x104c>  // b.plast
    2694:	str	x13, [x16]
    2698:	ldur	q0, [x29, #-80]
    269c:	stur	q0, [x16, #8]
    26a0:	b	25a0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf98>
    26a4:	add	x8, x1, #0x180
    26a8:	cmp	x8, x27
    26ac:	b.eq	273c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1134>  // b.none
    26b0:	add	x9, x1, #0x188
    26b4:	b	26d4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10cc>
    26b8:	stur	x10, [x11, #-8]
    26bc:	ldur	q0, [x29, #-80]
    26c0:	add	x8, x8, #0x18
    26c4:	cmp	x8, x27
    26c8:	add	x9, x9, #0x18
    26cc:	str	q0, [x11]
    26d0:	b.eq	273c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1134>  // b.none
    26d4:	ldr	x10, [x8]
    26d8:	ldur	q0, [x8, #8]
    26dc:	mov	x11, x9
    26e0:	fmov	d1, x10
    26e4:	cnt	v1.8b, v1.8b
    26e8:	uaddlv	h1, v1.8b
    26ec:	fmov	w12, s1
    26f0:	stur	q0, [x29, #-80]
    26f4:	b	270c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1104>
    26f8:	ldur	q0, [x11, #-24]
    26fc:	stur	x13, [x11, #-8]
    2700:	sub	x13, x11, #0x18
    2704:	str	q0, [x11]
    2708:	mov	x11, x13
    270c:	ldur	x13, [x11, #-32]
    2710:	fmov	d0, x13
    2714:	cnt	v0.8b, v0.8b
    2718:	uaddlv	h0, v0.8b
    271c:	fmov	w14, s0
    2720:	cmp	w12, w14
    2724:	b.cc	26f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10f0>  // b.lo, b.ul, b.last
    2728:	cmp	x13, x10
    272c:	b.ls	26b8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10b0>  // b.plast
    2730:	cmp	w12, w14
    2734:	b.ls	26f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10f0>  // b.plast
    2738:	b	26b8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10b0>
    273c:	stur	x1, [x29, #-112]
    2740:	cbz	w2, 29c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13b8>
    2744:	mov	x26, xzr
    2748:	mov	x25, xzr
    274c:	and	x8, x2, #0xffffffff
    2750:	mov	w21, #0x18                  	// #24
    2754:	mov	w23, #0x1                   	// #1
    2758:	str	xzr, [sp, #104]
    275c:	stur	x8, [x29, #-128]
    2760:	b	2780 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1178>
    2764:	ldur	x22, [x29, #-144]
    2768:	ldr	x20, [sp, #144]
    276c:	ldp	x25, x8, [x29, #-136]
    2770:	ldr	x26, [sp, #112]
    2774:	add	x23, x23, #0x1
    2778:	cmp	x26, x8
    277c:	b.eq	29c8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13c0>  // b.none
    2780:	madd	x19, x26, x21, x1
    2784:	mov	x28, x19
    2788:	mov	x24, x19
    278c:	ldr	w8, [x28, #12]!
    2790:	ldr	w9, [x24, #8]!
    2794:	cmp	w8, w9
    2798:	b.ne	27e4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11dc>  // b.any
    279c:	ldr	x8, [x19]
    27a0:	sub	x9, x8, #0x1
    27a4:	tst	x8, x9
    27a8:	b.eq	3c4c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2644>  // b.none
    27ac:	clz	x9, x8
    27b0:	cmp	x8, #0x0
    27b4:	mov	w8, #0x3f                  	// #63
    27b8:	sub	w8, w8, w9
    27bc:	mov	w9, #0x1                   	// #1
    27c0:	lsl	x8, x9, x8
    27c4:	csel	x8, xzr, x8, eq  // eq = none
    27c8:	orr	x25, x8, x25
    27cc:	add	x26, x26, #0x1
    27d0:	ldur	x8, [x29, #-128]
    27d4:	add	x23, x23, #0x1
    27d8:	cmp	x26, x8
    27dc:	b.ne	2780 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1178>  // b.any
    27e0:	b	29c8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13c0>
    27e4:	ldp	w8, w9, [x22, #184]
    27e8:	cmp	w8, w9
    27ec:	b.cs	29a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13a0>  // b.hs, b.nlast
    27f0:	ldr	x9, [x22, #176]
    27f4:	ldr	x10, [x19, #16]
    27f8:	ldr	q0, [x19]
    27fc:	stur	x25, [x29, #-136]
    2800:	umaddl	x8, w8, w21, x9
    2804:	str	x10, [x8, #16]
    2808:	str	q0, [x8]
    280c:	ldp	w8, w9, [x22, #184]
    2810:	cmp	w8, w9
    2814:	b.cs	3c6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2664>  // b.hs, b.nlast
    2818:	add	w8, w8, #0x1
    281c:	str	w8, [x22, #184]
    2820:	mov	x11, x26
    2824:	ldr	x26, [x19]
    2828:	fmov	d0, x26
    282c:	cnt	v0.8b, v0.8b
    2830:	uaddlv	h0, v0.8b
    2834:	fmov	w8, s0
    2838:	cmp	x8, #0x1
    283c:	b.ne	2850 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1248>  // b.any
    2840:	ldr	x8, [sp, #104]
    2844:	orr	x8, x26, x8
    2848:	str	x8, [sp, #104]
    284c:	b	287c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1274>
    2850:	clz	x8, x26
    2854:	mov	w9, #0x3f                  	// #63
    2858:	sub	w8, w9, w8
    285c:	mov	w9, #0x1                   	// #1
    2860:	lsl	x8, x9, x8
    2864:	ldur	x9, [x29, #-136]
    2868:	cmp	x26, #0x0
    286c:	csel	x8, xzr, x8, eq  // eq = none
    2870:	eor	x26, x8, x26
    2874:	orr	x9, x8, x9
    2878:	stur	x9, [x29, #-136]
    287c:	ldur	x8, [x29, #-128]
    2880:	add	x11, x11, #0x1
    2884:	str	x11, [sp, #112]
    2888:	cmp	x11, x8
    288c:	b.cs	276c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1164>  // b.hs, b.nlast
    2890:	mov	x20, x23
    2894:	b	28a4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x129c>
    2898:	add	x20, x20, #0x1
    289c:	cmp	w20, w2
    28a0:	b.eq	2764 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x115c>  // b.none
    28a4:	madd	x22, x20, x21, x1
    28a8:	ldr	x8, [x22]
    28ac:	bics	xzr, x26, x8
    28b0:	b.ne	2898 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1290>  // b.any
    28b4:	ldr	w25, [x28]
    28b8:	ldur	w10, [x29, #-16]
    28bc:	ldr	w27, [x24]
    28c0:	cbz	w10, 2934 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x132c>
    28c4:	ldr	x8, [x19]
    28c8:	cmn	x8, #0x2
    28cc:	b.cs	3bcc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x25c4>  // b.hs, b.nlast
    28d0:	ldur	x9, [x29, #-32]
    28d4:	mov	w11, #0x25                  	// #37
    28d8:	mul	w11, w8, w11
    28dc:	sub	w10, w10, #0x1
    28e0:	and	w11, w11, w10
    28e4:	add	x0, x9, w11, uxtw #4
    28e8:	ldr	x13, [x0]
    28ec:	cmp	x8, x13
    28f0:	b.eq	2958 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1350>  // b.none
    28f4:	mov	x12, xzr
    28f8:	mov	w14, #0x1                   	// #1
    28fc:	cmn	x13, #0x1
    2900:	b.eq	299c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1394>  // b.none
    2904:	cmp	x12, #0x0
    2908:	add	w11, w11, w14
    290c:	mov	x15, #0xfffffffffffffffe    	// #-2
    2910:	ccmp	x13, x15, #0x0, eq  // eq = none
    2914:	and	w11, w11, w10
    2918:	csel	x12, x12, x0, ne  // ne = any
    291c:	add	x0, x9, w11, uxtw #4
    2920:	ldr	x13, [x0]
    2924:	add	w14, w14, #0x1
    2928:	cmp	x8, x13
    292c:	b.eq	2958 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1350>  // b.none
    2930:	b	28fc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x12f4>
    2934:	mov	x3, xzr
    2938:	sub	x0, x29, #0x28
    293c:	mov	x1, x19
    2940:	mov	x2, x19
    2944:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2948:	ldr	x8, [x19]
    294c:	str	wzr, [x0, #8]
    2950:	str	x8, [x0]
    2954:	ldp	x2, x1, [x29, #-120]
    2958:	ldr	w9, [x0, #8]
    295c:	madd	x8, x20, x21, x1
    2960:	ldr	w10, [x8, #12]!
    2964:	sub	w11, w25, w27
    2968:	sub	w9, w11, w9
    296c:	subs	w9, w10, w9
    2970:	b.cc	3bac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x25a4>  // b.lo, b.ul, b.last
    2974:	str	w9, [x8]
    2978:	ldr	x8, [x22]
    297c:	sub	x9, x8, #0x1
    2980:	tst	x8, x9
    2984:	b.eq	2898 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1290>  // b.none
    2988:	madd	x8, x20, x21, x1
    298c:	ldr	w9, [x8, #20]
    2990:	add	w9, w9, #0x1
    2994:	str	w9, [x8, #20]
    2998:	b	2898 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1290>
    299c:	cmp	x12, #0x0
    29a0:	csel	x3, x0, x12, eq  // eq = none
    29a4:	b	2938 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1330>
    29a8:	ldr	x0, [sp, #24]
    29ac:	mov	x1, xzr
    29b0:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    29b4:	ldp	x2, x1, [x29, #-120]
    29b8:	ldr	w8, [x22, #184]
    29bc:	b	27f0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11e8>
    29c0:	mov	x25, xzr
    29c4:	str	xzr, [sp, #104]
    29c8:	ldr	w8, [x22, #184]
    29cc:	ldr	x23, [sp, #88]
    29d0:	ldp	x2, x1, [sp, #128]
    29d4:	ldr	x3, [sp, #32]
    29d8:	ldr	x21, [sp, #104]
    29dc:	cbz	w8, 2a48 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1440>
    29e0:	ldr	x10, [x22, #176]
    29e4:	add	x9, x8, x8, lsl #1
    29e8:	mov	w8, #0x3f                  	// #63
    29ec:	lsl	x9, x9, #3
    29f0:	add	x10, x10, #0x10
    29f4:	mov	w11, #0x1                   	// #1
    29f8:	b	2a08 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1400>
    29fc:	subs	x9, x9, #0x18
    2a00:	add	x10, x10, #0x18
    2a04:	b.eq	2a48 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1440>  // b.none
    2a08:	ldur	x12, [x10, #-16]
    2a0c:	sub	x13, x12, #0x1
    2a10:	tst	x12, x13
    2a14:	b.eq	29fc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13f4>  // b.none
    2a18:	ldrb	w13, [x10]
    2a1c:	cbnz	w13, 29fc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13f4>
    2a20:	clz	x13, x12
    2a24:	sub	w13, w8, w13
    2a28:	lsl	x13, x11, x13
    2a2c:	cmp	x12, #0x0
    2a30:	csel	x13, xzr, x13, eq  // eq = none
    2a34:	eor	x12, x13, x12
    2a38:	bics	xzr, x12, x21
    2a3c:	b.ne	29fc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13f4>  // b.any
    2a40:	strb	w11, [x10]
    2a44:	b	29fc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13f4>
    2a48:	ldur	w12, [x29, #-16]
    2a4c:	ldp	x10, x11, [x29, #-40]
    2a50:	ldur	w13, [x29, #-24]
    2a54:	add	x8, x11, x12, lsl #4
    2a58:	mov	x9, x8
    2a5c:	cbz	w13, 2a84 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x147c>
    2a60:	cbz	w12, 2bf8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x15f0>
    2a64:	lsl	x12, x12, #4
    2a68:	add	x9, x12, x11
    2a6c:	ldr	x13, [x11]
    2a70:	cmn	x13, #0x2
    2a74:	b.cc	2c08 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1600>  // b.lo, b.ul, b.last
    2a78:	subs	x12, x12, #0x10
    2a7c:	add	x11, x11, #0x10
    2a80:	b.ne	2a6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1464>  // b.any
    2a84:	cmp	w3, #0x1
    2a88:	b.ls	2c1c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1614>  // b.plast
    2a8c:	cmp	x9, x8
    2a90:	b.eq	2c58 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1650>  // b.none
    2a94:	ldr	x11, [x2, #40]
    2a98:	mov	w12, #0x1                   	// #1
    2a9c:	b	2aac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14a4>
    2aa0:	mov	x9, x8
    2aa4:	cmp	x9, x8
    2aa8:	b.eq	2c58 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1650>  // b.none
    2aac:	cbz	x11, 3bec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x25e4>
    2ab0:	ldur	w13, [x29, #-88]
    2ab4:	ldr	w14, [x2, #48]
    2ab8:	mov	w15, #0x30                  	// #48
    2abc:	mov	w16, #0x1                   	// #1
    2ac0:	cmp	w13, #0x41
    2ac4:	b.cc	2aec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14e4>  // b.lo, b.ul, b.last
    2ac8:	b	2b64 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x155c>
    2acc:	ldur	x18, [x29, #-96]
    2ad0:	lsl	x17, x12, x17
    2ad4:	orr	x17, x18, x17
    2ad8:	stur	x17, [x29, #-96]
    2adc:	add	x16, x16, #0x1
    2ae0:	cmp	x3, x16
    2ae4:	add	x15, x15, #0x20
    2ae8:	b.eq	2bc4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x15bc>  // b.none
    2aec:	cmp	x16, x14
    2af0:	b.cs	3b2c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2524>  // b.hs, b.nlast
    2af4:	ldr	x17, [x2, #32]
    2af8:	ldr	w17, [x17, x15]
    2afc:	cmn	w17, #0x1
    2b00:	b.eq	2adc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14d4>  // b.none
    2b04:	cmp	x16, x20
    2b08:	b.cs	3b4c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2544>  // b.hs, b.nlast
    2b0c:	ldr	x17, [x1, x16, lsl #3]
    2b10:	ldr	x18, [x9]
    2b14:	cmp	x17, x18
    2b18:	b.eq	2adc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14d4>  // b.none
    2b1c:	and	x0, x18, x17
    2b20:	cmp	x0, x18
    2b24:	b.ne	2adc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14d4>  // b.any
    2b28:	cbz	x17, 3b6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2564>
    2b2c:	clz	x17, x17
    2b30:	eor	w17, w17, #0x3f
    2b34:	cmp	w13, w17
    2b38:	b.hi	2acc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14c4>  // b.pmore
    2b3c:	b	3b8c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2584>
    2b40:	ldur	x18, [x29, #-96]
    2b44:	lsl	x17, x12, x17
    2b48:	ldr	x0, [x18]
    2b4c:	orr	x17, x0, x17
    2b50:	str	x17, [x18]
    2b54:	add	x16, x16, #0x1
    2b58:	cmp	x3, x16
    2b5c:	add	x15, x15, #0x20
    2b60:	b.eq	2bb8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x15b0>  // b.none
    2b64:	cmp	x16, x14
    2b68:	b.cs	3b2c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2524>  // b.hs, b.nlast
    2b6c:	ldr	x17, [x2, #32]
    2b70:	ldr	w17, [x17, x15]
    2b74:	cmn	w17, #0x1
    2b78:	b.eq	2b54 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x154c>  // b.none
    2b7c:	cmp	x16, x20
    2b80:	b.cs	3b4c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2544>  // b.hs, b.nlast
    2b84:	ldr	x17, [x1, x16, lsl #3]
    2b88:	ldr	x18, [x9]
    2b8c:	cmp	x17, x18
    2b90:	b.eq	2b54 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x154c>  // b.none
    2b94:	and	x0, x18, x17
    2b98:	cmp	x0, x18
    2b9c:	b.ne	2b54 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x154c>  // b.any
    2ba0:	cbz	x17, 3b6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2564>
    2ba4:	clz	x17, x17
    2ba8:	eor	w17, w17, #0x3f
    2bac:	cmp	w13, w17
    2bb0:	b.hi	2b40 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1538>  // b.pmore
    2bb4:	b	3b8c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2584>
    2bb8:	ldur	x13, [x29, #-40]
    2bbc:	cmp	x13, x10
    2bc0:	b.ne	3c98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2690>  // b.any
    2bc4:	add	x13, x9, #0x10
    2bc8:	cmp	x13, x8
    2bcc:	b.hi	3c2c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2624>  // b.pmore
    2bd0:	mov	x9, x8
    2bd4:	b.eq	2aa4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x149c>  // b.none
    2bd8:	mov	x9, x13
    2bdc:	ldr	x13, [x9]
    2be0:	cmn	x13, #0x2
    2be4:	b.cc	2aa4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x149c>  // b.lo, b.ul, b.last
    2be8:	add	x9, x9, #0x10
    2bec:	cmp	x8, x9
    2bf0:	b.ne	2bdc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x15d4>  // b.any
    2bf4:	b	2aa0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1498>
    2bf8:	mov	x9, x11
    2bfc:	cmp	w3, #0x1
    2c00:	b.ls	2c1c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1614>  // b.plast
    2c04:	b	2a8c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1484>
    2c08:	mov	x9, x11
    2c0c:	cmp	w3, #0x1
    2c10:	b.ls	2c1c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1614>  // b.plast
    2c14:	b	2a8c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1484>
    2c18:	mov	x9, x10
    2c1c:	cmp	x9, x8
    2c20:	b.eq	2c58 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1650>  // b.none
    2c24:	add	x10, x9, #0x10
    2c28:	cmp	x10, x8
    2c2c:	b.hi	3c2c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2624>  // b.pmore
    2c30:	mov	x9, x8
    2c34:	b.eq	2c1c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1614>  // b.none
    2c38:	ldr	x9, [x10]
    2c3c:	cmn	x9, #0x2
    2c40:	b.cc	2c18 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1610>  // b.lo, b.ul, b.last
    2c44:	add	x10, x10, #0x10
    2c48:	cmp	x8, x10
    2c4c:	b.ne	2c38 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1630>  // b.any
    2c50:	mov	x9, x8
    2c54:	b	2c1c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1614>
    2c58:	ldur	w19, [x29, #-88]
    2c5c:	cmp	w19, #0x41
    2c60:	b.cs	2c6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1664>  // b.hs, b.nlast
    2c64:	sub	x8, x29, #0x60
    2c68:	b	2c84 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x167c>
    2c6c:	sub	x0, x29, #0x60
    2c70:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    2c74:	sub	w8, w19, w0
    2c78:	cmp	w8, #0x41
    2c7c:	b.cs	3d38 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2730>  // b.hs, b.nlast
    2c80:	ldur	x8, [x29, #-96]
    2c84:	adrp	x9, 0 <_ZN4llvm9DebugFlagE>
    2c88:	ldr	x8, [x8]
    2c8c:	ldr	x9, [x9]
    2c90:	str	x25, [x22, #304]
    2c94:	stp	x8, x21, [x22, #288]
    2c98:	ldrb	w9, [x9]
    2c9c:	cbz	w9, 30e8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ae0>
    2ca0:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2ca4:	add	x0, x0, #0x0
    2ca8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    2cac:	tbz	w0, #0, 30e8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ae0>
    2cb0:	ldr	w8, [x22, #184]
    2cb4:	cbz	w8, 2f08 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1900>
    2cb8:	ldur	x9, [x29, #-144]
    2cbc:	adrp	x19, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2cc0:	adrp	x24, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2cc4:	adrp	x25, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2cc8:	ldr	x20, [x9, #176]
    2ccc:	mov	w9, #0x18                  	// #24
    2cd0:	adrp	x26, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2cd4:	add	x19, x19, #0x0
    2cd8:	mov	w21, #0x10                  	// #16
    2cdc:	mov	w22, #0x1                   	// #1
    2ce0:	add	x24, x24, #0x0
    2ce4:	add	x25, x25, #0x0
    2ce8:	add	x26, x26, #0x0
    2cec:	mov	w27, #0x3d                  	// #61
    2cf0:	mov	w28, #0x202c                	// #8236
    2cf4:	madd	x23, x8, x9, x20
    2cf8:	b	2d18 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1710>
    2cfc:	add	x9, x8, #0x1
    2d00:	str	x9, [x0, #24]
    2d04:	mov	w9, #0xa                   	// #10
    2d08:	strb	w9, [x8]
    2d0c:	add	x20, x20, #0x18
    2d10:	cmp	x20, x23
    2d14:	b.eq	2f08 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1900>  // b.none
    2d18:	bl	0 <_ZN4llvm4dbgsEv>
    2d1c:	ldp	x9, x8, [x0, #16]
    2d20:	sub	x9, x9, x8
    2d24:	cmp	x9, #0xf
    2d28:	b.hi	2d3c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1734>  // b.pmore
    2d2c:	mov	w2, #0x10                  	// #16
    2d30:	mov	x1, x19
    2d34:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2d38:	b	2d50 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1748>
    2d3c:	ldr	q0, [x19]
    2d40:	str	q0, [x8]
    2d44:	ldr	x8, [x0, #24]
    2d48:	add	x8, x8, #0x10
    2d4c:	str	x8, [x0, #24]
    2d50:	ldr	x8, [x20]
    2d54:	sub	x1, x29, #0x50
    2d58:	stur	w21, [x29, #-64]
    2d5c:	sturh	w22, [x29, #-60]
    2d60:	stp	x8, xzr, [x29, #-80]
    2d64:	sturb	w22, [x29, #-58]
    2d68:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    2d6c:	ldp	x9, x8, [x0, #16]
    2d70:	sub	x9, x9, x8
    2d74:	cmp	x9, #0x1
    2d78:	b.hi	2db4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x17ac>  // b.pmore
    2d7c:	mov	w2, #0x2                   	// #2
    2d80:	mov	x1, x24
    2d84:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2d88:	ldp	x9, x8, [x0, #16]
    2d8c:	sub	x9, x9, x8
    2d90:	cmp	x9, #0x8
    2d94:	b.ls	2dd0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x17c8>  // b.plast
    2d98:	ldr	x9, [x25]
    2d9c:	strb	w27, [x8, #8]
    2da0:	str	x9, [x8]
    2da4:	ldr	x8, [x0, #24]
    2da8:	add	x8, x8, #0x9
    2dac:	str	x8, [x0, #24]
    2db0:	b	2ddc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x17d4>
    2db4:	strh	w28, [x8]
    2db8:	ldp	x9, x8, [x0, #16]
    2dbc:	add	x8, x8, #0x2
    2dc0:	str	x8, [x0, #24]
    2dc4:	sub	x9, x9, x8
    2dc8:	cmp	x9, #0x8
    2dcc:	b.hi	2d98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1790>  // b.pmore
    2dd0:	mov	w2, #0x9                   	// #9
    2dd4:	mov	x1, x25
    2dd8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2ddc:	ldrb	w1, [x20, #16]
    2de0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    2de4:	ldp	x9, x8, [x0, #16]
    2de8:	sub	x9, x9, x8
    2dec:	cmp	x9, #0x1
    2df0:	b.hi	2e38 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1830>  // b.pmore
    2df4:	mov	w2, #0x2                   	// #2
    2df8:	mov	x1, x24
    2dfc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2e00:	ldp	x9, x8, [x0, #16]
    2e04:	sub	x9, x9, x8
    2e08:	cmp	x9, #0x6
    2e0c:	b.ls	2e54 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x184c>  // b.plast
    2e10:	mov	w9, #0x7469                	// #29801
    2e14:	movk	w9, #0x3d73, lsl #16
    2e18:	stur	w9, [x8, #3]
    2e1c:	mov	w9, #0x5523                	// #21795
    2e20:	movk	w9, #0x696e, lsl #16
    2e24:	str	w9, [x8]
    2e28:	ldr	x8, [x0, #24]
    2e2c:	add	x8, x8, #0x7
    2e30:	str	x8, [x0, #24]
    2e34:	b	2e60 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1858>
    2e38:	strh	w28, [x8]
    2e3c:	ldp	x9, x8, [x0, #16]
    2e40:	add	x8, x8, #0x2
    2e44:	str	x8, [x0, #24]
    2e48:	sub	x9, x9, x8
    2e4c:	cmp	x9, #0x6
    2e50:	b.hi	2e10 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1808>  // b.pmore
    2e54:	mov	w2, #0x7                   	// #7
    2e58:	mov	x1, x26
    2e5c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2e60:	ldr	w1, [x20, #20]
    2e64:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2e68:	ldp	x9, x8, [x0, #16]
    2e6c:	sub	x9, x9, x8
    2e70:	cmp	x9, #0x1
    2e74:	b.hi	2eb0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x18a8>  // b.pmore
    2e78:	mov	w2, #0x2                   	// #2
    2e7c:	mov	x1, x24
    2e80:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2e84:	ldp	x9, x8, [x0, #16]
    2e88:	sub	x9, x9, x8
    2e8c:	cmp	x9, #0x2
    2e90:	b.ls	2ecc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x18c4>  // b.plast
    2e94:	mov	w9, #0x7963                	// #31075
    2e98:	strb	w27, [x8, #2]
    2e9c:	strh	w9, [x8]
    2ea0:	ldr	x8, [x0, #24]
    2ea4:	add	x8, x8, #0x3
    2ea8:	str	x8, [x0, #24]
    2eac:	b	2edc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x18d4>
    2eb0:	strh	w28, [x8]
    2eb4:	ldp	x9, x8, [x0, #16]
    2eb8:	add	x8, x8, #0x2
    2ebc:	str	x8, [x0, #24]
    2ec0:	sub	x9, x9, x8
    2ec4:	cmp	x9, #0x2
    2ec8:	b.hi	2e94 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x188c>  // b.pmore
    2ecc:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2ed0:	mov	w2, #0x3                   	// #3
    2ed4:	add	x1, x1, #0x0
    2ed8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2edc:	ldp	w9, w8, [x20, #8]
    2ee0:	sub	w1, w8, w9
    2ee4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2ee8:	ldp	x9, x8, [x0, #16]
    2eec:	cmp	x8, x9
    2ef0:	b.cc	2cfc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x16f4>  // b.lo, b.ul, b.last
    2ef4:	mov	w1, #0xa                   	// #10
    2ef8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2efc:	add	x20, x20, #0x18
    2f00:	cmp	x20, x23
    2f04:	b.ne	2d18 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1710>  // b.any
    2f08:	ldur	x8, [x29, #-144]
    2f0c:	ldr	x20, [x8, #288]
    2f10:	cbz	x20, 2fbc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x19b4>
    2f14:	adrp	x19, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2f18:	add	x19, x19, #0x0
    2f1c:	mov	w21, #0x10                  	// #16
    2f20:	mov	w22, #0x1                   	// #1
    2f24:	mov	w23, #0xa                   	// #10
    2f28:	b	2f40 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1938>
    2f2c:	add	x9, x8, #0x1
    2f30:	str	x9, [x0, #24]
    2f34:	strb	w23, [x8]
    2f38:	eor	x20, x24, x20
    2f3c:	cbz	x20, 2fbc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x19b4>
    2f40:	neg	x8, x20
    2f44:	and	x24, x20, x8
    2f48:	bl	0 <_ZN4llvm4dbgsEv>
    2f4c:	ldp	x9, x8, [x0, #16]
    2f50:	sub	x9, x9, x8
    2f54:	cmp	x9, #0xd
    2f58:	b.hi	2f6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1964>  // b.pmore
    2f5c:	mov	w2, #0xe                   	// #14
    2f60:	mov	x1, x19
    2f64:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2f68:	b	2f88 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1980>
    2f6c:	ldur	x9, [x19, #6]
    2f70:	ldr	x10, [x19]
    2f74:	stur	x9, [x8, #6]
    2f78:	str	x10, [x8]
    2f7c:	ldr	x8, [x0, #24]
    2f80:	add	x8, x8, #0xe
    2f84:	str	x8, [x0, #24]
    2f88:	sub	x1, x29, #0x50
    2f8c:	stp	x24, xzr, [x29, #-80]
    2f90:	stur	w21, [x29, #-64]
    2f94:	sturh	w22, [x29, #-60]
    2f98:	sturb	w22, [x29, #-58]
    2f9c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    2fa0:	ldp	x9, x8, [x0, #16]
    2fa4:	cmp	x8, x9
    2fa8:	b.cc	2f2c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1924>  // b.lo, b.ul, b.last
    2fac:	mov	w1, #0xa                   	// #10
    2fb0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2fb4:	eor	x20, x24, x20
    2fb8:	cbnz	x20, 2f40 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1938>
    2fbc:	bl	0 <_ZN4llvm4dbgsEv>
    2fc0:	ldp	x9, x8, [x0, #16]
    2fc4:	sub	x9, x9, x8
    2fc8:	cmp	x9, #0xd
    2fcc:	b.hi	2fe4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x19dc>  // b.pmore
    2fd0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2fd4:	add	x1, x1, #0x0
    2fd8:	mov	w2, #0xe                   	// #14
    2fdc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2fe0:	b	3008 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a00>
    2fe4:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2fe8:	add	x9, x9, #0x0
    2fec:	ldur	x10, [x9, #6]
    2ff0:	ldr	x9, [x9]
    2ff4:	stur	x10, [x8, #6]
    2ff8:	str	x9, [x8]
    2ffc:	ldr	x8, [x0, #24]
    3000:	add	x8, x8, #0xe
    3004:	str	x8, [x0, #24]
    3008:	ldur	x22, [x29, #-144]
    300c:	mov	w9, #0x10                  	// #16
    3010:	mov	w10, #0x1                   	// #1
    3014:	sub	x1, x29, #0x50
    3018:	ldr	x8, [x22, #296]
    301c:	stur	w9, [x29, #-64]
    3020:	sturh	w10, [x29, #-60]
    3024:	sturb	w10, [x29, #-58]
    3028:	stp	x8, xzr, [x29, #-80]
    302c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    3030:	ldp	x9, x8, [x0, #16]
    3034:	ldr	x23, [sp, #88]
    3038:	cmp	x8, x9
    303c:	b.cs	3054 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a4c>  // b.hs, b.nlast
    3040:	add	x9, x8, #0x1
    3044:	mov	w10, #0xa                   	// #10
    3048:	str	x9, [x0, #24]
    304c:	strb	w10, [x8]
    3050:	b	305c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a54>
    3054:	mov	w1, #0xa                   	// #10
    3058:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    305c:	bl	0 <_ZN4llvm4dbgsEv>
    3060:	ldp	x9, x8, [x0, #16]
    3064:	sub	x9, x9, x8
    3068:	cmp	x9, #0xd
    306c:	b.hi	3084 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a7c>  // b.pmore
    3070:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3074:	add	x1, x1, #0x0
    3078:	mov	w2, #0xe                   	// #14
    307c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3080:	b	30a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1aa0>
    3084:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3088:	add	x9, x9, #0x0
    308c:	ldur	x10, [x9, #6]
    3090:	ldr	x9, [x9]
    3094:	stur	x10, [x8, #6]
    3098:	str	x9, [x8]
    309c:	ldr	x8, [x0, #24]
    30a0:	add	x8, x8, #0xe
    30a4:	str	x8, [x0, #24]
    30a8:	ldr	x8, [x22, #304]
    30ac:	mov	w9, #0x10                  	// #16
    30b0:	mov	w10, #0x1                   	// #1
    30b4:	sub	x1, x29, #0x50
    30b8:	stur	w9, [x29, #-64]
    30bc:	sturh	w10, [x29, #-60]
    30c0:	stp	x8, xzr, [x29, #-80]
    30c4:	sturb	w10, [x29, #-58]
    30c8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    30cc:	ldp	x9, x8, [x0, #16]
    30d0:	cmp	x8, x9
    30d4:	b.cs	329c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c94>  // b.hs, b.nlast
    30d8:	add	x9, x8, #0x1
    30dc:	mov	w10, #0xa                   	// #10
    30e0:	str	x9, [x0, #24]
    30e4:	strb	w10, [x8]
    30e8:	ldur	w8, [x29, #-88]
    30ec:	cmp	w8, #0x41
    30f0:	b.cc	3100 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1af8>  // b.lo, b.ul, b.last
    30f4:	ldur	x0, [x29, #-96]
    30f8:	cbz	x0, 3100 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1af8>
    30fc:	bl	0 <_ZdaPv>
    3100:	ldur	x0, [x29, #-32]
    3104:	bl	0 <_ZdlPv>
    3108:	ldur	x0, [x29, #-112]
    310c:	cbz	x0, 3114 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b0c>
    3110:	bl	0 <_ZdlPv>
    3114:	ldr	x8, [sp, #64]
    3118:	mov	w19, #0x64                  	// #100
    311c:	ldrb	w8, [x8]
    3120:	tbnz	w8, #6, 313c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b34>
    3124:	ldr	x8, [sp, #120]
    3128:	ldr	x1, [sp, #96]
    312c:	ldr	x0, [x8]
    3130:	bl	0 <_ZN4llvm12MCSchedModel19computeInstrLatencyERKNS_15MCSubtargetInfoERKNS_16MCSchedClassDescE>
    3134:	cmp	w0, #0x0
    3138:	csel	w19, w19, w0, lt  // lt = tstop
    313c:	ldr	x8, [sp, #48]
    3140:	ldr	x9, [sp, #72]
    3144:	str	w19, [x22, #312]
    3148:	ldr	x2, [sp, #152]
    314c:	add	x8, x9, x8, lsl #6
    3150:	ldrh	w9, [x8, #2]
    3154:	ldrb	w12, [x8, #4]
    3158:	ldr	x8, [sp, #64]
    315c:	ldr	x10, [x8]
    3160:	ldr	w8, [x2, #24]
    3164:	cbz	w12, 31a4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b9c>
    3168:	cbz	w8, 31a4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b9c>
    316c:	ldr	x13, [x2, #16]
    3170:	mov	x11, xzr
    3174:	ldrb	w14, [x13], #16
    3178:	add	x11, x11, #0x1
    317c:	cmp	w14, #0x1
    3180:	cset	w14, eq  // eq = none
    3184:	cmp	x11, x8
    3188:	sub	w12, w12, w14
    318c:	b.cs	3194 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b8c>  // b.hs, b.nlast
    3190:	cbnz	w12, 3174 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b6c>
    3194:	cbnz	w12, 31a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ba0>
    3198:	ldr	x21, [sp, #40]
    319c:	tbnz	w10, #2, 3268 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c60>
    31a0:	b	3290 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c88>
    31a4:	cbz	w12, 325c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c54>
    31a8:	mov	w0, #0x30                  	// #48
    31ac:	bl	0 <_Znwm>
    31b0:	sub	x8, x29, #0x28
    31b4:	mov	x19, x0
    31b8:	mov	w9, #0x2b                  	// #43
    31bc:	add	x20, x8, #0x10
    31c0:	sub	x0, x29, #0x28
    31c4:	sub	x1, x29, #0x50
    31c8:	mov	x2, xzr
    31cc:	stur	x20, [x29, #-40]
    31d0:	stur	x9, [x29, #-80]
    31d4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    31d8:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    31dc:	add	x9, x9, #0x0
    31e0:	ldur	x8, [x29, #-80]
    31e4:	ldur	q0, [x9, #27]
    31e8:	ldp	q1, q2, [x9]
    31ec:	stur	x0, [x29, #-40]
    31f0:	stur	x8, [x29, #-24]
    31f4:	stur	q0, [x0, #27]
    31f8:	stp	q1, q2, [x0]
    31fc:	stur	x8, [x29, #-32]
    3200:	strb	wzr, [x0, x8]
    3204:	adrp	x10, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3208:	ldur	x8, [x29, #-40]
    320c:	ldr	x10, [x10]
    3210:	add	x9, x19, #0x18
    3214:	cmp	x8, x20
    3218:	add	x10, x10, #0x10
    321c:	stp	x10, x9, [x19]
    3220:	b.eq	3234 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c2c>  // b.none
    3224:	ldur	x9, [x29, #-24]
    3228:	str	x8, [x19, #8]
    322c:	str	x9, [x19, #24]
    3230:	b	323c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c34>
    3234:	ldr	q0, [x20]
    3238:	str	q0, [x9]
    323c:	ldr	x2, [sp, #152]
    3240:	ldur	x9, [x29, #-32]
    3244:	ldr	x21, [sp, #40]
    3248:	orr	x8, x19, #0x1
    324c:	str	x2, [x19, #40]
    3250:	str	x9, [x19, #16]
    3254:	stur	x8, [x29, #-104]
    3258:	b	3410 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e08>
    325c:	mov	w11, wzr
    3260:	ldr	x21, [sp, #40]
    3264:	tbz	w10, #2, 3290 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c88>
    3268:	sub	w9, w9, #0x1
    326c:	cmp	w8, w9
    3270:	b.ls	3dc0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x27b8>  // b.plast
    3274:	cmp	w11, w8
    3278:	b.eq	32b4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1cac>  // b.none
    327c:	ldr	x8, [x2, #16]
    3280:	lsl	x9, x9, #4
    3284:	ldrb	w8, [x8, x9]
    3288:	cmp	w8, #0x1
    328c:	b.ne	32b4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1cac>  // b.any
    3290:	mov	w8, #0x1                   	// #1
    3294:	stur	x8, [x29, #-104]
    3298:	b	3410 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e08>
    329c:	mov	w1, #0xa                   	// #10
    32a0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    32a4:	ldur	w8, [x29, #-88]
    32a8:	cmp	w8, #0x41
    32ac:	b.cs	30f4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1aec>  // b.hs, b.nlast
    32b0:	b	3100 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1af8>
    32b4:	sub	x8, x29, #0x50
    32b8:	mov	w9, #0x64                  	// #100
    32bc:	add	x21, x8, #0x10
    32c0:	sub	x0, x29, #0x50
    32c4:	sub	x1, x29, #0x28
    32c8:	mov	x2, xzr
    32cc:	stur	x21, [x29, #-80]
    32d0:	stur	x9, [x29, #-40]
    32d4:	sub	x22, x29, #0x28
    32d8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    32dc:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    32e0:	add	x9, x9, #0x0
    32e4:	ldur	x8, [x29, #-40]
    32e8:	ldp	q0, q1, [x9]
    32ec:	ldp	q2, q3, [x9, #64]
    32f0:	stur	x0, [x29, #-80]
    32f4:	stur	x8, [x29, #-64]
    32f8:	stp	q0, q1, [x0]
    32fc:	ldp	q0, q1, [x9, #32]
    3300:	mov	w9, #0x657a                	// #25978
    3304:	movk	w9, #0x2e64, lsl #16
    3308:	str	w9, [x0, #96]
    330c:	stp	q2, q3, [x0, #64]
    3310:	stp	q0, q1, [x0, #32]
    3314:	stur	x8, [x29, #-72]
    3318:	strb	wzr, [x0, x8]
    331c:	mov	w0, #0x30                  	// #48
    3320:	bl	0 <_Znwm>
    3324:	ldp	x20, x24, [x29, #-80]
    3328:	mov	x19, x0
    332c:	add	x22, x22, #0x10
    3330:	stur	x22, [x29, #-40]
    3334:	cbnz	x20, 333c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d34>
    3338:	cbnz	x24, 3de0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x27d8>
    333c:	cmp	x24, #0x10
    3340:	mov	x0, x22
    3344:	stur	x24, [x29, #-96]
    3348:	b.cc	3368 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d60>  // b.lo, b.ul, b.last
    334c:	sub	x0, x29, #0x28
    3350:	sub	x1, x29, #0x60
    3354:	mov	x2, xzr
    3358:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    335c:	ldur	x8, [x29, #-96]
    3360:	stur	x0, [x29, #-40]
    3364:	stur	x8, [x29, #-24]
    3368:	ldr	x2, [sp, #152]
    336c:	cbz	x24, 3394 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d8c>
    3370:	cmp	x24, #0x1
    3374:	b.ne	3384 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d7c>  // b.any
    3378:	ldrb	w8, [x20]
    337c:	strb	w8, [x0]
    3380:	b	3394 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d8c>
    3384:	mov	x1, x20
    3388:	mov	x2, x24
    338c:	bl	0 <memcpy>
    3390:	ldr	x2, [sp, #152]
    3394:	ldur	x8, [x29, #-96]
    3398:	ldur	x9, [x29, #-40]
    339c:	adrp	x10, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    33a0:	stur	x8, [x29, #-32]
    33a4:	strb	wzr, [x9, x8]
    33a8:	ldur	x8, [x29, #-40]
    33ac:	ldr	x10, [x10]
    33b0:	add	x9, x19, #0x18
    33b4:	cmp	x8, x22
    33b8:	add	x10, x10, #0x10
    33bc:	stp	x10, x9, [x19]
    33c0:	b.eq	33d4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1dcc>  // b.none
    33c4:	ldur	x9, [x29, #-24]
    33c8:	str	x8, [x19, #8]
    33cc:	str	x9, [x19, #24]
    33d0:	b	33dc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1dd4>
    33d4:	ldr	q0, [x22]
    33d8:	str	q0, [x9]
    33dc:	ldur	x0, [x29, #-80]
    33e0:	ldur	x22, [x29, #-144]
    33e4:	ldur	x9, [x29, #-32]
    33e8:	orr	x8, x19, #0x1
    33ec:	cmp	x0, x21
    33f0:	str	x2, [x19, #40]
    33f4:	str	x9, [x19, #16]
    33f8:	stur	x8, [x29, #-104]
    33fc:	b.eq	340c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e04>  // b.none
    3400:	bl	0 <_ZdlPv>
    3404:	ldr	x2, [sp, #152]
    3408:	ldur	x8, [x29, #-104]
    340c:	ldr	x21, [sp, #40]
    3410:	tst	x8, #0xfffffffffffffffe
    3414:	and	x10, x8, #0xfffffffffffffffe
    3418:	cset	w9, ne  // ne = any
    341c:	orr	x9, x10, x9
    3420:	stur	x9, [x29, #-104]
    3424:	cbz	x10, 3490 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e88>
    3428:	ldrb	w9, [x23, #8]
    342c:	ands	x8, x8, #0xfffffffffffffffe
    3430:	stur	xzr, [x29, #-104]
    3434:	orr	w9, w9, #0x3
    3438:	strb	w9, [x23, #8]
    343c:	b.eq	3cf8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x26f0>  // b.none
    3440:	str	x8, [x23]
    3444:	ldr	x8, [sp, #24]
    3448:	ldr	x0, [x8]
    344c:	ldr	x8, [sp]
    3450:	cmp	x0, x8
    3454:	b.eq	345c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e54>  // b.none
    3458:	bl	0 <free>
    345c:	ldr	x0, [x22, #96]
    3460:	ldr	x8, [sp, #8]
    3464:	cmp	x0, x8
    3468:	b.eq	3470 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e68>  // b.none
    346c:	bl	0 <free>
    3470:	ldr	x0, [x22]
    3474:	ldr	x8, [sp, #16]
    3478:	cmp	x0, x8
    347c:	b.eq	3484 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e7c>  // b.none
    3480:	bl	0 <free>
    3484:	mov	x0, x22
    3488:	bl	0 <_ZdlPv>
    348c:	b	3a70 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2468>
    3490:	cbnz	x9, 3d78 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2770>
    3494:	ldr	x20, [sp, #120]
    3498:	mov	x1, x22
    349c:	mov	w3, w21
    34a0:	mov	x19, x2
    34a4:	mov	x0, x20
    34a8:	bl	10c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj>
    34ac:	mov	x0, x20
    34b0:	mov	x1, x22
    34b4:	mov	x2, x19
    34b8:	mov	w3, w21
    34bc:	bl	ca0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj>
    34c0:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    34c4:	ldr	x8, [x8]
    34c8:	ldrb	w8, [x8]
    34cc:	cbz	w8, 35f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ff0>
    34d0:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    34d4:	add	x0, x0, #0x0
    34d8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    34dc:	tbz	w0, #0, 355c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f54>
    34e0:	bl	0 <_ZN4llvm4dbgsEv>
    34e4:	ldp	x9, x8, [x0, #16]
    34e8:	sub	x9, x9, x8
    34ec:	cmp	x9, #0xc
    34f0:	b.hi	3508 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f00>  // b.pmore
    34f4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    34f8:	add	x1, x1, #0x0
    34fc:	mov	w2, #0xd                   	// #13
    3500:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3504:	b	352c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f24>
    3508:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    350c:	add	x9, x9, #0x0
    3510:	ldur	x10, [x9, #5]
    3514:	ldr	x9, [x9]
    3518:	stur	x10, [x8, #5]
    351c:	str	x9, [x8]
    3520:	ldr	x8, [x0, #24]
    3524:	add	x8, x8, #0xd
    3528:	str	x8, [x0, #24]
    352c:	ldr	w1, [x22, #312]
    3530:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    3534:	ldp	x9, x8, [x0, #16]
    3538:	cmp	x8, x9
    353c:	b.cs	3554 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f4c>  // b.hs, b.nlast
    3540:	add	x9, x8, #0x1
    3544:	mov	w10, #0xa                   	// #10
    3548:	str	x9, [x0, #24]
    354c:	strb	w10, [x8]
    3550:	b	355c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f54>
    3554:	mov	w1, #0xa                   	// #10
    3558:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    355c:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    3560:	ldr	x8, [x8]
    3564:	ldrb	w8, [x8]
    3568:	cbz	w8, 35f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ff0>
    356c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3570:	add	x0, x0, #0x0
    3574:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    3578:	tbz	w0, #0, 35f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ff0>
    357c:	bl	0 <_ZN4llvm4dbgsEv>
    3580:	ldp	x9, x8, [x0, #16]
    3584:	sub	x9, x9, x8
    3588:	cmp	x9, #0xd
    358c:	b.hi	35a4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f9c>  // b.pmore
    3590:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3594:	add	x1, x1, #0x0
    3598:	mov	w2, #0xe                   	// #14
    359c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    35a0:	b	35c8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fc0>
    35a4:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    35a8:	add	x9, x9, #0x0
    35ac:	ldur	x10, [x9, #6]
    35b0:	ldr	x9, [x9]
    35b4:	stur	x10, [x8, #6]
    35b8:	str	x9, [x8]
    35bc:	ldr	x8, [x0, #24]
    35c0:	add	x8, x8, #0xe
    35c4:	str	x8, [x0, #24]
    35c8:	ldr	w1, [x22, #316]
    35cc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    35d0:	ldp	x9, x8, [x0, #16]
    35d4:	cmp	x8, x9
    35d8:	b.cs	35f0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fe8>  // b.hs, b.nlast
    35dc:	add	x9, x8, #0x1
    35e0:	mov	w10, #0xa                   	// #10
    35e4:	str	x9, [x0, #24]
    35e8:	strb	w10, [x8]
    35ec:	b	35f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ff0>
    35f0:	mov	w1, #0xa                   	// #10
    35f4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    35f8:	ldr	w8, [x22, #316]
    35fc:	ldr	x11, [sp, #120]
    3600:	cbnz	w8, 3628 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2020>
    3604:	ldrb	w8, [x22, #324]
    3608:	ldrb	w9, [x22, #325]
    360c:	orr	w8, w9, w8
    3610:	tst	w8, #0xff
    3614:	b.ne	3778 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2170>  // b.any
    3618:	ldr	x9, [x22, #288]
    361c:	cbnz	x9, 3778 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2170>
    3620:	ldr	w9, [x22, #184]
    3624:	cbnz	w9, 3778 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2170>
    3628:	ldr	x15, [sp, #152]
    362c:	mov	w8, #0x1                   	// #1
    3630:	stur	x8, [x29, #-96]
    3634:	stur	xzr, [x29, #-96]
    3638:	ldr	w9, [sp, #60]
    363c:	mov	w8, #0x3ffe                	// #16382
    3640:	cmp	w9, w8
    3644:	b.eq	36ec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20e4>  // b.none
    3648:	ldr	x8, [sp, #64]
    364c:	ldr	x8, [x8]
    3650:	tbnz	w8, #1, 36ec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20e4>
    3654:	ldr	w8, [x15]
    3658:	add	x19, x11, #0x70
    365c:	sturh	w8, [x29, #-40]
    3660:	ldr	w10, [x11, #136]
    3664:	cbz	w10, 3914 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x230c>
    3668:	and	x8, x8, #0xffff
    366c:	mov	w9, #0xfffe                	// #65534
    3670:	cmp	w8, w9
    3674:	b.cs	3da0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2798>  // b.hs, b.nlast
    3678:	ldr	x9, [x11, #120]
    367c:	mov	w11, #0x25                  	// #37
    3680:	mul	x11, x8, x11
    3684:	sub	w10, w10, #0x1
    3688:	and	x11, x10, x11
    368c:	add	x0, x9, x11, lsl #4
    3690:	ldrh	w14, [x0]
    3694:	cmp	w14, w8
    3698:	b.eq	3934 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x232c>  // b.none
    369c:	ldr	x23, [sp, #88]
    36a0:	ldur	x22, [x29, #-144]
    36a4:	mov	x12, xzr
    36a8:	mov	w15, #0x1                   	// #1
    36ac:	mov	w13, #0xfffe                	// #65534
    36b0:	mvn	w16, w14
    36b4:	tst	w16, #0xffff
    36b8:	b.eq	3ae4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x24dc>  // b.none
    36bc:	and	w14, w14, #0xffff
    36c0:	cmp	x12, #0x0
    36c4:	add	w11, w11, w15
    36c8:	ccmp	w14, w13, #0x0, eq  // eq = none
    36cc:	and	w11, w11, w10
    36d0:	csel	x12, x12, x0, ne  // ne = any
    36d4:	add	x0, x9, w11, uxtw #4
    36d8:	ldrh	w14, [x0]
    36dc:	add	w15, w15, #0x1
    36e0:	cmp	w14, w8
    36e4:	b.eq	3934 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x232c>  // b.none
    36e8:	b	36b0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20a8>
    36ec:	stur	x15, [x29, #-40]
    36f0:	ldr	w9, [x11, #168]
    36f4:	add	x19, x11, #0x90
    36f8:	ubfx	x21, x15, #4, #28
    36fc:	cbz	w9, 3820 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2218>
    3700:	orr	x8, x15, #0x8
    3704:	cmn	x8, #0x8
    3708:	b.eq	3d58 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2750>  // b.none
    370c:	ldr	x8, [x11, #152]
    3710:	eor	w10, w21, w15, lsr #9
    3714:	sub	w9, w9, #0x1
    3718:	and	w10, w10, w9
    371c:	add	x0, x8, w10, uxtw #4
    3720:	ldr	x12, [x0]
    3724:	cmp	x12, x15
    3728:	b.eq	3840 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2238>  // b.none
    372c:	ldr	x15, [sp, #152]
    3730:	ldr	x23, [sp, #88]
    3734:	ldur	x22, [x29, #-144]
    3738:	mov	x11, xzr
    373c:	mov	w14, #0x1                   	// #1
    3740:	mov	x13, #0xfffffffffffffff0    	// #-16
    3744:	cmn	x12, #0x8
    3748:	b.eq	3af8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x24f0>  // b.none
    374c:	cmp	x11, #0x0
    3750:	add	w10, w10, w14
    3754:	ccmp	x12, x13, #0x0, eq  // eq = none
    3758:	and	w10, w10, w9
    375c:	csel	x11, x11, x0, ne  // ne = any
    3760:	add	x0, x8, w10, uxtw #4
    3764:	ldr	x12, [x0]
    3768:	add	w14, w14, #0x1
    376c:	cmp	x12, x15
    3770:	b.eq	3840 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2238>  // b.none
    3774:	b	3744 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x213c>
    3778:	adrp	x10, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    377c:	adrp	x11, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3780:	tst	w8, #0xff
    3784:	mov	w8, #0x65                  	// #101
    3788:	mov	w9, #0x6d                  	// #109
    378c:	add	x10, x10, #0x0
    3790:	add	x11, x11, #0x0
    3794:	mov	w0, #0x30                  	// #48
    3798:	csel	x20, x9, x8, ne  // ne = any
    379c:	csel	x21, x11, x10, ne  // ne = any
    37a0:	bl	0 <_Znwm>
    37a4:	sub	x8, x29, #0x28
    37a8:	mov	x19, x0
    37ac:	add	x22, x8, #0x10
    37b0:	sub	x0, x29, #0x28
    37b4:	sub	x1, x29, #0x50
    37b8:	mov	x2, xzr
    37bc:	stur	x22, [x29, #-40]
    37c0:	stur	x20, [x29, #-80]
    37c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    37c8:	ldur	x8, [x29, #-80]
    37cc:	mov	x1, x21
    37d0:	mov	x2, x20
    37d4:	stur	x0, [x29, #-40]
    37d8:	stur	x8, [x29, #-24]
    37dc:	bl	0 <memcpy>
    37e0:	ldur	x8, [x29, #-80]
    37e4:	ldur	x9, [x29, #-40]
    37e8:	adrp	x10, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    37ec:	stur	x8, [x29, #-32]
    37f0:	strb	wzr, [x9, x8]
    37f4:	ldur	x8, [x29, #-40]
    37f8:	ldr	x10, [x10]
    37fc:	add	x9, x19, #0x18
    3800:	cmp	x8, x22
    3804:	add	x10, x10, #0x10
    3808:	stp	x10, x9, [x19]
    380c:	b.eq	3a90 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2488>  // b.none
    3810:	ldur	x9, [x29, #-24]
    3814:	str	x8, [x19, #8]
    3818:	str	x9, [x19, #24]
    381c:	b	3a98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2490>
    3820:	mov	x3, xzr
    3824:	sub	x1, x29, #0x28
    3828:	sub	x2, x29, #0x28
    382c:	mov	x0, x19
    3830:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3834:	ldur	x8, [x29, #-40]
    3838:	stp	x8, xzr, [x0]
    383c:	ldr	x15, [sp, #152]
    3840:	ldr	x20, [x0, #8]
    3844:	str	x22, [x0, #8]
    3848:	cbz	x20, 3894 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x228c>
    384c:	ldr	x0, [x20, #176]
    3850:	add	x8, x20, #0xc0
    3854:	cmp	x0, x8
    3858:	b.eq	3860 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2258>  // b.none
    385c:	bl	0 <free>
    3860:	ldr	x0, [x20, #96]
    3864:	add	x8, x20, #0x70
    3868:	cmp	x0, x8
    386c:	b.eq	3874 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x226c>  // b.none
    3870:	bl	0 <free>
    3874:	mov	x8, x20
    3878:	ldr	x0, [x8], #16
    387c:	cmp	x0, x8
    3880:	b.eq	3888 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2280>  // b.none
    3884:	bl	0 <free>
    3888:	mov	x0, x20
    388c:	bl	0 <_ZdlPv>
    3890:	ldr	x15, [sp, #152]
    3894:	stur	x15, [x29, #-40]
    3898:	ldr	w9, [x19, #24]
    389c:	cbz	w9, 3a18 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2410>
    38a0:	orr	x8, x15, #0x8
    38a4:	cmn	x8, #0x8
    38a8:	b.eq	3d58 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2750>  // b.none
    38ac:	ldr	x8, [x19, #8]
    38b0:	eor	w10, w21, w15, lsr #9
    38b4:	sub	w9, w9, #0x1
    38b8:	and	w10, w10, w9
    38bc:	add	x0, x8, w10, uxtw #4
    38c0:	ldr	x12, [x0]
    38c4:	cmp	x12, x15
    38c8:	b.eq	3a58 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2450>  // b.none
    38cc:	ldr	x15, [sp, #152]
    38d0:	ldr	x23, [sp, #88]
    38d4:	mov	x11, xzr
    38d8:	mov	w14, #0x1                   	// #1
    38dc:	mov	x13, #0xfffffffffffffff0    	// #-16
    38e0:	cmn	x12, #0x8
    38e4:	b.eq	3b0c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2504>  // b.none
    38e8:	cmp	x11, #0x0
    38ec:	add	w10, w10, w14
    38f0:	ccmp	x12, x13, #0x0, eq  // eq = none
    38f4:	and	w10, w10, w9
    38f8:	csel	x11, x11, x0, ne  // ne = any
    38fc:	add	x0, x8, w10, uxtw #4
    3900:	ldr	x12, [x0]
    3904:	add	w14, w14, #0x1
    3908:	cmp	x12, x15
    390c:	b.eq	3a58 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2450>  // b.none
    3910:	b	38e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x22d8>
    3914:	mov	x3, xzr
    3918:	sub	x1, x29, #0x28
    391c:	sub	x2, x29, #0x28
    3920:	mov	x0, x19
    3924:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3928:	ldurh	w8, [x29, #-40]
    392c:	str	xzr, [x0, #8]
    3930:	strh	w8, [x0]
    3934:	ldr	x20, [x0, #8]
    3938:	str	x22, [x0, #8]
    393c:	cbz	x20, 3984 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x237c>
    3940:	ldr	x0, [x20, #176]
    3944:	add	x8, x20, #0xc0
    3948:	cmp	x0, x8
    394c:	b.eq	3954 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x234c>  // b.none
    3950:	bl	0 <free>
    3954:	ldr	x0, [x20, #96]
    3958:	add	x8, x20, #0x70
    395c:	cmp	x0, x8
    3960:	b.eq	3968 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2360>  // b.none
    3964:	bl	0 <free>
    3968:	mov	x8, x20
    396c:	ldr	x0, [x8], #16
    3970:	cmp	x0, x8
    3974:	b.eq	397c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2374>  // b.none
    3978:	bl	0 <free>
    397c:	mov	x0, x20
    3980:	bl	0 <_ZdlPv>
    3984:	ldr	x8, [sp, #152]
    3988:	ldr	w8, [x8]
    398c:	sturh	w8, [x29, #-40]
    3990:	ldr	w10, [x19, #24]
    3994:	cbz	w10, 3a38 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2430>
    3998:	and	x8, x8, #0xffff
    399c:	mov	w9, #0xfffe                	// #65534
    39a0:	cmp	w8, w9
    39a4:	b.cs	3da0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2798>  // b.hs, b.nlast
    39a8:	ldr	x9, [x19, #8]
    39ac:	mov	w11, #0x25                  	// #37
    39b0:	mul	x11, x8, x11
    39b4:	sub	w10, w10, #0x1
    39b8:	and	x11, x10, x11
    39bc:	add	x0, x9, x11, lsl #4
    39c0:	ldrh	w14, [x0]
    39c4:	cmp	w14, w8
    39c8:	b.eq	3a58 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2450>  // b.none
    39cc:	ldr	x23, [sp, #88]
    39d0:	mov	x12, xzr
    39d4:	mov	w15, #0x1                   	// #1
    39d8:	mov	w13, #0xfffe                	// #65534
    39dc:	mvn	w16, w14
    39e0:	tst	w16, #0xffff
    39e4:	b.eq	3b1c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2514>  // b.none
    39e8:	and	w14, w14, #0xffff
    39ec:	cmp	x12, #0x0
    39f0:	add	w11, w11, w15
    39f4:	ccmp	w14, w13, #0x0, eq  // eq = none
    39f8:	and	w11, w11, w10
    39fc:	csel	x12, x12, x0, ne  // ne = any
    3a00:	add	x0, x9, w11, uxtw #4
    3a04:	ldrh	w14, [x0]
    3a08:	add	w15, w15, #0x1
    3a0c:	cmp	w14, w8
    3a10:	b.eq	3a58 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2450>  // b.none
    3a14:	b	39dc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x23d4>
    3a18:	mov	x3, xzr
    3a1c:	sub	x1, x29, #0x28
    3a20:	sub	x2, x29, #0x28
    3a24:	mov	x0, x19
    3a28:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3a2c:	ldur	x8, [x29, #-40]
    3a30:	stp	x8, xzr, [x0]
    3a34:	b	3a58 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2450>
    3a38:	mov	x3, xzr
    3a3c:	sub	x1, x29, #0x28
    3a40:	sub	x2, x29, #0x28
    3a44:	mov	x0, x19
    3a48:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3a4c:	ldurh	w8, [x29, #-40]
    3a50:	str	xzr, [x0, #8]
    3a54:	strh	w8, [x0]
    3a58:	ldrb	w8, [x23, #8]
    3a5c:	ldr	x9, [x0, #8]
    3a60:	and	w8, w8, #0xfc
    3a64:	orr	w8, w8, #0x2
    3a68:	strb	w8, [x23, #8]
    3a6c:	str	x9, [x23]
    3a70:	ldp	x20, x19, [sp, #384]
    3a74:	ldp	x22, x21, [sp, #368]
    3a78:	ldp	x24, x23, [sp, #352]
    3a7c:	ldp	x26, x25, [sp, #336]
    3a80:	ldp	x28, x27, [sp, #320]
    3a84:	ldp	x29, x30, [sp, #304]
    3a88:	add	sp, sp, #0x190
    3a8c:	ret
    3a90:	ldr	q0, [x22]
    3a94:	str	q0, [x9]
    3a98:	ldr	x15, [sp, #152]
    3a9c:	ldr	x11, [sp, #120]
    3aa0:	ldur	x10, [x29, #-32]
    3aa4:	ldur	x22, [x29, #-144]
    3aa8:	tst	x19, #0xfffffffffffffffe
    3aac:	and	x8, x19, #0xfffffffffffffffe
    3ab0:	cset	w9, ne  // ne = any
    3ab4:	orr	x9, x8, x9
    3ab8:	str	x15, [x19, #40]
    3abc:	str	x10, [x19, #16]
    3ac0:	stur	x9, [x29, #-96]
    3ac4:	cbz	x8, 3ad8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x24d0>
    3ac8:	ldrb	w9, [x23, #8]
    3acc:	orr	w9, w9, #0x3
    3ad0:	strb	w9, [x23, #8]
    3ad4:	b	3440 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e38>
    3ad8:	cbz	x9, 3638 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2030>
    3adc:	sub	x0, x29, #0x60
    3ae0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    3ae4:	ldr	x23, [sp, #88]
    3ae8:	ldur	x22, [x29, #-144]
    3aec:	cmp	x12, #0x0
    3af0:	csel	x3, x0, x12, eq  // eq = none
    3af4:	b	3918 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2310>
    3af8:	ldr	x23, [sp, #88]
    3afc:	ldur	x22, [x29, #-144]
    3b00:	cmp	x11, #0x0
    3b04:	csel	x3, x0, x11, eq  // eq = none
    3b08:	b	3824 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x221c>
    3b0c:	ldr	x23, [sp, #88]
    3b10:	cmp	x11, #0x0
    3b14:	csel	x3, x0, x11, eq  // eq = none
    3b18:	b	3a1c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2414>
    3b1c:	ldr	x23, [sp, #88]
    3b20:	cmp	x12, #0x0
    3b24:	csel	x3, x0, x12, eq  // eq = none
    3b28:	b	3a3c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2434>
    3b2c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3b30:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3b34:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3b38:	add	x0, x0, #0x0
    3b3c:	add	x1, x1, #0x0
    3b40:	add	x3, x3, #0x0
    3b44:	mov	w2, #0x156                 	// #342
    3b48:	bl	0 <__assert_fail>
    3b4c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3b50:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3b54:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3b58:	add	x0, x0, #0x0
    3b5c:	add	x1, x1, #0x0
    3b60:	add	x3, x3, #0x0
    3b64:	mov	w2, #0xfa                  	// #250
    3b68:	bl	0 <__assert_fail>
    3b6c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3b70:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3b74:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3b78:	add	x0, x0, #0x0
    3b7c:	add	x1, x1, #0x0
    3b80:	add	x3, x3, #0x0
    3b84:	mov	w2, #0x64                  	// #100
    3b88:	bl	0 <__assert_fail>
    3b8c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3b90:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3b94:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3b98:	add	x0, x0, #0x0
    3b9c:	add	x1, x1, #0x0
    3ba0:	add	x3, x3, #0x0
    3ba4:	mov	w2, #0x59d                 	// #1437
    3ba8:	bl	0 <__assert_fail>
    3bac:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3bb0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3bb4:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3bb8:	add	x0, x0, #0x0
    3bbc:	add	x1, x1, #0x0
    3bc0:	add	x3, x3, #0x0
    3bc4:	mov	w2, #0x141                 	// #321
    3bc8:	bl	0 <__assert_fail>
    3bcc:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3bd0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3bd4:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3bd8:	add	x0, x0, #0x0
    3bdc:	add	x1, x1, #0x0
    3be0:	add	x3, x3, #0x0
    3be4:	mov	w2, #0x252                 	// #594
    3be8:	bl	0 <__assert_fail>
    3bec:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3bf0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3bf4:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3bf8:	add	x0, x0, #0x0
    3bfc:	add	x1, x1, #0x0
    3c00:	add	x3, x3, #0x0
    3c04:	mov	w2, #0x154                 	// #340
    3c08:	bl	0 <__assert_fail>
    3c0c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3c10:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3c14:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3c18:	add	x0, x0, #0x0
    3c1c:	add	x1, x1, #0x0
    3c20:	add	x3, x3, #0x0
    3c24:	mov	w2, #0x15d                 	// #349
    3c28:	bl	0 <__assert_fail>
    3c2c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3c30:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3c34:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3c38:	add	x0, x0, #0x0
    3c3c:	add	x1, x1, #0x0
    3c40:	add	x3, x3, #0x0
    3c44:	mov	w2, #0x4e0                 	// #1248
    3c48:	bl	0 <__assert_fail>
    3c4c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3c50:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3c54:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3c58:	add	x0, x0, #0x0
    3c5c:	add	x1, x1, #0x0
    3c60:	add	x3, x3, #0x0
    3c64:	mov	w2, #0x75                  	// #117
    3c68:	bl	0 <__assert_fail>
    3c6c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3c70:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3c74:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3c78:	add	x0, x0, #0x0
    3c7c:	add	x1, x1, #0x0
    3c80:	add	x3, x3, #0x0
    3c84:	mov	w2, #0x43                  	// #67
    3c88:	bl	0 <__assert_fail>
    3c8c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3c90:	add	x0, x0, #0x0
    3c94:	bl	0 <_ZSt20__throw_length_errorPKc>
    3c98:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3c9c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3ca0:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3ca4:	add	x0, x0, #0x0
    3ca8:	add	x1, x1, #0x0
    3cac:	add	x3, x3, #0x0
    3cb0:	mov	w2, #0x4cf                 	// #1231
    3cb4:	bl	0 <__assert_fail>
    3cb8:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3cbc:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3cc0:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3cc4:	add	x0, x0, #0x0
    3cc8:	add	x1, x1, #0x0
    3ccc:	add	x3, x3, #0x0
    3cd0:	mov	w2, #0x1ff                 	// #511
    3cd4:	bl	0 <__assert_fail>
    3cd8:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3cdc:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3ce0:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3ce4:	add	x0, x0, #0x0
    3ce8:	add	x1, x1, #0x0
    3cec:	add	x3, x3, #0x0
    3cf0:	mov	w2, #0x2d                  	// #45
    3cf4:	bl	0 <__assert_fail>
    3cf8:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3cfc:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3d00:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3d04:	add	x0, x0, #0x0
    3d08:	add	x1, x1, #0x0
    3d0c:	add	x3, x3, #0x0
    3d10:	mov	w2, #0x1ce                 	// #462
    3d14:	bl	0 <__assert_fail>
    3d18:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3d1c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3d20:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3d24:	add	x0, x0, #0x0
    3d28:	add	x1, x1, #0x0
    3d2c:	add	x3, x3, #0x0
    3d30:	mov	w2, #0x117                 	// #279
    3d34:	bl	0 <__assert_fail>
    3d38:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3d3c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3d40:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3d44:	add	x0, x0, #0x0
    3d48:	add	x1, x1, #0x0
    3d4c:	add	x3, x3, #0x0
    3d50:	mov	w2, #0x657                 	// #1623
    3d54:	bl	0 <__assert_fail>
    3d58:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3d5c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3d60:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3d64:	add	x0, x0, #0x0
    3d68:	add	x1, x1, #0x0
    3d6c:	add	x3, x3, #0x0
    3d70:	mov	w2, #0x252                 	// #594
    3d74:	bl	0 <__assert_fail>
    3d78:	sub	x0, x29, #0x68
    3d7c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    3d80:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3d84:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3d88:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3d8c:	add	x0, x0, #0x0
    3d90:	add	x1, x1, #0x0
    3d94:	add	x3, x3, #0x0
    3d98:	mov	w2, #0x33                  	// #51
    3d9c:	bl	0 <__assert_fail>
    3da0:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3da4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3da8:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3dac:	add	x0, x0, #0x0
    3db0:	add	x1, x1, #0x0
    3db4:	add	x3, x3, #0x0
    3db8:	mov	w2, #0x252                 	// #594
    3dbc:	bl	0 <__assert_fail>
    3dc0:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3dc4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3dc8:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3dcc:	add	x0, x0, #0x0
    3dd0:	add	x1, x1, #0x0
    3dd4:	add	x3, x3, #0x0
    3dd8:	mov	w2, #0x99                  	// #153
    3ddc:	bl	0 <__assert_fail>
    3de0:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3de4:	add	x0, x0, #0x0
    3de8:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000003dec <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE>:
    3dec:	sub	sp, sp, #0x30
    3df0:	stp	x29, x30, [sp, #16]
    3df4:	str	x19, [sp, #32]
    3df8:	add	x29, sp, #0x10
    3dfc:	ldrh	w9, [x1]
    3e00:	ldr	w11, [x0, #136]
    3e04:	ldr	x10, [x0, #120]
    3e08:	mov	x19, x8
    3e0c:	cbz	w11, 3e6c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x80>
    3e10:	mov	w8, #0xfffe                	// #65534
    3e14:	cmp	w9, w8
    3e18:	b.cs	4098 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x2ac>  // b.hs, b.nlast
    3e1c:	mov	w8, #0x25                  	// #37
    3e20:	mul	x12, x9, x8
    3e24:	sub	w8, w11, #0x1
    3e28:	and	x12, x8, x12
    3e2c:	add	x15, x10, x12, lsl #4
    3e30:	ldrh	w13, [x15]
    3e34:	cmp	w13, w9
    3e38:	b.eq	3e70 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x84>  // b.none
    3e3c:	mov	w14, #0x1                   	// #1
    3e40:	mvn	w13, w13
    3e44:	tst	w13, #0xffff
    3e48:	b.eq	3e6c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x80>  // b.none
    3e4c:	add	w12, w12, w14
    3e50:	and	w12, w12, w8
    3e54:	add	x15, x10, w12, uxtw #4
    3e58:	ldrh	w13, [x15]
    3e5c:	add	w14, w14, #0x1
    3e60:	cmp	w13, w9
    3e64:	b.eq	3e70 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x84>  // b.none
    3e68:	b	3e40 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x54>
    3e6c:	add	x15, x10, x11, lsl #4
    3e70:	add	x8, x10, x11, lsl #4
    3e74:	cmp	x15, x8
    3e78:	b.eq	3ef8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x10c>  // b.none
    3e7c:	strh	w9, [x29, #28]
    3e80:	cbz	w11, 3f5c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x170>
    3e84:	mov	w8, #0xfffe                	// #65534
    3e88:	cmp	w9, w8
    3e8c:	b.cs	40b8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x2cc>  // b.hs, b.nlast
    3e90:	mov	w8, #0x25                  	// #37
    3e94:	mul	w8, w9, w8
    3e98:	sub	w11, w11, #0x1
    3e9c:	and	w12, w11, w8
    3ea0:	add	x8, x10, w12, uxtw #4
    3ea4:	ldrh	w15, [x8]
    3ea8:	cmp	w15, w9
    3eac:	b.eq	4038 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x24c>  // b.none
    3eb0:	mov	x13, xzr
    3eb4:	mov	w16, #0x1                   	// #1
    3eb8:	mov	w14, #0xfffe                	// #65534
    3ebc:	mvn	w17, w15
    3ec0:	tst	w17, #0xffff
    3ec4:	b.eq	4060 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x274>  // b.none
    3ec8:	and	w15, w15, #0xffff
    3ecc:	cmp	x13, #0x0
    3ed0:	add	w12, w12, w16
    3ed4:	ccmp	w15, w14, #0x0, eq  // eq = none
    3ed8:	and	w12, w12, w11
    3edc:	csel	x13, x13, x8, ne  // ne = any
    3ee0:	add	x8, x10, w12, uxtw #4
    3ee4:	ldrh	w15, [x8]
    3ee8:	add	w16, w16, #0x1
    3eec:	cmp	w15, w9
    3ef0:	b.eq	4038 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x24c>  // b.none
    3ef4:	b	3ebc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xd0>
    3ef8:	ldr	w8, [x0, #168]
    3efc:	ldr	x9, [x0, #152]
    3f00:	ubfx	x10, x1, #4, #28
    3f04:	cbz	w8, 3f84 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x198>
    3f08:	orr	x11, x1, #0x8
    3f0c:	cmn	x11, #0x8
    3f10:	b.eq	4078 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x28c>  // b.none
    3f14:	eor	w12, w10, w1, lsr #9
    3f18:	sub	w11, w8, #0x1
    3f1c:	and	w12, w11, w12
    3f20:	add	x15, x9, w12, uxtw #4
    3f24:	ldr	x13, [x15]
    3f28:	cmp	x13, x1
    3f2c:	b.eq	3f88 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x19c>  // b.none
    3f30:	mov	w14, #0x1                   	// #1
    3f34:	cmn	x13, #0x8
    3f38:	b.eq	3f84 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x198>  // b.none
    3f3c:	add	w12, w12, w14
    3f40:	and	w12, w12, w11
    3f44:	add	x15, x9, w12, uxtw #4
    3f48:	ldr	x13, [x15]
    3f4c:	add	w14, w14, #0x1
    3f50:	cmp	x13, x1
    3f54:	b.eq	3f88 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x19c>  // b.none
    3f58:	b	3f34 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x148>
    3f5c:	mov	x3, xzr
    3f60:	add	x0, x0, #0x70
    3f64:	add	x1, x29, #0x1c
    3f68:	add	x2, x29, #0x1c
    3f6c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3f70:	ldrh	w9, [x29, #28]
    3f74:	mov	x8, x0
    3f78:	str	xzr, [x0, #8]
    3f7c:	strh	w9, [x0]
    3f80:	b	4038 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x24c>
    3f84:	add	x15, x9, x8, lsl #4
    3f88:	add	x11, x9, x8, lsl #4
    3f8c:	cmp	x15, x11
    3f90:	b.eq	4004 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x218>  // b.none
    3f94:	str	x1, [sp, #8]
    3f98:	cbz	w8, 4018 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x22c>
    3f9c:	orr	x11, x1, #0x8
    3fa0:	cmn	x11, #0x8
    3fa4:	b.eq	4078 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x28c>  // b.none
    3fa8:	eor	w11, w10, w1, lsr #9
    3fac:	sub	w10, w8, #0x1
    3fb0:	and	w11, w11, w10
    3fb4:	add	x8, x9, w11, uxtw #4
    3fb8:	ldr	x13, [x8]
    3fbc:	cmp	x13, x1
    3fc0:	b.eq	4038 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x24c>  // b.none
    3fc4:	mov	x12, xzr
    3fc8:	mov	w15, #0x1                   	// #1
    3fcc:	mov	x14, #0xfffffffffffffff0    	// #-16
    3fd0:	cmn	x13, #0x8
    3fd4:	b.eq	406c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x280>  // b.none
    3fd8:	cmp	x12, #0x0
    3fdc:	add	w11, w11, w15
    3fe0:	ccmp	x13, x14, #0x0, eq  // eq = none
    3fe4:	and	w11, w11, w10
    3fe8:	csel	x12, x12, x8, ne  // ne = any
    3fec:	add	x8, x9, w11, uxtw #4
    3ff0:	ldr	x13, [x8]
    3ff4:	add	w15, w15, #0x1
    3ff8:	cmp	x13, x1
    3ffc:	b.eq	4038 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x24c>  // b.none
    4000:	b	3fd0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1e4>
    4004:	mov	x8, x19
    4008:	ldr	x19, [sp, #32]
    400c:	ldp	x29, x30, [sp, #16]
    4010:	add	sp, sp, #0x30
    4014:	b	1608 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE>
    4018:	mov	x3, xzr
    401c:	add	x0, x0, #0x90
    4020:	add	x1, sp, #0x8
    4024:	add	x2, sp, #0x8
    4028:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    402c:	ldr	x9, [sp, #8]
    4030:	mov	x8, x0
    4034:	stp	x9, xzr, [x0]
    4038:	ldrb	w9, [x19, #8]
    403c:	ldr	x8, [x8, #8]
    4040:	and	w9, w9, #0xfc
    4044:	orr	w9, w9, #0x2
    4048:	strb	w9, [x19, #8]
    404c:	str	x8, [x19]
    4050:	ldr	x19, [sp, #32]
    4054:	ldp	x29, x30, [sp, #16]
    4058:	add	sp, sp, #0x30
    405c:	ret
    4060:	cmp	x13, #0x0
    4064:	csel	x3, x8, x13, eq  // eq = none
    4068:	b	3f60 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x174>
    406c:	cmp	x12, #0x0
    4070:	csel	x3, x8, x12, eq  // eq = none
    4074:	b	401c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x230>
    4078:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    407c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4080:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4084:	add	x0, x0, #0x0
    4088:	add	x1, x1, #0x0
    408c:	add	x3, x3, #0x0
    4090:	mov	w2, #0x252                 	// #594
    4094:	bl	0 <__assert_fail>
    4098:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    409c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    40a0:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    40a4:	add	x0, x0, #0x0
    40a8:	add	x1, x1, #0x0
    40ac:	add	x3, x3, #0x0
    40b0:	mov	w2, #0x252                 	// #594
    40b4:	bl	0 <__assert_fail>
    40b8:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    40bc:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    40c0:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    40c4:	add	x0, x0, #0x0
    40c8:	add	x1, x1, #0x0
    40cc:	add	x3, x3, #0x0
    40d0:	mov	w2, #0x252                 	// #594
    40d4:	bl	0 <__assert_fail>

00000000000040d8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE>:
    40d8:	sub	sp, sp, #0xc0
    40dc:	str	d8, [sp, #80]
    40e0:	stp	x29, x30, [sp, #96]
    40e4:	stp	x28, x27, [sp, #112]
    40e8:	stp	x26, x25, [sp, #128]
    40ec:	stp	x24, x23, [sp, #144]
    40f0:	stp	x22, x21, [sp, #160]
    40f4:	stp	x20, x19, [sp, #176]
    40f8:	add	x29, sp, #0x50
    40fc:	mov	x19, x8
    4100:	sub	x8, x29, #0x10
    4104:	mov	x20, x1
    4108:	mov	x23, x0
    410c:	bl	3dec <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE>
    4110:	ldurb	w10, [x29, #-8]
    4114:	ubfiz	w9, w10, #1, #1
    4118:	and	w8, w10, #0xfffffffd
    411c:	orr	w11, w9, w8
    4120:	sturb	w11, [x29, #-8]
    4124:	tbnz	w10, #0, 41e0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x108>
    4128:	cbnz	w9, 4768 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x690>
    412c:	ldur	x28, [x29, #-16]
    4130:	mov	w0, #0x350                 	// #848
    4134:	bl	0 <_Znwm>
    4138:	adrp	x10, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    413c:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4140:	ldr	d0, [x10]
    4144:	ldr	d8, [x9]
    4148:	add	x8, x0, #0x20
    414c:	mov	x11, x0
    4150:	str	x28, [x0]
    4154:	strb	wzr, [x0, #8]
    4158:	add	x10, x0, #0x250
    415c:	str	x8, [x11, #16]!
    4160:	str	d0, [x0, #784]
    4164:	movi	v0.2d, #0x0
    4168:	str	x10, [x0, #576]
    416c:	str	d0, [x0, #792]
    4170:	str	d8, [x0, #24]
    4174:	str	d8, [x0, #584]
    4178:	ldr	x8, [x28, #288]
    417c:	mov	w9, #0x1                   	// #1
    4180:	stur	w9, [x29, #-24]
    4184:	stur	xzr, [x29, #-32]
    4188:	str	x8, [x0, #800]
    418c:	add	x8, x0, #0x328
    4190:	strb	wzr, [x8, #32]
    4194:	stp	q0, q0, [x8]
    4198:	mov	x21, x0
    419c:	ldr	x0, [x23, #24]
    41a0:	stp	x11, x10, [sp, #8]
    41a4:	str	x19, [x29, #8]
    41a8:	cbz	x0, 4208 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x130>
    41ac:	ldr	x8, [x23]
    41b0:	ldr	x9, [x0]
    41b4:	sub	x2, x29, #0x20
    41b8:	mov	x1, x20
    41bc:	ldr	x8, [x8, #152]
    41c0:	ldr	w25, [x8, #28]
    41c4:	ldr	x8, [x9, #80]
    41c8:	mov	w3, w25
    41cc:	blr	x8
    41d0:	and	w22, w0, #0x1
    41d4:	tbz	w0, #0, 4214 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x13c>
    41d8:	mov	w26, #0x1                   	// #1
    41dc:	b	4234 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x15c>
    41e0:	ldur	x9, [x29, #-16]
    41e4:	ldrb	w10, [x19, #8]
    41e8:	sturb	w8, [x29, #-8]
    41ec:	stur	xzr, [x29, #-16]
    41f0:	ands	x9, x9, #0xfffffffffffffffe
    41f4:	orr	w10, w10, #0x3
    41f8:	strb	w10, [x19, #8]
    41fc:	b.eq	4770 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x698>  // b.none
    4200:	str	x9, [x19]
    4204:	b	4684 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5ac>
    4208:	mov	w22, wzr
    420c:	mov	w26, wzr
    4210:	b	4258 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x180>
    4214:	ldr	x0, [x23, #24]
    4218:	sub	x2, x29, #0x20
    421c:	mov	x1, x20
    4220:	mov	w3, w25
    4224:	ldr	x8, [x0]
    4228:	ldr	x8, [x8, #88]
    422c:	blr	x8
    4230:	mov	w26, w0
    4234:	ldr	x0, [x23, #24]
    4238:	mov	x1, x20
    423c:	mov	w2, w25
    4240:	ldr	x8, [x0]
    4244:	ldr	x8, [x8, #96]
    4248:	blr	x8
    424c:	tbz	w0, #0, 4258 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x180>
    4250:	mov	w8, #0x1                   	// #1
    4254:	strb	w8, [x21, #8]
    4258:	ldr	w8, [x28, #104]
    425c:	str	w22, [sp, #28]
    4260:	cbz	w8, 448c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3b4>
    4264:	ldr	x25, [x28, #96]
    4268:	add	x9, x21, #0x240
    426c:	lsl	x24, x8, #4
    4270:	str	x9, [sp]
    4274:	tbz	w26, #0, 43c0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2e8>
    4278:	mov	w26, #0x30                  	// #48
    427c:	mov	w11, #0xfffffe00            	// #-512
    4280:	mov	w19, #0x1                   	// #1
    4284:	b	42a0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1c8>
    4288:	ldr	w8, [x25]
    428c:	tbnz	w8, #31, 4294 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1bc>
    4290:	strb	w19, [x22, #42]
    4294:	subs	x24, x24, #0x10
    4298:	add	x25, x25, #0x10
    429c:	b.eq	448c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3b4>  // b.none
    42a0:	ldr	w8, [x25]
    42a4:	tbnz	w8, #31, 42dc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x204>
    42a8:	ldr	w9, [x20, #24]
    42ac:	cmp	w9, w8
    42b0:	b.ls	46c8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5f0>  // b.plast
    42b4:	ldr	x9, [x20, #16]
    42b8:	lsl	x10, x8, #4
    42bc:	ldrb	w10, [x9, x10]
    42c0:	cmp	w10, #0x1
    42c4:	b.ne	4294 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1bc>  // b.any
    42c8:	add	x8, x9, x8, lsl #4
    42cc:	ldr	w22, [x8, #8]
    42d0:	tst	w22, #0xffff
    42d4:	b.ne	42e8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x210>  // b.any
    42d8:	b	4294 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1bc>
    42dc:	ldrh	w22, [x25, #8]
    42e0:	tst	w22, #0xffff
    42e4:	b.eq	4294 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1bc>  // b.none
    42e8:	ldr	w8, [x21, #584]
    42ec:	ldr	w9, [x21, #588]
    42f0:	cmp	w8, w9
    42f4:	b.cs	43a0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2c8>  // b.hs, b.nlast
    42f8:	ldr	x9, [x21, #576]
    42fc:	umaddl	x8, w8, w26, x9
    4300:	str	x25, [x8]
    4304:	strh	w22, [x8, #8]
    4308:	stp	wzr, wzr, [x8, #12]
    430c:	str	w11, [x8, #20]
    4310:	stp	xzr, xzr, [x8, #24]
    4314:	strh	w19, [x8, #40]
    4318:	strb	wzr, [x8, #42]
    431c:	ldr	w8, [x21, #584]
    4320:	ldr	w9, [x21, #588]
    4324:	cmp	w8, w9
    4328:	b.cs	46e8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x610>  // b.hs, b.nlast
    432c:	ldr	x9, [x21, #576]
    4330:	ldur	w27, [x29, #-24]
    4334:	add	x8, x8, #0x1
    4338:	str	w8, [x21, #584]
    433c:	madd	x8, x8, x26, x9
    4340:	cmp	w27, #0x41
    4344:	sub	x22, x8, #0x30
    4348:	b.cs	4358 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x280>  // b.hs, b.nlast
    434c:	ldur	x8, [x29, #-32]
    4350:	cbnz	x8, 436c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x294>
    4354:	b	4288 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1b0>
    4358:	sub	x0, x29, #0x20
    435c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    4360:	mov	w11, #0xfffffe00            	// #-512
    4364:	cmp	w0, w27
    4368:	b.eq	4288 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1b0>  // b.none
    436c:	ldr	w8, [x25, #4]
    4370:	cmp	w27, w8
    4374:	b.ls	4294 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1bc>  // b.plast
    4378:	ldur	x9, [x29, #-32]
    437c:	ubfx	x10, x8, #6, #26
    4380:	cmp	w27, #0x41
    4384:	add	x9, x9, w10, uxtw #3
    4388:	sub	x10, x29, #0x20
    438c:	csel	x9, x10, x9, cc  // cc = lo, ul, last
    4390:	ldr	x9, [x9]
    4394:	lsr	x8, x9, x8
    4398:	tbnz	w8, #0, 4290 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1b8>
    439c:	b	4294 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1bc>
    43a0:	ldr	x0, [sp]
    43a4:	ldr	x1, [sp, #16]
    43a8:	mov	w3, #0x30                  	// #48
    43ac:	mov	x2, xzr
    43b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    43b4:	ldr	w8, [x21, #584]
    43b8:	mov	w11, #0xfffffe00            	// #-512
    43bc:	b	42f8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x220>
    43c0:	mov	w19, #0x30                  	// #48
    43c4:	mov	w22, #0xfffffe00            	// #-512
    43c8:	mov	w26, #0x1                   	// #1
    43cc:	b	4418 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x340>
    43d0:	ldr	x9, [x21, #576]
    43d4:	umaddl	x8, w8, w19, x9
    43d8:	str	x25, [x8]
    43dc:	strh	w27, [x8, #8]
    43e0:	stp	wzr, wzr, [x8, #12]
    43e4:	str	w22, [x8, #20]
    43e8:	stp	xzr, xzr, [x8, #24]
    43ec:	strh	w26, [x8, #40]
    43f0:	strb	wzr, [x8, #42]
    43f4:	ldr	w8, [x21, #584]
    43f8:	ldr	w9, [x21, #588]
    43fc:	cmp	w8, w9
    4400:	b.cs	46e8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x610>  // b.hs, b.nlast
    4404:	add	w8, w8, #0x1
    4408:	str	w8, [x21, #584]
    440c:	subs	x24, x24, #0x10
    4410:	add	x25, x25, #0x10
    4414:	b.eq	448c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3b4>  // b.none
    4418:	ldr	w8, [x25]
    441c:	tbnz	w8, #31, 4454 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x37c>
    4420:	ldr	w9, [x20, #24]
    4424:	cmp	w9, w8
    4428:	b.ls	46c8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5f0>  // b.plast
    442c:	ldr	x9, [x20, #16]
    4430:	lsl	x10, x8, #4
    4434:	ldrb	w10, [x9, x10]
    4438:	cmp	w10, #0x1
    443c:	b.ne	440c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x334>  // b.any
    4440:	add	x8, x9, x8, lsl #4
    4444:	ldr	w27, [x8, #8]
    4448:	tst	w27, #0xffff
    444c:	b.ne	4460 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x388>  // b.any
    4450:	b	440c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x334>
    4454:	ldrh	w27, [x25, #8]
    4458:	tst	w27, #0xffff
    445c:	b.eq	440c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x334>  // b.none
    4460:	ldr	w8, [x21, #584]
    4464:	ldr	w9, [x21, #588]
    4468:	cmp	w8, w9
    446c:	b.cc	43d0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2f8>  // b.lo, b.ul, b.last
    4470:	ldr	x0, [sp]
    4474:	ldr	x1, [sp, #16]
    4478:	mov	w3, #0x30                  	// #48
    447c:	mov	x2, xzr
    4480:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4484:	ldr	w8, [x21, #584]
    4488:	b	43d0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2f8>
    448c:	ldr	w8, [x28, #8]
    4490:	cbz	w8, 44b0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3d8>
    4494:	cmp	w8, #0x40
    4498:	str	w8, [sp, #40]
    449c:	b.hi	44cc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3f4>  // b.pmore
    44a0:	str	xzr, [sp, #32]
    44a4:	ldr	x0, [x23, #24]
    44a8:	cbnz	x0, 44e4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x40c>
    44ac:	b	44fc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x424>
    44b0:	ldr	x9, [x29, #8]
    44b4:	ldrb	w8, [x9, #8]
    44b8:	str	x21, [x9]
    44bc:	and	w8, w8, #0xfc
    44c0:	orr	w8, w8, #0x2
    44c4:	strb	w8, [x9, #8]
    44c8:	b	4668 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x590>
    44cc:	add	x0, sp, #0x20
    44d0:	mov	x1, xzr
    44d4:	mov	w2, wzr
    44d8:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    44dc:	ldr	x0, [x23, #24]
    44e0:	cbz	x0, 44fc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x424>
    44e4:	ldr	x8, [x0]
    44e8:	ldr	x1, [x23, #16]
    44ec:	add	x3, sp, #0x20
    44f0:	mov	x2, x20
    44f4:	ldr	x8, [x8, #72]
    44f8:	blr	x8
    44fc:	ldr	w8, [x28, #8]
    4500:	ldr	w11, [sp, #28]
    4504:	cbz	w8, 4638 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x560>
    4508:	ldr	x22, [x28]
    450c:	mov	w9, #0x14                  	// #20
    4510:	mov	w19, wzr
    4514:	add	x23, sp, #0x20
    4518:	mov	w24, #0x88                  	// #136
    451c:	mov	w25, #0xfffffe00            	// #-512
    4520:	madd	x26, x8, x9, x22
    4524:	movi	v0.2d, #0x0
    4528:	b	453c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x464>
    452c:	add	x22, x22, #0x14
    4530:	cmp	x22, x26
    4534:	add	w19, w19, #0x1
    4538:	b.eq	4638 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x560>  // b.none
    453c:	ldr	w8, [x22]
    4540:	tbnz	w8, #31, 4578 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4a0>
    4544:	ldr	w9, [x20, #24]
    4548:	cmp	w9, w8
    454c:	b.ls	46c8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5f0>  // b.plast
    4550:	ldr	x9, [x20, #16]
    4554:	lsl	x10, x8, #4
    4558:	ldrb	w10, [x9, x10]
    455c:	cmp	w10, #0x1
    4560:	b.ne	4708 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x630>  // b.any
    4564:	add	x8, x9, x8, lsl #4
    4568:	ldr	w28, [x8, #8]
    456c:	ldrb	w8, [x22, #16]
    4570:	cbnz	w8, 4584 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4ac>
    4574:	b	458c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4b4>
    4578:	ldrh	w28, [x22, #8]
    457c:	ldrb	w8, [x22, #16]
    4580:	cbz	w8, 458c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4b4>
    4584:	tst	w28, #0xffff
    4588:	b.eq	452c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x454>  // b.none
    458c:	tst	w28, #0xffff
    4590:	b.eq	4728 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x650>  // b.none
    4594:	ldr	w8, [sp, #40]
    4598:	cmp	w8, w19
    459c:	b.ls	4748 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x670>  // b.plast
    45a0:	ldr	x9, [sp, #32]
    45a4:	lsr	w10, w19, #6
    45a8:	cmp	w8, #0x41
    45ac:	add	x8, x9, w10, uxtw #3
    45b0:	csel	x8, x23, x8, cc  // cc = lo, ul, last
    45b4:	ldr	x9, [x8]
    45b8:	ldp	w8, w10, [x21, #24]
    45bc:	lsr	x9, x9, x19
    45c0:	cmp	w8, w10
    45c4:	and	w27, w9, #0x1
    45c8:	b.cs	461c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x544>  // b.hs, b.nlast
    45cc:	ldr	x9, [x21, #16]
    45d0:	umaddl	x8, w8, w24, x9
    45d4:	add	x9, x8, #0x48
    45d8:	str	x22, [x8]
    45dc:	str	w25, [x8, #8]
    45e0:	strh	w28, [x8, #12]
    45e4:	str	wzr, [x8, #16]
    45e8:	strb	w27, [x8, #20]
    45ec:	strb	w11, [x8, #21]
    45f0:	strb	wzr, [x8, #22]
    45f4:	stur	q0, [x8, #40]
    45f8:	stur	q0, [x8, #24]
    45fc:	str	d8, [x8, #64]
    4600:	str	x9, [x8, #56]
    4604:	ldp	w8, w9, [x21, #24]
    4608:	cmp	w8, w9
    460c:	b.cs	46e8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x610>  // b.hs, b.nlast
    4610:	add	w8, w8, #0x1
    4614:	str	w8, [x21, #24]
    4618:	b	452c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x454>
    461c:	ldr	x0, [sp, #8]
    4620:	mov	x1, xzr
    4624:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4628:	ldr	w11, [sp, #28]
    462c:	ldr	w8, [x21, #24]
    4630:	movi	v0.2d, #0x0
    4634:	b	45cc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4f4>
    4638:	ldr	x10, [x29, #8]
    463c:	ldr	w9, [sp, #40]
    4640:	ldrb	w8, [x10, #8]
    4644:	cmp	w9, #0x41
    4648:	str	x21, [x10]
    464c:	and	w8, w8, #0xfc
    4650:	orr	w8, w8, #0x2
    4654:	strb	w8, [x10, #8]
    4658:	b.cc	4668 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x590>  // b.lo, b.ul, b.last
    465c:	ldr	x0, [sp, #32]
    4660:	cbz	x0, 4668 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x590>
    4664:	bl	0 <_ZdaPv>
    4668:	ldur	w8, [x29, #-24]
    466c:	cmp	w8, #0x41
    4670:	b.cc	4680 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5a8>  // b.lo, b.ul, b.last
    4674:	ldur	x0, [x29, #-32]
    4678:	cbz	x0, 4680 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5a8>
    467c:	bl	0 <_ZdaPv>
    4680:	ldurb	w8, [x29, #-8]
    4684:	tbnz	w8, #1, 4768 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x690>
    4688:	tbz	w8, #0, 46a4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5cc>
    468c:	ldur	x0, [x29, #-16]
    4690:	cbz	x0, 46a0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5c8>
    4694:	ldr	x8, [x0]
    4698:	ldr	x8, [x8, #8]
    469c:	blr	x8
    46a0:	stur	xzr, [x29, #-16]
    46a4:	ldp	x20, x19, [sp, #176]
    46a8:	ldp	x22, x21, [sp, #160]
    46ac:	ldp	x24, x23, [sp, #144]
    46b0:	ldp	x26, x25, [sp, #128]
    46b4:	ldp	x28, x27, [sp, #112]
    46b8:	ldp	x29, x30, [sp, #96]
    46bc:	ldr	d8, [sp, #80]
    46c0:	add	sp, sp, #0xc0
    46c4:	ret
    46c8:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    46cc:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    46d0:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    46d4:	add	x0, x0, #0x0
    46d8:	add	x1, x1, #0x0
    46dc:	add	x3, x3, #0x0
    46e0:	mov	w2, #0x99                  	// #153
    46e4:	bl	0 <__assert_fail>
    46e8:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    46ec:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    46f0:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    46f4:	add	x0, x0, #0x0
    46f8:	add	x1, x1, #0x0
    46fc:	add	x3, x3, #0x0
    4700:	mov	w2, #0x43                  	// #67
    4704:	bl	0 <__assert_fail>
    4708:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    470c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4710:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4714:	add	x0, x0, #0x0
    4718:	add	x1, x1, #0x0
    471c:	add	x3, x3, #0x0
    4720:	mov	w2, #0x41                  	// #65
    4724:	bl	0 <__assert_fail>
    4728:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    472c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4730:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4734:	add	x0, x0, #0x0
    4738:	add	x1, x1, #0x0
    473c:	add	x3, x3, #0x0
    4740:	mov	w2, #0x2bb                 	// #699
    4744:	bl	0 <__assert_fail>
    4748:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    474c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4750:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4754:	add	x0, x0, #0x0
    4758:	add	x1, x1, #0x0
    475c:	add	x3, x3, #0x0
    4760:	mov	w2, #0x472                 	// #1138
    4764:	bl	0 <__assert_fail>
    4768:	sub	x0, x29, #0x10
    476c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4770:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4774:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4778:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    477c:	add	x0, x0, #0x0
    4780:	add	x1, x1, #0x0
    4784:	add	x3, x3, #0x0
    4788:	mov	w2, #0x1ce                 	// #462
    478c:	bl	0 <__assert_fail>

0000000000004790 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_>:
    4790:	sub	sp, sp, #0xb0
    4794:	stp	x29, x30, [sp, #80]
    4798:	stp	x28, x27, [sp, #96]
    479c:	stp	x26, x25, [sp, #112]
    47a0:	stp	x24, x23, [sp, #128]
    47a4:	stp	x22, x21, [sp, #144]
    47a8:	stp	x20, x19, [sp, #160]
    47ac:	add	x29, sp, #0x50
    47b0:	sub	x26, x1, x0
    47b4:	cmp	x26, #0x181
    47b8:	b.lt	4ae8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x358>  // b.tstop
    47bc:	mov	x27, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    47c0:	mov	x21, x1
    47c4:	mov	x19, x0
    47c8:	mov	x22, x2
    47cc:	and	x20, x3, #0xff
    47d0:	add	x25, x0, #0x18
    47d4:	add	x24, x0, #0x8
    47d8:	add	x8, x0, #0x20
    47dc:	movk	x27, #0xaaab
    47e0:	mov	w28, #0x18                  	// #24
    47e4:	str	x8, [sp, #8]
    47e8:	b	4810 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x80>
    47ec:	mov	x0, x23
    47f0:	mov	x1, x21
    47f4:	mov	x2, x22
    47f8:	mov	x3, x20
    47fc:	bl	4790 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_>
    4800:	sub	x26, x23, x19
    4804:	cmp	x26, #0x180
    4808:	mov	x21, x23
    480c:	b.le	4ae8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x358>
    4810:	cbz	x22, 4a18 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x288>
    4814:	umulh	x8, x26, x27
    4818:	lsr	x8, x8, #5
    481c:	madd	x10, x8, x28, x19
    4820:	ldr	x9, [x19, #24]
    4824:	ldr	x11, [x10]
    4828:	sub	x22, x22, #0x1
    482c:	fmov	d0, x9
    4830:	fmov	d1, x11
    4834:	cnt	v0.8b, v0.8b
    4838:	cnt	v1.8b, v1.8b
    483c:	uaddlv	h0, v0.8b
    4840:	uaddlv	h1, v1.8b
    4844:	fmov	w12, s0
    4848:	fmov	w13, s1
    484c:	cmp	w12, w13
    4850:	b.cc	4864 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0xd4>  // b.lo, b.ul, b.last
    4854:	cmp	x9, x11
    4858:	b.cs	48bc <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x12c>  // b.hs, b.nlast
    485c:	cmp	w12, w13
    4860:	b.hi	48bc <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x12c>  // b.pmore
    4864:	ldur	x14, [x21, #-24]
    4868:	fmov	d0, x14
    486c:	cnt	v0.8b, v0.8b
    4870:	uaddlv	h0, v0.8b
    4874:	fmov	w15, s0
    4878:	cmp	w13, w15
    487c:	b.cc	4890 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x100>  // b.lo, b.ul, b.last
    4880:	cmp	x11, x14
    4884:	b.cs	4904 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x174>  // b.hs, b.nlast
    4888:	cmp	w13, w15
    488c:	b.hi	4904 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x174>  // b.pmore
    4890:	ldr	x9, [x19]
    4894:	str	x11, [x19]
    4898:	madd	x8, x8, x28, x19
    489c:	str	x9, [x10]
    48a0:	ldr	q0, [x24]
    48a4:	stur	q0, [x29, #-32]
    48a8:	ldur	q0, [x8, #8]
    48ac:	str	q0, [x24]
    48b0:	ldur	q0, [x29, #-32]
    48b4:	stur	q0, [x8, #8]
    48b8:	b	496c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1dc>
    48bc:	ldur	x14, [x21, #-24]
    48c0:	fmov	d0, x14
    48c4:	cnt	v0.8b, v0.8b
    48c8:	uaddlv	h0, v0.8b
    48cc:	fmov	w15, s0
    48d0:	cmp	w12, w15
    48d4:	b.cc	4944 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1b4>  // b.lo, b.ul, b.last
    48d8:	cmp	x9, x14
    48dc:	b.cs	48e8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x158>  // b.hs, b.nlast
    48e0:	cmp	w12, w15
    48e4:	b.ls	4944 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1b4>  // b.plast
    48e8:	cmp	w13, w15
    48ec:	b.cc	491c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x18c>  // b.lo, b.ul, b.last
    48f0:	cmp	x11, x14
    48f4:	b.cs	4890 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x100>  // b.hs, b.nlast
    48f8:	cmp	w13, w15
    48fc:	b.ls	491c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x18c>  // b.plast
    4900:	b	4890 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x100>
    4904:	cmp	w12, w15
    4908:	b.cc	491c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x18c>  // b.lo, b.ul, b.last
    490c:	cmp	x9, x14
    4910:	b.cs	4944 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1b4>  // b.hs, b.nlast
    4914:	cmp	w12, w15
    4918:	b.hi	4944 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1b4>  // b.pmore
    491c:	ldr	x8, [x19]
    4920:	str	x14, [x19]
    4924:	stur	x8, [x21, #-24]
    4928:	ldr	q0, [x24]
    492c:	stur	q0, [x29, #-32]
    4930:	ldur	q0, [x21, #-16]
    4934:	str	q0, [x24]
    4938:	ldur	q0, [x29, #-32]
    493c:	stur	q0, [x21, #-16]
    4940:	b	496c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1dc>
    4944:	ldr	x8, [x19]
    4948:	str	x9, [x19]
    494c:	str	x8, [x19, #24]
    4950:	ldr	q0, [x24]
    4954:	ldr	x8, [sp, #8]
    4958:	stur	q0, [x29, #-32]
    495c:	ldr	q0, [x8]
    4960:	str	q0, [x24]
    4964:	ldur	q0, [x29, #-32]
    4968:	str	q0, [x8]
    496c:	mov	x8, x21
    4970:	mov	x23, x25
    4974:	ldr	x9, [x19]
    4978:	fmov	d0, x9
    497c:	cnt	v0.8b, v0.8b
    4980:	uaddlv	h0, v0.8b
    4984:	fmov	w10, s0
    4988:	b	4990 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x200>
    498c:	add	x23, x23, #0x18
    4990:	ldr	x11, [x23]
    4994:	fmov	d0, x11
    4998:	cnt	v0.8b, v0.8b
    499c:	uaddlv	h0, v0.8b
    49a0:	fmov	w12, s0
    49a4:	cmp	w12, w10
    49a8:	b.cc	498c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1fc>  // b.lo, b.ul, b.last
    49ac:	cmp	x11, x9
    49b0:	b.cs	49bc <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x22c>  // b.hs, b.nlast
    49b4:	cmp	w12, w10
    49b8:	b.ls	498c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1fc>  // b.plast
    49bc:	ldr	x12, [x8, #-24]!
    49c0:	fmov	d0, x12
    49c4:	cnt	v0.8b, v0.8b
    49c8:	uaddlv	h0, v0.8b
    49cc:	fmov	w13, s0
    49d0:	cmp	w10, w13
    49d4:	b.cc	49bc <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x22c>  // b.lo, b.ul, b.last
    49d8:	cmp	x9, x12
    49dc:	b.cs	49e8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x258>  // b.hs, b.nlast
    49e0:	cmp	w10, w13
    49e4:	b.ls	49bc <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x22c>  // b.plast
    49e8:	cmp	x8, x23
    49ec:	b.ls	47ec <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x5c>  // b.plast
    49f0:	str	x12, [x23]
    49f4:	str	x11, [x8]
    49f8:	ldur	q0, [x23, #8]
    49fc:	stur	q0, [x29, #-32]
    4a00:	ldur	q0, [x8, #8]
    4a04:	stur	q0, [x23, #8]
    4a08:	ldur	q0, [x29, #-32]
    4a0c:	add	x23, x23, #0x18
    4a10:	stur	q0, [x8, #8]
    4a14:	b	4974 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1e4>
    4a18:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4a1c:	movk	x8, #0xaaab
    4a20:	umulh	x8, x26, x8
    4a24:	lsr	x22, x8, #4
    4a28:	sub	x8, x22, #0x2
    4a2c:	sub	x9, x22, #0x1
    4a30:	cmp	x8, #0x0
    4a34:	csel	x8, x9, x8, lt  // lt = tstop
    4a38:	asr	x23, x8, #1
    4a3c:	mov	w8, #0x18                  	// #24
    4a40:	madd	x25, x23, x8, x19
    4a44:	ldr	x8, [x25, #16]
    4a48:	ldr	q0, [x25], #-24
    4a4c:	sub	x3, x29, #0x20
    4a50:	mov	x0, x19
    4a54:	mov	x1, x23
    4a58:	mov	x2, x22
    4a5c:	mov	x4, x20
    4a60:	stur	x8, [x29, #-16]
    4a64:	stur	q0, [x29, #-32]
    4a68:	bl	4b08 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_>
    4a6c:	sub	x23, x23, #0x1
    4a70:	cmn	x23, #0x1
    4a74:	b.ne	4a44 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x2b4>  // b.any
    4a78:	cmp	x26, #0x19
    4a7c:	b.lt	4ae8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x358>  // b.tstop
    4a80:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4a84:	sub	x21, x21, #0x18
    4a88:	movk	x22, #0xaaab
    4a8c:	ldr	x8, [x21, #16]
    4a90:	ldr	q0, [x21]
    4a94:	sub	x23, x21, x19
    4a98:	asr	x9, x23, #3
    4a9c:	stur	x8, [x29, #-16]
    4aa0:	stur	q0, [x29, #-32]
    4aa4:	ldr	x8, [x19]
    4aa8:	mul	x2, x9, x22
    4aac:	add	x3, sp, #0x10
    4ab0:	mov	x0, x19
    4ab4:	str	x8, [x21]
    4ab8:	ldr	q0, [x24]
    4abc:	mov	x1, xzr
    4ac0:	mov	x4, x20
    4ac4:	stur	q0, [x21, #8]
    4ac8:	ldur	q0, [x29, #-32]
    4acc:	ldur	x8, [x29, #-16]
    4ad0:	str	q0, [sp, #16]
    4ad4:	str	x8, [sp, #32]
    4ad8:	bl	4b08 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_>
    4adc:	cmp	x23, #0x18
    4ae0:	sub	x21, x21, #0x18
    4ae4:	b.gt	4a8c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x2fc>
    4ae8:	ldp	x20, x19, [sp, #160]
    4aec:	ldp	x22, x21, [sp, #144]
    4af0:	ldp	x24, x23, [sp, #128]
    4af4:	ldp	x26, x25, [sp, #112]
    4af8:	ldp	x28, x27, [sp, #96]
    4afc:	ldp	x29, x30, [sp, #80]
    4b00:	add	sp, sp, #0xb0
    4b04:	ret

0000000000004b08 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_>:
    4b08:	sub	sp, sp, #0x10
    4b0c:	sub	x9, x2, #0x1
    4b10:	cmp	x9, #0x0
    4b14:	csel	x8, x2, x9, lt  // lt = tstop
    4b18:	asr	x10, x8, #1
    4b1c:	cmp	x10, x1
    4b20:	mov	x8, x1
    4b24:	b.le	4bb8 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0xb0>
    4b28:	mov	w11, #0x18                  	// #24
    4b2c:	mov	x12, x1
    4b30:	b	4b5c <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x54>
    4b34:	mov	x13, x15
    4b38:	mov	x8, x14
    4b3c:	madd	x12, x12, x11, x0
    4b40:	str	x13, [x12]
    4b44:	madd	x13, x8, x11, x0
    4b48:	ldur	q0, [x13, #8]
    4b4c:	cmp	x8, x10
    4b50:	stur	q0, [x12, #8]
    4b54:	mov	x12, x8
    4b58:	b.ge	4bb8 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0xb0>  // b.tcont
    4b5c:	lsl	x8, x12, #1
    4b60:	mov	w14, #0x1                   	// #1
    4b64:	add	x8, x8, #0x2
    4b68:	bfi	x14, x12, #1, #63
    4b6c:	mul	x13, x8, x11
    4b70:	mul	x15, x14, x11
    4b74:	ldr	x13, [x0, x13]
    4b78:	ldr	x15, [x0, x15]
    4b7c:	fmov	d0, x13
    4b80:	fmov	d1, x15
    4b84:	cnt	v0.8b, v0.8b
    4b88:	cnt	v1.8b, v1.8b
    4b8c:	uaddlv	h0, v0.8b
    4b90:	uaddlv	h1, v1.8b
    4b94:	fmov	w16, s0
    4b98:	fmov	w17, s1
    4b9c:	cmp	w16, w17
    4ba0:	b.cc	4b34 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x2c>  // b.lo, b.ul, b.last
    4ba4:	cmp	x13, x15
    4ba8:	b.cs	4b3c <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x34>  // b.hs, b.nlast
    4bac:	cmp	w16, w17
    4bb0:	b.ls	4b34 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x2c>  // b.plast
    4bb4:	b	4b3c <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x34>
    4bb8:	tbnz	w2, #0, 4bf8 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0xf0>
    4bbc:	sub	x10, x2, #0x2
    4bc0:	cmp	x10, #0x0
    4bc4:	csel	x9, x9, x10, lt  // lt = tstop
    4bc8:	cmp	x8, x9, asr #1
    4bcc:	b.ne	4bf8 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0xf0>  // b.any
    4bd0:	mov	w9, #0x1                   	// #1
    4bd4:	bfi	x9, x8, #1, #63
    4bd8:	mov	w10, #0x18                  	// #24
    4bdc:	madd	x11, x9, x10, x0
    4be0:	ldr	x12, [x11]
    4be4:	madd	x8, x8, x10, x0
    4be8:	str	x12, [x8]
    4bec:	ldur	q0, [x11, #8]
    4bf0:	stur	q0, [x8, #8]
    4bf4:	mov	x8, x9
    4bf8:	ldur	q0, [x3, #8]
    4bfc:	ldr	x9, [x3]
    4c00:	cmp	x8, x1
    4c04:	str	q0, [sp]
    4c08:	b.le	4c84 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x17c>
    4c0c:	fmov	d0, x9
    4c10:	cnt	v0.8b, v0.8b
    4c14:	uaddlv	h0, v0.8b
    4c18:	fmov	w11, s0
    4c1c:	mov	w12, #0x18                  	// #24
    4c20:	b	4c44 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x13c>
    4c24:	madd	x8, x8, x12, x0
    4c28:	str	x13, [x8]
    4c2c:	madd	x13, x10, x12, x0
    4c30:	ldur	q0, [x13, #8]
    4c34:	cmp	x10, x1
    4c38:	stur	q0, [x8, #8]
    4c3c:	mov	x8, x10
    4c40:	b.le	4c88 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x180>
    4c44:	sub	x10, x8, #0x1
    4c48:	cmp	x10, #0x0
    4c4c:	csel	x10, x8, x10, lt  // lt = tstop
    4c50:	asr	x10, x10, #1
    4c54:	mul	x13, x10, x12
    4c58:	ldr	x13, [x0, x13]
    4c5c:	fmov	d0, x13
    4c60:	cnt	v0.8b, v0.8b
    4c64:	uaddlv	h0, v0.8b
    4c68:	fmov	w14, s0
    4c6c:	cmp	w14, w11
    4c70:	b.cc	4c24 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x11c>  // b.lo, b.ul, b.last
    4c74:	cmp	x13, x9
    4c78:	b.cs	4c84 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x17c>  // b.hs, b.nlast
    4c7c:	cmp	w14, w11
    4c80:	b.ls	4c24 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x11c>  // b.plast
    4c84:	mov	x10, x8
    4c88:	mov	w8, #0x18                  	// #24
    4c8c:	madd	x8, x10, x8, x0
    4c90:	str	x9, [x8]
    4c94:	ldr	q0, [sp], #16
    4c98:	stur	q0, [x8, #8]
    4c9c:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	x8, x1
  1c:	b.ls	34 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0x34>  // b.plast
  20:	ldr	w8, [x19, #12]
  24:	cmp	x8, x20
  28:	b.cc	b0 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0xb0>  // b.lo, b.ul, b.last
  2c:	str	w20, [x19, #8]
  30:	b	a4 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0xa4>
  34:	b.cs	a4 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0xa4>  // b.hs, b.nlast
  38:	ldr	w9, [x19, #12]
  3c:	cmp	x9, x20
  40:	b.cs	5c <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0x5c>  // b.hs, b.nlast
  44:	add	x1, x19, #0x10
  48:	mov	w3, #0x14                  	// #20
  4c:	mov	x0, x19
  50:	mov	x2, x20
  54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  58:	ldr	w8, [x19, #8]
  5c:	cmp	x8, x20
  60:	b.eq	20 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0x20>  // b.none
  64:	ldr	x9, [x19]
  68:	mov	x11, #0xffffffffffffffec    	// #-20
  6c:	mov	w10, #0x14                  	// #20
  70:	mul	x11, x8, x11
  74:	mov	x12, #0xcccccccccccccccc    	// #-3689348814741910324
  78:	madd	x11, x20, x10, x11
  7c:	movk	x12, #0xcccd
  80:	sub	x11, x11, #0x14
  84:	madd	x0, x8, x10, x9
  88:	umulh	x8, x11, x12
  8c:	lsr	x8, x8, #4
  90:	mul	x8, x8, x10
  94:	add	x2, x8, #0x14
  98:	mov	w1, wzr
  9c:	bl	0 <memset>
  a0:	b	20 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0x20>
  a4:	ldp	x20, x19, [sp, #16]
  a8:	ldp	x29, x30, [sp], #32
  ac:	ret
  b0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm>
  b4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm>
  b8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x43                  	// #67
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	110 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x110>  // b.plast
  54:	cbz	x3, 19c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x19c>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x1
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 19c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x19c>
  a0:	ldr	x8, [x20]
  a4:	cmn	x8, #0x2
  a8:	b.cs	1bc <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x1bc>  // b.hs, b.nlast
  ac:	ldr	x9, [x19, #8]
  b0:	mov	w11, #0x25                  	// #37
  b4:	mul	w11, w8, w11
  b8:	sub	w10, w10, #0x1
  bc:	and	w11, w11, w10
  c0:	add	x3, x9, w11, uxtw #4
  c4:	ldr	x13, [x3]
  c8:	cmp	x8, x13
  cc:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x54>  // b.none
  d0:	mov	x12, xzr
  d4:	mov	w15, #0x1                   	// #1
  d8:	mov	x14, #0xfffffffffffffffe    	// #-2
  dc:	cmn	x13, #0x1
  e0:	b.eq	190 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x190>  // b.none
  e4:	cmp	x12, #0x0
  e8:	add	w11, w11, w15
  ec:	ccmp	x13, x14, #0x0, eq  // eq = none
  f0:	and	w11, w11, w10
  f4:	csel	x12, x12, x3, ne  // ne = any
  f8:	add	x3, x9, w11, uxtw #4
  fc:	ldr	x13, [x3]
 100:	add	w15, w15, #0x1
 104:	cmp	x8, x13
 108:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x54>  // b.none
 10c:	b	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0xdc>
 110:	mov	x0, x19
 114:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
 118:	ldr	w10, [x19, #24]
 11c:	cbz	w10, 19c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x19c>
 120:	ldr	x8, [x20]
 124:	cmn	x8, #0x2
 128:	b.cs	1bc <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x1bc>  // b.hs, b.nlast
 12c:	ldr	x9, [x19, #8]
 130:	mov	w11, #0x25                  	// #37
 134:	mul	w11, w8, w11
 138:	sub	w10, w10, #0x1
 13c:	and	w11, w11, w10
 140:	add	x3, x9, w11, uxtw #4
 144:	ldr	x13, [x3]
 148:	cmp	x8, x13
 14c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x54>  // b.none
 150:	mov	x12, xzr
 154:	mov	w15, #0x1                   	// #1
 158:	mov	x14, #0xfffffffffffffffe    	// #-2
 15c:	cmn	x13, #0x1
 160:	b.eq	190 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x190>  // b.none
 164:	cmp	x12, #0x0
 168:	add	w11, w11, w15
 16c:	ccmp	x13, x14, #0x0, eq  // eq = none
 170:	and	w11, w11, w10
 174:	csel	x12, x12, x3, ne  // ne = any
 178:	add	x3, x9, w11, uxtw #4
 17c:	ldr	x13, [x3]
 180:	add	w15, w15, #0x1
 184:	cmp	x8, x13
 188:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x54>  // b.none
 18c:	b	15c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x15c>
 190:	cmp	x12, #0x0
 194:	csel	x3, x3, x12, eq  // eq = none
 198:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x54>
 19c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
 1a0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
 1a4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
 1a8:	add	x0, x0, #0x0
 1ac:	add	x1, x1, #0x0
 1b0:	add	x3, x3, #0x0
 1b4:	mov	w2, #0x22f                 	// #559
 1b8:	bl	0 <__assert_fail>
 1bc:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
 1c0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
 1c4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
 1c8:	add	x0, x0, #0x0
 1cc:	add	x1, x1, #0x0
 1d0:	add	x3, x3, #0x0
 1d4:	mov	w2, #0x252                 	// #594
 1d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xffffffffffffffff    	// #-1
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xffffffffffffffff    	// #-1
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	15c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x15c>  // b.any
  1c:	ldr	x8, [x0, #8]
  20:	cbz	w9, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x80>
  24:	lsl	x10, x9, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x8, #0x10
  40:	add	x10, x8, x12, lsl #4
  44:	mov	x14, #0xffffffffffffffff    	// #-1
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x80>
  68:	mov	x10, x8
  6c:	add	x9, x8, x9, lsl #4
  70:	mov	x11, #0xffffffffffffffff    	// #-1
  74:	str	x11, [x10], #16
  78:	cmp	x9, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	134 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x134>  // b.none
  88:	mov	w9, #0x25                  	// #37
  8c:	mov	x10, #0xfffffffffffffffe    	// #-2
  90:	b	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0xc0>
  94:	cmp	x15, #0x0
  98:	csel	x12, x13, x15, eq  // eq = none
  9c:	str	x11, [x12]
  a0:	ldr	w11, [x1, #8]
  a4:	str	w11, [x12, #8]
  a8:	ldr	w11, [x0, #16]
  ac:	add	w11, w11, #0x1
  b0:	str	w11, [x0, #16]
  b4:	add	x1, x1, #0x10
  b8:	cmp	x1, x2
  bc:	b.eq	134 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x134>  // b.none
  c0:	ldr	x11, [x1]
  c4:	cmn	x11, #0x3
  c8:	b.hi	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0xb4>  // b.pmore
  cc:	ldr	w12, [x0, #24]
  d0:	cbz	w12, 12c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x12c>
  d4:	mul	w13, w11, w9
  d8:	sub	w12, w12, #0x1
  dc:	and	w14, w12, w13
  e0:	add	x13, x8, w14, uxtw #4
  e4:	ldr	x16, [x13]
  e8:	cmp	x11, x16
  ec:	b.eq	13c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x13c>  // b.none
  f0:	mov	x15, xzr
  f4:	mov	w17, #0x1                   	// #1
  f8:	cmn	x16, #0x1
  fc:	b.eq	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x94>  // b.none
 100:	cmp	x15, #0x0
 104:	add	w14, w14, w17
 108:	ccmp	x16, x10, #0x0, eq  // eq = none
 10c:	and	w14, w14, w12
 110:	csel	x15, x15, x13, ne  // ne = any
 114:	add	x13, x8, w14, uxtw #4
 118:	ldr	x16, [x13]
 11c:	add	w17, w17, #0x1
 120:	cmp	x11, x16
 124:	b.ne	f8 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0xf8>  // b.any
 128:	b	13c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x13c>
 12c:	mov	x12, xzr
 130:	b	9c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x9c>
 134:	ldp	x29, x30, [sp], #16
 138:	ret
 13c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>
 140:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>
 144:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>
 148:	add	x0, x0, #0x0
 14c:	add	x1, x1, #0x0
 150:	add	x3, x3, #0x0
 154:	mov	w2, #0x17a                 	// #378
 158:	bl	0 <__assert_fail>
 15c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>
 160:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>
 164:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x15c                 	// #348
 178:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	add	x8, x21, x21, lsl #1
  6c:	lsl	x0, x8, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, ec <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xec>
  c4:	add	x8, x8, x8, lsl #1
  c8:	lsl	x8, x8, #3
  cc:	mov	x9, x20
  d0:	ldr	x10, [x0, #16]
  d4:	ldr	q0, [x0], #24
  d8:	subs	x8, x8, #0x18
  dc:	str	x10, [x9, #16]
  e0:	str	q0, [x9], #24
  e4:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xd0>  // b.any
  e8:	ldr	x0, [x19]
  ec:	add	x8, x19, #0x10
  f0:	cmp	x0, x8
  f4:	b.eq	fc <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xfc>  // b.none
  f8:	bl	0 <free>
  fc:	str	x20, [x19]
 100:	str	w21, [x19, #12]
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret

Disassembly of section .text._ZN4llvm3mca16InstructionErrorINS_6MCInstEED2Ev:

0000000000000000 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED2Ev>:
   0:	adrp	x9, 0 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED2Ev>
   4:	mov	x8, x0
   8:	ldr	x0, [x0, #8]
   c:	ldr	x9, [x9]
  10:	add	x10, x8, #0x18
  14:	cmp	x0, x10
  18:	add	x9, x9, #0x10
  1c:	str	x9, [x8]
  20:	b.eq	28 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED2Ev+0x28>  // b.none
  24:	b	0 <_ZdlPv>
  28:	ret

Disassembly of section .text._ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev:

0000000000000000 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #8]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0x18
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca16InstructionErrorINS_6MCInstEE3logERNS_11raw_ostreamE:

0000000000000000 <_ZNK4llvm3mca16InstructionErrorINS_6MCInstEE3logERNS_11raw_ostreamE>:
   0:	ldp	x8, x2, [x0, #8]
   4:	mov	x0, x1
   8:	mov	x1, x8
   c:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	sub	sp, sp, #0x90
   4:	stp	x29, x30, [sp, #96]
   8:	stp	x22, x21, [sp, #112]
   c:	stp	x20, x19, [sp, #128]
  10:	add	x29, sp, #0x60
  14:	sturb	wzr, [x29, #-24]
  18:	stp	xzr, xzr, [sp, #24]
  1c:	adrp	x11, 0 <_ZTVN4llvm18raw_string_ostreamE>
  20:	ldr	x11, [x11]
  24:	sub	x9, x29, #0x28
  28:	mov	w10, #0x1                   	// #1
  2c:	str	w10, [sp, #40]
  30:	add	x22, x9, #0x10
  34:	add	x10, x11, #0x10
  38:	stp	x22, xzr, [x29, #-40]
  3c:	stp	x10, xzr, [sp, #8]
  40:	str	x9, [sp, #48]
  44:	ldr	x9, [x0]
  48:	add	x1, sp, #0x8
  4c:	mov	x19, x8
  50:	ldr	x9, [x9, #16]
  54:	blr	x9
  58:	ldr	x8, [sp, #32]
  5c:	ldr	x9, [sp, #16]
  60:	cmp	x8, x9
  64:	b.eq	70 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x70>  // b.none
  68:	add	x0, sp, #0x8
  6c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  70:	ldr	x8, [sp, #48]
  74:	add	x0, x19, #0x10
  78:	str	x0, [x19]
  7c:	ldp	x20, x21, [x8]
  80:	cbnz	x20, 88 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x88>
  84:	cbnz	x21, 110 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x110>
  88:	cmp	x21, #0x10
  8c:	stur	x21, [x29, #-8]
  90:	b.cc	b0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb0>  // b.lo, b.ul, b.last
  94:	sub	x1, x29, #0x8
  98:	mov	x0, x19
  9c:	mov	x2, xzr
  a0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  a4:	ldur	x8, [x29, #-8]
  a8:	str	x0, [x19]
  ac:	str	x8, [x19, #16]
  b0:	cbz	x21, d4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xd4>
  b4:	cmp	x21, #0x1
  b8:	b.ne	c8 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xc8>  // b.any
  bc:	ldrb	w8, [x20]
  c0:	strb	w8, [x0]
  c4:	b	d4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xd4>
  c8:	mov	x1, x20
  cc:	mov	x2, x21
  d0:	bl	0 <memcpy>
  d4:	ldur	x8, [x29, #-8]
  d8:	ldr	x9, [x19]
  dc:	add	x0, sp, #0x8
  e0:	str	x8, [x19, #8]
  e4:	strb	wzr, [x9, x8]
  e8:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  ec:	ldur	x0, [x29, #-40]
  f0:	cmp	x0, x22
  f4:	b.eq	fc <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xfc>  // b.none
  f8:	bl	0 <_ZdlPv>
  fc:	ldp	x20, x19, [sp, #128]
 100:	ldp	x22, x21, [sp, #112]
 104:	ldp	x29, x30, [sp, #96]
 108:	add	sp, sp, #0x90
 10c:	ret
 110:	adrp	x0, 0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>
 114:	add	x0, x0, #0x0
 118:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNK4llvm3mca16InstructionErrorINS_6MCInstEE18convertToErrorCodeEv:

0000000000000000 <_ZNK4llvm3mca16InstructionErrorINS_6MCInstEE18convertToErrorCodeEv>:
   0:	b	0 <_ZN4llvm22inconvertibleErrorCodeEv>

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv>:
   0:	adrp	x8, 0 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv>
   4:	ldr	x8, [x8]
   8:	adrp	x9, 0 <_ZN4llvm13ErrorInfoBase2IDE>
   c:	ldr	x9, [x9]
  10:	cmp	x1, x8
  14:	cset	w8, eq  // eq = none
  18:	cmp	x1, x9
  1c:	cset	w9, eq  // eq = none
  20:	orr	w0, w8, w9
  24:	ret

Disassembly of section .text._ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	ldp	x9, x8, [x0, #16]
  18:	sub	x9, x9, x8
  1c:	cmp	x9, #0x39
  20:	b.hi	38 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x38>  // b.pmore
  24:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  28:	add	x1, x1, #0x0
  2c:	mov	w2, #0x3a                  	// #58
  30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  34:	b	64 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x64>
  38:	adrp	x9, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  3c:	add	x9, x9, #0x0
  40:	ldur	q0, [x9, #42]
  44:	ldp	q2, q1, [x9, #16]
  48:	ldr	q3, [x9]
  4c:	stur	q0, [x8, #42]
  50:	stp	q2, q1, [x8, #16]
  54:	str	q3, [x8]
  58:	ldr	x8, [x0, #24]
  5c:	add	x8, x8, #0x3a
  60:	str	x8, [x0, #24]
  64:	ldrb	w20, [x19, #8]
  68:	bl	0 <_ZN4llvm4dbgsEv>
  6c:	ldp	x9, x8, [x0, #16]
  70:	sub	x9, x9, x8
  74:	tbnz	w20, #0, 94 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x94>
  78:	cmp	x9, #0x82
  7c:	b.hi	d4 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0xd4>  // b.pmore
  80:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0x83                  	// #131
  8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  90:	bl	0 <abort>
  94:	cmp	x9, #0x26
  98:	b.hi	118 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x118>  // b.pmore
  9c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  a0:	add	x1, x1, #0x0
  a4:	mov	w2, #0x27                  	// #39
  a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  ac:	ldrb	w8, [x19, #8]
  b0:	tbz	w8, #0, 144 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x144>
  b4:	ldr	x19, [x19]
  b8:	bl	0 <_ZN4llvm4dbgsEv>
  bc:	ldr	x8, [x19]
  c0:	mov	x1, x0
  c4:	mov	x0, x19
  c8:	ldr	x8, [x8, #16]
  cc:	blr	x8
  d0:	bl	0 <abort>
  d4:	adrp	x9, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  d8:	add	x9, x9, #0x0
  dc:	ldp	q1, q0, [x9, #32]
  e0:	ldp	q2, q3, [x9]
  e4:	stp	q1, q0, [x8, #32]
  e8:	ldp	q0, q1, [x9, #96]
  ec:	stp	q2, q3, [x8]
  f0:	ldp	q2, q3, [x9, #64]
  f4:	mov	w9, #0x2964                	// #10596
  f8:	movk	w9, #0xa2e, lsl #16
  fc:	stur	w9, [x8, #127]
 100:	stp	q0, q1, [x8, #96]
 104:	stp	q2, q3, [x8, #64]
 108:	ldr	x8, [x0, #24]
 10c:	add	x8, x8, #0x83
 110:	str	x8, [x0, #24]
 114:	bl	0 <abort>
 118:	adrp	x9, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
 11c:	add	x9, x9, #0x0
 120:	ldur	x10, [x9, #31]
 124:	ldp	q1, q0, [x9]
 128:	stur	x10, [x8, #31]
 12c:	stp	q1, q0, [x8]
 130:	ldr	x8, [x0, #24]
 134:	add	x8, x8, #0x27
 138:	str	x8, [x0, #24]
 13c:	ldrb	w8, [x19, #8]
 140:	tbnz	w8, #0, b4 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0xb4>
 144:	adrp	x0, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
 148:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
 14c:	adrp	x3, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x281                 	// #641
 160:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	11c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x11c>  // b.plast
  54:	cbz	x3, 1b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x1b4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldrsh	w8, [x3]
  68:	cmn	w8, #0x1
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x1b4>
  a0:	ldrh	w8, [x20]
  a4:	mov	w9, #0xfffe                	// #65534
  a8:	cmp	w8, w9
  ac:	b.cs	1d4 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x1d4>  // b.hs, b.nlast
  b0:	ldr	x9, [x19, #8]
  b4:	mov	w11, #0x25                  	// #37
  b8:	mul	w11, w8, w11
  bc:	sub	w10, w10, #0x1
  c0:	and	x11, x11, x10
  c4:	add	x3, x9, x11, lsl #4
  c8:	ldrh	w14, [x3]
  cc:	cmp	w8, w14
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	w13, #0xfffe                	// #65534
  e0:	mvn	w16, w14
  e4:	tst	w16, #0xffff
  e8:	b.eq	1a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x1a8>  // b.none
  ec:	and	w14, w14, #0xffff
  f0:	cmp	x12, #0x0
  f4:	add	w11, w11, w15
  f8:	ccmp	w14, w13, #0x0, eq  // eq = none
  fc:	and	w11, w11, w10
 100:	csel	x12, x12, x3, ne  // ne = any
 104:	add	x3, x9, w11, uxtw #4
 108:	ldrh	w14, [x3]
 10c:	add	w15, w15, #0x1
 110:	cmp	w8, w14
 114:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x54>  // b.none
 118:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0xe0>
 11c:	mov	x0, x19
 120:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
 124:	ldr	w10, [x19, #24]
 128:	cbz	w10, 1b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x1b4>
 12c:	ldrh	w8, [x20]
 130:	mov	w9, #0xfffe                	// #65534
 134:	cmp	w8, w9
 138:	b.cs	1d4 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x1d4>  // b.hs, b.nlast
 13c:	ldr	x9, [x19, #8]
 140:	mov	w11, #0x25                  	// #37
 144:	mul	w11, w8, w11
 148:	sub	w10, w10, #0x1
 14c:	and	x11, x11, x10
 150:	add	x3, x9, x11, lsl #4
 154:	ldrh	w14, [x3]
 158:	cmp	w8, w14
 15c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x54>  // b.none
 160:	mov	x12, xzr
 164:	mov	w15, #0x1                   	// #1
 168:	mov	w13, #0xfffe                	// #65534
 16c:	mvn	w16, w14
 170:	tst	w16, #0xffff
 174:	b.eq	1a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x1a8>  // b.none
 178:	and	w14, w14, #0xffff
 17c:	cmp	x12, #0x0
 180:	add	w11, w11, w15
 184:	ccmp	w14, w13, #0x0, eq  // eq = none
 188:	and	w11, w11, w10
 18c:	csel	x12, x12, x3, ne  // ne = any
 190:	add	x3, x9, w11, uxtw #4
 194:	ldrh	w14, [x3]
 198:	add	w15, w15, #0x1
 19c:	cmp	w8, w14
 1a0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x54>  // b.none
 1a4:	b	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x16c>
 1a8:	cmp	x12, #0x0
 1ac:	csel	x3, x3, x12, eq  // eq = none
 1b0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x54>
 1b4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
 1b8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
 1bc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
 1c0:	add	x0, x0, #0x0
 1c4:	add	x1, x1, #0x0
 1c8:	add	x3, x3, #0x0
 1cc:	mov	w2, #0x22f                 	// #559
 1d0:	bl	0 <__assert_fail>
 1d4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
 1d8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
 1dc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
 1e0:	add	x0, x0, #0x0
 1e4:	add	x1, x1, #0x0
 1e8:	add	x3, x3, #0x0
 1ec:	mov	w2, #0x252                 	// #594
 1f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	w13, #0xffff                	// #65535
  c0:	mov	x14, x11
  c4:	sturh	w13, [x12, #-16]
  c8:	strh	w13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	w10, #0xffff                	// #65535
  ec:	strh	w10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	w8, [x0, #24]
  1c:	str	xzr, [x0, #16]
  20:	sub	w9, w8, #0x1
  24:	tst	w8, w9
  28:	b.ne	1f0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x1f0>  // b.any
  2c:	mov	x19, x2
  30:	mov	x20, x1
  34:	mov	x21, x0
  38:	cbz	w8, 9c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x9c>
  3c:	ldr	x9, [x21, #8]
  40:	lsl	x10, x8, #4
  44:	subs	x10, x10, #0x10
  48:	b.eq	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x84>  // b.none
  4c:	lsr	x10, x10, #4
  50:	add	x11, x10, #0x1
  54:	and	x12, x11, #0x1ffffffffffffffe
  58:	add	x13, x9, #0x10
  5c:	add	x10, x9, x12, lsl #4
  60:	mov	w14, #0xffff                	// #65535
  64:	mov	x15, x12
  68:	sturh	w14, [x13, #-16]
  6c:	strh	w14, [x13], #32
  70:	subs	x15, x15, #0x2
  74:	b.ne	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x68>  // b.any
  78:	cmp	x11, x12
  7c:	b.ne	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x88>  // b.any
  80:	b	9c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x9c>
  84:	mov	x10, x9
  88:	add	x8, x9, x8, lsl #4
  8c:	mov	w9, #0xffff                	// #65535
  90:	strh	w9, [x10], #16
  94:	cmp	x8, x10
  98:	b.ne	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x90>  // b.any
  9c:	cmp	x20, x19
  a0:	b.eq	1b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x1b8>  // b.none
  a4:	mov	w23, #0xfffd                	// #65533
  a8:	mov	w24, #0x25                  	// #37
  ac:	mov	w25, #0xfffe                	// #65534
  b0:	b	cc <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0xcc>
  b4:	mov	x0, x22
  b8:	bl	0 <_ZdlPv>
  bc:	str	xzr, [x20, #8]
  c0:	add	x20, x20, #0x10
  c4:	cmp	x20, x19
  c8:	b.eq	1b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x1b8>  // b.none
  cc:	ldrh	w8, [x20]
  d0:	cmp	x8, x23
  d4:	b.hi	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0xc0>  // b.pmore
  d8:	ldr	w10, [x21, #24]
  dc:	cbz	w10, 150 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x150>
  e0:	ldr	x9, [x21, #8]
  e4:	mul	x11, x8, x24
  e8:	sub	w10, w10, #0x1
  ec:	and	x12, x10, x11
  f0:	add	x11, x9, x12, lsl #4
  f4:	ldrh	w14, [x11]
  f8:	cmp	w8, w14
  fc:	b.eq	1d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x1d0>  // b.none
 100:	mov	x13, xzr
 104:	mov	w15, #0x1                   	// #1
 108:	mvn	w16, w14
 10c:	tst	w16, #0xffff
 110:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x144>  // b.none
 114:	and	w14, w14, #0xffff
 118:	cmp	x13, #0x0
 11c:	add	w12, w12, w15
 120:	ccmp	w14, w25, #0x0, eq  // eq = none
 124:	and	w12, w12, w10
 128:	csel	x13, x13, x11, ne  // ne = any
 12c:	add	x11, x9, w12, uxtw #4
 130:	ldrh	w14, [x11]
 134:	add	w15, w15, #0x1
 138:	cmp	w8, w14
 13c:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x108>  // b.any
 140:	b	1d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x1d0>
 144:	cmp	x13, #0x0
 148:	csel	x9, x11, x13, eq  // eq = none
 14c:	b	154 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x154>
 150:	mov	x9, xzr
 154:	strh	w8, [x9]
 158:	ldr	x8, [x20, #8]
 15c:	str	xzr, [x20, #8]
 160:	str	x8, [x9, #8]
 164:	ldr	w8, [x21, #16]
 168:	add	w8, w8, #0x1
 16c:	str	w8, [x21, #16]
 170:	ldr	x22, [x20, #8]
 174:	cbz	x22, bc <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0xbc>
 178:	ldr	x0, [x22, #176]
 17c:	add	x8, x22, #0xc0
 180:	cmp	x0, x8
 184:	b.eq	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x18c>  // b.none
 188:	bl	0 <free>
 18c:	ldr	x0, [x22, #96]
 190:	add	x8, x22, #0x70
 194:	cmp	x0, x8
 198:	b.eq	1a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x1a0>  // b.none
 19c:	bl	0 <free>
 1a0:	mov	x8, x22
 1a4:	ldr	x0, [x8], #16
 1a8:	cmp	x0, x8
 1ac:	b.eq	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0xb4>  // b.none
 1b0:	bl	0 <free>
 1b4:	b	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0xb4>
 1b8:	ldp	x20, x19, [sp, #64]
 1bc:	ldp	x22, x21, [sp, #48]
 1c0:	ldp	x24, x23, [sp, #32]
 1c4:	ldr	x25, [sp, #16]
 1c8:	ldp	x29, x30, [sp], #80
 1cc:	ret
 1d0:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
 1d4:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
 1d8:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
 1dc:	add	x0, x0, #0x0
 1e0:	add	x1, x1, #0x0
 1e4:	add	x3, x3, #0x0
 1e8:	mov	w2, #0x17a                 	// #378
 1ec:	bl	0 <__assert_fail>
 1f0:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
 1f4:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
 1f8:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
 1fc:	add	x0, x0, #0x0
 200:	add	x1, x1, #0x0
 204:	add	x3, x3, #0x0
 208:	mov	w2, #0x15c                 	// #348
 20c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w8, [x0, #24]
  18:	str	xzr, [x0, #16]
  1c:	sub	w9, w8, #0x1
  20:	tst	w8, w9
  24:	b.ne	208 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x208>  // b.any
  28:	mov	x19, x2
  2c:	mov	x20, x1
  30:	mov	x21, x0
  34:	cbz	w8, 98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x98>
  38:	ldr	x9, [x21, #8]
  3c:	lsl	x10, x8, #4
  40:	subs	x10, x10, #0x10
  44:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x80>  // b.none
  48:	lsr	x10, x10, #4
  4c:	add	x11, x10, #0x1
  50:	and	x12, x11, #0x1ffffffffffffffe
  54:	add	x13, x9, #0x10
  58:	add	x10, x9, x12, lsl #4
  5c:	mov	x14, #0xfffffffffffffff8    	// #-8
  60:	mov	x15, x12
  64:	stur	x14, [x13, #-16]
  68:	str	x14, [x13], #32
  6c:	subs	x15, x15, #0x2
  70:	b.ne	64 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x64>  // b.any
  74:	cmp	x11, x12
  78:	b.ne	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x84>  // b.any
  7c:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x98>
  80:	mov	x10, x9
  84:	add	x8, x9, x8, lsl #4
  88:	mov	x9, #0xfffffffffffffff8    	// #-8
  8c:	str	x9, [x10], #16
  90:	cmp	x8, x10
  94:	b.ne	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x8c>  // b.any
  98:	cmp	x20, x19
  9c:	b.eq	1b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x1b4>  // b.none
  a0:	mov	x23, #0xfffffffffffffff0    	// #-16
  a4:	b	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0xc0>
  a8:	mov	x0, x22
  ac:	bl	0 <_ZdlPv>
  b0:	str	xzr, [x20, #8]
  b4:	add	x20, x20, #0x10
  b8:	cmp	x20, x19
  bc:	b.eq	1b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x1b4>  // b.none
  c0:	ldr	x8, [x20]
  c4:	orr	x9, x8, #0x8
  c8:	cmn	x9, #0x8
  cc:	b.eq	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0xb4>  // b.none
  d0:	ldr	w10, [x21, #24]
  d4:	cbz	w10, 14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x14c>
  d8:	cmn	x8, #0x8
  dc:	b.eq	1e8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x1e8>  // b.none
  e0:	ldr	x9, [x21, #8]
  e4:	ubfx	x11, x8, #4, #28
  e8:	eor	w11, w11, w8, lsr #9
  ec:	sub	w10, w10, #0x1
  f0:	and	w12, w11, w10
  f4:	add	x11, x9, w12, uxtw #4
  f8:	ldr	x14, [x11]
  fc:	cmp	x14, x8
 100:	b.eq	1c8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x1c8>  // b.none
 104:	mov	x13, xzr
 108:	mov	w15, #0x1                   	// #1
 10c:	cmn	x14, #0x8
 110:	b.eq	140 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x140>  // b.none
 114:	cmp	x13, #0x0
 118:	add	w12, w12, w15
 11c:	ccmp	x14, x23, #0x0, eq  // eq = none
 120:	and	w12, w12, w10
 124:	csel	x13, x13, x11, ne  // ne = any
 128:	add	x11, x9, w12, uxtw #4
 12c:	ldr	x14, [x11]
 130:	add	w15, w15, #0x1
 134:	cmp	x14, x8
 138:	b.ne	10c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x10c>  // b.any
 13c:	b	1c8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x1c8>
 140:	cmp	x13, #0x0
 144:	csel	x9, x11, x13, eq  // eq = none
 148:	b	150 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x150>
 14c:	mov	x9, xzr
 150:	str	x8, [x9]
 154:	ldr	x8, [x20, #8]
 158:	str	xzr, [x20, #8]
 15c:	str	x8, [x9, #8]
 160:	ldr	w8, [x21, #16]
 164:	add	w8, w8, #0x1
 168:	str	w8, [x21, #16]
 16c:	ldr	x22, [x20, #8]
 170:	cbz	x22, b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0xb0>
 174:	ldr	x0, [x22, #176]
 178:	add	x8, x22, #0xc0
 17c:	cmp	x0, x8
 180:	b.eq	188 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x188>  // b.none
 184:	bl	0 <free>
 188:	ldr	x0, [x22, #96]
 18c:	add	x8, x22, #0x70
 190:	cmp	x0, x8
 194:	b.eq	19c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x19c>  // b.none
 198:	bl	0 <free>
 19c:	mov	x8, x22
 1a0:	ldr	x0, [x8], #16
 1a4:	cmp	x0, x8
 1a8:	b.eq	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0xa8>  // b.none
 1ac:	bl	0 <free>
 1b0:	b	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0xa8>
 1b4:	ldp	x20, x19, [sp, #48]
 1b8:	ldp	x22, x21, [sp, #32]
 1bc:	ldr	x23, [sp, #16]
 1c0:	ldp	x29, x30, [sp], #64
 1c4:	ret
 1c8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 1cc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 1d0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 1d4:	add	x0, x0, #0x0
 1d8:	add	x1, x1, #0x0
 1dc:	add	x3, x3, #0x0
 1e0:	mov	w2, #0x17a                 	// #378
 1e4:	bl	0 <__assert_fail>
 1e8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 1ec:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 1f0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 1f4:	add	x0, x0, #0x0
 1f8:	add	x1, x1, #0x0
 1fc:	add	x3, x3, #0x0
 200:	mov	w2, #0x252                 	// #594
 204:	bl	0 <__assert_fail>
 208:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 20c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 210:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 214:	add	x0, x0, #0x0
 218:	add	x1, x1, #0x0
 21c:	add	x3, x3, #0x0
 220:	mov	w2, #0x15c                 	// #348
 224:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>:
   0:	str	d8, [sp, #-80]!
   4:	stp	x29, x30, [sp, #8]
   8:	str	x25, [sp, #24]
   c:	stp	x24, x23, [sp, #32]
  10:	stp	x22, x21, [sp, #48]
  14:	stp	x20, x19, [sp, #64]
  18:	mov	x29, sp
  1c:	mov	x20, x1
  20:	lsr	x8, x1, #32
  24:	mov	x19, x0
  28:	cbz	x8, 3c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x3c>
  2c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  30:	add	x0, x0, #0x0
  34:	mov	w1, #0x1                   	// #1
  38:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  3c:	ldr	w8, [x19, #12]
  40:	add	x8, x8, #0x2
  44:	orr	x8, x8, x8, lsr #1
  48:	orr	x8, x8, x8, lsr #2
  4c:	orr	x8, x8, x8, lsr #4
  50:	orr	x8, x8, x8, lsr #8
  54:	orr	x8, x8, x8, lsr #16
  58:	orr	x8, x8, x8, lsr #32
  5c:	add	x9, x8, #0x1
  60:	cmp	x9, x20
  64:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  68:	mov	w9, #0xffffffff            	// #-1
  6c:	cmp	x8, x9
  70:	csel	x23, x8, x9, cc  // cc = lo, ul, last
  74:	add	x8, x23, x23, lsl #4
  78:	lsl	x0, x8, #3
  7c:	bl	0 <malloc>
  80:	mov	x20, x0
  84:	cbnz	x0, c4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xc4>
  88:	cbz	x23, a4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xa4>
  8c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  90:	add	x0, x0, #0x0
  94:	mov	w1, #0x1                   	// #1
  98:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  9c:	mov	x20, xzr
  a0:	b	c4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xc4>
  a4:	mov	w0, #0x1                   	// #1
  a8:	bl	0 <malloc>
  ac:	mov	x20, x0
  b0:	cbnz	x0, c4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xc4>
  b4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  b8:	add	x0, x0, #0x0
  bc:	mov	w1, #0x1                   	// #1
  c0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  c4:	ldr	w8, [x19, #8]
  c8:	ldr	x21, [x19]
  cc:	cbz	w8, 184 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x184>
  d0:	adrp	x10, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  d4:	ldr	d8, [x10]
  d8:	mov	w9, #0x88                  	// #136
  dc:	madd	x24, x8, x9, x21
  e0:	add	x22, x20, #0x38
  e4:	add	x21, x21, #0x38
  e8:	b	100 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x100>
  ec:	add	x8, x25, #0x88
  f0:	add	x22, x22, #0x88
  f4:	cmp	x8, x24
  f8:	add	x21, x21, #0x88
  fc:	b.eq	144 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x144>  // b.none
 100:	ldur	q0, [x21, #-56]
 104:	ldur	q1, [x21, #-40]
 108:	ldur	x8, [x21, #-8]
 10c:	ldur	q2, [x21, #-24]
 110:	add	x9, x22, #0x10
 114:	stur	q1, [x22, #-40]
 118:	stp	x8, x9, [x22, #-8]
 11c:	stur	q2, [x22, #-24]
 120:	stur	q0, [x22, #-56]
 124:	str	d8, [x22, #8]
 128:	ldr	w8, [x21, #8]
 12c:	sub	x25, x21, #0x38
 130:	cbz	w8, ec <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xec>
 134:	mov	x0, x22
 138:	mov	x1, x21
 13c:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
 140:	b	ec <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xec>
 144:	ldr	w8, [x19, #8]
 148:	ldr	x21, [x19]
 14c:	cbz	w8, 184 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x184>
 150:	add	x8, x8, x8, lsl #4
 154:	lsl	x22, x8, #3
 158:	b	164 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x164>
 15c:	subs	x22, x22, #0x88
 160:	b.eq	180 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x180>  // b.none
 164:	add	x8, x21, x22
 168:	ldur	x0, [x8, #-80]
 16c:	sub	x8, x8, #0x40
 170:	cmp	x8, x0
 174:	b.eq	15c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x15c>  // b.none
 178:	bl	0 <free>
 17c:	b	15c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x15c>
 180:	ldr	x21, [x19]
 184:	add	x8, x19, #0x10
 188:	cmp	x21, x8
 18c:	b.eq	198 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x198>  // b.none
 190:	mov	x0, x21
 194:	bl	0 <free>
 198:	str	x20, [x19]
 19c:	str	w23, [x19, #12]
 1a0:	ldp	x20, x19, [sp, #64]
 1a4:	ldp	x22, x21, [sp, #48]
 1a8:	ldp	x24, x23, [sp, #32]
 1ac:	ldr	x25, [sp, #24]
 1b0:	ldp	x29, x30, [sp, #8]
 1b4:	ldr	d8, [sp], #80
 1b8:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	12c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x12c>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w8, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w8, w20
  2c:	b.cs	60 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x60>  // b.hs, b.nlast
  30:	ldr	w9, [x19, #12]
  34:	cmp	w9, w20
  38:	b.cs	98 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x98>  // b.hs, b.nlast
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	str	wzr, [x19, #8]
  48:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
  4c:	ldr	w9, [x21, #8]
  50:	mov	x8, xzr
  54:	cmp	x8, x9
  58:	b.ne	ec <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xec>  // b.any
  5c:	b	11c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x11c>
  60:	cbz	w20, 11c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x11c>
  64:	ldr	x8, [x21]
  68:	ldr	x9, [x19]
  6c:	add	x10, x20, #0x1
  70:	ldr	x11, [x8]
  74:	sub	x10, x10, #0x1
  78:	cmp	x10, #0x1
  7c:	str	x11, [x9]
  80:	ldr	w11, [x8, #8]
  84:	add	x8, x8, #0x10
  88:	str	w11, [x9, #8]
  8c:	add	x9, x9, #0x10
  90:	b.gt	70 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x70>
  94:	b	11c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x11c>
  98:	cbz	w8, dc <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xdc>
  9c:	ldr	x9, [x21]
  a0:	ldr	x10, [x19]
  a4:	add	x11, x8, #0x1
  a8:	ldr	x12, [x9]
  ac:	sub	x11, x11, #0x1
  b0:	cmp	x11, #0x1
  b4:	str	x12, [x10]
  b8:	ldr	w12, [x9, #8]
  bc:	add	x9, x9, #0x10
  c0:	str	w12, [x10, #8]
  c4:	add	x10, x10, #0x10
  c8:	b.gt	a8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xa8>
  cc:	mov	x9, x20
  d0:	cmp	x8, x9
  d4:	b.ne	ec <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xec>  // b.any
  d8:	b	11c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x11c>
  dc:	mov	x8, xzr
  e0:	mov	x9, x20
  e4:	cmp	x8, x9
  e8:	b.eq	11c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x11c>  // b.none
  ec:	ldr	x10, [x19]
  f0:	ldr	x11, [x21]
  f4:	lsl	x12, x8, #4
  f8:	lsl	x13, x9, #4
  fc:	add	x8, x10, x12
 100:	add	x9, x11, x12
 104:	sub	x10, x13, x12
 108:	ldr	q0, [x9], #16
 10c:	subs	x10, x10, #0x10
 110:	str	q0, [x8]
 114:	add	x8, x8, #0x10
 118:	b.ne	108 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x108>  // b.any
 11c:	ldr	w8, [x19, #12]
 120:	cmp	w8, w20
 124:	b.cc	140 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x140>  // b.lo, b.ul, b.last
 128:	str	w20, [x19, #8]
 12c:	mov	x0, x19
 130:	ldp	x20, x19, [sp, #32]
 134:	ldr	x21, [sp, #16]
 138:	ldp	x29, x30, [sp], #48
 13c:	ret
 140:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 144:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 148:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	add	x3, x3, #0x0
 158:	mov	w2, #0x43                  	// #67
 15c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Instruction.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>:
       0:	strh	w2, [x0, #48]
       4:	str	w3, [x0, #52]
       8:	stp	w3, w1, [x0, #40]
       c:	str	xzr, [x0, #24]
      10:	ret

0000000000000014 <_ZN4llvm3mca9ReadState15writeStartEventEjtj>:
      14:	stp	x29, x30, [sp, #-16]!
      18:	mov	x29, sp
      1c:	ldr	w8, [x0, #16]
      20:	cbz	w8, 7c <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x68>
      24:	ldr	w9, [x0, #20]
      28:	cmn	w9, #0x200
      2c:	b.ne	9c <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x88>  // b.any
      30:	ldr	w9, [x0, #24]
      34:	sub	w8, w8, #0x1
      38:	str	w8, [x0, #16]
      3c:	cmp	w9, w3
      40:	b.cc	50 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x3c>  // b.lo, b.ul, b.last
      44:	cbz	w8, 64 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x50>
      48:	ldp	x29, x30, [sp], #16
      4c:	ret
      50:	mov	w9, w3
      54:	strh	w2, [x0, #32]
      58:	str	w3, [x0, #36]
      5c:	stp	w3, w1, [x0, #24]
      60:	cbnz	w8, 48 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x34>
      64:	cmp	w9, #0x0
      68:	cset	w8, eq  // eq = none
      6c:	str	w9, [x0, #20]
      70:	strb	w8, [x0, #40]
      74:	ldp	x29, x30, [sp], #16
      78:	ret
      7c:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      80:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      84:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      88:	add	x0, x0, #0x0
      8c:	add	x1, x1, #0x0
      90:	add	x3, x3, #0x0
      94:	mov	w2, #0x1f                  	// #31
      98:	bl	0 <__assert_fail>
      9c:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      a0:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      a4:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      a8:	add	x0, x0, #0x0
      ac:	add	x1, x1, #0x0
      b0:	add	x3, x3, #0x0
      b4:	mov	w2, #0x20                  	// #32
      b8:	bl	0 <__assert_fail>

00000000000000bc <_ZN4llvm3mca10WriteState19onInstructionIssuedEj>:
      bc:	stp	x29, x30, [sp, #-16]!
      c0:	mov	x29, sp
      c4:	ldr	w8, [x0, #8]
      c8:	cmn	w8, #0x200
      cc:	b.ne	1d0 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x114>  // b.any
      d0:	ldr	x8, [x0]
      d4:	ldr	w11, [x0, #64]
      d8:	ldr	w8, [x8, #4]
      dc:	str	w8, [x0, #8]
      e0:	cbz	w11, 16c <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0xb0>
      e4:	ldr	x9, [x0, #56]
      e8:	ldrh	w10, [x0, #12]
      ec:	add	x11, x9, x11, lsl #4
      f0:	b	104 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x48>
      f4:	cbz	w13, 150 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x94>
      f8:	add	x9, x9, #0x10
      fc:	cmp	x9, x11
     100:	b.eq	16c <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0xb0>  // b.none
     104:	ldr	x12, [x9]
     108:	ldr	w13, [x12, #16]
     10c:	cbz	w13, 190 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0xd4>
     110:	ldr	w14, [x12, #20]
     114:	cmn	w14, #0x200
     118:	b.ne	1b0 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0xf4>  // b.any
     11c:	ldr	w15, [x9, #8]
     120:	ldr	w14, [x12, #24]
     124:	sub	w13, w13, #0x1
     128:	str	w13, [x12, #16]
     12c:	sub	w15, w8, w15
     130:	bic	w16, w15, w15, asr #31
     134:	cmp	w14, w16
     138:	b.cs	f4 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x38>  // b.hs, b.nlast
     13c:	mov	w14, w15
     140:	strh	w10, [x12, #32]
     144:	str	w16, [x12, #36]
     148:	stp	w16, w1, [x12, #24]
     14c:	b	f4 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x38>
     150:	cmp	w14, #0x0
     154:	cset	w13, eq  // eq = none
     158:	str	w14, [x12, #20]
     15c:	strb	w13, [x12, #40]
     160:	add	x9, x9, #0x10
     164:	cmp	x9, x11
     168:	b.ne	104 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x48>  // b.any
     16c:	ldr	x9, [x0, #32]
     170:	cbz	x9, 188 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0xcc>
     174:	ldrh	w10, [x0, #12]
     178:	str	w8, [x9, #52]
     17c:	stp	w8, w1, [x9, #40]
     180:	str	xzr, [x9, #24]
     184:	strh	w10, [x9, #48]
     188:	ldp	x29, x30, [sp], #16
     18c:	ret
     190:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     194:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     198:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     19c:	add	x0, x0, #0x0
     1a0:	add	x1, x1, #0x0
     1a4:	add	x3, x3, #0x0
     1a8:	mov	w2, #0x1f                  	// #31
     1ac:	bl	0 <__assert_fail>
     1b0:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     1b4:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     1b8:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     1bc:	add	x0, x0, #0x0
     1c0:	add	x1, x1, #0x0
     1c4:	add	x3, x3, #0x0
     1c8:	mov	w2, #0x20                  	// #32
     1cc:	bl	0 <__assert_fail>
     1d0:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     1d4:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     1d8:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     1dc:	add	x0, x0, #0x0
     1e0:	add	x1, x1, #0x0
     1e4:	add	x3, x3, #0x0
     1e8:	mov	w2, #0x36                  	// #54
     1ec:	bl	0 <__assert_fail>

00000000000001f0 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi>:
     1f0:	stp	x29, x30, [sp, #-48]!
     1f4:	stp	x22, x21, [sp, #16]
     1f8:	stp	x20, x19, [sp, #32]
     1fc:	mov	x29, sp
     200:	ldr	w8, [x0, #8]
     204:	mov	w21, w3
     208:	mov	x19, x2
     20c:	mov	x20, x0
     210:	cmn	w8, #0x200
     214:	b.ne	258 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x68>  // b.any
     218:	ldp	w8, w9, [x20, #64]
     21c:	add	x22, x20, #0x38
     220:	cmp	w8, w9
     224:	b.cs	2c8 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xd8>  // b.hs, b.nlast
     228:	ldr	x10, [x22]
     22c:	cmp	w8, w9
     230:	add	x9, x10, w8, uxtw #4
     234:	str	x19, [x9]
     238:	str	w21, [x9, #8]
     23c:	b.cs	2dc <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xec>  // b.hs, b.nlast
     240:	add	w8, w8, #0x1
     244:	str	w8, [x20, #64]
     248:	ldp	x20, x19, [sp, #32]
     24c:	ldp	x22, x21, [sp, #16]
     250:	ldp	x29, x30, [sp], #48
     254:	ret
     258:	ldr	w9, [x19, #16]
     25c:	cbz	w9, 2fc <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x10c>
     260:	ldr	w10, [x19, #20]
     264:	cmn	w10, #0x200
     268:	b.ne	31c <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x12c>  // b.any
     26c:	ldr	w10, [x19, #24]
     270:	ldrh	w12, [x20, #12]
     274:	sub	w8, w8, w21
     278:	bic	w11, w8, w8, asr #31
     27c:	sub	w9, w9, #0x1
     280:	cmp	w10, w11
     284:	str	w9, [x19, #16]
     288:	b.cc	294 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xa4>  // b.lo, b.ul, b.last
     28c:	cbnz	w9, 248 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x58>
     290:	b	2a8 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xb8>
     294:	mov	w10, w8
     298:	strh	w12, [x19, #32]
     29c:	str	w11, [x19, #36]
     2a0:	stp	w11, w1, [x19, #24]
     2a4:	cbnz	w9, 248 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x58>
     2a8:	cmp	w10, #0x0
     2ac:	cset	w8, eq  // eq = none
     2b0:	str	w10, [x19, #20]
     2b4:	strb	w8, [x19, #40]
     2b8:	ldp	x20, x19, [sp, #32]
     2bc:	ldp	x22, x21, [sp, #16]
     2c0:	ldp	x29, x30, [sp], #48
     2c4:	ret
     2c8:	mov	x0, x22
     2cc:	mov	x1, xzr
     2d0:	bl	0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     2d4:	ldp	w8, w9, [x20, #64]
     2d8:	b	228 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x38>
     2dc:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     2e0:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     2e4:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     2e8:	add	x0, x0, #0x0
     2ec:	add	x1, x1, #0x0
     2f0:	add	x3, x3, #0x0
     2f4:	mov	w2, #0x43                  	// #67
     2f8:	bl	0 <__assert_fail>
     2fc:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     300:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     304:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     308:	add	x0, x0, #0x0
     30c:	add	x1, x1, #0x0
     310:	add	x3, x3, #0x0
     314:	mov	w2, #0x1f                  	// #31
     318:	bl	0 <__assert_fail>
     31c:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     320:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     324:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     328:	add	x0, x0, #0x0
     32c:	add	x1, x1, #0x0
     330:	add	x3, x3, #0x0
     334:	mov	w2, #0x20                  	// #32
     338:	bl	0 <__assert_fail>

000000000000033c <_ZN4llvm3mca10WriteState7addUserEjPS1_>:
     33c:	stp	x29, x30, [sp, #-16]!
     340:	mov	x29, sp
     344:	ldr	w8, [x0, #8]
     348:	cmn	w8, #0x200
     34c:	b.ne	368 <_ZN4llvm3mca10WriteState7addUserEjPS1_+0x2c>  // b.any
     350:	ldr	x8, [x0, #32]
     354:	cbnz	x8, 38c <_ZN4llvm3mca10WriteState7addUserEjPS1_+0x50>
     358:	str	x2, [x0, #32]
     35c:	str	x0, [x2, #24]
     360:	ldp	x29, x30, [sp], #16
     364:	ret
     368:	ldrh	w9, [x0, #12]
     36c:	bic	w8, w8, w8, asr #31
     370:	str	w8, [x2, #52]
     374:	stp	w8, w1, [x2, #40]
     378:	strh	w9, [x2, #48]
     37c:	mov	x0, xzr
     380:	str	x0, [x2, #24]
     384:	ldp	x29, x30, [sp], #16
     388:	ret
     38c:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     390:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     394:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     398:	add	x0, x0, #0x0
     39c:	add	x1, x1, #0x0
     3a0:	add	x3, x3, #0x0
     3a4:	mov	w2, #0x5a                  	// #90
     3a8:	bl	0 <__assert_fail>

00000000000003ac <_ZN4llvm3mca10WriteState10cycleEventEv>:
     3ac:	ldr	w8, [x0, #8]
     3b0:	cmn	w8, #0x200
     3b4:	b.eq	3c0 <_ZN4llvm3mca10WriteState10cycleEventEv+0x14>  // b.none
     3b8:	sub	w8, w8, #0x1
     3bc:	str	w8, [x0, #8]
     3c0:	ldr	w8, [x0, #40]
     3c4:	cbz	w8, 3d0 <_ZN4llvm3mca10WriteState10cycleEventEv+0x24>
     3c8:	sub	w8, w8, #0x1
     3cc:	str	w8, [x0, #40]
     3d0:	ret

00000000000003d4 <_ZN4llvm3mca9ReadState10cycleEventEv>:
     3d4:	ldr	w8, [x0, #16]
     3d8:	cbz	w8, 3f0 <_ZN4llvm3mca9ReadState10cycleEventEv+0x1c>
     3dc:	ldr	w8, [x0, #24]
     3e0:	cbz	w8, 3f0 <_ZN4llvm3mca9ReadState10cycleEventEv+0x1c>
     3e4:	sub	w8, w8, #0x1
     3e8:	str	w8, [x0, #24]
     3ec:	ret
     3f0:	ldr	w8, [x0, #20]
     3f4:	cmn	w8, #0x200
     3f8:	b.eq	400 <_ZN4llvm3mca9ReadState10cycleEventEv+0x2c>  // b.none
     3fc:	cbnz	w8, 404 <_ZN4llvm3mca9ReadState10cycleEventEv+0x30>
     400:	ret
     404:	subs	w8, w8, #0x1
     408:	str	w8, [x0, #20]
     40c:	cset	w8, eq  // eq = none
     410:	strb	w8, [x0, #40]
     414:	ret

0000000000000418 <_ZNK4llvm3mca10WriteState4dumpEv>:
     418:	stp	x29, x30, [sp, #-32]!
     41c:	str	x19, [sp, #16]
     420:	mov	x29, sp
     424:	mov	x19, x0
     428:	bl	0 <_ZN4llvm4dbgsEv>
     42c:	ldp	x9, x8, [x0, #16]
     430:	sub	x9, x9, x8
     434:	cmp	x9, #0x7
     438:	b.hi	450 <_ZNK4llvm3mca10WriteState4dumpEv+0x38>  // b.pmore
     43c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     440:	add	x1, x1, #0x0
     444:	mov	w2, #0x8                   	// #8
     448:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     44c:	b	470 <_ZNK4llvm3mca10WriteState4dumpEv+0x58>
     450:	mov	x9, #0x207b                	// #8315
     454:	movk	x9, #0x704f, lsl #16
     458:	movk	x9, #0x6449, lsl #32
     45c:	movk	x9, #0x3d78, lsl #48
     460:	str	x9, [x8]
     464:	ldr	x8, [x0, #24]
     468:	add	x8, x8, #0x8
     46c:	str	x8, [x0, #24]
     470:	ldr	x8, [x19]
     474:	ldrsw	x1, [x8]
     478:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     47c:	ldp	x9, x8, [x0, #16]
     480:	sub	x9, x9, x8
     484:	cmp	x9, #0x5
     488:	b.hi	4a0 <_ZNK4llvm3mca10WriteState4dumpEv+0x88>  // b.pmore
     48c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     490:	add	x1, x1, #0x0
     494:	mov	w2, #0x6                   	// #6
     498:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     49c:	b	4c0 <_ZNK4llvm3mca10WriteState4dumpEv+0xa8>
     4a0:	mov	w10, #0x202c                	// #8236
     4a4:	mov	w9, #0x3d74                	// #15732
     4a8:	movk	w10, #0x614c, lsl #16
     4ac:	strh	w9, [x8, #4]
     4b0:	str	w10, [x8]
     4b4:	ldr	x8, [x0, #24]
     4b8:	add	x8, x8, #0x6
     4bc:	str	x8, [x0, #24]
     4c0:	ldr	x8, [x19]
     4c4:	ldr	w1, [x8, #4]
     4c8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     4cc:	ldp	x9, x8, [x0, #16]
     4d0:	sub	x9, x9, x8
     4d4:	cmp	x9, #0x7
     4d8:	b.hi	4f0 <_ZNK4llvm3mca10WriteState4dumpEv+0xd8>  // b.pmore
     4dc:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     4e0:	add	x1, x1, #0x0
     4e4:	mov	w2, #0x8                   	// #8
     4e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     4ec:	b	510 <_ZNK4llvm3mca10WriteState4dumpEv+0xf8>
     4f0:	mov	x9, #0x202c                	// #8236
     4f4:	movk	x9, #0x6552, lsl #16
     4f8:	movk	x9, #0x4967, lsl #32
     4fc:	movk	x9, #0x2044, lsl #48
     500:	str	x9, [x8]
     504:	ldr	x8, [x0, #24]
     508:	add	x8, x8, #0x8
     50c:	str	x8, [x0, #24]
     510:	ldrh	w1, [x19, #12]
     514:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     518:	ldp	x9, x8, [x0, #16]
     51c:	sub	x9, x9, x8
     520:	cmp	x9, #0xd
     524:	b.hi	53c <_ZNK4llvm3mca10WriteState4dumpEv+0x124>  // b.pmore
     528:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     52c:	add	x1, x1, #0x0
     530:	mov	w2, #0xe                   	// #14
     534:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     538:	b	560 <_ZNK4llvm3mca10WriteState4dumpEv+0x148>
     53c:	adrp	x9, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     540:	add	x9, x9, #0x0
     544:	ldur	x10, [x9, #6]
     548:	ldr	x9, [x9]
     54c:	stur	x10, [x8, #6]
     550:	str	x9, [x8]
     554:	ldr	x8, [x0, #24]
     558:	add	x8, x8, #0xe
     55c:	str	x8, [x0, #24]
     560:	ldrsw	x1, [x19, #8]
     564:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     568:	ldp	x9, x8, [x0, #16]
     56c:	sub	x9, x9, x8
     570:	cmp	x9, #0x1
     574:	b.hi	590 <_ZNK4llvm3mca10WriteState4dumpEv+0x178>  // b.pmore
     578:	ldr	x19, [sp, #16]
     57c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     580:	add	x1, x1, #0x0
     584:	mov	w2, #0x2                   	// #2
     588:	ldp	x29, x30, [sp], #32
     58c:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     590:	mov	w9, #0x7d20                	// #32032
     594:	strh	w9, [x8]
     598:	ldr	x8, [x0, #24]
     59c:	ldr	x19, [sp, #16]
     5a0:	add	x8, x8, #0x2
     5a4:	str	x8, [x0, #24]
     5a8:	ldp	x29, x30, [sp], #32
     5ac:	ret

00000000000005b0 <_ZNK4llvm3mca8WriteRef4dumpEv>:
     5b0:	stp	x29, x30, [sp, #-32]!
     5b4:	str	x19, [sp, #16]
     5b8:	mov	x29, sp
     5bc:	mov	x19, x0
     5c0:	bl	0 <_ZN4llvm4dbgsEv>
     5c4:	ldp	x9, x8, [x0, #16]
     5c8:	sub	x9, x9, x8
     5cc:	cmp	x9, #0x3
     5d0:	b.hi	5e8 <_ZNK4llvm3mca8WriteRef4dumpEv+0x38>  // b.pmore
     5d4:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     5d8:	add	x1, x1, #0x0
     5dc:	mov	w2, #0x4                   	// #4
     5e0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5e4:	b	600 <_ZNK4llvm3mca8WriteRef4dumpEv+0x50>
     5e8:	mov	w9, #0x4949                	// #18761
     5ec:	movk	w9, #0x3d44, lsl #16
     5f0:	str	w9, [x8]
     5f4:	ldr	x8, [x0, #24]
     5f8:	add	x8, x8, #0x4
     5fc:	str	x8, [x0, #24]
     600:	ldr	w1, [x19]
     604:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     608:	ldp	x9, x8, [x0, #16]
     60c:	cmp	x8, x9
     610:	b.cs	630 <_ZNK4llvm3mca8WriteRef4dumpEv+0x80>  // b.hs, b.nlast
     614:	add	x9, x8, #0x1
     618:	mov	w10, #0x20                  	// #32
     61c:	str	x9, [x0, #24]
     620:	strb	w10, [x8]
     624:	ldr	x0, [x19, #8]
     628:	cbnz	x0, 640 <_ZNK4llvm3mca8WriteRef4dumpEv+0x90>
     62c:	b	658 <_ZNK4llvm3mca8WriteRef4dumpEv+0xa8>
     630:	mov	w1, #0x20                  	// #32
     634:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     638:	ldr	x0, [x19, #8]
     63c:	cbz	x0, 658 <_ZNK4llvm3mca8WriteRef4dumpEv+0xa8>
     640:	ldr	w8, [x19]
     644:	cmn	w8, #0x1
     648:	b.eq	658 <_ZNK4llvm3mca8WriteRef4dumpEv+0xa8>  // b.none
     64c:	ldr	x19, [sp, #16]
     650:	ldp	x29, x30, [sp], #32
     654:	b	418 <_ZNK4llvm3mca10WriteState4dumpEv>
     658:	bl	0 <_ZN4llvm4dbgsEv>
     65c:	ldp	x9, x8, [x0, #16]
     660:	sub	x9, x9, x8
     664:	cmp	x9, #0x5
     668:	b.hi	684 <_ZNK4llvm3mca8WriteRef4dumpEv+0xd4>  // b.pmore
     66c:	ldr	x19, [sp, #16]
     670:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     674:	add	x1, x1, #0x0
     678:	mov	w2, #0x6                   	// #6
     67c:	ldp	x29, x30, [sp], #32
     680:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     684:	mov	w10, #0x6e28                	// #28200
     688:	mov	w9, #0x296c                	// #10604
     68c:	movk	w10, #0x6c75, lsl #16
     690:	strh	w9, [x8, #4]
     694:	str	w10, [x8]
     698:	ldr	x8, [x0, #24]
     69c:	ldr	x19, [sp, #16]
     6a0:	add	x8, x8, #0x6
     6a4:	str	x8, [x0, #24]
     6a8:	ldp	x29, x30, [sp], #32
     6ac:	ret

00000000000006b0 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv>:
     6b0:	ldr	w9, [x0, #816]
     6b4:	mov	x8, x0
     6b8:	add	x0, x0, #0x328
     6bc:	cbz	w9, 6c4 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x14>
     6c0:	ret
     6c4:	ldr	w9, [x8, #24]
     6c8:	cbz	w9, 708 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x58>
     6cc:	ldr	x10, [x8, #16]
     6d0:	add	x9, x9, x9, lsl #4
     6d4:	lsl	x9, x9, #3
     6d8:	add	x10, x10, #0x34
     6dc:	b	6ec <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x3c>
     6e0:	subs	x9, x9, #0x88
     6e4:	add	x10, x10, #0x88
     6e8:	b.eq	708 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x58>  // b.none
     6ec:	ldr	w11, [x10]
     6f0:	cbz	w11, 6e0 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x30>
     6f4:	ldr	w11, [x10]
     6f8:	ldur	x12, [x10, #-8]
     6fc:	str	w11, [x0, #8]
     700:	str	x12, [x0]
     704:	b	6e0 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x30>
     708:	ldr	w9, [x8, #584]
     70c:	cbz	w9, 6c0 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x10>
     710:	ldr	x10, [x8, #576]
     714:	add	x8, x9, x9, lsl #1
     718:	lsl	x8, x8, #4
     71c:	add	x9, x10, #0x24
     720:	b	730 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x80>
     724:	subs	x8, x8, #0x30
     728:	add	x9, x9, #0x30
     72c:	b.eq	6c0 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x10>  // b.none
     730:	ldr	w10, [x9]
     734:	cbz	w10, 724 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x74>
     738:	ldr	w10, [x9]
     73c:	ldur	x11, [x9, #-8]
     740:	str	w10, [x0, #8]
     744:	str	x11, [x0]
     748:	b	724 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x74>

000000000000074c <_ZN4llvm3mca11Instruction8dispatchEj>:
     74c:	stp	x29, x30, [sp, #-32]!
     750:	str	x19, [sp, #16]
     754:	mov	x29, sp
     758:	ldr	w8, [x0, #784]
     75c:	cbnz	w8, 794 <_ZN4llvm3mca11Instruction8dispatchEj+0x48>
     760:	mov	w8, #0x1                   	// #1
     764:	mov	x19, x0
     768:	str	w8, [x0, #784]
     76c:	str	w1, [x0, #792]
     770:	bl	7b4 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
     774:	tbz	w0, #0, 788 <_ZN4llvm3mca11Instruction8dispatchEj+0x3c>
     778:	mov	x0, x19
     77c:	ldr	x19, [sp, #16]
     780:	ldp	x29, x30, [sp], #32
     784:	b	a40 <_ZN4llvm3mca11Instruction13updatePendingEv>
     788:	ldr	x19, [sp, #16]
     78c:	ldp	x29, x30, [sp], #32
     790:	ret
     794:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     798:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     79c:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     7a0:	add	x0, x0, #0x0
     7a4:	add	x1, x1, #0x0
     7a8:	add	x3, x3, #0x0
     7ac:	mov	w2, #0x9f                  	// #159
     7b0:	bl	0 <__assert_fail>

00000000000007b4 <_ZN4llvm3mca11Instruction16updateDispatchedEv>:
     7b4:	stp	x29, x30, [sp, #-16]!
     7b8:	mov	x29, sp
     7bc:	ldr	w8, [x0, #784]
     7c0:	cmp	w8, #0x1
     7c4:	b.ne	a20 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x26c>  // b.any
     7c8:	ldr	w11, [x0, #584]
     7cc:	ldr	x8, [x0, #576]
     7d0:	add	x9, x11, x11, lsl #1
     7d4:	lsl	x10, x9, #4
     7d8:	cmp	x10, #0x91
     7dc:	add	x9, x8, x10
     7e0:	b.cc	884 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xd0>  // b.lo, b.ul, b.last
     7e4:	lsr	x10, x11, #2
     7e8:	add	x10, x10, #0x1
     7ec:	b	808 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x54>
     7f0:	ldrb	w11, [x8, #184]
     7f4:	cbz	w11, 8d0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x11c>
     7f8:	sub	x10, x10, #0x1
     7fc:	cmp	x10, #0x1
     800:	add	x8, x8, #0xc0
     804:	b.le	880 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xcc>
     808:	ldrb	w11, [x8, #42]
     80c:	cbz	w11, 81c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x68>
     810:	ldrb	w11, [x8, #40]
     814:	cbnz	w11, 828 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x74>
     818:	b	91c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x168>
     81c:	ldr	w11, [x8, #20]
     820:	cmp	w11, #0x0
     824:	b.le	810 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x5c>
     828:	ldrb	w11, [x8, #90]
     82c:	cbz	w11, 83c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x88>
     830:	ldrb	w11, [x8, #88]
     834:	cbnz	w11, 848 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x94>
     838:	b	8c0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x10c>
     83c:	ldr	w11, [x8, #68]
     840:	cmp	w11, #0x0
     844:	b.le	830 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x7c>
     848:	ldrb	w11, [x8, #138]
     84c:	cbz	w11, 85c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xa8>
     850:	ldrb	w11, [x8, #136]
     854:	cbnz	w11, 868 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xb4>
     858:	b	8c8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x114>
     85c:	ldr	w11, [x8, #116]
     860:	cmp	w11, #0x0
     864:	b.le	850 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x9c>
     868:	ldrb	w11, [x8, #186]
     86c:	cbnz	w11, 7f0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x3c>
     870:	ldr	w11, [x8, #164]
     874:	cmp	w11, #0x0
     878:	b.gt	7f8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x44>
     87c:	b	7f0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x3c>
     880:	sub	x10, x9, x8
     884:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     888:	asr	x10, x10, #4
     88c:	movk	x11, #0xaaab
     890:	mul	x10, x10, x11
     894:	cmp	x10, #0x1
     898:	b.eq	90c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x158>  // b.none
     89c:	cmp	x10, #0x2
     8a0:	b.eq	8e8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x134>  // b.none
     8a4:	cmp	x10, #0x3
     8a8:	b.ne	934 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x180>  // b.any
     8ac:	ldrb	w10, [x8, #42]
     8b0:	cbz	w10, 8d8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x124>
     8b4:	ldrb	w10, [x8, #40]
     8b8:	cbnz	w10, 8e4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x130>
     8bc:	b	91c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x168>
     8c0:	add	x8, x8, #0x30
     8c4:	b	91c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x168>
     8c8:	add	x8, x8, #0x60
     8cc:	b	91c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x168>
     8d0:	add	x8, x8, #0x90
     8d4:	b	91c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x168>
     8d8:	ldr	w10, [x8, #20]
     8dc:	cmp	w10, #0x0
     8e0:	b.le	8b4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x100>
     8e4:	add	x8, x8, #0x30
     8e8:	ldrb	w10, [x8, #42]
     8ec:	cbz	w10, 8fc <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x148>
     8f0:	ldrb	w10, [x8, #40]
     8f4:	cbnz	w10, 908 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x154>
     8f8:	b	91c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x168>
     8fc:	ldr	w10, [x8, #20]
     900:	cmp	w10, #0x0
     904:	b.le	8f0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x13c>
     908:	add	x8, x8, #0x30
     90c:	ldrb	w10, [x8, #42]
     910:	cbz	w10, 928 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x174>
     914:	ldrb	w10, [x8, #40]
     918:	cbnz	w10, 934 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x180>
     91c:	cmp	x8, x9
     920:	b.ne	9f4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x240>  // b.any
     924:	b	934 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x180>
     928:	ldr	w10, [x8, #20]
     92c:	cmp	w10, #0x0
     930:	b.le	914 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x160>
     934:	ldr	w11, [x0, #24]
     938:	ldr	x8, [x0, #16]
     93c:	add	x9, x11, x11, lsl #4
     940:	lsl	x10, x9, #3
     944:	cmp	x10, #0x199
     948:	add	x9, x8, x10
     94c:	b.cc	98c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1d8>  // b.lo, b.ul, b.last
     950:	lsr	x10, x11, #2
     954:	add	x10, x10, #0x1
     958:	ldr	x11, [x8, #24]
     95c:	cbnz	x11, 9ec <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x238>
     960:	ldr	x11, [x8, #160]
     964:	cbnz	x11, 9d8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x224>
     968:	ldr	x11, [x8, #296]
     96c:	cbnz	x11, 9e8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x234>
     970:	ldr	x11, [x8, #432]
     974:	cbnz	x11, a00 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x24c>
     978:	sub	x10, x10, #0x1
     97c:	cmp	x10, #0x1
     980:	add	x8, x8, #0x220
     984:	b.gt	958 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1a4>
     988:	sub	x10, x9, x8
     98c:	mov	x11, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
     990:	asr	x10, x10, #3
     994:	movk	x11, #0xf0f1
     998:	mul	x10, x10, x11
     99c:	cmp	x10, #0x1
     9a0:	b.eq	9cc <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x218>  // b.none
     9a4:	cmp	x10, #0x2
     9a8:	b.eq	9c0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x20c>  // b.none
     9ac:	cmp	x10, #0x3
     9b0:	b.ne	a0c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x258>  // b.any
     9b4:	ldr	x10, [x8, #24]
     9b8:	cbnz	x10, 9ec <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x238>
     9bc:	add	x8, x8, #0x88
     9c0:	ldr	x10, [x8, #24]
     9c4:	cbnz	x10, 9ec <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x238>
     9c8:	add	x8, x8, #0x88
     9cc:	ldr	x10, [x8, #24]
     9d0:	cbnz	x10, 9ec <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x238>
     9d4:	b	a0c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x258>
     9d8:	add	x8, x8, #0x88
     9dc:	cmp	x8, x9
     9e0:	b.ne	9f4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x240>  // b.any
     9e4:	b	a0c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x258>
     9e8:	add	x8, x8, #0x110
     9ec:	cmp	x8, x9
     9f0:	b.eq	a0c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x258>  // b.none
     9f4:	mov	w0, wzr
     9f8:	ldp	x29, x30, [sp], #16
     9fc:	ret
     a00:	add	x8, x8, #0x198
     a04:	cmp	x8, x9
     a08:	b.ne	9f4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x240>  // b.any
     a0c:	mov	w8, #0x2                   	// #2
     a10:	str	w8, [x0, #784]
     a14:	mov	w0, #0x1                   	// #1
     a18:	ldp	x29, x30, [sp], #16
     a1c:	ret
     a20:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     a24:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     a28:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     a2c:	add	x0, x0, #0x0
     a30:	add	x1, x1, #0x0
     a34:	add	x3, x3, #0x0
     a38:	mov	w2, #0xcc                  	// #204
     a3c:	bl	0 <__assert_fail>

0000000000000a40 <_ZN4llvm3mca11Instruction13updatePendingEv>:
     a40:	stp	x29, x30, [sp, #-16]!
     a44:	mov	x29, sp
     a48:	ldr	w8, [x0, #784]
     a4c:	cmp	w8, #0x2
     a50:	b.ne	cc4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x284>  // b.any
     a54:	ldr	w11, [x0, #584]
     a58:	ldr	x8, [x0, #576]
     a5c:	add	x9, x11, x11, lsl #1
     a60:	lsl	x10, x9, #4
     a64:	cmp	x10, #0x91
     a68:	add	x9, x8, x10
     a6c:	b.cc	ab4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x74>  // b.lo, b.ul, b.last
     a70:	lsr	x10, x11, #2
     a74:	add	x10, x10, #0x1
     a78:	add	x8, x8, #0x60
     a7c:	ldurb	w11, [x8, #-56]
     a80:	cbz	w11, bc8 <_ZN4llvm3mca11Instruction13updatePendingEv+0x188>
     a84:	ldurb	w11, [x8, #-8]
     a88:	cbz	w11, bd8 <_ZN4llvm3mca11Instruction13updatePendingEv+0x198>
     a8c:	ldrb	w11, [x8, #40]
     a90:	cbz	w11, afc <_ZN4llvm3mca11Instruction13updatePendingEv+0xbc>
     a94:	ldrb	w11, [x8, #88]
     a98:	cbz	w11, be8 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1a8>
     a9c:	sub	x10, x10, #0x1
     aa0:	cmp	x10, #0x1
     aa4:	add	x8, x8, #0xc0
     aa8:	b.gt	a7c <_ZN4llvm3mca11Instruction13updatePendingEv+0x3c>
     aac:	sub	x8, x8, #0x60
     ab0:	sub	x10, x9, x8
     ab4:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     ab8:	asr	x10, x10, #4
     abc:	movk	x11, #0xaaab
     ac0:	mul	x10, x10, x11
     ac4:	cmp	x10, #0x1
     ac8:	b.eq	af4 <_ZN4llvm3mca11Instruction13updatePendingEv+0xb4>  // b.none
     acc:	cmp	x10, #0x2
     ad0:	b.eq	ae8 <_ZN4llvm3mca11Instruction13updatePendingEv+0xa8>  // b.none
     ad4:	cmp	x10, #0x3
     ad8:	b.ne	b04 <_ZN4llvm3mca11Instruction13updatePendingEv+0xc4>  // b.any
     adc:	ldrb	w10, [x8, #40]
     ae0:	cbz	w10, afc <_ZN4llvm3mca11Instruction13updatePendingEv+0xbc>
     ae4:	add	x8, x8, #0x30
     ae8:	ldrb	w10, [x8, #40]
     aec:	cbz	w10, afc <_ZN4llvm3mca11Instruction13updatePendingEv+0xbc>
     af0:	add	x8, x8, #0x30
     af4:	ldrb	w10, [x8, #40]
     af8:	cbnz	w10, b04 <_ZN4llvm3mca11Instruction13updatePendingEv+0xc4>
     afc:	cmp	x8, x9
     b00:	b.ne	c8c <_ZN4llvm3mca11Instruction13updatePendingEv+0x24c>  // b.any
     b04:	ldr	w11, [x0, #24]
     b08:	ldr	x8, [x0, #16]
     b0c:	add	x9, x11, x11, lsl #4
     b10:	lsl	x10, x9, #3
     b14:	cmp	x10, #0x199
     b18:	add	x9, x8, x10
     b1c:	b.cc	c0c <_ZN4llvm3mca11Instruction13updatePendingEv+0x1cc>  // b.lo, b.ul, b.last
     b20:	lsr	x10, x11, #2
     b24:	add	x10, x10, #0x1
     b28:	b	b3c <_ZN4llvm3mca11Instruction13updatePendingEv+0xfc>
     b2c:	sub	x10, x10, #0x1
     b30:	cmp	x10, #0x1
     b34:	add	x8, x8, #0x220
     b38:	b.le	c08 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1c8>
     b3c:	ldr	x11, [x8, #24]
     b40:	cbnz	x11, c84 <_ZN4llvm3mca11Instruction13updatePendingEv+0x244>
     b44:	ldr	w11, [x8, #40]
     b48:	cbz	w11, b5c <_ZN4llvm3mca11Instruction13updatePendingEv+0x11c>
     b4c:	ldr	x12, [x8]
     b50:	ldr	w12, [x12, #4]
     b54:	cmp	w11, w12
     b58:	b.cs	c84 <_ZN4llvm3mca11Instruction13updatePendingEv+0x244>  // b.hs, b.nlast
     b5c:	ldr	x11, [x8, #160]
     b60:	cbnz	x11, bf8 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1b8>
     b64:	ldr	w11, [x8, #176]
     b68:	cbz	w11, b7c <_ZN4llvm3mca11Instruction13updatePendingEv+0x13c>
     b6c:	ldr	x12, [x8, #136]
     b70:	ldr	w12, [x12, #4]
     b74:	cmp	w11, w12
     b78:	b.cs	bf8 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1b8>  // b.hs, b.nlast
     b7c:	ldr	x12, [x8, #296]
     b80:	add	x11, x8, #0x110
     b84:	cbnz	x12, c00 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1c0>
     b88:	ldr	w12, [x8, #312]
     b8c:	cbz	w12, ba0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x160>
     b90:	ldr	x13, [x8, #272]
     b94:	ldr	w13, [x13, #4]
     b98:	cmp	w12, w13
     b9c:	b.cs	c00 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1c0>  // b.hs, b.nlast
     ba0:	ldr	x11, [x8, #432]
     ba4:	cbnz	x11, bc0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x180>
     ba8:	ldr	w11, [x8, #448]
     bac:	cbz	w11, b2c <_ZN4llvm3mca11Instruction13updatePendingEv+0xec>
     bb0:	ldr	x12, [x8, #408]
     bb4:	ldr	w12, [x12, #4]
     bb8:	cmp	w11, w12
     bbc:	b.cc	b2c <_ZN4llvm3mca11Instruction13updatePendingEv+0xec>  // b.lo, b.ul, b.last
     bc0:	add	x8, x8, #0x198
     bc4:	b	c84 <_ZN4llvm3mca11Instruction13updatePendingEv+0x244>
     bc8:	sub	x8, x8, #0x60
     bcc:	cmp	x8, x9
     bd0:	b.ne	c8c <_ZN4llvm3mca11Instruction13updatePendingEv+0x24c>  // b.any
     bd4:	b	b04 <_ZN4llvm3mca11Instruction13updatePendingEv+0xc4>
     bd8:	sub	x8, x8, #0x30
     bdc:	cmp	x8, x9
     be0:	b.ne	c8c <_ZN4llvm3mca11Instruction13updatePendingEv+0x24c>  // b.any
     be4:	b	b04 <_ZN4llvm3mca11Instruction13updatePendingEv+0xc4>
     be8:	add	x8, x8, #0x30
     bec:	cmp	x8, x9
     bf0:	b.ne	c8c <_ZN4llvm3mca11Instruction13updatePendingEv+0x24c>  // b.any
     bf4:	b	b04 <_ZN4llvm3mca11Instruction13updatePendingEv+0xc4>
     bf8:	add	x8, x8, #0x88
     bfc:	b	c84 <_ZN4llvm3mca11Instruction13updatePendingEv+0x244>
     c00:	mov	x8, x11
     c04:	b	c84 <_ZN4llvm3mca11Instruction13updatePendingEv+0x244>
     c08:	sub	x10, x9, x8
     c0c:	mov	x11, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
     c10:	asr	x10, x10, #3
     c14:	movk	x11, #0xf0f1
     c18:	mul	x10, x10, x11
     c1c:	cmp	x10, #0x1
     c20:	b.eq	c7c <_ZN4llvm3mca11Instruction13updatePendingEv+0x23c>  // b.none
     c24:	cmp	x10, #0x2
     c28:	b.eq	c58 <_ZN4llvm3mca11Instruction13updatePendingEv+0x218>  // b.none
     c2c:	cmp	x10, #0x3
     c30:	b.ne	cb0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x270>  // b.any
     c34:	ldr	x10, [x8, #24]
     c38:	cbnz	x10, c84 <_ZN4llvm3mca11Instruction13updatePendingEv+0x244>
     c3c:	ldr	w10, [x8, #40]
     c40:	cbz	w10, c54 <_ZN4llvm3mca11Instruction13updatePendingEv+0x214>
     c44:	ldr	x11, [x8]
     c48:	ldr	w11, [x11, #4]
     c4c:	cmp	w10, w11
     c50:	b.cs	c84 <_ZN4llvm3mca11Instruction13updatePendingEv+0x244>  // b.hs, b.nlast
     c54:	add	x8, x8, #0x88
     c58:	ldr	x10, [x8, #24]
     c5c:	cbnz	x10, c84 <_ZN4llvm3mca11Instruction13updatePendingEv+0x244>
     c60:	ldr	w10, [x8, #40]
     c64:	cbz	w10, c78 <_ZN4llvm3mca11Instruction13updatePendingEv+0x238>
     c68:	ldr	x11, [x8]
     c6c:	ldr	w11, [x11, #4]
     c70:	cmp	w10, w11
     c74:	b.cs	c84 <_ZN4llvm3mca11Instruction13updatePendingEv+0x244>  // b.hs, b.nlast
     c78:	add	x8, x8, #0x88
     c7c:	ldr	x10, [x8, #24]
     c80:	cbz	x10, c98 <_ZN4llvm3mca11Instruction13updatePendingEv+0x258>
     c84:	cmp	x8, x9
     c88:	b.eq	cb0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x270>  // b.none
     c8c:	mov	w0, wzr
     c90:	ldp	x29, x30, [sp], #16
     c94:	ret
     c98:	ldr	w10, [x8, #40]
     c9c:	cbz	w10, cb0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x270>
     ca0:	ldr	x11, [x8]
     ca4:	ldr	w11, [x11, #4]
     ca8:	cmp	w10, w11
     cac:	b.cs	c84 <_ZN4llvm3mca11Instruction13updatePendingEv+0x244>  // b.hs, b.nlast
     cb0:	mov	w8, #0x3                   	// #3
     cb4:	str	w8, [x0, #784]
     cb8:	mov	w0, #0x1                   	// #1
     cbc:	ldp	x29, x30, [sp], #16
     cc0:	ret
     cc4:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     cc8:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     ccc:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     cd0:	add	x0, x0, #0x0
     cd4:	add	x1, x1, #0x0
     cd8:	add	x3, x3, #0x0
     cdc:	mov	w2, #0xbe                  	// #190
     ce0:	bl	0 <__assert_fail>

0000000000000ce4 <_ZN4llvm3mca11Instruction7executeEj>:
     ce4:	stp	x29, x30, [sp, #-48]!
     ce8:	stp	x22, x21, [sp, #16]
     cec:	stp	x20, x19, [sp, #32]
     cf0:	mov	x29, sp
     cf4:	ldr	w8, [x0, #784]
     cf8:	cmp	w8, #0x3
     cfc:	b.ne	d78 <_ZN4llvm3mca11Instruction7executeEj+0x94>  // b.any
     d00:	ldr	x8, [x0]
     d04:	mov	w9, #0x4                   	// #4
     d08:	str	w9, [x0, #784]
     d0c:	ldr	w9, [x0, #24]
     d10:	ldr	w8, [x8, #312]
     d14:	mov	x19, x0
     d18:	str	w8, [x0, #788]
     d1c:	cbz	w9, d4c <_ZN4llvm3mca11Instruction7executeEj+0x68>
     d20:	ldr	x21, [x19, #16]
     d24:	add	x8, x9, x9, lsl #4
     d28:	mov	w20, w1
     d2c:	lsl	x22, x8, #3
     d30:	mov	x0, x21
     d34:	mov	w1, w20
     d38:	bl	bc <_ZN4llvm3mca10WriteState19onInstructionIssuedEj>
     d3c:	subs	x22, x22, #0x88
     d40:	add	x21, x21, #0x88
     d44:	b.ne	d30 <_ZN4llvm3mca11Instruction7executeEj+0x4c>  // b.any
     d48:	ldr	w8, [x19, #788]
     d4c:	cbz	w8, d60 <_ZN4llvm3mca11Instruction7executeEj+0x7c>
     d50:	ldp	x20, x19, [sp, #32]
     d54:	ldp	x22, x21, [sp, #16]
     d58:	ldp	x29, x30, [sp], #48
     d5c:	ret
     d60:	mov	w8, #0x5                   	// #5
     d64:	str	w8, [x19, #784]
     d68:	ldp	x20, x19, [sp, #32]
     d6c:	ldp	x22, x21, [sp, #16]
     d70:	ldp	x29, x30, [sp], #48
     d74:	ret
     d78:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     d7c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     d80:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     d84:	add	x0, x0, #0x0
     d88:	add	x1, x1, #0x0
     d8c:	add	x3, x3, #0x0
     d90:	mov	w2, #0xa9                  	// #169
     d94:	bl	0 <__assert_fail>

0000000000000d98 <_ZN4llvm3mca11Instruction13forceExecutedEv>:
     d98:	stp	x29, x30, [sp, #-16]!
     d9c:	mov	x29, sp
     da0:	ldr	w8, [x0, #784]
     da4:	cmp	w8, #0x3
     da8:	b.ne	dc0 <_ZN4llvm3mca11Instruction13forceExecutedEv+0x28>  // b.any
     dac:	adrp	x8, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     db0:	ldr	d0, [x8]
     db4:	str	d0, [x0, #784]
     db8:	ldp	x29, x30, [sp], #16
     dbc:	ret
     dc0:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     dc4:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     dc8:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     dcc:	add	x0, x0, #0x0
     dd0:	add	x1, x1, #0x0
     dd4:	add	x3, x3, #0x0
     dd8:	mov	w2, #0xb8                  	// #184
     ddc:	bl	0 <__assert_fail>

0000000000000de0 <_ZN4llvm3mca11Instruction6updateEv>:
     de0:	stp	x29, x30, [sp, #-32]!
     de4:	str	x19, [sp, #16]
     de8:	mov	x29, sp
     dec:	ldr	w8, [x0, #784]
     df0:	mov	x19, x0
     df4:	cmp	w8, #0x1
     df8:	b.ne	e08 <_ZN4llvm3mca11Instruction6updateEv+0x28>  // b.any
     dfc:	mov	x0, x19
     e00:	bl	7b4 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
     e04:	ldr	w8, [x19, #784]
     e08:	cmp	w8, #0x2
     e0c:	b.ne	e20 <_ZN4llvm3mca11Instruction6updateEv+0x40>  // b.any
     e10:	mov	x0, x19
     e14:	ldr	x19, [sp, #16]
     e18:	ldp	x29, x30, [sp], #32
     e1c:	b	a40 <_ZN4llvm3mca11Instruction13updatePendingEv>
     e20:	ldr	x19, [sp, #16]
     e24:	ldp	x29, x30, [sp], #32
     e28:	ret

0000000000000e2c <_ZN4llvm3mca11Instruction10cycleEventEv>:
     e2c:	stp	x29, x30, [sp, #-32]!
     e30:	str	x19, [sp, #16]
     e34:	mov	x29, sp
     e38:	ldr	w8, [x0, #784]
     e3c:	cmp	w8, #0x3
     e40:	b.eq	10d0 <_ZN4llvm3mca11Instruction10cycleEventEv+0x2a4>  // b.none
     e44:	sub	w9, w8, #0x1
     e48:	mov	x19, x0
     e4c:	cmp	w9, #0x2
     e50:	b.cs	f78 <_ZN4llvm3mca11Instruction10cycleEventEv+0x14c>  // b.hs, b.nlast
     e54:	ldr	w9, [x19, #584]
     e58:	cbz	w9, eb8 <_ZN4llvm3mca11Instruction10cycleEventEv+0x8c>
     e5c:	ldr	x10, [x19, #576]
     e60:	add	x9, x9, x9, lsl #1
     e64:	lsl	x9, x9, #4
     e68:	add	x10, x10, #0x14
     e6c:	b	e84 <_ZN4llvm3mca11Instruction10cycleEventEv+0x58>
     e70:	sub	w11, w11, #0x1
     e74:	str	w11, [x10, #4]
     e78:	subs	x9, x9, #0x30
     e7c:	add	x10, x10, #0x30
     e80:	b.eq	eb8 <_ZN4llvm3mca11Instruction10cycleEventEv+0x8c>  // b.none
     e84:	ldur	w11, [x10, #-4]
     e88:	cbz	w11, e94 <_ZN4llvm3mca11Instruction10cycleEventEv+0x68>
     e8c:	ldr	w11, [x10, #4]
     e90:	cbnz	w11, e70 <_ZN4llvm3mca11Instruction10cycleEventEv+0x44>
     e94:	ldr	w11, [x10]
     e98:	cmn	w11, #0x200
     e9c:	b.eq	e78 <_ZN4llvm3mca11Instruction10cycleEventEv+0x4c>  // b.none
     ea0:	cbz	w11, e78 <_ZN4llvm3mca11Instruction10cycleEventEv+0x4c>
     ea4:	subs	w11, w11, #0x1
     ea8:	str	w11, [x10]
     eac:	cset	w11, eq  // eq = none
     eb0:	strb	w11, [x10, #20]
     eb4:	b	e78 <_ZN4llvm3mca11Instruction10cycleEventEv+0x4c>
     eb8:	ldr	w10, [x19, #24]
     ebc:	cbz	w10, 1050 <_ZN4llvm3mca11Instruction10cycleEventEv+0x224>
     ec0:	ldr	x11, [x19, #16]
     ec4:	mov	w9, #0x88                  	// #136
     ec8:	mul	x9, x10, x9
     ecc:	sub	x12, x9, #0x88
     ed0:	cmp	x12, #0x87
     ed4:	mov	x9, x11
     ed8:	b.ls	107c <_ZN4llvm3mca11Instruction10cycleEventEv+0x250>  // b.plast
     edc:	mov	x9, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
     ee0:	movk	x9, #0xf0f1
     ee4:	umulh	x9, x12, x9
     ee8:	lsr	x9, x9, #7
     eec:	add	x12, x9, #0x1
     ef0:	mov	w14, #0x88                  	// #136
     ef4:	and	x13, x12, #0x3fffffffffffffe
     ef8:	madd	x9, x13, x14, x11
     efc:	add	x14, x11, #0xb0
     f00:	mov	x15, x13
     f04:	b	f14 <_ZN4llvm3mca11Instruction10cycleEventEv+0xe8>
     f08:	subs	x15, x15, #0x2
     f0c:	add	x14, x14, #0x110
     f10:	b.eq	1048 <_ZN4llvm3mca11Instruction10cycleEventEv+0x21c>  // b.none
     f14:	ldur	w17, [x14, #-168]
     f18:	ldur	w16, [x14, #-32]
     f1c:	cmn	w17, #0x200
     f20:	b.ne	f50 <_ZN4llvm3mca11Instruction10cycleEventEv+0x124>  // b.any
     f24:	cmn	w16, #0x200
     f28:	b.ne	f60 <_ZN4llvm3mca11Instruction10cycleEventEv+0x134>  // b.any
     f2c:	ldur	w17, [x14, #-136]
     f30:	ldr	w16, [x14]
     f34:	cbz	w17, f40 <_ZN4llvm3mca11Instruction10cycleEventEv+0x114>
     f38:	sub	w17, w17, #0x1
     f3c:	stur	w17, [x14, #-136]
     f40:	cbz	w16, f08 <_ZN4llvm3mca11Instruction10cycleEventEv+0xdc>
     f44:	sub	w16, w16, #0x1
     f48:	str	w16, [x14]
     f4c:	b	f08 <_ZN4llvm3mca11Instruction10cycleEventEv+0xdc>
     f50:	sub	w17, w17, #0x1
     f54:	stur	w17, [x14, #-168]
     f58:	cmn	w16, #0x200
     f5c:	b.eq	f2c <_ZN4llvm3mca11Instruction10cycleEventEv+0x100>  // b.none
     f60:	sub	w16, w16, #0x1
     f64:	stur	w16, [x14, #-32]
     f68:	ldur	w17, [x14, #-136]
     f6c:	ldr	w16, [x14]
     f70:	cbnz	w17, f38 <_ZN4llvm3mca11Instruction10cycleEventEv+0x10c>
     f74:	b	f40 <_ZN4llvm3mca11Instruction10cycleEventEv+0x114>
     f78:	cmp	w8, #0x4
     f7c:	b.ne	1130 <_ZN4llvm3mca11Instruction10cycleEventEv+0x304>  // b.any
     f80:	ldr	w8, [x19, #788]
     f84:	cbz	w8, 1150 <_ZN4llvm3mca11Instruction10cycleEventEv+0x324>
     f88:	ldr	w10, [x19, #24]
     f8c:	cbz	w10, 10c4 <_ZN4llvm3mca11Instruction10cycleEventEv+0x298>
     f90:	ldr	x11, [x19, #16]
     f94:	mov	w9, #0x88                  	// #136
     f98:	mul	x9, x10, x9
     f9c:	sub	x12, x9, #0x88
     fa0:	cmp	x12, #0x87
     fa4:	mov	x9, x11
     fa8:	b.ls	10dc <_ZN4llvm3mca11Instruction10cycleEventEv+0x2b0>  // b.plast
     fac:	mov	x9, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
     fb0:	movk	x9, #0xf0f1
     fb4:	umulh	x9, x12, x9
     fb8:	lsr	x9, x9, #7
     fbc:	add	x12, x9, #0x1
     fc0:	mov	w14, #0x88                  	// #136
     fc4:	and	x13, x12, #0x3fffffffffffffe
     fc8:	madd	x9, x13, x14, x11
     fcc:	add	x14, x11, #0xb0
     fd0:	mov	x15, x13
     fd4:	b	fe4 <_ZN4llvm3mca11Instruction10cycleEventEv+0x1b8>
     fd8:	subs	x15, x15, #0x2
     fdc:	add	x14, x14, #0x110
     fe0:	b.eq	10bc <_ZN4llvm3mca11Instruction10cycleEventEv+0x290>  // b.none
     fe4:	ldur	w17, [x14, #-168]
     fe8:	ldur	w16, [x14, #-32]
     fec:	cmn	w17, #0x200
     ff0:	b.ne	1020 <_ZN4llvm3mca11Instruction10cycleEventEv+0x1f4>  // b.any
     ff4:	cmn	w16, #0x200
     ff8:	b.ne	1030 <_ZN4llvm3mca11Instruction10cycleEventEv+0x204>  // b.any
     ffc:	ldur	w17, [x14, #-136]
    1000:	ldr	w16, [x14]
    1004:	cbz	w17, 1010 <_ZN4llvm3mca11Instruction10cycleEventEv+0x1e4>
    1008:	sub	w17, w17, #0x1
    100c:	stur	w17, [x14, #-136]
    1010:	cbz	w16, fd8 <_ZN4llvm3mca11Instruction10cycleEventEv+0x1ac>
    1014:	sub	w16, w16, #0x1
    1018:	str	w16, [x14]
    101c:	b	fd8 <_ZN4llvm3mca11Instruction10cycleEventEv+0x1ac>
    1020:	sub	w17, w17, #0x1
    1024:	stur	w17, [x14, #-168]
    1028:	cmn	w16, #0x200
    102c:	b.eq	ffc <_ZN4llvm3mca11Instruction10cycleEventEv+0x1d0>  // b.none
    1030:	sub	w16, w16, #0x1
    1034:	stur	w16, [x14, #-32]
    1038:	ldur	w17, [x14, #-136]
    103c:	ldr	w16, [x14]
    1040:	cbnz	w17, 1008 <_ZN4llvm3mca11Instruction10cycleEventEv+0x1dc>
    1044:	b	1010 <_ZN4llvm3mca11Instruction10cycleEventEv+0x1e4>
    1048:	cmp	x12, x13
    104c:	b.ne	107c <_ZN4llvm3mca11Instruction10cycleEventEv+0x250>  // b.any
    1050:	cmp	w8, #0x1
    1054:	b.ne	1064 <_ZN4llvm3mca11Instruction10cycleEventEv+0x238>  // b.any
    1058:	mov	x0, x19
    105c:	bl	7b4 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
    1060:	ldr	w8, [x19, #784]
    1064:	cmp	w8, #0x2
    1068:	b.ne	10d0 <_ZN4llvm3mca11Instruction10cycleEventEv+0x2a4>  // b.any
    106c:	mov	x0, x19
    1070:	ldr	x19, [sp, #16]
    1074:	ldp	x29, x30, [sp], #32
    1078:	b	a40 <_ZN4llvm3mca11Instruction13updatePendingEv>
    107c:	mov	w12, #0x88                  	// #136
    1080:	madd	x10, x10, x12, x11
    1084:	b	1094 <_ZN4llvm3mca11Instruction10cycleEventEv+0x268>
    1088:	add	x9, x9, #0x88
    108c:	cmp	x10, x9
    1090:	b.eq	1050 <_ZN4llvm3mca11Instruction10cycleEventEv+0x224>  // b.none
    1094:	ldr	w11, [x9, #8]
    1098:	cmn	w11, #0x200
    109c:	b.eq	10a8 <_ZN4llvm3mca11Instruction10cycleEventEv+0x27c>  // b.none
    10a0:	sub	w11, w11, #0x1
    10a4:	str	w11, [x9, #8]
    10a8:	ldr	w11, [x9, #40]
    10ac:	cbz	w11, 1088 <_ZN4llvm3mca11Instruction10cycleEventEv+0x25c>
    10b0:	sub	w11, w11, #0x1
    10b4:	str	w11, [x9, #40]
    10b8:	b	1088 <_ZN4llvm3mca11Instruction10cycleEventEv+0x25c>
    10bc:	cmp	x12, x13
    10c0:	b.ne	10dc <_ZN4llvm3mca11Instruction10cycleEventEv+0x2b0>  // b.any
    10c4:	subs	w8, w8, #0x1
    10c8:	str	w8, [x19, #788]
    10cc:	b.eq	111c <_ZN4llvm3mca11Instruction10cycleEventEv+0x2f0>  // b.none
    10d0:	ldr	x19, [sp, #16]
    10d4:	ldp	x29, x30, [sp], #32
    10d8:	ret
    10dc:	mov	w12, #0x88                  	// #136
    10e0:	madd	x10, x10, x12, x11
    10e4:	b	10f4 <_ZN4llvm3mca11Instruction10cycleEventEv+0x2c8>
    10e8:	add	x9, x9, #0x88
    10ec:	cmp	x10, x9
    10f0:	b.eq	10c4 <_ZN4llvm3mca11Instruction10cycleEventEv+0x298>  // b.none
    10f4:	ldr	w11, [x9, #8]
    10f8:	cmn	w11, #0x200
    10fc:	b.eq	1108 <_ZN4llvm3mca11Instruction10cycleEventEv+0x2dc>  // b.none
    1100:	sub	w11, w11, #0x1
    1104:	str	w11, [x9, #8]
    1108:	ldr	w11, [x9, #40]
    110c:	cbz	w11, 10e8 <_ZN4llvm3mca11Instruction10cycleEventEv+0x2bc>
    1110:	sub	w11, w11, #0x1
    1114:	str	w11, [x9, #40]
    1118:	b	10e8 <_ZN4llvm3mca11Instruction10cycleEventEv+0x2bc>
    111c:	mov	w8, #0x5                   	// #5
    1120:	str	w8, [x19, #784]
    1124:	ldr	x19, [sp, #16]
    1128:	ldp	x29, x30, [sp], #32
    112c:	ret
    1130:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    1134:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    1138:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    113c:	add	x0, x0, #0x0
    1140:	add	x1, x1, #0x0
    1144:	add	x3, x3, #0x0
    1148:	mov	w2, #0xf2                  	// #242
    114c:	bl	0 <__assert_fail>
    1150:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    1154:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    1158:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    115c:	add	x0, x0, #0x0
    1160:	add	x1, x1, #0x0
    1164:	add	x3, x3, #0x0
    1168:	mov	w2, #0xf3                  	// #243
    116c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Pipeline.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	cbz	x1, dc <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0xdc>
  20:	ldr	x9, [x20, #96]
  24:	add	x24, x20, #0x50
  28:	add	x21, x20, #0x58
  2c:	cbz	x9, 6c <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x6c>
  30:	ldr	x8, [x9, #32]
  34:	mov	x22, x9
  38:	add	x9, x9, #0x10
  3c:	add	x10, x22, #0x18
  40:	cmp	x8, x19
  44:	csel	x9, x9, x10, hi  // hi = pmore
  48:	ldr	x9, [x9]
  4c:	cbnz	x9, 30 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x30>
  50:	cmp	x8, x19
  54:	mov	x0, x22
  58:	b.ls	84 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x84>  // b.plast
  5c:	ldr	x8, [x24, #24]
  60:	cmp	x8, x22
  64:	b.ne	7c <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x7c>  // b.any
  68:	b	90 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x90>
  6c:	mov	x22, x21
  70:	ldr	x8, [x24, #24]
  74:	cmp	x8, x22
  78:	b.eq	90 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x90>  // b.none
  7c:	mov	x0, x22
  80:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  84:	ldr	x8, [x0, #32]
  88:	cmp	x8, x19
  8c:	b.cs	dc <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0xdc>  // b.hs, b.nlast
  90:	cbz	x22, dc <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0xdc>
  94:	cmp	x21, x22
  98:	b.eq	ac <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0xac>  // b.none
  9c:	ldr	x8, [x22, #32]
  a0:	cmp	x8, x19
  a4:	cset	w23, hi  // hi = pmore
  a8:	b	b0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0xb0>
  ac:	mov	w23, #0x1                   	// #1
  b0:	mov	w0, #0x28                  	// #40
  b4:	bl	0 <_Znwm>
  b8:	mov	x1, x0
  bc:	str	x19, [x0, #32]
  c0:	mov	w0, w23
  c4:	mov	x2, x22
  c8:	mov	x3, x21
  cc:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  d0:	ldr	x8, [x24, #40]
  d4:	add	x8, x8, #0x1
  d8:	str	x8, [x24, #40]
  dc:	ldr	w8, [x20, #8]
  e0:	cbz	w8, 100 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x100>
  e4:	ldr	x20, [x20]
  e8:	lsl	x21, x8, #3
  ec:	ldr	x0, [x20], #8
  f0:	mov	x1, x19
  f4:	bl	0 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>
  f8:	subs	x21, x21, #0x8
  fc:	b.ne	ec <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0xec>  // b.any
 100:	ldp	x20, x19, [sp, #48]
 104:	ldp	x22, x21, [sp, #32]
 108:	ldp	x24, x23, [sp, #16]
 10c:	ldp	x29, x30, [sp], #64
 110:	ret

0000000000000114 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>:
 114:	stp	x29, x30, [sp, #-48]!
 118:	str	x21, [sp, #16]
 11c:	stp	x20, x19, [sp, #32]
 120:	mov	x29, sp
 124:	ldr	w9, [x0, #8]
 128:	ldr	x19, [x0]
 12c:	lsl	x8, x9, #3
 130:	cmp	w9, #0x4
 134:	add	x20, x19, x8
 138:	b.cc	1a8 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x94>  // b.lo, b.ul, b.last
 13c:	lsr	x8, x9, #2
 140:	add	x21, x8, #0x1
 144:	ldr	x0, [x19]
 148:	ldr	x8, [x0]
 14c:	ldr	x8, [x8, #24]
 150:	blr	x8
 154:	tbnz	w0, #0, 224 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x110>
 158:	ldr	x0, [x19, #8]
 15c:	ldr	x8, [x0]
 160:	ldr	x8, [x8, #24]
 164:	blr	x8
 168:	tbnz	w0, #0, 210 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xfc>
 16c:	ldr	x0, [x19, #16]
 170:	ldr	x8, [x0]
 174:	ldr	x8, [x8, #24]
 178:	blr	x8
 17c:	tbnz	w0, #0, 218 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x104>
 180:	ldr	x0, [x19, #24]
 184:	ldr	x8, [x0]
 188:	ldr	x8, [x8, #24]
 18c:	blr	x8
 190:	tbnz	w0, #0, 220 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x10c>
 194:	sub	x21, x21, #0x1
 198:	cmp	x21, #0x1
 19c:	add	x19, x19, #0x20
 1a0:	b.gt	144 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x30>
 1a4:	sub	x8, x20, x19
 1a8:	asr	x8, x8, #3
 1ac:	cmp	x8, #0x1
 1b0:	b.eq	1f4 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xe0>  // b.none
 1b4:	cmp	x8, #0x2
 1b8:	b.eq	1dc <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xc8>  // b.none
 1bc:	cmp	x8, #0x3
 1c0:	b.ne	208 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xf4>  // b.any
 1c4:	ldr	x0, [x19]
 1c8:	ldr	x8, [x0]
 1cc:	ldr	x8, [x8, #24]
 1d0:	blr	x8
 1d4:	tbnz	w0, #0, 224 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x110>
 1d8:	add	x19, x19, #0x8
 1dc:	ldr	x0, [x19]
 1e0:	ldr	x8, [x0]
 1e4:	ldr	x8, [x8, #24]
 1e8:	blr	x8
 1ec:	tbnz	w0, #0, 224 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x110>
 1f0:	add	x19, x19, #0x8
 1f4:	ldr	x0, [x19]
 1f8:	ldr	x8, [x0]
 1fc:	ldr	x8, [x8, #24]
 200:	blr	x8
 204:	tbnz	w0, #0, 224 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x110>
 208:	mov	x19, x20
 20c:	b	224 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x110>
 210:	add	x19, x19, #0x8
 214:	b	224 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x110>
 218:	add	x19, x19, #0x10
 21c:	b	224 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x110>
 220:	add	x19, x19, #0x18
 224:	cmp	x19, x20
 228:	ldp	x20, x19, [sp, #32]
 22c:	ldr	x21, [sp, #16]
 230:	cset	w0, ne  // ne = any
 234:	ldp	x29, x30, [sp], #48
 238:	ret

000000000000023c <_ZN4llvm3mca8Pipeline3runEv>:
 23c:	sub	sp, sp, #0x30
 240:	stp	x29, x30, [sp, #16]
 244:	stp	x20, x19, [sp, #32]
 248:	add	x29, sp, #0x10
 24c:	ldr	w9, [x0, #8]
 250:	cbz	w9, 30c <_ZN4llvm3mca8Pipeline3runEv+0xd0>
 254:	mov	x20, x0
 258:	mov	x19, x8
 25c:	mov	x0, x20
 260:	bl	34c <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv>
 264:	add	x8, sp, #0x8
 268:	mov	x0, x20
 26c:	bl	448 <_ZN4llvm3mca8Pipeline8runCycleEv>
 270:	ldr	x8, [sp, #8]
 274:	tst	x8, #0xfffffffffffffffe
 278:	and	x10, x8, #0xfffffffffffffffe
 27c:	cset	w9, ne  // ne = any
 280:	orr	x9, x10, x9
 284:	str	x9, [sp, #8]
 288:	cbnz	x10, 2d8 <_ZN4llvm3mca8Pipeline3runEv+0x9c>
 28c:	cbnz	x9, 304 <_ZN4llvm3mca8Pipeline3runEv+0xc8>
 290:	mov	x0, x20
 294:	bl	5ec <_ZN4llvm3mca8Pipeline14notifyCycleEndEv>
 298:	ldr	w8, [x20, #128]
 29c:	mov	x0, x20
 2a0:	add	w8, w8, #0x1
 2a4:	str	w8, [x20, #128]
 2a8:	bl	114 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 2ac:	tbnz	w0, #0, 25c <_ZN4llvm3mca8Pipeline3runEv+0x20>
 2b0:	ldrb	w8, [x19, #8]
 2b4:	and	w8, w8, #0xfc
 2b8:	orr	w8, w8, #0x2
 2bc:	strb	w8, [x19, #8]
 2c0:	ldr	w8, [x20, #128]
 2c4:	str	w8, [x19]
 2c8:	ldp	x20, x19, [sp, #32]
 2cc:	ldp	x29, x30, [sp, #16]
 2d0:	add	sp, sp, #0x30
 2d4:	ret
 2d8:	ldrb	w9, [x19, #8]
 2dc:	ands	x8, x8, #0xfffffffffffffffe
 2e0:	str	xzr, [sp, #8]
 2e4:	orr	w9, w9, #0x3
 2e8:	strb	w9, [x19, #8]
 2ec:	b.eq	32c <_ZN4llvm3mca8Pipeline3runEv+0xf0>  // b.none
 2f0:	str	x8, [x19]
 2f4:	ldp	x20, x19, [sp, #32]
 2f8:	ldp	x29, x30, [sp, #16]
 2fc:	add	sp, sp, #0x30
 300:	ret
 304:	add	x0, sp, #0x8
 308:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 30c:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 310:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 314:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 318:	add	x0, x0, #0x0
 31c:	add	x1, x1, #0x0
 320:	add	x3, x3, #0x0
 324:	mov	w2, #0x26                  	// #38
 328:	bl	0 <__assert_fail>
 32c:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 330:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 334:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 338:	add	x0, x0, #0x0
 33c:	add	x1, x1, #0x0
 340:	add	x3, x3, #0x0
 344:	mov	w2, #0x1ce                 	// #462
 348:	bl	0 <__assert_fail>

000000000000034c <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv>:
 34c:	stp	x29, x30, [sp, #-32]!
 350:	stp	x20, x19, [sp, #16]
 354:	mov	x29, sp
 358:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 35c:	ldr	x8, [x8]
 360:	mov	x19, x0
 364:	ldrb	w8, [x8]
 368:	cbz	w8, 3ec <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0xa0>
 36c:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 370:	add	x0, x0, #0x0
 374:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 378:	tbz	w0, #0, 3ec <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0xa0>
 37c:	bl	0 <_ZN4llvm4dbgsEv>
 380:	ldp	x9, x8, [x0, #16]
 384:	sub	x9, x9, x8
 388:	cmp	x9, #0x11
 38c:	b.hi	3a4 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x58>  // b.pmore
 390:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 394:	add	x1, x1, #0x0
 398:	mov	w2, #0x12                  	// #18
 39c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 3a0:	b	3c8 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x7c>
 3a4:	adrp	x9, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 3a8:	add	x9, x9, #0x0
 3ac:	ldr	q0, [x9]
 3b0:	mov	w9, #0x203a                	// #8250
 3b4:	strh	w9, [x8, #16]
 3b8:	str	q0, [x8]
 3bc:	ldr	x8, [x0, #24]
 3c0:	add	x8, x8, #0x12
 3c4:	str	x8, [x0, #24]
 3c8:	ldr	w1, [x19, #128]
 3cc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 3d0:	ldp	x9, x8, [x0, #16]
 3d4:	cmp	x8, x9
 3d8:	b.cs	42c <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0xe0>  // b.hs, b.nlast
 3dc:	add	x9, x8, #0x1
 3e0:	mov	w10, #0xa                   	// #10
 3e4:	str	x9, [x0, #24]
 3e8:	strb	w10, [x8]
 3ec:	ldr	x20, [x19, #104]
 3f0:	add	x19, x19, #0x58
 3f4:	cmp	x20, x19
 3f8:	b.eq	420 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0xd4>  // b.none
 3fc:	ldr	x0, [x20, #32]
 400:	ldr	x8, [x0]
 404:	ldr	x8, [x8]
 408:	blr	x8
 40c:	mov	x0, x20
 410:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 414:	mov	x20, x0
 418:	cmp	x0, x19
 41c:	b.ne	3fc <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0xb0>  // b.any
 420:	ldp	x20, x19, [sp, #16]
 424:	ldp	x29, x30, [sp], #32
 428:	ret
 42c:	mov	w1, #0xa                   	// #10
 430:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 434:	ldr	x20, [x19, #104]
 438:	add	x19, x19, #0x58
 43c:	cmp	x20, x19
 440:	b.ne	3fc <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0xb0>  // b.any
 444:	b	420 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0xd4>

0000000000000448 <_ZN4llvm3mca8Pipeline8runCycleEv>:
 448:	sub	sp, sp, #0x50
 44c:	stp	x29, x30, [sp, #32]
 450:	stp	x22, x21, [sp, #48]
 454:	stp	x20, x19, [sp, #64]
 458:	add	x29, sp, #0x20
 45c:	mov	x19, x8
 460:	mov	w8, #0x1                   	// #1
 464:	str	x8, [x19]
 468:	ldr	w9, [x0, #8]
 46c:	mov	x20, x0
 470:	cbz	w9, 4d0 <_ZN4llvm3mca8Pipeline8runCycleEv+0x88>
 474:	ldr	x8, [x20]
 478:	lsl	x21, x9, #3
 47c:	sub	x22, x8, #0x8
 480:	mov	w8, #0x1                   	// #1
 484:	tst	x8, #0xfffffffffffffffe
 488:	and	x9, x8, #0xfffffffffffffffe
 48c:	cset	w8, ne  // ne = any
 490:	orr	x8, x9, x8
 494:	str	x8, [x19]
 498:	cbnz	x9, 4cc <_ZN4llvm3mca8Pipeline8runCycleEv+0x84>
 49c:	ldr	x0, [x22, x21]
 4a0:	ldr	x8, [x0]
 4a4:	ldr	x9, [x8, #32]
 4a8:	add	x8, sp, #0x10
 4ac:	blr	x9
 4b0:	ldr	x8, [x19]
 4b4:	cbnz	x8, 5c4 <_ZN4llvm3mca8Pipeline8runCycleEv+0x17c>
 4b8:	ldr	x8, [sp, #16]
 4bc:	subs	x21, x21, #0x8
 4c0:	orr	x8, x8, #0x1
 4c4:	str	x8, [x19]
 4c8:	b.ne	484 <_ZN4llvm3mca8Pipeline8runCycleEv+0x3c>  // b.any
 4cc:	ldr	w9, [x20, #8]
 4d0:	str	wzr, [sp, #16]
 4d4:	str	xzr, [sp, #24]
 4d8:	cbz	w9, 5cc <_ZN4llvm3mca8Pipeline8runCycleEv+0x184>
 4dc:	ldr	x22, [x20]
 4e0:	tst	x8, #0xfffffffffffffffe
 4e4:	and	x10, x8, #0xfffffffffffffffe
 4e8:	cset	w8, ne  // ne = any
 4ec:	ldr	x21, [x22]
 4f0:	orr	x8, x10, x8
 4f4:	str	x8, [x19]
 4f8:	cbz	x10, 540 <_ZN4llvm3mca8Pipeline8runCycleEv+0xf8>
 4fc:	add	x8, x22, w9, uxtw #3
 500:	b	568 <_ZN4llvm3mca8Pipeline8runCycleEv+0x120>
 504:	ldr	x8, [x21]
 508:	add	x1, sp, #0x10
 50c:	mov	x0, x21
 510:	ldr	x9, [x8, #48]
 514:	add	x8, sp, #0x8
 518:	blr	x9
 51c:	ldr	x8, [x19]
 520:	cbnz	x8, 5c4 <_ZN4llvm3mca8Pipeline8runCycleEv+0x17c>
 524:	ldr	x8, [sp, #8]
 528:	tst	x8, #0xfffffffffffffffe
 52c:	and	x9, x8, #0xfffffffffffffffe
 530:	cset	w8, ne  // ne = any
 534:	orr	x8, x9, x8
 538:	str	x8, [x19]
 53c:	cbnz	x9, 558 <_ZN4llvm3mca8Pipeline8runCycleEv+0x110>
 540:	ldr	x8, [x21]
 544:	add	x1, sp, #0x10
 548:	mov	x0, x21
 54c:	ldr	x8, [x8, #16]
 550:	blr	x8
 554:	tbnz	w0, #0, 504 <_ZN4llvm3mca8Pipeline8runCycleEv+0xbc>
 558:	ldr	w8, [x20, #8]
 55c:	cbz	w8, 5b0 <_ZN4llvm3mca8Pipeline8runCycleEv+0x168>
 560:	ldr	x22, [x20]
 564:	add	x8, x22, x8, lsl #3
 568:	sub	x20, x8, #0x8
 56c:	ldr	x0, [x22]
 570:	ldr	x8, [x0]
 574:	ldr	x9, [x8, #40]
 578:	add	x8, sp, #0x8
 57c:	blr	x9
 580:	ldr	x8, [x19]
 584:	cbnz	x8, 5c4 <_ZN4llvm3mca8Pipeline8runCycleEv+0x17c>
 588:	ldr	x8, [sp, #8]
 58c:	tst	x8, #0xfffffffffffffffe
 590:	and	x9, x8, #0xfffffffffffffffe
 594:	cset	w8, ne  // ne = any
 598:	orr	x8, x9, x8
 59c:	str	x8, [x19]
 5a0:	cbnz	x9, 5b0 <_ZN4llvm3mca8Pipeline8runCycleEv+0x168>
 5a4:	cmp	x20, x22
 5a8:	add	x22, x22, #0x8
 5ac:	b.ne	56c <_ZN4llvm3mca8Pipeline8runCycleEv+0x124>  // b.any
 5b0:	ldp	x20, x19, [sp, #64]
 5b4:	ldp	x22, x21, [sp, #48]
 5b8:	ldp	x29, x30, [sp, #32]
 5bc:	add	sp, sp, #0x50
 5c0:	ret
 5c4:	mov	x0, x19
 5c8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 5cc:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 5d0:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 5d4:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 5d8:	add	x0, x0, #0x0
 5dc:	add	x1, x1, #0x0
 5e0:	add	x3, x3, #0x0
 5e4:	mov	w2, #0x95                  	// #149
 5e8:	bl	0 <__assert_fail>

00000000000005ec <_ZN4llvm3mca8Pipeline14notifyCycleEndEv>:
 5ec:	stp	x29, x30, [sp, #-32]!
 5f0:	stp	x20, x19, [sp, #16]
 5f4:	mov	x29, sp
 5f8:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 5fc:	ldr	x8, [x8]
 600:	mov	x19, x0
 604:	ldrb	w8, [x8]
 608:	cbz	w8, 68c <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0xa0>
 60c:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 610:	add	x0, x0, #0x0
 614:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 618:	tbz	w0, #0, 68c <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0xa0>
 61c:	bl	0 <_ZN4llvm4dbgsEv>
 620:	ldp	x9, x8, [x0, #16]
 624:	sub	x9, x9, x8
 628:	cmp	x9, #0xe
 62c:	b.hi	644 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x58>  // b.pmore
 630:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 634:	add	x1, x1, #0x0
 638:	mov	w2, #0xf                   	// #15
 63c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 640:	b	668 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x7c>
 644:	adrp	x9, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 648:	add	x9, x9, #0x0
 64c:	ldur	x10, [x9, #7]
 650:	ldr	x9, [x9]
 654:	stur	x10, [x8, #7]
 658:	str	x9, [x8]
 65c:	ldr	x8, [x0, #24]
 660:	add	x8, x8, #0xf
 664:	str	x8, [x0, #24]
 668:	ldr	w1, [x19, #128]
 66c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 670:	ldp	x9, x8, [x0, #16]
 674:	cmp	x9, x8
 678:	b.ne	6cc <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0xe0>  // b.any
 67c:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 680:	add	x1, x1, #0x0
 684:	mov	w2, #0x1                   	// #1
 688:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 68c:	ldr	x20, [x19, #104]
 690:	add	x19, x19, #0x58
 694:	cmp	x20, x19
 698:	b.eq	6c0 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0xd4>  // b.none
 69c:	ldr	x0, [x20, #32]
 6a0:	ldr	x8, [x0]
 6a4:	ldr	x8, [x8, #8]
 6a8:	blr	x8
 6ac:	mov	x0, x20
 6b0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 6b4:	mov	x20, x0
 6b8:	cmp	x0, x19
 6bc:	b.ne	69c <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0xb0>  // b.any
 6c0:	ldp	x20, x19, [sp, #16]
 6c4:	ldp	x29, x30, [sp], #32
 6c8:	ret
 6cc:	mov	w9, #0xa                   	// #10
 6d0:	strb	w9, [x8]
 6d4:	ldr	x8, [x0, #24]
 6d8:	add	x8, x8, #0x1
 6dc:	str	x8, [x0, #24]
 6e0:	ldr	x20, [x19, #104]
 6e4:	add	x19, x19, #0x58
 6e8:	cmp	x20, x19
 6ec:	b.ne	69c <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0xb0>  // b.any
 6f0:	b	6c0 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0xd4>

00000000000006f4 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>:
 6f4:	stp	x29, x30, [sp, #-32]!
 6f8:	stp	x20, x19, [sp, #16]
 6fc:	mov	x29, sp
 700:	ldr	x9, [x1]
 704:	cbz	x9, 77c <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x88>
 708:	ldr	w8, [x0, #8]
 70c:	mov	x20, x1
 710:	mov	x19, x0
 714:	cbz	w8, 730 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x3c>
 718:	ldr	x10, [x19]
 71c:	add	x10, x10, x8, lsl #3
 720:	ldur	x10, [x10, #-8]
 724:	ldr	x11, [x10, #8]
 728:	cbnz	x11, 7bc <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0xc8>
 72c:	str	x9, [x10, #8]
 730:	ldr	w9, [x19, #12]
 734:	cmp	w8, w9
 738:	b.cs	768 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x74>  // b.hs, b.nlast
 73c:	ldr	x10, [x19]
 740:	ldr	x11, [x20]
 744:	cmp	w8, w9
 748:	str	xzr, [x20]
 74c:	str	x11, [x10, w8, uxtw #3]
 750:	b.cs	79c <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0xa8>  // b.hs, b.nlast
 754:	add	w8, w8, #0x1
 758:	str	w8, [x19, #8]
 75c:	ldp	x20, x19, [sp, #16]
 760:	ldp	x29, x30, [sp], #32
 764:	ret
 768:	mov	x0, x19
 76c:	mov	x1, xzr
 770:	bl	0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 774:	ldp	w8, w9, [x19, #8]
 778:	b	73c <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x48>
 77c:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 780:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 784:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 788:	add	x0, x0, #0x0
 78c:	add	x1, x1, #0x0
 790:	add	x3, x3, #0x0
 794:	mov	w2, #0x4c                  	// #76
 798:	bl	0 <__assert_fail>
 79c:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 7a0:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 7a4:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 7a8:	add	x0, x0, #0x0
 7ac:	add	x1, x1, #0x0
 7b0:	add	x3, x3, #0x0
 7b4:	mov	w2, #0x43                  	// #67
 7b8:	bl	0 <__assert_fail>
 7bc:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 7c0:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 7c4:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 7c8:	add	x0, x0, #0x0
 7cc:	add	x1, x1, #0x0
 7d0:	add	x3, x3, #0x0
 7d4:	mov	w2, #0x3a                  	// #58
 7d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  6c:	lsl	x0, x21, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, 11c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x11c>
  c4:	lsl	x22, x8, #3
  c8:	mov	x9, x22
  cc:	mov	x10, x20
  d0:	ldr	x11, [x0]
  d4:	str	xzr, [x0], #8
  d8:	subs	x9, x9, #0x8
  dc:	str	x11, [x10], #8
  e0:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0xd0>  // b.any
  e4:	ldr	x0, [x19]
  e8:	cbz	w8, 11c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x11c>
  ec:	sub	x23, x0, #0x8
  f0:	b	100 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x100>
  f4:	str	xzr, [x23, x22]
  f8:	subs	x22, x22, #0x8
  fc:	b.eq	118 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x118>  // b.none
 100:	ldr	x0, [x23, x22]
 104:	cbz	x0, f4 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0xf4>
 108:	ldr	x8, [x0]
 10c:	ldr	x8, [x8, #8]
 110:	blr	x8
 114:	b	f4 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0xf4>
 118:	ldr	x0, [x19]
 11c:	add	x8, x19, #0x10
 120:	cmp	x0, x8
 124:	b.eq	12c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x12c>  // b.none
 128:	bl	0 <free>
 12c:	str	x20, [x19]
 130:	str	w21, [x19, #12]
 134:	ldp	x20, x19, [sp, #48]
 138:	ldp	x22, x21, [sp, #32]
 13c:	ldr	x23, [sp, #16]
 140:	ldp	x29, x30, [sp], #64
 144:	ret

DispatchStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>:
   0:	str	xzr, [x0, #8]
   4:	adrp	x9, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
   8:	ldr	x9, [x9]
   c:	mov	x8, x0
  10:	str	wzr, [x8, #24]!
  14:	stp	w3, w3, [x0, #64]
  18:	add	x9, x9, #0x10
  1c:	str	wzr, [x0, #72]
  20:	str	wzr, [x0, #80]
  24:	stp	xzr, x1, [x0, #88]
  28:	stp	xzr, x8, [x0, #32]
  2c:	stp	x8, xzr, [x0, #48]
  30:	str	x9, [x0]
  34:	stp	x4, x5, [x0, #104]
  38:	cbz	w3, 40 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE+0x40>
  3c:	ret
  40:	ldr	x8, [x1, #152]
  44:	ldr	w8, [x8]
  48:	str	w8, [x0, #64]
  4c:	ret

0000000000000050 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>:
  50:	sub	sp, sp, #0x70
  54:	stp	x29, x30, [sp, #48]
  58:	stp	x24, x23, [sp, #64]
  5c:	stp	x22, x21, [sp, #80]
  60:	stp	x20, x19, [sp, #96]
  64:	add	x29, sp, #0x30
  68:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
  6c:	ldr	x8, [x8]
  70:	mov	w19, w4
  74:	mov	x20, x3
  78:	mov	x21, x2
  7c:	ldrb	w8, [x8]
  80:	mov	x22, x1
  84:	mov	x23, x0
  88:	cbz	w8, 12c <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0xdc>
  8c:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
  90:	add	x0, x0, #0x0
  94:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
  98:	tbz	w0, #0, 12c <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0xdc>
  9c:	bl	0 <_ZN4llvm4dbgsEv>
  a0:	ldp	x9, x8, [x0, #16]
  a4:	mov	x24, x0
  a8:	sub	x9, x9, x8
  ac:	cmp	x9, #0x1c
  b0:	b.hi	d0 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x80>  // b.pmore
  b4:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
  b8:	add	x1, x1, #0x0
  bc:	mov	w2, #0x1d                  	// #29
  c0:	mov	x0, x24
  c4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  c8:	mov	x24, x0
  cc:	b	f4 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0xa4>
  d0:	adrp	x9, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
  d4:	add	x9, x9, #0x0
  d8:	ldur	q0, [x9, #13]
  dc:	ldr	q1, [x9]
  e0:	stur	q0, [x8, #13]
  e4:	str	q1, [x8]
  e8:	ldr	x8, [x24, #24]
  ec:	add	x8, x8, #0x1d
  f0:	str	x8, [x24, #24]
  f4:	ldr	w1, [x22]
  f8:	mov	x0, x24
  fc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 100:	ldp	x9, x8, [x24, #16]
 104:	cmp	x8, x9
 108:	b.cs	120 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0xd0>  // b.hs, b.nlast
 10c:	add	x9, x8, #0x1
 110:	mov	w10, #0xa                   	// #10
 114:	str	x9, [x24, #24]
 118:	strb	w10, [x8]
 11c:	b	12c <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0xdc>
 120:	mov	w1, #0xa                   	// #10
 124:	mov	x0, x24
 128:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 12c:	mov	w8, #0x6                   	// #6
 130:	stp	x22, x21, [sp, #16]
 134:	str	x20, [sp, #32]
 138:	str	w8, [sp, #8]
 13c:	str	w19, [sp, #40]
 140:	ldr	x19, [x23, #40]
 144:	add	x20, x23, #0x18
 148:	cmp	x19, x20
 14c:	b.eq	178 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x128>  // b.none
 150:	ldr	x0, [x19, #32]
 154:	add	x1, sp, #0x8
 158:	ldr	x8, [x0]
 15c:	ldr	x8, [x8, #16]
 160:	blr	x8
 164:	mov	x0, x19
 168:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 16c:	mov	x19, x0
 170:	cmp	x0, x20
 174:	b.ne	150 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x100>  // b.any
 178:	ldp	x20, x19, [sp, #96]
 17c:	ldp	x22, x21, [sp, #80]
 180:	ldp	x24, x23, [sp, #64]
 184:	ldp	x29, x30, [sp, #48]
 188:	add	sp, sp, #0x70
 18c:	ret

0000000000000190 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE>:
 190:	sub	sp, sp, #0x70
 194:	stp	x29, x30, [sp, #48]
 198:	stp	x24, x23, [sp, #64]
 19c:	stp	x22, x21, [sp, #80]
 1a0:	stp	x20, x19, [sp, #96]
 1a4:	add	x29, sp, #0x30
 1a8:	adrp	x8, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 1ac:	ldr	d0, [x8]
 1b0:	add	x8, sp, #0x18
 1b4:	add	x21, x8, #0x10
 1b8:	str	x21, [sp, #24]
 1bc:	str	d0, [sp, #32]
 1c0:	ldr	x10, [x1, #8]
 1c4:	mov	x19, x1
 1c8:	mov	x20, x0
 1cc:	ldr	w9, [x10, #24]
 1d0:	cbz	w9, 280 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xf0>
 1d4:	ldr	x10, [x10, #16]
 1d8:	add	x9, x9, x9, lsl #4
 1dc:	mov	w8, wzr
 1e0:	lsl	x22, x9, #3
 1e4:	add	x23, x10, #0xc
 1e8:	mov	w9, #0x4                   	// #4
 1ec:	mov	x1, x21
 1f0:	ldrh	w24, [x23]
 1f4:	cmp	w8, w9
 1f8:	b.cs	220 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x90>  // b.hs, b.nlast
 1fc:	cmp	w8, w9
 200:	strh	w24, [x1, w8, uxtw #1]
 204:	b.cs	248 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xb8>  // b.hs, b.nlast
 208:	add	w8, w8, #0x1
 20c:	subs	x22, x22, #0x88
 210:	add	x23, x23, #0x88
 214:	str	w8, [sp, #32]
 218:	b.ne	1f0 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x60>  // b.any
 21c:	b	268 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xd8>
 220:	add	x0, sp, #0x18
 224:	mov	w3, #0x2                   	// #2
 228:	mov	x1, x21
 22c:	mov	x2, xzr
 230:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 234:	ldp	w8, w9, [sp, #32]
 238:	ldr	x1, [sp, #24]
 23c:	cmp	w8, w9
 240:	strh	w24, [x1, w8, uxtw #1]
 244:	b.cc	208 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x78>  // b.lo, b.ul, b.last
 248:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 24c:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 250:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 254:	add	x0, x0, #0x0
 258:	add	x1, x1, #0x0
 25c:	add	x3, x3, #0x0
 260:	mov	w2, #0x43                  	// #67
 264:	bl	0 <__assert_fail>
 268:	mov	w2, w8
 26c:	ldr	x0, [x20, #112]
 270:	bl	0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE>
 274:	mov	w21, #0x1                   	// #1
 278:	cbnz	w0, 298 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x108>
 27c:	b	2dc <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x14c>
 280:	mov	x2, xzr
 284:	mov	x1, x21
 288:	ldr	x0, [x20, #112]
 28c:	bl	0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE>
 290:	mov	w21, #0x1                   	// #1
 294:	cbz	w0, 2dc <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x14c>
 298:	str	w21, [sp, #8]
 29c:	str	x19, [sp, #16]
 2a0:	ldr	x19, [x20, #40]
 2a4:	add	x20, x20, #0x18
 2a8:	cmp	x19, x20
 2ac:	b.eq	2d8 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x148>  // b.none
 2b0:	ldr	x0, [x19, #32]
 2b4:	add	x1, sp, #0x8
 2b8:	ldr	x8, [x0]
 2bc:	ldr	x8, [x8, #24]
 2c0:	blr	x8
 2c4:	mov	x0, x19
 2c8:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 2cc:	mov	x19, x0
 2d0:	cmp	x0, x20
 2d4:	b.ne	2b0 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x120>  // b.any
 2d8:	mov	w21, wzr
 2dc:	ldr	x0, [sp, #24]
 2e0:	add	x8, sp, #0x18
 2e4:	add	x8, x8, #0x10
 2e8:	cmp	x0, x8
 2ec:	b.eq	2f4 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x164>  // b.none
 2f0:	bl	0 <free>
 2f4:	mov	w0, w21
 2f8:	ldp	x20, x19, [sp, #96]
 2fc:	ldp	x22, x21, [sp, #80]
 300:	ldp	x24, x23, [sp, #64]
 304:	ldp	x29, x30, [sp, #48]
 308:	add	sp, sp, #0x70
 30c:	ret

0000000000000310 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE>:
 310:	sub	sp, sp, #0x30
 314:	stp	x29, x30, [sp, #16]
 318:	stp	x20, x19, [sp, #32]
 31c:	add	x29, sp, #0x10
 320:	ldr	x8, [x1, #8]
 324:	ldr	x9, [x0, #104]
 328:	ldr	x8, [x8]
 32c:	ldp	w10, w9, [x9, #16]
 330:	ldr	w8, [x8, #316]
 334:	cmp	w10, w8
 338:	csel	w8, w10, w8, cc  // cc = lo, ul, last
 33c:	cmp	w8, #0x0
 340:	csinc	w8, w8, wzr, ne  // ne = any
 344:	cmp	w9, w8
 348:	b.cs	3a4 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0x94>  // b.hs, b.nlast
 34c:	mov	w8, #0x2                   	// #2
 350:	str	w8, [sp]
 354:	str	x1, [sp, #8]
 358:	ldr	x19, [x0, #40]
 35c:	add	x20, x0, #0x18
 360:	cmp	x19, x20
 364:	b.eq	390 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0x80>  // b.none
 368:	ldr	x0, [x19, #32]
 36c:	mov	x1, sp
 370:	ldr	x8, [x0]
 374:	ldr	x8, [x8, #24]
 378:	blr	x8
 37c:	mov	x0, x19
 380:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 384:	mov	x19, x0
 388:	cmp	x0, x20
 38c:	b.ne	368 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0x58>  // b.any
 390:	mov	w0, wzr
 394:	ldp	x20, x19, [sp, #32]
 398:	ldp	x29, x30, [sp, #16]
 39c:	add	sp, sp, #0x30
 3a0:	ret
 3a4:	mov	w0, #0x1                   	// #1
 3a8:	ldp	x20, x19, [sp, #32]
 3ac:	ldp	x29, x30, [sp, #16]
 3b0:	add	sp, sp, #0x30
 3b4:	ret

00000000000003b8 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE>:
 3b8:	sub	sp, sp, #0x40
 3bc:	stp	x29, x30, [sp, #16]
 3c0:	stp	x22, x21, [sp, #32]
 3c4:	stp	x20, x19, [sp, #48]
 3c8:	add	x29, sp, #0x10
 3cc:	ldr	x8, [x1, #8]
 3d0:	ldr	x9, [x0, #104]
 3d4:	mov	x19, x1
 3d8:	mov	x20, x0
 3dc:	ldr	x8, [x8]
 3e0:	ldp	w10, w9, [x9, #16]
 3e4:	ldr	w8, [x8, #316]
 3e8:	cmp	w10, w8
 3ec:	csel	w8, w10, w8, cc  // cc = lo, ul, last
 3f0:	cmp	w8, #0x0
 3f4:	csinc	w8, w8, wzr, ne  // ne = any
 3f8:	cmp	w9, w8
 3fc:	b.cs	44c <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE+0x94>  // b.hs, b.nlast
 400:	mov	w8, #0x2                   	// #2
 404:	str	w8, [sp]
 408:	str	x19, [sp, #8]
 40c:	ldr	x21, [x20, #40]
 410:	add	x22, x20, #0x18
 414:	cmp	x21, x22
 418:	b.eq	444 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE+0x8c>  // b.none
 41c:	ldr	x0, [x21, #32]
 420:	mov	x1, sp
 424:	ldr	x8, [x0]
 428:	ldr	x8, [x8, #24]
 42c:	blr	x8
 430:	mov	x0, x21
 434:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 438:	mov	x21, x0
 43c:	cmp	x0, x22
 440:	b.ne	41c <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE+0x64>  // b.any
 444:	mov	w21, wzr
 448:	b	450 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE+0x98>
 44c:	mov	w21, #0x1                   	// #1
 450:	mov	x0, x20
 454:	mov	x1, x19
 458:	bl	190 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE>
 45c:	ldr	x8, [x20, #8]
 460:	and	w20, w21, w0
 464:	cbz	x8, 480 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE+0xc8>
 468:	ldr	x9, [x8]
 46c:	mov	x0, x8
 470:	mov	x1, x19
 474:	ldr	x9, [x9, #16]
 478:	blr	x9
 47c:	b	484 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE+0xcc>
 480:	mov	w0, wzr
 484:	and	w0, w20, w0
 488:	ldp	x20, x19, [sp, #48]
 48c:	ldp	x22, x21, [sp, #32]
 490:	ldp	x29, x30, [sp, #16]
 494:	add	sp, sp, #0x40
 498:	ret

000000000000049c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE>:
 49c:	sub	sp, sp, #0x70
 4a0:	stp	x29, x30, [sp, #48]
 4a4:	stp	x24, x23, [sp, #64]
 4a8:	stp	x22, x21, [sp, #80]
 4ac:	stp	x20, x19, [sp, #96]
 4b0:	add	x29, sp, #0x30
 4b4:	stp	x1, x2, [x29, #-16]
 4b8:	ldr	w9, [x0, #72]
 4bc:	cbnz	w9, 6e4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x248>
 4c0:	mov	x19, x8
 4c4:	ldr	x8, [x2]
 4c8:	ldp	w11, w10, [x0, #64]
 4cc:	mov	x21, x2
 4d0:	mov	x20, x0
 4d4:	ldr	w23, [x8, #316]
 4d8:	subs	w9, w23, w11
 4dc:	b.ls	500 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x64>  // b.plast
 4e0:	cmp	w10, w11
 4e4:	b.ne	764 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x2c8>  // b.any
 4e8:	stp	wzr, w9, [x20, #68]
 4ec:	str	w1, [x20, #80]
 4f0:	str	x21, [x20, #88]
 4f4:	ldrb	w8, [x8, #328]
 4f8:	cbnz	w8, 514 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x78>
 4fc:	b	518 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x7c>
 500:	subs	w9, w10, w23
 504:	b.cc	784 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x2e8>  // b.lo, b.ul, b.last
 508:	str	w9, [x20, #68]
 50c:	ldrb	w8, [x8, #328]
 510:	cbz	w8, 518 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x7c>
 514:	str	wzr, [x20, #68]
 518:	ldrb	w8, [x21, #8]
 51c:	cbz	w8, 554 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xb8>
 520:	ldr	w8, [x21, #24]
 524:	cmp	w8, #0x1
 528:	b.ne	724 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x288>  // b.any
 52c:	ldr	w8, [x21, #584]
 530:	cmp	w8, #0x1
 534:	b.ne	744 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x2a8>  // b.any
 538:	ldr	x0, [x20, #112]
 53c:	ldr	x1, [x21, #16]
 540:	ldr	x2, [x21, #576]
 544:	bl	0 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE>
 548:	tbz	w0, #0, 554 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xb8>
 54c:	mov	w8, #0x1                   	// #1
 550:	strb	w8, [x21, #840]
 554:	ldrb	w8, [x21, #840]
 558:	cbnz	w8, 58c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xf0>
 55c:	ldr	w8, [x21, #584]
 560:	cbz	w8, 58c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xf0>
 564:	ldr	x22, [x21, #576]
 568:	add	x8, x8, x8, lsl #1
 56c:	lsl	x24, x8, #4
 570:	ldr	x0, [x20, #112]
 574:	ldr	x2, [x20, #96]
 578:	mov	x1, x22
 57c:	bl	0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE>
 580:	subs	x24, x24, #0x30
 584:	add	x22, x22, #0x30
 588:	b.ne	570 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xd4>  // b.any
 58c:	ldr	x8, [x20, #112]
 590:	mov	x9, sp
 594:	add	x1, x9, #0x10
 598:	ldr	w22, [x8, #24]
 59c:	adrp	x8, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 5a0:	ldr	d0, [x8]
 5a4:	str	x1, [sp]
 5a8:	cmp	w22, #0x5
 5ac:	str	d0, [sp, #8]
 5b0:	b.cc	5cc <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x130>  // b.lo, b.ul, b.last
 5b4:	mov	x0, sp
 5b8:	mov	w3, #0x4                   	// #4
 5bc:	mov	x2, x22
 5c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 5c4:	ldr	w8, [sp, #12]
 5c8:	b	5d0 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x134>
 5cc:	mov	w8, #0x4                   	// #4
 5d0:	cmp	x8, x22
 5d4:	b.cc	704 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x268>  // b.lo, b.ul, b.last
 5d8:	str	w22, [sp, #8]
 5dc:	cbz	w22, 5f0 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x154>
 5e0:	ldr	x0, [sp]
 5e4:	lsl	x2, x22, #2
 5e8:	mov	w1, wzr
 5ec:	bl	0 <memset>
 5f0:	ldr	w8, [x21, #24]
 5f4:	cbz	w8, 628 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x18c>
 5f8:	ldr	x22, [x21, #16]
 5fc:	add	x8, x8, x8, lsl #4
 600:	lsl	x24, x8, #3
 604:	ldr	x0, [x20, #112]
 608:	ldur	w1, [x29, #-16]
 60c:	ldr	x3, [sp]
 610:	ldr	w4, [sp, #8]
 614:	mov	x2, x22
 618:	bl	0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE>
 61c:	subs	x24, x24, #0x88
 620:	add	x22, x22, #0x88
 624:	b.ne	604 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x168>  // b.any
 628:	ldr	x0, [x20, #104]
 62c:	sub	x1, x29, #0x10
 630:	bl	0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 634:	mov	w1, w0
 638:	mov	x0, x21
 63c:	bl	0 <_ZN4llvm3mca11Instruction8dispatchEj>
 640:	ldr	w8, [x20, #64]
 644:	ldr	x2, [sp]
 648:	ldr	w3, [sp, #8]
 64c:	sub	x1, x29, #0x10
 650:	cmp	w23, w8
 654:	csel	w4, w23, w8, cc  // cc = lo, ul, last
 658:	mov	x0, x20
 65c:	bl	50 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>
 660:	ldr	x0, [x20, #8]
 664:	cbz	x0, 6c4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x228>
 668:	ldr	x8, [x0]
 66c:	sub	x1, x29, #0x10
 670:	ldr	x8, [x8, #16]
 674:	blr	x8
 678:	tbz	w0, #0, 6c4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x228>
 67c:	ldr	x0, [x20, #8]
 680:	sub	x1, x29, #0x10
 684:	ldr	x8, [x0]
 688:	ldr	x9, [x8, #48]
 68c:	mov	x8, x19
 690:	blr	x9
 694:	ldr	x0, [sp]
 698:	mov	x8, sp
 69c:	add	x8, x8, #0x10
 6a0:	cmp	x0, x8
 6a4:	b.eq	6ac <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x210>  // b.none
 6a8:	bl	0 <free>
 6ac:	ldp	x20, x19, [sp, #96]
 6b0:	ldp	x22, x21, [sp, #80]
 6b4:	ldp	x24, x23, [sp, #64]
 6b8:	ldp	x29, x30, [sp, #48]
 6bc:	add	sp, sp, #0x70
 6c0:	ret
 6c4:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6c8:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6cc:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6d0:	add	x0, x0, #0x0
 6d4:	add	x1, x1, #0x0
 6d8:	add	x3, x3, #0x0
 6dc:	mov	w2, #0x47                  	// #71
 6e0:	bl	0 <__assert_fail>
 6e4:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6e8:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6ec:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6f0:	add	x0, x0, #0x0
 6f4:	add	x1, x1, #0x0
 6f8:	add	x3, x3, #0x0
 6fc:	mov	w2, #0x4f                  	// #79
 700:	bl	0 <__assert_fail>
 704:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 708:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 70c:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 710:	add	x0, x0, #0x0
 714:	add	x1, x1, #0x0
 718:	add	x3, x3, #0x0
 71c:	mov	w2, #0x43                  	// #67
 720:	bl	0 <__assert_fail>
 724:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 728:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 72c:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 730:	add	x0, x0, #0x0
 734:	add	x1, x1, #0x0
 738:	add	x3, x3, #0x0
 73c:	mov	w2, #0x63                  	// #99
 740:	bl	0 <__assert_fail>
 744:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 748:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 74c:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 750:	add	x0, x0, #0x0
 754:	add	x1, x1, #0x0
 758:	add	x3, x3, #0x0
 75c:	mov	w2, #0x64                  	// #100
 760:	bl	0 <__assert_fail>
 764:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 768:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 76c:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 770:	add	x0, x0, #0x0
 774:	add	x1, x1, #0x0
 778:	add	x3, x3, #0x0
 77c:	mov	w2, #0x54                  	// #84
 780:	bl	0 <__assert_fail>
 784:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 788:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 78c:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 790:	add	x0, x0, #0x0
 794:	add	x1, x1, #0x0
 798:	add	x3, x3, #0x0
 79c:	mov	w2, #0x59                  	// #89
 7a0:	bl	0 <__assert_fail>

00000000000007a4 <_ZN4llvm3mca13DispatchStage10cycleStartEv>:
 7a4:	sub	sp, sp, #0x70
 7a8:	stp	x29, x30, [sp, #48]
 7ac:	str	x23, [sp, #64]
 7b0:	stp	x22, x21, [sp, #80]
 7b4:	stp	x20, x19, [sp, #96]
 7b8:	add	x29, sp, #0x30
 7bc:	mov	x20, x0
 7c0:	ldr	x0, [x0, #112]
 7c4:	mov	x19, x8
 7c8:	bl	0 <_ZN4llvm3mca12RegisterFile10cycleStartEv>
 7cc:	ldr	w9, [x20, #72]
 7d0:	ldr	w8, [x20, #64]
 7d4:	cbz	w9, 834 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x90>
 7d8:	subs	w10, w8, w9
 7dc:	ldr	x11, [x20, #88]
 7e0:	csel	w10, wzr, w10, cc  // cc = lo, ul, last
 7e4:	sub	w21, w8, w10
 7e8:	sub	w8, w9, w21
 7ec:	stp	w10, w8, [x20, #68]
 7f0:	cbz	x11, 8dc <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x138>
 7f4:	ldr	x8, [x20, #112]
 7f8:	mov	x9, sp
 7fc:	add	x1, x9, #0x10
 800:	ldr	w22, [x8, #24]
 804:	adrp	x8, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 808:	ldr	d0, [x8]
 80c:	str	x1, [sp]
 810:	cmp	w22, #0x9
 814:	str	d0, [sp, #8]
 818:	b.cc	844 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xa0>  // b.lo, b.ul, b.last
 81c:	mov	x0, sp
 820:	mov	w3, #0x4                   	// #4
 824:	mov	x2, x22
 828:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 82c:	ldr	w8, [sp, #12]
 830:	b	848 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xa4>
 834:	str	w8, [x20, #68]
 838:	mov	w8, #0x1                   	// #1
 83c:	str	x8, [x19]
 840:	b	8c4 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x120>
 844:	mov	w8, #0x8                   	// #8
 848:	cmp	x8, x22
 84c:	b.cc	8fc <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x158>  // b.lo, b.ul, b.last
 850:	ldr	x2, [sp]
 854:	add	x23, x20, #0x50
 858:	str	w22, [sp, #8]
 85c:	cbz	w22, 880 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xdc>
 860:	lsl	x8, x22, #2
 864:	mov	x0, x2
 868:	mov	w1, wzr
 86c:	mov	x2, x8
 870:	bl	0 <memset>
 874:	ldr	x2, [sp]
 878:	ldr	w3, [sp, #8]
 87c:	b	884 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xe0>
 880:	mov	x3, xzr
 884:	mov	x0, x20
 888:	mov	x1, x23
 88c:	mov	w4, w21
 890:	bl	50 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>
 894:	ldr	w8, [x20, #72]
 898:	cbnz	w8, 8a4 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x100>
 89c:	str	wzr, [x20, #80]
 8a0:	str	xzr, [x20, #88]
 8a4:	ldr	x0, [sp]
 8a8:	mov	x9, sp
 8ac:	add	x9, x9, #0x10
 8b0:	mov	w8, #0x1                   	// #1
 8b4:	cmp	x0, x9
 8b8:	str	x8, [x19]
 8bc:	b.eq	8c4 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x120>  // b.none
 8c0:	bl	0 <free>
 8c4:	ldp	x20, x19, [sp, #96]
 8c8:	ldp	x22, x21, [sp, #80]
 8cc:	ldr	x23, [sp, #64]
 8d0:	ldp	x29, x30, [sp, #48]
 8d4:	add	sp, sp, #0x70
 8d8:	ret
 8dc:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 8e0:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 8e4:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 8e8:	add	x0, x0, #0x0
 8ec:	add	x1, x1, #0x0
 8f0:	add	x3, x3, #0x0
 8f4:	mov	w2, #0x95                  	// #149
 8f8:	bl	0 <__assert_fail>
 8fc:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 900:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 904:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 908:	add	x0, x0, #0x0
 90c:	add	x1, x1, #0x0
 910:	add	x3, x3, #0x0
 914:	mov	w2, #0x43                  	// #67
 918:	bl	0 <__assert_fail>

000000000000091c <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE>:
 91c:	sub	sp, sp, #0x40
 920:	stp	x29, x30, [sp, #16]
 924:	stp	x22, x21, [sp, #32]
 928:	stp	x20, x19, [sp, #48]
 92c:	add	x29, sp, #0x10
 930:	ldr	x8, [x1, #8]
 934:	ldp	w10, w11, [x0, #64]
 938:	ldr	x9, [x8]
 93c:	ldr	w8, [x9, #316]
 940:	cmp	w10, w8
 944:	csel	w12, w10, w8, cc  // cc = lo, ul, last
 948:	cmp	w12, w11
 94c:	b.hi	968 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x4c>  // b.pmore
 950:	mov	x19, x1
 954:	mov	x20, x0
 958:	cmp	w11, w10
 95c:	b.eq	970 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x54>  // b.none
 960:	ldrb	w9, [x9, #327]
 964:	cbz	w9, 970 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x54>
 968:	mov	w0, wzr
 96c:	b	a18 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0xfc>
 970:	ldr	x9, [x20, #104]
 974:	ldp	w10, w9, [x9, #16]
 978:	cmp	w10, w8
 97c:	csel	w8, w10, w8, cc  // cc = lo, ul, last
 980:	cmp	w8, #0x0
 984:	csinc	w8, w8, wzr, ne  // ne = any
 988:	cmp	w9, w8
 98c:	b.cs	9dc <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0xc0>  // b.hs, b.nlast
 990:	mov	w8, #0x2                   	// #2
 994:	str	w8, [sp]
 998:	str	x19, [sp, #8]
 99c:	ldr	x21, [x20, #40]
 9a0:	add	x22, x20, #0x18
 9a4:	cmp	x21, x22
 9a8:	b.eq	9d4 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0xb8>  // b.none
 9ac:	ldr	x0, [x21, #32]
 9b0:	mov	x1, sp
 9b4:	ldr	x8, [x0]
 9b8:	ldr	x8, [x8, #24]
 9bc:	blr	x8
 9c0:	mov	x0, x21
 9c4:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 9c8:	mov	x21, x0
 9cc:	cmp	x0, x22
 9d0:	b.ne	9ac <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x90>  // b.any
 9d4:	mov	w21, wzr
 9d8:	b	9e0 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0xc4>
 9dc:	mov	w21, #0x1                   	// #1
 9e0:	mov	x0, x20
 9e4:	mov	x1, x19
 9e8:	bl	190 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE>
 9ec:	ldr	x8, [x20, #8]
 9f0:	and	w20, w21, w0
 9f4:	cbz	x8, a10 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0xf4>
 9f8:	ldr	x9, [x8]
 9fc:	mov	x0, x8
 a00:	mov	x1, x19
 a04:	ldr	x9, [x9, #16]
 a08:	blr	x9
 a0c:	b	a14 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0xf8>
 a10:	mov	w0, wzr
 a14:	and	w0, w20, w0
 a18:	ldp	x20, x19, [sp, #48]
 a1c:	ldp	x22, x21, [sp, #32]
 a20:	ldp	x29, x30, [sp, #16]
 a24:	add	sp, sp, #0x40
 a28:	ret

0000000000000a2c <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE>:
 a2c:	sub	sp, sp, #0x50
 a30:	stp	x29, x30, [sp, #16]
 a34:	str	x23, [sp, #32]
 a38:	stp	x22, x21, [sp, #48]
 a3c:	stp	x20, x19, [sp, #64]
 a40:	add	x29, sp, #0x10
 a44:	ldr	x9, [x1, #8]
 a48:	ldr	x10, [x0, #104]
 a4c:	mov	x20, x1
 a50:	mov	x19, x0
 a54:	ldr	x9, [x9]
 a58:	ldp	w11, w10, [x10, #16]
 a5c:	mov	x21, x8
 a60:	ldr	w9, [x9, #316]
 a64:	cmp	w11, w9
 a68:	csel	w9, w11, w9, cc  // cc = lo, ul, last
 a6c:	cmp	w9, #0x0
 a70:	csinc	w9, w9, wzr, ne  // ne = any
 a74:	cmp	w10, w9
 a78:	b.cs	ac8 <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0x9c>  // b.hs, b.nlast
 a7c:	mov	w8, #0x2                   	// #2
 a80:	str	w8, [sp]
 a84:	str	x20, [sp, #8]
 a88:	ldr	x22, [x19, #40]
 a8c:	add	x23, x19, #0x18
 a90:	cmp	x22, x23
 a94:	b.eq	ac0 <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0x94>  // b.none
 a98:	ldr	x0, [x22, #32]
 a9c:	mov	x1, sp
 aa0:	ldr	x8, [x0]
 aa4:	ldr	x8, [x8, #24]
 aa8:	blr	x8
 aac:	mov	x0, x22
 ab0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 ab4:	mov	x22, x0
 ab8:	cmp	x0, x23
 abc:	b.ne	a98 <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0x6c>  // b.any
 ac0:	mov	w22, wzr
 ac4:	b	acc <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0xa0>
 ac8:	mov	w22, #0x1                   	// #1
 acc:	mov	x0, x19
 ad0:	mov	x1, x20
 ad4:	bl	190 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE>
 ad8:	ldr	x8, [x19, #8]
 adc:	cbz	x8, b2c <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0x100>
 ae0:	ldr	x9, [x8]
 ae4:	and	w22, w22, w0
 ae8:	mov	x0, x8
 aec:	mov	x1, x20
 af0:	ldr	x9, [x9, #16]
 af4:	blr	x9
 af8:	cmp	w22, #0x1
 afc:	b.ne	b2c <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0x100>  // b.any
 b00:	tbz	w0, #0, b2c <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0x100>
 b04:	ldp	x1, x2, [x20]
 b08:	mov	x8, x21
 b0c:	mov	x0, x19
 b10:	bl	49c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE>
 b14:	ldp	x20, x19, [sp, #64]
 b18:	ldp	x22, x21, [sp, #48]
 b1c:	ldr	x23, [sp, #32]
 b20:	ldp	x29, x30, [sp, #16]
 b24:	add	sp, sp, #0x50
 b28:	ret
 b2c:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 b30:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 b34:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 b38:	add	x0, x0, #0x0
 b3c:	add	x1, x1, #0x0
 b40:	add	x3, x3, #0x0
 b44:	mov	w2, #0xb0                  	// #176
 b48:	bl	0 <__assert_fail>

0000000000000b4c <_ZNK4llvm3mca13DispatchStage4dumpEv>:
 b4c:	stp	x29, x30, [sp, #-32]!
 b50:	str	x19, [sp, #16]
 b54:	mov	x29, sp
 b58:	mov	x19, x0
 b5c:	ldr	x0, [x0, #112]
 b60:	bl	0 <_ZNK4llvm3mca12RegisterFile4dumpEv>
 b64:	ldr	x0, [x19, #104]
 b68:	ldr	x19, [sp, #16]
 b6c:	ldp	x29, x30, [sp], #32
 b70:	b	0 <_ZNK4llvm3mca17RetireControlUnit4dumpEv>

Disassembly of section .text._ZN4llvm3mca13DispatchStageD0Ev:

0000000000000000 <_ZN4llvm3mca13DispatchStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca13DispatchStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca13DispatchStage17hasWorkToCompleteEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

EntryStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>:
   0:	ldr	x8, [x0, #72]
   4:	cmp	x8, #0x0
   8:	cset	w0, ne  // ne = any
   c:	ret

0000000000000010 <_ZNK4llvm3mca10EntryStage11isAvailableERKNS0_7InstRefE>:
  10:	ldr	x8, [x0, #72]
  14:	cbz	x8, 34 <_ZNK4llvm3mca10EntryStage11isAvailableERKNS0_7InstRefE+0x24>
  18:	ldr	x8, [x0, #8]
  1c:	cbz	x8, 34 <_ZNK4llvm3mca10EntryStage11isAvailableERKNS0_7InstRefE+0x24>
  20:	ldr	x9, [x8]
  24:	add	x1, x0, #0x40
  28:	mov	x0, x8
  2c:	ldr	x2, [x9, #16]
  30:	br	x2
  34:	mov	w0, wzr
  38:	ret

000000000000003c <_ZN4llvm3mca10EntryStage18getNextInstructionEv>:
  3c:	str	d8, [sp, #-64]!
  40:	stp	x29, x30, [sp, #16]
  44:	stp	x22, x21, [sp, #32]
  48:	stp	x20, x19, [sp, #48]
  4c:	mov	x29, sp
  50:	ldr	x8, [x0, #72]
  54:	cbnz	x8, 198 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x15c>
  58:	ldr	x8, [x0, #224]
  5c:	mov	x19, x0
  60:	ldp	w21, w10, [x8, #16]
  64:	ldr	x9, [x8, #8]
  68:	mul	x10, x9, x10
  6c:	cmp	x10, x21
  70:	b.ls	144 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x108>  // b.plast
  74:	ldr	x8, [x8]
  78:	udiv	x10, x21, x9
  7c:	msub	x9, x10, x9, x21
  80:	mov	w0, #0x350                 	// #848
  84:	ldr	x22, [x8, x9, lsl #3]
  88:	bl	0 <_Znwm>
  8c:	adrp	x11, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
  90:	ldr	x8, [x22]
  94:	ldrb	w9, [x22, #8]
  98:	ldr	d8, [x11]
  9c:	mov	x20, x0
  a0:	add	x10, x0, #0x20
  a4:	strb	w9, [x0, #8]
  a8:	str	x8, [x0]
  ac:	str	x10, [x0, #16]!
  b0:	str	d8, [x20, #24]
  b4:	ldr	w8, [x22, #24]
  b8:	cbz	w8, c4 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x88>
  bc:	add	x1, x22, #0x10
  c0:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
  c4:	add	x8, x20, #0x250
  c8:	str	x8, [x20, #576]
  cc:	str	d8, [x20, #584]
  d0:	ldr	w8, [x22, #584]
  d4:	cbz	w8, e4 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0xa8>
  d8:	add	x0, x20, #0x240
  dc:	add	x1, x22, #0x240
  e0:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
  e4:	add	x9, x22, #0x310
  e8:	ldp	q0, q1, [x22, #784]
  ec:	ldur	q2, [x9, #41]
  f0:	ldr	q3, [x22, #816]
  f4:	add	x8, x20, #0x310
  f8:	stp	q0, q1, [x20, #784]
  fc:	stur	q2, [x8, #41]
 100:	str	q3, [x20, #816]
 104:	ldp	w8, w9, [x19, #88]
 108:	str	w21, [x19, #64]
 10c:	add	x21, x19, #0x50
 110:	str	x20, [x19, #72]
 114:	cmp	w8, w9
 118:	b.cs	158 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x11c>  // b.hs, b.nlast
 11c:	ldr	x10, [x21]
 120:	cmp	w8, w9
 124:	str	x20, [x10, w8, uxtw #3]
 128:	b.cs	178 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x13c>  // b.hs, b.nlast
 12c:	ldr	x9, [x19, #224]
 130:	add	w8, w8, #0x1
 134:	str	w8, [x19, #88]
 138:	ldr	w8, [x9, #16]
 13c:	add	w8, w8, #0x1
 140:	str	w8, [x9, #16]
 144:	ldp	x20, x19, [sp, #48]
 148:	ldp	x22, x21, [sp, #32]
 14c:	ldp	x29, x30, [sp, #16]
 150:	ldr	d8, [sp], #64
 154:	ret
 158:	mov	x0, x21
 15c:	mov	x1, xzr
 160:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 164:	ldp	w8, w9, [x19, #88]
 168:	ldr	x10, [x21]
 16c:	cmp	w8, w9
 170:	str	x20, [x10, w8, uxtw #3]
 174:	b.cc	12c <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0xf0>  // b.lo, b.ul, b.last
 178:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 17c:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 180:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 184:	add	x0, x0, #0x0
 188:	add	x1, x1, #0x0
 18c:	add	x3, x3, #0x0
 190:	mov	w2, #0x43                  	// #67
 194:	bl	0 <__assert_fail>
 198:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 19c:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 1a0:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 1a4:	add	x0, x0, #0x0
 1a8:	add	x1, x1, #0x0
 1ac:	add	x3, x3, #0x0
 1b0:	mov	w2, #0x20                  	// #32
 1b4:	bl	0 <__assert_fail>

00000000000001b8 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE>:
 1b8:	stp	x29, x30, [sp, #-48]!
 1bc:	str	x21, [sp, #16]
 1c0:	stp	x20, x19, [sp, #32]
 1c4:	mov	x29, sp
 1c8:	ldr	x9, [x0, #72]
 1cc:	cbz	x9, 284 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0xcc>
 1d0:	mov	x20, x0
 1d4:	ldr	x0, [x0, #8]
 1d8:	cbz	x0, 264 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0xac>
 1dc:	mov	x19, x8
 1e0:	ldr	x8, [x0]
 1e4:	add	x21, x20, #0x40
 1e8:	mov	x1, x21
 1ec:	ldr	x8, [x8, #16]
 1f0:	blr	x8
 1f4:	tbz	w0, #0, 264 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0xac>
 1f8:	ldr	x0, [x20, #8]
 1fc:	mov	x1, x21
 200:	ldr	x8, [x0]
 204:	ldr	x9, [x8, #48]
 208:	mov	x8, x19
 20c:	blr	x9
 210:	ldr	x8, [x19]
 214:	tst	x8, #0xfffffffffffffffe
 218:	and	x9, x8, #0xfffffffffffffffe
 21c:	cset	w8, ne  // ne = any
 220:	orr	x8, x9, x8
 224:	str	x8, [x19]
 228:	cbz	x9, 23c <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0x84>
 22c:	ldp	x20, x19, [sp, #32]
 230:	ldr	x21, [sp, #16]
 234:	ldp	x29, x30, [sp], #48
 238:	ret
 23c:	cbnz	x8, 2a4 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0xec>
 240:	mov	x0, x20
 244:	str	xzr, [x20, #72]
 248:	bl	3c <_ZN4llvm3mca10EntryStage18getNextInstructionEv>
 24c:	mov	w8, #0x1                   	// #1
 250:	str	x8, [x19]
 254:	ldp	x20, x19, [sp, #32]
 258:	ldr	x21, [sp, #16]
 25c:	ldp	x29, x30, [sp], #48
 260:	ret
 264:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 268:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 26c:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 270:	add	x0, x0, #0x0
 274:	add	x1, x1, #0x0
 278:	add	x3, x3, #0x0
 27c:	mov	w2, #0x47                  	// #71
 280:	bl	0 <__assert_fail>
 284:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 288:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 28c:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 290:	add	x0, x0, #0x0
 294:	add	x1, x1, #0x0
 298:	add	x3, x3, #0x0
 29c:	mov	w2, #0x2b                  	// #43
 2a0:	bl	0 <__assert_fail>
 2a4:	mov	x0, x19
 2a8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

00000000000002ac <_ZN4llvm3mca10EntryStage10cycleStartEv>:
 2ac:	stp	x29, x30, [sp, #-32]!
 2b0:	str	x19, [sp, #16]
 2b4:	mov	x29, sp
 2b8:	ldr	x9, [x0, #72]
 2bc:	mov	x19, x8
 2c0:	cbnz	x9, 2c8 <_ZN4llvm3mca10EntryStage10cycleStartEv+0x1c>
 2c4:	bl	3c <_ZN4llvm3mca10EntryStage18getNextInstructionEv>
 2c8:	mov	w8, #0x1                   	// #1
 2cc:	str	x8, [x19]
 2d0:	ldr	x19, [sp, #16]
 2d4:	ldp	x29, x30, [sp], #32
 2d8:	ret

00000000000002dc <_ZN4llvm3mca10EntryStage8cycleEndEv>:
 2dc:	stp	x29, x30, [sp, #-32]!
 2e0:	stp	x20, x19, [sp, #16]
 2e4:	mov	x29, sp
 2e8:	ldr	w10, [x0, #232]
 2ec:	ldr	w9, [x0, #88]
 2f0:	cmp	w9, w10
 2f4:	b.ls	420 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x144>  // b.plast
 2f8:	mov	x19, x0
 2fc:	add	x0, x0, #0x50
 300:	ldr	x1, [x0]
 304:	mov	x20, x8
 308:	add	x2, x1, x10, lsl #3
 30c:	add	x8, x1, x9, lsl #3
 310:	sub	x10, x8, x2
 314:	cmp	x10, #0x20
 318:	b.lt	378 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x9c>  // b.tstop
 31c:	lsr	x10, x10, #5
 320:	add	x10, x10, #0x1
 324:	ldr	x11, [x2]
 328:	ldr	w11, [x11, #784]
 32c:	cmp	w11, #0x6
 330:	b.ne	3e8 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>  // b.any
 334:	ldr	x11, [x2, #8]
 338:	ldr	w11, [x11, #784]
 33c:	cmp	w11, #0x6
 340:	b.ne	3d4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xf8>  // b.any
 344:	ldr	x11, [x2, #16]
 348:	ldr	w11, [x11, #784]
 34c:	cmp	w11, #0x6
 350:	b.ne	3dc <_ZN4llvm3mca10EntryStage8cycleEndEv+0x100>  // b.any
 354:	ldr	x11, [x2, #24]
 358:	ldr	w11, [x11, #784]
 35c:	cmp	w11, #0x6
 360:	b.ne	3e4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x108>  // b.any
 364:	sub	x10, x10, #0x1
 368:	cmp	x10, #0x1
 36c:	add	x2, x2, #0x20
 370:	b.gt	324 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x48>
 374:	sub	x10, x8, x2
 378:	asr	x10, x10, #3
 37c:	cmp	x10, #0x1
 380:	b.eq	3bc <_ZN4llvm3mca10EntryStage8cycleEndEv+0xe0>  // b.none
 384:	cmp	x10, #0x2
 388:	b.eq	3a8 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xcc>  // b.none
 38c:	cmp	x10, #0x3
 390:	b.ne	3cc <_ZN4llvm3mca10EntryStage8cycleEndEv+0xf0>  // b.any
 394:	ldr	x10, [x2]
 398:	ldr	w10, [x10, #784]
 39c:	cmp	w10, #0x6
 3a0:	b.ne	3e8 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>  // b.any
 3a4:	add	x2, x2, #0x8
 3a8:	ldr	x10, [x2]
 3ac:	ldr	w10, [x10, #784]
 3b0:	cmp	w10, #0x6
 3b4:	b.ne	3e8 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>  // b.any
 3b8:	add	x2, x2, #0x8
 3bc:	ldr	x10, [x2]
 3c0:	ldr	w10, [x10, #784]
 3c4:	cmp	w10, #0x6
 3c8:	b.ne	3e8 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>  // b.any
 3cc:	mov	x2, x8
 3d0:	b	3e8 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>
 3d4:	add	x2, x2, #0x8
 3d8:	b	3e8 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>
 3dc:	add	x2, x2, #0x10
 3e0:	b	3e8 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>
 3e4:	add	x2, x2, #0x18
 3e8:	sub	x8, x2, x1
 3ec:	lsr	x10, x8, #3
 3f0:	lsr	x8, x8, #2
 3f4:	and	x8, x8, #0xfffffffe
 3f8:	cmp	x8, x9
 3fc:	str	w10, [x19, #232]
 400:	b.cc	40c <_ZN4llvm3mca10EntryStage8cycleEndEv+0x130>  // b.lo, b.ul, b.last
 404:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 408:	str	wzr, [x19, #232]
 40c:	mov	w8, #0x1                   	// #1
 410:	str	x8, [x20]
 414:	ldp	x20, x19, [sp, #16]
 418:	ldp	x29, x30, [sp], #32
 41c:	ret
 420:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 424:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 428:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 42c:	add	x0, x0, #0x0
 430:	add	x1, x1, #0x0
 434:	add	x3, x3, #0x0
 438:	mov	w2, #0x95                  	// #149
 43c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldr	x8, [x0]
  20:	cmp	x8, x1
  24:	b.hi	1f0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x1f0>  // b.pmore
  28:	mov	x20, x1
  2c:	mov	x21, x2
  30:	cmp	x1, x2
  34:	b.hi	210 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x210>  // b.pmore
  38:	ldr	w9, [x0, #8]
  3c:	mov	x19, x0
  40:	add	x10, x8, x9, lsl #3
  44:	subs	x10, x10, x21
  48:	b.cc	230 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x230>  // b.lo, b.ul, b.last
  4c:	cmp	x10, #0x1
  50:	b.lt	114 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x114>  // b.tstop
  54:	lsr	x25, x10, #3
  58:	mov	x24, x20
  5c:	b	78 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x78>
  60:	mov	x0, x22
  64:	bl	0 <_ZdlPv>
  68:	add	x21, x21, #0x8
  6c:	subs	x25, x25, #0x1
  70:	add	x24, x24, #0x8
  74:	b.le	fc <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xfc>
  78:	ldr	x8, [x21]
  7c:	str	xzr, [x21]
  80:	ldr	x22, [x24]
  84:	str	x8, [x24]
  88:	cbz	x22, 68 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x68>
  8c:	ldr	x0, [x22, #576]
  90:	add	x8, x22, #0x250
  94:	cmp	x0, x8
  98:	b.eq	a0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xa0>  // b.none
  9c:	bl	0 <free>
  a0:	mov	x26, x22
  a4:	ldr	x23, [x26, #16]!
  a8:	ldr	w8, [x26, #8]
  ac:	cbz	w8, e4 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xe4>
  b0:	add	x8, x8, x8, lsl #4
  b4:	lsl	x27, x8, #3
  b8:	b	c4 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xc4>
  bc:	subs	x27, x27, #0x88
  c0:	b.eq	e0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xe0>  // b.none
  c4:	add	x8, x23, x27
  c8:	ldur	x0, [x8, #-80]
  cc:	sub	x8, x8, #0x40
  d0:	cmp	x8, x0
  d4:	b.eq	bc <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xbc>  // b.none
  d8:	bl	0 <free>
  dc:	b	bc <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xbc>
  e0:	ldr	x23, [x26]
  e4:	add	x8, x26, #0x10
  e8:	cmp	x23, x8
  ec:	b.eq	60 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x60>  // b.none
  f0:	mov	x0, x23
  f4:	bl	0 <free>
  f8:	b	60 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x60>
  fc:	ldr	x8, [x19]
 100:	ldr	w9, [x19, #8]
 104:	add	x23, x8, x9, lsl #3
 108:	cmp	x23, x24
 10c:	b.ne	13c <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x13c>  // b.any
 110:	b	1b8 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x1b8>
 114:	mov	x24, x20
 118:	add	x23, x8, x9, lsl #3
 11c:	cmp	x23, x24
 120:	b.ne	13c <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x13c>  // b.any
 124:	b	1b8 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x1b8>
 128:	mov	x0, x21
 12c:	bl	0 <_ZdlPv>
 130:	cmp	x23, x24
 134:	str	xzr, [x23]
 138:	b.eq	1b4 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x1b4>  // b.none
 13c:	ldr	x21, [x23, #-8]!
 140:	cbz	x21, 130 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x130>
 144:	ldr	x0, [x21, #576]
 148:	add	x8, x21, #0x250
 14c:	cmp	x0, x8
 150:	b.eq	158 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x158>  // b.none
 154:	bl	0 <free>
 158:	mov	x25, x21
 15c:	ldr	x22, [x25, #16]!
 160:	ldr	w8, [x25, #8]
 164:	cbz	w8, 19c <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x19c>
 168:	add	x8, x8, x8, lsl #4
 16c:	lsl	x26, x8, #3
 170:	b	17c <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x17c>
 174:	subs	x26, x26, #0x88
 178:	b.eq	198 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x198>  // b.none
 17c:	add	x8, x22, x26
 180:	ldur	x0, [x8, #-80]
 184:	sub	x8, x8, #0x40
 188:	cmp	x8, x0
 18c:	b.eq	174 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x174>  // b.none
 190:	bl	0 <free>
 194:	b	174 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x174>
 198:	ldr	x22, [x25]
 19c:	add	x8, x25, #0x10
 1a0:	cmp	x22, x8
 1a4:	b.eq	128 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x128>  // b.none
 1a8:	mov	x0, x22
 1ac:	bl	0 <free>
 1b0:	b	128 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x128>
 1b4:	ldr	x8, [x19]
 1b8:	ldr	w9, [x19, #12]
 1bc:	sub	x8, x24, x8
 1c0:	cmp	x9, x8, asr #3
 1c4:	b.cc	250 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x250>  // b.lo, b.ul, b.last
 1c8:	lsr	x8, x8, #3
 1cc:	str	w8, [x19, #8]
 1d0:	mov	x0, x20
 1d4:	ldp	x20, x19, [sp, #80]
 1d8:	ldp	x22, x21, [sp, #64]
 1dc:	ldp	x24, x23, [sp, #48]
 1e0:	ldp	x26, x25, [sp, #32]
 1e4:	ldr	x27, [sp, #16]
 1e8:	ldp	x29, x30, [sp], #96
 1ec:	ret
 1f0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 1f4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 1f8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 1fc:	add	x0, x0, #0x0
 200:	add	x1, x1, #0x0
 204:	add	x3, x3, #0x0
 208:	mov	w2, #0x1c6                 	// #454
 20c:	bl	0 <__assert_fail>
 210:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 214:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 218:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 21c:	add	x0, x0, #0x0
 220:	add	x1, x1, #0x0
 224:	add	x3, x3, #0x0
 228:	mov	w2, #0x1c7                 	// #455
 22c:	bl	0 <__assert_fail>
 230:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 234:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 238:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 23c:	add	x0, x0, #0x0
 240:	add	x1, x1, #0x0
 244:	add	x3, x3, #0x0
 248:	mov	w2, #0x1c8                 	// #456
 24c:	bl	0 <__assert_fail>
 250:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 254:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 258:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 25c:	add	x0, x0, #0x0
 260:	add	x1, x1, #0x0
 264:	add	x3, x3, #0x0
 268:	mov	w2, #0x43                  	// #67
 26c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca10EntryStageD2Ev:

0000000000000000 <_ZN4llvm3mca10EntryStageD2Ev>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	adrp	x8, 0 <_ZN4llvm3mca10EntryStageD2Ev>
  1c:	ldr	x8, [x8]
  20:	mov	x23, x0
  24:	mov	x19, x0
  28:	add	x8, x8, #0x10
  2c:	str	x8, [x0]
  30:	ldr	x20, [x23, #80]!
  34:	ldr	w8, [x0, #88]
  38:	cbz	w8, d4 <_ZN4llvm3mca10EntryStageD2Ev+0xd4>
  3c:	add	x24, x20, x8, lsl #3
  40:	b	58 <_ZN4llvm3mca10EntryStageD2Ev+0x58>
  44:	mov	x0, x21
  48:	bl	0 <_ZdlPv>
  4c:	cmp	x24, x20
  50:	str	xzr, [x24]
  54:	b.eq	d0 <_ZN4llvm3mca10EntryStageD2Ev+0xd0>  // b.none
  58:	ldr	x21, [x24, #-8]!
  5c:	cbz	x21, 4c <_ZN4llvm3mca10EntryStageD2Ev+0x4c>
  60:	ldr	x0, [x21, #576]
  64:	add	x8, x21, #0x250
  68:	cmp	x0, x8
  6c:	b.eq	74 <_ZN4llvm3mca10EntryStageD2Ev+0x74>  // b.none
  70:	bl	0 <free>
  74:	mov	x25, x21
  78:	ldr	x22, [x25, #16]!
  7c:	ldr	w8, [x25, #8]
  80:	cbz	w8, b8 <_ZN4llvm3mca10EntryStageD2Ev+0xb8>
  84:	add	x8, x8, x8, lsl #4
  88:	lsl	x26, x8, #3
  8c:	b	98 <_ZN4llvm3mca10EntryStageD2Ev+0x98>
  90:	subs	x26, x26, #0x88
  94:	b.eq	b4 <_ZN4llvm3mca10EntryStageD2Ev+0xb4>  // b.none
  98:	add	x8, x22, x26
  9c:	ldur	x0, [x8, #-80]
  a0:	sub	x8, x8, #0x40
  a4:	cmp	x8, x0
  a8:	b.eq	90 <_ZN4llvm3mca10EntryStageD2Ev+0x90>  // b.none
  ac:	bl	0 <free>
  b0:	b	90 <_ZN4llvm3mca10EntryStageD2Ev+0x90>
  b4:	ldr	x22, [x25]
  b8:	add	x8, x25, #0x10
  bc:	cmp	x22, x8
  c0:	b.eq	44 <_ZN4llvm3mca10EntryStageD2Ev+0x44>  // b.none
  c4:	mov	x0, x22
  c8:	bl	0 <free>
  cc:	b	44 <_ZN4llvm3mca10EntryStageD2Ev+0x44>
  d0:	ldr	x20, [x23]
  d4:	add	x8, x23, #0x10
  d8:	cmp	x20, x8
  dc:	b.eq	e8 <_ZN4llvm3mca10EntryStageD2Ev+0xe8>  // b.none
  e0:	mov	x0, x20
  e4:	bl	0 <free>
  e8:	mov	x0, x19
  ec:	ldp	x20, x19, [sp, #64]
  f0:	ldp	x22, x21, [sp, #48]
  f4:	ldp	x24, x23, [sp, #32]
  f8:	ldp	x26, x25, [sp, #16]
  fc:	ldp	x29, x30, [sp], #80
 100:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca10EntryStageD0Ev:

0000000000000000 <_ZN4llvm3mca10EntryStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca10EntryStageD0Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>:
   0:	str	d8, [sp, #-80]!
   4:	stp	x29, x30, [sp, #8]
   8:	str	x25, [sp, #24]
   c:	stp	x24, x23, [sp, #32]
  10:	stp	x22, x21, [sp, #48]
  14:	stp	x20, x19, [sp, #64]
  18:	mov	x29, sp
  1c:	mov	x19, x0
  20:	cmp	x0, x1
  24:	b.eq	240 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x240>  // b.none
  28:	ldr	w20, [x1, #8]
  2c:	ldr	w22, [x19, #8]
  30:	mov	x21, x1
  34:	cmp	w22, w20
  38:	b.cs	80 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x80>  // b.hs, b.nlast
  3c:	ldr	w8, [x19, #12]
  40:	cmp	w8, w20
  44:	b.cs	e8 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0xe8>  // b.hs, b.nlast
  48:	cbz	w22, 134 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x134>
  4c:	ldr	x23, [x19]
  50:	add	x8, x22, x22, lsl #4
  54:	lsl	x22, x8, #3
  58:	b	64 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x64>
  5c:	subs	x22, x22, #0x88
  60:	b.eq	134 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x134>  // b.none
  64:	add	x8, x23, x22
  68:	ldur	x0, [x8, #-80]
  6c:	sub	x8, x8, #0x40
  70:	cmp	x8, x0
  74:	b.eq	5c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x5c>  // b.none
  78:	bl	0 <free>
  7c:	b	5c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x5c>
  80:	ldr	x23, [x19]
  84:	cbz	w20, 1e0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x1e0>
  88:	ldr	x21, [x21]
  8c:	add	x22, x20, #0x1
  90:	ldp	q2, q0, [x21, #16]
  94:	ldr	x8, [x21, #48]
  98:	ldr	q1, [x21]
  9c:	add	x0, x23, #0x38
  a0:	add	x1, x21, #0x38
  a4:	str	x8, [x23, #48]
  a8:	stp	q2, q0, [x23, #16]
  ac:	str	q1, [x23]
  b0:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
  b4:	sub	x22, x22, #0x1
  b8:	add	x23, x23, #0x88
  bc:	cmp	x22, #0x1
  c0:	add	x21, x21, #0x88
  c4:	b.gt	90 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x90>
  c8:	mov	x21, x23
  cc:	ldr	x23, [x19]
  d0:	ldr	w22, [x19, #8]
  d4:	mov	w8, #0x88                  	// #136
  d8:	madd	x8, x22, x8, x23
  dc:	cmp	x8, x21
  e0:	b.ne	204 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x204>  // b.any
  e4:	b	230 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x230>
  e8:	cbz	w22, 220 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x220>
  ec:	ldr	x23, [x21]
  f0:	ldr	x24, [x19]
  f4:	add	x25, x22, #0x1
  f8:	ldp	q2, q0, [x23, #16]
  fc:	ldr	x8, [x23, #48]
 100:	ldr	q1, [x23]
 104:	add	x0, x24, #0x38
 108:	add	x1, x23, #0x38
 10c:	str	x8, [x24, #48]
 110:	stp	q2, q0, [x24, #16]
 114:	str	q1, [x24]
 118:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 11c:	sub	x25, x25, #0x1
 120:	add	x24, x24, #0x88
 124:	cmp	x25, #0x1
 128:	add	x23, x23, #0x88
 12c:	b.gt	f8 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0xf8>
 130:	b	148 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x148>
 134:	mov	x0, x19
 138:	mov	x1, x20
 13c:	str	wzr, [x19, #8]
 140:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 144:	mov	x22, xzr
 148:	ldr	w8, [x21, #8]
 14c:	cmp	x22, x8
 150:	b.eq	230 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x230>  // b.none
 154:	ldr	x9, [x21]
 158:	ldr	x11, [x19]
 15c:	adrp	x13, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 160:	add	x12, x22, x22, lsl #4
 164:	ldr	d8, [x13]
 168:	mov	w10, #0x88                  	// #136
 16c:	lsl	x12, x12, #3
 170:	madd	x23, x8, x10, x9
 174:	add	x8, x11, x12
 178:	add	x9, x9, x12
 17c:	add	x21, x8, #0x38
 180:	add	x22, x9, #0x38
 184:	b	19c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x19c>
 188:	add	x8, x24, #0x88
 18c:	add	x21, x21, #0x88
 190:	cmp	x8, x23
 194:	add	x22, x22, #0x88
 198:	b.eq	230 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x230>  // b.none
 19c:	ldur	q0, [x22, #-56]
 1a0:	ldur	q1, [x22, #-40]
 1a4:	ldur	x8, [x22, #-8]
 1a8:	ldur	q2, [x22, #-24]
 1ac:	add	x9, x21, #0x10
 1b0:	stur	q1, [x21, #-40]
 1b4:	stp	x8, x9, [x21, #-8]
 1b8:	stur	q2, [x21, #-24]
 1bc:	stur	q0, [x21, #-56]
 1c0:	str	d8, [x21, #8]
 1c4:	ldr	w8, [x22, #8]
 1c8:	sub	x24, x22, #0x38
 1cc:	cbz	w8, 188 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x188>
 1d0:	mov	x0, x21
 1d4:	mov	x1, x22
 1d8:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 1dc:	b	188 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x188>
 1e0:	mov	x21, x23
 1e4:	mov	w8, #0x88                  	// #136
 1e8:	madd	x8, x22, x8, x23
 1ec:	cmp	x8, x21
 1f0:	b.ne	204 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x204>  // b.any
 1f4:	b	230 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x230>
 1f8:	cmp	x21, x22
 1fc:	mov	x8, x22
 200:	b.eq	230 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x230>  // b.none
 204:	ldur	x0, [x8, #-80]
 208:	sub	x9, x8, #0x40
 20c:	sub	x22, x8, #0x88
 210:	cmp	x9, x0
 214:	b.eq	1f8 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x1f8>  // b.none
 218:	bl	0 <free>
 21c:	b	1f8 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x1f8>
 220:	mov	x22, xzr
 224:	ldr	w8, [x21, #8]
 228:	cmp	x22, x8
 22c:	b.ne	154 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x154>  // b.any
 230:	ldr	w8, [x19, #12]
 234:	cmp	w8, w20
 238:	b.cc	260 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x260>  // b.lo, b.ul, b.last
 23c:	str	w20, [x19, #8]
 240:	mov	x0, x19
 244:	ldp	x20, x19, [sp, #64]
 248:	ldp	x22, x21, [sp, #48]
 24c:	ldp	x24, x23, [sp, #32]
 250:	ldr	x25, [sp, #24]
 254:	ldp	x29, x30, [sp, #8]
 258:	ldr	d8, [sp], #80
 25c:	ret
 260:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 264:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 268:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 26c:	add	x0, x0, #0x0
 270:	add	x1, x1, #0x0
 274:	add	x3, x3, #0x0
 278:	mov	w2, #0x43                  	// #67
 27c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>:
   0:	str	d8, [sp, #-80]!
   4:	stp	x29, x30, [sp, #8]
   8:	str	x25, [sp, #24]
   c:	stp	x24, x23, [sp, #32]
  10:	stp	x22, x21, [sp, #48]
  14:	stp	x20, x19, [sp, #64]
  18:	mov	x29, sp
  1c:	mov	x20, x1
  20:	lsr	x8, x1, #32
  24:	mov	x19, x0
  28:	cbz	x8, 3c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x3c>
  2c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  30:	add	x0, x0, #0x0
  34:	mov	w1, #0x1                   	// #1
  38:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  3c:	ldr	w8, [x19, #12]
  40:	add	x8, x8, #0x2
  44:	orr	x8, x8, x8, lsr #1
  48:	orr	x8, x8, x8, lsr #2
  4c:	orr	x8, x8, x8, lsr #4
  50:	orr	x8, x8, x8, lsr #8
  54:	orr	x8, x8, x8, lsr #16
  58:	orr	x8, x8, x8, lsr #32
  5c:	add	x9, x8, #0x1
  60:	cmp	x9, x20
  64:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  68:	mov	w9, #0xffffffff            	// #-1
  6c:	cmp	x8, x9
  70:	csel	x23, x8, x9, cc  // cc = lo, ul, last
  74:	add	x8, x23, x23, lsl #4
  78:	lsl	x0, x8, #3
  7c:	bl	0 <malloc>
  80:	mov	x20, x0
  84:	cbnz	x0, c4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xc4>
  88:	cbz	x23, a4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xa4>
  8c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  90:	add	x0, x0, #0x0
  94:	mov	w1, #0x1                   	// #1
  98:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  9c:	mov	x20, xzr
  a0:	b	c4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xc4>
  a4:	mov	w0, #0x1                   	// #1
  a8:	bl	0 <malloc>
  ac:	mov	x20, x0
  b0:	cbnz	x0, c4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xc4>
  b4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  b8:	add	x0, x0, #0x0
  bc:	mov	w1, #0x1                   	// #1
  c0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  c4:	ldr	w8, [x19, #8]
  c8:	ldr	x21, [x19]
  cc:	cbz	w8, 184 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x184>
  d0:	adrp	x10, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  d4:	ldr	d8, [x10]
  d8:	mov	w9, #0x88                  	// #136
  dc:	madd	x24, x8, x9, x21
  e0:	add	x22, x20, #0x38
  e4:	add	x21, x21, #0x38
  e8:	b	100 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x100>
  ec:	add	x8, x25, #0x88
  f0:	add	x22, x22, #0x88
  f4:	cmp	x8, x24
  f8:	add	x21, x21, #0x88
  fc:	b.eq	144 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x144>  // b.none
 100:	ldur	q0, [x21, #-56]
 104:	ldur	q1, [x21, #-40]
 108:	ldur	x8, [x21, #-8]
 10c:	ldur	q2, [x21, #-24]
 110:	add	x9, x22, #0x10
 114:	stur	q1, [x22, #-40]
 118:	stp	x8, x9, [x22, #-8]
 11c:	stur	q2, [x22, #-24]
 120:	stur	q0, [x22, #-56]
 124:	str	d8, [x22, #8]
 128:	ldr	w8, [x21, #8]
 12c:	sub	x25, x21, #0x38
 130:	cbz	w8, ec <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xec>
 134:	mov	x0, x22
 138:	mov	x1, x21
 13c:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
 140:	b	ec <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xec>
 144:	ldr	w8, [x19, #8]
 148:	ldr	x21, [x19]
 14c:	cbz	w8, 184 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x184>
 150:	add	x8, x8, x8, lsl #4
 154:	lsl	x22, x8, #3
 158:	b	164 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x164>
 15c:	subs	x22, x22, #0x88
 160:	b.eq	180 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x180>  // b.none
 164:	add	x8, x21, x22
 168:	ldur	x0, [x8, #-80]
 16c:	sub	x8, x8, #0x40
 170:	cmp	x8, x0
 174:	b.eq	15c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x15c>  // b.none
 178:	bl	0 <free>
 17c:	b	15c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x15c>
 180:	ldr	x21, [x19]
 184:	add	x8, x19, #0x10
 188:	cmp	x21, x8
 18c:	b.eq	198 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x198>  // b.none
 190:	mov	x0, x21
 194:	bl	0 <free>
 198:	str	x20, [x19]
 19c:	str	w23, [x19, #12]
 1a0:	ldp	x20, x19, [sp, #64]
 1a4:	ldp	x22, x21, [sp, #48]
 1a8:	ldp	x24, x23, [sp, #32]
 1ac:	ldr	x25, [sp, #24]
 1b0:	ldp	x29, x30, [sp, #8]
 1b4:	ldr	d8, [sp], #80
 1b8:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	12c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x12c>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w8, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w8, w20
  2c:	b.cs	60 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x60>  // b.hs, b.nlast
  30:	ldr	w9, [x19, #12]
  34:	cmp	w9, w20
  38:	b.cs	98 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x98>  // b.hs, b.nlast
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	str	wzr, [x19, #8]
  48:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
  4c:	ldr	w9, [x21, #8]
  50:	mov	x8, xzr
  54:	cmp	x8, x9
  58:	b.ne	ec <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xec>  // b.any
  5c:	b	11c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x11c>
  60:	cbz	w20, 11c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x11c>
  64:	ldr	x8, [x21]
  68:	ldr	x9, [x19]
  6c:	add	x10, x20, #0x1
  70:	ldr	x11, [x8]
  74:	sub	x10, x10, #0x1
  78:	cmp	x10, #0x1
  7c:	str	x11, [x9]
  80:	ldr	w11, [x8, #8]
  84:	add	x8, x8, #0x10
  88:	str	w11, [x9, #8]
  8c:	add	x9, x9, #0x10
  90:	b.gt	70 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x70>
  94:	b	11c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x11c>
  98:	cbz	w8, dc <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xdc>
  9c:	ldr	x9, [x21]
  a0:	ldr	x10, [x19]
  a4:	add	x11, x8, #0x1
  a8:	ldr	x12, [x9]
  ac:	sub	x11, x11, #0x1
  b0:	cmp	x11, #0x1
  b4:	str	x12, [x10]
  b8:	ldr	w12, [x9, #8]
  bc:	add	x9, x9, #0x10
  c0:	str	w12, [x10, #8]
  c4:	add	x10, x10, #0x10
  c8:	b.gt	a8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xa8>
  cc:	mov	x9, x20
  d0:	cmp	x8, x9
  d4:	b.ne	ec <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xec>  // b.any
  d8:	b	11c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x11c>
  dc:	mov	x8, xzr
  e0:	mov	x9, x20
  e4:	cmp	x8, x9
  e8:	b.eq	11c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x11c>  // b.none
  ec:	ldr	x10, [x19]
  f0:	ldr	x11, [x21]
  f4:	lsl	x12, x8, #4
  f8:	lsl	x13, x9, #4
  fc:	add	x8, x10, x12
 100:	add	x9, x11, x12
 104:	sub	x10, x13, x12
 108:	ldr	q0, [x9], #16
 10c:	subs	x10, x10, #0x10
 110:	str	q0, [x8]
 114:	add	x8, x8, #0x10
 118:	b.ne	108 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x108>  // b.any
 11c:	ldr	w8, [x19, #12]
 120:	cmp	w8, w20
 124:	b.cc	140 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x140>  // b.lo, b.ul, b.last
 128:	str	w20, [x19, #8]
 12c:	mov	x0, x19
 130:	ldp	x20, x19, [sp, #32]
 134:	ldr	x21, [sp, #16]
 138:	ldp	x29, x30, [sp], #48
 13c:	ret
 140:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 144:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 148:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	add	x3, x3, #0x0
 158:	mov	w2, #0x43                  	// #67
 15c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	dc <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xdc>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	68 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x68>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	84 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x84>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x30                  	// #48
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	mov	x22, xzr
  58:	ldr	w8, [x21, #8]
  5c:	cmp	x22, x8
  60:	b.ne	a8 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xa8>  // b.any
  64:	b	cc <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xcc>
  68:	cbz	w20, cc <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xcc>
  6c:	ldr	x1, [x21]
  70:	ldr	x0, [x19]
  74:	add	x8, x20, x20, lsl #1
  78:	lsl	x2, x8, #4
  7c:	bl	0 <memmove>
  80:	b	cc <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xcc>
  84:	cbz	w22, f0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xf0>
  88:	ldr	x1, [x21]
  8c:	ldr	x0, [x19]
  90:	add	x8, x22, x22, lsl #1
  94:	lsl	x2, x8, #4
  98:	bl	0 <memmove>
  9c:	ldr	w8, [x21, #8]
  a0:	cmp	x22, x8
  a4:	b.eq	cc <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xcc>  // b.none
  a8:	ldr	x9, [x21]
  ac:	ldr	x11, [x19]
  b0:	mov	w10, #0x30                  	// #48
  b4:	mov	w12, #0x30                  	// #48
  b8:	madd	x1, x22, x10, x9
  bc:	madd	x8, x8, x12, x9
  c0:	madd	x0, x22, x12, x11
  c4:	sub	x2, x8, x1
  c8:	bl	0 <memcpy>
  cc:	ldr	w8, [x19, #12]
  d0:	cmp	w8, w20
  d4:	b.cc	104 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x104>  // b.lo, b.ul, b.last
  d8:	str	w20, [x19, #8]
  dc:	mov	x0, x19
  e0:	ldp	x20, x19, [sp, #32]
  e4:	ldp	x22, x21, [sp, #16]
  e8:	ldp	x29, x30, [sp], #48
  ec:	ret
  f0:	mov	x22, xzr
  f4:	ldr	w8, [x21, #8]
  f8:	cmp	x22, x8
  fc:	b.ne	a8 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xa8>  // b.any
 100:	b	cc <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xcc>
 104:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>
 108:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>
 10c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x43                  	// #67
 120:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x20, x1
  20:	lsr	x8, x1, #32
  24:	mov	x19, x0
  28:	cbz	x8, 3c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x3c>
  2c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>
  30:	add	x0, x0, #0x0
  34:	mov	w1, #0x1                   	// #1
  38:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  3c:	ldr	w8, [x19, #12]
  40:	add	x8, x8, #0x2
  44:	orr	x8, x8, x8, lsr #1
  48:	orr	x8, x8, x8, lsr #2
  4c:	orr	x8, x8, x8, lsr #4
  50:	orr	x8, x8, x8, lsr #8
  54:	orr	x8, x8, x8, lsr #16
  58:	orr	x8, x8, x8, lsr #32
  5c:	add	x9, x8, #0x1
  60:	cmp	x9, x20
  64:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  68:	mov	w9, #0xffffffff            	// #-1
  6c:	cmp	x8, x9
  70:	csel	x24, x8, x9, cc  // cc = lo, ul, last
  74:	lsl	x0, x24, #3
  78:	bl	0 <malloc>
  7c:	mov	x20, x0
  80:	cbnz	x0, c0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xc0>
  84:	cbz	x24, a0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xa0>
  88:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>
  8c:	add	x0, x0, #0x0
  90:	mov	w1, #0x1                   	// #1
  94:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  98:	mov	x20, xzr
  9c:	b	c0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xc0>
  a0:	mov	w0, #0x1                   	// #1
  a4:	bl	0 <malloc>
  a8:	mov	x20, x0
  ac:	cbnz	x0, c0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xc0>
  b0:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>
  b4:	add	x0, x0, #0x0
  b8:	mov	w1, #0x1                   	// #1
  bc:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  c0:	ldr	w8, [x19, #8]
  c4:	ldr	x21, [x19]
  c8:	cbz	w8, 188 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x188>
  cc:	lsl	x9, x8, #3
  d0:	mov	x10, x20
  d4:	ldr	x11, [x21]
  d8:	str	xzr, [x21], #8
  dc:	subs	x9, x9, #0x8
  e0:	str	x11, [x10], #8
  e4:	b.ne	d4 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xd4>  // b.any
  e8:	ldr	x21, [x19]
  ec:	cbz	w8, 188 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x188>
  f0:	add	x25, x21, x8, lsl #3
  f4:	b	10c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x10c>
  f8:	mov	x0, x22
  fc:	bl	0 <_ZdlPv>
 100:	cmp	x25, x21
 104:	str	xzr, [x25]
 108:	b.eq	184 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x184>  // b.none
 10c:	ldr	x22, [x25, #-8]!
 110:	cbz	x22, 100 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x100>
 114:	ldr	x0, [x22, #576]
 118:	add	x8, x22, #0x250
 11c:	cmp	x0, x8
 120:	b.eq	128 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x128>  // b.none
 124:	bl	0 <free>
 128:	mov	x26, x22
 12c:	ldr	x23, [x26, #16]!
 130:	ldr	w8, [x26, #8]
 134:	cbz	w8, 16c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x16c>
 138:	add	x8, x8, x8, lsl #4
 13c:	lsl	x27, x8, #3
 140:	b	14c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x14c>
 144:	subs	x27, x27, #0x88
 148:	b.eq	168 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x168>  // b.none
 14c:	add	x8, x23, x27
 150:	ldur	x0, [x8, #-80]
 154:	sub	x8, x8, #0x40
 158:	cmp	x8, x0
 15c:	b.eq	144 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x144>  // b.none
 160:	bl	0 <free>
 164:	b	144 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x144>
 168:	ldr	x23, [x26]
 16c:	add	x8, x26, #0x10
 170:	cmp	x23, x8
 174:	b.eq	f8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xf8>  // b.none
 178:	mov	x0, x23
 17c:	bl	0 <free>
 180:	b	f8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xf8>
 184:	ldr	x21, [x19]
 188:	add	x8, x19, #0x10
 18c:	cmp	x21, x8
 190:	b.eq	19c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x19c>  // b.none
 194:	mov	x0, x21
 198:	bl	0 <free>
 19c:	str	x20, [x19]
 1a0:	str	w24, [x19, #12]
 1a4:	ldp	x20, x19, [sp, #80]
 1a8:	ldp	x22, x21, [sp, #64]
 1ac:	ldp	x24, x23, [sp, #48]
 1b0:	ldp	x26, x25, [sp, #32]
 1b4:	ldr	x27, [sp, #16]
 1b8:	ldp	x29, x30, [sp], #96
 1bc:	ret

ExecuteStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	mov	x29, sp
       8:	cmp	w0, #0x5
       c:	b.cs	24 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE+0x24>  // b.hs, b.nlast
      10:	adrp	x8, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
      14:	add	x8, x8, #0x0
      18:	ldr	w0, [x8, w0, sxtw #2]
      1c:	ldp	x29, x30, [sp], #16
      20:	ret
      24:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
      28:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
      2c:	add	x0, x0, #0x0
      30:	add	x1, x1, #0x0
      34:	mov	w2, #0x28                  	// #40
      38:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000003c <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE>:
      3c:	sub	sp, sp, #0x30
      40:	stp	x29, x30, [sp, #16]
      44:	stp	x20, x19, [sp, #32]
      48:	add	x29, sp, #0x10
      4c:	mov	x19, x0
      50:	ldr	x0, [x0, #64]
      54:	mov	x20, x1
      58:	bl	0 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE>
      5c:	cmp	w0, #0x4
      60:	b.hi	f0 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0xb4>  // b.pmore
      64:	adrp	x10, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
      68:	mov	w9, w0
      6c:	add	x10, x10, #0x0
      70:	adr	x11, 88 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x4c>
      74:	ldrb	w12, [x10, x9]
      78:	add	x11, x11, x12, lsl #2
      7c:	mov	w8, #0x5                   	// #5
      80:	mov	w0, #0x1                   	// #1
      84:	br	x11
      88:	mov	w8, #0x6                   	// #6
      8c:	b	9c <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x60>
      90:	mov	w8, #0x3                   	// #3
      94:	b	9c <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x60>
      98:	mov	w8, #0x4                   	// #4
      9c:	str	w8, [sp]
      a0:	str	x20, [sp, #8]
      a4:	ldr	x20, [x19, #40]
      a8:	add	x19, x19, #0x18
      ac:	cmp	x20, x19
      b0:	b.eq	dc <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0xa0>  // b.none
      b4:	ldr	x0, [x20, #32]
      b8:	mov	x1, sp
      bc:	ldr	x8, [x0]
      c0:	ldr	x8, [x8, #24]
      c4:	blr	x8
      c8:	mov	x0, x20
      cc:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
      d0:	mov	x20, x0
      d4:	cmp	x0, x19
      d8:	b.ne	b4 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x78>  // b.any
      dc:	mov	w0, wzr
      e0:	ldp	x20, x19, [sp, #32]
      e4:	ldp	x29, x30, [sp, #16]
      e8:	add	sp, sp, #0x30
      ec:	ret
      f0:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
      f4:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
      f8:	add	x0, x0, #0x0
      fc:	add	x1, x1, #0x0
     100:	mov	w2, #0x28                  	// #40
     104:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000108 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>:
     108:	sub	sp, sp, #0x150
     10c:	stp	x29, x30, [sp, #272]
     110:	str	x28, [sp, #288]
     114:	stp	x22, x21, [sp, #304]
     118:	stp	x20, x19, [sp, #320]
     11c:	add	x29, sp, #0x110
     120:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     124:	ldr	d0, [x9]
     128:	sub	x9, x29, #0x70
     12c:	add	x9, x9, #0x10
     130:	stur	x9, [x29, #-112]
     134:	add	x9, sp, #0x50
     138:	add	x9, x9, #0x10
     13c:	str	x9, [sp, #80]
     140:	mov	x9, sp
     144:	add	x9, x9, #0x10
     148:	str	x9, [sp]
     14c:	stur	d0, [x29, #-104]
     150:	str	d0, [sp, #88]
     154:	str	d0, [sp, #8]
     158:	mov	x19, x0
     15c:	ldr	x0, [x0, #64]
     160:	sub	x2, x29, #0x70
     164:	add	x3, sp, #0x50
     168:	mov	x4, sp
     16c:	mov	x21, x1
     170:	mov	x20, x8
     174:	bl	0 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_>
     178:	ldr	x22, [x21, #8]
     17c:	ldr	w9, [x19, #76]
     180:	mov	x0, x19
     184:	mov	x1, x21
     188:	ldr	x8, [x22]
     18c:	mov	w2, wzr
     190:	ldr	w8, [x8, #316]
     194:	add	w8, w9, w8
     198:	str	w8, [x19, #76]
     19c:	bl	304 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>
     1a0:	ldur	x2, [x29, #-112]
     1a4:	ldur	w3, [x29, #-104]
     1a8:	mov	x0, x19
     1ac:	mov	x1, x21
     1b0:	bl	4dc <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
     1b4:	ldr	w8, [x22, #784]
     1b8:	cmp	w8, #0x5
     1bc:	b.ne	224 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x11c>  // b.any
     1c0:	mov	x0, x19
     1c4:	mov	x1, x21
     1c8:	bl	7f0 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
     1cc:	ldr	x0, [x19, #8]
     1d0:	cbz	x0, 2dc <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x1d4>
     1d4:	ldr	x8, [x0]
     1d8:	mov	x1, x21
     1dc:	ldr	x8, [x8, #16]
     1e0:	blr	x8
     1e4:	tbz	w0, #0, 2dc <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x1d4>
     1e8:	ldr	x0, [x19, #8]
     1ec:	mov	x1, x21
     1f0:	ldr	x8, [x0]
     1f4:	ldr	x9, [x8, #48]
     1f8:	mov	x8, x20
     1fc:	blr	x9
     200:	ldr	x9, [x20]
     204:	tst	x9, #0xfffffffffffffffe
     208:	and	x8, x9, #0xfffffffffffffffe
     20c:	cset	w9, ne  // ne = any
     210:	orr	x9, x8, x9
     214:	str	x9, [x20]
     218:	cbnz	x8, 220 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x118>
     21c:	cbnz	x9, 2fc <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x1f4>
     220:	cbnz	x8, 27c <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x174>
     224:	ldr	w8, [sp, #88]
     228:	cbz	w8, 24c <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x144>
     22c:	ldr	x21, [sp, #80]
     230:	lsl	x22, x8, #4
     234:	mov	x0, x19
     238:	mov	x1, x21
     23c:	bl	914 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
     240:	subs	x22, x22, #0x10
     244:	add	x21, x21, #0x10
     248:	b.ne	234 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x12c>  // b.any
     24c:	ldr	w8, [sp, #8]
     250:	cbz	w8, 274 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x16c>
     254:	ldr	x21, [sp]
     258:	lsl	x22, x8, #4
     25c:	mov	x0, x19
     260:	mov	x1, x21
     264:	bl	a38 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
     268:	subs	x22, x22, #0x10
     26c:	add	x21, x21, #0x10
     270:	b.ne	25c <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x154>  // b.any
     274:	mov	w8, #0x1                   	// #1
     278:	str	x8, [x20]
     27c:	ldr	x0, [sp]
     280:	mov	x8, sp
     284:	add	x8, x8, #0x10
     288:	cmp	x0, x8
     28c:	b.eq	294 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x18c>  // b.none
     290:	bl	0 <free>
     294:	ldr	x0, [sp, #80]
     298:	add	x8, sp, #0x50
     29c:	add	x8, x8, #0x10
     2a0:	cmp	x0, x8
     2a4:	b.eq	2ac <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x1a4>  // b.none
     2a8:	bl	0 <free>
     2ac:	ldur	x0, [x29, #-112]
     2b0:	sub	x8, x29, #0x70
     2b4:	add	x8, x8, #0x10
     2b8:	cmp	x0, x8
     2bc:	b.eq	2c4 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x1bc>  // b.none
     2c0:	bl	0 <free>
     2c4:	ldp	x20, x19, [sp, #320]
     2c8:	ldp	x22, x21, [sp, #304]
     2cc:	ldr	x28, [sp, #288]
     2d0:	ldp	x29, x30, [sp, #272]
     2d4:	add	sp, sp, #0x150
     2d8:	ret
     2dc:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     2e0:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     2e4:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     2e8:	add	x0, x0, #0x0
     2ec:	add	x1, x1, #0x0
     2f0:	add	x3, x3, #0x0
     2f4:	mov	w2, #0x47                  	// #71
     2f8:	bl	0 <__assert_fail>
     2fc:	mov	x0, x20
     300:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000000304 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>:
     304:	sub	sp, sp, #0x70
     308:	stp	x29, x30, [sp, #32]
     30c:	str	x25, [sp, #48]
     310:	stp	x24, x23, [sp, #64]
     314:	stp	x22, x21, [sp, #80]
     318:	stp	x20, x19, [sp, #96]
     31c:	add	x29, sp, #0x20
     320:	ldr	x8, [x1, #8]
     324:	ldr	x8, [x8]
     328:	ldr	x23, [x8, #288]
     32c:	cbz	x23, 480 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x17c>
     330:	fmov	d0, x23
     334:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     338:	cnt	v0.8b, v0.8b
     33c:	ldr	d1, [x9]
     340:	uaddlv	h0, v0.8b
     344:	mov	x8, sp
     348:	fmov	w22, s0
     34c:	mov	w20, w2
     350:	mov	x19, x1
     354:	mov	x21, x0
     358:	add	x1, x8, #0x10
     35c:	cmp	x22, #0x5
     360:	str	x1, [sp]
     364:	str	d1, [sp, #8]
     368:	b.cc	384 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x80>  // b.lo, b.ul, b.last
     36c:	mov	x0, sp
     370:	mov	w3, #0x4                   	// #4
     374:	mov	x2, x22
     378:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     37c:	ldr	w8, [sp, #12]
     380:	b	388 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x84>
     384:	mov	w8, #0x4                   	// #4
     388:	cmp	x8, x22
     38c:	b.cc	4bc <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x1b8>  // b.lo, b.ul, b.last
     390:	ldr	x0, [sp]
     394:	lsl	x2, x22, #2
     398:	mov	w1, wzr
     39c:	str	w22, [sp, #8]
     3a0:	bl	0 <memset>
     3a4:	ldr	w24, [sp, #8]
     3a8:	cbz	w24, 3ec <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xe8>
     3ac:	mov	x25, xzr
     3b0:	ldr	x8, [x21, #64]
     3b4:	ldr	x0, [x8, #24]
     3b8:	neg	x8, x23
     3bc:	and	x22, x23, x8
     3c0:	mov	x1, x22
     3c4:	bl	0 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>
     3c8:	ldr	w8, [sp, #8]
     3cc:	cmp	x25, x8
     3d0:	b.cs	49c <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x198>  // b.hs, b.nlast
     3d4:	ldr	x8, [sp]
     3d8:	eor	x23, x22, x23
     3dc:	str	w0, [x8, x25, lsl #2]
     3e0:	add	x25, x25, #0x1
     3e4:	cmp	x24, x25
     3e8:	b.ne	3b0 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xac>  // b.any
     3ec:	ldr	x22, [x21, #40]
     3f0:	add	x21, x21, #0x18
     3f4:	cmp	x22, x21
     3f8:	tbz	w20, #0, 434 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x130>
     3fc:	b.eq	468 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x164>  // b.none
     400:	ldr	x0, [x22, #32]
     404:	ldr	x2, [sp]
     408:	ldr	w3, [sp, #8]
     40c:	mov	x1, x19
     410:	ldr	x8, [x0]
     414:	ldr	x8, [x8, #48]
     418:	blr	x8
     41c:	mov	x0, x22
     420:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     424:	mov	x22, x0
     428:	cmp	x0, x21
     42c:	b.ne	400 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xfc>  // b.any
     430:	b	468 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x164>
     434:	b.eq	468 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x164>  // b.none
     438:	ldr	x0, [x22, #32]
     43c:	ldr	x2, [sp]
     440:	ldr	w3, [sp, #8]
     444:	mov	x1, x19
     448:	ldr	x8, [x0]
     44c:	ldr	x8, [x8, #56]
     450:	blr	x8
     454:	mov	x0, x22
     458:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     45c:	mov	x22, x0
     460:	cmp	x0, x21
     464:	b.ne	438 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x134>  // b.any
     468:	ldr	x0, [sp]
     46c:	mov	x8, sp
     470:	add	x8, x8, #0x10
     474:	cmp	x0, x8
     478:	b.eq	480 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x17c>  // b.none
     47c:	bl	0 <free>
     480:	ldp	x20, x19, [sp, #96]
     484:	ldp	x22, x21, [sp, #80]
     488:	ldp	x24, x23, [sp, #64]
     48c:	ldr	x25, [sp, #48]
     490:	ldp	x29, x30, [sp, #32]
     494:	add	sp, sp, #0x70
     498:	ret
     49c:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     4a0:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     4a4:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     4a8:	add	x0, x0, #0x0
     4ac:	add	x1, x1, #0x0
     4b0:	add	x3, x3, #0x0
     4b4:	mov	w2, #0x95                  	// #149
     4b8:	bl	0 <__assert_fail>
     4bc:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     4c0:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     4c4:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     4c8:	add	x0, x0, #0x0
     4cc:	add	x1, x1, #0x0
     4d0:	add	x3, x3, #0x0
     4d4:	mov	w2, #0x43                  	// #67
     4d8:	bl	0 <__assert_fail>

00000000000004dc <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>:
     4dc:	sub	sp, sp, #0x90
     4e0:	stp	x29, x30, [sp, #48]
     4e4:	stp	x28, x27, [sp, #64]
     4e8:	stp	x26, x25, [sp, #80]
     4ec:	stp	x24, x23, [sp, #96]
     4f0:	stp	x22, x21, [sp, #112]
     4f4:	stp	x20, x19, [sp, #128]
     4f8:	add	x29, sp, #0x30
     4fc:	stp	x2, x1, [sp]
     500:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     504:	ldr	x8, [x8]
     508:	mov	x19, x3
     50c:	mov	x22, x0
     510:	ldrb	w8, [x8]
     514:	cbz	w8, 730 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x254>
     518:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     51c:	add	x0, x0, #0x0
     520:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     524:	tbz	w0, #0, 730 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x254>
     528:	bl	0 <_ZN4llvm4dbgsEv>
     52c:	ldp	x9, x8, [x0, #16]
     530:	mov	x23, x0
     534:	sub	x9, x9, x8
     538:	cmp	x9, #0x18
     53c:	b.hi	55c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x80>  // b.pmore
     540:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     544:	add	x1, x1, #0x0
     548:	mov	w2, #0x19                  	// #25
     54c:	mov	x0, x23
     550:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     554:	mov	x23, x0
     558:	b	580 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa4>
     55c:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     560:	add	x9, x9, #0x0
     564:	ldur	q0, [x9, #9]
     568:	ldr	q1, [x9]
     56c:	stur	q0, [x8, #9]
     570:	str	q1, [x8]
     574:	ldr	x8, [x23, #24]
     578:	add	x8, x8, #0x19
     57c:	str	x8, [x23, #24]
     580:	ldp	x24, x8, [sp]
     584:	mov	x0, x23
     588:	ldr	w1, [x8]
     58c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     590:	ldp	x9, x8, [x23, #16]
     594:	cmp	x8, x9
     598:	b.cs	5b4 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xd8>  // b.hs, b.nlast
     59c:	add	x9, x8, #0x1
     5a0:	mov	w10, #0xa                   	// #10
     5a4:	str	x9, [x23, #24]
     5a8:	strb	w10, [x8]
     5ac:	cbnz	x19, 5c4 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xe8>
     5b0:	b	764 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x288>
     5b4:	mov	w1, #0xa                   	// #10
     5b8:	mov	x0, x23
     5bc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     5c0:	cbz	x19, 764 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x288>
     5c4:	mov	x21, #0x7963                	// #31075
     5c8:	movk	x21, #0x6c63, lsl #16
     5cc:	add	x8, x19, x19, lsl #1
     5d0:	adrp	x23, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     5d4:	movk	x21, #0x7365, lsl #32
     5d8:	mov	w25, #0x3a64                	// #14948
     5dc:	add	x26, x24, #0x10
     5e0:	add	x23, x23, #0x0
     5e4:	mov	w28, #0xa                   	// #10
     5e8:	movk	x21, #0x203a, lsl #48
     5ec:	mov	w27, #0x20                  	// #32
     5f0:	mov	w24, #0x2c5d                	// #11357
     5f4:	lsl	x20, x8, #3
     5f8:	movk	w25, #0x5b20, lsl #16
     5fc:	b	618 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x13c>
     600:	add	x9, x8, #0x1
     604:	str	x9, [x0, #24]
     608:	strb	w28, [x8]
     60c:	subs	x20, x20, #0x18
     610:	add	x26, x26, #0x18
     614:	b.eq	730 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x254>  // b.none
     618:	ldr	w8, [x26, #4]
     61c:	cmp	w8, #0x1
     620:	b.ne	7d0 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2f4>  // b.any
     624:	bl	0 <_ZN4llvm4dbgsEv>
     628:	ldp	x9, x8, [x0, #16]
     62c:	sub	x9, x9, x8
     630:	cmp	x9, #0x13
     634:	b.hi	648 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x16c>  // b.pmore
     638:	mov	w2, #0x14                  	// #20
     63c:	mov	x1, x23
     640:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     644:	b	660 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x184>
     648:	ldr	q0, [x23]
     64c:	str	w25, [x8, #16]
     650:	str	q0, [x8]
     654:	ldr	x8, [x0, #24]
     658:	add	x8, x8, #0x14
     65c:	str	x8, [x0, #24]
     660:	ldur	x1, [x26, #-16]
     664:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     668:	ldp	x9, x8, [x0, #16]
     66c:	cmp	x8, x9
     670:	b.cs	688 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1ac>  // b.hs, b.nlast
     674:	add	x9, x8, #0x1
     678:	str	x9, [x0, #24]
     67c:	mov	w9, #0x2e                  	// #46
     680:	strb	w9, [x8]
     684:	b	690 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1b4>
     688:	mov	w1, #0x2e                  	// #46
     68c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     690:	ldur	x1, [x26, #-8]
     694:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     698:	ldp	x9, x8, [x0, #16]
     69c:	sub	x9, x9, x8
     6a0:	cmp	x9, #0x2
     6a4:	b.hi	6bc <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1e0>  // b.pmore
     6a8:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     6ac:	mov	w2, #0x3                   	// #3
     6b0:	add	x1, x1, #0x0
     6b4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     6b8:	b	6d0 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1f4>
     6bc:	strb	w27, [x8, #2]
     6c0:	strh	w24, [x8]
     6c4:	ldr	x8, [x0, #24]
     6c8:	add	x8, x8, #0x3
     6cc:	str	x8, [x0, #24]
     6d0:	bl	0 <_ZN4llvm4dbgsEv>
     6d4:	ldp	x9, x8, [x0, #16]
     6d8:	sub	x9, x9, x8
     6dc:	cmp	x9, #0x7
     6e0:	b.hi	6f8 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x21c>  // b.pmore
     6e4:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     6e8:	mov	w2, #0x8                   	// #8
     6ec:	add	x1, x1, #0x0
     6f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     6f4:	b	708 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x22c>
     6f8:	str	x21, [x8]
     6fc:	ldr	x8, [x0, #24]
     700:	add	x8, x8, #0x8
     704:	str	x8, [x0, #24]
     708:	ldr	w1, [x26]
     70c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     710:	ldp	x9, x8, [x0, #16]
     714:	cmp	x8, x9
     718:	b.cc	600 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x124>  // b.lo, b.ul, b.last
     71c:	mov	w1, #0xa                   	// #10
     720:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     724:	subs	x20, x20, #0x18
     728:	add	x26, x26, #0x18
     72c:	b.ne	618 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x13c>  // b.any
     730:	ldr	x24, [sp]
     734:	cbz	x19, 764 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x288>
     738:	add	x8, x19, x19, lsl #1
     73c:	lsl	x20, x8, #3
     740:	mov	x21, x24
     744:	ldr	x8, [x22, #64]
     748:	ldr	x1, [x21]
     74c:	ldr	x0, [x8, #24]
     750:	bl	0 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>
     754:	mov	w8, w0
     758:	subs	x20, x20, #0x18
     75c:	str	x8, [x21], #24
     760:	b.ne	744 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x268>  // b.any
     764:	ldr	x9, [sp, #8]
     768:	mov	w8, #0x4                   	// #4
     76c:	str	w8, [sp, #16]
     770:	str	x19, [sp, #40]
     774:	stp	x9, x24, [sp, #24]
     778:	ldr	x19, [x22, #40]
     77c:	add	x20, x22, #0x18
     780:	cmp	x19, x20
     784:	b.eq	7b0 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2d4>  // b.none
     788:	ldr	x0, [x19, #32]
     78c:	add	x1, sp, #0x10
     790:	ldr	x8, [x0]
     794:	ldr	x8, [x8, #16]
     798:	blr	x8
     79c:	mov	x0, x19
     7a0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     7a4:	mov	x19, x0
     7a8:	cmp	x0, x20
     7ac:	b.ne	788 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2ac>  // b.any
     7b0:	ldp	x20, x19, [sp, #128]
     7b4:	ldp	x22, x21, [sp, #112]
     7b8:	ldp	x24, x23, [sp, #96]
     7bc:	ldp	x26, x25, [sp, #80]
     7c0:	ldp	x28, x27, [sp, #64]
     7c4:	ldp	x29, x30, [sp, #48]
     7c8:	add	sp, sp, #0x90
     7cc:	ret
     7d0:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     7d4:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     7d8:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     7dc:	add	x0, x0, #0x0
     7e0:	add	x1, x1, #0x0
     7e4:	add	x3, x3, #0x0
     7e8:	mov	w2, #0x102                 	// #258
     7ec:	bl	0 <__assert_fail>

00000000000007f0 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>:
     7f0:	sub	sp, sp, #0x40
     7f4:	stp	x29, x30, [sp, #16]
     7f8:	str	x21, [sp, #32]
     7fc:	stp	x20, x19, [sp, #48]
     800:	add	x29, sp, #0x10
     804:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     808:	ldr	x8, [x8]
     80c:	mov	x19, x1
     810:	mov	x20, x0
     814:	ldrb	w8, [x8]
     818:	cbz	w8, 8bc <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0xcc>
     81c:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     820:	add	x0, x0, #0x0
     824:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     828:	tbz	w0, #0, 8bc <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0xcc>
     82c:	bl	0 <_ZN4llvm4dbgsEv>
     830:	ldp	x9, x8, [x0, #16]
     834:	mov	x21, x0
     838:	sub	x9, x9, x8
     83c:	cmp	x9, #0x1a
     840:	b.hi	860 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x70>  // b.pmore
     844:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     848:	add	x1, x1, #0x0
     84c:	mov	w2, #0x1b                  	// #27
     850:	mov	x0, x21
     854:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     858:	mov	x21, x0
     85c:	b	884 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x94>
     860:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     864:	add	x9, x9, #0x0
     868:	ldur	q0, [x9, #11]
     86c:	ldr	q1, [x9]
     870:	stur	q0, [x8, #11]
     874:	str	q1, [x8]
     878:	ldr	x8, [x21, #24]
     87c:	add	x8, x8, #0x1b
     880:	str	x8, [x21, #24]
     884:	ldr	w1, [x19]
     888:	mov	x0, x21
     88c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     890:	ldp	x9, x8, [x21, #16]
     894:	cmp	x8, x9
     898:	b.cs	8b0 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0xc0>  // b.hs, b.nlast
     89c:	add	x9, x8, #0x1
     8a0:	mov	w10, #0xa                   	// #10
     8a4:	str	x9, [x21, #24]
     8a8:	strb	w10, [x8]
     8ac:	b	8bc <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0xcc>
     8b0:	mov	w1, #0xa                   	// #10
     8b4:	mov	x0, x21
     8b8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     8bc:	mov	w8, #0x5                   	// #5
     8c0:	str	w8, [sp]
     8c4:	str	x19, [sp, #8]
     8c8:	ldr	x19, [x20, #40]
     8cc:	add	x20, x20, #0x18
     8d0:	cmp	x19, x20
     8d4:	b.eq	900 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x110>  // b.none
     8d8:	ldr	x0, [x19, #32]
     8dc:	mov	x1, sp
     8e0:	ldr	x8, [x0]
     8e4:	ldr	x8, [x8, #16]
     8e8:	blr	x8
     8ec:	mov	x0, x19
     8f0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     8f4:	mov	x19, x0
     8f8:	cmp	x0, x20
     8fc:	b.ne	8d8 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0xe8>  // b.any
     900:	ldp	x20, x19, [sp, #48]
     904:	ldr	x21, [sp, #32]
     908:	ldp	x29, x30, [sp, #16]
     90c:	add	sp, sp, #0x40
     910:	ret

0000000000000914 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>:
     914:	sub	sp, sp, #0x40
     918:	stp	x29, x30, [sp, #16]
     91c:	str	x21, [sp, #32]
     920:	stp	x20, x19, [sp, #48]
     924:	add	x29, sp, #0x10
     928:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     92c:	ldr	x8, [x8]
     930:	mov	x19, x1
     934:	mov	x20, x0
     938:	ldrb	w8, [x8]
     93c:	cbz	w8, 9e0 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0xcc>
     940:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     944:	add	x0, x0, #0x0
     948:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     94c:	tbz	w0, #0, 9e0 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0xcc>
     950:	bl	0 <_ZN4llvm4dbgsEv>
     954:	ldp	x9, x8, [x0, #16]
     958:	mov	x21, x0
     95c:	sub	x9, x9, x8
     960:	cmp	x9, #0x19
     964:	b.hi	984 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x70>  // b.pmore
     968:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     96c:	add	x1, x1, #0x0
     970:	mov	w2, #0x1a                  	// #26
     974:	mov	x0, x21
     978:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     97c:	mov	x21, x0
     980:	b	9a8 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x94>
     984:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     988:	add	x9, x9, #0x0
     98c:	ldur	q0, [x9, #10]
     990:	ldr	q1, [x9]
     994:	stur	q0, [x8, #10]
     998:	str	q1, [x8]
     99c:	ldr	x8, [x21, #24]
     9a0:	add	x8, x8, #0x1a
     9a4:	str	x8, [x21, #24]
     9a8:	ldr	w1, [x19]
     9ac:	mov	x0, x21
     9b0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     9b4:	ldp	x9, x8, [x21, #16]
     9b8:	cmp	x8, x9
     9bc:	b.cs	9d4 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0xc0>  // b.hs, b.nlast
     9c0:	add	x9, x8, #0x1
     9c4:	mov	w10, #0xa                   	// #10
     9c8:	str	x9, [x21, #24]
     9cc:	strb	w10, [x8]
     9d0:	b	9e0 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0xcc>
     9d4:	mov	w1, #0xa                   	// #10
     9d8:	mov	x0, x21
     9dc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     9e0:	mov	w8, #0x2                   	// #2
     9e4:	str	w8, [sp]
     9e8:	str	x19, [sp, #8]
     9ec:	ldr	x19, [x20, #40]
     9f0:	add	x20, x20, #0x18
     9f4:	cmp	x19, x20
     9f8:	b.eq	a24 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x110>  // b.none
     9fc:	ldr	x0, [x19, #32]
     a00:	mov	x1, sp
     a04:	ldr	x8, [x0]
     a08:	ldr	x8, [x8, #16]
     a0c:	blr	x8
     a10:	mov	x0, x19
     a14:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     a18:	mov	x19, x0
     a1c:	cmp	x0, x20
     a20:	b.ne	9fc <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0xe8>  // b.any
     a24:	ldp	x20, x19, [sp, #48]
     a28:	ldr	x21, [sp, #32]
     a2c:	ldp	x29, x30, [sp, #16]
     a30:	add	sp, sp, #0x40
     a34:	ret

0000000000000a38 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>:
     a38:	sub	sp, sp, #0x40
     a3c:	stp	x29, x30, [sp, #16]
     a40:	str	x21, [sp, #32]
     a44:	stp	x20, x19, [sp, #48]
     a48:	add	x29, sp, #0x10
     a4c:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     a50:	ldr	x8, [x8]
     a54:	mov	x19, x1
     a58:	mov	x20, x0
     a5c:	ldrb	w8, [x8]
     a60:	cbz	w8, b04 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0xcc>
     a64:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     a68:	add	x0, x0, #0x0
     a6c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     a70:	tbz	w0, #0, b04 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0xcc>
     a74:	bl	0 <_ZN4llvm4dbgsEv>
     a78:	ldp	x9, x8, [x0, #16]
     a7c:	mov	x21, x0
     a80:	sub	x9, x9, x8
     a84:	cmp	x9, #0x17
     a88:	b.hi	aa8 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x70>  // b.pmore
     a8c:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     a90:	add	x1, x1, #0x0
     a94:	mov	w2, #0x18                  	// #24
     a98:	mov	x0, x21
     a9c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     aa0:	mov	x21, x0
     aa4:	b	acc <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x94>
     aa8:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     aac:	add	x9, x9, #0x0
     ab0:	ldr	x10, [x9, #16]
     ab4:	ldr	q0, [x9]
     ab8:	str	x10, [x8, #16]
     abc:	str	q0, [x8]
     ac0:	ldr	x8, [x21, #24]
     ac4:	add	x8, x8, #0x18
     ac8:	str	x8, [x21, #24]
     acc:	ldr	w1, [x19]
     ad0:	mov	x0, x21
     ad4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ad8:	ldp	x9, x8, [x21, #16]
     adc:	cmp	x8, x9
     ae0:	b.cs	af8 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0xc0>  // b.hs, b.nlast
     ae4:	add	x9, x8, #0x1
     ae8:	mov	w10, #0xa                   	// #10
     aec:	str	x9, [x21, #24]
     af0:	strb	w10, [x8]
     af4:	b	b04 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0xcc>
     af8:	mov	w1, #0xa                   	// #10
     afc:	mov	x0, x21
     b00:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     b04:	mov	w8, #0x3                   	// #3
     b08:	str	w8, [sp]
     b0c:	str	x19, [sp, #8]
     b10:	ldr	x19, [x20, #40]
     b14:	add	x20, x20, #0x18
     b18:	cmp	x19, x20
     b1c:	b.eq	b48 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x110>  // b.none
     b20:	ldr	x0, [x19, #32]
     b24:	mov	x1, sp
     b28:	ldr	x8, [x0]
     b2c:	ldr	x8, [x8, #16]
     b30:	blr	x8
     b34:	mov	x0, x19
     b38:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     b3c:	mov	x19, x0
     b40:	cmp	x0, x20
     b44:	b.ne	b20 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0xe8>  // b.any
     b48:	ldp	x20, x19, [sp, #48]
     b4c:	ldr	x21, [sp, #32]
     b50:	ldp	x29, x30, [sp, #16]
     b54:	add	sp, sp, #0x40
     b58:	ret

0000000000000b5c <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv>:
     b5c:	sub	sp, sp, #0x30
     b60:	stp	x29, x30, [sp, #16]
     b64:	stp	x20, x19, [sp, #32]
     b68:	add	x29, sp, #0x10
     b6c:	mov	x20, x0
     b70:	ldr	x0, [x0, #64]
     b74:	mov	x19, x8
     b78:	bl	0 <_ZN4llvm3mca9Scheduler6selectEv>
     b7c:	stp	x0, x1, [sp]
     b80:	cbz	x1, bcc <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x70>
     b84:	mov	x1, sp
     b88:	mov	x8, x19
     b8c:	mov	x0, x20
     b90:	bl	108 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>
     b94:	ldr	x9, [x19]
     b98:	tst	x9, #0xfffffffffffffffe
     b9c:	and	x8, x9, #0xfffffffffffffffe
     ba0:	cset	w9, ne  // ne = any
     ba4:	orr	x9, x8, x9
     ba8:	str	x9, [x19]
     bac:	cbnz	x8, bb4 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x58>
     bb0:	cbnz	x9, be4 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x88>
     bb4:	cbnz	x8, bd4 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x78>
     bb8:	ldr	x0, [x20, #64]
     bbc:	bl	0 <_ZN4llvm3mca9Scheduler6selectEv>
     bc0:	str	w0, [sp]
     bc4:	str	x1, [sp, #8]
     bc8:	cbnz	x1, b84 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x28>
     bcc:	mov	w8, #0x1                   	// #1
     bd0:	str	x8, [x19]
     bd4:	ldp	x20, x19, [sp, #32]
     bd8:	ldp	x29, x30, [sp, #16]
     bdc:	add	sp, sp, #0x30
     be0:	ret
     be4:	mov	x0, x19
     be8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000000bec <_ZN4llvm3mca12ExecuteStage10cycleStartEv>:
     bec:	sub	sp, sp, #0x1d0
     bf0:	stp	x29, x30, [sp, #400]
     bf4:	str	x28, [sp, #416]
     bf8:	stp	x22, x21, [sp, #432]
     bfc:	stp	x20, x19, [sp, #448]
     c00:	add	x29, sp, #0x190
     c04:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     c08:	ldr	d0, [x9]
     c0c:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     c10:	mov	x19, x0
     c14:	sub	x1, x29, #0xa0
     c18:	stur	d0, [x29, #-152]
     c1c:	ldr	d0, [x9]
     c20:	sub	x9, x29, #0xa0
     c24:	add	x9, x9, #0x10
     c28:	stur	x9, [x29, #-160]
     c2c:	add	x9, sp, #0xa0
     c30:	add	x9, x9, #0x10
     c34:	str	x9, [sp, #160]
     c38:	add	x9, sp, #0x50
     c3c:	add	x9, x9, #0x10
     c40:	str	x9, [sp, #80]
     c44:	mov	x9, sp
     c48:	add	x9, x9, #0x10
     c4c:	str	x9, [sp]
     c50:	str	d0, [sp, #168]
     c54:	str	d0, [sp, #88]
     c58:	str	d0, [sp, #8]
     c5c:	ldr	x0, [x0, #64]
     c60:	add	x2, sp, #0xa0
     c64:	add	x3, sp, #0x50
     c68:	mov	x4, sp
     c6c:	mov	x20, x8
     c70:	bl	0 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_>
     c74:	str	xzr, [x19, #72]
     c78:	ldur	w8, [x29, #-152]
     c7c:	cbz	w8, ca0 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0xb4>
     c80:	ldur	x21, [x29, #-160]
     c84:	lsl	x22, x8, #4
     c88:	mov	x0, x19
     c8c:	mov	x1, x21
     c90:	bl	e70 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE>
     c94:	subs	x22, x22, #0x10
     c98:	add	x21, x21, #0x10
     c9c:	b.ne	c88 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x9c>  // b.any
     ca0:	ldr	w8, [sp, #168]
     ca4:	cbz	w8, d20 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x134>
     ca8:	ldr	x21, [sp, #160]
     cac:	lsl	x22, x8, #4
     cb0:	mov	x0, x19
     cb4:	mov	x1, x21
     cb8:	bl	7f0 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
     cbc:	ldr	x0, [x19, #8]
     cc0:	cbz	x0, e48 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x25c>
     cc4:	ldr	x8, [x0]
     cc8:	mov	x1, x21
     ccc:	ldr	x8, [x8, #16]
     cd0:	blr	x8
     cd4:	tbz	w0, #0, e48 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x25c>
     cd8:	ldr	x0, [x19, #8]
     cdc:	mov	x1, x21
     ce0:	ldr	x8, [x0]
     ce4:	ldr	x9, [x8, #48]
     ce8:	mov	x8, x20
     cec:	blr	x9
     cf0:	ldr	x9, [x20]
     cf4:	tst	x9, #0xfffffffffffffffe
     cf8:	and	x8, x9, #0xfffffffffffffffe
     cfc:	cset	w9, ne  // ne = any
     d00:	orr	x9, x8, x9
     d04:	str	x9, [x20]
     d08:	cbnz	x8, d10 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x124>
     d0c:	cbnz	x9, e68 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x27c>
     d10:	cbnz	x8, dd0 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1e4>
     d14:	subs	x22, x22, #0x10
     d18:	add	x21, x21, #0x10
     d1c:	b.ne	cb0 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0xc4>  // b.any
     d20:	ldr	w8, [sp, #88]
     d24:	cbz	w8, d48 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x15c>
     d28:	ldr	x21, [sp, #80]
     d2c:	lsl	x22, x8, #4
     d30:	mov	x0, x19
     d34:	mov	x1, x21
     d38:	bl	914 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
     d3c:	subs	x22, x22, #0x10
     d40:	add	x21, x21, #0x10
     d44:	b.ne	d30 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x144>  // b.any
     d48:	ldr	w8, [sp, #8]
     d4c:	cbz	w8, d70 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x184>
     d50:	ldr	x21, [sp]
     d54:	lsl	x22, x8, #4
     d58:	mov	x0, x19
     d5c:	mov	x1, x21
     d60:	bl	a38 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
     d64:	subs	x22, x22, #0x10
     d68:	add	x21, x21, #0x10
     d6c:	b.ne	d58 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x16c>  // b.any
     d70:	ldr	x0, [x19, #64]
     d74:	bl	0 <_ZN4llvm3mca9Scheduler6selectEv>
     d78:	stp	x0, x1, [x29, #-16]
     d7c:	cbz	x1, dc8 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1dc>
     d80:	sub	x1, x29, #0x10
     d84:	mov	x8, x20
     d88:	mov	x0, x19
     d8c:	bl	108 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>
     d90:	ldr	x9, [x20]
     d94:	tst	x9, #0xfffffffffffffffe
     d98:	and	x8, x9, #0xfffffffffffffffe
     d9c:	cset	w9, ne  // ne = any
     da0:	orr	x9, x8, x9
     da4:	str	x9, [x20]
     da8:	cbnz	x8, db0 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1c4>
     dac:	cbnz	x9, e68 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x27c>
     db0:	cbnz	x8, dd0 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1e4>
     db4:	ldr	x0, [x19, #64]
     db8:	bl	0 <_ZN4llvm3mca9Scheduler6selectEv>
     dbc:	stur	w0, [x29, #-16]
     dc0:	stur	x1, [x29, #-8]
     dc4:	cbnz	x1, d80 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x194>
     dc8:	mov	w8, #0x1                   	// #1
     dcc:	str	x8, [x20]
     dd0:	ldr	x0, [sp]
     dd4:	mov	x8, sp
     dd8:	add	x8, x8, #0x10
     ddc:	cmp	x0, x8
     de0:	b.eq	de8 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1fc>  // b.none
     de4:	bl	0 <free>
     de8:	ldr	x0, [sp, #80]
     dec:	add	x8, sp, #0x50
     df0:	add	x8, x8, #0x10
     df4:	cmp	x0, x8
     df8:	b.eq	e00 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x214>  // b.none
     dfc:	bl	0 <free>
     e00:	ldr	x0, [sp, #160]
     e04:	add	x8, sp, #0xa0
     e08:	add	x8, x8, #0x10
     e0c:	cmp	x0, x8
     e10:	b.eq	e18 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x22c>  // b.none
     e14:	bl	0 <free>
     e18:	ldur	x0, [x29, #-160]
     e1c:	sub	x8, x29, #0xa0
     e20:	add	x8, x8, #0x10
     e24:	cmp	x0, x8
     e28:	b.eq	e30 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x244>  // b.none
     e2c:	bl	0 <free>
     e30:	ldp	x20, x19, [sp, #448]
     e34:	ldp	x22, x21, [sp, #432]
     e38:	ldr	x28, [sp, #416]
     e3c:	ldp	x29, x30, [sp, #400]
     e40:	add	sp, sp, #0x1d0
     e44:	ret
     e48:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     e4c:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     e50:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     e54:	add	x0, x0, #0x0
     e58:	add	x1, x1, #0x0
     e5c:	add	x3, x3, #0x0
     e60:	mov	w2, #0x47                  	// #71
     e64:	bl	0 <__assert_fail>
     e68:	mov	x0, x20
     e6c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000000e70 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE>:
     e70:	stp	x29, x30, [sp, #-48]!
     e74:	str	x21, [sp, #16]
     e78:	stp	x20, x19, [sp, #32]
     e7c:	mov	x29, sp
     e80:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     e84:	ldr	x8, [x8]
     e88:	mov	x19, x1
     e8c:	mov	x20, x0
     e90:	ldrb	w8, [x8]
     e94:	cbz	w8, f4c <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0xdc>
     e98:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     e9c:	add	x0, x0, #0x0
     ea0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     ea4:	tbz	w0, #0, f4c <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0xdc>
     ea8:	bl	0 <_ZN4llvm4dbgsEv>
     eac:	ldp	x9, x8, [x0, #16]
     eb0:	sub	x9, x9, x8
     eb4:	cmp	x9, #0x18
     eb8:	b.hi	ed0 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x60>  // b.pmore
     ebc:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     ec0:	add	x1, x1, #0x0
     ec4:	mov	w2, #0x19                  	// #25
     ec8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ecc:	b	ef4 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x84>
     ed0:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     ed4:	add	x9, x9, #0x0
     ed8:	ldur	q0, [x9, #9]
     edc:	ldr	q1, [x9]
     ee0:	stur	q0, [x8, #9]
     ee4:	str	q1, [x8]
     ee8:	ldr	x8, [x0, #24]
     eec:	add	x8, x8, #0x19
     ef0:	str	x8, [x0, #24]
     ef4:	ldr	x1, [x19]
     ef8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     efc:	ldp	x9, x8, [x0, #16]
     f00:	cmp	x8, x9
     f04:	b.cs	f1c <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0xac>  // b.hs, b.nlast
     f08:	add	x9, x8, #0x1
     f0c:	mov	w10, #0x2e                  	// #46
     f10:	str	x9, [x0, #24]
     f14:	strb	w10, [x8]
     f18:	b	f24 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0xb4>
     f1c:	mov	w1, #0x2e                  	// #46
     f20:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     f24:	ldr	x1, [x19, #8]
     f28:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     f2c:	ldp	x9, x8, [x0, #16]
     f30:	sub	x9, x9, x8
     f34:	cmp	x9, #0x1
     f38:	b.hi	f94 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x124>  // b.pmore
     f3c:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     f40:	add	x1, x1, #0x0
     f44:	mov	w2, #0x2                   	// #2
     f48:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     f4c:	ldr	x21, [x20, #40]
     f50:	add	x20, x20, #0x18
     f54:	cmp	x21, x20
     f58:	b.eq	f84 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x114>  // b.none
     f5c:	ldr	x0, [x21, #32]
     f60:	mov	x1, x19
     f64:	ldr	x8, [x0]
     f68:	ldr	x8, [x8, #40]
     f6c:	blr	x8
     f70:	mov	x0, x21
     f74:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     f78:	mov	x21, x0
     f7c:	cmp	x0, x20
     f80:	b.ne	f5c <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0xec>  // b.any
     f84:	ldp	x20, x19, [sp, #32]
     f88:	ldr	x21, [sp, #16]
     f8c:	ldp	x29, x30, [sp], #48
     f90:	ret
     f94:	mov	w9, #0xa5d                 	// #2653
     f98:	strh	w9, [x8]
     f9c:	ldr	x8, [x0, #24]
     fa0:	add	x8, x8, #0x2
     fa4:	str	x8, [x0, #24]
     fa8:	ldr	x21, [x20, #40]
     fac:	add	x20, x20, #0x18
     fb0:	cmp	x21, x20
     fb4:	b.ne	f5c <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0xec>  // b.any
     fb8:	b	f84 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x114>

0000000000000fbc <_ZN4llvm3mca12ExecuteStage8cycleEndEv>:
     fbc:	str	d8, [sp, #-80]!
     fc0:	stp	x29, x30, [sp, #16]
     fc4:	stp	x28, x23, [sp, #32]
     fc8:	stp	x22, x21, [sp, #48]
     fcc:	stp	x20, x19, [sp, #64]
     fd0:	mov	x29, sp
     fd4:	sub	sp, sp, #0x1d0
     fd8:	ldrb	w9, [x0, #80]
     fdc:	mov	x19, x8
     fe0:	cbz	w9, 1070 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xb4>
     fe4:	mov	x20, x0
     fe8:	ldr	x0, [x0, #64]
     fec:	ldrb	w8, [x0, #140]
     ff0:	cbnz	w8, 1000 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x44>
     ff4:	ldp	w8, w9, [x20, #72]
     ff8:	cmp	w8, w9
     ffc:	b.ls	1070 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xb4>  // b.plast
    1000:	adrp	x8, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1004:	ldr	d8, [x8]
    1008:	sub	x8, x29, #0x90
    100c:	add	x8, x8, #0x10
    1010:	sub	x1, x29, #0x90
    1014:	stur	x8, [x29, #-144]
    1018:	stur	d8, [x29, #-136]
    101c:	bl	0 <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE>
    1020:	adrp	x22, 0 <_ZN4llvm9DebugFlagE>
    1024:	ldr	x22, [x22]
    1028:	cbz	x0, 1140 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x184>
    102c:	ldrb	w8, [x22]
    1030:	mov	x21, x0
    1034:	cbz	w8, 10f0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x134>
    1038:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    103c:	add	x0, x0, #0x0
    1040:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1044:	tbz	w0, #0, 10f0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x134>
    1048:	bl	0 <_ZN4llvm4dbgsEv>
    104c:	ldp	x9, x8, [x0, #16]
    1050:	sub	x9, x9, x8
    1054:	cmp	x9, #0x45
    1058:	b.hi	107c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xc0>  // b.pmore
    105c:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1060:	add	x1, x1, #0x0
    1064:	mov	w2, #0x46                  	// #70
    1068:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    106c:	b	10a8 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xec>
    1070:	mov	w8, #0x1                   	// #1
    1074:	str	x8, [x19]
    1078:	b	134c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x390>
    107c:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1080:	add	x9, x9, #0x0
    1084:	ldp	q0, q3, [x9]
    1088:	ldur	x10, [x9, #62]
    108c:	ldp	q1, q2, [x9, #32]
    1090:	stp	q0, q3, [x8]
    1094:	stur	x10, [x8, #62]
    1098:	stp	q1, q2, [x8, #32]
    109c:	ldr	x8, [x0, #24]
    10a0:	add	x8, x8, #0x46
    10a4:	str	x8, [x0, #24]
    10a8:	mov	w8, #0x10                  	// #16
    10ac:	mov	w9, #0x1                   	// #1
    10b0:	add	x1, sp, #0xb0
    10b4:	stp	x21, xzr, [sp, #176]
    10b8:	str	w8, [sp, #192]
    10bc:	strh	w9, [sp, #196]
    10c0:	strb	w9, [sp, #198]
    10c4:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    10c8:	ldp	x9, x8, [x0, #16]
    10cc:	cmp	x8, x9
    10d0:	b.cs	10e8 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x12c>  // b.hs, b.nlast
    10d4:	add	x9, x8, #0x1
    10d8:	mov	w10, #0xa                   	// #10
    10dc:	str	x9, [x0, #24]
    10e0:	strb	w10, [x8]
    10e4:	b	10f0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x134>
    10e8:	mov	w1, #0xa                   	// #10
    10ec:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    10f0:	ldur	x8, [x29, #-144]
    10f4:	ldur	w9, [x29, #-136]
    10f8:	mov	w10, #0x1                   	// #1
    10fc:	str	w10, [sp, #176]
    1100:	str	x21, [sp, #200]
    1104:	stp	x8, x9, [sp, #184]
    1108:	ldr	x21, [x20, #40]
    110c:	add	x23, x20, #0x18
    1110:	cmp	x21, x23
    1114:	b.eq	1140 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x184>  // b.none
    1118:	ldr	x0, [x21, #32]
    111c:	add	x1, sp, #0xb0
    1120:	ldr	x8, [x0]
    1124:	ldr	x8, [x8, #32]
    1128:	blr	x8
    112c:	mov	x0, x21
    1130:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    1134:	mov	x21, x0
    1138:	cmp	x0, x23
    113c:	b.ne	1118 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x15c>  // b.any
    1140:	add	x8, sp, #0xb0
    1144:	add	x9, sp, #0x20
    1148:	add	x8, x8, #0x10
    114c:	add	x9, x9, #0x10
    1150:	str	d8, [sp, #184]
    1154:	str	x8, [sp, #176]
    1158:	str	x9, [sp, #32]
    115c:	str	d8, [sp, #40]
    1160:	ldr	x0, [x20, #64]
    1164:	add	x1, sp, #0xb0
    1168:	add	x2, sp, #0x20
    116c:	bl	0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_>
    1170:	ldr	w8, [sp, #184]
    1174:	cbz	w8, 1238 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x27c>
    1178:	ldrb	w8, [x22]
    117c:	cbz	w8, 11e8 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x22c>
    1180:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1184:	add	x0, x0, #0x0
    1188:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    118c:	tbz	w0, #0, 11e8 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x22c>
    1190:	bl	0 <_ZN4llvm4dbgsEv>
    1194:	ldp	x9, x8, [x0, #16]
    1198:	sub	x9, x9, x8
    119c:	cmp	x9, #0x33
    11a0:	b.hi	11b8 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1fc>  // b.pmore
    11a4:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    11a8:	add	x1, x1, #0x0
    11ac:	mov	w2, #0x34                  	// #52
    11b0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    11b4:	b	11e8 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x22c>
    11b8:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    11bc:	add	x9, x9, #0x0
    11c0:	ldp	q2, q0, [x9, #16]
    11c4:	ldr	q1, [x9]
    11c8:	mov	w9, #0x6569                	// #25961
    11cc:	movk	w9, #0xa73, lsl #16
    11d0:	str	w9, [x8, #48]
    11d4:	stp	q2, q0, [x8, #16]
    11d8:	str	q1, [x8]
    11dc:	ldr	x8, [x0, #24]
    11e0:	add	x8, x8, #0x34
    11e4:	str	x8, [x0, #24]
    11e8:	ldr	x8, [sp, #176]
    11ec:	ldr	w9, [sp, #184]
    11f0:	mov	w10, #0x2                   	// #2
    11f4:	str	w10, [sp]
    11f8:	str	xzr, [sp, #24]
    11fc:	stp	x8, x9, [sp, #8]
    1200:	ldr	x21, [x20, #40]
    1204:	add	x23, x20, #0x18
    1208:	cmp	x21, x23
    120c:	b.eq	1238 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x27c>  // b.none
    1210:	ldr	x0, [x21, #32]
    1214:	mov	x1, sp
    1218:	ldr	x8, [x0]
    121c:	ldr	x8, [x8, #32]
    1220:	blr	x8
    1224:	mov	x0, x21
    1228:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    122c:	mov	x21, x0
    1230:	cmp	x0, x23
    1234:	b.ne	1210 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x254>  // b.any
    1238:	ldr	w8, [sp, #40]
    123c:	cbz	w8, 12fc <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x340>
    1240:	ldrb	w8, [x22]
    1244:	cbz	w8, 12ac <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x2f0>
    1248:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    124c:	add	x0, x0, #0x0
    1250:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1254:	tbz	w0, #0, 12ac <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x2f0>
    1258:	bl	0 <_ZN4llvm4dbgsEv>
    125c:	ldp	x9, x8, [x0, #16]
    1260:	sub	x9, x9, x8
    1264:	cmp	x9, #0x31
    1268:	b.hi	1280 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x2c4>  // b.pmore
    126c:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1270:	add	x1, x1, #0x0
    1274:	mov	w2, #0x32                  	// #50
    1278:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    127c:	b	12ac <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x2f0>
    1280:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1284:	add	x9, x9, #0x0
    1288:	ldp	q2, q0, [x9, #16]
    128c:	ldr	q1, [x9]
    1290:	mov	w9, #0xa73                 	// #2675
    1294:	strh	w9, [x8, #48]
    1298:	stp	q2, q0, [x8, #16]
    129c:	str	q1, [x8]
    12a0:	ldr	x8, [x0, #24]
    12a4:	add	x8, x8, #0x32
    12a8:	str	x8, [x0, #24]
    12ac:	ldr	x8, [sp, #32]
    12b0:	ldr	w9, [sp, #40]
    12b4:	mov	w10, #0x3                   	// #3
    12b8:	str	w10, [sp]
    12bc:	str	xzr, [sp, #24]
    12c0:	stp	x8, x9, [sp, #8]
    12c4:	ldr	x21, [x20, #40]
    12c8:	add	x20, x20, #0x18
    12cc:	cmp	x21, x20
    12d0:	b.eq	12fc <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x340>  // b.none
    12d4:	ldr	x0, [x21, #32]
    12d8:	mov	x1, sp
    12dc:	ldr	x8, [x0]
    12e0:	ldr	x8, [x8, #32]
    12e4:	blr	x8
    12e8:	mov	x0, x21
    12ec:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    12f0:	mov	x21, x0
    12f4:	cmp	x0, x20
    12f8:	b.ne	12d4 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x318>  // b.any
    12fc:	ldr	x0, [sp, #32]
    1300:	add	x9, sp, #0x20
    1304:	add	x9, x9, #0x10
    1308:	mov	w8, #0x1                   	// #1
    130c:	cmp	x0, x9
    1310:	str	x8, [x19]
    1314:	b.eq	131c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x360>  // b.none
    1318:	bl	0 <free>
    131c:	ldr	x0, [sp, #176]
    1320:	add	x8, sp, #0xb0
    1324:	add	x8, x8, #0x10
    1328:	cmp	x0, x8
    132c:	b.eq	1334 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x378>  // b.none
    1330:	bl	0 <free>
    1334:	ldur	x0, [x29, #-144]
    1338:	sub	x8, x29, #0x90
    133c:	add	x8, x8, #0x10
    1340:	cmp	x0, x8
    1344:	b.eq	134c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x390>  // b.none
    1348:	bl	0 <free>
    134c:	add	sp, sp, #0x1d0
    1350:	ldp	x20, x19, [sp, #64]
    1354:	ldp	x22, x21, [sp, #48]
    1358:	ldp	x28, x23, [sp, #32]
    135c:	ldp	x29, x30, [sp, #16]
    1360:	ldr	d8, [sp], #80
    1364:	ret

0000000000001368 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE>:
    1368:	stp	x29, x30, [sp, #-48]!
    136c:	str	x21, [sp, #16]
    1370:	stp	x20, x19, [sp, #32]
    1374:	mov	x29, sp
    1378:	ldr	x9, [x1, #8]
    137c:	ldrb	w10, [x9, #840]
    1380:	cbz	w10, 1468 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0x100>
    1384:	mov	x21, x8
    1388:	ldr	w8, [x9, #784]
    138c:	cmp	w8, #0x3
    1390:	b.ne	1488 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0x120>  // b.any
    1394:	ldr	x8, [x9]
    1398:	ldrb	w9, [x8, #324]
    139c:	cbnz	w9, 1428 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xc0>
    13a0:	ldrb	w8, [x8, #325]
    13a4:	cbnz	w8, 1428 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xc0>
    13a8:	mov	x19, x1
    13ac:	mov	x20, x0
    13b0:	bl	914 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
    13b4:	mov	x0, x20
    13b8:	mov	x1, x19
    13bc:	bl	a38 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
    13c0:	mov	x0, x20
    13c4:	mov	x1, x19
    13c8:	mov	x2, xzr
    13cc:	mov	x3, xzr
    13d0:	bl	4dc <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
    13d4:	ldr	x0, [x19, #8]
    13d8:	bl	0 <_ZN4llvm3mca11Instruction13forceExecutedEv>
    13dc:	mov	x0, x20
    13e0:	mov	x1, x19
    13e4:	bl	7f0 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
    13e8:	ldr	x0, [x20, #8]
    13ec:	cbz	x0, 1448 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xe0>
    13f0:	ldr	x8, [x0]
    13f4:	mov	x1, x19
    13f8:	ldr	x8, [x8, #16]
    13fc:	blr	x8
    1400:	tbz	w0, #0, 1448 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xe0>
    1404:	ldr	x0, [x20, #8]
    1408:	mov	x1, x19
    140c:	ldp	x20, x19, [sp, #32]
    1410:	ldr	x8, [x0]
    1414:	ldr	x2, [x8, #48]
    1418:	mov	x8, x21
    141c:	ldr	x21, [sp, #16]
    1420:	ldp	x29, x30, [sp], #48
    1424:	br	x2
    1428:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    142c:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1430:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1434:	add	x0, x0, #0x0
    1438:	add	x1, x1, #0x0
    143c:	add	x3, x3, #0x0
    1440:	mov	w2, #0xa9                  	// #169
    1444:	bl	0 <__assert_fail>
    1448:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    144c:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1450:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1454:	add	x0, x0, #0x0
    1458:	add	x1, x1, #0x0
    145c:	add	x3, x3, #0x0
    1460:	mov	w2, #0x47                  	// #71
    1464:	bl	0 <__assert_fail>
    1468:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    146c:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1470:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1474:	add	x0, x0, #0x0
    1478:	add	x1, x1, #0x0
    147c:	add	x3, x3, #0x0
    1480:	mov	w2, #0xa3                  	// #163
    1484:	bl	0 <__assert_fail>
    1488:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    148c:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1490:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1494:	add	x0, x0, #0x0
    1498:	add	x1, x1, #0x0
    149c:	add	x3, x3, #0x0
    14a0:	mov	w2, #0xa4                  	// #164
    14a4:	bl	0 <__assert_fail>

00000000000014a8 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE>:
    14a8:	sub	sp, sp, #0x50
    14ac:	stp	x29, x30, [sp, #16]
    14b0:	str	x23, [sp, #32]
    14b4:	stp	x22, x21, [sp, #48]
    14b8:	stp	x20, x19, [sp, #64]
    14bc:	add	x29, sp, #0x10
    14c0:	mov	x20, x0
    14c4:	ldr	x0, [x0, #64]
    14c8:	mov	x19, x1
    14cc:	mov	x21, x8
    14d0:	bl	0 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE>
    14d4:	cbnz	w0, 15d4 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x12c>
    14d8:	ldr	x0, [x20, #64]
    14dc:	mov	x1, x19
    14e0:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    14e4:	ldr	x8, [x19, #8]
    14e8:	ldrb	w8, [x8, #840]
    14ec:	cbz	w8, 1514 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x6c>
    14f0:	mov	x8, x21
    14f4:	mov	x0, x20
    14f8:	mov	x1, x19
    14fc:	ldp	x20, x19, [sp, #64]
    1500:	ldp	x22, x21, [sp, #48]
    1504:	ldr	x23, [sp, #32]
    1508:	ldp	x29, x30, [sp, #16]
    150c:	add	sp, sp, #0x50
    1510:	b	1368 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE>
    1514:	ldr	x0, [x20, #64]
    1518:	mov	x1, x19
    151c:	bl	0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE>
    1520:	ldr	x23, [x19, #8]
    1524:	ldr	w9, [x20, #72]
    1528:	mov	w22, w0
    152c:	mov	w2, #0x1                   	// #1
    1530:	ldr	x8, [x23]
    1534:	mov	x0, x20
    1538:	mov	x1, x19
    153c:	ldr	w8, [x8, #316]
    1540:	add	w8, w9, w8
    1544:	str	w8, [x20, #72]
    1548:	bl	304 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>
    154c:	tbz	w22, #0, 159c <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0xf4>
    1550:	mov	x0, x20
    1554:	mov	x1, x19
    1558:	bl	914 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
    155c:	mov	x0, x20
    1560:	mov	x1, x19
    1564:	bl	a38 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
    1568:	ldr	x0, [x20, #64]
    156c:	mov	x1, x19
    1570:	bl	0 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE>
    1574:	tbz	w0, #0, 15b4 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x10c>
    1578:	mov	x8, x21
    157c:	mov	x0, x20
    1580:	mov	x1, x19
    1584:	ldp	x20, x19, [sp, #64]
    1588:	ldp	x22, x21, [sp, #48]
    158c:	ldr	x23, [sp, #32]
    1590:	ldp	x29, x30, [sp, #16]
    1594:	add	sp, sp, #0x50
    1598:	b	108 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>
    159c:	ldr	w8, [x23, #784]
    15a0:	cmp	w8, #0x2
    15a4:	b.ne	15b4 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x10c>  // b.any
    15a8:	mov	x0, x20
    15ac:	mov	x1, x19
    15b0:	bl	914 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
    15b4:	mov	w8, #0x1                   	// #1
    15b8:	str	x8, [x21]
    15bc:	ldp	x20, x19, [sp, #64]
    15c0:	ldp	x22, x21, [sp, #48]
    15c4:	ldr	x23, [sp, #32]
    15c8:	ldp	x29, x30, [sp, #16]
    15cc:	add	sp, sp, #0x50
    15d0:	ret
    15d4:	sub	w8, w0, #0x1
    15d8:	cmp	w8, #0x3
    15dc:	b.hi	1604 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x15c>  // b.pmore
    15e0:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    15e4:	add	x9, x9, #0x0
    15e8:	adr	x10, 15fc <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x154>
    15ec:	ldrb	w11, [x9, x8]
    15f0:	add	x10, x10, x11, lsl #2
    15f4:	mov	w8, #0x5                   	// #5
    15f8:	br	x10
    15fc:	mov	w8, #0x6                   	// #6
    1600:	b	1628 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x180>
    1604:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1608:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    160c:	add	x0, x0, #0x0
    1610:	add	x1, x1, #0x0
    1614:	mov	w2, #0x28                  	// #40
    1618:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    161c:	mov	w8, #0x4                   	// #4
    1620:	b	1628 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x180>
    1624:	mov	w8, #0x3                   	// #3
    1628:	str	w8, [sp]
    162c:	str	x19, [sp, #8]
    1630:	ldr	x19, [x20, #40]
    1634:	add	x20, x20, #0x18
    1638:	cmp	x19, x20
    163c:	b.eq	1668 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x1c0>  // b.none
    1640:	ldr	x0, [x19, #32]
    1644:	mov	x1, sp
    1648:	ldr	x8, [x0]
    164c:	ldr	x8, [x8, #24]
    1650:	blr	x8
    1654:	mov	x0, x19
    1658:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    165c:	mov	x19, x0
    1660:	cmp	x0, x20
    1664:	b.ne	1640 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x198>  // b.any
    1668:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    166c:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1670:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1674:	add	x0, x0, #0x0
    1678:	add	x1, x1, #0x0
    167c:	add	x3, x3, #0x0
    1680:	mov	w2, #0xbb                  	// #187
    1684:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x8, [x19, #40]
  14:	ldr	x0, [x0, #32]
  18:	mov	x20, x1
  1c:	mov	x2, x20
  20:	mov	x1, x8
  24:	bl	0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  28:	ldr	x8, [x19, #40]
  2c:	cmp	x8, x0
  30:	b.ne	70 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE+0x70>  // b.any
  34:	ldp	x0, x1, [x19, #80]
  38:	mov	x2, x20
  3c:	bl	0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  40:	ldr	x8, [x19, #88]
  44:	cmp	x8, x0
  48:	b.ne	90 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE+0x90>  // b.any
  4c:	ldp	x0, x1, [x19, #104]
  50:	mov	x2, x20
  54:	bl	0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  58:	ldr	x8, [x19, #112]
  5c:	cmp	x8, x0
  60:	b.ne	b0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE+0xb0>  // b.any
  64:	ldp	x20, x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret
  70:	adrp	x0, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  74:	adrp	x1, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  78:	adrp	x3, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x10e                 	// #270
  8c:	bl	0 <__assert_fail>
  90:	adrp	x0, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  94:	adrp	x1, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  98:	adrp	x3, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x10f                 	// #271
  ac:	bl	0 <__assert_fail>
  b0:	adrp	x0, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  b4:	adrp	x1, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  b8:	adrp	x3, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x110                 	// #272
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca12ExecuteStageD0Ev:

0000000000000000 <_ZN4llvm3mca12ExecuteStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca12ExecuteStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca12ExecuteStage17hasWorkToCompleteEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag>:
   0:	sub	x11, x1, x0
   4:	cmp	x11, #0x40
   8:	b.lt	ac <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xac>  // b.tstop
   c:	ldr	w9, [x2]
  10:	ldr	x10, [x2, #8]
  14:	lsr	x8, x11, #6
  18:	add	x11, x8, #0x1
  1c:	mov	x8, x0
  20:	b	34 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x34>
  24:	sub	x11, x11, #0x1
  28:	cmp	x11, #0x1
  2c:	add	x8, x8, #0x40
  30:	b.le	a4 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xa4>
  34:	ldr	w12, [x8]
  38:	cmp	w12, w9
  3c:	b.ne	4c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x4c>  // b.any
  40:	ldr	x12, [x8, #8]
  44:	cmp	x12, x10
  48:	b.eq	d8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xd8>  // b.none
  4c:	ldr	w12, [x8, #16]
  50:	cmp	w12, w9
  54:	b.ne	64 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x64>  // b.any
  58:	ldr	x12, [x8, #24]
  5c:	cmp	x12, x10
  60:	b.eq	9c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x9c>  // b.none
  64:	ldr	w12, [x8, #32]
  68:	cmp	w12, w9
  6c:	b.ne	7c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x7c>  // b.any
  70:	ldr	x12, [x8, #40]
  74:	cmp	x12, x10
  78:	b.eq	11c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x11c>  // b.none
  7c:	ldr	w12, [x8, #48]
  80:	cmp	w12, w9
  84:	b.ne	24 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x24>  // b.any
  88:	ldr	x12, [x8, #56]
  8c:	cmp	x12, x10
  90:	b.ne	24 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x24>  // b.any
  94:	add	x0, x8, #0x30
  98:	ret
  9c:	add	x8, x8, #0x10
  a0:	b	d8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xd8>
  a4:	sub	x11, x1, x8
  a8:	mov	x0, x8
  ac:	asr	x8, x11, #4
  b0:	cmp	x8, #0x3
  b4:	b.eq	e0 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xe0>  // b.none
  b8:	cmp	x8, #0x2
  bc:	b.eq	104 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x104>  // b.none
  c0:	cmp	x8, #0x1
  c4:	mov	x8, x1
  c8:	b.ne	d8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xd8>  // b.any
  cc:	ldr	w8, [x2]
  d0:	ldr	x9, [x2, #8]
  d4:	b	148 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x148>
  d8:	mov	x0, x8
  dc:	ret
  e0:	ldr	w10, [x0]
  e4:	ldr	w8, [x2]
  e8:	ldr	x9, [x2, #8]
  ec:	cmp	w10, w8
  f0:	b.ne	124 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x124>  // b.any
  f4:	ldr	x10, [x0, #8]
  f8:	cmp	x10, x9
  fc:	b.ne	124 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x124>  // b.any
 100:	ret
 104:	ldr	w8, [x2]
 108:	ldr	x9, [x2, #8]
 10c:	ldr	w10, [x0]
 110:	cmp	w10, w8
 114:	b.eq	134 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x134>  // b.none
 118:	b	144 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x144>
 11c:	add	x0, x8, #0x20
 120:	ret
 124:	add	x0, x0, #0x10
 128:	ldr	w10, [x0]
 12c:	cmp	w10, w8
 130:	b.ne	144 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x144>  // b.any
 134:	ldr	x10, [x0, #8]
 138:	cmp	x10, x9
 13c:	b.ne	144 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x144>  // b.any
 140:	ret
 144:	add	x0, x0, #0x10
 148:	ldr	x10, [x0, #8]
 14c:	ldr	w11, [x0]
 150:	cmp	x10, x9
 154:	ccmp	w11, w8, #0x0, eq  // eq = none
 158:	csel	x0, x0, x1, eq  // eq = none
 15c:	ret

InstructionTables.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>:
   0:	sub	sp, sp, #0xb0
   4:	stp	x29, x30, [sp, #80]
   8:	stp	x28, x27, [sp, #96]
   c:	stp	x26, x25, [sp, #112]
  10:	stp	x24, x23, [sp, #128]
  14:	stp	x22, x21, [sp, #144]
  18:	stp	x20, x19, [sp, #160]
  1c:	add	x29, sp, #0x50
  20:	stp	x1, x8, [sp]
  24:	ldr	x9, [x1, #8]
  28:	mov	x21, x0
  2c:	mov	w8, wzr
  30:	ldr	x10, [x9]
  34:	str	wzr, [x0, #80]
  38:	ldr	w9, [x10, #184]
  3c:	cbz	w9, 330 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x330>
  40:	ldr	x16, [x10, #176]
  44:	mov	w17, #0x18                  	// #24
  48:	add	x10, x21, #0x48
  4c:	mov	w0, #0x1                   	// #1
  50:	madd	x18, x9, x17, x16
  54:	stp	x18, x10, [sp, #16]
  58:	b	68 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x68>
  5c:	add	x16, x16, #0x18
  60:	cmp	x16, x18
  64:	b.eq	330 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x330>  // b.none
  68:	ldp	w9, w10, [x16, #8]
  6c:	subs	w9, w10, w9
  70:	b.eq	5c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x5c>  // b.none
  74:	ldr	w11, [x21, #192]
  78:	ldr	x10, [x21, #184]
  7c:	ldr	x13, [x16]
  80:	lsl	x14, x11, #3
  84:	cmp	w11, #0x4
  88:	add	x12, x10, x14
  8c:	b.cc	100 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x100>  // b.lo, b.ul, b.last
  90:	lsr	x11, x11, #2
  94:	add	x14, x11, #0x1
  98:	add	x11, x10, #0x10
  9c:	ldur	x15, [x11, #-16]
  a0:	cmp	x15, x13
  a4:	b.eq	160 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x160>  // b.none
  a8:	ldur	x15, [x11, #-8]
  ac:	cmp	x15, x13
  b0:	b.eq	174 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x174>  // b.none
  b4:	ldr	x15, [x11]
  b8:	cmp	x15, x13
  bc:	b.eq	178 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x178>  // b.none
  c0:	ldr	x15, [x11, #8]
  c4:	cmp	x15, x13
  c8:	b.eq	300 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x300>  // b.none
  cc:	sub	x14, x14, #0x1
  d0:	cmp	x14, #0x1
  d4:	add	x11, x11, #0x20
  d8:	b.gt	9c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x9c>
  dc:	sub	x11, x11, #0x10
  e0:	sub	x14, x12, x11
  e4:	asr	x14, x14, #3
  e8:	cmp	x14, #0x1
  ec:	b.ne	110 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x110>  // b.any
  f0:	ldr	x14, [x11]
  f4:	cmp	x14, x13
  f8:	b.eq	178 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x178>  // b.none
  fc:	b	14c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x14c>
 100:	mov	x11, x10
 104:	asr	x14, x14, #3
 108:	cmp	x14, #0x1
 10c:	b.eq	f0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xf0>  // b.none
 110:	cmp	x14, #0x2
 114:	b.eq	130 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x130>  // b.none
 118:	cmp	x14, #0x3
 11c:	b.ne	14c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x14c>  // b.any
 120:	ldr	x14, [x11]
 124:	cmp	x14, x13
 128:	b.eq	178 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x178>  // b.none
 12c:	add	x11, x11, #0x8
 130:	ldr	x14, [x11]
 134:	cmp	x14, x13
 138:	b.eq	178 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x178>  // b.none
 13c:	add	x11, x11, #0x8
 140:	ldr	x14, [x11]
 144:	cmp	x14, x13
 148:	b.eq	178 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x178>  // b.none
 14c:	mov	x11, x12
 150:	ldr	x12, [x21, #64]
 154:	ldr	x13, [x12, #40]
 158:	cbnz	x13, 184 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x184>
 15c:	b	310 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x310>
 160:	sub	x11, x11, #0x10
 164:	ldr	x12, [x21, #64]
 168:	ldr	x13, [x12, #40]
 16c:	cbnz	x13, 184 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x184>
 170:	b	310 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x310>
 174:	sub	x11, x11, #0x8
 178:	ldr	x12, [x21, #64]
 17c:	ldr	x13, [x12, #40]
 180:	cbz	x13, 310 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x310>
 184:	ldr	w13, [x12, #48]
 188:	sub	x10, x11, x10
 18c:	lsr	x11, x10, #3
 190:	cmp	w13, w11
 194:	b.ls	3d0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x3d0>  // b.plast
 198:	ldr	x11, [x12, #32]
 19c:	ubfx	x19, x10, #3, #32
 1a0:	add	x13, x11, x19, lsl #5
 1a4:	ldr	x10, [x13, #24]!
 1a8:	ldur	w27, [x13, #-16]
 1ac:	cbz	x10, 284 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x284>
 1b0:	cbz	w27, 5c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x5c>
 1b4:	mov	w19, wzr
 1b8:	mov	w26, w9
 1bc:	ldr	w20, [x10]
 1c0:	ldr	w9, [x12, #48]
 1c4:	cmp	w9, w20
 1c8:	b.ls	3d0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x3d0>  // b.plast
 1cc:	ldr	x9, [x12, #32]
 1d0:	add	x25, x9, x20, lsl #5
 1d4:	ldr	w10, [x25, #8]!
 1d8:	cbz	w10, 260 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x260>
 1dc:	ldr	w9, [x21, #84]
 1e0:	mov	w23, wzr
 1e4:	sub	w28, w10, #0x1
 1e8:	mul	w10, w10, w27
 1ec:	mov	x22, x26
 1f0:	lsl	w24, w0, w23
 1f4:	cmp	w8, w9
 1f8:	bfi	x22, x10, #32, #32
 1fc:	b.cs	238 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x238>  // b.hs, b.nlast
 200:	ldr	x9, [x21, #72]
 204:	umaddl	x8, w8, w17, x9
 208:	stp	x20, x24, [x8]
 20c:	str	x22, [x8, #16]
 210:	ldp	w8, w9, [x21, #80]
 214:	cmp	w8, w9
 218:	b.cs	3b0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x3b0>  // b.hs, b.nlast
 21c:	add	w8, w8, #0x1
 220:	cmp	w28, w23
 224:	str	w8, [x21, #80]
 228:	b.eq	260 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x260>  // b.none
 22c:	ldr	w10, [x25]
 230:	add	w23, w23, #0x1
 234:	b	1e8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x1e8>
 238:	ldr	x0, [sp, #24]
 23c:	mov	x1, xzr
 240:	stp	x13, x16, [sp, #32]
 244:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 248:	ldp	x13, x16, [sp, #32]
 24c:	ldr	x18, [sp, #16]
 250:	ldr	w8, [x21, #80]
 254:	mov	w0, #0x1                   	// #1
 258:	mov	w17, #0x18                  	// #24
 25c:	b	200 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x200>
 260:	add	w19, w19, #0x1
 264:	cmp	w19, w27
 268:	b.eq	5c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x5c>  // b.none
 26c:	ldr	x12, [x21, #64]
 270:	ldr	x9, [x13]
 274:	ldr	x11, [x12, #40]
 278:	add	x10, x9, w19, uxtw #2
 27c:	cbnz	x11, 1bc <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x1bc>
 280:	b	310 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x310>
 284:	cbz	w27, 5c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x5c>
 288:	ldr	w10, [x21, #84]
 28c:	mov	w22, w9
 290:	mov	w20, wzr
 294:	bfi	x22, x27, #32, #32
 298:	cmp	w8, w10
 29c:	lsl	w23, w0, w20
 2a0:	b.cs	2d8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x2d8>  // b.hs, b.nlast
 2a4:	ldr	x9, [x21, #72]
 2a8:	umaddl	x8, w8, w17, x9
 2ac:	stp	x19, x23, [x8]
 2b0:	str	x22, [x8, #16]
 2b4:	ldp	w8, w10, [x21, #80]
 2b8:	cmp	w8, w10
 2bc:	b.cs	3b0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x3b0>  // b.hs, b.nlast
 2c0:	add	w20, w20, #0x1
 2c4:	add	w8, w8, #0x1
 2c8:	cmp	w27, w20
 2cc:	str	w8, [x21, #80]
 2d0:	b.ne	298 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x298>  // b.any
 2d4:	b	5c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x5c>
 2d8:	ldr	x0, [sp, #24]
 2dc:	mov	x1, xzr
 2e0:	mov	x24, x16
 2e4:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 2e8:	ldr	x18, [sp, #16]
 2ec:	ldr	w8, [x21, #80]
 2f0:	mov	w0, #0x1                   	// #1
 2f4:	mov	w17, #0x18                  	// #24
 2f8:	mov	x16, x24
 2fc:	b	2a4 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x2a4>
 300:	add	x11, x11, #0x8
 304:	ldr	x12, [x21, #64]
 308:	ldr	x13, [x12, #40]
 30c:	cbnz	x13, 184 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x184>
 310:	adrp	x0, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 314:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 318:	adrp	x3, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 31c:	add	x0, x0, #0x0
 320:	add	x1, x1, #0x0
 324:	add	x3, x3, #0x0
 328:	mov	w2, #0x154                 	// #340
 32c:	bl	0 <__assert_fail>
 330:	mov	w10, #0x4                   	// #4
 334:	ldr	x9, [x21, #72]
 338:	stur	w10, [x29, #-32]
 33c:	ldr	x10, [sp]
 340:	mov	w8, w8
 344:	stur	x8, [x29, #-8]
 348:	add	x19, x21, #0x18
 34c:	stp	x10, x9, [x29, #-24]
 350:	ldr	x20, [x21, #40]
 354:	cmp	x20, x19
 358:	b.eq	384 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x384>  // b.none
 35c:	ldr	x0, [x20, #32]
 360:	sub	x1, x29, #0x20
 364:	ldr	x8, [x0]
 368:	ldr	x8, [x8, #16]
 36c:	blr	x8
 370:	mov	x0, x20
 374:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 378:	mov	x20, x0
 37c:	cmp	x0, x19
 380:	b.ne	35c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x35c>  // b.any
 384:	ldr	x9, [sp, #8]
 388:	ldp	x20, x19, [sp, #160]
 38c:	ldp	x22, x21, [sp, #144]
 390:	ldp	x24, x23, [sp, #128]
 394:	ldp	x26, x25, [sp, #112]
 398:	ldp	x28, x27, [sp, #96]
 39c:	ldp	x29, x30, [sp, #80]
 3a0:	mov	w8, #0x1                   	// #1
 3a4:	str	x8, [x9]
 3a8:	add	sp, sp, #0xb0
 3ac:	ret
 3b0:	adrp	x0, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 3b4:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 3b8:	adrp	x3, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 3bc:	add	x0, x0, #0x0
 3c0:	add	x1, x1, #0x0
 3c4:	add	x3, x3, #0x0
 3c8:	mov	w2, #0x43                  	// #67
 3cc:	bl	0 <__assert_fail>
 3d0:	adrp	x0, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 3d4:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 3d8:	adrp	x3, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 3dc:	add	x0, x0, #0x0
 3e0:	add	x1, x1, #0x0
 3e4:	add	x3, x3, #0x0
 3e8:	mov	w2, #0x156                 	// #342
 3ec:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca17InstructionTablesD2Ev:

0000000000000000 <_ZN4llvm3mca17InstructionTablesD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17InstructionTablesD2Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #184]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0xc8
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm3mca17InstructionTablesD2Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x0, [x19, #72]
  38:	add	x8, x19, #0x58
  3c:	cmp	x0, x8
  40:	b.eq	48 <_ZN4llvm3mca17InstructionTablesD2Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	mov	x0, x19
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca17InstructionTablesD0Ev:

0000000000000000 <_ZN4llvm3mca17InstructionTablesD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17InstructionTablesD0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #184]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0xc8
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm3mca17InstructionTablesD0Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x0, [x19, #72]
  38:	add	x8, x19, #0x58
  3c:	cmp	x0, x8
  40:	b.eq	48 <_ZN4llvm3mca17InstructionTablesD0Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  50:	mov	x0, x19
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3mca17InstructionTables17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca17InstructionTables17hasWorkToCompleteEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm3mca5Stage10cycleStartEv:

0000000000000000 <_ZN4llvm3mca5Stage10cycleStartEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	add	x8, x21, x21, lsl #1
  6c:	lsl	x0, x8, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, ec <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xec>
  c4:	add	x8, x8, x8, lsl #1
  c8:	lsl	x8, x8, #3
  cc:	mov	x9, x20
  d0:	ldr	x10, [x0, #16]
  d4:	ldr	q0, [x0], #24
  d8:	subs	x8, x8, #0x18
  dc:	str	x10, [x9, #16]
  e0:	str	q0, [x9], #24
  e4:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xd0>  // b.any
  e8:	ldr	x0, [x19]
  ec:	add	x8, x19, #0x10
  f0:	cmp	x0, x8
  f4:	b.eq	fc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xfc>  // b.none
  f8:	bl	0 <free>
  fc:	str	x20, [x19]
 100:	str	w21, [x19, #12]
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret

MicroOpQueueStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w9, [x0, #212]
  14:	ldr	w10, [x0, #72]
  18:	cmp	w10, w9
  1c:	b.ls	15c <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x15c>  // b.plast
  20:	mov	x20, x8
  24:	ldr	x8, [x0, #64]
  28:	mov	x19, x0
  2c:	ldr	q0, [x8, x9, lsl #4]
  30:	str	q0, [sp]
  34:	ldr	x8, [sp, #8]
  38:	cbz	x8, 11c <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x11c>
  3c:	ldr	x0, [x19, #8]
  40:	cbz	x0, 11c <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x11c>
  44:	ldr	x8, [x0]
  48:	mov	x1, sp
  4c:	ldr	x8, [x8, #16]
  50:	blr	x8
  54:	tbz	w0, #0, 11c <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x11c>
  58:	ldr	x0, [x19, #8]
  5c:	cbz	x0, 134 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x134>
  60:	ldr	x8, [x0]
  64:	mov	x1, sp
  68:	ldr	x8, [x8, #16]
  6c:	blr	x8
  70:	tbz	w0, #0, 134 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x134>
  74:	ldr	x0, [x19, #8]
  78:	mov	x1, sp
  7c:	ldr	x8, [x0]
  80:	ldr	x9, [x8, #48]
  84:	mov	x8, x20
  88:	blr	x9
  8c:	ldr	x9, [x20]
  90:	tst	x9, #0xfffffffffffffffe
  94:	and	x8, x9, #0xfffffffffffffffe
  98:	cset	w9, ne  // ne = any
  9c:	orr	x9, x8, x9
  a0:	str	x9, [x20]
  a4:	cbnz	x8, ac <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0xac>
  a8:	cbnz	x9, 154 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x154>
  ac:	cbnz	x8, 124 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x124>
  b0:	ldr	w8, [x19, #212]
  b4:	ldr	w9, [x19, #72]
  b8:	cmp	w9, w8
  bc:	b.ls	15c <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x15c>  // b.plast
  c0:	ldr	x10, [x19, #64]
  c4:	add	x11, x10, x8, lsl #4
  c8:	str	xzr, [x11, #8]
  cc:	ldr	x11, [sp, #8]
  d0:	ldr	w12, [x19, #224]
  d4:	ldr	x11, [x11]
  d8:	ldr	w11, [x11, #316]
  dc:	cmp	w11, w9
  e0:	csel	w11, w11, w9, cc  // cc = lo, ul, last
  e4:	cmp	w11, #0x0
  e8:	csinc	w11, w11, wzr, ne  // ne = any
  ec:	add	w8, w11, w8
  f0:	add	w11, w12, w11
  f4:	udiv	w12, w8, w9
  f8:	msub	w8, w12, w9, w8
  fc:	str	w11, [x19, #224]
 100:	str	w8, [x19, #212]
 104:	add	x8, x10, w8, uxtw #4
 108:	ldr	w9, [x8]
 10c:	str	w9, [sp]
 110:	ldr	x8, [x8, #8]
 114:	str	x8, [sp, #8]
 118:	cbnz	x8, 3c <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x3c>
 11c:	mov	w8, #0x1                   	// #1
 120:	str	x8, [x20]
 124:	ldp	x20, x19, [sp, #32]
 128:	ldp	x29, x30, [sp, #16]
 12c:	add	sp, sp, #0x30
 130:	ret
 134:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 138:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 13c:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 140:	add	x0, x0, #0x0
 144:	add	x1, x1, #0x0
 148:	add	x3, x3, #0x0
 14c:	mov	w2, #0x47                  	// #71
 150:	bl	0 <__assert_fail>
 154:	mov	x0, x20
 158:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 15c:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 160:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 164:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x95                  	// #149
 178:	bl	0 <__assert_fail>

000000000000017c <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb>:
 17c:	stp	x29, x30, [sp, #-32]!
 180:	stp	x20, x19, [sp, #16]
 184:	mov	x29, sp
 188:	str	xzr, [x0, #8]
 18c:	adrp	x11, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 190:	ldr	x11, [x11]
 194:	adrp	x12, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 198:	ldr	d0, [x12]
 19c:	mov	x9, x0
 1a0:	cmp	w1, #0x0
 1a4:	add	x10, x0, #0x50
 1a8:	str	wzr, [x9, #24]!
 1ac:	add	x11, x11, #0x10
 1b0:	csinc	w20, w1, wzr, ne  // ne = any
 1b4:	mov	x19, x0
 1b8:	and	w8, w3, #0x1
 1bc:	stp	xzr, x9, [x0, #32]
 1c0:	stp	x9, xzr, [x0, #48]
 1c4:	str	x11, [x0]
 1c8:	str	x10, [x0, #64]!
 1cc:	cmp	w20, #0x8
 1d0:	str	xzr, [x19, #208]
 1d4:	stp	w2, wzr, [x19, #216]
 1d8:	str	d0, [x19, #72]
 1dc:	strb	w8, [x19, #228]
 1e0:	b.ls	200 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0x84>  // b.plast
 1e4:	mov	x1, x20
 1e8:	bl	0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 1ec:	ldr	w9, [x19, #72]
 1f0:	cmp	w9, w20
 1f4:	b.eq	274 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0xf8>  // b.none
 1f8:	ldr	x10, [x19, #64]
 1fc:	b	204 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0x88>
 200:	mov	w9, wzr
 204:	mov	w12, w9
 208:	add	x8, x10, x20, lsl #4
 20c:	mvn	x11, x12
 210:	add	x11, x8, x11, lsl #4
 214:	sub	x11, x11, x10
 218:	lsr	x11, x11, #4
 21c:	add	x9, x10, w9, uxtw #4
 220:	cbz	x11, 260 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0xe4>
 224:	add	x11, x11, #0x1
 228:	add	x12, x10, x12, lsl #4
 22c:	and	x10, x11, #0x1ffffffffffffffe
 230:	add	x9, x9, x10, lsl #4
 234:	add	x12, x12, #0x10
 238:	mov	x13, x10
 23c:	stur	wzr, [x12, #-16]
 240:	str	wzr, [x12]
 244:	stur	xzr, [x12, #-8]
 248:	str	xzr, [x12, #8]
 24c:	subs	x13, x13, #0x2
 250:	add	x12, x12, #0x20
 254:	b.ne	23c <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0xc0>  // b.any
 258:	cmp	x11, x10
 25c:	b.eq	274 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0xf8>  // b.none
 260:	str	wzr, [x9]
 264:	str	xzr, [x9, #8]
 268:	add	x9, x9, #0x10
 26c:	cmp	x9, x8
 270:	b.ne	260 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0xe4>  // b.any
 274:	ldr	w8, [x19, #76]
 278:	cmp	w8, w20
 27c:	b.cc	294 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0x118>  // b.lo, b.ul, b.last
 280:	str	w20, [x19, #72]
 284:	str	w20, [x19, #224]
 288:	ldp	x20, x19, [sp, #16]
 28c:	ldp	x29, x30, [sp], #32
 290:	ret
 294:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 298:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 29c:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 2a0:	add	x0, x0, #0x0
 2a4:	add	x1, x1, #0x0
 2a8:	add	x3, x3, #0x0
 2ac:	mov	w2, #0x43                  	// #67
 2b0:	bl	0 <__assert_fail>

00000000000002b4 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>:
 2b4:	stp	x29, x30, [sp, #-16]!
 2b8:	mov	x29, sp
 2bc:	ldr	w9, [x0, #208]
 2c0:	ldr	w10, [x0, #72]
 2c4:	cmp	w10, w9
 2c8:	b.ls	334 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE+0x80>  // b.plast
 2cc:	ldr	x11, [x0, #64]
 2d0:	ldr	w12, [x1]
 2d4:	add	x11, x11, x9, lsl #4
 2d8:	str	w12, [x11]
 2dc:	ldr	x12, [x1, #8]
 2e0:	str	x12, [x11, #8]
 2e4:	ldr	x11, [x1, #8]
 2e8:	ldp	w12, w13, [x0, #220]
 2ec:	ldr	x11, [x11]
 2f0:	add	w12, w12, #0x1
 2f4:	ldr	w11, [x11, #316]
 2f8:	str	w12, [x0, #220]
 2fc:	mov	w12, #0x1                   	// #1
 300:	cmp	w11, w10
 304:	csel	w11, w11, w10, cc  // cc = lo, ul, last
 308:	cmp	w11, #0x0
 30c:	csinc	w11, w11, wzr, ne  // ne = any
 310:	add	w9, w11, w9
 314:	sub	w11, w13, w11
 318:	udiv	w13, w9, w10
 31c:	msub	w9, w13, w10, w9
 320:	str	w11, [x0, #224]
 324:	str	w9, [x0, #208]
 328:	str	x12, [x8]
 32c:	ldp	x29, x30, [sp], #16
 330:	ret
 334:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 338:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 33c:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 340:	add	x0, x0, #0x0
 344:	add	x1, x1, #0x0
 348:	add	x3, x3, #0x0
 34c:	mov	w2, #0x95                  	// #149
 350:	bl	0 <__assert_fail>

0000000000000354 <_ZN4llvm3mca17MicroOpQueueStage10cycleStartEv>:
 354:	ldrb	w9, [x0, #228]
 358:	str	wzr, [x0, #220]
 35c:	cbz	w9, 36c <_ZN4llvm3mca17MicroOpQueueStage10cycleStartEv+0x18>
 360:	mov	w9, #0x1                   	// #1
 364:	str	x9, [x8]
 368:	ret
 36c:	b	0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>

0000000000000370 <_ZN4llvm3mca17MicroOpQueueStage8cycleEndEv>:
 370:	ldrb	w9, [x0, #228]
 374:	cbz	w9, 37c <_ZN4llvm3mca17MicroOpQueueStage8cycleEndEv+0xc>
 378:	b	0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 37c:	mov	w9, #0x1                   	// #1
 380:	str	x9, [x8]
 384:	ret

Disassembly of section .text._ZN4llvm3mca17MicroOpQueueStageD2Ev:

0000000000000000 <_ZN4llvm3mca17MicroOpQueueStageD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17MicroOpQueueStageD2Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #64]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0x50
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm3mca17MicroOpQueueStageD2Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca17MicroOpQueueStageD0Ev:

0000000000000000 <_ZN4llvm3mca17MicroOpQueueStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17MicroOpQueueStageD0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #64]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0x50
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm3mca17MicroOpQueueStageD0Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE>:
   0:	ldr	w8, [x0, #216]
   4:	cbz	w8, 1c <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE+0x1c>
   8:	ldr	w9, [x0, #220]
   c:	cmp	w9, w8
  10:	b.ne	1c <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE+0x1c>  // b.any
  14:	mov	w0, wzr
  18:	ret
  1c:	ldr	x8, [x1, #8]
  20:	ldr	w9, [x0, #72]
  24:	ldr	w10, [x0, #224]
  28:	ldr	x8, [x8]
  2c:	ldr	w8, [x8, #316]
  30:	cmp	w8, w9
  34:	csel	w8, w8, w9, cc  // cc = lo, ul, last
  38:	cmp	w8, #0x0
  3c:	csinc	w8, w8, wzr, ne  // ne = any
  40:	cmp	w8, w10
  44:	cset	w0, ls  // ls = plast
  48:	ret

Disassembly of section .text._ZNK4llvm3mca17MicroOpQueueStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca17MicroOpQueueStage17hasWorkToCompleteEv>:
   0:	ldr	w8, [x0, #224]
   4:	ldr	w9, [x0, #72]
   8:	cmp	w9, w8
   c:	cset	w0, ne  // ne = any
  10:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

RetireStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca11RetireStage10cycleStartEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #64]
  18:	mov	x20, x8
  1c:	ldp	w10, w9, [x0, #16]
  20:	cmp	w9, w10
  24:	b.ne	40 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x40>  // b.any
  28:	mov	w8, #0x1                   	// #1
  2c:	str	x8, [x20]
  30:	ldp	x20, x19, [sp, #32]
  34:	ldr	x21, [sp, #16]
  38:	ldp	x29, x30, [sp], #48
  3c:	ret
  40:	ldr	w8, [x0, #24]
  44:	cbz	w8, 88 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x88>
  48:	add	w21, w8, #0x1
  4c:	subs	w21, w21, #0x1
  50:	b.eq	28 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x28>  // b.none
  54:	bl	0 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>
  58:	ldrb	w8, [x0, #20]
  5c:	cbz	w8, 28 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x28>
  60:	mov	x1, x0
  64:	mov	x0, x19
  68:	bl	bc <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE>
  6c:	ldr	x0, [x19, #64]
  70:	bl	0 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv>
  74:	ldr	x0, [x19, #64]
  78:	ldp	w9, w8, [x0, #16]
  7c:	cmp	w8, w9
  80:	b.ne	4c <_ZN4llvm3mca11RetireStage10cycleStartEv+0x4c>  // b.any
  84:	b	28 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x28>
  88:	bl	0 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>
  8c:	ldrb	w8, [x0, #20]
  90:	cbz	w8, 28 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x28>
  94:	mov	x1, x0
  98:	mov	x0, x19
  9c:	bl	bc <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE>
  a0:	ldr	x0, [x19, #64]
  a4:	bl	0 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv>
  a8:	ldr	x0, [x19, #64]
  ac:	ldp	w9, w8, [x0, #16]
  b0:	cmp	w8, w9
  b4:	b.ne	88 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x88>  // b.any
  b8:	b	28 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x28>

00000000000000bc <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE>:
  bc:	sub	sp, sp, #0x70
  c0:	stp	x29, x30, [sp, #64]
  c4:	stp	x22, x21, [sp, #80]
  c8:	stp	x20, x19, [sp, #96]
  cc:	add	x29, sp, #0x40
  d0:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
  d4:	ldr	x8, [x8]
  d8:	mov	x20, x1
  dc:	mov	x19, x0
  e0:	ldrb	w8, [x8]
  e4:	cbz	w8, 188 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0xcc>
  e8:	adrp	x0, 0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
  ec:	add	x0, x0, #0x0
  f0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
  f4:	tbz	w0, #0, 188 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0xcc>
  f8:	bl	0 <_ZN4llvm4dbgsEv>
  fc:	ldp	x9, x8, [x0, #16]
 100:	mov	x21, x0
 104:	sub	x9, x9, x8
 108:	cmp	x9, #0x19
 10c:	b.hi	12c <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x70>  // b.pmore
 110:	adrp	x1, 0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
 114:	add	x1, x1, #0x0
 118:	mov	w2, #0x1a                  	// #26
 11c:	mov	x0, x21
 120:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 124:	mov	x21, x0
 128:	b	150 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x94>
 12c:	adrp	x9, 0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
 130:	add	x9, x9, #0x0
 134:	ldur	q0, [x9, #10]
 138:	ldr	q1, [x9]
 13c:	stur	q0, [x8, #10]
 140:	str	q1, [x8]
 144:	ldr	x8, [x21, #24]
 148:	add	x8, x8, #0x1a
 14c:	str	x8, [x21, #24]
 150:	ldr	w1, [x20]
 154:	mov	x0, x21
 158:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 15c:	ldp	x9, x8, [x21, #16]
 160:	cmp	x8, x9
 164:	b.cs	17c <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0xc0>  // b.hs, b.nlast
 168:	add	x9, x8, #0x1
 16c:	mov	w10, #0xa                   	// #10
 170:	str	x9, [x21, #24]
 174:	strb	w10, [x8]
 178:	b	188 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0xcc>
 17c:	mov	w1, #0xa                   	// #10
 180:	mov	x0, x21
 184:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 188:	ldr	x8, [x19, #72]
 18c:	add	x9, sp, #0x20
 190:	add	x1, x9, #0x10
 194:	ldr	w21, [x8, #24]
 198:	adrp	x8, 0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
 19c:	ldr	d0, [x8]
 1a0:	str	x1, [sp, #32]
 1a4:	cmp	w21, #0x5
 1a8:	str	d0, [sp, #40]
 1ac:	b.cc	1c8 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x10c>  // b.lo, b.ul, b.last
 1b0:	add	x0, sp, #0x20
 1b4:	mov	w3, #0x4                   	// #4
 1b8:	mov	x2, x21
 1bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 1c0:	ldr	w8, [sp, #44]
 1c4:	b	1cc <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x110>
 1c8:	mov	w8, #0x4                   	// #4
 1cc:	cmp	x8, x21
 1d0:	b.cc	2c8 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x20c>  // b.lo, b.ul, b.last
 1d4:	str	w21, [sp, #40]
 1d8:	cbz	w21, 1ec <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x130>
 1dc:	ldr	x0, [sp, #32]
 1e0:	lsl	x2, x21, #2
 1e4:	mov	w1, wzr
 1e8:	bl	0 <memset>
 1ec:	ldr	x21, [x20, #8]
 1f0:	ldr	x8, [x21]
 1f4:	ldrb	w9, [x8, #324]
 1f8:	cbnz	w9, 204 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x148>
 1fc:	ldrb	w8, [x8, #325]
 200:	cbz	w8, 218 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x15c>
 204:	ldr	x0, [x19, #80]
 208:	mov	x1, x20
 20c:	ldr	x8, [x0]
 210:	ldr	x8, [x8, #40]
 214:	blr	x8
 218:	ldr	w8, [x21, #24]
 21c:	cbz	w8, 24c <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x190>
 220:	ldr	x21, [x21, #16]
 224:	add	x8, x8, x8, lsl #4
 228:	lsl	x22, x8, #3
 22c:	ldr	x0, [x19, #72]
 230:	ldr	x2, [sp, #32]
 234:	ldr	w3, [sp, #40]
 238:	mov	x1, x21
 23c:	bl	0 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE>
 240:	subs	x22, x22, #0x88
 244:	add	x21, x21, #0x88
 248:	b.ne	22c <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x170>  // b.any
 24c:	ldr	x0, [sp, #32]
 250:	ldr	w8, [sp, #40]
 254:	mov	w9, #0x1                   	// #1
 258:	str	w9, [sp]
 25c:	stp	x20, x0, [sp, #8]
 260:	str	x8, [sp, #24]
 264:	ldr	x20, [x19, #40]
 268:	add	x19, x19, #0x18
 26c:	cmp	x20, x19
 270:	b.eq	2a0 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x1e4>  // b.none
 274:	ldr	x0, [x20, #32]
 278:	mov	x1, sp
 27c:	ldr	x8, [x0]
 280:	ldr	x8, [x8, #16]
 284:	blr	x8
 288:	mov	x0, x20
 28c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 290:	mov	x20, x0
 294:	cmp	x0, x19
 298:	b.ne	274 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x1b8>  // b.any
 29c:	ldr	x0, [sp, #32]
 2a0:	add	x8, sp, #0x20
 2a4:	add	x8, x8, #0x10
 2a8:	cmp	x0, x8
 2ac:	b.eq	2b4 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x1f8>  // b.none
 2b0:	bl	0 <free>
 2b4:	ldp	x20, x19, [sp, #96]
 2b8:	ldp	x22, x21, [sp, #80]
 2bc:	ldp	x29, x30, [sp, #64]
 2c0:	add	sp, sp, #0x70
 2c4:	ret
 2c8:	adrp	x0, 0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
 2cc:	adrp	x1, 0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
 2d0:	adrp	x3, 0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
 2d4:	add	x0, x0, #0x0
 2d8:	add	x1, x1, #0x0
 2dc:	add	x3, x3, #0x0
 2e0:	mov	w2, #0x43                  	// #67
 2e4:	bl	0 <__assert_fail>

00000000000002e8 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>:
 2e8:	stp	x29, x30, [sp, #-32]!
 2ec:	str	x19, [sp, #16]
 2f0:	mov	x29, sp
 2f4:	ldr	x9, [x1, #8]
 2f8:	ldr	x0, [x0, #64]
 2fc:	mov	x19, x8
 300:	ldr	w1, [x9, #792]
 304:	bl	0 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj>
 308:	mov	w8, #0x1                   	// #1
 30c:	str	x8, [x19]
 310:	ldr	x19, [sp, #16]
 314:	ldp	x29, x30, [sp], #32
 318:	ret

Disassembly of section .text._ZN4llvm3mca11RetireStageD0Ev:

0000000000000000 <_ZN4llvm3mca11RetireStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3mca11RetireStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca11RetireStage17hasWorkToCompleteEv>:
   0:	ldr	x8, [x0, #64]
   4:	ldp	w8, w9, [x8, #16]
   8:	cmp	w9, w8
   c:	cset	w0, ne  // ne = any
  10:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

Stage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca5StageD1Ev>:
   0:	adrp	x8, 0 <_ZN4llvm3mca5StageD1Ev>
   4:	ldr	x1, [x0, #32]
   8:	ldr	x8, [x8]
   c:	add	x9, x8, #0x10
  10:	add	x8, x0, #0x10
  14:	str	x9, [x0]
  18:	mov	x0, x8
  1c:	b	0 <_ZN4llvm3mca5StageD1Ev>

0000000000000020 <_ZN4llvm3mca5StageD0Ev>:
  20:	brk	#0x1

0000000000000024 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>:
  24:	stp	x29, x30, [sp, #-64]!
  28:	str	x23, [sp, #16]
  2c:	stp	x22, x21, [sp, #32]
  30:	stp	x20, x19, [sp, #48]
  34:	mov	x29, sp
  38:	ldr	x9, [x0, #32]
  3c:	mov	x19, x1
  40:	add	x23, x0, #0x10
  44:	add	x20, x0, #0x18
  48:	cbz	x9, 88 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x64>
  4c:	ldr	x8, [x9, #32]
  50:	mov	x21, x9
  54:	add	x9, x9, #0x10
  58:	add	x10, x21, #0x18
  5c:	cmp	x8, x19
  60:	csel	x9, x9, x10, hi  // hi = pmore
  64:	ldr	x9, [x9]
  68:	cbnz	x9, 4c <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x28>
  6c:	cmp	x8, x19
  70:	mov	x0, x21
  74:	b.ls	a0 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x7c>  // b.plast
  78:	ldr	x8, [x23, #24]
  7c:	cmp	x8, x21
  80:	b.ne	98 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x74>  // b.any
  84:	b	ac <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x88>
  88:	mov	x21, x20
  8c:	ldr	x8, [x23, #24]
  90:	cmp	x8, x21
  94:	b.eq	ac <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x88>  // b.none
  98:	mov	x0, x21
  9c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  a0:	ldr	x8, [x0, #32]
  a4:	cmp	x8, x19
  a8:	b.cs	f8 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xd4>  // b.hs, b.nlast
  ac:	cbz	x21, f8 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xd4>
  b0:	cmp	x20, x21
  b4:	b.eq	c8 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xa4>  // b.none
  b8:	ldr	x8, [x21, #32]
  bc:	cmp	x8, x19
  c0:	cset	w22, hi  // hi = pmore
  c4:	b	cc <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xa8>
  c8:	mov	w22, #0x1                   	// #1
  cc:	mov	w0, #0x28                  	// #40
  d0:	bl	0 <_Znwm>
  d4:	mov	x1, x0
  d8:	str	x19, [x0, #32]
  dc:	mov	w0, w22
  e0:	mov	x2, x21
  e4:	mov	x3, x20
  e8:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  ec:	ldr	x8, [x23, #40]
  f0:	add	x8, x8, #0x1
  f4:	str	x8, [x23, #40]
  f8:	ldp	x20, x19, [sp, #48]
  fc:	ldp	x22, x21, [sp, #32]
 100:	ldr	x23, [sp, #16]
 104:	ldp	x29, x30, [sp], #64
 108:	ret

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm3mca5Stage10cycleStartEv:

0000000000000000 <_ZN4llvm3mca5Stage10cycleStartEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 3c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x3c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
  28:	ldr	x21, [x20, #16]
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	mov	x20, x21
  38:	cbnz	x21, 1c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x1c>
  3c:	ldp	x20, x19, [sp, #32]
  40:	ldr	x21, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	ret

Support.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca14ResourceCyclespLERKS1_>:
   0:	ldr	w8, [x0, #4]
   4:	ldr	w9, [x1, #4]
   8:	cmp	w8, w9
   c:	b.ne	24 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x24>  // b.any
  10:	ldr	w8, [x1]
  14:	ldr	w9, [x0]
  18:	add	w8, w9, w8
  1c:	str	w8, [x0]
  20:	ret
  24:	mov	x10, x8
  28:	cbz	w9, 48 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x48>
  2c:	mov	x11, x8
  30:	mov	x12, x9
  34:	mov	x10, x12
  38:	udiv	x12, x11, x12
  3c:	msub	x12, x12, x10, x11
  40:	mov	x11, x10
  44:	cbnz	x12, 34 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x34>
  48:	ldr	w12, [x0]
  4c:	mul	w11, w9, w8
  50:	ldr	w13, [x1]
  54:	udiv	w10, w11, w10
  58:	udiv	w8, w10, w8
  5c:	udiv	w9, w10, w9
  60:	mul	w8, w8, w12
  64:	madd	w8, w9, w13, w8
  68:	stp	w8, w10, [x0]
  6c:	ret

0000000000000070 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>:
  70:	sub	sp, sp, #0x90
  74:	stp	x29, x30, [sp, #48]
  78:	stp	x28, x27, [sp, #64]
  7c:	stp	x26, x25, [sp, #80]
  80:	stp	x24, x23, [sp, #96]
  84:	stp	x22, x21, [sp, #112]
  88:	stp	x20, x19, [sp, #128]
  8c:	add	x29, sp, #0x30
  90:	ldr	w9, [x0, #48]
  94:	cmp	x2, x9
  98:	b.ne	4ec <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x47c>  // b.any
  9c:	mov	x20, x2
  a0:	cbz	x2, 48c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x41c>
  a4:	mov	x19, x0
  a8:	mov	x21, x1
  ac:	cmp	w9, #0x2
  b0:	str	xzr, [x1]
  b4:	b.cc	18c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x11c>  // b.lo, b.ul, b.last
  b8:	ldr	x8, [x19, #40]
  bc:	cbz	x8, 4ac <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x43c>
  c0:	ldr	x11, [x19, #32]
  c4:	mov	w8, wzr
  c8:	mov	w10, #0x1                   	// #1
  cc:	mov	w12, #0x1                   	// #1
  d0:	add	x11, x11, #0x38
  d4:	b	e8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x78>
  d8:	add	x12, x12, #0x1
  dc:	cmp	x20, x12
  e0:	add	x11, x11, #0x20
  e4:	b.eq	108 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x98>  // b.none
  e8:	ldr	x13, [x11]
  ec:	cbnz	x13, d8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x68>
  f0:	cmp	x20, x12
  f4:	b.ls	48c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x41c>  // b.plast
  f8:	lsl	x13, x10, x8
  fc:	add	w8, w8, #0x1
 100:	str	x13, [x21, x12, lsl #3]
 104:	b	d8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x68>
 108:	cmp	w9, #0x2
 10c:	b.cc	18c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x11c>  // b.lo, b.ul, b.last
 110:	ldr	x9, [x19, #40]
 114:	cbz	x9, 4ac <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x43c>
 118:	ldr	x9, [x19, #32]
 11c:	mov	w10, #0x1                   	// #1
 120:	mov	w11, #0x1                   	// #1
 124:	b	138 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xc8>
 128:	add	w8, w8, #0x1
 12c:	add	x11, x11, #0x1
 130:	cmp	x11, x20
 134:	b.eq	18c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x11c>  // b.none
 138:	add	x12, x9, x11, lsl #5
 13c:	ldr	x12, [x12, #24]
 140:	cbz	x12, 12c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xbc>
 144:	cmp	x20, x11
 148:	b.ls	48c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x41c>  // b.plast
 14c:	lsl	x13, x10, x8
 150:	str	x13, [x21, x11, lsl #3]
 154:	add	x14, x9, x11, lsl #5
 158:	ldr	w14, [x14, #8]
 15c:	cbz	w14, 128 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xb8>
 160:	mov	x15, xzr
 164:	ldr	w16, [x12, x15, lsl #2]
 168:	cmp	x20, x16
 16c:	b.ls	48c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x41c>  // b.plast
 170:	ldr	x16, [x21, x16, lsl #3]
 174:	add	x15, x15, #0x1
 178:	cmp	x15, x14
 17c:	orr	x13, x13, x16
 180:	str	x13, [x21, x11, lsl #3]
 184:	b.cc	164 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xf4>  // b.lo, b.ul, b.last
 188:	b	128 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xb8>
 18c:	adrp	x28, 0 <_ZN4llvm9DebugFlagE>
 190:	ldr	x28, [x28]
 194:	ldrb	w8, [x28]
 198:	cbz	w8, 1f0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x180>
 19c:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 1a0:	add	x0, x0, #0x0
 1a4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 1a8:	tbz	w0, #0, 1f0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x180>
 1ac:	bl	0 <_ZN4llvm4dbgsEv>
 1b0:	ldp	x9, x8, [x0, #16]
 1b4:	sub	x9, x9, x8
 1b8:	cmp	x9, #0x19
 1bc:	b.hi	428 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3b8>  // b.pmore
 1c0:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 1c4:	add	x1, x1, #0x0
 1c8:	mov	w2, #0x1a                  	// #26
 1cc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 1d0:	ldp	x9, x8, [x0, #16]
 1d4:	cmp	x9, x8
 1d8:	b.eq	454 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3e4>  // b.none
 1dc:	mov	w9, #0xa                   	// #10
 1e0:	strb	w9, [x8]
 1e4:	ldr	x8, [x0, #24]
 1e8:	add	x8, x8, #0x1
 1ec:	str	x8, [x0, #24]
 1f0:	ldr	w23, [x19, #48]
 1f4:	cbz	w23, 46c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3fc>
 1f8:	adrp	x22, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 1fc:	mov	x24, xzr
 200:	add	x22, x22, #0x0
 204:	b	224 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x1b4>
 208:	add	x8, x0, #0x1
 20c:	str	x8, [x25, #24]
 210:	mov	w8, #0xa                   	// #10
 214:	strb	w8, [x0]
 218:	add	x24, x24, #0x1
 21c:	cmp	x24, x23
 220:	b.eq	46c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3fc>  // b.none
 224:	ldr	x8, [x19, #40]
 228:	cbz	x8, 4ac <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x43c>
 22c:	ldr	w8, [x19, #48]
 230:	cmp	x24, x8
 234:	b.cs	4cc <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x45c>  // b.hs, b.nlast
 238:	ldrb	w8, [x28]
 23c:	cbz	w8, 218 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x1a8>
 240:	ldr	x26, [x19, #32]
 244:	mov	x0, x22
 248:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 24c:	tbz	w0, #0, 218 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x1a8>
 250:	bl	0 <_ZN4llvm4dbgsEv>
 254:	ldp	x9, x8, [x0, #16]
 258:	cmp	x8, x9
 25c:	b.cs	274 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x204>  // b.hs, b.nlast
 260:	add	x9, x8, #0x1
 264:	str	x9, [x0, #24]
 268:	mov	w9, #0x5b                  	// #91
 26c:	strb	w9, [x8]
 270:	b	27c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x20c>
 274:	mov	w1, #0x5b                  	// #91
 278:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 27c:	mov	w8, #0x2                   	// #2
 280:	add	x1, sp, #0x18
 284:	stp	xzr, x24, [sp, #24]
 288:	str	w8, [sp, #40]
 28c:	strh	wzr, [sp, #44]
 290:	strb	wzr, [sp, #46]
 294:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
 298:	ldp	x9, x8, [x0, #16]
 29c:	sub	x9, x9, x8
 2a0:	cmp	x9, #0x1
 2a4:	b.hi	2e8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x278>  // b.pmore
 2a8:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 2ac:	mov	w2, #0x2                   	// #2
 2b0:	add	x1, x1, #0x0
 2b4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 2b8:	ldp	x9, x8, [x0, #16]
 2bc:	sub	x9, x9, x8
 2c0:	cmp	x9, #0x2
 2c4:	b.ls	308 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x298>  // b.plast
 2c8:	mov	w9, #0x20                  	// #32
 2cc:	strb	w9, [x8, #2]
 2d0:	mov	w9, #0x2d20                	// #11552
 2d4:	strh	w9, [x8]
 2d8:	ldr	x8, [x0, #24]
 2dc:	add	x8, x8, #0x3
 2e0:	str	x8, [x0, #24]
 2e4:	b	318 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x2a8>
 2e8:	mov	w9, #0x205d                	// #8285
 2ec:	strh	w9, [x8]
 2f0:	ldp	x9, x8, [x0, #16]
 2f4:	add	x8, x8, #0x2
 2f8:	str	x8, [x0, #24]
 2fc:	sub	x9, x9, x8
 300:	cmp	x9, #0x2
 304:	b.hi	2c8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x258>  // b.pmore
 308:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 30c:	mov	w2, #0x3                   	// #3
 310:	add	x1, x1, #0x0
 314:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 318:	cmp	x20, x24
 31c:	b.ls	48c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x41c>  // b.plast
 320:	ldr	x8, [x21, x24, lsl #3]
 324:	mov	w9, #0x10                  	// #16
 328:	str	w9, [sp, #16]
 32c:	mov	w9, #0x1                   	// #1
 330:	mov	x1, sp
 334:	strh	w9, [sp, #20]
 338:	stp	x8, xzr, [sp]
 33c:	strb	w9, [sp, #22]
 340:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
 344:	ldp	x9, x8, [x0, #16]
 348:	mov	x25, x0
 34c:	sub	x9, x9, x8
 350:	cmp	x9, #0x2
 354:	b.hi	3b4 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x344>  // b.pmore
 358:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 35c:	mov	w2, #0x3                   	// #3
 360:	mov	x0, x25
 364:	add	x1, x1, #0x0
 368:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 36c:	mov	x25, x0
 370:	lsl	x8, x24, #5
 374:	ldr	x26, [x26, x8]
 378:	cbz	x26, 3dc <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x36c>
 37c:	mov	x0, x26
 380:	bl	0 <strlen>
 384:	mov	x27, x0
 388:	ldp	x8, x0, [x25, #16]
 38c:	sub	x8, x8, x0
 390:	cmp	x27, x8
 394:	b.ls	3f0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x380>  // b.plast
 398:	mov	x0, x25
 39c:	mov	x1, x26
 3a0:	mov	x2, x27
 3a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 3a8:	mov	x25, x0
 3ac:	ldr	x0, [x0, #24]
 3b0:	b	40c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x39c>
 3b4:	mov	w9, #0x20                  	// #32
 3b8:	strb	w9, [x8, #2]
 3bc:	mov	w9, #0x2d20                	// #11552
 3c0:	strh	w9, [x8]
 3c4:	ldr	x8, [x25, #24]
 3c8:	add	x8, x8, #0x3
 3cc:	str	x8, [x25, #24]
 3d0:	lsl	x8, x24, #5
 3d4:	ldr	x26, [x26, x8]
 3d8:	cbnz	x26, 37c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x30c>
 3dc:	mov	x27, xzr
 3e0:	ldp	x8, x0, [x25, #16]
 3e4:	sub	x8, x8, x0
 3e8:	cmp	x27, x8
 3ec:	b.hi	398 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x328>  // b.pmore
 3f0:	cbz	x27, 40c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x39c>
 3f4:	mov	x1, x26
 3f8:	mov	x2, x27
 3fc:	bl	0 <memcpy>
 400:	ldr	x8, [x25, #24]
 404:	add	x0, x8, x27
 408:	str	x0, [x25, #24]
 40c:	ldr	x8, [x25, #16]
 410:	cmp	x0, x8
 414:	b.cc	208 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x198>  // b.lo, b.ul, b.last
 418:	mov	w1, #0xa                   	// #10
 41c:	mov	x0, x25
 420:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 424:	b	218 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x1a8>
 428:	adrp	x9, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 42c:	add	x9, x9, #0x0
 430:	ldur	q0, [x9, #10]
 434:	ldr	q1, [x9]
 438:	stur	q0, [x8, #10]
 43c:	str	q1, [x8]
 440:	ldp	x9, x8, [x0, #16]
 444:	add	x8, x8, #0x1a
 448:	str	x8, [x0, #24]
 44c:	cmp	x9, x8
 450:	b.ne	1dc <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x16c>  // b.any
 454:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 458:	add	x1, x1, #0x0
 45c:	mov	w2, #0x1                   	// #1
 460:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 464:	ldr	w23, [x19, #48]
 468:	cbnz	w23, 1f8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x188>
 46c:	ldp	x20, x19, [sp, #128]
 470:	ldp	x22, x21, [sp, #112]
 474:	ldp	x24, x23, [sp, #96]
 478:	ldp	x26, x25, [sp, #80]
 47c:	ldp	x28, x27, [sp, #64]
 480:	ldp	x29, x30, [sp, #48]
 484:	add	sp, sp, #0x90
 488:	ret
 48c:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 490:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 494:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 498:	add	x0, x0, #0x0
 49c:	add	x1, x1, #0x0
 4a0:	add	x3, x3, #0x0
 4a4:	mov	w2, #0x1ab                 	// #427
 4a8:	bl	0 <__assert_fail>
 4ac:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4b0:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4b4:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4b8:	add	x0, x0, #0x0
 4bc:	add	x1, x1, #0x0
 4c0:	add	x3, x3, #0x0
 4c4:	mov	w2, #0x154                 	// #340
 4c8:	bl	0 <__assert_fail>
 4cc:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4d0:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4d4:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4d8:	add	x0, x0, #0x0
 4dc:	add	x1, x1, #0x0
 4e0:	add	x3, x3, #0x0
 4e4:	mov	w2, #0x156                 	// #342
 4e8:	bl	0 <__assert_fail>
 4ec:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4f0:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4f4:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4f8:	add	x0, x0, #0x0
 4fc:	add	x1, x1, #0x0
 500:	add	x3, x3, #0x0
 504:	mov	w2, #0x2c                  	// #44
 508:	bl	0 <__assert_fail>

000000000000050c <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE>:
 50c:	stp	x29, x30, [sp, #-16]!
 510:	mov	x29, sp
 514:	ldr	w8, [x0, #48]
 518:	ucvtf	d0, w2
 51c:	ucvtf	d1, w1
 520:	fdiv	d0, d0, d1
 524:	cbz	w8, 594 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x88>
 528:	ldr	x9, [x0, #40]
 52c:	cbz	x9, 578 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x6c>
 530:	ldr	x9, [x0, #32]
 534:	add	x9, x9, #0x8
 538:	b	550 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x44>
 53c:	sub	x4, x4, #0x1
 540:	add	x3, x3, #0x4
 544:	subs	x8, x8, #0x1
 548:	add	x9, x9, #0x20
 54c:	b.eq	594 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x88>  // b.none
 550:	cbz	x4, 59c <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x90>
 554:	ldr	w10, [x3]
 558:	cbz	w10, 53c <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x30>
 55c:	ldr	s1, [x9]
 560:	ucvtf	d2, w10
 564:	ucvtf	d1, d1
 568:	fdiv	d1, d2, d1
 56c:	fcmp	d0, d1
 570:	fcsel	d0, d1, d0, mi  // mi = first
 574:	b	53c <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x30>
 578:	cbz	x4, 59c <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x90>
 57c:	ldr	w9, [x3]
 580:	cbnz	w9, 5bc <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0xb0>
 584:	sub	x4, x4, #0x1
 588:	subs	x8, x8, #0x1
 58c:	add	x3, x3, #0x4
 590:	b.ne	578 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x6c>  // b.any
 594:	ldp	x29, x30, [sp], #16
 598:	ret
 59c:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 5a0:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 5a4:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 5a8:	add	x0, x0, #0x0
 5ac:	add	x1, x1, #0x0
 5b0:	add	x3, x3, #0x0
 5b4:	mov	w2, #0xfa                  	// #250
 5b8:	bl	0 <__assert_fail>
 5bc:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 5c0:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 5c4:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 5c8:	add	x0, x0, #0x0
 5cc:	add	x1, x1, #0x0
 5d0:	add	x3, x3, #0x0
 5d4:	mov	w2, #0x154                 	// #340
 5d8:	bl	0 <__assert_fail>
