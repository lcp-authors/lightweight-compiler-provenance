
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_random.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000010f8 <.init>:
    10f8:	stp	x29, x30, [sp, #-16]!
    10fc:	mov	x29, sp
    1100:	bl	1330 <_PyTime_GetMonotonicClock@plt+0x10>
    1104:	ldp	x29, x30, [sp], #16
    1108:	ret

Disassembly of section .plt:

0000000000001110 <PyMem_Free@plt-0x20>:
    1110:	stp	x16, x30, [sp, #-16]!
    1114:	adrp	x16, 12000 <PyInit__random@@Base+0x10238>
    1118:	ldr	x17, [x16, #4088]
    111c:	add	x16, x16, #0xff8
    1120:	br	x17
    1124:	nop
    1128:	nop
    112c:	nop

0000000000001130 <PyMem_Free@plt>:
    1130:	adrp	x16, 13000 <PyMem_Free>
    1134:	ldr	x17, [x16]
    1138:	add	x16, x16, #0x0
    113c:	br	x17

0000000000001140 <__cxa_finalize@plt>:
    1140:	adrp	x16, 13000 <PyMem_Free>
    1144:	ldr	x17, [x16, #8]
    1148:	add	x16, x16, #0x8
    114c:	br	x17

0000000000001150 <_PyTime_GetSystemClock@plt>:
    1150:	adrp	x16, 13000 <PyMem_Free>
    1154:	ldr	x17, [x16, #16]
    1158:	add	x16, x16, #0x10
    115c:	br	x17

0000000000001160 <_Py_Dealloc@plt>:
    1160:	adrp	x16, 13000 <PyMem_Free>
    1164:	ldr	x17, [x16, #24]
    1168:	add	x16, x16, #0x18
    116c:	br	x17

0000000000001170 <PyErr_NoMemory@plt>:
    1170:	adrp	x16, 13000 <PyMem_Free>
    1174:	ldr	x17, [x16, #32]
    1178:	add	x16, x16, #0x20
    117c:	br	x17

0000000000001180 <PyLong_FromSize_t@plt>:
    1180:	adrp	x16, 13000 <PyMem_Free>
    1184:	ldr	x17, [x16, #40]
    1188:	add	x16, x16, #0x28
    118c:	br	x17

0000000000001190 <_PyLong_NumBits@plt>:
    1190:	adrp	x16, 13000 <PyMem_Free>
    1194:	ldr	x17, [x16, #48]
    1198:	add	x16, x16, #0x30
    119c:	br	x17

00000000000011a0 <getpid@plt>:
    11a0:	adrp	x16, 13000 <PyMem_Free>
    11a4:	ldr	x17, [x16, #56]
    11a8:	add	x16, x16, #0x38
    11ac:	br	x17

00000000000011b0 <PyErr_SetString@plt>:
    11b0:	adrp	x16, 13000 <PyMem_Free>
    11b4:	ldr	x17, [x16, #64]
    11b8:	add	x16, x16, #0x40
    11bc:	br	x17

00000000000011c0 <_PyLong_FromByteArray@plt>:
    11c0:	adrp	x16, 13000 <PyMem_Free>
    11c4:	ldr	x17, [x16, #72]
    11c8:	add	x16, x16, #0x48
    11cc:	br	x17

00000000000011d0 <PyFloat_FromDouble@plt>:
    11d0:	adrp	x16, 13000 <PyMem_Free>
    11d4:	ldr	x17, [x16, #80]
    11d8:	add	x16, x16, #0x50
    11dc:	br	x17

00000000000011e0 <PyType_Ready@plt>:
    11e0:	adrp	x16, 13000 <PyMem_Free>
    11e4:	ldr	x17, [x16, #88]
    11e8:	add	x16, x16, #0x58
    11ec:	br	x17

00000000000011f0 <PyLong_FromLong@plt>:
    11f0:	adrp	x16, 13000 <PyMem_Free>
    11f4:	ldr	x17, [x16, #96]
    11f8:	add	x16, x16, #0x60
    11fc:	br	x17

0000000000001200 <PyErr_Clear@plt>:
    1200:	adrp	x16, 13000 <PyMem_Free>
    1204:	ldr	x17, [x16, #104]
    1208:	add	x16, x16, #0x68
    120c:	br	x17

0000000000001210 <__gmon_start__@plt>:
    1210:	adrp	x16, 13000 <PyMem_Free>
    1214:	ldr	x17, [x16, #112]
    1218:	add	x16, x16, #0x70
    121c:	br	x17

0000000000001220 <PyTuple_New@plt>:
    1220:	adrp	x16, 13000 <PyMem_Free>
    1224:	ldr	x17, [x16, #120]
    1228:	add	x16, x16, #0x78
    122c:	br	x17

0000000000001230 <_PyArg_CheckPositional@plt>:
    1230:	adrp	x16, 13000 <PyMem_Free>
    1234:	ldr	x17, [x16, #128]
    1238:	add	x16, x16, #0x80
    123c:	br	x17

0000000000001240 <PyErr_Occurred@plt>:
    1240:	adrp	x16, 13000 <PyMem_Free>
    1244:	ldr	x17, [x16, #136]
    1248:	add	x16, x16, #0x88
    124c:	br	x17

0000000000001250 <PyModule_Create2@plt>:
    1250:	adrp	x16, 13000 <PyMem_Free>
    1254:	ldr	x17, [x16, #144]
    1258:	add	x16, x16, #0x90
    125c:	br	x17

0000000000001260 <PyLong_AsLong@plt>:
    1260:	adrp	x16, 13000 <PyMem_Free>
    1264:	ldr	x17, [x16, #152]
    1268:	add	x16, x16, #0x98
    126c:	br	x17

0000000000001270 <PyObject_Hash@plt>:
    1270:	adrp	x16, 13000 <PyMem_Free>
    1274:	ldr	x17, [x16, #160]
    1278:	add	x16, x16, #0xa0
    127c:	br	x17

0000000000001280 <PyLong_AsUnsignedLong@plt>:
    1280:	adrp	x16, 13000 <PyMem_Free>
    1284:	ldr	x17, [x16, #168]
    1288:	add	x16, x16, #0xa8
    128c:	br	x17

0000000000001290 <PyLong_FromUnsignedLong@plt>:
    1290:	adrp	x16, 13000 <PyMem_Free>
    1294:	ldr	x17, [x16, #176]
    1298:	add	x16, x16, #0xb0
    129c:	br	x17

00000000000012a0 <PyModule_AddObject@plt>:
    12a0:	adrp	x16, 13000 <PyMem_Free>
    12a4:	ldr	x17, [x16, #184]
    12a8:	add	x16, x16, #0xb8
    12ac:	br	x17

00000000000012b0 <PyType_IsSubtype@plt>:
    12b0:	adrp	x16, 13000 <PyMem_Free>
    12b4:	ldr	x17, [x16, #192]
    12b8:	add	x16, x16, #0xc0
    12bc:	br	x17

00000000000012c0 <_PyLong_AsByteArray@plt>:
    12c0:	adrp	x16, 13000 <PyMem_Free>
    12c4:	ldr	x17, [x16, #200]
    12c8:	add	x16, x16, #0xc8
    12cc:	br	x17

00000000000012d0 <PyTuple_Size@plt>:
    12d0:	adrp	x16, 13000 <PyMem_Free>
    12d4:	ldr	x17, [x16, #208]
    12d8:	add	x16, x16, #0xd0
    12dc:	br	x17

00000000000012e0 <_PyOS_URandomNonblock@plt>:
    12e0:	adrp	x16, 13000 <PyMem_Free>
    12e4:	ldr	x17, [x16, #216]
    12e8:	add	x16, x16, #0xd8
    12ec:	br	x17

00000000000012f0 <_PyArg_NoKeywords@plt>:
    12f0:	adrp	x16, 13000 <PyMem_Free>
    12f4:	ldr	x17, [x16, #224]
    12f8:	add	x16, x16, #0xe0
    12fc:	br	x17

0000000000001300 <_PyLong_AsInt@plt>:
    1300:	adrp	x16, 13000 <PyMem_Free>
    1304:	ldr	x17, [x16, #232]
    1308:	add	x16, x16, #0xe8
    130c:	br	x17

0000000000001310 <PyMem_Malloc@plt>:
    1310:	adrp	x16, 13000 <PyMem_Free>
    1314:	ldr	x17, [x16, #240]
    1318:	add	x16, x16, #0xf0
    131c:	br	x17

0000000000001320 <_PyTime_GetMonotonicClock@plt>:
    1320:	adrp	x16, 13000 <PyMem_Free>
    1324:	ldr	x17, [x16, #248]
    1328:	add	x16, x16, #0xf8
    132c:	br	x17

Disassembly of section .text:

0000000000001330 <PyInit__random@@Base-0xa98>:
    1330:	adrp	x0, 12000 <PyInit__random@@Base+0x10238>
    1334:	ldr	x0, [x0, #4040]
    1338:	cbz	x0, 1340 <_PyTime_GetMonotonicClock@plt+0x20>
    133c:	b	1210 <__gmon_start__@plt>
    1340:	ret
    1344:	adrp	x0, 13000 <PyInit__random@@Base+0x11238>
    1348:	add	x0, x0, #0x3d0
    134c:	adrp	x1, 13000 <PyInit__random@@Base+0x11238>
    1350:	add	x1, x1, #0x3d0
    1354:	cmp	x0, x1
    1358:	b.eq	1384 <_PyTime_GetMonotonicClock@plt+0x64>  // b.none
    135c:	adrp	x1, 12000 <PyInit__random@@Base+0x10238>
    1360:	ldr	x1, [x1, #4000]
    1364:	cbz	x1, 1384 <_PyTime_GetMonotonicClock@plt+0x64>
    1368:	stp	x29, x30, [sp, #-16]!
    136c:	mov	x29, sp
    1370:	adrp	x0, 13000 <PyInit__random@@Base+0x11238>
    1374:	add	x0, x0, #0x3d0
    1378:	blr	x1
    137c:	ldp	x29, x30, [sp], #16
    1380:	ret
    1384:	ret
    1388:	adrp	x0, 13000 <PyInit__random@@Base+0x11238>
    138c:	add	x0, x0, #0x3d0
    1390:	adrp	x1, 13000 <PyInit__random@@Base+0x11238>
    1394:	add	x1, x1, #0x3d0
    1398:	sub	x0, x0, x1
    139c:	lsr	x1, x0, #63
    13a0:	add	x0, x1, x0, asr #3
    13a4:	cmp	xzr, x0, asr #1
    13a8:	b.eq	13d8 <_PyTime_GetMonotonicClock@plt+0xb8>  // b.none
    13ac:	asr	x1, x0, #1
    13b0:	adrp	x2, 12000 <PyInit__random@@Base+0x10238>
    13b4:	ldr	x2, [x2, #4064]
    13b8:	cbz	x2, 13d8 <_PyTime_GetMonotonicClock@plt+0xb8>
    13bc:	stp	x29, x30, [sp, #-16]!
    13c0:	mov	x29, sp
    13c4:	adrp	x0, 13000 <PyInit__random@@Base+0x11238>
    13c8:	add	x0, x0, #0x3d0
    13cc:	blr	x2
    13d0:	ldp	x29, x30, [sp], #16
    13d4:	ret
    13d8:	ret
    13dc:	adrp	x0, 13000 <PyInit__random@@Base+0x11238>
    13e0:	ldrb	w0, [x0, #976]
    13e4:	cbnz	w0, 1420 <_PyTime_GetMonotonicClock@plt+0x100>
    13e8:	stp	x29, x30, [sp, #-16]!
    13ec:	mov	x29, sp
    13f0:	adrp	x0, 12000 <PyInit__random@@Base+0x10238>
    13f4:	ldr	x0, [x0, #4016]
    13f8:	cbz	x0, 1408 <_PyTime_GetMonotonicClock@plt+0xe8>
    13fc:	adrp	x0, 13000 <PyInit__random@@Base+0x11238>
    1400:	ldr	x0, [x0, #256]
    1404:	bl	1140 <__cxa_finalize@plt>
    1408:	bl	1344 <_PyTime_GetMonotonicClock@plt+0x24>
    140c:	adrp	x0, 13000 <PyInit__random@@Base+0x11238>
    1410:	mov	w1, #0x1                   	// #1
    1414:	strb	w1, [x0, #976]
    1418:	ldp	x29, x30, [sp], #16
    141c:	ret
    1420:	ret
    1424:	stp	x29, x30, [sp, #-16]!
    1428:	mov	x29, sp
    142c:	bl	1388 <_PyTime_GetMonotonicClock@plt+0x68>
    1430:	ldp	x29, x30, [sp], #16
    1434:	ret
    1438:	add	x7, x0, #0x14
    143c:	ldr	w1, [x0, #16]
    1440:	cmp	w1, #0x26f
    1444:	b.le	14f4 <_PyTime_GetMonotonicClock@plt+0x1d4>
    1448:	mov	x6, x7
    144c:	add	x5, x0, #0x3a0
    1450:	mov	x2, x7
    1454:	adrp	x4, 1000 <PyMem_Free@plt-0x130>
    1458:	add	x4, x4, #0xf48
    145c:	ldr	w1, [x2]
    1460:	ldr	w3, [x2, #4]
    1464:	bfxil	w1, w3, #0, #31
    1468:	ldr	w3, [x2, #1588]
    146c:	eor	w3, w3, w1, lsr #1
    1470:	and	x1, x1, #0x1
    1474:	ldr	w1, [x4, x1, lsl #2]
    1478:	eor	w1, w3, w1
    147c:	str	w1, [x2], #4
    1480:	cmp	x2, x5
    1484:	b.ne	145c <_PyTime_GetMonotonicClock@plt+0x13c>  // b.any
    1488:	add	x4, x0, #0x644
    148c:	adrp	x3, 1000 <PyMem_Free@plt-0x130>
    1490:	add	x3, x3, #0xf48
    1494:	ldr	w1, [x6, #908]
    1498:	ldr	w2, [x6, #912]
    149c:	bfxil	w1, w2, #0, #31
    14a0:	ldr	w2, [x6]
    14a4:	eor	w2, w2, w1, lsr #1
    14a8:	and	x1, x1, #0x1
    14ac:	ldr	w1, [x3, x1, lsl #2]
    14b0:	eor	w1, w2, w1
    14b4:	str	w1, [x6, #908]
    14b8:	add	x6, x6, #0x4
    14bc:	cmp	x6, x4
    14c0:	b.ne	1494 <_PyTime_GetMonotonicClock@plt+0x174>  // b.any
    14c4:	ldr	w1, [x0, #2512]
    14c8:	ldr	w2, [x0, #20]
    14cc:	bfxil	w1, w2, #0, #31
    14d0:	ldr	w2, [x0, #1604]
    14d4:	eor	w2, w2, w1, lsr #1
    14d8:	and	x1, x1, #0x1
    14dc:	adrp	x3, 1000 <PyMem_Free@plt-0x130>
    14e0:	add	x3, x3, #0xf48
    14e4:	ldr	w1, [x3, x1, lsl #2]
    14e8:	eor	w1, w2, w1
    14ec:	str	w1, [x0, #2512]
    14f0:	str	wzr, [x0, #16]
    14f4:	ldr	w1, [x0, #16]
    14f8:	add	w2, w1, #0x1
    14fc:	str	w2, [x0, #16]
    1500:	ldr	w1, [x7, w1, sxtw #2]
    1504:	eor	w1, w1, w1, lsr #11
    1508:	mov	w0, #0x5680                	// #22144
    150c:	movk	w0, #0x9d2c, lsl #16
    1510:	and	w0, w0, w1, lsl #7
    1514:	eor	w1, w0, w1
    1518:	mov	w0, #0xefc60000            	// #-272236544
    151c:	and	w0, w0, w1, lsl #15
    1520:	eor	w0, w0, w1
    1524:	eor	w0, w0, w0, lsr #18
    1528:	ret
    152c:	add	x5, x0, #0x14
    1530:	mov	w3, #0xd6aa                	// #54954
    1534:	movk	w3, #0x12b, lsl #16
    1538:	str	w3, [x0, #20]
    153c:	mov	x4, #0x1                   	// #1
    1540:	add	x8, x0, #0x10
    1544:	mov	x7, x5
    1548:	mov	w6, #0x8965                	// #35173
    154c:	movk	w6, #0x6c07, lsl #16
    1550:	ldr	w3, [x8, x4, lsl #2]
    1554:	eor	w3, w3, w3, lsr #30
    1558:	madd	w3, w3, w6, w4
    155c:	str	w3, [x7, x4, lsl #2]
    1560:	add	x4, x4, #0x1
    1564:	cmp	x4, #0x270
    1568:	b.ne	1550 <_PyTime_GetMonotonicClock@plt+0x230>  // b.any
    156c:	mov	w3, #0x270                 	// #624
    1570:	str	w3, [x0, #16]
    1574:	cmp	x2, #0x270
    1578:	mov	x8, #0x270                 	// #624
    157c:	csel	x8, x2, x8, cs  // cs = hs, nlast
    1580:	mov	x6, #0x0                   	// #0
    1584:	mov	x3, #0x1                   	// #1
    1588:	mov	w10, #0x660d                	// #26125
    158c:	movk	w10, #0x19, lsl #16
    1590:	mov	x9, #0x0                   	// #0
    1594:	b	15a8 <_PyTime_GetMonotonicClock@plt+0x288>
    1598:	cmp	x2, x6
    159c:	csel	x6, x6, x9, hi  // hi = pmore
    15a0:	subs	x8, x8, #0x1
    15a4:	b.eq	15f0 <_PyTime_GetMonotonicClock@plt+0x2d0>  // b.none
    15a8:	add	x4, x5, x3, lsl #2
    15ac:	ldur	w4, [x4, #-4]
    15b0:	eor	w4, w4, w4, lsr #30
    15b4:	mul	w4, w4, w10
    15b8:	ldr	w7, [x5, x3, lsl #2]
    15bc:	eor	w4, w4, w7
    15c0:	ldr	w7, [x1, x6, lsl #2]
    15c4:	add	w7, w7, w6
    15c8:	add	w4, w4, w7
    15cc:	str	w4, [x5, x3, lsl #2]
    15d0:	add	x3, x3, #0x1
    15d4:	add	x6, x6, #0x1
    15d8:	cmp	x3, #0x26f
    15dc:	b.ls	1598 <_PyTime_GetMonotonicClock@plt+0x278>  // b.plast
    15e0:	ldr	w3, [x0, #2512]
    15e4:	str	w3, [x0, #20]
    15e8:	mov	x3, #0x1                   	// #1
    15ec:	b	1598 <_PyTime_GetMonotonicClock@plt+0x278>
    15f0:	mov	x2, #0x26f                 	// #623
    15f4:	mov	w6, #0x8b65                	// #35685
    15f8:	movk	w6, #0x5d58, lsl #16
    15fc:	b	1608 <_PyTime_GetMonotonicClock@plt+0x2e8>
    1600:	subs	x2, x2, #0x1
    1604:	b.eq	1644 <_PyTime_GetMonotonicClock@plt+0x324>  // b.none
    1608:	add	x1, x5, x3, lsl #2
    160c:	ldur	w1, [x1, #-4]
    1610:	eor	w1, w1, w1, lsr #30
    1614:	mul	w1, w1, w6
    1618:	ldr	w4, [x5, x3, lsl #2]
    161c:	eor	w1, w1, w4
    1620:	sub	w1, w1, w3
    1624:	str	w1, [x5, x3, lsl #2]
    1628:	add	x3, x3, #0x1
    162c:	cmp	x3, #0x26f
    1630:	b.ls	1600 <_PyTime_GetMonotonicClock@plt+0x2e0>  // b.plast
    1634:	ldr	w1, [x0, #2512]
    1638:	str	w1, [x0, #20]
    163c:	mov	x3, #0x1                   	// #1
    1640:	b	1600 <_PyTime_GetMonotonicClock@plt+0x2e0>
    1644:	mov	w1, #0x80000000            	// #-2147483648
    1648:	str	w1, [x0, #20]
    164c:	ret
    1650:	sub	sp, sp, #0x9e0
    1654:	stp	x29, x30, [sp]
    1658:	mov	x29, sp
    165c:	str	x19, [sp, #16]
    1660:	mov	x19, x0
    1664:	mov	x1, #0x9c0                 	// #2496
    1668:	add	x0, sp, #0x20
    166c:	bl	12e0 <_PyOS_URandomNonblock@plt>
    1670:	tbnz	w0, #31, 1698 <_PyTime_GetMonotonicClock@plt+0x378>
    1674:	mov	x2, #0x270                 	// #624
    1678:	add	x1, sp, #0x20
    167c:	mov	x0, x19
    1680:	bl	152c <_PyTime_GetMonotonicClock@plt+0x20c>
    1684:	mov	w0, #0x0                   	// #0
    1688:	ldr	x19, [sp, #16]
    168c:	ldp	x29, x30, [sp]
    1690:	add	sp, sp, #0x9e0
    1694:	ret
    1698:	mov	w0, #0xffffffff            	// #-1
    169c:	b	1688 <_PyTime_GetMonotonicClock@plt+0x368>
    16a0:	stp	x29, x30, [sp, #-96]!
    16a4:	mov	x29, sp
    16a8:	stp	x19, x20, [sp, #16]
    16ac:	stp	x21, x22, [sp, #32]
    16b0:	mov	x21, x0
    16b4:	mov	x0, x1
    16b8:	cmp	x1, #0x0
    16bc:	adrp	x1, 12000 <PyInit__random@@Base+0x10238>
    16c0:	ldr	x1, [x1, #4048]
    16c4:	ccmp	x0, x1, #0x4, ne  // ne = any
    16c8:	b.eq	17a0 <_PyTime_GetMonotonicClock@plt+0x480>  // b.none
    16cc:	ldr	x1, [x0, #8]
    16d0:	ldr	x1, [x1, #168]
    16d4:	tbz	w1, #24, 1804 <_PyTime_GetMonotonicClock@plt+0x4e4>
    16d8:	adrp	x1, 12000 <PyInit__random@@Base+0x10238>
    16dc:	ldr	x1, [x1, #4056]
    16e0:	ldr	x1, [x1, #96]
    16e4:	ldr	x1, [x1, #64]
    16e8:	blr	x1
    16ec:	mov	x20, x0
    16f0:	cbz	x20, 1858 <_PyTime_GetMonotonicClock@plt+0x538>
    16f4:	stp	x23, x24, [sp, #48]
    16f8:	mov	x0, x20
    16fc:	bl	1190 <_PyLong_NumBits@plt>
    1700:	mov	x23, x0
    1704:	cmn	x0, #0x1
    1708:	b.eq	181c <_PyTime_GetMonotonicClock@plt+0x4fc>  // b.none
    170c:	mov	x24, #0x1                   	// #1
    1710:	cbnz	x0, 182c <_PyTime_GetMonotonicClock@plt+0x50c>
    1714:	lsl	x19, x24, #2
    1718:	mov	x0, x19
    171c:	bl	1310 <PyMem_Malloc@plt>
    1720:	mov	x22, x0
    1724:	cbz	x0, 183c <_PyTime_GetMonotonicClock@plt+0x51c>
    1728:	mov	w4, #0x0                   	// #0
    172c:	mov	w3, #0x1                   	// #1
    1730:	mov	x2, x19
    1734:	mov	x1, x0
    1738:	mov	x0, x20
    173c:	bl	12c0 <_PyLong_AsByteArray@plt>
    1740:	mov	x19, #0x0                   	// #0
    1744:	cmn	w0, #0x1
    1748:	b.eq	1770 <_PyTime_GetMonotonicClock@plt+0x450>  // b.none
    174c:	mov	x2, x24
    1750:	mov	x1, x22
    1754:	mov	x0, x21
    1758:	bl	152c <_PyTime_GetMonotonicClock@plt+0x20c>
    175c:	adrp	x19, 12000 <PyInit__random@@Base+0x10238>
    1760:	ldr	x19, [x19, #4048]
    1764:	ldr	x0, [x19]
    1768:	add	x0, x0, #0x1
    176c:	str	x0, [x19]
    1770:	ldr	x0, [x20]
    1774:	sub	x0, x0, #0x1
    1778:	str	x0, [x20]
    177c:	cbz	x0, 1848 <_PyTime_GetMonotonicClock@plt+0x528>
    1780:	ldp	x23, x24, [sp, #48]
    1784:	mov	x0, x22
    1788:	bl	1130 <PyMem_Free@plt>
    178c:	mov	x0, x19
    1790:	ldp	x19, x20, [sp, #16]
    1794:	ldp	x21, x22, [sp, #32]
    1798:	ldp	x29, x30, [sp], #96
    179c:	ret
    17a0:	mov	x0, x21
    17a4:	bl	1650 <_PyTime_GetMonotonicClock@plt+0x330>
    17a8:	tbnz	w0, #31, 17c4 <_PyTime_GetMonotonicClock@plt+0x4a4>
    17ac:	adrp	x19, 12000 <PyInit__random@@Base+0x10238>
    17b0:	ldr	x19, [x19, #4048]
    17b4:	ldr	x0, [x19]
    17b8:	add	x0, x0, #0x1
    17bc:	str	x0, [x19]
    17c0:	b	178c <_PyTime_GetMonotonicClock@plt+0x46c>
    17c4:	bl	1200 <PyErr_Clear@plt>
    17c8:	bl	1150 <_PyTime_GetSystemClock@plt>
    17cc:	str	w0, [sp, #72]
    17d0:	asr	x0, x0, #32
    17d4:	str	w0, [sp, #76]
    17d8:	bl	11a0 <getpid@plt>
    17dc:	str	w0, [sp, #80]
    17e0:	bl	1320 <_PyTime_GetMonotonicClock@plt>
    17e4:	str	w0, [sp, #84]
    17e8:	asr	x0, x0, #32
    17ec:	str	w0, [sp, #88]
    17f0:	mov	x2, #0x5                   	// #5
    17f4:	add	x1, sp, #0x48
    17f8:	mov	x0, x21
    17fc:	bl	152c <_PyTime_GetMonotonicClock@plt+0x20c>
    1800:	b	17ac <_PyTime_GetMonotonicClock@plt+0x48c>
    1804:	bl	1270 <PyObject_Hash@plt>
    1808:	cmn	x0, #0x1
    180c:	b.eq	1858 <_PyTime_GetMonotonicClock@plt+0x538>  // b.none
    1810:	bl	1180 <PyLong_FromSize_t@plt>
    1814:	mov	x20, x0
    1818:	b	16f0 <_PyTime_GetMonotonicClock@plt+0x3d0>
    181c:	bl	1240 <PyErr_Occurred@plt>
    1820:	mov	x22, #0x0                   	// #0
    1824:	mov	x19, #0x0                   	// #0
    1828:	cbnz	x0, 1770 <_PyTime_GetMonotonicClock@plt+0x450>
    182c:	sub	x23, x23, #0x1
    1830:	lsr	x23, x23, #5
    1834:	add	x24, x23, #0x1
    1838:	b	1714 <_PyTime_GetMonotonicClock@plt+0x3f4>
    183c:	bl	1170 <PyErr_NoMemory@plt>
    1840:	mov	x19, x22
    1844:	b	1770 <_PyTime_GetMonotonicClock@plt+0x450>
    1848:	mov	x0, x20
    184c:	bl	1160 <_Py_Dealloc@plt>
    1850:	ldp	x23, x24, [sp, #48]
    1854:	b	1784 <_PyTime_GetMonotonicClock@plt+0x464>
    1858:	mov	x22, #0x0                   	// #0
    185c:	mov	x19, #0x0                   	// #0
    1860:	b	1784 <_PyTime_GetMonotonicClock@plt+0x464>
    1864:	stp	x29, x30, [sp, #-32]!
    1868:	mov	x29, sp
    186c:	stp	x19, x20, [sp, #16]
    1870:	mov	x19, x0
    1874:	mov	x20, x1
    1878:	cmp	x2, #0x0
    187c:	adrp	x0, 13000 <PyInit__random@@Base+0x11238>
    1880:	add	x0, x0, #0x108
    1884:	ccmp	x19, x0, #0x0, ne  // ne = any
    1888:	b.eq	18d4 <_PyTime_GetMonotonicClock@plt+0x5b4>  // b.none
    188c:	ldr	x2, [x19, #304]
    1890:	mov	x1, #0x0                   	// #0
    1894:	mov	x0, x19
    1898:	blr	x2
    189c:	mov	x19, x0
    18a0:	cbz	x0, 18c4 <_PyTime_GetMonotonicClock@plt+0x5a4>
    18a4:	mov	x1, x20
    18a8:	bl	16a0 <_PyTime_GetMonotonicClock@plt+0x380>
    18ac:	mov	x20, x0
    18b0:	cbz	x0, 18f0 <_PyTime_GetMonotonicClock@plt+0x5d0>
    18b4:	ldr	x0, [x0]
    18b8:	sub	x0, x0, #0x1
    18bc:	str	x0, [x20]
    18c0:	cbz	x0, 1918 <_PyTime_GetMonotonicClock@plt+0x5f8>
    18c4:	mov	x0, x19
    18c8:	ldp	x19, x20, [sp, #16]
    18cc:	ldp	x29, x30, [sp], #32
    18d0:	ret
    18d4:	mov	x1, x2
    18d8:	adrp	x0, 1000 <PyMem_Free@plt-0x130>
    18dc:	add	x0, x0, #0xf40
    18e0:	bl	12f0 <_PyArg_NoKeywords@plt>
    18e4:	cbnz	w0, 188c <_PyTime_GetMonotonicClock@plt+0x56c>
    18e8:	mov	x19, #0x0                   	// #0
    18ec:	b	18c4 <_PyTime_GetMonotonicClock@plt+0x5a4>
    18f0:	ldr	x0, [x19]
    18f4:	sub	x0, x0, #0x1
    18f8:	str	x0, [x19]
    18fc:	cbz	x0, 1908 <_PyTime_GetMonotonicClock@plt+0x5e8>
    1900:	mov	x19, x20
    1904:	b	18c4 <_PyTime_GetMonotonicClock@plt+0x5a4>
    1908:	mov	x0, x19
    190c:	bl	1160 <_Py_Dealloc@plt>
    1910:	mov	x19, x20
    1914:	b	18c4 <_PyTime_GetMonotonicClock@plt+0x5a4>
    1918:	mov	x0, x20
    191c:	bl	1160 <_Py_Dealloc@plt>
    1920:	b	18c4 <_PyTime_GetMonotonicClock@plt+0x5a4>
    1924:	stp	x29, x30, [sp, #-80]!
    1928:	mov	x29, sp
    192c:	stp	x19, x20, [sp, #16]
    1930:	mov	x20, x0
    1934:	mov	x19, x1
    1938:	ldr	x0, [x1, #8]
    193c:	adrp	x1, 12000 <PyInit__random@@Base+0x10238>
    1940:	ldr	x1, [x1, #4008]
    1944:	cmp	x0, x1
    1948:	b.eq	1a00 <_PyTime_GetMonotonicClock@plt+0x6e0>  // b.none
    194c:	adrp	x1, 12000 <PyInit__random@@Base+0x10238>
    1950:	ldr	x1, [x1, #4008]
    1954:	bl	12b0 <PyType_IsSubtype@plt>
    1958:	cbnz	w0, 1a00 <_PyTime_GetMonotonicClock@plt+0x6e0>
    195c:	mov	x0, x19
    1960:	bl	1300 <_PyLong_AsInt@plt>
    1964:	mov	w19, w0
    1968:	cmn	w0, #0x1
    196c:	b.eq	1a2c <_PyTime_GetMonotonicClock@plt+0x70c>  // b.none
    1970:	cmp	w0, #0x0
    1974:	b.le	1a38 <_PyTime_GetMonotonicClock@plt+0x718>
    1978:	cmp	w0, #0x20
    197c:	b.le	1a58 <_PyTime_GetMonotonicClock@plt+0x738>
    1980:	stp	x21, x22, [sp, #32]
    1984:	stp	x23, x24, [sp, #48]
    1988:	add	w21, w0, #0x1e
    198c:	subs	w0, w0, #0x1
    1990:	csel	w21, w21, w0, mi  // mi = first
    1994:	asr	w21, w21, #5
    1998:	add	w23, w21, #0x1
    199c:	lsl	w23, w23, #2
    19a0:	sxtw	x23, w23
    19a4:	mov	x0, x23
    19a8:	bl	1310 <PyMem_Malloc@plt>
    19ac:	mov	x24, x0
    19b0:	cbz	x0, 1a78 <_PyTime_GetMonotonicClock@plt+0x758>
    19b4:	str	x25, [sp, #64]
    19b8:	mov	x0, x20
    19bc:	bl	1438 <_PyTime_GetMonotonicClock@plt+0x118>
    19c0:	mov	x22, x24
    19c4:	sub	w1, w19, #0x20
    19c8:	sub	w21, w1, w21, lsl #5
    19cc:	mov	w25, #0x20                  	// #32
    19d0:	str	w0, [x22]
    19d4:	sub	w19, w19, #0x20
    19d8:	cmp	w19, w21
    19dc:	b.eq	1a8c <_PyTime_GetMonotonicClock@plt+0x76c>  // b.none
    19e0:	mov	x0, x20
    19e4:	bl	1438 <_PyTime_GetMonotonicClock@plt+0x118>
    19e8:	sub	w1, w25, w19
    19ec:	lsr	w1, w0, w1
    19f0:	cmp	w19, #0x20
    19f4:	csel	w0, w1, w0, lt  // lt = tstop
    19f8:	add	x22, x22, #0x4
    19fc:	b	19d0 <_PyTime_GetMonotonicClock@plt+0x6b0>
    1a00:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    1a04:	add	x1, x1, #0xe48
    1a08:	adrp	x0, 12000 <PyInit__random@@Base+0x10238>
    1a0c:	ldr	x0, [x0, #4032]
    1a10:	ldr	x0, [x0]
    1a14:	bl	11b0 <PyErr_SetString@plt>
    1a18:	mov	x19, #0x0                   	// #0
    1a1c:	mov	x0, x19
    1a20:	ldp	x19, x20, [sp, #16]
    1a24:	ldp	x29, x30, [sp], #80
    1a28:	ret
    1a2c:	bl	1240 <PyErr_Occurred@plt>
    1a30:	mov	x19, #0x0                   	// #0
    1a34:	cbnz	x0, 1a1c <_PyTime_GetMonotonicClock@plt+0x6fc>
    1a38:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    1a3c:	add	x1, x1, #0xe70
    1a40:	adrp	x0, 12000 <PyInit__random@@Base+0x10238>
    1a44:	ldr	x0, [x0, #4024]
    1a48:	ldr	x0, [x0]
    1a4c:	bl	11b0 <PyErr_SetString@plt>
    1a50:	mov	x19, #0x0                   	// #0
    1a54:	b	1a1c <_PyTime_GetMonotonicClock@plt+0x6fc>
    1a58:	mov	x0, x20
    1a5c:	bl	1438 <_PyTime_GetMonotonicClock@plt+0x118>
    1a60:	neg	w19, w19
    1a64:	lsr	w0, w0, w19
    1a68:	mov	w0, w0
    1a6c:	bl	1290 <PyLong_FromUnsignedLong@plt>
    1a70:	mov	x19, x0
    1a74:	b	1a1c <_PyTime_GetMonotonicClock@plt+0x6fc>
    1a78:	bl	1170 <PyErr_NoMemory@plt>
    1a7c:	mov	x19, x24
    1a80:	ldp	x21, x22, [sp, #32]
    1a84:	ldp	x23, x24, [sp, #48]
    1a88:	b	1a1c <_PyTime_GetMonotonicClock@plt+0x6fc>
    1a8c:	mov	w3, #0x0                   	// #0
    1a90:	mov	w2, #0x1                   	// #1
    1a94:	mov	x1, x23
    1a98:	mov	x0, x24
    1a9c:	bl	11c0 <_PyLong_FromByteArray@plt>
    1aa0:	mov	x19, x0
    1aa4:	mov	x0, x24
    1aa8:	bl	1130 <PyMem_Free@plt>
    1aac:	ldp	x21, x22, [sp, #32]
    1ab0:	ldp	x23, x24, [sp, #48]
    1ab4:	ldr	x25, [sp, #64]
    1ab8:	b	1a1c <_PyTime_GetMonotonicClock@plt+0x6fc>
    1abc:	sub	sp, sp, #0xa00
    1ac0:	stp	x29, x30, [sp]
    1ac4:	mov	x29, sp
    1ac8:	stp	x23, x24, [sp, #48]
    1acc:	mov	x23, x0
    1ad0:	ldr	x0, [x1, #8]
    1ad4:	ldr	x0, [x0, #168]
    1ad8:	tbz	w0, #26, 1b08 <_PyTime_GetMonotonicClock@plt+0x7e8>
    1adc:	stp	x19, x20, [sp, #16]
    1ae0:	mov	x24, x1
    1ae4:	mov	x0, x1
    1ae8:	bl	12d0 <PyTuple_Size@plt>
    1aec:	mov	x19, #0x1                   	// #1
    1af0:	cmp	x0, #0x271
    1af4:	b.ne	1b28 <_PyTime_GetMonotonicClock@plt+0x808>  // b.any
    1af8:	stp	x21, x22, [sp, #32]
    1afc:	add	x21, x24, #0x10
    1b00:	add	x22, sp, #0x40
    1b04:	b	1b64 <_PyTime_GetMonotonicClock@plt+0x844>
    1b08:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    1b0c:	add	x1, x1, #0xea0
    1b10:	adrp	x0, 12000 <PyInit__random@@Base+0x10238>
    1b14:	ldr	x0, [x0, #4032]
    1b18:	ldr	x0, [x0]
    1b1c:	bl	11b0 <PyErr_SetString@plt>
    1b20:	mov	x0, #0x0                   	// #0
    1b24:	b	1b8c <_PyTime_GetMonotonicClock@plt+0x86c>
    1b28:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    1b2c:	add	x1, x1, #0xec0
    1b30:	adrp	x0, 12000 <PyInit__random@@Base+0x10238>
    1b34:	ldr	x0, [x0, #4024]
    1b38:	ldr	x0, [x0]
    1b3c:	bl	11b0 <PyErr_SetString@plt>
    1b40:	mov	x0, #0x0                   	// #0
    1b44:	ldp	x19, x20, [sp, #16]
    1b48:	b	1b8c <_PyTime_GetMonotonicClock@plt+0x86c>
    1b4c:	add	x2, x22, x19, lsl #2
    1b50:	stur	w20, [x2, #-4]
    1b54:	mov	w2, w19
    1b58:	add	x19, x19, #0x1
    1b5c:	cmp	x19, #0x271
    1b60:	b.eq	1b9c <_PyTime_GetMonotonicClock@plt+0x87c>  // b.none
    1b64:	ldr	x0, [x21, x19, lsl #3]
    1b68:	bl	1280 <PyLong_AsUnsignedLong@plt>
    1b6c:	mov	x20, x0
    1b70:	cmn	x0, #0x1
    1b74:	b.ne	1b4c <_PyTime_GetMonotonicClock@plt+0x82c>  // b.any
    1b78:	bl	1240 <PyErr_Occurred@plt>
    1b7c:	cbz	x0, 1b4c <_PyTime_GetMonotonicClock@plt+0x82c>
    1b80:	mov	x0, #0x0                   	// #0
    1b84:	ldp	x19, x20, [sp, #16]
    1b88:	ldp	x21, x22, [sp, #32]
    1b8c:	ldp	x23, x24, [sp, #48]
    1b90:	ldp	x29, x30, [sp]
    1b94:	add	sp, sp, #0xa00
    1b98:	ret
    1b9c:	add	x2, x24, w2, sxtw #3
    1ba0:	ldr	x0, [x2, #24]
    1ba4:	bl	1260 <PyLong_AsLong@plt>
    1ba8:	cmn	x0, #0x1
    1bac:	b.eq	1c00 <_PyTime_GetMonotonicClock@plt+0x8e0>  // b.none
    1bb0:	cmp	x0, #0x270
    1bb4:	b.hi	1c10 <_PyTime_GetMonotonicClock@plt+0x8f0>  // b.pmore
    1bb8:	mov	x2, x23
    1bbc:	str	w0, [x2, #16]!
    1bc0:	mov	x0, #0x1                   	// #1
    1bc4:	add	x3, sp, #0x40
    1bc8:	add	x1, x3, x0, lsl #2
    1bcc:	ldur	w1, [x1, #-4]
    1bd0:	str	w1, [x2, x0, lsl #2]
    1bd4:	add	x0, x0, #0x1
    1bd8:	cmp	x0, #0x271
    1bdc:	b.ne	1bc8 <_PyTime_GetMonotonicClock@plt+0x8a8>  // b.any
    1be0:	adrp	x0, 12000 <PyInit__random@@Base+0x10238>
    1be4:	ldr	x0, [x0, #4048]
    1be8:	ldr	x1, [x0]
    1bec:	add	x1, x1, #0x1
    1bf0:	str	x1, [x0]
    1bf4:	ldp	x19, x20, [sp, #16]
    1bf8:	ldp	x21, x22, [sp, #32]
    1bfc:	b	1b8c <_PyTime_GetMonotonicClock@plt+0x86c>
    1c00:	bl	1240 <PyErr_Occurred@plt>
    1c04:	mov	x1, x0
    1c08:	mov	x0, #0x0                   	// #0
    1c0c:	cbnz	x1, 1c38 <_PyTime_GetMonotonicClock@plt+0x918>
    1c10:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    1c14:	add	x1, x1, #0xee0
    1c18:	adrp	x0, 12000 <PyInit__random@@Base+0x10238>
    1c1c:	ldr	x0, [x0, #4024]
    1c20:	ldr	x0, [x0]
    1c24:	bl	11b0 <PyErr_SetString@plt>
    1c28:	mov	x0, #0x0                   	// #0
    1c2c:	ldp	x19, x20, [sp, #16]
    1c30:	ldp	x21, x22, [sp, #32]
    1c34:	b	1b8c <_PyTime_GetMonotonicClock@plt+0x86c>
    1c38:	ldp	x19, x20, [sp, #16]
    1c3c:	ldp	x21, x22, [sp, #32]
    1c40:	b	1b8c <_PyTime_GetMonotonicClock@plt+0x86c>
    1c44:	stp	x29, x30, [sp, #-64]!
    1c48:	mov	x29, sp
    1c4c:	stp	x19, x20, [sp, #16]
    1c50:	stp	x21, x22, [sp, #32]
    1c54:	mov	x21, x0
    1c58:	mov	x0, #0x271                 	// #625
    1c5c:	bl	1220 <PyTuple_New@plt>
    1c60:	mov	x19, x0
    1c64:	cbz	x0, 1ccc <_PyTime_GetMonotonicClock@plt+0x9ac>
    1c68:	stp	x23, x24, [sp, #48]
    1c6c:	mov	x20, #0x1                   	// #1
    1c70:	add	x23, x21, #0x10
    1c74:	add	x22, x0, #0x10
    1c78:	ldr	w0, [x23, x20, lsl #2]
    1c7c:	bl	1290 <PyLong_FromUnsignedLong@plt>
    1c80:	cbz	x0, 1cb4 <_PyTime_GetMonotonicClock@plt+0x994>
    1c84:	str	x0, [x22, x20, lsl #3]
    1c88:	mov	w24, w20
    1c8c:	add	x20, x20, #0x1
    1c90:	cmp	x20, #0x271
    1c94:	b.ne	1c78 <_PyTime_GetMonotonicClock@plt+0x958>  // b.any
    1c98:	ldrsw	x0, [x21, #16]
    1c9c:	bl	11f0 <PyLong_FromLong@plt>
    1ca0:	cbz	x0, 1cb4 <_PyTime_GetMonotonicClock@plt+0x994>
    1ca4:	add	x24, x19, w24, sxtw #3
    1ca8:	str	x0, [x24, #24]
    1cac:	ldp	x23, x24, [sp, #48]
    1cb0:	b	1ccc <_PyTime_GetMonotonicClock@plt+0x9ac>
    1cb4:	ldr	x0, [x19]
    1cb8:	sub	x0, x0, #0x1
    1cbc:	str	x0, [x19]
    1cc0:	cbz	x0, 1ce0 <_PyTime_GetMonotonicClock@plt+0x9c0>
    1cc4:	mov	x19, #0x0                   	// #0
    1cc8:	ldp	x23, x24, [sp, #48]
    1ccc:	mov	x0, x19
    1cd0:	ldp	x19, x20, [sp, #16]
    1cd4:	ldp	x21, x22, [sp, #32]
    1cd8:	ldp	x29, x30, [sp], #64
    1cdc:	ret
    1ce0:	mov	x0, x19
    1ce4:	bl	1160 <_Py_Dealloc@plt>
    1ce8:	mov	x19, #0x0                   	// #0
    1cec:	ldp	x23, x24, [sp, #48]
    1cf0:	b	1ccc <_PyTime_GetMonotonicClock@plt+0x9ac>
    1cf4:	stp	x29, x30, [sp, #-48]!
    1cf8:	mov	x29, sp
    1cfc:	stp	x19, x20, [sp, #16]
    1d00:	str	x21, [sp, #32]
    1d04:	mov	x20, x0
    1d08:	mov	x21, x1
    1d0c:	mov	x19, x2
    1d10:	cmp	x2, #0x1
    1d14:	b.hi	1d3c <_PyTime_GetMonotonicClock@plt+0xa1c>  // b.pmore
    1d18:	cmp	x19, #0x0
    1d1c:	b.le	1d60 <_PyTime_GetMonotonicClock@plt+0xa40>
    1d20:	ldr	x1, [x21]
    1d24:	mov	x0, x20
    1d28:	bl	16a0 <_PyTime_GetMonotonicClock@plt+0x380>
    1d2c:	ldp	x19, x20, [sp, #16]
    1d30:	ldr	x21, [sp, #32]
    1d34:	ldp	x29, x30, [sp], #48
    1d38:	ret
    1d3c:	mov	x3, #0x1                   	// #1
    1d40:	mov	x2, #0x0                   	// #0
    1d44:	mov	x1, x19
    1d48:	adrp	x0, 1000 <PyMem_Free@plt-0x130>
    1d4c:	add	x0, x0, #0xef0
    1d50:	bl	1230 <_PyArg_CheckPositional@plt>
    1d54:	cbnz	w0, 1d18 <_PyTime_GetMonotonicClock@plt+0x9f8>
    1d58:	mov	x0, #0x0                   	// #0
    1d5c:	b	1d2c <_PyTime_GetMonotonicClock@plt+0xa0c>
    1d60:	adrp	x1, 12000 <PyInit__random@@Base+0x10238>
    1d64:	ldr	x1, [x1, #4048]
    1d68:	b	1d24 <_PyTime_GetMonotonicClock@plt+0xa04>
    1d6c:	stp	x29, x30, [sp, #-32]!
    1d70:	mov	x29, sp
    1d74:	stp	x19, x20, [sp, #16]
    1d78:	mov	x20, x0
    1d7c:	bl	1438 <_PyTime_GetMonotonicClock@plt+0x118>
    1d80:	mov	w19, w0
    1d84:	mov	x0, x20
    1d88:	bl	1438 <_PyTime_GetMonotonicClock@plt+0x118>
    1d8c:	lsr	w19, w19, #5
    1d90:	ucvtf	d0, w19
    1d94:	mov	x1, #0x4190000000000000    	// #4724276009111650304
    1d98:	fmov	d1, x1
    1d9c:	fmul	d0, d0, d1
    1da0:	lsr	w0, w0, #6
    1da4:	ucvtf	d1, w0
    1da8:	fadd	d0, d0, d1
    1dac:	mov	x0, #0x3ca0000000000000    	// #4368491638549381120
    1db0:	fmov	d1, x0
    1db4:	fmul	d0, d0, d1
    1db8:	bl	11d0 <PyFloat_FromDouble@plt>
    1dbc:	ldp	x19, x20, [sp, #16]
    1dc0:	ldp	x29, x30, [sp], #32
    1dc4:	ret

0000000000001dc8 <PyInit__random@@Base>:
    1dc8:	stp	x29, x30, [sp, #-32]!
    1dcc:	mov	x29, sp
    1dd0:	str	x19, [sp, #16]
    1dd4:	adrp	x0, 13000 <PyInit__random@@Base+0x11238>
    1dd8:	add	x0, x0, #0x108
    1ddc:	bl	11e0 <PyType_Ready@plt>
    1de0:	mov	x19, #0x0                   	// #0
    1de4:	tbnz	w0, #31, 1e24 <PyInit__random@@Base+0x5c>
    1de8:	mov	w1, #0x3f5                 	// #1013
    1dec:	adrp	x0, 13000 <PyInit__random@@Base+0x11238>
    1df0:	add	x0, x0, #0x2a8
    1df4:	bl	1250 <PyModule_Create2@plt>
    1df8:	mov	x19, x0
    1dfc:	cbz	x0, 1e24 <PyInit__random@@Base+0x5c>
    1e00:	adrp	x2, 13000 <PyInit__random@@Base+0x11238>
    1e04:	ldr	x0, [x2, #264]
    1e08:	add	x0, x0, #0x1
    1e0c:	str	x0, [x2, #264]
    1e10:	add	x2, x2, #0x108
    1e14:	adrp	x1, 1000 <PyMem_Free@plt-0x130>
    1e18:	add	x1, x1, #0xf40
    1e1c:	mov	x0, x19
    1e20:	bl	12a0 <PyModule_AddObject@plt>
    1e24:	mov	x0, x19
    1e28:	ldr	x19, [sp, #16]
    1e2c:	ldp	x29, x30, [sp], #32
    1e30:	ret

Disassembly of section .fini:

0000000000001e34 <.fini>:
    1e34:	stp	x29, x30, [sp, #-16]!
    1e38:	mov	x29, sp
    1e3c:	ldp	x29, x30, [sp], #16
    1e40:	ret
