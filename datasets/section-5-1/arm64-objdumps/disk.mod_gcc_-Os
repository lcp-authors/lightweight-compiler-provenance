
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//disk.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_disk_write-0xa0>:
   0:	mov	x3, #0xc57b                	// #50555
   4:	and	x5, x2, #0xffffffffffffffc0
   8:	movk	x3, #0x27, lsl #16
   c:	ubfx	x2, x2, #6, #32
  10:	stp	x29, x30, [sp, #-32]!
  14:	mul	x4, x1, x3
  18:	mov	x3, #0x7ffff               	// #524287
  1c:	mov	x29, sp
  20:	madd	x3, x0, x3, x4
  24:	mov	x4, #0x3fd                 	// #1021
  28:	str	x19, [sp, #16]
  2c:	add	x3, x3, x2
  30:	udiv	x2, x3, x4
  34:	msub	x2, x2, x4, x3
  38:	mov	x3, #0x28                  	// #40
  3c:	mul	x2, x2, x3
  40:	adrp	x3, 0 <grub_disk_write-0xa0>
  44:	ldr	x3, [x3]
  48:	add	x19, x2, x3
  4c:	ldr	w2, [x2, x3]
  50:	cmp	x2, x0
  54:	b.ne	8c <grub_disk_write-0x14>  // b.any
  58:	ldr	x0, [x19, #8]
  5c:	cmp	x0, x1
  60:	b.ne	8c <grub_disk_write-0x14>  // b.any
  64:	ldr	x0, [x19, #16]
  68:	cmp	x0, x5
  6c:	b.ne	8c <grub_disk_write-0x14>  // b.any
  70:	ldr	x0, [x19, #24]
  74:	cbz	x0, 8c <grub_disk_write-0x14>
  78:	mov	w1, #0x1                   	// #1
  7c:	str	w1, [x19, #32]
  80:	bl	0 <grub_free>
  84:	str	xzr, [x19, #24]
  88:	str	wzr, [x19, #32]
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	ret
	...

00000000000000a0 <grub_disk_write>:
  a0:	stp	x29, x30, [sp, #-96]!
  a4:	mov	x29, sp
  a8:	stp	x19, x20, [sp, #16]
  ac:	mov	x19, x0
  b0:	mov	x20, x1
  b4:	stp	x21, x22, [sp, #32]
  b8:	mov	x22, x4
  bc:	mov	x21, x3
  c0:	ldr	x4, [x0]
  c4:	adrp	x0, 0 <grub_disk_write-0xa0>
  c8:	add	x20, x20, x2, lsr #9
  cc:	stp	x23, x24, [sp, #48]
  d0:	and	x23, x2, #0x1ff
  d4:	ldr	x3, [x0]
  d8:	adrp	x0, 0 <grub_disk_write-0xa0>
  dc:	mov	w1, #0x3d                  	// #61
  e0:	stp	x25, x26, [sp, #64]
  e4:	ldr	x2, [x0]
  e8:	adrp	x0, 0 <grub_disk_write-0xa0>
  ec:	stp	x27, x28, [sp, #80]
  f0:	ldr	x0, [x0]
  f4:	bl	0 <grub_real_dprintf>
  f8:	add	x1, x23, #0x1ff
  fc:	add	x1, x1, x21
 100:	ldr	x0, [x19, #40]
 104:	lsr	x1, x1, #9
 108:	cbnz	x0, 1b0 <grub_disk_write+0x110>
 10c:	ldr	w0, [x19, #24]
 110:	sub	w2, w0, #0x9
 114:	ldr	x0, [x19, #16]
 118:	lsl	x0, x0, x2
 11c:	mov	x2, #0x8000000000000       	// #2251799813685248
 120:	cmp	x0, x2
 124:	csel	x0, x0, x2, ls  // ls = plast
 128:	cmp	x0, x20
 12c:	b.ls	1f0 <grub_disk_write+0x150>  // b.plast
 130:	sub	x0, x0, x20
 134:	cmp	x1, x0
 138:	b.hi	1f0 <grub_disk_write+0x150>  // b.pmore
 13c:	ldr	w0, [x19, #24]
 140:	mov	x26, #0x1                   	// #1
 144:	mov	w25, w26
 148:	mov	w27, #0xf                   	// #15
 14c:	sub	w0, w0, #0x9
 150:	lsl	x0, x26, x0
 154:	neg	x0, x0
 158:	and	x24, x0, x20
 15c:	bic	w0, w20, w0
 160:	add	w20, w23, w0, lsl #9
 164:	cbz	x21, 188 <grub_disk_write+0xe8>
 168:	ldr	w1, [x19, #24]
 16c:	lsl	w0, w25, w1
 170:	cbnz	w20, 17c <grub_disk_write+0xdc>
 174:	cmp	x21, x0
 178:	b.cs	2c8 <grub_disk_write+0x228>  // b.hs, b.nlast
 17c:	bl	0 <grub_malloc>
 180:	mov	x28, x0
 184:	cbnz	x0, 208 <grub_disk_write+0x168>
 188:	adrp	x0, 0 <grub_disk_write-0xa0>
 18c:	ldr	x0, [x0]
 190:	ldr	w0, [x0]
 194:	ldp	x19, x20, [sp, #16]
 198:	ldp	x21, x22, [sp, #32]
 19c:	ldp	x23, x24, [sp, #48]
 1a0:	ldp	x25, x26, [sp, #64]
 1a4:	ldp	x27, x28, [sp, #80]
 1a8:	ldp	x29, x30, [sp], #96
 1ac:	ret
 1b0:	ldp	x3, x2, [x0, #8]
 1b4:	cmp	x2, x20
 1b8:	b.ls	1c8 <grub_disk_write+0x128>  // b.plast
 1bc:	sub	x2, x2, x20
 1c0:	cmp	x2, x1
 1c4:	b.cs	1e4 <grub_disk_write+0x144>  // b.hs, b.nlast
 1c8:	adrp	x0, 0 <grub_disk_write-0xa0>
 1cc:	ldr	x1, [x0]
 1d0:	mov	w0, #0xb                   	// #11
 1d4:	bl	0 <grub_error>
 1d8:	cbz	w0, 13c <grub_disk_write+0x9c>
 1dc:	mov	w0, #0xffffffff            	// #-1
 1e0:	b	194 <grub_disk_write+0xf4>
 1e4:	add	x20, x20, x3
 1e8:	ldr	x0, [x0, #40]
 1ec:	b	108 <grub_disk_write+0x68>
 1f0:	adrp	x0, 0 <grub_disk_write-0xa0>
 1f4:	ldr	x2, [x19]
 1f8:	ldr	x1, [x0]
 1fc:	mov	w0, #0xb                   	// #11
 200:	bl	0 <grub_error>
 204:	b	1d8 <grub_disk_write+0x138>
 208:	ldr	w3, [x19, #24]
 20c:	mov	x4, x0
 210:	ldr	x23, [x19, #40]
 214:	str	xzr, [x19, #40]
 218:	mov	x1, x24
 21c:	mov	x0, x19
 220:	mov	x2, #0x0                   	// #0
 224:	lsl	w3, w25, w3
 228:	bl	0 <grub_disk_read>
 22c:	str	x23, [x19, #40]
 230:	cbz	w0, 240 <grub_disk_write+0x1a0>
 234:	mov	x0, x28
 238:	bl	0 <grub_free>
 23c:	b	188 <grub_disk_write+0xe8>
 240:	ldr	w23, [x19, #24]
 244:	mov	x1, x22
 248:	add	x0, x28, w20, uxtw
 24c:	lsl	w23, w25, w23
 250:	sub	w23, w23, w20
 254:	cmp	x21, x23
 258:	csel	x23, x21, x23, ls  // ls = plast
 25c:	mov	x2, x23
 260:	bl	0 <grub_memmove>
 264:	ldr	x0, [x19, #8]
 268:	mov	x2, x24
 26c:	ldr	x1, [x19, #32]
 270:	ldr	w0, [x0, #8]
 274:	bl	0 <grub_disk_write-0xa0>
 278:	ldr	x0, [x19, #8]
 27c:	mov	x3, x28
 280:	ldr	w1, [x19, #24]
 284:	mov	x2, #0x1                   	// #1
 288:	ldr	x4, [x0, #48]
 28c:	sub	w1, w1, #0x9
 290:	mov	x0, x19
 294:	lsr	x1, x24, x1
 298:	blr	x4
 29c:	cbnz	w0, 234 <grub_disk_write+0x194>
 2a0:	mov	x0, x28
 2a4:	bl	0 <grub_free>
 2a8:	ldr	w0, [x19, #24]
 2ac:	sub	w0, w0, #0x9
 2b0:	lsl	w0, w25, w0
 2b4:	add	x24, x24, x0
 2b8:	add	x22, x22, x23
 2bc:	sub	x21, x21, x23
 2c0:	mov	w20, #0x0                   	// #0
 2c4:	b	164 <grub_disk_write+0xc4>
 2c8:	ldr	w20, [x19, #28]
 2cc:	sub	w2, w27, w1
 2d0:	lsr	x0, x21, x1
 2d4:	mov	x3, x22
 2d8:	lsl	x23, x26, x1
 2dc:	sub	w1, w1, #0x9
 2e0:	lsl	w20, w20, w2
 2e4:	cmp	x20, x0
 2e8:	csel	x20, x20, x0, ls  // ls = plast
 2ec:	neg	x23, x23
 2f0:	ldr	x0, [x19, #8]
 2f4:	and	x23, x23, x21
 2f8:	mov	x2, x20
 2fc:	lsr	x1, x24, x1
 300:	ldr	x4, [x0, #48]
 304:	mov	x0, x19
 308:	blr	x4
 30c:	cbnz	w0, 188 <grub_disk_write+0xe8>
 310:	sub	x20, x20, #0x1
 314:	cmn	x20, #0x1
 318:	b.eq	2b8 <grub_disk_write+0x218>  // b.none
 31c:	ldr	x0, [x19, #8]
 320:	mov	x2, x24
 324:	ldr	x1, [x19, #32]
 328:	ldr	w0, [x0, #8]
 32c:	bl	0 <grub_disk_write-0xa0>
 330:	ldr	w0, [x19, #24]
 334:	sub	w0, w0, #0x9
 338:	lsl	w0, w25, w0
 33c:	add	x24, x24, x0
 340:	b	310 <grub_disk_write+0x270>
 344:	nop
	...

0000000000000378 <grub_mod_init>:
 378:	adrp	x0, 0 <grub_disk_write-0xa0>
 37c:	adrp	x1, 0 <grub_disk_write-0xa0>
 380:	ldr	x0, [x0]
 384:	ldr	x1, [x1]
 388:	str	x1, [x0]
 38c:	ret
	...

00000000000003a0 <grub_mod_fini>:
 3a0:	adrp	x0, 0 <grub_disk_write-0xa0>
 3a4:	ldr	x0, [x0]
 3a8:	str	xzr, [x0]
 3ac:	ret
	...
