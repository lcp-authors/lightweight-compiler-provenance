
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-remount-fs_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004011b8 <_init>:
  4011b8:	stp	x29, x30, [sp, #-16]!
  4011bc:	mov	x29, sp
  4011c0:	bl	40194c <call_weak_fn>
  4011c4:	ldp	x29, x30, [sp], #16
  4011c8:	ret

Disassembly of section .plt:

00000000004011d0 <.plt>:
  4011d0:	stp	x16, x30, [sp, #-16]!
  4011d4:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  4011d8:	ldr	x17, [x16, #3744]
  4011dc:	add	x16, x16, #0xea0
  4011e0:	br	x17
  4011e4:	nop
  4011e8:	nop
  4011ec:	nop

00000000004011f0 <internal_hashmap_remove@plt>:
  4011f0:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  4011f4:	ldr	x17, [x16, #3752]
  4011f8:	add	x16, x16, #0xea8
  4011fc:	br	x17

0000000000401200 <internal_hashmap_free@plt>:
  401200:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401204:	ldr	x17, [x16, #3760]
  401208:	add	x16, x16, #0xeb0
  40120c:	br	x17

0000000000401210 <__libc_start_main@plt>:
  401210:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401214:	ldr	x17, [x16, #3768]
  401218:	add	x16, x16, #0xeb8
  40121c:	br	x17

0000000000401220 <__gmon_start__@plt>:
  401220:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401224:	ldr	x17, [x16, #3776]
  401228:	add	x16, x16, #0xec0
  40122c:	br	x17

0000000000401230 <polkit_agent_close@plt>:
  401230:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401234:	ldr	x17, [x16, #3784]
  401238:	add	x16, x16, #0xec8
  40123c:	br	x17

0000000000401240 <path_equal@plt>:
  401240:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401244:	ldr	x17, [x16, #3792]
  401248:	add	x16, x16, #0xed0
  40124c:	br	x17

0000000000401250 <log_setup_service@plt>:
  401250:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401254:	ldr	x17, [x16, #3800]
  401258:	add	x16, x16, #0xed8
  40125c:	br	x17

0000000000401260 <log_assert_failed_realm@plt>:
  401260:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401264:	ldr	x17, [x16, #3808]
  401268:	add	x16, x16, #0xee0
  40126c:	br	x17

0000000000401270 <_exit@plt>:
  401270:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401274:	ldr	x17, [x16, #3816]
  401278:	add	x16, x16, #0xee8
  40127c:	br	x17

0000000000401280 <umask@plt>:
  401280:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401284:	ldr	x17, [x16, #3824]
  401288:	add	x16, x16, #0xef0
  40128c:	br	x17

0000000000401290 <secure_getenv@plt>:
  401290:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401294:	ldr	x17, [x16, #3832]
  401298:	add	x16, x16, #0xef8
  40129c:	br	x17

00000000004012a0 <setmntent@plt>:
  4012a0:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  4012a4:	ldr	x17, [x16, #3840]
  4012a8:	add	x16, x16, #0xf00
  4012ac:	br	x17

00000000004012b0 <is_efi_boot@plt>:
  4012b0:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  4012b4:	ldr	x17, [x16, #3848]
  4012b8:	add	x16, x16, #0xf08
  4012bc:	br	x17

00000000004012c0 <abort@plt>:
  4012c0:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  4012c4:	ldr	x17, [x16, #3856]
  4012c8:	add	x16, x16, #0xf10
  4012cc:	br	x17

00000000004012d0 <getmntent@plt>:
  4012d0:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  4012d4:	ldr	x17, [x16, #3864]
  4012d8:	add	x16, x16, #0xf18
  4012dc:	br	x17

00000000004012e0 <endmntent@plt>:
  4012e0:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  4012e4:	ldr	x17, [x16, #3872]
  4012e8:	add	x16, x16, #0xf20
  4012ec:	br	x17

00000000004012f0 <path_startswith@plt>:
  4012f0:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  4012f4:	ldr	x17, [x16, #3880]
  4012f8:	add	x16, x16, #0xf28
  4012fc:	br	x17

0000000000401300 <cg_is_unified_wanted@plt>:
  401300:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401304:	ldr	x17, [x16, #3888]
  401308:	add	x16, x16, #0xf30
  40130c:	br	x17

0000000000401310 <getenv_bool@plt>:
  401310:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401314:	ldr	x17, [x16, #3896]
  401318:	add	x16, x16, #0xf38
  40131c:	br	x17

0000000000401320 <__errno_location@plt>:
  401320:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401324:	ldr	x17, [x16, #3904]
  401328:	add	x16, x16, #0xf40
  40132c:	br	x17

0000000000401330 <__stack_chk_fail@plt>:
  401330:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401334:	ldr	x17, [x16, #3912]
  401338:	add	x16, x16, #0xf48
  40133c:	br	x17

0000000000401340 <waitid@plt>:
  401340:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401344:	ldr	x17, [x16, #3920]
  401348:	add	x16, x16, #0xf50
  40134c:	br	x17

0000000000401350 <ask_password_agent_close@plt>:
  401350:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401354:	ldr	x17, [x16, #3928]
  401358:	add	x16, x16, #0xf58
  40135c:	br	x17

0000000000401360 <signal_to_string@plt>:
  401360:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401364:	ldr	x17, [x16, #3936]
  401368:	add	x16, x16, #0xf60
  40136c:	br	x17

0000000000401370 <pager_close@plt>:
  401370:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401374:	ldr	x17, [x16, #3944]
  401378:	add	x16, x16, #0xf68
  40137c:	br	x17

0000000000401380 <cg_is_legacy_wanted@plt>:
  401380:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401384:	ldr	x17, [x16, #3952]
  401388:	add	x16, x16, #0xf70
  40138c:	br	x17

0000000000401390 <mac_smack_use@plt>:
  401390:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401394:	ldr	x17, [x16, #3960]
  401398:	add	x16, x16, #0xf78
  40139c:	br	x17

00000000004013a0 <internal_hashmap_size@plt>:
  4013a0:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  4013a4:	ldr	x17, [x16, #3968]
  4013a8:	add	x16, x16, #0xf80
  4013ac:	br	x17

00000000004013b0 <log_internal_realm@plt>:
  4013b0:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  4013b4:	ldr	x17, [x16, #3976]
  4013b8:	add	x16, x16, #0xf88
  4013bc:	br	x17

00000000004013c0 <hashmap_put@plt>:
  4013c0:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  4013c4:	ldr	x17, [x16, #3984]
  4013c8:	add	x16, x16, #0xf90
  4013cc:	br	x17

00000000004013d0 <strdup@plt>:
  4013d0:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  4013d4:	ldr	x17, [x16, #3992]
  4013d8:	add	x16, x16, #0xf98
  4013dc:	br	x17

00000000004013e0 <execv@plt>:
  4013e0:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  4013e4:	ldr	x17, [x16, #4000]
  4013e8:	add	x16, x16, #0xfa0
  4013ec:	br	x17

00000000004013f0 <safe_fork_full@plt>:
  4013f0:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  4013f4:	ldr	x17, [x16, #4008]
  4013f8:	add	x16, x16, #0xfa8
  4013fc:	br	x17

0000000000401400 <free@plt>:
  401400:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401404:	ldr	x17, [x16, #4016]
  401408:	add	x16, x16, #0xfb0
  40140c:	br	x17

0000000000401410 <cg_is_hybrid_wanted@plt>:
  401410:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401414:	ldr	x17, [x16, #4024]
  401418:	add	x16, x16, #0xfb8
  40141c:	br	x17

0000000000401420 <internal_hashmap_ensure_allocated@plt>:
  401420:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401424:	ldr	x17, [x16, #4032]
  401428:	add	x16, x16, #0xfc0
  40142c:	br	x17

0000000000401430 <mac_selinux_finish@plt>:
  401430:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401434:	ldr	x17, [x16, #4040]
  401438:	add	x16, x16, #0xfc8
  40143c:	br	x17

0000000000401440 <is_clean_exit@plt>:
  401440:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401444:	ldr	x17, [x16, #4048]
  401448:	add	x16, x16, #0xfd0
  40144c:	br	x17

0000000000401450 <log_oom_internal@plt>:
  401450:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401454:	ldr	x17, [x16, #4056]
  401458:	add	x16, x16, #0xfd8
  40145c:	br	x17

0000000000401460 <memset@plt>:
  401460:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401464:	ldr	x17, [x16, #4064]
  401468:	add	x16, x16, #0xfe0
  40146c:	br	x17

0000000000401470 <log_get_max_level_realm@plt>:
  401470:	adrp	x16, 412000 <__FRAME_END__+0xf9a8>
  401474:	ldr	x17, [x16, #4072]
  401478:	add	x16, x16, #0xfe8
  40147c:	br	x17

Disassembly of section .text:

0000000000401480 <main>:
  401480:	stp	x29, x30, [sp, #-224]!
  401484:	mov	x29, sp
  401488:	stp	x21, x22, [sp, #32]
  40148c:	adrp	x21, 412000 <__FRAME_END__+0xf9a8>
  401490:	add	x21, x21, #0x7f8
  401494:	stp	x19, x20, [sp, #16]
  401498:	mov	w19, w0
  40149c:	ldr	x0, [x21]
  4014a0:	str	x0, [sp, #216]
  4014a4:	mov	x0, #0x0                   	// #0
  4014a8:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4014ac:	stp	x23, x24, [sp, #48]
  4014b0:	str	w19, [x0, #8]
  4014b4:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4014b8:	str	x25, [sp, #64]
  4014bc:	str	x1, [x0]
  4014c0:	str	xzr, [sp, #80]
  4014c4:	bl	401250 <log_setup_service@plt>
  4014c8:	cmp	w19, #0x1
  4014cc:	b.le	40155c <main+0xdc>
  4014d0:	mov	w0, #0x0                   	// #0
  4014d4:	bl	401470 <log_get_max_level_realm@plt>
  4014d8:	cmp	w0, #0x2
  4014dc:	b.le	4018ac <main+0x42c>
  4014e0:	mov	w1, #0x16                  	// #22
  4014e4:	adrp	x5, 401000 <_init-0x1b8>
  4014e8:	adrp	x4, 401000 <_init-0x1b8>
  4014ec:	adrp	x2, 401000 <_init-0x1b8>
  4014f0:	add	x5, x5, #0xe38
  4014f4:	add	x4, x4, #0xf87
  4014f8:	add	x2, x2, #0xdcb
  4014fc:	mov	w3, #0x55                  	// #85
  401500:	movk	w1, #0x4000, lsl #16
  401504:	mov	w0, #0x3                   	// #3
  401508:	bl	4013b0 <log_internal_realm@plt>
  40150c:	mov	w19, w0
  401510:	ldr	x0, [sp, #80]
  401514:	cbz	x0, 401528 <main+0xa8>
  401518:	adrp	x2, 401000 <_init-0x1b8>
  40151c:	mov	x1, #0x0                   	// #0
  401520:	add	x2, x2, #0x400
  401524:	bl	401200 <internal_hashmap_free@plt>
  401528:	bl	401350 <ask_password_agent_close@plt>
  40152c:	bl	401230 <polkit_agent_close@plt>
  401530:	bl	401370 <pager_close@plt>
  401534:	bl	401430 <mac_selinux_finish@plt>
  401538:	adrp	x0, 401000 <_init-0x1b8>
  40153c:	ldr	x0, [x0, #3904]
  401540:	cbnz	x0, 4018b4 <main+0x434>
  401544:	lsr	w0, w19, #31
  401548:	ldr	x2, [sp, #216]
  40154c:	ldr	x1, [x21]
  401550:	eor	x1, x2, x1
  401554:	cbz	x1, 4018e4 <main+0x464>
  401558:	bl	401330 <__stack_chk_fail@plt>
  40155c:	mov	w0, #0x12                  	// #18
  401560:	adrp	x20, 401000 <_init-0x1b8>
  401564:	bl	401280 <umask@plt>
  401568:	add	x20, x20, #0xe59
  40156c:	mov	x0, x20
  401570:	bl	401290 <secure_getenv@plt>
  401574:	cbnz	x0, 401580 <main+0x100>
  401578:	adrp	x0, 401000 <_init-0x1b8>
  40157c:	add	x0, x0, #0xe2d
  401580:	adrp	x1, 402000 <__func__.10828+0x79>
  401584:	add	x1, x1, #0x453
  401588:	bl	4012a0 <setmntent@plt>
  40158c:	mov	x22, x0
  401590:	cbnz	x0, 401780 <main+0x300>
  401594:	bl	401320 <__errno_location@plt>
  401598:	ldr	w19, [x0]
  40159c:	cmp	w19, #0x2
  4015a0:	b.ne	4015ec <main+0x16c>  // b.any
  4015a4:	adrp	x0, 401000 <_init-0x1b8>
  4015a8:	add	x0, x0, #0xe67
  4015ac:	bl	401310 <getenv_bool@plt>
  4015b0:	cmp	w0, #0x0
  4015b4:	mov	w19, w0
  4015b8:	ccmn	w0, #0x6, #0x4, lt  // lt = tstop
  4015bc:	b.ne	401798 <main+0x318>  // b.any
  4015c0:	cmp	w0, #0x0
  4015c4:	b.le	401694 <main+0x214>
  4015c8:	add	x2, sp, #0x50
  4015cc:	mov	w1, #0x1                   	// #1
  4015d0:	adrp	x0, 402000 <__func__.10828+0x79>
  4015d4:	add	x0, x0, #0xe0
  4015d8:	bl	401a28 <do_remount>
  4015dc:	mov	w19, w0
  4015e0:	tbz	w0, #31, 401694 <main+0x214>
  4015e4:	cbnz	x22, 401774 <main+0x2f4>
  4015e8:	b	401510 <main+0x90>
  4015ec:	mov	w0, #0x0                   	// #0
  4015f0:	bl	401470 <log_get_max_level_realm@plt>
  4015f4:	cmp	w0, #0x2
  4015f8:	b.le	401640 <main+0x1c0>
  4015fc:	mov	x0, x20
  401600:	bl	401290 <secure_getenv@plt>
  401604:	mov	x6, x0
  401608:	cbnz	x0, 401614 <main+0x194>
  40160c:	adrp	x6, 401000 <_init-0x1b8>
  401610:	add	x6, x6, #0xe2d
  401614:	mov	w1, w19
  401618:	adrp	x5, 401000 <_init-0x1b8>
  40161c:	adrp	x4, 401000 <_init-0x1b8>
  401620:	add	x5, x5, #0xe7f
  401624:	add	x4, x4, #0xf87
  401628:	mov	w3, #0x5d                  	// #93
  40162c:	adrp	x2, 401000 <_init-0x1b8>
  401630:	mov	w0, #0x3                   	// #3
  401634:	add	x2, x2, #0xdcb
  401638:	bl	4013b0 <log_internal_realm@plt>
  40163c:	b	40150c <main+0x8c>
  401640:	cmp	w19, #0x0
  401644:	cneg	w19, w19, lt  // lt = tstop
  401648:	and	w0, w19, #0xff
  40164c:	neg	w19, w0
  401650:	b	401510 <main+0x90>
  401654:	ldr	x0, [x19, #8]
  401658:	bl	401c74 <mount_point_is_api>
  40165c:	tst	w0, #0xff
  401660:	b.ne	401744 <main+0x2c4>  // b.any
  401664:	ldp	x0, x1, [x20]
  401668:	add	x25, sp, #0x58
  40166c:	stp	x0, x1, [sp, #88]
  401670:	ldr	x0, [x20, #16]
  401674:	str	x0, [sp, #104]
  401678:	ldr	x1, [x25]
  40167c:	cbnz	x1, 40172c <main+0x2ac>
  401680:	mov	x0, x22
  401684:	bl	4012d0 <getmntent@plt>
  401688:	mov	x19, x0
  40168c:	cbnz	x0, 401654 <main+0x1d4>
  401690:	cbz	w23, 4015a4 <main+0x124>
  401694:	adrp	x24, 401000 <_init-0x1b8>
  401698:	adrp	x23, 401000 <_init-0x1b8>
  40169c:	add	x24, x24, #0xf0e
  4016a0:	add	x23, x23, #0xf87
  4016a4:	mov	w19, #0x0                   	// #0
  4016a8:	ldr	x0, [sp, #80]
  4016ac:	bl	4013a0 <internal_hashmap_size@plt>
  4016b0:	cbz	w0, 4015e4 <main+0x164>
  4016b4:	mov	x2, #0x80                  	// #128
  4016b8:	mov	w1, #0x0                   	// #0
  4016bc:	add	x0, sp, #0x58
  4016c0:	bl	401460 <memset@plt>
  4016c4:	add	x2, sp, #0x58
  4016c8:	mov	w3, #0x4                   	// #4
  4016cc:	mov	w1, #0x0                   	// #0
  4016d0:	mov	w0, #0x0                   	// #0
  4016d4:	bl	401340 <waitid@plt>
  4016d8:	tbz	w0, #31, 4017e8 <main+0x368>
  4016dc:	bl	401320 <__errno_location@plt>
  4016e0:	ldr	w20, [x0]
  4016e4:	cmp	w20, #0x4
  4016e8:	b.eq	4016a8 <main+0x228>  // b.none
  4016ec:	mov	w0, #0x0                   	// #0
  4016f0:	bl	401470 <log_get_max_level_realm@plt>
  4016f4:	cmp	w0, #0x2
  4016f8:	b.le	4017d4 <main+0x354>
  4016fc:	mov	w1, w20
  401700:	adrp	x5, 401000 <_init-0x1b8>
  401704:	adrp	x4, 401000 <_init-0x1b8>
  401708:	add	x5, x5, #0xecc
  40170c:	add	x4, x4, #0xf87
  401710:	mov	w3, #0x86                  	// #134
  401714:	adrp	x2, 401000 <_init-0x1b8>
  401718:	mov	w0, #0x3                   	// #3
  40171c:	add	x2, x2, #0xdcb
  401720:	bl	4013b0 <log_internal_realm@plt>
  401724:	mov	w19, w0
  401728:	b	4015e4 <main+0x164>
  40172c:	ldr	x0, [x19, #8]
  401730:	bl	401240 <path_equal@plt>
  401734:	tst	w0, #0xff
  401738:	b.ne	401744 <main+0x2c4>  // b.any
  40173c:	add	x25, x25, #0x8
  401740:	b	401678 <main+0x1f8>
  401744:	ldr	x19, [x19, #8]
  401748:	mov	x1, x24
  40174c:	mov	x0, x19
  401750:	bl	401240 <path_equal@plt>
  401754:	ands	w0, w0, #0xff
  401758:	add	x2, sp, #0x50
  40175c:	csel	w23, w23, w0, eq  // eq = none
  401760:	mov	w1, #0x0                   	// #0
  401764:	mov	x0, x19
  401768:	bl	401a28 <do_remount>
  40176c:	mov	w19, w0
  401770:	tbz	w0, #31, 401680 <main+0x200>
  401774:	mov	x0, x22
  401778:	bl	4012e0 <endmntent@plt>
  40177c:	b	401510 <main+0x90>
  401780:	adrp	x24, 402000 <__func__.10828+0x79>
  401784:	adrp	x20, 401000 <_init-0x1b8>
  401788:	add	x24, x24, #0xe0
  40178c:	add	x20, x20, #0xf50
  401790:	mov	w23, #0x0                   	// #0
  401794:	b	401680 <main+0x200>
  401798:	mov	w0, #0x0                   	// #0
  40179c:	bl	401470 <log_get_max_level_realm@plt>
  4017a0:	cmp	w0, #0x3
  4017a4:	b.le	401694 <main+0x214>
  4017a8:	mov	w1, w19
  4017ac:	adrp	x5, 401000 <_init-0x1b8>
  4017b0:	adrp	x4, 401000 <_init-0x1b8>
  4017b4:	add	x5, x5, #0xe95
  4017b8:	add	x4, x4, #0xf87
  4017bc:	mov	w3, #0x74                  	// #116
  4017c0:	adrp	x2, 401000 <_init-0x1b8>
  4017c4:	mov	w0, #0x4                   	// #4
  4017c8:	add	x2, x2, #0xdcb
  4017cc:	bl	4013b0 <log_internal_realm@plt>
  4017d0:	b	401694 <main+0x214>
  4017d4:	cmp	w20, #0x0
  4017d8:	cneg	w19, w20, lt  // lt = tstop
  4017dc:	and	w19, w19, #0xff
  4017e0:	neg	w19, w19
  4017e4:	b	4015e4 <main+0x164>
  4017e8:	ldrsw	x1, [sp, #104]
  4017ec:	ldr	x0, [sp, #80]
  4017f0:	bl	4011f0 <internal_hashmap_remove@plt>
  4017f4:	mov	x20, x0
  4017f8:	cbz	x0, 401864 <main+0x3e4>
  4017fc:	ldr	w0, [sp, #96]
  401800:	mov	x3, #0x0                   	// #0
  401804:	ldr	w1, [sp, #112]
  401808:	mov	w2, #0x1                   	// #1
  40180c:	bl	401440 <is_clean_exit@plt>
  401810:	tst	w0, #0xff
  401814:	b.ne	401864 <main+0x3e4>  // b.any
  401818:	mov	w0, #0x0                   	// #0
  40181c:	bl	401470 <log_get_max_level_realm@plt>
  401820:	ldr	w1, [sp, #96]
  401824:	cmp	w1, #0x1
  401828:	b.ne	401870 <main+0x3f0>  // b.any
  40182c:	cmp	w0, #0x2
  401830:	b.le	401860 <main+0x3e0>
  401834:	ldr	w7, [sp, #112]
  401838:	adrp	x5, 401000 <_init-0x1b8>
  40183c:	adrp	x2, 401000 <_init-0x1b8>
  401840:	mov	x6, x20
  401844:	add	x5, x5, #0xee0
  401848:	mov	x4, x23
  40184c:	add	x2, x2, #0xdcb
  401850:	mov	w3, #0x8d                  	// #141
  401854:	mov	w1, #0x0                   	// #0
  401858:	mov	w0, #0x3                   	// #3
  40185c:	bl	4013b0 <log_internal_realm@plt>
  401860:	mov	w19, #0xfffffff8            	// #-8
  401864:	mov	x0, x20
  401868:	bl	401400 <free@plt>
  40186c:	b	4016a8 <main+0x228>
  401870:	cmp	w0, #0x2
  401874:	b.le	401860 <main+0x3e0>
  401878:	ldr	w0, [sp, #112]
  40187c:	bl	401360 <signal_to_string@plt>
  401880:	mov	x7, x0
  401884:	mov	x6, x20
  401888:	mov	x5, x24
  40188c:	mov	x4, x23
  401890:	mov	w3, #0x8f                  	// #143
  401894:	adrp	x2, 401000 <_init-0x1b8>
  401898:	mov	w1, #0x0                   	// #0
  40189c:	add	x2, x2, #0xdcb
  4018a0:	mov	w0, #0x3                   	// #3
  4018a4:	bl	4013b0 <log_internal_realm@plt>
  4018a8:	b	401860 <main+0x3e0>
  4018ac:	mov	w19, #0xffffffea            	// #-22
  4018b0:	b	401510 <main+0x90>
  4018b4:	add	x0, x0, #0x7
  4018b8:	adrp	x22, 401000 <_init-0x1b8>
  4018bc:	and	x0, x0, #0xfffffffffffffff8
  4018c0:	ldr	x1, [x22, #3912]
  4018c4:	cmp	x0, x1
  4018c8:	b.cs	401544 <main+0xc4>  // b.hs, b.nlast
  4018cc:	mov	x20, x0
  4018d0:	ldr	x1, [x0, #8]
  4018d4:	ldr	x0, [x20], #23
  4018d8:	blr	x1
  4018dc:	and	x0, x20, #0xfffffffffffffff8
  4018e0:	b	4018c0 <main+0x440>
  4018e4:	ldp	x19, x20, [sp, #16]
  4018e8:	ldp	x21, x22, [sp, #32]
  4018ec:	ldp	x23, x24, [sp, #48]
  4018f0:	ldr	x25, [sp, #64]
  4018f4:	ldp	x29, x30, [sp], #224
  4018f8:	ret

00000000004018fc <_start>:
  4018fc:	mov	x29, #0x0                   	// #0
  401900:	mov	x30, #0x0                   	// #0
  401904:	mov	x5, x0
  401908:	ldr	x1, [sp]
  40190c:	add	x2, sp, #0x8
  401910:	mov	x6, sp
  401914:	movz	x0, #0x0, lsl #48
  401918:	movk	x0, #0x0, lsl #32
  40191c:	movk	x0, #0x40, lsl #16
  401920:	movk	x0, #0x1480
  401924:	movz	x3, #0x0, lsl #48
  401928:	movk	x3, #0x0, lsl #32
  40192c:	movk	x3, #0x40, lsl #16
  401930:	movk	x3, #0x1ce0
  401934:	movz	x4, #0x0, lsl #48
  401938:	movk	x4, #0x0, lsl #32
  40193c:	movk	x4, #0x40, lsl #16
  401940:	movk	x4, #0x1d60
  401944:	bl	401210 <__libc_start_main@plt>
  401948:	bl	4012c0 <abort@plt>

000000000040194c <call_weak_fn>:
  40194c:	adrp	x0, 412000 <__FRAME_END__+0xf9a8>
  401950:	ldr	x0, [x0, #4088]
  401954:	cbz	x0, 40195c <call_weak_fn+0x10>
  401958:	b	401220 <__gmon_start__@plt>
  40195c:	ret

0000000000401960 <deregister_tm_clones>:
  401960:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401964:	add	x1, x0, #0x0
  401968:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  40196c:	add	x0, x0, #0x0
  401970:	cmp	x1, x0
  401974:	b.eq	4019a0 <deregister_tm_clones+0x40>  // b.none
  401978:	sub	sp, sp, #0x10
  40197c:	adrp	x1, 401000 <_init-0x1b8>
  401980:	ldr	x1, [x1, #3448]
  401984:	str	x1, [sp, #8]
  401988:	cbz	x1, 401998 <deregister_tm_clones+0x38>
  40198c:	mov	x16, x1
  401990:	add	sp, sp, #0x10
  401994:	br	x16
  401998:	add	sp, sp, #0x10
  40199c:	ret
  4019a0:	ret

00000000004019a4 <register_tm_clones>:
  4019a4:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4019a8:	add	x1, x0, #0x0
  4019ac:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4019b0:	add	x0, x0, #0x0
  4019b4:	sub	x1, x1, x0
  4019b8:	mov	x2, #0x2                   	// #2
  4019bc:	asr	x1, x1, #3
  4019c0:	sdiv	x1, x1, x2
  4019c4:	cbz	x1, 4019f0 <register_tm_clones+0x4c>
  4019c8:	sub	sp, sp, #0x10
  4019cc:	adrp	x2, 401000 <_init-0x1b8>
  4019d0:	ldr	x2, [x2, #3456]
  4019d4:	str	x2, [sp, #8]
  4019d8:	cbz	x2, 4019e8 <register_tm_clones+0x44>
  4019dc:	mov	x16, x2
  4019e0:	add	sp, sp, #0x10
  4019e4:	br	x16
  4019e8:	add	sp, sp, #0x10
  4019ec:	ret
  4019f0:	ret

00000000004019f4 <__do_global_dtors_aux>:
  4019f4:	stp	x29, x30, [sp, #-32]!
  4019f8:	mov	x29, sp
  4019fc:	str	x19, [sp, #16]
  401a00:	adrp	x19, 413000 <saved_argv@@SD_SHARED>
  401a04:	ldrb	w0, [x19, #12]
  401a08:	cbnz	w0, 401a18 <__do_global_dtors_aux+0x24>
  401a0c:	bl	401960 <deregister_tm_clones>
  401a10:	mov	w0, #0x1                   	// #1
  401a14:	strb	w0, [x19, #12]
  401a18:	ldr	x19, [sp, #16]
  401a1c:	ldp	x29, x30, [sp], #32
  401a20:	ret

0000000000401a24 <frame_dummy>:
  401a24:	b	4019a4 <register_tm_clones>

0000000000401a28 <do_remount>:
  401a28:	stp	x29, x30, [sp, #-128]!
  401a2c:	mov	x29, sp
  401a30:	stp	x21, x22, [sp, #32]
  401a34:	adrp	x21, 412000 <__FRAME_END__+0xf9a8>
  401a38:	add	x21, x21, #0x7f8
  401a3c:	stp	x19, x20, [sp, #16]
  401a40:	mov	x20, x0
  401a44:	ldr	x0, [x21]
  401a48:	str	x0, [sp, #120]
  401a4c:	mov	x0, #0x0                   	// #0
  401a50:	mov	x22, x2
  401a54:	str	x23, [sp, #48]
  401a58:	and	w23, w1, #0xff
  401a5c:	bl	401470 <log_get_max_level_realm@plt>
  401a60:	cmp	w0, #0x6
  401a64:	b.le	401a94 <do_remount+0x6c>
  401a68:	adrp	x5, 401000 <_init-0x1b8>
  401a6c:	adrp	x4, 401000 <_init-0x1b8>
  401a70:	adrp	x2, 401000 <_init-0x1b8>
  401a74:	mov	x6, x20
  401a78:	add	x5, x5, #0xdb7
  401a7c:	add	x4, x4, #0xf7c
  401a80:	add	x2, x2, #0xdcb
  401a84:	mov	w3, #0x36                  	// #54
  401a88:	mov	w1, #0x0                   	// #0
  401a8c:	mov	w0, #0x7                   	// #7
  401a90:	bl	4013b0 <log_internal_realm@plt>
  401a94:	cmp	w23, #0x0
  401a98:	adrp	x5, 401000 <_init-0x1b8>
  401a9c:	add	x5, x5, #0xd9a
  401aa0:	adrp	x0, 401000 <_init-0x1b8>
  401aa4:	add	x0, x0, #0xd8d
  401aa8:	add	x4, sp, #0x4c
  401aac:	csel	x0, x0, x5, ne  // ne = any
  401ab0:	mov	w3, #0x225                 	// #549
  401ab4:	mov	x2, #0x0                   	// #0
  401ab8:	mov	x1, #0x0                   	// #0
  401abc:	bl	4013f0 <safe_fork_full@plt>
  401ac0:	mov	w19, w0
  401ac4:	cmp	w0, #0x0
  401ac8:	b.lt	401be4 <do_remount+0x1bc>  // b.tstop
  401acc:	b.ne	401b54 <do_remount+0x12c>  // b.any
  401ad0:	adrp	x1, 401000 <_init-0x1b8>
  401ad4:	add	x1, x1, #0xdf2
  401ad8:	cmp	w23, #0x0
  401adc:	adrp	x2, 401000 <_init-0x1b8>
  401ae0:	add	x2, x2, #0xdaf
  401ae4:	str	x1, [sp, #96]
  401ae8:	adrp	x1, 401000 <_init-0x1b8>
  401aec:	add	x1, x1, #0xda4
  401af0:	csel	x1, x1, x2, ne  // ne = any
  401af4:	str	x1, [sp, #104]
  401af8:	add	x1, sp, #0x50
  401afc:	adrp	x0, 401000 <_init-0x1b8>
  401b00:	add	x0, x0, #0xde7
  401b04:	stp	x0, x20, [sp, #80]
  401b08:	str	xzr, [sp, #112]
  401b0c:	bl	4013e0 <execv@plt>
  401b10:	mov	w0, #0x0                   	// #0
  401b14:	bl	401470 <log_get_max_level_realm@plt>
  401b18:	cmp	w0, #0x2
  401b1c:	b.le	401b4c <do_remount+0x124>
  401b20:	bl	401320 <__errno_location@plt>
  401b24:	ldr	w1, [x0]
  401b28:	adrp	x5, 401000 <_init-0x1b8>
  401b2c:	adrp	x4, 401000 <_init-0x1b8>
  401b30:	adrp	x2, 401000 <_init-0x1b8>
  401b34:	add	x5, x5, #0xdf5
  401b38:	add	x4, x4, #0xf7c
  401b3c:	add	x2, x2, #0xdcb
  401b40:	mov	w3, #0x43                  	// #67
  401b44:	mov	w0, #0x3                   	// #3
  401b48:	bl	4013b0 <log_internal_realm@plt>
  401b4c:	mov	w0, #0x1                   	// #1
  401b50:	bl	401270 <_exit@plt>
  401b54:	cbnz	x20, 401b7c <do_remount+0x154>
  401b58:	adrp	x4, 401000 <_init-0x1b8>
  401b5c:	adrp	x2, 401000 <_init-0x1b8>
  401b60:	adrp	x1, 401000 <_init-0x1b8>
  401b64:	add	x4, x4, #0xf68
  401b68:	add	x2, x2, #0xdcb
  401b6c:	add	x1, x1, #0xe16
  401b70:	mov	w3, #0x1f                  	// #31
  401b74:	mov	w0, #0x0                   	// #0
  401b78:	bl	401260 <log_assert_failed_realm@plt>
  401b7c:	ldr	w19, [sp, #76]
  401b80:	cmp	w19, #0x0
  401b84:	b.gt	401ba8 <do_remount+0x180>
  401b88:	adrp	x4, 401000 <_init-0x1b8>
  401b8c:	adrp	x2, 401000 <_init-0x1b8>
  401b90:	adrp	x1, 401000 <_init-0x1b8>
  401b94:	add	x4, x4, #0xf68
  401b98:	add	x2, x2, #0xdcb
  401b9c:	add	x1, x1, #0xe1b
  401ba0:	mov	w3, #0x20                  	// #32
  401ba4:	b	401b74 <do_remount+0x14c>
  401ba8:	mov	x0, x22
  401bac:	mov	x1, #0x0                   	// #0
  401bb0:	bl	401420 <internal_hashmap_ensure_allocated@plt>
  401bb4:	tbz	w0, #31, 401bf8 <do_remount+0x1d0>
  401bb8:	adrp	x3, 401000 <_init-0x1b8>
  401bbc:	mov	w2, #0x24                  	// #36
  401bc0:	add	x3, x3, #0xf72
  401bc4:	adrp	x1, 401000 <_init-0x1b8>
  401bc8:	mov	w0, #0x0                   	// #0
  401bcc:	add	x1, x1, #0xdcb
  401bd0:	bl	401450 <log_oom_internal@plt>
  401bd4:	mov	w19, w0
  401bd8:	mov	x20, #0x0                   	// #0
  401bdc:	mov	x0, x20
  401be0:	bl	401400 <free@plt>
  401be4:	ldr	x1, [sp, #120]
  401be8:	ldr	x0, [x21]
  401bec:	eor	x0, x1, x0
  401bf0:	cbz	x0, 401c5c <do_remount+0x234>
  401bf4:	bl	401330 <__stack_chk_fail@plt>
  401bf8:	mov	x0, x20
  401bfc:	bl	4013d0 <strdup@plt>
  401c00:	mov	x20, x0
  401c04:	cbnz	x0, 401c2c <do_remount+0x204>
  401c08:	adrp	x3, 401000 <_init-0x1b8>
  401c0c:	add	x3, x3, #0xf72
  401c10:	mov	w2, #0x28                  	// #40
  401c14:	adrp	x1, 401000 <_init-0x1b8>
  401c18:	mov	w0, #0x0                   	// #0
  401c1c:	add	x1, x1, #0xdcb
  401c20:	bl	401450 <log_oom_internal@plt>
  401c24:	mov	w19, w0
  401c28:	b	401bdc <do_remount+0x1b4>
  401c2c:	mov	x2, x0
  401c30:	sxtw	x1, w19
  401c34:	ldr	x0, [x22]
  401c38:	bl	4013c0 <hashmap_put@plt>
  401c3c:	tbz	w0, #31, 401c50 <do_remount+0x228>
  401c40:	adrp	x3, 401000 <_init-0x1b8>
  401c44:	mov	w2, #0x2c                  	// #44
  401c48:	add	x3, x3, #0xf72
  401c4c:	b	401c14 <do_remount+0x1ec>
  401c50:	mov	x20, #0x0                   	// #0
  401c54:	mov	w19, #0x0                   	// #0
  401c58:	b	401bdc <do_remount+0x1b4>
  401c5c:	mov	w0, w19
  401c60:	ldp	x19, x20, [sp, #16]
  401c64:	ldp	x21, x22, [sp, #32]
  401c68:	ldr	x23, [sp, #48]
  401c6c:	ldp	x29, x30, [sp], #128
  401c70:	ret

0000000000401c74 <mount_point_is_api>:
  401c74:	stp	x29, x30, [sp, #-48]!
  401c78:	mov	x29, sp
  401c7c:	stp	x19, x20, [sp, #16]
  401c80:	mov	x19, x0
  401c84:	mov	x20, #0x0                   	// #0
  401c88:	str	x21, [sp, #32]
  401c8c:	adrp	x21, 412000 <__FRAME_END__+0xf9a8>
  401c90:	add	x21, x21, #0x800
  401c94:	add	x0, x21, x20
  401c98:	ldr	x1, [x0, #8]
  401c9c:	mov	x0, x19
  401ca0:	bl	401240 <path_equal@plt>
  401ca4:	ands	w0, w0, #0xff
  401ca8:	b.ne	401cd0 <mount_point_is_api+0x5c>  // b.any
  401cac:	add	x20, x20, #0x38
  401cb0:	cmp	x20, #0x460
  401cb4:	b.ne	401c94 <mount_point_is_api+0x20>  // b.any
  401cb8:	mov	x0, x19
  401cbc:	adrp	x1, 401000 <_init-0x1b8>
  401cc0:	add	x1, x1, #0xfb7
  401cc4:	bl	4012f0 <path_startswith@plt>
  401cc8:	cmp	x0, #0x0
  401ccc:	cset	w0, ne  // ne = any
  401cd0:	ldp	x19, x20, [sp, #16]
  401cd4:	ldr	x21, [sp, #32]
  401cd8:	ldp	x29, x30, [sp], #48
  401cdc:	ret

0000000000401ce0 <__libc_csu_init>:
  401ce0:	stp	x29, x30, [sp, #-64]!
  401ce4:	mov	x29, sp
  401ce8:	stp	x19, x20, [sp, #16]
  401cec:	adrp	x20, 412000 <__FRAME_END__+0xf9a8>
  401cf0:	add	x20, x20, #0x7f0
  401cf4:	stp	x21, x22, [sp, #32]
  401cf8:	adrp	x21, 412000 <__FRAME_END__+0xf9a8>
  401cfc:	add	x21, x21, #0x7e8
  401d00:	sub	x20, x20, x21
  401d04:	mov	w22, w0
  401d08:	stp	x23, x24, [sp, #48]
  401d0c:	mov	x23, x1
  401d10:	mov	x24, x2
  401d14:	bl	4011b8 <_init>
  401d18:	cmp	xzr, x20, asr #3
  401d1c:	b.eq	401d48 <__libc_csu_init+0x68>  // b.none
  401d20:	asr	x20, x20, #3
  401d24:	mov	x19, #0x0                   	// #0
  401d28:	ldr	x3, [x21, x19, lsl #3]
  401d2c:	mov	x2, x24
  401d30:	add	x19, x19, #0x1
  401d34:	mov	x1, x23
  401d38:	mov	w0, w22
  401d3c:	blr	x3
  401d40:	cmp	x20, x19
  401d44:	b.ne	401d28 <__libc_csu_init+0x48>  // b.any
  401d48:	ldp	x19, x20, [sp, #16]
  401d4c:	ldp	x21, x22, [sp, #32]
  401d50:	ldp	x23, x24, [sp, #48]
  401d54:	ldp	x29, x30, [sp], #64
  401d58:	ret
  401d5c:	nop

0000000000401d60 <__libc_csu_fini>:
  401d60:	ret

Disassembly of section .fini:

0000000000401d64 <_fini>:
  401d64:	stp	x29, x30, [sp, #-16]!
  401d68:	mov	x29, sp
  401d6c:	ldp	x29, x30, [sp], #16
  401d70:	ret
