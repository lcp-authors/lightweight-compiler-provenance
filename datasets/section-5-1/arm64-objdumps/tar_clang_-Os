
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//tar_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004040a0 <.init>:
  4040a0:	stp	x29, x30, [sp, #-16]!
  4040a4:	mov	x29, sp
  4040a8:	bl	404e60 <wcrtomb@plt+0x60>
  4040ac:	ldp	x29, x30, [sp], #16
  4040b0:	ret

Disassembly of section .plt:

00000000004040c0 <mbrtowc@plt-0x20>:
  4040c0:	stp	x16, x30, [sp, #-16]!
  4040c4:	adrp	x16, 466000 <_obstack_memory_used@@Base+0x2a808>
  4040c8:	ldr	x17, [x16, #4088]
  4040cc:	add	x16, x16, #0xff8
  4040d0:	br	x17
  4040d4:	nop
  4040d8:	nop
  4040dc:	nop

00000000004040e0 <mbrtowc@plt>:
  4040e0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4040e4:	ldr	x17, [x16]
  4040e8:	add	x16, x16, #0x0
  4040ec:	br	x17

00000000004040f0 <memcpy@plt>:
  4040f0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4040f4:	ldr	x17, [x16, #8]
  4040f8:	add	x16, x16, #0x8
  4040fc:	br	x17

0000000000404100 <memmove@plt>:
  404100:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404104:	ldr	x17, [x16, #16]
  404108:	add	x16, x16, #0x10
  40410c:	br	x17

0000000000404110 <_exit@plt>:
  404110:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404114:	ldr	x17, [x16, #24]
  404118:	add	x16, x16, #0x18
  40411c:	br	x17

0000000000404120 <getcwd@plt>:
  404120:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404124:	ldr	x17, [x16, #32]
  404128:	add	x16, x16, #0x20
  40412c:	br	x17

0000000000404130 <setuid@plt>:
  404130:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404134:	ldr	x17, [x16, #40]
  404138:	add	x16, x16, #0x28
  40413c:	br	x17

0000000000404140 <strtok@plt>:
  404140:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404144:	ldr	x17, [x16, #48]
  404148:	add	x16, x16, #0x30
  40414c:	br	x17

0000000000404150 <fwrite_unlocked@plt>:
  404150:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404154:	ldr	x17, [x16, #56]
  404158:	add	x16, x16, #0x38
  40415c:	br	x17

0000000000404160 <strtoul@plt>:
  404160:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404164:	ldr	x17, [x16, #64]
  404168:	add	x16, x16, #0x40
  40416c:	br	x17

0000000000404170 <strlen@plt>:
  404170:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404174:	ldr	x17, [x16, #72]
  404178:	add	x16, x16, #0x48
  40417c:	br	x17

0000000000404180 <fputs@plt>:
  404180:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404184:	ldr	x17, [x16, #80]
  404188:	add	x16, x16, #0x50
  40418c:	br	x17

0000000000404190 <__sprintf_chk@plt>:
  404190:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404194:	ldr	x17, [x16, #88]
  404198:	add	x16, x16, #0x58
  40419c:	br	x17

00000000004041a0 <exit@plt>:
  4041a0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4041a4:	ldr	x17, [x16, #96]
  4041a8:	add	x16, x16, #0x60
  4041ac:	br	x17

00000000004041b0 <raise@plt>:
  4041b0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4041b4:	ldr	x17, [x16, #104]
  4041b8:	add	x16, x16, #0x68
  4041bc:	br	x17

00000000004041c0 <dup@plt>:
  4041c0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4041c4:	ldr	x17, [x16, #112]
  4041c8:	add	x16, x16, #0x70
  4041cc:	br	x17

00000000004041d0 <error@plt>:
  4041d0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4041d4:	ldr	x17, [x16, #120]
  4041d8:	add	x16, x16, #0x78
  4041dc:	br	x17

00000000004041e0 <fchdir@plt>:
  4041e0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4041e4:	ldr	x17, [x16, #128]
  4041e8:	add	x16, x16, #0x80
  4041ec:	br	x17

00000000004041f0 <rpmatch@plt>:
  4041f0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4041f4:	ldr	x17, [x16, #136]
  4041f8:	add	x16, x16, #0x88
  4041fc:	br	x17

0000000000404200 <execl@plt>:
  404200:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404204:	ldr	x17, [x16, #144]
  404208:	add	x16, x16, #0x90
  40420c:	br	x17

0000000000404210 <flockfile@plt>:
  404210:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404214:	ldr	x17, [x16, #152]
  404218:	add	x16, x16, #0x98
  40421c:	br	x17

0000000000404220 <strtoimax@plt>:
  404220:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404224:	ldr	x17, [x16, #160]
  404228:	add	x16, x16, #0xa0
  40422c:	br	x17

0000000000404230 <wctype@plt>:
  404230:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404234:	ldr	x17, [x16, #168]
  404238:	add	x16, x16, #0xa8
  40423c:	br	x17

0000000000404240 <sigprocmask@plt>:
  404240:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404244:	ldr	x17, [x16, #176]
  404248:	add	x16, x16, #0xb0
  40424c:	br	x17

0000000000404250 <strnlen@plt>:
  404250:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404254:	ldr	x17, [x16, #184]
  404258:	add	x16, x16, #0xb8
  40425c:	br	x17

0000000000404260 <geteuid@plt>:
  404260:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404264:	ldr	x17, [x16, #192]
  404268:	add	x16, x16, #0xc0
  40426c:	br	x17

0000000000404270 <linkat@plt>:
  404270:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404274:	ldr	x17, [x16, #200]
  404278:	add	x16, x16, #0xc8
  40427c:	br	x17

0000000000404280 <localtime_r@plt>:
  404280:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404284:	ldr	x17, [x16, #208]
  404288:	add	x16, x16, #0xd0
  40428c:	br	x17

0000000000404290 <setenv@plt>:
  404290:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404294:	ldr	x17, [x16, #216]
  404298:	add	x16, x16, #0xd8
  40429c:	br	x17

00000000004042a0 <getgrnam@plt>:
  4042a0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4042a4:	ldr	x17, [x16, #224]
  4042a8:	add	x16, x16, #0xe0
  4042ac:	br	x17

00000000004042b0 <ferror_unlocked@plt>:
  4042b0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4042b4:	ldr	x17, [x16, #232]
  4042b8:	add	x16, x16, #0xe8
  4042bc:	br	x17

00000000004042c0 <getuid@plt>:
  4042c0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4042c4:	ldr	x17, [x16, #240]
  4042c8:	add	x16, x16, #0xf0
  4042cc:	br	x17

00000000004042d0 <pipe@plt>:
  4042d0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4042d4:	ldr	x17, [x16, #248]
  4042d8:	add	x16, x16, #0xf8
  4042dc:	br	x17

00000000004042e0 <opendir@plt>:
  4042e0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4042e4:	ldr	x17, [x16, #256]
  4042e8:	add	x16, x16, #0x100
  4042ec:	br	x17

00000000004042f0 <strftime@plt>:
  4042f0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4042f4:	ldr	x17, [x16, #264]
  4042f8:	add	x16, x16, #0x108
  4042fc:	br	x17

0000000000404300 <unlinkat@plt>:
  404300:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404304:	ldr	x17, [x16, #272]
  404308:	add	x16, x16, #0x110
  40430c:	br	x17

0000000000404310 <fputc@plt>:
  404310:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404314:	ldr	x17, [x16, #280]
  404318:	add	x16, x16, #0x118
  40431c:	br	x17

0000000000404320 <iswcntrl@plt>:
  404320:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404324:	ldr	x17, [x16, #288]
  404328:	add	x16, x16, #0x120
  40432c:	br	x17

0000000000404330 <clock_gettime@plt>:
  404330:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404334:	ldr	x17, [x16, #296]
  404338:	add	x16, x16, #0x128
  40433c:	br	x17

0000000000404340 <qsort@plt>:
  404340:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404344:	ldr	x17, [x16, #304]
  404348:	add	x16, x16, #0x130
  40434c:	br	x17

0000000000404350 <pathconf@plt>:
  404350:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404354:	ldr	x17, [x16, #312]
  404358:	add	x16, x16, #0x138
  40435c:	br	x17

0000000000404360 <fork@plt>:
  404360:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404364:	ldr	x17, [x16, #320]
  404368:	add	x16, x16, #0x140
  40436c:	br	x17

0000000000404370 <lseek@plt>:
  404370:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404374:	ldr	x17, [x16, #328]
  404378:	add	x16, x16, #0x148
  40437c:	br	x17

0000000000404380 <__fpending@plt>:
  404380:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404384:	ldr	x17, [x16, #336]
  404388:	add	x16, x16, #0x150
  40438c:	br	x17

0000000000404390 <__ctype_tolower_loc@plt>:
  404390:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404394:	ldr	x17, [x16, #344]
  404398:	add	x16, x16, #0x158
  40439c:	br	x17

00000000004043a0 <gnu_dev_makedev@plt>:
  4043a0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4043a4:	ldr	x17, [x16, #352]
  4043a8:	add	x16, x16, #0x160
  4043ac:	br	x17

00000000004043b0 <localeconv@plt>:
  4043b0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4043b4:	ldr	x17, [x16, #360]
  4043b8:	add	x16, x16, #0x168
  4043bc:	br	x17

00000000004043c0 <stpcpy@plt>:
  4043c0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4043c4:	ldr	x17, [x16, #368]
  4043c8:	add	x16, x16, #0x170
  4043cc:	br	x17

00000000004043d0 <fileno@plt>:
  4043d0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4043d4:	ldr	x17, [x16, #376]
  4043d8:	add	x16, x16, #0x178
  4043dc:	br	x17

00000000004043e0 <putc_unlocked@plt>:
  4043e0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4043e4:	ldr	x17, [x16, #384]
  4043e8:	add	x16, x16, #0x180
  4043ec:	br	x17

00000000004043f0 <localtime@plt>:
  4043f0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4043f4:	ldr	x17, [x16, #392]
  4043f8:	add	x16, x16, #0x188
  4043fc:	br	x17

0000000000404400 <__memcpy_chk@plt>:
  404400:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404404:	ldr	x17, [x16, #400]
  404408:	add	x16, x16, #0x190
  40440c:	br	x17

0000000000404410 <mkdirat@plt>:
  404410:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404414:	ldr	x17, [x16, #408]
  404418:	add	x16, x16, #0x198
  40441c:	br	x17

0000000000404420 <signal@plt>:
  404420:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404424:	ldr	x17, [x16, #416]
  404428:	add	x16, x16, #0x1a0
  40442c:	br	x17

0000000000404430 <acl_delete_def_file@plt>:
  404430:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404434:	ldr	x17, [x16, #424]
  404438:	add	x16, x16, #0x1a8
  40443c:	br	x17

0000000000404440 <__snprintf_chk@plt>:
  404440:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404444:	ldr	x17, [x16, #432]
  404448:	add	x16, x16, #0x1b0
  40444c:	br	x17

0000000000404450 <fclose@plt>:
  404450:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404454:	ldr	x17, [x16, #440]
  404458:	add	x16, x16, #0x1b8
  40445c:	br	x17

0000000000404460 <fsync@plt>:
  404460:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404464:	ldr	x17, [x16, #448]
  404468:	add	x16, x16, #0x1c0
  40446c:	br	x17

0000000000404470 <atoi@plt>:
  404470:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404474:	ldr	x17, [x16, #456]
  404478:	add	x16, x16, #0x1c8
  40447c:	br	x17

0000000000404480 <getpid@plt>:
  404480:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404484:	ldr	x17, [x16, #464]
  404488:	add	x16, x16, #0x1d0
  40448c:	br	x17

0000000000404490 <nl_langinfo@plt>:
  404490:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404494:	ldr	x17, [x16, #472]
  404498:	add	x16, x16, #0x1d8
  40449c:	br	x17

00000000004044a0 <fopen@plt>:
  4044a0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4044a4:	ldr	x17, [x16, #480]
  4044a8:	add	x16, x16, #0x1e0
  4044ac:	br	x17

00000000004044b0 <__vsnprintf_chk@plt>:
  4044b0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4044b4:	ldr	x17, [x16, #488]
  4044b8:	add	x16, x16, #0x1e8
  4044bc:	br	x17

00000000004044c0 <iswctype@plt>:
  4044c0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4044c4:	ldr	x17, [x16, #496]
  4044c8:	add	x16, x16, #0x1f0
  4044cc:	br	x17

00000000004044d0 <malloc@plt>:
  4044d0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4044d4:	ldr	x17, [x16, #504]
  4044d8:	add	x16, x16, #0x1f8
  4044dc:	br	x17

00000000004044e0 <toupper@plt>:
  4044e0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4044e4:	ldr	x17, [x16, #512]
  4044e8:	add	x16, x16, #0x200
  4044ec:	br	x17

00000000004044f0 <wcwidth@plt>:
  4044f0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4044f4:	ldr	x17, [x16, #520]
  4044f8:	add	x16, x16, #0x208
  4044fc:	br	x17

0000000000404500 <funlockfile@plt>:
  404500:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404504:	ldr	x17, [x16, #528]
  404508:	add	x16, x16, #0x210
  40450c:	br	x17

0000000000404510 <open@plt>:
  404510:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404514:	ldr	x17, [x16, #536]
  404518:	add	x16, x16, #0x218
  40451c:	br	x17

0000000000404520 <__vasprintf_chk@plt>:
  404520:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404524:	ldr	x17, [x16, #544]
  404528:	add	x16, x16, #0x220
  40452c:	br	x17

0000000000404530 <tzset@plt>:
  404530:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404534:	ldr	x17, [x16, #552]
  404538:	add	x16, x16, #0x228
  40453c:	br	x17

0000000000404540 <__strcpy_chk@plt>:
  404540:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404544:	ldr	x17, [x16, #560]
  404548:	add	x16, x16, #0x230
  40454c:	br	x17

0000000000404550 <__isoc99_fscanf@plt>:
  404550:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404554:	ldr	x17, [x16, #568]
  404558:	add	x16, x16, #0x238
  40455c:	br	x17

0000000000404560 <sigemptyset@plt>:
  404560:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404564:	ldr	x17, [x16, #576]
  404568:	add	x16, x16, #0x240
  40456c:	br	x17

0000000000404570 <futimens@plt>:
  404570:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404574:	ldr	x17, [x16, #584]
  404578:	add	x16, x16, #0x248
  40457c:	br	x17

0000000000404580 <strncmp@plt>:
  404580:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404584:	ldr	x17, [x16, #592]
  404588:	add	x16, x16, #0x250
  40458c:	br	x17

0000000000404590 <bindtextdomain@plt>:
  404590:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404594:	ldr	x17, [x16, #600]
  404598:	add	x16, x16, #0x258
  40459c:	br	x17

00000000004045a0 <__libc_start_main@plt>:
  4045a0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4045a4:	ldr	x17, [x16, #608]
  4045a8:	add	x16, x16, #0x260
  4045ac:	br	x17

00000000004045b0 <setxattr@plt>:
  4045b0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4045b4:	ldr	x17, [x16, #616]
  4045b8:	add	x16, x16, #0x268
  4045bc:	br	x17

00000000004045c0 <strcat@plt>:
  4045c0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4045c4:	ldr	x17, [x16, #624]
  4045c8:	add	x16, x16, #0x270
  4045cc:	br	x17

00000000004045d0 <__printf_chk@plt>:
  4045d0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4045d4:	ldr	x17, [x16, #632]
  4045d8:	add	x16, x16, #0x278
  4045dc:	br	x17

00000000004045e0 <memset@plt>:
  4045e0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4045e4:	ldr	x17, [x16, #640]
  4045e8:	add	x16, x16, #0x280
  4045ec:	br	x17

00000000004045f0 <fdopen@plt>:
  4045f0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4045f4:	ldr	x17, [x16, #648]
  4045f8:	add	x16, x16, #0x288
  4045fc:	br	x17

0000000000404600 <gettimeofday@plt>:
  404600:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404604:	ldr	x17, [x16, #656]
  404608:	add	x16, x16, #0x290
  40460c:	br	x17

0000000000404610 <getpwnam@plt>:
  404610:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404614:	ldr	x17, [x16, #664]
  404618:	add	x16, x16, #0x298
  40461c:	br	x17

0000000000404620 <gmtime_r@plt>:
  404620:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404624:	ldr	x17, [x16, #672]
  404628:	add	x16, x16, #0x2a0
  40462c:	br	x17

0000000000404630 <sleep@plt>:
  404630:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404634:	ldr	x17, [x16, #680]
  404638:	add	x16, x16, #0x2a8
  40463c:	br	x17

0000000000404640 <fchmod@plt>:
  404640:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404644:	ldr	x17, [x16, #688]
  404648:	add	x16, x16, #0x2b0
  40464c:	br	x17

0000000000404650 <__xmknodat@plt>:
  404650:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404654:	ldr	x17, [x16, #696]
  404658:	add	x16, x16, #0x2b8
  40465c:	br	x17

0000000000404660 <strerror_r@plt>:
  404660:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404664:	ldr	x17, [x16, #704]
  404668:	add	x16, x16, #0x2c0
  40466c:	br	x17

0000000000404670 <__vfprintf_chk@plt>:
  404670:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404674:	ldr	x17, [x16, #712]
  404678:	add	x16, x16, #0x2c8
  40467c:	br	x17

0000000000404680 <calloc@plt>:
  404680:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404684:	ldr	x17, [x16, #720]
  404688:	add	x16, x16, #0x2d0
  40468c:	br	x17

0000000000404690 <lsetxattr@plt>:
  404690:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404694:	ldr	x17, [x16, #728]
  404698:	add	x16, x16, #0x2d8
  40469c:	br	x17

00000000004046a0 <listxattr@plt>:
  4046a0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4046a4:	ldr	x17, [x16, #736]
  4046a8:	add	x16, x16, #0x2e0
  4046ac:	br	x17

00000000004046b0 <bcmp@plt>:
  4046b0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4046b4:	ldr	x17, [x16, #744]
  4046b8:	add	x16, x16, #0x2e8
  4046bc:	br	x17

00000000004046c0 <bsearch@plt>:
  4046c0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4046c4:	ldr	x17, [x16, #752]
  4046c8:	add	x16, x16, #0x2f0
  4046cc:	br	x17

00000000004046d0 <execv@plt>:
  4046d0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4046d4:	ldr	x17, [x16, #760]
  4046d8:	add	x16, x16, #0x2f8
  4046dc:	br	x17

00000000004046e0 <strcasecmp@plt>:
  4046e0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4046e4:	ldr	x17, [x16, #768]
  4046e8:	add	x16, x16, #0x300
  4046ec:	br	x17

00000000004046f0 <gmtime@plt>:
  4046f0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4046f4:	ldr	x17, [x16, #776]
  4046f8:	add	x16, x16, #0x308
  4046fc:	br	x17

0000000000404700 <readdir@plt>:
  404700:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404704:	ldr	x17, [x16, #784]
  404708:	add	x16, x16, #0x310
  40470c:	br	x17

0000000000404710 <realloc@plt>:
  404710:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404714:	ldr	x17, [x16, #792]
  404718:	add	x16, x16, #0x318
  40471c:	br	x17

0000000000404720 <__ctype_toupper_loc@plt>:
  404720:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404724:	ldr	x17, [x16, #800]
  404728:	add	x16, x16, #0x320
  40472c:	br	x17

0000000000404730 <acl_set_file@plt>:
  404730:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404734:	ldr	x17, [x16, #808]
  404738:	add	x16, x16, #0x328
  40473c:	br	x17

0000000000404740 <getpagesize@plt>:
  404740:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404744:	ldr	x17, [x16, #816]
  404748:	add	x16, x16, #0x330
  40474c:	br	x17

0000000000404750 <lgetxattr@plt>:
  404750:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404754:	ldr	x17, [x16, #824]
  404758:	add	x16, x16, #0x338
  40475c:	br	x17

0000000000404760 <strdup@plt>:
  404760:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404764:	ldr	x17, [x16, #832]
  404768:	add	x16, x16, #0x340
  40476c:	br	x17

0000000000404770 <closedir@plt>:
  404770:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404774:	ldr	x17, [x16, #840]
  404778:	add	x16, x16, #0x348
  40477c:	br	x17

0000000000404780 <getc_unlocked@plt>:
  404780:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404784:	ldr	x17, [x16, #848]
  404788:	add	x16, x16, #0x350
  40478c:	br	x17

0000000000404790 <strerror@plt>:
  404790:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404794:	ldr	x17, [x16, #856]
  404798:	add	x16, x16, #0x358
  40479c:	br	x17

00000000004047a0 <close@plt>:
  4047a0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4047a4:	ldr	x17, [x16, #864]
  4047a8:	add	x16, x16, #0x360
  4047ac:	br	x17

00000000004047b0 <strrchr@plt>:
  4047b0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4047b4:	ldr	x17, [x16, #872]
  4047b8:	add	x16, x16, #0x368
  4047bc:	br	x17

00000000004047c0 <acl_to_text@plt>:
  4047c0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4047c4:	ldr	x17, [x16, #880]
  4047c8:	add	x16, x16, #0x370
  4047cc:	br	x17

00000000004047d0 <atol@plt>:
  4047d0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4047d4:	ldr	x17, [x16, #888]
  4047d8:	add	x16, x16, #0x378
  4047dc:	br	x17

00000000004047e0 <__gmon_start__@plt>:
  4047e0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4047e4:	ldr	x17, [x16, #896]
  4047e8:	add	x16, x16, #0x380
  4047ec:	br	x17

00000000004047f0 <mktime@plt>:
  4047f0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4047f4:	ldr	x17, [x16, #904]
  4047f8:	add	x16, x16, #0x388
  4047fc:	br	x17

0000000000404800 <fdopendir@plt>:
  404800:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404804:	ldr	x17, [x16, #912]
  404808:	add	x16, x16, #0x390
  40480c:	br	x17

0000000000404810 <write@plt>:
  404810:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404814:	ldr	x17, [x16, #920]
  404818:	add	x16, x16, #0x398
  40481c:	br	x17

0000000000404820 <strtoumax@plt>:
  404820:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404824:	ldr	x17, [x16, #928]
  404828:	add	x16, x16, #0x3a0
  40482c:	br	x17

0000000000404830 <btowc@plt>:
  404830:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404834:	ldr	x17, [x16, #936]
  404838:	add	x16, x16, #0x3a8
  40483c:	br	x17

0000000000404840 <mkdtemp@plt>:
  404840:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404844:	ldr	x17, [x16, #944]
  404848:	add	x16, x16, #0x3b0
  40484c:	br	x17

0000000000404850 <abort@plt>:
  404850:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404854:	ldr	x17, [x16, #952]
  404858:	add	x16, x16, #0x3b8
  40485c:	br	x17

0000000000404860 <setgid@plt>:
  404860:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404864:	ldr	x17, [x16, #960]
  404868:	add	x16, x16, #0x3c0
  40486c:	br	x17

0000000000404870 <mbsinit@plt>:
  404870:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404874:	ldr	x17, [x16, #968]
  404878:	add	x16, x16, #0x3c8
  40487c:	br	x17

0000000000404880 <access@plt>:
  404880:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404884:	ldr	x17, [x16, #976]
  404888:	add	x16, x16, #0x3d0
  40488c:	br	x17

0000000000404890 <gnu_dev_major@plt>:
  404890:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404894:	ldr	x17, [x16, #984]
  404898:	add	x16, x16, #0x3d8
  40489c:	br	x17

00000000004048a0 <fpathconf@plt>:
  4048a0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4048a4:	ldr	x17, [x16, #992]
  4048a8:	add	x16, x16, #0x3e0
  4048ac:	br	x17

00000000004048b0 <getxattr@plt>:
  4048b0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4048b4:	ldr	x17, [x16, #1000]
  4048b8:	add	x16, x16, #0x3e8
  4048bc:	br	x17

00000000004048c0 <memcmp@plt>:
  4048c0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4048c4:	ldr	x17, [x16, #1008]
  4048c8:	add	x16, x16, #0x3f0
  4048cc:	br	x17

00000000004048d0 <textdomain@plt>:
  4048d0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4048d4:	ldr	x17, [x16, #1016]
  4048d8:	add	x16, x16, #0x3f8
  4048dc:	br	x17

00000000004048e0 <execvp@plt>:
  4048e0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4048e4:	ldr	x17, [x16, #1024]
  4048e8:	add	x16, x16, #0x400
  4048ec:	br	x17

00000000004048f0 <__fprintf_chk@plt>:
  4048f0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4048f4:	ldr	x17, [x16, #1032]
  4048f8:	add	x16, x16, #0x408
  4048fc:	br	x17

0000000000404900 <strcmp@plt>:
  404900:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404904:	ldr	x17, [x16, #1040]
  404908:	add	x16, x16, #0x410
  40490c:	br	x17

0000000000404910 <getpwuid@plt>:
  404910:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404914:	ldr	x17, [x16, #1048]
  404918:	add	x16, x16, #0x418
  40491c:	br	x17

0000000000404920 <iconv@plt>:
  404920:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404924:	ldr	x17, [x16, #1056]
  404928:	add	x16, x16, #0x420
  40492c:	br	x17

0000000000404930 <__ctype_b_loc@plt>:
  404930:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404934:	ldr	x17, [x16, #1064]
  404938:	add	x16, x16, #0x428
  40493c:	br	x17

0000000000404940 <rewinddir@plt>:
  404940:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404944:	ldr	x17, [x16, #1072]
  404948:	add	x16, x16, #0x430
  40494c:	br	x17

0000000000404950 <acl_get_file@plt>:
  404950:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404954:	ldr	x17, [x16, #1080]
  404958:	add	x16, x16, #0x438
  40495c:	br	x17

0000000000404960 <strtol@plt>:
  404960:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404964:	ldr	x17, [x16, #1088]
  404968:	add	x16, x16, #0x440
  40496c:	br	x17

0000000000404970 <fseeko@plt>:
  404970:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404974:	ldr	x17, [x16, #1096]
  404978:	add	x16, x16, #0x448
  40497c:	br	x17

0000000000404980 <getline@plt>:
  404980:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404984:	ldr	x17, [x16, #1104]
  404988:	add	x16, x16, #0x450
  40498c:	br	x17

0000000000404990 <sigwait@plt>:
  404990:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404994:	ldr	x17, [x16, #1112]
  404998:	add	x16, x16, #0x458
  40499c:	br	x17

00000000004049a0 <chdir@plt>:
  4049a0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4049a4:	ldr	x17, [x16, #1120]
  4049a8:	add	x16, x16, #0x460
  4049ac:	br	x17

00000000004049b0 <free@plt>:
  4049b0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4049b4:	ldr	x17, [x16, #1128]
  4049b8:	add	x16, x16, #0x468
  4049bc:	br	x17

00000000004049c0 <__strcat_chk@plt>:
  4049c0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4049c4:	ldr	x17, [x16, #1136]
  4049c8:	add	x16, x16, #0x470
  4049cc:	br	x17

00000000004049d0 <renameat2@plt>:
  4049d0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4049d4:	ldr	x17, [x16, #1144]
  4049d8:	add	x16, x16, #0x478
  4049dc:	br	x17

00000000004049e0 <__ctype_get_mb_cur_max@plt>:
  4049e0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4049e4:	ldr	x17, [x16, #1152]
  4049e8:	add	x16, x16, #0x480
  4049ec:	br	x17

00000000004049f0 <getgid@plt>:
  4049f0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  4049f4:	ldr	x17, [x16, #1160]
  4049f8:	add	x16, x16, #0x488
  4049fc:	br	x17

0000000000404a00 <renameat@plt>:
  404a00:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404a04:	ldr	x17, [x16, #1168]
  404a08:	add	x16, x16, #0x490
  404a0c:	br	x17

0000000000404a10 <fgetxattr@plt>:
  404a10:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404a14:	ldr	x17, [x16, #1176]
  404a18:	add	x16, x16, #0x498
  404a1c:	br	x17

0000000000404a20 <fchownat@plt>:
  404a20:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404a24:	ldr	x17, [x16, #1184]
  404a28:	add	x16, x16, #0x4a0
  404a2c:	br	x17

0000000000404a30 <strndup@plt>:
  404a30:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404a34:	ldr	x17, [x16, #1192]
  404a38:	add	x16, x16, #0x4a8
  404a3c:	br	x17

0000000000404a40 <strspn@plt>:
  404a40:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404a44:	ldr	x17, [x16, #1200]
  404a48:	add	x16, x16, #0x4b0
  404a4c:	br	x17

0000000000404a50 <strchr@plt>:
  404a50:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404a54:	ldr	x17, [x16, #1208]
  404a58:	add	x16, x16, #0x4b8
  404a5c:	br	x17

0000000000404a60 <globfree@plt>:
  404a60:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404a64:	ldr	x17, [x16, #1216]
  404a68:	add	x16, x16, #0x4c0
  404a6c:	br	x17

0000000000404a70 <memrchr@plt>:
  404a70:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404a74:	ldr	x17, [x16, #1224]
  404a78:	add	x16, x16, #0x4c8
  404a7c:	br	x17

0000000000404a80 <utimensat@plt>:
  404a80:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404a84:	ldr	x17, [x16, #1232]
  404a88:	add	x16, x16, #0x4d0
  404a8c:	br	x17

0000000000404a90 <fwrite@plt>:
  404a90:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404a94:	ldr	x17, [x16, #1240]
  404a98:	add	x16, x16, #0x4d8
  404a9c:	br	x17

0000000000404aa0 <fnmatch@plt>:
  404aa0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404aa4:	ldr	x17, [x16, #1248]
  404aa8:	add	x16, x16, #0x4e0
  404aac:	br	x17

0000000000404ab0 <fflush_unlocked@plt>:
  404ab0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404ab4:	ldr	x17, [x16, #1256]
  404ab8:	add	x16, x16, #0x4e8
  404abc:	br	x17

0000000000404ac0 <fcntl@plt>:
  404ac0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404ac4:	ldr	x17, [x16, #1264]
  404ac8:	add	x16, x16, #0x4f0
  404acc:	br	x17

0000000000404ad0 <dcngettext@plt>:
  404ad0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404ad4:	ldr	x17, [x16, #1272]
  404ad8:	add	x16, x16, #0x4f8
  404adc:	br	x17

0000000000404ae0 <ftello@plt>:
  404ae0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404ae4:	ldr	x17, [x16, #1280]
  404ae8:	add	x16, x16, #0x500
  404aec:	br	x17

0000000000404af0 <gnu_dev_minor@plt>:
  404af0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404af4:	ldr	x17, [x16, #1288]
  404af8:	add	x16, x16, #0x508
  404afc:	br	x17

0000000000404b00 <strcpy@plt>:
  404b00:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404b04:	ldr	x17, [x16, #1296]
  404b08:	add	x16, x16, #0x510
  404b0c:	br	x17

0000000000404b10 <dirfd@plt>:
  404b10:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404b14:	ldr	x17, [x16, #1304]
  404b18:	add	x16, x16, #0x518
  404b1c:	br	x17

0000000000404b20 <unsetenv@plt>:
  404b20:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404b24:	ldr	x17, [x16, #1312]
  404b28:	add	x16, x16, #0x520
  404b2c:	br	x17

0000000000404b30 <iconv_open@plt>:
  404b30:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404b34:	ldr	x17, [x16, #1320]
  404b38:	add	x16, x16, #0x528
  404b3c:	br	x17

0000000000404b40 <read@plt>:
  404b40:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404b44:	ldr	x17, [x16, #1328]
  404b48:	add	x16, x16, #0x530
  404b4c:	br	x17

0000000000404b50 <memchr@plt>:
  404b50:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404b54:	ldr	x17, [x16, #1336]
  404b58:	add	x16, x16, #0x538
  404b5c:	br	x17

0000000000404b60 <isatty@plt>:
  404b60:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404b64:	ldr	x17, [x16, #1344]
  404b68:	add	x16, x16, #0x540
  404b6c:	br	x17

0000000000404b70 <fputc_unlocked@plt>:
  404b70:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404b74:	ldr	x17, [x16, #1352]
  404b78:	add	x16, x16, #0x548
  404b7c:	br	x17

0000000000404b80 <__mempcpy_chk@plt>:
  404b80:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404b84:	ldr	x17, [x16, #1360]
  404b88:	add	x16, x16, #0x550
  404b8c:	br	x17

0000000000404b90 <flistxattr@plt>:
  404b90:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404b94:	ldr	x17, [x16, #1368]
  404b98:	add	x16, x16, #0x558
  404b9c:	br	x17

0000000000404ba0 <iswalnum@plt>:
  404ba0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404ba4:	ldr	x17, [x16, #1376]
  404ba8:	add	x16, x16, #0x560
  404bac:	br	x17

0000000000404bb0 <__fxstat@plt>:
  404bb0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404bb4:	ldr	x17, [x16, #1384]
  404bb8:	add	x16, x16, #0x568
  404bbc:	br	x17

0000000000404bc0 <strchrnul@plt>:
  404bc0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404bc4:	ldr	x17, [x16, #1392]
  404bc8:	add	x16, x16, #0x570
  404bcc:	br	x17

0000000000404bd0 <dcgettext@plt>:
  404bd0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404bd4:	ldr	x17, [x16, #1400]
  404bd8:	add	x16, x16, #0x578
  404bdc:	br	x17

0000000000404be0 <mkfifoat@plt>:
  404be0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404be4:	ldr	x17, [x16, #1408]
  404be8:	add	x16, x16, #0x580
  404bec:	br	x17

0000000000404bf0 <fputs_unlocked@plt>:
  404bf0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404bf4:	ldr	x17, [x16, #1416]
  404bf8:	add	x16, x16, #0x588
  404bfc:	br	x17

0000000000404c00 <acl_from_text@plt>:
  404c00:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404c04:	ldr	x17, [x16, #1424]
  404c08:	add	x16, x16, #0x590
  404c0c:	br	x17

0000000000404c10 <glob@plt>:
  404c10:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404c14:	ldr	x17, [x16, #1432]
  404c18:	add	x16, x16, #0x598
  404c1c:	br	x17

0000000000404c20 <ftruncate@plt>:
  404c20:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404c24:	ldr	x17, [x16, #1440]
  404c28:	add	x16, x16, #0x5a0
  404c2c:	br	x17

0000000000404c30 <llistxattr@plt>:
  404c30:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404c34:	ldr	x17, [x16, #1448]
  404c38:	add	x16, x16, #0x5a8
  404c3c:	br	x17

0000000000404c40 <dup2@plt>:
  404c40:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404c44:	ldr	x17, [x16, #1456]
  404c48:	add	x16, x16, #0x5b0
  404c4c:	br	x17

0000000000404c50 <symlinkat@plt>:
  404c50:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404c54:	ldr	x17, [x16, #1464]
  404c58:	add	x16, x16, #0x5b8
  404c5c:	br	x17

0000000000404c60 <sigaddset@plt>:
  404c60:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404c64:	ldr	x17, [x16, #1472]
  404c68:	add	x16, x16, #0x5c0
  404c6c:	br	x17

0000000000404c70 <towupper@plt>:
  404c70:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404c74:	ldr	x17, [x16, #1480]
  404c78:	add	x16, x16, #0x5c8
  404c7c:	br	x17

0000000000404c80 <iswprint@plt>:
  404c80:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404c84:	ldr	x17, [x16, #1488]
  404c88:	add	x16, x16, #0x5d0
  404c8c:	br	x17

0000000000404c90 <umask@plt>:
  404c90:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404c94:	ldr	x17, [x16, #1496]
  404c98:	add	x16, x16, #0x5d8
  404c9c:	br	x17

0000000000404ca0 <strcspn@plt>:
  404ca0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404ca4:	ldr	x17, [x16, #1504]
  404ca8:	add	x16, x16, #0x5e0
  404cac:	br	x17

0000000000404cb0 <faccessat@plt>:
  404cb0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404cb4:	ldr	x17, [x16, #1512]
  404cb8:	add	x16, x16, #0x5e8
  404cbc:	br	x17

0000000000404cc0 <openat@plt>:
  404cc0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404cc4:	ldr	x17, [x16, #1520]
  404cc8:	add	x16, x16, #0x5f0
  404ccc:	br	x17

0000000000404cd0 <__assert_fail@plt>:
  404cd0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404cd4:	ldr	x17, [x16, #1528]
  404cd8:	add	x16, x16, #0x5f8
  404cdc:	br	x17

0000000000404ce0 <__errno_location@plt>:
  404ce0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404ce4:	ldr	x17, [x16, #1536]
  404ce8:	add	x16, x16, #0x600
  404cec:	br	x17

0000000000404cf0 <tolower@plt>:
  404cf0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404cf4:	ldr	x17, [x16, #1544]
  404cf8:	add	x16, x16, #0x608
  404cfc:	br	x17

0000000000404d00 <execlp@plt>:
  404d00:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404d04:	ldr	x17, [x16, #1552]
  404d08:	add	x16, x16, #0x610
  404d0c:	br	x17

0000000000404d10 <getenv@plt>:
  404d10:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404d14:	ldr	x17, [x16, #1560]
  404d18:	add	x16, x16, #0x618
  404d1c:	br	x17

0000000000404d20 <__xstat@plt>:
  404d20:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404d24:	ldr	x17, [x16, #1568]
  404d28:	add	x16, x16, #0x620
  404d2c:	br	x17

0000000000404d30 <getgrgid@plt>:
  404d30:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404d34:	ldr	x17, [x16, #1576]
  404d38:	add	x16, x16, #0x628
  404d3c:	br	x17

0000000000404d40 <fchmodat@plt>:
  404d40:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404d44:	ldr	x17, [x16, #1584]
  404d48:	add	x16, x16, #0x630
  404d4c:	br	x17

0000000000404d50 <timegm@plt>:
  404d50:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404d54:	ldr	x17, [x16, #1592]
  404d58:	add	x16, x16, #0x638
  404d5c:	br	x17

0000000000404d60 <waitpid@plt>:
  404d60:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404d64:	ldr	x17, [x16, #1600]
  404d68:	add	x16, x16, #0x640
  404d6c:	br	x17

0000000000404d70 <fchown@plt>:
  404d70:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404d74:	ldr	x17, [x16, #1608]
  404d78:	add	x16, x16, #0x648
  404d7c:	br	x17

0000000000404d80 <towlower@plt>:
  404d80:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404d84:	ldr	x17, [x16, #1616]
  404d88:	add	x16, x16, #0x650
  404d8c:	br	x17

0000000000404d90 <creat@plt>:
  404d90:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404d94:	ldr	x17, [x16, #1624]
  404d98:	add	x16, x16, #0x658
  404d9c:	br	x17

0000000000404da0 <gethostbyname@plt>:
  404da0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404da4:	ldr	x17, [x16, #1632]
  404da8:	add	x16, x16, #0x660
  404dac:	br	x17

0000000000404db0 <ioctl@plt>:
  404db0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404db4:	ldr	x17, [x16, #1640]
  404db8:	add	x16, x16, #0x668
  404dbc:	br	x17

0000000000404dc0 <setlocale@plt>:
  404dc0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404dc4:	ldr	x17, [x16, #1648]
  404dc8:	add	x16, x16, #0x670
  404dcc:	br	x17

0000000000404dd0 <acl_free@plt>:
  404dd0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404dd4:	ldr	x17, [x16, #1656]
  404dd8:	add	x16, x16, #0x678
  404ddc:	br	x17

0000000000404de0 <__fxstatat@plt>:
  404de0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #1664]
  404de8:	add	x16, x16, #0x680
  404dec:	br	x17

0000000000404df0 <readlinkat@plt>:
  404df0:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #1672]
  404df8:	add	x16, x16, #0x688
  404dfc:	br	x17

0000000000404e00 <wcrtomb@plt>:
  404e00:	adrp	x16, 467000 <mbrtowc@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #1680]
  404e08:	add	x16, x16, #0x690
  404e0c:	br	x17

Disassembly of section .text:

0000000000404e10 <argp_help@@Base-0x272c0>:
  404e10:	mov	x29, #0x0                   	// #0
  404e14:	mov	x30, #0x0                   	// #0
  404e18:	mov	x5, x0
  404e1c:	ldr	x1, [sp]
  404e20:	add	x2, sp, #0x8
  404e24:	mov	x6, sp
  404e28:	movz	x0, #0x0, lsl #48
  404e2c:	movk	x0, #0x0, lsl #32
  404e30:	movk	x0, #0x41, lsl #16
  404e34:	movk	x0, #0xfbcc
  404e38:	movz	x3, #0x0, lsl #48
  404e3c:	movk	x3, #0x0, lsl #32
  404e40:	movk	x3, #0x44, lsl #16
  404e44:	movk	x3, #0xb8a0
  404e48:	movz	x4, #0x0, lsl #48
  404e4c:	movk	x4, #0x0, lsl #32
  404e50:	movk	x4, #0x44, lsl #16
  404e54:	movk	x4, #0xb920
  404e58:	bl	4045a0 <__libc_start_main@plt>
  404e5c:	bl	404850 <abort@plt>
  404e60:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x2a808>
  404e64:	ldr	x0, [x0, #4064]
  404e68:	cbz	x0, 404e70 <wcrtomb@plt+0x70>
  404e6c:	b	4047e0 <__gmon_start__@plt>
  404e70:	ret
  404e74:	nop
  404e78:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  404e7c:	add	x0, x0, #0x268
  404e80:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  404e84:	add	x1, x1, #0x268
  404e88:	cmp	x1, x0
  404e8c:	b.eq	404ea4 <wcrtomb@plt+0xa4>  // b.none
  404e90:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  404e94:	ldr	x1, [x1, #2488]
  404e98:	cbz	x1, 404ea4 <wcrtomb@plt+0xa4>
  404e9c:	mov	x16, x1
  404ea0:	br	x16
  404ea4:	ret
  404ea8:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  404eac:	add	x0, x0, #0x268
  404eb0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  404eb4:	add	x1, x1, #0x268
  404eb8:	sub	x1, x1, x0
  404ebc:	lsr	x2, x1, #63
  404ec0:	add	x1, x2, x1, asr #3
  404ec4:	cmp	xzr, x1, asr #1
  404ec8:	asr	x1, x1, #1
  404ecc:	b.eq	404ee4 <wcrtomb@plt+0xe4>  // b.none
  404ed0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0xf808>
  404ed4:	ldr	x2, [x2, #2496]
  404ed8:	cbz	x2, 404ee4 <wcrtomb@plt+0xe4>
  404edc:	mov	x16, x2
  404ee0:	br	x16
  404ee4:	ret
  404ee8:	stp	x29, x30, [sp, #-32]!
  404eec:	mov	x29, sp
  404ef0:	str	x19, [sp, #16]
  404ef4:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  404ef8:	ldrb	w0, [x19, #664]
  404efc:	cbnz	w0, 404f0c <wcrtomb@plt+0x10c>
  404f00:	bl	404e78 <wcrtomb@plt+0x78>
  404f04:	mov	w0, #0x1                   	// #1
  404f08:	strb	w0, [x19, #664]
  404f0c:	ldr	x19, [sp, #16]
  404f10:	ldp	x29, x30, [sp], #32
  404f14:	ret
  404f18:	b	404ea8 <wcrtomb@plt+0xa8>
  404f1c:	stp	x29, x30, [sp, #-48]!
  404f20:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  404f24:	ldrb	w8, [x8, #3660]
  404f28:	stp	x22, x21, [sp, #16]
  404f2c:	stp	x20, x19, [sp, #32]
  404f30:	mov	x29, sp
  404f34:	cbz	w8, 404f9c <wcrtomb@plt+0x19c>
  404f38:	mov	x21, x0
  404f3c:	mov	w0, #0x30                  	// #48
  404f40:	mov	x19, x2
  404f44:	mov	x20, x1
  404f48:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  404f4c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  404f50:	ldr	x9, [x8, #672]
  404f54:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  404f58:	add	x10, x10, #0x2a8
  404f5c:	mov	x22, x0
  404f60:	cmp	x9, #0x0
  404f64:	csel	x9, x10, x9, eq  // eq = none
  404f68:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  404f6c:	str	x0, [x9]
  404f70:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  404f74:	ldr	x10, [x10, #3496]
  404f78:	ldr	x9, [x9, #3472]
  404f7c:	str	x0, [x8, #672]
  404f80:	sub	x8, x10, x9
  404f84:	asr	x8, x8, #9
  404f88:	stp	xzr, x8, [x0]
  404f8c:	mov	x0, x21
  404f90:	bl	43a998 <argp_parse@@Base+0xbcdc>
  404f94:	stp	x0, x20, [x22, #16]
  404f98:	stp	x19, xzr, [x22, #32]
  404f9c:	ldp	x20, x19, [sp, #32]
  404fa0:	ldp	x22, x21, [sp, #16]
  404fa4:	ldp	x29, x30, [sp], #48
  404fa8:	ret
  404fac:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  404fb0:	add	x0, x0, #0x408
  404fb4:	b	410c14 <wcrtomb@plt+0xbe14>
  404fb8:	ldr	x8, [x0]
  404fbc:	ldr	x1, [x0, #136]
  404fc0:	mov	x0, x8
  404fc4:	mov	x2, x1
  404fc8:	b	404f1c <wcrtomb@plt+0x11c>
  404fcc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  404fd0:	ldrb	w8, [x8, #3660]
  404fd4:	cbz	w8, 404fe0 <wcrtomb@plt+0x1e0>
  404fd8:	mov	x0, xzr
  404fdc:	b	404fe4 <wcrtomb@plt+0x1e4>
  404fe0:	ret
  404fe4:	stp	x29, x30, [sp, #-48]!
  404fe8:	stp	x22, x21, [sp, #16]
  404fec:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  404ff0:	ldr	x22, [x21, #680]
  404ff4:	stp	x20, x19, [sp, #32]
  404ff8:	mov	x29, sp
  404ffc:	cmp	x22, #0x0
  405000:	cset	w8, ne  // ne = any
  405004:	cbz	x22, 405038 <wcrtomb@plt+0x238>
  405008:	mov	x19, x0
  40500c:	cmp	x22, x19
  405010:	b.eq	405038 <wcrtomb@plt+0x238>  // b.none
  405014:	mov	x20, x22
  405018:	ldr	x0, [x20, #16]
  40501c:	ldr	x22, [x22]
  405020:	bl	4049b0 <free@plt>
  405024:	mov	x0, x20
  405028:	bl	4049b0 <free@plt>
  40502c:	cmp	x22, #0x0
  405030:	cset	w8, ne  // ne = any
  405034:	cbnz	x22, 40500c <wcrtomb@plt+0x20c>
  405038:	str	x22, [x21, #680]
  40503c:	tbnz	w8, #0, 405048 <wcrtomb@plt+0x248>
  405040:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405044:	str	xzr, [x8, #672]
  405048:	ldp	x20, x19, [sp, #32]
  40504c:	ldp	x22, x21, [sp, #16]
  405050:	ldp	x29, x30, [sp], #48
  405054:	ret
  405058:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40505c:	ldr	x8, [x8, #680]
  405060:	cbz	x8, 405068 <wcrtomb@plt+0x268>
  405064:	str	x0, [x8, #32]
  405068:	ret
  40506c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405070:	str	wzr, [x8, #1112]
  405074:	ret
  405078:	stp	x29, x30, [sp, #-32]!
  40507c:	str	x19, [sp, #16]
  405080:	adrp	x19, 46b000 <argp_program_version_hook@@Base+0x458>
  405084:	add	x19, x19, #0xc8
  405088:	mov	x0, x19
  40508c:	mov	x29, sp
  405090:	bl	4327b8 <argp_parse@@Base+0x3afc>
  405094:	ldr	q0, [x19]
  405098:	ldr	x19, [sp, #16]
  40509c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4050a0:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  4050a4:	add	x8, x8, #0x1a8
  4050a8:	add	x9, x9, #0x160
  4050ac:	str	q0, [x8]
  4050b0:	str	q0, [x9]
  4050b4:	ldp	x29, x30, [sp], #32
  4050b8:	ret
  4050bc:	sub	sp, sp, #0x30
  4050c0:	mov	x0, sp
  4050c4:	stp	x29, x30, [sp, #16]
  4050c8:	str	x19, [sp, #32]
  4050cc:	add	x29, sp, #0x10
  4050d0:	bl	4327b8 <argp_parse@@Base+0x3afc>
  4050d4:	adrp	x0, 46b000 <argp_program_version_hook@@Base+0x458>
  4050d8:	add	x0, x0, #0x160
  4050dc:	ldp	x8, x9, [sp]
  4050e0:	ldp	x10, x11, [x0]
  4050e4:	adrp	x12, 44b000 <_obstack_memory_used@@Base+0xf808>
  4050e8:	ldr	d0, [x12, #2504]
  4050ec:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4050f0:	sub	x9, x9, x11
  4050f4:	ldr	d2, [x19, #1120]
  4050f8:	sub	x8, x8, x10
  4050fc:	scvtf	d1, x9
  405100:	fdiv	d0, d1, d0
  405104:	scvtf	d1, x8
  405108:	fadd	d0, d0, d1
  40510c:	fadd	d0, d2, d0
  405110:	str	d0, [x19, #1120]
  405114:	bl	4327b8 <argp_parse@@Base+0x3afc>
  405118:	ldr	d0, [x19, #1120]
  40511c:	ldr	x19, [sp, #32]
  405120:	ldp	x29, x30, [sp, #16]
  405124:	add	sp, sp, #0x30
  405128:	ret
  40512c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  405130:	ldr	x8, [x8, #392]
  405134:	cbz	x8, 405140 <wcrtomb@plt+0x340>
  405138:	mov	x0, x8
  40513c:	ret
  405140:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405144:	ldr	w8, [x8, #1128]
  405148:	cbz	w8, 405180 <wcrtomb@plt+0x380>
  40514c:	adrp	x10, 44c000 <_obstack_memory_used@@Base+0x10808>
  405150:	mov	x9, xzr
  405154:	add	x10, x10, #0xd8
  405158:	str	wzr, [x0]
  40515c:	cmp	x9, #0xb
  405160:	b.eq	405188 <wcrtomb@plt+0x388>  // b.none
  405164:	ldr	w11, [x10], #24
  405168:	add	x9, x9, #0x1
  40516c:	cmp	w11, w8
  405170:	b.ne	40515c <wcrtomb@plt+0x35c>  // b.any
  405174:	str	w9, [x0]
  405178:	ldur	x8, [x10, #-16]
  40517c:	b	405138 <wcrtomb@plt+0x338>
  405180:	mov	x8, xzr
  405184:	b	405138 <wcrtomb@plt+0x338>
  405188:	mov	x8, xzr
  40518c:	str	w9, [x0]
  405190:	b	405138 <wcrtomb@plt+0x338>
  405194:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  405198:	ldr	x8, [x8, #392]
  40519c:	cbz	x8, 4051a8 <wcrtomb@plt+0x3a8>
  4051a0:	mov	x8, xzr
  4051a4:	b	4051f4 <wcrtomb@plt+0x3f4>
  4051a8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4051ac:	ldrsw	x9, [x0]
  4051b0:	ldr	w10, [x8, #1128]
  4051b4:	adrp	x8, 44c000 <_obstack_memory_used@@Base+0x10808>
  4051b8:	mov	w11, #0x18                  	// #24
  4051bc:	add	x8, x8, #0xd8
  4051c0:	madd	x8, x9, x11, x8
  4051c4:	sub	x11, x9, #0xb
  4051c8:	cbz	x11, 4051ec <wcrtomb@plt+0x3ec>
  4051cc:	ldr	w12, [x8], #24
  4051d0:	add	w9, w9, #0x1
  4051d4:	add	x11, x11, #0x1
  4051d8:	cmp	w12, w10
  4051dc:	b.ne	4051c8 <wcrtomb@plt+0x3c8>  // b.any
  4051e0:	str	w9, [x0]
  4051e4:	ldur	x8, [x8, #-16]
  4051e8:	b	4051f4 <wcrtomb@plt+0x3f4>
  4051ec:	mov	x8, xzr
  4051f0:	str	w9, [x0]
  4051f4:	mov	x0, x8
  4051f8:	ret
  4051fc:	sub	sp, sp, #0x80
  405200:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  405204:	ldr	w8, [x8, #348]
  405208:	stp	x29, x30, [sp, #32]
  40520c:	stp	x28, x27, [sp, #48]
  405210:	stp	x26, x25, [sp, #64]
  405214:	cmp	w8, #0x8
  405218:	stp	x24, x23, [sp, #80]
  40521c:	stp	x22, x21, [sp, #96]
  405220:	stp	x20, x19, [sp, #112]
  405224:	add	x29, sp, #0x20
  405228:	b.hi	4053ec <wcrtomb@plt+0x5ec>  // b.pmore
  40522c:	mov	w9, #0x1                   	// #1
  405230:	lsl	w9, w9, w8
  405234:	mov	w10, #0x10e                 	// #270
  405238:	mov	w19, w3
  40523c:	mov	x21, x1
  405240:	mov	x20, x0
  405244:	tst	w9, w10
  405248:	b.eq	405268 <wcrtomb@plt+0x468>  // b.none
  40524c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405250:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405254:	ldr	d0, [x8, #1136]
  405258:	ldr	d1, [x9, #1144]
  40525c:	ldr	x1, [x21, #8]
  405260:	fadd	d0, d0, d1
  405264:	b	40529c <wcrtomb@plt+0x49c>
  405268:	tst	w9, #0xe0
  40526c:	b.eq	4052e0 <wcrtomb@plt+0x4e0>  // b.none
  405270:	ldr	x1, [x21]
  405274:	mov	w2, #0x5                   	// #5
  405278:	mov	x0, xzr
  40527c:	bl	404bd0 <dcgettext@plt>
  405280:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405284:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  405288:	ldr	x8, [x8, #3424]
  40528c:	ldr	x9, [x9, #408]
  405290:	mov	x1, x0
  405294:	mul	x8, x9, x8
  405298:	ucvtf	d0, x8
  40529c:	mov	x0, x20
  4052a0:	bl	4053f0 <wcrtomb@plt+0x5f0>
  4052a4:	mov	w21, w0
  4052a8:	cbz	w19, 4052bc <wcrtomb@plt+0x4bc>
  4052ac:	mov	w0, w19
  4052b0:	mov	x1, x20
  4052b4:	bl	404b70 <fputc_unlocked@plt>
  4052b8:	add	w21, w21, #0x1
  4052bc:	mov	w0, w21
  4052c0:	ldp	x20, x19, [sp, #112]
  4052c4:	ldp	x22, x21, [sp, #96]
  4052c8:	ldp	x24, x23, [sp, #80]
  4052cc:	ldp	x26, x25, [sp, #64]
  4052d0:	ldp	x28, x27, [sp, #48]
  4052d4:	ldp	x29, x30, [sp, #32]
  4052d8:	add	sp, sp, #0x80
  4052dc:	ret
  4052e0:	cmp	w8, #0x4
  4052e4:	b.ne	4053ec <wcrtomb@plt+0x5ec>  // b.any
  4052e8:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4052ec:	adrp	x25, 46b000 <argp_program_version_hook@@Base+0x458>
  4052f0:	ldr	x8, [x26, #3424]
  4052f4:	ldr	x9, [x25, #408]
  4052f8:	ldr	x1, [x21]
  4052fc:	mov	x0, x20
  405300:	mov	w22, w2
  405304:	mul	x8, x9, x8
  405308:	ucvtf	d0, x8
  40530c:	bl	4053f0 <wcrtomb@plt+0x5f0>
  405310:	mov	w23, w0
  405314:	mov	w0, w22
  405318:	mov	x1, x20
  40531c:	bl	404b70 <fputc_unlocked@plt>
  405320:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405324:	adrp	x28, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405328:	ldr	d0, [x27, #1136]
  40532c:	ldr	d1, [x28, #1144]
  405330:	ldr	x1, [x21, #8]
  405334:	mov	x0, x20
  405338:	fadd	d0, d0, d1
  40533c:	bl	4053f0 <wcrtomb@plt+0x5f0>
  405340:	mov	w24, w0
  405344:	mov	w0, w22
  405348:	mov	x1, x20
  40534c:	bl	404b70 <fputc_unlocked@plt>
  405350:	ldr	x1, [x21, #16]
  405354:	add	w8, w23, w24
  405358:	add	w21, w8, #0x2
  40535c:	cbz	x1, 405390 <wcrtomb@plt+0x590>
  405360:	ldrb	w8, [x1]
  405364:	cbz	w8, 405390 <wcrtomb@plt+0x590>
  405368:	mov	w2, #0x5                   	// #5
  40536c:	mov	x0, xzr
  405370:	bl	404bd0 <dcgettext@plt>
  405374:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  405378:	mov	x3, x0
  40537c:	add	x2, x2, #0xb3d
  405380:	mov	w1, #0x1                   	// #1
  405384:	mov	x0, x20
  405388:	bl	4048f0 <__fprintf_chk@plt>
  40538c:	add	w21, w0, w21
  405390:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405394:	ldr	x8, [x26, #3424]
  405398:	ldr	x9, [x9, #3520]
  40539c:	ldr	x10, [x25, #408]
  4053a0:	ldr	d0, [x27, #1136]
  4053a4:	ldr	d1, [x28, #1144]
  4053a8:	sub	x8, x8, x9
  4053ac:	mul	x8, x8, x10
  4053b0:	ucvtf	d2, x8
  4053b4:	fadd	d0, d0, d1
  4053b8:	fsub	d0, d2, d0
  4053bc:	fcvtzu	x0, d0
  4053c0:	add	x1, sp, #0x8
  4053c4:	bl	43401c <argp_parse@@Base+0x5360>
  4053c8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  4053cc:	mov	x3, x0
  4053d0:	add	x2, x2, #0xb24
  4053d4:	mov	w1, #0x1                   	// #1
  4053d8:	mov	x0, x20
  4053dc:	bl	4048f0 <__fprintf_chk@plt>
  4053e0:	add	w21, w0, w21
  4053e4:	cbnz	w19, 4052ac <wcrtomb@plt+0x4ac>
  4053e8:	b	4052bc <wcrtomb@plt+0x4bc>
  4053ec:	bl	404850 <abort@plt>
  4053f0:	str	d8, [sp, #-64]!
  4053f4:	stp	x29, x30, [sp, #16]
  4053f8:	stp	x28, x21, [sp, #32]
  4053fc:	stp	x20, x19, [sp, #48]
  405400:	mov	x29, sp
  405404:	sub	sp, sp, #0x520
  405408:	mov	v8.16b, v0.16b
  40540c:	mov	x19, x0
  405410:	cbz	x1, 405448 <wcrtomb@plt+0x648>
  405414:	ldrb	w8, [x1]
  405418:	cbz	w8, 405448 <wcrtomb@plt+0x648>
  40541c:	mov	w2, #0x5                   	// #5
  405420:	mov	x0, xzr
  405424:	bl	404bd0 <dcgettext@plt>
  405428:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  40542c:	mov	x3, x0
  405430:	add	x2, x2, #0xb3d
  405434:	mov	w1, #0x1                   	// #1
  405438:	mov	x0, x19
  40543c:	bl	4048f0 <__fprintf_chk@plt>
  405440:	mov	w20, w0
  405444:	b	40544c <wcrtomb@plt+0x64c>
  405448:	mov	w20, wzr
  40544c:	fcvtzu	x0, d8
  405450:	add	x1, sp, #0x294
  405454:	mov	w2, #0x1b0                 	// #432
  405458:	mov	w3, #0x1                   	// #1
  40545c:	mov	w4, #0x1                   	// #1
  405460:	bl	433628 <argp_parse@@Base+0x496c>
  405464:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405468:	ldr	d0, [x8, #1120]
  40546c:	mov	x21, x0
  405470:	fcmp	d0, #0.0
  405474:	b.le	4054ac <wcrtomb@plt+0x6ac>
  405478:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
  40547c:	fdiv	d0, d8, d0
  405480:	fmov	d1, x8
  405484:	fcmp	d0, d1
  405488:	b.pl	4054ac <wcrtomb@plt+0x6ac>  // b.nfrst
  40548c:	fcvtzu	x0, d0
  405490:	add	x1, sp, #0x8
  405494:	mov	w2, #0x1b0                 	// #432
  405498:	mov	w3, #0x1                   	// #1
  40549c:	mov	w4, #0x1                   	// #1
  4054a0:	bl	433628 <argp_parse@@Base+0x496c>
  4054a4:	mov	x4, x0
  4054a8:	b	4054b4 <wcrtomb@plt+0x6b4>
  4054ac:	adrp	x4, 453000 <_obstack_memory_used@@Base+0x17808>
  4054b0:	add	x4, x4, #0x306
  4054b4:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0xf808>
  4054b8:	add	x2, x2, #0xa99
  4054bc:	mov	w1, #0x1                   	// #1
  4054c0:	mov	x0, x19
  4054c4:	mov	v0.16b, v8.16b
  4054c8:	mov	x3, x21
  4054cc:	bl	4048f0 <__fprintf_chk@plt>
  4054d0:	add	w0, w0, w20
  4054d4:	add	sp, sp, #0x520
  4054d8:	ldp	x20, x19, [sp, #48]
  4054dc:	ldp	x28, x21, [sp, #32]
  4054e0:	ldp	x29, x30, [sp, #16]
  4054e4:	ldr	d8, [sp], #64
  4054e8:	ret
  4054ec:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4054f0:	ldr	x0, [x8, #624]
  4054f4:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4054f8:	add	x1, x1, #0xc0
  4054fc:	mov	w2, #0xa                   	// #10
  405500:	mov	w3, #0xa                   	// #10
  405504:	b	4051fc <wcrtomb@plt+0x3fc>
  405508:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40550c:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405510:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405514:	ldr	x9, [x9, #3496]
  405518:	ldr	x10, [x10, #3472]
  40551c:	ldr	x8, [x8, #1152]
  405520:	sub	x9, x9, x10
  405524:	add	x0, x8, x9, asr #9
  405528:	ret
  40552c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405530:	ldrb	w9, [x8, #1160]
  405534:	cmp	w9, #0x1
  405538:	b.ne	405570 <wcrtomb@plt+0x770>  // b.any
  40553c:	strb	wzr, [x8, #1160]
  405540:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405544:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  405548:	ldr	x8, [x8, #3472]
  40554c:	ldrsw	x10, [x10, #236]
  405550:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405554:	adrp	x11, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405558:	adrp	x12, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40555c:	mov	w13, #0x1                   	// #1
  405560:	str	x8, [x9, #3496]
  405564:	add	x8, x8, x10, lsl #9
  405568:	str	x8, [x11, #3432]
  40556c:	str	w13, [x12, #3448]
  405570:	ret
  405574:	stp	x29, x30, [sp, #-48]!
  405578:	stp	x20, x19, [sp, #32]
  40557c:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405580:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405584:	ldr	x0, [x19, #3496]
  405588:	ldr	x8, [x20, #3432]
  40558c:	str	x21, [sp, #16]
  405590:	mov	x29, sp
  405594:	cmp	x0, x8
  405598:	b.ne	4055d0 <wcrtomb@plt+0x7d0>  // b.any
  40559c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4055a0:	ldrb	w8, [x21, #1160]
  4055a4:	tbz	w8, #0, 4055b0 <wcrtomb@plt+0x7b0>
  4055a8:	mov	x0, xzr
  4055ac:	b	4055d0 <wcrtomb@plt+0x7d0>
  4055b0:	bl	4055e0 <wcrtomb@plt+0x7e0>
  4055b4:	ldr	x0, [x19, #3496]
  4055b8:	ldr	x8, [x20, #3432]
  4055bc:	cmp	x0, x8
  4055c0:	b.ne	4055d0 <wcrtomb@plt+0x7d0>  // b.any
  4055c4:	mov	x0, xzr
  4055c8:	mov	w8, #0x1                   	// #1
  4055cc:	strb	w8, [x21, #1160]
  4055d0:	ldp	x20, x19, [sp, #32]
  4055d4:	ldr	x21, [sp, #16]
  4055d8:	ldp	x29, x30, [sp], #48
  4055dc:	ret
  4055e0:	sub	sp, sp, #0x40
  4055e4:	stp	x22, x21, [sp, #32]
  4055e8:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4055ec:	ldr	w9, [x21, #3448]
  4055f0:	stp	x20, x19, [sp, #48]
  4055f4:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4055f8:	stp	x29, x30, [sp, #16]
  4055fc:	add	x29, sp, #0x10
  405600:	cbnz	w9, 405658 <wcrtomb@plt+0x858>
  405604:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  405608:	ldrb	w10, [x8, #480]
  40560c:	cbz	w10, 405658 <wcrtomb@plt+0x858>
  405610:	adrp	x19, 46b000 <argp_program_version_hook@@Base+0x458>
  405614:	ldr	w0, [x19, #464]
  405618:	strb	wzr, [x8, #480]
  40561c:	mov	w8, #0x4                   	// #4
  405620:	strh	w8, [sp, #8]
  405624:	mov	w8, #0x40000000            	// #1073741824
  405628:	mov	w9, #0x1                   	// #1
  40562c:	cmp	w0, w8
  405630:	str	w9, [x21, #3448]
  405634:	str	w9, [sp, #12]
  405638:	b.lt	405678 <wcrtomb@plt+0x878>  // b.tstop
  40563c:	mov	w8, #0xc0000000            	// #-1073741824
  405640:	mov	w1, #0x6d01                	// #27905
  405644:	add	w0, w0, w8
  405648:	add	x2, sp, #0x8
  40564c:	movk	w1, #0x4008, lsl #16
  405650:	bl	427510 <wcrtomb@plt+0x22710>
  405654:	b	405688 <wcrtomb@plt+0x888>
  405658:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40565c:	ldr	x8, [x8, #3472]
  405660:	ldr	x11, [x20, #3432]
  405664:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  405668:	ldrsw	x10, [x10, #236]
  40566c:	sub	x11, x11, x8
  405670:	asr	x11, x11, #9
  405674:	b	4056d8 <wcrtomb@plt+0x8d8>
  405678:	mov	w1, #0x6d01                	// #27905
  40567c:	add	x2, sp, #0x8
  405680:	movk	w1, #0x4008, lsl #16
  405684:	bl	404db0 <ioctl@plt>
  405688:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40568c:	tbnz	w0, #31, 405748 <wcrtomb@plt+0x948>
  405690:	ldr	x0, [x20, #3432]
  405694:	ldr	x8, [x22, #3472]
  405698:	adrp	x19, 46b000 <argp_program_version_hook@@Base+0x458>
  40569c:	ldrsw	x10, [x19, #236]
  4056a0:	sub	x9, x0, x8
  4056a4:	asr	x11, x9, #9
  4056a8:	cmp	x11, x10
  4056ac:	b.ge	4056d4 <wcrtomb@plt+0x8d4>  // b.tcont
  4056b0:	sub	x8, x10, x11
  4056b4:	lsl	x2, x8, #9
  4056b8:	mov	w1, wzr
  4056bc:	bl	4045e0 <memset@plt>
  4056c0:	ldr	x8, [x22, #3472]
  4056c4:	ldrsw	x9, [x19, #236]
  4056c8:	add	x8, x8, x9, lsl #9
  4056cc:	str	x8, [x20, #3432]
  4056d0:	b	405734 <wcrtomb@plt+0x934>
  4056d4:	ldr	w9, [x21, #3448]
  4056d8:	adrp	x13, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4056dc:	adrp	x12, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4056e0:	ldr	x14, [x13, #1152]
  4056e4:	add	x15, x8, x10, lsl #9
  4056e8:	ldr	x10, [x12, #3496]
  4056ec:	str	x8, [x12, #3496]
  4056f0:	add	x11, x11, x14
  4056f4:	str	x11, [x13, #1152]
  4056f8:	str	x15, [x20, #3432]
  4056fc:	cbz	w9, 405728 <wcrtomb@plt+0x928>
  405700:	cmp	w9, #0x1
  405704:	b.eq	405714 <wcrtomb@plt+0x914>  // b.none
  405708:	cmp	w9, #0x2
  40570c:	b.ne	405734 <wcrtomb@plt+0x934>  // b.any
  405710:	bl	404850 <abort@plt>
  405714:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405718:	ldr	x9, [x9, #1168]
  40571c:	sub	x0, x10, x8
  405720:	blr	x9
  405724:	b	405734 <wcrtomb@plt+0x934>
  405728:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40572c:	ldr	x8, [x8, #1200]
  405730:	blr	x8
  405734:	ldp	x20, x19, [sp, #48]
  405738:	ldp	x22, x21, [sp, #32]
  40573c:	ldp	x29, x30, [sp, #16]
  405740:	add	sp, sp, #0x40
  405744:	ret
  405748:	bl	404ce0 <__errno_location@plt>
  40574c:	ldr	w8, [x0]
  405750:	cmp	w8, #0x5
  405754:	b.ne	40579c <wcrtomb@plt+0x99c>  // b.any
  405758:	ldr	w0, [x19, #464]
  40575c:	mov	w8, #0x40000000            	// #1073741824
  405760:	cmp	w0, w8
  405764:	b.lt	405788 <wcrtomb@plt+0x988>  // b.tstop
  405768:	mov	w8, #0xc0000000            	// #-1073741824
  40576c:	mov	w1, #0x6d01                	// #27905
  405770:	add	w0, w0, w8
  405774:	add	x2, sp, #0x8
  405778:	movk	w1, #0x4008, lsl #16
  40577c:	bl	427510 <wcrtomb@plt+0x22710>
  405780:	tbz	w0, #31, 405690 <wcrtomb@plt+0x890>
  405784:	b	40579c <wcrtomb@plt+0x99c>
  405788:	mov	w1, #0x6d01                	// #27905
  40578c:	add	x2, sp, #0x8
  405790:	movk	w1, #0x4008, lsl #16
  405794:	bl	404db0 <ioctl@plt>
  405798:	tbz	w0, #31, 405690 <wcrtomb@plt+0x890>
  40579c:	ldr	w0, [x19, #464]
  4057a0:	mov	w8, #0x40000000            	// #1073741824
  4057a4:	cmp	w0, w8
  4057a8:	b.lt	4057c4 <wcrtomb@plt+0x9c4>  // b.tstop
  4057ac:	mov	w8, #0xc0000000            	// #-1073741824
  4057b0:	add	w0, w0, w8
  4057b4:	mov	w2, #0x1                   	// #1
  4057b8:	mov	x1, xzr
  4057bc:	bl	4273ac <wcrtomb@plt+0x225ac>
  4057c0:	b	4057d0 <wcrtomb@plt+0x9d0>
  4057c4:	mov	w2, #0x1                   	// #1
  4057c8:	mov	x1, xzr
  4057cc:	bl	404370 <lseek@plt>
  4057d0:	ldr	x9, [x20, #3432]
  4057d4:	ldr	x10, [x22, #3472]
  4057d8:	ldr	w8, [x19, #464]
  4057dc:	mov	w11, #0x40000000            	// #1073741824
  4057e0:	sub	x9, x10, x9
  4057e4:	add	x9, x9, x0
  4057e8:	cmp	w8, w11
  4057ec:	bic	x19, x9, x9, asr #63
  4057f0:	b.lt	40580c <wcrtomb@plt+0xa0c>  // b.tstop
  4057f4:	mov	w9, #0xc0000000            	// #-1073741824
  4057f8:	add	w0, w8, w9
  4057fc:	mov	x1, x19
  405800:	mov	w2, wzr
  405804:	bl	4273ac <wcrtomb@plt+0x225ac>
  405808:	b	40581c <wcrtomb@plt+0xa1c>
  40580c:	mov	w0, w8
  405810:	mov	x1, x19
  405814:	mov	w2, wzr
  405818:	bl	404370 <lseek@plt>
  40581c:	cmp	x0, x19
  405820:	b.eq	405690 <wcrtomb@plt+0x890>  // b.none
  405824:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  405828:	ldr	x8, [x8, #496]
  40582c:	cbz	x8, 405834 <wcrtomb@plt+0xa34>
  405830:	blr	x8
  405834:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  405838:	add	x1, x1, #0xae2
  40583c:	mov	w2, #0x5                   	// #5
  405840:	mov	x0, xzr
  405844:	bl	404bd0 <dcgettext@plt>
  405848:	mov	x2, x0
  40584c:	mov	w0, wzr
  405850:	mov	w1, wzr
  405854:	bl	4041d0 <error@plt>
  405858:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40585c:	ldr	x0, [x22, #3472]
  405860:	ldr	x8, [x8, #488]
  405864:	cmp	x0, x8
  405868:	b.eq	405690 <wcrtomb@plt+0x890>  // b.none
  40586c:	sub	x2, x8, x0
  405870:	mov	w1, wzr
  405874:	bl	4045e0 <memset@plt>
  405878:	b	405690 <wcrtomb@plt+0x890>
  40587c:	stp	x29, x30, [sp, #-16]!
  405880:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405884:	ldr	x8, [x9, #3496]
  405888:	mov	x29, sp
  40588c:	cmp	x8, x0
  405890:	b.hi	4058a4 <wcrtomb@plt+0xaa4>  // b.pmore
  405894:	add	x8, x8, #0x200
  405898:	cmp	x8, x0
  40589c:	b.ls	405894 <wcrtomb@plt+0xa94>  // b.plast
  4058a0:	str	x8, [x9, #3496]
  4058a4:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4058a8:	ldr	x9, [x9, #3432]
  4058ac:	cmp	x8, x9
  4058b0:	b.hi	4058bc <wcrtomb@plt+0xabc>  // b.pmore
  4058b4:	ldp	x29, x30, [sp], #16
  4058b8:	ret
  4058bc:	bl	404850 <abort@plt>
  4058c0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4058c4:	ldr	x8, [x8, #3432]
  4058c8:	sub	x0, x8, x0
  4058cc:	ret
  4058d0:	stp	x29, x30, [sp, #-16]!
  4058d4:	mov	x29, sp
  4058d8:	bl	4047a0 <close@plt>
  4058dc:	cbz	w0, 4058fc <wcrtomb@plt+0xafc>
  4058e0:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  4058e4:	add	x1, x1, #0x9d0
  4058e8:	mov	w2, #0x5                   	// #5
  4058ec:	mov	x0, xzr
  4058f0:	bl	404bd0 <dcgettext@plt>
  4058f4:	ldp	x29, x30, [sp], #16
  4058f8:	b	426108 <wcrtomb@plt+0x21308>
  4058fc:	ldp	x29, x30, [sp], #16
  405900:	ret
  405904:	stp	x29, x30, [sp, #-48]!
  405908:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40590c:	ldrb	w8, [x8, #185]
  405910:	stp	x20, x19, [sp, #32]
  405914:	mov	x19, x0
  405918:	str	x21, [sp, #16]
  40591c:	mov	x29, sp
  405920:	cbz	w8, 405950 <wcrtomb@plt+0xb50>
  405924:	bl	404ce0 <__errno_location@plt>
  405928:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40592c:	mov	x20, x0
  405930:	ldr	w21, [x0]
  405934:	ldr	x0, [x8, #624]
  405938:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40593c:	add	x1, x1, #0xc0
  405940:	mov	w2, #0xa                   	// #10
  405944:	mov	w3, #0xa                   	// #10
  405948:	bl	4051fc <wcrtomb@plt+0x3fc>
  40594c:	str	w21, [x20]
  405950:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  405954:	ldr	x8, [x8, #224]
  405958:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40595c:	ldr	x2, [x9, #408]
  405960:	mov	x1, x19
  405964:	ldr	x0, [x8]
  405968:	bl	40596c <wcrtomb@plt+0xb6c>
  40596c:	stp	x29, x30, [sp, #-16]!
  405970:	mov	x29, sp
  405974:	bl	426784 <wcrtomb@plt+0x21984>
  405978:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40597c:	ldr	w0, [x8, #464]
  405980:	mov	w8, #0x40000000            	// #1073741824
  405984:	cmp	w0, w8
  405988:	b.lt	4059a0 <wcrtomb@plt+0xba0>  // b.tstop
  40598c:	mov	w8, #0xc0000000            	// #-1073741824
  405990:	add	w0, w0, w8
  405994:	bl	427184 <wcrtomb@plt+0x22384>
  405998:	cbnz	w0, 4059a8 <wcrtomb@plt+0xba8>
  40599c:	b	4059b8 <wcrtomb@plt+0xbb8>
  4059a0:	bl	4047a0 <close@plt>
  4059a4:	cbz	w0, 4059b8 <wcrtomb@plt+0xbb8>
  4059a8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4059ac:	ldr	x8, [x8, #224]
  4059b0:	ldr	x0, [x8]
  4059b4:	bl	426108 <wcrtomb@plt+0x21308>
  4059b8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4059bc:	ldr	w0, [x8, #1176]
  4059c0:	mov	w1, wzr
  4059c4:	bl	41e348 <wcrtomb@plt+0x19548>
  4059c8:	bl	40d698 <wcrtomb@plt+0x8898>
  4059cc:	stp	x29, x30, [sp, #-16]!
  4059d0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4059d4:	ldr	x8, [x8, #224]
  4059d8:	mov	x29, sp
  4059dc:	ldr	x0, [x8]
  4059e0:	bl	426258 <wcrtomb@plt+0x21458>
  4059e4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4059e8:	ldr	x8, [x8, #1152]
  4059ec:	cbz	x8, 405a10 <wcrtomb@plt+0xc10>
  4059f0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4059f4:	ldr	w9, [x8, #1112]
  4059f8:	add	w10, w9, #0x1
  4059fc:	cmp	w9, #0xb
  405a00:	str	w10, [x8, #1112]
  405a04:	b.ge	405a2c <wcrtomb@plt+0xc2c>  // b.tcont
  405a08:	ldp	x29, x30, [sp], #16
  405a0c:	ret
  405a10:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  405a14:	ldr	x8, [x8, #496]
  405a18:	cbz	x8, 405a20 <wcrtomb@plt+0xc20>
  405a1c:	blr	x8
  405a20:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  405a24:	add	x1, x1, #0x9d7
  405a28:	b	405a44 <wcrtomb@plt+0xc44>
  405a2c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  405a30:	ldr	x8, [x8, #496]
  405a34:	cbz	x8, 405a3c <wcrtomb@plt+0xc3c>
  405a38:	blr	x8
  405a3c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  405a40:	add	x1, x1, #0x9fa
  405a44:	mov	w2, #0x5                   	// #5
  405a48:	mov	x0, xzr
  405a4c:	bl	404bd0 <dcgettext@plt>
  405a50:	mov	x2, x0
  405a54:	mov	w0, wzr
  405a58:	mov	w1, wzr
  405a5c:	bl	4041d0 <error@plt>
  405a60:	bl	40d698 <wcrtomb@plt+0x8898>
  405a64:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405a68:	ldr	x0, [x8, #1200]
  405a6c:	br	x0
  405a70:	stp	x29, x30, [sp, #-64]!
  405a74:	stp	x20, x19, [sp, #48]
  405a78:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405a7c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405a80:	ldr	x9, [x19, #3496]
  405a84:	ldr	x8, [x8, #3472]
  405a88:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  405a8c:	ldrsw	x10, [x20, #236]
  405a90:	stp	x22, x21, [sp, #32]
  405a94:	sub	x22, x9, x8
  405a98:	stp	x24, x23, [sp, #16]
  405a9c:	sub	x8, x10, x22, asr #9
  405aa0:	lsl	x9, x8, #9
  405aa4:	cmp	x9, x0
  405aa8:	mov	x29, sp
  405aac:	b.ge	405ac4 <wcrtomb@plt+0xcc4>  // b.tcont
  405ab0:	adrp	x24, 46b000 <argp_program_version_hook@@Base+0x458>
  405ab4:	ldr	x8, [x24, #408]
  405ab8:	sub	x9, x0, x9
  405abc:	cmp	x8, x9
  405ac0:	b.ls	405adc <wcrtomb@plt+0xcdc>  // b.plast
  405ac4:	mov	x0, xzr
  405ac8:	ldp	x20, x19, [sp, #48]
  405acc:	ldp	x22, x21, [sp, #32]
  405ad0:	ldp	x24, x23, [sp, #16]
  405ad4:	ldp	x29, x30, [sp], #64
  405ad8:	ret
  405adc:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  405ae0:	ldr	w0, [x10, #464]
  405ae4:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405ae8:	ldr	x23, [x21, #1152]
  405aec:	mov	w10, #0x40000000            	// #1073741824
  405af0:	cmp	w0, w10
  405af4:	udiv	x9, x9, x8
  405af8:	b.lt	405b18 <wcrtomb@plt+0xd18>  // b.tstop
  405afc:	mov	w10, #0xc0000000            	// #-1073741824
  405b00:	add	w0, w0, w10
  405b04:	mul	x1, x9, x8
  405b08:	mov	w2, #0x1                   	// #1
  405b0c:	bl	4273ac <wcrtomb@plt+0x225ac>
  405b10:	tbz	x0, #63, 405b28 <wcrtomb@plt+0xd28>
  405b14:	b	405ac8 <wcrtomb@plt+0xcc8>
  405b18:	mul	x1, x9, x8
  405b1c:	mov	w2, #0x1                   	// #1
  405b20:	bl	404370 <lseek@plt>
  405b24:	tbnz	x0, #63, 405ac8 <wcrtomb@plt+0xcc8>
  405b28:	ldr	x8, [x24, #408]
  405b2c:	udiv	x9, x0, x8
  405b30:	msub	x8, x9, x8, x0
  405b34:	cbnz	x8, 405b78 <wcrtomb@plt+0xd78>
  405b38:	ldrsw	x10, [x20, #236]
  405b3c:	adrp	x11, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405b40:	asr	x8, x22, #9
  405b44:	adrp	x12, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405b48:	ldr	x13, [x11, #3424]
  405b4c:	lsr	x9, x0, #9
  405b50:	add	x8, x8, x23
  405b54:	ldr	x12, [x12, #3432]
  405b58:	sub	x0, x9, x8
  405b5c:	sdiv	x8, x0, x10
  405b60:	sub	x9, x9, x10
  405b64:	add	x8, x13, x8
  405b68:	str	x9, [x21, #1152]
  405b6c:	str	x8, [x11, #3424]
  405b70:	str	x12, [x19, #3496]
  405b74:	b	405ac8 <wcrtomb@plt+0xcc8>
  405b78:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  405b7c:	ldr	x8, [x8, #496]
  405b80:	cbz	x8, 405b88 <wcrtomb@plt+0xd88>
  405b84:	blr	x8
  405b88:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  405b8c:	add	x1, x1, #0xa14
  405b90:	mov	w2, #0x5                   	// #5
  405b94:	mov	x0, xzr
  405b98:	bl	404bd0 <dcgettext@plt>
  405b9c:	mov	x2, x0
  405ba0:	mov	w0, wzr
  405ba4:	mov	w1, wzr
  405ba8:	bl	4041d0 <error@plt>
  405bac:	bl	40d698 <wcrtomb@plt+0x8898>
  405bb0:	stp	x29, x30, [sp, #-32]!
  405bb4:	stp	x20, x19, [sp, #16]
  405bb8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  405bbc:	ldrb	w8, [x8, #480]
  405bc0:	mov	x29, sp
  405bc4:	cbnz	w8, 405bd8 <wcrtomb@plt+0xdd8>
  405bc8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405bcc:	ldr	w8, [x8, #3448]
  405bd0:	cmp	w8, #0x1
  405bd4:	b.ne	405bf4 <wcrtomb@plt+0xdf4>  // b.any
  405bd8:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405bdc:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405be0:	bl	4055e0 <wcrtomb@plt+0x7e0>
  405be4:	ldr	x8, [x19, #3496]
  405be8:	ldr	x9, [x20, #3472]
  405bec:	cmp	x8, x9
  405bf0:	b.hi	405be0 <wcrtomb@plt+0xde0>  // b.pmore
  405bf4:	bl	4050bc <wcrtomb@plt+0x2bc>
  405bf8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  405bfc:	ldrb	w8, [x8, #330]
  405c00:	cbz	w8, 405c08 <wcrtomb@plt+0xe08>
  405c04:	bl	409950 <wcrtomb@plt+0x4b50>
  405c08:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  405c0c:	ldr	w0, [x8, #464]
  405c10:	mov	w8, #0x40000000            	// #1073741824
  405c14:	cmp	w0, w8
  405c18:	b.lt	405c30 <wcrtomb@plt+0xe30>  // b.tstop
  405c1c:	mov	w8, #0xc0000000            	// #-1073741824
  405c20:	add	w0, w0, w8
  405c24:	bl	427184 <wcrtomb@plt+0x22384>
  405c28:	cbnz	w0, 405c38 <wcrtomb@plt+0xe38>
  405c2c:	b	405c48 <wcrtomb@plt+0xe48>
  405c30:	bl	4047a0 <close@plt>
  405c34:	cbz	w0, 405c48 <wcrtomb@plt+0xe48>
  405c38:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  405c3c:	ldr	x8, [x8, #224]
  405c40:	ldr	x0, [x8]
  405c44:	bl	426108 <wcrtomb@plt+0x21308>
  405c48:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405c4c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405c50:	ldr	w0, [x8, #1176]
  405c54:	ldrb	w1, [x9, #1160]
  405c58:	bl	41e348 <wcrtomb@plt+0x19548>
  405c5c:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405c60:	add	x0, x0, #0xe60
  405c64:	bl	420d00 <wcrtomb@plt+0x1bf00>
  405c68:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405c6c:	add	x19, x19, #0x4a0
  405c70:	ldr	x0, [x19]
  405c74:	bl	4049b0 <free@plt>
  405c78:	ldr	x0, [x19, #8]
  405c7c:	bl	4049b0 <free@plt>
  405c80:	ldp	x20, x19, [sp, #16]
  405c84:	mov	x0, xzr
  405c88:	ldp	x29, x30, [sp], #32
  405c8c:	b	404fe4 <wcrtomb@plt+0x1e4>
  405c90:	stp	x29, x30, [sp, #-48]!
  405c94:	str	x21, [sp, #16]
  405c98:	stp	x20, x19, [sp, #32]
  405c9c:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  405ca0:	ldr	x0, [x21, #152]
  405ca4:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  405ca8:	add	x1, x1, #0x84b
  405cac:	mov	x29, sp
  405cb0:	bl	4044a0 <fopen@plt>
  405cb4:	cbz	x0, 405d18 <wcrtomb@plt+0xf18>
  405cb8:	adrp	x20, 467000 <_obstack_memory_used@@Base+0x2b808>
  405cbc:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  405cc0:	add	x20, x20, #0x6a8
  405cc4:	add	x1, x1, #0xf15
  405cc8:	mov	x2, x20
  405ccc:	mov	x19, x0
  405cd0:	bl	404550 <__isoc99_fscanf@plt>
  405cd4:	cmp	w0, #0x1
  405cd8:	b.ne	405d4c <wcrtomb@plt+0xf4c>  // b.any
  405cdc:	ldr	w8, [x20]
  405ce0:	tbnz	w8, #31, 405d4c <wcrtomb@plt+0xf4c>
  405ce4:	mov	x0, x19
  405ce8:	bl	4042b0 <ferror_unlocked@plt>
  405cec:	cbz	w0, 405cf8 <wcrtomb@plt+0xef8>
  405cf0:	ldr	x0, [x21, #152]
  405cf4:	bl	426258 <wcrtomb@plt+0x21458>
  405cf8:	mov	x0, x19
  405cfc:	bl	404450 <fclose@plt>
  405d00:	cbz	w0, 405d28 <wcrtomb@plt+0xf28>
  405d04:	ldr	x0, [x21, #152]
  405d08:	ldp	x20, x19, [sp, #32]
  405d0c:	ldr	x21, [sp, #16]
  405d10:	ldp	x29, x30, [sp], #48
  405d14:	b	426108 <wcrtomb@plt+0x21308>
  405d18:	bl	404ce0 <__errno_location@plt>
  405d1c:	ldr	w8, [x0]
  405d20:	cmp	w8, #0x2
  405d24:	b.ne	405d38 <wcrtomb@plt+0xf38>  // b.any
  405d28:	ldp	x20, x19, [sp, #32]
  405d2c:	ldr	x21, [sp, #16]
  405d30:	ldp	x29, x30, [sp], #48
  405d34:	ret
  405d38:	ldr	x0, [x21, #152]
  405d3c:	ldp	x20, x19, [sp, #32]
  405d40:	ldr	x21, [sp, #16]
  405d44:	ldp	x29, x30, [sp], #48
  405d48:	b	426218 <wcrtomb@plt+0x21418>
  405d4c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  405d50:	ldr	x8, [x8, #496]
  405d54:	cbz	x8, 405d5c <wcrtomb@plt+0xf5c>
  405d58:	blr	x8
  405d5c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  405d60:	add	x1, x1, #0xa3e
  405d64:	mov	w2, #0x5                   	// #5
  405d68:	mov	x0, xzr
  405d6c:	bl	404bd0 <dcgettext@plt>
  405d70:	ldr	x8, [x21, #152]
  405d74:	mov	x19, x0
  405d78:	mov	x0, x8
  405d7c:	bl	4398cc <argp_parse@@Base+0xac10>
  405d80:	mov	x3, x0
  405d84:	mov	w0, wzr
  405d88:	mov	w1, wzr
  405d8c:	mov	x2, x19
  405d90:	bl	4041d0 <error@plt>
  405d94:	bl	40d698 <wcrtomb@plt+0x8898>
  405d98:	stp	x29, x30, [sp, #-32]!
  405d9c:	stp	x20, x19, [sp, #16]
  405da0:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  405da4:	ldr	x0, [x20, #152]
  405da8:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  405dac:	add	x1, x1, #0x838
  405db0:	mov	x29, sp
  405db4:	bl	4044a0 <fopen@plt>
  405db8:	cbz	x0, 405e08 <wcrtomb@plt+0x1008>
  405dbc:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  405dc0:	ldr	w3, [x8, #1704]
  405dc4:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  405dc8:	add	x2, x2, #0x88b
  405dcc:	mov	w1, #0x1                   	// #1
  405dd0:	mov	x19, x0
  405dd4:	bl	4048f0 <__fprintf_chk@plt>
  405dd8:	mov	x0, x19
  405ddc:	bl	4042b0 <ferror_unlocked@plt>
  405de0:	cbz	w0, 405dec <wcrtomb@plt+0xfec>
  405de4:	ldr	x0, [x20, #152]
  405de8:	bl	426770 <wcrtomb@plt+0x21970>
  405dec:	mov	x0, x19
  405df0:	bl	404450 <fclose@plt>
  405df4:	cbz	w0, 405e18 <wcrtomb@plt+0x1018>
  405df8:	ldr	x0, [x20, #152]
  405dfc:	ldp	x20, x19, [sp, #16]
  405e00:	ldp	x29, x30, [sp], #32
  405e04:	b	426108 <wcrtomb@plt+0x21308>
  405e08:	ldr	x0, [x20, #152]
  405e0c:	ldp	x20, x19, [sp, #16]
  405e10:	ldp	x29, x30, [sp], #32
  405e14:	b	426218 <wcrtomb@plt+0x21418>
  405e18:	ldp	x20, x19, [sp, #16]
  405e1c:	ldp	x29, x30, [sp], #32
  405e20:	ret
  405e24:	stp	x29, x30, [sp, #-48]!
  405e28:	str	x21, [sp, #16]
  405e2c:	stp	x20, x19, [sp, #32]
  405e30:	mov	x29, sp
  405e34:	mov	x19, x0
  405e38:	bl	404170 <strlen@plt>
  405e3c:	cbz	x0, 405e8c <wcrtomb@plt+0x108c>
  405e40:	add	x8, x0, x19
  405e44:	sub	x21, x8, #0x1
  405e48:	cmp	x21, x19
  405e4c:	b.ls	405e8c <wcrtomb@plt+0x108c>  // b.plast
  405e50:	bl	404930 <__ctype_b_loc@plt>
  405e54:	ldr	x8, [x0]
  405e58:	ldrb	w9, [x21], #-1
  405e5c:	ldrh	w8, [x8, x9, lsl #1]
  405e60:	tbnz	w8, #11, 405e48 <wcrtomb@plt+0x1048>
  405e64:	sub	x8, x21, #0x6
  405e68:	subs	x20, x8, x19
  405e6c:	b.ls	405e8c <wcrtomb@plt+0x108c>  // b.plast
  405e70:	ldur	x8, [x21, #-6]
  405e74:	mov	x9, #0x5620                	// #22048
  405e78:	movk	x9, #0x6c6f, lsl #16
  405e7c:	movk	x9, #0x6d75, lsl #32
  405e80:	movk	x9, #0x2065, lsl #48
  405e84:	cmp	x8, x9
  405e88:	b.eq	405ea4 <wcrtomb@plt+0x10a4>  // b.none
  405e8c:	mov	x21, xzr
  405e90:	mov	x0, x21
  405e94:	ldp	x20, x19, [sp, #32]
  405e98:	ldr	x21, [sp, #16]
  405e9c:	ldp	x29, x30, [sp], #48
  405ea0:	ret
  405ea4:	add	x0, x20, #0x1
  405ea8:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  405eac:	mov	x1, x19
  405eb0:	mov	x2, x20
  405eb4:	mov	x21, x0
  405eb8:	bl	4040f0 <memcpy@plt>
  405ebc:	strb	wzr, [x21, x20]
  405ec0:	b	405e90 <wcrtomb@plt+0x1090>
  405ec4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405ec8:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  405ecc:	ldr	x1, [x8, #1168]
  405ed0:	ldr	x0, [x9, #408]
  405ed4:	br	x1
  405ed8:	stp	x29, x30, [sp, #-80]!
  405edc:	stp	x28, x25, [sp, #16]
  405ee0:	stp	x24, x23, [sp, #32]
  405ee4:	stp	x22, x21, [sp, #48]
  405ee8:	stp	x20, x19, [sp, #64]
  405eec:	mov	x29, sp
  405ef0:	sub	sp, sp, #0x1b0
  405ef4:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  405ef8:	adrp	x9, 406000 <wcrtomb@plt+0x1200>
  405efc:	ldr	x10, [x10, #408]
  405f00:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405f04:	add	x9, x9, #0x80c
  405f08:	str	x9, [x8, #1200]
  405f0c:	adrp	x9, 406000 <wcrtomb@plt+0x1200>
  405f10:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405f14:	add	x9, x9, #0xec4
  405f18:	str	x9, [x8, #1168]
  405f1c:	cbz	x10, 406674 <wcrtomb@plt+0x1874>
  405f20:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  405f24:	ldr	x8, [x8, #336]
  405f28:	cbz	x8, 406690 <wcrtomb@plt+0x1890>
  405f2c:	mov	w19, w0
  405f30:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405f34:	add	x0, x0, #0xe60
  405f38:	bl	420d00 <wcrtomb@plt+0x1bf00>
  405f3c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405f40:	str	wzr, [x8, #1232]
  405f44:	bl	4080ec <wcrtomb@plt+0x32ec>
  405f48:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  405f4c:	ldr	x8, [x21, #176]
  405f50:	cmp	w19, #0x2
  405f54:	csel	w20, wzr, w19, eq  // eq = none
  405f58:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405f5c:	str	w20, [x9, #3448]
  405f60:	ldr	x0, [x8]
  405f64:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  405f68:	add	x1, x1, #0x25d
  405f6c:	bl	404900 <strcmp@plt>
  405f70:	cbnz	w0, 405f84 <wcrtomb@plt+0x1184>
  405f74:	cmp	w20, #0x0
  405f78:	cset	w0, ne  // ne = any
  405f7c:	bl	404b60 <isatty@plt>
  405f80:	cbnz	w0, 40670c <wcrtomb@plt+0x190c>
  405f84:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  405f88:	adrp	x24, 46b000 <argp_program_version_hook@@Base+0x458>
  405f8c:	ldrb	w8, [x8, #329]
  405f90:	ldr	x9, [x24, #392]
  405f94:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405f98:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  405f9c:	strb	w8, [x22, #1208]
  405fa0:	str	xzr, [x23, #3424]
  405fa4:	cbz	x9, 405fc0 <wcrtomb@plt+0x11c0>
  405fa8:	cbz	w19, 4060b0 <wcrtomb@plt+0x12b0>
  405fac:	cmp	w19, #0x1
  405fb0:	b.eq	40607c <wcrtomb@plt+0x127c>  // b.none
  405fb4:	cmp	w19, #0x2
  405fb8:	b.ne	406344 <wcrtomb@plt+0x1544>  // b.any
  405fbc:	bl	404850 <abort@plt>
  405fc0:	ldr	x25, [x21, #176]
  405fc4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  405fc8:	add	x1, x1, #0x25d
  405fcc:	ldr	x20, [x25]
  405fd0:	mov	x0, x20
  405fd4:	bl	404900 <strcmp@plt>
  405fd8:	cbz	w0, 4060d8 <wcrtomb@plt+0x12d8>
  405fdc:	cmp	w19, #0x2
  405fe0:	b.eq	406188 <wcrtomb@plt+0x1388>  // b.none
  405fe4:	cmp	w19, #0x1
  405fe8:	b.eq	406164 <wcrtomb@plt+0x1364>  // b.none
  405fec:	cbnz	w19, 406344 <wcrtomb@plt+0x1544>
  405ff0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  405ff4:	ldrb	w8, [x8, #504]
  405ff8:	cbnz	w8, 40602c <wcrtomb@plt+0x122c>
  405ffc:	mov	w1, #0x3a                  	// #58
  406000:	mov	x0, x20
  406004:	bl	404a50 <strchr@plt>
  406008:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40600c:	str	x0, [x8, #512]
  406010:	ldr	x20, [x25]
  406014:	subs	x2, x0, x20
  406018:	b.ls	40602c <wcrtomb@plt+0x122c>  // b.plast
  40601c:	mov	w1, #0x2f                  	// #47
  406020:	mov	x0, x20
  406024:	bl	404b50 <memchr@plt>
  406028:	cbz	x0, 4065bc <wcrtomb@plt+0x17bc>
  40602c:	mov	w2, #0x1b6                 	// #438
  406030:	mov	x0, x20
  406034:	mov	w1, wzr
  406038:	bl	404510 <open@plt>
  40603c:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  406040:	cmn	w0, #0x1
  406044:	str	w0, [x20, #464]
  406048:	b.eq	4067bc <wcrtomb@plt+0x19bc>  // b.none
  40604c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406050:	ldrb	w8, [x8, #3660]
  406054:	cbnz	w8, 406324 <wcrtomb@plt+0x1524>
  406058:	ldr	x8, [x24, #392]
  40605c:	cbz	x8, 406538 <wcrtomb@plt+0x1738>
  406060:	mov	w8, #0x40000000            	// #1073741824
  406064:	cmp	w0, w8
  406068:	b.lt	4062fc <wcrtomb@plt+0x14fc>  // b.tstop
  40606c:	mov	w8, #0xc0000000            	// #-1073741824
  406070:	add	w0, w0, w8
  406074:	bl	427184 <wcrtomb@plt+0x22384>
  406078:	b	406300 <wcrtomb@plt+0x1500>
  40607c:	bl	41e5c8 <wcrtomb@plt+0x197c8>
  406080:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406084:	ldr	x8, [x8, #448]
  406088:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40608c:	str	w0, [x9, #1176]
  406090:	cbnz	x8, 406344 <wcrtomb@plt+0x1544>
  406094:	ldr	x8, [x21, #176]
  406098:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  40609c:	add	x1, x1, #0x25d
  4060a0:	ldr	x0, [x8]
  4060a4:	bl	404900 <strcmp@plt>
  4060a8:	cbnz	w0, 406344 <wcrtomb@plt+0x1544>
  4060ac:	b	406258 <wcrtomb@plt+0x1458>
  4060b0:	bl	41eaa0 <wcrtomb@plt+0x19ca0>
  4060b4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4060b8:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4060bc:	str	w0, [x8, #1176]
  4060c0:	ldr	x8, [x9, #3472]
  4060c4:	mov	w9, #0x1                   	// #1
  4060c8:	strb	w9, [x22, #1208]
  4060cc:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4060d0:	str	x8, [x9, #3432]
  4060d4:	b	406344 <wcrtomb@plt+0x1544>
  4060d8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4060dc:	ldrb	w8, [x8, #330]
  4060e0:	mov	w9, #0x1                   	// #1
  4060e4:	strb	w9, [x22, #1208]
  4060e8:	cbnz	w8, 406784 <wcrtomb@plt+0x1984>
  4060ec:	cmp	w19, #0x2
  4060f0:	b.eq	406228 <wcrtomb@plt+0x1428>  // b.none
  4060f4:	cmp	w19, #0x1
  4060f8:	b.eq	406208 <wcrtomb@plt+0x1408>  // b.none
  4060fc:	cbnz	w19, 406344 <wcrtomb@plt+0x1544>
  406100:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406104:	add	x0, sp, #0x8
  406108:	str	wzr, [x8, #464]
  40610c:	bl	4082f0 <wcrtomb@plt+0x34f0>
  406110:	cmp	w0, #0x2
  406114:	b.cs	4067d4 <wcrtomb@plt+0x19d4>  // b.hs, b.nlast
  406118:	ldrb	w8, [sp, #8]
  40611c:	cbz	w8, 406344 <wcrtomb@plt+0x1544>
  406120:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406124:	ldr	x8, [x8, #496]
  406128:	cbz	x8, 406130 <wcrtomb@plt+0x1330>
  40612c:	blr	x8
  406130:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  406134:	add	x1, x1, #0xb9f
  406138:	mov	w2, #0x5                   	// #5
  40613c:	mov	x0, xzr
  406140:	bl	404bd0 <dcgettext@plt>
  406144:	mov	x2, x0
  406148:	mov	w0, wzr
  40614c:	mov	w1, wzr
  406150:	bl	4041d0 <error@plt>
  406154:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406158:	mov	w9, #0x2                   	// #2
  40615c:	str	w9, [x8, #2944]
  406160:	b	406344 <wcrtomb@plt+0x1544>
  406164:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406168:	ldrb	w8, [x8, #245]
  40616c:	cbz	w8, 40626c <wcrtomb@plt+0x146c>
  406170:	mov	w1, #0x1                   	// #1
  406174:	mov	x0, x20
  406178:	mov	w22, #0x1                   	// #1
  40617c:	bl	41936c <wcrtomb@plt+0x1456c>
  406180:	ldr	x25, [x21, #176]
  406184:	b	406270 <wcrtomb@plt+0x1470>
  406188:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40618c:	ldrb	w8, [x8, #504]
  406190:	cbnz	w8, 4061c4 <wcrtomb@plt+0x13c4>
  406194:	mov	w1, #0x3a                  	// #58
  406198:	mov	x0, x20
  40619c:	bl	404a50 <strchr@plt>
  4061a0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4061a4:	str	x0, [x8, #512]
  4061a8:	ldr	x20, [x25]
  4061ac:	subs	x2, x0, x20
  4061b0:	b.ls	4061c4 <wcrtomb@plt+0x13c4>  // b.plast
  4061b4:	mov	w1, #0x2f                  	// #47
  4061b8:	mov	x0, x20
  4061bc:	bl	404b50 <memchr@plt>
  4061c0:	cbz	x0, 4065a0 <wcrtomb@plt+0x17a0>
  4061c4:	mov	w1, #0x42                  	// #66
  4061c8:	mov	w2, #0x1b6                 	// #438
  4061cc:	mov	x0, x20
  4061d0:	bl	404510 <open@plt>
  4061d4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4061d8:	str	w0, [x8, #464]
  4061dc:	mov	x0, xzr
  4061e0:	bl	4082f0 <wcrtomb@plt+0x34f0>
  4061e4:	cmp	w0, #0x2
  4061e8:	b.cc	406344 <wcrtomb@plt+0x1544>  // b.lo, b.ul, b.last
  4061ec:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4061f0:	ldr	x8, [x8, #496]
  4061f4:	cbz	x8, 4061fc <wcrtomb@plt+0x13fc>
  4061f8:	blr	x8
  4061fc:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  406200:	add	x1, x1, #0xfa7
  406204:	b	40679c <wcrtomb@plt+0x199c>
  406208:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40620c:	ldr	x8, [x8, #448]
  406210:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  406214:	mov	w10, #0x1                   	// #1
  406218:	str	w10, [x9, #464]
  40621c:	cbz	x8, 406258 <wcrtomb@plt+0x1458>
  406220:	mov	w22, wzr
  406224:	b	406360 <wcrtomb@plt+0x1560>
  406228:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40622c:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406230:	adrp	x11, 46b000 <argp_program_version_hook@@Base+0x458>
  406234:	str	wzr, [x8, #464]
  406238:	ldr	x8, [x10, #3472]
  40623c:	ldr	x10, [x11, #448]
  406240:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406244:	mov	w11, #0x1                   	// #1
  406248:	strb	w11, [x9, #3480]
  40624c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406250:	str	x8, [x9, #3432]
  406254:	cbnz	x10, 406344 <wcrtomb@plt+0x1544>
  406258:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40625c:	ldr	x8, [x8, #624]
  406260:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406264:	str	x8, [x9, #3416]
  406268:	b	406344 <wcrtomb@plt+0x1544>
  40626c:	mov	w22, wzr
  406270:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406274:	ldrb	w9, [x8, #330]
  406278:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40627c:	ldrb	w8, [x8, #504]
  406280:	cbz	w9, 40629c <wcrtomb@plt+0x149c>
  406284:	cbz	w8, 4062b8 <wcrtomb@plt+0x14b8>
  406288:	ldr	x0, [x25]
  40628c:	mov	w1, #0x42                  	// #66
  406290:	mov	w2, #0x1b6                 	// #438
  406294:	bl	404510 <open@plt>
  406298:	b	4062ac <wcrtomb@plt+0x14ac>
  40629c:	cbz	w8, 4064e8 <wcrtomb@plt+0x16e8>
  4062a0:	ldr	x0, [x25]
  4062a4:	mov	w1, #0x1b6                 	// #438
  4062a8:	bl	404d90 <creat@plt>
  4062ac:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4062b0:	str	w0, [x8, #464]
  4062b4:	b	406350 <wcrtomb@plt+0x1550>
  4062b8:	ldr	x0, [x25]
  4062bc:	mov	w1, #0x3a                  	// #58
  4062c0:	bl	404a50 <strchr@plt>
  4062c4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4062c8:	str	x0, [x8, #512]
  4062cc:	cbz	x0, 406288 <wcrtomb@plt+0x1488>
  4062d0:	ldr	x20, [x25]
  4062d4:	subs	x2, x0, x20
  4062d8:	b.ls	406288 <wcrtomb@plt+0x1488>  // b.plast
  4062dc:	mov	w1, #0x2f                  	// #47
  4062e0:	mov	x0, x20
  4062e4:	bl	404b50 <memchr@plt>
  4062e8:	cbnz	x0, 406288 <wcrtomb@plt+0x1488>
  4062ec:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4062f0:	ldr	x3, [x8, #296]
  4062f4:	mov	w1, #0x42                  	// #66
  4062f8:	b	406528 <wcrtomb@plt+0x1728>
  4062fc:	bl	4047a0 <close@plt>
  406300:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406304:	strb	wzr, [x8, #1160]
  406308:	bl	41eaa0 <wcrtomb@plt+0x19ca0>
  40630c:	mov	w8, w0
  406310:	ldr	w0, [x20, #464]
  406314:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406318:	str	w8, [x9, #1176]
  40631c:	mov	w8, #0x1                   	// #1
  406320:	strb	w8, [x22, #1208]
  406324:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406328:	ldr	x8, [x8, #3472]
  40632c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406330:	str	xzr, [x23, #3424]
  406334:	str	x8, [x9, #3432]
  406338:	str	w0, [x20, #464]
  40633c:	tbnz	w0, #31, 4067c4 <wcrtomb@plt+0x19c4>
  406340:	bl	407edc <wcrtomb@plt+0x30dc>
  406344:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406348:	ldr	w0, [x8, #464]
  40634c:	mov	w22, wzr
  406350:	tbnz	w0, #31, 406650 <wcrtomb@plt+0x1850>
  406354:	mov	w8, #0x3fffffff            	// #1073741823
  406358:	cmp	w0, w8
  40635c:	b.gt	406368 <wcrtomb@plt+0x1568>
  406360:	bl	41e1e0 <wcrtomb@plt+0x193e0>
  406364:	tbz	w0, #0, 406650 <wcrtomb@plt+0x1850>
  406368:	bl	41e298 <wcrtomb@plt+0x19498>
  40636c:	bl	41e244 <wcrtomb@plt+0x19444>
  406370:	sub	w8, w19, #0x1
  406374:	cmp	w8, #0x2
  406378:	b.cs	406398 <wcrtomb@plt+0x1598>  // b.hs, b.nlast
  40637c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406380:	cmp	w19, #0x1
  406384:	str	xzr, [x8, #3440]
  406388:	b.eq	4063f0 <wcrtomb@plt+0x15f0>  // b.none
  40638c:	cmp	w19, #0x2
  406390:	b.eq	4063a0 <wcrtomb@plt+0x15a0>  // b.none
  406394:	b	4064ac <wcrtomb@plt+0x16ac>
  406398:	cbnz	w19, 4064ac <wcrtomb@plt+0x16ac>
  40639c:	bl	405574 <wcrtomb@plt+0x774>
  4063a0:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  4063a4:	ldr	x0, [x21, #136]
  4063a8:	cbz	x0, 4064ac <wcrtomb@plt+0x16ac>
  4063ac:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4063b0:	ldr	x19, [x22, #3456]
  4063b4:	cbnz	x19, 406464 <wcrtomb@plt+0x1664>
  4063b8:	bl	405574 <wcrtomb@plt+0x774>
  4063bc:	cbz	x0, 406738 <wcrtomb@plt+0x1938>
  4063c0:	ldrb	w8, [x0, #156]
  4063c4:	mov	x19, x0
  4063c8:	cmp	w8, #0x67
  4063cc:	b.eq	40641c <wcrtomb@plt+0x161c>  // b.none
  4063d0:	cmp	w8, #0x56
  4063d4:	b.ne	406458 <wcrtomb@plt+0x1658>  // b.any
  4063d8:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4063dc:	add	x0, x0, #0xd80
  4063e0:	mov	w2, #0x64                  	// #100
  4063e4:	mov	x1, x19
  4063e8:	bl	41871c <wcrtomb@plt+0x1391c>
  4063ec:	b	406458 <wcrtomb@plt+0x1658>
  4063f0:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  4063f4:	ldr	x0, [x9, #136]
  4063f8:	str	xzr, [x8, #3440]
  4063fc:	cbz	x0, 4064ac <wcrtomb@plt+0x16ac>
  406400:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406404:	ldrb	w8, [x8, #3660]
  406408:	cbz	w8, 406414 <wcrtomb@plt+0x1614>
  40640c:	bl	408164 <wcrtomb@plt+0x3364>
  406410:	b	4064ac <wcrtomb@plt+0x16ac>
  406414:	bl	408200 <wcrtomb@plt+0x3400>
  406418:	b	4064ac <wcrtomb@plt+0x16ac>
  40641c:	add	x0, sp, #0x8
  406420:	add	x20, sp, #0x8
  406424:	bl	420c80 <wcrtomb@plt+0x1be80>
  406428:	add	x0, x19, #0x7c
  40642c:	mov	w1, #0xc                   	// #12
  406430:	add	x20, x20, #0x158
  406434:	bl	41753c <wcrtomb@plt+0x1273c>
  406438:	mov	x2, x0
  40643c:	mov	x0, x20
  406440:	mov	x1, x19
  406444:	bl	4116b4 <wcrtomb@plt+0xc8b4>
  406448:	add	x0, sp, #0x8
  40644c:	bl	411050 <wcrtomb@plt+0xc250>
  406450:	add	x0, sp, #0x8
  406454:	bl	420d00 <wcrtomb@plt+0x1bf00>
  406458:	ldr	x19, [x22, #3456]
  40645c:	cbz	x19, 406738 <wcrtomb@plt+0x1938>
  406460:	ldr	x0, [x21, #136]
  406464:	mov	x1, x19
  406468:	mov	w2, wzr
  40646c:	bl	404aa0 <fnmatch@plt>
  406470:	cbz	w0, 4064ac <wcrtomb@plt+0x16ac>
  406474:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406478:	ldrb	w8, [x8, #3660]
  40647c:	cbz	w8, 4066ac <wcrtomb@plt+0x18ac>
  406480:	mov	x0, x19
  406484:	bl	405e24 <wcrtomb@plt+0x1024>
  406488:	cbz	x0, 4066ac <wcrtomb@plt+0x18ac>
  40648c:	ldr	x1, [x21, #136]
  406490:	mov	w2, wzr
  406494:	mov	x19, x0
  406498:	bl	404aa0 <fnmatch@plt>
  40649c:	mov	w20, w0
  4064a0:	mov	x0, x19
  4064a4:	bl	4049b0 <free@plt>
  4064a8:	cbnz	w20, 4066ac <wcrtomb@plt+0x18ac>
  4064ac:	adrp	x19, 46b000 <argp_program_version_hook@@Base+0x458>
  4064b0:	add	x19, x19, #0x1a8
  4064b4:	mov	x0, x19
  4064b8:	bl	4327b8 <argp_parse@@Base+0x3afc>
  4064bc:	ldr	q0, [x19]
  4064c0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4064c4:	add	x8, x8, #0x160
  4064c8:	str	q0, [x8]
  4064cc:	add	sp, sp, #0x1b0
  4064d0:	ldp	x20, x19, [sp, #64]
  4064d4:	ldp	x22, x21, [sp, #48]
  4064d8:	ldp	x24, x23, [sp, #32]
  4064dc:	ldp	x28, x25, [sp, #16]
  4064e0:	ldp	x29, x30, [sp], #80
  4064e4:	ret
  4064e8:	ldr	x0, [x25]
  4064ec:	mov	w1, #0x3a                  	// #58
  4064f0:	bl	404a50 <strchr@plt>
  4064f4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4064f8:	str	x0, [x8, #512]
  4064fc:	cbz	x0, 4062a0 <wcrtomb@plt+0x14a0>
  406500:	ldr	x20, [x25]
  406504:	subs	x2, x0, x20
  406508:	b.ls	4062a0 <wcrtomb@plt+0x14a0>  // b.plast
  40650c:	mov	w1, #0x2f                  	// #47
  406510:	mov	x0, x20
  406514:	bl	404b50 <memchr@plt>
  406518:	cbnz	x0, 4062a0 <wcrtomb@plt+0x14a0>
  40651c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406520:	ldr	x3, [x8, #296]
  406524:	mov	w1, #0x41                  	// #65
  406528:	mov	w2, #0x40000000            	// #1073741824
  40652c:	mov	x0, x20
  406530:	bl	426a84 <wcrtomb@plt+0x21c84>
  406534:	b	4062ac <wcrtomb@plt+0x14ac>
  406538:	add	x0, sp, #0x8
  40653c:	bl	4082f0 <wcrtomb@plt+0x34f0>
  406540:	cbz	w0, 4065d8 <wcrtomb@plt+0x17d8>
  406544:	mov	w8, w0
  406548:	cmp	w0, #0x1
  40654c:	b.ne	406640 <wcrtomb@plt+0x1840>  // b.any
  406550:	ldrb	w8, [sp, #8]
  406554:	cbz	w8, 406598 <wcrtomb@plt+0x1798>
  406558:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40655c:	ldr	x8, [x8, #496]
  406560:	cbz	x8, 406568 <wcrtomb@plt+0x1768>
  406564:	blr	x8
  406568:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  40656c:	add	x1, x1, #0xb9f
  406570:	mov	w2, #0x5                   	// #5
  406574:	mov	x0, xzr
  406578:	bl	404bd0 <dcgettext@plt>
  40657c:	mov	x2, x0
  406580:	mov	w0, wzr
  406584:	mov	w1, wzr
  406588:	bl	4041d0 <error@plt>
  40658c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406590:	mov	w9, #0x2                   	// #2
  406594:	str	w9, [x8, #2944]
  406598:	ldr	w0, [x20, #464]
  40659c:	b	406338 <wcrtomb@plt+0x1538>
  4065a0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4065a4:	ldr	x3, [x8, #296]
  4065a8:	mov	w1, #0x42                  	// #66
  4065ac:	mov	w2, #0x40000000            	// #1073741824
  4065b0:	mov	x0, x20
  4065b4:	bl	426a84 <wcrtomb@plt+0x21c84>
  4065b8:	b	4061d4 <wcrtomb@plt+0x13d4>
  4065bc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4065c0:	ldr	x3, [x8, #296]
  4065c4:	mov	w2, #0x40000000            	// #1073741824
  4065c8:	mov	x0, x20
  4065cc:	mov	w1, wzr
  4065d0:	bl	426a84 <wcrtomb@plt+0x21c84>
  4065d4:	b	40603c <wcrtomb@plt+0x123c>
  4065d8:	ldrb	w8, [sp, #8]
  4065dc:	cbz	w8, 406620 <wcrtomb@plt+0x1820>
  4065e0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4065e4:	ldr	x8, [x8, #496]
  4065e8:	cbz	x8, 4065f0 <wcrtomb@plt+0x17f0>
  4065ec:	blr	x8
  4065f0:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  4065f4:	add	x1, x1, #0xb9f
  4065f8:	mov	w2, #0x5                   	// #5
  4065fc:	mov	x0, xzr
  406600:	bl	404bd0 <dcgettext@plt>
  406604:	mov	x2, x0
  406608:	mov	w0, wzr
  40660c:	mov	w1, wzr
  406610:	bl	4041d0 <error@plt>
  406614:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406618:	mov	w9, #0x2                   	// #2
  40661c:	str	w9, [x8, #2944]
  406620:	ldr	x8, [x21, #176]
  406624:	mov	x1, xzr
  406628:	ldr	x0, [x8]
  40662c:	bl	41e054 <wcrtomb@plt+0x19254>
  406630:	ldr	x8, [x24, #392]
  406634:	ldr	w0, [x20, #464]
  406638:	cbnz	x8, 406060 <wcrtomb@plt+0x1260>
  40663c:	b	406338 <wcrtomb@plt+0x1538>
  406640:	ldr	w0, [x20, #464]
  406644:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406648:	str	w8, [x9, #1128]
  40664c:	b	406060 <wcrtomb@plt+0x1260>
  406650:	bl	404ce0 <__errno_location@plt>
  406654:	ldr	w20, [x0]
  406658:	mov	x19, x0
  40665c:	cbz	w22, 406664 <wcrtomb@plt+0x1864>
  406660:	bl	4195a8 <wcrtomb@plt+0x147a8>
  406664:	str	w20, [x19]
  406668:	ldr	x8, [x21, #176]
  40666c:	ldr	x0, [x8]
  406670:	bl	42622c <wcrtomb@plt+0x2142c>
  406674:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406678:	ldr	x8, [x8, #496]
  40667c:	cbz	x8, 406684 <wcrtomb@plt+0x1884>
  406680:	blr	x8
  406684:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  406688:	add	x1, x1, #0xf2b
  40668c:	b	40679c <wcrtomb@plt+0x199c>
  406690:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406694:	ldr	x8, [x8, #496]
  406698:	cbz	x8, 4066a0 <wcrtomb@plt+0x18a0>
  40669c:	blr	x8
  4066a0:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  4066a4:	add	x1, x1, #0xf49
  4066a8:	b	40679c <wcrtomb@plt+0x199c>
  4066ac:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4066b0:	ldr	x8, [x8, #496]
  4066b4:	cbz	x8, 4066bc <wcrtomb@plt+0x18bc>
  4066b8:	blr	x8
  4066bc:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4066c0:	add	x1, x1, #0x9f
  4066c4:	mov	w2, #0x5                   	// #5
  4066c8:	mov	x0, xzr
  4066cc:	bl	404bd0 <dcgettext@plt>
  4066d0:	ldr	x1, [x22, #3456]
  4066d4:	mov	x19, x0
  4066d8:	mov	w0, wzr
  4066dc:	bl	439ab0 <argp_parse@@Base+0xadf4>
  4066e0:	ldr	x1, [x21, #136]
  4066e4:	mov	x20, x0
  4066e8:	mov	w0, #0x1                   	// #1
  4066ec:	bl	439ab0 <argp_parse@@Base+0xadf4>
  4066f0:	mov	x4, x0
  4066f4:	mov	w0, wzr
  4066f8:	mov	w1, wzr
  4066fc:	mov	x2, x19
  406700:	mov	x3, x20
  406704:	bl	4041d0 <error@plt>
  406708:	bl	40d698 <wcrtomb@plt+0x8898>
  40670c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406710:	ldr	x8, [x8, #496]
  406714:	cbz	x8, 40671c <wcrtomb@plt+0x191c>
  406718:	blr	x8
  40671c:	adrp	x8, 44c000 <_obstack_memory_used@@Base+0x10808>
  406720:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0xf808>
  406724:	add	x8, x8, #0xe
  406728:	add	x9, x9, #0xfc9
  40672c:	cmp	w20, #0x0
  406730:	csel	x1, x9, x8, eq  // eq = none
  406734:	b	40679c <wcrtomb@plt+0x199c>
  406738:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40673c:	ldr	x8, [x8, #496]
  406740:	cbz	x8, 406748 <wcrtomb@plt+0x1948>
  406744:	blr	x8
  406748:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40674c:	add	x1, x1, #0x7f
  406750:	mov	w2, #0x5                   	// #5
  406754:	mov	x0, xzr
  406758:	bl	404bd0 <dcgettext@plt>
  40675c:	ldr	x8, [x21, #136]
  406760:	mov	x19, x0
  406764:	mov	x0, x8
  406768:	bl	439ac0 <argp_parse@@Base+0xae04>
  40676c:	mov	x3, x0
  406770:	mov	w0, wzr
  406774:	mov	w1, wzr
  406778:	mov	x2, x19
  40677c:	bl	4041d0 <error@plt>
  406780:	bl	40d698 <wcrtomb@plt+0x8898>
  406784:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406788:	ldr	x8, [x8, #496]
  40678c:	cbz	x8, 406794 <wcrtomb@plt+0x1994>
  406790:	blr	x8
  406794:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  406798:	add	x1, x1, #0xf5f
  40679c:	mov	w2, #0x5                   	// #5
  4067a0:	mov	x0, xzr
  4067a4:	bl	404bd0 <dcgettext@plt>
  4067a8:	mov	x2, x0
  4067ac:	mov	w0, wzr
  4067b0:	mov	w1, wzr
  4067b4:	bl	4041d0 <error@plt>
  4067b8:	bl	40d698 <wcrtomb@plt+0x8898>
  4067bc:	mov	w8, #0xffffffff            	// #-1
  4067c0:	str	w8, [x20, #464]
  4067c4:	bl	404ce0 <__errno_location@plt>
  4067c8:	ldr	w20, [x0]
  4067cc:	mov	x19, x0
  4067d0:	b	406664 <wcrtomb@plt+0x1864>
  4067d4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4067d8:	ldr	x8, [x8, #496]
  4067dc:	mov	w20, w0
  4067e0:	cbz	x8, 4067e8 <wcrtomb@plt+0x19e8>
  4067e4:	blr	x8
  4067e8:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  4067ec:	add	x1, x1, #0xf82
  4067f0:	mov	w2, #0x5                   	// #5
  4067f4:	mov	x0, xzr
  4067f8:	bl	404bd0 <dcgettext@plt>
  4067fc:	mov	x19, x0
  406800:	mov	w0, w20
  406804:	bl	4083ec <wcrtomb@plt+0x35ec>
  406808:	b	40676c <wcrtomb@plt+0x196c>
  40680c:	sub	sp, sp, #0xb0
  406810:	adrp	x8, 407000 <wcrtomb@plt+0x2200>
  406814:	stp	x20, x19, [sp, #160]
  406818:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40681c:	add	x8, x8, #0x404
  406820:	mov	w0, wzr
  406824:	stp	x29, x30, [sp, #80]
  406828:	stp	x28, x27, [sp, #96]
  40682c:	stp	x26, x25, [sp, #112]
  406830:	stp	x24, x23, [sp, #128]
  406834:	stp	x22, x21, [sp, #144]
  406838:	add	x29, sp, #0x50
  40683c:	str	x8, [x20, #1200]
  406840:	bl	408980 <wcrtomb@plt+0x3b80>
  406844:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406848:	ldrb	w8, [x8, #3480]
  40684c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406850:	adrp	x26, 46b000 <argp_program_version_hook@@Base+0x458>
  406854:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  406858:	str	wzr, [x9, #1112]
  40685c:	cbz	w8, 406888 <wcrtomb@plt+0x1a88>
  406860:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406864:	ldr	x8, [x8, #1152]
  406868:	cbz	x8, 406888 <wcrtomb@plt+0x1a88>
  40686c:	mov	w8, #0x1                   	// #1
  406870:	str	w8, [x26, #464]
  406874:	bl	41e584 <wcrtomb@plt+0x19784>
  406878:	ldr	x8, [x21, #408]
  40687c:	str	wzr, [x26, #464]
  406880:	cmp	x0, x8
  406884:	b.ne	406ec0 <wcrtomb@plt+0x20c0>  // b.any
  406888:	ldr	w0, [x26, #464]
  40688c:	mov	w8, #0x40000000            	// #1073741824
  406890:	cmp	w0, w8
  406894:	b.lt	4068b4 <wcrtomb@plt+0x1ab4>  // b.tstop
  406898:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40689c:	ldr	x1, [x8, #3472]
  4068a0:	ldr	x2, [x21, #408]
  4068a4:	mov	w8, #0xc0000000            	// #-1073741824
  4068a8:	add	w0, w0, w8
  4068ac:	bl	4271dc <wcrtomb@plt+0x223dc>
  4068b0:	b	4068c4 <wcrtomb@plt+0x1ac4>
  4068b4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4068b8:	ldr	x1, [x8, #3472]
  4068bc:	ldr	x2, [x21, #408]
  4068c0:	bl	439dd4 <argp_parse@@Base+0xb118>
  4068c4:	ldr	x8, [x21, #408]
  4068c8:	mov	x19, x0
  4068cc:	cmp	x0, x8
  4068d0:	b.eq	406918 <wcrtomb@plt+0x1b18>  // b.none
  4068d4:	cbz	x19, 4068f0 <wcrtomb@plt+0x1af0>
  4068d8:	cmn	x19, #0x1
  4068dc:	b.ne	40690c <wcrtomb@plt+0x1b0c>  // b.any
  4068e0:	bl	404ce0 <__errno_location@plt>
  4068e4:	ldr	w8, [x0]
  4068e8:	cmp	w8, #0x1c
  4068ec:	b.ne	406904 <wcrtomb@plt+0x1b04>  // b.any
  4068f0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4068f4:	ldrb	w8, [x8, #3660]
  4068f8:	cbnz	w8, 40692c <wcrtomb@plt+0x1b2c>
  4068fc:	cmn	x19, #0x1
  406900:	b.ne	40690c <wcrtomb@plt+0x1b0c>  // b.any
  406904:	bl	4059cc <wcrtomb@plt+0xbcc>
  406908:	b	406888 <wcrtomb@plt+0x1a88>
  40690c:	mov	x0, x19
  406910:	bl	4074d8 <wcrtomb@plt+0x26d8>
  406914:	b	406e90 <wcrtomb@plt+0x2090>
  406918:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40691c:	ldr	x9, [x8, #3424]
  406920:	add	x9, x9, #0x1
  406924:	str	x9, [x8, #3424]
  406928:	b	406e90 <wcrtomb@plt+0x2090>
  40692c:	adrp	x28, 44b000 <_obstack_memory_used@@Base+0xf808>
  406930:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406934:	adrp	x22, 46b000 <argp_program_version_hook@@Base+0x458>
  406938:	mov	w23, #0x40000000            	// #1073741824
  40693c:	mov	w19, #0xc0000000            	// #-1073741824
  406940:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406944:	add	x28, x28, #0xb9f
  406948:	add	x24, x24, #0x2b0
  40694c:	mov	w25, #0x1                   	// #1
  406950:	ldr	w8, [x22, #348]
  406954:	cmp	w8, #0x8
  406958:	b.hi	406974 <wcrtomb@plt+0x1b74>  // b.pmore
  40695c:	lsl	w8, w25, w8
  406960:	mov	w9, #0x106                 	// #262
  406964:	tst	w8, w9
  406968:	b.eq	406974 <wcrtomb@plt+0x1b74>  // b.none
  40696c:	mov	w0, #0x2                   	// #2
  406970:	b	406978 <wcrtomb@plt+0x1b78>
  406974:	mov	w0, wzr
  406978:	bl	4076e0 <wcrtomb@plt+0x28e0>
  40697c:	tbz	w0, #0, 406e70 <wcrtomb@plt+0x2070>
  406980:	ldr	w0, [x26, #464]
  406984:	cmp	w0, w23
  406988:	b.lt	4069a0 <wcrtomb@plt+0x1ba0>  // b.tstop
  40698c:	ldr	x1, [x20, #3472]
  406990:	ldr	x2, [x21, #408]
  406994:	add	w0, w0, w19
  406998:	bl	4271dc <wcrtomb@plt+0x223dc>
  40699c:	b	4069ac <wcrtomb@plt+0x1bac>
  4069a0:	ldr	x1, [x20, #3472]
  4069a4:	ldr	x2, [x21, #408]
  4069a8:	bl	439dd4 <argp_parse@@Base+0xb118>
  4069ac:	cmn	x0, #0x1
  4069b0:	b.ne	4069bc <wcrtomb@plt+0x1bbc>  // b.any
  4069b4:	bl	4059cc <wcrtomb@plt+0xbcc>
  4069b8:	b	406980 <wcrtomb@plt+0x1b80>
  4069bc:	ldr	x8, [x21, #408]
  4069c0:	cmp	x0, x8
  4069c4:	b.eq	4069cc <wcrtomb@plt+0x1bcc>  // b.none
  4069c8:	bl	4074d8 <wcrtomb@plt+0x26d8>
  4069cc:	bl	405574 <wcrtomb@plt+0x774>
  4069d0:	stur	x0, [x29, #-8]
  4069d4:	cbz	x0, 406a48 <wcrtomb@plt+0x1c48>
  4069d8:	ldrb	w8, [x0, #156]
  4069dc:	mov	x27, x0
  4069e0:	cmp	w8, #0x4d
  4069e4:	b.eq	406aec <wcrtomb@plt+0x1cec>  // b.none
  4069e8:	cmp	w8, #0x56
  4069ec:	b.eq	406a7c <wcrtomb@plt+0x1c7c>  // b.none
  4069f0:	cmp	w8, #0x67
  4069f4:	b.ne	406b80 <wcrtomb@plt+0x1d80>  // b.any
  4069f8:	mov	x0, x24
  4069fc:	bl	420c80 <wcrtomb@plt+0x1be80>
  406a00:	sub	x0, x29, #0x8
  406a04:	mov	w2, #0x2                   	// #2
  406a08:	mov	x1, x24
  406a0c:	bl	416490 <wcrtomb@plt+0x11690>
  406a10:	cmp	w0, #0x2
  406a14:	b.ne	406a48 <wcrtomb@plt+0x1c48>  // b.any
  406a18:	mov	x0, x24
  406a1c:	bl	411050 <wcrtomb@plt+0xc250>
  406a20:	mov	x0, x24
  406a24:	bl	420d00 <wcrtomb@plt+0x1bf00>
  406a28:	sub	x0, x29, #0x8
  406a2c:	mov	x1, x24
  406a30:	mov	w2, wzr
  406a34:	bl	416490 <wcrtomb@plt+0x11690>
  406a38:	cmp	w0, #0x5
  406a3c:	b.eq	406b80 <wcrtomb@plt+0x1d80>  // b.none
  406a40:	cmp	w0, #0x1
  406a44:	b.eq	406b48 <wcrtomb@plt+0x1d48>  // b.none
  406a48:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406a4c:	ldr	x8, [x8, #496]
  406a50:	cbz	x8, 406a58 <wcrtomb@plt+0x1c58>
  406a54:	blr	x8
  406a58:	mov	w2, #0x5                   	// #5
  406a5c:	mov	x0, xzr
  406a60:	mov	x1, x28
  406a64:	bl	404bd0 <dcgettext@plt>
  406a68:	mov	x2, x0
  406a6c:	mov	w0, wzr
  406a70:	mov	w1, wzr
  406a74:	bl	4041d0 <error@plt>
  406a78:	b	406950 <wcrtomb@plt+0x1b50>
  406a7c:	bl	407da0 <wcrtomb@plt+0x2fa0>
  406a80:	tbz	w0, #0, 406950 <wcrtomb@plt+0x1b50>
  406a84:	mov	x0, x24
  406a88:	bl	420d00 <wcrtomb@plt+0x1bf00>
  406a8c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406a90:	ldr	x1, [x8, #3560]
  406a94:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406a98:	mov	w2, #0x64                  	// #100
  406a9c:	add	x0, x0, #0xd80
  406aa0:	bl	41871c <wcrtomb@plt+0x1391c>
  406aa4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406aa8:	ldr	x8, [x8, #3496]
  406aac:	cmp	x8, x27
  406ab0:	b.hi	406ac8 <wcrtomb@plt+0x1cc8>  // b.pmore
  406ab4:	add	x8, x8, #0x200
  406ab8:	cmp	x8, x27
  406abc:	b.ls	406ab4 <wcrtomb@plt+0x1cb4>  // b.plast
  406ac0:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406ac4:	str	x8, [x9, #3496]
  406ac8:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406acc:	ldr	x9, [x9, #3432]
  406ad0:	cmp	x8, x9
  406ad4:	b.hi	406ebc <wcrtomb@plt+0x20bc>  // b.pmore
  406ad8:	bl	405574 <wcrtomb@plt+0x774>
  406adc:	stur	x0, [x29, #-8]
  406ae0:	ldrb	w8, [x0, #156]
  406ae4:	cmp	w8, #0x4d
  406ae8:	b.ne	406b80 <wcrtomb@plt+0x1d80>  // b.any
  406aec:	bl	407da0 <wcrtomb@plt+0x2fa0>
  406af0:	tbz	w0, #0, 406950 <wcrtomb@plt+0x1b50>
  406af4:	mov	x0, x24
  406af8:	bl	420d00 <wcrtomb@plt+0x1bf00>
  406afc:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406b00:	ldr	x1, [x25, #3560]
  406b04:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406b08:	mov	w2, #0x64                  	// #100
  406b0c:	add	x0, x0, #0xd88
  406b10:	bl	41871c <wcrtomb@plt+0x1391c>
  406b14:	ldr	x8, [x25, #3560]
  406b18:	mov	w1, #0xc                   	// #12
  406b1c:	add	x0, x8, #0x7c
  406b20:	bl	417558 <wcrtomb@plt+0x12758>
  406b24:	ldr	x8, [x25, #3560]
  406b28:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406b2c:	str	x0, [x9, #3488]
  406b30:	mov	w1, #0xc                   	// #12
  406b34:	add	x0, x8, #0x171
  406b38:	bl	417558 <wcrtomb@plt+0x12758>
  406b3c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406b40:	str	x0, [x8, #3504]
  406b44:	b	406b80 <wcrtomb@plt+0x1d80>
  406b48:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406b4c:	ldur	x9, [x29, #-8]
  406b50:	ldr	x8, [x8, #3496]
  406b54:	cmp	x8, x9
  406b58:	b.hi	406b70 <wcrtomb@plt+0x1d70>  // b.pmore
  406b5c:	add	x8, x8, #0x200
  406b60:	cmp	x8, x9
  406b64:	b.ls	406b5c <wcrtomb@plt+0x1d5c>  // b.plast
  406b68:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406b6c:	str	x8, [x9, #3496]
  406b70:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406b74:	ldr	x9, [x9, #3432]
  406b78:	cmp	x8, x9
  406b7c:	b.hi	406ebc <wcrtomb@plt+0x20bc>  // b.pmore
  406b80:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406b84:	mov	x25, x24
  406b88:	ldr	x24, [x8, #680]
  406b8c:	cbz	x24, 406e6c <wcrtomb@plt+0x206c>
  406b90:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406b94:	ldr	x27, [x8, #3464]
  406b98:	cbz	x27, 406c3c <wcrtomb@plt+0x1e3c>
  406b9c:	ldr	x28, [x24, #16]
  406ba0:	mov	x0, x27
  406ba4:	mov	x1, x28
  406ba8:	bl	404900 <strcmp@plt>
  406bac:	cbz	w0, 406ce4 <wcrtomb@plt+0x1ee4>
  406bb0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406bb4:	ldr	w8, [x8, #304]
  406bb8:	orr	w8, w8, #0x4
  406bbc:	cmp	w8, #0x6
  406bc0:	b.ne	406be8 <wcrtomb@plt+0x1de8>  // b.any
  406bc4:	mov	x0, x28
  406bc8:	bl	404170 <strlen@plt>
  406bcc:	cmp	x0, #0x64
  406bd0:	b.cc	406be8 <wcrtomb@plt+0x1de8>  // b.lo, b.ul, b.last
  406bd4:	mov	w2, #0x64                  	// #100
  406bd8:	mov	x0, x27
  406bdc:	mov	x1, x28
  406be0:	bl	404580 <strncmp@plt>
  406be4:	cbz	w0, 406c90 <wcrtomb@plt+0x1e90>
  406be8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406bec:	ldr	x8, [x8, #496]
  406bf0:	cbz	x8, 406bf8 <wcrtomb@plt+0x1df8>
  406bf4:	blr	x8
  406bf8:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  406bfc:	mov	w2, #0x5                   	// #5
  406c00:	mov	x0, xzr
  406c04:	add	x1, x1, #0xbc5
  406c08:	bl	404bd0 <dcgettext@plt>
  406c0c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406c10:	ldr	x8, [x8, #680]
  406c14:	mov	x27, x0
  406c18:	ldr	x8, [x8, #16]
  406c1c:	mov	x0, x8
  406c20:	bl	439ac0 <argp_parse@@Base+0xae04>
  406c24:	mov	x3, x0
  406c28:	mov	w0, wzr
  406c2c:	mov	w1, wzr
  406c30:	mov	x2, x27
  406c34:	bl	4041d0 <error@plt>
  406c38:	b	406e5c <wcrtomb@plt+0x205c>
  406c3c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406c40:	ldr	x8, [x8, #496]
  406c44:	cbz	x8, 406c4c <wcrtomb@plt+0x1e4c>
  406c48:	blr	x8
  406c4c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  406c50:	mov	w2, #0x5                   	// #5
  406c54:	mov	x0, xzr
  406c58:	add	x1, x1, #0xbc5
  406c5c:	bl	404bd0 <dcgettext@plt>
  406c60:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406c64:	ldr	x8, [x8, #680]
  406c68:	mov	x27, x0
  406c6c:	ldr	x8, [x8, #16]
  406c70:	mov	x0, x8
  406c74:	bl	439ac0 <argp_parse@@Base+0xae04>
  406c78:	mov	x3, x0
  406c7c:	mov	w0, wzr
  406c80:	mov	w1, wzr
  406c84:	mov	x2, x27
  406c88:	bl	4041d0 <error@plt>
  406c8c:	b	406e64 <wcrtomb@plt+0x2064>
  406c90:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406c94:	ldr	x8, [x8, #496]
  406c98:	cbz	x8, 406ca0 <wcrtomb@plt+0x1ea0>
  406c9c:	blr	x8
  406ca0:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  406ca4:	mov	w2, #0x5                   	// #5
  406ca8:	mov	x0, xzr
  406cac:	add	x1, x1, #0xbe8
  406cb0:	bl	404bd0 <dcgettext@plt>
  406cb4:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406cb8:	ldr	x8, [x22, #680]
  406cbc:	mov	x27, x0
  406cc0:	ldr	x8, [x8, #16]
  406cc4:	mov	x0, x8
  406cc8:	bl	439ac0 <argp_parse@@Base+0xae04>
  406ccc:	mov	x3, x0
  406cd0:	mov	w0, wzr
  406cd4:	mov	w1, wzr
  406cd8:	mov	x2, x27
  406cdc:	bl	4041d0 <error@plt>
  406ce0:	ldr	x24, [x22, #680]
  406ce4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406ce8:	ldr	x9, [x8, #3488]
  406cec:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406cf0:	ldr	x8, [x8, #3504]
  406cf4:	adds	x9, x8, x9
  406cf8:	b.cs	406db4 <wcrtomb@plt+0x1fb4>  // b.hs, b.nlast
  406cfc:	ldr	x10, [x24, #24]
  406d00:	cmp	x10, x9
  406d04:	b.ne	406db4 <wcrtomb@plt+0x1fb4>  // b.any
  406d08:	ldr	x10, [x24, #32]
  406d0c:	adrp	x28, 44b000 <_obstack_memory_used@@Base+0xf808>
  406d10:	add	x28, x28, #0xb9f
  406d14:	sub	x9, x9, x10
  406d18:	cmp	x9, x8
  406d1c:	b.eq	406e6c <wcrtomb@plt+0x206c>  // b.none
  406d20:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406d24:	ldr	x8, [x8, #496]
  406d28:	cbz	x8, 406d30 <wcrtomb@plt+0x1f30>
  406d2c:	blr	x8
  406d30:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  406d34:	mov	w2, #0x5                   	// #5
  406d38:	mov	x0, xzr
  406d3c:	add	x1, x1, #0xc55
  406d40:	bl	404bd0 <dcgettext@plt>
  406d44:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406d48:	ldr	x8, [x22, #680]
  406d4c:	mov	x24, x0
  406d50:	sub	x1, x29, #0x20
  406d54:	ldr	x8, [x8, #24]
  406d58:	mov	x0, x8
  406d5c:	bl	43401c <argp_parse@@Base+0x5360>
  406d60:	ldr	x8, [x22, #680]
  406d64:	mov	x22, x0
  406d68:	add	x1, sp, #0x18
  406d6c:	ldr	x8, [x8, #32]
  406d70:	mov	x0, x8
  406d74:	bl	43401c <argp_parse@@Base+0x5360>
  406d78:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406d7c:	ldr	x8, [x8, #3504]
  406d80:	mov	x27, x0
  406d84:	mov	x1, sp
  406d88:	mov	x0, x8
  406d8c:	bl	43401c <argp_parse@@Base+0x5360>
  406d90:	mov	x5, x0
  406d94:	mov	w0, wzr
  406d98:	mov	w1, wzr
  406d9c:	mov	x2, x24
  406da0:	mov	x3, x22
  406da4:	mov	x4, x27
  406da8:	bl	4041d0 <error@plt>
  406dac:	adrp	x22, 46b000 <argp_program_version_hook@@Base+0x458>
  406db0:	b	406e64 <wcrtomb@plt+0x2064>
  406db4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406db8:	ldr	x8, [x8, #496]
  406dbc:	cbz	x8, 406dc4 <wcrtomb@plt+0x1fc4>
  406dc0:	blr	x8
  406dc4:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  406dc8:	mov	w2, #0x5                   	// #5
  406dcc:	mov	x0, xzr
  406dd0:	add	x1, x1, #0xc30
  406dd4:	bl	404bd0 <dcgettext@plt>
  406dd8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406ddc:	ldr	x8, [x8, #3464]
  406de0:	mov	x27, x0
  406de4:	mov	x0, x8
  406de8:	bl	439ac0 <argp_parse@@Base+0xae04>
  406dec:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406df0:	ldr	x8, [x8, #680]
  406df4:	mov	x28, x0
  406df8:	sub	x1, x29, #0x20
  406dfc:	ldr	x8, [x8, #24]
  406e00:	mov	x0, x8
  406e04:	bl	43401c <argp_parse@@Base+0x5360>
  406e08:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406e0c:	ldr	x8, [x8, #3488]
  406e10:	mov	x22, x0
  406e14:	add	x1, sp, #0x18
  406e18:	mov	x0, x8
  406e1c:	bl	43401c <argp_parse@@Base+0x5360>
  406e20:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406e24:	ldr	x8, [x8, #3504]
  406e28:	mov	x24, x0
  406e2c:	mov	x1, sp
  406e30:	mov	x0, x8
  406e34:	bl	43401c <argp_parse@@Base+0x5360>
  406e38:	mov	x6, x0
  406e3c:	mov	w0, wzr
  406e40:	mov	w1, wzr
  406e44:	mov	x2, x27
  406e48:	mov	x3, x28
  406e4c:	mov	x4, x22
  406e50:	mov	x5, x24
  406e54:	bl	4041d0 <error@plt>
  406e58:	adrp	x22, 46b000 <argp_program_version_hook@@Base+0x458>
  406e5c:	adrp	x28, 44b000 <_obstack_memory_used@@Base+0xf808>
  406e60:	add	x28, x28, #0xb9f
  406e64:	mov	x24, x25
  406e68:	b	40694c <wcrtomb@plt+0x1b4c>
  406e6c:	bl	407e6c <wcrtomb@plt+0x306c>
  406e70:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406e74:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406e78:	ldr	x8, [x8, #3496]
  406e7c:	ldr	x9, [x9, #3432]
  406e80:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406e84:	cmp	x8, x9
  406e88:	b.ne	406e90 <wcrtomb@plt+0x2090>  // b.any
  406e8c:	bl	4055e0 <wcrtomb@plt+0x7e0>
  406e90:	adrp	x8, 406000 <wcrtomb@plt+0x1200>
  406e94:	add	x8, x8, #0x80c
  406e98:	str	x8, [x20, #1200]
  406e9c:	ldp	x20, x19, [sp, #160]
  406ea0:	ldp	x22, x21, [sp, #144]
  406ea4:	ldp	x24, x23, [sp, #128]
  406ea8:	ldp	x26, x25, [sp, #112]
  406eac:	ldp	x28, x27, [sp, #96]
  406eb0:	ldp	x29, x30, [sp, #80]
  406eb4:	add	sp, sp, #0xb0
  406eb8:	ret
  406ebc:	bl	404850 <abort@plt>
  406ec0:	bl	405904 <wcrtomb@plt+0xb04>
  406ec4:	stp	x29, x30, [sp, #-96]!
  406ec8:	stp	x28, x27, [sp, #16]
  406ecc:	stp	x26, x25, [sp, #32]
  406ed0:	stp	x24, x23, [sp, #48]
  406ed4:	stp	x22, x21, [sp, #64]
  406ed8:	stp	x20, x19, [sp, #80]
  406edc:	mov	x29, sp
  406ee0:	sub	sp, sp, #0x1c0
  406ee4:	adrp	x8, 407000 <wcrtomb@plt+0x2200>
  406ee8:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406eec:	add	x8, x8, #0xf7c
  406ef0:	mov	x20, x0
  406ef4:	str	x8, [x24, #1168]
  406ef8:	bl	407fc8 <wcrtomb@plt+0x31c8>
  406efc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  406f00:	ldr	x8, [x8, #408]
  406f04:	mov	x19, x0
  406f08:	cmp	x0, x8
  406f0c:	b.eq	406f1c <wcrtomb@plt+0x211c>  // b.none
  406f10:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406f14:	ldrb	w9, [x9, #3660]
  406f18:	cbz	w9, 4073fc <wcrtomb@plt+0x25fc>
  406f1c:	cbz	x19, 406f30 <wcrtomb@plt+0x2130>
  406f20:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406f24:	ldr	x10, [x9, #3440]
  406f28:	add	x10, x10, #0x1
  406f2c:	str	x10, [x9, #3440]
  406f30:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406f34:	ldr	d0, [x22, #1144]
  406f38:	scvtf	d1, x19
  406f3c:	cmp	x19, x8
  406f40:	fadd	d0, d0, d1
  406f44:	str	d0, [x22, #1144]
  406f48:	b.eq	40738c <wcrtomb@plt+0x258c>  // b.none
  406f4c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406f50:	ldr	x8, [x8, #680]
  406f54:	mov	x21, x8
  406f58:	cbz	x8, 406f78 <wcrtomb@plt+0x2178>
  406f5c:	ldr	x8, [x21]
  406f60:	cbz	x8, 406f70 <wcrtomb@plt+0x2170>
  406f64:	ldr	x9, [x8, #8]
  406f68:	cmp	x19, x9, lsl #9
  406f6c:	b.cs	406f54 <wcrtomb@plt+0x2154>  // b.hs, b.nlast
  406f70:	mov	w27, wzr
  406f74:	b	406f7c <wcrtomb@plt+0x217c>
  406f78:	mov	w27, #0x1                   	// #1
  406f7c:	tst	x19, #0x1ff
  406f80:	b.ne	4073bc <wcrtomb@plt+0x25bc>  // b.any
  406f84:	tbz	x19, #63, 406fa4 <wcrtomb@plt+0x21a4>
  406f88:	bl	404ce0 <__errno_location@plt>
  406f8c:	ldr	w8, [x0]
  406f90:	sub	w9, w8, #0x5
  406f94:	cmp	w9, #0x2
  406f98:	b.cc	406fa4 <wcrtomb@plt+0x21a4>  // b.lo, b.ul, b.last
  406f9c:	cmp	w8, #0x1c
  406fa0:	b.ne	4073fc <wcrtomb@plt+0x25fc>  // b.any
  406fa4:	mov	w0, #0x1                   	// #1
  406fa8:	mov	w23, #0x1                   	// #1
  406fac:	bl	4076e0 <wcrtomb@plt+0x28e0>
  406fb0:	tbz	w0, #0, 40738c <wcrtomb@plt+0x258c>
  406fb4:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406fb8:	add	x0, x0, #0x2b0
  406fbc:	bl	420d00 <wcrtomb@plt+0x1bf00>
  406fc0:	bl	407e6c <wcrtomb@plt+0x306c>
  406fc4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406fc8:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406fcc:	ldr	d0, [x22, #1144]
  406fd0:	ldr	d1, [x8, #1136]
  406fd4:	ldr	w10, [x9, #1232]
  406fd8:	adrp	x11, 46a000 <_obstack_memory_used@@Base+0x2e808>
  406fdc:	ldr	x11, [x11, #3472]
  406fe0:	fadd	d0, d0, d1
  406fe4:	cmp	w10, #0x0
  406fe8:	str	d0, [x8, #1136]
  406fec:	cset	w8, eq  // eq = none
  406ff0:	str	xzr, [x22, #1144]
  406ff4:	str	x11, [sp, #8]
  406ff8:	str	w8, [x9, #1232]
  406ffc:	bl	4080ec <wcrtomb@plt+0x32ec>
  407000:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407004:	ldr	x8, [x8, #136]
  407008:	adrp	x28, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40700c:	strb	w23, [x28, #1228]
  407010:	cbz	x8, 407018 <wcrtomb@plt+0x2218>
  407014:	bl	408164 <wcrtomb@plt+0x3364>
  407018:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40701c:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407020:	tbz	w27, #0, 40704c <wcrtomb@plt+0x224c>
  407024:	bl	405574 <wcrtomb@plt+0x774>
  407028:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40702c:	add	x22, x22, #0x2b0
  407030:	mov	x2, x0
  407034:	mov	w0, #0x1                   	// #1
  407038:	mov	x1, x22
  40703c:	bl	40a7ac <wcrtomb@plt+0x59ac>
  407040:	mov	x0, x22
  407044:	bl	420d00 <wcrtomb@plt+0x1bf00>
  407048:	b	407274 <wcrtomb@plt+0x2474>
  40704c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407050:	ldr	w8, [x8, #304]
  407054:	cmp	w8, #0x4
  407058:	b.ne	4070b4 <wcrtomb@plt+0x22b4>  // b.any
  40705c:	mov	x22, x21
  407060:	ldr	x8, [x22, #32]!
  407064:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407068:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0xf808>
  40706c:	add	x23, x23, #0x2b0
  407070:	ldp	x2, x9, [x22, #-16]
  407074:	add	x0, x0, #0xe91
  407078:	mov	x1, x23
  40707c:	sub	x8, x9, x8
  407080:	str	x8, [sp, #16]
  407084:	bl	411550 <wcrtomb@plt+0xc750>
  407088:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0xf808>
  40708c:	add	x0, x0, #0xea5
  407090:	mov	x1, x23
  407094:	mov	x2, x22
  407098:	bl	411550 <wcrtomb@plt+0xc750>
  40709c:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0xf808>
  4070a0:	add	x0, x0, #0xeb5
  4070a4:	add	x2, sp, #0x10
  4070a8:	mov	x1, x23
  4070ac:	bl	411550 <wcrtomb@plt+0xc750>
  4070b0:	b	4071bc <wcrtomb@plt+0x23bc>
  4070b4:	bl	405574 <wcrtomb@plt+0x774>
  4070b8:	ldr	x8, [x21, #16]
  4070bc:	mov	x22, x0
  4070c0:	mov	x0, x8
  4070c4:	bl	404170 <strlen@plt>
  4070c8:	mov	x23, x0
  4070cc:	cmp	x0, #0x65
  4070d0:	b.cc	407120 <wcrtomb@plt+0x2320>  // b.lo, b.ul, b.last
  4070d4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4070d8:	ldr	x8, [x8, #496]
  4070dc:	cbz	x8, 4070e4 <wcrtomb@plt+0x22e4>
  4070e0:	blr	x8
  4070e4:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  4070e8:	add	x1, x1, #0xec7
  4070ec:	mov	w2, #0x5                   	// #5
  4070f0:	mov	x0, xzr
  4070f4:	bl	404bd0 <dcgettext@plt>
  4070f8:	ldr	x8, [x21, #16]
  4070fc:	mov	x23, x0
  407100:	mov	x0, x8
  407104:	bl	4398cc <argp_parse@@Base+0xac10>
  407108:	mov	x3, x0
  40710c:	mov	w0, wzr
  407110:	mov	w1, wzr
  407114:	mov	x2, x23
  407118:	bl	4041d0 <error@plt>
  40711c:	mov	w23, #0x64                  	// #100
  407120:	mov	w2, #0x200                 	// #512
  407124:	mov	x0, x22
  407128:	mov	w1, wzr
  40712c:	bl	4045e0 <memset@plt>
  407130:	ldr	x1, [x21, #16]
  407134:	mov	x0, x22
  407138:	mov	x2, x23
  40713c:	bl	4040f0 <memcpy@plt>
  407140:	mov	w8, #0x4d                  	// #77
  407144:	strb	w8, [x22, #156]
  407148:	ldr	x0, [x21, #32]
  40714c:	add	x1, x22, #0x7c
  407150:	mov	w2, #0xc                   	// #12
  407154:	bl	40a1d0 <wcrtomb@plt+0x53d0>
  407158:	ldp	x8, x9, [x21, #24]
  40715c:	add	x1, x22, #0x171
  407160:	mov	w2, #0xc                   	// #12
  407164:	sub	x0, x8, x9
  407168:	bl	40a1d0 <wcrtomb@plt+0x53d0>
  40716c:	adrp	x23, 46b000 <argp_program_version_hook@@Base+0x458>
  407170:	ldr	w28, [x23, #132]
  407174:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407178:	add	x0, x0, #0xe60
  40717c:	mov	x2, #0xffffffffffffffff    	// #-1
  407180:	mov	x1, x22
  407184:	str	wzr, [x23, #132]
  407188:	bl	40b220 <wcrtomb@plt+0x6420>
  40718c:	ldr	x8, [x26, #3496]
  407190:	str	w28, [x23, #132]
  407194:	cmp	x8, x22
  407198:	b.hi	4071ac <wcrtomb@plt+0x23ac>  // b.pmore
  40719c:	add	x8, x8, #0x200
  4071a0:	cmp	x8, x22
  4071a4:	b.ls	40719c <wcrtomb@plt+0x239c>  // b.plast
  4071a8:	str	x8, [x26, #3496]
  4071ac:	ldr	x9, [x25, #3432]
  4071b0:	adrp	x28, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4071b4:	cmp	x8, x9
  4071b8:	b.hi	4073b8 <wcrtomb@plt+0x25b8>  // b.pmore
  4071bc:	bl	405574 <wcrtomb@plt+0x774>
  4071c0:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4071c4:	add	x22, x22, #0x2b0
  4071c8:	mov	x2, x0
  4071cc:	mov	w0, #0x1                   	// #1
  4071d0:	mov	x1, x22
  4071d4:	bl	40a7ac <wcrtomb@plt+0x59ac>
  4071d8:	mov	x0, x22
  4071dc:	bl	420d00 <wcrtomb@plt+0x1bf00>
  4071e0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4071e4:	ldr	w8, [x8, #304]
  4071e8:	cmp	w8, #0x4
  4071ec:	b.ne	407274 <wcrtomb@plt+0x2474>  // b.any
  4071f0:	add	x8, sp, #0x10
  4071f4:	add	x0, x8, #0x10
  4071f8:	mov	w2, #0x198                 	// #408
  4071fc:	mov	w1, wzr
  407200:	bl	4045e0 <memset@plt>
  407204:	ldr	x8, [x21, #16]
  407208:	mov	w9, #0x81a4                	// #33188
  40720c:	str	w9, [sp, #120]
  407210:	stp	x8, x8, [sp, #16]
  407214:	bl	4042c0 <getuid@plt>
  407218:	str	w0, [sp, #128]
  40721c:	bl	4049f0 <getgid@plt>
  407220:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  407224:	ldrsw	x2, [x8, #1708]
  407228:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  40722c:	str	w0, [sp, #132]
  407230:	add	x1, x1, #0xf12
  407234:	add	x0, sp, #0x10
  407238:	bl	410764 <wcrtomb@plt+0xb964>
  40723c:	stp	x0, x0, [sp, #16]
  407240:	ldr	x8, [x21, #32]
  407244:	add	x0, sp, #0x10
  407248:	str	x8, [sp, #152]
  40724c:	str	x8, [sp, #280]
  407250:	bl	40a890 <wcrtomb@plt+0x5a90>
  407254:	cbz	x0, 4073b8 <wcrtomb@plt+0x25b8>
  407258:	mov	x2, x0
  40725c:	add	x1, sp, #0x10
  407260:	mov	w0, wzr
  407264:	bl	40a7ac <wcrtomb@plt+0x59ac>
  407268:	bl	40b1bc <wcrtomb@plt+0x63bc>
  40726c:	ldr	x0, [sp, #16]
  407270:	bl	4049b0 <free@plt>
  407274:	ldr	x8, [sp, #8]
  407278:	add	x22, x8, x19
  40727c:	sub	x19, x20, x19
  407280:	bl	405574 <wcrtomb@plt+0x774>
  407284:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407288:	ldr	x23, [x8, #3472]
  40728c:	mov	x20, x0
  407290:	mov	x0, x21
  407294:	bl	404fe4 <wcrtomb@plt+0x1e4>
  407298:	tbnz	w27, #0, 4072bc <wcrtomb@plt+0x24bc>
  40729c:	sub	x8, x20, x23
  4072a0:	asr	x8, x8, #9
  4072a4:	ldr	x9, [x21, #8]
  4072a8:	str	xzr, [x21, #40]
  4072ac:	add	x9, x9, x8
  4072b0:	str	x9, [x21, #8]
  4072b4:	ldr	x21, [x21]
  4072b8:	cbnz	x21, 4072a4 <wcrtomb@plt+0x24a4>
  4072bc:	ldr	x8, [x25, #3432]
  4072c0:	strb	wzr, [x28, #1228]
  4072c4:	sub	x21, x8, x20
  4072c8:	cmp	x21, x19
  4072cc:	b.cs	407334 <wcrtomb@plt+0x2534>  // b.hs, b.nlast
  4072d0:	mov	x0, x20
  4072d4:	mov	x1, x22
  4072d8:	mov	x2, x21
  4072dc:	bl	4040f0 <memcpy@plt>
  4072e0:	ldr	x8, [x26, #3496]
  4072e4:	sub	x9, x21, #0x1
  4072e8:	and	x9, x9, #0xfffffffffffffe00
  4072ec:	add	x9, x20, x9
  4072f0:	cmp	x8, x9
  4072f4:	b.hi	407308 <wcrtomb@plt+0x2508>  // b.pmore
  4072f8:	add	x8, x8, #0x200
  4072fc:	cmp	x8, x9
  407300:	b.ls	4072f8 <wcrtomb@plt+0x24f8>  // b.plast
  407304:	str	x8, [x26, #3496]
  407308:	ldr	x9, [x25, #3432]
  40730c:	cmp	x8, x9
  407310:	b.hi	4073b8 <wcrtomb@plt+0x25b8>  // b.pmore
  407314:	add	x22, x22, x21
  407318:	sub	x19, x19, x21
  40731c:	bl	405574 <wcrtomb@plt+0x774>
  407320:	ldr	x8, [x25, #3432]
  407324:	mov	x20, x0
  407328:	sub	x21, x8, x0
  40732c:	cmp	x21, x19
  407330:	b.cc	4072d0 <wcrtomb@plt+0x24d0>  // b.lo, b.ul, b.last
  407334:	mov	x0, x20
  407338:	mov	x1, x22
  40733c:	mov	x2, x19
  407340:	bl	4040f0 <memcpy@plt>
  407344:	add	x0, x20, x19
  407348:	sub	x2, x21, x19
  40734c:	mov	w1, wzr
  407350:	bl	4045e0 <memset@plt>
  407354:	ldr	x8, [x26, #3496]
  407358:	sub	x9, x19, #0x1
  40735c:	and	x9, x9, #0xfffffffffffffe00
  407360:	add	x9, x20, x9
  407364:	cmp	x8, x9
  407368:	b.hi	40737c <wcrtomb@plt+0x257c>  // b.pmore
  40736c:	add	x8, x8, #0x200
  407370:	cmp	x8, x9
  407374:	b.ls	40736c <wcrtomb@plt+0x256c>  // b.plast
  407378:	str	x8, [x26, #3496]
  40737c:	ldr	x9, [x25, #3432]
  407380:	cmp	x8, x9
  407384:	b.hi	4073b8 <wcrtomb@plt+0x25b8>  // b.pmore
  407388:	bl	405574 <wcrtomb@plt+0x774>
  40738c:	adrp	x8, 406000 <wcrtomb@plt+0x1200>
  407390:	add	x8, x8, #0xec4
  407394:	str	x8, [x24, #1168]
  407398:	add	sp, sp, #0x1c0
  40739c:	ldp	x20, x19, [sp, #80]
  4073a0:	ldp	x22, x21, [sp, #64]
  4073a4:	ldp	x24, x23, [sp, #48]
  4073a8:	ldp	x26, x25, [sp, #32]
  4073ac:	ldp	x28, x27, [sp, #16]
  4073b0:	ldp	x29, x30, [sp], #96
  4073b4:	ret
  4073b8:	bl	404850 <abort@plt>
  4073bc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4073c0:	ldr	x8, [x8, #496]
  4073c4:	cbz	x8, 4073cc <wcrtomb@plt+0x25cc>
  4073c8:	blr	x8
  4073cc:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  4073d0:	add	x1, x1, #0xe4a
  4073d4:	mov	w2, #0x5                   	// #5
  4073d8:	mov	x0, xzr
  4073dc:	bl	404bd0 <dcgettext@plt>
  4073e0:	mov	x2, x0
  4073e4:	mov	w0, wzr
  4073e8:	mov	w1, wzr
  4073ec:	bl	4041d0 <error@plt>
  4073f0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4073f4:	mov	w9, #0x2                   	// #2
  4073f8:	str	w9, [x8, #2944]
  4073fc:	mov	x0, x19
  407400:	bl	405904 <wcrtomb@plt+0xb04>
  407404:	stp	x29, x30, [sp, #-32]!
  407408:	mov	w0, wzr
  40740c:	stp	x20, x19, [sp, #16]
  407410:	mov	x29, sp
  407414:	bl	408980 <wcrtomb@plt+0x3b80>
  407418:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40741c:	ldrb	w8, [x8, #3480]
  407420:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407424:	adrp	x19, 46b000 <argp_program_version_hook@@Base+0x458>
  407428:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  40742c:	str	wzr, [x9, #1112]
  407430:	cbz	w8, 40746c <wcrtomb@plt+0x266c>
  407434:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407438:	ldr	x8, [x8, #1152]
  40743c:	cbz	x8, 40746c <wcrtomb@plt+0x266c>
  407440:	mov	w8, #0x1                   	// #1
  407444:	str	w8, [x19, #464]
  407448:	bl	41e584 <wcrtomb@plt+0x19784>
  40744c:	ldr	x8, [x20, #408]
  407450:	str	wzr, [x19, #464]
  407454:	cmp	x0, x8
  407458:	b.eq	40746c <wcrtomb@plt+0x266c>  // b.none
  40745c:	bl	405904 <wcrtomb@plt+0xb04>
  407460:	cmn	x0, #0x1
  407464:	b.ne	4074cc <wcrtomb@plt+0x26cc>  // b.any
  407468:	bl	4059cc <wcrtomb@plt+0xbcc>
  40746c:	ldr	w0, [x19, #464]
  407470:	mov	w8, #0x40000000            	// #1073741824
  407474:	cmp	w0, w8
  407478:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40747c:	b.lt	407498 <wcrtomb@plt+0x2698>  // b.tstop
  407480:	ldr	x1, [x8, #3472]
  407484:	ldr	x2, [x20, #408]
  407488:	mov	w8, #0xc0000000            	// #-1073741824
  40748c:	add	w0, w0, w8
  407490:	bl	4271dc <wcrtomb@plt+0x223dc>
  407494:	b	4074a4 <wcrtomb@plt+0x26a4>
  407498:	ldr	x1, [x8, #3472]
  40749c:	ldr	x2, [x20, #408]
  4074a0:	bl	439dd4 <argp_parse@@Base+0xb118>
  4074a4:	ldr	x8, [x20, #408]
  4074a8:	cmp	x0, x8
  4074ac:	b.ne	407460 <wcrtomb@plt+0x2660>  // b.any
  4074b0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4074b4:	ldr	x9, [x8, #3424]
  4074b8:	add	x9, x9, #0x1
  4074bc:	str	x9, [x8, #3424]
  4074c0:	ldp	x20, x19, [sp, #16]
  4074c4:	ldp	x29, x30, [sp], #32
  4074c8:	ret
  4074cc:	ldp	x20, x19, [sp, #16]
  4074d0:	ldp	x29, x30, [sp], #32
  4074d4:	b	4074d8 <wcrtomb@plt+0x26d8>
  4074d8:	sub	sp, sp, #0xe0
  4074dc:	stp	x24, x23, [sp, #176]
  4074e0:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4074e4:	adrp	x24, 46b000 <argp_program_version_hook@@Base+0x458>
  4074e8:	ldr	x8, [x23, #3472]
  4074ec:	ldr	x9, [x24, #408]
  4074f0:	stp	x26, x25, [sp, #160]
  4074f4:	stp	x22, x21, [sp, #192]
  4074f8:	stp	x20, x19, [sp, #208]
  4074fc:	mov	x21, x0
  407500:	add	x20, x8, x0
  407504:	subs	x19, x9, x0
  407508:	adrp	x25, 46b000 <argp_program_version_hook@@Base+0x458>
  40750c:	stp	x29, x30, [sp, #128]
  407510:	str	x27, [sp, #144]
  407514:	add	x29, sp, #0x80
  407518:	b.eq	4075c0 <wcrtomb@plt+0x27c0>  // b.none
  40751c:	and	x8, x19, #0x1ff
  407520:	cbnz	x8, 4075c0 <wcrtomb@plt+0x27c0>
  407524:	cbz	x21, 4075c0 <wcrtomb@plt+0x27c0>
  407528:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40752c:	ldr	w8, [x8, #152]
  407530:	tbz	w8, #22, 4075c0 <wcrtomb@plt+0x27c0>
  407534:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407538:	ldr	x8, [x8, #1152]
  40753c:	cbnz	x8, 4075c0 <wcrtomb@plt+0x27c0>
  407540:	ldr	w0, [x25, #464]
  407544:	mov	x1, sp
  407548:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  40754c:	cbz	w0, 407564 <wcrtomb@plt+0x2764>
  407550:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407554:	ldr	x8, [x8, #224]
  407558:	ldr	x0, [x8]
  40755c:	bl	419d24 <wcrtomb@plt+0x14f24>
  407560:	b	4075c0 <wcrtomb@plt+0x27c0>
  407564:	ldr	w8, [sp, #16]
  407568:	and	w8, w8, #0xf000
  40756c:	orr	w8, w8, #0x4000
  407570:	cmp	w8, #0x6, lsl #12
  407574:	b.ne	4075c0 <wcrtomb@plt+0x27c0>  // b.any
  407578:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40757c:	ldr	x8, [x8, #496]
  407580:	lsr	x22, x21, #9
  407584:	cbz	x8, 40758c <wcrtomb@plt+0x278c>
  407588:	blr	x8
  40758c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  407590:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0xf808>
  407594:	add	x1, x1, #0xb21
  407598:	add	x2, x2, #0xb39
  40759c:	mov	w4, #0x5                   	// #5
  4075a0:	mov	x0, xzr
  4075a4:	mov	x3, x22
  4075a8:	bl	404ad0 <dcngettext@plt>
  4075ac:	mov	x2, x0
  4075b0:	mov	w0, wzr
  4075b4:	mov	w1, wzr
  4075b8:	mov	x3, x22
  4075bc:	bl	4041d0 <error@plt>
  4075c0:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4075c4:	mov	w26, #0x40000000            	// #1073741824
  4075c8:	mov	w27, #0xc0000000            	// #-1073741824
  4075cc:	tst	x19, #0x1ff
  4075d0:	b.eq	4075dc <wcrtomb@plt+0x27dc>  // b.none
  4075d4:	cbnz	x21, 4075f4 <wcrtomb@plt+0x27f4>
  4075d8:	b	407644 <wcrtomb@plt+0x2844>
  4075dc:	cbz	x19, 407644 <wcrtomb@plt+0x2844>
  4075e0:	cbz	x21, 407644 <wcrtomb@plt+0x2844>
  4075e4:	ldrb	w8, [x22, #1208]
  4075e8:	cbnz	w8, 4075f4 <wcrtomb@plt+0x27f4>
  4075ec:	b	407644 <wcrtomb@plt+0x2844>
  4075f0:	bl	4059cc <wcrtomb@plt+0xbcc>
  4075f4:	ldr	w0, [x25, #464]
  4075f8:	cmp	w0, w26
  4075fc:	b.lt	407614 <wcrtomb@plt+0x2814>  // b.tstop
  407600:	add	w0, w0, w27
  407604:	mov	x1, x20
  407608:	mov	x2, x19
  40760c:	bl	4271dc <wcrtomb@plt+0x223dc>
  407610:	b	407620 <wcrtomb@plt+0x2820>
  407614:	mov	x1, x20
  407618:	mov	x2, x19
  40761c:	bl	439dd4 <argp_parse@@Base+0xb118>
  407620:	mov	x21, x0
  407624:	cmn	x0, #0x1
  407628:	b.eq	4075f0 <wcrtomb@plt+0x27f0>  // b.none
  40762c:	cbz	x21, 407644 <wcrtomb@plt+0x2844>
  407630:	ldrb	w8, [x22, #1208]
  407634:	cbz	w8, 407690 <wcrtomb@plt+0x2890>
  407638:	sub	x19, x19, x21
  40763c:	add	x20, x20, x21
  407640:	b	4075cc <wcrtomb@plt+0x27cc>
  407644:	ldr	x9, [x24, #408]
  407648:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40764c:	ldr	x8, [x23, #3472]
  407650:	ldr	x11, [x10, #3424]
  407654:	sub	x9, x9, x19
  407658:	ldp	x20, x19, [sp, #208]
  40765c:	ldp	x22, x21, [sp, #192]
  407660:	ldp	x24, x23, [sp, #176]
  407664:	ldp	x26, x25, [sp, #160]
  407668:	ldr	x27, [sp, #144]
  40766c:	ldp	x29, x30, [sp, #128]
  407670:	and	x9, x9, #0xfffffffffffffe00
  407674:	adrp	x12, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407678:	add	x11, x11, #0x1
  40767c:	add	x8, x8, x9
  407680:	str	x8, [x12, #3432]
  407684:	str	x11, [x10, #3424]
  407688:	add	sp, sp, #0xe0
  40768c:	ret
  407690:	ldr	x9, [x24, #408]
  407694:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407698:	ldr	x8, [x8, #496]
  40769c:	sub	x19, x9, x19
  4076a0:	cbz	x8, 4076a8 <wcrtomb@plt+0x28a8>
  4076a4:	blr	x8
  4076a8:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  4076ac:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0xf808>
  4076b0:	add	x1, x1, #0xb52
  4076b4:	add	x2, x2, #0xb78
  4076b8:	mov	w4, #0x5                   	// #5
  4076bc:	mov	x0, xzr
  4076c0:	mov	x3, x19
  4076c4:	bl	404ad0 <dcngettext@plt>
  4076c8:	mov	x2, x0
  4076cc:	mov	w0, wzr
  4076d0:	mov	w1, wzr
  4076d4:	mov	x3, x19
  4076d8:	bl	4041d0 <error@plt>
  4076dc:	bl	40d698 <wcrtomb@plt+0x8898>
  4076e0:	sub	sp, sp, #0x80
  4076e4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4076e8:	ldr	x8, [x8, #1216]
  4076ec:	stp	x26, x25, [sp, #64]
  4076f0:	stp	x24, x23, [sp, #80]
  4076f4:	stp	x20, x19, [sp, #112]
  4076f8:	mov	w19, w0
  4076fc:	adrp	x23, 46b000 <argp_program_version_hook@@Base+0x458>
  407700:	adrp	x25, 46b000 <argp_program_version_hook@@Base+0x458>
  407704:	stp	x29, x30, [sp, #32]
  407708:	stp	x28, x27, [sp, #48]
  40770c:	stp	x22, x21, [sp, #96]
  407710:	add	x29, sp, #0x20
  407714:	cbnz	x8, 407750 <wcrtomb@plt+0x2950>
  407718:	ldr	x8, [x23, #256]
  40771c:	cbnz	x8, 407750 <wcrtomb@plt+0x2950>
  407720:	ldr	w8, [x25, #464]
  407724:	cbz	w8, 407734 <wcrtomb@plt+0x2934>
  407728:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40772c:	ldr	x0, [x8, #640]
  407730:	b	407748 <wcrtomb@plt+0x2948>
  407734:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0xf808>
  407738:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  40773c:	add	x0, x0, #0xc84
  407740:	add	x1, x1, #0x84b
  407744:	bl	4044a0 <fopen@plt>
  407748:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40774c:	str	x0, [x8, #1216]
  407750:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407754:	ldrb	w8, [x8, #3512]
  407758:	cbz	w8, 407764 <wcrtomb@plt+0x2964>
  40775c:	mov	w0, wzr
  407760:	b	407ccc <wcrtomb@plt+0x2ecc>
  407764:	adrp	x26, 46b000 <argp_program_version_hook@@Base+0x458>
  407768:	ldrb	w8, [x26, #330]
  40776c:	cbz	w8, 407774 <wcrtomb@plt+0x2974>
  407770:	bl	409950 <wcrtomb@plt+0x4b50>
  407774:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407778:	add	x0, x0, #0xd80
  40777c:	mov	x1, xzr
  407780:	bl	4186dc <wcrtomb@plt+0x138dc>
  407784:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407788:	add	x0, x0, #0xd88
  40778c:	mov	x1, xzr
  407790:	bl	4186dc <wcrtomb@plt+0x138dc>
  407794:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407798:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40779c:	ldr	w0, [x25, #464]
  4077a0:	str	xzr, [x8, #3504]
  4077a4:	ldr	x8, [x10, #3472]
  4077a8:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4077ac:	mov	w10, #0x40000000            	// #1073741824
  4077b0:	str	xzr, [x9, #3488]
  4077b4:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4077b8:	cmp	w0, w10
  4077bc:	str	x8, [x9, #3496]
  4077c0:	b.lt	4077d4 <wcrtomb@plt+0x29d4>  // b.tstop
  4077c4:	mov	w8, #0xc0000000            	// #-1073741824
  4077c8:	add	w0, w0, w8
  4077cc:	bl	427184 <wcrtomb@plt+0x22384>
  4077d0:	b	4077d8 <wcrtomb@plt+0x29d8>
  4077d4:	bl	4047a0 <close@plt>
  4077d8:	adrp	x24, 46b000 <argp_program_version_hook@@Base+0x458>
  4077dc:	cbz	w0, 4077ec <wcrtomb@plt+0x29ec>
  4077e0:	ldr	x8, [x24, #224]
  4077e4:	ldr	x0, [x8]
  4077e8:	bl	426108 <wcrtomb@plt+0x21308>
  4077ec:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4077f0:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  4077f4:	ldr	x9, [x24, #224]
  4077f8:	ldr	x8, [x8, #176]
  4077fc:	ldr	x10, [x10, #336]
  407800:	str	w19, [sp, #12]
  407804:	add	x9, x9, #0x8
  407808:	str	x9, [x24, #224]
  40780c:	add	x10, x8, x10, lsl #3
  407810:	cmp	x9, x10
  407814:	b.eq	407828 <wcrtomb@plt+0x2a28>  // b.none
  407818:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40781c:	ldrb	w8, [x8, #1224]
  407820:	tbnz	w8, #0, 407838 <wcrtomb@plt+0x2a38>
  407824:	b	407b04 <wcrtomb@plt+0x2d04>
  407828:	str	x8, [x24, #224]
  40782c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407830:	mov	w9, #0x1                   	// #1
  407834:	strb	w9, [x8, #1224]
  407838:	ldr	x8, [x23, #256]
  40783c:	adrp	x27, 467000 <_obstack_memory_used@@Base+0x2b808>
  407840:	cbz	x8, 4078b4 <wcrtomb@plt+0x2ab4>
  407844:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407848:	ldr	x8, [x8, #152]
  40784c:	cbz	x8, 407854 <wcrtomb@plt+0x2a54>
  407850:	bl	405d98 <wcrtomb@plt+0xf98>
  407854:	ldr	w8, [x27, #1704]
  407858:	ldr	x0, [x24, #224]
  40785c:	add	w1, w8, #0x1
  407860:	bl	41f3c4 <wcrtomb@plt+0x1a5c4>
  407864:	cbz	w0, 407b04 <wcrtomb@plt+0x2d04>
  407868:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40786c:	ldr	x8, [x8, #496]
  407870:	cbz	x8, 407878 <wcrtomb@plt+0x2a78>
  407874:	blr	x8
  407878:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  40787c:	add	x1, x1, #0xc8d
  407880:	mov	w2, #0x5                   	// #5
  407884:	mov	x0, xzr
  407888:	bl	404bd0 <dcgettext@plt>
  40788c:	ldr	x8, [x23, #256]
  407890:	mov	x19, x0
  407894:	mov	x0, x8
  407898:	bl	439ac0 <argp_parse@@Base+0xae04>
  40789c:	mov	x3, x0
  4078a0:	mov	w0, wzr
  4078a4:	mov	w1, wzr
  4078a8:	mov	x2, x19
  4078ac:	bl	4041d0 <error@plt>
  4078b0:	bl	40d698 <wcrtomb@plt+0x8898>
  4078b4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4078b8:	ldr	x20, [x8, #1216]
  4078bc:	adrp	x22, 44b000 <_obstack_memory_used@@Base+0xf808>
  4078c0:	mov	x21, x25
  4078c4:	mov	x26, x23
  4078c8:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4078cc:	add	x22, x22, #0xc9f
  4078d0:	stur	xzr, [x29, #-8]
  4078d4:	str	xzr, [sp, #16]
  4078d8:	ldr	x1, [x25, #624]
  4078dc:	mov	w0, #0x7                   	// #7
  4078e0:	bl	404b70 <fputc_unlocked@plt>
  4078e4:	ldr	x28, [x25, #624]
  4078e8:	mov	w2, #0x5                   	// #5
  4078ec:	mov	x0, xzr
  4078f0:	mov	x1, x22
  4078f4:	mov	x19, x22
  4078f8:	bl	404bd0 <dcgettext@plt>
  4078fc:	ldr	x8, [x24, #224]
  407900:	mov	x23, x0
  407904:	ldr	w9, [x27, #1704]
  407908:	ldr	x0, [x8]
  40790c:	add	w22, w9, #0x1
  407910:	bl	439ac0 <argp_parse@@Base+0xae04>
  407914:	mov	x4, x0
  407918:	mov	w1, #0x1                   	// #1
  40791c:	mov	x0, x28
  407920:	mov	x2, x23
  407924:	mov	w3, w22
  407928:	bl	4048f0 <__fprintf_chk@plt>
  40792c:	ldr	x0, [x25, #624]
  407930:	bl	404ab0 <fflush_unlocked@plt>
  407934:	sub	x0, x29, #0x8
  407938:	add	x1, sp, #0x10
  40793c:	mov	x2, x20
  407940:	bl	404980 <getline@plt>
  407944:	cmp	x0, #0x0
  407948:	b.le	407d08 <wcrtomb@plt+0x2f08>
  40794c:	ldur	x8, [x29, #-8]
  407950:	ldrb	w9, [x8]
  407954:	cmp	w9, #0x58
  407958:	b.le	4079f4 <wcrtomb@plt+0x2bf4>
  40795c:	cmp	w9, #0x70
  407960:	b.gt	407a80 <wcrtomb@plt+0x2c80>
  407964:	cmp	w9, #0x59
  407968:	b.eq	407aec <wcrtomb@plt+0x2cec>  // b.none
  40796c:	cmp	w9, #0x6e
  407970:	b.ne	407aa0 <wcrtomb@plt+0x2ca0>  // b.any
  407974:	add	x0, x8, #0x1
  407978:	add	x8, x8, #0x2
  40797c:	ldrb	w9, [x0]
  407980:	cmp	w9, #0x20
  407984:	b.eq	407990 <wcrtomb@plt+0x2b90>  // b.none
  407988:	cmp	w9, #0x9
  40798c:	b.ne	4079a0 <wcrtomb@plt+0x2ba0>  // b.any
  407990:	add	x0, x0, #0x1
  407994:	add	x8, x8, #0x1
  407998:	b	40797c <wcrtomb@plt+0x2b7c>
  40799c:	ldrb	w9, [x8], #1
  4079a0:	ands	w9, w9, #0xff
  4079a4:	b.eq	4079b0 <wcrtomb@plt+0x2bb0>  // b.none
  4079a8:	cmp	w9, #0xa
  4079ac:	b.ne	40799c <wcrtomb@plt+0x2b9c>  // b.any
  4079b0:	sturb	wzr, [x8, #-1]
  4079b4:	ldrb	w8, [x0]
  4079b8:	cbnz	w8, 407adc <wcrtomb@plt+0x2cdc>
  4079bc:	ldr	x22, [x25, #624]
  4079c0:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  4079c4:	mov	w2, #0x5                   	// #5
  4079c8:	mov	x0, xzr
  4079cc:	add	x1, x1, #0xded
  4079d0:	bl	404bd0 <dcgettext@plt>
  4079d4:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  4079d8:	mov	x3, x0
  4079dc:	mov	w1, #0x1                   	// #1
  4079e0:	mov	x0, x22
  4079e4:	add	x2, x2, #0xb24
  4079e8:	bl	4048f0 <__fprintf_chk@plt>
  4079ec:	mov	x22, x19
  4079f0:	b	4078d8 <wcrtomb@plt+0x2ad8>
  4079f4:	cmp	w9, #0xa
  4079f8:	b.eq	407aec <wcrtomb@plt+0x2cec>  // b.none
  4079fc:	cmp	w9, #0x21
  407a00:	b.eq	407a94 <wcrtomb@plt+0x2c94>  // b.none
  407a04:	cmp	w9, #0x3f
  407a08:	b.ne	407aa0 <wcrtomb@plt+0x2ca0>  // b.any
  407a0c:	ldr	x22, [x25, #624]
  407a10:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  407a14:	mov	w2, #0x5                   	// #5
  407a18:	mov	x0, xzr
  407a1c:	add	x1, x1, #0xd0b
  407a20:	bl	404bd0 <dcgettext@plt>
  407a24:	mov	x2, x0
  407a28:	mov	w1, #0x1                   	// #1
  407a2c:	mov	x0, x22
  407a30:	bl	4048f0 <__fprintf_chk@plt>
  407a34:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407a38:	ldrb	w8, [x8, #264]
  407a3c:	cbnz	w8, 407a68 <wcrtomb@plt+0x2c68>
  407a40:	ldr	x22, [x25, #624]
  407a44:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  407a48:	mov	w2, #0x5                   	// #5
  407a4c:	mov	x0, xzr
  407a50:	add	x1, x1, #0xd93
  407a54:	bl	404bd0 <dcgettext@plt>
  407a58:	mov	x2, x0
  407a5c:	mov	w1, #0x1                   	// #1
  407a60:	mov	x0, x22
  407a64:	bl	4048f0 <__fprintf_chk@plt>
  407a68:	ldr	x22, [x25, #624]
  407a6c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  407a70:	mov	w2, #0x5                   	// #5
  407a74:	mov	x0, xzr
  407a78:	add	x1, x1, #0xdb4
  407a7c:	b	407ab4 <wcrtomb@plt+0x2cb4>
  407a80:	cmp	w9, #0x79
  407a84:	b.eq	407aec <wcrtomb@plt+0x2cec>  // b.none
  407a88:	cmp	w9, #0x71
  407a8c:	b.ne	407aa0 <wcrtomb@plt+0x2ca0>  // b.any
  407a90:	b	407d24 <wcrtomb@plt+0x2f24>
  407a94:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407a98:	ldrb	w8, [x8, #264]
  407a9c:	cbz	w8, 407ad0 <wcrtomb@plt+0x2cd0>
  407aa0:	ldr	x22, [x25, #624]
  407aa4:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  407aa8:	mov	w2, #0x5                   	// #5
  407aac:	mov	x0, xzr
  407ab0:	add	x1, x1, #0xe12
  407ab4:	bl	404bd0 <dcgettext@plt>
  407ab8:	mov	x2, x0
  407abc:	mov	w1, #0x1                   	// #1
  407ac0:	mov	x0, x22
  407ac4:	bl	4048f0 <__fprintf_chk@plt>
  407ac8:	mov	x22, x19
  407acc:	b	4078d8 <wcrtomb@plt+0x2ad8>
  407ad0:	bl	41e450 <wcrtomb@plt+0x19650>
  407ad4:	mov	x22, x19
  407ad8:	b	4078d8 <wcrtomb@plt+0x2ad8>
  407adc:	bl	43a998 <argp_parse@@Base+0xbcdc>
  407ae0:	ldr	x8, [x24, #224]
  407ae4:	str	x0, [x8]
  407ae8:	ldur	x8, [x29, #-8]
  407aec:	mov	x0, x8
  407af0:	bl	4049b0 <free@plt>
  407af4:	ldr	w19, [sp, #12]
  407af8:	mov	x23, x26
  407afc:	mov	x25, x21
  407b00:	adrp	x26, 46b000 <argp_program_version_hook@@Base+0x458>
  407b04:	ldr	x22, [x24, #224]
  407b08:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  407b0c:	add	x1, x1, #0x25d
  407b10:	ldr	x20, [x22]
  407b14:	mov	x0, x20
  407b18:	bl	404900 <strcmp@plt>
  407b1c:	cbz	w0, 407cbc <wcrtomb@plt+0x2ebc>
  407b20:	ldrb	w8, [x26, #330]
  407b24:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  407b28:	cbz	w8, 407bb0 <wcrtomb@plt+0x2db0>
  407b2c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407b30:	ldrb	w8, [x8, #504]
  407b34:	cbnz	w8, 407b68 <wcrtomb@plt+0x2d68>
  407b38:	mov	w1, #0x3a                  	// #58
  407b3c:	mov	x0, x20
  407b40:	bl	404a50 <strchr@plt>
  407b44:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407b48:	str	x0, [x8, #512]
  407b4c:	ldr	x20, [x22]
  407b50:	subs	x2, x0, x20
  407b54:	b.ls	407b68 <wcrtomb@plt+0x2d68>  // b.plast
  407b58:	mov	w1, #0x2f                  	// #47
  407b5c:	mov	x0, x20
  407b60:	bl	404b50 <memchr@plt>
  407b64:	cbz	x0, 407c5c <wcrtomb@plt+0x2e5c>
  407b68:	mov	w1, #0x42                  	// #66
  407b6c:	mov	w2, #0x1b6                 	// #438
  407b70:	mov	x0, x20
  407b74:	bl	404510 <open@plt>
  407b78:	str	w0, [x25, #464]
  407b7c:	tbz	w0, #31, 407c20 <wcrtomb@plt+0x2e20>
  407b80:	ldr	x8, [x24, #224]
  407b84:	ldr	x0, [x8]
  407b88:	bl	426244 <wcrtomb@plt+0x21444>
  407b8c:	cmp	w19, #0x1
  407b90:	b.ne	407838 <wcrtomb@plt+0x2a38>  // b.any
  407b94:	ldrb	w8, [x26, #330]
  407b98:	ldrb	w9, [x21, #245]
  407b9c:	cmp	w8, #0x0
  407ba0:	ccmp	w9, #0x0, #0x4, eq  // eq = none
  407ba4:	b.eq	407838 <wcrtomb@plt+0x2a38>  // b.none
  407ba8:	bl	4195a8 <wcrtomb@plt+0x147a8>
  407bac:	b	407838 <wcrtomb@plt+0x2a38>
  407bb0:	cmp	w19, #0x2
  407bb4:	b.eq	407b2c <wcrtomb@plt+0x2d2c>  // b.none
  407bb8:	cmp	w19, #0x1
  407bbc:	b.eq	407c28 <wcrtomb@plt+0x2e28>  // b.none
  407bc0:	cbnz	w19, 407c18 <wcrtomb@plt+0x2e18>
  407bc4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407bc8:	ldrb	w8, [x8, #504]
  407bcc:	cbnz	w8, 407c00 <wcrtomb@plt+0x2e00>
  407bd0:	mov	w1, #0x3a                  	// #58
  407bd4:	mov	x0, x20
  407bd8:	bl	404a50 <strchr@plt>
  407bdc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407be0:	str	x0, [x8, #512]
  407be4:	ldr	x20, [x22]
  407be8:	subs	x2, x0, x20
  407bec:	b.ls	407c00 <wcrtomb@plt+0x2e00>  // b.plast
  407bf0:	mov	w1, #0x2f                  	// #47
  407bf4:	mov	x0, x20
  407bf8:	bl	404b50 <memchr@plt>
  407bfc:	cbz	x0, 407cec <wcrtomb@plt+0x2eec>
  407c00:	mov	w2, #0x1b6                 	// #438
  407c04:	mov	x0, x20
  407c08:	mov	w1, wzr
  407c0c:	bl	404510 <open@plt>
  407c10:	str	w0, [x25, #464]
  407c14:	bl	407edc <wcrtomb@plt+0x30dc>
  407c18:	ldr	w0, [x25, #464]
  407c1c:	tbnz	w0, #31, 407b80 <wcrtomb@plt+0x2d80>
  407c20:	mov	w0, #0x1                   	// #1
  407c24:	b	407ccc <wcrtomb@plt+0x2ecc>
  407c28:	ldrb	w8, [x21, #245]
  407c2c:	cbz	w8, 407c3c <wcrtomb@plt+0x2e3c>
  407c30:	mov	w1, #0x1                   	// #1
  407c34:	mov	x0, x20
  407c38:	bl	41936c <wcrtomb@plt+0x1456c>
  407c3c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407c40:	ldrb	w8, [x8, #504]
  407c44:	ldr	x22, [x24, #224]
  407c48:	cbz	w8, 407c78 <wcrtomb@plt+0x2e78>
  407c4c:	ldr	x0, [x22]
  407c50:	mov	w1, #0x1b6                 	// #438
  407c54:	bl	404d90 <creat@plt>
  407c58:	b	407b78 <wcrtomb@plt+0x2d78>
  407c5c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407c60:	ldr	x3, [x8, #296]
  407c64:	mov	w1, #0x42                  	// #66
  407c68:	mov	w2, #0x40000000            	// #1073741824
  407c6c:	mov	x0, x20
  407c70:	bl	426a84 <wcrtomb@plt+0x21c84>
  407c74:	b	407b78 <wcrtomb@plt+0x2d78>
  407c78:	ldr	x0, [x22]
  407c7c:	mov	w1, #0x3a                  	// #58
  407c80:	bl	404a50 <strchr@plt>
  407c84:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407c88:	str	x0, [x8, #512]
  407c8c:	cbz	x0, 407c4c <wcrtomb@plt+0x2e4c>
  407c90:	ldr	x20, [x22]
  407c94:	subs	x2, x0, x20
  407c98:	b.ls	407c4c <wcrtomb@plt+0x2e4c>  // b.plast
  407c9c:	mov	w1, #0x2f                  	// #47
  407ca0:	mov	x0, x20
  407ca4:	bl	404b50 <memchr@plt>
  407ca8:	cbnz	x0, 407c4c <wcrtomb@plt+0x2e4c>
  407cac:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407cb0:	ldr	x3, [x8, #296]
  407cb4:	mov	w1, #0x41                  	// #65
  407cb8:	b	407c68 <wcrtomb@plt+0x2e68>
  407cbc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407cc0:	mov	w0, #0x1                   	// #1
  407cc4:	strb	w0, [x8, #1208]
  407cc8:	str	wzr, [x25, #464]
  407ccc:	ldp	x20, x19, [sp, #112]
  407cd0:	ldp	x22, x21, [sp, #96]
  407cd4:	ldp	x24, x23, [sp, #80]
  407cd8:	ldp	x26, x25, [sp, #64]
  407cdc:	ldp	x28, x27, [sp, #48]
  407ce0:	ldp	x29, x30, [sp, #32]
  407ce4:	add	sp, sp, #0x80
  407ce8:	ret
  407cec:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407cf0:	ldr	x3, [x8, #296]
  407cf4:	mov	w2, #0x40000000            	// #1073741824
  407cf8:	mov	x0, x20
  407cfc:	mov	w1, wzr
  407d00:	bl	426a84 <wcrtomb@plt+0x21c84>
  407d04:	b	407c10 <wcrtomb@plt+0x2e10>
  407d08:	adrp	x19, 46b000 <argp_program_version_hook@@Base+0x458>
  407d0c:	ldr	x8, [x19, #496]
  407d10:	cbz	x8, 407d18 <wcrtomb@plt+0x2f18>
  407d14:	blr	x8
  407d18:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  407d1c:	add	x1, x1, #0xcca
  407d20:	b	407d3c <wcrtomb@plt+0x2f3c>
  407d24:	adrp	x19, 46b000 <argp_program_version_hook@@Base+0x458>
  407d28:	ldr	x8, [x19, #496]
  407d2c:	cbz	x8, 407d34 <wcrtomb@plt+0x2f34>
  407d30:	blr	x8
  407d34:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  407d38:	add	x1, x1, #0xdd4
  407d3c:	mov	w2, #0x5                   	// #5
  407d40:	mov	x0, xzr
  407d44:	bl	404bd0 <dcgettext@plt>
  407d48:	mov	x2, x0
  407d4c:	mov	w0, wzr
  407d50:	mov	w1, wzr
  407d54:	bl	4041d0 <error@plt>
  407d58:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407d5c:	ldr	w8, [x8, #348]
  407d60:	sub	w8, w8, #0x5
  407d64:	cmp	w8, #0x3
  407d68:	b.cc	407d9c <wcrtomb@plt+0x2f9c>  // b.lo, b.ul, b.last
  407d6c:	ldr	x8, [x19, #496]
  407d70:	cbz	x8, 407d78 <wcrtomb@plt+0x2f78>
  407d74:	blr	x8
  407d78:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  407d7c:	add	x1, x1, #0xcec
  407d80:	mov	w2, #0x5                   	// #5
  407d84:	mov	x0, xzr
  407d88:	bl	404bd0 <dcgettext@plt>
  407d8c:	mov	x2, x0
  407d90:	mov	w0, wzr
  407d94:	mov	w1, wzr
  407d98:	bl	4041d0 <error@plt>
  407d9c:	bl	40d698 <wcrtomb@plt+0x8898>
  407da0:	stp	x29, x30, [sp, #-32]!
  407da4:	str	x19, [sp, #16]
  407da8:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407dac:	add	x19, x19, #0x2b0
  407db0:	mov	x0, x19
  407db4:	mov	x29, sp
  407db8:	bl	420c80 <wcrtomb@plt+0x1be80>
  407dbc:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407dc0:	add	x0, x0, #0xde8
  407dc4:	mov	x1, x19
  407dc8:	mov	w2, wzr
  407dcc:	bl	416490 <wcrtomb@plt+0x11690>
  407dd0:	cmp	w0, #0x1
  407dd4:	b.ne	407e18 <wcrtomb@plt+0x3018>  // b.any
  407dd8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407ddc:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407de0:	ldr	x10, [x8, #3560]
  407de4:	ldr	x8, [x9, #3496]
  407de8:	cmp	x8, x10
  407dec:	b.hi	407e00 <wcrtomb@plt+0x3000>  // b.pmore
  407df0:	add	x8, x8, #0x200
  407df4:	cmp	x8, x10
  407df8:	b.ls	407df0 <wcrtomb@plt+0x2ff0>  // b.plast
  407dfc:	str	x8, [x9, #3496]
  407e00:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407e04:	ldr	x9, [x9, #3432]
  407e08:	cmp	x8, x9
  407e0c:	b.hi	407e68 <wcrtomb@plt+0x3068>  // b.pmore
  407e10:	mov	w0, #0x1                   	// #1
  407e14:	b	407e5c <wcrtomb@plt+0x305c>
  407e18:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407e1c:	ldr	x8, [x8, #496]
  407e20:	cbz	x8, 407e28 <wcrtomb@plt+0x3028>
  407e24:	blr	x8
  407e28:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  407e2c:	add	x1, x1, #0xb9f
  407e30:	mov	w2, #0x5                   	// #5
  407e34:	mov	x0, xzr
  407e38:	bl	404bd0 <dcgettext@plt>
  407e3c:	mov	x2, x0
  407e40:	mov	w0, wzr
  407e44:	mov	w1, wzr
  407e48:	bl	4041d0 <error@plt>
  407e4c:	mov	w0, wzr
  407e50:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407e54:	mov	w9, #0x2                   	// #2
  407e58:	str	w9, [x8, #2944]
  407e5c:	ldr	x19, [sp, #16]
  407e60:	ldp	x29, x30, [sp], #32
  407e64:	ret
  407e68:	bl	404850 <abort@plt>
  407e6c:	stp	x29, x30, [sp, #-16]!
  407e70:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  407e74:	ldr	w9, [x8, #1704]
  407e78:	mov	x29, sp
  407e7c:	add	w10, w9, #0x1
  407e80:	cmn	w9, #0x2
  407e84:	str	w10, [x8, #1704]
  407e88:	b.le	407ea4 <wcrtomb@plt+0x30a4>
  407e8c:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  407e90:	ldr	w9, [x8, #1708]
  407e94:	add	w9, w9, #0x1
  407e98:	str	w9, [x8, #1708]
  407e9c:	ldp	x29, x30, [sp], #16
  407ea0:	ret
  407ea4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407ea8:	ldr	x8, [x8, #496]
  407eac:	cbz	x8, 407eb4 <wcrtomb@plt+0x30b4>
  407eb0:	blr	x8
  407eb4:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  407eb8:	add	x1, x1, #0xe33
  407ebc:	mov	w2, #0x5                   	// #5
  407ec0:	mov	x0, xzr
  407ec4:	bl	404bd0 <dcgettext@plt>
  407ec8:	mov	x2, x0
  407ecc:	mov	w0, wzr
  407ed0:	mov	w1, wzr
  407ed4:	bl	4041d0 <error@plt>
  407ed8:	bl	40d698 <wcrtomb@plt+0x8898>
  407edc:	sub	sp, sp, #0xa0
  407ee0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407ee4:	ldr	w8, [x8, #348]
  407ee8:	str	x19, [sp, #144]
  407eec:	adrp	x19, 46b000 <argp_program_version_hook@@Base+0x458>
  407ef0:	stp	x29, x30, [sp, #128]
  407ef4:	cmp	w8, #0x4
  407ef8:	add	x29, sp, #0x80
  407efc:	b.ne	407f04 <wcrtomb@plt+0x3104>  // b.any
  407f00:	strb	wzr, [x19, #416]
  407f04:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407f08:	ldr	w8, [x8, #3656]
  407f0c:	cmn	w8, #0x1
  407f10:	b.eq	407f30 <wcrtomb@plt+0x3130>  // b.none
  407f14:	cmp	w8, #0x0
  407f18:	cset	w8, ne  // ne = any
  407f1c:	strb	w8, [x19, #416]
  407f20:	ldr	x19, [sp, #144]
  407f24:	ldp	x29, x30, [sp, #128]
  407f28:	add	sp, sp, #0xa0
  407f2c:	ret
  407f30:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407f34:	ldrb	w9, [x8, #3660]
  407f38:	mov	w8, wzr
  407f3c:	cbnz	w9, 407f1c <wcrtomb@plt+0x311c>
  407f40:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  407f44:	ldr	x9, [x9, #392]
  407f48:	cbnz	x9, 407f1c <wcrtomb@plt+0x311c>
  407f4c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407f50:	ldr	w0, [x8, #464]
  407f54:	mov	x1, sp
  407f58:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  407f5c:	cbz	w0, 407f68 <wcrtomb@plt+0x3168>
  407f60:	mov	w8, wzr
  407f64:	b	407f1c <wcrtomb@plt+0x311c>
  407f68:	ldr	w8, [sp, #16]
  407f6c:	and	w8, w8, #0xf000
  407f70:	cmp	w8, #0x8, lsl #12
  407f74:	cset	w8, eq  // eq = none
  407f78:	b	407f1c <wcrtomb@plt+0x311c>
  407f7c:	stp	x29, x30, [sp, #-16]!
  407f80:	mov	x29, sp
  407f84:	bl	407fc8 <wcrtomb@plt+0x31c8>
  407f88:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407f8c:	ldr	x8, [x8, #408]
  407f90:	cmp	x0, x8
  407f94:	b.ne	407fc4 <wcrtomb@plt+0x31c4>  // b.any
  407f98:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407f9c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407fa0:	ldr	x10, [x8, #3440]
  407fa4:	ldr	d0, [x9, #1144]
  407fa8:	scvtf	d1, x0
  407fac:	add	x10, x10, #0x1
  407fb0:	fadd	d0, d0, d1
  407fb4:	str	x10, [x8, #3440]
  407fb8:	str	d0, [x9, #1144]
  407fbc:	ldp	x29, x30, [sp], #16
  407fc0:	ret
  407fc4:	bl	405904 <wcrtomb@plt+0xb04>
  407fc8:	stp	x29, x30, [sp, #-64]!
  407fcc:	mov	w0, #0x1                   	// #1
  407fd0:	str	x23, [sp, #16]
  407fd4:	stp	x22, x21, [sp, #32]
  407fd8:	stp	x20, x19, [sp, #48]
  407fdc:	mov	x29, sp
  407fe0:	bl	408980 <wcrtomb@plt+0x3b80>
  407fe4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  407fe8:	ldr	d0, [x8, #120]
  407fec:	fcmp	d0, #0.0
  407ff0:	b.eq	408018 <wcrtomb@plt+0x3218>  // b.none
  407ff4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  407ff8:	ldr	d1, [x8, #1144]
  407ffc:	fcmp	d0, d1
  408000:	b.hi	408018 <wcrtomb@plt+0x3218>  // b.pmore
  408004:	bl	404ce0 <__errno_location@plt>
  408008:	mov	w8, #0x1c                  	// #28
  40800c:	mov	x19, xzr
  408010:	str	w8, [x0]
  408014:	b	4080d4 <wcrtomb@plt+0x32d4>
  408018:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40801c:	ldrb	w8, [x8, #24]
  408020:	cbz	w8, 408034 <wcrtomb@plt+0x3234>
  408024:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  408028:	ldr	x19, [x8, #408]
  40802c:	cbnz	x19, 408040 <wcrtomb@plt+0x3240>
  408030:	b	4080d4 <wcrtomb@plt+0x32d4>
  408034:	bl	41e584 <wcrtomb@plt+0x19784>
  408038:	mov	x19, x0
  40803c:	cbz	x19, 4080d4 <wcrtomb@plt+0x32d4>
  408040:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408044:	ldrb	w8, [x8, #3660]
  408048:	cbz	w8, 4080d4 <wcrtomb@plt+0x32d4>
  40804c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408050:	ldrb	w8, [x8, #1228]
  408054:	tbnz	w8, #0, 4080d4 <wcrtomb@plt+0x32d4>
  408058:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40805c:	ldr	x21, [x8, #680]
  408060:	cbz	x21, 4080d4 <wcrtomb@plt+0x32d4>
  408064:	mov	x20, x21
  408068:	ldr	x21, [x21]
  40806c:	cbz	x21, 40807c <wcrtomb@plt+0x327c>
  408070:	ldr	x8, [x21, #8]
  408074:	cmp	x19, x8, lsl #9
  408078:	b.cs	408060 <wcrtomb@plt+0x3260>  // b.hs, b.nlast
  40807c:	ldr	x22, [x20, #8]
  408080:	ldp	x9, x8, [x20, #32]
  408084:	sub	x10, x19, x22, lsl #9
  408088:	add	x23, x8, x10, lsr #9
  40808c:	subs	x8, x9, x10
  408090:	csel	x8, xzr, x8, cc  // cc = lo, ul, last
  408094:	stp	x8, x23, [x20, #32]
  408098:	b.ls	4080a8 <wcrtomb@plt+0x32a8>  // b.plast
  40809c:	mov	x0, x20
  4080a0:	bl	404fe4 <wcrtomb@plt+0x1e4>
  4080a4:	b	4080bc <wcrtomb@plt+0x32bc>
  4080a8:	mov	x0, x21
  4080ac:	bl	404fe4 <wcrtomb@plt+0x1e4>
  4080b0:	cbz	x21, 4080d4 <wcrtomb@plt+0x32d4>
  4080b4:	add	x22, x23, x22
  4080b8:	mov	x20, x21
  4080bc:	ldr	x8, [x20, #8]
  4080c0:	str	xzr, [x20, #40]
  4080c4:	sub	x8, x8, x22
  4080c8:	str	x8, [x20, #8]
  4080cc:	ldr	x20, [x20]
  4080d0:	cbnz	x20, 4080bc <wcrtomb@plt+0x32bc>
  4080d4:	mov	x0, x19
  4080d8:	ldp	x20, x19, [sp, #48]
  4080dc:	ldp	x22, x21, [sp, #32]
  4080e0:	ldr	x23, [sp, #16]
  4080e4:	ldp	x29, x30, [sp], #64
  4080e8:	ret
  4080ec:	stp	x29, x30, [sp, #-32]!
  4080f0:	stp	x20, x19, [sp, #16]
  4080f4:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4080f8:	ldrsw	x8, [x20, #1232]
  4080fc:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408100:	add	x19, x19, #0x4d8
  408104:	mov	x29, sp
  408108:	ldr	x9, [x19, x8, lsl #3]
  40810c:	cbnz	x9, 408130 <wcrtomb@plt+0x3330>
  408110:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  408114:	ldr	x1, [x9, #408]
  408118:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40811c:	add	x9, x9, #0x4a0
  408120:	add	x0, x9, x8, lsl #3
  408124:	bl	419e6c <wcrtomb@plt+0x1506c>
  408128:	ldrsw	x8, [x20, #1232]
  40812c:	str	x0, [x19, x8, lsl #3]
  408130:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  408134:	ldr	x8, [x19, x8, lsl #3]
  408138:	ldrsw	x10, [x10, #236]
  40813c:	ldp	x20, x19, [sp, #16]
  408140:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408144:	adrp	x11, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408148:	str	x8, [x9, #3472]
  40814c:	str	x8, [x11, #3496]
  408150:	add	x8, x8, x10, lsl #9
  408154:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408158:	str	x8, [x9, #3432]
  40815c:	ldp	x29, x30, [sp], #32
  408160:	ret
  408164:	sub	sp, sp, #0x50
  408168:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  40816c:	ldrsw	x0, [x8, #1708]
  408170:	add	x1, sp, #0x8
  408174:	stp	x29, x30, [sp, #32]
  408178:	str	x21, [sp, #48]
  40817c:	stp	x20, x19, [sp, #64]
  408180:	add	x29, sp, #0x20
  408184:	bl	43401c <argp_parse@@Base+0x5360>
  408188:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  40818c:	ldr	x8, [x21, #136]
  408190:	mov	x19, x0
  408194:	mov	x0, x8
  408198:	bl	404170 <strlen@plt>
  40819c:	mov	x20, x0
  4081a0:	mov	x0, x19
  4081a4:	bl	404170 <strlen@plt>
  4081a8:	add	x8, x20, x0
  4081ac:	add	x0, x8, #0x9
  4081b0:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4081b4:	ldr	x4, [x21, #136]
  4081b8:	adrp	x3, 44b000 <_obstack_memory_used@@Base+0xf808>
  4081bc:	adrp	x5, 44b000 <_obstack_memory_used@@Base+0xf808>
  4081c0:	add	x3, x3, #0xe70
  4081c4:	add	x5, x5, #0xe79
  4081c8:	mov	w1, #0x1                   	// #1
  4081cc:	mov	x2, #0xffffffffffffffff    	// #-1
  4081d0:	mov	x6, x19
  4081d4:	mov	x20, x0
  4081d8:	bl	404190 <__sprintf_chk@plt>
  4081dc:	mov	x0, x20
  4081e0:	bl	408200 <wcrtomb@plt+0x3400>
  4081e4:	mov	x0, x20
  4081e8:	bl	4049b0 <free@plt>
  4081ec:	ldp	x20, x19, [sp, #64]
  4081f0:	ldr	x21, [sp, #48]
  4081f4:	ldp	x29, x30, [sp, #32]
  4081f8:	add	sp, sp, #0x50
  4081fc:	ret
  408200:	stp	x29, x30, [sp, #-32]!
  408204:	stp	x20, x19, [sp, #16]
  408208:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40820c:	ldr	w8, [x8, #304]
  408210:	mov	x20, x0
  408214:	mov	x29, sp
  408218:	cmp	w8, #0x4
  40821c:	b.ne	408240 <wcrtomb@plt+0x3440>  // b.any
  408220:	mov	x2, x20
  408224:	ldp	x20, x19, [sp, #16]
  408228:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0xf808>
  40822c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408230:	add	x0, x0, #0xe80
  408234:	add	x1, x1, #0x2b0
  408238:	ldp	x29, x30, [sp], #32
  40823c:	b	411550 <wcrtomb@plt+0xc750>
  408240:	bl	405574 <wcrtomb@plt+0x774>
  408244:	mov	w2, #0x200                 	// #512
  408248:	mov	w1, wzr
  40824c:	mov	x19, x0
  408250:	bl	4045e0 <memset@plt>
  408254:	mov	x0, x19
  408258:	mov	x1, x20
  40825c:	bl	404b00 <strcpy@plt>
  408260:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408264:	add	x20, x20, #0xe60
  408268:	add	x0, x20, #0x8
  40826c:	mov	x1, x19
  408270:	bl	4186dc <wcrtomb@plt+0x138dc>
  408274:	ldr	x0, [x20, #8]
  408278:	bl	4305a8 <argp_parse@@Base+0x18ec>
  40827c:	and	w8, w0, #0x1
  408280:	mov	w9, #0x56                  	// #86
  408284:	strb	w8, [x20, #16]
  408288:	strb	w9, [x19, #156]
  40828c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  408290:	ldr	x0, [x8, #200]
  408294:	add	x1, x19, #0x88
  408298:	mov	w2, #0xc                   	// #12
  40829c:	bl	40a56c <wcrtomb@plt+0x576c>
  4082a0:	mov	x2, #0xffffffffffffffff    	// #-1
  4082a4:	mov	x0, x20
  4082a8:	mov	x1, x19
  4082ac:	bl	40b220 <wcrtomb@plt+0x6420>
  4082b0:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4082b4:	ldr	x8, [x9, #3496]
  4082b8:	cmp	x8, x19
  4082bc:	b.hi	4082d0 <wcrtomb@plt+0x34d0>  // b.pmore
  4082c0:	add	x8, x8, #0x200
  4082c4:	cmp	x8, x19
  4082c8:	b.ls	4082c0 <wcrtomb@plt+0x34c0>  // b.plast
  4082cc:	str	x8, [x9, #3496]
  4082d0:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4082d4:	ldr	x9, [x9, #3432]
  4082d8:	cmp	x8, x9
  4082dc:	b.hi	4082ec <wcrtomb@plt+0x34ec>  // b.pmore
  4082e0:	ldp	x20, x19, [sp, #16]
  4082e4:	ldp	x29, x30, [sp], #32
  4082e8:	ret
  4082ec:	bl	404850 <abort@plt>
  4082f0:	stp	x29, x30, [sp, #-64]!
  4082f4:	stp	x22, x21, [sp, #32]
  4082f8:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4082fc:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408300:	ldr	x9, [x21, #3472]
  408304:	str	x23, [sp, #16]
  408308:	ldrb	w23, [x22, #1208]
  40830c:	mov	x29, sp
  408310:	stp	x20, x19, [sp, #48]
  408314:	cmp	x0, #0x0
  408318:	add	x8, x29, #0x1c
  40831c:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408320:	mov	w10, #0x1                   	// #1
  408324:	csel	x19, x8, x0, eq  // eq = none
  408328:	str	x9, [x20, #3432]
  40832c:	strb	w10, [x22, #1208]
  408330:	bl	405574 <wcrtomb@plt+0x774>
  408334:	cmp	x0, #0x0
  408338:	cset	w8, eq  // eq = none
  40833c:	strb	w8, [x19]
  408340:	ldr	x19, [x21, #3472]
  408344:	ldr	x8, [x20, #3432]
  408348:	strb	w23, [x22, #1208]
  40834c:	cmp	x19, x8
  408350:	b.eq	40839c <wcrtomb@plt+0x359c>  // b.none
  408354:	add	x20, x19, #0x101
  408358:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x14808>
  40835c:	add	x1, x1, #0xc16
  408360:	mov	x0, x20
  408364:	bl	404900 <strcmp@plt>
  408368:	cbz	w0, 408380 <wcrtomb@plt+0x3580>
  40836c:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  408370:	add	x1, x1, #0x52
  408374:	mov	x0, x20
  408378:	bl	404900 <strcmp@plt>
  40837c:	cbnz	w0, 40839c <wcrtomb@plt+0x359c>
  408380:	mov	w1, #0x1                   	// #1
  408384:	mov	x0, x19
  408388:	mov	w20, #0x1                   	// #1
  40838c:	bl	416e34 <wcrtomb@plt+0x12034>
  408390:	cmp	w0, #0x1
  408394:	b.eq	4083d4 <wcrtomb@plt+0x35d4>  // b.none
  408398:	ldr	x19, [x21, #3472]
  40839c:	adrp	x20, 44c000 <_obstack_memory_used@@Base+0x10808>
  4083a0:	adrp	x21, 44c000 <_obstack_memory_used@@Base+0x10808>
  4083a4:	add	x20, x20, #0x228
  4083a8:	add	x21, x21, #0x2e8
  4083ac:	ldp	x2, x1, [x20, #8]
  4083b0:	mov	x0, x19
  4083b4:	bl	4046b0 <bcmp@plt>
  4083b8:	cbz	w0, 4083d0 <wcrtomb@plt+0x35d0>
  4083bc:	add	x20, x20, #0x18
  4083c0:	cmp	x20, x21
  4083c4:	b.cc	4083ac <wcrtomb@plt+0x35ac>  // b.lo, b.ul, b.last
  4083c8:	mov	w20, wzr
  4083cc:	b	4083d4 <wcrtomb@plt+0x35d4>
  4083d0:	ldr	w20, [x20]
  4083d4:	mov	w0, w20
  4083d8:	ldp	x20, x19, [sp, #48]
  4083dc:	ldp	x22, x21, [sp, #32]
  4083e0:	ldr	x23, [sp, #16]
  4083e4:	ldp	x29, x30, [sp], #64
  4083e8:	ret
  4083ec:	adrp	x8, 44c000 <_obstack_memory_used@@Base+0x10808>
  4083f0:	mov	x9, xzr
  4083f4:	add	x8, x8, #0xd8
  4083f8:	add	x10, x9, #0x18
  4083fc:	cmp	x10, #0x120
  408400:	b.eq	408420 <wcrtomb@plt+0x3620>  // b.none
  408404:	ldr	w9, [x8, x9]
  408408:	cmp	w9, w0
  40840c:	mov	x9, x10
  408410:	b.ne	4083f8 <wcrtomb@plt+0x35f8>  // b.any
  408414:	add	x8, x8, x10
  408418:	ldur	x0, [x8, #-8]
  40841c:	ret
  408420:	mov	x0, xzr
  408424:	ret
  408428:	stp	x29, x30, [sp, #-48]!
  40842c:	stp	x20, x19, [sp, #32]
  408430:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408434:	ldr	w8, [x20, #1256]
  408438:	mov	x19, x0
  40843c:	str	x21, [sp, #16]
  408440:	mov	x29, sp
  408444:	cbnz	w8, 40845c <wcrtomb@plt+0x365c>
  408448:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40844c:	add	x0, x0, #0x4f0
  408450:	bl	404560 <sigemptyset@plt>
  408454:	mov	w8, #0x1                   	// #1
  408458:	str	w8, [x20, #1256]
  40845c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  408460:	add	x1, x1, #0x94a
  408464:	mov	x0, x19
  408468:	bl	404900 <strcmp@plt>
  40846c:	cbz	w0, 408598 <wcrtomb@plt+0x3798>
  408470:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  408474:	add	x1, x1, #0x2f0
  408478:	mov	x0, x19
  40847c:	bl	404900 <strcmp@plt>
  408480:	cbz	w0, 408598 <wcrtomb@plt+0x3798>
  408484:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  408488:	add	x1, x1, #0x2f4
  40848c:	mov	x0, x19
  408490:	bl	404900 <strcmp@plt>
  408494:	cbz	w0, 4085c8 <wcrtomb@plt+0x37c8>
  408498:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40849c:	add	x1, x1, #0x2f9
  4084a0:	mov	x0, x19
  4084a4:	bl	404900 <strcmp@plt>
  4084a8:	cbz	w0, 4085e8 <wcrtomb@plt+0x37e8>
  4084ac:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4084b0:	add	x1, x1, #0x2fe
  4084b4:	mov	w2, #0x5                   	// #5
  4084b8:	mov	x0, x19
  4084bc:	bl	404580 <strncmp@plt>
  4084c0:	cbz	w0, 40861c <wcrtomb@plt+0x381c>
  4084c4:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4084c8:	add	x1, x1, #0x304
  4084cc:	mov	w2, #0x5                   	// #5
  4084d0:	mov	x0, x19
  4084d4:	mov	w21, #0x5                   	// #5
  4084d8:	bl	404580 <strncmp@plt>
  4084dc:	cbz	w0, 408654 <wcrtomb@plt+0x3854>
  4084e0:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4084e4:	add	x1, x1, #0x30a
  4084e8:	mov	w2, #0x7                   	// #7
  4084ec:	mov	x0, x19
  4084f0:	bl	404580 <strncmp@plt>
  4084f4:	cbz	w0, 4086a0 <wcrtomb@plt+0x38a0>
  4084f8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4084fc:	add	x1, x1, #0x312
  408500:	mov	w2, #0x6                   	// #6
  408504:	mov	x0, x19
  408508:	bl	404580 <strncmp@plt>
  40850c:	cbz	w0, 4086dc <wcrtomb@plt+0x38dc>
  408510:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  408514:	add	x1, x1, #0x331
  408518:	mov	x0, x19
  40851c:	bl	404900 <strcmp@plt>
  408520:	cbz	w0, 408734 <wcrtomb@plt+0x3934>
  408524:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  408528:	add	x1, x1, #0x338
  40852c:	mov	w2, #0x5                   	// #5
  408530:	mov	x0, x19
  408534:	bl	404580 <strncmp@plt>
  408538:	cbnz	w0, 408754 <wcrtomb@plt+0x3954>
  40853c:	mov	w0, #0x18                  	// #24
  408540:	bl	43a8f4 <argp_parse@@Base+0xbc38>
  408544:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408548:	ldr	x9, [x8, #1416]
  40854c:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408550:	add	x10, x10, #0x570
  408554:	mov	w11, #0x7                   	// #7
  408558:	cmp	x9, #0x0
  40855c:	csel	x9, x10, x9, eq  // eq = none
  408560:	mov	x20, x0
  408564:	str	x0, [x9]
  408568:	str	x0, [x8, #1416]
  40856c:	str	w11, [x0, #8]
  408570:	add	x0, x19, #0x5
  408574:	bl	41fa84 <wcrtomb@plt+0x1ac84>
  408578:	mov	w1, w0
  40857c:	str	w1, [x20, #16]
  408580:	ldp	x20, x19, [sp, #32]
  408584:	ldr	x21, [sp, #16]
  408588:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40858c:	add	x0, x0, #0x4f0
  408590:	ldp	x29, x30, [sp], #48
  408594:	b	404c60 <sigaddset@plt>
  408598:	mov	w0, #0x18                  	// #24
  40859c:	bl	43a8f4 <argp_parse@@Base+0xbc38>
  4085a0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4085a4:	ldr	x9, [x8, #1416]
  4085a8:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4085ac:	add	x10, x10, #0x570
  4085b0:	cmp	x9, #0x0
  4085b4:	csel	x9, x10, x9, eq  // eq = none
  4085b8:	str	x0, [x9]
  4085bc:	str	x0, [x8, #1416]
  4085c0:	str	wzr, [x0, #8]
  4085c4:	b	408690 <wcrtomb@plt+0x3890>
  4085c8:	mov	w0, #0x18                  	// #24
  4085cc:	bl	43a8f4 <argp_parse@@Base+0xbc38>
  4085d0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4085d4:	ldr	x9, [x8, #1416]
  4085d8:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4085dc:	add	x10, x10, #0x570
  4085e0:	mov	w11, #0x1                   	// #1
  4085e4:	b	408604 <wcrtomb@plt+0x3804>
  4085e8:	mov	w0, #0x18                  	// #24
  4085ec:	bl	43a8f4 <argp_parse@@Base+0xbc38>
  4085f0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4085f4:	ldr	x9, [x8, #1416]
  4085f8:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4085fc:	add	x10, x10, #0x570
  408600:	mov	w11, #0x2                   	// #2
  408604:	cmp	x9, #0x0
  408608:	csel	x9, x10, x9, eq  // eq = none
  40860c:	str	x0, [x9]
  408610:	str	x0, [x8, #1416]
  408614:	str	w11, [x0, #8]
  408618:	b	408690 <wcrtomb@plt+0x3890>
  40861c:	mov	w0, #0x18                  	// #24
  408620:	bl	43a8f4 <argp_parse@@Base+0xbc38>
  408624:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408628:	ldr	x9, [x8, #1416]
  40862c:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408630:	add	x10, x10, #0x570
  408634:	mov	w11, #0x2                   	// #2
  408638:	cmp	x9, #0x0
  40863c:	csel	x9, x10, x9, eq  // eq = none
  408640:	mov	x20, x0
  408644:	str	x0, [x9]
  408648:	str	x0, [x8, #1416]
  40864c:	str	w11, [x0, #8]
  408650:	b	408684 <wcrtomb@plt+0x3884>
  408654:	mov	w0, #0x18                  	// #24
  408658:	bl	43a8f4 <argp_parse@@Base+0xbc38>
  40865c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408660:	ldr	x9, [x8, #1416]
  408664:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408668:	add	x10, x10, #0x570
  40866c:	mov	x20, x0
  408670:	cmp	x9, #0x0
  408674:	csel	x9, x10, x9, eq  // eq = none
  408678:	str	x0, [x9]
  40867c:	str	x0, [x8, #1416]
  408680:	str	w21, [x0, #8]
  408684:	add	x0, x19, #0x5
  408688:	bl	4087ac <wcrtomb@plt+0x39ac>
  40868c:	str	x0, [x20, #16]
  408690:	ldp	x20, x19, [sp, #32]
  408694:	ldr	x21, [sp, #16]
  408698:	ldp	x29, x30, [sp], #48
  40869c:	ret
  4086a0:	mov	w0, #0x18                  	// #24
  4086a4:	bl	43a8f4 <argp_parse@@Base+0xbc38>
  4086a8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4086ac:	ldr	x9, [x8, #1416]
  4086b0:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4086b4:	add	x10, x10, #0x570
  4086b8:	mov	w11, #0x3                   	// #3
  4086bc:	cmp	x9, #0x0
  4086c0:	csel	x9, x10, x9, eq  // eq = none
  4086c4:	mov	x20, x0
  4086c8:	str	x0, [x9]
  4086cc:	str	x0, [x8, #1416]
  4086d0:	str	w11, [x0, #8]
  4086d4:	add	x0, x19, #0x7
  4086d8:	b	408688 <wcrtomb@plt+0x3888>
  4086dc:	add	x0, x19, #0x6
  4086e0:	add	x1, x29, #0x18
  4086e4:	mov	w2, #0xa                   	// #10
  4086e8:	bl	404160 <strtoul@plt>
  4086ec:	ldr	x8, [x29, #24]
  4086f0:	ldrb	w8, [x8]
  4086f4:	cbnz	w8, 408770 <wcrtomb@plt+0x3970>
  4086f8:	mov	x20, x0
  4086fc:	mov	w0, #0x18                  	// #24
  408700:	bl	43a8f4 <argp_parse@@Base+0xbc38>
  408704:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408708:	ldr	x9, [x8, #1416]
  40870c:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408710:	add	x10, x10, #0x570
  408714:	mov	w11, #0x4                   	// #4
  408718:	cmp	x9, #0x0
  40871c:	csel	x9, x10, x9, eq  // eq = none
  408720:	str	x0, [x9]
  408724:	str	x0, [x8, #1416]
  408728:	str	w11, [x0, #8]
  40872c:	str	x20, [x0, #16]
  408730:	b	408690 <wcrtomb@plt+0x3890>
  408734:	mov	w0, #0x18                  	// #24
  408738:	bl	43a8f4 <argp_parse@@Base+0xbc38>
  40873c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408740:	ldr	x9, [x8, #1416]
  408744:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408748:	add	x10, x10, #0x570
  40874c:	mov	w11, #0x6                   	// #6
  408750:	b	408604 <wcrtomb@plt+0x3804>
  408754:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  408758:	ldr	x8, [x8, #496]
  40875c:	cbz	x8, 408764 <wcrtomb@plt+0x3964>
  408760:	blr	x8
  408764:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  408768:	add	x1, x1, #0x33e
  40876c:	b	408788 <wcrtomb@plt+0x3988>
  408770:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  408774:	ldr	x8, [x8, #496]
  408778:	cbz	x8, 408780 <wcrtomb@plt+0x3980>
  40877c:	blr	x8
  408780:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  408784:	add	x1, x1, #0x319
  408788:	mov	w2, #0x5                   	// #5
  40878c:	mov	x0, xzr
  408790:	bl	404bd0 <dcgettext@plt>
  408794:	mov	x2, x0
  408798:	mov	w0, wzr
  40879c:	mov	w1, wzr
  4087a0:	mov	x3, x19
  4087a4:	bl	4041d0 <error@plt>
  4087a8:	bl	40d698 <wcrtomb@plt+0x8898>
  4087ac:	stp	x29, x30, [sp, #-32]!
  4087b0:	stp	x20, x19, [sp, #16]
  4087b4:	mov	x29, sp
  4087b8:	bl	43a998 <argp_parse@@Base+0xbcdc>
  4087bc:	mov	x19, x0
  4087c0:	bl	404170 <strlen@plt>
  4087c4:	ldrb	w8, [x19]
  4087c8:	cmp	w8, #0x27
  4087cc:	b.eq	4087d8 <wcrtomb@plt+0x39d8>  // b.none
  4087d0:	cmp	w8, #0x22
  4087d4:	b.ne	408800 <wcrtomb@plt+0x3a00>  // b.any
  4087d8:	add	x9, x0, x19
  4087dc:	ldurb	w9, [x9, #-1]
  4087e0:	cmp	w9, w8
  4087e4:	b.ne	408800 <wcrtomb@plt+0x3a00>  // b.any
  4087e8:	sub	x20, x0, #0x2
  4087ec:	add	x1, x19, #0x1
  4087f0:	mov	x0, x19
  4087f4:	mov	x2, x20
  4087f8:	bl	404100 <memmove@plt>
  4087fc:	strb	wzr, [x19, x20]
  408800:	mov	x0, x19
  408804:	bl	418784 <wcrtomb@plt+0x13984>
  408808:	mov	x0, x19
  40880c:	ldp	x20, x19, [sp, #16]
  408810:	ldp	x29, x30, [sp], #32
  408814:	ret
  408818:	stp	x29, x30, [sp, #-32]!
  40881c:	stp	x20, x19, [sp, #16]
  408820:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408824:	ldr	w8, [x19, #1256]
  408828:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  40882c:	mov	x29, sp
  408830:	cbnz	w8, 408858 <wcrtomb@plt+0x3a58>
  408834:	ldr	w9, [x20, #344]
  408838:	cbz	w9, 408858 <wcrtomb@plt+0x3a58>
  40883c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408840:	ldr	x9, [x9, #1392]
  408844:	cbnz	x9, 408858 <wcrtomb@plt+0x3a58>
  408848:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40884c:	add	x0, x0, #0x2f9
  408850:	bl	408428 <wcrtomb@plt+0x3628>
  408854:	ldr	w8, [x19, #1256]
  408858:	cmp	w8, #0x1
  40885c:	b.ne	40888c <wcrtomb@plt+0x3a8c>  // b.any
  408860:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408864:	add	x1, x1, #0x4f0
  408868:	mov	w0, wzr
  40886c:	mov	x2, xzr
  408870:	bl	404240 <sigprocmask@plt>
  408874:	ldr	w8, [x20, #344]
  408878:	cbnz	w8, 408884 <wcrtomb@plt+0x3a84>
  40887c:	mov	w8, #0xa                   	// #10
  408880:	str	w8, [x20, #344]
  408884:	mov	w8, #0x2                   	// #2
  408888:	str	w8, [x19, #1256]
  40888c:	ldp	x20, x19, [sp, #16]
  408890:	ldp	x29, x30, [sp], #32
  408894:	ret
  408898:	stp	x29, x30, [sp, #-48]!
  40889c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4088a0:	stp	x20, x19, [sp, #32]
  4088a4:	ldr	x20, [x8, #1392]
  4088a8:	stp	x22, x21, [sp, #16]
  4088ac:	mov	x29, sp
  4088b0:	cbz	x20, 408914 <wcrtomb@plt+0x3b14>
  4088b4:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4088b8:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4088bc:	ldr	w8, [x20, #8]
  4088c0:	cmp	w8, #0x3
  4088c4:	b.ne	40890c <wcrtomb@plt+0x3b0c>  // b.any
  4088c8:	ldr	x0, [x21, #1400]
  4088cc:	cbz	x0, 40890c <wcrtomb@plt+0x3b0c>
  4088d0:	ldrb	w8, [x22, #1408]
  4088d4:	cbz	w8, 40890c <wcrtomb@plt+0x3b0c>
  4088d8:	bl	408924 <wcrtomb@plt+0x3b24>
  4088dc:	ldr	x1, [x21, #1400]
  4088e0:	cbz	x0, 4088fc <wcrtomb@plt+0x3afc>
  4088e4:	mov	x19, x0
  4088e8:	mov	w0, #0x20                  	// #32
  4088ec:	sub	x19, x19, #0x1
  4088f0:	bl	404b70 <fputc_unlocked@plt>
  4088f4:	ldr	x1, [x21, #1400]
  4088f8:	cbnz	x19, 4088e8 <wcrtomb@plt+0x3ae8>
  4088fc:	mov	w0, #0xd                   	// #13
  408900:	bl	404b70 <fputc_unlocked@plt>
  408904:	ldr	x0, [x21, #1400]
  408908:	bl	404ab0 <fflush_unlocked@plt>
  40890c:	ldr	x20, [x20]
  408910:	cbnz	x20, 4088bc <wcrtomb@plt+0x3abc>
  408914:	ldp	x20, x19, [sp, #32]
  408918:	ldp	x22, x21, [sp, #16]
  40891c:	ldp	x29, x30, [sp], #48
  408920:	ret
  408924:	sub	sp, sp, #0x20
  408928:	stp	x29, x30, [sp, #16]
  40892c:	add	x29, sp, #0x10
  408930:	bl	4043d0 <fileno@plt>
  408934:	add	x2, sp, #0x8
  408938:	mov	w1, #0x5413                	// #21523
  40893c:	bl	404db0 <ioctl@plt>
  408940:	cbnz	w0, 40894c <wcrtomb@plt+0x3b4c>
  408944:	ldrh	w0, [sp, #10]
  408948:	cbnz	x0, 408974 <wcrtomb@plt+0x3b74>
  40894c:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  408950:	add	x0, x0, #0x35c
  408954:	bl	404d10 <getenv@plt>
  408958:	cbz	x0, 408970 <wcrtomb@plt+0x3b70>
  40895c:	mov	w2, #0xa                   	// #10
  408960:	mov	x1, xzr
  408964:	bl	404960 <strtol@plt>
  408968:	cmp	x0, #0x0
  40896c:	b.gt	408974 <wcrtomb@plt+0x3b74>
  408970:	mov	w0, #0x50                  	// #80
  408974:	ldp	x29, x30, [sp, #16]
  408978:	add	sp, sp, #0x20
  40897c:	ret
  408980:	sub	sp, sp, #0x70
  408984:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  408988:	ldr	w8, [x8, #344]
  40898c:	stp	x29, x30, [sp, #16]
  408990:	stp	x28, x27, [sp, #32]
  408994:	stp	x26, x25, [sp, #48]
  408998:	stp	x24, x23, [sp, #64]
  40899c:	stp	x22, x21, [sp, #80]
  4089a0:	stp	x20, x19, [sp, #96]
  4089a4:	add	x29, sp, #0x10
  4089a8:	cbz	w8, 408b30 <wcrtomb@plt+0x3d30>
  4089ac:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4089b0:	ldr	w9, [x24, #1412]
  4089b4:	add	w9, w9, #0x1
  4089b8:	udiv	w10, w9, w8
  4089bc:	msub	w8, w10, w8, w9
  4089c0:	str	w9, [x24, #1412]
  4089c4:	cbnz	w8, 408b30 <wcrtomb@plt+0x3d30>
  4089c8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4089cc:	ldr	x25, [x8, #1392]
  4089d0:	cbz	x25, 408b30 <wcrtomb@plt+0x3d30>
  4089d4:	adrp	x26, 44c000 <_obstack_memory_used@@Base+0x10808>
  4089d8:	adrp	x22, 44d000 <_obstack_memory_used@@Base+0x11808>
  4089dc:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4089e0:	mov	w19, w0
  4089e4:	add	x26, x26, #0x2e8
  4089e8:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4089ec:	adrp	x28, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4089f0:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4089f4:	add	x22, x22, #0xb3d
  4089f8:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  4089fc:	add	x23, x23, #0x4f0
  408a00:	ldr	w8, [x25, #8]
  408a04:	cmp	w8, #0x7
  408a08:	b.hi	408b28 <wcrtomb@plt+0x3d28>  // b.pmore
  408a0c:	adr	x9, 408a1c <wcrtomb@plt+0x3c1c>
  408a10:	ldrb	w10, [x26, x8]
  408a14:	add	x9, x9, x10, lsl #2
  408a18:	br	x9
  408a1c:	ldr	x1, [x27, #3416]
  408a20:	mov	w0, #0x2e                  	// #46
  408a24:	bl	404b70 <fputc_unlocked@plt>
  408a28:	ldr	x0, [x27, #3416]
  408a2c:	b	408a64 <wcrtomb@plt+0x3c64>
  408a30:	ldr	x1, [x28, #1400]
  408a34:	cbnz	x1, 408a58 <wcrtomb@plt+0x3c58>
  408a38:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0xf808>
  408a3c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  408a40:	add	x0, x0, #0xc84
  408a44:	add	x1, x1, #0x838
  408a48:	bl	4044a0 <fopen@plt>
  408a4c:	mov	x1, x0
  408a50:	str	x0, [x28, #1400]
  408a54:	cbz	x0, 408b28 <wcrtomb@plt+0x3d28>
  408a58:	mov	w0, #0x7                   	// #7
  408a5c:	bl	404b70 <fputc_unlocked@plt>
  408a60:	ldr	x0, [x28, #1400]
  408a64:	bl	404ab0 <fflush_unlocked@plt>
  408a68:	b	408b28 <wcrtomb@plt+0x3d28>
  408a6c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408a70:	ldr	x0, [x20, #624]
  408a74:	ldr	x3, [x8, #3032]
  408a78:	mov	w1, #0x1                   	// #1
  408a7c:	mov	x2, x22
  408a80:	bl	4048f0 <__fprintf_chk@plt>
  408a84:	ldr	x8, [x20, #624]
  408a88:	ldr	x2, [x25, #16]
  408a8c:	ldr	w4, [x24, #1412]
  408a90:	sxtw	x1, w0
  408a94:	and	w3, w19, #0x1
  408a98:	mov	x0, x8
  408a9c:	bl	408b84 <wcrtomb@plt+0x3d84>
  408aa0:	ldr	x1, [x20, #624]
  408aa4:	mov	w0, #0xa                   	// #10
  408aa8:	bl	404b70 <fputc_unlocked@plt>
  408aac:	b	408b28 <wcrtomb@plt+0x3d28>
  408ab0:	ldr	x0, [x28, #1400]
  408ab4:	cbnz	x0, 408ad4 <wcrtomb@plt+0x3cd4>
  408ab8:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0xf808>
  408abc:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  408ac0:	add	x0, x0, #0xc84
  408ac4:	add	x1, x1, #0x838
  408ac8:	bl	4044a0 <fopen@plt>
  408acc:	str	x0, [x28, #1400]
  408ad0:	cbz	x0, 408b28 <wcrtomb@plt+0x3d28>
  408ad4:	ldr	x2, [x25, #16]
  408ad8:	ldr	w4, [x24, #1412]
  408adc:	and	w3, w19, #0x1
  408ae0:	mov	x1, xzr
  408ae4:	bl	408b84 <wcrtomb@plt+0x3d84>
  408ae8:	b	408b28 <wcrtomb@plt+0x3d28>
  408aec:	ldr	w0, [x25, #16]
  408af0:	bl	404630 <sleep@plt>
  408af4:	b	408b28 <wcrtomb@plt+0x3d28>
  408af8:	ldr	x8, [x21, #224]
  408afc:	ldr	x0, [x25, #16]
  408b00:	ldr	w2, [x24, #1412]
  408b04:	ldr	x1, [x8]
  408b08:	bl	41f614 <wcrtomb@plt+0x1a814>
  408b0c:	b	408b28 <wcrtomb@plt+0x3d28>
  408b10:	bl	4050bc <wcrtomb@plt+0x2bc>
  408b14:	bl	4054ec <wcrtomb@plt+0x6ec>
  408b18:	b	408b28 <wcrtomb@plt+0x3d28>
  408b1c:	sub	x1, x29, #0x4
  408b20:	mov	x0, x23
  408b24:	bl	404990 <sigwait@plt>
  408b28:	ldr	x25, [x25]
  408b2c:	cbnz	x25, 408a00 <wcrtomb@plt+0x3c00>
  408b30:	ldp	x20, x19, [sp, #96]
  408b34:	ldp	x22, x21, [sp, #80]
  408b38:	ldp	x24, x23, [sp, #64]
  408b3c:	ldp	x26, x25, [sp, #48]
  408b40:	ldp	x28, x27, [sp, #32]
  408b44:	ldp	x29, x30, [sp, #16]
  408b48:	add	sp, sp, #0x70
  408b4c:	ret
  408b50:	stp	x29, x30, [sp, #-16]!
  408b54:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  408b58:	ldr	w8, [x8, #344]
  408b5c:	mov	x29, sp
  408b60:	cbz	w8, 408b7c <wcrtomb@plt+0x3d7c>
  408b64:	bl	408898 <wcrtomb@plt+0x3a98>
  408b68:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408b6c:	ldr	x0, [x8, #1400]
  408b70:	cbz	x0, 408b7c <wcrtomb@plt+0x3d7c>
  408b74:	ldp	x29, x30, [sp], #16
  408b78:	b	404450 <fclose@plt>
  408b7c:	ldp	x29, x30, [sp], #16
  408b80:	ret
  408b84:	sub	sp, sp, #0x1a0
  408b88:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0xf808>
  408b8c:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x16808>
  408b90:	add	x8, x8, #0xab5
  408b94:	add	x9, x9, #0x262
  408b98:	tst	w3, #0x1
  408b9c:	stp	x26, x25, [sp, #352]
  408ba0:	stp	x22, x21, [sp, #384]
  408ba4:	stp	x20, x19, [sp, #400]
  408ba8:	mov	x26, x2
  408bac:	mov	x19, x1
  408bb0:	mov	x22, x0
  408bb4:	csel	x1, x9, x8, ne  // ne = any
  408bb8:	mov	w2, #0x5                   	// #5
  408bbc:	mov	x0, xzr
  408bc0:	stp	x29, x30, [sp, #320]
  408bc4:	stp	x28, x27, [sp, #336]
  408bc8:	stp	x24, x23, [sp, #368]
  408bcc:	add	x29, sp, #0x140
  408bd0:	mov	w20, w4
  408bd4:	str	w3, [sp, #28]
  408bd8:	bl	404bd0 <dcgettext@plt>
  408bdc:	str	x0, [sp, #16]
  408be0:	mov	w0, w20
  408be4:	sub	x1, x29, #0x20
  408be8:	str	w20, [sp, #24]
  408bec:	bl	43401c <argp_parse@@Base+0x5360>
  408bf0:	str	x0, [sp, #8]
  408bf4:	cbnz	x26, 408c24 <wcrtomb@plt+0x3e24>
  408bf8:	ldr	w10, [sp, #28]
  408bfc:	adrp	x8, 44c000 <_obstack_memory_used@@Base+0x10808>
  408c00:	adrp	x9, 44c000 <_obstack_memory_used@@Base+0x10808>
  408c04:	add	x8, x8, #0x378
  408c08:	add	x9, x9, #0x364
  408c0c:	tst	w10, #0x1
  408c10:	csel	x1, x9, x8, ne  // ne = any
  408c14:	mov	w2, #0x5                   	// #5
  408c18:	mov	x0, xzr
  408c1c:	bl	404bd0 <dcgettext@plt>
  408c20:	mov	x26, x0
  408c24:	adrp	x28, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408c28:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408c2c:	sub	x21, x29, #0x38
  408c30:	mov	w23, #0x1                   	// #1
  408c34:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408c38:	ldrb	w0, [x26]
  408c3c:	cmp	w0, #0x25
  408c40:	b.eq	408c68 <wcrtomb@plt+0x3e68>  // b.none
  408c44:	cbz	w0, 408f84 <wcrtomb@plt+0x4184>
  408c48:	mov	x1, x22
  408c4c:	bl	404b70 <fputc_unlocked@plt>
  408c50:	ldrb	w8, [x26]
  408c54:	cmp	w8, #0xd
  408c58:	b.ne	408cb8 <wcrtomb@plt+0x3eb8>  // b.any
  408c5c:	mov	x19, xzr
  408c60:	strb	w23, [x24, #1408]
  408c64:	b	408cbc <wcrtomb@plt+0x3ebc>
  408c68:	mov	x27, x26
  408c6c:	ldrb	w8, [x27, #1]!
  408c70:	cmp	w8, #0x7b
  408c74:	b.ne	408cc4 <wcrtomb@plt+0x3ec4>  // b.any
  408c78:	add	x26, x26, #0x2
  408c7c:	mov	w1, #0x7d                  	// #125
  408c80:	mov	x0, x26
  408c84:	bl	404a50 <strchr@plt>
  408c88:	cbz	x0, 408d80 <wcrtomb@plt+0x3f80>
  408c8c:	ldr	x8, [x28, #1432]
  408c90:	sub	x27, x0, x27
  408c94:	mov	x25, x0
  408c98:	cmp	x27, x8
  408c9c:	b.ls	408ccc <wcrtomb@plt+0x3ecc>  // b.plast
  408ca0:	ldr	x0, [x20, #1424]
  408ca4:	mov	x1, x27
  408ca8:	str	x27, [x28, #1432]
  408cac:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  408cb0:	str	x0, [x20, #1424]
  408cb4:	b	408cd0 <wcrtomb@plt+0x3ed0>
  408cb8:	add	x19, x19, #0x1
  408cbc:	mov	x27, x26
  408cc0:	b	408f7c <wcrtomb@plt+0x417c>
  408cc4:	mov	x26, xzr
  408cc8:	b	408cf4 <wcrtomb@plt+0x3ef4>
  408ccc:	ldr	x0, [x20, #1424]
  408cd0:	sub	x27, x27, #0x1
  408cd4:	mov	x1, x26
  408cd8:	mov	x2, x27
  408cdc:	bl	4040f0 <memcpy@plt>
  408ce0:	ldr	x26, [x20, #1424]
  408ce4:	strb	wzr, [x26, x27]
  408ce8:	add	x27, x25, #0x1
  408cec:	cbz	x26, 408d80 <wcrtomb@plt+0x3f80>
  408cf0:	ldrb	w8, [x27]
  408cf4:	cmp	w8, #0x63
  408cf8:	b.le	408d1c <wcrtomb@plt+0x3f1c>
  408cfc:	cmp	w8, #0x73
  408d00:	b.gt	408d54 <wcrtomb@plt+0x3f54>
  408d04:	cmp	w8, #0x64
  408d08:	b.eq	408da0 <wcrtomb@plt+0x3fa0>  // b.none
  408d0c:	cmp	w8, #0x73
  408d10:	b.ne	408d80 <wcrtomb@plt+0x3f80>  // b.any
  408d14:	ldr	x25, [sp, #16]
  408d18:	b	408d68 <wcrtomb@plt+0x3f68>
  408d1c:	cmp	w8, #0x2a
  408d20:	b.eq	408dc0 <wcrtomb@plt+0x3fc0>  // b.none
  408d24:	cmp	w8, #0x54
  408d28:	b.eq	408dd8 <wcrtomb@plt+0x3fd8>  // b.none
  408d2c:	cmp	w8, #0x63
  408d30:	b.ne	408d80 <wcrtomb@plt+0x3f80>  // b.any
  408d34:	ldp	w4, w8, [sp, #24]
  408d38:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  408d3c:	mov	x0, x22
  408d40:	mov	x1, x19
  408d44:	and	w3, w8, #0x1
  408d48:	add	x2, x2, #0x3ad
  408d4c:	bl	408b84 <wcrtomb@plt+0x3d84>
  408d50:	b	408db8 <wcrtomb@plt+0x3fb8>
  408d54:	cmp	w8, #0x74
  408d58:	b.eq	408e68 <wcrtomb@plt+0x4068>  // b.none
  408d5c:	cmp	w8, #0x75
  408d60:	b.ne	408d80 <wcrtomb@plt+0x3f80>  // b.any
  408d64:	ldr	x25, [sp, #8]
  408d68:	mov	x0, x25
  408d6c:	mov	x1, x22
  408d70:	bl	404bf0 <fputs_unlocked@plt>
  408d74:	mov	x0, x25
  408d78:	bl	404170 <strlen@plt>
  408d7c:	b	408eac <wcrtomb@plt+0x40ac>
  408d80:	mov	w0, #0x25                  	// #37
  408d84:	mov	x1, x22
  408d88:	bl	404b70 <fputc_unlocked@plt>
  408d8c:	ldrb	w0, [x27]
  408d90:	mov	x1, x22
  408d94:	bl	404b70 <fputc_unlocked@plt>
  408d98:	add	x19, x19, #0x2
  408d9c:	b	408f7c <wcrtomb@plt+0x417c>
  408da0:	bl	4050bc <wcrtomb@plt+0x2bc>
  408da4:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  408da8:	mov	w1, #0x1                   	// #1
  408dac:	mov	x0, x22
  408db0:	add	x2, x2, #0x38b
  408db4:	bl	4048f0 <__fprintf_chk@plt>
  408db8:	add	x19, x19, w0, sxtw
  408dbc:	b	408f7c <wcrtomb@plt+0x417c>
  408dc0:	cbz	x26, 408eb4 <wcrtomb@plt+0x40b4>
  408dc4:	mov	w2, #0xa                   	// #10
  408dc8:	mov	x0, x26
  408dcc:	mov	x1, xzr
  408dd0:	bl	404960 <strtol@plt>
  408dd4:	b	408ebc <wcrtomb@plt+0x40bc>
  408dd8:	bl	4050bc <wcrtomb@plt+0x2bc>
  408ddc:	cbz	x26, 408ee8 <wcrtomb@plt+0x40e8>
  408de0:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  408de4:	add	x8, x8, #0x478
  408de8:	add	x1, sp, #0x20
  408dec:	mov	w2, #0x4644                	// #17988
  408df0:	mov	x0, x26
  408df4:	str	x8, [sp, #88]
  408df8:	bl	427ec8 <wcrtomb@plt+0x230c8>
  408dfc:	cbz	w0, 408f08 <wcrtomb@plt+0x4108>
  408e00:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  408e04:	ldr	x8, [x8, #496]
  408e08:	cbz	x8, 408e10 <wcrtomb@plt+0x4010>
  408e0c:	blr	x8
  408e10:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  408e14:	mov	w2, #0x5                   	// #5
  408e18:	mov	x0, xzr
  408e1c:	add	x1, x1, #0x390
  408e20:	bl	404bd0 <dcgettext@plt>
  408e24:	mov	x25, x0
  408e28:	add	x0, sp, #0x20
  408e2c:	bl	4280cc <wcrtomb@plt+0x232cc>
  408e30:	mov	x4, x0
  408e34:	mov	w0, wzr
  408e38:	mov	w1, wzr
  408e3c:	mov	x2, x25
  408e40:	mov	x3, x26
  408e44:	bl	4041d0 <error@plt>
  408e48:	mov	w8, #0x2                   	// #2
  408e4c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408e50:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x2b808>
  408e54:	str	w8, [x9, #2944]
  408e58:	mov	w2, #0x2c                  	// #44
  408e5c:	mov	x0, x22
  408e60:	add	x1, x1, #0x6b0
  408e64:	b	408f64 <wcrtomb@plt+0x4164>
  408e68:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  408e6c:	cmp	x26, #0x0
  408e70:	add	x8, x8, #0x41
  408e74:	add	x0, sp, #0x20
  408e78:	mov	x1, xzr
  408e7c:	csel	x25, x8, x26, eq  // eq = none
  408e80:	bl	404600 <gettimeofday@plt>
  408e84:	add	x0, sp, #0x20
  408e88:	bl	4043f0 <localtime@plt>
  408e8c:	ldr	w8, [sp, #40]
  408e90:	mov	w9, #0x3e8                 	// #1000
  408e94:	mov	x2, x0
  408e98:	mov	x0, x22
  408e9c:	mul	w4, w8, w9
  408ea0:	mov	x1, x25
  408ea4:	mov	x3, xzr
  408ea8:	bl	4312f4 <argp_parse@@Base+0x2638>
  408eac:	add	x19, x0, x19
  408eb0:	b	408f7c <wcrtomb@plt+0x417c>
  408eb4:	mov	x0, x22
  408eb8:	bl	408924 <wcrtomb@plt+0x3b24>
  408ebc:	mov	x25, x0
  408ec0:	cmp	x0, x19
  408ec4:	b.ls	408f7c <wcrtomb@plt+0x417c>  // b.plast
  408ec8:	mov	w0, #0x20                  	// #32
  408ecc:	mov	x1, x22
  408ed0:	bl	404b70 <fputc_unlocked@plt>
  408ed4:	add	x19, x19, #0x1
  408ed8:	cmp	x25, x19
  408edc:	b.ne	408ec8 <wcrtomb@plt+0x40c8>  // b.any
  408ee0:	mov	x19, x25
  408ee4:	b	408f7c <wcrtomb@plt+0x417c>
  408ee8:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x2b808>
  408eec:	mov	w2, #0x2c                  	// #44
  408ef0:	mov	x0, x22
  408ef4:	add	x1, x1, #0x6b0
  408ef8:	mov	w3, wzr
  408efc:	bl	4051fc <wcrtomb@plt+0x3fc>
  408f00:	mov	w25, w0
  408f04:	b	408f78 <wcrtomb@plt+0x4178>
  408f08:	ldr	x9, [sp, #32]
  408f0c:	cbz	x9, 408f38 <wcrtomb@plt+0x4138>
  408f10:	ldr	x10, [sp, #40]
  408f14:	mov	x8, xzr
  408f18:	ldr	x11, [x10, x8, lsl #3]
  408f1c:	str	x11, [x21, x8, lsl #3]
  408f20:	add	x8, x8, #0x1
  408f24:	cmp	x9, x8
  408f28:	b.hi	408f18 <wcrtomb@plt+0x4118>  // b.pmore
  408f2c:	cmp	w8, #0x2
  408f30:	b.ls	408f3c <wcrtomb@plt+0x413c>  // b.plast
  408f34:	b	408f58 <wcrtomb@plt+0x4158>
  408f38:	mov	w8, wzr
  408f3c:	mov	w9, #0x2                   	// #2
  408f40:	add	x0, x21, w8, uxtw #3
  408f44:	sub	w8, w9, w8
  408f48:	lsl	x8, x8, #3
  408f4c:	add	x2, x8, #0x8
  408f50:	mov	w1, wzr
  408f54:	bl	4045e0 <memset@plt>
  408f58:	sub	x1, x29, #0x38
  408f5c:	mov	w2, #0x2c                  	// #44
  408f60:	mov	x0, x22
  408f64:	mov	w3, wzr
  408f68:	bl	4051fc <wcrtomb@plt+0x3fc>
  408f6c:	mov	w25, w0
  408f70:	add	x0, sp, #0x20
  408f74:	bl	42800c <wcrtomb@plt+0x2320c>
  408f78:	add	x19, x19, w25, sxtw
  408f7c:	add	x26, x27, #0x1
  408f80:	b	408c38 <wcrtomb@plt+0x3e38>
  408f84:	mov	x0, x22
  408f88:	bl	404ab0 <fflush_unlocked@plt>
  408f8c:	mov	w0, w19
  408f90:	ldp	x20, x19, [sp, #400]
  408f94:	ldp	x22, x21, [sp, #384]
  408f98:	ldp	x24, x23, [sp, #368]
  408f9c:	ldp	x26, x25, [sp, #352]
  408fa0:	ldp	x28, x27, [sp, #336]
  408fa4:	ldp	x29, x30, [sp, #320]
  408fa8:	add	sp, sp, #0x1a0
  408fac:	ret
  408fb0:	sub	sp, sp, #0x20
  408fb4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  408fb8:	ldr	x1, [x8, #408]
  408fbc:	add	x0, sp, #0x8
  408fc0:	stp	x29, x30, [sp, #16]
  408fc4:	add	x29, sp, #0x10
  408fc8:	bl	419e6c <wcrtomb@plt+0x1506c>
  408fcc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  408fd0:	ldr	x8, [x8, #320]
  408fd4:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  408fd8:	str	x0, [x9, #1440]
  408fdc:	cbz	x8, 408fe4 <wcrtomb@plt+0x41e4>
  408fe0:	bl	413e38 <wcrtomb@plt+0xf038>
  408fe4:	ldp	x29, x30, [sp, #16]
  408fe8:	add	sp, sp, #0x20
  408fec:	ret
  408ff0:	sub	sp, sp, #0x120
  408ff4:	stp	x29, x30, [sp, #240]
  408ff8:	add	x29, sp, #0xf0
  408ffc:	stp	x28, x21, [sp, #256]
  409000:	stp	x20, x19, [sp, #272]
  409004:	stp	x2, x3, [x29, #-112]
  409008:	stp	x4, x5, [x29, #-96]
  40900c:	stp	x6, x7, [x29, #-80]
  409010:	stp	q1, q2, [sp, #16]
  409014:	stp	q3, q4, [sp, #48]
  409018:	str	q0, [sp]
  40901c:	stp	q5, q6, [sp, #80]
  409020:	str	q7, [sp, #112]
  409024:	cbz	x1, 4090ac <wcrtomb@plt+0x42ac>
  409028:	mov	x19, x1
  40902c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409030:	ldr	x1, [x0, #8]
  409034:	ldr	x20, [x21, #3416]
  409038:	mov	w0, #0x1                   	// #1
  40903c:	bl	4186a8 <wcrtomb@plt+0x138a8>
  409040:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  409044:	mov	x3, x0
  409048:	add	x2, x2, #0xb3d
  40904c:	mov	w1, #0x1                   	// #1
  409050:	mov	x0, x20
  409054:	bl	4048f0 <__fprintf_chk@plt>
  409058:	sub	x9, x29, #0x70
  40905c:	mov	x10, sp
  409060:	mov	x11, #0xffffffffffffffd0    	// #-48
  409064:	add	x8, x29, #0x30
  409068:	movk	x11, #0xff80, lsl #32
  40906c:	add	x9, x9, #0x30
  409070:	add	x10, x10, #0x80
  409074:	stp	x8, x9, [x29, #-64]
  409078:	stp	x10, x11, [x29, #-48]
  40907c:	ldp	q0, q1, [x29, #-64]
  409080:	ldr	x0, [x21, #3416]
  409084:	sub	x3, x29, #0x20
  409088:	mov	w1, #0x1                   	// #1
  40908c:	mov	x2, x19
  409090:	stp	q0, q1, [x29, #-32]
  409094:	bl	404670 <__vfprintf_chk@plt>
  409098:	ldr	x0, [x21, #3416]
  40909c:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  4090a0:	add	x2, x2, #0xb03
  4090a4:	mov	w1, #0x1                   	// #1
  4090a8:	bl	4048f0 <__fprintf_chk@plt>
  4090ac:	mov	w0, #0x1                   	// #1
  4090b0:	bl	420c68 <wcrtomb@plt+0x1be68>
  4090b4:	ldp	x20, x19, [sp, #272]
  4090b8:	ldp	x28, x21, [sp, #256]
  4090bc:	ldp	x29, x30, [sp, #240]
  4090c0:	add	sp, sp, #0x120
  4090c4:	ret
  4090c8:	stp	x29, x30, [sp, #-80]!
  4090cc:	str	x28, [sp, #16]
  4090d0:	stp	x24, x23, [sp, #32]
  4090d4:	stp	x22, x21, [sp, #48]
  4090d8:	stp	x20, x19, [sp, #64]
  4090dc:	mov	x29, sp
  4090e0:	sub	sp, sp, #0x480
  4090e4:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4090e8:	ldr	x0, [x20, #3560]
  4090ec:	bl	40587c <wcrtomb@plt+0xa7c>
  4090f0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4090f4:	ldr	w8, [x8, #132]
  4090f8:	cbz	w8, 409148 <wcrtomb@plt+0x4348>
  4090fc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409100:	ldrb	w8, [x8, #3512]
  409104:	cbz	w8, 409134 <wcrtomb@plt+0x4334>
  409108:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40910c:	ldr	x19, [x8, #3416]
  409110:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  409114:	add	x1, x1, #0x3f0
  409118:	mov	w2, #0x5                   	// #5
  40911c:	mov	x0, xzr
  409120:	bl	404bd0 <dcgettext@plt>
  409124:	mov	x2, x0
  409128:	mov	w1, #0x1                   	// #1
  40912c:	mov	x0, x19
  409130:	bl	4048f0 <__fprintf_chk@plt>
  409134:	ldr	x1, [x20, #3560]
  409138:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40913c:	add	x0, x0, #0xe60
  409140:	mov	x2, #0xffffffffffffffff    	// #-1
  409144:	bl	416dc8 <wcrtomb@plt+0x11fc8>
  409148:	ldr	x8, [x20, #3560]
  40914c:	ldrb	w8, [x8, #156]
  409150:	cmp	w8, #0x4c
  409154:	b.gt	4091b4 <wcrtomb@plt+0x43b4>
  409158:	sub	w9, w8, #0x30
  40915c:	cmp	w9, #0x14
  409160:	b.hi	4092a4 <wcrtomb@plt+0x44a4>  // b.pmore
  409164:	adrp	x8, 44c000 <_obstack_memory_used@@Base+0x10808>
  409168:	add	x8, x8, #0x3db
  40916c:	adr	x10, 40917c <wcrtomb@plt+0x437c>
  409170:	ldrb	w11, [x8, x9]
  409174:	add	x10, x10, x11, lsl #2
  409178:	br	x10
  40917c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409180:	ldr	x0, [x8, #3688]
  409184:	add	x1, sp, #0x80
  409188:	bl	409cf8 <wcrtomb@plt+0x4ef8>
  40918c:	cbz	w0, 409870 <wcrtomb@plt+0x4a70>
  409190:	ldr	x8, [x20, #3560]
  409194:	ldrb	w9, [x8, #156]
  409198:	cmp	w9, #0x33
  40919c:	b.ne	409550 <wcrtomb@plt+0x4750>  // b.any
  4091a0:	ldr	w8, [sp, #144]
  4091a4:	and	w9, w8, #0xf000
  4091a8:	cmp	w9, #0x2, lsl #12
  4091ac:	b.eq	409568 <wcrtomb@plt+0x4768>  // b.none
  4091b0:	b	409620 <wcrtomb@plt+0x4820>
  4091b4:	cmp	w8, #0x4d
  4091b8:	b.eq	40953c <wcrtomb@plt+0x473c>  // b.none
  4091bc:	cmp	w8, #0x53
  4091c0:	b.eq	409308 <wcrtomb@plt+0x4508>  // b.none
  4091c4:	cmp	w8, #0x56
  4091c8:	b.eq	409870 <wcrtomb@plt+0x4a70>  // b.none
  4091cc:	b	4092a8 <wcrtomb@plt+0x44a8>
  4091d0:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4091d4:	add	x19, x19, #0xe60
  4091d8:	mov	x0, x19
  4091dc:	bl	414a88 <wcrtomb@plt+0xfc88>
  4091e0:	tbz	w0, #0, 409314 <wcrtomb@plt+0x4514>
  4091e4:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4091e8:	ldr	w8, [x20, #4088]
  4091ec:	cbz	w8, 409678 <wcrtomb@plt+0x4878>
  4091f0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4091f4:	add	x0, x0, #0xe60
  4091f8:	bl	412f9c <wcrtomb@plt+0xe19c>
  4091fc:	bl	413a38 <wcrtomb@plt+0xec38>
  409200:	cbz	x0, 409784 <wcrtomb@plt+0x4984>
  409204:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409208:	ldr	x20, [x8, #4064]
  40920c:	mov	w23, #0x4000                	// #16384
  409210:	mov	w24, #0x400                 	// #1024
  409214:	adrp	x21, 44c000 <_obstack_memory_used@@Base+0x10808>
  409218:	mov	x19, x0
  40921c:	mov	w22, #0x1                   	// #1
  409220:	movk	w23, #0x11, lsl #16
  409224:	movk	w24, #0x20, lsl #16
  409228:	add	x21, x21, #0x624
  40922c:	ldrb	w8, [x20]
  409230:	sub	w9, w8, #0x44
  409234:	cmp	w9, #0x15
  409238:	b.hi	409254 <wcrtomb@plt+0x4454>  // b.pmore
  40923c:	lsl	w10, w22, w9
  409240:	tst	w10, w23
  409244:	b.ne	409648 <wcrtomb@plt+0x4848>  // b.any
  409248:	tst	w10, w24
  40924c:	b.ne	40925c <wcrtomb@plt+0x445c>  // b.any
  409250:	cbz	w9, 40927c <wcrtomb@plt+0x447c>
  409254:	cbnz	w8, 409230 <wcrtomb@plt+0x4430>
  409258:	b	409648 <wcrtomb@plt+0x4848>
  40925c:	ldrb	w1, [x19]
  409260:	mov	w2, #0x3                   	// #3
  409264:	mov	x0, x21
  409268:	bl	404b50 <memchr@plt>
  40926c:	cbz	x0, 409650 <wcrtomb@plt+0x4850>
  409270:	add	x0, x20, #0x1
  409274:	add	x1, x19, #0x1
  409278:	b	409284 <wcrtomb@plt+0x4484>
  40927c:	mov	x0, x20
  409280:	mov	x1, x19
  409284:	bl	404900 <strcmp@plt>
  409288:	cbnz	w0, 409650 <wcrtomb@plt+0x4850>
  40928c:	mov	x0, x20
  409290:	bl	404170 <strlen@plt>
  409294:	add	x8, x0, #0x1
  409298:	add	x19, x19, x8
  40929c:	add	x20, x20, x8
  4092a0:	b	40922c <wcrtomb@plt+0x442c>
  4092a4:	cbz	w8, 409308 <wcrtomb@plt+0x4508>
  4092a8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4092ac:	ldr	x8, [x8, #496]
  4092b0:	cbz	x8, 4092b8 <wcrtomb@plt+0x44b8>
  4092b4:	blr	x8
  4092b8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4092bc:	add	x1, x1, #0x3f8
  4092c0:	mov	w2, #0x5                   	// #5
  4092c4:	mov	x0, xzr
  4092c8:	bl	404bd0 <dcgettext@plt>
  4092cc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4092d0:	ldr	x8, [x8, #3688]
  4092d4:	mov	x19, x0
  4092d8:	mov	x0, x8
  4092dc:	bl	4398cc <argp_parse@@Base+0xac10>
  4092e0:	ldr	x8, [x20, #3560]
  4092e4:	mov	x3, x0
  4092e8:	mov	w0, wzr
  4092ec:	mov	w1, wzr
  4092f0:	ldrb	w4, [x8, #156]
  4092f4:	mov	x2, x19
  4092f8:	bl	4041d0 <error@plt>
  4092fc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409300:	mov	w9, #0x2                   	// #2
  409304:	str	w9, [x8, #2944]
  409308:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40930c:	ldrb	w8, [x8, #3696]
  409310:	cbz	w8, 409330 <wcrtomb@plt+0x4530>
  409314:	add	sp, sp, #0x480
  409318:	ldp	x20, x19, [sp, #64]
  40931c:	ldp	x22, x21, [sp, #48]
  409320:	ldp	x24, x23, [sp, #32]
  409324:	ldr	x28, [sp, #16]
  409328:	ldp	x29, x30, [sp], #80
  40932c:	b	4098d0 <wcrtomb@plt+0x4ad0>
  409330:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409334:	ldr	x19, [x8, #3688]
  409338:	add	x1, sp, #0x80
  40933c:	mov	x0, x19
  409340:	bl	409cf8 <wcrtomb@plt+0x4ef8>
  409344:	cbz	w0, 4097b8 <wcrtomb@plt+0x49b8>
  409348:	ldr	w8, [sp, #144]
  40934c:	and	w9, w8, #0xf000
  409350:	cmp	w9, #0x8, lsl #12
  409354:	b.ne	409778 <wcrtomb@plt+0x4978>  // b.any
  409358:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40935c:	ldr	w9, [x9, #3784]
  409360:	eor	w8, w9, w8
  409364:	tst	w8, #0xfff
  409368:	b.eq	409390 <wcrtomb@plt+0x4590>  // b.none
  40936c:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  409370:	add	x1, x1, #0x53f
  409374:	mov	w2, #0x5                   	// #5
  409378:	mov	x0, xzr
  40937c:	bl	404bd0 <dcgettext@plt>
  409380:	mov	x1, x0
  409384:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409388:	add	x0, x0, #0xe60
  40938c:	bl	408ff0 <wcrtomb@plt+0x41f0>
  409390:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409394:	add	x1, x1, #0xeb8
  409398:	add	x0, sp, #0x80
  40939c:	bl	41e4ec <wcrtomb@plt+0x196ec>
  4093a0:	tbnz	w0, #0, 4093c8 <wcrtomb@plt+0x45c8>
  4093a4:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4093a8:	add	x1, x1, #0x54c
  4093ac:	mov	w2, #0x5                   	// #5
  4093b0:	mov	x0, xzr
  4093b4:	bl	404bd0 <dcgettext@plt>
  4093b8:	mov	x1, x0
  4093bc:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4093c0:	add	x0, x0, #0xe60
  4093c4:	bl	408ff0 <wcrtomb@plt+0x41f0>
  4093c8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4093cc:	add	x1, x1, #0xeb8
  4093d0:	add	x0, sp, #0x80
  4093d4:	bl	41e500 <wcrtomb@plt+0x19700>
  4093d8:	tbnz	w0, #0, 409400 <wcrtomb@plt+0x4600>
  4093dc:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4093e0:	add	x1, x1, #0x558
  4093e4:	mov	w2, #0x5                   	// #5
  4093e8:	mov	x0, xzr
  4093ec:	bl	404bd0 <dcgettext@plt>
  4093f0:	mov	x1, x0
  4093f4:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4093f8:	add	x0, x0, #0xe60
  4093fc:	bl	408ff0 <wcrtomb@plt+0x41f0>
  409400:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409404:	add	x8, x8, #0xf48
  409408:	ldp	x0, x1, [sp, #216]
  40940c:	ldp	x2, x3, [x8]
  409410:	bl	420d98 <wcrtomb@plt+0x1bf98>
  409414:	cbz	w0, 40943c <wcrtomb@plt+0x463c>
  409418:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40941c:	add	x1, x1, #0x564
  409420:	mov	w2, #0x5                   	// #5
  409424:	mov	x0, xzr
  409428:	bl	404bd0 <dcgettext@plt>
  40942c:	mov	x1, x0
  409430:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409434:	add	x0, x0, #0xe60
  409438:	bl	408ff0 <wcrtomb@plt+0x41f0>
  40943c:	ldr	x8, [x20, #3560]
  409440:	ldrb	w8, [x8, #156]
  409444:	cmp	w8, #0x53
  409448:	b.eq	409460 <wcrtomb@plt+0x4660>  // b.none
  40944c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409450:	ldr	x8, [sp, #176]
  409454:	ldr	x9, [x9, #3816]
  409458:	cmp	x8, x9
  40945c:	b.ne	409794 <wcrtomb@plt+0x4994>  // b.any
  409460:	adrp	x21, 467000 <_obstack_memory_used@@Base+0x2b808>
  409464:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  409468:	ldr	w0, [x21, #1944]
  40946c:	ldr	w2, [x8, #196]
  409470:	mov	x1, x19
  409474:	bl	404cc0 <openat@plt>
  409478:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40947c:	str	w0, [x20, #1448]
  409480:	tbnz	w0, #31, 4097e4 <wcrtomb@plt+0x49e4>
  409484:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409488:	ldrb	w8, [x8, #3952]
  40948c:	cbz	w8, 409818 <wcrtomb@plt+0x4a18>
  409490:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409494:	add	x1, x1, #0xe60
  409498:	bl	41c974 <wcrtomb@plt+0x17b74>
  40949c:	b	409824 <wcrtomb@plt+0x4a24>
  4094a0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4094a4:	ldr	x0, [x8, #3688]
  4094a8:	add	x1, sp, #0x80
  4094ac:	bl	409cf8 <wcrtomb@plt+0x4ef8>
  4094b0:	cbz	w0, 409870 <wcrtomb@plt+0x4a70>
  4094b4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4094b8:	ldr	x0, [x8, #3704]
  4094bc:	mov	x1, sp
  4094c0:	bl	409cf8 <wcrtomb@plt+0x4ef8>
  4094c4:	cbz	w0, 409870 <wcrtomb@plt+0x4a70>
  4094c8:	add	x0, sp, #0x80
  4094cc:	mov	x1, sp
  4094d0:	bl	41e514 <wcrtomb@plt+0x19714>
  4094d4:	tbnz	w0, #0, 409870 <wcrtomb@plt+0x4a70>
  4094d8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4094dc:	add	x1, x1, #0x5ed
  4094e0:	mov	w2, #0x5                   	// #5
  4094e4:	mov	x0, xzr
  4094e8:	bl	404bd0 <dcgettext@plt>
  4094ec:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4094f0:	add	x19, x19, #0xe60
  4094f4:	ldr	x1, [x19, #24]
  4094f8:	mov	x20, x0
  4094fc:	mov	w0, wzr
  409500:	bl	4186a8 <wcrtomb@plt+0x138a8>
  409504:	mov	x2, x0
  409508:	mov	x0, x19
  40950c:	mov	x1, x20
  409510:	bl	408ff0 <wcrtomb@plt+0x41f0>
  409514:	b	409870 <wcrtomb@plt+0x4a70>
  409518:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40951c:	ldr	x0, [x22, #3704]
  409520:	bl	404170 <strlen@plt>
  409524:	mov	x20, x0
  409528:	cmp	x0, #0x400
  40952c:	add	x21, x0, #0x1
  409530:	b.cs	409588 <wcrtomb@plt+0x4788>  // b.hs, b.nlast
  409534:	add	x19, sp, #0x80
  409538:	b	409594 <wcrtomb@plt+0x4794>
  40953c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409540:	ldrb	w8, [x8, #3696]
  409544:	cbz	w8, 4096d4 <wcrtomb@plt+0x48d4>
  409548:	bl	4098d0 <wcrtomb@plt+0x4ad0>
  40954c:	b	409870 <wcrtomb@plt+0x4a70>
  409550:	ldr	w8, [sp, #144]
  409554:	cmp	w9, #0x34
  409558:	and	w9, w8, #0xf000
  40955c:	b.ne	4095f8 <wcrtomb@plt+0x47f8>  // b.any
  409560:	cmp	w9, #0x6, lsl #12
  409564:	b.ne	409620 <wcrtomb@plt+0x4820>  // b.any
  409568:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40956c:	ldr	x9, [x9, #3800]
  409570:	ldr	x10, [sp, #160]
  409574:	cmp	x9, x10
  409578:	b.eq	409600 <wcrtomb@plt+0x4800>  // b.none
  40957c:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  409580:	add	x1, x1, #0x60e
  409584:	b	409628 <wcrtomb@plt+0x4828>
  409588:	mov	x0, x21
  40958c:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  409590:	mov	x19, x0
  409594:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  409598:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40959c:	ldr	w0, [x8, #1944]
  4095a0:	ldr	x1, [x23, #3688]
  4095a4:	mov	x2, x19
  4095a8:	mov	x3, x21
  4095ac:	bl	404df0 <readlinkat@plt>
  4095b0:	tbnz	x0, #63, 4096b8 <wcrtomb@plt+0x48b8>
  4095b4:	cmp	x0, x20
  4095b8:	b.ne	4095d0 <wcrtomb@plt+0x47d0>  // b.any
  4095bc:	ldr	x0, [x22, #3704]
  4095c0:	mov	x1, x19
  4095c4:	mov	x2, x20
  4095c8:	bl	4046b0 <bcmp@plt>
  4095cc:	cbz	w0, 4097cc <wcrtomb@plt+0x49cc>
  4095d0:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4095d4:	add	x1, x1, #0x5fe
  4095d8:	mov	w2, #0x5                   	// #5
  4095dc:	mov	x0, xzr
  4095e0:	bl	404bd0 <dcgettext@plt>
  4095e4:	mov	x1, x0
  4095e8:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4095ec:	add	x0, x0, #0xe60
  4095f0:	bl	408ff0 <wcrtomb@plt+0x41f0>
  4095f4:	b	4097cc <wcrtomb@plt+0x49cc>
  4095f8:	cmp	w9, #0x1, lsl #12
  4095fc:	b.ne	409620 <wcrtomb@plt+0x4820>  // b.any
  409600:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409604:	ldr	w9, [x9, #3784]
  409608:	eor	w8, w9, w8
  40960c:	tst	w8, #0xfff
  409610:	b.eq	409870 <wcrtomb@plt+0x4a70>  // b.none
  409614:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  409618:	add	x1, x1, #0x53f
  40961c:	b	409628 <wcrtomb@plt+0x4828>
  409620:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  409624:	add	x1, x1, #0x52d
  409628:	mov	w2, #0x5                   	// #5
  40962c:	mov	x0, xzr
  409630:	bl	404bd0 <dcgettext@plt>
  409634:	mov	x1, x0
  409638:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40963c:	add	x0, x0, #0xe60
  409640:	bl	408ff0 <wcrtomb@plt+0x41f0>
  409644:	b	409870 <wcrtomb@plt+0x4a70>
  409648:	ldrb	w8, [x19]
  40964c:	cbz	w8, 409314 <wcrtomb@plt+0x4514>
  409650:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  409654:	add	x1, x1, #0x5dd
  409658:	mov	w2, #0x5                   	// #5
  40965c:	mov	x0, xzr
  409660:	bl	404bd0 <dcgettext@plt>
  409664:	mov	x1, x0
  409668:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40966c:	add	x0, x0, #0xe60
  409670:	bl	408ff0 <wcrtomb@plt+0x41f0>
  409674:	b	409314 <wcrtomb@plt+0x4514>
  409678:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40967c:	ldr	x0, [x19, #392]
  409680:	ldr	x1, [x19]
  409684:	ldr	w2, [x8, #196]
  409688:	bl	40a0e0 <wcrtomb@plt+0x52e0>
  40968c:	tbnz	w0, #31, 4097fc <wcrtomb@plt+0x49fc>
  409690:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409694:	add	x1, x1, #0xeb8
  409698:	mov	w19, w0
  40969c:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  4096a0:	cbz	w0, 40988c <wcrtomb@plt+0x4a8c>
  4096a4:	mov	w0, w19
  4096a8:	bl	4047a0 <close@plt>
  4096ac:	adrp	x2, 419000 <wcrtomb@plt+0x14200>
  4096b0:	add	x2, x2, #0xd24
  4096b4:	b	409804 <wcrtomb@plt+0x4a04>
  4096b8:	bl	404ce0 <__errno_location@plt>
  4096bc:	ldr	w8, [x0]
  4096c0:	ldr	x0, [x23, #3688]
  4096c4:	cmp	w8, #0x2
  4096c8:	b.ne	4097c0 <wcrtomb@plt+0x49c0>  // b.any
  4096cc:	bl	426494 <wcrtomb@plt+0x21694>
  4096d0:	b	4097c4 <wcrtomb@plt+0x49c4>
  4096d4:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4096d8:	ldr	x0, [x21, #3688]
  4096dc:	add	x1, sp, #0x80
  4096e0:	bl	409cf8 <wcrtomb@plt+0x4ef8>
  4096e4:	cbz	w0, 409870 <wcrtomb@plt+0x4a70>
  4096e8:	ldr	w8, [sp, #144]
  4096ec:	and	w8, w8, #0xf000
  4096f0:	cmp	w8, #0x8, lsl #12
  4096f4:	b.ne	409778 <wcrtomb@plt+0x4978>  // b.any
  4096f8:	ldr	x8, [x20, #3560]
  4096fc:	mov	w1, #0xc                   	// #12
  409700:	add	x0, x8, #0x171
  409704:	bl	41753c <wcrtomb@plt+0x1273c>
  409708:	tbnz	x0, #63, 409794 <wcrtomb@plt+0x4994>
  40970c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409710:	ldr	x8, [x8, #3816]
  409714:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  409718:	sub	x9, x9, x0
  40971c:	mov	x19, x0
  409720:	cmp	x9, x8
  409724:	b.lt	409794 <wcrtomb@plt+0x4994>  // b.tstop
  409728:	ldr	x9, [sp, #176]
  40972c:	add	x8, x8, x19
  409730:	cmp	x9, x8
  409734:	b.ne	409794 <wcrtomb@plt+0x4994>  // b.any
  409738:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  40973c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  409740:	ldr	x1, [x21, #3688]
  409744:	ldr	w0, [x8, #1944]
  409748:	ldr	w2, [x9, #196]
  40974c:	bl	404cc0 <openat@plt>
  409750:	tbnz	w0, #31, 409894 <wcrtomb@plt+0x4a94>
  409754:	mov	x1, x19
  409758:	mov	w2, wzr
  40975c:	mov	w20, w0
  409760:	bl	404370 <lseek@plt>
  409764:	tbnz	x0, #63, 4098a8 <wcrtomb@plt+0x4aa8>
  409768:	adrp	x0, 409000 <wcrtomb@plt+0x4200>
  40976c:	add	x0, x0, #0xe38
  409770:	bl	409d50 <wcrtomb@plt+0x4f50>
  409774:	b	4098bc <wcrtomb@plt+0x4abc>
  409778:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40977c:	add	x1, x1, #0x52d
  409780:	b	40979c <wcrtomb@plt+0x499c>
  409784:	adrp	x0, 409000 <wcrtomb@plt+0x4200>
  409788:	add	x0, x0, #0xf28
  40978c:	bl	409d50 <wcrtomb@plt+0x4f50>
  409790:	b	409314 <wcrtomb@plt+0x4514>
  409794:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  409798:	add	x1, x1, #0x575
  40979c:	mov	w2, #0x5                   	// #5
  4097a0:	mov	x0, xzr
  4097a4:	bl	404bd0 <dcgettext@plt>
  4097a8:	mov	x1, x0
  4097ac:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4097b0:	add	x0, x0, #0xe60
  4097b4:	bl	408ff0 <wcrtomb@plt+0x41f0>
  4097b8:	bl	416cc8 <wcrtomb@plt+0x11ec8>
  4097bc:	b	409870 <wcrtomb@plt+0x4a70>
  4097c0:	bl	426480 <wcrtomb@plt+0x21680>
  4097c4:	mov	w0, #0x1                   	// #1
  4097c8:	bl	420c68 <wcrtomb@plt+0x1be68>
  4097cc:	add	x8, sp, #0x80
  4097d0:	cmp	x19, x8
  4097d4:	b.eq	409870 <wcrtomb@plt+0x4a70>  // b.none
  4097d8:	mov	x0, x19
  4097dc:	bl	4049b0 <free@plt>
  4097e0:	b	409870 <wcrtomb@plt+0x4a70>
  4097e4:	mov	x0, x19
  4097e8:	bl	426218 <wcrtomb@plt+0x21418>
  4097ec:	bl	416cc8 <wcrtomb@plt+0x11ec8>
  4097f0:	mov	w0, #0x1                   	// #1
  4097f4:	bl	420c68 <wcrtomb@plt+0x1be68>
  4097f8:	b	409870 <wcrtomb@plt+0x4a70>
  4097fc:	adrp	x2, 419000 <wcrtomb@plt+0x14200>
  409800:	add	x2, x2, #0xc70
  409804:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409808:	ldr	x0, [x8, #3680]
  40980c:	mov	w1, wzr
  409810:	bl	419d48 <wcrtomb@plt+0x14f48>
  409814:	b	409314 <wcrtomb@plt+0x4514>
  409818:	adrp	x0, 409000 <wcrtomb@plt+0x4200>
  40981c:	add	x0, x0, #0xe38
  409820:	bl	409d50 <wcrtomb@plt+0x4f50>
  409824:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  409828:	ldr	w8, [x8, #44]
  40982c:	cmp	w8, #0x1
  409830:	b.ne	40985c <wcrtomb@plt+0x4a5c>  // b.any
  409834:	ldr	x8, [sp, #176]
  409838:	cbz	x8, 40985c <wcrtomb@plt+0x4a5c>
  40983c:	ldp	x3, x4, [sp, #200]
  409840:	ldr	w0, [x20, #1448]
  409844:	ldr	w1, [x21, #1944]
  409848:	mov	x2, x19
  40984c:	bl	419810 <wcrtomb@plt+0x14a10>
  409850:	cbz	w0, 40985c <wcrtomb@plt+0x4a5c>
  409854:	mov	x0, x19
  409858:	bl	426748 <wcrtomb@plt+0x21948>
  40985c:	ldr	w0, [x20, #1448]
  409860:	bl	4047a0 <close@plt>
  409864:	cbz	w0, 409870 <wcrtomb@plt+0x4a70>
  409868:	mov	x0, x19
  40986c:	bl	426108 <wcrtomb@plt+0x21308>
  409870:	add	sp, sp, #0x480
  409874:	ldp	x20, x19, [sp, #64]
  409878:	ldp	x22, x21, [sp, #48]
  40987c:	ldp	x24, x23, [sp, #32]
  409880:	ldr	x28, [sp, #16]
  409884:	ldp	x29, x30, [sp], #80
  409888:	ret
  40988c:	str	w19, [x20, #4088]
  409890:	b	4091f0 <wcrtomb@plt+0x43f0>
  409894:	ldr	x0, [x21, #3688]
  409898:	bl	426218 <wcrtomb@plt+0x21418>
  40989c:	mov	w0, #0x1                   	// #1
  4098a0:	bl	420c68 <wcrtomb@plt+0x1be68>
  4098a4:	b	4097b8 <wcrtomb@plt+0x49b8>
  4098a8:	ldr	x0, [x21, #3688]
  4098ac:	mov	x1, x19
  4098b0:	bl	4264f8 <wcrtomb@plt+0x216f8>
  4098b4:	mov	w0, #0x1                   	// #1
  4098b8:	bl	420c68 <wcrtomb@plt+0x1be68>
  4098bc:	mov	w0, w20
  4098c0:	bl	4047a0 <close@plt>
  4098c4:	cbz	w0, 409870 <wcrtomb@plt+0x4a70>
  4098c8:	ldr	x0, [x21, #3688]
  4098cc:	b	40986c <wcrtomb@plt+0x4a6c>
  4098d0:	sub	sp, sp, #0x90
  4098d4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4098d8:	ldr	x0, [x8, #3688]
  4098dc:	mov	x1, sp
  4098e0:	stp	x29, x30, [sp, #128]
  4098e4:	add	x29, sp, #0x80
  4098e8:	bl	409cf8 <wcrtomb@plt+0x4ef8>
  4098ec:	cbz	w0, 409944 <wcrtomb@plt+0x4b44>
  4098f0:	ldr	w8, [sp, #16]
  4098f4:	and	w9, w8, #0xf000
  4098f8:	cmp	w9, #0x4, lsl #12
  4098fc:	b.ne	409920 <wcrtomb@plt+0x4b20>  // b.any
  409900:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409904:	ldr	w9, [x9, #3784]
  409908:	eor	w8, w9, w8
  40990c:	tst	w8, #0xfff
  409910:	b.eq	409944 <wcrtomb@plt+0x4b44>  // b.none
  409914:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  409918:	add	x1, x1, #0x53f
  40991c:	b	409928 <wcrtomb@plt+0x4b28>
  409920:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  409924:	add	x1, x1, #0x52d
  409928:	mov	w2, #0x5                   	// #5
  40992c:	mov	x0, xzr
  409930:	bl	404bd0 <dcgettext@plt>
  409934:	mov	x1, x0
  409938:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40993c:	add	x0, x0, #0xe60
  409940:	bl	408ff0 <wcrtomb@plt+0x41f0>
  409944:	ldp	x29, x30, [sp, #128]
  409948:	add	sp, sp, #0x90
  40994c:	ret
  409950:	sub	sp, sp, #0x80
  409954:	stp	x29, x30, [sp, #32]
  409958:	stp	x28, x27, [sp, #48]
  40995c:	stp	x26, x25, [sp, #64]
  409960:	stp	x24, x23, [sp, #80]
  409964:	stp	x22, x21, [sp, #96]
  409968:	stp	x20, x19, [sp, #112]
  40996c:	add	x29, sp, #0x20
  409970:	bl	426840 <wcrtomb@plt+0x21a40>
  409974:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  409978:	tbz	w0, #0, 4099b4 <wcrtomb@plt+0x4bb4>
  40997c:	ldr	x8, [x21, #496]
  409980:	cbz	x8, 409988 <wcrtomb@plt+0x4b88>
  409984:	blr	x8
  409988:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40998c:	add	x1, x1, #0x42a
  409990:	mov	w2, #0x5                   	// #5
  409994:	mov	x0, xzr
  409998:	bl	404bd0 <dcgettext@plt>
  40999c:	mov	x2, x0
  4099a0:	mov	w0, wzr
  4099a4:	mov	w1, wzr
  4099a8:	bl	4041d0 <error@plt>
  4099ac:	mov	w19, #0x1                   	// #1
  4099b0:	b	4099b8 <wcrtomb@plt+0x4bb8>
  4099b4:	mov	w19, wzr
  4099b8:	bl	423990 <wcrtomb@plt+0x1eb90>
  4099bc:	tbz	w0, #0, 4099f4 <wcrtomb@plt+0x4bf4>
  4099c0:	ldr	x8, [x21, #496]
  4099c4:	cbz	x8, 4099cc <wcrtomb@plt+0x4bcc>
  4099c8:	blr	x8
  4099cc:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4099d0:	add	x1, x1, #0x465
  4099d4:	mov	w2, #0x5                   	// #5
  4099d8:	mov	x0, xzr
  4099dc:	bl	404bd0 <dcgettext@plt>
  4099e0:	mov	x2, x0
  4099e4:	mov	w0, wzr
  4099e8:	mov	w1, wzr
  4099ec:	bl	4041d0 <error@plt>
  4099f0:	b	4099f8 <wcrtomb@plt+0x4bf8>
  4099f4:	cbz	w19, 409a28 <wcrtomb@plt+0x4c28>
  4099f8:	ldr	x8, [x21, #496]
  4099fc:	cbz	x8, 409a04 <wcrtomb@plt+0x4c04>
  409a00:	blr	x8
  409a04:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  409a08:	add	x1, x1, #0x48e
  409a0c:	mov	w2, #0x5                   	// #5
  409a10:	mov	x0, xzr
  409a14:	bl	404bd0 <dcgettext@plt>
  409a18:	mov	x2, x0
  409a1c:	mov	w0, wzr
  409a20:	mov	w1, wzr
  409a24:	bl	4041d0 <error@plt>
  409a28:	bl	412e3c <wcrtomb@plt+0xe03c>
  409a2c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409a30:	ldr	x8, [x8, #1440]
  409a34:	cbnz	x8, 409a3c <wcrtomb@plt+0x4c3c>
  409a38:	bl	408fb0 <wcrtomb@plt+0x41b0>
  409a3c:	adrp	x19, 46b000 <argp_program_version_hook@@Base+0x458>
  409a40:	ldr	w0, [x19, #464]
  409a44:	bl	404460 <fsync@plt>
  409a48:	ldr	w0, [x19, #464]
  409a4c:	mov	w1, #0x24b                 	// #587
  409a50:	bl	404db0 <ioctl@plt>
  409a54:	ldr	w0, [x19, #464]
  409a58:	mov	w8, #0x2                   	// #2
  409a5c:	mov	w9, #0x40000000            	// #1073741824
  409a60:	strh	w8, [sp, #8]
  409a64:	mov	w8, #0x1                   	// #1
  409a68:	cmp	w0, w9
  409a6c:	str	w8, [sp, #12]
  409a70:	b.lt	409a94 <wcrtomb@plt+0x4c94>  // b.tstop
  409a74:	mov	w8, #0xc0000000            	// #-1073741824
  409a78:	mov	w1, #0x6d01                	// #27905
  409a7c:	add	w0, w0, w8
  409a80:	add	x2, sp, #0x8
  409a84:	movk	w1, #0x4008, lsl #16
  409a88:	bl	427510 <wcrtomb@plt+0x22710>
  409a8c:	tbz	w0, #31, 409b48 <wcrtomb@plt+0x4d48>
  409a90:	b	409aa8 <wcrtomb@plt+0x4ca8>
  409a94:	mov	w1, #0x6d01                	// #27905
  409a98:	add	x2, sp, #0x8
  409a9c:	movk	w1, #0x4008, lsl #16
  409aa0:	bl	404db0 <ioctl@plt>
  409aa4:	tbz	w0, #31, 409b48 <wcrtomb@plt+0x4d48>
  409aa8:	bl	404ce0 <__errno_location@plt>
  409aac:	ldr	w8, [x0]
  409ab0:	cmp	w8, #0x5
  409ab4:	b.ne	409afc <wcrtomb@plt+0x4cfc>  // b.any
  409ab8:	ldr	w0, [x19, #464]
  409abc:	mov	w8, #0x40000000            	// #1073741824
  409ac0:	cmp	w0, w8
  409ac4:	b.lt	409ae8 <wcrtomb@plt+0x4ce8>  // b.tstop
  409ac8:	mov	w8, #0xc0000000            	// #-1073741824
  409acc:	mov	w1, #0x6d01                	// #27905
  409ad0:	add	w0, w0, w8
  409ad4:	add	x2, sp, #0x8
  409ad8:	movk	w1, #0x4008, lsl #16
  409adc:	bl	427510 <wcrtomb@plt+0x22710>
  409ae0:	tbz	w0, #31, 409b48 <wcrtomb@plt+0x4d48>
  409ae4:	b	409afc <wcrtomb@plt+0x4cfc>
  409ae8:	mov	w1, #0x6d01                	// #27905
  409aec:	add	x2, sp, #0x8
  409af0:	movk	w1, #0x4008, lsl #16
  409af4:	bl	404db0 <ioctl@plt>
  409af8:	tbz	w0, #31, 409b48 <wcrtomb@plt+0x4d48>
  409afc:	ldr	w0, [x19, #464]
  409b00:	mov	w8, #0x40000000            	// #1073741824
  409b04:	cmp	w0, w8
  409b08:	b.lt	409b38 <wcrtomb@plt+0x4d38>  // b.tstop
  409b0c:	mov	w8, #0xc0000000            	// #-1073741824
  409b10:	add	w0, w0, w8
  409b14:	mov	x1, xzr
  409b18:	mov	w2, wzr
  409b1c:	bl	4273ac <wcrtomb@plt+0x225ac>
  409b20:	cbz	x0, 409b48 <wcrtomb@plt+0x4d48>
  409b24:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  409b28:	ldr	x8, [x8, #176]
  409b2c:	ldr	x0, [x8]
  409b30:	bl	426594 <wcrtomb@plt+0x21794>
  409b34:	b	409cd8 <wcrtomb@plt+0x4ed8>
  409b38:	mov	x1, xzr
  409b3c:	mov	w2, wzr
  409b40:	bl	404370 <lseek@plt>
  409b44:	cbnz	x0, 409b24 <wcrtomb@plt+0x4d24>
  409b48:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409b4c:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409b50:	mov	w8, #0x1                   	// #1
  409b54:	str	wzr, [x9, #3448]
  409b58:	strb	w8, [x10, #3512]
  409b5c:	bl	405a64 <wcrtomb@plt+0xc64>
  409b60:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409b64:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409b68:	adrp	x22, 44c000 <_obstack_memory_used@@Base+0x10808>
  409b6c:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409b70:	add	x19, x19, #0xde8
  409b74:	add	x20, x20, #0xe60
  409b78:	add	x22, x22, #0x4e9
  409b7c:	adrp	x28, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409b80:	mov	w23, #0x2                   	// #2
  409b84:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409b88:	add	x24, x24, #0xdd0
  409b8c:	mov	x0, x19
  409b90:	mov	x1, x20
  409b94:	mov	w2, wzr
  409b98:	bl	416490 <wcrtomb@plt+0x11690>
  409b9c:	mov	w25, w0
  409ba0:	cmp	w0, #0x5
  409ba4:	b.ne	409c14 <wcrtomb@plt+0x4e14>  // b.any
  409ba8:	mov	x26, xzr
  409bac:	ldr	x0, [x19]
  409bb0:	bl	40587c <wcrtomb@plt+0xa7c>
  409bb4:	mov	x0, x19
  409bb8:	mov	x1, x20
  409bbc:	mov	w2, wzr
  409bc0:	bl	416490 <wcrtomb@plt+0x11690>
  409bc4:	cmp	w0, #0x5
  409bc8:	add	x26, x26, #0x1
  409bcc:	b.eq	409bac <wcrtomb@plt+0x4dac>  // b.none
  409bd0:	ldr	x8, [x21, #496]
  409bd4:	mov	w25, w0
  409bd8:	cbz	x8, 409be0 <wcrtomb@plt+0x4de0>
  409bdc:	blr	x8
  409be0:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  409be4:	mov	w4, #0x5                   	// #5
  409be8:	mov	x0, xzr
  409bec:	add	x1, x1, #0x4be
  409bf0:	mov	x2, x22
  409bf4:	mov	x3, x26
  409bf8:	bl	404ad0 <dcngettext@plt>
  409bfc:	mov	x2, x0
  409c00:	mov	w0, wzr
  409c04:	mov	w1, wzr
  409c08:	mov	w3, w26
  409c0c:	bl	4041d0 <error@plt>
  409c10:	str	w23, [x28, #2944]
  409c14:	cmp	w25, #0x4
  409c18:	b.eq	409cc4 <wcrtomb@plt+0x4ec4>  // b.none
  409c1c:	ldr	x0, [x27, #3560]
  409c20:	cmp	w25, #0x3
  409c24:	b.ne	409ca4 <wcrtomb@plt+0x4ea4>  // b.any
  409c28:	bl	40587c <wcrtomb@plt+0xa7c>
  409c2c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409c30:	ldrb	w8, [x8, #3661]
  409c34:	cbnz	w8, 409b8c <wcrtomb@plt+0x4d8c>
  409c38:	mov	x0, x19
  409c3c:	mov	x1, x20
  409c40:	mov	w2, wzr
  409c44:	bl	416490 <wcrtomb@plt+0x11690>
  409c48:	cmp	w0, #0x3
  409c4c:	b.eq	409cc4 <wcrtomb@plt+0x4ec4>  // b.none
  409c50:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409c54:	ldrb	w8, [x8, #152]
  409c58:	tbz	w8, #0, 409b8c <wcrtomb@plt+0x4d8c>
  409c5c:	ldr	x8, [x21, #496]
  409c60:	cbz	x8, 409c68 <wcrtomb@plt+0x4e68>
  409c64:	blr	x8
  409c68:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  409c6c:	mov	w2, #0x5                   	// #5
  409c70:	mov	x0, xzr
  409c74:	add	x1, x1, #0x515
  409c78:	bl	404bd0 <dcgettext@plt>
  409c7c:	mov	x25, x0
  409c80:	bl	405508 <wcrtomb@plt+0x708>
  409c84:	add	x1, sp, #0x8
  409c88:	bl	43401c <argp_parse@@Base+0x5360>
  409c8c:	mov	x3, x0
  409c90:	mov	w0, wzr
  409c94:	mov	w1, wzr
  409c98:	mov	x2, x25
  409c9c:	bl	4041d0 <error@plt>
  409ca0:	b	409b8c <wcrtomb@plt+0x4d8c>
  409ca4:	mov	w3, #0x1                   	// #1
  409ca8:	mov	x1, x20
  409cac:	mov	x2, x24
  409cb0:	bl	4168bc <wcrtomb@plt+0x11abc>
  409cb4:	bl	4090c8 <wcrtomb@plt+0x42c8>
  409cb8:	mov	x0, x20
  409cbc:	bl	420d00 <wcrtomb@plt+0x1bf00>
  409cc0:	b	409b8c <wcrtomb@plt+0x4d8c>
  409cc4:	mov	w8, #0x1                   	// #1
  409cc8:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409ccc:	str	w8, [x9, #3448]
  409cd0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409cd4:	strb	wzr, [x8, #3512]
  409cd8:	ldp	x20, x19, [sp, #112]
  409cdc:	ldp	x22, x21, [sp, #96]
  409ce0:	ldp	x24, x23, [sp, #80]
  409ce4:	ldp	x26, x25, [sp, #64]
  409ce8:	ldp	x28, x27, [sp, #48]
  409cec:	ldp	x29, x30, [sp, #32]
  409cf0:	add	sp, sp, #0x80
  409cf4:	ret
  409cf8:	stp	x29, x30, [sp, #-32]!
  409cfc:	str	x19, [sp, #16]
  409d00:	mov	x29, sp
  409d04:	mov	x19, x0
  409d08:	bl	419588 <wcrtomb@plt+0x14788>
  409d0c:	cbz	w0, 409d2c <wcrtomb@plt+0x4f2c>
  409d10:	bl	404ce0 <__errno_location@plt>
  409d14:	ldr	w8, [x0]
  409d18:	mov	x0, x19
  409d1c:	cmp	w8, #0x2
  409d20:	b.ne	409d34 <wcrtomb@plt+0x4f34>  // b.any
  409d24:	bl	4266f8 <wcrtomb@plt+0x218f8>
  409d28:	b	409d38 <wcrtomb@plt+0x4f38>
  409d2c:	mov	w0, #0x1                   	// #1
  409d30:	b	409d44 <wcrtomb@plt+0x4f44>
  409d34:	bl	4266e4 <wcrtomb@plt+0x218e4>
  409d38:	mov	w0, #0x1                   	// #1
  409d3c:	bl	420c68 <wcrtomb@plt+0x1be68>
  409d40:	mov	w0, wzr
  409d44:	ldr	x19, [sp, #16]
  409d48:	ldp	x29, x30, [sp], #32
  409d4c:	ret
  409d50:	stp	x29, x30, [sp, #-64]!
  409d54:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409d58:	stp	x22, x21, [sp, #32]
  409d5c:	stp	x20, x19, [sp, #48]
  409d60:	add	x8, x8, #0xe60
  409d64:	ldr	x19, [x8, #136]
  409d68:	mov	x20, x0
  409d6c:	mov	x0, x8
  409d70:	str	x23, [sp, #16]
  409d74:	mov	x29, sp
  409d78:	bl	404fb8 <wcrtomb@plt+0x1b8>
  409d7c:	cbz	x19, 409dd0 <wcrtomb@plt+0x4fd0>
  409d80:	adrp	x23, 409000 <wcrtomb@plt+0x4200>
  409d84:	add	x23, x23, #0xf28
  409d88:	bl	405574 <wcrtomb@plt+0x774>
  409d8c:	cbz	x0, 409de4 <wcrtomb@plt+0x4fe4>
  409d90:	mov	x21, x0
  409d94:	bl	4058c0 <wcrtomb@plt+0xac0>
  409d98:	cmp	x0, x19
  409d9c:	csel	x22, x19, x0, hi  // hi = pmore
  409da0:	mov	x0, x22
  409da4:	mov	x1, x21
  409da8:	blr	x20
  409dac:	add	x8, x21, x22
  409db0:	cmp	w0, #0x0
  409db4:	sub	x0, x8, #0x1
  409db8:	csel	x20, x23, x20, eq  // eq = none
  409dbc:	bl	40587c <wcrtomb@plt+0xa7c>
  409dc0:	sub	x19, x19, x22
  409dc4:	mov	x0, x19
  409dc8:	bl	405058 <wcrtomb@plt+0x258>
  409dcc:	cbnz	x19, 409d88 <wcrtomb@plt+0x4f88>
  409dd0:	ldp	x20, x19, [sp, #48]
  409dd4:	ldp	x22, x21, [sp, #32]
  409dd8:	ldr	x23, [sp, #16]
  409ddc:	ldp	x29, x30, [sp], #64
  409de0:	b	404fcc <wcrtomb@plt+0x1cc>
  409de4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  409de8:	ldr	x8, [x8, #496]
  409dec:	cbz	x8, 409df4 <wcrtomb@plt+0x4ff4>
  409df0:	blr	x8
  409df4:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  409df8:	add	x1, x1, #0x582
  409dfc:	mov	w2, #0x5                   	// #5
  409e00:	mov	x0, xzr
  409e04:	bl	404bd0 <dcgettext@plt>
  409e08:	mov	x2, x0
  409e0c:	mov	w0, wzr
  409e10:	mov	w1, wzr
  409e14:	bl	4041d0 <error@plt>
  409e18:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409e1c:	mov	w9, #0x2                   	// #2
  409e20:	str	w9, [x8, #2944]
  409e24:	ldp	x20, x19, [sp, #48]
  409e28:	ldp	x22, x21, [sp, #32]
  409e2c:	ldr	x23, [sp, #16]
  409e30:	ldp	x29, x30, [sp], #64
  409e34:	ret
  409e38:	stp	x29, x30, [sp, #-48]!
  409e3c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409e40:	stp	x22, x21, [sp, #16]
  409e44:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409e48:	ldr	w8, [x8, #1448]
  409e4c:	mov	x21, x1
  409e50:	ldr	x1, [x22, #1440]
  409e54:	stp	x20, x19, [sp, #32]
  409e58:	mov	x19, x0
  409e5c:	mov	w0, w8
  409e60:	mov	x2, x19
  409e64:	mov	x29, sp
  409e68:	bl	4196d4 <wcrtomb@plt+0x148d4>
  409e6c:	cmp	x0, x19
  409e70:	b.ne	409eb0 <wcrtomb@plt+0x50b0>  // b.any
  409e74:	ldr	x1, [x22, #1440]
  409e78:	mov	x0, x21
  409e7c:	mov	x2, x19
  409e80:	bl	4046b0 <bcmp@plt>
  409e84:	cbz	w0, 409ef8 <wcrtomb@plt+0x50f8>
  409e88:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  409e8c:	add	x1, x1, #0x5dd
  409e90:	mov	w2, #0x5                   	// #5
  409e94:	mov	x0, xzr
  409e98:	bl	404bd0 <dcgettext@plt>
  409e9c:	mov	x1, x0
  409ea0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409ea4:	add	x0, x0, #0xe60
  409ea8:	bl	408ff0 <wcrtomb@plt+0x41f0>
  409eac:	b	409f14 <wcrtomb@plt+0x5114>
  409eb0:	mov	x20, x0
  409eb4:	cmn	x0, #0x1
  409eb8:	b.eq	409f00 <wcrtomb@plt+0x5100>  // b.none
  409ebc:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  409ec0:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  409ec4:	add	x1, x1, #0x59c
  409ec8:	add	x2, x2, #0x5bc
  409ecc:	mov	w4, #0x5                   	// #5
  409ed0:	mov	x0, xzr
  409ed4:	mov	x3, x19
  409ed8:	bl	404ad0 <dcngettext@plt>
  409edc:	mov	x1, x0
  409ee0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409ee4:	add	x0, x0, #0xe60
  409ee8:	mov	x2, x20
  409eec:	mov	x3, x19
  409ef0:	bl	408ff0 <wcrtomb@plt+0x41f0>
  409ef4:	b	409f14 <wcrtomb@plt+0x5114>
  409ef8:	mov	w0, #0x1                   	// #1
  409efc:	b	409f18 <wcrtomb@plt+0x5118>
  409f00:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409f04:	ldr	x0, [x8, #3688]
  409f08:	bl	426258 <wcrtomb@plt+0x21458>
  409f0c:	mov	w0, #0x1                   	// #1
  409f10:	bl	420c68 <wcrtomb@plt+0x1be68>
  409f14:	mov	w0, wzr
  409f18:	ldp	x20, x19, [sp, #32]
  409f1c:	ldp	x22, x21, [sp, #16]
  409f20:	ldp	x29, x30, [sp], #48
  409f24:	ret
  409f28:	mov	w0, #0x1                   	// #1
  409f2c:	ret
  409f30:	stp	x29, x30, [sp, #-64]!
  409f34:	stp	x22, x21, [sp, #32]
  409f38:	mov	x21, x0
  409f3c:	mov	w0, #0x28                  	// #40
  409f40:	str	x23, [sp, #16]
  409f44:	stp	x20, x19, [sp, #48]
  409f48:	mov	x29, sp
  409f4c:	mov	x19, x2
  409f50:	mov	w20, w1
  409f54:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  409f58:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409f5c:	ldr	x8, [x23, #1456]
  409f60:	mov	x22, x0
  409f64:	str	x21, [x0]
  409f68:	str	w20, [x0, #16]
  409f6c:	stp	x19, x8, [x0, #24]
  409f70:	mov	x0, x21
  409f74:	bl	404170 <strlen@plt>
  409f78:	str	x0, [x22, #8]
  409f7c:	str	x22, [x23, #1456]
  409f80:	ldp	x20, x19, [sp, #48]
  409f84:	ldp	x22, x21, [sp, #32]
  409f88:	ldr	x23, [sp, #16]
  409f8c:	ldp	x29, x30, [sp], #64
  409f90:	ret
  409f94:	stp	x29, x30, [sp, #-48]!
  409f98:	stp	x22, x21, [sp, #16]
  409f9c:	stp	x20, x19, [sp, #32]
  409fa0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  409fa4:	ldr	w8, [x8, #132]
  409fa8:	mov	x29, sp
  409fac:	cbz	w8, 409fbc <wcrtomb@plt+0x51bc>
  409fb0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  409fb4:	ldrb	w8, [x8, #152]
  409fb8:	tbnz	w8, #2, 409fcc <wcrtomb@plt+0x51cc>
  409fbc:	ldp	x20, x19, [sp, #32]
  409fc0:	ldp	x22, x21, [sp, #16]
  409fc4:	ldp	x29, x30, [sp], #48
  409fc8:	ret
  409fcc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  409fd0:	ldr	x8, [x8, #496]
  409fd4:	mov	x19, x2
  409fd8:	mov	x20, x1
  409fdc:	mov	x21, x0
  409fe0:	cbz	x8, 409fe8 <wcrtomb@plt+0x51e8>
  409fe4:	blr	x8
  409fe8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  409fec:	add	x1, x1, #0x64c
  409ff0:	mov	w2, #0x5                   	// #5
  409ff4:	mov	x0, xzr
  409ff8:	bl	404bd0 <dcgettext@plt>
  409ffc:	mov	x22, x0
  40a000:	mov	x0, x21
  40a004:	bl	4398cc <argp_parse@@Base+0xac10>
  40a008:	mov	x21, x0
  40a00c:	mov	w0, #0x1                   	// #1
  40a010:	mov	x1, x20
  40a014:	bl	439548 <argp_parse@@Base+0xa88c>
  40a018:	mov	x2, x22
  40a01c:	mov	x3, x21
  40a020:	mov	x5, x19
  40a024:	ldp	x20, x19, [sp, #32]
  40a028:	ldp	x22, x21, [sp, #16]
  40a02c:	mov	x4, x0
  40a030:	mov	w0, wzr
  40a034:	mov	w1, wzr
  40a038:	ldp	x29, x30, [sp], #48
  40a03c:	b	4041d0 <error@plt>
  40a040:	stp	x29, x30, [sp, #-64]!
  40a044:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40a048:	stp	x24, x23, [sp, #16]
  40a04c:	ldr	x23, [x8, #1456]
  40a050:	stp	x22, x21, [sp, #32]
  40a054:	stp	x20, x19, [sp, #48]
  40a058:	mov	x29, sp
  40a05c:	cbz	x23, 40a0ac <wcrtomb@plt+0x52ac>
  40a060:	mov	x19, x1
  40a064:	mov	x20, x0
  40a068:	adrp	x24, 46b000 <argp_program_version_hook@@Base+0x458>
  40a06c:	ldr	x1, [x23]
  40a070:	ldr	w2, [x24, #196]
  40a074:	mov	x0, x20
  40a078:	bl	40a0e0 <wcrtomb@plt+0x52e0>
  40a07c:	tbnz	w0, #31, 40a0a4 <wcrtomb@plt+0x52a4>
  40a080:	ldr	x8, [x23, #24]
  40a084:	mov	w21, w0
  40a088:	cbz	x8, 40a0b4 <wcrtomb@plt+0x52b4>
  40a08c:	mov	w0, w21
  40a090:	blr	x8
  40a094:	mov	w22, w0
  40a098:	mov	w0, w21
  40a09c:	bl	4047a0 <close@plt>
  40a0a0:	tbnz	w22, #0, 40a0bc <wcrtomb@plt+0x52bc>
  40a0a4:	ldr	x23, [x23, #32]
  40a0a8:	cbnz	x23, 40a06c <wcrtomb@plt+0x526c>
  40a0ac:	mov	w0, wzr
  40a0b0:	b	40a0cc <wcrtomb@plt+0x52cc>
  40a0b4:	mov	w0, w21
  40a0b8:	bl	4047a0 <close@plt>
  40a0bc:	cbz	x19, 40a0c8 <wcrtomb@plt+0x52c8>
  40a0c0:	ldr	x8, [x23]
  40a0c4:	str	x8, [x19]
  40a0c8:	ldr	w0, [x23, #16]
  40a0cc:	ldp	x20, x19, [sp, #48]
  40a0d0:	ldp	x22, x21, [sp, #32]
  40a0d4:	ldp	x24, x23, [sp, #16]
  40a0d8:	ldp	x29, x30, [sp], #64
  40a0dc:	ret
  40a0e0:	stp	x29, x30, [sp, #-64]!
  40a0e4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40a0e8:	ldrb	w9, [x8, #1480]
  40a0ec:	stp	x22, x21, [sp, #32]
  40a0f0:	stp	x20, x19, [sp, #48]
  40a0f4:	mov	w19, w2
  40a0f8:	mov	x20, x1
  40a0fc:	mov	x21, x0
  40a100:	str	x23, [sp, #16]
  40a104:	mov	x29, sp
  40a108:	tbnz	w9, #0, 40a130 <wcrtomb@plt+0x5330>
  40a10c:	mov	w9, #0x1                   	// #1
  40a110:	mov	w0, #0x2                   	// #2
  40a114:	strb	w9, [x8, #1480]
  40a118:	bl	404790 <strerror@plt>
  40a11c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  40a120:	add	x1, x1, #0x3ee
  40a124:	mov	w2, #0x5                   	// #5
  40a128:	mov	x0, xzr
  40a12c:	bl	404bd0 <dcgettext@plt>
  40a130:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x2b808>
  40a134:	add	x8, x21, #0x198
  40a138:	add	x9, x9, #0x798
  40a13c:	cmp	x21, #0x0
  40a140:	csel	x23, x9, x8, eq  // eq = none
  40a144:	ldr	w0, [x23]
  40a148:	mov	x1, x20
  40a14c:	mov	w2, w19
  40a150:	bl	404cc0 <openat@plt>
  40a154:	mov	w22, w0
  40a158:	tbz	w0, #31, 40a168 <wcrtomb@plt+0x5368>
  40a15c:	mov	x0, x21
  40a160:	bl	40b340 <wcrtomb@plt+0x6540>
  40a164:	tbnz	w0, #0, 40a144 <wcrtomb@plt+0x5344>
  40a168:	mov	w0, w22
  40a16c:	ldp	x20, x19, [sp, #48]
  40a170:	ldp	x22, x21, [sp, #32]
  40a174:	ldr	x23, [sp, #16]
  40a178:	ldp	x29, x30, [sp], #64
  40a17c:	ret
  40a180:	sub	sp, sp, #0x40
  40a184:	add	x1, sp, #0x4
  40a188:	mov	w2, #0x2b                  	// #43
  40a18c:	stp	x29, x30, [sp, #48]
  40a190:	add	x29, sp, #0x30
  40a194:	bl	404b40 <read@plt>
  40a198:	cmp	x0, #0x2b
  40a19c:	b.ne	40a1c0 <wcrtomb@plt+0x53c0>  // b.any
  40a1a0:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40a1a4:	add	x1, x1, #0x676
  40a1a8:	add	x0, sp, #0x4
  40a1ac:	mov	w2, #0x2b                  	// #43
  40a1b0:	bl	4046b0 <bcmp@plt>
  40a1b4:	cmp	w0, #0x0
  40a1b8:	cset	w0, eq  // eq = none
  40a1bc:	b	40a1c4 <wcrtomb@plt+0x53c4>
  40a1c0:	mov	w0, wzr
  40a1c4:	ldp	x29, x30, [sp, #48]
  40a1c8:	add	sp, sp, #0x40
  40a1cc:	ret
  40a1d0:	mov	x8, x0
  40a1d4:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40a1d8:	mov	x5, x2
  40a1dc:	lsr	x0, x0, #63
  40a1e0:	add	x6, x6, #0x6a2
  40a1e4:	mov	w2, #0x8                   	// #8
  40a1e8:	mov	x4, x1
  40a1ec:	mov	x1, x8
  40a1f0:	mov	x3, xzr
  40a1f4:	b	40a1f8 <wcrtomb@plt+0x53f8>
  40a1f8:	sub	sp, sp, #0xd0
  40a1fc:	stp	x22, x21, [sp, #176]
  40a200:	adrp	x22, 46b000 <argp_program_version_hook@@Base+0x458>
  40a204:	ldr	w8, [x22, #304]
  40a208:	stp	x28, x27, [sp, #128]
  40a20c:	stp	x26, x25, [sp, #144]
  40a210:	stp	x24, x23, [sp, #160]
  40a214:	stp	x20, x19, [sp, #192]
  40a218:	mov	x21, x6
  40a21c:	mov	x19, x5
  40a220:	mov	x20, x4
  40a224:	mov	x25, x3
  40a228:	mov	x23, x1
  40a22c:	mov	w27, w0
  40a230:	stp	x29, x30, [sp, #112]
  40a234:	add	x29, sp, #0x70
  40a238:	cbnz	w0, 40a25c <wcrtomb@plt+0x545c>
  40a23c:	sub	x9, x19, #0x1
  40a240:	mov	x10, #0xffffffffffffffff    	// #-1
  40a244:	add	x11, x9, x9, lsl #1
  40a248:	lsl	x12, x10, x11
  40a24c:	cmp	x11, #0x40
  40a250:	csinv	x10, x10, x12, cs  // cs = hs, nlast
  40a254:	cmp	x10, x23
  40a258:	b.cs	40a49c <wcrtomb@plt+0x569c>  // b.hs, b.nlast
  40a25c:	orr	w26, w8, #0x4
  40a260:	cmp	w26, #0x6
  40a264:	b.ne	40a2b8 <wcrtomb@plt+0x54b8>  // b.any
  40a268:	sub	x24, x19, #0x1
  40a26c:	cmp	w27, #0x0
  40a270:	mov	x8, #0xffffffffffffffff    	// #-1
  40a274:	lsl	x10, x24, #3
  40a278:	cinv	x9, x23, ne  // ne = any
  40a27c:	lsl	x11, x8, x10
  40a280:	cmp	x10, #0x40
  40a284:	csinv	x8, x8, x11, cs  // cs = hs, nlast
  40a288:	cmp	x9, x8
  40a28c:	b.ls	40a470 <wcrtomb@plt+0x5670>  // b.plast
  40a290:	cbz	w27, 40a2a4 <wcrtomb@plt+0x54a4>
  40a294:	lsl	x28, x2, #3
  40a298:	add	x8, x24, x24, lsl #1
  40a29c:	cmp	x28, x8
  40a2a0:	b.ls	40a4c4 <wcrtomb@plt+0x56c4>  // b.plast
  40a2a4:	lsl	x8, x19, #3
  40a2a8:	sub	x8, x8, #0x8
  40a2ac:	cmp	x8, #0x3f
  40a2b0:	mov	x28, #0xffffffffffffffff    	// #-1
  40a2b4:	b	40a2cc <wcrtomb@plt+0x54cc>
  40a2b8:	add	x8, x19, x19, lsl #1
  40a2bc:	sub	x8, x8, #0x3
  40a2c0:	cmp	x8, #0x3f
  40a2c4:	mov	x28, #0xffffffffffffffff    	// #-1
  40a2c8:	mov	x25, xzr
  40a2cc:	str	x2, [sp]
  40a2d0:	b.hi	40a2dc <wcrtomb@plt+0x54dc>  // b.pmore
  40a2d4:	lsl	x8, x28, x8
  40a2d8:	mvn	x28, x8
  40a2dc:	sub	x1, x29, #0x30
  40a2e0:	mov	x0, x28
  40a2e4:	bl	43401c <argp_parse@@Base+0x5360>
  40a2e8:	cmp	w26, #0x6
  40a2ec:	mov	x24, x0
  40a2f0:	b.ne	40a3f8 <wcrtomb@plt+0x55f8>  // b.any
  40a2f4:	adds	x8, x28, #0x1
  40a2f8:	lsr	x9, x28, #1
  40a2fc:	add	x10, sp, #0x28
  40a300:	csinc	x0, x8, x9, cc  // cc = lo, ul, last
  40a304:	orr	x1, x10, #0x1
  40a308:	bl	43401c <argp_parse@@Base+0x5360>
  40a30c:	mov	x26, x0
  40a310:	mov	w8, #0x2d                  	// #45
  40a314:	strb	w8, [x26, #-1]!
  40a318:	cbz	w27, 40a404 <wcrtomb@plt+0x5604>
  40a31c:	sub	x8, x29, #0x18
  40a320:	neg	x0, x23
  40a324:	orr	x1, x8, #0x1
  40a328:	bl	43401c <argp_parse@@Base+0x5360>
  40a32c:	mov	x23, x0
  40a330:	mov	w8, #0x2d                  	// #45
  40a334:	strb	w8, [x23, #-1]!
  40a338:	cbz	x25, 40a418 <wcrtomb@plt+0x5618>
  40a33c:	add	x0, sp, #0x24
  40a340:	blr	x25
  40a344:	ldr	w8, [x22, #304]
  40a348:	ldr	w10, [sp, #36]
  40a34c:	and	x9, x0, x28
  40a350:	add	x11, sp, #0xc
  40a354:	cmp	w8, #0x6
  40a358:	cset	w8, eq  // eq = none
  40a35c:	tst	w10, w8
  40a360:	cneg	x25, x9, ne  // ne = any
  40a364:	and	w12, w10, w8
  40a368:	orr	x1, x11, #0x1
  40a36c:	mov	x0, x25
  40a370:	str	w12, [sp, #36]
  40a374:	bl	43401c <argp_parse@@Base+0x5360>
  40a378:	ldr	w8, [sp, #36]
  40a37c:	mov	x27, x0
  40a380:	cbz	w8, 40a38c <wcrtomb@plt+0x558c>
  40a384:	mov	w8, #0x2d                  	// #45
  40a388:	strb	w8, [x27, #-1]!
  40a38c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40a390:	ldr	x8, [x8, #496]
  40a394:	cbz	x8, 40a39c <wcrtomb@plt+0x559c>
  40a398:	blr	x8
  40a39c:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40a3a0:	add	x1, x1, #0x752
  40a3a4:	mov	w2, #0x5                   	// #5
  40a3a8:	mov	x0, xzr
  40a3ac:	bl	404bd0 <dcgettext@plt>
  40a3b0:	mov	x2, x0
  40a3b4:	mov	w0, wzr
  40a3b8:	mov	w1, wzr
  40a3bc:	mov	x3, x23
  40a3c0:	mov	x4, x21
  40a3c4:	mov	x5, x26
  40a3c8:	mov	x6, x24
  40a3cc:	mov	x7, x27
  40a3d0:	bl	4041d0 <error@plt>
  40a3d4:	ldr	w0, [sp, #36]
  40a3d8:	ldr	x2, [sp]
  40a3dc:	mov	x1, x25
  40a3e0:	mov	x3, xzr
  40a3e4:	mov	x4, x20
  40a3e8:	mov	x5, x19
  40a3ec:	mov	x6, x21
  40a3f0:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40a3f4:	b	40a548 <wcrtomb@plt+0x5748>
  40a3f8:	adrp	x26, 453000 <_obstack_memory_used@@Base+0x17808>
  40a3fc:	add	x26, x26, #0x6b8
  40a400:	cbnz	w27, 40a31c <wcrtomb@plt+0x551c>
  40a404:	sub	x1, x29, #0x18
  40a408:	mov	x0, x23
  40a40c:	bl	43401c <argp_parse@@Base+0x5360>
  40a410:	mov	x23, x0
  40a414:	cbnz	x25, 40a33c <wcrtomb@plt+0x553c>
  40a418:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40a41c:	ldr	x8, [x8, #496]
  40a420:	cbz	x8, 40a428 <wcrtomb@plt+0x5628>
  40a424:	blr	x8
  40a428:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40a42c:	add	x1, x1, #0x783
  40a430:	mov	w2, #0x5                   	// #5
  40a434:	mov	x0, xzr
  40a438:	bl	404bd0 <dcgettext@plt>
  40a43c:	mov	x2, x0
  40a440:	mov	w0, wzr
  40a444:	mov	w1, wzr
  40a448:	mov	x3, x23
  40a44c:	mov	x4, x21
  40a450:	mov	x5, x26
  40a454:	mov	x6, x24
  40a458:	bl	4041d0 <error@plt>
  40a45c:	mov	w0, wzr
  40a460:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40a464:	mov	w9, #0x2                   	// #2
  40a468:	str	w9, [x8, #2944]
  40a46c:	b	40a548 <wcrtomb@plt+0x5748>
  40a470:	cmp	w27, #0x0
  40a474:	mov	w8, #0xffffff80            	// #-128
  40a478:	neg	w9, w27
  40a47c:	csinv	w8, w8, wzr, eq  // eq = none
  40a480:	strb	w8, [x20]
  40a484:	lsl	x8, x9, #56
  40a488:	strb	w23, [x20, x24]
  40a48c:	subs	x24, x24, #0x1
  40a490:	orr	x23, x8, x23, lsr #8
  40a494:	b.ne	40a488 <wcrtomb@plt+0x5688>  // b.any
  40a498:	b	40a544 <wcrtomb@plt+0x5744>
  40a49c:	sub	x8, x20, #0x2
  40a4a0:	strb	wzr, [x20, x9]
  40a4a4:	mov	w9, #0x30                  	// #48
  40a4a8:	bfxil	w9, w23, #0, #3
  40a4ac:	strb	w9, [x8, x19]
  40a4b0:	sub	x19, x19, #0x1
  40a4b4:	cmp	x19, #0x1
  40a4b8:	lsr	x23, x23, #3
  40a4bc:	b.ne	40a4a4 <wcrtomb@plt+0x56a4>  // b.any
  40a4c0:	b	40a544 <wcrtomb@plt+0x5744>
  40a4c4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40a4c8:	ldrb	w9, [x8, #1484]
  40a4cc:	tbnz	w9, #0, 40a50c <wcrtomb@plt+0x570c>
  40a4d0:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40a4d4:	ldr	x9, [x9, #496]
  40a4d8:	mov	w10, #0x1                   	// #1
  40a4dc:	strb	w10, [x8, #1484]
  40a4e0:	cbz	x9, 40a4e8 <wcrtomb@plt+0x56e8>
  40a4e4:	blr	x9
  40a4e8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40a4ec:	add	x1, x1, #0x730
  40a4f0:	mov	w2, #0x5                   	// #5
  40a4f4:	mov	x0, xzr
  40a4f8:	bl	404bd0 <dcgettext@plt>
  40a4fc:	mov	x2, x0
  40a500:	mov	w0, wzr
  40a504:	mov	w1, wzr
  40a508:	bl	4041d0 <error@plt>
  40a50c:	mov	x8, #0xffffffffffffffff    	// #-1
  40a510:	cmp	x28, #0x40
  40a514:	lsl	x9, x8, x28
  40a518:	csinv	x8, x8, x9, cs  // cs = hs, nlast
  40a51c:	and	x8, x8, x23
  40a520:	sub	x9, x20, #0x2
  40a524:	strb	wzr, [x20, x24]
  40a528:	mov	w10, #0x30                  	// #48
  40a52c:	bfxil	w10, w8, #0, #3
  40a530:	strb	w10, [x9, x19]
  40a534:	sub	x19, x19, #0x1
  40a538:	cmp	x19, #0x1
  40a53c:	lsr	x8, x8, #3
  40a540:	b.ne	40a528 <wcrtomb@plt+0x5728>  // b.any
  40a544:	mov	w0, #0x1                   	// #1
  40a548:	ldp	x20, x19, [sp, #192]
  40a54c:	ldp	x22, x21, [sp, #176]
  40a550:	ldp	x24, x23, [sp, #160]
  40a554:	ldp	x26, x25, [sp, #144]
  40a558:	ldp	x28, x27, [sp, #128]
  40a55c:	ldp	x29, x30, [sp, #112]
  40a560:	and	w0, w0, #0x1
  40a564:	add	sp, sp, #0xd0
  40a568:	ret
  40a56c:	mov	x8, x0
  40a570:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40a574:	mov	x5, x2
  40a578:	lsr	x0, x0, #63
  40a57c:	add	x6, x6, #0x6a8
  40a580:	mov	w2, #0x8                   	// #8
  40a584:	mov	x4, x1
  40a588:	mov	x1, x8
  40a58c:	mov	x3, xzr
  40a590:	b	40a1f8 <wcrtomb@plt+0x53f8>
  40a594:	stp	x29, x30, [sp, #-32]!
  40a598:	str	x19, [sp, #16]
  40a59c:	mov	x29, sp
  40a5a0:	bl	405574 <wcrtomb@plt+0x774>
  40a5a4:	mov	w2, #0x200                 	// #512
  40a5a8:	mov	w1, wzr
  40a5ac:	mov	x19, x0
  40a5b0:	bl	4045e0 <memset@plt>
  40a5b4:	mov	x0, x19
  40a5b8:	bl	40587c <wcrtomb@plt+0xa7c>
  40a5bc:	bl	405574 <wcrtomb@plt+0x774>
  40a5c0:	mov	x19, x0
  40a5c4:	bl	4058c0 <wcrtomb@plt+0xac0>
  40a5c8:	mov	x2, x0
  40a5cc:	mov	x0, x19
  40a5d0:	mov	w1, wzr
  40a5d4:	bl	4045e0 <memset@plt>
  40a5d8:	mov	x0, x19
  40a5dc:	ldr	x19, [sp, #16]
  40a5e0:	ldp	x29, x30, [sp], #32
  40a5e4:	b	40587c <wcrtomb@plt+0xa7c>
  40a5e8:	stp	x29, x30, [sp, #-48]!
  40a5ec:	stp	x22, x21, [sp, #16]
  40a5f0:	stp	x20, x19, [sp, #32]
  40a5f4:	mov	x29, sp
  40a5f8:	mov	x20, x2
  40a5fc:	mov	x21, x1
  40a600:	mov	x22, x0
  40a604:	bl	405574 <wcrtomb@plt+0x774>
  40a608:	mov	w2, #0x200                 	// #512
  40a60c:	mov	w1, wzr
  40a610:	mov	x19, x0
  40a614:	bl	4045e0 <memset@plt>
  40a618:	mov	x8, xzr
  40a61c:	ldrb	w9, [x22, x8]
  40a620:	cmp	x8, #0x62
  40a624:	strb	w9, [x19, x8]
  40a628:	b.hi	40a634 <wcrtomb@plt+0x5834>  // b.pmore
  40a62c:	add	x8, x8, #0x1
  40a630:	cbnz	w9, 40a61c <wcrtomb@plt+0x581c>
  40a634:	adrp	x22, 46b000 <argp_program_version_hook@@Base+0x458>
  40a638:	ldr	w8, [x22, #304]
  40a63c:	cmp	w8, #0x2
  40a640:	b.ne	40a648 <wcrtomb@plt+0x5848>  // b.any
  40a644:	strb	wzr, [x19, #99]
  40a648:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40a64c:	add	x4, x19, #0x7c
  40a650:	lsr	x0, x21, #63
  40a654:	add	x6, x6, #0x6a2
  40a658:	mov	w2, #0x8                   	// #8
  40a65c:	mov	w5, #0xc                   	// #12
  40a660:	mov	x1, x21
  40a664:	mov	x3, xzr
  40a668:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40a66c:	mov	x8, #0x1ffffffff           	// #8589934591
  40a670:	cmp	x20, x8
  40a674:	csel	x8, x20, x8, cc  // cc = lo, ul, last
  40a678:	cmp	x20, #0x0
  40a67c:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40a680:	csel	x1, xzr, x8, lt  // lt = tstop
  40a684:	add	x4, x19, #0x88
  40a688:	add	x6, x6, #0x6a8
  40a68c:	mov	w2, #0x8                   	// #8
  40a690:	mov	w5, #0xc                   	// #12
  40a694:	mov	w0, wzr
  40a698:	mov	x3, xzr
  40a69c:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40a6a0:	ldr	w8, [x22, #304]
  40a6a4:	add	x4, x19, #0x64
  40a6a8:	sub	w8, w8, #0x3
  40a6ac:	cmp	w8, #0x3
  40a6b0:	b.hi	40a6c4 <wcrtomb@plt+0x58c4>  // b.pmore
  40a6b4:	adrp	x9, 44c000 <_obstack_memory_used@@Base+0x10808>
  40a6b8:	add	x9, x9, #0x9e8
  40a6bc:	ldr	x1, [x9, w8, sxtw #3]
  40a6c0:	b	40a6c8 <wcrtomb@plt+0x58c8>
  40a6c4:	mov	w1, #0x81a4                	// #33188
  40a6c8:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40a6cc:	add	x6, x6, #0x7a3
  40a6d0:	mov	w2, #0x4                   	// #4
  40a6d4:	mov	w5, #0x8                   	// #8
  40a6d8:	mov	w0, wzr
  40a6dc:	mov	x3, xzr
  40a6e0:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40a6e4:	adrp	x3, 40c000 <wcrtomb@plt+0x7200>
  40a6e8:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40a6ec:	add	x4, x19, #0x6c
  40a6f0:	add	x3, x3, #0x274
  40a6f4:	add	x6, x6, #0x7aa
  40a6f8:	mov	w2, #0x4                   	// #4
  40a6fc:	mov	w5, #0x8                   	// #8
  40a700:	mov	w0, wzr
  40a704:	mov	x1, xzr
  40a708:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40a70c:	adrp	x3, 40c000 <wcrtomb@plt+0x7200>
  40a710:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40a714:	add	x4, x19, #0x74
  40a718:	add	x3, x3, #0x2cc
  40a71c:	add	x6, x6, #0x7b7
  40a720:	mov	w2, #0x4                   	// #4
  40a724:	mov	w5, #0x8                   	// #8
  40a728:	mov	w0, wzr
  40a72c:	mov	x1, xzr
  40a730:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40a734:	mov	x9, #0x7375                	// #29557
  40a738:	movk	x9, #0x6174, lsl #16
  40a73c:	movk	x9, #0x72, lsl #32
  40a740:	add	x8, x19, #0x101
  40a744:	movk	x9, #0x3030, lsl #48
  40a748:	str	x9, [x8]
  40a74c:	mov	x0, x19
  40a750:	ldp	x20, x19, [sp, #32]
  40a754:	ldp	x22, x21, [sp, #16]
  40a758:	ldp	x29, x30, [sp], #48
  40a75c:	ret
  40a760:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40a764:	ldr	w8, [x8, #304]
  40a768:	mov	x4, x1
  40a76c:	cmp	w8, #0x6
  40a770:	b.hi	40a78c <wcrtomb@plt+0x598c>  // b.pmore
  40a774:	mov	w9, #0x1                   	// #1
  40a778:	lsl	w8, w9, w8
  40a77c:	mov	w9, #0x58                  	// #88
  40a780:	tst	w8, w9
  40a784:	b.eq	40a78c <wcrtomb@plt+0x598c>  // b.none
  40a788:	and	w0, w0, #0xfff
  40a78c:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40a790:	mov	w1, w0
  40a794:	add	x6, x6, #0x7a3
  40a798:	mov	w2, #0x4                   	// #4
  40a79c:	mov	w5, #0x8                   	// #8
  40a7a0:	mov	w0, wzr
  40a7a4:	mov	x3, xzr
  40a7a8:	b	40a1f8 <wcrtomb@plt+0x53f8>
  40a7ac:	stp	x29, x30, [sp, #-64]!
  40a7b0:	str	x28, [sp, #16]
  40a7b4:	stp	x22, x21, [sp, #32]
  40a7b8:	stp	x20, x19, [sp, #48]
  40a7bc:	mov	x29, sp
  40a7c0:	sub	sp, sp, #0x200
  40a7c4:	ldr	x8, [x1, #360]
  40a7c8:	mov	x20, x2
  40a7cc:	cbnz	x8, 40a874 <wcrtomb@plt+0x5a74>
  40a7d0:	add	x19, x1, #0x158
  40a7d4:	ldr	x8, [x19]
  40a7d8:	mov	x21, x1
  40a7dc:	cbz	x8, 40a874 <wcrtomb@plt+0x5a74>
  40a7e0:	mov	w22, w0
  40a7e4:	mov	x0, x19
  40a7e8:	bl	410d70 <wcrtomb@plt+0xbf70>
  40a7ec:	mov	x0, sp
  40a7f0:	mov	w2, #0x200                 	// #512
  40a7f4:	mov	x1, x20
  40a7f8:	bl	4040f0 <memcpy@plt>
  40a7fc:	tbz	w22, #0, 40a818 <wcrtomb@plt+0x5a18>
  40a800:	adrp	x22, 46b000 <argp_program_version_hook@@Base+0x458>
  40a804:	add	x22, x22, #0xc8
  40a808:	mov	w21, #0x67                  	// #103
  40a80c:	bl	410a30 <wcrtomb@plt+0xbc30>
  40a810:	mov	x20, x0
  40a814:	b	40a844 <wcrtomb@plt+0x5a44>
  40a818:	mov	x0, x21
  40a81c:	bl	4109e4 <wcrtomb@plt+0xbbe4>
  40a820:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40a824:	ldr	w8, [x8, #3640]
  40a828:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  40a82c:	add	x9, x21, #0xb0
  40a830:	add	x10, x10, #0x118
  40a834:	cmp	w8, #0x0
  40a838:	mov	x20, x0
  40a83c:	csel	x22, x9, x10, eq  // eq = none
  40a840:	mov	w21, #0x78                  	// #120
  40a844:	ldr	x2, [x22]
  40a848:	mov	w0, w21
  40a84c:	mov	x1, x20
  40a850:	mov	x3, x19
  40a854:	bl	410ac8 <wcrtomb@plt+0xbcc8>
  40a858:	mov	x0, x20
  40a85c:	bl	4049b0 <free@plt>
  40a860:	bl	405574 <wcrtomb@plt+0x774>
  40a864:	mov	x1, sp
  40a868:	mov	w2, #0x200                 	// #512
  40a86c:	mov	x20, x0
  40a870:	bl	4040f0 <memcpy@plt>
  40a874:	mov	x0, x20
  40a878:	add	sp, sp, #0x200
  40a87c:	ldp	x20, x19, [sp, #48]
  40a880:	ldp	x22, x21, [sp, #32]
  40a884:	ldr	x28, [sp, #16]
  40a888:	ldp	x29, x30, [sp], #64
  40a88c:	ret
  40a890:	sub	sp, sp, #0x60
  40a894:	stp	x24, x23, [sp, #48]
  40a898:	adrp	x24, 46b000 <argp_program_version_hook@@Base+0x458>
  40a89c:	stp	x20, x19, [sp, #80]
  40a8a0:	ldr	w20, [x24, #304]
  40a8a4:	stp	x29, x30, [sp, #32]
  40a8a8:	add	x29, sp, #0x20
  40a8ac:	mov	x19, x0
  40a8b0:	cmp	w20, #0x4
  40a8b4:	stp	x22, x21, [sp, #64]
  40a8b8:	stur	xzr, [x29, #-8]
  40a8bc:	str	xzr, [sp, #16]
  40a8c0:	b.ne	40a8d4 <wcrtomb@plt+0x5ad4>  // b.any
  40a8c4:	ldr	x0, [x19, #8]
  40a8c8:	bl	4245f0 <wcrtomb@plt+0x1f7f0>
  40a8cc:	tbz	w0, #0, 40a92c <wcrtomb@plt+0x5b2c>
  40a8d0:	ldr	w20, [x24, #304]
  40a8d4:	ldr	x21, [x19, #8]
  40a8d8:	cmp	w20, #0x2
  40a8dc:	mov	w8, #0x63                  	// #99
  40a8e0:	cinc	x22, x8, ne  // ne = any
  40a8e4:	mov	x0, x21
  40a8e8:	bl	404170 <strlen@plt>
  40a8ec:	cmp	x22, x0
  40a8f0:	b.cs	40a940 <wcrtomb@plt+0x5b40>  // b.hs, b.nlast
  40a8f4:	sub	w8, w20, #0x1
  40a8f8:	cmp	w8, #0x5
  40a8fc:	b.hi	40b1b8 <wcrtomb@plt+0x63b8>  // b.pmore
  40a900:	adrp	x9, 44c000 <_obstack_memory_used@@Base+0x10808>
  40a904:	add	x9, x9, #0x628
  40a908:	adr	x10, 40a918 <wcrtomb@plt+0x5b18>
  40a90c:	ldrb	w11, [x9, x8]
  40a910:	add	x10, x10, x11, lsl #2
  40a914:	br	x10
  40a918:	mov	w2, #0x4c                  	// #76
  40a91c:	mov	x0, x19
  40a920:	mov	x1, x21
  40a924:	bl	40c38c <wcrtomb@plt+0x758c>
  40a928:	b	40a940 <wcrtomb@plt+0x5b40>
  40a92c:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40a930:	add	x0, x0, #0x992
  40a934:	mov	x1, x19
  40a938:	mov	x2, xzr
  40a93c:	bl	411550 <wcrtomb@plt+0xc750>
  40a940:	mov	x0, x19
  40a944:	bl	40c324 <wcrtomb@plt+0x7524>
  40a948:	mov	x20, x0
  40a94c:	cbz	x20, 40acb0 <wcrtomb@plt+0x5eb0>
  40a950:	mov	x1, x19
  40a954:	ldr	w0, [x1, #112]!
  40a958:	sub	x2, x29, #0x8
  40a95c:	bl	41842c <wcrtomb@plt+0x1362c>
  40a960:	mov	x21, x19
  40a964:	ldr	w0, [x21, #116]!
  40a968:	add	x2, sp, #0x10
  40a96c:	mov	x1, x21
  40a970:	bl	41850c <wcrtomb@plt+0x1370c>
  40a974:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40a978:	ldr	x3, [x8, #88]
  40a97c:	ldur	w0, [x21, #-12]
  40a980:	cbz	x3, 40a9ac <wcrtomb@plt+0x5bac>
  40a984:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40a988:	ldr	w2, [x8, #3664]
  40a98c:	and	w8, w0, #0xf000
  40a990:	cmp	w8, #0x4, lsl #12
  40a994:	cset	w1, eq  // eq = none
  40a998:	mov	x4, xzr
  40a99c:	and	w22, w0, #0xfffff000
  40a9a0:	bl	43486c <argp_parse@@Base+0x5bb0>
  40a9a4:	orr	w0, w0, w22
  40a9a8:	str	w0, [x19, #104]
  40a9ac:	ldr	w8, [x24, #304]
  40a9b0:	and	w9, w0, #0xfff
  40a9b4:	add	x1, x20, #0x64
  40a9b8:	orr	w8, w8, #0x2
  40a9bc:	cmp	w8, #0x3
  40a9c0:	csel	w0, w9, w0, eq  // eq = none
  40a9c4:	bl	40a760 <wcrtomb@plt+0x5960>
  40a9c8:	ldr	w8, [x19, #112]
  40a9cc:	cmp	w8, #0x200, lsl #12
  40a9d0:	b.cc	40a9f8 <wcrtomb@plt+0x5bf8>  // b.lo, b.ul, b.last
  40a9d4:	ldr	w9, [x24, #304]
  40a9d8:	cmp	w9, #0x4
  40a9dc:	b.ne	40a9f8 <wcrtomb@plt+0x5bf8>  // b.any
  40a9e0:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40a9e4:	add	x0, x0, #0x6af
  40a9e8:	mov	x1, x19
  40a9ec:	mov	x2, xzr
  40a9f0:	bl	411550 <wcrtomb@plt+0xc750>
  40a9f4:	mov	w8, wzr
  40a9f8:	adrp	x3, 40c000 <wcrtomb@plt+0x7200>
  40a9fc:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40aa00:	add	x4, x20, #0x6c
  40aa04:	mov	w1, w8
  40aa08:	add	x3, x3, #0x274
  40aa0c:	add	x6, x6, #0x7aa
  40aa10:	mov	w2, #0x4                   	// #4
  40aa14:	mov	w5, #0x8                   	// #8
  40aa18:	mov	w0, wzr
  40aa1c:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40aa20:	tbz	w0, #0, 40acb0 <wcrtomb@plt+0x5eb0>
  40aa24:	ldr	w8, [x21]
  40aa28:	cmp	w8, #0x200, lsl #12
  40aa2c:	b.cc	40aa54 <wcrtomb@plt+0x5c54>  // b.lo, b.ul, b.last
  40aa30:	ldr	w9, [x24, #304]
  40aa34:	cmp	w9, #0x4
  40aa38:	b.ne	40aa54 <wcrtomb@plt+0x5c54>  // b.any
  40aa3c:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40aa40:	add	x0, x0, #0x6b3
  40aa44:	mov	x1, x19
  40aa48:	mov	x2, xzr
  40aa4c:	bl	411550 <wcrtomb@plt+0xc750>
  40aa50:	mov	w8, wzr
  40aa54:	adrp	x3, 40c000 <wcrtomb@plt+0x7200>
  40aa58:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40aa5c:	add	x4, x20, #0x74
  40aa60:	mov	w1, w8
  40aa64:	add	x3, x3, #0x2cc
  40aa68:	add	x6, x6, #0x7b7
  40aa6c:	mov	w2, #0x4                   	// #4
  40aa70:	mov	w5, #0x8                   	// #8
  40aa74:	mov	w0, wzr
  40aa78:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40aa7c:	tbz	w0, #0, 40acb0 <wcrtomb@plt+0x5eb0>
  40aa80:	ldr	x1, [x19, #136]
  40aa84:	lsr	x8, x1, #33
  40aa88:	cbz	x8, 40aab0 <wcrtomb@plt+0x5cb0>
  40aa8c:	ldr	w8, [x24, #304]
  40aa90:	cmp	w8, #0x4
  40aa94:	b.ne	40aab0 <wcrtomb@plt+0x5cb0>  // b.any
  40aa98:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  40aa9c:	add	x0, x0, #0x7cc
  40aaa0:	mov	x1, x19
  40aaa4:	mov	x2, xzr
  40aaa8:	bl	411550 <wcrtomb@plt+0xc750>
  40aaac:	mov	x1, xzr
  40aab0:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40aab4:	add	x4, x20, #0x7c
  40aab8:	lsr	x0, x1, #63
  40aabc:	add	x6, x6, #0x6a2
  40aac0:	mov	w2, #0x8                   	// #8
  40aac4:	mov	w5, #0xc                   	// #12
  40aac8:	mov	x3, xzr
  40aacc:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40aad0:	mov	w8, w0
  40aad4:	mov	x0, xzr
  40aad8:	tbz	w8, #0, 40acb4 <wcrtomb@plt+0x5eb4>
  40aadc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40aae0:	ldr	w8, [x8, #3640]
  40aae4:	cmp	w8, #0x2
  40aae8:	b.eq	40ac4c <wcrtomb@plt+0x5e4c>  // b.none
  40aaec:	cmp	w8, #0x1
  40aaf0:	b.eq	40ac40 <wcrtomb@plt+0x5e40>  // b.none
  40aaf4:	cbnz	w8, 40acec <wcrtomb@plt+0x5eec>
  40aaf8:	ldur	q0, [x19, #232]
  40aafc:	b	40ace8 <wcrtomb@plt+0x5ee8>
  40ab00:	cmp	x0, #0x101
  40ab04:	b.cc	40ab44 <wcrtomb@plt+0x5d44>  // b.lo, b.ul, b.last
  40ab08:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40ab0c:	ldr	x8, [x8, #496]
  40ab10:	cbz	x8, 40ab18 <wcrtomb@plt+0x5d18>
  40ab14:	blr	x8
  40ab18:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ab1c:	add	x1, x1, #0x7bd
  40ab20:	mov	w2, #0x5                   	// #5
  40ab24:	mov	x0, xzr
  40ab28:	bl	404bd0 <dcgettext@plt>
  40ab2c:	mov	x19, x0
  40ab30:	mov	x0, x21
  40ab34:	bl	4398cc <argp_parse@@Base+0xac10>
  40ab38:	mov	x3, x0
  40ab3c:	mov	w4, #0x100                 	// #256
  40ab40:	b	40ab98 <wcrtomb@plt+0x5d98>
  40ab44:	cmp	x0, #0x9c
  40ab48:	b.ls	40abac <wcrtomb@plt+0x5dac>  // b.plast
  40ab4c:	mov	w8, #0x9c                  	// #156
  40ab50:	b	40abbc <wcrtomb@plt+0x5dbc>
  40ab54:	cmp	x0, #0x64
  40ab58:	b.cc	40a940 <wcrtomb@plt+0x5b40>  // b.lo, b.ul, b.last
  40ab5c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40ab60:	ldr	x8, [x8, #496]
  40ab64:	cbz	x8, 40ab6c <wcrtomb@plt+0x5d6c>
  40ab68:	blr	x8
  40ab6c:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ab70:	add	x1, x1, #0x7bd
  40ab74:	mov	w2, #0x5                   	// #5
  40ab78:	mov	x0, xzr
  40ab7c:	bl	404bd0 <dcgettext@plt>
  40ab80:	ldr	x8, [x19, #8]
  40ab84:	mov	x19, x0
  40ab88:	mov	x0, x8
  40ab8c:	bl	4398cc <argp_parse@@Base+0xac10>
  40ab90:	mov	x3, x0
  40ab94:	mov	w4, #0x63                  	// #99
  40ab98:	mov	w0, wzr
  40ab9c:	mov	w1, wzr
  40aba0:	mov	x2, x19
  40aba4:	bl	4041d0 <error@plt>
  40aba8:	b	40ac2c <wcrtomb@plt+0x5e2c>
  40abac:	sub	x8, x0, #0x1
  40abb0:	ldrb	w9, [x21, x8]
  40abb4:	cmp	w9, #0x2f
  40abb8:	csel	x8, x8, x0, eq  // eq = none
  40abbc:	subs	x22, x8, #0x1
  40abc0:	b.eq	40abe8 <wcrtomb@plt+0x5de8>  // b.none
  40abc4:	add	x8, x21, x8
  40abc8:	ldurb	w8, [x8, #-1]
  40abcc:	cmp	w8, #0x2f
  40abd0:	mov	x8, x22
  40abd4:	b.ne	40abbc <wcrtomb@plt+0x5dbc>  // b.any
  40abd8:	sub	x8, x0, x22
  40abdc:	sub	x9, x8, #0x2
  40abe0:	cmp	x9, #0x64
  40abe4:	b.cc	40ac70 <wcrtomb@plt+0x5e70>  // b.lo, b.ul, b.last
  40abe8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40abec:	ldr	x8, [x8, #496]
  40abf0:	cbz	x8, 40abf8 <wcrtomb@plt+0x5df8>
  40abf4:	blr	x8
  40abf8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40abfc:	add	x1, x1, #0x7ec
  40ac00:	mov	w2, #0x5                   	// #5
  40ac04:	mov	x0, xzr
  40ac08:	bl	404bd0 <dcgettext@plt>
  40ac0c:	mov	x19, x0
  40ac10:	mov	x0, x21
  40ac14:	bl	4398cc <argp_parse@@Base+0xac10>
  40ac18:	mov	x3, x0
  40ac1c:	mov	w0, wzr
  40ac20:	mov	w1, wzr
  40ac24:	mov	x2, x19
  40ac28:	bl	4041d0 <error@plt>
  40ac2c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40ac30:	mov	w9, #0x2                   	// #2
  40ac34:	mov	x0, xzr
  40ac38:	str	w9, [x8, #2944]
  40ac3c:	b	40acb4 <wcrtomb@plt+0x5eb4>
  40ac40:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40ac44:	add	x8, x8, #0x118
  40ac48:	b	40ac68 <wcrtomb@plt+0x5e68>
  40ac4c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40ac50:	mov	x8, x19
  40ac54:	add	x9, x9, #0x118
  40ac58:	ldr	x10, [x8, #232]!
  40ac5c:	ldr	x11, [x9]
  40ac60:	cmp	x10, x11
  40ac64:	b.ge	40accc <wcrtomb@plt+0x5ecc>  // b.tcont
  40ac68:	ldr	q0, [x8]
  40ac6c:	b	40ace8 <wcrtomb@plt+0x5ee8>
  40ac70:	sub	x23, x8, #0x1
  40ac74:	bl	405574 <wcrtomb@plt+0x774>
  40ac78:	mov	w2, #0x200                 	// #512
  40ac7c:	mov	w1, wzr
  40ac80:	mov	x20, x0
  40ac84:	bl	4045e0 <memset@plt>
  40ac88:	add	x0, x20, #0x159
  40ac8c:	mov	x1, x21
  40ac90:	mov	x2, x22
  40ac94:	bl	4040f0 <memcpy@plt>
  40ac98:	add	x8, x21, x22
  40ac9c:	add	x1, x8, #0x1
  40aca0:	mov	x0, x20
  40aca4:	mov	x2, x23
  40aca8:	bl	4040f0 <memcpy@plt>
  40acac:	cbnz	x20, 40a950 <wcrtomb@plt+0x5b50>
  40acb0:	mov	x0, xzr
  40acb4:	ldp	x20, x19, [sp, #80]
  40acb8:	ldp	x22, x21, [sp, #64]
  40acbc:	ldp	x24, x23, [sp, #48]
  40acc0:	ldp	x29, x30, [sp, #32]
  40acc4:	add	sp, sp, #0x60
  40acc8:	ret
  40accc:	b.gt	40ace4 <wcrtomb@plt+0x5ee4>
  40acd0:	ldr	x10, [x8, #8]
  40acd4:	ldr	x11, [x9, #8]
  40acd8:	sub	w10, w10, w11
  40acdc:	cmp	w10, #0x1
  40ace0:	b.lt	40ac68 <wcrtomb@plt+0x5e68>  // b.tstop
  40ace4:	ldr	q0, [x9]
  40ace8:	str	q0, [sp]
  40acec:	ldr	w8, [x24, #304]
  40acf0:	ldr	x1, [sp]
  40acf4:	cmp	w8, #0x4
  40acf8:	b.ne	40ad34 <wcrtomb@plt+0x5f34>  // b.any
  40acfc:	lsr	x8, x1, #33
  40ad00:	cbnz	x8, 40ad0c <wcrtomb@plt+0x5f0c>
  40ad04:	ldr	x8, [sp, #8]
  40ad08:	cbz	x8, 40ad34 <wcrtomb@plt+0x5f34>
  40ad0c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  40ad10:	add	x0, x0, #0xd52
  40ad14:	mov	x2, sp
  40ad18:	mov	x1, x19
  40ad1c:	bl	411550 <wcrtomb@plt+0xc750>
  40ad20:	ldr	x1, [sp]
  40ad24:	lsr	x8, x1, #33
  40ad28:	cbz	x8, 40ad34 <wcrtomb@plt+0x5f34>
  40ad2c:	mov	x1, xzr
  40ad30:	str	xzr, [sp]
  40ad34:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ad38:	add	x4, x20, #0x88
  40ad3c:	lsr	x0, x1, #63
  40ad40:	add	x6, x6, #0x6a8
  40ad44:	mov	w2, #0x8                   	// #8
  40ad48:	mov	w5, #0xc                   	// #12
  40ad4c:	mov	x3, xzr
  40ad50:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40ad54:	mov	w8, w0
  40ad58:	mov	x0, xzr
  40ad5c:	tbz	w8, #0, 40acb4 <wcrtomb@plt+0x5eb4>
  40ad60:	ldr	w8, [x19, #104]
  40ad64:	and	w8, w8, #0xf000
  40ad68:	orr	w8, w8, #0x4000
  40ad6c:	cmp	w8, #0x6, lsl #12
  40ad70:	b.ne	40ae50 <wcrtomb@plt+0x6050>  // b.any
  40ad74:	ldr	x21, [x19, #120]
  40ad78:	mov	x0, x21
  40ad7c:	bl	404890 <gnu_dev_major@plt>
  40ad80:	mov	w22, w0
  40ad84:	mov	x0, x21
  40ad88:	bl	404af0 <gnu_dev_minor@plt>
  40ad8c:	cmp	w22, #0x200, lsl #12
  40ad90:	mov	w21, w0
  40ad94:	b.cc	40adbc <wcrtomb@plt+0x5fbc>  // b.lo, b.ul, b.last
  40ad98:	ldr	w8, [x24, #304]
  40ad9c:	cmp	w8, #0x4
  40ada0:	b.ne	40adbc <wcrtomb@plt+0x5fbc>  // b.any
  40ada4:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ada8:	add	x0, x0, #0x6b7
  40adac:	mov	x1, x19
  40adb0:	mov	x2, xzr
  40adb4:	bl	411550 <wcrtomb@plt+0xc750>
  40adb8:	mov	w22, wzr
  40adbc:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40adc0:	add	x4, x20, #0x149
  40adc4:	lsr	w0, w22, #31
  40adc8:	sxtw	x1, w22
  40adcc:	add	x6, x6, #0x832
  40add0:	mov	w2, #0x4                   	// #4
  40add4:	mov	w5, #0x8                   	// #8
  40add8:	mov	x3, xzr
  40addc:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40ade0:	mov	w8, w0
  40ade4:	mov	x0, xzr
  40ade8:	tbz	w8, #0, 40acb4 <wcrtomb@plt+0x5eb4>
  40adec:	cmp	w21, #0x200, lsl #12
  40adf0:	b.cc	40ae18 <wcrtomb@plt+0x6018>  // b.lo, b.ul, b.last
  40adf4:	ldr	w8, [x24, #304]
  40adf8:	cmp	w8, #0x4
  40adfc:	b.ne	40ae18 <wcrtomb@plt+0x6018>  // b.any
  40ae00:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ae04:	add	x0, x0, #0x6c0
  40ae08:	mov	x1, x19
  40ae0c:	mov	x2, xzr
  40ae10:	bl	411550 <wcrtomb@plt+0xc750>
  40ae14:	mov	w21, wzr
  40ae18:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ae1c:	add	x4, x20, #0x151
  40ae20:	lsr	w0, w21, #31
  40ae24:	sxtw	x1, w21
  40ae28:	add	x6, x6, #0x83a
  40ae2c:	mov	w2, #0x4                   	// #4
  40ae30:	mov	w5, #0x8                   	// #8
  40ae34:	mov	x3, xzr
  40ae38:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40ae3c:	mov	w8, w0
  40ae40:	mov	x0, xzr
  40ae44:	tbz	w8, #0, 40acb4 <wcrtomb@plt+0x5eb4>
  40ae48:	ldr	w8, [x24, #304]
  40ae4c:	b	40ae60 <wcrtomb@plt+0x6060>
  40ae50:	ldr	w8, [x24, #304]
  40ae54:	orr	w9, w8, #0x4
  40ae58:	cmp	w9, #0x6
  40ae5c:	b.ne	40af44 <wcrtomb@plt+0x6144>  // b.any
  40ae60:	cmp	w8, #0x4
  40ae64:	b.ne	40ae94 <wcrtomb@plt+0x6094>  // b.any
  40ae68:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ae6c:	add	x0, x0, #0x6c9
  40ae70:	mov	x1, x19
  40ae74:	mov	x2, xzr
  40ae78:	bl	411550 <wcrtomb@plt+0xc750>
  40ae7c:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ae80:	add	x0, x0, #0x6cf
  40ae84:	mov	x1, x19
  40ae88:	mov	x2, xzr
  40ae8c:	bl	411550 <wcrtomb@plt+0xc750>
  40ae90:	b	40aef4 <wcrtomb@plt+0x60f4>
  40ae94:	orr	w8, w8, #0x4
  40ae98:	cmp	w8, #0x6
  40ae9c:	b.ne	40aef4 <wcrtomb@plt+0x60f4>  // b.any
  40aea0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40aea4:	ldrb	w8, [x8, #3617]
  40aea8:	cbz	w8, 40aef4 <wcrtomb@plt+0x60f4>
  40aeac:	ldr	x1, [x19, #216]
  40aeb0:	adrp	x21, 44c000 <_obstack_memory_used@@Base+0x10808>
  40aeb4:	add	x21, x21, #0x6a8
  40aeb8:	add	x4, x20, #0x159
  40aebc:	lsr	x0, x1, #63
  40aec0:	mov	w2, #0x8                   	// #8
  40aec4:	mov	w5, #0xc                   	// #12
  40aec8:	mov	x3, xzr
  40aecc:	mov	x6, x21
  40aed0:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40aed4:	ldr	x1, [x19, #248]
  40aed8:	add	x4, x20, #0x165
  40aedc:	mov	w2, #0x8                   	// #8
  40aee0:	mov	w5, #0xc                   	// #12
  40aee4:	lsr	x0, x1, #63
  40aee8:	mov	x3, xzr
  40aeec:	mov	x6, x21
  40aef0:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40aef4:	ldr	w8, [x24, #304]
  40aef8:	mov	w9, #0x30                  	// #48
  40aefc:	subs	w8, w8, #0x1
  40af00:	csel	w9, wzr, w9, eq  // eq = none
  40af04:	cmp	w8, #0x5
  40af08:	strb	w9, [x20, #156]
  40af0c:	b.hi	40b1b8 <wcrtomb@plt+0x63b8>  // b.pmore
  40af10:	adrp	x9, 44c000 <_obstack_memory_used@@Base+0x10808>
  40af14:	add	x9, x9, #0x62e
  40af18:	adr	x10, 40af2c <wcrtomb@plt+0x612c>
  40af1c:	ldrb	w11, [x9, x8]
  40af20:	add	x10, x10, x11, lsl #2
  40af24:	add	x8, x20, #0x101
  40af28:	br	x10
  40af2c:	mov	x9, #0x7375                	// #29557
  40af30:	movk	x9, #0x6174, lsl #16
  40af34:	movk	x9, #0x2072, lsl #32
  40af38:	movk	x9, #0x20, lsl #48
  40af3c:	str	x9, [x8]
  40af40:	b	40afb4 <wcrtomb@plt+0x61b4>
  40af44:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40af48:	add	x4, x20, #0x149
  40af4c:	add	x6, x6, #0x832
  40af50:	mov	w2, #0x4                   	// #4
  40af54:	mov	w5, #0x8                   	// #8
  40af58:	mov	w0, wzr
  40af5c:	mov	x1, xzr
  40af60:	mov	x3, xzr
  40af64:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40af68:	mov	w8, w0
  40af6c:	mov	x0, xzr
  40af70:	tbz	w8, #0, 40acb4 <wcrtomb@plt+0x5eb4>
  40af74:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40af78:	add	x4, x20, #0x151
  40af7c:	add	x6, x6, #0x83a
  40af80:	mov	w2, #0x4                   	// #4
  40af84:	mov	w5, #0x8                   	// #8
  40af88:	mov	w0, wzr
  40af8c:	mov	x1, xzr
  40af90:	b	40ae34 <wcrtomb@plt+0x6034>
  40af94:	mov	w11, #0x7375                	// #29557
  40af98:	add	x9, x20, #0x101
  40af9c:	mov	w10, #0x72                  	// #114
  40afa0:	movk	w11, #0x6174, lsl #16
  40afa4:	mov	w12, #0x3030                	// #12336
  40afa8:	strh	w10, [x9, #4]
  40afac:	str	w11, [x9]
  40afb0:	strh	w12, [x8, #6]
  40afb4:	ldr	w8, [x24, #304]
  40afb8:	cmp	w8, #0x1
  40afbc:	b.eq	40b0e0 <wcrtomb@plt+0x62e0>  // b.none
  40afc0:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40afc4:	ldrb	w9, [x9, #160]
  40afc8:	cbnz	w9, 40b0e0 <wcrtomb@plt+0x62e0>
  40afcc:	ldur	x0, [x29, #-8]
  40afd0:	cbz	x0, 40afe0 <wcrtomb@plt+0x61e0>
  40afd4:	bl	43a998 <argp_parse@@Base+0xbcdc>
  40afd8:	str	x0, [x19, #32]
  40afdc:	b	40afec <wcrtomb@plt+0x61ec>
  40afe0:	ldr	w0, [x19, #112]
  40afe4:	add	x1, x19, #0x20
  40afe8:	bl	419f64 <wcrtomb@plt+0x15164>
  40afec:	ldr	x0, [sp, #16]
  40aff0:	cbz	x0, 40b000 <wcrtomb@plt+0x6200>
  40aff4:	bl	43a998 <argp_parse@@Base+0xbcdc>
  40aff8:	str	x0, [x19, #40]
  40affc:	b	40b00c <wcrtomb@plt+0x620c>
  40b000:	ldr	w0, [x19, #116]
  40b004:	add	x1, x19, #0x28
  40b008:	bl	41a000 <wcrtomb@plt+0x15200>
  40b00c:	ldr	w8, [x24, #304]
  40b010:	cmp	w8, #0x4
  40b014:	b.ne	40b04c <wcrtomb@plt+0x624c>  // b.any
  40b018:	ldr	x21, [x19, #32]
  40b01c:	mov	x0, x21
  40b020:	bl	404170 <strlen@plt>
  40b024:	cmp	x0, #0x20
  40b028:	b.hi	40b038 <wcrtomb@plt+0x6238>  // b.pmore
  40b02c:	mov	x0, x21
  40b030:	bl	4245f0 <wcrtomb@plt+0x1f7f0>
  40b034:	tbnz	w0, #0, 40b04c <wcrtomb@plt+0x624c>
  40b038:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40b03c:	add	x0, x0, #0x6d5
  40b040:	mov	x1, x19
  40b044:	mov	x2, xzr
  40b048:	bl	411550 <wcrtomb@plt+0xc750>
  40b04c:	ldr	x9, [x19, #32]
  40b050:	mov	x8, xzr
  40b054:	add	x10, x20, #0x109
  40b058:	ldrb	w11, [x9, x8]
  40b05c:	cmp	x8, #0x1e
  40b060:	strb	w11, [x10, x8]
  40b064:	b.hi	40b070 <wcrtomb@plt+0x6270>  // b.pmore
  40b068:	add	x8, x8, #0x1
  40b06c:	cbnz	w11, 40b058 <wcrtomb@plt+0x6258>
  40b070:	strb	wzr, [x20, #296]
  40b074:	ldr	w8, [x24, #304]
  40b078:	cmp	w8, #0x4
  40b07c:	b.ne	40b0b4 <wcrtomb@plt+0x62b4>  // b.any
  40b080:	ldr	x21, [x19, #40]
  40b084:	mov	x0, x21
  40b088:	bl	404170 <strlen@plt>
  40b08c:	cmp	x0, #0x20
  40b090:	b.hi	40b0a0 <wcrtomb@plt+0x62a0>  // b.pmore
  40b094:	mov	x0, x21
  40b098:	bl	4245f0 <wcrtomb@plt+0x1f7f0>
  40b09c:	tbnz	w0, #0, 40b0b4 <wcrtomb@plt+0x62b4>
  40b0a0:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40b0a4:	add	x0, x0, #0x6db
  40b0a8:	mov	x1, x19
  40b0ac:	mov	x2, xzr
  40b0b0:	bl	411550 <wcrtomb@plt+0xc750>
  40b0b4:	ldr	x9, [x19, #40]
  40b0b8:	mov	x8, xzr
  40b0bc:	add	x10, x20, #0x129
  40b0c0:	ldrb	w11, [x9, x8]
  40b0c4:	cmp	x8, #0x1e
  40b0c8:	strb	w11, [x10, x8]
  40b0cc:	b.hi	40b0d8 <wcrtomb@plt+0x62d8>  // b.pmore
  40b0d0:	add	x8, x8, #0x1
  40b0d4:	cbnz	w11, 40b0c0 <wcrtomb@plt+0x62c0>
  40b0d8:	strb	wzr, [x20, #328]
  40b0dc:	ldr	w8, [x24, #304]
  40b0e0:	cmp	w8, #0x4
  40b0e4:	b.ne	40b1b0 <wcrtomb@plt+0x63b0>  // b.any
  40b0e8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40b0ec:	ldr	w8, [x8, #384]
  40b0f0:	cmp	w8, #0x1
  40b0f4:	b.lt	40b130 <wcrtomb@plt+0x6330>  // b.tstop
  40b0f8:	ldr	x8, [x19, #56]
  40b0fc:	cbz	x8, 40b114 <wcrtomb@plt+0x6314>
  40b100:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40b104:	add	x0, x0, #0x6e1
  40b108:	mov	x1, x19
  40b10c:	mov	x2, xzr
  40b110:	bl	411550 <wcrtomb@plt+0xc750>
  40b114:	ldr	x8, [x19, #72]
  40b118:	cbz	x8, 40b130 <wcrtomb@plt+0x6330>
  40b11c:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40b120:	add	x0, x0, #0x6f3
  40b124:	mov	x1, x19
  40b128:	mov	x2, xzr
  40b12c:	bl	411550 <wcrtomb@plt+0xc750>
  40b130:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40b134:	ldr	w8, [x8, #472]
  40b138:	cmp	w8, #0x1
  40b13c:	b.lt	40b15c <wcrtomb@plt+0x635c>  // b.tstop
  40b140:	ldr	x8, [x19, #48]
  40b144:	cbz	x8, 40b15c <wcrtomb@plt+0x635c>
  40b148:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40b14c:	add	x0, x0, #0x706
  40b150:	mov	x1, x19
  40b154:	mov	x2, xzr
  40b158:	bl	411550 <wcrtomb@plt+0xc750>
  40b15c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40b160:	ldr	w8, [x8, #144]
  40b164:	cmp	w8, #0x1
  40b168:	b.lt	40b1b0 <wcrtomb@plt+0x63b0>  // b.tstop
  40b16c:	str	xzr, [sp]
  40b170:	ldr	x8, [x19, #328]
  40b174:	cbz	x8, 40b1b0 <wcrtomb@plt+0x63b0>
  40b178:	ldr	x21, [x19, #336]
  40b17c:	mov	x8, xzr
  40b180:	mov	w22, #0x18                  	// #24
  40b184:	mul	x8, x8, x22
  40b188:	ldr	x0, [x21, x8]
  40b18c:	mov	x2, sp
  40b190:	mov	x1, x19
  40b194:	bl	411550 <wcrtomb@plt+0xc750>
  40b198:	ldr	x8, [sp]
  40b19c:	add	x8, x8, #0x1
  40b1a0:	str	x8, [sp]
  40b1a4:	ldr	x9, [x19, #328]
  40b1a8:	cmp	x8, x9
  40b1ac:	b.cc	40b184 <wcrtomb@plt+0x6384>  // b.lo, b.ul, b.last
  40b1b0:	mov	x0, x20
  40b1b4:	b	40acb4 <wcrtomb@plt+0x5eb4>
  40b1b8:	bl	404850 <abort@plt>
  40b1bc:	stp	x29, x30, [sp, #-32]!
  40b1c0:	mov	x9, #0x2020202020202020    	// #2314885530818453536
  40b1c4:	mov	x4, x0
  40b1c8:	str	x19, [sp, #16]
  40b1cc:	mov	x19, x0
  40b1d0:	mov	x8, xzr
  40b1d4:	mov	w1, wzr
  40b1d8:	str	x9, [x4, #148]!
  40b1dc:	mov	x29, sp
  40b1e0:	ldrb	w9, [x19, x8]
  40b1e4:	add	x8, x8, #0x1
  40b1e8:	cmp	x8, #0x200
  40b1ec:	add	x1, x9, w1, uxtw
  40b1f0:	b.ne	40b1e0 <wcrtomb@plt+0x63e0>  // b.any
  40b1f4:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40b1f8:	add	x6, x6, #0x842
  40b1fc:	mov	w2, #0x8                   	// #8
  40b200:	mov	w5, #0x7                   	// #7
  40b204:	mov	w0, wzr
  40b208:	mov	x3, xzr
  40b20c:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40b210:	mov	x0, x19
  40b214:	ldr	x19, [sp, #16]
  40b218:	ldp	x29, x30, [sp], #32
  40b21c:	b	40587c <wcrtomb@plt+0xa7c>
  40b220:	stp	x29, x30, [sp, #-32]!
  40b224:	stp	x20, x19, [sp, #16]
  40b228:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40b22c:	ldr	w8, [x8, #132]
  40b230:	mov	x19, x1
  40b234:	mov	x20, x0
  40b238:	mov	x29, sp
  40b23c:	cbz	w8, 40b288 <wcrtomb@plt+0x6488>
  40b240:	ldrb	w8, [x19, #156]
  40b244:	sub	w8, w8, #0x4b
  40b248:	cmp	w8, #0x2d
  40b24c:	b.hi	40b26c <wcrtomb@plt+0x646c>  // b.pmore
  40b250:	mov	w9, #0x1                   	// #1
  40b254:	lsl	x8, x9, x8
  40b258:	mov	x9, #0x3                   	// #3
  40b25c:	movk	x9, #0x1000, lsl #16
  40b260:	movk	x9, #0x2000, lsl #32
  40b264:	tst	x8, x9
  40b268:	b.ne	40b288 <wcrtomb@plt+0x6488>  // b.any
  40b26c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40b270:	ldr	w8, [x8, #304]
  40b274:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40b278:	mov	x0, x20
  40b27c:	mov	x1, x19
  40b280:	str	w8, [x9, #3536]
  40b284:	bl	416dc8 <wcrtomb@plt+0x11fc8>
  40b288:	mov	w0, wzr
  40b28c:	mov	x1, x20
  40b290:	mov	x2, x19
  40b294:	bl	40a7ac <wcrtomb@plt+0x59ac>
  40b298:	ldp	x20, x19, [sp, #16]
  40b29c:	ldp	x29, x30, [sp], #32
  40b2a0:	b	40b1bc <wcrtomb@plt+0x63bc>
  40b2a4:	stp	x29, x30, [sp, #-32]!
  40b2a8:	cmp	x0, #0x1
  40b2ac:	stp	x20, x19, [sp, #16]
  40b2b0:	mov	x29, sp
  40b2b4:	b.lt	40b2e4 <wcrtomb@plt+0x64e4>  // b.tstop
  40b2b8:	add	x20, x0, #0x200
  40b2bc:	bl	405574 <wcrtomb@plt+0x774>
  40b2c0:	mov	w2, #0x200                 	// #512
  40b2c4:	mov	w1, wzr
  40b2c8:	mov	x19, x0
  40b2cc:	bl	4045e0 <memset@plt>
  40b2d0:	mov	x0, x19
  40b2d4:	bl	40587c <wcrtomb@plt+0xa7c>
  40b2d8:	sub	x20, x20, #0x200
  40b2dc:	cmp	x20, #0x200
  40b2e0:	b.gt	40b2bc <wcrtomb@plt+0x64bc>
  40b2e4:	ldp	x20, x19, [sp, #16]
  40b2e8:	ldp	x29, x30, [sp], #32
  40b2ec:	ret
  40b2f0:	stp	x29, x30, [sp, #-32]!
  40b2f4:	str	x19, [sp, #16]
  40b2f8:	mov	x19, x0
  40b2fc:	mov	x29, sp
  40b300:	ldr	w0, [x19, #408]
  40b304:	bl	404800 <fdopendir@plt>
  40b308:	str	x0, [x19, #400]
  40b30c:	cbnz	x0, 40b32c <wcrtomb@plt+0x652c>
  40b310:	mov	x0, x19
  40b314:	bl	40b340 <wcrtomb@plt+0x6540>
  40b318:	tbnz	w0, #0, 40b300 <wcrtomb@plt+0x6500>
  40b31c:	ldr	x19, [sp, #16]
  40b320:	mov	x0, xzr
  40b324:	ldp	x29, x30, [sp], #32
  40b328:	ret
  40b32c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40b330:	ldr	w1, [x8, #8]
  40b334:	ldr	x19, [sp, #16]
  40b338:	ldp	x29, x30, [sp], #32
  40b33c:	b	439f68 <argp_parse@@Base+0xb2ac>
  40b340:	stp	x29, x30, [sp, #-32]!
  40b344:	str	x19, [sp, #16]
  40b348:	mov	x29, sp
  40b34c:	mov	x19, x0
  40b350:	bl	404ce0 <__errno_location@plt>
  40b354:	mov	w8, wzr
  40b358:	cbz	x19, 40b3bc <wcrtomb@plt+0x65bc>
  40b35c:	ldr	w9, [x0]
  40b360:	cmp	w9, #0x18
  40b364:	b.ne	40b3bc <wcrtomb@plt+0x65bc>  // b.any
  40b368:	ldr	x8, [x19, #392]
  40b36c:	cbz	x8, 40b3bc <wcrtomb@plt+0x65bc>
  40b370:	ldr	x8, [x8, #392]
  40b374:	cbz	x8, 40b3a0 <wcrtomb@plt+0x65a0>
  40b378:	ldr	w10, [x8, #408]
  40b37c:	ldr	x9, [x8, #392]
  40b380:	cmp	w10, #0x1
  40b384:	b.lt	40b398 <wcrtomb@plt+0x6598>  // b.tstop
  40b388:	cbz	x9, 40b3b0 <wcrtomb@plt+0x65b0>
  40b38c:	ldr	w10, [x9, #408]
  40b390:	cmp	w10, #0x0
  40b394:	b.le	40b3b0 <wcrtomb@plt+0x65b0>
  40b398:	mov	x8, x9
  40b39c:	cbnz	x9, 40b378 <wcrtomb@plt+0x6578>
  40b3a0:	mov	w8, wzr
  40b3a4:	mov	w9, #0x18                  	// #24
  40b3a8:	str	w9, [x0]
  40b3ac:	b	40b3bc <wcrtomb@plt+0x65bc>
  40b3b0:	mov	x0, x8
  40b3b4:	bl	420c9c <wcrtomb@plt+0x1be9c>
  40b3b8:	mov	w8, #0x1                   	// #1
  40b3bc:	ldr	x19, [sp, #16]
  40b3c0:	mov	w0, w8
  40b3c4:	ldp	x29, x30, [sp], #32
  40b3c8:	ret
  40b3cc:	stp	x29, x30, [sp, #-96]!
  40b3d0:	stp	x28, x27, [sp, #16]
  40b3d4:	stp	x26, x25, [sp, #32]
  40b3d8:	stp	x24, x23, [sp, #48]
  40b3dc:	stp	x22, x21, [sp, #64]
  40b3e0:	stp	x20, x19, [sp, #80]
  40b3e4:	mov	x29, sp
  40b3e8:	sub	sp, sp, #0x1b0
  40b3ec:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40b3f0:	ldr	x8, [x8, #3592]
  40b3f4:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40b3f8:	ldrb	w9, [x9, #64]
  40b3fc:	mov	w0, #0x1                   	// #1
  40b400:	cmp	x8, #0x2
  40b404:	cset	w8, cc  // cc = lo, ul, last
  40b408:	tst	w9, #0x1
  40b40c:	cset	w9, eq  // eq = none
  40b410:	and	w8, w8, w9
  40b414:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40b418:	str	w8, [x9, #1464]
  40b41c:	bl	405ed8 <wcrtomb@plt+0x10d8>
  40b420:	bl	404fac <wcrtomb@plt+0x1ac>
  40b424:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40b428:	ldrb	w8, [x8, #3617]
  40b42c:	cbz	w8, 40b634 <wcrtomb@plt+0x6834>
  40b430:	mov	w0, #0x3e8                 	// #1000
  40b434:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  40b438:	mov	x19, x0
  40b43c:	bl	41b6fc <wcrtomb@plt+0x168fc>
  40b440:	bl	41be7c <wcrtomb@plt+0x1707c>
  40b444:	cbz	x0, 40b478 <wcrtomb@plt+0x6678>
  40b448:	mov	x20, x0
  40b44c:	ldr	x0, [x20, #16]
  40b450:	mov	x1, xzr
  40b454:	bl	40d9d0 <wcrtomb@plt+0x8bd0>
  40b458:	tbnz	w0, #0, 40b46c <wcrtomb@plt+0x666c>
  40b45c:	ldr	x1, [x20, #16]
  40b460:	mov	x0, xzr
  40b464:	mov	x2, x1
  40b468:	bl	40b6b0 <wcrtomb@plt+0x68b0>
  40b46c:	bl	41be7c <wcrtomb@plt+0x1707c>
  40b470:	mov	x20, x0
  40b474:	cbnz	x0, 40b44c <wcrtomb@plt+0x664c>
  40b478:	bl	41bee8 <wcrtomb@plt+0x170e8>
  40b47c:	bl	41be7c <wcrtomb@plt+0x1707c>
  40b480:	cbz	x0, 40b628 <wcrtomb@plt+0x6828>
  40b484:	mov	x8, sp
  40b488:	mov	x24, x0
  40b48c:	mov	w20, #0x3e8                 	// #1000
  40b490:	adrp	x21, 467000 <_obstack_memory_used@@Base+0x2b808>
  40b494:	adrp	x22, 46b000 <argp_program_version_hook@@Base+0x458>
  40b498:	add	x23, x8, #0x58
  40b49c:	ldr	x0, [x24, #16]
  40b4a0:	mov	x1, xzr
  40b4a4:	bl	40d9d0 <wcrtomb@plt+0x8bd0>
  40b4a8:	tbnz	w0, #0, 40b61c <wcrtomb@plt+0x681c>
  40b4ac:	ldr	x26, [x24, #16]
  40b4b0:	mov	x0, x26
  40b4b4:	bl	404170 <strlen@plt>
  40b4b8:	mov	x25, x0
  40b4bc:	cmp	x20, x0
  40b4c0:	b.hi	40b4e4 <wcrtomb@plt+0x66e4>  // b.pmore
  40b4c4:	lsl	x20, x20, #1
  40b4c8:	cmp	x20, x25
  40b4cc:	b.ls	40b4c4 <wcrtomb@plt+0x66c4>  // b.plast
  40b4d0:	mov	x0, x19
  40b4d4:	mov	x1, x20
  40b4d8:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  40b4dc:	ldr	x26, [x24, #16]
  40b4e0:	mov	x19, x0
  40b4e4:	mov	x0, x19
  40b4e8:	mov	x1, x26
  40b4ec:	mov	x2, x25
  40b4f0:	bl	4040f0 <memcpy@plt>
  40b4f4:	add	x8, x25, x19
  40b4f8:	ldurb	w8, [x8, #-1]
  40b4fc:	cmp	w8, #0x2f
  40b500:	b.eq	40b514 <wcrtomb@plt+0x6714>  // b.none
  40b504:	add	x8, x25, #0x1
  40b508:	mov	w9, #0x2f                  	// #47
  40b50c:	strb	w9, [x19, x25]
  40b510:	mov	x25, x8
  40b514:	mov	x0, sp
  40b518:	bl	420c80 <wcrtomb@plt+0x1be80>
  40b51c:	ldr	x0, [x24, #56]
  40b520:	bl	413a38 <wcrtomb@plt+0xec38>
  40b524:	cbz	x0, 40b614 <wcrtomb@plt+0x6814>
  40b528:	ldrb	w27, [x0]
  40b52c:	mov	x26, x0
  40b530:	cbz	w27, 40b614 <wcrtomb@plt+0x6814>
  40b534:	mov	x0, x26
  40b538:	bl	404170 <strlen@plt>
  40b53c:	and	w8, w27, #0xff
  40b540:	cmp	w8, #0x59
  40b544:	mov	x27, x0
  40b548:	b.ne	40b5d0 <wcrtomb@plt+0x67d0>  // b.any
  40b54c:	ldr	x8, [sp]
  40b550:	cbnz	x8, 40b588 <wcrtomb@plt+0x6788>
  40b554:	ldr	w0, [x21, #1944]
  40b558:	ldr	x1, [x24, #16]
  40b55c:	ldr	w2, [x22, #188]
  40b560:	bl	404cc0 <openat@plt>
  40b564:	tbnz	w0, #31, 40b5e0 <wcrtomb@plt+0x67e0>
  40b568:	mov	x1, x23
  40b56c:	str	w0, [sp, #408]
  40b570:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  40b574:	ldr	x8, [x24, #16]
  40b578:	cbnz	w0, 40b5f8 <wcrtomb@plt+0x67f8>
  40b57c:	mov	x0, x8
  40b580:	bl	43a998 <argp_parse@@Base+0xbcdc>
  40b584:	str	x0, [sp]
  40b588:	add	x8, x27, x25
  40b58c:	cmp	x20, x8
  40b590:	b.cs	40b5b0 <wcrtomb@plt+0x67b0>  // b.hs, b.nlast
  40b594:	lsl	x20, x20, #1
  40b598:	cmp	x20, x8
  40b59c:	b.cc	40b594 <wcrtomb@plt+0x6794>  // b.lo, b.ul, b.last
  40b5a0:	mov	x0, x19
  40b5a4:	mov	x1, x20
  40b5a8:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  40b5ac:	mov	x19, x0
  40b5b0:	add	x28, x26, #0x1
  40b5b4:	add	x0, x19, x25
  40b5b8:	mov	x1, x28
  40b5bc:	bl	404b00 <strcpy@plt>
  40b5c0:	mov	x0, sp
  40b5c4:	mov	x1, x28
  40b5c8:	mov	x2, x19
  40b5cc:	bl	40b6b0 <wcrtomb@plt+0x68b0>
  40b5d0:	add	x26, x27, x26
  40b5d4:	ldrb	w27, [x26, #1]!
  40b5d8:	cbnz	w27, 40b534 <wcrtomb@plt+0x6734>
  40b5dc:	b	40b614 <wcrtomb@plt+0x6814>
  40b5e0:	ldr	x8, [x24, #64]
  40b5e4:	ldr	x0, [x24, #16]
  40b5e8:	adrp	x2, 419000 <wcrtomb@plt+0x14200>
  40b5ec:	add	x2, x2, #0xc70
  40b5f0:	cmp	x8, #0x0
  40b5f4:	b	40b60c <wcrtomb@plt+0x680c>
  40b5f8:	ldr	x9, [x24, #64]
  40b5fc:	adrp	x2, 419000 <wcrtomb@plt+0x14200>
  40b600:	mov	x0, x8
  40b604:	add	x2, x2, #0xd24
  40b608:	cmp	x9, #0x0
  40b60c:	cset	w1, eq  // eq = none
  40b610:	bl	419d48 <wcrtomb@plt+0x14f48>
  40b614:	mov	x0, sp
  40b618:	bl	420d00 <wcrtomb@plt+0x1bf00>
  40b61c:	bl	41be7c <wcrtomb@plt+0x1707c>
  40b620:	mov	x24, x0
  40b624:	cbnz	x0, 40b49c <wcrtomb@plt+0x669c>
  40b628:	mov	x0, x19
  40b62c:	bl	4049b0 <free@plt>
  40b630:	b	40b674 <wcrtomb@plt+0x6874>
  40b634:	mov	w0, #0x1                   	// #1
  40b638:	bl	41a314 <wcrtomb@plt+0x15514>
  40b63c:	cbz	x0, 40b674 <wcrtomb@plt+0x6874>
  40b640:	mov	x19, x0
  40b644:	mov	x0, x19
  40b648:	mov	x1, xzr
  40b64c:	bl	40d9d0 <wcrtomb@plt+0x8bd0>
  40b650:	tbnz	w0, #0, 40b664 <wcrtomb@plt+0x6864>
  40b654:	mov	x0, xzr
  40b658:	mov	x1, x19
  40b65c:	mov	x2, x19
  40b660:	bl	40b6b0 <wcrtomb@plt+0x68b0>
  40b664:	mov	w0, #0x1                   	// #1
  40b668:	bl	41a314 <wcrtomb@plt+0x15514>
  40b66c:	mov	x19, x0
  40b670:	cbnz	x0, 40b644 <wcrtomb@plt+0x6844>
  40b674:	bl	40a594 <wcrtomb@plt+0x5794>
  40b678:	bl	405bb0 <wcrtomb@plt+0xdb0>
  40b67c:	bl	423c0c <wcrtomb@plt+0x1ee0c>
  40b680:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40b684:	ldr	x8, [x8, #320]
  40b688:	cbz	x8, 40b690 <wcrtomb@plt+0x6890>
  40b68c:	bl	41478c <wcrtomb@plt+0xf98c>
  40b690:	add	sp, sp, #0x1b0
  40b694:	ldp	x20, x19, [sp, #80]
  40b698:	ldp	x22, x21, [sp, #64]
  40b69c:	ldp	x24, x23, [sp, #48]
  40b6a0:	ldp	x26, x25, [sp, #32]
  40b6a4:	ldp	x28, x27, [sp, #16]
  40b6a8:	ldp	x29, x30, [sp], #96
  40b6ac:	ret
  40b6b0:	stp	x29, x30, [sp, #-96]!
  40b6b4:	stp	x28, x27, [sp, #16]
  40b6b8:	stp	x26, x25, [sp, #32]
  40b6bc:	stp	x24, x23, [sp, #48]
  40b6c0:	stp	x22, x21, [sp, #64]
  40b6c4:	stp	x20, x19, [sp, #80]
  40b6c8:	mov	x29, sp
  40b6cc:	sub	sp, sp, #0x270
  40b6d0:	mov	x19, x0
  40b6d4:	add	x0, sp, #0x38
  40b6d8:	mov	x20, x2
  40b6dc:	mov	x21, x1
  40b6e0:	add	x23, sp, #0x38
  40b6e4:	bl	420c80 <wcrtomb@plt+0x1be80>
  40b6e8:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x2b808>
  40b6ec:	add	x8, x19, #0x198
  40b6f0:	add	x9, x9, #0x798
  40b6f4:	cmp	x19, #0x0
  40b6f8:	str	x19, [sp, #448]
  40b6fc:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  40b700:	csel	x27, x9, x8, eq  // eq = none
  40b704:	ldrb	w8, [x10, #80]
  40b708:	ldr	w22, [x27]
  40b70c:	cbz	w8, 40b724 <wcrtomb@plt+0x6924>
  40b710:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40b714:	add	x0, x0, #0x84c
  40b718:	mov	x1, x20
  40b71c:	bl	41f8c4 <wcrtomb@plt+0x1aac4>
  40b720:	cbz	w0, 40b7bc <wcrtomb@plt+0x69bc>
  40b724:	add	x0, sp, #0x38
  40b728:	mov	x1, x20
  40b72c:	bl	4186dc <wcrtomb@plt+0x138dc>
  40b730:	adrp	x26, 46b000 <argp_program_version_hook@@Base+0x458>
  40b734:	ldrb	w2, [x26, #440]
  40b738:	mov	x0, x20
  40b73c:	mov	w1, wzr
  40b740:	add	x24, x23, #0x8
  40b744:	bl	426884 <wcrtomb@plt+0x21a84>
  40b748:	mov	x1, x0
  40b74c:	mov	x0, x24
  40b750:	bl	4186dc <wcrtomb@plt+0x138dc>
  40b754:	mov	w1, #0x1                   	// #1
  40b758:	mov	x0, x24
  40b75c:	bl	423984 <wcrtomb@plt+0x1eb84>
  40b760:	cbz	x19, 40b780 <wcrtomb@plt+0x6980>
  40b764:	tbz	w22, #31, 40b780 <wcrtomb@plt+0x6980>
  40b768:	neg	w21, w22
  40b76c:	bl	404ce0 <__errno_location@plt>
  40b770:	str	w21, [x0]
  40b774:	adrp	x2, 419000 <wcrtomb@plt+0x14200>
  40b778:	add	x2, x2, #0xc70
  40b77c:	b	40b7ac <wcrtomb@plt+0x69ac>
  40b780:	adrp	x28, 46b000 <argp_program_version_hook@@Base+0x458>
  40b784:	ldr	w3, [x28, #48]
  40b788:	add	x8, sp, #0x38
  40b78c:	add	x25, x8, #0x58
  40b790:	mov	w0, w22
  40b794:	mov	x1, x21
  40b798:	mov	x2, x25
  40b79c:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  40b7a0:	cbz	w0, 40b7fc <wcrtomb@plt+0x69fc>
  40b7a4:	adrp	x2, 419000 <wcrtomb@plt+0x14200>
  40b7a8:	add	x2, x2, #0xd24
  40b7ac:	cmp	x19, #0x0
  40b7b0:	cset	w1, eq  // eq = none
  40b7b4:	mov	x0, x20
  40b7b8:	bl	419d48 <wcrtomb@plt+0x14f48>
  40b7bc:	cbz	x19, 40b7d4 <wcrtomb@plt+0x69d4>
  40b7c0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40b7c4:	ldr	x8, [x8, #320]
  40b7c8:	cbz	x8, 40b7d4 <wcrtomb@plt+0x69d4>
  40b7cc:	mov	x0, x19
  40b7d0:	bl	412ed4 <wcrtomb@plt+0xe0d4>
  40b7d4:	add	x0, sp, #0x38
  40b7d8:	bl	420d00 <wcrtomb@plt+0x1bf00>
  40b7dc:	add	sp, sp, #0x270
  40b7e0:	ldp	x20, x19, [sp, #80]
  40b7e4:	ldp	x22, x21, [sp, #64]
  40b7e8:	ldp	x24, x23, [sp, #48]
  40b7ec:	ldp	x26, x25, [sp, #32]
  40b7f0:	ldp	x28, x27, [sp, #16]
  40b7f4:	ldp	x29, x30, [sp], #96
  40b7f8:	ret
  40b7fc:	ldr	w8, [sp, #160]
  40b800:	and	w9, w8, #0xf000
  40b804:	cmp	w9, #0x4, lsl #12
  40b808:	b.eq	40b934 <wcrtomb@plt+0x6b34>  // b.none
  40b80c:	cmp	w9, #0x8, lsl #12
  40b810:	b.ne	40b888 <wcrtomb@plt+0x6a88>  // b.any
  40b814:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40b818:	ldrb	w9, [x9, #24]
  40b81c:	cbz	w9, 40b874 <wcrtomb@plt+0x6a74>
  40b820:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40b824:	ldrb	w8, [x8, #185]
  40b828:	mov	w23, wzr
  40b82c:	cbz	w8, 40b88c <wcrtomb@plt+0x6a8c>
  40b830:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40b834:	ldrb	w8, [x8, #400]
  40b838:	cbz	w8, 40b88c <wcrtomb@plt+0x6a8c>
  40b83c:	ldr	x8, [sp, #192]
  40b840:	ldr	x9, [sp, #208]
  40b844:	cmp	x8, #0x0
  40b848:	add	x10, x8, #0x1ff
  40b84c:	csel	x11, x10, x8, lt  // lt = tstop
  40b850:	tst	x8, #0x1ff
  40b854:	cset	w8, ne  // ne = any
  40b858:	cmp	x10, #0x3fe
  40b85c:	cset	w10, hi  // hi = pmore
  40b860:	and	w8, w10, w8
  40b864:	add	x8, x8, x11, asr #9
  40b868:	cmp	x9, x8
  40b86c:	b.ge	40b888 <wcrtomb@plt+0x6a88>  // b.tcont
  40b870:	b	40b934 <wcrtomb@plt+0x6b34>
  40b874:	mov	w9, #0x124                 	// #292
  40b878:	bics	wzr, w9, w8
  40b87c:	b.ne	40b934 <wcrtomb@plt+0x6b34>  // b.any
  40b880:	ldr	x8, [sp, #192]
  40b884:	cbnz	x8, 40b934 <wcrtomb@plt+0x6b34>
  40b888:	mov	w23, wzr
  40b88c:	ldr	x25, [sp, #192]
  40b890:	ldur	q0, [sp, #216]
  40b894:	add	x9, sp, #0x38
  40b898:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40b89c:	str	x25, [sp, #320]
  40b8a0:	stur	q0, [x9, #216]
  40b8a4:	ldur	q0, [sp, #232]
  40b8a8:	ldrb	w8, [x8, #3617]
  40b8ac:	stur	q0, [x9, #232]
  40b8b0:	ldur	q1, [sp, #248]
  40b8b4:	stur	q1, [x9, #248]
  40b8b8:	cbz	x19, 40b8c0 <wcrtomb@plt+0x6ac0>
  40b8bc:	cbnz	w8, 40b8d0 <wcrtomb@plt+0x6ad0>
  40b8c0:	ldr	w9, [sp, #160]
  40b8c4:	and	w9, w9, #0xf000
  40b8c8:	cmp	w9, #0x4, lsl #12
  40b8cc:	b.ne	40ba24 <wcrtomb@plt+0x6c24>  // b.any
  40b8d0:	add	x0, sp, #0x38
  40b8d4:	str	q1, [sp, #32]
  40b8d8:	bl	41e20c <wcrtomb@plt+0x1940c>
  40b8dc:	tbz	w0, #0, 40b964 <wcrtomb@plt+0x6b64>
  40b8e0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40b8e4:	ldrb	w8, [x8, #153]
  40b8e8:	tbz	w8, #2, 40b7bc <wcrtomb@plt+0x69bc>
  40b8ec:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40b8f0:	ldr	x8, [x8, #496]
  40b8f4:	cbz	x8, 40b8fc <wcrtomb@plt+0x6afc>
  40b8f8:	blr	x8
  40b8fc:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40b900:	add	x1, x1, #0x872
  40b904:	mov	w2, #0x5                   	// #5
  40b908:	mov	x0, xzr
  40b90c:	bl	404bd0 <dcgettext@plt>
  40b910:	mov	x21, x0
  40b914:	mov	x0, x20
  40b918:	bl	4398cc <argp_parse@@Base+0xac10>
  40b91c:	mov	x3, x0
  40b920:	mov	w0, wzr
  40b924:	mov	w1, wzr
  40b928:	mov	x2, x21
  40b92c:	bl	4041d0 <error@plt>
  40b930:	b	40b7bc <wcrtomb@plt+0x69bc>
  40b934:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40b938:	ldr	w2, [x8, #196]
  40b93c:	mov	x0, x19
  40b940:	mov	x1, x21
  40b944:	bl	40a0e0 <wcrtomb@plt+0x52e0>
  40b948:	tbnz	w0, #31, 40b774 <wcrtomb@plt+0x6974>
  40b94c:	mov	x1, x25
  40b950:	mov	w23, w0
  40b954:	str	w0, [sp, #464]
  40b958:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  40b95c:	cbnz	w0, 40b7a4 <wcrtomb@plt+0x69a4>
  40b960:	b	40b88c <wcrtomb@plt+0x6a8c>
  40b964:	ldr	w8, [sp, #160]
  40b968:	str	x25, [sp, #16]
  40b96c:	and	w8, w8, #0xf000
  40b970:	cmp	w8, #0x4, lsl #12
  40b974:	str	w8, [sp, #28]
  40b978:	b.ne	40baa0 <wcrtomb@plt+0x6ca0>  // b.any
  40b97c:	ldr	w26, [sp, #28]
  40b980:	add	x2, sp, #0x38
  40b984:	mov	w0, w22
  40b988:	mov	x1, x21
  40b98c:	cmp	w26, #0x4, lsl #12
  40b990:	cset	w25, ne  // ne = any
  40b994:	mov	w3, wzr
  40b998:	mov	w4, w25
  40b99c:	bl	4246f0 <wcrtomb@plt+0x1f8f0>
  40b9a0:	add	x2, sp, #0x38
  40b9a4:	mov	w0, w22
  40b9a8:	mov	x1, x21
  40b9ac:	mov	w3, w23
  40b9b0:	bl	425420 <wcrtomb@plt+0x20620>
  40b9b4:	add	x2, sp, #0x38
  40b9b8:	mov	w0, w22
  40b9bc:	mov	x1, x21
  40b9c0:	mov	w3, w23
  40b9c4:	bl	4250d4 <wcrtomb@plt+0x202d4>
  40b9c8:	cmp	w26, #0x4, lsl #12
  40b9cc:	b.ne	40bbe8 <wcrtomb@plt+0x6de8>  // b.any
  40b9d0:	add	x0, sp, #0x38
  40b9d4:	bl	40c510 <wcrtomb@plt+0x7710>
  40b9d8:	mov	x0, x24
  40b9dc:	bl	40c510 <wcrtomb@plt+0x7710>
  40b9e0:	add	x0, sp, #0x38
  40b9e4:	sub	x1, x29, #0x90
  40b9e8:	bl	40a040 <wcrtomb@plt+0x5240>
  40b9ec:	cmp	w0, #0x3
  40b9f0:	b.ne	40bc80 <wcrtomb@plt+0x6e80>  // b.any
  40b9f4:	ldr	x20, [sp, #56]
  40b9f8:	ldur	x21, [x29, #-144]
  40b9fc:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ba00:	add	x1, x1, #0x896
  40ba04:	mov	w2, #0x5                   	// #5
  40ba08:	mov	x0, xzr
  40ba0c:	bl	404bd0 <dcgettext@plt>
  40ba10:	mov	x2, x0
  40ba14:	mov	x0, x20
  40ba18:	mov	x1, x21
  40ba1c:	bl	409f94 <wcrtomb@plt+0x5194>
  40ba20:	b	40b7bc <wcrtomb@plt+0x69bc>
  40ba24:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40ba28:	add	x9, x9, #0xe28
  40ba2c:	ldp	x10, x9, [x9]
  40ba30:	fmov	x11, d0
  40ba34:	cmp	x11, x10
  40ba38:	b.ge	40bc6c <wcrtomb@plt+0x6e6c>  // b.tcont
  40ba3c:	fmov	x11, d1
  40ba40:	cmp	x11, x10
  40ba44:	b.lt	40ba68 <wcrtomb@plt+0x6c68>  // b.tstop
  40ba48:	adrp	x12, 46b000 <argp_program_version_hook@@Base+0x458>
  40ba4c:	ldr	w12, [x12, #460]
  40ba50:	cbz	w12, 40ba68 <wcrtomb@plt+0x6c68>
  40ba54:	cmp	x11, x10
  40ba58:	b.gt	40b8d0 <wcrtomb@plt+0x6ad0>
  40ba5c:	mov	x10, v1.d[1]
  40ba60:	cmp	w10, w9
  40ba64:	b.pl	40b8d0 <wcrtomb@plt+0x6ad0>  // b.nfrst
  40ba68:	cbnz	w8, 40b7bc <wcrtomb@plt+0x69bc>
  40ba6c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40ba70:	ldr	w8, [x8, #132]
  40ba74:	cbz	w8, 40b7bc <wcrtomb@plt+0x69bc>
  40ba78:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40ba7c:	ldrb	w8, [x8, #153]
  40ba80:	tbz	w8, #0, 40b7bc <wcrtomb@plt+0x69bc>
  40ba84:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40ba88:	ldr	x8, [x8, #496]
  40ba8c:	cbz	x8, 40ba94 <wcrtomb@plt+0x6c94>
  40ba90:	blr	x8
  40ba94:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ba98:	add	x1, x1, #0x850
  40ba9c:	b	40b904 <wcrtomb@plt+0x6b04>
  40baa0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40baa4:	ldr	x0, [x8, #1472]
  40baa8:	cbz	x0, 40bbac <wcrtomb@plt+0x6dac>
  40baac:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40bab0:	ldr	w8, [x8, #1464]
  40bab4:	ldr	w9, [sp, #164]
  40bab8:	cmp	w8, w9
  40babc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40bac0:	b.cc	40bacc <wcrtomb@plt+0x6ccc>  // b.lo, b.ul, b.last
  40bac4:	ldrb	w8, [x8, #232]
  40bac8:	cbz	w8, 40bbac <wcrtomb@plt+0x6dac>
  40bacc:	ldur	q0, [sp, #144]
  40bad0:	sub	x1, x29, #0x90
  40bad4:	stur	q0, [x29, #-144]
  40bad8:	bl	43299c <argp_parse@@Base+0x3ce0>
  40badc:	cbz	x0, 40bbac <wcrtomb@plt+0x6dac>
  40bae0:	ldrb	w2, [x26, #440]
  40bae4:	mov	x25, x0
  40bae8:	add	x0, x0, #0x14
  40baec:	mov	w1, #0x1                   	// #1
  40baf0:	bl	426884 <wcrtomb@plt+0x21a84>
  40baf4:	ldr	w8, [x25, #16]
  40baf8:	mov	x9, x25
  40bafc:	mov	x25, x0
  40bb00:	cbz	w8, 40bb0c <wcrtomb@plt+0x6d0c>
  40bb04:	sub	w8, w8, #0x1
  40bb08:	str	w8, [x9, #16]
  40bb0c:	bl	405508 <wcrtomb@plt+0x708>
  40bb10:	add	x8, sp, #0x38
  40bb14:	str	x0, [sp, #8]
  40bb18:	add	x0, x8, #0x18
  40bb1c:	mov	x1, x25
  40bb20:	bl	4186dc <wcrtomb@plt+0x138dc>
  40bb24:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40bb28:	ldr	w8, [x8, #304]
  40bb2c:	mov	x0, x25
  40bb30:	cmp	w8, #0x2
  40bb34:	mov	w8, #0x63                  	// #99
  40bb38:	cinc	x26, x8, ne  // ne = any
  40bb3c:	bl	404170 <strlen@plt>
  40bb40:	cmp	x26, x0
  40bb44:	b.cs	40bb50 <wcrtomb@plt+0x6d50>  // b.hs, b.nlast
  40bb48:	add	x0, sp, #0x38
  40bb4c:	bl	40c864 <wcrtomb@plt+0x7a64>
  40bb50:	add	x0, sp, #0x38
  40bb54:	str	xzr, [sp, #192]
  40bb58:	bl	40a890 <wcrtomb@plt+0x5a90>
  40bb5c:	cbz	x0, 40bbac <wcrtomb@plt+0x6dac>
  40bb60:	mov	x1, x0
  40bb64:	mov	x8, xzr
  40bb68:	ldrb	w9, [x25, x8]
  40bb6c:	add	x10, x1, x8
  40bb70:	cmp	x8, #0x62
  40bb74:	strb	w9, [x10, #157]
  40bb78:	b.hi	40bb84 <wcrtomb@plt+0x6d84>  // b.pmore
  40bb7c:	add	x8, x8, #0x1
  40bb80:	cbnz	w9, 40bb68 <wcrtomb@plt+0x6d68>
  40bb84:	ldr	x2, [sp, #8]
  40bb88:	mov	w8, #0x31                  	// #49
  40bb8c:	add	x0, sp, #0x38
  40bb90:	strb	w8, [x1, #156]
  40bb94:	bl	40b220 <wcrtomb@plt+0x6420>
  40bb98:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40bb9c:	ldrb	w8, [x8, #232]
  40bba0:	cbz	w8, 40b7bc <wcrtomb@plt+0x69bc>
  40bba4:	ldr	x0, [sp, #56]
  40bba8:	b	40be0c <wcrtomb@plt+0x700c>
  40bbac:	ldr	w8, [sp, #160]
  40bbb0:	and	w8, w8, #0xf000
  40bbb4:	sub	w8, w8, #0x1, lsl #12
  40bbb8:	lsr	w8, w8, #12
  40bbbc:	cmp	w8, #0xb
  40bbc0:	b.hi	40bd58 <wcrtomb@plt+0x6f58>  // b.pmore
  40bbc4:	adrp	x9, 44c000 <_obstack_memory_used@@Base+0x10808>
  40bbc8:	add	x9, x9, #0x634
  40bbcc:	adr	x10, 40b97c <wcrtomb@plt+0x6b7c>
  40bbd0:	ldrh	w11, [x9, x8, lsl #1]
  40bbd4:	add	x10, x10, x11, lsl #2
  40bbd8:	mov	w25, #0x33                  	// #51
  40bbdc:	br	x10
  40bbe0:	mov	w25, #0x36                  	// #54
  40bbe4:	b	40bd08 <wcrtomb@plt+0x6f08>
  40bbe8:	cbz	w23, 40bc44 <wcrtomb@plt+0x6e44>
  40bbec:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40bbf0:	ldrb	w8, [x8, #400]
  40bbf4:	cbz	w8, 40bc44 <wcrtomb@plt+0x6e44>
  40bbf8:	ldr	x8, [sp, #192]
  40bbfc:	ldr	x9, [sp, #208]
  40bc00:	cmp	x8, #0x0
  40bc04:	add	x10, x8, #0x1ff
  40bc08:	csel	x11, x10, x8, lt  // lt = tstop
  40bc0c:	tst	x8, #0x1ff
  40bc10:	cset	w8, ne  // ne = any
  40bc14:	cmp	x10, #0x3fe
  40bc18:	cset	w10, hi  // hi = pmore
  40bc1c:	and	w8, w10, w8
  40bc20:	add	x8, x8, x11, asr #9
  40bc24:	cmp	x9, x8
  40bc28:	b.ge	40bc44 <wcrtomb@plt+0x6e44>  // b.tcont
  40bc2c:	add	x1, sp, #0x38
  40bc30:	mov	w0, w23
  40bc34:	bl	41c338 <wcrtomb@plt+0x17538>
  40bc38:	mov	w24, w0
  40bc3c:	cmp	w0, #0x3
  40bc40:	b.ne	40bc54 <wcrtomb@plt+0x6e54>  // b.any
  40bc44:	add	x1, sp, #0x38
  40bc48:	mov	w0, w23
  40bc4c:	bl	40c590 <wcrtomb@plt+0x7790>
  40bc50:	mov	w24, w0
  40bc54:	cmp	w24, #0x2
  40bc58:	b.cs	40bcd0 <wcrtomb@plt+0x6ed0>  // b.hs, b.nlast
  40bc5c:	add	x0, sp, #0x38
  40bc60:	bl	40c760 <wcrtomb@plt+0x7960>
  40bc64:	cbnz	w24, 40bf88 <wcrtomb@plt+0x7188>
  40bc68:	b	40bcb8 <wcrtomb@plt+0x6eb8>
  40bc6c:	b.gt	40b8d0 <wcrtomb@plt+0x6ad0>
  40bc70:	mov	x11, v0.d[1]
  40bc74:	cmp	w11, w9
  40bc78:	b.pl	40b8d0 <wcrtomb@plt+0x6ad0>  // b.nfrst
  40bc7c:	b	40ba3c <wcrtomb@plt+0x6c3c>
  40bc80:	add	x0, sp, #0x38
  40bc84:	bl	40b2f0 <wcrtomb@plt+0x64f0>
  40bc88:	cbz	x0, 40bf08 <wcrtomb@plt+0x7108>
  40bc8c:	mov	x22, x0
  40bc90:	add	x0, sp, #0x38
  40bc94:	mov	x1, x22
  40bc98:	bl	40c9cc <wcrtomb@plt+0x7bcc>
  40bc9c:	add	x0, sp, #0x38
  40bca0:	bl	40c16c <wcrtomb@plt+0x736c>
  40bca4:	mov	x0, x22
  40bca8:	bl	4049b0 <free@plt>
  40bcac:	ldr	w23, [sp, #464]
  40bcb0:	tbnz	w23, #31, 40bf24 <wcrtomb@plt+0x7124>
  40bcb4:	ldr	w22, [x27]
  40bcb8:	cbz	w23, 40bf14 <wcrtomb@plt+0x7114>
  40bcbc:	sub	x1, x29, #0x90
  40bcc0:	mov	w0, w23
  40bcc4:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  40bcc8:	cbnz	w0, 40bf70 <wcrtomb@plt+0x7170>
  40bccc:	b	40bfbc <wcrtomb@plt+0x71bc>
  40bcd0:	cmp	w24, #0x3
  40bcd4:	b.ne	40bf88 <wcrtomb@plt+0x7188>  // b.any
  40bcd8:	bl	404850 <abort@plt>
  40bcdc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40bce0:	ldrb	w8, [x8, #152]
  40bce4:	tbz	w8, #5, 40b7bc <wcrtomb@plt+0x69bc>
  40bce8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40bcec:	ldr	x8, [x8, #496]
  40bcf0:	cbz	x8, 40bcf8 <wcrtomb@plt+0x6ef8>
  40bcf4:	blr	x8
  40bcf8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40bcfc:	add	x1, x1, #0x8ca
  40bd00:	b	40b904 <wcrtomb@plt+0x6b04>
  40bd04:	mov	w25, #0x34                  	// #52
  40bd08:	add	x2, sp, #0x38
  40bd0c:	mov	w4, #0x1                   	// #1
  40bd10:	mov	w0, w22
  40bd14:	mov	x1, x21
  40bd18:	mov	w3, wzr
  40bd1c:	bl	4246f0 <wcrtomb@plt+0x1f8f0>
  40bd20:	add	x2, sp, #0x38
  40bd24:	mov	w0, w22
  40bd28:	mov	x1, x21
  40bd2c:	mov	w3, wzr
  40bd30:	bl	425420 <wcrtomb@plt+0x20620>
  40bd34:	add	x2, sp, #0x38
  40bd38:	mov	w0, w22
  40bd3c:	mov	x1, x21
  40bd40:	mov	w3, wzr
  40bd44:	bl	4250d4 <wcrtomb@plt+0x202d4>
  40bd48:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40bd4c:	ldr	w8, [x8, #304]
  40bd50:	cmp	w8, #0x1
  40bd54:	b.ne	40bd64 <wcrtomb@plt+0x6f64>  // b.any
  40bd58:	mov	x0, x20
  40bd5c:	bl	40c944 <wcrtomb@plt+0x7b44>
  40bd60:	b	40b7bc <wcrtomb@plt+0x69bc>
  40bd64:	bl	405508 <wcrtomb@plt+0x708>
  40bd68:	mov	x21, x0
  40bd6c:	add	x0, sp, #0x38
  40bd70:	str	xzr, [sp, #192]
  40bd74:	bl	40a890 <wcrtomb@plt+0x5a90>
  40bd78:	cbz	x0, 40b7bc <wcrtomb@plt+0x69bc>
  40bd7c:	mov	x22, x0
  40bd80:	cmp	w25, #0x36
  40bd84:	strb	w25, [x0, #156]
  40bd88:	b.eq	40bdec <wcrtomb@plt+0x6fec>  // b.none
  40bd8c:	ldr	x0, [sp, #176]
  40bd90:	bl	404890 <gnu_dev_major@plt>
  40bd94:	lsr	w8, w0, #31
  40bd98:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40bd9c:	add	x4, x22, #0x149
  40bda0:	sxtw	x1, w0
  40bda4:	add	x6, x6, #0x832
  40bda8:	mov	w2, #0x4                   	// #4
  40bdac:	mov	w5, #0x8                   	// #8
  40bdb0:	mov	w0, w8
  40bdb4:	mov	x3, xzr
  40bdb8:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40bdbc:	ldr	x0, [sp, #176]
  40bdc0:	bl	404af0 <gnu_dev_minor@plt>
  40bdc4:	lsr	w8, w0, #31
  40bdc8:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40bdcc:	add	x4, x22, #0x151
  40bdd0:	sxtw	x1, w0
  40bdd4:	add	x6, x6, #0x83a
  40bdd8:	mov	w2, #0x4                   	// #4
  40bddc:	mov	w5, #0x8                   	// #8
  40bde0:	mov	w0, w8
  40bde4:	mov	x3, xzr
  40bde8:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40bdec:	add	x0, sp, #0x38
  40bdf0:	mov	x1, x22
  40bdf4:	mov	x2, x21
  40bdf8:	bl	40b220 <wcrtomb@plt+0x6420>
  40bdfc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40be00:	ldrb	w8, [x8, #232]
  40be04:	cbz	w8, 40b7bc <wcrtomb@plt+0x69bc>
  40be08:	mov	x0, x20
  40be0c:	mov	w1, wzr
  40be10:	b	40bfb4 <wcrtomb@plt+0x71b4>
  40be14:	ldr	x2, [sp, #192]
  40be18:	mov	w0, w22
  40be1c:	mov	x1, x21
  40be20:	bl	42bc64 <wcrtomb@plt+0x26e64>
  40be24:	str	x0, [sp, #80]
  40be28:	cbz	x0, 40bf34 <wcrtomb@plt+0x7134>
  40be2c:	add	x8, sp, #0x38
  40be30:	add	x0, x8, #0x18
  40be34:	mov	w1, #0x4                   	// #4
  40be38:	bl	423984 <wcrtomb@plt+0x1eb84>
  40be3c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40be40:	ldr	w8, [x8, #304]
  40be44:	ldr	x0, [sp, #80]
  40be48:	cmp	w8, #0x2
  40be4c:	mov	w8, #0x63                  	// #99
  40be50:	cinc	x23, x8, ne  // ne = any
  40be54:	bl	404170 <strlen@plt>
  40be58:	cmp	x23, x0
  40be5c:	b.cs	40be68 <wcrtomb@plt+0x7068>  // b.hs, b.nlast
  40be60:	add	x0, sp, #0x38
  40be64:	bl	40c864 <wcrtomb@plt+0x7a64>
  40be68:	add	x2, sp, #0x38
  40be6c:	mov	w0, w22
  40be70:	mov	x1, x21
  40be74:	mov	w3, wzr
  40be78:	bl	425420 <wcrtomb@plt+0x20620>
  40be7c:	add	x2, sp, #0x38
  40be80:	mov	w0, w22
  40be84:	mov	x1, x21
  40be88:	mov	w3, wzr
  40be8c:	bl	4250d4 <wcrtomb@plt+0x202d4>
  40be90:	bl	405508 <wcrtomb@plt+0x708>
  40be94:	mov	x21, x0
  40be98:	add	x0, sp, #0x38
  40be9c:	str	xzr, [sp, #192]
  40bea0:	bl	40a890 <wcrtomb@plt+0x5a90>
  40bea4:	cbz	x0, 40b7bc <wcrtomb@plt+0x69bc>
  40bea8:	ldr	x8, [sp, #80]
  40beac:	mov	x1, x0
  40beb0:	mov	x9, xzr
  40beb4:	ldrb	w10, [x8, x9]
  40beb8:	add	x11, x1, x9
  40bebc:	cmp	x9, #0x62
  40bec0:	strb	w10, [x11, #157]
  40bec4:	b.hi	40bed0 <wcrtomb@plt+0x70d0>  // b.pmore
  40bec8:	add	x9, x9, #0x1
  40becc:	cbnz	w10, 40beb4 <wcrtomb@plt+0x70b4>
  40bed0:	mov	w8, #0x32                  	// #50
  40bed4:	add	x0, sp, #0x38
  40bed8:	mov	x2, x21
  40bedc:	strb	w8, [x1, #156]
  40bee0:	bl	40b220 <wcrtomb@plt+0x6420>
  40bee4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40bee8:	ldrb	w8, [x8, #232]
  40beec:	cbz	w8, 40befc <wcrtomb@plt+0x70fc>
  40bef0:	mov	x0, x20
  40bef4:	mov	w1, wzr
  40bef8:	bl	423ea4 <wcrtomb@plt+0x1f0a4>
  40befc:	add	x0, sp, #0x38
  40bf00:	bl	40c760 <wcrtomb@plt+0x7960>
  40bf04:	b	40b7bc <wcrtomb@plt+0x69bc>
  40bf08:	ldr	x0, [sp, #56]
  40bf0c:	bl	419cdc <wcrtomb@plt+0x14edc>
  40bf10:	b	40bf88 <wcrtomb@plt+0x7188>
  40bf14:	cbz	x19, 40bf58 <wcrtomb@plt+0x7158>
  40bf18:	tbz	w22, #31, 40bf58 <wcrtomb@plt+0x7158>
  40bf1c:	neg	w21, w22
  40bf20:	b	40bf28 <wcrtomb@plt+0x7128>
  40bf24:	neg	w21, w23
  40bf28:	bl	404ce0 <__errno_location@plt>
  40bf2c:	str	w21, [x0]
  40bf30:	b	40bf70 <wcrtomb@plt+0x7170>
  40bf34:	bl	404ce0 <__errno_location@plt>
  40bf38:	ldr	w8, [x0]
  40bf3c:	cmp	w8, #0xc
  40bf40:	b.eq	40c0c4 <wcrtomb@plt+0x72c4>  // b.none
  40bf44:	cmp	x19, #0x0
  40bf48:	adrp	x2, 419000 <wcrtomb@plt+0x14200>
  40bf4c:	cset	w1, eq  // eq = none
  40bf50:	add	x2, x2, #0xcb8
  40bf54:	b	40b7b4 <wcrtomb@plt+0x69b4>
  40bf58:	ldr	w3, [x28, #48]
  40bf5c:	sub	x2, x29, #0x90
  40bf60:	mov	w0, w22
  40bf64:	mov	x1, x21
  40bf68:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  40bf6c:	cbz	w0, 40bfbc <wcrtomb@plt+0x71bc>
  40bf70:	cmp	x19, #0x0
  40bf74:	adrp	x2, 419000 <wcrtomb@plt+0x14200>
  40bf78:	cset	w1, eq  // eq = none
  40bf7c:	add	x2, x2, #0xd24
  40bf80:	mov	x0, x20
  40bf84:	bl	419d48 <wcrtomb@plt+0x14f48>
  40bf88:	mov	w24, wzr
  40bf8c:	add	x0, sp, #0x38
  40bf90:	bl	420c9c <wcrtomb@plt+0x1be9c>
  40bf94:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40bf98:	ldrb	w8, [x8, #232]
  40bf9c:	cbz	w8, 40b7bc <wcrtomb@plt+0x69bc>
  40bfa0:	cbz	w24, 40b7bc <wcrtomb@plt+0x69bc>
  40bfa4:	tbz	w0, #0, 40b7bc <wcrtomb@plt+0x69bc>
  40bfa8:	cmp	w26, #0x4, lsl #12
  40bfac:	cset	w1, eq  // eq = none
  40bfb0:	mov	x0, x20
  40bfb4:	bl	423ea4 <wcrtomb@plt+0x1f0a4>
  40bfb8:	b	40b7bc <wcrtomb@plt+0x69bc>
  40bfbc:	ldr	q0, [sp, #32]
  40bfc0:	ldur	x8, [x29, #-40]
  40bfc4:	fmov	x9, d0
  40bfc8:	cmp	x8, x9
  40bfcc:	b.ne	40bfe0 <wcrtomb@plt+0x71e0>  // b.any
  40bfd0:	ldur	x8, [x29, #-32]
  40bfd4:	mov	x9, v0.d[1]
  40bfd8:	cmp	w8, w9
  40bfdc:	b.eq	40bff8 <wcrtomb@plt+0x71f8>  // b.none
  40bfe0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40bfe4:	ldrb	w8, [x8, #232]
  40bfe8:	cmp	w8, #0x0
  40bfec:	cset	w8, eq  // eq = none
  40bff0:	orr	w8, w8, w25
  40bff4:	tbnz	w8, #0, 40c008 <wcrtomb@plt+0x7208>
  40bff8:	ldur	x8, [x29, #-96]
  40bffc:	ldr	x9, [sp, #16]
  40c000:	cmp	x9, x8
  40c004:	b.ge	40c068 <wcrtomb@plt+0x7268>  // b.tcont
  40c008:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40c00c:	ldrb	w8, [x8, #152]
  40c010:	tbz	w8, #4, 40c058 <wcrtomb@plt+0x7258>
  40c014:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40c018:	ldr	x8, [x8, #496]
  40c01c:	cbz	x8, 40c024 <wcrtomb@plt+0x7224>
  40c020:	blr	x8
  40c024:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40c028:	add	x1, x1, #0x8ab
  40c02c:	mov	w2, #0x5                   	// #5
  40c030:	mov	x0, xzr
  40c034:	bl	404bd0 <dcgettext@plt>
  40c038:	mov	x21, x0
  40c03c:	mov	x0, x20
  40c040:	bl	4398cc <argp_parse@@Base+0xac10>
  40c044:	mov	x3, x0
  40c048:	mov	w0, wzr
  40c04c:	mov	w1, wzr
  40c050:	mov	x2, x21
  40c054:	bl	4041d0 <error@plt>
  40c058:	mov	w0, #0x1                   	// #1
  40c05c:	mov	w24, #0x1                   	// #1
  40c060:	bl	420c68 <wcrtomb@plt+0x1be68>
  40c064:	b	40bf8c <wcrtomb@plt+0x718c>
  40c068:	ldr	x9, [sp, #16]
  40c06c:	cmp	w26, #0x4, lsl #12
  40c070:	cset	w8, ne  // ne = any
  40c074:	mov	w24, #0x1                   	// #1
  40c078:	cmp	x9, #0x0
  40c07c:	cset	w9, eq  // eq = none
  40c080:	and	w8, w9, w8
  40c084:	tbnz	w8, #0, 40bf8c <wcrtomb@plt+0x718c>
  40c088:	cbz	w23, 40bf8c <wcrtomb@plt+0x718c>
  40c08c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40c090:	ldr	w8, [x8, #44]
  40c094:	cmp	w8, #0x1
  40c098:	b.ne	40bf8c <wcrtomb@plt+0x718c>  // b.any
  40c09c:	ldp	x3, x4, [sp, #272]
  40c0a0:	mov	w0, w23
  40c0a4:	mov	w1, w22
  40c0a8:	mov	x2, x21
  40c0ac:	bl	419810 <wcrtomb@plt+0x14a10>
  40c0b0:	cbz	w0, 40c0bc <wcrtomb@plt+0x72bc>
  40c0b4:	mov	x0, x20
  40c0b8:	bl	426748 <wcrtomb@plt+0x21948>
  40c0bc:	mov	w24, #0x1                   	// #1
  40c0c0:	b	40bf8c <wcrtomb@plt+0x718c>
  40c0c4:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  40c0c8:	stp	x29, x30, [sp, #-64]!
  40c0cc:	stp	x22, x21, [sp, #32]
  40c0d0:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40c0d4:	ldr	x0, [x22, #1472]
  40c0d8:	str	x23, [sp, #16]
  40c0dc:	stp	x20, x19, [sp, #48]
  40c0e0:	mov	x29, sp
  40c0e4:	cbz	x0, 40c158 <wcrtomb@plt+0x7358>
  40c0e8:	bl	432a3c <argp_parse@@Base+0x3d80>
  40c0ec:	cbz	x0, 40c158 <wcrtomb@plt+0x7358>
  40c0f0:	adrp	x20, 44c000 <_obstack_memory_used@@Base+0x10808>
  40c0f4:	mov	x19, x0
  40c0f8:	adrp	x23, 46b000 <argp_program_version_hook@@Base+0x458>
  40c0fc:	add	x20, x20, #0x71b
  40c100:	ldr	w8, [x19, #16]
  40c104:	cbz	w8, 40c144 <wcrtomb@plt+0x7344>
  40c108:	ldr	x8, [x23, #496]
  40c10c:	cbz	x8, 40c114 <wcrtomb@plt+0x7314>
  40c110:	blr	x8
  40c114:	mov	w2, #0x5                   	// #5
  40c118:	mov	x0, xzr
  40c11c:	mov	x1, x20
  40c120:	bl	404bd0 <dcgettext@plt>
  40c124:	mov	x21, x0
  40c128:	add	x0, x19, #0x14
  40c12c:	bl	439ac0 <argp_parse@@Base+0xae04>
  40c130:	mov	x3, x0
  40c134:	mov	w0, wzr
  40c138:	mov	w1, wzr
  40c13c:	mov	x2, x21
  40c140:	bl	4041d0 <error@plt>
  40c144:	ldr	x0, [x22, #1472]
  40c148:	mov	x1, x19
  40c14c:	bl	432a74 <argp_parse@@Base+0x3db8>
  40c150:	mov	x19, x0
  40c154:	cbnz	x0, 40c100 <wcrtomb@plt+0x7300>
  40c158:	ldp	x20, x19, [sp, #48]
  40c15c:	ldp	x22, x21, [sp, #32]
  40c160:	ldr	x23, [sp, #16]
  40c164:	ldp	x29, x30, [sp], #64
  40c168:	ret
  40c16c:	sub	sp, sp, #0xb0
  40c170:	stp	x29, x30, [sp, #128]
  40c174:	stp	x20, x19, [sp, #160]
  40c178:	str	x21, [sp, #144]
  40c17c:	ldr	x21, [x0, #392]
  40c180:	add	x29, sp, #0x80
  40c184:	cbz	x21, 40c1ec <wcrtomb@plt+0x73ec>
  40c188:	ldr	w8, [x21, #408]
  40c18c:	cbnz	w8, 40c1ec <wcrtomb@plt+0x73ec>
  40c190:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  40c194:	ldr	w0, [x0, #408]
  40c198:	ldr	w2, [x20, #188]
  40c19c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  40c1a0:	add	x1, x1, #0x949
  40c1a4:	bl	404cc0 <openat@plt>
  40c1a8:	tbnz	w0, #31, 40c200 <wcrtomb@plt+0x7400>
  40c1ac:	mov	x1, sp
  40c1b0:	mov	w19, w0
  40c1b4:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  40c1b8:	cbnz	w0, 40c1dc <wcrtomb@plt+0x73dc>
  40c1bc:	ldr	x8, [x21, #96]
  40c1c0:	ldr	x9, [sp, #8]
  40c1c4:	cmp	x8, x9
  40c1c8:	b.ne	40c1dc <wcrtomb@plt+0x73dc>  // b.any
  40c1cc:	ldr	x8, [x21, #88]
  40c1d0:	ldr	x9, [sp]
  40c1d4:	cmp	x8, x9
  40c1d8:	b.eq	40c1e8 <wcrtomb@plt+0x73e8>  // b.none
  40c1dc:	mov	w0, w19
  40c1e0:	bl	4047a0 <close@plt>
  40c1e4:	mov	w19, #0x2                   	// #2
  40c1e8:	str	w19, [x21, #408]
  40c1ec:	ldp	x20, x19, [sp, #160]
  40c1f0:	ldr	x21, [sp, #144]
  40c1f4:	ldp	x29, x30, [sp, #128]
  40c1f8:	add	sp, sp, #0xb0
  40c1fc:	ret
  40c200:	bl	404ce0 <__errno_location@plt>
  40c204:	ldr	w8, [x0]
  40c208:	cmp	w8, #0x1
  40c20c:	neg	w19, w8
  40c210:	b.lt	40c1e8 <wcrtomb@plt+0x73e8>  // b.tstop
  40c214:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  40c218:	ldr	x1, [x21]
  40c21c:	ldr	w0, [x8, #1944]
  40c220:	ldr	w2, [x20, #188]
  40c224:	bl	404cc0 <openat@plt>
  40c228:	tbnz	w0, #31, 40c1e8 <wcrtomb@plt+0x73e8>
  40c22c:	mov	w20, w0
  40c230:	mov	x1, sp
  40c234:	mov	w0, w19
  40c238:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  40c23c:	cbnz	w0, 40c268 <wcrtomb@plt+0x7468>
  40c240:	ldr	x8, [x21, #96]
  40c244:	ldr	x9, [sp, #8]
  40c248:	cmp	x8, x9
  40c24c:	b.ne	40c268 <wcrtomb@plt+0x7468>  // b.any
  40c250:	ldr	x8, [x21, #88]
  40c254:	ldr	x9, [sp]
  40c258:	cmp	x8, x9
  40c25c:	b.ne	40c268 <wcrtomb@plt+0x7468>  // b.any
  40c260:	mov	w19, w20
  40c264:	b	40c1e8 <wcrtomb@plt+0x73e8>
  40c268:	mov	w0, w20
  40c26c:	bl	4047a0 <close@plt>
  40c270:	b	40c1e8 <wcrtomb@plt+0x73e8>
  40c274:	stp	x29, x30, [sp, #-32]!
  40c278:	stp	x20, x19, [sp, #16]
  40c27c:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40c280:	ldr	w8, [x20, #1488]
  40c284:	mov	x19, x0
  40c288:	mov	x29, sp
  40c28c:	cbnz	w8, 40c2b8 <wcrtomb@plt+0x74b8>
  40c290:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40c294:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40c298:	add	x0, x0, #0x7b0
  40c29c:	add	x1, x1, #0x5d0
  40c2a0:	bl	41a09c <wcrtomb@plt+0x1529c>
  40c2a4:	cbz	w0, 40c2b0 <wcrtomb@plt+0x74b0>
  40c2a8:	ldr	w8, [x20, #1488]
  40c2ac:	b	40c2b8 <wcrtomb@plt+0x74b8>
  40c2b0:	mov	w8, #0xfffffffe            	// #-2
  40c2b4:	str	w8, [x20, #1488]
  40c2b8:	str	wzr, [x19]
  40c2bc:	ldp	x20, x19, [sp, #16]
  40c2c0:	mov	w0, w8
  40c2c4:	ldp	x29, x30, [sp], #32
  40c2c8:	ret
  40c2cc:	stp	x29, x30, [sp, #-32]!
  40c2d0:	stp	x20, x19, [sp, #16]
  40c2d4:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40c2d8:	ldr	w8, [x20, #1492]
  40c2dc:	mov	x19, x0
  40c2e0:	mov	x29, sp
  40c2e4:	cbnz	w8, 40c310 <wcrtomb@plt+0x7510>
  40c2e8:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40c2ec:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40c2f0:	add	x0, x0, #0x7b0
  40c2f4:	add	x1, x1, #0x5d4
  40c2f8:	bl	41a150 <wcrtomb@plt+0x15350>
  40c2fc:	cbz	w0, 40c308 <wcrtomb@plt+0x7508>
  40c300:	ldr	w8, [x20, #1492]
  40c304:	b	40c310 <wcrtomb@plt+0x7510>
  40c308:	mov	w8, #0xfffffffe            	// #-2
  40c30c:	str	w8, [x20, #1492]
  40c310:	str	wzr, [x19]
  40c314:	ldp	x20, x19, [sp, #16]
  40c318:	mov	w0, w8
  40c31c:	ldp	x29, x30, [sp], #32
  40c320:	ret
  40c324:	stp	x29, x30, [sp, #-32]!
  40c328:	stp	x20, x19, [sp, #16]
  40c32c:	mov	x29, sp
  40c330:	mov	x20, x0
  40c334:	bl	405574 <wcrtomb@plt+0x774>
  40c338:	mov	w2, #0x200                 	// #512
  40c33c:	mov	w1, wzr
  40c340:	mov	x19, x0
  40c344:	bl	4045e0 <memset@plt>
  40c348:	ldr	x8, [x20, #8]
  40c34c:	mov	x9, xzr
  40c350:	ldrb	w10, [x8, x9]
  40c354:	cmp	x9, #0x62
  40c358:	strb	w10, [x19, x9]
  40c35c:	b.hi	40c368 <wcrtomb@plt+0x7568>  // b.pmore
  40c360:	add	x9, x9, #0x1
  40c364:	cbnz	w10, 40c350 <wcrtomb@plt+0x7550>
  40c368:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40c36c:	ldr	w8, [x8, #304]
  40c370:	cmp	w8, #0x2
  40c374:	b.ne	40c37c <wcrtomb@plt+0x757c>  // b.any
  40c378:	strb	wzr, [x19, #99]
  40c37c:	mov	x0, x19
  40c380:	ldp	x20, x19, [sp, #16]
  40c384:	ldp	x29, x30, [sp], #32
  40c388:	ret
  40c38c:	stp	x29, x30, [sp, #-64]!
  40c390:	stp	x22, x21, [sp, #32]
  40c394:	mov	x21, x0
  40c398:	mov	x0, x1
  40c39c:	stp	x24, x23, [sp, #16]
  40c3a0:	stp	x20, x19, [sp, #48]
  40c3a4:	mov	x29, sp
  40c3a8:	mov	w22, w2
  40c3ac:	mov	x20, x1
  40c3b0:	bl	404170 <strlen@plt>
  40c3b4:	add	x19, x0, #0x1
  40c3b8:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40c3bc:	add	x0, x0, #0x824
  40c3c0:	mov	x1, x19
  40c3c4:	mov	x2, xzr
  40c3c8:	bl	40a5e8 <wcrtomb@plt+0x57e8>
  40c3cc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40c3d0:	ldrb	w8, [x8, #160]
  40c3d4:	mov	x23, x0
  40c3d8:	cbnz	w8, 40c460 <wcrtomb@plt+0x7660>
  40c3dc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40c3e0:	ldr	x8, [x8, #1496]
  40c3e4:	cbnz	x8, 40c410 <wcrtomb@plt+0x7610>
  40c3e8:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40c3ec:	add	x24, x24, #0x5d8
  40c3f0:	mov	w0, wzr
  40c3f4:	mov	x1, x24
  40c3f8:	bl	419f64 <wcrtomb@plt+0x15164>
  40c3fc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40c400:	add	x1, x1, #0x5e0
  40c404:	mov	w0, wzr
  40c408:	bl	41a000 <wcrtomb@plt+0x15200>
  40c40c:	ldr	x8, [x24]
  40c410:	mov	x9, xzr
  40c414:	add	x10, x23, #0x109
  40c418:	ldrb	w11, [x8, x9]
  40c41c:	cmp	x9, #0x1e
  40c420:	strb	w11, [x10, x9]
  40c424:	b.hi	40c430 <wcrtomb@plt+0x7630>  // b.pmore
  40c428:	add	x9, x9, #0x1
  40c42c:	cbnz	w11, 40c418 <wcrtomb@plt+0x7618>
  40c430:	strb	wzr, [x23, #296]
  40c434:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40c438:	ldr	x9, [x9, #1504]
  40c43c:	mov	x8, xzr
  40c440:	add	x10, x23, #0x129
  40c444:	ldrb	w11, [x9, x8]
  40c448:	cmp	x8, #0x1e
  40c44c:	strb	w11, [x10, x8]
  40c450:	b.hi	40c45c <wcrtomb@plt+0x765c>  // b.pmore
  40c454:	add	x8, x8, #0x1
  40c458:	cbnz	w11, 40c444 <wcrtomb@plt+0x7644>
  40c45c:	strb	wzr, [x23, #328]
  40c460:	mov	x9, #0x7375                	// #29557
  40c464:	movk	x9, #0x6174, lsl #16
  40c468:	movk	x9, #0x2072, lsl #32
  40c46c:	add	x8, x23, #0x101
  40c470:	movk	x9, #0x20, lsl #48
  40c474:	mov	x2, #0xffffffffffffffff    	// #-1
  40c478:	mov	x0, x21
  40c47c:	mov	x1, x23
  40c480:	str	x9, [x8]
  40c484:	strb	w22, [x23, #156]
  40c488:	bl	40b220 <wcrtomb@plt+0x6420>
  40c48c:	bl	405574 <wcrtomb@plt+0x774>
  40c490:	mov	x21, x0
  40c494:	bl	4058c0 <wcrtomb@plt+0xac0>
  40c498:	mov	x22, x0
  40c49c:	cmp	x0, x19
  40c4a0:	b.cs	40c4d0 <wcrtomb@plt+0x76d0>  // b.hs, b.nlast
  40c4a4:	mov	x0, x21
  40c4a8:	mov	x1, x20
  40c4ac:	mov	x2, x22
  40c4b0:	bl	4040f0 <memcpy@plt>
  40c4b4:	sub	x8, x22, #0x1
  40c4b8:	and	x8, x8, #0xfffffffffffffe00
  40c4bc:	add	x0, x21, x8
  40c4c0:	add	x20, x20, x22
  40c4c4:	sub	x19, x19, x22
  40c4c8:	bl	40587c <wcrtomb@plt+0xa7c>
  40c4cc:	b	40c48c <wcrtomb@plt+0x768c>
  40c4d0:	mov	x0, x21
  40c4d4:	mov	x1, x20
  40c4d8:	mov	x2, x19
  40c4dc:	bl	4040f0 <memcpy@plt>
  40c4e0:	add	x0, x21, x19
  40c4e4:	sub	x2, x22, x19
  40c4e8:	mov	w1, wzr
  40c4ec:	bl	4045e0 <memset@plt>
  40c4f0:	sub	x8, x19, #0x1
  40c4f4:	and	x8, x8, #0xfffffffffffffe00
  40c4f8:	add	x0, x21, x8
  40c4fc:	ldp	x20, x19, [sp, #48]
  40c500:	ldp	x22, x21, [sp, #32]
  40c504:	ldp	x24, x23, [sp, #16]
  40c508:	ldp	x29, x30, [sp], #64
  40c50c:	b	40587c <wcrtomb@plt+0xa7c>
  40c510:	stp	x29, x30, [sp, #-48]!
  40c514:	stp	x20, x19, [sp, #32]
  40c518:	ldr	x20, [x0]
  40c51c:	mov	x19, x0
  40c520:	str	x21, [sp, #16]
  40c524:	mov	x29, sp
  40c528:	mov	x0, x20
  40c52c:	bl	404170 <strlen@plt>
  40c530:	mov	x21, x0
  40c534:	cbz	x0, 40c54c <wcrtomb@plt+0x774c>
  40c538:	add	x8, x20, x21
  40c53c:	ldurb	w8, [x8, #-1]
  40c540:	sub	x0, x21, #0x1
  40c544:	cmp	w8, #0x2f
  40c548:	b.eq	40c530 <wcrtomb@plt+0x7730>  // b.none
  40c54c:	ldrb	w8, [x20, x21]
  40c550:	cmp	w8, #0x2f
  40c554:	b.eq	40c56c <wcrtomb@plt+0x776c>  // b.none
  40c558:	add	x1, x21, #0x2
  40c55c:	mov	x0, x20
  40c560:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  40c564:	mov	x20, x0
  40c568:	str	x0, [x19]
  40c56c:	mov	w8, #0x2f                  	// #47
  40c570:	strb	w8, [x20, x21]
  40c574:	ldr	x8, [x19]
  40c578:	add	x8, x8, x21
  40c57c:	strb	wzr, [x8, #1]
  40c580:	ldp	x20, x19, [sp, #32]
  40c584:	ldr	x21, [sp, #16]
  40c588:	ldp	x29, x30, [sp], #48
  40c58c:	ret
  40c590:	sub	sp, sp, #0x70
  40c594:	stp	x29, x30, [sp, #32]
  40c598:	stp	x24, x23, [sp, #64]
  40c59c:	stp	x22, x21, [sp, #80]
  40c5a0:	stp	x20, x19, [sp, #96]
  40c5a4:	ldr	x19, [x1, #136]
  40c5a8:	str	x25, [sp, #48]
  40c5ac:	add	x29, sp, #0x20
  40c5b0:	mov	x20, x1
  40c5b4:	mov	w21, w0
  40c5b8:	bl	405508 <wcrtomb@plt+0x708>
  40c5bc:	mov	x22, x0
  40c5c0:	mov	x0, x20
  40c5c4:	bl	40a890 <wcrtomb@plt+0x5a90>
  40c5c8:	cbz	x0, 40c714 <wcrtomb@plt+0x7914>
  40c5cc:	mov	x1, x0
  40c5d0:	mov	x0, x20
  40c5d4:	mov	x2, x22
  40c5d8:	bl	40b220 <wcrtomb@plt+0x6420>
  40c5dc:	ldr	x1, [x20, #136]
  40c5e0:	ldr	x0, [x20, #8]
  40c5e4:	mov	x2, x1
  40c5e8:	bl	404f1c <wcrtomb@plt+0x11c>
  40c5ec:	mov	w25, #0x200                 	// #512
  40c5f0:	cmp	x19, #0x1
  40c5f4:	b.lt	40c71c <wcrtomb@plt+0x791c>  // b.tstop
  40c5f8:	bl	405574 <wcrtomb@plt+0x774>
  40c5fc:	mov	x23, x0
  40c600:	bl	4058c0 <wcrtomb@plt+0xac0>
  40c604:	mov	x22, x0
  40c608:	cmp	x19, x0
  40c60c:	b.cs	40c630 <wcrtomb@plt+0x7830>  // b.hs, b.nlast
  40c610:	ands	x8, x19, #0x1ff
  40c614:	mov	x22, x19
  40c618:	b.eq	40c630 <wcrtomb@plt+0x7830>  // b.none
  40c61c:	add	x0, x23, x19
  40c620:	sub	x2, x25, x8
  40c624:	mov	w1, wzr
  40c628:	bl	4045e0 <memset@plt>
  40c62c:	mov	x22, x19
  40c630:	cmp	w21, #0x1
  40c634:	mov	x24, x22
  40c638:	b.lt	40c650 <wcrtomb@plt+0x7850>  // b.tstop
  40c63c:	mov	w0, w21
  40c640:	mov	x1, x23
  40c644:	mov	x2, x22
  40c648:	bl	4196d4 <wcrtomb@plt+0x148d4>
  40c64c:	mov	x24, x0
  40c650:	cmn	x24, #0x1
  40c654:	b.eq	40c724 <wcrtomb@plt+0x7924>  // b.none
  40c658:	sub	x8, x22, #0x1
  40c65c:	and	x8, x8, #0xfffffffffffffe00
  40c660:	add	x0, x23, x8
  40c664:	sub	x19, x19, x24
  40c668:	bl	40587c <wcrtomb@plt+0xa7c>
  40c66c:	subs	x22, x22, x24
  40c670:	b.eq	40c5f0 <wcrtomb@plt+0x77f0>  // b.none
  40c674:	add	x0, x23, x24
  40c678:	mov	w1, wzr
  40c67c:	mov	x2, x22
  40c680:	bl	4045e0 <memset@plt>
  40c684:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40c688:	ldrb	w8, [x8, #152]
  40c68c:	tbz	w8, #7, 40c6f8 <wcrtomb@plt+0x78f8>
  40c690:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40c694:	ldr	x8, [x8, #496]
  40c698:	cbz	x8, 40c6a0 <wcrtomb@plt+0x78a0>
  40c69c:	blr	x8
  40c6a0:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40c6a4:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  40c6a8:	add	x1, x1, #0x92f
  40c6ac:	add	x2, x2, #0x95e
  40c6b0:	mov	w4, #0x5                   	// #5
  40c6b4:	mov	x0, xzr
  40c6b8:	mov	x3, x19
  40c6bc:	bl	404ad0 <dcngettext@plt>
  40c6c0:	ldr	x8, [x20]
  40c6c4:	mov	x20, x0
  40c6c8:	mov	x0, x8
  40c6cc:	bl	4398cc <argp_parse@@Base+0xac10>
  40c6d0:	mov	x21, x0
  40c6d4:	add	x1, sp, #0x8
  40c6d8:	mov	x0, x19
  40c6dc:	bl	43401c <argp_parse@@Base+0x5360>
  40c6e0:	mov	x4, x0
  40c6e4:	mov	w0, wzr
  40c6e8:	mov	w1, wzr
  40c6ec:	mov	x2, x20
  40c6f0:	mov	x3, x21
  40c6f4:	bl	4041d0 <error@plt>
  40c6f8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40c6fc:	ldrb	w8, [x8, #441]
  40c700:	cbnz	w8, 40c70c <wcrtomb@plt+0x790c>
  40c704:	mov	w0, #0x1                   	// #1
  40c708:	bl	420c68 <wcrtomb@plt+0x1be68>
  40c70c:	sub	x0, x19, x22
  40c710:	b	40c73c <wcrtomb@plt+0x793c>
  40c714:	mov	w0, #0x2                   	// #2
  40c718:	b	40c744 <wcrtomb@plt+0x7944>
  40c71c:	mov	w0, wzr
  40c720:	b	40c744 <wcrtomb@plt+0x7944>
  40c724:	ldr	x8, [x20, #136]
  40c728:	ldr	x0, [x20]
  40c72c:	mov	x2, x22
  40c730:	sub	x1, x8, x19
  40c734:	bl	419c94 <wcrtomb@plt+0x14e94>
  40c738:	mov	x0, x19
  40c73c:	bl	40b2a4 <wcrtomb@plt+0x64a4>
  40c740:	mov	w0, #0x1                   	// #1
  40c744:	ldp	x20, x19, [sp, #96]
  40c748:	ldp	x22, x21, [sp, #80]
  40c74c:	ldp	x24, x23, [sp, #64]
  40c750:	ldr	x25, [sp, #48]
  40c754:	ldp	x29, x30, [sp, #32]
  40c758:	add	sp, sp, #0x70
  40c75c:	ret
  40c760:	sub	sp, sp, #0x30
  40c764:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40c768:	ldrb	w8, [x8, #3668]
  40c76c:	stp	x29, x30, [sp, #16]
  40c770:	stp	x20, x19, [sp, #32]
  40c774:	add	x29, sp, #0x10
  40c778:	cbnz	w8, 40c84c <wcrtomb@plt+0x7a4c>
  40c77c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40c780:	ldr	w8, [x8, #1464]
  40c784:	ldr	w9, [x0, #108]
  40c788:	mov	x20, x0
  40c78c:	cmp	w8, w9
  40c790:	b.cs	40c84c <wcrtomb@plt+0x7a4c>  // b.hs, b.nlast
  40c794:	str	xzr, [sp, #8]
  40c798:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40c79c:	ldr	x0, [x20]
  40c7a0:	ldrb	w2, [x8, #440]
  40c7a4:	mov	w1, #0x1                   	// #1
  40c7a8:	bl	426884 <wcrtomb@plt+0x21a84>
  40c7ac:	mov	x1, x0
  40c7b0:	add	x0, sp, #0x8
  40c7b4:	bl	4186dc <wcrtomb@plt+0x138dc>
  40c7b8:	add	x0, sp, #0x8
  40c7bc:	mov	w1, #0x2                   	// #2
  40c7c0:	bl	423984 <wcrtomb@plt+0x1eb84>
  40c7c4:	ldr	x0, [sp, #8]
  40c7c8:	bl	404170 <strlen@plt>
  40c7cc:	add	x0, x0, #0x15
  40c7d0:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  40c7d4:	ldur	q0, [x20, #88]
  40c7d8:	ldr	x1, [sp, #8]
  40c7dc:	mov	x19, x0
  40c7e0:	str	q0, [x0]
  40c7e4:	ldr	w8, [x20, #108]
  40c7e8:	str	w8, [x0, #16]
  40c7ec:	add	x0, x0, #0x14
  40c7f0:	bl	404b00 <strcpy@plt>
  40c7f4:	ldr	x0, [sp, #8]
  40c7f8:	bl	4049b0 <free@plt>
  40c7fc:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40c800:	ldr	x0, [x20, #1472]
  40c804:	cbnz	x0, 40c82c <wcrtomb@plt+0x7a2c>
  40c808:	adrp	x2, 40c000 <wcrtomb@plt+0x7200>
  40c80c:	adrp	x3, 40c000 <wcrtomb@plt+0x7200>
  40c810:	add	x2, x2, #0xd80
  40c814:	add	x3, x3, #0xd94
  40c818:	mov	x1, xzr
  40c81c:	mov	x4, xzr
  40c820:	bl	432c6c <argp_parse@@Base+0x3fb0>
  40c824:	str	x0, [x20, #1472]
  40c828:	cbz	x0, 40c85c <wcrtomb@plt+0x7a5c>
  40c82c:	mov	x1, x19
  40c830:	bl	433508 <argp_parse@@Base+0x484c>
  40c834:	cbz	x0, 40c85c <wcrtomb@plt+0x7a5c>
  40c838:	cmp	x0, x19
  40c83c:	b.ne	40c860 <wcrtomb@plt+0x7a60>  // b.any
  40c840:	ldr	w8, [x19, #16]
  40c844:	sub	w8, w8, #0x1
  40c848:	str	w8, [x19, #16]
  40c84c:	ldp	x20, x19, [sp, #32]
  40c850:	ldp	x29, x30, [sp, #16]
  40c854:	add	sp, sp, #0x30
  40c858:	ret
  40c85c:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  40c860:	bl	404850 <abort@plt>
  40c864:	stp	x29, x30, [sp, #-32]!
  40c868:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40c86c:	ldr	w8, [x8, #304]
  40c870:	str	x19, [sp, #16]
  40c874:	mov	x29, sp
  40c878:	cmp	w8, #0x6
  40c87c:	b.hi	40c940 <wcrtomb@plt+0x7b40>  // b.pmore
  40c880:	mov	w9, #0x1                   	// #1
  40c884:	lsl	w9, w9, w8
  40c888:	mov	w10, #0x2a                  	// #42
  40c88c:	mov	x19, x0
  40c890:	tst	w9, w10
  40c894:	b.eq	40c8f8 <wcrtomb@plt+0x7af8>  // b.none
  40c898:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40c89c:	ldr	x8, [x8, #496]
  40c8a0:	cbz	x8, 40c8a8 <wcrtomb@plt+0x7aa8>
  40c8a4:	blr	x8
  40c8a8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40c8ac:	add	x1, x1, #0x997
  40c8b0:	mov	w2, #0x5                   	// #5
  40c8b4:	mov	x0, xzr
  40c8b8:	bl	404bd0 <dcgettext@plt>
  40c8bc:	ldr	x8, [x19, #24]
  40c8c0:	mov	x19, x0
  40c8c4:	mov	x0, x8
  40c8c8:	bl	4398cc <argp_parse@@Base+0xac10>
  40c8cc:	mov	x3, x0
  40c8d0:	mov	w0, wzr
  40c8d4:	mov	w1, wzr
  40c8d8:	mov	x2, x19
  40c8dc:	bl	4041d0 <error@plt>
  40c8e0:	ldr	x19, [sp, #16]
  40c8e4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40c8e8:	mov	w9, #0x2                   	// #2
  40c8ec:	str	w9, [x8, #2944]
  40c8f0:	ldp	x29, x30, [sp], #32
  40c8f4:	ret
  40c8f8:	mov	w10, #0x44                  	// #68
  40c8fc:	tst	w9, w10
  40c900:	b.eq	40c91c <wcrtomb@plt+0x7b1c>  // b.none
  40c904:	ldr	x1, [x19, #24]
  40c908:	mov	x0, x19
  40c90c:	ldr	x19, [sp, #16]
  40c910:	mov	w2, #0x4b                  	// #75
  40c914:	ldp	x29, x30, [sp], #32
  40c918:	b	40c38c <wcrtomb@plt+0x758c>
  40c91c:	cmp	w8, #0x4
  40c920:	b.ne	40c940 <wcrtomb@plt+0x7b40>  // b.any
  40c924:	mov	x1, x19
  40c928:	ldr	x19, [sp, #16]
  40c92c:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40c930:	add	x0, x0, #0x98e
  40c934:	mov	x2, xzr
  40c938:	ldp	x29, x30, [sp], #32
  40c93c:	b	411550 <wcrtomb@plt+0xc750>
  40c940:	bl	404850 <abort@plt>
  40c944:	stp	x29, x30, [sp, #-32]!
  40c948:	stp	x20, x19, [sp, #16]
  40c94c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40c950:	ldrb	w8, [x8, #152]
  40c954:	mov	x29, sp
  40c958:	tbz	w8, #5, 40c9a4 <wcrtomb@plt+0x7ba4>
  40c95c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40c960:	ldr	x8, [x8, #496]
  40c964:	mov	x19, x0
  40c968:	cbz	x8, 40c970 <wcrtomb@plt+0x7b70>
  40c96c:	blr	x8
  40c970:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40c974:	add	x1, x1, #0x9bd
  40c978:	mov	w2, #0x5                   	// #5
  40c97c:	mov	x0, xzr
  40c980:	bl	404bd0 <dcgettext@plt>
  40c984:	mov	x20, x0
  40c988:	mov	x0, x19
  40c98c:	bl	4398cc <argp_parse@@Base+0xac10>
  40c990:	mov	x3, x0
  40c994:	mov	w0, wzr
  40c998:	mov	w1, wzr
  40c99c:	mov	x2, x20
  40c9a0:	bl	4041d0 <error@plt>
  40c9a4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40c9a8:	ldrb	w8, [x8, #441]
  40c9ac:	cbz	w8, 40c9bc <wcrtomb@plt+0x7bbc>
  40c9b0:	ldp	x20, x19, [sp, #16]
  40c9b4:	ldp	x29, x30, [sp], #32
  40c9b8:	ret
  40c9bc:	ldp	x20, x19, [sp, #16]
  40c9c0:	mov	w0, #0x2                   	// #2
  40c9c4:	ldp	x29, x30, [sp], #32
  40c9c8:	b	420c68 <wcrtomb@plt+0x1be68>
  40c9cc:	stp	x29, x30, [sp, #-80]!
  40c9d0:	stp	x24, x23, [sp, #32]
  40c9d4:	stp	x22, x21, [sp, #48]
  40c9d8:	stp	x20, x19, [sp, #64]
  40c9dc:	ldr	x23, [x0, #392]
  40c9e0:	str	x25, [sp, #16]
  40c9e4:	mov	x29, sp
  40c9e8:	mov	x19, x0
  40c9ec:	mov	x20, x1
  40c9f0:	bl	405508 <wcrtomb@plt+0x708>
  40c9f4:	mov	x21, x0
  40c9f8:	mov	x0, x19
  40c9fc:	str	xzr, [x19, #136]
  40ca00:	bl	40a890 <wcrtomb@plt+0x5a90>
  40ca04:	cbz	x0, 40cd68 <wcrtomb@plt+0x7f68>
  40ca08:	mov	x22, x0
  40ca0c:	mov	x0, x19
  40ca10:	bl	40d77c <wcrtomb@plt+0x897c>
  40ca14:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40ca18:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40ca1c:	ldr	w8, [x8, #304]
  40ca20:	ldrb	w9, [x9, #3617]
  40ca24:	mov	w10, #0x35                  	// #53
  40ca28:	mov	w11, #0x44                  	// #68
  40ca2c:	cmp	w8, #0x4
  40ca30:	ccmp	w9, #0x0, #0x4, ne  // ne = any
  40ca34:	csel	w10, w11, w10, ne  // ne = any
  40ca38:	strb	w10, [x22, #156]
  40ca3c:	cbz	w9, 40ca84 <wcrtomb@plt+0x7c84>
  40ca40:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40ca44:	ldr	x9, [x24, #3600]
  40ca48:	ldr	x0, [x9, #56]
  40ca4c:	cbz	x0, 40ca94 <wcrtomb@plt+0x7c94>
  40ca50:	cmp	w8, #0x4
  40ca54:	b.ne	40cb78 <wcrtomb@plt+0x7d78>  // b.any
  40ca58:	bl	413a54 <wcrtomb@plt+0xec54>
  40ca5c:	mov	x2, x0
  40ca60:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ca64:	add	x0, x0, #0x8dd
  40ca68:	mov	x1, x19
  40ca6c:	bl	411550 <wcrtomb@plt+0xc750>
  40ca70:	mov	x0, x19
  40ca74:	mov	x1, x22
  40ca78:	mov	x2, x21
  40ca7c:	bl	40b220 <wcrtomb@plt+0x6420>
  40ca80:	b	40cd68 <wcrtomb@plt+0x7f68>
  40ca84:	mov	x0, x19
  40ca88:	mov	x1, x22
  40ca8c:	mov	x2, x21
  40ca90:	bl	40b220 <wcrtomb@plt+0x6420>
  40ca94:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40ca98:	ldr	w8, [x8, #164]
  40ca9c:	cbz	w8, 40cd68 <wcrtomb@plt+0x7f68>
  40caa0:	cbz	x23, 40cac4 <wcrtomb@plt+0x7cc4>
  40caa4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40caa8:	ldrb	w8, [x8, #3669]
  40caac:	cbz	w8, 40cac4 <wcrtomb@plt+0x7cc4>
  40cab0:	ldr	x8, [x19, #392]
  40cab4:	ldr	x9, [x19, #88]
  40cab8:	ldr	x8, [x8, #88]
  40cabc:	cmp	x8, x9
  40cac0:	b.ne	40cc58 <wcrtomb@plt+0x7e58>  // b.any
  40cac4:	add	x1, x29, #0x18
  40cac8:	mov	x0, x19
  40cacc:	bl	40a040 <wcrtomb@plt+0x5240>
  40cad0:	cmp	w0, #0x2
  40cad4:	b.eq	40ccbc <wcrtomb@plt+0x7ebc>  // b.none
  40cad8:	cmp	w0, #0x1
  40cadc:	b.eq	40ccec <wcrtomb@plt+0x7eec>  // b.none
  40cae0:	cbnz	w0, 40cd68 <wcrtomb@plt+0x7f68>
  40cae4:	ldr	x0, [x19]
  40cae8:	bl	43a998 <argp_parse@@Base+0xbcdc>
  40caec:	mov	x21, x0
  40caf0:	bl	404170 <strlen@plt>
  40caf4:	mov	x22, x0
  40caf8:	mov	x0, x20
  40cafc:	bl	404170 <strlen@plt>
  40cb00:	cbz	x0, 40cb70 <wcrtomb@plt+0x7d70>
  40cb04:	mov	x23, x0
  40cb08:	mov	x24, x22
  40cb0c:	add	x25, x23, x22
  40cb10:	cmp	x24, x25
  40cb14:	b.cs	40cb2c <wcrtomb@plt+0x7d2c>  // b.hs, b.nlast
  40cb18:	add	x1, x25, #0x1
  40cb1c:	mov	x0, x21
  40cb20:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  40cb24:	mov	x21, x0
  40cb28:	mov	x24, x25
  40cb2c:	add	x0, x21, x22
  40cb30:	mov	x1, x20
  40cb34:	bl	404b00 <strcpy@plt>
  40cb38:	mov	x0, x21
  40cb3c:	mov	x1, x19
  40cb40:	bl	40d9d0 <wcrtomb@plt+0x8bd0>
  40cb44:	tbnz	w0, #0, 40cb58 <wcrtomb@plt+0x7d58>
  40cb48:	mov	x0, x19
  40cb4c:	mov	x1, x20
  40cb50:	mov	x2, x21
  40cb54:	bl	40b6b0 <wcrtomb@plt+0x68b0>
  40cb58:	add	x8, x23, x20
  40cb5c:	add	x20, x8, #0x1
  40cb60:	mov	x0, x20
  40cb64:	bl	404170 <strlen@plt>
  40cb68:	mov	x23, x0
  40cb6c:	cbnz	x0, 40cb0c <wcrtomb@plt+0x7d0c>
  40cb70:	mov	x0, x21
  40cb74:	b	40cd64 <wcrtomb@plt+0x7f64>
  40cb78:	bl	405508 <wcrtomb@plt+0x708>
  40cb7c:	ldr	x8, [x24, #3600]
  40cb80:	mov	x23, x0
  40cb84:	ldr	x8, [x8, #56]
  40cb88:	mov	x0, x8
  40cb8c:	bl	413a54 <wcrtomb@plt+0xec54>
  40cb90:	mov	x20, x0
  40cb94:	bl	412dec <wcrtomb@plt+0xdfec>
  40cb98:	mov	x21, x0
  40cb9c:	adrp	x6, 44c000 <_obstack_memory_used@@Base+0x10808>
  40cba0:	add	x4, x22, #0x7c
  40cba4:	lsr	x0, x0, #63
  40cba8:	add	x6, x6, #0x6a2
  40cbac:	mov	w2, #0x8                   	// #8
  40cbb0:	mov	w5, #0xc                   	// #12
  40cbb4:	mov	x1, x21
  40cbb8:	mov	x3, xzr
  40cbbc:	bl	40a1f8 <wcrtomb@plt+0x53f8>
  40cbc0:	mov	x0, x19
  40cbc4:	mov	x1, x22
  40cbc8:	mov	x2, x23
  40cbcc:	bl	40b220 <wcrtomb@plt+0x6420>
  40cbd0:	ldr	x0, [x19, #8]
  40cbd4:	mov	x1, x21
  40cbd8:	mov	x2, x21
  40cbdc:	bl	404f1c <wcrtomb@plt+0x11c>
  40cbe0:	cmp	x21, #0x1
  40cbe4:	b.lt	40cd68 <wcrtomb@plt+0x7f68>  // b.tstop
  40cbe8:	mov	w23, #0x200                 	// #512
  40cbec:	bl	405574 <wcrtomb@plt+0x774>
  40cbf0:	mov	x19, x0
  40cbf4:	bl	4058c0 <wcrtomb@plt+0xac0>
  40cbf8:	mov	x22, x0
  40cbfc:	cmp	x21, x0
  40cc00:	b.cs	40cc24 <wcrtomb@plt+0x7e24>  // b.hs, b.nlast
  40cc04:	ands	x8, x21, #0x1ff
  40cc08:	mov	x22, x21
  40cc0c:	b.eq	40cc24 <wcrtomb@plt+0x7e24>  // b.none
  40cc10:	add	x0, x19, x21
  40cc14:	sub	x2, x23, x8
  40cc18:	mov	w1, wzr
  40cc1c:	bl	4045e0 <memset@plt>
  40cc20:	mov	x22, x21
  40cc24:	mov	x0, x19
  40cc28:	mov	x1, x20
  40cc2c:	mov	x2, x22
  40cc30:	bl	4040f0 <memcpy@plt>
  40cc34:	sub	x8, x22, #0x1
  40cc38:	and	x8, x8, #0xfffffffffffffe00
  40cc3c:	add	x0, x19, x8
  40cc40:	sub	x21, x21, x22
  40cc44:	add	x20, x20, x22
  40cc48:	bl	40587c <wcrtomb@plt+0xa7c>
  40cc4c:	cmp	x21, #0x0
  40cc50:	b.gt	40cbec <wcrtomb@plt+0x7dec>
  40cc54:	b	40cd68 <wcrtomb@plt+0x7f68>
  40cc58:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40cc5c:	ldr	w8, [x8, #132]
  40cc60:	cbz	w8, 40cd68 <wcrtomb@plt+0x7f68>
  40cc64:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40cc68:	ldrb	w8, [x8, #154]
  40cc6c:	tbz	w8, #2, 40cd68 <wcrtomb@plt+0x7f68>
  40cc70:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40cc74:	ldr	x8, [x8, #496]
  40cc78:	cbz	x8, 40cc80 <wcrtomb@plt+0x7e80>
  40cc7c:	blr	x8
  40cc80:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40cc84:	add	x1, x1, #0x8e9
  40cc88:	mov	w2, #0x5                   	// #5
  40cc8c:	mov	x0, xzr
  40cc90:	bl	404bd0 <dcgettext@plt>
  40cc94:	ldr	x8, [x19]
  40cc98:	mov	x19, x0
  40cc9c:	mov	x0, x8
  40cca0:	bl	4398cc <argp_parse@@Base+0xac10>
  40cca4:	mov	x3, x0
  40cca8:	mov	w0, wzr
  40ccac:	mov	w1, wzr
  40ccb0:	mov	x2, x19
  40ccb4:	bl	4041d0 <error@plt>
  40ccb8:	b	40cd68 <wcrtomb@plt+0x7f68>
  40ccbc:	ldr	x19, [x19]
  40ccc0:	ldr	x20, [x29, #24]
  40ccc4:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ccc8:	add	x1, x1, #0x91b
  40cccc:	mov	w2, #0x5                   	// #5
  40ccd0:	mov	x0, xzr
  40ccd4:	bl	404bd0 <dcgettext@plt>
  40ccd8:	mov	x2, x0
  40ccdc:	mov	x0, x19
  40cce0:	mov	x1, x20
  40cce4:	bl	409f94 <wcrtomb@plt+0x5194>
  40cce8:	b	40cd68 <wcrtomb@plt+0x7f68>
  40ccec:	ldr	x20, [x19]
  40ccf0:	ldr	x21, [x29, #24]
  40ccf4:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ccf8:	add	x1, x1, #0x91b
  40ccfc:	mov	w2, #0x5                   	// #5
  40cd00:	mov	x0, xzr
  40cd04:	bl	404bd0 <dcgettext@plt>
  40cd08:	mov	x2, x0
  40cd0c:	mov	x0, x20
  40cd10:	mov	x1, x21
  40cd14:	bl	409f94 <wcrtomb@plt+0x5194>
  40cd18:	ldr	x0, [x19]
  40cd1c:	bl	404170 <strlen@plt>
  40cd20:	ldr	x8, [x29, #24]
  40cd24:	mov	x20, x0
  40cd28:	mov	x0, x8
  40cd2c:	bl	404170 <strlen@plt>
  40cd30:	add	x8, x20, x0
  40cd34:	add	x0, x8, #0x1
  40cd38:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  40cd3c:	ldr	x1, [x19]
  40cd40:	mov	x20, x0
  40cd44:	bl	404b00 <strcpy@plt>
  40cd48:	ldr	x1, [x29, #24]
  40cd4c:	bl	4045c0 <strcat@plt>
  40cd50:	ldr	x1, [x29, #24]
  40cd54:	mov	x0, x19
  40cd58:	mov	x2, x20
  40cd5c:	bl	40b6b0 <wcrtomb@plt+0x68b0>
  40cd60:	mov	x0, x20
  40cd64:	bl	4049b0 <free@plt>
  40cd68:	ldp	x20, x19, [sp, #64]
  40cd6c:	ldp	x22, x21, [sp, #48]
  40cd70:	ldp	x24, x23, [sp, #32]
  40cd74:	ldr	x25, [sp, #16]
  40cd78:	ldp	x29, x30, [sp], #80
  40cd7c:	ret
  40cd80:	ldp	x8, x9, [x0]
  40cd84:	eor	x8, x9, x8
  40cd88:	udiv	x9, x8, x1
  40cd8c:	msub	x0, x9, x1, x8
  40cd90:	ret
  40cd94:	ldp	x8, x11, [x1]
  40cd98:	ldp	x9, x10, [x0]
  40cd9c:	cmp	x9, x8
  40cda0:	cset	w8, eq  // eq = none
  40cda4:	cmp	x10, x11
  40cda8:	cset	w9, eq  // eq = none
  40cdac:	and	w0, w8, w9
  40cdb0:	ret
  40cdb4:	stp	x29, x30, [sp, #-96]!
  40cdb8:	stp	x28, x27, [sp, #16]
  40cdbc:	stp	x26, x25, [sp, #32]
  40cdc0:	stp	x24, x23, [sp, #48]
  40cdc4:	stp	x22, x21, [sp, #64]
  40cdc8:	stp	x20, x19, [sp, #80]
  40cdcc:	mov	x29, sp
  40cdd0:	bl	41ae2c <wcrtomb@plt+0x1602c>
  40cdd4:	mov	w0, #0x2                   	// #2
  40cdd8:	mov	w24, #0x2                   	// #2
  40cddc:	bl	405ed8 <wcrtomb@plt+0x10d8>
  40cde0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40cde4:	ldr	x8, [x8, #176]
  40cde8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  40cdec:	add	x1, x1, #0x25d
  40cdf0:	ldr	x0, [x8]
  40cdf4:	bl	404900 <strcmp@plt>
  40cdf8:	cmp	w0, #0x0
  40cdfc:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40ce00:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40ce04:	adrp	x25, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ce08:	adrp	x22, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ce0c:	adrp	x23, 44b000 <_obstack_memory_used@@Base+0xf808>
  40ce10:	mov	w19, wzr
  40ce14:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40ce18:	add	x20, x20, #0xde8
  40ce1c:	add	x21, x21, #0xe60
  40ce20:	add	x25, x25, #0xa08
  40ce24:	add	x22, x22, #0xa14
  40ce28:	cset	w8, eq  // eq = none
  40ce2c:	add	x23, x23, #0xb9f
  40ce30:	strb	w8, [x9, #1512]
  40ce34:	mov	w2, #0x1                   	// #1
  40ce38:	mov	x0, x20
  40ce3c:	mov	x1, x21
  40ce40:	mov	w26, w19
  40ce44:	bl	416490 <wcrtomb@plt+0x11690>
  40ce48:	mov	w19, w0
  40ce4c:	cmp	w0, #0x5
  40ce50:	mov	w8, w0
  40ce54:	b.hi	40ce34 <wcrtomb@plt+0x8034>  // b.pmore
  40ce58:	adr	x9, 40ce68 <wcrtomb@plt+0x8068>
  40ce5c:	ldrh	w10, [x25, x8, lsl #1]
  40ce60:	add	x9, x9, x10, lsl #2
  40ce64:	br	x9
  40ce68:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40ce6c:	ldr	x0, [x8, #3688]
  40ce70:	bl	41be14 <wcrtomb@plt+0x17014>
  40ce74:	cbz	x0, 40cee4 <wcrtomb@plt+0x80e4>
  40ce78:	ldr	x8, [x0, #48]
  40ce7c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40ce80:	add	x8, x8, #0x1
  40ce84:	str	x8, [x0, #48]
  40ce88:	ldr	x9, [x9, #248]
  40ce8c:	cbz	x9, 40cee0 <wcrtomb@plt+0x80e0>
  40ce90:	cmp	x8, x9
  40ce94:	b.ne	40cee4 <wcrtomb@plt+0x80e4>  // b.any
  40ce98:	b	40cf60 <wcrtomb@plt+0x8160>
  40ce9c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40cea0:	ldrb	w8, [x8, #3661]
  40cea4:	cbz	w8, 40cf58 <wcrtomb@plt+0x8158>
  40cea8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40ceac:	ldr	x0, [x8, #3560]
  40ceb0:	bl	40587c <wcrtomb@plt+0xa7c>
  40ceb4:	b	40ce34 <wcrtomb@plt+0x8034>
  40ceb8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40cebc:	ldr	x0, [x8, #3560]
  40cec0:	bl	40587c <wcrtomb@plt+0xa7c>
  40cec4:	sub	w8, w26, #0x1
  40cec8:	cmp	w8, #0x3
  40cecc:	b.cc	40cf1c <wcrtomb@plt+0x811c>  // b.lo, b.ul, b.last
  40ced0:	cbz	w26, 40ceec <wcrtomb@plt+0x80ec>
  40ced4:	cmp	w26, #0x4
  40ced8:	b.ne	40ce34 <wcrtomb@plt+0x8034>  // b.any
  40cedc:	b	40d3ac <wcrtomb@plt+0x85ac>
  40cee0:	cbnz	x8, 40cf60 <wcrtomb@plt+0x8160>
  40cee4:	bl	416cc8 <wcrtomb@plt+0x11ec8>
  40cee8:	b	40ce34 <wcrtomb@plt+0x8034>
  40ceec:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40cef0:	ldr	x8, [x8, #496]
  40cef4:	cbz	x8, 40cefc <wcrtomb@plt+0x80fc>
  40cef8:	blr	x8
  40cefc:	mov	w2, #0x5                   	// #5
  40cf00:	mov	x0, xzr
  40cf04:	mov	x1, x23
  40cf08:	bl	404bd0 <dcgettext@plt>
  40cf0c:	mov	x2, x0
  40cf10:	mov	w0, wzr
  40cf14:	mov	w1, wzr
  40cf18:	bl	4041d0 <error@plt>
  40cf1c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40cf20:	ldr	x8, [x8, #496]
  40cf24:	cbz	x8, 40cf2c <wcrtomb@plt+0x812c>
  40cf28:	blr	x8
  40cf2c:	mov	w2, #0x5                   	// #5
  40cf30:	mov	x0, xzr
  40cf34:	mov	x1, x22
  40cf38:	bl	404bd0 <dcgettext@plt>
  40cf3c:	mov	x2, x0
  40cf40:	mov	w0, wzr
  40cf44:	mov	w1, wzr
  40cf48:	bl	4041d0 <error@plt>
  40cf4c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40cf50:	str	w24, [x8, #2944]
  40cf54:	b	40ce34 <wcrtomb@plt+0x8034>
  40cf58:	mov	w19, #0x4                   	// #4
  40cf5c:	b	40cf64 <wcrtomb@plt+0x8164>
  40cf60:	mov	w19, #0x1                   	// #1
  40cf64:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40cf68:	ldr	x8, [x8, #3424]
  40cf6c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40cf70:	ldr	x0, [x9, #408]
  40cf74:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40cf78:	sub	x8, x8, #0x1
  40cf7c:	str	x8, [x9, #3520]
  40cf80:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  40cf84:	sub	w8, w19, #0x1
  40cf88:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40cf8c:	cmp	w8, #0x1
  40cf90:	str	x0, [x26, #1520]
  40cf94:	b.hi	40d384 <wcrtomb@plt+0x8584>  // b.pmore
  40cf98:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40cf9c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40cfa0:	ldr	x8, [x25, #3496]
  40cfa4:	ldr	x1, [x21, #3472]
  40cfa8:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40cfac:	strb	wzr, [x9, #3480]
  40cfb0:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40cfb4:	sub	x8, x8, x1
  40cfb8:	lsr	x9, x8, #9
  40cfbc:	str	w9, [x27, #1528]
  40cfc0:	cbz	w9, 40cfd0 <wcrtomb@plt+0x81d0>
  40cfc4:	sxtw	x8, w8
  40cfc8:	and	x2, x8, #0xfffffffffffffe00
  40cfcc:	bl	4040f0 <memcpy@plt>
  40cfd0:	cmp	w19, #0x1
  40cfd4:	adrp	x28, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40cfd8:	b.ne	40d044 <wcrtomb@plt+0x8244>  // b.any
  40cfdc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40cfe0:	ldr	x0, [x8, #3560]
  40cfe4:	bl	40587c <wcrtomb@plt+0xa7c>
  40cfe8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40cfec:	ldr	x9, [x8, #3816]
  40cff0:	ldr	x10, [x28, #3432]
  40cff4:	ldr	x8, [x25, #3496]
  40cff8:	add	x11, x9, #0x1ff
  40cffc:	add	x9, x9, #0x3fe
  40d000:	cmp	x11, #0x0
  40d004:	csel	x9, x9, x11, lt  // lt = tstop
  40d008:	asr	x19, x9, #9
  40d00c:	sub	x9, x10, x8
  40d010:	cmp	x19, x9, asr #9
  40d014:	b.lt	40d03c <wcrtomb@plt+0x823c>  // b.tstop
  40d018:	asr	x9, x9, #9
  40d01c:	sub	x19, x19, x9
  40d020:	bl	4055e0 <wcrtomb@plt+0x7e0>
  40d024:	ldr	x9, [x28, #3432]
  40d028:	ldr	x8, [x25, #3496]
  40d02c:	sub	x9, x9, x8
  40d030:	cmp	x19, x9, asr #9
  40d034:	asr	x9, x9, #9
  40d038:	b.ge	40d01c <wcrtomb@plt+0x821c>  // b.tcont
  40d03c:	add	x8, x8, x19, lsl #9
  40d040:	str	x8, [x25, #3496]
  40d044:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d048:	add	x20, x20, #0xe60
  40d04c:	adrp	x24, 46b000 <argp_program_version_hook@@Base+0x458>
  40d050:	ldr	x8, [x25, #3496]
  40d054:	ldr	x9, [x28, #3432]
  40d058:	cmp	x8, x9
  40d05c:	b.ne	40d064 <wcrtomb@plt+0x8264>  // b.any
  40d060:	bl	4055e0 <wcrtomb@plt+0x7e0>
  40d064:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d068:	add	x0, x0, #0xde8
  40d06c:	mov	x1, x20
  40d070:	mov	w2, wzr
  40d074:	bl	416490 <wcrtomb@plt+0x11690>
  40d078:	mov	w22, w0
  40d07c:	mov	x0, x20
  40d080:	bl	411050 <wcrtomb@plt+0xc250>
  40d084:	subs	w8, w22, #0x3
  40d088:	b.ne	40d0a8 <wcrtomb@plt+0x82a8>  // b.any
  40d08c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d090:	ldrb	w9, [x9, #3661]
  40d094:	cbz	w9, 40d0a8 <wcrtomb@plt+0x82a8>
  40d098:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d09c:	ldr	x0, [x8, #3560]
  40d0a0:	bl	40587c <wcrtomb@plt+0xa7c>
  40d0a4:	b	40d050 <wcrtomb@plt+0x8250>
  40d0a8:	cmp	w8, #0x1
  40d0ac:	b.ls	40d30c <wcrtomb@plt+0x850c>  // b.plast
  40d0b0:	cmp	w22, #0x5
  40d0b4:	b.ne	40d108 <wcrtomb@plt+0x8308>  // b.any
  40d0b8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40d0bc:	ldr	x8, [x8, #496]
  40d0c0:	cbz	x8, 40d0c8 <wcrtomb@plt+0x82c8>
  40d0c4:	blr	x8
  40d0c8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40d0cc:	mov	w2, #0x5                   	// #5
  40d0d0:	mov	x0, xzr
  40d0d4:	add	x1, x1, #0xa2c
  40d0d8:	bl	404bd0 <dcgettext@plt>
  40d0dc:	mov	x2, x0
  40d0e0:	mov	w0, wzr
  40d0e4:	mov	w1, wzr
  40d0e8:	bl	4041d0 <error@plt>
  40d0ec:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d0f0:	ldr	x0, [x8, #3560]
  40d0f4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d0f8:	mov	w9, #0x2                   	// #2
  40d0fc:	str	w9, [x8, #2944]
  40d100:	bl	40587c <wcrtomb@plt+0xa7c>
  40d104:	b	40d050 <wcrtomb@plt+0x8250>
  40d108:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d10c:	ldr	x0, [x8, #3688]
  40d110:	bl	41be14 <wcrtomb@plt+0x17014>
  40d114:	cbz	x0, 40d140 <wcrtomb@plt+0x8340>
  40d118:	ldr	x8, [x0, #48]
  40d11c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40d120:	add	x8, x8, #0x1
  40d124:	str	x8, [x0, #48]
  40d128:	ldr	x9, [x9, #248]
  40d12c:	cbz	x9, 40d13c <wcrtomb@plt+0x833c>
  40d130:	cmp	x8, x9
  40d134:	b.ne	40d140 <wcrtomb@plt+0x8340>  // b.any
  40d138:	b	40cfdc <wcrtomb@plt+0x81dc>
  40d13c:	cbnz	x8, 40cfdc <wcrtomb@plt+0x81dc>
  40d140:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d144:	ldr	x8, [x8, #4032]
  40d148:	cbz	x8, 40d1cc <wcrtomb@plt+0x83cc>
  40d14c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d150:	ldr	x23, [x9, #4040]
  40d154:	lsr	x1, x8, #9
  40d158:	and	x19, x8, #0xfffffffffffffe00
  40d15c:	and	x22, x8, #0x1ff
  40d160:	mov	x0, x23
  40d164:	bl	40d3b0 <wcrtomb@plt+0x85b0>
  40d168:	ldr	x8, [x26, #1520]
  40d16c:	ldrsw	x9, [x27, #1528]
  40d170:	add	x1, x23, x19
  40d174:	mov	x2, x22
  40d178:	add	x0, x8, x9, lsl #9
  40d17c:	bl	4040f0 <memcpy@plt>
  40d180:	cmp	x22, #0x1ff
  40d184:	b.hi	40d1a8 <wcrtomb@plt+0x83a8>  // b.pmore
  40d188:	ldr	x8, [x26, #1520]
  40d18c:	ldrsw	x9, [x27, #1528]
  40d190:	mov	w1, wzr
  40d194:	add	x8, x8, x9, lsl #9
  40d198:	add	x0, x8, x22
  40d19c:	mov	w8, #0x200                 	// #512
  40d1a0:	sub	x2, x8, x22
  40d1a4:	bl	4045e0 <memset@plt>
  40d1a8:	ldr	w8, [x27, #1528]
  40d1ac:	ldr	w9, [x24, #236]
  40d1b0:	add	w8, w8, #0x1
  40d1b4:	cmp	w8, w9
  40d1b8:	str	w8, [x27, #1528]
  40d1bc:	b.ne	40d1f4 <wcrtomb@plt+0x83f4>  // b.any
  40d1c0:	mov	w0, #0x1                   	// #1
  40d1c4:	bl	40d430 <wcrtomb@plt+0x8630>
  40d1c8:	b	40d1f4 <wcrtomb@plt+0x83f4>
  40d1cc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d1d0:	ldr	x0, [x8, #3544]
  40d1d4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d1d8:	ldr	x1, [x8, #3552]
  40d1dc:	bl	40d3b0 <wcrtomb@plt+0x85b0>
  40d1e0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d1e4:	ldr	x0, [x8, #3576]
  40d1e8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d1ec:	ldr	x1, [x8, #3568]
  40d1f0:	bl	40d3b0 <wcrtomb@plt+0x85b0>
  40d1f4:	ldr	x8, [x26, #1520]
  40d1f8:	ldrsw	x19, [x27, #1528]
  40d1fc:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d200:	ldr	x1, [x22, #3560]
  40d204:	mov	w2, #0x200                 	// #512
  40d208:	add	x0, x8, x19, lsl #9
  40d20c:	bl	4040f0 <memcpy@plt>
  40d210:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d214:	ldr	x8, [x8, #3816]
  40d218:	ldr	x0, [x22, #3560]
  40d21c:	add	w9, w19, #0x1
  40d220:	str	w9, [x27, #1528]
  40d224:	add	x9, x8, #0x1ff
  40d228:	add	x22, x8, #0x3fe
  40d22c:	cmp	x9, #0x0
  40d230:	csel	x19, x22, x9, lt  // lt = tstop
  40d234:	bl	40587c <wcrtomb@plt+0xa7c>
  40d238:	ldr	w8, [x27, #1528]
  40d23c:	ldr	w9, [x24, #236]
  40d240:	cmp	w8, w9
  40d244:	b.ne	40d250 <wcrtomb@plt+0x8450>  // b.any
  40d248:	mov	w0, #0x1                   	// #1
  40d24c:	bl	40d430 <wcrtomb@plt+0x8630>
  40d250:	cmp	x22, #0x3ff
  40d254:	b.cc	40d050 <wcrtomb@plt+0x8250>  // b.lo, b.ul, b.last
  40d258:	ldr	x8, [x28, #3432]
  40d25c:	ldr	x1, [x25, #3496]
  40d260:	asr	x22, x19, #9
  40d264:	sub	x9, x8, x1
  40d268:	lsr	x9, x9, #9
  40d26c:	cmp	x22, w9, sxtw
  40d270:	csel	w23, w22, w9, lt  // lt = tstop
  40d274:	cmp	x1, x8
  40d278:	b.eq	40d284 <wcrtomb@plt+0x8484>  // b.none
  40d27c:	ldr	w8, [x24, #236]
  40d280:	b	40d29c <wcrtomb@plt+0x849c>
  40d284:	bl	405a64 <wcrtomb@plt+0xc64>
  40d288:	ldrsw	x8, [x24, #236]
  40d28c:	ldr	x1, [x21, #3472]
  40d290:	cmp	x22, x8
  40d294:	csel	w23, w22, w8, lt  // lt = tstop
  40d298:	str	x1, [x25, #3496]
  40d29c:	ldrsw	x9, [x27, #1528]
  40d2a0:	sub	w8, w8, w9
  40d2a4:	cmp	w8, w23
  40d2a8:	csel	w19, w8, w23, lt  // lt = tstop
  40d2ac:	cbz	w19, 40d3ac <wcrtomb@plt+0x85ac>
  40d2b0:	ldr	x8, [x26, #1520]
  40d2b4:	lsl	w10, w19, #9
  40d2b8:	sxtw	x2, w10
  40d2bc:	add	x0, x8, x9, lsl #9
  40d2c0:	bl	4040f0 <memcpy@plt>
  40d2c4:	ldr	w8, [x27, #1528]
  40d2c8:	ldr	x9, [x25, #3496]
  40d2cc:	ldr	w11, [x24, #236]
  40d2d0:	sxtw	x10, w19
  40d2d4:	add	w8, w8, w19
  40d2d8:	sub	x22, x22, w19, sxtw
  40d2dc:	add	x9, x9, x10, lsl #9
  40d2e0:	cmp	w8, w11
  40d2e4:	sub	w23, w23, w19
  40d2e8:	str	w8, [x27, #1528]
  40d2ec:	str	x9, [x25, #3496]
  40d2f0:	b.ne	40d2fc <wcrtomb@plt+0x84fc>  // b.any
  40d2f4:	mov	w0, #0x1                   	// #1
  40d2f8:	bl	40d430 <wcrtomb@plt+0x8630>
  40d2fc:	cbz	x22, 40d050 <wcrtomb@plt+0x8250>
  40d300:	ldr	x1, [x25, #3496]
  40d304:	ldr	x8, [x28, #3432]
  40d308:	b	40d274 <wcrtomb@plt+0x8474>
  40d30c:	mov	w19, wzr
  40d310:	ldr	w8, [x24, #236]
  40d314:	ldrsw	x9, [x27, #1528]
  40d318:	ldr	x10, [x26, #1520]
  40d31c:	mov	w1, wzr
  40d320:	sub	w20, w8, w9
  40d324:	lsl	w8, w20, #9
  40d328:	add	x0, x10, x9, lsl #9
  40d32c:	sxtw	x2, w8
  40d330:	bl	4045e0 <memset@plt>
  40d334:	add	w19, w20, w19
  40d338:	cmp	w19, #0x2
  40d33c:	cset	w0, lt  // lt = tstop
  40d340:	bl	40d430 <wcrtomb@plt+0x8630>
  40d344:	cmp	w19, #0x2
  40d348:	b.lt	40d310 <wcrtomb@plt+0x8510>  // b.tstop
  40d34c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d350:	ldrb	w8, [x8, #1512]
  40d354:	adrp	x19, 46b000 <argp_program_version_hook@@Base+0x458>
  40d358:	cbnz	w8, 40d384 <wcrtomb@plt+0x8584>
  40d35c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40d360:	ldr	w0, [x8, #464]
  40d364:	mov	w8, #0x3fffffff            	// #1073741823
  40d368:	cmp	w0, w8
  40d36c:	b.gt	40d384 <wcrtomb@plt+0x8584>
  40d370:	bl	41e540 <wcrtomb@plt+0x19740>
  40d374:	cbz	w0, 40d384 <wcrtomb@plt+0x8584>
  40d378:	ldr	x8, [x19, #176]
  40d37c:	ldr	x0, [x8]
  40d380:	bl	426720 <wcrtomb@plt+0x21920>
  40d384:	ldr	x0, [x26, #1520]
  40d388:	bl	4049b0 <free@plt>
  40d38c:	bl	405bb0 <wcrtomb@plt+0xdb0>
  40d390:	ldp	x20, x19, [sp, #80]
  40d394:	ldp	x22, x21, [sp, #64]
  40d398:	ldp	x24, x23, [sp, #48]
  40d39c:	ldp	x26, x25, [sp, #32]
  40d3a0:	ldp	x28, x27, [sp, #16]
  40d3a4:	ldp	x29, x30, [sp], #96
  40d3a8:	b	41b414 <wcrtomb@plt+0x16614>
  40d3ac:	bl	404850 <abort@plt>
  40d3b0:	stp	x29, x30, [sp, #-64]!
  40d3b4:	stp	x24, x23, [sp, #16]
  40d3b8:	stp	x22, x21, [sp, #32]
  40d3bc:	stp	x20, x19, [sp, #48]
  40d3c0:	mov	x29, sp
  40d3c4:	cbz	x1, 40d41c <wcrtomb@plt+0x861c>
  40d3c8:	mov	x19, x1
  40d3cc:	mov	x20, x0
  40d3d0:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d3d4:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d3d8:	adrp	x23, 46b000 <argp_program_version_hook@@Base+0x458>
  40d3dc:	ldrsw	x8, [x22, #1528]
  40d3e0:	ldr	x9, [x21, #1520]
  40d3e4:	mov	w2, #0x200                 	// #512
  40d3e8:	mov	x1, x20
  40d3ec:	add	w24, w8, #0x1
  40d3f0:	add	x0, x9, x8, lsl #9
  40d3f4:	str	w24, [x22, #1528]
  40d3f8:	bl	4040f0 <memcpy@plt>
  40d3fc:	ldr	w8, [x23, #236]
  40d400:	cmp	w24, w8
  40d404:	b.ne	40d410 <wcrtomb@plt+0x8610>  // b.any
  40d408:	mov	w0, #0x1                   	// #1
  40d40c:	bl	40d430 <wcrtomb@plt+0x8630>
  40d410:	subs	x19, x19, #0x1
  40d414:	add	x20, x20, #0x200
  40d418:	b.ne	40d3dc <wcrtomb@plt+0x85dc>  // b.any
  40d41c:	ldp	x20, x19, [sp, #48]
  40d420:	ldp	x22, x21, [sp, #32]
  40d424:	ldp	x24, x23, [sp, #16]
  40d428:	ldp	x29, x30, [sp], #64
  40d42c:	ret
  40d430:	stp	x29, x30, [sp, #-64]!
  40d434:	stp	x22, x21, [sp, #32]
  40d438:	stp	x20, x19, [sp, #48]
  40d43c:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d440:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d444:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d448:	ldr	x8, [x8, #1520]
  40d44c:	ldrb	w9, [x21, #1512]
  40d450:	ldr	x22, [x20, #3472]
  40d454:	mov	w19, w0
  40d458:	str	x23, [sp, #16]
  40d45c:	mov	x29, sp
  40d460:	str	x8, [x20, #3472]
  40d464:	cbz	w9, 40d480 <wcrtomb@plt+0x8680>
  40d468:	adrp	x23, 46b000 <argp_program_version_hook@@Base+0x458>
  40d46c:	mov	w8, #0x1                   	// #1
  40d470:	str	w8, [x23, #464]
  40d474:	bl	405ec4 <wcrtomb@plt+0x10c4>
  40d478:	str	wzr, [x23, #464]
  40d47c:	b	40d4a8 <wcrtomb@plt+0x86a8>
  40d480:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d484:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d488:	ldr	x8, [x8, #3440]
  40d48c:	ldr	x9, [x9, #3520]
  40d490:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d494:	ldr	x10, [x10, #3424]
  40d498:	add	x8, x9, x8
  40d49c:	sub	x0, x8, x10
  40d4a0:	bl	40d4f8 <wcrtomb@plt+0x86f8>
  40d4a4:	bl	405ec4 <wcrtomb@plt+0x10c4>
  40d4a8:	str	x22, [x20, #3472]
  40d4ac:	cbz	w19, 40d4dc <wcrtomb@plt+0x86dc>
  40d4b0:	ldrb	w8, [x21, #1512]
  40d4b4:	cbnz	w8, 40d4dc <wcrtomb@plt+0x86dc>
  40d4b8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d4bc:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d4c0:	ldr	x8, [x8, #3424]
  40d4c4:	ldr	x9, [x9, #3440]
  40d4c8:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d4cc:	ldr	x10, [x10, #3520]
  40d4d0:	sub	x8, x8, x9
  40d4d4:	sub	x0, x8, x10
  40d4d8:	bl	40d4f8 <wcrtomb@plt+0x86f8>
  40d4dc:	ldp	x20, x19, [sp, #48]
  40d4e0:	ldp	x22, x21, [sp, #32]
  40d4e4:	ldr	x23, [sp, #16]
  40d4e8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d4ec:	str	wzr, [x8, #1528]
  40d4f0:	ldp	x29, x30, [sp], #64
  40d4f4:	ret
  40d4f8:	sub	sp, sp, #0x30
  40d4fc:	stp	x29, x30, [sp, #16]
  40d500:	stp	x20, x19, [sp, #32]
  40d504:	add	x29, sp, #0x10
  40d508:	cbz	x0, 40d688 <wcrtomb@plt+0x8888>
  40d50c:	mov	x19, x0
  40d510:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  40d514:	tbnz	x0, #63, 40d530 <wcrtomb@plt+0x8730>
  40d518:	mov	w8, #0x3                   	// #3
  40d51c:	lsr	x9, x19, #31
  40d520:	strh	w8, [sp, #8]
  40d524:	str	w19, [sp, #12]
  40d528:	cbz	x9, 40d550 <wcrtomb@plt+0x8750>
  40d52c:	b	40d5e4 <wcrtomb@plt+0x87e4>
  40d530:	mov	w8, #0x4                   	// #4
  40d534:	mov	w10, #0x80000000            	// #-2147483648
  40d538:	strh	w8, [sp, #8]
  40d53c:	sub	x8, x10, x19
  40d540:	neg	w9, w19
  40d544:	lsr	x8, x8, #32
  40d548:	str	w9, [sp, #12]
  40d54c:	cbnz	x8, 40d5e4 <wcrtomb@plt+0x87e4>
  40d550:	ldr	w0, [x20, #464]
  40d554:	mov	w8, #0x40000000            	// #1073741824
  40d558:	cmp	w0, w8
  40d55c:	b.lt	40d580 <wcrtomb@plt+0x8780>  // b.tstop
  40d560:	mov	w8, #0xc0000000            	// #-1073741824
  40d564:	mov	w1, #0x6d01                	// #27905
  40d568:	add	w0, w0, w8
  40d56c:	add	x2, sp, #0x8
  40d570:	movk	w1, #0x4008, lsl #16
  40d574:	bl	427510 <wcrtomb@plt+0x22710>
  40d578:	tbz	w0, #31, 40d688 <wcrtomb@plt+0x8888>
  40d57c:	b	40d594 <wcrtomb@plt+0x8794>
  40d580:	mov	w1, #0x6d01                	// #27905
  40d584:	add	x2, sp, #0x8
  40d588:	movk	w1, #0x4008, lsl #16
  40d58c:	bl	404db0 <ioctl@plt>
  40d590:	tbz	w0, #31, 40d688 <wcrtomb@plt+0x8888>
  40d594:	bl	404ce0 <__errno_location@plt>
  40d598:	ldr	w8, [x0]
  40d59c:	cmp	w8, #0x5
  40d5a0:	b.ne	40d5e4 <wcrtomb@plt+0x87e4>  // b.any
  40d5a4:	ldr	w0, [x20, #464]
  40d5a8:	mov	w8, #0x40000000            	// #1073741824
  40d5ac:	cmp	w0, w8
  40d5b0:	b.lt	40d5d0 <wcrtomb@plt+0x87d0>  // b.tstop
  40d5b4:	mov	w8, #0xc0000000            	// #-1073741824
  40d5b8:	mov	w1, #0x6d01                	// #27905
  40d5bc:	add	w0, w0, w8
  40d5c0:	add	x2, sp, #0x8
  40d5c4:	movk	w1, #0x4008, lsl #16
  40d5c8:	bl	427510 <wcrtomb@plt+0x22710>
  40d5cc:	b	40d5e0 <wcrtomb@plt+0x87e0>
  40d5d0:	mov	w1, #0x6d01                	// #27905
  40d5d4:	add	x2, sp, #0x8
  40d5d8:	movk	w1, #0x4008, lsl #16
  40d5dc:	bl	404db0 <ioctl@plt>
  40d5e0:	tbz	w0, #31, 40d688 <wcrtomb@plt+0x8888>
  40d5e4:	ldr	w0, [x20, #464]
  40d5e8:	mov	w8, #0x40000000            	// #1073741824
  40d5ec:	cmp	w0, w8
  40d5f0:	b.lt	40d60c <wcrtomb@plt+0x880c>  // b.tstop
  40d5f4:	mov	w8, #0xc0000000            	// #-1073741824
  40d5f8:	add	w0, w0, w8
  40d5fc:	mov	w2, #0x1                   	// #1
  40d600:	mov	x1, xzr
  40d604:	bl	4273ac <wcrtomb@plt+0x225ac>
  40d608:	b	40d618 <wcrtomb@plt+0x8818>
  40d60c:	mov	w2, #0x1                   	// #1
  40d610:	mov	x1, xzr
  40d614:	bl	404370 <lseek@plt>
  40d618:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40d61c:	ldr	x8, [x8, #408]
  40d620:	mul	x9, x8, x19
  40d624:	sdiv	x10, x9, x19
  40d628:	cmp	x10, x8
  40d62c:	add	x19, x9, x0
  40d630:	b.ne	40d674 <wcrtomb@plt+0x8874>  // b.any
  40d634:	ldr	w0, [x20, #464]
  40d638:	mov	w8, #0x40000000            	// #1073741824
  40d63c:	bic	x19, x19, x19, asr #63
  40d640:	cmp	w0, w8
  40d644:	b.lt	40d660 <wcrtomb@plt+0x8860>  // b.tstop
  40d648:	mov	w8, #0xc0000000            	// #-1073741824
  40d64c:	add	w0, w0, w8
  40d650:	mov	x1, x19
  40d654:	mov	w2, wzr
  40d658:	bl	4273ac <wcrtomb@plt+0x225ac>
  40d65c:	b	40d66c <wcrtomb@plt+0x886c>
  40d660:	mov	x1, x19
  40d664:	mov	w2, wzr
  40d668:	bl	404370 <lseek@plt>
  40d66c:	cmp	x0, x19
  40d670:	b.eq	40d688 <wcrtomb@plt+0x8888>  // b.none
  40d674:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40d678:	ldr	x8, [x8, #176]
  40d67c:	mov	x1, x19
  40d680:	ldr	x0, [x8]
  40d684:	bl	4264f8 <wcrtomb@plt+0x216f8>
  40d688:	ldp	x20, x19, [sp, #32]
  40d68c:	ldp	x29, x30, [sp, #16]
  40d690:	add	sp, sp, #0x30
  40d694:	ret
  40d698:	stp	x29, x30, [sp, #-16]!
  40d69c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d6a0:	ldr	x8, [x8, #3528]
  40d6a4:	mov	x29, sp
  40d6a8:	cbz	x8, 40d6b0 <wcrtomb@plt+0x88b0>
  40d6ac:	blr	x8
  40d6b0:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40d6b4:	add	x1, x1, #0xa4d
  40d6b8:	mov	w2, #0x5                   	// #5
  40d6bc:	mov	x0, xzr
  40d6c0:	bl	404bd0 <dcgettext@plt>
  40d6c4:	mov	x2, x0
  40d6c8:	mov	w0, #0x2                   	// #2
  40d6cc:	mov	w1, wzr
  40d6d0:	bl	4041d0 <error@plt>
  40d6d4:	bl	404850 <abort@plt>
  40d6d8:	stp	x29, x30, [sp, #-16]!
  40d6dc:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40d6e0:	add	x1, x1, #0xa73
  40d6e4:	mov	w2, #0x5                   	// #5
  40d6e8:	mov	x0, xzr
  40d6ec:	mov	x29, sp
  40d6f0:	bl	404bd0 <dcgettext@plt>
  40d6f4:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  40d6f8:	mov	x3, x0
  40d6fc:	add	x2, x2, #0xb24
  40d700:	mov	w0, wzr
  40d704:	mov	w1, wzr
  40d708:	bl	4041d0 <error@plt>
  40d70c:	bl	40d698 <wcrtomb@plt+0x8898>
  40d710:	stp	x29, x30, [sp, #-48]!
  40d714:	str	x21, [sp, #16]
  40d718:	stp	x20, x19, [sp, #32]
  40d71c:	mov	x29, sp
  40d720:	mov	w19, w1
  40d724:	mov	x20, x0
  40d728:	bl	404170 <strlen@plt>
  40d72c:	add	x0, x0, #0x10
  40d730:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  40d734:	mov	x21, x0
  40d738:	str	xzr, [x0]
  40d73c:	str	w19, [x0, #8]
  40d740:	add	x0, x0, #0xc
  40d744:	mov	x1, x20
  40d748:	bl	404b00 <strcpy@plt>
  40d74c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d750:	ldr	x9, [x8, #1536]
  40d754:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d758:	add	x10, x10, #0x608
  40d75c:	cmp	x9, #0x0
  40d760:	csel	x9, x10, x9, eq  // eq = none
  40d764:	str	x21, [x9]
  40d768:	str	x21, [x8, #1536]
  40d76c:	ldp	x20, x19, [sp, #32]
  40d770:	ldr	x21, [sp, #16]
  40d774:	ldp	x29, x30, [sp], #48
  40d778:	ret
  40d77c:	stp	x29, x30, [sp, #-96]!
  40d780:	stp	x28, x27, [sp, #16]
  40d784:	stp	x26, x25, [sp, #32]
  40d788:	stp	x24, x23, [sp, #48]
  40d78c:	stp	x22, x21, [sp, #64]
  40d790:	stp	x20, x19, [sp, #80]
  40d794:	ldr	x8, [x0, #416]
  40d798:	mov	x29, sp
  40d79c:	cbnz	x8, 40d92c <wcrtomb@plt+0x8b2c>
  40d7a0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d7a4:	ldr	x26, [x8, #1544]
  40d7a8:	mov	x19, x0
  40d7ac:	cbz	x26, 40d924 <wcrtomb@plt+0x8b24>
  40d7b0:	adrp	x20, 44f000 <_obstack_memory_used@@Base+0x13808>
  40d7b4:	adrp	x25, 467000 <_obstack_memory_used@@Base+0x2b808>
  40d7b8:	mov	x27, xzr
  40d7bc:	mov	x28, xzr
  40d7c0:	add	x20, x20, #0x84b
  40d7c4:	add	x25, x25, #0x6c8
  40d7c8:	ldr	w0, [x19, #408]
  40d7cc:	add	x22, x26, #0xc
  40d7d0:	mov	x1, x22
  40d7d4:	mov	w2, wzr
  40d7d8:	mov	w3, wzr
  40d7dc:	bl	404cb0 <faccessat@plt>
  40d7e0:	cbz	w0, 40d7f0 <wcrtomb@plt+0x89f0>
  40d7e4:	ldr	x26, [x26]
  40d7e8:	cbnz	x26, 40d7c8 <wcrtomb@plt+0x89c8>
  40d7ec:	b	40d928 <wcrtomb@plt+0x8b28>
  40d7f0:	mov	x0, x19
  40d7f4:	mov	x1, x22
  40d7f8:	mov	w2, wzr
  40d7fc:	bl	40a0e0 <wcrtomb@plt+0x52e0>
  40d800:	cmn	w0, #0x1
  40d804:	b.eq	40d8b4 <wcrtomb@plt+0x8ab4>  // b.none
  40d808:	mov	x1, x20
  40d80c:	mov	w23, w0
  40d810:	bl	4045f0 <fdopen@plt>
  40d814:	cbz	x0, 40d8c0 <wcrtomb@plt+0x8ac0>
  40d818:	mov	x24, x0
  40d81c:	bl	430700 <argp_parse@@Base+0x1a44>
  40d820:	ldr	x8, [x25]
  40d824:	mov	x23, x0
  40d828:	mov	x21, x25
  40d82c:	cbz	x8, 40d848 <wcrtomb@plt+0x8a48>
  40d830:	mov	x0, x8
  40d834:	mov	x1, x22
  40d838:	bl	404900 <strcmp@plt>
  40d83c:	cbz	w0, 40d848 <wcrtomb@plt+0x8a48>
  40d840:	ldr	x8, [x21, #40]!
  40d844:	cbnz	x8, 40d830 <wcrtomb@plt+0x8a30>
  40d848:	ldp	x8, x5, [x21, #24]
  40d84c:	cbz	x8, 40d860 <wcrtomb@plt+0x8a60>
  40d850:	mov	x0, x5
  40d854:	blr	x8
  40d858:	mov	x5, x0
  40d85c:	str	x0, [x21, #32]
  40d860:	ldr	x0, [x21, #16]
  40d864:	mov	w3, #0x50000000            	// #1342177280
  40d868:	mov	w4, #0xa                   	// #10
  40d86c:	mov	x1, x23
  40d870:	mov	x2, x24
  40d874:	bl	430e20 <argp_parse@@Base+0x2164>
  40d878:	cbnz	w0, 40d948 <wcrtomb@plt+0x8b48>
  40d87c:	mov	x0, x24
  40d880:	bl	404450 <fclose@plt>
  40d884:	mov	w0, #0x20                  	// #32
  40d888:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  40d88c:	str	x23, [x0, #24]
  40d890:	ldr	w8, [x26, #8]
  40d894:	cbz	w8, 40d89c <wcrtomb@plt+0x8a9c>
  40d898:	ldr	w8, [x21, #8]
  40d89c:	str	w8, [x0, #16]
  40d8a0:	stp	xzr, x28, [x0]
  40d8a4:	cbz	x28, 40d918 <wcrtomb@plt+0x8b18>
  40d8a8:	str	x0, [x28]
  40d8ac:	mov	x28, x0
  40d8b0:	b	40d7e4 <wcrtomb@plt+0x89e4>
  40d8b4:	mov	x0, x22
  40d8b8:	bl	426218 <wcrtomb@plt+0x21418>
  40d8bc:	b	40d7e4 <wcrtomb@plt+0x89e4>
  40d8c0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40d8c4:	ldr	x8, [x8, #496]
  40d8c8:	cbz	x8, 40d8d0 <wcrtomb@plt+0x8ad0>
  40d8cc:	blr	x8
  40d8d0:	bl	404ce0 <__errno_location@plt>
  40d8d4:	ldr	w24, [x0]
  40d8d8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40d8dc:	mov	w2, #0x5                   	// #5
  40d8e0:	mov	x0, xzr
  40d8e4:	add	x1, x1, #0xa84
  40d8e8:	bl	404bd0 <dcgettext@plt>
  40d8ec:	mov	x2, x0
  40d8f0:	mov	w0, wzr
  40d8f4:	mov	w1, w24
  40d8f8:	mov	x3, x22
  40d8fc:	bl	4041d0 <error@plt>
  40d900:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d904:	mov	w9, #0x2                   	// #2
  40d908:	mov	w0, w23
  40d90c:	str	w9, [x8, #2944]
  40d910:	bl	4047a0 <close@plt>
  40d914:	b	40d7e4 <wcrtomb@plt+0x89e4>
  40d918:	mov	x28, x0
  40d91c:	mov	x27, x0
  40d920:	b	40d7e4 <wcrtomb@plt+0x89e4>
  40d924:	mov	x27, xzr
  40d928:	str	x27, [x19, #416]
  40d92c:	ldp	x20, x19, [sp, #80]
  40d930:	ldp	x22, x21, [sp, #64]
  40d934:	ldp	x24, x23, [sp, #48]
  40d938:	ldp	x26, x25, [sp, #32]
  40d93c:	ldp	x28, x27, [sp, #16]
  40d940:	ldp	x29, x30, [sp], #96
  40d944:	ret
  40d948:	bl	404ce0 <__errno_location@plt>
  40d94c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40d950:	ldr	x8, [x8, #496]
  40d954:	ldr	w19, [x0]
  40d958:	cbz	x8, 40d960 <wcrtomb@plt+0x8b60>
  40d95c:	blr	x8
  40d960:	mov	x0, x22
  40d964:	bl	4398cc <argp_parse@@Base+0xac10>
  40d968:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  40d96c:	mov	x3, x0
  40d970:	add	x2, x2, #0xb24
  40d974:	mov	w0, wzr
  40d978:	mov	w1, w19
  40d97c:	bl	4041d0 <error@plt>
  40d980:	bl	40d698 <wcrtomb@plt+0x8898>
  40d984:	stp	x29, x30, [sp, #-48]!
  40d988:	stp	x20, x19, [sp, #32]
  40d98c:	ldr	x20, [x0, #416]
  40d990:	mov	x19, x0
  40d994:	str	x21, [sp, #16]
  40d998:	mov	x29, sp
  40d99c:	cbz	x20, 40d9bc <wcrtomb@plt+0x8bbc>
  40d9a0:	ldr	x0, [x20, #24]
  40d9a4:	ldr	x21, [x20]
  40d9a8:	bl	430708 <argp_parse@@Base+0x1a4c>
  40d9ac:	mov	x0, x20
  40d9b0:	bl	4049b0 <free@plt>
  40d9b4:	mov	x20, x21
  40d9b8:	cbnz	x21, 40d9a0 <wcrtomb@plt+0x8ba0>
  40d9bc:	str	xzr, [x19, #416]
  40d9c0:	ldp	x20, x19, [sp, #32]
  40d9c4:	ldr	x21, [sp, #16]
  40d9c8:	ldp	x29, x30, [sp], #48
  40d9cc:	ret
  40d9d0:	stp	x29, x30, [sp, #-64]!
  40d9d4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40d9d8:	ldr	x8, [x8, #3648]
  40d9dc:	stp	x22, x21, [sp, #32]
  40d9e0:	mov	x21, x0
  40d9e4:	stp	x20, x19, [sp, #48]
  40d9e8:	mov	x20, x1
  40d9ec:	mov	x0, x8
  40d9f0:	mov	x1, x21
  40d9f4:	stp	x24, x23, [sp, #16]
  40d9f8:	mov	x29, sp
  40d9fc:	bl	430984 <argp_parse@@Base+0x1cc8>
  40da00:	tbz	w0, #0, 40da0c <wcrtomb@plt+0x8c0c>
  40da04:	mov	w20, #0x1                   	// #1
  40da08:	b	40dac4 <wcrtomb@plt+0x8cc4>
  40da0c:	cbz	x20, 40dac4 <wcrtomb@plt+0x8cc4>
  40da10:	mov	w23, wzr
  40da14:	mov	x19, xzr
  40da18:	mov	x22, xzr
  40da1c:	ldr	x24, [x20, #416]
  40da20:	cbz	x24, 40daa8 <wcrtomb@plt+0x8ca8>
  40da24:	ldr	w8, [x24, #16]
  40da28:	tst	w8, w23
  40da2c:	b.ne	40daa0 <wcrtomb@plt+0x8ca0>  // b.any
  40da30:	ldr	x0, [x24, #24]
  40da34:	mov	x1, x21
  40da38:	bl	430984 <argp_parse@@Base+0x1cc8>
  40da3c:	tbnz	w0, #0, 40dab8 <wcrtomb@plt+0x8cb8>
  40da40:	cbnz	x22, 40da70 <wcrtomb@plt+0x8c70>
  40da44:	ldrb	w8, [x21]
  40da48:	mov	x22, x21
  40da4c:	cmp	w8, #0x2e
  40da50:	b.ne	40da70 <wcrtomb@plt+0x8c70>  // b.any
  40da54:	mov	x22, x21
  40da58:	ldrb	w8, [x22, #1]
  40da5c:	cmp	w8, #0x2f
  40da60:	b.ne	40da70 <wcrtomb@plt+0x8c70>  // b.any
  40da64:	ldrb	w8, [x22, #2]!
  40da68:	cmp	w8, #0x2e
  40da6c:	b.eq	40da58 <wcrtomb@plt+0x8c58>  // b.none
  40da70:	ldr	x0, [x24, #24]
  40da74:	mov	x1, x22
  40da78:	bl	430984 <argp_parse@@Base+0x1cc8>
  40da7c:	tbnz	w0, #0, 40dab8 <wcrtomb@plt+0x8cb8>
  40da80:	cbnz	x19, 40da90 <wcrtomb@plt+0x8c90>
  40da84:	mov	x0, x21
  40da88:	bl	430404 <argp_parse@@Base+0x1748>
  40da8c:	mov	x19, x0
  40da90:	ldr	x0, [x24, #24]
  40da94:	mov	x1, x19
  40da98:	bl	430984 <argp_parse@@Base+0x1cc8>
  40da9c:	tbnz	w0, #0, 40dab8 <wcrtomb@plt+0x8cb8>
  40daa0:	ldr	x24, [x24]
  40daa4:	cbnz	x24, 40da24 <wcrtomb@plt+0x8c24>
  40daa8:	ldr	x20, [x20, #392]
  40daac:	mov	w23, #0x2                   	// #2
  40dab0:	cbnz	x20, 40da1c <wcrtomb@plt+0x8c1c>
  40dab4:	b	40dabc <wcrtomb@plt+0x8cbc>
  40dab8:	mov	w20, #0x1                   	// #1
  40dabc:	mov	x0, x19
  40dac0:	bl	4049b0 <free@plt>
  40dac4:	mov	w0, w20
  40dac8:	ldp	x20, x19, [sp, #48]
  40dacc:	ldp	x22, x21, [sp, #32]
  40dad0:	ldp	x24, x23, [sp, #16]
  40dad4:	ldp	x29, x30, [sp], #64
  40dad8:	ret
  40dadc:	stp	x29, x30, [sp, #-32]!
  40dae0:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  40dae4:	ldr	x0, [x8, #1736]
  40dae8:	str	x19, [sp, #16]
  40daec:	mov	x29, sp
  40daf0:	cbz	x0, 40db0c <wcrtomb@plt+0x8d0c>
  40daf4:	adrp	x19, 467000 <_obstack_memory_used@@Base+0x2b808>
  40daf8:	add	x19, x19, #0x6f0
  40dafc:	mov	w1, wzr
  40db00:	bl	40d710 <wcrtomb@plt+0x8910>
  40db04:	ldr	x0, [x19], #40
  40db08:	cbnz	x0, 40dafc <wcrtomb@plt+0x8cfc>
  40db0c:	ldr	x19, [sp, #16]
  40db10:	ldp	x29, x30, [sp], #32
  40db14:	ret
  40db18:	sub	sp, sp, #0x120
  40db1c:	mov	x8, x1
  40db20:	stp	x20, x19, [sp, #272]
  40db24:	mov	w19, w2
  40db28:	mov	x20, x0
  40db2c:	add	x1, sp, #0x8
  40db30:	mov	w2, #0x844                 	// #2116
  40db34:	mov	x0, x8
  40db38:	stp	x29, x30, [sp, #240]
  40db3c:	stp	x28, x21, [sp, #256]
  40db40:	add	x29, sp, #0xf0
  40db44:	bl	427ec8 <wcrtomb@plt+0x230c8>
  40db48:	cbnz	w0, 40db84 <wcrtomb@plt+0x8d84>
  40db4c:	ldr	x8, [sp, #8]
  40db50:	cbz	x8, 40db7c <wcrtomb@plt+0x8d7c>
  40db54:	mov	x21, xzr
  40db58:	ldr	x8, [sp, #16]
  40db5c:	mov	x0, x20
  40db60:	mov	w2, w19
  40db64:	ldr	x1, [x8, x21, lsl #3]
  40db68:	bl	430adc <argp_parse@@Base+0x1e20>
  40db6c:	ldr	x8, [sp, #8]
  40db70:	add	x21, x21, #0x1
  40db74:	cmp	x21, x8
  40db78:	b.cc	40db58 <wcrtomb@plt+0x8d58>  // b.lo, b.ul, b.last
  40db7c:	add	x0, sp, #0x8
  40db80:	bl	42800c <wcrtomb@plt+0x2320c>
  40db84:	ldp	x20, x19, [sp, #272]
  40db88:	ldp	x28, x21, [sp, #256]
  40db8c:	ldp	x29, x30, [sp, #240]
  40db90:	add	sp, sp, #0x120
  40db94:	ret
  40db98:	stp	x29, x30, [sp, #-48]!
  40db9c:	str	x21, [sp, #16]
  40dba0:	stp	x20, x19, [sp, #32]
  40dba4:	mov	x29, sp
  40dba8:	mov	w19, w2
  40dbac:	mov	x21, x1
  40dbb0:	mov	x20, x0
  40dbb4:	bl	404930 <__ctype_b_loc@plt>
  40dbb8:	ldr	x9, [x0]
  40dbbc:	ldrb	w8, [x21], #1
  40dbc0:	ldrh	w10, [x9, x8, lsl #1]
  40dbc4:	tbnz	w10, #13, 40dbbc <wcrtomb@plt+0x8dbc>
  40dbc8:	cbz	w8, 40dc04 <wcrtomb@plt+0x8e04>
  40dbcc:	cmp	w8, #0x23
  40dbd0:	b.eq	40dc04 <wcrtomb@plt+0x8e04>  // b.none
  40dbd4:	cmp	w8, #0x5c
  40dbd8:	sub	x1, x21, #0x1
  40dbdc:	b.ne	40dbec <wcrtomb@plt+0x8dec>  // b.any
  40dbe0:	ldrb	w8, [x21]
  40dbe4:	cmp	w8, #0x23
  40dbe8:	csel	x1, x21, x1, eq  // eq = none
  40dbec:	mov	x0, x20
  40dbf0:	mov	w2, w19
  40dbf4:	ldp	x20, x19, [sp, #32]
  40dbf8:	ldr	x21, [sp, #16]
  40dbfc:	ldp	x29, x30, [sp], #48
  40dc00:	b	430adc <argp_parse@@Base+0x1e20>
  40dc04:	ldp	x20, x19, [sp, #32]
  40dc08:	ldr	x21, [sp, #16]
  40dc0c:	ldp	x29, x30, [sp], #48
  40dc10:	ret
  40dc14:	stp	x29, x30, [sp, #-48]!
  40dc18:	str	x21, [sp, #16]
  40dc1c:	stp	x20, x19, [sp, #32]
  40dc20:	mov	x29, sp
  40dc24:	mov	w21, w2
  40dc28:	mov	x19, x1
  40dc2c:	mov	x20, x0
  40dc30:	bl	404930 <__ctype_b_loc@plt>
  40dc34:	ldr	x9, [x0]
  40dc38:	ldrb	w8, [x19], #1
  40dc3c:	ldrh	w10, [x9, x8, lsl #1]
  40dc40:	tbnz	w10, #13, 40dc38 <wcrtomb@plt+0x8e38>
  40dc44:	cbz	w8, 40dc58 <wcrtomb@plt+0x8e58>
  40dc48:	cmp	w8, #0x21
  40dc4c:	b.eq	40dc68 <wcrtomb@plt+0x8e68>  // b.none
  40dc50:	cmp	w8, #0x23
  40dc54:	b.ne	40dc7c <wcrtomb@plt+0x8e7c>  // b.any
  40dc58:	ldp	x20, x19, [sp, #32]
  40dc5c:	ldr	x21, [sp, #16]
  40dc60:	ldp	x29, x30, [sp], #48
  40dc64:	ret
  40dc68:	ldrb	w8, [x19]
  40dc6c:	cmp	w8, #0x21
  40dc70:	b.ne	40dc84 <wcrtomb@plt+0x8e84>  // b.any
  40dc74:	add	x19, x19, #0x1
  40dc78:	b	40dc88 <wcrtomb@plt+0x8e88>
  40dc7c:	sub	x19, x19, #0x1
  40dc80:	b	40dc88 <wcrtomb@plt+0x8e88>
  40dc84:	orr	w21, w21, #0x20000000
  40dc88:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40dc8c:	add	x1, x1, #0xac1
  40dc90:	mov	w2, #0x3                   	// #3
  40dc94:	mov	x0, x19
  40dc98:	bl	404580 <strncmp@plt>
  40dc9c:	and	w9, w21, #0xe7ffffff
  40dca0:	add	x8, x19, #0x3
  40dca4:	cmp	w0, #0x0
  40dca8:	orr	w9, w9, #0x8000000
  40dcac:	csel	w2, w9, w21, eq  // eq = none
  40dcb0:	csel	x1, x8, x19, eq  // eq = none
  40dcb4:	mov	x0, x20
  40dcb8:	ldp	x20, x19, [sp, #32]
  40dcbc:	ldr	x21, [sp, #16]
  40dcc0:	ldp	x29, x30, [sp], #48
  40dcc4:	b	430adc <argp_parse@@Base+0x1e20>
  40dcc8:	stp	x29, x30, [sp, #-64]!
  40dccc:	stp	x24, x23, [sp, #16]
  40dcd0:	stp	x22, x21, [sp, #32]
  40dcd4:	stp	x20, x19, [sp, #48]
  40dcd8:	mov	x29, sp
  40dcdc:	mov	x19, x3
  40dce0:	mov	w21, w2
  40dce4:	mov	x22, x1
  40dce8:	mov	x20, x0
  40dcec:	bl	404930 <__ctype_b_loc@plt>
  40dcf0:	ldr	x23, [x0]
  40dcf4:	sub	x24, x22, #0x2
  40dcf8:	ldrb	w8, [x24, #2]
  40dcfc:	add	x24, x24, #0x1
  40dd00:	ldrh	w9, [x23, x8, lsl #1]
  40dd04:	tbnz	w9, #13, 40dcf8 <wcrtomb@plt+0x8ef8>
  40dd08:	cbz	w8, 40dd14 <wcrtomb@plt+0x8f14>
  40dd0c:	cmp	w8, #0x23
  40dd10:	b.ne	40dd28 <wcrtomb@plt+0x8f28>  // b.any
  40dd14:	ldp	x20, x19, [sp, #48]
  40dd18:	ldp	x22, x21, [sp, #32]
  40dd1c:	ldp	x24, x23, [sp, #16]
  40dd20:	ldp	x29, x30, [sp], #64
  40dd24:	ret
  40dd28:	add	x22, x24, #0x1
  40dd2c:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40dd30:	add	x1, x1, #0xac5
  40dd34:	mov	w2, #0x7                   	// #7
  40dd38:	mov	x0, x22
  40dd3c:	bl	404580 <strncmp@plt>
  40dd40:	cbz	w0, 40ddcc <wcrtomb@plt+0x8fcc>
  40dd44:	mov	x0, x22
  40dd48:	bl	404170 <strlen@plt>
  40dd4c:	ldrb	w8, [x24, x0]
  40dd50:	cmp	w8, #0x2f
  40dd54:	b.ne	40dd90 <wcrtomb@plt+0x8f90>  // b.any
  40dd58:	sub	x23, x0, #0x1
  40dd5c:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  40dd60:	mov	x1, x22
  40dd64:	mov	x2, x23
  40dd68:	mov	x24, x0
  40dd6c:	bl	4040f0 <memcpy@plt>
  40dd70:	mov	x0, x20
  40dd74:	mov	x1, x24
  40dd78:	strb	wzr, [x24, x23]
  40dd7c:	bl	4305ec <argp_parse@@Base+0x1930>
  40dd80:	mov	w8, #0x8                   	// #8
  40dd84:	movk	w8, #0x400, lsl #16
  40dd88:	orr	w21, w21, w8
  40dd8c:	mov	x22, x24
  40dd90:	ldr	w8, [x19]
  40dd94:	mov	w9, #0x8000000             	// #134217728
  40dd98:	mov	w10, #0xf7ffffff            	// #-134217729
  40dd9c:	mov	x0, x20
  40dda0:	cmp	w8, w9
  40dda4:	mov	w9, #0xefffffff            	// #-268435457
  40dda8:	csel	w9, w9, w10, eq  // eq = none
  40ddac:	and	w9, w9, w21
  40ddb0:	mov	x1, x22
  40ddb4:	ldp	x20, x19, [sp, #48]
  40ddb8:	ldp	x22, x21, [sp, #32]
  40ddbc:	ldp	x24, x23, [sp, #16]
  40ddc0:	orr	w2, w9, w8
  40ddc4:	ldp	x29, x30, [sp], #64
  40ddc8:	b	430adc <argp_parse@@Base+0x1e20>
  40ddcc:	add	x20, x24, #0x7
  40ddd0:	ldrb	w8, [x20, #1]!
  40ddd4:	ldrh	w8, [x23, x8, lsl #1]
  40ddd8:	tbnz	w8, #13, 40ddd0 <wcrtomb@plt+0x8fd0>
  40dddc:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40dde0:	add	x1, x1, #0xacd
  40dde4:	mov	x0, x20
  40dde8:	bl	404900 <strcmp@plt>
  40ddec:	cbz	w0, 40de0c <wcrtomb@plt+0x900c>
  40ddf0:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ddf4:	add	x1, x1, #0xad4
  40ddf8:	mov	x0, x20
  40ddfc:	bl	404900 <strcmp@plt>
  40de00:	cbnz	w0, 40dd14 <wcrtomb@plt+0x8f14>
  40de04:	mov	w8, #0x10000000            	// #268435456
  40de08:	b	40de10 <wcrtomb@plt+0x9010>
  40de0c:	mov	w8, #0x8000000             	// #134217728
  40de10:	str	w8, [x19]
  40de14:	b	40dd14 <wcrtomb@plt+0x8f14>
  40de18:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40de1c:	add	x8, x8, #0x610
  40de20:	cmp	x0, #0x0
  40de24:	csel	x0, x8, x0, eq  // eq = none
  40de28:	mov	w8, #0x8000000             	// #134217728
  40de2c:	str	w8, [x0]
  40de30:	ret
  40de34:	stp	x29, x30, [sp, #-32]!
  40de38:	str	x19, [sp, #16]
  40de3c:	mov	x29, sp
  40de40:	bl	404260 <geteuid@plt>
  40de44:	adrp	x19, 46b000 <argp_program_version_hook@@Base+0x458>
  40de48:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40de4c:	ldr	w10, [x19, #100]
  40de50:	ldr	w11, [x9, #468]
  40de54:	cmp	w0, #0x0
  40de58:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40de5c:	cset	w12, eq  // eq = none
  40de60:	strb	w12, [x8, #1560]
  40de64:	cinc	w8, w10, eq  // eq = none
  40de68:	cinc	w10, w11, eq  // eq = none
  40de6c:	mov	w0, wzr
  40de70:	str	w8, [x19, #100]
  40de74:	str	w10, [x9, #468]
  40de78:	bl	404c90 <umask@plt>
  40de7c:	ldr	w9, [x19, #100]
  40de80:	mov	w8, wzr
  40de84:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40de88:	str	w0, [x19, #1564]
  40de8c:	cmp	w9, #0x0
  40de90:	b.gt	40de9c <wcrtomb@plt+0x909c>
  40de94:	bl	404c90 <umask@plt>
  40de98:	ldr	w8, [x19, #1564]
  40de9c:	ldr	x19, [sp, #16]
  40dea0:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40dea4:	str	w8, [x9, #1568]
  40dea8:	ldp	x29, x30, [sp], #32
  40deac:	ret
  40deb0:	stp	x29, x30, [sp, #-64]!
  40deb4:	stp	x22, x21, [sp, #32]
  40deb8:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40debc:	stp	x20, x19, [sp, #48]
  40dec0:	ldr	x19, [x21, #1576]
  40dec4:	stp	x24, x23, [sp, #16]
  40dec8:	mov	x29, sp
  40decc:	cbz	x19, 40df28 <wcrtomb@plt+0x9128>
  40ded0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40ded4:	ldr	w23, [x8, #3584]
  40ded8:	mov	x20, x0
  40dedc:	mov	x22, xzr
  40dee0:	ldr	w8, [x19, #92]
  40dee4:	ldr	x24, [x19]
  40dee8:	cmp	w23, w8
  40deec:	b.ne	40df00 <wcrtomb@plt+0x9100>  // b.any
  40def0:	ldr	x0, [x19, #160]
  40def4:	mov	x1, x20
  40def8:	bl	404900 <strcmp@plt>
  40defc:	cbz	w0, 40df10 <wcrtomb@plt+0x9110>
  40df00:	mov	x22, x19
  40df04:	mov	x19, x24
  40df08:	cbnz	x24, 40dee0 <wcrtomb@plt+0x90e0>
  40df0c:	b	40df28 <wcrtomb@plt+0x9128>
  40df10:	mov	x0, x19
  40df14:	bl	40df3c <wcrtomb@plt+0x913c>
  40df18:	cbz	x22, 40df24 <wcrtomb@plt+0x9124>
  40df1c:	str	x24, [x22]
  40df20:	b	40df28 <wcrtomb@plt+0x9128>
  40df24:	str	x24, [x21, #1576]
  40df28:	ldp	x20, x19, [sp, #48]
  40df2c:	ldp	x22, x21, [sp, #32]
  40df30:	ldp	x24, x23, [sp, #16]
  40df34:	ldp	x29, x30, [sp], #64
  40df38:	ret
  40df3c:	stp	x29, x30, [sp, #-32]!
  40df40:	str	x19, [sp, #16]
  40df44:	mov	x19, x0
  40df48:	ldr	x0, [x0, #160]
  40df4c:	mov	x29, sp
  40df50:	bl	4049b0 <free@plt>
  40df54:	ldp	x1, x0, [x19, #136]
  40df58:	bl	410e6c <wcrtomb@plt+0xc06c>
  40df5c:	ldr	x0, [x19, #96]
  40df60:	bl	4049b0 <free@plt>
  40df64:	ldr	x0, [x19, #104]
  40df68:	bl	4049b0 <free@plt>
  40df6c:	ldr	x0, [x19, #120]
  40df70:	bl	4049b0 <free@plt>
  40df74:	mov	x0, x19
  40df78:	ldr	x19, [sp, #16]
  40df7c:	ldp	x29, x30, [sp], #32
  40df80:	b	4049b0 <free@plt>
  40df84:	stp	x29, x30, [sp, #-80]!
  40df88:	stp	x26, x25, [sp, #16]
  40df8c:	stp	x24, x23, [sp, #32]
  40df90:	stp	x22, x21, [sp, #48]
  40df94:	stp	x20, x19, [sp, #64]
  40df98:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40df9c:	ldr	x0, [x20, #3560]
  40dfa0:	adrp	x9, 40e000 <wcrtomb@plt+0x9200>
  40dfa4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40dfa8:	add	x9, x9, #0x43c
  40dfac:	mov	x29, sp
  40dfb0:	str	x9, [x8, #3528]
  40dfb4:	bl	40587c <wcrtomb@plt+0xa7c>
  40dfb8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40dfbc:	ldrb	w8, [x8, #440]
  40dfc0:	cbnz	w8, 40e01c <wcrtomb@plt+0x921c>
  40dfc4:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40dfc8:	ldr	x0, [x19, #3680]
  40dfcc:	bl	41c004 <wcrtomb@plt+0x17204>
  40dfd0:	tbz	w0, #0, 40e01c <wcrtomb@plt+0x921c>
  40dfd4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40dfd8:	ldr	x8, [x8, #496]
  40dfdc:	cbz	x8, 40dfe4 <wcrtomb@plt+0x91e4>
  40dfe0:	blr	x8
  40dfe4:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40dfe8:	add	x1, x1, #0xafe
  40dfec:	mov	w2, #0x5                   	// #5
  40dff0:	mov	x0, xzr
  40dff4:	bl	404bd0 <dcgettext@plt>
  40dff8:	ldr	x8, [x19, #3680]
  40dffc:	mov	x19, x0
  40e000:	mov	x0, x8
  40e004:	bl	4398cc <argp_parse@@Base+0xac10>
  40e008:	mov	x3, x0
  40e00c:	mov	w0, wzr
  40e010:	mov	w1, wzr
  40e014:	mov	x2, x19
  40e018:	b	40e184 <wcrtomb@plt+0x9384>
  40e01c:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e020:	ldr	x1, [x22, #3688]
  40e024:	ldrb	w8, [x1]
  40e028:	cbz	w8, 40e194 <wcrtomb@plt+0x9394>
  40e02c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40e030:	ldrb	w8, [x8, #80]
  40e034:	cbz	w8, 40e048 <wcrtomb@plt+0x9248>
  40e038:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  40e03c:	add	x0, x0, #0xb1c
  40e040:	bl	41f8c4 <wcrtomb@plt+0x1aac4>
  40e044:	cbz	w0, 40e194 <wcrtomb@plt+0x9394>
  40e048:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40e04c:	ldr	w8, [x8, #132]
  40e050:	cbz	w8, 40e068 <wcrtomb@plt+0x9268>
  40e054:	ldr	x1, [x20, #3560]
  40e058:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e05c:	add	x0, x0, #0xe60
  40e060:	mov	x2, #0xffffffffffffffff    	// #-1
  40e064:	bl	416dc8 <wcrtomb@plt+0x11fc8>
  40e068:	adrp	x26, 46b000 <argp_program_version_hook@@Base+0x458>
  40e06c:	ldrb	w8, [x26, #456]
  40e070:	cbnz	w8, 40e090 <wcrtomb@plt+0x9290>
  40e074:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e078:	ldr	x0, [x22, #3688]
  40e07c:	ldr	w19, [x8, #3584]
  40e080:	mov	w1, wzr
  40e084:	bl	40e688 <wcrtomb@plt+0x9888>
  40e088:	mov	w0, w19
  40e08c:	bl	419ad4 <wcrtomb@plt+0x14cd4>
  40e090:	adrp	x23, 46b000 <argp_program_version_hook@@Base+0x458>
  40e094:	ldrb	w8, [x23, #245]
  40e098:	cbz	w8, 40e0ac <wcrtomb@plt+0x92ac>
  40e09c:	ldr	x0, [x22, #3688]
  40e0a0:	mov	w1, wzr
  40e0a4:	bl	41936c <wcrtomb@plt+0x1456c>
  40e0a8:	tbz	w0, #0, 40e138 <wcrtomb@plt+0x9338>
  40e0ac:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e0b0:	add	x0, x0, #0xe60
  40e0b4:	bl	41c728 <wcrtomb@plt+0x17928>
  40e0b8:	tbz	w0, #0, 40e0d0 <wcrtomb@plt+0x92d0>
  40e0bc:	ldr	x19, [x22, #3688]
  40e0c0:	adrp	x21, 40f000 <wcrtomb@plt+0xa200>
  40e0c4:	add	x21, x21, #0xe8
  40e0c8:	mov	w20, #0x53                  	// #83
  40e0cc:	b	40e344 <wcrtomb@plt+0x9544>
  40e0d0:	ldr	x8, [x20, #3560]
  40e0d4:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40e0d8:	ldr	x19, [x22, #3688]
  40e0dc:	ldrb	w25, [x9, #113]
  40e0e0:	ldrb	w20, [x8, #156]
  40e0e4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40e0e8:	ldr	x24, [x8, #104]
  40e0ec:	cmp	w20, #0x52
  40e0f0:	b.gt	40e1ac <wcrtomb@plt+0x93ac>
  40e0f4:	sub	w8, w20, #0x30
  40e0f8:	cmp	w8, #0x1d
  40e0fc:	b.hi	40e214 <wcrtomb@plt+0x9414>  // b.pmore
  40e100:	adrp	x9, 44c000 <_obstack_memory_used@@Base+0x10808>
  40e104:	add	x9, x9, #0xad9
  40e108:	adr	x10, 40e120 <wcrtomb@plt+0x9320>
  40e10c:	ldrb	w11, [x9, x8]
  40e110:	add	x10, x10, x11, lsl #2
  40e114:	adrp	x21, 40f000 <wcrtomb@plt+0xa200>
  40e118:	add	x21, x21, #0x8e0
  40e11c:	br	x10
  40e120:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e124:	ldrb	w8, [x8, #4056]
  40e128:	cbz	w8, 40e224 <wcrtomb@plt+0x9424>
  40e12c:	mov	w8, #0x1                   	// #1
  40e130:	strb	w8, [x26, #456]
  40e134:	b	40e224 <wcrtomb@plt+0x9424>
  40e138:	bl	404ce0 <__errno_location@plt>
  40e13c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40e140:	ldr	x8, [x8, #496]
  40e144:	ldr	w19, [x0]
  40e148:	cbz	x8, 40e150 <wcrtomb@plt+0x9350>
  40e14c:	blr	x8
  40e150:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40e154:	add	x1, x1, #0xb24
  40e158:	mov	w2, #0x5                   	// #5
  40e15c:	mov	x0, xzr
  40e160:	bl	404bd0 <dcgettext@plt>
  40e164:	ldr	x8, [x22, #3688]
  40e168:	mov	x20, x0
  40e16c:	mov	x0, x8
  40e170:	bl	4398cc <argp_parse@@Base+0xac10>
  40e174:	mov	x3, x0
  40e178:	mov	w0, wzr
  40e17c:	mov	w1, w19
  40e180:	mov	x2, x20
  40e184:	bl	4041d0 <error@plt>
  40e188:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e18c:	mov	w9, #0x2                   	// #2
  40e190:	str	w9, [x8, #2944]
  40e194:	ldp	x20, x19, [sp, #64]
  40e198:	ldp	x22, x21, [sp, #48]
  40e19c:	ldp	x24, x23, [sp, #32]
  40e1a0:	ldp	x26, x25, [sp, #16]
  40e1a4:	ldp	x29, x30, [sp], #80
  40e1a8:	b	416cc8 <wcrtomb@plt+0x11ec8>
  40e1ac:	cmp	w20, #0x53
  40e1b0:	b.eq	40e230 <wcrtomb@plt+0x9430>  // b.none
  40e1b4:	cmp	w20, #0x56
  40e1b8:	b.ne	40e23c <wcrtomb@plt+0x943c>  // b.any
  40e1bc:	adrp	x21, 40f000 <wcrtomb@plt+0xa200>
  40e1c0:	add	x21, x21, #0xd60
  40e1c4:	b	40e33c <wcrtomb@plt+0x953c>
  40e1c8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40e1cc:	ldr	x8, [x8, #496]
  40e1d0:	cbz	x8, 40e1d8 <wcrtomb@plt+0x93d8>
  40e1d4:	blr	x8
  40e1d8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40e1dc:	add	x1, x1, #0xc1f
  40e1e0:	mov	w2, #0x5                   	// #5
  40e1e4:	mov	x0, xzr
  40e1e8:	bl	404bd0 <dcgettext@plt>
  40e1ec:	mov	x2, x0
  40e1f0:	mov	w0, wzr
  40e1f4:	mov	w1, wzr
  40e1f8:	bl	4041d0 <error@plt>
  40e1fc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e200:	mov	w9, #0x2                   	// #2
  40e204:	adrp	x21, 40f000 <wcrtomb@plt+0xa200>
  40e208:	str	w9, [x8, #2944]
  40e20c:	add	x21, x21, #0xd90
  40e210:	b	40e33c <wcrtomb@plt+0x953c>
  40e214:	cbnz	w20, 40e23c <wcrtomb@plt+0x943c>
  40e218:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e21c:	ldrb	w8, [x8, #3696]
  40e220:	cbz	w8, 40e230 <wcrtomb@plt+0x9430>
  40e224:	adrp	x21, 40f000 <wcrtomb@plt+0xa200>
  40e228:	add	x21, x21, #0x568
  40e22c:	b	40e33c <wcrtomb@plt+0x953c>
  40e230:	adrp	x21, 40f000 <wcrtomb@plt+0xa200>
  40e234:	add	x21, x21, #0xe8
  40e238:	b	40e344 <wcrtomb@plt+0x9544>
  40e23c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e240:	ldrb	w8, [x8, #154]
  40e244:	tbz	w8, #0, 40e290 <wcrtomb@plt+0x9490>
  40e248:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40e24c:	ldr	x8, [x8, #496]
  40e250:	cbz	x8, 40e258 <wcrtomb@plt+0x9458>
  40e254:	blr	x8
  40e258:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40e25c:	add	x1, x1, #0xc3b
  40e260:	mov	w2, #0x5                   	// #5
  40e264:	mov	x0, xzr
  40e268:	bl	404bd0 <dcgettext@plt>
  40e26c:	mov	x21, x0
  40e270:	mov	x0, x19
  40e274:	bl	4398cc <argp_parse@@Base+0xac10>
  40e278:	mov	x3, x0
  40e27c:	mov	w0, wzr
  40e280:	mov	w1, wzr
  40e284:	mov	x2, x21
  40e288:	mov	w4, w20
  40e28c:	bl	4041d0 <error@plt>
  40e290:	adrp	x21, 40f000 <wcrtomb@plt+0xa200>
  40e294:	add	x21, x21, #0xe8
  40e298:	b	40e33c <wcrtomb@plt+0x953c>
  40e29c:	adrp	x21, 40f000 <wcrtomb@plt+0xa200>
  40e2a0:	add	x21, x21, #0x9b8
  40e2a4:	b	40e33c <wcrtomb@plt+0x953c>
  40e2a8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e2ac:	ldr	w9, [x8, #3784]
  40e2b0:	orr	w9, w9, #0x2000
  40e2b4:	b	40e2c4 <wcrtomb@plt+0x94c4>
  40e2b8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e2bc:	ldr	w9, [x8, #3784]
  40e2c0:	orr	w9, w9, #0x6000
  40e2c4:	adrp	x21, 40f000 <wcrtomb@plt+0xa200>
  40e2c8:	str	w9, [x8, #3784]
  40e2cc:	add	x21, x21, #0xbb4
  40e2d0:	b	40e33c <wcrtomb@plt+0x953c>
  40e2d4:	adrp	x21, 40f000 <wcrtomb@plt+0xa200>
  40e2d8:	add	x21, x21, #0xc90
  40e2dc:	b	40e33c <wcrtomb@plt+0x953c>
  40e2e0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40e2e4:	ldr	x8, [x8, #496]
  40e2e8:	cbz	x8, 40e2f0 <wcrtomb@plt+0x94f0>
  40e2ec:	blr	x8
  40e2f0:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40e2f4:	add	x1, x1, #0xbe3
  40e2f8:	mov	w2, #0x5                   	// #5
  40e2fc:	mov	x0, xzr
  40e300:	bl	404bd0 <dcgettext@plt>
  40e304:	ldr	x8, [x22, #3688]
  40e308:	mov	x21, x0
  40e30c:	mov	x0, x8
  40e310:	bl	4398cc <argp_parse@@Base+0xac10>
  40e314:	mov	x3, x0
  40e318:	mov	w0, wzr
  40e31c:	mov	w1, wzr
  40e320:	mov	x2, x21
  40e324:	bl	4041d0 <error@plt>
  40e328:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e32c:	mov	w9, #0x2                   	// #2
  40e330:	adrp	x21, 40f000 <wcrtomb@plt+0xa200>
  40e334:	str	w9, [x8, #2944]
  40e338:	add	x21, x21, #0xd78
  40e33c:	cbnz	w25, 40e194 <wcrtomb@plt+0x9394>
  40e340:	cbnz	x24, 40e194 <wcrtomb@plt+0x9394>
  40e344:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40e348:	ldr	w8, [x8, #240]
  40e34c:	cmp	w8, #0x6
  40e350:	b.eq	40e390 <wcrtomb@plt+0x9590>  // b.none
  40e354:	cmp	w8, #0x3
  40e358:	b.ne	40e3f4 <wcrtomb@plt+0x95f4>  // b.any
  40e35c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e360:	ldrb	w1, [x8, #3618]
  40e364:	mov	x0, x19
  40e368:	bl	4190e0 <wcrtomb@plt+0x142e0>
  40e36c:	cbnz	w0, 40e3f4 <wcrtomb@plt+0x95f4>
  40e370:	bl	404ce0 <__errno_location@plt>
  40e374:	ldr	w8, [x0]
  40e378:	orr	w8, w8, #0x2
  40e37c:	cmp	w8, #0x2
  40e380:	b.eq	40e3f4 <wcrtomb@plt+0x95f4>  // b.none
  40e384:	mov	x0, x19
  40e388:	bl	426734 <wcrtomb@plt+0x21934>
  40e38c:	b	40e194 <wcrtomb@plt+0x9394>
  40e390:	mov	x0, x19
  40e394:	mov	x1, xzr
  40e398:	bl	40fd98 <wcrtomb@plt+0xaf98>
  40e39c:	tbz	w0, #0, 40e3f4 <wcrtomb@plt+0x95f4>
  40e3a0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e3a4:	ldrb	w8, [x8, #153]
  40e3a8:	tbz	w8, #3, 40e194 <wcrtomb@plt+0x9394>
  40e3ac:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40e3b0:	ldr	x8, [x8, #496]
  40e3b4:	cbz	x8, 40e3bc <wcrtomb@plt+0x95bc>
  40e3b8:	blr	x8
  40e3bc:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40e3c0:	add	x1, x1, #0xc70
  40e3c4:	mov	w2, #0x5                   	// #5
  40e3c8:	mov	x0, xzr
  40e3cc:	bl	404bd0 <dcgettext@plt>
  40e3d0:	mov	x20, x0
  40e3d4:	mov	x0, x19
  40e3d8:	bl	439ac0 <argp_parse@@Base+0xae04>
  40e3dc:	mov	x3, x0
  40e3e0:	mov	w0, wzr
  40e3e4:	mov	w1, wzr
  40e3e8:	mov	x2, x20
  40e3ec:	bl	4041d0 <error@plt>
  40e3f0:	b	40e194 <wcrtomb@plt+0x9394>
  40e3f4:	ldr	x0, [x22, #3688]
  40e3f8:	mov	w1, w20
  40e3fc:	blr	x21
  40e400:	cbz	w0, 40e424 <wcrtomb@plt+0x9624>
  40e404:	ldrb	w8, [x23, #245]
  40e408:	cbz	w8, 40e424 <wcrtomb@plt+0x9624>
  40e40c:	ldp	x20, x19, [sp, #64]
  40e410:	ldp	x22, x21, [sp, #48]
  40e414:	ldp	x24, x23, [sp, #32]
  40e418:	ldp	x26, x25, [sp, #16]
  40e41c:	ldp	x29, x30, [sp], #80
  40e420:	b	4195a8 <wcrtomb@plt+0x147a8>
  40e424:	ldp	x20, x19, [sp, #64]
  40e428:	ldp	x22, x21, [sp, #48]
  40e42c:	ldp	x24, x23, [sp, #32]
  40e430:	ldp	x26, x25, [sp, #16]
  40e434:	ldp	x29, x30, [sp], #80
  40e438:	ret
  40e43c:	stp	x29, x30, [sp, #-96]!
  40e440:	stp	x28, x27, [sp, #16]
  40e444:	stp	x26, x25, [sp, #32]
  40e448:	stp	x24, x23, [sp, #48]
  40e44c:	stp	x22, x21, [sp, #64]
  40e450:	stp	x20, x19, [sp, #80]
  40e454:	mov	x29, sp
  40e458:	sub	sp, sp, #0x240
  40e45c:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  40e460:	add	x0, x0, #0x3ee
  40e464:	mov	w1, wzr
  40e468:	bl	40e688 <wcrtomb@plt+0x9888>
  40e46c:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e470:	ldr	x19, [x23, #1592]
  40e474:	cbz	x19, 40e654 <wcrtomb@plt+0x9854>
  40e478:	add	x8, sp, #0x10
  40e47c:	add	x9, x8, #0xd8
  40e480:	str	x9, [sp, #8]
  40e484:	add	x9, x8, #0xe8
  40e488:	add	x26, x8, #0x148
  40e48c:	adrp	x27, 467000 <_obstack_memory_used@@Base+0x2b808>
  40e490:	str	x9, [sp]
  40e494:	ldr	w0, [x19, #88]
  40e498:	bl	419ad4 <wcrtomb@plt+0x14cd4>
  40e49c:	ldr	x28, [x19, #96]
  40e4a0:	cbz	x28, 40e630 <wcrtomb@plt+0x9830>
  40e4a4:	mov	x21, xzr
  40e4a8:	add	x20, x19, #0xa0
  40e4ac:	add	x24, x19, #0x38
  40e4b0:	add	x25, x19, #0x48
  40e4b4:	ldr	w0, [x27, #1944]
  40e4b8:	add	x22, x28, #0x8
  40e4bc:	sub	x2, x29, #0x88
  40e4c0:	mov	w3, #0x100                 	// #256
  40e4c4:	mov	x1, x22
  40e4c8:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  40e4cc:	cbnz	w0, 40e524 <wcrtomb@plt+0x9724>
  40e4d0:	ldur	x8, [x29, #-136]
  40e4d4:	ldr	x9, [x19, #8]
  40e4d8:	cmp	x8, x9
  40e4dc:	b.ne	40e524 <wcrtomb@plt+0x9724>  // b.any
  40e4e0:	ldur	x8, [x29, #-128]
  40e4e4:	ldr	x9, [x19, #16]
  40e4e8:	cmp	x8, x9
  40e4ec:	b.ne	40e524 <wcrtomb@plt+0x9724>  // b.any
  40e4f0:	ldr	x8, [x19, #24]
  40e4f4:	cmn	x8, #0x1
  40e4f8:	b.ne	40e524 <wcrtomb@plt+0x9724>  // b.any
  40e4fc:	ldr	x8, [x19, #32]
  40e500:	cmn	w8, #0x1
  40e504:	b.ne	40e524 <wcrtomb@plt+0x9724>  // b.any
  40e508:	ldr	w0, [x27, #1944]
  40e50c:	mov	x1, x22
  40e510:	mov	w2, wzr
  40e514:	bl	404300 <unlinkat@plt>
  40e518:	cbz	w0, 40e530 <wcrtomb@plt+0x9730>
  40e51c:	mov	x0, x22
  40e520:	bl	426734 <wcrtomb@plt+0x21934>
  40e524:	ldr	x28, [x28]
  40e528:	cbnz	x28, 40e4b4 <wcrtomb@plt+0x96b4>
  40e52c:	b	40e618 <wcrtomb@plt+0x9818>
  40e530:	cbz	x21, 40e550 <wcrtomb@plt+0x9750>
  40e534:	ldr	w0, [x27, #1944]
  40e538:	mov	x1, x21
  40e53c:	mov	x3, x22
  40e540:	mov	w4, wzr
  40e544:	mov	w2, w0
  40e548:	bl	404270 <linkat@plt>
  40e54c:	cbz	w0, 40e524 <wcrtomb@plt+0x9724>
  40e550:	ldrb	w8, [x19, #40]
  40e554:	ldr	w2, [x27, #1944]
  40e558:	cbz	w8, 40e580 <wcrtomb@plt+0x9780>
  40e55c:	mov	x0, x20
  40e560:	mov	w1, w2
  40e564:	mov	x2, x22
  40e568:	bl	404c50 <symlinkat@plt>
  40e56c:	cbz	w0, 40e5a8 <wcrtomb@plt+0x97a8>
  40e570:	mov	x0, x20
  40e574:	mov	x1, x22
  40e578:	bl	426638 <wcrtomb@plt+0x21838>
  40e57c:	b	40e524 <wcrtomb@plt+0x9724>
  40e580:	mov	w0, w2
  40e584:	mov	x1, x20
  40e588:	mov	x3, x22
  40e58c:	mov	w4, wzr
  40e590:	bl	404270 <linkat@plt>
  40e594:	cbz	w0, 40e524 <wcrtomb@plt+0x9724>
  40e598:	mov	x0, x20
  40e59c:	mov	x1, x22
  40e5a0:	bl	426148 <wcrtomb@plt+0x21348>
  40e5a4:	b	40e524 <wcrtomb@plt+0x9724>
  40e5a8:	ldr	w8, [x19, #44]
  40e5ac:	add	x1, sp, #0x10
  40e5b0:	mov	w2, #0xffffffff            	// #-1
  40e5b4:	mov	w5, #0x32                  	// #50
  40e5b8:	str	w8, [sp, #120]
  40e5bc:	ldr	x8, [x19, #48]
  40e5c0:	mov	w7, #0x100                 	// #256
  40e5c4:	mov	x0, x22
  40e5c8:	mov	w3, wzr
  40e5cc:	str	x8, [sp, #128]
  40e5d0:	ldr	q0, [x24]
  40e5d4:	ldr	x8, [sp, #8]
  40e5d8:	mov	w4, wzr
  40e5dc:	mov	w6, wzr
  40e5e0:	str	q0, [x8]
  40e5e4:	ldr	q0, [x25]
  40e5e8:	ldr	x8, [sp]
  40e5ec:	str	q0, [x8]
  40e5f0:	ldur	q0, [x19, #120]
  40e5f4:	ldur	q1, [x19, #104]
  40e5f8:	stp	q1, q0, [sp, #64]
  40e5fc:	ldr	x8, [x19, #136]
  40e600:	str	x8, [sp, #96]
  40e604:	ldr	q0, [x19, #144]
  40e608:	str	q0, [x26]
  40e60c:	bl	40eb98 <wcrtomb@plt+0x9d98>
  40e610:	mov	x21, x22
  40e614:	b	40e524 <wcrtomb@plt+0x9724>
  40e618:	ldr	x0, [x19, #96]
  40e61c:	cbz	x0, 40e630 <wcrtomb@plt+0x9830>
  40e620:	ldr	x20, [x0]
  40e624:	bl	4049b0 <free@plt>
  40e628:	mov	x0, x20
  40e62c:	cbnz	x20, 40e620 <wcrtomb@plt+0x9820>
  40e630:	ldp	x1, x0, [x19, #144]
  40e634:	bl	410e6c <wcrtomb@plt+0xc06c>
  40e638:	ldr	x0, [x19, #104]
  40e63c:	bl	4049b0 <free@plt>
  40e640:	ldr	x20, [x19]
  40e644:	mov	x0, x19
  40e648:	bl	4049b0 <free@plt>
  40e64c:	mov	x19, x20
  40e650:	cbnz	x20, 40e494 <wcrtomb@plt+0x9694>
  40e654:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  40e658:	add	x0, x0, #0x3ee
  40e65c:	mov	w1, #0x1                   	// #1
  40e660:	str	xzr, [x23, #1592]
  40e664:	bl	40e688 <wcrtomb@plt+0x9888>
  40e668:	add	sp, sp, #0x240
  40e66c:	ldp	x20, x19, [sp, #80]
  40e670:	ldp	x22, x21, [sp, #64]
  40e674:	ldp	x24, x23, [sp, #48]
  40e678:	ldp	x26, x25, [sp, #32]
  40e67c:	ldp	x28, x27, [sp, #16]
  40e680:	ldp	x29, x30, [sp], #96
  40e684:	ret
  40e688:	stp	x29, x30, [sp, #-96]!
  40e68c:	stp	x28, x27, [sp, #16]
  40e690:	stp	x26, x25, [sp, #32]
  40e694:	stp	x24, x23, [sp, #48]
  40e698:	stp	x22, x21, [sp, #64]
  40e69c:	stp	x20, x19, [sp, #80]
  40e6a0:	mov	x29, sp
  40e6a4:	sub	sp, sp, #0x240
  40e6a8:	mov	w22, w1
  40e6ac:	mov	x19, x0
  40e6b0:	bl	404170 <strlen@plt>
  40e6b4:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e6b8:	ldr	x21, [x25, #1576]
  40e6bc:	cbz	x21, 40e870 <wcrtomb@plt+0x9a70>
  40e6c0:	add	x8, sp, #0x10
  40e6c4:	add	x9, x8, #0xd8
  40e6c8:	mov	x20, x0
  40e6cc:	mov	w27, wzr
  40e6d0:	and	w26, w22, #0x1
  40e6d4:	str	x9, [sp, #8]
  40e6d8:	add	x9, x8, #0xe8
  40e6dc:	add	x22, x8, #0x148
  40e6e0:	str	x9, [sp]
  40e6e4:	ldrb	w8, [x21, #88]
  40e6e8:	and	w9, w27, #0x1
  40e6ec:	orr	w28, w8, w9
  40e6f0:	cmp	w28, #0x0
  40e6f4:	cset	w27, ne  // ne = any
  40e6f8:	cmp	w8, w26
  40e6fc:	b.hi	40e870 <wcrtomb@plt+0x9a70>  // b.pmore
  40e700:	ldr	x2, [x21, #152]
  40e704:	ldp	w23, w24, [x21, #72]
  40e708:	cmp	x2, x20
  40e70c:	b.cs	40e740 <wcrtomb@plt+0x9940>  // b.hs, b.nlast
  40e710:	ldrb	w8, [x19, x2]
  40e714:	cbz	w8, 40e740 <wcrtomb@plt+0x9940>
  40e718:	cmp	w8, #0x2f
  40e71c:	b.eq	40e730 <wcrtomb@plt+0x9930>  // b.none
  40e720:	add	x8, x2, x19
  40e724:	ldurb	w8, [x8, #-1]
  40e728:	cmp	w8, #0x2f
  40e72c:	b.ne	40e740 <wcrtomb@plt+0x9940>  // b.any
  40e730:	ldr	x1, [x21, #160]
  40e734:	mov	x0, x19
  40e738:	bl	4046b0 <bcmp@plt>
  40e73c:	cbz	w0, 40e870 <wcrtomb@plt+0x9a70>
  40e740:	ldr	w0, [x21, #92]
  40e744:	bl	419ad4 <wcrtomb@plt+0x14cd4>
  40e748:	cbz	w28, 40e79c <wcrtomb@plt+0x999c>
  40e74c:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  40e750:	ldr	w0, [x8, #1944]
  40e754:	ldr	x1, [x21, #160]
  40e758:	ldr	w3, [x21, #84]
  40e75c:	sub	x2, x29, #0x88
  40e760:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  40e764:	cbz	w0, 40e774 <wcrtomb@plt+0x9974>
  40e768:	ldr	x0, [x21, #160]
  40e76c:	bl	4266e4 <wcrtomb@plt+0x218e4>
  40e770:	b	40e858 <wcrtomb@plt+0x9a58>
  40e774:	ldur	x8, [x29, #-136]
  40e778:	ldr	x9, [x21, #8]
  40e77c:	cmp	x8, x9
  40e780:	b.ne	40e804 <wcrtomb@plt+0x9a04>  // b.any
  40e784:	ldur	x8, [x29, #-128]
  40e788:	ldr	x9, [x21, #16]
  40e78c:	cmp	x8, x9
  40e790:	b.ne	40e804 <wcrtomb@plt+0x9a04>  // b.any
  40e794:	ldur	w23, [x29, #-120]
  40e798:	mov	w24, #0xffffffff            	// #-1
  40e79c:	ldr	w8, [x21, #24]
  40e7a0:	add	x1, sp, #0x10
  40e7a4:	mov	w2, #0xffffffff            	// #-1
  40e7a8:	mov	w5, #0x35                  	// #53
  40e7ac:	str	w8, [sp, #120]
  40e7b0:	ldur	x8, [x21, #28]
  40e7b4:	mov	w3, w23
  40e7b8:	mov	w4, w24
  40e7bc:	str	x8, [sp, #128]
  40e7c0:	ldur	q0, [x21, #40]
  40e7c4:	ldr	x8, [sp, #8]
  40e7c8:	str	q0, [x8]
  40e7cc:	ldur	q0, [x21, #56]
  40e7d0:	ldr	x8, [sp]
  40e7d4:	str	q0, [x8]
  40e7d8:	ldp	q1, q0, [x21, #96]
  40e7dc:	stp	q1, q0, [sp, #64]
  40e7e0:	ldr	x8, [x21, #128]
  40e7e4:	str	x8, [sp, #96]
  40e7e8:	ldur	q0, [x21, #136]
  40e7ec:	str	q0, [x22]
  40e7f0:	ldr	x0, [x21, #160]
  40e7f4:	ldrb	w6, [x21, #80]
  40e7f8:	ldr	w7, [x21, #84]
  40e7fc:	bl	40eb98 <wcrtomb@plt+0x9d98>
  40e800:	b	40e858 <wcrtomb@plt+0x9a58>
  40e804:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40e808:	ldr	x8, [x8, #496]
  40e80c:	cbz	x8, 40e814 <wcrtomb@plt+0x9a14>
  40e810:	blr	x8
  40e814:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40e818:	mov	w2, #0x5                   	// #5
  40e81c:	mov	x0, xzr
  40e820:	add	x1, x1, #0xb5e
  40e824:	bl	404bd0 <dcgettext@plt>
  40e828:	ldr	x8, [x21, #160]
  40e82c:	mov	x23, x0
  40e830:	mov	x0, x8
  40e834:	bl	4398cc <argp_parse@@Base+0xac10>
  40e838:	mov	x3, x0
  40e83c:	mov	w0, wzr
  40e840:	mov	w1, wzr
  40e844:	mov	x2, x23
  40e848:	bl	4041d0 <error@plt>
  40e84c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e850:	mov	w9, #0x2                   	// #2
  40e854:	str	w9, [x8, #2944]
  40e858:	ldr	x8, [x21]
  40e85c:	mov	x0, x21
  40e860:	str	x8, [x25, #1576]
  40e864:	bl	40df3c <wcrtomb@plt+0x913c>
  40e868:	ldr	x21, [x25, #1576]
  40e86c:	cbnz	x21, 40e6e4 <wcrtomb@plt+0x98e4>
  40e870:	add	sp, sp, #0x240
  40e874:	ldp	x20, x19, [sp, #80]
  40e878:	ldp	x22, x21, [sp, #64]
  40e87c:	ldp	x24, x23, [sp, #48]
  40e880:	ldp	x26, x25, [sp, #32]
  40e884:	ldp	x28, x27, [sp, #16]
  40e888:	ldp	x29, x30, [sp], #96
  40e88c:	ret
  40e890:	stp	x29, x30, [sp, #-64]!
  40e894:	str	x23, [sp, #16]
  40e898:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x2b808>
  40e89c:	ldr	w2, [x23, #1944]
  40e8a0:	stp	x20, x19, [sp, #48]
  40e8a4:	mov	x19, x1
  40e8a8:	mov	x20, x0
  40e8ac:	mov	w0, w2
  40e8b0:	mov	x1, x20
  40e8b4:	mov	x3, x19
  40e8b8:	stp	x22, x21, [sp, #32]
  40e8bc:	mov	x29, sp
  40e8c0:	bl	404a00 <renameat@plt>
  40e8c4:	cbz	w0, 40e8f4 <wcrtomb@plt+0x9af4>
  40e8c8:	bl	404ce0 <__errno_location@plt>
  40e8cc:	ldr	w21, [x0]
  40e8d0:	cmp	w21, #0x2
  40e8d4:	b.ne	40e950 <wcrtomb@plt+0x9b50>  // b.any
  40e8d8:	mov	x22, x0
  40e8dc:	add	x1, x29, #0x1c
  40e8e0:	mov	x0, x19
  40e8e4:	bl	40e9f8 <wcrtomb@plt+0x9bf8>
  40e8e8:	cbz	w0, 40e934 <wcrtomb@plt+0x9b34>
  40e8ec:	mov	w21, #0x2                   	// #2
  40e8f0:	b	40e950 <wcrtomb@plt+0x9b50>
  40e8f4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e8f8:	ldr	x22, [x8, #1576]
  40e8fc:	cbz	x22, 40e9e0 <wcrtomb@plt+0x9be0>
  40e900:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e904:	ldr	w23, [x8, #3584]
  40e908:	ldr	w8, [x22, #92]
  40e90c:	cmp	w23, w8
  40e910:	b.ne	40e928 <wcrtomb@plt+0x9b28>  // b.any
  40e914:	ldr	x21, [x22, #160]
  40e918:	mov	x1, x20
  40e91c:	mov	x0, x21
  40e920:	bl	404900 <strcmp@plt>
  40e924:	cbz	w0, 40e9c0 <wcrtomb@plt+0x9bc0>
  40e928:	ldr	x22, [x22]
  40e92c:	cbnz	x22, 40e908 <wcrtomb@plt+0x9b08>
  40e930:	b	40e9e0 <wcrtomb@plt+0x9be0>
  40e934:	ldr	w0, [x23, #1944]
  40e938:	mov	x1, x20
  40e93c:	mov	x3, x19
  40e940:	mov	w2, w0
  40e944:	bl	404a00 <renameat@plt>
  40e948:	cbz	w0, 40e9e0 <wcrtomb@plt+0x9be0>
  40e94c:	ldr	w21, [x22]
  40e950:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40e954:	ldr	x8, [x8, #496]
  40e958:	cbz	x8, 40e960 <wcrtomb@plt+0x9b60>
  40e95c:	blr	x8
  40e960:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40e964:	add	x1, x1, #0xb47
  40e968:	mov	w2, #0x5                   	// #5
  40e96c:	mov	x0, xzr
  40e970:	bl	404bd0 <dcgettext@plt>
  40e974:	mov	x22, x0
  40e978:	mov	w0, wzr
  40e97c:	mov	x1, x20
  40e980:	bl	439ab0 <argp_parse@@Base+0xadf4>
  40e984:	mov	x20, x0
  40e988:	mov	w0, #0x1                   	// #1
  40e98c:	mov	x1, x19
  40e990:	bl	439ab0 <argp_parse@@Base+0xadf4>
  40e994:	mov	x4, x0
  40e998:	mov	w0, wzr
  40e99c:	mov	w1, w21
  40e9a0:	mov	x2, x22
  40e9a4:	mov	x3, x20
  40e9a8:	bl	4041d0 <error@plt>
  40e9ac:	mov	w0, wzr
  40e9b0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40e9b4:	mov	w9, #0x2                   	// #2
  40e9b8:	str	w9, [x8, #2944]
  40e9bc:	b	40e9e4 <wcrtomb@plt+0x9be4>
  40e9c0:	mov	x0, x21
  40e9c4:	bl	4049b0 <free@plt>
  40e9c8:	mov	x0, x19
  40e9cc:	bl	43a998 <argp_parse@@Base+0xbcdc>
  40e9d0:	str	x0, [x22, #160]
  40e9d4:	mov	x0, x19
  40e9d8:	bl	404170 <strlen@plt>
  40e9dc:	str	x0, [x22, #152]
  40e9e0:	mov	w0, #0x1                   	// #1
  40e9e4:	ldp	x20, x19, [sp, #48]
  40e9e8:	ldp	x22, x21, [sp, #32]
  40e9ec:	ldr	x23, [sp, #16]
  40e9f0:	ldp	x29, x30, [sp], #64
  40e9f4:	ret
  40e9f8:	sub	sp, sp, #0xf0
  40e9fc:	stp	x28, x27, [sp, #160]
  40ea00:	stp	x26, x25, [sp, #176]
  40ea04:	stp	x20, x19, [sp, #224]
  40ea08:	mov	x19, x0
  40ea0c:	mov	x20, xzr
  40ea10:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40ea14:	mov	w26, #0xc0                  	// #192
  40ea18:	adrp	x27, 467000 <_obstack_memory_used@@Base+0x2b808>
  40ea1c:	mov	w28, #0x2f                  	// #47
  40ea20:	stp	x29, x30, [sp, #144]
  40ea24:	stp	x24, x23, [sp, #192]
  40ea28:	stp	x22, x21, [sp, #208]
  40ea2c:	add	x29, sp, #0x90
  40ea30:	str	x1, [sp, #8]
  40ea34:	add	x21, x19, x20
  40ea38:	ldrb	w8, [x21]
  40ea3c:	cmp	w8, #0x2f
  40ea40:	b.eq	40ea4c <wcrtomb@plt+0x9c4c>  // b.none
  40ea44:	cbnz	w8, 40eb4c <wcrtomb@plt+0x9d4c>
  40ea48:	b	40eb54 <wcrtomb@plt+0x9d54>
  40ea4c:	cbz	x20, 40eb4c <wcrtomb@plt+0x9d4c>
  40ea50:	add	x8, x19, x20
  40ea54:	ldurb	w8, [x8, #-1]
  40ea58:	cmp	w8, #0x2f
  40ea5c:	b.eq	40eb4c <wcrtomb@plt+0x9d4c>  // b.none
  40ea60:	cmp	w8, #0x2e
  40ea64:	b.ne	40eaa0 <wcrtomb@plt+0x9ca0>  // b.any
  40ea68:	cmp	x20, #0x1
  40ea6c:	b.eq	40eb4c <wcrtomb@plt+0x9d4c>  // b.none
  40ea70:	add	x8, x19, x20
  40ea74:	ldurb	w8, [x8, #-2]
  40ea78:	cmp	w8, #0x2f
  40ea7c:	b.eq	40eb4c <wcrtomb@plt+0x9d4c>  // b.none
  40ea80:	cmp	w8, #0x2e
  40ea84:	b.ne	40eaa0 <wcrtomb@plt+0x9ca0>  // b.any
  40ea88:	cmp	x20, #0x2
  40ea8c:	b.eq	40eb4c <wcrtomb@plt+0x9d4c>  // b.none
  40ea90:	add	x8, x19, x20
  40ea94:	ldurb	w8, [x8, #-3]
  40ea98:	cmp	w8, #0x2f
  40ea9c:	b.eq	40eb4c <wcrtomb@plt+0x9d4c>  // b.none
  40eaa0:	strb	wzr, [x21]
  40eaa4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40eaa8:	ldr	w8, [x8, #1564]
  40eaac:	ldrb	w9, [x25, #1560]
  40eab0:	ldr	w0, [x27, #1944]
  40eab4:	mov	x1, x19
  40eab8:	mvn	w8, w8
  40eabc:	cmp	w9, #0x0
  40eac0:	and	w22, w8, #0x1ff
  40eac4:	csel	w8, w26, wzr, eq  // eq = none
  40eac8:	orr	w23, w8, w22
  40eacc:	mov	w2, w23
  40ead0:	bl	404410 <mkdirat@plt>
  40ead4:	cbz	w0, 40eb08 <wcrtomb@plt+0x9d08>
  40ead8:	bl	404ce0 <__errno_location@plt>
  40eadc:	ldr	w24, [x0]
  40eae0:	cmp	w24, #0x11
  40eae4:	b.eq	40eb48 <wcrtomb@plt+0x9d48>  // b.none
  40eae8:	mov	x22, x0
  40eaec:	ldr	w0, [x27, #1944]
  40eaf0:	add	x2, sp, #0x10
  40eaf4:	mov	x1, x19
  40eaf8:	mov	w3, wzr
  40eafc:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  40eb00:	cbz	w0, 40eb48 <wcrtomb@plt+0x9d48>
  40eb04:	b	40eb7c <wcrtomb@plt+0x9d7c>
  40eb08:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40eb0c:	ldr	w8, [x8, #1568]
  40eb10:	mov	w3, #0x1ff                 	// #511
  40eb14:	mov	w5, #0x100                 	// #256
  40eb18:	mov	x0, x19
  40eb1c:	bic	w2, w23, w8
  40eb20:	mov	x1, xzr
  40eb24:	mov	w4, w22
  40eb28:	bl	40ffc4 <wcrtomb@plt+0xb1c4>
  40eb2c:	mov	x0, x19
  40eb30:	mov	w1, w20
  40eb34:	mov	w2, w22
  40eb38:	bl	417d44 <wcrtomb@plt+0x12f44>
  40eb3c:	ldr	x8, [sp, #8]
  40eb40:	mov	w9, #0x1                   	// #1
  40eb44:	strb	w9, [x8]
  40eb48:	strb	w28, [x21]
  40eb4c:	add	x20, x20, #0x1
  40eb50:	b	40ea34 <wcrtomb@plt+0x9c34>
  40eb54:	mov	w23, wzr
  40eb58:	mov	w0, w23
  40eb5c:	ldp	x20, x19, [sp, #224]
  40eb60:	ldp	x22, x21, [sp, #208]
  40eb64:	ldp	x24, x23, [sp, #192]
  40eb68:	ldp	x26, x25, [sp, #176]
  40eb6c:	ldp	x28, x27, [sp, #160]
  40eb70:	ldp	x29, x30, [sp, #144]
  40eb74:	add	sp, sp, #0xf0
  40eb78:	ret
  40eb7c:	mov	w23, w0
  40eb80:	mov	x0, x19
  40eb84:	str	w24, [x22]
  40eb88:	bl	4261dc <wcrtomb@plt+0x213dc>
  40eb8c:	mov	w8, #0x2f                  	// #47
  40eb90:	strb	w8, [x19, x20]
  40eb94:	b	40eb58 <wcrtomb@plt+0x9d58>
  40eb98:	sub	sp, sp, #0xe0
  40eb9c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40eba0:	ldrb	w8, [x8, #40]
  40eba4:	stp	x26, x25, [sp, #160]
  40eba8:	stp	x24, x23, [sp, #176]
  40ebac:	stp	x22, x21, [sp, #192]
  40ebb0:	stp	x20, x19, [sp, #208]
  40ebb4:	mov	w23, w7
  40ebb8:	mov	w26, w6
  40ebbc:	mov	w19, w5
  40ebc0:	mov	w25, w4
  40ebc4:	mov	w24, w3
  40ebc8:	mov	w22, w2
  40ebcc:	mov	x20, x1
  40ebd0:	mov	x21, x0
  40ebd4:	stp	x29, x30, [sp, #128]
  40ebd8:	stp	x28, x27, [sp, #144]
  40ebdc:	add	x29, sp, #0x80
  40ebe0:	cbnz	w8, 40ec80 <wcrtomb@plt+0x9e80>
  40ebe4:	tbnz	w26, #0, 40ec80 <wcrtomb@plt+0x9e80>
  40ebe8:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40ebec:	ldrb	w8, [x27, #3617]
  40ebf0:	cbz	w8, 40ec00 <wcrtomb@plt+0x9e00>
  40ebf4:	ldur	q0, [x20, #216]
  40ebf8:	str	q0, [sp]
  40ebfc:	b	40ec08 <wcrtomb@plt+0x9e08>
  40ec00:	mov	w8, #0x3ffffffe            	// #1073741822
  40ec04:	str	x8, [sp, #8]
  40ec08:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  40ec0c:	ldur	q0, [x20, #232]
  40ec10:	ldr	w1, [x8, #1944]
  40ec14:	mov	x3, sp
  40ec18:	mov	w0, w22
  40ec1c:	mov	x2, x21
  40ec20:	mov	w4, w23
  40ec24:	str	q0, [sp, #16]
  40ec28:	bl	431194 <argp_parse@@Base+0x24d8>
  40ec2c:	cbz	w0, 40ec60 <wcrtomb@plt+0x9e60>
  40ec30:	and	w8, w19, #0xff
  40ec34:	cmp	w8, #0x32
  40ec38:	b.ne	40ec54 <wcrtomb@plt+0x9e54>  // b.any
  40ec3c:	bl	404ce0 <__errno_location@plt>
  40ec40:	ldr	w8, [x0]
  40ec44:	cmp	w8, #0x26
  40ec48:	b.eq	40ec80 <wcrtomb@plt+0x9e80>  // b.none
  40ec4c:	cmp	w8, #0x5f
  40ec50:	b.eq	40ec80 <wcrtomb@plt+0x9e80>  // b.none
  40ec54:	mov	x0, x21
  40ec58:	bl	426748 <wcrtomb@plt+0x21948>
  40ec5c:	b	40ec80 <wcrtomb@plt+0x9e80>
  40ec60:	ldrb	w8, [x27, #3617]
  40ec64:	cbz	w8, 40ec74 <wcrtomb@plt+0x9e74>
  40ec68:	ldp	x1, x2, [sp]
  40ec6c:	mov	x0, x21
  40ec70:	bl	40eedc <wcrtomb@plt+0xa0dc>
  40ec74:	ldp	x1, x2, [sp, #16]
  40ec78:	mov	x0, x21
  40ec7c:	bl	40eedc <wcrtomb@plt+0xa0dc>
  40ec80:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40ec84:	ldr	w8, [x8, #468]
  40ec88:	cmp	w8, #0x1
  40ec8c:	b.lt	40ed3c <wcrtomb@plt+0x9f3c>  // b.tstop
  40ec90:	tbnz	w26, #0, 40ed3c <wcrtomb@plt+0x9f3c>
  40ec94:	ldp	w27, w28, [x20, #112]
  40ec98:	tbnz	w22, #31, 40ecc8 <wcrtomb@plt+0x9ec8>
  40ec9c:	mov	w0, w22
  40eca0:	mov	w1, w27
  40eca4:	mov	w2, w28
  40eca8:	bl	404d70 <fchown@plt>
  40ecac:	cbz	w0, 40ed20 <wcrtomb@plt+0x9f20>
  40ecb0:	bl	404ce0 <__errno_location@plt>
  40ecb4:	ldr	w8, [x0]
  40ecb8:	cmp	w8, #0x5f
  40ecbc:	b.eq	40ecc8 <wcrtomb@plt+0x9ec8>  // b.none
  40ecc0:	cmp	w8, #0x26
  40ecc4:	b.ne	40ece8 <wcrtomb@plt+0x9ee8>  // b.any
  40ecc8:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  40eccc:	ldr	w0, [x8, #1944]
  40ecd0:	mov	x1, x21
  40ecd4:	mov	w2, w27
  40ecd8:	mov	w3, w28
  40ecdc:	mov	w4, w23
  40ece0:	bl	404a20 <fchownat@plt>
  40ece4:	cbz	w0, 40ed20 <wcrtomb@plt+0x9f20>
  40ece8:	and	w8, w19, #0xff
  40ecec:	cmp	w8, #0x32
  40ecf0:	b.ne	40ed0c <wcrtomb@plt+0x9f0c>  // b.any
  40ecf4:	bl	404ce0 <__errno_location@plt>
  40ecf8:	ldr	w8, [x0]
  40ecfc:	cmp	w8, #0x26
  40ed00:	b.eq	40ed3c <wcrtomb@plt+0x9f3c>  // b.none
  40ed04:	cmp	w8, #0x5f
  40ed08:	b.eq	40ed3c <wcrtomb@plt+0x9f3c>  // b.none
  40ed0c:	mov	x0, x21
  40ed10:	mov	w1, w27
  40ed14:	mov	w2, w28
  40ed18:	bl	426074 <wcrtomb@plt+0x21274>
  40ed1c:	b	40ed3c <wcrtomb@plt+0x9f3c>
  40ed20:	orn	w8, w24, w25
  40ed24:	mov	w9, #0x49                  	// #73
  40ed28:	tst	w8, w9
  40ed2c:	b.eq	40ed3c <wcrtomb@plt+0x9f3c>  // b.none
  40ed30:	mvn	w8, w24
  40ed34:	orr	w8, w8, #0xfffff3ff
  40ed38:	and	w25, w8, w25
  40ed3c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40ed40:	ldr	w9, [x9, #100]
  40ed44:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40ed48:	ldr	w8, [x20, #104]
  40ed4c:	ldr	w10, [x10, #1568]
  40ed50:	cmp	w9, #0x0
  40ed54:	eor	w11, w26, #0x1
  40ed58:	cset	w9, gt
  40ed5c:	tst	w9, w11
  40ed60:	mov	w9, #0x1ff                 	// #511
  40ed64:	bic	w26, w8, w10
  40ed68:	mov	w8, #0xfff                 	// #4095
  40ed6c:	csel	w27, w8, w9, ne  // ne = any
  40ed70:	eor	w8, w26, w24
  40ed74:	orn	w8, w8, w25
  40ed78:	tst	w27, w8
  40ed7c:	b.eq	40ee88 <wcrtomb@plt+0xa088>  // b.none
  40ed80:	mvn	w8, w25
  40ed84:	bic	w8, w8, w27
  40ed88:	tst	w8, #0xe00
  40ed8c:	b.eq	40edd0 <wcrtomb@plt+0x9fd0>  // b.none
  40ed90:	tbnz	w22, #31, 40edb0 <wcrtomb@plt+0x9fb0>
  40ed94:	mov	x1, sp
  40ed98:	mov	w0, w22
  40ed9c:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  40eda0:	cbz	w0, 40edcc <wcrtomb@plt+0x9fcc>
  40eda4:	mov	x0, x21
  40eda8:	bl	4266e4 <wcrtomb@plt+0x218e4>
  40edac:	b	40ee88 <wcrtomb@plt+0xa088>
  40edb0:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  40edb4:	ldr	w0, [x8, #1944]
  40edb8:	mov	x2, sp
  40edbc:	mov	x1, x21
  40edc0:	mov	w3, w23
  40edc4:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  40edc8:	cbnz	w0, 40eda4 <wcrtomb@plt+0x9fa4>
  40edcc:	ldr	w24, [sp, #16]
  40edd0:	mvn	w8, w27
  40edd4:	and	w9, w24, #0xfff
  40edd8:	and	w8, w9, w8
  40eddc:	and	w10, w27, w26
  40ede0:	orr	w24, w8, w10
  40ede4:	cmp	w9, w24
  40ede8:	b.eq	40ee88 <wcrtomb@plt+0xa088>  // b.none
  40edec:	mov	w0, w22
  40edf0:	mov	x1, x21
  40edf4:	mov	w2, w24
  40edf8:	mov	w3, w23
  40edfc:	bl	40f068 <wcrtomb@plt+0xa268>
  40ee00:	cbz	w0, 40ee10 <wcrtomb@plt+0xa010>
  40ee04:	bl	404ce0 <__errno_location@plt>
  40ee08:	ldr	w25, [x0]
  40ee0c:	b	40ee14 <wcrtomb@plt+0xa014>
  40ee10:	mov	w25, wzr
  40ee14:	and	w8, w19, #0xff
  40ee18:	cmp	w8, #0x32
  40ee1c:	b.eq	40ee54 <wcrtomb@plt+0xa054>  // b.none
  40ee20:	cbz	w23, 40ee54 <wcrtomb@plt+0xa054>
  40ee24:	cmp	w25, #0x5f
  40ee28:	b.eq	40ee34 <wcrtomb@plt+0xa034>  // b.none
  40ee2c:	cmp	w25, #0x26
  40ee30:	b.ne	40ee54 <wcrtomb@plt+0xa054>  // b.any
  40ee34:	mov	w0, w22
  40ee38:	mov	x1, x21
  40ee3c:	mov	w2, w24
  40ee40:	mov	w3, wzr
  40ee44:	bl	40f068 <wcrtomb@plt+0xa268>
  40ee48:	cbz	w0, 40ee88 <wcrtomb@plt+0xa088>
  40ee4c:	bl	404ce0 <__errno_location@plt>
  40ee50:	ldr	w25, [x0]
  40ee54:	cbz	w25, 40ee88 <wcrtomb@plt+0xa088>
  40ee58:	and	w8, w19, #0xff
  40ee5c:	cmp	w8, #0x32
  40ee60:	b.ne	40ee74 <wcrtomb@plt+0xa074>  // b.any
  40ee64:	cmp	w25, #0x26
  40ee68:	b.eq	40ee88 <wcrtomb@plt+0xa088>  // b.none
  40ee6c:	cmp	w25, #0x5f
  40ee70:	b.eq	40ee88 <wcrtomb@plt+0xa088>  // b.none
  40ee74:	bl	404ce0 <__errno_location@plt>
  40ee78:	str	w25, [x0]
  40ee7c:	mov	x0, x21
  40ee80:	mov	w1, w24
  40ee84:	bl	425fdc <wcrtomb@plt+0x211dc>
  40ee88:	mov	w3, #0x1                   	// #1
  40ee8c:	mov	x0, x20
  40ee90:	mov	x1, x21
  40ee94:	mov	w2, w19
  40ee98:	bl	425500 <wcrtomb@plt+0x20700>
  40ee9c:	mov	x0, x20
  40eea0:	mov	x1, x21
  40eea4:	mov	w2, w19
  40eea8:	bl	4249e0 <wcrtomb@plt+0x1fbe0>
  40eeac:	mov	x0, x20
  40eeb0:	mov	x1, x21
  40eeb4:	mov	w2, w19
  40eeb8:	bl	425490 <wcrtomb@plt+0x20690>
  40eebc:	ldp	x20, x19, [sp, #208]
  40eec0:	ldp	x22, x21, [sp, #192]
  40eec4:	ldp	x24, x23, [sp, #176]
  40eec8:	ldp	x26, x25, [sp, #160]
  40eecc:	ldp	x28, x27, [sp, #144]
  40eed0:	ldp	x29, x30, [sp, #128]
  40eed4:	add	sp, sp, #0xe0
  40eed8:	ret
  40eedc:	sub	sp, sp, #0x70
  40eee0:	stp	x22, x21, [sp, #80]
  40eee4:	stp	x20, x19, [sp, #96]
  40eee8:	mov	x20, x2
  40eeec:	mov	x21, x1
  40eef0:	mov	x19, x0
  40eef4:	stp	x29, x30, [sp, #48]
  40eef8:	stp	x24, x23, [sp, #64]
  40eefc:	add	x29, sp, #0x30
  40ef00:	tbnz	x1, #63, 40efc0 <wcrtomb@plt+0xa1c0>
  40ef04:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40ef08:	add	x8, x8, #0x1a8
  40ef0c:	ldr	x9, [x8]
  40ef10:	cmp	x9, x21
  40ef14:	b.ge	40f030 <wcrtomb@plt+0xa230>  // b.tcont
  40ef18:	sub	x0, x29, #0x10
  40ef1c:	bl	4327b8 <argp_parse@@Base+0x3afc>
  40ef20:	ldp	x8, x9, [x29, #-16]
  40ef24:	subs	x8, x21, x8
  40ef28:	b.le	40f044 <wcrtomb@plt+0xa244>
  40ef2c:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40ef30:	ldrb	w10, [x10, #153]
  40ef34:	mov	w11, #0xca00                	// #51712
  40ef38:	sub	x9, x20, x9
  40ef3c:	movk	w11, #0x3b9a, lsl #16
  40ef40:	add	x11, x9, x11
  40ef44:	cmp	x9, #0x0
  40ef48:	csel	x22, x11, x9, lt  // lt = tstop
  40ef4c:	tbz	w10, #7, 40f050 <wcrtomb@plt+0xa250>
  40ef50:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  40ef54:	ldr	x10, [x10, #496]
  40ef58:	add	x23, x8, x9, asr #63
  40ef5c:	cbz	x10, 40ef64 <wcrtomb@plt+0xa164>
  40ef60:	blr	x10
  40ef64:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ef68:	add	x1, x1, #0xbbb
  40ef6c:	mov	w2, #0x5                   	// #5
  40ef70:	mov	x0, xzr
  40ef74:	bl	404bd0 <dcgettext@plt>
  40ef78:	mov	x24, x0
  40ef7c:	mov	w2, #0x1                   	// #1
  40ef80:	mov	x0, x21
  40ef84:	mov	x1, x20
  40ef88:	bl	417574 <wcrtomb@plt+0x12774>
  40ef8c:	mov	x20, x0
  40ef90:	mov	x2, sp
  40ef94:	mov	x0, x23
  40ef98:	mov	x1, x22
  40ef9c:	bl	418e2c <wcrtomb@plt+0x1402c>
  40efa0:	mov	x5, x0
  40efa4:	mov	w0, wzr
  40efa8:	mov	w1, wzr
  40efac:	mov	x2, x24
  40efb0:	mov	x3, x19
  40efb4:	mov	x4, x20
  40efb8:	bl	4041d0 <error@plt>
  40efbc:	b	40f050 <wcrtomb@plt+0xa250>
  40efc0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40efc4:	ldrb	w8, [x8, #153]
  40efc8:	tbz	w8, #7, 40f050 <wcrtomb@plt+0xa250>
  40efcc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40efd0:	ldr	x8, [x8, #496]
  40efd4:	cbz	x8, 40efdc <wcrtomb@plt+0xa1dc>
  40efd8:	blr	x8
  40efdc:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40efe0:	add	x1, x1, #0xb99
  40efe4:	mov	w2, #0x5                   	// #5
  40efe8:	mov	x0, xzr
  40efec:	bl	404bd0 <dcgettext@plt>
  40eff0:	mov	x22, x0
  40eff4:	mov	w2, #0x1                   	// #1
  40eff8:	mov	x0, x21
  40effc:	mov	x1, x20
  40f000:	bl	417574 <wcrtomb@plt+0x12774>
  40f004:	mov	x2, x22
  40f008:	mov	x3, x19
  40f00c:	ldp	x20, x19, [sp, #96]
  40f010:	ldp	x22, x21, [sp, #80]
  40f014:	ldp	x24, x23, [sp, #64]
  40f018:	ldp	x29, x30, [sp, #48]
  40f01c:	mov	x4, x0
  40f020:	mov	w0, wzr
  40f024:	mov	w1, wzr
  40f028:	add	sp, sp, #0x70
  40f02c:	b	4041d0 <error@plt>
  40f030:	b.gt	40f050 <wcrtomb@plt+0xa250>
  40f034:	ldr	x8, [x8, #8]
  40f038:	cmp	w8, w20
  40f03c:	b.pl	40f050 <wcrtomb@plt+0xa250>  // b.nfrst
  40f040:	b	40ef18 <wcrtomb@plt+0xa118>
  40f044:	b.lt	40f050 <wcrtomb@plt+0xa250>  // b.tstop
  40f048:	cmp	w9, w20
  40f04c:	b.mi	40ef2c <wcrtomb@plt+0xa12c>  // b.first
  40f050:	ldp	x20, x19, [sp, #96]
  40f054:	ldp	x22, x21, [sp, #80]
  40f058:	ldp	x24, x23, [sp, #64]
  40f05c:	ldp	x29, x30, [sp, #48]
  40f060:	add	sp, sp, #0x70
  40f064:	ret
  40f068:	stp	x29, x30, [sp, #-48]!
  40f06c:	stp	x22, x21, [sp, #16]
  40f070:	stp	x20, x19, [sp, #32]
  40f074:	mov	w19, w3
  40f078:	mov	w20, w2
  40f07c:	mov	x21, x1
  40f080:	mov	x29, sp
  40f084:	tbnz	w0, #31, 40f0b0 <wcrtomb@plt+0xa2b0>
  40f088:	mov	w1, w20
  40f08c:	bl	404640 <fchmod@plt>
  40f090:	mov	w22, w0
  40f094:	cbz	w0, 40f0d4 <wcrtomb@plt+0xa2d4>
  40f098:	bl	404ce0 <__errno_location@plt>
  40f09c:	ldr	w8, [x0]
  40f0a0:	cmp	w8, #0x5f
  40f0a4:	b.eq	40f0b0 <wcrtomb@plt+0xa2b0>  // b.none
  40f0a8:	cmp	w8, #0x26
  40f0ac:	b.ne	40f0d4 <wcrtomb@plt+0xa2d4>  // b.any
  40f0b0:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  40f0b4:	ldr	w0, [x8, #1944]
  40f0b8:	mov	x1, x21
  40f0bc:	mov	w2, w20
  40f0c0:	mov	w3, w19
  40f0c4:	ldp	x20, x19, [sp, #32]
  40f0c8:	ldp	x22, x21, [sp, #16]
  40f0cc:	ldp	x29, x30, [sp], #48
  40f0d0:	b	404d40 <fchmodat@plt>
  40f0d4:	mov	w0, w22
  40f0d8:	ldp	x20, x19, [sp, #32]
  40f0dc:	ldp	x22, x21, [sp, #16]
  40f0e0:	ldp	x29, x30, [sp], #48
  40f0e4:	ret
  40f0e8:	sub	sp, sp, #0xf0
  40f0ec:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40f0f0:	ldr	w9, [x9, #468]
  40f0f4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f0f8:	ldr	w8, [x8, #3784]
  40f0fc:	stp	x28, x27, [sp, #160]
  40f100:	mov	w10, #0x1ff                 	// #511
  40f104:	mov	w11, #0x1c0                 	// #448
  40f108:	adrp	x28, 46b000 <argp_program_version_hook@@Base+0x458>
  40f10c:	cmp	w9, #0x0
  40f110:	ldrb	w12, [x28, #113]
  40f114:	csel	w9, w11, w10, gt
  40f118:	stp	x22, x21, [sp, #208]
  40f11c:	and	w22, w8, w9
  40f120:	and	w9, w22, #0x3f
  40f124:	stp	x20, x19, [sp, #224]
  40f128:	mov	w20, w1
  40f12c:	mov	x19, x0
  40f130:	csel	w9, w9, wzr, gt
  40f134:	stp	x29, x30, [sp, #144]
  40f138:	stp	x26, x25, [sp, #176]
  40f13c:	stp	x24, x23, [sp, #192]
  40f140:	add	x29, sp, #0x90
  40f144:	strb	wzr, [sp, #12]
  40f148:	cbz	w12, 40f1a4 <wcrtomb@plt+0xa3a4>
  40f14c:	mov	w23, wzr
  40f150:	mov	w22, wzr
  40f154:	mov	w21, #0x1                   	// #1
  40f158:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f15c:	add	x24, x24, #0xe60
  40f160:	mov	x0, x24
  40f164:	bl	404fb8 <wcrtomb@plt+0x1b8>
  40f168:	ldrb	w8, [x24, #272]
  40f16c:	cbz	w8, 40f1d8 <wcrtomb@plt+0xa3d8>
  40f170:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f174:	add	x1, x1, #0xe60
  40f178:	add	x2, sp, #0x10
  40f17c:	mov	w0, w21
  40f180:	bl	41c7d8 <wcrtomb@plt+0x179d8>
  40f184:	ldr	x24, [sp, #16]
  40f188:	mov	x0, x24
  40f18c:	bl	417e44 <wcrtomb@plt+0x13044>
  40f190:	bl	404fcc <wcrtomb@plt+0x1cc>
  40f194:	ldrb	w8, [x28, #113]
  40f198:	cbz	w8, 40f250 <wcrtomb@plt+0xa450>
  40f19c:	mov	w20, wzr
  40f1a0:	b	40f524 <wcrtomb@plt+0xa724>
  40f1a4:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  40f1a8:	ldr	x10, [x10, #104]
  40f1ac:	cbz	x10, 40f2bc <wcrtomb@plt+0xa4bc>
  40f1b0:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f1b4:	add	x2, x2, #0xe60
  40f1b8:	mov	w1, #0x66                  	// #102
  40f1bc:	mov	x0, x19
  40f1c0:	bl	41ef54 <wcrtomb@plt+0x1a154>
  40f1c4:	tbnz	w0, #31, 40f338 <wcrtomb@plt+0xa538>
  40f1c8:	mov	w21, w0
  40f1cc:	mov	w23, wzr
  40f1d0:	mov	w22, wzr
  40f1d4:	b	40f158 <wcrtomb@plt+0xa358>
  40f1d8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f1dc:	ldr	x24, [x8, #3816]
  40f1e0:	cmp	x24, #0x1
  40f1e4:	str	x24, [sp, #16]
  40f1e8:	b.lt	40f188 <wcrtomb@plt+0xa388>  // b.tstop
  40f1ec:	mov	x0, x24
  40f1f0:	bl	405058 <wcrtomb@plt+0x258>
  40f1f4:	bl	405574 <wcrtomb@plt+0x774>
  40f1f8:	cbz	x0, 40f340 <wcrtomb@plt+0xa540>
  40f1fc:	mov	x26, x0
  40f200:	bl	4058c0 <wcrtomb@plt+0xac0>
  40f204:	cmp	x0, x24
  40f208:	csel	x25, x24, x0, hi  // hi = pmore
  40f20c:	bl	404ce0 <__errno_location@plt>
  40f210:	str	wzr, [x0]
  40f214:	mov	w0, w21
  40f218:	mov	x1, x26
  40f21c:	mov	x2, x25
  40f220:	bl	419774 <wcrtomb@plt+0x14974>
  40f224:	add	x8, x26, x25
  40f228:	mov	x27, x0
  40f22c:	sub	x24, x24, x25
  40f230:	sub	x0, x8, #0x1
  40f234:	str	x24, [sp, #16]
  40f238:	bl	40587c <wcrtomb@plt+0xa7c>
  40f23c:	cmp	x27, x25
  40f240:	b.ne	40f384 <wcrtomb@plt+0xa584>  // b.any
  40f244:	cmp	x24, #0x1
  40f248:	b.ge	40f1ec <wcrtomb@plt+0xa3ec>  // b.tcont
  40f24c:	b	40f188 <wcrtomb@plt+0xa388>
  40f250:	adrp	x24, 46b000 <argp_program_version_hook@@Base+0x458>
  40f254:	ldr	x8, [x24, #104]
  40f258:	cbnz	x8, 40f294 <wcrtomb@plt+0xa494>
  40f25c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40f260:	ldr	w8, [x8, #240]
  40f264:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f268:	add	x1, x1, #0xe60
  40f26c:	mov	x0, x19
  40f270:	cmp	w8, #0x2
  40f274:	cset	w8, ne  // ne = any
  40f278:	lsl	w7, w8, #8
  40f27c:	mov	w2, w21
  40f280:	mov	w3, w23
  40f284:	mov	w4, w22
  40f288:	mov	w5, w20
  40f28c:	mov	w6, wzr
  40f290:	bl	40eb98 <wcrtomb@plt+0x9d98>
  40f294:	mov	w0, w21
  40f298:	bl	4047a0 <close@plt>
  40f29c:	mov	w20, w0
  40f2a0:	tbz	w0, #31, 40f2ac <wcrtomb@plt+0xa4ac>
  40f2a4:	mov	x0, x19
  40f2a8:	bl	426108 <wcrtomb@plt+0x21308>
  40f2ac:	ldr	x8, [x24, #104]
  40f2b0:	cbz	x8, 40f524 <wcrtomb@plt+0xa724>
  40f2b4:	bl	41f254 <wcrtomb@plt+0x1a454>
  40f2b8:	b	40f524 <wcrtomb@plt+0xa724>
  40f2bc:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  40f2c0:	ldr	w10, [x10, #144]
  40f2c4:	adrp	x26, 467000 <_obstack_memory_used@@Base+0x2b808>
  40f2c8:	strb	wzr, [sp, #16]
  40f2cc:	cmp	w10, #0x1
  40f2d0:	b.lt	40f3a4 <wcrtomb@plt+0xa5a4>  // b.tstop
  40f2d4:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f2d8:	ldr	x10, [x10, #4008]
  40f2dc:	mov	w11, #0x1                   	// #1
  40f2e0:	str	w11, [sp, #8]
  40f2e4:	cbz	x10, 40f3cc <wcrtomb@plt+0xa5cc>
  40f2e8:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f2ec:	ldr	w10, [x10, #1568]
  40f2f0:	and	w8, w8, #0x1ff
  40f2f4:	bic	w8, w8, w10
  40f2f8:	eor	w21, w8, w9
  40f2fc:	ldr	w0, [x26, #1944]
  40f300:	mov	x1, x19
  40f304:	mov	w2, w21
  40f308:	mov	x3, xzr
  40f30c:	bl	44b968 <_obstack_memory_used@@Base+0x10170>
  40f310:	cbz	w0, 40f3b0 <wcrtomb@plt+0xa5b0>
  40f314:	add	x2, sp, #0x10
  40f318:	mov	x0, x19
  40f31c:	mov	w1, wzr
  40f320:	bl	40fe28 <wcrtomb@plt+0xb028>
  40f324:	cmp	w0, #0x2
  40f328:	b.eq	40f3a4 <wcrtomb@plt+0xa5a4>  // b.none
  40f32c:	cbnz	w0, 40f2fc <wcrtomb@plt+0xa4fc>
  40f330:	bl	416cc8 <wcrtomb@plt+0x11ec8>
  40f334:	b	40f518 <wcrtomb@plt+0xa718>
  40f338:	bl	416cc8 <wcrtomb@plt+0x11ec8>
  40f33c:	b	40f19c <wcrtomb@plt+0xa39c>
  40f340:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40f344:	ldr	x8, [x8, #496]
  40f348:	cbz	x8, 40f350 <wcrtomb@plt+0xa550>
  40f34c:	blr	x8
  40f350:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40f354:	add	x1, x1, #0x582
  40f358:	mov	w2, #0x5                   	// #5
  40f35c:	mov	x0, xzr
  40f360:	bl	404bd0 <dcgettext@plt>
  40f364:	mov	x2, x0
  40f368:	mov	w0, wzr
  40f36c:	mov	w1, wzr
  40f370:	bl	4041d0 <error@plt>
  40f374:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f378:	mov	w9, #0x2                   	// #2
  40f37c:	str	w9, [x8, #2944]
  40f380:	b	40f188 <wcrtomb@plt+0xa388>
  40f384:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40f388:	ldr	x8, [x8, #104]
  40f38c:	cbnz	x8, 40f188 <wcrtomb@plt+0xa388>
  40f390:	mov	x0, x19
  40f394:	mov	x1, x27
  40f398:	mov	x2, x25
  40f39c:	bl	426784 <wcrtomb@plt+0x21984>
  40f3a0:	b	40f188 <wcrtomb@plt+0xa388>
  40f3a4:	mov	w8, #0x1                   	// #1
  40f3a8:	str	w8, [sp, #8]
  40f3ac:	b	40f3cc <wcrtomb@plt+0xa5cc>
  40f3b0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f3b4:	add	x0, x0, #0xe60
  40f3b8:	mov	x1, x19
  40f3bc:	mov	w2, w20
  40f3c0:	mov	w3, wzr
  40f3c4:	bl	425500 <wcrtomb@plt+0x20700>
  40f3c8:	str	wzr, [sp, #8]
  40f3cc:	mov	w24, #0x8b41                	// #35649
  40f3d0:	mov	w25, #0x9c1                 	// #2497
  40f3d4:	movk	w24, #0x8, lsl #16
  40f3d8:	movk	w25, #0x8, lsl #16
  40f3dc:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f3e0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40f3e4:	ldrb	w8, [x8, #64]
  40f3e8:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40f3ec:	ldr	w23, [x9, #240]
  40f3f0:	add	w9, w25, #0x180
  40f3f4:	cmp	w8, #0x0
  40f3f8:	csel	w8, w24, w9, eq  // eq = none
  40f3fc:	ldr	w9, [sp, #8]
  40f400:	cmp	w23, #0x2
  40f404:	csel	w8, w8, w25, eq  // eq = none
  40f408:	cmp	w9, #0x0
  40f40c:	and	w9, w8, w24
  40f410:	csel	w21, w8, w9, ne  // ne = any
  40f414:	cmp	w20, #0x37
  40f418:	b.ne	40f46c <wcrtomb@plt+0xa66c>  // b.any
  40f41c:	ldrb	w8, [x27, #1584]
  40f420:	tbnz	w8, #0, 40f46c <wcrtomb@plt+0xa66c>
  40f424:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f428:	ldrb	w8, [x8, #152]
  40f42c:	mov	w9, #0x1                   	// #1
  40f430:	strb	w9, [x27, #1584]
  40f434:	tbz	w8, #3, 40f46c <wcrtomb@plt+0xa66c>
  40f438:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40f43c:	ldr	x8, [x8, #496]
  40f440:	cbz	x8, 40f448 <wcrtomb@plt+0xa648>
  40f444:	blr	x8
  40f448:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40f44c:	mov	w2, #0x5                   	// #5
  40f450:	mov	x0, xzr
  40f454:	add	x1, x1, #0xc90
  40f458:	bl	404bd0 <dcgettext@plt>
  40f45c:	mov	x2, x0
  40f460:	mov	w0, wzr
  40f464:	mov	w1, wzr
  40f468:	bl	4041d0 <error@plt>
  40f46c:	ldr	w0, [x26, #1944]
  40f470:	mov	x1, x19
  40f474:	mov	w2, w21
  40f478:	mov	w3, w22
  40f47c:	bl	404cc0 <openat@plt>
  40f480:	tbnz	w0, #31, 40f4f0 <wcrtomb@plt+0xa6f0>
  40f484:	mov	w21, w0
  40f488:	cmp	w23, #0x2
  40f48c:	b.ne	40f548 <wcrtomb@plt+0xa748>  // b.any
  40f490:	add	x1, sp, #0x10
  40f494:	mov	w0, w21
  40f498:	mov	x28, x26
  40f49c:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  40f4a0:	cbz	w0, 40f4c8 <wcrtomb@plt+0xa6c8>
  40f4a4:	bl	404ce0 <__errno_location@plt>
  40f4a8:	mov	w26, w20
  40f4ac:	ldr	w20, [x0]
  40f4b0:	mov	x23, x0
  40f4b4:	mov	w0, w21
  40f4b8:	bl	4047a0 <close@plt>
  40f4bc:	str	w20, [x23]
  40f4c0:	mov	w20, w26
  40f4c4:	b	40f4ec <wcrtomb@plt+0xa6ec>
  40f4c8:	ldr	w23, [sp, #32]
  40f4cc:	and	w8, w23, #0xf000
  40f4d0:	cmp	w8, #0x8, lsl #12
  40f4d4:	b.eq	40f55c <wcrtomb@plt+0xa75c>  // b.none
  40f4d8:	mov	w0, w21
  40f4dc:	bl	4047a0 <close@plt>
  40f4e0:	bl	404ce0 <__errno_location@plt>
  40f4e4:	mov	w8, #0x11                  	// #17
  40f4e8:	str	w8, [x0]
  40f4ec:	mov	x26, x28
  40f4f0:	add	x2, sp, #0xc
  40f4f4:	mov	w1, #0x1                   	// #1
  40f4f8:	mov	x0, x19
  40f4fc:	bl	40fe28 <wcrtomb@plt+0xb028>
  40f500:	cmp	w0, #0x1
  40f504:	b.eq	40f3e0 <wcrtomb@plt+0xa5e0>  // b.none
  40f508:	mov	w21, w0
  40f50c:	bl	416cc8 <wcrtomb@plt+0x11ec8>
  40f510:	cmp	w21, #0x2
  40f514:	b.eq	40f19c <wcrtomb@plt+0xa39c>  // b.none
  40f518:	mov	x0, x19
  40f51c:	bl	426218 <wcrtomb@plt+0x21418>
  40f520:	mov	w20, #0x1                   	// #1
  40f524:	mov	w0, w20
  40f528:	ldp	x20, x19, [sp, #224]
  40f52c:	ldp	x22, x21, [sp, #208]
  40f530:	ldp	x24, x23, [sp, #192]
  40f534:	ldp	x26, x25, [sp, #176]
  40f538:	ldp	x28, x27, [sp, #160]
  40f53c:	ldp	x29, x30, [sp, #144]
  40f540:	add	sp, sp, #0xf0
  40f544:	ret
  40f548:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f54c:	ldr	w8, [x8, #1568]
  40f550:	bic	w23, w22, w8
  40f554:	mov	w22, #0x1ff                 	// #511
  40f558:	b	40f560 <wcrtomb@plt+0xa760>
  40f55c:	mov	w22, #0xffffffff            	// #-1
  40f560:	adrp	x28, 46b000 <argp_program_version_hook@@Base+0x458>
  40f564:	b	40f158 <wcrtomb@plt+0xa358>
  40f568:	sub	sp, sp, #0x170
  40f56c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f570:	ldrb	w8, [x8, #3669]
  40f574:	stp	x26, x25, [sp, #304]
  40f578:	stp	x20, x19, [sp, #352]
  40f57c:	mov	w20, w1
  40f580:	mov	x19, x0
  40f584:	adrp	x25, 467000 <_obstack_memory_used@@Base+0x2b808>
  40f588:	stp	x29, x30, [sp, #272]
  40f58c:	stp	x28, x27, [sp, #288]
  40f590:	stp	x24, x23, [sp, #320]
  40f594:	stp	x22, x21, [sp, #336]
  40f598:	add	x29, sp, #0x110
  40f59c:	strb	wzr, [sp, #132]
  40f5a0:	cbz	w8, 40f5e4 <wcrtomb@plt+0xa7e4>
  40f5a4:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  40f5a8:	ldr	x8, [x21, #312]
  40f5ac:	cbnz	x8, 40f5e4 <wcrtomb@plt+0xa7e4>
  40f5b0:	ldr	w0, [x25, #1944]
  40f5b4:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  40f5b8:	add	x1, x1, #0x94a
  40f5bc:	add	x2, sp, #0x88
  40f5c0:	mov	w3, wzr
  40f5c4:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  40f5c8:	cbz	w0, 40f5dc <wcrtomb@plt+0xa7dc>
  40f5cc:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  40f5d0:	add	x0, x0, #0x94a
  40f5d4:	bl	419d24 <wcrtomb@plt+0x14f24>
  40f5d8:	b	40f5e4 <wcrtomb@plt+0xa7e4>
  40f5dc:	ldr	x8, [sp, #136]
  40f5e0:	str	x8, [x21, #312]
  40f5e4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f5e8:	ldrb	w8, [x8, #3617]
  40f5ec:	cbz	w8, 40f5fc <wcrtomb@plt+0xa7fc>
  40f5f0:	mov	x0, x19
  40f5f4:	bl	414bc0 <wcrtomb@plt+0xfdc0>
  40f5f8:	b	40f608 <wcrtomb@plt+0xa808>
  40f5fc:	cmp	w20, #0x44
  40f600:	b.ne	40f608 <wcrtomb@plt+0xa808>  // b.any
  40f604:	bl	416cc8 <wcrtomb@plt+0x11ec8>
  40f608:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40f60c:	ldr	w9, [x9, #100]
  40f610:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  40f614:	ldr	w10, [x10, #468]
  40f618:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f61c:	cmp	w9, #0x0
  40f620:	ldr	w8, [x8, #3784]
  40f624:	ccmp	w10, #0x0, #0x0, le
  40f628:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f62c:	ldrb	w10, [x10, #1560]
  40f630:	mov	w11, #0x1ff                 	// #511
  40f634:	mov	w9, #0x1c0                 	// #448
  40f638:	csel	w9, w9, w11, gt
  40f63c:	mov	w11, #0xc0                  	// #192
  40f640:	cmp	w10, #0x0
  40f644:	and	w8, w9, w8
  40f648:	csel	w9, w11, wzr, eq  // eq = none
  40f64c:	mov	w20, wzr
  40f650:	mov	w21, wzr
  40f654:	adrp	x27, 46b000 <argp_program_version_hook@@Base+0x458>
  40f658:	orr	w23, w8, w9
  40f65c:	mov	w28, #0x11                  	// #17
  40f660:	ldr	w0, [x25, #1944]
  40f664:	mov	x1, x19
  40f668:	mov	w2, w23
  40f66c:	bl	404410 <mkdirat@plt>
  40f670:	mov	w22, w0
  40f674:	cbz	w0, 40f754 <wcrtomb@plt+0xa954>
  40f678:	bl	404ce0 <__errno_location@plt>
  40f67c:	ldr	w8, [x0]
  40f680:	mov	x24, x0
  40f684:	cmp	w8, #0x11
  40f688:	b.ne	40f708 <wcrtomb@plt+0xa908>  // b.any
  40f68c:	ldrb	w26, [sp, #132]
  40f690:	ldrb	w8, [x27, #112]
  40f694:	cbz	w26, 40f724 <wcrtomb@plt+0xa924>
  40f698:	cbz	w8, 40f6e0 <wcrtomb@plt+0xa8e0>
  40f69c:	ldr	w0, [x25, #1944]
  40f6a0:	add	x2, sp, #0x88
  40f6a4:	mov	w3, #0x100                 	// #256
  40f6a8:	mov	x1, x19
  40f6ac:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  40f6b0:	cbnz	w0, 40f6dc <wcrtomb@plt+0xa8dc>
  40f6b4:	ldr	w8, [sp, #152]
  40f6b8:	and	w8, w8, #0xf000
  40f6bc:	cmp	w8, #0xa, lsl #12
  40f6c0:	b.ne	40f6dc <wcrtomb@plt+0xa8dc>  // b.any
  40f6c4:	ldr	w0, [x25, #1944]
  40f6c8:	add	x2, sp, #0x88
  40f6cc:	mov	x1, x19
  40f6d0:	mov	w3, wzr
  40f6d4:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  40f6d8:	cbz	w0, 40f73c <wcrtomb@plt+0xa93c>
  40f6dc:	str	w28, [x24]
  40f6e0:	mov	x1, sp
  40f6e4:	mov	x0, x19
  40f6e8:	bl	419588 <wcrtomb@plt+0x14788>
  40f6ec:	cbnz	w0, 40f704 <wcrtomb@plt+0xa904>
  40f6f0:	ldr	w20, [sp, #16]
  40f6f4:	and	w8, w20, #0xf000
  40f6f8:	cmp	w8, #0x4, lsl #12
  40f6fc:	b.eq	40f7e0 <wcrtomb@plt+0xa9e0>  // b.none
  40f700:	mov	w21, #0xffffffff            	// #-1
  40f704:	str	w28, [x24]
  40f708:	add	x2, sp, #0x84
  40f70c:	mov	x0, x19
  40f710:	mov	w1, wzr
  40f714:	bl	40fe28 <wcrtomb@plt+0xb028>
  40f718:	cmp	w0, #0x1
  40f71c:	b.eq	40f660 <wcrtomb@plt+0xa860>  // b.none
  40f720:	b	40f76c <wcrtomb@plt+0xa96c>
  40f724:	cbnz	w8, 40f698 <wcrtomb@plt+0xa898>
  40f728:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40f72c:	ldr	w9, [x9, #240]
  40f730:	and	w9, w9, #0xfffffffd
  40f734:	cbnz	w9, 40f708 <wcrtomb@plt+0xa908>
  40f738:	b	40f698 <wcrtomb@plt+0xa898>
  40f73c:	ldr	w8, [sp, #152]
  40f740:	str	w28, [x24]
  40f744:	and	w8, w8, #0xf000
  40f748:	cmp	w8, #0x4, lsl #12
  40f74c:	b.ne	40f6e0 <wcrtomb@plt+0xa8e0>  // b.any
  40f750:	b	40f8d8 <wcrtomb@plt+0xaad8>
  40f754:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f758:	ldr	w8, [x8, #1568]
  40f75c:	mov	w21, #0x1ff                 	// #511
  40f760:	mov	w5, #0x100                 	// #256
  40f764:	bic	w20, w23, w8
  40f768:	b	40f790 <wcrtomb@plt+0xa990>
  40f76c:	cbnz	w0, 40f77c <wcrtomb@plt+0xa97c>
  40f770:	ldr	w8, [x24]
  40f774:	cmp	w8, #0x11
  40f778:	b.ne	40f7d0 <wcrtomb@plt+0xa9d0>  // b.any
  40f77c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40f780:	ldr	w8, [x8, #240]
  40f784:	tst	w8, #0xfffffffd
  40f788:	b.ne	40f7ac <wcrtomb@plt+0xa9ac>  // b.any
  40f78c:	mov	w5, wzr
  40f790:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f794:	add	x1, x1, #0xe60
  40f798:	ldr	w4, [x1, #104]
  40f79c:	mov	x0, x19
  40f7a0:	mov	w2, w20
  40f7a4:	mov	w3, w21
  40f7a8:	bl	40ffc4 <wcrtomb@plt+0xb1c4>
  40f7ac:	mov	w0, w22
  40f7b0:	ldp	x20, x19, [sp, #352]
  40f7b4:	ldp	x22, x21, [sp, #336]
  40f7b8:	ldp	x24, x23, [sp, #320]
  40f7bc:	ldp	x26, x25, [sp, #304]
  40f7c0:	ldp	x28, x27, [sp, #288]
  40f7c4:	ldp	x29, x30, [sp, #272]
  40f7c8:	add	sp, sp, #0x170
  40f7cc:	ret
  40f7d0:	mov	x0, x19
  40f7d4:	bl	4261dc <wcrtomb@plt+0x213dc>
  40f7d8:	mov	w22, #0x1                   	// #1
  40f7dc:	b	40f7ac <wcrtomb@plt+0xa9ac>
  40f7e0:	cbz	w26, 40f884 <wcrtomb@plt+0xaa84>
  40f7e4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f7e8:	ldr	x20, [x8, #1576]
  40f7ec:	cbz	x20, 40f830 <wcrtomb@plt+0xaa30>
  40f7f0:	ldr	w0, [x25, #1944]
  40f7f4:	ldr	x1, [x20, #160]
  40f7f8:	ldr	w3, [x20, #84]
  40f7fc:	add	x2, sp, #0x88
  40f800:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  40f804:	cbnz	w0, 40f88c <wcrtomb@plt+0xaa8c>
  40f808:	ldr	x8, [sp, #136]
  40f80c:	ldr	x9, [sp]
  40f810:	cmp	x8, x9
  40f814:	b.ne	40f828 <wcrtomb@plt+0xaa28>  // b.any
  40f818:	ldr	x8, [sp, #144]
  40f81c:	ldr	x9, [sp, #8]
  40f820:	cmp	x8, x9
  40f824:	b.eq	40f898 <wcrtomb@plt+0xaa98>  // b.none
  40f828:	ldr	x20, [x20]
  40f82c:	cbnz	x20, 40f7f0 <wcrtomb@plt+0xa9f0>
  40f830:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40f834:	ldr	x8, [x8, #496]
  40f838:	cbz	x8, 40f840 <wcrtomb@plt+0xaa40>
  40f83c:	blr	x8
  40f840:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40f844:	add	x1, x1, #0xcd8
  40f848:	mov	w2, #0x5                   	// #5
  40f84c:	mov	x0, xzr
  40f850:	bl	404bd0 <dcgettext@plt>
  40f854:	mov	x20, x0
  40f858:	mov	x0, x19
  40f85c:	bl	4398cc <argp_parse@@Base+0xac10>
  40f860:	mov	x3, x0
  40f864:	mov	w0, wzr
  40f868:	mov	w1, wzr
  40f86c:	mov	x2, x20
  40f870:	bl	4041d0 <error@plt>
  40f874:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f878:	mov	w9, #0x2                   	// #2
  40f87c:	str	w9, [x8, #2944]
  40f880:	b	40f8d8 <wcrtomb@plt+0xaad8>
  40f884:	mov	w21, #0xffffffff            	// #-1
  40f888:	b	40f77c <wcrtomb@plt+0xa97c>
  40f88c:	ldr	x0, [x20, #160]
  40f890:	bl	4266e4 <wcrtomb@plt+0x218e4>
  40f894:	b	40f8d8 <wcrtomb@plt+0xaad8>
  40f898:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f89c:	add	x8, x8, #0xeb8
  40f8a0:	ldr	q0, [x8]
  40f8a4:	stur	q0, [x20, #8]
  40f8a8:	ldr	w9, [x8, #16]
  40f8ac:	str	w9, [x20, #24]
  40f8b0:	ldr	x9, [x8, #24]
  40f8b4:	stur	x9, [x20, #28]
  40f8b8:	ldr	q0, [x8, #128]
  40f8bc:	mov	w9, #0xffffffff            	// #-1
  40f8c0:	stur	q0, [x20, #40]
  40f8c4:	ldr	q0, [x8, #144]
  40f8c8:	stur	q0, [x20, #56]
  40f8cc:	ldr	w8, [sp, #152]
  40f8d0:	strb	wzr, [x20, #80]
  40f8d4:	stp	w8, w9, [x20, #72]
  40f8d8:	mov	w22, wzr
  40f8dc:	b	40f7ac <wcrtomb@plt+0xa9ac>
  40f8e0:	sub	sp, sp, #0x30
  40f8e4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40f8e8:	ldrb	w8, [x8, #440]
  40f8ec:	stp	x29, x30, [sp, #16]
  40f8f0:	stp	x20, x19, [sp, #32]
  40f8f4:	add	x29, sp, #0x10
  40f8f8:	mov	x19, x0
  40f8fc:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f900:	sturb	wzr, [x29, #-4]
  40f904:	cbz	w8, 40f950 <wcrtomb@plt+0xab50>
  40f908:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  40f90c:	ldr	x0, [x20, #3704]
  40f910:	ldr	w1, [x8, #1944]
  40f914:	mov	x2, x19
  40f918:	bl	404c50 <symlinkat@plt>
  40f91c:	cbz	w0, 40f97c <wcrtomb@plt+0xab7c>
  40f920:	sub	x2, x29, #0x4
  40f924:	mov	x0, x19
  40f928:	mov	w1, wzr
  40f92c:	bl	40fe28 <wcrtomb@plt+0xb028>
  40f930:	cmp	w0, #0x2
  40f934:	b.eq	40f9a4 <wcrtomb@plt+0xaba4>  // b.none
  40f938:	cbnz	w0, 40f908 <wcrtomb@plt+0xab08>
  40f93c:	ldr	x0, [x20, #3704]
  40f940:	mov	x1, x19
  40f944:	bl	426638 <wcrtomb@plt+0x21838>
  40f948:	mov	w0, #0xffffffff            	// #-1
  40f94c:	b	40f9a8 <wcrtomb@plt+0xaba8>
  40f950:	ldr	x0, [x20, #3704]
  40f954:	ldrb	w8, [x0]
  40f958:	cmp	w8, #0x2f
  40f95c:	b.eq	40f968 <wcrtomb@plt+0xab68>  // b.none
  40f960:	bl	41c004 <wcrtomb@plt+0x17204>
  40f964:	tbz	w0, #0, 40f908 <wcrtomb@plt+0xab08>
  40f968:	sub	x2, x29, #0x4
  40f96c:	mov	w1, #0x1                   	// #1
  40f970:	mov	x0, x19
  40f974:	bl	4101b0 <wcrtomb@plt+0xb3b0>
  40f978:	b	40f9a8 <wcrtomb@plt+0xaba8>
  40f97c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f980:	add	x1, x1, #0xe60
  40f984:	mov	w2, #0xffffffff            	// #-1
  40f988:	mov	w5, #0x32                  	// #50
  40f98c:	mov	w7, #0x100                 	// #256
  40f990:	mov	x0, x19
  40f994:	mov	w3, wzr
  40f998:	mov	w4, wzr
  40f99c:	mov	w6, wzr
  40f9a0:	bl	40eb98 <wcrtomb@plt+0x9d98>
  40f9a4:	mov	w0, wzr
  40f9a8:	ldp	x20, x19, [sp, #32]
  40f9ac:	ldp	x29, x30, [sp, #16]
  40f9b0:	add	sp, sp, #0x30
  40f9b4:	ret
  40f9b8:	sub	sp, sp, #0x150
  40f9bc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40f9c0:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40f9c4:	stp	x20, x19, [sp, #320]
  40f9c8:	ldrb	w9, [x9, #440]
  40f9cc:	ldr	x20, [x8, #3704]
  40f9d0:	stp	x29, x30, [sp, #272]
  40f9d4:	add	x29, sp, #0x110
  40f9d8:	mov	x19, x0
  40f9dc:	stp	x28, x23, [sp, #288]
  40f9e0:	stp	x22, x21, [sp, #304]
  40f9e4:	sturb	wzr, [x29, #-4]
  40f9e8:	cbnz	w9, 40fa0c <wcrtomb@plt+0xac0c>
  40f9ec:	mov	x0, x20
  40f9f0:	bl	41c004 <wcrtomb@plt+0x17204>
  40f9f4:	tbz	w0, #0, 40fa0c <wcrtomb@plt+0xac0c>
  40f9f8:	sub	x2, x29, #0x4
  40f9fc:	mov	x0, x19
  40fa00:	mov	w1, wzr
  40fa04:	bl	4101b0 <wcrtomb@plt+0xb3b0>
  40fa08:	b	40fb6c <wcrtomb@plt+0xad6c>
  40fa0c:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x2b808>
  40fa10:	ldr	w0, [x23, #1944]
  40fa14:	mov	x1, x20
  40fa18:	mov	x3, x19
  40fa1c:	mov	w4, wzr
  40fa20:	mov	w2, w0
  40fa24:	bl	404270 <linkat@plt>
  40fa28:	mov	w22, w0
  40fa2c:	bl	404ce0 <__errno_location@plt>
  40fa30:	cbz	w22, 40faf4 <wcrtomb@plt+0xacf4>
  40fa34:	ldr	w22, [x0]
  40fa38:	mov	x21, x0
  40fa3c:	cmp	w22, #0x11
  40fa40:	b.ne	40fa54 <wcrtomb@plt+0xac54>  // b.any
  40fa44:	mov	x0, x20
  40fa48:	mov	x1, x19
  40fa4c:	bl	404900 <strcmp@plt>
  40fa50:	cbz	w0, 40fb68 <wcrtomb@plt+0xad68>
  40fa54:	ldr	w0, [x23, #1944]
  40fa58:	add	x2, sp, #0x88
  40fa5c:	mov	w3, #0x100                 	// #256
  40fa60:	mov	x1, x20
  40fa64:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  40fa68:	cbnz	w0, 40faa4 <wcrtomb@plt+0xaca4>
  40fa6c:	ldr	w0, [x23, #1944]
  40fa70:	add	x2, sp, #0x8
  40fa74:	mov	w3, #0x100                 	// #256
  40fa78:	mov	x1, x19
  40fa7c:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  40fa80:	cbnz	w0, 40faa4 <wcrtomb@plt+0xaca4>
  40fa84:	ldr	x8, [sp, #136]
  40fa88:	ldr	x9, [sp, #8]
  40fa8c:	cmp	x8, x9
  40fa90:	b.ne	40faa4 <wcrtomb@plt+0xaca4>  // b.any
  40fa94:	ldr	x8, [sp, #144]
  40fa98:	ldr	x9, [sp, #16]
  40fa9c:	cmp	x8, x9
  40faa0:	b.eq	40fb68 <wcrtomb@plt+0xad68>  // b.none
  40faa4:	sub	x2, x29, #0x4
  40faa8:	mov	x0, x19
  40faac:	mov	w1, wzr
  40fab0:	str	w22, [x21]
  40fab4:	bl	40fe28 <wcrtomb@plt+0xb028>
  40fab8:	cmp	w0, #0x1
  40fabc:	b.eq	40fa10 <wcrtomb@plt+0xac10>  // b.none
  40fac0:	cmp	w0, #0x2
  40fac4:	b.eq	40fb68 <wcrtomb@plt+0xad68>  // b.none
  40fac8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40facc:	ldrb	w8, [x8, #3617]
  40fad0:	cbz	w8, 40fae0 <wcrtomb@plt+0xace0>
  40fad4:	ldr	w8, [x21]
  40fad8:	cmp	w8, #0x11
  40fadc:	b.eq	40fb68 <wcrtomb@plt+0xad68>  // b.none
  40fae0:	mov	x0, x20
  40fae4:	mov	x1, x19
  40fae8:	bl	426148 <wcrtomb@plt+0x21348>
  40faec:	mov	w0, #0x1                   	// #1
  40faf0:	b	40fb6c <wcrtomb@plt+0xad6c>
  40faf4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40faf8:	ldr	x21, [x8, #1592]
  40fafc:	cbz	x21, 40fb68 <wcrtomb@plt+0xad68>
  40fb00:	ldr	w0, [x23, #1944]
  40fb04:	add	x2, sp, #0x88
  40fb08:	mov	w3, #0x100                 	// #256
  40fb0c:	mov	x1, x20
  40fb10:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  40fb14:	cbnz	w0, 40fb68 <wcrtomb@plt+0xad68>
  40fb18:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40fb1c:	ldr	w8, [x8, #3584]
  40fb20:	ldp	x9, x10, [sp, #136]
  40fb24:	ldr	w11, [x21, #88]
  40fb28:	cmp	w11, w8
  40fb2c:	b.ne	40fb60 <wcrtomb@plt+0xad60>  // b.any
  40fb30:	ldr	x11, [x21, #8]
  40fb34:	cmp	x11, x9
  40fb38:	b.ne	40fb60 <wcrtomb@plt+0xad60>  // b.any
  40fb3c:	ldr	x11, [x21, #16]
  40fb40:	cmp	x11, x10
  40fb44:	b.ne	40fb60 <wcrtomb@plt+0xad60>  // b.any
  40fb48:	ldr	x11, [x21, #24]
  40fb4c:	cmn	x11, #0x1
  40fb50:	b.ne	40fb60 <wcrtomb@plt+0xad60>  // b.any
  40fb54:	ldr	x11, [x21, #32]
  40fb58:	cmn	w11, #0x1
  40fb5c:	b.eq	40fb84 <wcrtomb@plt+0xad84>  // b.none
  40fb60:	ldr	x21, [x21]
  40fb64:	cbnz	x21, 40fb24 <wcrtomb@plt+0xad24>
  40fb68:	mov	w0, wzr
  40fb6c:	ldp	x20, x19, [sp, #320]
  40fb70:	ldp	x22, x21, [sp, #304]
  40fb74:	ldp	x28, x23, [sp, #288]
  40fb78:	ldp	x29, x30, [sp, #272]
  40fb7c:	add	sp, sp, #0x150
  40fb80:	ret
  40fb84:	mov	x0, x19
  40fb88:	bl	404170 <strlen@plt>
  40fb8c:	add	x0, x0, #0x9
  40fb90:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  40fb94:	mov	x20, x0
  40fb98:	add	x0, x0, #0x8
  40fb9c:	mov	x1, x19
  40fba0:	bl	404b00 <strcpy@plt>
  40fba4:	ldr	x8, [x21, #96]
  40fba8:	str	x8, [x20]
  40fbac:	str	x20, [x21, #96]
  40fbb0:	b	40fb68 <wcrtomb@plt+0xad68>
  40fbb4:	stp	x29, x30, [sp, #-64]!
  40fbb8:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  40fbbc:	ldr	w9, [x9, #468]
  40fbc0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40fbc4:	ldr	w8, [x8, #3784]
  40fbc8:	mov	w10, #0xffffffc0            	// #-64
  40fbcc:	cmp	w9, #0x0
  40fbd0:	csinv	w9, w10, wzr, gt
  40fbd4:	mov	w11, #0x61ff                	// #25087
  40fbd8:	and	w8, w8, w9
  40fbdc:	str	x23, [sp, #16]
  40fbe0:	stp	x22, x21, [sp, #32]
  40fbe4:	stp	x20, x19, [sp, #48]
  40fbe8:	mov	x29, sp
  40fbec:	mov	w19, w1
  40fbf0:	mov	x20, x0
  40fbf4:	adrp	x22, 467000 <_obstack_memory_used@@Base+0x2b808>
  40fbf8:	and	w21, w8, w11
  40fbfc:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40fc00:	strb	wzr, [x29, #28]
  40fc04:	ldr	w0, [x22, #1944]
  40fc08:	ldr	x3, [x23, #3800]
  40fc0c:	mov	x1, x20
  40fc10:	mov	w2, w21
  40fc14:	bl	44b968 <_obstack_memory_used@@Base+0x10170>
  40fc18:	cbz	w0, 40fc48 <wcrtomb@plt+0xae48>
  40fc1c:	add	x2, x29, #0x1c
  40fc20:	mov	x0, x20
  40fc24:	mov	w1, wzr
  40fc28:	bl	40fe28 <wcrtomb@plt+0xb028>
  40fc2c:	cmp	w0, #0x2
  40fc30:	b.eq	40fc78 <wcrtomb@plt+0xae78>  // b.none
  40fc34:	cbnz	w0, 40fc04 <wcrtomb@plt+0xae04>
  40fc38:	mov	x0, x20
  40fc3c:	bl	426204 <wcrtomb@plt+0x21404>
  40fc40:	mov	w0, #0xffffffff            	// #-1
  40fc44:	b	40fc7c <wcrtomb@plt+0xae7c>
  40fc48:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40fc4c:	ldr	w8, [x8, #1568]
  40fc50:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40fc54:	add	x1, x1, #0xe60
  40fc58:	mov	w2, #0xffffffff            	// #-1
  40fc5c:	bic	w3, w21, w8
  40fc60:	mov	w4, #0x1ff                 	// #511
  40fc64:	mov	w7, #0x100                 	// #256
  40fc68:	mov	x0, x20
  40fc6c:	mov	w5, w19
  40fc70:	mov	w6, wzr
  40fc74:	bl	40eb98 <wcrtomb@plt+0x9d98>
  40fc78:	mov	w0, wzr
  40fc7c:	ldp	x20, x19, [sp, #48]
  40fc80:	ldp	x22, x21, [sp, #32]
  40fc84:	ldr	x23, [sp, #16]
  40fc88:	ldp	x29, x30, [sp], #64
  40fc8c:	ret
  40fc90:	sub	sp, sp, #0x40
  40fc94:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40fc98:	ldr	w8, [x8, #468]
  40fc9c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40fca0:	ldr	w9, [x9, #3784]
  40fca4:	mov	w10, #0xffffffc0            	// #-64
  40fca8:	cmp	w8, #0x0
  40fcac:	csinv	w8, w10, wzr, gt
  40fcb0:	and	w8, w9, w8
  40fcb4:	stp	x29, x30, [sp, #16]
  40fcb8:	stp	x22, x21, [sp, #32]
  40fcbc:	stp	x20, x19, [sp, #48]
  40fcc0:	add	x29, sp, #0x10
  40fcc4:	mov	w19, w1
  40fcc8:	mov	x20, x0
  40fccc:	and	w21, w8, #0x1ff
  40fcd0:	adrp	x22, 467000 <_obstack_memory_used@@Base+0x2b808>
  40fcd4:	sturb	wzr, [x29, #-4]
  40fcd8:	ldr	w0, [x22, #1944]
  40fcdc:	mov	x1, x20
  40fce0:	mov	w2, w21
  40fce4:	bl	404be0 <mkfifoat@plt>
  40fce8:	cbz	w0, 40fd18 <wcrtomb@plt+0xaf18>
  40fcec:	sub	x2, x29, #0x4
  40fcf0:	mov	x0, x20
  40fcf4:	mov	w1, wzr
  40fcf8:	bl	40fe28 <wcrtomb@plt+0xb028>
  40fcfc:	cmp	w0, #0x2
  40fd00:	b.eq	40fd48 <wcrtomb@plt+0xaf48>  // b.none
  40fd04:	cbnz	w0, 40fcd8 <wcrtomb@plt+0xaed8>
  40fd08:	mov	x0, x20
  40fd0c:	bl	4261f0 <wcrtomb@plt+0x213f0>
  40fd10:	mov	w0, #0xffffffff            	// #-1
  40fd14:	b	40fd4c <wcrtomb@plt+0xaf4c>
  40fd18:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40fd1c:	ldr	w8, [x8, #1568]
  40fd20:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40fd24:	add	x1, x1, #0xe60
  40fd28:	mov	w2, #0xffffffff            	// #-1
  40fd2c:	bic	w3, w21, w8
  40fd30:	mov	w4, #0x1ff                 	// #511
  40fd34:	mov	w7, #0x100                 	// #256
  40fd38:	mov	x0, x20
  40fd3c:	mov	w5, w19
  40fd40:	mov	w6, wzr
  40fd44:	bl	40eb98 <wcrtomb@plt+0x9d98>
  40fd48:	mov	w0, wzr
  40fd4c:	ldp	x20, x19, [sp, #48]
  40fd50:	ldp	x22, x21, [sp, #32]
  40fd54:	ldp	x29, x30, [sp, #16]
  40fd58:	add	sp, sp, #0x40
  40fd5c:	ret
  40fd60:	stp	x29, x30, [sp, #-16]!
  40fd64:	mov	x29, sp
  40fd68:	bl	416cc8 <wcrtomb@plt+0x11ec8>
  40fd6c:	mov	w0, wzr
  40fd70:	ldp	x29, x30, [sp], #16
  40fd74:	ret
  40fd78:	stp	x29, x30, [sp, #-16]!
  40fd7c:	mov	x29, sp
  40fd80:	bl	416cc8 <wcrtomb@plt+0x11ec8>
  40fd84:	mov	w0, wzr
  40fd88:	ldp	x29, x30, [sp], #16
  40fd8c:	ret
  40fd90:	mov	w0, #0x1                   	// #1
  40fd94:	ret
  40fd98:	sub	sp, sp, #0xa0
  40fd9c:	stp	x20, x19, [sp, #144]
  40fda0:	mov	x20, x1
  40fda4:	stp	x29, x30, [sp, #128]
  40fda8:	add	x29, sp, #0x80
  40fdac:	cbz	x1, 40fde0 <wcrtomb@plt+0xafe0>
  40fdb0:	ldr	w8, [x20, #16]
  40fdb4:	and	w8, w8, #0xf000
  40fdb8:	cmp	w8, #0x4, lsl #12
  40fdbc:	b.eq	40fe04 <wcrtomb@plt+0xb004>  // b.none
  40fdc0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40fdc4:	add	x8, x8, #0xf48
  40fdc8:	ldp	x2, x3, [x20, #88]
  40fdcc:	ldp	x0, x1, [x8]
  40fdd0:	bl	420d98 <wcrtomb@plt+0x1bf98>
  40fdd4:	cmp	w0, #0x1
  40fdd8:	cset	w0, lt  // lt = tstop
  40fddc:	b	40fe18 <wcrtomb@plt+0xb018>
  40fde0:	mov	x1, sp
  40fde4:	mov	x19, x0
  40fde8:	mov	x20, sp
  40fdec:	bl	419588 <wcrtomb@plt+0x14788>
  40fdf0:	cbz	w0, 40fdb0 <wcrtomb@plt+0xafb0>
  40fdf4:	bl	404ce0 <__errno_location@plt>
  40fdf8:	ldr	w8, [x0]
  40fdfc:	cmp	w8, #0x2
  40fe00:	b.ne	40fe0c <wcrtomb@plt+0xb00c>  // b.any
  40fe04:	mov	w0, wzr
  40fe08:	b	40fe18 <wcrtomb@plt+0xb018>
  40fe0c:	mov	x0, x19
  40fe10:	bl	4266f8 <wcrtomb@plt+0x218f8>
  40fe14:	mov	w0, #0x1                   	// #1
  40fe18:	ldp	x20, x19, [sp, #144]
  40fe1c:	ldp	x29, x30, [sp, #128]
  40fe20:	add	sp, sp, #0xa0
  40fe24:	ret
  40fe28:	sub	sp, sp, #0xc0
  40fe2c:	stp	x29, x30, [sp, #128]
  40fe30:	str	x23, [sp, #144]
  40fe34:	stp	x22, x21, [sp, #160]
  40fe38:	stp	x20, x19, [sp, #176]
  40fe3c:	add	x29, sp, #0x80
  40fe40:	mov	x20, x2
  40fe44:	mov	w22, w1
  40fe48:	mov	x19, x0
  40fe4c:	bl	404ce0 <__errno_location@plt>
  40fe50:	ldrb	w8, [x20]
  40fe54:	cbz	w8, 40fe60 <wcrtomb@plt+0xb060>
  40fe58:	mov	w0, wzr
  40fe5c:	b	40ff9c <wcrtomb@plt+0xb19c>
  40fe60:	ldr	w23, [x0]
  40fe64:	mov	x21, x0
  40fe68:	cmp	w23, #0x1e
  40fe6c:	b.le	40fed0 <wcrtomb@plt+0xb0d0>
  40fe70:	cmp	w23, #0x1f
  40fe74:	b.eq	40fe88 <wcrtomb@plt+0xb088>  // b.none
  40fe78:	cmp	w23, #0x5f
  40fe7c:	b.eq	40fe88 <wcrtomb@plt+0xb088>  // b.none
  40fe80:	cmp	w23, #0x28
  40fe84:	b.ne	40ff94 <wcrtomb@plt+0xb194>  // b.any
  40fe88:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40fe8c:	ldr	w8, [x8, #240]
  40fe90:	cmp	w8, #0x2
  40fe94:	b.ne	40ff94 <wcrtomb@plt+0xb194>  // b.any
  40fe98:	tbz	w22, #0, 40ff94 <wcrtomb@plt+0xb194>
  40fe9c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40fea0:	ldrb	w8, [x8, #64]
  40fea4:	cbnz	w8, 40ff94 <wcrtomb@plt+0xb194>
  40fea8:	mov	w1, #0x2f                  	// #47
  40feac:	mov	x0, x19
  40feb0:	bl	404a50 <strchr@plt>
  40feb4:	cbz	x0, 40fee0 <wcrtomb@plt+0xb0e0>
  40feb8:	mov	x1, sp
  40febc:	mov	x0, x19
  40fec0:	mov	x22, sp
  40fec4:	bl	419588 <wcrtomb@plt+0x14788>
  40fec8:	cbnz	w0, 40ff94 <wcrtomb@plt+0xb194>
  40fecc:	b	40fee4 <wcrtomb@plt+0xb0e4>
  40fed0:	cmp	w23, #0x2
  40fed4:	b.eq	40ff84 <wcrtomb@plt+0xb184>  // b.none
  40fed8:	cmp	w23, #0x11
  40fedc:	b.ne	40ff94 <wcrtomb@plt+0xb194>  // b.any
  40fee0:	mov	x22, xzr
  40fee4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40fee8:	ldr	w8, [x8, #240]
  40feec:	cmp	w8, #0x6
  40fef0:	b.hi	40ff84 <wcrtomb@plt+0xb184>  // b.pmore
  40fef4:	adrp	x9, 44c000 <_obstack_memory_used@@Base+0x10808>
  40fef8:	add	x9, x9, #0xaf7
  40fefc:	adr	x10, 40ff10 <wcrtomb@plt+0xb110>
  40ff00:	ldrb	w11, [x9, x8]
  40ff04:	add	x10, x10, x11, lsl #2
  40ff08:	mov	w0, wzr
  40ff0c:	br	x10
  40ff10:	mov	x0, x19
  40ff14:	mov	w1, wzr
  40ff18:	bl	4190e0 <wcrtomb@plt+0x142e0>
  40ff1c:	cmp	w0, #0x0
  40ff20:	b.gt	40ffbc <wcrtomb@plt+0xb1bc>
  40ff24:	b	40ff84 <wcrtomb@plt+0xb184>
  40ff28:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  40ff2c:	ldrb	w8, [x8, #154]
  40ff30:	tbz	w8, #4, 40ff6c <wcrtomb@plt+0xb16c>
  40ff34:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  40ff38:	ldr	x8, [x8, #496]
  40ff3c:	cbz	x8, 40ff44 <wcrtomb@plt+0xb144>
  40ff40:	blr	x8
  40ff44:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  40ff48:	add	x1, x1, #0xcbd
  40ff4c:	mov	w2, #0x5                   	// #5
  40ff50:	mov	x0, xzr
  40ff54:	bl	404bd0 <dcgettext@plt>
  40ff58:	mov	x2, x0
  40ff5c:	mov	w0, wzr
  40ff60:	mov	w1, wzr
  40ff64:	mov	x3, x19
  40ff68:	bl	4041d0 <error@plt>
  40ff6c:	mov	w0, #0x2                   	// #2
  40ff70:	b	40ff9c <wcrtomb@plt+0xb19c>
  40ff74:	mov	x0, x19
  40ff78:	mov	x1, x22
  40ff7c:	bl	40fd98 <wcrtomb@plt+0xaf98>
  40ff80:	tbz	w0, #0, 40ff10 <wcrtomb@plt+0xb110>
  40ff84:	mov	x0, x19
  40ff88:	mov	x1, x20
  40ff8c:	bl	40e9f8 <wcrtomb@plt+0x9bf8>
  40ff90:	cbz	w0, 40ffb4 <wcrtomb@plt+0xb1b4>
  40ff94:	mov	w0, wzr
  40ff98:	str	w23, [x21]
  40ff9c:	ldp	x20, x19, [sp, #176]
  40ffa0:	ldp	x22, x21, [sp, #160]
  40ffa4:	ldr	x23, [sp, #144]
  40ffa8:	ldp	x29, x30, [sp, #128]
  40ffac:	add	sp, sp, #0xc0
  40ffb0:	ret
  40ffb4:	ldrb	w8, [x20]
  40ffb8:	cbz	w8, 40ff94 <wcrtomb@plt+0xb194>
  40ffbc:	mov	w0, #0x1                   	// #1
  40ffc0:	b	40ff9c <wcrtomb@plt+0xb19c>
  40ffc4:	stp	x29, x30, [sp, #-96]!
  40ffc8:	str	x27, [sp, #16]
  40ffcc:	stp	x26, x25, [sp, #32]
  40ffd0:	stp	x24, x23, [sp, #48]
  40ffd4:	stp	x22, x21, [sp, #64]
  40ffd8:	stp	x20, x19, [sp, #80]
  40ffdc:	mov	x29, sp
  40ffe0:	mov	w22, w5
  40ffe4:	mov	w26, w4
  40ffe8:	mov	w23, w3
  40ffec:	mov	w24, w2
  40fff0:	mov	x21, x1
  40fff4:	mov	x19, x0
  40fff8:	bl	404170 <strlen@plt>
  40fffc:	mov	x25, x0
  410000:	mov	w0, #0xa8                  	// #168
  410004:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  410008:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41000c:	ldr	x8, [x27, #1576]
  410010:	mov	x20, x0
  410014:	str	w26, [x0, #24]
  410018:	str	x8, [x0]
  41001c:	cbz	x21, 410040 <wcrtomb@plt+0xb240>
  410020:	ldur	q0, [x21, #88]
  410024:	stur	q0, [x20, #8]
  410028:	ldr	x8, [x21, #112]
  41002c:	stur	x8, [x20, #28]
  410030:	ldur	q0, [x21, #216]
  410034:	stur	q0, [x20, #40]
  410038:	ldur	q0, [x21, #232]
  41003c:	stur	q0, [x20, #56]
  410040:	cmp	x21, #0x0
  410044:	mov	x0, x19
  410048:	cset	w26, eq  // eq = none
  41004c:	str	x25, [x20, #152]
  410050:	bl	43a998 <argp_parse@@Base+0xbcdc>
  410054:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410058:	ldr	w9, [x8, #3584]
  41005c:	mov	x8, x20
  410060:	str	x0, [x20, #160]
  410064:	stp	w24, w23, [x20, #72]
  410068:	strb	w26, [x20, #80]
  41006c:	str	w22, [x20, #84]
  410070:	strb	wzr, [x20, #88]
  410074:	str	xzr, [x8, #96]!
  410078:	stur	w9, [x8, #-4]
  41007c:	cbz	x21, 4100ac <wcrtomb@plt+0xb2ac>
  410080:	ldr	x1, [x21, #48]
  410084:	mov	x0, x8
  410088:	bl	4186dc <wcrtomb@plt+0x138dc>
  41008c:	ldr	x0, [x21, #56]
  410090:	cbz	x0, 4100c0 <wcrtomb@plt+0xb2c0>
  410094:	ldr	x8, [x21, #64]
  410098:	add	x1, x8, #0x1
  41009c:	bl	43a954 <argp_parse@@Base+0xbc98>
  4100a0:	ldr	x8, [x21, #64]
  4100a4:	stp	x0, x8, [x20, #104]
  4100a8:	b	4100c4 <wcrtomb@plt+0xb2c4>
  4100ac:	movi	v0.2d, #0x0
  4100b0:	stur	q0, [x20, #136]
  4100b4:	stur	q0, [x20, #120]
  4100b8:	stur	q0, [x20, #104]
  4100bc:	b	4100fc <wcrtomb@plt+0xb2fc>
  4100c0:	stp	xzr, xzr, [x20, #104]
  4100c4:	ldr	x0, [x21, #72]
  4100c8:	cbz	x0, 4100e4 <wcrtomb@plt+0xb2e4>
  4100cc:	ldr	x8, [x21, #80]
  4100d0:	add	x1, x8, #0x1
  4100d4:	bl	43a954 <argp_parse@@Base+0xbc98>
  4100d8:	ldr	x8, [x21, #80]
  4100dc:	stp	x0, x8, [x20, #120]
  4100e0:	b	4100e8 <wcrtomb@plt+0xb2e8>
  4100e4:	stp	xzr, xzr, [x20, #120]
  4100e8:	add	x1, x20, #0x90
  4100ec:	add	x2, x20, #0x88
  4100f0:	mov	x0, x21
  4100f4:	bl	410fd4 <wcrtomb@plt+0xc1d4>
  4100f8:	ldr	x0, [x20, #160]
  4100fc:	mov	x1, x19
  410100:	bl	404b00 <strcpy@plt>
  410104:	mov	x0, x19
  410108:	str	x20, [x27, #1576]
  41010c:	bl	419048 <wcrtomb@plt+0x14248>
  410110:	tbz	w0, #0, 410134 <wcrtomb@plt+0xb334>
  410114:	mov	x0, x20
  410118:	ldp	x20, x19, [sp, #80]
  41011c:	ldp	x22, x21, [sp, #64]
  410120:	ldp	x24, x23, [sp, #48]
  410124:	ldp	x26, x25, [sp, #32]
  410128:	ldr	x27, [sp, #16]
  41012c:	ldp	x29, x30, [sp], #96
  410130:	b	410150 <wcrtomb@plt+0xb350>
  410134:	ldp	x20, x19, [sp, #80]
  410138:	ldp	x22, x21, [sp, #64]
  41013c:	ldp	x24, x23, [sp, #48]
  410140:	ldp	x26, x25, [sp, #32]
  410144:	ldr	x27, [sp, #16]
  410148:	ldp	x29, x30, [sp], #96
  41014c:	ret
  410150:	sub	sp, sp, #0xa0
  410154:	stp	x20, x19, [sp, #144]
  410158:	mov	x19, x0
  41015c:	mov	w20, #0x1                   	// #1
  410160:	stp	x29, x30, [sp, #128]
  410164:	add	x29, sp, #0x80
  410168:	ldr	x0, [x19, #160]
  41016c:	mov	x1, sp
  410170:	strb	w20, [x19, #88]
  410174:	bl	419588 <wcrtomb@plt+0x14788>
  410178:	cbz	w0, 410188 <wcrtomb@plt+0xb388>
  41017c:	ldr	x0, [x19, #160]
  410180:	bl	4266e4 <wcrtomb@plt+0x218e4>
  410184:	b	410190 <wcrtomb@plt+0xb390>
  410188:	ldr	q0, [sp]
  41018c:	stur	q0, [x19, #8]
  410190:	ldr	x19, [x19]
  410194:	cbz	x19, 4101a0 <wcrtomb@plt+0xb3a0>
  410198:	ldrb	w8, [x19, #88]
  41019c:	cbz	w8, 410168 <wcrtomb@plt+0xb368>
  4101a0:	ldp	x20, x19, [sp, #144]
  4101a4:	ldp	x29, x30, [sp, #128]
  4101a8:	add	sp, sp, #0xa0
  4101ac:	ret
  4101b0:	sub	sp, sp, #0xc0
  4101b4:	stp	x24, x23, [sp, #144]
  4101b8:	stp	x22, x21, [sp, #160]
  4101bc:	stp	x20, x19, [sp, #176]
  4101c0:	mov	x21, x2
  4101c4:	mov	w20, w1
  4101c8:	mov	x19, x0
  4101cc:	and	w23, w1, #0x1
  4101d0:	adrp	x24, 467000 <_obstack_memory_used@@Base+0x2b808>
  4101d4:	stp	x29, x30, [sp, #128]
  4101d8:	add	x29, sp, #0x80
  4101dc:	ldr	w0, [x24, #1944]
  4101e0:	mov	w2, #0xc1                  	// #193
  4101e4:	mov	x1, x19
  4101e8:	mov	w3, wzr
  4101ec:	bl	404cc0 <openat@plt>
  4101f0:	tbz	w0, #31, 41021c <wcrtomb@plt+0xb41c>
  4101f4:	mov	x0, x19
  4101f8:	mov	w1, wzr
  4101fc:	mov	x2, x21
  410200:	bl	40fe28 <wcrtomb@plt+0xb028>
  410204:	cmp	w0, #0x2
  410208:	b.eq	410380 <wcrtomb@plt+0xb580>  // b.none
  41020c:	cbnz	w0, 4101dc <wcrtomb@plt+0xb3dc>
  410210:	mov	x0, x19
  410214:	bl	426218 <wcrtomb@plt+0x21418>
  410218:	b	410254 <wcrtomb@plt+0xb454>
  41021c:	mov	x1, sp
  410220:	mov	w22, w0
  410224:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  410228:	cbz	w0, 410240 <wcrtomb@plt+0xb440>
  41022c:	mov	x0, x19
  410230:	bl	4266e4 <wcrtomb@plt+0x218e4>
  410234:	mov	w0, w22
  410238:	bl	4047a0 <close@plt>
  41023c:	b	410254 <wcrtomb@plt+0xb454>
  410240:	mov	w0, w22
  410244:	bl	4047a0 <close@plt>
  410248:	cbz	w0, 41025c <wcrtomb@plt+0xb45c>
  41024c:	mov	x0, x19
  410250:	bl	426108 <wcrtomb@plt+0x21308>
  410254:	mov	w0, #0xffffffff            	// #-1
  410258:	b	410384 <wcrtomb@plt+0xb584>
  41025c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410260:	ldr	x0, [x8, #3704]
  410264:	bl	404170 <strlen@plt>
  410268:	add	x0, x0, #0xa1
  41026c:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  410270:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410274:	ldr	q0, [sp]
  410278:	ldr	x10, [x8, #1592]
  41027c:	mov	x21, x0
  410280:	mov	x9, #0xffffffffffffffff    	// #-1
  410284:	str	x0, [x8, #1592]
  410288:	stp	x9, x9, [x0, #24]
  41028c:	stur	q0, [x0, #8]
  410290:	str	x10, [x0]
  410294:	strb	w23, [x0, #40]
  410298:	tbz	w20, #0, 4102c0 <wcrtomb@plt+0xb4c0>
  41029c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4102a0:	add	x8, x8, #0xec8
  4102a4:	ldr	w9, [x8]
  4102a8:	ldr	x10, [x8, #8]
  4102ac:	ldp	q0, q1, [x8, #112]
  4102b0:	str	w9, [x21, #44]
  4102b4:	str	x10, [x21, #48]
  4102b8:	stur	q0, [x21, #56]
  4102bc:	stur	q1, [x21, #72]
  4102c0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4102c4:	ldr	w8, [x8, #3584]
  4102c8:	mov	x0, x19
  4102cc:	str	w8, [x21, #88]
  4102d0:	bl	404170 <strlen@plt>
  4102d4:	add	x0, x0, #0x9
  4102d8:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4102dc:	str	x0, [x21, #96]
  4102e0:	str	xzr, [x0], #8
  4102e4:	mov	x1, x19
  4102e8:	bl	404b00 <strcpy@plt>
  4102ec:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4102f0:	add	x20, x20, #0xe60
  4102f4:	ldr	x1, [x20, #48]
  4102f8:	str	xzr, [x21, #104]!
  4102fc:	mov	x0, x21
  410300:	bl	4186dc <wcrtomb@plt+0x138dc>
  410304:	add	x1, x21, #0x30
  410308:	add	x2, x21, #0x28
  41030c:	movi	v0.2d, #0x0
  410310:	mov	x0, x20
  410314:	stur	q0, [x21, #24]
  410318:	stur	q0, [x21, #8]
  41031c:	bl	410fd4 <wcrtomb@plt+0xc1d4>
  410320:	ldr	x1, [x20, #24]
  410324:	add	x0, x21, #0x38
  410328:	bl	404b00 <strcpy@plt>
  41032c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410330:	ldr	x20, [x8, #1576]
  410334:	cbz	x20, 410380 <wcrtomb@plt+0xb580>
  410338:	ldrb	w8, [x20, #88]
  41033c:	cbnz	w8, 410378 <wcrtomb@plt+0xb578>
  410340:	ldp	x21, x1, [x20, #152]
  410344:	mov	x0, x19
  410348:	mov	x2, x21
  41034c:	bl	404580 <strncmp@plt>
  410350:	cbnz	w0, 410378 <wcrtomb@plt+0xb578>
  410354:	add	x21, x19, x21
  410358:	ldrb	w8, [x21]
  41035c:	cmp	w8, #0x2f
  410360:	b.ne	410378 <wcrtomb@plt+0xb578>  // b.any
  410364:	mov	x0, x19
  410368:	bl	43051c <argp_parse@@Base+0x1860>
  41036c:	add	x8, x21, #0x1
  410370:	cmp	x0, x8
  410374:	b.eq	41039c <wcrtomb@plt+0xb59c>  // b.none
  410378:	ldr	x20, [x20]
  41037c:	cbnz	x20, 410338 <wcrtomb@plt+0xb538>
  410380:	mov	w0, wzr
  410384:	ldp	x20, x19, [sp, #176]
  410388:	ldp	x22, x21, [sp, #160]
  41038c:	ldp	x24, x23, [sp, #144]
  410390:	ldp	x29, x30, [sp, #128]
  410394:	add	sp, sp, #0xc0
  410398:	ret
  41039c:	mov	x0, x20
  4103a0:	bl	410150 <wcrtomb@plt+0xb350>
  4103a4:	b	410380 <wcrtomb@plt+0xb580>
  4103a8:	stp	x29, x30, [sp, #-32]!
  4103ac:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4103b0:	stp	x20, x19, [sp, #16]
  4103b4:	ldr	x20, [x8, #1600]
  4103b8:	mov	x29, sp
  4103bc:	cbz	x20, 4103e0 <wcrtomb@plt+0xb5e0>
  4103c0:	mov	x19, x0
  4103c4:	ldr	x0, [x20, #8]
  4103c8:	mov	x1, x19
  4103cc:	mov	w2, wzr
  4103d0:	bl	404aa0 <fnmatch@plt>
  4103d4:	cbz	w0, 4103e8 <wcrtomb@plt+0xb5e8>
  4103d8:	ldr	x20, [x20]
  4103dc:	cbnz	x20, 4103c4 <wcrtomb@plt+0xb5c4>
  4103e0:	mov	w0, wzr
  4103e4:	b	4103ec <wcrtomb@plt+0xb5ec>
  4103e8:	mov	w0, #0x1                   	// #1
  4103ec:	ldp	x20, x19, [sp, #16]
  4103f0:	ldp	x29, x30, [sp], #32
  4103f4:	ret
  4103f8:	stp	x29, x30, [sp, #-96]!
  4103fc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  410400:	add	x1, x1, #0x478
  410404:	stp	x28, x27, [sp, #16]
  410408:	stp	x26, x25, [sp, #32]
  41040c:	stp	x24, x23, [sp, #48]
  410410:	stp	x22, x21, [sp, #64]
  410414:	stp	x20, x19, [sp, #80]
  410418:	mov	x29, sp
  41041c:	bl	404140 <strtok@plt>
  410420:	cbz	x0, 41063c <wcrtomb@plt+0xb83c>
  410424:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x10808>
  410428:	adrp	x24, 44c000 <_obstack_memory_used@@Base+0x10808>
  41042c:	adrp	x28, 44d000 <_obstack_memory_used@@Base+0x11808>
  410430:	adrp	x20, 452000 <_obstack_memory_used@@Base+0x16808>
  410434:	adrp	x21, 44c000 <_obstack_memory_used@@Base+0x10808>
  410438:	mov	x26, x0
  41043c:	add	x19, x19, #0xe79
  410440:	add	x24, x24, #0x6c9
  410444:	add	x28, x28, #0x130
  410448:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41044c:	add	x20, x20, #0x478
  410450:	add	x21, x21, #0xe9e
  410454:	mov	w1, #0x3d                  	// #61
  410458:	mov	x0, x26
  41045c:	bl	404a50 <strchr@plt>
  410460:	cbz	x0, 410688 <wcrtomb@plt+0xb888>
  410464:	mov	x27, x0
  410468:	cmp	x0, x26
  41046c:	b.eq	410690 <wcrtomb@plt+0xb890>  // b.none
  410470:	mov	x8, x27
  410474:	ldrb	w25, [x8, #-1]!
  410478:	cmp	w25, #0x3a
  41047c:	csel	x23, x8, x27, eq  // eq = none
  410480:	cmp	x23, x26
  410484:	b.ls	4104a8 <wcrtomb@plt+0xb6a8>  // b.plast
  410488:	bl	404930 <__ctype_b_loc@plt>
  41048c:	ldr	x8, [x0]
  410490:	ldrb	w9, [x23]
  410494:	ldrh	w9, [x8, x9, lsl #1]
  410498:	tbz	w9, #13, 4104a8 <wcrtomb@plt+0xb6a8>
  41049c:	sub	x23, x23, #0x1
  4104a0:	cmp	x23, x26
  4104a4:	b.hi	410490 <wcrtomb@plt+0xb690>  // b.pmore
  4104a8:	add	x8, x27, #0x1
  4104ac:	strb	wzr, [x23]
  4104b0:	ldrb	w23, [x8]
  4104b4:	mov	x27, x8
  4104b8:	cbz	x23, 4104d0 <wcrtomb@plt+0xb6d0>
  4104bc:	bl	404930 <__ctype_b_loc@plt>
  4104c0:	ldr	x8, [x0]
  4104c4:	ldrh	w9, [x8, x23, lsl #1]
  4104c8:	add	x8, x27, #0x1
  4104cc:	tbnz	w9, #13, 4104b0 <wcrtomb@plt+0xb6b0>
  4104d0:	mov	x0, x26
  4104d4:	mov	x1, x19
  4104d8:	bl	404900 <strcmp@plt>
  4104dc:	cbz	w0, 41056c <wcrtomb@plt+0xb76c>
  4104e0:	mov	x0, x26
  4104e4:	mov	x1, x21
  4104e8:	bl	404900 <strcmp@plt>
  4104ec:	cbz	w0, 4105c4 <wcrtomb@plt+0xb7c4>
  4104f0:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4104f4:	mov	x0, x26
  4104f8:	add	x1, x1, #0xe9a
  4104fc:	bl	404900 <strcmp@plt>
  410500:	cbz	w0, 4105d0 <wcrtomb@plt+0xb7d0>
  410504:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  410508:	mov	x0, x26
  41050c:	add	x1, x1, #0xeae
  410510:	bl	404900 <strcmp@plt>
  410514:	cbz	w0, 4105e4 <wcrtomb@plt+0xb7e4>
  410518:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  41051c:	mov	x0, x26
  410520:	add	x1, x1, #0xeaa
  410524:	bl	404900 <strcmp@plt>
  410528:	cbz	w0, 4105f8 <wcrtomb@plt+0xb7f8>
  41052c:	mov	x23, x28
  410530:	mov	x0, x24
  410534:	ldurb	w8, [x23, #-4]
  410538:	cbnz	w8, 410550 <wcrtomb@plt+0xb750>
  41053c:	ldurb	w8, [x23, #-8]
  410540:	tbz	w8, #0, 410550 <wcrtomb@plt+0xb750>
  410544:	mov	x1, x26
  410548:	bl	404900 <strcmp@plt>
  41054c:	cbz	w0, 4106dc <wcrtomb@plt+0xb8dc>
  410550:	ldr	x0, [x23], #32
  410554:	cbnz	x0, 410534 <wcrtomb@plt+0xb734>
  410558:	cmp	w25, #0x3a
  41055c:	b.ne	410614 <wcrtomb@plt+0xb814>  // b.any
  410560:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410564:	add	x0, x0, #0x690
  410568:	b	41061c <wcrtomb@plt+0xb81c>
  41056c:	mov	x23, x28
  410570:	mov	x1, x24
  410574:	ldurb	w8, [x23, #-4]
  410578:	cbnz	w8, 410594 <wcrtomb@plt+0xb794>
  41057c:	ldurb	w8, [x23, #-8]
  410580:	tbz	w8, #0, 410594 <wcrtomb@plt+0xb794>
  410584:	mov	x0, x27
  410588:	mov	w2, wzr
  41058c:	bl	404aa0 <fnmatch@plt>
  410590:	cbz	w0, 410658 <wcrtomb@plt+0xb858>
  410594:	ldr	x1, [x23], #32
  410598:	cbnz	x1, 410574 <wcrtomb@plt+0xb774>
  41059c:	mov	w0, #0x18                  	// #24
  4105a0:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4105a4:	mov	x26, x0
  4105a8:	mov	x0, x27
  4105ac:	bl	43a998 <argp_parse@@Base+0xbcdc>
  4105b0:	ldr	x8, [x22, #1600]
  4105b4:	stp	x0, xzr, [x26, #8]
  4105b8:	str	x26, [x22, #1600]
  4105bc:	str	x8, [x26]
  4105c0:	b	410628 <wcrtomb@plt+0xb828>
  4105c4:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4105c8:	add	x0, x0, #0x648
  4105cc:	b	4105d8 <wcrtomb@plt+0xb7d8>
  4105d0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4105d4:	add	x0, x0, #0x650
  4105d8:	mov	x1, x27
  4105dc:	bl	4186dc <wcrtomb@plt+0x138dc>
  4105e0:	b	410628 <wcrtomb@plt+0xb828>
  4105e4:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4105e8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4105ec:	add	x0, x0, #0x670
  4105f0:	add	x1, x1, #0x678
  4105f4:	b	410608 <wcrtomb@plt+0xb808>
  4105f8:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4105fc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410600:	add	x0, x0, #0x660
  410604:	add	x1, x1, #0x668
  410608:	mov	x2, x27
  41060c:	bl	4128ac <wcrtomb@plt+0xdaac>
  410610:	b	410628 <wcrtomb@plt+0xb828>
  410614:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410618:	add	x0, x0, #0x680
  41061c:	mov	x1, x26
  410620:	mov	x2, x27
  410624:	bl	412844 <wcrtomb@plt+0xda44>
  410628:	mov	x0, xzr
  41062c:	mov	x1, x20
  410630:	bl	404140 <strtok@plt>
  410634:	mov	x26, x0
  410638:	cbnz	x0, 410454 <wcrtomb@plt+0xb654>
  41063c:	ldp	x20, x19, [sp, #80]
  410640:	ldp	x22, x21, [sp, #64]
  410644:	ldp	x24, x23, [sp, #48]
  410648:	ldp	x26, x25, [sp, #32]
  41064c:	ldp	x28, x27, [sp, #16]
  410650:	ldp	x29, x30, [sp], #96
  410654:	ret
  410658:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41065c:	ldr	x8, [x8, #496]
  410660:	cbz	x8, 410668 <wcrtomb@plt+0xb868>
  410664:	blr	x8
  410668:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  41066c:	add	x1, x1, #0xe80
  410670:	mov	w2, #0x5                   	// #5
  410674:	mov	x0, xzr
  410678:	bl	404bd0 <dcgettext@plt>
  41067c:	mov	x19, x0
  410680:	mov	x0, x27
  410684:	b	4106bc <wcrtomb@plt+0xb8bc>
  410688:	mov	x0, x26
  41068c:	bl	410714 <wcrtomb@plt+0xb914>
  410690:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  410694:	ldr	x8, [x8, #496]
  410698:	cbz	x8, 4106a0 <wcrtomb@plt+0xb8a0>
  41069c:	blr	x8
  4106a0:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4106a4:	add	x1, x1, #0xe60
  4106a8:	mov	w2, #0x5                   	// #5
  4106ac:	mov	x0, xzr
  4106b0:	bl	404bd0 <dcgettext@plt>
  4106b4:	mov	x19, x0
  4106b8:	mov	x0, x26
  4106bc:	bl	439ac0 <argp_parse@@Base+0xae04>
  4106c0:	mov	x3, x0
  4106c4:	mov	w0, wzr
  4106c8:	mov	w1, wzr
  4106cc:	mov	x2, x19
  4106d0:	bl	4041d0 <error@plt>
  4106d4:	mov	w0, #0x2                   	// #2
  4106d8:	bl	41f888 <wcrtomb@plt+0x1aa88>
  4106dc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4106e0:	ldr	x8, [x8, #496]
  4106e4:	cbz	x8, 4106ec <wcrtomb@plt+0xb8ec>
  4106e8:	blr	x8
  4106ec:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4106f0:	add	x1, x1, #0xebb
  4106f4:	mov	w2, #0x5                   	// #5
  4106f8:	mov	x0, xzr
  4106fc:	bl	404bd0 <dcgettext@plt>
  410700:	mov	x2, x0
  410704:	mov	w0, wzr
  410708:	mov	w1, wzr
  41070c:	mov	x3, x26
  410710:	b	4106d0 <wcrtomb@plt+0xb8d0>
  410714:	stp	x29, x30, [sp, #-32]!
  410718:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41071c:	ldr	x8, [x8, #496]
  410720:	str	x19, [sp, #16]
  410724:	mov	x19, x0
  410728:	mov	x29, sp
  41072c:	cbz	x8, 410734 <wcrtomb@plt+0xb934>
  410730:	blr	x8
  410734:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  410738:	add	x1, x1, #0xe33
  41073c:	mov	w2, #0x5                   	// #5
  410740:	mov	x0, xzr
  410744:	bl	404bd0 <dcgettext@plt>
  410748:	mov	x2, x0
  41074c:	mov	w0, wzr
  410750:	mov	w1, wzr
  410754:	mov	x3, x19
  410758:	bl	4041d0 <error@plt>
  41075c:	mov	w0, #0x2                   	// #2
  410760:	bl	41f888 <wcrtomb@plt+0x1aa88>
  410764:	sub	sp, sp, #0xa0
  410768:	stp	x29, x30, [sp, #64]
  41076c:	add	x29, sp, #0x40
  410770:	add	x8, sp, #0x10
  410774:	sub	x9, x29, #0x18
  410778:	add	x8, x8, #0x14
  41077c:	stp	x28, x27, [sp, #80]
  410780:	stp	x26, x25, [sp, #96]
  410784:	stp	x24, x23, [sp, #112]
  410788:	stp	x22, x21, [sp, #128]
  41078c:	stp	x20, x19, [sp, #144]
  410790:	mov	x24, x1
  410794:	mov	x26, x0
  410798:	mov	x27, xzr
  41079c:	mov	x19, xzr
  4107a0:	mov	x23, xzr
  4107a4:	mov	x20, xzr
  4107a8:	mov	x22, xzr
  4107ac:	mov	x21, xzr
  4107b0:	stp	x8, x2, [sp]
  4107b4:	add	x25, x9, #0x14
  4107b8:	mov	x8, x1
  4107bc:	ldrb	w9, [x8]
  4107c0:	cmp	w9, #0x25
  4107c4:	b.eq	4107d8 <wcrtomb@plt+0xb9d8>  // b.none
  4107c8:	cbz	w9, 4108b0 <wcrtomb@plt+0xbab0>
  4107cc:	add	x27, x27, #0x1
  4107d0:	mov	x28, x8
  4107d4:	b	4108a8 <wcrtomb@plt+0xbaa8>
  4107d8:	mov	x28, x8
  4107dc:	ldrb	w9, [x28, #1]!
  4107e0:	cmp	w9, #0x65
  4107e4:	b.gt	41082c <wcrtomb@plt+0xba2c>
  4107e8:	cbz	w9, 4107cc <wcrtomb@plt+0xb9cc>
  4107ec:	cmp	w9, #0x25
  4107f0:	b.eq	410860 <wcrtomb@plt+0xba60>  // b.none
  4107f4:	cmp	w9, #0x64
  4107f8:	b.ne	4108a4 <wcrtomb@plt+0xbaa4>  // b.any
  4107fc:	cbz	x26, 4108a8 <wcrtomb@plt+0xbaa8>
  410800:	cbnz	x19, 410810 <wcrtomb@plt+0xba10>
  410804:	ldr	x0, [x26]
  410808:	bl	4303e8 <argp_parse@@Base+0x172c>
  41080c:	mov	x19, x0
  410810:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  410814:	ldrb	w2, [x8, #440]
  410818:	mov	x0, x19
  41081c:	mov	w1, wzr
  410820:	bl	426884 <wcrtomb@plt+0x21a84>
  410824:	mov	x23, x0
  410828:	b	410878 <wcrtomb@plt+0xba78>
  41082c:	cmp	w9, #0x66
  410830:	b.eq	410868 <wcrtomb@plt+0xba68>  // b.none
  410834:	cmp	w9, #0x6e
  410838:	b.eq	410884 <wcrtomb@plt+0xba84>  // b.none
  41083c:	cmp	w9, #0x70
  410840:	b.ne	4108a4 <wcrtomb@plt+0xbaa4>  // b.any
  410844:	bl	404480 <getpid@plt>
  410848:	sub	x1, x29, #0x18
  41084c:	sxtw	x0, w0
  410850:	bl	43401c <argp_parse@@Base+0x5360>
  410854:	add	x8, x27, x25
  410858:	mov	x22, x0
  41085c:	b	41089c <wcrtomb@plt+0xba9c>
  410860:	add	x27, x27, #0x1
  410864:	b	4108a8 <wcrtomb@plt+0xbaa8>
  410868:	cbz	x26, 4108a8 <wcrtomb@plt+0xbaa8>
  41086c:	ldr	x0, [x26]
  410870:	bl	43051c <argp_parse@@Base+0x1860>
  410874:	mov	x20, x0
  410878:	bl	404170 <strlen@plt>
  41087c:	add	x27, x0, x27
  410880:	b	4108a8 <wcrtomb@plt+0xbaa8>
  410884:	ldr	x0, [sp, #8]
  410888:	add	x1, sp, #0x10
  41088c:	bl	43401c <argp_parse@@Base+0x5360>
  410890:	ldr	x8, [sp]
  410894:	mov	x21, x0
  410898:	add	x8, x27, x8
  41089c:	sub	x27, x8, x0
  4108a0:	b	4108a8 <wcrtomb@plt+0xbaa8>
  4108a4:	add	x27, x27, #0x2
  4108a8:	add	x8, x28, #0x1
  4108ac:	b	4107bc <wcrtomb@plt+0xb9bc>
  4108b0:	add	x0, x27, #0x1
  4108b4:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4108b8:	mov	x25, x0
  4108bc:	mov	w27, #0x25                  	// #37
  4108c0:	ldrb	w8, [x24]
  4108c4:	mov	x28, x24
  4108c8:	mov	x26, x0
  4108cc:	cmp	w8, #0x25
  4108d0:	b.eq	4108e8 <wcrtomb@plt+0xbae8>  // b.none
  4108d4:	cbz	w8, 410998 <wcrtomb@plt+0xbb98>
  4108d8:	strb	w8, [x26], #1
  4108dc:	add	x24, x28, #0x1
  4108e0:	mov	x0, x26
  4108e4:	b	4108c0 <wcrtomb@plt+0xbac0>
  4108e8:	mov	x24, x28
  4108ec:	ldrb	w8, [x24, #1]!
  4108f0:	cmp	w8, #0x65
  4108f4:	b.le	41091c <wcrtomb@plt+0xbb1c>
  4108f8:	cmp	w8, #0x66
  4108fc:	b.eq	41093c <wcrtomb@plt+0xbb3c>  // b.none
  410900:	cmp	w8, #0x6e
  410904:	b.eq	410954 <wcrtomb@plt+0xbb54>  // b.none
  410908:	cmp	w8, #0x70
  41090c:	b.ne	410978 <wcrtomb@plt+0xbb78>  // b.any
  410910:	mov	x0, x26
  410914:	mov	x1, x22
  410918:	b	41095c <wcrtomb@plt+0xbb5c>
  41091c:	cmp	w8, #0x25
  410920:	b.eq	410968 <wcrtomb@plt+0xbb68>  // b.none
  410924:	cmp	w8, #0x64
  410928:	b.ne	410978 <wcrtomb@plt+0xbb78>  // b.any
  41092c:	cbz	x23, 41096c <wcrtomb@plt+0xbb6c>
  410930:	mov	x0, x26
  410934:	mov	x1, x23
  410938:	b	410948 <wcrtomb@plt+0xbb48>
  41093c:	cbz	x20, 41096c <wcrtomb@plt+0xbb6c>
  410940:	mov	x0, x26
  410944:	mov	x1, x20
  410948:	bl	4043c0 <stpcpy@plt>
  41094c:	mov	x26, x0
  410950:	b	41096c <wcrtomb@plt+0xbb6c>
  410954:	mov	x0, x26
  410958:	mov	x1, x21
  41095c:	bl	4043c0 <stpcpy@plt>
  410960:	add	x24, x28, #0x2
  410964:	b	4108c0 <wcrtomb@plt+0xbac0>
  410968:	strb	w27, [x26], #1
  41096c:	add	x24, x28, #0x2
  410970:	mov	x0, x26
  410974:	b	4108c0 <wcrtomb@plt+0xbac0>
  410978:	mov	x0, x26
  41097c:	strb	w27, [x0], #1
  410980:	ldrb	w8, [x24]
  410984:	cbz	w8, 4108c0 <wcrtomb@plt+0xbac0>
  410988:	add	x24, x28, #0x2
  41098c:	add	x0, x26, #0x2
  410990:	strb	w8, [x26, #1]
  410994:	b	4108c0 <wcrtomb@plt+0xbac0>
  410998:	mov	x0, x19
  41099c:	bl	4049b0 <free@plt>
  4109a0:	mov	x8, x26
  4109a4:	cmp	x26, x25
  4109a8:	b.ls	4109bc <wcrtomb@plt+0xbbbc>  // b.plast
  4109ac:	mov	x26, x8
  4109b0:	ldrb	w9, [x26, #-1]!
  4109b4:	cmp	w9, #0x2f
  4109b8:	b.eq	4109a0 <wcrtomb@plt+0xbba0>  // b.none
  4109bc:	strb	wzr, [x8]
  4109c0:	mov	x0, x25
  4109c4:	ldp	x20, x19, [sp, #144]
  4109c8:	ldp	x22, x21, [sp, #128]
  4109cc:	ldp	x24, x23, [sp, #112]
  4109d0:	ldp	x26, x25, [sp, #96]
  4109d4:	ldp	x28, x27, [sp, #80]
  4109d8:	ldp	x29, x30, [sp, #64]
  4109dc:	add	sp, sp, #0xa0
  4109e0:	ret
  4109e4:	stp	x29, x30, [sp, #-32]!
  4109e8:	stp	x20, x19, [sp, #16]
  4109ec:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4109f0:	ldr	x1, [x8, #1608]
  4109f4:	mov	x19, x0
  4109f8:	mov	x29, sp
  4109fc:	cbnz	x1, 410a1c <wcrtomb@plt+0xbc1c>
  410a00:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410a04:	add	x20, x20, #0x648
  410a08:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  410a0c:	add	x1, x1, #0xd0b
  410a10:	mov	x0, x20
  410a14:	bl	4186dc <wcrtomb@plt+0x138dc>
  410a18:	ldr	x1, [x20]
  410a1c:	mov	x0, x19
  410a20:	ldp	x20, x19, [sp, #16]
  410a24:	mov	x2, xzr
  410a28:	ldp	x29, x30, [sp], #32
  410a2c:	b	410764 <wcrtomb@plt+0xb964>
  410a30:	stp	x29, x30, [sp, #-32]!
  410a34:	stp	x20, x19, [sp, #16]
  410a38:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410a3c:	ldr	x19, [x20, #1616]
  410a40:	mov	x29, sp
  410a44:	cbnz	x19, 410aa8 <wcrtomb@plt+0xbca8>
  410a48:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  410a4c:	add	x0, x0, #0xd1f
  410a50:	bl	404d10 <getenv@plt>
  410a54:	adrp	x8, 44c000 <_obstack_memory_used@@Base+0x10808>
  410a58:	add	x8, x8, #0xd26
  410a5c:	cmp	x0, #0x0
  410a60:	csel	x19, x8, x0, eq  // eq = none
  410a64:	mov	x0, x19
  410a68:	bl	404170 <strlen@plt>
  410a6c:	add	x0, x0, #0x12
  410a70:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  410a74:	mov	x1, x19
  410a78:	str	x0, [x20, #1616]
  410a7c:	bl	404b00 <strcpy@plt>
  410a80:	ldr	x19, [x20, #1616]
  410a84:	mov	x0, x19
  410a88:	bl	404170 <strlen@plt>
  410a8c:	adrp	x8, 44c000 <_obstack_memory_used@@Base+0x10808>
  410a90:	add	x8, x8, #0xd2b
  410a94:	ldr	q0, [x8]
  410a98:	add	x8, x19, x0
  410a9c:	mov	w9, #0x6e                  	// #110
  410aa0:	strh	w9, [x8, #16]
  410aa4:	str	q0, [x8]
  410aa8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410aac:	ldr	x8, [x8, #1624]
  410ab0:	mov	x1, x19
  410ab4:	ldp	x20, x19, [sp, #16]
  410ab8:	mov	x0, xzr
  410abc:	add	x2, x8, #0x1
  410ac0:	ldp	x29, x30, [sp], #32
  410ac4:	b	410764 <wcrtomb@plt+0xb964>
  410ac8:	stp	x29, x30, [sp, #-80]!
  410acc:	stp	x24, x23, [sp, #32]
  410ad0:	stp	x22, x21, [sp, #48]
  410ad4:	stp	x20, x19, [sp, #64]
  410ad8:	ldr	x21, [x3, #8]
  410adc:	and	w8, w0, #0xff
  410ae0:	mov	x19, x3
  410ae4:	mov	w20, w0
  410ae8:	cmp	w8, #0x78
  410aec:	mov	x0, x1
  410af0:	str	x25, [sp, #16]
  410af4:	mov	x29, sp
  410af8:	b.eq	410b18 <wcrtomb@plt+0xbd18>  // b.none
  410afc:	cmp	w8, #0x67
  410b00:	b.ne	410b30 <wcrtomb@plt+0xbd30>  // b.any
  410b04:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410b08:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410b0c:	ldr	x8, [x8, #1632]
  410b10:	ldr	x9, [x9, #1640]
  410b14:	b	410b28 <wcrtomb@plt+0xbd28>
  410b18:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410b1c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410b20:	ldr	x8, [x8, #1648]
  410b24:	ldr	x9, [x9, #1656]
  410b28:	cmp	x8, #0x0
  410b2c:	csel	x2, x2, x9, eq  // eq = none
  410b30:	mov	x1, x21
  410b34:	bl	40a5e8 <wcrtomb@plt+0x57e8>
  410b38:	strb	w20, [x0, #156]
  410b3c:	bl	40b1bc <wcrtomb@plt+0x63bc>
  410b40:	ldr	x22, [x19, #16]
  410b44:	mov	w25, #0x200                 	// #512
  410b48:	bl	405574 <wcrtomb@plt+0x774>
  410b4c:	cmp	x21, #0x200
  410b50:	csel	x24, x21, x25, cc  // cc = lo, ul, last
  410b54:	mov	x1, x22
  410b58:	mov	x2, x24
  410b5c:	mov	x23, x0
  410b60:	bl	4040f0 <memcpy@plt>
  410b64:	cmp	x21, #0x1ff
  410b68:	b.hi	410b7c <wcrtomb@plt+0xbd7c>  // b.pmore
  410b6c:	add	x0, x23, x24
  410b70:	sub	x2, x25, x24
  410b74:	mov	w1, wzr
  410b78:	bl	4045e0 <memset@plt>
  410b7c:	mov	x0, x23
  410b80:	add	x22, x22, x24
  410b84:	sub	x21, x21, x24
  410b88:	bl	40587c <wcrtomb@plt+0xa7c>
  410b8c:	cbnz	x21, 410b48 <wcrtomb@plt+0xbd48>
  410b90:	mov	x0, x19
  410b94:	bl	410bcc <wcrtomb@plt+0xbdcc>
  410b98:	and	w8, w20, #0xff
  410b9c:	cmp	w8, #0x67
  410ba0:	b.ne	410bb4 <wcrtomb@plt+0xbdb4>  // b.any
  410ba4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410ba8:	ldr	x9, [x8, #1624]
  410bac:	add	x9, x9, #0x1
  410bb0:	str	x9, [x8, #1624]
  410bb4:	ldp	x20, x19, [sp, #64]
  410bb8:	ldp	x22, x21, [sp, #48]
  410bbc:	ldp	x24, x23, [sp, #32]
  410bc0:	ldr	x25, [sp, #16]
  410bc4:	ldp	x29, x30, [sp], #80
  410bc8:	ret
  410bcc:	stp	x29, x30, [sp, #-32]!
  410bd0:	str	x19, [sp, #16]
  410bd4:	mov	x19, x0
  410bd8:	ldr	x0, [x0]
  410bdc:	mov	x29, sp
  410be0:	cbz	x0, 410bfc <wcrtomb@plt+0xbdfc>
  410be4:	mov	x1, xzr
  410be8:	bl	43b760 <_obstack_free@@Base>
  410bec:	ldr	x0, [x19]
  410bf0:	bl	4049b0 <free@plt>
  410bf4:	str	xzr, [x19]
  410bf8:	b	410c04 <wcrtomb@plt+0xbe04>
  410bfc:	ldr	x0, [x19, #16]
  410c00:	bl	4049b0 <free@plt>
  410c04:	stp	xzr, xzr, [x19, #8]
  410c08:	ldr	x19, [sp, #16]
  410c0c:	ldp	x29, x30, [sp], #32
  410c10:	ret
  410c14:	stp	x29, x30, [sp, #-32]!
  410c18:	stp	x20, x19, [sp, #16]
  410c1c:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410c20:	ldr	x8, [x20, #1664]
  410c24:	mov	x19, x0
  410c28:	mov	x29, sp
  410c2c:	cbz	x8, 410c54 <wcrtomb@plt+0xbe54>
  410c30:	mov	x0, x19
  410c34:	bl	410ca0 <wcrtomb@plt+0xbea0>
  410c38:	ldr	x20, [x20, #1664]
  410c3c:	cbz	x20, 410c54 <wcrtomb@plt+0xbe54>
  410c40:	ldp	x1, x0, [x20, #8]
  410c44:	mov	x2, x19
  410c48:	bl	410cf4 <wcrtomb@plt+0xbef4>
  410c4c:	ldr	x20, [x20]
  410c50:	cbnz	x20, 410c40 <wcrtomb@plt+0xbe40>
  410c54:	ldr	x8, [x19]
  410c58:	cbz	x8, 410c94 <wcrtomb@plt+0xbe94>
  410c5c:	mov	x0, x19
  410c60:	bl	410d70 <wcrtomb@plt+0xbf70>
  410c64:	bl	410a30 <wcrtomb@plt+0xbc30>
  410c68:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  410c6c:	ldr	x2, [x8, #200]
  410c70:	mov	x20, x0
  410c74:	mov	w0, #0x67                  	// #103
  410c78:	mov	x1, x20
  410c7c:	mov	x3, x19
  410c80:	bl	410ac8 <wcrtomb@plt+0xbcc8>
  410c84:	mov	x0, x20
  410c88:	ldp	x20, x19, [sp, #16]
  410c8c:	ldp	x29, x30, [sp], #32
  410c90:	b	4049b0 <free@plt>
  410c94:	ldp	x20, x19, [sp, #16]
  410c98:	ldp	x29, x30, [sp], #32
  410c9c:	ret
  410ca0:	stp	x29, x30, [sp, #-32]!
  410ca4:	ldr	x8, [x0]
  410ca8:	str	x19, [sp, #16]
  410cac:	mov	x29, sp
  410cb0:	cbz	x8, 410cc0 <wcrtomb@plt+0xbec0>
  410cb4:	ldr	x19, [sp, #16]
  410cb8:	ldp	x29, x30, [sp], #32
  410cbc:	ret
  410cc0:	mov	x19, x0
  410cc4:	mov	w0, #0x58                  	// #88
  410cc8:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  410ccc:	str	x0, [x19]
  410cd0:	ldr	x19, [sp, #16]
  410cd4:	adrp	x3, 43a000 <argp_parse@@Base+0xb344>
  410cd8:	adrp	x4, 404000 <mbrtowc@plt-0xe0>
  410cdc:	add	x3, x3, #0x7a4
  410ce0:	add	x4, x4, #0x9b0
  410ce4:	mov	x1, xzr
  410ce8:	mov	x2, xzr
  410cec:	ldp	x29, x30, [sp], #32
  410cf0:	b	43b4e0 <_obstack_begin@@Base>
  410cf4:	stp	x29, x30, [sp, #-48]!
  410cf8:	str	x21, [sp, #16]
  410cfc:	mov	x29, sp
  410d00:	mov	x21, x0
  410d04:	stp	x20, x19, [sp, #32]
  410d08:	mov	x20, x2
  410d0c:	mov	x19, x1
  410d10:	add	x2, x29, #0x18
  410d14:	mov	w0, #0x1                   	// #1
  410d18:	mov	x1, x21
  410d1c:	bl	4244e8 <wcrtomb@plt+0x1f6e8>
  410d20:	tbz	w0, #0, 410d2c <wcrtomb@plt+0xbf2c>
  410d24:	ldr	x21, [x29, #24]
  410d28:	b	410d3c <wcrtomb@plt+0xbf3c>
  410d2c:	mov	x0, x21
  410d30:	bl	43a998 <argp_parse@@Base+0xbcdc>
  410d34:	mov	x21, x0
  410d38:	str	x0, [x29, #24]
  410d3c:	mov	x0, x21
  410d40:	bl	404170 <strlen@plt>
  410d44:	mov	x3, x0
  410d48:	mov	x0, x20
  410d4c:	mov	x1, x19
  410d50:	mov	x2, x21
  410d54:	bl	41294c <wcrtomb@plt+0xdb4c>
  410d58:	ldr	x0, [x29, #24]
  410d5c:	bl	4049b0 <free@plt>
  410d60:	ldp	x20, x19, [sp, #32]
  410d64:	ldr	x21, [sp, #16]
  410d68:	ldp	x29, x30, [sp], #48
  410d6c:	ret
  410d70:	stp	x29, x30, [sp, #-32]!
  410d74:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410d78:	stp	x20, x19, [sp, #16]
  410d7c:	ldr	x20, [x8, #1680]
  410d80:	mov	x19, x0
  410d84:	mov	x29, sp
  410d88:	cbz	x20, 410da0 <wcrtomb@plt+0xbfa0>
  410d8c:	ldp	x1, x0, [x20, #8]
  410d90:	mov	x2, x19
  410d94:	bl	410cf4 <wcrtomb@plt+0xbef4>
  410d98:	ldr	x20, [x20]
  410d9c:	cbnz	x20, 410d8c <wcrtomb@plt+0xbf8c>
  410da0:	ldr	x8, [x19]
  410da4:	ldp	x9, x10, [x8, #16]
  410da8:	cmp	x10, x9
  410dac:	b.ne	410dbc <wcrtomb@plt+0xbfbc>  // b.any
  410db0:	ldrb	w11, [x8, #80]
  410db4:	orr	w11, w11, #0x2
  410db8:	strb	w11, [x8, #80]
  410dbc:	ldr	x12, [x8, #48]
  410dc0:	ldr	x13, [x8, #8]
  410dc4:	ldr	x11, [x8, #32]
  410dc8:	add	x10, x12, x10
  410dcc:	bic	x10, x10, x12
  410dd0:	sub	x12, x10, x13
  410dd4:	sub	x13, x11, x13
  410dd8:	cmp	x12, x13
  410ddc:	str	x10, [x8, #24]
  410de0:	b.ls	410dec <wcrtomb@plt+0xbfec>  // b.plast
  410de4:	mov	x10, x11
  410de8:	str	x11, [x8, #24]
  410dec:	str	x10, [x8, #16]
  410df0:	str	x9, [x19, #16]
  410df4:	ldp	x20, x19, [sp, #16]
  410df8:	ldp	x29, x30, [sp], #32
  410dfc:	ret
  410e00:	stp	x29, x30, [sp, #-16]!
  410e04:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  410e08:	ldr	x8, [x8, #1664]
  410e0c:	mov	x29, sp
  410e10:	cbnz	x8, 410e1c <wcrtomb@plt+0xc01c>
  410e14:	ldp	x29, x30, [sp], #16
  410e18:	ret
  410e1c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  410e20:	ldr	x8, [x8, #496]
  410e24:	cbz	x8, 410e2c <wcrtomb@plt+0xc02c>
  410e28:	blr	x8
  410e2c:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  410e30:	add	x1, x1, #0xd3d
  410e34:	mov	w2, #0x5                   	// #5
  410e38:	mov	x0, xzr
  410e3c:	bl	404bd0 <dcgettext@plt>
  410e40:	mov	x2, x0
  410e44:	mov	w0, wzr
  410e48:	mov	w1, wzr
  410e4c:	bl	4041d0 <error@plt>
  410e50:	mov	w0, #0x2                   	// #2
  410e54:	bl	41f888 <wcrtomb@plt+0x1aa88>
  410e58:	movi	v0.2d, #0x0
  410e5c:	str	xzr, [x0, #80]
  410e60:	stp	q0, q0, [x0, #48]
  410e64:	stp	xzr, xzr, [x0, #328]
  410e68:	ret
  410e6c:	stp	x29, x30, [sp, #-48]!
  410e70:	stp	x20, x19, [sp, #32]
  410e74:	mov	x19, x0
  410e78:	str	x21, [sp, #16]
  410e7c:	mov	x29, sp
  410e80:	cbz	x1, 410ea4 <wcrtomb@plt+0xc0a4>
  410e84:	mov	x20, x1
  410e88:	add	x21, x19, #0x8
  410e8c:	ldur	x0, [x21, #-8]
  410e90:	bl	4049b0 <free@plt>
  410e94:	ldr	x0, [x21], #24
  410e98:	bl	4049b0 <free@plt>
  410e9c:	subs	x20, x20, #0x1
  410ea0:	b.ne	410e8c <wcrtomb@plt+0xc08c>  // b.any
  410ea4:	mov	x0, x19
  410ea8:	ldp	x20, x19, [sp, #32]
  410eac:	ldr	x21, [sp, #16]
  410eb0:	ldp	x29, x30, [sp], #48
  410eb4:	b	4049b0 <free@plt>
  410eb8:	stp	x29, x30, [sp, #-64]!
  410ebc:	stp	x22, x21, [sp, #32]
  410ec0:	mov	x22, x0
  410ec4:	mov	x0, x1
  410ec8:	str	x23, [sp, #16]
  410ecc:	stp	x20, x19, [sp, #48]
  410ed0:	mov	x29, sp
  410ed4:	mov	x19, x3
  410ed8:	mov	x20, x2
  410edc:	mov	x21, x1
  410ee0:	bl	404170 <strlen@plt>
  410ee4:	add	x0, x0, #0xe
  410ee8:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  410eec:	adrp	x8, 44c000 <_obstack_memory_used@@Base+0x10808>
  410ef0:	add	x8, x8, #0xd68
  410ef4:	ldr	x9, [x8]
  410ef8:	ldur	x8, [x8, #6]
  410efc:	mov	x23, x0
  410f00:	mov	x1, x21
  410f04:	str	x9, [x0]
  410f08:	stur	x8, [x0, #6]
  410f0c:	add	x0, x0, #0xd
  410f10:	bl	4043c0 <stpcpy@plt>
  410f14:	add	x0, x22, #0x150
  410f18:	add	x1, x22, #0x148
  410f1c:	mov	x2, x23
  410f20:	mov	x3, x20
  410f24:	mov	x4, x19
  410f28:	bl	410f44 <wcrtomb@plt+0xc144>
  410f2c:	mov	x0, x23
  410f30:	ldp	x20, x19, [sp, #48]
  410f34:	ldp	x22, x21, [sp, #32]
  410f38:	ldr	x23, [sp, #16]
  410f3c:	ldp	x29, x30, [sp], #64
  410f40:	b	4049b0 <free@plt>
  410f44:	stp	x29, x30, [sp, #-64]!
  410f48:	stp	x22, x21, [sp, #32]
  410f4c:	stp	x20, x19, [sp, #48]
  410f50:	ldr	x8, [x1]
  410f54:	mov	x22, x0
  410f58:	str	x23, [sp, #16]
  410f5c:	mov	x29, sp
  410f60:	add	x9, x8, #0x1
  410f64:	str	x9, [x1]
  410f68:	ldr	x0, [x0]
  410f6c:	add	x23, x8, x8, lsl #1
  410f70:	lsl	x8, x23, #3
  410f74:	add	x1, x8, #0x18
  410f78:	mov	x19, x4
  410f7c:	mov	x20, x3
  410f80:	mov	x21, x2
  410f84:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  410f88:	str	x0, [x22]
  410f8c:	mov	x0, x21
  410f90:	bl	43a998 <argp_parse@@Base+0xbcdc>
  410f94:	ldr	x8, [x22]
  410f98:	add	x1, x19, #0x1
  410f9c:	str	x0, [x8, x23, lsl #3]
  410fa0:	mov	x0, x20
  410fa4:	bl	43a954 <argp_parse@@Base+0xbc98>
  410fa8:	ldr	x8, [x22]
  410fac:	add	x8, x8, x23, lsl #3
  410fb0:	str	x0, [x8, #8]
  410fb4:	ldr	x8, [x22]
  410fb8:	add	x8, x8, x23, lsl #3
  410fbc:	str	x19, [x8, #16]
  410fc0:	ldp	x20, x19, [sp, #48]
  410fc4:	ldp	x22, x21, [sp, #32]
  410fc8:	ldr	x23, [sp, #16]
  410fcc:	ldp	x29, x30, [sp], #64
  410fd0:	ret
  410fd4:	stp	x29, x30, [sp, #-64]!
  410fd8:	stp	x22, x21, [sp, #32]
  410fdc:	stp	x20, x19, [sp, #48]
  410fe0:	str	xzr, [x1]
  410fe4:	str	xzr, [x2]
  410fe8:	ldr	x8, [x0, #328]
  410fec:	str	x23, [sp, #16]
  410ff0:	mov	x29, sp
  410ff4:	cbz	x8, 41103c <wcrtomb@plt+0xc23c>
  410ff8:	mov	x19, x2
  410ffc:	mov	x20, x1
  411000:	mov	x21, x0
  411004:	mov	x22, xzr
  411008:	mov	x23, xzr
  41100c:	ldr	x8, [x21, #336]
  411010:	mov	x0, x20
  411014:	mov	x1, x19
  411018:	add	x8, x8, x22
  41101c:	ldp	x2, x3, [x8]
  411020:	ldr	x4, [x8, #16]
  411024:	bl	410f44 <wcrtomb@plt+0xc144>
  411028:	ldr	x8, [x21, #328]
  41102c:	add	x23, x23, #0x1
  411030:	add	x22, x22, #0x18
  411034:	cmp	x23, x8
  411038:	b.cc	41100c <wcrtomb@plt+0xc20c>  // b.lo, b.ul, b.last
  41103c:	ldp	x20, x19, [sp, #48]
  411040:	ldp	x22, x21, [sp, #32]
  411044:	ldr	x23, [sp, #16]
  411048:	ldp	x29, x30, [sp], #64
  41104c:	ret
  411050:	stp	x29, x30, [sp, #-48]!
  411054:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  411058:	ldr	x8, [x8, #1664]
  41105c:	stp	x20, x19, [sp, #32]
  411060:	mov	x19, x0
  411064:	mov	x1, x19
  411068:	mov	x0, x8
  41106c:	str	x21, [sp, #16]
  411070:	mov	x29, sp
  411074:	bl	4110f8 <wcrtomb@plt+0xc2f8>
  411078:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41107c:	ldr	x0, [x8, #1672]
  411080:	mov	x1, x19
  411084:	bl	4110f8 <wcrtomb@plt+0xc2f8>
  411088:	ldr	x8, [x19, #352]
  41108c:	cbz	x8, 4110c0 <wcrtomb@plt+0xc2c0>
  411090:	ldr	x8, [x19, #360]
  411094:	adrp	x21, 411000 <wcrtomb@plt+0xc200>
  411098:	add	x20, x19, #0x158
  41109c:	add	x21, x21, #0x37c
  4110a0:	add	x8, x8, #0x200
  4110a4:	str	x8, [x29, #24]
  4110a8:	add	x1, x29, #0x18
  4110ac:	mov	x0, x20
  4110b0:	mov	x2, x21
  4110b4:	mov	x3, x19
  4110b8:	bl	411168 <wcrtomb@plt+0xc368>
  4110bc:	tbnz	w0, #0, 4110a8 <wcrtomb@plt+0xc2a8>
  4110c0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4110c4:	ldr	x0, [x8, #1680]
  4110c8:	mov	x1, x19
  4110cc:	bl	4110f8 <wcrtomb@plt+0xc2f8>
  4110d0:	ldr	x8, [x19, #136]
  4110d4:	ldrb	w9, [x19, #320]
  4110d8:	str	x8, [x19, #264]
  4110dc:	cbz	w9, 4110e8 <wcrtomb@plt+0xc2e8>
  4110e0:	ldr	x8, [x19, #312]
  4110e4:	str	x8, [x19, #136]
  4110e8:	ldp	x20, x19, [sp, #32]
  4110ec:	ldr	x21, [sp, #16]
  4110f0:	ldp	x29, x30, [sp], #48
  4110f4:	ret
  4110f8:	stp	x29, x30, [sp, #-64]!
  4110fc:	str	x23, [sp, #16]
  411100:	stp	x22, x21, [sp, #32]
  411104:	stp	x20, x19, [sp, #48]
  411108:	mov	x29, sp
  41110c:	cbz	x0, 411154 <wcrtomb@plt+0xc354>
  411110:	mov	x19, x1
  411114:	mov	x20, x0
  411118:	ldr	x0, [x20, #8]
  41111c:	bl	4115ec <wcrtomb@plt+0xc7ec>
  411120:	cbz	x0, 41114c <wcrtomb@plt+0xc34c>
  411124:	ldr	x22, [x20, #16]
  411128:	ldr	x23, [x0, #16]
  41112c:	ldr	x21, [x0]
  411130:	mov	x0, x22
  411134:	bl	404170 <strlen@plt>
  411138:	mov	x3, x0
  41113c:	mov	x0, x19
  411140:	mov	x1, x21
  411144:	mov	x2, x22
  411148:	blr	x23
  41114c:	ldr	x20, [x20]
  411150:	cbnz	x20, 411118 <wcrtomb@plt+0xc318>
  411154:	ldp	x20, x19, [sp, #48]
  411158:	ldp	x22, x21, [sp, #32]
  41115c:	ldr	x23, [sp, #16]
  411160:	ldp	x29, x30, [sp], #64
  411164:	ret
  411168:	stp	x29, x30, [sp, #-80]!
  41116c:	str	x25, [sp, #16]
  411170:	stp	x24, x23, [sp, #32]
  411174:	stp	x22, x21, [sp, #48]
  411178:	stp	x20, x19, [sp, #64]
  41117c:	ldr	x25, [x1]
  411180:	ldp	x9, x8, [x0, #8]
  411184:	mov	x21, x3
  411188:	mov	x20, x2
  41118c:	mov	x19, x1
  411190:	add	x8, x8, x9
  411194:	mov	x22, x25
  411198:	mov	x29, sp
  41119c:	ldrb	w9, [x22]
  4111a0:	cmp	w9, #0x20
  4111a4:	b.eq	4111b0 <wcrtomb@plt+0xc3b0>  // b.none
  4111a8:	cmp	w9, #0x9
  4111ac:	b.ne	4111b8 <wcrtomb@plt+0xc3b8>  // b.any
  4111b0:	add	x22, x22, #0x1
  4111b4:	b	41119c <wcrtomb@plt+0xc39c>
  4111b8:	sub	w10, w9, #0x30
  4111bc:	cmp	w10, #0xa
  4111c0:	b.cs	411228 <wcrtomb@plt+0xc428>  // b.hs, b.nlast
  4111c4:	add	x1, x29, #0x18
  4111c8:	mov	w2, #0xa                   	// #10
  4111cc:	mov	x0, x22
  4111d0:	sub	x24, x8, x25
  4111d4:	bl	404820 <strtoumax@plt>
  4111d8:	cmp	x24, x0
  4111dc:	b.cs	411248 <wcrtomb@plt+0xc448>  // b.hs, b.nlast
  4111e0:	ldr	w9, [x29, #24]
  4111e4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4111e8:	ldr	x8, [x8, #496]
  4111ec:	sub	w19, w9, w22
  4111f0:	cbz	x8, 4111f8 <wcrtomb@plt+0xc3f8>
  4111f4:	blr	x8
  4111f8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4111fc:	add	x1, x1, #0xf28
  411200:	mov	w2, #0x5                   	// #5
  411204:	mov	x0, xzr
  411208:	bl	404bd0 <dcgettext@plt>
  41120c:	mov	x2, x0
  411210:	mov	w0, wzr
  411214:	mov	w1, wzr
  411218:	mov	w3, w19
  41121c:	mov	x4, x22
  411220:	bl	4041d0 <error@plt>
  411224:	b	411354 <wcrtomb@plt+0xc554>
  411228:	cbz	w9, 4112e0 <wcrtomb@plt+0xc4e0>
  41122c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  411230:	ldr	x8, [x8, #496]
  411234:	cbz	x8, 41123c <wcrtomb@plt+0xc43c>
  411238:	blr	x8
  41123c:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  411240:	add	x1, x1, #0xefe
  411244:	b	411338 <wcrtomb@plt+0xc538>
  411248:	ldr	x8, [x29, #24]
  41124c:	mov	x23, x0
  411250:	mov	x9, xzr
  411254:	ldrb	w10, [x8, x9]
  411258:	cmp	w10, #0x20
  41125c:	b.eq	411268 <wcrtomb@plt+0xc468>  // b.none
  411260:	cmp	w10, #0x9
  411264:	b.ne	411270 <wcrtomb@plt+0xc470>  // b.any
  411268:	add	x9, x9, #0x1
  41126c:	b	411254 <wcrtomb@plt+0xc454>
  411270:	cbz	x9, 4112e8 <wcrtomb@plt+0xc4e8>
  411274:	add	x22, x8, x9
  411278:	mov	w1, #0x3d                  	// #61
  41127c:	mov	x0, x22
  411280:	bl	404a50 <strchr@plt>
  411284:	cbz	x0, 411304 <wcrtomb@plt+0xc504>
  411288:	add	x23, x25, x23
  41128c:	mov	x24, x0
  411290:	cmp	x0, x23
  411294:	b.cs	411304 <wcrtomb@plt+0xc504>  // b.hs, b.nlast
  411298:	ldurb	w8, [x23, #-1]
  41129c:	cmp	w8, #0xa
  4112a0:	b.ne	411320 <wcrtomb@plt+0xc520>  // b.any
  4112a4:	mov	x2, x24
  4112a8:	sub	x8, x23, x24
  4112ac:	sturb	wzr, [x23, #-1]
  4112b0:	strb	wzr, [x2], #1
  4112b4:	sub	x3, x8, #0x2
  4112b8:	mov	x0, x21
  4112bc:	mov	x1, x22
  4112c0:	blr	x20
  4112c4:	mov	w8, #0x3d                  	// #61
  4112c8:	mov	w9, #0xa                   	// #10
  4112cc:	mov	w0, #0x1                   	// #1
  4112d0:	strb	w8, [x24]
  4112d4:	sturb	w9, [x23, #-1]
  4112d8:	str	x23, [x19]
  4112dc:	b	411364 <wcrtomb@plt+0xc564>
  4112e0:	mov	w0, wzr
  4112e4:	b	411364 <wcrtomb@plt+0xc564>
  4112e8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4112ec:	ldr	x8, [x8, #496]
  4112f0:	cbz	x8, 4112f8 <wcrtomb@plt+0xc4f8>
  4112f4:	blr	x8
  4112f8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4112fc:	add	x1, x1, #0xf53
  411300:	b	411338 <wcrtomb@plt+0xc538>
  411304:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  411308:	ldr	x8, [x8, #496]
  41130c:	cbz	x8, 411314 <wcrtomb@plt+0xc514>
  411310:	blr	x8
  411314:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  411318:	add	x1, x1, #0xf89
  41131c:	b	411338 <wcrtomb@plt+0xc538>
  411320:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  411324:	ldr	x8, [x8, #496]
  411328:	cbz	x8, 411330 <wcrtomb@plt+0xc530>
  41132c:	blr	x8
  411330:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  411334:	add	x1, x1, #0xfb7
  411338:	mov	w2, #0x5                   	// #5
  41133c:	mov	x0, xzr
  411340:	bl	404bd0 <dcgettext@plt>
  411344:	mov	x2, x0
  411348:	mov	w0, wzr
  41134c:	mov	w1, wzr
  411350:	bl	4041d0 <error@plt>
  411354:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  411358:	mov	w9, #0x2                   	// #2
  41135c:	mov	w0, wzr
  411360:	str	w9, [x8, #2944]
  411364:	ldp	x20, x19, [sp, #64]
  411368:	ldp	x22, x21, [sp, #48]
  41136c:	ldp	x24, x23, [sp, #32]
  411370:	ldr	x25, [sp, #16]
  411374:	ldp	x29, x30, [sp], #80
  411378:	ret
  41137c:	stp	x29, x30, [sp, #-48]!
  411380:	stp	x22, x21, [sp, #16]
  411384:	mov	x22, x0
  411388:	mov	x0, x1
  41138c:	stp	x20, x19, [sp, #32]
  411390:	mov	x29, sp
  411394:	mov	x20, x3
  411398:	mov	x21, x2
  41139c:	mov	x19, x1
  4113a0:	bl	4103a8 <wcrtomb@plt+0xb5a8>
  4113a4:	tbnz	w0, #0, 4113b4 <wcrtomb@plt+0xc5b4>
  4113a8:	mov	x0, x19
  4113ac:	bl	411668 <wcrtomb@plt+0xc868>
  4113b0:	tbz	w0, #0, 4113c4 <wcrtomb@plt+0xc5c4>
  4113b4:	ldp	x20, x19, [sp, #32]
  4113b8:	ldp	x22, x21, [sp, #16]
  4113bc:	ldp	x29, x30, [sp], #48
  4113c0:	ret
  4113c4:	mov	x0, x19
  4113c8:	bl	4115ec <wcrtomb@plt+0xc7ec>
  4113cc:	cbz	x0, 4113f4 <wcrtomb@plt+0xc5f4>
  4113d0:	ldr	x4, [x0, #16]
  4113d4:	mov	x0, x22
  4113d8:	mov	x1, x19
  4113dc:	mov	x2, x21
  4113e0:	mov	x3, x20
  4113e4:	ldp	x20, x19, [sp, #32]
  4113e8:	ldp	x22, x21, [sp, #16]
  4113ec:	ldp	x29, x30, [sp], #48
  4113f0:	br	x4
  4113f4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4113f8:	ldrb	w8, [x8, #154]
  4113fc:	tbz	w8, #1, 4113b4 <wcrtomb@plt+0xc5b4>
  411400:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  411404:	ldr	x8, [x8, #496]
  411408:	cbz	x8, 411410 <wcrtomb@plt+0xc610>
  41140c:	blr	x8
  411410:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  411414:	add	x1, x1, #0xfe2
  411418:	mov	w2, #0x5                   	// #5
  41141c:	mov	x0, xzr
  411420:	bl	404bd0 <dcgettext@plt>
  411424:	mov	x3, x19
  411428:	ldp	x20, x19, [sp, #32]
  41142c:	ldp	x22, x21, [sp, #16]
  411430:	mov	x2, x0
  411434:	mov	w0, wzr
  411438:	mov	w1, wzr
  41143c:	ldp	x29, x30, [sp], #48
  411440:	b	4041d0 <error@plt>
  411444:	sub	sp, sp, #0x40
  411448:	stp	x29, x30, [sp, #16]
  41144c:	stp	x22, x21, [sp, #32]
  411450:	stp	x20, x19, [sp, #48]
  411454:	ldr	x8, [x0, #8]
  411458:	add	x29, sp, #0x10
  41145c:	cbz	x8, 4114c8 <wcrtomb@plt+0xc6c8>
  411460:	ldr	x8, [x0, #16]
  411464:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  411468:	ldr	x20, [x21, #1672]
  41146c:	mov	x19, x0
  411470:	add	x8, x8, #0x200
  411474:	str	x8, [sp, #8]
  411478:	cbz	x20, 41149c <wcrtomb@plt+0xc69c>
  41147c:	ldp	x22, x0, [x20]
  411480:	bl	4049b0 <free@plt>
  411484:	ldr	x0, [x20, #16]
  411488:	bl	4049b0 <free@plt>
  41148c:	mov	x0, x20
  411490:	bl	4049b0 <free@plt>
  411494:	mov	x20, x22
  411498:	cbnz	x22, 41147c <wcrtomb@plt+0xc67c>
  41149c:	str	xzr, [x21, #1672]
  4114a0:	adrp	x20, 411000 <wcrtomb@plt+0xc200>
  4114a4:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4114a8:	add	x20, x20, #0x4dc
  4114ac:	add	x21, x21, #0x688
  4114b0:	add	x1, sp, #0x8
  4114b4:	mov	x0, x19
  4114b8:	mov	x2, x20
  4114bc:	mov	x3, x21
  4114c0:	bl	411168 <wcrtomb@plt+0xc368>
  4114c4:	tbnz	w0, #0, 4114b0 <wcrtomb@plt+0xc6b0>
  4114c8:	ldp	x20, x19, [sp, #48]
  4114cc:	ldp	x22, x21, [sp, #32]
  4114d0:	ldp	x29, x30, [sp, #16]
  4114d4:	add	sp, sp, #0x40
  4114d8:	ret
  4114dc:	stp	x29, x30, [sp, #-48]!
  4114e0:	stp	x22, x21, [sp, #16]
  4114e4:	mov	x22, x0
  4114e8:	mov	x0, x1
  4114ec:	stp	x20, x19, [sp, #32]
  4114f0:	mov	x29, sp
  4114f4:	mov	x20, x3
  4114f8:	mov	x19, x2
  4114fc:	mov	x21, x1
  411500:	bl	4115ec <wcrtomb@plt+0xc7ec>
  411504:	cbz	x0, 411510 <wcrtomb@plt+0xc710>
  411508:	ldrb	w8, [x0, #24]
  41150c:	tbnz	w8, #1, 41152c <wcrtomb@plt+0xc72c>
  411510:	mov	x0, x22
  411514:	mov	x1, x21
  411518:	mov	x2, x19
  41151c:	ldp	x20, x19, [sp, #32]
  411520:	ldp	x22, x21, [sp, #16]
  411524:	ldp	x29, x30, [sp], #48
  411528:	b	412844 <wcrtomb@plt+0xda44>
  41152c:	ldr	x4, [x0, #16]
  411530:	mov	x0, x22
  411534:	mov	x1, x21
  411538:	mov	x2, x19
  41153c:	mov	x3, x20
  411540:	ldp	x20, x19, [sp, #32]
  411544:	ldp	x22, x21, [sp, #16]
  411548:	ldp	x29, x30, [sp], #48
  41154c:	br	x4
  411550:	stp	x29, x30, [sp, #-64]!
  411554:	stp	x22, x21, [sp, #32]
  411558:	stp	x20, x19, [sp, #48]
  41155c:	ldr	x8, [x1, #360]
  411560:	str	x23, [sp, #16]
  411564:	mov	x29, sp
  411568:	cbz	x8, 411580 <wcrtomb@plt+0xc780>
  41156c:	ldp	x20, x19, [sp, #48]
  411570:	ldp	x22, x21, [sp, #32]
  411574:	ldr	x23, [sp, #16]
  411578:	ldp	x29, x30, [sp], #64
  41157c:	ret
  411580:	mov	x19, x2
  411584:	mov	x20, x1
  411588:	mov	x21, x0
  41158c:	bl	4115ec <wcrtomb@plt+0xc7ec>
  411590:	cbz	x0, 41156c <wcrtomb@plt+0xc76c>
  411594:	ldr	x8, [x0, #8]
  411598:	mov	x22, x0
  41159c:	cbz	x8, 41156c <wcrtomb@plt+0xc76c>
  4115a0:	mov	x0, x21
  4115a4:	bl	4103a8 <wcrtomb@plt+0xb5a8>
  4115a8:	tbnz	w0, #0, 41156c <wcrtomb@plt+0xc76c>
  4115ac:	add	x23, x20, #0x158
  4115b0:	mov	x0, x23
  4115b4:	bl	410ca0 <wcrtomb@plt+0xbea0>
  4115b8:	mov	x0, x21
  4115bc:	bl	411668 <wcrtomb@plt+0xc868>
  4115c0:	tbnz	w0, #0, 41156c <wcrtomb@plt+0xc76c>
  4115c4:	ldr	x4, [x22, #8]
  4115c8:	mov	x0, x20
  4115cc:	mov	x1, x21
  4115d0:	mov	x2, x23
  4115d4:	mov	x3, x19
  4115d8:	ldp	x20, x19, [sp, #48]
  4115dc:	ldp	x22, x21, [sp, #32]
  4115e0:	ldr	x23, [sp, #16]
  4115e4:	ldp	x29, x30, [sp], #64
  4115e8:	br	x4
  4115ec:	stp	x29, x30, [sp, #-48]!
  4115f0:	str	x21, [sp, #16]
  4115f4:	stp	x20, x19, [sp, #32]
  4115f8:	adrp	x19, 44d000 <_obstack_memory_used@@Base+0x11808>
  4115fc:	adrp	x21, 44c000 <_obstack_memory_used@@Base+0x10808>
  411600:	mov	x20, x0
  411604:	add	x19, x19, #0x110
  411608:	add	x21, x21, #0x6c9
  41160c:	mov	x29, sp
  411610:	ldrb	w8, [x19, #28]
  411614:	cbz	w8, 411638 <wcrtomb@plt+0xc838>
  411618:	mov	x0, x21
  41161c:	bl	404170 <strlen@plt>
  411620:	mov	x2, x0
  411624:	mov	x0, x21
  411628:	mov	x1, x20
  41162c:	bl	404580 <strncmp@plt>
  411630:	cbnz	w0, 411648 <wcrtomb@plt+0xc848>
  411634:	b	411654 <wcrtomb@plt+0xc854>
  411638:	mov	x0, x21
  41163c:	mov	x1, x20
  411640:	bl	404900 <strcmp@plt>
  411644:	cbz	w0, 411654 <wcrtomb@plt+0xc854>
  411648:	ldr	x21, [x19, #32]!
  41164c:	cbnz	x21, 411610 <wcrtomb@plt+0xc810>
  411650:	mov	x19, xzr
  411654:	mov	x0, x19
  411658:	ldp	x20, x19, [sp, #32]
  41165c:	ldr	x21, [sp, #16]
  411660:	ldp	x29, x30, [sp], #48
  411664:	ret
  411668:	stp	x29, x30, [sp, #-32]!
  41166c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  411670:	stp	x20, x19, [sp, #16]
  411674:	ldr	x20, [x8, #1680]
  411678:	mov	x29, sp
  41167c:	cbz	x20, 41169c <wcrtomb@plt+0xc89c>
  411680:	mov	x19, x0
  411684:	ldr	x0, [x20, #8]
  411688:	mov	x1, x19
  41168c:	bl	404900 <strcmp@plt>
  411690:	cbz	w0, 4116a4 <wcrtomb@plt+0xc8a4>
  411694:	ldr	x20, [x20]
  411698:	cbnz	x20, 411684 <wcrtomb@plt+0xc884>
  41169c:	mov	w0, wzr
  4116a0:	b	4116a8 <wcrtomb@plt+0xc8a8>
  4116a4:	mov	w0, #0x1                   	// #1
  4116a8:	ldp	x20, x19, [sp, #16]
  4116ac:	ldp	x29, x30, [sp], #32
  4116b0:	ret
  4116b4:	stp	x29, x30, [sp, #-64]!
  4116b8:	bic	x8, x2, x2, asr #63
  4116bc:	stp	x22, x21, [sp, #32]
  4116c0:	add	x22, x8, #0x200
  4116c4:	stp	x24, x23, [sp, #16]
  4116c8:	stp	x20, x19, [sp, #48]
  4116cc:	mov	x19, x0
  4116d0:	str	x22, [x0, #8]
  4116d4:	add	x0, x8, #0x201
  4116d8:	mov	x29, sp
  4116dc:	mov	x20, x1
  4116e0:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4116e4:	mov	x23, xzr
  4116e8:	mov	w24, #0x200                 	// #512
  4116ec:	str	x0, [x19, #16]
  4116f0:	strb	wzr, [x0, x22]
  4116f4:	cmp	x22, #0x200
  4116f8:	csel	x21, x22, x24, cc  // cc = lo, ul, last
  4116fc:	cbz	x20, 411748 <wcrtomb@plt+0xc948>
  411700:	ldr	x8, [x19, #16]
  411704:	mov	x1, x20
  411708:	mov	x2, x21
  41170c:	add	x0, x8, x23
  411710:	bl	4040f0 <memcpy@plt>
  411714:	mov	x0, x20
  411718:	bl	40587c <wcrtomb@plt+0xa7c>
  41171c:	bl	405574 <wcrtomb@plt+0x774>
  411720:	sub	x22, x22, x21
  411724:	mov	x20, x0
  411728:	cmp	x22, #0x0
  41172c:	add	x23, x21, x23
  411730:	b.gt	4116f4 <wcrtomb@plt+0xc8f4>
  411734:	ldp	x20, x19, [sp, #48]
  411738:	ldp	x22, x21, [sp, #32]
  41173c:	ldp	x24, x23, [sp, #16]
  411740:	ldp	x29, x30, [sp], #64
  411744:	ret
  411748:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41174c:	ldr	x8, [x8, #496]
  411750:	cbz	x8, 411758 <wcrtomb@plt+0xc958>
  411754:	blr	x8
  411758:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  41175c:	add	x1, x1, #0x582
  411760:	mov	w2, #0x5                   	// #5
  411764:	mov	x0, xzr
  411768:	bl	404bd0 <dcgettext@plt>
  41176c:	mov	x2, x0
  411770:	mov	w0, wzr
  411774:	mov	w1, wzr
  411778:	bl	4041d0 <error@plt>
  41177c:	bl	40d698 <wcrtomb@plt+0x8898>
  411780:	str	xzr, [x0, #24]
  411784:	ret
  411788:	stp	x29, x30, [sp, #-32]!
  41178c:	stp	x20, x19, [sp, #16]
  411790:	ldr	x8, [x0, #16]
  411794:	mov	x29, sp
  411798:	cbz	x8, 4117a8 <wcrtomb@plt+0xc9a8>
  41179c:	ldp	x20, x19, [sp, #16]
  4117a0:	ldp	x29, x30, [sp], #32
  4117a4:	ret
  4117a8:	mov	x19, x0
  4117ac:	mov	x20, x1
  4117b0:	bl	410ca0 <wcrtomb@plt+0xbea0>
  4117b4:	mov	x0, x20
  4117b8:	bl	404170 <strlen@plt>
  4117bc:	ldr	x8, [x19, #24]
  4117c0:	add	x8, x8, x0
  4117c4:	mov	x0, x20
  4117c8:	str	x8, [x19, #24]
  4117cc:	bl	404170 <strlen@plt>
  4117d0:	mov	x2, x0
  4117d4:	mov	x0, x19
  4117d8:	mov	x1, x20
  4117dc:	ldp	x20, x19, [sp, #16]
  4117e0:	ldp	x29, x30, [sp], #32
  4117e4:	b	4117e8 <wcrtomb@plt+0xc9e8>
  4117e8:	stp	x29, x30, [sp, #-48]!
  4117ec:	stp	x22, x21, [sp, #16]
  4117f0:	stp	x20, x19, [sp, #32]
  4117f4:	ldr	x21, [x0]
  4117f8:	mov	x20, x0
  4117fc:	mov	x19, x2
  411800:	mov	x22, x1
  411804:	ldp	x0, x8, [x21, #24]
  411808:	mov	x29, sp
  41180c:	sub	x8, x8, x0
  411810:	cmp	x8, x2
  411814:	b.cs	411828 <wcrtomb@plt+0xca28>  // b.hs, b.nlast
  411818:	mov	x0, x21
  41181c:	mov	x1, x19
  411820:	bl	43b5e8 <_obstack_newchunk@@Base>
  411824:	ldr	x0, [x21, #24]
  411828:	mov	x1, x22
  41182c:	mov	x2, x19
  411830:	bl	4040f0 <memcpy@plt>
  411834:	ldr	x8, [x21, #24]
  411838:	add	x8, x8, x19
  41183c:	str	x8, [x21, #24]
  411840:	ldr	x8, [x20, #8]
  411844:	add	x8, x8, x19
  411848:	str	x8, [x20, #8]
  41184c:	ldp	x20, x19, [sp, #32]
  411850:	ldp	x22, x21, [sp, #16]
  411854:	ldp	x29, x30, [sp], #48
  411858:	ret
  41185c:	sub	sp, sp, #0x60
  411860:	stp	x29, x30, [sp, #32]
  411864:	stp	x24, x23, [sp, #48]
  411868:	stp	x22, x21, [sp, #64]
  41186c:	stp	x20, x19, [sp, #80]
  411870:	ldr	x8, [x0, #16]
  411874:	add	x29, sp, #0x20
  411878:	cbz	x8, 411884 <wcrtomb@plt+0xca84>
  41187c:	mov	w0, wzr
  411880:	b	411970 <wcrtomb@plt+0xcb70>
  411884:	mov	x20, x0
  411888:	mov	x19, x1
  41188c:	bl	410ca0 <wcrtomb@plt+0xbea0>
  411890:	mov	x0, x19
  411894:	bl	404170 <strlen@plt>
  411898:	ldr	x9, [x20, #24]
  41189c:	add	x10, sp, #0x8
  4118a0:	mov	x8, xzr
  4118a4:	add	x24, x10, #0x14
  4118a8:	add	x9, x0, x9
  4118ac:	add	x23, x9, #0x3
  4118b0:	add	x0, x23, x8
  4118b4:	add	x1, sp, #0x8
  4118b8:	mov	x22, x8
  4118bc:	bl	43401c <argp_parse@@Base+0x5360>
  4118c0:	sub	x8, x24, x0
  4118c4:	cmp	x8, x22
  4118c8:	b.ne	4118b0 <wcrtomb@plt+0xcab0>  // b.any
  4118cc:	mov	x21, x0
  4118d0:	mov	x0, x19
  4118d4:	bl	404170 <strlen@plt>
  4118d8:	ldr	x23, [x20]
  4118dc:	add	x24, x0, x22
  4118e0:	add	x22, x24, #0x2
  4118e4:	ldp	x8, x9, [x23, #24]
  4118e8:	sub	x9, x9, x8
  4118ec:	cmp	x9, x22
  4118f0:	b.cs	411904 <wcrtomb@plt+0xcb04>  // b.hs, b.nlast
  4118f4:	mov	x0, x23
  4118f8:	mov	x1, x22
  4118fc:	bl	43b5e8 <_obstack_newchunk@@Base>
  411900:	ldr	x8, [x23, #24]
  411904:	add	x8, x8, x22
  411908:	str	x8, [x23, #24]
  41190c:	ldr	x8, [x20, #8]
  411910:	mov	w1, #0xa                   	// #10
  411914:	mov	x0, x20
  411918:	add	x8, x8, x22
  41191c:	str	x8, [x20, #8]
  411920:	bl	411988 <wcrtomb@plt+0xcb88>
  411924:	ldr	x8, [x20]
  411928:	ldr	x2, [x20, #24]
  41192c:	ldr	x8, [x8, #24]
  411930:	sub	x8, x8, x2
  411934:	sub	x8, x8, x24
  411938:	sub	x20, x8, #0x3
  41193c:	add	x0, x20, x22
  411940:	mov	x1, x20
  411944:	bl	404100 <memmove@plt>
  411948:	mov	x0, x20
  41194c:	mov	x1, x21
  411950:	bl	4043c0 <stpcpy@plt>
  411954:	mov	w8, #0x20                  	// #32
  411958:	strb	w8, [x0], #1
  41195c:	mov	x1, x19
  411960:	bl	4043c0 <stpcpy@plt>
  411964:	mov	w8, #0x3d                  	// #61
  411968:	strb	w8, [x0]
  41196c:	mov	w0, #0x1                   	// #1
  411970:	ldp	x20, x19, [sp, #80]
  411974:	ldp	x22, x21, [sp, #64]
  411978:	ldp	x24, x23, [sp, #48]
  41197c:	ldp	x29, x30, [sp, #32]
  411980:	add	sp, sp, #0x60
  411984:	ret
  411988:	stp	x29, x30, [sp, #-48]!
  41198c:	stp	x20, x19, [sp, #32]
  411990:	ldr	x20, [x0]
  411994:	str	x21, [sp, #16]
  411998:	mov	x19, x0
  41199c:	mov	w21, w1
  4119a0:	ldp	x8, x9, [x20, #24]
  4119a4:	mov	x29, sp
  4119a8:	cmp	x9, x8
  4119ac:	b.ne	4119c0 <wcrtomb@plt+0xcbc0>  // b.any
  4119b0:	mov	w1, #0x1                   	// #1
  4119b4:	mov	x0, x20
  4119b8:	bl	43b5e8 <_obstack_newchunk@@Base>
  4119bc:	ldr	x8, [x20, #24]
  4119c0:	add	x9, x8, #0x1
  4119c4:	str	x9, [x20, #24]
  4119c8:	strb	w21, [x8]
  4119cc:	ldr	x8, [x19, #8]
  4119d0:	ldr	x21, [sp, #16]
  4119d4:	add	x8, x8, #0x1
  4119d8:	str	x8, [x19, #8]
  4119dc:	ldp	x20, x19, [sp, #32]
  4119e0:	ldp	x29, x30, [sp], #48
  4119e4:	ret
  4119e8:	sub	sp, sp, #0x50
  4119ec:	stp	x29, x30, [sp, #32]
  4119f0:	str	x21, [sp, #48]
  4119f4:	stp	x20, x19, [sp, #64]
  4119f8:	ldp	x8, x9, [x0, #216]
  4119fc:	mov	x19, x2
  411a00:	mov	x20, x1
  411a04:	mov	x2, sp
  411a08:	mov	x0, x8
  411a0c:	mov	x1, x9
  411a10:	add	x29, sp, #0x20
  411a14:	bl	418e2c <wcrtomb@plt+0x1402c>
  411a18:	mov	x21, x0
  411a1c:	bl	404170 <strlen@plt>
  411a20:	mov	x3, x0
  411a24:	mov	x0, x19
  411a28:	mov	x1, x20
  411a2c:	mov	x2, x21
  411a30:	bl	41294c <wcrtomb@plt+0xdb4c>
  411a34:	ldp	x20, x19, [sp, #64]
  411a38:	ldr	x21, [sp, #48]
  411a3c:	ldp	x29, x30, [sp, #32]
  411a40:	add	sp, sp, #0x50
  411a44:	ret
  411a48:	sub	sp, sp, #0x30
  411a4c:	mov	x8, x1
  411a50:	str	x19, [sp, #32]
  411a54:	mov	x19, x0
  411a58:	mov	x0, sp
  411a5c:	mov	x1, x2
  411a60:	mov	x2, x8
  411a64:	stp	x29, x30, [sp, #16]
  411a68:	add	x29, sp, #0x10
  411a6c:	bl	412b00 <wcrtomb@plt+0xdd00>
  411a70:	tbz	w0, #0, 411a7c <wcrtomb@plt+0xcc7c>
  411a74:	ldr	q0, [sp]
  411a78:	stur	q0, [x19, #216]
  411a7c:	ldr	x19, [sp, #32]
  411a80:	ldp	x29, x30, [sp, #16]
  411a84:	add	sp, sp, #0x30
  411a88:	ret
  411a8c:	ret
  411a90:	ret
  411a94:	sub	sp, sp, #0x50
  411a98:	stp	x29, x30, [sp, #32]
  411a9c:	str	x21, [sp, #48]
  411aa0:	stp	x20, x19, [sp, #64]
  411aa4:	ldp	x8, x9, [x0, #248]
  411aa8:	mov	x19, x2
  411aac:	mov	x20, x1
  411ab0:	mov	x2, sp
  411ab4:	mov	x0, x8
  411ab8:	mov	x1, x9
  411abc:	add	x29, sp, #0x20
  411ac0:	bl	418e2c <wcrtomb@plt+0x1402c>
  411ac4:	mov	x21, x0
  411ac8:	bl	404170 <strlen@plt>
  411acc:	mov	x3, x0
  411ad0:	mov	x0, x19
  411ad4:	mov	x1, x20
  411ad8:	mov	x2, x21
  411adc:	bl	41294c <wcrtomb@plt+0xdb4c>
  411ae0:	ldp	x20, x19, [sp, #64]
  411ae4:	ldr	x21, [sp, #48]
  411ae8:	ldp	x29, x30, [sp, #32]
  411aec:	add	sp, sp, #0x50
  411af0:	ret
  411af4:	sub	sp, sp, #0x30
  411af8:	mov	x8, x1
  411afc:	str	x19, [sp, #32]
  411b00:	mov	x19, x0
  411b04:	mov	x0, sp
  411b08:	mov	x1, x2
  411b0c:	mov	x2, x8
  411b10:	stp	x29, x30, [sp, #16]
  411b14:	add	x29, sp, #0x10
  411b18:	bl	412b00 <wcrtomb@plt+0xdd00>
  411b1c:	tbz	w0, #0, 411b28 <wcrtomb@plt+0xcd28>
  411b20:	ldr	q0, [sp]
  411b24:	stur	q0, [x19, #248]
  411b28:	ldr	x19, [sp, #32]
  411b2c:	ldp	x29, x30, [sp, #16]
  411b30:	add	sp, sp, #0x30
  411b34:	ret
  411b38:	sub	sp, sp, #0x50
  411b3c:	stp	x29, x30, [sp, #32]
  411b40:	stp	x20, x19, [sp, #64]
  411b44:	ldr	w0, [x0, #116]
  411b48:	mov	x19, x2
  411b4c:	mov	x20, x1
  411b50:	add	x3, sp, #0x8
  411b54:	mov	w2, #0xffffffff            	// #-1
  411b58:	mov	x1, xzr
  411b5c:	str	x21, [sp, #48]
  411b60:	add	x29, sp, #0x20
  411b64:	bl	418c74 <wcrtomb@plt+0x13e74>
  411b68:	mov	x21, x0
  411b6c:	bl	404170 <strlen@plt>
  411b70:	mov	x3, x0
  411b74:	mov	x0, x19
  411b78:	mov	x1, x20
  411b7c:	mov	x2, x21
  411b80:	bl	41294c <wcrtomb@plt+0xdb4c>
  411b84:	ldp	x20, x19, [sp, #64]
  411b88:	ldr	x21, [sp, #48]
  411b8c:	ldp	x29, x30, [sp, #32]
  411b90:	add	sp, sp, #0x50
  411b94:	ret
  411b98:	stp	x29, x30, [sp, #-32]!
  411b9c:	mov	x29, sp
  411ba0:	mov	x8, x2
  411ba4:	str	x19, [sp, #16]
  411ba8:	mov	x3, x1
  411bac:	mov	x19, x0
  411bb0:	add	x0, x29, #0x18
  411bb4:	mov	w2, #0xffffffff            	// #-1
  411bb8:	mov	x1, x8
  411bbc:	bl	412c6c <wcrtomb@plt+0xde6c>
  411bc0:	tbz	w0, #0, 411bcc <wcrtomb@plt+0xcdcc>
  411bc4:	ldr	x8, [x29, #24]
  411bc8:	str	w8, [x19, #116]
  411bcc:	ldr	x19, [sp, #16]
  411bd0:	ldp	x29, x30, [sp], #32
  411bd4:	ret
  411bd8:	ldr	x0, [x0, #40]
  411bdc:	b	410cf4 <wcrtomb@plt+0xbef4>
  411be0:	add	x0, x0, #0x28
  411be4:	mov	x1, x2
  411be8:	b	412d54 <wcrtomb@plt+0xdf54>
  411bec:	ldr	x0, [x0, #24]
  411bf0:	b	410cf4 <wcrtomb@plt+0xbef4>
  411bf4:	add	x0, x0, #0x18
  411bf8:	mov	x1, x2
  411bfc:	b	412d54 <wcrtomb@plt+0xdf54>
  411c00:	sub	sp, sp, #0x50
  411c04:	add	x8, x3, #0x8
  411c08:	add	x10, x0, #0xf0
  411c0c:	cmp	x3, #0x0
  411c10:	stp	x29, x30, [sp, #32]
  411c14:	stp	x20, x19, [sp, #64]
  411c18:	add	x9, x0, #0xe8
  411c1c:	csel	x8, x10, x8, eq  // eq = none
  411c20:	csel	x9, x9, x3, eq  // eq = none
  411c24:	ldr	x8, [x8]
  411c28:	ldr	x0, [x9]
  411c2c:	mov	x19, x2
  411c30:	mov	x20, x1
  411c34:	mov	x2, sp
  411c38:	mov	x1, x8
  411c3c:	str	x21, [sp, #48]
  411c40:	add	x29, sp, #0x20
  411c44:	bl	418e2c <wcrtomb@plt+0x1402c>
  411c48:	mov	x21, x0
  411c4c:	bl	404170 <strlen@plt>
  411c50:	mov	x3, x0
  411c54:	mov	x0, x19
  411c58:	mov	x1, x20
  411c5c:	mov	x2, x21
  411c60:	bl	41294c <wcrtomb@plt+0xdb4c>
  411c64:	ldp	x20, x19, [sp, #64]
  411c68:	ldr	x21, [sp, #48]
  411c6c:	ldp	x29, x30, [sp, #32]
  411c70:	add	sp, sp, #0x50
  411c74:	ret
  411c78:	sub	sp, sp, #0x30
  411c7c:	mov	x8, x1
  411c80:	str	x19, [sp, #32]
  411c84:	mov	x19, x0
  411c88:	mov	x0, sp
  411c8c:	mov	x1, x2
  411c90:	mov	x2, x8
  411c94:	stp	x29, x30, [sp, #16]
  411c98:	add	x29, sp, #0x10
  411c9c:	bl	412b00 <wcrtomb@plt+0xdd00>
  411ca0:	tbz	w0, #0, 411cac <wcrtomb@plt+0xceac>
  411ca4:	ldr	q0, [sp]
  411ca8:	stur	q0, [x19, #232]
  411cac:	ldr	x19, [sp, #32]
  411cb0:	ldp	x29, x30, [sp, #16]
  411cb4:	add	sp, sp, #0x30
  411cb8:	ret
  411cbc:	ldr	x0, [x0, #8]
  411cc0:	b	410cf4 <wcrtomb@plt+0xbef4>
  411cc4:	ldrb	w8, [x0, #321]
  411cc8:	cbz	w8, 411cd0 <wcrtomb@plt+0xced0>
  411ccc:	ret
  411cd0:	mov	x1, x2
  411cd4:	b	412dac <wcrtomb@plt+0xdfac>
  411cd8:	sub	sp, sp, #0x50
  411cdc:	stp	x29, x30, [sp, #32]
  411ce0:	stp	x20, x19, [sp, #64]
  411ce4:	ldr	x0, [x0, #136]
  411ce8:	mov	x19, x2
  411cec:	mov	x20, x1
  411cf0:	add	x3, sp, #0x8
  411cf4:	mov	x2, #0xffffffffffffffff    	// #-1
  411cf8:	mov	x1, xzr
  411cfc:	str	x21, [sp, #48]
  411d00:	add	x29, sp, #0x20
  411d04:	bl	418c74 <wcrtomb@plt+0x13e74>
  411d08:	mov	x21, x0
  411d0c:	bl	404170 <strlen@plt>
  411d10:	mov	x3, x0
  411d14:	mov	x0, x19
  411d18:	mov	x1, x20
  411d1c:	mov	x2, x21
  411d20:	bl	41294c <wcrtomb@plt+0xdb4c>
  411d24:	ldp	x20, x19, [sp, #64]
  411d28:	ldr	x21, [sp, #48]
  411d2c:	ldp	x29, x30, [sp, #32]
  411d30:	add	sp, sp, #0x50
  411d34:	ret
  411d38:	stp	x29, x30, [sp, #-32]!
  411d3c:	mov	x29, sp
  411d40:	mov	x8, x2
  411d44:	str	x19, [sp, #16]
  411d48:	mov	x3, x1
  411d4c:	mov	x19, x0
  411d50:	add	x0, x29, #0x18
  411d54:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  411d58:	mov	x1, x8
  411d5c:	bl	412c6c <wcrtomb@plt+0xde6c>
  411d60:	tbz	w0, #0, 411d6c <wcrtomb@plt+0xcf6c>
  411d64:	ldr	x8, [x29, #24]
  411d68:	str	x8, [x19, #136]
  411d6c:	ldr	x19, [sp, #16]
  411d70:	ldp	x29, x30, [sp], #32
  411d74:	ret
  411d78:	sub	sp, sp, #0x50
  411d7c:	stp	x29, x30, [sp, #32]
  411d80:	stp	x20, x19, [sp, #64]
  411d84:	ldr	w0, [x0, #112]
  411d88:	mov	x19, x2
  411d8c:	mov	x20, x1
  411d90:	add	x3, sp, #0x8
  411d94:	mov	w2, #0xffffffff            	// #-1
  411d98:	mov	x1, xzr
  411d9c:	str	x21, [sp, #48]
  411da0:	add	x29, sp, #0x20
  411da4:	bl	418c74 <wcrtomb@plt+0x13e74>
  411da8:	mov	x21, x0
  411dac:	bl	404170 <strlen@plt>
  411db0:	mov	x3, x0
  411db4:	mov	x0, x19
  411db8:	mov	x1, x20
  411dbc:	mov	x2, x21
  411dc0:	bl	41294c <wcrtomb@plt+0xdb4c>
  411dc4:	ldp	x20, x19, [sp, #64]
  411dc8:	ldr	x21, [sp, #48]
  411dcc:	ldp	x29, x30, [sp, #32]
  411dd0:	add	sp, sp, #0x50
  411dd4:	ret
  411dd8:	stp	x29, x30, [sp, #-32]!
  411ddc:	mov	x29, sp
  411de0:	mov	x8, x2
  411de4:	str	x19, [sp, #16]
  411de8:	mov	x3, x1
  411dec:	mov	x19, x0
  411df0:	add	x0, x29, #0x18
  411df4:	mov	w2, #0xffffffff            	// #-1
  411df8:	mov	x1, x8
  411dfc:	bl	412c6c <wcrtomb@plt+0xde6c>
  411e00:	tbz	w0, #0, 411e0c <wcrtomb@plt+0xd00c>
  411e04:	ldr	x8, [x29, #24]
  411e08:	str	w8, [x19, #112]
  411e0c:	ldr	x19, [sp, #16]
  411e10:	ldp	x29, x30, [sp], #32
  411e14:	ret
  411e18:	ldr	x0, [x0, #32]
  411e1c:	b	410cf4 <wcrtomb@plt+0xbef4>
  411e20:	add	x0, x0, #0x20
  411e24:	mov	x1, x2
  411e28:	b	412d54 <wcrtomb@plt+0xdf54>
  411e2c:	mov	x1, x2
  411e30:	mov	w8, #0x1                   	// #1
  411e34:	strb	w8, [x0, #321]
  411e38:	b	412dac <wcrtomb@plt+0xdfac>
  411e3c:	sub	sp, sp, #0x50
  411e40:	stp	x29, x30, [sp, #32]
  411e44:	stp	x20, x19, [sp, #64]
  411e48:	ldr	w0, [x0, #276]
  411e4c:	mov	x19, x2
  411e50:	mov	x20, x1
  411e54:	add	x3, sp, #0x8
  411e58:	mov	x2, #0xffffffffffffffff    	// #-1
  411e5c:	mov	x1, xzr
  411e60:	str	x21, [sp, #48]
  411e64:	add	x29, sp, #0x20
  411e68:	bl	418c74 <wcrtomb@plt+0x13e74>
  411e6c:	mov	x21, x0
  411e70:	bl	404170 <strlen@plt>
  411e74:	mov	x3, x0
  411e78:	mov	x0, x19
  411e7c:	mov	x1, x20
  411e80:	mov	x2, x21
  411e84:	bl	41294c <wcrtomb@plt+0xdb4c>
  411e88:	ldp	x20, x19, [sp, #64]
  411e8c:	ldr	x21, [sp, #48]
  411e90:	ldp	x29, x30, [sp, #32]
  411e94:	add	sp, sp, #0x50
  411e98:	ret
  411e9c:	stp	x29, x30, [sp, #-32]!
  411ea0:	mov	x29, sp
  411ea4:	mov	x8, x2
  411ea8:	str	x19, [sp, #16]
  411eac:	mov	x3, x1
  411eb0:	mov	x19, x0
  411eb4:	add	x0, x29, #0x18
  411eb8:	mov	w2, #0xffffffff            	// #-1
  411ebc:	mov	x1, x8
  411ec0:	bl	412c6c <wcrtomb@plt+0xde6c>
  411ec4:	tbz	w0, #0, 411ed0 <wcrtomb@plt+0xd0d0>
  411ec8:	ldr	x8, [x29, #24]
  411ecc:	str	w8, [x19, #276]
  411ed0:	ldr	x19, [sp, #16]
  411ed4:	ldp	x29, x30, [sp], #32
  411ed8:	ret
  411edc:	sub	sp, sp, #0x50
  411ee0:	stp	x29, x30, [sp, #32]
  411ee4:	stp	x20, x19, [sp, #64]
  411ee8:	ldr	w0, [x0, #280]
  411eec:	mov	x19, x2
  411ef0:	mov	x20, x1
  411ef4:	add	x3, sp, #0x8
  411ef8:	mov	x2, #0xffffffffffffffff    	// #-1
  411efc:	mov	x1, xzr
  411f00:	str	x21, [sp, #48]
  411f04:	add	x29, sp, #0x20
  411f08:	bl	418c74 <wcrtomb@plt+0x13e74>
  411f0c:	mov	x21, x0
  411f10:	bl	404170 <strlen@plt>
  411f14:	mov	x3, x0
  411f18:	mov	x0, x19
  411f1c:	mov	x1, x20
  411f20:	mov	x2, x21
  411f24:	bl	41294c <wcrtomb@plt+0xdb4c>
  411f28:	ldp	x20, x19, [sp, #64]
  411f2c:	ldr	x21, [sp, #48]
  411f30:	ldp	x29, x30, [sp, #32]
  411f34:	add	sp, sp, #0x50
  411f38:	ret
  411f3c:	stp	x29, x30, [sp, #-32]!
  411f40:	mov	x29, sp
  411f44:	mov	x8, x2
  411f48:	str	x19, [sp, #16]
  411f4c:	mov	x3, x1
  411f50:	mov	x19, x0
  411f54:	add	x0, x29, #0x18
  411f58:	mov	w2, #0xffffffff            	// #-1
  411f5c:	mov	x1, x8
  411f60:	bl	412c6c <wcrtomb@plt+0xde6c>
  411f64:	tbz	w0, #0, 411f70 <wcrtomb@plt+0xd170>
  411f68:	ldr	x8, [x29, #24]
  411f6c:	str	w8, [x19, #280]
  411f70:	ldr	x19, [sp, #16]
  411f74:	ldp	x29, x30, [sp], #32
  411f78:	ret
  411f7c:	b	411cd8 <wcrtomb@plt+0xced8>
  411f80:	stp	x29, x30, [sp, #-32]!
  411f84:	mov	x29, sp
  411f88:	mov	x8, x2
  411f8c:	str	x19, [sp, #16]
  411f90:	mov	x3, x1
  411f94:	mov	x19, x0
  411f98:	add	x0, x29, #0x18
  411f9c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  411fa0:	mov	x1, x8
  411fa4:	bl	412c6c <wcrtomb@plt+0xde6c>
  411fa8:	tbz	w0, #0, 411fbc <wcrtomb@plt+0xd1bc>
  411fac:	ldr	x8, [x29, #24]
  411fb0:	mov	w9, #0x1                   	// #1
  411fb4:	strb	w9, [x19, #320]
  411fb8:	str	x8, [x19, #312]
  411fbc:	ldr	x19, [sp, #16]
  411fc0:	ldp	x29, x30, [sp], #32
  411fc4:	ret
  411fc8:	sub	sp, sp, #0x50
  411fcc:	stp	x29, x30, [sp, #32]
  411fd0:	stp	x20, x19, [sp, #64]
  411fd4:	ldr	x0, [x0, #288]
  411fd8:	mov	x19, x2
  411fdc:	mov	x20, x1
  411fe0:	add	x3, sp, #0x8
  411fe4:	mov	x2, #0xffffffffffffffff    	// #-1
  411fe8:	mov	x1, xzr
  411fec:	str	x21, [sp, #48]
  411ff0:	add	x29, sp, #0x20
  411ff4:	bl	418c74 <wcrtomb@plt+0x13e74>
  411ff8:	mov	x21, x0
  411ffc:	bl	404170 <strlen@plt>
  412000:	mov	x3, x0
  412004:	mov	x0, x19
  412008:	mov	x1, x20
  41200c:	mov	x2, x21
  412010:	bl	41294c <wcrtomb@plt+0xdb4c>
  412014:	ldp	x20, x19, [sp, #64]
  412018:	ldr	x21, [sp, #48]
  41201c:	ldp	x29, x30, [sp, #32]
  412020:	add	sp, sp, #0x50
  412024:	ret
  412028:	stp	x29, x30, [sp, #-32]!
  41202c:	mov	x29, sp
  412030:	mov	x8, x2
  412034:	str	x19, [sp, #16]
  412038:	mov	x3, x1
  41203c:	mov	x19, x0
  412040:	add	x0, x29, #0x18
  412044:	mov	x2, #0xffffffffffffffff    	// #-1
  412048:	mov	x1, x8
  41204c:	bl	412c6c <wcrtomb@plt+0xde6c>
  412050:	tbz	w0, #0, 41206c <wcrtomb@plt+0xd26c>
  412054:	ldr	x0, [x29, #24]
  412058:	mov	w1, #0x10                  	// #16
  41205c:	str	x0, [x19, #296]
  412060:	bl	43a928 <argp_parse@@Base+0xbc6c>
  412064:	str	x0, [x19, #304]
  412068:	str	xzr, [x19, #288]
  41206c:	ldr	x19, [sp, #16]
  412070:	ldp	x29, x30, [sp], #32
  412074:	ret
  412078:	sub	sp, sp, #0x50
  41207c:	stp	x29, x30, [sp, #32]
  412080:	stp	x20, x19, [sp, #64]
  412084:	ldr	x8, [x3]
  412088:	ldr	x9, [x0, #304]
  41208c:	mov	x19, x2
  412090:	mov	x20, x1
  412094:	lsl	x8, x8, #4
  412098:	ldr	x0, [x9, x8]
  41209c:	add	x3, sp, #0x8
  4120a0:	mov	x2, #0xffffffffffffffff    	// #-1
  4120a4:	mov	x1, xzr
  4120a8:	str	x21, [sp, #48]
  4120ac:	add	x29, sp, #0x20
  4120b0:	bl	418c74 <wcrtomb@plt+0x13e74>
  4120b4:	mov	x21, x0
  4120b8:	bl	404170 <strlen@plt>
  4120bc:	mov	x3, x0
  4120c0:	mov	x0, x19
  4120c4:	mov	x1, x20
  4120c8:	mov	x2, x21
  4120cc:	bl	41294c <wcrtomb@plt+0xdb4c>
  4120d0:	ldp	x20, x19, [sp, #64]
  4120d4:	ldr	x21, [sp, #48]
  4120d8:	ldp	x29, x30, [sp, #32]
  4120dc:	add	sp, sp, #0x50
  4120e0:	ret
  4120e4:	sub	sp, sp, #0x30
  4120e8:	stp	x20, x19, [sp, #32]
  4120ec:	mov	x19, x2
  4120f0:	mov	x3, x1
  4120f4:	mov	x20, x0
  4120f8:	add	x0, sp, #0x8
  4120fc:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  412100:	mov	x1, x19
  412104:	stp	x29, x30, [sp, #16]
  412108:	add	x29, sp, #0x10
  41210c:	bl	412c6c <wcrtomb@plt+0xde6c>
  412110:	tbz	w0, #0, 412180 <wcrtomb@plt+0xd380>
  412114:	ldp	x8, x9, [x20, #288]
  412118:	cmp	x8, x9
  41211c:	b.cs	412134 <wcrtomb@plt+0xd334>  // b.hs, b.nlast
  412120:	ldr	x9, [sp, #8]
  412124:	ldr	x10, [x20, #304]
  412128:	lsl	x8, x8, #4
  41212c:	str	x9, [x10, x8]
  412130:	b	412180 <wcrtomb@plt+0xd380>
  412134:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  412138:	ldr	x8, [x8, #496]
  41213c:	cbz	x8, 412144 <wcrtomb@plt+0xd344>
  412140:	blr	x8
  412144:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  412148:	add	x1, x1, #0x66
  41214c:	mov	w2, #0x5                   	// #5
  412150:	mov	x0, xzr
  412154:	bl	404bd0 <dcgettext@plt>
  412158:	adrp	x3, 44c000 <_obstack_memory_used@@Base+0x10808>
  41215c:	mov	x2, x0
  412160:	add	x3, x3, #0xdf1
  412164:	mov	w0, wzr
  412168:	mov	w1, wzr
  41216c:	mov	x4, x19
  412170:	bl	4041d0 <error@plt>
  412174:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  412178:	mov	w9, #0x2                   	// #2
  41217c:	str	w9, [x8, #2944]
  412180:	ldp	x20, x19, [sp, #32]
  412184:	ldp	x29, x30, [sp, #16]
  412188:	add	sp, sp, #0x30
  41218c:	ret
  412190:	sub	sp, sp, #0x50
  412194:	stp	x29, x30, [sp, #32]
  412198:	stp	x20, x19, [sp, #64]
  41219c:	ldr	x8, [x0, #304]
  4121a0:	ldr	x9, [x3]
  4121a4:	mov	x19, x2
  4121a8:	mov	x20, x1
  4121ac:	add	x3, sp, #0x8
  4121b0:	add	x8, x8, x9, lsl #4
  4121b4:	ldr	x0, [x8, #8]
  4121b8:	mov	x2, #0xffffffffffffffff    	// #-1
  4121bc:	mov	x1, xzr
  4121c0:	str	x21, [sp, #48]
  4121c4:	add	x29, sp, #0x20
  4121c8:	bl	418c74 <wcrtomb@plt+0x13e74>
  4121cc:	mov	x21, x0
  4121d0:	bl	404170 <strlen@plt>
  4121d4:	mov	x3, x0
  4121d8:	mov	x0, x19
  4121dc:	mov	x1, x20
  4121e0:	mov	x2, x21
  4121e4:	bl	41294c <wcrtomb@plt+0xdb4c>
  4121e8:	ldp	x20, x19, [sp, #64]
  4121ec:	ldr	x21, [sp, #48]
  4121f0:	ldp	x29, x30, [sp, #32]
  4121f4:	add	sp, sp, #0x50
  4121f8:	ret
  4121fc:	stp	x29, x30, [sp, #-48]!
  412200:	stp	x20, x19, [sp, #32]
  412204:	mov	x29, sp
  412208:	mov	x19, x2
  41220c:	mov	x20, x1
  412210:	str	x21, [sp, #16]
  412214:	mov	x21, x0
  412218:	add	x0, x29, #0x18
  41221c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  412220:	mov	x1, x19
  412224:	mov	x3, x20
  412228:	bl	412c6c <wcrtomb@plt+0xde6c>
  41222c:	tbz	w0, #0, 4122a0 <wcrtomb@plt+0xd4a0>
  412230:	ldp	x8, x9, [x21, #288]
  412234:	cmp	x8, x9
  412238:	b.cs	412258 <wcrtomb@plt+0xd458>  // b.hs, b.nlast
  41223c:	ldr	x9, [x21, #304]
  412240:	ldr	x10, [x29, #24]
  412244:	add	x11, x8, #0x1
  412248:	str	x11, [x21, #288]
  41224c:	add	x8, x9, x8, lsl #4
  412250:	str	x10, [x8, #8]
  412254:	b	4122a0 <wcrtomb@plt+0xd4a0>
  412258:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41225c:	ldr	x8, [x8, #496]
  412260:	cbz	x8, 412268 <wcrtomb@plt+0xd468>
  412264:	blr	x8
  412268:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  41226c:	add	x1, x1, #0x66
  412270:	mov	w2, #0x5                   	// #5
  412274:	mov	x0, xzr
  412278:	bl	404bd0 <dcgettext@plt>
  41227c:	mov	x2, x0
  412280:	mov	w0, wzr
  412284:	mov	w1, wzr
  412288:	mov	x3, x20
  41228c:	mov	x4, x19
  412290:	bl	4041d0 <error@plt>
  412294:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  412298:	mov	w9, #0x2                   	// #2
  41229c:	str	w9, [x8, #2944]
  4122a0:	ldp	x20, x19, [sp, #32]
  4122a4:	ldr	x21, [sp, #16]
  4122a8:	ldp	x29, x30, [sp], #48
  4122ac:	ret
  4122b0:	sub	sp, sp, #0x50
  4122b4:	stp	x29, x30, [sp, #16]
  4122b8:	stp	x24, x23, [sp, #32]
  4122bc:	stp	x22, x21, [sp, #48]
  4122c0:	stp	x20, x19, [sp, #64]
  4122c4:	str	xzr, [x0, #288]
  4122c8:	ldrb	w8, [x2]
  4122cc:	mov	x20, x2
  4122d0:	mov	x19, x1
  4122d4:	add	x29, sp, #0x10
  4122d8:	sub	w8, w8, #0x30
  4122dc:	cmp	w8, #0x9
  4122e0:	b.hi	412370 <wcrtomb@plt+0xd570>  // b.pmore
  4122e4:	mov	x21, x0
  4122e8:	mov	w23, #0x1                   	// #1
  4122ec:	bl	404ce0 <__errno_location@plt>
  4122f0:	mov	x22, x0
  4122f4:	add	x1, sp, #0x8
  4122f8:	mov	w2, #0xa                   	// #10
  4122fc:	mov	x0, x20
  412300:	str	wzr, [x22]
  412304:	bl	404220 <strtoimax@plt>
  412308:	ldr	w8, [x22]
  41230c:	cmp	w8, #0x22
  412310:	cbz	w23, 41231c <wcrtomb@plt+0xd51c>
  412314:	b.ne	412344 <wcrtomb@plt+0xd544>  // b.any
  412318:	b	4123d0 <wcrtomb@plt+0xd5d0>
  41231c:	b.eq	4123d0 <wcrtomb@plt+0xd5d0>  // b.none
  412320:	ldp	x8, x9, [x21, #288]
  412324:	cmp	x8, x9
  412328:	b.cs	412470 <wcrtomb@plt+0xd670>  // b.hs, b.nlast
  41232c:	ldr	x9, [x21, #304]
  412330:	add	x10, x8, #0x1
  412334:	str	x10, [x21, #288]
  412338:	add	x8, x9, x8, lsl #4
  41233c:	stp	x24, x0, [x8]
  412340:	mov	x0, x24
  412344:	ldr	x20, [sp, #8]
  412348:	ldrb	w8, [x20]
  41234c:	cmp	w8, #0x2c
  412350:	b.ne	4123e8 <wcrtomb@plt+0xd5e8>  // b.any
  412354:	ldrb	w8, [x20, #1]!
  412358:	cmp	w23, #0x0
  41235c:	cset	w23, eq  // eq = none
  412360:	mov	x24, x0
  412364:	sub	w8, w8, #0x30
  412368:	cmp	w8, #0xa
  41236c:	b.cc	4122f4 <wcrtomb@plt+0xd4f4>  // b.lo, b.ul, b.last
  412370:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  412374:	ldr	x8, [x8, #496]
  412378:	cbz	x8, 412380 <wcrtomb@plt+0xd580>
  41237c:	blr	x8
  412380:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  412384:	add	x1, x1, #0x10
  412388:	mov	w2, #0x5                   	// #5
  41238c:	mov	x0, xzr
  412390:	bl	404bd0 <dcgettext@plt>
  412394:	mov	x2, x0
  412398:	mov	w0, wzr
  41239c:	mov	w1, wzr
  4123a0:	mov	x3, x19
  4123a4:	mov	x4, x20
  4123a8:	bl	4041d0 <error@plt>
  4123ac:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4123b0:	mov	w9, #0x2                   	// #2
  4123b4:	str	w9, [x8, #2944]
  4123b8:	ldp	x20, x19, [sp, #64]
  4123bc:	ldp	x22, x21, [sp, #48]
  4123c0:	ldp	x24, x23, [sp, #32]
  4123c4:	ldp	x29, x30, [sp, #16]
  4123c8:	add	sp, sp, #0x50
  4123cc:	ret
  4123d0:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  4123d4:	mov	x0, x19
  4123d8:	mov	x1, x20
  4123dc:	mov	x2, xzr
  4123e0:	bl	412bc8 <wcrtomb@plt+0xddc8>
  4123e4:	b	4123b8 <wcrtomb@plt+0xd5b8>
  4123e8:	cbnz	w8, 41242c <wcrtomb@plt+0xd62c>
  4123ec:	cbz	w23, 4123b8 <wcrtomb@plt+0xd5b8>
  4123f0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4123f4:	ldr	x8, [x8, #496]
  4123f8:	cbz	x8, 412400 <wcrtomb@plt+0xd600>
  4123fc:	blr	x8
  412400:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  412404:	add	x1, x1, #0xcd
  412408:	mov	w2, #0x5                   	// #5
  41240c:	mov	x0, xzr
  412410:	bl	404bd0 <dcgettext@plt>
  412414:	mov	x2, x0
  412418:	mov	w0, wzr
  41241c:	mov	w1, wzr
  412420:	mov	x3, x19
  412424:	bl	4041d0 <error@plt>
  412428:	b	4123ac <wcrtomb@plt+0xd5ac>
  41242c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  412430:	ldr	x8, [x8, #496]
  412434:	cbz	x8, 41243c <wcrtomb@plt+0xd63c>
  412438:	blr	x8
  41243c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  412440:	add	x1, x1, #0x8e
  412444:	mov	w2, #0x5                   	// #5
  412448:	mov	x0, xzr
  41244c:	bl	404bd0 <dcgettext@plt>
  412450:	ldr	x8, [sp, #8]
  412454:	mov	x2, x0
  412458:	mov	w0, wzr
  41245c:	mov	w1, wzr
  412460:	ldrb	w4, [x8]
  412464:	mov	x3, x19
  412468:	bl	4041d0 <error@plt>
  41246c:	b	4123ac <wcrtomb@plt+0xd5ac>
  412470:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  412474:	ldr	x8, [x8, #496]
  412478:	cbz	x8, 412480 <wcrtomb@plt+0xd680>
  41247c:	blr	x8
  412480:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  412484:	add	x1, x1, #0x66
  412488:	b	412388 <wcrtomb@plt+0xd588>
  41248c:	stp	x29, x30, [sp, #-48]!
  412490:	mov	x0, x3
  412494:	str	x21, [sp, #16]
  412498:	stp	x20, x19, [sp, #32]
  41249c:	mov	x29, sp
  4124a0:	mov	x19, x3
  4124a4:	mov	x20, x2
  4124a8:	mov	x21, x1
  4124ac:	bl	412dec <wcrtomb@plt+0xdfec>
  4124b0:	mov	x3, x0
  4124b4:	mov	x0, x20
  4124b8:	mov	x1, x21
  4124bc:	mov	x2, x19
  4124c0:	ldp	x20, x19, [sp, #32]
  4124c4:	ldr	x21, [sp, #16]
  4124c8:	ldp	x29, x30, [sp], #48
  4124cc:	b	41294c <wcrtomb@plt+0xdb4c>
  4124d0:	stp	x29, x30, [sp, #-48]!
  4124d4:	str	x21, [sp, #16]
  4124d8:	mov	x21, x0
  4124dc:	mov	x0, x3
  4124e0:	stp	x20, x19, [sp, #32]
  4124e4:	mov	x29, sp
  4124e8:	mov	x19, x3
  4124ec:	mov	x20, x2
  4124f0:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4124f4:	mov	x1, x20
  4124f8:	mov	x2, x19
  4124fc:	str	x0, [x21, #384]
  412500:	bl	4040f0 <memcpy@plt>
  412504:	ldp	x20, x19, [sp, #32]
  412508:	ldr	x21, [sp, #16]
  41250c:	ldp	x29, x30, [sp], #48
  412510:	ret
  412514:	mov	x0, x3
  412518:	b	410cf4 <wcrtomb@plt+0xbef4>
  41251c:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  412520:	add	x0, x0, #0xd80
  412524:	mov	x1, x2
  412528:	b	412d54 <wcrtomb@plt+0xdf54>
  41252c:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  412530:	add	x0, x0, #0xd88
  412534:	mov	x1, x2
  412538:	b	412d54 <wcrtomb@plt+0xdf54>
  41253c:	sub	sp, sp, #0x50
  412540:	stp	x29, x30, [sp, #32]
  412544:	stp	x20, x19, [sp, #64]
  412548:	ldr	x0, [x3]
  41254c:	mov	x19, x2
  412550:	mov	x20, x1
  412554:	add	x3, sp, #0x8
  412558:	mov	x2, #0xffffffffffffffff    	// #-1
  41255c:	mov	x1, xzr
  412560:	str	x21, [sp, #48]
  412564:	add	x29, sp, #0x20
  412568:	bl	418c74 <wcrtomb@plt+0x13e74>
  41256c:	mov	x21, x0
  412570:	bl	404170 <strlen@plt>
  412574:	mov	x3, x0
  412578:	mov	x0, x19
  41257c:	mov	x1, x20
  412580:	mov	x2, x21
  412584:	bl	41294c <wcrtomb@plt+0xdb4c>
  412588:	ldp	x20, x19, [sp, #64]
  41258c:	ldr	x21, [sp, #48]
  412590:	ldp	x29, x30, [sp, #32]
  412594:	add	sp, sp, #0x50
  412598:	ret
  41259c:	sub	sp, sp, #0x20
  4125a0:	mov	x8, x2
  4125a4:	mov	x3, x1
  4125a8:	add	x0, sp, #0x8
  4125ac:	mov	x2, #0xffffffffffffffff    	// #-1
  4125b0:	mov	x1, x8
  4125b4:	stp	x29, x30, [sp, #16]
  4125b8:	add	x29, sp, #0x10
  4125bc:	bl	412c6c <wcrtomb@plt+0xde6c>
  4125c0:	tbz	w0, #0, 4125d0 <wcrtomb@plt+0xd7d0>
  4125c4:	ldr	x8, [sp, #8]
  4125c8:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4125cc:	str	x8, [x9, #3488]
  4125d0:	ldp	x29, x30, [sp, #16]
  4125d4:	add	sp, sp, #0x20
  4125d8:	ret
  4125dc:	sub	sp, sp, #0x50
  4125e0:	stp	x29, x30, [sp, #32]
  4125e4:	stp	x20, x19, [sp, #64]
  4125e8:	ldr	x0, [x3]
  4125ec:	mov	x19, x2
  4125f0:	mov	x20, x1
  4125f4:	add	x3, sp, #0x8
  4125f8:	mov	x2, #0xffffffffffffffff    	// #-1
  4125fc:	mov	x1, xzr
  412600:	str	x21, [sp, #48]
  412604:	add	x29, sp, #0x20
  412608:	bl	418c74 <wcrtomb@plt+0x13e74>
  41260c:	mov	x21, x0
  412610:	bl	404170 <strlen@plt>
  412614:	mov	x3, x0
  412618:	mov	x0, x19
  41261c:	mov	x1, x20
  412620:	mov	x2, x21
  412624:	bl	41294c <wcrtomb@plt+0xdb4c>
  412628:	ldp	x20, x19, [sp, #64]
  41262c:	ldr	x21, [sp, #48]
  412630:	ldp	x29, x30, [sp, #32]
  412634:	add	sp, sp, #0x50
  412638:	ret
  41263c:	sub	sp, sp, #0x20
  412640:	mov	x8, x2
  412644:	mov	x3, x1
  412648:	add	x0, sp, #0x8
  41264c:	mov	x2, #0xffffffffffffffff    	// #-1
  412650:	mov	x1, x8
  412654:	stp	x29, x30, [sp, #16]
  412658:	add	x29, sp, #0x10
  41265c:	bl	412c6c <wcrtomb@plt+0xde6c>
  412660:	tbz	w0, #0, 412670 <wcrtomb@plt+0xd870>
  412664:	ldr	x8, [sp, #8]
  412668:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41266c:	str	x8, [x9, #3504]
  412670:	ldp	x29, x30, [sp, #16]
  412674:	add	sp, sp, #0x20
  412678:	ret
  41267c:	ldr	x0, [x0, #48]
  412680:	b	410cf4 <wcrtomb@plt+0xbef4>
  412684:	add	x0, x0, #0x30
  412688:	mov	x1, x2
  41268c:	b	412d54 <wcrtomb@plt+0xdf54>
  412690:	mov	x8, x2
  412694:	ldp	x2, x3, [x0, #56]
  412698:	mov	x0, x8
  41269c:	b	41294c <wcrtomb@plt+0xdb4c>
  4126a0:	stp	x29, x30, [sp, #-32]!
  4126a4:	stp	x20, x19, [sp, #16]
  4126a8:	mov	x20, x0
  4126ac:	add	x1, x3, #0x1
  4126b0:	mov	x0, x2
  4126b4:	mov	x29, sp
  4126b8:	mov	x19, x3
  4126bc:	bl	43a954 <argp_parse@@Base+0xbc98>
  4126c0:	stp	x0, x19, [x20, #56]
  4126c4:	ldp	x20, x19, [sp, #16]
  4126c8:	ldp	x29, x30, [sp], #32
  4126cc:	ret
  4126d0:	mov	x8, x2
  4126d4:	ldp	x2, x3, [x0, #72]
  4126d8:	mov	x0, x8
  4126dc:	b	41294c <wcrtomb@plt+0xdb4c>
  4126e0:	stp	x29, x30, [sp, #-32]!
  4126e4:	stp	x20, x19, [sp, #16]
  4126e8:	mov	x20, x0
  4126ec:	add	x1, x3, #0x1
  4126f0:	mov	x0, x2
  4126f4:	mov	x29, sp
  4126f8:	mov	x19, x3
  4126fc:	bl	43a954 <argp_parse@@Base+0xbc98>
  412700:	stp	x0, x19, [x20, #72]
  412704:	ldp	x20, x19, [sp, #16]
  412708:	ldp	x29, x30, [sp], #32
  41270c:	ret
  412710:	ldr	x9, [x0, #336]
  412714:	ldr	x10, [x3]
  412718:	mov	w11, #0x18                  	// #24
  41271c:	mov	x8, x2
  412720:	mov	x0, x8
  412724:	madd	x9, x10, x11, x9
  412728:	ldp	x2, x3, [x9, #8]
  41272c:	b	41294c <wcrtomb@plt+0xdb4c>
  412730:	stp	x29, x30, [sp, #-64]!
  412734:	stp	x20, x19, [sp, #48]
  412738:	mov	x20, x0
  41273c:	mov	x0, x1
  412740:	str	x23, [sp, #16]
  412744:	stp	x22, x21, [sp, #32]
  412748:	mov	x29, sp
  41274c:	mov	x19, x3
  412750:	mov	x23, x2
  412754:	mov	x22, x1
  412758:	bl	404170 <strlen@plt>
  41275c:	add	x9, x0, #0x10
  412760:	mov	x8, sp
  412764:	and	x9, x9, #0xfffffffffffffff0
  412768:	sub	x21, x8, x9
  41276c:	add	x2, x0, #0x1
  412770:	mov	sp, x21
  412774:	mov	x0, x21
  412778:	mov	x1, x22
  41277c:	bl	4040f0 <memcpy@plt>
  412780:	add	x9, x19, #0x10
  412784:	mov	x8, sp
  412788:	and	x9, x9, #0xfffffffffffffff0
  41278c:	sub	x22, x8, x9
  412790:	add	x2, x19, #0x1
  412794:	mov	sp, x22
  412798:	mov	x0, x22
  41279c:	mov	x1, x23
  4127a0:	bl	4040f0 <memcpy@plt>
  4127a4:	mov	x8, x21
  4127a8:	mov	x9, x21
  4127ac:	ldrb	w10, [x8]
  4127b0:	cmp	w10, #0x25
  4127b4:	b.ne	4127fc <wcrtomb@plt+0xd9fc>  // b.any
  4127b8:	ldrb	w11, [x8, #1]
  4127bc:	cmp	w11, #0x32
  4127c0:	b.eq	4127e0 <wcrtomb@plt+0xd9e0>  // b.none
  4127c4:	cmp	w11, #0x33
  4127c8:	b.ne	4127fc <wcrtomb@plt+0xd9fc>  // b.any
  4127cc:	ldrb	w11, [x8, #2]
  4127d0:	cmp	w11, #0x44
  4127d4:	b.ne	4127fc <wcrtomb@plt+0xd9fc>  // b.any
  4127d8:	mov	w10, #0x3d                  	// #61
  4127dc:	b	4127f0 <wcrtomb@plt+0xd9f0>
  4127e0:	ldrb	w11, [x8, #2]
  4127e4:	cmp	w11, #0x35
  4127e8:	b.ne	4127fc <wcrtomb@plt+0xd9fc>  // b.any
  4127ec:	mov	w10, #0x25                  	// #37
  4127f0:	strb	w10, [x9]
  4127f4:	mov	w10, #0x3                   	// #3
  4127f8:	b	41280c <wcrtomb@plt+0xda0c>
  4127fc:	strb	w10, [x9]
  412800:	ldrb	w10, [x8]
  412804:	cbz	w10, 412818 <wcrtomb@plt+0xda18>
  412808:	mov	w10, #0x1                   	// #1
  41280c:	add	x8, x8, x10
  412810:	add	x9, x9, #0x1
  412814:	b	4127ac <wcrtomb@plt+0xd9ac>
  412818:	add	x1, x21, #0xd
  41281c:	mov	x0, x20
  412820:	mov	x2, x22
  412824:	mov	x3, x19
  412828:	bl	410eb8 <wcrtomb@plt+0xc0b8>
  41282c:	mov	sp, x29
  412830:	ldp	x20, x19, [sp, #48]
  412834:	ldp	x22, x21, [sp, #32]
  412838:	ldr	x23, [sp, #16]
  41283c:	ldp	x29, x30, [sp], #64
  412840:	ret
  412844:	stp	x29, x30, [sp, #-48]!
  412848:	stp	x20, x19, [sp, #32]
  41284c:	mov	x19, x0
  412850:	mov	w0, #0x18                  	// #24
  412854:	stp	x22, x21, [sp, #16]
  412858:	mov	x29, sp
  41285c:	mov	x21, x2
  412860:	mov	x22, x1
  412864:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  412868:	mov	x20, x0
  41286c:	mov	x0, x22
  412870:	bl	43a998 <argp_parse@@Base+0xbcdc>
  412874:	str	x0, [x20, #8]
  412878:	cbz	x21, 412888 <wcrtomb@plt+0xda88>
  41287c:	mov	x0, x21
  412880:	bl	43a998 <argp_parse@@Base+0xbcdc>
  412884:	b	41288c <wcrtomb@plt+0xda8c>
  412888:	mov	x0, xzr
  41288c:	str	x0, [x20, #16]
  412890:	ldr	x8, [x19]
  412894:	str	x8, [x20]
  412898:	str	x20, [x19]
  41289c:	ldp	x20, x19, [sp, #32]
  4128a0:	ldp	x22, x21, [sp, #16]
  4128a4:	ldp	x29, x30, [sp], #48
  4128a8:	ret
  4128ac:	stp	x29, x30, [sp, #-48]!
  4128b0:	mov	x29, sp
  4128b4:	str	x21, [sp, #16]
  4128b8:	stp	x20, x19, [sp, #32]
  4128bc:	mov	x19, x2
  4128c0:	mov	x21, x1
  4128c4:	mov	x20, x0
  4128c8:	add	x1, x29, #0x18
  4128cc:	mov	x0, x2
  4128d0:	mov	w2, wzr
  4128d4:	bl	418eb4 <wcrtomb@plt+0x140b4>
  4128d8:	tbnz	x1, #63, 4128e8 <wcrtomb@plt+0xdae8>
  4128dc:	ldr	x8, [x29, #24]
  4128e0:	ldrb	w8, [x8]
  4128e4:	cbz	w8, 41292c <wcrtomb@plt+0xdb2c>
  4128e8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4128ec:	ldr	x8, [x8, #496]
  4128f0:	cbz	x8, 4128f8 <wcrtomb@plt+0xdaf8>
  4128f4:	blr	x8
  4128f8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4128fc:	add	x1, x1, #0xedb
  412900:	mov	w2, #0x5                   	// #5
  412904:	mov	x0, xzr
  412908:	bl	404bd0 <dcgettext@plt>
  41290c:	mov	x2, x0
  412910:	mov	w0, wzr
  412914:	mov	w1, wzr
  412918:	bl	4041d0 <error@plt>
  41291c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  412920:	mov	w9, #0x2                   	// #2
  412924:	str	w9, [x8, #2944]
  412928:	b	41293c <wcrtomb@plt+0xdb3c>
  41292c:	str	x0, [x21]
  412930:	mov	x0, x20
  412934:	mov	x1, x19
  412938:	bl	4186dc <wcrtomb@plt+0x138dc>
  41293c:	ldp	x20, x19, [sp, #32]
  412940:	ldr	x21, [sp, #16]
  412944:	ldp	x29, x30, [sp], #48
  412948:	ret
  41294c:	sub	sp, sp, #0x90
  412950:	stp	x24, x23, [sp, #96]
  412954:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  412958:	stp	x22, x21, [sp, #112]
  41295c:	ldr	x22, [x24, #1688]
  412960:	stp	x28, x27, [sp, #64]
  412964:	stp	x26, x25, [sp, #80]
  412968:	stp	x20, x19, [sp, #128]
  41296c:	mov	x27, x3
  412970:	mov	x28, x2
  412974:	mov	x23, x1
  412978:	mov	x19, x0
  41297c:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x2e808>
  412980:	stp	x29, x30, [sp, #48]
  412984:	add	x29, sp, #0x30
  412988:	cbz	x22, 412994 <wcrtomb@plt+0xdb94>
  41298c:	strb	wzr, [x22]
  412990:	b	4129ac <wcrtomb@plt+0xdbac>
  412994:	mov	w8, #0x100                 	// #256
  412998:	mov	w0, #0x100                 	// #256
  41299c:	str	x8, [x25, #1696]
  4129a0:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4129a4:	mov	x22, x0
  4129a8:	str	x0, [x24, #1688]
  4129ac:	ldrb	w21, [x23]
  4129b0:	cbz	w21, 412a48 <wcrtomb@plt+0xdc48>
  4129b4:	stp	x28, x27, [sp, #8]
  4129b8:	mov	w27, #0x3325                	// #13093
  4129bc:	mov	w28, #0x3225                	// #12837
  4129c0:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4129c4:	mov	x26, xzr
  4129c8:	add	x23, x23, #0x1
  4129cc:	movk	w27, #0x44, lsl #16
  4129d0:	movk	w28, #0x35, lsl #16
  4129d4:	add	x22, x22, #0x6a0
  4129d8:	ldr	x8, [x25, #1696]
  4129dc:	add	x20, x26, #0x2
  4129e0:	cmp	x20, x8
  4129e4:	b.cc	4129f8 <wcrtomb@plt+0xdbf8>  // b.lo, b.ul, b.last
  4129e8:	ldr	x0, [x24, #1688]
  4129ec:	mov	x1, x22
  4129f0:	bl	43a8a8 <argp_parse@@Base+0xbbec>
  4129f4:	str	x0, [x24, #1688]
  4129f8:	and	w8, w21, #0xff
  4129fc:	cmp	w8, #0x3d
  412a00:	b.eq	412a18 <wcrtomb@plt+0xdc18>  // b.none
  412a04:	cmp	w8, #0x25
  412a08:	b.ne	412a24 <wcrtomb@plt+0xdc24>  // b.any
  412a0c:	ldr	x8, [x24, #1688]
  412a10:	str	w28, [x8, x26]
  412a14:	b	412a30 <wcrtomb@plt+0xdc30>
  412a18:	ldr	x8, [x24, #1688]
  412a1c:	str	w27, [x8, x26]
  412a20:	b	412a30 <wcrtomb@plt+0xdc30>
  412a24:	ldr	x8, [x24, #1688]
  412a28:	mov	x20, x26
  412a2c:	strb	w21, [x8, x26]
  412a30:	ldrb	w21, [x23], #1
  412a34:	add	x26, x20, #0x1
  412a38:	cbnz	w21, 4129d8 <wcrtomb@plt+0xdbd8>
  412a3c:	ldr	x22, [x24, #1688]
  412a40:	ldp	x28, x27, [sp, #8]
  412a44:	b	412a4c <wcrtomb@plt+0xdc4c>
  412a48:	mov	x26, xzr
  412a4c:	mov	x0, x22
  412a50:	strb	wzr, [x22, x26]
  412a54:	bl	404170 <strlen@plt>
  412a58:	add	x9, x27, x0
  412a5c:	add	x10, sp, #0x18
  412a60:	mov	x23, x0
  412a64:	mov	x8, xzr
  412a68:	add	x20, x9, #0x3
  412a6c:	add	x21, x10, #0x14
  412a70:	add	x0, x20, x8
  412a74:	add	x1, sp, #0x18
  412a78:	mov	x24, x8
  412a7c:	bl	43401c <argp_parse@@Base+0x5360>
  412a80:	sub	x8, x21, x0
  412a84:	cmp	x8, x24
  412a88:	b.ne	412a70 <wcrtomb@plt+0xdc70>  // b.any
  412a8c:	mov	x1, x0
  412a90:	mov	x0, x19
  412a94:	mov	x2, x24
  412a98:	bl	4117e8 <wcrtomb@plt+0xc9e8>
  412a9c:	mov	w1, #0x20                  	// #32
  412aa0:	mov	x0, x19
  412aa4:	bl	411988 <wcrtomb@plt+0xcb88>
  412aa8:	mov	x0, x19
  412aac:	mov	x1, x22
  412ab0:	mov	x2, x23
  412ab4:	bl	4117e8 <wcrtomb@plt+0xc9e8>
  412ab8:	mov	w1, #0x3d                  	// #61
  412abc:	mov	x0, x19
  412ac0:	bl	411988 <wcrtomb@plt+0xcb88>
  412ac4:	mov	x0, x19
  412ac8:	mov	x1, x28
  412acc:	mov	x2, x27
  412ad0:	bl	4117e8 <wcrtomb@plt+0xc9e8>
  412ad4:	mov	w1, #0xa                   	// #10
  412ad8:	mov	x0, x19
  412adc:	bl	411988 <wcrtomb@plt+0xcb88>
  412ae0:	ldp	x20, x19, [sp, #128]
  412ae4:	ldp	x22, x21, [sp, #112]
  412ae8:	ldp	x24, x23, [sp, #96]
  412aec:	ldp	x26, x25, [sp, #80]
  412af0:	ldp	x28, x27, [sp, #64]
  412af4:	ldp	x29, x30, [sp, #48]
  412af8:	add	sp, sp, #0x90
  412afc:	ret
  412b00:	stp	x29, x30, [sp, #-48]!
  412b04:	stp	x20, x19, [sp, #32]
  412b08:	mov	x29, sp
  412b0c:	mov	x19, x1
  412b10:	str	x21, [sp, #16]
  412b14:	mov	x20, x2
  412b18:	mov	x21, x0
  412b1c:	add	x1, x29, #0x18
  412b20:	mov	w2, #0x1                   	// #1
  412b24:	mov	x0, x19
  412b28:	bl	418eb4 <wcrtomb@plt+0x140b4>
  412b2c:	tbnz	x1, #63, 412b3c <wcrtomb@plt+0xdd3c>
  412b30:	stp	x0, x1, [x21]
  412b34:	mov	w0, #0x1                   	// #1
  412b38:	b	412bb8 <wcrtomb@plt+0xddb8>
  412b3c:	ldr	x8, [x29, #24]
  412b40:	cmp	x8, x19
  412b44:	b.ls	412b50 <wcrtomb@plt+0xdd50>  // b.plast
  412b48:	ldrb	w8, [x8]
  412b4c:	cbz	w8, 412ba0 <wcrtomb@plt+0xdda0>
  412b50:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  412b54:	ldr	x8, [x8, #496]
  412b58:	cbz	x8, 412b60 <wcrtomb@plt+0xdd60>
  412b5c:	blr	x8
  412b60:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  412b64:	add	x1, x1, #0x10
  412b68:	mov	w2, #0x5                   	// #5
  412b6c:	mov	x0, xzr
  412b70:	bl	404bd0 <dcgettext@plt>
  412b74:	mov	x2, x0
  412b78:	mov	w0, wzr
  412b7c:	mov	w1, wzr
  412b80:	mov	x3, x20
  412b84:	mov	x4, x19
  412b88:	bl	4041d0 <error@plt>
  412b8c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  412b90:	mov	w9, #0x2                   	// #2
  412b94:	mov	w0, wzr
  412b98:	str	w9, [x8, #2944]
  412b9c:	b	412bb8 <wcrtomb@plt+0xddb8>
  412ba0:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  412ba4:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  412ba8:	mov	x0, x20
  412bac:	mov	x1, x19
  412bb0:	bl	412bc8 <wcrtomb@plt+0xddc8>
  412bb4:	mov	w0, wzr
  412bb8:	ldp	x20, x19, [sp, #32]
  412bbc:	ldr	x21, [sp, #16]
  412bc0:	ldp	x29, x30, [sp], #48
  412bc4:	ret
  412bc8:	sub	sp, sp, #0x60
  412bcc:	stp	x20, x19, [sp, #80]
  412bd0:	mov	x19, x1
  412bd4:	mov	x20, x0
  412bd8:	add	x1, sp, #0x18
  412bdc:	mov	x0, x2
  412be0:	stp	x29, x30, [sp, #48]
  412be4:	stp	x22, x21, [sp, #64]
  412be8:	add	x29, sp, #0x30
  412bec:	mov	x22, x3
  412bf0:	bl	433efc <argp_parse@@Base+0x5240>
  412bf4:	mov	x21, x0
  412bf8:	mov	x1, sp
  412bfc:	mov	x0, x22
  412c00:	bl	43401c <argp_parse@@Base+0x5360>
  412c04:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  412c08:	ldr	x8, [x8, #496]
  412c0c:	mov	x22, x0
  412c10:	cbz	x8, 412c18 <wcrtomb@plt+0xde18>
  412c14:	blr	x8
  412c18:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  412c1c:	add	x1, x1, #0x39
  412c20:	mov	w2, #0x5                   	// #5
  412c24:	mov	x0, xzr
  412c28:	bl	404bd0 <dcgettext@plt>
  412c2c:	mov	x2, x0
  412c30:	mov	w0, wzr
  412c34:	mov	w1, wzr
  412c38:	mov	x3, x20
  412c3c:	mov	x4, x19
  412c40:	mov	x5, x21
  412c44:	mov	x6, x22
  412c48:	bl	4041d0 <error@plt>
  412c4c:	ldp	x20, x19, [sp, #80]
  412c50:	ldp	x22, x21, [sp, #64]
  412c54:	ldp	x29, x30, [sp, #48]
  412c58:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  412c5c:	mov	w9, #0x2                   	// #2
  412c60:	str	w9, [x8, #2944]
  412c64:	add	sp, sp, #0x60
  412c68:	ret
  412c6c:	stp	x29, x30, [sp, #-64]!
  412c70:	stp	x22, x21, [sp, #32]
  412c74:	stp	x20, x19, [sp, #48]
  412c78:	mov	x29, sp
  412c7c:	mov	x21, x2
  412c80:	mov	x19, x1
  412c84:	mov	x20, x3
  412c88:	mov	x22, x0
  412c8c:	add	x1, x29, #0x18
  412c90:	mov	x0, x19
  412c94:	mov	x2, xzr
  412c98:	mov	x3, x21
  412c9c:	str	x23, [sp, #16]
  412ca0:	bl	418c88 <wcrtomb@plt+0x13e88>
  412ca4:	mov	x23, x0
  412ca8:	bl	404ce0 <__errno_location@plt>
  412cac:	ldr	w8, [x0]
  412cb0:	cmp	w8, #0x16
  412cb4:	b.eq	412cc4 <wcrtomb@plt+0xdec4>  // b.none
  412cb8:	ldr	x9, [x29, #24]
  412cbc:	ldrb	w9, [x9]
  412cc0:	cbz	w9, 412d24 <wcrtomb@plt+0xdf24>
  412cc4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  412cc8:	ldr	x8, [x8, #496]
  412ccc:	cbz	x8, 412cd4 <wcrtomb@plt+0xded4>
  412cd0:	blr	x8
  412cd4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  412cd8:	add	x1, x1, #0x10
  412cdc:	mov	w2, #0x5                   	// #5
  412ce0:	mov	x0, xzr
  412ce4:	bl	404bd0 <dcgettext@plt>
  412ce8:	mov	x2, x0
  412cec:	mov	w0, wzr
  412cf0:	mov	w1, wzr
  412cf4:	mov	x3, x20
  412cf8:	mov	x4, x19
  412cfc:	bl	4041d0 <error@plt>
  412d00:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  412d04:	mov	w9, #0x2                   	// #2
  412d08:	mov	w0, wzr
  412d0c:	str	w9, [x8, #2944]
  412d10:	ldp	x20, x19, [sp, #48]
  412d14:	ldp	x22, x21, [sp, #32]
  412d18:	ldr	x23, [sp, #16]
  412d1c:	ldp	x29, x30, [sp], #64
  412d20:	ret
  412d24:	cmp	w8, #0x22
  412d28:	b.ne	412d48 <wcrtomb@plt+0xdf48>  // b.any
  412d2c:	mov	x0, x20
  412d30:	mov	x1, x19
  412d34:	mov	x2, xzr
  412d38:	mov	x3, x21
  412d3c:	bl	412bc8 <wcrtomb@plt+0xddc8>
  412d40:	mov	w0, wzr
  412d44:	b	412d10 <wcrtomb@plt+0xdf10>
  412d48:	mov	w0, #0x1                   	// #1
  412d4c:	str	x23, [x22]
  412d50:	b	412d10 <wcrtomb@plt+0xdf10>
  412d54:	stp	x29, x30, [sp, #-32]!
  412d58:	stp	x20, x19, [sp, #16]
  412d5c:	mov	x19, x0
  412d60:	ldr	x0, [x0]
  412d64:	mov	x20, x1
  412d68:	mov	x29, sp
  412d6c:	cbz	x0, 412d78 <wcrtomb@plt+0xdf78>
  412d70:	bl	4049b0 <free@plt>
  412d74:	str	xzr, [x19]
  412d78:	mov	w0, wzr
  412d7c:	mov	x1, x20
  412d80:	mov	x2, x19
  412d84:	bl	4244e8 <wcrtomb@plt+0x1f6e8>
  412d88:	tbz	w0, #0, 412d98 <wcrtomb@plt+0xdf98>
  412d8c:	ldp	x20, x19, [sp, #16]
  412d90:	ldp	x29, x30, [sp], #32
  412d94:	ret
  412d98:	mov	x0, x19
  412d9c:	mov	x1, x20
  412da0:	ldp	x20, x19, [sp, #16]
  412da4:	ldp	x29, x30, [sp], #32
  412da8:	b	4186dc <wcrtomb@plt+0x138dc>
  412dac:	stp	x29, x30, [sp, #-32]!
  412db0:	stp	x20, x19, [sp, #16]
  412db4:	mov	x29, sp
  412db8:	mov	x19, x1
  412dbc:	mov	x20, x0
  412dc0:	bl	412d54 <wcrtomb@plt+0xdf54>
  412dc4:	add	x0, x20, #0x8
  412dc8:	mov	x1, x19
  412dcc:	bl	412d54 <wcrtomb@plt+0xdf54>
  412dd0:	ldr	x0, [x20, #8]
  412dd4:	bl	4305a8 <argp_parse@@Base+0x18ec>
  412dd8:	and	w8, w0, #0x1
  412ddc:	strb	w8, [x20, #16]
  412de0:	ldp	x20, x19, [sp, #16]
  412de4:	ldp	x29, x30, [sp], #32
  412de8:	ret
  412dec:	stp	x29, x30, [sp, #-32]!
  412df0:	stp	x20, x19, [sp, #16]
  412df4:	ldrb	w8, [x0]
  412df8:	mov	x29, sp
  412dfc:	cbz	w8, 412e2c <wcrtomb@plt+0xe02c>
  412e00:	mov	x19, x0
  412e04:	mov	x20, xzr
  412e08:	mov	x0, x19
  412e0c:	bl	404170 <strlen@plt>
  412e10:	add	x8, x0, #0x1
  412e14:	add	x19, x19, x8
  412e18:	ldrb	w9, [x19]
  412e1c:	add	x20, x8, x20
  412e20:	cbnz	w9, 412e08 <wcrtomb@plt+0xe008>
  412e24:	add	x0, x20, #0x1
  412e28:	b	412e30 <wcrtomb@plt+0xe030>
  412e2c:	mov	w0, #0x1                   	// #1
  412e30:	ldp	x20, x19, [sp, #16]
  412e34:	ldp	x29, x30, [sp], #32
  412e38:	ret
  412e3c:	stp	x29, x30, [sp, #-32]!
  412e40:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  412e44:	ldr	x0, [x8, #1704]
  412e48:	stp	x20, x19, [sp, #16]
  412e4c:	mov	x29, sp
  412e50:	cbz	x0, 412e58 <wcrtomb@plt+0xe058>
  412e54:	bl	432e94 <argp_parse@@Base+0x41d8>
  412e58:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  412e5c:	ldr	x0, [x8, #1712]
  412e60:	cbz	x0, 412e68 <wcrtomb@plt+0xe068>
  412e64:	bl	432e94 <argp_parse@@Base+0x41d8>
  412e68:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  412e6c:	ldr	x0, [x19, #1720]
  412e70:	cbz	x0, 412e84 <wcrtomb@plt+0xe084>
  412e74:	ldr	x20, [x0]
  412e78:	bl	412e9c <wcrtomb@plt+0xe09c>
  412e7c:	mov	x0, x20
  412e80:	cbnz	x20, 412e74 <wcrtomb@plt+0xe074>
  412e84:	str	xzr, [x19, #1720]
  412e88:	ldp	x20, x19, [sp, #16]
  412e8c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  412e90:	str	xzr, [x8, #1728]
  412e94:	ldp	x29, x30, [sp], #32
  412e98:	ret
  412e9c:	stp	x29, x30, [sp, #-32]!
  412ea0:	str	x19, [sp, #16]
  412ea4:	mov	x19, x0
  412ea8:	ldr	x0, [x0, #80]
  412eac:	mov	x29, sp
  412eb0:	bl	4049b0 <free@plt>
  412eb4:	ldr	x0, [x19, #88]
  412eb8:	bl	4049b0 <free@plt>
  412ebc:	mov	x0, x19
  412ec0:	ldr	x19, [sp, #16]
  412ec4:	ldp	x29, x30, [sp], #32
  412ec8:	b	4049b0 <free@plt>
  412ecc:	add	x0, x0, #0x58
  412ed0:	b	418bb0 <wcrtomb@plt+0x13db0>
  412ed4:	sub	sp, sp, #0xa0
  412ed8:	stp	x29, x30, [sp, #128]
  412edc:	stp	x20, x19, [sp, #144]
  412ee0:	mov	x20, x0
  412ee4:	ldr	x0, [x0]
  412ee8:	add	x29, sp, #0x80
  412eec:	bl	412f2c <wcrtomb@plt+0xe12c>
  412ef0:	cbz	x0, 412f1c <wcrtomb@plt+0xe11c>
  412ef4:	mov	x19, x0
  412ef8:	ldr	w0, [x20, #408]
  412efc:	mov	x1, sp
  412f00:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  412f04:	cbz	w0, 412f14 <wcrtomb@plt+0xe114>
  412f08:	ldr	x0, [x19, #88]
  412f0c:	bl	419d24 <wcrtomb@plt+0x14f24>
  412f10:	b	412f1c <wcrtomb@plt+0xe11c>
  412f14:	ldur	q0, [sp, #88]
  412f18:	stur	q0, [x19, #8]
  412f1c:	ldp	x20, x19, [sp, #144]
  412f20:	ldp	x29, x30, [sp, #128]
  412f24:	add	sp, sp, #0xa0
  412f28:	ret
  412f2c:	stp	x29, x30, [sp, #-32]!
  412f30:	stp	x20, x19, [sp, #16]
  412f34:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  412f38:	ldr	x8, [x20, #1704]
  412f3c:	mov	x29, sp
  412f40:	cbz	x8, 412f8c <wcrtomb@plt+0xe18c>
  412f44:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  412f48:	mov	x19, x0
  412f4c:	ldr	w0, [x8, #3584]
  412f50:	mov	x1, x19
  412f54:	bl	418ad8 <wcrtomb@plt+0x13cd8>
  412f58:	mov	x1, x0
  412f5c:	mov	x0, x19
  412f60:	bl	415330 <wcrtomb@plt+0x10530>
  412f64:	ldr	x8, [x20, #1704]
  412f68:	mov	x19, x0
  412f6c:	mov	x1, x19
  412f70:	mov	x0, x8
  412f74:	bl	43299c <argp_parse@@Base+0x3ce0>
  412f78:	mov	x20, x0
  412f7c:	mov	x0, x19
  412f80:	bl	412e9c <wcrtomb@plt+0xe09c>
  412f84:	mov	x0, x20
  412f88:	b	412f90 <wcrtomb@plt+0xe190>
  412f8c:	mov	x0, xzr
  412f90:	ldp	x20, x19, [sp, #16]
  412f94:	ldp	x29, x30, [sp], #32
  412f98:	ret
  412f9c:	stp	x29, x30, [sp, #-96]!
  412fa0:	stp	x28, x27, [sp, #16]
  412fa4:	stp	x26, x25, [sp, #32]
  412fa8:	stp	x24, x23, [sp, #48]
  412fac:	stp	x22, x21, [sp, #64]
  412fb0:	stp	x20, x19, [sp, #80]
  412fb4:	mov	x29, sp
  412fb8:	sub	sp, sp, #0x1d0
  412fbc:	ldr	x21, [x0]
  412fc0:	mov	x22, x0
  412fc4:	bl	40b2f0 <wcrtomb@plt+0x64f0>
  412fc8:	ldr	x24, [x22, #88]
  412fcc:	ldr	x19, [x22, #392]
  412fd0:	mov	x27, x0
  412fd4:	cbnz	x0, 412fe0 <wcrtomb@plt+0xe1e0>
  412fd8:	mov	x0, x21
  412fdc:	bl	4264bc <wcrtomb@plt+0x216bc>
  412fe0:	cmp	x19, #0x0
  412fe4:	mov	x0, x22
  412fe8:	cset	w19, eq  // eq = none
  412fec:	bl	40d77c <wcrtomb@plt+0x897c>
  412ff0:	mov	x0, x21
  412ff4:	bl	43a998 <argp_parse@@Base+0xbcdc>
  412ff8:	mov	x23, x0
  412ffc:	bl	418988 <wcrtomb@plt+0x13b88>
  413000:	lsl	w2, w19, #5
  413004:	sub	x3, x29, #0xc
  413008:	mov	x0, x23
  41300c:	mov	x1, x22
  413010:	bl	413468 <wcrtomb@plt+0xe668>
  413014:	mov	x20, x0
  413018:	mov	x0, x23
  41301c:	bl	4049b0 <free@plt>
  413020:	mov	x0, x21
  413024:	bl	419a54 <wcrtomb@plt+0x14c54>
  413028:	mov	x21, x0
  41302c:	cbz	x27, 413434 <wcrtomb@plt+0xe634>
  413030:	ldr	w8, [x20, #56]
  413034:	cbz	w8, 413048 <wcrtomb@plt+0xe248>
  413038:	cmp	w8, #0x2
  41303c:	b.ne	4130a8 <wcrtomb@plt+0xe2a8>  // b.any
  413040:	mov	x23, xzr
  413044:	b	4130c8 <wcrtomb@plt+0xe2c8>
  413048:	ldr	x0, [x20, #72]
  41304c:	cbz	x0, 413434 <wcrtomb@plt+0xe634>
  413050:	bl	404170 <strlen@plt>
  413054:	mov	x22, x0
  413058:	add	x23, x0, #0x1
  41305c:	add	x0, x0, #0x3
  413060:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  413064:	mov	w8, #0x59                  	// #89
  413068:	mov	x24, x0
  41306c:	strb	w8, [x0], #1
  413070:	ldr	x1, [x20, #72]
  413074:	mov	x2, x23
  413078:	bl	4040f0 <memcpy@plt>
  41307c:	add	x8, x22, x24
  413080:	strb	wzr, [x8, #2]
  413084:	ldr	x8, [x20, #40]
  413088:	mov	x0, x24
  41308c:	mov	x1, xzr
  413090:	str	x8, [x20, #48]
  413094:	bl	4156d0 <wcrtomb@plt+0x108d0>
  413098:	str	x0, [x20, #40]
  41309c:	mov	x0, x24
  4130a0:	bl	4049b0 <free@plt>
  4130a4:	b	413434 <wcrtomb@plt+0xe634>
  4130a8:	ldrb	w8, [x20, #60]
  4130ac:	tbnz	w8, #4, 4130b8 <wcrtomb@plt+0xe2b8>
  4130b0:	ldr	x23, [x20, #40]
  4130b4:	b	4130c8 <wcrtomb@plt+0xe2c8>
  4130b8:	ldr	x8, [x20, #64]
  4130bc:	ldr	x23, [x8, #48]
  4130c0:	cbnz	x23, 4130c8 <wcrtomb@plt+0xe2c8>
  4130c4:	ldr	x23, [x8, #40]
  4130c8:	ldrb	w8, [x27]
  4130cc:	str	x24, [sp]
  4130d0:	cbz	w8, 413108 <wcrtomb@plt+0xe308>
  4130d4:	mov	x24, xzr
  4130d8:	mov	x19, xzr
  4130dc:	mov	x25, x27
  4130e0:	mov	x0, x25
  4130e4:	bl	404170 <strlen@plt>
  4130e8:	add	x25, x0, x25
  4130ec:	ldrb	w8, [x25, #1]!
  4130f0:	add	x9, x19, x0
  4130f4:	add	x19, x9, #0x2
  4130f8:	add	x24, x24, #0x1
  4130fc:	cbnz	w8, 4130e0 <wcrtomb@plt+0xe2e0>
  413100:	add	x26, x19, #0x1
  413104:	b	413110 <wcrtomb@plt+0xe310>
  413108:	mov	x24, xzr
  41310c:	mov	w26, #0x1                   	// #1
  413110:	mov	w1, #0x8                   	// #8
  413114:	mov	x0, x24
  413118:	bl	43a928 <argp_parse@@Base+0xbc6c>
  41311c:	ldrb	w8, [x27]
  413120:	mov	x25, x0
  413124:	str	x27, [sp, #8]
  413128:	cbz	w8, 41314c <wcrtomb@plt+0xe34c>
  41312c:	ldr	x27, [sp, #8]
  413130:	mov	x19, x25
  413134:	mov	x0, x27
  413138:	str	x27, [x19], #8
  41313c:	bl	404170 <strlen@plt>
  413140:	add	x27, x0, x27
  413144:	ldrb	w8, [x27, #1]!
  413148:	cbnz	w8, 413134 <wcrtomb@plt+0xe334>
  41314c:	adrp	x3, 415000 <wcrtomb@plt+0x10200>
  413150:	add	x3, x3, #0x680
  413154:	mov	w2, #0x8                   	// #8
  413158:	mov	x0, x25
  41315c:	mov	x1, x24
  413160:	bl	404340 <qsort@plt>
  413164:	mov	x0, x26
  413168:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  41316c:	mov	x26, x0
  413170:	str	x0, [sp, #16]
  413174:	cbz	x24, 4131e8 <wcrtomb@plt+0xe3e8>
  413178:	ldr	x26, [sp, #16]
  41317c:	mov	x27, xzr
  413180:	mov	w28, #0x49                  	// #73
  413184:	mov	w19, #0x20                  	// #32
  413188:	ldr	x1, [x25, x27, lsl #3]
  41318c:	mov	x0, x23
  413190:	bl	41568c <wcrtomb@plt+0x1088c>
  413194:	ldr	x9, [x20, #72]
  413198:	cbz	x0, 4131b0 <wcrtomb@plt+0xe3b0>
  41319c:	cmp	x9, #0x0
  4131a0:	csel	w8, w28, w19, ne  // ne = any
  4131a4:	strb	w8, [x26], #1
  4131a8:	mov	x8, x26
  4131ac:	b	4131c8 <wcrtomb@plt+0xe3c8>
  4131b0:	add	x8, x26, #0x1
  4131b4:	cbz	x9, 4131c0 <wcrtomb@plt+0xe3c0>
  4131b8:	strb	w28, [x26]
  4131bc:	b	4131c8 <wcrtomb@plt+0xe3c8>
  4131c0:	mov	w9, #0x59                  	// #89
  4131c4:	strb	w9, [x26]
  4131c8:	ldr	x9, [x25, x27, lsl #3]
  4131cc:	mov	x26, x8
  4131d0:	ldrb	w8, [x9], #1
  4131d4:	strb	w8, [x26], #1
  4131d8:	cbnz	w8, 4131d0 <wcrtomb@plt+0xe3d0>
  4131dc:	add	x27, x27, #0x1
  4131e0:	cmp	x27, x24
  4131e4:	b.ne	413188 <wcrtomb@plt+0xe388>  // b.any
  4131e8:	strb	wzr, [x26]
  4131ec:	ldr	x19, [sp, #16]
  4131f0:	ldr	x8, [x20, #40]
  4131f4:	mov	x1, xzr
  4131f8:	mov	x0, x19
  4131fc:	str	x8, [x20, #48]
  413200:	bl	4156d0 <wcrtomb@plt+0x108d0>
  413204:	str	x0, [x20, #40]
  413208:	mov	x0, x19
  41320c:	bl	4049b0 <free@plt>
  413210:	mov	x0, x25
  413214:	bl	4049b0 <free@plt>
  413218:	ldr	x19, [x20, #40]
  41321c:	mov	w0, #0x18                  	// #24
  413220:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  413224:	mov	w8, #0x1                   	// #1
  413228:	mov	x23, x0
  41322c:	str	x19, [x0]
  413230:	str	w8, [x0, #8]
  413234:	str	xzr, [x0, #16]
  413238:	bl	4139b0 <wcrtomb@plt+0xebb0>
  41323c:	cbz	x0, 413428 <wcrtomb@plt+0xe628>
  413240:	add	x8, sp, #0x18
  413244:	adrp	x19, 419000 <wcrtomb@plt+0x14200>
  413248:	mov	x25, x0
  41324c:	mov	w24, #0x4e                  	// #78
  413250:	add	x19, x19, #0xd24
  413254:	add	x8, x8, #0x58
  413258:	str	x8, [sp, #16]
  41325c:	add	x27, x25, #0x1
  413260:	mov	x0, x21
  413264:	mov	x1, x27
  413268:	bl	419ee8 <wcrtomb@plt+0x150e8>
  41326c:	ldrb	w8, [x25]
  413270:	cmp	w8, #0x49
  413274:	b.eq	413288 <wcrtomb@plt+0xe488>  // b.none
  413278:	mov	x1, x22
  41327c:	mov	x26, x0
  413280:	bl	40d9d0 <wcrtomb@plt+0x8bd0>
  413284:	tbz	w0, #0, 413290 <wcrtomb@plt+0xe490>
  413288:	strb	w24, [x25]
  41328c:	b	413360 <wcrtomb@plt+0xe560>
  413290:	ldr	w28, [x22, #408]
  413294:	add	x0, sp, #0x18
  413298:	bl	420c80 <wcrtomb@plt+0x1be80>
  41329c:	tbnz	w28, #31, 41332c <wcrtomb@plt+0xe52c>
  4132a0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4132a4:	ldr	w3, [x8, #48]
  4132a8:	ldr	x2, [sp, #16]
  4132ac:	mov	w0, w28
  4132b0:	mov	x1, x27
  4132b4:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  4132b8:	mov	x2, x19
  4132bc:	cbnz	w0, 413348 <wcrtomb@plt+0xe548>
  4132c0:	ldr	w8, [sp, #128]
  4132c4:	and	w9, w8, #0xf000
  4132c8:	cmp	w9, #0x4, lsl #12
  4132cc:	b.ne	413300 <wcrtomb@plt+0xe500>  // b.any
  4132d0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4132d4:	ldr	w2, [x8, #196]
  4132d8:	mov	x0, x22
  4132dc:	mov	x1, x27
  4132e0:	bl	40a0e0 <wcrtomb@plt+0x52e0>
  4132e4:	tbnz	w0, #31, 413340 <wcrtomb@plt+0xe540>
  4132e8:	ldr	x1, [sp, #16]
  4132ec:	str	w0, [sp, #432]
  4132f0:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  4132f4:	mov	x2, x19
  4132f8:	cbnz	w0, 413348 <wcrtomb@plt+0xe548>
  4132fc:	ldr	w8, [sp, #128]
  413300:	and	w8, w8, #0xf000
  413304:	cmp	w8, #0x4, lsl #12
  413308:	b.ne	413374 <wcrtomb@plt+0xe574>  // b.any
  41330c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  413310:	ldr	w8, [x8, #164]
  413314:	cbz	w8, 4133e0 <wcrtomb@plt+0xe5e0>
  413318:	ldr	w8, [x20, #56]
  41331c:	cmp	w8, #0x2
  413320:	mov	w8, #0x12                  	// #18
  413324:	csel	w2, w8, wzr, eq  // eq = none
  413328:	b	4133e4 <wcrtomb@plt+0xe5e4>
  41332c:	mov	x27, x19
  413330:	neg	w19, w28
  413334:	bl	404ce0 <__errno_location@plt>
  413338:	str	w19, [x0]
  41333c:	mov	x19, x27
  413340:	adrp	x2, 419000 <wcrtomb@plt+0x14200>
  413344:	add	x2, x2, #0xc70
  413348:	mov	x0, x26
  41334c:	mov	w1, wzr
  413350:	bl	419d48 <wcrtomb@plt+0x14f48>
  413354:	strb	w24, [x25]
  413358:	add	x0, sp, #0x18
  41335c:	bl	420d00 <wcrtomb@plt+0x1bf00>
  413360:	mov	x0, x23
  413364:	bl	4139b0 <wcrtomb@plt+0xebb0>
  413368:	mov	x25, x0
  41336c:	cbnz	x0, 41325c <wcrtomb@plt+0xe45c>
  413370:	b	413428 <wcrtomb@plt+0xe628>
  413374:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  413378:	ldrb	w8, [x8, #3669]
  41337c:	cbz	w8, 413390 <wcrtomb@plt+0xe590>
  413380:	ldr	x8, [sp, #112]
  413384:	ldr	x9, [sp]
  413388:	cmp	x9, x8
  41338c:	b.ne	413354 <wcrtomb@plt+0xe554>  // b.any
  413390:	ldrb	w8, [x25]
  413394:	cmp	w8, #0x59
  413398:	b.eq	413358 <wcrtomb@plt+0xe558>  // b.none
  41339c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4133a0:	add	x8, x8, #0xe28
  4133a4:	ldr	x10, [sp, #200]
  4133a8:	ldp	x9, x8, [x8]
  4133ac:	cmp	x10, x9
  4133b0:	b.ge	41340c <wcrtomb@plt+0xe60c>  // b.tcont
  4133b4:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  4133b8:	ldr	w10, [x10, #460]
  4133bc:	cbz	w10, 413354 <wcrtomb@plt+0xe554>
  4133c0:	ldr	x10, [sp, #216]
  4133c4:	cmp	x10, x9
  4133c8:	b.lt	413354 <wcrtomb@plt+0xe554>  // b.tstop
  4133cc:	b.gt	41341c <wcrtomb@plt+0xe61c>
  4133d0:	ldr	x9, [sp, #224]
  4133d4:	cmp	w9, w8
  4133d8:	b.pl	41341c <wcrtomb@plt+0xe61c>  // b.nfrst
  4133dc:	b	413354 <wcrtomb@plt+0xe554>
  4133e0:	mov	w2, #0x10                  	// #16
  4133e4:	mov	w8, #0x44                  	// #68
  4133e8:	add	x1, sp, #0x18
  4133ec:	mov	x0, x26
  4133f0:	mov	x3, x25
  4133f4:	strb	w8, [x25]
  4133f8:	str	x22, [sp, #416]
  4133fc:	bl	413468 <wcrtomb@plt+0xe668>
  413400:	add	x0, sp, #0x18
  413404:	bl	40c16c <wcrtomb@plt+0x736c>
  413408:	b	413358 <wcrtomb@plt+0xe558>
  41340c:	b.gt	41341c <wcrtomb@plt+0xe61c>
  413410:	ldr	x10, [sp, #208]
  413414:	cmp	w10, w8
  413418:	b.mi	4133b4 <wcrtomb@plt+0xe5b4>  // b.first
  41341c:	mov	w8, #0x59                  	// #89
  413420:	strb	w8, [x25]
  413424:	b	413358 <wcrtomb@plt+0xe558>
  413428:	mov	x0, x23
  41342c:	bl	4049b0 <free@plt>
  413430:	ldr	x27, [sp, #8]
  413434:	mov	x0, x21
  413438:	bl	419ec0 <wcrtomb@plt+0x150c0>
  41343c:	mov	x0, x27
  413440:	bl	4049b0 <free@plt>
  413444:	mov	x0, x20
  413448:	add	sp, sp, #0x1d0
  41344c:	ldp	x20, x19, [sp, #80]
  413450:	ldp	x22, x21, [sp, #64]
  413454:	ldp	x24, x23, [sp, #48]
  413458:	ldp	x26, x25, [sp, #32]
  41345c:	ldp	x28, x27, [sp, #16]
  413460:	ldp	x29, x30, [sp], #96
  413464:	ret
  413468:	stp	x29, x30, [sp, #-96]!
  41346c:	stp	x26, x25, [sp, #32]
  413470:	stp	x24, x23, [sp, #48]
  413474:	stp	x22, x21, [sp, #64]
  413478:	stp	x20, x19, [sp, #80]
  41347c:	str	x27, [sp, #16]
  413480:	ldr	x27, [x1, #88]
  413484:	mov	x29, sp
  413488:	mov	x21, x3
  41348c:	mov	w23, w2
  413490:	mov	x22, x1
  413494:	mov	x20, x0
  413498:	bl	412f2c <wcrtomb@plt+0xe12c>
  41349c:	cbz	x0, 4134d8 <wcrtomb@plt+0xe6d8>
  4134a0:	ldrb	w8, [x0, #60]
  4134a4:	mov	x19, x0
  4134a8:	tbz	w8, #0, 4134bc <wcrtomb@plt+0xe6bc>
  4134ac:	tbz	w23, #5, 4134cc <wcrtomb@plt+0xe6cc>
  4134b0:	add	x0, x19, #0x58
  4134b4:	mov	x1, x20
  4134b8:	bl	4186dc <wcrtomb@plt+0x138dc>
  4134bc:	ldr	x0, [x19, #88]
  4134c0:	mov	x1, x20
  4134c4:	bl	404900 <strcmp@plt>
  4134c8:	cbz	w0, 4135ac <wcrtomb@plt+0xe7ac>
  4134cc:	mov	w8, #0x4e                  	// #78
  4134d0:	strb	w8, [x21]
  4134d4:	b	413930 <wcrtomb@plt+0xeb30>
  4134d8:	ldp	x0, x1, [x22, #88]
  4134dc:	bl	4153c4 <wcrtomb@plt+0x105c4>
  4134e0:	ldp	x1, x2, [x22, #176]
  4134e4:	ldp	x3, x4, [x22, #88]
  4134e8:	mov	x24, x0
  4134ec:	lsr	x5, x27, #63
  4134f0:	mov	w6, #0x1                   	// #1
  4134f4:	mov	x0, x20
  4134f8:	mov	x7, xzr
  4134fc:	bl	4154a4 <wcrtomb@plt+0x106a4>
  413500:	mov	x19, x0
  413504:	cbz	x24, 4135f4 <wcrtomb@plt+0xe7f4>
  413508:	ldr	x25, [x24, #88]
  41350c:	mov	x1, x20
  413510:	mov	x0, x25
  413514:	bl	404900 <strcmp@plt>
  413518:	cbz	w0, 4135a0 <wcrtomb@plt+0xe7a0>
  41351c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  413520:	ldrb	w8, [x8, #153]
  413524:	tbz	w8, #5, 413584 <wcrtomb@plt+0xe784>
  413528:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41352c:	ldr	x8, [x8, #496]
  413530:	cbz	x8, 413538 <wcrtomb@plt+0xe738>
  413534:	blr	x8
  413538:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  41353c:	add	x1, x1, #0x661
  413540:	mov	w2, #0x5                   	// #5
  413544:	mov	x0, xzr
  413548:	bl	404bd0 <dcgettext@plt>
  41354c:	mov	x25, x0
  413550:	mov	x0, x20
  413554:	bl	4398cc <argp_parse@@Base+0xac10>
  413558:	ldr	x1, [x24, #88]
  41355c:	mov	x26, x0
  413560:	mov	w0, #0x1                   	// #1
  413564:	bl	439ab0 <argp_parse@@Base+0xadf4>
  413568:	mov	x4, x0
  41356c:	mov	w0, wzr
  413570:	mov	w1, wzr
  413574:	mov	x2, x25
  413578:	mov	x3, x26
  41357c:	bl	4041d0 <error@plt>
  413580:	ldr	x25, [x24, #88]
  413584:	ldr	w8, [x19, #60]
  413588:	mov	x0, x25
  41358c:	mov	x1, x20
  413590:	str	x24, [x19, #64]
  413594:	orr	w8, w8, #0x10
  413598:	str	w8, [x19, #60]
  41359c:	bl	415434 <wcrtomb@plt+0x10634>
  4135a0:	mov	w8, wzr
  4135a4:	mov	w9, #0x1                   	// #1
  4135a8:	b	41367c <wcrtomb@plt+0xe87c>
  4135ac:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4135b0:	ldrb	w8, [x8, #3616]
  4135b4:	cbz	w8, 4135d4 <wcrtomb@plt+0xe7d4>
  4135b8:	ldrb	w8, [x19, #60]
  4135bc:	tbz	w8, #1, 4135c4 <wcrtomb@plt+0xe7c4>
  4135c0:	tbnz	x27, #63, 4135d4 <wcrtomb@plt+0xe7d4>
  4135c4:	ldr	x8, [x19, #24]
  4135c8:	ldr	x0, [x22, #88]
  4135cc:	cmp	x8, x0
  4135d0:	b.ne	41368c <wcrtomb@plt+0xe88c>  // b.any
  4135d4:	ldr	x8, [x19, #32]
  4135d8:	ldr	x1, [x22, #96]
  4135dc:	cmp	x8, x1
  4135e0:	b.ne	413684 <wcrtomb@plt+0xe884>  // b.any
  4135e4:	mov	w8, wzr
  4135e8:	mov	w9, #0x1                   	// #1
  4135ec:	str	w9, [x19, #56]
  4135f0:	b	413750 <wcrtomb@plt+0xe950>
  4135f4:	ldr	w8, [x19, #60]
  4135f8:	orr	w8, w8, #0x8
  4135fc:	str	w8, [x19, #60]
  413600:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  413604:	ldrb	w8, [x8, #153]
  413608:	tbz	w8, #4, 413650 <wcrtomb@plt+0xe850>
  41360c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  413610:	ldr	x8, [x8, #496]
  413614:	cbz	x8, 41361c <wcrtomb@plt+0xe81c>
  413618:	blr	x8
  41361c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  413620:	add	x1, x1, #0x688
  413624:	mov	w2, #0x5                   	// #5
  413628:	mov	x0, xzr
  41362c:	bl	404bd0 <dcgettext@plt>
  413630:	mov	x24, x0
  413634:	mov	x0, x20
  413638:	bl	4398cc <argp_parse@@Base+0xac10>
  41363c:	mov	x3, x0
  413640:	mov	w0, wzr
  413644:	mov	w1, wzr
  413648:	mov	x2, x24
  41364c:	bl	4041d0 <error@plt>
  413650:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  413654:	ldr	x8, [x8, #320]
  413658:	cbnz	x8, 413674 <wcrtomb@plt+0xe874>
  41365c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  413660:	add	x8, x8, #0xe28
  413664:	ldr	x10, [x22, #176]
  413668:	ldr	x9, [x8]
  41366c:	cmp	x10, x9
  413670:	b.ge	41396c <wcrtomb@plt+0xeb6c>  // b.tcont
  413674:	mov	w9, #0x2                   	// #2
  413678:	mov	w8, wzr
  41367c:	str	w9, [x19, #56]
  413680:	b	41375c <wcrtomb@plt+0xe95c>
  413684:	ldr	x0, [x22, #88]
  413688:	b	413690 <wcrtomb@plt+0xe890>
  41368c:	ldr	x1, [x22, #96]
  413690:	bl	4153c4 <wcrtomb@plt+0x105c4>
  413694:	cbz	x0, 413950 <wcrtomb@plt+0xeb50>
  413698:	ldr	x25, [x0, #88]
  41369c:	mov	x24, x0
  4136a0:	mov	x1, x20
  4136a4:	mov	x0, x25
  4136a8:	bl	404900 <strcmp@plt>
  4136ac:	cbz	w0, 413734 <wcrtomb@plt+0xe934>
  4136b0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4136b4:	ldrb	w8, [x8, #153]
  4136b8:	tbz	w8, #5, 413718 <wcrtomb@plt+0xe918>
  4136bc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4136c0:	ldr	x8, [x8, #496]
  4136c4:	cbz	x8, 4136cc <wcrtomb@plt+0xe8cc>
  4136c8:	blr	x8
  4136cc:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  4136d0:	add	x1, x1, #0x661
  4136d4:	mov	w2, #0x5                   	// #5
  4136d8:	mov	x0, xzr
  4136dc:	bl	404bd0 <dcgettext@plt>
  4136e0:	mov	x25, x0
  4136e4:	mov	x0, x20
  4136e8:	bl	4398cc <argp_parse@@Base+0xac10>
  4136ec:	ldr	x1, [x24, #88]
  4136f0:	mov	x26, x0
  4136f4:	mov	w0, #0x1                   	// #1
  4136f8:	bl	439ab0 <argp_parse@@Base+0xadf4>
  4136fc:	mov	x4, x0
  413700:	mov	w0, wzr
  413704:	mov	w1, wzr
  413708:	mov	x2, x25
  41370c:	mov	x3, x26
  413710:	bl	4041d0 <error@plt>
  413714:	ldr	x25, [x24, #88]
  413718:	ldr	w8, [x19, #60]
  41371c:	mov	x0, x25
  413720:	mov	x1, x20
  413724:	str	x24, [x19, #64]
  413728:	orr	w8, w8, #0x10
  41372c:	str	w8, [x19, #60]
  413730:	bl	415434 <wcrtomb@plt+0x10634>
  413734:	mov	w9, #0x1                   	// #1
  413738:	mov	w8, wzr
  41373c:	str	w9, [x19, #56]
  413740:	tbz	x27, #63, 413750 <wcrtomb@plt+0xe950>
  413744:	ldr	w9, [x19, #60]
  413748:	orr	w9, w9, #0x2
  41374c:	str	w9, [x19, #60]
  413750:	ldr	w9, [x19, #60]
  413754:	orr	w9, w9, #0x4
  413758:	str	w9, [x19, #60]
  41375c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  413760:	ldrb	w9, [x9, #3669]
  413764:	cbz	w9, 413780 <wcrtomb@plt+0xe980>
  413768:	ldr	x9, [x22, #392]
  41376c:	cbz	x9, 413780 <wcrtomb@plt+0xe980>
  413770:	ldr	x10, [x22, #88]
  413774:	ldr	x9, [x9, #88]
  413778:	cmp	x10, x9
  41377c:	b.ne	4137f0 <wcrtomb@plt+0xe9f0>  // b.any
  413780:	tbz	w23, #4, 413798 <wcrtomb@plt+0xe998>
  413784:	ands	w9, w23, #0x3
  413788:	str	w9, [x19, #56]
  41378c:	b.ne	413798 <wcrtomb@plt+0xe998>  // b.any
  413790:	mov	w9, #0x4e                  	// #78
  413794:	strb	w9, [x21]
  413798:	cbz	w8, 413864 <wcrtomb@plt+0xea64>
  41379c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4137a0:	ldrb	w8, [x8, #153]
  4137a4:	tbz	w8, #5, 413864 <wcrtomb@plt+0xea64>
  4137a8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4137ac:	ldr	x8, [x8, #496]
  4137b0:	cbz	x8, 4137b8 <wcrtomb@plt+0xe9b8>
  4137b4:	blr	x8
  4137b8:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  4137bc:	add	x1, x1, #0x6d4
  4137c0:	mov	w2, #0x5                   	// #5
  4137c4:	mov	x0, xzr
  4137c8:	bl	404bd0 <dcgettext@plt>
  4137cc:	mov	x23, x0
  4137d0:	mov	x0, x20
  4137d4:	bl	4398cc <argp_parse@@Base+0xac10>
  4137d8:	mov	x3, x0
  4137dc:	mov	w0, wzr
  4137e0:	mov	w1, wzr
  4137e4:	mov	x2, x23
  4137e8:	bl	4041d0 <error@plt>
  4137ec:	b	413864 <wcrtomb@plt+0xea64>
  4137f0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4137f4:	ldrb	w8, [x8, #154]
  4137f8:	tbz	w8, #2, 413844 <wcrtomb@plt+0xea44>
  4137fc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  413800:	ldr	x8, [x8, #496]
  413804:	cbz	x8, 41380c <wcrtomb@plt+0xea0c>
  413808:	blr	x8
  41380c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  413810:	add	x1, x1, #0x69d
  413814:	mov	w2, #0x5                   	// #5
  413818:	mov	x0, xzr
  41381c:	bl	404bd0 <dcgettext@plt>
  413820:	ldr	x8, [x19, #88]
  413824:	mov	x23, x0
  413828:	mov	x0, x8
  41382c:	bl	4398cc <argp_parse@@Base+0xac10>
  413830:	mov	x3, x0
  413834:	mov	w0, wzr
  413838:	mov	w1, wzr
  41383c:	mov	x2, x23
  413840:	bl	4041d0 <error@plt>
  413844:	ldr	x23, [x19, #40]
  413848:	str	wzr, [x19, #56]
  41384c:	cbz	x23, 413864 <wcrtomb@plt+0xea64>
  413850:	ldr	x0, [x23, #24]
  413854:	bl	4049b0 <free@plt>
  413858:	mov	x0, x23
  41385c:	bl	4049b0 <free@plt>
  413860:	str	xzr, [x19, #40]
  413864:	ldp	w9, w8, [x19, #56]
  413868:	orr	w8, w8, #0x1
  41386c:	str	w8, [x19, #60]
  413870:	cbz	w9, 413930 <wcrtomb@plt+0xeb30>
  413874:	add	x1, x29, #0x18
  413878:	mov	x0, x22
  41387c:	bl	40a040 <wcrtomb@plt+0x5240>
  413880:	cmp	w0, #0x1
  413884:	b.eq	4138d0 <wcrtomb@plt+0xead0>  // b.none
  413888:	cmp	w0, #0x2
  41388c:	b.eq	413900 <wcrtomb@plt+0xeb00>  // b.none
  413890:	cmp	w0, #0x3
  413894:	b.ne	413930 <wcrtomb@plt+0xeb30>  // b.any
  413898:	ldr	x22, [x29, #24]
  41389c:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4138a0:	add	x1, x1, #0x896
  4138a4:	mov	w2, #0x5                   	// #5
  4138a8:	mov	x0, xzr
  4138ac:	bl	404bd0 <dcgettext@plt>
  4138b0:	mov	x2, x0
  4138b4:	mov	x0, x20
  4138b8:	mov	x1, x22
  4138bc:	bl	409f94 <wcrtomb@plt+0x5194>
  4138c0:	mov	w8, #0x4e                  	// #78
  4138c4:	strb	w8, [x21]
  4138c8:	str	wzr, [x19, #56]
  4138cc:	b	413930 <wcrtomb@plt+0xeb30>
  4138d0:	ldr	x21, [x29, #24]
  4138d4:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4138d8:	add	x1, x1, #0x91b
  4138dc:	mov	w2, #0x5                   	// #5
  4138e0:	mov	x0, xzr
  4138e4:	bl	404bd0 <dcgettext@plt>
  4138e8:	mov	x2, x0
  4138ec:	mov	x0, x20
  4138f0:	mov	x1, x21
  4138f4:	bl	409f94 <wcrtomb@plt+0x5194>
  4138f8:	str	wzr, [x19, #56]
  4138fc:	b	413928 <wcrtomb@plt+0xeb28>
  413900:	ldr	x21, [x29, #24]
  413904:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  413908:	add	x1, x1, #0x91b
  41390c:	mov	w2, #0x5                   	// #5
  413910:	mov	x0, xzr
  413914:	bl	404bd0 <dcgettext@plt>
  413918:	mov	x2, x0
  41391c:	mov	x0, x20
  413920:	mov	x1, x21
  413924:	bl	409f94 <wcrtomb@plt+0x5194>
  413928:	ldr	x8, [x29, #24]
  41392c:	str	x8, [x19, #72]
  413930:	mov	x0, x19
  413934:	ldp	x20, x19, [sp, #80]
  413938:	ldp	x22, x21, [sp, #64]
  41393c:	ldp	x24, x23, [sp, #48]
  413940:	ldp	x26, x25, [sp, #32]
  413944:	ldr	x27, [sp, #16]
  413948:	ldp	x29, x30, [sp], #96
  41394c:	ret
  413950:	mov	w8, #0x2                   	// #2
  413954:	str	w8, [x19, #56]
  413958:	ldur	q0, [x22, #88]
  41395c:	mov	w8, #0x1                   	// #1
  413960:	stur	q0, [x19, #24]
  413964:	tbz	x27, #63, 413750 <wcrtomb@plt+0xe950>
  413968:	b	413744 <wcrtomb@plt+0xe944>
  41396c:	ldr	x8, [x8, #8]
  413970:	b.gt	413980 <wcrtomb@plt+0xeb80>
  413974:	ldr	x10, [x22, #184]
  413978:	cmp	w10, w8
  41397c:	b.mi	413674 <wcrtomb@plt+0xe874>  // b.first
  413980:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  413984:	ldr	w10, [x10, #460]
  413988:	cbz	w10, 4139a8 <wcrtomb@plt+0xeba8>
  41398c:	ldr	x10, [x22, #192]
  413990:	cmp	x10, x9
  413994:	b.lt	413674 <wcrtomb@plt+0xe874>  // b.tstop
  413998:	b.gt	4139a8 <wcrtomb@plt+0xeba8>
  41399c:	ldr	x9, [x22, #200]
  4139a0:	cmp	w9, w8
  4139a4:	b.mi	413674 <wcrtomb@plt+0xe874>  // b.first
  4139a8:	mov	w9, #0x1                   	// #1
  4139ac:	b	413678 <wcrtomb@plt+0xe878>
  4139b0:	stp	x29, x30, [sp, #-48]!
  4139b4:	stp	x20, x19, [sp, #32]
  4139b8:	str	x21, [sp, #16]
  4139bc:	ldr	x21, [x0, #16]
  4139c0:	ldr	w9, [x0, #8]
  4139c4:	ldr	x8, [x0]
  4139c8:	mov	x19, x0
  4139cc:	mov	x29, sp
  4139d0:	cbz	w9, 4139fc <wcrtomb@plt+0xebfc>
  4139d4:	ldr	x8, [x8]
  4139d8:	add	x20, x8, x21
  4139dc:	ldrb	w8, [x20]
  4139e0:	cbz	w8, 413a20 <wcrtomb@plt+0xec20>
  4139e4:	mov	x0, x20
  4139e8:	bl	404170 <strlen@plt>
  4139ec:	add	x8, x21, x0
  4139f0:	add	x8, x8, #0x1
  4139f4:	str	x8, [x19, #16]
  4139f8:	b	413a24 <wcrtomb@plt+0xec24>
  4139fc:	ldr	x9, [x8, #16]
  413a00:	cmp	x21, x9
  413a04:	b.cs	413a20 <wcrtomb@plt+0xec20>  // b.hs, b.nlast
  413a08:	ldr	x8, [x8, #24]
  413a0c:	add	x9, x21, #0x1
  413a10:	ldr	x8, [x8, x21, lsl #3]
  413a14:	str	x9, [x19, #16]
  413a18:	sub	x20, x8, #0x1
  413a1c:	b	413a24 <wcrtomb@plt+0xec24>
  413a20:	mov	x20, xzr
  413a24:	mov	x0, x20
  413a28:	ldp	x20, x19, [sp, #32]
  413a2c:	ldr	x21, [sp, #16]
  413a30:	ldp	x29, x30, [sp], #48
  413a34:	ret
  413a38:	cbz	x0, 413a48 <wcrtomb@plt+0xec48>
  413a3c:	ldr	x8, [x0, #40]
  413a40:	cbz	x8, 413a4c <wcrtomb@plt+0xec4c>
  413a44:	ldr	x0, [x8]
  413a48:	ret
  413a4c:	mov	x0, xzr
  413a50:	ret
  413a54:	cbz	x0, 413a68 <wcrtomb@plt+0xec68>
  413a58:	ldr	x8, [x0, #40]
  413a5c:	cbz	x8, 413a6c <wcrtomb@plt+0xec6c>
  413a60:	ldr	x8, [x8]
  413a64:	b	413a6c <wcrtomb@plt+0xec6c>
  413a68:	mov	x8, xzr
  413a6c:	adrp	x9, 44d000 <_obstack_memory_used@@Base+0x11808>
  413a70:	add	x9, x9, #0x4f0
  413a74:	cmp	x8, #0x0
  413a78:	csel	x0, x9, x8, eq  // eq = none
  413a7c:	ret
  413a80:	sub	sp, sp, #0xb0
  413a84:	stp	x24, x23, [sp, #128]
  413a88:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  413a8c:	ldr	x8, [x23, #1720]
  413a90:	stp	x29, x30, [sp, #96]
  413a94:	stp	x26, x25, [sp, #112]
  413a98:	stp	x22, x21, [sp, #144]
  413a9c:	stp	x20, x19, [sp, #160]
  413aa0:	add	x29, sp, #0x60
  413aa4:	cbz	x8, 413d4c <wcrtomb@plt+0xef4c>
  413aa8:	adrp	x3, 43a000 <argp_parse@@Base+0xb344>
  413aac:	adrp	x4, 404000 <mbrtowc@plt-0xe0>
  413ab0:	mov	x19, x0
  413ab4:	add	x3, x3, #0x7a4
  413ab8:	add	x4, x4, #0x9b0
  413abc:	add	x0, sp, #0x8
  413ac0:	mov	x1, xzr
  413ac4:	mov	x2, xzr
  413ac8:	bl	43b4e0 <_obstack_begin@@Base>
  413acc:	cbz	x19, 413b10 <wcrtomb@plt+0xed10>
  413ad0:	ldr	x8, [x19, #40]
  413ad4:	cbz	x8, 413b10 <wcrtomb@plt+0xed10>
  413ad8:	ldr	x21, [x8]
  413adc:	cbz	x21, 413b10 <wcrtomb@plt+0xed10>
  413ae0:	ldrb	w8, [x21]
  413ae4:	cbz	w8, 413b18 <wcrtomb@plt+0xed18>
  413ae8:	mov	x20, xzr
  413aec:	mov	x22, x21
  413af0:	mov	x0, x22
  413af4:	bl	404170 <strlen@plt>
  413af8:	add	x8, x0, #0x1
  413afc:	add	x22, x22, x8
  413b00:	ldrb	w9, [x22]
  413b04:	add	x20, x8, x20
  413b08:	cbnz	w9, 413af0 <wcrtomb@plt+0xecf0>
  413b0c:	b	413b1c <wcrtomb@plt+0xed1c>
  413b10:	mov	x20, xzr
  413b14:	b	413b54 <wcrtomb@plt+0xed54>
  413b18:	mov	x20, xzr
  413b1c:	ldp	x0, x8, [sp, #32]
  413b20:	sub	x8, x8, x0
  413b24:	cmp	x8, x20
  413b28:	b.cs	413b3c <wcrtomb@plt+0xed3c>  // b.hs, b.nlast
  413b2c:	add	x0, sp, #0x8
  413b30:	mov	x1, x20
  413b34:	bl	43b5e8 <_obstack_newchunk@@Base>
  413b38:	ldr	x0, [sp, #32]
  413b3c:	mov	x1, x21
  413b40:	mov	x2, x20
  413b44:	bl	4040f0 <memcpy@plt>
  413b48:	ldr	x8, [sp, #32]
  413b4c:	add	x8, x8, x20
  413b50:	str	x8, [sp, #32]
  413b54:	ldr	x24, [x23, #1720]
  413b58:	cbz	x24, 413c94 <wcrtomb@plt+0xee94>
  413b5c:	adrp	x21, 452000 <_obstack_memory_used@@Base+0x16808>
  413b60:	mov	w25, #0x58                  	// #88
  413b64:	add	x21, x21, #0x3ee
  413b68:	ldrb	w8, [x24, #60]
  413b6c:	tbz	w8, #4, 413c8c <wcrtomb@plt+0xee8c>
  413b70:	mov	x8, x24
  413b74:	cbz	x8, 413c68 <wcrtomb@plt+0xee68>
  413b78:	mov	x26, x8
  413b7c:	ldr	w9, [x8, #60]
  413b80:	ldr	x8, [x8, #64]
  413b84:	and	w9, w9, #0xffffffef
  413b88:	cmp	x8, x24
  413b8c:	str	w9, [x26, #60]
  413b90:	b.ne	413b74 <wcrtomb@plt+0xed74>  // b.any
  413b94:	ldr	x0, [x24, #88]
  413b98:	bl	4303e8 <argp_parse@@Base+0x172c>
  413b9c:	ldp	x8, x9, [sp, #32]
  413ba0:	mov	x22, x0
  413ba4:	cmp	x9, x8
  413ba8:	b.ne	413bbc <wcrtomb@plt+0xedbc>  // b.any
  413bac:	add	x0, sp, #0x8
  413bb0:	mov	w1, #0x1                   	// #1
  413bb4:	bl	43b5e8 <_obstack_newchunk@@Base>
  413bb8:	ldr	x8, [sp, #32]
  413bbc:	add	x9, x8, #0x1
  413bc0:	mov	x0, x22
  413bc4:	str	x9, [sp, #32]
  413bc8:	strb	w25, [x8]
  413bcc:	bl	404170 <strlen@plt>
  413bd0:	mov	x8, x0
  413bd4:	ldp	x0, x9, [sp, #32]
  413bd8:	add	x23, x8, #0x1
  413bdc:	sub	x8, x9, x0
  413be0:	cmp	x8, x23
  413be4:	b.cs	413bf8 <wcrtomb@plt+0xedf8>  // b.hs, b.nlast
  413be8:	add	x0, sp, #0x8
  413bec:	mov	x1, x23
  413bf0:	bl	43b5e8 <_obstack_newchunk@@Base>
  413bf4:	ldr	x0, [sp, #32]
  413bf8:	mov	x1, x22
  413bfc:	mov	x2, x23
  413c00:	bl	4040f0 <memcpy@plt>
  413c04:	ldr	x8, [sp, #32]
  413c08:	add	x0, sp, #0x8
  413c0c:	mov	x2, x21
  413c10:	add	x8, x8, x23
  413c14:	str	x8, [sp, #32]
  413c18:	ldr	x1, [x24, #88]
  413c1c:	bl	4157fc <wcrtomb@plt+0x109fc>
  413c20:	cmp	x26, x24
  413c24:	b.eq	413c4c <wcrtomb@plt+0xee4c>  // b.none
  413c28:	mov	x23, x24
  413c2c:	ldr	x8, [x23, #64]
  413c30:	ldr	x2, [x23, #88]
  413c34:	add	x0, sp, #0x8
  413c38:	ldr	x1, [x8, #88]
  413c3c:	bl	4157fc <wcrtomb@plt+0x109fc>
  413c40:	ldr	x23, [x23, #64]
  413c44:	cmp	x23, x26
  413c48:	b.ne	413c2c <wcrtomb@plt+0xee2c>  // b.any
  413c4c:	ldr	x2, [x26, #88]
  413c50:	add	x0, sp, #0x8
  413c54:	mov	x1, x21
  413c58:	bl	4157fc <wcrtomb@plt+0x109fc>
  413c5c:	mov	x0, x22
  413c60:	bl	4049b0 <free@plt>
  413c64:	b	413c8c <wcrtomb@plt+0xee8c>
  413c68:	mov	x22, x24
  413c6c:	ldr	x8, [x22, #64]
  413c70:	cbz	x8, 413c8c <wcrtomb@plt+0xee8c>
  413c74:	ldr	x1, [x8, #88]
  413c78:	ldr	x2, [x22, #88]
  413c7c:	add	x0, sp, #0x8
  413c80:	bl	4157fc <wcrtomb@plt+0x109fc>
  413c84:	ldr	x22, [x22, #64]
  413c88:	cbnz	x22, 413c6c <wcrtomb@plt+0xee6c>
  413c8c:	ldr	x24, [x24]
  413c90:	cbnz	x24, 413b68 <wcrtomb@plt+0xed68>
  413c94:	cbz	x19, 413d40 <wcrtomb@plt+0xef40>
  413c98:	ldp	x9, x8, [sp, #24]
  413c9c:	sub	x9, x8, x9
  413ca0:	cmp	x9, x20
  413ca4:	b.eq	413d40 <wcrtomb@plt+0xef40>  // b.none
  413ca8:	ldr	x9, [sp, #40]
  413cac:	cmp	x9, x8
  413cb0:	b.ne	413cc4 <wcrtomb@plt+0xeec4>  // b.any
  413cb4:	add	x0, sp, #0x8
  413cb8:	mov	w1, #0x1                   	// #1
  413cbc:	bl	43b5e8 <_obstack_newchunk@@Base>
  413cc0:	ldr	x8, [sp, #32]
  413cc4:	add	x9, x8, #0x1
  413cc8:	str	x9, [sp, #32]
  413ccc:	strb	wzr, [x8]
  413cd0:	ldr	x20, [x19, #40]
  413cd4:	ldr	x0, [x20, #24]
  413cd8:	bl	4049b0 <free@plt>
  413cdc:	mov	x0, x20
  413ce0:	bl	4049b0 <free@plt>
  413ce4:	ldp	x0, x8, [sp, #24]
  413ce8:	cmp	x8, x0
  413cec:	b.ne	413cfc <wcrtomb@plt+0xeefc>  // b.any
  413cf0:	ldrb	w9, [sp, #88]
  413cf4:	orr	w9, w9, #0x2
  413cf8:	strb	w9, [sp, #88]
  413cfc:	ldr	x10, [sp, #56]
  413d00:	ldr	x11, [sp, #16]
  413d04:	ldr	x9, [sp, #40]
  413d08:	add	x8, x10, x8
  413d0c:	bic	x8, x8, x10
  413d10:	sub	x10, x8, x11
  413d14:	sub	x11, x9, x11
  413d18:	cmp	x10, x11
  413d1c:	str	x8, [sp, #32]
  413d20:	b.ls	413d2c <wcrtomb@plt+0xef2c>  // b.plast
  413d24:	mov	x8, x9
  413d28:	str	x9, [sp, #32]
  413d2c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  413d30:	add	x1, x1, #0x6f3
  413d34:	str	x8, [sp, #24]
  413d38:	bl	4156d0 <wcrtomb@plt+0x108d0>
  413d3c:	str	x0, [x19, #40]
  413d40:	add	x0, sp, #0x8
  413d44:	mov	x1, xzr
  413d48:	bl	43b760 <_obstack_free@@Base>
  413d4c:	ldp	x20, x19, [sp, #160]
  413d50:	ldp	x22, x21, [sp, #144]
  413d54:	ldp	x24, x23, [sp, #128]
  413d58:	ldp	x26, x25, [sp, #112]
  413d5c:	ldp	x29, x30, [sp, #96]
  413d60:	add	sp, sp, #0xb0
  413d64:	ret
  413d68:	sub	sp, sp, #0x60
  413d6c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  413d70:	add	x1, x1, #0x58b
  413d74:	mov	w0, #0x1                   	// #1
  413d78:	stp	x29, x30, [sp, #48]
  413d7c:	stp	x22, x21, [sp, #64]
  413d80:	stp	x20, x19, [sp, #80]
  413d84:	add	x29, sp, #0x30
  413d88:	bl	4045d0 <__printf_chk@plt>
  413d8c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  413d90:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  413d94:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0x11808>
  413d98:	adrp	x4, 44d000 <_obstack_memory_used@@Base+0x11808>
  413d9c:	add	x1, x1, #0x5b6
  413da0:	add	x2, x2, #0x5d2
  413da4:	add	x3, x3, #0x5dd
  413da8:	add	x4, x4, #0x5e1
  413dac:	mov	w0, #0x1                   	// #1
  413db0:	bl	4045d0 <__printf_chk@plt>
  413db4:	adrp	x19, 44d000 <_obstack_memory_used@@Base+0x11808>
  413db8:	adrp	x22, 44d000 <_obstack_memory_used@@Base+0x11808>
  413dbc:	adrp	x20, 44d000 <_obstack_memory_used@@Base+0x11808>
  413dc0:	add	x19, x19, #0x6f7
  413dc4:	add	x22, x22, #0x508
  413dc8:	add	x20, x20, #0x5e5
  413dcc:	ldp	x0, x2, [x22, #-8]
  413dd0:	add	x3, sp, #0x18
  413dd4:	mov	x1, x0
  413dd8:	bl	418c74 <wcrtomb@plt+0x13e74>
  413ddc:	ldp	x1, x2, [x22, #-8]
  413de0:	mov	x21, x0
  413de4:	mov	x3, sp
  413de8:	mov	x0, x2
  413dec:	bl	418c74 <wcrtomb@plt+0x13e74>
  413df0:	mov	x4, x0
  413df4:	mov	w0, #0x1                   	// #1
  413df8:	mov	x1, x20
  413dfc:	mov	x2, x19
  413e00:	mov	x3, x21
  413e04:	bl	4045d0 <__printf_chk@plt>
  413e08:	ldr	x19, [x22, #8]
  413e0c:	add	x22, x22, #0x18
  413e10:	cbnz	x19, 413dcc <wcrtomb@plt+0xefcc>
  413e14:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  413e18:	add	x1, x1, #0xb03
  413e1c:	mov	w0, #0x1                   	// #1
  413e20:	bl	4045d0 <__printf_chk@plt>
  413e24:	ldp	x20, x19, [sp, #80]
  413e28:	ldp	x22, x21, [sp, #64]
  413e2c:	ldp	x29, x30, [sp, #48]
  413e30:	add	sp, sp, #0x60
  413e34:	ret
  413e38:	sub	sp, sp, #0x100
  413e3c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  413e40:	ldr	w8, [x8, #268]
  413e44:	stp	x20, x19, [sp, #240]
  413e48:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  413e4c:	ldr	x0, [x20, #320]
  413e50:	mov	w9, #0x42                  	// #66
  413e54:	cmp	w8, #0x0
  413e58:	mov	w8, #0x242                 	// #578
  413e5c:	csel	w1, w8, w9, eq  // eq = none
  413e60:	mov	w2, #0x1b6                 	// #438
  413e64:	stp	x29, x30, [sp, #160]
  413e68:	stp	x28, x27, [sp, #176]
  413e6c:	stp	x26, x25, [sp, #192]
  413e70:	stp	x24, x23, [sp, #208]
  413e74:	stp	x22, x21, [sp, #224]
  413e78:	add	x29, sp, #0xa0
  413e7c:	stp	xzr, xzr, [sp]
  413e80:	bl	404510 <open@plt>
  413e84:	tbnz	w0, #31, 413ee8 <wcrtomb@plt+0xf0e8>
  413e88:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  413e8c:	add	x1, x1, #0x5ff
  413e90:	mov	w19, w0
  413e94:	bl	4045f0 <fdopen@plt>
  413e98:	adrp	x28, 46a000 <_obstack_memory_used@@Base+0x2e808>
  413e9c:	str	x0, [x28, #1736]
  413ea0:	cbz	x0, 413ef4 <wcrtomb@plt+0xf0f4>
  413ea4:	bl	41be7c <wcrtomb@plt+0x1707c>
  413ea8:	bl	41bee8 <wcrtomb@plt+0x170e8>
  413eac:	ldr	x2, [x28, #1736]
  413eb0:	add	x0, sp, #0x8
  413eb4:	mov	x1, sp
  413eb8:	bl	404980 <getline@plt>
  413ebc:	cmp	x0, #0x1
  413ec0:	b.lt	4144c4 <wcrtomb@plt+0xf6c4>  // b.tstop
  413ec4:	ldr	x19, [sp, #8]
  413ec8:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  413ecc:	add	x1, x1, #0x602
  413ed0:	mov	w2, #0x7                   	// #7
  413ed4:	mov	x0, x19
  413ed8:	bl	404580 <strncmp@plt>
  413edc:	cbz	w0, 413f08 <wcrtomb@plt+0xf108>
  413ee0:	mov	x19, xzr
  413ee4:	b	413fd8 <wcrtomb@plt+0xf1d8>
  413ee8:	ldr	x0, [x20, #320]
  413eec:	bl	426218 <wcrtomb@plt+0x21418>
  413ef0:	b	4144e0 <wcrtomb@plt+0xf6e0>
  413ef4:	ldr	x0, [x20, #320]
  413ef8:	bl	426218 <wcrtomb@plt+0x21418>
  413efc:	mov	w0, w19
  413f00:	bl	4047a0 <close@plt>
  413f04:	b	4144e0 <wcrtomb@plt+0xf6e0>
  413f08:	ldrb	w8, [x19, #7]
  413f0c:	cmp	w8, #0x2d
  413f10:	b.eq	413f54 <wcrtomb@plt+0xf154>  // b.none
  413f14:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  413f18:	ldr	x8, [x8, #496]
  413f1c:	cbz	x8, 413f24 <wcrtomb@plt+0xf124>
  413f20:	blr	x8
  413f24:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  413f28:	add	x1, x1, #0x60a
  413f2c:	mov	w2, #0x5                   	// #5
  413f30:	mov	x0, xzr
  413f34:	bl	404bd0 <dcgettext@plt>
  413f38:	mov	x2, x0
  413f3c:	mov	w0, #0x1                   	// #1
  413f40:	mov	w1, wzr
  413f44:	bl	4041d0 <error@plt>
  413f48:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  413f4c:	mov	w9, #0x2                   	// #2
  413f50:	str	w9, [x8, #2944]
  413f54:	adrp	x20, 44d000 <_obstack_memory_used@@Base+0x11808>
  413f58:	add	x19, x19, #0x9
  413f5c:	adrp	x26, 46b000 <argp_program_version_hook@@Base+0x458>
  413f60:	add	x20, x20, #0x60a
  413f64:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  413f68:	mov	w22, #0x2                   	// #2
  413f6c:	ldurb	w8, [x19, #-1]
  413f70:	cbz	w8, 413f80 <wcrtomb@plt+0xf180>
  413f74:	cmp	w8, #0x2d
  413f78:	b.ne	413fb0 <wcrtomb@plt+0xf1b0>  // b.any
  413f7c:	b	413fb8 <wcrtomb@plt+0xf1b8>
  413f80:	ldr	x8, [x26, #496]
  413f84:	cbz	x8, 413f8c <wcrtomb@plt+0xf18c>
  413f88:	blr	x8
  413f8c:	mov	w2, #0x5                   	// #5
  413f90:	mov	x0, xzr
  413f94:	mov	x1, x20
  413f98:	bl	404bd0 <dcgettext@plt>
  413f9c:	mov	x2, x0
  413fa0:	mov	w0, #0x1                   	// #1
  413fa4:	mov	w1, wzr
  413fa8:	bl	4041d0 <error@plt>
  413fac:	str	w22, [x21, #2944]
  413fb0:	add	x19, x19, #0x1
  413fb4:	b	413f6c <wcrtomb@plt+0xf16c>
  413fb8:	mov	w2, #0xa                   	// #10
  413fbc:	mov	x0, x19
  413fc0:	mov	x1, xzr
  413fc4:	bl	404820 <strtoumax@plt>
  413fc8:	mov	x19, x0
  413fcc:	cmp	x0, #0x2
  413fd0:	b.cs	414118 <wcrtomb@plt+0xf318>  // b.hs, b.nlast
  413fd4:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  413fd8:	ldr	x0, [sp, #8]
  413fdc:	cmp	w19, #0x1
  413fe0:	str	xzr, [sp, #72]
  413fe4:	str	xzr, [sp, #48]
  413fe8:	b.ne	414010 <wcrtomb@plt+0xf210>  // b.any
  413fec:	ldr	x2, [x28, #1736]
  413ff0:	add	x0, sp, #0x48
  413ff4:	add	x1, sp, #0x30
  413ff8:	bl	404980 <getline@plt>
  413ffc:	cmp	x0, #0x1
  414000:	b.lt	414304 <wcrtomb@plt+0xf504>  // b.tstop
  414004:	ldr	x21, [sp, #72]
  414008:	mov	w20, #0x2                   	// #2
  41400c:	b	41402c <wcrtomb@plt+0xf22c>
  414010:	bl	404760 <strdup@plt>
  414014:	mov	x21, x0
  414018:	str	x0, [sp, #72]
  41401c:	bl	404170 <strlen@plt>
  414020:	add	x8, x0, #0x1
  414024:	mov	w20, #0x1                   	// #1
  414028:	str	x8, [sp, #48]
  41402c:	add	x1, sp, #0x18
  414030:	mov	x0, x21
  414034:	mov	w2, wzr
  414038:	bl	418eb4 <wcrtomb@plt+0x140b4>
  41403c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  414040:	add	x8, x8, #0xe28
  414044:	stp	x0, x1, [x8]
  414048:	tbnz	x1, #63, 414758 <wcrtomb@plt+0xf958>
  41404c:	cmp	w19, #0x1
  414050:	b.ne	41432c <wcrtomb@plt+0xf52c>  // b.any
  414054:	ldr	x8, [sp, #24]
  414058:	ldrb	w9, [x8]
  41405c:	cbz	w9, 41432c <wcrtomb@plt+0xf52c>
  414060:	add	x23, x8, #0x1
  414064:	bl	404ce0 <__errno_location@plt>
  414068:	mov	x22, x0
  41406c:	str	wzr, [x0]
  414070:	add	x1, sp, #0x18
  414074:	mov	w2, #0xa                   	// #10
  414078:	mov	x0, x23
  41407c:	bl	404820 <strtoumax@plt>
  414080:	ldr	w21, [x22]
  414084:	mov	w8, #0xc9ff                	// #51711
  414088:	movk	w8, #0x3b9a, lsl #16
  41408c:	cmp	x0, x8
  414090:	b.ls	414314 <wcrtomb@plt+0xf514>  // b.plast
  414094:	cbnz	w21, 414314 <wcrtomb@plt+0xf514>
  414098:	mov	w21, #0x22                  	// #34
  41409c:	str	w21, [x22]
  4140a0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4140a4:	ldr	x8, [x8, #496]
  4140a8:	cbz	x8, 4140b4 <wcrtomb@plt+0xf2b4>
  4140ac:	blr	x8
  4140b0:	ldr	w21, [x22]
  4140b4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4140b8:	ldr	x0, [x8, #320]
  4140bc:	bl	4398cc <argp_parse@@Base+0xac10>
  4140c0:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  4140c4:	mov	x22, x0
  4140c8:	add	x1, x1, #0x727
  4140cc:	mov	w2, #0x5                   	// #5
  4140d0:	mov	x0, xzr
  4140d4:	bl	404bd0 <dcgettext@plt>
  4140d8:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  4140dc:	mov	x5, x0
  4140e0:	add	x2, x2, #0x71c
  4140e4:	mov	w0, wzr
  4140e8:	mov	w1, w21
  4140ec:	mov	x3, x22
  4140f0:	mov	x4, x20
  4140f4:	bl	4041d0 <error@plt>
  4140f8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4140fc:	mov	w9, #0x2                   	// #2
  414100:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  414104:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  414108:	mov	x0, #0xffffffffffffffff    	// #-1
  41410c:	str	w9, [x8, #2944]
  414110:	str	x11, [x10, #3624]
  414114:	b	414324 <wcrtomb@plt+0xf524>
  414118:	b.ne	414500 <wcrtomb@plt+0xf700>  // b.any
  41411c:	adrp	x3, 43a000 <argp_parse@@Base+0xb344>
  414120:	adrp	x4, 404000 <mbrtowc@plt-0xe0>
  414124:	add	x3, x3, #0x7a4
  414128:	add	x4, x4, #0x9b0
  41412c:	add	x0, sp, #0x48
  414130:	mov	x1, xzr
  414134:	mov	x2, xzr
  414138:	bl	43b4e0 <_obstack_begin@@Base>
  41413c:	ldr	x0, [x28, #1736]
  414140:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  414144:	add	x1, x1, #0xe28
  414148:	bl	415958 <wcrtomb@plt+0x10b58>
  41414c:	ldr	x0, [x28, #1736]
  414150:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  414154:	add	x1, x1, #0x6f7
  414158:	add	x4, sp, #0x28
  41415c:	mov	w3, #0x1                   	// #1
  414160:	mov	x2, xzr
  414164:	bl	415a24 <wcrtomb@plt+0x10c24>
  414168:	tbz	w0, #0, 4144c0 <wcrtomb@plt+0xf6c0>
  41416c:	adrp	x19, 452000 <_obstack_memory_used@@Base+0x16808>
  414170:	adrp	x20, 44d000 <_obstack_memory_used@@Base+0x11808>
  414174:	adrp	x21, 44d000 <_obstack_memory_used@@Base+0x11808>
  414178:	add	x19, x19, #0x237
  41417c:	add	x20, x20, #0x718
  414180:	add	x21, x21, #0x6f7
  414184:	ldr	x0, [x28, #1736]
  414188:	ldr	x27, [sp, #40]
  41418c:	add	x1, sp, #0x18
  414190:	bl	415958 <wcrtomb@plt+0x10b58>
  414194:	ldr	x0, [x28, #1736]
  414198:	add	x4, sp, #0x28
  41419c:	mov	x3, #0xffffffffffffffff    	// #-1
  4141a0:	mov	x1, x19
  4141a4:	mov	x2, xzr
  4141a8:	bl	415a24 <wcrtomb@plt+0x10c24>
  4141ac:	tbz	w0, #0, 414688 <wcrtomb@plt+0xf888>
  4141b0:	ldr	x0, [x28, #1736]
  4141b4:	ldr	x22, [sp, #40]
  4141b8:	add	x4, sp, #0x28
  4141bc:	mov	x3, #0xffffffffffffffff    	// #-1
  4141c0:	mov	x1, x20
  4141c4:	mov	x2, xzr
  4141c8:	bl	415a24 <wcrtomb@plt+0x10c24>
  4141cc:	tbz	w0, #0, 414688 <wcrtomb@plt+0xf888>
  4141d0:	ldr	x0, [x28, #1736]
  4141d4:	ldr	x23, [sp, #40]
  4141d8:	add	x1, sp, #0x48
  4141dc:	add	x2, sp, #0x10
  4141e0:	bl	415d70 <wcrtomb@plt+0x10f70>
  4141e4:	cbnz	w0, 414688 <wcrtomb@plt+0xf888>
  4141e8:	ldp	x24, x8, [sp, #88]
  4141ec:	cmp	x8, x24
  4141f0:	b.ne	414200 <wcrtomb@plt+0xf400>  // b.any
  4141f4:	ldrb	w9, [sp, #152]
  4141f8:	orr	w9, w9, #0x2
  4141fc:	strb	w9, [sp, #152]
  414200:	ldr	x9, [sp, #120]
  414204:	ldr	x10, [sp, #80]
  414208:	ldr	x11, [sp, #104]
  41420c:	add	x8, x9, x8
  414210:	bic	x8, x8, x9
  414214:	sub	x12, x11, x10
  414218:	sub	x9, x8, x10
  41421c:	cmp	x9, x12
  414220:	csel	x8, x11, x8, hi  // hi = pmore
  414224:	stp	x8, x8, [sp, #88]
  414228:	ldr	x0, [x28, #1736]
  41422c:	add	x1, sp, #0x48
  414230:	add	x2, sp, #0x10
  414234:	bl	415d70 <wcrtomb@plt+0x10f70>
  414238:	cbnz	w0, 414248 <wcrtomb@plt+0xf448>
  41423c:	ldr	x8, [sp, #16]
  414240:	cmp	x8, #0x1
  414244:	b.hi	414228 <wcrtomb@plt+0xf428>  // b.pmore
  414248:	ldr	x0, [x28, #1736]
  41424c:	bl	404780 <getc_unlocked@plt>
  414250:	cbnz	w0, 4146d8 <wcrtomb@plt+0xf8d8>
  414254:	ldp	x25, x8, [sp, #88]
  414258:	cmp	x8, x25
  41425c:	b.ne	41426c <wcrtomb@plt+0xf46c>  // b.any
  414260:	ldrb	w9, [sp, #152]
  414264:	orr	w9, w9, #0x2
  414268:	strb	w9, [sp, #152]
  41426c:	ldr	x9, [sp, #120]
  414270:	ldr	x10, [sp, #80]
  414274:	ldr	x11, [sp, #104]
  414278:	ldp	x1, x2, [sp, #24]
  41427c:	add	x8, x9, x8
  414280:	bic	x8, x8, x9
  414284:	cmp	x27, #0x0
  414288:	sub	x12, x11, x10
  41428c:	sub	x9, x8, x10
  414290:	cset	w5, ne  // ne = any
  414294:	cmp	x9, x12
  414298:	csel	x8, x11, x8, hi  // hi = pmore
  41429c:	mov	x0, x24
  4142a0:	mov	x3, x22
  4142a4:	mov	x4, x23
  4142a8:	mov	w6, wzr
  4142ac:	mov	x7, x25
  4142b0:	stp	x8, x8, [sp, #88]
  4142b4:	bl	4154a4 <wcrtomb@plt+0x106a4>
  4142b8:	ldr	x8, [sp, #80]
  4142bc:	cmp	x25, x8
  4142c0:	b.ls	4142d8 <wcrtomb@plt+0xf4d8>  // b.plast
  4142c4:	ldr	x8, [sp, #104]
  4142c8:	cmp	x25, x8
  4142cc:	b.cs	4142d8 <wcrtomb@plt+0xf4d8>  // b.hs, b.nlast
  4142d0:	stp	x25, x25, [sp, #88]
  4142d4:	b	4142e4 <wcrtomb@plt+0xf4e4>
  4142d8:	add	x0, sp, #0x48
  4142dc:	mov	x1, x25
  4142e0:	bl	43b760 <_obstack_free@@Base>
  4142e4:	ldr	x0, [x28, #1736]
  4142e8:	add	x4, sp, #0x28
  4142ec:	mov	w3, #0x1                   	// #1
  4142f0:	mov	x1, x21
  4142f4:	mov	x2, xzr
  4142f8:	bl	415a24 <wcrtomb@plt+0x10c24>
  4142fc:	tbnz	w0, #0, 414184 <wcrtomb@plt+0xf384>
  414300:	b	4144c0 <wcrtomb@plt+0xf6c0>
  414304:	ldr	x0, [x20, #320]
  414308:	bl	426258 <wcrtomb@plt+0x21458>
  41430c:	ldr	x8, [sp, #72]
  414310:	b	4144b8 <wcrtomb@plt+0xf6b8>
  414314:	cbnz	w21, 4140a0 <wcrtomb@plt+0xf2a0>
  414318:	ldr	x8, [sp, #24]
  41431c:	cmp	x23, x8
  414320:	b.eq	4140a0 <wcrtomb@plt+0xf2a0>  // b.none
  414324:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  414328:	str	x0, [x8, #3632]
  41432c:	ldr	x2, [x28, #1736]
  414330:	add	x0, sp, #0x48
  414334:	add	x1, sp, #0x30
  414338:	bl	404980 <getline@plt>
  41433c:	ldr	x8, [sp, #72]
  414340:	cmp	w0, #0x1
  414344:	b.lt	4144b8 <wcrtomb@plt+0xf6b8>  // b.tstop
  414348:	add	x20, x20, #0x1
  41434c:	ldrb	w27, [x8]
  414350:	sub	w9, w0, #0x1
  414354:	ldrb	w10, [x8, w9, sxtw]
  414358:	cmp	w27, #0x2b
  41435c:	cinc	x0, x8, eq  // eq = none
  414360:	cmp	w10, #0xa
  414364:	b.ne	414370 <wcrtomb@plt+0xf570>  // b.any
  414368:	sxtw	x9, w9
  41436c:	strb	wzr, [x8, x9]
  414370:	cmp	w19, #0x1
  414374:	b.ne	4143f4 <wcrtomb@plt+0xf5f4>  // b.any
  414378:	add	x1, sp, #0x18
  41437c:	mov	w2, wzr
  414380:	bl	418eb4 <wcrtomb@plt+0x140b4>
  414384:	tbnz	x1, #63, 4145c4 <wcrtomb@plt+0xf7c4>
  414388:	ldr	x25, [sp, #24]
  41438c:	ldrb	w8, [x25]
  414390:	cmp	w8, #0x20
  414394:	b.ne	4145c4 <wcrtomb@plt+0xf7c4>  // b.any
  414398:	mov	x21, x0
  41439c:	bl	404ce0 <__errno_location@plt>
  4143a0:	mov	x23, x0
  4143a4:	str	wzr, [x0]
  4143a8:	add	x1, sp, #0x18
  4143ac:	mov	w2, #0xa                   	// #10
  4143b0:	mov	x0, x25
  4143b4:	bl	404820 <strtoumax@plt>
  4143b8:	ldr	w24, [x23]
  4143bc:	mov	w8, #0xc9ff                	// #51711
  4143c0:	movk	w8, #0x3b9a, lsl #16
  4143c4:	mov	x22, x0
  4143c8:	cmp	x0, x8
  4143cc:	b.ls	4143d4 <wcrtomb@plt+0xf5d4>  // b.plast
  4143d0:	cbz	w24, 414624 <wcrtomb@plt+0xf824>
  4143d4:	cbnz	w24, 41462c <wcrtomb@plt+0xf82c>
  4143d8:	ldr	x0, [sp, #24]
  4143dc:	cmp	x25, x0
  4143e0:	b.eq	41461c <wcrtomb@plt+0xf81c>  // b.none
  4143e4:	ldrb	w8, [x0]
  4143e8:	cmp	w8, #0x20
  4143ec:	b.eq	4143fc <wcrtomb@plt+0xf5fc>  // b.none
  4143f0:	b	41461c <wcrtomb@plt+0xf81c>
  4143f4:	mov	x22, xzr
  4143f8:	mov	x21, xzr
  4143fc:	add	x1, sp, #0x18
  414400:	mov	x3, #0xffffffffffffffff    	// #-1
  414404:	mov	x2, xzr
  414408:	bl	418c88 <wcrtomb@plt+0x13e88>
  41440c:	ldr	x26, [sp, #24]
  414410:	mov	x24, x0
  414414:	bl	404ce0 <__errno_location@plt>
  414418:	ldr	w25, [x0]
  41441c:	mov	x23, x0
  414420:	cbnz	w25, 414544 <wcrtomb@plt+0xf744>
  414424:	ldrb	w8, [x26]
  414428:	cmp	w8, #0x20
  41442c:	b.ne	414544 <wcrtomb@plt+0xf744>  // b.any
  414430:	add	x1, sp, #0x18
  414434:	mov	x3, #0xffffffffffffffff    	// #-1
  414438:	mov	x0, x26
  41443c:	mov	x2, xzr
  414440:	bl	418c88 <wcrtomb@plt+0x13e88>
  414444:	ldr	w25, [x23]
  414448:	cbnz	w25, 414574 <wcrtomb@plt+0xf774>
  41444c:	ldr	x8, [sp, #24]
  414450:	ldrb	w9, [x8]
  414454:	cmp	w9, #0x20
  414458:	b.ne	414574 <wcrtomb@plt+0xf774>  // b.any
  41445c:	add	x25, x8, #0x1
  414460:	mov	x26, x0
  414464:	cmp	w27, #0x2b
  414468:	mov	x0, x25
  41446c:	cset	w23, eq  // eq = none
  414470:	bl	418784 <wcrtomb@plt+0x13984>
  414474:	mov	x0, x25
  414478:	mov	x1, x21
  41447c:	mov	x2, x22
  414480:	mov	x3, x24
  414484:	mov	x4, x26
  414488:	mov	w5, w23
  41448c:	mov	w6, wzr
  414490:	mov	x7, xzr
  414494:	bl	4154a4 <wcrtomb@plt+0x106a4>
  414498:	ldr	x2, [x28, #1736]
  41449c:	add	x0, sp, #0x48
  4144a0:	add	x1, sp, #0x30
  4144a4:	bl	404980 <getline@plt>
  4144a8:	ldr	x8, [sp, #72]
  4144ac:	cmp	w0, #0x0
  4144b0:	add	x20, x20, #0x1
  4144b4:	b.gt	41434c <wcrtomb@plt+0xf54c>
  4144b8:	mov	x0, x8
  4144bc:	bl	4049b0 <free@plt>
  4144c0:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  4144c4:	ldr	x0, [x28, #1736]
  4144c8:	bl	4042b0 <ferror_unlocked@plt>
  4144cc:	cbz	w0, 4144d8 <wcrtomb@plt+0xf6d8>
  4144d0:	ldr	x0, [x20, #320]
  4144d4:	bl	426258 <wcrtomb@plt+0x21458>
  4144d8:	ldr	x0, [sp, #8]
  4144dc:	bl	4049b0 <free@plt>
  4144e0:	ldp	x20, x19, [sp, #240]
  4144e4:	ldp	x22, x21, [sp, #224]
  4144e8:	ldp	x24, x23, [sp, #208]
  4144ec:	ldp	x26, x25, [sp, #192]
  4144f0:	ldp	x28, x27, [sp, #176]
  4144f4:	ldp	x29, x30, [sp, #160]
  4144f8:	add	sp, sp, #0x100
  4144fc:	ret
  414500:	ldr	x8, [x26, #496]
  414504:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  414508:	cbz	x8, 414510 <wcrtomb@plt+0xf710>
  41450c:	blr	x8
  414510:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  414514:	add	x1, x1, #0x626
  414518:	mov	w2, #0x5                   	// #5
  41451c:	mov	x0, xzr
  414520:	bl	404bd0 <dcgettext@plt>
  414524:	mov	x2, x0
  414528:	mov	w0, #0x1                   	// #1
  41452c:	mov	w1, wzr
  414530:	mov	x3, x19
  414534:	bl	4041d0 <error@plt>
  414538:	mov	w8, #0x2                   	// #2
  41453c:	str	w8, [x21, #2944]
  414540:	b	4144c4 <wcrtomb@plt+0xf6c4>
  414544:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  414548:	ldr	x8, [x8, #496]
  41454c:	cbz	x8, 414558 <wcrtomb@plt+0xf758>
  414550:	blr	x8
  414554:	ldr	w25, [x23]
  414558:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41455c:	ldr	x0, [x8, #320]
  414560:	bl	4398cc <argp_parse@@Base+0xac10>
  414564:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  414568:	mov	x19, x0
  41456c:	add	x1, x1, #0x77c
  414570:	b	4145a0 <wcrtomb@plt+0xf7a0>
  414574:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  414578:	ldr	x8, [x8, #496]
  41457c:	cbz	x8, 414588 <wcrtomb@plt+0xf788>
  414580:	blr	x8
  414584:	ldr	w25, [x23]
  414588:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41458c:	ldr	x0, [x8, #320]
  414590:	bl	4398cc <argp_parse@@Base+0xac10>
  414594:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  414598:	mov	x19, x0
  41459c:	add	x1, x1, #0x792
  4145a0:	mov	w2, #0x5                   	// #5
  4145a4:	mov	x0, xzr
  4145a8:	bl	404bd0 <dcgettext@plt>
  4145ac:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  4145b0:	mov	x5, x0
  4145b4:	add	x2, x2, #0x71c
  4145b8:	mov	w0, wzr
  4145bc:	mov	w1, w25
  4145c0:	b	414678 <wcrtomb@plt+0xf878>
  4145c4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4145c8:	ldr	x8, [x8, #496]
  4145cc:	cbz	x8, 4145d4 <wcrtomb@plt+0xf7d4>
  4145d0:	blr	x8
  4145d4:	bl	404ce0 <__errno_location@plt>
  4145d8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4145dc:	ldr	w19, [x0]
  4145e0:	ldr	x0, [x8, #320]
  4145e4:	bl	4398cc <argp_parse@@Base+0xac10>
  4145e8:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  4145ec:	mov	x21, x0
  4145f0:	add	x1, x1, #0x73a
  4145f4:	mov	w2, #0x5                   	// #5
  4145f8:	mov	x0, xzr
  4145fc:	bl	404bd0 <dcgettext@plt>
  414600:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  414604:	mov	x5, x0
  414608:	add	x2, x2, #0x71c
  41460c:	mov	w0, wzr
  414610:	mov	w1, w19
  414614:	mov	x3, x21
  414618:	b	41467c <wcrtomb@plt+0xf87c>
  41461c:	mov	w24, wzr
  414620:	b	41462c <wcrtomb@plt+0xf82c>
  414624:	mov	w24, #0x22                  	// #34
  414628:	str	w24, [x23]
  41462c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  414630:	ldr	x8, [x8, #496]
  414634:	cbz	x8, 414640 <wcrtomb@plt+0xf840>
  414638:	blr	x8
  41463c:	ldr	w24, [x23]
  414640:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  414644:	ldr	x0, [x8, #320]
  414648:	bl	4398cc <argp_parse@@Base+0xac10>
  41464c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  414650:	mov	x19, x0
  414654:	add	x1, x1, #0x754
  414658:	mov	w2, #0x5                   	// #5
  41465c:	mov	x0, xzr
  414660:	bl	404bd0 <dcgettext@plt>
  414664:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  414668:	mov	x5, x0
  41466c:	add	x2, x2, #0x71c
  414670:	mov	w0, wzr
  414674:	mov	w1, w24
  414678:	mov	x3, x19
  41467c:	mov	x4, x20
  414680:	bl	4041d0 <error@plt>
  414684:	bl	40d698 <wcrtomb@plt+0x8898>
  414688:	ldr	x8, [x26, #496]
  41468c:	cbz	x8, 414694 <wcrtomb@plt+0xf894>
  414690:	blr	x8
  414694:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  414698:	ldr	x0, [x8, #320]
  41469c:	bl	4398cc <argp_parse@@Base+0xac10>
  4146a0:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  4146a4:	mov	x19, x0
  4146a8:	add	x1, x1, #0x7d1
  4146ac:	mov	w2, #0x5                   	// #5
  4146b0:	mov	x0, xzr
  4146b4:	bl	404bd0 <dcgettext@plt>
  4146b8:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  4146bc:	mov	x4, x0
  4146c0:	add	x2, x2, #0xe00
  4146c4:	mov	w0, wzr
  4146c8:	mov	w1, wzr
  4146cc:	mov	x3, x19
  4146d0:	bl	4041d0 <error@plt>
  4146d4:	bl	40d698 <wcrtomb@plt+0x8898>
  4146d8:	ldr	x8, [x26, #496]
  4146dc:	cbz	x8, 4146e4 <wcrtomb@plt+0xf8e4>
  4146e0:	blr	x8
  4146e4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  4146e8:	add	x1, x1, #0x7a7
  4146ec:	mov	w2, #0x5                   	// #5
  4146f0:	mov	x0, xzr
  4146f4:	bl	404bd0 <dcgettext@plt>
  4146f8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4146fc:	ldr	x8, [x8, #320]
  414700:	mov	x19, x0
  414704:	mov	x0, x8
  414708:	bl	4398cc <argp_parse@@Base+0xac10>
  41470c:	ldr	x8, [x28, #1736]
  414710:	mov	x20, x0
  414714:	mov	x0, x8
  414718:	bl	404ae0 <ftello@plt>
  41471c:	add	x1, sp, #0x30
  414720:	bl	433f8c <argp_parse@@Base+0x52d0>
  414724:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  414728:	mov	x21, x0
  41472c:	add	x1, x1, #0x7b7
  414730:	mov	w2, #0x5                   	// #5
  414734:	mov	x0, xzr
  414738:	bl	404bd0 <dcgettext@plt>
  41473c:	mov	x5, x0
  414740:	mov	w0, wzr
  414744:	mov	w1, wzr
  414748:	mov	x2, x19
  41474c:	mov	x3, x20
  414750:	mov	x4, x21
  414754:	b	414680 <wcrtomb@plt+0xf880>
  414758:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41475c:	ldr	x8, [x8, #496]
  414760:	cbz	x8, 414768 <wcrtomb@plt+0xf968>
  414764:	blr	x8
  414768:	bl	404ce0 <__errno_location@plt>
  41476c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  414770:	ldr	w19, [x0]
  414774:	ldr	x0, [x8, #320]
  414778:	bl	4398cc <argp_parse@@Base+0xac10>
  41477c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  414780:	mov	x21, x0
  414784:	add	x1, x1, #0x727
  414788:	b	4145f4 <wcrtomb@plt+0xf7f4>
  41478c:	sub	sp, sp, #0x50
  414790:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  414794:	stp	x20, x19, [sp, #64]
  414798:	ldr	x19, [x8, #1736]
  41479c:	stp	x29, x30, [sp, #32]
  4147a0:	stp	x22, x21, [sp, #48]
  4147a4:	add	x29, sp, #0x20
  4147a8:	cbz	x19, 4148b4 <wcrtomb@plt+0xfab4>
  4147ac:	mov	x0, x19
  4147b0:	mov	x1, xzr
  4147b4:	mov	w2, wzr
  4147b8:	bl	404970 <fseeko@plt>
  4147bc:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  4147c0:	cbz	w0, 4147cc <wcrtomb@plt+0xf9cc>
  4147c4:	ldr	x0, [x21, #320]
  4147c8:	bl	4264e4 <wcrtomb@plt+0x216e4>
  4147cc:	mov	x0, x19
  4147d0:	bl	4043d0 <fileno@plt>
  4147d4:	bl	41e540 <wcrtomb@plt+0x19740>
  4147d8:	cbz	w0, 4147e4 <wcrtomb@plt+0xf9e4>
  4147dc:	ldr	x0, [x21, #320]
  4147e0:	bl	42670c <wcrtomb@plt+0x2190c>
  4147e4:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  4147e8:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0x11808>
  4147ec:	adrp	x4, 44d000 <_obstack_memory_used@@Base+0x11808>
  4147f0:	add	x2, x2, #0x652
  4147f4:	add	x3, x3, #0x602
  4147f8:	add	x4, x4, #0x65c
  4147fc:	mov	w1, #0x1                   	// #1
  414800:	mov	w5, #0x2                   	// #2
  414804:	mov	x0, x19
  414808:	bl	4048f0 <__fprintf_chk@plt>
  41480c:	adrp	x22, 46b000 <argp_program_version_hook@@Base+0x458>
  414810:	add	x22, x22, #0xc8
  414814:	ldr	x0, [x22]
  414818:	add	x1, sp, #0x8
  41481c:	bl	433efc <argp_parse@@Base+0x5240>
  414820:	mov	x20, x0
  414824:	bl	404170 <strlen@plt>
  414828:	add	x1, x0, #0x1
  41482c:	mov	w2, #0x1                   	// #1
  414830:	mov	x0, x20
  414834:	mov	x3, x19
  414838:	bl	404150 <fwrite_unlocked@plt>
  41483c:	ldr	x0, [x22, #8]
  414840:	add	x1, sp, #0x8
  414844:	bl	43401c <argp_parse@@Base+0x5360>
  414848:	mov	x20, x0
  41484c:	bl	404170 <strlen@plt>
  414850:	add	x1, x0, #0x1
  414854:	mov	w2, #0x1                   	// #1
  414858:	mov	x0, x20
  41485c:	mov	x3, x19
  414860:	bl	404150 <fwrite_unlocked@plt>
  414864:	mov	x0, x19
  414868:	bl	4042b0 <ferror_unlocked@plt>
  41486c:	cbnz	w0, 41488c <wcrtomb@plt+0xfa8c>
  414870:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  414874:	ldr	x0, [x8, #1704]
  414878:	cbz	x0, 41488c <wcrtomb@plt+0xfa8c>
  41487c:	adrp	x1, 414000 <wcrtomb@plt+0xf200>
  414880:	add	x1, x1, #0x8c8
  414884:	mov	x2, x19
  414888:	bl	432b78 <argp_parse@@Base+0x3ebc>
  41488c:	mov	x0, x19
  414890:	bl	4042b0 <ferror_unlocked@plt>
  414894:	cbz	w0, 4148a0 <wcrtomb@plt+0xfaa0>
  414898:	ldr	x0, [x21, #320]
  41489c:	bl	426770 <wcrtomb@plt+0x21970>
  4148a0:	mov	x0, x19
  4148a4:	bl	404450 <fclose@plt>
  4148a8:	cbz	w0, 4148b4 <wcrtomb@plt+0xfab4>
  4148ac:	ldr	x0, [x21, #320]
  4148b0:	bl	426108 <wcrtomb@plt+0x21308>
  4148b4:	ldp	x20, x19, [sp, #64]
  4148b8:	ldp	x22, x21, [sp, #48]
  4148bc:	ldp	x29, x30, [sp, #32]
  4148c0:	add	sp, sp, #0x50
  4148c4:	ret
  4148c8:	sub	sp, sp, #0x50
  4148cc:	stp	x29, x30, [sp, #32]
  4148d0:	stp	x20, x19, [sp, #64]
  4148d4:	ldr	w8, [x0, #60]
  4148d8:	mov	x19, x1
  4148dc:	str	x21, [sp, #48]
  4148e0:	add	x29, sp, #0x20
  4148e4:	tbz	w8, #2, 414a64 <wcrtomb@plt+0xfc64>
  4148e8:	adrp	x9, 44f000 <_obstack_memory_used@@Base+0x13808>
  4148ec:	adrp	x10, 453000 <_obstack_memory_used@@Base+0x17808>
  4148f0:	add	x9, x9, #0xd5d
  4148f4:	add	x10, x10, #0x6b8
  4148f8:	tst	w8, #0x2
  4148fc:	mov	x20, x0
  414900:	csel	x0, x10, x9, eq  // eq = none
  414904:	mov	w1, #0x2                   	// #2
  414908:	mov	w2, #0x1                   	// #1
  41490c:	mov	x3, x19
  414910:	bl	404150 <fwrite_unlocked@plt>
  414914:	ldr	x0, [x20, #8]
  414918:	add	x3, sp, #0x8
  41491c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  414920:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  414924:	bl	418c74 <wcrtomb@plt+0x13e74>
  414928:	mov	x21, x0
  41492c:	bl	404170 <strlen@plt>
  414930:	add	x1, x0, #0x1
  414934:	mov	w2, #0x1                   	// #1
  414938:	mov	x0, x21
  41493c:	mov	x3, x19
  414940:	bl	404150 <fwrite_unlocked@plt>
  414944:	ldr	x0, [x20, #16]
  414948:	add	x1, sp, #0x8
  41494c:	bl	433efc <argp_parse@@Base+0x5240>
  414950:	mov	x21, x0
  414954:	bl	404170 <strlen@plt>
  414958:	add	x1, x0, #0x1
  41495c:	mov	w2, #0x1                   	// #1
  414960:	mov	x0, x21
  414964:	mov	x3, x19
  414968:	bl	404150 <fwrite_unlocked@plt>
  41496c:	ldr	x0, [x20, #24]
  414970:	add	x3, sp, #0x8
  414974:	mov	x2, #0xffffffffffffffff    	// #-1
  414978:	mov	x1, xzr
  41497c:	bl	418c74 <wcrtomb@plt+0x13e74>
  414980:	mov	x21, x0
  414984:	bl	404170 <strlen@plt>
  414988:	add	x1, x0, #0x1
  41498c:	mov	w2, #0x1                   	// #1
  414990:	mov	x0, x21
  414994:	mov	x3, x19
  414998:	bl	404150 <fwrite_unlocked@plt>
  41499c:	ldr	x0, [x20, #32]
  4149a0:	add	x3, sp, #0x8
  4149a4:	mov	x2, #0xffffffffffffffff    	// #-1
  4149a8:	mov	x1, xzr
  4149ac:	bl	418c74 <wcrtomb@plt+0x13e74>
  4149b0:	mov	x21, x0
  4149b4:	bl	404170 <strlen@plt>
  4149b8:	add	x1, x0, #0x1
  4149bc:	mov	w2, #0x1                   	// #1
  4149c0:	mov	x0, x21
  4149c4:	mov	x3, x19
  4149c8:	bl	404150 <fwrite_unlocked@plt>
  4149cc:	ldr	x21, [x20, #88]
  4149d0:	mov	x0, x21
  4149d4:	bl	404170 <strlen@plt>
  4149d8:	add	x1, x0, #0x1
  4149dc:	mov	w2, #0x1                   	// #1
  4149e0:	mov	x0, x21
  4149e4:	mov	x3, x19
  4149e8:	bl	404150 <fwrite_unlocked@plt>
  4149ec:	ldr	x21, [x20, #40]
  4149f0:	cbz	x21, 414a4c <wcrtomb@plt+0xfc4c>
  4149f4:	mov	w0, #0x18                  	// #24
  4149f8:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4149fc:	mov	x20, x0
  414a00:	str	x21, [x0]
  414a04:	str	wzr, [x0, #8]
  414a08:	str	xzr, [x0, #16]
  414a0c:	bl	4139b0 <wcrtomb@plt+0xebb0>
  414a10:	cbz	x0, 414a44 <wcrtomb@plt+0xfc44>
  414a14:	mov	x21, x0
  414a18:	mov	x0, x21
  414a1c:	bl	404170 <strlen@plt>
  414a20:	add	x1, x0, #0x1
  414a24:	mov	w2, #0x1                   	// #1
  414a28:	mov	x0, x21
  414a2c:	mov	x3, x19
  414a30:	bl	404150 <fwrite_unlocked@plt>
  414a34:	mov	x0, x20
  414a38:	bl	4139b0 <wcrtomb@plt+0xebb0>
  414a3c:	mov	x21, x0
  414a40:	cbnz	x0, 414a18 <wcrtomb@plt+0xfc18>
  414a44:	mov	x0, x20
  414a48:	bl	4049b0 <free@plt>
  414a4c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x11808>
  414a50:	add	x0, x0, #0x588
  414a54:	mov	w1, #0x2                   	// #2
  414a58:	mov	w2, #0x1                   	// #1
  414a5c:	mov	x3, x19
  414a60:	bl	404150 <fwrite_unlocked@plt>
  414a64:	mov	x0, x19
  414a68:	bl	4042b0 <ferror_unlocked@plt>
  414a6c:	ldp	x20, x19, [sp, #64]
  414a70:	ldr	x21, [sp, #48]
  414a74:	ldp	x29, x30, [sp, #32]
  414a78:	cmp	w0, #0x0
  414a7c:	cset	w0, eq  // eq = none
  414a80:	add	sp, sp, #0x50
  414a84:	ret
  414a88:	stp	x29, x30, [sp, #-96]!
  414a8c:	stp	x28, x27, [sp, #16]
  414a90:	stp	x26, x25, [sp, #32]
  414a94:	stp	x24, x23, [sp, #48]
  414a98:	stp	x22, x21, [sp, #64]
  414a9c:	stp	x20, x19, [sp, #80]
  414aa0:	ldrb	w8, [x0, #376]
  414aa4:	mov	x29, sp
  414aa8:	cbz	w8, 414ac0 <wcrtomb@plt+0xfcc0>
  414aac:	ldr	x8, [x0, #384]
  414ab0:	mov	x19, x0
  414ab4:	cbz	x8, 414ac8 <wcrtomb@plt+0xfcc8>
  414ab8:	mov	w0, #0x1                   	// #1
  414abc:	b	414ba4 <wcrtomb@plt+0xfda4>
  414ac0:	mov	w0, wzr
  414ac4:	b	414ba4 <wcrtomb@plt+0xfda4>
  414ac8:	ldr	x20, [x19, #136]
  414acc:	mov	x0, x20
  414ad0:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  414ad4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  414ad8:	ldr	x8, [x8, #3560]
  414adc:	mov	x21, x0
  414ae0:	mov	x0, x8
  414ae4:	bl	40587c <wcrtomb@plt+0xa7c>
  414ae8:	mov	x0, x19
  414aec:	bl	404fb8 <wcrtomb@plt+0x1b8>
  414af0:	cbz	x20, 414b88 <wcrtomb@plt+0xfd88>
  414af4:	adrp	x22, 44c000 <_obstack_memory_used@@Base+0x10808>
  414af8:	adrp	x26, 46b000 <argp_program_version_hook@@Base+0x458>
  414afc:	add	x22, x22, #0x582
  414b00:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x2e808>
  414b04:	mov	w28, #0x2                   	// #2
  414b08:	mov	x23, x21
  414b0c:	mov	x0, x20
  414b10:	bl	405058 <wcrtomb@plt+0x258>
  414b14:	bl	405574 <wcrtomb@plt+0x774>
  414b18:	mov	x24, x0
  414b1c:	cbnz	x0, 414b50 <wcrtomb@plt+0xfd50>
  414b20:	ldr	x8, [x26, #496]
  414b24:	cbz	x8, 414b2c <wcrtomb@plt+0xfd2c>
  414b28:	blr	x8
  414b2c:	mov	w2, #0x5                   	// #5
  414b30:	mov	x0, xzr
  414b34:	mov	x1, x22
  414b38:	bl	404bd0 <dcgettext@plt>
  414b3c:	mov	x2, x0
  414b40:	mov	w0, #0x1                   	// #1
  414b44:	mov	w1, wzr
  414b48:	bl	4041d0 <error@plt>
  414b4c:	str	w28, [x27, #2944]
  414b50:	mov	x0, x24
  414b54:	bl	4058c0 <wcrtomb@plt+0xac0>
  414b58:	cmp	x0, x20
  414b5c:	csel	x25, x20, x0, hi  // hi = pmore
  414b60:	mov	x0, x23
  414b64:	mov	x1, x24
  414b68:	mov	x2, x25
  414b6c:	bl	4040f0 <memcpy@plt>
  414b70:	add	x8, x24, x25
  414b74:	sub	x0, x8, #0x1
  414b78:	add	x23, x23, x25
  414b7c:	bl	40587c <wcrtomb@plt+0xa7c>
  414b80:	subs	x20, x20, x25
  414b84:	b.ne	414b0c <wcrtomb@plt+0xfd0c>  // b.any
  414b88:	bl	404fcc <wcrtomb@plt+0x1cc>
  414b8c:	ldrb	w8, [x19, #376]
  414b90:	mov	w9, #0x1                   	// #1
  414b94:	str	x21, [x19, #384]
  414b98:	strb	w9, [x19, #377]
  414b9c:	cmp	w8, #0x0
  414ba0:	cset	w0, ne  // ne = any
  414ba4:	ldp	x20, x19, [sp, #80]
  414ba8:	ldp	x22, x21, [sp, #64]
  414bac:	ldp	x24, x23, [sp, #48]
  414bb0:	ldp	x26, x25, [sp, #32]
  414bb4:	ldp	x28, x27, [sp, #16]
  414bb8:	ldp	x29, x30, [sp], #96
  414bbc:	ret
  414bc0:	sub	sp, sp, #0xf0
  414bc4:	stp	x20, x19, [sp, #224]
  414bc8:	mov	x20, x0
  414bcc:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  414bd0:	add	x0, x0, #0xe60
  414bd4:	stp	x29, x30, [sp, #144]
  414bd8:	stp	x28, x27, [sp, #160]
  414bdc:	stp	x26, x25, [sp, #176]
  414be0:	stp	x24, x23, [sp, #192]
  414be4:	stp	x22, x21, [sp, #208]
  414be8:	add	x29, sp, #0x90
  414bec:	bl	414a88 <wcrtomb@plt+0xfc88>
  414bf0:	tbz	w0, #0, 415238 <wcrtomb@plt+0x10438>
  414bf4:	mov	x0, x20
  414bf8:	mov	w1, wzr
  414bfc:	bl	4192a0 <wcrtomb@plt+0x144a0>
  414c00:	cbz	x0, 415238 <wcrtomb@plt+0x10438>
  414c04:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x2e808>
  414c08:	ldr	x21, [x25, #4064]
  414c0c:	mov	x19, x0
  414c10:	ldrb	w8, [x21]
  414c14:	cbz	w8, 414d90 <wcrtomb@plt+0xff90>
  414c18:	mov	w9, wzr
  414c1c:	mov	w22, wzr
  414c20:	mov	w24, wzr
  414c24:	mov	x23, x21
  414c28:	tbz	w9, #0, 414c34 <wcrtomb@plt+0xfe34>
  414c2c:	cmp	w22, w8, uxtb
  414c30:	b.ne	414ce8 <wcrtomb@plt+0xfee8>  // b.any
  414c34:	and	w8, w8, #0xff
  414c38:	cmp	w8, #0x52
  414c3c:	b.eq	414c5c <wcrtomb@plt+0xfe5c>  // b.none
  414c40:	cmp	w8, #0x54
  414c44:	b.eq	414c74 <wcrtomb@plt+0xfe74>  // b.none
  414c48:	cmp	w8, #0x58
  414c4c:	b.ne	414c8c <wcrtomb@plt+0xfe8c>  // b.any
  414c50:	cbnz	w24, 4151c0 <wcrtomb@plt+0x103c0>
  414c54:	mov	w24, #0x1                   	// #1
  414c58:	b	414c8c <wcrtomb@plt+0xfe8c>
  414c5c:	ldrb	w8, [x23, #1]
  414c60:	cbnz	w8, 414c6c <wcrtomb@plt+0xfe6c>
  414c64:	cbz	w24, 4151f8 <wcrtomb@plt+0x103f8>
  414c68:	mov	w24, wzr
  414c6c:	mov	w22, #0x54                  	// #84
  414c70:	b	414c8c <wcrtomb@plt+0xfe8c>
  414c74:	cmp	w22, #0x54
  414c78:	b.ne	414d2c <wcrtomb@plt+0xff2c>  // b.any
  414c7c:	mov	w22, wzr
  414c80:	cbnz	w24, 414c8c <wcrtomb@plt+0xfe8c>
  414c84:	ldrb	w8, [x23, #1]
  414c88:	cbz	w8, 4151dc <wcrtomb@plt+0x103dc>
  414c8c:	mov	x0, x23
  414c90:	bl	404170 <strlen@plt>
  414c94:	add	x23, x0, x23
  414c98:	ldrb	w8, [x23, #1]!
  414c9c:	cmp	w22, #0x0
  414ca0:	cset	w9, ne  // ne = any
  414ca4:	cbnz	w8, 414c28 <wcrtomb@plt+0xfe28>
  414ca8:	cbz	w22, 414d48 <wcrtomb@plt+0xff48>
  414cac:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  414cb0:	ldr	x8, [x8, #496]
  414cb4:	cbz	x8, 414cbc <wcrtomb@plt+0xfebc>
  414cb8:	blr	x8
  414cbc:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  414cc0:	add	x1, x1, #0xa08
  414cc4:	mov	w2, #0x5                   	// #5
  414cc8:	mov	x0, xzr
  414ccc:	bl	404bd0 <dcgettext@plt>
  414cd0:	mov	x2, x0
  414cd4:	mov	w0, wzr
  414cd8:	mov	w1, wzr
  414cdc:	mov	w3, w22
  414ce0:	bl	4041d0 <error@plt>
  414ce4:	b	41522c <wcrtomb@plt+0x1042c>
  414ce8:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  414cec:	ldr	x9, [x9, #496]
  414cf0:	and	w19, w8, #0xff
  414cf4:	cbz	x9, 414cfc <wcrtomb@plt+0xfefc>
  414cf8:	blr	x9
  414cfc:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  414d00:	add	x1, x1, #0x941
  414d04:	mov	w2, #0x5                   	// #5
  414d08:	mov	x0, xzr
  414d0c:	bl	404bd0 <dcgettext@plt>
  414d10:	mov	x2, x0
  414d14:	mov	w0, wzr
  414d18:	mov	w1, wzr
  414d1c:	mov	w3, w22
  414d20:	mov	w4, w19
  414d24:	bl	4041d0 <error@plt>
  414d28:	b	41522c <wcrtomb@plt+0x1042c>
  414d2c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  414d30:	ldr	x8, [x8, #496]
  414d34:	cbz	x8, 414d3c <wcrtomb@plt+0xff3c>
  414d38:	blr	x8
  414d3c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  414d40:	add	x1, x1, #0x9b8
  414d44:	b	415210 <wcrtomb@plt+0x10410>
  414d48:	cbz	w24, 414d90 <wcrtomb@plt+0xff90>
  414d4c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  414d50:	ldrb	w8, [x8, #152]
  414d54:	tbz	w8, #1, 414d90 <wcrtomb@plt+0xff90>
  414d58:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  414d5c:	ldr	x8, [x8, #496]
  414d60:	cbz	x8, 414d68 <wcrtomb@plt+0xff68>
  414d64:	blr	x8
  414d68:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  414d6c:	add	x1, x1, #0xa3f
  414d70:	mov	w2, #0x5                   	// #5
  414d74:	mov	x0, xzr
  414d78:	bl	404bd0 <dcgettext@plt>
  414d7c:	mov	x2, x0
  414d80:	mov	w0, wzr
  414d84:	mov	w1, wzr
  414d88:	bl	4041d0 <error@plt>
  414d8c:	ldr	x21, [x25, #4064]
  414d90:	mov	w28, #0x5858                	// #22616
  414d94:	adrp	x25, 44d000 <_obstack_memory_used@@Base+0x11808>
  414d98:	mov	x22, xzr
  414d9c:	adrp	x26, 46b000 <argp_program_version_hook@@Base+0x458>
  414da0:	mov	w27, #0x2f                  	// #47
  414da4:	movk	w28, #0x58, lsl #16
  414da8:	add	x25, x25, #0x881
  414dac:	str	x19, [sp, #8]
  414db0:	ldrb	w8, [x21]
  414db4:	cmp	w8, #0x52
  414db8:	b.eq	414dcc <wcrtomb@plt+0xffcc>  // b.none
  414dbc:	cmp	w8, #0x58
  414dc0:	b.eq	414e34 <wcrtomb@plt+0x10034>  // b.none
  414dc4:	cbnz	w8, 414e98 <wcrtomb@plt+0x10098>
  414dc8:	b	414eac <wcrtomb@plt+0x100ac>
  414dcc:	mov	x0, x21
  414dd0:	bl	404170 <strlen@plt>
  414dd4:	add	x19, x0, x21
  414dd8:	ldrb	w8, [x21, #1]!
  414ddc:	add	x23, x19, #0x2
  414de0:	mov	x24, x21
  414de4:	cbz	w8, 414dfc <wcrtomb@plt+0xfffc>
  414de8:	ldrb	w2, [x26, #440]
  414dec:	mov	x0, x24
  414df0:	mov	w1, wzr
  414df4:	bl	426884 <wcrtomb@plt+0x21a84>
  414df8:	mov	x24, x0
  414dfc:	ldrb	w8, [x23]
  414e00:	cbz	w8, 414e18 <wcrtomb@plt+0x10018>
  414e04:	ldrb	w2, [x26, #440]
  414e08:	mov	x0, x23
  414e0c:	mov	w1, wzr
  414e10:	bl	426884 <wcrtomb@plt+0x21a84>
  414e14:	mov	x23, x0
  414e18:	ldrb	w8, [x24]
  414e1c:	add	x21, x19, #0x1
  414e20:	cbz	w8, 414e84 <wcrtomb@plt+0x10084>
  414e24:	ldrb	w8, [x23]
  414e28:	cmp	w8, #0x0
  414e2c:	csel	x23, x22, x23, eq  // eq = none
  414e30:	b	414e88 <wcrtomb@plt+0x10088>
  414e34:	add	x23, x21, #0x1
  414e38:	mov	x0, x23
  414e3c:	bl	404170 <strlen@plt>
  414e40:	mov	x24, x0
  414e44:	add	x1, x0, #0xc
  414e48:	mov	x0, x22
  414e4c:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  414e50:	mov	x1, x23
  414e54:	mov	x2, x24
  414e58:	mov	x22, x0
  414e5c:	bl	4040f0 <memcpy@plt>
  414e60:	ldr	x8, [x25]
  414e64:	add	x9, x22, x24
  414e68:	mov	x0, x22
  414e6c:	strb	w27, [x9]
  414e70:	str	w28, [x9, #8]
  414e74:	stur	x8, [x9, #1]
  414e78:	bl	404840 <mkdtemp@plt>
  414e7c:	cbnz	x0, 414e98 <wcrtomb@plt+0x10098>
  414e80:	b	415154 <wcrtomb@plt+0x10354>
  414e84:	mov	x24, x22
  414e88:	mov	x0, x24
  414e8c:	mov	x1, x23
  414e90:	bl	40e890 <wcrtomb@plt+0x9a90>
  414e94:	tbz	w0, #0, 4151ac <wcrtomb@plt+0x103ac>
  414e98:	mov	x0, x21
  414e9c:	bl	404170 <strlen@plt>
  414ea0:	add	x8, x0, x21
  414ea4:	add	x21, x8, #0x1
  414ea8:	b	414db0 <wcrtomb@plt+0xffb0>
  414eac:	mov	x0, x22
  414eb0:	bl	4049b0 <free@plt>
  414eb4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  414eb8:	ldr	x0, [x8, #4064]
  414ebc:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  414ec0:	add	x1, x1, #0x6f3
  414ec4:	bl	4156d0 <wcrtomb@plt+0x108d0>
  414ec8:	ldr	x28, [sp, #8]
  414ecc:	mov	x21, x0
  414ed0:	mov	x22, xzr
  414ed4:	ldrb	w8, [x28]
  414ed8:	cbz	w8, 415114 <wcrtomb@plt+0x10314>
  414edc:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  414ee0:	adrp	x26, 46b000 <argp_program_version_hook@@Base+0x458>
  414ee4:	adrp	x19, 46b000 <argp_program_version_hook@@Base+0x458>
  414ee8:	adrp	x25, 46b000 <argp_program_version_hook@@Base+0x458>
  414eec:	adrp	x27, 46b000 <argp_program_version_hook@@Base+0x458>
  414ef0:	mov	x0, x22
  414ef4:	bl	4049b0 <free@plt>
  414ef8:	mov	x0, x20
  414efc:	mov	x1, x28
  414f00:	bl	41bf0c <wcrtomb@plt+0x1710c>
  414f04:	add	x1, sp, #0x10
  414f08:	mov	x22, x0
  414f0c:	bl	419588 <wcrtomb@plt+0x14788>
  414f10:	cbz	w0, 414f84 <wcrtomb@plt+0x10184>
  414f14:	bl	404ce0 <__errno_location@plt>
  414f18:	ldr	w8, [x0]
  414f1c:	cmp	w8, #0x2
  414f20:	b.eq	414f6c <wcrtomb@plt+0x1016c>  // b.none
  414f24:	mov	x0, x22
  414f28:	bl	419d24 <wcrtomb@plt+0x14f24>
  414f2c:	ldr	x8, [x25, #496]
  414f30:	cbz	x8, 414f38 <wcrtomb@plt+0x10138>
  414f34:	blr	x8
  414f38:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  414f3c:	mov	w2, #0x5                   	// #5
  414f40:	mov	x0, xzr
  414f44:	add	x1, x1, #0x8c0
  414f48:	bl	404bd0 <dcgettext@plt>
  414f4c:	mov	x23, x0
  414f50:	mov	x0, x22
  414f54:	bl	4398cc <argp_parse@@Base+0xac10>
  414f58:	mov	x3, x0
  414f5c:	mov	w0, wzr
  414f60:	mov	w1, wzr
  414f64:	mov	x2, x23
  414f68:	bl	4041d0 <error@plt>
  414f6c:	mov	x0, x28
  414f70:	bl	404170 <strlen@plt>
  414f74:	add	x28, x0, x28
  414f78:	ldrb	w8, [x28, #1]!
  414f7c:	cbnz	w8, 414ef0 <wcrtomb@plt+0x100f0>
  414f80:	b	415114 <wcrtomb@plt+0x10314>
  414f84:	mov	x0, x21
  414f88:	mov	x1, x28
  414f8c:	bl	41568c <wcrtomb@plt+0x1088c>
  414f90:	cbz	x0, 414fcc <wcrtomb@plt+0x101cc>
  414f94:	ldrb	w8, [x0]
  414f98:	cmp	w8, #0x59
  414f9c:	b.eq	414fbc <wcrtomb@plt+0x101bc>  // b.none
  414fa0:	cmp	w8, #0x44
  414fa4:	b.ne	414f6c <wcrtomb@plt+0x1016c>  // b.any
  414fa8:	ldr	w8, [sp, #32]
  414fac:	and	w8, w8, #0xf000
  414fb0:	cmp	w8, #0x4, lsl #12
  414fb4:	b.eq	414f6c <wcrtomb@plt+0x1016c>  // b.none
  414fb8:	b	414fcc <wcrtomb@plt+0x101cc>
  414fbc:	ldr	w8, [sp, #32]
  414fc0:	and	w8, w8, #0xf000
  414fc4:	cmp	w8, #0x4, lsl #12
  414fc8:	b.ne	414f6c <wcrtomb@plt+0x1016c>  // b.any
  414fcc:	ldrb	w8, [x24, #3669]
  414fd0:	cbz	w8, 414fe4 <wcrtomb@plt+0x101e4>
  414fd4:	ldr	x8, [sp, #16]
  414fd8:	ldr	x9, [x27, #312]
  414fdc:	cmp	x8, x9
  414fe0:	b.ne	4150f4 <wcrtomb@plt+0x102f4>  // b.any
  414fe4:	ldrb	w8, [x26, #80]
  414fe8:	cbz	w8, 415000 <wcrtomb@plt+0x10200>
  414fec:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  414ff0:	add	x0, x0, #0xe79
  414ff4:	mov	x1, x22
  414ff8:	bl	41f8c4 <wcrtomb@plt+0x1aac4>
  414ffc:	cbz	w0, 414f6c <wcrtomb@plt+0x1016c>
  415000:	ldr	w8, [x19, #132]
  415004:	cbz	w8, 415088 <wcrtomb@plt+0x10288>
  415008:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41500c:	ldr	x8, [x8, #3416]
  415010:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  415014:	mov	w2, #0x5                   	// #5
  415018:	mov	x0, xzr
  41501c:	add	x1, x1, #0x91e
  415020:	str	x8, [sp]
  415024:	bl	404bd0 <dcgettext@plt>
  415028:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41502c:	mov	x23, x20
  415030:	mov	x20, x21
  415034:	mov	x21, x25
  415038:	mov	x25, x27
  41503c:	mov	x27, x19
  415040:	mov	x19, x26
  415044:	ldr	x26, [x8, #3032]
  415048:	mov	x24, x0
  41504c:	mov	x0, x22
  415050:	bl	439ac0 <argp_parse@@Base+0xae04>
  415054:	mov	x4, x0
  415058:	ldr	x0, [sp]
  41505c:	mov	w1, #0x1                   	// #1
  415060:	mov	x2, x24
  415064:	mov	x3, x26
  415068:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41506c:	mov	x26, x19
  415070:	mov	x19, x27
  415074:	mov	x27, x25
  415078:	mov	x25, x21
  41507c:	mov	x21, x20
  415080:	mov	x20, x23
  415084:	bl	4048f0 <__fprintf_chk@plt>
  415088:	mov	w1, #0x1                   	// #1
  41508c:	mov	x0, x22
  415090:	bl	4190e0 <wcrtomb@plt+0x142e0>
  415094:	cbnz	w0, 414f6c <wcrtomb@plt+0x1016c>
  415098:	bl	404ce0 <__errno_location@plt>
  41509c:	ldr	x8, [x25, #496]
  4150a0:	ldr	w23, [x0]
  4150a4:	cbz	x8, 4150ac <wcrtomb@plt+0x102ac>
  4150a8:	blr	x8
  4150ac:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  4150b0:	mov	w2, #0x5                   	// #5
  4150b4:	mov	x0, xzr
  4150b8:	add	x1, x1, #0x92f
  4150bc:	bl	404bd0 <dcgettext@plt>
  4150c0:	mov	x24, x0
  4150c4:	mov	x0, x22
  4150c8:	bl	4398cc <argp_parse@@Base+0xac10>
  4150cc:	mov	x3, x0
  4150d0:	mov	w0, wzr
  4150d4:	mov	w1, w23
  4150d8:	mov	x2, x24
  4150dc:	bl	4041d0 <error@plt>
  4150e0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4150e4:	mov	w9, #0x2                   	// #2
  4150e8:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4150ec:	str	w9, [x8, #2944]
  4150f0:	b	414f6c <wcrtomb@plt+0x1016c>
  4150f4:	ldr	x8, [x25, #496]
  4150f8:	cbz	x8, 415100 <wcrtomb@plt+0x10300>
  4150fc:	blr	x8
  415100:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  415104:	mov	w2, #0x5                   	// #5
  415108:	mov	x0, xzr
  41510c:	add	x1, x1, #0x8ea
  415110:	b	414f48 <wcrtomb@plt+0x10148>
  415114:	mov	x0, x22
  415118:	bl	4049b0 <free@plt>
  41511c:	ldr	x0, [x21, #24]
  415120:	bl	4049b0 <free@plt>
  415124:	mov	x0, x21
  415128:	bl	4049b0 <free@plt>
  41512c:	ldr	x0, [sp, #8]
  415130:	bl	4049b0 <free@plt>
  415134:	ldp	x20, x19, [sp, #224]
  415138:	ldp	x22, x21, [sp, #208]
  41513c:	ldp	x24, x23, [sp, #192]
  415140:	ldp	x26, x25, [sp, #176]
  415144:	ldp	x28, x27, [sp, #160]
  415148:	ldp	x29, x30, [sp, #144]
  41514c:	add	sp, sp, #0xf0
  415150:	ret
  415154:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  415158:	ldr	x8, [x8, #496]
  41515c:	cbz	x8, 415164 <wcrtomb@plt+0x10364>
  415160:	blr	x8
  415164:	bl	404ce0 <__errno_location@plt>
  415168:	ldr	w20, [x0]
  41516c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  415170:	add	x1, x1, #0x88c
  415174:	mov	w2, #0x5                   	// #5
  415178:	mov	x0, xzr
  41517c:	bl	404bd0 <dcgettext@plt>
  415180:	mov	x21, x0
  415184:	mov	x0, x22
  415188:	bl	439ac0 <argp_parse@@Base+0xae04>
  41518c:	mov	x3, x0
  415190:	mov	w0, wzr
  415194:	mov	w1, w20
  415198:	mov	x2, x21
  41519c:	bl	4041d0 <error@plt>
  4151a0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4151a4:	mov	w9, #0x2                   	// #2
  4151a8:	str	w9, [x8, #2944]
  4151ac:	mov	x0, x22
  4151b0:	bl	4049b0 <free@plt>
  4151b4:	ldr	x0, [sp, #8]
  4151b8:	bl	4049b0 <free@plt>
  4151bc:	b	415238 <wcrtomb@plt+0x10438>
  4151c0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4151c4:	ldr	x8, [x8, #496]
  4151c8:	cbz	x8, 4151d0 <wcrtomb@plt+0x103d0>
  4151cc:	blr	x8
  4151d0:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  4151d4:	add	x1, x1, #0x971
  4151d8:	b	415210 <wcrtomb@plt+0x10410>
  4151dc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4151e0:	ldr	x8, [x8, #496]
  4151e4:	cbz	x8, 4151ec <wcrtomb@plt+0x103ec>
  4151e8:	blr	x8
  4151ec:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  4151f0:	add	x1, x1, #0x9e3
  4151f4:	b	415210 <wcrtomb@plt+0x10410>
  4151f8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4151fc:	ldr	x8, [x8, #496]
  415200:	cbz	x8, 415208 <wcrtomb@plt+0x10408>
  415204:	blr	x8
  415208:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  41520c:	add	x1, x1, #0x993
  415210:	mov	w2, #0x5                   	// #5
  415214:	mov	x0, xzr
  415218:	bl	404bd0 <dcgettext@plt>
  41521c:	mov	x2, x0
  415220:	mov	w0, wzr
  415224:	mov	w1, wzr
  415228:	bl	4041d0 <error@plt>
  41522c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  415230:	mov	w9, #0x2                   	// #2
  415234:	str	w9, [x8, #2944]
  415238:	ldp	x20, x19, [sp, #224]
  41523c:	ldp	x22, x21, [sp, #208]
  415240:	ldp	x24, x23, [sp, #192]
  415244:	ldp	x26, x25, [sp, #176]
  415248:	ldp	x28, x27, [sp, #160]
  41524c:	ldp	x29, x30, [sp, #144]
  415250:	add	sp, sp, #0xf0
  415254:	b	416cc8 <wcrtomb@plt+0x11ec8>
  415258:	stp	x29, x30, [sp, #-80]!
  41525c:	stp	x26, x25, [sp, #16]
  415260:	stp	x24, x23, [sp, #32]
  415264:	stp	x22, x21, [sp, #48]
  415268:	stp	x20, x19, [sp, #64]
  41526c:	mov	x29, sp
  415270:	cbz	x1, 415318 <wcrtomb@plt+0x10518>
  415274:	mov	w25, #0x4401                	// #17409
  415278:	adrp	x21, 452000 <_obstack_memory_used@@Base+0x16808>
  41527c:	adrp	x22, 452000 <_obstack_memory_used@@Base+0x16808>
  415280:	mov	x19, x1
  415284:	mov	x20, x0
  415288:	mov	w26, wzr
  41528c:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  415290:	mov	w24, #0x1                   	// #1
  415294:	movk	w25, #0x31, lsl #16
  415298:	add	x21, x21, #0x41
  41529c:	add	x22, x22, #0xfbb
  4152a0:	ldrb	w3, [x20]
  4152a4:	sub	w8, w3, #0x44
  4152a8:	cmp	w8, #0x15
  4152ac:	b.hi	4152e8 <wcrtomb@plt+0x104e8>  // b.pmore
  4152b0:	lsl	w8, w24, w8
  4152b4:	tst	w8, w25
  4152b8:	b.eq	4152e8 <wcrtomb@plt+0x104e8>  // b.none
  4152bc:	ldr	x0, [x23, #3416]
  4152c0:	mov	w1, #0x1                   	// #1
  4152c4:	mov	x2, x21
  4152c8:	bl	4048f0 <__fprintf_chk@plt>
  4152cc:	cbnz	w26, 41530c <wcrtomb@plt+0x1050c>
  4152d0:	ldr	x0, [x23, #3416]
  4152d4:	mov	w1, #0x1                   	// #1
  4152d8:	mov	x2, x22
  4152dc:	mov	w26, #0x1                   	// #1
  4152e0:	bl	4048f0 <__fprintf_chk@plt>
  4152e4:	b	41530c <wcrtomb@plt+0x1050c>
  4152e8:	cbnz	w3, 415300 <wcrtomb@plt+0x10500>
  4152ec:	ldr	x1, [x23, #3416]
  4152f0:	mov	w0, #0xa                   	// #10
  4152f4:	bl	404b70 <fputc_unlocked@plt>
  4152f8:	mov	w26, wzr
  4152fc:	b	41530c <wcrtomb@plt+0x1050c>
  415300:	ldr	x1, [x23, #3416]
  415304:	mov	w0, w3
  415308:	bl	404b70 <fputc_unlocked@plt>
  41530c:	subs	x19, x19, #0x1
  415310:	add	x20, x20, #0x1
  415314:	b.ne	4152a0 <wcrtomb@plt+0x104a0>  // b.any
  415318:	ldp	x20, x19, [sp, #64]
  41531c:	ldp	x22, x21, [sp, #48]
  415320:	ldp	x24, x23, [sp, #32]
  415324:	ldp	x26, x25, [sp, #16]
  415328:	ldp	x29, x30, [sp], #80
  41532c:	ret
  415330:	stp	x29, x30, [sp, #-64]!
  415334:	str	x23, [sp, #16]
  415338:	stp	x22, x21, [sp, #32]
  41533c:	stp	x20, x19, [sp, #48]
  415340:	mov	x29, sp
  415344:	mov	x19, x1
  415348:	mov	x20, x0
  41534c:	bl	404170 <strlen@plt>
  415350:	mov	x21, x0
  415354:	mov	w0, #0x60                  	// #96
  415358:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  41535c:	mov	x22, x0
  415360:	cmp	x21, #0x2
  415364:	str	xzr, [x0]
  415368:	str	xzr, [x0, #64]
  41536c:	str	wzr, [x0, #60]
  415370:	stp	xzr, xzr, [x0, #40]
  415374:	b.cc	415388 <wcrtomb@plt+0x10588>  // b.lo, b.ul, b.last
  415378:	sub	x8, x21, #0x1
  41537c:	ldrb	w9, [x20, x8]
  415380:	cmp	w9, #0x2f
  415384:	csel	x21, x8, x21, eq  // eq = none
  415388:	add	x0, x21, #0x1
  41538c:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  415390:	mov	x1, x20
  415394:	mov	x2, x21
  415398:	mov	x23, x0
  41539c:	str	x0, [x22, #88]
  4153a0:	bl	4040f0 <memcpy@plt>
  4153a4:	strb	wzr, [x23, x21]
  4153a8:	stp	xzr, x19, [x22, #72]
  4153ac:	mov	x0, x22
  4153b0:	ldp	x20, x19, [sp, #48]
  4153b4:	ldp	x22, x21, [sp, #32]
  4153b8:	ldr	x23, [sp, #16]
  4153bc:	ldp	x29, x30, [sp], #64
  4153c0:	ret
  4153c4:	stp	x29, x30, [sp, #-48]!
  4153c8:	stp	x22, x21, [sp, #16]
  4153cc:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4153d0:	ldr	x8, [x22, #1712]
  4153d4:	stp	x20, x19, [sp, #32]
  4153d8:	mov	x29, sp
  4153dc:	cbz	x8, 415420 <wcrtomb@plt+0x10620>
  4153e0:	mov	x20, x0
  4153e4:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  4153e8:	mov	x19, x1
  4153ec:	add	x0, x0, #0x3ee
  4153f0:	mov	x1, xzr
  4153f4:	bl	415330 <wcrtomb@plt+0x10530>
  4153f8:	mov	x21, x0
  4153fc:	ldr	x0, [x22, #1712]
  415400:	mov	x1, x21
  415404:	stp	x20, x19, [x21, #24]
  415408:	bl	43299c <argp_parse@@Base+0x3ce0>
  41540c:	mov	x19, x0
  415410:	mov	x0, x21
  415414:	bl	412e9c <wcrtomb@plt+0xe09c>
  415418:	mov	x0, x19
  41541c:	b	415424 <wcrtomb@plt+0x10624>
  415420:	mov	x0, xzr
  415424:	ldp	x20, x19, [sp, #32]
  415428:	ldp	x22, x21, [sp, #16]
  41542c:	ldp	x29, x30, [sp], #48
  415430:	ret
  415434:	stp	x29, x30, [sp, #-64]!
  415438:	str	x23, [sp, #16]
  41543c:	stp	x22, x21, [sp, #32]
  415440:	stp	x20, x19, [sp, #48]
  415444:	mov	x29, sp
  415448:	mov	x19, x1
  41544c:	mov	x20, x0
  415450:	bl	404170 <strlen@plt>
  415454:	mov	x21, x0
  415458:	mov	x0, x19
  41545c:	bl	404170 <strlen@plt>
  415460:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  415464:	ldr	x23, [x8, #1720]
  415468:	cbz	x23, 415490 <wcrtomb@plt+0x10690>
  41546c:	mov	x22, x0
  415470:	add	x0, x23, #0x58
  415474:	mov	x1, x20
  415478:	mov	x2, x21
  41547c:	mov	x3, x19
  415480:	mov	x4, x22
  415484:	bl	418bb0 <wcrtomb@plt+0x13db0>
  415488:	ldr	x23, [x23]
  41548c:	cbnz	x23, 415470 <wcrtomb@plt+0x10670>
  415490:	ldp	x20, x19, [sp, #48]
  415494:	ldp	x22, x21, [sp, #32]
  415498:	ldr	x23, [sp, #16]
  41549c:	ldp	x29, x30, [sp], #64
  4154a0:	ret
  4154a4:	stp	x29, x30, [sp, #-80]!
  4154a8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4154ac:	ldr	w8, [x8, #3584]
  4154b0:	stp	x20, x19, [sp, #64]
  4154b4:	mov	x19, x0
  4154b8:	stp	x26, x25, [sp, #16]
  4154bc:	mov	x26, x1
  4154c0:	mov	w0, w8
  4154c4:	mov	x1, x19
  4154c8:	stp	x24, x23, [sp, #32]
  4154cc:	stp	x22, x21, [sp, #48]
  4154d0:	mov	x29, sp
  4154d4:	mov	x20, x7
  4154d8:	mov	w21, w6
  4154dc:	mov	w22, w5
  4154e0:	mov	x23, x4
  4154e4:	mov	x24, x3
  4154e8:	mov	x25, x2
  4154ec:	bl	418ad8 <wcrtomb@plt+0x13cd8>
  4154f0:	mov	x1, x0
  4154f4:	mov	x0, x19
  4154f8:	bl	415330 <wcrtomb@plt+0x10530>
  4154fc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  415500:	ldr	x9, [x8, #1728]
  415504:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  415508:	add	x10, x10, #0x6b8
  41550c:	mov	x19, x0
  415510:	cmp	x9, #0x0
  415514:	mov	w11, #0x1                   	// #1
  415518:	csel	x9, x10, x9, eq  // eq = none
  41551c:	str	x0, [x9]
  415520:	str	x0, [x8, #1728]
  415524:	stp	x26, x25, [x0, #8]
  415528:	stp	x24, x23, [x0, #24]
  41552c:	str	w11, [x0, #56]
  415530:	tbnz	w22, #0, 415554 <wcrtomb@plt+0x10754>
  415534:	tbnz	w21, #0, 415564 <wcrtomb@plt+0x10764>
  415538:	cbz	x20, 415574 <wcrtomb@plt+0x10774>
  41553c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  415540:	add	x1, x1, #0x6f3
  415544:	mov	x0, x20
  415548:	bl	4156d0 <wcrtomb@plt+0x108d0>
  41554c:	mov	x8, x0
  415550:	b	415578 <wcrtomb@plt+0x10778>
  415554:	ldr	w8, [x19, #60]
  415558:	orr	w8, w8, #0x2
  41555c:	str	w8, [x19, #60]
  415560:	tbz	w21, #0, 415538 <wcrtomb@plt+0x10738>
  415564:	ldr	w8, [x19, #60]
  415568:	orr	w8, w8, #0x4
  41556c:	str	w8, [x19, #60]
  415570:	cbnz	x20, 41553c <wcrtomb@plt+0x1073c>
  415574:	mov	x8, xzr
  415578:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41557c:	ldr	x0, [x20, #1704]
  415580:	str	x8, [x19, #40]
  415584:	cbnz	x0, 4155ac <wcrtomb@plt+0x107ac>
  415588:	adrp	x2, 415000 <wcrtomb@plt+0x10200>
  41558c:	adrp	x3, 415000 <wcrtomb@plt+0x10200>
  415590:	add	x2, x2, #0x614
  415594:	add	x3, x3, #0x61c
  415598:	mov	x1, xzr
  41559c:	mov	x4, xzr
  4155a0:	bl	432c6c <argp_parse@@Base+0x3fb0>
  4155a4:	str	x0, [x20, #1704]
  4155a8:	cbz	x0, 415610 <wcrtomb@plt+0x10810>
  4155ac:	mov	x1, x19
  4155b0:	bl	433508 <argp_parse@@Base+0x484c>
  4155b4:	cbz	x0, 415610 <wcrtomb@plt+0x10810>
  4155b8:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4155bc:	ldr	x0, [x20, #1712]
  4155c0:	cbnz	x0, 4155e8 <wcrtomb@plt+0x107e8>
  4155c4:	adrp	x2, 415000 <wcrtomb@plt+0x10200>
  4155c8:	adrp	x3, 415000 <wcrtomb@plt+0x10200>
  4155cc:	add	x2, x2, #0x640
  4155d0:	add	x3, x3, #0x654
  4155d4:	mov	x1, xzr
  4155d8:	mov	x4, xzr
  4155dc:	bl	432c6c <argp_parse@@Base+0x3fb0>
  4155e0:	str	x0, [x20, #1712]
  4155e4:	cbz	x0, 415610 <wcrtomb@plt+0x10810>
  4155e8:	mov	x1, x19
  4155ec:	bl	433508 <argp_parse@@Base+0x484c>
  4155f0:	cbz	x0, 415610 <wcrtomb@plt+0x10810>
  4155f4:	mov	x0, x19
  4155f8:	ldp	x20, x19, [sp, #64]
  4155fc:	ldp	x22, x21, [sp, #48]
  415600:	ldp	x24, x23, [sp, #32]
  415604:	ldp	x26, x25, [sp, #16]
  415608:	ldp	x29, x30, [sp], #80
  41560c:	ret
  415610:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  415614:	ldr	x0, [x0, #80]
  415618:	b	432c14 <argp_parse@@Base+0x3f58>
  41561c:	stp	x29, x30, [sp, #-16]!
  415620:	ldr	x0, [x0, #80]
  415624:	ldr	x1, [x1, #80]
  415628:	mov	x29, sp
  41562c:	bl	404900 <strcmp@plt>
  415630:	cmp	w0, #0x0
  415634:	cset	w0, eq  // eq = none
  415638:	ldp	x29, x30, [sp], #16
  41563c:	ret
  415640:	ldp	x8, x9, [x0, #24]
  415644:	add	x8, x9, x8
  415648:	udiv	x9, x8, x1
  41564c:	msub	x0, x9, x1, x8
  415650:	ret
  415654:	ldr	x8, [x0, #24]
  415658:	ldr	x9, [x1, #24]
  41565c:	cmp	x8, x9
  415660:	b.ne	415678 <wcrtomb@plt+0x10878>  // b.any
  415664:	ldr	x8, [x0, #32]
  415668:	ldr	x9, [x1, #32]
  41566c:	cmp	x8, x9
  415670:	cset	w0, eq  // eq = none
  415674:	ret
  415678:	mov	w0, wzr
  41567c:	ret
  415680:	ldr	x0, [x0]
  415684:	ldr	x1, [x1]
  415688:	b	404900 <strcmp@plt>
  41568c:	sub	sp, sp, #0x20
  415690:	stp	x29, x30, [sp, #16]
  415694:	add	x29, sp, #0x10
  415698:	str	x1, [sp, #8]
  41569c:	cbz	x0, 4156c4 <wcrtomb@plt+0x108c4>
  4156a0:	ldp	x2, x1, [x0, #16]
  4156a4:	adrp	x4, 415000 <wcrtomb@plt+0x10200>
  4156a8:	add	x4, x4, #0x680
  4156ac:	add	x0, sp, #0x8
  4156b0:	mov	w3, #0x8                   	// #8
  4156b4:	bl	4046c0 <bsearch@plt>
  4156b8:	cbz	x0, 4156c4 <wcrtomb@plt+0x108c4>
  4156bc:	ldr	x8, [x0]
  4156c0:	sub	x0, x8, #0x1
  4156c4:	ldp	x29, x30, [sp, #16]
  4156c8:	add	sp, sp, #0x20
  4156cc:	ret
  4156d0:	stp	x29, x30, [sp, #-80]!
  4156d4:	stp	x26, x25, [sp, #16]
  4156d8:	stp	x24, x23, [sp, #32]
  4156dc:	stp	x22, x21, [sp, #48]
  4156e0:	stp	x20, x19, [sp, #64]
  4156e4:	ldrb	w25, [x0]
  4156e8:	mov	x21, x0
  4156ec:	mov	x19, x1
  4156f0:	mov	x29, sp
  4156f4:	cbz	w25, 415744 <wcrtomb@plt+0x10944>
  4156f8:	mov	x23, xzr
  4156fc:	mov	x24, xzr
  415700:	mov	w22, #0x1                   	// #1
  415704:	mov	x20, x21
  415708:	mov	x0, x20
  41570c:	bl	404170 <strlen@plt>
  415710:	add	x26, x0, #0x1
  415714:	add	x22, x26, x22
  415718:	cbz	x19, 41572c <wcrtomb@plt+0x1092c>
  41571c:	and	w1, w25, #0xff
  415720:	mov	x0, x19
  415724:	bl	404a50 <strchr@plt>
  415728:	cbz	x0, 415730 <wcrtomb@plt+0x10930>
  41572c:	add	x23, x23, #0x1
  415730:	add	x20, x20, x26
  415734:	ldrb	w25, [x20]
  415738:	add	x24, x24, #0x1
  41573c:	cbnz	w25, 415708 <wcrtomb@plt+0x10908>
  415740:	b	415750 <wcrtomb@plt+0x10950>
  415744:	mov	x24, xzr
  415748:	mov	x23, xzr
  41574c:	mov	w22, #0x1                   	// #1
  415750:	add	x0, x22, #0x20
  415754:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  415758:	mov	x20, x0
  41575c:	add	x0, x0, #0x20
  415760:	mov	x1, x21
  415764:	mov	x2, x22
  415768:	str	x0, [x20]
  41576c:	bl	4040f0 <memcpy@plt>
  415770:	add	x0, x23, #0x1
  415774:	mov	w1, #0x8                   	// #8
  415778:	stp	x24, x23, [x20, #8]
  41577c:	bl	43a928 <argp_parse@@Base+0xbc6c>
  415780:	ldr	x21, [x20]
  415784:	str	x0, [x20, #24]
  415788:	ldrb	w8, [x21]
  41578c:	cbz	w8, 4157d8 <wcrtomb@plt+0x109d8>
  415790:	mov	x22, xzr
  415794:	cbz	x19, 4157a8 <wcrtomb@plt+0x109a8>
  415798:	and	w1, w8, #0xff
  41579c:	mov	x0, x19
  4157a0:	bl	404a50 <strchr@plt>
  4157a4:	cbz	x0, 4157bc <wcrtomb@plt+0x109bc>
  4157a8:	ldr	x8, [x20, #24]
  4157ac:	add	x9, x21, #0x1
  4157b0:	add	x10, x22, #0x1
  4157b4:	str	x9, [x8, x22, lsl #3]
  4157b8:	mov	x22, x10
  4157bc:	mov	x0, x21
  4157c0:	bl	404170 <strlen@plt>
  4157c4:	add	x21, x0, x21
  4157c8:	ldrb	w8, [x21, #1]!
  4157cc:	cbnz	w8, 415794 <wcrtomb@plt+0x10994>
  4157d0:	ldr	x0, [x20, #24]
  4157d4:	b	4157dc <wcrtomb@plt+0x109dc>
  4157d8:	mov	x22, xzr
  4157dc:	str	xzr, [x0, x22, lsl #3]
  4157e0:	mov	x0, x20
  4157e4:	ldp	x20, x19, [sp, #64]
  4157e8:	ldp	x22, x21, [sp, #48]
  4157ec:	ldp	x24, x23, [sp, #32]
  4157f0:	ldp	x26, x25, [sp, #16]
  4157f4:	ldp	x29, x30, [sp], #80
  4157f8:	ret
  4157fc:	stp	x29, x30, [sp, #-64]!
  415800:	stp	x22, x21, [sp, #32]
  415804:	stp	x20, x19, [sp, #48]
  415808:	ldrb	w8, [x1]
  41580c:	str	x23, [sp, #16]
  415810:	mov	x20, x2
  415814:	mov	x21, x1
  415818:	mov	x19, x0
  41581c:	adrp	x23, 46b000 <argp_program_version_hook@@Base+0x458>
  415820:	mov	x29, sp
  415824:	cbz	w8, 41583c <wcrtomb@plt+0x10a3c>
  415828:	ldrb	w2, [x23, #440]
  41582c:	mov	x0, x21
  415830:	mov	w1, wzr
  415834:	bl	426884 <wcrtomb@plt+0x21a84>
  415838:	mov	x21, x0
  41583c:	ldp	x8, x9, [x19, #24]
  415840:	cmp	x9, x8
  415844:	b.ne	415858 <wcrtomb@plt+0x10a58>  // b.any
  415848:	mov	w1, #0x1                   	// #1
  41584c:	mov	x0, x19
  415850:	bl	43b5e8 <_obstack_newchunk@@Base>
  415854:	ldr	x8, [x19, #24]
  415858:	add	x9, x8, #0x1
  41585c:	mov	w10, #0x52                  	// #82
  415860:	mov	x0, x21
  415864:	str	x9, [x19, #24]
  415868:	strb	w10, [x8]
  41586c:	bl	404170 <strlen@plt>
  415870:	mov	x8, x0
  415874:	ldp	x0, x9, [x19, #24]
  415878:	add	x22, x8, #0x1
  41587c:	sub	x8, x9, x0
  415880:	cmp	x8, x22
  415884:	b.cs	415898 <wcrtomb@plt+0x10a98>  // b.hs, b.nlast
  415888:	mov	x0, x19
  41588c:	mov	x1, x22
  415890:	bl	43b5e8 <_obstack_newchunk@@Base>
  415894:	ldr	x0, [x19, #24]
  415898:	mov	x1, x21
  41589c:	mov	x2, x22
  4158a0:	bl	4040f0 <memcpy@plt>
  4158a4:	ldr	x8, [x19, #24]
  4158a8:	add	x8, x8, x22
  4158ac:	str	x8, [x19, #24]
  4158b0:	ldrb	w9, [x20]
  4158b4:	cbz	w9, 4158d0 <wcrtomb@plt+0x10ad0>
  4158b8:	ldrb	w2, [x23, #440]
  4158bc:	mov	x0, x20
  4158c0:	mov	w1, wzr
  4158c4:	bl	426884 <wcrtomb@plt+0x21a84>
  4158c8:	ldr	x8, [x19, #24]
  4158cc:	mov	x20, x0
  4158d0:	ldr	x9, [x19, #32]
  4158d4:	cmp	x9, x8
  4158d8:	b.ne	4158ec <wcrtomb@plt+0x10aec>  // b.any
  4158dc:	mov	w1, #0x1                   	// #1
  4158e0:	mov	x0, x19
  4158e4:	bl	43b5e8 <_obstack_newchunk@@Base>
  4158e8:	ldr	x8, [x19, #24]
  4158ec:	add	x9, x8, #0x1
  4158f0:	mov	w10, #0x54                  	// #84
  4158f4:	mov	x0, x20
  4158f8:	str	x9, [x19, #24]
  4158fc:	strb	w10, [x8]
  415900:	bl	404170 <strlen@plt>
  415904:	mov	x8, x0
  415908:	ldp	x0, x9, [x19, #24]
  41590c:	add	x21, x8, #0x1
  415910:	sub	x8, x9, x0
  415914:	cmp	x8, x21
  415918:	b.cs	41592c <wcrtomb@plt+0x10b2c>  // b.hs, b.nlast
  41591c:	mov	x0, x19
  415920:	mov	x1, x21
  415924:	bl	43b5e8 <_obstack_newchunk@@Base>
  415928:	ldr	x0, [x19, #24]
  41592c:	mov	x1, x20
  415930:	mov	x2, x21
  415934:	bl	4040f0 <memcpy@plt>
  415938:	ldr	x8, [x19, #24]
  41593c:	ldr	x23, [sp, #16]
  415940:	add	x8, x8, x21
  415944:	str	x8, [x19, #24]
  415948:	ldp	x20, x19, [sp, #48]
  41594c:	ldp	x22, x21, [sp, #32]
  415950:	ldp	x29, x30, [sp], #64
  415954:	ret
  415958:	sub	sp, sp, #0x30
  41595c:	stp	x20, x19, [sp, #32]
  415960:	mov	x19, x1
  415964:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  415968:	add	x1, x1, #0x705
  41596c:	add	x4, sp, #0x8
  415970:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  415974:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  415978:	stp	x29, x30, [sp, #16]
  41597c:	add	x29, sp, #0x10
  415980:	mov	x20, x0
  415984:	bl	415a24 <wcrtomb@plt+0x10c24>
  415988:	tbz	w0, #0, 4159d0 <wcrtomb@plt+0x10bd0>
  41598c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  415990:	mov	w3, #0xc9ff                	// #51711
  415994:	add	x1, x1, #0x713
  415998:	mov	x4, sp
  41599c:	movk	w3, #0x3b9a, lsl #16
  4159a0:	mov	x0, x20
  4159a4:	mov	x2, xzr
  4159a8:	bl	415a24 <wcrtomb@plt+0x10c24>
  4159ac:	tbz	w0, #0, 4159d0 <wcrtomb@plt+0x10bd0>
  4159b0:	ldr	x8, [sp, #8]
  4159b4:	str	x8, [x19]
  4159b8:	ldr	x8, [sp]
  4159bc:	str	x8, [x19, #8]
  4159c0:	ldp	x20, x19, [sp, #32]
  4159c4:	ldp	x29, x30, [sp, #16]
  4159c8:	add	sp, sp, #0x30
  4159cc:	ret
  4159d0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4159d4:	ldr	x8, [x8, #496]
  4159d8:	cbz	x8, 4159e0 <wcrtomb@plt+0x10be0>
  4159dc:	blr	x8
  4159e0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4159e4:	ldr	x0, [x8, #320]
  4159e8:	bl	4398cc <argp_parse@@Base+0xac10>
  4159ec:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  4159f0:	mov	x19, x0
  4159f4:	add	x1, x1, #0x7d1
  4159f8:	mov	w2, #0x5                   	// #5
  4159fc:	mov	x0, xzr
  415a00:	bl	404bd0 <dcgettext@plt>
  415a04:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  415a08:	mov	x4, x0
  415a0c:	add	x2, x2, #0xe00
  415a10:	mov	w0, wzr
  415a14:	mov	w1, wzr
  415a18:	mov	x3, x19
  415a1c:	bl	4041d0 <error@plt>
  415a20:	bl	40d698 <wcrtomb@plt+0x8898>
  415a24:	sub	sp, sp, #0xc0
  415a28:	stp	x29, x30, [sp, #112]
  415a2c:	str	x25, [sp, #128]
  415a30:	stp	x24, x23, [sp, #144]
  415a34:	stp	x22, x21, [sp, #160]
  415a38:	stp	x20, x19, [sp, #176]
  415a3c:	add	x29, sp, #0x70
  415a40:	mov	x23, x4
  415a44:	mov	x21, x3
  415a48:	mov	x22, x2
  415a4c:	mov	x19, x1
  415a50:	mov	x20, x0
  415a54:	bl	404780 <getc_unlocked@plt>
  415a58:	sub	w8, w0, #0x30
  415a5c:	cmp	w8, #0xa
  415a60:	b.cc	415a78 <wcrtomb@plt+0x10c78>  // b.lo, b.ul, b.last
  415a64:	cmp	w0, #0x2d
  415a68:	b.eq	415a78 <wcrtomb@plt+0x10c78>  // b.none
  415a6c:	mov	x24, xzr
  415a70:	mov	w25, #0x1                   	// #1
  415a74:	b	415aa8 <wcrtomb@plt+0x10ca8>
  415a78:	mov	x24, xzr
  415a7c:	sub	x25, x29, #0x18
  415a80:	cmp	x24, #0x14
  415a84:	strb	w0, [x25, x24]
  415a88:	b.eq	415b14 <wcrtomb@plt+0x10d14>  // b.none
  415a8c:	mov	x0, x20
  415a90:	bl	404780 <getc_unlocked@plt>
  415a94:	sub	w8, w0, #0x30
  415a98:	cmp	w8, #0xa
  415a9c:	add	x24, x24, #0x1
  415aa0:	b.cc	415a80 <wcrtomb@plt+0x10c80>  // b.lo, b.ul, b.last
  415aa4:	mov	w25, wzr
  415aa8:	sub	x8, x29, #0x18
  415aac:	strb	wzr, [x8, x24]
  415ab0:	tbnz	w0, #31, 415ae4 <wcrtomb@plt+0x10ce4>
  415ab4:	cbnz	w0, 415c2c <wcrtomb@plt+0x10e2c>
  415ab8:	sub	x0, x29, #0x18
  415abc:	mov	x1, xzr
  415ac0:	mov	x2, x22
  415ac4:	mov	x3, x21
  415ac8:	bl	418c88 <wcrtomb@plt+0x13e88>
  415acc:	str	x0, [x23]
  415ad0:	bl	404ce0 <__errno_location@plt>
  415ad4:	ldr	w23, [x0]
  415ad8:	cbnz	w23, 415b88 <wcrtomb@plt+0x10d88>
  415adc:	mov	w0, #0x1                   	// #1
  415ae0:	b	415af8 <wcrtomb@plt+0x10cf8>
  415ae4:	mov	x0, x20
  415ae8:	bl	4042b0 <ferror_unlocked@plt>
  415aec:	cbnz	w0, 415d10 <wcrtomb@plt+0x10f10>
  415af0:	tbz	w25, #0, 415d1c <wcrtomb@plt+0x10f1c>
  415af4:	mov	w0, wzr
  415af8:	ldp	x20, x19, [sp, #176]
  415afc:	ldp	x22, x21, [sp, #160]
  415b00:	ldp	x24, x23, [sp, #144]
  415b04:	ldr	x25, [sp, #128]
  415b08:	ldp	x29, x30, [sp, #112]
  415b0c:	add	sp, sp, #0xc0
  415b10:	ret
  415b14:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  415b18:	ldr	x8, [x8, #496]
  415b1c:	cbz	x8, 415b24 <wcrtomb@plt+0x10d24>
  415b20:	blr	x8
  415b24:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  415b28:	add	x1, x1, #0x7f1
  415b2c:	mov	w2, #0x5                   	// #5
  415b30:	mov	x0, xzr
  415b34:	bl	404bd0 <dcgettext@plt>
  415b38:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  415b3c:	ldr	x8, [x8, #320]
  415b40:	mov	x21, x0
  415b44:	mov	x0, x8
  415b48:	bl	4398cc <argp_parse@@Base+0xac10>
  415b4c:	mov	x22, x0
  415b50:	mov	x0, x20
  415b54:	bl	404ae0 <ftello@plt>
  415b58:	sub	x1, x29, #0x30
  415b5c:	bl	433f8c <argp_parse@@Base+0x52d0>
  415b60:	mov	x4, x0
  415b64:	sub	x7, x29, #0x18
  415b68:	mov	w6, #0x15                  	// #21
  415b6c:	mov	w0, wzr
  415b70:	mov	w1, wzr
  415b74:	mov	x2, x21
  415b78:	mov	x3, x22
  415b7c:	mov	x5, x19
  415b80:	bl	4041d0 <error@plt>
  415b84:	bl	40d698 <wcrtomb@plt+0x8898>
  415b88:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  415b8c:	cmp	w23, #0x22
  415b90:	b.ne	415ca4 <wcrtomb@plt+0x10ea4>  // b.any
  415b94:	ldr	x8, [x8, #496]
  415b98:	cbz	x8, 415ba0 <wcrtomb@plt+0x10da0>
  415b9c:	blr	x8
  415ba0:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  415ba4:	add	x1, x1, #0x845
  415ba8:	mov	w2, #0x5                   	// #5
  415bac:	mov	x0, xzr
  415bb0:	bl	404bd0 <dcgettext@plt>
  415bb4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  415bb8:	ldr	x8, [x8, #320]
  415bbc:	mov	x23, x0
  415bc0:	mov	x0, x8
  415bc4:	bl	4398cc <argp_parse@@Base+0xac10>
  415bc8:	mov	x24, x0
  415bcc:	mov	x0, x20
  415bd0:	bl	404ae0 <ftello@plt>
  415bd4:	sub	x1, x29, #0x30
  415bd8:	bl	433f8c <argp_parse@@Base+0x52d0>
  415bdc:	mov	x20, x0
  415be0:	add	x1, sp, #0x28
  415be4:	mov	x0, x22
  415be8:	bl	433efc <argp_parse@@Base+0x5240>
  415bec:	mov	x22, x0
  415bf0:	add	x1, sp, #0x10
  415bf4:	mov	x0, x21
  415bf8:	bl	43401c <argp_parse@@Base+0x5360>
  415bfc:	mov	x6, x0
  415c00:	sub	x8, x29, #0x18
  415c04:	mov	w1, #0x22                  	// #34
  415c08:	mov	w0, wzr
  415c0c:	mov	x2, x23
  415c10:	mov	x3, x24
  415c14:	mov	x4, x20
  415c18:	mov	x5, x22
  415c1c:	mov	x7, x19
  415c20:	str	x8, [sp]
  415c24:	bl	4041d0 <error@plt>
  415c28:	bl	40d698 <wcrtomb@plt+0x8898>
  415c2c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  415c30:	ldr	x8, [x8, #496]
  415c34:	mov	w21, w0
  415c38:	cbz	x8, 415c40 <wcrtomb@plt+0x10e40>
  415c3c:	blr	x8
  415c40:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  415c44:	add	x1, x1, #0x812
  415c48:	mov	w2, #0x5                   	// #5
  415c4c:	mov	x0, xzr
  415c50:	bl	404bd0 <dcgettext@plt>
  415c54:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  415c58:	ldr	x8, [x8, #320]
  415c5c:	mov	x22, x0
  415c60:	mov	x0, x8
  415c64:	bl	4398cc <argp_parse@@Base+0xac10>
  415c68:	mov	x23, x0
  415c6c:	mov	x0, x20
  415c70:	bl	404ae0 <ftello@plt>
  415c74:	sub	x1, x29, #0x30
  415c78:	bl	433f8c <argp_parse@@Base+0x52d0>
  415c7c:	mov	x4, x0
  415c80:	sub	x6, x29, #0x18
  415c84:	mov	w0, wzr
  415c88:	mov	w1, wzr
  415c8c:	mov	x2, x22
  415c90:	mov	x3, x23
  415c94:	mov	x5, x19
  415c98:	mov	w7, w21
  415c9c:	bl	4041d0 <error@plt>
  415ca0:	bl	40d698 <wcrtomb@plt+0x8898>
  415ca4:	ldr	x8, [x8, #496]
  415ca8:	cbz	x8, 415cb0 <wcrtomb@plt+0x10eb0>
  415cac:	blr	x8
  415cb0:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  415cb4:	add	x1, x1, #0x86e
  415cb8:	mov	w2, #0x5                   	// #5
  415cbc:	mov	x0, xzr
  415cc0:	bl	404bd0 <dcgettext@plt>
  415cc4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  415cc8:	ldr	x8, [x8, #320]
  415ccc:	mov	x21, x0
  415cd0:	mov	x0, x8
  415cd4:	bl	4398cc <argp_parse@@Base+0xac10>
  415cd8:	mov	x22, x0
  415cdc:	mov	x0, x20
  415ce0:	bl	404ae0 <ftello@plt>
  415ce4:	sub	x1, x29, #0x30
  415ce8:	bl	433f8c <argp_parse@@Base+0x52d0>
  415cec:	mov	x4, x0
  415cf0:	sub	x6, x29, #0x18
  415cf4:	mov	w0, wzr
  415cf8:	mov	w1, w23
  415cfc:	mov	x2, x21
  415d00:	mov	x3, x22
  415d04:	mov	x5, x19
  415d08:	bl	4041d0 <error@plt>
  415d0c:	bl	40d698 <wcrtomb@plt+0x8898>
  415d10:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  415d14:	ldr	x0, [x8, #320]
  415d18:	bl	4263d0 <wcrtomb@plt+0x215d0>
  415d1c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  415d20:	ldr	x8, [x8, #496]
  415d24:	cbz	x8, 415d2c <wcrtomb@plt+0x10f2c>
  415d28:	blr	x8
  415d2c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  415d30:	ldr	x0, [x8, #320]
  415d34:	bl	4398cc <argp_parse@@Base+0xac10>
  415d38:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  415d3c:	mov	x19, x0
  415d40:	add	x1, x1, #0x7d1
  415d44:	mov	w2, #0x5                   	// #5
  415d48:	mov	x0, xzr
  415d4c:	bl	404bd0 <dcgettext@plt>
  415d50:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  415d54:	mov	x4, x0
  415d58:	add	x2, x2, #0xe00
  415d5c:	mov	w0, wzr
  415d60:	mov	w1, wzr
  415d64:	mov	x3, x19
  415d68:	bl	4041d0 <error@plt>
  415d6c:	bl	40d698 <wcrtomb@plt+0x8898>
  415d70:	stp	x29, x30, [sp, #-64]!
  415d74:	str	x23, [sp, #16]
  415d78:	stp	x22, x21, [sp, #32]
  415d7c:	stp	x20, x19, [sp, #48]
  415d80:	mov	x29, sp
  415d84:	mov	x19, x2
  415d88:	mov	x20, x1
  415d8c:	mov	x22, x0
  415d90:	bl	404780 <getc_unlocked@plt>
  415d94:	ldp	x8, x9, [x20, #24]
  415d98:	add	w10, w0, #0x1
  415d9c:	mov	w21, w0
  415da0:	cmp	x9, x8
  415da4:	cset	w9, eq  // eq = none
  415da8:	cmp	w10, #0x2
  415dac:	b.cc	415e38 <wcrtomb@plt+0x11038>  // b.lo, b.ul, b.last
  415db0:	mov	x23, xzr
  415db4:	tbz	w9, #0, 415dc8 <wcrtomb@plt+0x10fc8>
  415db8:	mov	w1, #0x1                   	// #1
  415dbc:	mov	x0, x20
  415dc0:	bl	43b5e8 <_obstack_newchunk@@Base>
  415dc4:	ldr	x8, [x20, #24]
  415dc8:	add	x9, x8, #0x1
  415dcc:	mov	x0, x22
  415dd0:	str	x9, [x20, #24]
  415dd4:	strb	w21, [x8]
  415dd8:	bl	404780 <getc_unlocked@plt>
  415ddc:	ldp	x8, x9, [x20, #24]
  415de0:	add	w10, w0, #0x1
  415de4:	mov	w21, w0
  415de8:	add	x23, x23, #0x1
  415dec:	cmp	x9, x8
  415df0:	cset	w9, eq  // eq = none
  415df4:	cmp	w10, #0x1
  415df8:	b.hi	415db4 <wcrtomb@plt+0x10fb4>  // b.pmore
  415dfc:	cbz	w9, 415e10 <wcrtomb@plt+0x11010>
  415e00:	mov	w1, #0x1                   	// #1
  415e04:	mov	x0, x20
  415e08:	bl	43b5e8 <_obstack_newchunk@@Base>
  415e0c:	ldr	x8, [x20, #24]
  415e10:	add	x9, x8, #0x1
  415e14:	str	x9, [x20, #24]
  415e18:	strb	wzr, [x8]
  415e1c:	str	x23, [x19]
  415e20:	mov	w0, w21
  415e24:	ldp	x20, x19, [sp, #48]
  415e28:	ldp	x22, x21, [sp, #32]
  415e2c:	ldr	x23, [sp, #16]
  415e30:	ldp	x29, x30, [sp], #64
  415e34:	ret
  415e38:	mov	x23, xzr
  415e3c:	cbnz	w9, 415e00 <wcrtomb@plt+0x11000>
  415e40:	b	415e10 <wcrtomb@plt+0x11010>
  415e44:	sub	sp, sp, #0x50
  415e48:	cmp	w0, #0x56
  415e4c:	stp	x29, x30, [sp, #16]
  415e50:	str	x23, [sp, #32]
  415e54:	stp	x22, x21, [sp, #48]
  415e58:	stp	x20, x19, [sp, #64]
  415e5c:	add	x29, sp, #0x10
  415e60:	b.eq	415f5c <wcrtomb@plt+0x1115c>  // b.none
  415e64:	adrp	x2, 417000 <wcrtomb@plt+0x12200>
  415e68:	mov	w20, w0
  415e6c:	mov	x19, x1
  415e70:	add	x0, x1, #0x8
  415e74:	mov	w8, #0x1                   	// #1
  415e78:	add	x2, x2, #0xffc
  415e7c:	sub	x3, x29, #0x4
  415e80:	mov	w1, #0x1                   	// #1
  415e84:	stur	w8, [x29, #-4]
  415e88:	bl	42342c <wcrtomb@plt+0x1e62c>
  415e8c:	cmp	w20, #0x31
  415e90:	b.eq	415ebc <wcrtomb@plt+0x110bc>  // b.none
  415e94:	cmp	w20, #0x32
  415e98:	b.ne	415edc <wcrtomb@plt+0x110dc>  // b.any
  415e9c:	mov	w8, #0x4                   	// #4
  415ea0:	adrp	x2, 417000 <wcrtomb@plt+0x12200>
  415ea4:	add	x0, x19, #0x18
  415ea8:	str	w8, [x29, #24]
  415eac:	add	x2, x2, #0xffc
  415eb0:	add	x3, x29, #0x18
  415eb4:	mov	w1, #0x4                   	// #4
  415eb8:	b	415ed8 <wcrtomb@plt+0x110d8>
  415ebc:	adrp	x2, 417000 <wcrtomb@plt+0x12200>
  415ec0:	add	x0, x19, #0x18
  415ec4:	mov	w8, #0x2                   	// #2
  415ec8:	add	x2, x2, #0xffc
  415ecc:	add	x3, x29, #0x1c
  415ed0:	mov	w1, #0x2                   	// #2
  415ed4:	str	w8, [x29, #28]
  415ed8:	bl	42342c <wcrtomb@plt+0x1e62c>
  415edc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  415ee0:	ldrb	w8, [x8, #331]
  415ee4:	cbz	w8, 415f5c <wcrtomb@plt+0x1115c>
  415ee8:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  415eec:	ldr	x19, [x23, #3688]
  415ef0:	sub	x20, x19, #0x1
  415ef4:	ldrb	w8, [x20, #1]!
  415ef8:	and	w9, w8, #0xfe
  415efc:	cmp	w9, #0x2e
  415f00:	b.eq	415ef4 <wcrtomb@plt+0x110f4>  // b.none
  415f04:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  415f08:	ldr	x21, [x9, #56]
  415f0c:	cbz	w8, 415f48 <wcrtomb@plt+0x11148>
  415f10:	mov	x0, x21
  415f14:	bl	404170 <strlen@plt>
  415f18:	mov	x22, x0
  415f1c:	sxtw	x2, w0
  415f20:	mov	x0, x20
  415f24:	mov	x1, x21
  415f28:	bl	404580 <strncmp@plt>
  415f2c:	cbz	w0, 415f74 <wcrtomb@plt+0x11174>
  415f30:	mov	x0, x21
  415f34:	mov	x1, x19
  415f38:	bl	41bf0c <wcrtomb@plt+0x1710c>
  415f3c:	str	x0, [x23, #3688]
  415f40:	bl	4189e0 <wcrtomb@plt+0x13be0>
  415f44:	b	415f54 <wcrtomb@plt+0x11154>
  415f48:	mov	x0, x21
  415f4c:	bl	43a998 <argp_parse@@Base+0xbcdc>
  415f50:	str	x0, [x23, #3688]
  415f54:	mov	x0, x19
  415f58:	bl	4049b0 <free@plt>
  415f5c:	ldp	x20, x19, [sp, #64]
  415f60:	ldp	x22, x21, [sp, #48]
  415f64:	ldr	x23, [sp, #32]
  415f68:	ldp	x29, x30, [sp, #16]
  415f6c:	add	sp, sp, #0x50
  415f70:	ret
  415f74:	ldrb	w8, [x20, w22, sxtw]
  415f78:	cbz	w8, 415f5c <wcrtomb@plt+0x1115c>
  415f7c:	cmp	w8, #0x2f
  415f80:	b.eq	415f5c <wcrtomb@plt+0x1115c>  // b.none
  415f84:	b	415f30 <wcrtomb@plt+0x11130>
  415f88:	sub	sp, sp, #0x80
  415f8c:	stp	x20, x19, [sp, #112]
  415f90:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  415f94:	add	x20, x20, #0x6fe
  415f98:	stp	x22, x21, [sp, #96]
  415f9c:	mov	x22, x0
  415fa0:	mov	w1, #0x40                  	// #64
  415fa4:	mov	w2, #0x100                 	// #256
  415fa8:	mov	x0, x20
  415fac:	stp	x29, x30, [sp, #32]
  415fb0:	stp	x28, x27, [sp, #48]
  415fb4:	stp	x26, x25, [sp, #64]
  415fb8:	stp	x24, x23, [sp, #80]
  415fbc:	add	x29, sp, #0x20
  415fc0:	bl	4045e0 <memset@plt>
  415fc4:	adrp	x9, 44d000 <_obstack_memory_used@@Base+0x11808>
  415fc8:	mov	x8, xzr
  415fcc:	add	x9, x9, #0xaae
  415fd0:	ldrb	w10, [x9, x8]
  415fd4:	strb	w8, [x20, x10]
  415fd8:	add	x8, x8, #0x1
  415fdc:	cmp	x8, #0x40
  415fe0:	b.ne	415fd0 <wcrtomb@plt+0x111d0>  // b.any
  415fe4:	bl	41ae2c <wcrtomb@plt+0x1602c>
  415fe8:	mov	w0, wzr
  415fec:	bl	405ed8 <wcrtomb@plt+0x10d8>
  415ff0:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x2e808>
  415ff4:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  415ff8:	adrp	x19, 44d000 <_obstack_memory_used@@Base+0x11808>
  415ffc:	adrp	x20, 44c000 <_obstack_memory_used@@Base+0x10808>
  416000:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416004:	mov	w26, wzr
  416008:	add	x27, x27, #0xe60
  41600c:	add	x21, x21, #0xde8
  416010:	add	x19, x19, #0xa62
  416014:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416018:	adrp	x28, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41601c:	add	x20, x20, #0x6a8
  416020:	add	x24, x24, #0xe28
  416024:	adrp	x23, 46b000 <argp_program_version_hook@@Base+0x458>
  416028:	mov	x0, x27
  41602c:	bl	420d00 <wcrtomb@plt+0x1bf00>
  416030:	mov	x0, x21
  416034:	mov	x1, x27
  416038:	mov	w2, wzr
  41603c:	bl	416490 <wcrtomb@plt+0x11690>
  416040:	cmp	w0, #0x5
  416044:	b.hi	4163f0 <wcrtomb@plt+0x115f0>  // b.pmore
  416048:	mov	w8, w0
  41604c:	adr	x9, 41605c <wcrtomb@plt+0x1125c>
  416050:	ldrh	w10, [x19, x8, lsl #1]
  416054:	add	x9, x9, x10, lsl #2
  416058:	br	x9
  41605c:	ldr	x0, [x25, #3560]
  416060:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416064:	mov	w3, #0x1                   	// #1
  416068:	mov	x1, x27
  41606c:	add	x2, x2, #0xdd0
  416070:	bl	4168bc <wcrtomb@plt+0x11abc>
  416074:	ldr	x0, [x27, #8]
  416078:	bl	41b214 <wcrtomb@plt+0x16414>
  41607c:	tbz	w0, #0, 4160ec <wcrtomb@plt+0x112ec>
  416080:	ldr	x8, [x28, #3632]
  416084:	tbnz	x8, #63, 4160d4 <wcrtomb@plt+0x112d4>
  416088:	ldr	x8, [x25, #3560]
  41608c:	mov	w1, #0xc                   	// #12
  416090:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  416094:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  416098:	add	x0, x8, #0x88
  41609c:	mov	x2, x20
  4160a0:	mov	w5, wzr
  4160a4:	mov	w6, wzr
  4160a8:	bl	416ee0 <wcrtomb@plt+0x120e0>
  4160ac:	ldr	x8, [x24]
  4160b0:	cmp	x0, x8
  4160b4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4160b8:	add	x8, x8, #0xf48
  4160bc:	stp	x0, xzr, [x8]
  4160c0:	b.lt	4160ec <wcrtomb@plt+0x112ec>  // b.tstop
  4160c4:	b.gt	4160d4 <wcrtomb@plt+0x112d4>
  4160c8:	ldr	x8, [x24, #8]
  4160cc:	cmp	w8, #0x0
  4160d0:	b.gt	4160ec <wcrtomb@plt+0x112ec>
  4160d4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4160d8:	add	x8, x8, #0xe68
  4160dc:	ldr	x0, [x8]
  4160e0:	ldr	x1, [x8, #384]
  4160e4:	bl	40d9d0 <wcrtomb@plt+0x8bd0>
  4160e8:	tbz	w0, #0, 41637c <wcrtomb@plt+0x1157c>
  4160ec:	ldr	x8, [x25, #3560]
  4160f0:	ldrb	w0, [x8, #156]
  4160f4:	cmp	w0, #0x56
  4160f8:	b.eq	416384 <wcrtomb@plt+0x11584>  // b.none
  4160fc:	cmp	w0, #0x4d
  416100:	b.eq	416384 <wcrtomb@plt+0x11584>  // b.none
  416104:	cmp	w0, #0x35
  416108:	b.ne	416178 <wcrtomb@plt+0x11378>  // b.any
  41610c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  416110:	ldrb	w8, [x8, #186]
  416114:	cbz	w8, 416178 <wcrtomb@plt+0x11378>
  416118:	ldr	x8, [x23, #496]
  41611c:	mov	x26, x25
  416120:	mov	x25, x19
  416124:	cbz	x8, 41612c <wcrtomb@plt+0x1132c>
  416128:	blr	x8
  41612c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  416130:	mov	w2, #0x5                   	// #5
  416134:	mov	x0, xzr
  416138:	add	x1, x1, #0xaee
  41613c:	bl	404bd0 <dcgettext@plt>
  416140:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416144:	ldr	x8, [x8, #3688]
  416148:	mov	x24, x0
  41614c:	mov	x0, x8
  416150:	bl	4398cc <argp_parse@@Base+0xac10>
  416154:	mov	x3, x0
  416158:	mov	w0, wzr
  41615c:	mov	w1, wzr
  416160:	mov	x2, x24
  416164:	bl	4041d0 <error@plt>
  416168:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41616c:	mov	x19, x25
  416170:	mov	x25, x26
  416174:	add	x24, x24, #0xe28
  416178:	bl	416cc8 <wcrtomb@plt+0x11ec8>
  41617c:	b	416390 <wcrtomb@plt+0x11590>
  416180:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  416184:	ldrb	w8, [x8, #161]
  416188:	cbz	w8, 416214 <wcrtomb@plt+0x11414>
  41618c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416190:	ldr	x27, [x8, #3416]
  416194:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  416198:	mov	w2, #0x5                   	// #5
  41619c:	mov	x0, xzr
  4161a0:	add	x1, x1, #0xafb
  4161a4:	bl	404bd0 <dcgettext@plt>
  4161a8:	mov	x24, x20
  4161ac:	mov	x20, x21
  4161b0:	mov	x21, x25
  4161b4:	mov	x25, x28
  4161b8:	mov	x28, x22
  4161bc:	mov	x22, x23
  4161c0:	mov	x23, x0
  4161c4:	bl	405508 <wcrtomb@plt+0x708>
  4161c8:	add	x1, sp, #0x8
  4161cc:	bl	43401c <argp_parse@@Base+0x5360>
  4161d0:	mov	x3, x0
  4161d4:	mov	w1, #0x1                   	// #1
  4161d8:	mov	x0, x27
  4161dc:	adrp	x19, 44d000 <_obstack_memory_used@@Base+0x11808>
  4161e0:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4161e4:	mov	x2, x23
  4161e8:	mov	x23, x22
  4161ec:	mov	x22, x28
  4161f0:	mov	x28, x25
  4161f4:	mov	x25, x21
  4161f8:	mov	x21, x20
  4161fc:	mov	x20, x24
  416200:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416204:	add	x19, x19, #0xa62
  416208:	add	x27, x27, #0xe60
  41620c:	add	x24, x24, #0xe28
  416210:	bl	4048f0 <__fprintf_chk@plt>
  416214:	ldr	x0, [x25, #3560]
  416218:	bl	40587c <wcrtomb@plt+0xa7c>
  41621c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416220:	ldrb	w8, [x8, #3661]
  416224:	cbnz	w8, 416394 <wcrtomb@plt+0x11594>
  416228:	b	416418 <wcrtomb@plt+0x11618>
  41622c:	ldr	x0, [x25, #3560]
  416230:	bl	40587c <wcrtomb@plt+0xa7c>
  416234:	cmp	w26, #0x3
  416238:	b.hi	416374 <wcrtomb@plt+0x11574>  // b.pmore
  41623c:	adrp	x11, 44d000 <_obstack_memory_used@@Base+0x11808>
  416240:	mov	w8, w26
  416244:	add	x11, x11, #0xa6e
  416248:	adr	x9, 416258 <wcrtomb@plt+0x11458>
  41624c:	ldrb	w10, [x11, x8]
  416250:	add	x9, x9, x10, lsl #2
  416254:	br	x9
  416258:	ldr	x8, [x23, #496]
  41625c:	cbz	x8, 416264 <wcrtomb@plt+0x11464>
  416260:	blr	x8
  416264:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  416268:	mov	w2, #0x5                   	// #5
  41626c:	mov	x0, xzr
  416270:	add	x1, x1, #0xb9f
  416274:	bl	404bd0 <dcgettext@plt>
  416278:	mov	x2, x0
  41627c:	mov	w0, wzr
  416280:	mov	w1, wzr
  416284:	bl	4041d0 <error@plt>
  416288:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41628c:	mov	w9, #0x2                   	// #2
  416290:	str	w9, [x8, #2944]
  416294:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  416298:	ldrb	w8, [x8, #161]
  41629c:	cbz	w8, 416330 <wcrtomb@plt+0x11530>
  4162a0:	bl	405508 <wcrtomb@plt+0x708>
  4162a4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4162a8:	ldr	x8, [x8, #3552]
  4162ac:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4162b0:	ldr	x9, [x9, #3568]
  4162b4:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4162b8:	mov	x28, x22
  4162bc:	mov	x22, x23
  4162c0:	ldr	x23, [x10, #3416]
  4162c4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  4162c8:	sub	x8, x0, x8
  4162cc:	mov	w2, #0x5                   	// #5
  4162d0:	mov	x0, xzr
  4162d4:	add	x1, x1, #0xb37
  4162d8:	mov	x21, x20
  4162dc:	mov	x20, x27
  4162e0:	mov	x27, x19
  4162e4:	sub	x25, x8, x9
  4162e8:	bl	404bd0 <dcgettext@plt>
  4162ec:	mov	x26, x0
  4162f0:	add	x1, sp, #0x8
  4162f4:	mov	x0, x25
  4162f8:	mov	x27, x20
  4162fc:	mov	x20, x21
  416300:	bl	43401c <argp_parse@@Base+0x5360>
  416304:	mov	x3, x0
  416308:	mov	w1, #0x1                   	// #1
  41630c:	mov	x0, x23
  416310:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416314:	mov	x2, x26
  416318:	mov	x23, x22
  41631c:	mov	x22, x28
  416320:	adrp	x28, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416324:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416328:	add	x21, x21, #0xde8
  41632c:	bl	4048f0 <__fprintf_chk@plt>
  416330:	ldr	x8, [x23, #496]
  416334:	cbz	x8, 41633c <wcrtomb@plt+0x1153c>
  416338:	blr	x8
  41633c:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  416340:	mov	w2, #0x5                   	// #5
  416344:	mov	x0, xzr
  416348:	add	x1, x1, #0xa14
  41634c:	mov	w26, #0x5                   	// #5
  416350:	bl	404bd0 <dcgettext@plt>
  416354:	mov	x2, x0
  416358:	mov	w0, wzr
  41635c:	mov	w1, wzr
  416360:	bl	4041d0 <error@plt>
  416364:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416368:	mov	w9, #0x2                   	// #2
  41636c:	str	w9, [x8, #2944]
  416370:	b	416394 <wcrtomb@plt+0x11594>
  416374:	mov	w26, #0x5                   	// #5
  416378:	b	416394 <wcrtomb@plt+0x11594>
  41637c:	ldr	x8, [x25, #3560]
  416380:	ldrb	w0, [x8, #156]
  416384:	mov	x1, x27
  416388:	bl	415e44 <wcrtomb@plt+0x11044>
  41638c:	blr	x22
  416390:	mov	w26, #0x1                   	// #1
  416394:	mov	x0, x27
  416398:	bl	41b380 <wcrtomb@plt+0x16580>
  41639c:	tbz	w0, #0, 416028 <wcrtomb@plt+0x11228>
  4163a0:	b	4163f0 <wcrtomb@plt+0x115f0>
  4163a4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4163a8:	ldrb	w8, [x8, #161]
  4163ac:	cbz	w8, 4163f0 <wcrtomb@plt+0x115f0>
  4163b0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4163b4:	ldr	x19, [x8, #3416]
  4163b8:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  4163bc:	add	x1, x1, #0xb1a
  4163c0:	mov	w2, #0x5                   	// #5
  4163c4:	mov	x0, xzr
  4163c8:	bl	404bd0 <dcgettext@plt>
  4163cc:	mov	x20, x0
  4163d0:	bl	405508 <wcrtomb@plt+0x708>
  4163d4:	add	x1, sp, #0x8
  4163d8:	bl	43401c <argp_parse@@Base+0x5360>
  4163dc:	mov	x3, x0
  4163e0:	mov	w1, #0x1                   	// #1
  4163e4:	mov	x0, x19
  4163e8:	mov	x2, x20
  4163ec:	bl	4048f0 <__fprintf_chk@plt>
  4163f0:	bl	405bb0 <wcrtomb@plt+0xdb0>
  4163f4:	bl	41b414 <wcrtomb@plt+0x16614>
  4163f8:	ldp	x20, x19, [sp, #112]
  4163fc:	ldp	x22, x21, [sp, #96]
  416400:	ldp	x24, x23, [sp, #80]
  416404:	ldp	x26, x25, [sp, #64]
  416408:	ldp	x28, x27, [sp, #48]
  41640c:	ldp	x29, x30, [sp, #32]
  416410:	add	sp, sp, #0x80
  416414:	ret
  416418:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41641c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416420:	add	x0, x0, #0xde8
  416424:	add	x1, x1, #0xe60
  416428:	mov	w2, wzr
  41642c:	bl	416490 <wcrtomb@plt+0x11690>
  416430:	cmp	w0, #0x3
  416434:	b.eq	4163f0 <wcrtomb@plt+0x115f0>  // b.none
  416438:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41643c:	ldrb	w8, [x8, #152]
  416440:	tbz	w8, #0, 4163f0 <wcrtomb@plt+0x115f0>
  416444:	ldr	x8, [x23, #496]
  416448:	cbz	x8, 416450 <wcrtomb@plt+0x11650>
  41644c:	blr	x8
  416450:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  416454:	add	x1, x1, #0x515
  416458:	mov	w2, #0x5                   	// #5
  41645c:	mov	x0, xzr
  416460:	bl	404bd0 <dcgettext@plt>
  416464:	mov	x19, x0
  416468:	bl	405508 <wcrtomb@plt+0x708>
  41646c:	add	x1, sp, #0x8
  416470:	bl	43401c <argp_parse@@Base+0x5360>
  416474:	mov	x3, x0
  416478:	mov	w0, wzr
  41647c:	mov	w1, wzr
  416480:	mov	x2, x19
  416484:	bl	4041d0 <error@plt>
  416488:	b	4163f0 <wcrtomb@plt+0x115f0>
  41648c:	bl	404850 <abort@plt>
  416490:	sub	sp, sp, #0x1a0
  416494:	stp	x29, x30, [sp, #320]
  416498:	stp	x28, x27, [sp, #336]
  41649c:	stp	x26, x25, [sp, #352]
  4164a0:	stp	x24, x23, [sp, #368]
  4164a4:	stp	x22, x21, [sp, #384]
  4164a8:	stp	x20, x19, [sp, #400]
  4164ac:	add	x29, sp, #0x140
  4164b0:	mov	w22, w2
  4164b4:	mov	x19, x1
  4164b8:	mov	x23, x0
  4164bc:	bl	405574 <wcrtomb@plt+0x774>
  4164c0:	str	x0, [x23]
  4164c4:	cbz	x0, 416764 <wcrtomb@plt+0x11964>
  4164c8:	mov	x21, #0x2003                	// #8195
  4164cc:	movk	x21, #0x1000, lsl #16
  4164d0:	adrp	x26, 44c000 <_obstack_memory_used@@Base+0x10808>
  4164d4:	mov	x27, x0
  4164d8:	add	x8, x19, #0x158
  4164dc:	mov	w20, #0x1                   	// #1
  4164e0:	movk	x21, #0x2000, lsl #32
  4164e4:	add	x26, x26, #0x6a2
  4164e8:	stp	xzr, xzr, [sp, #8]
  4164ec:	stp	xzr, xzr, [sp, #32]
  4164f0:	str	x8, [sp, #24]
  4164f4:	mov	x0, x27
  4164f8:	mov	w1, wzr
  4164fc:	bl	416e34 <wcrtomb@plt+0x12034>
  416500:	cmp	w0, #0x1
  416504:	b.ne	416898 <wcrtomb@plt+0x11a98>  // b.any
  416508:	ldrb	w8, [x27, #156]
  41650c:	cmp	w8, #0x31
  416510:	b.ne	416520 <wcrtomb@plt+0x11720>  // b.any
  416514:	mov	x0, xzr
  416518:	str	xzr, [x19, #136]
  41651c:	b	416548 <wcrtomb@plt+0x11748>
  416520:	add	x0, x27, #0x7c
  416524:	mov	w1, #0xc                   	// #12
  416528:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41652c:	mov	x2, x26
  416530:	mov	x3, xzr
  416534:	mov	w5, wzr
  416538:	mov	w6, wzr
  41653c:	bl	416ee0 <wcrtomb@plt+0x120e0>
  416540:	str	x0, [x19, #136]
  416544:	tbnz	x0, #63, 416798 <wcrtomb@plt+0x11998>
  416548:	ldrb	w8, [x27, #156]
  41654c:	sub	w9, w8, #0x4b
  416550:	cmp	w9, #0x2d
  416554:	b.hi	416774 <wcrtomb@plt+0x11974>  // b.pmore
  416558:	lsl	x10, x20, x9
  41655c:	tst	x10, x21
  416560:	b.eq	416774 <wcrtomb@plt+0x11974>  // b.none
  416564:	cmp	w22, #0x1
  416568:	b.eq	41676c <wcrtomb@plt+0x1196c>  // b.none
  41656c:	cmp	w8, #0x66
  416570:	b.gt	4165d0 <wcrtomb@plt+0x117d0>
  416574:	cmp	w9, #0x2
  416578:	b.cs	4165e4 <wcrtomb@plt+0x117e4>  // b.hs, b.nlast
  41657c:	and	x8, x0, #0x1ff
  416580:	mov	w9, #0x200                 	// #512
  416584:	sub	x8, x9, x8
  416588:	tst	x0, #0x1ff
  41658c:	csel	x8, xzr, x8, eq  // eq = none
  416590:	add	x24, x8, x0
  416594:	add	x25, x24, #0x200
  416598:	cmp	x25, x0
  41659c:	b.cc	4168b8 <wcrtomb@plt+0x11ab8>  // b.lo, b.ul, b.last
  4165a0:	add	x0, x24, #0x201
  4165a4:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4165a8:	ldrb	w8, [x27, #156]
  4165ac:	mov	x28, x0
  4165b0:	lsr	x25, x25, #9
  4165b4:	cmp	w8, #0x4c
  4165b8:	b.ne	416620 <wcrtomb@plt+0x11820>  // b.any
  4165bc:	ldr	x0, [sp, #32]
  4165c0:	bl	4049b0 <free@plt>
  4165c4:	str	x28, [sp, #32]
  4165c8:	str	x25, [sp, #8]
  4165cc:	b	416630 <wcrtomb@plt+0x11830>
  4165d0:	cmp	w8, #0x67
  4165d4:	b.eq	416694 <wcrtomb@plt+0x11894>  // b.none
  4165d8:	cmp	w8, #0x78
  4165dc:	b.eq	4165ec <wcrtomb@plt+0x117ec>  // b.none
  4165e0:	b	416754 <wcrtomb@plt+0x11954>
  4165e4:	cmp	w8, #0x58
  4165e8:	b.ne	416754 <wcrtomb@plt+0x11954>  // b.any
  4165ec:	add	x0, x27, #0x7c
  4165f0:	mov	w1, #0xc                   	// #12
  4165f4:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  4165f8:	mov	x2, x26
  4165fc:	mov	x3, xzr
  416600:	mov	w5, wzr
  416604:	mov	w6, wzr
  416608:	bl	416ee0 <wcrtomb@plt+0x120e0>
  41660c:	mov	x2, x0
  416610:	ldr	x0, [sp, #24]
  416614:	mov	x1, x27
  416618:	bl	4116b4 <wcrtomb@plt+0xc8b4>
  41661c:	b	416754 <wcrtomb@plt+0x11954>
  416620:	ldr	x0, [sp, #40]
  416624:	bl	4049b0 <free@plt>
  416628:	str	x28, [sp, #40]
  41662c:	str	x25, [sp, #16]
  416630:	mov	x0, x27
  416634:	bl	40587c <wcrtomb@plt+0xa7c>
  416638:	mov	w2, #0x200                 	// #512
  41663c:	mov	x0, x28
  416640:	mov	x1, x27
  416644:	bl	4040f0 <memcpy@plt>
  416648:	add	x27, x28, #0x200
  41664c:	cbz	x24, 416750 <wcrtomb@plt+0x11950>
  416650:	bl	405574 <wcrtomb@plt+0x774>
  416654:	cbz	x0, 416710 <wcrtomb@plt+0x11910>
  416658:	mov	x28, x0
  41665c:	bl	4058c0 <wcrtomb@plt+0xac0>
  416660:	cmp	x0, x24
  416664:	csel	x25, x24, x0, hi  // hi = pmore
  416668:	mov	x0, x27
  41666c:	mov	x1, x28
  416670:	mov	x2, x25
  416674:	bl	4040f0 <memcpy@plt>
  416678:	add	x8, x28, x25
  41667c:	sub	x0, x8, #0x1
  416680:	add	x27, x27, x25
  416684:	bl	40587c <wcrtomb@plt+0xa7c>
  416688:	subs	x24, x24, x25
  41668c:	b.ne	416650 <wcrtomb@plt+0x11850>  // b.any
  416690:	b	416750 <wcrtomb@plt+0x11950>
  416694:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416698:	ldr	x0, [x8, #1744]
  41669c:	cbnz	x0, 4166b0 <wcrtomb@plt+0x118b0>
  4166a0:	mov	w0, #0x200                 	// #512
  4166a4:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4166a8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4166ac:	str	x0, [x8, #1744]
  4166b0:	mov	w2, #0x200                 	// #512
  4166b4:	mov	x1, x27
  4166b8:	bl	4040f0 <memcpy@plt>
  4166bc:	movi	v0.2d, #0x0
  4166c0:	add	x0, x27, #0x7c
  4166c4:	mov	w1, #0xc                   	// #12
  4166c8:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  4166cc:	mov	x2, x26
  4166d0:	mov	x3, xzr
  4166d4:	mov	w5, wzr
  4166d8:	mov	w6, wzr
  4166dc:	stp	q0, q0, [sp, #48]
  4166e0:	bl	416ee0 <wcrtomb@plt+0x120e0>
  4166e4:	mov	x2, x0
  4166e8:	add	x0, sp, #0x30
  4166ec:	mov	x1, x27
  4166f0:	bl	4116b4 <wcrtomb@plt+0xc8b4>
  4166f4:	add	x0, sp, #0x30
  4166f8:	bl	411444 <wcrtomb@plt+0xc644>
  4166fc:	add	x0, sp, #0x30
  416700:	bl	410bcc <wcrtomb@plt+0xbdcc>
  416704:	cmp	w22, #0x2
  416708:	b.ne	416754 <wcrtomb@plt+0x11954>  // b.any
  41670c:	b	41676c <wcrtomb@plt+0x1196c>
  416710:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  416714:	ldr	x8, [x8, #496]
  416718:	cbz	x8, 416720 <wcrtomb@plt+0x11920>
  41671c:	blr	x8
  416720:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  416724:	mov	w2, #0x5                   	// #5
  416728:	mov	x0, xzr
  41672c:	add	x1, x1, #0x582
  416730:	bl	404bd0 <dcgettext@plt>
  416734:	mov	x2, x0
  416738:	mov	w0, wzr
  41673c:	mov	w1, wzr
  416740:	bl	4041d0 <error@plt>
  416744:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416748:	mov	w9, #0x2                   	// #2
  41674c:	str	w9, [x8, #2944]
  416750:	strb	wzr, [x27]
  416754:	bl	405574 <wcrtomb@plt+0x774>
  416758:	mov	x27, x0
  41675c:	str	x0, [x23]
  416760:	cbnz	x0, 4164f4 <wcrtomb@plt+0x116f4>
  416764:	mov	w0, #0x4                   	// #4
  416768:	b	416898 <wcrtomb@plt+0x11a98>
  41676c:	mov	w0, #0x2                   	// #2
  416770:	b	416898 <wcrtomb@plt+0x11a98>
  416774:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416778:	ldr	x0, [x20, #3544]
  41677c:	bl	4049b0 <free@plt>
  416780:	ldr	x21, [sp, #32]
  416784:	cbz	x21, 4167a0 <wcrtomb@plt+0x119a0>
  416788:	ldr	x22, [sp, #40]
  41678c:	ldr	x9, [sp, #8]
  416790:	add	x23, x21, #0x200
  416794:	b	416810 <wcrtomb@plt+0x11a10>
  416798:	mov	w0, #0x5                   	// #5
  41679c:	b	416898 <wcrtomb@plt+0x11a98>
  4167a0:	ldrb	w8, [x27, #345]
  4167a4:	cbz	w8, 4167ec <wcrtomb@plt+0x119ec>
  4167a8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x14808>
  4167ac:	add	x0, x27, #0x101
  4167b0:	add	x1, x1, #0xc16
  4167b4:	add	x22, sp, #0x30
  4167b8:	bl	404900 <strcmp@plt>
  4167bc:	cbnz	w0, 4167f0 <wcrtomb@plt+0x119f0>
  4167c0:	add	x1, x27, #0x159
  4167c4:	add	x0, sp, #0x30
  4167c8:	mov	w2, #0x9b                  	// #155
  4167cc:	bl	4040f0 <memcpy@plt>
  4167d0:	add	x0, sp, #0x30
  4167d4:	strb	wzr, [sp, #203]
  4167d8:	bl	404170 <strlen@plt>
  4167dc:	add	x22, x22, x0
  4167e0:	mov	w8, #0x2f                  	// #47
  4167e4:	strb	w8, [x22], #1
  4167e8:	b	4167f0 <wcrtomb@plt+0x119f0>
  4167ec:	add	x22, sp, #0x30
  4167f0:	mov	w2, #0x64                  	// #100
  4167f4:	mov	x0, x22
  4167f8:	mov	x1, x27
  4167fc:	add	x23, sp, #0x30
  416800:	bl	4040f0 <memcpy@plt>
  416804:	strb	wzr, [x22, #100]
  416808:	ldr	x22, [sp, #40]
  41680c:	mov	x9, xzr
  416810:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416814:	mov	x0, x19
  416818:	mov	x1, x23
  41681c:	str	x21, [x20, #3544]
  416820:	str	x9, [x8, #3552]
  416824:	bl	4186dc <wcrtomb@plt+0x138dc>
  416828:	add	x0, x19, #0x8
  41682c:	mov	x1, x23
  416830:	bl	4186dc <wcrtomb@plt+0x138dc>
  416834:	ldr	x0, [x19, #8]
  416838:	bl	4305a8 <argp_parse@@Base+0x18ec>
  41683c:	and	w8, w0, #0x1
  416840:	strb	w8, [x19, #16]
  416844:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416848:	ldr	x0, [x20, #3576]
  41684c:	bl	4049b0 <free@plt>
  416850:	cbz	x22, 416860 <wcrtomb@plt+0x11a60>
  416854:	ldr	x9, [sp, #16]
  416858:	add	x21, x22, #0x200
  41685c:	b	41687c <wcrtomb@plt+0x11a7c>
  416860:	add	x1, x27, #0x9d
  416864:	add	x0, sp, #0x30
  416868:	mov	w2, #0x64                  	// #100
  41686c:	add	x21, sp, #0x30
  416870:	bl	4040f0 <memcpy@plt>
  416874:	mov	x9, xzr
  416878:	strb	wzr, [sp, #148]
  41687c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416880:	add	x0, x19, #0x18
  416884:	mov	x1, x21
  416888:	str	x22, [x20, #3576]
  41688c:	str	x9, [x8, #3568]
  416890:	bl	4186dc <wcrtomb@plt+0x138dc>
  416894:	mov	w0, #0x1                   	// #1
  416898:	ldp	x20, x19, [sp, #400]
  41689c:	ldp	x22, x21, [sp, #384]
  4168a0:	ldp	x24, x23, [sp, #368]
  4168a4:	ldp	x26, x25, [sp, #352]
  4168a8:	ldp	x28, x27, [sp, #336]
  4168ac:	ldp	x29, x30, [sp, #320]
  4168b0:	add	sp, sp, #0x1a0
  4168b4:	ret
  4168b8:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  4168bc:	stp	x29, x30, [sp, #-80]!
  4168c0:	stp	x22, x21, [sp, #48]
  4168c4:	mov	x22, x2
  4168c8:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  4168cc:	stp	x20, x19, [sp, #64]
  4168d0:	mov	w21, w3
  4168d4:	mov	x19, x1
  4168d8:	mov	x20, x0
  4168dc:	add	x0, x0, #0x64
  4168e0:	add	x2, x2, #0x7a3
  4168e4:	mov	w1, #0x8                   	// #8
  4168e8:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  4168ec:	mov	x4, #0xffffffffffffffff    	// #-1
  4168f0:	mov	w5, wzr
  4168f4:	mov	w6, wzr
  4168f8:	str	x25, [sp, #16]
  4168fc:	stp	x24, x23, [sp, #32]
  416900:	mov	x29, sp
  416904:	bl	416ee0 <wcrtomb@plt+0x120e0>
  416908:	add	x24, x20, #0x101
  41690c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x14808>
  416910:	mov	x23, x0
  416914:	add	x1, x1, #0xc16
  416918:	mov	x0, x24
  41691c:	and	w25, w23, #0xfff
  416920:	bl	404900 <strcmp@plt>
  416924:	cbz	w0, 416954 <wcrtomb@plt+0x11b54>
  416928:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  41692c:	add	x1, x1, #0x52
  416930:	mov	x0, x24
  416934:	bl	404900 <strcmp@plt>
  416938:	cmp	x23, #0x1, lsl #12
  41693c:	mov	w8, #0x2                   	// #2
  416940:	mov	w9, #0x6                   	// #6
  416944:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  416948:	cmp	w0, #0x0
  41694c:	csinc	w24, w8, wzr, eq  // eq = none
  416950:	b	4169ac <wcrtomb@plt+0x11bac>
  416954:	ldrb	w8, [x20, #475]
  416958:	cbnz	w8, 41699c <wcrtomb@plt+0x11b9c>
  41695c:	ldrb	w8, [x20, #476]
  416960:	and	w8, w8, #0xf8
  416964:	cmp	w8, #0x30
  416968:	b.ne	41699c <wcrtomb@plt+0x11b9c>  // b.any
  41696c:	ldrb	w8, [x20, #487]
  416970:	cmp	w8, #0x20
  416974:	b.ne	41699c <wcrtomb@plt+0x11b9c>  // b.any
  416978:	ldrb	w8, [x20, #488]
  41697c:	and	w8, w8, #0xf8
  416980:	cmp	w8, #0x30
  416984:	b.ne	41699c <wcrtomb@plt+0x11b9c>  // b.any
  416988:	ldrb	w8, [x20, #499]
  41698c:	cmp	w8, #0x20
  416990:	b.ne	41699c <wcrtomb@plt+0x11b9c>  // b.any
  416994:	mov	w24, #0x5                   	// #5
  416998:	b	4169ac <wcrtomb@plt+0x11bac>
  41699c:	ldr	x8, [x19, #352]
  4169a0:	cmp	x8, #0x0
  4169a4:	mov	w8, #0x3                   	// #3
  4169a8:	cinc	w24, w8, ne  // ne = any
  4169ac:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  4169b0:	add	x0, x20, #0x88
  4169b4:	add	x2, x2, #0x6a8
  4169b8:	mov	w1, #0xc                   	// #12
  4169bc:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  4169c0:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  4169c4:	mov	w5, wzr
  4169c8:	mov	w6, wzr
  4169cc:	str	w24, [x22]
  4169d0:	str	w25, [x19, #104]
  4169d4:	bl	416ee0 <wcrtomb@plt+0x120e0>
  4169d8:	stp	x0, xzr, [x19, #232]
  4169dc:	ldrb	w8, [x20, #265]
  4169e0:	add	x23, x20, #0x109
  4169e4:	add	x0, x19, #0x20
  4169e8:	mov	w2, #0x20                  	// #32
  4169ec:	cmp	w8, #0x0
  4169f0:	csel	x1, xzr, x23, eq  // eq = none
  4169f4:	bl	41871c <wcrtomb@plt+0x1391c>
  4169f8:	ldrb	w8, [x20, #297]
  4169fc:	add	x22, x20, #0x129
  416a00:	add	x0, x19, #0x28
  416a04:	mov	w2, #0x20                  	// #32
  416a08:	cmp	w8, #0x0
  416a0c:	csel	x1, xzr, x22, eq  // eq = none
  416a10:	bl	41871c <wcrtomb@plt+0x1391c>
  416a14:	mov	x0, x19
  416a18:	bl	410e58 <wcrtomb@plt+0xc058>
  416a1c:	cmp	w24, #0x2
  416a20:	b.ne	416a60 <wcrtomb@plt+0x11c60>  // b.any
  416a24:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416a28:	ldrb	w8, [x8, #3617]
  416a2c:	cbz	w8, 416a60 <wcrtomb@plt+0x11c60>
  416a30:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  416a34:	add	x0, x20, #0x159
  416a38:	add	x2, x2, #0x6a8
  416a3c:	mov	w1, #0xc                   	// #12
  416a40:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  416a44:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  416a48:	mov	w5, wzr
  416a4c:	mov	w6, wzr
  416a50:	bl	416ee0 <wcrtomb@plt+0x120e0>
  416a54:	str	x0, [x19, #216]
  416a58:	add	x0, x20, #0x165
  416a5c:	b	416a94 <wcrtomb@plt+0x11c94>
  416a60:	cmp	w24, #0x5
  416a64:	b.ne	416b98 <wcrtomb@plt+0x11d98>  // b.any
  416a68:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  416a6c:	add	x0, x20, #0x1dc
  416a70:	add	x2, x2, #0x6a8
  416a74:	mov	w1, #0xc                   	// #12
  416a78:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  416a7c:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  416a80:	mov	w5, wzr
  416a84:	mov	w6, wzr
  416a88:	bl	416ee0 <wcrtomb@plt+0x120e0>
  416a8c:	str	x0, [x19, #216]
  416a90:	add	x0, x20, #0x1e8
  416a94:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  416a98:	add	x2, x2, #0x6a8
  416a9c:	mov	w1, #0xc                   	// #12
  416aa0:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  416aa4:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  416aa8:	mov	w5, wzr
  416aac:	mov	w6, wzr
  416ab0:	bl	416ee0 <wcrtomb@plt+0x120e0>
  416ab4:	stp	x0, xzr, [x19, #248]
  416ab8:	str	xzr, [x19, #224]
  416abc:	cbz	w21, 416b24 <wcrtomb@plt+0x11d24>
  416ac0:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  416ac4:	ldrb	w8, [x21, #160]
  416ac8:	cbz	w8, 416c90 <wcrtomb@plt+0x11e90>
  416acc:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  416ad0:	add	x0, x20, #0x6c
  416ad4:	add	x2, x2, #0x7aa
  416ad8:	mov	w1, #0x8                   	// #8
  416adc:	mov	w4, #0xffffffff            	// #-1
  416ae0:	mov	x3, xzr
  416ae4:	mov	w5, wzr
  416ae8:	mov	w6, wzr
  416aec:	bl	416ee0 <wcrtomb@plt+0x120e0>
  416af0:	str	w0, [x19, #112]
  416af4:	ldrb	w8, [x21, #160]
  416af8:	cbz	w8, 416cac <wcrtomb@plt+0x11eac>
  416afc:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  416b00:	add	x0, x20, #0x74
  416b04:	add	x2, x2, #0x7b7
  416b08:	mov	w1, #0x8                   	// #8
  416b0c:	mov	w4, #0xffffffff            	// #-1
  416b10:	mov	x3, xzr
  416b14:	mov	w5, wzr
  416b18:	mov	w6, wzr
  416b1c:	bl	416ee0 <wcrtomb@plt+0x120e0>
  416b20:	str	w0, [x19, #116]
  416b24:	ldrb	w8, [x20, #156]
  416b28:	sub	w8, w8, #0x33
  416b2c:	cmp	w8, #0x1
  416b30:	b.hi	416b90 <wcrtomb@plt+0x11d90>  // b.pmore
  416b34:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  416b38:	add	x0, x20, #0x149
  416b3c:	add	x2, x2, #0x832
  416b40:	mov	w1, #0x8                   	// #8
  416b44:	mov	x3, #0xffffffff80000000    	// #-2147483648
  416b48:	mov	w4, #0x7fffffff            	// #2147483647
  416b4c:	mov	w5, wzr
  416b50:	mov	w6, wzr
  416b54:	bl	416ee0 <wcrtomb@plt+0x120e0>
  416b58:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  416b5c:	mov	x21, x0
  416b60:	add	x0, x20, #0x151
  416b64:	add	x2, x2, #0x83a
  416b68:	mov	w1, #0x8                   	// #8
  416b6c:	mov	x3, #0xffffffff80000000    	// #-2147483648
  416b70:	mov	w4, #0x7fffffff            	// #2147483647
  416b74:	mov	w5, wzr
  416b78:	mov	w6, wzr
  416b7c:	bl	416ee0 <wcrtomb@plt+0x120e0>
  416b80:	mov	x1, x0
  416b84:	mov	w0, w21
  416b88:	bl	4043a0 <gnu_dev_makedev@plt>
  416b8c:	b	416c10 <wcrtomb@plt+0x11e10>
  416b90:	mov	x0, xzr
  416b94:	b	416c10 <wcrtomb@plt+0x11e10>
  416b98:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  416b9c:	add	x8, x8, #0xc8
  416ba0:	ldr	q0, [x8]
  416ba4:	cmp	w24, #0x1
  416ba8:	stur	q0, [x19, #248]
  416bac:	ldr	q0, [x8]
  416bb0:	stur	q0, [x19, #216]
  416bb4:	b.ne	416abc <wcrtomb@plt+0x11cbc>  // b.any
  416bb8:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  416bbc:	add	x0, x20, #0x6c
  416bc0:	add	x2, x2, #0x7aa
  416bc4:	mov	w1, #0x8                   	// #8
  416bc8:	mov	w4, #0xffffffff            	// #-1
  416bcc:	mov	x3, xzr
  416bd0:	mov	w5, wzr
  416bd4:	mov	w6, wzr
  416bd8:	bl	416ee0 <wcrtomb@plt+0x120e0>
  416bdc:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  416be0:	str	w0, [x19, #112]
  416be4:	add	x0, x20, #0x74
  416be8:	add	x2, x2, #0x7b7
  416bec:	mov	w1, #0x8                   	// #8
  416bf0:	mov	w4, #0xffffffff            	// #-1
  416bf4:	mov	x3, xzr
  416bf8:	mov	w5, wzr
  416bfc:	mov	w6, wzr
  416c00:	bl	416ee0 <wcrtomb@plt+0x120e0>
  416c04:	mov	x8, x0
  416c08:	mov	x0, xzr
  416c0c:	str	w8, [x19, #116]
  416c10:	str	x0, [x19, #120]
  416c14:	mov	x0, x19
  416c18:	bl	411050 <wcrtomb@plt+0xc250>
  416c1c:	mov	x0, x19
  416c20:	bl	41c728 <wcrtomb@plt+0x17928>
  416c24:	tbz	w0, #0, 416c38 <wcrtomb@plt+0x11e38>
  416c28:	mov	x0, x19
  416c2c:	bl	41c77c <wcrtomb@plt+0x1797c>
  416c30:	add	x8, x19, #0x110
  416c34:	b	416c70 <wcrtomb@plt+0x11e70>
  416c38:	strb	wzr, [x19, #272]
  416c3c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416c40:	ldr	w8, [x8, #3536]
  416c44:	orr	w8, w8, #0x4
  416c48:	cmp	w8, #0x6
  416c4c:	b.ne	416c64 <wcrtomb@plt+0x11e64>  // b.any
  416c50:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416c54:	ldr	x8, [x8, #3560]
  416c58:	ldrb	w8, [x8, #156]
  416c5c:	cmp	w8, #0x44
  416c60:	b.eq	416c6c <wcrtomb@plt+0x11e6c>  // b.none
  416c64:	ldr	x8, [x19, #384]
  416c68:	cbz	x8, 416c78 <wcrtomb@plt+0x11e78>
  416c6c:	add	x8, x19, #0x178
  416c70:	mov	w9, #0x1                   	// #1
  416c74:	strb	w9, [x8]
  416c78:	ldp	x20, x19, [sp, #64]
  416c7c:	ldp	x22, x21, [sp, #48]
  416c80:	ldp	x24, x23, [sp, #32]
  416c84:	ldr	x25, [sp, #16]
  416c88:	ldp	x29, x30, [sp], #80
  416c8c:	ret
  416c90:	ldrb	w8, [x23]
  416c94:	cbz	w8, 416acc <wcrtomb@plt+0x11ccc>
  416c98:	add	x1, x19, #0x70
  416c9c:	mov	x0, x23
  416ca0:	bl	41a09c <wcrtomb@plt+0x1529c>
  416ca4:	cbnz	w0, 416af4 <wcrtomb@plt+0x11cf4>
  416ca8:	b	416acc <wcrtomb@plt+0x11ccc>
  416cac:	ldrb	w8, [x22]
  416cb0:	cbz	w8, 416afc <wcrtomb@plt+0x11cfc>
  416cb4:	add	x1, x19, #0x74
  416cb8:	mov	x0, x22
  416cbc:	bl	41a150 <wcrtomb@plt+0x15350>
  416cc0:	cbnz	w0, 416b24 <wcrtomb@plt+0x11d24>
  416cc4:	b	416afc <wcrtomb@plt+0x11cfc>
  416cc8:	stp	x29, x30, [sp, #-32]!
  416ccc:	stp	x20, x19, [sp, #16]
  416cd0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416cd4:	ldrb	w8, [x8, #4057]
  416cd8:	mov	x29, sp
  416cdc:	cbz	w8, 416cec <wcrtomb@plt+0x11eec>
  416ce0:	ldp	x20, x19, [sp, #16]
  416ce4:	ldp	x29, x30, [sp], #32
  416ce8:	ret
  416cec:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416cf0:	ldr	x0, [x8, #3560]
  416cf4:	ldrb	w20, [x0, #156]
  416cf8:	bl	40587c <wcrtomb@plt+0xa7c>
  416cfc:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416d00:	add	x19, x19, #0xe60
  416d04:	mov	x0, x19
  416d08:	bl	404fb8 <wcrtomb@plt+0x1b8>
  416d0c:	ldrb	w8, [x19, #272]
  416d10:	cbz	w8, 416d24 <wcrtomb@plt+0x11f24>
  416d14:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416d18:	add	x0, x0, #0xe60
  416d1c:	bl	41c8d4 <wcrtomb@plt+0x17ad4>
  416d20:	b	416d38 <wcrtomb@plt+0x11f38>
  416d24:	cmp	w20, #0x35
  416d28:	b.eq	416d38 <wcrtomb@plt+0x11f38>  // b.none
  416d2c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416d30:	ldr	x0, [x8, #3816]
  416d34:	bl	417e44 <wcrtomb@plt+0x13044>
  416d38:	ldp	x20, x19, [sp, #16]
  416d3c:	ldp	x29, x30, [sp], #32
  416d40:	b	404fcc <wcrtomb@plt+0x1cc>
  416d44:	stp	x29, x30, [sp, #-32]!
  416d48:	str	x19, [sp, #16]
  416d4c:	mov	x29, sp
  416d50:	bl	405508 <wcrtomb@plt+0x708>
  416d54:	adrp	x19, 46b000 <argp_program_version_hook@@Base+0x458>
  416d58:	ldr	w8, [x19, #132]
  416d5c:	cbz	w8, 416dbc <wcrtomb@plt+0x11fbc>
  416d60:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416d64:	ldr	x1, [x8, #3560]
  416d68:	mov	x2, x0
  416d6c:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416d70:	add	x0, x0, #0xe60
  416d74:	bl	416dc8 <wcrtomb@plt+0x11fc8>
  416d78:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416d7c:	ldrb	w8, [x8, #3617]
  416d80:	cbz	w8, 416dbc <wcrtomb@plt+0x11fbc>
  416d84:	ldr	w8, [x19, #132]
  416d88:	cmp	w8, #0x3
  416d8c:	b.lt	416dbc <wcrtomb@plt+0x11fbc>  // b.tstop
  416d90:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416d94:	add	x0, x0, #0xe60
  416d98:	bl	414a88 <wcrtomb@plt+0xfc88>
  416d9c:	tbz	w0, #0, 416dbc <wcrtomb@plt+0x11fbc>
  416da0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416da4:	ldr	x19, [x8, #4064]
  416da8:	mov	x0, x19
  416dac:	bl	412dec <wcrtomb@plt+0xdfec>
  416db0:	mov	x1, x0
  416db4:	mov	x0, x19
  416db8:	bl	415258 <wcrtomb@plt+0x10458>
  416dbc:	ldr	x19, [sp, #16]
  416dc0:	ldp	x29, x30, [sp], #32
  416dc4:	b	416cc8 <wcrtomb@plt+0x11ec8>
  416dc8:	stp	x29, x30, [sp, #-48]!
  416dcc:	stp	x22, x21, [sp, #16]
  416dd0:	stp	x20, x19, [sp, #32]
  416dd4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416dd8:	ldr	w8, [x8, #3536]
  416ddc:	mov	x19, x2
  416de0:	mov	x20, x1
  416de4:	mov	x21, x0
  416de8:	cmp	w8, #0x4
  416dec:	mov	x29, sp
  416df0:	b.ne	416e18 <wcrtomb@plt+0x12018>  // b.any
  416df4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416df8:	ldr	x8, [x8, #3456]
  416dfc:	cbz	x8, 416e18 <wcrtomb@plt+0x12018>
  416e00:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416e04:	ldrb	w8, [x22, #1789]
  416e08:	cbnz	w8, 416e18 <wcrtomb@plt+0x12018>
  416e0c:	bl	4176bc <wcrtomb@plt+0x128bc>
  416e10:	mov	w8, #0x1                   	// #1
  416e14:	strb	w8, [x22, #1789]
  416e18:	mov	x0, x21
  416e1c:	mov	x1, x20
  416e20:	mov	x2, x19
  416e24:	ldp	x20, x19, [sp, #32]
  416e28:	ldp	x22, x21, [sp, #16]
  416e2c:	ldp	x29, x30, [sp], #48
  416e30:	b	41776c <wcrtomb@plt+0x1296c>
  416e34:	stp	x29, x30, [sp, #-32]!
  416e38:	stp	x20, x19, [sp, #16]
  416e3c:	mov	x8, x0
  416e40:	mov	x9, xzr
  416e44:	mov	w19, wzr
  416e48:	mov	w20, wzr
  416e4c:	mov	x29, sp
  416e50:	ldrsb	w10, [x8, x9]
  416e54:	add	x9, x9, #0x1
  416e58:	cmp	x9, #0x200
  416e5c:	add	w20, w20, w10, uxtb
  416e60:	add	w19, w19, w10
  416e64:	b.ne	416e50 <wcrtomb@plt+0x12050>  // b.any
  416e68:	cbz	w20, 416ed0 <wcrtomb@plt+0x120d0>
  416e6c:	mov	x9, xzr
  416e70:	add	x0, x8, #0x94
  416e74:	add	x8, x8, #0x9b
  416e78:	ldrsb	w10, [x8, x9]
  416e7c:	sub	x9, x9, #0x1
  416e80:	cmn	x9, #0x8
  416e84:	sub	w20, w20, w10, uxtb
  416e88:	sub	w19, w19, w10
  416e8c:	b.ne	416e78 <wcrtomb@plt+0x12078>  // b.any
  416e90:	and	w6, w1, #0x1
  416e94:	mov	w1, #0x8                   	// #8
  416e98:	mov	w4, #0x7fffffff            	// #2147483647
  416e9c:	mov	w5, #0x1                   	// #1
  416ea0:	mov	x2, xzr
  416ea4:	mov	x3, xzr
  416ea8:	bl	416ee0 <wcrtomb@plt+0x120e0>
  416eac:	mov	x8, x0
  416eb0:	mov	w0, #0x5                   	// #5
  416eb4:	tbnz	w8, #31, 416ed4 <wcrtomb@plt+0x120d4>
  416eb8:	add	w9, w19, #0x100
  416ebc:	add	w10, w20, #0x100
  416ec0:	cmp	w9, w8
  416ec4:	ccmp	w10, w8, #0x4, ne  // ne = any
  416ec8:	csinc	w0, w0, wzr, ne  // ne = any
  416ecc:	b	416ed4 <wcrtomb@plt+0x120d4>
  416ed0:	mov	w0, #0x3                   	// #3
  416ed4:	ldp	x20, x19, [sp, #16]
  416ed8:	ldp	x29, x30, [sp], #32
  416edc:	ret
  416ee0:	stp	x29, x30, [sp, #-96]!
  416ee4:	stp	x28, x27, [sp, #16]
  416ee8:	stp	x26, x25, [sp, #32]
  416eec:	stp	x24, x23, [sp, #48]
  416ef0:	stp	x22, x21, [sp, #64]
  416ef4:	stp	x20, x19, [sp, #80]
  416ef8:	mov	x29, sp
  416efc:	sub	sp, sp, #0x440
  416f00:	ldrb	w8, [x0]
  416f04:	mov	x20, x2
  416f08:	mov	x19, sp
  416f0c:	cmp	w8, #0x0
  416f10:	cset	w21, eq  // eq = none
  416f14:	cmp	x21, x1
  416f18:	b.eq	416f88 <wcrtomb@plt+0x12188>  // b.none
  416f1c:	neg	x8, x3
  416f20:	mov	w24, w5
  416f24:	mov	x23, x3
  416f28:	mov	x26, x1
  416f2c:	mov	x25, x0
  416f30:	str	x8, [x19, #8]
  416f34:	add	x22, x0, x1
  416f38:	add	x28, x0, x21
  416f3c:	str	w6, [x19, #20]
  416f40:	str	x4, [x19, #24]
  416f44:	bl	404930 <__ctype_b_loc@plt>
  416f48:	ldr	x17, [x19, #24]
  416f4c:	ldr	w6, [x19, #20]
  416f50:	ldr	x11, [x0]
  416f54:	sub	x9, x26, x21
  416f58:	sub	x8, x9, #0x1
  416f5c:	add	x27, x21, #0x1
  416f60:	sub	x10, x9, #0x2
  416f64:	ldrb	w9, [x28]
  416f68:	ldrh	w12, [x11, x9, lsl #1]
  416f6c:	tbz	w12, #13, 416ffc <wcrtomb@plt+0x121fc>
  416f70:	add	x28, x28, #0x1
  416f74:	sub	x8, x8, #0x1
  416f78:	add	x27, x27, #0x1
  416f7c:	cmp	x28, x22
  416f80:	sub	x10, x10, #0x1
  416f84:	b.ne	416f64 <wcrtomb@plt+0x12164>  // b.any
  416f88:	mov	x0, #0xffffffffffffffff    	// #-1
  416f8c:	cbz	x20, 416fdc <wcrtomb@plt+0x121dc>
  416f90:	tbnz	w6, #0, 416fdc <wcrtomb@plt+0x121dc>
  416f94:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  416f98:	ldr	x8, [x8, #496]
  416f9c:	cbz	x8, 416fa4 <wcrtomb@plt+0x121a4>
  416fa0:	blr	x8
  416fa4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  416fa8:	add	x1, x1, #0xb70
  416fac:	mov	w2, #0x5                   	// #5
  416fb0:	mov	x0, xzr
  416fb4:	bl	404bd0 <dcgettext@plt>
  416fb8:	mov	x2, x0
  416fbc:	mov	w0, wzr
  416fc0:	mov	w1, wzr
  416fc4:	mov	x3, x20
  416fc8:	bl	4041d0 <error@plt>
  416fcc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  416fd0:	mov	w9, #0x2                   	// #2
  416fd4:	str	w9, [x8, #2944]
  416fd8:	mov	x0, #0xffffffffffffffff    	// #-1
  416fdc:	mov	sp, x29
  416fe0:	ldp	x20, x19, [sp, #80]
  416fe4:	ldp	x22, x21, [sp, #64]
  416fe8:	ldp	x24, x23, [sp, #48]
  416fec:	ldp	x26, x25, [sp, #32]
  416ff0:	ldp	x28, x27, [sp, #16]
  416ff4:	ldp	x29, x30, [sp], #96
  416ff8:	ret
  416ffc:	and	w11, w9, #0xf8
  417000:	cmp	w11, #0x30
  417004:	b.ne	417068 <wcrtomb@plt+0x12268>  // b.any
  417008:	add	x10, x28, #0x1
  41700c:	cmp	x10, x22
  417010:	sub	x12, x9, #0x30
  417014:	b.eq	417148 <wcrtomb@plt+0x12348>  // b.none
  417018:	mov	x13, xzr
  41701c:	mov	w11, wzr
  417020:	mov	x24, x12
  417024:	add	x15, x28, x13
  417028:	ldrb	w14, [x15, #1]
  41702c:	and	w16, w14, #0xf8
  417030:	cmp	w16, #0x30
  417034:	b.ne	41715c <wcrtomb@plt+0x1235c>  // b.any
  417038:	lsr	x15, x24, #61
  41703c:	cmp	x15, #0x0
  417040:	add	x14, x14, x24, lsl #3
  417044:	add	x13, x13, #0x1
  417048:	cset	w15, ne  // ne = any
  41704c:	cmp	x8, x13
  417050:	orr	w11, w11, w15
  417054:	sub	x24, x14, #0x30
  417058:	b.ne	417024 <wcrtomb@plt+0x12224>  // b.any
  41705c:	mov	x27, x22
  417060:	tbz	w11, #0, 417164 <wcrtomb@plt+0x12364>
  417064:	b	41716c <wcrtomb@plt+0x1236c>
  417068:	tbz	w24, #0, 41707c <wcrtomb@plt+0x1227c>
  41706c:	mov	w21, wzr
  417070:	mov	x24, xzr
  417074:	mov	x27, x28
  417078:	b	417298 <wcrtomb@plt+0x12498>
  41707c:	mov	x24, xzr
  417080:	cmp	w9, #0x7f
  417084:	mov	w21, wzr
  417088:	b.gt	4172f8 <wcrtomb@plt+0x124f8>
  41708c:	cmp	w9, #0x2b
  417090:	b.eq	41709c <wcrtomb@plt+0x1229c>  // b.none
  417094:	cmp	w9, #0x2d
  417098:	b.ne	417074 <wcrtomb@plt+0x12274>  // b.any
  41709c:	tbnz	w6, #0, 4170fc <wcrtomb@plt+0x122fc>
  4170a0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4170a4:	ldrb	w10, [x8, #2046]
  4170a8:	tbnz	w10, #0, 4170fc <wcrtomb@plt+0x122fc>
  4170ac:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  4170b0:	ldr	x9, [x9, #496]
  4170b4:	mov	x21, x0
  4170b8:	mov	w10, #0x1                   	// #1
  4170bc:	strb	w10, [x8, #2046]
  4170c0:	cbz	x9, 4170c8 <wcrtomb@plt+0x122c8>
  4170c4:	blr	x9
  4170c8:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  4170cc:	add	x1, x1, #0xc14
  4170d0:	mov	w2, #0x5                   	// #5
  4170d4:	mov	x0, xzr
  4170d8:	bl	404bd0 <dcgettext@plt>
  4170dc:	mov	x2, x0
  4170e0:	mov	w0, wzr
  4170e4:	mov	w1, wzr
  4170e8:	bl	4041d0 <error@plt>
  4170ec:	ldrb	w9, [x28]
  4170f0:	ldr	w6, [x19, #20]
  4170f4:	ldr	x17, [x19, #24]
  4170f8:	mov	x0, x21
  4170fc:	cmp	w9, #0x2d
  417100:	add	x8, x28, #0x1
  417104:	cset	w21, eq  // eq = none
  417108:	cmp	x8, x22
  41710c:	b.eq	4174a0 <wcrtomb@plt+0x126a0>  // b.none
  417110:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  417114:	mov	x24, xzr
  417118:	add	x8, x8, #0x6fe
  41711c:	ldrb	w9, [x25, x27]
  417120:	ldrb	w9, [x8, x9]
  417124:	cmp	x9, #0x3f
  417128:	b.hi	4174b0 <wcrtomb@plt+0x126b0>  // b.pmore
  41712c:	lsr	x10, x24, #58
  417130:	cbnz	x10, 4174b8 <wcrtomb@plt+0x126b8>
  417134:	add	x27, x27, #0x1
  417138:	cmp	x26, x27
  41713c:	orr	x24, x9, x24, lsl #6
  417140:	b.ne	41711c <wcrtomb@plt+0x1231c>  // b.any
  417144:	b	417380 <wcrtomb@plt+0x12580>
  417148:	mov	w11, wzr
  41714c:	mov	x27, x22
  417150:	mov	x24, x12
  417154:	tbz	w11, #0, 417164 <wcrtomb@plt+0x12364>
  417158:	b	41716c <wcrtomb@plt+0x1236c>
  41715c:	add	x27, x15, #0x1
  417160:	tbnz	w11, #0, 41716c <wcrtomb@plt+0x1236c>
  417164:	cmp	x24, x17
  417168:	b.ls	417294 <wcrtomb@plt+0x12494>  // b.plast
  41716c:	cbz	x20, 417248 <wcrtomb@plt+0x12448>
  417170:	cmp	w9, #0x32
  417174:	b.cc	417248 <wcrtomb@plt+0x12448>  // b.lo, b.ul, b.last
  417178:	orr	x9, x12, #0x4
  41717c:	mov	w11, #0x7                   	// #7
  417180:	cmp	x10, x22
  417184:	sub	x11, x11, x9
  417188:	mov	w9, wzr
  41718c:	b.eq	4171cc <wcrtomb@plt+0x123cc>  // b.none
  417190:	mov	x27, x10
  417194:	ldrb	w10, [x27]
  417198:	and	w12, w10, #0xf8
  41719c:	cmp	w12, #0x30
  4171a0:	b.ne	4171d0 <wcrtomb@plt+0x123d0>  // b.any
  4171a4:	lsl	x12, x11, #3
  4171a8:	lsr	x11, x11, #61
  4171ac:	cmp	x11, #0x0
  4171b0:	sub	x10, x12, x10
  4171b4:	cset	w12, ne  // ne = any
  4171b8:	add	x11, x10, #0x37
  4171bc:	subs	x8, x8, #0x1
  4171c0:	orr	w9, w9, w12
  4171c4:	add	x27, x27, #0x1
  4171c8:	b.ne	417194 <wcrtomb@plt+0x12394>  // b.any
  4171cc:	mov	x27, x22
  4171d0:	ldr	x10, [x19, #8]
  4171d4:	adds	x24, x11, #0x1
  4171d8:	cset	w8, cs  // cs = hs, nlast
  4171dc:	orr	w11, w9, w8
  4171e0:	cmp	x24, x10
  4171e4:	b.hi	417248 <wcrtomb@plt+0x12448>  // b.pmore
  4171e8:	tbnz	w11, #0, 417248 <wcrtomb@plt+0x12448>
  4171ec:	tbnz	w6, #0, 417240 <wcrtomb@plt+0x12440>
  4171f0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4171f4:	ldr	x8, [x8, #496]
  4171f8:	str	x0, [x19]
  4171fc:	cbz	x8, 417204 <wcrtomb@plt+0x12404>
  417200:	blr	x8
  417204:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  417208:	add	x1, x1, #0xba1
  41720c:	mov	w2, #0x5                   	// #5
  417210:	mov	x0, xzr
  417214:	bl	404bd0 <dcgettext@plt>
  417218:	mov	x2, x0
  41721c:	sub	w3, w27, w28
  417220:	mov	w0, wzr
  417224:	mov	w1, wzr
  417228:	mov	x4, x28
  41722c:	mov	x5, x20
  417230:	bl	4041d0 <error@plt>
  417234:	ldr	w6, [x19, #20]
  417238:	ldr	x17, [x19, #24]
  41723c:	ldr	x0, [x19]
  417240:	mov	w21, #0x1                   	// #1
  417244:	b	417298 <wcrtomb@plt+0x12498>
  417248:	tbz	w11, #0, 417294 <wcrtomb@plt+0x12494>
  41724c:	mov	x0, #0xffffffffffffffff    	// #-1
  417250:	cbz	x20, 416fdc <wcrtomb@plt+0x121dc>
  417254:	tbnz	w6, #0, 416fdc <wcrtomb@plt+0x121dc>
  417258:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41725c:	ldr	x8, [x8, #496]
  417260:	cbz	x8, 417268 <wcrtomb@plt+0x12468>
  417264:	blr	x8
  417268:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  41726c:	add	x1, x1, #0xbe8
  417270:	mov	w2, #0x5                   	// #5
  417274:	mov	x0, xzr
  417278:	bl	404bd0 <dcgettext@plt>
  41727c:	mov	x2, x0
  417280:	sub	w3, w27, w28
  417284:	mov	w0, wzr
  417288:	mov	w1, wzr
  41728c:	mov	x4, x28
  417290:	b	417494 <wcrtomb@plt+0x12694>
  417294:	mov	w21, wzr
  417298:	cmp	x27, x22
  41729c:	b.eq	417380 <wcrtomb@plt+0x12580>  // b.none
  4172a0:	ldrb	w8, [x27]
  4172a4:	cbz	x8, 417380 <wcrtomb@plt+0x12580>
  4172a8:	ldr	x9, [x0]
  4172ac:	ldrh	w8, [x9, x8, lsl #1]
  4172b0:	tbnz	w8, #13, 417380 <wcrtomb@plt+0x12580>
  4172b4:	cbz	x20, 416fd8 <wcrtomb@plt+0x121d8>
  4172b8:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4172bc:	ldr	x8, [x21, #2048]
  4172c0:	cbnz	x8, 4172d8 <wcrtomb@plt+0x124d8>
  4172c4:	mov	x0, xzr
  4172c8:	bl	4385f4 <argp_parse@@Base+0x9938>
  4172cc:	mov	w1, #0x8                   	// #8
  4172d0:	str	x0, [x21, #2048]
  4172d4:	bl	438658 <argp_parse@@Base+0x999c>
  4172d8:	cbz	x26, 417438 <wcrtomb@plt+0x12638>
  4172dc:	add	x8, x25, x26
  4172e0:	ldurb	w8, [x8, #-1]
  4172e4:	sub	x26, x26, #0x1
  4172e8:	cbz	w8, 4172d8 <wcrtomb@plt+0x124d8>
  4172ec:	add	x8, x25, x26
  4172f0:	add	x8, x8, #0x1
  4172f4:	b	41743c <wcrtomb@plt+0x1263c>
  4172f8:	cmp	w9, #0x80
  4172fc:	b.eq	417308 <wcrtomb@plt+0x12508>  // b.none
  417300:	cmp	w9, #0xff
  417304:	b.ne	417074 <wcrtomb@plt+0x12274>  // b.any
  417308:	and	w8, w9, #0x40
  41730c:	and	w9, w9, #0x3f
  417310:	neg	w11, w8
  417314:	sub	w12, w9, w8
  417318:	lsl	x9, x11, #50
  41731c:	sxtw	x13, w12
  417320:	mov	w11, #0x1                   	// #1
  417324:	ldrb	w12, [x28, x11]
  417328:	bfi	x12, x13, #8, #56
  41732c:	cbz	x10, 417374 <wcrtomb@plt+0x12574>
  417330:	and	x13, x12, #0xffffffffffffff
  417334:	orr	x13, x13, x9
  417338:	add	x11, x11, #0x1
  41733c:	cmp	x13, x12
  417340:	sub	x10, x10, #0x1
  417344:	mov	x13, x12
  417348:	b.eq	417324 <wcrtomb@plt+0x12524>  // b.none
  41734c:	mov	x0, #0xffffffffffffffff    	// #-1
  417350:	cbz	x20, 416fdc <wcrtomb@plt+0x121dc>
  417354:	tbnz	w6, #0, 416fdc <wcrtomb@plt+0x121dc>
  417358:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41735c:	ldr	x8, [x8, #496]
  417360:	cbz	x8, 417368 <wcrtomb@plt+0x12568>
  417364:	blr	x8
  417368:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  41736c:	add	x1, x1, #0xc75
  417370:	b	416fac <wcrtomb@plt+0x121ac>
  417374:	cmp	w8, #0x0
  417378:	cset	w21, ne  // ne = any
  41737c:	cneg	x24, x12, ne  // ne = any
  417380:	ldr	x9, [x19, #8]
  417384:	cmp	w21, #0x0
  417388:	csel	x8, x9, x17, ne  // ne = any
  41738c:	cmp	x24, x8
  417390:	b.ls	4174a4 <wcrtomb@plt+0x126a4>  // b.plast
  417394:	mov	x0, #0xffffffffffffffff    	// #-1
  417398:	cbz	x20, 416fdc <wcrtomb@plt+0x121dc>
  41739c:	tbnz	w6, #0, 416fdc <wcrtomb@plt+0x121dc>
  4173a0:	add	x8, x19, #0x50
  4173a4:	orr	x1, x8, #0x1
  4173a8:	mov	x0, x9
  4173ac:	bl	43401c <argp_parse@@Base+0x5360>
  4173b0:	add	x8, x19, #0x20
  4173b4:	mov	x22, x0
  4173b8:	orr	x1, x8, #0x1
  4173bc:	mov	x0, x24
  4173c0:	bl	43401c <argp_parse@@Base+0x5360>
  4173c4:	mov	x24, x0
  4173c8:	cbz	w21, 4173d4 <wcrtomb@plt+0x125d4>
  4173cc:	mov	w8, #0x2d                  	// #45
  4173d0:	strb	w8, [x24, #-1]!
  4173d4:	cbz	x23, 4173e0 <wcrtomb@plt+0x125e0>
  4173d8:	mov	w8, #0x2d                  	// #45
  4173dc:	strb	w8, [x22, #-1]!
  4173e0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4173e4:	ldr	x8, [x8, #496]
  4173e8:	cbz	x8, 4173f0 <wcrtomb@plt+0x125f0>
  4173ec:	blr	x8
  4173f0:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  4173f4:	add	x1, x1, #0xcd5
  4173f8:	mov	w2, #0x5                   	// #5
  4173fc:	mov	x0, xzr
  417400:	bl	404bd0 <dcgettext@plt>
  417404:	mov	x23, x0
  417408:	ldr	x0, [x19, #24]
  41740c:	add	x1, x19, #0x38
  417410:	bl	43401c <argp_parse@@Base+0x5360>
  417414:	mov	x6, x0
  417418:	mov	w0, wzr
  41741c:	mov	w1, wzr
  417420:	mov	x2, x23
  417424:	mov	x3, x24
  417428:	mov	x4, x20
  41742c:	mov	x5, x22
  417430:	bl	4041d0 <error@plt>
  417434:	b	416fcc <wcrtomb@plt+0x121cc>
  417438:	mov	x8, x25
  41743c:	ldr	x4, [x21, #2048]
  417440:	sub	x3, x8, x25
  417444:	add	x0, x19, #0x50
  417448:	mov	w1, #0x3e8                 	// #1000
  41744c:	mov	x2, x25
  417450:	bl	438700 <argp_parse@@Base+0x9a44>
  417454:	ldr	w8, [x19, #20]
  417458:	tbnz	w8, #0, 416fd8 <wcrtomb@plt+0x121d8>
  41745c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  417460:	ldr	x8, [x8, #496]
  417464:	cbz	x8, 41746c <wcrtomb@plt+0x1266c>
  417468:	blr	x8
  41746c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  417470:	add	x1, x1, #0xc9f
  417474:	mov	w2, #0x5                   	// #5
  417478:	mov	x0, xzr
  41747c:	bl	404bd0 <dcgettext@plt>
  417480:	mov	x2, x0
  417484:	add	x4, x19, #0x50
  417488:	mov	w3, #0x3e8                 	// #1000
  41748c:	mov	w0, wzr
  417490:	mov	w1, wzr
  417494:	mov	x5, x20
  417498:	bl	4041d0 <error@plt>
  41749c:	b	416fcc <wcrtomb@plt+0x121cc>
  4174a0:	mov	x24, xzr
  4174a4:	cmp	w21, #0x0
  4174a8:	cneg	x0, x24, ne  // ne = any
  4174ac:	b	416fdc <wcrtomb@plt+0x121dc>
  4174b0:	add	x27, x25, x27
  4174b4:	b	417298 <wcrtomb@plt+0x12498>
  4174b8:	add	x9, x26, #0x10
  4174bc:	mov	x8, sp
  4174c0:	and	x9, x9, #0xfffffffffffffff0
  4174c4:	sub	x22, x8, x9
  4174c8:	mov	sp, x22
  4174cc:	mov	x0, x22
  4174d0:	mov	x1, x25
  4174d4:	mov	x2, x26
  4174d8:	bl	4040f0 <memcpy@plt>
  4174dc:	mov	x0, #0xffffffffffffffff    	// #-1
  4174e0:	strb	wzr, [x22, x26]
  4174e4:	cbz	x20, 416fdc <wcrtomb@plt+0x121dc>
  4174e8:	ldr	w8, [x19, #20]
  4174ec:	tbnz	w8, #0, 416fdc <wcrtomb@plt+0x121dc>
  4174f0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4174f4:	ldr	x8, [x8, #496]
  4174f8:	cbz	x8, 417500 <wcrtomb@plt+0x12700>
  4174fc:	blr	x8
  417500:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  417504:	add	x1, x1, #0xc41
  417508:	mov	w2, #0x5                   	// #5
  41750c:	mov	x0, xzr
  417510:	bl	404bd0 <dcgettext@plt>
  417514:	mov	x21, x0
  417518:	mov	x0, x22
  41751c:	bl	439ac0 <argp_parse@@Base+0xae04>
  417520:	mov	x3, x0
  417524:	mov	w0, wzr
  417528:	mov	w1, wzr
  41752c:	mov	x2, x21
  417530:	mov	x4, x20
  417534:	bl	4041d0 <error@plt>
  417538:	b	416fcc <wcrtomb@plt+0x121cc>
  41753c:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  417540:	add	x2, x2, #0x6a2
  417544:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  417548:	mov	x3, xzr
  41754c:	mov	w5, wzr
  417550:	mov	w6, wzr
  417554:	b	416ee0 <wcrtomb@plt+0x120e0>
  417558:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  41755c:	add	x2, x2, #0x842
  417560:	mov	x4, #0xffffffffffffffff    	// #-1
  417564:	mov	x3, xzr
  417568:	mov	w5, wzr
  41756c:	mov	w6, wzr
  417570:	b	416ee0 <wcrtomb@plt+0x120e0>
  417574:	sub	sp, sp, #0x40
  417578:	stp	x22, x21, [sp, #32]
  41757c:	stp	x20, x19, [sp, #48]
  417580:	mov	w20, w2
  417584:	mov	x19, x1
  417588:	mov	x22, x0
  41758c:	stp	x29, x30, [sp, #16]
  417590:	add	x29, sp, #0x10
  417594:	str	x0, [sp, #8]
  417598:	tbz	x0, #63, 4175b4 <wcrtomb@plt+0x127b4>
  41759c:	cbz	w19, 4175b4 <wcrtomb@plt+0x127b4>
  4175a0:	mov	w9, #0xca00                	// #51712
  4175a4:	movk	w9, #0x3b9a, lsl #16
  4175a8:	add	x8, x22, #0x1
  4175ac:	sub	w19, w9, w19
  4175b0:	str	x8, [sp, #8]
  4175b4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4175b8:	ldrb	w8, [x8, #41]
  4175bc:	cbz	w8, 4175cc <wcrtomb@plt+0x127cc>
  4175c0:	add	x0, sp, #0x8
  4175c4:	bl	4046f0 <gmtime@plt>
  4175c8:	b	4175d4 <wcrtomb@plt+0x127d4>
  4175cc:	add	x0, sp, #0x8
  4175d0:	bl	4043f0 <localtime@plt>
  4175d4:	mov	x3, x0
  4175d8:	cbz	x0, 41760c <wcrtomb@plt+0x1280c>
  4175dc:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4175e0:	add	x21, x21, #0x6d8
  4175e4:	tbz	w20, #0, 417690 <wcrtomb@plt+0x12890>
  4175e8:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x19808>
  4175ec:	add	x2, x2, #0x328
  4175f0:	mov	w1, #0x25                  	// #37
  4175f4:	mov	x0, x21
  4175f8:	bl	4042f0 <strftime@plt>
  4175fc:	mov	x0, x21
  417600:	bl	404170 <strlen@plt>
  417604:	add	x1, x21, x0
  417608:	b	417684 <wcrtomb@plt+0x12884>
  41760c:	ldr	x8, [sp, #8]
  417610:	cmp	x22, #0x0
  417614:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  417618:	add	x1, x1, #0x6de
  41761c:	cneg	x0, x8, lt  // lt = tstop
  417620:	bl	43401c <argp_parse@@Base+0x5360>
  417624:	mov	x21, x0
  417628:	tbz	x22, #63, 417634 <wcrtomb@plt+0x12834>
  41762c:	mov	w8, #0x2d                  	// #45
  417630:	strb	w8, [x21, #-1]!
  417634:	tst	w20, #0x1
  417638:	mov	w8, #0xd                   	// #13
  41763c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  417640:	csel	x8, x8, xzr, ne  // ne = any
  417644:	add	x9, x9, #0x6d8
  417648:	add	x8, x9, x8
  41764c:	add	x22, x8, #0x14
  417650:	cmp	x22, x21
  417654:	b.cs	417678 <wcrtomb@plt+0x12878>  // b.hs, b.nlast
  417658:	sub	x8, x21, x8
  41765c:	sub	x2, x8, #0x14
  417660:	mov	w1, #0x20                  	// #32
  417664:	mov	x0, x22
  417668:	bl	4045e0 <memset@plt>
  41766c:	sub	x21, x21, #0x1
  417670:	cmp	x22, x21
  417674:	b.cc	41766c <wcrtomb@plt+0x1286c>  // b.lo, b.ul, b.last
  417678:	tbz	w20, #0, 4176a4 <wcrtomb@plt+0x128a4>
  41767c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  417680:	add	x1, x1, #0x6f2
  417684:	mov	w0, w19
  417688:	bl	418d60 <wcrtomb@plt+0x13f60>
  41768c:	b	4176a4 <wcrtomb@plt+0x128a4>
  417690:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  417694:	add	x2, x2, #0xb42
  417698:	mov	w1, #0x25                  	// #37
  41769c:	mov	x0, x21
  4176a0:	bl	4042f0 <strftime@plt>
  4176a4:	mov	x0, x21
  4176a8:	ldp	x20, x19, [sp, #48]
  4176ac:	ldp	x22, x21, [sp, #32]
  4176b0:	ldp	x29, x30, [sp, #16]
  4176b4:	add	sp, sp, #0x40
  4176b8:	ret
  4176bc:	stp	x29, x30, [sp, #-32]!
  4176c0:	stp	x28, x19, [sp, #16]
  4176c4:	mov	x29, sp
  4176c8:	sub	sp, sp, #0x3b0
  4176cc:	add	x0, sp, #0x8
  4176d0:	mov	w2, #0x200                 	// #512
  4176d4:	mov	w1, wzr
  4176d8:	bl	4045e0 <memset@plt>
  4176dc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4176e0:	ldr	x8, [x8, #1744]
  4176e4:	mov	w9, #0x56                  	// #86
  4176e8:	strb	w9, [sp, #164]
  4176ec:	cbz	x8, 417700 <wcrtomb@plt+0x12900>
  4176f0:	ldr	w9, [x8, #144]
  4176f4:	ldr	x8, [x8, #136]
  4176f8:	str	w9, [sp, #152]
  4176fc:	str	x8, [sp, #144]
  417700:	add	x0, sp, #0x208
  417704:	add	x19, sp, #0x208
  417708:	bl	420c80 <wcrtomb@plt+0x1be80>
  41770c:	add	x19, x19, #0x8
  417710:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  417714:	add	x1, x1, #0x94a
  417718:	mov	x0, x19
  41771c:	bl	4186dc <wcrtomb@plt+0x138dc>
  417720:	add	x0, sp, #0x8
  417724:	add	x1, sp, #0x208
  417728:	add	x2, sp, #0x4
  41772c:	mov	w3, wzr
  417730:	bl	4168bc <wcrtomb@plt+0x11abc>
  417734:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  417738:	ldr	x1, [x8, #3456]
  41773c:	mov	x0, x19
  417740:	bl	4186dc <wcrtomb@plt+0x138dc>
  417744:	add	x0, sp, #0x208
  417748:	add	x1, sp, #0x8
  41774c:	mov	x2, xzr
  417750:	bl	41776c <wcrtomb@plt+0x1296c>
  417754:	add	x0, sp, #0x208
  417758:	bl	420d00 <wcrtomb@plt+0x1bf00>
  41775c:	add	sp, sp, #0x3b0
  417760:	ldp	x28, x19, [sp, #16]
  417764:	ldp	x29, x30, [sp], #32
  417768:	ret
  41776c:	sub	sp, sp, #0x100
  417770:	stp	x26, x25, [sp, #192]
  417774:	adrp	x25, 46b000 <argp_program_version_hook@@Base+0x458>
  417778:	ldrb	w8, [x25, #328]
  41777c:	stp	x20, x19, [sp, #240]
  417780:	mov	x20, x1
  417784:	mov	x19, x0
  417788:	stp	x29, x30, [sp, #160]
  41778c:	stp	x28, x27, [sp, #176]
  417790:	stp	x24, x23, [sp, #208]
  417794:	stp	x22, x21, [sp, #224]
  417798:	add	x29, sp, #0xa0
  41779c:	cbz	w8, 4177b0 <wcrtomb@plt+0x129b0>
  4177a0:	ldr	x21, [x19, #8]
  4177a4:	cbnz	x21, 4177bc <wcrtomb@plt+0x129bc>
  4177a8:	ldr	x21, [x19]
  4177ac:	b	4177bc <wcrtomb@plt+0x129bc>
  4177b0:	ldr	x21, [x19]
  4177b4:	cbnz	x21, 4177bc <wcrtomb@plt+0x129bc>
  4177b8:	ldr	x21, [x19, #8]
  4177bc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4177c0:	ldrb	w8, [x8, #161]
  4177c4:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4177c8:	cbz	w8, 41782c <wcrtomb@plt+0x12a2c>
  4177cc:	tbz	x2, #63, 4177d8 <wcrtomb@plt+0x129d8>
  4177d0:	bl	405508 <wcrtomb@plt+0x708>
  4177d4:	mov	x2, x0
  4177d8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4177dc:	ldr	x8, [x8, #3552]
  4177e0:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4177e4:	ldr	x9, [x9, #3568]
  4177e8:	ldr	x22, [x27, #3416]
  4177ec:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  4177f0:	sub	x8, x2, x8
  4177f4:	add	x1, x1, #0xb37
  4177f8:	mov	w2, #0x5                   	// #5
  4177fc:	mov	x0, xzr
  417800:	sub	x23, x8, x9
  417804:	bl	404bd0 <dcgettext@plt>
  417808:	mov	x24, x0
  41780c:	add	x1, sp, #0x38
  417810:	mov	x0, x23
  417814:	bl	43401c <argp_parse@@Base+0x5360>
  417818:	mov	x3, x0
  41781c:	mov	w1, #0x1                   	// #1
  417820:	mov	x0, x22
  417824:	mov	x2, x24
  417828:	bl	4048f0 <__fprintf_chk@plt>
  41782c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  417830:	ldr	w8, [x8, #132]
  417834:	cmp	w8, #0x1
  417838:	b.gt	417878 <wcrtomb@plt+0x12a78>
  41783c:	mov	x0, x21
  417840:	bl	4396f0 <argp_parse@@Base+0xaa34>
  417844:	ldr	x1, [x27, #3416]
  417848:	bl	404bf0 <fputs_unlocked@plt>
  41784c:	ldrb	w8, [x25, #328]
  417850:	cbz	w8, 417868 <wcrtomb@plt+0x12a68>
  417854:	ldrb	w8, [x19, #16]
  417858:	cbz	w8, 417868 <wcrtomb@plt+0x12a68>
  41785c:	ldr	x1, [x27, #3416]
  417860:	mov	w0, #0x2f                  	// #47
  417864:	bl	404b70 <fputc_unlocked@plt>
  417868:	ldr	x1, [x27, #3416]
  41786c:	mov	w0, #0xa                   	// #10
  417870:	bl	404b70 <fputc_unlocked@plt>
  417874:	b	417d14 <wcrtomb@plt+0x12f14>
  417878:	mov	w8, #0x3f                  	// #63
  41787c:	sturb	w8, [x29, #-12]
  417880:	ldrb	w8, [x20, #156]
  417884:	cmp	w8, #0x52
  417888:	b.gt	4178fc <wcrtomb@plt+0x12afc>
  41788c:	sub	w9, w8, #0x30
  417890:	cmp	w9, #0x1d
  417894:	b.hi	41792c <wcrtomb@plt+0x12b2c>  // b.pmore
  417898:	adrp	x8, 44d000 <_obstack_memory_used@@Base+0x11808>
  41789c:	add	x8, x8, #0xa72
  4178a0:	adr	x10, 4178b0 <wcrtomb@plt+0x12ab0>
  4178a4:	ldrb	w11, [x8, x9]
  4178a8:	add	x10, x10, x11, lsl #2
  4178ac:	br	x10
  4178b0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4178b4:	ldr	x8, [x8, #496]
  4178b8:	mov	w9, #0x4c                  	// #76
  4178bc:	sturb	w9, [x29, #-12]
  4178c0:	cbz	x8, 4178c8 <wcrtomb@plt+0x12ac8>
  4178c4:	blr	x8
  4178c8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4178cc:	add	x1, x1, #0xc1f
  4178d0:	mov	w2, #0x5                   	// #5
  4178d4:	mov	x0, xzr
  4178d8:	bl	404bd0 <dcgettext@plt>
  4178dc:	mov	x2, x0
  4178e0:	mov	w0, wzr
  4178e4:	mov	w1, wzr
  4178e8:	bl	4041d0 <error@plt>
  4178ec:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4178f0:	mov	w9, #0x2                   	// #2
  4178f4:	str	w9, [x8, #2944]
  4178f8:	b	417980 <wcrtomb@plt+0x12b80>
  4178fc:	cmp	w8, #0x53
  417900:	b.eq	417930 <wcrtomb@plt+0x12b30>  // b.none
  417904:	cmp	w8, #0x56
  417908:	b.ne	417980 <wcrtomb@plt+0x12b80>  // b.any
  41790c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  417910:	mov	w9, #0x1                   	// #1
  417914:	mov	w10, #0x56                  	// #86
  417918:	strb	w9, [x8, #1789]
  41791c:	sturb	w10, [x29, #-12]
  417920:	b	417980 <wcrtomb@plt+0x12b80>
  417924:	mov	w8, #0x64                  	// #100
  417928:	b	41797c <wcrtomb@plt+0x12b7c>
  41792c:	cbnz	w8, 417980 <wcrtomb@plt+0x12b80>
  417930:	ldrb	w8, [x19, #16]
  417934:	mov	w9, #0x64                  	// #100
  417938:	cmp	w8, #0x0
  41793c:	mov	w8, #0x2d                  	// #45
  417940:	csel	w8, w8, w9, eq  // eq = none
  417944:	b	41797c <wcrtomb@plt+0x12b7c>
  417948:	mov	w8, #0x68                  	// #104
  41794c:	b	41797c <wcrtomb@plt+0x12b7c>
  417950:	mov	w8, #0x6c                  	// #108
  417954:	b	41797c <wcrtomb@plt+0x12b7c>
  417958:	mov	w8, #0x63                  	// #99
  41795c:	b	41797c <wcrtomb@plt+0x12b7c>
  417960:	mov	w8, #0x62                  	// #98
  417964:	b	41797c <wcrtomb@plt+0x12b7c>
  417968:	mov	w8, #0x70                  	// #112
  41796c:	b	41797c <wcrtomb@plt+0x12b7c>
  417970:	mov	w8, #0x43                  	// #67
  417974:	b	41797c <wcrtomb@plt+0x12b7c>
  417978:	mov	w8, #0x4d                  	// #77
  41797c:	sturb	w8, [x29, #-12]
  417980:	ldr	w0, [x19, #104]
  417984:	sub	x22, x29, #0xc
  417988:	orr	x1, x22, #0x1
  41798c:	bl	425dc0 <wcrtomb@plt+0x20fc0>
  417990:	add	x1, x22, #0xa
  417994:	mov	x0, x19
  417998:	bl	42567c <wcrtomb@plt+0x2087c>
  41799c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4179a0:	ldrb	w2, [x8, #184]
  4179a4:	ldp	x0, x1, [x19, #232]
  4179a8:	bl	417574 <wcrtomb@plt+0x12774>
  4179ac:	mov	x22, x0
  4179b0:	bl	404170 <strlen@plt>
  4179b4:	adrp	x28, 467000 <_obstack_memory_used@@Base+0x2b808>
  4179b8:	ldr	w8, [x28, #1940]
  4179bc:	cmp	w8, w0
  4179c0:	b.ge	4179c8 <wcrtomb@plt+0x12bc8>  // b.tcont
  4179c4:	str	w0, [x28, #1940]
  4179c8:	ldr	x23, [x19, #32]
  4179cc:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4179d0:	adrp	x25, 46b000 <argp_program_version_hook@@Base+0x458>
  4179d4:	cbz	x23, 4179f4 <wcrtomb@plt+0x12bf4>
  4179d8:	ldrb	w8, [x23]
  4179dc:	cbz	w8, 4179f4 <wcrtomb@plt+0x12bf4>
  4179e0:	ldr	w8, [x26, #3536]
  4179e4:	cmp	w8, #0x1
  4179e8:	b.eq	4179f4 <wcrtomb@plt+0x12bf4>  // b.none
  4179ec:	ldrb	w8, [x25, #160]
  4179f0:	cbz	w8, 417a04 <wcrtomb@plt+0x12c04>
  4179f4:	ldr	w0, [x19, #112]
  4179f8:	sub	x1, x29, #0x24
  4179fc:	bl	43401c <argp_parse@@Base+0x5360>
  417a00:	mov	x23, x0
  417a04:	ldr	x24, [x19, #40]
  417a08:	cbz	x24, 417a28 <wcrtomb@plt+0x12c28>
  417a0c:	ldrb	w8, [x24]
  417a10:	cbz	w8, 417a28 <wcrtomb@plt+0x12c28>
  417a14:	ldr	w8, [x26, #3536]
  417a18:	cmp	w8, #0x1
  417a1c:	b.eq	417a28 <wcrtomb@plt+0x12c28>  // b.none
  417a20:	ldrb	w8, [x25, #160]
  417a24:	cbz	w8, 417a38 <wcrtomb@plt+0x12c38>
  417a28:	ldr	w0, [x19, #116]
  417a2c:	sub	x1, x29, #0x3c
  417a30:	bl	43401c <argp_parse@@Base+0x5360>
  417a34:	mov	x24, x0
  417a38:	ldrb	w8, [x20, #156]
  417a3c:	sub	w8, w8, #0x33
  417a40:	cmp	w8, #0x1
  417a44:	b.hi	417aa8 <wcrtomb@plt+0x12ca8>  // b.pmore
  417a48:	ldr	x0, [x19, #120]
  417a4c:	bl	404890 <gnu_dev_major@plt>
  417a50:	mov	w0, w0
  417a54:	add	x1, sp, #0x20
  417a58:	bl	43401c <argp_parse@@Base+0x5360>
  417a5c:	mov	x1, x0
  417a60:	add	x0, sp, #0x38
  417a64:	mov	w2, #0x2a                  	// #42
  417a68:	bl	404540 <__strcpy_chk@plt>
  417a6c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  417a70:	add	x1, x1, #0x478
  417a74:	add	x0, sp, #0x38
  417a78:	mov	w2, #0x2a                  	// #42
  417a7c:	bl	4049c0 <__strcat_chk@plt>
  417a80:	ldr	x0, [x19, #120]
  417a84:	bl	404af0 <gnu_dev_minor@plt>
  417a88:	mov	w0, w0
  417a8c:	add	x1, sp, #0x20
  417a90:	bl	43401c <argp_parse@@Base+0x5360>
  417a94:	mov	x1, x0
  417a98:	add	x0, sp, #0x38
  417a9c:	mov	w2, #0x2a                  	// #42
  417aa0:	bl	4049c0 <__strcat_chk@plt>
  417aa4:	b	417ac4 <wcrtomb@plt+0x12cc4>
  417aa8:	ldr	x0, [x19, #136]
  417aac:	add	x1, sp, #0x20
  417ab0:	bl	43401c <argp_parse@@Base+0x5360>
  417ab4:	mov	x1, x0
  417ab8:	add	x0, sp, #0x38
  417abc:	mov	w2, #0x2a                  	// #42
  417ac0:	bl	404540 <__strcpy_chk@plt>
  417ac4:	add	x0, sp, #0x38
  417ac8:	bl	404170 <strlen@plt>
  417acc:	mov	x25, x0
  417ad0:	mov	x0, x23
  417ad4:	bl	404170 <strlen@plt>
  417ad8:	mov	x26, x0
  417adc:	mov	x0, x24
  417ae0:	bl	404170 <strlen@plt>
  417ae4:	adrp	x10, 467000 <_obstack_memory_used@@Base+0x2b808>
  417ae8:	ldr	w9, [x10, #1936]
  417aec:	add	w8, w25, w26
  417af0:	add	w8, w8, w0
  417af4:	add	w8, w8, #0x2
  417af8:	cmp	w9, w8
  417afc:	b.ge	417b08 <wcrtomb@plt+0x12d08>  // b.tcont
  417b00:	mov	w9, w8
  417b04:	str	w8, [x10, #1936]
  417b08:	ldr	x0, [x27, #3416]
  417b0c:	ldr	w10, [x28, #1940]
  417b10:	sub	w8, w25, w8
  417b14:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  417b18:	add	w6, w8, w9
  417b1c:	add	x2, x2, #0xd00
  417b20:	sub	x3, x29, #0xc
  417b24:	add	x7, sp, #0x38
  417b28:	mov	w1, #0x1                   	// #1
  417b2c:	mov	x4, x23
  417b30:	mov	x5, x24
  417b34:	str	x22, [sp, #8]
  417b38:	str	w10, [sp]
  417b3c:	bl	4048f0 <__fprintf_chk@plt>
  417b40:	ldr	x22, [x27, #3416]
  417b44:	mov	x0, x21
  417b48:	bl	4396f0 <argp_parse@@Base+0xaa34>
  417b4c:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  417b50:	mov	x3, x0
  417b54:	add	x2, x2, #0xb23
  417b58:	mov	w1, #0x1                   	// #1
  417b5c:	mov	x0, x22
  417b60:	bl	4048f0 <__fprintf_chk@plt>
  417b64:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  417b68:	ldrb	w8, [x8, #328]
  417b6c:	cbz	w8, 417b84 <wcrtomb@plt+0x12d84>
  417b70:	ldrb	w8, [x19, #16]
  417b74:	cbz	w8, 417b84 <wcrtomb@plt+0x12d84>
  417b78:	ldr	x1, [x27, #3416]
  417b7c:	mov	w0, #0x2f                  	// #47
  417b80:	bl	404b70 <fputc_unlocked@plt>
  417b84:	ldrb	w8, [x20, #156]
  417b88:	cmp	w8, #0x52
  417b8c:	b.gt	417bc4 <wcrtomb@plt+0x12dc4>
  417b90:	sub	w9, w8, #0x30
  417b94:	cmp	w9, #0x1d
  417b98:	b.hi	417be4 <wcrtomb@plt+0x12de4>  // b.pmore
  417b9c:	adrp	x10, 44d000 <_obstack_memory_used@@Base+0x11808>
  417ba0:	add	x10, x10, #0xa90
  417ba4:	adr	x11, 417bb4 <wcrtomb@plt+0x12db4>
  417ba8:	ldrb	w12, [x10, x9]
  417bac:	add	x11, x11, x12, lsl #2
  417bb0:	br	x11
  417bb4:	ldr	x1, [x27, #3416]
  417bb8:	mov	w0, #0xa                   	// #10
  417bbc:	bl	4043e0 <putc_unlocked@plt>
  417bc0:	b	417d14 <wcrtomb@plt+0x12f14>
  417bc4:	cmp	w8, #0x53
  417bc8:	b.eq	417bb4 <wcrtomb@plt+0x12db4>  // b.none
  417bcc:	cmp	w8, #0x56
  417bd0:	b.ne	417be8 <wcrtomb@plt+0x12de8>  // b.any
  417bd4:	ldr	x20, [x27, #3416]
  417bd8:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  417bdc:	add	x1, x1, #0xd5c
  417be0:	b	417c8c <wcrtomb@plt+0x12e8c>
  417be4:	cbz	w8, 417bb4 <wcrtomb@plt+0x12db4>
  417be8:	ldr	x20, [x27, #3416]
  417bec:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  417bf0:	add	x1, x1, #0xd27
  417bf4:	mov	w2, #0x5                   	// #5
  417bf8:	mov	x0, xzr
  417bfc:	strb	w8, [sp, #28]
  417c00:	strb	wzr, [sp, #29]
  417c04:	bl	404bd0 <dcgettext@plt>
  417c08:	mov	x21, x0
  417c0c:	add	x0, sp, #0x1c
  417c10:	bl	439ac0 <argp_parse@@Base+0xae04>
  417c14:	b	417c40 <wcrtomb@plt+0x12e40>
  417c18:	ldr	x20, [x27, #3416]
  417c1c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  417c20:	add	x1, x1, #0xd1a
  417c24:	mov	w2, #0x5                   	// #5
  417c28:	mov	x0, xzr
  417c2c:	bl	404bd0 <dcgettext@plt>
  417c30:	ldr	x8, [x19, #24]
  417c34:	mov	x21, x0
  417c38:	mov	x0, x8
  417c3c:	bl	4396f0 <argp_parse@@Base+0xaa34>
  417c40:	mov	x3, x0
  417c44:	mov	w1, #0x1                   	// #1
  417c48:	mov	x0, x20
  417c4c:	mov	x2, x21
  417c50:	b	417d10 <wcrtomb@plt+0x12f10>
  417c54:	ldr	x0, [x19, #24]
  417c58:	ldr	x20, [x27, #3416]
  417c5c:	bl	4396f0 <argp_parse@@Base+0xaa34>
  417c60:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  417c64:	mov	x3, x0
  417c68:	add	x2, x2, #0xd12
  417c6c:	b	417d08 <wcrtomb@plt+0x12f08>
  417c70:	ldr	x20, [x27, #3416]
  417c74:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  417c78:	add	x1, x1, #0xd3e
  417c7c:	b	417c8c <wcrtomb@plt+0x12e8c>
  417c80:	ldr	x20, [x27, #3416]
  417c84:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  417c88:	add	x1, x1, #0xd4d
  417c8c:	mov	w2, #0x5                   	// #5
  417c90:	mov	x0, xzr
  417c94:	bl	404bd0 <dcgettext@plt>
  417c98:	mov	x2, x0
  417c9c:	mov	w1, #0x1                   	// #1
  417ca0:	mov	x0, x20
  417ca4:	bl	4048f0 <__fprintf_chk@plt>
  417ca8:	b	417d14 <wcrtomb@plt+0x12f14>
  417cac:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  417cb0:	add	x0, x20, #0x171
  417cb4:	add	x2, x2, #0x842
  417cb8:	mov	w1, #0xc                   	// #12
  417cbc:	mov	x4, #0xffffffffffffffff    	// #-1
  417cc0:	mov	x3, xzr
  417cc4:	mov	w5, wzr
  417cc8:	mov	w6, wzr
  417ccc:	bl	416ee0 <wcrtomb@plt+0x120e0>
  417cd0:	add	x1, sp, #0x20
  417cd4:	bl	43401c <argp_parse@@Base+0x5360>
  417cd8:	mov	x1, x0
  417cdc:	add	x0, sp, #0x38
  417ce0:	mov	w2, #0x2a                  	// #42
  417ce4:	bl	404540 <__strcpy_chk@plt>
  417ce8:	ldr	x20, [x27, #3416]
  417cec:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  417cf0:	add	x1, x1, #0xd6f
  417cf4:	mov	w2, #0x5                   	// #5
  417cf8:	mov	x0, xzr
  417cfc:	bl	404bd0 <dcgettext@plt>
  417d00:	mov	x2, x0
  417d04:	add	x3, sp, #0x38
  417d08:	mov	w1, #0x1                   	// #1
  417d0c:	mov	x0, x20
  417d10:	bl	4048f0 <__fprintf_chk@plt>
  417d14:	ldr	x0, [x27, #3416]
  417d18:	bl	404ab0 <fflush_unlocked@plt>
  417d1c:	mov	x0, x19
  417d20:	bl	425790 <wcrtomb@plt+0x20990>
  417d24:	ldp	x20, x19, [sp, #240]
  417d28:	ldp	x22, x21, [sp, #224]
  417d2c:	ldp	x24, x23, [sp, #208]
  417d30:	ldp	x26, x25, [sp, #192]
  417d34:	ldp	x28, x27, [sp, #176]
  417d38:	ldp	x29, x30, [sp, #160]
  417d3c:	add	sp, sp, #0x100
  417d40:	ret
  417d44:	sub	sp, sp, #0x60
  417d48:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  417d4c:	ldr	w8, [x8, #132]
  417d50:	stp	x29, x30, [sp, #48]
  417d54:	stp	x22, x21, [sp, #64]
  417d58:	stp	x20, x19, [sp, #80]
  417d5c:	cmp	w8, #0x2
  417d60:	add	x29, sp, #0x30
  417d64:	b.lt	417e30 <wcrtomb@plt+0x13030>  // b.tstop
  417d68:	sub	x9, x29, #0xc
  417d6c:	mov	x19, x0
  417d70:	mov	w8, #0x64                  	// #100
  417d74:	orr	x1, x9, #0x1
  417d78:	mov	w0, w2
  417d7c:	sturb	w8, [x29, #-12]
  417d80:	bl	425dc0 <wcrtomb@plt+0x20fc0>
  417d84:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  417d88:	ldrb	w8, [x8, #161]
  417d8c:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  417d90:	cbz	w8, 417dd0 <wcrtomb@plt+0x12fd0>
  417d94:	ldr	x20, [x22, #3416]
  417d98:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  417d9c:	add	x1, x1, #0xb37
  417da0:	mov	w2, #0x5                   	// #5
  417da4:	mov	x0, xzr
  417da8:	bl	404bd0 <dcgettext@plt>
  417dac:	mov	x21, x0
  417db0:	bl	405508 <wcrtomb@plt+0x708>
  417db4:	add	x1, sp, #0xc
  417db8:	bl	43401c <argp_parse@@Base+0x5360>
  417dbc:	mov	x3, x0
  417dc0:	mov	w1, #0x1                   	// #1
  417dc4:	mov	x0, x20
  417dc8:	mov	x2, x21
  417dcc:	bl	4048f0 <__fprintf_chk@plt>
  417dd0:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  417dd4:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x2b808>
  417dd8:	ldr	w8, [x8, #1936]
  417ddc:	ldr	w9, [x9, #1940]
  417de0:	ldr	x20, [x22, #3416]
  417de4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  417de8:	add	x1, x1, #0xb5c
  417dec:	add	w8, w8, w9
  417df0:	mov	w2, #0x5                   	// #5
  417df4:	mov	x0, xzr
  417df8:	add	w21, w8, #0x1
  417dfc:	bl	404bd0 <dcgettext@plt>
  417e00:	mov	x22, x0
  417e04:	mov	x0, x19
  417e08:	bl	4396f0 <argp_parse@@Base+0xaa34>
  417e0c:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  417e10:	mov	x6, x0
  417e14:	add	x2, x2, #0xb51
  417e18:	sub	x3, x29, #0xc
  417e1c:	mov	w1, #0x1                   	// #1
  417e20:	mov	x0, x20
  417e24:	mov	w4, w21
  417e28:	mov	x5, x22
  417e2c:	bl	4048f0 <__fprintf_chk@plt>
  417e30:	ldp	x20, x19, [sp, #80]
  417e34:	ldp	x22, x21, [sp, #64]
  417e38:	ldp	x29, x30, [sp, #48]
  417e3c:	add	sp, sp, #0x60
  417e40:	ret
  417e44:	stp	x29, x30, [sp, #-32]!
  417e48:	stp	x20, x19, [sp, #16]
  417e4c:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  417e50:	ldrb	w8, [x20, #416]
  417e54:	mov	x19, x0
  417e58:	mov	x29, sp
  417e5c:	cbz	w8, 417e78 <wcrtomb@plt+0x13078>
  417e60:	mov	x0, x19
  417e64:	bl	405a70 <wcrtomb@plt+0xc70>
  417e68:	tbnz	x0, #63, 417e74 <wcrtomb@plt+0x13074>
  417e6c:	sub	x19, x19, x0, lsl #9
  417e70:	b	417e78 <wcrtomb@plt+0x13078>
  417e74:	strb	wzr, [x20, #416]
  417e78:	mov	x0, x19
  417e7c:	bl	405058 <wcrtomb@plt+0x258>
  417e80:	cmp	x19, #0x1
  417e84:	b.lt	417eac <wcrtomb@plt+0x130ac>  // b.tstop
  417e88:	add	x19, x19, #0x200
  417e8c:	bl	405574 <wcrtomb@plt+0x774>
  417e90:	cbz	x0, 417eb8 <wcrtomb@plt+0x130b8>
  417e94:	bl	40587c <wcrtomb@plt+0xa7c>
  417e98:	sub	x0, x19, #0x400
  417e9c:	bl	405058 <wcrtomb@plt+0x258>
  417ea0:	sub	x19, x19, #0x200
  417ea4:	cmp	x19, #0x200
  417ea8:	b.gt	417e8c <wcrtomb@plt+0x1308c>
  417eac:	ldp	x20, x19, [sp, #16]
  417eb0:	ldp	x29, x30, [sp], #32
  417eb4:	ret
  417eb8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  417ebc:	ldr	x8, [x8, #496]
  417ec0:	cbz	x8, 417ec8 <wcrtomb@plt+0x130c8>
  417ec4:	blr	x8
  417ec8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  417ecc:	add	x1, x1, #0x582
  417ed0:	mov	w2, #0x5                   	// #5
  417ed4:	mov	x0, xzr
  417ed8:	bl	404bd0 <dcgettext@plt>
  417edc:	mov	x2, x0
  417ee0:	mov	w0, wzr
  417ee4:	mov	w1, wzr
  417ee8:	bl	4041d0 <error@plt>
  417eec:	bl	40d698 <wcrtomb@plt+0x8898>
  417ef0:	stp	x29, x30, [sp, #-32]!
  417ef4:	str	x19, [sp, #16]
  417ef8:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  417efc:	add	x19, x19, #0x6fe
  417f00:	mov	w1, #0x40                  	// #64
  417f04:	mov	w2, #0x100                 	// #256
  417f08:	mov	x0, x19
  417f0c:	mov	x29, sp
  417f10:	bl	4045e0 <memset@plt>
  417f14:	adrp	x9, 44d000 <_obstack_memory_used@@Base+0x11808>
  417f18:	mov	x8, xzr
  417f1c:	add	x9, x9, #0xaae
  417f20:	ldrb	w10, [x9, x8]
  417f24:	strb	w8, [x19, x10]
  417f28:	add	x8, x8, #0x1
  417f2c:	cmp	x8, #0x40
  417f30:	b.ne	417f20 <wcrtomb@plt+0x13120>  // b.any
  417f34:	bl	41ae2c <wcrtomb@plt+0x1602c>
  417f38:	mov	w0, wzr
  417f3c:	bl	405ed8 <wcrtomb@plt+0x10d8>
  417f40:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  417f44:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  417f48:	add	x0, x0, #0xde8
  417f4c:	add	x1, x1, #0xe60
  417f50:	mov	w2, wzr
  417f54:	bl	416490 <wcrtomb@plt+0x11690>
  417f58:	cmp	w0, #0x1
  417f5c:	b.ne	417fec <wcrtomb@plt+0x131ec>  // b.any
  417f60:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  417f64:	ldr	x0, [x19, #3560]
  417f68:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  417f6c:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x2e808>
  417f70:	add	x1, x1, #0xe60
  417f74:	add	x2, x2, #0xdd0
  417f78:	mov	w3, wzr
  417f7c:	bl	4168bc <wcrtomb@plt+0x11abc>
  417f80:	ldr	x1, [x19, #3560]
  417f84:	ldrb	w8, [x1, #156]
  417f88:	cmp	w8, #0x56
  417f8c:	b.ne	417fa0 <wcrtomb@plt+0x131a0>  // b.any
  417f90:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  417f94:	add	x0, x0, #0xd80
  417f98:	mov	w2, #0x64                  	// #100
  417f9c:	bl	41871c <wcrtomb@plt+0x1391c>
  417fa0:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  417fa4:	ldr	x0, [x19, #3456]
  417fa8:	cbz	x0, 417fec <wcrtomb@plt+0x131ec>
  417fac:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  417fb0:	ldr	w8, [x8, #132]
  417fb4:	cbz	w8, 417fc0 <wcrtomb@plt+0x131c0>
  417fb8:	bl	4176bc <wcrtomb@plt+0x128bc>
  417fbc:	ldr	x0, [x19, #3456]
  417fc0:	bl	41b214 <wcrtomb@plt+0x16414>
  417fc4:	tbnz	w0, #0, 417fec <wcrtomb@plt+0x131ec>
  417fc8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  417fcc:	ldrb	w8, [x8, #3660]
  417fd0:	cbz	w8, 417fec <wcrtomb@plt+0x131ec>
  417fd4:	ldr	x0, [x19, #3456]
  417fd8:	bl	405e24 <wcrtomb@plt+0x1024>
  417fdc:	mov	x19, x0
  417fe0:	bl	41b214 <wcrtomb@plt+0x16414>
  417fe4:	mov	x0, x19
  417fe8:	bl	4049b0 <free@plt>
  417fec:	bl	405bb0 <wcrtomb@plt+0xdb0>
  417ff0:	ldr	x19, [sp, #16]
  417ff4:	ldp	x29, x30, [sp], #32
  417ff8:	b	41b628 <wcrtomb@plt+0x16828>
  417ffc:	stp	x29, x30, [sp, #-32]!
  418000:	ldr	w8, [x1]
  418004:	str	x19, [sp, #16]
  418008:	mov	x19, x0
  41800c:	mov	x29, sp
  418010:	cmp	w8, #0x4
  418014:	b.eq	418070 <wcrtomb@plt+0x13270>  // b.none
  418018:	cmp	w8, #0x2
  41801c:	b.eq	418030 <wcrtomb@plt+0x13230>  // b.none
  418020:	cmp	w8, #0x1
  418024:	b.ne	418048 <wcrtomb@plt+0x13248>  // b.any
  418028:	mov	w1, wzr
  41802c:	b	418034 <wcrtomb@plt+0x13234>
  418030:	mov	w1, #0x1                   	// #1
  418034:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  418038:	ldrb	w2, [x8, #440]
  41803c:	mov	x0, x19
  418040:	bl	426884 <wcrtomb@plt+0x21a84>
  418044:	mov	x19, x0
  418048:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41804c:	ldr	x1, [x8, #368]
  418050:	cbz	x1, 418070 <wcrtomb@plt+0x13270>
  418054:	mov	x0, x19
  418058:	bl	41bfa8 <wcrtomb@plt+0x171a8>
  41805c:	cmn	x0, #0x1
  418060:	b.ne	41806c <wcrtomb@plt+0x1326c>  // b.any
  418064:	mov	x0, x19
  418068:	bl	404170 <strlen@plt>
  41806c:	add	x19, x19, x0
  418070:	mov	x0, x19
  418074:	ldr	x19, [sp, #16]
  418078:	ldp	x29, x30, [sp], #32
  41807c:	ret
  418080:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  418084:	add	x8, x8, #0x808
  418088:	adrp	x2, 418000 <wcrtomb@plt+0x13200>
  41808c:	adrp	x3, 44f000 <_obstack_memory_used@@Base+0x13808>
  418090:	add	x2, x2, #0x408
  418094:	add	x3, x3, #0xe0
  418098:	mov	x1, x0
  41809c:	mov	x0, x8
  4180a0:	b	4180a4 <wcrtomb@plt+0x132a4>
  4180a4:	sub	sp, sp, #0x180
  4180a8:	stp	x20, x19, [sp, #368]
  4180ac:	mov	x19, x1
  4180b0:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  4180b4:	stp	x29, x30, [sp, #288]
  4180b8:	add	x29, sp, #0x120
  4180bc:	str	x0, [sp, #8]
  4180c0:	add	x1, x1, #0x84b
  4180c4:	mov	x0, x19
  4180c8:	stp	x28, x27, [sp, #304]
  4180cc:	stp	x26, x25, [sp, #320]
  4180d0:	stp	x24, x23, [sp, #336]
  4180d4:	stp	x22, x21, [sp, #352]
  4180d8:	mov	x20, x3
  4180dc:	mov	x21, x2
  4180e0:	stp	xzr, xzr, [x29, #-24]
  4180e4:	bl	4044a0 <fopen@plt>
  4180e8:	cbz	x0, 418400 <wcrtomb@plt+0x13600>
  4180ec:	mov	x23, x0
  4180f0:	adrp	x8, 44e000 <_obstack_memory_used@@Base+0x12808>
  4180f4:	add	x8, x8, #0x8f8
  4180f8:	sub	x0, x29, #0x10
  4180fc:	sub	x1, x29, #0x18
  418100:	mov	x2, x23
  418104:	str	x8, [sp, #96]
  418108:	bl	404980 <getline@plt>
  41810c:	cmp	x0, #0x0
  418110:	b.le	418384 <wcrtomb@plt+0x13584>
  418114:	adrp	x27, 44d000 <_obstack_memory_used@@Base+0x11808>
  418118:	mov	w22, wzr
  41811c:	mov	w25, #0x8e44                	// #36420
  418120:	mov	w24, #0x1                   	// #1
  418124:	add	x27, x27, #0xda6
  418128:	ldur	x0, [x29, #-16]
  41812c:	add	x1, sp, #0x20
  418130:	mov	w2, w25
  418134:	bl	427ec8 <wcrtomb@plt+0x230c8>
  418138:	cbnz	w0, 4183ac <wcrtomb@plt+0x135ac>
  41813c:	ldr	x8, [sp, #32]
  418140:	cbz	x8, 4181ac <wcrtomb@plt+0x133ac>
  418144:	cmp	x8, #0x2
  418148:	b.ne	418180 <wcrtomb@plt+0x13380>  // b.any
  41814c:	ldr	x8, [sp, #40]
  418150:	ldr	x0, [x8]
  418154:	ldrb	w8, [x0]
  418158:	cmp	w8, #0x2b
  41815c:	b.ne	4181d0 <wcrtomb@plt+0x133d0>  // b.any
  418160:	add	x1, x0, #0x1
  418164:	add	x0, sp, #0x18
  418168:	mov	x2, x20
  41816c:	mov	x3, x19
  418170:	mov	w4, w24
  418174:	bl	4185a4 <wcrtomb@plt+0x137a4>
  418178:	cbnz	w0, 4181a8 <wcrtomb@plt+0x133a8>
  41817c:	b	4181e4 <wcrtomb@plt+0x133e4>
  418180:	mov	w2, #0x5                   	// #5
  418184:	mov	x0, xzr
  418188:	mov	x1, x27
  41818c:	bl	404bd0 <dcgettext@plt>
  418190:	mov	x2, x0
  418194:	mov	w0, wzr
  418198:	mov	w1, wzr
  41819c:	mov	x3, x19
  4181a0:	mov	w4, w24
  4181a4:	bl	4041d0 <error@plt>
  4181a8:	mov	w22, #0x1                   	// #1
  4181ac:	sub	x0, x29, #0x10
  4181b0:	sub	x1, x29, #0x18
  4181b4:	mov	x2, x23
  4181b8:	orr	w25, w25, #0x8
  4181bc:	bl	404980 <getline@plt>
  4181c0:	cmp	x0, #0x0
  4181c4:	add	w24, w24, #0x1
  4181c8:	b.gt	418128 <wcrtomb@plt+0x13328>
  4181cc:	b	418338 <wcrtomb@plt+0x13538>
  4181d0:	cbz	x21, 4181e4 <wcrtomb@plt+0x133e4>
  4181d4:	blr	x21
  4181d8:	cmn	x0, #0x1
  4181dc:	str	x0, [sp, #24]
  4181e0:	b.eq	418258 <wcrtomb@plt+0x13458>  // b.none
  4181e4:	ldr	x8, [sp, #40]
  4181e8:	mov	w1, #0x3a                  	// #58
  4181ec:	ldr	x28, [x8, #8]
  4181f0:	mov	x0, x28
  4181f4:	bl	404a50 <strchr@plt>
  4181f8:	cbz	x0, 418228 <wcrtomb@plt+0x13428>
  4181fc:	mov	x1, x0
  418200:	cmp	x0, x28
  418204:	strb	wzr, [x1], #1
  418208:	add	x0, sp, #0x10
  41820c:	mov	x2, x20
  418210:	mov	x3, x19
  418214:	mov	w4, w24
  418218:	csel	x28, x28, xzr, hi  // hi = pmore
  41821c:	bl	4185a4 <wcrtomb@plt+0x137a4>
  418220:	cbnz	w0, 4181a8 <wcrtomb@plt+0x133a8>
  418224:	b	41828c <wcrtomb@plt+0x1348c>
  418228:	ldrb	w8, [x28]
  41822c:	cmp	w8, #0x2b
  418230:	b.ne	418278 <wcrtomb@plt+0x13478>  // b.any
  418234:	add	x0, sp, #0x10
  418238:	mov	x1, x28
  41823c:	mov	x2, x20
  418240:	mov	x3, x19
  418244:	mov	w4, w24
  418248:	bl	4185a4 <wcrtomb@plt+0x137a4>
  41824c:	cbnz	w0, 4181a8 <wcrtomb@plt+0x133a8>
  418250:	mov	x28, xzr
  418254:	b	41828c <wcrtomb@plt+0x1348c>
  418258:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  41825c:	mov	w2, #0x5                   	// #5
  418260:	mov	x0, xzr
  418264:	add	x1, x1, #0xdbc
  418268:	bl	404bd0 <dcgettext@plt>
  41826c:	ldr	x8, [sp, #40]
  418270:	ldr	x6, [x8]
  418274:	b	418318 <wcrtomb@plt+0x13518>
  418278:	mov	x0, x28
  41827c:	blr	x21
  418280:	cmn	x0, #0x1
  418284:	str	x0, [sp, #16]
  418288:	b.eq	4182fc <wcrtomb@plt+0x134fc>  // b.none
  41828c:	mov	w0, #0x18                  	// #24
  418290:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  418294:	ldp	x9, x8, [sp, #16]
  418298:	mov	x26, x0
  41829c:	stp	x8, x9, [x0]
  4182a0:	cbz	x28, 4182b0 <wcrtomb@plt+0x134b0>
  4182a4:	mov	x0, x28
  4182a8:	bl	43a998 <argp_parse@@Base+0xbcdc>
  4182ac:	b	4182b4 <wcrtomb@plt+0x134b4>
  4182b0:	mov	x0, xzr
  4182b4:	ldr	x8, [sp, #8]
  4182b8:	str	x0, [x26, #16]
  4182bc:	ldr	x0, [x8]
  4182c0:	cbnz	x0, 4182ec <wcrtomb@plt+0x134ec>
  4182c4:	adrp	x2, 418000 <wcrtomb@plt+0x13200>
  4182c8:	adrp	x3, 418000 <wcrtomb@plt+0x13200>
  4182cc:	mov	x1, xzr
  4182d0:	add	x2, x2, #0x674
  4182d4:	add	x3, x3, #0x684
  4182d8:	mov	x4, xzr
  4182dc:	bl	432c6c <argp_parse@@Base+0x3fb0>
  4182e0:	ldr	x8, [sp, #8]
  4182e4:	str	x0, [x8]
  4182e8:	cbz	x0, 4183fc <wcrtomb@plt+0x135fc>
  4182ec:	mov	x1, x26
  4182f0:	bl	433508 <argp_parse@@Base+0x484c>
  4182f4:	cbnz	x0, 4181ac <wcrtomb@plt+0x133ac>
  4182f8:	b	4183fc <wcrtomb@plt+0x135fc>
  4182fc:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  418300:	mov	w2, #0x5                   	// #5
  418304:	mov	x0, xzr
  418308:	add	x1, x1, #0xdbc
  41830c:	bl	404bd0 <dcgettext@plt>
  418310:	ldr	x8, [sp, #40]
  418314:	ldr	x6, [x8, #8]
  418318:	mov	x2, x0
  41831c:	mov	w0, wzr
  418320:	mov	w1, wzr
  418324:	mov	x3, x19
  418328:	mov	w4, w24
  41832c:	mov	x5, x20
  418330:	bl	4041d0 <error@plt>
  418334:	b	4181a8 <wcrtomb@plt+0x133a8>
  418338:	add	x0, sp, #0x20
  41833c:	bl	42800c <wcrtomb@plt+0x2320c>
  418340:	mov	x0, x23
  418344:	bl	404450 <fclose@plt>
  418348:	cbz	w22, 41838c <wcrtomb@plt+0x1358c>
  41834c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  418350:	ldr	x8, [x8, #496]
  418354:	cbz	x8, 41835c <wcrtomb@plt+0x1355c>
  418358:	blr	x8
  41835c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  418360:	add	x1, x1, #0xdd9
  418364:	mov	w2, #0x5                   	// #5
  418368:	mov	x0, xzr
  41836c:	bl	404bd0 <dcgettext@plt>
  418370:	mov	x2, x0
  418374:	mov	w0, wzr
  418378:	mov	w1, wzr
  41837c:	bl	4041d0 <error@plt>
  418380:	bl	40d698 <wcrtomb@plt+0x8898>
  418384:	mov	x0, x23
  418388:	bl	404450 <fclose@plt>
  41838c:	ldp	x20, x19, [sp, #368]
  418390:	ldp	x22, x21, [sp, #352]
  418394:	ldp	x24, x23, [sp, #336]
  418398:	ldp	x26, x25, [sp, #320]
  41839c:	ldp	x28, x27, [sp, #304]
  4183a0:	ldp	x29, x30, [sp, #288]
  4183a4:	add	sp, sp, #0x180
  4183a8:	ret
  4183ac:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4183b0:	ldr	x8, [x8, #496]
  4183b4:	cbz	x8, 4183bc <wcrtomb@plt+0x135bc>
  4183b8:	blr	x8
  4183bc:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  4183c0:	add	x1, x1, #0xd89
  4183c4:	mov	w2, #0x5                   	// #5
  4183c8:	mov	x0, xzr
  4183cc:	bl	404bd0 <dcgettext@plt>
  4183d0:	mov	x20, x0
  4183d4:	add	x0, sp, #0x20
  4183d8:	bl	4280cc <wcrtomb@plt+0x232cc>
  4183dc:	mov	x5, x0
  4183e0:	mov	w0, wzr
  4183e4:	mov	w1, wzr
  4183e8:	mov	x2, x20
  4183ec:	mov	x3, x19
  4183f0:	mov	w4, w24
  4183f4:	bl	4041d0 <error@plt>
  4183f8:	bl	40d698 <wcrtomb@plt+0x8898>
  4183fc:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  418400:	mov	x0, x19
  418404:	bl	42622c <wcrtomb@plt+0x2142c>
  418408:	stp	x29, x30, [sp, #-16]!
  41840c:	mov	x29, sp
  418410:	bl	404610 <getpwnam@plt>
  418414:	cbz	x0, 418420 <wcrtomb@plt+0x13620>
  418418:	ldr	w0, [x0, #16]
  41841c:	b	418424 <wcrtomb@plt+0x13624>
  418420:	mov	x0, #0xffffffffffffffff    	// #-1
  418424:	ldp	x29, x30, [sp], #16
  418428:	ret
  41842c:	sub	sp, sp, #0x40
  418430:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  418434:	ldr	x8, [x8, #2056]
  418438:	stp	x20, x19, [sp, #48]
  41843c:	mov	x19, x2
  418440:	mov	x20, x1
  418444:	stp	x29, x30, [sp, #32]
  418448:	add	x29, sp, #0x20
  41844c:	cbz	x8, 418480 <wcrtomb@plt+0x13680>
  418450:	mov	w9, w0
  418454:	add	x1, sp, #0x8
  418458:	mov	x0, x8
  41845c:	str	x9, [sp, #8]
  418460:	bl	43299c <argp_parse@@Base+0x3ce0>
  418464:	cbz	x0, 418480 <wcrtomb@plt+0x13680>
  418468:	mov	x8, x0
  41846c:	ldr	x9, [x8, #8]
  418470:	mov	w0, wzr
  418474:	str	w9, [x20]
  418478:	ldr	x8, [x8, #16]
  41847c:	b	4184b0 <wcrtomb@plt+0x136b0>
  418480:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  418484:	ldr	w8, [x8, #272]
  418488:	cmn	w8, #0x1
  41848c:	b.eq	41849c <wcrtomb@plt+0x1369c>  // b.none
  418490:	mov	w0, wzr
  418494:	str	w8, [x20]
  418498:	b	4184a0 <wcrtomb@plt+0x136a0>
  41849c:	mov	w0, #0x1                   	// #1
  4184a0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4184a4:	ldr	x8, [x8, #72]
  4184a8:	cbz	x8, 4184b4 <wcrtomb@plt+0x136b4>
  4184ac:	mov	w0, wzr
  4184b0:	str	x8, [x19]
  4184b4:	ldp	x20, x19, [sp, #48]
  4184b8:	ldp	x29, x30, [sp, #32]
  4184bc:	add	sp, sp, #0x40
  4184c0:	ret
  4184c4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4184c8:	add	x8, x8, #0x810
  4184cc:	adrp	x2, 418000 <wcrtomb@plt+0x13200>
  4184d0:	adrp	x3, 44f000 <_obstack_memory_used@@Base+0x13808>
  4184d4:	add	x2, x2, #0x4e8
  4184d8:	add	x3, x3, #0xe8
  4184dc:	mov	x1, x0
  4184e0:	mov	x0, x8
  4184e4:	b	4180a4 <wcrtomb@plt+0x132a4>
  4184e8:	stp	x29, x30, [sp, #-16]!
  4184ec:	mov	x29, sp
  4184f0:	bl	4042a0 <getgrnam@plt>
  4184f4:	cbz	x0, 418500 <wcrtomb@plt+0x13700>
  4184f8:	ldr	w0, [x0, #16]
  4184fc:	b	418504 <wcrtomb@plt+0x13704>
  418500:	mov	x0, #0xffffffffffffffff    	// #-1
  418504:	ldp	x29, x30, [sp], #16
  418508:	ret
  41850c:	sub	sp, sp, #0x40
  418510:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  418514:	ldr	x8, [x8, #2064]
  418518:	stp	x20, x19, [sp, #48]
  41851c:	mov	x19, x2
  418520:	mov	x20, x1
  418524:	stp	x29, x30, [sp, #32]
  418528:	add	x29, sp, #0x20
  41852c:	cbz	x8, 418560 <wcrtomb@plt+0x13760>
  418530:	mov	w9, w0
  418534:	add	x1, sp, #0x8
  418538:	mov	x0, x8
  41853c:	str	x9, [sp, #8]
  418540:	bl	43299c <argp_parse@@Base+0x3ce0>
  418544:	cbz	x0, 418560 <wcrtomb@plt+0x13760>
  418548:	mov	x8, x0
  41854c:	ldr	x9, [x8, #8]
  418550:	mov	w0, wzr
  418554:	str	w9, [x20]
  418558:	ldr	x8, [x8, #16]
  41855c:	b	418590 <wcrtomb@plt+0x13790>
  418560:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  418564:	ldr	w8, [x8, #192]
  418568:	cmn	w8, #0x1
  41856c:	b.eq	41857c <wcrtomb@plt+0x1377c>  // b.none
  418570:	mov	w0, wzr
  418574:	str	w8, [x20]
  418578:	b	418580 <wcrtomb@plt+0x13780>
  41857c:	mov	w0, #0x1                   	// #1
  418580:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  418584:	ldr	x8, [x8, #16]
  418588:	cbz	x8, 418594 <wcrtomb@plt+0x13794>
  41858c:	mov	w0, wzr
  418590:	str	x8, [x19]
  418594:	ldp	x20, x19, [sp, #48]
  418598:	ldp	x29, x30, [sp, #32]
  41859c:	add	sp, sp, #0x40
  4185a0:	ret
  4185a4:	sub	sp, sp, #0x50
  4185a8:	stp	x29, x30, [sp, #16]
  4185ac:	stp	x24, x23, [sp, #32]
  4185b0:	stp	x22, x21, [sp, #48]
  4185b4:	stp	x20, x19, [sp, #64]
  4185b8:	add	x29, sp, #0x10
  4185bc:	mov	w21, w4
  4185c0:	mov	x22, x3
  4185c4:	mov	x20, x2
  4185c8:	mov	x19, x1
  4185cc:	mov	x23, x0
  4185d0:	bl	404ce0 <__errno_location@plt>
  4185d4:	mov	x24, x0
  4185d8:	str	wzr, [x0]
  4185dc:	add	x1, sp, #0x8
  4185e0:	mov	w2, #0xa                   	// #10
  4185e4:	mov	x0, x19
  4185e8:	bl	404820 <strtoumax@plt>
  4185ec:	ldr	x8, [sp, #8]
  4185f0:	ldrb	w9, [x8]
  4185f4:	cbnz	w9, 418600 <wcrtomb@plt+0x13800>
  4185f8:	ldr	w9, [x24]
  4185fc:	cbz	w9, 418650 <wcrtomb@plt+0x13850>
  418600:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  418604:	add	x1, x1, #0xdf1
  418608:	mov	w2, #0x5                   	// #5
  41860c:	mov	x0, xzr
  418610:	bl	404bd0 <dcgettext@plt>
  418614:	mov	x2, x0
  418618:	mov	w0, wzr
  41861c:	mov	w1, wzr
  418620:	mov	x3, x22
  418624:	mov	w4, w21
  418628:	mov	x5, x20
  41862c:	mov	x6, x19
  418630:	bl	4041d0 <error@plt>
  418634:	mov	w0, #0xffffffff            	// #-1
  418638:	ldp	x20, x19, [sp, #64]
  41863c:	ldp	x22, x21, [sp, #48]
  418640:	ldp	x24, x23, [sp, #32]
  418644:	ldp	x29, x30, [sp, #16]
  418648:	add	sp, sp, #0x50
  41864c:	ret
  418650:	mov	x8, x0
  418654:	lsr	x9, x0, #32
  418658:	cbz	x9, 418668 <wcrtomb@plt+0x13868>
  41865c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  418660:	add	x1, x1, #0xe07
  418664:	b	418608 <wcrtomb@plt+0x13808>
  418668:	mov	w0, wzr
  41866c:	str	x8, [x23]
  418670:	b	418638 <wcrtomb@plt+0x13838>
  418674:	ldr	x8, [x0]
  418678:	udiv	x9, x8, x1
  41867c:	msub	x0, x9, x1, x8
  418680:	ret
  418684:	ldr	x8, [x0]
  418688:	ldr	x9, [x1]
  41868c:	cmp	x8, x9
  418690:	cset	w0, eq  // eq = none
  418694:	ret
  418698:	ret
  41869c:	lsr	x8, x1, #63
  4186a0:	eor	w0, w8, #0x1
  4186a4:	ret
  4186a8:	stp	x29, x30, [sp, #-32]!
  4186ac:	stp	x20, x19, [sp, #16]
  4186b0:	mov	w20, w0
  4186b4:	mov	x0, xzr
  4186b8:	mov	x29, sp
  4186bc:	mov	x19, x1
  4186c0:	bl	438640 <argp_parse@@Base+0x9984>
  4186c4:	mov	w1, w0
  4186c8:	mov	w0, w20
  4186cc:	mov	x2, x19
  4186d0:	ldp	x20, x19, [sp, #16]
  4186d4:	ldp	x29, x30, [sp], #32
  4186d8:	b	43997c <argp_parse@@Base+0xacc0>
  4186dc:	stp	x29, x30, [sp, #-32]!
  4186e0:	stp	x20, x19, [sp, #16]
  4186e4:	mov	x19, x0
  4186e8:	ldr	x0, [x0]
  4186ec:	mov	x29, sp
  4186f0:	mov	x20, x1
  4186f4:	bl	4049b0 <free@plt>
  4186f8:	cbz	x20, 418708 <wcrtomb@plt+0x13908>
  4186fc:	mov	x0, x20
  418700:	bl	43a998 <argp_parse@@Base+0xbcdc>
  418704:	b	41870c <wcrtomb@plt+0x1390c>
  418708:	mov	x0, xzr
  41870c:	str	x0, [x19]
  418710:	ldp	x20, x19, [sp, #16]
  418714:	ldp	x29, x30, [sp], #32
  418718:	ret
  41871c:	stp	x29, x30, [sp, #-48]!
  418720:	stp	x22, x21, [sp, #16]
  418724:	stp	x20, x19, [sp, #32]
  418728:	mov	x19, x0
  41872c:	ldr	x0, [x0]
  418730:	mov	x29, sp
  418734:	mov	x21, x2
  418738:	mov	x20, x1
  41873c:	bl	4049b0 <free@plt>
  418740:	cbz	x20, 418774 <wcrtomb@plt+0x13974>
  418744:	mov	x0, x20
  418748:	mov	x1, x21
  41874c:	bl	404250 <strnlen@plt>
  418750:	mov	x21, x0
  418754:	add	x0, x0, #0x1
  418758:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  41875c:	mov	x1, x20
  418760:	mov	x2, x21
  418764:	mov	x22, x0
  418768:	bl	4040f0 <memcpy@plt>
  41876c:	strb	wzr, [x22, x21]
  418770:	str	x22, [x19]
  418774:	ldp	x20, x19, [sp, #32]
  418778:	ldp	x22, x21, [sp, #16]
  41877c:	ldp	x29, x30, [sp], #48
  418780:	ret
  418784:	adrp	x16, 44d000 <_obstack_memory_used@@Base+0x11808>
  418788:	ldr	q0, [x16, #3632]
  41878c:	mov	w17, #0x2                   	// #2
  418790:	adrp	x14, 44d000 <_obstack_memory_used@@Base+0x11808>
  418794:	dup	v3.2d, x0
  418798:	mov	w8, #0x1                   	// #1
  41879c:	mov	w9, #0x7f                  	// #127
  4187a0:	mov	w10, #0x5c                  	// #92
  4187a4:	mov	w11, #0x7                   	// #7
  4187a8:	mov	w12, #0x8                   	// #8
  4187ac:	mov	w13, #0xc                   	// #12
  4187b0:	add	x14, x14, #0xe40
  4187b4:	mov	w15, #0xa                   	// #10
  4187b8:	dup	v1.2d, x17
  4187bc:	mov	w16, #0xd                   	// #13
  4187c0:	mov	w17, #0x9                   	// #9
  4187c4:	mov	w18, #0xb                   	// #11
  4187c8:	mov	w0, #0x1                   	// #1
  4187cc:	mov	v2.16b, v3.16b
  4187d0:	fmov	x2, d2
  4187d4:	ldrb	w1, [x2]
  4187d8:	cmp	w1, #0x5c
  4187dc:	b.eq	418800 <wcrtomb@plt+0x13a00>  // b.none
  4187e0:	cbz	w1, 418974 <wcrtomb@plt+0x13b74>
  4187e4:	mov	x3, v2.d[1]
  4187e8:	dup	v3.2d, x8
  4187ec:	cmp	x2, x3
  4187f0:	add	v3.2d, v2.2d, v3.2d
  4187f4:	b.eq	4187cc <wcrtomb@plt+0x139cc>  // b.none
  4187f8:	strb	w1, [x3]
  4187fc:	b	4187cc <wcrtomb@plt+0x139cc>
  418800:	mov	x1, x2
  418804:	ldrb	w4, [x1, #1]!
  418808:	cmp	w4, #0x5b
  41880c:	b.le	418840 <wcrtomb@plt+0x13a40>
  418810:	cmp	w4, #0x65
  418814:	b.gt	41889c <wcrtomb@plt+0x13a9c>
  418818:	cmp	w4, #0x5c
  41881c:	b.eq	4188c8 <wcrtomb@plt+0x13ac8>  // b.none
  418820:	cmp	w4, #0x61
  418824:	b.eq	4188d8 <wcrtomb@plt+0x13ad8>  // b.none
  418828:	cmp	w4, #0x62
  41882c:	b.ne	418918 <wcrtomb@plt+0x13b18>  // b.any
  418830:	mov	x1, v2.d[1]
  418834:	strb	w12, [x1]
  418838:	add	v3.2d, v2.2d, v0.2d
  41883c:	b	4187cc <wcrtomb@plt+0x139cc>
  418840:	sub	w3, w4, #0x30
  418844:	cmp	w3, #0x8
  418848:	b.cs	4188e8 <wcrtomb@plt+0x13ae8>  // b.hs, b.nlast
  41884c:	mov	x1, x2
  418850:	ldrb	w5, [x1, #2]!
  418854:	and	w4, w5, #0xf8
  418858:	cmp	w4, #0x30
  41885c:	b.ne	418888 <wcrtomb@plt+0x13a88>  // b.any
  418860:	mov	x1, x2
  418864:	ldrb	w4, [x1, #3]!
  418868:	add	w3, w5, w3, lsl #3
  41886c:	sub	w3, w3, #0x30
  418870:	and	w5, w4, #0xf8
  418874:	cmp	w5, #0x30
  418878:	b.ne	418888 <wcrtomb@plt+0x13a88>  // b.any
  41887c:	add	x1, x2, #0x4
  418880:	add	w2, w4, w3, lsl #3
  418884:	sub	w3, w2, #0x30
  418888:	mov	x2, v2.d[1]
  41888c:	strb	w3, [x2], #1
  418890:	fmov	d3, x1
  418894:	mov	v3.d[1], x2
  418898:	b	4187cc <wcrtomb@plt+0x139cc>
  41889c:	sub	w2, w4, #0x6e
  4188a0:	cmp	w2, #0x8
  4188a4:	b.hi	418900 <wcrtomb@plt+0x13b00>  // b.pmore
  4188a8:	adr	x3, 4188b8 <wcrtomb@plt+0x13ab8>
  4188ac:	ldrb	w4, [x14, x2]
  4188b0:	add	x3, x3, x4, lsl #2
  4188b4:	br	x3
  4188b8:	mov	x1, v2.d[1]
  4188bc:	strb	w15, [x1]
  4188c0:	add	v3.2d, v2.2d, v0.2d
  4188c4:	b	4187cc <wcrtomb@plt+0x139cc>
  4188c8:	mov	x1, v2.d[1]
  4188cc:	strb	w10, [x1]
  4188d0:	add	v3.2d, v2.2d, v0.2d
  4188d4:	b	4187cc <wcrtomb@plt+0x139cc>
  4188d8:	mov	x1, v2.d[1]
  4188dc:	strb	w11, [x1]
  4188e0:	add	v3.2d, v2.2d, v0.2d
  4188e4:	b	4187cc <wcrtomb@plt+0x139cc>
  4188e8:	cmp	w4, #0x3f
  4188ec:	b.ne	418918 <wcrtomb@plt+0x13b18>  // b.any
  4188f0:	mov	x1, v2.d[1]
  4188f4:	strb	w9, [x1]
  4188f8:	add	v3.2d, v2.2d, v0.2d
  4188fc:	b	4187cc <wcrtomb@plt+0x139cc>
  418900:	cmp	w4, #0x66
  418904:	b.ne	418918 <wcrtomb@plt+0x13b18>  // b.any
  418908:	mov	x1, v2.d[1]
  41890c:	strb	w13, [x1]
  418910:	add	v3.2d, v2.2d, v0.2d
  418914:	b	4187cc <wcrtomb@plt+0x139cc>
  418918:	mov	x2, v2.d[1]
  41891c:	strb	w10, [x2], #1
  418920:	ldrb	w3, [x1]
  418924:	fmov	d3, x1
  418928:	mov	w0, wzr
  41892c:	mov	v3.d[1], x2
  418930:	cbz	w3, 4187cc <wcrtomb@plt+0x139cc>
  418934:	mov	w0, wzr
  418938:	add	v3.2d, v2.2d, v1.2d
  41893c:	strb	w3, [x2]
  418940:	b	4187cc <wcrtomb@plt+0x139cc>
  418944:	mov	x1, v2.d[1]
  418948:	strb	w16, [x1]
  41894c:	add	v3.2d, v2.2d, v0.2d
  418950:	b	4187cc <wcrtomb@plt+0x139cc>
  418954:	mov	x1, v2.d[1]
  418958:	strb	w17, [x1]
  41895c:	add	v3.2d, v2.2d, v0.2d
  418960:	b	4187cc <wcrtomb@plt+0x139cc>
  418964:	mov	x1, v2.d[1]
  418968:	strb	w18, [x1]
  41896c:	add	v3.2d, v2.2d, v0.2d
  418970:	b	4187cc <wcrtomb@plt+0x139cc>
  418974:	mov	x8, v2.d[1]
  418978:	cmp	x2, x8
  41897c:	b.eq	418984 <wcrtomb@plt+0x13b84>  // b.none
  418980:	strb	wzr, [x8]
  418984:	ret
  418988:	stp	x29, x30, [sp, #-32]!
  41898c:	str	x19, [sp, #16]
  418990:	mov	x19, x0
  418994:	mov	x29, sp
  418998:	cbz	x0, 4189d0 <wcrtomb@plt+0x13bd0>
  41899c:	ldrb	w8, [x19]
  4189a0:	cbz	w8, 4189d0 <wcrtomb@plt+0x13bd0>
  4189a4:	mov	x0, x19
  4189a8:	bl	404170 <strlen@plt>
  4189ac:	add	x8, x19, x0
  4189b0:	sub	x8, x8, #0x1
  4189b4:	cmp	x8, x19
  4189b8:	b.ls	4189d0 <wcrtomb@plt+0x13bd0>  // b.plast
  4189bc:	ldrb	w9, [x8]
  4189c0:	cmp	w9, #0x2f
  4189c4:	b.ne	4189d0 <wcrtomb@plt+0x13bd0>  // b.any
  4189c8:	strb	wzr, [x8], #-1
  4189cc:	b	4189b4 <wcrtomb@plt+0x13bb4>
  4189d0:	mov	x0, x19
  4189d4:	ldr	x19, [sp, #16]
  4189d8:	ldp	x29, x30, [sp], #32
  4189dc:	ret
  4189e0:	ldrb	w8, [x0]
  4189e4:	mov	x9, x0
  4189e8:	cmp	w8, #0x2e
  4189ec:	mov	x8, x0
  4189f0:	b.ne	418a2c <wcrtomb@plt+0x13c2c>  // b.any
  4189f4:	mov	x9, x0
  4189f8:	mov	x8, x0
  4189fc:	ldrb	w10, [x9, #1]
  418a00:	cmp	w10, #0x2f
  418a04:	b.ne	418a2c <wcrtomb@plt+0x13c2c>  // b.any
  418a08:	add	x9, x9, #0x1
  418a0c:	ldrb	w10, [x9, #1]!
  418a10:	cmp	w10, #0x2f
  418a14:	b.eq	418a0c <wcrtomb@plt+0x13c0c>  // b.none
  418a18:	cmp	w10, #0x0
  418a1c:	cinc	x8, x8, eq  // eq = none
  418a20:	cmp	w10, #0x2e
  418a24:	strb	w10, [x8]
  418a28:	b.eq	4189fc <wcrtomb@plt+0x13bfc>  // b.none
  418a2c:	mov	w10, #0x1                   	// #1
  418a30:	ldrb	w12, [x9], #1
  418a34:	mov	x11, x8
  418a38:	cmp	w12, #0x2f
  418a3c:	strb	w12, [x8], #1
  418a40:	b.eq	418a58 <wcrtomb@plt+0x13c58>  // b.none
  418a44:	cbnz	w12, 418a30 <wcrtomb@plt+0x13c30>
  418a48:	b	418a7c <wcrtomb@plt+0x13c7c>
  418a4c:	tst	w11, #0x1
  418a50:	cinc	x11, x10, ne  // ne = any
  418a54:	add	x9, x9, x11
  418a58:	mov	x11, x9
  418a5c:	ldrb	w12, [x11], #1
  418a60:	cmp	w12, #0x2e
  418a64:	csel	x11, x9, x11, ne  // ne = any
  418a68:	ldrb	w12, [x11]
  418a6c:	cset	w11, eq  // eq = none
  418a70:	cmp	w12, #0x2f
  418a74:	b.eq	418a4c <wcrtomb@plt+0x13c4c>  // b.none
  418a78:	b	418a30 <wcrtomb@plt+0x13c30>
  418a7c:	sub	x9, x8, x0
  418a80:	cmp	x9, #0x3
  418a84:	b.lt	418ad4 <wcrtomb@plt+0x13cd4>  // b.tstop
  418a88:	ldurb	w9, [x11, #-1]
  418a8c:	cmp	w9, #0x2e
  418a90:	b.ne	418aa4 <wcrtomb@plt+0x13ca4>  // b.any
  418a94:	ldurb	w9, [x11, #-2]
  418a98:	cmp	w9, #0x2f
  418a9c:	csetm	x9, eq  // eq = none
  418aa0:	b	418aa8 <wcrtomb@plt+0x13ca8>
  418aa4:	mov	x9, xzr
  418aa8:	add	x8, x8, x9
  418aac:	sub	x9, x8, x0
  418ab0:	cmp	x9, #0x3
  418ab4:	b.lt	418ac8 <wcrtomb@plt+0x13cc8>  // b.tstop
  418ab8:	ldurb	w9, [x8, #-2]
  418abc:	cmp	w9, #0x2f
  418ac0:	csetm	x9, eq  // eq = none
  418ac4:	b	418acc <wcrtomb@plt+0x13ccc>
  418ac8:	mov	x9, xzr
  418acc:	add	x8, x8, x9
  418ad0:	sturb	wzr, [x8, #-1]
  418ad4:	ret
  418ad8:	stp	x29, x30, [sp, #-48]!
  418adc:	stp	x22, x21, [sp, #16]
  418ae0:	stp	x20, x19, [sp, #32]
  418ae4:	ldrb	w8, [x1]
  418ae8:	mov	x19, x1
  418aec:	mov	x29, sp
  418af0:	cmp	w8, #0x2f
  418af4:	b.eq	418b88 <wcrtomb@plt+0x13d88>  // b.none
  418af8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  418afc:	ldr	x8, [x8, #2104]
  418b00:	cbz	x8, 418b28 <wcrtomb@plt+0x13d28>
  418b04:	mov	w9, #0x18                  	// #24
  418b08:	smaddl	x8, w0, w9, x8
  418b0c:	ldr	x20, [x8, #8]
  418b10:	cbnz	x20, 418b44 <wcrtomb@plt+0x13d44>
  418b14:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x11808>
  418b18:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  418b1c:	add	x0, x0, #0xe49
  418b20:	add	x1, x1, #0x94a
  418b24:	bl	425efc <wcrtomb@plt+0x210fc>
  418b28:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  418b2c:	ldr	x20, [x21, #2184]
  418b30:	cbnz	x20, 418b44 <wcrtomb@plt+0x13d44>
  418b34:	bl	43a9e0 <argp_parse@@Base+0xbd24>
  418b38:	mov	x20, x0
  418b3c:	str	x0, [x21, #2184]
  418b40:	cbz	x20, 418b14 <wcrtomb@plt+0x13d14>
  418b44:	mov	x0, x20
  418b48:	bl	404170 <strlen@plt>
  418b4c:	mov	x22, x0
  418b50:	mov	x0, x19
  418b54:	bl	404170 <strlen@plt>
  418b58:	add	x8, x22, x0
  418b5c:	add	x0, x8, #0x2
  418b60:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  418b64:	mov	x1, x20
  418b68:	mov	x21, x0
  418b6c:	bl	404b00 <strcpy@plt>
  418b70:	add	x0, x0, x22
  418b74:	mov	w8, #0x2f                  	// #47
  418b78:	strb	w8, [x0], #1
  418b7c:	mov	x1, x19
  418b80:	bl	404b00 <strcpy@plt>
  418b84:	cbnz	x21, 418b94 <wcrtomb@plt+0x13d94>
  418b88:	mov	x0, x19
  418b8c:	bl	43a998 <argp_parse@@Base+0xbcdc>
  418b90:	mov	x21, x0
  418b94:	mov	x0, x21
  418b98:	bl	4189e0 <wcrtomb@plt+0x13be0>
  418b9c:	mov	x0, x21
  418ba0:	ldp	x20, x19, [sp, #32]
  418ba4:	ldp	x22, x21, [sp, #16]
  418ba8:	ldp	x29, x30, [sp], #48
  418bac:	ret
  418bb0:	stp	x29, x30, [sp, #-80]!
  418bb4:	stp	x24, x23, [sp, #32]
  418bb8:	stp	x22, x21, [sp, #48]
  418bbc:	stp	x20, x19, [sp, #64]
  418bc0:	ldr	x21, [x0]
  418bc4:	mov	x24, x0
  418bc8:	str	x25, [sp, #16]
  418bcc:	mov	x29, sp
  418bd0:	mov	x0, x21
  418bd4:	mov	x19, x4
  418bd8:	mov	x20, x3
  418bdc:	mov	x22, x2
  418be0:	mov	x25, x1
  418be4:	bl	404170 <strlen@plt>
  418be8:	cmp	x0, x22
  418bec:	b.ls	418c5c <wcrtomb@plt+0x13e5c>  // b.plast
  418bf0:	mov	x23, x0
  418bf4:	mov	x0, x21
  418bf8:	mov	x1, x25
  418bfc:	mov	x2, x22
  418c00:	bl	4046b0 <bcmp@plt>
  418c04:	cbnz	w0, 418c5c <wcrtomb@plt+0x13e5c>
  418c08:	ldrb	w8, [x21, x22]
  418c0c:	cmp	w8, #0x2f
  418c10:	b.ne	418c5c <wcrtomb@plt+0x13e5c>  // b.any
  418c14:	mov	w8, #0x1                   	// #1
  418c18:	cmp	x19, x22
  418c1c:	sub	x25, x8, x22
  418c20:	b.ls	418c3c <wcrtomb@plt+0x13e3c>  // b.plast
  418c24:	add	x8, x25, x19
  418c28:	add	x1, x8, x23
  418c2c:	mov	x0, x21
  418c30:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  418c34:	mov	x21, x0
  418c38:	str	x0, [x24]
  418c3c:	add	x0, x21, x19
  418c40:	add	x1, x21, x22
  418c44:	add	x2, x25, x23
  418c48:	bl	404100 <memmove@plt>
  418c4c:	mov	x0, x21
  418c50:	mov	x1, x20
  418c54:	mov	x2, x19
  418c58:	bl	4040f0 <memcpy@plt>
  418c5c:	ldp	x20, x19, [sp, #64]
  418c60:	ldp	x22, x21, [sp, #48]
  418c64:	ldp	x24, x23, [sp, #32]
  418c68:	ldr	x25, [sp, #16]
  418c6c:	ldp	x29, x30, [sp], #80
  418c70:	ret
  418c74:	cmp	x0, x2
  418c78:	mov	x1, x3
  418c7c:	b.ls	418c84 <wcrtomb@plt+0x13e84>  // b.plast
  418c80:	b	433efc <argp_parse@@Base+0x5240>
  418c84:	b	43401c <argp_parse@@Base+0x5360>
  418c88:	stp	x29, x30, [sp, #-64]!
  418c8c:	str	x23, [sp, #16]
  418c90:	stp	x22, x21, [sp, #32]
  418c94:	stp	x20, x19, [sp, #48]
  418c98:	mov	x29, sp
  418c9c:	mov	x19, x3
  418ca0:	mov	x21, x2
  418ca4:	mov	x22, x1
  418ca8:	mov	x23, x0
  418cac:	bl	404ce0 <__errno_location@plt>
  418cb0:	str	wzr, [x0]
  418cb4:	ldrb	w8, [x23]
  418cb8:	mov	x20, x0
  418cbc:	tbnz	x19, #63, 418d0c <wcrtomb@plt+0x13f0c>
  418cc0:	cmp	w8, #0x2d
  418cc4:	cinc	x8, x23, eq  // eq = none
  418cc8:	ldrb	w8, [x8]
  418ccc:	sub	w8, w8, #0x30
  418cd0:	cmp	w8, #0x9
  418cd4:	b.hi	418d40 <wcrtomb@plt+0x13f40>  // b.pmore
  418cd8:	mov	w2, #0xa                   	// #10
  418cdc:	mov	x0, x23
  418ce0:	mov	x1, x22
  418ce4:	bl	404220 <strtoimax@plt>
  418ce8:	cmp	x0, x21
  418cec:	b.lt	418cf8 <wcrtomb@plt+0x13ef8>  // b.tstop
  418cf0:	cmp	x0, x19
  418cf4:	b.le	418d4c <wcrtomb@plt+0x13f4c>
  418cf8:	mov	w8, #0x22                  	// #34
  418cfc:	cmp	x0, x21
  418d00:	str	w8, [x20]
  418d04:	csel	x0, x21, x19, lt  // lt = tstop
  418d08:	b	418d4c <wcrtomb@plt+0x13f4c>
  418d0c:	sub	w8, w8, #0x30
  418d10:	cmp	w8, #0x9
  418d14:	b.hi	418d40 <wcrtomb@plt+0x13f40>  // b.pmore
  418d18:	mov	w2, #0xa                   	// #10
  418d1c:	mov	x0, x23
  418d20:	mov	x1, x22
  418d24:	bl	404820 <strtoumax@plt>
  418d28:	cmp	x0, x19
  418d2c:	b.ls	418d4c <wcrtomb@plt+0x13f4c>  // b.plast
  418d30:	mov	w8, #0x22                  	// #34
  418d34:	str	w8, [x20]
  418d38:	mov	x0, x19
  418d3c:	b	418d4c <wcrtomb@plt+0x13f4c>
  418d40:	mov	x0, xzr
  418d44:	mov	w8, #0x16                  	// #22
  418d48:	str	w8, [x20]
  418d4c:	ldp	x20, x19, [sp, #48]
  418d50:	ldp	x22, x21, [sp, #32]
  418d54:	ldr	x23, [sp, #16]
  418d58:	ldp	x29, x30, [sp], #64
  418d5c:	ret
  418d60:	cbz	w0, 418e24 <wcrtomb@plt+0x14024>
  418d64:	mov	w10, #0x6667                	// #26215
  418d68:	movk	w10, #0x6666, lsl #16
  418d6c:	smull	x11, w0, w10
  418d70:	lsr	x12, x11, #63
  418d74:	asr	x11, x11, #34
  418d78:	mov	w9, #0x2e                  	// #46
  418d7c:	mov	x8, x1
  418d80:	add	w12, w11, w12
  418d84:	mov	w11, #0xa                   	// #10
  418d88:	msub	w12, w12, w11, w0
  418d8c:	strb	w9, [x8], #1
  418d90:	mov	w9, #0x9                   	// #9
  418d94:	cbnz	w12, 418dc4 <wcrtomb@plt+0x13fc4>
  418d98:	smull	x12, w0, w10
  418d9c:	lsr	x13, x12, #63
  418da0:	asr	x12, x12, #34
  418da4:	add	w0, w12, w13
  418da8:	smull	x12, w0, w10
  418dac:	lsr	x13, x12, #63
  418db0:	asr	x12, x12, #34
  418db4:	add	w12, w12, w13
  418db8:	msub	w12, w12, w11, w0
  418dbc:	sub	w9, w9, #0x1
  418dc0:	cbz	w12, 418d98 <wcrtomb@plt+0x13f98>
  418dc4:	strb	wzr, [x8, w9, sxtw]
  418dc8:	add	w10, w12, #0x30
  418dcc:	subs	w9, w9, #0x1
  418dd0:	strb	w10, [x8, w9, sxtw]
  418dd4:	b.eq	418e20 <wcrtomb@plt+0x14020>  // b.none
  418dd8:	sxtw	x10, w9
  418ddc:	mov	w8, #0x6667                	// #26215
  418de0:	movk	w8, #0x6666, lsl #16
  418de4:	add	x10, x1, x10
  418de8:	mov	w11, #0xa                   	// #10
  418dec:	smull	x12, w0, w8
  418df0:	lsr	x13, x12, #63
  418df4:	asr	x12, x12, #34
  418df8:	add	w0, w12, w13
  418dfc:	smull	x12, w0, w8
  418e00:	lsr	x13, x12, #63
  418e04:	lsr	x12, x12, #34
  418e08:	add	w12, w12, w13
  418e0c:	msub	w12, w12, w11, w0
  418e10:	add	w12, w12, #0x30
  418e14:	subs	w9, w9, #0x1
  418e18:	strb	w12, [x10], #-1
  418e1c:	b.ne	418dec <wcrtomb@plt+0x13fec>  // b.any
  418e20:	ret
  418e24:	strb	wzr, [x1]
  418e28:	ret
  418e2c:	stp	x29, x30, [sp, #-48]!
  418e30:	mov	w8, #0xc9ff                	// #51711
  418e34:	movk	w8, #0x3b9a, lsl #16
  418e38:	cmp	w1, w8
  418e3c:	csel	w9, wzr, w1, hi  // hi = pmore
  418e40:	cmp	w9, #0x0
  418e44:	cset	w10, ne  // ne = any
  418e48:	cmp	x0, #0x0
  418e4c:	cset	w11, lt  // lt = tstop
  418e50:	and	w12, w11, w10
  418e54:	add	x12, x0, x12
  418e58:	stp	x22, x21, [sp, #16]
  418e5c:	mov	x22, x0
  418e60:	sub	w8, w8, w9
  418e64:	cneg	x0, x12, lt  // lt = tstop
  418e68:	tst	w11, w10
  418e6c:	add	x1, x2, #0x1
  418e70:	stp	x20, x19, [sp, #32]
  418e74:	mov	x29, sp
  418e78:	mov	x19, x2
  418e7c:	csinc	w20, w9, w8, eq  // eq = none
  418e80:	bl	43401c <argp_parse@@Base+0x5360>
  418e84:	mov	x21, x0
  418e88:	tbz	x22, #63, 418e94 <wcrtomb@plt+0x14094>
  418e8c:	mov	w8, #0x2d                  	// #45
  418e90:	strb	w8, [x21, #-1]!
  418e94:	add	x1, x19, #0x15
  418e98:	mov	w0, w20
  418e9c:	bl	418d60 <wcrtomb@plt+0x13f60>
  418ea0:	mov	x0, x21
  418ea4:	ldp	x20, x19, [sp, #32]
  418ea8:	ldp	x22, x21, [sp, #16]
  418eac:	ldp	x29, x30, [sp], #48
  418eb0:	ret
  418eb4:	stp	x29, x30, [sp, #-64]!
  418eb8:	str	x23, [sp, #16]
  418ebc:	stp	x22, x21, [sp, #32]
  418ec0:	stp	x20, x19, [sp, #48]
  418ec4:	mov	x8, x0
  418ec8:	ldrb	w23, [x8], #1
  418ecc:	mov	x29, sp
  418ed0:	mov	w22, w2
  418ed4:	mov	x19, x1
  418ed8:	cmp	w23, #0x2d
  418edc:	csel	x8, x0, x8, ne  // ne = any
  418ee0:	ldrb	w8, [x8]
  418ee4:	mov	x20, x0
  418ee8:	sub	w21, w8, #0x30
  418eec:	bl	404ce0 <__errno_location@plt>
  418ef0:	cmp	w21, #0xa
  418ef4:	mov	x21, x0
  418ef8:	b.cs	418f1c <wcrtomb@plt+0x1411c>  // b.hs, b.nlast
  418efc:	cmp	w23, #0x2d
  418f00:	mov	w2, #0xa                   	// #10
  418f04:	mov	x0, x20
  418f08:	mov	x1, x19
  418f0c:	str	wzr, [x21]
  418f10:	b.ne	418f30 <wcrtomb@plt+0x14130>  // b.any
  418f14:	bl	404220 <strtoimax@plt>
  418f18:	b	418f44 <wcrtomb@plt+0x14144>
  418f1c:	mov	w8, #0x16                  	// #22
  418f20:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  418f24:	str	w8, [x21]
  418f28:	mov	x1, #0xffffffffffffffff    	// #-1
  418f2c:	b	418fcc <wcrtomb@plt+0x141cc>
  418f30:	bl	404820 <strtoumax@plt>
  418f34:	tbz	x0, #63, 418f44 <wcrtomb@plt+0x14144>
  418f38:	mov	w8, #0x22                  	// #34
  418f3c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  418f40:	str	w8, [x21]
  418f44:	ldr	x20, [x19]
  418f48:	tbz	w22, #0, 418fb8 <wcrtomb@plt+0x141b8>
  418f4c:	ldrb	w8, [x20]
  418f50:	cmp	w8, #0x2e
  418f54:	b.ne	418fb8 <wcrtomb@plt+0x141b8>  // b.any
  418f58:	ldrb	w12, [x20, #1]!
  418f5c:	sub	w13, w12, #0x30
  418f60:	cmp	w13, #0x9
  418f64:	b.hi	418fe4 <wcrtomb@plt+0x141e4>  // b.pmore
  418f68:	mov	w9, wzr
  418f6c:	mov	w10, wzr
  418f70:	mov	w8, wzr
  418f74:	mov	w11, #0xa                   	// #10
  418f78:	cmp	w10, #0x8
  418f7c:	b.gt	418f8c <wcrtomb@plt+0x1418c>
  418f80:	add	w10, w10, #0x1
  418f84:	madd	w8, w8, w11, w13
  418f88:	b	418f9c <wcrtomb@plt+0x1419c>
  418f8c:	and	w12, w12, #0xff
  418f90:	cmp	w12, #0x30
  418f94:	cset	w12, ne  // ne = any
  418f98:	orr	w9, w9, w12
  418f9c:	ldrb	w12, [x20, #1]!
  418fa0:	sub	w13, w12, #0x30
  418fa4:	cmp	w13, #0xa
  418fa8:	b.cc	418f78 <wcrtomb@plt+0x14178>  // b.lo, b.ul, b.last
  418fac:	cmp	w10, #0x8
  418fb0:	b.le	418ff0 <wcrtomb@plt+0x141f0>
  418fb4:	b	419008 <wcrtomb@plt+0x14208>
  418fb8:	mov	w8, wzr
  418fbc:	ldr	w9, [x21]
  418fc0:	cmp	w9, #0x22
  418fc4:	csinv	w8, w8, wzr, ne  // ne = any
  418fc8:	sxtw	x1, w8
  418fcc:	str	x20, [x19]
  418fd0:	ldp	x20, x19, [sp, #48]
  418fd4:	ldp	x22, x21, [sp, #32]
  418fd8:	ldr	x23, [sp, #16]
  418fdc:	ldp	x29, x30, [sp], #64
  418fe0:	ret
  418fe4:	mov	w9, wzr
  418fe8:	mov	w10, wzr
  418fec:	mov	w8, wzr
  418ff0:	sub	w10, w10, #0x1
  418ff4:	add	w8, w8, w8, lsl #2
  418ff8:	add	w10, w10, #0x1
  418ffc:	cmp	w10, #0x8
  419000:	lsl	w8, w8, #1
  419004:	b.lt	418ff4 <wcrtomb@plt+0x141f4>  // b.tstop
  419008:	cmp	w23, #0x2d
  41900c:	b.ne	418fbc <wcrtomb@plt+0x141bc>  // b.any
  419010:	and	w9, w9, #0x1
  419014:	adds	w8, w8, w9
  419018:	b.eq	418fbc <wcrtomb@plt+0x141bc>  // b.none
  41901c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  419020:	cmp	x0, x9
  419024:	b.ne	419034 <wcrtomb@plt+0x14234>  // b.any
  419028:	mov	w8, #0xffffffff            	// #-1
  41902c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  419030:	b	418fbc <wcrtomb@plt+0x141bc>
  419034:	mov	w9, #0xca00                	// #51712
  419038:	movk	w9, #0x3b9a, lsl #16
  41903c:	sub	x0, x0, #0x1
  419040:	sub	w8, w9, w8
  419044:	b	418fbc <wcrtomb@plt+0x141bc>
  419048:	ldrb	w8, [x0]
  41904c:	cmp	w8, #0x2f
  419050:	b.ne	419094 <wcrtomb@plt+0x14294>  // b.any
  419054:	mov	w8, #0x2                   	// #2
  419058:	mov	x10, x0
  41905c:	ldrb	w9, [x0, #1]!
  419060:	cmp	w9, #0x2f
  419064:	b.eq	419058 <wcrtomb@plt+0x14258>  // b.none
  419068:	cmp	w9, #0x2e
  41906c:	b.ne	41908c <wcrtomb@plt+0x1428c>  // b.any
  419070:	ldrb	w11, [x10, #2]
  419074:	cmp	w11, #0x2e
  419078:	cinc	x11, x8, eq  // eq = none
  41907c:	add	x0, x10, x11
  419080:	ldrb	w10, [x0]
  419084:	cmp	w10, #0x2f
  419088:	b.eq	419058 <wcrtomb@plt+0x14258>  // b.none
  41908c:	cmp	w9, #0x0
  419090:	b	4190d0 <wcrtomb@plt+0x142d0>
  419094:	and	w8, w8, #0xff
  419098:	cmp	w8, #0x2e
  41909c:	b.ne	4190c0 <wcrtomb@plt+0x142c0>  // b.any
  4190a0:	ldrb	w8, [x0, #1]
  4190a4:	cmp	w8, #0x2f
  4190a8:	b.ne	4190cc <wcrtomb@plt+0x142cc>  // b.any
  4190ac:	add	x0, x0, #0x1
  4190b0:	ldrb	w8, [x0, #1]!
  4190b4:	cmp	w8, #0x2f
  4190b8:	b.eq	4190b0 <wcrtomb@plt+0x142b0>  // b.none
  4190bc:	b	419094 <wcrtomb@plt+0x14294>
  4190c0:	cbnz	w8, 4190d8 <wcrtomb@plt+0x142d8>
  4190c4:	mov	w0, #0x1                   	// #1
  4190c8:	ret
  4190cc:	cmp	w8, #0x0
  4190d0:	cset	w0, eq  // eq = none
  4190d4:	ret
  4190d8:	mov	w0, wzr
  4190dc:	ret
  4190e0:	stp	x29, x30, [sp, #-80]!
  4190e4:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  4190e8:	ldr	w8, [x8, #1944]
  4190ec:	stp	x20, x19, [sp, #64]
  4190f0:	mov	x19, x0
  4190f4:	stp	x22, x21, [sp, #48]
  4190f8:	mov	w21, w1
  4190fc:	mov	w0, w8
  419100:	mov	x1, x19
  419104:	mov	w2, wzr
  419108:	stp	x26, x25, [sp, #16]
  41910c:	stp	x24, x23, [sp, #32]
  419110:	mov	x29, sp
  419114:	bl	404300 <unlinkat@plt>
  419118:	cbz	w0, 419160 <wcrtomb@plt+0x14360>
  41911c:	bl	404ce0 <__errno_location@plt>
  419120:	ldr	w8, [x0]
  419124:	mov	x20, x0
  419128:	cmp	w8, #0x15
  41912c:	b.eq	419138 <wcrtomb@plt+0x14338>  // b.none
  419130:	cmp	w8, #0x1
  419134:	b.ne	41920c <wcrtomb@plt+0x1440c>  // b.any
  419138:	mov	x0, x19
  41913c:	bl	419244 <wcrtomb@plt+0x14444>
  419140:	cbz	w0, 419160 <wcrtomb@plt+0x14360>
  419144:	ldr	w8, [x20]
  419148:	cmp	w8, #0x13
  41914c:	b.gt	419168 <wcrtomb@plt+0x14368>
  419150:	cbz	w8, 419178 <wcrtomb@plt+0x14378>
  419154:	cmp	w8, #0x11
  419158:	b.eq	419178 <wcrtomb@plt+0x14378>  // b.none
  41915c:	b	41920c <wcrtomb@plt+0x1440c>
  419160:	mov	w0, #0x1                   	// #1
  419164:	b	419210 <wcrtomb@plt+0x14410>
  419168:	cmp	w8, #0x14
  41916c:	b.eq	41920c <wcrtomb@plt+0x1440c>  // b.none
  419170:	cmp	w8, #0x27
  419174:	b.ne	41920c <wcrtomb@plt+0x1440c>  // b.any
  419178:	cmp	w21, #0x2
  41917c:	b.eq	419228 <wcrtomb@plt+0x14428>  // b.none
  419180:	cmp	w21, #0x1
  419184:	b.ne	41920c <wcrtomb@plt+0x1440c>  // b.any
  419188:	mov	x0, x19
  41918c:	mov	w1, wzr
  419190:	bl	4192a0 <wcrtomb@plt+0x144a0>
  419194:	cbz	x0, 419210 <wcrtomb@plt+0x14410>
  419198:	mov	x21, x0
  41919c:	bl	404170 <strlen@plt>
  4191a0:	cbz	x0, 4191f0 <wcrtomb@plt+0x143f0>
  4191a4:	mov	x22, x0
  4191a8:	mov	x23, x21
  4191ac:	mov	x0, x19
  4191b0:	mov	x1, x23
  4191b4:	bl	41bf0c <wcrtomb@plt+0x1710c>
  4191b8:	mov	w1, #0x1                   	// #1
  4191bc:	mov	x24, x0
  4191c0:	bl	4190e0 <wcrtomb@plt+0x142e0>
  4191c4:	ldr	w26, [x20]
  4191c8:	mov	w25, w0
  4191cc:	mov	x0, x24
  4191d0:	bl	4049b0 <free@plt>
  4191d4:	cbz	w25, 419230 <wcrtomb@plt+0x14430>
  4191d8:	add	x8, x22, x23
  4191dc:	add	x23, x8, #0x1
  4191e0:	mov	x0, x23
  4191e4:	bl	404170 <strlen@plt>
  4191e8:	mov	x22, x0
  4191ec:	cbnz	x0, 4191ac <wcrtomb@plt+0x143ac>
  4191f0:	mov	x0, x21
  4191f4:	bl	4049b0 <free@plt>
  4191f8:	mov	x0, x19
  4191fc:	bl	419244 <wcrtomb@plt+0x14444>
  419200:	cmp	w0, #0x0
  419204:	cset	w0, eq  // eq = none
  419208:	b	419210 <wcrtomb@plt+0x14410>
  41920c:	mov	w0, wzr
  419210:	ldp	x20, x19, [sp, #64]
  419214:	ldp	x22, x21, [sp, #48]
  419218:	ldp	x24, x23, [sp, #32]
  41921c:	ldp	x26, x25, [sp, #16]
  419220:	ldp	x29, x30, [sp], #80
  419224:	ret
  419228:	mov	w0, #0xffffffff            	// #-1
  41922c:	b	419210 <wcrtomb@plt+0x14410>
  419230:	mov	x0, x21
  419234:	bl	4049b0 <free@plt>
  419238:	mov	w0, wzr
  41923c:	str	w26, [x20]
  419240:	b	419210 <wcrtomb@plt+0x14410>
  419244:	stp	x29, x30, [sp, #-32]!
  419248:	str	x19, [sp, #16]
  41924c:	mov	x29, sp
  419250:	mov	x19, x0
  419254:	bl	419048 <wcrtomb@plt+0x14248>
  419258:	tbz	w0, #0, 419268 <wcrtomb@plt+0x14468>
  41925c:	bl	404ce0 <__errno_location@plt>
  419260:	str	wzr, [x0]
  419264:	b	419280 <wcrtomb@plt+0x14480>
  419268:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  41926c:	ldr	w0, [x8, #1944]
  419270:	mov	w2, #0x200                 	// #512
  419274:	mov	x1, x19
  419278:	bl	404300 <unlinkat@plt>
  41927c:	cbz	w0, 419288 <wcrtomb@plt+0x14488>
  419280:	mov	w0, #0xffffffff            	// #-1
  419284:	b	419294 <wcrtomb@plt+0x14494>
  419288:	mov	x0, x19
  41928c:	bl	40deb0 <wcrtomb@plt+0x90b0>
  419290:	mov	w0, wzr
  419294:	ldr	x19, [sp, #16]
  419298:	ldp	x29, x30, [sp], #32
  41929c:	ret
  4192a0:	stp	x29, x30, [sp, #-48]!
  4192a4:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  4192a8:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  4192ac:	ldr	w9, [x9, #196]
  4192b0:	stp	x20, x19, [sp, #32]
  4192b4:	mov	x19, x0
  4192b8:	ldr	w0, [x8, #1944]
  4192bc:	str	x21, [sp, #16]
  4192c0:	mov	w21, w1
  4192c4:	orr	w2, w9, #0x4000
  4192c8:	mov	x1, x19
  4192cc:	mov	x29, sp
  4192d0:	bl	404cc0 <openat@plt>
  4192d4:	tbnz	w0, #31, 419314 <wcrtomb@plt+0x14514>
  4192d8:	mov	w20, w0
  4192dc:	bl	404800 <fdopendir@plt>
  4192e0:	cbz	x0, 419338 <wcrtomb@plt+0x14538>
  4192e4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4192e8:	ldr	w1, [x8, #8]
  4192ec:	mov	x21, x0
  4192f0:	bl	439f68 <argp_parse@@Base+0xb2ac>
  4192f4:	mov	x20, x0
  4192f8:	cbnz	x0, 419304 <wcrtomb@plt+0x14504>
  4192fc:	mov	x0, x19
  419300:	bl	4264bc <wcrtomb@plt+0x216bc>
  419304:	mov	x0, x21
  419308:	bl	404770 <closedir@plt>
  41930c:	cbnz	w0, 419350 <wcrtomb@plt+0x14550>
  419310:	b	419358 <wcrtomb@plt+0x14558>
  419314:	cbnz	w21, 419328 <wcrtomb@plt+0x14528>
  419318:	bl	404ce0 <__errno_location@plt>
  41931c:	ldr	w8, [x0]
  419320:	cmp	w8, #0x2
  419324:	b.eq	419330 <wcrtomb@plt+0x14530>  // b.none
  419328:	mov	x0, x19
  41932c:	bl	426218 <wcrtomb@plt+0x21418>
  419330:	mov	x20, xzr
  419334:	b	419358 <wcrtomb@plt+0x14558>
  419338:	mov	x0, x19
  41933c:	bl	4264bc <wcrtomb@plt+0x216bc>
  419340:	mov	w0, w20
  419344:	bl	4047a0 <close@plt>
  419348:	mov	x20, xzr
  41934c:	cbz	w0, 419358 <wcrtomb@plt+0x14558>
  419350:	mov	x0, x19
  419354:	bl	4264bc <wcrtomb@plt+0x216bc>
  419358:	mov	x0, x20
  41935c:	ldp	x20, x19, [sp, #32]
  419360:	ldr	x21, [sp, #16]
  419364:	ldp	x29, x30, [sp], #48
  419368:	ret
  41936c:	sub	sp, sp, #0xb0
  419370:	stp	x20, x19, [sp, #160]
  419374:	mov	x19, x0
  419378:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41937c:	mov	w20, w1
  419380:	add	x0, x0, #0x818
  419384:	mov	x1, x19
  419388:	stp	x29, x30, [sp, #128]
  41938c:	stp	x22, x21, [sp, #144]
  419390:	add	x29, sp, #0x80
  419394:	bl	4186dc <wcrtomb@plt+0x138dc>
  419398:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41939c:	ldr	x0, [x22, #2080]
  4193a0:	bl	4049b0 <free@plt>
  4193a4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4193a8:	ldrb	w8, [x8, #504]
  4193ac:	str	xzr, [x22, #2080]
  4193b0:	cbnz	w8, 4193e4 <wcrtomb@plt+0x145e4>
  4193b4:	tbz	w20, #0, 4193e4 <wcrtomb@plt+0x145e4>
  4193b8:	mov	w1, #0x3a                  	// #58
  4193bc:	mov	x0, x19
  4193c0:	bl	404a50 <strchr@plt>
  4193c4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4193c8:	subs	x2, x0, x19
  4193cc:	str	x0, [x8, #512]
  4193d0:	b.ls	4193e4 <wcrtomb@plt+0x145e4>  // b.plast
  4193d4:	mov	w1, #0x2f                  	// #47
  4193d8:	mov	x0, x19
  4193dc:	bl	404b50 <memchr@plt>
  4193e0:	cbz	x0, 419568 <wcrtomb@plt+0x14768>
  4193e4:	adrp	x21, 467000 <_obstack_memory_used@@Base+0x2b808>
  4193e8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4193ec:	ldr	w0, [x21, #1944]
  4193f0:	ldr	w3, [x8, #48]
  4193f4:	mov	x2, sp
  4193f8:	mov	x1, x19
  4193fc:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  419400:	cbz	w0, 419424 <wcrtomb@plt+0x14624>
  419404:	bl	404ce0 <__errno_location@plt>
  419408:	ldr	w8, [x0]
  41940c:	cmp	w8, #0x2
  419410:	b.eq	419568 <wcrtomb@plt+0x14768>  // b.none
  419414:	mov	x0, x19
  419418:	bl	4266e4 <wcrtomb@plt+0x218e4>
  41941c:	mov	w19, wzr
  419420:	b	41956c <wcrtomb@plt+0x1476c>
  419424:	ldr	w8, [sp, #16]
  419428:	and	w8, w8, #0xf000
  41942c:	cmp	w8, #0x4, lsl #12
  419430:	b.eq	419568 <wcrtomb@plt+0x14768>  // b.none
  419434:	tbz	w20, #0, 419444 <wcrtomb@plt+0x14644>
  419438:	orr	w8, w8, #0x4000
  41943c:	cmp	w8, #0x6, lsl #12
  419440:	b.eq	419568 <wcrtomb@plt+0x14768>  // b.none
  419444:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  419448:	ldr	w0, [x21, #1944]
  41944c:	ldr	w2, [x8, #216]
  419450:	mov	x1, x19
  419454:	bl	43024c <argp_parse@@Base+0x1590>
  419458:	str	x0, [x22, #2080]
  41945c:	cbz	x0, 419584 <wcrtomb@plt+0x14784>
  419460:	mov	x3, x0
  419464:	ldr	w0, [x21, #1944]
  419468:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41946c:	ldr	x1, [x21, #2072]
  419470:	mov	w2, w0
  419474:	bl	404a00 <renameat@plt>
  419478:	cbz	w0, 419500 <wcrtomb@plt+0x14700>
  41947c:	bl	404ce0 <__errno_location@plt>
  419480:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  419484:	ldr	x8, [x8, #496]
  419488:	ldr	w19, [x0]
  41948c:	cbz	x8, 419494 <wcrtomb@plt+0x14694>
  419490:	blr	x8
  419494:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  419498:	add	x1, x1, #0xe63
  41949c:	mov	w2, #0x5                   	// #5
  4194a0:	mov	x0, xzr
  4194a4:	bl	404bd0 <dcgettext@plt>
  4194a8:	ldr	x8, [x21, #2072]
  4194ac:	mov	x20, x0
  4194b0:	mov	x0, x8
  4194b4:	bl	4398cc <argp_parse@@Base+0xac10>
  4194b8:	ldr	x1, [x22, #2080]
  4194bc:	mov	x21, x0
  4194c0:	mov	w0, #0x1                   	// #1
  4194c4:	bl	439ab0 <argp_parse@@Base+0xadf4>
  4194c8:	mov	x4, x0
  4194cc:	mov	w0, wzr
  4194d0:	mov	w1, w19
  4194d4:	mov	x2, x20
  4194d8:	mov	x3, x21
  4194dc:	bl	4041d0 <error@plt>
  4194e0:	ldr	x0, [x22, #2080]
  4194e4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4194e8:	mov	w9, #0x2                   	// #2
  4194ec:	str	w9, [x8, #2944]
  4194f0:	bl	4049b0 <free@plt>
  4194f4:	mov	w19, wzr
  4194f8:	str	xzr, [x22, #2080]
  4194fc:	b	41956c <wcrtomb@plt+0x1476c>
  419500:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  419504:	ldr	w8, [x8, #132]
  419508:	cbz	w8, 419568 <wcrtomb@plt+0x14768>
  41950c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419510:	ldr	x20, [x8, #3416]
  419514:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  419518:	add	x1, x1, #0xe50
  41951c:	mov	w2, #0x5                   	// #5
  419520:	mov	x0, xzr
  419524:	bl	404bd0 <dcgettext@plt>
  419528:	ldr	x1, [x21, #2072]
  41952c:	mov	x21, x0
  419530:	mov	w0, wzr
  419534:	bl	439ab0 <argp_parse@@Base+0xadf4>
  419538:	ldr	x1, [x22, #2080]
  41953c:	mov	x22, x0
  419540:	mov	w0, #0x1                   	// #1
  419544:	mov	w19, #0x1                   	// #1
  419548:	bl	439ab0 <argp_parse@@Base+0xadf4>
  41954c:	mov	x4, x0
  419550:	mov	w1, #0x1                   	// #1
  419554:	mov	x0, x20
  419558:	mov	x2, x21
  41955c:	mov	x3, x22
  419560:	bl	4048f0 <__fprintf_chk@plt>
  419564:	b	41956c <wcrtomb@plt+0x1476c>
  419568:	mov	w19, #0x1                   	// #1
  41956c:	mov	w0, w19
  419570:	ldp	x20, x19, [sp, #160]
  419574:	ldp	x22, x21, [sp, #144]
  419578:	ldp	x29, x30, [sp, #128]
  41957c:	add	sp, sp, #0xb0
  419580:	ret
  419584:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  419588:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  41958c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  419590:	ldr	w8, [x8, #1944]
  419594:	ldr	w3, [x9, #48]
  419598:	mov	x2, x1
  41959c:	mov	x1, x0
  4195a0:	mov	w0, w8
  4195a4:	b	44b948 <_obstack_memory_used@@Base+0x10150>
  4195a8:	stp	x29, x30, [sp, #-64]!
  4195ac:	stp	x22, x21, [sp, #32]
  4195b0:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4195b4:	ldr	x1, [x22, #2080]
  4195b8:	str	x23, [sp, #16]
  4195bc:	stp	x20, x19, [sp, #48]
  4195c0:	mov	x29, sp
  4195c4:	cbz	x1, 4196c0 <wcrtomb@plt+0x148c0>
  4195c8:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  4195cc:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4195d0:	ldr	w0, [x8, #1944]
  4195d4:	ldr	x3, [x23, #2072]
  4195d8:	mov	w2, w0
  4195dc:	bl	404a00 <renameat@plt>
  4195e0:	cbz	w0, 419654 <wcrtomb@plt+0x14854>
  4195e4:	bl	404ce0 <__errno_location@plt>
  4195e8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4195ec:	ldr	x8, [x8, #496]
  4195f0:	ldr	w19, [x0]
  4195f4:	cbz	x8, 4195fc <wcrtomb@plt+0x147fc>
  4195f8:	blr	x8
  4195fc:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  419600:	add	x1, x1, #0xe63
  419604:	mov	w2, #0x5                   	// #5
  419608:	mov	x0, xzr
  41960c:	bl	404bd0 <dcgettext@plt>
  419610:	ldr	x8, [x22, #2080]
  419614:	mov	x20, x0
  419618:	mov	x0, x8
  41961c:	bl	4398cc <argp_parse@@Base+0xac10>
  419620:	ldr	x1, [x23, #2072]
  419624:	mov	x21, x0
  419628:	mov	w0, #0x1                   	// #1
  41962c:	bl	439ab0 <argp_parse@@Base+0xadf4>
  419630:	mov	x4, x0
  419634:	mov	w0, wzr
  419638:	mov	w1, w19
  41963c:	mov	x2, x20
  419640:	mov	x3, x21
  419644:	bl	4041d0 <error@plt>
  419648:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41964c:	mov	w9, #0x2                   	// #2
  419650:	str	w9, [x8, #2944]
  419654:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  419658:	ldr	w8, [x8, #132]
  41965c:	cbz	w8, 4196b4 <wcrtomb@plt+0x148b4>
  419660:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419664:	ldr	x19, [x8, #3416]
  419668:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  41966c:	add	x1, x1, #0xe7b
  419670:	mov	w2, #0x5                   	// #5
  419674:	mov	x0, xzr
  419678:	bl	404bd0 <dcgettext@plt>
  41967c:	ldr	x1, [x22, #2080]
  419680:	mov	x20, x0
  419684:	mov	w0, wzr
  419688:	bl	439ab0 <argp_parse@@Base+0xadf4>
  41968c:	ldr	x1, [x23, #2072]
  419690:	mov	x21, x0
  419694:	mov	w0, #0x1                   	// #1
  419698:	bl	439ab0 <argp_parse@@Base+0xadf4>
  41969c:	mov	x4, x0
  4196a0:	mov	w1, #0x1                   	// #1
  4196a4:	mov	x0, x19
  4196a8:	mov	x2, x20
  4196ac:	mov	x3, x21
  4196b0:	bl	4048f0 <__fprintf_chk@plt>
  4196b4:	ldr	x0, [x22, #2080]
  4196b8:	bl	4049b0 <free@plt>
  4196bc:	str	xzr, [x22, #2080]
  4196c0:	ldp	x20, x19, [sp, #48]
  4196c4:	ldp	x22, x21, [sp, #32]
  4196c8:	ldr	x23, [sp, #16]
  4196cc:	ldp	x29, x30, [sp], #64
  4196d0:	ret
  4196d4:	stp	x29, x30, [sp, #-48]!
  4196d8:	str	x21, [sp, #16]
  4196dc:	stp	x20, x19, [sp, #32]
  4196e0:	mov	x29, sp
  4196e4:	mov	x19, x2
  4196e8:	mov	x20, x1
  4196ec:	mov	w21, w0
  4196f0:	bl	439dd4 <argp_parse@@Base+0xb118>
  4196f4:	cmn	x0, #0x1
  4196f8:	b.ne	419764 <wcrtomb@plt+0x14964>  // b.any
  4196fc:	bl	404ce0 <__errno_location@plt>
  419700:	ldr	w8, [x0]
  419704:	cmp	w8, #0xb
  419708:	b.ne	419760 <wcrtomb@plt+0x14960>  // b.any
  41970c:	mov	w1, #0x3                   	// #3
  419710:	mov	w0, w21
  419714:	bl	43b18c <argp_parse@@Base+0xc4d0>
  419718:	mov	w8, #0x800                 	// #2048
  41971c:	movk	w8, #0x8000, lsl #16
  419720:	and	w8, w0, w8
  419724:	cmp	w8, #0x800
  419728:	b.ne	419760 <wcrtomb@plt+0x14960>  // b.any
  41972c:	and	w2, w0, #0xfffff7ff
  419730:	mov	w1, #0x4                   	// #4
  419734:	mov	w0, w21
  419738:	bl	43b18c <argp_parse@@Base+0xc4d0>
  41973c:	cmn	w0, #0x1
  419740:	b.eq	419760 <wcrtomb@plt+0x14960>  // b.none
  419744:	mov	w0, w21
  419748:	mov	x1, x20
  41974c:	mov	x2, x19
  419750:	ldp	x20, x19, [sp, #32]
  419754:	ldr	x21, [sp, #16]
  419758:	ldp	x29, x30, [sp], #48
  41975c:	b	439dd4 <argp_parse@@Base+0xb118>
  419760:	mov	x0, #0xffffffffffffffff    	// #-1
  419764:	ldp	x20, x19, [sp, #32]
  419768:	ldr	x21, [sp, #16]
  41976c:	ldp	x29, x30, [sp], #48
  419770:	ret
  419774:	stp	x29, x30, [sp, #-48]!
  419778:	stp	x22, x21, [sp, #16]
  41977c:	stp	x20, x19, [sp, #32]
  419780:	mov	x29, sp
  419784:	mov	x21, x2
  419788:	mov	x22, x1
  41978c:	mov	w20, w0
  419790:	bl	43273c <argp_parse@@Base+0x3a80>
  419794:	mov	x19, x0
  419798:	cmp	x0, x21
  41979c:	b.cs	4197fc <wcrtomb@plt+0x149fc>  // b.hs, b.nlast
  4197a0:	bl	404ce0 <__errno_location@plt>
  4197a4:	ldr	w8, [x0]
  4197a8:	cmp	w8, #0xb
  4197ac:	b.ne	4197fc <wcrtomb@plt+0x149fc>  // b.any
  4197b0:	mov	w1, #0x3                   	// #3
  4197b4:	mov	w0, w20
  4197b8:	bl	43b18c <argp_parse@@Base+0xc4d0>
  4197bc:	mov	w8, #0x800                 	// #2048
  4197c0:	movk	w8, #0x8000, lsl #16
  4197c4:	and	w8, w0, w8
  4197c8:	cmp	w8, #0x800
  4197cc:	b.ne	4197fc <wcrtomb@plt+0x149fc>  // b.any
  4197d0:	and	w2, w0, #0xfffff7ff
  4197d4:	mov	w1, #0x4                   	// #4
  4197d8:	mov	w0, w20
  4197dc:	bl	43b18c <argp_parse@@Base+0xc4d0>
  4197e0:	cmn	w0, #0x1
  4197e4:	b.eq	4197fc <wcrtomb@plt+0x149fc>  // b.none
  4197e8:	add	x1, x22, x19
  4197ec:	sub	x2, x21, x19
  4197f0:	mov	w0, w20
  4197f4:	bl	43273c <argp_parse@@Base+0x3a80>
  4197f8:	add	x19, x0, x19
  4197fc:	mov	x0, x19
  419800:	ldp	x20, x19, [sp, #32]
  419804:	ldp	x22, x21, [sp, #16]
  419808:	ldp	x29, x30, [sp], #48
  41980c:	ret
  419810:	sub	sp, sp, #0x30
  419814:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  419818:	ldr	w8, [x8, #48]
  41981c:	stp	x3, x4, [sp]
  419820:	mov	w9, #0x3ffffffe            	// #1073741822
  419824:	mov	x3, sp
  419828:	mov	w4, w8
  41982c:	stp	x29, x30, [sp, #32]
  419830:	add	x29, sp, #0x20
  419834:	str	x9, [sp, #24]
  419838:	bl	431194 <argp_parse@@Base+0x24d8>
  41983c:	ldp	x29, x30, [sp, #32]
  419840:	add	sp, sp, #0x30
  419844:	ret
  419848:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41984c:	ldr	x8, [x8, #2088]
  419850:	sub	w9, w8, #0x1
  419854:	cmp	x8, #0x0
  419858:	csel	w0, wzr, w9, eq  // eq = none
  41985c:	ret
  419860:	stp	x29, x30, [sp, #-64]!
  419864:	stp	x22, x21, [sp, #32]
  419868:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41986c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419870:	ldr	x8, [x22, #2088]
  419874:	ldr	x10, [x9, #2096]
  419878:	str	x23, [sp, #16]
  41987c:	stp	x20, x19, [sp, #48]
  419880:	mov	x19, x0
  419884:	cmp	x8, x10
  419888:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41988c:	mov	x29, sp
  419890:	b.ne	419930 <wcrtomb@plt+0x14b30>  // b.any
  419894:	cbnz	x8, 4198a0 <wcrtomb@plt+0x14aa0>
  419898:	mov	w8, #0x2                   	// #2
  41989c:	str	x8, [x9, #2096]
  4198a0:	ldr	x0, [x23, #2104]
  4198a4:	cbz	x0, 4198cc <wcrtomb@plt+0x14acc>
  4198a8:	mov	x10, #0xe38e                	// #58254
  4198ac:	movk	x10, #0x8e38, lsl #16
  4198b0:	movk	x10, #0x38e3, lsl #32
  4198b4:	movk	x10, #0x38e, lsl #48
  4198b8:	cmp	x8, x10
  4198bc:	b.cs	419a50 <wcrtomb@plt+0x14c50>  // b.hs, b.nlast
  4198c0:	add	x8, x8, x8, lsr #1
  4198c4:	add	x8, x8, #0x1
  4198c8:	b	4198e0 <wcrtomb@plt+0x14ae0>
  4198cc:	mov	x10, #0x5555555555555555    	// #6148914691236517205
  4198d0:	movk	x10, #0x5556
  4198d4:	movk	x10, #0x555, lsl #48
  4198d8:	cmp	x8, x10
  4198dc:	b.cs	419a50 <wcrtomb@plt+0x14c50>  // b.hs, b.nlast
  4198e0:	str	x8, [x9, #2096]
  4198e4:	add	x8, x8, x8, lsl #1
  4198e8:	lsl	x1, x8, #3
  4198ec:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  4198f0:	ldr	x8, [x22, #2088]
  4198f4:	str	x0, [x23, #2104]
  4198f8:	cbnz	x8, 419930 <wcrtomb@plt+0x14b30>
  4198fc:	adrp	x8, 44f000 <_obstack_memory_used@@Base+0x13808>
  419900:	add	x8, x8, #0x94a
  419904:	str	x8, [x0]
  419908:	bl	43a9e0 <argp_parse@@Base+0xbd24>
  41990c:	ldr	x8, [x23, #2104]
  419910:	ldr	x9, [x22, #2088]
  419914:	mov	w10, #0x18                  	// #24
  419918:	mov	w11, #0xffffff9c            	// #-100
  41991c:	madd	x10, x9, x10, x8
  419920:	add	x8, x9, #0x1
  419924:	str	x0, [x10, #8]
  419928:	str	w11, [x10, #16]
  41992c:	str	x8, [x22, #2088]
  419930:	ldrb	w9, [x19]
  419934:	cmp	w9, #0x2f
  419938:	b.eq	419a00 <wcrtomb@plt+0x14c00>  // b.none
  41993c:	cmp	w9, #0x2e
  419940:	b.ne	41996c <wcrtomb@plt+0x14b6c>  // b.any
  419944:	ldrb	w9, [x19, #1]
  419948:	cmp	w9, #0x2f
  41994c:	b.ne	419968 <wcrtomb@plt+0x14b68>  // b.any
  419950:	add	x19, x19, #0x1
  419954:	ldrb	w9, [x19, #1]!
  419958:	cmp	w9, #0x2f
  41995c:	b.eq	419954 <wcrtomb@plt+0x14b54>  // b.none
  419960:	cmp	w9, #0x2e
  419964:	b.eq	419944 <wcrtomb@plt+0x14b44>  // b.none
  419968:	cbz	w9, 419a48 <wcrtomb@plt+0x14c48>
  41996c:	ldr	x9, [x23, #2104]
  419970:	mov	w10, #0x18                  	// #24
  419974:	madd	x8, x8, x10, x9
  419978:	ldur	x0, [x8, #-16]
  41997c:	cbz	x0, 419a10 <wcrtomb@plt+0x14c10>
  419980:	bl	419a54 <wcrtomb@plt+0x14c54>
  419984:	ldr	x8, [x0]
  419988:	ldr	x9, [x0, #16]
  41998c:	mov	x20, x0
  419990:	add	x8, x9, x8
  419994:	ldurb	w8, [x8, #-1]
  419998:	cmp	w8, #0x2f
  41999c:	b.eq	4199bc <wcrtomb@plt+0x14bbc>  // b.none
  4199a0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x2b808>
  4199a4:	add	x1, x1, #0x79c
  4199a8:	mov	x0, x20
  4199ac:	bl	419ee8 <wcrtomb@plt+0x150e8>
  4199b0:	ldr	x8, [x20, #16]
  4199b4:	add	x8, x8, #0x1
  4199b8:	str	x8, [x20, #16]
  4199bc:	mov	x0, x20
  4199c0:	mov	x1, x19
  4199c4:	bl	419ee8 <wcrtomb@plt+0x150e8>
  4199c8:	mov	x0, x19
  4199cc:	bl	404170 <strlen@plt>
  4199d0:	ldr	x8, [x20, #16]
  4199d4:	ldr	x21, [x20]
  4199d8:	add	x8, x8, x0
  4199dc:	str	x8, [x20, #16]
  4199e0:	add	x9, x8, x21
  4199e4:	ldurb	w9, [x9, #-1]
  4199e8:	cmp	w9, #0x2f
  4199ec:	b.ne	4199f4 <wcrtomb@plt+0x14bf4>  // b.any
  4199f0:	strb	wzr, [x21, x8]
  4199f4:	mov	x0, x20
  4199f8:	bl	4049b0 <free@plt>
  4199fc:	b	419a14 <wcrtomb@plt+0x14c14>
  419a00:	mov	x0, x19
  419a04:	bl	43a998 <argp_parse@@Base+0xbcdc>
  419a08:	mov	x21, x0
  419a0c:	b	419a14 <wcrtomb@plt+0x14c14>
  419a10:	mov	x21, xzr
  419a14:	ldr	x8, [x23, #2104]
  419a18:	ldr	x0, [x22, #2088]
  419a1c:	mov	w9, #0x18                  	// #24
  419a20:	madd	x8, x0, x9, x8
  419a24:	add	x9, x0, #0x1
  419a28:	stp	x19, x21, [x8]
  419a2c:	str	wzr, [x8, #16]
  419a30:	str	x9, [x22, #2088]
  419a34:	ldp	x20, x19, [sp, #48]
  419a38:	ldp	x22, x21, [sp, #32]
  419a3c:	ldr	x23, [sp, #16]
  419a40:	ldp	x29, x30, [sp], #64
  419a44:	ret
  419a48:	sub	x0, x8, #0x1
  419a4c:	b	419a34 <wcrtomb@plt+0x14c34>
  419a50:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  419a54:	stp	x29, x30, [sp, #-48]!
  419a58:	str	x21, [sp, #16]
  419a5c:	mov	x21, x0
  419a60:	mov	w0, #0x18                  	// #24
  419a64:	stp	x20, x19, [sp, #32]
  419a68:	mov	x29, sp
  419a6c:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  419a70:	mov	x19, x0
  419a74:	mov	x0, x21
  419a78:	bl	404170 <strlen@plt>
  419a7c:	add	x0, x0, #0x2
  419a80:	str	x0, [x19, #8]
  419a84:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  419a88:	mov	x1, x21
  419a8c:	mov	x20, x0
  419a90:	str	x0, [x19]
  419a94:	bl	404b00 <strcpy@plt>
  419a98:	bl	404170 <strlen@plt>
  419a9c:	add	x8, x0, x20
  419aa0:	ldurb	w8, [x8, #-1]
  419aa4:	str	x0, [x19, #16]
  419aa8:	cmp	w8, #0x2f
  419aac:	b.eq	419ac0 <wcrtomb@plt+0x14cc0>  // b.none
  419ab0:	add	x8, x0, #0x1
  419ab4:	mov	w9, #0x2f                  	// #47
  419ab8:	str	x8, [x19, #16]
  419abc:	strb	w9, [x20, x0]
  419ac0:	mov	x0, x19
  419ac4:	ldp	x20, x19, [sp, #32]
  419ac8:	ldr	x21, [sp, #16]
  419acc:	ldp	x29, x30, [sp], #48
  419ad0:	ret
  419ad4:	stp	x29, x30, [sp, #-80]!
  419ad8:	stp	x22, x21, [sp, #48]
  419adc:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419ae0:	ldr	w8, [x21, #3584]
  419ae4:	str	x25, [sp, #16]
  419ae8:	stp	x24, x23, [sp, #32]
  419aec:	stp	x20, x19, [sp, #64]
  419af0:	cmp	w8, w0
  419af4:	mov	x29, sp
  419af8:	b.eq	419c0c <wcrtomb@plt+0x14e0c>  // b.none
  419afc:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419b00:	ldr	x8, [x23, #2104]
  419b04:	mov	w9, #0x18                  	// #24
  419b08:	mov	w19, w0
  419b0c:	adrp	x22, 467000 <_obstack_memory_used@@Base+0x2b808>
  419b10:	smaddl	x24, w0, w9, x8
  419b14:	ldr	w20, [x24, #16]!
  419b18:	cbnz	w20, 419bcc <wcrtomb@plt+0x14dcc>
  419b1c:	sxtw	x9, w19
  419b20:	mov	w10, #0x18                  	// #24
  419b24:	madd	x25, x9, x10, x8
  419b28:	ldr	x1, [x25]
  419b2c:	ldrb	w8, [x1]
  419b30:	cmp	w8, #0x2f
  419b34:	b.eq	419b44 <wcrtomb@plt+0x14d44>  // b.none
  419b38:	sub	w0, w19, #0x1
  419b3c:	bl	419ad4 <wcrtomb@plt+0x14cd4>
  419b40:	ldr	x1, [x25]
  419b44:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  419b48:	ldr	w8, [x8, #188]
  419b4c:	ldr	w0, [x22, #1944]
  419b50:	and	w2, w8, #0xffff7fff
  419b54:	bl	404cc0 <openat@plt>
  419b58:	tbnz	w0, #31, 419c24 <wcrtomb@plt+0x14e24>
  419b5c:	str	w0, [x24]
  419b60:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419b64:	ldr	x9, [x8, #2112]
  419b68:	mov	w20, w0
  419b6c:	cmp	x9, #0xf
  419b70:	b.hi	419b8c <wcrtomb@plt+0x14d8c>  // b.pmore
  419b74:	adrp	x11, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419b78:	add	x10, x9, #0x1
  419b7c:	add	x11, x11, #0x848
  419b80:	str	x10, [x8, #2112]
  419b84:	add	x8, x11, x9, lsl #2
  419b88:	b	419bc8 <wcrtomb@plt+0x14dc8>
  419b8c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419b90:	ldr	x24, [x23, #2104]
  419b94:	ldrsw	x25, [x8, #2180]
  419b98:	mov	w8, #0x18                  	// #24
  419b9c:	madd	x23, x25, x8, x24
  419ba0:	ldr	w0, [x23, #16]!
  419ba4:	bl	4047a0 <close@plt>
  419ba8:	cbz	w0, 419bbc <wcrtomb@plt+0x14dbc>
  419bac:	mov	w8, #0x18                  	// #24
  419bb0:	mul	x8, x25, x8
  419bb4:	ldr	x0, [x24, x8]
  419bb8:	bl	419c2c <wcrtomb@plt+0x14e2c>
  419bbc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419bc0:	add	x8, x8, #0x884
  419bc4:	str	wzr, [x23]
  419bc8:	str	w19, [x8]
  419bcc:	cmp	w20, #0x1
  419bd0:	b.lt	419c04 <wcrtomb@plt+0x14e04>  // b.tstop
  419bd4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419bd8:	ldr	w9, [x8, #2120]
  419bdc:	cmp	w9, w19
  419be0:	b.eq	419c00 <wcrtomb@plt+0x14e00>  // b.none
  419be4:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419be8:	add	x10, x10, #0x84c
  419bec:	ldr	w11, [x10]
  419bf0:	str	w9, [x10], #4
  419bf4:	cmp	w11, w19
  419bf8:	mov	w9, w11
  419bfc:	b.ne	419bec <wcrtomb@plt+0x14dec>  // b.any
  419c00:	str	w19, [x8, #2120]
  419c04:	str	w19, [x21, #3584]
  419c08:	str	w20, [x22, #1944]
  419c0c:	ldp	x20, x19, [sp, #64]
  419c10:	ldp	x22, x21, [sp, #48]
  419c14:	ldp	x24, x23, [sp, #32]
  419c18:	ldr	x25, [sp, #16]
  419c1c:	ldp	x29, x30, [sp], #80
  419c20:	ret
  419c24:	ldr	x0, [x25]
  419c28:	bl	42622c <wcrtomb@plt+0x2142c>
  419c2c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  419c30:	ldrb	w8, [x8, #441]
  419c34:	cbz	w8, 419c48 <wcrtomb@plt+0x14e48>
  419c38:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419c3c:	ldrb	w8, [x8, #154]
  419c40:	tbnz	w8, #7, 419c4c <wcrtomb@plt+0x14e4c>
  419c44:	ret
  419c48:	b	426108 <wcrtomb@plt+0x21308>
  419c4c:	b	42611c <wcrtomb@plt+0x2131c>
  419c50:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419c54:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419c58:	ldrsw	x9, [x9, #3584]
  419c5c:	ldr	x8, [x8, #2104]
  419c60:	mov	w10, #0x18                  	// #24
  419c64:	mul	x9, x9, x10
  419c68:	ldr	x0, [x8, x9]
  419c6c:	ret
  419c70:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  419c74:	ldrb	w8, [x8, #441]
  419c78:	cbz	w8, 419c8c <wcrtomb@plt+0x14e8c>
  419c7c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419c80:	ldrb	w8, [x8, #154]
  419c84:	tbnz	w8, #7, 419c90 <wcrtomb@plt+0x14e90>
  419c88:	ret
  419c8c:	b	426218 <wcrtomb@plt+0x21418>
  419c90:	b	426244 <wcrtomb@plt+0x21444>
  419c94:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  419c98:	ldrb	w8, [x8, #441]
  419c9c:	cbz	w8, 419cb0 <wcrtomb@plt+0x14eb0>
  419ca0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419ca4:	ldrb	w8, [x8, #154]
  419ca8:	tbnz	w8, #7, 419cb4 <wcrtomb@plt+0x14eb4>
  419cac:	ret
  419cb0:	b	42626c <wcrtomb@plt+0x2146c>
  419cb4:	b	426324 <wcrtomb@plt+0x21524>
  419cb8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  419cbc:	ldrb	w8, [x8, #441]
  419cc0:	cbz	w8, 419cd4 <wcrtomb@plt+0x14ed4>
  419cc4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419cc8:	ldrb	w8, [x8, #154]
  419ccc:	tbnz	w8, #7, 419cd8 <wcrtomb@plt+0x14ed8>
  419cd0:	ret
  419cd4:	b	426480 <wcrtomb@plt+0x21680>
  419cd8:	b	426494 <wcrtomb@plt+0x21694>
  419cdc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  419ce0:	ldrb	w8, [x8, #441]
  419ce4:	cbz	w8, 419cf8 <wcrtomb@plt+0x14ef8>
  419ce8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419cec:	ldrb	w8, [x8, #154]
  419cf0:	tbnz	w8, #7, 419cfc <wcrtomb@plt+0x14efc>
  419cf4:	ret
  419cf8:	b	4264bc <wcrtomb@plt+0x216bc>
  419cfc:	b	4264d0 <wcrtomb@plt+0x216d0>
  419d00:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  419d04:	ldrb	w8, [x8, #441]
  419d08:	cbz	w8, 419d1c <wcrtomb@plt+0x14f1c>
  419d0c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419d10:	ldrb	w8, [x8, #154]
  419d14:	tbnz	w8, #7, 419d20 <wcrtomb@plt+0x14f20>
  419d18:	ret
  419d1c:	b	4264f8 <wcrtomb@plt+0x216f8>
  419d20:	b	4265a8 <wcrtomb@plt+0x217a8>
  419d24:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  419d28:	ldrb	w8, [x8, #441]
  419d2c:	cbz	w8, 419d40 <wcrtomb@plt+0x14f40>
  419d30:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419d34:	ldrb	w8, [x8, #154]
  419d38:	tbnz	w8, #7, 419d44 <wcrtomb@plt+0x14f44>
  419d3c:	ret
  419d40:	b	4266e4 <wcrtomb@plt+0x218e4>
  419d44:	b	4266f8 <wcrtomb@plt+0x218f8>
  419d48:	sub	sp, sp, #0x30
  419d4c:	stp	x20, x19, [sp, #32]
  419d50:	mov	x19, x0
  419d54:	stp	x29, x30, [sp, #16]
  419d58:	add	x29, sp, #0x10
  419d5c:	tbnz	w1, #0, 419ddc <wcrtomb@plt+0x14fdc>
  419d60:	str	x2, [sp, #8]
  419d64:	bl	404ce0 <__errno_location@plt>
  419d68:	ldr	w8, [x0]
  419d6c:	ldr	x2, [sp, #8]
  419d70:	cmp	w8, #0x2
  419d74:	b.ne	419ddc <wcrtomb@plt+0x14fdc>  // b.any
  419d78:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419d7c:	ldrb	w8, [x8, #152]
  419d80:	tbz	w8, #6, 419dc8 <wcrtomb@plt+0x14fc8>
  419d84:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  419d88:	ldr	x8, [x8, #496]
  419d8c:	cbz	x8, 419d94 <wcrtomb@plt+0x14f94>
  419d90:	blr	x8
  419d94:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  419d98:	add	x1, x1, #0xe93
  419d9c:	mov	w2, #0x5                   	// #5
  419da0:	mov	x0, xzr
  419da4:	bl	404bd0 <dcgettext@plt>
  419da8:	mov	x20, x0
  419dac:	mov	x0, x19
  419db0:	bl	4398cc <argp_parse@@Base+0xac10>
  419db4:	mov	x3, x0
  419db8:	mov	w0, wzr
  419dbc:	mov	w1, wzr
  419dc0:	mov	x2, x20
  419dc4:	bl	4041d0 <error@plt>
  419dc8:	ldp	x20, x19, [sp, #32]
  419dcc:	ldp	x29, x30, [sp, #16]
  419dd0:	mov	w0, #0x1                   	// #1
  419dd4:	add	sp, sp, #0x30
  419dd8:	b	420c68 <wcrtomb@plt+0x1be68>
  419ddc:	mov	x0, x19
  419de0:	ldp	x20, x19, [sp, #32]
  419de4:	ldp	x29, x30, [sp, #16]
  419de8:	add	sp, sp, #0x30
  419dec:	br	x2
  419df0:	stp	x29, x30, [sp, #-16]!
  419df4:	mov	x29, sp
  419df8:	bl	404360 <fork@plt>
  419dfc:	cmn	w0, #0x1
  419e00:	b.eq	419e0c <wcrtomb@plt+0x1500c>  // b.none
  419e04:	ldp	x29, x30, [sp], #16
  419e08:	ret
  419e0c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  419e10:	add	x1, x1, #0xebb
  419e14:	mov	w2, #0x5                   	// #5
  419e18:	mov	x0, xzr
  419e1c:	bl	404bd0 <dcgettext@plt>
  419e20:	mov	x1, x0
  419e24:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x11808>
  419e28:	add	x0, x0, #0xeb6
  419e2c:	bl	425efc <wcrtomb@plt+0x210fc>
  419e30:	stp	x29, x30, [sp, #-16]!
  419e34:	mov	x29, sp
  419e38:	bl	4042d0 <pipe@plt>
  419e3c:	tbnz	w0, #31, 419e48 <wcrtomb@plt+0x15048>
  419e40:	ldp	x29, x30, [sp], #16
  419e44:	ret
  419e48:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  419e4c:	add	x1, x1, #0xece
  419e50:	mov	w2, #0x5                   	// #5
  419e54:	mov	x0, xzr
  419e58:	bl	404bd0 <dcgettext@plt>
  419e5c:	mov	x1, x0
  419e60:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x11808>
  419e64:	add	x0, x0, #0xec9
  419e68:	bl	425efc <wcrtomb@plt+0x210fc>
  419e6c:	stp	x29, x30, [sp, #-32]!
  419e70:	stp	x20, x19, [sp, #16]
  419e74:	mov	x29, sp
  419e78:	mov	x20, x1
  419e7c:	mov	x19, x0
  419e80:	bl	404740 <getpagesize@plt>
  419e84:	mov	w8, w0
  419e88:	adds	x0, x20, w0, sxtw
  419e8c:	b.cs	419ebc <wcrtomb@plt+0x150bc>  // b.hs, b.nlast
  419e90:	sxtw	x20, w8
  419e94:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  419e98:	add	x8, x0, x20
  419e9c:	sub	x8, x8, #0x1
  419ea0:	udiv	x8, x8, x20
  419ea4:	str	x0, [x19]
  419ea8:	mul	x8, x8, x20
  419eac:	ldp	x20, x19, [sp, #16]
  419eb0:	mov	x0, x8
  419eb4:	ldp	x29, x30, [sp], #32
  419eb8:	ret
  419ebc:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  419ec0:	stp	x29, x30, [sp, #-32]!
  419ec4:	str	x19, [sp, #16]
  419ec8:	mov	x19, x0
  419ecc:	ldr	x0, [x0]
  419ed0:	mov	x29, sp
  419ed4:	bl	4049b0 <free@plt>
  419ed8:	mov	x0, x19
  419edc:	ldr	x19, [sp, #16]
  419ee0:	ldp	x29, x30, [sp], #32
  419ee4:	b	4049b0 <free@plt>
  419ee8:	stp	x29, x30, [sp, #-48]!
  419eec:	stp	x20, x19, [sp, #32]
  419ef0:	mov	x19, x0
  419ef4:	mov	x0, x1
  419ef8:	stp	x22, x21, [sp, #16]
  419efc:	mov	x29, sp
  419f00:	mov	x20, x1
  419f04:	bl	404170 <strlen@plt>
  419f08:	ldr	x8, [x19, #16]
  419f0c:	mov	x21, x19
  419f10:	ldr	x9, [x21, #8]!
  419f14:	add	x22, x0, #0x1
  419f18:	ldr	x0, [x19]
  419f1c:	add	x10, x22, x8
  419f20:	cmp	x10, x9
  419f24:	b.cc	419f44 <wcrtomb@plt+0x15144>  // b.lo, b.ul, b.last
  419f28:	mov	x1, x21
  419f2c:	bl	43a8a8 <argp_parse@@Base+0xbbec>
  419f30:	ldp	x9, x8, [x19, #8]
  419f34:	str	x0, [x19]
  419f38:	add	x10, x22, x8
  419f3c:	cmp	x10, x9
  419f40:	b.cs	419f28 <wcrtomb@plt+0x15128>  // b.hs, b.nlast
  419f44:	add	x0, x0, x8
  419f48:	mov	x1, x20
  419f4c:	bl	404b00 <strcpy@plt>
  419f50:	ldr	x0, [x19]
  419f54:	ldp	x20, x19, [sp, #32]
  419f58:	ldp	x22, x21, [sp, #16]
  419f5c:	ldp	x29, x30, [sp], #48
  419f60:	ret
  419f64:	stp	x29, x30, [sp, #-48]!
  419f68:	stp	x22, x21, [sp, #16]
  419f6c:	stp	x20, x19, [sp, #32]
  419f70:	mov	x19, x1
  419f74:	mov	w20, w0
  419f78:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419f7c:	mov	x29, sp
  419f80:	cbz	w0, 419f9c <wcrtomb@plt+0x1519c>
  419f84:	ldr	w8, [x21, #2192]
  419f88:	cmp	w8, w20
  419f8c:	b.ne	419f9c <wcrtomb@plt+0x1519c>  // b.any
  419f90:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  419f94:	add	x0, x0, #0x3ee
  419f98:	b	419fe0 <wcrtomb@plt+0x151e0>
  419f9c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419fa0:	ldr	x0, [x8, #2200]
  419fa4:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419fa8:	cbz	x0, 419fb8 <wcrtomb@plt+0x151b8>
  419fac:	ldr	w8, [x22, #2208]
  419fb0:	cmp	w8, w20
  419fb4:	b.eq	419fe0 <wcrtomb@plt+0x151e0>  // b.none
  419fb8:	mov	w0, w20
  419fbc:	bl	404910 <getpwuid@plt>
  419fc0:	cbz	x0, 419ff8 <wcrtomb@plt+0x151f8>
  419fc4:	str	w20, [x22, #2208]
  419fc8:	ldr	x1, [x0]
  419fcc:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  419fd0:	add	x20, x20, #0x898
  419fd4:	mov	x0, x20
  419fd8:	bl	4186dc <wcrtomb@plt+0x138dc>
  419fdc:	ldr	x0, [x20]
  419fe0:	bl	43a998 <argp_parse@@Base+0xbcdc>
  419fe4:	str	x0, [x19]
  419fe8:	ldp	x20, x19, [sp, #32]
  419fec:	ldp	x22, x21, [sp, #16]
  419ff0:	ldp	x29, x30, [sp], #48
  419ff4:	ret
  419ff8:	str	w20, [x21, #2192]
  419ffc:	b	419f90 <wcrtomb@plt+0x15190>
  41a000:	stp	x29, x30, [sp, #-48]!
  41a004:	stp	x22, x21, [sp, #16]
  41a008:	stp	x20, x19, [sp, #32]
  41a00c:	mov	x19, x1
  41a010:	mov	w20, w0
  41a014:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a018:	mov	x29, sp
  41a01c:	cbz	w0, 41a038 <wcrtomb@plt+0x15238>
  41a020:	ldr	w8, [x21, #2212]
  41a024:	cmp	w8, w20
  41a028:	b.ne	41a038 <wcrtomb@plt+0x15238>  // b.any
  41a02c:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  41a030:	add	x0, x0, #0x3ee
  41a034:	b	41a07c <wcrtomb@plt+0x1527c>
  41a038:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a03c:	ldr	x0, [x8, #2216]
  41a040:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a044:	cbz	x0, 41a054 <wcrtomb@plt+0x15254>
  41a048:	ldr	w8, [x22, #2224]
  41a04c:	cmp	w8, w20
  41a050:	b.eq	41a07c <wcrtomb@plt+0x1527c>  // b.none
  41a054:	mov	w0, w20
  41a058:	bl	404d30 <getgrgid@plt>
  41a05c:	cbz	x0, 41a094 <wcrtomb@plt+0x15294>
  41a060:	str	w20, [x22, #2224]
  41a064:	ldr	x1, [x0]
  41a068:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a06c:	add	x20, x20, #0x8a8
  41a070:	mov	x0, x20
  41a074:	bl	4186dc <wcrtomb@plt+0x138dc>
  41a078:	ldr	x0, [x20]
  41a07c:	bl	43a998 <argp_parse@@Base+0xbcdc>
  41a080:	str	x0, [x19]
  41a084:	ldp	x20, x19, [sp, #32]
  41a088:	ldp	x22, x21, [sp, #16]
  41a08c:	ldp	x29, x30, [sp], #48
  41a090:	ret
  41a094:	str	w20, [x21, #2212]
  41a098:	b	41a02c <wcrtomb@plt+0x1522c>
  41a09c:	stp	x29, x30, [sp, #-48]!
  41a0a0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a0a4:	stp	x20, x19, [sp, #32]
  41a0a8:	mov	x19, x1
  41a0ac:	ldr	x1, [x8, #2232]
  41a0b0:	mov	x20, x0
  41a0b4:	str	x21, [sp, #16]
  41a0b8:	mov	x29, sp
  41a0bc:	cbz	x1, 41a0cc <wcrtomb@plt+0x152cc>
  41a0c0:	mov	x0, x20
  41a0c4:	bl	404900 <strcmp@plt>
  41a0c8:	cbz	w0, 41a140 <wcrtomb@plt+0x15340>
  41a0cc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a0d0:	ldr	x1, [x8, #2200]
  41a0d4:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a0d8:	cbz	x1, 41a0f8 <wcrtomb@plt+0x152f8>
  41a0dc:	ldrb	w8, [x20]
  41a0e0:	ldrb	w9, [x1]
  41a0e4:	cmp	w8, w9
  41a0e8:	b.ne	41a0f8 <wcrtomb@plt+0x152f8>  // b.any
  41a0ec:	mov	x0, x20
  41a0f0:	bl	404900 <strcmp@plt>
  41a0f4:	cbz	w0, 41a11c <wcrtomb@plt+0x1531c>
  41a0f8:	mov	x0, x20
  41a0fc:	bl	404610 <getpwnam@plt>
  41a100:	cbz	x0, 41a12c <wcrtomb@plt+0x1532c>
  41a104:	ldr	w8, [x0, #16]
  41a108:	str	w8, [x21, #2208]
  41a10c:	ldr	x1, [x0]
  41a110:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a114:	add	x0, x0, #0x898
  41a118:	bl	4186dc <wcrtomb@plt+0x138dc>
  41a11c:	ldr	w8, [x21, #2208]
  41a120:	mov	w0, #0x1                   	// #1
  41a124:	str	w8, [x19]
  41a128:	b	41a140 <wcrtomb@plt+0x15340>
  41a12c:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a130:	add	x0, x0, #0x8b8
  41a134:	mov	x1, x20
  41a138:	bl	4186dc <wcrtomb@plt+0x138dc>
  41a13c:	mov	w0, wzr
  41a140:	ldp	x20, x19, [sp, #32]
  41a144:	ldr	x21, [sp, #16]
  41a148:	ldp	x29, x30, [sp], #48
  41a14c:	ret
  41a150:	stp	x29, x30, [sp, #-48]!
  41a154:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a158:	stp	x20, x19, [sp, #32]
  41a15c:	mov	x19, x1
  41a160:	ldr	x1, [x8, #2240]
  41a164:	mov	x20, x0
  41a168:	str	x21, [sp, #16]
  41a16c:	mov	x29, sp
  41a170:	cbz	x1, 41a180 <wcrtomb@plt+0x15380>
  41a174:	mov	x0, x20
  41a178:	bl	404900 <strcmp@plt>
  41a17c:	cbz	w0, 41a1f4 <wcrtomb@plt+0x153f4>
  41a180:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a184:	ldr	x1, [x8, #2216]
  41a188:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a18c:	cbz	x1, 41a1ac <wcrtomb@plt+0x153ac>
  41a190:	ldrb	w8, [x20]
  41a194:	ldrb	w9, [x1]
  41a198:	cmp	w8, w9
  41a19c:	b.ne	41a1ac <wcrtomb@plt+0x153ac>  // b.any
  41a1a0:	mov	x0, x20
  41a1a4:	bl	404900 <strcmp@plt>
  41a1a8:	cbz	w0, 41a1d0 <wcrtomb@plt+0x153d0>
  41a1ac:	mov	x0, x20
  41a1b0:	bl	4042a0 <getgrnam@plt>
  41a1b4:	cbz	x0, 41a1e0 <wcrtomb@plt+0x153e0>
  41a1b8:	ldr	w8, [x0, #16]
  41a1bc:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a1c0:	add	x0, x0, #0x8a8
  41a1c4:	mov	x1, x20
  41a1c8:	str	w8, [x21, #2224]
  41a1cc:	bl	4186dc <wcrtomb@plt+0x138dc>
  41a1d0:	ldr	w8, [x21, #2224]
  41a1d4:	mov	w0, #0x1                   	// #1
  41a1d8:	str	w8, [x19]
  41a1dc:	b	41a1f4 <wcrtomb@plt+0x153f4>
  41a1e0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a1e4:	add	x0, x0, #0x8c0
  41a1e8:	mov	x1, x20
  41a1ec:	bl	4186dc <wcrtomb@plt+0x138dc>
  41a1f0:	mov	w0, wzr
  41a1f4:	ldp	x20, x19, [sp, #32]
  41a1f8:	ldr	x21, [sp, #16]
  41a1fc:	ldp	x29, x30, [sp], #48
  41a200:	ret
  41a204:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a208:	ldr	x8, [x8, #3592]
  41a20c:	cmp	x8, #0x0
  41a210:	cset	w0, ne  // ne = any
  41a214:	ret
  41a218:	stp	x29, x30, [sp, #-32]!
  41a21c:	str	x19, [sp, #16]
  41a220:	mov	x29, sp
  41a224:	mov	x19, x0
  41a228:	bl	41a250 <wcrtomb@plt+0x15450>
  41a22c:	str	wzr, [x0, #16]
  41a230:	str	x19, [x0, #24]
  41a234:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a238:	ldr	x9, [x8, #3592]
  41a23c:	ldr	x19, [sp, #16]
  41a240:	add	x9, x9, #0x1
  41a244:	str	x9, [x8, #3592]
  41a248:	ldp	x29, x30, [sp], #32
  41a24c:	ret
  41a250:	stp	x29, x30, [sp, #-32]!
  41a254:	mov	w0, #0x38                  	// #56
  41a258:	str	x19, [sp, #16]
  41a25c:	mov	x29, sp
  41a260:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  41a264:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a268:	ldr	x8, [x19, #2304]
  41a26c:	cbnz	x8, 41a28c <wcrtomb@plt+0x1548c>
  41a270:	mov	w8, #0x3                   	// #3
  41a274:	str	x0, [x19, #2304]
  41a278:	stp	xzr, xzr, [x0]
  41a27c:	str	w8, [x0, #16]
  41a280:	mov	w0, #0x38                  	// #56
  41a284:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  41a288:	ldr	x8, [x19, #2304]
  41a28c:	ldr	x9, [x8, #8]
  41a290:	str	x9, [x0, #8]
  41a294:	ldr	x9, [x8, #8]
  41a298:	cbz	x9, 41a2a4 <wcrtomb@plt+0x154a4>
  41a29c:	str	x0, [x9]
  41a2a0:	ldr	x8, [x19, #2304]
  41a2a4:	ldr	x19, [sp, #16]
  41a2a8:	str	x8, [x0]
  41a2ac:	str	x0, [x8, #8]
  41a2b0:	ldp	x29, x30, [sp], #32
  41a2b4:	ret
  41a2b8:	stp	x29, x30, [sp, #-16]!
  41a2bc:	mov	w0, #0x66                  	// #102
  41a2c0:	mov	x29, sp
  41a2c4:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  41a2c8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a2cc:	ldr	x9, [x8, #2304]
  41a2d0:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a2d4:	str	x0, [x10, #2248]
  41a2d8:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a2dc:	mov	w11, #0x64                  	// #100
  41a2e0:	str	x11, [x10, #2256]
  41a2e4:	cbz	x9, 41a300 <wcrtomb@plt+0x15500>
  41a2e8:	ldr	x9, [x9, #8]
  41a2ec:	cbz	x9, 41a300 <wcrtomb@plt+0x15500>
  41a2f0:	mov	x10, x9
  41a2f4:	ldr	x9, [x9, #8]
  41a2f8:	cbnz	x9, 41a2f0 <wcrtomb@plt+0x154f0>
  41a2fc:	str	x10, [x8, #2304]
  41a300:	ldp	x29, x30, [sp], #16
  41a304:	ret
  41a308:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a30c:	ldr	x0, [x8, #2248]
  41a310:	b	4049b0 <free@plt>
  41a314:	stp	x29, x30, [sp, #-16]!
  41a318:	mov	x29, sp
  41a31c:	bl	41a330 <wcrtomb@plt+0x15530>
  41a320:	cbz	x0, 41a328 <wcrtomb@plt+0x15528>
  41a324:	ldr	x0, [x0, #24]
  41a328:	ldp	x29, x30, [sp], #16
  41a32c:	ret
  41a330:	sub	sp, sp, #0x180
  41a334:	stp	x26, x25, [sp, #320]
  41a338:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a33c:	stp	x22, x21, [sp, #352]
  41a340:	ldr	x21, [x26, #2304]
  41a344:	stp	x29, x30, [sp, #288]
  41a348:	stp	x28, x27, [sp, #304]
  41a34c:	stp	x24, x23, [sp, #336]
  41a350:	stp	x20, x19, [sp, #368]
  41a354:	add	x29, sp, #0x120
  41a358:	str	w0, [sp, #12]
  41a35c:	cbz	x21, 41aa88 <wcrtomb@plt+0x15c88>
  41a360:	adrp	x28, 44d000 <_obstack_memory_used@@Base+0x11808>
  41a364:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a368:	add	x28, x28, #0xee8
  41a36c:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a370:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a374:	add	x25, x25, #0x8d0
  41a378:	adrp	x23, 46b000 <argp_program_version_hook@@Base+0x458>
  41a37c:	ldr	w8, [x21, #16]
  41a380:	cmp	w8, #0x4
  41a384:	b.hi	41a3b4 <wcrtomb@plt+0x155b4>  // b.pmore
  41a388:	adr	x9, 41a398 <wcrtomb@plt+0x15598>
  41a38c:	ldrh	w10, [x28, x8, lsl #1]
  41a390:	add	x9, x9, x10, lsl #2
  41a394:	br	x9
  41a398:	ldr	w8, [sp, #12]
  41a39c:	cbz	w8, 41ac74 <wcrtomb@plt+0x15e74>
  41a3a0:	ldr	x0, [x21, #24]
  41a3a4:	bl	43a998 <argp_parse@@Base+0xbcdc>
  41a3a8:	bl	419860 <wcrtomb@plt+0x14a60>
  41a3ac:	bl	419ad4 <wcrtomb@plt+0x14cd4>
  41a3b0:	bl	41c144 <wcrtomb@plt+0x17344>
  41a3b4:	ldr	x21, [x26, #2304]
  41a3b8:	cbnz	x21, 41a37c <wcrtomb@plt+0x1557c>
  41a3bc:	b	41aa88 <wcrtomb@plt+0x15c88>
  41a3c0:	ldr	w27, [x21, #24]
  41a3c4:	ldr	x24, [x21, #32]
  41a3c8:	sub	w8, w27, #0x101
  41a3cc:	cmp	w8, #0x1b
  41a3d0:	b.hi	41a84c <wcrtomb@plt+0x15a4c>  // b.pmore
  41a3d4:	adrp	x11, 44d000 <_obstack_memory_used@@Base+0x11808>
  41a3d8:	add	x11, x11, #0xef2
  41a3dc:	adr	x9, 41a3f0 <wcrtomb@plt+0x155f0>
  41a3e0:	ldrh	w10, [x11, x8, lsl #1]
  41a3e4:	add	x9, x9, x10, lsl #2
  41a3e8:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a3ec:	br	x9
  41a3f0:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41a3f4:	add	x1, x1, #0x8ef
  41a3f8:	mov	w19, #0x8                   	// #8
  41a3fc:	ldr	x0, [x21, #3648]
  41a400:	mov	w2, #0x10000000            	// #268435456
  41a404:	bl	430adc <argp_parse@@Base+0x1e20>
  41a408:	adrp	x8, 44d000 <_obstack_memory_used@@Base+0x11808>
  41a40c:	add	x8, x8, #0xf30
  41a410:	ldr	x1, [x8, x19]
  41a414:	add	x19, x19, #0x8
  41a418:	cmp	x19, #0x20
  41a41c:	b.ne	41a3fc <wcrtomb@plt+0x155fc>  // b.any
  41a420:	b	41a3b0 <wcrtomb@plt+0x155b0>
  41a424:	ldr	x24, [x21, #48]
  41a428:	cbnz	x24, 41a544 <wcrtomb@plt+0x15744>
  41a42c:	ldr	x28, [x21, #24]
  41a430:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  41a434:	add	x1, x1, #0x25d
  41a438:	mov	x0, x28
  41a43c:	bl	404900 <strcmp@plt>
  41a440:	cbz	w0, 41a494 <wcrtomb@plt+0x15694>
  41a444:	add	x1, sp, #0x30
  41a448:	mov	x0, x28
  41a44c:	bl	44b928 <_obstack_memory_used@@Base+0x10130>
  41a450:	cbnz	w0, 41ad68 <wcrtomb@plt+0x15f68>
  41a454:	ldr	x8, [x26, #2304]
  41a458:	cbz	x8, 41a478 <wcrtomb@plt+0x15678>
  41a45c:	ldr	w9, [x8, #16]
  41a460:	cmp	w9, #0x2
  41a464:	b.ne	41a470 <wcrtomb@plt+0x15670>  // b.any
  41a468:	ldr	x9, [x8, #48]
  41a46c:	cbnz	x9, 41a4b0 <wcrtomb@plt+0x156b0>
  41a470:	ldr	x8, [x8]
  41a474:	cbnz	x8, 41a45c <wcrtomb@plt+0x1565c>
  41a478:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41a47c:	mov	w2, #0x5                   	// #5
  41a480:	mov	x0, xzr
  41a484:	add	x1, x1, #0x8c3
  41a488:	bl	404bd0 <dcgettext@plt>
  41a48c:	mov	x24, x0
  41a490:	b	41a4b4 <wcrtomb@plt+0x156b4>
  41a494:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41a498:	add	x0, x0, #0x861
  41a49c:	bl	41f814 <wcrtomb@plt+0x1aa14>
  41a4a0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a4a4:	ldr	x24, [x8, #640]
  41a4a8:	str	x24, [x21, #48]
  41a4ac:	b	41a520 <wcrtomb@plt+0x15720>
  41a4b0:	ldr	x24, [x8, #24]
  41a4b4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a4b8:	ldr	x19, [x8, #2376]
  41a4bc:	ldp	x23, x27, [sp, #48]
  41a4c0:	cbz	x19, 41a4e4 <wcrtomb@plt+0x156e4>
  41a4c4:	ldr	x8, [x19, #8]
  41a4c8:	cmp	x8, x27
  41a4cc:	b.ne	41a4dc <wcrtomb@plt+0x156dc>  // b.any
  41a4d0:	ldr	x8, [x19, #16]
  41a4d4:	cmp	x8, x23
  41a4d8:	b.eq	41a7b8 <wcrtomb@plt+0x159b8>  // b.none
  41a4dc:	ldr	x19, [x19]
  41a4e0:	cbnz	x19, 41a4c4 <wcrtomb@plt+0x156c4>
  41a4e4:	mov	w0, #0x20                  	// #32
  41a4e8:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  41a4ec:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a4f0:	ldr	x8, [x9, #2376]
  41a4f4:	stp	x23, x24, [x0, #16]
  41a4f8:	str	x0, [x9, #2376]
  41a4fc:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  41a500:	stp	x8, x27, [x0]
  41a504:	ldr	x0, [x21, #24]
  41a508:	add	x1, x1, #0x84b
  41a50c:	bl	4044a0 <fopen@plt>
  41a510:	mov	x24, x0
  41a514:	adrp	x23, 46b000 <argp_program_version_hook@@Base+0x458>
  41a518:	str	x0, [x21, #48]
  41a51c:	cbz	x0, 41ad70 <wcrtomb@plt+0x15f70>
  41a520:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a524:	ldrb	w8, [x8, #2368]
  41a528:	cmp	w8, #0x0
  41a52c:	mov	w8, #0xa                   	// #10
  41a530:	csel	w8, wzr, w8, ne  // ne = any
  41a534:	str	w8, [x21, #40]
  41a538:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a53c:	ldrb	w8, [x8, #2369]
  41a540:	strb	w8, [x21, #44]
  41a544:	ldr	x8, [x21, #32]
  41a548:	ldr	w19, [x21, #40]
  41a54c:	mov	x0, x24
  41a550:	add	x8, x8, #0x1
  41a554:	str	x8, [x21, #32]
  41a558:	bl	404780 <getc_unlocked@plt>
  41a55c:	cmn	w0, #0x1
  41a560:	mov	w28, w0
  41a564:	mov	x27, xzr
  41a568:	cset	w8, ne  // ne = any
  41a56c:	b.eq	41a5c4 <wcrtomb@plt+0x157c4>  // b.none
  41a570:	cmp	w28, w19
  41a574:	b.eq	41a5c4 <wcrtomb@plt+0x157c4>  // b.none
  41a578:	mov	x27, xzr
  41a57c:	ldr	x8, [x20, #2256]
  41a580:	ldr	x0, [x22, #2248]
  41a584:	cmp	x27, x8
  41a588:	b.ne	41a598 <wcrtomb@plt+0x15798>  // b.any
  41a58c:	mov	x1, x25
  41a590:	bl	43a8a8 <argp_parse@@Base+0xbbec>
  41a594:	str	x0, [x22, #2248]
  41a598:	strb	w28, [x0, x27]
  41a59c:	cbz	w28, 41a5d4 <wcrtomb@plt+0x157d4>
  41a5a0:	mov	x0, x24
  41a5a4:	add	x27, x27, #0x1
  41a5a8:	bl	404780 <getc_unlocked@plt>
  41a5ac:	cmn	w0, #0x1
  41a5b0:	mov	w28, w0
  41a5b4:	cset	w8, ne  // ne = any
  41a5b8:	b.eq	41a5c4 <wcrtomb@plt+0x157c4>  // b.none
  41a5bc:	cmp	w28, w19
  41a5c0:	b.ne	41a57c <wcrtomb@plt+0x1577c>  // b.any
  41a5c4:	cbnz	x27, 41a72c <wcrtomb@plt+0x1592c>
  41a5c8:	tbz	w8, #0, 41a72c <wcrtomb@plt+0x1592c>
  41a5cc:	ldr	x24, [x21, #48]
  41a5d0:	b	41a544 <wcrtomb@plt+0x15744>
  41a5d4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a5d8:	ldrb	w8, [x8, #153]
  41a5dc:	tbz	w8, #1, 41a610 <wcrtomb@plt+0x15810>
  41a5e0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41a5e4:	ldr	x8, [x8, #496]
  41a5e8:	cbz	x8, 41a5f0 <wcrtomb@plt+0x157f0>
  41a5ec:	blr	x8
  41a5f0:	ldr	x0, [x21, #24]
  41a5f4:	bl	4398cc <argp_parse@@Base+0xac10>
  41a5f8:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x12808>
  41a5fc:	mov	x3, x0
  41a600:	mov	w0, wzr
  41a604:	mov	w1, wzr
  41a608:	add	x2, x2, #0x864
  41a60c:	bl	4041d0 <error@plt>
  41a610:	str	wzr, [x21, #40]
  41a614:	ldrb	w8, [x21, #44]
  41a618:	cbnz	w8, 41ad28 <wcrtomb@plt+0x15f28>
  41a61c:	ldrb	w8, [x23, #244]
  41a620:	mov	x27, x23
  41a624:	cbz	w8, 41a630 <wcrtomb@plt+0x15830>
  41a628:	ldr	x0, [x22, #2248]
  41a62c:	bl	418784 <wcrtomb@plt+0x13984>
  41a630:	ldr	x19, [x22, #2248]
  41a634:	adrp	x28, 44d000 <_obstack_memory_used@@Base+0x11808>
  41a638:	add	x28, x28, #0xee8
  41a63c:	ldrb	w23, [x19]
  41a640:	cbz	w23, 41ad2c <wcrtomb@plt+0x15f2c>
  41a644:	bl	404930 <__ctype_b_loc@plt>
  41a648:	ldr	x8, [x0]
  41a64c:	mov	x24, x19
  41a650:	and	x9, x23, #0xff
  41a654:	ldrh	w9, [x8, x9, lsl #1]
  41a658:	tbz	w9, #13, 41a668 <wcrtomb@plt+0x15868>
  41a65c:	ldrb	w23, [x24, #1]!
  41a660:	cbnz	w23, 41a650 <wcrtomb@plt+0x15850>
  41a664:	b	41ad2c <wcrtomb@plt+0x15f2c>
  41a668:	and	w8, w23, #0xff
  41a66c:	cmp	w8, #0x2d
  41a670:	b.ne	41ad2c <wcrtomb@plt+0x15f2c>  // b.any
  41a674:	mov	w2, #0xe46                 	// #3654
  41a678:	mov	w8, #0x1                   	// #1
  41a67c:	add	x1, sp, #0x30
  41a680:	movk	w2, #0x200, lsl #16
  41a684:	mov	x0, x24
  41a688:	str	x8, [sp, #64]
  41a68c:	bl	427ec8 <wcrtomb@plt+0x230c8>
  41a690:	cbnz	w0, 41ad78 <wcrtomb@plt+0x15f78>
  41a694:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a698:	ldr	x8, [x8, #3032]
  41a69c:	ldr	x9, [sp, #56]
  41a6a0:	add	x2, sp, #0x10
  41a6a4:	str	x8, [x9]
  41a6a8:	mov	w8, #0x2                   	// #2
  41a6ac:	str	w8, [sp, #16]
  41a6b0:	ldr	w8, [sp, #48]
  41a6b4:	ldr	w9, [sp, #64]
  41a6b8:	ldur	q0, [x21, #24]
  41a6bc:	ldr	x1, [sp, #56]
  41a6c0:	add	w0, w9, w8
  41a6c4:	stur	q0, [sp, #24]
  41a6c8:	bl	41fb30 <wcrtomb@plt+0x1ad30>
  41a6cc:	ldr	x9, [sp, #48]
  41a6d0:	ldr	x10, [sp, #64]
  41a6d4:	mov	x23, x27
  41a6d8:	cmn	x10, x9
  41a6dc:	b.eq	41a6fc <wcrtomb@plt+0x158fc>  // b.none
  41a6e0:	mov	x8, xzr
  41a6e4:	add	x9, x10, x9
  41a6e8:	ldr	x10, [sp, #56]
  41a6ec:	str	xzr, [x10, x8, lsl #3]
  41a6f0:	add	x8, x8, #0x1
  41a6f4:	cmp	x9, x8
  41a6f8:	b.hi	41a6e8 <wcrtomb@plt+0x158e8>  // b.pmore
  41a6fc:	add	x0, sp, #0x30
  41a700:	bl	42800c <wcrtomb@plt+0x2320c>
  41a704:	ldr	x8, [x26, #2304]
  41a708:	cbz	x8, 41aa88 <wcrtomb@plt+0x15c88>
  41a70c:	ldr	x8, [x8, #8]
  41a710:	cbz	x8, 41a3b4 <wcrtomb@plt+0x155b4>
  41a714:	mov	x21, x8
  41a718:	ldr	x8, [x8, #8]
  41a71c:	cbnz	x8, 41a714 <wcrtomb@plt+0x15914>
  41a720:	str	x21, [x26, #2304]
  41a724:	cbnz	x21, 41a37c <wcrtomb@plt+0x1557c>
  41a728:	b	41aa88 <wcrtomb@plt+0x15c88>
  41a72c:	ldr	x8, [x20, #2256]
  41a730:	ldr	x24, [x22, #2248]
  41a734:	cmp	x27, x8
  41a738:	b.ne	41a750 <wcrtomb@plt+0x15950>  // b.any
  41a73c:	mov	x0, x24
  41a740:	mov	x1, x25
  41a744:	bl	43a8a8 <argp_parse@@Base+0xbbec>
  41a748:	mov	x24, x0
  41a74c:	str	x0, [x22, #2248]
  41a750:	mov	x0, x24
  41a754:	strb	wzr, [x24, x27]
  41a758:	bl	404170 <strlen@plt>
  41a75c:	add	x8, x24, x0
  41a760:	sub	x8, x8, #0x1
  41a764:	cmp	x8, x24
  41a768:	b.ls	41a780 <wcrtomb@plt+0x15980>  // b.plast
  41a76c:	ldrb	w9, [x8]
  41a770:	cmp	w9, #0x2f
  41a774:	b.ne	41a780 <wcrtomb@plt+0x15980>  // b.any
  41a778:	strb	wzr, [x8], #-1
  41a77c:	b	41a764 <wcrtomb@plt+0x15964>
  41a780:	cbnz	x27, 41a614 <wcrtomb@plt+0x15814>
  41a784:	cmn	w28, #0x1
  41a788:	b.ne	41a614 <wcrtomb@plt+0x15814>  // b.any
  41a78c:	ldr	x0, [x21, #24]
  41a790:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  41a794:	add	x1, x1, #0x25d
  41a798:	bl	404900 <strcmp@plt>
  41a79c:	cbz	w0, 41a7a8 <wcrtomb@plt+0x159a8>
  41a7a0:	ldr	x0, [x21, #48]
  41a7a4:	bl	404450 <fclose@plt>
  41a7a8:	str	xzr, [x21, #48]
  41a7ac:	bl	41c144 <wcrtomb@plt+0x17344>
  41a7b0:	adrp	x28, 44d000 <_obstack_memory_used@@Base+0x11808>
  41a7b4:	b	41a844 <wcrtomb@plt+0x15a44>
  41a7b8:	mov	w1, #0x3a                  	// #58
  41a7bc:	mov	w2, #0x1                   	// #1
  41a7c0:	mov	x0, xzr
  41a7c4:	bl	438670 <argp_parse@@Base+0x99b4>
  41a7c8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41a7cc:	ldr	x8, [x8, #496]
  41a7d0:	mov	w27, w0
  41a7d4:	cbz	x8, 41a7dc <wcrtomb@plt+0x159dc>
  41a7d8:	blr	x8
  41a7dc:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41a7e0:	mov	w2, #0x5                   	// #5
  41a7e4:	mov	x0, xzr
  41a7e8:	add	x1, x1, #0x88e
  41a7ec:	bl	404bd0 <dcgettext@plt>
  41a7f0:	mov	x21, x0
  41a7f4:	mov	w0, wzr
  41a7f8:	mov	x1, x28
  41a7fc:	bl	439548 <argp_parse@@Base+0xa88c>
  41a800:	ldr	x5, [x19, #24]
  41a804:	mov	x3, x0
  41a808:	mov	w0, wzr
  41a80c:	mov	w1, wzr
  41a810:	mov	x2, x21
  41a814:	mov	x4, x24
  41a818:	bl	4041d0 <error@plt>
  41a81c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a820:	mov	w9, #0x2                   	// #2
  41a824:	mov	w1, #0x3a                  	// #58
  41a828:	mov	x0, xzr
  41a82c:	mov	w2, w27
  41a830:	str	w9, [x8, #2944]
  41a834:	bl	438670 <argp_parse@@Base+0x99b4>
  41a838:	bl	41c144 <wcrtomb@plt+0x17344>
  41a83c:	adrp	x28, 44d000 <_obstack_memory_used@@Base+0x11808>
  41a840:	adrp	x23, 46b000 <argp_program_version_hook@@Base+0x458>
  41a844:	add	x28, x28, #0xee8
  41a848:	b	41a3b4 <wcrtomb@plt+0x155b4>
  41a84c:	cmp	w27, #0x58
  41a850:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a854:	b.ne	41adc4 <wcrtomb@plt+0x15fc4>  // b.any
  41a858:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a85c:	ldr	w8, [x8, #2276]
  41a860:	ldr	x1, [x9, #3648]
  41a864:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a868:	ldr	w9, [x9, #2284]
  41a86c:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  41a870:	ldr	w10, [x10, #164]
  41a874:	cmp	w8, #0x1
  41a878:	cset	w8, ne  // ne = any
  41a87c:	orr	w8, w9, w8, lsl #28
  41a880:	adrp	x0, 430000 <argp_parse@@Base+0x1344>
  41a884:	orr	w3, w8, w10
  41a888:	mov	w4, #0xa                   	// #10
  41a88c:	add	x0, x0, #0xadc
  41a890:	mov	x2, x24
  41a894:	bl	430fd4 <argp_parse@@Base+0x2318>
  41a898:	cbz	w0, 41a3b0 <wcrtomb@plt+0x155b0>
  41a89c:	b	41adf0 <wcrtomb@plt+0x15ff0>
  41a8a0:	mov	w8, #0x2                   	// #2
  41a8a4:	b	41aa48 <wcrtomb@plt+0x15c48>
  41a8a8:	mov	w8, #0x8                   	// #8
  41a8ac:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41a8b0:	str	w8, [x9, #164]
  41a8b4:	b	41a3b0 <wcrtomb@plt+0x155b0>
  41a8b8:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a8bc:	ldr	w8, [x9, #2284]
  41a8c0:	orr	w8, w8, #0x40000000
  41a8c4:	b	41aa80 <wcrtomb@plt+0x15c80>
  41a8c8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a8cc:	ldr	w8, [x8, #2276]
  41a8d0:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a8d4:	ldr	w9, [x9, #2284]
  41a8d8:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  41a8dc:	ldr	w10, [x10, #164]
  41a8e0:	ldr	x0, [x21, #3648]
  41a8e4:	cmp	w8, #0x1
  41a8e8:	cset	w8, ne  // ne = any
  41a8ec:	orr	w8, w9, w8, lsl #28
  41a8f0:	orr	w2, w8, w10
  41a8f4:	mov	x1, x24
  41a8f8:	bl	430adc <argp_parse@@Base+0x1e20>
  41a8fc:	b	41a3b0 <wcrtomb@plt+0x155b0>
  41a900:	mov	w1, #0x3                   	// #3
  41a904:	b	41a9d4 <wcrtomb@plt+0x15bd4>
  41a908:	bl	40dadc <wcrtomb@plt+0x8cdc>
  41a90c:	b	41a3b0 <wcrtomb@plt+0x155b0>
  41a910:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a914:	ldr	w8, [x9, #2284]
  41a918:	orr	w8, w8, #0x10
  41a91c:	b	41aa80 <wcrtomb@plt+0x15c80>
  41a920:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41a924:	adrp	x2, 40a000 <wcrtomb@plt+0x5200>
  41a928:	add	x0, x0, #0x42d
  41a92c:	add	x2, x2, #0x180
  41a930:	mov	w1, #0x1                   	// #1
  41a934:	b	41a9dc <wcrtomb@plt+0x15bdc>
  41a938:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41a93c:	adrp	x2, 40a000 <wcrtomb@plt+0x5200>
  41a940:	add	x0, x0, #0x42d
  41a944:	add	x2, x2, #0x180
  41a948:	mov	w1, #0x2                   	// #2
  41a94c:	b	41a9dc <wcrtomb@plt+0x15bdc>
  41a950:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41a954:	adrp	x2, 40a000 <wcrtomb@plt+0x5200>
  41a958:	add	x0, x0, #0x42d
  41a95c:	add	x2, x2, #0x180
  41a960:	mov	w1, #0x3                   	// #3
  41a964:	b	41a9dc <wcrtomb@plt+0x15bdc>
  41a968:	mov	w1, #0x1                   	// #1
  41a96c:	b	41a9d4 <wcrtomb@plt+0x15bd4>
  41a970:	adrp	x11, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a974:	ldr	w8, [x11, #2284]
  41a978:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a97c:	mov	w10, #0x1                   	// #1
  41a980:	strb	w10, [x9, #2280]
  41a984:	and	w8, w8, #0xbfffffff
  41a988:	str	w8, [x11, #2284]
  41a98c:	b	41a3b0 <wcrtomb@plt+0x155b0>
  41a990:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41a994:	str	wzr, [x8, #164]
  41a998:	b	41a3b0 <wcrtomb@plt+0x155b0>
  41a99c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a9a0:	strb	wzr, [x8, #2368]
  41a9a4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41a9a8:	strb	wzr, [x8, #2369]
  41a9ac:	b	41a3b0 <wcrtomb@plt+0x155b0>
  41a9b0:	mov	w8, #0x1                   	// #1
  41a9b4:	b	41aa68 <wcrtomb@plt+0x15c68>
  41a9b8:	mov	w1, #0x2                   	// #2
  41a9bc:	b	41a9c4 <wcrtomb@plt+0x15bc4>
  41a9c0:	mov	w1, #0x1                   	// #1
  41a9c4:	mov	x0, x24
  41a9c8:	bl	40d710 <wcrtomb@plt+0x8910>
  41a9cc:	b	41a3b0 <wcrtomb@plt+0x155b0>
  41a9d0:	mov	w1, #0x2                   	// #2
  41a9d4:	mov	x0, x24
  41a9d8:	mov	x2, xzr
  41a9dc:	bl	409f30 <wcrtomb@plt+0x5130>
  41a9e0:	b	41a3b0 <wcrtomb@plt+0x155b0>
  41a9e4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41a9e8:	add	x1, x1, #0x8fa
  41a9ec:	mov	w19, #0x8                   	// #8
  41a9f0:	ldr	x0, [x21, #3648]
  41a9f4:	mov	w2, wzr
  41a9f8:	bl	430adc <argp_parse@@Base+0x1e20>
  41a9fc:	adrp	x8, 44d000 <_obstack_memory_used@@Base+0x11808>
  41aa00:	add	x8, x8, #0xf50
  41aa04:	ldr	x1, [x8, x19]
  41aa08:	add	x19, x19, #0x8
  41aa0c:	cmp	x19, #0xb0
  41aa10:	b.ne	41a9f0 <wcrtomb@plt+0x15bf0>  // b.any
  41aa14:	b	41a3b0 <wcrtomb@plt+0x155b0>
  41aa18:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41aa1c:	ldr	w8, [x9, #2284]
  41aa20:	and	w8, w8, #0xffffffef
  41aa24:	b	41aa80 <wcrtomb@plt+0x15c80>
  41aa28:	mov	w8, #0x1                   	// #1
  41aa2c:	strb	w8, [x23, #244]
  41aa30:	b	41a3b0 <wcrtomb@plt+0x155b0>
  41aa34:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41aa38:	ldr	w8, [x9, #2284]
  41aa3c:	orr	w8, w8, #0x1
  41aa40:	b	41aa80 <wcrtomb@plt+0x15c80>
  41aa44:	mov	w8, #0x1                   	// #1
  41aa48:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41aa4c:	str	w8, [x9, #2276]
  41aa50:	b	41a3b0 <wcrtomb@plt+0x155b0>
  41aa54:	strb	wzr, [x23, #244]
  41aa58:	b	41a3b0 <wcrtomb@plt+0x155b0>
  41aa5c:	mov	w8, #0x1                   	// #1
  41aa60:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41aa64:	strb	w8, [x9, #2368]
  41aa68:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41aa6c:	strb	w8, [x9, #2369]
  41aa70:	b	41a3b0 <wcrtomb@plt+0x155b0>
  41aa74:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41aa78:	ldr	w8, [x9, #2284]
  41aa7c:	and	w8, w8, #0xfffffffe
  41aa80:	str	w8, [x9, #2284]
  41aa84:	b	41a3b0 <wcrtomb@plt+0x155b0>
  41aa88:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41aa8c:	ldr	x8, [x24, #3608]
  41aa90:	cbz	x8, 41ac6c <wcrtomb@plt+0x15e6c>
  41aa94:	adrp	x25, 46b000 <argp_program_version_hook@@Base+0x458>
  41aa98:	ldr	x8, [x25, #496]
  41aa9c:	cbz	x8, 41aaa4 <wcrtomb@plt+0x15ca4>
  41aaa0:	blr	x8
  41aaa4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41aaa8:	add	x1, x1, #0x97f
  41aaac:	mov	w2, #0x5                   	// #5
  41aab0:	mov	x0, xzr
  41aab4:	bl	404bd0 <dcgettext@plt>
  41aab8:	mov	x2, x0
  41aabc:	mov	w0, wzr
  41aac0:	mov	w1, wzr
  41aac4:	bl	4041d0 <error@plt>
  41aac8:	ldr	x0, [x24, #3608]
  41aacc:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41aad0:	mov	w8, #0x2                   	// #2
  41aad4:	str	w8, [x26, #2944]
  41aad8:	mov	x8, x0
  41aadc:	mov	x27, x8
  41aae0:	ldr	x8, [x8, #8]
  41aae4:	cbnz	x8, 41aadc <wcrtomb@plt+0x15cdc>
  41aae8:	cbz	x27, 41ac54 <wcrtomb@plt+0x15e54>
  41aaec:	adrp	x28, 467000 <_obstack_memory_used@@Base+0x2b808>
  41aaf0:	adrp	x20, 44e000 <_obstack_memory_used@@Base+0x12808>
  41aaf4:	adrp	x21, 44e000 <_obstack_memory_used@@Base+0x12808>
  41aaf8:	add	x28, x28, #0x838
  41aafc:	add	x20, x20, #0xa62
  41ab00:	mov	w19, #0x2                   	// #2
  41ab04:	add	x21, x21, #0xa4e
  41ab08:	ldr	w8, [x27, #16]
  41ab0c:	cmp	w8, #0x4
  41ab10:	b.eq	41ab5c <wcrtomb@plt+0x15d5c>  // b.none
  41ab14:	cmp	w8, #0x1
  41ab18:	b.ne	41ac48 <wcrtomb@plt+0x15e48>  // b.any
  41ab1c:	ldr	x8, [x25, #496]
  41ab20:	cbz	x8, 41ab28 <wcrtomb@plt+0x15d28>
  41ab24:	blr	x8
  41ab28:	mov	w2, #0x5                   	// #5
  41ab2c:	mov	x0, xzr
  41ab30:	mov	x1, x21
  41ab34:	bl	404bd0 <dcgettext@plt>
  41ab38:	ldr	x8, [x27, #24]
  41ab3c:	mov	x22, x0
  41ab40:	mov	x0, x8
  41ab44:	bl	439ac0 <argp_parse@@Base+0xae04>
  41ab48:	mov	x3, x0
  41ab4c:	mov	w0, wzr
  41ab50:	mov	w1, wzr
  41ab54:	mov	x2, x22
  41ab58:	b	41ac40 <wcrtomb@plt+0x15e40>
  41ab5c:	ldr	x9, [x27, #32]
  41ab60:	ldr	x8, [x25, #496]
  41ab64:	cbz	x9, 41abe0 <wcrtomb@plt+0x15de0>
  41ab68:	cbz	x8, 41ab70 <wcrtomb@plt+0x15d70>
  41ab6c:	blr	x8
  41ab70:	mov	w2, #0x5                   	// #5
  41ab74:	mov	x0, xzr
  41ab78:	mov	x1, x20
  41ab7c:	bl	404bd0 <dcgettext@plt>
  41ab80:	ldr	w8, [x27, #24]
  41ab84:	mov	x22, x0
  41ab88:	mov	x9, x28
  41ab8c:	ldur	x23, [x9, #-32]
  41ab90:	ldur	w10, [x9, #-24]
  41ab94:	cbnz	x23, 41abac <wcrtomb@plt+0x15dac>
  41ab98:	cbnz	w10, 41abac <wcrtomb@plt+0x15dac>
  41ab9c:	cbz	w8, 41abbc <wcrtomb@plt+0x15dbc>
  41aba0:	ldr	x10, [x9]
  41aba4:	cbnz	x10, 41abb4 <wcrtomb@plt+0x15db4>
  41aba8:	b	41abbc <wcrtomb@plt+0x15dbc>
  41abac:	cmp	w10, w8
  41abb0:	b.eq	41abbc <wcrtomb@plt+0x15dbc>  // b.none
  41abb4:	add	x9, x9, #0x30
  41abb8:	b	41ab8c <wcrtomb@plt+0x15d8c>
  41abbc:	ldr	x0, [x27, #32]
  41abc0:	bl	439ac0 <argp_parse@@Base+0xae04>
  41abc4:	mov	x4, x0
  41abc8:	mov	w0, wzr
  41abcc:	mov	w1, wzr
  41abd0:	mov	x2, x22
  41abd4:	mov	x3, x23
  41abd8:	bl	4041d0 <error@plt>
  41abdc:	b	41ac44 <wcrtomb@plt+0x15e44>
  41abe0:	cbz	x8, 41abe8 <wcrtomb@plt+0x15de8>
  41abe4:	blr	x8
  41abe8:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41abec:	mov	w2, #0x5                   	// #5
  41abf0:	mov	x0, xzr
  41abf4:	add	x1, x1, #0xa78
  41abf8:	bl	404bd0 <dcgettext@plt>
  41abfc:	ldr	w8, [x27, #24]
  41ac00:	mov	x2, x0
  41ac04:	mov	x9, x28
  41ac08:	ldur	x3, [x9, #-32]
  41ac0c:	ldur	w10, [x9, #-24]
  41ac10:	cbnz	x3, 41ac28 <wcrtomb@plt+0x15e28>
  41ac14:	cbnz	w10, 41ac28 <wcrtomb@plt+0x15e28>
  41ac18:	cbz	w8, 41ac38 <wcrtomb@plt+0x15e38>
  41ac1c:	ldr	x10, [x9]
  41ac20:	cbnz	x10, 41ac30 <wcrtomb@plt+0x15e30>
  41ac24:	b	41ac38 <wcrtomb@plt+0x15e38>
  41ac28:	cmp	w10, w8
  41ac2c:	b.eq	41ac38 <wcrtomb@plt+0x15e38>  // b.none
  41ac30:	add	x9, x9, #0x30
  41ac34:	b	41ac08 <wcrtomb@plt+0x15e08>
  41ac38:	mov	w0, wzr
  41ac3c:	mov	w1, wzr
  41ac40:	bl	4041d0 <error@plt>
  41ac44:	str	w19, [x26, #2944]
  41ac48:	ldr	x27, [x27]
  41ac4c:	cbnz	x27, 41ab08 <wcrtomb@plt+0x15d08>
  41ac50:	ldr	x0, [x24, #3608]
  41ac54:	cbz	x0, 41ac6c <wcrtomb@plt+0x15e6c>
  41ac58:	ldr	x8, [x0, #8]
  41ac5c:	str	x8, [x24, #3608]
  41ac60:	bl	4049b0 <free@plt>
  41ac64:	ldr	x0, [x24, #3608]
  41ac68:	cbnz	x0, 41ac58 <wcrtomb@plt+0x15e58>
  41ac6c:	mov	x20, xzr
  41ac70:	b	41ad3c <wcrtomb@plt+0x15f3c>
  41ac74:	ldr	x19, [x21, #24]
  41ac78:	mov	x0, x19
  41ac7c:	bl	404170 <strlen@plt>
  41ac80:	ldr	x8, [x20, #2256]
  41ac84:	cmp	x8, x0
  41ac88:	b.cs	41acbc <wcrtomb@plt+0x15ebc>  // b.hs, b.nlast
  41ac8c:	lsl	x8, x8, #1
  41ac90:	cbz	x8, 41ad60 <wcrtomb@plt+0x15f60>
  41ac94:	cmp	x8, x0
  41ac98:	b.cc	41ac8c <wcrtomb@plt+0x15e8c>  // b.lo, b.ul, b.last
  41ac9c:	ldr	x0, [x22, #2248]
  41aca0:	str	x8, [x20, #2256]
  41aca4:	bl	4049b0 <free@plt>
  41aca8:	ldr	x8, [x20, #2256]
  41acac:	add	x0, x8, #0x2
  41acb0:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  41acb4:	str	x0, [x22, #2248]
  41acb8:	b	41acc0 <wcrtomb@plt+0x15ec0>
  41acbc:	ldr	x0, [x22, #2248]
  41acc0:	mov	x1, x19
  41acc4:	bl	404b00 <strcpy@plt>
  41acc8:	ldr	x19, [x22, #2248]
  41accc:	mov	x0, x19
  41acd0:	bl	404170 <strlen@plt>
  41acd4:	add	x8, x19, x0
  41acd8:	sub	x8, x8, #0x1
  41acdc:	cmp	x8, x19
  41ace0:	b.ls	41acf8 <wcrtomb@plt+0x15ef8>  // b.plast
  41ace4:	ldrb	w9, [x8]
  41ace8:	cmp	w9, #0x2f
  41acec:	b.ne	41acf8 <wcrtomb@plt+0x15ef8>  // b.any
  41acf0:	strb	wzr, [x8], #-1
  41acf4:	b	41acdc <wcrtomb@plt+0x15edc>
  41acf8:	ldrb	w8, [x23, #244]
  41acfc:	cbz	w8, 41ad0c <wcrtomb@plt+0x15f0c>
  41ad00:	mov	x0, x19
  41ad04:	bl	418784 <wcrtomb@plt+0x13984>
  41ad08:	ldr	x19, [x22, #2248]
  41ad0c:	ldr	w8, [x21, #16]
  41ad10:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41ad14:	add	x20, x20, #0x908
  41ad18:	str	x19, [x20, #24]
  41ad1c:	str	w8, [x20, #16]
  41ad20:	bl	41c144 <wcrtomb@plt+0x17344>
  41ad24:	b	41ad3c <wcrtomb@plt+0x15f3c>
  41ad28:	ldr	x19, [x22, #2248]
  41ad2c:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41ad30:	add	x20, x20, #0x908
  41ad34:	str	wzr, [x20, #16]
  41ad38:	str	x19, [x20, #24]
  41ad3c:	mov	x0, x20
  41ad40:	ldp	x20, x19, [sp, #368]
  41ad44:	ldp	x22, x21, [sp, #352]
  41ad48:	ldp	x24, x23, [sp, #336]
  41ad4c:	ldp	x26, x25, [sp, #320]
  41ad50:	ldp	x28, x27, [sp, #304]
  41ad54:	ldp	x29, x30, [sp, #288]
  41ad58:	add	sp, sp, #0x180
  41ad5c:	ret
  41ad60:	str	xzr, [x20, #2256]
  41ad64:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  41ad68:	mov	x0, x28
  41ad6c:	bl	4266cc <wcrtomb@plt+0x218cc>
  41ad70:	ldr	x0, [x21, #24]
  41ad74:	bl	42622c <wcrtomb@plt+0x2142c>
  41ad78:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41ad7c:	ldr	x8, [x8, #496]
  41ad80:	cbz	x8, 41ad88 <wcrtomb@plt+0x15f88>
  41ad84:	blr	x8
  41ad88:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  41ad8c:	add	x1, x1, #0x390
  41ad90:	mov	w2, #0x5                   	// #5
  41ad94:	mov	x0, xzr
  41ad98:	bl	404bd0 <dcgettext@plt>
  41ad9c:	mov	x19, x0
  41ada0:	add	x0, sp, #0x30
  41ada4:	bl	4280cc <wcrtomb@plt+0x232cc>
  41ada8:	mov	x4, x0
  41adac:	mov	w0, wzr
  41adb0:	mov	w1, wzr
  41adb4:	mov	x2, x19
  41adb8:	mov	x3, x24
  41adbc:	bl	4041d0 <error@plt>
  41adc0:	bl	40d698 <wcrtomb@plt+0x8898>
  41adc4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41adc8:	ldr	x8, [x8, #496]
  41adcc:	cbz	x8, 41add4 <wcrtomb@plt+0x15fd4>
  41add0:	blr	x8
  41add4:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x12808>
  41add8:	add	x2, x2, #0x8d0
  41addc:	mov	w0, wzr
  41ade0:	mov	w1, wzr
  41ade4:	mov	w3, w27
  41ade8:	bl	4041d0 <error@plt>
  41adec:	bl	40d698 <wcrtomb@plt+0x8898>
  41adf0:	bl	404ce0 <__errno_location@plt>
  41adf4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41adf8:	ldr	x8, [x8, #496]
  41adfc:	ldr	w19, [x0]
  41ae00:	cbz	x8, 41ae08 <wcrtomb@plt+0x16008>
  41ae04:	blr	x8
  41ae08:	mov	x0, x24
  41ae0c:	bl	4398cc <argp_parse@@Base+0xac10>
  41ae10:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  41ae14:	mov	x3, x0
  41ae18:	add	x2, x2, #0xb24
  41ae1c:	mov	w0, wzr
  41ae20:	mov	w1, w19
  41ae24:	bl	4041d0 <error@plt>
  41ae28:	bl	40d698 <wcrtomb@plt+0x8898>
  41ae2c:	stp	x29, x30, [sp, #-48]!
  41ae30:	stp	x20, x19, [sp, #32]
  41ae34:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41ae38:	ldrb	w19, [x8, #128]
  41ae3c:	mov	w0, wzr
  41ae40:	str	x21, [sp, #16]
  41ae44:	mov	x29, sp
  41ae48:	bl	41a330 <wcrtomb@plt+0x15530>
  41ae4c:	mov	x20, x0
  41ae50:	cbz	w19, 41ae9c <wcrtomb@plt+0x1609c>
  41ae54:	cbz	x20, 41ae88 <wcrtomb@plt+0x16088>
  41ae58:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41ae5c:	ldr	w8, [x20, #16]
  41ae60:	cmp	w8, #0x1
  41ae64:	b.ne	41af34 <wcrtomb@plt+0x16134>  // b.any
  41ae68:	ldr	x0, [x20, #24]
  41ae6c:	bl	43a998 <argp_parse@@Base+0xbcdc>
  41ae70:	bl	419860 <wcrtomb@plt+0x14a60>
  41ae74:	str	w0, [x19, #2272]
  41ae78:	mov	w0, wzr
  41ae7c:	bl	41a330 <wcrtomb@plt+0x15530>
  41ae80:	mov	x20, x0
  41ae84:	cbnz	x0, 41ae5c <wcrtomb@plt+0x1605c>
  41ae88:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41ae8c:	ldr	w1, [x8, #2272]
  41ae90:	cbz	w1, 41afbc <wcrtomb@plt+0x161bc>
  41ae94:	mov	x0, xzr
  41ae98:	b	41af1c <wcrtomb@plt+0x1611c>
  41ae9c:	cbz	x20, 41afbc <wcrtomb@plt+0x161bc>
  41aea0:	mov	w21, wzr
  41aea4:	ldr	w8, [x20, #16]
  41aea8:	ldr	x0, [x20, #24]
  41aeac:	cmp	w8, #0x1
  41aeb0:	b.ne	41aee0 <wcrtomb@plt+0x160e0>  // b.any
  41aeb4:	bl	43a998 <argp_parse@@Base+0xbcdc>
  41aeb8:	bl	419860 <wcrtomb@plt+0x14a60>
  41aebc:	mov	w19, w0
  41aec0:	mov	w0, wzr
  41aec4:	bl	41a330 <wcrtomb@plt+0x15530>
  41aec8:	cbz	x0, 41af0c <wcrtomb@plt+0x1610c>
  41aecc:	ldr	w8, [x0, #16]
  41aed0:	ldr	x0, [x0, #24]
  41aed4:	cmp	w8, #0x1
  41aed8:	b.eq	41aeb4 <wcrtomb@plt+0x160b4>  // b.none
  41aedc:	b	41aee4 <wcrtomb@plt+0x160e4>
  41aee0:	mov	w19, w21
  41aee4:	mov	w2, #0x1                   	// #1
  41aee8:	mov	w1, w19
  41aeec:	mov	x3, xzr
  41aef0:	bl	41b050 <wcrtomb@plt+0x16250>
  41aef4:	mov	w0, wzr
  41aef8:	bl	41a330 <wcrtomb@plt+0x15530>
  41aefc:	mov	x20, x0
  41af00:	mov	w21, w19
  41af04:	cbnz	x0, 41aea4 <wcrtomb@plt+0x160a4>
  41af08:	b	41afbc <wcrtomb@plt+0x161bc>
  41af0c:	cmp	w19, w21
  41af10:	b.eq	41afbc <wcrtomb@plt+0x161bc>  // b.none
  41af14:	mov	x0, xzr
  41af18:	mov	w1, w19
  41af1c:	ldp	x20, x19, [sp, #32]
  41af20:	ldr	x21, [sp, #16]
  41af24:	mov	w2, wzr
  41af28:	mov	x3, xzr
  41af2c:	ldp	x29, x30, [sp], #48
  41af30:	b	41b050 <wcrtomb@plt+0x16250>
  41af34:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41af38:	ldr	x0, [x21, #2264]
  41af3c:	bl	41afcc <wcrtomb@plt+0x161cc>
  41af40:	ldr	x0, [x20, #24]
  41af44:	bl	41b004 <wcrtomb@plt+0x16204>
  41af48:	mov	w10, #0x1                   	// #1
  41af4c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41af50:	strb	w10, [x0, #36]
  41af54:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41af58:	str	x0, [x10, #2288]
  41af5c:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41af60:	ldr	w9, [x9, #2276]
  41af64:	ldr	w8, [x19, #2272]
  41af68:	ldrb	w10, [x10, #2280]
  41af6c:	str	x0, [x21, #2264]
  41af70:	cmp	w9, #0x2
  41af74:	str	w8, [x0, #40]
  41af78:	mov	w8, #0x40000000            	// #1073741824
  41af7c:	cset	w9, eq  // eq = none
  41af80:	cmp	w10, #0x0
  41af84:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41af88:	csel	w8, wzr, w8, ne  // ne = any
  41af8c:	ldr	w10, [x10, #2284]
  41af90:	bfi	w8, w9, #28, #1
  41af94:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41af98:	ldr	w9, [x9, #164]
  41af9c:	orr	w8, w8, w10
  41afa0:	str	xzr, [x0]
  41afa4:	stp	xzr, xzr, [x0, #56]
  41afa8:	orr	w8, w8, w9
  41afac:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41afb0:	str	xzr, [x0, #48]
  41afb4:	str	w8, [x0, #32]
  41afb8:	str	x0, [x9, #2296]
  41afbc:	ldp	x20, x19, [sp, #32]
  41afc0:	ldr	x21, [sp, #16]
  41afc4:	ldp	x29, x30, [sp], #48
  41afc8:	ret
  41afcc:	cbz	x0, 41b000 <wcrtomb@plt+0x16200>
  41afd0:	stp	x29, x30, [sp, #-32]!
  41afd4:	str	x19, [sp, #16]
  41afd8:	mov	x19, x0
  41afdc:	ldr	x0, [x0, #16]
  41afe0:	mov	x29, sp
  41afe4:	bl	4049b0 <free@plt>
  41afe8:	ldr	x0, [x19, #88]
  41afec:	bl	4049b0 <free@plt>
  41aff0:	mov	x0, x19
  41aff4:	ldr	x19, [sp, #16]
  41aff8:	ldp	x29, x30, [sp], #32
  41affc:	b	4049b0 <free@plt>
  41b000:	ret
  41b004:	stp	x29, x30, [sp, #-32]!
  41b008:	stp	x20, x19, [sp, #16]
  41b00c:	mov	x19, x0
  41b010:	mov	w0, #0x60                  	// #96
  41b014:	mov	x29, sp
  41b018:	bl	43a8f4 <argp_parse@@Base+0xbc38>
  41b01c:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  41b020:	add	x8, x8, #0x3ee
  41b024:	cmp	x19, #0x0
  41b028:	mov	x20, x0
  41b02c:	csel	x0, x8, x19, eq  // eq = none
  41b030:	bl	43a998 <argp_parse@@Base+0xbcdc>
  41b034:	str	x0, [x20, #16]
  41b038:	bl	404170 <strlen@plt>
  41b03c:	str	x0, [x20, #24]
  41b040:	mov	x0, x20
  41b044:	ldp	x20, x19, [sp, #16]
  41b048:	ldp	x29, x30, [sp], #32
  41b04c:	ret
  41b050:	stp	x29, x30, [sp, #-48]!
  41b054:	str	x21, [sp, #16]
  41b058:	stp	x20, x19, [sp, #32]
  41b05c:	mov	x29, sp
  41b060:	mov	x19, x3
  41b064:	mov	w20, w1
  41b068:	and	w21, w2, #0x1
  41b06c:	bl	41b004 <wcrtomb@plt+0x16204>
  41b070:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b074:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b078:	ldr	w9, [x9, #2276]
  41b07c:	ldrb	w10, [x10, #2280]
  41b080:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b084:	adrp	x12, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b088:	ldr	x14, [x8, #2288]
  41b08c:	adrp	x13, 46b000 <argp_program_version_hook@@Base+0x458>
  41b090:	cmp	w9, #0x2
  41b094:	ldr	w12, [x12, #2284]
  41b098:	mov	w11, #0x40000000            	// #1073741824
  41b09c:	cset	w9, eq  // eq = none
  41b0a0:	cmp	w10, #0x0
  41b0a4:	ldr	w13, [x13, #164]
  41b0a8:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b0ac:	csel	w11, wzr, w11, ne  // ne = any
  41b0b0:	add	x10, x10, #0x8f8
  41b0b4:	cmp	x14, #0x0
  41b0b8:	bfi	w11, w9, #28, #1
  41b0bc:	csel	x9, x10, x14, eq  // eq = none
  41b0c0:	orr	w10, w11, w12
  41b0c4:	orr	w10, w10, w13
  41b0c8:	str	w20, [x0, #40]
  41b0cc:	stp	xzr, x19, [x0, #56]
  41b0d0:	str	xzr, [x0, #48]
  41b0d4:	strb	w21, [x0, #36]
  41b0d8:	stp	xzr, x14, [x0]
  41b0dc:	str	w10, [x0, #32]
  41b0e0:	str	x0, [x9]
  41b0e4:	ldp	x20, x19, [sp, #32]
  41b0e8:	ldr	x21, [sp, #16]
  41b0ec:	str	x0, [x8, #2288]
  41b0f0:	ldp	x29, x30, [sp], #48
  41b0f4:	ret
  41b0f8:	stp	x29, x30, [sp, #-32]!
  41b0fc:	stp	x20, x19, [sp, #16]
  41b100:	mov	x29, sp
  41b104:	bl	41b004 <wcrtomb@plt+0x16204>
  41b108:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  41b10c:	ldrb	w8, [x20, #168]
  41b110:	mov	x19, x0
  41b114:	cbz	w8, 41b154 <wcrtomb@plt+0x16354>
  41b118:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b11c:	add	x8, x8, #0x8f8
  41b120:	ldr	x0, [x8]
  41b124:	ldp	x10, x9, [x0]
  41b128:	cmp	x9, #0x0
  41b12c:	csel	x8, x8, x9, eq  // eq = none
  41b130:	str	x10, [x8]
  41b134:	ldr	x8, [x0]
  41b138:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b13c:	add	x10, x10, #0x8f0
  41b140:	add	x11, x8, #0x8
  41b144:	cmp	x8, #0x0
  41b148:	csel	x8, x10, x11, eq  // eq = none
  41b14c:	str	x9, [x8]
  41b150:	bl	41afcc <wcrtomb@plt+0x161cc>
  41b154:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b158:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b15c:	ldr	x10, [x9, #2296]
  41b160:	ldr	x11, [x8, #2288]
  41b164:	str	x19, [x9, #2296]
  41b168:	stp	x10, xzr, [x19]
  41b16c:	cbnz	x11, 41b174 <wcrtomb@plt+0x16374>
  41b170:	str	x19, [x8, #2288]
  41b174:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b178:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b17c:	ldr	w8, [x8, #2276]
  41b180:	ldrb	w9, [x9, #2280]
  41b184:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b188:	ldr	w10, [x10, #2284]
  41b18c:	cmp	w8, #0x2
  41b190:	cset	w8, eq  // eq = none
  41b194:	cmp	w9, #0x0
  41b198:	mov	w9, #0x40000000            	// #1073741824
  41b19c:	csel	w9, wzr, w9, ne  // ne = any
  41b1a0:	bfi	w9, w8, #28, #1
  41b1a4:	orr	w8, w9, w10
  41b1a8:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41b1ac:	ldr	w9, [x9, #164]
  41b1b0:	str	wzr, [x19, #40]
  41b1b4:	stp	xzr, xzr, [x19, #56]
  41b1b8:	str	xzr, [x19, #48]
  41b1bc:	orr	w8, w8, w9
  41b1c0:	mov	w9, #0x1                   	// #1
  41b1c4:	strb	w9, [x19, #36]
  41b1c8:	str	w8, [x19, #32]
  41b1cc:	strb	w9, [x20, #168]
  41b1d0:	ldp	x20, x19, [sp, #16]
  41b1d4:	ldp	x29, x30, [sp], #32
  41b1d8:	ret
  41b1dc:	ldp	x9, x8, [x0]
  41b1e0:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b1e4:	add	x10, x10, #0x8f8
  41b1e8:	cmp	x8, #0x0
  41b1ec:	csel	x10, x10, x8, eq  // eq = none
  41b1f0:	str	x9, [x10]
  41b1f4:	ldr	x9, [x0]
  41b1f8:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b1fc:	add	x10, x10, #0x8f0
  41b200:	add	x11, x9, #0x8
  41b204:	cmp	x9, #0x0
  41b208:	csel	x9, x10, x11, eq  // eq = none
  41b20c:	str	x8, [x9]
  41b210:	ret
  41b214:	stp	x29, x30, [sp, #-64]!
  41b218:	stp	x22, x21, [sp, #32]
  41b21c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b220:	ldr	x8, [x21, #2296]
  41b224:	str	x23, [sp, #16]
  41b228:	stp	x20, x19, [sp, #48]
  41b22c:	mov	x19, x0
  41b230:	adrp	x22, 46b000 <argp_program_version_hook@@Base+0x458>
  41b234:	adrp	x23, 46b000 <argp_program_version_hook@@Base+0x458>
  41b238:	mov	x29, sp
  41b23c:	cbz	x8, 41b2b4 <wcrtomb@plt+0x164b4>
  41b240:	ldr	x9, [x8, #16]
  41b244:	ldrb	w9, [x9]
  41b248:	cbz	w9, 41b2a0 <wcrtomb@plt+0x164a0>
  41b24c:	mov	x0, x19
  41b250:	bl	41b330 <wcrtomb@plt+0x16530>
  41b254:	ldrb	w8, [x22, #168]
  41b258:	mov	x20, x0
  41b25c:	cbz	w8, 41b270 <wcrtomb@plt+0x16470>
  41b260:	ldr	x8, [x21, #2296]
  41b264:	cmp	x20, x8
  41b268:	b.ne	41b274 <wcrtomb@plt+0x16474>  // b.any
  41b26c:	strb	wzr, [x22, #168]
  41b270:	cbnz	x20, 41b2bc <wcrtomb@plt+0x164bc>
  41b274:	ldrb	w8, [x23, #128]
  41b278:	cbz	w8, 41b298 <wcrtomb@plt+0x16498>
  41b27c:	ldr	x8, [x21, #2296]
  41b280:	ldr	x8, [x8, #48]
  41b284:	cbz	x8, 41b298 <wcrtomb@plt+0x16498>
  41b288:	bl	41ae2c <wcrtomb@plt+0x1602c>
  41b28c:	ldr	x8, [x21, #2296]
  41b290:	ldr	x9, [x8, #48]
  41b294:	cbz	x9, 41b23c <wcrtomb@plt+0x1643c>
  41b298:	mov	w0, wzr
  41b29c:	b	41b31c <wcrtomb@plt+0x1651c>
  41b2a0:	ldr	w0, [x8, #40]
  41b2a4:	bl	419ad4 <wcrtomb@plt+0x14cd4>
  41b2a8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b2ac:	str	xzr, [x21, #2296]
  41b2b0:	str	xzr, [x8, #2288]
  41b2b4:	mov	w0, #0x1                   	// #1
  41b2b8:	b	41b31c <wcrtomb@plt+0x1651c>
  41b2bc:	ldr	x8, [x20, #24]
  41b2c0:	ldrb	w9, [x19, x8]
  41b2c4:	ldr	x8, [x20, #48]
  41b2c8:	cmp	w9, #0x2f
  41b2cc:	b.ne	41b2e8 <wcrtomb@plt+0x164e8>  // b.any
  41b2d0:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41b2d4:	ldr	w9, [x9, #164]
  41b2d8:	cbz	w9, 41b2e8 <wcrtomb@plt+0x164e8>
  41b2dc:	cbnz	x8, 41b2f0 <wcrtomb@plt+0x164f0>
  41b2e0:	mov	w8, #0x1                   	// #1
  41b2e4:	b	41b2ec <wcrtomb@plt+0x164ec>
  41b2e8:	add	x8, x8, #0x1
  41b2ec:	str	x8, [x20, #48]
  41b2f0:	ldr	w0, [x20, #40]
  41b2f4:	bl	419ad4 <wcrtomb@plt+0x14cd4>
  41b2f8:	ldr	x8, [x20, #48]
  41b2fc:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41b300:	ldr	x9, [x9, #248]
  41b304:	cmp	x8, #0x0
  41b308:	cset	w10, ne  // ne = any
  41b30c:	cmp	x8, x9
  41b310:	cset	w8, eq  // eq = none
  41b314:	cmp	x9, #0x0
  41b318:	csel	w0, w10, w8, eq  // eq = none
  41b31c:	ldp	x20, x19, [sp, #48]
  41b320:	ldp	x22, x21, [sp, #32]
  41b324:	ldr	x23, [sp, #16]
  41b328:	ldp	x29, x30, [sp], #64
  41b32c:	ret
  41b330:	stp	x29, x30, [sp, #-32]!
  41b334:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b338:	stp	x20, x19, [sp, #16]
  41b33c:	ldr	x19, [x8, #2296]
  41b340:	mov	x29, sp
  41b344:	cbz	x19, 41b370 <wcrtomb@plt+0x16570>
  41b348:	mov	x20, x0
  41b34c:	ldr	x0, [x19, #16]
  41b350:	ldrb	w8, [x0]
  41b354:	cbz	w8, 41b368 <wcrtomb@plt+0x16568>
  41b358:	ldr	w2, [x19, #32]
  41b35c:	mov	x1, x20
  41b360:	bl	4307d4 <argp_parse@@Base+0x1b18>
  41b364:	tbnz	w0, #0, 41b370 <wcrtomb@plt+0x16570>
  41b368:	ldr	x19, [x19]
  41b36c:	cbnz	x19, 41b34c <wcrtomb@plt+0x1654c>
  41b370:	mov	x0, x19
  41b374:	ldp	x20, x19, [sp, #16]
  41b378:	ldp	x29, x30, [sp], #32
  41b37c:	ret
  41b380:	stp	x29, x30, [sp, #-32]!
  41b384:	stp	x20, x19, [sp, #16]
  41b388:	ldr	x19, [x0, #8]
  41b38c:	mov	x8, x0
  41b390:	mov	w0, wzr
  41b394:	mov	x29, sp
  41b398:	cbz	x19, 41b408 <wcrtomb@plt+0x16608>
  41b39c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41b3a0:	ldr	x20, [x9, #248]
  41b3a4:	cbz	x20, 41b408 <wcrtomb@plt+0x16608>
  41b3a8:	ldrb	w8, [x8, #16]
  41b3ac:	cbz	w8, 41b3b8 <wcrtomb@plt+0x165b8>
  41b3b0:	mov	w0, wzr
  41b3b4:	b	41b408 <wcrtomb@plt+0x16608>
  41b3b8:	mov	x0, x19
  41b3bc:	bl	404170 <strlen@plt>
  41b3c0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b3c4:	ldr	x8, [x8, #2296]
  41b3c8:	cbz	x8, 41b404 <wcrtomb@plt+0x16604>
  41b3cc:	ldr	x9, [x8, #16]
  41b3d0:	ldrb	w9, [x9]
  41b3d4:	cbz	w9, 41b3e4 <wcrtomb@plt+0x165e4>
  41b3d8:	ldr	x9, [x8, #48]
  41b3dc:	cmp	x9, x20
  41b3e0:	b.cc	41b3b0 <wcrtomb@plt+0x165b0>  // b.lo, b.ul, b.last
  41b3e4:	ldr	x9, [x8, #24]
  41b3e8:	cmp	x0, x9
  41b3ec:	b.cc	41b3fc <wcrtomb@plt+0x165fc>  // b.lo, b.ul, b.last
  41b3f0:	ldrb	w9, [x19, x9]
  41b3f4:	cmp	w9, #0x2f
  41b3f8:	b.eq	41b3b0 <wcrtomb@plt+0x165b0>  // b.none
  41b3fc:	ldr	x8, [x8]
  41b400:	cbnz	x8, 41b3cc <wcrtomb@plt+0x165cc>
  41b404:	mov	w0, #0x1                   	// #1
  41b408:	ldp	x20, x19, [sp, #16]
  41b40c:	ldp	x29, x30, [sp], #32
  41b410:	ret
  41b414:	stp	x29, x30, [sp, #-96]!
  41b418:	stp	x20, x19, [sp, #80]
  41b41c:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b420:	stp	x22, x21, [sp, #64]
  41b424:	ldr	x21, [x20, #2296]
  41b428:	stp	x24, x23, [sp, #48]
  41b42c:	adrp	x22, 46b000 <argp_program_version_hook@@Base+0x458>
  41b430:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b434:	str	x27, [sp, #16]
  41b438:	stp	x26, x25, [sp, #32]
  41b43c:	mov	x29, sp
  41b440:	cbz	x21, 41b4dc <wcrtomb@plt+0x166dc>
  41b444:	adrp	x25, 44e000 <_obstack_memory_used@@Base+0x12808>
  41b448:	adrp	x26, 44e000 <_obstack_memory_used@@Base+0x12808>
  41b44c:	adrp	x24, 46b000 <argp_program_version_hook@@Base+0x458>
  41b450:	add	x25, x25, #0x19
  41b454:	add	x26, x26, #0x0
  41b458:	mov	w27, #0x2                   	// #2
  41b45c:	ldr	x9, [x24, #248]
  41b460:	ldr	x8, [x21, #48]
  41b464:	cbz	x9, 41b474 <wcrtomb@plt+0x16674>
  41b468:	cmp	x8, x9
  41b46c:	b.cc	41b478 <wcrtomb@plt+0x16678>  // b.lo, b.ul, b.last
  41b470:	b	41b4d4 <wcrtomb@plt+0x166d4>
  41b474:	cbnz	x8, 41b4d4 <wcrtomb@plt+0x166d4>
  41b478:	ldr	x0, [x21, #16]
  41b47c:	ldrb	w8, [x0]
  41b480:	cbz	w8, 41b4d4 <wcrtomb@plt+0x166d4>
  41b484:	bl	41b584 <wcrtomb@plt+0x16784>
  41b488:	ldr	x8, [x22, #496]
  41b48c:	cbz	x8, 41b494 <wcrtomb@plt+0x16694>
  41b490:	blr	x8
  41b494:	ldr	x8, [x21, #48]
  41b498:	mov	w2, #0x5                   	// #5
  41b49c:	mov	x0, xzr
  41b4a0:	cmp	x8, #0x0
  41b4a4:	csel	x1, x26, x25, eq  // eq = none
  41b4a8:	bl	404bd0 <dcgettext@plt>
  41b4ac:	ldr	x8, [x21, #16]
  41b4b0:	mov	x19, x0
  41b4b4:	mov	x0, x8
  41b4b8:	bl	4398cc <argp_parse@@Base+0xac10>
  41b4bc:	mov	x3, x0
  41b4c0:	mov	w0, wzr
  41b4c4:	mov	w1, wzr
  41b4c8:	mov	x2, x19
  41b4cc:	bl	4041d0 <error@plt>
  41b4d0:	str	w27, [x23, #2944]
  41b4d4:	ldr	x21, [x21]
  41b4d8:	cbnz	x21, 41b45c <wcrtomb@plt+0x1665c>
  41b4dc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41b4e0:	ldrb	w8, [x8, #128]
  41b4e4:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b4e8:	str	xzr, [x20, #2296]
  41b4ec:	str	xzr, [x9, #2288]
  41b4f0:	cbz	w8, 41b568 <wcrtomb@plt+0x16768>
  41b4f4:	mov	w0, #0x1                   	// #1
  41b4f8:	bl	41a330 <wcrtomb@plt+0x15530>
  41b4fc:	cbz	x0, 41b568 <wcrtomb@plt+0x16768>
  41b500:	adrp	x19, 44e000 <_obstack_memory_used@@Base+0x12808>
  41b504:	add	x19, x19, #0x0
  41b508:	mov	w24, #0x2                   	// #2
  41b50c:	ldr	x20, [x0, #24]
  41b510:	cbz	x20, 41b568 <wcrtomb@plt+0x16768>
  41b514:	mov	x0, x20
  41b518:	bl	41b584 <wcrtomb@plt+0x16784>
  41b51c:	ldr	x8, [x22, #496]
  41b520:	cbz	x8, 41b528 <wcrtomb@plt+0x16728>
  41b524:	blr	x8
  41b528:	mov	w2, #0x5                   	// #5
  41b52c:	mov	x0, xzr
  41b530:	mov	x1, x19
  41b534:	bl	404bd0 <dcgettext@plt>
  41b538:	mov	x21, x0
  41b53c:	mov	x0, x20
  41b540:	bl	4398cc <argp_parse@@Base+0xac10>
  41b544:	mov	x3, x0
  41b548:	mov	w0, wzr
  41b54c:	mov	w1, wzr
  41b550:	mov	x2, x21
  41b554:	bl	4041d0 <error@plt>
  41b558:	mov	w0, #0x1                   	// #1
  41b55c:	str	w24, [x23, #2944]
  41b560:	bl	41a330 <wcrtomb@plt+0x15530>
  41b564:	cbnz	x0, 41b50c <wcrtomb@plt+0x1670c>
  41b568:	ldp	x20, x19, [sp, #80]
  41b56c:	ldp	x22, x21, [sp, #64]
  41b570:	ldp	x24, x23, [sp, #48]
  41b574:	ldp	x26, x25, [sp, #32]
  41b578:	ldr	x27, [sp, #16]
  41b57c:	ldp	x29, x30, [sp], #96
  41b580:	ret
  41b584:	stp	x29, x30, [sp, #-32]!
  41b588:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b58c:	ldr	w8, [x8, #2276]
  41b590:	stp	x20, x19, [sp, #16]
  41b594:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b598:	mov	x29, sp
  41b59c:	cbnz	w8, 41b618 <wcrtomb@plt+0x16818>
  41b5a0:	mov	w1, wzr
  41b5a4:	bl	430620 <argp_parse@@Base+0x1964>
  41b5a8:	tbz	w0, #0, 41b618 <wcrtomb@plt+0x16818>
  41b5ac:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  41b5b0:	ldr	x8, [x20, #496]
  41b5b4:	mov	w9, #0x1                   	// #1
  41b5b8:	strb	w9, [x19, #2384]
  41b5bc:	cbz	x8, 41b5c4 <wcrtomb@plt+0x167c4>
  41b5c0:	blr	x8
  41b5c4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41b5c8:	add	x1, x1, #0xa8b
  41b5cc:	mov	w2, #0x5                   	// #5
  41b5d0:	mov	x0, xzr
  41b5d4:	bl	404bd0 <dcgettext@plt>
  41b5d8:	mov	x2, x0
  41b5dc:	mov	w0, wzr
  41b5e0:	mov	w1, wzr
  41b5e4:	bl	4041d0 <error@plt>
  41b5e8:	ldr	x8, [x20, #496]
  41b5ec:	cbz	x8, 41b5f4 <wcrtomb@plt+0x167f4>
  41b5f0:	blr	x8
  41b5f4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41b5f8:	add	x1, x1, #0xaba
  41b5fc:	mov	w2, #0x5                   	// #5
  41b600:	mov	x0, xzr
  41b604:	bl	404bd0 <dcgettext@plt>
  41b608:	mov	x2, x0
  41b60c:	mov	w0, wzr
  41b610:	mov	w1, wzr
  41b614:	bl	4041d0 <error@plt>
  41b618:	ldrb	w0, [x19, #2384]
  41b61c:	ldp	x20, x19, [sp, #16]
  41b620:	ldp	x29, x30, [sp], #32
  41b624:	ret
  41b628:	stp	x29, x30, [sp, #-32]!
  41b62c:	stp	x20, x19, [sp, #16]
  41b630:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b634:	ldr	x8, [x19, #2296]
  41b638:	mov	x29, sp
  41b63c:	cbz	x8, 41b6f0 <wcrtomb@plt+0x168f0>
  41b640:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41b644:	ldr	x9, [x9, #248]
  41b648:	ldr	x10, [x8, #48]
  41b64c:	cbz	x9, 41b65c <wcrtomb@plt+0x1685c>
  41b650:	cmp	x10, x9
  41b654:	b.cc	41b660 <wcrtomb@plt+0x16860>  // b.lo, b.ul, b.last
  41b658:	b	41b6f0 <wcrtomb@plt+0x168f0>
  41b65c:	cbnz	x10, 41b6f0 <wcrtomb@plt+0x168f0>
  41b660:	ldr	x8, [x8]
  41b664:	cbnz	x8, 41b648 <wcrtomb@plt+0x16848>
  41b668:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41b66c:	ldr	w8, [x8, #132]
  41b670:	cbz	w8, 41b698 <wcrtomb@plt+0x16898>
  41b674:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41b678:	add	x1, x1, #0x46
  41b67c:	mov	w2, #0x5                   	// #5
  41b680:	mov	x0, xzr
  41b684:	bl	404bd0 <dcgettext@plt>
  41b688:	mov	x2, x0
  41b68c:	mov	w0, wzr
  41b690:	mov	w1, wzr
  41b694:	bl	4041d0 <error@plt>
  41b698:	mov	w0, #0x1                   	// #1
  41b69c:	bl	420c68 <wcrtomb@plt+0x1be68>
  41b6a0:	ldr	x20, [x19, #2296]
  41b6a4:	cbz	x20, 41b6bc <wcrtomb@plt+0x168bc>
  41b6a8:	ldr	x0, [x20, #16]
  41b6ac:	bl	41b584 <wcrtomb@plt+0x16784>
  41b6b0:	cbnz	w0, 41b6bc <wcrtomb@plt+0x168bc>
  41b6b4:	ldr	x20, [x20]
  41b6b8:	cbnz	x20, 41b6a8 <wcrtomb@plt+0x168a8>
  41b6bc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41b6c0:	ldrb	w8, [x8, #128]
  41b6c4:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b6c8:	str	xzr, [x19, #2296]
  41b6cc:	str	xzr, [x9, #2288]
  41b6d0:	cbz	w8, 41b6f0 <wcrtomb@plt+0x168f0>
  41b6d4:	mov	w0, #0x1                   	// #1
  41b6d8:	bl	41a330 <wcrtomb@plt+0x15530>
  41b6dc:	cbz	x0, 41b6f0 <wcrtomb@plt+0x168f0>
  41b6e0:	ldr	x0, [x0, #24]
  41b6e4:	cbz	x0, 41b6f0 <wcrtomb@plt+0x168f0>
  41b6e8:	bl	41b584 <wcrtomb@plt+0x16784>
  41b6ec:	cbz	w0, 41b6d4 <wcrtomb@plt+0x168d4>
  41b6f0:	ldp	x20, x19, [sp, #16]
  41b6f4:	ldp	x29, x30, [sp], #32
  41b6f8:	ret
  41b6fc:	stp	x29, x30, [sp, #-96]!
  41b700:	stp	x28, x27, [sp, #16]
  41b704:	stp	x26, x25, [sp, #32]
  41b708:	stp	x24, x23, [sp, #48]
  41b70c:	stp	x22, x21, [sp, #64]
  41b710:	stp	x20, x19, [sp, #80]
  41b714:	mov	x29, sp
  41b718:	sub	sp, sp, #0x1b0
  41b71c:	bl	41ae2c <wcrtomb@plt+0x1602c>
  41b720:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b724:	ldr	x8, [x23, #2296]
  41b728:	cbnz	x8, 41b744 <wcrtomb@plt+0x16944>
  41b72c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41b730:	add	x0, x0, #0x94a
  41b734:	mov	w1, wzr
  41b738:	mov	w2, wzr
  41b73c:	mov	x3, xzr
  41b740:	bl	41b050 <wcrtomb@plt+0x16250>
  41b744:	adrp	x24, 46b000 <argp_program_version_hook@@Base+0x458>
  41b748:	ldr	x8, [x24, #320]
  41b74c:	cbz	x8, 41b770 <wcrtomb@plt+0x16970>
  41b750:	bl	419848 <wcrtomb@plt+0x14a48>
  41b754:	cbz	w0, 41b76c <wcrtomb@plt+0x1696c>
  41b758:	cmp	w0, #0x1
  41b75c:	b.ne	41ba80 <wcrtomb@plt+0x16c80>  // b.any
  41b760:	ldr	x8, [x23, #2296]
  41b764:	ldr	w8, [x8, #40]
  41b768:	cbz	w8, 41ba9c <wcrtomb@plt+0x16c9c>
  41b76c:	bl	413e38 <wcrtomb@plt+0xf038>
  41b770:	ldr	x20, [x23, #2296]
  41b774:	cbz	x20, 41b870 <wcrtomb@plt+0x16a70>
  41b778:	mov	x8, sp
  41b77c:	mov	w19, wzr
  41b780:	adrp	x22, 467000 <_obstack_memory_used@@Base+0x2b808>
  41b784:	add	x21, x8, #0x58
  41b788:	adrp	x25, 46b000 <argp_program_version_hook@@Base+0x458>
  41b78c:	ldr	x8, [x20, #48]
  41b790:	cbnz	x8, 41b85c <wcrtomb@plt+0x16a5c>
  41b794:	ldr	x8, [x20, #56]
  41b798:	cbnz	x8, 41b85c <wcrtomb@plt+0x16a5c>
  41b79c:	ldrb	w8, [x20, #35]
  41b7a0:	tbnz	w8, #4, 41b85c <wcrtomb@plt+0x16a5c>
  41b7a4:	ldr	w0, [x20, #40]
  41b7a8:	bl	419ad4 <wcrtomb@plt+0x14cd4>
  41b7ac:	ldr	x8, [x20, #16]
  41b7b0:	ldrb	w8, [x8]
  41b7b4:	cbz	w8, 41b85c <wcrtomb@plt+0x16a5c>
  41b7b8:	mov	x0, sp
  41b7bc:	bl	420c80 <wcrtomb@plt+0x1be80>
  41b7c0:	ldr	x0, [x20, #16]
  41b7c4:	mov	x1, x21
  41b7c8:	bl	419588 <wcrtomb@plt+0x14788>
  41b7cc:	cbz	w0, 41b7dc <wcrtomb@plt+0x169dc>
  41b7d0:	ldr	x0, [x20, #16]
  41b7d4:	bl	419d24 <wcrtomb@plt+0x14f24>
  41b7d8:	b	41b85c <wcrtomb@plt+0x16a5c>
  41b7dc:	ldr	w8, [sp, #104]
  41b7e0:	and	w8, w8, #0xf000
  41b7e4:	cmp	w8, #0x4, lsl #12
  41b7e8:	b.ne	41b854 <wcrtomb@plt+0x16a54>  // b.any
  41b7ec:	ldr	w8, [x25, #196]
  41b7f0:	ldr	w0, [x22, #1944]
  41b7f4:	ldr	x1, [x20, #16]
  41b7f8:	orr	w2, w8, #0x4000
  41b7fc:	bl	404cc0 <openat@plt>
  41b800:	tbnz	w0, #31, 41b824 <wcrtomb@plt+0x16a24>
  41b804:	mov	x1, x21
  41b808:	str	w0, [sp, #408]
  41b80c:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  41b810:	ldr	x8, [x20, #16]
  41b814:	cbz	w0, 41b830 <wcrtomb@plt+0x16a30>
  41b818:	mov	x0, x8
  41b81c:	bl	419d24 <wcrtomb@plt+0x14f24>
  41b820:	b	41b854 <wcrtomb@plt+0x16a54>
  41b824:	ldr	x0, [x20, #16]
  41b828:	bl	419c70 <wcrtomb@plt+0x14e70>
  41b82c:	b	41b854 <wcrtomb@plt+0x16a54>
  41b830:	mov	x0, x8
  41b834:	bl	43a998 <argp_parse@@Base+0xbcdc>
  41b838:	str	x0, [sp]
  41b83c:	ldr	x8, [x20, #48]
  41b840:	mov	x0, sp
  41b844:	mov	x1, x20
  41b848:	add	x8, x8, #0x1
  41b84c:	str	x8, [x20, #48]
  41b850:	bl	41bad8 <wcrtomb@plt+0x16cd8>
  41b854:	mov	x0, sp
  41b858:	bl	420d00 <wcrtomb@plt+0x1bf00>
  41b85c:	ldr	x20, [x20]
  41b860:	add	w19, w19, #0x1
  41b864:	cbnz	x20, 41b78c <wcrtomb@plt+0x1698c>
  41b868:	ldr	x0, [x23, #2296]
  41b86c:	b	41b878 <wcrtomb@plt+0x16a78>
  41b870:	mov	x0, xzr
  41b874:	mov	w19, wzr
  41b878:	adrp	x2, 41b000 <wcrtomb@plt+0x16200>
  41b87c:	add	x2, x2, #0xcf0
  41b880:	mov	w1, w19
  41b884:	bl	41c1f0 <wcrtomb@plt+0x173f0>
  41b888:	cbz	x0, 41b8a8 <wcrtomb@plt+0x16aa8>
  41b88c:	mov	x8, xzr
  41b890:	mov	x9, x0
  41b894:	ldr	x10, [x9]
  41b898:	str	x8, [x9, #8]
  41b89c:	mov	x8, x9
  41b8a0:	mov	x9, x10
  41b8a4:	cbnz	x10, 41b894 <wcrtomb@plt+0x16a94>
  41b8a8:	adrp	x2, 41b000 <wcrtomb@plt+0x16200>
  41b8ac:	adrp	x3, 41b000 <wcrtomb@plt+0x16200>
  41b8b0:	str	x0, [x23, #2296]
  41b8b4:	add	x2, x2, #0xcfc
  41b8b8:	add	x3, x3, #0xd04
  41b8bc:	mov	x0, xzr
  41b8c0:	mov	x1, xzr
  41b8c4:	mov	x4, xzr
  41b8c8:	bl	432c6c <argp_parse@@Base+0x3fb0>
  41b8cc:	ldr	x21, [x23, #2296]
  41b8d0:	mov	x20, x0
  41b8d4:	cbz	x21, 41b9d8 <wcrtomb@plt+0x16bd8>
  41b8d8:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b8dc:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b8e0:	mov	x28, xzr
  41b8e4:	mov	w19, wzr
  41b8e8:	add	x25, x25, #0x8f8
  41b8ec:	add	x26, x26, #0x8f0
  41b8f0:	ldr	w0, [x21, #40]
  41b8f4:	ldr	x1, [x21, #16]
  41b8f8:	ldr	x27, [x21]
  41b8fc:	bl	418ad8 <wcrtomb@plt+0x13cd8>
  41b900:	str	x0, [x21, #88]
  41b904:	cbz	x28, 41b9b0 <wcrtomb@plt+0x16bb0>
  41b908:	mov	x0, x20
  41b90c:	mov	x1, x21
  41b910:	bl	43299c <argp_parse@@Base+0x3ce0>
  41b914:	cbz	x0, 41b9b0 <wcrtomb@plt+0x16bb0>
  41b918:	ldr	x8, [x21, #64]
  41b91c:	mov	x22, x0
  41b920:	cbz	x8, 41b964 <wcrtomb@plt+0x16b64>
  41b924:	ldr	x0, [x21, #72]
  41b928:	cbz	x0, 41b934 <wcrtomb@plt+0x16b34>
  41b92c:	mov	x1, x22
  41b930:	bl	41bd28 <wcrtomb@plt+0x16f28>
  41b934:	ldp	x9, x8, [x21]
  41b938:	mov	x0, x21
  41b93c:	cmp	x8, #0x0
  41b940:	csel	x10, x25, x8, eq  // eq = none
  41b944:	str	x9, [x10]
  41b948:	ldr	x9, [x21]
  41b94c:	add	x10, x9, #0x8
  41b950:	cmp	x9, #0x0
  41b954:	csel	x9, x26, x10, eq  // eq = none
  41b958:	str	x8, [x9]
  41b95c:	bl	41afcc <wcrtomb@plt+0x161cc>
  41b960:	b	41b9cc <wcrtomb@plt+0x16bcc>
  41b964:	ldr	x0, [x22, #72]
  41b968:	cbz	x0, 41b974 <wcrtomb@plt+0x16b74>
  41b96c:	mov	x1, x21
  41b970:	bl	41bd28 <wcrtomb@plt+0x16f28>
  41b974:	mov	x0, x20
  41b978:	mov	x1, x21
  41b97c:	bl	433540 <argp_parse@@Base+0x4884>
  41b980:	ldp	x9, x8, [x22]
  41b984:	mov	x0, x22
  41b988:	cmp	x8, #0x0
  41b98c:	csel	x10, x25, x8, eq  // eq = none
  41b990:	str	x9, [x10]
  41b994:	ldr	x9, [x22]
  41b998:	add	x10, x9, #0x8
  41b99c:	cmp	x9, #0x0
  41b9a0:	csel	x9, x26, x10, eq  // eq = none
  41b9a4:	str	x8, [x9]
  41b9a8:	bl	41afcc <wcrtomb@plt+0x161cc>
  41b9ac:	sub	w19, w19, #0x1
  41b9b0:	mov	x0, x20
  41b9b4:	mov	x1, x21
  41b9b8:	str	xzr, [x21, #48]
  41b9bc:	bl	433508 <argp_parse@@Base+0x484c>
  41b9c0:	cbz	x0, 41ba7c <wcrtomb@plt+0x16c7c>
  41b9c4:	add	w19, w19, #0x1
  41b9c8:	mov	x28, x21
  41b9cc:	mov	x21, x27
  41b9d0:	cbnz	x27, 41b8f0 <wcrtomb@plt+0x16af0>
  41b9d4:	b	41b9e0 <wcrtomb@plt+0x16be0>
  41b9d8:	mov	w19, wzr
  41b9dc:	mov	x28, xzr
  41b9e0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41b9e4:	mov	x0, x20
  41b9e8:	str	x28, [x8, #2288]
  41b9ec:	bl	432f34 <argp_parse@@Base+0x4278>
  41b9f0:	ldr	x0, [x23, #2296]
  41b9f4:	adrp	x2, 41b000 <wcrtomb@plt+0x16200>
  41b9f8:	add	x2, x2, #0xdbc
  41b9fc:	mov	w1, w19
  41ba00:	bl	41c1f0 <wcrtomb@plt+0x173f0>
  41ba04:	cbz	x0, 41ba4c <wcrtomb@plt+0x16c4c>
  41ba08:	mov	x8, xzr
  41ba0c:	mov	x9, x0
  41ba10:	ldr	x10, [x9]
  41ba14:	str	x8, [x9, #8]
  41ba18:	mov	x8, x9
  41ba1c:	mov	x9, x10
  41ba20:	cbnz	x10, 41ba10 <wcrtomb@plt+0x16c10>
  41ba24:	ldr	x8, [x24, #320]
  41ba28:	str	x0, [x23, #2296]
  41ba2c:	cbz	x8, 41ba5c <wcrtomb@plt+0x16c5c>
  41ba30:	cbz	x0, 41ba5c <wcrtomb@plt+0x16c5c>
  41ba34:	ldr	x8, [x0, #16]
  41ba38:	ldrb	w8, [x8]
  41ba3c:	cbnz	w8, 41ba54 <wcrtomb@plt+0x16c54>
  41ba40:	ldr	x0, [x0]
  41ba44:	cbnz	x0, 41ba34 <wcrtomb@plt+0x16c34>
  41ba48:	b	41ba5c <wcrtomb@plt+0x16c5c>
  41ba4c:	str	x0, [x23, #2296]
  41ba50:	b	41ba5c <wcrtomb@plt+0x16c5c>
  41ba54:	ldr	x0, [x0, #56]
  41ba58:	bl	413a80 <wcrtomb@plt+0xec80>
  41ba5c:	add	sp, sp, #0x1b0
  41ba60:	ldp	x20, x19, [sp, #80]
  41ba64:	ldp	x22, x21, [sp, #64]
  41ba68:	ldp	x24, x23, [sp, #48]
  41ba6c:	ldp	x26, x25, [sp, #32]
  41ba70:	ldp	x28, x27, [sp, #16]
  41ba74:	ldp	x29, x30, [sp], #96
  41ba78:	ret
  41ba7c:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  41ba80:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41ba84:	ldr	x8, [x8, #496]
  41ba88:	cbz	x8, 41ba90 <wcrtomb@plt+0x16c90>
  41ba8c:	blr	x8
  41ba90:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41ba94:	add	x1, x1, #0xa7
  41ba98:	b	41bab4 <wcrtomb@plt+0x16cb4>
  41ba9c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41baa0:	ldr	x8, [x8, #496]
  41baa4:	cbz	x8, 41baac <wcrtomb@plt+0x16cac>
  41baa8:	blr	x8
  41baac:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41bab0:	add	x1, x1, #0x5d
  41bab4:	mov	w2, #0x5                   	// #5
  41bab8:	mov	x0, xzr
  41babc:	bl	404bd0 <dcgettext@plt>
  41bac0:	mov	x2, x0
  41bac4:	mov	w0, wzr
  41bac8:	mov	w1, wzr
  41bacc:	bl	4041d0 <error@plt>
  41bad0:	mov	w0, #0x2                   	// #2
  41bad4:	bl	41f888 <wcrtomb@plt+0x1aa88>
  41bad8:	stp	x29, x30, [sp, #-96]!
  41badc:	stp	x28, x27, [sp, #16]
  41bae0:	stp	x26, x25, [sp, #32]
  41bae4:	stp	x24, x23, [sp, #48]
  41bae8:	stp	x22, x21, [sp, #64]
  41baec:	stp	x20, x19, [sp, #80]
  41baf0:	mov	x29, sp
  41baf4:	sub	sp, sp, #0x1d0
  41baf8:	mov	x26, x1
  41bafc:	mov	x19, x0
  41bb00:	bl	412f9c <wcrtomb@plt+0xe19c>
  41bb04:	str	x0, [x26, #56]
  41bb08:	bl	413a38 <wcrtomb@plt+0xec38>
  41bb0c:	cbz	x0, 41bccc <wcrtomb@plt+0x16ecc>
  41bb10:	ldr	x27, [x26, #24]
  41bb14:	mov	w9, #0x64                  	// #100
  41bb18:	mov	x21, x0
  41bb1c:	add	x8, x27, #0x64
  41bb20:	cmp	x27, #0x64
  41bb24:	csel	x24, x9, x8, cc  // cc = lo, ul, last
  41bb28:	add	x0, x24, #0x1
  41bb2c:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  41bb30:	ldr	w8, [x26, #40]
  41bb34:	ldr	x1, [x26, #16]
  41bb38:	mov	x22, x0
  41bb3c:	str	w8, [sp, #28]
  41bb40:	bl	404b00 <strcpy@plt>
  41bb44:	add	x8, x27, x0
  41bb48:	ldurb	w8, [x8, #-1]
  41bb4c:	cmp	w8, #0x2f
  41bb50:	b.eq	41bb64 <wcrtomb@plt+0x16d64>  // b.none
  41bb54:	add	x8, x27, #0x1
  41bb58:	mov	w9, #0x2f                  	// #47
  41bb5c:	strh	w9, [x22, x27]
  41bb60:	mov	x27, x8
  41bb64:	ldrb	w25, [x21]
  41bb68:	cbz	w25, 41bcbc <wcrtomb@plt+0x16ebc>
  41bb6c:	add	x8, sp, #0x20
  41bb70:	stp	x26, x19, [sp, #8]
  41bb74:	mov	x28, xzr
  41bb78:	mov	x19, xzr
  41bb7c:	add	x8, x8, #0x58
  41bb80:	str	x8, [sp]
  41bb84:	mov	x0, x21
  41bb88:	bl	404170 <strlen@plt>
  41bb8c:	and	w8, w25, #0xff
  41bb90:	cmp	w8, #0x44
  41bb94:	mov	x25, x0
  41bb98:	b.ne	41bc54 <wcrtomb@plt+0x16e54>  // b.any
  41bb9c:	add	x8, x25, x27
  41bba0:	cmp	x24, x8
  41bba4:	b.hi	41bbc8 <wcrtomb@plt+0x16dc8>  // b.pmore
  41bba8:	lsl	x24, x24, #1
  41bbac:	cbz	x24, 41bcec <wcrtomb@plt+0x16eec>
  41bbb0:	cmp	x24, x8
  41bbb4:	b.ls	41bba8 <wcrtomb@plt+0x16da8>  // b.plast
  41bbb8:	orr	x1, x24, #0x1
  41bbbc:	mov	x0, x22
  41bbc0:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  41bbc4:	mov	x22, x0
  41bbc8:	mov	x20, x27
  41bbcc:	add	x0, x22, x27
  41bbd0:	add	x27, x21, #0x1
  41bbd4:	mov	x1, x27
  41bbd8:	bl	404b00 <strcpy@plt>
  41bbdc:	ldr	w1, [sp, #28]
  41bbe0:	mov	x0, x22
  41bbe4:	mov	w2, wzr
  41bbe8:	mov	x3, x26
  41bbec:	bl	41b050 <wcrtomb@plt+0x16250>
  41bbf0:	mov	x26, x0
  41bbf4:	mov	x23, x0
  41bbf8:	cbz	x28, 41bc04 <wcrtomb@plt+0x16e04>
  41bbfc:	mov	x23, x28
  41bc00:	str	x26, [x19, #80]
  41bc04:	add	x0, sp, #0x20
  41bc08:	bl	420c80 <wcrtomb@plt+0x1be80>
  41bc0c:	ldr	x0, [sp, #16]
  41bc10:	str	x0, [sp, #424]
  41bc14:	ldr	w8, [x0, #408]
  41bc18:	tbnz	w8, #31, 41bc5c <wcrtomb@plt+0x16e5c>
  41bc1c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41bc20:	ldr	w8, [x8, #196]
  41bc24:	mov	x1, x27
  41bc28:	orr	w2, w8, #0x4000
  41bc2c:	bl	40a0e0 <wcrtomb@plt+0x52e0>
  41bc30:	mov	x27, x20
  41bc34:	tbnz	w0, #31, 41bc6c <wcrtomb@plt+0x16e6c>
  41bc38:	ldr	x1, [sp]
  41bc3c:	str	w0, [sp, #440]
  41bc40:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  41bc44:	cbz	w0, 41bc98 <wcrtomb@plt+0x16e98>
  41bc48:	mov	x0, x22
  41bc4c:	bl	419d24 <wcrtomb@plt+0x14f24>
  41bc50:	b	41bc74 <wcrtomb@plt+0x16e74>
  41bc54:	mov	x23, x28
  41bc58:	b	41bc88 <wcrtomb@plt+0x16e88>
  41bc5c:	neg	w19, w8
  41bc60:	bl	404ce0 <__errno_location@plt>
  41bc64:	str	w19, [x0]
  41bc68:	mov	x27, x20
  41bc6c:	mov	x0, x22
  41bc70:	bl	419c70 <wcrtomb@plt+0x14e70>
  41bc74:	add	x0, sp, #0x20
  41bc78:	bl	420d00 <wcrtomb@plt+0x1bf00>
  41bc7c:	mov	x19, x26
  41bc80:	ldr	x26, [sp, #8]
  41bc84:	mov	x28, x23
  41bc88:	add	x21, x25, x21
  41bc8c:	ldrb	w25, [x21, #1]!
  41bc90:	cbnz	w25, 41bb84 <wcrtomb@plt+0x16d84>
  41bc94:	b	41bcc0 <wcrtomb@plt+0x16ec0>
  41bc98:	mov	x0, x22
  41bc9c:	bl	43a998 <argp_parse@@Base+0xbcdc>
  41bca0:	str	x0, [sp, #32]
  41bca4:	add	x0, sp, #0x20
  41bca8:	mov	x1, x26
  41bcac:	bl	41bad8 <wcrtomb@plt+0x16cd8>
  41bcb0:	add	x0, sp, #0x20
  41bcb4:	bl	40c16c <wcrtomb@plt+0x736c>
  41bcb8:	b	41bc74 <wcrtomb@plt+0x16e74>
  41bcbc:	mov	x23, xzr
  41bcc0:	mov	x0, x22
  41bcc4:	bl	4049b0 <free@plt>
  41bcc8:	str	x23, [x26, #72]
  41bccc:	add	sp, sp, #0x1d0
  41bcd0:	ldp	x20, x19, [sp, #80]
  41bcd4:	ldp	x22, x21, [sp, #64]
  41bcd8:	ldp	x24, x23, [sp, #48]
  41bcdc:	ldp	x26, x25, [sp, #32]
  41bce0:	ldp	x28, x27, [sp, #16]
  41bce4:	ldp	x29, x30, [sp], #96
  41bce8:	ret
  41bcec:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  41bcf0:	ldr	x0, [x0, #16]
  41bcf4:	ldr	x1, [x1, #16]
  41bcf8:	b	404900 <strcmp@plt>
  41bcfc:	ldr	x0, [x0, #88]
  41bd00:	b	432c14 <argp_parse@@Base+0x3f58>
  41bd04:	stp	x29, x30, [sp, #-16]!
  41bd08:	ldr	x0, [x0, #88]
  41bd0c:	ldr	x1, [x1, #88]
  41bd10:	mov	x29, sp
  41bd14:	bl	404900 <strcmp@plt>
  41bd18:	cmp	w0, #0x0
  41bd1c:	cset	w0, eq  // eq = none
  41bd20:	ldp	x29, x30, [sp], #16
  41bd24:	ret
  41bd28:	stp	x29, x30, [sp, #-64]!
  41bd2c:	stp	x24, x23, [sp, #16]
  41bd30:	stp	x22, x21, [sp, #32]
  41bd34:	stp	x20, x19, [sp, #48]
  41bd38:	mov	x29, sp
  41bd3c:	cbz	x0, 41bda8 <wcrtomb@plt+0x16fa8>
  41bd40:	ldr	x8, [x0, #64]
  41bd44:	ldp	x22, x21, [x1, #16]
  41bd48:	mov	x19, x0
  41bd4c:	ldr	x20, [x8, #24]
  41bd50:	ldr	x8, [x19, #24]
  41bd54:	sub	x8, x8, x20
  41bd58:	add	x24, x8, x21
  41bd5c:	add	x0, x24, #0x1
  41bd60:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  41bd64:	mov	x1, x22
  41bd68:	mov	x23, x0
  41bd6c:	bl	404b00 <strcpy@plt>
  41bd70:	ldr	x8, [x19, #16]
  41bd74:	add	x1, x8, x20
  41bd78:	bl	4045c0 <strcat@plt>
  41bd7c:	ldr	x0, [x19, #16]
  41bd80:	bl	4049b0 <free@plt>
  41bd84:	ldp	x0, x8, [x19, #56]
  41bd88:	stp	x23, x24, [x19, #16]
  41bd8c:	mov	x2, x20
  41bd90:	mov	x3, x22
  41bd94:	ldr	x1, [x8, #16]
  41bd98:	mov	x4, x21
  41bd9c:	bl	412ecc <wcrtomb@plt+0xe0cc>
  41bda0:	ldr	x19, [x19, #80]
  41bda4:	cbnz	x19, 41bd50 <wcrtomb@plt+0x16f50>
  41bda8:	ldp	x20, x19, [sp, #48]
  41bdac:	ldp	x22, x21, [sp, #32]
  41bdb0:	ldp	x24, x23, [sp, #16]
  41bdb4:	ldp	x29, x30, [sp], #64
  41bdb8:	ret
  41bdbc:	ldr	x8, [x1, #48]
  41bdc0:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41bdc4:	ldr	x9, [x9, #248]
  41bdc8:	ldr	x10, [x0, #48]
  41bdcc:	cmp	x8, #0x0
  41bdd0:	cset	w11, ne  // ne = any
  41bdd4:	cmp	x8, x9
  41bdd8:	cset	w8, cs  // cs = hs, nlast
  41bddc:	cmp	x10, #0x0
  41bde0:	cset	w12, ne  // ne = any
  41bde4:	cmp	x10, x9
  41bde8:	cset	w10, cs  // cs = hs, nlast
  41bdec:	cmp	x9, #0x0
  41bdf0:	csel	w8, w11, w8, eq  // eq = none
  41bdf4:	csel	w9, w12, w10, eq  // eq = none
  41bdf8:	subs	w8, w8, w9
  41bdfc:	b.eq	41be08 <wcrtomb@plt+0x17008>  // b.none
  41be00:	mov	w0, w8
  41be04:	ret
  41be08:	ldr	x0, [x0, #16]
  41be0c:	ldr	x1, [x1, #16]
  41be10:	b	404900 <strcmp@plt>
  41be14:	stp	x29, x30, [sp, #-48]!
  41be18:	stp	x22, x21, [sp, #16]
  41be1c:	stp	x20, x19, [sp, #32]
  41be20:	mov	x19, x0
  41be24:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  41be28:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41be2c:	mov	x29, sp
  41be30:	mov	x0, x19
  41be34:	bl	41b330 <wcrtomb@plt+0x16530>
  41be38:	mov	x20, x0
  41be3c:	cbnz	x0, 41be68 <wcrtomb@plt+0x17068>
  41be40:	ldrb	w8, [x21, #128]
  41be44:	cbz	w8, 41be68 <wcrtomb@plt+0x17068>
  41be48:	ldr	x8, [x22, #2296]
  41be4c:	cbz	x8, 41be68 <wcrtomb@plt+0x17068>
  41be50:	ldr	x8, [x8, #48]
  41be54:	cbz	x8, 41be68 <wcrtomb@plt+0x17068>
  41be58:	bl	41ae2c <wcrtomb@plt+0x1602c>
  41be5c:	ldr	x8, [x22, #2296]
  41be60:	ldr	x8, [x8, #48]
  41be64:	cbz	x8, 41be30 <wcrtomb@plt+0x17030>
  41be68:	mov	x0, x20
  41be6c:	ldp	x20, x19, [sp, #32]
  41be70:	ldp	x22, x21, [sp, #16]
  41be74:	ldp	x29, x30, [sp], #48
  41be78:	ret
  41be7c:	stp	x29, x30, [sp, #-32]!
  41be80:	str	x19, [sp, #16]
  41be84:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41be88:	ldr	x8, [x19, #3600]
  41be8c:	mov	x29, sp
  41be90:	cbnz	x8, 41bea4 <wcrtomb@plt+0x170a4>
  41be94:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41be98:	ldr	x8, [x8, #2296]
  41be9c:	str	x8, [x19, #3600]
  41bea0:	cbz	x8, 41bec0 <wcrtomb@plt+0x170c0>
  41bea4:	ldr	x9, [x8, #48]
  41bea8:	cbnz	x9, 41beb8 <wcrtomb@plt+0x170b8>
  41beac:	ldr	x9, [x8, #16]
  41beb0:	ldrb	w9, [x9]
  41beb4:	cbnz	w9, 41bec8 <wcrtomb@plt+0x170c8>
  41beb8:	ldr	x8, [x8]
  41bebc:	b	41be9c <wcrtomb@plt+0x1709c>
  41bec0:	mov	x0, xzr
  41bec4:	b	41bedc <wcrtomb@plt+0x170dc>
  41bec8:	ldr	w0, [x8, #40]
  41becc:	mov	w9, #0x1                   	// #1
  41bed0:	str	x9, [x8, #48]
  41bed4:	bl	419ad4 <wcrtomb@plt+0x14cd4>
  41bed8:	ldr	x0, [x19, #3600]
  41bedc:	ldr	x19, [sp, #16]
  41bee0:	ldp	x29, x30, [sp], #32
  41bee4:	ret
  41bee8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41beec:	ldr	x8, [x8, #2296]
  41bef0:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41bef4:	str	xzr, [x9, #3600]
  41bef8:	cbz	x8, 41bf08 <wcrtomb@plt+0x17108>
  41befc:	str	xzr, [x8, #48]
  41bf00:	ldr	x8, [x8]
  41bf04:	cbnz	x8, 41befc <wcrtomb@plt+0x170fc>
  41bf08:	ret
  41bf0c:	stp	x29, x30, [sp, #-64]!
  41bf10:	stp	x24, x23, [sp, #16]
  41bf14:	stp	x22, x21, [sp, #32]
  41bf18:	stp	x20, x19, [sp, #48]
  41bf1c:	mov	x29, sp
  41bf20:	mov	x19, x1
  41bf24:	mov	x20, x0
  41bf28:	bl	404170 <strlen@plt>
  41bf2c:	mov	x21, x0
  41bf30:	mov	x0, x19
  41bf34:	bl	404170 <strlen@plt>
  41bf38:	add	x22, x0, #0x1
  41bf3c:	cbz	x21, 41bf54 <wcrtomb@plt+0x17154>
  41bf40:	add	x8, x21, x20
  41bf44:	ldurb	w8, [x8, #-1]
  41bf48:	cmp	w8, #0x2f
  41bf4c:	cset	w24, ne  // ne = any
  41bf50:	b	41bf58 <wcrtomb@plt+0x17158>
  41bf54:	mov	x24, xzr
  41bf58:	add	x8, x22, x21
  41bf5c:	add	x0, x8, x24
  41bf60:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  41bf64:	mov	x1, x20
  41bf68:	mov	x2, x21
  41bf6c:	mov	x23, x0
  41bf70:	bl	4040f0 <memcpy@plt>
  41bf74:	add	x8, x23, x21
  41bf78:	mov	w9, #0x2f                  	// #47
  41bf7c:	add	x0, x8, x24
  41bf80:	mov	x1, x19
  41bf84:	mov	x2, x22
  41bf88:	strb	w9, [x8]
  41bf8c:	bl	4040f0 <memcpy@plt>
  41bf90:	mov	x0, x23
  41bf94:	ldp	x20, x19, [sp, #48]
  41bf98:	ldp	x22, x21, [sp, #32]
  41bf9c:	ldp	x24, x23, [sp, #16]
  41bfa0:	ldp	x29, x30, [sp], #64
  41bfa4:	ret
  41bfa8:	sub	x8, x0, #0x1
  41bfac:	ldrb	w9, [x8, #1]!
  41bfb0:	cmp	w9, #0x2f
  41bfb4:	b.eq	41bfac <wcrtomb@plt+0x171ac>  // b.none
  41bfb8:	cbz	w9, 41bff4 <wcrtomb@plt+0x171f4>
  41bfbc:	and	w9, w9, #0xff
  41bfc0:	cmp	w9, #0x2f
  41bfc4:	add	x10, x8, #0x1
  41bfc8:	b.ne	41bfe8 <wcrtomb@plt+0x171e8>  // b.any
  41bfcc:	subs	x1, x1, #0x1
  41bfd0:	b.eq	41bffc <wcrtomb@plt+0x171fc>  // b.none
  41bfd4:	ldrb	w9, [x8, #1]!
  41bfd8:	cmp	w9, #0x2f
  41bfdc:	b.eq	41bfd4 <wcrtomb@plt+0x171d4>  // b.none
  41bfe0:	cbnz	w9, 41bfbc <wcrtomb@plt+0x171bc>
  41bfe4:	b	41bff4 <wcrtomb@plt+0x171f4>
  41bfe8:	ldrb	w9, [x10]
  41bfec:	mov	x8, x10
  41bff0:	cbnz	w9, 41bfbc <wcrtomb@plt+0x171bc>
  41bff4:	mov	x0, #0xffffffffffffffff    	// #-1
  41bff8:	ret
  41bffc:	sub	x0, x10, x0
  41c000:	ret
  41c004:	ldrb	w8, [x0]
  41c008:	cmp	w8, #0x2e
  41c00c:	b.ne	41c02c <wcrtomb@plt+0x1722c>  // b.any
  41c010:	ldrb	w9, [x0, #1]
  41c014:	cmp	w9, #0x2e
  41c018:	b.ne	41c02c <wcrtomb@plt+0x1722c>  // b.any
  41c01c:	ldrb	w9, [x0, #2]
  41c020:	cbz	w9, 41c050 <wcrtomb@plt+0x17250>
  41c024:	cmp	w9, #0x2f
  41c028:	b.eq	41c050 <wcrtomb@plt+0x17250>  // b.none
  41c02c:	add	x0, x0, #0x1
  41c030:	ands	w8, w8, #0xff
  41c034:	b.eq	41c048 <wcrtomb@plt+0x17248>  // b.none
  41c038:	cmp	w8, #0x2f
  41c03c:	b.eq	41c004 <wcrtomb@plt+0x17204>  // b.none
  41c040:	ldrb	w8, [x0], #1
  41c044:	b	41c030 <wcrtomb@plt+0x17230>
  41c048:	mov	w0, wzr
  41c04c:	ret
  41c050:	mov	w0, #0x1                   	// #1
  41c054:	ret
  41c058:	stp	x29, x30, [sp, #-32]!
  41c05c:	stp	x20, x19, [sp, #16]
  41c060:	cmp	w0, #0x43
  41c064:	mov	x19, x1
  41c068:	mov	x29, sp
  41c06c:	b.eq	41c09c <wcrtomb@plt+0x1729c>  // b.none
  41c070:	mov	w20, w0
  41c074:	cmp	w0, #0x54
  41c078:	b.eq	41c0b8 <wcrtomb@plt+0x172b8>  // b.none
  41c07c:	cmp	w20, #0x100
  41c080:	b.ne	41c0e8 <wcrtomb@plt+0x172e8>  // b.any
  41c084:	bl	41a250 <wcrtomb@plt+0x15450>
  41c088:	mov	x8, x0
  41c08c:	mov	w0, wzr
  41c090:	str	wzr, [x8, #16]
  41c094:	str	x19, [x8, #24]
  41c098:	b	41c0d4 <wcrtomb@plt+0x172d4>
  41c09c:	bl	41a250 <wcrtomb@plt+0x15450>
  41c0a0:	mov	x8, x0
  41c0a4:	mov	w9, #0x1                   	// #1
  41c0a8:	mov	w0, wzr
  41c0ac:	str	w9, [x8, #16]
  41c0b0:	str	x19, [x8, #24]
  41c0b4:	b	41c138 <wcrtomb@plt+0x17338>
  41c0b8:	bl	41a250 <wcrtomb@plt+0x15450>
  41c0bc:	mov	x8, x0
  41c0c0:	mov	w9, #0x2                   	// #2
  41c0c4:	mov	w0, wzr
  41c0c8:	stp	x19, xzr, [x8, #24]
  41c0cc:	str	xzr, [x8, #48]
  41c0d0:	str	w9, [x8, #16]
  41c0d4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41c0d8:	ldr	x9, [x8, #3592]
  41c0dc:	add	x9, x9, #0x1
  41c0e0:	str	x9, [x8, #3592]
  41c0e4:	b	41c138 <wcrtomb@plt+0x17338>
  41c0e8:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  41c0ec:	add	x8, x8, #0x838
  41c0f0:	ldur	x10, [x8, #-32]
  41c0f4:	ldur	w9, [x8, #-24]
  41c0f8:	cbnz	x10, 41c108 <wcrtomb@plt+0x17308>
  41c0fc:	cbnz	w9, 41c108 <wcrtomb@plt+0x17308>
  41c100:	ldr	x10, [x8]
  41c104:	cbz	x10, 41c134 <wcrtomb@plt+0x17334>
  41c108:	cmp	w9, w20
  41c10c:	add	x8, x8, #0x30
  41c110:	b.ne	41c0f0 <wcrtomb@plt+0x172f0>  // b.any
  41c114:	bl	41a250 <wcrtomb@plt+0x15450>
  41c118:	mov	x8, x0
  41c11c:	mov	w0, wzr
  41c120:	mov	w9, #0x4                   	// #4
  41c124:	str	w20, [x8, #24]
  41c128:	str	w9, [x8, #16]
  41c12c:	str	x19, [x8, #32]
  41c130:	b	41c138 <wcrtomb@plt+0x17338>
  41c134:	mov	w0, #0x7                   	// #7
  41c138:	ldp	x20, x19, [sp, #16]
  41c13c:	ldp	x29, x30, [sp], #32
  41c140:	ret
  41c144:	stp	x29, x30, [sp, #-32]!
  41c148:	stp	x20, x19, [sp, #16]
  41c14c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41c150:	ldr	x19, [x9, #2304]
  41c154:	mov	x29, sp
  41c158:	ldr	x8, [x19]
  41c15c:	str	x8, [x9, #2304]
  41c160:	cbz	x8, 41c168 <wcrtomb@plt+0x17368>
  41c164:	str	xzr, [x8, #8]
  41c168:	ldr	w8, [x19, #16]
  41c16c:	cmp	w8, #0x4
  41c170:	b.eq	41c184 <wcrtomb@plt+0x17384>  // b.none
  41c174:	cmp	w8, #0x3
  41c178:	b.eq	41c1e0 <wcrtomb@plt+0x173e0>  // b.none
  41c17c:	cmp	w8, #0x1
  41c180:	b.ne	41c1c4 <wcrtomb@plt+0x173c4>  // b.any
  41c184:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41c188:	ldr	w8, [x8, #348]
  41c18c:	cmp	w8, #0x8
  41c190:	b.eq	41c19c <wcrtomb@plt+0x1739c>  // b.none
  41c194:	cmp	w8, #0x3
  41c198:	b.ne	41c1b8 <wcrtomb@plt+0x173b8>  // b.any
  41c19c:	str	xzr, [x19]
  41c1a0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41c1a4:	ldr	x9, [x8, #3608]
  41c1a8:	str	x9, [x19, #8]
  41c1ac:	cbz	x9, 41c1b4 <wcrtomb@plt+0x173b4>
  41c1b0:	str	x19, [x9]
  41c1b4:	str	x19, [x8, #3608]
  41c1b8:	ldp	x20, x19, [sp, #16]
  41c1bc:	ldp	x29, x30, [sp], #32
  41c1c0:	ret
  41c1c4:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41c1c8:	ldr	x0, [x20, #3608]
  41c1cc:	cbz	x0, 41c1e0 <wcrtomb@plt+0x173e0>
  41c1d0:	ldr	x8, [x0, #8]
  41c1d4:	str	x8, [x20, #3608]
  41c1d8:	bl	4049b0 <free@plt>
  41c1dc:	b	41c1c8 <wcrtomb@plt+0x173c8>
  41c1e0:	mov	x0, x19
  41c1e4:	ldp	x20, x19, [sp, #16]
  41c1e8:	ldp	x29, x30, [sp], #32
  41c1ec:	b	4049b0 <free@plt>
  41c1f0:	sub	sp, sp, #0x40
  41c1f4:	stp	x20, x19, [sp, #48]
  41c1f8:	cmp	w1, #0x1
  41c1fc:	mov	x20, x0
  41c200:	stp	x29, x30, [sp, #16]
  41c204:	stp	x22, x21, [sp, #32]
  41c208:	add	x29, sp, #0x10
  41c20c:	b.eq	41c320 <wcrtomb@plt+0x17520>  // b.none
  41c210:	mov	x19, x2
  41c214:	cmp	w1, #0x2
  41c218:	b.ne	41c248 <wcrtomb@plt+0x17448>  // b.any
  41c21c:	ldr	x1, [x20]
  41c220:	mov	x0, x20
  41c224:	blr	x19
  41c228:	cmp	w0, #0x1
  41c22c:	b.lt	41c320 <wcrtomb@plt+0x17520>  // b.tstop
  41c230:	ldr	x8, [x20]
  41c234:	str	x8, [sp, #8]
  41c238:	str	x20, [x8]
  41c23c:	str	xzr, [x20]
  41c240:	mov	x20, x8
  41c244:	b	41c320 <wcrtomb@plt+0x17520>
  41c248:	add	w8, w1, #0x1
  41c24c:	add	w9, w1, #0x2
  41c250:	cmp	w8, #0x0
  41c254:	csinc	w8, w9, w1, lt  // lt = tstop
  41c258:	asr	w8, w8, #1
  41c25c:	mov	x21, x20
  41c260:	mov	w10, w8
  41c264:	mov	x9, x21
  41c268:	ldr	x21, [x21]
  41c26c:	subs	w10, w10, #0x1
  41c270:	b.ne	41c264 <wcrtomb@plt+0x17464>  // b.any
  41c274:	cmp	w1, #0x0
  41c278:	cinc	w10, w1, lt  // lt = tstop
  41c27c:	mov	x0, x20
  41c280:	mov	w1, w8
  41c284:	mov	x2, x19
  41c288:	asr	w22, w10, #1
  41c28c:	str	xzr, [x9]
  41c290:	bl	41c1f0 <wcrtomb@plt+0x173f0>
  41c294:	mov	x20, x0
  41c298:	mov	x0, x21
  41c29c:	mov	w1, w22
  41c2a0:	mov	x2, x19
  41c2a4:	bl	41c1f0 <wcrtomb@plt+0x173f0>
  41c2a8:	cmp	x20, #0x0
  41c2ac:	mov	x21, x0
  41c2b0:	cset	w9, ne  // ne = any
  41c2b4:	add	x8, sp, #0x8
  41c2b8:	cbz	x0, 41c310 <wcrtomb@plt+0x17510>
  41c2bc:	cbz	x20, 41c310 <wcrtomb@plt+0x17510>
  41c2c0:	add	x22, sp, #0x8
  41c2c4:	mov	x0, x20
  41c2c8:	mov	x1, x21
  41c2cc:	blr	x19
  41c2d0:	tbnz	w0, #31, 41c2e8 <wcrtomb@plt+0x174e8>
  41c2d4:	ldr	x10, [x21]
  41c2d8:	mov	x8, x21
  41c2dc:	mov	x9, x21
  41c2e0:	mov	x21, x10
  41c2e4:	b	41c2f8 <wcrtomb@plt+0x174f8>
  41c2e8:	ldr	x10, [x20]
  41c2ec:	mov	x8, x20
  41c2f0:	mov	x9, x20
  41c2f4:	mov	x20, x10
  41c2f8:	cmp	x20, #0x0
  41c2fc:	str	x9, [x22]
  41c300:	cset	w9, ne  // ne = any
  41c304:	cbz	x21, 41c310 <wcrtomb@plt+0x17510>
  41c308:	mov	x22, x8
  41c30c:	cbnz	x20, 41c2c4 <wcrtomb@plt+0x174c4>
  41c310:	cmp	w9, #0x0
  41c314:	csel	x9, x20, x21, ne  // ne = any
  41c318:	str	x9, [x8]
  41c31c:	ldr	x20, [sp, #8]
  41c320:	mov	x0, x20
  41c324:	ldp	x20, x19, [sp, #48]
  41c328:	ldp	x22, x21, [sp, #32]
  41c32c:	ldp	x29, x30, [sp, #16]
  41c330:	add	sp, sp, #0x40
  41c334:	ret
  41c338:	stp	x29, x30, [sp, #-80]!
  41c33c:	stp	x28, x25, [sp, #16]
  41c340:	stp	x24, x23, [sp, #32]
  41c344:	stp	x22, x21, [sp, #48]
  41c348:	stp	x20, x19, [sp, #64]
  41c34c:	mov	x29, sp
  41c350:	sub	sp, sp, #0x240
  41c354:	mov	w19, w0
  41c358:	mov	x0, sp
  41c35c:	mov	x20, x1
  41c360:	bl	41c6c0 <wcrtomb@plt+0x178c0>
  41c364:	tbz	w0, #0, 41c448 <wcrtomb@plt+0x17648>
  41c368:	mov	w8, #0x1                   	// #1
  41c36c:	str	x20, [sp, #24]
  41c370:	str	w19, [sp]
  41c374:	strb	w8, [sp, #4]
  41c378:	stp	xzr, xzr, [sp, #64]
  41c37c:	ldr	x8, [x20, #152]
  41c380:	cbz	x8, 41c450 <wcrtomb@plt+0x17650>
  41c384:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41c388:	ldr	w8, [x8, #404]
  41c38c:	cmp	w8, #0x2
  41c390:	b.eq	41c3a0 <wcrtomb@plt+0x175a0>  // b.none
  41c394:	cmp	w8, #0x1
  41c398:	b.eq	41c4e0 <wcrtomb@plt+0x176e0>  // b.none
  41c39c:	cbnz	w8, 41c66c <wcrtomb@plt+0x1786c>
  41c3a0:	mov	w2, #0x3                   	// #3
  41c3a4:	mov	w0, w19
  41c3a8:	mov	x1, xzr
  41c3ac:	stp	xzr, xzr, [sp, #64]
  41c3b0:	str	xzr, [x20, #264]
  41c3b4:	bl	404370 <lseek@plt>
  41c3b8:	cmn	x0, #0x1
  41c3bc:	b.eq	41c42c <wcrtomb@plt+0x1762c>  // b.none
  41c3c0:	mov	x21, x0
  41c3c4:	mov	x22, xzr
  41c3c8:	mov	w2, #0x4                   	// #4
  41c3cc:	mov	w0, w19
  41c3d0:	mov	x1, x21
  41c3d4:	bl	404370 <lseek@plt>
  41c3d8:	orr	x8, x22, x21
  41c3dc:	mov	x22, x0
  41c3e0:	cbnz	x8, 41c3f0 <wcrtomb@plt+0x175f0>
  41c3e4:	ldr	x8, [x20, #136]
  41c3e8:	cmp	x22, x8
  41c3ec:	b.eq	41c4e8 <wcrtomb@plt+0x176e8>  // b.none
  41c3f0:	sub	x23, x22, x21
  41c3f4:	add	x1, sp, #0x40
  41c3f8:	mov	x0, x20
  41c3fc:	stp	x21, x23, [sp, #64]
  41c400:	bl	41d418 <wcrtomb@plt+0x18618>
  41c404:	ldr	x8, [x20, #264]
  41c408:	mov	w2, #0x3                   	// #3
  41c40c:	mov	w0, w19
  41c410:	mov	x1, x22
  41c414:	add	x8, x8, x23
  41c418:	str	x8, [x20, #264]
  41c41c:	bl	404370 <lseek@plt>
  41c420:	mov	x21, x0
  41c424:	cmn	x0, #0x1
  41c428:	b.ne	41c3c8 <wcrtomb@plt+0x175c8>  // b.any
  41c42c:	bl	404ce0 <__errno_location@plt>
  41c430:	ldr	w8, [x0]
  41c434:	cmp	w8, #0x6
  41c438:	b.ne	41c4f8 <wcrtomb@plt+0x176f8>  // b.any
  41c43c:	str	xzr, [sp, #72]
  41c440:	ldr	x8, [x20, #136]
  41c444:	b	41c458 <wcrtomb@plt+0x17658>
  41c448:	mov	w0, #0x3                   	// #3
  41c44c:	b	41c6a4 <wcrtomb@plt+0x178a4>
  41c450:	ldr	x8, [x20, #136]
  41c454:	str	xzr, [x20, #264]
  41c458:	add	x1, sp, #0x40
  41c45c:	mov	x0, x20
  41c460:	str	x8, [sp, #64]
  41c464:	bl	41d418 <wcrtomb@plt+0x18618>
  41c468:	ldr	x8, [sp, #32]
  41c46c:	ldr	x9, [x8, #56]
  41c470:	cbz	x9, 41c4d8 <wcrtomb@plt+0x176d8>
  41c474:	ldr	x8, [x8, #24]
  41c478:	cbz	x8, 41c484 <wcrtomb@plt+0x17684>
  41c47c:	mov	x0, sp
  41c480:	blr	x8
  41c484:	tbnz	w19, #31, 41c4d8 <wcrtomb@plt+0x176d8>
  41c488:	ldp	x9, x8, [sp, #16]
  41c48c:	ldr	x10, [x8, #264]
  41c490:	ldr	x0, [x8, #8]
  41c494:	ldr	x1, [x8, #136]
  41c498:	sub	x2, x10, x9
  41c49c:	bl	404f1c <wcrtomb@plt+0x11c>
  41c4a0:	mov	x19, xzr
  41c4a4:	ldr	x8, [sp, #24]
  41c4a8:	ldr	x8, [x8, #288]
  41c4ac:	cmp	x19, x8
  41c4b0:	b.cs	41c4d8 <wcrtomb@plt+0x176d8>  // b.hs, b.nlast
  41c4b4:	ldr	x8, [sp, #32]
  41c4b8:	ldr	x8, [x8, #56]
  41c4bc:	cbz	x8, 41c66c <wcrtomb@plt+0x1786c>
  41c4c0:	mov	x0, sp
  41c4c4:	mov	x1, x19
  41c4c8:	blr	x8
  41c4cc:	add	x19, x19, #0x1
  41c4d0:	tbnz	w0, #0, 41c4a4 <wcrtomb@plt+0x176a4>
  41c4d4:	b	41c66c <wcrtomb@plt+0x1786c>
  41c4d8:	mov	w19, #0x1                   	// #1
  41c4dc:	b	41c670 <wcrtomb@plt+0x17870>
  41c4e0:	mov	w21, w19
  41c4e4:	b	41c500 <wcrtomb@plt+0x17700>
  41c4e8:	mov	w0, w19
  41c4ec:	mov	x1, xzr
  41c4f0:	mov	w2, wzr
  41c4f4:	bl	404370 <lseek@plt>
  41c4f8:	ldr	x20, [sp, #24]
  41c4fc:	ldr	w21, [sp]
  41c500:	stp	xzr, xzr, [sp, #48]
  41c504:	str	xzr, [x20, #264]
  41c508:	ldr	x8, [sp, #32]
  41c50c:	ldr	x8, [x8, #48]
  41c510:	cbz	x8, 41c528 <wcrtomb@plt+0x17728>
  41c514:	mov	x0, sp
  41c518:	mov	w1, wzr
  41c51c:	mov	x2, xzr
  41c520:	blr	x8
  41c524:	tbz	w0, #0, 41c66c <wcrtomb@plt+0x1786c>
  41c528:	add	x1, sp, #0x40
  41c52c:	mov	w2, #0x200                 	// #512
  41c530:	mov	w0, w21
  41c534:	bl	4196d4 <wcrtomb@plt+0x148d4>
  41c538:	add	x8, x0, #0x1
  41c53c:	mov	x22, x0
  41c540:	cmp	x8, #0x2
  41c544:	b.cc	41c62c <wcrtomb@plt+0x1782c>  // b.lo, b.ul, b.last
  41c548:	mov	x24, xzr
  41c54c:	mov	x25, xzr
  41c550:	mov	x23, xzr
  41c554:	add	x8, sp, #0x40
  41c558:	mov	x9, x22
  41c55c:	cbz	x9, 41c5b0 <wcrtomb@plt+0x177b0>
  41c560:	ldrb	w10, [x8], #1
  41c564:	sub	x9, x9, #0x1
  41c568:	cbz	w10, 41c55c <wcrtomb@plt+0x1775c>
  41c56c:	cbnz	x25, 41c574 <wcrtomb@plt+0x17774>
  41c570:	str	x23, [sp, #48]
  41c574:	add	x24, x22, x25
  41c578:	str	x24, [sp, #56]
  41c57c:	ldr	x8, [x20, #264]
  41c580:	add	x8, x8, x22
  41c584:	str	x8, [x20, #264]
  41c588:	ldr	x8, [sp, #32]
  41c58c:	ldr	x8, [x8, #48]
  41c590:	cbz	x8, 41c5f0 <wcrtomb@plt+0x177f0>
  41c594:	mov	x0, sp
  41c598:	add	x2, sp, #0x40
  41c59c:	mov	w1, #0x1                   	// #1
  41c5a0:	blr	x8
  41c5a4:	mov	x25, x24
  41c5a8:	tbnz	w0, #0, 41c600 <wcrtomb@plt+0x17800>
  41c5ac:	b	41c66c <wcrtomb@plt+0x1786c>
  41c5b0:	cbz	x25, 41c600 <wcrtomb@plt+0x17800>
  41c5b4:	add	x1, sp, #0x30
  41c5b8:	mov	x0, x20
  41c5bc:	bl	41d418 <wcrtomb@plt+0x18618>
  41c5c0:	ldr	x8, [sp, #32]
  41c5c4:	str	xzr, [sp, #56]
  41c5c8:	ldr	x8, [x8, #48]
  41c5cc:	cbz	x8, 41c5f8 <wcrtomb@plt+0x177f8>
  41c5d0:	mov	x0, sp
  41c5d4:	mov	w1, #0x1                   	// #1
  41c5d8:	mov	x2, xzr
  41c5dc:	blr	x8
  41c5e0:	mov	x24, xzr
  41c5e4:	mov	x25, xzr
  41c5e8:	tbnz	w0, #0, 41c600 <wcrtomb@plt+0x17800>
  41c5ec:	b	41c66c <wcrtomb@plt+0x1786c>
  41c5f0:	mov	x25, x24
  41c5f4:	b	41c600 <wcrtomb@plt+0x17800>
  41c5f8:	mov	x24, xzr
  41c5fc:	mov	x25, xzr
  41c600:	add	x1, sp, #0x40
  41c604:	mov	w2, #0x200                 	// #512
  41c608:	mov	w0, w21
  41c60c:	add	x23, x23, x22
  41c610:	bl	4196d4 <wcrtomb@plt+0x148d4>
  41c614:	add	x8, x0, #0x1
  41c618:	mov	x22, x0
  41c61c:	cmp	x8, #0x1
  41c620:	b.hi	41c554 <wcrtomb@plt+0x17754>  // b.pmore
  41c624:	cbnz	x24, 41c634 <wcrtomb@plt+0x17834>
  41c628:	b	41c630 <wcrtomb@plt+0x17830>
  41c62c:	mov	x23, xzr
  41c630:	str	x23, [sp, #48]
  41c634:	add	x1, sp, #0x30
  41c638:	mov	x0, x20
  41c63c:	bl	41d418 <wcrtomb@plt+0x18618>
  41c640:	ldr	x8, [x20, #264]
  41c644:	add	x8, x8, x22
  41c648:	str	x8, [x20, #264]
  41c64c:	ldr	x8, [sp, #32]
  41c650:	ldr	x8, [x8, #48]
  41c654:	cbz	x8, 41c468 <wcrtomb@plt+0x17668>
  41c658:	mov	x0, sp
  41c65c:	mov	w1, #0x2                   	// #2
  41c660:	mov	x2, xzr
  41c664:	blr	x8
  41c668:	tbnz	w0, #0, 41c468 <wcrtomb@plt+0x17668>
  41c66c:	mov	w19, wzr
  41c670:	ldp	x9, x8, [sp, #16]
  41c674:	ldr	x8, [x8, #264]
  41c678:	sub	x0, x8, x9
  41c67c:	bl	40b2a4 <wcrtomb@plt+0x64a4>
  41c680:	ldr	x8, [sp, #32]
  41c684:	ldr	x8, [x8, #8]
  41c688:	cbz	x8, 41c698 <wcrtomb@plt+0x17898>
  41c68c:	mov	x0, sp
  41c690:	blr	x8
  41c694:	b	41c69c <wcrtomb@plt+0x1789c>
  41c698:	mov	w0, #0x1                   	// #1
  41c69c:	and	w8, w19, w0
  41c6a0:	eor	w0, w8, #0x1
  41c6a4:	add	sp, sp, #0x240
  41c6a8:	ldp	x20, x19, [sp, #64]
  41c6ac:	ldp	x22, x21, [sp, #48]
  41c6b0:	ldp	x24, x23, [sp, #32]
  41c6b4:	ldp	x28, x25, [sp, #16]
  41c6b8:	ldp	x29, x30, [sp], #80
  41c6bc:	ret
  41c6c0:	movi	v0.2d, #0x0
  41c6c4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41c6c8:	stp	q0, q0, [x0, #16]
  41c6cc:	str	q0, [x0]
  41c6d0:	ldr	w8, [x8, #3536]
  41c6d4:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41c6d8:	ldr	w9, [x9, #304]
  41c6dc:	cmp	w8, #0x0
  41c6e0:	csel	w8, w9, w8, eq  // eq = none
  41c6e4:	sub	w8, w8, #0x2
  41c6e8:	cmp	w8, #0x4
  41c6ec:	b.hi	41c6fc <wcrtomb@plt+0x178fc>  // b.pmore
  41c6f0:	mov	w9, #0x1d                  	// #29
  41c6f4:	lsr	w9, w9, w8
  41c6f8:	tbnz	w9, #0, 41c704 <wcrtomb@plt+0x17904>
  41c6fc:	mov	w0, wzr
  41c700:	ret
  41c704:	adrp	x9, 44e000 <_obstack_memory_used@@Base+0x12808>
  41c708:	add	x9, x9, #0xdf0
  41c70c:	ldr	x8, [x9, w8, sxtw #3]
  41c710:	str	x8, [x0, #32]
  41c714:	ldr	x1, [x8]
  41c718:	cbz	x1, 41c720 <wcrtomb@plt+0x17920>
  41c71c:	br	x1
  41c720:	mov	w0, #0x1                   	// #1
  41c724:	ret
  41c728:	sub	sp, sp, #0x50
  41c72c:	str	x19, [sp, #64]
  41c730:	mov	x19, x0
  41c734:	mov	x0, sp
  41c738:	stp	x29, x30, [sp, #48]
  41c73c:	add	x29, sp, #0x30
  41c740:	bl	41c6c0 <wcrtomb@plt+0x178c0>
  41c744:	tbz	w0, #0, 41c764 <wcrtomb@plt+0x17964>
  41c748:	ldr	x8, [sp, #32]
  41c74c:	str	x19, [sp, #24]
  41c750:	ldr	x8, [x8, #16]
  41c754:	cbz	x8, 41c764 <wcrtomb@plt+0x17964>
  41c758:	mov	x0, sp
  41c75c:	blr	x8
  41c760:	b	41c768 <wcrtomb@plt+0x17968>
  41c764:	mov	w0, wzr
  41c768:	ldr	x19, [sp, #64]
  41c76c:	ldp	x29, x30, [sp, #48]
  41c770:	and	w0, w0, #0x1
  41c774:	add	sp, sp, #0x50
  41c778:	ret
  41c77c:	sub	sp, sp, #0x50
  41c780:	str	x19, [sp, #64]
  41c784:	mov	x19, x0
  41c788:	mov	x0, sp
  41c78c:	stp	x29, x30, [sp, #48]
  41c790:	add	x29, sp, #0x30
  41c794:	bl	41c6c0 <wcrtomb@plt+0x178c0>
  41c798:	tbz	w0, #0, 41c7b8 <wcrtomb@plt+0x179b8>
  41c79c:	ldr	x8, [sp, #32]
  41c7a0:	str	x19, [sp, #24]
  41c7a4:	ldr	x8, [x8, #32]
  41c7a8:	cbz	x8, 41c7c0 <wcrtomb@plt+0x179c0>
  41c7ac:	mov	x0, sp
  41c7b0:	blr	x8
  41c7b4:	b	41c7c4 <wcrtomb@plt+0x179c4>
  41c7b8:	mov	w0, wzr
  41c7bc:	b	41c7c4 <wcrtomb@plt+0x179c4>
  41c7c0:	mov	w0, #0x1                   	// #1
  41c7c4:	ldr	x19, [sp, #64]
  41c7c8:	ldp	x29, x30, [sp, #48]
  41c7cc:	and	w0, w0, #0x1
  41c7d0:	add	sp, sp, #0x50
  41c7d4:	ret
  41c7d8:	sub	sp, sp, #0x60
  41c7dc:	stp	x20, x19, [sp, #80]
  41c7e0:	mov	w20, w0
  41c7e4:	mov	x0, sp
  41c7e8:	stp	x29, x30, [sp, #48]
  41c7ec:	str	x21, [sp, #64]
  41c7f0:	add	x29, sp, #0x30
  41c7f4:	mov	x19, x2
  41c7f8:	mov	x21, x1
  41c7fc:	bl	41c6c0 <wcrtomb@plt+0x178c0>
  41c800:	tbz	w0, #0, 41c880 <wcrtomb@plt+0x17a80>
  41c804:	mov	w0, w20
  41c808:	mov	x1, xzr
  41c80c:	mov	w2, wzr
  41c810:	str	x21, [sp, #24]
  41c814:	str	w20, [sp]
  41c818:	bl	404370 <lseek@plt>
  41c81c:	ldr	x8, [sp, #32]
  41c820:	cmp	x0, #0x0
  41c824:	cset	w9, eq  // eq = none
  41c828:	strb	w9, [sp, #4]
  41c82c:	str	xzr, [sp, #8]
  41c830:	ldr	x8, [x8, #40]
  41c834:	cbz	x8, 41c844 <wcrtomb@plt+0x17a44>
  41c838:	mov	x0, sp
  41c83c:	blr	x8
  41c840:	tbz	w0, #0, 41c878 <wcrtomb@plt+0x17a78>
  41c844:	mov	x20, xzr
  41c848:	ldr	x8, [sp, #24]
  41c84c:	ldr	x8, [x8, #288]
  41c850:	cmp	x20, x8
  41c854:	b.cs	41c888 <wcrtomb@plt+0x17a88>  // b.hs, b.nlast
  41c858:	ldr	x8, [sp, #32]
  41c85c:	ldr	x8, [x8, #64]
  41c860:	cbz	x8, 41c878 <wcrtomb@plt+0x17a78>
  41c864:	mov	x0, sp
  41c868:	mov	x1, x20
  41c86c:	blr	x8
  41c870:	add	x20, x20, #0x1
  41c874:	tbnz	w0, #0, 41c848 <wcrtomb@plt+0x17a48>
  41c878:	mov	w20, wzr
  41c87c:	b	41c88c <wcrtomb@plt+0x17a8c>
  41c880:	mov	w0, #0x3                   	// #3
  41c884:	b	41c8c0 <wcrtomb@plt+0x17ac0>
  41c888:	mov	w20, #0x1                   	// #1
  41c88c:	ldp	x9, x8, [sp, #16]
  41c890:	ldr	x8, [x8, #264]
  41c894:	sub	x8, x8, x9
  41c898:	str	x8, [x19]
  41c89c:	ldr	x8, [sp, #32]
  41c8a0:	ldr	x8, [x8, #8]
  41c8a4:	cbz	x8, 41c8b4 <wcrtomb@plt+0x17ab4>
  41c8a8:	mov	x0, sp
  41c8ac:	blr	x8
  41c8b0:	b	41c8b8 <wcrtomb@plt+0x17ab8>
  41c8b4:	mov	w0, #0x1                   	// #1
  41c8b8:	and	w8, w20, w0
  41c8bc:	eor	w0, w8, #0x1
  41c8c0:	ldp	x20, x19, [sp, #80]
  41c8c4:	ldr	x21, [sp, #64]
  41c8c8:	ldp	x29, x30, [sp, #48]
  41c8cc:	add	sp, sp, #0x60
  41c8d0:	ret
  41c8d4:	sub	sp, sp, #0x50
  41c8d8:	stp	x20, x19, [sp, #64]
  41c8dc:	mov	x20, x0
  41c8e0:	mov	x0, sp
  41c8e4:	stp	x29, x30, [sp, #48]
  41c8e8:	add	x29, sp, #0x30
  41c8ec:	bl	41c6c0 <wcrtomb@plt+0x178c0>
  41c8f0:	tbz	w0, #0, 41c920 <wcrtomb@plt+0x17b20>
  41c8f4:	ldr	x8, [sp, #32]
  41c8f8:	mov	w9, #0xffffffff            	// #-1
  41c8fc:	str	x20, [sp, #24]
  41c900:	str	w9, [sp]
  41c904:	ldr	x8, [x8, #40]
  41c908:	cbz	x8, 41c928 <wcrtomb@plt+0x17b28>
  41c90c:	mov	x0, sp
  41c910:	blr	x8
  41c914:	ldr	x20, [sp, #24]
  41c918:	mov	w19, w0
  41c91c:	b	41c92c <wcrtomb@plt+0x17b2c>
  41c920:	mov	w0, #0x3                   	// #3
  41c924:	b	41c964 <wcrtomb@plt+0x17b64>
  41c928:	mov	w19, #0x1                   	// #1
  41c92c:	ldr	x8, [x20, #264]
  41c930:	ldr	x9, [sp, #16]
  41c934:	sub	x0, x8, x9
  41c938:	bl	417e44 <wcrtomb@plt+0x13044>
  41c93c:	ldr	x8, [sp, #32]
  41c940:	ldr	x8, [x8, #8]
  41c944:	cbz	x8, 41c954 <wcrtomb@plt+0x17b54>
  41c948:	mov	x0, sp
  41c94c:	blr	x8
  41c950:	b	41c958 <wcrtomb@plt+0x17b58>
  41c954:	mov	w0, #0x1                   	// #1
  41c958:	and	w8, w19, w0
  41c95c:	mvn	w8, w8
  41c960:	and	w0, w8, #0x1
  41c964:	ldp	x20, x19, [sp, #64]
  41c968:	ldp	x29, x30, [sp, #48]
  41c96c:	add	sp, sp, #0x50
  41c970:	ret
  41c974:	stp	x29, x30, [sp, #-96]!
  41c978:	stp	x28, x27, [sp, #16]
  41c97c:	stp	x26, x25, [sp, #32]
  41c980:	stp	x24, x23, [sp, #48]
  41c984:	stp	x22, x21, [sp, #64]
  41c988:	stp	x20, x19, [sp, #80]
  41c98c:	mov	x29, sp
  41c990:	sub	sp, sp, #0x250
  41c994:	mov	w21, w0
  41c998:	mov	x0, sp
  41c99c:	mov	x20, x1
  41c9a0:	bl	41c6c0 <wcrtomb@plt+0x178c0>
  41c9a4:	mov	w19, #0x1                   	// #1
  41c9a8:	tbz	w0, #0, 41ccac <wcrtomb@plt+0x17eac>
  41c9ac:	ldr	x8, [sp, #32]
  41c9b0:	str	x20, [sp, #24]
  41c9b4:	str	w21, [sp]
  41c9b8:	strb	w19, [sp, #4]
  41c9bc:	ldr	x8, [x8, #40]
  41c9c0:	cbz	x8, 41c9f8 <wcrtomb@plt+0x17bf8>
  41c9c4:	mov	x0, sp
  41c9c8:	blr	x8
  41c9cc:	mov	w19, w0
  41c9d0:	mov	x0, x20
  41c9d4:	bl	404fb8 <wcrtomb@plt+0x1b8>
  41c9d8:	ldr	x8, [sp, #24]
  41c9dc:	tbnz	w19, #0, 41ca04 <wcrtomb@plt+0x17c04>
  41c9e0:	ldr	x8, [x8, #264]
  41c9e4:	ldr	x9, [sp, #16]
  41c9e8:	sub	x0, x8, x9
  41c9ec:	bl	417e44 <wcrtomb@plt+0x13044>
  41c9f0:	mov	w19, wzr
  41c9f4:	b	41cc94 <wcrtomb@plt+0x17e94>
  41c9f8:	mov	x0, x20
  41c9fc:	bl	404fb8 <wcrtomb@plt+0x1b8>
  41ca00:	ldr	x8, [sp, #24]
  41ca04:	adrp	x20, 44e000 <_obstack_memory_used@@Base+0x12808>
  41ca08:	adrp	x21, 44c000 <_obstack_memory_used@@Base+0x10808>
  41ca0c:	adrp	x23, 44c000 <_obstack_memory_used@@Base+0x10808>
  41ca10:	mov	x24, xzr
  41ca14:	mov	x27, xzr
  41ca18:	mov	w28, #0x200                 	// #512
  41ca1c:	add	x20, x20, #0xea3
  41ca20:	add	x21, x21, #0x582
  41ca24:	mov	w22, #0x2                   	// #2
  41ca28:	add	x23, x23, #0x5dd
  41ca2c:	ldr	x9, [x8, #288]
  41ca30:	cmp	x27, x9
  41ca34:	b.cs	41cc90 <wcrtomb@plt+0x17e90>  // b.hs, b.nlast
  41ca38:	ldr	x8, [x8, #304]
  41ca3c:	lsl	x19, x27, #4
  41ca40:	mov	x0, sp
  41ca44:	mov	x1, x24
  41ca48:	ldr	x26, [x8, x19]
  41ca4c:	bl	41d4a8 <wcrtomb@plt+0x186a8>
  41ca50:	tbz	w0, #0, 41cb94 <wcrtomb@plt+0x17d94>
  41ca54:	cmp	x24, x26
  41ca58:	b.ge	41caa8 <wcrtomb@plt+0x17ca8>  // b.tcont
  41ca5c:	ldr	w0, [sp]
  41ca60:	sub	x8, x26, x24
  41ca64:	cmp	x8, #0x200
  41ca68:	csel	x25, x8, x28, lt  // lt = tstop
  41ca6c:	add	x1, sp, #0x48
  41ca70:	mov	x2, x25
  41ca74:	bl	439dd4 <argp_parse@@Base+0xb118>
  41ca78:	cmn	x0, #0x1
  41ca7c:	b.eq	41cc54 <wcrtomb@plt+0x17e54>  // b.none
  41ca80:	cbz	x0, 41cc6c <wcrtomb@plt+0x17e6c>
  41ca84:	add	x8, sp, #0x48
  41ca88:	mov	x9, x0
  41ca8c:	cbz	x9, 41caa0 <wcrtomb@plt+0x17ca0>
  41ca90:	ldrb	w10, [x8], #1
  41ca94:	sub	x9, x9, #0x1
  41ca98:	cbz	w10, 41ca8c <wcrtomb@plt+0x17c8c>
  41ca9c:	b	41cb60 <wcrtomb@plt+0x17d60>
  41caa0:	add	x24, x0, x24
  41caa4:	b	41ca54 <wcrtomb@plt+0x17c54>
  41caa8:	ldr	x8, [sp, #24]
  41caac:	mov	x0, sp
  41cab0:	ldr	x8, [x8, #304]
  41cab4:	ldr	x1, [x8, x19]
  41cab8:	bl	41d4a8 <wcrtomb@plt+0x186a8>
  41cabc:	tbz	w0, #0, 41cb94 <wcrtomb@plt+0x17d94>
  41cac0:	ldp	x9, x8, [sp, #16]
  41cac4:	ldr	x10, [x8, #304]
  41cac8:	ldr	x8, [x8, #264]
  41cacc:	add	x10, x10, x27, lsl #4
  41cad0:	ldr	x19, [x10, #8]
  41cad4:	sub	x0, x8, x9
  41cad8:	bl	405058 <wcrtomb@plt+0x258>
  41cadc:	cmp	x19, #0x1
  41cae0:	b.lt	41cbb8 <wcrtomb@plt+0x17db8>  // b.tstop
  41cae4:	cmp	x19, #0x200
  41cae8:	csel	x24, x19, x28, lt  // lt = tstop
  41caec:	bl	405574 <wcrtomb@plt+0x774>
  41caf0:	cbz	x0, 41cbc0 <wcrtomb@plt+0x17dc0>
  41caf4:	mov	x25, x0
  41caf8:	bl	40587c <wcrtomb@plt+0xa7c>
  41cafc:	ldr	x8, [sp, #16]
  41cb00:	ldr	w0, [sp]
  41cb04:	add	x1, sp, #0x48
  41cb08:	mov	x2, x24
  41cb0c:	add	x8, x8, #0x200
  41cb10:	str	x8, [sp, #16]
  41cb14:	bl	439dd4 <argp_parse@@Base+0xb118>
  41cb18:	cbz	x0, 41cc10 <wcrtomb@plt+0x17e10>
  41cb1c:	mov	x26, x0
  41cb20:	cmn	x0, #0x1
  41cb24:	b.eq	41cc30 <wcrtomb@plt+0x17e30>  // b.none
  41cb28:	ldp	x9, x8, [sp, #16]
  41cb2c:	ldr	x8, [x8, #264]
  41cb30:	sub	x0, x8, x9
  41cb34:	bl	405058 <wcrtomb@plt+0x258>
  41cb38:	add	x1, sp, #0x48
  41cb3c:	mov	x0, x25
  41cb40:	mov	x2, x24
  41cb44:	bl	4046b0 <bcmp@plt>
  41cb48:	cbnz	w0, 41cbfc <wcrtomb@plt+0x17dfc>
  41cb4c:	sub	x19, x19, x26
  41cb50:	cmp	x19, #0x0
  41cb54:	mov	w9, #0x1                   	// #1
  41cb58:	b.gt	41cae4 <wcrtomb@plt+0x17ce4>
  41cb5c:	b	41cb98 <wcrtomb@plt+0x17d98>
  41cb60:	ldr	x25, [sp, #24]
  41cb64:	mov	w2, #0x5                   	// #5
  41cb68:	mov	x0, xzr
  41cb6c:	mov	x1, x20
  41cb70:	bl	404bd0 <dcgettext@plt>
  41cb74:	mov	x26, x0
  41cb78:	add	x1, sp, #0x30
  41cb7c:	mov	x0, x24
  41cb80:	bl	433f8c <argp_parse@@Base+0x52d0>
  41cb84:	mov	x2, x0
  41cb88:	mov	x0, x25
  41cb8c:	mov	x1, x26
  41cb90:	bl	408ff0 <wcrtomb@plt+0x41f0>
  41cb94:	mov	w9, wzr
  41cb98:	ldr	x8, [sp, #24]
  41cb9c:	ldr	x10, [x8, #304]
  41cba0:	add	x10, x10, x27, lsl #4
  41cba4:	ldp	x11, x10, [x10]
  41cba8:	add	x27, x27, #0x1
  41cbac:	add	x24, x10, x11
  41cbb0:	tbnz	w9, #0, 41ca2c <wcrtomb@plt+0x17c2c>
  41cbb4:	b	41c9e0 <wcrtomb@plt+0x17be0>
  41cbb8:	mov	w9, #0x1                   	// #1
  41cbbc:	b	41cb98 <wcrtomb@plt+0x17d98>
  41cbc0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41cbc4:	ldr	x8, [x8, #496]
  41cbc8:	cbz	x8, 41cbd0 <wcrtomb@plt+0x17dd0>
  41cbcc:	blr	x8
  41cbd0:	mov	w2, #0x5                   	// #5
  41cbd4:	mov	x0, xzr
  41cbd8:	mov	x1, x21
  41cbdc:	bl	404bd0 <dcgettext@plt>
  41cbe0:	mov	x2, x0
  41cbe4:	mov	w0, wzr
  41cbe8:	mov	w1, wzr
  41cbec:	bl	4041d0 <error@plt>
  41cbf0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41cbf4:	str	w22, [x8, #2944]
  41cbf8:	b	41cb94 <wcrtomb@plt+0x17d94>
  41cbfc:	ldr	x24, [sp, #24]
  41cc00:	mov	w2, #0x5                   	// #5
  41cc04:	mov	x0, xzr
  41cc08:	mov	x1, x23
  41cc0c:	b	41cc7c <wcrtomb@plt+0x17e7c>
  41cc10:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  41cc14:	mov	w2, #0x5                   	// #5
  41cc18:	add	x1, x1, #0x575
  41cc1c:	bl	404bd0 <dcgettext@plt>
  41cc20:	mov	x1, x0
  41cc24:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41cc28:	add	x0, x0, #0xe60
  41cc2c:	b	41cc88 <wcrtomb@plt+0x17e88>
  41cc30:	ldr	x8, [sp, #24]
  41cc34:	mov	x2, x24
  41cc38:	ldr	x9, [x8, #304]
  41cc3c:	ldr	x0, [x8]
  41cc40:	add	x9, x9, x27, lsl #4
  41cc44:	ldp	x10, x9, [x9]
  41cc48:	sub	x8, x10, x19
  41cc4c:	add	x1, x8, x9
  41cc50:	b	41cc64 <wcrtomb@plt+0x17e64>
  41cc54:	ldr	x8, [sp, #24]
  41cc58:	mov	x1, x24
  41cc5c:	mov	x2, x25
  41cc60:	ldr	x0, [x8]
  41cc64:	bl	419c94 <wcrtomb@plt+0x14e94>
  41cc68:	b	41cb94 <wcrtomb@plt+0x17d94>
  41cc6c:	ldr	x24, [sp, #24]
  41cc70:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  41cc74:	mov	w2, #0x5                   	// #5
  41cc78:	add	x1, x1, #0x575
  41cc7c:	bl	404bd0 <dcgettext@plt>
  41cc80:	mov	x1, x0
  41cc84:	mov	x0, x24
  41cc88:	bl	408ff0 <wcrtomb@plt+0x41f0>
  41cc8c:	b	41cb94 <wcrtomb@plt+0x17d94>
  41cc90:	mov	w19, #0x1                   	// #1
  41cc94:	bl	404fcc <wcrtomb@plt+0x1cc>
  41cc98:	ldr	x8, [sp, #32]
  41cc9c:	ldr	x8, [x8, #8]
  41cca0:	cbz	x8, 41ccac <wcrtomb@plt+0x17eac>
  41cca4:	mov	x0, sp
  41cca8:	blr	x8
  41ccac:	mov	w0, w19
  41ccb0:	add	sp, sp, #0x250
  41ccb4:	ldp	x20, x19, [sp, #80]
  41ccb8:	ldp	x22, x21, [sp, #64]
  41ccbc:	ldp	x24, x23, [sp, #48]
  41ccc0:	ldp	x26, x25, [sp, #32]
  41ccc4:	ldp	x28, x27, [sp, #16]
  41ccc8:	ldp	x29, x30, [sp], #96
  41cccc:	ret
  41ccd0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41ccd4:	ldr	x8, [x8, #3560]
  41ccd8:	ldrb	w8, [x8, #156]
  41ccdc:	cmp	w8, #0x53
  41cce0:	cset	w0, eq  // eq = none
  41cce4:	ret
  41cce8:	sub	sp, sp, #0x40
  41ccec:	stp	x29, x30, [sp, #16]
  41ccf0:	stp	x22, x21, [sp, #32]
  41ccf4:	stp	x20, x19, [sp, #48]
  41ccf8:	add	x29, sp, #0x10
  41ccfc:	mov	x19, x0
  41cd00:	bl	405508 <wcrtomb@plt+0x708>
  41cd04:	ldr	x8, [x19, #24]
  41cd08:	mov	x20, x0
  41cd0c:	mov	x0, x8
  41cd10:	bl	40a890 <wcrtomb@plt+0x5a90>
  41cd14:	mov	w8, #0x53                  	// #83
  41cd18:	strb	w8, [x0, #156]
  41cd1c:	ldr	x8, [x19, #24]
  41cd20:	mov	x21, x0
  41cd24:	ldr	x9, [x8, #288]
  41cd28:	cmp	x9, #0x5
  41cd2c:	b.cc	41cd3c <wcrtomb@plt+0x17f3c>  // b.lo, b.ul, b.last
  41cd30:	mov	w8, #0x1                   	// #1
  41cd34:	strb	w8, [x21, #482]
  41cd38:	ldr	x8, [x19, #24]
  41cd3c:	ldr	x0, [x8, #136]
  41cd40:	add	x1, x21, #0x1e3
  41cd44:	mov	w2, #0xc                   	// #12
  41cd48:	bl	40a1d0 <wcrtomb@plt+0x53d0>
  41cd4c:	ldr	x8, [x19, #24]
  41cd50:	add	x1, x21, #0x7c
  41cd54:	mov	w2, #0xc                   	// #12
  41cd58:	ldr	x0, [x8, #264]
  41cd5c:	bl	40a1d0 <wcrtomb@plt+0x53d0>
  41cd60:	add	x2, x21, #0x182
  41cd64:	add	x1, sp, #0x8
  41cd68:	mov	w3, #0x4                   	// #4
  41cd6c:	mov	x0, x19
  41cd70:	str	xzr, [sp, #8]
  41cd74:	bl	41d2b8 <wcrtomb@plt+0x184b8>
  41cd78:	ldr	x8, [x19, #24]
  41cd7c:	ldr	x22, [sp, #8]
  41cd80:	mov	x1, x21
  41cd84:	mov	x2, x20
  41cd88:	ldr	x8, [x8, #288]
  41cd8c:	cmp	x22, x8
  41cd90:	cset	w8, cc  // cc = lo, ul, last
  41cd94:	strb	w8, [x21, #482]
  41cd98:	ldr	x0, [x19, #24]
  41cd9c:	bl	40b220 <wcrtomb@plt+0x6420>
  41cda0:	ldr	x8, [x19, #24]
  41cda4:	ldr	x8, [x8, #288]
  41cda8:	cmp	x22, x8
  41cdac:	b.cs	41ce0c <wcrtomb@plt+0x1800c>  // b.hs, b.nlast
  41cdb0:	mov	w21, #0x1                   	// #1
  41cdb4:	bl	405574 <wcrtomb@plt+0x774>
  41cdb8:	mov	w2, #0x200                 	// #512
  41cdbc:	mov	w1, wzr
  41cdc0:	mov	x20, x0
  41cdc4:	bl	4045e0 <memset@plt>
  41cdc8:	add	x1, sp, #0x8
  41cdcc:	mov	w3, #0x15                  	// #21
  41cdd0:	mov	x0, x19
  41cdd4:	mov	x2, x20
  41cdd8:	bl	41d2b8 <wcrtomb@plt+0x184b8>
  41cddc:	ldr	x8, [x19, #24]
  41cde0:	ldr	x22, [sp, #8]
  41cde4:	ldr	x8, [x8, #288]
  41cde8:	cmp	x22, x8
  41cdec:	b.cs	41cdf4 <wcrtomb@plt+0x17ff4>  // b.hs, b.nlast
  41cdf0:	strb	w21, [x20, #504]
  41cdf4:	mov	x0, x20
  41cdf8:	bl	40587c <wcrtomb@plt+0xa7c>
  41cdfc:	ldr	x8, [x19, #24]
  41ce00:	ldr	x8, [x8, #288]
  41ce04:	cmp	x22, x8
  41ce08:	b.cc	41cdb4 <wcrtomb@plt+0x17fb4>  // b.lo, b.ul, b.last
  41ce0c:	ldp	x20, x19, [sp, #48]
  41ce10:	ldp	x22, x21, [sp, #32]
  41ce14:	ldp	x29, x30, [sp, #16]
  41ce18:	mov	w0, #0x1                   	// #1
  41ce1c:	add	sp, sp, #0x40
  41ce20:	ret
  41ce24:	stp	x29, x30, [sp, #-32]!
  41ce28:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41ce2c:	ldr	x8, [x8, #3560]
  41ce30:	str	x19, [sp, #16]
  41ce34:	mov	x19, x0
  41ce38:	mov	w1, #0xc                   	// #12
  41ce3c:	add	x0, x8, #0x1e3
  41ce40:	mov	x29, sp
  41ce44:	bl	41753c <wcrtomb@plt+0x1273c>
  41ce48:	ldr	x8, [x19, #24]
  41ce4c:	ldr	x19, [sp, #16]
  41ce50:	bic	x10, x0, x0, asr #63
  41ce54:	lsr	x11, x0, #63
  41ce58:	ldr	x9, [x8, #136]
  41ce5c:	eor	w0, w11, #0x1
  41ce60:	str	x10, [x8, #136]
  41ce64:	str	x9, [x8, #264]
  41ce68:	ldp	x29, x30, [sp], #32
  41ce6c:	ret
  41ce70:	stp	x29, x30, [sp, #-48]!
  41ce74:	stp	x22, x21, [sp, #16]
  41ce78:	stp	x20, x19, [sp, #32]
  41ce7c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41ce80:	ldr	x9, [x0, #24]
  41ce84:	ldr	x21, [x8, #3560]
  41ce88:	mov	x29, sp
  41ce8c:	mov	x19, x0
  41ce90:	mov	x20, xzr
  41ce94:	str	xzr, [x9, #288]
  41ce98:	add	x22, x21, #0x182
  41ce9c:	add	x1, x22, x20
  41cea0:	mov	x0, x19
  41cea4:	bl	41d360 <wcrtomb@plt+0x18560>
  41cea8:	cbnz	w0, 41cf04 <wcrtomb@plt+0x18104>
  41ceac:	add	x20, x20, #0x18
  41ceb0:	cmp	x20, #0x60
  41ceb4:	b.ne	41ce9c <wcrtomb@plt+0x1809c>  // b.any
  41ceb8:	ldrb	w8, [x21, #482]
  41cebc:	cbz	w8, 41cf4c <wcrtomb@plt+0x1814c>
  41cec0:	bl	405574 <wcrtomb@plt+0x774>
  41cec4:	cbz	x0, 41cf54 <wcrtomb@plt+0x18154>
  41cec8:	mov	x20, x0
  41cecc:	bl	40587c <wcrtomb@plt+0xa7c>
  41ced0:	mov	x22, xzr
  41ced4:	mov	x21, x20
  41ced8:	mov	x0, x19
  41cedc:	mov	x1, x21
  41cee0:	bl	41d360 <wcrtomb@plt+0x18560>
  41cee4:	cmp	x22, #0x13
  41cee8:	b.hi	41cef8 <wcrtomb@plt+0x180f8>  // b.pmore
  41ceec:	add	x22, x22, #0x1
  41cef0:	add	x21, x21, #0x18
  41cef4:	cbz	w0, 41ced8 <wcrtomb@plt+0x180d8>
  41cef8:	cbnz	w0, 41cf04 <wcrtomb@plt+0x18104>
  41cefc:	ldrb	w8, [x20, #504]
  41cf00:	cbnz	w8, 41cec0 <wcrtomb@plt+0x180c0>
  41cf04:	cmp	w0, #0x2
  41cf08:	b.ne	41cf4c <wcrtomb@plt+0x1814c>  // b.any
  41cf0c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41cf10:	ldr	x8, [x8, #496]
  41cf14:	cbz	x8, 41cf1c <wcrtomb@plt+0x1811c>
  41cf18:	blr	x8
  41cf1c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41cf20:	add	x1, x1, #0xe18
  41cf24:	mov	w2, #0x5                   	// #5
  41cf28:	mov	x0, xzr
  41cf2c:	bl	404bd0 <dcgettext@plt>
  41cf30:	ldr	x8, [x19, #24]
  41cf34:	mov	x2, x0
  41cf38:	mov	w0, wzr
  41cf3c:	mov	w1, wzr
  41cf40:	ldr	x3, [x8]
  41cf44:	bl	4041d0 <error@plt>
  41cf48:	b	41cf88 <wcrtomb@plt+0x18188>
  41cf4c:	mov	w0, #0x1                   	// #1
  41cf50:	b	41cf98 <wcrtomb@plt+0x18198>
  41cf54:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41cf58:	ldr	x8, [x8, #496]
  41cf5c:	cbz	x8, 41cf64 <wcrtomb@plt+0x18164>
  41cf60:	blr	x8
  41cf64:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  41cf68:	add	x1, x1, #0x582
  41cf6c:	mov	w2, #0x5                   	// #5
  41cf70:	mov	x0, xzr
  41cf74:	bl	404bd0 <dcgettext@plt>
  41cf78:	mov	x2, x0
  41cf7c:	mov	w0, wzr
  41cf80:	mov	w1, wzr
  41cf84:	bl	4041d0 <error@plt>
  41cf88:	mov	w0, wzr
  41cf8c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41cf90:	mov	w9, #0x2                   	// #2
  41cf94:	str	w9, [x8, #2944]
  41cf98:	ldp	x20, x19, [sp, #32]
  41cf9c:	ldp	x22, x21, [sp, #16]
  41cfa0:	ldp	x29, x30, [sp], #48
  41cfa4:	ret
  41cfa8:	sub	sp, sp, #0xf0
  41cfac:	stp	x29, x30, [sp, #160]
  41cfb0:	stp	x24, x23, [sp, #192]
  41cfb4:	stp	x22, x21, [sp, #208]
  41cfb8:	stp	x20, x19, [sp, #224]
  41cfbc:	ldr	x8, [x0, #24]
  41cfc0:	str	x25, [sp, #176]
  41cfc4:	mov	x20, x1
  41cfc8:	add	x29, sp, #0xa0
  41cfcc:	ldr	x8, [x8, #304]
  41cfd0:	mov	x19, x0
  41cfd4:	add	x8, x8, x1, lsl #4
  41cfd8:	ldp	x1, x24, [x8]
  41cfdc:	bl	41d4a8 <wcrtomb@plt+0x186a8>
  41cfe0:	tbz	w0, #0, 41d148 <wcrtomb@plt+0x18348>
  41cfe4:	cmp	x24, #0x1
  41cfe8:	b.lt	41d054 <wcrtomb@plt+0x18254>  // b.tstop
  41cfec:	mov	w25, #0x200                 	// #512
  41cff0:	cmp	x24, #0x200
  41cff4:	csel	x21, x24, x25, lt  // lt = tstop
  41cff8:	bl	405574 <wcrtomb@plt+0x774>
  41cffc:	ldr	w8, [x19]
  41d000:	mov	x22, x0
  41d004:	mov	x1, x22
  41d008:	mov	x2, x21
  41d00c:	mov	w0, w8
  41d010:	bl	439dd4 <argp_parse@@Base+0xb118>
  41d014:	cbz	x0, 41d05c <wcrtomb@plt+0x1825c>
  41d018:	mov	x23, x0
  41d01c:	cmn	x0, #0x1
  41d020:	b.eq	41d08c <wcrtomb@plt+0x1828c>  // b.none
  41d024:	add	x0, x22, x23
  41d028:	sub	x2, x25, x23
  41d02c:	mov	w1, wzr
  41d030:	bl	4045e0 <memset@plt>
  41d034:	ldr	x8, [x19, #16]
  41d038:	mov	x0, x22
  41d03c:	sub	x24, x24, x23
  41d040:	add	x8, x8, x23
  41d044:	str	x8, [x19, #16]
  41d048:	bl	40587c <wcrtomb@plt+0xa7c>
  41d04c:	cmp	x24, #0x0
  41d050:	b.gt	41cff0 <wcrtomb@plt+0x181f0>
  41d054:	mov	w0, #0x1                   	// #1
  41d058:	b	41d14c <wcrtomb@plt+0x1834c>
  41d05c:	ldr	w0, [x19]
  41d060:	add	x1, sp, #0x8
  41d064:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  41d068:	ldr	x9, [x19, #24]
  41d06c:	ldr	x8, [x9, #136]
  41d070:	cbz	w0, 41d0b4 <wcrtomb@plt+0x182b4>
  41d074:	ldr	x9, [x9, #304]
  41d078:	add	x8, x8, x24
  41d07c:	add	x9, x9, x20, lsl #4
  41d080:	ldp	x10, x9, [x9]
  41d084:	sub	x8, x8, x10
  41d088:	b	41d0b8 <wcrtomb@plt+0x182b8>
  41d08c:	ldr	x8, [x19, #24]
  41d090:	mov	x2, x21
  41d094:	ldr	x9, [x8, #304]
  41d098:	ldr	x0, [x8]
  41d09c:	add	x9, x9, x20, lsl #4
  41d0a0:	ldp	x10, x9, [x9]
  41d0a4:	sub	x8, x10, x24
  41d0a8:	add	x1, x8, x9
  41d0ac:	bl	419c94 <wcrtomb@plt+0x14e94>
  41d0b0:	b	41d148 <wcrtomb@plt+0x18348>
  41d0b4:	ldr	x9, [sp, #56]
  41d0b8:	sub	x20, x8, x9
  41d0bc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41d0c0:	ldrb	w8, [x8, #152]
  41d0c4:	tbz	w8, #7, 41d134 <wcrtomb@plt+0x18334>
  41d0c8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41d0cc:	ldr	x8, [x8, #496]
  41d0d0:	cbz	x8, 41d0d8 <wcrtomb@plt+0x182d8>
  41d0d4:	blr	x8
  41d0d8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  41d0dc:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x10808>
  41d0e0:	add	x1, x1, #0x92f
  41d0e4:	add	x2, x2, #0x95e
  41d0e8:	mov	w4, #0x5                   	// #5
  41d0ec:	mov	x0, xzr
  41d0f0:	mov	x3, x20
  41d0f4:	bl	404ad0 <dcngettext@plt>
  41d0f8:	ldr	x8, [x19, #24]
  41d0fc:	mov	x19, x0
  41d100:	ldr	x8, [x8]
  41d104:	mov	x0, x8
  41d108:	bl	4398cc <argp_parse@@Base+0xac10>
  41d10c:	mov	x21, x0
  41d110:	sub	x1, x29, #0x18
  41d114:	mov	x0, x20
  41d118:	bl	43401c <argp_parse@@Base+0x5360>
  41d11c:	mov	x4, x0
  41d120:	mov	w0, wzr
  41d124:	mov	w1, wzr
  41d128:	mov	x2, x19
  41d12c:	mov	x3, x21
  41d130:	bl	4041d0 <error@plt>
  41d134:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41d138:	ldrb	w8, [x8, #441]
  41d13c:	cbnz	w8, 41d148 <wcrtomb@plt+0x18348>
  41d140:	mov	w0, #0x1                   	// #1
  41d144:	bl	420c68 <wcrtomb@plt+0x1be68>
  41d148:	mov	w0, wzr
  41d14c:	ldp	x20, x19, [sp, #224]
  41d150:	ldp	x22, x21, [sp, #208]
  41d154:	ldp	x24, x23, [sp, #192]
  41d158:	ldr	x25, [sp, #176]
  41d15c:	ldp	x29, x30, [sp, #160]
  41d160:	add	sp, sp, #0xf0
  41d164:	ret
  41d168:	stp	x29, x30, [sp, #-64]!
  41d16c:	stp	x22, x21, [sp, #32]
  41d170:	stp	x20, x19, [sp, #48]
  41d174:	ldr	x8, [x0, #24]
  41d178:	lsl	x9, x1, #4
  41d17c:	mov	x20, x1
  41d180:	str	x23, [sp, #16]
  41d184:	ldr	x8, [x8, #304]
  41d188:	mov	x29, sp
  41d18c:	mov	x19, x0
  41d190:	ldr	x1, [x8, x9]
  41d194:	bl	41d4a8 <wcrtomb@plt+0x186a8>
  41d198:	tbz	w0, #0, 41d230 <wcrtomb@plt+0x18430>
  41d19c:	ldr	x8, [x19, #24]
  41d1a0:	ldr	x8, [x8, #304]
  41d1a4:	add	x8, x8, x20, lsl #4
  41d1a8:	ldr	x22, [x8, #8]
  41d1ac:	cbz	x22, 41d238 <wcrtomb@plt+0x18438>
  41d1b0:	mov	w23, #0x200                 	// #512
  41d1b4:	cmp	x22, #0x1
  41d1b8:	b.lt	41d258 <wcrtomb@plt+0x18458>  // b.tstop
  41d1bc:	cmp	x22, #0x200
  41d1c0:	csel	x20, x22, x23, lt  // lt = tstop
  41d1c4:	bl	405574 <wcrtomb@plt+0x774>
  41d1c8:	cbz	x0, 41d260 <wcrtomb@plt+0x18460>
  41d1cc:	mov	x21, x0
  41d1d0:	bl	40587c <wcrtomb@plt+0xa7c>
  41d1d4:	ldr	x8, [x19, #16]
  41d1d8:	ldr	w0, [x19]
  41d1dc:	mov	x1, x21
  41d1e0:	mov	x2, x20
  41d1e4:	add	x8, x8, #0x200
  41d1e8:	str	x8, [x19, #16]
  41d1ec:	bl	419774 <wcrtomb@plt+0x14974>
  41d1f0:	ldp	x9, x8, [x19, #16]
  41d1f4:	mov	x21, x0
  41d1f8:	sub	x22, x22, x0
  41d1fc:	ldr	x8, [x8, #264]
  41d200:	sub	x0, x8, x9
  41d204:	bl	405058 <wcrtomb@plt+0x258>
  41d208:	ldr	x8, [x19, #8]
  41d20c:	cmp	x21, x20
  41d210:	add	x8, x8, x21
  41d214:	str	x8, [x19, #8]
  41d218:	b.eq	41d1b4 <wcrtomb@plt+0x183b4>  // b.none
  41d21c:	ldr	x8, [x19, #24]
  41d220:	mov	x1, x21
  41d224:	mov	x2, x20
  41d228:	ldr	x0, [x8]
  41d22c:	bl	426784 <wcrtomb@plt+0x21984>
  41d230:	mov	w0, wzr
  41d234:	b	41d2a4 <wcrtomb@plt+0x184a4>
  41d238:	ldrb	w8, [x19, #4]
  41d23c:	cbz	w8, 41d258 <wcrtomb@plt+0x18458>
  41d240:	ldr	w0, [x19]
  41d244:	bl	41e540 <wcrtomb@plt+0x19740>
  41d248:	cbz	w0, 41d258 <wcrtomb@plt+0x18458>
  41d24c:	ldr	x8, [x19, #24]
  41d250:	ldr	x0, [x8]
  41d254:	bl	426720 <wcrtomb@plt+0x21920>
  41d258:	mov	w0, #0x1                   	// #1
  41d25c:	b	41d2a4 <wcrtomb@plt+0x184a4>
  41d260:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41d264:	ldr	x8, [x8, #496]
  41d268:	cbz	x8, 41d270 <wcrtomb@plt+0x18470>
  41d26c:	blr	x8
  41d270:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  41d274:	add	x1, x1, #0x582
  41d278:	mov	w2, #0x5                   	// #5
  41d27c:	mov	x0, xzr
  41d280:	bl	404bd0 <dcgettext@plt>
  41d284:	mov	x2, x0
  41d288:	mov	w0, wzr
  41d28c:	mov	w1, wzr
  41d290:	bl	4041d0 <error@plt>
  41d294:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41d298:	mov	w9, #0x2                   	// #2
  41d29c:	mov	w0, wzr
  41d2a0:	str	w9, [x8, #2944]
  41d2a4:	ldp	x20, x19, [sp, #48]
  41d2a8:	ldp	x22, x21, [sp, #32]
  41d2ac:	ldr	x23, [sp, #16]
  41d2b0:	ldp	x29, x30, [sp], #64
  41d2b4:	ret
  41d2b8:	stp	x29, x30, [sp, #-48]!
  41d2bc:	stp	x22, x21, [sp, #16]
  41d2c0:	stp	x20, x19, [sp, #32]
  41d2c4:	mov	x29, sp
  41d2c8:	cbz	x3, 41d350 <wcrtomb@plt+0x18550>
  41d2cc:	ldr	x9, [x0, #24]
  41d2d0:	ldr	x8, [x1]
  41d2d4:	mov	x20, x1
  41d2d8:	mov	x21, x0
  41d2dc:	ldr	x10, [x9, #288]
  41d2e0:	cmp	x8, x10
  41d2e4:	b.cs	41d350 <wcrtomb@plt+0x18550>  // b.hs, b.nlast
  41d2e8:	mov	x19, x2
  41d2ec:	sub	x22, x3, #0x1
  41d2f0:	ldr	x9, [x9, #304]
  41d2f4:	lsl	x8, x8, #4
  41d2f8:	mov	w2, #0xc                   	// #12
  41d2fc:	mov	x1, x19
  41d300:	ldr	x0, [x9, x8]
  41d304:	bl	40a1d0 <wcrtomb@plt+0x53d0>
  41d308:	ldr	x8, [x21, #24]
  41d30c:	ldr	x9, [x20]
  41d310:	add	x1, x19, #0xc
  41d314:	mov	w2, #0xc                   	// #12
  41d318:	ldr	x8, [x8, #304]
  41d31c:	add	x8, x8, x9, lsl #4
  41d320:	ldr	x0, [x8, #8]
  41d324:	bl	40a1d0 <wcrtomb@plt+0x53d0>
  41d328:	ldr	x8, [x20]
  41d32c:	subs	x22, x22, #0x1
  41d330:	add	x8, x8, #0x1
  41d334:	str	x8, [x20]
  41d338:	b.cc	41d350 <wcrtomb@plt+0x18550>  // b.lo, b.ul, b.last
  41d33c:	ldr	x9, [x21, #24]
  41d340:	add	x19, x19, #0x18
  41d344:	ldr	x10, [x9, #288]
  41d348:	cmp	x8, x10
  41d34c:	b.cc	41d2f0 <wcrtomb@plt+0x184f0>  // b.lo, b.ul, b.last
  41d350:	ldp	x20, x19, [sp, #32]
  41d354:	ldp	x22, x21, [sp, #16]
  41d358:	ldp	x29, x30, [sp], #48
  41d35c:	ret
  41d360:	sub	sp, sp, #0x40
  41d364:	stp	x29, x30, [sp, #16]
  41d368:	str	x21, [sp, #32]
  41d36c:	stp	x20, x19, [sp, #48]
  41d370:	mov	x21, x1
  41d374:	ldrb	w9, [x21, #12]!
  41d378:	add	x29, sp, #0x10
  41d37c:	cbz	w9, 41d3f8 <wcrtomb@plt+0x185f8>
  41d380:	mov	x8, x1
  41d384:	mov	x19, x0
  41d388:	mov	w1, #0xc                   	// #12
  41d38c:	mov	x0, x8
  41d390:	bl	41753c <wcrtomb@plt+0x1273c>
  41d394:	mov	x20, x0
  41d398:	str	x0, [sp]
  41d39c:	mov	w1, #0xc                   	// #12
  41d3a0:	mov	x0, x21
  41d3a4:	bl	41753c <wcrtomb@plt+0x1273c>
  41d3a8:	mov	x8, x0
  41d3ac:	str	x0, [sp, #8]
  41d3b0:	orr	x9, x0, x20
  41d3b4:	mov	w0, #0x2                   	// #2
  41d3b8:	tbnz	x9, #63, 41d404 <wcrtomb@plt+0x18604>
  41d3bc:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  41d3c0:	sub	x9, x9, x8
  41d3c4:	cmp	x9, x20
  41d3c8:	b.lt	41d404 <wcrtomb@plt+0x18604>  // b.tstop
  41d3cc:	ldr	x0, [x19, #24]
  41d3d0:	add	x8, x8, x20
  41d3d4:	ldr	x9, [x0, #136]
  41d3d8:	cmp	x9, x8
  41d3dc:	b.lt	41d400 <wcrtomb@plt+0x18600>  // b.tstop
  41d3e0:	ldr	x8, [x0, #264]
  41d3e4:	tbnz	x8, #63, 41d400 <wcrtomb@plt+0x18600>
  41d3e8:	mov	x1, sp
  41d3ec:	bl	41d418 <wcrtomb@plt+0x18618>
  41d3f0:	mov	w0, wzr
  41d3f4:	b	41d404 <wcrtomb@plt+0x18604>
  41d3f8:	mov	w0, #0x1                   	// #1
  41d3fc:	b	41d404 <wcrtomb@plt+0x18604>
  41d400:	mov	w0, #0x2                   	// #2
  41d404:	ldp	x20, x19, [sp, #48]
  41d408:	ldr	x21, [sp, #32]
  41d40c:	ldp	x29, x30, [sp, #16]
  41d410:	add	sp, sp, #0x40
  41d414:	ret
  41d418:	stp	x29, x30, [sp, #-48]!
  41d41c:	str	x21, [sp, #16]
  41d420:	stp	x20, x19, [sp, #32]
  41d424:	ldp	x21, x8, [x0, #288]
  41d428:	mov	x19, x0
  41d42c:	ldr	x0, [x0, #304]
  41d430:	mov	x20, x1
  41d434:	cmp	x21, x8
  41d438:	mov	x29, sp
  41d43c:	b.ne	41d488 <wcrtomb@plt+0x18688>  // b.any
  41d440:	cbz	x0, 41d460 <wcrtomb@plt+0x18660>
  41d444:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  41d448:	movk	x8, #0x555, lsl #48
  41d44c:	cmp	x21, x8
  41d450:	b.cs	41d470 <wcrtomb@plt+0x18670>  // b.hs, b.nlast
  41d454:	add	x8, x21, x21, lsr #1
  41d458:	add	x8, x8, #0x1
  41d45c:	b	41d478 <wcrtomb@plt+0x18678>
  41d460:	cbz	x21, 41d474 <wcrtomb@plt+0x18674>
  41d464:	lsr	x9, x21, #59
  41d468:	mov	x8, x21
  41d46c:	cbz	x9, 41d478 <wcrtomb@plt+0x18678>
  41d470:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  41d474:	mov	w8, #0x8                   	// #8
  41d478:	lsl	x1, x8, #4
  41d47c:	str	x8, [x19, #296]
  41d480:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  41d484:	str	x0, [x19, #304]
  41d488:	ldr	q0, [x20]
  41d48c:	add	x8, x21, #0x1
  41d490:	str	q0, [x0, x21, lsl #4]
  41d494:	str	x8, [x19, #288]
  41d498:	ldp	x20, x19, [sp, #32]
  41d49c:	ldr	x21, [sp, #16]
  41d4a0:	ldp	x29, x30, [sp], #48
  41d4a4:	ret
  41d4a8:	stp	x29, x30, [sp, #-48]!
  41d4ac:	stp	x22, x21, [sp, #16]
  41d4b0:	stp	x20, x19, [sp, #32]
  41d4b4:	ldrb	w8, [x0, #4]
  41d4b8:	mov	x20, x0
  41d4bc:	mov	x19, x1
  41d4c0:	mov	x29, sp
  41d4c4:	cbz	w8, 41d4e4 <wcrtomb@plt+0x186e4>
  41d4c8:	ldr	w0, [x20]
  41d4cc:	mov	x1, x19
  41d4d0:	mov	w2, wzr
  41d4d4:	bl	404370 <lseek@plt>
  41d4d8:	tbnz	x0, #63, 41d4fc <wcrtomb@plt+0x186fc>
  41d4dc:	mov	w0, #0x1                   	// #1
  41d4e0:	b	41d510 <wcrtomb@plt+0x18710>
  41d4e4:	ldr	x8, [x20, #8]
  41d4e8:	cmp	x8, x19
  41d4ec:	b.le	41d520 <wcrtomb@plt+0x18720>
  41d4f0:	bl	404ce0 <__errno_location@plt>
  41d4f4:	mov	w8, #0x16                  	// #22
  41d4f8:	str	w8, [x0]
  41d4fc:	ldr	x8, [x20, #24]
  41d500:	mov	x1, x19
  41d504:	ldr	x0, [x8]
  41d508:	bl	419d00 <wcrtomb@plt+0x14f00>
  41d50c:	mov	w0, wzr
  41d510:	ldp	x20, x19, [sp, #32]
  41d514:	ldp	x22, x21, [sp, #16]
  41d518:	ldp	x29, x30, [sp], #48
  41d51c:	ret
  41d520:	b.ge	41d4dc <wcrtomb@plt+0x186dc>  // b.tcont
  41d524:	adrp	x21, 44e000 <_obstack_memory_used@@Base+0x12808>
  41d528:	mov	w22, #0x200                 	// #512
  41d52c:	add	x21, x21, #0xbf0
  41d530:	ldr	w0, [x20]
  41d534:	sub	x8, x19, x8
  41d538:	cmp	x8, #0x200
  41d53c:	csel	x2, x8, x22, lt  // lt = tstop
  41d540:	mov	x1, x21
  41d544:	bl	404810 <write@plt>
  41d548:	cmp	x0, #0x0
  41d54c:	b.le	41d568 <wcrtomb@plt+0x18768>
  41d550:	ldr	x8, [x20, #8]
  41d554:	add	x8, x8, x0
  41d558:	cmp	x8, x19
  41d55c:	str	x8, [x20, #8]
  41d560:	b.lt	41d530 <wcrtomb@plt+0x18730>  // b.tstop
  41d564:	b	41d4dc <wcrtomb@plt+0x186dc>
  41d568:	cbnz	x0, 41d4fc <wcrtomb@plt+0x186fc>
  41d56c:	b	41d4f0 <wcrtomb@plt+0x186f0>
  41d570:	ldr	x8, [x0, #24]
  41d574:	ldr	x9, [x8, #288]
  41d578:	cbz	x9, 41d584 <wcrtomb@plt+0x18784>
  41d57c:	mov	w0, #0x1                   	// #1
  41d580:	ret
  41d584:	ldr	w8, [x8, #276]
  41d588:	cmp	w8, #0x0
  41d58c:	cset	w0, ne  // ne = any
  41d590:	ret
  41d594:	sub	sp, sp, #0x80
  41d598:	stp	x29, x30, [sp, #32]
  41d59c:	str	x27, [sp, #48]
  41d5a0:	stp	x26, x25, [sp, #64]
  41d5a4:	stp	x24, x23, [sp, #80]
  41d5a8:	stp	x22, x21, [sp, #96]
  41d5ac:	stp	x20, x19, [sp, #112]
  41d5b0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41d5b4:	mov	x23, x0
  41d5b8:	ldr	w22, [x8, #96]
  41d5bc:	ldr	x8, [x23, #24]!
  41d5c0:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41d5c4:	add	x29, sp, #0x20
  41d5c8:	mov	x20, x0
  41d5cc:	str	w22, [x8, #276]
  41d5d0:	ldr	w9, [x21, #3672]
  41d5d4:	str	w9, [x8, #280]
  41d5d8:	bl	405508 <wcrtomb@plt+0x708>
  41d5dc:	mov	x19, x0
  41d5e0:	cbz	w22, 41d7b0 <wcrtomb@plt+0x189b0>
  41d5e4:	ldr	x8, [x23]
  41d5e8:	add	x1, sp, #0x8
  41d5ec:	ldr	x0, [x8, #288]
  41d5f0:	ldr	x22, [x8, #304]
  41d5f4:	ldr	x24, [x8, #8]
  41d5f8:	bl	43401c <argp_parse@@Base+0x5360>
  41d5fc:	bl	404170 <strlen@plt>
  41d600:	ldr	x1, [x23]
  41d604:	add	x25, x0, #0x1
  41d608:	ldr	x8, [x1, #288]
  41d60c:	cbz	x8, 41d660 <wcrtomb@plt+0x18860>
  41d610:	mov	x26, xzr
  41d614:	add	x27, x22, #0x8
  41d618:	ldur	x0, [x27, #-8]
  41d61c:	add	x1, sp, #0x8
  41d620:	bl	43401c <argp_parse@@Base+0x5360>
  41d624:	bl	404170 <strlen@plt>
  41d628:	ldr	x8, [x27], #16
  41d62c:	mov	x21, x0
  41d630:	add	x1, sp, #0x8
  41d634:	mov	x0, x8
  41d638:	bl	43401c <argp_parse@@Base+0x5360>
  41d63c:	bl	404170 <strlen@plt>
  41d640:	ldr	x1, [x23]
  41d644:	add	x8, x25, x21
  41d648:	add	x8, x8, x0
  41d64c:	add	x26, x26, #0x1
  41d650:	ldr	x9, [x1, #288]
  41d654:	add	x25, x8, #0x2
  41d658:	cmp	x26, x9
  41d65c:	b.cc	41d618 <wcrtomb@plt+0x18818>  // b.lo, b.ul, b.last
  41d660:	add	x8, x25, #0x1ff
  41d664:	ldr	x10, [x1, #264]
  41d668:	add	x9, x25, #0x3fe
  41d66c:	cmp	x8, #0x0
  41d670:	csel	x8, x9, x8, lt  // lt = tstop
  41d674:	and	x8, x8, #0xfffffffffffffe00
  41d678:	add	x9, x8, x10
  41d67c:	str	x9, [x1, #264]
  41d680:	ldr	x9, [x20, #16]
  41d684:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  41d688:	add	x0, x0, #0xd96
  41d68c:	mov	x2, xzr
  41d690:	add	x8, x9, x8
  41d694:	str	x8, [x20, #16]
  41d698:	bl	411550 <wcrtomb@plt+0xc750>
  41d69c:	ldr	x1, [x20, #24]
  41d6a0:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  41d6a4:	add	x0, x0, #0xda7
  41d6a8:	mov	x2, xzr
  41d6ac:	bl	411550 <wcrtomb@plt+0xc750>
  41d6b0:	ldr	x1, [x20, #24]
  41d6b4:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  41d6b8:	add	x0, x0, #0xd86
  41d6bc:	mov	x2, xzr
  41d6c0:	bl	411550 <wcrtomb@plt+0xc750>
  41d6c4:	ldr	x1, [x20, #24]
  41d6c8:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  41d6cc:	add	x0, x0, #0xdb8
  41d6d0:	mov	x2, xzr
  41d6d4:	bl	411550 <wcrtomb@plt+0xc750>
  41d6d8:	ldr	x0, [x20, #24]
  41d6dc:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41d6e0:	add	x1, x1, #0xe3a
  41d6e4:	mov	x2, xzr
  41d6e8:	bl	410764 <wcrtomb@plt+0xb964>
  41d6ec:	ldr	x20, [x20, #24]
  41d6f0:	mov	x21, x0
  41d6f4:	str	x0, [x20, #8]
  41d6f8:	bl	404170 <strlen@plt>
  41d6fc:	cmp	x0, #0x65
  41d700:	b.cc	41d70c <wcrtomb@plt+0x1890c>  // b.lo, b.ul, b.last
  41d704:	strb	wzr, [x21, #100]
  41d708:	ldr	x20, [x23]
  41d70c:	ldr	x8, [x20, #264]
  41d710:	ldr	x21, [x20, #136]
  41d714:	mov	x0, x20
  41d718:	str	x8, [x20, #136]
  41d71c:	bl	40a890 <wcrtomb@plt+0x5a90>
  41d720:	str	x21, [x20, #136]
  41d724:	ldr	x8, [x23]
  41d728:	mov	x1, x0
  41d72c:	mov	x2, x19
  41d730:	mov	x0, x8
  41d734:	bl	40b220 <wcrtomb@plt+0x6420>
  41d738:	ldr	x8, [x23]
  41d73c:	ldr	x0, [x8, #8]
  41d740:	bl	4049b0 <free@plt>
  41d744:	ldr	x8, [x23]
  41d748:	str	x24, [x8, #8]
  41d74c:	bl	405574 <wcrtomb@plt+0x774>
  41d750:	ldr	x8, [x23]
  41d754:	mov	x19, x0
  41d758:	add	x1, sp, #0x8
  41d75c:	ldr	x8, [x8, #288]
  41d760:	mov	x0, x8
  41d764:	bl	43401c <argp_parse@@Base+0x5360>
  41d768:	ldrb	w8, [x0]
  41d76c:	cbz	w8, 41d8f8 <wcrtomb@plt+0x18af8>
  41d770:	add	x9, x19, #0x200
  41d774:	add	x21, x0, #0x1
  41d778:	mov	x20, x19
  41d77c:	cmp	x20, x9
  41d780:	b.ne	41d7a0 <wcrtomb@plt+0x189a0>  // b.any
  41d784:	mov	x0, x19
  41d788:	bl	40587c <wcrtomb@plt+0xa7c>
  41d78c:	bl	405574 <wcrtomb@plt+0x774>
  41d790:	ldurb	w8, [x21, #-1]
  41d794:	mov	x20, x0
  41d798:	add	x9, x0, #0x200
  41d79c:	mov	x19, x0
  41d7a0:	strb	w8, [x20], #1
  41d7a4:	ldrb	w8, [x21], #1
  41d7a8:	cbnz	w8, 41d77c <wcrtomb@plt+0x1897c>
  41d7ac:	b	41d8fc <wcrtomb@plt+0x18afc>
  41d7b0:	ldr	x1, [x23]
  41d7b4:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  41d7b8:	add	x0, x0, #0xde1
  41d7bc:	mov	x2, xzr
  41d7c0:	ldr	x24, [x1, #304]
  41d7c4:	bl	411550 <wcrtomb@plt+0xc750>
  41d7c8:	ldr	x1, [x23]
  41d7cc:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  41d7d0:	add	x0, x0, #0xdcc
  41d7d4:	mov	x2, xzr
  41d7d8:	bl	411550 <wcrtomb@plt+0xc750>
  41d7dc:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  41d7e0:	add	x0, x0, #0xe17
  41d7e4:	bl	4103a8 <wcrtomb@plt+0xb5a8>
  41d7e8:	tbnz	w0, #0, 41da54 <wcrtomb@plt+0x18c54>
  41d7ec:	ldr	w8, [x21, #3672]
  41d7f0:	cbz	w8, 41da54 <wcrtomb@plt+0x18c54>
  41d7f4:	ldr	x1, [x23]
  41d7f8:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x10808>
  41d7fc:	add	x0, x0, #0xd86
  41d800:	mov	x2, xzr
  41d804:	bl	411550 <wcrtomb@plt+0xc750>
  41d808:	ldr	x0, [x23]
  41d80c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41d810:	add	x1, x1, #0xe3a
  41d814:	mov	x2, xzr
  41d818:	ldr	x22, [x0, #8]
  41d81c:	bl	410764 <wcrtomb@plt+0xb964>
  41d820:	ldr	x8, [x23]
  41d824:	str	x0, [x8, #8]
  41d828:	add	x0, x8, #0x158
  41d82c:	bl	411780 <wcrtomb@plt+0xc980>
  41d830:	str	xzr, [x29, #24]
  41d834:	ldr	x8, [x23]
  41d838:	ldr	x9, [x8, #288]
  41d83c:	cbz	x9, 41d8d8 <wcrtomb@plt+0x18ad8>
  41d840:	adrp	x20, 452000 <_obstack_memory_used@@Base+0x16808>
  41d844:	mov	x9, xzr
  41d848:	add	x20, x20, #0x478
  41d84c:	cbz	x9, 41d864 <wcrtomb@plt+0x18a64>
  41d850:	add	x0, x8, #0x158
  41d854:	mov	x1, x20
  41d858:	bl	411788 <wcrtomb@plt+0xc988>
  41d85c:	ldr	x8, [x23]
  41d860:	ldr	x9, [x29, #24]
  41d864:	lsl	x9, x9, #4
  41d868:	ldr	x0, [x24, x9]
  41d86c:	add	x1, sp, #0x8
  41d870:	add	x21, x8, #0x158
  41d874:	bl	43401c <argp_parse@@Base+0x5360>
  41d878:	mov	x1, x0
  41d87c:	mov	x0, x21
  41d880:	bl	411788 <wcrtomb@plt+0xc988>
  41d884:	ldr	x8, [x23]
  41d888:	mov	x1, x20
  41d88c:	add	x0, x8, #0x158
  41d890:	bl	411788 <wcrtomb@plt+0xc988>
  41d894:	ldr	x8, [x29, #24]
  41d898:	ldr	x9, [x23]
  41d89c:	add	x1, sp, #0x8
  41d8a0:	add	x8, x24, x8, lsl #4
  41d8a4:	ldr	x0, [x8, #8]
  41d8a8:	add	x21, x9, #0x158
  41d8ac:	bl	43401c <argp_parse@@Base+0x5360>
  41d8b0:	mov	x1, x0
  41d8b4:	mov	x0, x21
  41d8b8:	bl	411788 <wcrtomb@plt+0xc988>
  41d8bc:	ldr	x8, [x29, #24]
  41d8c0:	add	x9, x8, #0x1
  41d8c4:	str	x9, [x29, #24]
  41d8c8:	ldr	x8, [x23]
  41d8cc:	ldr	x10, [x8, #288]
  41d8d0:	cmp	x9, x10
  41d8d4:	b.cc	41d84c <wcrtomb@plt+0x18a4c>  // b.lo, b.ul, b.last
  41d8d8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  41d8dc:	add	x0, x8, #0x158
  41d8e0:	add	x1, x1, #0xe17
  41d8e4:	bl	41185c <wcrtomb@plt+0xca5c>
  41d8e8:	ldr	x20, [x23]
  41d8ec:	tbnz	w0, #0, 41dab4 <wcrtomb@plt+0x18cb4>
  41d8f0:	mov	w19, wzr
  41d8f4:	b	41daec <wcrtomb@plt+0x18cec>
  41d8f8:	mov	x20, x19
  41d8fc:	add	x8, x19, #0x200
  41d900:	cmp	x20, x8
  41d904:	b.ne	41d91c <wcrtomb@plt+0x18b1c>  // b.any
  41d908:	mov	x0, x19
  41d90c:	bl	40587c <wcrtomb@plt+0xa7c>
  41d910:	bl	405574 <wcrtomb@plt+0x774>
  41d914:	mov	x20, x0
  41d918:	mov	x19, x0
  41d91c:	mov	w21, #0xa                   	// #10
  41d920:	strb	w21, [x20], #1
  41d924:	ldr	x8, [x23]
  41d928:	ldr	x8, [x8, #288]
  41d92c:	cbz	x8, 41da30 <wcrtomb@plt+0x18c30>
  41d930:	mov	x24, xzr
  41d934:	lsl	x8, x24, #4
  41d938:	ldr	x0, [x22, x8]
  41d93c:	add	x1, sp, #0x8
  41d940:	bl	43401c <argp_parse@@Base+0x5360>
  41d944:	ldrb	w8, [x0]
  41d948:	cbz	w8, 41d984 <wcrtomb@plt+0x18b84>
  41d94c:	add	x9, x19, #0x200
  41d950:	add	x25, x0, #0x1
  41d954:	cmp	x20, x9
  41d958:	b.ne	41d978 <wcrtomb@plt+0x18b78>  // b.any
  41d95c:	mov	x0, x19
  41d960:	bl	40587c <wcrtomb@plt+0xa7c>
  41d964:	bl	405574 <wcrtomb@plt+0x774>
  41d968:	ldurb	w8, [x25, #-1]
  41d96c:	mov	x20, x0
  41d970:	add	x9, x0, #0x200
  41d974:	mov	x19, x0
  41d978:	strb	w8, [x20], #1
  41d97c:	ldrb	w8, [x25], #1
  41d980:	cbnz	w8, 41d954 <wcrtomb@plt+0x18b54>
  41d984:	add	x8, x19, #0x200
  41d988:	cmp	x20, x8
  41d98c:	b.ne	41d9a4 <wcrtomb@plt+0x18ba4>  // b.any
  41d990:	mov	x0, x19
  41d994:	bl	40587c <wcrtomb@plt+0xa7c>
  41d998:	bl	405574 <wcrtomb@plt+0x774>
  41d99c:	mov	x20, x0
  41d9a0:	mov	x19, x0
  41d9a4:	strb	w21, [x20], #1
  41d9a8:	add	x8, x22, x24, lsl #4
  41d9ac:	ldr	x0, [x8, #8]
  41d9b0:	add	x1, sp, #0x8
  41d9b4:	bl	43401c <argp_parse@@Base+0x5360>
  41d9b8:	ldrb	w8, [x0]
  41d9bc:	cbz	w8, 41d9f8 <wcrtomb@plt+0x18bf8>
  41d9c0:	add	x9, x19, #0x200
  41d9c4:	add	x25, x0, #0x1
  41d9c8:	cmp	x20, x9
  41d9cc:	b.ne	41d9ec <wcrtomb@plt+0x18bec>  // b.any
  41d9d0:	mov	x0, x19
  41d9d4:	bl	40587c <wcrtomb@plt+0xa7c>
  41d9d8:	bl	405574 <wcrtomb@plt+0x774>
  41d9dc:	ldurb	w8, [x25, #-1]
  41d9e0:	mov	x20, x0
  41d9e4:	add	x9, x0, #0x200
  41d9e8:	mov	x19, x0
  41d9ec:	strb	w8, [x20], #1
  41d9f0:	ldrb	w8, [x25], #1
  41d9f4:	cbnz	w8, 41d9c8 <wcrtomb@plt+0x18bc8>
  41d9f8:	add	x8, x19, #0x200
  41d9fc:	cmp	x20, x8
  41da00:	b.ne	41da18 <wcrtomb@plt+0x18c18>  // b.any
  41da04:	mov	x0, x19
  41da08:	bl	40587c <wcrtomb@plt+0xa7c>
  41da0c:	bl	405574 <wcrtomb@plt+0x774>
  41da10:	mov	x20, x0
  41da14:	mov	x19, x0
  41da18:	strb	w21, [x20], #1
  41da1c:	ldr	x8, [x23]
  41da20:	add	x24, x24, #0x1
  41da24:	ldr	x8, [x8, #288]
  41da28:	cmp	x24, x8
  41da2c:	b.cc	41d934 <wcrtomb@plt+0x18b34>  // b.lo, b.ul, b.last
  41da30:	sub	x8, x19, x20
  41da34:	add	x2, x8, #0x200
  41da38:	mov	x0, x20
  41da3c:	mov	w1, wzr
  41da40:	bl	4045e0 <memset@plt>
  41da44:	mov	x0, x19
  41da48:	bl	40587c <wcrtomb@plt+0xa7c>
  41da4c:	mov	w19, #0x1                   	// #1
  41da50:	b	41dafc <wcrtomb@plt+0x18cfc>
  41da54:	str	xzr, [x29, #24]
  41da58:	ldr	x20, [x23]
  41da5c:	ldr	x8, [x20, #288]
  41da60:	cbz	x8, 41dab0 <wcrtomb@plt+0x18cb0>
  41da64:	adrp	x21, 44c000 <_obstack_memory_used@@Base+0x10808>
  41da68:	adrp	x22, 44c000 <_obstack_memory_used@@Base+0x10808>
  41da6c:	add	x21, x21, #0xdf1
  41da70:	add	x22, x22, #0xe03
  41da74:	add	x2, x29, #0x18
  41da78:	mov	x0, x21
  41da7c:	mov	x1, x20
  41da80:	bl	411550 <wcrtomb@plt+0xc750>
  41da84:	ldr	x1, [x23]
  41da88:	add	x2, x29, #0x18
  41da8c:	mov	x0, x22
  41da90:	bl	411550 <wcrtomb@plt+0xc750>
  41da94:	ldr	x8, [x29, #24]
  41da98:	add	x8, x8, #0x1
  41da9c:	str	x8, [x29, #24]
  41daa0:	ldr	x20, [x23]
  41daa4:	ldr	x9, [x20, #288]
  41daa8:	cmp	x8, x9
  41daac:	b.cc	41da74 <wcrtomb@plt+0x18c74>  // b.lo, b.ul, b.last
  41dab0:	mov	x22, xzr
  41dab4:	ldr	x8, [x20, #264]
  41dab8:	ldr	x21, [x20, #136]
  41dabc:	mov	x0, x20
  41dac0:	str	x8, [x20, #136]
  41dac4:	bl	40a890 <wcrtomb@plt+0x5a90>
  41dac8:	str	x21, [x20, #136]
  41dacc:	ldr	x8, [x23]
  41dad0:	mov	x1, x0
  41dad4:	mov	x2, x19
  41dad8:	mov	x0, x8
  41dadc:	bl	40b220 <wcrtomb@plt+0x6420>
  41dae0:	cbz	x22, 41da4c <wcrtomb@plt+0x18c4c>
  41dae4:	ldr	x20, [x23]
  41dae8:	mov	w19, #0x1                   	// #1
  41daec:	ldr	x0, [x20, #8]
  41daf0:	bl	4049b0 <free@plt>
  41daf4:	ldr	x8, [x23]
  41daf8:	str	x22, [x8, #8]
  41dafc:	mov	w0, w19
  41db00:	ldp	x20, x19, [sp, #112]
  41db04:	ldp	x22, x21, [sp, #96]
  41db08:	ldp	x24, x23, [sp, #80]
  41db0c:	ldp	x26, x25, [sp, #64]
  41db10:	ldr	x27, [sp, #48]
  41db14:	ldp	x29, x30, [sp, #32]
  41db18:	add	sp, sp, #0x80
  41db1c:	ret
  41db20:	sub	sp, sp, #0x80
  41db24:	stp	x29, x30, [sp, #48]
  41db28:	stp	x24, x23, [sp, #80]
  41db2c:	stp	x22, x21, [sp, #96]
  41db30:	stp	x20, x19, [sp, #112]
  41db34:	ldr	x8, [x0, #24]
  41db38:	str	x25, [sp, #64]
  41db3c:	add	x29, sp, #0x30
  41db40:	ldr	w8, [x8, #276]
  41db44:	cbz	w8, 41dd24 <wcrtomb@plt+0x18f24>
  41db48:	mov	x19, x0
  41db4c:	bl	405508 <wcrtomb@plt+0x708>
  41db50:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41db54:	ldr	x8, [x8, #3560]
  41db58:	mov	x20, x0
  41db5c:	mov	x0, x8
  41db60:	bl	40587c <wcrtomb@plt+0xa7c>
  41db64:	bl	405574 <wcrtomb@plt+0x774>
  41db68:	cbz	x0, 41ddb0 <wcrtomb@plt+0x18fb0>
  41db6c:	mov	x21, x0
  41db70:	mov	x23, xzr
  41db74:	add	x8, x0, #0x200
  41db78:	add	x24, sp, #0x18
  41db7c:	mov	x22, x0
  41db80:	cmp	x23, #0x14
  41db84:	b.eq	41dd2c <wcrtomb@plt+0x18f2c>  // b.none
  41db88:	cmp	x22, x8
  41db8c:	b.ne	41dbac <wcrtomb@plt+0x18dac>  // b.any
  41db90:	mov	x0, x21
  41db94:	bl	40587c <wcrtomb@plt+0xa7c>
  41db98:	bl	405574 <wcrtomb@plt+0x774>
  41db9c:	cbz	x0, 41ddb0 <wcrtomb@plt+0x18fb0>
  41dba0:	mov	x21, x0
  41dba4:	add	x8, x0, #0x200
  41dba8:	mov	x22, x0
  41dbac:	ldrb	w9, [x22], #1
  41dbb0:	strb	w9, [x24, x23]
  41dbb4:	cmp	w9, #0xa
  41dbb8:	add	x23, x23, #0x1
  41dbbc:	b.ne	41db80 <wcrtomb@plt+0x18d80>  // b.any
  41dbc0:	add	x8, sp, #0x18
  41dbc4:	add	x8, x8, x23
  41dbc8:	add	x0, x29, #0x18
  41dbcc:	add	x1, sp, #0x18
  41dbd0:	mov	x2, #0xffffffffffffffff    	// #-1
  41dbd4:	sturb	wzr, [x8, #-1]
  41dbd8:	bl	41dde8 <wcrtomb@plt+0x18fe8>
  41dbdc:	tbz	w0, #0, 41dd48 <wcrtomb@plt+0x18f48>
  41dbe0:	ldr	x0, [x29, #24]
  41dbe4:	ldr	x8, [x19, #24]
  41dbe8:	mov	w1, #0x10                  	// #16
  41dbec:	str	x0, [x8, #296]
  41dbf0:	bl	43a928 <argp_parse@@Base+0xbc6c>
  41dbf4:	ldr	x8, [x19, #24]
  41dbf8:	ldr	x9, [x8, #296]
  41dbfc:	str	x0, [x8, #304]
  41dc00:	str	xzr, [x8, #288]
  41dc04:	cbz	x9, 41dd08 <wcrtomb@plt+0x18f08>
  41dc08:	mov	x23, xzr
  41dc0c:	add	x24, sp, #0x18
  41dc10:	mov	x25, xzr
  41dc14:	add	x8, x21, #0x200
  41dc18:	cmp	x25, #0x14
  41dc1c:	b.eq	41dd2c <wcrtomb@plt+0x18f2c>  // b.none
  41dc20:	cmp	x22, x8
  41dc24:	b.ne	41dc44 <wcrtomb@plt+0x18e44>  // b.any
  41dc28:	mov	x0, x21
  41dc2c:	bl	40587c <wcrtomb@plt+0xa7c>
  41dc30:	bl	405574 <wcrtomb@plt+0x774>
  41dc34:	cbz	x0, 41ddb0 <wcrtomb@plt+0x18fb0>
  41dc38:	mov	x21, x0
  41dc3c:	add	x8, x0, #0x200
  41dc40:	mov	x22, x0
  41dc44:	ldrb	w9, [x22], #1
  41dc48:	strb	w9, [x24, x25]
  41dc4c:	cmp	w9, #0xa
  41dc50:	add	x25, x25, #0x1
  41dc54:	b.ne	41dc18 <wcrtomb@plt+0x18e18>  // b.any
  41dc58:	add	x8, x24, x25
  41dc5c:	add	x0, x29, #0x18
  41dc60:	add	x1, sp, #0x18
  41dc64:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  41dc68:	sturb	wzr, [x8, #-1]
  41dc6c:	bl	41dde8 <wcrtomb@plt+0x18fe8>
  41dc70:	tbz	w0, #0, 41dd48 <wcrtomb@plt+0x18f48>
  41dc74:	ldr	x8, [x29, #24]
  41dc78:	mov	x25, xzr
  41dc7c:	str	x8, [sp, #8]
  41dc80:	add	x8, x21, #0x200
  41dc84:	cmp	x25, #0x14
  41dc88:	b.eq	41dd2c <wcrtomb@plt+0x18f2c>  // b.none
  41dc8c:	cmp	x22, x8
  41dc90:	b.ne	41dcb0 <wcrtomb@plt+0x18eb0>  // b.any
  41dc94:	mov	x0, x21
  41dc98:	bl	40587c <wcrtomb@plt+0xa7c>
  41dc9c:	bl	405574 <wcrtomb@plt+0x774>
  41dca0:	cbz	x0, 41ddb0 <wcrtomb@plt+0x18fb0>
  41dca4:	mov	x21, x0
  41dca8:	add	x8, x0, #0x200
  41dcac:	mov	x22, x0
  41dcb0:	ldrb	w9, [x22], #1
  41dcb4:	strb	w9, [x24, x25]
  41dcb8:	cmp	w9, #0xa
  41dcbc:	add	x25, x25, #0x1
  41dcc0:	b.ne	41dc84 <wcrtomb@plt+0x18e84>  // b.any
  41dcc4:	add	x8, x24, x25
  41dcc8:	add	x0, x29, #0x18
  41dccc:	add	x1, sp, #0x18
  41dcd0:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  41dcd4:	sturb	wzr, [x8, #-1]
  41dcd8:	bl	41dde8 <wcrtomb@plt+0x18fe8>
  41dcdc:	tbz	w0, #0, 41dd48 <wcrtomb@plt+0x18f48>
  41dce0:	ldr	x8, [x29, #24]
  41dce4:	add	x1, sp, #0x8
  41dce8:	str	x8, [sp, #16]
  41dcec:	ldr	x0, [x19, #24]
  41dcf0:	bl	41d418 <wcrtomb@plt+0x18618>
  41dcf4:	ldr	x8, [x19, #24]
  41dcf8:	add	x23, x23, #0x1
  41dcfc:	ldr	x8, [x8, #296]
  41dd00:	cmp	x23, x8
  41dd04:	b.cc	41dc10 <wcrtomb@plt+0x18e10>  // b.lo, b.ul, b.last
  41dd08:	mov	x0, x21
  41dd0c:	bl	40587c <wcrtomb@plt+0xa7c>
  41dd10:	bl	405508 <wcrtomb@plt+0x708>
  41dd14:	ldr	x8, [x19, #16]
  41dd18:	sub	x9, x0, x20
  41dd1c:	add	x8, x8, x9, lsl #9
  41dd20:	str	x8, [x19, #16]
  41dd24:	mov	w0, #0x1                   	// #1
  41dd28:	b	41dd94 <wcrtomb@plt+0x18f94>
  41dd2c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41dd30:	ldr	x8, [x8, #496]
  41dd34:	cbz	x8, 41dd3c <wcrtomb@plt+0x18f3c>
  41dd38:	blr	x8
  41dd3c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41dd40:	add	x1, x1, #0xe51
  41dd44:	b	41dd60 <wcrtomb@plt+0x18f60>
  41dd48:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41dd4c:	ldr	x8, [x8, #496]
  41dd50:	cbz	x8, 41dd58 <wcrtomb@plt+0x18f58>
  41dd54:	blr	x8
  41dd58:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41dd5c:	add	x1, x1, #0xe7f
  41dd60:	mov	w2, #0x5                   	// #5
  41dd64:	mov	x0, xzr
  41dd68:	bl	404bd0 <dcgettext@plt>
  41dd6c:	ldr	x8, [x19, #24]
  41dd70:	mov	x2, x0
  41dd74:	mov	w0, wzr
  41dd78:	mov	w1, wzr
  41dd7c:	ldr	x3, [x8]
  41dd80:	bl	4041d0 <error@plt>
  41dd84:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41dd88:	mov	w9, #0x2                   	// #2
  41dd8c:	str	w9, [x8, #2944]
  41dd90:	mov	w0, wzr
  41dd94:	ldp	x20, x19, [sp, #112]
  41dd98:	ldp	x22, x21, [sp, #96]
  41dd9c:	ldp	x24, x23, [sp, #80]
  41dda0:	ldr	x25, [sp, #64]
  41dda4:	ldp	x29, x30, [sp, #48]
  41dda8:	add	sp, sp, #0x80
  41ddac:	ret
  41ddb0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41ddb4:	ldr	x8, [x8, #496]
  41ddb8:	cbz	x8, 41ddc0 <wcrtomb@plt+0x18fc0>
  41ddbc:	blr	x8
  41ddc0:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  41ddc4:	add	x1, x1, #0x582
  41ddc8:	mov	w2, #0x5                   	// #5
  41ddcc:	mov	x0, xzr
  41ddd0:	bl	404bd0 <dcgettext@plt>
  41ddd4:	mov	x2, x0
  41ddd8:	mov	w0, wzr
  41dddc:	mov	w1, wzr
  41dde0:	bl	4041d0 <error@plt>
  41dde4:	bl	40d698 <wcrtomb@plt+0x8898>
  41dde8:	sub	sp, sp, #0x40
  41ddec:	stp	x29, x30, [sp, #16]
  41ddf0:	stp	x22, x21, [sp, #32]
  41ddf4:	stp	x20, x19, [sp, #48]
  41ddf8:	ldrb	w8, [x1]
  41ddfc:	add	x29, sp, #0x10
  41de00:	sub	w8, w8, #0x30
  41de04:	cmp	w8, #0x9
  41de08:	b.hi	41de58 <wcrtomb@plt+0x19058>  // b.pmore
  41de0c:	mov	x20, x2
  41de10:	mov	x22, x1
  41de14:	mov	x19, x0
  41de18:	bl	404ce0 <__errno_location@plt>
  41de1c:	mov	x21, x0
  41de20:	str	wzr, [x0]
  41de24:	add	x1, sp, #0x8
  41de28:	mov	w2, #0xa                   	// #10
  41de2c:	mov	x0, x22
  41de30:	bl	404820 <strtoumax@plt>
  41de34:	cmp	x0, x20
  41de38:	mov	w8, wzr
  41de3c:	b.hi	41de5c <wcrtomb@plt+0x1905c>  // b.pmore
  41de40:	ldr	w8, [x21]
  41de44:	cmp	w8, #0x22
  41de48:	b.eq	41de58 <wcrtomb@plt+0x19058>  // b.none
  41de4c:	ldr	x8, [sp, #8]
  41de50:	ldrb	w8, [x8]
  41de54:	cbz	w8, 41de74 <wcrtomb@plt+0x19074>
  41de58:	mov	w8, wzr
  41de5c:	ldp	x20, x19, [sp, #48]
  41de60:	ldp	x22, x21, [sp, #32]
  41de64:	ldp	x29, x30, [sp, #16]
  41de68:	mov	w0, w8
  41de6c:	add	sp, sp, #0x40
  41de70:	ret
  41de74:	mov	w8, #0x1                   	// #1
  41de78:	str	x0, [x19]
  41de7c:	b	41de5c <wcrtomb@plt+0x1905c>
  41de80:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41de84:	ldr	x8, [x8, #3560]
  41de88:	ldrb	w8, [x8, #156]
  41de8c:	cmp	w8, #0x53
  41de90:	cset	w0, eq  // eq = none
  41de94:	ret
  41de98:	stp	x29, x30, [sp, #-32]!
  41de9c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41dea0:	ldr	x8, [x8, #3560]
  41dea4:	str	x19, [sp, #16]
  41dea8:	mov	x19, x0
  41deac:	mov	w1, #0xc                   	// #12
  41deb0:	add	x0, x8, #0x1c4
  41deb4:	mov	x29, sp
  41deb8:	bl	41753c <wcrtomb@plt+0x1273c>
  41debc:	ldr	x8, [x19, #24]
  41dec0:	ldr	x19, [sp, #16]
  41dec4:	bic	x10, x0, x0, asr #63
  41dec8:	lsr	x11, x0, #63
  41decc:	ldr	x9, [x8, #136]
  41ded0:	eor	w0, w11, #0x1
  41ded4:	str	x10, [x8, #136]
  41ded8:	str	x9, [x8, #264]
  41dedc:	ldp	x29, x30, [sp], #32
  41dee0:	ret
  41dee4:	stp	x29, x30, [sp, #-48]!
  41dee8:	stp	x22, x21, [sp, #16]
  41deec:	stp	x20, x19, [sp, #32]
  41def0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41def4:	ldr	x9, [x0, #24]
  41def8:	ldr	x20, [x8, #3560]
  41defc:	mov	x19, x0
  41df00:	mov	x29, sp
  41df04:	str	xzr, [x9, #288]
  41df08:	ldrb	w8, [x20, #345]
  41df0c:	cbz	w8, 41df20 <wcrtomb@plt+0x19120>
  41df10:	mov	w0, wzr
  41df14:	mov	w8, #0x1                   	// #1
  41df18:	cbnz	w8, 41df5c <wcrtomb@plt+0x1915c>
  41df1c:	b	41dfb0 <wcrtomb@plt+0x191b0>
  41df20:	ldrb	w8, [x20, #366]
  41df24:	cbz	w8, 41df10 <wcrtomb@plt+0x19110>
  41df28:	mov	x21, xzr
  41df2c:	add	x22, x20, #0x164
  41df30:	add	x1, x22, x21
  41df34:	mov	x0, x19
  41df38:	bl	41d360 <wcrtomb@plt+0x18560>
  41df3c:	cbnz	w0, 41df4c <wcrtomb@plt+0x1914c>
  41df40:	add	x21, x21, #0x18
  41df44:	cmp	x21, #0x60
  41df48:	b.ne	41df30 <wcrtomb@plt+0x19130>  // b.any
  41df4c:	ldrb	w8, [x20, #355]
  41df50:	cmp	w8, #0x0
  41df54:	cset	w8, ne  // ne = any
  41df58:	cbz	w8, 41dfb0 <wcrtomb@plt+0x191b0>
  41df5c:	cbnz	w0, 41dfb0 <wcrtomb@plt+0x191b0>
  41df60:	bl	405574 <wcrtomb@plt+0x774>
  41df64:	cbz	x0, 41e000 <wcrtomb@plt+0x19200>
  41df68:	mov	x20, x0
  41df6c:	bl	40587c <wcrtomb@plt+0xa7c>
  41df70:	mov	x22, xzr
  41df74:	mov	x21, x20
  41df78:	mov	x0, x19
  41df7c:	mov	x1, x21
  41df80:	bl	41d360 <wcrtomb@plt+0x18560>
  41df84:	cmp	x22, #0x13
  41df88:	b.hi	41df98 <wcrtomb@plt+0x19198>  // b.pmore
  41df8c:	add	x22, x22, #0x1
  41df90:	add	x21, x21, #0x18
  41df94:	cbz	w0, 41df78 <wcrtomb@plt+0x19178>
  41df98:	ldr	x8, [x19, #16]
  41df9c:	add	x8, x8, #0x200
  41dfa0:	str	x8, [x19, #16]
  41dfa4:	ldrb	w8, [x20, #504]
  41dfa8:	cbz	w8, 41dfb0 <wcrtomb@plt+0x191b0>
  41dfac:	cbz	w0, 41df60 <wcrtomb@plt+0x19160>
  41dfb0:	cmp	w0, #0x2
  41dfb4:	b.ne	41dff8 <wcrtomb@plt+0x191f8>  // b.any
  41dfb8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41dfbc:	ldr	x8, [x8, #496]
  41dfc0:	cbz	x8, 41dfc8 <wcrtomb@plt+0x191c8>
  41dfc4:	blr	x8
  41dfc8:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41dfcc:	add	x1, x1, #0xe18
  41dfd0:	mov	w2, #0x5                   	// #5
  41dfd4:	mov	x0, xzr
  41dfd8:	bl	404bd0 <dcgettext@plt>
  41dfdc:	ldr	x8, [x19, #24]
  41dfe0:	mov	x2, x0
  41dfe4:	mov	w0, wzr
  41dfe8:	mov	w1, wzr
  41dfec:	ldr	x3, [x8]
  41dff0:	bl	4041d0 <error@plt>
  41dff4:	b	41e034 <wcrtomb@plt+0x19234>
  41dff8:	mov	w0, #0x1                   	// #1
  41dffc:	b	41e044 <wcrtomb@plt+0x19244>
  41e000:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e004:	ldr	x8, [x8, #496]
  41e008:	cbz	x8, 41e010 <wcrtomb@plt+0x19210>
  41e00c:	blr	x8
  41e010:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  41e014:	add	x1, x1, #0x582
  41e018:	mov	w2, #0x5                   	// #5
  41e01c:	mov	x0, xzr
  41e020:	bl	404bd0 <dcgettext@plt>
  41e024:	mov	x2, x0
  41e028:	mov	w0, wzr
  41e02c:	mov	w1, wzr
  41e030:	bl	4041d0 <error@plt>
  41e034:	mov	w0, wzr
  41e038:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41e03c:	mov	w9, #0x2                   	// #2
  41e040:	str	w9, [x8, #2944]
  41e044:	ldp	x20, x19, [sp, #32]
  41e048:	ldp	x22, x21, [sp, #16]
  41e04c:	ldp	x29, x30, [sp], #48
  41e050:	ret
  41e054:	stp	x29, x30, [sp, #-32]!
  41e058:	str	x19, [sp, #16]
  41e05c:	mov	x19, x1
  41e060:	mov	x1, xzr
  41e064:	mov	x29, sp
  41e068:	bl	41e134 <wcrtomb@plt+0x19334>
  41e06c:	cbz	x0, 41e074 <wcrtomb@plt+0x19274>
  41e070:	ldr	x19, [x0, #16]
  41e074:	cbz	x19, 41e080 <wcrtomb@plt+0x19280>
  41e078:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e07c:	str	x19, [x8, #392]
  41e080:	ldr	x19, [sp, #16]
  41e084:	ldp	x29, x30, [sp], #32
  41e088:	ret
  41e08c:	stp	x29, x30, [sp, #-48]!
  41e090:	mov	x29, sp
  41e094:	add	x1, x29, #0x18
  41e098:	str	x21, [sp, #16]
  41e09c:	stp	x20, x19, [sp, #32]
  41e0a0:	mov	x19, x0
  41e0a4:	bl	41e134 <wcrtomb@plt+0x19334>
  41e0a8:	mov	x20, x0
  41e0ac:	cbz	x0, 41e118 <wcrtomb@plt+0x19318>
  41e0b0:	ldr	x21, [x29, #24]
  41e0b4:	cmp	x21, #0x5
  41e0b8:	b.cc	41e0f4 <wcrtomb@plt+0x192f4>  // b.lo, b.ul, b.last
  41e0bc:	add	x8, x19, x21
  41e0c0:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41e0c4:	sub	x0, x8, #0x4
  41e0c8:	add	x1, x1, #0xec5
  41e0cc:	mov	w2, #0x4                   	// #4
  41e0d0:	bl	404580 <strncmp@plt>
  41e0d4:	cbnz	w0, 41e0f8 <wcrtomb@plt+0x192f8>
  41e0d8:	ldr	x8, [x20]
  41e0dc:	ldrb	w8, [x8]
  41e0e0:	cmp	w8, #0x74
  41e0e4:	b.eq	41e0f8 <wcrtomb@plt+0x192f8>  // b.none
  41e0e8:	sub	x21, x21, #0x4
  41e0ec:	str	x21, [x29, #24]
  41e0f0:	b	41e0f8 <wcrtomb@plt+0x192f8>
  41e0f4:	cbz	x21, 41e12c <wcrtomb@plt+0x1932c>
  41e0f8:	add	x0, x21, #0x1
  41e0fc:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  41e100:	ldr	x21, [x29, #24]
  41e104:	mov	x1, x19
  41e108:	mov	x20, x0
  41e10c:	mov	x2, x21
  41e110:	bl	4040f0 <memcpy@plt>
  41e114:	strb	wzr, [x20, x21]
  41e118:	mov	x0, x20
  41e11c:	ldp	x20, x19, [sp, #32]
  41e120:	ldr	x21, [sp, #16]
  41e124:	ldp	x29, x30, [sp], #48
  41e128:	ret
  41e12c:	mov	x20, xzr
  41e130:	b	41e118 <wcrtomb@plt+0x19318>
  41e134:	stp	x29, x30, [sp, #-64]!
  41e138:	stp	x20, x19, [sp, #48]
  41e13c:	mov	x19, x1
  41e140:	mov	w1, #0x2e                  	// #46
  41e144:	str	x23, [sp, #16]
  41e148:	stp	x22, x21, [sp, #32]
  41e14c:	mov	x29, sp
  41e150:	mov	x20, x0
  41e154:	bl	4047b0 <strrchr@plt>
  41e158:	cbz	x0, 41e1a8 <wcrtomb@plt+0x193a8>
  41e15c:	add	x23, x0, #0x1
  41e160:	mov	x0, x23
  41e164:	bl	404170 <strlen@plt>
  41e168:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  41e16c:	ldr	x8, [x8, #3752]
  41e170:	cbz	x8, 41e1a8 <wcrtomb@plt+0x193a8>
  41e174:	adrp	x21, 467000 <_obstack_memory_used@@Base+0x2b808>
  41e178:	mov	x22, x0
  41e17c:	add	x21, x21, #0xea8
  41e180:	ldr	x9, [x21, #8]
  41e184:	cmp	x9, x22
  41e188:	b.ne	41e1a0 <wcrtomb@plt+0x193a0>  // b.any
  41e18c:	mov	x0, x8
  41e190:	mov	x1, x23
  41e194:	mov	x2, x22
  41e198:	bl	4046b0 <bcmp@plt>
  41e19c:	cbz	w0, 41e1c4 <wcrtomb@plt+0x193c4>
  41e1a0:	ldr	x8, [x21, #24]!
  41e1a4:	cbnz	x8, 41e180 <wcrtomb@plt+0x19380>
  41e1a8:	mov	x21, xzr
  41e1ac:	mov	x0, x21
  41e1b0:	ldp	x20, x19, [sp, #48]
  41e1b4:	ldp	x22, x21, [sp, #32]
  41e1b8:	ldr	x23, [sp, #16]
  41e1bc:	ldp	x29, x30, [sp], #64
  41e1c0:	ret
  41e1c4:	cbz	x19, 41e1ac <wcrtomb@plt+0x193ac>
  41e1c8:	mov	x0, x20
  41e1cc:	bl	404170 <strlen@plt>
  41e1d0:	mvn	x8, x22
  41e1d4:	add	x8, x0, x8
  41e1d8:	str	x8, [x19]
  41e1dc:	b	41e1ac <wcrtomb@plt+0x193ac>
  41e1e0:	stp	x29, x30, [sp, #-16]!
  41e1e4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e1e8:	ldr	w0, [x8, #464]
  41e1ec:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41e1f0:	add	x1, x1, #0x958
  41e1f4:	mov	x29, sp
  41e1f8:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  41e1fc:	cmp	w0, #0x0
  41e200:	cset	w0, eq  // eq = none
  41e204:	ldp	x29, x30, [sp], #16
  41e208:	ret
  41e20c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e210:	ldr	x8, [x8, #32]
  41e214:	cbz	x8, 41e23c <wcrtomb@plt+0x1943c>
  41e218:	ldr	x9, [x0, #88]
  41e21c:	cmp	x9, x8
  41e220:	b.ne	41e23c <wcrtomb@plt+0x1943c>  // b.any
  41e224:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41e228:	ldr	x8, [x0, #96]
  41e22c:	ldr	x9, [x9, #376]
  41e230:	cmp	x8, x9
  41e234:	cset	w0, eq  // eq = none
  41e238:	ret
  41e23c:	mov	w0, wzr
  41e240:	ret
  41e244:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e248:	ldr	w8, [x8, #464]
  41e24c:	mov	w9, #0x3fffffff            	// #1073741823
  41e250:	cmp	w8, w9
  41e254:	b.gt	41e28c <wcrtomb@plt+0x1948c>
  41e258:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41e25c:	ldr	w8, [x8, #2408]
  41e260:	and	w8, w8, #0xf000
  41e264:	cmp	w8, #0x8, lsl #12
  41e268:	b.ne	41e28c <wcrtomb@plt+0x1948c>  // b.any
  41e26c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41e270:	add	x8, x8, #0x958
  41e274:	ldp	x9, x8, [x8]
  41e278:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  41e27c:	adrp	x11, 46b000 <argp_program_version_hook@@Base+0x458>
  41e280:	str	x9, [x10, #32]
  41e284:	str	x8, [x11, #376]
  41e288:	ret
  41e28c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e290:	str	xzr, [x8, #32]
  41e294:	ret
  41e298:	sub	sp, sp, #0x90
  41e29c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e2a0:	ldr	x8, [x8, #176]
  41e2a4:	stp	x29, x30, [sp, #128]
  41e2a8:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41e2ac:	add	x1, x1, #0xef4
  41e2b0:	ldr	x0, [x8]
  41e2b4:	add	x29, sp, #0x80
  41e2b8:	bl	404900 <strcmp@plt>
  41e2bc:	cbz	w0, 41e330 <wcrtomb@plt+0x19530>
  41e2c0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e2c4:	ldr	w8, [x8, #464]
  41e2c8:	mov	w9, #0x3fffffff            	// #1073741823
  41e2cc:	cmp	w8, w9
  41e2d0:	b.gt	41e328 <wcrtomb@plt+0x19528>
  41e2d4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41e2d8:	ldr	w8, [x8, #2408]
  41e2dc:	and	w8, w8, #0xf000
  41e2e0:	cmp	w8, #0x2, lsl #12
  41e2e4:	b.ne	41e328 <wcrtomb@plt+0x19528>  // b.any
  41e2e8:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41e2ec:	add	x0, x0, #0xef4
  41e2f0:	mov	x1, sp
  41e2f4:	bl	44b928 <_obstack_memory_used@@Base+0x10130>
  41e2f8:	cbnz	w0, 41e328 <wcrtomb@plt+0x19528>
  41e2fc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41e300:	ldr	x8, [x8, #2392]
  41e304:	ldr	x9, [sp]
  41e308:	cmp	x8, x9
  41e30c:	b.ne	41e328 <wcrtomb@plt+0x19528>  // b.any
  41e310:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41e314:	ldr	x8, [x8, #2400]
  41e318:	ldr	x9, [sp, #8]
  41e31c:	cmp	x8, x9
  41e320:	cset	w8, eq  // eq = none
  41e324:	b	41e334 <wcrtomb@plt+0x19534>
  41e328:	mov	w8, wzr
  41e32c:	b	41e334 <wcrtomb@plt+0x19534>
  41e330:	mov	w8, #0x1                   	// #1
  41e334:	ldp	x29, x30, [sp, #128]
  41e338:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41e33c:	strb	w8, [x9, #24]
  41e340:	add	sp, sp, #0x90
  41e344:	ret
  41e348:	sub	sp, sp, #0x30
  41e34c:	stp	x29, x30, [sp, #16]
  41e350:	stp	x20, x19, [sp, #32]
  41e354:	add	x29, sp, #0x10
  41e358:	cbz	w0, 41e404 <wcrtomb@plt+0x19604>
  41e35c:	mov	w19, w1
  41e360:	mov	w20, w0
  41e364:	sub	x1, x29, #0x4
  41e368:	mov	w0, w20
  41e36c:	mov	w2, wzr
  41e370:	bl	404d60 <waitpid@plt>
  41e374:	cmn	w0, #0x1
  41e378:	b.ne	41e398 <wcrtomb@plt+0x19598>  // b.any
  41e37c:	bl	404ce0 <__errno_location@plt>
  41e380:	ldr	w8, [x0]
  41e384:	cmp	w8, #0x4
  41e388:	b.eq	41e364 <wcrtomb@plt+0x19564>  // b.none
  41e38c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e390:	ldr	x0, [x8, #392]
  41e394:	bl	42675c <wcrtomb@plt+0x2195c>
  41e398:	ldur	w9, [x29, #-4]
  41e39c:	mov	w10, #0x1000000             	// #16777216
  41e3a0:	mov	w11, #0x2000000             	// #33554432
  41e3a4:	and	w8, w9, #0x7f
  41e3a8:	add	w10, w10, w8, lsl #24
  41e3ac:	cmp	w10, w11
  41e3b0:	b.lt	41e3fc <wcrtomb@plt+0x195fc>  // b.tstop
  41e3b4:	cmp	w8, #0xd
  41e3b8:	b.ne	41e3c0 <wcrtomb@plt+0x195c0>  // b.any
  41e3bc:	tbz	w19, #0, 41e404 <wcrtomb@plt+0x19604>
  41e3c0:	mov	w19, w8
  41e3c4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e3c8:	ldr	x8, [x8, #496]
  41e3cc:	cbz	x8, 41e3d4 <wcrtomb@plt+0x195d4>
  41e3d0:	blr	x8
  41e3d4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41e3d8:	add	x1, x1, #0xefe
  41e3dc:	mov	w2, #0x5                   	// #5
  41e3e0:	mov	x0, xzr
  41e3e4:	bl	404bd0 <dcgettext@plt>
  41e3e8:	mov	x2, x0
  41e3ec:	mov	w0, wzr
  41e3f0:	mov	w1, wzr
  41e3f4:	mov	w3, w19
  41e3f8:	b	41e448 <wcrtomb@plt+0x19648>
  41e3fc:	tst	w9, #0xff00
  41e400:	b.ne	41e414 <wcrtomb@plt+0x19614>  // b.any
  41e404:	ldp	x20, x19, [sp, #32]
  41e408:	ldp	x29, x30, [sp, #16]
  41e40c:	add	sp, sp, #0x30
  41e410:	ret
  41e414:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e418:	ldr	x8, [x8, #496]
  41e41c:	cbz	x8, 41e424 <wcrtomb@plt+0x19624>
  41e420:	blr	x8
  41e424:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41e428:	add	x1, x1, #0xf4c
  41e42c:	mov	w2, #0x5                   	// #5
  41e430:	mov	x0, xzr
  41e434:	bl	404bd0 <dcgettext@plt>
  41e438:	ldurb	w3, [x29, #-3]
  41e43c:	mov	x2, x0
  41e440:	mov	w0, wzr
  41e444:	mov	w1, wzr
  41e448:	bl	4041d0 <error@plt>
  41e44c:	bl	40d698 <wcrtomb@plt+0x8898>
  41e450:	sub	sp, sp, #0x30
  41e454:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41e458:	add	x0, x0, #0xf18
  41e45c:	stp	x29, x30, [sp, #16]
  41e460:	stp	x20, x19, [sp, #32]
  41e464:	add	x29, sp, #0x10
  41e468:	bl	404d10 <getenv@plt>
  41e46c:	adrp	x8, 44e000 <_obstack_memory_used@@Base+0x12808>
  41e470:	add	x8, x8, #0xf1e
  41e474:	cmp	x0, #0x0
  41e478:	csel	x19, x8, x0, eq  // eq = none
  41e47c:	bl	419df0 <wcrtomb@plt+0x14ff0>
  41e480:	cbz	w0, 41e4c8 <wcrtomb@plt+0x196c8>
  41e484:	mov	w20, w0
  41e488:	sub	x1, x29, #0x4
  41e48c:	mov	w0, w20
  41e490:	mov	w2, wzr
  41e494:	bl	404d60 <waitpid@plt>
  41e498:	cmn	w0, #0x1
  41e49c:	b.ne	41e4b8 <wcrtomb@plt+0x196b8>  // b.any
  41e4a0:	bl	404ce0 <__errno_location@plt>
  41e4a4:	ldr	w8, [x0]
  41e4a8:	cmp	w8, #0x4
  41e4ac:	b.eq	41e488 <wcrtomb@plt+0x19688>  // b.none
  41e4b0:	mov	x0, x19
  41e4b4:	bl	42675c <wcrtomb@plt+0x2195c>
  41e4b8:	ldp	x20, x19, [sp, #32]
  41e4bc:	ldp	x29, x30, [sp, #16]
  41e4c0:	add	sp, sp, #0x30
  41e4c4:	ret
  41e4c8:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41e4cc:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0xf808>
  41e4d0:	add	x1, x1, #0xf26
  41e4d4:	add	x2, x2, #0xb1e
  41e4d8:	mov	x0, x19
  41e4dc:	mov	x3, xzr
  41e4e0:	bl	404d00 <execlp@plt>
  41e4e4:	mov	x0, x19
  41e4e8:	bl	426130 <wcrtomb@plt+0x21330>
  41e4ec:	ldr	w8, [x0, #24]
  41e4f0:	ldr	w9, [x1, #24]
  41e4f4:	cmp	w8, w9
  41e4f8:	cset	w0, eq  // eq = none
  41e4fc:	ret
  41e500:	ldr	w8, [x0, #28]
  41e504:	ldr	w9, [x1, #28]
  41e508:	cmp	w8, w9
  41e50c:	cset	w0, eq  // eq = none
  41e510:	ret
  41e514:	ldr	x8, [x1]
  41e518:	ldr	x9, [x0]
  41e51c:	cmp	x8, x9
  41e520:	b.ne	41e538 <wcrtomb@plt+0x19738>  // b.any
  41e524:	ldr	x8, [x1, #8]
  41e528:	ldr	x9, [x0, #8]
  41e52c:	cmp	x8, x9
  41e530:	cset	w0, eq  // eq = none
  41e534:	ret
  41e538:	mov	w0, wzr
  41e53c:	ret
  41e540:	stp	x29, x30, [sp, #-32]!
  41e544:	mov	w2, #0x1                   	// #1
  41e548:	mov	x1, xzr
  41e54c:	str	x19, [sp, #16]
  41e550:	mov	x29, sp
  41e554:	mov	w19, w0
  41e558:	bl	404370 <lseek@plt>
  41e55c:	tbnz	x0, #63, 41e574 <wcrtomb@plt+0x19774>
  41e560:	mov	x1, x0
  41e564:	mov	w0, w19
  41e568:	ldr	x19, [sp, #16]
  41e56c:	ldp	x29, x30, [sp], #32
  41e570:	b	404c20 <ftruncate@plt>
  41e574:	ldr	x19, [sp, #16]
  41e578:	mov	w0, #0xffffffff            	// #-1
  41e57c:	ldp	x29, x30, [sp], #32
  41e580:	ret
  41e584:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e588:	ldr	w0, [x8, #464]
  41e58c:	mov	w8, #0x40000000            	// #1073741824
  41e590:	cmp	w0, w8
  41e594:	b.lt	41e5b4 <wcrtomb@plt+0x197b4>  // b.tstop
  41e598:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41e59c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41e5a0:	ldr	x1, [x8, #3472]
  41e5a4:	ldr	x2, [x9, #408]
  41e5a8:	mov	w8, #0xc0000000            	// #-1073741824
  41e5ac:	add	w0, w0, w8
  41e5b0:	b	4272c8 <wcrtomb@plt+0x224c8>
  41e5b4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41e5b8:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41e5bc:	ldr	x1, [x8, #3472]
  41e5c0:	ldr	x2, [x9, #408]
  41e5c4:	b	43273c <argp_parse@@Base+0x3a80>
  41e5c8:	sub	sp, sp, #0x50
  41e5cc:	mov	w0, #0xd                   	// #13
  41e5d0:	mov	w1, #0x1                   	// #1
  41e5d4:	stp	x29, x30, [sp, #16]
  41e5d8:	str	x23, [sp, #32]
  41e5dc:	stp	x22, x21, [sp, #48]
  41e5e0:	stp	x20, x19, [sp, #64]
  41e5e4:	add	x29, sp, #0x10
  41e5e8:	bl	404420 <signal@plt>
  41e5ec:	add	x0, x29, #0x18
  41e5f0:	bl	419e30 <wcrtomb@plt+0x15030>
  41e5f4:	bl	419df0 <wcrtomb@plt+0x14ff0>
  41e5f8:	cmp	w0, #0x1
  41e5fc:	b.lt	41e630 <wcrtomb@plt+0x19830>  // b.tstop
  41e600:	mov	w19, w0
  41e604:	ldp	w0, w8, [x29, #24]
  41e608:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41e60c:	str	w8, [x9, #464]
  41e610:	bl	4058d0 <wcrtomb@plt+0xad0>
  41e614:	mov	w0, w19
  41e618:	ldp	x20, x19, [sp, #64]
  41e61c:	ldp	x22, x21, [sp, #48]
  41e620:	ldr	x23, [sp, #32]
  41e624:	ldp	x29, x30, [sp, #16]
  41e628:	add	sp, sp, #0x50
  41e62c:	ret
  41e630:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41e634:	add	x1, x1, #0xf2a
  41e638:	mov	w2, #0x5                   	// #5
  41e63c:	mov	x0, xzr
  41e640:	bl	404bd0 <dcgettext@plt>
  41e644:	bl	438550 <argp_parse@@Base+0x9894>
  41e648:	mov	w0, #0xd                   	// #13
  41e64c:	mov	x1, xzr
  41e650:	bl	404420 <signal@plt>
  41e654:	ldr	w0, [x29, #24]
  41e658:	mov	w1, wzr
  41e65c:	bl	41e8e0 <wcrtomb@plt+0x19ae0>
  41e660:	ldr	w0, [x29, #28]
  41e664:	bl	4058d0 <wcrtomb@plt+0xad0>
  41e668:	adrp	x22, 46b000 <argp_program_version_hook@@Base+0x458>
  41e66c:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  41e670:	ldrb	w8, [x22, #504]
  41e674:	ldr	x19, [x21, #176]
  41e678:	cbz	w8, 41e728 <wcrtomb@plt+0x19928>
  41e67c:	ldr	x0, [x19]
  41e680:	bl	41e9ac <wcrtomb@plt+0x19bac>
  41e684:	cbnz	w0, 41e85c <wcrtomb@plt+0x19a5c>
  41e688:	add	x0, sp, #0x8
  41e68c:	bl	419e30 <wcrtomb@plt+0x15030>
  41e690:	bl	419df0 <wcrtomb@plt+0x14ff0>
  41e694:	cbz	w0, 41e82c <wcrtomb@plt+0x19a2c>
  41e698:	mov	w19, w0
  41e69c:	ldr	w0, [sp, #8]
  41e6a0:	mov	w1, wzr
  41e6a4:	bl	41e8e0 <wcrtomb@plt+0x19ae0>
  41e6a8:	ldr	w0, [sp, #12]
  41e6ac:	bl	4058d0 <wcrtomb@plt+0xad0>
  41e6b0:	ldr	x23, [x21, #176]
  41e6b4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  41e6b8:	add	x1, x1, #0x25d
  41e6bc:	ldr	x20, [x23]
  41e6c0:	mov	x0, x20
  41e6c4:	bl	404900 <strcmp@plt>
  41e6c8:	cbz	w0, 41e760 <wcrtomb@plt+0x19960>
  41e6cc:	ldrb	w8, [x22, #504]
  41e6d0:	cbnz	w8, 41e704 <wcrtomb@plt+0x19904>
  41e6d4:	mov	w1, #0x3a                  	// #58
  41e6d8:	mov	x0, x20
  41e6dc:	bl	404a50 <strchr@plt>
  41e6e0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e6e4:	str	x0, [x8, #512]
  41e6e8:	ldr	x20, [x23]
  41e6ec:	subs	x2, x0, x20
  41e6f0:	b.ls	41e704 <wcrtomb@plt+0x19904>  // b.plast
  41e6f4:	mov	w1, #0x2f                  	// #47
  41e6f8:	mov	x0, x20
  41e6fc:	bl	404b50 <memchr@plt>
  41e700:	cbz	x0, 41e810 <wcrtomb@plt+0x19a10>
  41e704:	mov	w1, #0x1b6                 	// #438
  41e708:	mov	x0, x20
  41e70c:	bl	404d90 <creat@plt>
  41e710:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e714:	str	w0, [x8, #464]
  41e718:	tbz	w0, #31, 41e76c <wcrtomb@plt+0x1996c>
  41e71c:	ldr	x8, [x21, #176]
  41e720:	ldr	x0, [x8]
  41e724:	bl	42622c <wcrtomb@plt+0x2142c>
  41e728:	ldr	x0, [x19]
  41e72c:	mov	w1, #0x3a                  	// #58
  41e730:	bl	404a50 <strchr@plt>
  41e734:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41e738:	str	x0, [x9, #512]
  41e73c:	cbz	x0, 41e67c <wcrtomb@plt+0x1987c>
  41e740:	mov	x8, x0
  41e744:	ldr	x0, [x19]
  41e748:	subs	x2, x8, x0
  41e74c:	b.ls	41e67c <wcrtomb@plt+0x1987c>  // b.plast
  41e750:	mov	w1, #0x2f                  	// #47
  41e754:	bl	404b50 <memchr@plt>
  41e758:	cbnz	x0, 41e67c <wcrtomb@plt+0x1987c>
  41e75c:	b	41e688 <wcrtomb@plt+0x19888>
  41e760:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e764:	mov	w9, #0x1                   	// #1
  41e768:	str	w9, [x8, #464]
  41e76c:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  41e770:	ldr	x0, [x21, #408]
  41e774:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41e778:	cbz	x0, 41e804 <wcrtomb@plt+0x19a04>
  41e77c:	ldr	x20, [x22, #3472]
  41e780:	mov	x23, xzr
  41e784:	sub	x2, x0, x23
  41e788:	mov	w0, wzr
  41e78c:	mov	x1, x20
  41e790:	bl	439dd4 <argp_parse@@Base+0xb118>
  41e794:	cbz	x0, 41e7d8 <wcrtomb@plt+0x199d8>
  41e798:	mov	x8, x0
  41e79c:	cmn	x0, #0x1
  41e7a0:	b.eq	41e7cc <wcrtomb@plt+0x199cc>  // b.none
  41e7a4:	ldr	x0, [x21, #408]
  41e7a8:	add	x23, x8, x23
  41e7ac:	add	x20, x20, x8
  41e7b0:	cmp	x0, x23
  41e7b4:	b.hi	41e784 <wcrtomb@plt+0x19984>  // b.pmore
  41e7b8:	bl	41e584 <wcrtomb@plt+0x19784>
  41e7bc:	ldr	x8, [x21, #408]
  41e7c0:	cmp	x0, x8
  41e7c4:	b.eq	41e778 <wcrtomb@plt+0x19978>  // b.none
  41e7c8:	b	41e80c <wcrtomb@plt+0x19a0c>
  41e7cc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e7d0:	ldr	x0, [x8, #392]
  41e7d4:	bl	4263d0 <wcrtomb@plt+0x215d0>
  41e7d8:	cbz	x23, 41e804 <wcrtomb@plt+0x19a04>
  41e7dc:	ldr	x8, [x22, #3472]
  41e7e0:	ldr	x9, [x21, #408]
  41e7e4:	mov	w1, wzr
  41e7e8:	add	x0, x8, x23
  41e7ec:	sub	x2, x9, x23
  41e7f0:	bl	4045e0 <memset@plt>
  41e7f4:	bl	41e584 <wcrtomb@plt+0x19784>
  41e7f8:	ldr	x8, [x21, #408]
  41e7fc:	cmp	x0, x8
  41e800:	b.ne	41e80c <wcrtomb@plt+0x19a0c>  // b.any
  41e804:	mov	w0, w19
  41e808:	bl	41ea2c <wcrtomb@plt+0x19c2c>
  41e80c:	bl	405904 <wcrtomb@plt+0xb04>
  41e810:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e814:	ldr	x3, [x8, #296]
  41e818:	mov	w1, #0x41                  	// #65
  41e81c:	mov	w2, #0x40000000            	// #1073741824
  41e820:	mov	x0, x20
  41e824:	bl	426a84 <wcrtomb@plt+0x21c84>
  41e828:	b	41e710 <wcrtomb@plt+0x19910>
  41e82c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41e830:	add	x1, x1, #0xf36
  41e834:	mov	w2, #0x5                   	// #5
  41e838:	mov	x0, xzr
  41e83c:	bl	404bd0 <dcgettext@plt>
  41e840:	bl	438550 <argp_parse@@Base+0x9894>
  41e844:	ldr	w0, [sp, #12]
  41e848:	mov	w1, #0x1                   	// #1
  41e84c:	bl	41e8e0 <wcrtomb@plt+0x19ae0>
  41e850:	ldr	w0, [sp, #8]
  41e854:	bl	4058d0 <wcrtomb@plt+0xad0>
  41e858:	b	41e8d4 <wcrtomb@plt+0x19ad4>
  41e85c:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  41e860:	ldrb	w8, [x20, #245]
  41e864:	cbz	w8, 41e878 <wcrtomb@plt+0x19a78>
  41e868:	ldr	x8, [x21, #176]
  41e86c:	mov	w1, #0x1                   	// #1
  41e870:	ldr	x0, [x8]
  41e874:	bl	41936c <wcrtomb@plt+0x1456c>
  41e878:	ldr	x8, [x21, #176]
  41e87c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  41e880:	add	x1, x1, #0x25d
  41e884:	ldr	x19, [x8]
  41e888:	mov	x0, x19
  41e88c:	bl	404900 <strcmp@plt>
  41e890:	cbz	w0, 41e8d4 <wcrtomb@plt+0x19ad4>
  41e894:	mov	w1, #0x1b6                 	// #438
  41e898:	mov	x0, x19
  41e89c:	bl	404d90 <creat@plt>
  41e8a0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e8a4:	str	w0, [x8, #464]
  41e8a8:	tbz	w0, #31, 41e8cc <wcrtomb@plt+0x19acc>
  41e8ac:	bl	404ce0 <__errno_location@plt>
  41e8b0:	ldrb	w8, [x20, #245]
  41e8b4:	ldr	w20, [x0]
  41e8b8:	mov	x19, x0
  41e8bc:	cbz	w8, 41e8c4 <wcrtomb@plt+0x19ac4>
  41e8c0:	bl	4195a8 <wcrtomb@plt+0x147a8>
  41e8c4:	str	w20, [x19]
  41e8c8:	b	41e71c <wcrtomb@plt+0x1991c>
  41e8cc:	mov	w1, #0x1                   	// #1
  41e8d0:	bl	41e8e0 <wcrtomb@plt+0x19ae0>
  41e8d4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e8d8:	ldr	x0, [x8, #392]
  41e8dc:	bl	41e9f0 <wcrtomb@plt+0x19bf0>
  41e8e0:	stp	x29, x30, [sp, #-32]!
  41e8e4:	cmp	w0, w1
  41e8e8:	stp	x20, x19, [sp, #16]
  41e8ec:	mov	x29, sp
  41e8f0:	b.ne	41e900 <wcrtomb@plt+0x19b00>  // b.any
  41e8f4:	ldp	x20, x19, [sp, #16]
  41e8f8:	ldp	x29, x30, [sp], #32
  41e8fc:	ret
  41e900:	mov	w19, w0
  41e904:	mov	w0, w1
  41e908:	mov	w20, w1
  41e90c:	bl	4047a0 <close@plt>
  41e910:	cbz	w0, 41e924 <wcrtomb@plt+0x19b24>
  41e914:	bl	404ce0 <__errno_location@plt>
  41e918:	ldr	w8, [x0]
  41e91c:	cmp	w8, #0x9
  41e920:	b.ne	41e96c <wcrtomb@plt+0x19b6c>  // b.any
  41e924:	mov	w0, w19
  41e928:	bl	4041c0 <dup@plt>
  41e92c:	cmp	w0, w20
  41e930:	b.ne	41e944 <wcrtomb@plt+0x19b44>  // b.any
  41e934:	mov	w0, w19
  41e938:	ldp	x20, x19, [sp, #16]
  41e93c:	ldp	x29, x30, [sp], #32
  41e940:	b	4058d0 <wcrtomb@plt+0xad0>
  41e944:	tbz	w0, #31, 41e9a8 <wcrtomb@plt+0x19ba8>
  41e948:	bl	404ce0 <__errno_location@plt>
  41e94c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e950:	ldr	x8, [x8, #496]
  41e954:	ldr	w19, [x0]
  41e958:	cbz	x8, 41e960 <wcrtomb@plt+0x19b60>
  41e95c:	blr	x8
  41e960:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  41e964:	add	x1, x1, #0x24
  41e968:	b	41e988 <wcrtomb@plt+0x19b88>
  41e96c:	mov	w19, w8
  41e970:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41e974:	ldr	x8, [x8, #496]
  41e978:	cbz	x8, 41e980 <wcrtomb@plt+0x19b80>
  41e97c:	blr	x8
  41e980:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  41e984:	add	x1, x1, #0x17
  41e988:	mov	w2, #0x5                   	// #5
  41e98c:	mov	x0, xzr
  41e990:	bl	404bd0 <dcgettext@plt>
  41e994:	mov	x2, x0
  41e998:	mov	w0, wzr
  41e99c:	mov	w1, w19
  41e9a0:	bl	4041d0 <error@plt>
  41e9a4:	bl	40d698 <wcrtomb@plt+0x8898>
  41e9a8:	bl	404850 <abort@plt>
  41e9ac:	sub	sp, sp, #0x90
  41e9b0:	mov	x1, sp
  41e9b4:	stp	x29, x30, [sp, #128]
  41e9b8:	add	x29, sp, #0x80
  41e9bc:	bl	44b928 <_obstack_memory_used@@Base+0x10130>
  41e9c0:	cbz	w0, 41e9d4 <wcrtomb@plt+0x19bd4>
  41e9c4:	bl	404ce0 <__errno_location@plt>
  41e9c8:	ldr	w8, [x0]
  41e9cc:	cmp	w8, #0x2
  41e9d0:	b	41e9e0 <wcrtomb@plt+0x19be0>
  41e9d4:	ldr	w8, [sp, #16]
  41e9d8:	and	w8, w8, #0xf000
  41e9dc:	cmp	w8, #0x8, lsl #12
  41e9e0:	ldp	x29, x30, [sp, #128]
  41e9e4:	cset	w0, eq  // eq = none
  41e9e8:	add	sp, sp, #0x90
  41e9ec:	ret
  41e9f0:	sub	sp, sp, #0x40
  41e9f4:	str	x19, [sp, #48]
  41e9f8:	mov	x19, x0
  41e9fc:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41ea00:	adrp	x8, 44f000 <_obstack_memory_used@@Base+0x13808>
  41ea04:	add	x0, x0, #0xf1e
  41ea08:	add	x8, x8, #0x2f
  41ea0c:	mov	x1, sp
  41ea10:	stp	x29, x30, [sp, #32]
  41ea14:	add	x29, sp, #0x20
  41ea18:	stp	x0, x8, [sp]
  41ea1c:	stp	x19, xzr, [sp, #16]
  41ea20:	bl	4046d0 <execv@plt>
  41ea24:	mov	x0, x19
  41ea28:	bl	426130 <wcrtomb@plt+0x21330>
  41ea2c:	stp	x29, x30, [sp, #-32]!
  41ea30:	str	x19, [sp, #16]
  41ea34:	mov	w19, w0
  41ea38:	mov	x29, sp
  41ea3c:	add	x1, x29, #0x1c
  41ea40:	mov	w0, w19
  41ea44:	mov	w2, wzr
  41ea48:	bl	404d60 <waitpid@plt>
  41ea4c:	cmn	w0, #0x1
  41ea50:	b.ne	41ea70 <wcrtomb@plt+0x19c70>  // b.any
  41ea54:	bl	404ce0 <__errno_location@plt>
  41ea58:	ldr	w8, [x0]
  41ea5c:	cmp	w8, #0x4
  41ea60:	b.eq	41ea3c <wcrtomb@plt+0x19c3c>  // b.none
  41ea64:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41ea68:	ldr	x0, [x8, #392]
  41ea6c:	bl	42675c <wcrtomb@plt+0x2195c>
  41ea70:	ldr	w8, [x29, #28]
  41ea74:	mov	w9, #0x1000000             	// #16777216
  41ea78:	mov	w10, #0x2000000             	// #33554432
  41ea7c:	and	w0, w8, #0x7f
  41ea80:	add	w9, w9, w0, lsl #24
  41ea84:	cmp	w9, w10
  41ea88:	b.lt	41ea98 <wcrtomb@plt+0x19c98>  // b.tstop
  41ea8c:	bl	4041b0 <raise@plt>
  41ea90:	mov	w0, wzr
  41ea94:	bl	4041a0 <exit@plt>
  41ea98:	ubfx	w0, w8, #8, #8
  41ea9c:	bl	4041a0 <exit@plt>
  41eaa0:	sub	sp, sp, #0x60
  41eaa4:	stp	x29, x30, [sp, #16]
  41eaa8:	add	x29, sp, #0x10
  41eaac:	add	x0, x29, #0x18
  41eab0:	str	x25, [sp, #32]
  41eab4:	stp	x24, x23, [sp, #48]
  41eab8:	stp	x22, x21, [sp, #64]
  41eabc:	stp	x20, x19, [sp, #80]
  41eac0:	bl	419e30 <wcrtomb@plt+0x15030>
  41eac4:	bl	419df0 <wcrtomb@plt+0x14ff0>
  41eac8:	cmp	w0, #0x1
  41eacc:	b.lt	41eb04 <wcrtomb@plt+0x19d04>  // b.tstop
  41ead0:	mov	w19, w0
  41ead4:	ldp	w8, w0, [x29, #24]
  41ead8:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41eadc:	str	w8, [x9, #464]
  41eae0:	bl	4058d0 <wcrtomb@plt+0xad0>
  41eae4:	mov	w0, w19
  41eae8:	ldp	x20, x19, [sp, #80]
  41eaec:	ldp	x22, x21, [sp, #64]
  41eaf0:	ldp	x24, x23, [sp, #48]
  41eaf4:	ldr	x25, [sp, #32]
  41eaf8:	ldp	x29, x30, [sp, #16]
  41eafc:	add	sp, sp, #0x60
  41eb00:	ret
  41eb04:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41eb08:	add	x1, x1, #0xf2a
  41eb0c:	mov	w2, #0x5                   	// #5
  41eb10:	mov	x0, xzr
  41eb14:	bl	404bd0 <dcgettext@plt>
  41eb18:	bl	438550 <argp_parse@@Base+0x9894>
  41eb1c:	mov	w0, #0xd                   	// #13
  41eb20:	mov	x1, xzr
  41eb24:	bl	404420 <signal@plt>
  41eb28:	ldr	w0, [x29, #28]
  41eb2c:	mov	w1, #0x1                   	// #1
  41eb30:	bl	41e8e0 <wcrtomb@plt+0x19ae0>
  41eb34:	ldr	w0, [x29, #24]
  41eb38:	bl	4058d0 <wcrtomb@plt+0xad0>
  41eb3c:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  41eb40:	ldr	x20, [x21, #176]
  41eb44:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  41eb48:	add	x1, x1, #0x25d
  41eb4c:	ldr	x19, [x20]
  41eb50:	mov	x0, x19
  41eb54:	bl	404900 <strcmp@plt>
  41eb58:	cbz	w0, 41eba4 <wcrtomb@plt+0x19da4>
  41eb5c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41eb60:	ldrb	w8, [x8, #504]
  41eb64:	cbnz	w8, 41eb98 <wcrtomb@plt+0x19d98>
  41eb68:	mov	w1, #0x3a                  	// #58
  41eb6c:	mov	x0, x19
  41eb70:	bl	404a50 <strchr@plt>
  41eb74:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41eb78:	str	x0, [x8, #512]
  41eb7c:	ldr	x19, [x20]
  41eb80:	subs	x2, x0, x19
  41eb84:	b.ls	41eb98 <wcrtomb@plt+0x19d98>  // b.plast
  41eb88:	mov	w1, #0x2f                  	// #47
  41eb8c:	mov	x0, x19
  41eb90:	bl	404b50 <memchr@plt>
  41eb94:	cbz	x0, 41eba4 <wcrtomb@plt+0x19da4>
  41eb98:	mov	x0, x19
  41eb9c:	bl	41e9ac <wcrtomb@plt+0x19bac>
  41eba0:	cbnz	w0, 41ec24 <wcrtomb@plt+0x19e24>
  41eba4:	add	x0, sp, #0x8
  41eba8:	bl	419e30 <wcrtomb@plt+0x15030>
  41ebac:	bl	419df0 <wcrtomb@plt+0x14ff0>
  41ebb0:	cbnz	w0, 41ebe4 <wcrtomb@plt+0x19de4>
  41ebb4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41ebb8:	add	x1, x1, #0xf36
  41ebbc:	mov	w2, #0x5                   	// #5
  41ebc0:	mov	x0, xzr
  41ebc4:	bl	404bd0 <dcgettext@plt>
  41ebc8:	bl	438550 <argp_parse@@Base+0x9894>
  41ebcc:	ldr	w0, [sp, #8]
  41ebd0:	mov	w1, wzr
  41ebd4:	bl	41e8e0 <wcrtomb@plt+0x19ae0>
  41ebd8:	ldr	w0, [sp, #12]
  41ebdc:	bl	4058d0 <wcrtomb@plt+0xad0>
  41ebe0:	bl	41ed80 <wcrtomb@plt+0x19f80>
  41ebe4:	mov	w19, w0
  41ebe8:	ldr	w0, [sp, #12]
  41ebec:	mov	w1, #0x1                   	// #1
  41ebf0:	bl	41e8e0 <wcrtomb@plt+0x19ae0>
  41ebf4:	ldr	w0, [sp, #8]
  41ebf8:	bl	4058d0 <wcrtomb@plt+0xad0>
  41ebfc:	ldr	x22, [x21, #176]
  41ec00:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  41ec04:	add	x1, x1, #0x25d
  41ec08:	ldr	x20, [x22]
  41ec0c:	mov	x0, x20
  41ec10:	bl	404900 <strcmp@plt>
  41ec14:	cbnz	w0, 41ec50 <wcrtomb@plt+0x19e50>
  41ec18:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41ec1c:	str	wzr, [x8, #464]
  41ec20:	b	41ecd0 <wcrtomb@plt+0x19ed0>
  41ec24:	ldr	x8, [x21, #176]
  41ec28:	mov	w2, #0x1b6                 	// #438
  41ec2c:	mov	w1, wzr
  41ec30:	ldr	x0, [x8]
  41ec34:	bl	404510 <open@plt>
  41ec38:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41ec3c:	str	w0, [x8, #464]
  41ec40:	tbnz	w0, #31, 41ecc4 <wcrtomb@plt+0x19ec4>
  41ec44:	mov	w1, wzr
  41ec48:	bl	41e8e0 <wcrtomb@plt+0x19ae0>
  41ec4c:	bl	41ed80 <wcrtomb@plt+0x19f80>
  41ec50:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41ec54:	ldrb	w8, [x8, #504]
  41ec58:	cbnz	w8, 41eca8 <wcrtomb@plt+0x19ea8>
  41ec5c:	mov	w1, #0x3a                  	// #58
  41ec60:	mov	x0, x20
  41ec64:	bl	404a50 <strchr@plt>
  41ec68:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41ec6c:	str	x0, [x8, #512]
  41ec70:	ldr	x20, [x22]
  41ec74:	subs	x2, x0, x20
  41ec78:	b.ls	41eca8 <wcrtomb@plt+0x19ea8>  // b.plast
  41ec7c:	mov	w1, #0x2f                  	// #47
  41ec80:	mov	x0, x20
  41ec84:	bl	404b50 <memchr@plt>
  41ec88:	cbnz	x0, 41eca8 <wcrtomb@plt+0x19ea8>
  41ec8c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41ec90:	ldr	x3, [x8, #296]
  41ec94:	mov	w2, #0x40000000            	// #1073741824
  41ec98:	mov	x0, x20
  41ec9c:	mov	w1, wzr
  41eca0:	bl	426a84 <wcrtomb@plt+0x21c84>
  41eca4:	b	41ecb8 <wcrtomb@plt+0x19eb8>
  41eca8:	mov	w2, #0x1b6                 	// #438
  41ecac:	mov	x0, x20
  41ecb0:	mov	w1, wzr
  41ecb4:	bl	404510 <open@plt>
  41ecb8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41ecbc:	str	w0, [x8, #464]
  41ecc0:	tbz	w0, #31, 41ecd0 <wcrtomb@plt+0x19ed0>
  41ecc4:	ldr	x8, [x21, #176]
  41ecc8:	ldr	x0, [x8]
  41eccc:	bl	42622c <wcrtomb@plt+0x2142c>
  41ecd0:	bl	40506c <wcrtomb@plt+0x26c>
  41ecd4:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  41ecd8:	mov	w22, #0x40000000            	// #1073741824
  41ecdc:	mov	w24, #0xc0000000            	// #-1073741824
  41ece0:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41ece4:	adrp	x25, 46b000 <argp_program_version_hook@@Base+0x458>
  41ece8:	ldr	w0, [x21, #464]
  41ecec:	cmp	w0, w22
  41ecf0:	b.lt	41ed08 <wcrtomb@plt+0x19f08>  // b.tstop
  41ecf4:	ldr	x1, [x23, #3472]
  41ecf8:	ldr	x2, [x25, #408]
  41ecfc:	add	w0, w0, w24
  41ed00:	bl	4271dc <wcrtomb@plt+0x223dc>
  41ed04:	b	41ed14 <wcrtomb@plt+0x19f14>
  41ed08:	ldr	x1, [x23, #3472]
  41ed0c:	ldr	x2, [x25, #408]
  41ed10:	bl	439dd4 <argp_parse@@Base+0xb118>
  41ed14:	mov	x20, x0
  41ed18:	cbz	x0, 41ed70 <wcrtomb@plt+0x19f70>
  41ed1c:	cmn	x20, #0x1
  41ed20:	b.ne	41ed2c <wcrtomb@plt+0x19f2c>  // b.any
  41ed24:	bl	4059cc <wcrtomb@plt+0xbcc>
  41ed28:	b	41ece8 <wcrtomb@plt+0x19ee8>
  41ed2c:	ldr	x21, [x23, #3472]
  41ed30:	mov	w23, #0x200                 	// #512
  41ed34:	adrp	x24, 46b000 <argp_program_version_hook@@Base+0x458>
  41ed38:	cmp	x20, #0x200
  41ed3c:	csel	x22, x20, x23, cc  // cc = lo, ul, last
  41ed40:	mov	w0, #0x1                   	// #1
  41ed44:	mov	x1, x21
  41ed48:	mov	x2, x22
  41ed4c:	bl	43273c <argp_parse@@Base+0x3a80>
  41ed50:	cmp	x0, x22
  41ed54:	b.eq	41ed60 <wcrtomb@plt+0x19f60>  // b.none
  41ed58:	ldr	x0, [x24, #392]
  41ed5c:	bl	426770 <wcrtomb@plt+0x21970>
  41ed60:	subs	x20, x20, x22
  41ed64:	add	x21, x21, x22
  41ed68:	b.eq	41ecd0 <wcrtomb@plt+0x19ed0>  // b.none
  41ed6c:	b	41ed38 <wcrtomb@plt+0x19f38>
  41ed70:	mov	w0, #0x1                   	// #1
  41ed74:	bl	4058d0 <wcrtomb@plt+0xad0>
  41ed78:	mov	w0, w19
  41ed7c:	bl	41ea2c <wcrtomb@plt+0x19c2c>
  41ed80:	sub	sp, sp, #0x150
  41ed84:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41ed88:	ldr	x8, [x8, #648]
  41ed8c:	stp	x29, x30, [sp, #240]
  41ed90:	add	x29, sp, #0xf0
  41ed94:	mov	w9, #0x1                   	// #1
  41ed98:	sub	x0, x29, #0x4
  41ed9c:	stp	x28, x27, [sp, #256]
  41eda0:	stp	x26, x25, [sp, #272]
  41eda4:	stp	x24, x23, [sp, #288]
  41eda8:	stp	x22, x21, [sp, #304]
  41edac:	stp	x20, x19, [sp, #320]
  41edb0:	str	x8, [sp, #112]
  41edb4:	str	x9, [sp, #16]
  41edb8:	bl	40512c <wcrtomb@plt+0x32c>
  41edbc:	cbz	x0, 41ef1c <wcrtomb@plt+0x1a11c>
  41edc0:	mov	w20, #0xe06                 	// #3590
  41edc4:	adrp	x21, 44f000 <_obstack_memory_used@@Base+0x13808>
  41edc8:	adrp	x22, 44f000 <_obstack_memory_used@@Base+0x13808>
  41edcc:	adrp	x27, 44f000 <_obstack_memory_used@@Base+0x13808>
  41edd0:	mov	w8, wzr
  41edd4:	mov	x23, xzr
  41edd8:	movk	w20, #0x208, lsl #16
  41eddc:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41ede0:	adrp	x25, 46b000 <argp_program_version_hook@@Base+0x458>
  41ede4:	add	x21, x21, #0x32
  41ede8:	add	x22, x22, #0x40
  41edec:	add	x27, x27, #0x4a
  41edf0:	mov	x19, x0
  41edf4:	tbz	w8, #0, 41ee70 <wcrtomb@plt+0x1a070>
  41edf8:	ldrb	w8, [x26, #154]
  41edfc:	tbz	w8, #3, 41ee70 <wcrtomb@plt+0x1a070>
  41ee00:	ldr	x8, [x25, #496]
  41ee04:	cbz	x8, 41ee0c <wcrtomb@plt+0x1a00c>
  41ee08:	blr	x8
  41ee0c:	bl	404ce0 <__errno_location@plt>
  41ee10:	ldr	w24, [x0]
  41ee14:	mov	w2, #0x5                   	// #5
  41ee18:	mov	x0, xzr
  41ee1c:	mov	x1, x21
  41ee20:	bl	404bd0 <dcgettext@plt>
  41ee24:	mov	x2, x0
  41ee28:	mov	w0, wzr
  41ee2c:	mov	w1, w24
  41ee30:	mov	x3, x23
  41ee34:	bl	4041d0 <error@plt>
  41ee38:	ldrb	w8, [x26, #154]
  41ee3c:	tbz	w8, #3, 41ee70 <wcrtomb@plt+0x1a070>
  41ee40:	ldr	x8, [x25, #496]
  41ee44:	cbz	x8, 41ee4c <wcrtomb@plt+0x1a04c>
  41ee48:	blr	x8
  41ee4c:	mov	w2, #0x5                   	// #5
  41ee50:	mov	x0, xzr
  41ee54:	mov	x1, x22
  41ee58:	bl	404bd0 <dcgettext@plt>
  41ee5c:	mov	x2, x0
  41ee60:	mov	w0, wzr
  41ee64:	mov	w1, wzr
  41ee68:	mov	x3, x19
  41ee6c:	bl	4041d0 <error@plt>
  41ee70:	mov	x1, sp
  41ee74:	mov	x0, x19
  41ee78:	mov	w2, w20
  41ee7c:	bl	427ec8 <wcrtomb@plt+0x230c8>
  41ee80:	cbnz	w0, 41eed4 <wcrtomb@plt+0x1a0d4>
  41ee84:	ldp	x0, x8, [sp, #8]
  41ee88:	ldr	x9, [sp]
  41ee8c:	orr	w20, w20, #0x8
  41ee90:	add	x1, x0, x8, lsl #3
  41ee94:	lsl	x2, x9, #3
  41ee98:	bl	404100 <memmove@plt>
  41ee9c:	ldp	x9, x8, [sp]
  41eea0:	str	x27, [x8, x9, lsl #3]
  41eea4:	ldr	x1, [sp, #8]
  41eea8:	ldr	x0, [x1]
  41eeac:	bl	4048e0 <execvp@plt>
  41eeb0:	ldp	x9, x8, [sp]
  41eeb4:	sub	x0, x29, #0x4
  41eeb8:	str	xzr, [x8, x9, lsl #3]
  41eebc:	bl	405194 <wcrtomb@plt+0x394>
  41eec0:	mov	w8, #0x1                   	// #1
  41eec4:	mov	x23, x19
  41eec8:	cbnz	x0, 41edf0 <wcrtomb@plt+0x19ff0>
  41eecc:	mov	x0, x19
  41eed0:	bl	426130 <wcrtomb@plt+0x21330>
  41eed4:	ldr	x8, [x25, #496]
  41eed8:	cbz	x8, 41eee0 <wcrtomb@plt+0x1a0e0>
  41eedc:	blr	x8
  41eee0:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  41eee4:	add	x1, x1, #0x390
  41eee8:	mov	w2, #0x5                   	// #5
  41eeec:	mov	x0, xzr
  41eef0:	bl	404bd0 <dcgettext@plt>
  41eef4:	mov	x20, x0
  41eef8:	mov	x0, sp
  41eefc:	bl	4280cc <wcrtomb@plt+0x232cc>
  41ef00:	mov	x4, x0
  41ef04:	mov	w0, wzr
  41ef08:	mov	w1, wzr
  41ef0c:	mov	x2, x20
  41ef10:	mov	x3, x19
  41ef14:	bl	4041d0 <error@plt>
  41ef18:	bl	40d698 <wcrtomb@plt+0x8898>
  41ef1c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41ef20:	ldr	x8, [x8, #496]
  41ef24:	cbz	x8, 41ef2c <wcrtomb@plt+0x1a12c>
  41ef28:	blr	x8
  41ef2c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  41ef30:	add	x1, x1, #0x4d
  41ef34:	mov	w2, #0x5                   	// #5
  41ef38:	mov	x0, xzr
  41ef3c:	bl	404bd0 <dcgettext@plt>
  41ef40:	mov	x2, x0
  41ef44:	mov	w0, wzr
  41ef48:	mov	w1, wzr
  41ef4c:	bl	4041d0 <error@plt>
  41ef50:	bl	40d698 <wcrtomb@plt+0x8898>
  41ef54:	stp	x29, x30, [sp, #-48]!
  41ef58:	mov	x29, sp
  41ef5c:	str	x21, [sp, #16]
  41ef60:	mov	x21, x0
  41ef64:	add	x0, x29, #0x18
  41ef68:	stp	x20, x19, [sp, #32]
  41ef6c:	mov	x19, x2
  41ef70:	mov	w20, w1
  41ef74:	bl	419e30 <wcrtomb@plt+0x15030>
  41ef78:	mov	w0, #0xd                   	// #13
  41ef7c:	mov	w1, #0x1                   	// #1
  41ef80:	bl	404420 <signal@plt>
  41ef84:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41ef88:	str	x0, [x8, #2520]
  41ef8c:	bl	419df0 <wcrtomb@plt+0x14ff0>
  41ef90:	mov	w8, w0
  41ef94:	ldr	w0, [x29, #24]
  41ef98:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41ef9c:	str	w8, [x9, #2528]
  41efa0:	cbz	w8, 41efbc <wcrtomb@plt+0x1a1bc>
  41efa4:	bl	4058d0 <wcrtomb@plt+0xad0>
  41efa8:	ldr	w0, [x29, #28]
  41efac:	ldp	x20, x19, [sp, #32]
  41efb0:	ldr	x21, [sp, #16]
  41efb4:	ldp	x29, x30, [sp], #48
  41efb8:	ret
  41efbc:	mov	w1, wzr
  41efc0:	bl	41e8e0 <wcrtomb@plt+0x19ae0>
  41efc4:	ldr	w0, [x29, #28]
  41efc8:	bl	4058d0 <wcrtomb@plt+0xad0>
  41efcc:	mov	x0, x21
  41efd0:	mov	w1, w20
  41efd4:	mov	x2, x19
  41efd8:	bl	41efe8 <wcrtomb@plt+0x1a1e8>
  41efdc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41efe0:	ldr	x0, [x8, #104]
  41efe4:	bl	41e9f0 <wcrtomb@plt+0x19bf0>
  41efe8:	sub	sp, sp, #0x50
  41efec:	stp	x22, x21, [sp, #48]
  41eff0:	stp	x20, x19, [sp, #64]
  41eff4:	mov	w20, w1
  41eff8:	mov	x21, x0
  41effc:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f000:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  41f004:	mov	x19, x2
  41f008:	add	x0, x0, #0xfb0
  41f00c:	add	x1, x1, #0x65c
  41f010:	mov	w2, #0x1                   	// #1
  41f014:	stp	x29, x30, [sp, #32]
  41f018:	add	x29, sp, #0x20
  41f01c:	bl	404290 <setenv@plt>
  41f020:	cbnz	w0, 41f250 <wcrtomb@plt+0x1a450>
  41f024:	adrp	x22, 46b000 <argp_program_version_hook@@Base+0x458>
  41f028:	ldr	x8, [x22, #224]
  41f02c:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f030:	add	x0, x0, #0xfbc
  41f034:	ldr	x1, [x8]
  41f038:	bl	41f74c <wcrtomb@plt+0x1a94c>
  41f03c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41f040:	ldr	x8, [x22, #224]
  41f044:	ldr	x9, [x9, #176]
  41f048:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f04c:	add	x0, x0, #0xfc8
  41f050:	sub	x8, x8, x9
  41f054:	asr	x8, x8, #3
  41f058:	add	x1, x8, #0x1
  41f05c:	bl	41f778 <wcrtomb@plt+0x1a978>
  41f060:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41f064:	ldrsw	x1, [x8, #236]
  41f068:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f06c:	add	x0, x0, #0xfd3
  41f070:	bl	41f778 <wcrtomb@plt+0x1a978>
  41f074:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41f078:	ldr	w8, [x8, #3536]
  41f07c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41f080:	ldr	w9, [x9, #304]
  41f084:	cmp	w8, #0x0
  41f088:	csel	w0, w9, w8, eq  // eq = none
  41f08c:	bl	41fa14 <wcrtomb@plt+0x1ac14>
  41f090:	mov	x1, x0
  41f094:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f098:	add	x0, x0, #0xff6
  41f09c:	bl	41f74c <wcrtomb@plt+0x1a94c>
  41f0a0:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f0a4:	add	x0, x0, #0x71
  41f0a8:	add	x1, sp, #0x8
  41f0ac:	mov	w2, #0x1                   	// #1
  41f0b0:	strb	w20, [sp, #8]
  41f0b4:	strb	wzr, [sp, #9]
  41f0b8:	bl	404290 <setenv@plt>
  41f0bc:	cbnz	w0, 41f250 <wcrtomb@plt+0x1a450>
  41f0c0:	ldr	w5, [x19, #104]
  41f0c4:	adrp	x4, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f0c8:	add	x4, x4, #0x10d
  41f0cc:	add	x0, sp, #0x8
  41f0d0:	mov	w1, #0x18                  	// #24
  41f0d4:	mov	w2, #0x1                   	// #1
  41f0d8:	mov	w3, #0x18                  	// #24
  41f0dc:	bl	404440 <__snprintf_chk@plt>
  41f0e0:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f0e4:	add	x0, x0, #0x7e
  41f0e8:	add	x1, sp, #0x8
  41f0ec:	mov	w2, #0x1                   	// #1
  41f0f0:	bl	404290 <setenv@plt>
  41f0f4:	cbnz	w0, 41f250 <wcrtomb@plt+0x1a450>
  41f0f8:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f0fc:	add	x0, x0, #0x87
  41f100:	mov	x1, x21
  41f104:	bl	41f74c <wcrtomb@plt+0x1a94c>
  41f108:	ldr	x1, [x19, #8]
  41f10c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f110:	add	x0, x0, #0x94
  41f114:	bl	41f74c <wcrtomb@plt+0x1a94c>
  41f118:	ldr	x1, [x19, #32]
  41f11c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f120:	add	x0, x0, #0xa1
  41f124:	bl	41f74c <wcrtomb@plt+0x1a94c>
  41f128:	ldr	x1, [x19, #40]
  41f12c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f130:	add	x0, x0, #0xab
  41f134:	bl	41f74c <wcrtomb@plt+0x1a94c>
  41f138:	ldp	x1, x2, [x19, #216]
  41f13c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f140:	add	x0, x0, #0xb5
  41f144:	bl	41f7c4 <wcrtomb@plt+0x1a9c4>
  41f148:	ldp	x1, x2, [x19, #232]
  41f14c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f150:	add	x0, x0, #0xbf
  41f154:	bl	41f7c4 <wcrtomb@plt+0x1a9c4>
  41f158:	ldp	x1, x2, [x19, #248]
  41f15c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f160:	add	x0, x0, #0xc9
  41f164:	bl	41f7c4 <wcrtomb@plt+0x1a9c4>
  41f168:	ldr	x1, [x19, #136]
  41f16c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f170:	add	x0, x0, #0xd3
  41f174:	bl	41f778 <wcrtomb@plt+0x1a978>
  41f178:	ldr	w1, [x19, #112]
  41f17c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f180:	add	x0, x0, #0xdc
  41f184:	bl	41f778 <wcrtomb@plt+0x1a978>
  41f188:	ldr	w1, [x19, #116]
  41f18c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f190:	add	x0, x0, #0xe4
  41f194:	bl	41f778 <wcrtomb@plt+0x1a978>
  41f198:	and	w8, w20, #0xff
  41f19c:	sub	w9, w8, #0x62
  41f1a0:	cmp	w9, #0x2
  41f1a4:	b.cc	41f1e4 <wcrtomb@plt+0x1a3e4>  // b.lo, b.ul, b.last
  41f1a8:	cmp	w8, #0x68
  41f1ac:	b.eq	41f1b8 <wcrtomb@plt+0x1a3b8>  // b.none
  41f1b0:	cmp	w8, #0x6c
  41f1b4:	b.ne	41f218 <wcrtomb@plt+0x1a418>  // b.any
  41f1b8:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f1bc:	add	x0, x0, #0xec
  41f1c0:	bl	404b20 <unsetenv@plt>
  41f1c4:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f1c8:	add	x0, x0, #0xf6
  41f1cc:	bl	404b20 <unsetenv@plt>
  41f1d0:	ldr	x1, [x19, #24]
  41f1d4:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f1d8:	add	x0, x0, #0x100
  41f1dc:	bl	41f74c <wcrtomb@plt+0x1a94c>
  41f1e0:	b	41f23c <wcrtomb@plt+0x1a43c>
  41f1e4:	ldr	x0, [x19, #120]
  41f1e8:	bl	404af0 <gnu_dev_minor@plt>
  41f1ec:	mov	w1, w0
  41f1f0:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f1f4:	add	x0, x0, #0xec
  41f1f8:	bl	41f778 <wcrtomb@plt+0x1a978>
  41f1fc:	ldr	x0, [x19, #120]
  41f200:	bl	404890 <gnu_dev_major@plt>
  41f204:	mov	w1, w0
  41f208:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f20c:	add	x0, x0, #0xf6
  41f210:	bl	41f778 <wcrtomb@plt+0x1a978>
  41f214:	b	41f230 <wcrtomb@plt+0x1a430>
  41f218:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f21c:	add	x0, x0, #0xec
  41f220:	bl	404b20 <unsetenv@plt>
  41f224:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f228:	add	x0, x0, #0xf6
  41f22c:	bl	404b20 <unsetenv@plt>
  41f230:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f234:	add	x0, x0, #0x100
  41f238:	bl	404b20 <unsetenv@plt>
  41f23c:	ldp	x20, x19, [sp, #64]
  41f240:	ldp	x22, x21, [sp, #48]
  41f244:	ldp	x29, x30, [sp, #32]
  41f248:	add	sp, sp, #0x50
  41f24c:	ret
  41f250:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  41f254:	stp	x29, x30, [sp, #-32]!
  41f258:	str	x19, [sp, #16]
  41f25c:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41f260:	ldr	w8, [x19, #2528]
  41f264:	mov	x29, sp
  41f268:	tbnz	w8, #31, 41f3b8 <wcrtomb@plt+0x1a5b8>
  41f26c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41f270:	ldr	x1, [x8, #2520]
  41f274:	mov	w0, #0xd                   	// #13
  41f278:	bl	404420 <signal@plt>
  41f27c:	ldr	w0, [x19, #2528]
  41f280:	add	x1, x29, #0x1c
  41f284:	mov	w2, wzr
  41f288:	bl	404d60 <waitpid@plt>
  41f28c:	cmn	w0, #0x1
  41f290:	b.ne	41f2bc <wcrtomb@plt+0x1a4bc>  // b.any
  41f294:	bl	404ce0 <__errno_location@plt>
  41f298:	ldr	w8, [x0]
  41f29c:	cmp	w8, #0x4
  41f2a0:	b.eq	41f27c <wcrtomb@plt+0x1a47c>  // b.none
  41f2a4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41f2a8:	ldr	x0, [x8, #104]
  41f2ac:	mov	w8, #0xffffffff            	// #-1
  41f2b0:	str	w8, [x19, #2528]
  41f2b4:	bl	42675c <wcrtomb@plt+0x2195c>
  41f2b8:	b	41f3b8 <wcrtomb@plt+0x1a5b8>
  41f2bc:	ldr	w9, [x29, #28]
  41f2c0:	ands	w8, w9, #0x7f
  41f2c4:	b.eq	41f320 <wcrtomb@plt+0x1a520>  // b.none
  41f2c8:	mov	w9, #0x1000000             	// #16777216
  41f2cc:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  41f2d0:	add	w9, w9, w8, lsl #24
  41f2d4:	ldr	x8, [x10, #496]
  41f2d8:	mov	w10, #0x2000000             	// #33554432
  41f2dc:	cmp	w9, w10
  41f2e0:	b.lt	41f374 <wcrtomb@plt+0x1a574>  // b.tstop
  41f2e4:	cbz	x8, 41f2ec <wcrtomb@plt+0x1a4ec>
  41f2e8:	blr	x8
  41f2ec:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f2f0:	add	x1, x1, #0xf65
  41f2f4:	mov	w2, #0x5                   	// #5
  41f2f8:	mov	x0, xzr
  41f2fc:	bl	404bd0 <dcgettext@plt>
  41f300:	ldr	w8, [x29, #28]
  41f304:	ldrsw	x3, [x19, #2528]
  41f308:	mov	x2, x0
  41f30c:	mov	w0, wzr
  41f310:	and	w4, w8, #0x7f
  41f314:	mov	w1, wzr
  41f318:	bl	4041d0 <error@plt>
  41f31c:	b	41f3b0 <wcrtomb@plt+0x1a5b0>
  41f320:	tst	w9, #0xff00
  41f324:	b.eq	41f3b0 <wcrtomb@plt+0x1a5b0>  // b.none
  41f328:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41f32c:	ldrb	w8, [x8, #65]
  41f330:	cbnz	w8, 41f3b0 <wcrtomb@plt+0x1a5b0>
  41f334:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41f338:	ldr	x8, [x8, #496]
  41f33c:	cbz	x8, 41f344 <wcrtomb@plt+0x1a544>
  41f340:	blr	x8
  41f344:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f348:	add	x1, x1, #0xf47
  41f34c:	mov	w2, #0x5                   	// #5
  41f350:	mov	x0, xzr
  41f354:	bl	404bd0 <dcgettext@plt>
  41f358:	ldrsw	x3, [x19, #2528]
  41f35c:	ldrb	w4, [x29, #29]
  41f360:	mov	x2, x0
  41f364:	mov	w0, wzr
  41f368:	mov	w1, wzr
  41f36c:	bl	4041d0 <error@plt>
  41f370:	b	41f3a4 <wcrtomb@plt+0x1a5a4>
  41f374:	cbz	x8, 41f37c <wcrtomb@plt+0x1a57c>
  41f378:	blr	x8
  41f37c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f380:	add	x1, x1, #0xf88
  41f384:	mov	w2, #0x5                   	// #5
  41f388:	mov	x0, xzr
  41f38c:	bl	404bd0 <dcgettext@plt>
  41f390:	ldrsw	x3, [x19, #2528]
  41f394:	mov	x2, x0
  41f398:	mov	w0, wzr
  41f39c:	mov	w1, wzr
  41f3a0:	bl	4041d0 <error@plt>
  41f3a4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41f3a8:	mov	w9, #0x2                   	// #2
  41f3ac:	str	w9, [x8, #2944]
  41f3b0:	mov	w8, #0xffffffff            	// #-1
  41f3b4:	str	w8, [x19, #2528]
  41f3b8:	ldr	x19, [sp, #16]
  41f3bc:	ldp	x29, x30, [sp], #32
  41f3c0:	ret
  41f3c4:	sub	sp, sp, #0x70
  41f3c8:	stp	x29, x30, [sp, #48]
  41f3cc:	add	x29, sp, #0x30
  41f3d0:	stp	x20, x19, [sp, #96]
  41f3d4:	mov	x19, x0
  41f3d8:	add	x0, x29, #0x18
  41f3dc:	str	x23, [sp, #64]
  41f3e0:	stp	x22, x21, [sp, #80]
  41f3e4:	mov	w21, w1
  41f3e8:	bl	419e30 <wcrtomb@plt+0x15030>
  41f3ec:	mov	w0, #0xd                   	// #13
  41f3f0:	mov	w1, #0x1                   	// #1
  41f3f4:	bl	404420 <signal@plt>
  41f3f8:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41f3fc:	str	x0, [x23, #2536]
  41f400:	bl	419df0 <wcrtomb@plt+0x14ff0>
  41f404:	cbz	w0, 41f520 <wcrtomb@plt+0x1a720>
  41f408:	mov	w20, w0
  41f40c:	ldr	w0, [x29, #28]
  41f410:	str	xzr, [sp, #24]
  41f414:	str	xzr, [sp, #8]
  41f418:	bl	4058d0 <wcrtomb@plt+0xad0>
  41f41c:	ldr	w0, [x29, #24]
  41f420:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f424:	add	x1, x1, #0x84b
  41f428:	bl	4045f0 <fdopen@plt>
  41f42c:	mov	x22, x0
  41f430:	add	x0, sp, #0x18
  41f434:	add	x1, sp, #0x8
  41f438:	mov	x2, x22
  41f43c:	bl	404980 <getline@plt>
  41f440:	mov	x21, x0
  41f444:	mov	x0, x22
  41f448:	bl	404450 <fclose@plt>
  41f44c:	cmp	w21, #0x1
  41f450:	b.lt	41f474 <wcrtomb@plt+0x1a674>  // b.tstop
  41f454:	ldr	x8, [sp, #24]
  41f458:	sub	w9, w21, #0x1
  41f45c:	ldrb	w9, [x8, w9, sxtw]
  41f460:	cmp	w9, #0xa
  41f464:	b.ne	41f474 <wcrtomb@plt+0x1a674>  // b.any
  41f468:	sxtw	x9, w21
  41f46c:	sub	x21, x9, #0x1
  41f470:	strb	wzr, [x8, x21]
  41f474:	add	x1, sp, #0x14
  41f478:	mov	w0, w20
  41f47c:	mov	w2, wzr
  41f480:	bl	404d60 <waitpid@plt>
  41f484:	cmn	w0, #0x1
  41f488:	b.ne	41f4b8 <wcrtomb@plt+0x1a6b8>  // b.any
  41f48c:	bl	404ce0 <__errno_location@plt>
  41f490:	ldr	w8, [x0]
  41f494:	cmp	w8, #0x4
  41f498:	b.eq	41f474 <wcrtomb@plt+0x1a674>  // b.none
  41f49c:	ldr	x1, [x23, #2536]
  41f4a0:	mov	w0, #0xd                   	// #13
  41f4a4:	bl	404420 <signal@plt>
  41f4a8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41f4ac:	ldr	x0, [x8, #256]
  41f4b0:	bl	42675c <wcrtomb@plt+0x2195c>
  41f4b4:	b	41f4d8 <wcrtomb@plt+0x1a6d8>
  41f4b8:	ldr	x1, [x23, #2536]
  41f4bc:	mov	w0, #0xd                   	// #13
  41f4c0:	bl	404420 <signal@plt>
  41f4c4:	ldr	w8, [sp, #20]
  41f4c8:	tst	w8, #0x7f
  41f4cc:	b.eq	41f4f4 <wcrtomb@plt+0x1a6f4>  // b.none
  41f4d0:	ldr	x0, [sp, #24]
  41f4d4:	bl	4049b0 <free@plt>
  41f4d8:	mov	w0, #0xffffffff            	// #-1
  41f4dc:	ldp	x20, x19, [sp, #96]
  41f4e0:	ldp	x22, x21, [sp, #80]
  41f4e4:	ldr	x23, [sp, #64]
  41f4e8:	ldp	x29, x30, [sp, #48]
  41f4ec:	add	sp, sp, #0x70
  41f4f0:	ret
  41f4f4:	ldr	x0, [sp, #24]
  41f4f8:	cmp	w21, #0x1
  41f4fc:	b.lt	41f510 <wcrtomb@plt+0x1a710>  // b.tstop
  41f500:	and	w9, w8, #0xff00
  41f504:	cbnz	w9, 41f510 <wcrtomb@plt+0x1a710>
  41f508:	str	x0, [x19]
  41f50c:	b	41f518 <wcrtomb@plt+0x1a718>
  41f510:	bl	4049b0 <free@plt>
  41f514:	ldr	w8, [sp, #20]
  41f518:	ubfx	w0, w8, #8, #8
  41f51c:	b	41f4dc <wcrtomb@plt+0x1a6dc>
  41f520:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f524:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  41f528:	add	x0, x0, #0xfb0
  41f52c:	add	x1, x1, #0x65c
  41f530:	mov	w2, #0x1                   	// #1
  41f534:	bl	404290 <setenv@plt>
  41f538:	ldr	x1, [x19]
  41f53c:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f540:	add	x0, x0, #0xfbc
  41f544:	mov	w2, #0x1                   	// #1
  41f548:	bl	404290 <setenv@plt>
  41f54c:	sxtw	x0, w21
  41f550:	add	x1, sp, #0x18
  41f554:	bl	43401c <argp_parse@@Base+0x5360>
  41f558:	mov	x1, x0
  41f55c:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f560:	add	x0, x0, #0xfc8
  41f564:	mov	w2, #0x1                   	// #1
  41f568:	bl	404290 <setenv@plt>
  41f56c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41f570:	ldrsw	x0, [x8, #236]
  41f574:	add	x1, sp, #0x18
  41f578:	bl	43401c <argp_parse@@Base+0x5360>
  41f57c:	mov	x1, x0
  41f580:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f584:	add	x0, x0, #0xfd3
  41f588:	mov	w2, #0x1                   	// #1
  41f58c:	bl	404290 <setenv@plt>
  41f590:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41f594:	ldr	w0, [x8, #348]
  41f598:	bl	41fa5c <wcrtomb@plt+0x1ac5c>
  41f59c:	mov	x1, x0
  41f5a0:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f5a4:	add	x0, x0, #0xfe7
  41f5a8:	mov	w2, #0x1                   	// #1
  41f5ac:	bl	404290 <setenv@plt>
  41f5b0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41f5b4:	ldr	w8, [x8, #3536]
  41f5b8:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41f5bc:	ldr	w9, [x9, #304]
  41f5c0:	cmp	w8, #0x0
  41f5c4:	csel	w0, w9, w8, eq  // eq = none
  41f5c8:	bl	41fa14 <wcrtomb@plt+0x1ac14>
  41f5cc:	mov	x1, x0
  41f5d0:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f5d4:	add	x0, x0, #0xff6
  41f5d8:	mov	w2, #0x1                   	// #1
  41f5dc:	bl	404290 <setenv@plt>
  41f5e0:	ldrsw	x0, [x29, #28]
  41f5e4:	add	x1, sp, #0x18
  41f5e8:	bl	43401c <argp_parse@@Base+0x5360>
  41f5ec:	mov	x1, x0
  41f5f0:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f5f4:	add	x0, x0, #0x1
  41f5f8:	mov	w2, #0x1                   	// #1
  41f5fc:	bl	404290 <setenv@plt>
  41f600:	ldr	w0, [x29, #24]
  41f604:	bl	4058d0 <wcrtomb@plt+0xad0>
  41f608:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41f60c:	ldr	x0, [x8, #256]
  41f610:	bl	41e9f0 <wcrtomb@plt+0x19bf0>
  41f614:	sub	sp, sp, #0x50
  41f618:	stp	x29, x30, [sp, #32]
  41f61c:	stp	x22, x21, [sp, #48]
  41f620:	stp	x20, x19, [sp, #64]
  41f624:	add	x29, sp, #0x20
  41f628:	mov	w20, w2
  41f62c:	mov	x22, x1
  41f630:	mov	x19, x0
  41f634:	bl	419df0 <wcrtomb@plt+0x14ff0>
  41f638:	cbz	w0, 41f684 <wcrtomb@plt+0x1a884>
  41f63c:	mov	w21, w0
  41f640:	add	x1, sp, #0x8
  41f644:	mov	w0, w21
  41f648:	mov	w2, wzr
  41f64c:	bl	404d60 <waitpid@plt>
  41f650:	cmn	w0, #0x1
  41f654:	b.ne	41f670 <wcrtomb@plt+0x1a870>  // b.any
  41f658:	bl	404ce0 <__errno_location@plt>
  41f65c:	ldr	w8, [x0]
  41f660:	cmp	w8, #0x4
  41f664:	b.eq	41f640 <wcrtomb@plt+0x1a840>  // b.none
  41f668:	mov	x0, x19
  41f66c:	bl	42675c <wcrtomb@plt+0x2195c>
  41f670:	ldp	x20, x19, [sp, #64]
  41f674:	ldp	x22, x21, [sp, #48]
  41f678:	ldp	x29, x30, [sp, #32]
  41f67c:	add	sp, sp, #0x50
  41f680:	ret
  41f684:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f688:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x11808>
  41f68c:	add	x0, x0, #0xfb0
  41f690:	add	x1, x1, #0x65c
  41f694:	mov	w2, #0x1                   	// #1
  41f698:	bl	404290 <setenv@plt>
  41f69c:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f6a0:	add	x0, x0, #0xfbc
  41f6a4:	mov	w2, #0x1                   	// #1
  41f6a8:	mov	x1, x22
  41f6ac:	bl	404290 <setenv@plt>
  41f6b0:	sxtw	x0, w20
  41f6b4:	add	x1, sp, #0x8
  41f6b8:	bl	43401c <argp_parse@@Base+0x5360>
  41f6bc:	mov	x1, x0
  41f6c0:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f6c4:	add	x0, x0, #0x8
  41f6c8:	mov	w2, #0x1                   	// #1
  41f6cc:	bl	404290 <setenv@plt>
  41f6d0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41f6d4:	ldrsw	x0, [x8, #236]
  41f6d8:	add	x1, sp, #0x8
  41f6dc:	bl	43401c <argp_parse@@Base+0x5360>
  41f6e0:	mov	x1, x0
  41f6e4:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f6e8:	add	x0, x0, #0xfd3
  41f6ec:	mov	w2, #0x1                   	// #1
  41f6f0:	bl	404290 <setenv@plt>
  41f6f4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41f6f8:	ldr	w0, [x8, #348]
  41f6fc:	bl	41fa5c <wcrtomb@plt+0x1ac5c>
  41f700:	mov	x1, x0
  41f704:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f708:	add	x0, x0, #0xfe7
  41f70c:	mov	w2, #0x1                   	// #1
  41f710:	bl	404290 <setenv@plt>
  41f714:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41f718:	ldr	w8, [x8, #3536]
  41f71c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41f720:	ldr	w9, [x9, #304]
  41f724:	cmp	w8, #0x0
  41f728:	csel	w0, w9, w8, eq  // eq = none
  41f72c:	bl	41fa14 <wcrtomb@plt+0x1ac14>
  41f730:	mov	x1, x0
  41f734:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  41f738:	add	x0, x0, #0xff6
  41f73c:	mov	w2, #0x1                   	// #1
  41f740:	bl	404290 <setenv@plt>
  41f744:	mov	x0, x19
  41f748:	bl	41e9f0 <wcrtomb@plt+0x19bf0>
  41f74c:	stp	x29, x30, [sp, #-16]!
  41f750:	mov	x29, sp
  41f754:	cbz	x1, 41f76c <wcrtomb@plt+0x1a96c>
  41f758:	mov	w2, #0x1                   	// #1
  41f75c:	bl	404290 <setenv@plt>
  41f760:	cbnz	w0, 41f774 <wcrtomb@plt+0x1a974>
  41f764:	ldp	x29, x30, [sp], #16
  41f768:	ret
  41f76c:	ldp	x29, x30, [sp], #16
  41f770:	b	404b20 <unsetenv@plt>
  41f774:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  41f778:	sub	sp, sp, #0x40
  41f77c:	mov	x8, x1
  41f780:	str	x19, [sp, #48]
  41f784:	mov	x19, x0
  41f788:	add	x1, sp, #0x8
  41f78c:	mov	x0, x8
  41f790:	stp	x29, x30, [sp, #32]
  41f794:	add	x29, sp, #0x20
  41f798:	bl	43401c <argp_parse@@Base+0x5360>
  41f79c:	mov	x1, x0
  41f7a0:	mov	w2, #0x1                   	// #1
  41f7a4:	mov	x0, x19
  41f7a8:	bl	404290 <setenv@plt>
  41f7ac:	cbnz	w0, 41f7c0 <wcrtomb@plt+0x1a9c0>
  41f7b0:	ldr	x19, [sp, #48]
  41f7b4:	ldp	x29, x30, [sp, #32]
  41f7b8:	add	sp, sp, #0x40
  41f7bc:	ret
  41f7c0:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  41f7c4:	sub	sp, sp, #0x40
  41f7c8:	mov	x8, x2
  41f7cc:	str	x19, [sp, #48]
  41f7d0:	mov	x19, x0
  41f7d4:	mov	x2, sp
  41f7d8:	mov	x0, x1
  41f7dc:	mov	x1, x8
  41f7e0:	stp	x29, x30, [sp, #32]
  41f7e4:	add	x29, sp, #0x20
  41f7e8:	bl	418e2c <wcrtomb@plt+0x1402c>
  41f7ec:	mov	x1, x0
  41f7f0:	mov	w2, #0x1                   	// #1
  41f7f4:	mov	x0, x19
  41f7f8:	bl	404290 <setenv@plt>
  41f7fc:	cbnz	w0, 41f810 <wcrtomb@plt+0x1aa10>
  41f800:	ldr	x19, [sp, #48]
  41f804:	ldp	x29, x30, [sp, #32]
  41f808:	add	sp, sp, #0x40
  41f80c:	ret
  41f810:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  41f814:	sub	sp, sp, #0x20
  41f818:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41f81c:	ldr	x9, [x8, #2544]
  41f820:	stp	x29, x30, [sp, #16]
  41f824:	add	x29, sp, #0x10
  41f828:	cbnz	x9, 41f83c <wcrtomb@plt+0x1aa3c>
  41f82c:	ldp	x29, x30, [sp, #16]
  41f830:	str	x0, [x8, #2544]
  41f834:	add	sp, sp, #0x20
  41f838:	ret
  41f83c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41f840:	ldr	x8, [x8, #496]
  41f844:	str	x0, [sp, #8]
  41f848:	cbz	x8, 41f850 <wcrtomb@plt+0x1aa50>
  41f84c:	blr	x8
  41f850:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f854:	add	x1, x1, #0x808
  41f858:	mov	w2, #0x5                   	// #5
  41f85c:	mov	x0, xzr
  41f860:	bl	404bd0 <dcgettext@plt>
  41f864:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41f868:	ldr	x3, [x8, #2544]
  41f86c:	ldr	x4, [sp, #8]
  41f870:	mov	x2, x0
  41f874:	mov	w0, wzr
  41f878:	mov	w1, wzr
  41f87c:	bl	4041d0 <error@plt>
  41f880:	mov	w0, #0x2                   	// #2
  41f884:	bl	41f888 <wcrtomb@plt+0x1aa88>
  41f888:	stp	x29, x30, [sp, #-32]!
  41f88c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41f890:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41f894:	ldr	x1, [x8, #624]
  41f898:	ldr	x3, [x9, #3032]
  41f89c:	str	x19, [sp, #16]
  41f8a0:	mov	w19, w0
  41f8a4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x2c808>
  41f8a8:	add	x0, x0, #0x70
  41f8ac:	mov	w2, #0x4                   	// #4
  41f8b0:	mov	x29, sp
  41f8b4:	bl	42c0d0 <argp_help@@Base>
  41f8b8:	bl	430314 <argp_parse@@Base+0x1658>
  41f8bc:	mov	w0, w19
  41f8c0:	bl	4041a0 <exit@plt>
  41f8c4:	sub	sp, sp, #0x50
  41f8c8:	str	x23, [sp, #32]
  41f8cc:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41f8d0:	ldr	x8, [x23, #2552]
  41f8d4:	stp	x20, x19, [sp, #64]
  41f8d8:	mov	x20, x1
  41f8dc:	mov	x19, x0
  41f8e0:	stp	x29, x30, [sp, #16]
  41f8e4:	stp	x22, x21, [sp, #48]
  41f8e8:	add	x29, sp, #0x10
  41f8ec:	cbnz	x8, 41f940 <wcrtomb@plt+0x1ab40>
  41f8f0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41f8f4:	ldr	w8, [x8, #464]
  41f8f8:	cbz	w8, 41f924 <wcrtomb@plt+0x1ab24>
  41f8fc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41f900:	ldr	x8, [x8, #2544]
  41f904:	cbnz	x8, 41f924 <wcrtomb@plt+0x1ab24>
  41f908:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f90c:	add	x0, x0, #0x837
  41f910:	bl	41f814 <wcrtomb@plt+0x1aa14>
  41f914:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41f918:	ldr	x8, [x8, #640]
  41f91c:	str	x8, [x23, #2552]
  41f920:	b	41f940 <wcrtomb@plt+0x1ab40>
  41f924:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0xf808>
  41f928:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f92c:	add	x0, x0, #0xc84
  41f930:	add	x1, x1, #0x84b
  41f934:	bl	4044a0 <fopen@plt>
  41f938:	str	x0, [x23, #2552]
  41f93c:	cbz	x0, 41fa08 <wcrtomb@plt+0x1ac08>
  41f940:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41f944:	ldr	x21, [x22, #3416]
  41f948:	mov	x0, x20
  41f94c:	bl	439ac0 <argp_parse@@Base+0xae04>
  41f950:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x13808>
  41f954:	mov	x4, x0
  41f958:	add	x2, x2, #0x83a
  41f95c:	mov	w1, #0x1                   	// #1
  41f960:	mov	x0, x21
  41f964:	mov	x3, x19
  41f968:	bl	4048f0 <__fprintf_chk@plt>
  41f96c:	ldr	x0, [x22, #3416]
  41f970:	bl	404ab0 <fflush_unlocked@plt>
  41f974:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41f978:	ldrb	w8, [x20, #2560]
  41f97c:	tbz	w8, #0, 41f988 <wcrtomb@plt+0x1ab88>
  41f980:	mov	w19, wzr
  41f984:	b	41f9d8 <wcrtomb@plt+0x1abd8>
  41f988:	ldr	x2, [x23, #2552]
  41f98c:	add	x0, x29, #0x18
  41f990:	add	x1, sp, #0x8
  41f994:	str	xzr, [x29, #24]
  41f998:	str	xzr, [sp, #8]
  41f99c:	bl	404980 <getline@plt>
  41f9a0:	tbnz	x0, #63, 41f9b8 <wcrtomb@plt+0x1abb8>
  41f9a4:	ldr	x0, [x29, #24]
  41f9a8:	bl	4041f0 <rpmatch@plt>
  41f9ac:	cmp	w0, #0x0
  41f9b0:	cset	w19, gt
  41f9b4:	b	41f9c4 <wcrtomb@plt+0x1abc4>
  41f9b8:	mov	w8, #0x1                   	// #1
  41f9bc:	mov	w19, wzr
  41f9c0:	strb	w8, [x20, #2560]
  41f9c4:	ldr	x0, [x29, #24]
  41f9c8:	bl	4049b0 <free@plt>
  41f9cc:	ldrb	w8, [x20, #2560]
  41f9d0:	cmp	w8, #0x1
  41f9d4:	b.ne	41f9ec <wcrtomb@plt+0x1abec>  // b.any
  41f9d8:	ldr	x1, [x22, #3416]
  41f9dc:	mov	w0, #0xa                   	// #10
  41f9e0:	bl	404b70 <fputc_unlocked@plt>
  41f9e4:	ldr	x0, [x22, #3416]
  41f9e8:	bl	404ab0 <fflush_unlocked@plt>
  41f9ec:	mov	w0, w19
  41f9f0:	ldp	x20, x19, [sp, #64]
  41f9f4:	ldp	x22, x21, [sp, #48]
  41f9f8:	ldr	x23, [sp, #32]
  41f9fc:	ldp	x29, x30, [sp, #16]
  41fa00:	add	sp, sp, #0x50
  41fa04:	ret
  41fa08:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0xf808>
  41fa0c:	add	x0, x0, #0xc84
  41fa10:	bl	42622c <wcrtomb@plt+0x2142c>
  41fa14:	cmp	w0, #0x1
  41fa18:	b.ne	41fa28 <wcrtomb@plt+0x1ac28>  // b.any
  41fa1c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x14808>
  41fa20:	add	x0, x0, #0xbbc
  41fa24:	ret
  41fa28:	mov	w8, w0
  41fa2c:	adrp	x9, 44f000 <_obstack_memory_used@@Base+0x13808>
  41fa30:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  41fa34:	add	x9, x9, #0x390
  41fa38:	add	x0, x0, #0x841
  41fa3c:	ldr	x10, [x9]
  41fa40:	cbz	x10, 41fa58 <wcrtomb@plt+0x1ac58>
  41fa44:	ldr	w11, [x9, #8]
  41fa48:	add	x9, x9, #0x10
  41fa4c:	cmp	w11, w8
  41fa50:	b.ne	41fa3c <wcrtomb@plt+0x1ac3c>  // b.any
  41fa54:	mov	x0, x10
  41fa58:	ret
  41fa5c:	stp	x29, x30, [sp, #-16]!
  41fa60:	cmp	w0, #0xa
  41fa64:	mov	x29, sp
  41fa68:	b.cs	41fa80 <wcrtomb@plt+0x1ac80>  // b.hs, b.nlast
  41fa6c:	adrp	x8, 44f000 <_obstack_memory_used@@Base+0x13808>
  41fa70:	add	x8, x8, #0x7b8
  41fa74:	ldr	x0, [x8, w0, sxtw #3]
  41fa78:	ldp	x29, x30, [sp], #16
  41fa7c:	ret
  41fa80:	bl	404850 <abort@plt>
  41fa84:	stp	x29, x30, [sp, #-48]!
  41fa88:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  41fa8c:	add	x1, x1, #0x879
  41fa90:	mov	w2, #0x3                   	// #3
  41fa94:	stp	x22, x21, [sp, #16]
  41fa98:	stp	x20, x19, [sp, #32]
  41fa9c:	mov	x29, sp
  41faa0:	mov	x19, x0
  41faa4:	bl	404580 <strncmp@plt>
  41faa8:	add	x8, x19, #0x3
  41faac:	cmp	w0, #0x0
  41fab0:	adrp	x21, 44f000 <_obstack_memory_used@@Base+0x13808>
  41fab4:	adrp	x22, 44f000 <_obstack_memory_used@@Base+0x13808>
  41fab8:	add	x21, x21, #0x3f0
  41fabc:	csel	x20, x8, x19, eq  // eq = none
  41fac0:	add	x22, x22, #0x440
  41fac4:	ldr	x0, [x21]
  41fac8:	mov	x1, x20
  41facc:	bl	404900 <strcmp@plt>
  41fad0:	cbz	w0, 41fb1c <wcrtomb@plt+0x1ad1c>
  41fad4:	add	x21, x21, #0x10
  41fad8:	cmp	x21, x22
  41fadc:	b.cc	41fac4 <wcrtomb@plt+0x1acc4>  // b.lo, b.ul, b.last
  41fae0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41fae4:	ldr	x8, [x8, #496]
  41fae8:	cbz	x8, 41faf0 <wcrtomb@plt+0x1acf0>
  41faec:	blr	x8
  41faf0:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  41faf4:	add	x1, x1, #0x87d
  41faf8:	mov	w2, #0x5                   	// #5
  41fafc:	mov	x0, xzr
  41fb00:	bl	404bd0 <dcgettext@plt>
  41fb04:	mov	x2, x0
  41fb08:	mov	w0, wzr
  41fb0c:	mov	w1, wzr
  41fb10:	mov	x3, x19
  41fb14:	bl	4041d0 <error@plt>
  41fb18:	bl	40d698 <wcrtomb@plt+0x8898>
  41fb1c:	ldr	w0, [x21, #8]
  41fb20:	ldp	x20, x19, [sp, #32]
  41fb24:	ldp	x22, x21, [sp, #16]
  41fb28:	ldp	x29, x30, [sp], #48
  41fb2c:	ret
  41fb30:	stp	x29, x30, [sp, #-32]!
  41fb34:	str	x19, [sp, #16]
  41fb38:	mov	x29, sp
  41fb3c:	mov	x19, x2
  41fb40:	mov	x2, x1
  41fb44:	mov	w1, w0
  41fb48:	adrp	x5, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41fb4c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x2c808>
  41fb50:	add	x5, x5, #0xa08
  41fb54:	add	x0, x0, #0x70
  41fb58:	add	x4, x29, #0x1c
  41fb5c:	mov	w3, #0x28                  	// #40
  41fb60:	str	x19, [x5]
  41fb64:	bl	42ecbc <argp_parse@@Base>
  41fb68:	cbnz	w0, 41fb88 <wcrtomb@plt+0x1ad88>
  41fb6c:	ldr	w8, [x19]
  41fb70:	cbnz	w8, 41fb7c <wcrtomb@plt+0x1ad7c>
  41fb74:	bl	41a204 <wcrtomb@plt+0x15404>
  41fb78:	tbnz	w0, #0, 41fb8c <wcrtomb@plt+0x1ad8c>
  41fb7c:	ldr	x19, [sp, #16]
  41fb80:	ldp	x29, x30, [sp], #32
  41fb84:	ret
  41fb88:	bl	404850 <abort@plt>
  41fb8c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41fb90:	ldr	x8, [x8, #496]
  41fb94:	cbz	x8, 41fb9c <wcrtomb@plt+0x1ad9c>
  41fb98:	blr	x8
  41fb9c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  41fba0:	add	x1, x1, #0x895
  41fba4:	mov	w2, #0x5                   	// #5
  41fba8:	mov	x0, xzr
  41fbac:	bl	404bd0 <dcgettext@plt>
  41fbb0:	ldr	x3, [x19, #8]
  41fbb4:	mov	x2, x0
  41fbb8:	mov	w0, wzr
  41fbbc:	mov	w1, wzr
  41fbc0:	bl	4041d0 <error@plt>
  41fbc4:	mov	w0, #0x2                   	// #2
  41fbc8:	bl	41f888 <wcrtomb@plt+0x1aa88>
  41fbcc:	sub	sp, sp, #0x1b0
  41fbd0:	stp	x29, x30, [sp, #336]
  41fbd4:	stp	x28, x27, [sp, #352]
  41fbd8:	stp	x26, x25, [sp, #368]
  41fbdc:	stp	x24, x23, [sp, #384]
  41fbe0:	stp	x22, x21, [sp, #400]
  41fbe4:	stp	x20, x19, [sp, #416]
  41fbe8:	add	x29, sp, #0x150
  41fbec:	mov	x19, x1
  41fbf0:	mov	w20, w0
  41fbf4:	bl	405078 <wcrtomb@plt+0x278>
  41fbf8:	ldr	x0, [x19]
  41fbfc:	bl	438550 <argp_parse@@Base+0x9894>
  41fc00:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  41fc04:	add	x1, x1, #0x3ee
  41fc08:	mov	w0, #0x6                   	// #6
  41fc0c:	bl	404dc0 <setlocale@plt>
  41fc10:	adrp	x21, 451000 <_obstack_memory_used@@Base+0x15808>
  41fc14:	add	x21, x21, #0x86c
  41fc18:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  41fc1c:	add	x1, x1, #0x8b0
  41fc20:	mov	x0, x21
  41fc24:	bl	404590 <bindtextdomain@plt>
  41fc28:	mov	x0, x21
  41fc2c:	bl	4048d0 <textdomain@plt>
  41fc30:	adrp	x10, 408000 <wcrtomb@plt+0x3200>
  41fc34:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41fc38:	mov	w9, #0x2                   	// #2
  41fc3c:	adrp	x11, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41fc40:	adrp	x24, 46b000 <argp_program_version_hook@@Base+0x458>
  41fc44:	add	x10, x10, #0x898
  41fc48:	mov	w1, #0x7                   	// #7
  41fc4c:	mov	x0, xzr
  41fc50:	str	w9, [x8, #496]
  41fc54:	str	wzr, [x11, #2944]
  41fc58:	str	x10, [x24, #496]
  41fc5c:	bl	438658 <argp_parse@@Base+0x999c>
  41fc60:	bl	427818 <wcrtomb@plt+0x22a18>
  41fc64:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41fc68:	mov	w9, #0xa                   	// #10
  41fc6c:	mov	w0, #0x50                  	// #80
  41fc70:	str	x9, [x8, #2616]
  41fc74:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  41fc78:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41fc7c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41fc80:	str	x0, [x8, #176]
  41fc84:	mov	w0, #0x11                  	// #17
  41fc88:	mov	x1, xzr
  41fc8c:	str	xzr, [x9, #336]
  41fc90:	bl	404420 <signal@plt>
  41fc94:	adrp	x8, 451000 <_obstack_memory_used@@Base+0x15808>
  41fc98:	add	x8, x8, #0xfe8
  41fc9c:	ldp	q0, q1, [x8]
  41fca0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41fca4:	add	x1, x1, #0x68
  41fca8:	mov	x0, x21
  41fcac:	stp	q0, q1, [sp, #32]
  41fcb0:	bl	42fc74 <argp_parse@@Base+0xfb8>
  41fcb4:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41fcb8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  41fcbc:	add	x21, x21, #0xa10
  41fcc0:	add	x0, x0, #0xb3c
  41fcc4:	str	xzr, [x21]
  41fcc8:	strh	wzr, [x21, #8]
  41fccc:	bl	404d10 <getenv@plt>
  41fcd0:	adrp	x25, 46b000 <argp_program_version_hook@@Base+0x458>
  41fcd4:	adrp	x28, 46b000 <argp_program_version_hook@@Base+0x458>
  41fcd8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41fcdc:	mov	w9, #0x14                  	// #20
  41fce0:	adrp	x26, 46b000 <argp_program_version_hook@@Base+0x458>
  41fce4:	mov	w10, #0x2800                	// #10240
  41fce8:	stp	x0, xzr, [x21, #16]
  41fcec:	str	wzr, [x21, #32]
  41fcf0:	str	wzr, [x25, #348]
  41fcf4:	str	wzr, [x28, #304]
  41fcf8:	str	w9, [x8, #236]
  41fcfc:	str	x10, [x26, #408]
  41fd00:	bl	430700 <argp_parse@@Base+0x1a44>
  41fd04:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41fd08:	str	x0, [x8, #3648]
  41fd0c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41fd10:	mov	w11, #0x8                   	// #8
  41fd14:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41fd18:	adrp	x10, 44f000 <_obstack_memory_used@@Base+0x13808>
  41fd1c:	str	w11, [x8, #164]
  41fd20:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41fd24:	mov	w11, #0x1                   	// #1
  41fd28:	strb	w11, [x8, #244]
  41fd2c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41fd30:	str	wzr, [x9, #404]
  41fd34:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41fd38:	ldr	q0, [x10, #288]
  41fd3c:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  41fd40:	str	w11, [x8, #96]
  41fd44:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41fd48:	str	wzr, [x9, #3672]
  41fd4c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41fd50:	str	wzr, [x10, #8]
  41fd54:	mov	w10, #0xffffffff            	// #-1
  41fd58:	strb	w11, [x8, #3616]
  41fd5c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41fd60:	str	w10, [x9, #272]
  41fd64:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41fd68:	adrp	x11, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41fd6c:	add	x8, x8, #0x118
  41fd70:	str	xzr, [x9, #72]
  41fd74:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41fd78:	add	x11, x11, #0xe28
  41fd7c:	str	w10, [x9, #192]
  41fd80:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  41fd84:	adrp	x23, 46b000 <argp_program_version_hook@@Base+0x458>
  41fd88:	str	q0, [x8]
  41fd8c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41fd90:	cmp	w20, #0x2
  41fd94:	str	xzr, [x9, #16]
  41fd98:	str	w10, [x23, #268]
  41fd9c:	str	q0, [x11]
  41fda0:	str	w10, [x8, #3656]
  41fda4:	b.lt	41ff24 <wcrtomb@plt+0x1b124>  // b.tstop
  41fda8:	ldr	x0, [x19, #8]
  41fdac:	ldrb	w8, [x0]
  41fdb0:	cmp	w8, #0x2d
  41fdb4:	b.eq	41ff24 <wcrtomb@plt+0x1b124>  // b.none
  41fdb8:	mov	w8, #0x2d                  	// #45
  41fdbc:	strb	w8, [sp, #96]
  41fdc0:	strb	wzr, [sp, #98]
  41fdc4:	bl	404170 <strlen@plt>
  41fdc8:	add	w22, w0, w20
  41fdcc:	sbfiz	x0, x22, #3, #32
  41fdd0:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  41fdd4:	ldp	x8, x23, [x19]
  41fdd8:	mov	x21, x0
  41fddc:	add	x27, x19, #0x10
  41fde0:	str	x8, [x21], #8
  41fde4:	ldrb	w8, [x23]
  41fde8:	cbz	w8, 41fef4 <wcrtomb@plt+0x1b0f4>
  41fdec:	stp	x22, x0, [sp, #16]
  41fdf0:	mov	w9, w20
  41fdf4:	add	x20, x19, w20, uxtw #3
  41fdf8:	adrp	x22, 468000 <_obstack_memory_used@@Base+0x2c808>
  41fdfc:	adrp	x26, 468000 <_obstack_memory_used@@Base+0x2c808>
  41fe00:	str	x9, [sp, #8]
  41fe04:	add	x0, sp, #0x60
  41fe08:	strb	w8, [sp, #97]
  41fe0c:	bl	43a998 <argp_parse@@Base+0xbcdc>
  41fe10:	mov	x8, x21
  41fe14:	str	x0, [x8], #8
  41fe18:	ldrb	w9, [x23]
  41fe1c:	ldr	x10, [x22, #112]
  41fe20:	ldr	x12, [x10]
  41fe24:	ldr	w11, [x10, #8]
  41fe28:	cbnz	x12, 41fe48 <wcrtomb@plt+0x1b048>
  41fe2c:	cbnz	w11, 41fe48 <wcrtomb@plt+0x1b048>
  41fe30:	ldr	x12, [x10, #16]
  41fe34:	cbnz	x12, 41fe48 <wcrtomb@plt+0x1b048>
  41fe38:	ldr	w12, [x10, #24]
  41fe3c:	cbnz	w12, 41fe48 <wcrtomb@plt+0x1b048>
  41fe40:	ldr	x12, [x10, #32]
  41fe44:	cbz	x12, 41fe80 <wcrtomb@plt+0x1b080>
  41fe48:	cmp	w11, w9
  41fe4c:	b.eq	41fe58 <wcrtomb@plt+0x1b058>  // b.none
  41fe50:	add	x10, x10, #0x30
  41fe54:	b	41fe20 <wcrtomb@plt+0x1b020>
  41fe58:	cbz	x10, 41fe80 <wcrtomb@plt+0x1b080>
  41fe5c:	ldr	x9, [x10, #16]
  41fe60:	cbz	x9, 41fed8 <wcrtomb@plt+0x1b0d8>
  41fe64:	cmp	x27, x20
  41fe68:	b.cs	420998 <wcrtomb@plt+0x1bb98>  // b.hs, b.nlast
  41fe6c:	ldr	x8, [x27], #8
  41fe70:	add	x9, x21, #0x10
  41fe74:	str	x8, [x21, #8]
  41fe78:	mov	x21, x9
  41fe7c:	b	41fedc <wcrtomb@plt+0x1b0dc>
  41fe80:	ldr	x11, [x26, #144]
  41fe84:	cbz	x11, 41fed8 <wcrtomb@plt+0x1b0d8>
  41fe88:	ldr	x10, [x11]
  41fe8c:	cbz	x10, 41fed8 <wcrtomb@plt+0x1b0d8>
  41fe90:	ldr	x10, [x10]
  41fe94:	ldr	x13, [x10]
  41fe98:	ldr	w12, [x10, #8]
  41fe9c:	cbnz	x13, 41febc <wcrtomb@plt+0x1b0bc>
  41fea0:	cbnz	w12, 41febc <wcrtomb@plt+0x1b0bc>
  41fea4:	ldr	x13, [x10, #16]
  41fea8:	cbnz	x13, 41febc <wcrtomb@plt+0x1b0bc>
  41feac:	ldr	w13, [x10, #24]
  41feb0:	cbnz	w13, 41febc <wcrtomb@plt+0x1b0bc>
  41feb4:	ldr	x13, [x10, #32]
  41feb8:	cbz	x13, 41fed0 <wcrtomb@plt+0x1b0d0>
  41febc:	cmp	w12, w9
  41fec0:	b.eq	41fecc <wcrtomb@plt+0x1b0cc>  // b.none
  41fec4:	add	x10, x10, #0x30
  41fec8:	b	41fe94 <wcrtomb@plt+0x1b094>
  41fecc:	cbnz	x10, 41fe5c <wcrtomb@plt+0x1b05c>
  41fed0:	ldr	x10, [x11, #32]!
  41fed4:	cbnz	x10, 41fe90 <wcrtomb@plt+0x1b090>
  41fed8:	mov	x21, x8
  41fedc:	ldrb	w8, [x23, #1]!
  41fee0:	cbnz	w8, 41fe04 <wcrtomb@plt+0x1b004>
  41fee4:	ldp	x22, x0, [sp, #16]
  41fee8:	ldr	x8, [sp, #8]
  41feec:	adrp	x26, 46b000 <argp_program_version_hook@@Base+0x458>
  41fef0:	b	41fef8 <wcrtomb@plt+0x1b0f8>
  41fef4:	mov	w8, w20
  41fef8:	add	x8, x19, x8, lsl #3
  41fefc:	cmp	x27, x8
  41ff00:	sub	w20, w22, #0x1
  41ff04:	adrp	x23, 46b000 <argp_program_version_hook@@Base+0x458>
  41ff08:	b.cs	41ff1c <wcrtomb@plt+0x1b11c>  // b.hs, b.nlast
  41ff0c:	ldr	x9, [x27], #8
  41ff10:	cmp	x27, x8
  41ff14:	str	x9, [x21], #8
  41ff18:	b.cc	41ff0c <wcrtomb@plt+0x1b10c>  // b.lo, b.ul, b.last
  41ff1c:	mov	x19, x0
  41ff20:	str	xzr, [x21]
  41ff24:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  41ff28:	add	x0, x0, #0xf61
  41ff2c:	bl	404d10 <getenv@plt>
  41ff30:	adrp	x8, 44f000 <_obstack_memory_used@@Base+0x13808>
  41ff34:	add	x8, x8, #0x798
  41ff38:	ldp	q0, q1, [x8]
  41ff3c:	stp	q0, q1, [sp, #64]
  41ff40:	cbz	x0, 41ff98 <wcrtomb@plt+0x1b198>
  41ff44:	mov	w2, #0xe46                 	// #3654
  41ff48:	mov	w8, #0x1                   	// #1
  41ff4c:	add	x1, sp, #0x60
  41ff50:	movk	w2, #0x200, lsl #16
  41ff54:	str	x8, [sp, #112]
  41ff58:	bl	427ec8 <wcrtomb@plt+0x230c8>
  41ff5c:	cbnz	w0, 420a08 <wcrtomb@plt+0x1bc08>
  41ff60:	ldr	x8, [sp, #96]
  41ff64:	cbz	x8, 41ff90 <wcrtomb@plt+0x1b190>
  41ff68:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41ff6c:	ldr	x9, [x9, #3032]
  41ff70:	ldr	x10, [sp, #104]
  41ff74:	add	x2, sp, #0x40
  41ff78:	str	x9, [x10]
  41ff7c:	ldr	w9, [sp, #112]
  41ff80:	ldr	x1, [sp, #104]
  41ff84:	add	w0, w9, w8
  41ff88:	bl	41fb30 <wcrtomb@plt+0x1ad30>
  41ff8c:	str	xzr, [sp, #96]
  41ff90:	add	x0, sp, #0x60
  41ff94:	bl	42800c <wcrtomb@plt+0x2320c>
  41ff98:	adrp	x5, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41ff9c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x2c808>
  41ffa0:	add	x5, x5, #0xa08
  41ffa4:	add	x8, sp, #0x20
  41ffa8:	add	x0, x0, #0x70
  41ffac:	add	x4, sp, #0x60
  41ffb0:	mov	w3, #0x8                   	// #8
  41ffb4:	mov	w1, w20
  41ffb8:	mov	x2, x19
  41ffbc:	str	x8, [x5]
  41ffc0:	bl	42ecbc <argp_parse@@Base>
  41ffc4:	cbnz	w0, 4209d0 <wcrtomb@plt+0x1bbd0>
  41ffc8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  41ffcc:	ldrb	w8, [x8, #2584]
  41ffd0:	cbz	w8, 41fffc <wcrtomb@plt+0x1b1fc>
  41ffd4:	ldr	w8, [x25, #348]
  41ffd8:	cmp	w8, #0x3
  41ffdc:	b.ne	41fff0 <wcrtomb@plt+0x1b1f0>  // b.any
  41ffe0:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x14808>
  41ffe4:	add	x0, x0, #0xbbc
  41ffe8:	bl	4229b8 <wcrtomb@plt+0x1dbb8>
  41ffec:	b	41fffc <wcrtomb@plt+0x1b1fc>
  41fff0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  41fff4:	mov	w9, #0xffffffff            	// #-1
  41fff8:	str	w9, [x8, #468]
  41fffc:	ldr	w8, [sp, #96]
  420000:	cmp	w8, w20
  420004:	b.ge	420024 <wcrtomb@plt+0x1b224>  // b.tcont
  420008:	ldr	x0, [x19, w8, sxtw #3]
  42000c:	bl	41a218 <wcrtomb@plt+0x15418>
  420010:	ldr	w8, [sp, #96]
  420014:	add	w8, w8, #0x1
  420018:	cmp	w8, w20
  42001c:	str	w8, [sp, #96]
  420020:	b.lt	420008 <wcrtomb@plt+0x1b208>  // b.tstop
  420024:	ldr	w8, [x28, #304]
  420028:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42002c:	cbnz	w8, 420048 <wcrtomb@plt+0x1b248>
  420030:	ldrb	w8, [x21, #2585]
  420034:	mov	w9, #0x4                   	// #4
  420038:	cmp	w8, #0x0
  42003c:	mov	w8, #0x6                   	// #6
  420040:	csel	w8, w8, w9, eq  // eq = none
  420044:	str	w8, [x28, #304]
  420048:	adrp	x22, 46b000 <argp_program_version_hook@@Base+0x458>
  42004c:	ldr	x9, [x22, #136]
  420050:	ldr	w10, [x25, #348]
  420054:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420058:	cmp	x9, #0x0
  42005c:	cset	w9, ne  // ne = any
  420060:	cmp	w10, #0x3
  420064:	cset	w10, eq  // eq = none
  420068:	and	w9, w9, w10
  42006c:	tbnz	w9, #0, 420094 <wcrtomb@plt+0x1b294>
  420070:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420074:	ldrb	w10, [x27, #3660]
  420078:	ldrb	w9, [x9, #3617]
  42007c:	adrp	x11, 46b000 <argp_program_version_hook@@Base+0x458>
  420080:	ldrb	w11, [x11, #400]
  420084:	orr	w9, w10, w9
  420088:	orr	w9, w9, w11
  42008c:	tst	w9, #0xff
  420090:	b.eq	4200a8 <wcrtomb@plt+0x1b2a8>  // b.none
  420094:	mov	w9, #0x1                   	// #1
  420098:	lsl	w8, w9, w8
  42009c:	mov	w9, #0x54                  	// #84
  4200a0:	tst	w8, w9
  4200a4:	b.eq	420aac <wcrtomb@plt+0x1bcac>  // b.none
  4200a8:	adrp	x19, 46b000 <argp_program_version_hook@@Base+0x458>
  4200ac:	ldr	x8, [x19, #248]
  4200b0:	cbz	x8, 4200e8 <wcrtomb@plt+0x1b2e8>
  4200b4:	bl	41a204 <wcrtomb@plt+0x15404>
  4200b8:	tbz	w0, #0, 420a4c <wcrtomb@plt+0x1bc4c>
  4200bc:	ldr	w0, [x25, #348]
  4200c0:	and	w8, w0, #0xfffffffc
  4200c4:	cmp	w8, #0x4
  4200c8:	b.eq	4200e8 <wcrtomb@plt+0x1b2e8>  // b.none
  4200cc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4200d0:	ldr	x8, [x8, #2640]
  4200d4:	cbz	x8, 4200e4 <wcrtomb@plt+0x1b2e4>
  4200d8:	ldr	w8, [x8]
  4200dc:	cmp	w8, #0x1
  4200e0:	b.eq	420c00 <wcrtomb@plt+0x1be00>  // b.none
  4200e4:	str	xzr, [x19, #248]
  4200e8:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  4200ec:	ldr	x8, [x9, #336]
  4200f0:	cbz	x8, 42011c <wcrtomb@plt+0x1b31c>
  4200f4:	cmp	x8, #0x1
  4200f8:	b.eq	420154 <wcrtomb@plt+0x1b354>  // b.none
  4200fc:	ldrb	w8, [x27, #3660]
  420100:	cbnz	w8, 420154 <wcrtomb@plt+0x1b354>
  420104:	ldr	x8, [x24, #496]
  420108:	cbz	x8, 420110 <wcrtomb@plt+0x1b310>
  42010c:	blr	x8
  420110:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420114:	add	x1, x1, #0xbb9
  420118:	b	420974 <wcrtomb@plt+0x1bb74>
  42011c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  420120:	mov	w8, #0x1                   	// #1
  420124:	add	x0, x0, #0xbb4
  420128:	str	x8, [x9, #336]
  42012c:	bl	404d10 <getenv@plt>
  420130:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  420134:	ldr	x8, [x9, #176]
  420138:	str	x0, [x8]
  42013c:	ldr	x8, [x9, #176]
  420140:	ldr	x9, [x8]
  420144:	cbnz	x9, 420154 <wcrtomb@plt+0x1b354>
  420148:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x19808>
  42014c:	add	x9, x9, #0x25d
  420150:	str	x9, [x8]
  420154:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  420158:	ldr	x8, [x20, #320]
  42015c:	cbz	x8, 420198 <wcrtomb@plt+0x1b398>
  420160:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420164:	ldr	x9, [x9, #3632]
  420168:	tbnz	x9, #63, 420198 <wcrtomb@plt+0x1b398>
  42016c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420170:	add	x8, x8, #0xa58
  420174:	ldp	x19, x1, [x8]
  420178:	mov	x0, x19
  42017c:	bl	422bd4 <wcrtomb@plt+0x1ddd4>
  420180:	cbnz	w0, 420ac4 <wcrtomb@plt+0x1bcc4>
  420184:	ldr	w8, [x19]
  420188:	cmp	w8, #0x1
  42018c:	b.ne	420448 <wcrtomb@plt+0x1b648>  // b.any
  420190:	mov	x8, xzr
  420194:	str	xzr, [x20, #320]
  420198:	cbnz	x8, 4201d8 <wcrtomb@plt+0x1b3d8>
  42019c:	ldr	w8, [x23, #268]
  4201a0:	cmn	w8, #0x1
  4201a4:	b.eq	4201d8 <wcrtomb@plt+0x1b3d8>  // b.none
  4201a8:	ldr	x8, [x24, #496]
  4201ac:	cbz	x8, 4201b4 <wcrtomb@plt+0x1b3b4>
  4201b0:	blr	x8
  4201b4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  4201b8:	add	x1, x1, #0xbec
  4201bc:	mov	w2, #0x5                   	// #5
  4201c0:	mov	x0, xzr
  4201c4:	bl	404bd0 <dcgettext@plt>
  4201c8:	mov	x2, x0
  4201cc:	mov	w0, wzr
  4201d0:	mov	w1, wzr
  4201d4:	bl	4041d0 <error@plt>
  4201d8:	ldr	x0, [x22, #136]
  4201dc:	cbz	x0, 420210 <wcrtomb@plt+0x1b410>
  4201e0:	ldr	w8, [x28, #304]
  4201e4:	orr	w8, w8, #0x4
  4201e8:	cmp	w8, #0x6
  4201ec:	b.ne	420210 <wcrtomb@plt+0x1b410>  // b.any
  4201f0:	ldrb	w8, [x27, #3660]
  4201f4:	mov	w9, #0x51                  	// #81
  4201f8:	cmp	w8, #0x0
  4201fc:	mov	w8, #0x63                  	// #99
  420200:	csel	x19, x8, x9, eq  // eq = none
  420204:	bl	404170 <strlen@plt>
  420208:	cmp	x19, x0
  42020c:	b.cc	420b60 <wcrtomb@plt+0x1bd60>  // b.lo, b.ul, b.last
  420210:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  420214:	ldrb	w9, [x8, #330]
  420218:	cbz	w9, 420260 <wcrtomb@plt+0x1b460>
  42021c:	ldrb	w9, [x27, #3660]
  420220:	cbnz	w9, 420a64 <wcrtomb@plt+0x1bc64>
  420224:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  420228:	ldr	x9, [x9, #392]
  42022c:	cbnz	x9, 420a7c <wcrtomb@plt+0x1bc7c>
  420230:	ldr	w0, [x25, #348]
  420234:	mov	w9, #0x11e                 	// #286
  420238:	lsr	x9, x9, x0
  42023c:	tbnz	w9, #0, 42028c <wcrtomb@plt+0x1b48c>
  420240:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420244:	ldr	x9, [x9, #2664]
  420248:	cbz	x9, 420258 <wcrtomb@plt+0x1b458>
  42024c:	ldr	w9, [x9]
  420250:	cmp	w9, #0x1
  420254:	b.eq	420c14 <wcrtomb@plt+0x1be14>  // b.none
  420258:	strb	wzr, [x8, #330]
  42025c:	b	42028c <wcrtomb@plt+0x1b48c>
  420260:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  420264:	ldr	x8, [x8, #392]
  420268:	cbz	x8, 42028c <wcrtomb@plt+0x1b48c>
  42026c:	ldrb	w8, [x27, #3660]
  420270:	cbnz	w8, 420bb8 <wcrtomb@plt+0x1bdb8>
  420274:	ldr	w8, [x25, #348]
  420278:	mov	w9, #0x112                 	// #274
  42027c:	lsr	x9, x9, x8
  420280:	tbnz	w9, #0, 420bd0 <wcrtomb@plt+0x1bdd0>
  420284:	cmp	w8, #0x2
  420288:	b.eq	420be8 <wcrtomb@plt+0x1bde8>  // b.none
  42028c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420290:	ldr	w8, [x8, #3640]
  420294:	cmp	w8, #0x2
  420298:	b.ne	4202a8 <wcrtomb@plt+0x1b4a8>  // b.any
  42029c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4202a0:	ldr	x8, [x8, #288]
  4202a4:	tbnz	x8, #63, 4209d8 <wcrtomb@plt+0x1bbd8>
  4202a8:	ldrb	w9, [x21, #2585]
  4202ac:	ldr	w8, [x28, #304]
  4202b0:	cbz	w9, 4202cc <wcrtomb@plt+0x1b4cc>
  4202b4:	cmp	w8, #0x4
  4202b8:	b.eq	4202cc <wcrtomb@plt+0x1b4cc>  // b.none
  4202bc:	ldr	w9, [x25, #348]
  4202c0:	sub	x9, x9, #0x5
  4202c4:	cmp	x9, #0x3
  4202c8:	b.cs	420ad8 <wcrtomb@plt+0x1bcd8>  // b.hs, b.nlast
  4202cc:	cmp	w8, #0x4
  4202d0:	adrp	x27, 46b000 <argp_program_version_hook@@Base+0x458>
  4202d4:	adrp	x28, 46b000 <argp_program_version_hook@@Base+0x458>
  4202d8:	b.eq	4202fc <wcrtomb@plt+0x1b4fc>  // b.none
  4202dc:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  4202e0:	ldr	w9, [x9, #384]
  4202e4:	cmp	w9, #0x1
  4202e8:	b.lt	4202fc <wcrtomb@plt+0x1b4fc>  // b.tstop
  4202ec:	ldr	w9, [x25, #348]
  4202f0:	sub	x9, x9, #0x5
  4202f4:	cmp	x9, #0x3
  4202f8:	b.cs	420af0 <wcrtomb@plt+0x1bcf0>  // b.hs, b.nlast
  4202fc:	cmp	w8, #0x4
  420300:	b.eq	420324 <wcrtomb@plt+0x1b524>  // b.none
  420304:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  420308:	ldr	w9, [x9, #472]
  42030c:	cmp	w9, #0x1
  420310:	b.lt	420324 <wcrtomb@plt+0x1b524>  // b.tstop
  420314:	ldr	w9, [x25, #348]
  420318:	sub	x9, x9, #0x5
  42031c:	cmp	x9, #0x3
  420320:	b.cs	420b08 <wcrtomb@plt+0x1bd08>  // b.hs, b.nlast
  420324:	cmp	w8, #0x4
  420328:	b.eq	42034c <wcrtomb@plt+0x1b54c>  // b.none
  42032c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  420330:	ldr	w8, [x8, #144]
  420334:	cmp	w8, #0x1
  420338:	b.lt	42034c <wcrtomb@plt+0x1b54c>  // b.tstop
  42033c:	ldr	w8, [x25, #348]
  420340:	sub	x8, x8, #0x5
  420344:	cmp	x8, #0x3
  420348:	b.cs	420b20 <wcrtomb@plt+0x1bd20>  // b.hs, b.nlast
  42034c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  420350:	ldrb	w9, [x8, #168]
  420354:	cbz	w9, 420384 <wcrtomb@plt+0x1b584>
  420358:	ldr	w0, [x25, #348]
  42035c:	sub	x9, x0, #0x5
  420360:	cmp	x9, #0x3
  420364:	b.cc	420384 <wcrtomb@plt+0x1b584>  // b.lo, b.ul, b.last
  420368:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42036c:	ldr	x9, [x9, #2672]
  420370:	cbz	x9, 420380 <wcrtomb@plt+0x1b580>
  420374:	ldr	w9, [x9]
  420378:	cmp	w9, #0x1
  42037c:	b.eq	420c28 <wcrtomb@plt+0x1be28>  // b.none
  420380:	strb	wzr, [x8, #168]
  420384:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  420388:	ldrb	w8, [x21, #128]
  42038c:	cbz	w8, 4203bc <wcrtomb@plt+0x1b5bc>
  420390:	ldr	w0, [x25, #348]
  420394:	sub	x8, x0, #0x5
  420398:	cmp	x8, #0x3
  42039c:	b.cc	4203bc <wcrtomb@plt+0x1b5bc>  // b.lo, b.ul, b.last
  4203a0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4203a4:	ldr	x8, [x8, #2680]
  4203a8:	cbz	x8, 4203b8 <wcrtomb@plt+0x1b5b8>
  4203ac:	ldr	w8, [x8]
  4203b0:	cmp	w8, #0x1
  4203b4:	b.eq	420c3c <wcrtomb@plt+0x1be3c>  // b.none
  4203b8:	strb	wzr, [x21, #128]
  4203bc:	adrp	x22, 46b000 <argp_program_version_hook@@Base+0x458>
  4203c0:	ldrb	w8, [x22, #331]
  4203c4:	cbz	w8, 420464 <wcrtomb@plt+0x1b664>
  4203c8:	adrp	x23, 46b000 <argp_program_version_hook@@Base+0x458>
  4203cc:	ldrb	w8, [x23, #440]
  4203d0:	cbz	w8, 4203fc <wcrtomb@plt+0x1b5fc>
  4203d4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4203d8:	add	x8, x8, #0xa80
  4203dc:	ldp	x19, x1, [x8]
  4203e0:	mov	x0, x19
  4203e4:	bl	422bd4 <wcrtomb@plt+0x1ddd4>
  4203e8:	cbnz	w0, 420b4c <wcrtomb@plt+0x1bd4c>
  4203ec:	ldr	w8, [x19]
  4203f0:	cmp	w8, #0x1
  4203f4:	b.ne	420460 <wcrtomb@plt+0x1b660>  // b.any
  4203f8:	strb	wzr, [x23, #440]
  4203fc:	adrp	x22, 46b000 <argp_program_version_hook@@Base+0x458>
  420400:	ldr	x8, [x22, #56]
  420404:	cbnz	x8, 420464 <wcrtomb@plt+0x1b664>
  420408:	ldr	x8, [x27, #176]
  42040c:	ldr	x0, [x8]
  420410:	bl	430404 <argp_parse@@Base+0x1748>
  420414:	mov	x19, x0
  420418:	bl	41e08c <wcrtomb@plt+0x1928c>
  42041c:	str	x0, [x22, #56]
  420420:	mov	x0, x19
  420424:	bl	4049b0 <free@plt>
  420428:	ldr	x8, [x22, #56]
  42042c:	cbnz	x8, 420464 <wcrtomb@plt+0x1b664>
  420430:	ldr	x8, [x24, #496]
  420434:	cbz	x8, 42043c <wcrtomb@plt+0x1b63c>
  420438:	blr	x8
  42043c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420440:	add	x1, x1, #0xe49
  420444:	b	420974 <wcrtomb@plt+0x1bb74>
  420448:	ldr	x8, [x20, #320]
  42044c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420450:	add	x9, x9, #0xe28
  420454:	stp	xzr, xzr, [x9]
  420458:	cbz	x8, 42019c <wcrtomb@plt+0x1b39c>
  42045c:	b	4201d8 <wcrtomb@plt+0x1b3d8>
  420460:	strb	wzr, [x22, #331]
  420464:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420468:	ldrb	w8, [x8, #3618]
  42046c:	cbz	w8, 42047c <wcrtomb@plt+0x1b67c>
  420470:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  420474:	mov	w9, #0x3                   	// #3
  420478:	str	w9, [x8, #240]
  42047c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  420480:	ldrb	w8, [x8, #64]
  420484:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  420488:	ldr	w10, [x10, #44]
  42048c:	mov	w9, #0x900                 	// #2304
  420490:	movk	w9, #0x8, lsl #16
  420494:	cmp	w8, #0x0
  420498:	orr	w8, w9, #0x8000
  42049c:	csel	w8, w8, w9, eq  // eq = none
  4204a0:	cset	w9, eq  // eq = none
  4204a4:	cmp	w10, #0x2
  4204a8:	cset	w10, eq  // eq = none
  4204ac:	adrp	x11, 46b000 <argp_program_version_hook@@Base+0x458>
  4204b0:	bfi	w8, w10, #18, #1
  4204b4:	str	w8, [x11, #196]
  4204b8:	ldr	w11, [x25, #348]
  4204bc:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  4204c0:	orr	w8, w8, #0x4000
  4204c4:	str	w8, [x10, #188]
  4204c8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4204cc:	lsl	w9, w9, #8
  4204d0:	cmp	w11, #0x9
  4204d4:	str	w9, [x8, #48]
  4204d8:	b.ne	4204f4 <wcrtomb@plt+0x1b6f4>  // b.any
  4204dc:	bl	41a204 <wcrtomb@plt+0x15404>
  4204e0:	tbnz	w0, #0, 42050c <wcrtomb@plt+0x1b70c>
  4204e4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4204e8:	ldr	w9, [x8, #132]
  4204ec:	add	w9, w9, #0x1
  4204f0:	b	420508 <wcrtomb@plt+0x1b708>
  4204f4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4204f8:	ldrb	w8, [x8, #41]
  4204fc:	cbz	w8, 42050c <wcrtomb@plt+0x1b70c>
  420500:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  420504:	mov	w9, #0x2                   	// #2
  420508:	str	w9, [x8, #132]
  42050c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  420510:	ldr	d0, [x8, #120]
  420514:	fcmp	d0, #0.0
  420518:	b.eq	42052c <wcrtomb@plt+0x1b72c>  // b.none
  42051c:	ldr	d1, [x26, #408]
  420520:	ucvtf	d1, d1
  420524:	fcmp	d0, d1
  420528:	b.mi	420a94 <wcrtomb@plt+0x1bc94>  // b.first
  42052c:	ldrb	w8, [x21, #128]
  420530:	cbz	w8, 420570 <wcrtomb@plt+0x1b770>
  420534:	ldr	x8, [x20, #320]
  420538:	cbz	x8, 420570 <wcrtomb@plt+0x1b770>
  42053c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420540:	add	x8, x8, #0xa58
  420544:	ldr	x19, [x8, #32]
  420548:	ldr	x1, [x8]
  42054c:	mov	x0, x19
  420550:	bl	422bd4 <wcrtomb@plt+0x1ddd4>
  420554:	cbnz	w0, 420b38 <wcrtomb@plt+0x1bd38>
  420558:	ldr	w8, [x19]
  42055c:	cmp	w8, #0x1
  420560:	b.ne	42056c <wcrtomb@plt+0x1b76c>  // b.any
  420564:	str	xzr, [x20, #320]
  420568:	b	420570 <wcrtomb@plt+0x1b770>
  42056c:	strb	wzr, [x21, #128]
  420570:	ldr	w8, [x25, #348]
  420574:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  420578:	cmp	w8, #0x9
  42057c:	b.hi	420644 <wcrtomb@plt+0x1b844>  // b.pmore
  420580:	mov	w9, #0x1                   	// #1
  420584:	lsl	w9, w9, w8
  420588:	mov	w10, #0x2e0                 	// #736
  42058c:	tst	w9, w10
  420590:	b.ne	4205e4 <wcrtomb@plt+0x1b7e4>  // b.any
  420594:	mov	w10, #0x106                 	// #262
  420598:	tst	w9, w10
  42059c:	b.eq	4207d8 <wcrtomb@plt+0x1b9d8>  // b.none
  4205a0:	ldr	x8, [x28, #336]
  4205a4:	ldr	x20, [x27, #176]
  4205a8:	cmp	x8, #0x1
  4205ac:	str	x20, [x21, #224]
  4205b0:	b.lt	420644 <wcrtomb@plt+0x1b844>  // b.tstop
  4205b4:	adrp	x19, 455000 <_obstack_memory_used@@Base+0x19808>
  4205b8:	add	x22, x20, x8, lsl #3
  4205bc:	add	x19, x19, #0x25d
  4205c0:	ldr	x0, [x20]
  4205c4:	mov	x1, x19
  4205c8:	bl	404900 <strcmp@plt>
  4205cc:	cbz	w0, 420960 <wcrtomb@plt+0x1bb60>
  4205d0:	add	x20, x20, #0x8
  4205d4:	cmp	x20, x22
  4205d8:	str	x20, [x21, #224]
  4205dc:	b.cc	4205c0 <wcrtomb@plt+0x1b7c0>  // b.lo, b.ul, b.last
  4205e0:	b	420644 <wcrtomb@plt+0x1b844>
  4205e4:	ldr	x23, [x28, #336]
  4205e8:	ldr	x22, [x27, #176]
  4205ec:	cmp	x23, #0x1
  4205f0:	str	x22, [x21, #224]
  4205f4:	b.lt	420644 <wcrtomb@plt+0x1b844>  // b.tstop
  4205f8:	adrp	x19, 455000 <_obstack_memory_used@@Base+0x19808>
  4205fc:	adrp	x20, 451000 <_obstack_memory_used@@Base+0x15808>
  420600:	add	x19, x19, #0x25d
  420604:	add	x20, x20, #0xf0f
  420608:	mov	x26, x22
  42060c:	ldr	x0, [x26]
  420610:	mov	x1, x19
  420614:	bl	404900 <strcmp@plt>
  420618:	cbnz	w0, 420630 <wcrtomb@plt+0x1b830>
  42061c:	mov	x0, x20
  420620:	bl	41f814 <wcrtomb@plt+0x1aa14>
  420624:	ldr	x26, [x21, #224]
  420628:	ldr	x22, [x27, #176]
  42062c:	ldr	x23, [x28, #336]
  420630:	add	x26, x26, #0x8
  420634:	add	x8, x22, x23, lsl #3
  420638:	cmp	x26, x8
  42063c:	str	x26, [x21, #224]
  420640:	b.cc	42060c <wcrtomb@plt+0x1b80c>  // b.lo, b.ul, b.last
  420644:	adrp	x19, 46b000 <argp_program_version_hook@@Base+0x458>
  420648:	ldr	x0, [x19, #448]
  42064c:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420650:	cbz	x0, 420670 <wcrtomb@plt+0x1b870>
  420654:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  420658:	add	x1, x1, #0x838
  42065c:	bl	4044a0 <fopen@plt>
  420660:	str	x0, [x22, #3416]
  420664:	cbnz	x0, 420698 <wcrtomb@plt+0x1b898>
  420668:	ldr	x0, [x19, #448]
  42066c:	bl	42622c <wcrtomb@plt+0x2142c>
  420670:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  420674:	ldrb	w8, [x8, #113]
  420678:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42067c:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420680:	add	x9, x9, #0x270
  420684:	add	x10, x10, #0x278
  420688:	cmp	w8, #0x0
  42068c:	csel	x8, x10, x9, eq  // eq = none
  420690:	ldr	x8, [x8]
  420694:	str	x8, [x22, #3416]
  420698:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42069c:	ldr	x8, [x27, #176]
  4206a0:	ldr	x0, [x9, #2592]
  4206a4:	str	x8, [x21, #224]
  4206a8:	cbz	x0, 4206b8 <wcrtomb@plt+0x1b8b8>
  4206ac:	bl	43a998 <argp_parse@@Base+0xbcdc>
  4206b0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4206b4:	str	x0, [x8, #3008]
  4206b8:	adrp	x19, 46b000 <argp_program_version_hook@@Base+0x458>
  4206bc:	ldrb	w8, [x19, #245]
  4206c0:	cbz	w8, 420700 <wcrtomb@plt+0x1b900>
  4206c4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4206c8:	ldr	x1, [x8, #2600]
  4206cc:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  4206d0:	add	x0, x0, #0xf3e
  4206d4:	bl	4302c0 <argp_parse@@Base+0x1604>
  4206d8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4206dc:	str	w0, [x8, #216]
  4206e0:	cbz	w0, 4206fc <wcrtomb@plt+0x1b8fc>
  4206e4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4206e8:	ldrb	w8, [x8, #113]
  4206ec:	cbnz	w8, 4206fc <wcrtomb@plt+0x1b8fc>
  4206f0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4206f4:	ldr	x8, [x8, #104]
  4206f8:	cbz	x8, 420700 <wcrtomb@plt+0x1b900>
  4206fc:	strb	wzr, [x19, #245]
  420700:	bl	408818 <wcrtomb@plt+0x3a18>
  420704:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420708:	ldr	x23, [x8, #2576]
  42070c:	cbz	x23, 420798 <wcrtomb@plt+0x1b998>
  420710:	adrp	x19, 451000 <_obstack_memory_used@@Base+0x15808>
  420714:	adrp	x26, 46b000 <argp_program_version_hook@@Base+0x458>
  420718:	add	x19, x19, #0xfbd
  42071c:	mov	x20, x23
  420720:	ldr	w8, [x26, #132]
  420724:	ldr	x23, [x23]
  420728:	cbz	w8, 420784 <wcrtomb@plt+0x1b984>
  42072c:	ldp	x0, x1, [x20, #8]
  420730:	mov	w2, #0x1                   	// #1
  420734:	bl	417574 <wcrtomb@plt+0x12774>
  420738:	ldr	x8, [x20, #32]
  42073c:	mov	x21, x0
  420740:	mov	x1, x21
  420744:	mov	x0, x8
  420748:	bl	404900 <strcmp@plt>
  42074c:	cbz	w0, 420784 <wcrtomb@plt+0x1b984>
  420750:	ldr	x8, [x24, #496]
  420754:	cbz	x8, 42075c <wcrtomb@plt+0x1b95c>
  420758:	blr	x8
  42075c:	mov	w2, #0x5                   	// #5
  420760:	mov	x0, xzr
  420764:	mov	x1, x19
  420768:	bl	404bd0 <dcgettext@plt>
  42076c:	ldp	x3, x4, [x20, #24]
  420770:	mov	x2, x0
  420774:	mov	w0, wzr
  420778:	mov	w1, wzr
  42077c:	mov	x5, x21
  420780:	bl	4041d0 <error@plt>
  420784:	ldr	x0, [x20, #32]
  420788:	bl	4049b0 <free@plt>
  42078c:	mov	x0, x20
  420790:	bl	4049b0 <free@plt>
  420794:	cbnz	x23, 42071c <wcrtomb@plt+0x1b91c>
  420798:	bl	41a2b8 <wcrtomb@plt+0x154b8>
  42079c:	adrp	x19, 46b000 <argp_program_version_hook@@Base+0x458>
  4207a0:	ldr	x8, [x19, #152]
  4207a4:	cbz	x8, 4207ac <wcrtomb@plt+0x1b9ac>
  4207a8:	bl	405c90 <wcrtomb@plt+0xe90>
  4207ac:	ldr	w8, [x25, #348]
  4207b0:	cmp	w8, #0x9
  4207b4:	b.hi	420878 <wcrtomb@plt+0x1ba78>  // b.pmore
  4207b8:	adrp	x9, 44f000 <_obstack_memory_used@@Base+0x13808>
  4207bc:	add	x9, x9, #0x130
  4207c0:	adr	x10, 4207d0 <wcrtomb@plt+0x1b9d0>
  4207c4:	ldrb	w11, [x9, x8]
  4207c8:	add	x10, x10, x11, lsl #2
  4207cc:	br	x10
  4207d0:	bl	42405c <wcrtomb@plt+0x1f25c>
  4207d4:	b	420878 <wcrtomb@plt+0x1ba78>
  4207d8:	cmp	w8, #0x3
  4207dc:	b.ne	420644 <wcrtomb@plt+0x1b844>  // b.any
  4207e0:	bl	41a204 <wcrtomb@plt+0x15404>
  4207e4:	tbz	w0, #0, 420c50 <wcrtomb@plt+0x1be50>
  4207e8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4207ec:	ldr	w8, [x8, #2608]
  4207f0:	cbz	w8, 420644 <wcrtomb@plt+0x1b844>
  4207f4:	ldr	x8, [x28, #336]
  4207f8:	cbz	x8, 420644 <wcrtomb@plt+0x1b844>
  4207fc:	ldr	x8, [x27, #176]
  420800:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  420804:	add	x1, x1, #0x25d
  420808:	ldr	x19, [x8]
  42080c:	mov	x0, x19
  420810:	bl	404900 <strcmp@plt>
  420814:	cbz	w0, 420644 <wcrtomb@plt+0x1b844>
  420818:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  42081c:	ldr	x1, [x8, #392]
  420820:	mov	x0, x19
  420824:	bl	41e054 <wcrtomb@plt+0x19254>
  420828:	b	420644 <wcrtomb@plt+0x1b844>
  42082c:	adrp	x0, 416000 <wcrtomb@plt+0x11200>
  420830:	add	x0, x0, #0xd44
  420834:	b	420844 <wcrtomb@plt+0x1ba44>
  420838:	bl	408fb0 <wcrtomb@plt+0x41b0>
  42083c:	adrp	x0, 409000 <wcrtomb@plt+0x4200>
  420840:	add	x0, x0, #0xc8
  420844:	bl	415f88 <wcrtomb@plt+0x11188>
  420848:	b	420878 <wcrtomb@plt+0x1ba78>
  42084c:	bl	40de34 <wcrtomb@plt+0x9034>
  420850:	adrp	x0, 40d000 <wcrtomb@plt+0x8200>
  420854:	add	x0, x0, #0xf84
  420858:	bl	415f88 <wcrtomb@plt+0x11188>
  42085c:	bl	40e43c <wcrtomb@plt+0x963c>
  420860:	b	420878 <wcrtomb@plt+0x1ba78>
  420864:	bl	40cdb4 <wcrtomb@plt+0x7fb4>
  420868:	b	420878 <wcrtomb@plt+0x1ba78>
  42086c:	bl	417ef0 <wcrtomb@plt+0x130f0>
  420870:	b	420878 <wcrtomb@plt+0x1ba78>
  420874:	bl	40b3cc <wcrtomb@plt+0x65cc>
  420878:	bl	408b50 <wcrtomb@plt+0x3d50>
  42087c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  420880:	ldrb	w8, [x8, #185]
  420884:	cbz	w8, 42088c <wcrtomb@plt+0x1ba8c>
  420888:	bl	4054ec <wcrtomb@plt+0x6ec>
  42088c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420890:	ldrb	w8, [x8, #2624]
  420894:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420898:	cmp	w8, #0x1
  42089c:	b.ne	4208a4 <wcrtomb@plt+0x1baa4>  // b.any
  4208a0:	bl	40c0c8 <wcrtomb@plt+0x72c8>
  4208a4:	ldr	x8, [x19, #152]
  4208a8:	cbz	x8, 4208b0 <wcrtomb@plt+0x1bab0>
  4208ac:	bl	405d98 <wcrtomb@plt+0xf98>
  4208b0:	ldr	x0, [x27, #176]
  4208b4:	bl	4049b0 <free@plt>
  4208b8:	bl	425090 <wcrtomb@plt+0x20290>
  4208bc:	bl	41a308 <wcrtomb@plt+0x15508>
  4208c0:	ldr	w8, [x20, #2944]
  4208c4:	cmp	w8, #0x2
  4208c8:	b.ne	4208f0 <wcrtomb@plt+0x1baf0>  // b.any
  4208cc:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  4208d0:	add	x1, x1, #0x90f
  4208d4:	mov	w2, #0x5                   	// #5
  4208d8:	mov	x0, xzr
  4208dc:	bl	404bd0 <dcgettext@plt>
  4208e0:	mov	x2, x0
  4208e4:	mov	w0, wzr
  4208e8:	mov	w1, wzr
  4208ec:	bl	4041d0 <error@plt>
  4208f0:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4208f4:	ldr	x8, [x22, #3416]
  4208f8:	ldr	x9, [x9, #632]
  4208fc:	cmp	x8, x9
  420900:	b.eq	420938 <wcrtomb@plt+0x1bb38>  // b.none
  420904:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420908:	ldr	x0, [x19, #624]
  42090c:	bl	4042b0 <ferror_unlocked@plt>
  420910:	cbnz	w0, 420920 <wcrtomb@plt+0x1bb20>
  420914:	ldr	x0, [x19, #624]
  420918:	bl	404450 <fclose@plt>
  42091c:	cbz	w0, 42093c <wcrtomb@plt+0x1bb3c>
  420920:	ldr	w8, [x20, #2944]
  420924:	cmp	w8, #0x1
  420928:	b.gt	42093c <wcrtomb@plt+0x1bb3c>
  42092c:	mov	w8, #0x2                   	// #2
  420930:	str	w8, [x20, #2944]
  420934:	b	42093c <wcrtomb@plt+0x1bb3c>
  420938:	bl	430314 <argp_parse@@Base+0x1658>
  42093c:	ldr	w0, [x20, #2944]
  420940:	ldp	x20, x19, [sp, #416]
  420944:	ldp	x22, x21, [sp, #400]
  420948:	ldp	x24, x23, [sp, #384]
  42094c:	ldp	x26, x25, [sp, #368]
  420950:	ldp	x28, x27, [sp, #352]
  420954:	ldp	x29, x30, [sp, #336]
  420958:	add	sp, sp, #0x1b0
  42095c:	ret
  420960:	ldr	x8, [x24, #496]
  420964:	cbz	x8, 42096c <wcrtomb@plt+0x1bb6c>
  420968:	blr	x8
  42096c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420970:	add	x1, x1, #0xf12
  420974:	mov	w2, #0x5                   	// #5
  420978:	mov	x0, xzr
  42097c:	bl	404bd0 <dcgettext@plt>
  420980:	mov	x2, x0
  420984:	mov	w0, wzr
  420988:	mov	w1, wzr
  42098c:	bl	4041d0 <error@plt>
  420990:	mov	w0, #0x2                   	// #2
  420994:	bl	41f888 <wcrtomb@plt+0x1aa88>
  420998:	ldr	x8, [x24, #496]
  42099c:	cbz	x8, 4209a4 <wcrtomb@plt+0x1bba4>
  4209a0:	blr	x8
  4209a4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  4209a8:	add	x1, x1, #0xb51
  4209ac:	mov	w2, #0x5                   	// #5
  4209b0:	mov	x0, xzr
  4209b4:	bl	404bd0 <dcgettext@plt>
  4209b8:	ldrb	w3, [x23]
  4209bc:	mov	x2, x0
  4209c0:	mov	w0, wzr
  4209c4:	mov	w1, wzr
  4209c8:	bl	4041d0 <error@plt>
  4209cc:	b	420990 <wcrtomb@plt+0x1bb90>
  4209d0:	mov	w0, #0x2                   	// #2
  4209d4:	bl	4041a0 <exit@plt>
  4209d8:	ldr	x8, [x24, #496]
  4209dc:	cbz	x8, 4209e4 <wcrtomb@plt+0x1bbe4>
  4209e0:	blr	x8
  4209e4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  4209e8:	add	x1, x1, #0xd25
  4209ec:	b	420974 <wcrtomb@plt+0x1bb74>
  4209f0:	ldr	x8, [x24, #496]
  4209f4:	cbz	x8, 4209fc <wcrtomb@plt+0x1bbfc>
  4209f8:	blr	x8
  4209fc:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  420a00:	add	x1, x1, #0x8c2
  420a04:	b	420974 <wcrtomb@plt+0x1bb74>
  420a08:	ldr	x8, [x24, #496]
  420a0c:	cbz	x8, 420a14 <wcrtomb@plt+0x1bc14>
  420a10:	blr	x8
  420a14:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420a18:	add	x1, x1, #0xf6d
  420a1c:	mov	w2, #0x5                   	// #5
  420a20:	mov	x0, xzr
  420a24:	bl	404bd0 <dcgettext@plt>
  420a28:	mov	x19, x0
  420a2c:	add	x0, sp, #0x60
  420a30:	bl	4280cc <wcrtomb@plt+0x232cc>
  420a34:	mov	x3, x0
  420a38:	mov	w0, wzr
  420a3c:	mov	w1, wzr
  420a40:	mov	x2, x19
  420a44:	bl	4041d0 <error@plt>
  420a48:	bl	40d698 <wcrtomb@plt+0x8898>
  420a4c:	ldr	x8, [x24, #496]
  420a50:	cbz	x8, 420a58 <wcrtomb@plt+0x1bc58>
  420a54:	blr	x8
  420a58:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420a5c:	add	x1, x1, #0xb77
  420a60:	b	420974 <wcrtomb@plt+0x1bb74>
  420a64:	ldr	x8, [x24, #496]
  420a68:	cbz	x8, 420a70 <wcrtomb@plt+0x1bc70>
  420a6c:	blr	x8
  420a70:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420a74:	add	x1, x1, #0xc83
  420a78:	b	420974 <wcrtomb@plt+0x1bb74>
  420a7c:	ldr	x8, [x24, #496]
  420a80:	cbz	x8, 420a88 <wcrtomb@plt+0x1bc88>
  420a84:	blr	x8
  420a88:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420a8c:	add	x1, x1, #0xca7
  420a90:	b	420974 <wcrtomb@plt+0x1bb74>
  420a94:	ldr	x8, [x24, #496]
  420a98:	cbz	x8, 420aa0 <wcrtomb@plt+0x1bca0>
  420a9c:	blr	x8
  420aa0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420aa4:	add	x1, x1, #0xea3
  420aa8:	b	420974 <wcrtomb@plt+0x1bb74>
  420aac:	ldr	x8, [x24, #496]
  420ab0:	cbz	x8, 420ab8 <wcrtomb@plt+0x1bcb8>
  420ab4:	blr	x8
  420ab8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420abc:	add	x1, x1, #0xf8a
  420ac0:	b	420974 <wcrtomb@plt+0x1bb74>
  420ac4:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  420ac8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420acc:	add	x0, x0, #0xca
  420ad0:	add	x1, x1, #0xbe4
  420ad4:	bl	422c20 <wcrtomb@plt+0x1de20>
  420ad8:	ldr	x8, [x24, #496]
  420adc:	cbz	x8, 420ae4 <wcrtomb@plt+0x1bce4>
  420ae0:	blr	x8
  420ae4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420ae8:	add	x1, x1, #0xd58
  420aec:	b	420974 <wcrtomb@plt+0x1bb74>
  420af0:	ldr	x8, [x24, #496]
  420af4:	cbz	x8, 420afc <wcrtomb@plt+0x1bcfc>
  420af8:	blr	x8
  420afc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420b00:	add	x1, x1, #0xd88
  420b04:	b	420974 <wcrtomb@plt+0x1bb74>
  420b08:	ldr	x8, [x24, #496]
  420b0c:	cbz	x8, 420b14 <wcrtomb@plt+0x1bd14>
  420b10:	blr	x8
  420b14:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420b18:	add	x1, x1, #0xdb2
  420b1c:	b	420974 <wcrtomb@plt+0x1bb74>
  420b20:	ldr	x8, [x24, #496]
  420b24:	cbz	x8, 420b2c <wcrtomb@plt+0x1bd2c>
  420b28:	blr	x8
  420b2c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420b30:	add	x1, x1, #0xddf
  420b34:	b	420974 <wcrtomb@plt+0x1bb74>
  420b38:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  420b3c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  420b40:	add	x0, x0, #0xed1
  420b44:	add	x1, x1, #0xca
  420b48:	bl	422c20 <wcrtomb@plt+0x1de20>
  420b4c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  420b50:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420b54:	add	x0, x0, #0xe28
  420b58:	add	x1, x1, #0xe38
  420b5c:	bl	422c20 <wcrtomb@plt+0x1de20>
  420b60:	ldr	x8, [x24, #496]
  420b64:	cbz	x8, 420b6c <wcrtomb@plt+0x1bd6c>
  420b68:	blr	x8
  420b6c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420b70:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x15808>
  420b74:	add	x1, x1, #0xc20
  420b78:	add	x2, x2, #0xc51
  420b7c:	mov	w4, #0x5                   	// #5
  420b80:	mov	x0, xzr
  420b84:	mov	x3, x19
  420b88:	bl	404ad0 <dcngettext@plt>
  420b8c:	ldr	x8, [x22, #136]
  420b90:	mov	x20, x0
  420b94:	mov	x0, x8
  420b98:	bl	4398cc <argp_parse@@Base+0xac10>
  420b9c:	mov	x3, x0
  420ba0:	mov	w0, wzr
  420ba4:	mov	w1, wzr
  420ba8:	mov	x2, x20
  420bac:	mov	x4, x19
  420bb0:	bl	4041d0 <error@plt>
  420bb4:	b	420990 <wcrtomb@plt+0x1bb90>
  420bb8:	ldr	x8, [x24, #496]
  420bbc:	cbz	x8, 420bc4 <wcrtomb@plt+0x1bdc4>
  420bc0:	blr	x8
  420bc4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420bc8:	add	x1, x1, #0xcd2
  420bcc:	b	420974 <wcrtomb@plt+0x1bb74>
  420bd0:	ldr	x8, [x24, #496]
  420bd4:	cbz	x8, 420bdc <wcrtomb@plt+0x1bddc>
  420bd8:	blr	x8
  420bdc:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  420be0:	add	x1, x1, #0xfa7
  420be4:	b	420974 <wcrtomb@plt+0x1bb74>
  420be8:	ldr	x8, [x24, #496]
  420bec:	cbz	x8, 420bf4 <wcrtomb@plt+0x1bdf4>
  420bf0:	blr	x8
  420bf4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420bf8:	add	x1, x1, #0xcfe
  420bfc:	b	420974 <wcrtomb@plt+0x1bb74>
  420c00:	bl	41fa5c <wcrtomb@plt+0x1ac5c>
  420c04:	mov	x1, x0
  420c08:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  420c0c:	add	x0, x0, #0xba7
  420c10:	bl	422c20 <wcrtomb@plt+0x1de20>
  420c14:	bl	41fa5c <wcrtomb@plt+0x1ac5c>
  420c18:	mov	x1, x0
  420c1c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  420c20:	add	x0, x0, #0xcc9
  420c24:	bl	422c20 <wcrtomb@plt+0x1de20>
  420c28:	bl	41fa5c <wcrtomb@plt+0x1ac5c>
  420c2c:	mov	x1, x0
  420c30:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  420c34:	add	x0, x0, #0xe0b
  420c38:	bl	422c20 <wcrtomb@plt+0x1de20>
  420c3c:	bl	41fa5c <wcrtomb@plt+0x1ac5c>
  420c40:	mov	x1, x0
  420c44:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  420c48:	add	x0, x0, #0xe1b
  420c4c:	bl	422c20 <wcrtomb@plt+0x1de20>
  420c50:	ldr	x8, [x24, #496]
  420c54:	cbz	x8, 420c5c <wcrtomb@plt+0x1be5c>
  420c58:	blr	x8
  420c5c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420c60:	add	x1, x1, #0xee2
  420c64:	b	420974 <wcrtomb@plt+0x1bb74>
  420c68:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420c6c:	ldr	w9, [x8, #2944]
  420c70:	cmp	w9, w0
  420c74:	b.ge	420c7c <wcrtomb@plt+0x1be7c>  // b.tcont
  420c78:	str	w0, [x8, #2944]
  420c7c:	ret
  420c80:	stp	x29, x30, [sp, #-16]!
  420c84:	mov	w2, #0x1a8                 	// #424
  420c88:	mov	w1, wzr
  420c8c:	mov	x29, sp
  420c90:	bl	4045e0 <memset@plt>
  420c94:	ldp	x29, x30, [sp], #16
  420c98:	ret
  420c9c:	stp	x29, x30, [sp, #-32]!
  420ca0:	str	x19, [sp, #16]
  420ca4:	mov	x19, x0
  420ca8:	ldr	x0, [x0, #400]
  420cac:	mov	x29, sp
  420cb0:	cbz	x0, 420cbc <wcrtomb@plt+0x1bebc>
  420cb4:	bl	404770 <closedir@plt>
  420cb8:	b	420ccc <wcrtomb@plt+0x1becc>
  420cbc:	ldr	w0, [x19, #408]
  420cc0:	cmp	w0, #0x0
  420cc4:	b.le	420ce8 <wcrtomb@plt+0x1bee8>
  420cc8:	bl	4047a0 <close@plt>
  420ccc:	str	xzr, [x19, #400]
  420cd0:	str	wzr, [x19, #408]
  420cd4:	cbz	w0, 420cf0 <wcrtomb@plt+0x1bef0>
  420cd8:	ldr	x0, [x19]
  420cdc:	bl	419c2c <wcrtomb@plt+0x14e2c>
  420ce0:	mov	w0, wzr
  420ce4:	b	420cf4 <wcrtomb@plt+0x1bef4>
  420ce8:	str	xzr, [x19, #400]
  420cec:	str	wzr, [x19, #408]
  420cf0:	mov	w0, #0x1                   	// #1
  420cf4:	ldr	x19, [sp, #16]
  420cf8:	ldp	x29, x30, [sp], #32
  420cfc:	ret
  420d00:	stp	x29, x30, [sp, #-32]!
  420d04:	str	x19, [sp, #16]
  420d08:	mov	x29, sp
  420d0c:	mov	x19, x0
  420d10:	bl	420c9c <wcrtomb@plt+0x1be9c>
  420d14:	ldp	x1, x0, [x19, #328]
  420d18:	bl	410e6c <wcrtomb@plt+0xc06c>
  420d1c:	ldr	x0, [x19]
  420d20:	bl	4049b0 <free@plt>
  420d24:	ldr	x0, [x19, #8]
  420d28:	bl	4049b0 <free@plt>
  420d2c:	ldr	x0, [x19, #24]
  420d30:	bl	4049b0 <free@plt>
  420d34:	ldr	x0, [x19, #32]
  420d38:	bl	4049b0 <free@plt>
  420d3c:	ldr	x0, [x19, #40]
  420d40:	bl	4049b0 <free@plt>
  420d44:	ldr	x0, [x19, #48]
  420d48:	bl	4049b0 <free@plt>
  420d4c:	ldr	x0, [x19, #56]
  420d50:	bl	4049b0 <free@plt>
  420d54:	ldr	x0, [x19, #72]
  420d58:	bl	4049b0 <free@plt>
  420d5c:	ldr	x0, [x19, #304]
  420d60:	bl	4049b0 <free@plt>
  420d64:	ldr	x0, [x19, #384]
  420d68:	bl	4049b0 <free@plt>
  420d6c:	add	x0, x19, #0x158
  420d70:	bl	410bcc <wcrtomb@plt+0xbdcc>
  420d74:	mov	x0, x19
  420d78:	bl	40d984 <wcrtomb@plt+0x8b84>
  420d7c:	mov	w2, #0x1a8                 	// #424
  420d80:	mov	x0, x19
  420d84:	mov	w1, wzr
  420d88:	bl	4045e0 <memset@plt>
  420d8c:	ldr	x19, [sp, #16]
  420d90:	ldp	x29, x30, [sp], #32
  420d94:	ret
  420d98:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420d9c:	ldr	w8, [x8, #3536]
  420da0:	cmp	w8, #0x4
  420da4:	csel	x8, x3, xzr, eq  // eq = none
  420da8:	csel	x9, x1, xzr, eq  // eq = none
  420dac:	cmp	x0, x2
  420db0:	b.ge	420dbc <wcrtomb@plt+0x1bfbc>  // b.tcont
  420db4:	mov	w0, #0xffffffff            	// #-1
  420db8:	ret
  420dbc:	b.le	420dc8 <wcrtomb@plt+0x1bfc8>
  420dc0:	mov	w0, #0x1                   	// #1
  420dc4:	ret
  420dc8:	sub	w0, w9, w8
  420dcc:	ret
  420dd0:	sub	sp, sp, #0xf0
  420dd4:	stp	x29, x30, [sp, #144]
  420dd8:	stp	x28, x27, [sp, #160]
  420ddc:	stp	x26, x25, [sp, #176]
  420de0:	stp	x24, x23, [sp, #192]
  420de4:	stp	x22, x21, [sp, #208]
  420de8:	stp	x20, x19, [sp, #224]
  420dec:	ldr	x20, [x2, #40]
  420df0:	sub	w8, w0, #0x30
  420df4:	mov	x19, x1
  420df8:	mov	w21, w0
  420dfc:	cmp	w8, #0x11f
  420e00:	mov	w0, #0x7                   	// #7
  420e04:	add	x29, sp, #0x90
  420e08:	b.hi	420e50 <wcrtomb@plt+0x1c050>  // b.pmore
  420e0c:	adrp	x9, 44f000 <_obstack_memory_used@@Base+0x13808>
  420e10:	add	x9, x9, #0x13a
  420e14:	adr	x10, 420e24 <wcrtomb@plt+0x1c024>
  420e18:	ldrh	w11, [x9, x8, lsl #1]
  420e1c:	add	x10, x10, x11, lsl #2
  420e20:	br	x10
  420e24:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x14808>
  420e28:	add	x0, x0, #0xc64
  420e2c:	bl	4229b8 <wcrtomb@plt+0x1dbb8>
  420e30:	cmp	w21, #0x14e
  420e34:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  420e38:	mov	w9, #0x1                   	// #1
  420e3c:	cset	w1, eq  // eq = none
  420e40:	mov	x0, x19
  420e44:	str	w9, [x8, #144]
  420e48:	bl	424ff0 <wcrtomb@plt+0x201f0>
  420e4c:	b	421e38 <wcrtomb@plt+0x1d038>
  420e50:	cbz	w21, 421ebc <wcrtomb@plt+0x1d0bc>
  420e54:	mov	w8, #0x5                   	// #5
  420e58:	movk	w8, #0x100, lsl #16
  420e5c:	cmp	w21, w8
  420e60:	b.ne	421e3c <wcrtomb@plt+0x1d03c>  // b.any
  420e64:	ldr	x8, [x20]
  420e68:	ldr	w8, [x8]
  420e6c:	cbz	w8, 422034 <wcrtomb@plt+0x1d234>
  420e70:	cmp	w8, #0x2
  420e74:	b.ne	421ff0 <wcrtomb@plt+0x1d1f0>  // b.any
  420e78:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420e7c:	add	x1, x1, #0x870
  420e80:	mov	w2, #0x5                   	// #5
  420e84:	mov	x0, xzr
  420e88:	bl	404bd0 <dcgettext@plt>
  420e8c:	ldr	x8, [x20]
  420e90:	mov	x2, x0
  420e94:	mov	w0, wzr
  420e98:	mov	w1, wzr
  420e9c:	ldp	x3, x4, [x8, #8]
  420ea0:	bl	4041d0 <error@plt>
  420ea4:	b	421ff0 <wcrtomb@plt+0x1d1f0>
  420ea8:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x16808>
  420eac:	add	x4, x4, #0x3ee
  420eb0:	add	x3, sp, #0x38
  420eb4:	mov	w2, #0xa                   	// #10
  420eb8:	mov	x0, x19
  420ebc:	mov	x1, xzr
  420ec0:	bl	43aa40 <argp_parse@@Base+0xbd84>
  420ec4:	cbnz	w0, 422080 <wcrtomb@plt+0x1d280>
  420ec8:	ldr	x8, [sp, #56]
  420ecc:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  420ed0:	str	x8, [x9, #368]
  420ed4:	b	421e3c <wcrtomb@plt+0x1d03c>
  420ed8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420edc:	mov	w0, wzr
  420ee0:	str	x19, [x8, #272]
  420ee4:	b	421e3c <wcrtomb@plt+0x1d03c>
  420ee8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  420eec:	mov	w9, #0x1                   	// #1
  420ef0:	add	x1, sp, #0x38
  420ef4:	mov	w2, #0xa                   	// #10
  420ef8:	mov	x0, x19
  420efc:	strb	w9, [x8, #400]
  420f00:	bl	404160 <strtoul@plt>
  420f04:	ldr	x8, [sp, #56]
  420f08:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  420f0c:	str	w0, [x9, #96]
  420f10:	ldrb	w9, [x8]
  420f14:	cbz	w9, 421e38 <wcrtomb@plt+0x1d038>
  420f18:	cmp	w9, #0x2e
  420f1c:	b.ne	420f44 <wcrtomb@plt+0x1c144>  // b.any
  420f20:	add	x0, x8, #0x1
  420f24:	add	x1, sp, #0x38
  420f28:	mov	w2, #0xa                   	// #10
  420f2c:	bl	404160 <strtoul@plt>
  420f30:	ldr	x8, [sp, #56]
  420f34:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420f38:	str	w0, [x9, #3672]
  420f3c:	ldrb	w8, [x8]
  420f40:	cbz	w8, 421e38 <wcrtomb@plt+0x1d038>
  420f44:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  420f48:	ldr	x8, [x8, #496]
  420f4c:	cbz	x8, 420f54 <wcrtomb@plt+0x1c154>
  420f50:	blr	x8
  420f54:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  420f58:	add	x1, x1, #0x73e
  420f5c:	b	4220c0 <wcrtomb@plt+0x1d2c0>
  420f60:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  420f64:	ldr	x5, [x8, #448]
  420f68:	adrp	x20, 44f000 <_obstack_memory_used@@Base+0x13808>
  420f6c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  420f70:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x13808>
  420f74:	add	x20, x20, #0x700
  420f78:	add	x0, x0, #0x72d
  420f7c:	add	x2, x2, #0x708
  420f80:	mov	w4, #0x4                   	// #4
  420f84:	mov	x1, x19
  420f88:	mov	x3, x20
  420f8c:	bl	42bfcc <wcrtomb@plt+0x271cc>
  420f90:	mov	x8, x0
  420f94:	ldr	w8, [x20, x8, lsl #2]
  420f98:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  420f9c:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  420fa0:	mov	w11, #0x1                   	// #1
  420fa4:	mov	w0, wzr
  420fa8:	str	w8, [x9, #404]
  420fac:	strb	w11, [x10, #400]
  420fb0:	b	421e3c <wcrtomb@plt+0x1d03c>
  420fb4:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x14808>
  420fb8:	add	x0, x0, #0xc64
  420fbc:	bl	4229b8 <wcrtomb@plt+0x1dbb8>
  420fc0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  420fc4:	mov	w9, #0x1                   	// #1
  420fc8:	b	421e64 <wcrtomb@plt+0x1d064>
  420fcc:	ldr	x1, [x20]
  420fd0:	mov	w0, #0x5                   	// #5
  420fd4:	b	421e34 <wcrtomb@plt+0x1d034>
  420fd8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  420fdc:	mov	w9, #0x1                   	// #1
  420fe0:	mov	w0, wzr
  420fe4:	strb	w9, [x8, #186]
  420fe8:	b	421e3c <wcrtomb@plt+0x1d03c>
  420fec:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  420ff0:	mov	w0, wzr
  420ff4:	str	x19, [x8, #152]
  420ff8:	b	421e3c <wcrtomb@plt+0x1d03c>
  420ffc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421000:	mov	w9, #0x1                   	// #1
  421004:	mov	w0, wzr
  421008:	strb	w9, [x8, #232]
  42100c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421010:	adrp	x1, 46b000 <argp_program_version_hook@@Base+0x458>
  421014:	add	x1, x1, #0x48
  421018:	mov	x0, x19
  42101c:	bl	422a50 <wcrtomb@plt+0x1dc50>
  421020:	cmn	x0, #0x1
  421024:	b.eq	421ed4 <wcrtomb@plt+0x1d0d4>  // b.none
  421028:	mov	x8, x0
  42102c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  421030:	mov	w0, wzr
  421034:	str	w8, [x9, #272]
  421038:	b	421e3c <wcrtomb@plt+0x1d03c>
  42103c:	adrp	x3, 43a000 <argp_parse@@Base+0xb344>
  421040:	adrp	x4, 404000 <mbrtowc@plt-0xe0>
  421044:	add	x3, x3, #0x7a4
  421048:	add	x4, x4, #0x9b0
  42104c:	add	x0, sp, #0x38
  421050:	mov	x1, xzr
  421054:	mov	x2, xzr
  421058:	bl	43b4e0 <_obstack_begin@@Base>
  42105c:	ldrb	w8, [x19]
  421060:	cbz	w8, 4212dc <wcrtomb@plt+0x1c4dc>
  421064:	adrp	x21, 452000 <_obstack_memory_used@@Base+0x16808>
  421068:	adrp	x22, 451000 <_obstack_memory_used@@Base+0x15808>
  42106c:	add	x21, x21, #0x478
  421070:	add	x22, x22, #0xa73
  421074:	mov	x0, x19
  421078:	mov	x1, x21
  42107c:	bl	404ca0 <strcspn@plt>
  421080:	mov	x23, x0
  421084:	mov	w1, #0x3d                  	// #61
  421088:	mov	x0, x19
  42108c:	mov	x2, x23
  421090:	bl	404b50 <memchr@plt>
  421094:	cbz	x0, 4211b4 <wcrtomb@plt+0x1c3b4>
  421098:	mov	x26, x0
  42109c:	ldp	x0, x8, [sp, #80]
  4210a0:	sub	x9, x26, x19
  4210a4:	add	x24, x9, #0x1
  4210a8:	sub	x8, x8, x0
  4210ac:	cmp	x8, x24
  4210b0:	b.cs	4210c4 <wcrtomb@plt+0x1c2c4>  // b.hs, b.nlast
  4210b4:	add	x0, sp, #0x38
  4210b8:	mov	x1, x24
  4210bc:	bl	43b5e8 <_obstack_newchunk@@Base>
  4210c0:	ldr	x0, [sp, #80]
  4210c4:	mov	x1, x19
  4210c8:	mov	x2, x24
  4210cc:	bl	4040f0 <memcpy@plt>
  4210d0:	ldr	x8, [sp, #80]
  4210d4:	mov	x25, x26
  4210d8:	add	x27, x8, x24
  4210dc:	str	x27, [sp, #80]
  4210e0:	ldrb	w28, [x25, #1]!
  4210e4:	sub	x24, x23, x24
  4210e8:	cbz	x28, 421200 <wcrtomb@plt+0x1c400>
  4210ec:	bl	404930 <__ctype_b_loc@plt>
  4210f0:	ldr	x8, [x0]
  4210f4:	ldrh	w9, [x8, x28, lsl #1]
  4210f8:	tbz	w9, #13, 421130 <wcrtomb@plt+0x1c330>
  4210fc:	mov	x9, xzr
  421100:	add	x10, x26, x9
  421104:	ldrb	w28, [x10, #2]
  421108:	cbz	x28, 4211ec <wcrtomb@plt+0x1c3ec>
  42110c:	ldrh	w10, [x8, x28, lsl #1]
  421110:	add	x9, x9, #0x1
  421114:	tbnz	w10, #13, 421100 <wcrtomb@plt+0x1c300>
  421118:	add	x8, x23, x19
  42111c:	mvn	x10, x9
  421120:	sub	x8, x8, x26
  421124:	add	x26, x26, x9
  421128:	add	x24, x10, x8
  42112c:	add	x25, x26, #0x1
  421130:	cmp	w28, #0x7b
  421134:	b.ne	421200 <wcrtomb@plt+0x1c400>  // b.any
  421138:	ldrb	w8, [x26, x24]
  42113c:	cmp	w8, #0x7d
  421140:	b.ne	421200 <wcrtomb@plt+0x1c400>  // b.any
  421144:	mov	x0, x24
  421148:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  42114c:	add	x1, x26, #0x2
  421150:	sub	x26, x24, #0x2
  421154:	mov	x2, x26
  421158:	mov	x27, x0
  42115c:	bl	4040f0 <memcpy@plt>
  421160:	add	x3, sp, #0x28
  421164:	mov	x0, x20
  421168:	mov	x1, x22
  42116c:	mov	x2, x27
  421170:	strb	wzr, [x27, x26]
  421174:	bl	422854 <wcrtomb@plt+0x1da54>
  421178:	cbz	w0, 421280 <wcrtomb@plt+0x1c480>
  42117c:	ldp	x0, x8, [sp, #80]
  421180:	sub	x8, x8, x0
  421184:	cmp	x8, x24
  421188:	b.cs	42119c <wcrtomb@plt+0x1c39c>  // b.hs, b.nlast
  42118c:	add	x0, sp, #0x38
  421190:	mov	x1, x24
  421194:	bl	43b5e8 <_obstack_newchunk@@Base>
  421198:	ldr	x0, [sp, #80]
  42119c:	mov	x1, x25
  4211a0:	mov	x2, x24
  4211a4:	bl	4040f0 <memcpy@plt>
  4211a8:	ldr	x8, [sp, #80]
  4211ac:	add	x8, x8, x24
  4211b0:	b	4212cc <wcrtomb@plt+0x1c4cc>
  4211b4:	ldp	x0, x8, [sp, #80]
  4211b8:	sub	x8, x8, x0
  4211bc:	cmp	x8, x23
  4211c0:	b.cs	4211d4 <wcrtomb@plt+0x1c3d4>  // b.hs, b.nlast
  4211c4:	add	x0, sp, #0x38
  4211c8:	mov	x1, x23
  4211cc:	bl	43b5e8 <_obstack_newchunk@@Base>
  4211d0:	ldr	x0, [sp, #80]
  4211d4:	mov	x1, x19
  4211d8:	mov	x2, x23
  4211dc:	bl	4040f0 <memcpy@plt>
  4211e0:	ldr	x8, [sp, #80]
  4211e4:	add	x8, x8, x23
  4211e8:	b	421238 <wcrtomb@plt+0x1c438>
  4211ec:	add	x8, x23, x19
  4211f0:	sub	x8, x8, x26
  4211f4:	sub	x8, x8, x9
  4211f8:	sub	x24, x8, #0x2
  4211fc:	add	x25, x10, #0x2
  421200:	ldr	x8, [sp, #88]
  421204:	sub	x8, x8, x27
  421208:	cmp	x8, x24
  42120c:	b.cs	421220 <wcrtomb@plt+0x1c420>  // b.hs, b.nlast
  421210:	add	x0, sp, #0x38
  421214:	mov	x1, x24
  421218:	bl	43b5e8 <_obstack_newchunk@@Base>
  42121c:	ldr	x27, [sp, #80]
  421220:	mov	x0, x27
  421224:	mov	x1, x25
  421228:	mov	x2, x24
  42122c:	bl	4040f0 <memcpy@plt>
  421230:	ldr	x8, [sp, #80]
  421234:	add	x8, x8, x24
  421238:	str	x8, [sp, #80]
  42123c:	add	x19, x19, x23
  421240:	ldrb	w8, [x19]
  421244:	cbz	w8, 4212dc <wcrtomb@plt+0x1c4dc>
  421248:	ldp	x9, x10, [sp, #80]
  42124c:	cmp	x10, x9
  421250:	b.ne	421268 <wcrtomb@plt+0x1c468>  // b.any
  421254:	add	x0, sp, #0x38
  421258:	mov	w1, #0x1                   	// #1
  42125c:	bl	43b5e8 <_obstack_newchunk@@Base>
  421260:	ldrb	w8, [x19]
  421264:	ldr	x9, [sp, #80]
  421268:	add	x10, x9, #0x1
  42126c:	str	x10, [sp, #80]
  421270:	strb	w8, [x9]
  421274:	ldrb	w8, [x19, #1]!
  421278:	cbnz	w8, 421074 <wcrtomb@plt+0x1c274>
  42127c:	b	4212dc <wcrtomb@plt+0x1c4dc>
  421280:	ldp	x0, x1, [sp, #40]
  421284:	add	x2, sp, #0x8
  421288:	bl	418e2c <wcrtomb@plt+0x1402c>
  42128c:	mov	x24, x0
  421290:	bl	404170 <strlen@plt>
  421294:	mov	x25, x0
  421298:	ldp	x0, x8, [sp, #80]
  42129c:	sub	x8, x8, x0
  4212a0:	cmp	x8, x25
  4212a4:	b.cs	4212b8 <wcrtomb@plt+0x1c4b8>  // b.hs, b.nlast
  4212a8:	add	x0, sp, #0x38
  4212ac:	mov	x1, x25
  4212b0:	bl	43b5e8 <_obstack_newchunk@@Base>
  4212b4:	ldr	x0, [sp, #80]
  4212b8:	mov	x1, x24
  4212bc:	mov	x2, x25
  4212c0:	bl	4040f0 <memcpy@plt>
  4212c4:	ldr	x8, [sp, #80]
  4212c8:	add	x8, x8, x25
  4212cc:	mov	x0, x27
  4212d0:	str	x8, [sp, #80]
  4212d4:	bl	4049b0 <free@plt>
  4212d8:	b	42123c <wcrtomb@plt+0x1c43c>
  4212dc:	ldp	x8, x9, [sp, #80]
  4212e0:	cmp	x9, x8
  4212e4:	b.ne	4212f8 <wcrtomb@plt+0x1c4f8>  // b.any
  4212e8:	add	x0, sp, #0x38
  4212ec:	mov	w1, #0x1                   	// #1
  4212f0:	bl	43b5e8 <_obstack_newchunk@@Base>
  4212f4:	ldr	x8, [sp, #80]
  4212f8:	add	x9, x8, #0x1
  4212fc:	str	x9, [sp, #80]
  421300:	strb	wzr, [x8]
  421304:	ldp	x0, x8, [sp, #72]
  421308:	cmp	x8, x0
  42130c:	b.ne	42131c <wcrtomb@plt+0x1c51c>  // b.any
  421310:	ldrb	w9, [sp, #136]
  421314:	orr	w9, w9, #0x2
  421318:	strb	w9, [sp, #136]
  42131c:	ldr	x10, [sp, #104]
  421320:	ldr	x11, [sp, #64]
  421324:	ldr	x9, [sp, #88]
  421328:	add	x8, x10, x8
  42132c:	bic	x8, x8, x10
  421330:	sub	x10, x8, x11
  421334:	sub	x11, x9, x11
  421338:	cmp	x10, x11
  42133c:	str	x8, [sp, #80]
  421340:	b.ls	42134c <wcrtomb@plt+0x1c54c>  // b.plast
  421344:	mov	x8, x9
  421348:	str	x9, [sp, #80]
  42134c:	str	x8, [sp, #72]
  421350:	bl	43a998 <argp_parse@@Base+0xbcdc>
  421354:	mov	x19, x0
  421358:	add	x0, sp, #0x38
  42135c:	mov	x1, xzr
  421360:	bl	43b760 <_obstack_free@@Base>
  421364:	mov	w8, #0x1                   	// #1
  421368:	mov	x0, x19
  42136c:	strb	w8, [x20, #17]
  421370:	bl	4103f8 <wcrtomb@plt+0xb5f8>
  421374:	mov	x0, x19
  421378:	bl	4049b0 <free@plt>
  42137c:	b	421e38 <wcrtomb@plt+0x1d038>
  421380:	ldr	x1, [x20]
  421384:	mov	w0, #0x1                   	// #1
  421388:	b	421e34 <wcrtomb@plt+0x1d034>
  42138c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421390:	mov	w9, #0x1                   	// #1
  421394:	mov	w0, wzr
  421398:	strb	w9, [x8, #160]
  42139c:	b	421e3c <wcrtomb@plt+0x1d03c>
  4213a0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4213a4:	mov	w9, #0xffffffff            	// #-1
  4213a8:	b	4216e4 <wcrtomb@plt+0x1c8e4>
  4213ac:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4213b0:	mov	w9, #0x1                   	// #1
  4213b4:	mov	w0, wzr
  4213b8:	strb	w9, [x8, #245]
  4213bc:	str	x19, [x20, #24]
  4213c0:	b	421e3c <wcrtomb@plt+0x1d03c>
  4213c4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4213c8:	mov	w9, #0x1                   	// #1
  4213cc:	mov	w0, wzr
  4213d0:	strb	w9, [x8, #3618]
  4213d4:	b	421e3c <wcrtomb@plt+0x1d03c>
  4213d8:	ldr	x1, [x20]
  4213dc:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0xf808>
  4213e0:	add	x0, x0, #0xa7c
  4213e4:	b	421df4 <wcrtomb@plt+0x1cff4>
  4213e8:	ldr	x1, [x20]
  4213ec:	mov	w0, #0x7                   	// #7
  4213f0:	bl	4226bc <wcrtomb@plt+0x1d8bc>
  4213f4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4213f8:	mov	w9, #0x1                   	// #1
  4213fc:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  421400:	mov	w0, wzr
  421404:	strb	w9, [x8, #331]
  421408:	str	x19, [x10, #56]
  42140c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421410:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  421414:	mov	w9, #0x1                   	// #1
  421418:	mov	w0, wzr
  42141c:	strb	w9, [x8, #3668]
  421420:	b	421e3c <wcrtomb@plt+0x1d03c>
  421424:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421428:	mov	w9, #0xffffffff            	// #-1
  42142c:	b	421804 <wcrtomb@plt+0x1ca04>
  421430:	ldr	x1, [x20]
  421434:	mov	w0, #0x2                   	// #2
  421438:	b	421e34 <wcrtomb@plt+0x1d034>
  42143c:	mov	w0, wzr
  421440:	str	wzr, [x20, #40]
  421444:	b	421e3c <wcrtomb@plt+0x1d03c>
  421448:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  42144c:	mov	w9, #0x1                   	// #1
  421450:	mov	w0, wzr
  421454:	strb	w9, [x8, #328]
  421458:	b	421e3c <wcrtomb@plt+0x1d03c>
  42145c:	mov	x0, x19
  421460:	bl	4184c4 <wcrtomb@plt+0x136c4>
  421464:	b	421e38 <wcrtomb@plt+0x1d038>
  421468:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  42146c:	mov	w0, wzr
  421470:	strb	wzr, [x8, #65]
  421474:	b	421e3c <wcrtomb@plt+0x1d03c>
  421478:	ldr	x1, [x20]
  42147c:	mov	w0, wzr
  421480:	b	421e34 <wcrtomb@plt+0x1d034>
  421484:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421488:	mov	w9, #0x1                   	// #1
  42148c:	b	421e94 <wcrtomb@plt+0x1d094>
  421490:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421494:	ldr	x9, [x8, #104]
  421498:	cbnz	x9, 4220a8 <wcrtomb@plt+0x1d2a8>
  42149c:	mov	w0, wzr
  4214a0:	str	x19, [x8, #104]
  4214a4:	b	421e3c <wcrtomb@plt+0x1d03c>
  4214a8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4214ac:	mov	w0, wzr
  4214b0:	str	wzr, [x8, #3656]
  4214b4:	b	421e3c <wcrtomb@plt+0x1d03c>
  4214b8:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x14808>
  4214bc:	add	x0, x0, #0xc64
  4214c0:	b	421e24 <wcrtomb@plt+0x1d024>
  4214c4:	mov	w0, #0x9                   	// #9
  4214c8:	b	421e00 <wcrtomb@plt+0x1d000>
  4214cc:	cbz	x19, 421efc <wcrtomb@plt+0x1d0fc>
  4214d0:	mov	x0, x19
  4214d4:	bl	41fa84 <wcrtomb@plt+0x1ac84>
  4214d8:	adrp	x1, 422000 <wcrtomb@plt+0x1d200>
  4214dc:	add	x1, x1, #0xc78
  4214e0:	bl	404420 <signal@plt>
  4214e4:	b	421e38 <wcrtomb@plt+0x1d038>
  4214e8:	add	x1, sp, #0x38
  4214ec:	mov	w2, #0xa                   	// #10
  4214f0:	mov	x0, x19
  4214f4:	bl	404160 <strtoul@plt>
  4214f8:	ldr	x8, [sp, #56]
  4214fc:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  421500:	str	w0, [x9, #268]
  421504:	ldrb	w8, [x8]
  421508:	cbz	w8, 421e38 <wcrtomb@plt+0x1d038>
  42150c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421510:	ldr	x8, [x8, #496]
  421514:	cbz	x8, 42151c <wcrtomb@plt+0x1c71c>
  421518:	blr	x8
  42151c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  421520:	add	x1, x1, #0x6d5
  421524:	b	4220c0 <wcrtomb@plt+0x1d2c0>
  421528:	mov	w0, #0x6                   	// #6
  42152c:	b	421e00 <wcrtomb@plt+0x1d000>
  421530:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421534:	mov	w9, #0x1                   	// #1
  421538:	mov	w0, wzr
  42153c:	strb	w9, [x8, #504]
  421540:	b	421e3c <wcrtomb@plt+0x1d03c>
  421544:	mov	x0, x19
  421548:	bl	422ca8 <wcrtomb@plt+0x1dea8>
  42154c:	b	421e38 <wcrtomb@plt+0x1d038>
  421550:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  421554:	mov	w9, #0x2                   	// #2
  421558:	b	421658 <wcrtomb@plt+0x1c858>
  42155c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421560:	mov	w9, #0x1                   	// #1
  421564:	mov	w0, wzr
  421568:	strb	w9, [x8, #40]
  42156c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421570:	ldr	x1, [x20]
  421574:	mov	w0, #0x1                   	// #1
  421578:	bl	4226bc <wcrtomb@plt+0x1d8bc>
  42157c:	cbz	x19, 421f10 <wcrtomb@plt+0x1d110>
  421580:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x16808>
  421584:	add	x4, x4, #0x3ee
  421588:	add	x3, sp, #0x38
  42158c:	mov	w2, #0xa                   	// #10
  421590:	mov	x0, x19
  421594:	mov	x1, xzr
  421598:	bl	43aa40 <argp_parse@@Base+0xbd84>
  42159c:	cbnz	w0, 4221a8 <wcrtomb@plt+0x1d3a8>
  4215a0:	ldr	x8, [sp, #56]
  4215a4:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  4215a8:	str	x8, [x9, #248]
  4215ac:	b	421e3c <wcrtomb@plt+0x1d03c>
  4215b0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4215b4:	ldr	x5, [x8, #448]
  4215b8:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4215bc:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  4215c0:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x13808>
  4215c4:	add	x20, x20, #0x58
  4215c8:	add	x0, x0, #0x812
  4215cc:	add	x2, x2, #0x740
  4215d0:	mov	w4, #0x4                   	// #4
  4215d4:	mov	x1, x19
  4215d8:	mov	x3, x20
  4215dc:	bl	42bfcc <wcrtomb@plt+0x271cc>
  4215e0:	mov	x8, x0
  4215e4:	ldr	w8, [x20, x8, lsl #2]
  4215e8:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  4215ec:	mov	w0, wzr
  4215f0:	str	w8, [x9, #8]
  4215f4:	b	421e3c <wcrtomb@plt+0x1d03c>
  4215f8:	ldr	x1, [x20]
  4215fc:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0xf808>
  421600:	add	x0, x0, #0xa74
  421604:	b	421df4 <wcrtomb@plt+0x1cff4>
  421608:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42160c:	mov	w0, wzr
  421610:	strb	wzr, [x8, #3616]
  421614:	b	421e3c <wcrtomb@plt+0x1d03c>
  421618:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  42161c:	mov	w9, #0x1                   	// #1
  421620:	mov	w0, wzr
  421624:	strb	w9, [x8, #41]
  421628:	b	421e3c <wcrtomb@plt+0x1d03c>
  42162c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  421630:	adrp	x3, 46b000 <argp_program_version_hook@@Base+0x458>
  421634:	add	x1, x1, #0xd50
  421638:	add	x3, x3, #0x118
  42163c:	mov	x0, x20
  421640:	mov	x2, x19
  421644:	bl	422854 <wcrtomb@plt+0x1da54>
  421648:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42164c:	ldr	w9, [x8, #3640]
  421650:	cbnz	w9, 421e38 <wcrtomb@plt+0x1d038>
  421654:	mov	w9, #0x1                   	// #1
  421658:	mov	w0, wzr
  42165c:	str	w9, [x8, #3640]
  421660:	b	421e3c <wcrtomb@plt+0x1d03c>
  421664:	mov	w0, #0x1                   	// #1
  421668:	b	421e00 <wcrtomb@plt+0x1d000>
  42166c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421670:	mov	w9, #0x1                   	// #1
  421674:	mov	w0, wzr
  421678:	strb	w9, [x8, #65]
  42167c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421680:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  421684:	mov	w9, #0x1                   	// #1
  421688:	mov	w0, wzr
  42168c:	strb	w9, [x8, #3616]
  421690:	b	421e3c <wcrtomb@plt+0x1d03c>
  421694:	mov	w0, #0x7                   	// #7
  421698:	bl	422658 <wcrtomb@plt+0x1d858>
  42169c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4216a0:	ldr	w9, [x8, #132]
  4216a4:	mov	w0, wzr
  4216a8:	add	w9, w9, #0x1
  4216ac:	str	w9, [x8, #132]
  4216b0:	b	421e3c <wcrtomb@plt+0x1d03c>
  4216b4:	ldr	x1, [x20]
  4216b8:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x14808>
  4216bc:	add	x0, x0, #0xd86
  4216c0:	b	421df4 <wcrtomb@plt+0x1cff4>
  4216c4:	ldr	x1, [x20]
  4216c8:	mov	w0, #0x3                   	// #3
  4216cc:	b	421e34 <wcrtomb@plt+0x1d034>
  4216d0:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x14808>
  4216d4:	add	x0, x0, #0xc64
  4216d8:	bl	4229b8 <wcrtomb@plt+0x1dbb8>
  4216dc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4216e0:	mov	w9, #0x1                   	// #1
  4216e4:	mov	w0, wzr
  4216e8:	str	w9, [x8, #144]
  4216ec:	b	421e3c <wcrtomb@plt+0x1d03c>
  4216f0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4216f4:	mov	w0, wzr
  4216f8:	str	x19, [x8, #448]
  4216fc:	b	421e3c <wcrtomb@plt+0x1d03c>
  421700:	cbz	x19, 421f24 <wcrtomb@plt+0x1d124>
  421704:	ldrb	w8, [x19]
  421708:	cmp	w8, #0x2e
  42170c:	b.ne	421720 <wcrtomb@plt+0x1c920>  // b.any
  421710:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  421714:	add	x0, x0, #0x94a
  421718:	bl	408428 <wcrtomb@plt+0x3628>
  42171c:	add	x19, x19, #0x1
  421720:	add	x1, sp, #0x38
  421724:	mov	x0, x19
  421728:	mov	w2, wzr
  42172c:	bl	404160 <strtoul@plt>
  421730:	ldr	x8, [sp, #56]
  421734:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  421738:	str	w0, [x9, #344]
  42173c:	ldrb	w8, [x8]
  421740:	cbz	w8, 421e38 <wcrtomb@plt+0x1d038>
  421744:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421748:	ldr	x8, [x8, #496]
  42174c:	cbz	x8, 421754 <wcrtomb@plt+0x1c954>
  421750:	blr	x8
  421754:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  421758:	add	x1, x1, #0x76c
  42175c:	b	422124 <wcrtomb@plt+0x1d324>
  421760:	ldrb	w1, [x19]
  421764:	cbz	w1, 421e38 <wcrtomb@plt+0x1d038>
  421768:	add	x19, x19, #0x1
  42176c:	mov	x0, xzr
  421770:	mov	w2, wzr
  421774:	bl	438670 <argp_parse@@Base+0x99b4>
  421778:	ldrb	w1, [x19], #1
  42177c:	mov	w0, wzr
  421780:	cbnz	w1, 42176c <wcrtomb@plt+0x1c96c>
  421784:	b	421e3c <wcrtomb@plt+0x1d03c>
  421788:	ldr	x1, [x20]
  42178c:	mov	w0, #0x4                   	// #4
  421790:	bl	4226bc <wcrtomb@plt+0x1d8bc>
  421794:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421798:	mov	w9, #0x1                   	// #1
  42179c:	mov	w0, wzr
  4217a0:	strb	w9, [x8, #330]
  4217a4:	b	421e3c <wcrtomb@plt+0x1d03c>
  4217a8:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  4217ac:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4217b0:	ldr	x9, [x20, #336]
  4217b4:	ldr	x10, [x8, #2616]
  4217b8:	cmp	x9, x10
  4217bc:	b.ne	421ec8 <wcrtomb@plt+0x1d0c8>  // b.any
  4217c0:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  4217c4:	ldr	x0, [x21, #176]
  4217c8:	cbz	x0, 421f74 <wcrtomb@plt+0x1d174>
  4217cc:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4217d0:	movk	x10, #0xaaa, lsl #48
  4217d4:	cmp	x9, x10
  4217d8:	b.cs	421f80 <wcrtomb@plt+0x1d180>  // b.hs, b.nlast
  4217dc:	add	x9, x9, x9, lsr #1
  4217e0:	add	x9, x9, #0x1
  4217e4:	b	421fa0 <wcrtomb@plt+0x1d1a0>
  4217e8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4217ec:	mov	w9, #0x1                   	// #1
  4217f0:	mov	w0, wzr
  4217f4:	strb	w9, [x8, #456]
  4217f8:	b	421e3c <wcrtomb@plt+0x1d03c>
  4217fc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421800:	mov	w9, #0x1                   	// #1
  421804:	mov	w0, wzr
  421808:	str	w9, [x8, #100]
  42180c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421810:	mov	x0, x19
  421814:	bl	408428 <wcrtomb@plt+0x3628>
  421818:	b	421e38 <wcrtomb@plt+0x1d038>
  42181c:	mov	w0, wzr
  421820:	mov	w8, #0x1                   	// #1
  421824:	str	w8, [x20, #40]
  421828:	b	421e3c <wcrtomb@plt+0x1d03c>
  42182c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421830:	mov	w0, wzr
  421834:	str	x19, [x8, #136]
  421838:	b	421e3c <wcrtomb@plt+0x1d03c>
  42183c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421840:	mov	w9, #0x1                   	// #1
  421844:	mov	w0, wzr
  421848:	strb	w9, [x8, #64]
  42184c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421850:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x14808>
  421854:	add	x0, x0, #0xc64
  421858:	bl	4229b8 <wcrtomb@plt+0x1dbb8>
  42185c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421860:	mov	w9, #0x1                   	// #1
  421864:	b	421e10 <wcrtomb@plt+0x1d010>
  421868:	ldrb	w1, [x19]
  42186c:	cbz	w1, 421e38 <wcrtomb@plt+0x1d038>
  421870:	add	x19, x19, #0x1
  421874:	mov	w2, #0x1                   	// #1
  421878:	mov	x0, xzr
  42187c:	bl	438670 <argp_parse@@Base+0x99b4>
  421880:	ldrb	w1, [x19], #1
  421884:	mov	w0, wzr
  421888:	cbnz	w1, 421874 <wcrtomb@plt+0x1ca74>
  42188c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421890:	mov	w0, #0x3                   	// #3
  421894:	b	421e00 <wcrtomb@plt+0x1d000>
  421898:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  42189c:	mov	w9, #0x1                   	// #1
  4218a0:	str	w9, [x8, #460]
  4218a4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4218a8:	ldr	x8, [x8, #3632]
  4218ac:	tbz	x8, #63, 422064 <wcrtomb@plt+0x1d264>
  4218b0:	adrp	x8, 451000 <_obstack_memory_used@@Base+0x15808>
  4218b4:	adrp	x9, 451000 <_obstack_memory_used@@Base+0x15808>
  4218b8:	add	x8, x8, #0x720
  4218bc:	add	x9, x9, #0x712
  4218c0:	cmp	w21, #0x119
  4218c4:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4218c8:	csel	x1, x9, x8, eq  // eq = none
  4218cc:	add	x3, x3, #0xe28
  4218d0:	mov	x0, x20
  4218d4:	mov	x2, x19
  4218d8:	bl	422854 <wcrtomb@plt+0x1da54>
  4218dc:	ldr	x1, [x20]
  4218e0:	mov	w0, #0x3                   	// #3
  4218e4:	bl	4226bc <wcrtomb@plt+0x1d8bc>
  4218e8:	b	421e38 <wcrtomb@plt+0x1d038>
  4218ec:	ldr	x1, [x20]
  4218f0:	mov	x0, x19
  4218f4:	b	421df4 <wcrtomb@plt+0x1cff4>
  4218f8:	mov	w0, #0x2                   	// #2
  4218fc:	b	421e00 <wcrtomb@plt+0x1d000>
  421900:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421904:	mov	w9, #0x1                   	// #1
  421908:	mov	w0, wzr
  42190c:	strb	w9, [x8, #329]
  421910:	b	421e3c <wcrtomb@plt+0x1d03c>
  421914:	adrp	x4, 451000 <_obstack_memory_used@@Base+0x15808>
  421918:	add	x4, x4, #0x6b3
  42191c:	add	x1, sp, #0x8
  421920:	add	x3, sp, #0x38
  421924:	mov	w2, #0xa                   	// #10
  421928:	mov	x0, x19
  42192c:	bl	43aa40 <argp_parse@@Base+0xbd84>
  421930:	cbnz	w0, 4220e4 <wcrtomb@plt+0x1d2e4>
  421934:	ldr	x8, [sp, #8]
  421938:	cmp	x8, x19
  42193c:	b.ls	421958 <wcrtomb@plt+0x1cb58>  // b.plast
  421940:	ldurb	w1, [x8, #-1]
  421944:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  421948:	add	x0, x0, #0x6b3
  42194c:	mov	w2, #0xe                   	// #14
  421950:	bl	404b50 <memchr@plt>
  421954:	cbz	x0, 421f84 <wcrtomb@plt+0x1d184>
  421958:	ldr	d0, [sp, #56]
  42195c:	ucvtf	d0, d0
  421960:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421964:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  421968:	mov	w10, #0x1                   	// #1
  42196c:	mov	w0, wzr
  421970:	str	d0, [x8, #120]
  421974:	b	421a68 <wcrtomb@plt+0x1cc68>
  421978:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x16808>
  42197c:	add	x4, x4, #0x3ee
  421980:	add	x3, sp, #0x38
  421984:	mov	w2, #0xa                   	// #10
  421988:	mov	x0, x19
  42198c:	mov	x1, xzr
  421990:	bl	43aa40 <argp_parse@@Base+0xbd84>
  421994:	cbnz	w0, 4219c8 <wcrtomb@plt+0x1cbc8>
  421998:	ldr	x8, [sp, #56]
  42199c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  4219a0:	cmp	x8, w8, sxtw
  4219a4:	str	w8, [x9, #236]
  4219a8:	b.ne	4219c8 <wcrtomb@plt+0x1cbc8>  // b.any
  4219ac:	cmp	w8, #0x1
  4219b0:	b.lt	4219c8 <wcrtomb@plt+0x1cbc8>  // b.tstop
  4219b4:	lsl	x9, x8, #9
  4219b8:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  4219bc:	lsr	x8, x8, #55
  4219c0:	str	x9, [x10, #408]
  4219c4:	cbz	x8, 421e38 <wcrtomb@plt+0x1d038>
  4219c8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4219cc:	ldr	x8, [x8, #496]
  4219d0:	cbz	x8, 4219d8 <wcrtomb@plt+0x1cbd8>
  4219d4:	blr	x8
  4219d8:	mov	x0, x19
  4219dc:	bl	4398cc <argp_parse@@Base+0xac10>
  4219e0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  4219e4:	mov	x19, x0
  4219e8:	add	x1, x1, #0x69b
  4219ec:	mov	w2, #0x5                   	// #5
  4219f0:	mov	x0, xzr
  4219f4:	bl	404bd0 <dcgettext@plt>
  4219f8:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  4219fc:	mov	x4, x0
  421a00:	add	x2, x2, #0xe00
  421a04:	mov	w0, wzr
  421a08:	mov	w1, wzr
  421a0c:	mov	x3, x19
  421a10:	bl	4041d0 <error@plt>
  421a14:	b	4220dc <wcrtomb@plt+0x1d2dc>
  421a18:	cbz	x19, 421f38 <wcrtomb@plt+0x1d138>
  421a1c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  421a20:	ldr	x5, [x8, #448]
  421a24:	adrp	x20, 44f000 <_obstack_memory_used@@Base+0x13808>
  421a28:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  421a2c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x13808>
  421a30:	add	x20, x20, #0x720
  421a34:	add	x0, x0, #0x75b
  421a38:	add	x2, x2, #0x728
  421a3c:	mov	w4, #0x4                   	// #4
  421a40:	mov	x1, x19
  421a44:	mov	x3, x20
  421a48:	bl	42bfcc <wcrtomb@plt+0x271cc>
  421a4c:	ldr	w8, [x20, x0, lsl #2]
  421a50:	b	421f3c <wcrtomb@plt+0x1d13c>
  421a54:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421a58:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  421a5c:	mov	w10, #0x1                   	// #1
  421a60:	mov	w0, wzr
  421a64:	str	x19, [x8, #256]
  421a68:	strb	w10, [x9, #3660]
  421a6c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421a70:	mov	x0, x19
  421a74:	b	421e24 <wcrtomb@plt+0x1d024>
  421a78:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421a7c:	mov	w9, #0x1                   	// #1
  421a80:	mov	w0, wzr
  421a84:	strb	w9, [x8, #113]
  421a88:	b	421e3c <wcrtomb@plt+0x1d03c>
  421a8c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  421a90:	mov	w9, #0x1                   	// #1
  421a94:	mov	w0, wzr
  421a98:	str	w9, [x8, #3656]
  421a9c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421aa0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  421aa4:	mov	w9, #0x1                   	// #1
  421aa8:	mov	w0, wzr
  421aac:	strb	w9, [x8, #3660]
  421ab0:	b	421e3c <wcrtomb@plt+0x1d03c>
  421ab4:	ldr	x1, [x20]
  421ab8:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x12808>
  421abc:	add	x0, x0, #0xeec
  421ac0:	b	421df4 <wcrtomb@plt+0x1cff4>
  421ac4:	ldr	x1, [x20]
  421ac8:	mov	w0, #0x5                   	// #5
  421acc:	bl	4226bc <wcrtomb@plt+0x1d8bc>
  421ad0:	mov	x0, x19
  421ad4:	bl	41b0f8 <wcrtomb@plt+0x162f8>
  421ad8:	b	421e38 <wcrtomb@plt+0x1d038>
  421adc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421ae0:	mov	w9, #0x1                   	// #1
  421ae4:	mov	w0, wzr
  421ae8:	strb	w9, [x8, #441]
  421aec:	b	421e3c <wcrtomb@plt+0x1d03c>
  421af0:	mov	w0, #0x4                   	// #4
  421af4:	b	421e00 <wcrtomb@plt+0x1d000>
  421af8:	mov	w0, #0x5                   	// #5
  421afc:	b	421e00 <wcrtomb@plt+0x1d000>
  421b00:	adrp	x1, 46b000 <argp_program_version_hook@@Base+0x458>
  421b04:	add	x1, x1, #0x10
  421b08:	mov	x0, x19
  421b0c:	bl	422a50 <wcrtomb@plt+0x1dc50>
  421b10:	cmn	x0, #0x1
  421b14:	b.eq	421f4c <wcrtomb@plt+0x1d14c>  // b.none
  421b18:	mov	x8, x0
  421b1c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  421b20:	mov	w0, wzr
  421b24:	str	w8, [x9, #192]
  421b28:	b	421e3c <wcrtomb@plt+0x1d03c>
  421b2c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421b30:	mov	w9, #0x1                   	// #1
  421b34:	mov	w0, wzr
  421b38:	strb	w9, [x8, #264]
  421b3c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421b40:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421b44:	mov	w9, #0x1                   	// #1
  421b48:	mov	w0, wzr
  421b4c:	strb	w9, [x8, #400]
  421b50:	b	421e3c <wcrtomb@plt+0x1d03c>
  421b54:	ldr	x1, [x20]
  421b58:	mov	w0, #0x2                   	// #2
  421b5c:	bl	4226bc <wcrtomb@plt+0x1d8bc>
  421b60:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421b64:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  421b68:	mov	w10, #0x1                   	// #1
  421b6c:	str	x19, [x8, #320]
  421b70:	str	w10, [x9, #460]
  421b74:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  421b78:	mov	w9, #0x1                   	// #1
  421b7c:	mov	w0, wzr
  421b80:	strb	w9, [x8, #3617]
  421b84:	b	421e3c <wcrtomb@plt+0x1d03c>
  421b88:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421b8c:	mov	w9, #0x1                   	// #1
  421b90:	mov	w0, wzr
  421b94:	strb	w9, [x8, #161]
  421b98:	b	421e3c <wcrtomb@plt+0x1d03c>
  421b9c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  421ba0:	mov	w9, #0x1                   	// #1
  421ba4:	mov	w0, wzr
  421ba8:	strb	w9, [x8, #2624]
  421bac:	b	421e3c <wcrtomb@plt+0x1d03c>
  421bb0:	ldr	x1, [x20]
  421bb4:	mov	w0, #0x8                   	// #8
  421bb8:	bl	4226bc <wcrtomb@plt+0x1d8bc>
  421bbc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421bc0:	mov	w9, #0x1                   	// #1
  421bc4:	mov	w0, wzr
  421bc8:	strb	w9, [x8, #440]
  421bcc:	b	421e3c <wcrtomb@plt+0x1d03c>
  421bd0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421bd4:	mov	w9, #0x1                   	// #1
  421bd8:	mov	w0, wzr
  421bdc:	strb	w9, [x8, #80]
  421be0:	b	421e3c <wcrtomb@plt+0x1d03c>
  421be4:	ldr	x1, [x20]
  421be8:	mov	w0, #0x4                   	// #4
  421bec:	b	421e34 <wcrtomb@plt+0x1d034>
  421bf0:	ldr	x1, [x20]
  421bf4:	mov	w0, #0x6                   	// #6
  421bf8:	bl	4226bc <wcrtomb@plt+0x1d8bc>
  421bfc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421c00:	mov	w9, #0x1                   	// #1
  421c04:	mov	w0, wzr
  421c08:	strb	w9, [x8, #128]
  421c0c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421c10:	mov	x0, x19
  421c14:	bl	4344bc <argp_parse@@Base+0x5800>
  421c18:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421c1c:	str	x0, [x8, #88]
  421c20:	cbz	x0, 42210c <wcrtomb@plt+0x1d30c>
  421c24:	mov	w0, wzr
  421c28:	bl	404c90 <umask@plt>
  421c2c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  421c30:	str	w0, [x8, #3664]
  421c34:	bl	404c90 <umask@plt>
  421c38:	b	421e38 <wcrtomb@plt+0x1d038>
  421c3c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421c40:	mov	w9, #0x1                   	// #1
  421c44:	mov	w0, wzr
  421c48:	strb	w9, [x8, #112]
  421c4c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421c50:	ldr	x1, [x20]
  421c54:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0xf808>
  421c58:	add	x0, x0, #0xa94
  421c5c:	b	421df4 <wcrtomb@plt+0x1cff4>
  421c60:	mov	w8, #0x1                   	// #1
  421c64:	mov	w0, wzr
  421c68:	strb	w8, [x20, #16]
  421c6c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421c70:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  421c74:	mov	w9, #0x1                   	// #1
  421c78:	mov	w0, wzr
  421c7c:	strb	w9, [x8, #3661]
  421c80:	b	421e3c <wcrtomb@plt+0x1d03c>
  421c84:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421c88:	mov	w0, wzr
  421c8c:	str	x19, [x8, #296]
  421c90:	b	421e3c <wcrtomb@plt+0x1d03c>
  421c94:	ldr	x1, [x20]
  421c98:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x14808>
  421c9c:	add	x0, x0, #0xe16
  421ca0:	b	421df4 <wcrtomb@plt+0x1cff4>
  421ca4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421ca8:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  421cac:	ldr	w10, [x8, #132]
  421cb0:	ldr	w11, [x9, #152]
  421cb4:	mov	w12, #0x3000                	// #12288
  421cb8:	movk	w12, #0x58, lsl #16
  421cbc:	add	w10, w10, #0x1
  421cc0:	orr	w11, w11, w12
  421cc4:	mov	w0, wzr
  421cc8:	str	w10, [x8, #132]
  421ccc:	str	w11, [x9, #152]
  421cd0:	b	421e3c <wcrtomb@plt+0x1d03c>
  421cd4:	adrp	x4, 451000 <_obstack_memory_used@@Base+0x15808>
  421cd8:	add	x4, x4, #0x6b3
  421cdc:	add	x3, sp, #0x38
  421ce0:	mov	w2, #0xa                   	// #10
  421ce4:	mov	x0, x19
  421ce8:	mov	x1, xzr
  421cec:	bl	43aa40 <argp_parse@@Base+0xbd84>
  421cf0:	cbnz	w0, 422144 <wcrtomb@plt+0x1d344>
  421cf4:	ldr	x8, [sp, #56]
  421cf8:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  421cfc:	tst	x8, #0x1ff
  421d00:	str	x8, [x9, #408]
  421d04:	b.ne	42216c <wcrtomb@plt+0x1d36c>  // b.any
  421d08:	lsr	x8, x8, #9
  421d0c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  421d10:	mov	w0, wzr
  421d14:	str	w8, [x9, #236]
  421d18:	b	421e3c <wcrtomb@plt+0x1d03c>
  421d1c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421d20:	mov	w9, #0x1                   	// #1
  421d24:	mov	w0, wzr
  421d28:	strb	w9, [x8, #184]
  421d2c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421d30:	ldr	x1, [x20]
  421d34:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0xf808>
  421d38:	add	x0, x0, #0xa83
  421d3c:	b	421df4 <wcrtomb@plt+0x1cff4>
  421d40:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  421d44:	mov	w9, #0x1                   	// #1
  421d48:	mov	w0, wzr
  421d4c:	strb	w9, [x8, #3669]
  421d50:	b	421e3c <wcrtomb@plt+0x1d03c>
  421d54:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421d58:	mov	w9, #0x1                   	// #1
  421d5c:	strb	w9, [x8, #245]
  421d60:	cbz	x19, 421e38 <wcrtomb@plt+0x1d038>
  421d64:	mov	w0, wzr
  421d68:	str	x19, [x20, #32]
  421d6c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421d70:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x19808>
  421d74:	ldr	x1, [x8, #1080]
  421d78:	cbz	x1, 421da4 <wcrtomb@plt+0x1cfa4>
  421d7c:	adrp	x21, 455000 <_obstack_memory_used@@Base+0x19808>
  421d80:	mov	x20, xzr
  421d84:	add	x21, x21, #0x438
  421d88:	mov	x0, x19
  421d8c:	bl	404900 <strcmp@plt>
  421d90:	cbz	w0, 421eac <wcrtomb@plt+0x1d0ac>
  421d94:	add	x8, x21, x20, lsl #3
  421d98:	ldr	x1, [x8, #8]
  421d9c:	add	x20, x20, #0x1
  421da0:	cbnz	x1, 421d88 <wcrtomb@plt+0x1cf88>
  421da4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421da8:	ldr	x8, [x8, #496]
  421dac:	cbz	x8, 421db4 <wcrtomb@plt+0x1cfb4>
  421db0:	blr	x8
  421db4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  421db8:	add	x1, x1, #0xa2a
  421dbc:	mov	w2, #0x5                   	// #5
  421dc0:	mov	x0, xzr
  421dc4:	bl	404bd0 <dcgettext@plt>
  421dc8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  421dcc:	ldr	x4, [x8, #3032]
  421dd0:	mov	x2, x0
  421dd4:	mov	w0, wzr
  421dd8:	mov	w1, wzr
  421ddc:	mov	x3, x19
  421de0:	bl	4041d0 <error@plt>
  421de4:	bl	40d698 <wcrtomb@plt+0x8898>
  421de8:	ldr	x1, [x20]
  421dec:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0xf808>
  421df0:	add	x0, x0, #0xa8d
  421df4:	bl	422750 <wcrtomb@plt+0x1d950>
  421df8:	b	421e38 <wcrtomb@plt+0x1d038>
  421dfc:	mov	w0, #0x8                   	// #8
  421e00:	bl	422658 <wcrtomb@plt+0x1d858>
  421e04:	b	421e38 <wcrtomb@plt+0x1d038>
  421e08:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421e0c:	mov	w9, #0xffffffff            	// #-1
  421e10:	mov	w0, wzr
  421e14:	str	w9, [x8, #384]
  421e18:	b	421e3c <wcrtomb@plt+0x1d03c>
  421e1c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x14808>
  421e20:	add	x0, x0, #0xbbc
  421e24:	bl	4229b8 <wcrtomb@plt+0x1dbb8>
  421e28:	b	421e38 <wcrtomb@plt+0x1d038>
  421e2c:	ldr	x1, [x20]
  421e30:	mov	w0, #0x6                   	// #6
  421e34:	bl	4227e8 <wcrtomb@plt+0x1d9e8>
  421e38:	mov	w0, wzr
  421e3c:	ldp	x20, x19, [sp, #224]
  421e40:	ldp	x22, x21, [sp, #208]
  421e44:	ldp	x24, x23, [sp, #192]
  421e48:	ldp	x26, x25, [sp, #176]
  421e4c:	ldp	x28, x27, [sp, #160]
  421e50:	ldp	x29, x30, [sp, #144]
  421e54:	add	sp, sp, #0xf0
  421e58:	ret
  421e5c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421e60:	mov	w9, #0xffffffff            	// #-1
  421e64:	mov	w0, wzr
  421e68:	str	w9, [x8, #472]
  421e6c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421e70:	mov	x0, x19
  421e74:	bl	418080 <wcrtomb@plt+0x13280>
  421e78:	b	421e38 <wcrtomb@plt+0x1d038>
  421e7c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421e80:	mov	w0, wzr
  421e84:	strb	wzr, [x8, #456]
  421e88:	b	421e3c <wcrtomb@plt+0x1d03c>
  421e8c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421e90:	mov	w9, #0xffffffff            	// #-1
  421e94:	mov	w0, wzr
  421e98:	str	w9, [x8, #468]
  421e9c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421ea0:	mov	x0, x19
  421ea4:	bl	42461c <wcrtomb@plt+0x1f81c>
  421ea8:	b	421e38 <wcrtomb@plt+0x1d038>
  421eac:	mov	x0, xzr
  421eb0:	mov	w1, w20
  421eb4:	bl	438658 <argp_parse@@Base+0x999c>
  421eb8:	b	421e38 <wcrtomb@plt+0x1d038>
  421ebc:	mov	x0, x19
  421ec0:	bl	41a218 <wcrtomb@plt+0x15418>
  421ec4:	b	421e38 <wcrtomb@plt+0x1d038>
  421ec8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421ecc:	ldr	x8, [x8, #176]
  421ed0:	b	421fb8 <wcrtomb@plt+0x1d1b8>
  421ed4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421ed8:	ldr	x0, [x8, #72]
  421edc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421ee0:	mov	w9, #0xffffffff            	// #-1
  421ee4:	str	w9, [x8, #272]
  421ee8:	cbz	x0, 421e3c <wcrtomb@plt+0x1d03c>
  421eec:	adrp	x1, 46b000 <argp_program_version_hook@@Base+0x458>
  421ef0:	add	x1, x1, #0x110
  421ef4:	bl	41a09c <wcrtomb@plt+0x1529c>
  421ef8:	b	421e38 <wcrtomb@plt+0x1d038>
  421efc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421f00:	mov	w9, #0x1                   	// #1
  421f04:	mov	w0, wzr
  421f08:	strb	w9, [x8, #185]
  421f0c:	b	421e3c <wcrtomb@plt+0x1d03c>
  421f10:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421f14:	mov	w9, #0x1                   	// #1
  421f18:	mov	w0, wzr
  421f1c:	str	x9, [x8, #248]
  421f20:	b	421e3c <wcrtomb@plt+0x1d03c>
  421f24:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421f28:	mov	w9, #0xa                   	// #10
  421f2c:	mov	w0, wzr
  421f30:	str	w9, [x8, #344]
  421f34:	b	421e3c <wcrtomb@plt+0x1d03c>
  421f38:	mov	w8, #0x1                   	// #1
  421f3c:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  421f40:	mov	w0, wzr
  421f44:	str	w8, [x9, #44]
  421f48:	b	421e3c <wcrtomb@plt+0x1d03c>
  421f4c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421f50:	ldr	x0, [x8, #16]
  421f54:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  421f58:	mov	w9, #0xffffffff            	// #-1
  421f5c:	str	w9, [x8, #192]
  421f60:	cbz	x0, 421e3c <wcrtomb@plt+0x1d03c>
  421f64:	adrp	x1, 46b000 <argp_program_version_hook@@Base+0x458>
  421f68:	add	x1, x1, #0xc0
  421f6c:	bl	41a150 <wcrtomb@plt+0x15350>
  421f70:	b	421e38 <wcrtomb@plt+0x1d038>
  421f74:	cbz	x9, 421f9c <wcrtomb@plt+0x1d19c>
  421f78:	lsr	x10, x9, #60
  421f7c:	cbz	x10, 421fa0 <wcrtomb@plt+0x1d1a0>
  421f80:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  421f84:	ldr	d0, [sp, #56]
  421f88:	mov	x8, #0x4090000000000000    	// #4652218415073722368
  421f8c:	fmov	d1, x8
  421f90:	ucvtf	d0, d0
  421f94:	fmul	d0, d0, d1
  421f98:	b	421960 <wcrtomb@plt+0x1cb60>
  421f9c:	mov	w9, #0x10                  	// #16
  421fa0:	lsl	x1, x9, #3
  421fa4:	str	x9, [x8, #2616]
  421fa8:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  421fac:	ldr	x9, [x20, #336]
  421fb0:	mov	x8, x0
  421fb4:	str	x0, [x21, #176]
  421fb8:	add	x10, x9, #0x1
  421fbc:	mov	w0, wzr
  421fc0:	str	x10, [x20, #336]
  421fc4:	str	x19, [x8, x9, lsl #3]
  421fc8:	b	421e3c <wcrtomb@plt+0x1d03c>
  421fcc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  421fd0:	mov	x22, x2
  421fd4:	add	x1, x1, #0x83e
  421fd8:	mov	w2, #0x5                   	// #5
  421fdc:	mov	x0, xzr
  421fe0:	bl	404bd0 <dcgettext@plt>
  421fe4:	mov	x1, x0
  421fe8:	mov	x0, x22
  421fec:	bl	42d1b4 <argp_error@@Base>
  421ff0:	mov	w0, #0x40                  	// #64
  421ff4:	bl	4041a0 <exit@plt>
  421ff8:	bl	413d68 <wcrtomb@plt+0xef68>
  421ffc:	bl	430314 <argp_parse@@Base+0x1658>
  422000:	b	42202c <wcrtomb@plt+0x1d22c>
  422004:	bl	422b8c <wcrtomb@plt+0x1dd8c>
  422008:	mov	x19, x0
  42200c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  422010:	add	x1, x1, #0x893
  422014:	mov	w0, #0x1                   	// #1
  422018:	mov	x2, x19
  42201c:	bl	4045d0 <__printf_chk@plt>
  422020:	bl	430314 <argp_parse@@Base+0x1658>
  422024:	mov	x0, x19
  422028:	bl	4049b0 <free@plt>
  42202c:	mov	w0, wzr
  422030:	bl	4041a0 <exit@plt>
  422034:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  422038:	add	x1, x1, #0x88e
  42203c:	mov	w2, #0x5                   	// #5
  422040:	mov	x0, xzr
  422044:	bl	404bd0 <dcgettext@plt>
  422048:	ldr	x8, [x20]
  42204c:	mov	x2, x0
  422050:	mov	w0, wzr
  422054:	mov	w1, wzr
  422058:	ldr	x3, [x8, #8]
  42205c:	bl	4041d0 <error@plt>
  422060:	b	421ff0 <wcrtomb@plt+0x1d1f0>
  422064:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  422068:	ldr	x8, [x8, #496]
  42206c:	cbz	x8, 422074 <wcrtomb@plt+0x1d274>
  422070:	blr	x8
  422074:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  422078:	add	x1, x1, #0x6f5
  42207c:	b	4220c0 <wcrtomb@plt+0x1d2c0>
  422080:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  422084:	ldr	x8, [x8, #496]
  422088:	cbz	x8, 422090 <wcrtomb@plt+0x1d290>
  42208c:	blr	x8
  422090:	mov	x0, x19
  422094:	bl	4398cc <argp_parse@@Base+0xac10>
  422098:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  42209c:	mov	x19, x0
  4220a0:	add	x1, x1, #0x7f7
  4220a4:	b	4219ec <wcrtomb@plt+0x1cbec>
  4220a8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4220ac:	ldr	x8, [x8, #496]
  4220b0:	cbz	x8, 4220b8 <wcrtomb@plt+0x1d2b8>
  4220b4:	blr	x8
  4220b8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  4220bc:	add	x1, x1, #0x819
  4220c0:	mov	w2, #0x5                   	// #5
  4220c4:	mov	x0, xzr
  4220c8:	bl	404bd0 <dcgettext@plt>
  4220cc:	mov	x2, x0
  4220d0:	mov	w0, wzr
  4220d4:	mov	w1, wzr
  4220d8:	bl	4041d0 <error@plt>
  4220dc:	mov	w0, #0x2                   	// #2
  4220e0:	bl	41f888 <wcrtomb@plt+0x1aa88>
  4220e4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4220e8:	ldr	x8, [x8, #496]
  4220ec:	cbz	x8, 4220f4 <wcrtomb@plt+0x1d2f4>
  4220f0:	blr	x8
  4220f4:	mov	x0, x19
  4220f8:	bl	4398cc <argp_parse@@Base+0xac10>
  4220fc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  422100:	mov	x19, x0
  422104:	add	x1, x1, #0x6c1
  422108:	b	4219ec <wcrtomb@plt+0x1cbec>
  42210c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  422110:	ldr	x8, [x8, #496]
  422114:	cbz	x8, 42211c <wcrtomb@plt+0x1d31c>
  422118:	blr	x8
  42211c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  422120:	add	x1, x1, #0x791
  422124:	mov	w2, #0x5                   	// #5
  422128:	mov	x0, xzr
  42212c:	bl	404bd0 <dcgettext@plt>
  422130:	mov	x2, x0
  422134:	mov	w0, wzr
  422138:	mov	w1, wzr
  42213c:	bl	4041d0 <error@plt>
  422140:	bl	40d698 <wcrtomb@plt+0x8898>
  422144:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  422148:	ldr	x8, [x8, #496]
  42214c:	cbz	x8, 422154 <wcrtomb@plt+0x1d354>
  422150:	blr	x8
  422154:	mov	x0, x19
  422158:	bl	4398cc <argp_parse@@Base+0xac10>
  42215c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  422160:	mov	x19, x0
  422164:	add	x1, x1, #0x7bd
  422168:	b	4219ec <wcrtomb@plt+0x1cbec>
  42216c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  422170:	ldr	x8, [x8, #496]
  422174:	cbz	x8, 42217c <wcrtomb@plt+0x1d37c>
  422178:	blr	x8
  42217c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  422180:	add	x1, x1, #0x7d1
  422184:	mov	w2, #0x5                   	// #5
  422188:	mov	x0, xzr
  42218c:	bl	404bd0 <dcgettext@plt>
  422190:	mov	x2, x0
  422194:	mov	w3, #0x200                 	// #512
  422198:	mov	w0, wzr
  42219c:	mov	w1, wzr
  4221a0:	bl	4041d0 <error@plt>
  4221a4:	b	4220dc <wcrtomb@plt+0x1d2dc>
  4221a8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4221ac:	ldr	x8, [x8, #496]
  4221b0:	cbz	x8, 4221b8 <wcrtomb@plt+0x1d3b8>
  4221b4:	blr	x8
  4221b8:	mov	x0, x19
  4221bc:	bl	4398cc <argp_parse@@Base+0xac10>
  4221c0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  4221c4:	mov	x19, x0
  4221c8:	add	x1, x1, #0x7ae
  4221cc:	mov	w2, #0x5                   	// #5
  4221d0:	mov	x0, xzr
  4221d4:	bl	404bd0 <dcgettext@plt>
  4221d8:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  4221dc:	mov	x4, x0
  4221e0:	add	x2, x2, #0xe00
  4221e4:	b	421dd4 <wcrtomb@plt+0x1cfd4>
  4221e8:	sub	sp, sp, #0xa0
  4221ec:	stp	x20, x19, [sp, #144]
  4221f0:	cmp	w0, #0x113
  4221f4:	mov	x19, x1
  4221f8:	stp	x29, x30, [sp, #96]
  4221fc:	stp	x24, x23, [sp, #112]
  422200:	stp	x22, x21, [sp, #128]
  422204:	add	x29, sp, #0x60
  422208:	b.le	4223ac <wcrtomb@plt+0x1d5ac>
  42220c:	cmp	w0, #0x115
  422210:	b.le	422414 <wcrtomb@plt+0x1d614>
  422214:	cmp	w0, #0x116
  422218:	b.eq	422444 <wcrtomb@plt+0x1d644>  // b.none
  42221c:	cmp	w0, #0x14f
  422220:	b.eq	422464 <wcrtomb@plt+0x1d664>  // b.none
  422224:	mov	w8, #0x4                   	// #4
  422228:	movk	w8, #0x200, lsl #16
  42222c:	cmp	w0, w8
  422230:	b.ne	42263c <wcrtomb@plt+0x1d83c>  // b.any
  422234:	adrp	x3, 43a000 <argp_parse@@Base+0xb344>
  422238:	adrp	x4, 404000 <mbrtowc@plt-0xe0>
  42223c:	add	x3, x3, #0x7a4
  422240:	add	x4, x4, #0x9b0
  422244:	add	x0, sp, #0x8
  422248:	mov	x1, xzr
  42224c:	mov	x2, xzr
  422250:	bl	43b4e0 <_obstack_begin@@Base>
  422254:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  422258:	add	x1, x1, #0xaee
  42225c:	mov	w2, #0x5                   	// #5
  422260:	mov	x0, xzr
  422264:	bl	404bd0 <dcgettext@plt>
  422268:	mov	x20, x0
  42226c:	bl	404170 <strlen@plt>
  422270:	mov	x19, x0
  422274:	ldp	x0, x8, [sp, #32]
  422278:	sub	x8, x8, x0
  42227c:	cmp	x8, x19
  422280:	b.cs	422294 <wcrtomb@plt+0x1d494>  // b.hs, b.nlast
  422284:	add	x0, sp, #0x8
  422288:	mov	x1, x19
  42228c:	bl	43b5e8 <_obstack_newchunk@@Base>
  422290:	ldr	x0, [sp, #32]
  422294:	mov	x1, x20
  422298:	mov	x2, x19
  42229c:	bl	4040f0 <memcpy@plt>
  4222a0:	ldp	x8, x9, [sp, #32]
  4222a4:	add	x8, x8, x19
  4222a8:	sub	x9, x9, x8
  4222ac:	cmp	x9, #0x1
  4222b0:	str	x8, [sp, #32]
  4222b4:	b.hi	4222c8 <wcrtomb@plt+0x1d4c8>  // b.pmore
  4222b8:	add	x0, sp, #0x8
  4222bc:	mov	w1, #0x2                   	// #2
  4222c0:	bl	43b5e8 <_obstack_newchunk@@Base>
  4222c4:	ldr	x8, [sp, #32]
  4222c8:	mov	w9, #0xa0a                 	// #2570
  4222cc:	strh	w9, [x8]
  4222d0:	ldr	x8, [sp, #32]
  4222d4:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x19808>
  4222d8:	ldr	x19, [x9, #1080]
  4222dc:	add	x8, x8, #0x2
  4222e0:	str	x8, [sp, #32]
  4222e4:	cbz	x19, 422484 <wcrtomb@plt+0x1d684>
  4222e8:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x19808>
  4222ec:	add	x9, x9, #0x438
  4222f0:	mov	w22, #0x2020                	// #8224
  4222f4:	add	x23, x9, #0x8
  4222f8:	mov	w24, #0xa                   	// #10
  4222fc:	ldr	x9, [sp, #40]
  422300:	sub	x9, x9, x8
  422304:	cmp	x9, #0x1
  422308:	b.hi	42231c <wcrtomb@plt+0x1d51c>  // b.pmore
  42230c:	add	x0, sp, #0x8
  422310:	mov	w1, #0x2                   	// #2
  422314:	bl	43b5e8 <_obstack_newchunk@@Base>
  422318:	ldr	x8, [sp, #32]
  42231c:	strh	w22, [x8]
  422320:	ldr	x8, [sp, #32]
  422324:	mov	x0, x19
  422328:	add	x21, x8, #0x2
  42232c:	str	x21, [sp, #32]
  422330:	bl	404170 <strlen@plt>
  422334:	ldr	x8, [sp, #40]
  422338:	mov	x20, x0
  42233c:	sub	x8, x8, x21
  422340:	cmp	x8, x0
  422344:	b.cs	422358 <wcrtomb@plt+0x1d558>  // b.hs, b.nlast
  422348:	add	x0, sp, #0x8
  42234c:	mov	x1, x20
  422350:	bl	43b5e8 <_obstack_newchunk@@Base>
  422354:	ldr	x21, [sp, #32]
  422358:	mov	x0, x21
  42235c:	mov	x1, x19
  422360:	mov	x2, x20
  422364:	bl	4040f0 <memcpy@plt>
  422368:	ldp	x8, x9, [sp, #32]
  42236c:	add	x8, x8, x20
  422370:	cmp	x9, x8
  422374:	str	x8, [sp, #32]
  422378:	b.ne	42238c <wcrtomb@plt+0x1d58c>  // b.any
  42237c:	add	x0, sp, #0x8
  422380:	mov	w1, #0x1                   	// #1
  422384:	bl	43b5e8 <_obstack_newchunk@@Base>
  422388:	ldr	x8, [sp, #32]
  42238c:	add	x9, x8, #0x1
  422390:	str	x9, [sp, #32]
  422394:	strb	w24, [x8]
  422398:	ldr	x19, [x23]
  42239c:	cbz	x19, 422484 <wcrtomb@plt+0x1d684>
  4223a0:	ldr	x8, [sp, #32]
  4223a4:	add	x23, x23, #0x8
  4223a8:	b	4222fc <wcrtomb@plt+0x1d4fc>
  4223ac:	cmp	w0, #0x69
  4223b0:	b.gt	4223e4 <wcrtomb@plt+0x1d5e4>
  4223b4:	cmp	w0, #0x4a
  4223b8:	b.eq	4225d8 <wcrtomb@plt+0x1d7d8>  // b.none
  4223bc:	cmp	w0, #0x5a
  4223c0:	b.ne	42263c <wcrtomb@plt+0x1d83c>  // b.any
  4223c4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  4223c8:	add	x1, x1, #0xad0
  4223cc:	mov	w2, #0x5                   	// #5
  4223d0:	mov	x0, xzr
  4223d4:	bl	404bd0 <dcgettext@plt>
  4223d8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x14808>
  4223dc:	add	x1, x1, #0xd86
  4223e0:	b	422634 <wcrtomb@plt+0x1d834>
  4223e4:	cmp	w0, #0x6a
  4223e8:	b.eq	4225f8 <wcrtomb@plt+0x1d7f8>  // b.none
  4223ec:	cmp	w0, #0x7a
  4223f0:	b.ne	42263c <wcrtomb@plt+0x1d83c>  // b.any
  4223f4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  4223f8:	add	x1, x1, #0xad0
  4223fc:	mov	w2, #0x5                   	// #5
  422400:	mov	x0, xzr
  422404:	bl	404bd0 <dcgettext@plt>
  422408:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x14808>
  42240c:	add	x1, x1, #0xe16
  422410:	b	422634 <wcrtomb@plt+0x1d834>
  422414:	cmp	w0, #0x114
  422418:	b.eq	422618 <wcrtomb@plt+0x1d818>  // b.none
  42241c:	cmp	w0, #0x115
  422420:	b.ne	42263c <wcrtomb@plt+0x1d83c>  // b.any
  422424:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  422428:	add	x1, x1, #0xad0
  42242c:	mov	w2, #0x5                   	// #5
  422430:	mov	x0, xzr
  422434:	bl	404bd0 <dcgettext@plt>
  422438:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  42243c:	add	x1, x1, #0xa83
  422440:	b	422634 <wcrtomb@plt+0x1d834>
  422444:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  422448:	add	x1, x1, #0xad0
  42244c:	mov	w2, #0x5                   	// #5
  422450:	mov	x0, xzr
  422454:	bl	404bd0 <dcgettext@plt>
  422458:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  42245c:	add	x1, x1, #0xa8d
  422460:	b	422634 <wcrtomb@plt+0x1d834>
  422464:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  422468:	add	x1, x1, #0xad0
  42246c:	mov	w2, #0x5                   	// #5
  422470:	mov	x0, xzr
  422474:	bl	404bd0 <dcgettext@plt>
  422478:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  42247c:	add	x1, x1, #0xa94
  422480:	b	422634 <wcrtomb@plt+0x1d834>
  422484:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  422488:	add	x1, x1, #0xb22
  42248c:	mov	w2, #0x5                   	// #5
  422490:	mov	x0, xzr
  422494:	bl	404bd0 <dcgettext@plt>
  422498:	mov	x19, x0
  42249c:	bl	404170 <strlen@plt>
  4224a0:	mov	x20, x0
  4224a4:	ldp	x0, x8, [sp, #32]
  4224a8:	sub	x8, x8, x0
  4224ac:	cmp	x8, x20
  4224b0:	b.cs	4224c4 <wcrtomb@plt+0x1d6c4>  // b.hs, b.nlast
  4224b4:	add	x0, sp, #0x8
  4224b8:	mov	x1, x20
  4224bc:	bl	43b5e8 <_obstack_newchunk@@Base>
  4224c0:	ldr	x0, [sp, #32]
  4224c4:	mov	x1, x19
  4224c8:	mov	x2, x20
  4224cc:	bl	4040f0 <memcpy@plt>
  4224d0:	ldr	x8, [sp, #32]
  4224d4:	add	x8, x8, x20
  4224d8:	str	x8, [sp, #32]
  4224dc:	bl	422b8c <wcrtomb@plt+0x1dd8c>
  4224e0:	mov	x20, x0
  4224e4:	bl	404170 <strlen@plt>
  4224e8:	mov	x19, x0
  4224ec:	ldp	x0, x8, [sp, #32]
  4224f0:	sub	x8, x8, x0
  4224f4:	cmp	x8, x19
  4224f8:	b.cs	42250c <wcrtomb@plt+0x1d70c>  // b.hs, b.nlast
  4224fc:	add	x0, sp, #0x8
  422500:	mov	x1, x19
  422504:	bl	43b5e8 <_obstack_newchunk@@Base>
  422508:	ldr	x0, [sp, #32]
  42250c:	mov	x1, x20
  422510:	mov	x2, x19
  422514:	bl	4040f0 <memcpy@plt>
  422518:	ldp	x8, x9, [sp, #32]
  42251c:	add	x8, x8, x19
  422520:	cmp	x9, x8
  422524:	str	x8, [sp, #32]
  422528:	b.ne	42253c <wcrtomb@plt+0x1d73c>  // b.any
  42252c:	add	x0, sp, #0x8
  422530:	mov	w1, #0x1                   	// #1
  422534:	bl	43b5e8 <_obstack_newchunk@@Base>
  422538:	ldr	x8, [sp, #32]
  42253c:	add	x9, x8, #0x1
  422540:	mov	w10, #0xa                   	// #10
  422544:	str	x9, [sp, #32]
  422548:	strb	w10, [x8]
  42254c:	ldp	x8, x9, [sp, #32]
  422550:	cmp	x9, x8
  422554:	b.ne	422568 <wcrtomb@plt+0x1d768>  // b.any
  422558:	add	x0, sp, #0x8
  42255c:	mov	w1, #0x1                   	// #1
  422560:	bl	43b5e8 <_obstack_newchunk@@Base>
  422564:	ldr	x8, [sp, #32]
  422568:	add	x9, x8, #0x1
  42256c:	str	x9, [sp, #32]
  422570:	strb	wzr, [x8]
  422574:	ldp	x0, x8, [sp, #24]
  422578:	cmp	x8, x0
  42257c:	b.ne	42258c <wcrtomb@plt+0x1d78c>  // b.any
  422580:	ldrb	w9, [sp, #88]
  422584:	orr	w9, w9, #0x2
  422588:	strb	w9, [sp, #88]
  42258c:	ldr	x10, [sp, #56]
  422590:	ldr	x11, [sp, #16]
  422594:	ldr	x9, [sp, #40]
  422598:	add	x8, x10, x8
  42259c:	bic	x8, x8, x10
  4225a0:	sub	x10, x8, x11
  4225a4:	sub	x11, x9, x11
  4225a8:	cmp	x10, x11
  4225ac:	str	x8, [sp, #32]
  4225b0:	b.ls	4225bc <wcrtomb@plt+0x1d7bc>  // b.plast
  4225b4:	mov	x8, x9
  4225b8:	str	x9, [sp, #32]
  4225bc:	str	x8, [sp, #24]
  4225c0:	bl	43a998 <argp_parse@@Base+0xbcdc>
  4225c4:	mov	x19, x0
  4225c8:	add	x0, sp, #0x8
  4225cc:	mov	x1, xzr
  4225d0:	bl	43b760 <_obstack_free@@Base>
  4225d4:	b	42263c <wcrtomb@plt+0x1d83c>
  4225d8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  4225dc:	add	x1, x1, #0xad0
  4225e0:	mov	w2, #0x5                   	// #5
  4225e4:	mov	x0, xzr
  4225e8:	bl	404bd0 <dcgettext@plt>
  4225ec:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x12808>
  4225f0:	add	x1, x1, #0xeec
  4225f4:	b	422634 <wcrtomb@plt+0x1d834>
  4225f8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  4225fc:	add	x1, x1, #0xad0
  422600:	mov	w2, #0x5                   	// #5
  422604:	mov	x0, xzr
  422608:	bl	404bd0 <dcgettext@plt>
  42260c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  422610:	add	x1, x1, #0xa74
  422614:	b	422634 <wcrtomb@plt+0x1d834>
  422618:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  42261c:	add	x1, x1, #0xad0
  422620:	mov	w2, #0x5                   	// #5
  422624:	mov	x0, xzr
  422628:	bl	404bd0 <dcgettext@plt>
  42262c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  422630:	add	x1, x1, #0xa7c
  422634:	bl	43ae0c <argp_parse@@Base+0xc150>
  422638:	mov	x19, x0
  42263c:	mov	x0, x19
  422640:	ldp	x20, x19, [sp, #144]
  422644:	ldp	x22, x21, [sp, #128]
  422648:	ldp	x24, x23, [sp, #112]
  42264c:	ldp	x29, x30, [sp, #96]
  422650:	add	sp, sp, #0xa0
  422654:	ret
  422658:	stp	x29, x30, [sp, #-16]!
  42265c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  422660:	ldr	w9, [x8, #348]
  422664:	mov	x29, sp
  422668:	cbz	w9, 422674 <wcrtomb@plt+0x1d874>
  42266c:	cmp	w9, w0
  422670:	b.ne	422680 <wcrtomb@plt+0x1d880>  // b.any
  422674:	str	w0, [x8, #348]
  422678:	ldp	x29, x30, [sp], #16
  42267c:	ret
  422680:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  422684:	ldr	x8, [x8, #496]
  422688:	cbz	x8, 422690 <wcrtomb@plt+0x1d890>
  42268c:	blr	x8
  422690:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  422694:	add	x1, x1, #0x89f
  422698:	mov	w2, #0x5                   	// #5
  42269c:	mov	x0, xzr
  4226a0:	bl	404bd0 <dcgettext@plt>
  4226a4:	mov	x2, x0
  4226a8:	mov	w0, wzr
  4226ac:	mov	w1, wzr
  4226b0:	bl	4041d0 <error@plt>
  4226b4:	mov	w0, #0x2                   	// #2
  4226b8:	bl	41f888 <wcrtomb@plt+0x1aa88>
  4226bc:	stp	x29, x30, [sp, #-48]!
  4226c0:	cmp	w0, #0xa
  4226c4:	str	x21, [sp, #16]
  4226c8:	stp	x20, x19, [sp, #32]
  4226cc:	mov	x29, sp
  4226d0:	b.cs	42274c <wcrtomb@plt+0x1d94c>  // b.hs, b.nlast
  4226d4:	ldr	x8, [x1, #8]
  4226d8:	mov	x19, x1
  4226dc:	mov	w21, w0
  4226e0:	cbz	x8, 4226f4 <wcrtomb@plt+0x1d8f4>
  4226e4:	mov	x0, x8
  4226e8:	bl	404170 <strlen@plt>
  4226ec:	add	x0, x0, #0x21
  4226f0:	b	4226f8 <wcrtomb@plt+0x1d8f8>
  4226f4:	mov	w0, #0x20                  	// #32
  4226f8:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4226fc:	ldr	x1, [x19, #8]
  422700:	mov	x20, x0
  422704:	cbz	x1, 422714 <wcrtomb@plt+0x1d914>
  422708:	add	x0, x20, #0x20
  42270c:	bl	404b00 <strcpy@plt>
  422710:	b	422718 <wcrtomb@plt+0x1d918>
  422714:	mov	x0, xzr
  422718:	str	x0, [x20, #8]
  42271c:	ldr	w8, [x19]
  422720:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  422724:	add	x9, x9, #0xa48
  422728:	ldr	x0, [x9, x21, lsl #3]
  42272c:	str	w8, [x20]
  422730:	ldr	x8, [x19, #16]
  422734:	str	x20, [x9, x21, lsl #3]
  422738:	ldr	x21, [sp, #16]
  42273c:	stp	x8, x0, [x20, #16]
  422740:	ldp	x20, x19, [sp, #32]
  422744:	ldp	x29, x30, [sp], #48
  422748:	ret
  42274c:	bl	404850 <abort@plt>
  422750:	stp	x29, x30, [sp, #-48]!
  422754:	stp	x20, x19, [sp, #32]
  422758:	mov	x19, x0
  42275c:	mov	w0, wzr
  422760:	str	x21, [sp, #16]
  422764:	mov	x29, sp
  422768:	bl	4226bc <wcrtomb@plt+0x1d8bc>
  42276c:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  422770:	ldr	x8, [x21, #392]
  422774:	cbz	x8, 422798 <wcrtomb@plt+0x1d998>
  422778:	mov	x20, x0
  42277c:	mov	x0, x8
  422780:	mov	x1, x19
  422784:	bl	404900 <strcmp@plt>
  422788:	cbz	w0, 422798 <wcrtomb@plt+0x1d998>
  42278c:	ldr	w8, [x20]
  422790:	cmp	w8, #0x1
  422794:	b.eq	4227ac <wcrtomb@plt+0x1d9ac>  // b.none
  422798:	str	x19, [x21, #392]
  42279c:	ldp	x20, x19, [sp, #32]
  4227a0:	ldr	x21, [sp, #16]
  4227a4:	ldp	x29, x30, [sp], #48
  4227a8:	ret
  4227ac:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4227b0:	ldr	x8, [x8, #496]
  4227b4:	cbz	x8, 4227bc <wcrtomb@plt+0x1d9bc>
  4227b8:	blr	x8
  4227bc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  4227c0:	add	x1, x1, #0x8f2
  4227c4:	mov	w2, #0x5                   	// #5
  4227c8:	mov	x0, xzr
  4227cc:	bl	404bd0 <dcgettext@plt>
  4227d0:	mov	x2, x0
  4227d4:	mov	w0, wzr
  4227d8:	mov	w1, wzr
  4227dc:	bl	4041d0 <error@plt>
  4227e0:	mov	w0, #0x2                   	// #2
  4227e4:	bl	41f888 <wcrtomb@plt+0x1aa88>
  4227e8:	stp	x29, x30, [sp, #-48]!
  4227ec:	stp	x20, x19, [sp, #32]
  4227f0:	mov	w19, w0
  4227f4:	mov	w0, #0x9                   	// #9
  4227f8:	str	x21, [sp, #16]
  4227fc:	mov	x29, sp
  422800:	mov	x20, x1
  422804:	bl	4226bc <wcrtomb@plt+0x1d8bc>
  422808:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  42280c:	cbz	x0, 42282c <wcrtomb@plt+0x1da2c>
  422810:	mov	x1, x0
  422814:	mov	x0, x20
  422818:	bl	422bd4 <wcrtomb@plt+0x1ddd4>
  42281c:	cbz	w0, 42282c <wcrtomb@plt+0x1da2c>
  422820:	ldr	w8, [x21, #240]
  422824:	cmp	w8, w19
  422828:	b.ne	422840 <wcrtomb@plt+0x1da40>  // b.any
  42282c:	str	w19, [x21, #240]
  422830:	ldp	x20, x19, [sp, #32]
  422834:	ldr	x21, [sp, #16]
  422838:	ldp	x29, x30, [sp], #48
  42283c:	ret
  422840:	adrp	x9, 44f000 <_obstack_memory_used@@Base+0x13808>
  422844:	add	x9, x9, #0x760
  422848:	ldr	x0, [x9, w19, sxtw #3]
  42284c:	ldr	x1, [x9, x8, lsl #3]
  422850:	bl	422c20 <wcrtomb@plt+0x1de20>
  422854:	sub	sp, sp, #0xc0
  422858:	stp	x29, x30, [sp, #128]
  42285c:	stp	x22, x21, [sp, #160]
  422860:	stp	x20, x19, [sp, #176]
  422864:	ldrb	w8, [x2]
  422868:	mov	x19, x3
  42286c:	mov	x20, x2
  422870:	str	x23, [sp, #144]
  422874:	and	w8, w8, #0xfe
  422878:	cmp	w8, #0x2e
  42287c:	add	x29, sp, #0x80
  422880:	b.ne	4228a0 <wcrtomb@plt+0x1daa0>  // b.any
  422884:	mov	x1, sp
  422888:	mov	x0, x20
  42288c:	bl	44b928 <_obstack_memory_used@@Base+0x10130>
  422890:	cbnz	w0, 422974 <wcrtomb@plt+0x1db74>
  422894:	ldur	q0, [sp, #88]
  422898:	str	q0, [x19]
  42289c:	b	42295c <wcrtomb@plt+0x1db5c>
  4228a0:	mov	x22, x1
  4228a4:	mov	x21, x0
  4228a8:	mov	x0, x19
  4228ac:	mov	x1, x20
  4228b0:	mov	x2, xzr
  4228b4:	bl	436a68 <argp_parse@@Base+0x7dac>
  4228b8:	tbz	w0, #0, 4228f8 <wcrtomb@plt+0x1daf8>
  4228bc:	mov	w0, #0x28                  	// #40
  4228c0:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4228c4:	ldr	q0, [x19]
  4228c8:	mov	x23, x0
  4228cc:	str	x22, [x0, #24]
  4228d0:	stur	q0, [x0, #8]
  4228d4:	mov	x0, x20
  4228d8:	bl	43a998 <argp_parse@@Base+0xbcdc>
  4228dc:	mov	x8, x0
  4228e0:	str	x8, [x23, #32]
  4228e4:	ldr	x8, [x21, #8]
  4228e8:	mov	w0, wzr
  4228ec:	str	x8, [x23]
  4228f0:	str	x23, [x21, #8]
  4228f4:	b	42295c <wcrtomb@plt+0x1db5c>
  4228f8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4228fc:	ldr	x8, [x8, #496]
  422900:	cbz	x8, 422908 <wcrtomb@plt+0x1db08>
  422904:	blr	x8
  422908:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  42290c:	add	x1, x1, #0x9be
  422910:	mov	w2, #0x5                   	// #5
  422914:	mov	x0, xzr
  422918:	bl	404bd0 <dcgettext@plt>
  42291c:	ldp	x8, x1, [x19]
  422920:	mov	x21, x0
  422924:	mov	w2, wzr
  422928:	mov	x0, x8
  42292c:	bl	417574 <wcrtomb@plt+0x12774>
  422930:	mov	x22, x0
  422934:	mov	x0, x20
  422938:	bl	439ac0 <argp_parse@@Base+0xae04>
  42293c:	mov	x4, x0
  422940:	mov	w0, wzr
  422944:	mov	w1, wzr
  422948:	mov	x2, x21
  42294c:	mov	x3, x22
  422950:	bl	4041d0 <error@plt>
  422954:	str	xzr, [x19, #8]
  422958:	mov	w0, #0x1                   	// #1
  42295c:	ldp	x20, x19, [sp, #176]
  422960:	ldp	x22, x21, [sp, #160]
  422964:	ldr	x23, [sp, #144]
  422968:	ldp	x29, x30, [sp, #128]
  42296c:	add	sp, sp, #0xc0
  422970:	ret
  422974:	mov	x0, x20
  422978:	bl	4266e4 <wcrtomb@plt+0x218e4>
  42297c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  422980:	ldr	x8, [x8, #496]
  422984:	cbz	x8, 42298c <wcrtomb@plt+0x1db8c>
  422988:	blr	x8
  42298c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  422990:	add	x1, x1, #0x9a3
  422994:	mov	w2, #0x5                   	// #5
  422998:	mov	x0, xzr
  42299c:	bl	404bd0 <dcgettext@plt>
  4229a0:	mov	x2, x0
  4229a4:	mov	w0, wzr
  4229a8:	mov	w1, wzr
  4229ac:	bl	4041d0 <error@plt>
  4229b0:	mov	w0, #0x2                   	// #2
  4229b4:	bl	41f888 <wcrtomb@plt+0x1aa88>
  4229b8:	stp	x29, x30, [sp, #-32]!
  4229bc:	stp	x20, x19, [sp, #16]
  4229c0:	mov	x19, x0
  4229c4:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x14808>
  4229c8:	adrp	x20, 44f000 <_obstack_memory_used@@Base+0x13808>
  4229cc:	add	x0, x0, #0xbbc
  4229d0:	add	x20, x20, #0x390
  4229d4:	mov	x29, sp
  4229d8:	mov	x1, x19
  4229dc:	bl	404900 <strcmp@plt>
  4229e0:	cbz	w0, 422a38 <wcrtomb@plt+0x1dc38>
  4229e4:	ldr	x0, [x20], #16
  4229e8:	cbnz	x0, 4229d8 <wcrtomb@plt+0x1dbd8>
  4229ec:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4229f0:	ldr	x8, [x8, #496]
  4229f4:	cbz	x8, 4229fc <wcrtomb@plt+0x1dbfc>
  4229f8:	blr	x8
  4229fc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  422a00:	add	x1, x1, #0x9f5
  422a04:	mov	w2, #0x5                   	// #5
  422a08:	mov	x0, xzr
  422a0c:	bl	404bd0 <dcgettext@plt>
  422a10:	mov	x20, x0
  422a14:	mov	x0, x19
  422a18:	bl	4398cc <argp_parse@@Base+0xac10>
  422a1c:	mov	x3, x0
  422a20:	mov	w0, wzr
  422a24:	mov	w1, wzr
  422a28:	mov	x2, x20
  422a2c:	bl	4041d0 <error@plt>
  422a30:	mov	w0, #0x2                   	// #2
  422a34:	bl	41f888 <wcrtomb@plt+0x1aa88>
  422a38:	ldur	w8, [x20, #-8]
  422a3c:	ldp	x20, x19, [sp, #16]
  422a40:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  422a44:	str	w8, [x9, #304]
  422a48:	ldp	x29, x30, [sp], #32
  422a4c:	ret
  422a50:	sub	sp, sp, #0x40
  422a54:	stp	x29, x30, [sp, #16]
  422a58:	stp	x20, x19, [sp, #48]
  422a5c:	add	x29, sp, #0x10
  422a60:	mov	x19, x1
  422a64:	mov	x8, #0xffffffffffffffff    	// #-1
  422a68:	mov	w1, #0x3a                  	// #58
  422a6c:	str	x21, [sp, #32]
  422a70:	mov	x20, x0
  422a74:	str	x8, [x29, #24]
  422a78:	bl	404a50 <strchr@plt>
  422a7c:	cbz	x0, 422ac4 <wcrtomb@plt+0x1dcc4>
  422a80:	mov	x21, x0
  422a84:	strb	wzr, [x21], #1
  422a88:	ldrb	w8, [x20]
  422a8c:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x16808>
  422a90:	add	x4, x4, #0x3ee
  422a94:	add	x1, sp, #0x8
  422a98:	cmp	w8, #0x0
  422a9c:	add	x3, x29, #0x18
  422aa0:	mov	w2, #0xa                   	// #10
  422aa4:	mov	x0, x21
  422aa8:	csel	x20, xzr, x20, eq  // eq = none
  422aac:	bl	43aa40 <argp_parse@@Base+0xbd84>
  422ab0:	cbnz	w0, 422b3c <wcrtomb@plt+0x1dd3c>
  422ab4:	ldr	x8, [x29, #24]
  422ab8:	lsr	x8, x8, #32
  422abc:	cbz	x8, 422afc <wcrtomb@plt+0x1dcfc>
  422ac0:	b	422b3c <wcrtomb@plt+0x1dd3c>
  422ac4:	ldrb	w8, [x20]
  422ac8:	sub	w8, w8, #0x30
  422acc:	cmp	w8, #0x9
  422ad0:	b.hi	422afc <wcrtomb@plt+0x1dcfc>  // b.pmore
  422ad4:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x16808>
  422ad8:	add	x4, x4, #0x3ee
  422adc:	add	x1, sp, #0x8
  422ae0:	mov	x3, sp
  422ae4:	mov	w2, #0xa                   	// #10
  422ae8:	mov	x0, x20
  422aec:	bl	43aa40 <argp_parse@@Base+0xbd84>
  422af0:	cbz	w0, 422b1c <wcrtomb@plt+0x1dd1c>
  422af4:	cmp	w0, #0x1
  422af8:	b.eq	422b38 <wcrtomb@plt+0x1dd38>  // b.none
  422afc:	cbz	x20, 422b04 <wcrtomb@plt+0x1dd04>
  422b00:	str	x20, [x19]
  422b04:	ldr	x0, [x29, #24]
  422b08:	ldp	x20, x19, [sp, #48]
  422b0c:	ldr	x21, [sp, #32]
  422b10:	ldp	x29, x30, [sp, #16]
  422b14:	add	sp, sp, #0x40
  422b18:	ret
  422b1c:	ldr	x8, [sp]
  422b20:	lsr	x9, x8, #32
  422b24:	cbnz	x9, 422b38 <wcrtomb@plt+0x1dd38>
  422b28:	mov	x20, xzr
  422b2c:	str	x8, [x29, #24]
  422b30:	cbnz	x20, 422b00 <wcrtomb@plt+0x1dd00>
  422b34:	b	422b04 <wcrtomb@plt+0x1dd04>
  422b38:	mov	x21, x20
  422b3c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  422b40:	ldr	x8, [x8, #496]
  422b44:	cbz	x8, 422b4c <wcrtomb@plt+0x1dd4c>
  422b48:	blr	x8
  422b4c:	mov	x0, x21
  422b50:	bl	4398cc <argp_parse@@Base+0xac10>
  422b54:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  422b58:	mov	x19, x0
  422b5c:	add	x1, x1, #0xa10
  422b60:	mov	w2, #0x5                   	// #5
  422b64:	mov	x0, xzr
  422b68:	bl	404bd0 <dcgettext@plt>
  422b6c:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  422b70:	mov	x4, x0
  422b74:	add	x2, x2, #0xe00
  422b78:	mov	w0, wzr
  422b7c:	mov	w1, wzr
  422b80:	mov	x3, x19
  422b84:	bl	4041d0 <error@plt>
  422b88:	bl	40d698 <wcrtomb@plt+0x8898>
  422b8c:	adrp	x8, 44f000 <_obstack_memory_used@@Base+0x13808>
  422b90:	add	x8, x8, #0x380
  422b94:	ldr	w9, [x8, #24]
  422b98:	add	x8, x8, #0x10
  422b9c:	cmp	w9, #0x6
  422ba0:	b.ne	422b94 <wcrtomb@plt+0x1dd94>  // b.any
  422ba4:	ldr	x1, [x8]
  422ba8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x19808>
  422bac:	add	x8, x8, #0x438
  422bb0:	ldr	x4, [x8, #56]
  422bb4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  422bb8:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x19808>
  422bbc:	adrp	x5, 451000 <_obstack_memory_used@@Base+0x15808>
  422bc0:	add	x0, x0, #0xa80
  422bc4:	add	x2, x2, #0x25d
  422bc8:	add	x5, x5, #0xaba
  422bcc:	mov	w3, #0x14                  	// #20
  422bd0:	b	43ae0c <argp_parse@@Base+0xc150>
  422bd4:	stp	x29, x30, [sp, #-16]!
  422bd8:	ldr	w8, [x0]
  422bdc:	ldr	w9, [x1]
  422be0:	mov	x29, sp
  422be4:	cmp	w8, w9
  422be8:	b.ne	422bfc <wcrtomb@plt+0x1ddfc>  // b.any
  422bec:	cmp	w8, #0x1
  422bf0:	b.ne	422c04 <wcrtomb@plt+0x1de04>  // b.any
  422bf4:	mov	w0, #0x1                   	// #1
  422bf8:	b	422c18 <wcrtomb@plt+0x1de18>
  422bfc:	mov	w0, wzr
  422c00:	b	422c18 <wcrtomb@plt+0x1de18>
  422c04:	ldr	x0, [x0, #8]
  422c08:	ldr	x1, [x1, #8]
  422c0c:	bl	404900 <strcmp@plt>
  422c10:	cmp	w0, #0x0
  422c14:	cset	w0, eq  // eq = none
  422c18:	ldp	x29, x30, [sp], #16
  422c1c:	ret
  422c20:	stp	x29, x30, [sp, #-32]!
  422c24:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  422c28:	ldr	x8, [x8, #496]
  422c2c:	stp	x20, x19, [sp, #16]
  422c30:	mov	x19, x1
  422c34:	mov	x20, x0
  422c38:	mov	x29, sp
  422c3c:	cbz	x8, 422c44 <wcrtomb@plt+0x1de44>
  422c40:	blr	x8
  422c44:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  422c48:	add	x1, x1, #0x985
  422c4c:	mov	w2, #0x5                   	// #5
  422c50:	mov	x0, xzr
  422c54:	bl	404bd0 <dcgettext@plt>
  422c58:	mov	x2, x0
  422c5c:	mov	w0, wzr
  422c60:	mov	w1, wzr
  422c64:	mov	x3, x20
  422c68:	mov	x4, x19
  422c6c:	bl	4041d0 <error@plt>
  422c70:	mov	w0, #0x2                   	// #2
  422c74:	bl	41f888 <wcrtomb@plt+0x1aa88>
  422c78:	stp	x29, x30, [sp, #-32]!
  422c7c:	str	x19, [sp, #16]
  422c80:	mov	x29, sp
  422c84:	mov	w19, w0
  422c88:	bl	4050bc <wcrtomb@plt+0x2bc>
  422c8c:	bl	4054ec <wcrtomb@plt+0x6ec>
  422c90:	mov	w0, w19
  422c94:	ldr	x19, [sp, #16]
  422c98:	adrp	x1, 422000 <wcrtomb@plt+0x1d200>
  422c9c:	add	x1, x1, #0xc78
  422ca0:	ldp	x29, x30, [sp], #32
  422ca4:	b	404420 <signal@plt>
  422ca8:	stp	x29, x30, [sp, #-96]!
  422cac:	stp	x28, x27, [sp, #16]
  422cb0:	stp	x26, x25, [sp, #32]
  422cb4:	stp	x24, x23, [sp, #48]
  422cb8:	stp	x22, x21, [sp, #64]
  422cbc:	stp	x20, x19, [sp, #80]
  422cc0:	mov	x29, sp
  422cc4:	sub	sp, sp, #0x240
  422cc8:	ldrb	w8, [x0]
  422ccc:	cbz	w8, 423310 <wcrtomb@plt+0x1e510>
  422cd0:	add	x8, sp, #0x2c
  422cd4:	adrp	x28, 46a000 <_obstack_memory_used@@Base+0x2e808>
  422cd8:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  422cdc:	mov	x19, x0
  422ce0:	sub	x21, x29, #0x10
  422ce4:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x2e808>
  422ce8:	add	x28, x28, #0xaf0
  422cec:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x2e808>
  422cf0:	orr	x8, x8, #0x2
  422cf4:	add	x20, x20, #0x80
  422cf8:	str	x8, [sp, #8]
  422cfc:	mov	w0, #0x70                  	// #112
  422d00:	bl	43a8f4 <argp_parse@@Base+0xbc38>
  422d04:	ldr	x8, [x26, #2808]
  422d08:	cmp	x8, #0x0
  422d0c:	csel	x8, x28, x8, eq  // eq = none
  422d10:	str	x0, [x8]
  422d14:	str	x0, [x26, #2808]
  422d18:	ldrb	w8, [x19]
  422d1c:	cmp	w8, #0x73
  422d20:	b.ne	422df0 <wcrtomb@plt+0x1dff0>  // b.any
  422d24:	mov	x24, x19
  422d28:	ldrb	w8, [x24, #2]!
  422d2c:	mov	x23, x0
  422d30:	mov	w25, #0x2                   	// #2
  422d34:	ldurb	w20, [x24, #-1]
  422d38:	cmp	w8, w20
  422d3c:	b.eq	422d80 <wcrtomb@plt+0x1df80>  // b.none
  422d40:	cbz	w8, 422d80 <wcrtomb@plt+0x1df80>
  422d44:	mov	w25, #0x2                   	// #2
  422d48:	and	w8, w8, #0xff
  422d4c:	cmp	w8, #0x5c
  422d50:	b.ne	422d68 <wcrtomb@plt+0x1df68>  // b.any
  422d54:	sxtw	x8, w25
  422d58:	add	x8, x8, #0x1
  422d5c:	ldrb	w9, [x19, x8]
  422d60:	cmp	w9, #0x0
  422d64:	csel	w25, w25, w8, eq  // eq = none
  422d68:	sxtw	x8, w25
  422d6c:	add	x25, x8, #0x1
  422d70:	ldrb	w8, [x19, x25]
  422d74:	cmp	w8, w20
  422d78:	b.eq	422d80 <wcrtomb@plt+0x1df80>  // b.none
  422d7c:	cbnz	w8, 422d48 <wcrtomb@plt+0x1df48>
  422d80:	cmp	w8, w20
  422d84:	b.ne	4233a8 <wcrtomb@plt+0x1e5a8>  // b.any
  422d88:	sxtw	x8, w25
  422d8c:	add	x11, x8, #0x1
  422d90:	add	x10, x19, x11
  422d94:	str	x8, [sp, #32]
  422d98:	ldrb	w8, [x10]
  422d9c:	mov	w28, #0x1                   	// #1
  422da0:	cmp	w8, w20
  422da4:	b.eq	422e34 <wcrtomb@plt+0x1e034>  // b.none
  422da8:	cbz	w8, 422e34 <wcrtomb@plt+0x1e034>
  422dac:	mov	w22, w11
  422db0:	and	w8, w8, #0xff
  422db4:	cmp	w8, #0x5c
  422db8:	b.ne	422dd0 <wcrtomb@plt+0x1dfd0>  // b.any
  422dbc:	sxtw	x8, w22
  422dc0:	add	x8, x8, #0x1
  422dc4:	ldrb	w9, [x19, x8]
  422dc8:	cmp	w9, #0x0
  422dcc:	csel	w22, w22, w8, eq  // eq = none
  422dd0:	sxtw	x8, w22
  422dd4:	add	x22, x8, #0x1
  422dd8:	ldrb	w8, [x19, x22]
  422ddc:	cmp	w8, w20
  422de0:	b.eq	422de8 <wcrtomb@plt+0x1dfe8>  // b.none
  422de4:	cbnz	w8, 422db0 <wcrtomb@plt+0x1dfb0>
  422de8:	add	x19, x19, x22
  422dec:	b	422e3c <wcrtomb@plt+0x1e03c>
  422df0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  422df4:	mov	w2, #0x6                   	// #6
  422df8:	mov	x0, x19
  422dfc:	add	x1, x1, #0x22
  422e00:	bl	404580 <strncmp@plt>
  422e04:	cbnz	w0, 4233a8 <wcrtomb@plt+0x1e5a8>
  422e08:	add	x19, x19, #0x6
  422e0c:	str	wzr, [x27, #128]
  422e10:	ldrb	w1, [x19]
  422e14:	cbz	w1, 423308 <wcrtomb@plt+0x1e508>
  422e18:	cmp	w1, #0x3b
  422e1c:	b.eq	423304 <wcrtomb@plt+0x1e504>  // b.none
  422e20:	mov	x0, x20
  422e24:	bl	4239a4 <wcrtomb@plt+0x1eba4>
  422e28:	cbnz	w0, 423330 <wcrtomb@plt+0x1e530>
  422e2c:	add	x19, x19, #0x1
  422e30:	b	422e10 <wcrtomb@plt+0x1e010>
  422e34:	mov	w22, w11
  422e38:	mov	x19, x10
  422e3c:	cmp	w8, w20
  422e40:	b.ne	4233a8 <wcrtomb@plt+0x1e5a8>  // b.any
  422e44:	ldr	w8, [x27, #128]
  422e48:	mov	x27, x23
  422e4c:	mov	w26, wzr
  422e50:	str	wzr, [x23, #8]
  422e54:	str	w8, [x27, #12]!
  422e58:	stp	x11, x10, [sp, #16]
  422e5c:	mov	x8, x19
  422e60:	add	x19, x8, #0x1
  422e64:	str	x19, [x21]
  422e68:	ldrb	w1, [x8, #1]
  422e6c:	sub	w9, w1, #0x30
  422e70:	cmp	w9, #0xa
  422e74:	b.cs	422e9c <wcrtomb@plt+0x1e09c>  // b.hs, b.nlast
  422e78:	sub	x1, x29, #0x10
  422e7c:	mov	x0, x19
  422e80:	mov	w2, wzr
  422e84:	bl	404160 <strtoul@plt>
  422e88:	ldr	x8, [x21]
  422e8c:	str	w0, [x23, #16]
  422e90:	sub	x8, x8, #0x1
  422e94:	str	x8, [x21]
  422e98:	b	422e60 <wcrtomb@plt+0x1e060>
  422e9c:	cmp	w1, #0x66
  422ea0:	b.le	422ec0 <wcrtomb@plt+0x1e0c0>
  422ea4:	cmp	w1, #0x67
  422ea8:	b.eq	422ee0 <wcrtomb@plt+0x1e0e0>  // b.none
  422eac:	cmp	w1, #0x69
  422eb0:	b.eq	422ee8 <wcrtomb@plt+0x1e0e8>  // b.none
  422eb4:	cmp	w1, #0x78
  422eb8:	b.ne	422ecc <wcrtomb@plt+0x1e0cc>  // b.any
  422ebc:	b	422ef0 <wcrtomb@plt+0x1e0f0>
  422ec0:	cbz	w1, 422f04 <wcrtomb@plt+0x1e104>
  422ec4:	cmp	w1, #0x3b
  422ec8:	b.eq	422efc <wcrtomb@plt+0x1e0fc>  // b.none
  422ecc:	mov	x0, x27
  422ed0:	bl	4239a4 <wcrtomb@plt+0x1eba4>
  422ed4:	mov	x8, x19
  422ed8:	cbz	w0, 422e60 <wcrtomb@plt+0x1e060>
  422edc:	b	423370 <wcrtomb@plt+0x1e570>
  422ee0:	str	w28, [x23, #8]
  422ee4:	b	422e5c <wcrtomb@plt+0x1e05c>
  422ee8:	mov	w8, #0x2                   	// #2
  422eec:	b	422ef4 <wcrtomb@plt+0x1e0f4>
  422ef0:	mov	w8, #0x1                   	// #1
  422ef4:	orr	w26, w26, w8
  422ef8:	b	422e5c <wcrtomb@plt+0x1e05c>
  422efc:	add	x19, x8, #0x2
  422f00:	str	x19, [x21]
  422f04:	sub	w8, w25, #0x1
  422f08:	sxtw	x0, w8
  422f0c:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  422f10:	ldr	x8, [sp, #32]
  422f14:	mov	x1, x24
  422f18:	mov	x27, x0
  422f1c:	sub	x28, x8, #0x2
  422f20:	mov	x2, x28
  422f24:	bl	4040f0 <memcpy@plt>
  422f28:	add	x24, x23, #0x18
  422f2c:	mov	x0, x24
  422f30:	mov	x1, x27
  422f34:	mov	w2, w26
  422f38:	strb	wzr, [x27, x28]
  422f3c:	bl	43c8b4 <_obstack_memory_used@@Base+0x10bc>
  422f40:	cbnz	w0, 4233e0 <wcrtomb@plt+0x1e5e0>
  422f44:	ldrb	w8, [x27]
  422f48:	adrp	x28, 46a000 <_obstack_memory_used@@Base+0x2e808>
  422f4c:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x2e808>
  422f50:	add	x28, x28, #0xaf0
  422f54:	cmp	w8, #0x5e
  422f58:	b.ne	422f64 <wcrtomb@plt+0x1e164>  // b.any
  422f5c:	str	wzr, [x23, #8]
  422f60:	b	422f80 <wcrtomb@plt+0x1e180>
  422f64:	cmp	w25, #0x3
  422f68:	b.lt	422f80 <wcrtomb@plt+0x1e180>  // b.tstop
  422f6c:	ldr	x8, [sp, #32]
  422f70:	add	x8, x8, x27
  422f74:	ldurb	w8, [x8, #-3]
  422f78:	cmp	w8, #0x24
  422f7c:	b.eq	422f5c <wcrtomb@plt+0x1e15c>  // b.none
  422f80:	mov	x0, x27
  422f84:	bl	4049b0 <free@plt>
  422f88:	ldr	x8, [sp, #16]
  422f8c:	sub	w22, w22, w8
  422f90:	add	w8, w22, #0x1
  422f94:	sxtw	x0, w8
  422f98:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  422f9c:	ldr	x1, [sp, #24]
  422fa0:	sxtw	x2, w22
  422fa4:	mov	x24, x0
  422fa8:	bl	4040f0 <memcpy@plt>
  422fac:	strb	wzr, [x24, w22, sxtw]
  422fb0:	mov	x2, x24
  422fb4:	mov	x1, x24
  422fb8:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x2e808>
  422fbc:	mov	w22, #0x1                   	// #1
  422fc0:	str	x24, [sp, #48]
  422fc4:	ldrb	w8, [x2]
  422fc8:	cmp	w8, #0x26
  422fcc:	b.eq	42304c <wcrtomb@plt+0x1e24c>  // b.none
  422fd0:	cmp	w8, #0x5c
  422fd4:	b.eq	422fe8 <wcrtomb@plt+0x1e1e8>  // b.none
  422fd8:	cbz	w8, 4232e8 <wcrtomb@plt+0x1e4e8>
  422fdc:	add	x2, x2, #0x1
  422fe0:	str	x2, [sp, #48]
  422fe4:	b	422fc4 <wcrtomb@plt+0x1e1c4>
  422fe8:	mov	x0, x23
  422fec:	bl	423a34 <wcrtomb@plt+0x1ec34>
  422ff0:	ldr	x8, [sp, #48]
  422ff4:	add	x0, x8, #0x1
  422ff8:	str	x0, [sp, #48]
  422ffc:	ldrb	w8, [x8, #1]
  423000:	cmp	w8, #0x4b
  423004:	b.gt	423068 <wcrtomb@plt+0x1e268>
  423008:	sub	w9, w8, #0x30
  42300c:	cmp	w9, #0xa
  423010:	b.cs	4230f4 <wcrtomb@plt+0x1e2f4>  // b.hs, b.nlast
  423014:	add	x1, sp, #0x30
  423018:	mov	w2, #0xa                   	// #10
  42301c:	bl	404160 <strtoul@plt>
  423020:	ldr	x8, [x23, #72]
  423024:	cmp	x0, x8
  423028:	b.hi	42338c <wcrtomb@plt+0x1e58c>  // b.pmore
  42302c:	mov	x25, x0
  423030:	mov	x0, x23
  423034:	bl	423a90 <wcrtomb@plt+0x1ec90>
  423038:	str	w22, [x0, #8]
  42303c:	str	x25, [x0, #16]
  423040:	ldr	x2, [sp, #48]
  423044:	mov	x1, x2
  423048:	b	422fc4 <wcrtomb@plt+0x1e1c4>
  42304c:	mov	x0, x23
  423050:	bl	423a34 <wcrtomb@plt+0x1ec34>
  423054:	mov	x0, x23
  423058:	bl	423a90 <wcrtomb@plt+0x1ec90>
  42305c:	str	w22, [x0, #8]
  423060:	str	xzr, [x0, #16]
  423064:	b	42326c <wcrtomb@plt+0x1e46c>
  423068:	cmp	w8, #0x60
  42306c:	b.le	4230b8 <wcrtomb@plt+0x1e2b8>
  423070:	sub	w9, w8, #0x61
  423074:	cmp	w9, #0x15
  423078:	b.hi	42329c <wcrtomb@plt+0x1e49c>  // b.pmore
  42307c:	adrp	x12, 452000 <_obstack_memory_used@@Base+0x16808>
  423080:	add	x12, x12, #0x8
  423084:	adr	x10, 423094 <wcrtomb@plt+0x1e294>
  423088:	ldrb	w11, [x12, x9]
  42308c:	add	x10, x10, x11, lsl #2
  423090:	br	x10
  423094:	mov	x0, x23
  423098:	bl	423a90 <wcrtomb@plt+0x1ec90>
  42309c:	mov	x25, x0
  4230a0:	str	wzr, [x0, #8]
  4230a4:	mov	w0, #0x2                   	// #2
  4230a8:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4230ac:	str	x0, [x25, #16]
  4230b0:	mov	w8, #0x7                   	// #7
  4230b4:	b	42325c <wcrtomb@plt+0x1e45c>
  4230b8:	cmp	w8, #0x4c
  4230bc:	b.eq	423224 <wcrtomb@plt+0x1e424>  // b.none
  4230c0:	cmp	w8, #0x55
  4230c4:	b.eq	423280 <wcrtomb@plt+0x1e480>  // b.none
  4230c8:	cmp	w8, #0x5c
  4230cc:	b.ne	42329c <wcrtomb@plt+0x1e49c>  // b.any
  4230d0:	mov	x0, x23
  4230d4:	bl	423a90 <wcrtomb@plt+0x1ec90>
  4230d8:	mov	x25, x0
  4230dc:	str	wzr, [x0, #8]
  4230e0:	mov	w0, #0x2                   	// #2
  4230e4:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4230e8:	mov	w8, #0x5c                  	// #92
  4230ec:	str	x0, [x25, #16]
  4230f0:	b	42325c <wcrtomb@plt+0x1e45c>
  4230f4:	cmp	w8, #0x26
  4230f8:	b.eq	42323c <wcrtomb@plt+0x1e43c>  // b.none
  4230fc:	cmp	w8, #0x45
  423100:	b.ne	42329c <wcrtomb@plt+0x1e49c>  // b.any
  423104:	mov	x0, x23
  423108:	bl	423a90 <wcrtomb@plt+0x1ec90>
  42310c:	mov	w8, #0x2                   	// #2
  423110:	str	w8, [x0, #8]
  423114:	str	wzr, [x0, #16]
  423118:	b	42326c <wcrtomb@plt+0x1e46c>
  42311c:	mov	x0, x23
  423120:	bl	423a90 <wcrtomb@plt+0x1ec90>
  423124:	mov	x25, x0
  423128:	str	wzr, [x0, #8]
  42312c:	mov	w0, #0x2                   	// #2
  423130:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  423134:	str	x0, [x25, #16]
  423138:	mov	w8, #0x9                   	// #9
  42313c:	b	42325c <wcrtomb@plt+0x1e45c>
  423140:	mov	x0, x23
  423144:	bl	423a90 <wcrtomb@plt+0x1ec90>
  423148:	mov	x25, x0
  42314c:	str	wzr, [x0, #8]
  423150:	mov	w0, #0x2                   	// #2
  423154:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  423158:	str	x0, [x25, #16]
  42315c:	mov	w8, #0xb                   	// #11
  423160:	b	42325c <wcrtomb@plt+0x1e45c>
  423164:	mov	x0, x23
  423168:	bl	423a90 <wcrtomb@plt+0x1ec90>
  42316c:	mov	x25, x0
  423170:	str	wzr, [x0, #8]
  423174:	mov	w0, #0x2                   	// #2
  423178:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  42317c:	str	x0, [x25, #16]
  423180:	mov	w8, #0xc                   	// #12
  423184:	b	42325c <wcrtomb@plt+0x1e45c>
  423188:	mov	x0, x23
  42318c:	bl	423a90 <wcrtomb@plt+0x1ec90>
  423190:	mov	x25, x0
  423194:	str	wzr, [x0, #8]
  423198:	mov	w0, #0x2                   	// #2
  42319c:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4231a0:	str	x0, [x25, #16]
  4231a4:	mov	w8, #0xa                   	// #10
  4231a8:	b	42325c <wcrtomb@plt+0x1e45c>
  4231ac:	mov	x0, x23
  4231b0:	bl	423a90 <wcrtomb@plt+0x1ec90>
  4231b4:	mov	x25, x0
  4231b8:	str	wzr, [x0, #8]
  4231bc:	mov	w0, #0x2                   	// #2
  4231c0:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4231c4:	str	x0, [x25, #16]
  4231c8:	mov	w8, #0xd                   	// #13
  4231cc:	b	42325c <wcrtomb@plt+0x1e45c>
  4231d0:	mov	x0, x23
  4231d4:	bl	423a90 <wcrtomb@plt+0x1ec90>
  4231d8:	mov	x25, x0
  4231dc:	str	wzr, [x0, #8]
  4231e0:	mov	w0, #0x2                   	// #2
  4231e4:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4231e8:	str	x0, [x25, #16]
  4231ec:	mov	w8, #0x8                   	// #8
  4231f0:	b	42325c <wcrtomb@plt+0x1e45c>
  4231f4:	mov	x0, x23
  4231f8:	bl	423a90 <wcrtomb@plt+0x1ec90>
  4231fc:	mov	w8, #0x2                   	// #2
  423200:	str	w8, [x0, #8]
  423204:	str	w22, [x0, #16]
  423208:	b	42326c <wcrtomb@plt+0x1e46c>
  42320c:	mov	x0, x23
  423210:	bl	423a90 <wcrtomb@plt+0x1ec90>
  423214:	mov	w8, #0x2                   	// #2
  423218:	str	w8, [x0, #8]
  42321c:	str	w8, [x0, #16]
  423220:	b	42326c <wcrtomb@plt+0x1e46c>
  423224:	mov	x0, x23
  423228:	bl	423a90 <wcrtomb@plt+0x1ec90>
  42322c:	mov	w8, #0x2                   	// #2
  423230:	str	w8, [x0, #8]
  423234:	mov	w8, #0x4                   	// #4
  423238:	b	423294 <wcrtomb@plt+0x1e494>
  42323c:	mov	x0, x23
  423240:	bl	423a90 <wcrtomb@plt+0x1ec90>
  423244:	mov	x25, x0
  423248:	str	wzr, [x0, #8]
  42324c:	mov	w0, #0x2                   	// #2
  423250:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  423254:	str	x0, [x25, #16]
  423258:	mov	w8, #0x26                  	// #38
  42325c:	strb	w8, [x0]
  423260:	ldr	x8, [x25, #16]
  423264:	strb	wzr, [x8, #1]
  423268:	str	x22, [x25, #24]
  42326c:	ldr	x8, [sp, #48]
  423270:	add	x2, x8, #0x1
  423274:	str	x2, [sp, #48]
  423278:	mov	x1, x2
  42327c:	b	422fc4 <wcrtomb@plt+0x1e1c4>
  423280:	mov	x0, x23
  423284:	bl	423a90 <wcrtomb@plt+0x1ec90>
  423288:	mov	w8, #0x2                   	// #2
  42328c:	str	w8, [x0, #8]
  423290:	mov	w8, #0x3                   	// #3
  423294:	str	w8, [x0, #16]
  423298:	b	42326c <wcrtomb@plt+0x1e46c>
  42329c:	cmp	w8, w20
  4232a0:	b.ne	4232c8 <wcrtomb@plt+0x1e4c8>  // b.any
  4232a4:	mov	x0, x23
  4232a8:	bl	423a90 <wcrtomb@plt+0x1ec90>
  4232ac:	mov	x25, x0
  4232b0:	str	wzr, [x0, #8]
  4232b4:	mov	w0, #0x2                   	// #2
  4232b8:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4232bc:	str	x0, [x25, #16]
  4232c0:	strb	w20, [x0]
  4232c4:	b	423260 <wcrtomb@plt+0x1e460>
  4232c8:	ldr	x2, [sp, #8]
  4232cc:	mov	w9, #0x5c                  	// #92
  4232d0:	add	x1, sp, #0x2c
  4232d4:	mov	x0, x23
  4232d8:	strb	w9, [sp, #44]
  4232dc:	strb	w8, [sp, #45]
  4232e0:	bl	423a34 <wcrtomb@plt+0x1ec34>
  4232e4:	b	42326c <wcrtomb@plt+0x1e46c>
  4232e8:	mov	x0, x23
  4232ec:	bl	423a34 <wcrtomb@plt+0x1ec34>
  4232f0:	mov	x0, x24
  4232f4:	bl	4049b0 <free@plt>
  4232f8:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4232fc:	add	x20, x20, #0x80
  423300:	b	423308 <wcrtomb@plt+0x1e508>
  423304:	add	x19, x19, #0x1
  423308:	ldrb	w8, [x19]
  42330c:	cbnz	w8, 422cfc <wcrtomb@plt+0x1defc>
  423310:	add	sp, sp, #0x240
  423314:	ldp	x20, x19, [sp, #80]
  423318:	ldp	x22, x21, [sp, #64]
  42331c:	ldp	x24, x23, [sp, #48]
  423320:	ldp	x26, x25, [sp, #32]
  423324:	ldp	x28, x27, [sp, #16]
  423328:	ldp	x29, x30, [sp], #96
  42332c:	ret
  423330:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  423334:	ldr	x8, [x8, #496]
  423338:	cbz	x8, 423340 <wcrtomb@plt+0x1e540>
  42333c:	blr	x8
  423340:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  423344:	add	x1, x1, #0x29
  423348:	mov	w2, #0x5                   	// #5
  42334c:	mov	x0, xzr
  423350:	bl	404bd0 <dcgettext@plt>
  423354:	ldrb	w3, [x19]
  423358:	mov	x2, x0
  42335c:	mov	w0, wzr
  423360:	mov	w1, wzr
  423364:	bl	4041d0 <error@plt>
  423368:	mov	w0, #0x2                   	// #2
  42336c:	bl	41f888 <wcrtomb@plt+0x1aa88>
  423370:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  423374:	ldr	x8, [x8, #496]
  423378:	cbz	x8, 423380 <wcrtomb@plt+0x1e580>
  42337c:	blr	x8
  423380:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  423384:	add	x1, x1, #0x61
  423388:	b	423348 <wcrtomb@plt+0x1e548>
  42338c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  423390:	ldr	x8, [x8, #496]
  423394:	cbz	x8, 42339c <wcrtomb@plt+0x1e59c>
  423398:	blr	x8
  42339c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  4233a0:	add	x1, x1, #0xab
  4233a4:	b	4233c0 <wcrtomb@plt+0x1e5c0>
  4233a8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4233ac:	ldr	x8, [x8, #496]
  4233b0:	cbz	x8, 4233b8 <wcrtomb@plt+0x1e5b8>
  4233b4:	blr	x8
  4233b8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  4233bc:	add	x1, x1, #0x44
  4233c0:	mov	w2, #0x5                   	// #5
  4233c4:	mov	x0, xzr
  4233c8:	bl	404bd0 <dcgettext@plt>
  4233cc:	mov	x2, x0
  4233d0:	mov	w0, wzr
  4233d4:	mov	w1, wzr
  4233d8:	bl	4041d0 <error@plt>
  4233dc:	b	423368 <wcrtomb@plt+0x1e568>
  4233e0:	add	x2, sp, #0x30
  4233e4:	mov	w3, #0x200                 	// #512
  4233e8:	mov	x1, x24
  4233ec:	bl	43c9b0 <_obstack_memory_used@@Base+0x11b8>
  4233f0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4233f4:	ldr	x8, [x8, #496]
  4233f8:	cbz	x8, 423400 <wcrtomb@plt+0x1e600>
  4233fc:	blr	x8
  423400:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  423404:	add	x1, x1, #0x8a
  423408:	mov	w2, #0x5                   	// #5
  42340c:	mov	x0, xzr
  423410:	bl	404bd0 <dcgettext@plt>
  423414:	mov	x2, x0
  423418:	add	x3, sp, #0x30
  42341c:	mov	w0, wzr
  423420:	mov	w1, wzr
  423424:	bl	4041d0 <error@plt>
  423428:	b	423368 <wcrtomb@plt+0x1e568>
  42342c:	sub	sp, sp, #0x90
  423430:	stp	x29, x30, [sp, #48]
  423434:	stp	x28, x27, [sp, #64]
  423438:	stp	x26, x25, [sp, #80]
  42343c:	stp	x24, x23, [sp, #96]
  423440:	stp	x22, x21, [sp, #112]
  423444:	stp	x20, x19, [sp, #128]
  423448:	stp	x3, x0, [sp]
  42344c:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423450:	ldrb	w8, [x19, #2816]
  423454:	ldr	x22, [x0]
  423458:	add	x29, sp, #0x30
  42345c:	str	x2, [sp, #16]
  423460:	stur	w1, [x29, #-20]
  423464:	tbnz	w8, #0, 423494 <wcrtomb@plt+0x1e694>
  423468:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42346c:	adrp	x3, 43a000 <argp_parse@@Base+0xb344>
  423470:	adrp	x4, 404000 <mbrtowc@plt-0xe0>
  423474:	add	x0, x0, #0xa98
  423478:	add	x3, x3, #0x7a4
  42347c:	add	x4, x4, #0x9b0
  423480:	mov	x1, xzr
  423484:	mov	x2, xzr
  423488:	bl	43b4e0 <_obstack_begin@@Base>
  42348c:	mov	w8, #0x1                   	// #1
  423490:	strb	w8, [x19, #2816]
  423494:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423498:	ldr	x23, [x8, #2800]
  42349c:	cbz	x23, 423918 <wcrtomb@plt+0x1eb18>
  4234a0:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4234a4:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4234a8:	mov	w8, wzr
  4234ac:	add	x19, x19, #0xab0
  4234b0:	add	x20, x20, #0xaa0
  4234b4:	ldr	w9, [x23, #12]
  4234b8:	ldur	w10, [x29, #-20]
  4234bc:	tst	w9, w10
  4234c0:	b.eq	4238c0 <wcrtomb@plt+0x1eac0>  // b.none
  4234c4:	ldr	x8, [x23, #72]
  4234c8:	lsl	x8, x8, #4
  4234cc:	add	x0, x8, #0x10
  4234d0:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4234d4:	ldrb	w8, [x22]
  4234d8:	mov	x25, x0
  4234dc:	cbz	w8, 423828 <wcrtomb@plt+0x1ea28>
  4234e0:	mov	x24, xzr
  4234e4:	mov	w27, wzr
  4234e8:	mov	w26, wzr
  4234ec:	add	x8, x23, #0x18
  4234f0:	stur	x8, [x29, #-8]
  4234f4:	ldr	x8, [x23, #72]
  4234f8:	ldur	x0, [x29, #-8]
  4234fc:	mov	x1, x22
  423500:	mov	x3, x25
  423504:	add	x2, x8, #0x1
  423508:	mov	w4, wzr
  42350c:	bl	43cc04 <_obstack_memory_used@@Base+0x140c>
  423510:	cbz	w0, 423570 <wcrtomb@plt+0x1e770>
  423514:	mov	x0, x22
  423518:	bl	404170 <strlen@plt>
  42351c:	mov	x28, x0
  423520:	ldp	x0, x8, [x19]
  423524:	sub	x8, x8, x0
  423528:	cmp	x8, x28
  42352c:	b.cs	423550 <wcrtomb@plt+0x1e750>  // b.hs, b.nlast
  423530:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423534:	add	x19, x19, #0xa98
  423538:	mov	x0, x19
  42353c:	mov	x1, x28
  423540:	bl	43b5e8 <_obstack_newchunk@@Base>
  423544:	ldr	x0, [x19, #24]
  423548:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42354c:	add	x19, x19, #0xab0
  423550:	mov	x1, x22
  423554:	mov	x2, x28
  423558:	bl	4040f0 <memcpy@plt>
  42355c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423560:	ldr	x8, [x9, #2736]
  423564:	add	x8, x8, x28
  423568:	str	x8, [x9, #2736]
  42356c:	b	4237b8 <wcrtomb@plt+0x1e9b8>
  423570:	ldp	x20, x28, [x25]
  423574:	cbz	x20, 4235bc <wcrtomb@plt+0x1e7bc>
  423578:	ldp	x0, x8, [x19]
  42357c:	sub	x8, x8, x0
  423580:	cmp	x8, x20
  423584:	b.cs	4235a0 <wcrtomb@plt+0x1e7a0>  // b.hs, b.nlast
  423588:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42358c:	add	x21, x21, #0xa98
  423590:	mov	x0, x21
  423594:	mov	x1, x20
  423598:	bl	43b5e8 <_obstack_newchunk@@Base>
  42359c:	ldr	x0, [x21, #24]
  4235a0:	mov	x1, x22
  4235a4:	mov	x2, x20
  4235a8:	bl	4040f0 <memcpy@plt>
  4235ac:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4235b0:	ldr	x8, [x9, #2736]
  4235b4:	add	x8, x8, x20
  4235b8:	str	x8, [x9, #2736]
  4235bc:	ldr	w8, [x23, #16]
  4235c0:	add	x24, x24, #0x1
  4235c4:	cbz	w8, 42361c <wcrtomb@plt+0x1e81c>
  4235c8:	cmp	x24, x8
  4235cc:	b.cs	42361c <wcrtomb@plt+0x1e81c>  // b.hs, b.nlast
  4235d0:	ldp	x0, x8, [x19]
  4235d4:	sub	x8, x8, x0
  4235d8:	cmp	x8, x28
  4235dc:	b.cs	4235f8 <wcrtomb@plt+0x1e7f8>  // b.hs, b.nlast
  4235e0:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4235e4:	add	x20, x20, #0xa98
  4235e8:	mov	x0, x20
  4235ec:	mov	x1, x28
  4235f0:	bl	43b5e8 <_obstack_newchunk@@Base>
  4235f4:	ldr	x0, [x20, #24]
  4235f8:	mov	x1, x22
  4235fc:	mov	x2, x28
  423600:	bl	4040f0 <memcpy@plt>
  423604:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423608:	ldr	x8, [x9, #2736]
  42360c:	add	x22, x22, x28
  423610:	add	x8, x8, x28
  423614:	str	x8, [x9, #2736]
  423618:	b	4237c4 <wcrtomb@plt+0x1e9c4>
  42361c:	stur	x24, [x29, #-16]
  423620:	ldr	x24, [x23, #88]
  423624:	cbz	x24, 4237b4 <wcrtomb@plt+0x1e9b4>
  423628:	ldr	w8, [x24, #8]
  42362c:	cmp	w8, #0x2
  423630:	b.eq	4236c0 <wcrtomb@plt+0x1e8c0>  // b.none
  423634:	cmp	w8, #0x1
  423638:	b.eq	423708 <wcrtomb@plt+0x1e908>  // b.none
  42363c:	cbnz	w8, 4237ac <wcrtomb@plt+0x1e9ac>
  423640:	ldr	x21, [x24, #16]
  423644:	cbz	w27, 423670 <wcrtomb@plt+0x1e870>
  423648:	ldr	x2, [x24, #24]
  42364c:	mov	w0, w27
  423650:	mov	x1, x21
  423654:	bl	423ad8 <wcrtomb@plt+0x1ecd8>
  423658:	sub	w8, w27, #0x1
  42365c:	cmp	w8, #0x2
  423660:	csel	w8, wzr, w26, cc  // cc = lo, ul, last
  423664:	mov	x21, x0
  423668:	csel	w27, w26, w27, cc  // cc = lo, ul, last
  42366c:	mov	w26, w8
  423670:	ldp	x0, x8, [x19]
  423674:	ldr	x20, [x24, #24]
  423678:	sub	x8, x8, x0
  42367c:	cmp	x8, x20
  423680:	b.cs	4236a4 <wcrtomb@plt+0x1e8a4>  // b.hs, b.nlast
  423684:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423688:	add	x19, x19, #0xa98
  42368c:	mov	x0, x19
  423690:	mov	x1, x20
  423694:	bl	43b5e8 <_obstack_newchunk@@Base>
  423698:	ldr	x0, [x19, #24]
  42369c:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4236a0:	add	x19, x19, #0xab0
  4236a4:	mov	x1, x21
  4236a8:	mov	x2, x20
  4236ac:	bl	4040f0 <memcpy@plt>
  4236b0:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4236b4:	ldr	x8, [x9, #2736]
  4236b8:	add	x8, x8, x20
  4236bc:	b	4237a8 <wcrtomb@plt+0x1e9a8>
  4236c0:	ldr	w8, [x24, #16]
  4236c4:	cmp	w8, #0x4
  4236c8:	b.hi	4237ac <wcrtomb@plt+0x1e9ac>  // b.pmore
  4236cc:	mov	w9, #0x1                   	// #1
  4236d0:	lsl	w9, w9, w8
  4236d4:	mov	w10, #0x19                  	// #25
  4236d8:	tst	w9, w10
  4236dc:	b.ne	423700 <wcrtomb@plt+0x1e900>  // b.any
  4236e0:	cmp	w26, #0x4
  4236e4:	b.hi	423700 <wcrtomb@plt+0x1e900>  // b.pmore
  4236e8:	mov	w9, #0x1                   	// #1
  4236ec:	lsl	w9, w9, w26
  4236f0:	mov	w10, #0x19                  	// #25
  4236f4:	tst	w9, w10
  4236f8:	b.eq	423700 <wcrtomb@plt+0x1e900>  // b.none
  4236fc:	mov	w26, w27
  423700:	mov	w27, w8
  423704:	b	4237ac <wcrtomb@plt+0x1e9ac>
  423708:	ldr	x9, [x24, #16]
  42370c:	lsl	x8, x9, #4
  423710:	ldr	x8, [x25, x8]
  423714:	cmn	x8, #0x1
  423718:	b.eq	4237ac <wcrtomb@plt+0x1e9ac>  // b.none
  42371c:	add	x9, x25, x9, lsl #4
  423720:	ldr	x9, [x9, #8]
  423724:	cmn	x9, #0x1
  423728:	b.eq	4237ac <wcrtomb@plt+0x1e9ac>  // b.none
  42372c:	sub	x21, x9, x8
  423730:	add	x20, x22, x8
  423734:	cbz	w27, 423760 <wcrtomb@plt+0x1e960>
  423738:	mov	w0, w27
  42373c:	mov	x1, x20
  423740:	mov	x2, x21
  423744:	bl	423ad8 <wcrtomb@plt+0x1ecd8>
  423748:	sub	w8, w27, #0x1
  42374c:	cmp	w8, #0x2
  423750:	csel	w8, wzr, w26, cc  // cc = lo, ul, last
  423754:	mov	x20, x0
  423758:	csel	w27, w26, w27, cc  // cc = lo, ul, last
  42375c:	mov	w26, w8
  423760:	ldp	x0, x8, [x19]
  423764:	sub	x8, x8, x0
  423768:	cmp	x8, x21
  42376c:	b.cs	423790 <wcrtomb@plt+0x1e990>  // b.hs, b.nlast
  423770:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423774:	add	x19, x19, #0xa98
  423778:	mov	x0, x19
  42377c:	mov	x1, x21
  423780:	bl	43b5e8 <_obstack_newchunk@@Base>
  423784:	ldr	x0, [x19, #24]
  423788:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42378c:	add	x19, x19, #0xab0
  423790:	mov	x1, x20
  423794:	mov	x2, x21
  423798:	bl	4040f0 <memcpy@plt>
  42379c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4237a0:	ldr	x8, [x9, #2736]
  4237a4:	add	x8, x8, x21
  4237a8:	str	x8, [x9, #2736]
  4237ac:	ldr	x24, [x24]
  4237b0:	cbnz	x24, 423628 <wcrtomb@plt+0x1e828>
  4237b4:	ldur	x24, [x29, #-16]
  4237b8:	ldr	w8, [x23, #8]
  4237bc:	add	x22, x22, x28
  4237c0:	cbz	w8, 4237d0 <wcrtomb@plt+0x1e9d0>
  4237c4:	ldrb	w8, [x22]
  4237c8:	cbnz	w8, 4234f4 <wcrtomb@plt+0x1e6f4>
  4237cc:	b	423828 <wcrtomb@plt+0x1ea28>
  4237d0:	mov	x0, x22
  4237d4:	bl	404170 <strlen@plt>
  4237d8:	mov	x20, x0
  4237dc:	ldp	x0, x8, [x19]
  4237e0:	sub	x8, x8, x0
  4237e4:	cmp	x8, x20
  4237e8:	b.cs	42380c <wcrtomb@plt+0x1ea0c>  // b.hs, b.nlast
  4237ec:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4237f0:	add	x19, x19, #0xa98
  4237f4:	mov	x0, x19
  4237f8:	mov	x1, x20
  4237fc:	bl	43b5e8 <_obstack_newchunk@@Base>
  423800:	ldr	x0, [x19, #24]
  423804:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423808:	add	x19, x19, #0xab0
  42380c:	mov	x1, x22
  423810:	mov	x2, x20
  423814:	bl	4040f0 <memcpy@plt>
  423818:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42381c:	ldr	x8, [x9, #2736]
  423820:	add	x8, x8, x20
  423824:	str	x8, [x9, #2736]
  423828:	ldp	x8, x9, [x19]
  42382c:	cmp	x9, x8
  423830:	b.ne	423854 <wcrtomb@plt+0x1ea54>  // b.any
  423834:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423838:	add	x19, x19, #0xa98
  42383c:	mov	w1, #0x1                   	// #1
  423840:	mov	x0, x19
  423844:	bl	43b5e8 <_obstack_newchunk@@Base>
  423848:	ldr	x8, [x19, #24]
  42384c:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423850:	add	x19, x19, #0xab0
  423854:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423858:	add	x9, x8, #0x1
  42385c:	add	x20, x20, #0xaa8
  423860:	mov	x0, x25
  423864:	str	x9, [x20, #8]
  423868:	strb	wzr, [x8]
  42386c:	bl	4049b0 <free@plt>
  423870:	ldp	x22, x8, [x20]
  423874:	cmp	x8, x22
  423878:	b.ne	42388c <wcrtomb@plt+0x1ea8c>  // b.any
  42387c:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423880:	ldrb	w9, [x10, #2792]
  423884:	orr	w9, w9, #0x2
  423888:	strb	w9, [x10, #2792]
  42388c:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423890:	add	x20, x20, #0xaa0
  423894:	ldr	x9, [x20, #40]
  423898:	ldr	x10, [x20]
  42389c:	ldr	x11, [x20, #24]
  4238a0:	add	x8, x9, x8
  4238a4:	bic	x8, x8, x9
  4238a8:	sub	x12, x11, x10
  4238ac:	sub	x9, x8, x10
  4238b0:	cmp	x9, x12
  4238b4:	csel	x8, x11, x8, hi  // hi = pmore
  4238b8:	stp	x8, x8, [x20, #8]
  4238bc:	mov	w8, #0x1                   	// #1
  4238c0:	ldr	x23, [x23]
  4238c4:	cbnz	x23, 4234b4 <wcrtomb@plt+0x1e6b4>
  4238c8:	tbz	w8, #0, 423918 <wcrtomb@plt+0x1eb18>
  4238cc:	ldr	x8, [sp, #16]
  4238d0:	mov	x1, x22
  4238d4:	cbz	x8, 4238e8 <wcrtomb@plt+0x1eae8>
  4238d8:	ldr	x1, [sp]
  4238dc:	mov	x0, x22
  4238e0:	blr	x8
  4238e4:	mov	x1, x0
  4238e8:	ldr	x0, [sp, #8]
  4238ec:	bl	4186dc <wcrtomb@plt+0x138dc>
  4238f0:	ldr	x8, [x20]
  4238f4:	cmp	x22, x8
  4238f8:	b.ls	423950 <wcrtomb@plt+0x1eb50>  // b.plast
  4238fc:	ldr	x8, [x20, #24]
  423900:	cmp	x22, x8
  423904:	b.cs	423950 <wcrtomb@plt+0x1eb50>  // b.hs, b.nlast
  423908:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42390c:	add	x8, x8, #0xaa8
  423910:	stp	x22, x22, [x8]
  423914:	b	423960 <wcrtomb@plt+0x1eb60>
  423918:	ldr	x8, [sp, #16]
  42391c:	cbz	x8, 423948 <wcrtomb@plt+0x1eb48>
  423920:	ldp	x1, x19, [sp]
  423924:	mov	x0, x22
  423928:	str	xzr, [x19]
  42392c:	blr	x8
  423930:	mov	x1, x0
  423934:	mov	x0, x19
  423938:	bl	4186dc <wcrtomb@plt+0x138dc>
  42393c:	mov	x0, x22
  423940:	bl	4049b0 <free@plt>
  423944:	b	423960 <wcrtomb@plt+0x1eb60>
  423948:	mov	w0, wzr
  42394c:	b	423964 <wcrtomb@plt+0x1eb64>
  423950:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423954:	add	x0, x0, #0xa98
  423958:	mov	x1, x22
  42395c:	bl	43b760 <_obstack_free@@Base>
  423960:	mov	w0, #0x1                   	// #1
  423964:	ldp	x20, x19, [sp, #128]
  423968:	ldp	x22, x21, [sp, #112]
  42396c:	ldp	x24, x23, [sp, #96]
  423970:	ldp	x26, x25, [sp, #80]
  423974:	ldp	x28, x27, [sp, #64]
  423978:	ldp	x29, x30, [sp, #48]
  42397c:	add	sp, sp, #0x90
  423980:	ret
  423984:	mov	x2, xzr
  423988:	mov	x3, xzr
  42398c:	b	42342c <wcrtomb@plt+0x1e62c>
  423990:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423994:	ldr	x8, [x8, #2800]
  423998:	cmp	x8, #0x0
  42399c:	cset	w0, ne  // ne = any
  4239a0:	ret
  4239a4:	cmp	w1, #0x67
  4239a8:	mov	w8, #0x1                   	// #1
  4239ac:	b.gt	4239d4 <wcrtomb@plt+0x1ebd4>
  4239b0:	cmp	w1, #0x48
  4239b4:	b.eq	4239f8 <wcrtomb@plt+0x1ebf8>  // b.none
  4239b8:	cmp	w1, #0x52
  4239bc:	b.eq	423a04 <wcrtomb@plt+0x1ec04>  // b.none
  4239c0:	cmp	w1, #0x53
  4239c4:	b.ne	423a2c <wcrtomb@plt+0x1ec2c>  // b.any
  4239c8:	ldr	w8, [x0]
  4239cc:	and	w9, w8, #0xfffffffb
  4239d0:	b	423a24 <wcrtomb@plt+0x1ec24>
  4239d4:	cmp	w1, #0x68
  4239d8:	b.eq	423a10 <wcrtomb@plt+0x1ec10>  // b.none
  4239dc:	cmp	w1, #0x73
  4239e0:	b.eq	423a1c <wcrtomb@plt+0x1ec1c>  // b.none
  4239e4:	cmp	w1, #0x72
  4239e8:	b.ne	423a2c <wcrtomb@plt+0x1ec2c>  // b.any
  4239ec:	ldr	w8, [x0]
  4239f0:	orr	w9, w8, #0x1
  4239f4:	b	423a24 <wcrtomb@plt+0x1ec24>
  4239f8:	ldr	w8, [x0]
  4239fc:	and	w9, w8, #0xfffffffd
  423a00:	b	423a24 <wcrtomb@plt+0x1ec24>
  423a04:	ldr	w8, [x0]
  423a08:	and	w9, w8, #0xfffffffe
  423a0c:	b	423a24 <wcrtomb@plt+0x1ec24>
  423a10:	ldr	w8, [x0]
  423a14:	orr	w9, w8, #0x2
  423a18:	b	423a24 <wcrtomb@plt+0x1ec24>
  423a1c:	ldr	w8, [x0]
  423a20:	orr	w9, w8, #0x4
  423a24:	mov	w8, wzr
  423a28:	str	w9, [x0]
  423a2c:	mov	w0, w8
  423a30:	ret
  423a34:	stp	x29, x30, [sp, #-48]!
  423a38:	stp	x20, x19, [sp, #32]
  423a3c:	subs	x19, x2, x1
  423a40:	str	x21, [sp, #16]
  423a44:	mov	x29, sp
  423a48:	b.eq	423a80 <wcrtomb@plt+0x1ec80>  // b.none
  423a4c:	mov	x20, x1
  423a50:	bl	423a90 <wcrtomb@plt+0x1ec90>
  423a54:	mov	x21, x0
  423a58:	str	wzr, [x0, #8]
  423a5c:	add	x0, x19, #0x1
  423a60:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  423a64:	mov	x1, x20
  423a68:	mov	x2, x19
  423a6c:	str	x0, [x21, #16]
  423a70:	bl	4040f0 <memcpy@plt>
  423a74:	ldr	x8, [x21, #16]
  423a78:	strb	wzr, [x8, x19]
  423a7c:	str	x19, [x21, #24]
  423a80:	ldp	x20, x19, [sp, #32]
  423a84:	ldr	x21, [sp, #16]
  423a88:	ldp	x29, x30, [sp], #48
  423a8c:	ret
  423a90:	stp	x29, x30, [sp, #-32]!
  423a94:	str	x19, [sp, #16]
  423a98:	mov	x19, x0
  423a9c:	mov	w0, #0x20                  	// #32
  423aa0:	mov	x29, sp
  423aa4:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  423aa8:	str	xzr, [x0]
  423aac:	ldr	x8, [x19, #96]
  423ab0:	add	x9, x19, #0x58
  423ab4:	cmp	x8, #0x0
  423ab8:	csel	x8, x9, x8, eq  // eq = none
  423abc:	str	x0, [x8]
  423ac0:	ldr	x8, [x19, #104]
  423ac4:	add	x8, x8, #0x1
  423ac8:	stp	x0, x8, [x19, #96]
  423acc:	ldr	x19, [sp, #16]
  423ad0:	ldp	x29, x30, [sp], #32
  423ad4:	ret
  423ad8:	stp	x29, x30, [sp, #-48]!
  423adc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423ae0:	ldr	x9, [x8, #2832]
  423ae4:	stp	x22, x21, [sp, #16]
  423ae8:	stp	x20, x19, [sp, #32]
  423aec:	mov	x20, x2
  423af0:	mov	x19, x1
  423af4:	cmp	x9, x2
  423af8:	mov	w21, w0
  423afc:	mov	x29, sp
  423b00:	b.cs	423b20 <wcrtomb@plt+0x1ed20>  // b.hs, b.nlast
  423b04:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423b08:	ldr	x0, [x22, #2824]
  423b0c:	mov	x1, x20
  423b10:	str	x20, [x8, #2832]
  423b14:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  423b18:	str	x0, [x22, #2824]
  423b1c:	b	423b28 <wcrtomb@plt+0x1ed28>
  423b20:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423b24:	ldr	x0, [x8, #2824]
  423b28:	mov	x1, x19
  423b2c:	mov	x2, x20
  423b30:	bl	4040f0 <memcpy@plt>
  423b34:	sub	w8, w21, #0x1
  423b38:	cmp	w8, #0x3
  423b3c:	b.hi	423b60 <wcrtomb@plt+0x1ed60>  // b.pmore
  423b40:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x16808>
  423b44:	add	x9, x9, #0x1e
  423b48:	adr	x10, 423b58 <wcrtomb@plt+0x1ed58>
  423b4c:	ldrb	w11, [x9, x8]
  423b50:	add	x10, x10, x11, lsl #2
  423b54:	br	x10
  423b58:	bl	404720 <__ctype_toupper_loc@plt>
  423b5c:	b	423b70 <wcrtomb@plt+0x1ed70>
  423b60:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423b64:	ldr	x19, [x8, #2824]
  423b68:	b	423bf8 <wcrtomb@plt+0x1edf8>
  423b6c:	bl	404390 <__ctype_tolower_loc@plt>
  423b70:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423b74:	ldr	x19, [x8, #2824]
  423b78:	ldr	x8, [x0]
  423b7c:	ldrb	w9, [x19]
  423b80:	ldr	w8, [x8, x9, lsl #2]
  423b84:	strb	w8, [x19]
  423b88:	b	423bf8 <wcrtomb@plt+0x1edf8>
  423b8c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423b90:	ldr	x19, [x8, #2824]
  423b94:	cmp	x20, #0x1
  423b98:	b.lt	423bf8 <wcrtomb@plt+0x1edf8>  // b.tstop
  423b9c:	add	x20, x19, x20
  423ba0:	bl	404720 <__ctype_toupper_loc@plt>
  423ba4:	mov	x8, x19
  423ba8:	ldr	x9, [x0]
  423bac:	ldrb	w10, [x8]
  423bb0:	ldr	w9, [x9, x10, lsl #2]
  423bb4:	strb	w9, [x8], #1
  423bb8:	cmp	x8, x20
  423bbc:	b.cc	423ba8 <wcrtomb@plt+0x1eda8>  // b.lo, b.ul, b.last
  423bc0:	b	423bf8 <wcrtomb@plt+0x1edf8>
  423bc4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423bc8:	ldr	x19, [x8, #2824]
  423bcc:	cmp	x20, #0x1
  423bd0:	b.lt	423bf8 <wcrtomb@plt+0x1edf8>  // b.tstop
  423bd4:	add	x20, x19, x20
  423bd8:	bl	404390 <__ctype_tolower_loc@plt>
  423bdc:	mov	x8, x19
  423be0:	ldr	x9, [x0]
  423be4:	ldrb	w10, [x8]
  423be8:	ldr	w9, [x9, x10, lsl #2]
  423bec:	strb	w9, [x8], #1
  423bf0:	cmp	x8, x20
  423bf4:	b.cc	423be0 <wcrtomb@plt+0x1ede0>  // b.lo, b.ul, b.last
  423bf8:	mov	x0, x19
  423bfc:	ldp	x20, x19, [sp, #32]
  423c00:	ldp	x22, x21, [sp, #16]
  423c04:	ldp	x29, x30, [sp], #48
  423c08:	ret
  423c0c:	stp	x29, x30, [sp, #-32]!
  423c10:	mov	w0, #0x1                   	// #1
  423c14:	stp	x20, x19, [sp, #16]
  423c18:	mov	x29, sp
  423c1c:	bl	423c4c <wcrtomb@plt+0x1ee4c>
  423c20:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423c24:	ldr	x0, [x19, #2840]
  423c28:	cbz	x0, 423c40 <wcrtomb@plt+0x1ee40>
  423c2c:	ldr	x20, [x0]
  423c30:	bl	4049b0 <free@plt>
  423c34:	mov	x0, x20
  423c38:	str	x20, [x19, #2840]
  423c3c:	cbnz	x20, 423c2c <wcrtomb@plt+0x1ee2c>
  423c40:	ldp	x20, x19, [sp, #16]
  423c44:	ldp	x29, x30, [sp], #32
  423c48:	ret
  423c4c:	sub	sp, sp, #0x70
  423c50:	stp	x29, x30, [sp, #16]
  423c54:	stp	x28, x27, [sp, #32]
  423c58:	stp	x26, x25, [sp, #48]
  423c5c:	stp	x24, x23, [sp, #64]
  423c60:	stp	x22, x21, [sp, #80]
  423c64:	stp	x20, x19, [sp, #96]
  423c68:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423c6c:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423c70:	ldr	x21, [x26, #2848]
  423c74:	ldr	w27, [x8, #3584]
  423c78:	add	x29, sp, #0x10
  423c7c:	cbz	x21, 423e74 <wcrtomb@plt+0x1f074>
  423c80:	mov	w20, w0
  423c84:	mov	x28, xzr
  423c88:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x2b808>
  423c8c:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423c90:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423c94:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423c98:	stur	w27, [x29, #-4]
  423c9c:	mov	x27, x21
  423ca0:	ldr	x21, [x21]
  423ca4:	tbnz	w20, #0, 423cb8 <wcrtomb@plt+0x1eeb8>
  423ca8:	ldr	x8, [x19, #3440]
  423cac:	ldr	x9, [x27, #32]
  423cb0:	cmp	x8, x9
  423cb4:	b.ls	423d24 <wcrtomb@plt+0x1ef24>  // b.plast
  423cb8:	ldr	w0, [x27, #8]
  423cbc:	bl	419ad4 <wcrtomb@plt+0x14cd4>
  423cc0:	ldrb	w8, [x27, #24]
  423cc4:	cbz	w8, 423d30 <wcrtomb@plt+0x1ef30>
  423cc8:	ldr	w8, [x27, #8]
  423ccc:	ldr	x22, [x27, #16]
  423cd0:	cbz	w8, 423cf0 <wcrtomb@plt+0x1eef0>
  423cd4:	ldrb	w8, [x22]
  423cd8:	cbz	w8, 423d24 <wcrtomb@plt+0x1ef24>
  423cdc:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  423ce0:	mov	x0, x22
  423ce4:	add	x1, x1, #0x94a
  423ce8:	bl	404900 <strcmp@plt>
  423cec:	cbz	w0, 423d24 <wcrtomb@plt+0x1ef24>
  423cf0:	ldr	w0, [x23, #1944]
  423cf4:	mov	w2, #0x200                 	// #512
  423cf8:	mov	x1, x22
  423cfc:	bl	404300 <unlinkat@plt>
  423d00:	cbz	w0, 423d68 <wcrtomb@plt+0x1ef68>
  423d04:	bl	404ce0 <__errno_location@plt>
  423d08:	ldr	w8, [x0]
  423d0c:	cmp	w8, #0x2
  423d10:	b.eq	423d68 <wcrtomb@plt+0x1ef68>  // b.none
  423d14:	cmp	w8, #0x11
  423d18:	b.eq	423d24 <wcrtomb@plt+0x1ef24>  // b.none
  423d1c:	cmp	w8, #0x27
  423d20:	b.ne	423d60 <wcrtomb@plt+0x1ef60>  // b.any
  423d24:	mov	x28, x27
  423d28:	cbnz	x21, 423c9c <wcrtomb@plt+0x1ee9c>
  423d2c:	b	423da0 <wcrtomb@plt+0x1efa0>
  423d30:	ldr	w0, [x23, #1944]
  423d34:	ldr	x1, [x27, #16]
  423d38:	mov	w2, wzr
  423d3c:	bl	404300 <unlinkat@plt>
  423d40:	cbz	w0, 423d68 <wcrtomb@plt+0x1ef68>
  423d44:	bl	404ce0 <__errno_location@plt>
  423d48:	ldr	w8, [x0]
  423d4c:	cmp	w8, #0x2
  423d50:	b.eq	423d68 <wcrtomb@plt+0x1ef68>  // b.none
  423d54:	ldr	x0, [x27, #16]
  423d58:	bl	426734 <wcrtomb@plt+0x21934>
  423d5c:	b	423d68 <wcrtomb@plt+0x1ef68>
  423d60:	mov	x0, x22
  423d64:	bl	4264a8 <wcrtomb@plt+0x216a8>
  423d68:	ldr	x0, [x27, #16]
  423d6c:	bl	4049b0 <free@plt>
  423d70:	ldr	x8, [x24, #2840]
  423d74:	str	x8, [x27]
  423d78:	ldr	x8, [x25, #2864]
  423d7c:	str	x27, [x24, #2840]
  423d80:	sub	x8, x8, #0x1
  423d84:	str	x8, [x25, #2864]
  423d88:	cbz	x28, 423d98 <wcrtomb@plt+0x1ef98>
  423d8c:	str	x21, [x28]
  423d90:	cbnz	x21, 423c9c <wcrtomb@plt+0x1ee9c>
  423d94:	b	423da0 <wcrtomb@plt+0x1efa0>
  423d98:	str	x21, [x26, #2848]
  423d9c:	cbnz	x21, 423c9c <wcrtomb@plt+0x1ee9c>
  423da0:	ldr	x19, [x26, #2848]
  423da4:	cbz	x19, 423e70 <wcrtomb@plt+0x1f070>
  423da8:	ldur	w27, [x29, #-4]
  423dac:	tbz	w20, #0, 423e80 <wcrtomb@plt+0x1f080>
  423db0:	adrp	x20, 44f000 <_obstack_memory_used@@Base+0x13808>
  423db4:	add	x20, x20, #0x94a
  423db8:	mov	x22, x19
  423dbc:	ldr	w0, [x22, #8]
  423dc0:	ldr	x19, [x19]
  423dc4:	bl	419ad4 <wcrtomb@plt+0x14cd4>
  423dc8:	ldr	w8, [x22, #8]
  423dcc:	cbz	w8, 423df0 <wcrtomb@plt+0x1eff0>
  423dd0:	ldrb	w8, [x22, #24]
  423dd4:	cbz	w8, 423df0 <wcrtomb@plt+0x1eff0>
  423dd8:	ldr	x0, [x22, #16]
  423ddc:	ldrb	w8, [x0]
  423de0:	cbz	w8, 423df8 <wcrtomb@plt+0x1eff8>
  423de4:	mov	x1, x20
  423de8:	bl	404900 <strcmp@plt>
  423dec:	cbz	w0, 423df8 <wcrtomb@plt+0x1eff8>
  423df0:	ldr	x21, [x22, #16]
  423df4:	b	423e0c <wcrtomb@plt+0x1f00c>
  423df8:	bl	419c50 <wcrtomb@plt+0x14e50>
  423dfc:	ldr	w8, [x22, #8]
  423e00:	mov	x21, x0
  423e04:	sub	w0, w8, #0x1
  423e08:	bl	419ad4 <wcrtomb@plt+0x14cd4>
  423e0c:	ldr	w0, [x23, #1944]
  423e10:	mov	w2, #0x200                 	// #512
  423e14:	mov	x1, x21
  423e18:	bl	404300 <unlinkat@plt>
  423e1c:	cbz	w0, 423e38 <wcrtomb@plt+0x1f038>
  423e20:	bl	404ce0 <__errno_location@plt>
  423e24:	ldr	w8, [x0]
  423e28:	cmp	w8, #0x2
  423e2c:	b.eq	423e38 <wcrtomb@plt+0x1f038>  // b.none
  423e30:	mov	x0, x21
  423e34:	bl	4264a8 <wcrtomb@plt+0x216a8>
  423e38:	ldr	x0, [x22, #16]
  423e3c:	bl	4049b0 <free@plt>
  423e40:	ldr	x8, [x24, #2840]
  423e44:	str	x8, [x22]
  423e48:	ldr	x8, [x25, #2864]
  423e4c:	str	x22, [x24, #2840]
  423e50:	sub	x8, x8, #0x1
  423e54:	str	x8, [x25, #2864]
  423e58:	cbnz	x19, 423db8 <wcrtomb@plt+0x1efb8>
  423e5c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423e60:	str	xzr, [x8, #2856]
  423e64:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423e68:	add	x8, x8, #0xb20
  423e6c:	b	423e7c <wcrtomb@plt+0x1f07c>
  423e70:	ldur	w27, [x29, #-4]
  423e74:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423e78:	add	x8, x8, #0xb28
  423e7c:	str	xzr, [x8]
  423e80:	mov	w0, w27
  423e84:	ldp	x20, x19, [sp, #96]
  423e88:	ldp	x22, x21, [sp, #80]
  423e8c:	ldp	x24, x23, [sp, #64]
  423e90:	ldp	x26, x25, [sp, #48]
  423e94:	ldp	x28, x27, [sp, #32]
  423e98:	ldp	x29, x30, [sp, #16]
  423e9c:	add	sp, sp, #0x70
  423ea0:	b	419ad4 <wcrtomb@plt+0x14cd4>
  423ea4:	stp	x29, x30, [sp, #-64]!
  423ea8:	stp	x22, x21, [sp, #32]
  423eac:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423eb0:	ldr	x8, [x22, #2848]
  423eb4:	stp	x24, x23, [sp, #16]
  423eb8:	stp	x20, x19, [sp, #48]
  423ebc:	mov	w20, w1
  423ec0:	mov	x21, x0
  423ec4:	and	w24, w1, #0x1
  423ec8:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423ecc:	mov	x29, sp
  423ed0:	cbz	x8, 423eec <wcrtomb@plt+0x1f0ec>
  423ed4:	ldr	x9, [x23, #3440]
  423ed8:	ldr	x8, [x8, #32]
  423edc:	cmp	x9, x8
  423ee0:	b.ls	423eec <wcrtomb@plt+0x1f0ec>  // b.plast
  423ee4:	mov	w0, wzr
  423ee8:	bl	423c4c <wcrtomb@plt+0x1ee4c>
  423eec:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423ef0:	ldr	x19, [x8, #2840]
  423ef4:	cbz	x19, 423f08 <wcrtomb@plt+0x1f108>
  423ef8:	ldr	x9, [x19]
  423efc:	str	x9, [x8, #2840]
  423f00:	str	xzr, [x19]
  423f04:	b	423f14 <wcrtomb@plt+0x1f114>
  423f08:	mov	w0, #0x28                  	// #40
  423f0c:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  423f10:	mov	x19, x0
  423f14:	str	xzr, [x19]
  423f18:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423f1c:	ldr	w8, [x8, #3584]
  423f20:	mov	x0, x21
  423f24:	str	w8, [x19, #8]
  423f28:	bl	43a998 <argp_parse@@Base+0xbcdc>
  423f2c:	str	x0, [x19, #16]
  423f30:	bl	4189e0 <wcrtomb@plt+0x13be0>
  423f34:	strb	w24, [x19, #24]
  423f38:	ldr	x8, [x23, #3440]
  423f3c:	str	x8, [x19, #32]
  423f40:	tbz	w20, #0, 423f60 <wcrtomb@plt+0x1f160>
  423f44:	ldr	x0, [x19, #16]
  423f48:	ldrb	w8, [x0]
  423f4c:	cbz	w8, 423f84 <wcrtomb@plt+0x1f184>
  423f50:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  423f54:	add	x1, x1, #0x94a
  423f58:	bl	404900 <strcmp@plt>
  423f5c:	cbz	w0, 423f84 <wcrtomb@plt+0x1f184>
  423f60:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423f64:	ldr	x9, [x8, #2856]
  423f68:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423f6c:	add	x10, x10, #0xb20
  423f70:	cmp	x9, #0x0
  423f74:	csel	x9, x10, x9, eq  // eq = none
  423f78:	ldr	x10, [x9]
  423f7c:	str	x10, [x19]
  423f80:	b	423ffc <wcrtomb@plt+0x1f1fc>
  423f84:	ldr	x21, [x22, #2848]
  423f88:	cbz	x21, 423fdc <wcrtomb@plt+0x1f1dc>
  423f8c:	adrp	x20, 44f000 <_obstack_memory_used@@Base+0x13808>
  423f90:	mov	x23, xzr
  423f94:	add	x20, x20, #0x94a
  423f98:	mov	x8, x21
  423f9c:	mov	x22, x23
  423fa0:	mov	x23, x8
  423fa4:	ldrb	w8, [x8, #24]
  423fa8:	cbz	w8, 423fd4 <wcrtomb@plt+0x1f1d4>
  423fac:	ldr	x0, [x23, #16]
  423fb0:	ldrb	w8, [x0]
  423fb4:	cbz	w8, 423fc4 <wcrtomb@plt+0x1f1c4>
  423fb8:	mov	x1, x20
  423fbc:	bl	404900 <strcmp@plt>
  423fc0:	cbnz	w0, 423fd4 <wcrtomb@plt+0x1f1d4>
  423fc4:	ldr	w8, [x23, #8]
  423fc8:	ldr	w9, [x19, #8]
  423fcc:	cmp	w8, w9
  423fd0:	b.lt	424030 <wcrtomb@plt+0x1f230>  // b.tstop
  423fd4:	ldr	x8, [x23]
  423fd8:	cbnz	x8, 423f9c <wcrtomb@plt+0x1f19c>
  423fdc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423fe0:	ldr	x9, [x8, #2856]
  423fe4:	cbz	x9, 423ff0 <wcrtomb@plt+0x1f1f0>
  423fe8:	ldr	x21, [x9]
  423fec:	b	423ff8 <wcrtomb@plt+0x1f1f8>
  423ff0:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  423ff4:	add	x9, x9, #0xb20
  423ff8:	str	x21, [x19]
  423ffc:	str	x19, [x9]
  424000:	ldr	x9, [x19]
  424004:	cbnz	x9, 42400c <wcrtomb@plt+0x1f20c>
  424008:	str	x19, [x8, #2856]
  42400c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  424010:	ldr	x9, [x8, #2864]
  424014:	ldp	x20, x19, [sp, #48]
  424018:	ldp	x22, x21, [sp, #32]
  42401c:	ldp	x24, x23, [sp, #16]
  424020:	add	x9, x9, #0x1
  424024:	str	x9, [x8, #2864]
  424028:	ldp	x29, x30, [sp], #64
  42402c:	ret
  424030:	cbz	x22, 42403c <wcrtomb@plt+0x1f23c>
  424034:	ldr	x21, [x22]
  424038:	b	424044 <wcrtomb@plt+0x1f244>
  42403c:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  424040:	add	x22, x22, #0xb20
  424044:	str	x21, [x19]
  424048:	str	x19, [x22]
  42404c:	ldr	x8, [x19]
  424050:	cbnz	x8, 42400c <wcrtomb@plt+0x1f20c>
  424054:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  424058:	b	424008 <wcrtomb@plt+0x1f208>
  42405c:	sub	sp, sp, #0x100
  424060:	stp	x29, x30, [sp, #160]
  424064:	stp	x28, x27, [sp, #176]
  424068:	stp	x26, x25, [sp, #192]
  42406c:	stp	x24, x23, [sp, #208]
  424070:	stp	x22, x21, [sp, #224]
  424074:	stp	x20, x19, [sp, #240]
  424078:	add	x29, sp, #0xa0
  42407c:	bl	41ae2c <wcrtomb@plt+0x1602c>
  424080:	mov	w0, #0x2                   	// #2
  424084:	mov	w28, #0x2                   	// #2
  424088:	bl	405ed8 <wcrtomb@plt+0x10d8>
  42408c:	bl	410e00 <wcrtomb@plt+0xc000>
  424090:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  424094:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  424098:	adrp	x23, 452000 <_obstack_memory_used@@Base+0x16808>
  42409c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4240a0:	mov	w25, wzr
  4240a4:	add	x19, x19, #0xde8
  4240a8:	add	x20, x20, #0xe60
  4240ac:	add	x23, x23, #0xe6
  4240b0:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4240b4:	add	x21, x21, #0xdd0
  4240b8:	adrp	x26, 46b000 <argp_program_version_hook@@Base+0x458>
  4240bc:	adrp	x27, 46b000 <argp_program_version_hook@@Base+0x458>
  4240c0:	mov	x0, x19
  4240c4:	mov	x1, x20
  4240c8:	mov	w2, wzr
  4240cc:	bl	416490 <wcrtomb@plt+0x11690>
  4240d0:	mov	w24, w0
  4240d4:	cmp	w0, #0x5
  4240d8:	mov	w8, w0
  4240dc:	b.hi	4241f8 <wcrtomb@plt+0x1f3f8>  // b.pmore
  4240e0:	adr	x9, 4240f0 <wcrtomb@plt+0x1f2f0>
  4240e4:	ldrb	w10, [x23, x8]
  4240e8:	add	x9, x9, x10, lsl #2
  4240ec:	br	x9
  4240f0:	ldr	x0, [x22, #3560]
  4240f4:	mov	x1, x20
  4240f8:	mov	x2, x21
  4240fc:	mov	w3, wzr
  424100:	bl	4168bc <wcrtomb@plt+0x11abc>
  424104:	ldr	x8, [x22, #3560]
  424108:	mov	x1, x20
  42410c:	ldrb	w0, [x8, #156]
  424110:	bl	415e44 <wcrtomb@plt+0x11044>
  424114:	ldr	w8, [x26, #348]
  424118:	ldr	w9, [x21]
  42411c:	cmp	w8, #0x8
  424120:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  424124:	str	w9, [x8, #304]
  424128:	b.ne	42415c <wcrtomb@plt+0x1f35c>  // b.any
  42412c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  424130:	ldr	x0, [x8, #3688]
  424134:	bl	41be14 <wcrtomb@plt+0x17014>
  424138:	cbz	x0, 42415c <wcrtomb@plt+0x1f35c>
  42413c:	mov	x25, x0
  424140:	ldr	w0, [x0, #40]
  424144:	bl	419ad4 <wcrtomb@plt+0x14cd4>
  424148:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42414c:	ldr	x0, [x8, #3688]
  424150:	add	x1, sp, #0x20
  424154:	bl	419588 <wcrtomb@plt+0x14788>
  424158:	cbz	w0, 424208 <wcrtomb@plt+0x1f408>
  42415c:	bl	416cc8 <wcrtomb@plt+0x11ec8>
  424160:	b	4241f8 <wcrtomb@plt+0x1f3f8>
  424164:	ldr	x0, [x22, #3560]
  424168:	bl	40587c <wcrtomb@plt+0xa7c>
  42416c:	cmp	w25, #0x4
  424170:	b.hi	4241f8 <wcrtomb@plt+0x1f3f8>  // b.pmore
  424174:	adrp	x11, 452000 <_obstack_memory_used@@Base+0x16808>
  424178:	mov	w8, w25
  42417c:	add	x11, x11, #0xec
  424180:	adr	x9, 424190 <wcrtomb@plt+0x1f390>
  424184:	ldrb	w10, [x11, x8]
  424188:	add	x9, x9, x10, lsl #2
  42418c:	br	x9
  424190:	ldr	x8, [x27, #496]
  424194:	cbz	x8, 42419c <wcrtomb@plt+0x1f39c>
  424198:	blr	x8
  42419c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0xf808>
  4241a0:	mov	w2, #0x5                   	// #5
  4241a4:	mov	x0, xzr
  4241a8:	add	x1, x1, #0xb9f
  4241ac:	bl	404bd0 <dcgettext@plt>
  4241b0:	mov	x2, x0
  4241b4:	mov	w0, wzr
  4241b8:	mov	w1, wzr
  4241bc:	bl	4041d0 <error@plt>
  4241c0:	ldr	x8, [x27, #496]
  4241c4:	cbz	x8, 4241cc <wcrtomb@plt+0x1f3cc>
  4241c8:	blr	x8
  4241cc:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  4241d0:	mov	w2, #0x5                   	// #5
  4241d4:	mov	x0, xzr
  4241d8:	add	x1, x1, #0xa14
  4241dc:	bl	404bd0 <dcgettext@plt>
  4241e0:	mov	x2, x0
  4241e4:	mov	w0, wzr
  4241e8:	mov	w1, wzr
  4241ec:	bl	4041d0 <error@plt>
  4241f0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4241f4:	str	w28, [x8, #2944]
  4241f8:	mov	x0, x20
  4241fc:	bl	420d00 <wcrtomb@plt+0x1bf00>
  424200:	mov	w25, w24
  424204:	b	4240c0 <wcrtomb@plt+0x1f2c0>
  424208:	ldr	w8, [sp, #48]
  42420c:	and	w8, w8, #0xf000
  424210:	cmp	w8, #0x4, lsl #12
  424214:	b.ne	42429c <wcrtomb@plt+0x1f49c>  // b.any
  424218:	ldr	x0, [x25, #16]
  42421c:	mov	w1, #0x1                   	// #1
  424220:	bl	4192a0 <wcrtomb@plt+0x144a0>
  424224:	cbz	x0, 42415c <wcrtomb@plt+0x1f35c>
  424228:	mov	x27, x0
  42422c:	ldr	x0, [x25, #16]
  424230:	bl	419a54 <wcrtomb@plt+0x14c54>
  424234:	ldrb	w8, [x27]
  424238:	str	x27, [sp]
  42423c:	mov	x27, x0
  424240:	cbz	w8, 424278 <wcrtomb@plt+0x1f478>
  424244:	ldr	x28, [sp]
  424248:	mov	x0, x27
  42424c:	mov	x1, x28
  424250:	bl	419ee8 <wcrtomb@plt+0x150e8>
  424254:	ldr	w1, [x25, #40]
  424258:	mov	w2, wzr
  42425c:	mov	x3, xzr
  424260:	bl	41b050 <wcrtomb@plt+0x16250>
  424264:	mov	x0, x28
  424268:	bl	404170 <strlen@plt>
  42426c:	add	x28, x0, x28
  424270:	ldrb	w8, [x28, #1]!
  424274:	cbnz	w8, 424248 <wcrtomb@plt+0x1f448>
  424278:	mov	x0, x27
  42427c:	bl	419ec0 <wcrtomb@plt+0x150c0>
  424280:	ldr	x0, [sp]
  424284:	bl	4049b0 <free@plt>
  424288:	mov	x0, x25
  42428c:	bl	41b1dc <wcrtomb@plt+0x163dc>
  424290:	adrp	x27, 46b000 <argp_program_version_hook@@Base+0x458>
  424294:	mov	w28, #0x2                   	// #2
  424298:	b	42415c <wcrtomb@plt+0x1f35c>
  42429c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4242a0:	add	x8, x8, #0xf48
  4242a4:	ldp	x0, x1, [sp, #120]
  4242a8:	ldp	x2, x3, [x8]
  4242ac:	bl	420d98 <wcrtomb@plt+0x1bf98>
  4242b0:	cmp	w0, #0x0
  4242b4:	b.gt	42415c <wcrtomb@plt+0x1f35c>
  4242b8:	mov	x0, x25
  4242bc:	bl	41b1dc <wcrtomb@plt+0x163dc>
  4242c0:	b	42415c <wcrtomb@plt+0x1f35c>
  4242c4:	ldr	x8, [x22, #3560]
  4242c8:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4242cc:	str	x8, [x9, #3496]
  4242d0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4242d4:	add	x0, x0, #0xe60
  4242d8:	bl	420d00 <wcrtomb@plt+0x1bf00>
  4242dc:	bl	40552c <wcrtomb@plt+0x72c>
  4242e0:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4242e4:	ldr	x9, [x9, #3496]
  4242e8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4242ec:	mov	w10, #0x1                   	// #1
  4242f0:	strb	w10, [x8, #480]
  4242f4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4242f8:	str	x9, [x8, #488]
  4242fc:	bl	41be7c <wcrtomb@plt+0x1707c>
  424300:	cbz	x0, 42443c <wcrtomb@plt+0x1f63c>
  424304:	adrp	x20, 44c000 <_obstack_memory_used@@Base+0x10808>
  424308:	adrp	x25, 46b000 <argp_program_version_hook@@Base+0x458>
  42430c:	mov	w28, #0x200                 	// #512
  424310:	add	x20, x20, #0x84c
  424314:	ldr	x19, [x0, #16]
  424318:	mov	x1, xzr
  42431c:	mov	x0, x19
  424320:	bl	40d9d0 <wcrtomb@plt+0x8bd0>
  424324:	tbnz	w0, #0, 424434 <wcrtomb@plt+0x1f634>
  424328:	ldrb	w8, [x25, #80]
  42432c:	cbz	w8, 424340 <wcrtomb@plt+0x1f540>
  424330:	mov	x0, x20
  424334:	mov	x1, x19
  424338:	bl	41f8c4 <wcrtomb@plt+0x1aac4>
  42433c:	cbz	w0, 424434 <wcrtomb@plt+0x1f634>
  424340:	ldr	w8, [x26, #348]
  424344:	cmp	w8, #0x2
  424348:	b.ne	424380 <wcrtomb@plt+0x1f580>  // b.any
  42434c:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  424350:	ldr	w0, [x8, #1944]
  424354:	mov	x1, x19
  424358:	mov	w2, wzr
  42435c:	bl	404cc0 <openat@plt>
  424360:	tbnz	w0, #31, 424394 <wcrtomb@plt+0x1f594>
  424364:	add	x1, sp, #0x20
  424368:	mov	w22, w0
  42436c:	bl	44b938 <_obstack_memory_used@@Base+0x10140>
  424370:	cbz	w0, 4243a0 <wcrtomb@plt+0x1f5a0>
  424374:	mov	x0, x19
  424378:	bl	4266e4 <wcrtomb@plt+0x218e4>
  42437c:	b	424420 <wcrtomb@plt+0x1f620>
  424380:	mov	x0, xzr
  424384:	mov	x1, x19
  424388:	mov	x2, x19
  42438c:	bl	40b6b0 <wcrtomb@plt+0x68b0>
  424390:	b	424434 <wcrtomb@plt+0x1f634>
  424394:	mov	x0, x19
  424398:	bl	426218 <wcrtomb@plt+0x21418>
  42439c:	b	424434 <wcrtomb@plt+0x1f634>
  4243a0:	ldr	x27, [sp, #80]
  4243a4:	cmp	x27, #0x1
  4243a8:	b.lt	424420 <wcrtomb@plt+0x1f620>  // b.tstop
  4243ac:	mov	x21, x27
  4243b0:	bl	405574 <wcrtomb@plt+0x774>
  4243b4:	mov	x23, x0
  4243b8:	bl	4058c0 <wcrtomb@plt+0xac0>
  4243bc:	mov	x24, x0
  4243c0:	cmp	x21, x0
  4243c4:	b.cs	4243e8 <wcrtomb@plt+0x1f5e8>  // b.hs, b.nlast
  4243c8:	ands	x8, x21, #0x1ff
  4243cc:	mov	x24, x21
  4243d0:	b.eq	4243e8 <wcrtomb@plt+0x1f5e8>  // b.none
  4243d4:	add	x0, x23, x21
  4243d8:	sub	x2, x28, x8
  4243dc:	mov	w1, wzr
  4243e0:	bl	4045e0 <memset@plt>
  4243e4:	mov	x24, x21
  4243e8:	mov	w0, w22
  4243ec:	mov	x1, x23
  4243f0:	mov	x2, x24
  4243f4:	bl	439dd4 <argp_parse@@Base+0xb118>
  4243f8:	cbz	x0, 42446c <wcrtomb@plt+0x1f66c>
  4243fc:	cmn	x0, #0x1
  424400:	b.eq	4244d4 <wcrtomb@plt+0x1f6d4>  // b.none
  424404:	sub	x8, x0, #0x1
  424408:	and	x8, x8, #0xfffffffffffffe00
  42440c:	sub	x21, x21, x0
  424410:	add	x0, x23, x8
  424414:	bl	40587c <wcrtomb@plt+0xa7c>
  424418:	cmp	x21, #0x0
  42441c:	b.gt	4243b0 <wcrtomb@plt+0x1f5b0>
  424420:	mov	w0, w22
  424424:	bl	4047a0 <close@plt>
  424428:	cbz	w0, 424434 <wcrtomb@plt+0x1f634>
  42442c:	mov	x0, x19
  424430:	bl	426108 <wcrtomb@plt+0x21308>
  424434:	bl	41be7c <wcrtomb@plt+0x1707c>
  424438:	cbnz	x0, 424314 <wcrtomb@plt+0x1f514>
  42443c:	bl	40a594 <wcrtomb@plt+0x5794>
  424440:	bl	405bb0 <wcrtomb@plt+0xdb0>
  424444:	bl	423c0c <wcrtomb@plt+0x1ee0c>
  424448:	bl	41b414 <wcrtomb@plt+0x16614>
  42444c:	ldp	x20, x19, [sp, #240]
  424450:	ldp	x22, x21, [sp, #224]
  424454:	ldp	x24, x23, [sp, #208]
  424458:	ldp	x26, x25, [sp, #192]
  42445c:	ldp	x28, x27, [sp, #176]
  424460:	ldp	x29, x30, [sp, #160]
  424464:	add	sp, sp, #0x100
  424468:	ret
  42446c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  424470:	ldr	x8, [x8, #496]
  424474:	cbz	x8, 42447c <wcrtomb@plt+0x1f67c>
  424478:	blr	x8
  42447c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  424480:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  424484:	add	x1, x1, #0xf1
  424488:	add	x2, x2, #0x10c
  42448c:	mov	w4, #0x5                   	// #5
  424490:	mov	x0, xzr
  424494:	mov	x3, x21
  424498:	bl	404ad0 <dcngettext@plt>
  42449c:	mov	x20, x0
  4244a0:	mov	x0, x19
  4244a4:	bl	4398cc <argp_parse@@Base+0xac10>
  4244a8:	mov	x19, x0
  4244ac:	add	x1, sp, #0x8
  4244b0:	mov	x0, x21
  4244b4:	bl	43401c <argp_parse@@Base+0x5360>
  4244b8:	mov	x4, x0
  4244bc:	mov	w0, wzr
  4244c0:	mov	w1, wzr
  4244c4:	mov	x2, x20
  4244c8:	mov	x3, x19
  4244cc:	bl	4041d0 <error@plt>
  4244d0:	bl	40d698 <wcrtomb@plt+0x8898>
  4244d4:	sub	x1, x27, x21
  4244d8:	mov	x0, x19
  4244dc:	mov	x2, x24
  4244e0:	bl	4263e8 <wcrtomb@plt+0x215e8>
  4244e4:	bl	404850 <abort@plt>
  4244e8:	sub	sp, sp, #0x60
  4244ec:	stp	x24, x23, [sp, #48]
  4244f0:	stp	x22, x21, [sp, #64]
  4244f4:	mov	w22, w0
  4244f8:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4244fc:	and	x23, x22, #0x1
  424500:	add	x24, x24, #0x88
  424504:	ldr	x21, [x24, x23, lsl #3]
  424508:	stp	x20, x19, [sp, #80]
  42450c:	mov	x19, x2
  424510:	mov	x20, x1
  424514:	cmn	x21, #0x1
  424518:	stp	x29, x30, [sp, #32]
  42451c:	add	x29, sp, #0x20
  424520:	b.ne	424558 <wcrtomb@plt+0x1f758>  // b.any
  424524:	bl	434054 <argp_parse@@Base+0x5398>
  424528:	mov	x2, x0
  42452c:	tbz	w22, #0, 424540 <wcrtomb@plt+0x1f740>
  424530:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  424534:	add	x0, x0, #0x128
  424538:	mov	x1, x2
  42453c:	b	42454c <wcrtomb@plt+0x1f74c>
  424540:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  424544:	add	x1, x1, #0x128
  424548:	mov	x0, x2
  42454c:	bl	404b30 <iconv_open@plt>
  424550:	mov	x21, x0
  424554:	str	x0, [x24, x23, lsl #3]
  424558:	cmn	x21, #0x1
  42455c:	b.eq	4245c0 <wcrtomb@plt+0x1f7c0>  // b.none
  424560:	cbnz	x21, 424574 <wcrtomb@plt+0x1f774>
  424564:	mov	x0, x20
  424568:	bl	43a998 <argp_parse@@Base+0xbcdc>
  42456c:	str	x0, [x19]
  424570:	b	4245d4 <wcrtomb@plt+0x1f7d4>
  424574:	mov	x0, x20
  424578:	bl	404170 <strlen@plt>
  42457c:	add	x8, x0, #0x1
  424580:	mov	w0, #0x1                   	// #1
  424584:	bfi	x0, x8, #4, #60
  424588:	stp	x0, x8, [sp]
  42458c:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  424590:	mov	x22, x0
  424594:	str	x0, [sp, #16]
  424598:	sub	x1, x29, #0x8
  42459c:	add	x2, sp, #0x8
  4245a0:	add	x3, sp, #0x10
  4245a4:	mov	x4, sp
  4245a8:	mov	x0, x21
  4245ac:	stur	x20, [x29, #-8]
  4245b0:	bl	404920 <iconv@plt>
  4245b4:	cbz	x0, 4245c8 <wcrtomb@plt+0x1f7c8>
  4245b8:	mov	x0, x22
  4245bc:	bl	4049b0 <free@plt>
  4245c0:	mov	w0, wzr
  4245c4:	b	4245d8 <wcrtomb@plt+0x1f7d8>
  4245c8:	ldr	x8, [sp, #16]
  4245cc:	strb	wzr, [x8]
  4245d0:	str	x22, [x19]
  4245d4:	mov	w0, #0x1                   	// #1
  4245d8:	ldp	x20, x19, [sp, #80]
  4245dc:	ldp	x22, x21, [sp, #64]
  4245e0:	ldp	x24, x23, [sp, #48]
  4245e4:	ldp	x29, x30, [sp, #32]
  4245e8:	add	sp, sp, #0x60
  4245ec:	ret
  4245f0:	ldrb	w9, [x0]
  4245f4:	cbz	w9, 42460c <wcrtomb@plt+0x1f80c>
  4245f8:	add	x8, x0, #0x1
  4245fc:	sxtb	w9, w9
  424600:	tbnz	w9, #31, 424614 <wcrtomb@plt+0x1f814>
  424604:	ldrb	w9, [x8], #1
  424608:	cbnz	w9, 4245fc <wcrtomb@plt+0x1f7fc>
  42460c:	mov	w0, #0x1                   	// #1
  424610:	ret
  424614:	mov	w0, wzr
  424618:	ret
  42461c:	stp	x29, x30, [sp, #-48]!
  424620:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  424624:	add	x1, x1, #0xacb
  424628:	stp	x22, x21, [sp, #16]
  42462c:	stp	x20, x19, [sp, #32]
  424630:	mov	x29, sp
  424634:	mov	x19, x0
  424638:	bl	404900 <strcmp@plt>
  42463c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  424640:	cbz	w0, 424684 <wcrtomb@plt+0x1f884>
  424644:	mov	x0, x19
  424648:	bl	404170 <strlen@plt>
  42464c:	cmp	x0, #0x3
  424650:	b.cc	42468c <wcrtomb@plt+0x1f88c>  // b.lo, b.ul, b.last
  424654:	ldrh	w8, [x19]
  424658:	ldrb	w10, [x19, #2]
  42465c:	mov	w9, #0x6f6e                	// #28526
  424660:	mov	w11, #0x2d                  	// #45
  424664:	eor	w8, w8, w9
  424668:	eor	w9, w10, w11
  42466c:	orr	w8, w8, w9
  424670:	add	x12, x19, #0x3
  424674:	tst	w8, #0xffff
  424678:	cset	w22, eq  // eq = none
  42467c:	csel	x19, x12, x19, eq  // eq = none
  424680:	b	424690 <wcrtomb@plt+0x1f890>
  424684:	mov	w8, wzr
  424688:	b	4246dc <wcrtomb@plt+0x1f8dc>
  42468c:	mov	w22, wzr
  424690:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  424694:	ldr	x5, [x8, #448]
  424698:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42469c:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  4246a0:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  4246a4:	add	x20, x20, #0x9c
  4246a8:	add	x0, x0, #0x132
  4246ac:	add	x2, x2, #0x268
  4246b0:	mov	w4, #0x4                   	// #4
  4246b4:	mov	x1, x19
  4246b8:	mov	x3, x20
  4246bc:	bl	42bfcc <wcrtomb@plt+0x271cc>
  4246c0:	ldr	w8, [x20, x0, lsl #2]
  4246c4:	cbz	w22, 4246d4 <wcrtomb@plt+0x1f8d4>
  4246c8:	ldr	w9, [x21, #152]
  4246cc:	bic	w8, w9, w8
  4246d0:	b	4246dc <wcrtomb@plt+0x1f8dc>
  4246d4:	ldr	w9, [x21, #152]
  4246d8:	orr	w8, w9, w8
  4246dc:	str	w8, [x21, #152]
  4246e0:	ldp	x20, x19, [sp, #32]
  4246e4:	ldp	x22, x21, [sp, #16]
  4246e8:	ldp	x29, x30, [sp], #48
  4246ec:	ret
  4246f0:	stp	x29, x30, [sp, #-96]!
  4246f4:	stp	x28, x27, [sp, #16]
  4246f8:	stp	x26, x25, [sp, #32]
  4246fc:	stp	x24, x23, [sp, #48]
  424700:	stp	x22, x21, [sp, #64]
  424704:	stp	x20, x19, [sp, #80]
  424708:	mov	x29, sp
  42470c:	sub	sp, sp, #0xfd0
  424710:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  424714:	ldr	w8, [x8, #384]
  424718:	cmp	w8, #0x1
  42471c:	b.lt	4248d0 <wcrtomb@plt+0x1fad0>  // b.tstop
  424720:	mov	w22, w4
  424724:	mov	x20, x2
  424728:	mov	x19, x1
  42472c:	mov	w21, w0
  424730:	cmn	w0, #0x64
  424734:	add	x24, x2, #0x58
  424738:	b.eq	424748 <wcrtomb@plt+0x1f948>  // b.none
  42473c:	ldrb	w8, [x19]
  424740:	cmp	w8, #0x2f
  424744:	b.ne	4247cc <wcrtomb@plt+0x1f9cc>  // b.any
  424748:	mov	x0, x19
  42474c:	mov	x1, x24
  424750:	bl	431238 <argp_parse@@Base+0x257c>
  424754:	mov	w23, w0
  424758:	cbz	w23, 4248d0 <wcrtomb@plt+0x1fad0>
  42475c:	cmn	w23, #0x1
  424760:	b.ne	424778 <wcrtomb@plt+0x1f978>  // b.any
  424764:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  424768:	add	x0, x0, #0x338
  42476c:	mov	x1, x19
  424770:	bl	425f68 <wcrtomb@plt+0x21168>
  424774:	b	4248d0 <wcrtomb@plt+0x1fad0>
  424778:	mov	w2, #0x8000                	// #32768
  42477c:	mov	w0, w21
  424780:	mov	x1, x19
  424784:	bl	425b08 <wcrtomb@plt+0x20d08>
  424788:	cbz	x0, 424874 <wcrtomb@plt+0x1fa74>
  42478c:	mov	x1, xzr
  424790:	mov	x24, x0
  424794:	bl	4047c0 <acl_to_text@plt>
  424798:	mov	x23, x0
  42479c:	mov	x0, x24
  4247a0:	bl	404dd0 <acl_free@plt>
  4247a4:	cbz	x23, 4248bc <wcrtomb@plt+0x1fabc>
  4247a8:	mov	x0, x23
  4247ac:	add	x24, x20, #0x40
  4247b0:	bl	43a998 <argp_parse@@Base+0xbcdc>
  4247b4:	mov	x1, x24
  4247b8:	str	x0, [x20, #56]
  4247bc:	bl	425cd4 <wcrtomb@plt+0x20ed4>
  4247c0:	mov	x0, x23
  4247c4:	bl	404dd0 <acl_free@plt>
  4247c8:	b	4248cc <wcrtomb@plt+0x1facc>
  4247cc:	add	x0, sp, #0x8
  4247d0:	mov	w1, w21
  4247d4:	mov	x2, x19
  4247d8:	add	x28, sp, #0x8
  4247dc:	bl	43b86c <_obstack_memory_used@@Base+0x74>
  4247e0:	cbz	x0, 424840 <wcrtomb@plt+0x1fa40>
  4247e4:	mov	x1, x24
  4247e8:	mov	x26, x0
  4247ec:	bl	431238 <argp_parse@@Base+0x257c>
  4247f0:	mov	w23, w0
  4247f4:	bl	404ce0 <__errno_location@plt>
  4247f8:	ldr	w27, [x0]
  4247fc:	mov	x25, x0
  424800:	cmp	x26, x28
  424804:	b.eq	424810 <wcrtomb@plt+0x1fa10>  // b.none
  424808:	mov	x0, x26
  42480c:	bl	4049b0 <free@plt>
  424810:	cmn	w23, #0x1
  424814:	b.ne	424758 <wcrtomb@plt+0x1f958>  // b.any
  424818:	cmp	w27, #0x26
  42481c:	b.hi	42498c <wcrtomb@plt+0x1fb8c>  // b.pmore
  424820:	mov	w8, w27
  424824:	mov	w9, #0x1                   	// #1
  424828:	lsl	x8, x9, x8
  42482c:	mov	x9, #0x2006                	// #8198
  424830:	movk	x9, #0x10, lsl #16
  424834:	movk	x9, #0x40, lsl #32
  424838:	tst	x8, x9
  42483c:	b.eq	42498c <wcrtomb@plt+0x1fb8c>  // b.none
  424840:	add	x0, sp, #0x8
  424844:	bl	439ecc <argp_parse@@Base+0xb210>
  424848:	cbnz	w0, 4249c8 <wcrtomb@plt+0x1fbc8>
  42484c:	tbnz	w21, #31, 424890 <wcrtomb@plt+0x1fa90>
  424850:	ldr	w8, [sp, #8]
  424854:	cmp	w8, w21
  424858:	b.ne	424890 <wcrtomb@plt+0x1fa90>  // b.any
  42485c:	add	x0, sp, #0x8
  424860:	bl	439f3c <argp_parse@@Base+0xb280>
  424864:	bl	404ce0 <__errno_location@plt>
  424868:	mov	w8, #0x9                   	// #9
  42486c:	str	w8, [x0]
  424870:	b	4248b4 <wcrtomb@plt+0x1fab4>
  424874:	bl	404ce0 <__errno_location@plt>
  424878:	ldr	w8, [x0]
  42487c:	cmp	w8, #0x5f
  424880:	b.eq	4248cc <wcrtomb@plt+0x1facc>  // b.none
  424884:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  424888:	add	x0, x0, #0x3d0
  42488c:	b	4248c4 <wcrtomb@plt+0x1fac4>
  424890:	mov	w0, w21
  424894:	bl	4041e0 <fchdir@plt>
  424898:	cbz	w0, 424960 <wcrtomb@plt+0x1fb60>
  42489c:	bl	404ce0 <__errno_location@plt>
  4248a0:	ldr	w24, [x0]
  4248a4:	mov	x23, x0
  4248a8:	add	x0, sp, #0x8
  4248ac:	bl	439f3c <argp_parse@@Base+0xb280>
  4248b0:	str	w24, [x23]
  4248b4:	mov	w23, #0xffffffff            	// #-1
  4248b8:	b	424758 <wcrtomb@plt+0x1f958>
  4248bc:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  4248c0:	add	x0, x0, #0x3e0
  4248c4:	mov	x1, x19
  4248c8:	bl	425f68 <wcrtomb@plt+0x21168>
  4248cc:	cbz	w22, 4248f0 <wcrtomb@plt+0x1faf0>
  4248d0:	add	sp, sp, #0xfd0
  4248d4:	ldp	x20, x19, [sp, #80]
  4248d8:	ldp	x22, x21, [sp, #64]
  4248dc:	ldp	x24, x23, [sp, #48]
  4248e0:	ldp	x26, x25, [sp, #32]
  4248e4:	ldp	x28, x27, [sp, #16]
  4248e8:	ldp	x29, x30, [sp], #96
  4248ec:	ret
  4248f0:	mov	w2, #0x4000                	// #16384
  4248f4:	mov	w0, w21
  4248f8:	mov	x1, x19
  4248fc:	bl	425b08 <wcrtomb@plt+0x20d08>
  424900:	cbz	x0, 424944 <wcrtomb@plt+0x1fb44>
  424904:	mov	x1, xzr
  424908:	mov	x22, x0
  42490c:	bl	4047c0 <acl_to_text@plt>
  424910:	mov	x21, x0
  424914:	mov	x0, x22
  424918:	bl	404dd0 <acl_free@plt>
  42491c:	cbz	x21, 424980 <wcrtomb@plt+0x1fb80>
  424920:	mov	x0, x21
  424924:	add	x19, x20, #0x50
  424928:	bl	43a998 <argp_parse@@Base+0xbcdc>
  42492c:	mov	x1, x19
  424930:	str	x0, [x20, #72]
  424934:	bl	425cd4 <wcrtomb@plt+0x20ed4>
  424938:	mov	x0, x21
  42493c:	bl	404dd0 <acl_free@plt>
  424940:	b	4248d0 <wcrtomb@plt+0x1fad0>
  424944:	bl	404ce0 <__errno_location@plt>
  424948:	ldr	w8, [x0]
  42494c:	cmp	w8, #0x5f
  424950:	b.eq	4248d0 <wcrtomb@plt+0x1fad0>  // b.none
  424954:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  424958:	add	x0, x0, #0x3d0
  42495c:	b	42476c <wcrtomb@plt+0x1f96c>
  424960:	mov	x0, x19
  424964:	mov	x1, x24
  424968:	bl	431238 <argp_parse@@Base+0x257c>
  42496c:	mov	w23, w0
  424970:	cmn	w0, #0x1
  424974:	b.eq	42499c <wcrtomb@plt+0x1fb9c>  // b.none
  424978:	mov	w24, wzr
  42497c:	b	4249a4 <wcrtomb@plt+0x1fba4>
  424980:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  424984:	add	x0, x0, #0x3e0
  424988:	b	42476c <wcrtomb@plt+0x1f96c>
  42498c:	cmp	w27, #0x5f
  424990:	b.eq	424840 <wcrtomb@plt+0x1fa40>  // b.none
  424994:	str	w27, [x25]
  424998:	b	424758 <wcrtomb@plt+0x1f958>
  42499c:	bl	404ce0 <__errno_location@plt>
  4249a0:	ldr	w24, [x0]
  4249a4:	add	x0, sp, #0x8
  4249a8:	bl	439f24 <argp_parse@@Base+0xb268>
  4249ac:	cbnz	w0, 4249d4 <wcrtomb@plt+0x1fbd4>
  4249b0:	add	x0, sp, #0x8
  4249b4:	bl	439f3c <argp_parse@@Base+0xb280>
  4249b8:	cbz	w24, 424758 <wcrtomb@plt+0x1f958>
  4249bc:	bl	404ce0 <__errno_location@plt>
  4249c0:	str	w24, [x0]
  4249c4:	b	424758 <wcrtomb@plt+0x1f958>
  4249c8:	bl	404ce0 <__errno_location@plt>
  4249cc:	ldr	w0, [x0]
  4249d0:	bl	43497c <argp_parse@@Base+0x5cc0>
  4249d4:	bl	404ce0 <__errno_location@plt>
  4249d8:	ldr	w0, [x0]
  4249dc:	bl	4349bc <argp_parse@@Base+0x5d00>
  4249e0:	stp	x29, x30, [sp, #-48]!
  4249e4:	and	w8, w2, #0xff
  4249e8:	cmp	w8, #0x32
  4249ec:	str	x21, [sp, #16]
  4249f0:	stp	x20, x19, [sp, #32]
  4249f4:	mov	x29, sp
  4249f8:	b.eq	424a60 <wcrtomb@plt+0x1fc60>  // b.none
  4249fc:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  424a00:	ldr	w8, [x8, #384]
  424a04:	cmp	w8, #0x1
  424a08:	b.lt	424a60 <wcrtomb@plt+0x1fc60>  // b.tstop
  424a0c:	ldr	x3, [x0, #56]
  424a10:	mov	w21, w2
  424a14:	mov	w2, #0x8000                	// #32768
  424a18:	mov	w4, wzr
  424a1c:	mov	x19, x1
  424a20:	mov	x20, x0
  424a24:	bl	424a70 <wcrtomb@plt+0x1fc70>
  424a28:	and	w8, w21, #0xff
  424a2c:	cmp	w8, #0x44
  424a30:	b.eq	424a3c <wcrtomb@plt+0x1fc3c>  // b.none
  424a34:	cmp	w8, #0x35
  424a38:	b.ne	424a60 <wcrtomb@plt+0x1fc60>  // b.any
  424a3c:	ldr	x3, [x20, #72]
  424a40:	mov	x0, x20
  424a44:	mov	x1, x19
  424a48:	ldp	x20, x19, [sp, #32]
  424a4c:	ldr	x21, [sp, #16]
  424a50:	mov	w2, #0x4000                	// #16384
  424a54:	mov	w4, #0x1                   	// #1
  424a58:	ldp	x29, x30, [sp], #48
  424a5c:	b	424a70 <wcrtomb@plt+0x1fc70>
  424a60:	ldp	x20, x19, [sp, #32]
  424a64:	ldr	x21, [sp, #16]
  424a68:	ldp	x29, x30, [sp], #48
  424a6c:	ret
  424a70:	stp	x29, x30, [sp, #-96]!
  424a74:	stp	x28, x27, [sp, #16]
  424a78:	stp	x26, x25, [sp, #32]
  424a7c:	stp	x24, x23, [sp, #48]
  424a80:	stp	x22, x21, [sp, #64]
  424a84:	stp	x20, x19, [sp, #80]
  424a88:	mov	x29, sp
  424a8c:	sub	sp, sp, #0xfc0
  424a90:	mov	w20, w2
  424a94:	mov	x19, x1
  424a98:	cbz	x3, 424b84 <wcrtomb@plt+0x1fd84>
  424a9c:	ldrb	w8, [x3]
  424aa0:	mov	x21, x3
  424aa4:	cbz	w8, 424b7c <wcrtomb@plt+0x1fd7c>
  424aa8:	adrp	x23, 452000 <_obstack_memory_used@@Base+0x16808>
  424aac:	adrp	x24, 452000 <_obstack_memory_used@@Base+0x16808>
  424ab0:	add	x23, x23, #0x47a
  424ab4:	add	x24, x24, #0x477
  424ab8:	mov	x26, x21
  424abc:	mov	x22, x21
  424ac0:	mov	x0, x26
  424ac4:	mov	x1, x23
  424ac8:	bl	404ca0 <strcspn@plt>
  424acc:	add	x25, x26, x0
  424ad0:	ldrb	w8, [x25]
  424ad4:	cmp	w8, #0x3a
  424ad8:	b.ne	424b10 <wcrtomb@plt+0x1fd10>  // b.any
  424adc:	add	x25, x25, #0x1
  424ae0:	mov	x0, x25
  424ae4:	mov	x1, x23
  424ae8:	bl	404ca0 <strcspn@plt>
  424aec:	add	x25, x25, x0
  424af0:	ldrb	w8, [x25]
  424af4:	cmp	w8, #0x3a
  424af8:	b.ne	424b10 <wcrtomb@plt+0x1fd10>  // b.any
  424afc:	add	x25, x25, #0x1
  424b00:	mov	x0, x25
  424b04:	mov	x1, x23
  424b08:	bl	404ca0 <strcspn@plt>
  424b0c:	add	x25, x25, x0
  424b10:	cmp	x26, x22
  424b14:	sub	x27, x25, x26
  424b18:	b.eq	424b2c <wcrtomb@plt+0x1fd2c>  // b.none
  424b1c:	mov	x0, x22
  424b20:	mov	x1, x26
  424b24:	mov	x2, x27
  424b28:	bl	404100 <memmove@plt>
  424b2c:	ldrb	w8, [x25]
  424b30:	add	x22, x22, x27
  424b34:	cmp	w8, #0x3a
  424b38:	b.ne	424b50 <wcrtomb@plt+0x1fd50>  // b.any
  424b3c:	mov	x0, x25
  424b40:	mov	x1, x24
  424b44:	bl	404ca0 <strcspn@plt>
  424b48:	add	x25, x25, x0
  424b4c:	ldrb	w8, [x25]
  424b50:	cmp	w8, #0x2c
  424b54:	b.eq	424b60 <wcrtomb@plt+0x1fd60>  // b.none
  424b58:	cmp	w8, #0xa
  424b5c:	b.ne	424b68 <wcrtomb@plt+0x1fd68>  // b.any
  424b60:	strb	w8, [x22], #1
  424b64:	ldrb	w8, [x25, #1]!
  424b68:	mov	x26, x25
  424b6c:	cbnz	w8, 424ac0 <wcrtomb@plt+0x1fcc0>
  424b70:	cmp	x26, x22
  424b74:	b.eq	424b7c <wcrtomb@plt+0x1fd7c>  // b.none
  424b78:	strb	wzr, [x22]
  424b7c:	mov	x0, x21
  424b80:	b	424c48 <wcrtomb@plt+0x1fe48>
  424b84:	tbz	w4, #0, 424c04 <wcrtomb@plt+0x1fe04>
  424b88:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  424b8c:	ldr	w21, [x8, #1944]
  424b90:	cmn	w21, #0x64
  424b94:	b.eq	424ba4 <wcrtomb@plt+0x1fda4>  // b.none
  424b98:	ldrb	w8, [x19]
  424b9c:	cmp	w8, #0x2f
  424ba0:	b.ne	424e50 <wcrtomb@plt+0x20050>  // b.any
  424ba4:	mov	x0, x19
  424ba8:	bl	404430 <acl_delete_def_file@plt>
  424bac:	mov	w20, w0
  424bb0:	cbz	w20, 424cf4 <wcrtomb@plt+0x1fef4>
  424bb4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  424bb8:	ldrb	w8, [x8, #154]
  424bbc:	tbz	w8, #5, 424cf4 <wcrtomb@plt+0x1fef4>
  424bc0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  424bc4:	ldr	x8, [x8, #496]
  424bc8:	cbz	x8, 424bd0 <wcrtomb@plt+0x1fdd0>
  424bcc:	blr	x8
  424bd0:	bl	404ce0 <__errno_location@plt>
  424bd4:	ldr	w20, [x0]
  424bd8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  424bdc:	add	x1, x1, #0x3ef
  424be0:	mov	w2, #0x5                   	// #5
  424be4:	mov	x0, xzr
  424be8:	bl	404bd0 <dcgettext@plt>
  424bec:	mov	x2, x0
  424bf0:	mov	w0, wzr
  424bf4:	mov	w1, w20
  424bf8:	mov	x3, x19
  424bfc:	bl	4041d0 <error@plt>
  424c00:	b	424cf4 <wcrtomb@plt+0x1fef4>
  424c04:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x16808>
  424c08:	add	x9, x9, #0x47e
  424c0c:	ldr	w8, [x0, #104]
  424c10:	ldp	q0, q1, [x9]
  424c14:	stp	q0, q1, [sp]
  424c18:	tbnz	w8, #8, 424dc0 <wcrtomb@plt+0x1ffc0>
  424c1c:	tbnz	w8, #7, 424dcc <wcrtomb@plt+0x1ffcc>
  424c20:	tbnz	w8, #6, 424dd8 <wcrtomb@plt+0x1ffd8>
  424c24:	tbnz	w8, #5, 424de4 <wcrtomb@plt+0x1ffe4>
  424c28:	tbnz	w8, #4, 424df0 <wcrtomb@plt+0x1fff0>
  424c2c:	tbnz	w8, #3, 424dfc <wcrtomb@plt+0x1fffc>
  424c30:	tbnz	w8, #2, 424e08 <wcrtomb@plt+0x20008>
  424c34:	tbnz	w8, #1, 424e14 <wcrtomb@plt+0x20014>
  424c38:	tbz	w8, #0, 424c44 <wcrtomb@plt+0x1fe44>
  424c3c:	mov	w8, #0x78                  	// #120
  424c40:	strb	w8, [sp, #30]
  424c44:	mov	x0, sp
  424c48:	bl	404c00 <acl_from_text@plt>
  424c4c:	mov	x21, x0
  424c50:	cbz	x0, 424ce4 <wcrtomb@plt+0x1fee4>
  424c54:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x2b808>
  424c58:	ldr	w23, [x8, #1944]
  424c5c:	cmn	w23, #0x64
  424c60:	b.eq	424c70 <wcrtomb@plt+0x1fe70>  // b.none
  424c64:	ldrb	w8, [x19]
  424c68:	cmp	w8, #0x2f
  424c6c:	b.ne	424d14 <wcrtomb@plt+0x1ff14>  // b.any
  424c70:	mov	x0, x19
  424c74:	mov	w1, w20
  424c78:	mov	x2, x21
  424c7c:	bl	404730 <acl_set_file@plt>
  424c80:	mov	w22, w0
  424c84:	cmn	w22, #0x1
  424c88:	b.ne	424cd8 <wcrtomb@plt+0x1fed8>  // b.any
  424c8c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  424c90:	ldrb	w8, [x8, #154]
  424c94:	tbz	w8, #5, 424cd8 <wcrtomb@plt+0x1fed8>
  424c98:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  424c9c:	ldr	x8, [x8, #496]
  424ca0:	cbz	x8, 424ca8 <wcrtomb@plt+0x1fea8>
  424ca4:	blr	x8
  424ca8:	bl	404ce0 <__errno_location@plt>
  424cac:	ldr	w20, [x0]
  424cb0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  424cb4:	add	x1, x1, #0x442
  424cb8:	mov	w2, #0x5                   	// #5
  424cbc:	mov	x0, xzr
  424cc0:	bl	404bd0 <dcgettext@plt>
  424cc4:	mov	x2, x0
  424cc8:	mov	w0, wzr
  424ccc:	mov	w1, w20
  424cd0:	mov	x3, x19
  424cd4:	bl	4041d0 <error@plt>
  424cd8:	mov	x0, x21
  424cdc:	bl	404dd0 <acl_free@plt>
  424ce0:	b	424cf4 <wcrtomb@plt+0x1fef4>
  424ce4:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  424ce8:	add	x0, x0, #0x434
  424cec:	mov	x1, x19
  424cf0:	bl	425f68 <wcrtomb@plt+0x21168>
  424cf4:	add	sp, sp, #0xfc0
  424cf8:	ldp	x20, x19, [sp, #80]
  424cfc:	ldp	x22, x21, [sp, #64]
  424d00:	ldp	x24, x23, [sp, #48]
  424d04:	ldp	x26, x25, [sp, #32]
  424d08:	ldp	x28, x27, [sp, #16]
  424d0c:	ldp	x29, x30, [sp], #96
  424d10:	ret
  424d14:	mov	x0, sp
  424d18:	mov	w1, w23
  424d1c:	mov	x2, x19
  424d20:	mov	x27, sp
  424d24:	bl	43b86c <_obstack_memory_used@@Base+0x74>
  424d28:	cbz	x0, 424d8c <wcrtomb@plt+0x1ff8c>
  424d2c:	mov	w1, w20
  424d30:	mov	x2, x21
  424d34:	mov	x25, x0
  424d38:	bl	404730 <acl_set_file@plt>
  424d3c:	mov	w22, w0
  424d40:	bl	404ce0 <__errno_location@plt>
  424d44:	ldr	w26, [x0]
  424d48:	mov	x24, x0
  424d4c:	cmp	x25, x27
  424d50:	b.eq	424d5c <wcrtomb@plt+0x1ff5c>  // b.none
  424d54:	mov	x0, x25
  424d58:	bl	4049b0 <free@plt>
  424d5c:	cmn	w22, #0x1
  424d60:	b.ne	424c84 <wcrtomb@plt+0x1fe84>  // b.any
  424d64:	cmp	w26, #0x26
  424d68:	b.hi	424f44 <wcrtomb@plt+0x20144>  // b.pmore
  424d6c:	mov	w8, w26
  424d70:	mov	w9, #0x1                   	// #1
  424d74:	lsl	x8, x9, x8
  424d78:	mov	x9, #0x2006                	// #8198
  424d7c:	movk	x9, #0x10, lsl #16
  424d80:	movk	x9, #0x40, lsl #32
  424d84:	tst	x8, x9
  424d88:	b.eq	424f44 <wcrtomb@plt+0x20144>  // b.none
  424d8c:	mov	x0, sp
  424d90:	bl	439ecc <argp_parse@@Base+0xb210>
  424d94:	cbnz	w0, 424fd8 <wcrtomb@plt+0x201d8>
  424d98:	tbnz	w23, #31, 424e24 <wcrtomb@plt+0x20024>
  424d9c:	ldr	w8, [sp]
  424da0:	cmp	w8, w23
  424da4:	b.ne	424e24 <wcrtomb@plt+0x20024>  // b.any
  424da8:	mov	x0, sp
  424dac:	bl	439f3c <argp_parse@@Base+0xb280>
  424db0:	bl	404ce0 <__errno_location@plt>
  424db4:	mov	w8, #0x9                   	// #9
  424db8:	str	w8, [x0]
  424dbc:	b	424e48 <wcrtomb@plt+0x20048>
  424dc0:	mov	w9, #0x72                  	// #114
  424dc4:	strb	w9, [sp, #6]
  424dc8:	tbz	w8, #7, 424c20 <wcrtomb@plt+0x1fe20>
  424dcc:	mov	w9, #0x77                  	// #119
  424dd0:	strb	w9, [sp, #7]
  424dd4:	tbz	w8, #6, 424c24 <wcrtomb@plt+0x1fe24>
  424dd8:	mov	w9, #0x78                  	// #120
  424ddc:	strb	w9, [sp, #8]
  424de0:	tbz	w8, #5, 424c28 <wcrtomb@plt+0x1fe28>
  424de4:	mov	w9, #0x72                  	// #114
  424de8:	strb	w9, [sp, #17]
  424dec:	tbz	w8, #4, 424c2c <wcrtomb@plt+0x1fe2c>
  424df0:	mov	w9, #0x77                  	// #119
  424df4:	strb	w9, [sp, #18]
  424df8:	tbz	w8, #3, 424c30 <wcrtomb@plt+0x1fe30>
  424dfc:	mov	w9, #0x78                  	// #120
  424e00:	strb	w9, [sp, #19]
  424e04:	tbz	w8, #2, 424c34 <wcrtomb@plt+0x1fe34>
  424e08:	mov	w9, #0x72                  	// #114
  424e0c:	strb	w9, [sp, #28]
  424e10:	tbz	w8, #1, 424c38 <wcrtomb@plt+0x1fe38>
  424e14:	mov	w9, #0x77                  	// #119
  424e18:	strb	w9, [sp, #29]
  424e1c:	tbnz	w8, #0, 424c3c <wcrtomb@plt+0x1fe3c>
  424e20:	b	424c44 <wcrtomb@plt+0x1fe44>
  424e24:	mov	w0, w23
  424e28:	bl	4041e0 <fchdir@plt>
  424e2c:	cbz	w0, 424ef4 <wcrtomb@plt+0x200f4>
  424e30:	bl	404ce0 <__errno_location@plt>
  424e34:	ldr	w22, [x0]
  424e38:	mov	x20, x0
  424e3c:	mov	x0, sp
  424e40:	bl	439f3c <argp_parse@@Base+0xb280>
  424e44:	str	w22, [x20]
  424e48:	mov	w22, #0xffffffff            	// #-1
  424e4c:	b	424c84 <wcrtomb@plt+0x1fe84>
  424e50:	mov	x0, sp
  424e54:	mov	w1, w21
  424e58:	mov	x2, x19
  424e5c:	mov	x25, sp
  424e60:	bl	43b86c <_obstack_memory_used@@Base+0x74>
  424e64:	cbz	x0, 424ec0 <wcrtomb@plt+0x200c0>
  424e68:	mov	x23, x0
  424e6c:	bl	404430 <acl_delete_def_file@plt>
  424e70:	mov	w20, w0
  424e74:	bl	404ce0 <__errno_location@plt>
  424e78:	ldr	w24, [x0]
  424e7c:	mov	x22, x0
  424e80:	cmp	x23, x25
  424e84:	b.eq	424e90 <wcrtomb@plt+0x20090>  // b.none
  424e88:	mov	x0, x23
  424e8c:	bl	4049b0 <free@plt>
  424e90:	cmn	w20, #0x1
  424e94:	b.ne	424bb0 <wcrtomb@plt+0x1fdb0>  // b.any
  424e98:	cmp	w24, #0x26
  424e9c:	b.hi	424f9c <wcrtomb@plt+0x2019c>  // b.pmore
  424ea0:	mov	w8, w24
  424ea4:	mov	w9, #0x1                   	// #1
  424ea8:	lsl	x8, x9, x8
  424eac:	mov	x9, #0x2006                	// #8198
  424eb0:	movk	x9, #0x10, lsl #16
  424eb4:	movk	x9, #0x40, lsl #32
  424eb8:	tst	x8, x9
  424ebc:	b.eq	424f9c <wcrtomb@plt+0x2019c>  // b.none
  424ec0:	mov	x0, sp
  424ec4:	bl	439ecc <argp_parse@@Base+0xb210>
  424ec8:	cbnz	w0, 424fd8 <wcrtomb@plt+0x201d8>
  424ecc:	tbnz	w21, #31, 424f18 <wcrtomb@plt+0x20118>
  424ed0:	ldr	w8, [sp]
  424ed4:	cmp	w8, w21
  424ed8:	b.ne	424f18 <wcrtomb@plt+0x20118>  // b.any
  424edc:	mov	x0, sp
  424ee0:	bl	439f3c <argp_parse@@Base+0xb280>
  424ee4:	bl	404ce0 <__errno_location@plt>
  424ee8:	mov	w8, #0x9                   	// #9
  424eec:	str	w8, [x0]
  424ef0:	b	424f3c <wcrtomb@plt+0x2013c>
  424ef4:	mov	x0, x19
  424ef8:	mov	w1, w20
  424efc:	mov	x2, x21
  424f00:	bl	404730 <acl_set_file@plt>
  424f04:	mov	w22, w0
  424f08:	cmn	w0, #0x1
  424f0c:	b.eq	424f54 <wcrtomb@plt+0x20154>  // b.none
  424f10:	mov	w20, wzr
  424f14:	b	424f5c <wcrtomb@plt+0x2015c>
  424f18:	mov	w0, w21
  424f1c:	bl	4041e0 <fchdir@plt>
  424f20:	cbz	w0, 424f80 <wcrtomb@plt+0x20180>
  424f24:	bl	404ce0 <__errno_location@plt>
  424f28:	ldr	w21, [x0]
  424f2c:	mov	x20, x0
  424f30:	mov	x0, sp
  424f34:	bl	439f3c <argp_parse@@Base+0xb280>
  424f38:	str	w21, [x20]
  424f3c:	mov	w20, #0xffffffff            	// #-1
  424f40:	b	424bb0 <wcrtomb@plt+0x1fdb0>
  424f44:	cmp	w26, #0x5f
  424f48:	b.eq	424d8c <wcrtomb@plt+0x1ff8c>  // b.none
  424f4c:	str	w26, [x24]
  424f50:	b	424c84 <wcrtomb@plt+0x1fe84>
  424f54:	bl	404ce0 <__errno_location@plt>
  424f58:	ldr	w20, [x0]
  424f5c:	mov	x0, sp
  424f60:	bl	439f24 <argp_parse@@Base+0xb268>
  424f64:	cbnz	w0, 424fe4 <wcrtomb@plt+0x201e4>
  424f68:	mov	x0, sp
  424f6c:	bl	439f3c <argp_parse@@Base+0xb280>
  424f70:	cbz	w20, 424c84 <wcrtomb@plt+0x1fe84>
  424f74:	bl	404ce0 <__errno_location@plt>
  424f78:	str	w20, [x0]
  424f7c:	b	424c84 <wcrtomb@plt+0x1fe84>
  424f80:	mov	x0, x19
  424f84:	bl	404430 <acl_delete_def_file@plt>
  424f88:	mov	w20, w0
  424f8c:	cmn	w0, #0x1
  424f90:	b.eq	424fac <wcrtomb@plt+0x201ac>  // b.none
  424f94:	mov	w21, wzr
  424f98:	b	424fb4 <wcrtomb@plt+0x201b4>
  424f9c:	cmp	w24, #0x5f
  424fa0:	b.eq	424ec0 <wcrtomb@plt+0x200c0>  // b.none
  424fa4:	str	w24, [x22]
  424fa8:	b	424bb0 <wcrtomb@plt+0x1fdb0>
  424fac:	bl	404ce0 <__errno_location@plt>
  424fb0:	ldr	w21, [x0]
  424fb4:	mov	x0, sp
  424fb8:	bl	439f24 <argp_parse@@Base+0xb268>
  424fbc:	cbnz	w0, 424fe4 <wcrtomb@plt+0x201e4>
  424fc0:	mov	x0, sp
  424fc4:	bl	439f3c <argp_parse@@Base+0xb280>
  424fc8:	cbz	w21, 424bb0 <wcrtomb@plt+0x1fdb0>
  424fcc:	bl	404ce0 <__errno_location@plt>
  424fd0:	str	w21, [x0]
  424fd4:	b	424bb0 <wcrtomb@plt+0x1fdb0>
  424fd8:	bl	404ce0 <__errno_location@plt>
  424fdc:	ldr	w0, [x0]
  424fe0:	bl	43497c <argp_parse@@Base+0x5cc0>
  424fe4:	bl	404ce0 <__errno_location@plt>
  424fe8:	ldr	w0, [x0]
  424fec:	bl	4349bc <argp_parse@@Base+0x5d00>
  424ff0:	stp	x29, x30, [sp, #-32]!
  424ff4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  424ff8:	add	x8, x8, #0xb38
  424ffc:	tst	w1, #0x1
  425000:	add	x9, x8, #0x18
  425004:	stp	x20, x19, [sp, #16]
  425008:	csel	x20, x8, x9, ne  // ne = any
  42500c:	ldp	x9, x8, [x20, #8]
  425010:	mov	x19, x0
  425014:	mov	x29, sp
  425018:	cmp	x8, x9
  42501c:	b.ne	425050 <wcrtomb@plt+0x20250>  // b.any
  425020:	cbnz	x8, 42502c <wcrtomb@plt+0x2022c>
  425024:	mov	w8, #0x4                   	// #4
  425028:	str	x8, [x20, #8]
  42502c:	ldr	x0, [x20]
  425030:	cbz	x0, 425058 <wcrtomb@plt+0x20258>
  425034:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  425038:	movk	x9, #0xaaa, lsl #48
  42503c:	cmp	x8, x9
  425040:	b.cs	42508c <wcrtomb@plt+0x2028c>  // b.hs, b.nlast
  425044:	add	x8, x8, x8, lsr #1
  425048:	add	x8, x8, #0x1
  42504c:	b	425060 <wcrtomb@plt+0x20260>
  425050:	ldr	x0, [x20]
  425054:	b	425074 <wcrtomb@plt+0x20274>
  425058:	lsr	x9, x8, #60
  42505c:	cbnz	x9, 42508c <wcrtomb@plt+0x2028c>
  425060:	lsl	x1, x8, #3
  425064:	str	x8, [x20, #8]
  425068:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  42506c:	ldr	x8, [x20, #16]
  425070:	str	x0, [x20]
  425074:	add	x9, x8, #0x1
  425078:	str	x9, [x20, #16]
  42507c:	str	x19, [x0, x8, lsl #3]
  425080:	ldp	x20, x19, [sp, #16]
  425084:	ldp	x29, x30, [sp], #32
  425088:	ret
  42508c:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  425090:	stp	x29, x30, [sp, #-16]!
  425094:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  425098:	ldr	x8, [x8, #2880]
  42509c:	mov	x29, sp
  4250a0:	cbz	x8, 4250b0 <wcrtomb@plt+0x202b0>
  4250a4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4250a8:	ldr	x0, [x8, #2872]
  4250ac:	bl	4049b0 <free@plt>
  4250b0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4250b4:	ldr	x8, [x8, #2904]
  4250b8:	cbz	x8, 4250cc <wcrtomb@plt+0x202cc>
  4250bc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4250c0:	ldr	x0, [x8, #2896]
  4250c4:	ldp	x29, x30, [sp], #16
  4250c8:	b	4049b0 <free@plt>
  4250cc:	ldp	x29, x30, [sp], #16
  4250d0:	ret
  4250d4:	sub	sp, sp, #0x70
  4250d8:	stp	x29, x30, [sp, #16]
  4250dc:	stp	x28, x27, [sp, #32]
  4250e0:	stp	x26, x25, [sp, #48]
  4250e4:	stp	x24, x23, [sp, #64]
  4250e8:	stp	x22, x21, [sp, #80]
  4250ec:	stp	x20, x19, [sp, #96]
  4250f0:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4250f4:	ldr	w8, [x8, #144]
  4250f8:	add	x29, sp, #0x10
  4250fc:	str	x2, [sp, #8]
  425100:	cmp	w8, #0x1
  425104:	b.lt	425374 <wcrtomb@plt+0x20574>  // b.tstop
  425108:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42510c:	ldr	x2, [x24, #2920]
  425110:	mov	w20, w3
  425114:	mov	x19, x1
  425118:	mov	w22, w0
  42511c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  425120:	cbnz	x2, 42514c <wcrtomb@plt+0x2034c>
  425124:	ldr	x1, [x21, #256]
  425128:	cbz	x1, 425134 <wcrtomb@plt+0x20334>
  42512c:	tbz	x1, #63, 425138 <wcrtomb@plt+0x20338>
  425130:	b	4251fc <wcrtomb@plt+0x203fc>
  425134:	mov	w1, #0x80                  	// #128
  425138:	mov	x0, xzr
  42513c:	str	x1, [x21, #256]
  425140:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  425144:	mov	x2, x0
  425148:	str	x0, [x24, #2920]
  42514c:	mov	x28, #0x5555555555555555    	// #6148914691236517205
  425150:	movk	x28, #0x5554
  425154:	ldr	x3, [x21, #256]
  425158:	cbz	w20, 425170 <wcrtomb@plt+0x20370>
  42515c:	mov	w0, w20
  425160:	mov	x1, x2
  425164:	mov	x2, x3
  425168:	bl	404b90 <flistxattr@plt>
  42516c:	b	42517c <wcrtomb@plt+0x2037c>
  425170:	mov	w0, w22
  425174:	mov	x1, x19
  425178:	bl	42ba84 <wcrtomb@plt+0x26c84>
  42517c:	cmn	x0, #0x1
  425180:	b.ne	4251d8 <wcrtomb@plt+0x203d8>  // b.any
  425184:	bl	404ce0 <__errno_location@plt>
  425188:	ldr	w8, [x0]
  42518c:	cmp	w8, #0x22
  425190:	b.ne	425200 <wcrtomb@plt+0x20400>  // b.any
  425194:	ldr	x0, [x24, #2920]
  425198:	ldr	x1, [x21, #256]
  42519c:	cbz	x0, 4251b4 <wcrtomb@plt+0x203b4>
  4251a0:	cmp	x1, x28
  4251a4:	b.cs	4251fc <wcrtomb@plt+0x203fc>  // b.hs, b.nlast
  4251a8:	add	x8, x1, x1, lsr #1
  4251ac:	add	x1, x8, #0x1
  4251b0:	b	4251c4 <wcrtomb@plt+0x203c4>
  4251b4:	cbz	x1, 4251c0 <wcrtomb@plt+0x203c0>
  4251b8:	tbz	x1, #63, 4251c4 <wcrtomb@plt+0x203c4>
  4251bc:	b	4251fc <wcrtomb@plt+0x203fc>
  4251c0:	mov	w1, #0x80                  	// #128
  4251c4:	str	x1, [x21, #256]
  4251c8:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  4251cc:	mov	x2, x0
  4251d0:	str	x0, [x24, #2920]
  4251d4:	b	425154 <wcrtomb@plt+0x20354>
  4251d8:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4251dc:	ldr	x27, [x21, #2928]
  4251e0:	ldr	x24, [x24, #2920]
  4251e4:	mov	x23, x0
  4251e8:	cbnz	x27, 425254 <wcrtomb@plt+0x20454>
  4251ec:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4251f0:	ldr	x1, [x8, #264]
  4251f4:	cbz	x1, 42523c <wcrtomb@plt+0x2043c>
  4251f8:	tbz	x1, #63, 425240 <wcrtomb@plt+0x20440>
  4251fc:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  425200:	cmp	w20, #0x0
  425204:	mov	x1, x19
  425208:	ldp	x20, x19, [sp, #96]
  42520c:	ldp	x22, x21, [sp, #80]
  425210:	ldp	x24, x23, [sp, #64]
  425214:	ldp	x26, x25, [sp, #48]
  425218:	ldp	x28, x27, [sp, #32]
  42521c:	ldp	x29, x30, [sp, #16]
  425220:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  425224:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x16808>
  425228:	add	x8, x8, #0x355
  42522c:	add	x9, x9, #0x348
  425230:	csel	x0, x9, x8, eq  // eq = none
  425234:	add	sp, sp, #0x70
  425238:	b	425f68 <wcrtomb@plt+0x21168>
  42523c:	mov	w1, #0x80                  	// #128
  425240:	mov	x0, xzr
  425244:	str	x1, [x8, #264]
  425248:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  42524c:	mov	x27, x0
  425250:	str	x0, [x21, #2928]
  425254:	cmp	x23, #0x1
  425258:	b.lt	425374 <wcrtomb@plt+0x20574>  // b.tstop
  42525c:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  425260:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x16808>
  425264:	add	x8, x8, #0x36c
  425268:	add	x9, x9, #0x360
  42526c:	cmp	w20, #0x0
  425270:	csel	x8, x9, x8, eq  // eq = none
  425274:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x2e808>
  425278:	str	x8, [sp]
  42527c:	mov	x0, x24
  425280:	bl	404170 <strlen@plt>
  425284:	mov	x26, x0
  425288:	ldr	x4, [x25, #264]
  42528c:	cbz	w20, 4252a8 <wcrtomb@plt+0x204a8>
  425290:	mov	w0, w20
  425294:	mov	x1, x24
  425298:	mov	x2, x27
  42529c:	mov	x3, x4
  4252a0:	bl	404a10 <fgetxattr@plt>
  4252a4:	b	4252bc <wcrtomb@plt+0x204bc>
  4252a8:	mov	w0, w22
  4252ac:	mov	x1, x19
  4252b0:	mov	x2, x24
  4252b4:	mov	x3, x27
  4252b8:	bl	42b6b4 <wcrtomb@plt+0x268b4>
  4252bc:	cmn	x0, #0x1
  4252c0:	b.ne	425318 <wcrtomb@plt+0x20518>  // b.any
  4252c4:	bl	404ce0 <__errno_location@plt>
  4252c8:	ldr	w8, [x0]
  4252cc:	cmp	w8, #0x22
  4252d0:	b.ne	425344 <wcrtomb@plt+0x20544>  // b.any
  4252d4:	ldr	x0, [x21, #2928]
  4252d8:	ldr	x1, [x25, #264]
  4252dc:	cbz	x0, 4252f4 <wcrtomb@plt+0x204f4>
  4252e0:	cmp	x1, x28
  4252e4:	b.cs	4251fc <wcrtomb@plt+0x203fc>  // b.hs, b.nlast
  4252e8:	add	x8, x1, x1, lsr #1
  4252ec:	add	x1, x8, #0x1
  4252f0:	b	425304 <wcrtomb@plt+0x20504>
  4252f4:	cbz	x1, 425300 <wcrtomb@plt+0x20500>
  4252f8:	tbz	x1, #63, 425304 <wcrtomb@plt+0x20504>
  4252fc:	b	4251fc <wcrtomb@plt+0x203fc>
  425300:	mov	w1, #0x80                  	// #128
  425304:	str	x1, [x25, #264]
  425308:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  42530c:	mov	x27, x0
  425310:	str	x0, [x21, #2928]
  425314:	b	425288 <wcrtomb@plt+0x20488>
  425318:	mov	x27, x0
  42531c:	mov	w1, #0x1                   	// #1
  425320:	mov	x0, x24
  425324:	bl	425394 <wcrtomb@plt+0x20594>
  425328:	tbnz	w0, #0, 425358 <wcrtomb@plt+0x20558>
  42532c:	ldr	x2, [x21, #2928]
  425330:	ldr	x0, [sp, #8]
  425334:	mov	x1, x24
  425338:	mov	x3, x27
  42533c:	bl	410eb8 <wcrtomb@plt+0xc0b8>
  425340:	b	425358 <wcrtomb@plt+0x20558>
  425344:	cmp	w8, #0x3d
  425348:	b.eq	425358 <wcrtomb@plt+0x20558>  // b.none
  42534c:	ldr	x0, [sp]
  425350:	mov	x1, x19
  425354:	bl	425f68 <wcrtomb@plt+0x21168>
  425358:	add	x8, x26, #0x1
  42535c:	sub	x23, x23, x8
  425360:	cmp	x23, #0x1
  425364:	b.lt	425374 <wcrtomb@plt+0x20574>  // b.tstop
  425368:	ldr	x27, [x21, #2928]
  42536c:	add	x24, x24, x8
  425370:	b	42527c <wcrtomb@plt+0x2047c>
  425374:	ldp	x20, x19, [sp, #96]
  425378:	ldp	x22, x21, [sp, #80]
  42537c:	ldp	x24, x23, [sp, #64]
  425380:	ldp	x26, x25, [sp, #48]
  425384:	ldp	x28, x27, [sp, #32]
  425388:	ldp	x29, x30, [sp, #16]
  42538c:	add	sp, sp, #0x70
  425390:	ret
  425394:	stp	x29, x30, [sp, #-32]!
  425398:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42539c:	ldr	x8, [x8, #2880]
  4253a0:	str	x19, [sp, #16]
  4253a4:	mov	x19, x0
  4253a8:	mov	x29, sp
  4253ac:	cbz	x8, 4253c8 <wcrtomb@plt+0x205c8>
  4253b0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4253b4:	add	x1, x1, #0xb38
  4253b8:	mov	x0, x19
  4253bc:	bl	425d50 <wcrtomb@plt+0x20f50>
  4253c0:	tbz	w0, #0, 4253e4 <wcrtomb@plt+0x205e4>
  4253c4:	b	4253ec <wcrtomb@plt+0x205ec>
  4253c8:	tbnz	w1, #0, 4253ec <wcrtomb@plt+0x205ec>
  4253cc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  4253d0:	add	x1, x1, #0x49e
  4253d4:	mov	w2, #0x5                   	// #5
  4253d8:	mov	x0, x19
  4253dc:	bl	404580 <strncmp@plt>
  4253e0:	cbz	w0, 4253ec <wcrtomb@plt+0x205ec>
  4253e4:	mov	w0, #0x1                   	// #1
  4253e8:	b	425414 <wcrtomb@plt+0x20614>
  4253ec:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4253f0:	ldr	x8, [x8, #2904]
  4253f4:	cbz	x8, 425410 <wcrtomb@plt+0x20610>
  4253f8:	mov	x0, x19
  4253fc:	ldr	x19, [sp, #16]
  425400:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x2e808>
  425404:	add	x1, x1, #0xb50
  425408:	ldp	x29, x30, [sp], #32
  42540c:	b	425d50 <wcrtomb@plt+0x20f50>
  425410:	mov	w0, wzr
  425414:	ldr	x19, [sp, #16]
  425418:	ldp	x29, x30, [sp], #32
  42541c:	ret
  425420:	stp	x29, x30, [sp, #-32]!
  425424:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  425428:	ldr	w8, [x8, #472]
  42542c:	str	x19, [sp, #16]
  425430:	mov	x29, sp
  425434:	cmp	w8, #0x1
  425438:	b.lt	425484 <wcrtomb@plt+0x20684>  // b.tstop
  42543c:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  425440:	ldrb	w8, [x19, #2936]
  425444:	tbnz	w8, #0, 42547c <wcrtomb@plt+0x2067c>
  425448:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  42544c:	ldr	x8, [x8, #496]
  425450:	cbz	x8, 425458 <wcrtomb@plt+0x20658>
  425454:	blr	x8
  425458:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42545c:	add	x1, x1, #0x376
  425460:	mov	w2, #0x5                   	// #5
  425464:	mov	x0, xzr
  425468:	bl	404bd0 <dcgettext@plt>
  42546c:	mov	x2, x0
  425470:	mov	w0, wzr
  425474:	mov	w1, wzr
  425478:	bl	4041d0 <error@plt>
  42547c:	mov	w8, #0x1                   	// #1
  425480:	strb	w8, [x19, #2936]
  425484:	ldr	x19, [sp, #16]
  425488:	ldp	x29, x30, [sp], #32
  42548c:	ret
  425490:	stp	x29, x30, [sp, #-32]!
  425494:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  425498:	ldr	w8, [x8, #472]
  42549c:	str	x19, [sp, #16]
  4254a0:	mov	x29, sp
  4254a4:	cmp	w8, #0x1
  4254a8:	b.lt	4254f4 <wcrtomb@plt+0x206f4>  // b.tstop
  4254ac:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4254b0:	ldrb	w8, [x19, #2940]
  4254b4:	tbnz	w8, #0, 4254ec <wcrtomb@plt+0x206ec>
  4254b8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4254bc:	ldr	x8, [x8, #496]
  4254c0:	cbz	x8, 4254c8 <wcrtomb@plt+0x206c8>
  4254c4:	blr	x8
  4254c8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  4254cc:	add	x1, x1, #0x376
  4254d0:	mov	w2, #0x5                   	// #5
  4254d4:	mov	x0, xzr
  4254d8:	bl	404bd0 <dcgettext@plt>
  4254dc:	mov	x2, x0
  4254e0:	mov	w0, wzr
  4254e4:	mov	w1, wzr
  4254e8:	bl	4041d0 <error@plt>
  4254ec:	mov	w8, #0x1                   	// #1
  4254f0:	strb	w8, [x19, #2940]
  4254f4:	ldr	x19, [sp, #16]
  4254f8:	ldp	x29, x30, [sp], #32
  4254fc:	ret
  425500:	stp	x29, x30, [sp, #-96]!
  425504:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  425508:	ldr	w8, [x8, #144]
  42550c:	stp	x28, x27, [sp, #16]
  425510:	stp	x26, x25, [sp, #32]
  425514:	stp	x24, x23, [sp, #48]
  425518:	cmp	w8, #0x1
  42551c:	stp	x22, x21, [sp, #64]
  425520:	stp	x20, x19, [sp, #80]
  425524:	mov	x29, sp
  425528:	b.lt	425660 <wcrtomb@plt+0x20860>  // b.tstop
  42552c:	ldr	x8, [x0, #328]
  425530:	mov	x22, x0
  425534:	cbz	x8, 425660 <wcrtomb@plt+0x20860>
  425538:	adrp	x23, 452000 <_obstack_memory_used@@Base+0x16808>
  42553c:	mov	w19, w3
  425540:	mov	w20, w2
  425544:	mov	x21, x1
  425548:	mov	x28, xzr
  42554c:	mov	x24, xzr
  425550:	add	x23, x23, #0x397
  425554:	adrp	x27, 467000 <_obstack_memory_used@@Base+0x2b808>
  425558:	ldr	x8, [x22, #336]
  42555c:	and	w9, w20, #0xff
  425560:	cmp	w9, #0x30
  425564:	ldr	x8, [x8, x28]
  425568:	add	x25, x8, #0xd
  42556c:	b.ne	42558c <wcrtomb@plt+0x2078c>  // b.any
  425570:	mov	x0, x25
  425574:	mov	x1, x23
  425578:	bl	404900 <strcmp@plt>
  42557c:	cmp	w0, #0x0
  425580:	cset	w8, ne  // ne = any
  425584:	cmp	w8, w19
  425588:	b.eq	42564c <wcrtomb@plt+0x2084c>  // b.none
  42558c:	mov	x0, x25
  425590:	mov	w1, wzr
  425594:	bl	425394 <wcrtomb@plt+0x20594>
  425598:	tbnz	w0, #0, 42564c <wcrtomb@plt+0x2084c>
  42559c:	ldr	x8, [x22, #336]
  4255a0:	add	x8, x8, x28
  4255a4:	ldr	x3, [x8, #8]
  4255a8:	cbz	x3, 42564c <wcrtomb@plt+0x2084c>
  4255ac:	ldr	x4, [x8, #16]
  4255b0:	ldr	w0, [x27, #1944]
  4255b4:	and	w8, w20, #0xff
  4255b8:	mov	x1, x21
  4255bc:	mov	x2, x25
  4255c0:	cmp	w8, #0x32
  4255c4:	b.ne	4255dc <wcrtomb@plt+0x207dc>  // b.any
  4255c8:	mov	w5, wzr
  4255cc:	bl	42b2bc <wcrtomb@plt+0x264bc>
  4255d0:	adrp	x26, 452000 <_obstack_memory_used@@Base+0x16808>
  4255d4:	add	x26, x26, #0x4af
  4255d8:	b	4255ec <wcrtomb@plt+0x207ec>
  4255dc:	mov	w5, wzr
  4255e0:	bl	42b0b4 <wcrtomb@plt+0x262b4>
  4255e4:	adrp	x26, 452000 <_obstack_memory_used@@Base+0x16808>
  4255e8:	add	x26, x26, #0x4a4
  4255ec:	cmn	w0, #0x1
  4255f0:	b.ne	42564c <wcrtomb@plt+0x2084c>  // b.any
  4255f4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4255f8:	ldrb	w8, [x8, #154]
  4255fc:	tbz	w8, #5, 42564c <wcrtomb@plt+0x2084c>
  425600:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  425604:	ldr	x8, [x8, #496]
  425608:	cbz	x8, 425610 <wcrtomb@plt+0x20810>
  42560c:	blr	x8
  425610:	bl	404ce0 <__errno_location@plt>
  425614:	ldr	w27, [x0]
  425618:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42561c:	mov	w2, #0x5                   	// #5
  425620:	mov	x0, xzr
  425624:	add	x1, x1, #0x4b9
  425628:	bl	404bd0 <dcgettext@plt>
  42562c:	mov	x2, x0
  425630:	mov	w0, wzr
  425634:	mov	w1, w27
  425638:	mov	x3, x26
  42563c:	mov	x4, x25
  425640:	mov	x5, x21
  425644:	bl	4041d0 <error@plt>
  425648:	adrp	x27, 467000 <_obstack_memory_used@@Base+0x2b808>
  42564c:	ldr	x8, [x22, #328]
  425650:	add	x24, x24, #0x1
  425654:	add	x28, x28, #0x18
  425658:	cmp	x24, x8
  42565c:	b.cc	425558 <wcrtomb@plt+0x20758>  // b.lo, b.ul, b.last
  425660:	ldp	x20, x19, [sp, #80]
  425664:	ldp	x22, x21, [sp, #64]
  425668:	ldp	x24, x23, [sp, #48]
  42566c:	ldp	x26, x25, [sp, #32]
  425670:	ldp	x28, x27, [sp, #16]
  425674:	ldp	x29, x30, [sp], #96
  425678:	ret
  42567c:	stp	x29, x30, [sp, #-64]!
  425680:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  425684:	ldr	w8, [x8, #132]
  425688:	stp	x20, x19, [sp, #48]
  42568c:	mov	x19, x1
  425690:	stp	x24, x23, [sp, #16]
  425694:	cmp	w8, #0x1
  425698:	stp	x22, x21, [sp, #32]
  42569c:	mov	x29, sp
  4256a0:	b.gt	4256ac <wcrtomb@plt+0x208ac>
  4256a4:	strb	wzr, [x19]
  4256a8:	b	42577c <wcrtomb@plt+0x2097c>
  4256ac:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4256b0:	ldr	w9, [x8, #144]
  4256b4:	mov	x20, x0
  4256b8:	adrp	x22, 46b000 <argp_program_version_hook@@Base+0x458>
  4256bc:	adrp	x21, 46b000 <argp_program_version_hook@@Base+0x458>
  4256c0:	cmp	w9, #0x1
  4256c4:	b.ge	4256e0 <wcrtomb@plt+0x208e0>  // b.tcont
  4256c8:	ldr	w9, [x22, #472]
  4256cc:	cmp	w9, #0x0
  4256d0:	b.gt	4256e0 <wcrtomb@plt+0x208e0>
  4256d4:	ldr	w9, [x21, #384]
  4256d8:	cmp	w9, #0x1
  4256dc:	b.lt	42573c <wcrtomb@plt+0x2093c>  // b.tstop
  4256e0:	mov	w9, #0x20                  	// #32
  4256e4:	strh	w9, [x19]
  4256e8:	ldr	w8, [x8, #144]
  4256ec:	cmp	w8, #0x1
  4256f0:	b.lt	42573c <wcrtomb@plt+0x2093c>  // b.tstop
  4256f4:	ldr	x8, [x20, #328]
  4256f8:	cbz	x8, 42573c <wcrtomb@plt+0x2093c>
  4256fc:	mov	x23, xzr
  425700:	mov	x24, xzr
  425704:	ldr	x8, [x20, #336]
  425708:	mov	w1, wzr
  42570c:	ldr	x8, [x8, x23]
  425710:	add	x0, x8, #0xd
  425714:	bl	425394 <wcrtomb@plt+0x20594>
  425718:	tbz	w0, #0, 425734 <wcrtomb@plt+0x20934>
  42571c:	ldr	x8, [x20, #328]
  425720:	add	x24, x24, #0x1
  425724:	add	x23, x23, #0x18
  425728:	cmp	x8, x24
  42572c:	b.hi	425704 <wcrtomb@plt+0x20904>  // b.pmore
  425730:	b	42573c <wcrtomb@plt+0x2093c>
  425734:	mov	w8, #0x2a                  	// #42
  425738:	strb	w8, [x19]
  42573c:	ldr	w8, [x22, #472]
  425740:	cmp	w8, #0x1
  425744:	b.lt	425758 <wcrtomb@plt+0x20958>  // b.tstop
  425748:	ldr	x8, [x20, #48]
  42574c:	cbz	x8, 425758 <wcrtomb@plt+0x20958>
  425750:	mov	w8, #0x2e                  	// #46
  425754:	strb	w8, [x19]
  425758:	ldr	w8, [x21, #384]
  42575c:	cmp	w8, #0x1
  425760:	b.lt	42577c <wcrtomb@plt+0x2097c>  // b.tstop
  425764:	ldr	x8, [x20, #64]
  425768:	cbnz	x8, 425774 <wcrtomb@plt+0x20974>
  42576c:	ldr	x8, [x20, #80]
  425770:	cbz	x8, 42577c <wcrtomb@plt+0x2097c>
  425774:	mov	w8, #0x2b                  	// #43
  425778:	strb	w8, [x19]
  42577c:	ldp	x20, x19, [sp, #48]
  425780:	ldp	x22, x21, [sp, #32]
  425784:	ldp	x24, x23, [sp, #16]
  425788:	ldp	x29, x30, [sp], #64
  42578c:	ret
  425790:	stp	x29, x30, [sp, #-64]!
  425794:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  425798:	ldr	w8, [x8, #132]
  42579c:	stp	x24, x23, [sp, #16]
  4257a0:	stp	x22, x21, [sp, #32]
  4257a4:	stp	x20, x19, [sp, #48]
  4257a8:	cmp	w8, #0x3
  4257ac:	mov	x29, sp
  4257b0:	b.lt	4258f4 <wcrtomb@plt+0x20af4>  // b.tstop
  4257b4:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4257b8:	ldr	w8, [x8, #472]
  4257bc:	mov	x19, x0
  4257c0:	cmp	w8, #0x1
  4257c4:	b.lt	4257e8 <wcrtomb@plt+0x209e8>  // b.tstop
  4257c8:	ldr	x3, [x19, #48]
  4257cc:	cbz	x3, 4257e8 <wcrtomb@plt+0x209e8>
  4257d0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4257d4:	ldr	x0, [x8, #3416]
  4257d8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  4257dc:	add	x2, x2, #0x3ab
  4257e0:	mov	w1, #0x1                   	// #1
  4257e4:	bl	4048f0 <__fprintf_chk@plt>
  4257e8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4257ec:	ldr	w8, [x8, #384]
  4257f0:	cmp	w8, #0x1
  4257f4:	b.lt	425878 <wcrtomb@plt+0x20a78>  // b.tstop
  4257f8:	ldr	x8, [x19, #64]
  4257fc:	cbnz	x8, 425808 <wcrtomb@plt+0x20a08>
  425800:	ldr	x8, [x19, #80]
  425804:	cbz	x8, 425878 <wcrtomb@plt+0x20a78>
  425808:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42580c:	ldr	x0, [x20, #3416]
  425810:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  425814:	add	x2, x2, #0x3b4
  425818:	mov	w1, #0x1                   	// #1
  42581c:	bl	4048f0 <__fprintf_chk@plt>
  425820:	ldp	x1, x2, [x19, #56]
  425824:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  425828:	add	x0, x0, #0x3ee
  42582c:	bl	425908 <wcrtomb@plt+0x20b08>
  425830:	ldr	x8, [x19, #64]
  425834:	cbz	x8, 425854 <wcrtomb@plt+0x20a54>
  425838:	ldr	x8, [x19, #80]
  42583c:	cbz	x8, 425854 <wcrtomb@plt+0x20a54>
  425840:	ldr	x0, [x20, #3416]
  425844:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  425848:	add	x2, x2, #0x478
  42584c:	mov	w1, #0x1                   	// #1
  425850:	bl	4048f0 <__fprintf_chk@plt>
  425854:	ldp	x1, x2, [x19, #72]
  425858:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  42585c:	add	x0, x0, #0x3ba
  425860:	bl	425908 <wcrtomb@plt+0x20b08>
  425864:	ldr	x0, [x20, #3416]
  425868:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  42586c:	add	x2, x2, #0xb03
  425870:	mov	w1, #0x1                   	// #1
  425874:	bl	4048f0 <__fprintf_chk@plt>
  425878:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  42587c:	ldr	w8, [x8, #144]
  425880:	cmp	w8, #0x1
  425884:	b.lt	4258f4 <wcrtomb@plt+0x20af4>  // b.tstop
  425888:	ldr	x8, [x19, #328]
  42588c:	cbz	x8, 4258f4 <wcrtomb@plt+0x20af4>
  425890:	adrp	x20, 452000 <_obstack_memory_used@@Base+0x16808>
  425894:	mov	x22, xzr
  425898:	mov	x23, xzr
  42589c:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4258a0:	add	x20, x20, #0x3c3
  4258a4:	ldr	x8, [x19, #336]
  4258a8:	mov	w1, wzr
  4258ac:	ldr	x8, [x8, x22]
  4258b0:	add	x21, x8, #0xd
  4258b4:	mov	x0, x21
  4258b8:	bl	425394 <wcrtomb@plt+0x20594>
  4258bc:	tbnz	w0, #0, 4258e0 <wcrtomb@plt+0x20ae0>
  4258c0:	ldr	x8, [x19, #336]
  4258c4:	ldr	x0, [x24, #3416]
  4258c8:	mov	w1, #0x1                   	// #1
  4258cc:	mov	x2, x20
  4258d0:	add	x8, x8, x22
  4258d4:	ldr	x3, [x8, #16]
  4258d8:	mov	x4, x21
  4258dc:	bl	4048f0 <__fprintf_chk@plt>
  4258e0:	ldr	x8, [x19, #328]
  4258e4:	add	x23, x23, #0x1
  4258e8:	add	x22, x22, #0x18
  4258ec:	cmp	x8, x23
  4258f0:	b.hi	4258a4 <wcrtomb@plt+0x20aa4>  // b.pmore
  4258f4:	ldp	x20, x19, [sp, #48]
  4258f8:	ldp	x22, x21, [sp, #32]
  4258fc:	ldp	x24, x23, [sp, #16]
  425900:	ldp	x29, x30, [sp], #64
  425904:	ret
  425908:	sub	sp, sp, #0xc0
  42590c:	stp	x29, x30, [sp, #96]
  425910:	stp	x28, x27, [sp, #112]
  425914:	stp	x26, x25, [sp, #128]
  425918:	stp	x24, x23, [sp, #144]
  42591c:	stp	x22, x21, [sp, #160]
  425920:	stp	x20, x19, [sp, #176]
  425924:	add	x29, sp, #0x60
  425928:	cbz	x1, 425ae8 <wcrtomb@plt+0x20ce8>
  42592c:	mov	x19, x2
  425930:	cbz	x2, 425ae8 <wcrtomb@plt+0x20ce8>
  425934:	mov	x20, x1
  425938:	mov	x21, x0
  42593c:	bl	404170 <strlen@plt>
  425940:	adrp	x3, 43a000 <argp_parse@@Base+0xb344>
  425944:	adrp	x4, 404000 <mbrtowc@plt-0xe0>
  425948:	mov	x22, x0
  42594c:	add	x3, x3, #0x7a4
  425950:	add	x4, x4, #0x9b0
  425954:	add	x0, sp, #0x8
  425958:	mov	x1, xzr
  42595c:	mov	x2, xzr
  425960:	bl	43b4e0 <_obstack_begin@@Base>
  425964:	adrp	x23, 454000 <_obstack_memory_used@@Base+0x18808>
  425968:	mov	w27, wzr
  42596c:	sxtw	x22, w22
  425970:	add	x23, x23, #0xd24
  425974:	mov	w28, #0x2c                  	// #44
  425978:	mov	x24, x20
  42597c:	mov	x0, x24
  425980:	mov	x1, x23
  425984:	bl	404ca0 <strcspn@plt>
  425988:	mov	x25, x0
  42598c:	cbz	w25, 425a4c <wcrtomb@plt+0x20c4c>
  425990:	cmp	x24, x20
  425994:	b.eq	4259c0 <wcrtomb@plt+0x20bc0>  // b.none
  425998:	ldp	x8, x9, [sp, #32]
  42599c:	cmp	x9, x8
  4259a0:	b.ne	4259b4 <wcrtomb@plt+0x20bb4>  // b.any
  4259a4:	add	x0, sp, #0x8
  4259a8:	mov	w1, #0x1                   	// #1
  4259ac:	bl	43b5e8 <_obstack_newchunk@@Base>
  4259b0:	ldr	x8, [sp, #32]
  4259b4:	add	x9, x8, #0x1
  4259b8:	str	x9, [sp, #32]
  4259bc:	strb	w28, [x8]
  4259c0:	ldp	x0, x8, [sp, #32]
  4259c4:	sub	x8, x8, x0
  4259c8:	cmp	x8, x22
  4259cc:	b.cs	4259e0 <wcrtomb@plt+0x20be0>  // b.hs, b.nlast
  4259d0:	add	x0, sp, #0x8
  4259d4:	mov	x1, x22
  4259d8:	bl	43b5e8 <_obstack_newchunk@@Base>
  4259dc:	ldr	x0, [sp, #32]
  4259e0:	mov	x1, x21
  4259e4:	mov	x2, x22
  4259e8:	bl	4040f0 <memcpy@plt>
  4259ec:	ldp	x8, x9, [sp, #32]
  4259f0:	sxtw	x26, w25
  4259f4:	add	x0, x8, x22
  4259f8:	sub	x8, x9, x0
  4259fc:	cmp	x8, w25, sxtw
  425a00:	str	x0, [sp, #32]
  425a04:	b.cs	425a18 <wcrtomb@plt+0x20c18>  // b.hs, b.nlast
  425a08:	add	x0, sp, #0x8
  425a0c:	mov	x1, x26
  425a10:	bl	43b5e8 <_obstack_newchunk@@Base>
  425a14:	ldr	x0, [sp, #32]
  425a18:	mov	x1, x24
  425a1c:	mov	x2, x26
  425a20:	bl	4040f0 <memcpy@plt>
  425a24:	ldr	x8, [sp, #32]
  425a28:	add	w9, w25, #0x1
  425a2c:	add	w27, w9, w27
  425a30:	sxtw	x10, w27
  425a34:	cmp	x10, x19
  425a38:	add	x8, x8, x26
  425a3c:	add	x24, x24, w9, sxtw
  425a40:	str	x8, [sp, #32]
  425a44:	b.ls	42597c <wcrtomb@plt+0x20b7c>  // b.plast
  425a48:	b	425a50 <wcrtomb@plt+0x20c50>
  425a4c:	ldr	x8, [sp, #32]
  425a50:	ldr	x9, [sp, #40]
  425a54:	cmp	x9, x8
  425a58:	b.ne	425a6c <wcrtomb@plt+0x20c6c>  // b.any
  425a5c:	add	x0, sp, #0x8
  425a60:	mov	w1, #0x1                   	// #1
  425a64:	bl	43b5e8 <_obstack_newchunk@@Base>
  425a68:	ldr	x8, [sp, #32]
  425a6c:	add	x9, x8, #0x1
  425a70:	str	x9, [sp, #32]
  425a74:	strb	wzr, [x8]
  425a78:	ldp	x3, x8, [sp, #24]
  425a7c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  425a80:	ldr	x0, [x9, #3416]
  425a84:	cmp	x8, x3
  425a88:	b.ne	425a98 <wcrtomb@plt+0x20c98>  // b.any
  425a8c:	ldrb	w9, [sp, #88]
  425a90:	orr	w9, w9, #0x2
  425a94:	strb	w9, [sp, #88]
  425a98:	ldr	x10, [sp, #56]
  425a9c:	ldr	x11, [sp, #16]
  425aa0:	ldr	x9, [sp, #40]
  425aa4:	add	x8, x10, x8
  425aa8:	bic	x8, x8, x10
  425aac:	sub	x10, x8, x11
  425ab0:	sub	x11, x9, x11
  425ab4:	cmp	x10, x11
  425ab8:	str	x8, [sp, #32]
  425abc:	b.ls	425ac8 <wcrtomb@plt+0x20cc8>  // b.plast
  425ac0:	mov	x8, x9
  425ac4:	str	x9, [sp, #32]
  425ac8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  425acc:	add	x2, x2, #0xb24
  425ad0:	mov	w1, #0x1                   	// #1
  425ad4:	str	x8, [sp, #24]
  425ad8:	bl	4048f0 <__fprintf_chk@plt>
  425adc:	add	x0, sp, #0x8
  425ae0:	mov	x1, xzr
  425ae4:	bl	43b760 <_obstack_free@@Base>
  425ae8:	ldp	x20, x19, [sp, #176]
  425aec:	ldp	x22, x21, [sp, #160]
  425af0:	ldp	x24, x23, [sp, #144]
  425af4:	ldp	x26, x25, [sp, #128]
  425af8:	ldp	x28, x27, [sp, #112]
  425afc:	ldp	x29, x30, [sp, #96]
  425b00:	add	sp, sp, #0xc0
  425b04:	ret
  425b08:	stp	x29, x30, [sp, #-96]!
  425b0c:	str	x28, [sp, #16]
  425b10:	stp	x26, x25, [sp, #32]
  425b14:	stp	x24, x23, [sp, #48]
  425b18:	stp	x22, x21, [sp, #64]
  425b1c:	stp	x20, x19, [sp, #80]
  425b20:	mov	x29, sp
  425b24:	sub	sp, sp, #0xfc0
  425b28:	mov	w20, w2
  425b2c:	cmn	w0, #0x64
  425b30:	mov	x21, x1
  425b34:	b.eq	425b44 <wcrtomb@plt+0x20d44>  // b.none
  425b38:	ldrb	w8, [x21]
  425b3c:	cmp	w8, #0x2f
  425b40:	b.ne	425b6c <wcrtomb@plt+0x20d6c>  // b.any
  425b44:	mov	x0, x21
  425b48:	mov	w1, w20
  425b4c:	add	sp, sp, #0xfc0
  425b50:	ldp	x20, x19, [sp, #80]
  425b54:	ldp	x22, x21, [sp, #64]
  425b58:	ldp	x24, x23, [sp, #48]
  425b5c:	ldp	x26, x25, [sp, #32]
  425b60:	ldr	x28, [sp, #16]
  425b64:	ldp	x29, x30, [sp], #96
  425b68:	b	404950 <acl_get_file@plt>
  425b6c:	mov	w22, w0
  425b70:	mov	x0, sp
  425b74:	mov	w1, w22
  425b78:	mov	x2, x21
  425b7c:	mov	x26, sp
  425b80:	bl	43b86c <_obstack_memory_used@@Base+0x74>
  425b84:	cbz	x0, 425be0 <wcrtomb@plt+0x20de0>
  425b88:	mov	w1, w20
  425b8c:	mov	x24, x0
  425b90:	bl	404950 <acl_get_file@plt>
  425b94:	mov	x19, x0
  425b98:	bl	404ce0 <__errno_location@plt>
  425b9c:	ldr	w25, [x0]
  425ba0:	mov	x23, x0
  425ba4:	cmp	x24, x26
  425ba8:	b.eq	425bb4 <wcrtomb@plt+0x20db4>  // b.none
  425bac:	mov	x0, x24
  425bb0:	bl	4049b0 <free@plt>
  425bb4:	cbnz	x19, 425c98 <wcrtomb@plt+0x20e98>
  425bb8:	cmp	w25, #0x26
  425bbc:	b.hi	425c60 <wcrtomb@plt+0x20e60>  // b.pmore
  425bc0:	mov	w8, w25
  425bc4:	mov	w9, #0x1                   	// #1
  425bc8:	lsl	x8, x9, x8
  425bcc:	mov	x9, #0x2006                	// #8198
  425bd0:	movk	x9, #0x10, lsl #16
  425bd4:	movk	x9, #0x40, lsl #32
  425bd8:	tst	x8, x9
  425bdc:	b.eq	425c60 <wcrtomb@plt+0x20e60>  // b.none
  425be0:	mov	x0, sp
  425be4:	bl	439ecc <argp_parse@@Base+0xb210>
  425be8:	cbnz	w0, 425cbc <wcrtomb@plt+0x20ebc>
  425bec:	tbnz	w22, #31, 425c18 <wcrtomb@plt+0x20e18>
  425bf0:	ldr	w8, [sp]
  425bf4:	cmp	w8, w22
  425bf8:	b.ne	425c18 <wcrtomb@plt+0x20e18>  // b.any
  425bfc:	mov	x0, sp
  425c00:	bl	439f3c <argp_parse@@Base+0xb280>
  425c04:	bl	404ce0 <__errno_location@plt>
  425c08:	mov	w8, #0x9                   	// #9
  425c0c:	mov	x19, xzr
  425c10:	str	w8, [x0]
  425c14:	b	425c98 <wcrtomb@plt+0x20e98>
  425c18:	mov	w0, w22
  425c1c:	bl	4041e0 <fchdir@plt>
  425c20:	cbz	w0, 425c44 <wcrtomb@plt+0x20e44>
  425c24:	bl	404ce0 <__errno_location@plt>
  425c28:	ldr	w21, [x0]
  425c2c:	mov	x20, x0
  425c30:	mov	x0, sp
  425c34:	bl	439f3c <argp_parse@@Base+0xb280>
  425c38:	mov	x19, xzr
  425c3c:	str	w21, [x20]
  425c40:	b	425c98 <wcrtomb@plt+0x20e98>
  425c44:	mov	x0, x21
  425c48:	mov	w1, w20
  425c4c:	bl	404950 <acl_get_file@plt>
  425c50:	mov	x19, x0
  425c54:	cbz	x0, 425c70 <wcrtomb@plt+0x20e70>
  425c58:	mov	w20, wzr
  425c5c:	b	425c78 <wcrtomb@plt+0x20e78>
  425c60:	cmp	w25, #0x5f
  425c64:	b.eq	425be0 <wcrtomb@plt+0x20de0>  // b.none
  425c68:	str	w25, [x23]
  425c6c:	b	425c98 <wcrtomb@plt+0x20e98>
  425c70:	bl	404ce0 <__errno_location@plt>
  425c74:	ldr	w20, [x0]
  425c78:	mov	x0, sp
  425c7c:	bl	439f24 <argp_parse@@Base+0xb268>
  425c80:	cbnz	w0, 425cc8 <wcrtomb@plt+0x20ec8>
  425c84:	mov	x0, sp
  425c88:	bl	439f3c <argp_parse@@Base+0xb280>
  425c8c:	cbz	w20, 425c98 <wcrtomb@plt+0x20e98>
  425c90:	bl	404ce0 <__errno_location@plt>
  425c94:	str	w20, [x0]
  425c98:	mov	x0, x19
  425c9c:	add	sp, sp, #0xfc0
  425ca0:	ldp	x20, x19, [sp, #80]
  425ca4:	ldp	x22, x21, [sp, #64]
  425ca8:	ldp	x24, x23, [sp, #48]
  425cac:	ldp	x26, x25, [sp, #32]
  425cb0:	ldr	x28, [sp, #16]
  425cb4:	ldp	x29, x30, [sp], #96
  425cb8:	ret
  425cbc:	bl	404ce0 <__errno_location@plt>
  425cc0:	ldr	w0, [x0]
  425cc4:	bl	43497c <argp_parse@@Base+0x5cc0>
  425cc8:	bl	404ce0 <__errno_location@plt>
  425ccc:	ldr	w0, [x0]
  425cd0:	bl	4349bc <argp_parse@@Base+0x5d00>
  425cd4:	stp	x29, x30, [sp, #-32]!
  425cd8:	stp	x20, x19, [sp, #16]
  425cdc:	mov	x19, x1
  425ce0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  425ce4:	add	x1, x1, #0x3ec
  425ce8:	mov	x29, sp
  425cec:	mov	x20, x0
  425cf0:	bl	404ca0 <strcspn@plt>
  425cf4:	add	x8, x20, x0
  425cf8:	mov	x9, x8
  425cfc:	ldrb	w10, [x9]
  425d00:	cmp	w10, #0x9
  425d04:	b.eq	425d20 <wcrtomb@plt+0x20f20>  // b.none
  425d08:	cmp	w10, #0x23
  425d0c:	b.ne	425d28 <wcrtomb@plt+0x20f28>  // b.any
  425d10:	ldrb	w10, [x9, #1]!
  425d14:	cmp	w10, #0xa
  425d18:	b.ne	425d10 <wcrtomb@plt+0x20f10>  // b.any
  425d1c:	b	425cfc <wcrtomb@plt+0x20efc>
  425d20:	add	x9, x9, #0x1
  425d24:	b	425cfc <wcrtomb@plt+0x20efc>
  425d28:	cbz	w10, 425d38 <wcrtomb@plt+0x20f38>
  425d2c:	add	x9, x9, #0x1
  425d30:	strb	w10, [x8], #1
  425d34:	b	425cfc <wcrtomb@plt+0x20efc>
  425d38:	sub	x9, x8, x20
  425d3c:	str	x9, [x19]
  425d40:	strb	wzr, [x8]
  425d44:	ldp	x20, x19, [sp, #16]
  425d48:	ldp	x29, x30, [sp], #32
  425d4c:	ret
  425d50:	stp	x29, x30, [sp, #-48]!
  425d54:	stp	x20, x19, [sp, #32]
  425d58:	ldr	x8, [x1, #8]
  425d5c:	str	x21, [sp, #16]
  425d60:	mov	x29, sp
  425d64:	cbz	x8, 425da4 <wcrtomb@plt+0x20fa4>
  425d68:	ldr	x8, [x1, #16]
  425d6c:	mov	x19, x1
  425d70:	cbz	x8, 425da4 <wcrtomb@plt+0x20fa4>
  425d74:	mov	x20, x0
  425d78:	mov	x21, xzr
  425d7c:	ldr	x8, [x19]
  425d80:	mov	x1, x20
  425d84:	mov	w2, wzr
  425d88:	ldr	x0, [x8, x21, lsl #3]
  425d8c:	bl	404aa0 <fnmatch@plt>
  425d90:	cbz	w0, 425db8 <wcrtomb@plt+0x20fb8>
  425d94:	ldr	x8, [x19, #16]
  425d98:	add	x21, x21, #0x1
  425d9c:	cmp	x8, x21
  425da0:	b.hi	425d7c <wcrtomb@plt+0x20f7c>  // b.pmore
  425da4:	mov	w0, wzr
  425da8:	ldp	x20, x19, [sp, #32]
  425dac:	ldr	x21, [sp, #16]
  425db0:	ldp	x29, x30, [sp], #48
  425db4:	ret
  425db8:	mov	w0, #0x1                   	// #1
  425dbc:	b	425da8 <wcrtomb@plt+0x20fa8>
  425dc0:	tst	w0, #0x100
  425dc4:	mov	w8, #0x72                  	// #114
  425dc8:	mov	w9, #0x2d                  	// #45
  425dcc:	mov	w10, #0x77                  	// #119
  425dd0:	csel	w14, w9, w8, eq  // eq = none
  425dd4:	tst	w0, #0x80
  425dd8:	mov	w11, #0x53                  	// #83
  425ddc:	mov	w12, #0x73                  	// #115
  425de0:	mov	w13, #0x78                  	// #120
  425de4:	strb	w14, [x1]
  425de8:	csel	w14, w9, w10, eq  // eq = none
  425dec:	tst	w0, #0x40
  425df0:	strb	w14, [x1, #1]
  425df4:	csel	w14, w12, w11, ne  // ne = any
  425df8:	csel	w15, w13, w9, ne  // ne = any
  425dfc:	tst	w0, #0x800
  425e00:	csel	w14, w15, w14, eq  // eq = none
  425e04:	tst	w0, #0x20
  425e08:	strb	w14, [x1, #2]
  425e0c:	csel	w14, w9, w8, eq  // eq = none
  425e10:	tst	w0, #0x10
  425e14:	strb	w14, [x1, #3]
  425e18:	csel	w14, w9, w10, eq  // eq = none
  425e1c:	tst	w0, #0x8
  425e20:	csel	w11, w12, w11, ne  // ne = any
  425e24:	csel	w12, w13, w9, ne  // ne = any
  425e28:	tst	w0, #0x400
  425e2c:	csel	w11, w12, w11, eq  // eq = none
  425e30:	tst	w0, #0x4
  425e34:	csel	w8, w9, w8, eq  // eq = none
  425e38:	tst	w0, #0x2
  425e3c:	mov	w15, #0x54                  	// #84
  425e40:	strb	w14, [x1, #4]
  425e44:	mov	w14, #0x74                  	// #116
  425e48:	strb	w8, [x1, #6]
  425e4c:	csel	w8, w9, w10, eq  // eq = none
  425e50:	tst	w0, #0x1
  425e54:	strb	w8, [x1, #7]
  425e58:	csel	w8, w14, w15, ne  // ne = any
  425e5c:	csel	w9, w13, w9, ne  // ne = any
  425e60:	tst	w0, #0x200
  425e64:	csel	w8, w9, w8, eq  // eq = none
  425e68:	strb	w11, [x1, #5]
  425e6c:	strb	w8, [x1, #8]
  425e70:	strb	wzr, [x1, #9]
  425e74:	ret
  425e78:	stp	x29, x30, [sp, #-48]!
  425e7c:	stp	x22, x21, [sp, #16]
  425e80:	stp	x20, x19, [sp, #32]
  425e84:	mov	x29, sp
  425e88:	mov	x20, x1
  425e8c:	mov	x19, x0
  425e90:	bl	404ce0 <__errno_location@plt>
  425e94:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  425e98:	ldr	x8, [x8, #496]
  425e9c:	ldr	w21, [x0]
  425ea0:	cbz	x8, 425ea8 <wcrtomb@plt+0x210a8>
  425ea4:	blr	x8
  425ea8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  425eac:	add	x1, x1, #0x4ee
  425eb0:	mov	w2, #0x5                   	// #5
  425eb4:	mov	x0, xzr
  425eb8:	bl	404bd0 <dcgettext@plt>
  425ebc:	mov	x22, x0
  425ec0:	mov	x0, x20
  425ec4:	bl	4398cc <argp_parse@@Base+0xac10>
  425ec8:	mov	x3, x0
  425ecc:	mov	w0, wzr
  425ed0:	mov	w1, w21
  425ed4:	mov	x2, x22
  425ed8:	mov	x4, x19
  425edc:	bl	4041d0 <error@plt>
  425ee0:	ldp	x20, x19, [sp, #32]
  425ee4:	ldp	x22, x21, [sp, #16]
  425ee8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  425eec:	mov	w9, #0x2                   	// #2
  425ef0:	str	w9, [x8, #2944]
  425ef4:	ldp	x29, x30, [sp], #48
  425ef8:	ret
  425efc:	stp	x29, x30, [sp, #-48]!
  425f00:	stp	x22, x21, [sp, #16]
  425f04:	stp	x20, x19, [sp, #32]
  425f08:	mov	x29, sp
  425f0c:	mov	x20, x1
  425f10:	mov	x19, x0
  425f14:	bl	404ce0 <__errno_location@plt>
  425f18:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  425f1c:	ldr	x8, [x8, #496]
  425f20:	ldr	w21, [x0]
  425f24:	cbz	x8, 425f2c <wcrtomb@plt+0x2112c>
  425f28:	blr	x8
  425f2c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  425f30:	add	x1, x1, #0x4ee
  425f34:	mov	w2, #0x5                   	// #5
  425f38:	mov	x0, xzr
  425f3c:	bl	404bd0 <dcgettext@plt>
  425f40:	mov	x22, x0
  425f44:	mov	x0, x20
  425f48:	bl	4398cc <argp_parse@@Base+0xac10>
  425f4c:	mov	x3, x0
  425f50:	mov	w0, wzr
  425f54:	mov	w1, w21
  425f58:	mov	x2, x22
  425f5c:	mov	x4, x19
  425f60:	bl	4041d0 <error@plt>
  425f64:	bl	40d698 <wcrtomb@plt+0x8898>
  425f68:	stp	x29, x30, [sp, #-48]!
  425f6c:	stp	x22, x21, [sp, #16]
  425f70:	stp	x20, x19, [sp, #32]
  425f74:	mov	x29, sp
  425f78:	mov	x20, x1
  425f7c:	mov	x19, x0
  425f80:	bl	404ce0 <__errno_location@plt>
  425f84:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  425f88:	ldr	x8, [x8, #496]
  425f8c:	ldr	w21, [x0]
  425f90:	cbz	x8, 425f98 <wcrtomb@plt+0x21198>
  425f94:	blr	x8
  425f98:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  425f9c:	add	x1, x1, #0x4fc
  425fa0:	mov	w2, #0x5                   	// #5
  425fa4:	mov	x0, xzr
  425fa8:	bl	404bd0 <dcgettext@plt>
  425fac:	mov	x22, x0
  425fb0:	mov	x0, x20
  425fb4:	bl	4398cc <argp_parse@@Base+0xac10>
  425fb8:	mov	w1, w21
  425fbc:	mov	x2, x22
  425fc0:	mov	x4, x19
  425fc4:	ldp	x20, x19, [sp, #32]
  425fc8:	ldp	x22, x21, [sp, #16]
  425fcc:	mov	x3, x0
  425fd0:	mov	w0, wzr
  425fd4:	ldp	x29, x30, [sp], #48
  425fd8:	b	4041d0 <error@plt>
  425fdc:	sub	sp, sp, #0x40
  425fe0:	stp	x29, x30, [sp, #16]
  425fe4:	str	x21, [sp, #32]
  425fe8:	stp	x20, x19, [sp, #48]
  425fec:	add	x29, sp, #0x10
  425ff0:	mov	w21, w1
  425ff4:	mov	x20, x0
  425ff8:	bl	404ce0 <__errno_location@plt>
  425ffc:	ldr	w19, [x0]
  426000:	add	x1, sp, #0x4
  426004:	mov	w0, w21
  426008:	bl	425dc0 <wcrtomb@plt+0x20fc0>
  42600c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  426010:	ldr	x8, [x8, #496]
  426014:	cbz	x8, 42601c <wcrtomb@plt+0x2121c>
  426018:	blr	x8
  42601c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  426020:	add	x1, x1, #0x513
  426024:	mov	w2, #0x5                   	// #5
  426028:	mov	x0, xzr
  42602c:	bl	404bd0 <dcgettext@plt>
  426030:	mov	x21, x0
  426034:	mov	x0, x20
  426038:	bl	4398cc <argp_parse@@Base+0xac10>
  42603c:	mov	x3, x0
  426040:	add	x4, sp, #0x4
  426044:	mov	w0, wzr
  426048:	mov	w1, w19
  42604c:	mov	x2, x21
  426050:	bl	4041d0 <error@plt>
  426054:	ldp	x20, x19, [sp, #48]
  426058:	ldr	x21, [sp, #32]
  42605c:	ldp	x29, x30, [sp, #16]
  426060:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  426064:	mov	w9, #0x2                   	// #2
  426068:	str	w9, [x8, #2944]
  42606c:	add	sp, sp, #0x40
  426070:	ret
  426074:	stp	x29, x30, [sp, #-64]!
  426078:	str	x23, [sp, #16]
  42607c:	stp	x22, x21, [sp, #32]
  426080:	stp	x20, x19, [sp, #48]
  426084:	mov	x29, sp
  426088:	mov	w19, w2
  42608c:	mov	w20, w1
  426090:	mov	x22, x0
  426094:	bl	404ce0 <__errno_location@plt>
  426098:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  42609c:	ldr	x8, [x8, #496]
  4260a0:	ldr	w21, [x0]
  4260a4:	cbz	x8, 4260ac <wcrtomb@plt+0x212ac>
  4260a8:	blr	x8
  4260ac:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  4260b0:	add	x1, x1, #0x530
  4260b4:	mov	w2, #0x5                   	// #5
  4260b8:	mov	x0, xzr
  4260bc:	bl	404bd0 <dcgettext@plt>
  4260c0:	mov	x23, x0
  4260c4:	mov	x0, x22
  4260c8:	bl	4398cc <argp_parse@@Base+0xac10>
  4260cc:	mov	x3, x0
  4260d0:	mov	w4, w20
  4260d4:	mov	w5, w19
  4260d8:	mov	w0, wzr
  4260dc:	mov	w1, w21
  4260e0:	mov	x2, x23
  4260e4:	bl	4041d0 <error@plt>
  4260e8:	ldp	x20, x19, [sp, #48]
  4260ec:	ldp	x22, x21, [sp, #32]
  4260f0:	ldr	x23, [sp, #16]
  4260f4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4260f8:	mov	w9, #0x2                   	// #2
  4260fc:	str	w9, [x8, #2944]
  426100:	ldp	x29, x30, [sp], #64
  426104:	ret
  426108:	adrp	x8, 44f000 <_obstack_memory_used@@Base+0x13808>
  42610c:	add	x8, x8, #0x1e
  426110:	mov	x1, x0
  426114:	mov	x0, x8
  426118:	b	425e78 <wcrtomb@plt+0x21078>
  42611c:	adrp	x8, 44f000 <_obstack_memory_used@@Base+0x13808>
  426120:	add	x8, x8, #0x1e
  426124:	mov	x1, x0
  426128:	mov	x0, x8
  42612c:	b	425f68 <wcrtomb@plt+0x21168>
  426130:	stp	x29, x30, [sp, #-16]!
  426134:	mov	x1, x0
  426138:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  42613c:	add	x0, x0, #0x560
  426140:	mov	x29, sp
  426144:	bl	425efc <wcrtomb@plt+0x210fc>
  426148:	stp	x29, x30, [sp, #-48]!
  42614c:	stp	x22, x21, [sp, #16]
  426150:	stp	x20, x19, [sp, #32]
  426154:	mov	x29, sp
  426158:	mov	x21, x1
  42615c:	mov	x19, x0
  426160:	bl	404ce0 <__errno_location@plt>
  426164:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  426168:	ldr	x8, [x8, #496]
  42616c:	ldr	w20, [x0]
  426170:	cbz	x8, 426178 <wcrtomb@plt+0x21378>
  426174:	blr	x8
  426178:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42617c:	add	x1, x1, #0x565
  426180:	mov	w2, #0x5                   	// #5
  426184:	mov	x0, xzr
  426188:	bl	404bd0 <dcgettext@plt>
  42618c:	mov	x22, x0
  426190:	mov	x0, x21
  426194:	bl	4398cc <argp_parse@@Base+0xac10>
  426198:	mov	x21, x0
  42619c:	mov	w0, #0x1                   	// #1
  4261a0:	mov	x1, x19
  4261a4:	bl	439ab0 <argp_parse@@Base+0xadf4>
  4261a8:	mov	x4, x0
  4261ac:	mov	w0, wzr
  4261b0:	mov	w1, w20
  4261b4:	mov	x2, x22
  4261b8:	mov	x3, x21
  4261bc:	bl	4041d0 <error@plt>
  4261c0:	ldp	x20, x19, [sp, #32]
  4261c4:	ldp	x22, x21, [sp, #16]
  4261c8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4261cc:	mov	w9, #0x2                   	// #2
  4261d0:	str	w9, [x8, #2944]
  4261d4:	ldp	x29, x30, [sp], #48
  4261d8:	ret
  4261dc:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  4261e0:	add	x8, x8, #0x580
  4261e4:	mov	x1, x0
  4261e8:	mov	x0, x8
  4261ec:	b	425e78 <wcrtomb@plt+0x21078>
  4261f0:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  4261f4:	add	x8, x8, #0x586
  4261f8:	mov	x1, x0
  4261fc:	mov	x0, x8
  426200:	b	425e78 <wcrtomb@plt+0x21078>
  426204:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  426208:	add	x8, x8, #0x58d
  42620c:	mov	x1, x0
  426210:	mov	x0, x8
  426214:	b	425e78 <wcrtomb@plt+0x21078>
  426218:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  42621c:	add	x8, x8, #0x593
  426220:	mov	x1, x0
  426224:	mov	x0, x8
  426228:	b	425e78 <wcrtomb@plt+0x21078>
  42622c:	stp	x29, x30, [sp, #-16]!
  426230:	mov	x1, x0
  426234:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  426238:	add	x0, x0, #0x593
  42623c:	mov	x29, sp
  426240:	bl	425efc <wcrtomb@plt+0x210fc>
  426244:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  426248:	add	x8, x8, #0x593
  42624c:	mov	x1, x0
  426250:	mov	x0, x8
  426254:	b	425f68 <wcrtomb@plt+0x21168>
  426258:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0xf808>
  42625c:	add	x8, x8, #0xab5
  426260:	mov	x1, x0
  426264:	mov	x0, x8
  426268:	b	425e78 <wcrtomb@plt+0x21078>
  42626c:	sub	sp, sp, #0x60
  426270:	stp	x29, x30, [sp, #32]
  426274:	str	x23, [sp, #48]
  426278:	stp	x22, x21, [sp, #64]
  42627c:	stp	x20, x19, [sp, #80]
  426280:	add	x29, sp, #0x20
  426284:	mov	x19, x2
  426288:	mov	x20, x1
  42628c:	mov	x22, x0
  426290:	bl	404ce0 <__errno_location@plt>
  426294:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  426298:	ldr	x8, [x8, #496]
  42629c:	ldr	w21, [x0]
  4262a0:	cbz	x8, 4262a8 <wcrtomb@plt+0x214a8>
  4262a4:	blr	x8
  4262a8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  4262ac:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  4262b0:	add	x1, x1, #0x598
  4262b4:	add	x2, x2, #0x5ca
  4262b8:	mov	w4, #0x5                   	// #5
  4262bc:	mov	x0, xzr
  4262c0:	mov	x3, x19
  4262c4:	bl	404ad0 <dcngettext@plt>
  4262c8:	mov	x23, x0
  4262cc:	mov	x0, x22
  4262d0:	bl	4398cc <argp_parse@@Base+0xac10>
  4262d4:	mov	x22, x0
  4262d8:	add	x1, sp, #0x8
  4262dc:	mov	x0, x20
  4262e0:	bl	43401c <argp_parse@@Base+0x5360>
  4262e4:	mov	x4, x0
  4262e8:	mov	w0, wzr
  4262ec:	mov	w1, w21
  4262f0:	mov	x2, x23
  4262f4:	mov	x3, x22
  4262f8:	mov	x5, x19
  4262fc:	bl	4041d0 <error@plt>
  426300:	ldp	x20, x19, [sp, #80]
  426304:	ldp	x22, x21, [sp, #64]
  426308:	ldr	x23, [sp, #48]
  42630c:	ldp	x29, x30, [sp, #32]
  426310:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  426314:	mov	w9, #0x2                   	// #2
  426318:	str	w9, [x8, #2944]
  42631c:	add	sp, sp, #0x60
  426320:	ret
  426324:	sub	sp, sp, #0x60
  426328:	stp	x29, x30, [sp, #32]
  42632c:	str	x23, [sp, #48]
  426330:	stp	x22, x21, [sp, #64]
  426334:	stp	x20, x19, [sp, #80]
  426338:	add	x29, sp, #0x20
  42633c:	mov	x19, x2
  426340:	mov	x20, x1
  426344:	mov	x22, x0
  426348:	bl	404ce0 <__errno_location@plt>
  42634c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  426350:	ldr	x8, [x8, #496]
  426354:	ldr	w21, [x0]
  426358:	cbz	x8, 426360 <wcrtomb@plt+0x21560>
  42635c:	blr	x8
  426360:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  426364:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  426368:	add	x1, x1, #0x5fd
  42636c:	add	x2, x2, #0x638
  426370:	mov	w4, #0x5                   	// #5
  426374:	mov	x0, xzr
  426378:	mov	x3, x19
  42637c:	bl	404ad0 <dcngettext@plt>
  426380:	mov	x23, x0
  426384:	mov	x0, x22
  426388:	bl	4398cc <argp_parse@@Base+0xac10>
  42638c:	mov	x22, x0
  426390:	add	x1, sp, #0x8
  426394:	mov	x0, x20
  426398:	bl	43401c <argp_parse@@Base+0x5360>
  42639c:	mov	x4, x0
  4263a0:	mov	w0, wzr
  4263a4:	mov	w1, w21
  4263a8:	mov	x2, x23
  4263ac:	mov	x3, x22
  4263b0:	mov	x5, x19
  4263b4:	bl	4041d0 <error@plt>
  4263b8:	ldp	x20, x19, [sp, #80]
  4263bc:	ldp	x22, x21, [sp, #64]
  4263c0:	ldr	x23, [sp, #48]
  4263c4:	ldp	x29, x30, [sp, #32]
  4263c8:	add	sp, sp, #0x60
  4263cc:	ret
  4263d0:	stp	x29, x30, [sp, #-16]!
  4263d4:	mov	x1, x0
  4263d8:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0xf808>
  4263dc:	add	x0, x0, #0xab5
  4263e0:	mov	x29, sp
  4263e4:	bl	425efc <wcrtomb@plt+0x210fc>
  4263e8:	sub	sp, sp, #0x60
  4263ec:	stp	x29, x30, [sp, #32]
  4263f0:	str	x23, [sp, #48]
  4263f4:	stp	x22, x21, [sp, #64]
  4263f8:	stp	x20, x19, [sp, #80]
  4263fc:	add	x29, sp, #0x20
  426400:	mov	x19, x2
  426404:	mov	x20, x1
  426408:	mov	x22, x0
  42640c:	bl	404ce0 <__errno_location@plt>
  426410:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  426414:	ldr	x8, [x8, #496]
  426418:	ldr	w21, [x0]
  42641c:	cbz	x8, 426424 <wcrtomb@plt+0x21624>
  426420:	blr	x8
  426424:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  426428:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  42642c:	add	x1, x1, #0x598
  426430:	add	x2, x2, #0x5ca
  426434:	mov	w4, #0x5                   	// #5
  426438:	mov	x0, xzr
  42643c:	mov	x3, x19
  426440:	bl	404ad0 <dcngettext@plt>
  426444:	mov	x23, x0
  426448:	mov	x0, x22
  42644c:	bl	4398cc <argp_parse@@Base+0xac10>
  426450:	mov	x22, x0
  426454:	add	x1, sp, #0x8
  426458:	mov	x0, x20
  42645c:	bl	43401c <argp_parse@@Base+0x5360>
  426460:	mov	x4, x0
  426464:	mov	w0, wzr
  426468:	mov	w1, w21
  42646c:	mov	x2, x23
  426470:	mov	x3, x22
  426474:	mov	x5, x19
  426478:	bl	4041d0 <error@plt>
  42647c:	bl	40d698 <wcrtomb@plt+0x8898>
  426480:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  426484:	add	x8, x8, #0x674
  426488:	mov	x1, x0
  42648c:	mov	x0, x8
  426490:	b	425e78 <wcrtomb@plt+0x21078>
  426494:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  426498:	add	x8, x8, #0x674
  42649c:	mov	x1, x0
  4264a0:	mov	x0, x8
  4264a4:	b	425f68 <wcrtomb@plt+0x21168>
  4264a8:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  4264ac:	add	x8, x8, #0x67d
  4264b0:	mov	x1, x0
  4264b4:	mov	x0, x8
  4264b8:	b	425e78 <wcrtomb@plt+0x21078>
  4264bc:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  4264c0:	add	x8, x8, #0x683
  4264c4:	mov	x1, x0
  4264c8:	mov	x0, x8
  4264cc:	b	425e78 <wcrtomb@plt+0x21078>
  4264d0:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  4264d4:	add	x8, x8, #0x683
  4264d8:	mov	x1, x0
  4264dc:	mov	x0, x8
  4264e0:	b	425f68 <wcrtomb@plt+0x21168>
  4264e4:	adrp	x8, 44f000 <_obstack_memory_used@@Base+0x13808>
  4264e8:	add	x8, x8, #0xd76
  4264ec:	mov	x1, x0
  4264f0:	mov	x0, x8
  4264f4:	b	425e78 <wcrtomb@plt+0x21078>
  4264f8:	sub	sp, sp, #0x50
  4264fc:	stp	x29, x30, [sp, #32]
  426500:	stp	x22, x21, [sp, #48]
  426504:	stp	x20, x19, [sp, #64]
  426508:	add	x29, sp, #0x20
  42650c:	mov	x19, x1
  426510:	mov	x21, x0
  426514:	bl	404ce0 <__errno_location@plt>
  426518:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  42651c:	ldr	x8, [x8, #496]
  426520:	ldr	w20, [x0]
  426524:	cbz	x8, 42652c <wcrtomb@plt+0x2172c>
  426528:	blr	x8
  42652c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  426530:	add	x1, x1, #0x68b
  426534:	mov	w2, #0x5                   	// #5
  426538:	mov	x0, xzr
  42653c:	bl	404bd0 <dcgettext@plt>
  426540:	mov	x22, x0
  426544:	mov	x0, x21
  426548:	bl	4398cc <argp_parse@@Base+0xac10>
  42654c:	mov	x21, x0
  426550:	add	x1, sp, #0x8
  426554:	mov	x0, x19
  426558:	bl	43401c <argp_parse@@Base+0x5360>
  42655c:	mov	x4, x0
  426560:	mov	w0, wzr
  426564:	mov	w1, w20
  426568:	mov	x2, x22
  42656c:	mov	x3, x21
  426570:	bl	4041d0 <error@plt>
  426574:	ldp	x20, x19, [sp, #64]
  426578:	ldp	x22, x21, [sp, #48]
  42657c:	ldp	x29, x30, [sp, #32]
  426580:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  426584:	mov	w9, #0x2                   	// #2
  426588:	str	w9, [x8, #2944]
  42658c:	add	sp, sp, #0x50
  426590:	ret
  426594:	adrp	x8, 44f000 <_obstack_memory_used@@Base+0x13808>
  426598:	add	x8, x8, #0xd76
  42659c:	mov	x1, x0
  4265a0:	mov	x0, x8
  4265a4:	b	425f68 <wcrtomb@plt+0x21168>
  4265a8:	sub	sp, sp, #0x50
  4265ac:	stp	x29, x30, [sp, #32]
  4265b0:	stp	x22, x21, [sp, #48]
  4265b4:	stp	x20, x19, [sp, #64]
  4265b8:	add	x29, sp, #0x20
  4265bc:	mov	x19, x1
  4265c0:	mov	x21, x0
  4265c4:	bl	404ce0 <__errno_location@plt>
  4265c8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4265cc:	ldr	x8, [x8, #496]
  4265d0:	ldr	w20, [x0]
  4265d4:	cbz	x8, 4265dc <wcrtomb@plt+0x217dc>
  4265d8:	blr	x8
  4265dc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  4265e0:	add	x1, x1, #0x6a1
  4265e4:	mov	w2, #0x5                   	// #5
  4265e8:	mov	x0, xzr
  4265ec:	bl	404bd0 <dcgettext@plt>
  4265f0:	mov	x22, x0
  4265f4:	mov	x0, x21
  4265f8:	bl	4398cc <argp_parse@@Base+0xac10>
  4265fc:	mov	x21, x0
  426600:	add	x1, sp, #0x8
  426604:	mov	x0, x19
  426608:	bl	43401c <argp_parse@@Base+0x5360>
  42660c:	mov	x4, x0
  426610:	mov	w0, wzr
  426614:	mov	w1, w20
  426618:	mov	x2, x22
  42661c:	mov	x3, x21
  426620:	bl	4041d0 <error@plt>
  426624:	ldp	x20, x19, [sp, #64]
  426628:	ldp	x22, x21, [sp, #48]
  42662c:	ldp	x29, x30, [sp, #32]
  426630:	add	sp, sp, #0x50
  426634:	ret
  426638:	stp	x29, x30, [sp, #-48]!
  42663c:	stp	x22, x21, [sp, #16]
  426640:	stp	x20, x19, [sp, #32]
  426644:	mov	x29, sp
  426648:	mov	x21, x1
  42664c:	mov	x19, x0
  426650:	bl	404ce0 <__errno_location@plt>
  426654:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  426658:	ldr	x8, [x8, #496]
  42665c:	ldr	w20, [x0]
  426660:	cbz	x8, 426668 <wcrtomb@plt+0x21868>
  426664:	blr	x8
  426668:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42666c:	add	x1, x1, #0x6c0
  426670:	mov	w2, #0x5                   	// #5
  426674:	mov	x0, xzr
  426678:	bl	404bd0 <dcgettext@plt>
  42667c:	mov	x22, x0
  426680:	mov	x0, x21
  426684:	bl	4398cc <argp_parse@@Base+0xac10>
  426688:	mov	x21, x0
  42668c:	mov	w0, #0x1                   	// #1
  426690:	mov	x1, x19
  426694:	bl	439ab0 <argp_parse@@Base+0xadf4>
  426698:	mov	x4, x0
  42669c:	mov	w0, wzr
  4266a0:	mov	w1, w20
  4266a4:	mov	x2, x22
  4266a8:	mov	x3, x21
  4266ac:	bl	4041d0 <error@plt>
  4266b0:	ldp	x20, x19, [sp, #32]
  4266b4:	ldp	x22, x21, [sp, #16]
  4266b8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4266bc:	mov	w9, #0x2                   	// #2
  4266c0:	str	w9, [x8, #2944]
  4266c4:	ldp	x29, x30, [sp], #48
  4266c8:	ret
  4266cc:	stp	x29, x30, [sp, #-16]!
  4266d0:	mov	x1, x0
  4266d4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x11808>
  4266d8:	add	x0, x0, #0x8e5
  4266dc:	mov	x29, sp
  4266e0:	bl	425efc <wcrtomb@plt+0x210fc>
  4266e4:	adrp	x8, 44d000 <_obstack_memory_used@@Base+0x11808>
  4266e8:	add	x8, x8, #0x8e5
  4266ec:	mov	x1, x0
  4266f0:	mov	x0, x8
  4266f4:	b	425e78 <wcrtomb@plt+0x21078>
  4266f8:	adrp	x8, 44d000 <_obstack_memory_used@@Base+0x11808>
  4266fc:	add	x8, x8, #0x8e5
  426700:	mov	x1, x0
  426704:	mov	x0, x8
  426708:	b	425f68 <wcrtomb@plt+0x21168>
  42670c:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  426710:	add	x8, x8, #0x6e0
  426714:	mov	x1, x0
  426718:	mov	x0, x8
  42671c:	b	425e78 <wcrtomb@plt+0x21078>
  426720:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  426724:	add	x8, x8, #0x6e0
  426728:	mov	x1, x0
  42672c:	mov	x0, x8
  426730:	b	425f68 <wcrtomb@plt+0x21168>
  426734:	adrp	x8, 44f000 <_obstack_memory_used@@Base+0x13808>
  426738:	add	x8, x8, #0xfd0
  42673c:	mov	x1, x0
  426740:	mov	x0, x8
  426744:	b	425e78 <wcrtomb@plt+0x21078>
  426748:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  42674c:	add	x8, x8, #0x6e9
  426750:	mov	x1, x0
  426754:	mov	x0, x8
  426758:	b	425e78 <wcrtomb@plt+0x21078>
  42675c:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  426760:	add	x8, x8, #0x6ef
  426764:	mov	x1, x0
  426768:	mov	x0, x8
  42676c:	b	425e78 <wcrtomb@plt+0x21078>
  426770:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  426774:	add	x8, x8, #0x262
  426778:	mov	x1, x0
  42677c:	mov	x0, x8
  426780:	b	425e78 <wcrtomb@plt+0x21078>
  426784:	stp	x29, x30, [sp, #-48]!
  426788:	stp	x20, x19, [sp, #32]
  42678c:	mov	x20, x0
  426790:	str	x21, [sp, #16]
  426794:	mov	x29, sp
  426798:	cbz	x1, 42680c <wcrtomb@plt+0x21a0c>
  42679c:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4267a0:	ldr	x8, [x8, #496]
  4267a4:	mov	x19, x2
  4267a8:	mov	x21, x1
  4267ac:	cbz	x8, 4267b4 <wcrtomb@plt+0x219b4>
  4267b0:	blr	x8
  4267b4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  4267b8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  4267bc:	add	x1, x1, #0x6f7
  4267c0:	add	x2, x2, #0x716
  4267c4:	mov	w4, #0x5                   	// #5
  4267c8:	mov	x0, xzr
  4267cc:	mov	x3, x19
  4267d0:	bl	404ad0 <dcngettext@plt>
  4267d4:	mov	x2, x0
  4267d8:	mov	w0, wzr
  4267dc:	mov	w1, wzr
  4267e0:	mov	x3, x20
  4267e4:	mov	x4, x21
  4267e8:	mov	x5, x19
  4267ec:	bl	4041d0 <error@plt>
  4267f0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4267f4:	mov	w9, #0x2                   	// #2
  4267f8:	str	w9, [x8, #2944]
  4267fc:	ldp	x20, x19, [sp, #32]
  426800:	ldr	x21, [sp, #16]
  426804:	ldp	x29, x30, [sp], #48
  426808:	ret
  42680c:	mov	x1, x20
  426810:	ldp	x20, x19, [sp, #32]
  426814:	ldr	x21, [sp, #16]
  426818:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  42681c:	add	x0, x0, #0x262
  426820:	ldp	x29, x30, [sp], #48
  426824:	b	425e78 <wcrtomb@plt+0x21078>
  426828:	stp	x29, x30, [sp, #-16]!
  42682c:	mov	x1, x0
  426830:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  426834:	add	x0, x0, #0x736
  426838:	mov	x29, sp
  42683c:	bl	425efc <wcrtomb@plt+0x210fc>
  426840:	stp	x29, x30, [sp, #-16]!
  426844:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  426848:	ldr	x0, [x8, #2952]
  42684c:	mov	x29, sp
  426850:	cbz	x0, 426864 <wcrtomb@plt+0x21a64>
  426854:	bl	4327fc <argp_parse@@Base+0x3b40>
  426858:	cbz	x0, 426864 <wcrtomb@plt+0x21a64>
  42685c:	mov	w0, #0x1                   	// #1
  426860:	b	42687c <wcrtomb@plt+0x21a7c>
  426864:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  426868:	ldr	x0, [x8, #2960]
  42686c:	cbz	x0, 42687c <wcrtomb@plt+0x21a7c>
  426870:	bl	4327fc <argp_parse@@Base+0x3b40>
  426874:	cmp	x0, #0x0
  426878:	cset	w0, ne  // ne = any
  42687c:	ldp	x29, x30, [sp], #16
  426880:	ret
  426884:	stp	x29, x30, [sp, #-80]!
  426888:	stp	x22, x21, [sp, #48]
  42688c:	stp	x20, x19, [sp, #64]
  426890:	mov	w19, w1
  426894:	mov	x20, x0
  426898:	mov	x21, x0
  42689c:	stp	x26, x25, [sp, #16]
  4268a0:	stp	x24, x23, [sp, #32]
  4268a4:	mov	x29, sp
  4268a8:	tbnz	w2, #0, 4269e8 <wcrtomb@plt+0x21be8>
  4268ac:	mov	x8, xzr
  4268b0:	mov	x9, x20
  4268b4:	ldrb	w10, [x9]
  4268b8:	cmp	w10, #0x2e
  4268bc:	b.eq	4268c8 <wcrtomb@plt+0x21ac8>  // b.none
  4268c0:	cbnz	w10, 4268ec <wcrtomb@plt+0x21aec>
  4268c4:	b	426910 <wcrtomb@plt+0x21b10>
  4268c8:	ldrb	w11, [x9, #1]
  4268cc:	cmp	w11, #0x2e
  4268d0:	b.ne	4268ec <wcrtomb@plt+0x21aec>  // b.any
  4268d4:	mov	x11, x9
  4268d8:	ldrb	w12, [x11, #2]!
  4268dc:	cmp	w12, #0x2f
  4268e0:	b.eq	4268e8 <wcrtomb@plt+0x21ae8>  // b.none
  4268e4:	cbnz	w12, 4268ec <wcrtomb@plt+0x21aec>
  4268e8:	sub	x8, x11, x20
  4268ec:	add	x11, x9, #0x1
  4268f0:	and	w9, w10, #0xff
  4268f4:	cmp	w9, #0x2f
  4268f8:	mov	x9, x11
  4268fc:	b.eq	4268b4 <wcrtomb@plt+0x21ab4>  // b.none
  426900:	mov	x11, x9
  426904:	ldrb	w10, [x11], #1
  426908:	cbnz	w10, 4268f0 <wcrtomb@plt+0x21af0>
  42690c:	b	4268b4 <wcrtomb@plt+0x21ab4>
  426910:	add	x8, x20, x8
  426914:	sub	x21, x8, #0x1
  426918:	ldrb	w8, [x21, #1]!
  42691c:	cmp	w8, #0x2f
  426920:	b.eq	426918 <wcrtomb@plt+0x21b18>  // b.none
  426924:	subs	x24, x21, x20
  426928:	b.eq	4269e8 <wcrtomb@plt+0x21be8>  // b.none
  42692c:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x2e808>
  426930:	and	x25, x19, #0x1
  426934:	add	x26, x26, #0xb88
  426938:	ldr	x23, [x26, x25, lsl #3]
  42693c:	add	x0, x24, #0x1
  426940:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  426944:	mov	x1, x20
  426948:	mov	x2, x24
  42694c:	mov	x22, x0
  426950:	bl	4040f0 <memcpy@plt>
  426954:	strb	wzr, [x22, x24]
  426958:	cbnz	x23, 426988 <wcrtomb@plt+0x21b88>
  42695c:	adrp	x2, 426000 <wcrtomb@plt+0x21200>
  426960:	adrp	x3, 426000 <wcrtomb@plt+0x21200>
  426964:	add	x2, x2, #0xa64
  426968:	add	x3, x3, #0xa68
  42696c:	mov	x0, xzr
  426970:	mov	x1, xzr
  426974:	mov	x4, xzr
  426978:	bl	432c6c <argp_parse@@Base+0x3fb0>
  42697c:	mov	x23, x0
  426980:	str	x0, [x26, x25, lsl #3]
  426984:	cbz	x0, 426a60 <wcrtomb@plt+0x21c60>
  426988:	mov	x0, x23
  42698c:	mov	x1, x22
  426990:	bl	433508 <argp_parse@@Base+0x484c>
  426994:	cbz	x0, 426a60 <wcrtomb@plt+0x21c60>
  426998:	cmp	x0, x22
  42699c:	b.eq	4269ac <wcrtomb@plt+0x21bac>  // b.none
  4269a0:	mov	x0, x22
  4269a4:	bl	4049b0 <free@plt>
  4269a8:	b	4269e8 <wcrtomb@plt+0x21be8>
  4269ac:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4269b0:	ldr	x8, [x8, #496]
  4269b4:	cbz	x8, 4269bc <wcrtomb@plt+0x21bbc>
  4269b8:	blr	x8
  4269bc:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  4269c0:	add	x8, x8, #0x740
  4269c4:	ldr	x1, [x8, x25, lsl #3]
  4269c8:	mov	w2, #0x5                   	// #5
  4269cc:	mov	x0, xzr
  4269d0:	bl	404bd0 <dcgettext@plt>
  4269d4:	mov	x2, x0
  4269d8:	mov	w0, wzr
  4269dc:	mov	w1, wzr
  4269e0:	mov	x3, x22
  4269e4:	bl	4041d0 <error@plt>
  4269e8:	ldrb	w8, [x21]
  4269ec:	cbnz	w8, 426a44 <wcrtomb@plt+0x21c44>
  4269f0:	cmp	x21, x20
  4269f4:	b.ne	426a3c <wcrtomb@plt+0x21c3c>  // b.any
  4269f8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  4269fc:	ldr	x8, [x8, #496]
  426a00:	cbz	x8, 426a08 <wcrtomb@plt+0x21c08>
  426a04:	blr	x8
  426a08:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x16808>
  426a0c:	and	x8, x19, #0x1
  426a10:	add	x9, x9, #0x750
  426a14:	ldr	x1, [x9, x8, lsl #3]
  426a18:	mov	w2, #0x5                   	// #5
  426a1c:	mov	x0, xzr
  426a20:	bl	404bd0 <dcgettext@plt>
  426a24:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  426a28:	mov	x3, x0
  426a2c:	add	x2, x2, #0xb24
  426a30:	mov	w0, wzr
  426a34:	mov	w1, wzr
  426a38:	bl	4041d0 <error@plt>
  426a3c:	adrp	x21, 44f000 <_obstack_memory_used@@Base+0x13808>
  426a40:	add	x21, x21, #0x94a
  426a44:	mov	x0, x21
  426a48:	ldp	x20, x19, [sp, #64]
  426a4c:	ldp	x22, x21, [sp, #48]
  426a50:	ldp	x24, x23, [sp, #32]
  426a54:	ldp	x26, x25, [sp, #16]
  426a58:	ldp	x29, x30, [sp], #80
  426a5c:	ret
  426a60:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  426a64:	b	432c14 <argp_parse@@Base+0x3f58>
  426a68:	stp	x29, x30, [sp, #-16]!
  426a6c:	mov	x29, sp
  426a70:	bl	404900 <strcmp@plt>
  426a74:	cmp	w0, #0x0
  426a78:	cset	w0, eq  // eq = none
  426a7c:	ldp	x29, x30, [sp], #16
  426a80:	ret
  426a84:	sub	sp, sp, #0x80
  426a88:	stp	x28, x27, [sp, #48]
  426a8c:	stp	x20, x19, [sp, #112]
  426a90:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  426a94:	adrp	x28, 46a000 <_obstack_memory_used@@Base+0x2e808>
  426a98:	stp	x26, x25, [sp, #64]
  426a9c:	stp	x24, x23, [sp, #80]
  426aa0:	stp	x22, x21, [sp, #96]
  426aa4:	mov	x24, x3
  426aa8:	mov	w22, w1
  426aac:	mov	w27, wzr
  426ab0:	mov	x26, xzr
  426ab4:	add	x19, x19, #0x118
  426ab8:	add	x28, x28, #0x138
  426abc:	stp	x29, x30, [sp, #32]
  426ac0:	add	x29, sp, #0x20
  426ac4:	ldr	w8, [x19, x26]
  426ac8:	cmn	w8, #0x1
  426acc:	b.ne	426ae0 <wcrtomb@plt+0x21ce0>  // b.any
  426ad0:	add	x8, x28, x26
  426ad4:	ldr	w8, [x8, #4]
  426ad8:	cmn	w8, #0x1
  426adc:	b.eq	426b20 <wcrtomb@plt+0x21d20>  // b.none
  426ae0:	add	x26, x26, #0x8
  426ae4:	cmp	x26, #0x20
  426ae8:	sub	w27, w27, #0x1
  426aec:	b.ne	426ac4 <wcrtomb@plt+0x21cc4>  // b.any
  426af0:	bl	404ce0 <__errno_location@plt>
  426af4:	mov	w8, #0x18                  	// #24
  426af8:	str	w8, [x0]
  426afc:	mov	w0, #0xffffffff            	// #-1
  426b00:	ldp	x20, x19, [sp, #112]
  426b04:	ldp	x22, x21, [sp, #96]
  426b08:	ldp	x24, x23, [sp, #80]
  426b0c:	ldp	x26, x25, [sp, #64]
  426b10:	ldp	x28, x27, [sp, #48]
  426b14:	ldp	x29, x30, [sp, #32]
  426b18:	add	sp, sp, #0x80
  426b1c:	ret
  426b20:	neg	w8, w27
  426b24:	stp	w2, w8, [x29, #-8]
  426b28:	bl	43a998 <argp_parse@@Base+0xbcdc>
  426b2c:	mov	x20, x0
  426b30:	mov	x21, xzr
  426b34:	mov	x23, xzr
  426b38:	add	x8, x0, #0x1
  426b3c:	mov	x25, x0
  426b40:	ldurb	w9, [x8, #-1]
  426b44:	cmp	w9, #0x3f
  426b48:	b.gt	426b64 <wcrtomb@plt+0x21d64>
  426b4c:	cmp	w9, #0x3a
  426b50:	b.ne	426b80 <wcrtomb@plt+0x21d80>  // b.any
  426b54:	cbnz	x23, 426b8c <wcrtomb@plt+0x21d8c>
  426b58:	mov	x23, x8
  426b5c:	sturb	wzr, [x8, #-1]
  426b60:	b	426b8c <wcrtomb@plt+0x21d8c>
  426b64:	cmp	w9, #0x40
  426b68:	b.ne	426b8c <wcrtomb@plt+0x21d8c>  // b.any
  426b6c:	cbnz	x21, 426b8c <wcrtomb@plt+0x21d8c>
  426b70:	sturb	wzr, [x8, #-1]
  426b74:	mov	x21, x25
  426b78:	mov	x25, x8
  426b7c:	b	426b8c <wcrtomb@plt+0x21d8c>
  426b80:	cbz	w9, 426ba8 <wcrtomb@plt+0x21da8>
  426b84:	cmp	w9, #0xa
  426b88:	b.eq	426b94 <wcrtomb@plt+0x21d94>  // b.none
  426b8c:	add	x8, x8, #0x1
  426b90:	b	426b40 <wcrtomb@plt+0x21d40>
  426b94:	mov	x0, x20
  426b98:	bl	4049b0 <free@plt>
  426b9c:	bl	404ce0 <__errno_location@plt>
  426ba0:	mov	w8, #0x2                   	// #2
  426ba4:	b	426af8 <wcrtomb@plt+0x21cf8>
  426ba8:	mov	x0, x25
  426bac:	bl	404da0 <gethostbyname@plt>
  426bb0:	cbz	x0, 426c2c <wcrtomb@plt+0x21e2c>
  426bb4:	cbz	x21, 426c54 <wcrtomb@plt+0x21e54>
  426bb8:	ldrb	w8, [x21]
  426bbc:	cmp	w8, #0x0
  426bc0:	csel	x8, xzr, x21, eq  // eq = none
  426bc4:	cbz	x24, 426c5c <wcrtomb@plt+0x21e5c>
  426bc8:	mov	x0, x24
  426bcc:	str	x8, [sp, #16]
  426bd0:	bl	43051c <argp_parse@@Base+0x1860>
  426bd4:	add	x21, x28, x26
  426bd8:	str	x0, [sp, #8]
  426bdc:	mov	x0, x21
  426be0:	bl	4042d0 <pipe@plt>
  426be4:	cmn	w0, #0x1
  426be8:	b.eq	426c10 <wcrtomb@plt+0x21e10>  // b.none
  426bec:	add	x0, x19, x26
  426bf0:	str	x0, [sp]
  426bf4:	bl	4042d0 <pipe@plt>
  426bf8:	cmn	w0, #0x1
  426bfc:	b.eq	426c10 <wcrtomb@plt+0x21e10>  // b.none
  426c00:	bl	404360 <fork@plt>
  426c04:	cbz	w0, 426c70 <wcrtomb@plt+0x21e70>
  426c08:	cmn	w0, #0x1
  426c0c:	b.ne	426d88 <wcrtomb@plt+0x21f88>  // b.any
  426c10:	bl	404ce0 <__errno_location@plt>
  426c14:	ldr	w21, [x0]
  426c18:	mov	x19, x0
  426c1c:	mov	x0, x20
  426c20:	bl	4049b0 <free@plt>
  426c24:	str	w21, [x19]
  426c28:	b	426afc <wcrtomb@plt+0x21cfc>
  426c2c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  426c30:	add	x1, x1, #0x808
  426c34:	mov	w2, #0x5                   	// #5
  426c38:	bl	404bd0 <dcgettext@plt>
  426c3c:	mov	x2, x0
  426c40:	mov	w0, #0x80                  	// #128
  426c44:	mov	w1, wzr
  426c48:	mov	x3, x25
  426c4c:	bl	4041d0 <error@plt>
  426c50:	cbnz	x21, 426bb8 <wcrtomb@plt+0x21db8>
  426c54:	mov	x8, xzr
  426c58:	cbnz	x24, 426bc8 <wcrtomb@plt+0x21dc8>
  426c5c:	mov	x0, x20
  426c60:	bl	4049b0 <free@plt>
  426c64:	bl	404ce0 <__errno_location@plt>
  426c68:	mov	w8, #0x5                   	// #5
  426c6c:	b	426af8 <wcrtomb@plt+0x21cf8>
  426c70:	ldr	w0, [x21]
  426c74:	mov	w1, wzr
  426c78:	bl	404c40 <dup2@plt>
  426c7c:	tbnz	w0, #31, 426cd4 <wcrtomb@plt+0x21ed4>
  426c80:	ldr	w0, [x21]
  426c84:	cbz	w0, 426c90 <wcrtomb@plt+0x21e90>
  426c88:	bl	4047a0 <close@plt>
  426c8c:	cbnz	w0, 426cd4 <wcrtomb@plt+0x21ed4>
  426c90:	add	x8, x28, x26
  426c94:	ldr	w0, [x8, #4]
  426c98:	cbz	w0, 426ca4 <wcrtomb@plt+0x21ea4>
  426c9c:	bl	4047a0 <close@plt>
  426ca0:	cbnz	w0, 426cd4 <wcrtomb@plt+0x21ed4>
  426ca4:	add	x21, x19, x26
  426ca8:	ldr	w0, [x21, #4]
  426cac:	mov	w1, #0x1                   	// #1
  426cb0:	bl	404c40 <dup2@plt>
  426cb4:	tbnz	w0, #31, 426cd4 <wcrtomb@plt+0x21ed4>
  426cb8:	ldr	x8, [sp]
  426cbc:	ldr	w0, [x8]
  426cc0:	bl	4047a0 <close@plt>
  426cc4:	cbnz	w0, 426cd4 <wcrtomb@plt+0x21ed4>
  426cc8:	ldr	w0, [x21, #4]
  426ccc:	bl	4047a0 <close@plt>
  426cd0:	cbz	w0, 426d00 <wcrtomb@plt+0x21f00>
  426cd4:	bl	404ce0 <__errno_location@plt>
  426cd8:	ldr	w21, [x0]
  426cdc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  426ce0:	add	x1, x1, #0x82d
  426ce4:	mov	w2, #0x5                   	// #5
  426ce8:	mov	x0, xzr
  426cec:	bl	404bd0 <dcgettext@plt>
  426cf0:	mov	x2, x0
  426cf4:	mov	w0, #0x80                  	// #128
  426cf8:	mov	w1, w21
  426cfc:	bl	4041d0 <error@plt>
  426d00:	bl	4042c0 <getuid@plt>
  426d04:	bl	404130 <setuid@plt>
  426d08:	cbnz	w0, 42704c <wcrtomb@plt+0x2224c>
  426d0c:	bl	4049f0 <getgid@plt>
  426d10:	bl	404860 <setgid@plt>
  426d14:	cbnz	w0, 42704c <wcrtomb@plt+0x2224c>
  426d18:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  426d1c:	ldr	x5, [x8, #272]
  426d20:	ldr	x4, [sp, #16]
  426d24:	cbz	x4, 426d48 <wcrtomb@plt+0x21f48>
  426d28:	ldr	x1, [sp, #8]
  426d2c:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x16808>
  426d30:	add	x3, x3, #0x854
  426d34:	mov	x0, x24
  426d38:	mov	x2, x25
  426d3c:	mov	x6, xzr
  426d40:	bl	404200 <execl@plt>
  426d44:	b	426d5c <wcrtomb@plt+0x21f5c>
  426d48:	ldr	x1, [sp, #8]
  426d4c:	mov	x0, x24
  426d50:	mov	x2, x25
  426d54:	mov	x3, x5
  426d58:	bl	404200 <execl@plt>
  426d5c:	bl	404ce0 <__errno_location@plt>
  426d60:	ldr	w21, [x0]
  426d64:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  426d68:	add	x1, x1, #0x857
  426d6c:	mov	w2, #0x5                   	// #5
  426d70:	mov	x0, xzr
  426d74:	bl	404bd0 <dcgettext@plt>
  426d78:	mov	x2, x0
  426d7c:	mov	w0, #0x80                  	// #128
  426d80:	mov	w1, w21
  426d84:	bl	4041d0 <error@plt>
  426d88:	add	x8, x19, x26
  426d8c:	ldr	w0, [x8, #4]
  426d90:	bl	4047a0 <close@plt>
  426d94:	ldr	w0, [x28, x26]
  426d98:	bl	4047a0 <close@plt>
  426d9c:	mov	x0, x23
  426da0:	bl	404170 <strlen@plt>
  426da4:	mov	x21, x0
  426da8:	add	x0, x0, #0x3e8
  426dac:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  426db0:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x16808>
  426db4:	add	x3, x3, #0x873
  426db8:	mov	w1, #0x1                   	// #1
  426dbc:	mov	x2, #0xffffffffffffffff    	// #-1
  426dc0:	mov	x4, x23
  426dc4:	mov	x24, x0
  426dc8:	bl	404190 <__sprintf_chk@plt>
  426dcc:	add	x8, x24, x21
  426dd0:	add	x23, x8, #0x2
  426dd4:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x16808>
  426dd8:	add	x3, x3, #0x897
  426ddc:	mov	w1, #0x1                   	// #1
  426de0:	mov	x2, #0xffffffffffffffff    	// #-1
  426de4:	mov	x0, x23
  426de8:	mov	w4, w22
  426dec:	bl	404190 <__sprintf_chk@plt>
  426df0:	and	w8, w22, #0x3
  426df4:	cmp	w8, #0x2
  426df8:	b.eq	426e40 <wcrtomb@plt+0x22040>  // b.none
  426dfc:	cmp	w8, #0x1
  426e00:	b.eq	426e1c <wcrtomb@plt+0x2201c>  // b.none
  426e04:	cbnz	w8, 42704c <wcrtomb@plt+0x2224c>
  426e08:	mov	x0, x23
  426e0c:	bl	404170 <strlen@plt>
  426e10:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  426e14:	add	x8, x8, #0x89b
  426e18:	b	426e2c <wcrtomb@plt+0x2202c>
  426e1c:	mov	x0, x23
  426e20:	bl	404170 <strlen@plt>
  426e24:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  426e28:	add	x8, x8, #0x8ab
  426e2c:	ldr	x8, [x8]
  426e30:	add	x9, x23, x0
  426e34:	strb	wzr, [x9, #8]
  426e38:	str	x8, [x9]
  426e3c:	b	426e64 <wcrtomb@plt+0x22064>
  426e40:	mov	x0, x23
  426e44:	bl	404170 <strlen@plt>
  426e48:	mov	w9, #0x5f4f                	// #24399
  426e4c:	mov	w10, #0x5744                	// #22340
  426e50:	add	x8, x23, x0
  426e54:	movk	w9, #0x4452, lsl #16
  426e58:	movk	w10, #0x52, lsl #16
  426e5c:	str	w9, [x8]
  426e60:	stur	w10, [x8, #3]
  426e64:	tbnz	w22, #10, 426f90 <wcrtomb@plt+0x22190>
  426e68:	tbnz	w22, #6, 426fb8 <wcrtomb@plt+0x221b8>
  426e6c:	tbnz	w22, #12, 426fdc <wcrtomb@plt+0x221dc>
  426e70:	tbnz	w22, #7, 427000 <wcrtomb@plt+0x22200>
  426e74:	tbnz	w22, #8, 427020 <wcrtomb@plt+0x22220>
  426e78:	tbz	w22, #11, 426ea4 <wcrtomb@plt+0x220a4>
  426e7c:	mov	x0, x23
  426e80:	bl	404170 <strlen@plt>
  426e84:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  426e88:	add	x8, x8, #0x8da
  426e8c:	ldr	x8, [x8]
  426e90:	mov	w10, #0x434f                	// #17231
  426e94:	add	x9, x23, x0
  426e98:	movk	w10, #0x4b, lsl #16
  426e9c:	str	x8, [x9]
  426ea0:	str	w10, [x9, #8]
  426ea4:	mov	w8, #0x1000                	// #4096
  426ea8:	movk	w8, #0x10, lsl #16
  426eac:	tst	w22, w8
  426eb0:	b.eq	426ef0 <wcrtomb@plt+0x220f0>  // b.none
  426eb4:	mov	x0, x23
  426eb8:	bl	404170 <strlen@plt>
  426ebc:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  426ec0:	add	x8, x8, #0x8e6
  426ec4:	ldr	x8, [x8]
  426ec8:	add	x9, x23, x0
  426ecc:	mov	x0, x23
  426ed0:	strb	wzr, [x9, #8]
  426ed4:	str	x8, [x9]
  426ed8:	bl	404170 <strlen@plt>
  426edc:	mov	x8, #0x4f7c                	// #20348
  426ee0:	movk	x8, #0x535f, lsl #16
  426ee4:	movk	x8, #0x4e59, lsl #32
  426ee8:	movk	x8, #0x43, lsl #48
  426eec:	str	x8, [x23, x0]
  426ef0:	tbz	w22, #9, 426f14 <wcrtomb@plt+0x22114>
  426ef4:	mov	x0, x23
  426ef8:	bl	404170 <strlen@plt>
  426efc:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  426f00:	add	x8, x8, #0x8ef
  426f04:	ldr	x8, [x8]
  426f08:	add	x9, x23, x0
  426f0c:	strb	wzr, [x9, #8]
  426f10:	str	x8, [x9]
  426f14:	mov	x0, x24
  426f18:	bl	404170 <strlen@plt>
  426f1c:	ldur	w21, [x29, #-4]
  426f20:	mov	w8, #0xa                   	// #10
  426f24:	strh	w8, [x24, x0]
  426f28:	mov	x1, x24
  426f2c:	mov	w0, w21
  426f30:	bl	427050 <wcrtomb@plt+0x22250>
  426f34:	cmn	w0, #0x1
  426f38:	b.eq	426f68 <wcrtomb@plt+0x22168>  // b.none
  426f3c:	mov	w0, w21
  426f40:	bl	4270e4 <wcrtomb@plt+0x222e4>
  426f44:	cmn	x0, #0x1
  426f48:	b.eq	426f68 <wcrtomb@plt+0x22168>  // b.none
  426f4c:	mov	x0, x24
  426f50:	bl	4049b0 <free@plt>
  426f54:	mov	x0, x20
  426f58:	bl	4049b0 <free@plt>
  426f5c:	ldur	w8, [x29, #-8]
  426f60:	sub	w0, w8, w27
  426f64:	b	426b00 <wcrtomb@plt+0x21d00>
  426f68:	bl	404ce0 <__errno_location@plt>
  426f6c:	ldr	w19, [x0]
  426f70:	mov	x0, x24
  426f74:	bl	4049b0 <free@plt>
  426f78:	mov	x0, x20
  426f7c:	bl	4049b0 <free@plt>
  426f80:	mov	w0, w21
  426f84:	mov	w1, w19
  426f88:	bl	427120 <wcrtomb@plt+0x22320>
  426f8c:	b	426afc <wcrtomb@plt+0x21cfc>
  426f90:	mov	x0, x23
  426f94:	bl	404170 <strlen@plt>
  426f98:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  426f9c:	add	x8, x8, #0x8b4
  426fa0:	ldr	x8, [x8]
  426fa4:	add	x9, x23, x0
  426fa8:	mov	w10, #0x44                  	// #68
  426fac:	strh	w10, [x9, #8]
  426fb0:	str	x8, [x9]
  426fb4:	tbz	w22, #6, 426e6c <wcrtomb@plt+0x2206c>
  426fb8:	mov	x0, x23
  426fbc:	bl	404170 <strlen@plt>
  426fc0:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  426fc4:	add	x8, x8, #0x8be
  426fc8:	ldr	x8, [x8]
  426fcc:	add	x9, x23, x0
  426fd0:	strb	wzr, [x9, #8]
  426fd4:	str	x8, [x9]
  426fd8:	tbz	w22, #12, 426e70 <wcrtomb@plt+0x22070>
  426fdc:	mov	x0, x23
  426fe0:	bl	404170 <strlen@plt>
  426fe4:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  426fe8:	add	x8, x8, #0x8c7
  426fec:	ldr	x8, [x8]
  426ff0:	add	x9, x23, x0
  426ff4:	strb	wzr, [x9, #8]
  426ff8:	str	x8, [x9]
  426ffc:	tbz	w22, #7, 426e74 <wcrtomb@plt+0x22074>
  427000:	mov	x0, x23
  427004:	bl	404170 <strlen@plt>
  427008:	mov	x8, #0x4f7c                	// #20348
  42700c:	movk	x8, #0x455f, lsl #16
  427010:	movk	x8, #0x4358, lsl #32
  427014:	movk	x8, #0x4c, lsl #48
  427018:	str	x8, [x23, x0]
  42701c:	tbz	w22, #8, 426e78 <wcrtomb@plt+0x22078>
  427020:	mov	x0, x23
  427024:	bl	404170 <strlen@plt>
  427028:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  42702c:	add	x8, x8, #0x8d0
  427030:	ldr	x8, [x8]
  427034:	add	x9, x23, x0
  427038:	mov	w10, #0x59                  	// #89
  42703c:	strh	w10, [x9, #8]
  427040:	str	x8, [x9]
  427044:	tbnz	w22, #11, 426e7c <wcrtomb@plt+0x2207c>
  427048:	b	426ea4 <wcrtomb@plt+0x220a4>
  42704c:	bl	404850 <abort@plt>
  427050:	stp	x29, x30, [sp, #-48]!
  427054:	stp	x20, x19, [sp, #32]
  427058:	mov	w19, w0
  42705c:	mov	x0, x1
  427060:	stp	x22, x21, [sp, #16]
  427064:	mov	x29, sp
  427068:	mov	x20, x1
  42706c:	bl	404170 <strlen@plt>
  427070:	mov	x21, x0
  427074:	mov	w0, #0xd                   	// #13
  427078:	mov	w1, #0x1                   	// #1
  42707c:	bl	404420 <signal@plt>
  427080:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  427084:	add	x8, x8, #0x138
  427088:	add	x8, x8, w19, sxtw #3
  42708c:	ldr	w8, [x8, #4]
  427090:	mov	x22, x0
  427094:	mov	x1, x20
  427098:	mov	x2, x21
  42709c:	mov	w0, w8
  4270a0:	bl	43273c <argp_parse@@Base+0x3a80>
  4270a4:	mov	x20, x0
  4270a8:	mov	w0, #0xd                   	// #13
  4270ac:	mov	x1, x22
  4270b0:	bl	404420 <signal@plt>
  4270b4:	cmp	x20, x21
  4270b8:	b.ne	4270c4 <wcrtomb@plt+0x222c4>  // b.any
  4270bc:	mov	w0, wzr
  4270c0:	b	4270d4 <wcrtomb@plt+0x222d4>
  4270c4:	mov	w1, #0x5                   	// #5
  4270c8:	mov	w0, w19
  4270cc:	bl	427120 <wcrtomb@plt+0x22320>
  4270d0:	mov	w0, #0xffffffff            	// #-1
  4270d4:	ldp	x20, x19, [sp, #32]
  4270d8:	ldp	x22, x21, [sp, #16]
  4270dc:	ldp	x29, x30, [sp], #48
  4270e0:	ret
  4270e4:	sub	sp, sp, #0x50
  4270e8:	mov	x1, sp
  4270ec:	stp	x29, x30, [sp, #64]
  4270f0:	add	x29, sp, #0x40
  4270f4:	bl	427708 <wcrtomb@plt+0x22908>
  4270f8:	cbz	x0, 427110 <wcrtomb@plt+0x22310>
  4270fc:	bl	4047d0 <atol@plt>
  427100:	tbz	x0, #63, 427114 <wcrtomb@plt+0x22314>
  427104:	bl	404ce0 <__errno_location@plt>
  427108:	mov	w8, #0x5                   	// #5
  42710c:	str	w8, [x0]
  427110:	mov	x0, #0xffffffffffffffff    	// #-1
  427114:	ldp	x29, x30, [sp, #64]
  427118:	add	sp, sp, #0x50
  42711c:	ret
  427120:	stp	x29, x30, [sp, #-48]!
  427124:	stp	x22, x21, [sp, #16]
  427128:	stp	x20, x19, [sp, #32]
  42712c:	mov	w19, w0
  427130:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  427134:	sbfiz	x21, x19, #3, #32
  427138:	add	x22, x22, #0x118
  42713c:	ldr	w0, [x22, x21]
  427140:	mov	x29, sp
  427144:	mov	w20, w1
  427148:	bl	4047a0 <close@plt>
  42714c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  427150:	add	x8, x8, #0x138
  427154:	add	x19, x8, w19, sxtw #3
  427158:	ldr	w0, [x19, #4]
  42715c:	bl	4047a0 <close@plt>
  427160:	mov	w8, #0xffffffff            	// #-1
  427164:	str	w8, [x22, x21]
  427168:	str	w8, [x19, #4]
  42716c:	bl	404ce0 <__errno_location@plt>
  427170:	str	w20, [x0]
  427174:	ldp	x20, x19, [sp, #32]
  427178:	ldp	x22, x21, [sp, #16]
  42717c:	ldp	x29, x30, [sp], #48
  427180:	ret
  427184:	stp	x29, x30, [sp, #-32]!
  427188:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42718c:	add	x1, x1, #0x878
  427190:	stp	x20, x19, [sp, #16]
  427194:	mov	x29, sp
  427198:	mov	w19, w0
  42719c:	bl	427050 <wcrtomb@plt+0x22250>
  4271a0:	cmn	w0, #0x1
  4271a4:	b.eq	4271c8 <wcrtomb@plt+0x223c8>  // b.none
  4271a8:	mov	w0, w19
  4271ac:	bl	4270e4 <wcrtomb@plt+0x222e4>
  4271b0:	mov	x20, x0
  4271b4:	bl	404ce0 <__errno_location@plt>
  4271b8:	ldr	w1, [x0]
  4271bc:	mov	w0, w19
  4271c0:	bl	427120 <wcrtomb@plt+0x22320>
  4271c4:	b	4271cc <wcrtomb@plt+0x223cc>
  4271c8:	mov	w20, #0xffffffff            	// #-1
  4271cc:	mov	w0, w20
  4271d0:	ldp	x20, x19, [sp, #16]
  4271d4:	ldp	x29, x30, [sp], #32
  4271d8:	ret
  4271dc:	sub	sp, sp, #0x80
  4271e0:	stp	x22, x21, [sp, #96]
  4271e4:	mov	x22, x2
  4271e8:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x16808>
  4271ec:	stp	x20, x19, [sp, #112]
  4271f0:	mov	x20, x1
  4271f4:	mov	w19, w0
  4271f8:	add	x3, x3, #0x87b
  4271fc:	mov	x0, sp
  427200:	mov	w1, #0x1                   	// #1
  427204:	mov	w2, #0x40                  	// #64
  427208:	mov	x4, x22
  42720c:	stp	x29, x30, [sp, #64]
  427210:	str	x23, [sp, #80]
  427214:	add	x29, sp, #0x40
  427218:	bl	404190 <__sprintf_chk@plt>
  42721c:	mov	x1, sp
  427220:	mov	w0, w19
  427224:	bl	427050 <wcrtomb@plt+0x22250>
  427228:	cmn	w0, #0x1
  42722c:	b.eq	4272ac <wcrtomb@plt+0x224ac>  // b.none
  427230:	mov	w0, w19
  427234:	bl	4270e4 <wcrtomb@plt+0x222e4>
  427238:	mov	x21, x0
  42723c:	cmn	x0, #0x1
  427240:	mov	x0, #0xffffffffffffffff    	// #-1
  427244:	b.eq	4272b0 <wcrtomb@plt+0x224b0>  // b.none
  427248:	cmp	x21, x22
  42724c:	b.hi	4272b0 <wcrtomb@plt+0x224b0>  // b.pmore
  427250:	cbz	x21, 427298 <wcrtomb@plt+0x22498>
  427254:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  427258:	add	x8, x8, #0x118
  42725c:	mov	x22, xzr
  427260:	add	x23, x8, w19, sxtw #3
  427264:	ldr	w0, [x23]
  427268:	sub	x2, x21, x22
  42726c:	mov	x1, x20
  427270:	bl	439dd4 <argp_parse@@Base+0xb118>
  427274:	add	x8, x0, #0x1
  427278:	cmp	x8, #0x1
  42727c:	b.ls	4272a0 <wcrtomb@plt+0x224a0>  // b.plast
  427280:	add	x22, x0, x22
  427284:	cmp	x21, x22
  427288:	add	x20, x20, x0
  42728c:	b.hi	427264 <wcrtomb@plt+0x22464>  // b.pmore
  427290:	mov	x0, x21
  427294:	b	4272b0 <wcrtomb@plt+0x224b0>
  427298:	mov	x0, xzr
  42729c:	b	4272b0 <wcrtomb@plt+0x224b0>
  4272a0:	mov	w1, #0x5                   	// #5
  4272a4:	mov	w0, w19
  4272a8:	bl	427120 <wcrtomb@plt+0x22320>
  4272ac:	mov	x0, #0xffffffffffffffff    	// #-1
  4272b0:	ldp	x20, x19, [sp, #112]
  4272b4:	ldp	x22, x21, [sp, #96]
  4272b8:	ldr	x23, [sp, #80]
  4272bc:	ldp	x29, x30, [sp, #64]
  4272c0:	add	sp, sp, #0x80
  4272c4:	ret
  4272c8:	sub	sp, sp, #0x70
  4272cc:	stp	x20, x19, [sp, #96]
  4272d0:	mov	x20, x2
  4272d4:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x16808>
  4272d8:	stp	x22, x21, [sp, #80]
  4272dc:	mov	x21, x1
  4272e0:	mov	w19, w0
  4272e4:	add	x3, x3, #0x881
  4272e8:	mov	x0, sp
  4272ec:	mov	w1, #0x1                   	// #1
  4272f0:	mov	w2, #0x40                  	// #64
  4272f4:	mov	x4, x20
  4272f8:	stp	x29, x30, [sp, #64]
  4272fc:	add	x29, sp, #0x40
  427300:	bl	404190 <__sprintf_chk@plt>
  427304:	mov	x1, sp
  427308:	mov	w0, w19
  42730c:	bl	427050 <wcrtomb@plt+0x22250>
  427310:	cmn	w0, #0x1
  427314:	b.eq	427394 <wcrtomb@plt+0x22594>  // b.none
  427318:	mov	w0, #0xd                   	// #13
  42731c:	mov	w1, #0x1                   	// #1
  427320:	bl	404420 <signal@plt>
  427324:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  427328:	add	x8, x8, #0x138
  42732c:	add	x8, x8, w19, sxtw #3
  427330:	ldr	w8, [x8, #4]
  427334:	mov	x22, x0
  427338:	mov	x1, x21
  42733c:	mov	x2, x20
  427340:	mov	w0, w8
  427344:	bl	43273c <argp_parse@@Base+0x3a80>
  427348:	mov	x21, x0
  42734c:	mov	w0, #0xd                   	// #13
  427350:	mov	x1, x22
  427354:	bl	404420 <signal@plt>
  427358:	cmp	x21, x20
  42735c:	b.ne	427380 <wcrtomb@plt+0x22580>  // b.any
  427360:	mov	w0, w19
  427364:	bl	4270e4 <wcrtomb@plt+0x222e4>
  427368:	cmp	x0, #0x0
  42736c:	mov	x21, x0
  427370:	csel	x0, xzr, x20, lt  // lt = tstop
  427374:	tbnz	x21, #63, 427398 <wcrtomb@plt+0x22598>
  427378:	cmp	x21, x20
  42737c:	b.eq	427398 <wcrtomb@plt+0x22598>  // b.none
  427380:	mov	w1, #0x5                   	// #5
  427384:	mov	w0, w19
  427388:	bl	427120 <wcrtomb@plt+0x22320>
  42738c:	mov	x0, x21
  427390:	b	427398 <wcrtomb@plt+0x22598>
  427394:	mov	x0, xzr
  427398:	ldp	x20, x19, [sp, #96]
  42739c:	ldp	x22, x21, [sp, #80]
  4273a0:	ldp	x29, x30, [sp, #64]
  4273a4:	add	sp, sp, #0x70
  4273a8:	ret
  4273ac:	sub	sp, sp, #0xc0
  4273b0:	cmp	x1, #0x0
  4273b4:	add	x9, sp, #0x8
  4273b8:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  4273bc:	str	x19, [sp, #176]
  4273c0:	mov	w5, w2
  4273c4:	mov	w19, w0
  4273c8:	movk	x8, #0xcccd
  4273cc:	cneg	x10, x1, mi  // mi = first
  4273d0:	add	x4, x9, #0x13
  4273d4:	mov	w9, #0xa                   	// #10
  4273d8:	stp	x29, x30, [sp, #160]
  4273dc:	add	x29, sp, #0xa0
  4273e0:	strb	wzr, [sp, #28]
  4273e4:	umulh	x11, x10, x8
  4273e8:	lsr	x11, x11, #3
  4273ec:	msub	w12, w11, w9, w10
  4273f0:	orr	w12, w12, #0x30
  4273f4:	cmp	x10, #0x9
  4273f8:	strb	w12, [x4], #-1
  4273fc:	mov	x10, x11
  427400:	b.hi	4273e4 <wcrtomb@plt+0x225e4>  // b.pmore
  427404:	tbnz	x1, #63, 427410 <wcrtomb@plt+0x22610>
  427408:	add	x4, x4, #0x1
  42740c:	b	427418 <wcrtomb@plt+0x22618>
  427410:	mov	w8, #0x2d                  	// #45
  427414:	strb	w8, [x4]
  427418:	cmp	w5, #0x3
  42741c:	b.cs	42750c <wcrtomb@plt+0x2270c>  // b.hs, b.nlast
  427420:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x16808>
  427424:	add	x3, x3, #0x887
  427428:	add	x0, sp, #0x20
  42742c:	mov	w1, #0x1                   	// #1
  427430:	mov	w2, #0x40                  	// #64
  427434:	bl	404190 <__sprintf_chk@plt>
  427438:	add	x1, sp, #0x20
  42743c:	mov	w0, w19
  427440:	bl	427050 <wcrtomb@plt+0x22250>
  427444:	cmn	w0, #0x1
  427448:	b.eq	4274f4 <wcrtomb@plt+0x226f4>  // b.none
  42744c:	sub	x1, x29, #0x40
  427450:	mov	w0, w19
  427454:	bl	427708 <wcrtomb@plt+0x22908>
  427458:	cbz	x0, 4274f4 <wcrtomb@plt+0x226f4>
  42745c:	ldrb	w9, [x0]
  427460:	cmp	w9, #0x20
  427464:	b.eq	427470 <wcrtomb@plt+0x22670>  // b.none
  427468:	cmp	w9, #0x9
  42746c:	b.ne	427478 <wcrtomb@plt+0x22678>  // b.any
  427470:	add	x0, x0, #0x1
  427474:	b	42745c <wcrtomb@plt+0x2265c>
  427478:	cmp	w9, #0x2d
  42747c:	cset	w8, eq  // eq = none
  427480:	cmp	w9, #0x2b
  427484:	cset	w10, eq  // eq = none
  427488:	orr	w10, w8, w10
  42748c:	ldrb	w8, [x0, w10, uxtw]
  427490:	sub	w11, w8, #0x30
  427494:	cmp	w11, #0x9
  427498:	b.ls	4274a4 <wcrtomb@plt+0x226a4>  // b.plast
  42749c:	mov	x8, xzr
  4274a0:	b	4274f8 <wcrtomb@plt+0x226f8>
  4274a4:	mov	x8, xzr
  4274a8:	add	x10, x10, #0x1
  4274ac:	mov	w12, w11
  4274b0:	cmp	w9, #0x2d
  4274b4:	add	x8, x8, x8, lsl #2
  4274b8:	cneg	x12, x12, eq  // eq = none
  4274bc:	lsl	x11, x8, #1
  4274c0:	add	x8, x12, x8, lsl #1
  4274c4:	b.ne	4274d4 <wcrtomb@plt+0x226d4>  // b.any
  4274c8:	cmp	x11, x8
  4274cc:	b.ge	4274dc <wcrtomb@plt+0x226dc>  // b.tcont
  4274d0:	b	4274f4 <wcrtomb@plt+0x226f4>
  4274d4:	cmp	x8, x11
  4274d8:	b.lt	4274f4 <wcrtomb@plt+0x226f4>  // b.tstop
  4274dc:	ldrb	w11, [x0, x10]
  4274e0:	add	x10, x10, #0x1
  4274e4:	sub	w11, w11, #0x30
  4274e8:	cmp	w11, #0xa
  4274ec:	b.cc	4274ac <wcrtomb@plt+0x226ac>  // b.lo, b.ul, b.last
  4274f0:	b	4274f8 <wcrtomb@plt+0x226f8>
  4274f4:	mov	x8, #0xffffffffffffffff    	// #-1
  4274f8:	ldr	x19, [sp, #176]
  4274fc:	ldp	x29, x30, [sp, #160]
  427500:	mov	x0, x8
  427504:	add	sp, sp, #0xc0
  427508:	ret
  42750c:	bl	404850 <abort@plt>
  427510:	sub	sp, sp, #0xa0
  427514:	mov	w8, #0x6d02                	// #27906
  427518:	movk	w8, #0x8030, lsl #16
  42751c:	stp	x20, x19, [sp, #144]
  427520:	mov	x20, x2
  427524:	cmp	w1, w8
  427528:	mov	w19, w0
  42752c:	stp	x29, x30, [sp, #96]
  427530:	str	x23, [sp, #112]
  427534:	stp	x22, x21, [sp, #128]
  427538:	add	x29, sp, #0x60
  42753c:	b.eq	4275a4 <wcrtomb@plt+0x227a4>  // b.none
  427540:	mov	w8, #0x6d01                	// #27905
  427544:	movk	w8, #0x4008, lsl #16
  427548:	cmp	w1, w8
  42754c:	b.ne	4275e4 <wcrtomb@plt+0x227e4>  // b.any
  427550:	ldrsw	x9, [x20, #4]
  427554:	add	x10, sp, #0x8
  427558:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  42755c:	movk	x8, #0xcccd
  427560:	cmp	x9, #0x0
  427564:	add	x5, x10, #0x13
  427568:	cneg	x10, x9, mi  // mi = first
  42756c:	mov	w9, #0xa                   	// #10
  427570:	strb	wzr, [sp, #28]
  427574:	umulh	x11, x10, x8
  427578:	lsr	x11, x11, #3
  42757c:	msub	w12, w11, w9, w10
  427580:	orr	w12, w12, #0x30
  427584:	cmp	x10, #0x9
  427588:	strb	w12, [x5], #-1
  42758c:	mov	x10, x11
  427590:	b.hi	427574 <wcrtomb@plt+0x22774>  // b.pmore
  427594:	ldr	w8, [x20, #4]
  427598:	tbnz	w8, #31, 4275f4 <wcrtomb@plt+0x227f4>
  42759c:	add	x5, x5, #0x1
  4275a0:	b	4275fc <wcrtomb@plt+0x227fc>
  4275a4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  4275a8:	add	x1, x1, #0x338
  4275ac:	mov	w0, w19
  4275b0:	bl	427050 <wcrtomb@plt+0x22250>
  4275b4:	cmn	w0, #0x1
  4275b8:	b.eq	4276ec <wcrtomb@plt+0x228ec>  // b.none
  4275bc:	mov	w0, w19
  4275c0:	bl	4270e4 <wcrtomb@plt+0x222e4>
  4275c4:	cmn	x0, #0x1
  4275c8:	b.eq	4276f0 <wcrtomb@plt+0x228f0>  // b.none
  4275cc:	mov	x21, x0
  4275d0:	cmp	x0, #0x8
  4275d4:	b.ls	427638 <wcrtomb@plt+0x22838>  // b.plast
  4275d8:	bl	404ce0 <__errno_location@plt>
  4275dc:	mov	w8, #0x4b                  	// #75
  4275e0:	b	4275ec <wcrtomb@plt+0x227ec>
  4275e4:	bl	404ce0 <__errno_location@plt>
  4275e8:	mov	w8, #0x5f                  	// #95
  4275ec:	str	w8, [x0]
  4275f0:	b	4276ec <wcrtomb@plt+0x228ec>
  4275f4:	mov	w8, #0x2d                  	// #45
  4275f8:	strb	w8, [x5]
  4275fc:	ldrsh	w4, [x20]
  427600:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x16808>
  427604:	add	x3, x3, #0x88f
  427608:	add	x0, sp, #0x20
  42760c:	mov	w1, #0x1                   	// #1
  427610:	mov	w2, #0x40                  	// #64
  427614:	bl	404190 <__sprintf_chk@plt>
  427618:	add	x1, sp, #0x20
  42761c:	mov	w0, w19
  427620:	bl	427050 <wcrtomb@plt+0x22250>
  427624:	cmn	w0, #0x1
  427628:	b.eq	4276ec <wcrtomb@plt+0x228ec>  // b.none
  42762c:	mov	w0, w19
  427630:	bl	4270e4 <wcrtomb@plt+0x222e4>
  427634:	b	4276f0 <wcrtomb@plt+0x228f0>
  427638:	cbz	x21, 4276d8 <wcrtomb@plt+0x228d8>
  42763c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  427640:	add	x8, x8, #0x118
  427644:	add	x23, x8, w19, sxtw #3
  427648:	ldr	w0, [x23]
  42764c:	mov	x1, x20
  427650:	mov	x2, x21
  427654:	mov	x22, x20
  427658:	bl	439dd4 <argp_parse@@Base+0xb118>
  42765c:	add	x9, x0, #0x1
  427660:	cmp	x9, #0x1
  427664:	b.ls	4276e0 <wcrtomb@plt+0x228e0>  // b.plast
  427668:	sub	x21, x21, x0
  42766c:	mov	x8, x0
  427670:	cmp	x21, #0x0
  427674:	add	x20, x22, x0
  427678:	b.gt	427648 <wcrtomb@plt+0x22848>
  42767c:	ldr	x9, [x20]
  427680:	mov	w0, wzr
  427684:	cmp	x9, #0x100
  427688:	b.lt	4276f0 <wcrtomb@plt+0x228f0>  // b.tstop
  42768c:	cbz	x21, 4276f0 <wcrtomb@plt+0x228f0>
  427690:	ldrb	w10, [x20, #1]
  427694:	cmp	x21, #0x3
  427698:	strb	w9, [x20, #1]
  42769c:	strb	w10, [x20]
  4276a0:	b.cc	4276d8 <wcrtomb@plt+0x228d8>  // b.lo, b.ul, b.last
  4276a4:	mov	x9, xzr
  4276a8:	add	x8, x22, x8
  4276ac:	add	x10, x8, x9
  4276b0:	ldrb	w12, [x10, #3]
  4276b4:	ldrb	w13, [x10, #2]
  4276b8:	add	x11, x9, #0x4
  4276bc:	mov	w0, wzr
  4276c0:	add	x9, x9, #0x2
  4276c4:	cmp	x11, x21
  4276c8:	strb	w12, [x10, #2]
  4276cc:	strb	w13, [x10, #3]
  4276d0:	b.cc	4276ac <wcrtomb@plt+0x228ac>  // b.lo, b.ul, b.last
  4276d4:	b	4276f0 <wcrtomb@plt+0x228f0>
  4276d8:	mov	w0, wzr
  4276dc:	b	4276f0 <wcrtomb@plt+0x228f0>
  4276e0:	mov	w1, #0x5                   	// #5
  4276e4:	mov	w0, w19
  4276e8:	bl	427120 <wcrtomb@plt+0x22320>
  4276ec:	mov	w0, #0xffffffff            	// #-1
  4276f0:	ldp	x20, x19, [sp, #144]
  4276f4:	ldp	x22, x21, [sp, #128]
  4276f8:	ldr	x23, [sp, #112]
  4276fc:	ldp	x29, x30, [sp, #96]
  427700:	add	sp, sp, #0xa0
  427704:	ret
  427708:	stp	x29, x30, [sp, #-64]!
  42770c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  427710:	add	x8, x8, #0x118
  427714:	str	x23, [sp, #16]
  427718:	stp	x22, x21, [sp, #32]
  42771c:	stp	x20, x19, [sp, #48]
  427720:	mov	x20, x1
  427724:	mov	w19, w0
  427728:	mov	x23, xzr
  42772c:	add	x22, x8, w0, sxtw #3
  427730:	mov	x29, sp
  427734:	ldr	w0, [x22]
  427738:	add	x21, x20, x23
  42773c:	mov	w2, #0x1                   	// #1
  427740:	mov	x1, x21
  427744:	bl	439dd4 <argp_parse@@Base+0xb118>
  427748:	cmp	x0, #0x1
  42774c:	b.ne	427778 <wcrtomb@plt+0x22978>  // b.any
  427750:	ldrb	w8, [x21]
  427754:	cmp	w8, #0xa
  427758:	b.eq	42776c <wcrtomb@plt+0x2296c>  // b.none
  42775c:	add	x23, x23, #0x1
  427760:	cmp	w23, #0x40
  427764:	b.ne	427734 <wcrtomb@plt+0x22934>  // b.any
  427768:	b	427778 <wcrtomb@plt+0x22978>
  42776c:	cmp	w23, #0x40
  427770:	strb	wzr, [x20, x23]
  427774:	b.ne	4277a0 <wcrtomb@plt+0x229a0>  // b.any
  427778:	mov	w1, #0x5                   	// #5
  42777c:	mov	w0, w19
  427780:	bl	427120 <wcrtomb@plt+0x22320>
  427784:	mov	x20, xzr
  427788:	mov	x0, x20
  42778c:	ldp	x20, x19, [sp, #48]
  427790:	ldp	x22, x21, [sp, #32]
  427794:	ldr	x23, [sp, #16]
  427798:	ldp	x29, x30, [sp], #64
  42779c:	ret
  4277a0:	add	x20, x20, #0x1
  4277a4:	ldurb	w8, [x20, #-1]
  4277a8:	cmp	w8, #0x20
  4277ac:	b.eq	4277a0 <wcrtomb@plt+0x229a0>  // b.none
  4277b0:	sub	w9, w8, #0x45
  4277b4:	cmp	w9, #0x2
  4277b8:	b.cs	42780c <wcrtomb@plt+0x22a0c>  // b.hs, b.nlast
  4277bc:	ldr	w0, [x22]
  4277c0:	add	x1, x29, #0x1c
  4277c4:	mov	w2, #0x1                   	// #1
  4277c8:	bl	439dd4 <argp_parse@@Base+0xb118>
  4277cc:	cmp	x0, #0x1
  4277d0:	b.ne	4277e0 <wcrtomb@plt+0x229e0>  // b.any
  4277d4:	ldrb	w8, [x29, #28]
  4277d8:	cmp	w8, #0xa
  4277dc:	b.ne	4277bc <wcrtomb@plt+0x229bc>  // b.any
  4277e0:	mov	x0, x20
  4277e4:	bl	404470 <atoi@plt>
  4277e8:	mov	w21, w0
  4277ec:	bl	404ce0 <__errno_location@plt>
  4277f0:	str	w21, [x0]
  4277f4:	ldurb	w8, [x20, #-1]
  4277f8:	cmp	w8, #0x46
  4277fc:	b.ne	427784 <wcrtomb@plt+0x22984>  // b.any
  427800:	mov	w0, w19
  427804:	mov	w1, w21
  427808:	b	427780 <wcrtomb@plt+0x22980>
  42780c:	cmp	w8, #0x41
  427810:	b.ne	427778 <wcrtomb@plt+0x22978>  // b.any
  427814:	b	427788 <wcrtomb@plt+0x22988>
  427818:	stp	x29, x30, [sp, #-64]!
  42781c:	stp	x24, x23, [sp, #16]
  427820:	stp	x22, x21, [sp, #32]
  427824:	stp	x20, x19, [sp, #48]
  427828:	adrp	x23, 452000 <_obstack_memory_used@@Base+0x16808>
  42782c:	adrp	x20, 452000 <_obstack_memory_used@@Base+0x16808>
  427830:	adrp	x21, 452000 <_obstack_memory_used@@Base+0x16808>
  427834:	mov	x19, xzr
  427838:	mov	w24, #0x1                   	// #1
  42783c:	add	x23, x23, #0x8f8
  427840:	add	x20, x20, #0x90e
  427844:	add	x21, x21, #0x904
  427848:	mov	x29, sp
  42784c:	mov	w1, #0x1                   	// #1
  427850:	mov	w0, w19
  427854:	bl	43b18c <argp_parse@@Base+0xc4d0>
  427858:	tbz	w0, #31, 4278b8 <wcrtomb@plt+0x22ab8>
  42785c:	bl	404ce0 <__errno_location@plt>
  427860:	ldr	w8, [x0]
  427864:	cmp	w8, #0x9
  427868:	b.ne	4278b4 <wcrtomb@plt+0x22ab4>  // b.any
  42786c:	ldr	w22, [x23, x19, lsl #2]
  427870:	sub	x8, x19, #0x1
  427874:	cmp	x8, #0x2
  427878:	b.cc	427898 <wcrtomb@plt+0x22a98>  // b.lo, b.ul, b.last
  42787c:	mov	x0, x21
  427880:	mov	w1, w22
  427884:	bl	404510 <open@plt>
  427888:	cmp	x19, w0, uxtw
  42788c:	b.ne	427898 <wcrtomb@plt+0x22a98>  // b.any
  427890:	mov	w0, wzr
  427894:	b	4278a4 <wcrtomb@plt+0x22aa4>
  427898:	mov	x0, x20
  42789c:	mov	w1, w22
  4278a0:	bl	404510 <open@plt>
  4278a4:	cmp	x19, w0, uxtw
  4278a8:	b.eq	4278b8 <wcrtomb@plt+0x22ab8>  // b.none
  4278ac:	tbnz	w0, #31, 4278b4 <wcrtomb@plt+0x22ab4>
  4278b0:	bl	4047a0 <close@plt>
  4278b4:	mov	w24, wzr
  4278b8:	add	x19, x19, #0x1
  4278bc:	cmp	x19, #0x3
  4278c0:	b.ne	42784c <wcrtomb@plt+0x22a4c>  // b.any
  4278c4:	and	w0, w24, #0x1
  4278c8:	ldp	x20, x19, [sp, #48]
  4278cc:	ldp	x22, x21, [sp, #32]
  4278d0:	ldp	x24, x23, [sp, #16]
  4278d4:	ldp	x29, x30, [sp], #64
  4278d8:	ret
  4278dc:	stp	x29, x30, [sp, #-48]!
  4278e0:	stp	x22, x21, [sp, #16]
  4278e4:	stp	x20, x19, [sp, #32]
  4278e8:	ldr	x8, [x0]
  4278ec:	mov	w21, w1
  4278f0:	mov	x29, sp
  4278f4:	mov	x20, x2
  4278f8:	add	x8, x8, w1, sxtw
  4278fc:	add	x1, x8, #0x1
  427900:	mov	x19, x0
  427904:	bl	4279d4 <wcrtomb@plt+0x22bd4>
  427908:	cbnz	w0, 42796c <wcrtomb@plt+0x22b6c>
  42790c:	cbz	w21, 427948 <wcrtomb@plt+0x22b48>
  427910:	mov	x22, xzr
  427914:	sxtw	x21, w21
  427918:	ldr	x0, [x20, x22, lsl #3]
  42791c:	bl	404760 <strdup@plt>
  427920:	cbz	x0, 42797c <wcrtomb@plt+0x22b7c>
  427924:	ldp	x10, x9, [x19, #8]
  427928:	ldr	x8, [x19]
  42792c:	add	x11, x9, x8
  427930:	add	x11, x22, x11
  427934:	add	x22, x22, #0x1
  427938:	cmp	x22, x21
  42793c:	str	x0, [x10, x11, lsl #3]
  427940:	b.cc	427918 <wcrtomb@plt+0x22b18>  // b.lo, b.ul, b.last
  427944:	b	427954 <wcrtomb@plt+0x22b54>
  427948:	ldr	x8, [x19]
  42794c:	ldr	x9, [x19, #16]
  427950:	mov	x22, xzr
  427954:	ldr	x10, [x19, #8]
  427958:	add	x8, x8, x22
  42795c:	mov	w0, wzr
  427960:	str	x8, [x19]
  427964:	add	x8, x9, x8
  427968:	str	xzr, [x10, x8, lsl #3]
  42796c:	ldp	x20, x19, [sp, #32]
  427970:	ldp	x22, x21, [sp, #16]
  427974:	ldp	x29, x30, [sp], #48
  427978:	ret
  42797c:	cbz	x22, 4279c0 <wcrtomb@plt+0x22bc0>
  427980:	ldr	x8, [x19, #16]
  427984:	ldr	x9, [x19]
  427988:	sub	x20, x22, #0x1
  42798c:	ldr	x10, [x19, #8]
  427990:	add	x8, x8, x9
  427994:	add	x8, x20, x8
  427998:	ldr	x0, [x10, x8, lsl #3]
  42799c:	bl	4049b0 <free@plt>
  4279a0:	ldp	x10, x8, [x19, #8]
  4279a4:	ldr	x9, [x19]
  4279a8:	add	x11, x8, x9
  4279ac:	add	x11, x20, x11
  4279b0:	sub	x20, x20, #0x1
  4279b4:	cmn	x20, #0x1
  4279b8:	str	xzr, [x10, x11, lsl #3]
  4279bc:	b.ne	42798c <wcrtomb@plt+0x22b8c>  // b.any
  4279c0:	mov	x0, x19
  4279c4:	ldp	x20, x19, [sp, #32]
  4279c8:	ldp	x22, x21, [sp, #16]
  4279cc:	ldp	x29, x30, [sp], #48
  4279d0:	b	427a7c <wcrtomb@plt+0x22c7c>
  4279d4:	stp	x29, x30, [sp, #-32]!
  4279d8:	stp	x20, x19, [sp, #16]
  4279dc:	ldrb	w8, [x0, #32]
  4279e0:	mov	x19, x0
  4279e4:	mov	x29, sp
  4279e8:	tbnz	w8, #1, 4279f4 <wcrtomb@plt+0x22bf4>
  4279ec:	mov	x8, xzr
  4279f0:	b	4279f8 <wcrtomb@plt+0x22bf8>
  4279f4:	ldr	x8, [x19, #16]
  4279f8:	ldr	x0, [x19, #8]
  4279fc:	cbz	x0, 427a4c <wcrtomb@plt+0x22c4c>
  427a00:	ldr	x9, [x19]
  427a04:	ldr	x10, [x19, #24]
  427a08:	add	x8, x9, x8
  427a0c:	add	x9, x8, x1
  427a10:	cmp	x10, x9
  427a14:	b.cs	427a3c <wcrtomb@plt+0x22c3c>  // b.hs, b.nlast
  427a18:	cmp	x1, #0x80
  427a1c:	mov	w9, #0x80                  	// #128
  427a20:	csel	x9, x1, x9, hi  // hi = pmore
  427a24:	add	x20, x8, x9
  427a28:	lsl	x1, x20, #3
  427a2c:	bl	404710 <realloc@plt>
  427a30:	cbz	x0, 427a6c <wcrtomb@plt+0x22c6c>
  427a34:	str	x20, [x19, #24]
  427a38:	str	x0, [x19, #8]
  427a3c:	ldp	x20, x19, [sp, #16]
  427a40:	mov	w0, wzr
  427a44:	ldp	x29, x30, [sp], #32
  427a48:	ret
  427a4c:	add	x8, x8, x1
  427a50:	cmp	x8, #0x80
  427a54:	mov	w8, #0x80                  	// #128
  427a58:	csel	x20, x1, x8, hi  // hi = pmore
  427a5c:	mov	w1, #0x8                   	// #8
  427a60:	mov	x0, x20
  427a64:	bl	404680 <calloc@plt>
  427a68:	cbnz	x0, 427a34 <wcrtomb@plt+0x22c34>
  427a6c:	mov	x0, x19
  427a70:	ldp	x20, x19, [sp, #16]
  427a74:	ldp	x29, x30, [sp], #32
  427a78:	b	427a7c <wcrtomb@plt+0x22c7c>
  427a7c:	stp	x29, x30, [sp, #-48]!
  427a80:	str	x21, [sp, #16]
  427a84:	stp	x20, x19, [sp, #32]
  427a88:	mov	x29, sp
  427a8c:	mov	x19, x0
  427a90:	bl	404ce0 <__errno_location@plt>
  427a94:	mov	w8, #0xc                   	// #12
  427a98:	str	w8, [x0]
  427a9c:	ldr	w8, [x19, #32]
  427aa0:	mov	w9, #0x2                   	// #2
  427aa4:	str	w9, [x19, #192]
  427aa8:	tbnz	w8, #7, 427af0 <wcrtomb@plt+0x22cf0>
  427aac:	tbnz	w8, #4, 427b04 <wcrtomb@plt+0x22d04>
  427ab0:	tbnz	w8, #3, 427abc <wcrtomb@plt+0x22cbc>
  427ab4:	mov	x0, x19
  427ab8:	bl	42800c <wcrtomb@plt+0x2320c>
  427abc:	mov	x20, x19
  427ac0:	ldr	x0, [x20, #208]!
  427ac4:	cbz	x0, 427ad8 <wcrtomb@plt+0x22cd8>
  427ac8:	ldr	x21, [x0, #8]
  427acc:	bl	428b08 <wcrtomb@plt+0x23d08>
  427ad0:	mov	x0, x21
  427ad4:	cbnz	x21, 427ac8 <wcrtomb@plt+0x22cc8>
  427ad8:	stp	xzr, xzr, [x20]
  427adc:	ldr	w0, [x19, #192]
  427ae0:	ldp	x20, x19, [sp, #32]
  427ae4:	ldr	x21, [sp, #16]
  427ae8:	ldp	x29, x30, [sp], #48
  427aec:	ret
  427af0:	ldr	x8, [x19, #88]
  427af4:	mov	x0, x19
  427af8:	blr	x8
  427afc:	ldr	w8, [x19, #32]
  427b00:	tbz	w8, #4, 427ab0 <wcrtomb@plt+0x22cb0>
  427b04:	mov	x0, x19
  427b08:	bl	428110 <wcrtomb@plt+0x23310>
  427b0c:	ldr	w8, [x19, #32]
  427b10:	tbz	w8, #3, 427ab4 <wcrtomb@plt+0x22cb4>
  427b14:	b	427abc <wcrtomb@plt+0x22cbc>
  427b18:	str	wzr, [x2]
  427b1c:	ldrb	w15, [x0]
  427b20:	cbz	w15, 427c18 <wcrtomb@plt+0x22e18>
  427b24:	cmp	w1, #0x0
  427b28:	mov	x10, #0x1                   	// #1
  427b2c:	adrp	x14, 46a000 <_obstack_memory_used@@Base+0x2e808>
  427b30:	mov	x8, xzr
  427b34:	mov	w9, #0x1                   	// #1
  427b38:	movk	x10, #0x5, lsl #32
  427b3c:	mov	w11, #0x3                   	// #3
  427b40:	adrp	x12, 46a000 <_obstack_memory_used@@Base+0x2e808>
  427b44:	cset	w13, ne  // ne = any
  427b48:	add	x14, x14, #0x15a
  427b4c:	and	w16, w15, #0xff
  427b50:	cmp	w16, #0x3f
  427b54:	b.hi	427b6c <wcrtomb@plt+0x22d6c>  // b.pmore
  427b58:	lsl	x16, x9, x15
  427b5c:	and	x16, x16, x10
  427b60:	cbz	x16, 427b6c <wcrtomb@plt+0x22d6c>
  427b64:	str	w9, [x2]
  427b68:	ldrb	w15, [x0]
  427b6c:	and	w16, w15, #0xff
  427b70:	cmp	w16, #0x21
  427b74:	b.gt	427b90 <wcrtomb@plt+0x22d90>
  427b78:	cmp	w16, #0x9
  427b7c:	b.eq	427ba8 <wcrtomb@plt+0x22da8>  // b.none
  427b80:	cmp	w16, #0x20
  427b84:	b.ne	427bb4 <wcrtomb@plt+0x22db4>  // b.any
  427b88:	mov	w16, #0x1                   	// #1
  427b8c:	b	427c08 <wcrtomb@plt+0x22e08>
  427b90:	cmp	w16, #0x5c
  427b94:	b.eq	427ba8 <wcrtomb@plt+0x22da8>  // b.none
  427b98:	cmp	w16, #0x22
  427b9c:	b.ne	427bb4 <wcrtomb@plt+0x22db4>  // b.any
  427ba0:	mov	w16, #0x2                   	// #2
  427ba4:	b	427c08 <wcrtomb@plt+0x22e08>
  427ba8:	cbz	w1, 427be0 <wcrtomb@plt+0x22de0>
  427bac:	mov	w16, #0x3                   	// #3
  427bb0:	b	427c08 <wcrtomb@plt+0x22e08>
  427bb4:	and	w16, w15, #0xff
  427bb8:	sxtb	w17, w15
  427bbc:	cmp	w16, #0x1f
  427bc0:	cset	w16, hi  // hi = pmore
  427bc4:	cmp	w17, #0x0
  427bc8:	cset	w17, ge  // ge = tcont
  427bcc:	and	w18, w16, w17
  427bd0:	tst	w16, w17
  427bd4:	orr	w18, w18, w13
  427bd8:	csinc	x16, x11, xzr, eq  // eq = none
  427bdc:	tbnz	w18, #0, 427c08 <wcrtomb@plt+0x22e08>
  427be0:	ldrb	w16, [x12, #344]
  427be4:	cbz	w16, 427c04 <wcrtomb@plt+0x22e04>
  427be8:	mov	x16, x14
  427bec:	ldurb	w17, [x16, #-1]
  427bf0:	cbz	w17, 427c04 <wcrtomb@plt+0x22e04>
  427bf4:	cmp	w17, w15, uxtb
  427bf8:	b.eq	427ba0 <wcrtomb@plt+0x22da0>  // b.none
  427bfc:	ldrb	w17, [x16], #2
  427c00:	cbnz	w17, 427bec <wcrtomb@plt+0x22dec>
  427c04:	mov	w16, #0x4                   	// #4
  427c08:	ldrb	w15, [x0, #1]!
  427c0c:	add	x8, x8, x16
  427c10:	cbnz	w15, 427b4c <wcrtomb@plt+0x22d4c>
  427c14:	b	427c1c <wcrtomb@plt+0x22e1c>
  427c18:	mov	x8, xzr
  427c1c:	mov	x0, x8
  427c20:	ret
  427c24:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  427c28:	ldrb	w8, [x8, #344]
  427c2c:	cbz	w8, 427c50 <wcrtomb@plt+0x22e50>
  427c30:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  427c34:	add	x9, x9, #0x15a
  427c38:	ldurb	w10, [x9, #-1]
  427c3c:	cbz	w10, 427c50 <wcrtomb@plt+0x22e50>
  427c40:	cmp	w10, w0
  427c44:	b.eq	427c58 <wcrtomb@plt+0x22e58>  // b.none
  427c48:	ldrb	w8, [x9], #2
  427c4c:	cbnz	w8, 427c38 <wcrtomb@plt+0x22e38>
  427c50:	mov	w0, wzr
  427c54:	ret
  427c58:	and	w0, w8, #0xff
  427c5c:	ret
  427c60:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  427c64:	ldrb	w10, [x8, #344]
  427c68:	cbz	w10, 427c8c <wcrtomb@plt+0x22e8c>
  427c6c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  427c70:	add	x9, x9, #0x15a
  427c74:	ldurb	w8, [x9, #-1]
  427c78:	cbz	w8, 427c90 <wcrtomb@plt+0x22e90>
  427c7c:	cmp	w0, w10, uxtb
  427c80:	b.eq	427c90 <wcrtomb@plt+0x22e90>  // b.none
  427c84:	ldrb	w10, [x9], #2
  427c88:	cbnz	w10, 427c74 <wcrtomb@plt+0x22e74>
  427c8c:	mov	w8, wzr
  427c90:	mov	w0, w8
  427c94:	ret
  427c98:	sub	sp, sp, #0x60
  427c9c:	stp	x26, x25, [sp, #32]
  427ca0:	stp	x24, x23, [sp, #48]
  427ca4:	stp	x22, x21, [sp, #64]
  427ca8:	adrp	x22, 452000 <_obstack_memory_used@@Base+0x16808>
  427cac:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x2e808>
  427cb0:	adrp	x23, 452000 <_obstack_memory_used@@Base+0x16808>
  427cb4:	stp	x20, x19, [sp, #80]
  427cb8:	mov	w19, w2
  427cbc:	mov	x20, x1
  427cc0:	mov	x21, x0
  427cc4:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x2e808>
  427cc8:	mov	w25, #0x5c                  	// #92
  427ccc:	add	x22, x22, #0xa27
  427cd0:	add	x26, x26, #0x15a
  427cd4:	add	x23, x23, #0xa20
  427cd8:	stp	x29, x30, [sp, #16]
  427cdc:	add	x29, sp, #0x10
  427ce0:	ldrb	w5, [x20]
  427ce4:	cmp	w5, #0x21
  427ce8:	b.le	427d14 <wcrtomb@plt+0x22f14>
  427cec:	cmp	w5, #0x5c
  427cf0:	b.eq	427d1c <wcrtomb@plt+0x22f1c>  // b.none
  427cf4:	cmp	w5, #0x22
  427cf8:	b.ne	427db0 <wcrtomb@plt+0x22fb0>  // b.any
  427cfc:	strb	w25, [x21]
  427d00:	ldrb	w8, [x20]
  427d04:	add	x9, x21, #0x2
  427d08:	strb	w8, [x21, #1]
  427d0c:	mov	x21, x9
  427d10:	b	427dc4 <wcrtomb@plt+0x22fc4>
  427d14:	cmp	w5, #0x9
  427d18:	b.ne	427dac <wcrtomb@plt+0x22fac>  // b.any
  427d1c:	cbz	w19, 427d50 <wcrtomb@plt+0x22f50>
  427d20:	sub	x0, x29, #0x4
  427d24:	mov	w1, #0x4                   	// #4
  427d28:	mov	w2, #0x1                   	// #1
  427d2c:	mov	w3, #0x4                   	// #4
  427d30:	mov	x4, x23
  427d34:	bl	404440 <__snprintf_chk@plt>
  427d38:	ldurh	w8, [x29, #-4]
  427d3c:	ldurb	w9, [x29, #-2]
  427d40:	strh	w8, [x21]
  427d44:	strb	w9, [x21, #2]
  427d48:	add	x21, x21, #0x3
  427d4c:	b	427dc4 <wcrtomb@plt+0x22fc4>
  427d50:	ldrb	w8, [x24, #344]
  427d54:	cbz	w8, 427d74 <wcrtomb@plt+0x22f74>
  427d58:	mov	x9, x26
  427d5c:	ldurb	w10, [x9, #-1]
  427d60:	cbz	w10, 427d74 <wcrtomb@plt+0x22f74>
  427d64:	cmp	w10, w5
  427d68:	b.eq	427dcc <wcrtomb@plt+0x22fcc>  // b.none
  427d6c:	ldrb	w8, [x9], #2
  427d70:	cbnz	w8, 427d5c <wcrtomb@plt+0x22f5c>
  427d74:	strb	w25, [x21]
  427d78:	ldrb	w5, [x20]
  427d7c:	sub	x0, x29, #0x4
  427d80:	mov	w1, #0x4                   	// #4
  427d84:	mov	w2, #0x1                   	// #1
  427d88:	mov	w3, #0x4                   	// #4
  427d8c:	mov	x4, x22
  427d90:	bl	404440 <__snprintf_chk@plt>
  427d94:	ldurh	w8, [x29, #-4]
  427d98:	ldurb	w9, [x29, #-2]
  427d9c:	sturh	w8, [x21, #1]
  427da0:	strb	w9, [x21, #3]
  427da4:	add	x21, x21, #0x4
  427da8:	b	427dc4 <wcrtomb@plt+0x22fc4>
  427dac:	cbz	w5, 427dd4 <wcrtomb@plt+0x22fd4>
  427db0:	cmp	w5, #0x20
  427db4:	b.cc	427d1c <wcrtomb@plt+0x22f1c>  // b.lo, b.ul, b.last
  427db8:	sxtb	w8, w5
  427dbc:	tbnz	w8, #31, 427d1c <wcrtomb@plt+0x22f1c>
  427dc0:	strb	w5, [x21], #1
  427dc4:	add	x20, x20, #0x1
  427dc8:	b	427ce0 <wcrtomb@plt+0x22ee0>
  427dcc:	strb	w25, [x21]
  427dd0:	b	427d04 <wcrtomb@plt+0x22f04>
  427dd4:	ldp	x20, x19, [sp, #80]
  427dd8:	ldp	x22, x21, [sp, #64]
  427ddc:	ldp	x24, x23, [sp, #48]
  427de0:	ldp	x26, x25, [sp, #32]
  427de4:	ldp	x29, x30, [sp, #16]
  427de8:	add	sp, sp, #0x60
  427dec:	ret
  427df0:	stp	x29, x30, [sp, #-32]!
  427df4:	stp	x20, x19, [sp, #16]
  427df8:	mov	x19, x2
  427dfc:	mov	x29, sp
  427e00:	cbz	x0, 427e34 <wcrtomb@plt+0x23034>
  427e04:	mov	x2, x1
  427e08:	mov	x1, x0
  427e0c:	mov	x0, x19
  427e10:	bl	428518 <wcrtomb@plt+0x23718>
  427e14:	cbnz	w0, 427e54 <wcrtomb@plt+0x23054>
  427e18:	mov	x20, xzr
  427e1c:	str	wzr, [x19, #224]
  427e20:	mov	x0, x19
  427e24:	mov	x1, x20
  427e28:	bl	4286dc <wcrtomb@plt+0x238dc>
  427e2c:	cbnz	w0, 427e54 <wcrtomb@plt+0x23054>
  427e30:	b	427e68 <wcrtomb@plt+0x23068>
  427e34:	tbnz	w3, #29, 427e60 <wcrtomb@plt+0x23060>
  427e38:	ldrb	w8, [x19, #32]
  427e3c:	mov	w0, #0x3                   	// #3
  427e40:	str	w0, [x19, #192]
  427e44:	tbz	w8, #4, 427e54 <wcrtomb@plt+0x23054>
  427e48:	mov	x0, x19
  427e4c:	bl	428110 <wcrtomb@plt+0x23310>
  427e50:	mov	w0, #0x3                   	// #3
  427e54:	ldp	x20, x19, [sp, #16]
  427e58:	ldp	x29, x30, [sp], #32
  427e5c:	ret
  427e60:	ldr	x8, [x19, #208]
  427e64:	cbz	x8, 427e78 <wcrtomb@plt+0x23078>
  427e68:	mov	x0, x19
  427e6c:	ldp	x20, x19, [sp, #16]
  427e70:	ldp	x29, x30, [sp], #32
  427e74:	b	4281b8 <wcrtomb@plt+0x233b8>
  427e78:	ldp	x10, x9, [x19, #176]
  427e7c:	ldr	w8, [x19, #32]
  427e80:	cmp	x9, x10
  427e84:	b.ne	427ea4 <wcrtomb@plt+0x230a4>  // b.any
  427e88:	mov	w0, #0x6                   	// #6
  427e8c:	str	w0, [x19, #192]
  427e90:	tbz	w8, #4, 427e54 <wcrtomb@plt+0x23054>
  427e94:	mov	x0, x19
  427e98:	bl	428110 <wcrtomb@plt+0x23310>
  427e9c:	mov	w0, #0x6                   	// #6
  427ea0:	b	427e54 <wcrtomb@plt+0x23054>
  427ea4:	mov	w10, #0xffffffff            	// #-1
  427ea8:	orr	w11, w8, #0x8
  427eac:	eor	w8, w10, w8, lsr #12
  427eb0:	and	x8, x8, #0x1
  427eb4:	mov	x0, x19
  427eb8:	add	x20, x9, x8
  427ebc:	str	w11, [x19, #32]
  427ec0:	bl	4284bc <wcrtomb@plt+0x236bc>
  427ec4:	b	427e20 <wcrtomb@plt+0x23020>
  427ec8:	stp	x29, x30, [sp, #-48]!
  427ecc:	str	x21, [sp, #16]
  427ed0:	stp	x20, x19, [sp, #32]
  427ed4:	mov	w19, w2
  427ed8:	mov	x20, x1
  427edc:	mov	x21, x0
  427ee0:	mov	x29, sp
  427ee4:	cbz	x0, 427ef8 <wcrtomb@plt+0x230f8>
  427ee8:	mov	x0, x21
  427eec:	bl	404170 <strlen@plt>
  427ef0:	mov	x1, x0
  427ef4:	b	427efc <wcrtomb@plt+0x230fc>
  427ef8:	mov	x1, xzr
  427efc:	mov	x0, x21
  427f00:	mov	x2, x20
  427f04:	mov	w3, w19
  427f08:	ldp	x20, x19, [sp, #32]
  427f0c:	ldr	x21, [sp, #16]
  427f10:	ldp	x29, x30, [sp], #48
  427f14:	b	427df0 <wcrtomb@plt+0x22ff0>
  427f18:	stp	x29, x30, [sp, #-32]!
  427f1c:	stp	x20, x19, [sp, #16]
  427f20:	ldr	x8, [x0]
  427f24:	mov	x19, x0
  427f28:	mov	x29, sp
  427f2c:	cbz	x8, 427f68 <wcrtomb@plt+0x23168>
  427f30:	ldr	x9, [x19, #16]
  427f34:	mov	x20, xzr
  427f38:	ldr	x10, [x19, #8]
  427f3c:	add	x11, x9, x20
  427f40:	ldr	x0, [x10, x11, lsl #3]
  427f44:	cbz	x0, 427f5c <wcrtomb@plt+0x2315c>
  427f48:	bl	4049b0 <free@plt>
  427f4c:	ldp	x8, x9, [x19, #8]
  427f50:	add	x10, x20, x9
  427f54:	str	xzr, [x8, x10, lsl #3]
  427f58:	ldr	x8, [x19]
  427f5c:	add	x20, x20, #0x1
  427f60:	cmp	x20, x8
  427f64:	b.cc	427f38 <wcrtomb@plt+0x23138>  // b.lo, b.ul, b.last
  427f68:	str	xzr, [x19]
  427f6c:	ldp	x20, x19, [sp, #16]
  427f70:	ldp	x29, x30, [sp], #32
  427f74:	ret
  427f78:	stp	x29, x30, [sp, #-32]!
  427f7c:	stp	x20, x19, [sp, #16]
  427f80:	ldrb	w8, [x0, #32]
  427f84:	mov	x29, sp
  427f88:	tbnz	w8, #2, 427fc8 <wcrtomb@plt+0x231c8>
  427f8c:	mov	x19, x0
  427f90:	ldr	x0, [x19, #120]!
  427f94:	cbz	x0, 427fc8 <wcrtomb@plt+0x231c8>
  427f98:	ldr	x8, [x0]
  427f9c:	cbz	x8, 427fbc <wcrtomb@plt+0x231bc>
  427fa0:	mov	w20, #0x8                   	// #8
  427fa4:	mov	x0, x8
  427fa8:	bl	4049b0 <free@plt>
  427fac:	ldr	x0, [x19]
  427fb0:	ldr	x8, [x0, x20]
  427fb4:	add	x20, x20, #0x8
  427fb8:	cbnz	x8, 427fa4 <wcrtomb@plt+0x231a4>
  427fbc:	bl	4049b0 <free@plt>
  427fc0:	stp	xzr, xzr, [x19]
  427fc4:	str	xzr, [x19, #16]
  427fc8:	ldp	x20, x19, [sp, #16]
  427fcc:	ldp	x29, x30, [sp], #32
  427fd0:	ret
  427fd4:	stp	x29, x30, [sp, #-32]!
  427fd8:	ldr	w8, [x0, #192]
  427fdc:	str	x19, [sp, #16]
  427fe0:	mov	x19, x0
  427fe4:	mov	x29, sp
  427fe8:	cmp	w8, #0x9
  427fec:	b.ne	427ff8 <wcrtomb@plt+0x231f8>  // b.any
  427ff0:	ldr	x0, [x19, #200]
  427ff4:	bl	4049b0 <free@plt>
  427ff8:	str	xzr, [x19, #200]
  427ffc:	str	wzr, [x19, #192]
  428000:	ldr	x19, [sp, #16]
  428004:	ldp	x29, x30, [sp], #32
  428008:	ret
  42800c:	stp	x29, x30, [sp, #-48]!
  428010:	str	x21, [sp, #16]
  428014:	stp	x20, x19, [sp, #32]
  428018:	mov	x20, x0
  42801c:	mov	x19, x0
  428020:	ldr	x0, [x20, #208]!
  428024:	mov	x29, sp
  428028:	cbz	x0, 42803c <wcrtomb@plt+0x2323c>
  42802c:	ldr	x21, [x0, #8]
  428030:	bl	428b08 <wcrtomb@plt+0x23d08>
  428034:	mov	x0, x21
  428038:	cbnz	x21, 42802c <wcrtomb@plt+0x2322c>
  42803c:	mov	x0, x19
  428040:	stp	xzr, xzr, [x20]
  428044:	bl	427f18 <wcrtomb@plt+0x23118>
  428048:	ldr	x0, [x19, #8]
  42804c:	bl	4049b0 <free@plt>
  428050:	str	xzr, [x19, #8]
  428054:	mov	x0, x19
  428058:	ldp	x20, x19, [sp, #32]
  42805c:	ldr	x21, [sp, #16]
  428060:	ldp	x29, x30, [sp], #48
  428064:	b	427f78 <wcrtomb@plt+0x23178>
  428068:	stp	x29, x30, [sp, #-48]!
  42806c:	str	x21, [sp, #16]
  428070:	stp	x20, x19, [sp, #32]
  428074:	mov	x19, x0
  428078:	ldp	x8, x0, [x0]
  42807c:	mov	x20, x1
  428080:	mov	x29, sp
  428084:	mov	x21, x2
  428088:	lsl	x8, x8, #3
  42808c:	add	x1, x8, #0x8
  428090:	bl	404710 <realloc@plt>
  428094:	cbz	x0, 4280b8 <wcrtomb@plt+0x232b8>
  428098:	mov	x8, x0
  42809c:	str	x8, [x21]
  4280a0:	ldr	x8, [x19]
  4280a4:	mov	w0, wzr
  4280a8:	str	x8, [x20]
  4280ac:	str	xzr, [x19, #24]
  4280b0:	stp	xzr, xzr, [x19]
  4280b4:	b	4280bc <wcrtomb@plt+0x232bc>
  4280b8:	mov	w0, #0xffffffff            	// #-1
  4280bc:	ldp	x20, x19, [sp, #32]
  4280c0:	ldr	x21, [sp, #16]
  4280c4:	ldp	x29, x30, [sp], #48
  4280c8:	ret
  4280cc:	ldrsw	x8, [x0, #192]
  4280d0:	cmp	w8, #0x9
  4280d4:	b.ne	4280e0 <wcrtomb@plt+0x232e0>  // b.any
  4280d8:	add	x8, x0, #0xc8
  4280dc:	b	4280fc <wcrtomb@plt+0x232fc>
  4280e0:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4280e4:	ldr	w9, [x9, #440]
  4280e8:	cmp	w8, w9
  4280ec:	b.ge	428104 <wcrtomb@plt+0x23304>  // b.tcont
  4280f0:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4280f4:	add	x9, x9, #0x170
  4280f8:	add	x8, x9, x8, lsl #3
  4280fc:	ldr	x0, [x8]
  428100:	ret
  428104:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  428108:	add	x0, x0, #0xac3
  42810c:	ret
  428110:	stp	x29, x30, [sp, #-32]!
  428114:	ldr	w8, [x0, #192]
  428118:	ldr	x2, [x0, #96]
  42811c:	str	x19, [sp, #16]
  428120:	mov	x19, x0
  428124:	cmp	w8, #0x9
  428128:	mov	x29, sp
  42812c:	b.eq	42816c <wcrtomb@plt+0x2336c>  // b.none
  428130:	cmp	w8, #0x1
  428134:	b.ne	428174 <wcrtomb@plt+0x23374>  // b.any
  428138:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42813c:	add	x1, x1, #0xad1
  428140:	str	x2, [x29, #24]
  428144:	mov	w2, #0x5                   	// #5
  428148:	mov	x0, xzr
  42814c:	bl	404bd0 <dcgettext@plt>
  428150:	ldr	x8, [x19, #168]
  428154:	ldr	x2, [x19, #184]
  428158:	ldr	x3, [x29, #24]
  42815c:	ldr	x19, [sp, #16]
  428160:	ldrb	w1, [x8, x2]
  428164:	ldp	x29, x30, [sp], #32
  428168:	br	x3
  42816c:	add	x8, x19, #0xc8
  428170:	b	428194 <wcrtomb@plt+0x23394>
  428174:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  428178:	ldr	w9, [x9, #440]
  42817c:	sxtw	x8, w8
  428180:	cmp	w8, w9
  428184:	b.ge	42819c <wcrtomb@plt+0x2339c>  // b.tcont
  428188:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42818c:	add	x9, x9, #0x170
  428190:	add	x8, x9, x8, lsl #3
  428194:	ldr	x1, [x8]
  428198:	b	4281a4 <wcrtomb@plt+0x233a4>
  42819c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  4281a0:	add	x1, x1, #0xac3
  4281a4:	ldr	x19, [sp, #16]
  4281a8:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  4281ac:	add	x0, x0, #0xb24
  4281b0:	ldp	x29, x30, [sp], #32
  4281b4:	br	x2
  4281b8:	stp	x29, x30, [sp, #-64]!
  4281bc:	stp	x22, x21, [sp, #32]
  4281c0:	stp	x20, x19, [sp, #48]
  4281c4:	adrp	x20, 452000 <_obstack_memory_used@@Base+0x16808>
  4281c8:	adrp	x22, 452000 <_obstack_memory_used@@Base+0x16808>
  4281cc:	stp	x24, x23, [sp, #16]
  4281d0:	mov	x19, x0
  4281d4:	add	x23, x0, #0xd8
  4281d8:	mov	w21, #0xffffffff            	// #-1
  4281dc:	add	x20, x20, #0xaf6
  4281e0:	add	x22, x22, #0x3ee
  4281e4:	mov	x29, sp
  4281e8:	ldr	x8, [x19, #208]
  4281ec:	cbz	x8, 4282e0 <wcrtomb@plt+0x234e0>
  4281f0:	mov	x24, xzr
  4281f4:	mov	w9, wzr
  4281f8:	mov	x1, x8
  4281fc:	ldr	w10, [x8, #16]
  428200:	ldr	x8, [x8, #8]
  428204:	tbnz	w10, #6, 428234 <wcrtomb@plt+0x23434>
  428208:	ldrb	w11, [x19, #36]
  42820c:	cmp	w9, #0x0
  428210:	cinc	x24, x24, ne  // ne = any
  428214:	tbz	w11, #7, 42822c <wcrtomb@plt+0x2342c>
  428218:	ldp	x12, x11, [x19, #40]
  42821c:	add	x9, x24, #0x1
  428220:	add	x11, x9, x11
  428224:	cmp	x11, x12
  428228:	b.eq	428344 <wcrtomb@plt+0x23544>  // b.none
  42822c:	mov	w9, wzr
  428230:	b	4282cc <wcrtomb@plt+0x234cc>
  428234:	ldr	w11, [x19, #32]
  428238:	tbnz	w11, #12, 428248 <wcrtomb@plt+0x23448>
  42823c:	ldrb	w10, [x19, #36]
  428240:	tbnz	w10, #7, 42827c <wcrtomb@plt+0x2347c>
  428244:	b	4282cc <wcrtomb@plt+0x234cc>
  428248:	tbz	w11, #11, 4282cc <wcrtomb@plt+0x234cc>
  42824c:	mov	x11, x22
  428250:	tbnz	w10, #0, 42826c <wcrtomb@plt+0x2346c>
  428254:	tbnz	w10, #1, 428268 <wcrtomb@plt+0x23468>
  428258:	ldr	x10, [x19, #168]
  42825c:	ldr	x11, [x1, #24]
  428260:	add	x11, x10, x11
  428264:	b	42826c <wcrtomb@plt+0x2346c>
  428268:	ldr	x11, [x1, #24]
  42826c:	ldrb	w10, [x11]
  428270:	cbz	w9, 4282bc <wcrtomb@plt+0x234bc>
  428274:	cmp	w9, w10
  428278:	b.ne	4282c4 <wcrtomb@plt+0x234c4>  // b.any
  42827c:	ldr	x10, [x1]
  428280:	cbz	x10, 4282a0 <wcrtomb@plt+0x234a0>
  428284:	str	x8, [x10, #8]
  428288:	ldr	x11, [x1, #8]
  42828c:	cbnz	x11, 4282b0 <wcrtomb@plt+0x234b0>
  428290:	ldr	w11, [x10, #16]
  428294:	and	w11, w11, #0xffffffef
  428298:	str	w11, [x10, #16]
  42829c:	b	4282ac <wcrtomb@plt+0x234ac>
  4282a0:	mov	x11, x8
  4282a4:	str	x8, [x19, #208]
  4282a8:	cbnz	x8, 4282b0 <wcrtomb@plt+0x234b0>
  4282ac:	mov	x11, x23
  4282b0:	str	x10, [x11]
  4282b4:	stp	xzr, xzr, [x1]
  4282b8:	b	4282d8 <wcrtomb@plt+0x234d8>
  4282bc:	mov	w9, w10
  4282c0:	b	4282d8 <wcrtomb@plt+0x234d8>
  4282c4:	mov	w9, wzr
  4282c8:	add	x24, x24, #0x1
  4282cc:	ldrb	w10, [x19, #35]
  4282d0:	add	x24, x24, #0x1
  4282d4:	tbnz	w10, #5, 4282dc <wcrtomb@plt+0x234dc>
  4282d8:	cbnz	x8, 4281f8 <wcrtomb@plt+0x233f8>
  4282dc:	cbnz	x24, 42838c <wcrtomb@plt+0x2358c>
  4282e0:	ldr	w8, [x19, #32]
  4282e4:	tbz	w8, #29, 428388 <wcrtomb@plt+0x23588>
  4282e8:	ldp	x10, x9, [x19, #176]
  4282ec:	cmp	x9, x10
  4282f0:	b.cs	4283a4 <wcrtomb@plt+0x235a4>  // b.hs, b.nlast
  4282f4:	tbz	w8, #21, 428314 <wcrtomb@plt+0x23514>
  4282f8:	ldr	x24, [x19, #104]
  4282fc:	mov	w2, #0x5                   	// #5
  428300:	mov	x0, xzr
  428304:	mov	x1, x20
  428308:	bl	404bd0 <dcgettext@plt>
  42830c:	blr	x24
  428310:	ldr	w8, [x19, #32]
  428314:	tbnz	w8, #12, 428328 <wcrtomb@plt+0x23528>
  428318:	ldr	w8, [x19, #36]
  42831c:	eor	w8, w21, w8, lsr #7
  428320:	and	x8, x8, #0x1
  428324:	b	42832c <wcrtomb@plt+0x2352c>
  428328:	mov	x8, xzr
  42832c:	ldr	x9, [x19, #184]
  428330:	mov	x0, x19
  428334:	add	x1, x9, x8
  428338:	bl	4286dc <wcrtomb@plt+0x238dc>
  42833c:	cbz	w0, 4281e8 <wcrtomb@plt+0x233e8>
  428340:	b	428490 <wcrtomb@plt+0x23690>
  428344:	mov	x24, x9
  428348:	cbz	x8, 4282dc <wcrtomb@plt+0x234dc>
  42834c:	orr	w9, w10, #0x10
  428350:	str	w9, [x1, #16]
  428354:	ldr	x9, [x8, #8]
  428358:	cbz	x9, 428378 <wcrtomb@plt+0x23578>
  42835c:	ldr	w10, [x8, #16]
  428360:	mov	x11, x9
  428364:	orr	w9, w10, #0x10
  428368:	str	w9, [x8, #16]
  42836c:	ldr	x9, [x11, #8]
  428370:	mov	x8, x11
  428374:	cbnz	x9, 42835c <wcrtomb@plt+0x2355c>
  428378:	mov	x0, x19
  42837c:	bl	428958 <wcrtomb@plt+0x23b58>
  428380:	cbz	w0, 4282dc <wcrtomb@plt+0x234dc>
  428384:	b	42839c <wcrtomb@plt+0x2359c>
  428388:	mov	x24, xzr
  42838c:	add	x1, x24, #0x1
  428390:	mov	x0, x19
  428394:	bl	4279d4 <wcrtomb@plt+0x22bd4>
  428398:	cbz	w0, 4283b0 <wcrtomb@plt+0x235b0>
  42839c:	ldr	w0, [x19, #192]
  4283a0:	b	428490 <wcrtomb@plt+0x23690>
  4283a4:	mov	w0, wzr
  4283a8:	str	xzr, [x19, #96]
  4283ac:	b	428490 <wcrtomb@plt+0x23690>
  4283b0:	adrp	x24, 452000 <_obstack_memory_used@@Base+0x16808>
  4283b4:	add	x24, x24, #0x3ee
  4283b8:	ldr	x0, [x19, #208]
  4283bc:	cbz	x0, 42847c <wcrtomb@plt+0x2367c>
  4283c0:	ldr	w8, [x0, #16]
  4283c4:	mov	x20, x24
  4283c8:	tbnz	w8, #0, 4283e4 <wcrtomb@plt+0x235e4>
  4283cc:	tbnz	w8, #1, 4283e0 <wcrtomb@plt+0x235e0>
  4283d0:	ldr	x8, [x19, #168]
  4283d4:	ldr	x9, [x0, #24]
  4283d8:	add	x20, x8, x9
  4283dc:	b	4283e4 <wcrtomb@plt+0x235e4>
  4283e0:	ldr	x20, [x0, #24]
  4283e4:	bl	428930 <wcrtomb@plt+0x23b30>
  4283e8:	mov	x21, x0
  4283ec:	add	x0, x0, #0x1
  4283f0:	bl	4044d0 <malloc@plt>
  4283f4:	ldp	x10, x8, [x19, #8]
  4283f8:	ldr	x9, [x19]
  4283fc:	add	x8, x9, x8
  428400:	str	x0, [x10, x8, lsl #3]
  428404:	cbz	x0, 4284a4 <wcrtomb@plt+0x236a4>
  428408:	mov	x1, x20
  42840c:	mov	x2, x21
  428410:	mov	x22, x0
  428414:	bl	4040f0 <memcpy@plt>
  428418:	strb	wzr, [x22, x21]
  42841c:	ldr	x8, [x19, #208]
  428420:	ldp	x9, x10, [x8]
  428424:	cbz	x9, 428444 <wcrtomb@plt+0x23644>
  428428:	str	x10, [x9, #8]
  42842c:	ldr	x10, [x8, #8]
  428430:	cbnz	x10, 428450 <wcrtomb@plt+0x23650>
  428434:	ldr	w10, [x9, #16]
  428438:	and	w10, w10, #0xffffffef
  42843c:	str	w10, [x9, #16]
  428440:	b	42844c <wcrtomb@plt+0x2364c>
  428444:	str	x10, [x19, #208]
  428448:	cbnz	x10, 428450 <wcrtomb@plt+0x23650>
  42844c:	mov	x10, x23
  428450:	str	x9, [x10]
  428454:	stp	xzr, xzr, [x8]
  428458:	ldr	x8, [x19]
  42845c:	ldr	x9, [x19, #48]
  428460:	ldrb	w10, [x19, #35]
  428464:	add	x8, x8, #0x1
  428468:	add	x9, x9, #0x1
  42846c:	str	x8, [x19]
  428470:	str	x9, [x19, #48]
  428474:	tbz	w10, #5, 4283b8 <wcrtomb@plt+0x235b8>
  428478:	b	428480 <wcrtomb@plt+0x23680>
  42847c:	ldr	x8, [x19]
  428480:	ldp	x10, x9, [x19, #8]
  428484:	mov	w0, wzr
  428488:	add	x8, x8, x9
  42848c:	str	xzr, [x10, x8, lsl #3]
  428490:	ldp	x20, x19, [sp, #48]
  428494:	ldp	x22, x21, [sp, #32]
  428498:	ldp	x24, x23, [sp, #16]
  42849c:	ldp	x29, x30, [sp], #64
  4284a0:	ret
  4284a4:	mov	x0, x19
  4284a8:	ldp	x20, x19, [sp, #48]
  4284ac:	ldp	x22, x21, [sp, #32]
  4284b0:	ldp	x24, x23, [sp, #16]
  4284b4:	ldp	x29, x30, [sp], #64
  4284b8:	b	427a7c <wcrtomb@plt+0x22c7c>
  4284bc:	stp	x29, x30, [sp, #-32]!
  4284c0:	ldr	w8, [x0, #32]
  4284c4:	str	x19, [sp, #16]
  4284c8:	mov	x19, x0
  4284cc:	mov	x29, sp
  4284d0:	tbnz	w8, #3, 4284e0 <wcrtomb@plt+0x236e0>
  4284d4:	str	xzr, [x19, #24]
  4284d8:	stp	xzr, xzr, [x19]
  4284dc:	b	428508 <wcrtomb@plt+0x23708>
  4284e0:	tbnz	w8, #0, 4284ec <wcrtomb@plt+0x236ec>
  4284e4:	mov	x0, x19
  4284e8:	bl	427f18 <wcrtomb@plt+0x23118>
  4284ec:	ldr	w8, [x19, #192]
  4284f0:	cmp	w8, #0x9
  4284f4:	b.ne	428500 <wcrtomb@plt+0x23700>  // b.any
  4284f8:	ldr	x0, [x19, #200]
  4284fc:	bl	4049b0 <free@plt>
  428500:	str	xzr, [x19, #200]
  428504:	str	wzr, [x19, #192]
  428508:	str	wzr, [x19, #192]
  42850c:	ldr	x19, [sp, #16]
  428510:	ldp	x29, x30, [sp], #32
  428514:	ret
  428518:	stp	x29, x30, [sp, #-48]!
  42851c:	stp	x20, x19, [sp, #32]
  428520:	mov	x19, x0
  428524:	str	x21, [sp, #16]
  428528:	mov	x29, sp
  42852c:	str	w3, [x0, #32]
  428530:	tbnz	w3, #16, 428558 <wcrtomb@plt+0x23758>
  428534:	adrp	x8, 428000 <wcrtomb@plt+0x23200>
  428538:	add	x8, x8, #0xb38
  42853c:	str	x8, [x19, #88]
  428540:	tbz	w3, #17, 42855c <wcrtomb@plt+0x2375c>
  428544:	tbnz	w3, #6, 42856c <wcrtomb@plt+0x2376c>
  428548:	stp	xzr, xzr, [x19, #120]
  42854c:	str	xzr, [x19, #136]
  428550:	tbnz	w3, #2, 428578 <wcrtomb@plt+0x23778>
  428554:	b	428570 <wcrtomb@plt+0x23770>
  428558:	tbnz	w3, #17, 428544 <wcrtomb@plt+0x23744>
  42855c:	adrp	x8, 428000 <wcrtomb@plt+0x23200>
  428560:	add	x8, x8, #0xb70
  428564:	str	x8, [x19, #96]
  428568:	tbz	w3, #6, 428548 <wcrtomb@plt+0x23748>
  42856c:	tbnz	w3, #2, 428578 <wcrtomb@plt+0x23778>
  428570:	ldr	x8, [x19, #160]
  428574:	cbz	x8, 4285a4 <wcrtomb@plt+0x237a4>
  428578:	mov	w8, #0x240000              	// #2359296
  42857c:	and	w8, w3, w8
  428580:	cmp	w8, #0x200, lsl #12
  428584:	b.ne	4285d8 <wcrtomb@plt+0x237d8>  // b.any
  428588:	tbnz	w3, #17, 42859c <wcrtomb@plt+0x2379c>
  42858c:	tbnz	w3, #4, 4285cc <wcrtomb@plt+0x237cc>
  428590:	and	w3, w3, #0xffdfffff
  428594:	str	w3, [x19, #32]
  428598:	b	4285d8 <wcrtomb@plt+0x237d8>
  42859c:	ldr	x8, [x19, #96]
  4285a0:	b	4285d4 <wcrtomb@plt+0x237d4>
  4285a4:	mov	w8, #0x3                   	// #3
  4285a8:	str	w8, [x19, #192]
  4285ac:	tbz	w3, #4, 4285b8 <wcrtomb@plt+0x237b8>
  4285b0:	mov	x0, x19
  4285b4:	bl	428110 <wcrtomb@plt+0x23310>
  4285b8:	bl	404ce0 <__errno_location@plt>
  4285bc:	mov	w8, #0x16                  	// #22
  4285c0:	str	w8, [x0]
  4285c4:	ldr	w0, [x19, #192]
  4285c8:	b	4286cc <wcrtomb@plt+0x238cc>
  4285cc:	adrp	x8, 428000 <wcrtomb@plt+0x23200>
  4285d0:	add	x8, x8, #0xb70
  4285d4:	str	x8, [x19, #104]
  4285d8:	stp	x1, x2, [x19, #168]
  4285dc:	tbnz	w3, #1, 428624 <wcrtomb@plt+0x23824>
  4285e0:	str	xzr, [x19, #16]
  4285e4:	tbz	w3, #14, 428628 <wcrtomb@plt+0x23828>
  4285e8:	tbnz	w3, #15, 428638 <wcrtomb@plt+0x23838>
  4285ec:	str	xzr, [x19, #64]
  4285f0:	tbz	w3, #26, 42863c <wcrtomb@plt+0x2383c>
  4285f4:	tbnz	w3, #31, 4285fc <wcrtomb@plt+0x237fc>
  4285f8:	str	wzr, [x19, #36]
  4285fc:	tbnz	w3, #28, 428648 <wcrtomb@plt+0x23848>
  428600:	tbnz	w3, #25, 428674 <wcrtomb@plt+0x23874>
  428604:	ldr	w9, [x19, #36]
  428608:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  42860c:	adrp	x10, 452000 <_obstack_memory_used@@Base+0x16808>
  428610:	add	x8, x8, #0x3ee
  428614:	add	x10, x10, #0xb05
  428618:	stp	x8, x10, [x19, #72]
  42861c:	orr	w8, w9, #0x100
  428620:	b	42868c <wcrtomb@plt+0x2388c>
  428624:	tbnz	w3, #14, 4285e8 <wcrtomb@plt+0x237e8>
  428628:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  42862c:	add	x8, x8, #0xb01
  428630:	str	x8, [x19, #56]
  428634:	tbz	w3, #15, 4285ec <wcrtomb@plt+0x237ec>
  428638:	tbnz	w3, #26, 4285f4 <wcrtomb@plt+0x237f4>
  42863c:	str	xzr, [x19, #152]
  428640:	tbz	w3, #31, 4285f8 <wcrtomb@plt+0x237f8>
  428644:	b	4285fc <wcrtomb@plt+0x237fc>
  428648:	ldr	x8, [x19, #72]
  42864c:	cbnz	x8, 42865c <wcrtomb@plt+0x2385c>
  428650:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  428654:	add	x8, x8, #0x3ee
  428658:	str	x8, [x19, #72]
  42865c:	ldr	x8, [x19, #80]
  428660:	cbnz	x8, 428690 <wcrtomb@plt+0x23890>
  428664:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  428668:	add	x8, x8, #0x3ee
  42866c:	str	x8, [x19, #80]
  428670:	b	428690 <wcrtomb@plt+0x23890>
  428674:	ldr	w9, [x19, #36]
  428678:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42867c:	add	x8, x8, #0x158
  428680:	stp	x8, x8, [x19, #72]
  428684:	mov	w8, #0x660                 	// #1632
  428688:	orr	w8, w9, w8
  42868c:	str	w8, [x19, #36]
  428690:	str	xzr, [x19, #184]
  428694:	str	xzr, [x19, #48]
  428698:	tbz	w3, #3, 4286bc <wcrtomb@plt+0x238bc>
  42869c:	mov	x20, x19
  4286a0:	ldr	x0, [x20, #208]!
  4286a4:	cbz	x0, 4286b8 <wcrtomb@plt+0x238b8>
  4286a8:	ldr	x21, [x0, #8]
  4286ac:	bl	428b08 <wcrtomb@plt+0x23d08>
  4286b0:	mov	x0, x21
  4286b4:	cbnz	x21, 4286a8 <wcrtomb@plt+0x238a8>
  4286b8:	stp	xzr, xzr, [x20]
  4286bc:	mov	x0, x19
  4286c0:	stp	xzr, xzr, [x19, #208]
  4286c4:	bl	4284bc <wcrtomb@plt+0x236bc>
  4286c8:	mov	w0, wzr
  4286cc:	ldp	x20, x19, [sp, #32]
  4286d0:	ldr	x21, [sp, #16]
  4286d4:	ldp	x29, x30, [sp], #48
  4286d8:	ret
  4286dc:	stp	x29, x30, [sp, #-64]!
  4286e0:	stp	x24, x23, [sp, #16]
  4286e4:	stp	x22, x21, [sp, #32]
  4286e8:	stp	x20, x19, [sp, #48]
  4286ec:	ldr	w8, [x0, #32]
  4286f0:	mov	x19, x0
  4286f4:	mov	x20, x1
  4286f8:	mov	x29, sp
  4286fc:	tbnz	w8, #21, 428708 <wcrtomb@plt+0x23908>
  428700:	tbz	w8, #22, 428738 <wcrtomb@plt+0x23938>
  428704:	b	428750 <wcrtomb@plt+0x23950>
  428708:	ldr	x21, [x19, #104]
  42870c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  428710:	add	x1, x1, #0xb0a
  428714:	mov	w2, #0x5                   	// #5
  428718:	mov	x0, xzr
  42871c:	bl	404bd0 <dcgettext@plt>
  428720:	ldr	w1, [x19, #224]
  428724:	ldr	w2, [x19, #176]
  428728:	ldr	x3, [x19, #168]
  42872c:	blr	x21
  428730:	ldr	w8, [x19, #32]
  428734:	tbnz	w8, #22, 428750 <wcrtomb@plt+0x23950>
  428738:	ldrb	w8, [x19, #36]
  42873c:	tbz	w8, #7, 428764 <wcrtomb@plt+0x23964>
  428740:	ldp	x9, x8, [x19, #40]
  428744:	add	x8, x8, #0x1
  428748:	cmp	x8, x9
  42874c:	b.ne	428764 <wcrtomb@plt+0x23964>  // b.any
  428750:	mov	w2, #0x1                   	// #1
  428754:	mov	x0, x19
  428758:	mov	x1, x20
  42875c:	bl	428c04 <wcrtomb@plt+0x23e04>
  428760:	b	4287cc <wcrtomb@plt+0x239cc>
  428764:	mov	x0, x19
  428768:	mov	x1, x20
  42876c:	mov	w2, wzr
  428770:	bl	428c04 <wcrtomb@plt+0x23e04>
  428774:	cmp	w0, #0x1
  428778:	b.ne	4287b8 <wcrtomb@plt+0x239b8>  // b.any
  42877c:	mov	w20, #0xffffffff            	// #-1
  428780:	ldrb	w8, [x19, #33]
  428784:	tbnz	w8, #4, 428798 <wcrtomb@plt+0x23998>
  428788:	ldr	w8, [x19, #36]
  42878c:	eor	w8, w20, w8, lsr #7
  428790:	and	x8, x8, #0x1
  428794:	b	42879c <wcrtomb@plt+0x2399c>
  428798:	mov	x8, xzr
  42879c:	ldr	x9, [x19, #184]
  4287a0:	mov	x0, x19
  4287a4:	mov	w2, wzr
  4287a8:	add	x1, x9, x8
  4287ac:	bl	428c04 <wcrtomb@plt+0x23e04>
  4287b0:	cmp	w0, #0x1
  4287b4:	b.eq	428780 <wcrtomb@plt+0x23980>  // b.none
  4287b8:	ldr	x8, [x19, #216]
  4287bc:	cbz	x8, 4287cc <wcrtomb@plt+0x239cc>
  4287c0:	ldr	w9, [x8, #16]
  4287c4:	and	w9, w9, #0xffffffef
  4287c8:	str	w9, [x8, #16]
  4287cc:	cmp	w0, #0x2
  4287d0:	b.ne	4287ec <wcrtomb@plt+0x239ec>  // b.any
  4287d4:	ldr	w0, [x19, #192]
  4287d8:	ldp	x20, x19, [sp, #48]
  4287dc:	ldp	x22, x21, [sp, #32]
  4287e0:	ldp	x24, x23, [sp, #16]
  4287e4:	ldp	x29, x30, [sp], #64
  4287e8:	ret
  4287ec:	ldrb	w8, [x19, #34]
  4287f0:	tbz	w8, #5, 42882c <wcrtomb@plt+0x23a2c>
  4287f4:	ldr	x21, [x19, #104]
  4287f8:	ldr	w20, [x19, #224]
  4287fc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  428800:	add	x1, x1, #0xb27
  428804:	mov	w2, #0x5                   	// #5
  428808:	mov	x0, xzr
  42880c:	bl	404bd0 <dcgettext@plt>
  428810:	mov	x2, x0
  428814:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  428818:	add	x0, x0, #0xb1d
  42881c:	mov	w1, w20
  428820:	blr	x21
  428824:	mov	x0, x19
  428828:	bl	4290d0 <wcrtomb@plt+0x242d0>
  42882c:	adrp	x23, 452000 <_obstack_memory_used@@Base+0x16808>
  428830:	adrp	x20, 452000 <_obstack_memory_used@@Base+0x16808>
  428834:	adrp	x21, 452000 <_obstack_memory_used@@Base+0x16808>
  428838:	add	x23, x23, #0x948
  42883c:	add	x20, x20, #0xb1d
  428840:	add	x21, x21, #0xb35
  428844:	ldr	w8, [x19, #32]
  428848:	ldp	w10, w9, [x23, #8]
  42884c:	and	w11, w10, w8
  428850:	cmp	w11, w10
  428854:	cset	w10, eq  // eq = none
  428858:	tst	w9, #0x2
  42885c:	csel	w10, w11, w10, eq  // eq = none
  428860:	cmp	w10, #0x0
  428864:	cset	w11, eq  // eq = none
  428868:	tst	w9, #0x1
  42886c:	csel	w10, w10, w11, eq  // eq = none
  428870:	cbz	w10, 428924 <wcrtomb@plt+0x23b24>
  428874:	tbz	w9, #2, 4288d8 <wcrtomb@plt+0x23ad8>
  428878:	ldr	x22, [x19, #208]
  42887c:	cbz	x22, 4288a4 <wcrtomb@plt+0x23aa4>
  428880:	ldrb	w8, [x22, #16]
  428884:	tbz	w8, #4, 428898 <wcrtomb@plt+0x23a98>
  428888:	mov	x0, x19
  42888c:	mov	x1, x22
  428890:	bl	428958 <wcrtomb@plt+0x23b58>
  428894:	cbnz	w0, 4287d4 <wcrtomb@plt+0x239d4>
  428898:	ldr	x22, [x22, #8]
  42889c:	cbnz	x22, 428880 <wcrtomb@plt+0x23a80>
  4288a0:	ldr	w8, [x19, #32]
  4288a4:	tbz	w8, #21, 4288d8 <wcrtomb@plt+0x23ad8>
  4288a8:	ldr	x24, [x19, #104]
  4288ac:	ldr	w22, [x19, #224]
  4288b0:	mov	w2, #0x5                   	// #5
  4288b4:	mov	x0, xzr
  4288b8:	mov	x1, x21
  4288bc:	bl	404bd0 <dcgettext@plt>
  4288c0:	mov	x2, x0
  4288c4:	mov	x0, x20
  4288c8:	mov	w1, w22
  4288cc:	blr	x24
  4288d0:	mov	x0, x19
  4288d4:	bl	4290d0 <wcrtomb@plt+0x242d0>
  4288d8:	ldr	x8, [x23, #16]
  4288dc:	cbz	x8, 428924 <wcrtomb@plt+0x23b24>
  4288e0:	mov	x0, x19
  4288e4:	blr	x8
  4288e8:	cbnz	w0, 4287d4 <wcrtomb@plt+0x239d4>
  4288ec:	ldrb	w8, [x19, #34]
  4288f0:	tbz	w8, #5, 428924 <wcrtomb@plt+0x23b24>
  4288f4:	ldr	x1, [x23]
  4288f8:	ldr	x24, [x19, #104]
  4288fc:	ldr	w22, [x19, #224]
  428900:	mov	w2, #0x5                   	// #5
  428904:	mov	x0, xzr
  428908:	bl	404bd0 <dcgettext@plt>
  42890c:	mov	x2, x0
  428910:	mov	x0, x20
  428914:	mov	w1, w22
  428918:	blr	x24
  42891c:	mov	x0, x19
  428920:	bl	4290d0 <wcrtomb@plt+0x242d0>
  428924:	ldr	x8, [x23, #24]!
  428928:	cbnz	x8, 428844 <wcrtomb@plt+0x23a44>
  42892c:	b	4287d4 <wcrtomb@plt+0x239d4>
  428930:	ldr	w8, [x0, #16]
  428934:	tbnz	w8, #0, 428948 <wcrtomb@plt+0x23b48>
  428938:	tbnz	w8, #1, 428950 <wcrtomb@plt+0x23b50>
  42893c:	ldp	x9, x8, [x0, #24]
  428940:	sub	x0, x8, x9
  428944:	ret
  428948:	mov	x0, xzr
  42894c:	ret
  428950:	ldr	x0, [x0, #24]
  428954:	b	404170 <strlen@plt>
  428958:	sub	sp, sp, #0x70
  42895c:	stp	x29, x30, [sp, #16]
  428960:	stp	x28, x27, [sp, #32]
  428964:	stp	x26, x25, [sp, #48]
  428968:	stp	x24, x23, [sp, #64]
  42896c:	stp	x22, x21, [sp, #80]
  428970:	stp	x20, x19, [sp, #96]
  428974:	ldr	w26, [x1, #16]
  428978:	add	x29, sp, #0x10
  42897c:	tbz	w26, #4, 428ae4 <wcrtomb@plt+0x23ce4>
  428980:	mov	x20, x0
  428984:	mov	x0, x1
  428988:	mov	x19, x1
  42898c:	bl	428930 <wcrtomb@plt+0x23b30>
  428990:	mov	x22, x0
  428994:	mov	x21, x19
  428998:	tbz	w26, #4, 4289b8 <wcrtomb@plt+0x23bb8>
  42899c:	ldr	x21, [x21, #8]
  4289a0:	cbz	x21, 4289b8 <wcrtomb@plt+0x23bb8>
  4289a4:	ldr	w23, [x21, #16]
  4289a8:	mov	x0, x21
  4289ac:	bl	428930 <wcrtomb@plt+0x23b30>
  4289b0:	add	x22, x0, x22
  4289b4:	tbnz	w23, #4, 42899c <wcrtomb@plt+0x23b9c>
  4289b8:	add	x0, x22, #0x1
  4289bc:	bl	4044d0 <malloc@plt>
  4289c0:	cbz	x0, 428ab0 <wcrtomb@plt+0x23cb0>
  4289c4:	adrp	x28, 452000 <_obstack_memory_used@@Base+0x16808>
  4289c8:	add	x27, x20, #0xd8
  4289cc:	add	x28, x28, #0x3ee
  4289d0:	mov	x24, x19
  4289d4:	mov	x23, x0
  4289d8:	str	x0, [sp, #8]
  4289dc:	ldr	x22, [x24, #8]
  4289e0:	mov	x25, x28
  4289e4:	tbnz	w26, #0, 428a00 <wcrtomb@plt+0x23c00>
  4289e8:	tbnz	w26, #1, 4289fc <wcrtomb@plt+0x23bfc>
  4289ec:	ldr	x8, [x20, #168]
  4289f0:	ldr	x9, [x24, #24]
  4289f4:	add	x25, x8, x9
  4289f8:	b	428a00 <wcrtomb@plt+0x23c00>
  4289fc:	ldr	x25, [x24, #24]
  428a00:	mov	x0, x24
  428a04:	bl	428930 <wcrtomb@plt+0x23b30>
  428a08:	mov	x26, x0
  428a0c:	mov	x0, x23
  428a10:	mov	x1, x25
  428a14:	mov	x2, x26
  428a18:	bl	4040f0 <memcpy@plt>
  428a1c:	cmp	x24, x19
  428a20:	add	x23, x23, x26
  428a24:	b.eq	428a84 <wcrtomb@plt+0x23c84>  // b.none
  428a28:	ldr	w8, [x24, #16]
  428a2c:	ldr	w9, [x19, #16]
  428a30:	and	w8, w8, #0x4
  428a34:	orr	w8, w9, w8
  428a38:	str	w8, [x19, #16]
  428a3c:	ldp	x8, x9, [x24]
  428a40:	cbz	x8, 428a60 <wcrtomb@plt+0x23c60>
  428a44:	str	x9, [x8, #8]
  428a48:	ldr	x9, [x24, #8]
  428a4c:	cbnz	x9, 428a6c <wcrtomb@plt+0x23c6c>
  428a50:	ldr	w9, [x8, #16]
  428a54:	and	w9, w9, #0xffffffef
  428a58:	str	w9, [x8, #16]
  428a5c:	b	428a68 <wcrtomb@plt+0x23c68>
  428a60:	str	x9, [x20, #208]
  428a64:	cbnz	x9, 428a6c <wcrtomb@plt+0x23c6c>
  428a68:	mov	x9, x27
  428a6c:	mov	x0, x24
  428a70:	str	x8, [x9]
  428a74:	stp	xzr, xzr, [x24]
  428a78:	bl	428b08 <wcrtomb@plt+0x23d08>
  428a7c:	cmp	x24, x21
  428a80:	b.eq	428a90 <wcrtomb@plt+0x23c90>  // b.none
  428a84:	ldr	w26, [x22, #16]
  428a88:	mov	x24, x22
  428a8c:	b	4289dc <wcrtomb@plt+0x23bdc>
  428a90:	strb	wzr, [x23]
  428a94:	ldr	w9, [x19, #16]
  428a98:	and	w8, w9, #0xffffffef
  428a9c:	str	w8, [x19, #16]
  428aa0:	tbnz	w9, #1, 428ad4 <wcrtomb@plt+0x23cd4>
  428aa4:	orr	w8, w8, #0x2
  428aa8:	str	w8, [x19, #16]
  428aac:	b	428adc <wcrtomb@plt+0x23cdc>
  428ab0:	mov	x0, x20
  428ab4:	ldp	x20, x19, [sp, #96]
  428ab8:	ldp	x22, x21, [sp, #80]
  428abc:	ldp	x24, x23, [sp, #64]
  428ac0:	ldp	x26, x25, [sp, #48]
  428ac4:	ldp	x28, x27, [sp, #32]
  428ac8:	ldp	x29, x30, [sp, #16]
  428acc:	add	sp, sp, #0x70
  428ad0:	b	427a7c <wcrtomb@plt+0x22c7c>
  428ad4:	ldr	x0, [x19, #24]
  428ad8:	bl	4049b0 <free@plt>
  428adc:	ldr	x8, [sp, #8]
  428ae0:	str	x8, [x19, #24]
  428ae4:	ldp	x20, x19, [sp, #96]
  428ae8:	ldp	x22, x21, [sp, #80]
  428aec:	ldp	x24, x23, [sp, #64]
  428af0:	ldp	x26, x25, [sp, #48]
  428af4:	ldp	x28, x27, [sp, #32]
  428af8:	ldp	x29, x30, [sp, #16]
  428afc:	mov	w0, wzr
  428b00:	add	sp, sp, #0x70
  428b04:	ret
  428b08:	stp	x29, x30, [sp, #-32]!
  428b0c:	ldrb	w8, [x0, #16]
  428b10:	str	x19, [sp, #16]
  428b14:	mov	x19, x0
  428b18:	mov	x29, sp
  428b1c:	tbz	w8, #1, 428b28 <wcrtomb@plt+0x23d28>
  428b20:	ldr	x0, [x19, #24]
  428b24:	bl	4049b0 <free@plt>
  428b28:	mov	x0, x19
  428b2c:	ldr	x19, [sp, #16]
  428b30:	ldp	x29, x30, [sp], #32
  428b34:	b	4049b0 <free@plt>
  428b38:	stp	x29, x30, [sp, #-32]!
  428b3c:	str	x19, [sp, #16]
  428b40:	ldr	x19, [x0, #96]
  428b44:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  428b48:	add	x1, x1, #0xa73
  428b4c:	mov	w2, #0x5                   	// #5
  428b50:	mov	x0, xzr
  428b54:	mov	x29, sp
  428b58:	bl	404bd0 <dcgettext@plt>
  428b5c:	mov	x1, x0
  428b60:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  428b64:	add	x0, x0, #0xb24
  428b68:	blr	x19
  428b6c:	bl	404850 <abort@plt>
  428b70:	sub	sp, sp, #0x120
  428b74:	stp	x29, x30, [sp, #256]
  428b78:	add	x29, sp, #0x100
  428b7c:	mov	x9, #0xffffffffffffffc8    	// #-56
  428b80:	mov	x10, sp
  428b84:	sub	x11, x29, #0x78
  428b88:	movk	x9, #0xff80, lsl #32
  428b8c:	add	x12, x29, #0x20
  428b90:	add	x10, x10, #0x80
  428b94:	add	x11, x11, #0x38
  428b98:	stp	x28, x19, [sp, #272]
  428b9c:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  428ba0:	stp	x10, x9, [x29, #-48]
  428ba4:	stp	x12, x11, [x29, #-64]
  428ba8:	mov	x8, x0
  428bac:	stp	x1, x2, [x29, #-120]
  428bb0:	stp	x3, x4, [x29, #-104]
  428bb4:	stp	x5, x6, [x29, #-88]
  428bb8:	stur	x7, [x29, #-72]
  428bbc:	stp	q0, q1, [sp]
  428bc0:	ldr	x0, [x19, #624]
  428bc4:	ldp	q0, q1, [x29, #-64]
  428bc8:	sub	x3, x29, #0x20
  428bcc:	mov	w1, #0x1                   	// #1
  428bd0:	mov	x2, x8
  428bd4:	stp	q2, q3, [sp, #32]
  428bd8:	stp	q4, q5, [sp, #64]
  428bdc:	stp	q6, q7, [sp, #96]
  428be0:	stp	q0, q1, [x29, #-32]
  428be4:	bl	404670 <__vfprintf_chk@plt>
  428be8:	ldr	x1, [x19, #624]
  428bec:	mov	w0, #0xa                   	// #10
  428bf0:	bl	404310 <fputc@plt>
  428bf4:	ldp	x28, x19, [sp, #272]
  428bf8:	ldp	x29, x30, [sp, #256]
  428bfc:	add	sp, sp, #0x120
  428c00:	ret
  428c04:	sub	sp, sp, #0x70
  428c08:	stp	x29, x30, [sp, #16]
  428c0c:	stp	x28, x27, [sp, #32]
  428c10:	stp	x26, x25, [sp, #48]
  428c14:	stp	x24, x23, [sp, #64]
  428c18:	stp	x22, x21, [sp, #80]
  428c1c:	stp	x20, x19, [sp, #96]
  428c20:	ldp	x23, x21, [x0, #168]
  428c24:	ldr	x24, [x0, #64]
  428c28:	ldr	x26, [x0, #216]
  428c2c:	mov	x19, x0
  428c30:	cmp	x21, x1
  428c34:	add	x29, sp, #0x10
  428c38:	str	x1, [sp, #8]
  428c3c:	b.ls	428e40 <wcrtomb@plt+0x24040>  // b.plast
  428c40:	ldr	w25, [x19, #32]
  428c44:	mov	w20, w2
  428c48:	mov	x22, x1
  428c4c:	tbnz	w25, #13, 428e4c <wcrtomb@plt+0x2404c>
  428c50:	cbz	w20, 428f70 <wcrtomb@plt+0x24170>
  428c54:	sub	x27, x21, #0x1
  428c58:	mov	x25, x22
  428c5c:	str	wzr, [sp, #4]
  428c60:	ldr	x28, [sp, #8]
  428c64:	cbz	x24, 428c78 <wcrtomb@plt+0x23e78>
  428c68:	ldrb	w1, [x23, x22]
  428c6c:	mov	x0, x24
  428c70:	bl	404a50 <strchr@plt>
  428c74:	cbnz	x0, 428fe8 <wcrtomb@plt+0x241e8>
  428c78:	ldr	w8, [x19, #32]
  428c7c:	tst	w8, #0x600
  428c80:	b.eq	428cac <wcrtomb@plt+0x23eac>  // b.none
  428c84:	ldrb	w9, [x23, x22]
  428c88:	cmp	w9, #0x5c
  428c8c:	b.ne	428cb8 <wcrtomb@plt+0x23eb8>  // b.any
  428c90:	cmp	x27, x22
  428c94:	b.eq	428f9c <wcrtomb@plt+0x2419c>  // b.none
  428c98:	add	x28, x22, #0x2
  428c9c:	cmp	x28, x21
  428ca0:	mov	x22, x28
  428ca4:	b.cc	428c64 <wcrtomb@plt+0x23e64>  // b.lo, b.ul, b.last
  428ca8:	b	428fa4 <wcrtomb@plt+0x241a4>
  428cac:	str	x28, [sp, #8]
  428cb0:	mov	x28, x22
  428cb4:	b	428d88 <wcrtomb@plt+0x23f88>
  428cb8:	str	x28, [sp, #8]
  428cbc:	tbz	w8, #9, 428cc8 <wcrtomb@plt+0x23ec8>
  428cc0:	cmp	w9, #0x27
  428cc4:	b.eq	428cd4 <wcrtomb@plt+0x23ed4>  // b.none
  428cc8:	tbz	w8, #10, 428cb0 <wcrtomb@plt+0x23eb0>
  428ccc:	cmp	w9, #0x22
  428cd0:	b.ne	428cb0 <wcrtomb@plt+0x23eb0>  // b.any
  428cd4:	ldr	w8, [sp, #4]
  428cd8:	cbz	w8, 428cf0 <wcrtomb@plt+0x23ef0>
  428cdc:	ldr	x8, [x19, #216]
  428ce0:	cbz	x8, 428cf0 <wcrtomb@plt+0x23ef0>
  428ce4:	ldr	w9, [x8, #16]
  428ce8:	orr	w9, w9, #0x10
  428cec:	str	w9, [x8, #16]
  428cf0:	mov	w3, #0x10                  	// #16
  428cf4:	mov	x0, x19
  428cf8:	mov	x1, x25
  428cfc:	mov	x2, x22
  428d00:	bl	4291fc <wcrtomb@plt+0x243fc>
  428d04:	cbnz	w0, 42906c <wcrtomb@plt+0x2426c>
  428d08:	ldr	x8, [x19, #176]
  428d0c:	add	x1, x22, #0x1
  428d10:	cmp	x1, x8
  428d14:	b.cs	42902c <wcrtomb@plt+0x2422c>  // b.hs, b.nlast
  428d18:	ldr	x9, [x19, #168]
  428d1c:	mov	x28, x1
  428d20:	ldrb	w10, [x9, x22]
  428d24:	ldrb	w11, [x9, x28]
  428d28:	cmp	w11, w10
  428d2c:	b.eq	428d58 <wcrtomb@plt+0x23f58>  // b.none
  428d30:	cmp	w10, #0x22
  428d34:	cset	w12, eq  // eq = none
  428d38:	cmp	w11, #0x5c
  428d3c:	cset	w11, eq  // eq = none
  428d40:	and	w11, w12, w11
  428d44:	add	x11, x28, x11
  428d48:	add	x28, x11, #0x1
  428d4c:	cmp	x28, x8
  428d50:	b.cc	428d24 <wcrtomb@plt+0x23f24>  // b.lo, b.ul, b.last
  428d54:	b	42902c <wcrtomb@plt+0x2422c>
  428d58:	cmp	w10, #0x27
  428d5c:	mov	w8, #0x104                 	// #260
  428d60:	mov	w9, #0x10c                 	// #268
  428d64:	csel	w3, w9, w8, eq  // eq = none
  428d68:	mov	x0, x19
  428d6c:	mov	x2, x28
  428d70:	bl	4291fc <wcrtomb@plt+0x243fc>
  428d74:	cbnz	w0, 42906c <wcrtomb@plt+0x2426c>
  428d78:	mov	w8, #0x1                   	// #1
  428d7c:	str	x28, [sp, #8]
  428d80:	add	x25, x28, #0x1
  428d84:	str	w8, [sp, #4]
  428d88:	ldrb	w8, [x23, x28]
  428d8c:	cmp	w8, #0x24
  428d90:	b.ne	428e08 <wcrtomb@plt+0x24008>  // b.any
  428d94:	ldr	w8, [x19, #32]
  428d98:	tbnz	w8, #6, 428dd0 <wcrtomb@plt+0x23fd0>
  428d9c:	add	x9, x28, x23
  428da0:	ldrb	w9, [x9, #1]
  428da4:	cmp	w9, #0x7b
  428da8:	b.ne	428dd0 <wcrtomb@plt+0x23fd0>  // b.any
  428dac:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x16808>
  428db0:	add	x1, x28, #0x2
  428db4:	add	x3, sp, #0x8
  428db8:	mov	x0, x23
  428dbc:	mov	x2, x21
  428dc0:	add	x4, x4, #0xb66
  428dc4:	bl	42929c <wcrtomb@plt+0x2449c>
  428dc8:	cbz	w0, 428e30 <wcrtomb@plt+0x24030>
  428dcc:	ldr	w8, [x19, #32]
  428dd0:	tbnz	w8, #2, 428e08 <wcrtomb@plt+0x24008>
  428dd4:	ldr	x8, [sp, #8]
  428dd8:	add	x9, x8, x23
  428ddc:	ldrb	w9, [x9, #1]
  428de0:	cmp	w9, #0x28
  428de4:	b.ne	428e08 <wcrtomb@plt+0x24008>  // b.any
  428de8:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x16808>
  428dec:	add	x1, x8, #0x2
  428df0:	add	x3, sp, #0x8
  428df4:	mov	x0, x23
  428df8:	mov	x2, x21
  428dfc:	add	x4, x4, #0xb69
  428e00:	bl	42929c <wcrtomb@plt+0x2449c>
  428e04:	cbz	w0, 428e30 <wcrtomb@plt+0x24030>
  428e08:	cbz	w20, 428e14 <wcrtomb@plt+0x24014>
  428e0c:	ldr	x22, [sp, #8]
  428e10:	b	428e28 <wcrtomb@plt+0x24028>
  428e14:	ldr	x22, [sp, #8]
  428e18:	ldr	x0, [x19, #56]
  428e1c:	ldrb	w1, [x23, x22]
  428e20:	bl	404a50 <strchr@plt>
  428e24:	cbnz	x0, 428fa8 <wcrtomb@plt+0x241a8>
  428e28:	add	x8, x22, #0x1
  428e2c:	str	x8, [sp, #8]
  428e30:	ldr	x22, [sp, #8]
  428e34:	cmp	x22, x21
  428e38:	b.cc	428c60 <wcrtomb@plt+0x23e60>  // b.lo, b.ul, b.last
  428e3c:	b	428fa8 <wcrtomb@plt+0x241a8>
  428e40:	mov	w0, wzr
  428e44:	str	wzr, [x19, #192]
  428e48:	b	4290b0 <wcrtomb@plt+0x242b0>
  428e4c:	add	x8, x22, #0x3
  428e50:	cmp	x8, x21
  428e54:	b.cs	428c50 <wcrtomb@plt+0x23e50>  // b.hs, b.nlast
  428e58:	ldrb	w8, [x23, x22]
  428e5c:	cmp	w8, #0x73
  428e60:	b.ne	428c50 <wcrtomb@plt+0x23e50>  // b.any
  428e64:	add	x8, x22, x23
  428e68:	ldrb	w1, [x8, #1]
  428e6c:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  428e70:	add	x0, x0, #0xb45
  428e74:	mov	w2, #0x21                  	// #33
  428e78:	bl	404b50 <memchr@plt>
  428e7c:	cbz	x0, 428c50 <wcrtomb@plt+0x23e50>
  428e80:	adrp	x24, 452000 <_obstack_memory_used@@Base+0x16808>
  428e84:	mov	x8, xzr
  428e88:	add	x24, x24, #0xb45
  428e8c:	mov	x27, x22
  428e90:	add	x27, x27, x8
  428e94:	ldrb	w8, [x23, x27]
  428e98:	cmp	w8, #0x73
  428e9c:	b.ne	428f60 <wcrtomb@plt+0x24160>  // b.any
  428ea0:	add	x8, x27, #0x3
  428ea4:	cmp	x8, x21
  428ea8:	b.cs	428f60 <wcrtomb@plt+0x24160>  // b.hs, b.nlast
  428eac:	add	x8, x27, x23
  428eb0:	ldrb	w25, [x8, #1]
  428eb4:	mov	w2, #0x21                  	// #33
  428eb8:	mov	x0, x24
  428ebc:	mov	w1, w25
  428ec0:	bl	404b50 <memchr@plt>
  428ec4:	cbz	x0, 428f60 <wcrtomb@plt+0x24160>
  428ec8:	add	x27, x27, #0x2
  428ecc:	cmp	x27, x21
  428ed0:	b.cs	428f60 <wcrtomb@plt+0x24160>  // b.hs, b.nlast
  428ed4:	mov	w8, #0x1                   	// #1
  428ed8:	ldrb	w9, [x23, x27]
  428edc:	cmp	w8, #0x3
  428ee0:	b.ne	428f14 <wcrtomb@plt+0x24114>  // b.any
  428ee4:	cmp	w9, w25
  428ee8:	b.eq	428f3c <wcrtomb@plt+0x2413c>  // b.none
  428eec:	sub	w8, w9, #0x30
  428ef0:	cmp	w8, #0xa
  428ef4:	mov	w8, #0x3                   	// #3
  428ef8:	b.cc	428f2c <wcrtomb@plt+0x2412c>  // b.lo, b.ul, b.last
  428efc:	and	w9, w9, #0xffffffdf
  428f00:	sub	w9, w9, #0x41
  428f04:	and	w9, w9, #0xff
  428f08:	cmp	w9, #0x1a
  428f0c:	b.cc	428f2c <wcrtomb@plt+0x2412c>  // b.lo, b.ul, b.last
  428f10:	b	428f40 <wcrtomb@plt+0x24140>
  428f14:	cmp	w9, #0x5c
  428f18:	b.ne	428f24 <wcrtomb@plt+0x24124>  // b.any
  428f1c:	add	x27, x27, #0x1
  428f20:	b	428f2c <wcrtomb@plt+0x2412c>
  428f24:	cmp	w9, w25
  428f28:	cinc	w8, w8, eq  // eq = none
  428f2c:	add	x27, x27, #0x1
  428f30:	cmp	x27, x21
  428f34:	b.cc	428ed8 <wcrtomb@plt+0x240d8>  // b.lo, b.ul, b.last
  428f38:	b	428f40 <wcrtomb@plt+0x24140>
  428f3c:	mov	w8, #0x3                   	// #3
  428f40:	cmp	x27, x21
  428f44:	b.cs	428f60 <wcrtomb@plt+0x24160>  // b.hs, b.nlast
  428f48:	cmp	w8, #0x3
  428f4c:	b.ne	428f60 <wcrtomb@plt+0x24160>  // b.any
  428f50:	ldrb	w8, [x23, x27]
  428f54:	cmp	w8, #0x3b
  428f58:	mov	w8, #0x1                   	// #1
  428f5c:	b.eq	428e90 <wcrtomb@plt+0x24090>  // b.none
  428f60:	sxtw	x21, w27
  428f64:	str	x21, [sp, #8]
  428f68:	mov	w3, #0x20                  	// #32
  428f6c:	b	429058 <wcrtomb@plt+0x24258>
  428f70:	ldr	x0, [x19, #56]
  428f74:	ldrb	w1, [x23, x22]
  428f78:	bl	404a50 <strchr@plt>
  428f7c:	cbz	x0, 428c54 <wcrtomb@plt+0x23e54>
  428f80:	tbnz	w25, #12, 428fd8 <wcrtomb@plt+0x241d8>
  428f84:	ldrb	w8, [x19, #36]
  428f88:	tbnz	w8, #7, 428fd8 <wcrtomb@plt+0x241d8>
  428f8c:	mov	w8, #0x100                 	// #256
  428f90:	bic	w3, w8, w25, lsr #3
  428f94:	mov	x21, x22
  428f98:	b	429058 <wcrtomb@plt+0x24258>
  428f9c:	add	x28, x22, #0x1
  428fa0:	mov	x22, x21
  428fa4:	str	x28, [sp, #8]
  428fa8:	ldr	w8, [sp, #4]
  428fac:	mov	w3, wzr
  428fb0:	cbz	w8, 429050 <wcrtomb@plt+0x24250>
  428fb4:	cmp	x22, x25
  428fb8:	b.ls	429050 <wcrtomb@plt+0x24250>  // b.plast
  428fbc:	ldr	x8, [x19, #216]
  428fc0:	cbz	x8, 42904c <wcrtomb@plt+0x2424c>
  428fc4:	ldr	w9, [x8, #16]
  428fc8:	mov	w3, wzr
  428fcc:	orr	w9, w9, #0x10
  428fd0:	str	w9, [x8, #16]
  428fd4:	b	429050 <wcrtomb@plt+0x24250>
  428fd8:	add	x21, x22, #0x1
  428fdc:	str	x21, [sp, #8]
  428fe0:	mov	w3, #0x40                  	// #64
  428fe4:	b	429058 <wcrtomb@plt+0x24258>
  428fe8:	add	x8, x22, #0x1
  428fec:	str	x28, [sp, #8]
  428ff0:	mov	x20, x8
  428ff4:	cmp	x8, x21
  428ff8:	b.cs	42900c <wcrtomb@plt+0x2420c>  // b.hs, b.nlast
  428ffc:	ldrb	w8, [x23, x20]
  429000:	cmp	w8, #0xa
  429004:	add	x8, x20, #0x1
  429008:	b.ne	428ff0 <wcrtomb@plt+0x241f0>  // b.any
  42900c:	mov	x0, x19
  429010:	mov	x1, x25
  429014:	mov	x2, x22
  429018:	mov	w3, wzr
  42901c:	bl	4291fc <wcrtomb@plt+0x243fc>
  429020:	cbnz	w0, 42906c <wcrtomb@plt+0x2426c>
  429024:	str	x20, [x19, #184]
  429028:	b	4290a4 <wcrtomb@plt+0x242a4>
  42902c:	ldrb	w8, [x19, #32]
  429030:	mov	w9, #0x1                   	// #1
  429034:	str	x22, [x19, #184]
  429038:	str	w9, [x19, #192]
  42903c:	tbz	w8, #4, 42906c <wcrtomb@plt+0x2426c>
  429040:	mov	x0, x19
  429044:	bl	428110 <wcrtomb@plt+0x23310>
  429048:	b	42906c <wcrtomb@plt+0x2426c>
  42904c:	mov	w3, wzr
  429050:	mov	x21, x22
  429054:	mov	x22, x25
  429058:	mov	x0, x19
  42905c:	mov	x1, x22
  429060:	mov	x2, x21
  429064:	bl	4291fc <wcrtomb@plt+0x243fc>
  429068:	cbz	w0, 429074 <wcrtomb@plt+0x24274>
  42906c:	mov	w0, #0x2                   	// #2
  429070:	b	4290b0 <wcrtomb@plt+0x242b0>
  429074:	ldrb	w8, [x19, #35]
  429078:	str	x21, [x19, #184]
  42907c:	tbnz	w8, #5, 4290ac <wcrtomb@plt+0x242ac>
  429080:	cbz	w20, 4290a4 <wcrtomb@plt+0x242a4>
  429084:	cbnz	x26, 429090 <wcrtomb@plt+0x24290>
  429088:	ldr	x26, [x19, #208]
  42908c:	cbz	x26, 4290a4 <wcrtomb@plt+0x242a4>
  429090:	ldr	w8, [x26, #16]
  429094:	orr	w8, w8, #0x4
  429098:	str	w8, [x26, #16]
  42909c:	ldr	x26, [x26, #8]
  4290a0:	cbnz	x26, 429090 <wcrtomb@plt+0x24290>
  4290a4:	mov	w0, #0x1                   	// #1
  4290a8:	b	4290b0 <wcrtomb@plt+0x242b0>
  4290ac:	mov	w0, wzr
  4290b0:	ldp	x20, x19, [sp, #96]
  4290b4:	ldp	x22, x21, [sp, #80]
  4290b8:	ldp	x24, x23, [sp, #64]
  4290bc:	ldp	x26, x25, [sp, #48]
  4290c0:	ldp	x28, x27, [sp, #32]
  4290c4:	ldp	x29, x30, [sp, #16]
  4290c8:	add	sp, sp, #0x70
  4290cc:	ret
  4290d0:	stp	x29, x30, [sp, #-96]!
  4290d4:	stp	x28, x27, [sp, #16]
  4290d8:	stp	x26, x25, [sp, #32]
  4290dc:	stp	x24, x23, [sp, #48]
  4290e0:	stp	x22, x21, [sp, #64]
  4290e4:	stp	x20, x19, [sp, #80]
  4290e8:	ldr	x20, [x0, #208]
  4290ec:	mov	x29, sp
  4290f0:	cbz	x20, 4291e0 <wcrtomb@plt+0x243e0>
  4290f4:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4290f8:	mov	x19, x0
  4290fc:	mov	w21, wzr
  429100:	mov	w26, #0x2d                  	// #45
  429104:	add	x22, x22, #0xb98
  429108:	mov	w28, #0x71                  	// #113
  42910c:	mov	w23, #0x45                  	// #69
  429110:	mov	w24, #0x6a                  	// #106
  429114:	mov	w25, #0x73                  	// #115
  429118:	mov	w27, #0x64                  	// #100
  42911c:	ldr	w4, [x20, #16]
  429120:	mov	w9, #0x6e                  	// #110
  429124:	mov	w10, #0x77                  	// #119
  429128:	ldr	x8, [x19, #104]
  42912c:	tst	w4, #0x1
  429130:	csel	w9, w26, w9, eq  // eq = none
  429134:	tst	w4, #0x2
  429138:	csel	w9, w9, w10, eq  // eq = none
  42913c:	tst	w4, #0x4
  429140:	ldr	w1, [x19, #224]
  429144:	strb	w9, [x22]
  429148:	csel	w9, w26, w28, eq  // eq = none
  42914c:	tst	w4, #0x8
  429150:	strb	w9, [x22, #1]
  429154:	csel	w9, w26, w23, eq  // eq = none
  429158:	tst	w4, #0x10
  42915c:	strb	w9, [x22, #2]
  429160:	csel	w9, w26, w24, eq  // eq = none
  429164:	tst	w4, #0x20
  429168:	strb	w9, [x22, #3]
  42916c:	csel	w9, w26, w25, eq  // eq = none
  429170:	tst	w4, #0x40
  429174:	strb	w9, [x22, #4]
  429178:	csel	w9, w26, w27, eq  // eq = none
  42917c:	strb	w9, [x22, #5]
  429180:	strb	wzr, [x22, #6]
  429184:	tbnz	w4, #1, 4291b8 <wcrtomb@plt+0x243b8>
  429188:	ldr	w9, [x20, #32]
  42918c:	ldr	x10, [x20, #24]
  429190:	ldr	x11, [x19, #168]
  429194:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  429198:	add	x0, x0, #0xb8b
  42919c:	sub	w6, w9, w10
  4291a0:	add	x7, x11, x10
  4291a4:	mov	w2, w21
  4291a8:	mov	x3, x20
  4291ac:	mov	x5, x22
  4291b0:	blr	x8
  4291b4:	b	4291d4 <wcrtomb@plt+0x243d4>
  4291b8:	ldr	x6, [x20, #24]
  4291bc:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  4291c0:	add	x0, x0, #0xb6c
  4291c4:	mov	w2, w21
  4291c8:	mov	x3, x20
  4291cc:	mov	x5, x22
  4291d0:	blr	x8
  4291d4:	ldr	x20, [x20, #8]
  4291d8:	add	w21, w21, #0x1
  4291dc:	cbnz	x20, 42911c <wcrtomb@plt+0x2431c>
  4291e0:	ldp	x20, x19, [sp, #80]
  4291e4:	ldp	x22, x21, [sp, #64]
  4291e8:	ldp	x24, x23, [sp, #48]
  4291ec:	ldp	x26, x25, [sp, #32]
  4291f0:	ldp	x28, x27, [sp, #16]
  4291f4:	ldp	x29, x30, [sp], #96
  4291f8:	ret
  4291fc:	stp	x29, x30, [sp, #-48]!
  429200:	stp	x22, x21, [sp, #16]
  429204:	stp	x20, x19, [sp, #32]
  429208:	mov	w20, w3
  42920c:	mov	x21, x2
  429210:	mov	x22, x1
  429214:	cmp	x2, x1
  429218:	mov	x19, x0
  42921c:	mov	x29, sp
  429220:	b.ne	429230 <wcrtomb@plt+0x24430>  // b.any
  429224:	tbnz	w20, #8, 429230 <wcrtomb@plt+0x24430>
  429228:	mov	w0, wzr
  42922c:	b	429288 <wcrtomb@plt+0x24488>
  429230:	mov	w0, #0x1                   	// #1
  429234:	mov	w1, #0x28                  	// #40
  429238:	bl	404680 <calloc@plt>
  42923c:	cbz	x0, 42927c <wcrtomb@plt+0x2447c>
  429240:	mov	x8, x0
  429244:	mov	w9, #0xfffffefd            	// #-259
  429248:	and	w9, w20, w9
  42924c:	stp	x22, x21, [x8, #24]
  429250:	str	w9, [x8, #16]
  429254:	ldr	x9, [x19, #216]
  429258:	add	x10, x19, #0xd0
  42925c:	mov	w0, wzr
  429260:	add	x11, x9, #0x8
  429264:	cmp	x9, #0x0
  429268:	stp	x9, xzr, [x8]
  42926c:	csel	x9, x10, x11, eq  // eq = none
  429270:	str	x8, [x9]
  429274:	str	x8, [x19, #216]
  429278:	b	429288 <wcrtomb@plt+0x24488>
  42927c:	mov	x0, x19
  429280:	bl	427a7c <wcrtomb@plt+0x22c7c>
  429284:	cbz	w0, 429298 <wcrtomb@plt+0x24498>
  429288:	ldp	x20, x19, [sp, #32]
  42928c:	ldp	x22, x21, [sp, #16]
  429290:	ldp	x29, x30, [sp], #48
  429294:	ret
  429298:	b	429244 <wcrtomb@plt+0x24444>
  42929c:	cmp	x1, x2
  4292a0:	b.cs	429348 <wcrtomb@plt+0x24548>  // b.hs, b.nlast
  4292a4:	mov	w9, wzr
  4292a8:	mov	w8, #0x1                   	// #1
  4292ac:	cmp	w9, #0x2
  4292b0:	b.eq	4292dc <wcrtomb@plt+0x244dc>  // b.none
  4292b4:	cmp	w9, #0x1
  4292b8:	b.eq	4292fc <wcrtomb@plt+0x244fc>  // b.none
  4292bc:	cbnz	w9, 42933c <wcrtomb@plt+0x2453c>
  4292c0:	ldrb	w9, [x0, x1]
  4292c4:	cmp	w9, #0x22
  4292c8:	b.eq	4292f4 <wcrtomb@plt+0x244f4>  // b.none
  4292cc:	cmp	w9, #0x27
  4292d0:	b.ne	42930c <wcrtomb@plt+0x2450c>  // b.any
  4292d4:	mov	w9, #0x1                   	// #1
  4292d8:	b	42933c <wcrtomb@plt+0x2453c>
  4292dc:	ldrb	w9, [x0, x1]
  4292e0:	cmp	w9, #0x22
  4292e4:	b.eq	429338 <wcrtomb@plt+0x24538>  // b.none
  4292e8:	cmp	w9, #0x5c
  4292ec:	b.ne	4292f4 <wcrtomb@plt+0x244f4>  // b.any
  4292f0:	add	x1, x1, #0x1
  4292f4:	mov	w9, #0x2                   	// #2
  4292f8:	b	42933c <wcrtomb@plt+0x2453c>
  4292fc:	ldrb	w9, [x0, x1]
  429300:	cmp	w9, #0x27
  429304:	cset	w9, ne  // ne = any
  429308:	b	42933c <wcrtomb@plt+0x2453c>
  42930c:	ldrb	w10, [x4]
  429310:	cmp	w9, w10
  429314:	b.ne	429324 <wcrtomb@plt+0x24524>  // b.any
  429318:	mov	w9, wzr
  42931c:	add	x8, x8, #0x1
  429320:	b	42933c <wcrtomb@plt+0x2453c>
  429324:	ldrb	w10, [x4, #1]
  429328:	cmp	w9, w10
  42932c:	b.ne	429338 <wcrtomb@plt+0x24538>  // b.any
  429330:	subs	x8, x8, #0x1
  429334:	b.eq	429350 <wcrtomb@plt+0x24550>  // b.none
  429338:	mov	w9, wzr
  42933c:	add	x1, x1, #0x1
  429340:	cmp	x1, x2
  429344:	b.cc	4292ac <wcrtomb@plt+0x244ac>  // b.lo, b.ul, b.last
  429348:	mov	w0, #0x1                   	// #1
  42934c:	ret
  429350:	mov	w0, wzr
  429354:	str	x1, [x3]
  429358:	ret
  42935c:	stp	x29, x30, [sp, #-16]!
  429360:	ldr	x8, [x0, #208]
  429364:	mov	x29, sp
  429368:	cbz	x8, 429420 <wcrtomb@plt+0x24620>
  42936c:	mov	x10, #0x600                 	// #1536
  429370:	mov	w9, #0x1                   	// #1
  429374:	movk	x10, #0x1, lsl #32
  429378:	ldrb	w11, [x8, #16]
  42937c:	tbnz	w11, #2, 4293b8 <wcrtomb@plt+0x245b8>
  429380:	ldp	x11, x12, [x8, #24]
  429384:	cmp	x11, x12
  429388:	b.cs	4293b4 <wcrtomb@plt+0x245b4>  // b.hs, b.nlast
  42938c:	ldr	x13, [x0, #168]
  429390:	ldrb	w14, [x13, x11]
  429394:	cmp	w14, #0x20
  429398:	b.hi	4293b4 <wcrtomb@plt+0x245b4>  // b.pmore
  42939c:	lsl	x14, x9, x14
  4293a0:	tst	x14, x10
  4293a4:	b.eq	4293b4 <wcrtomb@plt+0x245b4>  // b.none
  4293a8:	add	x11, x11, #0x1
  4293ac:	cmp	x11, x12
  4293b0:	b.cc	429390 <wcrtomb@plt+0x24590>  // b.lo, b.ul, b.last
  4293b4:	str	x11, [x8, #24]
  4293b8:	mov	x11, x8
  4293bc:	ldr	x8, [x8, #8]
  4293c0:	ldr	w12, [x11, #16]
  4293c4:	cbz	x8, 4293cc <wcrtomb@plt+0x245cc>
  4293c8:	tbnz	w12, #4, 4293b8 <wcrtomb@plt+0x245b8>
  4293cc:	tbnz	w12, #2, 42941c <wcrtomb@plt+0x2461c>
  4293d0:	ldp	x14, x13, [x11, #24]
  4293d4:	cmp	x13, x14
  4293d8:	b.ls	429408 <wcrtomb@plt+0x24608>  // b.plast
  4293dc:	ldr	x15, [x0, #168]
  4293e0:	sub	x15, x15, #0x1
  4293e4:	ldrb	w16, [x15, x13]
  4293e8:	cmp	w16, #0x20
  4293ec:	b.hi	429408 <wcrtomb@plt+0x24608>  // b.pmore
  4293f0:	lsl	x16, x9, x16
  4293f4:	tst	x16, x10
  4293f8:	b.eq	429408 <wcrtomb@plt+0x24608>  // b.none
  4293fc:	sub	x13, x13, #0x1
  429400:	cmp	x13, x14
  429404:	b.hi	4293e4 <wcrtomb@plt+0x245e4>  // b.pmore
  429408:	cmp	x14, x13
  42940c:	str	x13, [x11, #32]
  429410:	b.ne	42941c <wcrtomb@plt+0x2461c>  // b.any
  429414:	orr	w12, w12, #0x1
  429418:	str	w12, [x11, #16]
  42941c:	cbnz	x8, 429378 <wcrtomb@plt+0x24578>
  429420:	bl	429cec <wcrtomb@plt+0x24eec>
  429424:	mov	w0, wzr
  429428:	ldp	x29, x30, [sp], #16
  42942c:	ret
  429430:	stp	x29, x30, [sp, #-48]!
  429434:	stp	x22, x21, [sp, #16]
  429438:	stp	x20, x19, [sp, #32]
  42943c:	ldr	x1, [x0, #208]
  429440:	mov	x19, x0
  429444:	mov	x29, sp
  429448:	cbz	x1, 429484 <wcrtomb@plt+0x24684>
  42944c:	adrp	x20, 429000 <wcrtomb@plt+0x24200>
  429450:	adrp	x21, 429000 <wcrtomb@plt+0x24200>
  429454:	add	x20, x20, #0xf8c
  429458:	add	x21, x21, #0xf98
  42945c:	ldrb	w8, [x1, #16]
  429460:	ldr	x22, [x1, #8]
  429464:	tbnz	w8, #3, 42947c <wcrtomb@plt+0x2467c>
  429468:	mov	x0, x19
  42946c:	mov	x2, x20
  429470:	mov	x3, x21
  429474:	bl	429d8c <wcrtomb@plt+0x24f8c>
  429478:	cbnz	w0, 429494 <wcrtomb@plt+0x24694>
  42947c:	mov	x1, x22
  429480:	cbnz	x22, 42945c <wcrtomb@plt+0x2465c>
  429484:	mov	x0, x19
  429488:	bl	429cec <wcrtomb@plt+0x24eec>
  42948c:	mov	w0, wzr
  429490:	b	429498 <wcrtomb@plt+0x24698>
  429494:	mov	w0, #0x1                   	// #1
  429498:	ldp	x20, x19, [sp, #32]
  42949c:	ldp	x22, x21, [sp, #16]
  4294a0:	ldp	x29, x30, [sp], #48
  4294a4:	ret
  4294a8:	sub	sp, sp, #0x70
  4294ac:	stp	x29, x30, [sp, #16]
  4294b0:	stp	x28, x27, [sp, #32]
  4294b4:	stp	x26, x25, [sp, #48]
  4294b8:	stp	x24, x23, [sp, #64]
  4294bc:	stp	x22, x21, [sp, #80]
  4294c0:	stp	x20, x19, [sp, #96]
  4294c4:	ldr	x20, [x0, #208]
  4294c8:	add	x29, sp, #0x10
  4294cc:	cbz	x20, 42965c <wcrtomb@plt+0x2485c>
  4294d0:	adrp	x26, 452000 <_obstack_memory_used@@Base+0x16808>
  4294d4:	mov	x19, x0
  4294d8:	mov	x28, xzr
  4294dc:	mov	x21, xzr
  4294e0:	add	x26, x26, #0x3ee
  4294e4:	str	x0, [sp]
  4294e8:	ldr	w8, [x20, #16]
  4294ec:	tbnz	w8, #2, 429650 <wcrtomb@plt+0x24850>
  4294f0:	mov	x27, x26
  4294f4:	tbnz	w8, #0, 429510 <wcrtomb@plt+0x24710>
  4294f8:	tbnz	w8, #1, 42950c <wcrtomb@plt+0x2470c>
  4294fc:	ldr	x8, [x19, #168]
  429500:	ldr	x9, [x20, #24]
  429504:	add	x27, x8, x9
  429508:	b	429510 <wcrtomb@plt+0x24710>
  42950c:	ldr	x27, [x20, #24]
  429510:	ldrb	w8, [x27]
  429514:	cmp	w8, #0x7e
  429518:	b.ne	429650 <wcrtomb@plt+0x24850>  // b.any
  42951c:	mov	x0, x20
  429520:	bl	428930 <wcrtomb@plt+0x23b30>
  429524:	mov	x22, x0
  429528:	mov	w23, #0x1                   	// #1
  42952c:	cmp	x0, #0x2
  429530:	b.cc	429550 <wcrtomb@plt+0x24750>  // b.lo, b.ul, b.last
  429534:	ldrb	w8, [x27, x23]
  429538:	cmp	w8, #0x2f
  42953c:	b.eq	429550 <wcrtomb@plt+0x24750>  // b.none
  429540:	add	x23, x23, #0x1
  429544:	cmp	x22, x23
  429548:	b.ne	429534 <wcrtomb@plt+0x24734>  // b.any
  42954c:	b	429650 <wcrtomb@plt+0x24850>
  429550:	cmp	x23, x22
  429554:	b.eq	429650 <wcrtomb@plt+0x24850>  // b.none
  429558:	cmp	x23, #0x2
  42955c:	b.cc	429584 <wcrtomb@plt+0x24784>  // b.lo, b.ul, b.last
  429560:	cmp	x23, x21
  429564:	b.ls	42959c <wcrtomb@plt+0x2479c>  // b.plast
  429568:	mov	x0, x28
  42956c:	mov	x1, x23
  429570:	bl	404710 <realloc@plt>
  429574:	mov	x25, x0
  429578:	mov	x21, x23
  42957c:	cbnz	x0, 4295a0 <wcrtomb@plt+0x247a0>
  429580:	b	42969c <wcrtomb@plt+0x2489c>
  429584:	bl	4042c0 <getuid@plt>
  429588:	bl	404910 <getpwuid@plt>
  42958c:	mov	x24, x0
  429590:	mov	w23, #0x1                   	// #1
  429594:	cbnz	x24, 4295cc <wcrtomb@plt+0x247cc>
  429598:	b	429650 <wcrtomb@plt+0x24850>
  42959c:	mov	x25, x28
  4295a0:	sub	x23, x23, #0x1
  4295a4:	add	x1, x27, #0x1
  4295a8:	mov	x0, x25
  4295ac:	mov	x2, x23
  4295b0:	bl	4040f0 <memcpy@plt>
  4295b4:	mov	x0, x25
  4295b8:	strb	wzr, [x25, x23]
  4295bc:	bl	404610 <getpwnam@plt>
  4295c0:	mov	x24, x0
  4295c4:	mov	x28, x25
  4295c8:	cbz	x24, 429650 <wcrtomb@plt+0x24850>
  4295cc:	ldr	x0, [x24, #32]
  4295d0:	str	x28, [sp, #8]
  4295d4:	mov	x28, x26
  4295d8:	mov	x19, x21
  4295dc:	bl	404170 <strlen@plt>
  4295e0:	sub	x21, x22, x23
  4295e4:	add	x26, x0, x21
  4295e8:	mov	x25, x0
  4295ec:	mov	x0, x26
  4295f0:	bl	4044d0 <malloc@plt>
  4295f4:	cbz	x0, 42968c <wcrtomb@plt+0x2488c>
  4295f8:	ldr	x1, [x24, #32]
  4295fc:	mov	x2, x25
  429600:	mov	x22, x0
  429604:	add	x24, x26, x0
  429608:	bl	4040f0 <memcpy@plt>
  42960c:	add	x8, x27, x23
  429610:	add	x0, x22, x25
  429614:	add	x1, x8, #0x1
  429618:	sub	x2, x21, #0x1
  42961c:	bl	4040f0 <memcpy@plt>
  429620:	sturb	wzr, [x24, #-1]
  429624:	ldr	w8, [x20, #16]
  429628:	tbz	w8, #1, 429638 <wcrtomb@plt+0x24838>
  42962c:	ldr	x0, [x20, #24]
  429630:	bl	4049b0 <free@plt>
  429634:	ldr	w8, [x20, #16]
  429638:	orr	w8, w8, #0x2
  42963c:	str	x22, [x20, #24]
  429640:	str	w8, [x20, #16]
  429644:	mov	x21, x19
  429648:	mov	x26, x28
  42964c:	ldp	x19, x28, [sp]
  429650:	ldr	x20, [x20, #8]
  429654:	cbnz	x20, 4294e8 <wcrtomb@plt+0x246e8>
  429658:	b	429660 <wcrtomb@plt+0x24860>
  42965c:	mov	x28, xzr
  429660:	mov	x0, x28
  429664:	bl	4049b0 <free@plt>
  429668:	ldp	x20, x19, [sp, #96]
  42966c:	ldp	x22, x21, [sp, #80]
  429670:	ldp	x24, x23, [sp, #64]
  429674:	ldp	x26, x25, [sp, #48]
  429678:	ldp	x28, x27, [sp, #32]
  42967c:	ldp	x29, x30, [sp, #16]
  429680:	mov	w0, wzr
  429684:	add	sp, sp, #0x70
  429688:	ret
  42968c:	ldr	x0, [sp, #8]
  429690:	bl	4049b0 <free@plt>
  429694:	ldr	x0, [sp]
  429698:	b	4296a8 <wcrtomb@plt+0x248a8>
  42969c:	mov	x0, x28
  4296a0:	bl	4049b0 <free@plt>
  4296a4:	mov	x0, x19
  4296a8:	ldp	x20, x19, [sp, #96]
  4296ac:	ldp	x22, x21, [sp, #80]
  4296b0:	ldp	x24, x23, [sp, #64]
  4296b4:	ldp	x26, x25, [sp, #48]
  4296b8:	ldp	x28, x27, [sp, #32]
  4296bc:	ldp	x29, x30, [sp, #16]
  4296c0:	add	sp, sp, #0x70
  4296c4:	b	427a7c <wcrtomb@plt+0x22c7c>
  4296c8:	stp	x29, x30, [sp, #-64]!
  4296cc:	stp	x22, x21, [sp, #32]
  4296d0:	stp	x20, x19, [sp, #48]
  4296d4:	ldr	x1, [x0, #208]
  4296d8:	mov	x19, x0
  4296dc:	str	x23, [sp, #16]
  4296e0:	mov	x29, sp
  4296e4:	cbz	x1, 429728 <wcrtomb@plt+0x24928>
  4296e8:	adrp	x20, 42a000 <wcrtomb@plt+0x25200>
  4296ec:	adrp	x21, 42a000 <wcrtomb@plt+0x25200>
  4296f0:	mov	w22, #0x48                  	// #72
  4296f4:	add	x20, x20, #0x524
  4296f8:	add	x21, x21, #0x550
  4296fc:	ldrb	w8, [x1, #16]
  429700:	ldr	x23, [x1, #8]
  429704:	tst	w8, w22
  429708:	b.ne	429720 <wcrtomb@plt+0x24920>  // b.any
  42970c:	mov	x0, x19
  429710:	mov	x2, x20
  429714:	mov	x3, x21
  429718:	bl	429d8c <wcrtomb@plt+0x24f8c>
  42971c:	cbnz	w0, 429748 <wcrtomb@plt+0x24948>
  429720:	mov	x1, x23
  429724:	cbnz	x23, 4296fc <wcrtomb@plt+0x248fc>
  429728:	mov	x0, x19
  42972c:	bl	429cec <wcrtomb@plt+0x24eec>
  429730:	mov	w0, wzr
  429734:	ldp	x20, x19, [sp, #48]
  429738:	ldp	x22, x21, [sp, #32]
  42973c:	ldr	x23, [sp, #16]
  429740:	ldp	x29, x30, [sp], #64
  429744:	ret
  429748:	mov	w0, #0x1                   	// #1
  42974c:	b	429734 <wcrtomb@plt+0x24934>
  429750:	sub	sp, sp, #0x80
  429754:	stp	x29, x30, [sp, #32]
  429758:	stp	x28, x27, [sp, #48]
  42975c:	stp	x26, x25, [sp, #64]
  429760:	stp	x24, x23, [sp, #80]
  429764:	stp	x22, x21, [sp, #96]
  429768:	stp	x20, x19, [sp, #112]
  42976c:	ldr	x20, [x0, #208]
  429770:	add	x29, sp, #0x20
  429774:	cbz	x20, 429990 <wcrtomb@plt+0x24b90>
  429778:	adrp	x23, 452000 <_obstack_memory_used@@Base+0x16808>
  42977c:	mov	x19, x0
  429780:	add	x23, x23, #0x3ee
  429784:	ldr	w24, [x20, #16]
  429788:	mov	x21, x23
  42978c:	tbnz	w24, #0, 4297a8 <wcrtomb@plt+0x249a8>
  429790:	tbnz	w24, #1, 4297a4 <wcrtomb@plt+0x249a4>
  429794:	ldr	x8, [x19, #168]
  429798:	ldr	x9, [x20, #24]
  42979c:	add	x21, x8, x9
  4297a0:	b	4297a8 <wcrtomb@plt+0x249a8>
  4297a4:	ldr	x21, [x20, #24]
  4297a8:	mov	x0, x20
  4297ac:	bl	428930 <wcrtomb@plt+0x23b30>
  4297b0:	tbnz	w24, #3, 429988 <wcrtomb@plt+0x24b88>
  4297b4:	ldr	w8, [x19, #32]
  4297b8:	and	w8, w8, #0x600
  4297bc:	cbz	w8, 429988 <wcrtomb@plt+0x24b88>
  4297c0:	mov	x22, x0
  4297c4:	tbnz	w24, #1, 429800 <wcrtomb@plt+0x24a00>
  4297c8:	add	x0, x22, #0x1
  4297cc:	bl	4044d0 <malloc@plt>
  4297d0:	cbz	x0, 4299b4 <wcrtomb@plt+0x24bb4>
  4297d4:	mov	x1, x21
  4297d8:	mov	x2, x22
  4297dc:	mov	x23, x0
  4297e0:	bl	4040f0 <memcpy@plt>
  4297e4:	strb	wzr, [x23, x22]
  4297e8:	ldr	w8, [x20, #16]
  4297ec:	str	x23, [x20, #24]
  4297f0:	orr	w24, w8, #0x2
  4297f4:	str	w24, [x20, #16]
  4297f8:	cbnz	x22, 429808 <wcrtomb@plt+0x24a08>
  4297fc:	b	42997c <wcrtomb@plt+0x24b7c>
  429800:	ldr	x23, [x20, #24]
  429804:	cbz	x22, 42997c <wcrtomb@plt+0x24b7c>
  429808:	and	w9, w24, #0x4
  42980c:	mov	w10, #0x40                  	// #64
  429810:	lsl	w27, w10, w9
  429814:	mov	w10, #0x20                  	// #32
  429818:	lsl	w28, w10, w9
  42981c:	lsr	w10, w9, #2
  429820:	add	x10, x19, w10, uxtw #3
  429824:	add	x10, x10, #0x48
  429828:	str	x10, [sp, #16]
  42982c:	mov	w10, #0x10                  	// #16
  429830:	mov	x8, xzr
  429834:	mov	w25, wzr
  429838:	lsl	w9, w10, w9
  42983c:	str	w9, [sp, #12]
  429840:	ldrb	w8, [x21, x8]
  429844:	sxtw	x9, w25
  429848:	add	x26, x9, #0x1
  42984c:	cmp	w8, #0x5c
  429850:	b.ne	429954 <wcrtomb@plt+0x24b54>  // b.any
  429854:	ldr	w9, [x19, #36]
  429858:	add	x24, x21, x26
  42985c:	ldrb	w8, [x24]
  429860:	tst	w9, w27
  429864:	b.eq	4298a8 <wcrtomb@plt+0x24aa8>  // b.none
  429868:	orr	w10, w8, #0x20
  42986c:	cmp	w10, #0x78
  429870:	b.ne	4298a8 <wcrtomb@plt+0x24aa8>  // b.any
  429874:	sub	x8, x22, x26
  429878:	cmp	x8, #0x1
  42987c:	b.ls	4298ec <wcrtomb@plt+0x24aec>  // b.plast
  429880:	add	x1, x24, #0x1
  429884:	sub	x0, x29, #0x4
  429888:	mov	w2, #0x10                  	// #16
  42988c:	mov	w3, #0x2                   	// #2
  429890:	bl	42afec <wcrtomb@plt+0x261ec>
  429894:	cbz	w0, 4298ec <wcrtomb@plt+0x24aec>
  429898:	ldur	w8, [x29, #-4]
  42989c:	add	w9, w25, w0
  4298a0:	add	w26, w9, #0x2
  4298a4:	b	429954 <wcrtomb@plt+0x24b54>
  4298a8:	and	w10, w9, w28
  4298ac:	cbz	w10, 429908 <wcrtomb@plt+0x24b08>
  4298b0:	sub	w10, w8, #0x30
  4298b4:	and	w10, w10, #0xff
  4298b8:	cmp	w10, #0x9
  4298bc:	b.hi	429908 <wcrtomb@plt+0x24b08>  // b.pmore
  4298c0:	cmp	x22, x26
  4298c4:	b.eq	4298ec <wcrtomb@plt+0x24aec>  // b.none
  4298c8:	sub	x0, x29, #0x4
  4298cc:	mov	w2, #0x8                   	// #8
  4298d0:	mov	w3, #0x3                   	// #3
  4298d4:	mov	x1, x24
  4298d8:	bl	42afec <wcrtomb@plt+0x261ec>
  4298dc:	cbz	w0, 4298ec <wcrtomb@plt+0x24aec>
  4298e0:	ldur	w8, [x29, #-4]
  4298e4:	add	w26, w0, w26
  4298e8:	b	429954 <wcrtomb@plt+0x24b54>
  4298ec:	mov	w8, #0x5c                  	// #92
  4298f0:	strb	w8, [x23]
  4298f4:	ldrb	w8, [x24]
  4298f8:	add	w26, w25, #0x2
  4298fc:	strb	w8, [x23, #1]
  429900:	add	x23, x23, #0x2
  429904:	b	429958 <wcrtomb@plt+0x24b58>
  429908:	ldr	x10, [sp, #16]
  42990c:	ldr	x10, [x10]
  429910:	ldrb	w11, [x10]
  429914:	cbz	w11, 429934 <wcrtomb@plt+0x24b34>
  429918:	add	x10, x10, #0x2
  42991c:	ldurb	w12, [x10, #-1]
  429920:	cbz	w12, 429934 <wcrtomb@plt+0x24b34>
  429924:	cmp	w8, w11, uxtb
  429928:	b.eq	42996c <wcrtomb@plt+0x24b6c>  // b.none
  42992c:	ldrb	w11, [x10], #2
  429930:	cbnz	w11, 42991c <wcrtomb@plt+0x24b1c>
  429934:	ldr	w10, [sp, #12]
  429938:	stur	wzr, [x29, #-4]
  42993c:	tst	w9, w10
  429940:	b.eq	429950 <wcrtomb@plt+0x24b50>  // b.none
  429944:	mov	w8, #0x5c                  	// #92
  429948:	strb	w8, [x23], #1
  42994c:	ldrb	w8, [x24]
  429950:	add	w26, w25, #0x2
  429954:	strb	w8, [x23], #1
  429958:	cmp	x22, w26, sxtw
  42995c:	sxtw	x8, w26
  429960:	mov	w25, w26
  429964:	b.hi	429840 <wcrtomb@plt+0x24a40>  // b.pmore
  429968:	b	42997c <wcrtomb@plt+0x24b7c>
  42996c:	stur	w12, [x29, #-4]
  429970:	strb	w12, [x23], #1
  429974:	add	w26, w25, #0x2
  429978:	b	429958 <wcrtomb@plt+0x24b58>
  42997c:	strb	wzr, [x23]
  429980:	adrp	x23, 452000 <_obstack_memory_used@@Base+0x16808>
  429984:	add	x23, x23, #0x3ee
  429988:	ldr	x20, [x20, #8]
  42998c:	cbnz	x20, 429784 <wcrtomb@plt+0x24984>
  429990:	ldp	x20, x19, [sp, #112]
  429994:	ldp	x22, x21, [sp, #96]
  429998:	ldp	x24, x23, [sp, #80]
  42999c:	ldp	x26, x25, [sp, #64]
  4299a0:	ldp	x28, x27, [sp, #48]
  4299a4:	ldp	x29, x30, [sp, #32]
  4299a8:	mov	w0, wzr
  4299ac:	add	sp, sp, #0x80
  4299b0:	ret
  4299b4:	mov	x0, x19
  4299b8:	ldp	x20, x19, [sp, #112]
  4299bc:	ldp	x22, x21, [sp, #96]
  4299c0:	ldp	x24, x23, [sp, #80]
  4299c4:	ldp	x26, x25, [sp, #64]
  4299c8:	ldp	x28, x27, [sp, #48]
  4299cc:	ldp	x29, x30, [sp, #32]
  4299d0:	add	sp, sp, #0x80
  4299d4:	b	427a7c <wcrtomb@plt+0x22c7c>
  4299d8:	sub	sp, sp, #0x140
  4299dc:	stp	x29, x30, [sp, #224]
  4299e0:	stp	x28, x27, [sp, #240]
  4299e4:	stp	x26, x25, [sp, #256]
  4299e8:	stp	x24, x23, [sp, #272]
  4299ec:	stp	x22, x21, [sp, #288]
  4299f0:	stp	x20, x19, [sp, #304]
  4299f4:	ldr	x27, [x0, #208]
  4299f8:	add	x29, sp, #0xe0
  4299fc:	cbz	x27, 429bf4 <wcrtomb@plt+0x24df4>
  429a00:	ldr	w8, [x0, #36]
  429a04:	adrp	x28, 452000 <_obstack_memory_used@@Base+0x16808>
  429a08:	adrp	x21, 452000 <_obstack_memory_used@@Base+0x16808>
  429a0c:	mov	x19, x0
  429a10:	lsl	w8, w8, #5
  429a14:	add	x9, x0, #0xd8
  429a18:	add	x28, x28, #0x3ee
  429a1c:	and	w20, w8, #0x80
  429a20:	add	x21, x21, #0xc98
  429a24:	str	x9, [sp, #8]
  429a28:	mov	x23, x27
  429a2c:	ldr	w8, [x27, #16]
  429a30:	ldr	x27, [x27, #8]
  429a34:	tbnz	w8, #2, 429bc4 <wcrtomb@plt+0x24dc4>
  429a38:	mov	x25, x28
  429a3c:	tbnz	w8, #0, 429a58 <wcrtomb@plt+0x24c58>
  429a40:	tbnz	w8, #1, 429a54 <wcrtomb@plt+0x24c54>
  429a44:	ldr	x8, [x19, #168]
  429a48:	ldr	x9, [x23, #24]
  429a4c:	add	x25, x8, x9
  429a50:	b	429a58 <wcrtomb@plt+0x24c58>
  429a54:	ldr	x25, [x23, #24]
  429a58:	mov	x0, x23
  429a5c:	bl	428930 <wcrtomb@plt+0x23b30>
  429a60:	mov	x26, x0
  429a64:	mov	x24, xzr
  429a68:	cmp	w26, w24
  429a6c:	b.eq	429bc4 <wcrtomb@plt+0x24dc4>  // b.none
  429a70:	ldrb	w1, [x25, x24]
  429a74:	mov	w2, #0x4                   	// #4
  429a78:	mov	x0, x21
  429a7c:	bl	404b50 <memchr@plt>
  429a80:	add	x24, x24, #0x1
  429a84:	cbz	x0, 429a68 <wcrtomb@plt+0x24c68>
  429a88:	add	x0, x26, #0x1
  429a8c:	bl	4044d0 <malloc@plt>
  429a90:	cbz	x0, 429c04 <wcrtomb@plt+0x24e04>
  429a94:	mov	x1, x25
  429a98:	mov	x2, x26
  429a9c:	mov	x24, x0
  429aa0:	bl	4040f0 <memcpy@plt>
  429aa4:	sub	x3, x29, #0x50
  429aa8:	mov	x0, x24
  429aac:	mov	w1, w20
  429ab0:	mov	x2, xzr
  429ab4:	strb	wzr, [x24, x26]
  429ab8:	bl	404c10 <glob@plt>
  429abc:	cbz	w0, 429ad8 <wcrtomb@plt+0x24cd8>
  429ac0:	cmp	w0, #0x3
  429ac4:	b.ne	429c34 <wcrtomb@plt+0x24e34>  // b.any
  429ac8:	ldr	w8, [x19, #36]
  429acc:	tbnz	w8, #0, 429b84 <wcrtomb@plt+0x24d84>
  429ad0:	tbz	w8, #1, 429be8 <wcrtomb@plt+0x24de8>
  429ad4:	b	429c70 <wcrtomb@plt+0x24e70>
  429ad8:	mov	x0, x24
  429adc:	bl	4049b0 <free@plt>
  429ae0:	ldur	x8, [x29, #-80]
  429ae4:	cbz	x8, 429b58 <wcrtomb@plt+0x24d58>
  429ae8:	mov	x25, xzr
  429aec:	mov	x24, x23
  429af0:	mov	w0, #0x1                   	// #1
  429af4:	mov	w1, #0x28                  	// #40
  429af8:	bl	404680 <calloc@plt>
  429afc:	cbz	x0, 429b08 <wcrtomb@plt+0x24d08>
  429b00:	mov	x22, x0
  429b04:	b	429b14 <wcrtomb@plt+0x24d14>
  429b08:	mov	x0, x19
  429b0c:	bl	427a7c <wcrtomb@plt+0x22c7c>
  429b10:	cbnz	w0, 429c10 <wcrtomb@plt+0x24e10>
  429b14:	ldur	x8, [x29, #-72]
  429b18:	ldr	x0, [x8, x25, lsl #3]
  429b1c:	bl	404760 <strdup@plt>
  429b20:	cbz	x0, 429bfc <wcrtomb@plt+0x24dfc>
  429b24:	ldr	w8, [x22, #16]
  429b28:	str	x0, [x22, #24]
  429b2c:	mov	x0, x19
  429b30:	mov	x1, x22
  429b34:	orr	w8, w8, #0x6
  429b38:	mov	x2, x24
  429b3c:	str	w8, [x22, #16]
  429b40:	bl	42a378 <wcrtomb@plt+0x25578>
  429b44:	ldur	x8, [x29, #-80]
  429b48:	add	x25, x25, #0x1
  429b4c:	mov	x24, x22
  429b50:	cmp	x8, x25
  429b54:	b.hi	429af0 <wcrtomb@plt+0x24cf0>  // b.pmore
  429b58:	sub	x0, x29, #0x50
  429b5c:	bl	404a60 <globfree@plt>
  429b60:	ldp	x8, x9, [x23]
  429b64:	cbz	x8, 429ba8 <wcrtomb@plt+0x24da8>
  429b68:	str	x9, [x8, #8]
  429b6c:	ldr	x9, [x23, #8]
  429b70:	cbnz	x9, 429bb4 <wcrtomb@plt+0x24db4>
  429b74:	ldr	w9, [x8, #16]
  429b78:	and	w9, w9, #0xffffffef
  429b7c:	str	w9, [x8, #16]
  429b80:	b	429bb0 <wcrtomb@plt+0x24db0>
  429b84:	ldp	x8, x9, [x23]
  429b88:	cbz	x8, 429bcc <wcrtomb@plt+0x24dcc>
  429b8c:	str	x9, [x8, #8]
  429b90:	ldr	x9, [x23, #8]
  429b94:	cbnz	x9, 429bd8 <wcrtomb@plt+0x24dd8>
  429b98:	ldr	w9, [x8, #16]
  429b9c:	and	w9, w9, #0xffffffef
  429ba0:	str	w9, [x8, #16]
  429ba4:	b	429bd4 <wcrtomb@plt+0x24dd4>
  429ba8:	str	x9, [x19, #208]
  429bac:	cbnz	x9, 429bb4 <wcrtomb@plt+0x24db4>
  429bb0:	ldr	x9, [sp, #8]
  429bb4:	mov	x0, x23
  429bb8:	str	x8, [x9]
  429bbc:	stp	xzr, xzr, [x23]
  429bc0:	bl	428b08 <wcrtomb@plt+0x23d08>
  429bc4:	cbnz	x27, 429a28 <wcrtomb@plt+0x24c28>
  429bc8:	b	429bf4 <wcrtomb@plt+0x24df4>
  429bcc:	str	x9, [x19, #208]
  429bd0:	cbnz	x9, 429bd8 <wcrtomb@plt+0x24dd8>
  429bd4:	ldr	x9, [sp, #8]
  429bd8:	mov	x0, x23
  429bdc:	str	x8, [x9]
  429be0:	stp	xzr, xzr, [x23]
  429be4:	bl	428b08 <wcrtomb@plt+0x23d08>
  429be8:	mov	x0, x24
  429bec:	bl	4049b0 <free@plt>
  429bf0:	cbnz	x27, 429a28 <wcrtomb@plt+0x24c28>
  429bf4:	mov	w0, wzr
  429bf8:	b	429c14 <wcrtomb@plt+0x24e14>
  429bfc:	mov	x0, x22
  429c00:	bl	428b08 <wcrtomb@plt+0x23d08>
  429c04:	mov	x0, x19
  429c08:	bl	427a7c <wcrtomb@plt+0x22c7c>
  429c0c:	b	429c14 <wcrtomb@plt+0x24e14>
  429c10:	mov	w0, #0x1                   	// #1
  429c14:	ldp	x20, x19, [sp, #304]
  429c18:	ldp	x22, x21, [sp, #288]
  429c1c:	ldp	x24, x23, [sp, #272]
  429c20:	ldp	x26, x25, [sp, #256]
  429c24:	ldp	x28, x27, [sp, #240]
  429c28:	ldp	x29, x30, [sp, #224]
  429c2c:	add	sp, sp, #0x140
  429c30:	ret
  429c34:	cmp	w0, #0x1
  429c38:	b.ne	429c48 <wcrtomb@plt+0x24e48>  // b.any
  429c3c:	mov	x0, x24
  429c40:	bl	4049b0 <free@plt>
  429c44:	b	429c04 <wcrtomb@plt+0x24e04>
  429c48:	mov	x0, x24
  429c4c:	bl	4049b0 <free@plt>
  429c50:	ldrb	w8, [x19, #32]
  429c54:	mov	w0, #0x8                   	// #8
  429c58:	str	w0, [x19, #192]
  429c5c:	tbz	w8, #4, 429c14 <wcrtomb@plt+0x24e14>
  429c60:	mov	x0, x19
  429c64:	bl	428110 <wcrtomb@plt+0x23310>
  429c68:	mov	w0, #0x8                   	// #8
  429c6c:	b	429c14 <wcrtomb@plt+0x24e14>
  429c70:	ldr	w8, [x19, #192]
  429c74:	cmp	w8, #0x9
  429c78:	b.ne	429c84 <wcrtomb@plt+0x24e84>  // b.any
  429c7c:	ldr	x0, [x19, #200]
  429c80:	bl	4049b0 <free@plt>
  429c84:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  429c88:	add	x1, x1, #0xc7e
  429c8c:	mov	w2, #0x5                   	// #5
  429c90:	mov	x0, xzr
  429c94:	bl	404bd0 <dcgettext@plt>
  429c98:	mov	x4, x0
  429c9c:	add	x0, sp, #0x10
  429ca0:	mov	w1, #0x80                  	// #128
  429ca4:	mov	w2, #0x1                   	// #1
  429ca8:	mov	w3, #0x80                  	// #128
  429cac:	mov	x5, x24
  429cb0:	bl	404440 <__snprintf_chk@plt>
  429cb4:	mov	x0, x24
  429cb8:	bl	4049b0 <free@plt>
  429cbc:	add	x0, sp, #0x10
  429cc0:	bl	404760 <strdup@plt>
  429cc4:	str	x0, [x19, #200]
  429cc8:	cbz	x0, 429c04 <wcrtomb@plt+0x24e04>
  429ccc:	ldrb	w8, [x19, #32]
  429cd0:	mov	w0, #0x9                   	// #9
  429cd4:	str	w0, [x19, #192]
  429cd8:	tbz	w8, #4, 429c14 <wcrtomb@plt+0x24e14>
  429cdc:	mov	x0, x19
  429ce0:	bl	428110 <wcrtomb@plt+0x23310>
  429ce4:	mov	w0, #0x9                   	// #9
  429ce8:	b	429c14 <wcrtomb@plt+0x24e14>
  429cec:	stp	x29, x30, [sp, #-48]!
  429cf0:	stp	x20, x19, [sp, #32]
  429cf4:	mov	x19, x0
  429cf8:	ldr	x0, [x0, #208]
  429cfc:	str	x21, [sp, #16]
  429d00:	mov	x29, sp
  429d04:	cbz	x0, 429d7c <wcrtomb@plt+0x24f7c>
  429d08:	add	x20, x19, #0xd8
  429d0c:	ldr	w8, [x0, #16]
  429d10:	ldr	x21, [x0, #8]
  429d14:	tbz	w8, #6, 429d30 <wcrtomb@plt+0x24f30>
  429d18:	ldr	x9, [x0]
  429d1c:	cbz	x9, 429d30 <wcrtomb@plt+0x24f30>
  429d20:	ldr	w8, [x9, #16]
  429d24:	and	w8, w8, #0xffffffef
  429d28:	str	w8, [x9, #16]
  429d2c:	ldr	w8, [x0, #16]
  429d30:	tbz	w8, #0, 429d74 <wcrtomb@plt+0x24f74>
  429d34:	ldr	x8, [x0]
  429d38:	cbz	x8, 429d58 <wcrtomb@plt+0x24f58>
  429d3c:	str	x21, [x8, #8]
  429d40:	ldr	x9, [x0, #8]
  429d44:	cbnz	x9, 429d68 <wcrtomb@plt+0x24f68>
  429d48:	ldr	w9, [x8, #16]
  429d4c:	and	w9, w9, #0xffffffef
  429d50:	str	w9, [x8, #16]
  429d54:	b	429d64 <wcrtomb@plt+0x24f64>
  429d58:	mov	x9, x21
  429d5c:	str	x21, [x19, #208]
  429d60:	cbnz	x21, 429d68 <wcrtomb@plt+0x24f68>
  429d64:	mov	x9, x20
  429d68:	str	x8, [x9]
  429d6c:	stp	xzr, xzr, [x0]
  429d70:	bl	428b08 <wcrtomb@plt+0x23d08>
  429d74:	mov	x0, x21
  429d78:	cbnz	x21, 429d0c <wcrtomb@plt+0x24f0c>
  429d7c:	ldp	x20, x19, [sp, #32]
  429d80:	ldr	x21, [sp, #16]
  429d84:	ldp	x29, x30, [sp], #48
  429d88:	ret
  429d8c:	sub	sp, sp, #0x70
  429d90:	stp	x29, x30, [sp, #16]
  429d94:	stp	x28, x27, [sp, #32]
  429d98:	stp	x26, x25, [sp, #48]
  429d9c:	stp	x24, x23, [sp, #64]
  429da0:	stp	x22, x21, [sp, #80]
  429da4:	stp	x20, x19, [sp, #96]
  429da8:	ldr	w8, [x1, #16]
  429dac:	mov	x21, x3
  429db0:	mov	x22, x2
  429db4:	mov	x19, x1
  429db8:	mov	x20, x0
  429dbc:	add	x29, sp, #0x10
  429dc0:	tbnz	w8, #0, 429dd8 <wcrtomb@plt+0x24fd8>
  429dc4:	tbnz	w8, #1, 429de4 <wcrtomb@plt+0x24fe4>
  429dc8:	ldr	x8, [x20, #168]
  429dcc:	ldr	x9, [x19, #24]
  429dd0:	add	x26, x8, x9
  429dd4:	b	429de8 <wcrtomb@plt+0x24fe8>
  429dd8:	adrp	x26, 452000 <_obstack_memory_used@@Base+0x16808>
  429ddc:	add	x26, x26, #0x3ee
  429de0:	b	429de8 <wcrtomb@plt+0x24fe8>
  429de4:	ldr	x26, [x19, #24]
  429de8:	mov	x0, x19
  429dec:	bl	428930 <wcrtomb@plt+0x23b30>
  429df0:	cmp	x0, #0x1
  429df4:	stp	x19, x26, [sp]
  429df8:	b.lt	429f1c <wcrtomb@plt+0x2511c>  // b.tstop
  429dfc:	mov	x24, x0
  429e00:	mov	x23, xzr
  429e04:	add	x27, x26, x0
  429e08:	mov	w28, #0x14                  	// #20
  429e0c:	mov	x8, x26
  429e10:	ldrb	w9, [x8]
  429e14:	cmp	w9, #0x24
  429e18:	b.eq	429e30 <wcrtomb@plt+0x25030>  // b.none
  429e1c:	cmp	w9, #0x5c
  429e20:	b.ne	429ec0 <wcrtomb@plt+0x250c0>  // b.any
  429e24:	add	x8, x8, #0x1
  429e28:	str	x8, [sp, #8]
  429e2c:	b	429ec0 <wcrtomb@plt+0x250c0>
  429e30:	ldrb	w0, [x8, #1]
  429e34:	blr	x22
  429e38:	cbz	w0, 429ebc <wcrtomb@plt+0x250bc>
  429e3c:	ldp	x8, x9, [sp]
  429e40:	cmp	x8, x19
  429e44:	sub	x25, x9, x26
  429e48:	b.eq	429e58 <wcrtomb@plt+0x25058>  // b.none
  429e4c:	ldr	w9, [x8, #16]
  429e50:	orr	w9, w9, #0x10
  429e54:	str	w9, [x8, #16]
  429e58:	mov	x1, sp
  429e5c:	mov	w5, #0x10                  	// #16
  429e60:	mov	x0, x20
  429e64:	mov	x2, x19
  429e68:	mov	x3, x23
  429e6c:	mov	x4, x25
  429e70:	bl	42a25c <wcrtomb@plt+0x2545c>
  429e74:	cbnz	w0, 429f14 <wcrtomb@plt+0x25114>
  429e78:	ldr	x8, [sp, #8]
  429e7c:	sub	x2, x24, x25
  429e80:	mov	x3, sp
  429e84:	add	x4, sp, #0x8
  429e88:	add	x1, x8, #0x1
  429e8c:	str	x1, [sp, #8]
  429e90:	ldr	w8, [x19, #16]
  429e94:	mov	x0, x20
  429e98:	and	w5, w8, w28
  429e9c:	blr	x21
  429ea0:	cbnz	w0, 429f14 <wcrtomb@plt+0x25114>
  429ea4:	ldr	x8, [sp, #8]
  429ea8:	sub	x9, x23, x26
  429eac:	add	x9, x9, x8
  429eb0:	add	x23, x9, #0x1
  429eb4:	add	x26, x8, #0x1
  429eb8:	b	429ec0 <wcrtomb@plt+0x250c0>
  429ebc:	ldr	x8, [sp, #8]
  429ec0:	add	x8, x8, #0x1
  429ec4:	cmp	x8, x27
  429ec8:	str	x8, [sp, #8]
  429ecc:	b.cc	429e10 <wcrtomb@plt+0x25010>  // b.lo, b.ul, b.last
  429ed0:	subs	x4, x8, x26
  429ed4:	b.ls	429f1c <wcrtomb@plt+0x2511c>  // b.plast
  429ed8:	ldr	x8, [sp]
  429edc:	cmp	x8, x19
  429ee0:	b.eq	429ef0 <wcrtomb@plt+0x250f0>  // b.none
  429ee4:	ldr	w9, [x8, #16]
  429ee8:	orr	w9, w9, #0x10
  429eec:	str	w9, [x8, #16]
  429ef0:	ldr	w8, [x19, #16]
  429ef4:	mov	w9, #0x14                  	// #20
  429ef8:	mov	x1, sp
  429efc:	mov	x0, x20
  429f00:	and	w5, w8, w9
  429f04:	mov	x2, x19
  429f08:	mov	x3, x23
  429f0c:	bl	42a25c <wcrtomb@plt+0x2545c>
  429f10:	cbz	w0, 429f1c <wcrtomb@plt+0x2511c>
  429f14:	mov	w0, #0x1                   	// #1
  429f18:	b	429f6c <wcrtomb@plt+0x2516c>
  429f1c:	ldr	x8, [sp]
  429f20:	cmp	x8, x19
  429f24:	b.eq	429f68 <wcrtomb@plt+0x25168>  // b.none
  429f28:	ldp	x8, x9, [x19]
  429f2c:	cbz	x8, 429f4c <wcrtomb@plt+0x2514c>
  429f30:	str	x9, [x8, #8]
  429f34:	ldr	x9, [x19, #8]
  429f38:	cbnz	x9, 429f58 <wcrtomb@plt+0x25158>
  429f3c:	ldr	w9, [x8, #16]
  429f40:	and	w9, w9, #0xffffffef
  429f44:	str	w9, [x8, #16]
  429f48:	b	429f54 <wcrtomb@plt+0x25154>
  429f4c:	str	x9, [x20, #208]
  429f50:	cbnz	x9, 429f58 <wcrtomb@plt+0x25158>
  429f54:	add	x9, x20, #0xd8
  429f58:	mov	x0, x19
  429f5c:	str	x8, [x9]
  429f60:	stp	xzr, xzr, [x19]
  429f64:	bl	428b08 <wcrtomb@plt+0x23d08>
  429f68:	mov	w0, wzr
  429f6c:	ldp	x20, x19, [sp, #96]
  429f70:	ldp	x22, x21, [sp, #80]
  429f74:	ldp	x24, x23, [sp, #64]
  429f78:	ldp	x26, x25, [sp, #48]
  429f7c:	ldp	x28, x27, [sp, #32]
  429f80:	ldp	x29, x30, [sp, #16]
  429f84:	add	sp, sp, #0x70
  429f88:	ret
  429f8c:	cmp	w0, #0x28
  429f90:	cset	w0, eq  // eq = none
  429f94:	ret
  429f98:	sub	sp, sp, #0x140
  429f9c:	stp	x29, x30, [sp, #240]
  429fa0:	stp	x24, x23, [sp, #272]
  429fa4:	stp	x22, x21, [sp, #288]
  429fa8:	add	x29, sp, #0xf0
  429fac:	mov	x24, x4
  429fb0:	add	x22, x1, #0x1
  429fb4:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x16808>
  429fb8:	stp	x20, x19, [sp, #304]
  429fbc:	mov	x20, x3
  429fc0:	mov	x19, x0
  429fc4:	sub	x2, x2, #0x1
  429fc8:	add	x4, x4, #0xb69
  429fcc:	add	x3, x29, #0x18
  429fd0:	mov	x0, x22
  429fd4:	mov	x1, xzr
  429fd8:	str	x28, [sp, #256]
  429fdc:	mov	w21, w5
  429fe0:	bl	42929c <wcrtomb@plt+0x2449c>
  429fe4:	cbz	w0, 42a004 <wcrtomb@plt+0x25204>
  429fe8:	ldrb	w8, [x19, #32]
  429fec:	mov	w9, #0x7                   	// #7
  429ff0:	str	w9, [x19, #192]
  429ff4:	tbz	w8, #4, 42a140 <wcrtomb@plt+0x25340>
  429ff8:	mov	x0, x19
  429ffc:	bl	428110 <wcrtomb@plt+0x23310>
  42a000:	b	42a140 <wcrtomb@plt+0x25340>
  42a004:	ldr	x23, [x29, #24]
  42a008:	add	x8, x22, x23
  42a00c:	str	x8, [x24]
  42a010:	ldrb	w8, [x19, #36]
  42a014:	tbnz	w8, #3, 42a054 <wcrtomb@plt+0x25254>
  42a018:	ldp	x4, x8, [x19, #152]
  42a01c:	sub	x0, x29, #0x8
  42a020:	mov	x1, x22
  42a024:	mov	x2, x23
  42a028:	mov	x3, xzr
  42a02c:	blr	x8
  42a030:	mov	w22, w0
  42a034:	cbz	w22, 42a0dc <wcrtomb@plt+0x252dc>
  42a038:	cmp	w22, #0x9
  42a03c:	b.eq	42a118 <wcrtomb@plt+0x25318>  // b.none
  42a040:	cmp	w22, #0x2
  42a044:	b.ne	42a134 <wcrtomb@plt+0x25334>  // b.any
  42a048:	mov	x0, x19
  42a04c:	bl	427a7c <wcrtomb@plt+0x22c7c>
  42a050:	b	42a144 <wcrtomb@plt+0x25344>
  42a054:	mov	x1, sp
  42a058:	mov	w4, #0x700                 	// #1792
  42a05c:	mov	w5, #0x1                   	// #1
  42a060:	mov	x0, x19
  42a064:	mov	x2, x22
  42a068:	mov	w3, w23
  42a06c:	bl	42a3cc <wcrtomb@plt+0x255cc>
  42a070:	cbz	w0, 42a0b4 <wcrtomb@plt+0x252b4>
  42a074:	ldr	w8, [x19, #192]
  42a078:	cmp	w8, #0x9
  42a07c:	b.ne	42a088 <wcrtomb@plt+0x25288>  // b.any
  42a080:	ldr	x0, [x19, #200]
  42a084:	bl	4049b0 <free@plt>
  42a088:	ldr	w8, [sp, #192]
  42a08c:	cmp	w8, #0x9
  42a090:	str	w8, [x19, #192]
  42a094:	b.ne	42a0a8 <wcrtomb@plt+0x252a8>  // b.any
  42a098:	ldr	x8, [sp, #200]
  42a09c:	str	x8, [x19, #200]
  42a0a0:	str	wzr, [sp, #192]
  42a0a4:	str	xzr, [sp, #200]
  42a0a8:	mov	x0, sp
  42a0ac:	bl	42800c <wcrtomb@plt+0x2320c>
  42a0b0:	b	42a140 <wcrtomb@plt+0x25340>
  42a0b4:	ldr	x3, [sp, #8]
  42a0b8:	ldp	x4, x8, [x19, #152]
  42a0bc:	sub	x0, x29, #0x8
  42a0c0:	mov	x1, x22
  42a0c4:	mov	x2, x23
  42a0c8:	blr	x8
  42a0cc:	mov	w22, w0
  42a0d0:	mov	x0, sp
  42a0d4:	bl	42800c <wcrtomb@plt+0x2320c>
  42a0d8:	cbnz	w22, 42a038 <wcrtomb@plt+0x25238>
  42a0dc:	ldur	x22, [x29, #-8]
  42a0e0:	cbz	x22, 42a1ac <wcrtomb@plt+0x253ac>
  42a0e4:	tbnz	w21, #2, 42a160 <wcrtomb@plt+0x25360>
  42a0e8:	ldrb	w8, [x22]
  42a0ec:	cbz	w8, 42a1a4 <wcrtomb@plt+0x253a4>
  42a0f0:	mov	x0, x22
  42a0f4:	bl	404170 <strlen@plt>
  42a0f8:	ldrb	w8, [x19, #33]
  42a0fc:	mov	x3, x0
  42a100:	tbnz	w8, #4, 42a204 <wcrtomb@plt+0x25404>
  42a104:	ldr	w8, [x19, #36]
  42a108:	mov	w4, #0x744                 	// #1860
  42a10c:	lsr	w8, w8, #7
  42a110:	bfi	w4, w8, #12, #1
  42a114:	b	42a208 <wcrtomb@plt+0x25408>
  42a118:	ldr	w8, [x19, #192]
  42a11c:	cmp	w8, #0x9
  42a120:	b.ne	42a12c <wcrtomb@plt+0x2532c>  // b.any
  42a124:	ldr	x0, [x19, #200]
  42a128:	bl	4049b0 <free@plt>
  42a12c:	ldur	x8, [x29, #-8]
  42a130:	str	x8, [x19, #200]
  42a134:	ldrb	w8, [x19, #32]
  42a138:	str	w22, [x19, #192]
  42a13c:	tbnz	w8, #4, 429ff8 <wcrtomb@plt+0x251f8>
  42a140:	mov	w0, #0x1                   	// #1
  42a144:	ldp	x20, x19, [sp, #304]
  42a148:	ldp	x22, x21, [sp, #288]
  42a14c:	ldp	x24, x23, [sp, #272]
  42a150:	ldr	x28, [sp, #256]
  42a154:	ldp	x29, x30, [sp, #240]
  42a158:	add	sp, sp, #0x140
  42a15c:	ret
  42a160:	mov	w0, #0x1                   	// #1
  42a164:	mov	w1, #0x28                  	// #40
  42a168:	bl	404680 <calloc@plt>
  42a16c:	cbz	x0, 42a1f4 <wcrtomb@plt+0x253f4>
  42a170:	mov	x22, x0
  42a174:	ldr	x2, [x20]
  42a178:	mov	x0, x19
  42a17c:	mov	x1, x22
  42a180:	bl	42a378 <wcrtomb@plt+0x25578>
  42a184:	mov	w8, #0xa                   	// #10
  42a188:	orr	w8, w21, w8
  42a18c:	str	x22, [x20]
  42a190:	str	w8, [x22, #16]
  42a194:	ldur	x8, [x29, #-8]
  42a198:	mov	w0, wzr
  42a19c:	str	x8, [x22, #24]
  42a1a0:	b	42a144 <wcrtomb@plt+0x25344>
  42a1a4:	mov	x0, x22
  42a1a8:	bl	4049b0 <free@plt>
  42a1ac:	mov	w0, #0x1                   	// #1
  42a1b0:	mov	w1, #0x28                  	// #40
  42a1b4:	bl	404680 <calloc@plt>
  42a1b8:	cbz	x0, 42a1e4 <wcrtomb@plt+0x253e4>
  42a1bc:	mov	x21, x0
  42a1c0:	ldr	x2, [x20]
  42a1c4:	mov	x0, x19
  42a1c8:	mov	x1, x21
  42a1cc:	bl	42a378 <wcrtomb@plt+0x25578>
  42a1d0:	mov	w0, wzr
  42a1d4:	mov	w8, #0x1                   	// #1
  42a1d8:	str	x21, [x20]
  42a1dc:	str	w8, [x21, #16]
  42a1e0:	b	42a144 <wcrtomb@plt+0x25344>
  42a1e4:	mov	x0, x19
  42a1e8:	bl	427a7c <wcrtomb@plt+0x22c7c>
  42a1ec:	cbnz	w0, 42a140 <wcrtomb@plt+0x25340>
  42a1f0:	b	42a1c0 <wcrtomb@plt+0x253c0>
  42a1f4:	mov	x0, x19
  42a1f8:	bl	427a7c <wcrtomb@plt+0x22c7c>
  42a1fc:	cbnz	w0, 42a140 <wcrtomb@plt+0x25340>
  42a200:	b	42a174 <wcrtomb@plt+0x25374>
  42a204:	mov	w4, #0x1744                	// #5956
  42a208:	mov	x1, sp
  42a20c:	mov	x0, x19
  42a210:	mov	x2, x22
  42a214:	mov	w5, wzr
  42a218:	bl	42a3cc <wcrtomb@plt+0x255cc>
  42a21c:	ldur	x8, [x29, #-8]
  42a220:	mov	w21, w0
  42a224:	mov	x0, x8
  42a228:	bl	4049b0 <free@plt>
  42a22c:	cbnz	w21, 42a074 <wcrtomb@plt+0x25274>
  42a230:	ldr	x1, [sp, #208]
  42a234:	ldr	x2, [x20]
  42a238:	mov	x0, x19
  42a23c:	bl	42a378 <wcrtomb@plt+0x25578>
  42a240:	ldr	x8, [sp, #216]
  42a244:	mov	x0, sp
  42a248:	str	x8, [x20]
  42a24c:	stp	xzr, xzr, [sp, #208]
  42a250:	bl	42800c <wcrtomb@plt+0x2320c>
  42a254:	mov	w0, wzr
  42a258:	b	42a144 <wcrtomb@plt+0x25344>
  42a25c:	stp	x29, x30, [sp, #-80]!
  42a260:	stp	x26, x25, [sp, #16]
  42a264:	stp	x24, x23, [sp, #32]
  42a268:	stp	x22, x21, [sp, #48]
  42a26c:	stp	x20, x19, [sp, #64]
  42a270:	mov	x29, sp
  42a274:	cbz	x4, 42a2d4 <wcrtomb@plt+0x254d4>
  42a278:	mov	x20, x1
  42a27c:	mov	x24, x0
  42a280:	mov	w0, #0x1                   	// #1
  42a284:	mov	w1, #0x28                  	// #40
  42a288:	mov	w19, w5
  42a28c:	mov	x21, x4
  42a290:	mov	x22, x3
  42a294:	mov	x25, x2
  42a298:	bl	404680 <calloc@plt>
  42a29c:	cbz	x0, 42a2dc <wcrtomb@plt+0x254dc>
  42a2a0:	mov	x23, x0
  42a2a4:	ldr	x2, [x20]
  42a2a8:	mov	x0, x24
  42a2ac:	mov	x1, x23
  42a2b0:	bl	42a378 <wcrtomb@plt+0x25578>
  42a2b4:	ldr	w8, [x25, #16]
  42a2b8:	tbnz	w8, #1, 42a2f0 <wcrtomb@plt+0x254f0>
  42a2bc:	ldr	x9, [x25, #24]
  42a2c0:	ldr	w8, [x23, #16]
  42a2c4:	add	x9, x9, x22
  42a2c8:	add	x10, x9, x21
  42a2cc:	stp	x9, x10, [x23, #24]
  42a2d0:	b	42a330 <wcrtomb@plt+0x25530>
  42a2d4:	mov	w0, wzr
  42a2d8:	b	42a340 <wcrtomb@plt+0x25540>
  42a2dc:	mov	x0, x24
  42a2e0:	bl	427a7c <wcrtomb@plt+0x22c7c>
  42a2e4:	cbz	w0, 42a358 <wcrtomb@plt+0x25558>
  42a2e8:	mov	w0, #0x1                   	// #1
  42a2ec:	b	42a340 <wcrtomb@plt+0x25540>
  42a2f0:	tbnz	w8, #0, 42a2fc <wcrtomb@plt+0x254fc>
  42a2f4:	ldr	x26, [x25, #24]
  42a2f8:	b	42a304 <wcrtomb@plt+0x25504>
  42a2fc:	adrp	x26, 452000 <_obstack_memory_used@@Base+0x16808>
  42a300:	add	x26, x26, #0x3ee
  42a304:	add	x0, x21, #0x1
  42a308:	bl	4044d0 <malloc@plt>
  42a30c:	cbz	x0, 42a35c <wcrtomb@plt+0x2555c>
  42a310:	add	x1, x26, x22
  42a314:	mov	x2, x21
  42a318:	mov	x25, x0
  42a31c:	bl	4040f0 <memcpy@plt>
  42a320:	mov	w8, #0x2                   	// #2
  42a324:	strb	wzr, [x25, x21]
  42a328:	str	w8, [x23, #16]
  42a32c:	str	x25, [x23, #24]
  42a330:	mov	w0, wzr
  42a334:	orr	w8, w8, w19
  42a338:	str	w8, [x23, #16]
  42a33c:	str	x23, [x20]
  42a340:	ldp	x20, x19, [sp, #64]
  42a344:	ldp	x22, x21, [sp, #48]
  42a348:	ldp	x24, x23, [sp, #32]
  42a34c:	ldp	x26, x25, [sp, #16]
  42a350:	ldp	x29, x30, [sp], #80
  42a354:	ret
  42a358:	b	42a2a4 <wcrtomb@plt+0x254a4>
  42a35c:	mov	x0, x24
  42a360:	ldp	x20, x19, [sp, #64]
  42a364:	ldp	x22, x21, [sp, #48]
  42a368:	ldp	x24, x23, [sp, #32]
  42a36c:	ldp	x26, x25, [sp, #16]
  42a370:	ldp	x29, x30, [sp], #80
  42a374:	b	427a7c <wcrtomb@plt+0x22c7c>
  42a378:	mov	x8, x0
  42a37c:	ldr	x9, [x8, #208]!
  42a380:	cbz	x9, 42a3bc <wcrtomb@plt+0x255bc>
  42a384:	mov	x8, x1
  42a388:	mov	x9, x8
  42a38c:	cbz	x8, 42a398 <wcrtomb@plt+0x25598>
  42a390:	ldr	x8, [x9, #8]
  42a394:	cbnz	x8, 42a388 <wcrtomb@plt+0x25588>
  42a398:	mov	x8, x2
  42a39c:	ldr	x10, [x8, #8]!
  42a3a0:	add	x11, x0, #0xd8
  42a3a4:	cmp	x10, #0x0
  42a3a8:	csel	x11, x11, x10, eq  // eq = none
  42a3ac:	str	x9, [x11]
  42a3b0:	str	x10, [x9, #8]
  42a3b4:	str	x2, [x1]
  42a3b8:	b	42a3c4 <wcrtomb@plt+0x255c4>
  42a3bc:	stp	xzr, xzr, [x1]
  42a3c0:	str	x1, [x0, #216]
  42a3c4:	str	x1, [x8]
  42a3c8:	ret
  42a3cc:	stp	x29, x30, [sp, #-48]!
  42a3d0:	stp	x22, x21, [sp, #16]
  42a3d4:	stp	x20, x19, [sp, #32]
  42a3d8:	ldr	x8, [x0, #56]
  42a3dc:	mov	w20, w5
  42a3e0:	mov	x9, x2
  42a3e4:	mov	x21, x0
  42a3e8:	str	x8, [x1, #56]
  42a3ec:	ldr	x8, [x0, #104]
  42a3f0:	mov	x19, x1
  42a3f4:	mov	x29, sp
  42a3f8:	str	x8, [x1, #104]
  42a3fc:	ldur	q0, [x0, #88]
  42a400:	stur	q0, [x1, #88]
  42a404:	tbnz	w4, #6, 42a428 <wcrtomb@plt+0x25628>
  42a408:	ldr	x8, [x21, #112]
  42a40c:	mov	w10, #0x8180000             	// #135790592
  42a410:	str	x8, [x19, #112]
  42a414:	ldr	x8, [x21, #144]
  42a418:	str	x8, [x19, #144]
  42a41c:	ldr	w8, [x21, #32]
  42a420:	and	w8, w8, w10
  42a424:	orr	w4, w8, w4
  42a428:	tbnz	w4, #2, 42a434 <wcrtomb@plt+0x25634>
  42a42c:	ldr	x8, [x21, #160]
  42a430:	str	x8, [x19, #160]
  42a434:	mov	w8, #0x44                  	// #68
  42a438:	bics	wzr, w8, w4
  42a43c:	b.ne	42a448 <wcrtomb@plt+0x25648>  // b.any
  42a440:	ldr	w8, [x21, #32]
  42a444:	b	42a45c <wcrtomb@plt+0x2565c>
  42a448:	ldr	x8, [x21, #152]
  42a44c:	str	x8, [x19, #152]
  42a450:	ldr	w8, [x21, #32]
  42a454:	and	w10, w8, #0x4000000
  42a458:	orr	w4, w10, w4
  42a45c:	mov	w11, #0x10                  	// #16
  42a460:	movk	w11, #0x8020, lsl #16
  42a464:	ldr	w10, [x21, #36]
  42a468:	mov	w12, #0x4000                	// #16384
  42a46c:	and	w8, w8, w11
  42a470:	movk	w12, #0x7, lsl #16
  42a474:	orr	w8, w4, w8
  42a478:	orr	w8, w8, w12
  42a47c:	sxtw	x2, w3
  42a480:	mov	x0, x19
  42a484:	mov	x1, x9
  42a488:	mov	w3, w8
  42a48c:	str	w10, [x19, #36]
  42a490:	bl	428518 <wcrtomb@plt+0x23718>
  42a494:	mov	w22, w0
  42a498:	cbnz	w0, 42a508 <wcrtomb@plt+0x25708>
  42a49c:	ldr	w8, [x21, #224]
  42a4a0:	mov	x0, x19
  42a4a4:	mov	x1, xzr
  42a4a8:	add	w8, w8, #0x1
  42a4ac:	str	w8, [x19, #224]
  42a4b0:	bl	4286dc <wcrtomb@plt+0x238dc>
  42a4b4:	cbz	w0, 42a4d8 <wcrtomb@plt+0x256d8>
  42a4b8:	mov	w22, w0
  42a4bc:	ldr	x0, [x19, #208]!
  42a4c0:	cbz	x0, 42a504 <wcrtomb@plt+0x25704>
  42a4c4:	ldr	x20, [x0, #8]
  42a4c8:	bl	428b08 <wcrtomb@plt+0x23d08>
  42a4cc:	mov	x0, x20
  42a4d0:	cbnz	x20, 42a4c4 <wcrtomb@plt+0x256c4>
  42a4d4:	b	42a504 <wcrtomb@plt+0x25704>
  42a4d8:	cbz	w20, 42a51c <wcrtomb@plt+0x2571c>
  42a4dc:	mov	x0, x19
  42a4e0:	bl	4281b8 <wcrtomb@plt+0x233b8>
  42a4e4:	ldr	x8, [x19, #208]!
  42a4e8:	mov	w22, w0
  42a4ec:	cbz	x8, 42a504 <wcrtomb@plt+0x25704>
  42a4f0:	ldr	x20, [x8, #8]
  42a4f4:	mov	x0, x8
  42a4f8:	bl	428b08 <wcrtomb@plt+0x23d08>
  42a4fc:	mov	x8, x20
  42a500:	cbnz	x20, 42a4f0 <wcrtomb@plt+0x256f0>
  42a504:	stp	xzr, xzr, [x19]
  42a508:	mov	w0, w22
  42a50c:	ldp	x20, x19, [sp, #32]
  42a510:	ldp	x22, x21, [sp, #16]
  42a514:	ldp	x29, x30, [sp], #48
  42a518:	ret
  42a51c:	mov	w22, wzr
  42a520:	b	42a508 <wcrtomb@plt+0x25708>
  42a524:	and	w8, w0, #0xffffffdf
  42a528:	cmp	w0, #0x7b
  42a52c:	sub	w8, w8, #0x41
  42a530:	cset	w9, eq  // eq = none
  42a534:	cmp	w8, #0x1a
  42a538:	cset	w8, cc  // cc = lo, ul, last
  42a53c:	cmp	w0, #0x5f
  42a540:	orr	w8, w9, w8
  42a544:	cset	w9, eq  // eq = none
  42a548:	orr	w0, w9, w8
  42a54c:	ret
  42a550:	stp	x29, x30, [sp, #-96]!
  42a554:	stp	x28, x27, [sp, #16]
  42a558:	stp	x26, x25, [sp, #32]
  42a55c:	stp	x24, x23, [sp, #48]
  42a560:	stp	x22, x21, [sp, #64]
  42a564:	stp	x20, x19, [sp, #80]
  42a568:	mov	x29, sp
  42a56c:	sub	sp, sp, #0x200
  42a570:	mov	x23, x1
  42a574:	ldrb	w8, [x23], #-1
  42a578:	mov	w21, w5
  42a57c:	mov	x22, x4
  42a580:	mov	x20, x3
  42a584:	and	w9, w8, #0xffffffdf
  42a588:	sub	w9, w9, #0x41
  42a58c:	and	w9, w9, #0xff
  42a590:	mov	x24, x1
  42a594:	cmp	w9, #0x1a
  42a598:	mov	x19, x0
  42a59c:	b.cc	42a5b0 <wcrtomb@plt+0x257b0>  // b.lo, b.ul, b.last
  42a5a0:	cmp	w8, #0x7b
  42a5a4:	b.eq	42a7e4 <wcrtomb@plt+0x259e4>  // b.none
  42a5a8:	cmp	w8, #0x5f
  42a5ac:	b.ne	42a858 <wcrtomb@plt+0x25a58>  // b.any
  42a5b0:	cmp	x2, #0x2
  42a5b4:	mov	w25, #0x1                   	// #1
  42a5b8:	str	x20, [sp, #24]
  42a5bc:	str	w21, [sp, #20]
  42a5c0:	b.cc	42a604 <wcrtomb@plt+0x25804>  // b.lo, b.ul, b.last
  42a5c4:	ldrb	w8, [x24, x25]
  42a5c8:	and	w9, w8, #0xffffffdf
  42a5cc:	sub	w9, w9, #0x41
  42a5d0:	and	w9, w9, #0xff
  42a5d4:	cmp	w9, #0x1a
  42a5d8:	b.cc	42a5f4 <wcrtomb@plt+0x257f4>  // b.lo, b.ul, b.last
  42a5dc:	cmp	w8, #0x5f
  42a5e0:	b.eq	42a5f4 <wcrtomb@plt+0x257f4>  // b.none
  42a5e4:	sub	w8, w8, #0x30
  42a5e8:	and	w8, w8, #0xff
  42a5ec:	cmp	w8, #0x9
  42a5f0:	b.hi	42a604 <wcrtomb@plt+0x25804>  // b.pmore
  42a5f4:	add	x25, x25, #0x1
  42a5f8:	cmp	x2, x25
  42a5fc:	b.ne	42a5c4 <wcrtomb@plt+0x257c4>  // b.any
  42a600:	mov	x25, x2
  42a604:	add	x8, x24, x25
  42a608:	sub	x8, x8, #0x1
  42a60c:	mov	w27, wzr
  42a610:	mov	x28, xzr
  42a614:	str	x8, [x22]
  42a618:	ldr	w21, [x19, #32]
  42a61c:	tbnz	w21, #19, 42a6e8 <wcrtomb@plt+0x258e8>
  42a620:	tbnz	w21, #20, 42a74c <wcrtomb@plt+0x2594c>
  42a624:	cbz	x28, 42a8bc <wcrtomb@plt+0x25abc>
  42a628:	ldrb	w8, [x28]
  42a62c:	cmp	w8, #0x2d
  42a630:	b.eq	42a644 <wcrtomb@plt+0x25844>  // b.none
  42a634:	cmp	w8, #0x3f
  42a638:	b.eq	42a930 <wcrtomb@plt+0x25b30>  // b.none
  42a63c:	cmp	w8, #0x3d
  42a640:	b.ne	42ab0c <wcrtomb@plt+0x25d0c>  // b.any
  42a644:	ldr	w8, [x22]
  42a648:	ldr	w9, [x19, #32]
  42a64c:	add	x2, x28, #0x1
  42a650:	mov	w10, #0x44                  	// #68
  42a654:	sub	w3, w8, w2
  42a658:	and	w8, w9, w10
  42a65c:	mov	w9, #0x700                 	// #1792
  42a660:	movk	w9, #0x40, lsl #16
  42a664:	orr	w4, w8, w9
  42a668:	sub	x1, x29, #0xf8
  42a66c:	mov	w5, #0x1                   	// #1
  42a670:	mov	x0, x19
  42a674:	bl	42a3cc <wcrtomb@plt+0x255cc>
  42a678:	cbnz	w0, 42af9c <wcrtomb@plt+0x2619c>
  42a67c:	ldur	x8, [x29, #-240]
  42a680:	sub	x0, x29, #0xf8
  42a684:	ldr	x9, [x8]
  42a688:	stur	x9, [x29, #-16]
  42a68c:	str	xzr, [x8]
  42a690:	bl	42800c <wcrtomb@plt+0x2320c>
  42a694:	ldrb	w8, [x28]
  42a698:	cmp	w8, #0x3d
  42a69c:	b.ne	42ae64 <wcrtomb@plt+0x26064>  // b.any
  42a6a0:	ldr	w21, [x19, #32]
  42a6a4:	ldp	x10, x9, [x19, #128]
  42a6a8:	ldur	x26, [x29, #-16]
  42a6ac:	mov	w8, #0x1                   	// #1
  42a6b0:	tst	w21, #0x8000000
  42a6b4:	cinc	x8, x8, ne  // ne = any
  42a6b8:	add	x10, x8, x10
  42a6bc:	cmp	x10, x9
  42a6c0:	b.cc	42ad68 <wcrtomb@plt+0x25f68>  // b.lo, b.ul, b.last
  42a6c4:	ldr	x0, [x19, #120]
  42a6c8:	cbz	x0, 42aca4 <wcrtomb@plt+0x25ea4>
  42a6cc:	lsl	x8, x9, #1
  42a6d0:	lsl	x1, x9, #4
  42a6d4:	str	x8, [x19, #136]
  42a6d8:	bl	404710 <realloc@plt>
  42a6dc:	cbz	x0, 42ae5c <wcrtomb@plt+0x2605c>
  42a6e0:	stp	x0, x0, [x19, #112]
  42a6e4:	b	42ad68 <wcrtomb@plt+0x25f68>
  42a6e8:	ldr	x8, [x19, #112]
  42a6ec:	tbnz	w21, #27, 42a79c <wcrtomb@plt+0x2599c>
  42a6f0:	cbz	x8, 42a620 <wcrtomb@plt+0x25820>
  42a6f4:	ldr	x9, [x8]
  42a6f8:	cbz	x9, 42a620 <wcrtomb@plt+0x25820>
  42a6fc:	mov	x10, xzr
  42a700:	mov	x11, xzr
  42a704:	cbz	x25, 42a728 <wcrtomb@plt+0x25928>
  42a708:	ldrb	w12, [x24, x11]
  42a70c:	ldrb	w13, [x9, x11]
  42a710:	cmp	w12, w13
  42a714:	b.ne	42a728 <wcrtomb@plt+0x25928>  // b.any
  42a718:	add	x11, x11, #0x1
  42a71c:	cmp	x25, x11
  42a720:	b.ne	42a708 <wcrtomb@plt+0x25908>  // b.any
  42a724:	b	42a730 <wcrtomb@plt+0x25930>
  42a728:	cmp	x11, x25
  42a72c:	b.ne	42a73c <wcrtomb@plt+0x2593c>  // b.any
  42a730:	ldrb	w11, [x9, x25]
  42a734:	cmp	w11, #0x3d
  42a738:	b.eq	42aa0c <wcrtomb@plt+0x25c0c>  // b.none
  42a73c:	add	x10, x10, #0x1
  42a740:	ldr	x9, [x8, x10, lsl #3]
  42a744:	cbnz	x9, 42a700 <wcrtomb@plt+0x25900>
  42a748:	b	42a620 <wcrtomb@plt+0x25820>
  42a74c:	ldp	x8, x3, [x19, #144]
  42a750:	sub	x0, x29, #0x10
  42a754:	mov	x1, x24
  42a758:	mov	x2, x25
  42a75c:	blr	x8
  42a760:	mov	w26, w0
  42a764:	cmp	w0, #0x9
  42a768:	b.hi	42a9b4 <wcrtomb@plt+0x25bb4>  // b.pmore
  42a76c:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x16808>
  42a770:	mov	w8, w26
  42a774:	add	x9, x9, #0x930
  42a778:	adr	x10, 42a624 <wcrtomb@plt+0x25824>
  42a77c:	ldrh	w11, [x9, x8, lsl #1]
  42a780:	add	x10, x10, x11, lsl #2
  42a784:	br	x10
  42a788:	ldur	x0, [x29, #-16]
  42a78c:	cbnz	x0, 42aa54 <wcrtomb@plt+0x25c54>
  42a790:	cbz	w27, 42ab10 <wcrtomb@plt+0x25d10>
  42a794:	mov	x0, xzr
  42a798:	b	42aa64 <wcrtomb@plt+0x25c64>
  42a79c:	ldr	x26, [x8]
  42a7a0:	cbz	x26, 42a620 <wcrtomb@plt+0x25820>
  42a7a4:	add	x20, x8, #0x8
  42a7a8:	mov	x0, x26
  42a7ac:	bl	404170 <strlen@plt>
  42a7b0:	cmp	x0, x25
  42a7b4:	b.ne	42a7cc <wcrtomb@plt+0x259cc>  // b.any
  42a7b8:	mov	x0, x26
  42a7bc:	mov	x1, x24
  42a7c0:	mov	x2, x25
  42a7c4:	bl	4046b0 <bcmp@plt>
  42a7c8:	cbz	w0, 42aa40 <wcrtomb@plt+0x25c40>
  42a7cc:	ldr	x8, [x20]
  42a7d0:	cbz	x8, 42a620 <wcrtomb@plt+0x25820>
  42a7d4:	ldr	x26, [x20, #8]
  42a7d8:	add	x20, x20, #0x10
  42a7dc:	cbnz	x26, 42a7a8 <wcrtomb@plt+0x259a8>
  42a7e0:	b	42a620 <wcrtomb@plt+0x25820>
  42a7e4:	sub	x27, x2, #0x1
  42a7e8:	cmp	x27, #0x2
  42a7ec:	add	x26, x24, #0x1
  42a7f0:	str	w21, [sp, #20]
  42a7f4:	str	x20, [sp, #24]
  42a7f8:	b.cc	42a924 <wcrtomb@plt+0x25b24>  // b.lo, b.ul, b.last
  42a7fc:	mov	x8, #0x1                   	// #1
  42a800:	movk	x8, #0x2800, lsl #32
  42a804:	mov	w10, #0x2                   	// #2
  42a808:	movk	x8, #0xa000, lsl #48
  42a80c:	mov	w9, #0x1                   	// #1
  42a810:	sub	x10, x10, x2
  42a814:	mov	w25, #0x1                   	// #1
  42a818:	add	x12, x24, x25
  42a81c:	ldrb	w11, [x12, #1]
  42a820:	cmp	w11, #0x7d
  42a824:	b.eq	42abe8 <wcrtomb@plt+0x25de8>  // b.none
  42a828:	cmp	w11, #0x3a
  42a82c:	b.eq	42abf4 <wcrtomb@plt+0x25df4>  // b.none
  42a830:	cmp	w11, #0x3f
  42a834:	b.hi	42a844 <wcrtomb@plt+0x25a44>  // b.pmore
  42a838:	lsl	x11, x9, x11
  42a83c:	and	x11, x11, x8
  42a840:	cbnz	x11, 42a9dc <wcrtomb@plt+0x25bdc>
  42a844:	add	x25, x25, #0x1
  42a848:	add	x11, x10, x25
  42a84c:	cmp	x11, #0x1
  42a850:	b.ne	42a818 <wcrtomb@plt+0x25a18>  // b.any
  42a854:	b	42ac44 <wcrtomb@plt+0x25e44>
  42a858:	mov	w0, #0x1                   	// #1
  42a85c:	mov	w1, #0x28                  	// #40
  42a860:	bl	404680 <calloc@plt>
  42a864:	cbz	x0, 42a9cc <wcrtomb@plt+0x25bcc>
  42a868:	mov	x23, x0
  42a86c:	ldr	x2, [x20]
  42a870:	mov	x0, x19
  42a874:	mov	x1, x23
  42a878:	bl	42a378 <wcrtomb@plt+0x25578>
  42a87c:	orr	w8, w21, #0x2
  42a880:	mov	w0, #0x3                   	// #3
  42a884:	str	x23, [x20]
  42a888:	str	w8, [x23, #16]
  42a88c:	bl	4044d0 <malloc@plt>
  42a890:	str	x0, [x23, #24]
  42a894:	cbz	x0, 42abc8 <wcrtomb@plt+0x25dc8>
  42a898:	mov	x8, x0
  42a89c:	mov	w9, #0x24                  	// #36
  42a8a0:	strb	w9, [x8]
  42a8a4:	ldrb	w9, [x24]
  42a8a8:	mov	w0, wzr
  42a8ac:	strb	wzr, [x8, #2]
  42a8b0:	strb	w9, [x8, #1]
  42a8b4:	str	x24, [x22]
  42a8b8:	b	42af9c <wcrtomb@plt+0x2619c>
  42a8bc:	mov	x26, x24
  42a8c0:	ldr	w8, [x19, #32]
  42a8c4:	tbnz	w8, #5, 42a914 <wcrtomb@plt+0x25b14>
  42a8c8:	tbz	w8, #24, 42a8f4 <wcrtomb@plt+0x25af4>
  42a8cc:	ldr	x20, [x19, #96]
  42a8d0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42a8d4:	add	x1, x1, #0xc4e
  42a8d8:	mov	w2, #0x5                   	// #5
  42a8dc:	mov	x0, xzr
  42a8e0:	bl	404bd0 <dcgettext@plt>
  42a8e4:	mov	w1, w25
  42a8e8:	mov	x2, x26
  42a8ec:	blr	x20
  42a8f0:	ldr	w8, [x19, #32]
  42a8f4:	tbnz	w8, #23, 42ab0c <wcrtomb@plt+0x25d0c>
  42a8f8:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  42a8fc:	add	x0, x0, #0x3ee
  42a900:	bl	404760 <strdup@plt>
  42a904:	mov	x24, x0
  42a908:	stur	x0, [x29, #-16]
  42a90c:	cbnz	x0, 42ae6c <wcrtomb@plt+0x2606c>
  42a910:	b	42abc8 <wcrtomb@plt+0x25dc8>
  42a914:	mov	w9, #0x5                   	// #5
  42a918:	str	w9, [x19, #192]
  42a91c:	tbnz	w8, #4, 42a9c0 <wcrtomb@plt+0x25bc0>
  42a920:	b	42af98 <wcrtomb@plt+0x26198>
  42a924:	mov	x28, xzr
  42a928:	mov	w25, #0x1                   	// #1
  42a92c:	b	42ac3c <wcrtomb@plt+0x25e3c>
  42a930:	ldr	x8, [x22]
  42a934:	add	x26, x28, #0x1
  42a938:	subs	x27, x8, x26
  42a93c:	b.eq	42aa18 <wcrtomb@plt+0x25c18>  // b.none
  42a940:	ldr	w8, [x19, #32]
  42a944:	mov	w9, #0x44                  	// #68
  42a948:	sub	x1, x29, #0xf8
  42a94c:	mov	w5, #0x1                   	// #1
  42a950:	and	w8, w8, w9
  42a954:	mov	w9, #0x700                 	// #1792
  42a958:	movk	w9, #0x40, lsl #16
  42a95c:	orr	w4, w8, w9
  42a960:	mov	x0, x19
  42a964:	mov	x2, x26
  42a968:	mov	w3, w27
  42a96c:	bl	42a3cc <wcrtomb@plt+0x255cc>
  42a970:	ldr	x8, [x19, #96]
  42a974:	cbz	w0, 42aae8 <wcrtomb@plt+0x25ce8>
  42a978:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  42a97c:	add	x0, x0, #0xc43
  42a980:	mov	w1, w25
  42a984:	mov	x2, x24
  42a988:	mov	w3, w27
  42a98c:	mov	x4, x26
  42a990:	blr	x8
  42a994:	b	42ab04 <wcrtomb@plt+0x25d04>
  42a998:	ldr	w8, [x19, #192]
  42a99c:	cmp	w8, #0x9
  42a9a0:	b.ne	42a9ac <wcrtomb@plt+0x25bac>  // b.any
  42a9a4:	ldr	x0, [x19, #200]
  42a9a8:	bl	4049b0 <free@plt>
  42a9ac:	ldur	x8, [x29, #-16]
  42a9b0:	str	x8, [x19, #200]
  42a9b4:	ldrb	w8, [x19, #32]
  42a9b8:	str	w26, [x19, #192]
  42a9bc:	tbz	w8, #4, 42af98 <wcrtomb@plt+0x26198>
  42a9c0:	mov	x0, x19
  42a9c4:	bl	428110 <wcrtomb@plt+0x23310>
  42a9c8:	b	42af98 <wcrtomb@plt+0x26198>
  42a9cc:	mov	x0, x19
  42a9d0:	bl	427a7c <wcrtomb@plt+0x22c7c>
  42a9d4:	cbnz	w0, 42af98 <wcrtomb@plt+0x26198>
  42a9d8:	b	42a86c <wcrtomb@plt+0x25a6c>
  42a9dc:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x16808>
  42a9e0:	add	x4, x4, #0xb66
  42a9e4:	sub	x3, x29, #0xf8
  42a9e8:	mov	x0, x26
  42a9ec:	mov	x1, x25
  42a9f0:	mov	x2, x27
  42a9f4:	bl	42929c <wcrtomb@plt+0x2449c>
  42a9f8:	cbnz	w0, 42ac14 <wcrtomb@plt+0x25e14>
  42a9fc:	ldur	x8, [x29, #-248]
  42aa00:	add	x9, x24, x25
  42aa04:	add	x28, x9, #0x1
  42aa08:	b	42ac34 <wcrtomb@plt+0x25e34>
  42aa0c:	add	x8, x9, x25
  42aa10:	add	x0, x8, #0x1
  42aa14:	b	42aa48 <wcrtomb@plt+0x25c48>
  42aa18:	ldr	x20, [x19, #96]
  42aa1c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42aa20:	add	x1, x1, #0xc1b
  42aa24:	mov	w2, #0x5                   	// #5
  42aa28:	mov	x0, xzr
  42aa2c:	bl	404bd0 <dcgettext@plt>
  42aa30:	mov	w1, w25
  42aa34:	mov	x2, x24
  42aa38:	blr	x20
  42aa3c:	b	42ab0c <wcrtomb@plt+0x25d0c>
  42aa40:	ldr	x0, [x20]
  42aa44:	cbz	x0, 42a624 <wcrtomb@plt+0x25824>
  42aa48:	bl	404760 <strdup@plt>
  42aa4c:	stur	x0, [x29, #-16]
  42aa50:	cbz	x0, 42abc8 <wcrtomb@plt+0x25dc8>
  42aa54:	ldrb	w8, [x0]
  42aa58:	cbnz	w8, 42aa78 <wcrtomb@plt+0x25c78>
  42aa5c:	eor	w9, w27, #0x1
  42aa60:	tbnz	w9, #0, 42aa78 <wcrtomb@plt+0x25c78>
  42aa64:	ldurb	w8, [x28, #-1]
  42aa68:	cmp	w8, #0x3a
  42aa6c:	b.ne	42aa80 <wcrtomb@plt+0x25c80>  // b.any
  42aa70:	bl	4049b0 <free@plt>
  42aa74:	b	42a628 <wcrtomb@plt+0x25828>
  42aa78:	cbz	x28, 42ae64 <wcrtomb@plt+0x26064>
  42aa7c:	cbz	w8, 42ae64 <wcrtomb@plt+0x26064>
  42aa80:	ldrb	w8, [x28]
  42aa84:	cmp	w8, #0x2b
  42aa88:	b.ne	42ae64 <wcrtomb@plt+0x26064>  // b.any
  42aa8c:	ldr	w8, [x22]
  42aa90:	ldr	w9, [x19, #32]
  42aa94:	add	x2, x28, #0x1
  42aa98:	mov	w10, #0x44                  	// #68
  42aa9c:	sub	w3, w8, w2
  42aaa0:	and	w8, w9, w10
  42aaa4:	mov	w9, #0x700                 	// #1792
  42aaa8:	movk	w9, #0x40, lsl #16
  42aaac:	orr	w4, w8, w9
  42aab0:	sub	x1, x29, #0xf8
  42aab4:	mov	w5, #0x1                   	// #1
  42aab8:	mov	x0, x19
  42aabc:	bl	42a3cc <wcrtomb@plt+0x255cc>
  42aac0:	cbnz	w0, 42af9c <wcrtomb@plt+0x2619c>
  42aac4:	ldur	x0, [x29, #-16]
  42aac8:	bl	4049b0 <free@plt>
  42aacc:	ldur	x8, [x29, #-240]
  42aad0:	sub	x0, x29, #0xf8
  42aad4:	ldr	x9, [x8]
  42aad8:	stur	x9, [x29, #-16]
  42aadc:	str	xzr, [x8]
  42aae0:	bl	42800c <wcrtomb@plt+0x2320c>
  42aae4:	b	42ae64 <wcrtomb@plt+0x26064>
  42aae8:	ldur	x9, [x29, #-240]
  42aaec:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  42aaf0:	add	x0, x0, #0xc3a
  42aaf4:	mov	w1, w25
  42aaf8:	ldr	x3, [x9]
  42aafc:	mov	x2, x24
  42ab00:	blr	x8
  42ab04:	sub	x0, x29, #0xf8
  42ab08:	bl	42800c <wcrtomb@plt+0x2320c>
  42ab0c:	stur	xzr, [x29, #-16]
  42ab10:	ldrb	w8, [x19, #34]
  42ab14:	tbnz	w8, #7, 42ab54 <wcrtomb@plt+0x25d54>
  42ab18:	mov	w0, #0x1                   	// #1
  42ab1c:	mov	w1, #0x28                  	// #40
  42ab20:	bl	404680 <calloc@plt>
  42ab24:	ldr	x20, [sp, #24]
  42ab28:	cbz	x0, 42af08 <wcrtomb@plt+0x26108>
  42ab2c:	mov	x21, x0
  42ab30:	ldr	x2, [x20]
  42ab34:	mov	x0, x19
  42ab38:	mov	x1, x21
  42ab3c:	bl	42a378 <wcrtomb@plt+0x25578>
  42ab40:	mov	w0, wzr
  42ab44:	mov	w8, #0x1                   	// #1
  42ab48:	str	x21, [x20]
  42ab4c:	str	w8, [x21, #16]
  42ab50:	b	42af9c <wcrtomb@plt+0x2619c>
  42ab54:	ldr	x20, [x22]
  42ab58:	mov	w0, #0x1                   	// #1
  42ab5c:	mov	w1, #0x28                  	// #40
  42ab60:	bl	404680 <calloc@plt>
  42ab64:	ldr	x21, [sp, #24]
  42ab68:	cbz	x0, 42abd4 <wcrtomb@plt+0x25dd4>
  42ab6c:	ldr	w24, [sp, #20]
  42ab70:	mov	x22, x0
  42ab74:	ldr	x2, [x21]
  42ab78:	mov	x0, x19
  42ab7c:	mov	x1, x22
  42ab80:	sub	x20, x20, x23
  42ab84:	bl	42a378 <wcrtomb@plt+0x25578>
  42ab88:	mov	w8, #0xa                   	// #10
  42ab8c:	orr	w8, w24, w8
  42ab90:	add	x0, x20, #0x2
  42ab94:	str	x22, [x21]
  42ab98:	str	w8, [x22, #16]
  42ab9c:	bl	4044d0 <malloc@plt>
  42aba0:	str	x0, [x22, #24]
  42aba4:	cbz	x0, 42abc8 <wcrtomb@plt+0x25dc8>
  42aba8:	add	x19, x20, #0x1
  42abac:	mov	x1, x23
  42abb0:	mov	x2, x19
  42abb4:	bl	4040f0 <memcpy@plt>
  42abb8:	ldr	x8, [x22, #24]
  42abbc:	mov	w0, wzr
  42abc0:	strb	wzr, [x8, x19]
  42abc4:	b	42af9c <wcrtomb@plt+0x2619c>
  42abc8:	mov	x0, x19
  42abcc:	bl	427a7c <wcrtomb@plt+0x22c7c>
  42abd0:	b	42af9c <wcrtomb@plt+0x2619c>
  42abd4:	mov	x0, x19
  42abd8:	bl	427a7c <wcrtomb@plt+0x22c7c>
  42abdc:	ldr	w24, [sp, #20]
  42abe0:	cbnz	w0, 42af98 <wcrtomb@plt+0x26198>
  42abe4:	b	42ab74 <wcrtomb@plt+0x25d74>
  42abe8:	mov	x28, xzr
  42abec:	add	x8, x12, #0x1
  42abf0:	b	42ac38 <wcrtomb@plt+0x25e38>
  42abf4:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x16808>
  42abf8:	add	x1, x25, #0x1
  42abfc:	add	x4, x4, #0xb66
  42ac00:	sub	x3, x29, #0xf8
  42ac04:	mov	x0, x26
  42ac08:	mov	x2, x27
  42ac0c:	bl	42929c <wcrtomb@plt+0x2449c>
  42ac10:	cbz	w0, 42ac28 <wcrtomb@plt+0x25e28>
  42ac14:	ldrb	w8, [x19, #32]
  42ac18:	mov	w9, #0x4                   	// #4
  42ac1c:	str	w9, [x19, #192]
  42ac20:	tbnz	w8, #4, 42ac54 <wcrtomb@plt+0x25e54>
  42ac24:	b	42ac5c <wcrtomb@plt+0x25e5c>
  42ac28:	ldur	x8, [x29, #-248]
  42ac2c:	add	x9, x24, x25
  42ac30:	add	x28, x9, #0x2
  42ac34:	add	x8, x26, x8
  42ac38:	str	x8, [x22]
  42ac3c:	cmp	x25, x27
  42ac40:	b.ne	42ac64 <wcrtomb@plt+0x25e64>  // b.any
  42ac44:	ldrb	w8, [x19, #32]
  42ac48:	mov	w0, #0x4                   	// #4
  42ac4c:	str	w0, [x19, #192]
  42ac50:	tbz	w8, #4, 42af9c <wcrtomb@plt+0x2619c>
  42ac54:	mov	x0, x19
  42ac58:	bl	428110 <wcrtomb@plt+0x23310>
  42ac5c:	mov	w0, #0x4                   	// #4
  42ac60:	b	42af9c <wcrtomb@plt+0x2619c>
  42ac64:	cbz	x28, 42ac98 <wcrtomb@plt+0x25e98>
  42ac68:	ldrb	w8, [x28]
  42ac6c:	cmp	x8, #0x3f
  42ac70:	b.hi	42a8c0 <wcrtomb@plt+0x25ac0>  // b.pmore
  42ac74:	mov	x9, #0x1                   	// #1
  42ac78:	mov	w27, #0x1                   	// #1
  42ac7c:	movk	x9, #0x2800, lsl #32
  42ac80:	lsl	x8, x27, x8
  42ac84:	movk	x9, #0xa000, lsl #48
  42ac88:	and	x8, x8, x9
  42ac8c:	mov	x24, x26
  42ac90:	cbnz	x8, 42a618 <wcrtomb@plt+0x25818>
  42ac94:	b	42a8c0 <wcrtomb@plt+0x25ac0>
  42ac98:	mov	w27, wzr
  42ac9c:	mov	x24, x26
  42aca0:	b	42a618 <wcrtomb@plt+0x25818>
  42aca4:	tbnz	w21, #19, 42acd4 <wcrtomb@plt+0x25ed4>
  42aca8:	mov	w0, #0x10                  	// #16
  42acac:	mov	w1, #0x8                   	// #8
  42acb0:	bl	404680 <calloc@plt>
  42acb4:	cbz	x0, 42ae5c <wcrtomb@plt+0x2605c>
  42acb8:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  42acbc:	ldr	q0, [x8, #2336]
  42acc0:	orr	w8, w21, #0x80000
  42acc4:	stp	x0, x0, [x19, #112]
  42acc8:	str	w8, [x19, #32]
  42accc:	str	q0, [x19, #128]
  42acd0:	b	42ad68 <wcrtomb@plt+0x25f68>
  42acd4:	ldr	x28, [x19, #112]
  42acd8:	cbz	x28, 42acf4 <wcrtomb@plt+0x25ef4>
  42acdc:	mov	x9, xzr
  42ace0:	ldr	x10, [x28, x9, lsl #3]
  42ace4:	add	x9, x9, #0x1
  42ace8:	cbnz	x10, 42ace0 <wcrtomb@plt+0x25ee0>
  42acec:	sub	x21, x9, #0x1
  42acf0:	b	42acf8 <wcrtomb@plt+0x25ef8>
  42acf4:	mov	x21, xzr
  42acf8:	add	x8, x8, x21
  42acfc:	add	x20, x8, #0x1
  42ad00:	mov	w1, #0x8                   	// #8
  42ad04:	mov	x0, x20
  42ad08:	bl	404680 <calloc@plt>
  42ad0c:	cbz	x0, 42ae5c <wcrtomb@plt+0x2605c>
  42ad10:	mov	x27, x0
  42ad14:	str	x20, [sp, #8]
  42ad18:	cbz	x21, 42ad58 <wcrtomb@plt+0x25f58>
  42ad1c:	ldr	x0, [x28]
  42ad20:	bl	404760 <strdup@plt>
  42ad24:	str	x0, [x27]
  42ad28:	cbz	x0, 42ae34 <wcrtomb@plt+0x26034>
  42ad2c:	mov	w20, #0x1                   	// #1
  42ad30:	cmp	x21, x20
  42ad34:	b.eq	42ad58 <wcrtomb@plt+0x25f58>  // b.none
  42ad38:	ldr	x8, [x19, #112]
  42ad3c:	ldr	x0, [x8, x20, lsl #3]
  42ad40:	bl	404760 <strdup@plt>
  42ad44:	str	x0, [x27, x20, lsl #3]
  42ad48:	add	x20, x20, #0x1
  42ad4c:	cbnz	x0, 42ad30 <wcrtomb@plt+0x25f30>
  42ad50:	sub	x8, x20, #0x1
  42ad54:	b	42ae38 <wcrtomb@plt+0x26038>
  42ad58:	ldr	x8, [sp, #8]
  42ad5c:	str	xzr, [x27, x21, lsl #3]
  42ad60:	stp	x27, x27, [x19, #112]
  42ad64:	stp	x21, x8, [x19, #128]
  42ad68:	ldrb	w8, [x19, #35]
  42ad6c:	tbnz	w8, #3, 42adc4 <wcrtomb@plt+0x25fc4>
  42ad70:	mov	x0, x26
  42ad74:	bl	404170 <strlen@plt>
  42ad78:	add	x8, x25, x0
  42ad7c:	add	x0, x8, #0x2
  42ad80:	bl	4044d0 <malloc@plt>
  42ad84:	cbz	x0, 42ae5c <wcrtomb@plt+0x2605c>
  42ad88:	mov	x1, x24
  42ad8c:	mov	x2, x25
  42ad90:	mov	x27, x0
  42ad94:	bl	4040f0 <memcpy@plt>
  42ad98:	add	x0, x27, x25
  42ad9c:	mov	w8, #0x3d                  	// #61
  42ada0:	strb	w8, [x0], #1
  42ada4:	mov	x1, x26
  42ada8:	bl	404b00 <strcpy@plt>
  42adac:	ldr	x9, [x19, #128]
  42adb0:	ldr	x10, [x19, #112]
  42adb4:	add	x8, x9, #0x1
  42adb8:	add	x9, x10, x9, lsl #3
  42adbc:	str	x8, [x19, #128]
  42adc0:	b	42ae14 <wcrtomb@plt+0x26014>
  42adc4:	add	x0, x25, #0x1
  42adc8:	bl	4044d0 <malloc@plt>
  42adcc:	cbz	x0, 42ae5c <wcrtomb@plt+0x2605c>
  42add0:	mov	x1, x24
  42add4:	mov	x2, x25
  42add8:	mov	x28, x0
  42addc:	bl	4040f0 <memcpy@plt>
  42ade0:	mov	x0, x26
  42ade4:	strb	wzr, [x28, x25]
  42ade8:	bl	404760 <strdup@plt>
  42adec:	cbz	x0, 42ae2c <wcrtomb@plt+0x2602c>
  42adf0:	ldr	x8, [x19, #112]
  42adf4:	ldr	x9, [x19, #128]
  42adf8:	mov	x27, x0
  42adfc:	str	x28, [x8, x9, lsl #3]
  42ae00:	ldr	x10, [x19, #112]
  42ae04:	add	x8, x9, #0x2
  42ae08:	str	x8, [x19, #128]
  42ae0c:	add	x9, x10, x9, lsl #3
  42ae10:	add	x9, x9, #0x8
  42ae14:	str	x27, [x9]
  42ae18:	ldr	x9, [x19, #112]
  42ae1c:	add	x10, x8, #0x1
  42ae20:	str	x10, [x19, #128]
  42ae24:	str	xzr, [x9, x8, lsl #3]
  42ae28:	b	42ae64 <wcrtomb@plt+0x26064>
  42ae2c:	mov	x0, x28
  42ae30:	b	42ae58 <wcrtomb@plt+0x26058>
  42ae34:	mov	x8, xzr
  42ae38:	sub	x20, x8, #0x1
  42ae3c:	ldr	x0, [x27, x20, lsl #3]
  42ae40:	bl	4049b0 <free@plt>
  42ae44:	add	x8, x20, #0x1
  42ae48:	sub	x20, x20, #0x1
  42ae4c:	cmp	x8, #0x1
  42ae50:	b.hi	42ae3c <wcrtomb@plt+0x2603c>  // b.pmore
  42ae54:	mov	x0, x27
  42ae58:	bl	4049b0 <free@plt>
  42ae5c:	mov	x0, x19
  42ae60:	bl	427a7c <wcrtomb@plt+0x22c7c>
  42ae64:	ldur	x24, [x29, #-16]
  42ae68:	cbz	x24, 42ab10 <wcrtomb@plt+0x25d10>
  42ae6c:	ldr	w21, [sp, #20]
  42ae70:	tbnz	w21, #2, 42aea8 <wcrtomb@plt+0x260a8>
  42ae74:	ldrb	w8, [x24]
  42ae78:	ldr	x20, [sp, #24]
  42ae7c:	cbz	w8, 42aef0 <wcrtomb@plt+0x260f0>
  42ae80:	mov	x0, x24
  42ae84:	bl	404170 <strlen@plt>
  42ae88:	ldrb	w8, [x19, #33]
  42ae8c:	mov	x3, x0
  42ae90:	tbnz	w8, #4, 42af30 <wcrtomb@plt+0x26130>
  42ae94:	ldr	w8, [x19, #36]
  42ae98:	mov	w4, #0x644                 	// #1604
  42ae9c:	lsr	w8, w8, #7
  42aea0:	bfi	w4, w8, #12, #1
  42aea4:	b	42af34 <wcrtomb@plt+0x26134>
  42aea8:	mov	w0, #0x1                   	// #1
  42aeac:	mov	w1, #0x28                  	// #40
  42aeb0:	bl	404680 <calloc@plt>
  42aeb4:	ldr	x20, [sp, #24]
  42aeb8:	cbz	x0, 42af18 <wcrtomb@plt+0x26118>
  42aebc:	mov	x22, x0
  42aec0:	ldr	x2, [x20]
  42aec4:	mov	x0, x19
  42aec8:	mov	x1, x22
  42aecc:	bl	42a378 <wcrtomb@plt+0x25578>
  42aed0:	mov	w8, #0xa                   	// #10
  42aed4:	orr	w8, w21, w8
  42aed8:	str	x22, [x20]
  42aedc:	str	w8, [x22, #16]
  42aee0:	ldur	x8, [x29, #-16]
  42aee4:	mov	w0, wzr
  42aee8:	str	x8, [x22, #24]
  42aeec:	b	42af9c <wcrtomb@plt+0x2619c>
  42aef0:	mov	x0, x24
  42aef4:	bl	4049b0 <free@plt>
  42aef8:	mov	w0, #0x1                   	// #1
  42aefc:	mov	w1, #0x28                  	// #40
  42af00:	bl	404680 <calloc@plt>
  42af04:	cbnz	x0, 42ab2c <wcrtomb@plt+0x25d2c>
  42af08:	mov	x0, x19
  42af0c:	bl	427a7c <wcrtomb@plt+0x22c7c>
  42af10:	cbnz	w0, 42af98 <wcrtomb@plt+0x26198>
  42af14:	b	42ab30 <wcrtomb@plt+0x25d30>
  42af18:	mov	x0, x19
  42af1c:	bl	427a7c <wcrtomb@plt+0x22c7c>
  42af20:	cbz	w0, 42afe8 <wcrtomb@plt+0x261e8>
  42af24:	ldur	x0, [x29, #-16]
  42af28:	bl	4049b0 <free@plt>
  42af2c:	b	42af98 <wcrtomb@plt+0x26198>
  42af30:	mov	w4, #0x1644                	// #5700
  42af34:	add	x1, sp, #0x20
  42af38:	mov	x0, x19
  42af3c:	mov	x2, x24
  42af40:	mov	w5, wzr
  42af44:	bl	42a3cc <wcrtomb@plt+0x255cc>
  42af48:	ldur	x8, [x29, #-16]
  42af4c:	mov	w21, w0
  42af50:	mov	x0, x8
  42af54:	bl	4049b0 <free@plt>
  42af58:	cbz	w21, 42afbc <wcrtomb@plt+0x261bc>
  42af5c:	ldr	w8, [x19, #192]
  42af60:	cmp	w8, #0x9
  42af64:	b.ne	42af70 <wcrtomb@plt+0x26170>  // b.any
  42af68:	ldr	x0, [x19, #200]
  42af6c:	bl	4049b0 <free@plt>
  42af70:	ldr	w8, [sp, #224]
  42af74:	cmp	w8, #0x9
  42af78:	str	w8, [x19, #192]
  42af7c:	b.ne	42af90 <wcrtomb@plt+0x26190>  // b.any
  42af80:	ldr	x8, [sp, #232]
  42af84:	str	x8, [x19, #200]
  42af88:	str	wzr, [sp, #224]
  42af8c:	str	xzr, [sp, #232]
  42af90:	add	x0, sp, #0x20
  42af94:	bl	42800c <wcrtomb@plt+0x2320c>
  42af98:	mov	w0, #0x1                   	// #1
  42af9c:	add	sp, sp, #0x200
  42afa0:	ldp	x20, x19, [sp, #80]
  42afa4:	ldp	x22, x21, [sp, #64]
  42afa8:	ldp	x24, x23, [sp, #48]
  42afac:	ldp	x26, x25, [sp, #32]
  42afb0:	ldp	x28, x27, [sp, #16]
  42afb4:	ldp	x29, x30, [sp], #96
  42afb8:	ret
  42afbc:	ldr	x1, [sp, #240]
  42afc0:	ldr	x2, [x20]
  42afc4:	mov	x0, x19
  42afc8:	bl	42a378 <wcrtomb@plt+0x25578>
  42afcc:	ldr	x8, [sp, #248]
  42afd0:	add	x0, sp, #0x20
  42afd4:	str	x8, [x20]
  42afd8:	stp	xzr, xzr, [sp, #240]
  42afdc:	bl	42800c <wcrtomb@plt+0x2320c>
  42afe0:	mov	w0, wzr
  42afe4:	b	42af9c <wcrtomb@plt+0x2619c>
  42afe8:	b	42aec0 <wcrtomb@plt+0x260c0>
  42afec:	stp	x29, x30, [sp, #-80]!
  42aff0:	stp	x20, x19, [sp, #64]
  42aff4:	cmp	w3, #0x1
  42aff8:	mov	x19, x0
  42affc:	stp	x26, x25, [sp, #16]
  42b000:	stp	x24, x23, [sp, #32]
  42b004:	stp	x22, x21, [sp, #48]
  42b008:	mov	x29, sp
  42b00c:	b.lt	42b08c <wcrtomb@plt+0x2628c>  // b.tstop
  42b010:	adrp	x23, 452000 <_obstack_memory_used@@Base+0x16808>
  42b014:	mov	w21, w2
  42b018:	mov	x22, x1
  42b01c:	mov	x20, xzr
  42b020:	mov	w25, wzr
  42b024:	mov	w26, w3
  42b028:	add	x23, x23, #0xc71
  42b02c:	ldrsb	w8, [x22, x20]
  42b030:	tbnz	w8, #31, 42b094 <wcrtomb@plt+0x26294>
  42b034:	and	w24, w8, #0xff
  42b038:	sub	w8, w24, #0x30
  42b03c:	cmp	w8, #0x9
  42b040:	b.ls	42b06c <wcrtomb@plt+0x2626c>  // b.plast
  42b044:	mov	w2, #0xd                   	// #13
  42b048:	mov	x0, x23
  42b04c:	mov	w1, w24
  42b050:	bl	404b50 <memchr@plt>
  42b054:	cbz	x0, 42b068 <wcrtomb@plt+0x26268>
  42b058:	mov	w0, w24
  42b05c:	bl	4044e0 <toupper@plt>
  42b060:	sub	w8, w0, #0x37
  42b064:	b	42b06c <wcrtomb@plt+0x2626c>
  42b068:	mov	w8, #0xff                  	// #255
  42b06c:	cmp	w8, w21
  42b070:	b.ge	42b094 <wcrtomb@plt+0x26294>  // b.tcont
  42b074:	add	x20, x20, #0x1
  42b078:	cmp	w26, w20
  42b07c:	madd	w25, w25, w21, w8
  42b080:	b.ne	42b02c <wcrtomb@plt+0x2622c>  // b.any
  42b084:	mov	w20, w26
  42b088:	b	42b094 <wcrtomb@plt+0x26294>
  42b08c:	mov	w25, wzr
  42b090:	mov	w20, wzr
  42b094:	str	w25, [x19]
  42b098:	mov	w0, w20
  42b09c:	ldp	x20, x19, [sp, #64]
  42b0a0:	ldp	x22, x21, [sp, #48]
  42b0a4:	ldp	x24, x23, [sp, #32]
  42b0a8:	ldp	x26, x25, [sp, #16]
  42b0ac:	ldp	x29, x30, [sp], #80
  42b0b0:	ret
  42b0b4:	stp	x29, x30, [sp, #-96]!
  42b0b8:	stp	x28, x27, [sp, #16]
  42b0bc:	stp	x26, x25, [sp, #32]
  42b0c0:	stp	x24, x23, [sp, #48]
  42b0c4:	stp	x22, x21, [sp, #64]
  42b0c8:	stp	x20, x19, [sp, #80]
  42b0cc:	mov	x29, sp
  42b0d0:	sub	sp, sp, #0xfd0
  42b0d4:	mov	w19, w5
  42b0d8:	mov	x20, x4
  42b0dc:	mov	x21, x3
  42b0e0:	mov	x22, x2
  42b0e4:	cmn	w0, #0x64
  42b0e8:	mov	x24, x1
  42b0ec:	b.eq	42b0fc <wcrtomb@plt+0x262fc>  // b.none
  42b0f0:	ldrb	w8, [x24]
  42b0f4:	cmp	w8, #0x2f
  42b0f8:	b.ne	42b130 <wcrtomb@plt+0x26330>  // b.any
  42b0fc:	mov	x0, x24
  42b100:	mov	x1, x22
  42b104:	mov	x2, x21
  42b108:	mov	x3, x20
  42b10c:	mov	w4, w19
  42b110:	add	sp, sp, #0xfd0
  42b114:	ldp	x20, x19, [sp, #80]
  42b118:	ldp	x22, x21, [sp, #64]
  42b11c:	ldp	x24, x23, [sp, #48]
  42b120:	ldp	x26, x25, [sp, #32]
  42b124:	ldp	x28, x27, [sp, #16]
  42b128:	ldp	x29, x30, [sp], #96
  42b12c:	b	4045b0 <setxattr@plt>
  42b130:	mov	w25, w0
  42b134:	add	x0, sp, #0x8
  42b138:	mov	w1, w25
  42b13c:	mov	x2, x24
  42b140:	bl	43b86c <_obstack_memory_used@@Base+0x74>
  42b144:	cbz	x0, 42b1bc <wcrtomb@plt+0x263bc>
  42b148:	mov	x1, x22
  42b14c:	mov	x2, x21
  42b150:	mov	x3, x20
  42b154:	mov	w4, w19
  42b158:	mov	x27, x0
  42b15c:	bl	4045b0 <setxattr@plt>
  42b160:	add	x28, sp, #0x8
  42b164:	mov	w23, w0
  42b168:	bl	404ce0 <__errno_location@plt>
  42b16c:	ldr	w10, [x0]
  42b170:	mov	x26, x0
  42b174:	cmp	x27, x28
  42b178:	b.eq	42b18c <wcrtomb@plt+0x2638c>  // b.none
  42b17c:	mov	x0, x27
  42b180:	mov	w27, w10
  42b184:	bl	4049b0 <free@plt>
  42b188:	mov	w10, w27
  42b18c:	cmn	w23, #0x1
  42b190:	b.ne	42b218 <wcrtomb@plt+0x26418>  // b.any
  42b194:	cmp	w10, #0x26
  42b198:	b.hi	42b268 <wcrtomb@plt+0x26468>  // b.pmore
  42b19c:	mov	w8, w10
  42b1a0:	mov	w9, #0x1                   	// #1
  42b1a4:	lsl	x8, x9, x8
  42b1a8:	mov	x9, #0x2006                	// #8198
  42b1ac:	movk	x9, #0x10, lsl #16
  42b1b0:	movk	x9, #0x40, lsl #32
  42b1b4:	tst	x8, x9
  42b1b8:	b.eq	42b268 <wcrtomb@plt+0x26468>  // b.none
  42b1bc:	add	x0, sp, #0x8
  42b1c0:	bl	439ecc <argp_parse@@Base+0xb210>
  42b1c4:	cbnz	w0, 42b2a4 <wcrtomb@plt+0x264a4>
  42b1c8:	tbnz	w25, #31, 42b1f0 <wcrtomb@plt+0x263f0>
  42b1cc:	ldr	w8, [sp, #8]
  42b1d0:	cmp	w8, w25
  42b1d4:	b.ne	42b1f0 <wcrtomb@plt+0x263f0>  // b.any
  42b1d8:	add	x0, sp, #0x8
  42b1dc:	bl	439f3c <argp_parse@@Base+0xb280>
  42b1e0:	bl	404ce0 <__errno_location@plt>
  42b1e4:	mov	w8, #0x9                   	// #9
  42b1e8:	str	w8, [x0]
  42b1ec:	b	42b214 <wcrtomb@plt+0x26414>
  42b1f0:	mov	w0, w25
  42b1f4:	bl	4041e0 <fchdir@plt>
  42b1f8:	cbz	w0, 42b23c <wcrtomb@plt+0x2643c>
  42b1fc:	bl	404ce0 <__errno_location@plt>
  42b200:	ldr	w20, [x0]
  42b204:	mov	x19, x0
  42b208:	add	x0, sp, #0x8
  42b20c:	bl	439f3c <argp_parse@@Base+0xb280>
  42b210:	str	w20, [x19]
  42b214:	mov	w23, #0xffffffff            	// #-1
  42b218:	mov	w0, w23
  42b21c:	add	sp, sp, #0xfd0
  42b220:	ldp	x20, x19, [sp, #80]
  42b224:	ldp	x22, x21, [sp, #64]
  42b228:	ldp	x24, x23, [sp, #48]
  42b22c:	ldp	x26, x25, [sp, #32]
  42b230:	ldp	x28, x27, [sp, #16]
  42b234:	ldp	x29, x30, [sp], #96
  42b238:	ret
  42b23c:	mov	x0, x24
  42b240:	mov	x1, x22
  42b244:	mov	x2, x21
  42b248:	mov	x3, x20
  42b24c:	mov	w4, w19
  42b250:	bl	4045b0 <setxattr@plt>
  42b254:	mov	w23, w0
  42b258:	cmn	w0, #0x1
  42b25c:	b.eq	42b278 <wcrtomb@plt+0x26478>  // b.none
  42b260:	mov	w19, wzr
  42b264:	b	42b280 <wcrtomb@plt+0x26480>
  42b268:	cmp	w10, #0x5f
  42b26c:	b.eq	42b1bc <wcrtomb@plt+0x263bc>  // b.none
  42b270:	str	w10, [x26]
  42b274:	b	42b218 <wcrtomb@plt+0x26418>
  42b278:	bl	404ce0 <__errno_location@plt>
  42b27c:	ldr	w19, [x0]
  42b280:	add	x0, sp, #0x8
  42b284:	bl	439f24 <argp_parse@@Base+0xb268>
  42b288:	cbnz	w0, 42b2b0 <wcrtomb@plt+0x264b0>
  42b28c:	add	x0, sp, #0x8
  42b290:	bl	439f3c <argp_parse@@Base+0xb280>
  42b294:	cbz	w19, 42b218 <wcrtomb@plt+0x26418>
  42b298:	bl	404ce0 <__errno_location@plt>
  42b29c:	str	w19, [x0]
  42b2a0:	b	42b218 <wcrtomb@plt+0x26418>
  42b2a4:	bl	404ce0 <__errno_location@plt>
  42b2a8:	ldr	w0, [x0]
  42b2ac:	bl	43497c <argp_parse@@Base+0x5cc0>
  42b2b0:	bl	404ce0 <__errno_location@plt>
  42b2b4:	ldr	w0, [x0]
  42b2b8:	bl	4349bc <argp_parse@@Base+0x5d00>
  42b2bc:	stp	x29, x30, [sp, #-96]!
  42b2c0:	stp	x28, x27, [sp, #16]
  42b2c4:	stp	x26, x25, [sp, #32]
  42b2c8:	stp	x24, x23, [sp, #48]
  42b2cc:	stp	x22, x21, [sp, #64]
  42b2d0:	stp	x20, x19, [sp, #80]
  42b2d4:	mov	x29, sp
  42b2d8:	sub	sp, sp, #0xfd0
  42b2dc:	mov	w19, w5
  42b2e0:	mov	x20, x4
  42b2e4:	mov	x21, x3
  42b2e8:	mov	x22, x2
  42b2ec:	cmn	w0, #0x64
  42b2f0:	mov	x24, x1
  42b2f4:	b.eq	42b304 <wcrtomb@plt+0x26504>  // b.none
  42b2f8:	ldrb	w8, [x24]
  42b2fc:	cmp	w8, #0x2f
  42b300:	b.ne	42b338 <wcrtomb@plt+0x26538>  // b.any
  42b304:	mov	x0, x24
  42b308:	mov	x1, x22
  42b30c:	mov	x2, x21
  42b310:	mov	x3, x20
  42b314:	mov	w4, w19
  42b318:	add	sp, sp, #0xfd0
  42b31c:	ldp	x20, x19, [sp, #80]
  42b320:	ldp	x22, x21, [sp, #64]
  42b324:	ldp	x24, x23, [sp, #48]
  42b328:	ldp	x26, x25, [sp, #32]
  42b32c:	ldp	x28, x27, [sp, #16]
  42b330:	ldp	x29, x30, [sp], #96
  42b334:	b	404690 <lsetxattr@plt>
  42b338:	mov	w25, w0
  42b33c:	add	x0, sp, #0x8
  42b340:	mov	w1, w25
  42b344:	mov	x2, x24
  42b348:	bl	43b86c <_obstack_memory_used@@Base+0x74>
  42b34c:	cbz	x0, 42b3c4 <wcrtomb@plt+0x265c4>
  42b350:	mov	x1, x22
  42b354:	mov	x2, x21
  42b358:	mov	x3, x20
  42b35c:	mov	w4, w19
  42b360:	mov	x27, x0
  42b364:	bl	404690 <lsetxattr@plt>
  42b368:	add	x28, sp, #0x8
  42b36c:	mov	w23, w0
  42b370:	bl	404ce0 <__errno_location@plt>
  42b374:	ldr	w10, [x0]
  42b378:	mov	x26, x0
  42b37c:	cmp	x27, x28
  42b380:	b.eq	42b394 <wcrtomb@plt+0x26594>  // b.none
  42b384:	mov	x0, x27
  42b388:	mov	w27, w10
  42b38c:	bl	4049b0 <free@plt>
  42b390:	mov	w10, w27
  42b394:	cmn	w23, #0x1
  42b398:	b.ne	42b420 <wcrtomb@plt+0x26620>  // b.any
  42b39c:	cmp	w10, #0x26
  42b3a0:	b.hi	42b470 <wcrtomb@plt+0x26670>  // b.pmore
  42b3a4:	mov	w8, w10
  42b3a8:	mov	w9, #0x1                   	// #1
  42b3ac:	lsl	x8, x9, x8
  42b3b0:	mov	x9, #0x2006                	// #8198
  42b3b4:	movk	x9, #0x10, lsl #16
  42b3b8:	movk	x9, #0x40, lsl #32
  42b3bc:	tst	x8, x9
  42b3c0:	b.eq	42b470 <wcrtomb@plt+0x26670>  // b.none
  42b3c4:	add	x0, sp, #0x8
  42b3c8:	bl	439ecc <argp_parse@@Base+0xb210>
  42b3cc:	cbnz	w0, 42b4ac <wcrtomb@plt+0x266ac>
  42b3d0:	tbnz	w25, #31, 42b3f8 <wcrtomb@plt+0x265f8>
  42b3d4:	ldr	w8, [sp, #8]
  42b3d8:	cmp	w8, w25
  42b3dc:	b.ne	42b3f8 <wcrtomb@plt+0x265f8>  // b.any
  42b3e0:	add	x0, sp, #0x8
  42b3e4:	bl	439f3c <argp_parse@@Base+0xb280>
  42b3e8:	bl	404ce0 <__errno_location@plt>
  42b3ec:	mov	w8, #0x9                   	// #9
  42b3f0:	str	w8, [x0]
  42b3f4:	b	42b41c <wcrtomb@plt+0x2661c>
  42b3f8:	mov	w0, w25
  42b3fc:	bl	4041e0 <fchdir@plt>
  42b400:	cbz	w0, 42b444 <wcrtomb@plt+0x26644>
  42b404:	bl	404ce0 <__errno_location@plt>
  42b408:	ldr	w20, [x0]
  42b40c:	mov	x19, x0
  42b410:	add	x0, sp, #0x8
  42b414:	bl	439f3c <argp_parse@@Base+0xb280>
  42b418:	str	w20, [x19]
  42b41c:	mov	w23, #0xffffffff            	// #-1
  42b420:	mov	w0, w23
  42b424:	add	sp, sp, #0xfd0
  42b428:	ldp	x20, x19, [sp, #80]
  42b42c:	ldp	x22, x21, [sp, #64]
  42b430:	ldp	x24, x23, [sp, #48]
  42b434:	ldp	x26, x25, [sp, #32]
  42b438:	ldp	x28, x27, [sp, #16]
  42b43c:	ldp	x29, x30, [sp], #96
  42b440:	ret
  42b444:	mov	x0, x24
  42b448:	mov	x1, x22
  42b44c:	mov	x2, x21
  42b450:	mov	x3, x20
  42b454:	mov	w4, w19
  42b458:	bl	404690 <lsetxattr@plt>
  42b45c:	mov	w23, w0
  42b460:	cmn	w0, #0x1
  42b464:	b.eq	42b480 <wcrtomb@plt+0x26680>  // b.none
  42b468:	mov	w19, wzr
  42b46c:	b	42b488 <wcrtomb@plt+0x26688>
  42b470:	cmp	w10, #0x5f
  42b474:	b.eq	42b3c4 <wcrtomb@plt+0x265c4>  // b.none
  42b478:	str	w10, [x26]
  42b47c:	b	42b420 <wcrtomb@plt+0x26620>
  42b480:	bl	404ce0 <__errno_location@plt>
  42b484:	ldr	w19, [x0]
  42b488:	add	x0, sp, #0x8
  42b48c:	bl	439f24 <argp_parse@@Base+0xb268>
  42b490:	cbnz	w0, 42b4b8 <wcrtomb@plt+0x266b8>
  42b494:	add	x0, sp, #0x8
  42b498:	bl	439f3c <argp_parse@@Base+0xb280>
  42b49c:	cbz	w19, 42b420 <wcrtomb@plt+0x26620>
  42b4a0:	bl	404ce0 <__errno_location@plt>
  42b4a4:	str	w19, [x0]
  42b4a8:	b	42b420 <wcrtomb@plt+0x26620>
  42b4ac:	bl	404ce0 <__errno_location@plt>
  42b4b0:	ldr	w0, [x0]
  42b4b4:	bl	43497c <argp_parse@@Base+0x5cc0>
  42b4b8:	bl	404ce0 <__errno_location@plt>
  42b4bc:	ldr	w0, [x0]
  42b4c0:	bl	4349bc <argp_parse@@Base+0x5d00>
  42b4c4:	stp	x29, x30, [sp, #-96]!
  42b4c8:	stp	x28, x27, [sp, #16]
  42b4cc:	stp	x26, x25, [sp, #32]
  42b4d0:	stp	x24, x23, [sp, #48]
  42b4d4:	stp	x22, x21, [sp, #64]
  42b4d8:	stp	x20, x19, [sp, #80]
  42b4dc:	mov	x29, sp
  42b4e0:	sub	sp, sp, #0xfd0
  42b4e4:	mov	x19, x4
  42b4e8:	mov	x20, x3
  42b4ec:	mov	x22, x2
  42b4f0:	cmn	w0, #0x64
  42b4f4:	mov	x23, x1
  42b4f8:	b.eq	42b508 <wcrtomb@plt+0x26708>  // b.none
  42b4fc:	ldrb	w8, [x23]
  42b500:	cmp	w8, #0x2f
  42b504:	b.ne	42b538 <wcrtomb@plt+0x26738>  // b.any
  42b508:	mov	x0, x23
  42b50c:	mov	x1, x22
  42b510:	mov	x2, x20
  42b514:	mov	x3, x19
  42b518:	add	sp, sp, #0xfd0
  42b51c:	ldp	x20, x19, [sp, #80]
  42b520:	ldp	x22, x21, [sp, #64]
  42b524:	ldp	x24, x23, [sp, #48]
  42b528:	ldp	x26, x25, [sp, #32]
  42b52c:	ldp	x28, x27, [sp, #16]
  42b530:	ldp	x29, x30, [sp], #96
  42b534:	b	4048b0 <getxattr@plt>
  42b538:	mov	w24, w0
  42b53c:	add	x0, sp, #0x8
  42b540:	mov	w1, w24
  42b544:	mov	x2, x23
  42b548:	add	x28, sp, #0x8
  42b54c:	bl	43b86c <_obstack_memory_used@@Base+0x74>
  42b550:	cbz	x0, 42b5b8 <wcrtomb@plt+0x267b8>
  42b554:	mov	x1, x22
  42b558:	mov	x2, x20
  42b55c:	mov	x3, x19
  42b560:	mov	x26, x0
  42b564:	bl	4048b0 <getxattr@plt>
  42b568:	mov	x21, x0
  42b56c:	bl	404ce0 <__errno_location@plt>
  42b570:	ldr	w27, [x0]
  42b574:	mov	x25, x0
  42b578:	cmp	x26, x28
  42b57c:	b.eq	42b588 <wcrtomb@plt+0x26788>  // b.none
  42b580:	mov	x0, x26
  42b584:	bl	4049b0 <free@plt>
  42b588:	cmn	x21, #0x1
  42b58c:	b.ne	42b614 <wcrtomb@plt+0x26814>  // b.any
  42b590:	cmp	w27, #0x26
  42b594:	b.hi	42b660 <wcrtomb@plt+0x26860>  // b.pmore
  42b598:	mov	w8, w27
  42b59c:	mov	w9, #0x1                   	// #1
  42b5a0:	lsl	x8, x9, x8
  42b5a4:	mov	x9, #0x2006                	// #8198
  42b5a8:	movk	x9, #0x10, lsl #16
  42b5ac:	movk	x9, #0x40, lsl #32
  42b5b0:	tst	x8, x9
  42b5b4:	b.eq	42b660 <wcrtomb@plt+0x26860>  // b.none
  42b5b8:	add	x0, sp, #0x8
  42b5bc:	bl	439ecc <argp_parse@@Base+0xb210>
  42b5c0:	cbnz	w0, 42b69c <wcrtomb@plt+0x2689c>
  42b5c4:	tbnz	w24, #31, 42b5ec <wcrtomb@plt+0x267ec>
  42b5c8:	ldr	w8, [sp, #8]
  42b5cc:	cmp	w8, w24
  42b5d0:	b.ne	42b5ec <wcrtomb@plt+0x267ec>  // b.any
  42b5d4:	add	x0, sp, #0x8
  42b5d8:	bl	439f3c <argp_parse@@Base+0xb280>
  42b5dc:	bl	404ce0 <__errno_location@plt>
  42b5e0:	mov	w8, #0x9                   	// #9
  42b5e4:	str	w8, [x0]
  42b5e8:	b	42b610 <wcrtomb@plt+0x26810>
  42b5ec:	mov	w0, w24
  42b5f0:	bl	4041e0 <fchdir@plt>
  42b5f4:	cbz	w0, 42b638 <wcrtomb@plt+0x26838>
  42b5f8:	bl	404ce0 <__errno_location@plt>
  42b5fc:	ldr	w20, [x0]
  42b600:	mov	x19, x0
  42b604:	add	x0, sp, #0x8
  42b608:	bl	439f3c <argp_parse@@Base+0xb280>
  42b60c:	str	w20, [x19]
  42b610:	mov	x21, #0xffffffffffffffff    	// #-1
  42b614:	mov	x0, x21
  42b618:	add	sp, sp, #0xfd0
  42b61c:	ldp	x20, x19, [sp, #80]
  42b620:	ldp	x22, x21, [sp, #64]
  42b624:	ldp	x24, x23, [sp, #48]
  42b628:	ldp	x26, x25, [sp, #32]
  42b62c:	ldp	x28, x27, [sp, #16]
  42b630:	ldp	x29, x30, [sp], #96
  42b634:	ret
  42b638:	mov	x0, x23
  42b63c:	mov	x1, x22
  42b640:	mov	x2, x20
  42b644:	mov	x3, x19
  42b648:	bl	4048b0 <getxattr@plt>
  42b64c:	mov	x21, x0
  42b650:	cmn	x0, #0x1
  42b654:	b.eq	42b670 <wcrtomb@plt+0x26870>  // b.none
  42b658:	mov	w19, wzr
  42b65c:	b	42b678 <wcrtomb@plt+0x26878>
  42b660:	cmp	w27, #0x5f
  42b664:	b.eq	42b5b8 <wcrtomb@plt+0x267b8>  // b.none
  42b668:	str	w27, [x25]
  42b66c:	b	42b614 <wcrtomb@plt+0x26814>
  42b670:	bl	404ce0 <__errno_location@plt>
  42b674:	ldr	w19, [x0]
  42b678:	add	x0, sp, #0x8
  42b67c:	bl	439f24 <argp_parse@@Base+0xb268>
  42b680:	cbnz	w0, 42b6a8 <wcrtomb@plt+0x268a8>
  42b684:	add	x0, sp, #0x8
  42b688:	bl	439f3c <argp_parse@@Base+0xb280>
  42b68c:	cbz	w19, 42b614 <wcrtomb@plt+0x26814>
  42b690:	bl	404ce0 <__errno_location@plt>
  42b694:	str	w19, [x0]
  42b698:	b	42b614 <wcrtomb@plt+0x26814>
  42b69c:	bl	404ce0 <__errno_location@plt>
  42b6a0:	ldr	w0, [x0]
  42b6a4:	bl	43497c <argp_parse@@Base+0x5cc0>
  42b6a8:	bl	404ce0 <__errno_location@plt>
  42b6ac:	ldr	w0, [x0]
  42b6b0:	bl	4349bc <argp_parse@@Base+0x5d00>
  42b6b4:	stp	x29, x30, [sp, #-96]!
  42b6b8:	stp	x28, x27, [sp, #16]
  42b6bc:	stp	x26, x25, [sp, #32]
  42b6c0:	stp	x24, x23, [sp, #48]
  42b6c4:	stp	x22, x21, [sp, #64]
  42b6c8:	stp	x20, x19, [sp, #80]
  42b6cc:	mov	x29, sp
  42b6d0:	sub	sp, sp, #0xfd0
  42b6d4:	mov	x19, x4
  42b6d8:	mov	x20, x3
  42b6dc:	mov	x22, x2
  42b6e0:	cmn	w0, #0x64
  42b6e4:	mov	x23, x1
  42b6e8:	b.eq	42b6f8 <wcrtomb@plt+0x268f8>  // b.none
  42b6ec:	ldrb	w8, [x23]
  42b6f0:	cmp	w8, #0x2f
  42b6f4:	b.ne	42b728 <wcrtomb@plt+0x26928>  // b.any
  42b6f8:	mov	x0, x23
  42b6fc:	mov	x1, x22
  42b700:	mov	x2, x20
  42b704:	mov	x3, x19
  42b708:	add	sp, sp, #0xfd0
  42b70c:	ldp	x20, x19, [sp, #80]
  42b710:	ldp	x22, x21, [sp, #64]
  42b714:	ldp	x24, x23, [sp, #48]
  42b718:	ldp	x26, x25, [sp, #32]
  42b71c:	ldp	x28, x27, [sp, #16]
  42b720:	ldp	x29, x30, [sp], #96
  42b724:	b	404750 <lgetxattr@plt>
  42b728:	mov	w24, w0
  42b72c:	add	x0, sp, #0x8
  42b730:	mov	w1, w24
  42b734:	mov	x2, x23
  42b738:	add	x28, sp, #0x8
  42b73c:	bl	43b86c <_obstack_memory_used@@Base+0x74>
  42b740:	cbz	x0, 42b7a8 <wcrtomb@plt+0x269a8>
  42b744:	mov	x1, x22
  42b748:	mov	x2, x20
  42b74c:	mov	x3, x19
  42b750:	mov	x26, x0
  42b754:	bl	404750 <lgetxattr@plt>
  42b758:	mov	x21, x0
  42b75c:	bl	404ce0 <__errno_location@plt>
  42b760:	ldr	w27, [x0]
  42b764:	mov	x25, x0
  42b768:	cmp	x26, x28
  42b76c:	b.eq	42b778 <wcrtomb@plt+0x26978>  // b.none
  42b770:	mov	x0, x26
  42b774:	bl	4049b0 <free@plt>
  42b778:	cmn	x21, #0x1
  42b77c:	b.ne	42b804 <wcrtomb@plt+0x26a04>  // b.any
  42b780:	cmp	w27, #0x26
  42b784:	b.hi	42b850 <wcrtomb@plt+0x26a50>  // b.pmore
  42b788:	mov	w8, w27
  42b78c:	mov	w9, #0x1                   	// #1
  42b790:	lsl	x8, x9, x8
  42b794:	mov	x9, #0x2006                	// #8198
  42b798:	movk	x9, #0x10, lsl #16
  42b79c:	movk	x9, #0x40, lsl #32
  42b7a0:	tst	x8, x9
  42b7a4:	b.eq	42b850 <wcrtomb@plt+0x26a50>  // b.none
  42b7a8:	add	x0, sp, #0x8
  42b7ac:	bl	439ecc <argp_parse@@Base+0xb210>
  42b7b0:	cbnz	w0, 42b88c <wcrtomb@plt+0x26a8c>
  42b7b4:	tbnz	w24, #31, 42b7dc <wcrtomb@plt+0x269dc>
  42b7b8:	ldr	w8, [sp, #8]
  42b7bc:	cmp	w8, w24
  42b7c0:	b.ne	42b7dc <wcrtomb@plt+0x269dc>  // b.any
  42b7c4:	add	x0, sp, #0x8
  42b7c8:	bl	439f3c <argp_parse@@Base+0xb280>
  42b7cc:	bl	404ce0 <__errno_location@plt>
  42b7d0:	mov	w8, #0x9                   	// #9
  42b7d4:	str	w8, [x0]
  42b7d8:	b	42b800 <wcrtomb@plt+0x26a00>
  42b7dc:	mov	w0, w24
  42b7e0:	bl	4041e0 <fchdir@plt>
  42b7e4:	cbz	w0, 42b828 <wcrtomb@plt+0x26a28>
  42b7e8:	bl	404ce0 <__errno_location@plt>
  42b7ec:	ldr	w20, [x0]
  42b7f0:	mov	x19, x0
  42b7f4:	add	x0, sp, #0x8
  42b7f8:	bl	439f3c <argp_parse@@Base+0xb280>
  42b7fc:	str	w20, [x19]
  42b800:	mov	x21, #0xffffffffffffffff    	// #-1
  42b804:	mov	x0, x21
  42b808:	add	sp, sp, #0xfd0
  42b80c:	ldp	x20, x19, [sp, #80]
  42b810:	ldp	x22, x21, [sp, #64]
  42b814:	ldp	x24, x23, [sp, #48]
  42b818:	ldp	x26, x25, [sp, #32]
  42b81c:	ldp	x28, x27, [sp, #16]
  42b820:	ldp	x29, x30, [sp], #96
  42b824:	ret
  42b828:	mov	x0, x23
  42b82c:	mov	x1, x22
  42b830:	mov	x2, x20
  42b834:	mov	x3, x19
  42b838:	bl	404750 <lgetxattr@plt>
  42b83c:	mov	x21, x0
  42b840:	cmn	x0, #0x1
  42b844:	b.eq	42b860 <wcrtomb@plt+0x26a60>  // b.none
  42b848:	mov	w19, wzr
  42b84c:	b	42b868 <wcrtomb@plt+0x26a68>
  42b850:	cmp	w27, #0x5f
  42b854:	b.eq	42b7a8 <wcrtomb@plt+0x269a8>  // b.none
  42b858:	str	w27, [x25]
  42b85c:	b	42b804 <wcrtomb@plt+0x26a04>
  42b860:	bl	404ce0 <__errno_location@plt>
  42b864:	ldr	w19, [x0]
  42b868:	add	x0, sp, #0x8
  42b86c:	bl	439f24 <argp_parse@@Base+0xb268>
  42b870:	cbnz	w0, 42b898 <wcrtomb@plt+0x26a98>
  42b874:	add	x0, sp, #0x8
  42b878:	bl	439f3c <argp_parse@@Base+0xb280>
  42b87c:	cbz	w19, 42b804 <wcrtomb@plt+0x26a04>
  42b880:	bl	404ce0 <__errno_location@plt>
  42b884:	str	w19, [x0]
  42b888:	b	42b804 <wcrtomb@plt+0x26a04>
  42b88c:	bl	404ce0 <__errno_location@plt>
  42b890:	ldr	w0, [x0]
  42b894:	bl	43497c <argp_parse@@Base+0x5cc0>
  42b898:	bl	404ce0 <__errno_location@plt>
  42b89c:	ldr	w0, [x0]
  42b8a0:	bl	4349bc <argp_parse@@Base+0x5d00>
  42b8a4:	stp	x29, x30, [sp, #-96]!
  42b8a8:	stp	x28, x27, [sp, #16]
  42b8ac:	stp	x26, x25, [sp, #32]
  42b8b0:	stp	x24, x23, [sp, #48]
  42b8b4:	stp	x22, x21, [sp, #64]
  42b8b8:	stp	x20, x19, [sp, #80]
  42b8bc:	mov	x29, sp
  42b8c0:	sub	sp, sp, #0xfc0
  42b8c4:	mov	x19, x3
  42b8c8:	mov	x21, x2
  42b8cc:	cmn	w0, #0x64
  42b8d0:	mov	x22, x1
  42b8d4:	b.eq	42b8e4 <wcrtomb@plt+0x26ae4>  // b.none
  42b8d8:	ldrb	w8, [x22]
  42b8dc:	cmp	w8, #0x2f
  42b8e0:	b.ne	42b910 <wcrtomb@plt+0x26b10>  // b.any
  42b8e4:	mov	x0, x22
  42b8e8:	mov	x1, x21
  42b8ec:	mov	x2, x19
  42b8f0:	add	sp, sp, #0xfc0
  42b8f4:	ldp	x20, x19, [sp, #80]
  42b8f8:	ldp	x22, x21, [sp, #64]
  42b8fc:	ldp	x24, x23, [sp, #48]
  42b900:	ldp	x26, x25, [sp, #32]
  42b904:	ldp	x28, x27, [sp, #16]
  42b908:	ldp	x29, x30, [sp], #96
  42b90c:	b	4046a0 <listxattr@plt>
  42b910:	mov	w23, w0
  42b914:	mov	x0, sp
  42b918:	mov	w1, w23
  42b91c:	mov	x2, x22
  42b920:	mov	x27, sp
  42b924:	bl	43b86c <_obstack_memory_used@@Base+0x74>
  42b928:	cbz	x0, 42b98c <wcrtomb@plt+0x26b8c>
  42b92c:	mov	x1, x21
  42b930:	mov	x2, x19
  42b934:	mov	x25, x0
  42b938:	bl	4046a0 <listxattr@plt>
  42b93c:	mov	x20, x0
  42b940:	bl	404ce0 <__errno_location@plt>
  42b944:	ldr	w26, [x0]
  42b948:	mov	x24, x0
  42b94c:	cmp	x25, x27
  42b950:	b.eq	42b95c <wcrtomb@plt+0x26b5c>  // b.none
  42b954:	mov	x0, x25
  42b958:	bl	4049b0 <free@plt>
  42b95c:	cmn	x20, #0x1
  42b960:	b.ne	42b9e8 <wcrtomb@plt+0x26be8>  // b.any
  42b964:	cmp	w26, #0x26
  42b968:	b.hi	42ba30 <wcrtomb@plt+0x26c30>  // b.pmore
  42b96c:	mov	w8, w26
  42b970:	mov	w9, #0x1                   	// #1
  42b974:	lsl	x8, x9, x8
  42b978:	mov	x9, #0x2006                	// #8198
  42b97c:	movk	x9, #0x10, lsl #16
  42b980:	movk	x9, #0x40, lsl #32
  42b984:	tst	x8, x9
  42b988:	b.eq	42ba30 <wcrtomb@plt+0x26c30>  // b.none
  42b98c:	mov	x0, sp
  42b990:	bl	439ecc <argp_parse@@Base+0xb210>
  42b994:	cbnz	w0, 42ba6c <wcrtomb@plt+0x26c6c>
  42b998:	tbnz	w23, #31, 42b9c0 <wcrtomb@plt+0x26bc0>
  42b99c:	ldr	w8, [sp]
  42b9a0:	cmp	w8, w23
  42b9a4:	b.ne	42b9c0 <wcrtomb@plt+0x26bc0>  // b.any
  42b9a8:	mov	x0, sp
  42b9ac:	bl	439f3c <argp_parse@@Base+0xb280>
  42b9b0:	bl	404ce0 <__errno_location@plt>
  42b9b4:	mov	w8, #0x9                   	// #9
  42b9b8:	str	w8, [x0]
  42b9bc:	b	42b9e4 <wcrtomb@plt+0x26be4>
  42b9c0:	mov	w0, w23
  42b9c4:	bl	4041e0 <fchdir@plt>
  42b9c8:	cbz	w0, 42ba0c <wcrtomb@plt+0x26c0c>
  42b9cc:	bl	404ce0 <__errno_location@plt>
  42b9d0:	ldr	w20, [x0]
  42b9d4:	mov	x19, x0
  42b9d8:	mov	x0, sp
  42b9dc:	bl	439f3c <argp_parse@@Base+0xb280>
  42b9e0:	str	w20, [x19]
  42b9e4:	mov	x20, #0xffffffffffffffff    	// #-1
  42b9e8:	mov	x0, x20
  42b9ec:	add	sp, sp, #0xfc0
  42b9f0:	ldp	x20, x19, [sp, #80]
  42b9f4:	ldp	x22, x21, [sp, #64]
  42b9f8:	ldp	x24, x23, [sp, #48]
  42b9fc:	ldp	x26, x25, [sp, #32]
  42ba00:	ldp	x28, x27, [sp, #16]
  42ba04:	ldp	x29, x30, [sp], #96
  42ba08:	ret
  42ba0c:	mov	x0, x22
  42ba10:	mov	x1, x21
  42ba14:	mov	x2, x19
  42ba18:	bl	4046a0 <listxattr@plt>
  42ba1c:	mov	x20, x0
  42ba20:	cmn	x0, #0x1
  42ba24:	b.eq	42ba40 <wcrtomb@plt+0x26c40>  // b.none
  42ba28:	mov	w19, wzr
  42ba2c:	b	42ba48 <wcrtomb@plt+0x26c48>
  42ba30:	cmp	w26, #0x5f
  42ba34:	b.eq	42b98c <wcrtomb@plt+0x26b8c>  // b.none
  42ba38:	str	w26, [x24]
  42ba3c:	b	42b9e8 <wcrtomb@plt+0x26be8>
  42ba40:	bl	404ce0 <__errno_location@plt>
  42ba44:	ldr	w19, [x0]
  42ba48:	mov	x0, sp
  42ba4c:	bl	439f24 <argp_parse@@Base+0xb268>
  42ba50:	cbnz	w0, 42ba78 <wcrtomb@plt+0x26c78>
  42ba54:	mov	x0, sp
  42ba58:	bl	439f3c <argp_parse@@Base+0xb280>
  42ba5c:	cbz	w19, 42b9e8 <wcrtomb@plt+0x26be8>
  42ba60:	bl	404ce0 <__errno_location@plt>
  42ba64:	str	w19, [x0]
  42ba68:	b	42b9e8 <wcrtomb@plt+0x26be8>
  42ba6c:	bl	404ce0 <__errno_location@plt>
  42ba70:	ldr	w0, [x0]
  42ba74:	bl	43497c <argp_parse@@Base+0x5cc0>
  42ba78:	bl	404ce0 <__errno_location@plt>
  42ba7c:	ldr	w0, [x0]
  42ba80:	bl	4349bc <argp_parse@@Base+0x5d00>
  42ba84:	stp	x29, x30, [sp, #-96]!
  42ba88:	stp	x28, x27, [sp, #16]
  42ba8c:	stp	x26, x25, [sp, #32]
  42ba90:	stp	x24, x23, [sp, #48]
  42ba94:	stp	x22, x21, [sp, #64]
  42ba98:	stp	x20, x19, [sp, #80]
  42ba9c:	mov	x29, sp
  42baa0:	sub	sp, sp, #0xfc0
  42baa4:	mov	x19, x3
  42baa8:	mov	x21, x2
  42baac:	cmn	w0, #0x64
  42bab0:	mov	x22, x1
  42bab4:	b.eq	42bac4 <wcrtomb@plt+0x26cc4>  // b.none
  42bab8:	ldrb	w8, [x22]
  42babc:	cmp	w8, #0x2f
  42bac0:	b.ne	42baf0 <wcrtomb@plt+0x26cf0>  // b.any
  42bac4:	mov	x0, x22
  42bac8:	mov	x1, x21
  42bacc:	mov	x2, x19
  42bad0:	add	sp, sp, #0xfc0
  42bad4:	ldp	x20, x19, [sp, #80]
  42bad8:	ldp	x22, x21, [sp, #64]
  42badc:	ldp	x24, x23, [sp, #48]
  42bae0:	ldp	x26, x25, [sp, #32]
  42bae4:	ldp	x28, x27, [sp, #16]
  42bae8:	ldp	x29, x30, [sp], #96
  42baec:	b	404c30 <llistxattr@plt>
  42baf0:	mov	w23, w0
  42baf4:	mov	x0, sp
  42baf8:	mov	w1, w23
  42bafc:	mov	x2, x22
  42bb00:	mov	x27, sp
  42bb04:	bl	43b86c <_obstack_memory_used@@Base+0x74>
  42bb08:	cbz	x0, 42bb6c <wcrtomb@plt+0x26d6c>
  42bb0c:	mov	x1, x21
  42bb10:	mov	x2, x19
  42bb14:	mov	x25, x0
  42bb18:	bl	404c30 <llistxattr@plt>
  42bb1c:	mov	x20, x0
  42bb20:	bl	404ce0 <__errno_location@plt>
  42bb24:	ldr	w26, [x0]
  42bb28:	mov	x24, x0
  42bb2c:	cmp	x25, x27
  42bb30:	b.eq	42bb3c <wcrtomb@plt+0x26d3c>  // b.none
  42bb34:	mov	x0, x25
  42bb38:	bl	4049b0 <free@plt>
  42bb3c:	cmn	x20, #0x1
  42bb40:	b.ne	42bbc8 <wcrtomb@plt+0x26dc8>  // b.any
  42bb44:	cmp	w26, #0x26
  42bb48:	b.hi	42bc10 <wcrtomb@plt+0x26e10>  // b.pmore
  42bb4c:	mov	w8, w26
  42bb50:	mov	w9, #0x1                   	// #1
  42bb54:	lsl	x8, x9, x8
  42bb58:	mov	x9, #0x2006                	// #8198
  42bb5c:	movk	x9, #0x10, lsl #16
  42bb60:	movk	x9, #0x40, lsl #32
  42bb64:	tst	x8, x9
  42bb68:	b.eq	42bc10 <wcrtomb@plt+0x26e10>  // b.none
  42bb6c:	mov	x0, sp
  42bb70:	bl	439ecc <argp_parse@@Base+0xb210>
  42bb74:	cbnz	w0, 42bc4c <wcrtomb@plt+0x26e4c>
  42bb78:	tbnz	w23, #31, 42bba0 <wcrtomb@plt+0x26da0>
  42bb7c:	ldr	w8, [sp]
  42bb80:	cmp	w8, w23
  42bb84:	b.ne	42bba0 <wcrtomb@plt+0x26da0>  // b.any
  42bb88:	mov	x0, sp
  42bb8c:	bl	439f3c <argp_parse@@Base+0xb280>
  42bb90:	bl	404ce0 <__errno_location@plt>
  42bb94:	mov	w8, #0x9                   	// #9
  42bb98:	str	w8, [x0]
  42bb9c:	b	42bbc4 <wcrtomb@plt+0x26dc4>
  42bba0:	mov	w0, w23
  42bba4:	bl	4041e0 <fchdir@plt>
  42bba8:	cbz	w0, 42bbec <wcrtomb@plt+0x26dec>
  42bbac:	bl	404ce0 <__errno_location@plt>
  42bbb0:	ldr	w20, [x0]
  42bbb4:	mov	x19, x0
  42bbb8:	mov	x0, sp
  42bbbc:	bl	439f3c <argp_parse@@Base+0xb280>
  42bbc0:	str	w20, [x19]
  42bbc4:	mov	x20, #0xffffffffffffffff    	// #-1
  42bbc8:	mov	x0, x20
  42bbcc:	add	sp, sp, #0xfc0
  42bbd0:	ldp	x20, x19, [sp, #80]
  42bbd4:	ldp	x22, x21, [sp, #64]
  42bbd8:	ldp	x24, x23, [sp, #48]
  42bbdc:	ldp	x26, x25, [sp, #32]
  42bbe0:	ldp	x28, x27, [sp, #16]
  42bbe4:	ldp	x29, x30, [sp], #96
  42bbe8:	ret
  42bbec:	mov	x0, x22
  42bbf0:	mov	x1, x21
  42bbf4:	mov	x2, x19
  42bbf8:	bl	404c30 <llistxattr@plt>
  42bbfc:	mov	x20, x0
  42bc00:	cmn	x0, #0x1
  42bc04:	b.eq	42bc20 <wcrtomb@plt+0x26e20>  // b.none
  42bc08:	mov	w19, wzr
  42bc0c:	b	42bc28 <wcrtomb@plt+0x26e28>
  42bc10:	cmp	w26, #0x5f
  42bc14:	b.eq	42bb6c <wcrtomb@plt+0x26d6c>  // b.none
  42bc18:	str	w26, [x24]
  42bc1c:	b	42bbc8 <wcrtomb@plt+0x26dc8>
  42bc20:	bl	404ce0 <__errno_location@plt>
  42bc24:	ldr	w19, [x0]
  42bc28:	mov	x0, sp
  42bc2c:	bl	439f24 <argp_parse@@Base+0xb268>
  42bc30:	cbnz	w0, 42bc58 <wcrtomb@plt+0x26e58>
  42bc34:	mov	x0, sp
  42bc38:	bl	439f3c <argp_parse@@Base+0xb280>
  42bc3c:	cbz	w19, 42bbc8 <wcrtomb@plt+0x26dc8>
  42bc40:	bl	404ce0 <__errno_location@plt>
  42bc44:	str	w19, [x0]
  42bc48:	b	42bbc8 <wcrtomb@plt+0x26dc8>
  42bc4c:	bl	404ce0 <__errno_location@plt>
  42bc50:	ldr	w0, [x0]
  42bc54:	bl	43497c <argp_parse@@Base+0x5cc0>
  42bc58:	bl	404ce0 <__errno_location@plt>
  42bc5c:	ldr	w0, [x0]
  42bc60:	bl	4349bc <argp_parse@@Base+0x5d00>
  42bc64:	stp	x29, x30, [sp, #-80]!
  42bc68:	cmp	x2, #0x401
  42bc6c:	mov	w8, #0x401                 	// #1025
  42bc70:	stp	x22, x21, [sp, #48]
  42bc74:	stp	x20, x19, [sp, #64]
  42bc78:	mov	x19, x1
  42bc7c:	mov	w20, w0
  42bc80:	csinc	x21, x8, x2, cs  // cs = hs, nlast
  42bc84:	str	x25, [sp, #16]
  42bc88:	stp	x24, x23, [sp, #32]
  42bc8c:	mov	x29, sp
  42bc90:	mov	x0, x21
  42bc94:	bl	4044d0 <malloc@plt>
  42bc98:	mov	x22, x0
  42bc9c:	cbz	x0, 42bd2c <wcrtomb@plt+0x26f2c>
  42bca0:	mov	w0, w20
  42bca4:	mov	x1, x19
  42bca8:	mov	x2, x22
  42bcac:	mov	x3, x21
  42bcb0:	bl	404df0 <readlinkat@plt>
  42bcb4:	mov	x23, x0
  42bcb8:	tbz	x0, #63, 42bccc <wcrtomb@plt+0x26ecc>
  42bcbc:	bl	404ce0 <__errno_location@plt>
  42bcc0:	ldr	w25, [x0]
  42bcc4:	cmp	w25, #0x22
  42bcc8:	b.ne	42bd18 <wcrtomb@plt+0x26f18>  // b.any
  42bccc:	cmp	x23, x21
  42bcd0:	b.cc	42bd10 <wcrtomb@plt+0x26f10>  // b.lo, b.ul, b.last
  42bcd4:	mov	x0, x22
  42bcd8:	bl	4049b0 <free@plt>
  42bcdc:	lsr	x8, x21, #62
  42bce0:	cbnz	x8, 42bcec <wcrtomb@plt+0x26eec>
  42bce4:	lsl	x21, x21, #1
  42bce8:	b	42bc90 <wcrtomb@plt+0x26e90>
  42bcec:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  42bcf0:	cmp	x21, x8
  42bcf4:	mov	x21, #0x7fffffffffffffff    	// #9223372036854775807
  42bcf8:	b.cc	42bc90 <wcrtomb@plt+0x26e90>  // b.lo, b.ul, b.last
  42bcfc:	bl	404ce0 <__errno_location@plt>
  42bd00:	mov	x22, xzr
  42bd04:	mov	w8, #0xc                   	// #12
  42bd08:	str	w8, [x0]
  42bd0c:	b	42bd2c <wcrtomb@plt+0x26f2c>
  42bd10:	strb	wzr, [x22, x23]
  42bd14:	b	42bd2c <wcrtomb@plt+0x26f2c>
  42bd18:	mov	x24, x0
  42bd1c:	mov	x0, x22
  42bd20:	bl	4049b0 <free@plt>
  42bd24:	mov	x22, xzr
  42bd28:	str	w25, [x24]
  42bd2c:	mov	x0, x22
  42bd30:	ldp	x20, x19, [sp, #64]
  42bd34:	ldp	x22, x21, [sp, #48]
  42bd38:	ldp	x24, x23, [sp, #32]
  42bd3c:	ldr	x25, [sp, #16]
  42bd40:	ldp	x29, x30, [sp], #80
  42bd44:	ret
  42bd48:	stp	x29, x30, [sp, #-16]!
  42bd4c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42bd50:	ldr	w0, [x8, #496]
  42bd54:	mov	x29, sp
  42bd58:	bl	4041a0 <exit@plt>
  42bd5c:	stp	x29, x30, [sp, #-96]!
  42bd60:	stp	x28, x27, [sp, #16]
  42bd64:	stp	x26, x25, [sp, #32]
  42bd68:	stp	x24, x23, [sp, #48]
  42bd6c:	stp	x22, x21, [sp, #64]
  42bd70:	stp	x20, x19, [sp, #80]
  42bd74:	mov	x29, sp
  42bd78:	mov	x19, x3
  42bd7c:	mov	x20, x2
  42bd80:	mov	x24, x1
  42bd84:	mov	x21, x0
  42bd88:	bl	404170 <strlen@plt>
  42bd8c:	ldr	x25, [x24]
  42bd90:	cbz	x25, 42be1c <wcrtomb@plt+0x2701c>
  42bd94:	mov	x22, x0
  42bd98:	mov	w26, wzr
  42bd9c:	mov	x23, xzr
  42bda0:	add	x27, x24, #0x8
  42bda4:	mov	x28, #0xffffffffffffffff    	// #-1
  42bda8:	mov	x24, x20
  42bdac:	mov	x0, x25
  42bdb0:	mov	x1, x21
  42bdb4:	mov	x2, x22
  42bdb8:	bl	404580 <strncmp@plt>
  42bdbc:	cbnz	w0, 42bdfc <wcrtomb@plt+0x26ffc>
  42bdc0:	mov	x0, x25
  42bdc4:	bl	404170 <strlen@plt>
  42bdc8:	cmp	x0, x22
  42bdcc:	b.eq	42be20 <wcrtomb@plt+0x27020>  // b.none
  42bdd0:	cmn	x28, #0x1
  42bdd4:	b.eq	42bdf8 <wcrtomb@plt+0x26ff8>  // b.none
  42bdd8:	cbz	x20, 42bdf0 <wcrtomb@plt+0x26ff0>
  42bddc:	madd	x0, x28, x19, x20
  42bde0:	mov	x1, x24
  42bde4:	mov	x2, x19
  42bde8:	bl	4046b0 <bcmp@plt>
  42bdec:	cbz	w0, 42bdfc <wcrtomb@plt+0x26ffc>
  42bdf0:	mov	w26, #0x1                   	// #1
  42bdf4:	b	42bdfc <wcrtomb@plt+0x26ffc>
  42bdf8:	mov	x28, x23
  42bdfc:	ldr	x25, [x27, x23, lsl #3]
  42be00:	add	x23, x23, #0x1
  42be04:	add	x24, x24, x19
  42be08:	cbnz	x25, 42bdac <wcrtomb@plt+0x26fac>
  42be0c:	tst	w26, #0x1
  42be10:	mov	x8, #0xfffffffffffffffe    	// #-2
  42be14:	csel	x0, x8, x28, ne  // ne = any
  42be18:	b	42be24 <wcrtomb@plt+0x27024>
  42be1c:	mov	x23, #0xffffffffffffffff    	// #-1
  42be20:	mov	x0, x23
  42be24:	ldp	x20, x19, [sp, #80]
  42be28:	ldp	x22, x21, [sp, #64]
  42be2c:	ldp	x24, x23, [sp, #48]
  42be30:	ldp	x26, x25, [sp, #32]
  42be34:	ldp	x28, x27, [sp, #16]
  42be38:	ldp	x29, x30, [sp], #96
  42be3c:	ret
  42be40:	stp	x29, x30, [sp, #-48]!
  42be44:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  42be48:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x16808>
  42be4c:	add	x8, x8, #0xcb7
  42be50:	add	x9, x9, #0xc9c
  42be54:	cmn	x2, #0x1
  42be58:	stp	x20, x19, [sp, #32]
  42be5c:	mov	x19, x1
  42be60:	mov	x20, x0
  42be64:	csel	x1, x9, x8, eq  // eq = none
  42be68:	mov	w2, #0x5                   	// #5
  42be6c:	mov	x0, xzr
  42be70:	str	x21, [sp, #16]
  42be74:	mov	x29, sp
  42be78:	bl	404bd0 <dcgettext@plt>
  42be7c:	mov	x21, x0
  42be80:	mov	w1, #0x8                   	// #8
  42be84:	mov	w0, wzr
  42be88:	mov	x2, x19
  42be8c:	bl	439720 <argp_parse@@Base+0xaa64>
  42be90:	mov	x19, x0
  42be94:	mov	w0, #0x1                   	// #1
  42be98:	mov	x1, x20
  42be9c:	bl	439ab0 <argp_parse@@Base+0xadf4>
  42bea0:	mov	x2, x21
  42bea4:	mov	x3, x19
  42bea8:	ldp	x20, x19, [sp, #32]
  42beac:	ldr	x21, [sp, #16]
  42beb0:	mov	x4, x0
  42beb4:	mov	w0, wzr
  42beb8:	mov	w1, wzr
  42bebc:	ldp	x29, x30, [sp], #48
  42bec0:	b	4041d0 <error@plt>
  42bec4:	stp	x29, x30, [sp, #-96]!
  42bec8:	stp	x20, x19, [sp, #80]
  42becc:	mov	x20, x1
  42bed0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42bed4:	stp	x22, x21, [sp, #64]
  42bed8:	mov	x19, x2
  42bedc:	mov	x21, x0
  42bee0:	add	x1, x1, #0xcd4
  42bee4:	mov	w2, #0x5                   	// #5
  42bee8:	mov	x0, xzr
  42beec:	stp	x28, x27, [sp, #16]
  42bef0:	stp	x26, x25, [sp, #32]
  42bef4:	stp	x24, x23, [sp, #48]
  42bef8:	mov	x29, sp
  42befc:	bl	404bd0 <dcgettext@plt>
  42bf00:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42bf04:	ldr	x1, [x26, #624]
  42bf08:	bl	404bf0 <fputs_unlocked@plt>
  42bf0c:	ldr	x24, [x21]
  42bf10:	cbz	x24, 42bfa8 <wcrtomb@plt+0x271a8>
  42bf14:	add	x28, x21, #0x8
  42bf18:	adrp	x21, 452000 <_obstack_memory_used@@Base+0x16808>
  42bf1c:	mov	x27, xzr
  42bf20:	mov	x23, xzr
  42bf24:	mov	x22, xzr
  42bf28:	add	x21, x21, #0xce9
  42bf2c:	cbz	x22, 42bf70 <wcrtomb@plt+0x27170>
  42bf30:	add	x1, x20, x27
  42bf34:	mov	x0, x23
  42bf38:	mov	x2, x19
  42bf3c:	bl	4046b0 <bcmp@plt>
  42bf40:	mov	x25, x27
  42bf44:	cbnz	w0, 42bf74 <wcrtomb@plt+0x27174>
  42bf48:	ldr	x25, [x26, #624]
  42bf4c:	mov	x0, x24
  42bf50:	bl	439ac0 <argp_parse@@Base+0xae04>
  42bf54:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  42bf58:	mov	x3, x0
  42bf5c:	mov	w1, #0x1                   	// #1
  42bf60:	mov	x0, x25
  42bf64:	add	x2, x2, #0xcf1
  42bf68:	bl	4048f0 <__fprintf_chk@plt>
  42bf6c:	b	42bf98 <wcrtomb@plt+0x27198>
  42bf70:	mov	x25, xzr
  42bf74:	ldr	x23, [x26, #624]
  42bf78:	mov	x0, x24
  42bf7c:	bl	439ac0 <argp_parse@@Base+0xae04>
  42bf80:	mov	x3, x0
  42bf84:	mov	w1, #0x1                   	// #1
  42bf88:	mov	x0, x23
  42bf8c:	mov	x2, x21
  42bf90:	bl	4048f0 <__fprintf_chk@plt>
  42bf94:	add	x23, x20, x25
  42bf98:	ldr	x24, [x28, x22, lsl #3]
  42bf9c:	add	x22, x22, #0x1
  42bfa0:	add	x27, x27, x19
  42bfa4:	cbnz	x24, 42bf2c <wcrtomb@plt+0x2712c>
  42bfa8:	ldr	x1, [x26, #624]
  42bfac:	ldp	x20, x19, [sp, #80]
  42bfb0:	ldp	x22, x21, [sp, #64]
  42bfb4:	ldp	x24, x23, [sp, #48]
  42bfb8:	ldp	x26, x25, [sp, #32]
  42bfbc:	ldp	x28, x27, [sp, #16]
  42bfc0:	mov	w0, #0xa                   	// #10
  42bfc4:	ldp	x29, x30, [sp], #96
  42bfc8:	b	4043e0 <putc_unlocked@plt>
  42bfcc:	stp	x29, x30, [sp, #-64]!
  42bfd0:	stp	x24, x23, [sp, #16]
  42bfd4:	stp	x22, x21, [sp, #32]
  42bfd8:	mov	x21, x3
  42bfdc:	mov	x22, x2
  42bfe0:	mov	x23, x1
  42bfe4:	mov	x24, x0
  42bfe8:	mov	x0, x1
  42bfec:	mov	x1, x2
  42bff0:	mov	x2, x3
  42bff4:	mov	x3, x4
  42bff8:	stp	x20, x19, [sp, #48]
  42bffc:	mov	x29, sp
  42c000:	mov	x19, x5
  42c004:	mov	x20, x4
  42c008:	bl	42bd5c <wcrtomb@plt+0x26f5c>
  42c00c:	mov	x2, x0
  42c010:	tbz	x0, #63, 42c038 <wcrtomb@plt+0x27238>
  42c014:	mov	x0, x24
  42c018:	mov	x1, x23
  42c01c:	bl	42be40 <wcrtomb@plt+0x27040>
  42c020:	mov	x0, x22
  42c024:	mov	x1, x21
  42c028:	mov	x2, x20
  42c02c:	bl	42bec4 <wcrtomb@plt+0x270c4>
  42c030:	blr	x19
  42c034:	mov	x2, #0xffffffffffffffff    	// #-1
  42c038:	ldp	x20, x19, [sp, #48]
  42c03c:	ldp	x22, x21, [sp, #32]
  42c040:	ldp	x24, x23, [sp, #16]
  42c044:	mov	x0, x2
  42c048:	ldp	x29, x30, [sp], #64
  42c04c:	ret
  42c050:	stp	x29, x30, [sp, #-64]!
  42c054:	stp	x22, x21, [sp, #32]
  42c058:	stp	x20, x19, [sp, #48]
  42c05c:	ldr	x20, [x1]
  42c060:	str	x23, [sp, #16]
  42c064:	mov	x29, sp
  42c068:	cbz	x20, 42c0b8 <wcrtomb@plt+0x272b8>
  42c06c:	mov	x22, x2
  42c070:	mov	x23, x1
  42c074:	mov	x1, x2
  42c078:	mov	x2, x3
  42c07c:	mov	x19, x3
  42c080:	mov	x21, x0
  42c084:	bl	4046b0 <bcmp@plt>
  42c088:	cbz	w0, 42c0b8 <wcrtomb@plt+0x272b8>
  42c08c:	add	x22, x22, x19
  42c090:	add	x23, x23, #0x8
  42c094:	ldr	x20, [x23]
  42c098:	cbz	x20, 42c0b8 <wcrtomb@plt+0x272b8>
  42c09c:	mov	x0, x21
  42c0a0:	mov	x1, x22
  42c0a4:	mov	x2, x19
  42c0a8:	bl	4046b0 <bcmp@plt>
  42c0ac:	add	x22, x22, x19
  42c0b0:	add	x23, x23, #0x8
  42c0b4:	cbnz	w0, 42c094 <wcrtomb@plt+0x27294>
  42c0b8:	mov	x0, x20
  42c0bc:	ldp	x20, x19, [sp, #48]
  42c0c0:	ldp	x22, x21, [sp, #32]
  42c0c4:	ldr	x23, [sp, #16]
  42c0c8:	ldp	x29, x30, [sp], #64
  42c0cc:	ret

000000000042c0d0 <argp_help@@Base>:
  42c0d0:	mov	x4, x3
  42c0d4:	mov	w3, w2
  42c0d8:	mov	x2, x1
  42c0dc:	mov	x1, xzr
  42c0e0:	b	42c0e4 <argp_help@@Base+0x14>
  42c0e4:	stp	x29, x30, [sp, #-96]!
  42c0e8:	stp	x28, x27, [sp, #16]
  42c0ec:	stp	x26, x25, [sp, #32]
  42c0f0:	stp	x24, x23, [sp, #48]
  42c0f4:	stp	x22, x21, [sp, #64]
  42c0f8:	stp	x20, x19, [sp, #80]
  42c0fc:	mov	x29, sp
  42c100:	sub	sp, sp, #0x80
  42c104:	stur	x4, [x29, #-88]
  42c108:	stur	x0, [x29, #-72]
  42c10c:	cbz	x2, 42d0fc <argp_help@@Base+0x102c>
  42c110:	mov	x0, x2
  42c114:	mov	w27, w3
  42c118:	mov	x21, x2
  42c11c:	mov	x22, x1
  42c120:	bl	404210 <flockfile@plt>
  42c124:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42c128:	ldr	w8, [x8, #492]
  42c12c:	stur	w27, [x29, #-76]
  42c130:	cbnz	w8, 42c450 <argp_help@@Base+0x380>
  42c134:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  42c138:	add	x0, x0, #0xd76
  42c13c:	bl	404d10 <getenv@plt>
  42c140:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42c144:	add	x8, x8, #0x1c8
  42c148:	ldp	q0, q1, [x8]
  42c14c:	ldr	x8, [x8, #32]
  42c150:	stp	q0, q1, [x29, #-48]
  42c154:	stur	x8, [x29, #-16]
  42c158:	cbz	x0, 42c450 <argp_help@@Base+0x380>
  42c15c:	ldrb	w19, [x0]
  42c160:	mov	x23, x0
  42c164:	stur	x21, [x29, #-128]
  42c168:	cbz	w19, 42c3ec <argp_help@@Base+0x31c>
  42c16c:	bl	404930 <__ctype_b_loc@plt>
  42c170:	adrp	x21, 452000 <_obstack_memory_used@@Base+0x16808>
  42c174:	mov	x24, x0
  42c178:	add	x21, x21, #0xfbd
  42c17c:	ldr	x20, [x24]
  42c180:	and	x8, x19, #0xff
  42c184:	ldrh	w8, [x20, x8, lsl #1]
  42c188:	tbz	w8, #13, 42c198 <argp_help@@Base+0xc8>
  42c18c:	ldrb	w19, [x23, #1]!
  42c190:	ldrh	w8, [x20, x19, lsl #1]
  42c194:	tbnz	w8, #13, 42c18c <argp_help@@Base+0xbc>
  42c198:	tbz	w8, #10, 42c3a8 <argp_help@@Base+0x2d8>
  42c19c:	mov	w25, w19
  42c1a0:	mov	x9, x23
  42c1a4:	and	x8, x25, #0xff
  42c1a8:	ldrh	w8, [x20, x8, lsl #1]
  42c1ac:	tbnz	w8, #3, 42c1c4 <argp_help@@Base+0xf4>
  42c1b0:	and	w10, w25, #0xff
  42c1b4:	cmp	w10, #0x5f
  42c1b8:	b.eq	42c1c4 <argp_help@@Base+0xf4>  // b.none
  42c1bc:	cmp	w10, #0x2d
  42c1c0:	b.ne	42c1cc <argp_help@@Base+0xfc>  // b.any
  42c1c4:	ldrb	w25, [x9, #1]!
  42c1c8:	b	42c1a4 <argp_help@@Base+0xd4>
  42c1cc:	mov	x28, x9
  42c1d0:	tbz	w8, #13, 42c1e4 <argp_help@@Base+0x114>
  42c1d4:	mov	x28, x9
  42c1d8:	ldrb	w25, [x28, #1]!
  42c1dc:	ldrh	w8, [x20, x25, lsl #1]
  42c1e0:	tbnz	w8, #13, 42c1d8 <argp_help@@Base+0x108>
  42c1e4:	ands	w10, w25, #0xff
  42c1e8:	sub	x26, x9, x23
  42c1ec:	b.eq	42c21c <argp_help@@Base+0x14c>  // b.none
  42c1f0:	cmp	w10, #0x2c
  42c1f4:	b.eq	42c21c <argp_help@@Base+0x14c>  // b.none
  42c1f8:	cmp	w10, #0x3d
  42c1fc:	b.ne	42c20c <argp_help@@Base+0x13c>  // b.any
  42c200:	ldrb	w25, [x28, #1]!
  42c204:	ldrh	w8, [x20, x25, lsl #1]
  42c208:	tbnz	w8, #13, 42c200 <argp_help@@Base+0x130>
  42c20c:	tbnz	w8, #11, 42c260 <argp_help@@Base+0x190>
  42c210:	mov	w20, wzr
  42c214:	mov	w19, wzr
  42c218:	b	42c298 <argp_help@@Base+0x1c8>
  42c21c:	and	w8, w19, #0xff
  42c220:	cmp	w8, #0x6e
  42c224:	b.ne	42c254 <argp_help@@Base+0x184>  // b.any
  42c228:	ldrb	w8, [x23, #1]
  42c22c:	cmp	w8, #0x6f
  42c230:	b.ne	42c254 <argp_help@@Base+0x184>  // b.any
  42c234:	ldrb	w8, [x23, #2]
  42c238:	cmp	w8, #0x2d
  42c23c:	b.ne	42c254 <argp_help@@Base+0x184>  // b.any
  42c240:	mov	w19, wzr
  42c244:	add	x23, x23, #0x3
  42c248:	sub	x26, x26, #0x3
  42c24c:	mov	w20, #0x1                   	// #1
  42c250:	b	42c298 <argp_help@@Base+0x1c8>
  42c254:	mov	w20, #0x1                   	// #1
  42c258:	mov	w19, #0x1                   	// #1
  42c25c:	b	42c298 <argp_help@@Base+0x1c8>
  42c260:	mov	x0, x28
  42c264:	bl	404470 <atoi@plt>
  42c268:	and	x8, x25, #0xff
  42c26c:	ldrh	w8, [x20, x8, lsl #1]
  42c270:	mov	w19, w0
  42c274:	tbz	w8, #11, 42c284 <argp_help@@Base+0x1b4>
  42c278:	ldrb	w8, [x28, #1]!
  42c27c:	ldrh	w8, [x20, x8, lsl #1]
  42c280:	tbnz	w8, #11, 42c278 <argp_help@@Base+0x1a8>
  42c284:	tbz	w8, #13, 42c294 <argp_help@@Base+0x1c4>
  42c288:	ldrb	w8, [x28, #1]!
  42c28c:	ldrh	w8, [x20, x8, lsl #1]
  42c290:	tbnz	w8, #13, 42c288 <argp_help@@Base+0x1b8>
  42c294:	mov	w20, wzr
  42c298:	mov	x25, xzr
  42c29c:	add	x27, x21, x25
  42c2a0:	mov	x0, x27
  42c2a4:	bl	404170 <strlen@plt>
  42c2a8:	cmp	x0, x26
  42c2ac:	b.ne	42c2c4 <argp_help@@Base+0x1f4>  // b.any
  42c2b0:	mov	x0, x23
  42c2b4:	mov	x1, x27
  42c2b8:	mov	x2, x26
  42c2bc:	bl	404580 <strncmp@plt>
  42c2c0:	cbz	w0, 42c2e8 <argp_help@@Base+0x218>
  42c2c4:	add	x25, x25, #0x10
  42c2c8:	add	x8, x21, x25
  42c2cc:	add	x9, x21, #0x90
  42c2d0:	cmp	x8, x9
  42c2d4:	b.cc	42c29c <argp_help@@Base+0x1cc>  // b.lo, b.ul, b.last
  42c2d8:	cbz	x22, 42c314 <argp_help@@Base+0x244>
  42c2dc:	ldr	x8, [x22]
  42c2e0:	ldr	x0, [x8, #48]
  42c2e4:	b	42c318 <argp_help@@Base+0x248>
  42c2e8:	cbz	w20, 42c2f8 <argp_help@@Base+0x228>
  42c2ec:	add	x8, x21, x25
  42c2f0:	ldrb	w8, [x8, #14]
  42c2f4:	cbz	w8, 42c364 <argp_help@@Base+0x294>
  42c2f8:	add	x8, x21, x25
  42c2fc:	ldrb	w8, [x8, #15]
  42c300:	sub	x9, x29, #0x30
  42c304:	str	w19, [x9, x8]
  42c308:	cmp	x25, #0x90
  42c30c:	b.ne	42c344 <argp_help@@Base+0x274>  // b.any
  42c310:	b	42c2d8 <argp_help@@Base+0x208>
  42c314:	mov	x0, xzr
  42c318:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42c31c:	mov	w2, #0x5                   	// #5
  42c320:	add	x1, x1, #0xdb3
  42c324:	bl	404bd0 <dcgettext@plt>
  42c328:	mov	x3, x0
  42c32c:	mov	x0, x22
  42c330:	mov	w1, wzr
  42c334:	mov	w2, wzr
  42c338:	mov	w4, w26
  42c33c:	mov	x5, x23
  42c340:	bl	42d2cc <argp_failure@@Base>
  42c344:	mov	x8, x28
  42c348:	ldrb	w9, [x8], #1
  42c34c:	ldur	w27, [x29, #-76]
  42c350:	cmp	w9, #0x2c
  42c354:	csel	x23, x8, x28, eq  // eq = none
  42c358:	ldrb	w19, [x23]
  42c35c:	cbnz	w19, 42c17c <argp_help@@Base+0xac>
  42c360:	b	42c3ec <argp_help@@Base+0x31c>
  42c364:	cbz	x22, 42c374 <argp_help@@Base+0x2a4>
  42c368:	ldr	x8, [x22]
  42c36c:	ldr	x0, [x8, #48]
  42c370:	b	42c378 <argp_help@@Base+0x2a8>
  42c374:	mov	x0, xzr
  42c378:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42c37c:	mov	w2, #0x5                   	// #5
  42c380:	add	x1, x1, #0xd84
  42c384:	bl	404bd0 <dcgettext@plt>
  42c388:	mov	x3, x0
  42c38c:	mov	x0, x22
  42c390:	mov	w1, wzr
  42c394:	mov	w2, wzr
  42c398:	mov	w4, w26
  42c39c:	mov	x5, x23
  42c3a0:	bl	42d2cc <argp_failure@@Base>
  42c3a4:	b	42c308 <argp_help@@Base+0x238>
  42c3a8:	tst	w19, #0xff
  42c3ac:	b.eq	42c3ec <argp_help@@Base+0x31c>  // b.none
  42c3b0:	cbz	x22, 42c3c0 <argp_help@@Base+0x2f0>
  42c3b4:	ldr	x8, [x22]
  42c3b8:	ldr	x0, [x8, #48]
  42c3bc:	b	42c3c4 <argp_help@@Base+0x2f4>
  42c3c0:	mov	x0, xzr
  42c3c4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42c3c8:	add	x1, x1, #0xdd9
  42c3cc:	mov	w2, #0x5                   	// #5
  42c3d0:	bl	404bd0 <dcgettext@plt>
  42c3d4:	mov	x3, x0
  42c3d8:	mov	x0, x22
  42c3dc:	mov	w1, wzr
  42c3e0:	mov	w2, wzr
  42c3e4:	mov	x4, x23
  42c3e8:	bl	42d2cc <argp_failure@@Base>
  42c3ec:	ldur	w8, [x29, #-16]
  42c3f0:	ldur	x21, [x29, #-128]
  42c3f4:	adrp	x19, 452000 <_obstack_memory_used@@Base+0x16808>
  42c3f8:	adrp	x10, 453000 <_obstack_memory_used@@Base+0x17808>
  42c3fc:	add	x19, x19, #0xfbd
  42c400:	sub	x9, x29, #0x30
  42c404:	add	x10, x10, #0x4d
  42c408:	ldrb	w11, [x19, #14]
  42c40c:	cbnz	w11, 42c428 <argp_help@@Base+0x358>
  42c410:	ldrb	w11, [x19, #15]
  42c414:	cmp	x11, #0x20
  42c418:	b.eq	42c428 <argp_help@@Base+0x358>  // b.none
  42c41c:	ldr	w11, [x9, x11]
  42c420:	cmp	w11, w8
  42c424:	b.ge	42cf0c <argp_help@@Base+0xe3c>  // b.tcont
  42c428:	add	x19, x19, #0x10
  42c42c:	cmp	x19, x10
  42c430:	b.cc	42c408 <argp_help@@Base+0x338>  // b.lo, b.ul, b.last
  42c434:	ldp	q0, q1, [x29, #-48]
  42c438:	ldur	w8, [x29, #-16]
  42c43c:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42c440:	mov	w9, #0x1                   	// #1
  42c444:	add	x10, x10, #0x1c8
  42c448:	stp	q0, q1, [x10]
  42c44c:	stp	w8, w9, [x10, #32]
  42c450:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42c454:	ldrsw	x2, [x8, #488]
  42c458:	mov	x0, x21
  42c45c:	mov	x1, xzr
  42c460:	mov	x3, xzr
  42c464:	bl	447670 <_obstack_memory_used@@Base+0xbe78>
  42c468:	cbz	x0, 42c4e0 <argp_help@@Base+0x410>
  42c46c:	mov	w8, #0xb                   	// #11
  42c470:	mov	x23, x0
  42c474:	tst	w27, w8
  42c478:	b.eq	42c504 <argp_help@@Base+0x434>  // b.none
  42c47c:	ldur	x0, [x29, #-72]
  42c480:	mov	x1, xzr
  42c484:	bl	42d454 <argp_failure@@Base+0x188>
  42c488:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42c48c:	add	x1, x1, #0xd0b
  42c490:	mov	x19, x0
  42c494:	bl	42d944 <argp_failure@@Base+0x678>
  42c498:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x17808>
  42c49c:	add	x1, x1, #0x2dd
  42c4a0:	mov	x0, x19
  42c4a4:	bl	42d944 <argp_failure@@Base+0x678>
  42c4a8:	ldr	w1, [x19, #8]
  42c4ac:	cbz	w1, 42c508 <argp_help@@Base+0x438>
  42c4b0:	ldr	x0, [x19]
  42c4b4:	mov	w8, wzr
  42c4b8:	add	x9, x0, #0x30
  42c4bc:	str	w8, [x9], #56
  42c4c0:	add	w8, w8, #0x1
  42c4c4:	cmp	w1, w8
  42c4c8:	b.ne	42c4bc <argp_help@@Base+0x3ec>  // b.any
  42c4cc:	adrp	x3, 42e000 <argp_failure@@Base+0xd34>
  42c4d0:	add	x3, x3, #0x234
  42c4d4:	mov	w2, #0x38                  	// #56
  42c4d8:	bl	404340 <qsort@plt>
  42c4dc:	b	42c508 <argp_help@@Base+0x438>
  42c4e0:	mov	x0, x21
  42c4e4:	mov	sp, x29
  42c4e8:	ldp	x20, x19, [sp, #80]
  42c4ec:	ldp	x22, x21, [sp, #64]
  42c4f0:	ldp	x24, x23, [sp, #48]
  42c4f4:	ldp	x26, x25, [sp, #32]
  42c4f8:	ldp	x28, x27, [sp, #16]
  42c4fc:	ldp	x29, x30, [sp], #96
  42c500:	b	404500 <funlockfile@plt>
  42c504:	mov	x19, xzr
  42c508:	tst	w27, #0x3
  42c50c:	stur	x19, [x29, #-96]
  42c510:	b.eq	42c7d0 <argp_help@@Base+0x700>  // b.none
  42c514:	ldur	x0, [x29, #-72]
  42c518:	stur	x21, [x29, #-128]
  42c51c:	bl	42d9cc <argp_failure@@Base+0x700>
  42c520:	add	x9, x0, #0xf
  42c524:	mov	x8, sp
  42c528:	and	x9, x9, #0xfffffffffffffff0
  42c52c:	sub	x19, x8, x9
  42c530:	mov	x2, x0
  42c534:	mov	sp, x19
  42c538:	mov	x0, x19
  42c53c:	mov	w1, wzr
  42c540:	bl	4045e0 <memset@plt>
  42c544:	adrp	x27, 452000 <_obstack_memory_used@@Base+0x16808>
  42c548:	adrp	x26, 44d000 <_obstack_memory_used@@Base+0x11808>
  42c54c:	adrp	x20, 452000 <_obstack_memory_used@@Base+0x16808>
  42c550:	add	x27, x27, #0xd10
  42c554:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42c558:	add	x26, x26, #0x868
  42c55c:	add	x20, x20, #0xd17
  42c560:	ldp	x9, x8, [x23, #48]
  42c564:	ldr	x10, [x23, #32]
  42c568:	ldrsw	x24, [x21, #484]
  42c56c:	sub	x8, x8, x9
  42c570:	cmp	x8, x10
  42c574:	b.ls	42c580 <argp_help@@Base+0x4b0>  // b.plast
  42c578:	mov	x0, x23
  42c57c:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42c580:	ldur	x8, [x29, #-72]
  42c584:	ldr	x25, [x23, #24]
  42c588:	str	x24, [x23, #24]
  42c58c:	stur	x19, [x29, #-48]
  42c590:	ldr	x0, [x8, #48]
  42c594:	mov	w2, #0x5                   	// #5
  42c598:	mov	x1, x27
  42c59c:	bl	404bd0 <dcgettext@plt>
  42c5a0:	ldur	x3, [x29, #-88]
  42c5a4:	mov	x2, x0
  42c5a8:	mov	x0, x23
  42c5ac:	mov	x1, x26
  42c5b0:	bl	447c2c <_obstack_memory_used@@Base+0xc434>
  42c5b4:	ldp	x9, x8, [x23, #48]
  42c5b8:	ldr	x10, [x23, #32]
  42c5bc:	ldrsw	x27, [x21, #484]
  42c5c0:	ldur	w28, [x29, #-76]
  42c5c4:	sub	x8, x8, x9
  42c5c8:	cmp	x8, x10
  42c5cc:	b.ls	42c5d8 <argp_help@@Base+0x508>  // b.plast
  42c5d0:	mov	x0, x23
  42c5d4:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42c5d8:	ldr	x24, [x23, #8]
  42c5dc:	str	x27, [x23, #8]
  42c5e0:	tbnz	w28, #1, 42c5fc <argp_help@@Base+0x52c>
  42c5e4:	ldur	x0, [x29, #-96]
  42c5e8:	mov	x1, x23
  42c5ec:	bl	42da38 <argp_failure@@Base+0x76c>
  42c5f0:	orr	w28, w28, #0x2
  42c5f4:	stur	w28, [x29, #-76]
  42c5f8:	b	42c66c <argp_help@@Base+0x59c>
  42c5fc:	ldur	x8, [x29, #-96]
  42c600:	ldr	w8, [x8, #8]
  42c604:	cbz	w8, 42c66c <argp_help@@Base+0x59c>
  42c608:	ldur	x8, [x29, #-72]
  42c60c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42c610:	mov	w2, #0x5                   	// #5
  42c614:	add	x1, x1, #0xd1e
  42c618:	ldr	x0, [x8, #48]
  42c61c:	bl	404bd0 <dcgettext@plt>
  42c620:	mov	x27, x0
  42c624:	bl	404170 <strlen@plt>
  42c628:	cbz	x0, 42c66c <argp_help@@Base+0x59c>
  42c62c:	mov	x28, x0
  42c630:	ldp	x0, x8, [x23, #56]
  42c634:	add	x9, x0, x28
  42c638:	cmp	x9, x8
  42c63c:	b.ls	42c654 <argp_help@@Base+0x584>  // b.plast
  42c640:	mov	x0, x23
  42c644:	mov	x1, x28
  42c648:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42c64c:	cbz	w0, 42c66c <argp_help@@Base+0x59c>
  42c650:	ldr	x0, [x23, #56]
  42c654:	mov	x1, x27
  42c658:	mov	x2, x28
  42c65c:	bl	4040f0 <memcpy@plt>
  42c660:	ldr	x8, [x23, #56]
  42c664:	add	x8, x8, x28
  42c668:	str	x8, [x23, #56]
  42c66c:	ldur	x0, [x29, #-72]
  42c670:	sub	x2, x29, #0x30
  42c674:	mov	w3, #0x1                   	// #1
  42c678:	mov	x1, x22
  42c67c:	mov	x4, x23
  42c680:	bl	42dc04 <argp_failure@@Base+0x938>
  42c684:	ldp	x10, x8, [x23, #48]
  42c688:	ldr	x9, [x23, #32]
  42c68c:	mov	w28, w0
  42c690:	sxtw	x25, w25
  42c694:	sub	x10, x8, x10
  42c698:	cmp	x10, x9
  42c69c:	b.ls	42c6b4 <argp_help@@Base+0x5e4>  // b.plast
  42c6a0:	mov	x0, x23
  42c6a4:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42c6a8:	ldp	x10, x8, [x23, #48]
  42c6ac:	ldr	x9, [x23, #32]
  42c6b0:	sub	x10, x8, x10
  42c6b4:	cmp	x10, x9
  42c6b8:	sxtw	x24, w24
  42c6bc:	str	x25, [x23, #24]
  42c6c0:	b.ls	42c6d0 <argp_help@@Base+0x600>  // b.plast
  42c6c4:	mov	x0, x23
  42c6c8:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42c6cc:	ldr	x8, [x23, #56]
  42c6d0:	ldr	x9, [x23, #64]
  42c6d4:	str	x24, [x23, #8]
  42c6d8:	cmp	x8, x9
  42c6dc:	b.cc	42c6f4 <argp_help@@Base+0x624>  // b.lo, b.ul, b.last
  42c6e0:	mov	w1, #0x1                   	// #1
  42c6e4:	mov	x0, x23
  42c6e8:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42c6ec:	cbz	w0, 42c704 <argp_help@@Base+0x634>
  42c6f0:	ldr	x8, [x23, #56]
  42c6f4:	add	x9, x8, #0x1
  42c6f8:	str	x9, [x23, #56]
  42c6fc:	mov	w9, #0xa                   	// #10
  42c700:	strb	w9, [x8]
  42c704:	mov	x27, x20
  42c708:	cbnz	w28, 42c560 <argp_help@@Base+0x490>
  42c70c:	ldur	x21, [x29, #-128]
  42c710:	ldur	w27, [x29, #-76]
  42c714:	mov	w19, #0x1                   	// #1
  42c718:	tbz	w27, #4, 42c73c <argp_help@@Base+0x66c>
  42c71c:	ldur	x0, [x29, #-72]
  42c720:	mov	w4, #0x1                   	// #1
  42c724:	mov	x1, x22
  42c728:	mov	w2, wzr
  42c72c:	mov	w3, wzr
  42c730:	mov	x5, x23
  42c734:	bl	42de0c <argp_failure@@Base+0xb40>
  42c738:	orr	w19, w0, w19
  42c73c:	tbnz	w27, #2, 42c748 <argp_help@@Base+0x678>
  42c740:	tbnz	w27, #3, 42c77c <argp_help@@Base+0x6ac>
  42c744:	b	42d050 <argp_help@@Base+0xf80>
  42c748:	ldur	x8, [x29, #-72]
  42c74c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42c750:	add	x1, x1, #0xd2b
  42c754:	mov	w2, #0x5                   	// #5
  42c758:	ldr	x0, [x8, #48]
  42c75c:	bl	404bd0 <dcgettext@plt>
  42c760:	ldur	x2, [x29, #-88]
  42c764:	mov	x1, x0
  42c768:	mov	x0, x23
  42c76c:	mov	x3, x2
  42c770:	bl	447c2c <_obstack_memory_used@@Base+0xc434>
  42c774:	mov	w19, #0x1                   	// #1
  42c778:	tbz	w27, #3, 42d050 <argp_help@@Base+0xf80>
  42c77c:	ldur	x8, [x29, #-96]
  42c780:	ldr	w9, [x8, #8]
  42c784:	cbz	w9, 42d050 <argp_help@@Base+0xf80>
  42c788:	cbz	w19, 42c7dc <argp_help@@Base+0x70c>
  42c78c:	ldp	x8, x9, [x23, #56]
  42c790:	ldur	x19, [x29, #-96]
  42c794:	cmp	x8, x9
  42c798:	b.cc	42c7b0 <argp_help@@Base+0x6e0>  // b.lo, b.ul, b.last
  42c79c:	mov	w1, #0x1                   	// #1
  42c7a0:	mov	x0, x23
  42c7a4:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42c7a8:	cbz	w0, 42c7c0 <argp_help@@Base+0x6f0>
  42c7ac:	ldr	x8, [x23, #56]
  42c7b0:	add	x9, x8, #0x1
  42c7b4:	mov	w10, #0xa                   	// #10
  42c7b8:	str	x9, [x23, #56]
  42c7bc:	strb	w10, [x8]
  42c7c0:	ldr	w9, [x19, #8]
  42c7c4:	stp	xzr, xzr, [x29, #-64]
  42c7c8:	cbnz	w9, 42c7e0 <argp_help@@Base+0x710>
  42c7cc:	b	42d04c <argp_help@@Base+0xf7c>
  42c7d0:	mov	w19, wzr
  42c7d4:	tbnz	w27, #4, 42c71c <argp_help@@Base+0x64c>
  42c7d8:	b	42c73c <argp_help@@Base+0x66c>
  42c7dc:	stp	xzr, xzr, [x29, #-64]
  42c7e0:	ldur	x8, [x29, #-96]
  42c7e4:	stur	x21, [x29, #-128]
  42c7e8:	stur	w27, [x29, #-76]
  42c7ec:	ldr	x21, [x8]
  42c7f0:	add	x8, x23, #0x38
  42c7f4:	stur	x8, [x29, #-88]
  42c7f8:	stur	w9, [x29, #-100]
  42c7fc:	ldp	x9, x8, [x23, #48]
  42c800:	ldr	x10, [x23, #32]
  42c804:	ldr	x28, [x21]
  42c808:	ldr	x19, [x21, #16]
  42c80c:	sub	x8, x8, x9
  42c810:	cmp	x8, x10
  42c814:	b.ls	42c820 <argp_help@@Base+0x750>  // b.plast
  42c818:	mov	x0, x23
  42c81c:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42c820:	ldr	x8, [x23, #8]
  42c824:	str	xzr, [x23, #8]
  42c828:	ldr	x11, [x23, #24]
  42c82c:	stp	x21, x23, [x29, #-48]
  42c830:	stur	x8, [x29, #-120]
  42c834:	sub	x8, x29, #0x40
  42c838:	stur	x8, [x29, #-32]
  42c83c:	mov	w8, #0x1                   	// #1
  42c840:	stur	w8, [x29, #-24]
  42c844:	stur	x22, [x29, #-16]
  42c848:	ldrb	w8, [x28, #24]
  42c84c:	stur	x11, [x29, #-112]
  42c850:	tbnz	w8, #3, 42c87c <argp_help@@Base+0x7ac>
  42c854:	ldr	w8, [x21, #8]
  42c858:	cbz	w8, 42c87c <argp_help@@Base+0x7ac>
  42c85c:	mov	x9, x28
  42c860:	ldr	x10, [x9]
  42c864:	cbz	x10, 42c870 <argp_help@@Base+0x7a0>
  42c868:	ldrb	w10, [x9, #24]
  42c86c:	tbz	w10, #1, 42cbe0 <argp_help@@Base+0xb10>
  42c870:	subs	w8, w8, #0x1
  42c874:	add	x9, x9, #0x30
  42c878:	b.ne	42c860 <argp_help@@Base+0x790>  // b.any
  42c87c:	mov	w20, wzr
  42c880:	ldp	x9, x8, [x23, #48]
  42c884:	ldr	x10, [x23, #32]
  42c888:	adrp	x11, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42c88c:	ldrsw	x24, [x11, #464]
  42c890:	sub	x8, x8, x9
  42c894:	cmp	x8, x10
  42c898:	b.ls	42c8a4 <argp_help@@Base+0x7d4>  // b.plast
  42c89c:	mov	x0, x23
  42c8a0:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42c8a4:	str	x24, [x23, #24]
  42c8a8:	ldr	w25, [x21, #8]
  42c8ac:	cbz	w25, 42c9d0 <argp_help@@Base+0x900>
  42c8b0:	add	x26, x28, #0x18
  42c8b4:	ldr	w27, [x26]
  42c8b8:	tbnz	w27, #3, 42c9c4 <argp_help@@Base+0x8f4>
  42c8bc:	ldur	w24, [x26, #-16]
  42c8c0:	sub	w8, w24, #0x1
  42c8c4:	cmp	w8, #0xfe
  42c8c8:	b.hi	42c9c4 <argp_help@@Base+0x8f4>  // b.pmore
  42c8cc:	bl	404930 <__ctype_b_loc@plt>
  42c8d0:	ldr	x8, [x0]
  42c8d4:	ldrh	w8, [x8, x24, lsl #1]
  42c8d8:	tbz	w8, #14, 42c9c4 <argp_help@@Base+0x8f4>
  42c8dc:	ldrb	w8, [x19]
  42c8e0:	cmp	w24, w8
  42c8e4:	b.ne	42c9c4 <argp_help@@Base+0x8f4>  // b.any
  42c8e8:	tbnz	w27, #1, 42c9c0 <argp_help@@Base+0x8f0>
  42c8ec:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42c8f0:	ldr	w0, [x8, #464]
  42c8f4:	sub	x1, x29, #0x30
  42c8f8:	bl	42e830 <argp_failure@@Base+0x1564>
  42c8fc:	ldp	x8, x9, [x23, #56]
  42c900:	cmp	x8, x9
  42c904:	b.cc	42c920 <argp_help@@Base+0x850>  // b.lo, b.ul, b.last
  42c908:	mov	w1, #0x1                   	// #1
  42c90c:	mov	x0, x23
  42c910:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42c914:	cbz	w0, 42c934 <argp_help@@Base+0x864>
  42c918:	ldur	x8, [x29, #-88]
  42c91c:	ldr	x8, [x8]
  42c920:	ldur	x10, [x29, #-88]
  42c924:	add	x9, x8, #0x1
  42c928:	str	x9, [x10]
  42c92c:	mov	w9, #0x2d                  	// #45
  42c930:	strb	w9, [x8]
  42c934:	ldp	x8, x9, [x23, #56]
  42c938:	ldrb	w27, [x19]
  42c93c:	cmp	x8, x9
  42c940:	b.cc	42c95c <argp_help@@Base+0x88c>  // b.lo, b.ul, b.last
  42c944:	mov	w1, #0x1                   	// #1
  42c948:	mov	x0, x23
  42c94c:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42c950:	cbz	w0, 42c96c <argp_help@@Base+0x89c>
  42c954:	ldur	x8, [x29, #-88]
  42c958:	ldr	x8, [x8]
  42c95c:	ldur	x10, [x29, #-88]
  42c960:	add	x9, x8, #0x1
  42c964:	str	x9, [x10]
  42c968:	strb	w27, [x8]
  42c96c:	cbz	w20, 42c990 <argp_help@@Base+0x8c0>
  42c970:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42c974:	ldr	w8, [x8, #456]
  42c978:	cbnz	w8, 42c990 <argp_help@@Base+0x8c0>
  42c97c:	ldr	x8, [x28, #16]
  42c980:	cbz	x8, 42c9c0 <argp_help@@Base+0x8f0>
  42c984:	mov	w8, #0x1                   	// #1
  42c988:	stur	w8, [x29, #-52]
  42c98c:	b	42c9c0 <argp_help@@Base+0x8f0>
  42c990:	cbz	x22, 42c9a0 <argp_help@@Base+0x8d0>
  42c994:	ldr	x8, [x22]
  42c998:	ldr	x3, [x8, #48]
  42c99c:	b	42c9a4 <argp_help@@Base+0x8d4>
  42c9a0:	mov	x3, xzr
  42c9a4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42c9a8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  42c9ac:	mov	x0, x28
  42c9b0:	add	x1, x1, #0xb23
  42c9b4:	add	x2, x2, #0xfa9
  42c9b8:	mov	x4, x23
  42c9bc:	bl	42e98c <argp_failure@@Base+0x16c0>
  42c9c0:	add	x19, x19, #0x1
  42c9c4:	subs	w25, w25, #0x1
  42c9c8:	add	x26, x26, #0x30
  42c9cc:	b.ne	42c8b4 <argp_help@@Base+0x7e4>  // b.any
  42c9d0:	ldrb	w8, [x28, #24]
  42c9d4:	tbnz	w8, #3, 42ca80 <argp_help@@Base+0x9b0>
  42c9d8:	ldp	x9, x8, [x23, #48]
  42c9dc:	ldr	x10, [x23, #32]
  42c9e0:	adrp	x11, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42c9e4:	ldrsw	x19, [x11, #468]
  42c9e8:	sub	x8, x8, x9
  42c9ec:	cmp	x8, x10
  42c9f0:	b.ls	42c9fc <argp_help@@Base+0x92c>  // b.plast
  42c9f4:	mov	x0, x23
  42c9f8:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42c9fc:	str	x19, [x23, #24]
  42ca00:	ldr	w19, [x21, #8]
  42ca04:	cbz	w19, 42cb54 <argp_help@@Base+0xa84>
  42ca08:	mov	x20, x28
  42ca0c:	ldr	x8, [x20]
  42ca10:	cbz	x8, 42ca70 <argp_help@@Base+0x9a0>
  42ca14:	ldrb	w8, [x20, #24]
  42ca18:	tbnz	w8, #1, 42ca70 <argp_help@@Base+0x9a0>
  42ca1c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42ca20:	ldr	w0, [x8, #468]
  42ca24:	sub	x1, x29, #0x30
  42ca28:	bl	42e830 <argp_failure@@Base+0x1564>
  42ca2c:	ldr	x2, [x20]
  42ca30:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42ca34:	mov	x0, x23
  42ca38:	add	x1, x1, #0xfae
  42ca3c:	bl	447c2c <_obstack_memory_used@@Base+0xc434>
  42ca40:	cbz	x22, 42ca50 <argp_help@@Base+0x980>
  42ca44:	ldr	x8, [x22]
  42ca48:	ldr	x3, [x8, #48]
  42ca4c:	b	42ca54 <argp_help@@Base+0x984>
  42ca50:	mov	x3, xzr
  42ca54:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  42ca58:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  42ca5c:	mov	x0, x28
  42ca60:	add	x1, x1, #0x33d
  42ca64:	add	x2, x2, #0xfb3
  42ca68:	mov	x4, x23
  42ca6c:	bl	42e98c <argp_failure@@Base+0x16c0>
  42ca70:	subs	w19, w19, #0x1
  42ca74:	add	x20, x20, #0x30
  42ca78:	b.ne	42ca0c <argp_help@@Base+0x93c>  // b.any
  42ca7c:	b	42cb54 <argp_help@@Base+0xa84>
  42ca80:	ldp	x9, x8, [x23, #48]
  42ca84:	ldr	x10, [x23, #32]
  42ca88:	adrp	x11, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42ca8c:	ldrsw	x19, [x11, #472]
  42ca90:	sub	x8, x8, x9
  42ca94:	cmp	x8, x10
  42ca98:	b.ls	42caa4 <argp_help@@Base+0x9d4>  // b.plast
  42ca9c:	mov	x0, x23
  42caa0:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42caa4:	str	x19, [x23, #24]
  42caa8:	ldr	w20, [x21, #8]
  42caac:	cbz	w20, 42cb54 <argp_help@@Base+0xa84>
  42cab0:	mov	x26, x28
  42cab4:	ldr	x8, [x26]
  42cab8:	cbz	x8, 42cb48 <argp_help@@Base+0xa78>
  42cabc:	ldrb	w8, [x26, #24]
  42cac0:	tbnz	w8, #1, 42cb48 <argp_help@@Base+0xa78>
  42cac4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42cac8:	ldr	w0, [x8, #472]
  42cacc:	sub	x1, x29, #0x30
  42cad0:	bl	42e830 <argp_failure@@Base+0x1564>
  42cad4:	cbz	x22, 42cae4 <argp_help@@Base+0xa14>
  42cad8:	ldr	x8, [x22]
  42cadc:	ldr	x0, [x8, #48]
  42cae0:	b	42cae8 <argp_help@@Base+0xa18>
  42cae4:	mov	x0, xzr
  42cae8:	ldr	x1, [x26]
  42caec:	mov	w2, #0x5                   	// #5
  42caf0:	bl	404bd0 <dcgettext@plt>
  42caf4:	mov	x19, x0
  42caf8:	bl	404170 <strlen@plt>
  42cafc:	cbz	x0, 42cb48 <argp_help@@Base+0xa78>
  42cb00:	mov	x25, x0
  42cb04:	ldp	x0, x8, [x23, #56]
  42cb08:	add	x9, x0, x25
  42cb0c:	cmp	x9, x8
  42cb10:	b.ls	42cb2c <argp_help@@Base+0xa5c>  // b.plast
  42cb14:	mov	x0, x23
  42cb18:	mov	x1, x25
  42cb1c:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42cb20:	cbz	w0, 42cb48 <argp_help@@Base+0xa78>
  42cb24:	ldur	x8, [x29, #-88]
  42cb28:	ldr	x0, [x8]
  42cb2c:	mov	x1, x19
  42cb30:	mov	x2, x25
  42cb34:	bl	4040f0 <memcpy@plt>
  42cb38:	ldur	x9, [x29, #-88]
  42cb3c:	ldr	x8, [x9]
  42cb40:	add	x8, x8, x25
  42cb44:	str	x8, [x9]
  42cb48:	subs	w20, w20, #0x1
  42cb4c:	add	x26, x26, #0x30
  42cb50:	b.ne	42cab4 <argp_help@@Base+0x9e4>  // b.any
  42cb54:	ldp	x9, x8, [x23, #48]
  42cb58:	ldr	x10, [x23, #32]
  42cb5c:	sub	x8, x8, x9
  42cb60:	cmp	x8, x10
  42cb64:	b.ls	42cb70 <argp_help@@Base+0xaa0>  // b.plast
  42cb68:	mov	x0, x23
  42cb6c:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42cb70:	str	xzr, [x23, #8]
  42cb74:	ldur	w8, [x29, #-24]
  42cb78:	cbz	w8, 42cbc0 <argp_help@@Base+0xaf0>
  42cb7c:	ldrb	w8, [x28, #24]
  42cb80:	tbnz	w8, #3, 42cba4 <argp_help@@Base+0xad4>
  42cb84:	ldr	w19, [x28, #8]
  42cb88:	sub	w8, w19, #0x1
  42cb8c:	cmp	w8, #0xfe
  42cb90:	b.hi	42cba4 <argp_help@@Base+0xad4>  // b.pmore
  42cb94:	bl	404930 <__ctype_b_loc@plt>
  42cb98:	ldr	x8, [x0]
  42cb9c:	ldrh	w8, [x8, x19, lsl #1]
  42cba0:	tbnz	w8, #14, 42ce38 <argp_help@@Base+0xd68>
  42cba4:	ldr	x8, [x28]
  42cba8:	cbnz	x8, 42ce38 <argp_help@@Base+0xd68>
  42cbac:	ldr	x0, [x28, #32]
  42cbb0:	ldr	x1, [x21, #40]
  42cbb4:	sub	x2, x29, #0x30
  42cbb8:	bl	42e9f4 <argp_failure@@Base+0x1728>
  42cbbc:	b	42ce34 <argp_help@@Base+0xd64>
  42cbc0:	ldr	x1, [x28, #32]
  42cbc4:	cbz	x1, 42cbd8 <argp_help@@Base+0xb08>
  42cbc8:	cbz	x22, 42cbe8 <argp_help@@Base+0xb18>
  42cbcc:	ldr	x8, [x22]
  42cbd0:	ldr	x0, [x8, #48]
  42cbd4:	b	42cbec <argp_help@@Base+0xb1c>
  42cbd8:	mov	x25, xzr
  42cbdc:	b	42cbf8 <argp_help@@Base+0xb28>
  42cbe0:	mov	w20, #0x1                   	// #1
  42cbe4:	b	42c880 <argp_help@@Base+0x7b0>
  42cbe8:	mov	x0, xzr
  42cbec:	mov	w2, #0x5                   	// #5
  42cbf0:	bl	404bd0 <dcgettext@plt>
  42cbf4:	mov	x25, x0
  42cbf8:	ldr	x26, [x21, #40]
  42cbfc:	mov	x19, x25
  42cc00:	cbz	x26, 42cc38 <argp_help@@Base+0xb68>
  42cc04:	ldr	x8, [x26, #40]
  42cc08:	mov	x19, x25
  42cc0c:	cbz	x8, 42cc38 <argp_help@@Base+0xb68>
  42cc10:	ldr	w19, [x28, #8]
  42cc14:	mov	x0, x26
  42cc18:	mov	x1, x22
  42cc1c:	bl	42f768 <argp_parse@@Base+0xaac>
  42cc20:	ldr	x8, [x26, #40]
  42cc24:	mov	x2, x0
  42cc28:	mov	w0, w19
  42cc2c:	mov	x1, x25
  42cc30:	blr	x8
  42cc34:	mov	x19, x0
  42cc38:	cbz	x19, 42cdd8 <argp_help@@Base+0xd08>
  42cc3c:	ldrb	w8, [x19]
  42cc40:	cbz	w8, 42cdc8 <argp_help@@Base+0xcf8>
  42cc44:	ldp	x10, x9, [x23, #48]
  42cc48:	ldr	x8, [x23, #32]
  42cc4c:	sub	x9, x9, x10
  42cc50:	cmp	x9, x8
  42cc54:	b.ls	42cc6c <argp_help@@Base+0xb9c>  // b.plast
  42cc58:	mov	x0, x23
  42cc5c:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42cc60:	ldp	x10, x9, [x23, #48]
  42cc64:	ldr	x8, [x23, #32]
  42cc68:	sub	x9, x9, x10
  42cc6c:	adrp	x11, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42cc70:	ldr	x10, [x23, #40]
  42cc74:	ldr	w1, [x11, #476]
  42cc78:	cmp	x10, #0x0
  42cc7c:	sxtw	x28, w1
  42cc80:	csel	w20, w10, wzr, gt
  42cc84:	cmp	x9, x8
  42cc88:	mov	x26, x28
  42cc8c:	b.ls	42ccb0 <argp_help@@Base+0xbe0>  // b.plast
  42cc90:	mov	x0, x23
  42cc94:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42cc98:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42cc9c:	ldr	w1, [x8, #476]
  42cca0:	ldp	x10, x9, [x23, #48]
  42cca4:	ldr	x8, [x23, #32]
  42cca8:	sxtw	x26, w1
  42ccac:	sub	x9, x9, x10
  42ccb0:	cmp	x9, x8
  42ccb4:	str	x28, [x23, #8]
  42ccb8:	b.ls	42cccc <argp_help@@Base+0xbfc>  // b.plast
  42ccbc:	mov	x0, x23
  42ccc0:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42ccc4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42ccc8:	ldr	w1, [x8, #476]
  42cccc:	add	w8, w1, #0x3
  42ccd0:	cmp	w8, w20
  42ccd4:	str	x26, [x23, #24]
  42ccd8:	b.cs	42cd18 <argp_help@@Base+0xc48>  // b.hs, b.nlast
  42ccdc:	ldp	x8, x9, [x23, #56]
  42cce0:	cmp	x8, x9
  42cce4:	b.cc	42cd00 <argp_help@@Base+0xc30>  // b.lo, b.ul, b.last
  42cce8:	mov	w1, #0x1                   	// #1
  42ccec:	mov	x0, x23
  42ccf0:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42ccf4:	cbz	w0, 42cd74 <argp_help@@Base+0xca4>
  42ccf8:	ldur	x8, [x29, #-88]
  42ccfc:	ldr	x8, [x8]
  42cd00:	ldur	x10, [x29, #-88]
  42cd04:	add	x9, x8, #0x1
  42cd08:	str	x9, [x10]
  42cd0c:	mov	w9, #0xa                   	// #10
  42cd10:	strb	w9, [x8]
  42cd14:	b	42cd74 <argp_help@@Base+0xca4>
  42cd18:	cmp	w1, w20
  42cd1c:	b.ls	42cd2c <argp_help@@Base+0xc5c>  // b.plast
  42cd20:	mov	x0, x23
  42cd24:	bl	42ec20 <argp_failure@@Base+0x1954>
  42cd28:	b	42cd74 <argp_help@@Base+0xca4>
  42cd2c:	ldp	x8, x9, [x23, #56]
  42cd30:	add	x10, x8, #0x3
  42cd34:	cmp	x10, x9
  42cd38:	b.ls	42cd54 <argp_help@@Base+0xc84>  // b.plast
  42cd3c:	mov	w1, #0x3                   	// #3
  42cd40:	mov	x0, x23
  42cd44:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42cd48:	cbz	w0, 42cd74 <argp_help@@Base+0xca4>
  42cd4c:	ldur	x8, [x29, #-88]
  42cd50:	ldr	x8, [x8]
  42cd54:	mov	w9, #0x20                  	// #32
  42cd58:	strb	w9, [x8, #2]
  42cd5c:	mov	w9, #0x2020                	// #8224
  42cd60:	strh	w9, [x8]
  42cd64:	ldur	x9, [x29, #-88]
  42cd68:	ldr	x8, [x9]
  42cd6c:	add	x8, x8, #0x3
  42cd70:	str	x8, [x9]
  42cd74:	mov	x0, x19
  42cd78:	bl	404170 <strlen@plt>
  42cd7c:	cbz	x0, 42cdc8 <argp_help@@Base+0xcf8>
  42cd80:	mov	x28, x0
  42cd84:	ldp	x0, x8, [x23, #56]
  42cd88:	add	x9, x0, x28
  42cd8c:	cmp	x9, x8
  42cd90:	b.ls	42cdac <argp_help@@Base+0xcdc>  // b.plast
  42cd94:	mov	x0, x23
  42cd98:	mov	x1, x28
  42cd9c:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42cda0:	cbz	w0, 42cdc8 <argp_help@@Base+0xcf8>
  42cda4:	ldur	x8, [x29, #-88]
  42cda8:	ldr	x0, [x8]
  42cdac:	mov	x1, x19
  42cdb0:	mov	x2, x28
  42cdb4:	bl	4040f0 <memcpy@plt>
  42cdb8:	ldur	x9, [x29, #-88]
  42cdbc:	ldr	x8, [x9]
  42cdc0:	add	x8, x8, x28
  42cdc4:	str	x8, [x9]
  42cdc8:	cmp	x19, x25
  42cdcc:	b.eq	42cdd8 <argp_help@@Base+0xd08>  // b.none
  42cdd0:	mov	x0, x19
  42cdd4:	bl	4049b0 <free@plt>
  42cdd8:	ldp	x9, x8, [x23, #48]
  42cddc:	ldr	x10, [x23, #32]
  42cde0:	sub	x9, x8, x9
  42cde4:	cmp	x9, x10
  42cde8:	b.ls	42cdf8 <argp_help@@Base+0xd28>  // b.plast
  42cdec:	mov	x0, x23
  42cdf0:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42cdf4:	ldr	x8, [x23, #56]
  42cdf8:	ldr	x9, [x23, #64]
  42cdfc:	str	xzr, [x23, #8]
  42ce00:	cmp	x8, x9
  42ce04:	b.cc	42ce20 <argp_help@@Base+0xd50>  // b.lo, b.ul, b.last
  42ce08:	mov	w1, #0x1                   	// #1
  42ce0c:	mov	x0, x23
  42ce10:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42ce14:	cbz	w0, 42ce34 <argp_help@@Base+0xd64>
  42ce18:	ldur	x8, [x29, #-88]
  42ce1c:	ldr	x8, [x8]
  42ce20:	ldur	x10, [x29, #-88]
  42ce24:	add	x9, x8, #0x1
  42ce28:	str	x9, [x10]
  42ce2c:	mov	w9, #0xa                   	// #10
  42ce30:	strb	w9, [x8]
  42ce34:	stur	x21, [x29, #-64]
  42ce38:	ldp	x10, x9, [x23, #48]
  42ce3c:	ldr	x8, [x23, #32]
  42ce40:	sub	x9, x9, x10
  42ce44:	ldur	x10, [x29, #-120]
  42ce48:	cmp	x9, x8
  42ce4c:	sxtw	x19, w10
  42ce50:	b.ls	42ce68 <argp_help@@Base+0xd98>  // b.plast
  42ce54:	mov	x0, x23
  42ce58:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42ce5c:	ldp	x10, x9, [x23, #48]
  42ce60:	ldr	x8, [x23, #32]
  42ce64:	sub	x9, x9, x10
  42ce68:	ldur	x10, [x29, #-112]
  42ce6c:	str	x19, [x23, #8]
  42ce70:	cmp	x9, x8
  42ce74:	sxtw	x19, w10
  42ce78:	b.ls	42ce84 <argp_help@@Base+0xdb4>  // b.plast
  42ce7c:	mov	x0, x23
  42ce80:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42ce84:	ldur	w9, [x29, #-100]
  42ce88:	add	x21, x21, #0x38
  42ce8c:	str	x19, [x23, #24]
  42ce90:	subs	w9, w9, #0x1
  42ce94:	b.ne	42c7f8 <argp_help@@Base+0x728>  // b.any
  42ce98:	ldur	w8, [x29, #-52]
  42ce9c:	ldur	x21, [x29, #-128]
  42cea0:	ldur	w27, [x29, #-76]
  42cea4:	cbz	w8, 42d04c <argp_help@@Base+0xf7c>
  42cea8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42ceac:	ldr	w8, [x8, #460]
  42ceb0:	cbz	w8, 42d04c <argp_help@@Base+0xf7c>
  42ceb4:	cbz	x22, 42cf48 <argp_help@@Base+0xe78>
  42ceb8:	ldr	x8, [x22]
  42cebc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42cec0:	add	x1, x1, #0xf35
  42cec4:	mov	w2, #0x5                   	// #5
  42cec8:	ldr	x0, [x8, #48]
  42cecc:	bl	404bd0 <dcgettext@plt>
  42ced0:	ldr	x25, [x22]
  42ced4:	mov	x19, x0
  42ced8:	cbz	x25, 42cf68 <argp_help@@Base+0xe98>
  42cedc:	ldr	x8, [x25, #40]
  42cee0:	cbz	x8, 42cf68 <argp_help@@Base+0xe98>
  42cee4:	mov	x0, x25
  42cee8:	mov	x1, x22
  42ceec:	bl	42f768 <argp_parse@@Base+0xaac>
  42cef0:	ldr	x8, [x25, #40]
  42cef4:	mov	x2, x0
  42cef8:	mov	w0, #0x5                   	// #5
  42cefc:	movk	w0, #0x200, lsl #16
  42cf00:	mov	x1, x19
  42cf04:	blr	x8
  42cf08:	b	42cf60 <argp_help@@Base+0xe90>
  42cf0c:	ldr	x8, [x22]
  42cf10:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42cf14:	add	x1, x1, #0xdf6
  42cf18:	mov	w2, #0x5                   	// #5
  42cf1c:	ldr	x0, [x8, #48]
  42cf20:	bl	404bd0 <dcgettext@plt>
  42cf24:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x16808>
  42cf28:	mov	x3, x0
  42cf2c:	add	x4, x4, #0xe2a
  42cf30:	mov	x0, x22
  42cf34:	mov	w1, wzr
  42cf38:	mov	w2, wzr
  42cf3c:	mov	x5, x19
  42cf40:	bl	42d2cc <argp_failure@@Base>
  42cf44:	b	42c450 <argp_help@@Base+0x380>
  42cf48:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42cf4c:	add	x1, x1, #0xf35
  42cf50:	mov	w2, #0x5                   	// #5
  42cf54:	mov	x0, xzr
  42cf58:	bl	404bd0 <dcgettext@plt>
  42cf5c:	mov	x19, x0
  42cf60:	mov	x25, x0
  42cf64:	b	42cf6c <argp_help@@Base+0xe9c>
  42cf68:	mov	x25, x19
  42cf6c:	cbz	x25, 42d04c <argp_help@@Base+0xf7c>
  42cf70:	ldrb	w8, [x25]
  42cf74:	cbz	w8, 42d03c <argp_help@@Base+0xf6c>
  42cf78:	ldp	x8, x9, [x23, #56]
  42cf7c:	cmp	x8, x9
  42cf80:	b.cc	42cf9c <argp_help@@Base+0xecc>  // b.lo, b.ul, b.last
  42cf84:	mov	w1, #0x1                   	// #1
  42cf88:	mov	x0, x23
  42cf8c:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42cf90:	cbz	w0, 42cfb0 <argp_help@@Base+0xee0>
  42cf94:	ldur	x8, [x29, #-88]
  42cf98:	ldr	x8, [x8]
  42cf9c:	ldur	x11, [x29, #-88]
  42cfa0:	add	x9, x8, #0x1
  42cfa4:	mov	w10, #0xa                   	// #10
  42cfa8:	str	x9, [x11]
  42cfac:	strb	w10, [x8]
  42cfb0:	mov	x0, x25
  42cfb4:	bl	404170 <strlen@plt>
  42cfb8:	cbz	x0, 42d004 <argp_help@@Base+0xf34>
  42cfbc:	mov	x26, x0
  42cfc0:	ldp	x0, x8, [x23, #56]
  42cfc4:	add	x9, x0, x26
  42cfc8:	cmp	x9, x8
  42cfcc:	b.ls	42cfe8 <argp_help@@Base+0xf18>  // b.plast
  42cfd0:	mov	x0, x23
  42cfd4:	mov	x1, x26
  42cfd8:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42cfdc:	cbz	w0, 42d004 <argp_help@@Base+0xf34>
  42cfe0:	ldur	x8, [x29, #-88]
  42cfe4:	ldr	x0, [x8]
  42cfe8:	mov	x1, x25
  42cfec:	mov	x2, x26
  42cff0:	bl	4040f0 <memcpy@plt>
  42cff4:	ldur	x9, [x29, #-88]
  42cff8:	ldr	x8, [x9]
  42cffc:	add	x8, x8, x26
  42d000:	str	x8, [x9]
  42d004:	ldp	x8, x9, [x23, #56]
  42d008:	cmp	x8, x9
  42d00c:	b.cc	42d028 <argp_help@@Base+0xf58>  // b.lo, b.ul, b.last
  42d010:	mov	w1, #0x1                   	// #1
  42d014:	mov	x0, x23
  42d018:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42d01c:	cbz	w0, 42d03c <argp_help@@Base+0xf6c>
  42d020:	ldur	x8, [x29, #-88]
  42d024:	ldr	x8, [x8]
  42d028:	ldur	x11, [x29, #-88]
  42d02c:	add	x9, x8, #0x1
  42d030:	mov	w10, #0xa                   	// #10
  42d034:	str	x9, [x11]
  42d038:	strb	w10, [x8]
  42d03c:	cmp	x25, x19
  42d040:	b.eq	42d04c <argp_help@@Base+0xf7c>  // b.none
  42d044:	mov	x0, x25
  42d048:	bl	4049b0 <free@plt>
  42d04c:	mov	w19, #0x1                   	// #1
  42d050:	tbz	w27, #5, 42d074 <argp_help@@Base+0xfa4>
  42d054:	ldur	x0, [x29, #-72]
  42d058:	mov	w2, #0x1                   	// #1
  42d05c:	mov	x1, x22
  42d060:	mov	w3, w19
  42d064:	mov	w4, wzr
  42d068:	mov	x5, x23
  42d06c:	bl	42de0c <argp_failure@@Base+0xb40>
  42d070:	orr	w19, w0, w19
  42d074:	tbz	w27, #6, 42d0e0 <argp_help@@Base+0x1010>
  42d078:	adrp	x20, 46b000 <argp_program_version_hook@@Base+0x458>
  42d07c:	ldr	x8, [x20, #536]
  42d080:	cbz	x8, 42d0e0 <argp_help@@Base+0x1010>
  42d084:	cbz	w19, 42d0b8 <argp_help@@Base+0xfe8>
  42d088:	ldp	x8, x9, [x23, #56]
  42d08c:	cmp	x8, x9
  42d090:	b.cc	42d0a8 <argp_help@@Base+0xfd8>  // b.lo, b.ul, b.last
  42d094:	mov	w1, #0x1                   	// #1
  42d098:	mov	x0, x23
  42d09c:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42d0a0:	cbz	w0, 42d0b8 <argp_help@@Base+0xfe8>
  42d0a4:	ldr	x8, [x23, #56]
  42d0a8:	add	x9, x8, #0x1
  42d0ac:	mov	w10, #0xa                   	// #10
  42d0b0:	str	x9, [x23, #56]
  42d0b4:	strb	w10, [x8]
  42d0b8:	ldur	x8, [x29, #-72]
  42d0bc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42d0c0:	add	x1, x1, #0xd62
  42d0c4:	mov	w2, #0x5                   	// #5
  42d0c8:	ldr	x0, [x8, #48]
  42d0cc:	bl	404bd0 <dcgettext@plt>
  42d0d0:	ldr	x2, [x20, #536]
  42d0d4:	mov	x1, x0
  42d0d8:	mov	x0, x23
  42d0dc:	bl	447c2c <_obstack_memory_used@@Base+0xc434>
  42d0e0:	mov	x0, x21
  42d0e4:	bl	404500 <funlockfile@plt>
  42d0e8:	ldur	x0, [x29, #-96]
  42d0ec:	cbz	x0, 42d0f4 <argp_help@@Base+0x1024>
  42d0f0:	bl	42e1e4 <argp_failure@@Base+0xf18>
  42d0f4:	mov	x0, x23
  42d0f8:	bl	4476f0 <_obstack_memory_used@@Base+0xbef8>
  42d0fc:	mov	sp, x29
  42d100:	ldp	x20, x19, [sp, #80]
  42d104:	ldp	x22, x21, [sp, #64]
  42d108:	ldp	x24, x23, [sp, #48]
  42d10c:	ldp	x26, x25, [sp, #32]
  42d110:	ldp	x28, x27, [sp, #16]
  42d114:	ldp	x29, x30, [sp], #96
  42d118:	ret

000000000042d11c <argp_state_help@@Base>:
  42d11c:	stp	x29, x30, [sp, #-32]!
  42d120:	stp	x20, x19, [sp, #16]
  42d124:	mov	w19, w2
  42d128:	mov	x2, x1
  42d12c:	mov	x29, sp
  42d130:	cbz	x0, 42d170 <argp_state_help@@Base+0x54>
  42d134:	cbz	x2, 42d194 <argp_state_help@@Base+0x78>
  42d138:	ldr	w8, [x0, #28]
  42d13c:	mov	x20, x0
  42d140:	tbnz	w8, #1, 42d194 <argp_state_help@@Base+0x78>
  42d144:	ldr	x0, [x20]
  42d148:	ldr	x4, [x20, #64]
  42d14c:	lsl	w8, w8, #1
  42d150:	and	w8, w8, #0x80
  42d154:	orr	w19, w8, w19
  42d158:	mov	x1, x20
  42d15c:	mov	w3, w19
  42d160:	bl	42c0e4 <argp_help@@Base+0x14>
  42d164:	ldrb	w8, [x20, #28]
  42d168:	tbz	w8, #5, 42d18c <argp_state_help@@Base+0x70>
  42d16c:	b	42d194 <argp_state_help@@Base+0x78>
  42d170:	cbz	x2, 42d194 <argp_state_help@@Base+0x78>
  42d174:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42d178:	ldr	x4, [x8, #656]
  42d17c:	mov	x0, xzr
  42d180:	mov	x1, xzr
  42d184:	mov	w3, w19
  42d188:	bl	42c0e4 <argp_help@@Base+0x14>
  42d18c:	tbnz	w19, #8, 42d1a0 <argp_state_help@@Base+0x84>
  42d190:	tbnz	w19, #9, 42d1ac <argp_state_help@@Base+0x90>
  42d194:	ldp	x20, x19, [sp, #16]
  42d198:	ldp	x29, x30, [sp], #32
  42d19c:	ret
  42d1a0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42d1a4:	ldr	w0, [x8, #600]
  42d1a8:	bl	4041a0 <exit@plt>
  42d1ac:	mov	w0, wzr
  42d1b0:	bl	4041a0 <exit@plt>

000000000042d1b4 <argp_error@@Base>:
  42d1b4:	sub	sp, sp, #0x120
  42d1b8:	stp	x29, x30, [sp, #240]
  42d1bc:	stp	x20, x19, [sp, #272]
  42d1c0:	add	x29, sp, #0xf0
  42d1c4:	mov	x20, x1
  42d1c8:	mov	x19, x0
  42d1cc:	stp	x28, x21, [sp, #256]
  42d1d0:	stp	x2, x3, [x29, #-112]
  42d1d4:	stp	x4, x5, [x29, #-96]
  42d1d8:	stp	x6, x7, [x29, #-80]
  42d1dc:	stp	q1, q2, [sp, #16]
  42d1e0:	stp	q3, q4, [sp, #48]
  42d1e4:	str	q0, [sp]
  42d1e8:	stp	q5, q6, [sp, #80]
  42d1ec:	str	q7, [sp, #112]
  42d1f0:	cbz	x0, 42d204 <argp_error@@Base+0x50>
  42d1f4:	ldrb	w8, [x19, #28]
  42d1f8:	tbnz	w8, #1, 42d2b8 <argp_error@@Base+0x104>
  42d1fc:	add	x8, x19, #0x48
  42d200:	b	42d20c <argp_error@@Base+0x58>
  42d204:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42d208:	add	x8, x8, #0x270
  42d20c:	ldr	x21, [x8]
  42d210:	cbz	x21, 42d2b8 <argp_error@@Base+0x104>
  42d214:	mov	x0, x21
  42d218:	bl	404210 <flockfile@plt>
  42d21c:	mov	x8, #0xffffffffffffffd0    	// #-48
  42d220:	mov	x9, sp
  42d224:	sub	x10, x29, #0x70
  42d228:	adrp	x13, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42d22c:	movk	x8, #0xff80, lsl #32
  42d230:	add	x11, x29, #0x30
  42d234:	add	x12, x19, #0x40
  42d238:	add	x13, x13, #0x290
  42d23c:	cmp	x19, #0x0
  42d240:	add	x9, x9, #0x80
  42d244:	add	x10, x10, #0x30
  42d248:	stp	x9, x8, [x29, #-48]
  42d24c:	stp	x11, x10, [x29, #-64]
  42d250:	csel	x8, x12, x13, ne  // ne = any
  42d254:	ldr	x0, [x8]
  42d258:	mov	x1, x21
  42d25c:	bl	404bf0 <fputs_unlocked@plt>
  42d260:	mov	w0, #0x3a                  	// #58
  42d264:	mov	x1, x21
  42d268:	bl	4043e0 <putc_unlocked@plt>
  42d26c:	mov	w0, #0x20                  	// #32
  42d270:	mov	x1, x21
  42d274:	bl	4043e0 <putc_unlocked@plt>
  42d278:	ldp	q0, q1, [x29, #-64]
  42d27c:	sub	x3, x29, #0x20
  42d280:	mov	w1, #0x1                   	// #1
  42d284:	mov	x0, x21
  42d288:	mov	x2, x20
  42d28c:	stp	q0, q1, [x29, #-32]
  42d290:	bl	404670 <__vfprintf_chk@plt>
  42d294:	mov	w0, #0xa                   	// #10
  42d298:	mov	x1, x21
  42d29c:	bl	4043e0 <putc_unlocked@plt>
  42d2a0:	mov	w2, #0x104                 	// #260
  42d2a4:	mov	x0, x19
  42d2a8:	mov	x1, x21
  42d2ac:	bl	42d11c <argp_state_help@@Base>
  42d2b0:	mov	x0, x21
  42d2b4:	bl	404500 <funlockfile@plt>
  42d2b8:	ldp	x20, x19, [sp, #272]
  42d2bc:	ldp	x28, x21, [sp, #256]
  42d2c0:	ldp	x29, x30, [sp, #240]
  42d2c4:	add	sp, sp, #0x120
  42d2c8:	ret

000000000042d2cc <argp_failure@@Base>:
  42d2cc:	sub	sp, sp, #0x1d0
  42d2d0:	stp	x28, x23, [sp, #416]
  42d2d4:	stp	x22, x21, [sp, #432]
  42d2d8:	stp	x20, x19, [sp, #448]
  42d2dc:	mov	x23, x3
  42d2e0:	mov	w22, w2
  42d2e4:	mov	w19, w1
  42d2e8:	mov	x20, x0
  42d2ec:	stp	x29, x30, [sp, #400]
  42d2f0:	add	x29, sp, #0x190
  42d2f4:	stp	x4, x5, [sp, #128]
  42d2f8:	stp	x6, x7, [sp, #144]
  42d2fc:	stp	q0, q1, [sp]
  42d300:	stp	q2, q3, [sp, #32]
  42d304:	stp	q4, q5, [sp, #64]
  42d308:	stp	q6, q7, [sp, #96]
  42d30c:	cbz	x0, 42d320 <argp_failure@@Base+0x54>
  42d310:	ldrb	w8, [x20, #28]
  42d314:	tbnz	w8, #1, 42d434 <argp_failure@@Base+0x168>
  42d318:	add	x8, x20, #0x48
  42d31c:	b	42d328 <argp_failure@@Base+0x5c>
  42d320:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42d324:	add	x8, x8, #0x270
  42d328:	ldr	x21, [x8]
  42d32c:	cbz	x21, 42d434 <argp_failure@@Base+0x168>
  42d330:	mov	x0, x21
  42d334:	bl	404210 <flockfile@plt>
  42d338:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42d33c:	add	x8, x20, #0x40
  42d340:	add	x9, x9, #0x290
  42d344:	cmp	x20, #0x0
  42d348:	csel	x8, x8, x9, ne  // ne = any
  42d34c:	ldr	x0, [x8]
  42d350:	mov	x1, x21
  42d354:	bl	404bf0 <fputs_unlocked@plt>
  42d358:	cbz	x23, 42d3b4 <argp_failure@@Base+0xe8>
  42d35c:	mov	x8, #0xffffffffffffffe0    	// #-32
  42d360:	mov	x10, sp
  42d364:	add	x11, sp, #0x80
  42d368:	movk	x8, #0xff80, lsl #32
  42d36c:	add	x9, x29, #0x40
  42d370:	add	x10, x10, #0x80
  42d374:	add	x11, x11, #0x20
  42d378:	mov	w0, #0x3a                  	// #58
  42d37c:	mov	x1, x21
  42d380:	stp	x10, x8, [x29, #-16]
  42d384:	stp	x9, x11, [x29, #-32]
  42d388:	bl	4043e0 <putc_unlocked@plt>
  42d38c:	mov	w0, #0x20                  	// #32
  42d390:	mov	x1, x21
  42d394:	bl	4043e0 <putc_unlocked@plt>
  42d398:	ldp	q0, q1, [x29, #-32]
  42d39c:	add	x3, sp, #0xa0
  42d3a0:	mov	w1, #0x1                   	// #1
  42d3a4:	mov	x0, x21
  42d3a8:	mov	x2, x23
  42d3ac:	stp	q0, q1, [sp, #160]
  42d3b0:	bl	404670 <__vfprintf_chk@plt>
  42d3b4:	cbz	w22, 42d410 <argp_failure@@Base+0x144>
  42d3b8:	mov	w0, #0x3a                  	// #58
  42d3bc:	mov	x1, x21
  42d3c0:	bl	4043e0 <putc_unlocked@plt>
  42d3c4:	mov	w0, #0x20                  	// #32
  42d3c8:	mov	x1, x21
  42d3cc:	bl	4043e0 <putc_unlocked@plt>
  42d3d0:	add	x1, sp, #0xa0
  42d3d4:	mov	w2, #0xc8                  	// #200
  42d3d8:	mov	w0, w22
  42d3dc:	bl	404660 <strerror_r@plt>
  42d3e0:	cbnz	x0, 42d408 <argp_failure@@Base+0x13c>
  42d3e4:	mov	w0, w22
  42d3e8:	bl	404790 <strerror@plt>
  42d3ec:	cbnz	x0, 42d408 <argp_failure@@Base+0x13c>
  42d3f0:	ldr	x8, [x20]
  42d3f4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42d3f8:	add	x1, x1, #0xcf6
  42d3fc:	mov	w2, #0x5                   	// #5
  42d400:	ldr	x0, [x8, #48]
  42d404:	bl	404bd0 <dcgettext@plt>
  42d408:	mov	x1, x21
  42d40c:	bl	404bf0 <fputs_unlocked@plt>
  42d410:	mov	w0, #0xa                   	// #10
  42d414:	mov	x1, x21
  42d418:	bl	4043e0 <putc_unlocked@plt>
  42d41c:	mov	x0, x21
  42d420:	bl	404500 <funlockfile@plt>
  42d424:	cbz	w19, 42d434 <argp_failure@@Base+0x168>
  42d428:	cbz	x20, 42d44c <argp_failure@@Base+0x180>
  42d42c:	ldrb	w8, [x20, #28]
  42d430:	tbz	w8, #5, 42d44c <argp_failure@@Base+0x180>
  42d434:	ldp	x20, x19, [sp, #448]
  42d438:	ldp	x22, x21, [sp, #432]
  42d43c:	ldp	x28, x23, [sp, #416]
  42d440:	ldp	x29, x30, [sp, #400]
  42d444:	add	sp, sp, #0x1d0
  42d448:	ret
  42d44c:	mov	w0, w19
  42d450:	bl	4041a0 <exit@plt>
  42d454:	sub	sp, sp, #0xa0
  42d458:	stp	x29, x30, [sp, #64]
  42d45c:	stp	x28, x27, [sp, #80]
  42d460:	stp	x26, x25, [sp, #96]
  42d464:	stp	x24, x23, [sp, #112]
  42d468:	stp	x22, x21, [sp, #128]
  42d46c:	stp	x20, x19, [sp, #144]
  42d470:	ldr	x27, [x0, #32]
  42d474:	ldr	x24, [x0]
  42d478:	mov	x26, x0
  42d47c:	mov	w0, #0x20                  	// #32
  42d480:	add	x29, sp, #0x40
  42d484:	mov	x28, x1
  42d488:	bl	4044d0 <malloc@plt>
  42d48c:	cbz	x0, 42d904 <argp_failure@@Base+0x638>
  42d490:	mov	x8, x0
  42d494:	mov	x21, x0
  42d498:	str	xzr, [x8, #24]!
  42d49c:	stur	x8, [x29, #-16]
  42d4a0:	stur	wzr, [x8, #-16]
  42d4a4:	cbz	x24, 42d640 <argp_failure@@Base+0x374>
  42d4a8:	ldrb	w8, [x24, #24]
  42d4ac:	tbnz	w8, #2, 42d924 <argp_failure@@Base+0x658>
  42d4b0:	mov	w22, wzr
  42d4b4:	mov	w19, wzr
  42d4b8:	add	x23, x24, #0x28
  42d4bc:	ldur	w25, [x23, #-32]
  42d4c0:	cbnz	w25, 42d4dc <argp_failure@@Base+0x210>
  42d4c4:	ldur	x8, [x23, #-40]
  42d4c8:	cbnz	x8, 42d4dc <argp_failure@@Base+0x210>
  42d4cc:	ldur	x8, [x23, #-8]
  42d4d0:	cbnz	x8, 42d4dc <argp_failure@@Base+0x210>
  42d4d4:	ldr	w8, [x23]
  42d4d8:	cbz	w8, 42d518 <argp_failure@@Base+0x24c>
  42d4dc:	ldur	w8, [x23, #-16]
  42d4e0:	tbnz	w8, #2, 42d4ec <argp_failure@@Base+0x220>
  42d4e4:	add	w22, w22, #0x1
  42d4e8:	str	w22, [x21, #8]
  42d4ec:	sub	w9, w25, #0x1
  42d4f0:	cmp	w9, #0xfe
  42d4f4:	b.hi	42d510 <argp_failure@@Base+0x244>  // b.pmore
  42d4f8:	tbnz	w8, #3, 42d510 <argp_failure@@Base+0x244>
  42d4fc:	bl	404930 <__ctype_b_loc@plt>
  42d500:	ldr	x8, [x0]
  42d504:	ldrh	w8, [x8, x25, lsl #1]
  42d508:	tbz	w8, #14, 42d510 <argp_failure@@Base+0x244>
  42d50c:	add	w19, w19, #0x1
  42d510:	add	x23, x23, #0x30
  42d514:	b	42d4bc <argp_failure@@Base+0x1f0>
  42d518:	mov	w8, #0x38                  	// #56
  42d51c:	umull	x0, w22, w8
  42d520:	bl	4044d0 <malloc@plt>
  42d524:	mov	x22, x0
  42d528:	str	x0, [x21]
  42d52c:	add	w0, w19, #0x1
  42d530:	bl	4044d0 <malloc@plt>
  42d534:	str	x0, [x21, #16]
  42d538:	cbz	x22, 42d8e4 <argp_failure@@Base+0x618>
  42d53c:	mov	x23, x0
  42d540:	cbz	x0, 42d8e4 <argp_failure@@Base+0x618>
  42d544:	mov	w8, wzr
  42d548:	ldr	w9, [x24, #8]
  42d54c:	cbnz	w9, 42d568 <argp_failure@@Base+0x29c>
  42d550:	ldr	x10, [x24]
  42d554:	cbnz	x10, 42d568 <argp_failure@@Base+0x29c>
  42d558:	ldr	x10, [x24, #32]
  42d55c:	cbnz	x10, 42d568 <argp_failure@@Base+0x29c>
  42d560:	ldr	w10, [x24, #40]
  42d564:	cbz	w10, 42d63c <argp_failure@@Base+0x370>
  42d568:	str	x24, [x22]
  42d56c:	str	wzr, [x22, #8]
  42d570:	str	x23, [x22, #16]
  42d574:	ldr	w25, [x24, #40]
  42d578:	cbnz	w25, 42d594 <argp_failure@@Base+0x2c8>
  42d57c:	ldr	x10, [x24]
  42d580:	cbz	x10, 42d58c <argp_failure@@Base+0x2c0>
  42d584:	mov	w25, w8
  42d588:	b	42d594 <argp_failure@@Base+0x2c8>
  42d58c:	cmp	w9, #0x0
  42d590:	cinc	w25, w8, eq  // eq = none
  42d594:	mov	w9, wzr
  42d598:	str	w25, [x22, #24]
  42d59c:	stp	x28, x26, [x22, #32]
  42d5a0:	add	w8, w9, #0x1
  42d5a4:	str	w8, [x22, #8]
  42d5a8:	ldrb	w8, [x24, #24]
  42d5ac:	tbnz	w8, #3, 42d5f4 <argp_failure@@Base+0x328>
  42d5b0:	ldr	w19, [x24, #8]
  42d5b4:	sub	w8, w19, #0x1
  42d5b8:	cmp	w8, #0xfe
  42d5bc:	b.hi	42d5f4 <argp_failure@@Base+0x328>  // b.pmore
  42d5c0:	bl	404930 <__ctype_b_loc@plt>
  42d5c4:	ldr	x8, [x0]
  42d5c8:	ldrh	w8, [x8, x19, lsl #1]
  42d5cc:	tbz	w8, #14, 42d5f4 <argp_failure@@Base+0x328>
  42d5d0:	ldr	x8, [x21, #16]
  42d5d4:	cmp	x8, x23
  42d5d8:	b.cs	42d5f0 <argp_failure@@Base+0x324>  // b.hs, b.nlast
  42d5dc:	ldrb	w9, [x8], #1
  42d5e0:	cmp	w9, w19, uxtb
  42d5e4:	b.eq	42d5f4 <argp_failure@@Base+0x328>  // b.none
  42d5e8:	cmp	x23, x8
  42d5ec:	b.ne	42d5dc <argp_failure@@Base+0x310>  // b.any
  42d5f0:	strb	w19, [x23], #1
  42d5f4:	ldr	w9, [x24, #56]
  42d5f8:	add	x8, x24, #0x30
  42d5fc:	cbnz	w9, 42d618 <argp_failure@@Base+0x34c>
  42d600:	ldr	x9, [x8]
  42d604:	cbnz	x9, 42d618 <argp_failure@@Base+0x34c>
  42d608:	ldr	x9, [x24, #80]
  42d60c:	cbnz	x9, 42d618 <argp_failure@@Base+0x34c>
  42d610:	ldr	w9, [x24, #88]
  42d614:	cbz	w9, 42d62c <argp_failure@@Base+0x360>
  42d618:	ldrb	w9, [x24, #72]
  42d61c:	tbz	w9, #2, 42d62c <argp_failure@@Base+0x360>
  42d620:	ldr	w9, [x22, #8]
  42d624:	mov	x24, x8
  42d628:	b	42d5a0 <argp_failure@@Base+0x2d4>
  42d62c:	add	x22, x22, #0x38
  42d630:	mov	x24, x8
  42d634:	mov	w8, w25
  42d638:	b	42d548 <argp_failure@@Base+0x27c>
  42d63c:	strb	wzr, [x23]
  42d640:	cbz	x27, 42d8a0 <argp_failure@@Base+0x5d4>
  42d644:	ldr	x8, [x27]
  42d648:	cbz	x8, 42d8a0 <argp_failure@@Base+0x5d4>
  42d64c:	stp	x28, x26, [sp]
  42d650:	ldr	w19, [x27, #24]
  42d654:	cbz	w19, 42d660 <argp_failure@@Base+0x394>
  42d658:	ldr	x20, [x27, #16]
  42d65c:	b	42d66c <argp_failure@@Base+0x3a0>
  42d660:	ldr	x20, [x27, #16]
  42d664:	mov	x1, x28
  42d668:	cbz	x20, 42d6bc <argp_failure@@Base+0x3f0>
  42d66c:	ldr	x22, [x26, #32]
  42d670:	mov	w0, #0x30                  	// #48
  42d674:	bl	4044d0 <malloc@plt>
  42d678:	mov	x1, x0
  42d67c:	cbz	x0, 42d6bc <argp_failure@@Base+0x3f0>
  42d680:	sub	x8, x27, x22
  42d684:	lsr	x8, x8, #5
  42d688:	str	x20, [x1]
  42d68c:	stp	w8, w19, [x1, #8]
  42d690:	stp	x28, x26, [x1, #16]
  42d694:	cbz	x28, 42d6a4 <argp_failure@@Base+0x3d8>
  42d698:	ldr	w8, [x28, #32]
  42d69c:	add	w8, w8, #0x1
  42d6a0:	b	42d6a8 <argp_failure@@Base+0x3dc>
  42d6a4:	mov	w8, wzr
  42d6a8:	ldur	x10, [x29, #-16]
  42d6ac:	str	w8, [x1, #32]
  42d6b0:	ldr	x9, [x10]
  42d6b4:	str	x1, [x10]
  42d6b8:	str	x9, [x1, #40]
  42d6bc:	ldr	x0, [x27]
  42d6c0:	bl	42d454 <argp_failure@@Base+0x188>
  42d6c4:	ldur	x9, [x29, #-16]
  42d6c8:	mov	x22, x0
  42d6cc:	ldr	x10, [x9]
  42d6d0:	mov	x8, x9
  42d6d4:	add	x9, x10, #0x28
  42d6d8:	cbnz	x10, 42d6cc <argp_failure@@Base+0x400>
  42d6dc:	ldr	x9, [x22, #24]
  42d6e0:	str	x9, [x8]
  42d6e4:	ldr	w23, [x22, #8]
  42d6e8:	str	xzr, [x22, #24]
  42d6ec:	cbz	w23, 42d890 <argp_failure@@Base+0x5c4>
  42d6f0:	ldr	w19, [x21, #8]
  42d6f4:	cbz	w19, 42d878 <argp_failure@@Base+0x5ac>
  42d6f8:	add	w9, w19, w23
  42d6fc:	mov	w8, #0x38                  	// #56
  42d700:	umull	x0, w9, w8
  42d704:	stur	x27, [x29, #-24]
  42d708:	str	w9, [sp, #28]
  42d70c:	bl	4044d0 <malloc@plt>
  42d710:	ldr	x27, [x21, #16]
  42d714:	mov	x24, x0
  42d718:	mov	x0, x27
  42d71c:	bl	404170 <strlen@plt>
  42d720:	ldr	x25, [x22, #16]
  42d724:	mov	x26, x0
  42d728:	mov	x0, x25
  42d72c:	bl	404170 <strlen@plt>
  42d730:	add	x8, x0, w26, uxtw
  42d734:	add	x0, x8, #0x1
  42d738:	bl	4044d0 <malloc@plt>
  42d73c:	cbz	x24, 42d8c4 <argp_failure@@Base+0x5f8>
  42d740:	mov	x20, x0
  42d744:	cbz	x0, 42d8c4 <argp_failure@@Base+0x5f8>
  42d748:	ldr	x1, [x21]
  42d74c:	mov	w28, #0x38                  	// #56
  42d750:	mul	x2, x19, x28
  42d754:	mov	x3, #0xffffffffffffffff    	// #-1
  42d758:	mov	x0, x24
  42d75c:	and	x26, x26, #0xffffffff
  42d760:	bl	404b80 <__mempcpy_chk@plt>
  42d764:	ldr	x1, [x22]
  42d768:	mul	x2, x23, x28
  42d76c:	mov	x3, #0xffffffffffffffff    	// #-1
  42d770:	str	x22, [sp, #32]
  42d774:	bl	404b80 <__mempcpy_chk@plt>
  42d778:	mov	x3, #0xffffffffffffffff    	// #-1
  42d77c:	mov	x0, x20
  42d780:	mov	x1, x27
  42d784:	mov	x2, x26
  42d788:	bl	404b80 <__mempcpy_chk@plt>
  42d78c:	mov	x28, x24
  42d790:	str	x24, [sp, #16]
  42d794:	ldr	x8, [x28, #16]
  42d798:	subs	w19, w19, #0x1
  42d79c:	sub	x8, x8, x27
  42d7a0:	add	x8, x20, x8
  42d7a4:	str	x8, [x28, #16]
  42d7a8:	add	x28, x28, #0x38
  42d7ac:	b.ne	42d794 <argp_failure@@Base+0x4c8>  // b.any
  42d7b0:	add	x27, x20, x26
  42d7b4:	stur	x20, [x29, #-8]
  42d7b8:	ldr	w22, [x28, #8]
  42d7bc:	str	x27, [x28, #16]
  42d7c0:	cbz	w22, 42d830 <argp_failure@@Base+0x564>
  42d7c4:	ldr	x19, [x28]
  42d7c8:	ldrb	w8, [x19, #24]
  42d7cc:	tbnz	w8, #3, 42d824 <argp_failure@@Base+0x558>
  42d7d0:	ldr	w24, [x19, #8]
  42d7d4:	sub	w8, w24, #0x1
  42d7d8:	cmp	w8, #0xfe
  42d7dc:	b.hi	42d824 <argp_failure@@Base+0x558>  // b.pmore
  42d7e0:	ldrb	w20, [x25]
  42d7e4:	bl	404930 <__ctype_b_loc@plt>
  42d7e8:	cmp	w24, w20
  42d7ec:	b.ne	42d824 <argp_failure@@Base+0x558>  // b.any
  42d7f0:	ldr	x8, [x0]
  42d7f4:	ldrh	w8, [x8, x24, lsl #1]
  42d7f8:	tbz	w8, #14, 42d824 <argp_failure@@Base+0x558>
  42d7fc:	ldur	x9, [x29, #-8]
  42d800:	mov	x8, x26
  42d804:	cbz	x26, 42d81c <argp_failure@@Base+0x550>
  42d808:	ldrb	w10, [x9], #1
  42d80c:	cmp	w10, w20
  42d810:	b.eq	42d820 <argp_failure@@Base+0x554>  // b.none
  42d814:	subs	x8, x8, #0x1
  42d818:	b.ne	42d808 <argp_failure@@Base+0x53c>  // b.any
  42d81c:	strb	w20, [x27], #1
  42d820:	add	x25, x25, #0x1
  42d824:	subs	w22, w22, #0x1
  42d828:	add	x19, x19, #0x30
  42d82c:	b.ne	42d7c8 <argp_failure@@Base+0x4fc>  // b.any
  42d830:	subs	w23, w23, #0x1
  42d834:	add	x28, x28, #0x38
  42d838:	b.ne	42d7b8 <argp_failure@@Base+0x4ec>  // b.any
  42d83c:	ldr	x0, [x21]
  42d840:	strb	wzr, [x27]
  42d844:	bl	4049b0 <free@plt>
  42d848:	ldr	x0, [x21, #16]
  42d84c:	bl	4049b0 <free@plt>
  42d850:	ldp	x26, x8, [sp, #8]
  42d854:	ldur	x27, [x29, #-24]
  42d858:	ldr	x28, [sp]
  42d85c:	ldr	x22, [sp, #32]
  42d860:	str	x8, [x21]
  42d864:	ldr	w8, [sp, #28]
  42d868:	str	w8, [x21, #8]
  42d86c:	ldur	x8, [x29, #-8]
  42d870:	str	x8, [x21, #16]
  42d874:	b	42d890 <argp_failure@@Base+0x5c4>
  42d878:	ldr	x8, [x22]
  42d87c:	ldr	x9, [x22, #16]
  42d880:	str	w23, [x21, #8]
  42d884:	str	wzr, [x22, #8]
  42d888:	str	x8, [x21]
  42d88c:	str	x9, [x21, #16]
  42d890:	mov	x0, x22
  42d894:	bl	42e1e4 <argp_failure@@Base+0xf18>
  42d898:	ldr	x8, [x27, #32]!
  42d89c:	cbnz	x8, 42d650 <argp_failure@@Base+0x384>
  42d8a0:	mov	x0, x21
  42d8a4:	ldp	x20, x19, [sp, #144]
  42d8a8:	ldp	x22, x21, [sp, #128]
  42d8ac:	ldp	x24, x23, [sp, #112]
  42d8b0:	ldp	x26, x25, [sp, #96]
  42d8b4:	ldp	x28, x27, [sp, #80]
  42d8b8:	ldp	x29, x30, [sp, #64]
  42d8bc:	add	sp, sp, #0xa0
  42d8c0:	ret
  42d8c4:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  42d8c8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42d8cc:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x16808>
  42d8d0:	add	x0, x0, #0xeb5
  42d8d4:	add	x1, x1, #0xe36
  42d8d8:	add	x3, x3, #0xece
  42d8dc:	mov	w2, #0x366                 	// #870
  42d8e0:	bl	404cd0 <__assert_fail@plt>
  42d8e4:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  42d8e8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42d8ec:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x16808>
  42d8f0:	add	x0, x0, #0xe92
  42d8f4:	add	x1, x1, #0xe36
  42d8f8:	add	x3, x3, #0xe42
  42d8fc:	mov	w2, #0x1d1                 	// #465
  42d900:	bl	404cd0 <__assert_fail@plt>
  42d904:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  42d908:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42d90c:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x16808>
  42d910:	add	x0, x0, #0xe32
  42d914:	add	x1, x1, #0xe36
  42d918:	add	x3, x3, #0xe42
  42d91c:	mov	w2, #0x1b9                 	// #441
  42d920:	bl	404cd0 <__assert_fail@plt>
  42d924:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  42d928:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42d92c:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x16808>
  42d930:	add	x0, x0, #0xe82
  42d934:	add	x1, x1, #0xe36
  42d938:	add	x3, x3, #0xe42
  42d93c:	mov	w2, #0x1c3                 	// #451
  42d940:	bl	404cd0 <__assert_fail@plt>
  42d944:	stp	x29, x30, [sp, #-64]!
  42d948:	stp	x22, x21, [sp, #32]
  42d94c:	stp	x20, x19, [sp, #48]
  42d950:	ldr	w21, [x0, #8]
  42d954:	str	x23, [sp, #16]
  42d958:	mov	x29, sp
  42d95c:	cbz	w21, 42d9b8 <argp_failure@@Base+0x6ec>
  42d960:	ldr	x20, [x0]
  42d964:	mov	x19, x1
  42d968:	ldr	w22, [x20, #8]
  42d96c:	cbz	w22, 42d99c <argp_failure@@Base+0x6d0>
  42d970:	ldr	x23, [x20]
  42d974:	ldr	x0, [x23]
  42d978:	cbz	x0, 42d990 <argp_failure@@Base+0x6c4>
  42d97c:	ldrb	w8, [x23, #24]
  42d980:	tbnz	w8, #1, 42d990 <argp_failure@@Base+0x6c4>
  42d984:	mov	x1, x19
  42d988:	bl	404900 <strcmp@plt>
  42d98c:	cbz	w0, 42d9ac <argp_failure@@Base+0x6e0>
  42d990:	sub	w22, w22, #0x1
  42d994:	add	x23, x23, #0x30
  42d998:	cbnz	w22, 42d974 <argp_failure@@Base+0x6a8>
  42d99c:	sub	w21, w21, #0x1
  42d9a0:	add	x20, x20, #0x38
  42d9a4:	cbnz	w21, 42d968 <argp_failure@@Base+0x69c>
  42d9a8:	b	42d9b8 <argp_failure@@Base+0x6ec>
  42d9ac:	cbz	x20, 42d9b8 <argp_failure@@Base+0x6ec>
  42d9b0:	mov	w8, #0xffffffff            	// #-1
  42d9b4:	str	w8, [x20, #24]
  42d9b8:	ldp	x20, x19, [sp, #48]
  42d9bc:	ldp	x22, x21, [sp, #32]
  42d9c0:	ldr	x23, [sp, #16]
  42d9c4:	ldp	x29, x30, [sp], #64
  42d9c8:	ret
  42d9cc:	stp	x29, x30, [sp, #-32]!
  42d9d0:	stp	x20, x19, [sp, #16]
  42d9d4:	mov	x8, x0
  42d9d8:	ldr	x0, [x0, #16]
  42d9dc:	ldr	x20, [x8, #32]
  42d9e0:	mov	x29, sp
  42d9e4:	cbz	x0, 42da00 <argp_failure@@Base+0x734>
  42d9e8:	mov	w1, #0xa                   	// #10
  42d9ec:	bl	404a50 <strchr@plt>
  42d9f0:	cmp	x0, #0x0
  42d9f4:	cset	w19, ne  // ne = any
  42d9f8:	cbnz	x20, 42da08 <argp_failure@@Base+0x73c>
  42d9fc:	b	42da28 <argp_failure@@Base+0x75c>
  42da00:	mov	x19, xzr
  42da04:	cbz	x20, 42da28 <argp_failure@@Base+0x75c>
  42da08:	ldr	x8, [x20]
  42da0c:	cbz	x8, 42da28 <argp_failure@@Base+0x75c>
  42da10:	add	x20, x20, #0x20
  42da14:	mov	x0, x8
  42da18:	bl	42d9cc <argp_failure@@Base+0x700>
  42da1c:	ldr	x8, [x20], #32
  42da20:	add	x19, x0, x19
  42da24:	cbnz	x8, 42da14 <argp_failure@@Base+0x748>
  42da28:	mov	x0, x19
  42da2c:	ldp	x20, x19, [sp, #16]
  42da30:	ldp	x29, x30, [sp], #32
  42da34:	ret
  42da38:	stp	x29, x30, [sp, #-96]!
  42da3c:	stp	x28, x27, [sp, #16]
  42da40:	stp	x26, x25, [sp, #32]
  42da44:	stp	x24, x23, [sp, #48]
  42da48:	stp	x22, x21, [sp, #64]
  42da4c:	stp	x20, x19, [sp, #80]
  42da50:	mov	x29, sp
  42da54:	sub	sp, sp, #0x10
  42da58:	ldr	w24, [x0, #8]
  42da5c:	cbz	w24, 42dbe4 <argp_failure@@Base+0x918>
  42da60:	mov	x20, x0
  42da64:	ldr	x0, [x0, #16]
  42da68:	mov	x19, x1
  42da6c:	bl	404170 <strlen@plt>
  42da70:	add	x9, x0, #0x10
  42da74:	mov	x8, sp
  42da78:	and	x9, x9, #0xfffffffffffffff0
  42da7c:	sub	x21, x8, x9
  42da80:	mov	sp, x21
  42da84:	stur	x21, [x29, #-8]
  42da88:	ldr	x22, [x20]
  42da8c:	adrp	x23, 42e000 <argp_failure@@Base+0xd34>
  42da90:	add	x23, x23, #0x6a4
  42da94:	ldr	x8, [x22, #40]
  42da98:	sub	x3, x29, #0x8
  42da9c:	mov	x0, x22
  42daa0:	mov	x1, x23
  42daa4:	ldr	x2, [x8, #48]
  42daa8:	bl	42e57c <argp_failure@@Base+0x12b0>
  42daac:	subs	w24, w24, #0x1
  42dab0:	add	x22, x22, #0x38
  42dab4:	b.ne	42da94 <argp_failure@@Base+0x7c8>  // b.any
  42dab8:	ldur	x8, [x29, #-8]
  42dabc:	cmp	x8, x21
  42dac0:	b.ls	42dae4 <argp_failure@@Base+0x818>  // b.plast
  42dac4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42dac8:	add	x9, x8, #0x1
  42dacc:	add	x1, x1, #0xefa
  42dad0:	mov	x0, x19
  42dad4:	mov	x2, x21
  42dad8:	stur	x9, [x29, #-8]
  42dadc:	strb	wzr, [x8]
  42dae0:	bl	447c2c <_obstack_memory_used@@Base+0xc434>
  42dae4:	ldr	w23, [x20, #8]
  42dae8:	cbz	w23, 42dbe4 <argp_failure@@Base+0x918>
  42daec:	ldr	x21, [x20]
  42daf0:	adrp	x22, 42e000 <argp_failure@@Base+0xd34>
  42daf4:	add	x22, x22, #0x6e0
  42daf8:	ldr	x8, [x21, #40]
  42dafc:	mov	x0, x21
  42db00:	mov	x1, x22
  42db04:	mov	x3, x19
  42db08:	ldr	x2, [x8, #48]
  42db0c:	bl	42e57c <argp_failure@@Base+0x12b0>
  42db10:	subs	w23, w23, #0x1
  42db14:	add	x21, x21, #0x38
  42db18:	b.ne	42daf8 <argp_failure@@Base+0x82c>  // b.any
  42db1c:	ldr	w24, [x20, #8]
  42db20:	cbz	w24, 42dbe4 <argp_failure@@Base+0x918>
  42db24:	ldr	x25, [x20]
  42db28:	adrp	x20, 452000 <_obstack_memory_used@@Base+0x16808>
  42db2c:	adrp	x22, 452000 <_obstack_memory_used@@Base+0x16808>
  42db30:	add	x20, x20, #0xf2d
  42db34:	add	x22, x22, #0xf15
  42db38:	ldr	w26, [x25, #8]
  42db3c:	cbz	w26, 42dbd8 <argp_failure@@Base+0x90c>
  42db40:	ldr	x8, [x25, #40]
  42db44:	ldr	x27, [x25]
  42db48:	ldr	x23, [x8, #48]
  42db4c:	mov	x28, x27
  42db50:	ldr	x2, [x28]
  42db54:	cbz	x2, 42dbcc <argp_failure@@Base+0x900>
  42db58:	ldr	w8, [x28, #24]
  42db5c:	tst	w8, #0x4
  42db60:	csel	x27, x28, x27, eq  // eq = none
  42db64:	tbnz	w8, #1, 42dbcc <argp_failure@@Base+0x900>
  42db68:	ldr	w9, [x27, #24]
  42db6c:	ldr	x1, [x28, #16]
  42db70:	orr	w21, w9, w8
  42db74:	cbz	x1, 42db80 <argp_failure@@Base+0x8b4>
  42db78:	tbz	w21, #4, 42db88 <argp_failure@@Base+0x8bc>
  42db7c:	b	42dbcc <argp_failure@@Base+0x900>
  42db80:	ldr	x1, [x27, #16]
  42db84:	tbnz	w21, #4, 42dbcc <argp_failure@@Base+0x900>
  42db88:	cbz	x1, 42dbb4 <argp_failure@@Base+0x8e8>
  42db8c:	mov	w2, #0x5                   	// #5
  42db90:	mov	x0, x23
  42db94:	bl	404bd0 <dcgettext@plt>
  42db98:	ldr	x2, [x28]
  42db9c:	mov	x3, x0
  42dba0:	mov	x0, x19
  42dba4:	tbnz	w21, #0, 42dbc4 <argp_failure@@Base+0x8f8>
  42dba8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42dbac:	add	x1, x1, #0xf22
  42dbb0:	b	42dbc8 <argp_failure@@Base+0x8fc>
  42dbb4:	mov	x0, x19
  42dbb8:	mov	x1, x20
  42dbbc:	bl	447c2c <_obstack_memory_used@@Base+0xc434>
  42dbc0:	b	42dbcc <argp_failure@@Base+0x900>
  42dbc4:	mov	x1, x22
  42dbc8:	bl	447c2c <_obstack_memory_used@@Base+0xc434>
  42dbcc:	subs	w26, w26, #0x1
  42dbd0:	add	x28, x28, #0x30
  42dbd4:	b.ne	42db50 <argp_failure@@Base+0x884>  // b.any
  42dbd8:	subs	w24, w24, #0x1
  42dbdc:	add	x25, x25, #0x38
  42dbe0:	b.ne	42db38 <argp_failure@@Base+0x86c>  // b.any
  42dbe4:	mov	sp, x29
  42dbe8:	ldp	x20, x19, [sp, #80]
  42dbec:	ldp	x22, x21, [sp, #64]
  42dbf0:	ldp	x24, x23, [sp, #48]
  42dbf4:	ldp	x26, x25, [sp, #32]
  42dbf8:	ldp	x28, x27, [sp, #16]
  42dbfc:	ldp	x29, x30, [sp], #96
  42dc00:	ret
  42dc04:	sub	sp, sp, #0x70
  42dc08:	stp	x29, x30, [sp, #16]
  42dc0c:	stp	x28, x27, [sp, #32]
  42dc10:	stp	x26, x25, [sp, #48]
  42dc14:	stp	x24, x23, [sp, #64]
  42dc18:	stp	x22, x21, [sp, #80]
  42dc1c:	stp	x20, x19, [sp, #96]
  42dc20:	mov	x23, x0
  42dc24:	ldr	x8, [x23, #16]
  42dc28:	ldr	x26, [x0, #32]
  42dc2c:	ldr	x0, [x0, #48]
  42dc30:	ldr	x28, [x2]
  42dc34:	mov	x21, x2
  42dc38:	mov	x22, x1
  42dc3c:	mov	w2, #0x5                   	// #5
  42dc40:	mov	x1, x8
  42dc44:	add	x29, sp, #0x10
  42dc48:	mov	x20, x4
  42dc4c:	mov	w19, w3
  42dc50:	bl	404bd0 <dcgettext@plt>
  42dc54:	mov	x24, x0
  42dc58:	cbz	x23, 42dc90 <argp_failure@@Base+0x9c4>
  42dc5c:	ldr	x8, [x23, #40]
  42dc60:	cbz	x8, 42dc90 <argp_failure@@Base+0x9c4>
  42dc64:	mov	x0, x23
  42dc68:	mov	x1, x22
  42dc6c:	bl	42f768 <argp_parse@@Base+0xaac>
  42dc70:	ldr	x8, [x23, #40]
  42dc74:	mov	x2, x0
  42dc78:	mov	w0, #0x6                   	// #6
  42dc7c:	movk	w0, #0x200, lsl #16
  42dc80:	mov	x1, x24
  42dc84:	blr	x8
  42dc88:	mov	x25, x0
  42dc8c:	b	42dc94 <argp_failure@@Base+0x9c8>
  42dc90:	mov	x25, x24
  42dc94:	str	x28, [sp, #8]
  42dc98:	cbz	x25, 42dce8 <argp_failure@@Base+0xa1c>
  42dc9c:	mov	w1, #0xa                   	// #10
  42dca0:	mov	x0, x25
  42dca4:	bl	404bc0 <strchrnul@plt>
  42dca8:	ldrb	w8, [x0]
  42dcac:	mov	x23, x0
  42dcb0:	str	x26, [sp]
  42dcb4:	cbz	w8, 42dcf8 <argp_failure@@Base+0xa2c>
  42dcb8:	ldrb	w27, [x28]
  42dcbc:	cbz	w27, 42dd04 <argp_failure@@Base+0xa38>
  42dcc0:	mov	w28, wzr
  42dcc4:	add	x26, x23, #0x1
  42dcc8:	mov	w1, #0xa                   	// #10
  42dccc:	mov	x0, x26
  42dcd0:	bl	404bc0 <strchrnul@plt>
  42dcd4:	add	w28, w28, #0x1
  42dcd8:	cmp	w28, w27
  42dcdc:	mov	x23, x0
  42dce0:	b.cc	42dcc4 <argp_failure@@Base+0x9f8>  // b.lo, b.ul, b.last
  42dce4:	b	42dd08 <argp_failure@@Base+0xa3c>
  42dce8:	mov	x23, xzr
  42dcec:	mov	w28, wzr
  42dcf0:	cbnz	x26, 42dd7c <argp_failure@@Base+0xab0>
  42dcf4:	b	42ddb0 <argp_failure@@Base+0xae4>
  42dcf8:	mov	w28, wzr
  42dcfc:	mov	x26, x25
  42dd00:	b	42dd18 <argp_failure@@Base+0xa4c>
  42dd04:	mov	x26, x25
  42dd08:	ldr	x8, [x21]
  42dd0c:	mov	w28, #0x1                   	// #1
  42dd10:	add	x8, x8, #0x1
  42dd14:	str	x8, [x21]
  42dd18:	sub	x27, x23, x26
  42dd1c:	add	x1, x27, #0x1
  42dd20:	mov	x0, x20
  42dd24:	bl	42e780 <argp_failure@@Base+0x14b4>
  42dd28:	ldp	x0, x8, [x20, #56]
  42dd2c:	add	x9, x0, x27
  42dd30:	cmp	x9, x8
  42dd34:	b.ls	42dd4c <argp_failure@@Base+0xa80>  // b.plast
  42dd38:	mov	x0, x20
  42dd3c:	mov	x1, x27
  42dd40:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42dd44:	cbz	w0, 42dd64 <argp_failure@@Base+0xa98>
  42dd48:	ldr	x0, [x20, #56]
  42dd4c:	mov	x1, x26
  42dd50:	mov	x2, x27
  42dd54:	bl	4040f0 <memcpy@plt>
  42dd58:	ldr	x8, [x20, #56]
  42dd5c:	add	x8, x8, x27
  42dd60:	str	x8, [x20, #56]
  42dd64:	cmp	x25, x24
  42dd68:	b.eq	42dd74 <argp_failure@@Base+0xaa8>  // b.none
  42dd6c:	mov	x0, x25
  42dd70:	bl	4049b0 <free@plt>
  42dd74:	ldr	x26, [sp]
  42dd78:	cbz	x26, 42ddb0 <argp_failure@@Base+0xae4>
  42dd7c:	ldr	x8, [x26]
  42dd80:	cbz	x8, 42ddb0 <argp_failure@@Base+0xae4>
  42dd84:	add	x24, x26, #0x20
  42dd88:	mov	x0, x8
  42dd8c:	mov	x1, x22
  42dd90:	mov	x2, x21
  42dd94:	mov	w3, w19
  42dd98:	mov	x4, x20
  42dd9c:	bl	42dc04 <argp_failure@@Base+0x938>
  42dda0:	ldr	x8, [x24], #32
  42dda4:	cmp	w0, #0x0
  42dda8:	cset	w19, eq  // eq = none
  42ddac:	cbnz	x8, 42dd88 <argp_failure@@Base+0xabc>
  42ddb0:	cbz	w28, 42dde4 <argp_failure@@Base+0xb18>
  42ddb4:	cbz	w19, 42dde4 <argp_failure@@Base+0xb18>
  42ddb8:	ldr	x10, [sp, #8]
  42ddbc:	ldrb	w9, [x23]
  42ddc0:	ldrb	w8, [x10]
  42ddc4:	cbz	w9, 42ddd8 <argp_failure@@Base+0xb0c>
  42ddc8:	add	w8, w8, #0x1
  42ddcc:	mov	w19, wzr
  42ddd0:	strb	w8, [x10]
  42ddd4:	b	42dde4 <argp_failure@@Base+0xb18>
  42ddd8:	cbz	w8, 42dde0 <argp_failure@@Base+0xb14>
  42dddc:	strb	wzr, [x10]
  42dde0:	mov	w19, #0x1                   	// #1
  42dde4:	cmp	w19, #0x0
  42dde8:	ldp	x20, x19, [sp, #96]
  42ddec:	ldp	x22, x21, [sp, #80]
  42ddf0:	ldp	x24, x23, [sp, #64]
  42ddf4:	ldp	x26, x25, [sp, #48]
  42ddf8:	ldp	x28, x27, [sp, #32]
  42ddfc:	ldp	x29, x30, [sp, #16]
  42de00:	cset	w0, eq  // eq = none
  42de04:	add	sp, sp, #0x70
  42de08:	ret
  42de0c:	sub	sp, sp, #0x70
  42de10:	stp	x29, x30, [sp, #16]
  42de14:	stp	x28, x27, [sp, #32]
  42de18:	stp	x26, x25, [sp, #48]
  42de1c:	stp	x24, x23, [sp, #64]
  42de20:	stp	x22, x21, [sp, #80]
  42de24:	stp	x20, x19, [sp, #96]
  42de28:	mov	x24, x0
  42de2c:	ldr	x8, [x24, #24]
  42de30:	ldr	x0, [x0, #48]
  42de34:	mov	w22, w2
  42de38:	mov	x23, x1
  42de3c:	mov	w2, #0x5                   	// #5
  42de40:	mov	x1, x8
  42de44:	add	x29, sp, #0x10
  42de48:	mov	x19, x5
  42de4c:	mov	w20, w4
  42de50:	mov	w21, w3
  42de54:	bl	404bd0 <dcgettext@plt>
  42de58:	ldr	x27, [x24, #32]
  42de5c:	mov	x25, x0
  42de60:	cbz	x0, 42de94 <argp_failure@@Base+0xbc8>
  42de64:	mov	w1, #0xb                   	// #11
  42de68:	mov	x0, x25
  42de6c:	bl	404a50 <strchr@plt>
  42de70:	cmp	x0, #0x0
  42de74:	csinc	x9, xzr, x0, eq  // eq = none
  42de78:	cmp	x0, #0x0
  42de7c:	sub	x8, x0, x25
  42de80:	ccmp	w22, #0x0, #0x0, ne  // ne = any
  42de84:	csel	x26, x8, xzr, eq  // eq = none
  42de88:	cmp	w22, #0x0
  42de8c:	csel	x25, x25, x9, eq  // eq = none
  42de90:	b	42de98 <argp_failure@@Base+0xbcc>
  42de94:	mov	x26, xzr
  42de98:	ldr	x8, [x24, #40]
  42de9c:	mov	w28, #0x1                   	// #1
  42dea0:	movk	w28, #0x200, lsl #16
  42dea4:	cbz	x8, 42def0 <argp_failure@@Base+0xc24>
  42dea8:	cbz	x26, 42debc <argp_failure@@Base+0xbf0>
  42deac:	mov	x0, x25
  42deb0:	mov	x1, x26
  42deb4:	bl	404a30 <strndup@plt>
  42deb8:	mov	x25, x0
  42debc:	mov	x0, x24
  42dec0:	mov	x1, x23
  42dec4:	bl	42f768 <argp_parse@@Base+0xaac>
  42dec8:	ldr	x8, [x24, #40]
  42decc:	cmp	w22, #0x0
  42ded0:	mov	x2, x0
  42ded4:	cinc	w0, w28, ne  // ne = any
  42ded8:	mov	x1, x25
  42dedc:	str	x2, [sp, #8]
  42dee0:	blr	x8
  42dee4:	mov	x28, x0
  42dee8:	cbnz	x28, 42defc <argp_failure@@Base+0xc30>
  42deec:	b	42e040 <argp_failure@@Base+0xd74>
  42def0:	str	xzr, [sp, #8]
  42def4:	mov	x28, x25
  42def8:	cbz	x28, 42e040 <argp_failure@@Base+0xd74>
  42defc:	cbz	w21, 42df30 <argp_failure@@Base+0xc64>
  42df00:	ldp	x8, x9, [x19, #56]
  42df04:	cmp	x8, x9
  42df08:	b.cc	42df20 <argp_failure@@Base+0xc54>  // b.lo, b.ul, b.last
  42df0c:	mov	w1, #0x1                   	// #1
  42df10:	mov	x0, x19
  42df14:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42df18:	cbz	w0, 42df30 <argp_failure@@Base+0xc64>
  42df1c:	ldr	x8, [x19, #56]
  42df20:	add	x9, x8, #0x1
  42df24:	mov	w10, #0xa                   	// #10
  42df28:	str	x9, [x19, #56]
  42df2c:	strb	w10, [x8]
  42df30:	str	x27, [sp]
  42df34:	cbz	x26, 42df7c <argp_failure@@Base+0xcb0>
  42df38:	cmp	x28, x25
  42df3c:	b.ne	42df7c <argp_failure@@Base+0xcb0>  // b.any
  42df40:	ldp	x0, x8, [x19, #56]
  42df44:	add	x9, x0, x26
  42df48:	cmp	x9, x8
  42df4c:	b.ls	42df64 <argp_failure@@Base+0xc98>  // b.plast
  42df50:	mov	x0, x19
  42df54:	mov	x1, x26
  42df58:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42df5c:	cbz	w0, 42dfc8 <argp_failure@@Base+0xcfc>
  42df60:	ldr	x0, [x19, #56]
  42df64:	mov	x1, x25
  42df68:	mov	x2, x26
  42df6c:	bl	4040f0 <memcpy@plt>
  42df70:	ldr	x8, [x19, #56]
  42df74:	add	x8, x8, x26
  42df78:	b	42dfc4 <argp_failure@@Base+0xcf8>
  42df7c:	mov	x0, x28
  42df80:	bl	404170 <strlen@plt>
  42df84:	cbz	x0, 42dfc8 <argp_failure@@Base+0xcfc>
  42df88:	mov	x27, x0
  42df8c:	ldp	x0, x8, [x19, #56]
  42df90:	add	x9, x0, x27
  42df94:	cmp	x9, x8
  42df98:	b.ls	42dfb0 <argp_failure@@Base+0xce4>  // b.plast
  42df9c:	mov	x0, x19
  42dfa0:	mov	x1, x27
  42dfa4:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42dfa8:	cbz	w0, 42dfc8 <argp_failure@@Base+0xcfc>
  42dfac:	ldr	x0, [x19, #56]
  42dfb0:	mov	x1, x28
  42dfb4:	mov	x2, x27
  42dfb8:	bl	4040f0 <memcpy@plt>
  42dfbc:	ldr	x8, [x19, #56]
  42dfc0:	add	x8, x8, x27
  42dfc4:	str	x8, [x19, #56]
  42dfc8:	ldp	x9, x8, [x19, #48]
  42dfcc:	ldr	x10, [x19, #32]
  42dfd0:	ldr	x27, [sp]
  42dfd4:	sub	x8, x8, x9
  42dfd8:	cmp	x8, x10
  42dfdc:	b.ls	42dfe8 <argp_failure@@Base+0xd1c>  // b.plast
  42dfe0:	mov	x0, x19
  42dfe4:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42dfe8:	ldr	x8, [x19, #40]
  42dfec:	ldr	x9, [x19, #8]
  42dff0:	bic	x8, x8, x8, asr #63
  42dff4:	cmp	x8, x9
  42dff8:	b.ls	42e02c <argp_failure@@Base+0xd60>  // b.plast
  42dffc:	ldp	x8, x9, [x19, #56]
  42e000:	cmp	x8, x9
  42e004:	b.cc	42e01c <argp_failure@@Base+0xd50>  // b.lo, b.ul, b.last
  42e008:	mov	w1, #0x1                   	// #1
  42e00c:	mov	x0, x19
  42e010:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42e014:	cbz	w0, 42e02c <argp_failure@@Base+0xd60>
  42e018:	ldr	x8, [x19, #56]
  42e01c:	add	x9, x8, #0x1
  42e020:	mov	w10, #0xa                   	// #10
  42e024:	str	x9, [x19, #56]
  42e028:	strb	w10, [x8]
  42e02c:	cmp	x28, x25
  42e030:	b.eq	42e03c <argp_failure@@Base+0xd70>  // b.none
  42e034:	mov	x0, x28
  42e038:	bl	4049b0 <free@plt>
  42e03c:	mov	w28, #0x1                   	// #1
  42e040:	cbz	x26, 42e058 <argp_failure@@Base+0xd8c>
  42e044:	cbz	x25, 42e058 <argp_failure@@Base+0xd8c>
  42e048:	ldr	x8, [x24, #40]
  42e04c:	cbz	x8, 42e058 <argp_failure@@Base+0xd8c>
  42e050:	mov	x0, x25
  42e054:	bl	4049b0 <free@plt>
  42e058:	cbz	w22, 42e178 <argp_failure@@Base+0xeac>
  42e05c:	ldr	x8, [x24, #40]
  42e060:	cbz	x8, 42e178 <argp_failure@@Base+0xeac>
  42e064:	ldr	x2, [sp, #8]
  42e068:	mov	w9, #0x1                   	// #1
  42e06c:	movk	w9, #0x200, lsl #16
  42e070:	add	w0, w9, #0x3
  42e074:	mov	x1, xzr
  42e078:	blr	x8
  42e07c:	cbz	x0, 42e178 <argp_failure@@Base+0xeac>
  42e080:	mov	x24, x0
  42e084:	orr	w8, w28, w21
  42e088:	cbz	w8, 42e0bc <argp_failure@@Base+0xdf0>
  42e08c:	ldp	x8, x9, [x19, #56]
  42e090:	cmp	x8, x9
  42e094:	b.cc	42e0ac <argp_failure@@Base+0xde0>  // b.lo, b.ul, b.last
  42e098:	mov	w1, #0x1                   	// #1
  42e09c:	mov	x0, x19
  42e0a0:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42e0a4:	cbz	w0, 42e0bc <argp_failure@@Base+0xdf0>
  42e0a8:	ldr	x8, [x19, #56]
  42e0ac:	add	x9, x8, #0x1
  42e0b0:	mov	w10, #0xa                   	// #10
  42e0b4:	str	x9, [x19, #56]
  42e0b8:	strb	w10, [x8]
  42e0bc:	mov	x0, x24
  42e0c0:	bl	404170 <strlen@plt>
  42e0c4:	cbz	x0, 42e108 <argp_failure@@Base+0xe3c>
  42e0c8:	mov	x25, x0
  42e0cc:	ldp	x0, x8, [x19, #56]
  42e0d0:	add	x9, x0, x25
  42e0d4:	cmp	x9, x8
  42e0d8:	b.ls	42e0f0 <argp_failure@@Base+0xe24>  // b.plast
  42e0dc:	mov	x0, x19
  42e0e0:	mov	x1, x25
  42e0e4:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42e0e8:	cbz	w0, 42e108 <argp_failure@@Base+0xe3c>
  42e0ec:	ldr	x0, [x19, #56]
  42e0f0:	mov	x1, x24
  42e0f4:	mov	x2, x25
  42e0f8:	bl	4040f0 <memcpy@plt>
  42e0fc:	ldr	x8, [x19, #56]
  42e100:	add	x8, x8, x25
  42e104:	str	x8, [x19, #56]
  42e108:	mov	x0, x24
  42e10c:	bl	4049b0 <free@plt>
  42e110:	ldp	x9, x8, [x19, #48]
  42e114:	ldr	x10, [x19, #32]
  42e118:	sub	x8, x8, x9
  42e11c:	cmp	x8, x10
  42e120:	b.ls	42e12c <argp_failure@@Base+0xe60>  // b.plast
  42e124:	mov	x0, x19
  42e128:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42e12c:	ldr	x8, [x19, #40]
  42e130:	ldr	x9, [x19, #8]
  42e134:	bic	x8, x8, x8, asr #63
  42e138:	cmp	x8, x9
  42e13c:	b.ls	42e174 <argp_failure@@Base+0xea8>  // b.plast
  42e140:	ldp	x8, x9, [x19, #56]
  42e144:	cmp	x8, x9
  42e148:	b.cc	42e164 <argp_failure@@Base+0xe98>  // b.lo, b.ul, b.last
  42e14c:	mov	w1, #0x1                   	// #1
  42e150:	mov	x0, x19
  42e154:	mov	w28, #0x1                   	// #1
  42e158:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42e15c:	cbz	w0, 42e178 <argp_failure@@Base+0xeac>
  42e160:	ldr	x8, [x19, #56]
  42e164:	add	x9, x8, #0x1
  42e168:	mov	w10, #0xa                   	// #10
  42e16c:	str	x9, [x19, #56]
  42e170:	strb	w10, [x8]
  42e174:	mov	w28, #0x1                   	// #1
  42e178:	cbz	x27, 42e1c0 <argp_failure@@Base+0xef4>
  42e17c:	ldr	x8, [x27]
  42e180:	cbz	x8, 42e1c0 <argp_failure@@Base+0xef4>
  42e184:	add	x24, x27, #0x20
  42e188:	cbz	w20, 42e190 <argp_failure@@Base+0xec4>
  42e18c:	cbnz	w28, 42e1c0 <argp_failure@@Base+0xef4>
  42e190:	orr	w9, w28, w21
  42e194:	cmp	w9, #0x0
  42e198:	cset	w3, ne  // ne = any
  42e19c:	mov	x0, x8
  42e1a0:	mov	x1, x23
  42e1a4:	mov	w2, w22
  42e1a8:	mov	w4, w20
  42e1ac:	mov	x5, x19
  42e1b0:	bl	42de0c <argp_failure@@Base+0xb40>
  42e1b4:	ldr	x8, [x24], #32
  42e1b8:	orr	w28, w0, w28
  42e1bc:	cbnz	x8, 42e188 <argp_failure@@Base+0xebc>
  42e1c0:	mov	w0, w28
  42e1c4:	ldp	x20, x19, [sp, #96]
  42e1c8:	ldp	x22, x21, [sp, #80]
  42e1cc:	ldp	x24, x23, [sp, #64]
  42e1d0:	ldp	x26, x25, [sp, #48]
  42e1d4:	ldp	x28, x27, [sp, #32]
  42e1d8:	ldp	x29, x30, [sp, #16]
  42e1dc:	add	sp, sp, #0x70
  42e1e0:	ret
  42e1e4:	stp	x29, x30, [sp, #-32]!
  42e1e8:	stp	x20, x19, [sp, #16]
  42e1ec:	mov	x19, x0
  42e1f0:	ldr	x0, [x0, #24]
  42e1f4:	mov	x29, sp
  42e1f8:	cbz	x0, 42e20c <argp_failure@@Base+0xf40>
  42e1fc:	ldr	x20, [x0, #40]
  42e200:	bl	4049b0 <free@plt>
  42e204:	mov	x0, x20
  42e208:	cbnz	x20, 42e1fc <argp_failure@@Base+0xf30>
  42e20c:	ldr	w8, [x19, #8]
  42e210:	cbz	w8, 42e224 <argp_failure@@Base+0xf58>
  42e214:	ldr	x0, [x19]
  42e218:	bl	4049b0 <free@plt>
  42e21c:	ldr	x0, [x19, #16]
  42e220:	bl	4049b0 <free@plt>
  42e224:	mov	x0, x19
  42e228:	ldp	x20, x19, [sp, #16]
  42e22c:	ldp	x29, x30, [sp], #32
  42e230:	b	4049b0 <free@plt>
  42e234:	sub	sp, sp, #0x50
  42e238:	stp	x29, x30, [sp, #16]
  42e23c:	stp	x22, x21, [sp, #48]
  42e240:	stp	x20, x19, [sp, #64]
  42e244:	ldr	x8, [x0, #32]
  42e248:	ldr	x9, [x1, #32]
  42e24c:	ldr	w11, [x0, #24]
  42e250:	ldr	w10, [x1, #24]
  42e254:	str	x23, [sp, #32]
  42e258:	cmp	x8, x9
  42e25c:	add	x29, sp, #0x10
  42e260:	b.eq	42e310 <argp_failure@@Base+0x1044>  // b.none
  42e264:	cbz	x8, 42e288 <argp_failure@@Base+0xfbc>
  42e268:	cbz	x9, 42e2a8 <argp_failure@@Base+0xfdc>
  42e26c:	ldr	w10, [x8, #32]
  42e270:	ldr	w11, [x9, #32]
  42e274:	cmp	w10, w11
  42e278:	b.le	42e2d0 <argp_failure@@Base+0x1004>
  42e27c:	ldr	x8, [x8, #16]
  42e280:	ldr	w10, [x8, #32]
  42e284:	b	42e274 <argp_failure@@Base+0xfa8>
  42e288:	mov	x8, x9
  42e28c:	ldr	x9, [x9, #16]
  42e290:	cbnz	x9, 42e288 <argp_failure@@Base+0xfbc>
  42e294:	ldr	w8, [x8, #12]
  42e298:	subs	w0, w11, w8
  42e29c:	b.ne	42e45c <argp_failure@@Base+0x1190>  // b.any
  42e2a0:	mov	w0, #0xffffffff            	// #-1
  42e2a4:	b	42e4dc <argp_failure@@Base+0x1210>
  42e2a8:	mov	x9, x8
  42e2ac:	ldr	x8, [x8, #16]
  42e2b0:	cbnz	x8, 42e2a8 <argp_failure@@Base+0xfdc>
  42e2b4:	ldr	w8, [x9, #12]
  42e2b8:	subs	w0, w8, w10
  42e2bc:	b.ne	42e474 <argp_failure@@Base+0x11a8>  // b.any
  42e2c0:	mov	w0, #0x1                   	// #1
  42e2c4:	b	42e4dc <argp_failure@@Base+0x1210>
  42e2c8:	ldr	x9, [x9, #16]
  42e2cc:	ldr	w11, [x9, #32]
  42e2d0:	cmp	w11, w10
  42e2d4:	b.gt	42e2c8 <argp_failure@@Base+0xffc>
  42e2d8:	mov	x11, x9
  42e2dc:	mov	x10, x8
  42e2e0:	ldr	x8, [x8, #16]
  42e2e4:	ldr	x9, [x9, #16]
  42e2e8:	cmp	x8, x9
  42e2ec:	b.ne	42e2d8 <argp_failure@@Base+0x100c>  // b.any
  42e2f0:	ldr	w8, [x10, #12]
  42e2f4:	ldr	w9, [x11, #12]
  42e2f8:	subs	w0, w8, w9
  42e2fc:	b.ne	42e444 <argp_failure@@Base+0x1178>  // b.any
  42e300:	ldr	w8, [x11, #8]
  42e304:	ldr	w9, [x10, #8]
  42e308:	sub	w0, w8, w9
  42e30c:	b	42e4dc <argp_failure@@Base+0x1210>
  42e310:	mov	x20, x0
  42e314:	subs	w0, w11, w10
  42e318:	b.ne	42e42c <argp_failure@@Base+0x1160>  // b.any
  42e31c:	ldr	x8, [x20, #40]
  42e320:	adrp	x22, 42e000 <argp_failure@@Base+0xd34>
  42e324:	add	x22, x22, #0x658
  42e328:	mov	x21, x1
  42e32c:	ldr	x2, [x8, #48]
  42e330:	mov	x0, x20
  42e334:	mov	x1, x22
  42e338:	mov	x3, xzr
  42e33c:	bl	42e57c <argp_failure@@Base+0x12b0>
  42e340:	ldr	x8, [x21, #40]
  42e344:	mov	w19, w0
  42e348:	mov	x0, x21
  42e34c:	mov	x1, x22
  42e350:	ldr	x2, [x8, #48]
  42e354:	mov	x3, xzr
  42e358:	bl	42e57c <argp_failure@@Base+0x12b0>
  42e35c:	ldr	x11, [x20]
  42e360:	ldr	x9, [x21]
  42e364:	ldr	w12, [x20, #8]
  42e368:	mov	w20, w0
  42e36c:	ldr	w8, [x11, #24]
  42e370:	ldr	w22, [x9, #24]
  42e374:	cbz	w12, 42e394 <argp_failure@@Base+0x10c8>
  42e378:	ldr	x10, [x11]
  42e37c:	cbz	x10, 42e388 <argp_failure@@Base+0x10bc>
  42e380:	ldrb	w13, [x11, #24]
  42e384:	tbz	w13, #1, 42e398 <argp_failure@@Base+0x10cc>
  42e388:	subs	w12, w12, #0x1
  42e38c:	add	x11, x11, #0x30
  42e390:	b.ne	42e378 <argp_failure@@Base+0x10ac>  // b.any
  42e394:	mov	x10, xzr
  42e398:	str	x10, [x29, #24]
  42e39c:	ldr	w11, [x21, #8]
  42e3a0:	cbz	w11, 42e3c0 <argp_failure@@Base+0x10f4>
  42e3a4:	ldr	x21, [x9]
  42e3a8:	cbz	x21, 42e3b4 <argp_failure@@Base+0x10e8>
  42e3ac:	ldrb	w12, [x9, #24]
  42e3b0:	tbz	w12, #1, 42e3c4 <argp_failure@@Base+0x10f8>
  42e3b4:	subs	w11, w11, #0x1
  42e3b8:	add	x9, x9, #0x30
  42e3bc:	b.ne	42e3a4 <argp_failure@@Base+0x10d8>  // b.any
  42e3c0:	mov	x21, xzr
  42e3c4:	mov	w23, wzr
  42e3c8:	str	x21, [sp, #8]
  42e3cc:	tbz	w8, #3, 42e3e4 <argp_failure@@Base+0x1118>
  42e3d0:	cbz	x10, 42e3e4 <argp_failure@@Base+0x1118>
  42e3d4:	add	x0, x29, #0x18
  42e3d8:	bl	42e4f4 <argp_failure@@Base+0x1228>
  42e3dc:	cmp	w0, #0x0
  42e3e0:	cset	w23, ne  // ne = any
  42e3e4:	mov	w8, wzr
  42e3e8:	tbz	w22, #3, 42e400 <argp_failure@@Base+0x1134>
  42e3ec:	cbz	x21, 42e400 <argp_failure@@Base+0x1134>
  42e3f0:	add	x0, sp, #0x8
  42e3f4:	bl	42e4f4 <argp_failure@@Base+0x1228>
  42e3f8:	cmp	w0, #0x0
  42e3fc:	cset	w8, ne  // ne = any
  42e400:	subs	w0, w23, w8
  42e404:	b.ne	42e4dc <argp_failure@@Base+0x1210>  // b.any
  42e408:	ldr	x0, [x29, #24]
  42e40c:	ldr	x1, [sp, #8]
  42e410:	orr	w8, w20, w19
  42e414:	tst	w8, #0xff
  42e418:	b.ne	42e48c <argp_failure@@Base+0x11c0>  // b.any
  42e41c:	cbz	x0, 42e48c <argp_failure@@Base+0x11c0>
  42e420:	cbz	x1, 42e48c <argp_failure@@Base+0x11c0>
  42e424:	bl	4046e0 <strcasecmp@plt>
  42e428:	b	42e4dc <argp_failure@@Base+0x1210>
  42e42c:	tst	w10, w11
  42e430:	b.lt	42e4dc <argp_failure@@Base+0x1210>  // b.tstop
  42e434:	orr	w8, w10, w11
  42e438:	tbz	w8, #31, 42e4dc <argp_failure@@Base+0x1210>
  42e43c:	sub	w0, w10, w11
  42e440:	b	42e4dc <argp_failure@@Base+0x1210>
  42e444:	tst	w9, w8
  42e448:	b.lt	42e4dc <argp_failure@@Base+0x1210>  // b.tstop
  42e44c:	orr	w10, w9, w8
  42e450:	tbz	w10, #31, 42e4dc <argp_failure@@Base+0x1210>
  42e454:	sub	w0, w9, w8
  42e458:	b	42e4dc <argp_failure@@Base+0x1210>
  42e45c:	tst	w8, w11
  42e460:	b.lt	42e4dc <argp_failure@@Base+0x1210>  // b.tstop
  42e464:	orr	w9, w8, w11
  42e468:	tbz	w9, #31, 42e4dc <argp_failure@@Base+0x1210>
  42e46c:	sub	w0, w8, w11
  42e470:	b	42e4dc <argp_failure@@Base+0x1210>
  42e474:	tst	w8, w10
  42e478:	b.lt	42e4dc <argp_failure@@Base+0x1210>  // b.tstop
  42e47c:	orr	w9, w8, w10
  42e480:	tbz	w9, #31, 42e4dc <argp_failure@@Base+0x1210>
  42e484:	sub	w0, w10, w8
  42e488:	b	42e4dc <argp_failure@@Base+0x1210>
  42e48c:	tst	w19, #0xff
  42e490:	b.ne	42e49c <argp_failure@@Base+0x11d0>  // b.any
  42e494:	cbz	x0, 42e49c <argp_failure@@Base+0x11d0>
  42e498:	ldrb	w19, [x0]
  42e49c:	tst	w20, #0xff
  42e4a0:	b.ne	42e4b4 <argp_failure@@Base+0x11e8>  // b.any
  42e4a4:	cbz	x1, 42e4b0 <argp_failure@@Base+0x11e4>
  42e4a8:	ldrb	w20, [x1]
  42e4ac:	b	42e4b4 <argp_failure@@Base+0x11e8>
  42e4b0:	mov	w20, wzr
  42e4b4:	bl	404390 <__ctype_tolower_loc@plt>
  42e4b8:	ldr	x8, [x0]
  42e4bc:	and	x9, x19, #0xff
  42e4c0:	and	x10, x20, #0xff
  42e4c4:	ldr	w9, [x8, x9, lsl #2]
  42e4c8:	ldr	w8, [x8, x10, lsl #2]
  42e4cc:	and	w10, w20, #0xff
  42e4d0:	subs	w8, w9, w8
  42e4d4:	sub	w9, w10, w19, uxtb
  42e4d8:	csel	w0, w9, w8, eq  // eq = none
  42e4dc:	ldp	x20, x19, [sp, #64]
  42e4e0:	ldp	x22, x21, [sp, #48]
  42e4e4:	ldr	x23, [sp, #32]
  42e4e8:	ldp	x29, x30, [sp, #16]
  42e4ec:	add	sp, sp, #0x50
  42e4f0:	ret
  42e4f4:	stp	x29, x30, [sp, #-32]!
  42e4f8:	str	x19, [sp, #16]
  42e4fc:	mov	x29, sp
  42e500:	mov	x19, x0
  42e504:	bl	404930 <__ctype_b_loc@plt>
  42e508:	ldr	x11, [x19]
  42e50c:	ldr	x9, [x0]
  42e510:	ldrb	w10, [x11]
  42e514:	ldrh	w8, [x9, x10, lsl #1]
  42e518:	tbz	w8, #13, 42e538 <argp_failure@@Base+0x126c>
  42e51c:	add	x8, x11, #0x1
  42e520:	str	x8, [x19]
  42e524:	ldr	x9, [x0]
  42e528:	ldrb	w10, [x8], #1
  42e52c:	ldrh	w11, [x9, x10, lsl #1]
  42e530:	tbnz	w11, #13, 42e520 <argp_failure@@Base+0x1254>
  42e534:	sub	x11, x8, #0x1
  42e538:	cmp	w10, #0x2d
  42e53c:	cset	w8, ne  // ne = any
  42e540:	cbz	w10, 42e56c <argp_failure@@Base+0x12a0>
  42e544:	ldrh	w9, [x9, w10, uxtw #1]
  42e548:	tbnz	w9, #3, 42e56c <argp_failure@@Base+0x12a0>
  42e54c:	add	x9, x11, #0x1
  42e550:	str	x9, [x19]
  42e554:	ldrb	w10, [x9]
  42e558:	cbz	x10, 42e56c <argp_failure@@Base+0x12a0>
  42e55c:	ldr	x11, [x0]
  42e560:	add	x9, x9, #0x1
  42e564:	ldrh	w10, [x11, x10, lsl #1]
  42e568:	tbz	w10, #3, 42e550 <argp_failure@@Base+0x1284>
  42e56c:	ldr	x19, [sp, #16]
  42e570:	mov	w0, w8
  42e574:	ldp	x29, x30, [sp], #32
  42e578:	ret
  42e57c:	stp	x29, x30, [sp, #-96]!
  42e580:	stp	x26, x25, [sp, #32]
  42e584:	stp	x24, x23, [sp, #48]
  42e588:	stp	x22, x21, [sp, #64]
  42e58c:	stp	x20, x19, [sp, #80]
  42e590:	ldr	w8, [x0, #8]
  42e594:	str	x27, [sp, #16]
  42e598:	mov	x29, sp
  42e59c:	cbz	w8, 42e638 <argp_failure@@Base+0x136c>
  42e5a0:	ldr	x22, [x0]
  42e5a4:	ldr	x24, [x0, #16]
  42e5a8:	mov	x19, x3
  42e5ac:	mov	x20, x2
  42e5b0:	mov	x21, x1
  42e5b4:	sub	w25, w8, #0x1
  42e5b8:	mov	x23, x22
  42e5bc:	ldr	w26, [x23, #24]
  42e5c0:	tbnz	w26, #3, 42e614 <argp_failure@@Base+0x1348>
  42e5c4:	ldr	w27, [x23, #8]
  42e5c8:	sub	w8, w27, #0x1
  42e5cc:	cmp	w8, #0xfe
  42e5d0:	b.hi	42e614 <argp_failure@@Base+0x1348>  // b.pmore
  42e5d4:	bl	404930 <__ctype_b_loc@plt>
  42e5d8:	ldr	x8, [x0]
  42e5dc:	ldrh	w8, [x8, x27, lsl #1]
  42e5e0:	tbz	w8, #14, 42e614 <argp_failure@@Base+0x1348>
  42e5e4:	ldrb	w8, [x24]
  42e5e8:	cmp	w27, w8
  42e5ec:	b.ne	42e614 <argp_failure@@Base+0x1348>  // b.any
  42e5f0:	tst	w26, #0x4
  42e5f4:	csel	x22, x23, x22, eq  // eq = none
  42e5f8:	tbnz	w26, #1, 42e62c <argp_failure@@Base+0x1360>
  42e5fc:	mov	x0, x23
  42e600:	mov	x1, x22
  42e604:	mov	x2, x20
  42e608:	mov	x3, x19
  42e60c:	blr	x21
  42e610:	b	42e630 <argp_failure@@Base+0x1364>
  42e614:	mov	w0, wzr
  42e618:	subs	w25, w25, #0x1
  42e61c:	b.cc	42e63c <argp_failure@@Base+0x1370>  // b.lo, b.ul, b.last
  42e620:	add	x23, x23, #0x30
  42e624:	cbz	w0, 42e5bc <argp_failure@@Base+0x12f0>
  42e628:	b	42e63c <argp_failure@@Base+0x1370>
  42e62c:	mov	w0, wzr
  42e630:	add	x24, x24, #0x1
  42e634:	b	42e618 <argp_failure@@Base+0x134c>
  42e638:	mov	w0, wzr
  42e63c:	ldp	x20, x19, [sp, #80]
  42e640:	ldp	x22, x21, [sp, #64]
  42e644:	ldp	x24, x23, [sp, #48]
  42e648:	ldp	x26, x25, [sp, #32]
  42e64c:	ldr	x27, [sp, #16]
  42e650:	ldp	x29, x30, [sp], #96
  42e654:	ret
  42e658:	stp	x29, x30, [sp, #-32]!
  42e65c:	ldrb	w8, [x0, #24]
  42e660:	str	x19, [sp, #16]
  42e664:	mov	x29, sp
  42e668:	tbnz	w8, #3, 42e694 <argp_failure@@Base+0x13c8>
  42e66c:	ldr	w19, [x0, #8]
  42e670:	sub	w8, w19, #0x1
  42e674:	cmp	w8, #0xfe
  42e678:	b.hi	42e694 <argp_failure@@Base+0x13c8>  // b.pmore
  42e67c:	bl	404930 <__ctype_b_loc@plt>
  42e680:	ldr	x8, [x0]
  42e684:	ldrh	w8, [x8, x19, lsl #1]
  42e688:	lsl	w8, w8, #17
  42e68c:	and	w0, w19, w8, asr #31
  42e690:	b	42e698 <argp_failure@@Base+0x13cc>
  42e694:	mov	w0, wzr
  42e698:	ldr	x19, [sp, #16]
  42e69c:	ldp	x29, x30, [sp], #32
  42e6a0:	ret
  42e6a4:	ldr	x8, [x0, #16]
  42e6a8:	cbnz	x8, 42e6d8 <argp_failure@@Base+0x140c>
  42e6ac:	ldr	x8, [x1, #16]
  42e6b0:	cbnz	x8, 42e6d8 <argp_failure@@Base+0x140c>
  42e6b4:	ldr	w8, [x0, #24]
  42e6b8:	ldr	w9, [x1, #24]
  42e6bc:	orr	w8, w9, w8
  42e6c0:	tbnz	w8, #4, 42e6d8 <argp_failure@@Base+0x140c>
  42e6c4:	ldr	x8, [x3]
  42e6c8:	ldr	w9, [x0, #8]
  42e6cc:	add	x10, x8, #0x1
  42e6d0:	str	x10, [x3]
  42e6d4:	strb	w9, [x8]
  42e6d8:	mov	w0, wzr
  42e6dc:	ret
  42e6e0:	stp	x29, x30, [sp, #-48]!
  42e6e4:	stp	x22, x21, [sp, #16]
  42e6e8:	stp	x20, x19, [sp, #32]
  42e6ec:	mov	x9, x1
  42e6f0:	ldr	w10, [x0, #24]
  42e6f4:	ldr	w11, [x9, #24]
  42e6f8:	ldr	x1, [x0, #16]
  42e6fc:	mov	x19, x3
  42e700:	mov	x8, x2
  42e704:	mov	x20, x0
  42e708:	orr	w22, w11, w10
  42e70c:	mov	x29, sp
  42e710:	cbnz	x1, 42e718 <argp_failure@@Base+0x144c>
  42e714:	ldr	x1, [x9, #16]
  42e718:	tbnz	w22, #4, 42e76c <argp_failure@@Base+0x14a0>
  42e71c:	cbz	x1, 42e76c <argp_failure@@Base+0x14a0>
  42e720:	mov	w2, #0x5                   	// #5
  42e724:	mov	x0, x8
  42e728:	bl	404bd0 <dcgettext@plt>
  42e72c:	mov	x21, x0
  42e730:	tbnz	w22, #0, 42e754 <argp_failure@@Base+0x1488>
  42e734:	mov	x0, x21
  42e738:	bl	404170 <strlen@plt>
  42e73c:	add	x1, x0, #0x6
  42e740:	mov	x0, x19
  42e744:	bl	42e780 <argp_failure@@Base+0x14b4>
  42e748:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42e74c:	add	x1, x1, #0xf0c
  42e750:	b	42e75c <argp_failure@@Base+0x1490>
  42e754:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42e758:	add	x1, x1, #0xf01
  42e75c:	ldr	w2, [x20, #8]
  42e760:	mov	x0, x19
  42e764:	mov	x3, x21
  42e768:	bl	447c2c <_obstack_memory_used@@Base+0xc434>
  42e76c:	ldp	x20, x19, [sp, #32]
  42e770:	ldp	x22, x21, [sp, #16]
  42e774:	mov	w0, wzr
  42e778:	ldp	x29, x30, [sp], #48
  42e77c:	ret
  42e780:	stp	x29, x30, [sp, #-32]!
  42e784:	stp	x20, x19, [sp, #16]
  42e788:	ldp	x9, x8, [x0, #48]
  42e78c:	ldr	x10, [x0, #32]
  42e790:	mov	x19, x0
  42e794:	mov	x20, x1
  42e798:	sub	x9, x8, x9
  42e79c:	cmp	x9, x10
  42e7a0:	mov	x29, sp
  42e7a4:	b.ls	42e7b4 <argp_failure@@Base+0x14e8>  // b.plast
  42e7a8:	mov	x0, x19
  42e7ac:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42e7b0:	ldr	x8, [x19, #56]
  42e7b4:	ldr	x9, [x19, #40]
  42e7b8:	ldr	x10, [x19, #16]
  42e7bc:	bic	x11, x9, x9, asr #63
  42e7c0:	ldr	x9, [x19, #64]
  42e7c4:	add	x11, x11, x20
  42e7c8:	cmp	x11, x10
  42e7cc:	b.cs	42e7f8 <argp_failure@@Base+0x152c>  // b.hs, b.nlast
  42e7d0:	cmp	x8, x9
  42e7d4:	b.cc	42e7ec <argp_failure@@Base+0x1520>  // b.lo, b.ul, b.last
  42e7d8:	mov	w1, #0x1                   	// #1
  42e7dc:	mov	x0, x19
  42e7e0:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42e7e4:	cbz	w0, 42e824 <argp_failure@@Base+0x1558>
  42e7e8:	ldr	x8, [x19, #56]
  42e7ec:	add	x9, x8, #0x1
  42e7f0:	mov	w10, #0x20                  	// #32
  42e7f4:	b	42e81c <argp_failure@@Base+0x1550>
  42e7f8:	cmp	x8, x9
  42e7fc:	b.cc	42e814 <argp_failure@@Base+0x1548>  // b.lo, b.ul, b.last
  42e800:	mov	w1, #0x1                   	// #1
  42e804:	mov	x0, x19
  42e808:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42e80c:	cbz	w0, 42e824 <argp_failure@@Base+0x1558>
  42e810:	ldr	x8, [x19, #56]
  42e814:	add	x9, x8, #0x1
  42e818:	mov	w10, #0xa                   	// #10
  42e81c:	str	x9, [x19, #56]
  42e820:	strb	w10, [x8]
  42e824:	ldp	x20, x19, [sp, #16]
  42e828:	ldp	x29, x30, [sp], #32
  42e82c:	ret
  42e830:	stp	x29, x30, [sp, #-64]!
  42e834:	stp	x22, x21, [sp, #32]
  42e838:	stp	x20, x19, [sp, #48]
  42e83c:	ldr	w8, [x1, #24]
  42e840:	mov	x19, x1
  42e844:	mov	w20, w0
  42e848:	str	x23, [sp, #16]
  42e84c:	mov	x29, sp
  42e850:	cbz	w8, 42e934 <argp_failure@@Base+0x1668>
  42e854:	ldr	x9, [x19, #16]
  42e858:	ldr	x8, [x19]
  42e85c:	ldr	x23, [x9]
  42e860:	ldr	x22, [x8, #32]
  42e864:	cbz	x23, 42e8b4 <argp_failure@@Base+0x15e8>
  42e868:	ldr	w9, [x9, #8]
  42e86c:	cbz	w9, 42e8b4 <argp_failure@@Base+0x15e8>
  42e870:	ldr	w8, [x8, #24]
  42e874:	ldr	w9, [x23, #24]
  42e878:	cmp	w8, w9
  42e87c:	b.eq	42e8b4 <argp_failure@@Base+0x15e8>  // b.none
  42e880:	ldr	x21, [x19, #8]
  42e884:	ldp	x8, x9, [x21, #56]
  42e888:	cmp	x8, x9
  42e88c:	b.cc	42e8a4 <argp_failure@@Base+0x15d8>  // b.lo, b.ul, b.last
  42e890:	mov	w1, #0x1                   	// #1
  42e894:	mov	x0, x21
  42e898:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42e89c:	cbz	w0, 42e8b4 <argp_failure@@Base+0x15e8>
  42e8a0:	ldr	x8, [x21, #56]
  42e8a4:	add	x9, x8, #0x1
  42e8a8:	mov	w10, #0xa                   	// #10
  42e8ac:	str	x9, [x21, #56]
  42e8b0:	strb	w10, [x8]
  42e8b4:	cbz	x22, 42e92c <argp_failure@@Base+0x1660>
  42e8b8:	ldr	x0, [x22]
  42e8bc:	cbz	x0, 42e92c <argp_failure@@Base+0x1660>
  42e8c0:	ldrb	w8, [x0]
  42e8c4:	cbz	w8, 42e92c <argp_failure@@Base+0x1660>
  42e8c8:	cbz	x23, 42e8f4 <argp_failure@@Base+0x1628>
  42e8cc:	ldr	x8, [x23, #32]
  42e8d0:	cmp	x8, x22
  42e8d4:	b.eq	42e92c <argp_failure@@Base+0x1660>  // b.none
  42e8d8:	cbz	x8, 42e8ec <argp_failure@@Base+0x1620>
  42e8dc:	ldr	x8, [x8, #16]
  42e8e0:	cmp	x8, x22
  42e8e4:	b.eq	42e8ec <argp_failure@@Base+0x1620>  // b.none
  42e8e8:	cbnz	x8, 42e8dc <argp_failure@@Base+0x1610>
  42e8ec:	cmp	x8, x22
  42e8f0:	b.eq	42e92c <argp_failure@@Base+0x1660>  // b.none
  42e8f4:	ldr	x8, [x19, #8]
  42e8f8:	ldr	x1, [x22, #24]
  42e8fc:	mov	x2, x19
  42e900:	ldrsw	x23, [x8, #24]
  42e904:	bl	42e9f4 <argp_failure@@Base+0x1728>
  42e908:	ldr	x21, [x19, #8]
  42e90c:	ldp	x9, x8, [x21, #48]
  42e910:	ldr	x10, [x21, #32]
  42e914:	sub	x8, x8, x9
  42e918:	cmp	x8, x10
  42e91c:	b.ls	42e928 <argp_failure@@Base+0x165c>  // b.plast
  42e920:	mov	x0, x21
  42e924:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42e928:	str	x23, [x21, #24]
  42e92c:	str	wzr, [x19, #24]
  42e930:	b	42e970 <argp_failure@@Base+0x16a4>
  42e934:	ldr	x21, [x19, #8]
  42e938:	ldp	x8, x9, [x21, #56]
  42e93c:	add	x10, x8, #0x2
  42e940:	cmp	x10, x9
  42e944:	b.ls	42e95c <argp_failure@@Base+0x1690>  // b.plast
  42e948:	mov	w1, #0x2                   	// #2
  42e94c:	mov	x0, x21
  42e950:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42e954:	cbz	w0, 42e970 <argp_failure@@Base+0x16a4>
  42e958:	ldr	x8, [x21, #56]
  42e95c:	mov	w9, #0x202c                	// #8236
  42e960:	strh	w9, [x8]
  42e964:	ldr	x8, [x21, #56]
  42e968:	add	x8, x8, #0x2
  42e96c:	str	x8, [x21, #56]
  42e970:	ldr	x0, [x19, #8]
  42e974:	mov	w1, w20
  42e978:	ldp	x20, x19, [sp, #48]
  42e97c:	ldp	x22, x21, [sp, #32]
  42e980:	ldr	x23, [sp, #16]
  42e984:	ldp	x29, x30, [sp], #64
  42e988:	b	42ec20 <argp_failure@@Base+0x1954>
  42e98c:	stp	x29, x30, [sp, #-48]!
  42e990:	stp	x22, x21, [sp, #16]
  42e994:	stp	x20, x19, [sp, #32]
  42e998:	ldr	x8, [x0, #16]
  42e99c:	mov	x29, sp
  42e9a0:	cbz	x8, 42e9e4 <argp_failure@@Base+0x1718>
  42e9a4:	ldr	w22, [x0, #24]
  42e9a8:	mov	x20, x2
  42e9ac:	mov	x21, x1
  42e9b0:	mov	w2, #0x5                   	// #5
  42e9b4:	mov	x0, x3
  42e9b8:	mov	x1, x8
  42e9bc:	mov	x19, x4
  42e9c0:	bl	404bd0 <dcgettext@plt>
  42e9c4:	tst	w22, #0x1
  42e9c8:	csel	x1, x21, x20, eq  // eq = none
  42e9cc:	mov	x2, x0
  42e9d0:	mov	x0, x19
  42e9d4:	ldp	x20, x19, [sp, #32]
  42e9d8:	ldp	x22, x21, [sp, #16]
  42e9dc:	ldp	x29, x30, [sp], #48
  42e9e0:	b	447c2c <_obstack_memory_used@@Base+0xc434>
  42e9e4:	ldp	x20, x19, [sp, #32]
  42e9e8:	ldp	x22, x21, [sp, #16]
  42e9ec:	ldp	x29, x30, [sp], #48
  42e9f0:	ret
  42e9f4:	stp	x29, x30, [sp, #-80]!
  42e9f8:	stp	x24, x23, [sp, #32]
  42e9fc:	stp	x22, x21, [sp, #48]
  42ea00:	stp	x20, x19, [sp, #64]
  42ea04:	ldr	x8, [x1, #48]
  42ea08:	mov	x19, x2
  42ea0c:	mov	x21, x1
  42ea10:	mov	x1, x0
  42ea14:	mov	w2, #0x5                   	// #5
  42ea18:	mov	x0, x8
  42ea1c:	str	x25, [sp, #16]
  42ea20:	mov	x29, sp
  42ea24:	bl	404bd0 <dcgettext@plt>
  42ea28:	mov	x20, x0
  42ea2c:	cbz	x21, 42ea68 <argp_failure@@Base+0x179c>
  42ea30:	ldr	x8, [x21, #40]
  42ea34:	cbz	x8, 42ea68 <argp_failure@@Base+0x179c>
  42ea38:	ldr	x1, [x19, #32]
  42ea3c:	mov	x0, x21
  42ea40:	bl	42f768 <argp_parse@@Base+0xaac>
  42ea44:	ldr	x8, [x21, #40]
  42ea48:	mov	x2, x0
  42ea4c:	mov	w0, #0x3                   	// #3
  42ea50:	movk	w0, #0x200, lsl #16
  42ea54:	mov	x1, x20
  42ea58:	blr	x8
  42ea5c:	mov	x21, x0
  42ea60:	cbnz	x21, 42ea70 <argp_failure@@Base+0x17a4>
  42ea64:	b	42ebe4 <argp_failure@@Base+0x1918>
  42ea68:	mov	x21, x20
  42ea6c:	cbz	x21, 42ebe4 <argp_failure@@Base+0x1918>
  42ea70:	ldrb	w8, [x21]
  42ea74:	cbz	w8, 42ebd8 <argp_failure@@Base+0x190c>
  42ea78:	ldr	x8, [x19, #16]
  42ea7c:	ldr	x8, [x8]
  42ea80:	cbz	x8, 42eab8 <argp_failure@@Base+0x17ec>
  42ea84:	ldr	x22, [x19, #8]
  42ea88:	ldp	x8, x9, [x22, #56]
  42ea8c:	cmp	x8, x9
  42ea90:	b.cc	42eaa8 <argp_failure@@Base+0x17dc>  // b.lo, b.ul, b.last
  42ea94:	mov	w1, #0x1                   	// #1
  42ea98:	mov	x0, x22
  42ea9c:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42eaa0:	cbz	w0, 42eab8 <argp_failure@@Base+0x17ec>
  42eaa4:	ldr	x8, [x22, #56]
  42eaa8:	add	x9, x8, #0x1
  42eaac:	mov	w10, #0xa                   	// #10
  42eab0:	str	x9, [x22, #56]
  42eab4:	strb	w10, [x8]
  42eab8:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42eabc:	ldr	x0, [x19, #8]
  42eac0:	ldr	w1, [x25, #480]
  42eac4:	bl	42ec20 <argp_failure@@Base+0x1954>
  42eac8:	ldr	x22, [x19, #8]
  42eacc:	ldrsw	x24, [x25, #480]
  42ead0:	ldp	x10, x9, [x22, #48]
  42ead4:	ldr	x8, [x22, #32]
  42ead8:	sub	x9, x9, x10
  42eadc:	cmp	x9, x8
  42eae0:	b.ls	42eb04 <argp_failure@@Base+0x1838>  // b.plast
  42eae4:	mov	x0, x22
  42eae8:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42eaec:	ldr	x23, [x19, #8]
  42eaf0:	ldrsw	x25, [x25, #480]
  42eaf4:	ldp	x10, x9, [x23, #48]
  42eaf8:	ldr	x8, [x23, #32]
  42eafc:	sub	x9, x9, x10
  42eb00:	b	42eb0c <argp_failure@@Base+0x1840>
  42eb04:	mov	x25, x24
  42eb08:	mov	x23, x22
  42eb0c:	cmp	x9, x8
  42eb10:	str	x24, [x22, #8]
  42eb14:	mov	x22, x23
  42eb18:	b.ls	42eb28 <argp_failure@@Base+0x185c>  // b.plast
  42eb1c:	mov	x0, x23
  42eb20:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42eb24:	ldr	x22, [x19, #8]
  42eb28:	mov	x0, x21
  42eb2c:	str	x25, [x23, #24]
  42eb30:	bl	404170 <strlen@plt>
  42eb34:	cbz	x0, 42eb78 <argp_failure@@Base+0x18ac>
  42eb38:	mov	x23, x0
  42eb3c:	ldp	x0, x8, [x22, #56]
  42eb40:	add	x9, x0, x23
  42eb44:	cmp	x9, x8
  42eb48:	b.ls	42eb60 <argp_failure@@Base+0x1894>  // b.plast
  42eb4c:	mov	x0, x22
  42eb50:	mov	x1, x23
  42eb54:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42eb58:	cbz	w0, 42eb78 <argp_failure@@Base+0x18ac>
  42eb5c:	ldr	x0, [x22, #56]
  42eb60:	mov	x1, x21
  42eb64:	mov	x2, x23
  42eb68:	bl	4040f0 <memcpy@plt>
  42eb6c:	ldr	x8, [x22, #56]
  42eb70:	add	x8, x8, x23
  42eb74:	str	x8, [x22, #56]
  42eb78:	ldr	x23, [x19, #8]
  42eb7c:	ldp	x9, x8, [x23, #48]
  42eb80:	ldr	x10, [x23, #32]
  42eb84:	mov	x22, x23
  42eb88:	sub	x9, x8, x9
  42eb8c:	cmp	x9, x10
  42eb90:	b.ls	42eba4 <argp_failure@@Base+0x18d8>  // b.plast
  42eb94:	mov	x0, x23
  42eb98:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42eb9c:	ldr	x22, [x19, #8]
  42eba0:	ldr	x8, [x22, #56]
  42eba4:	str	xzr, [x23, #8]
  42eba8:	ldr	x9, [x22, #64]
  42ebac:	cmp	x8, x9
  42ebb0:	b.cc	42ebc8 <argp_failure@@Base+0x18fc>  // b.lo, b.ul, b.last
  42ebb4:	mov	w1, #0x1                   	// #1
  42ebb8:	mov	x0, x22
  42ebbc:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42ebc0:	cbz	w0, 42ebd8 <argp_failure@@Base+0x190c>
  42ebc4:	ldr	x8, [x22, #56]
  42ebc8:	add	x9, x8, #0x1
  42ebcc:	mov	w10, #0xa                   	// #10
  42ebd0:	str	x9, [x22, #56]
  42ebd4:	strb	w10, [x8]
  42ebd8:	ldr	x8, [x19, #16]
  42ebdc:	mov	w9, #0x1                   	// #1
  42ebe0:	str	w9, [x8, #8]
  42ebe4:	cmp	x21, x20
  42ebe8:	b.eq	42ec08 <argp_failure@@Base+0x193c>  // b.none
  42ebec:	mov	x0, x21
  42ebf0:	ldp	x20, x19, [sp, #64]
  42ebf4:	ldp	x22, x21, [sp, #48]
  42ebf8:	ldp	x24, x23, [sp, #32]
  42ebfc:	ldr	x25, [sp, #16]
  42ec00:	ldp	x29, x30, [sp], #80
  42ec04:	b	4049b0 <free@plt>
  42ec08:	ldp	x20, x19, [sp, #64]
  42ec0c:	ldp	x22, x21, [sp, #48]
  42ec10:	ldp	x24, x23, [sp, #32]
  42ec14:	ldr	x25, [sp, #16]
  42ec18:	ldp	x29, x30, [sp], #80
  42ec1c:	ret
  42ec20:	stp	x29, x30, [sp, #-48]!
  42ec24:	str	x21, [sp, #16]
  42ec28:	stp	x20, x19, [sp, #32]
  42ec2c:	ldp	x9, x8, [x0, #48]
  42ec30:	ldr	x10, [x0, #32]
  42ec34:	mov	x19, x0
  42ec38:	mov	w20, w1
  42ec3c:	sub	x8, x8, x9
  42ec40:	cmp	x8, x10
  42ec44:	mov	x29, sp
  42ec48:	b.ls	42ec54 <argp_failure@@Base+0x1988>  // b.plast
  42ec4c:	mov	x0, x19
  42ec50:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  42ec54:	ldr	x8, [x19, #40]
  42ec58:	cmp	x8, #0x0
  42ec5c:	csel	w8, w8, wzr, gt
  42ec60:	sub	w8, w20, w8
  42ec64:	cmp	w8, #0x1
  42ec68:	b.lt	42ecac <argp_failure@@Base+0x19e0>  // b.tstop
  42ec6c:	add	w20, w8, #0x1
  42ec70:	mov	w21, #0x20                  	// #32
  42ec74:	ldp	x8, x9, [x19, #56]
  42ec78:	cmp	x8, x9
  42ec7c:	b.cc	42ec94 <argp_failure@@Base+0x19c8>  // b.lo, b.ul, b.last
  42ec80:	mov	w1, #0x1                   	// #1
  42ec84:	mov	x0, x19
  42ec88:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  42ec8c:	cbz	w0, 42eca0 <argp_failure@@Base+0x19d4>
  42ec90:	ldr	x8, [x19, #56]
  42ec94:	add	x9, x8, #0x1
  42ec98:	str	x9, [x19, #56]
  42ec9c:	strb	w21, [x8]
  42eca0:	sub	w20, w20, #0x1
  42eca4:	cmp	w20, #0x1
  42eca8:	b.gt	42ec74 <argp_failure@@Base+0x19a8>
  42ecac:	ldp	x20, x19, [sp, #32]
  42ecb0:	ldr	x21, [sp, #16]
  42ecb4:	ldp	x29, x30, [sp], #48
  42ecb8:	ret

000000000042ecbc <argp_parse@@Base>:
  42ecbc:	stp	x29, x30, [sp, #-96]!
  42ecc0:	stp	x28, x27, [sp, #16]
  42ecc4:	stp	x26, x25, [sp, #32]
  42ecc8:	stp	x24, x23, [sp, #48]
  42eccc:	stp	x22, x21, [sp, #64]
  42ecd0:	stp	x20, x19, [sp, #80]
  42ecd4:	mov	x29, sp
  42ecd8:	sub	sp, sp, #0x170
  42ecdc:	mov	x19, sp
  42ece0:	mov	w24, w3
  42ece4:	mov	x22, x2
  42ece8:	mov	w21, w1
  42ecec:	mov	x25, x0
  42ecf0:	stp	x4, x5, [x19, #8]
  42ecf4:	tbnz	w3, #0, 42ed24 <argp_parse@@Base+0x68>
  42ecf8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42ecfc:	ldr	x9, [x8, #616]
  42ed00:	cbnz	x9, 42ed0c <argp_parse@@Base+0x50>
  42ed04:	ldr	x9, [x22]
  42ed08:	str	x9, [x8, #616]
  42ed0c:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42ed10:	ldr	x8, [x20, #656]
  42ed14:	cbnz	x8, 42ed24 <argp_parse@@Base+0x68>
  42ed18:	ldr	x0, [x22]
  42ed1c:	bl	43051c <argp_parse@@Base+0x1860>
  42ed20:	str	x0, [x20, #656]
  42ed24:	add	x27, x19, #0x18
  42ed28:	tbnz	w24, #4, 42edb8 <argp_parse@@Base+0xfc>
  42ed2c:	mov	x10, sp
  42ed30:	sub	x8, x10, #0x80
  42ed34:	mov	sp, x8
  42ed38:	mov	x11, sp
  42ed3c:	sub	x9, x11, #0x40
  42ed40:	mov	sp, x9
  42ed44:	movi	v0.2d, #0x0
  42ed48:	stur	xzr, [x11, #-16]
  42ed4c:	stp	q0, q0, [x11, #-48]
  42ed50:	stur	q0, [x11, #-64]
  42ed54:	stur	x8, [x11, #-32]
  42ed58:	stp	q0, q0, [x10, #-32]
  42ed5c:	stp	q0, q0, [x10, #-64]
  42ed60:	stp	q0, q0, [x10, #-96]
  42ed64:	stp	q0, q0, [x10, #-128]
  42ed68:	cbz	x25, 42ed70 <argp_parse@@Base+0xb4>
  42ed6c:	str	x25, [x8], #32
  42ed70:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  42ed74:	ldr	x10, [x10, #520]
  42ed78:	adrp	x11, 453000 <_obstack_memory_used@@Base+0x17808>
  42ed7c:	add	x11, x11, #0x50
  42ed80:	str	x11, [x8]
  42ed84:	cbnz	x10, 42ed9c <argp_parse@@Base+0xe0>
  42ed88:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42ed8c:	ldr	x10, [x10, #2984]
  42ed90:	cbnz	x10, 42ed9c <argp_parse@@Base+0xe0>
  42ed94:	mov	w10, #0x1                   	// #1
  42ed98:	b	42edac <argp_parse@@Base+0xf0>
  42ed9c:	adrp	x10, 453000 <_obstack_memory_used@@Base+0x17808>
  42eda0:	add	x10, x10, #0x88
  42eda4:	str	x10, [x8, #32]
  42eda8:	mov	w10, #0x2                   	// #2
  42edac:	lsl	x10, x10, #5
  42edb0:	mov	x25, x9
  42edb4:	str	xzr, [x8, x10]
  42edb8:	mov	w8, #0x1                   	// #1
  42edbc:	movi	v0.2d, #0x0
  42edc0:	bic	w8, w8, w24, lsr #2
  42edc4:	stur	q0, [x27, #248]
  42edc8:	stur	q0, [x27, #232]
  42edcc:	stur	q0, [x27, #216]
  42edd0:	stp	x8, xzr, [x29, #-80]
  42edd4:	stp	xzr, xzr, [x29, #-64]
  42edd8:	cbz	x25, 42ee0c <argp_parse@@Base+0x150>
  42eddc:	sub	x1, x29, #0x50
  42ede0:	mov	x0, x25
  42ede4:	bl	42f948 <argp_parse@@Base+0xc8c>
  42ede8:	ldp	x9, x10, [x29, #-64]
  42edec:	ldp	x8, x11, [x29, #-80]
  42edf0:	mov	w12, #0x48                  	// #72
  42edf4:	mul	x9, x9, x12
  42edf8:	lsl	x26, x10, #3
  42edfc:	lsl	x10, x11, #5
  42ee00:	add	x20, x9, #0x48
  42ee04:	add	x9, x10, #0x20
  42ee08:	b	42ee18 <argp_parse@@Base+0x15c>
  42ee0c:	mov	x26, xzr
  42ee10:	mov	w20, #0x48                  	// #72
  42ee14:	mov	w9, #0x20                  	// #32
  42ee18:	add	x23, x20, x26
  42ee1c:	add	x28, x23, x9
  42ee20:	add	x8, x8, x28
  42ee24:	add	x0, x8, #0x1
  42ee28:	bl	4044d0 <malloc@plt>
  42ee2c:	str	x0, [x19, #232]
  42ee30:	cbz	x0, 42eea4 <argp_parse@@Base+0x1e8>
  42ee34:	ldur	q1, [x27, #216]
  42ee38:	ldur	q2, [x27, #232]
  42ee3c:	ldur	q3, [x27, #248]
  42ee40:	add	x8, x0, x20
  42ee44:	add	x9, x0, x23
  42ee48:	add	x10, x0, x28
  42ee4c:	movi	v0.2s, #0x1
  42ee50:	str	x0, [x19, #104]
  42ee54:	mov	x0, x8
  42ee58:	mov	w1, wzr
  42ee5c:	mov	x2, x26
  42ee60:	str	x8, [x19, #120]
  42ee64:	stp	x10, x9, [x19, #32]
  42ee68:	str	d0, [x19, #48]
  42ee6c:	stur	q1, [x19, #56]
  42ee70:	stur	q2, [x19, #72]
  42ee74:	stur	q3, [x19, #88]
  42ee78:	bl	4045e0 <memset@plt>
  42ee7c:	ldur	q0, [x19, #32]
  42ee80:	ldr	x8, [x19, #120]
  42ee84:	add	x9, x19, #0x18
  42ee88:	stur	x9, [x29, #-48]
  42ee8c:	stur	q0, [x29, #-40]
  42ee90:	stur	x8, [x29, #-24]
  42ee94:	tbnz	w24, #3, 42eeac <argp_parse@@Base+0x1f0>
  42ee98:	tbz	w24, #2, 42eec0 <argp_parse@@Base+0x204>
  42ee9c:	mov	w8, #0x2b                  	// #43
  42eea0:	b	42eeb0 <argp_parse@@Base+0x1f4>
  42eea4:	mov	w24, #0xc                   	// #12
  42eea8:	b	42f6cc <argp_parse@@Base+0xa10>
  42eeac:	mov	w8, #0x2d                  	// #45
  42eeb0:	fmov	x9, d0
  42eeb4:	add	x10, x9, #0x1
  42eeb8:	stur	x10, [x29, #-40]
  42eebc:	strb	w8, [x9]
  42eec0:	ldur	x8, [x29, #-40]
  42eec4:	strb	wzr, [x8]
  42eec8:	ldur	x8, [x29, #-32]
  42eecc:	str	xzr, [x8]
  42eed0:	str	x25, [x19, #24]
  42eed4:	cbz	x25, 42eefc <argp_parse@@Base+0x240>
  42eed8:	ldr	x3, [x19, #104]
  42eedc:	sub	x4, x29, #0x30
  42eee0:	mov	x0, x25
  42eee4:	mov	x1, xzr
  42eee8:	mov	w2, wzr
  42eeec:	bl	42fa14 <argp_parse@@Base+0xd58>
  42eef0:	ldr	x25, [x19, #24]
  42eef4:	ldr	x28, [x19, #104]
  42eef8:	b	42ef04 <argp_parse@@Base+0x248>
  42eefc:	ldr	x0, [x19, #104]
  42ef00:	mov	x28, x0
  42ef04:	str	x0, [x19, #112]
  42ef08:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42ef0c:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42ef10:	ldr	x9, [x9, #624]
  42ef14:	ldr	x10, [x10, #632]
  42ef18:	mov	w26, #0x6                   	// #6
  42ef1c:	add	x8, x19, #0x18
  42ef20:	movi	v0.2d, #0x0
  42ef24:	movk	w26, #0x100, lsl #16
  42ef28:	cmp	x28, x0
  42ef2c:	stur	q0, [x19, #136]
  42ef30:	mov	w11, #0x1                   	// #1
  42ef34:	str	w21, [x19, #144]
  42ef38:	add	x21, x8, #0x70
  42ef3c:	stur	q0, [x19, #152]
  42ef40:	str	x25, [x19, #136]
  42ef44:	stur	q0, [x19, #168]
  42ef48:	stur	q0, [x19, #184]
  42ef4c:	str	x22, [x19, #152]
  42ef50:	stp	wzr, w24, [x19, #160]
  42ef54:	stp	xzr, x9, [x19, #200]
  42ef58:	stp	x10, x8, [x19, #216]
  42ef5c:	str	w11, [x19, #128]
  42ef60:	b.cs	42f01c <argp_parse@@Base+0x360>  // b.hs, b.nlast
  42ef64:	ldr	x8, [x19, #16]
  42ef68:	mov	w24, wzr
  42ef6c:	sub	w23, w26, #0x3
  42ef70:	str	x8, [x28, #48]
  42ef74:	cmp	w24, #0x7
  42ef78:	b.eq	42ef80 <argp_parse@@Base+0x2c4>  // b.none
  42ef7c:	cbnz	w24, 42f6cc <argp_parse@@Base+0xa10>
  42ef80:	ldr	x8, [x28, #32]
  42ef84:	cbz	x8, 42ef98 <argp_parse@@Base+0x2dc>
  42ef88:	ldr	x8, [x8, #56]
  42ef8c:	ldr	w9, [x28, #40]
  42ef90:	ldr	x8, [x8, x9, lsl #3]
  42ef94:	str	x8, [x28, #48]
  42ef98:	ldr	x8, [x28]
  42ef9c:	cbz	x8, 42efd8 <argp_parse@@Base+0x31c>
  42efa0:	ldr	x9, [x28, #64]
  42efa4:	mov	w0, w23
  42efa8:	mov	x1, xzr
  42efac:	mov	x2, x21
  42efb0:	str	x9, [x19, #192]
  42efb4:	ldr	q0, [x28, #48]
  42efb8:	stur	q0, [x27, #152]
  42efbc:	ldr	w9, [x28, #24]
  42efc0:	str	w9, [x19, #168]
  42efc4:	blr	x8
  42efc8:	ldr	x8, [x19, #192]
  42efcc:	mov	w24, w0
  42efd0:	str	x8, [x28, #64]
  42efd4:	b	42f000 <argp_parse@@Base+0x344>
  42efd8:	ldr	x8, [x28, #8]
  42efdc:	ldr	x8, [x8, #32]
  42efe0:	cbz	x8, 42effc <argp_parse@@Base+0x340>
  42efe4:	ldr	x8, [x8]
  42efe8:	cbz	x8, 42effc <argp_parse@@Base+0x340>
  42efec:	ldp	x8, x9, [x28, #48]
  42eff0:	str	x8, [x9]
  42eff4:	ldr	x8, [x28]
  42eff8:	cbnz	x8, 42efa0 <argp_parse@@Base+0x2e4>
  42effc:	mov	w24, #0x7                   	// #7
  42f000:	ldr	x8, [x19, #112]
  42f004:	add	x28, x28, #0x48
  42f008:	cmp	x28, x8
  42f00c:	b.cc	42ef74 <argp_parse@@Base+0x2b8>  // b.lo, b.ul, b.last
  42f010:	cmp	w24, #0x7
  42f014:	b.eq	42f01c <argp_parse@@Base+0x360>  // b.none
  42f018:	cbnz	w24, 42f6cc <argp_parse@@Base+0xa10>
  42f01c:	ldr	w8, [x19, #164]
  42f020:	tbnz	w8, #1, 42f030 <argp_parse@@Base+0x374>
  42f024:	mov	w8, #0x1                   	// #1
  42f028:	str	w8, [x19, #52]
  42f02c:	b	42f050 <argp_parse@@Base+0x394>
  42f030:	str	wzr, [x19, #52]
  42f034:	tbz	w8, #0, 42f050 <argp_parse@@Base+0x394>
  42f038:	ldr	x8, [x19, #152]
  42f03c:	ldr	w9, [x19, #144]
  42f040:	sub	x8, x8, #0x8
  42f044:	add	w9, w9, #0x1
  42f048:	str	x8, [x19, #152]
  42f04c:	str	w9, [x19, #144]
  42f050:	ldr	x8, [x19, #152]
  42f054:	cmp	x8, x22
  42f058:	b.eq	42f06c <argp_parse@@Base+0x3b0>  // b.none
  42f05c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42f060:	ldr	x8, [x8, #656]
  42f064:	str	x8, [x19, #200]
  42f068:	b	42f07c <argp_parse@@Base+0x3c0>
  42f06c:	ldr	x0, [x22]
  42f070:	cbz	x0, 42f05c <argp_parse@@Base+0x3a0>
  42f074:	bl	43051c <argp_parse@@Base+0x1860>
  42f078:	str	x0, [x19, #200]
  42f07c:	add	x8, x19, #0x18
  42f080:	mov	w28, #0xffffffff            	// #-1
  42f084:	add	x23, x8, #0x18
  42f088:	ldr	w8, [x19, #172]
  42f08c:	cbz	w8, 42f0a0 <argp_parse@@Base+0x3e4>
  42f090:	ldr	w22, [x19, #160]
  42f094:	cmp	w22, w8
  42f098:	b.ge	42f134 <argp_parse@@Base+0x478>  // b.tcont
  42f09c:	str	wzr, [x19, #172]
  42f0a0:	ldr	w8, [x19, #128]
  42f0a4:	ldr	w22, [x19, #160]
  42f0a8:	cbz	w8, 42f134 <argp_parse@@Base+0x478>
  42f0ac:	ldr	w0, [x19, #144]
  42f0b0:	ldr	x1, [x19, #152]
  42f0b4:	ldrb	w8, [x19, #164]
  42f0b8:	ldp	x2, x3, [x19, #32]
  42f0bc:	mov	x4, xzr
  42f0c0:	mov	x5, x23
  42f0c4:	str	w22, [x19, #48]
  42f0c8:	str	w28, [x19, #56]
  42f0cc:	tbnz	w8, #6, 42f0d8 <argp_parse@@Base+0x41c>
  42f0d0:	bl	43b444 <argp_parse@@Base+0xc788>
  42f0d4:	b	42f0dc <argp_parse@@Base+0x420>
  42f0d8:	bl	43b460 <argp_parse@@Base+0xc7a4>
  42f0dc:	ldr	w22, [x19, #48]
  42f0e0:	mov	w25, w0
  42f0e4:	cmn	w0, #0x1
  42f0e8:	str	w22, [x19, #160]
  42f0ec:	b.eq	42f108 <argp_parse@@Base+0x44c>  // b.none
  42f0f0:	cmp	w25, #0x3f
  42f0f4:	b.eq	42f298 <argp_parse@@Base+0x5dc>  // b.none
  42f0f8:	cmp	w25, #0x1
  42f0fc:	b.ne	42f2a8 <argp_parse@@Base+0x5ec>  // b.any
  42f100:	ldr	x25, [x19, #64]
  42f104:	b	42f160 <argp_parse@@Base+0x4a4>
  42f108:	cmp	w22, #0x2
  42f10c:	str	wzr, [x19, #128]
  42f110:	b.lt	42f134 <argp_parse@@Base+0x478>  // b.tstop
  42f114:	ldr	x8, [x19, #152]
  42f118:	sub	w9, w22, #0x1
  42f11c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  42f120:	add	x1, x1, #0x25c
  42f124:	ldr	x0, [x8, w9, sxtw #3]
  42f128:	bl	404900 <strcmp@plt>
  42f12c:	cbnz	w0, 42f134 <argp_parse@@Base+0x478>
  42f130:	str	w22, [x19, #172]
  42f134:	ldr	w8, [x19, #144]
  42f138:	cmp	w22, w8
  42f13c:	b.ge	42f3f0 <argp_parse@@Base+0x734>  // b.tcont
  42f140:	ldrb	w8, [x19, #164]
  42f144:	tbnz	w8, #2, 42f3f0 <argp_parse@@Base+0x734>
  42f148:	ldr	x8, [x19, #152]
  42f14c:	add	w9, w22, #0x1
  42f150:	str	w9, [x19, #160]
  42f154:	ldr	x25, [x8, w22, sxtw #3]
  42f158:	mov	w22, w9
  42f15c:	str	x25, [x19, #64]
  42f160:	ldp	x9, x10, [x19, #104]
  42f164:	sub	w8, w22, #0x1
  42f168:	str	w8, [x19, #160]
  42f16c:	cmp	x9, x10
  42f170:	b.cs	42f3a0 <argp_parse@@Base+0x6e4>  // b.hs, b.nlast
  42f174:	add	x20, x9, #0x48
  42f178:	add	w9, w8, #0x1
  42f17c:	str	w9, [x19, #160]
  42f180:	ldur	x9, [x20, #-72]
  42f184:	cbz	x9, 42f208 <argp_parse@@Base+0x54c>
  42f188:	ldur	x8, [x20, #-8]
  42f18c:	mov	w0, wzr
  42f190:	mov	x1, x25
  42f194:	mov	x2, x21
  42f198:	str	x8, [x19, #192]
  42f19c:	ldur	q0, [x20, #-24]
  42f1a0:	stur	q0, [x27, #152]
  42f1a4:	ldur	w8, [x20, #-48]
  42f1a8:	str	w8, [x19, #168]
  42f1ac:	blr	x9
  42f1b0:	ldr	x8, [x19, #192]
  42f1b4:	cmp	w0, #0x7
  42f1b8:	stur	x8, [x20, #-8]
  42f1bc:	b.ne	42f248 <argp_parse@@Base+0x58c>  // b.any
  42f1c0:	ldr	w9, [x19, #160]
  42f1c4:	ldur	x8, [x20, #-72]
  42f1c8:	sub	w9, w9, #0x1
  42f1cc:	str	w9, [x19, #160]
  42f1d0:	cbz	x8, 42f20c <argp_parse@@Base+0x550>
  42f1d4:	ldur	q0, [x20, #-24]
  42f1d8:	mov	w0, #0x6                   	// #6
  42f1dc:	movk	w0, #0x100, lsl #16
  42f1e0:	mov	x1, xzr
  42f1e4:	stur	q0, [x27, #152]
  42f1e8:	ldur	w9, [x20, #-48]
  42f1ec:	mov	x2, x21
  42f1f0:	str	w9, [x19, #168]
  42f1f4:	blr	x8
  42f1f8:	ldr	x8, [x19, #192]
  42f1fc:	mov	w24, w0
  42f200:	stur	x8, [x20, #-8]
  42f204:	b	42f210 <argp_parse@@Base+0x554>
  42f208:	str	w8, [x19, #160]
  42f20c:	mov	w24, #0x7                   	// #7
  42f210:	cmp	w24, #0x7
  42f214:	b.ne	42f230 <argp_parse@@Base+0x574>  // b.any
  42f218:	ldr	x8, [x19, #112]
  42f21c:	cmp	x20, x8
  42f220:	b.cs	42f230 <argp_parse@@Base+0x574>  // b.hs, b.nlast
  42f224:	ldr	w8, [x19, #160]
  42f228:	add	x20, x20, #0x48
  42f22c:	b	42f178 <argp_parse@@Base+0x4bc>
  42f230:	mov	w8, #0x6                   	// #6
  42f234:	movk	w8, #0x100, lsl #16
  42f238:	cbz	w24, 42f254 <argp_parse@@Base+0x598>
  42f23c:	cmp	w24, #0x7
  42f240:	b.ne	42f398 <argp_parse@@Base+0x6dc>  // b.any
  42f244:	b	42f3a0 <argp_parse@@Base+0x6e4>
  42f248:	mov	w24, w0
  42f24c:	mov	w8, wzr
  42f250:	cbnz	w24, 42f23c <argp_parse@@Base+0x580>
  42f254:	cmp	w8, w26
  42f258:	b.ne	42f268 <argp_parse@@Base+0x5ac>  // b.any
  42f25c:	ldr	w8, [x19, #144]
  42f260:	str	w8, [x19, #160]
  42f264:	b	42f26c <argp_parse@@Base+0x5b0>
  42f268:	ldr	w8, [x19, #160]
  42f26c:	mov	w24, wzr
  42f270:	subs	w8, w8, w22
  42f274:	b.ge	42f284 <argp_parse@@Base+0x5c8>  // b.tcont
  42f278:	mov	w8, #0x1                   	// #1
  42f27c:	str	w8, [x19, #128]
  42f280:	b	42f398 <argp_parse@@Base+0x6dc>
  42f284:	ldur	w9, [x20, #-48]
  42f288:	add	w8, w8, w9
  42f28c:	add	w8, w8, #0x1
  42f290:	stur	w8, [x20, #-48]
  42f294:	b	42f398 <argp_parse@@Base+0x6dc>
  42f298:	ldr	w8, [x19, #56]
  42f29c:	cmn	w8, #0x1
  42f2a0:	b.eq	42f30c <argp_parse@@Base+0x650>  // b.none
  42f2a4:	b	42f5f4 <argp_parse@@Base+0x938>
  42f2a8:	asr	w8, w25, #24
  42f2ac:	cbz	w8, 42f30c <argp_parse@@Base+0x650>
  42f2b0:	ldr	x9, [x19, #104]
  42f2b4:	sxtw	x8, w8
  42f2b8:	sub	x10, x8, #0x1
  42f2bc:	mov	w8, #0x48                  	// #72
  42f2c0:	mul	x8, x10, x8
  42f2c4:	ldr	x8, [x9, x8]
  42f2c8:	cbz	x8, 42f6f0 <argp_parse@@Base+0xa34>
  42f2cc:	mov	w11, #0x48                  	// #72
  42f2d0:	madd	x20, x10, x11, x9
  42f2d4:	ldr	x1, [x19, #64]
  42f2d8:	ldr	x9, [x20, #64]!
  42f2dc:	sbfx	w0, w25, #23, #1
  42f2e0:	bfxil	w0, w25, #0, #24
  42f2e4:	mov	x2, x21
  42f2e8:	str	x9, [x19, #192]
  42f2ec:	ldur	q0, [x20, #-16]
  42f2f0:	stur	q0, [x27, #152]
  42f2f4:	ldur	w9, [x20, #-40]
  42f2f8:	str	w9, [x19, #168]
  42f2fc:	blr	x8
  42f300:	mov	w24, w0
  42f304:	mov	w8, wzr
  42f308:	b	42f388 <argp_parse@@Base+0x6cc>
  42f30c:	ldr	x0, [x19, #32]
  42f310:	mov	w1, w25
  42f314:	bl	404a50 <strchr@plt>
  42f318:	cbz	x0, 42f3b0 <argp_parse@@Base+0x6f4>
  42f31c:	ldp	x8, x9, [x19, #104]
  42f320:	cmp	x8, x9
  42f324:	b.cs	42f3b0 <argp_parse@@Base+0x6f4>  // b.hs, b.nlast
  42f328:	add	x8, x8, #0x30
  42f32c:	ldur	x10, [x8, #-32]
  42f330:	cmp	x10, x0
  42f334:	b.hi	42f34c <argp_parse@@Base+0x690>  // b.pmore
  42f338:	add	x10, x8, #0x18
  42f33c:	add	x8, x8, #0x48
  42f340:	cmp	x10, x9
  42f344:	b.cc	42f32c <argp_parse@@Base+0x670>  // b.lo, b.ul, b.last
  42f348:	b	42f3b0 <argp_parse@@Base+0x6f4>
  42f34c:	ldur	x9, [x8, #-48]
  42f350:	cbz	x9, 42f3b0 <argp_parse@@Base+0x6f4>
  42f354:	mov	x20, x8
  42f358:	ldr	x1, [x19, #64]
  42f35c:	ldr	x10, [x20, #16]!
  42f360:	mov	w0, w25
  42f364:	mov	x2, x21
  42f368:	str	x10, [x19, #192]
  42f36c:	ldr	q0, [x8]
  42f370:	stur	q0, [x27, #152]
  42f374:	ldur	w8, [x8, #-24]
  42f378:	str	w8, [x19, #168]
  42f37c:	blr	x9
  42f380:	mov	w24, w0
  42f384:	mov	w8, #0x1                   	// #1
  42f388:	ldr	x9, [x19, #192]
  42f38c:	cmp	w24, #0x7
  42f390:	str	x9, [x20]
  42f394:	b.eq	42f3ac <argp_parse@@Base+0x6f0>  // b.none
  42f398:	cbz	w24, 42f088 <argp_parse@@Base+0x3cc>
  42f39c:	b	42f51c <argp_parse@@Base+0x860>
  42f3a0:	mov	w25, #0x1                   	// #1
  42f3a4:	mov	w8, #0x1                   	// #1
  42f3a8:	b	42f3e4 <argp_parse@@Base+0x728>
  42f3ac:	cbz	w8, 42f6f0 <argp_parse@@Base+0xa34>
  42f3b0:	ldr	x8, [x19, #24]
  42f3b4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x17808>
  42f3b8:	add	x1, x1, #0x210
  42f3bc:	mov	w2, #0x5                   	// #5
  42f3c0:	ldr	x0, [x8, #48]
  42f3c4:	bl	404bd0 <dcgettext@plt>
  42f3c8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x17808>
  42f3cc:	mov	x3, x0
  42f3d0:	add	x1, x1, #0x308
  42f3d4:	mov	x0, x21
  42f3d8:	mov	w2, w25
  42f3dc:	bl	42d1b4 <argp_error@@Base>
  42f3e0:	mov	w8, wzr
  42f3e4:	cmn	w25, #0x1
  42f3e8:	b.eq	42f3f0 <argp_parse@@Base+0x734>  // b.none
  42f3ec:	tbz	w8, #0, 42f5f4 <argp_parse@@Base+0x938>
  42f3f0:	ldr	w8, [x19, #160]
  42f3f4:	ldr	w9, [x19, #144]
  42f3f8:	cmp	w8, w9
  42f3fc:	b.ne	42f480 <argp_parse@@Base+0x7c4>  // b.any
  42f400:	ldp	x23, x8, [x19, #104]
  42f404:	cmp	x23, x8
  42f408:	b.cs	42f490 <argp_parse@@Base+0x7d4>  // b.hs, b.nlast
  42f40c:	mov	w24, wzr
  42f410:	sub	w22, w26, #0x4
  42f414:	cmp	w24, #0x7
  42f418:	b.eq	42f420 <argp_parse@@Base+0x764>  // b.none
  42f41c:	cbnz	w24, 42f478 <argp_parse@@Base+0x7bc>
  42f420:	ldr	w9, [x23, #24]
  42f424:	cbnz	w9, 42f46c <argp_parse@@Base+0x7b0>
  42f428:	ldr	x9, [x23]
  42f42c:	cbz	x9, 42f468 <argp_parse@@Base+0x7ac>
  42f430:	ldr	x8, [x23, #64]
  42f434:	mov	w0, w22
  42f438:	mov	x1, xzr
  42f43c:	mov	x2, x21
  42f440:	str	x8, [x19, #192]
  42f444:	ldr	q0, [x23, #48]
  42f448:	stur	q0, [x27, #152]
  42f44c:	str	wzr, [x19, #168]
  42f450:	blr	x9
  42f454:	ldr	x8, [x19, #192]
  42f458:	mov	w24, w0
  42f45c:	str	x8, [x23, #64]
  42f460:	ldr	x8, [x19, #112]
  42f464:	b	42f46c <argp_parse@@Base+0x7b0>
  42f468:	mov	w24, #0x7                   	// #7
  42f46c:	add	x23, x23, #0x48
  42f470:	cmp	x23, x8
  42f474:	b.cc	42f414 <argp_parse@@Base+0x758>  // b.lo, b.ul, b.last
  42f478:	ldr	x23, [x19, #104]
  42f47c:	b	42f494 <argp_parse@@Base+0x7d8>
  42f480:	ldr	x9, [x19, #8]
  42f484:	cbz	x9, 42f5b8 <argp_parse@@Base+0x8fc>
  42f488:	str	w8, [x9]
  42f48c:	b	42f52c <argp_parse@@Base+0x870>
  42f490:	mov	w24, wzr
  42f494:	sub	x20, x8, #0x48
  42f498:	cmp	x20, x23
  42f49c:	b.cc	42f504 <argp_parse@@Base+0x848>  // b.lo, b.ul, b.last
  42f4a0:	sub	w22, w26, #0x5
  42f4a4:	cmp	w24, #0x7
  42f4a8:	b.eq	42f4b0 <argp_parse@@Base+0x7f4>  // b.none
  42f4ac:	cbnz	w24, 42f50c <argp_parse@@Base+0x850>
  42f4b0:	ldr	x8, [x20]
  42f4b4:	cbz	x8, 42f4f4 <argp_parse@@Base+0x838>
  42f4b8:	ldr	x9, [x20, #64]
  42f4bc:	mov	w0, w22
  42f4c0:	mov	x1, xzr
  42f4c4:	mov	x2, x21
  42f4c8:	str	x9, [x19, #192]
  42f4cc:	ldr	q0, [x20, #48]
  42f4d0:	stur	q0, [x27, #152]
  42f4d4:	ldr	w9, [x20, #24]
  42f4d8:	str	w9, [x19, #168]
  42f4dc:	blr	x8
  42f4e0:	ldr	x8, [x19, #192]
  42f4e4:	mov	w24, w0
  42f4e8:	str	x8, [x20, #64]
  42f4ec:	ldr	x23, [x19, #104]
  42f4f0:	b	42f4f8 <argp_parse@@Base+0x83c>
  42f4f4:	mov	w24, #0x7                   	// #7
  42f4f8:	sub	x20, x20, #0x48
  42f4fc:	cmp	x20, x23
  42f500:	b.cs	42f4a4 <argp_parse@@Base+0x7e8>  // b.hs, b.nlast
  42f504:	cmp	w24, #0x7
  42f508:	csel	w24, wzr, w24, eq  // eq = none
  42f50c:	ldr	x9, [x19, #8]
  42f510:	cbz	x9, 42f51c <argp_parse@@Base+0x860>
  42f514:	ldr	w8, [x19, #160]
  42f518:	str	w8, [x9]
  42f51c:	cbz	w24, 42f52c <argp_parse@@Base+0x870>
  42f520:	cmp	w24, #0x7
  42f524:	b.eq	42f5f4 <argp_parse@@Base+0x938>  // b.none
  42f528:	b	42f608 <argp_parse@@Base+0x94c>
  42f52c:	ldp	x22, x8, [x19, #104]
  42f530:	sub	x23, x8, #0x48
  42f534:	cmp	x23, x22
  42f538:	b.cs	42f544 <argp_parse@@Base+0x888>  // b.hs, b.nlast
  42f53c:	mov	w24, wzr
  42f540:	b	42f664 <argp_parse@@Base+0x9a8>
  42f544:	mov	w24, wzr
  42f548:	sub	w20, w26, #0x2
  42f54c:	cmp	w24, #0x7
  42f550:	b.eq	42f558 <argp_parse@@Base+0x89c>  // b.none
  42f554:	cbnz	w24, 42f664 <argp_parse@@Base+0x9a8>
  42f558:	ldr	x8, [x23]
  42f55c:	cbz	x8, 42f59c <argp_parse@@Base+0x8e0>
  42f560:	ldr	x9, [x23, #64]
  42f564:	mov	w0, w20
  42f568:	mov	x1, xzr
  42f56c:	mov	x2, x21
  42f570:	str	x9, [x19, #192]
  42f574:	ldr	q0, [x23, #48]
  42f578:	stur	q0, [x27, #152]
  42f57c:	ldr	w9, [x23, #24]
  42f580:	str	w9, [x19, #168]
  42f584:	blr	x8
  42f588:	ldr	x8, [x19, #192]
  42f58c:	mov	w24, w0
  42f590:	str	x8, [x23, #64]
  42f594:	ldr	x22, [x19, #104]
  42f598:	b	42f5a0 <argp_parse@@Base+0x8e4>
  42f59c:	mov	w24, #0x7                   	// #7
  42f5a0:	sub	x23, x23, #0x48
  42f5a4:	cmp	x23, x22
  42f5a8:	b.cs	42f54c <argp_parse@@Base+0x890>  // b.hs, b.nlast
  42f5ac:	cmp	w24, #0x7
  42f5b0:	csel	w24, wzr, w24, eq  // eq = none
  42f5b4:	b	42f664 <argp_parse@@Base+0x9a8>
  42f5b8:	ldrb	w8, [x19, #164]
  42f5bc:	tbnz	w8, #1, 42f5f4 <argp_parse@@Base+0x938>
  42f5c0:	ldr	x20, [x19, #208]
  42f5c4:	cbz	x20, 42f5f4 <argp_parse@@Base+0x938>
  42f5c8:	ldr	x8, [x19, #24]
  42f5cc:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x17808>
  42f5d0:	add	x1, x1, #0x31d
  42f5d4:	mov	w2, #0x5                   	// #5
  42f5d8:	ldr	x0, [x8, #48]
  42f5dc:	bl	404bd0 <dcgettext@plt>
  42f5e0:	ldr	x3, [x19, #200]
  42f5e4:	mov	x2, x0
  42f5e8:	mov	w1, #0x1                   	// #1
  42f5ec:	mov	x0, x20
  42f5f0:	bl	4048f0 <__fprintf_chk@plt>
  42f5f4:	ldr	x1, [x19, #208]
  42f5f8:	mov	w2, #0x104                 	// #260
  42f5fc:	mov	x0, x21
  42f600:	bl	42d11c <argp_state_help@@Base>
  42f604:	mov	w24, #0x7                   	// #7
  42f608:	ldp	x22, x8, [x19, #104]
  42f60c:	cmp	x22, x8
  42f610:	b.cs	42f664 <argp_parse@@Base+0x9a8>  // b.hs, b.nlast
  42f614:	sub	w20, w26, #0x1
  42f618:	ldr	x9, [x22]
  42f61c:	cbz	x9, 42f654 <argp_parse@@Base+0x998>
  42f620:	ldr	x8, [x22, #64]
  42f624:	mov	w0, w20
  42f628:	mov	x1, xzr
  42f62c:	mov	x2, x21
  42f630:	str	x8, [x19, #192]
  42f634:	ldr	q0, [x22, #48]
  42f638:	stur	q0, [x27, #152]
  42f63c:	ldr	w8, [x22, #24]
  42f640:	str	w8, [x19, #168]
  42f644:	blr	x9
  42f648:	ldr	x8, [x19, #192]
  42f64c:	str	x8, [x22, #64]
  42f650:	ldr	x8, [x19, #112]
  42f654:	add	x22, x22, #0x48
  42f658:	cmp	x22, x8
  42f65c:	b.cc	42f618 <argp_parse@@Base+0x95c>  // b.lo, b.ul, b.last
  42f660:	ldr	x22, [x19, #104]
  42f664:	ldr	x8, [x19, #112]
  42f668:	sub	x20, x8, #0x48
  42f66c:	cmp	x20, x22
  42f670:	b.cc	42f6b8 <argp_parse@@Base+0x9fc>  // b.lo, b.ul, b.last
  42f674:	ldr	x8, [x20]
  42f678:	cbz	x8, 42f6b0 <argp_parse@@Base+0x9f4>
  42f67c:	ldr	x9, [x20, #64]
  42f680:	add	w0, w26, #0x1
  42f684:	mov	x1, xzr
  42f688:	mov	x2, x21
  42f68c:	str	x9, [x19, #192]
  42f690:	ldr	q0, [x20, #48]
  42f694:	stur	q0, [x27, #152]
  42f698:	ldr	w9, [x20, #24]
  42f69c:	str	w9, [x19, #168]
  42f6a0:	blr	x8
  42f6a4:	ldr	x8, [x19, #192]
  42f6a8:	str	x8, [x20, #64]
  42f6ac:	ldr	x22, [x19, #104]
  42f6b0:	sub	x20, x20, #0x48
  42f6b4:	b	42f66c <argp_parse@@Base+0x9b0>
  42f6b8:	ldr	x0, [x19, #232]
  42f6bc:	cmp	w24, #0x7
  42f6c0:	mov	w8, #0x16                  	// #22
  42f6c4:	csel	w24, w8, w24, eq  // eq = none
  42f6c8:	bl	4049b0 <free@plt>
  42f6cc:	mov	w0, w24
  42f6d0:	mov	sp, x29
  42f6d4:	ldp	x20, x19, [sp, #80]
  42f6d8:	ldp	x22, x21, [sp, #64]
  42f6dc:	ldp	x24, x23, [sp, #48]
  42f6e0:	ldp	x26, x25, [sp, #32]
  42f6e4:	ldp	x28, x27, [sp, #16]
  42f6e8:	ldp	x29, x30, [sp], #96
  42f6ec:	ret
  42f6f0:	ldr	x8, [x19, #40]
  42f6f4:	ldr	w9, [x8, #24]
  42f6f8:	cmp	w9, w25
  42f6fc:	b.eq	42f720 <argp_parse@@Base+0xa64>  // b.none
  42f700:	ldr	x9, [x8]
  42f704:	cbz	x9, 42f720 <argp_parse@@Base+0xa64>
  42f708:	ldr	w10, [x8, #56]
  42f70c:	add	x9, x8, #0x20
  42f710:	mov	x8, x9
  42f714:	cmp	w10, w25
  42f718:	b.ne	42f700 <argp_parse@@Base+0xa44>  // b.any
  42f71c:	mov	x8, x9
  42f720:	ldr	x9, [x19, #24]
  42f724:	ldr	x8, [x8]
  42f728:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x17808>
  42f72c:	add	x1, x1, #0x210
  42f730:	ldr	x0, [x9, #48]
  42f734:	adrp	x9, 453000 <_obstack_memory_used@@Base+0x17808>
  42f738:	add	x9, x9, #0x319
  42f73c:	cmp	x8, #0x0
  42f740:	mov	w2, #0x5                   	// #5
  42f744:	csel	x22, x9, x8, eq  // eq = none
  42f748:	bl	404bd0 <dcgettext@plt>
  42f74c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x17808>
  42f750:	mov	x3, x0
  42f754:	add	x1, x1, #0x310
  42f758:	mov	x0, x21
  42f75c:	mov	x2, x22
  42f760:	bl	42d1b4 <argp_error@@Base>
  42f764:	b	42f3e0 <argp_parse@@Base+0x724>
  42f768:	cbz	x1, 42f790 <argp_parse@@Base+0xad4>
  42f76c:	ldr	x9, [x1, #88]
  42f770:	ldp	x8, x9, [x9, #80]
  42f774:	cmp	x8, x9
  42f778:	b.cs	42f790 <argp_parse@@Base+0xad4>  // b.hs, b.nlast
  42f77c:	ldr	x10, [x8, #8]
  42f780:	cmp	x10, x0
  42f784:	b.eq	42f798 <argp_parse@@Base+0xadc>  // b.none
  42f788:	add	x8, x8, #0x48
  42f78c:	b	42f774 <argp_parse@@Base+0xab8>
  42f790:	mov	x0, xzr
  42f794:	ret
  42f798:	ldr	x0, [x8, #48]
  42f79c:	ret
  42f7a0:	stp	x29, x30, [sp, #-32]!
  42f7a4:	stp	x20, x19, [sp, #16]
  42f7a8:	mov	x19, x2
  42f7ac:	mov	x20, x1
  42f7b0:	mov	w8, w0
  42f7b4:	cmn	w0, #0x3
  42f7b8:	mov	w0, #0x7                   	// #7
  42f7bc:	mov	x29, sp
  42f7c0:	b.gt	42f7e0 <argp_parse@@Base+0xb24>
  42f7c4:	cmn	w8, #0x4
  42f7c8:	b.eq	42f804 <argp_parse@@Base+0xb48>  // b.none
  42f7cc:	cmn	w8, #0x3
  42f7d0:	b.ne	42f890 <argp_parse@@Base+0xbd4>  // b.any
  42f7d4:	ldr	x1, [x19, #80]
  42f7d8:	mov	w2, #0x201                 	// #513
  42f7dc:	b	42f7f8 <argp_parse@@Base+0xb3c>
  42f7e0:	cmn	w8, #0x2
  42f7e4:	b.eq	42f850 <argp_parse@@Base+0xb94>  // b.none
  42f7e8:	cmp	w8, #0x3f
  42f7ec:	b.ne	42f890 <argp_parse@@Base+0xbd4>  // b.any
  42f7f0:	ldr	x1, [x19, #80]
  42f7f4:	mov	w2, #0x27a                 	// #634
  42f7f8:	mov	x0, x19
  42f7fc:	bl	42d11c <argp_state_help@@Base>
  42f800:	b	42f88c <argp_parse@@Base+0xbd0>
  42f804:	adrp	x8, 453000 <_obstack_memory_used@@Base+0x17808>
  42f808:	add	x8, x8, #0x2ca
  42f80c:	cmp	x20, #0x0
  42f810:	csel	x0, x8, x20, eq  // eq = none
  42f814:	bl	404470 <atoi@plt>
  42f818:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42f81c:	str	w0, [x19, #2976]
  42f820:	ldr	w8, [x19, #2976]
  42f824:	subs	w8, w8, #0x1
  42f828:	str	w8, [x19, #2976]
  42f82c:	b.lt	42f88c <argp_parse@@Base+0xbd0>  // b.tstop
  42f830:	mov	w0, #0x1                   	// #1
  42f834:	bl	404630 <sleep@plt>
  42f838:	ldr	w8, [x19, #2976]
  42f83c:	sub	w9, w8, #0x1
  42f840:	cmp	w8, #0x0
  42f844:	str	w9, [x19, #2976]
  42f848:	b.gt	42f830 <argp_parse@@Base+0xb74>
  42f84c:	b	42f88c <argp_parse@@Base+0xbd0>
  42f850:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42f854:	mov	x0, x20
  42f858:	str	x20, [x8, #616]
  42f85c:	bl	43051c <argp_parse@@Base+0x1860>
  42f860:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42f864:	str	x0, [x19, #64]
  42f868:	str	x0, [x8, #656]
  42f86c:	ldr	w8, [x19, #28]
  42f870:	and	w8, w8, #0x3
  42f874:	cmp	w8, #0x1
  42f878:	b.ne	42f88c <argp_parse@@Base+0xbd0>  // b.any
  42f87c:	ldr	x8, [x19, #16]
  42f880:	mov	w0, wzr
  42f884:	str	x20, [x8]
  42f888:	b	42f890 <argp_parse@@Base+0xbd4>
  42f88c:	mov	w0, wzr
  42f890:	ldp	x20, x19, [sp, #16]
  42f894:	ldp	x29, x30, [sp], #32
  42f898:	ret
  42f89c:	stp	x29, x30, [sp, #-32]!
  42f8a0:	cmp	w0, #0x56
  42f8a4:	str	x19, [sp, #16]
  42f8a8:	mov	x29, sp
  42f8ac:	b.ne	42f8d0 <argp_parse@@Base+0xc14>  // b.any
  42f8b0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42f8b4:	ldr	x8, [x8, #2984]
  42f8b8:	mov	x19, x2
  42f8bc:	cbz	x8, 42f8d8 <argp_parse@@Base+0xc1c>
  42f8c0:	ldr	x0, [x19, #80]
  42f8c4:	mov	x1, x19
  42f8c8:	blr	x8
  42f8cc:	b	42f928 <argp_parse@@Base+0xc6c>
  42f8d0:	mov	w0, #0x7                   	// #7
  42f8d4:	b	42f934 <argp_parse@@Base+0xc78>
  42f8d8:	adrp	x8, 46b000 <argp_program_version_hook@@Base+0x458>
  42f8dc:	ldr	x3, [x8, #520]
  42f8e0:	cbz	x3, 42f8fc <argp_parse@@Base+0xc40>
  42f8e4:	ldr	x0, [x19, #80]
  42f8e8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  42f8ec:	add	x2, x2, #0x893
  42f8f0:	mov	w1, #0x1                   	// #1
  42f8f4:	bl	4048f0 <__fprintf_chk@plt>
  42f8f8:	b	42f928 <argp_parse@@Base+0xc6c>
  42f8fc:	ldr	x8, [x19]
  42f900:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x17808>
  42f904:	add	x1, x1, #0x2e5
  42f908:	mov	w2, #0x5                   	// #5
  42f90c:	ldr	x0, [x8, #48]
  42f910:	bl	404bd0 <dcgettext@plt>
  42f914:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  42f918:	mov	x2, x0
  42f91c:	add	x1, x1, #0xb24
  42f920:	mov	x0, x19
  42f924:	bl	42d1b4 <argp_error@@Base>
  42f928:	ldrb	w8, [x19, #28]
  42f92c:	tbz	w8, #5, 42f940 <argp_parse@@Base+0xc84>
  42f930:	mov	w0, wzr
  42f934:	ldr	x19, [sp, #16]
  42f938:	ldp	x29, x30, [sp], #32
  42f93c:	ret
  42f940:	mov	w0, wzr
  42f944:	bl	4041a0 <exit@plt>
  42f948:	stp	x29, x30, [sp, #-32]!
  42f94c:	stp	x20, x19, [sp, #16]
  42f950:	ldr	x11, [x0]
  42f954:	ldr	x8, [x0, #32]
  42f958:	mov	x19, x1
  42f95c:	mov	x29, sp
  42f960:	cbz	x11, 42f9c0 <argp_parse@@Base+0xd04>
  42f964:	ldr	x12, [x19, #16]
  42f968:	mov	w10, wzr
  42f96c:	mov	x9, xzr
  42f970:	add	x11, x11, #0x28
  42f974:	add	x12, x12, #0x1
  42f978:	str	x12, [x19, #16]
  42f97c:	ldur	w12, [x11, #-32]
  42f980:	cbnz	w12, 42f99c <argp_parse@@Base+0xce0>
  42f984:	ldur	x12, [x11, #-40]
  42f988:	cbnz	x12, 42f99c <argp_parse@@Base+0xce0>
  42f98c:	ldur	x12, [x11, #-8]
  42f990:	cbnz	x12, 42f99c <argp_parse@@Base+0xce0>
  42f994:	ldr	w12, [x11]
  42f998:	cbz	w12, 42f9ac <argp_parse@@Base+0xcf0>
  42f99c:	add	x11, x11, #0x30
  42f9a0:	add	x9, x9, #0x1
  42f9a4:	add	w10, w10, #0x3
  42f9a8:	b	42f97c <argp_parse@@Base+0xcc0>
  42f9ac:	ldr	x11, [x19]
  42f9b0:	add	x11, x11, w10, uxtw
  42f9b4:	mov	x10, x19
  42f9b8:	str	x11, [x10], #8
  42f9bc:	b	42f9d0 <argp_parse@@Base+0xd14>
  42f9c0:	ldr	x9, [x0, #8]
  42f9c4:	cbz	x9, 42f9dc <argp_parse@@Base+0xd20>
  42f9c8:	add	x10, x19, #0x10
  42f9cc:	mov	w9, #0x1                   	// #1
  42f9d0:	ldr	x11, [x10]
  42f9d4:	add	x9, x11, x9
  42f9d8:	str	x9, [x10]
  42f9dc:	cbz	x8, 42fa08 <argp_parse@@Base+0xd4c>
  42f9e0:	ldr	x0, [x8]
  42f9e4:	cbz	x0, 42fa08 <argp_parse@@Base+0xd4c>
  42f9e8:	add	x20, x8, #0x20
  42f9ec:	mov	x1, x19
  42f9f0:	bl	42f948 <argp_parse@@Base+0xc8c>
  42f9f4:	ldr	x8, [x19, #24]
  42f9f8:	add	x8, x8, #0x1
  42f9fc:	str	x8, [x19, #24]
  42fa00:	ldr	x0, [x20], #32
  42fa04:	cbnz	x0, 42f9ec <argp_parse@@Base+0xd30>
  42fa08:	ldp	x20, x19, [sp, #16]
  42fa0c:	ldp	x29, x30, [sp], #32
  42fa10:	ret
  42fa14:	sub	sp, sp, #0x80
  42fa18:	stp	x29, x30, [sp, #32]
  42fa1c:	stp	x28, x27, [sp, #48]
  42fa20:	stp	x26, x25, [sp, #64]
  42fa24:	stp	x24, x23, [sp, #80]
  42fa28:	stp	x22, x21, [sp, #96]
  42fa2c:	stp	x20, x19, [sp, #112]
  42fa30:	ldr	x23, [x0]
  42fa34:	ldr	x10, [x0, #32]
  42fa38:	mov	x19, x4
  42fa3c:	mov	x20, x3
  42fa40:	add	x29, sp, #0x20
  42fa44:	cbz	x23, 42fbb8 <argp_parse@@Base+0xefc>
  42fa48:	mov	w28, #0x39000000            	// #956301312
  42fa4c:	mov	w21, #0x1000000             	// #16777216
  42fa50:	mov	x26, x23
  42fa54:	stp	x0, x1, [sp]
  42fa58:	stur	w2, [x29, #-12]
  42fa5c:	stur	x10, [x29, #-8]
  42fa60:	ldr	w24, [x26, #8]
  42fa64:	cbnz	w24, 42fa80 <argp_parse@@Base+0xdc4>
  42fa68:	ldr	x8, [x26]
  42fa6c:	cbnz	x8, 42fa80 <argp_parse@@Base+0xdc4>
  42fa70:	ldr	x8, [x26, #32]
  42fa74:	cbnz	x8, 42fa80 <argp_parse@@Base+0xdc4>
  42fa78:	ldr	w8, [x26, #40]
  42fa7c:	cbz	w8, 42fba4 <argp_parse@@Base+0xee8>
  42fa80:	ldr	w8, [x26, #24]
  42fa84:	tst	w8, #0x4
  42fa88:	csel	x23, x26, x23, eq  // eq = none
  42fa8c:	ldrb	w9, [x23, #24]
  42fa90:	tbnz	w9, #3, 42fb9c <argp_parse@@Base+0xee0>
  42fa94:	sub	w9, w24, #0x1
  42fa98:	cmp	w9, #0xfe
  42fa9c:	b.hi	42fb04 <argp_parse@@Base+0xe48>  // b.pmore
  42faa0:	tbnz	w8, #3, 42fb04 <argp_parse@@Base+0xe48>
  42faa4:	bl	404930 <__ctype_b_loc@plt>
  42faa8:	ldr	x8, [x0]
  42faac:	ldrh	w8, [x8, x24, lsl #1]
  42fab0:	tbz	w8, #14, 42fb04 <argp_parse@@Base+0xe48>
  42fab4:	ldr	x8, [x19, #8]
  42fab8:	add	x9, x8, #0x1
  42fabc:	str	x9, [x19, #8]
  42fac0:	strb	w24, [x8]
  42fac4:	ldr	x8, [x23, #16]
  42fac8:	cbz	x8, 42fafc <argp_parse@@Base+0xe40>
  42facc:	ldr	x8, [x19, #8]
  42fad0:	add	x9, x8, #0x1
  42fad4:	str	x9, [x19, #8]
  42fad8:	mov	w9, #0x3a                  	// #58
  42fadc:	strb	w9, [x8]
  42fae0:	ldrb	w8, [x23, #24]
  42fae4:	tbz	w8, #0, 42fafc <argp_parse@@Base+0xe40>
  42fae8:	ldr	x8, [x19, #8]
  42faec:	add	x9, x8, #0x1
  42faf0:	str	x9, [x19, #8]
  42faf4:	mov	w9, #0x3a                  	// #58
  42faf8:	strb	w9, [x8]
  42fafc:	ldr	x8, [x19, #8]
  42fb00:	strb	wzr, [x8]
  42fb04:	ldr	x24, [x26]
  42fb08:	cbz	x24, 42fb9c <argp_parse@@Base+0xee0>
  42fb0c:	ldr	x25, [x19]
  42fb10:	ldr	x22, [x25, #16]
  42fb14:	ldr	x0, [x22]
  42fb18:	cbz	x0, 42fb40 <argp_parse@@Base+0xe84>
  42fb1c:	mov	x27, x22
  42fb20:	mov	x1, x24
  42fb24:	bl	404900 <strcmp@plt>
  42fb28:	cbz	w0, 42fb38 <argp_parse@@Base+0xe7c>
  42fb2c:	ldr	x0, [x27, #32]!
  42fb30:	cbnz	x0, 42fb20 <argp_parse@@Base+0xe64>
  42fb34:	b	42fb40 <argp_parse@@Base+0xe84>
  42fb38:	sub	x8, x27, x22
  42fb3c:	tbz	x8, #36, 42fb9c <argp_parse@@Base+0xee0>
  42fb40:	ldr	x8, [x19, #16]
  42fb44:	str	x24, [x8]
  42fb48:	ldr	x9, [x23, #16]
  42fb4c:	cbz	x9, 42fb60 <argp_parse@@Base+0xea4>
  42fb50:	ldrb	w9, [x23, #24]
  42fb54:	tst	w9, #0x1
  42fb58:	mov	w9, #0x1                   	// #1
  42fb5c:	cinc	w9, w9, ne  // ne = any
  42fb60:	str	w9, [x8, #8]
  42fb64:	str	xzr, [x8, #16]
  42fb68:	ldr	w9, [x26, #8]
  42fb6c:	cbnz	w9, 42fb74 <argp_parse@@Base+0xeb8>
  42fb70:	ldr	w9, [x23, #8]
  42fb74:	ldr	w10, [x25, #80]
  42fb78:	add	x11, x8, #0x20
  42fb7c:	sub	w10, w20, w10
  42fb80:	lsr	w10, w10, #3
  42fb84:	mul	w10, w10, w28
  42fb88:	bfxil	w10, w9, #0, #24
  42fb8c:	add	w9, w10, w21
  42fb90:	str	w9, [x8, #24]
  42fb94:	str	x11, [x19, #16]
  42fb98:	str	xzr, [x8, #32]
  42fb9c:	add	x26, x26, #0x30
  42fba0:	b	42fa60 <argp_parse@@Base+0xda4>
  42fba4:	ldp	x0, x1, [sp]
  42fba8:	ldur	x10, [x29, #-8]
  42fbac:	ldur	w2, [x29, #-12]
  42fbb0:	ldr	x8, [x0, #8]
  42fbb4:	b	42fbc0 <argp_parse@@Base+0xf04>
  42fbb8:	ldr	x8, [x0, #8]
  42fbbc:	cbz	x8, 42fc64 <argp_parse@@Base+0xfa8>
  42fbc0:	stp	x8, x0, [x20]
  42fbc4:	ldr	x8, [x19, #8]
  42fbc8:	str	wzr, [x20, #24]
  42fbcc:	str	x1, [x20, #32]
  42fbd0:	str	w2, [x20, #40]
  42fbd4:	stp	xzr, xzr, [x20, #56]
  42fbd8:	str	x8, [x20, #16]
  42fbdc:	str	xzr, [x20, #48]
  42fbe0:	cbz	x10, 42fc08 <argp_parse@@Base+0xf4c>
  42fbe4:	mov	w8, #0xffffffff            	// #-1
  42fbe8:	add	w8, w8, #0x1
  42fbec:	lsl	x9, x8, #5
  42fbf0:	ldr	x9, [x10, x9]
  42fbf4:	cbnz	x9, 42fbe8 <argp_parse@@Base+0xf2c>
  42fbf8:	ldr	x9, [x19, #24]
  42fbfc:	add	x8, x9, w8, uxtw #3
  42fc00:	str	x9, [x20, #56]
  42fc04:	str	x8, [x19, #24]
  42fc08:	add	x3, x20, #0x48
  42fc0c:	cbz	x10, 42fc40 <argp_parse@@Base+0xf84>
  42fc10:	ldr	x0, [x10]
  42fc14:	cbz	x0, 42fc40 <argp_parse@@Base+0xf84>
  42fc18:	mov	w2, wzr
  42fc1c:	add	x21, x10, #0x20
  42fc20:	mov	x1, x20
  42fc24:	mov	x4, x19
  42fc28:	add	w22, w2, #0x1
  42fc2c:	bl	42fa14 <argp_parse@@Base+0xd58>
  42fc30:	mov	x3, x0
  42fc34:	ldr	x0, [x21], #32
  42fc38:	mov	w2, w22
  42fc3c:	cbnz	x0, 42fc20 <argp_parse@@Base+0xf64>
  42fc40:	ldp	x20, x19, [sp, #112]
  42fc44:	ldp	x22, x21, [sp, #96]
  42fc48:	ldp	x24, x23, [sp, #80]
  42fc4c:	ldp	x26, x25, [sp, #64]
  42fc50:	ldp	x28, x27, [sp, #48]
  42fc54:	ldp	x29, x30, [sp, #32]
  42fc58:	mov	x0, x3
  42fc5c:	add	sp, sp, #0x80
  42fc60:	ret
  42fc64:	mov	x3, x20
  42fc68:	mov	x20, xzr
  42fc6c:	cbnz	x10, 42fc10 <argp_parse@@Base+0xf54>
  42fc70:	b	42fc40 <argp_parse@@Base+0xf84>
  42fc74:	adrp	x9, 42f000 <argp_parse@@Base+0x344>
  42fc78:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42fc7c:	add	x9, x9, #0xc98
  42fc80:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42fc84:	adrp	x11, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42fc88:	str	x9, [x8, #2984]
  42fc8c:	str	x0, [x10, #2992]
  42fc90:	str	x1, [x11, #3000]
  42fc94:	ret
  42fc98:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42fc9c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42fca0:	ldr	x1, [x8, #2992]
  42fca4:	ldr	x4, [x9, #3000]
  42fca8:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  42fcac:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0x11808>
  42fcb0:	add	x2, x2, #0x602
  42fcb4:	add	x3, x3, #0x65c
  42fcb8:	b	43a608 <argp_parse@@Base+0xb94c>
  42fcbc:	stp	x29, x30, [sp, #-32]!
  42fcc0:	stp	x20, x19, [sp, #16]
  42fcc4:	mov	x19, x0
  42fcc8:	mov	x29, sp
  42fccc:	cbnz	x0, 42fce4 <argp_parse@@Base+0x1028>
  42fcd0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  42fcd4:	add	x0, x0, #0xb3c
  42fcd8:	bl	404d10 <getenv@plt>
  42fcdc:	mov	x19, x0
  42fce0:	cbz	x0, 42fd08 <argp_parse@@Base+0x104c>
  42fce4:	ldrb	w8, [x19]
  42fce8:	adrp	x20, 44e000 <_obstack_memory_used@@Base+0x12808>
  42fcec:	add	x20, x20, #0x8f4
  42fcf0:	cbz	w8, 42fd10 <argp_parse@@Base+0x1054>
  42fcf4:	mov	x0, x19
  42fcf8:	bl	43051c <argp_parse@@Base+0x1860>
  42fcfc:	cmp	x19, x0
  42fd00:	csel	x20, x19, x20, eq  // eq = none
  42fd04:	b	42fd10 <argp_parse@@Base+0x1054>
  42fd08:	adrp	x20, 44e000 <_obstack_memory_used@@Base+0x12808>
  42fd0c:	add	x20, x20, #0x8f4
  42fd10:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42fd14:	str	x20, [x8, #3008]
  42fd18:	ldp	x20, x19, [sp, #16]
  42fd1c:	ldp	x29, x30, [sp], #32
  42fd20:	ret
  42fd24:	sub	sp, sp, #0xe0
  42fd28:	str	w0, [sp, #28]
  42fd2c:	mov	x0, x1
  42fd30:	stp	x29, x30, [sp, #128]
  42fd34:	stp	x28, x27, [sp, #144]
  42fd38:	stp	x26, x25, [sp, #160]
  42fd3c:	stp	x24, x23, [sp, #176]
  42fd40:	stp	x22, x21, [sp, #192]
  42fd44:	stp	x20, x19, [sp, #208]
  42fd48:	add	x29, sp, #0x80
  42fd4c:	mov	w23, w3
  42fd50:	mov	w21, w2
  42fd54:	mov	x26, x1
  42fd58:	bl	43051c <argp_parse@@Base+0x1860>
  42fd5c:	sub	x25, x0, x26
  42fd60:	bl	404170 <strlen@plt>
  42fd64:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42fd68:	ldr	x8, [x8, #3008]
  42fd6c:	add	x28, x25, x0
  42fd70:	cbnz	x8, 42fd84 <argp_parse@@Base+0x10c8>
  42fd74:	mov	x0, xzr
  42fd78:	bl	42fcbc <argp_parse@@Base+0x1000>
  42fd7c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42fd80:	ldr	x8, [x8, #3008]
  42fd84:	mov	x0, x8
  42fd88:	bl	404170 <strlen@plt>
  42fd8c:	add	x9, x0, #0x1
  42fd90:	mov	w8, #0x9                   	// #9
  42fd94:	cmp	x9, #0x9
  42fd98:	stur	x9, [x29, #-48]
  42fd9c:	csinc	x8, x8, x0, ls  // ls = plast
  42fda0:	add	x9, x28, #0x1
  42fda4:	add	x0, x9, x8
  42fda8:	stur	x9, [x29, #-24]
  42fdac:	str	x0, [sp, #56]
  42fdb0:	bl	4044d0 <malloc@plt>
  42fdb4:	mov	x22, x0
  42fdb8:	cbz	x0, 430228 <argp_parse@@Base+0x156c>
  42fdbc:	mov	x27, xzr
  42fdc0:	mov	w8, #0xffffffff            	// #-1
  42fdc4:	add	x9, x28, #0x4
  42fdc8:	stp	x9, xzr, [sp, #8]
  42fdcc:	stur	w8, [x29, #-12]
  42fdd0:	str	w23, [sp, #52]
  42fdd4:	str	x26, [sp, #32]
  42fdd8:	stur	x28, [x29, #-40]
  42fddc:	ldur	x2, [x29, #-24]
  42fde0:	mov	x0, x22
  42fde4:	mov	x1, x26
  42fde8:	bl	4040f0 <memcpy@plt>
  42fdec:	cmp	w21, #0x1
  42fdf0:	b.ne	42fe0c <argp_parse@@Base+0x1150>  // b.any
  42fdf4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  42fdf8:	ldr	x1, [x8, #3008]
  42fdfc:	ldur	x2, [x29, #-48]
  42fe00:	add	x0, x22, x28
  42fe04:	bl	4040f0 <memcpy@plt>
  42fe08:	b	430198 <argp_parse@@Base+0x14dc>
  42fe0c:	add	x19, x22, x25
  42fe10:	mov	x0, x19
  42fe14:	bl	430564 <argp_parse@@Base+0x18a8>
  42fe18:	mov	x28, x0
  42fe1c:	cbz	x27, 42fe34 <argp_parse@@Base+0x1178>
  42fe20:	mov	x0, x27
  42fe24:	bl	404940 <rewinddir@plt>
  42fe28:	mov	w8, #0x2                   	// #2
  42fe2c:	stur	w8, [x29, #-28]
  42fe30:	b	42fea0 <argp_parse@@Base+0x11e4>
  42fe34:	ldrh	w8, [x19]
  42fe38:	ldr	w0, [sp, #28]
  42fe3c:	mov	w9, #0x2e                  	// #46
  42fe40:	sub	x3, x29, #0xc
  42fe44:	mov	x1, x22
  42fe48:	mov	w2, wzr
  42fe4c:	strh	w9, [x19]
  42fe50:	sturh	w8, [x29, #-8]
  42fe54:	bl	4349fc <argp_parse@@Base+0x5d40>
  42fe58:	mov	x27, x0
  42fe5c:	cbz	x0, 42fe68 <argp_parse@@Base+0x11ac>
  42fe60:	mov	w10, #0x2                   	// #2
  42fe64:	b	42fe7c <argp_parse@@Base+0x11c0>
  42fe68:	bl	404ce0 <__errno_location@plt>
  42fe6c:	ldr	w8, [x0]
  42fe70:	cmp	w8, #0xc
  42fe74:	mov	w8, #0x2                   	// #2
  42fe78:	cinc	w10, w8, eq  // eq = none
  42fe7c:	ldurh	w8, [x29, #-8]
  42fe80:	add	x9, x19, x28
  42fe84:	strh	w8, [x19]
  42fe88:	mov	w8, #0x7e2e                	// #32302
  42fe8c:	movk	w8, #0x7e31, lsl #16
  42fe90:	strb	wzr, [x9, #4]
  42fe94:	str	w8, [x9]
  42fe98:	cbz	x27, 430064 <argp_parse@@Base+0x13a8>
  42fe9c:	stur	w10, [x29, #-28]
  42fea0:	mov	x0, x27
  42fea4:	bl	404700 <readdir@plt>
  42fea8:	cbz	x0, 430060 <argp_parse@@Base+0x13a4>
  42feac:	ldr	x8, [sp, #56]
  42feb0:	mov	x24, x0
  42feb4:	stur	w21, [x29, #-60]
  42feb8:	add	x26, x28, #0x4
  42febc:	add	x21, x28, #0x2
  42fec0:	str	x8, [sp, #40]
  42fec4:	mov	w8, #0x1                   	// #1
  42fec8:	stur	x8, [x29, #-56]
  42fecc:	add	x19, x24, #0x13
  42fed0:	mov	x0, x19
  42fed4:	bl	404170 <strlen@plt>
  42fed8:	cmp	x0, x26
  42fedc:	b.cc	430044 <argp_parse@@Base+0x1388>  // b.lo, b.ul, b.last
  42fee0:	add	x0, x22, x25
  42fee4:	mov	x1, x19
  42fee8:	mov	x2, x21
  42feec:	bl	4046b0 <bcmp@plt>
  42fef0:	cbnz	w0, 430044 <argp_parse@@Base+0x1388>
  42fef4:	add	x19, x24, x28
  42fef8:	ldrb	w9, [x19, #21]!
  42fefc:	sub	w8, w9, #0x31
  42ff00:	cmp	w8, #0x8
  42ff04:	b.hi	430044 <argp_parse@@Base+0x1388>  // b.pmore
  42ff08:	sub	x8, x19, #0x2
  42ff0c:	ldrb	w8, [x8, #3]
  42ff10:	cmp	w9, #0x39
  42ff14:	cset	w23, eq  // eq = none
  42ff18:	sub	w9, w8, #0x30
  42ff1c:	cmp	w9, #0x9
  42ff20:	b.hi	42ff58 <argp_parse@@Base+0x129c>  // b.pmore
  42ff24:	add	x9, x24, x28
  42ff28:	mov	w10, #0x17                  	// #23
  42ff2c:	and	w11, w8, #0xff
  42ff30:	ldrb	w8, [x9, x10]
  42ff34:	cmp	w11, #0x39
  42ff38:	cset	w11, eq  // eq = none
  42ff3c:	and	w23, w11, w23
  42ff40:	sub	w11, w8, #0x30
  42ff44:	cmp	w11, #0xa
  42ff48:	add	x10, x10, #0x1
  42ff4c:	b.cc	42ff2c <argp_parse@@Base+0x1270>  // b.lo, b.ul, b.last
  42ff50:	sub	x20, x10, #0x16
  42ff54:	b	42ff5c <argp_parse@@Base+0x12a0>
  42ff58:	mov	w20, #0x1                   	// #1
  42ff5c:	cmp	w8, #0x7e
  42ff60:	b.ne	430044 <argp_parse@@Base+0x1388>  // b.any
  42ff64:	add	x8, x20, x19
  42ff68:	ldrb	w8, [x8, #1]
  42ff6c:	cbnz	w8, 430044 <argp_parse@@Base+0x1388>
  42ff70:	ldur	x8, [x29, #-56]
  42ff74:	cmp	x8, x20
  42ff78:	b.cs	430020 <argp_parse@@Base+0x1364>  // b.hs, b.nlast
  42ff7c:	ldr	x8, [sp, #8]
  42ff80:	add	x9, x20, x23
  42ff84:	stur	x9, [x29, #-56]
  42ff88:	add	x8, x8, x9
  42ff8c:	ldr	x9, [sp, #40]
  42ff90:	cmp	x9, x8
  42ff94:	b.cs	42ffbc <argp_parse@@Base+0x1300>  // b.hs, b.nlast
  42ff98:	lsr	x9, x8, #62
  42ff9c:	cmp	x9, #0x0
  42ffa0:	cset	w9, eq  // eq = none
  42ffa4:	lsl	x1, x8, x9
  42ffa8:	mov	x0, x22
  42ffac:	str	x1, [sp, #40]
  42ffb0:	bl	404710 <realloc@plt>
  42ffb4:	cbz	x0, 430210 <argp_parse@@Base+0x1554>
  42ffb8:	mov	x22, x0
  42ffbc:	ldur	x9, [x29, #-40]
  42ffc0:	mov	w10, #0x7e2e                	// #32302
  42ffc4:	add	x2, x20, #0x2
  42ffc8:	mov	x1, x19
  42ffcc:	add	x8, x22, x9
  42ffd0:	strh	w10, [x22, x9]
  42ffd4:	mov	w9, #0x30                  	// #48
  42ffd8:	strb	w9, [x8, #2]!
  42ffdc:	add	x24, x8, x23
  42ffe0:	mov	x0, x24
  42ffe4:	bl	4040f0 <memcpy@plt>
  42ffe8:	add	x8, x24, x20
  42ffec:	ldrb	w9, [x8, #-1]!
  42fff0:	cmp	w9, #0x39
  42fff4:	b.ne	43000c <argp_parse@@Base+0x1350>  // b.any
  42fff8:	mov	w10, #0x30                  	// #48
  42fffc:	strb	w10, [x8]
  430000:	ldrb	w9, [x8, #-1]!
  430004:	cmp	w9, #0x39
  430008:	b.eq	42fffc <argp_parse@@Base+0x1340>  // b.none
  43000c:	add	w9, w9, #0x1
  430010:	strb	w9, [x8]
  430014:	mov	w8, w23
  430018:	stur	w23, [x29, #-28]
  43001c:	b	430044 <argp_parse@@Base+0x1388>
  430020:	b.ne	430044 <argp_parse@@Base+0x1388>  // b.any
  430024:	ldur	x8, [x29, #-40]
  430028:	ldur	x2, [x29, #-56]
  43002c:	mov	x1, x19
  430030:	add	x8, x22, x8
  430034:	add	x0, x8, #0x2
  430038:	bl	4048c0 <memcmp@plt>
  43003c:	cmp	w0, #0x0
  430040:	b.le	42ff7c <argp_parse@@Base+0x12c0>
  430044:	mov	x0, x27
  430048:	bl	404700 <readdir@plt>
  43004c:	mov	x24, x0
  430050:	cbnz	x0, 42fecc <argp_parse@@Base+0x1210>
  430054:	ldr	w23, [sp, #52]
  430058:	ldr	x26, [sp, #32]
  43005c:	ldur	w21, [x29, #-60]
  430060:	ldur	w10, [x29, #-28]
  430064:	ldur	x28, [x29, #-40]
  430068:	cmp	w10, #0x1
  43006c:	b.eq	4300a4 <argp_parse@@Base+0x13e8>  // b.none
  430070:	cmp	w10, #0x2
  430074:	b.eq	430084 <argp_parse@@Base+0x13c8>  // b.none
  430078:	cmp	w10, #0x3
  43007c:	b.ne	430198 <argp_parse@@Base+0x14dc>  // b.any
  430080:	b	430210 <argp_parse@@Base+0x1554>
  430084:	cmp	w21, #0x2
  430088:	b.ne	4300a4 <argp_parse@@Base+0x13e8>  // b.any
  43008c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  430090:	ldr	x1, [x8, #3008]
  430094:	ldur	x2, [x29, #-48]
  430098:	add	x0, x22, x28
  43009c:	bl	4040f0 <memcpy@plt>
  4300a0:	mov	w21, #0x1                   	// #1
  4300a4:	ldur	w24, [x29, #-12]
  4300a8:	mov	x0, x22
  4300ac:	mov	w20, w21
  4300b0:	bl	43051c <argp_parse@@Base+0x1860>
  4300b4:	mov	x19, x0
  4300b8:	bl	430564 <argp_parse@@Base+0x18a8>
  4300bc:	mov	x21, x0
  4300c0:	cmp	x0, #0xf
  4300c4:	b.cc	430110 <argp_parse@@Base+0x1454>  // b.lo, b.ul, b.last
  4300c8:	ldr	x9, [sp, #16]
  4300cc:	mov	x8, x9
  4300d0:	cbnz	x9, 430170 <argp_parse@@Base+0x14b4>
  4300d4:	tbnz	w24, #31, 430118 <argp_parse@@Base+0x145c>
  4300d8:	bl	404ce0 <__errno_location@plt>
  4300dc:	mov	x23, x26
  4300e0:	mov	x26, x0
  4300e4:	str	wzr, [x0]
  4300e8:	mov	w1, #0x3                   	// #3
  4300ec:	mov	w0, w24
  4300f0:	bl	4048a0 <fpathconf@plt>
  4300f4:	ldr	w8, [x26]
  4300f8:	mov	x26, x23
  4300fc:	ldr	w23, [sp, #52]
  430100:	cmp	w8, #0x0
  430104:	cset	w8, eq  // eq = none
  430108:	sub	x8, x0, x8
  43010c:	b	430158 <argp_parse@@Base+0x149c>
  430110:	mov	w8, #0xff                  	// #255
  430114:	b	430170 <argp_parse@@Base+0x14b4>
  430118:	ldrh	w8, [x19]
  43011c:	sturh	w8, [x29, #-4]
  430120:	mov	w8, #0x2e                  	// #46
  430124:	strh	w8, [x19]
  430128:	bl	404ce0 <__errno_location@plt>
  43012c:	mov	x24, x0
  430130:	str	wzr, [x0]
  430134:	mov	w1, #0x3                   	// #3
  430138:	mov	x0, x22
  43013c:	bl	404350 <pathconf@plt>
  430140:	ldr	w8, [x24]
  430144:	ldurh	w9, [x29, #-4]
  430148:	cmp	w8, #0x0
  43014c:	cset	w8, eq  // eq = none
  430150:	sub	x8, x0, x8
  430154:	strh	w9, [x19]
  430158:	cmn	x8, #0x1
  43015c:	mov	w9, #0xe                   	// #14
  430160:	csinv	x9, x9, xzr, ne  // ne = any
  430164:	cmp	x8, #0x0
  430168:	csel	x8, x8, x9, ge  // ge = tcont
  43016c:	str	x8, [sp, #16]
  430170:	cmp	x8, x21
  430174:	b.cs	430194 <argp_parse@@Base+0x14d8>  // b.hs, b.nlast
  430178:	add	x9, x22, x28
  43017c:	sub	x9, x9, x19
  430180:	sub	x10, x8, #0x1
  430184:	cmp	x8, x9
  430188:	csel	x8, x9, x10, hi  // hi = pmore
  43018c:	mov	w9, #0x7e                  	// #126
  430190:	strh	w9, [x19, x8]
  430194:	mov	w21, w20
  430198:	tbz	w23, #0, 430200 <argp_parse@@Base+0x1544>
  43019c:	ldur	w2, [x29, #-12]
  4301a0:	tbz	w2, #31, 4301b0 <argp_parse@@Base+0x14f4>
  4301a4:	mov	x25, xzr
  4301a8:	mov	w2, #0xffffff9c            	// #-100
  4301ac:	stur	w2, [x29, #-12]
  4301b0:	cmp	w21, #0x1
  4301b4:	cset	w4, ne  // ne = any
  4301b8:	add	x3, x22, x25
  4301bc:	mov	w0, #0xffffff9c            	// #-100
  4301c0:	mov	x1, x26
  4301c4:	bl	439c10 <argp_parse@@Base+0xaf54>
  4301c8:	cbz	w0, 430200 <argp_parse@@Base+0x1544>
  4301cc:	bl	404ce0 <__errno_location@plt>
  4301d0:	ldr	w20, [x0]
  4301d4:	cmp	w20, #0x11
  4301d8:	b.eq	42fddc <argp_parse@@Base+0x1120>  // b.none
  4301dc:	mov	x19, x0
  4301e0:	cbz	x27, 4301ec <argp_parse@@Base+0x1530>
  4301e4:	mov	x0, x27
  4301e8:	bl	404770 <closedir@plt>
  4301ec:	mov	x0, x22
  4301f0:	bl	4049b0 <free@plt>
  4301f4:	mov	x22, xzr
  4301f8:	str	w20, [x19]
  4301fc:	b	430228 <argp_parse@@Base+0x156c>
  430200:	cbz	x27, 430228 <argp_parse@@Base+0x156c>
  430204:	mov	x0, x27
  430208:	bl	404770 <closedir@plt>
  43020c:	b	430228 <argp_parse@@Base+0x156c>
  430210:	mov	x0, x22
  430214:	bl	4049b0 <free@plt>
  430218:	bl	404ce0 <__errno_location@plt>
  43021c:	mov	w8, #0xc                   	// #12
  430220:	mov	x22, xzr
  430224:	str	w8, [x0]
  430228:	mov	x0, x22
  43022c:	ldp	x20, x19, [sp, #208]
  430230:	ldp	x22, x21, [sp, #192]
  430234:	ldp	x24, x23, [sp, #176]
  430238:	ldp	x26, x25, [sp, #160]
  43023c:	ldp	x28, x27, [sp, #144]
  430240:	ldp	x29, x30, [sp, #128]
  430244:	add	sp, sp, #0xe0
  430248:	ret
  43024c:	stp	x29, x30, [sp, #-16]!
  430250:	mov	w3, wzr
  430254:	mov	x29, sp
  430258:	bl	42fd24 <argp_parse@@Base+0x1068>
  43025c:	cbz	x0, 430268 <argp_parse@@Base+0x15ac>
  430260:	ldp	x29, x30, [sp], #16
  430264:	ret
  430268:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  43026c:	stp	x29, x30, [sp, #-32]!
  430270:	str	x19, [sp, #16]
  430274:	mov	x29, sp
  430278:	cbz	x1, 4302b0 <argp_parse@@Base+0x15f4>
  43027c:	ldrb	w8, [x1]
  430280:	cbz	w8, 4302b0 <argp_parse@@Base+0x15f4>
  430284:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  430288:	ldr	x5, [x8, #448]
  43028c:	adrp	x19, 453000 <_obstack_memory_used@@Base+0x17808>
  430290:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  430294:	add	x19, x19, #0x340
  430298:	add	x2, x2, #0x360
  43029c:	mov	w4, #0x4                   	// #4
  4302a0:	mov	x3, x19
  4302a4:	bl	42bfcc <wcrtomb@plt+0x271cc>
  4302a8:	ldr	w0, [x19, x0, lsl #2]
  4302ac:	b	4302b4 <argp_parse@@Base+0x15f8>
  4302b0:	mov	w0, #0x2                   	// #2
  4302b4:	ldr	x19, [sp, #16]
  4302b8:	ldp	x29, x30, [sp], #32
  4302bc:	ret
  4302c0:	stp	x29, x30, [sp, #-16]!
  4302c4:	mov	x29, sp
  4302c8:	cbz	x1, 4302d4 <argp_parse@@Base+0x1618>
  4302cc:	ldrb	w8, [x1]
  4302d0:	cbnz	w8, 4302f0 <argp_parse@@Base+0x1634>
  4302d4:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x17808>
  4302d8:	add	x0, x0, #0x3a9
  4302dc:	bl	404d10 <getenv@plt>
  4302e0:	adrp	x8, 453000 <_obstack_memory_used@@Base+0x17808>
  4302e4:	add	x8, x8, #0x3a8
  4302e8:	mov	x1, x0
  4302ec:	mov	x0, x8
  4302f0:	ldp	x29, x30, [sp], #16
  4302f4:	b	43026c <argp_parse@@Base+0x15b0>
  4302f8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4302fc:	str	x0, [x8, #3016]
  430300:	ret
  430304:	and	w8, w0, #0x1
  430308:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  43030c:	strb	w8, [x9, #3024]
  430310:	ret
  430314:	stp	x29, x30, [sp, #-48]!
  430318:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  43031c:	ldr	x0, [x8, #632]
  430320:	str	x21, [sp, #16]
  430324:	stp	x20, x19, [sp, #32]
  430328:	mov	x29, sp
  43032c:	bl	447d10 <_obstack_memory_used@@Base+0xc518>
  430330:	cbz	w0, 430350 <argp_parse@@Base+0x1694>
  430334:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  430338:	ldrb	w8, [x8, #3024]
  43033c:	cbz	w8, 430370 <argp_parse@@Base+0x16b4>
  430340:	bl	404ce0 <__errno_location@plt>
  430344:	ldr	w8, [x0]
  430348:	cmp	w8, #0x20
  43034c:	b.ne	430370 <argp_parse@@Base+0x16b4>  // b.any
  430350:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  430354:	ldr	x0, [x8, #624]
  430358:	bl	447d10 <_obstack_memory_used@@Base+0xc518>
  43035c:	cbnz	w0, 4303dc <argp_parse@@Base+0x1720>
  430360:	ldp	x20, x19, [sp, #32]
  430364:	ldr	x21, [sp, #16]
  430368:	ldp	x29, x30, [sp], #48
  43036c:	ret
  430370:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x17808>
  430374:	add	x1, x1, #0x3e0
  430378:	mov	w2, #0x5                   	// #5
  43037c:	mov	x0, xzr
  430380:	bl	404bd0 <dcgettext@plt>
  430384:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  430388:	ldr	x21, [x8, #3016]
  43038c:	mov	x19, x0
  430390:	bl	404ce0 <__errno_location@plt>
  430394:	ldr	w20, [x0]
  430398:	cbnz	x21, 4303b8 <argp_parse@@Base+0x16fc>
  43039c:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  4303a0:	add	x2, x2, #0xb24
  4303a4:	mov	w0, wzr
  4303a8:	mov	w1, w20
  4303ac:	mov	x3, x19
  4303b0:	bl	4041d0 <error@plt>
  4303b4:	b	4303dc <argp_parse@@Base+0x1720>
  4303b8:	mov	x0, x21
  4303bc:	bl	4398cc <argp_parse@@Base+0xac10>
  4303c0:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  4303c4:	mov	x3, x0
  4303c8:	add	x2, x2, #0xe00
  4303cc:	mov	w0, wzr
  4303d0:	mov	w1, w20
  4303d4:	mov	x4, x19
  4303d8:	bl	4041d0 <error@plt>
  4303dc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4303e0:	ldr	w0, [x8, #496]
  4303e4:	bl	404110 <_exit@plt>
  4303e8:	stp	x29, x30, [sp, #-16]!
  4303ec:	mov	x29, sp
  4303f0:	bl	4304b0 <argp_parse@@Base+0x17f4>
  4303f4:	cbz	x0, 430400 <argp_parse@@Base+0x1744>
  4303f8:	ldp	x29, x30, [sp], #16
  4303fc:	ret
  430400:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  430404:	stp	x29, x30, [sp, #-32]!
  430408:	stp	x20, x19, [sp, #16]
  43040c:	mov	x29, sp
  430410:	mov	x19, x0
  430414:	bl	43051c <argp_parse@@Base+0x1860>
  430418:	ldrb	w8, [x0]
  43041c:	cbz	w8, 43043c <argp_parse@@Base+0x1780>
  430420:	mov	x20, x0
  430424:	bl	430564 <argp_parse@@Base+0x18a8>
  430428:	ldrb	w8, [x20, x0]
  43042c:	cmp	w8, #0x2f
  430430:	cinc	x1, x0, eq  // eq = none
  430434:	mov	x0, x20
  430438:	b	43044c <argp_parse@@Base+0x1790>
  43043c:	mov	x0, x19
  430440:	bl	430564 <argp_parse@@Base+0x18a8>
  430444:	mov	x1, x0
  430448:	mov	x0, x19
  43044c:	ldp	x20, x19, [sp, #16]
  430450:	ldp	x29, x30, [sp], #32
  430454:	b	43aa24 <argp_parse@@Base+0xbd68>
  430458:	stp	x29, x30, [sp, #-48]!
  43045c:	str	x21, [sp, #16]
  430460:	stp	x20, x19, [sp, #32]
  430464:	mov	x20, x0
  430468:	ldrb	w8, [x20], #-1
  43046c:	mov	x29, sp
  430470:	mov	x19, x0
  430474:	cmp	w8, #0x2f
  430478:	cset	w21, eq  // eq = none
  43047c:	bl	43051c <argp_parse@@Base+0x1860>
  430480:	sub	x8, x0, x19
  430484:	mov	x0, x8
  430488:	cmp	x8, x21
  43048c:	b.ls	4304a0 <argp_parse@@Base+0x17e4>  // b.plast
  430490:	ldrb	w8, [x20, x0]
  430494:	cmp	w8, #0x2f
  430498:	sub	x8, x0, #0x1
  43049c:	b.eq	430484 <argp_parse@@Base+0x17c8>  // b.none
  4304a0:	ldp	x20, x19, [sp, #32]
  4304a4:	ldr	x21, [sp, #16]
  4304a8:	ldp	x29, x30, [sp], #48
  4304ac:	ret
  4304b0:	stp	x29, x30, [sp, #-48]!
  4304b4:	str	x21, [sp, #16]
  4304b8:	stp	x20, x19, [sp, #32]
  4304bc:	mov	x29, sp
  4304c0:	mov	x21, x0
  4304c4:	bl	430458 <argp_parse@@Base+0x179c>
  4304c8:	cmp	x0, #0x0
  4304cc:	cinc	x8, x0, eq  // eq = none
  4304d0:	mov	x19, x0
  4304d4:	add	x0, x8, #0x1
  4304d8:	bl	4044d0 <malloc@plt>
  4304dc:	mov	x20, x0
  4304e0:	cbz	x0, 430508 <argp_parse@@Base+0x184c>
  4304e4:	mov	x0, x20
  4304e8:	mov	x1, x21
  4304ec:	mov	x2, x19
  4304f0:	bl	4040f0 <memcpy@plt>
  4304f4:	cbnz	x19, 430504 <argp_parse@@Base+0x1848>
  4304f8:	mov	w8, #0x2e                  	// #46
  4304fc:	mov	w19, #0x1                   	// #1
  430500:	strb	w8, [x20]
  430504:	strb	wzr, [x20, x19]
  430508:	mov	x0, x20
  43050c:	ldp	x20, x19, [sp, #32]
  430510:	ldr	x21, [sp, #16]
  430514:	ldp	x29, x30, [sp], #48
  430518:	ret
  43051c:	sub	x0, x0, #0x1
  430520:	ldrb	w10, [x0, #1]!
  430524:	cmp	w10, #0x2f
  430528:	b.eq	430520 <argp_parse@@Base+0x1864>  // b.none
  43052c:	mov	w8, wzr
  430530:	mov	x9, x0
  430534:	and	w10, w10, #0xff
  430538:	cmp	w10, #0x2f
  43053c:	b.eq	430554 <argp_parse@@Base+0x1898>  // b.none
  430540:	cbz	w10, 430560 <argp_parse@@Base+0x18a4>
  430544:	tst	w8, #0x1
  430548:	mov	w8, wzr
  43054c:	csel	x0, x9, x0, ne  // ne = any
  430550:	b	430558 <argp_parse@@Base+0x189c>
  430554:	mov	w8, #0x1                   	// #1
  430558:	ldrb	w10, [x9, #1]!
  43055c:	b	430534 <argp_parse@@Base+0x1878>
  430560:	ret
  430564:	stp	x29, x30, [sp, #-32]!
  430568:	str	x19, [sp, #16]
  43056c:	mov	x29, sp
  430570:	mov	x19, x0
  430574:	bl	404170 <strlen@plt>
  430578:	mov	x8, x0
  43057c:	sub	x9, x19, #0x1
  430580:	mov	x0, x8
  430584:	cmp	x8, #0x2
  430588:	b.cc	43059c <argp_parse@@Base+0x18e0>  // b.lo, b.ul, b.last
  43058c:	ldrb	w8, [x9, x0]
  430590:	cmp	w8, #0x2f
  430594:	sub	x8, x0, #0x1
  430598:	b.eq	430580 <argp_parse@@Base+0x18c4>  // b.none
  43059c:	ldr	x19, [sp, #16]
  4305a0:	ldp	x29, x30, [sp], #32
  4305a4:	ret
  4305a8:	stp	x29, x30, [sp, #-32]!
  4305ac:	str	x19, [sp, #16]
  4305b0:	mov	x29, sp
  4305b4:	mov	x19, x0
  4305b8:	bl	43051c <argp_parse@@Base+0x1860>
  4305bc:	ldrb	w8, [x0]
  4305c0:	cmp	w8, #0x0
  4305c4:	csel	x19, x19, x0, eq  // eq = none
  4305c8:	mov	x0, x19
  4305cc:	bl	430564 <argp_parse@@Base+0x18a8>
  4305d0:	ldrb	w8, [x19, x0]
  4305d4:	strb	wzr, [x19, x0]
  4305d8:	ldr	x19, [sp, #16]
  4305dc:	cmp	w8, #0x0
  4305e0:	cset	w0, ne  // ne = any
  4305e4:	ldp	x29, x30, [sp], #32
  4305e8:	ret
  4305ec:	stp	x29, x30, [sp, #-32]!
  4305f0:	stp	x20, x19, [sp, #16]
  4305f4:	mov	x20, x0
  4305f8:	mov	w0, #0x10                  	// #16
  4305fc:	mov	x29, sp
  430600:	mov	x19, x1
  430604:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  430608:	ldr	x8, [x20, #8]
  43060c:	stp	x8, x19, [x0]
  430610:	str	x0, [x20, #8]
  430614:	ldp	x20, x19, [sp, #16]
  430618:	ldp	x29, x30, [sp], #32
  43061c:	ret
  430620:	ldrb	w9, [x0], #1
  430624:	mov	w8, #0x1                   	// #1
  430628:	cmp	w9, #0x3e
  43062c:	b.gt	430654 <argp_parse@@Base+0x1998>
  430630:	cmp	w9, #0x29
  430634:	b.gt	430678 <argp_parse@@Base+0x19bc>
  430638:	sub	w8, w9, #0x28
  43063c:	cmp	w8, #0x2
  430640:	b.cc	4306ac <argp_parse@@Base+0x19f0>  // b.lo, b.ul, b.last
  430644:	cmp	w9, #0x21
  430648:	b.eq	4306b4 <argp_parse@@Base+0x19f8>  // b.none
  43064c:	cbnz	w9, 430620 <argp_parse@@Base+0x1964>
  430650:	b	4306f4 <argp_parse@@Base+0x1a38>
  430654:	cmp	w9, #0x5b
  430658:	b.gt	430694 <argp_parse@@Base+0x19d8>
  43065c:	cmp	w9, #0x40
  430660:	b.eq	4306b4 <argp_parse@@Base+0x19f8>  // b.none
  430664:	cmp	w9, #0x3f
  430668:	b.eq	4306f8 <argp_parse@@Base+0x1a3c>  // b.none
  43066c:	cmp	w9, #0x5b
  430670:	b.ne	430620 <argp_parse@@Base+0x1964>  // b.any
  430674:	b	4306f8 <argp_parse@@Base+0x1a3c>
  430678:	cmp	w9, #0x2b
  43067c:	b.eq	4306b4 <argp_parse@@Base+0x19f8>  // b.none
  430680:	cmp	w9, #0x2e
  430684:	b.eq	4306ac <argp_parse@@Base+0x19f0>  // b.none
  430688:	cmp	w9, #0x2a
  43068c:	b.ne	430620 <argp_parse@@Base+0x1964>  // b.any
  430690:	b	4306f8 <argp_parse@@Base+0x1a3c>
  430694:	cmp	w9, #0x5c
  430698:	b.eq	4306c8 <argp_parse@@Base+0x1a0c>  // b.none
  43069c:	cmp	w9, #0x7d
  4306a0:	b.eq	4306ac <argp_parse@@Base+0x19f0>  // b.none
  4306a4:	cmp	w9, #0x7b
  4306a8:	b.ne	430620 <argp_parse@@Base+0x1964>  // b.any
  4306ac:	tbz	w1, #27, 430620 <argp_parse@@Base+0x1964>
  4306b0:	b	4306ec <argp_parse@@Base+0x1a30>
  4306b4:	tbz	w1, #5, 430620 <argp_parse@@Base+0x1964>
  4306b8:	ldrb	w8, [x0]
  4306bc:	cmp	w8, #0x28
  4306c0:	b.ne	430620 <argp_parse@@Base+0x1964>  // b.any
  4306c4:	b	4306ec <argp_parse@@Base+0x1a30>
  4306c8:	tbnz	w1, #27, 430620 <argp_parse@@Base+0x1964>
  4306cc:	tbnz	w1, #1, 4306e0 <argp_parse@@Base+0x1a24>
  4306d0:	ldrb	w8, [x0]
  4306d4:	cmp	w8, #0x0
  4306d8:	cset	w8, ne  // ne = any
  4306dc:	b	4306e4 <argp_parse@@Base+0x1a28>
  4306e0:	mov	w8, wzr
  4306e4:	add	x0, x0, x8
  4306e8:	b	430620 <argp_parse@@Base+0x1964>
  4306ec:	mov	w8, #0x1                   	// #1
  4306f0:	b	4306f8 <argp_parse@@Base+0x1a3c>
  4306f4:	mov	w8, wzr
  4306f8:	mov	w0, w8
  4306fc:	ret
  430700:	mov	w0, #0x10                  	// #16
  430704:	b	43a8f4 <argp_parse@@Base+0xbc38>
  430708:	stp	x29, x30, [sp, #-64]!
  43070c:	stp	x22, x21, [sp, #32]
  430710:	stp	x20, x19, [sp, #48]
  430714:	ldr	x21, [x0]
  430718:	mov	x19, x0
  43071c:	str	x23, [sp, #16]
  430720:	mov	x29, sp
  430724:	cbz	x21, 43079c <argp_parse@@Base+0x1ae0>
  430728:	mov	x20, x21
  43072c:	ldr	w8, [x21, #8]
  430730:	ldr	x21, [x21]
  430734:	cbz	w8, 430788 <argp_parse@@Base+0x1acc>
  430738:	cmp	w8, #0x1
  43073c:	b.ne	430790 <argp_parse@@Base+0x1ad4>  // b.any
  430740:	ldr	x8, [x20, #32]
  430744:	ldr	x0, [x20, #16]
  430748:	cbz	x8, 430780 <argp_parse@@Base+0x1ac4>
  43074c:	mov	x22, xzr
  430750:	mov	x23, xzr
  430754:	add	x9, x0, x22
  430758:	ldrb	w10, [x9, #3]
  43075c:	tbz	w10, #3, 430770 <argp_parse@@Base+0x1ab4>
  430760:	add	x0, x9, #0x8
  430764:	bl	43ca40 <_obstack_memory_used@@Base+0x1248>
  430768:	ldr	x8, [x20, #32]
  43076c:	ldr	x0, [x20, #16]
  430770:	add	x23, x23, #0x1
  430774:	cmp	x23, x8
  430778:	add	x22, x22, #0x48
  43077c:	b.cc	430754 <argp_parse@@Base+0x1a98>  // b.lo, b.ul, b.last
  430780:	bl	4049b0 <free@plt>
  430784:	b	430790 <argp_parse@@Base+0x1ad4>
  430788:	ldr	x0, [x20, #16]
  43078c:	bl	432f34 <argp_parse@@Base+0x4278>
  430790:	mov	x0, x20
  430794:	bl	4049b0 <free@plt>
  430798:	cbnz	x21, 430728 <argp_parse@@Base+0x1a6c>
  43079c:	ldr	x20, [x19, #8]
  4307a0:	cbz	x20, 4307bc <argp_parse@@Base+0x1b00>
  4307a4:	ldp	x21, x0, [x20]
  4307a8:	bl	4049b0 <free@plt>
  4307ac:	mov	x0, x20
  4307b0:	bl	4049b0 <free@plt>
  4307b4:	mov	x20, x21
  4307b8:	cbnz	x21, 4307a4 <argp_parse@@Base+0x1ae8>
  4307bc:	mov	x0, x19
  4307c0:	ldp	x20, x19, [sp, #48]
  4307c4:	ldp	x22, x21, [sp, #32]
  4307c8:	ldr	x23, [sp, #16]
  4307cc:	ldp	x29, x30, [sp], #64
  4307d0:	b	4049b0 <free@plt>
  4307d4:	stp	x29, x30, [sp, #-48]!
  4307d8:	adrp	x8, 404000 <mbrtowc@plt-0xe0>
  4307dc:	adrp	x9, 430000 <argp_parse@@Base+0x1344>
  4307e0:	add	x8, x8, #0xaa0
  4307e4:	add	x9, x9, #0x878
  4307e8:	tst	w2, #0x10000000
  4307ec:	stp	x22, x21, [sp, #16]
  4307f0:	csel	x22, x9, x8, eq  // eq = none
  4307f4:	stp	x20, x19, [sp, #32]
  4307f8:	mov	x29, sp
  4307fc:	mov	w19, w2
  430800:	mov	x21, x1
  430804:	mov	x20, x0
  430808:	blr	x22
  43080c:	cmp	w0, #0x0
  430810:	cset	w8, eq  // eq = none
  430814:	tbnz	w19, #30, 430864 <argp_parse@@Base+0x1ba8>
  430818:	ldrb	w9, [x21]
  43081c:	cbz	w9, 430864 <argp_parse@@Base+0x1ba8>
  430820:	cbz	w0, 430864 <argp_parse@@Base+0x1ba8>
  430824:	add	x21, x21, #0x1
  430828:	and	w9, w9, #0xff
  43082c:	cmp	w9, #0x2f
  430830:	b.ne	430858 <argp_parse@@Base+0x1b9c>  // b.any
  430834:	ldrb	w9, [x21]
  430838:	cmp	w9, #0x2f
  43083c:	b.eq	430858 <argp_parse@@Base+0x1b9c>  // b.none
  430840:	mov	x0, x20
  430844:	mov	x1, x21
  430848:	mov	w2, w19
  43084c:	blr	x22
  430850:	cmp	w0, #0x0
  430854:	cset	w8, eq  // eq = none
  430858:	ldrb	w9, [x21], #1
  43085c:	cbz	w9, 430864 <argp_parse@@Base+0x1ba8>
  430860:	tbz	w8, #0, 430828 <argp_parse@@Base+0x1b6c>
  430864:	ldp	x20, x19, [sp, #32]
  430868:	ldp	x22, x21, [sp, #16]
  43086c:	and	w0, w8, #0x1
  430870:	ldp	x29, x30, [sp], #48
  430874:	ret
  430878:	stp	x29, x30, [sp, #-64]!
  43087c:	stp	x20, x19, [sp, #48]
  430880:	mov	x20, x1
  430884:	mov	x19, x0
  430888:	str	x23, [sp, #16]
  43088c:	stp	x22, x21, [sp, #32]
  430890:	mov	x29, sp
  430894:	tbnz	w2, #3, 4308b8 <argp_parse@@Base+0x1bfc>
  430898:	mov	x0, x19
  43089c:	mov	x1, x20
  4308a0:	tbz	w2, #4, 430928 <argp_parse@@Base+0x1c6c>
  4308a4:	ldp	x20, x19, [sp, #48]
  4308a8:	ldp	x22, x21, [sp, #32]
  4308ac:	ldr	x23, [sp, #16]
  4308b0:	ldp	x29, x30, [sp], #64
  4308b4:	b	434090 <argp_parse@@Base+0x53d4>
  4308b8:	tbz	w2, #4, 43093c <argp_parse@@Base+0x1c80>
  4308bc:	mov	x0, x20
  4308c0:	bl	43a998 <argp_parse@@Base+0xbcdc>
  4308c4:	mov	w1, #0x2f                  	// #47
  4308c8:	mov	x20, x0
  4308cc:	mov	w23, #0x2f                  	// #47
  4308d0:	bl	404a50 <strchr@plt>
  4308d4:	cbz	x0, 43090c <argp_parse@@Base+0x1c50>
  4308d8:	mov	x22, x0
  4308dc:	mov	x0, x19
  4308e0:	mov	x1, x20
  4308e4:	strb	wzr, [x22]
  4308e8:	bl	434090 <argp_parse@@Base+0x53d4>
  4308ec:	cmp	w0, #0x1
  4308f0:	b.lt	430918 <argp_parse@@Base+0x1c5c>  // b.tstop
  4308f4:	strb	w23, [x22], #1
  4308f8:	mov	w1, #0x2f                  	// #47
  4308fc:	mov	x0, x22
  430900:	bl	404a50 <strchr@plt>
  430904:	mov	x22, x0
  430908:	cbnz	x0, 4308dc <argp_parse@@Base+0x1c20>
  43090c:	mov	x0, x19
  430910:	mov	x1, x20
  430914:	bl	434090 <argp_parse@@Base+0x53d4>
  430918:	mov	w21, w0
  43091c:	mov	x0, x20
  430920:	bl	4049b0 <free@plt>
  430924:	b	43096c <argp_parse@@Base+0x1cb0>
  430928:	ldp	x20, x19, [sp, #48]
  43092c:	ldp	x22, x21, [sp, #32]
  430930:	ldr	x23, [sp, #16]
  430934:	ldp	x29, x30, [sp], #64
  430938:	b	404900 <strcmp@plt>
  43093c:	mov	x0, x19
  430940:	bl	404170 <strlen@plt>
  430944:	mov	x22, x0
  430948:	mov	x0, x19
  43094c:	mov	x1, x20
  430950:	mov	x2, x22
  430954:	bl	404580 <strncmp@plt>
  430958:	mov	w21, w0
  43095c:	cbnz	w0, 43096c <argp_parse@@Base+0x1cb0>
  430960:	ldrb	w8, [x20, x22]
  430964:	cmp	w8, #0x2f
  430968:	csel	w21, wzr, w8, eq  // eq = none
  43096c:	mov	w0, w21
  430970:	ldp	x20, x19, [sp, #48]
  430974:	ldp	x22, x21, [sp, #32]
  430978:	ldr	x23, [sp, #16]
  43097c:	ldp	x29, x30, [sp], #64
  430980:	ret
  430984:	stp	x29, x30, [sp, #-64]!
  430988:	stp	x24, x23, [sp, #16]
  43098c:	stp	x22, x21, [sp, #32]
  430990:	stp	x20, x19, [sp, #48]
  430994:	ldr	x8, [x0]
  430998:	mov	x29, sp
  43099c:	cbz	x8, 430abc <argp_parse@@Base+0x1e00>
  4309a0:	mov	x20, x1
  4309a4:	mov	x19, xzr
  4309a8:	mov	x23, x8
  4309ac:	ldr	w8, [x8, #8]
  4309b0:	cbz	w8, 430a14 <argp_parse@@Base+0x1d58>
  4309b4:	ldr	x22, [x23, #32]
  4309b8:	cbz	x22, 430a08 <argp_parse@@Base+0x1d4c>
  4309bc:	ldr	x8, [x23, #16]
  4309c0:	add	x21, x8, #0x8
  4309c4:	ldur	w2, [x21, #-8]
  4309c8:	tbnz	w2, #27, 4309e0 <argp_parse@@Base+0x1d24>
  4309cc:	ldr	x0, [x21]
  4309d0:	mov	x1, x20
  4309d4:	bl	4307d4 <argp_parse@@Base+0x1b18>
  4309d8:	tbz	w0, #0, 4309fc <argp_parse@@Base+0x1d40>
  4309dc:	b	430a98 <argp_parse@@Base+0x1ddc>
  4309e0:	mov	x0, x21
  4309e4:	mov	x1, x20
  4309e8:	mov	x2, xzr
  4309ec:	mov	x3, xzr
  4309f0:	mov	w4, wzr
  4309f4:	bl	43cc04 <_obstack_memory_used@@Base+0x140c>
  4309f8:	cbz	w0, 430a98 <argp_parse@@Base+0x1ddc>
  4309fc:	subs	x22, x22, #0x1
  430a00:	add	x21, x21, #0x48
  430a04:	b.ne	4309c4 <argp_parse@@Base+0x1d08>  // b.any
  430a08:	ldr	x8, [x23]
  430a0c:	cbnz	x8, 4309a8 <argp_parse@@Base+0x1cec>
  430a10:	b	430ad4 <argp_parse@@Base+0x1e18>
  430a14:	cbnz	x19, 430a2c <argp_parse@@Base+0x1d70>
  430a18:	mov	x0, x20
  430a1c:	bl	404170 <strlen@plt>
  430a20:	add	x0, x0, #0x1
  430a24:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  430a28:	mov	x19, x0
  430a2c:	ldr	w24, [x23, #12]
  430a30:	ldr	x21, [x23, #16]
  430a34:	mov	x22, x20
  430a38:	mov	x0, x19
  430a3c:	mov	x1, x22
  430a40:	bl	404b00 <strcpy@plt>
  430a44:	mov	x0, x21
  430a48:	mov	x1, x19
  430a4c:	bl	43299c <argp_parse@@Base+0x3ce0>
  430a50:	cbnz	x0, 430a98 <argp_parse@@Base+0x1ddc>
  430a54:	tbnz	w24, #3, 430a74 <argp_parse@@Base+0x1db8>
  430a58:	tbnz	w24, #30, 430a08 <argp_parse@@Base+0x1d4c>
  430a5c:	mov	w1, #0x2f                  	// #47
  430a60:	mov	x0, x22
  430a64:	bl	404a50 <strchr@plt>
  430a68:	add	x22, x0, #0x1
  430a6c:	cbnz	x0, 430a38 <argp_parse@@Base+0x1d7c>
  430a70:	b	430a08 <argp_parse@@Base+0x1d4c>
  430a74:	mov	w1, #0x2f                  	// #47
  430a78:	mov	x0, x19
  430a7c:	bl	4047b0 <strrchr@plt>
  430a80:	cbz	x0, 430a58 <argp_parse@@Base+0x1d9c>
  430a84:	strb	wzr, [x0]
  430a88:	mov	x0, x21
  430a8c:	mov	x1, x19
  430a90:	bl	43299c <argp_parse@@Base+0x3ce0>
  430a94:	cbz	x0, 430a74 <argp_parse@@Base+0x1db8>
  430a98:	mov	w20, wzr
  430a9c:	mov	x0, x19
  430aa0:	bl	4049b0 <free@plt>
  430aa4:	ldr	w8, [x23, #12]
  430aa8:	mov	w9, #0x1                   	// #1
  430aac:	bic	w8, w9, w8, lsr #29
  430ab0:	cmp	w20, w8
  430ab4:	cset	w0, ne  // ne = any
  430ab8:	b	430ac0 <argp_parse@@Base+0x1e04>
  430abc:	mov	w0, wzr
  430ac0:	ldp	x20, x19, [sp, #48]
  430ac4:	ldp	x22, x21, [sp, #32]
  430ac8:	ldp	x24, x23, [sp, #16]
  430acc:	ldp	x29, x30, [sp], #64
  430ad0:	ret
  430ad4:	mov	w20, #0x1                   	// #1
  430ad8:	b	430a9c <argp_parse@@Base+0x1de0>
  430adc:	stp	x29, x30, [sp, #-80]!
  430ae0:	stp	x22, x21, [sp, #48]
  430ae4:	stp	x20, x19, [sp, #64]
  430ae8:	mov	w21, w2
  430aec:	mov	x19, x1
  430af0:	tst	w2, #0x18000000
  430af4:	mov	x22, x0
  430af8:	stp	x26, x25, [sp, #16]
  430afc:	stp	x24, x23, [sp, #32]
  430b00:	mov	x29, sp
  430b04:	b.eq	430b90 <argp_parse@@Base+0x1ed4>  // b.none
  430b08:	mov	x0, x19
  430b0c:	mov	w1, w21
  430b10:	bl	430620 <argp_parse@@Base+0x1964>
  430b14:	tbz	w0, #0, 430b90 <argp_parse@@Base+0x1ed4>
  430b18:	ldr	x20, [x22]
  430b1c:	cbz	x20, 430b38 <argp_parse@@Base+0x1e7c>
  430b20:	ldr	w8, [x20, #8]
  430b24:	cmp	w8, #0x1
  430b28:	b.ne	430b38 <argp_parse@@Base+0x1e7c>  // b.any
  430b2c:	ldr	w8, [x20, #12]
  430b30:	eor	w8, w8, w21
  430b34:	tbz	w8, #29, 430b58 <argp_parse@@Base+0x1e9c>
  430b38:	mov	w0, #0x28                  	// #40
  430b3c:	bl	43a8f4 <argp_parse@@Base+0xbc38>
  430b40:	mov	w8, #0x1                   	// #1
  430b44:	stp	w8, w21, [x0, #8]
  430b48:	ldr	x8, [x22]
  430b4c:	mov	x20, x0
  430b50:	str	x8, [x0]
  430b54:	str	x0, [x22]
  430b58:	ldp	x8, x24, [x20, #24]
  430b5c:	cmp	x24, x8
  430b60:	b.ne	430cb0 <argp_parse@@Base+0x1ff4>  // b.any
  430b64:	ldr	x0, [x20, #16]
  430b68:	cbz	x0, 430cb8 <argp_parse@@Base+0x1ffc>
  430b6c:	mov	x8, #0xf684                	// #63108
  430b70:	movk	x8, #0xda12, lsl #16
  430b74:	movk	x8, #0x684b, lsl #32
  430b78:	movk	x8, #0x12f, lsl #48
  430b7c:	cmp	x24, x8
  430b80:	b.cs	430cd4 <argp_parse@@Base+0x2018>  // b.hs, b.nlast
  430b84:	add	x8, x24, x24, lsr #1
  430b88:	add	x24, x8, #0x1
  430b8c:	b	430cdc <argp_parse@@Base+0x2020>
  430b90:	ldr	x20, [x22]
  430b94:	cbz	x20, 430bb8 <argp_parse@@Base+0x1efc>
  430b98:	ldr	w8, [x20, #8]
  430b9c:	cbnz	w8, 430bb8 <argp_parse@@Base+0x1efc>
  430ba0:	ldr	w8, [x20, #12]
  430ba4:	mov	w9, #0x18                  	// #24
  430ba8:	movk	w9, #0x6000, lsl #16
  430bac:	eor	w8, w8, w21
  430bb0:	tst	w8, w9
  430bb4:	b.eq	430c18 <argp_parse@@Base+0x1f5c>  // b.none
  430bb8:	mov	w0, #0x28                  	// #40
  430bbc:	bl	43a8f4 <argp_parse@@Base+0xbc38>
  430bc0:	adrp	x8, 431000 <argp_parse@@Base+0x2344>
  430bc4:	adrp	x9, 431000 <argp_parse@@Base+0x2344>
  430bc8:	adrp	x10, 431000 <argp_parse@@Base+0x2344>
  430bcc:	adrp	x11, 431000 <argp_parse@@Base+0x2344>
  430bd0:	add	x8, x8, #0x154
  430bd4:	add	x9, x9, #0xa4
  430bd8:	tst	w21, #0x10
  430bdc:	add	x10, x10, #0x174
  430be0:	add	x11, x11, #0x158
  430be4:	adrp	x4, 431000 <argp_parse@@Base+0x2344>
  430be8:	mov	x20, x0
  430bec:	stp	wzr, w21, [x0, #8]
  430bf0:	csel	x2, x9, x8, ne  // ne = any
  430bf4:	csel	x3, x11, x10, ne  // ne = any
  430bf8:	add	x4, x4, #0x190
  430bfc:	mov	x0, xzr
  430c00:	mov	x1, xzr
  430c04:	bl	432c6c <argp_parse@@Base+0x3fb0>
  430c08:	str	x0, [x20, #16]
  430c0c:	ldr	x8, [x22]
  430c10:	str	x8, [x20]
  430c14:	str	x20, [x22]
  430c18:	mov	x0, x19
  430c1c:	bl	43a998 <argp_parse@@Base+0xbcdc>
  430c20:	mov	w8, #0x2                   	// #2
  430c24:	movk	w8, #0x1000, lsl #16
  430c28:	and	w8, w21, w8
  430c2c:	mov	w9, #0x10000000            	// #268435456
  430c30:	cmp	w8, w9
  430c34:	mov	x19, x0
  430c38:	b.ne	430c80 <argp_parse@@Base+0x1fc4>  // b.any
  430c3c:	mov	x8, x19
  430c40:	mov	x9, x19
  430c44:	ldrb	w10, [x9]
  430c48:	cmp	w10, #0x5c
  430c4c:	b.ne	430c6c <argp_parse@@Base+0x1fb0>  // b.any
  430c50:	mov	x10, x9
  430c54:	ldrb	w11, [x10, #1]!
  430c58:	cmp	w11, #0x0
  430c5c:	csel	x10, x9, x10, eq  // eq = none
  430c60:	ldrb	w10, [x10]
  430c64:	cset	w11, ne  // ne = any
  430c68:	b	430c70 <argp_parse@@Base+0x1fb4>
  430c6c:	mov	w11, wzr
  430c70:	add	x9, x9, x11
  430c74:	add	x9, x9, #0x1
  430c78:	strb	w10, [x8], #1
  430c7c:	cbnz	w10, 430c44 <argp_parse@@Base+0x1f88>
  430c80:	ldr	x0, [x20, #16]
  430c84:	mov	x1, x19
  430c88:	bl	433508 <argp_parse@@Base+0x484c>
  430c8c:	cmp	x0, x19
  430c90:	b.eq	430e08 <argp_parse@@Base+0x214c>  // b.none
  430c94:	mov	x0, x19
  430c98:	ldp	x20, x19, [sp, #64]
  430c9c:	ldp	x22, x21, [sp, #48]
  430ca0:	ldp	x24, x23, [sp, #32]
  430ca4:	ldp	x26, x25, [sp, #16]
  430ca8:	ldp	x29, x30, [sp], #80
  430cac:	b	4049b0 <free@plt>
  430cb0:	ldr	x23, [x20, #16]
  430cb4:	b	430cf8 <argp_parse@@Base+0x203c>
  430cb8:	cbz	x24, 430cd8 <argp_parse@@Base+0x201c>
  430cbc:	mov	x8, #0x71c8                	// #29128
  430cc0:	movk	x8, #0xc71c, lsl #16
  430cc4:	movk	x8, #0x1c71, lsl #32
  430cc8:	movk	x8, #0x1c7, lsl #48
  430ccc:	cmp	x24, x8
  430cd0:	b.cc	430cdc <argp_parse@@Base+0x2020>  // b.lo, b.ul, b.last
  430cd4:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  430cd8:	mov	w24, #0x1                   	// #1
  430cdc:	add	x8, x24, x24, lsl #3
  430ce0:	lsl	x1, x8, #3
  430ce4:	str	x24, [x20, #24]
  430ce8:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  430cec:	ldr	x24, [x20, #32]
  430cf0:	mov	x23, x0
  430cf4:	str	x0, [x20, #16]
  430cf8:	mov	w8, #0x48                  	// #72
  430cfc:	add	x25, x24, #0x1
  430d00:	mul	x8, x24, x8
  430d04:	str	x25, [x20, #32]
  430d08:	str	w21, [x23, x8]
  430d0c:	tbnz	w21, #27, 430d44 <argp_parse@@Base+0x2088>
  430d10:	tbz	w21, #26, 430d34 <argp_parse@@Base+0x2078>
  430d14:	mov	x0, x19
  430d18:	bl	43a998 <argp_parse@@Base+0xbcdc>
  430d1c:	mov	x19, x0
  430d20:	mov	w0, #0x10                  	// #16
  430d24:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  430d28:	ldr	x8, [x22, #8]
  430d2c:	stp	x8, x19, [x0]
  430d30:	str	x0, [x22, #8]
  430d34:	mov	w8, #0x48                  	// #72
  430d38:	madd	x8, x24, x8, x23
  430d3c:	str	x19, [x8, #8]
  430d40:	b	430e08 <argp_parse@@Base+0x214c>
  430d44:	lsr	w8, w21, #3
  430d48:	and	w8, w8, #0x2
  430d4c:	mov	w9, #0x9                   	// #9
  430d50:	orr	w22, w8, w9
  430d54:	tbnz	w21, #3, 430d7c <argp_parse@@Base+0x20c0>
  430d58:	mov	w8, #0x48                  	// #72
  430d5c:	madd	x8, x24, x8, x23
  430d60:	add	x0, x8, #0x8
  430d64:	mov	x1, x19
  430d68:	mov	w2, w22
  430d6c:	bl	43c8b4 <_obstack_memory_used@@Base+0x10bc>
  430d70:	mov	w19, w0
  430d74:	cbnz	w19, 430dfc <argp_parse@@Base+0x2140>
  430d78:	b	430e08 <argp_parse@@Base+0x214c>
  430d7c:	mov	x0, x19
  430d80:	bl	404170 <strlen@plt>
  430d84:	sub	x8, x19, #0x1
  430d88:	cbz	x0, 430e00 <argp_parse@@Base+0x2144>
  430d8c:	ldrb	w9, [x8, x0]
  430d90:	sub	x26, x0, #0x1
  430d94:	mov	x0, x26
  430d98:	cmp	w9, #0x2f
  430d9c:	b.eq	430d88 <argp_parse@@Base+0x20cc>  // b.none
  430da0:	add	x0, x26, #0x8
  430da4:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  430da8:	add	x2, x26, #0x1
  430dac:	mov	x1, x19
  430db0:	mov	x21, x0
  430db4:	bl	4040f0 <memcpy@plt>
  430db8:	mov	w9, #0x2f28                	// #12072
  430dbc:	mov	w10, #0x292a                	// #10538
  430dc0:	add	x8, x21, x26
  430dc4:	movk	w9, #0x2a2e, lsl #16
  430dc8:	movk	w10, #0x3f, lsl #16
  430dcc:	mov	w11, #0x48                  	// #72
  430dd0:	stur	w9, [x8, #1]
  430dd4:	str	w10, [x8, #4]
  430dd8:	madd	x8, x24, x11, x23
  430ddc:	add	x0, x8, #0x8
  430de0:	mov	x1, x21
  430de4:	mov	w2, w22
  430de8:	bl	43c8b4 <_obstack_memory_used@@Base+0x10bc>
  430dec:	mov	w19, w0
  430df0:	mov	x0, x21
  430df4:	bl	4049b0 <free@plt>
  430df8:	cbz	w19, 430e08 <argp_parse@@Base+0x214c>
  430dfc:	ldr	x25, [x20, #32]
  430e00:	sub	x8, x25, #0x1
  430e04:	str	x8, [x20, #32]
  430e08:	ldp	x20, x19, [sp, #64]
  430e0c:	ldp	x22, x21, [sp, #48]
  430e10:	ldp	x24, x23, [sp, #32]
  430e14:	ldp	x26, x25, [sp, #16]
  430e18:	ldp	x29, x30, [sp], #80
  430e1c:	ret
  430e20:	sub	sp, sp, #0x70
  430e24:	stp	x24, x23, [sp, #64]
  430e28:	mov	x23, x0
  430e2c:	mov	x0, x2
  430e30:	stp	x29, x30, [sp, #16]
  430e34:	stp	x28, x27, [sp, #32]
  430e38:	stp	x26, x25, [sp, #48]
  430e3c:	stp	x22, x21, [sp, #80]
  430e40:	stp	x20, x19, [sp, #96]
  430e44:	add	x29, sp, #0x10
  430e48:	mov	x19, x5
  430e4c:	mov	w20, w4
  430e50:	mov	w21, w3
  430e54:	mov	x24, x2
  430e58:	mov	x22, x1
  430e5c:	str	xzr, [sp, #8]
  430e60:	bl	404780 <getc_unlocked@plt>
  430e64:	cmn	w0, #0x1
  430e68:	b.eq	430ebc <argp_parse@@Base+0x2200>  // b.none
  430e6c:	mov	w26, w0
  430e70:	mov	x8, xzr
  430e74:	mov	x25, xzr
  430e78:	mov	x28, xzr
  430e7c:	cmp	x28, x8
  430e80:	b.ne	430e94 <argp_parse@@Base+0x21d8>  // b.any
  430e84:	add	x1, sp, #0x8
  430e88:	mov	x0, x25
  430e8c:	bl	43a8a8 <argp_parse@@Base+0xbbec>
  430e90:	mov	x25, x0
  430e94:	mov	x0, x24
  430e98:	add	x27, x28, #0x1
  430e9c:	strb	w26, [x25, x28]
  430ea0:	bl	404780 <getc_unlocked@plt>
  430ea4:	cmn	w0, #0x1
  430ea8:	b.eq	430ec4 <argp_parse@@Base+0x2208>  // b.none
  430eac:	ldr	x8, [sp, #8]
  430eb0:	mov	w26, w0
  430eb4:	mov	x28, x27
  430eb8:	b	430e7c <argp_parse@@Base+0x21c0>
  430ebc:	mov	x27, xzr
  430ec0:	mov	x25, xzr
  430ec4:	mov	x0, x24
  430ec8:	bl	4042b0 <ferror_unlocked@plt>
  430ecc:	cbz	w0, 430edc <argp_parse@@Base+0x2220>
  430ed0:	bl	404ce0 <__errno_location@plt>
  430ed4:	ldr	w26, [x0]
  430ed8:	b	430ee0 <argp_parse@@Base+0x2224>
  430edc:	mov	w26, wzr
  430ee0:	add	x1, x27, #0x1
  430ee4:	mov	x0, x25
  430ee8:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  430eec:	mov	x24, x0
  430ef0:	add	x8, x0, x27
  430ef4:	strb	w20, [x8]
  430ef8:	cbz	x27, 430f10 <argp_parse@@Base+0x2254>
  430efc:	add	x9, x27, x24
  430f00:	ldurb	w9, [x9, #-1]
  430f04:	cmp	w9, w20, uxtb
  430f08:	cset	w9, ne  // ne = any
  430f0c:	b	430f14 <argp_parse@@Base+0x2258>
  430f10:	mov	x9, xzr
  430f14:	mov	w0, #0x10                  	// #16
  430f18:	add	x27, x8, x9
  430f1c:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  430f20:	ldr	x8, [x22, #8]
  430f24:	cmp	x24, x27
  430f28:	stp	x8, x24, [x0]
  430f2c:	str	x0, [x22, #8]
  430f30:	b.cs	430fa0 <argp_parse@@Base+0x22e4>  // b.hs, b.nlast
  430f34:	and	x28, x20, #0xff
  430f38:	mov	x25, x24
  430f3c:	ldrb	w8, [x24]
  430f40:	cmp	w8, w20, uxtb
  430f44:	b.ne	430f94 <argp_parse@@Base+0x22d8>  // b.any
  430f48:	bl	404930 <__ctype_b_loc@plt>
  430f4c:	ldr	x8, [x0]
  430f50:	mov	x9, x24
  430f54:	ldrh	w10, [x8, x28, lsl #1]
  430f58:	tbz	w10, #13, 430f78 <argp_parse@@Base+0x22bc>
  430f5c:	mov	x9, x24
  430f60:	cmp	x25, x9
  430f64:	b.eq	430f90 <argp_parse@@Base+0x22d4>  // b.none
  430f68:	ldrb	w10, [x9, #-1]!
  430f6c:	ldrh	w10, [x8, x10, lsl #1]
  430f70:	tbnz	w10, #13, 430f60 <argp_parse@@Base+0x22a4>
  430f74:	add	x9, x9, #0x1
  430f78:	mov	x0, x22
  430f7c:	mov	x1, x25
  430f80:	mov	w2, w21
  430f84:	mov	x3, x19
  430f88:	strb	wzr, [x9]
  430f8c:	blr	x23
  430f90:	add	x25, x24, #0x1
  430f94:	add	x24, x24, #0x1
  430f98:	cmp	x24, x27
  430f9c:	b.ne	430f3c <argp_parse@@Base+0x2280>  // b.any
  430fa0:	bl	404ce0 <__errno_location@plt>
  430fa4:	str	w26, [x0]
  430fa8:	cmp	w26, #0x0
  430fac:	ldp	x20, x19, [sp, #96]
  430fb0:	ldp	x22, x21, [sp, #80]
  430fb4:	ldp	x24, x23, [sp, #64]
  430fb8:	ldp	x26, x25, [sp, #48]
  430fbc:	ldp	x28, x27, [sp, #32]
  430fc0:	ldp	x29, x30, [sp, #16]
  430fc4:	csetm	w8, ne  // ne = any
  430fc8:	mov	w0, w8
  430fcc:	add	sp, sp, #0x70
  430fd0:	ret
  430fd4:	sub	sp, sp, #0x40
  430fd8:	stp	x29, x30, [sp, #16]
  430fdc:	stp	x22, x21, [sp, #32]
  430fe0:	stp	x20, x19, [sp, #48]
  430fe4:	str	x0, [sp, #8]
  430fe8:	ldrb	w8, [x2]
  430fec:	mov	w19, w4
  430ff0:	mov	w20, w3
  430ff4:	mov	x21, x1
  430ff8:	cmp	w8, #0x2d
  430ffc:	add	x29, sp, #0x10
  431000:	b.ne	43100c <argp_parse@@Base+0x2350>  // b.any
  431004:	ldrb	w8, [x2, #1]
  431008:	cbz	w8, 431064 <argp_parse@@Base+0x23a8>
  43100c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x13808>
  431010:	add	x1, x1, #0x84b
  431014:	mov	x0, x2
  431018:	bl	4044a0 <fopen@plt>
  43101c:	cbz	x0, 43105c <argp_parse@@Base+0x23a0>
  431020:	mov	x22, x0
  431024:	adrp	x0, 431000 <argp_parse@@Base+0x2344>
  431028:	add	x0, x0, #0x9c
  43102c:	add	x5, sp, #0x8
  431030:	mov	x1, x21
  431034:	mov	x2, x22
  431038:	mov	w3, w20
  43103c:	mov	w4, w19
  431040:	bl	430e20 <argp_parse@@Base+0x2164>
  431044:	mov	w19, w0
  431048:	mov	x0, x22
  43104c:	bl	404450 <fclose@plt>
  431050:	cmp	w0, #0x0
  431054:	csinv	w0, w19, wzr, eq  // eq = none
  431058:	b	431088 <argp_parse@@Base+0x23cc>
  43105c:	mov	w0, #0xffffffff            	// #-1
  431060:	b	431088 <argp_parse@@Base+0x23cc>
  431064:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  431068:	ldr	x2, [x8, #640]
  43106c:	adrp	x0, 431000 <argp_parse@@Base+0x2344>
  431070:	add	x0, x0, #0x9c
  431074:	add	x5, sp, #0x8
  431078:	mov	x1, x21
  43107c:	mov	w3, w20
  431080:	mov	w4, w19
  431084:	bl	430e20 <argp_parse@@Base+0x2164>
  431088:	ldp	x20, x19, [sp, #48]
  43108c:	ldp	x22, x21, [sp, #32]
  431090:	ldp	x29, x30, [sp, #16]
  431094:	add	sp, sp, #0x40
  431098:	ret
  43109c:	ldr	x3, [x3]
  4310a0:	br	x3
  4310a4:	sub	sp, sp, #0x60
  4310a8:	str	x0, [sp, #16]
  4310ac:	mov	x0, sp
  4310b0:	stp	x29, x30, [sp, #64]
  4310b4:	stp	x20, x19, [sp, #80]
  4310b8:	add	x29, sp, #0x40
  4310bc:	mov	x19, x1
  4310c0:	strb	wzr, [sp]
  4310c4:	stur	xzr, [sp, #4]
  4310c8:	strb	wzr, [sp, #12]
  4310cc:	bl	434294 <argp_parse@@Base+0x55d8>
  4310d0:	ldrb	w8, [sp, #32]
  4310d4:	ldr	w0, [sp, #36]
  4310d8:	cbz	w8, 4310e4 <argp_parse@@Base+0x2428>
  4310dc:	mov	x20, xzr
  4310e0:	cbz	w0, 431140 <argp_parse@@Base+0x2484>
  4310e4:	mov	x20, xzr
  4310e8:	tst	w8, #0xff
  4310ec:	b.eq	4310fc <argp_parse@@Base+0x2440>  // b.none
  4310f0:	bl	404d80 <towlower@plt>
  4310f4:	ldr	x8, [sp, #16]
  4310f8:	b	431104 <argp_parse@@Base+0x2448>
  4310fc:	ldr	x8, [sp, #16]
  431100:	ldrb	w0, [x8]
  431104:	ldr	x10, [sp, #24]
  431108:	lsl	x9, x20, #5
  43110c:	sub	x9, x9, x20
  431110:	add	x9, x9, w0, uxtw
  431114:	udiv	x11, x9, x19
  431118:	add	x8, x8, x10
  43111c:	mov	x0, sp
  431120:	msub	x20, x11, x19, x9
  431124:	str	x8, [sp, #16]
  431128:	strb	wzr, [sp, #12]
  43112c:	bl	434294 <argp_parse@@Base+0x55d8>
  431130:	ldrb	w8, [sp, #32]
  431134:	ldr	w0, [sp, #36]
  431138:	cbz	w8, 4310e8 <argp_parse@@Base+0x242c>
  43113c:	cbnz	w0, 4310e8 <argp_parse@@Base+0x242c>
  431140:	mov	x0, x20
  431144:	ldp	x20, x19, [sp, #80]
  431148:	ldp	x29, x30, [sp, #64]
  43114c:	add	sp, sp, #0x60
  431150:	ret
  431154:	b	432c14 <argp_parse@@Base+0x3f58>
  431158:	stp	x29, x30, [sp, #-16]!
  43115c:	mov	x29, sp
  431160:	bl	434090 <argp_parse@@Base+0x53d4>
  431164:	cmp	w0, #0x0
  431168:	cset	w0, eq  // eq = none
  43116c:	ldp	x29, x30, [sp], #16
  431170:	ret
  431174:	stp	x29, x30, [sp, #-16]!
  431178:	mov	x29, sp
  43117c:	bl	404900 <strcmp@plt>
  431180:	cmp	w0, #0x0
  431184:	cset	w0, eq  // eq = none
  431188:	ldp	x29, x30, [sp], #16
  43118c:	ret
  431190:	b	4049b0 <free@plt>
  431194:	stp	x29, x30, [sp, #-64]!
  431198:	str	x23, [sp, #16]
  43119c:	stp	x22, x21, [sp, #32]
  4311a0:	stp	x20, x19, [sp, #48]
  4311a4:	mov	w19, w4
  4311a8:	mov	x20, x3
  4311ac:	mov	x21, x2
  4311b0:	mov	w22, w1
  4311b4:	mov	w23, w0
  4311b8:	mov	x29, sp
  4311bc:	tbnz	w0, #31, 4311d4 <argp_parse@@Base+0x2518>
  4311c0:	mov	w0, w23
  4311c4:	mov	x1, x20
  4311c8:	bl	404570 <futimens@plt>
  4311cc:	cbnz	x21, 4311dc <argp_parse@@Base+0x2520>
  4311d0:	b	43120c <argp_parse@@Base+0x2550>
  4311d4:	mov	w0, #0x1                   	// #1
  4311d8:	cbz	x21, 43120c <argp_parse@@Base+0x2550>
  4311dc:	tbnz	w23, #31, 4311f8 <argp_parse@@Base+0x253c>
  4311e0:	cmn	w0, #0x1
  4311e4:	b.ne	43120c <argp_parse@@Base+0x2550>  // b.any
  4311e8:	bl	404ce0 <__errno_location@plt>
  4311ec:	ldr	w8, [x0]
  4311f0:	cmp	w8, #0x26
  4311f4:	b.ne	431220 <argp_parse@@Base+0x2564>  // b.any
  4311f8:	mov	w0, w22
  4311fc:	mov	x1, x21
  431200:	mov	x2, x20
  431204:	mov	w3, w19
  431208:	bl	404a80 <utimensat@plt>
  43120c:	cmp	w0, #0x1
  431210:	b.ne	431224 <argp_parse@@Base+0x2568>  // b.any
  431214:	bl	404ce0 <__errno_location@plt>
  431218:	mov	w8, #0x9                   	// #9
  43121c:	str	w8, [x0]
  431220:	mov	w0, #0xffffffff            	// #-1
  431224:	ldp	x20, x19, [sp, #48]
  431228:	ldp	x22, x21, [sp, #32]
  43122c:	ldr	x23, [sp, #16]
  431230:	ldp	x29, x30, [sp], #64
  431234:	ret
  431238:	stp	x29, x30, [sp, #-32]!
  43123c:	stp	x20, x19, [sp, #16]
  431240:	ldr	w8, [x1, #16]
  431244:	mov	x29, sp
  431248:	and	w8, w8, #0xf000
  43124c:	cmp	w8, #0xa, lsl #12
  431250:	b.ne	43125c <argp_parse@@Base+0x25a0>  // b.any
  431254:	mov	w0, wzr
  431258:	b	4312e8 <argp_parse@@Base+0x262c>
  43125c:	mov	x20, x1
  431260:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x17808>
  431264:	add	x1, x1, #0x3f3
  431268:	mov	x2, xzr
  43126c:	mov	x3, xzr
  431270:	mov	x19, x0
  431274:	bl	4048b0 <getxattr@plt>
  431278:	tbnz	x0, #63, 431288 <argp_parse@@Base+0x25cc>
  43127c:	cbz	x0, 431298 <argp_parse@@Base+0x25dc>
  431280:	mov	w0, #0x1                   	// #1
  431284:	b	4312e8 <argp_parse@@Base+0x262c>
  431288:	bl	404ce0 <__errno_location@plt>
  43128c:	ldr	w8, [x0]
  431290:	cmp	w8, #0x3d
  431294:	b.ne	4312dc <argp_parse@@Base+0x2620>  // b.any
  431298:	ldr	w8, [x20, #16]
  43129c:	and	w8, w8, #0xf000
  4312a0:	cmp	w8, #0x4, lsl #12
  4312a4:	b.ne	431254 <argp_parse@@Base+0x2598>  // b.any
  4312a8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x17808>
  4312ac:	add	x1, x1, #0x40b
  4312b0:	mov	x0, x19
  4312b4:	mov	x2, xzr
  4312b8:	mov	x3, xzr
  4312bc:	bl	4048b0 <getxattr@plt>
  4312c0:	tbnz	x0, #63, 4312cc <argp_parse@@Base+0x2610>
  4312c4:	cbnz	x0, 431280 <argp_parse@@Base+0x25c4>
  4312c8:	b	431254 <argp_parse@@Base+0x2598>
  4312cc:	bl	404ce0 <__errno_location@plt>
  4312d0:	ldr	w8, [x0]
  4312d4:	cmp	w8, #0x3d
  4312d8:	b.eq	431254 <argp_parse@@Base+0x2598>  // b.none
  4312dc:	ldr	w0, [x0]
  4312e0:	bl	447630 <_obstack_memory_used@@Base+0xbe38>
  4312e4:	sbfx	w0, w0, #0, #1
  4312e8:	ldp	x20, x19, [sp, #16]
  4312ec:	ldp	x29, x30, [sp], #32
  4312f0:	ret
  4312f4:	mov	w5, w4
  4312f8:	mov	x4, x3
  4312fc:	mov	w3, wzr
  431300:	b	431304 <argp_parse@@Base+0x2648>
  431304:	stp	x29, x30, [sp, #-96]!
  431308:	stp	x28, x27, [sp, #16]
  43130c:	stp	x26, x25, [sp, #32]
  431310:	stp	x24, x23, [sp, #48]
  431314:	stp	x22, x21, [sp, #64]
  431318:	stp	x20, x19, [sp, #80]
  43131c:	mov	x29, sp
  431320:	sub	sp, sp, #0x490
  431324:	ldr	x8, [x2, #48]
  431328:	ldr	w9, [x2, #8]
  43132c:	adrp	x10, 452000 <_obstack_memory_used@@Base+0x16808>
  431330:	add	x10, x10, #0x3ee
  431334:	cmp	x8, #0x0
  431338:	csel	x12, x10, x8, eq  // eq = none
  43133c:	ldrb	w8, [x1]
  431340:	mov	w11, #0xc                   	// #12
  431344:	cmp	w9, #0x0
  431348:	csel	w10, w11, w9, eq  // eq = none
  43134c:	subs	w9, w9, #0xc
  431350:	csel	w9, w9, w10, gt
  431354:	str	w5, [sp, #44]
  431358:	str	x4, [sp, #48]
  43135c:	str	w3, [sp, #92]
  431360:	cbz	w8, 43266c <argp_parse@@Base+0x39b0>
  431364:	str	w9, [sp, #20]
  431368:	sub	x9, x29, #0x20
  43136c:	sub	x10, x29, #0x28
  431370:	add	x9, x9, #0x17
  431374:	stp	x9, x2, [sp, #72]
  431378:	orr	x9, x10, #0x2
  43137c:	mov	w27, #0xcccc                	// #52428
  431380:	add	x11, sp, #0x60
  431384:	str	x9, [sp, #64]
  431388:	orr	x9, x10, #0x3
  43138c:	mov	x23, x1
  431390:	mov	x24, x0
  431394:	mov	x1, xzr
  431398:	movk	w27, #0xccc, lsl #16
  43139c:	str	x9, [sp, #56]
  4313a0:	orr	x9, x11, #0x1
  4313a4:	stp	x12, x9, [sp, #24]
  4313a8:	and	w9, w8, #0xff
  4313ac:	cmp	w9, #0x25
  4313b0:	b.ne	43141c <argp_parse@@Base+0x2760>  // b.any
  4313b4:	ldr	w26, [sp, #92]
  4313b8:	mov	w28, wzr
  4313bc:	mov	w20, wzr
  4313c0:	mov	w10, #0xa                   	// #10
  4313c4:	add	x23, x23, #0x1
  4313c8:	ldrb	w8, [x23]
  4313cc:	cmp	w8, #0x2f
  4313d0:	b.le	4313e8 <argp_parse@@Base+0x272c>
  4313d4:	cmp	w8, #0x30
  4313d8:	b.eq	4313f0 <argp_parse@@Base+0x2734>  // b.none
  4313dc:	cmp	w8, #0x5f
  4313e0:	b.eq	4313f0 <argp_parse@@Base+0x2734>  // b.none
  4313e4:	b	4313fc <argp_parse@@Base+0x2740>
  4313e8:	cmp	w8, #0x2d
  4313ec:	b.ne	43140c <argp_parse@@Base+0x2750>  // b.any
  4313f0:	add	x23, x23, #0x1
  4313f4:	mov	w20, w8
  4313f8:	b	4313c8 <argp_parse@@Base+0x270c>
  4313fc:	cmp	w8, #0x5e
  431400:	b.ne	431444 <argp_parse@@Base+0x2788>  // b.any
  431404:	mov	w26, #0x1                   	// #1
  431408:	b	4313c4 <argp_parse@@Base+0x2708>
  43140c:	cmp	w8, #0x23
  431410:	b.ne	431444 <argp_parse@@Base+0x2788>  // b.any
  431414:	mov	w28, #0x1                   	// #1
  431418:	b	4313c4 <argp_parse@@Base+0x2708>
  43141c:	cmn	x1, #0x3
  431420:	b.hi	43266c <argp_parse@@Base+0x39b0>  // b.pmore
  431424:	cbz	x24, 43143c <argp_parse@@Base+0x2780>
  431428:	and	w0, w8, #0xff
  43142c:	mov	x19, x1
  431430:	mov	x1, x24
  431434:	bl	404310 <fputc@plt>
  431438:	mov	x1, x19
  43143c:	add	x1, x1, #0x1
  431440:	b	432588 <argp_parse@@Base+0x38cc>
  431444:	sub	w9, w8, #0x30
  431448:	cmp	w9, #0x9
  43144c:	b.hi	431494 <argp_parse@@Base+0x27d8>  // b.pmore
  431450:	mov	w22, wzr
  431454:	cmp	w22, w27
  431458:	b.gt	43146c <argp_parse@@Base+0x27b0>
  43145c:	b.ne	431474 <argp_parse@@Base+0x27b8>  // b.any
  431460:	and	w9, w8, #0xff
  431464:	cmp	w9, #0x37
  431468:	b.ls	431474 <argp_parse@@Base+0x27b8>  // b.plast
  43146c:	mov	w22, #0x7fffffff            	// #2147483647
  431470:	b	431480 <argp_parse@@Base+0x27c4>
  431474:	mul	w9, w22, w10
  431478:	add	w8, w9, w8, uxtb
  43147c:	sub	w22, w8, #0x30
  431480:	ldrb	w8, [x23, #1]!
  431484:	sub	w9, w8, #0x30
  431488:	cmp	w9, #0xa
  43148c:	b.cc	431454 <argp_parse@@Base+0x2798>  // b.lo, b.ul, b.last
  431490:	b	431498 <argp_parse@@Base+0x27dc>
  431494:	mov	w22, #0xffffffff            	// #-1
  431498:	cmp	w8, #0x4f
  43149c:	b.eq	4314a8 <argp_parse@@Base+0x27ec>  // b.none
  4314a0:	cmp	w8, #0x45
  4314a4:	b.ne	4314b8 <argp_parse@@Base+0x27fc>  // b.any
  4314a8:	ldrb	w10, [x23, #1]!
  4314ac:	mov	w9, w8
  4314b0:	mov	w8, w10
  4314b4:	b	4314bc <argp_parse@@Base+0x2800>
  4314b8:	mov	w9, wzr
  4314bc:	sub	w12, w8, #0x25
  4314c0:	cmp	w12, #0x55
  4314c4:	b.hi	431604 <argp_parse@@Base+0x2948>  // b.pmore
  4314c8:	adrp	x15, 453000 <_obstack_memory_used@@Base+0x17808>
  4314cc:	add	x15, x15, #0x424
  4314d0:	adr	x13, 4314f8 <argp_parse@@Base+0x283c>
  4314d4:	ldrh	w14, [x15, x12, lsl #1]
  4314d8:	add	x13, x13, x14, lsl #2
  4314dc:	adrp	x25, 44d000 <_obstack_memory_used@@Base+0x11808>
  4314e0:	mov	w21, wzr
  4314e4:	mov	w19, wzr
  4314e8:	mov	w11, wzr
  4314ec:	mov	x10, xzr
  4314f0:	add	x25, x25, #0xb4b
  4314f4:	br	x13
  4314f8:	cmp	w9, #0x45
  4314fc:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  431500:	ldr	x10, [sp, #80]
  431504:	mov	w13, #0xffffff9c            	// #-100
  431508:	mov	w14, #0x12c                 	// #300
  43150c:	ldr	w11, [x10, #20]
  431510:	ldp	w10, w12, [x10, #24]
  431514:	cmp	w11, #0x0
  431518:	sub	w15, w12, w10
  43151c:	csel	w14, w14, w13, lt  // lt = tstop
  431520:	add	w13, w15, #0x17e
  431524:	mov	w15, #0x2493                	// #9363
  431528:	movk	w15, #0x9249, lsl #16
  43152c:	smull	x15, w13, w15
  431530:	lsr	x15, x15, #32
  431534:	add	w15, w15, w13
  431538:	asr	w16, w15, #2
  43153c:	add	w15, w16, w15, lsr #31
  431540:	lsl	w16, w15, #3
  431544:	sub	w15, w16, w15
  431548:	sub	w13, w15, w13
  43154c:	add	w13, w12, w13
  431550:	adds	w13, w13, #0x3
  431554:	add	w15, w14, w11
  431558:	b.mi	431c3c <argp_parse@@Base+0x2f80>  // b.first
  43155c:	tst	w15, #0x3
  431560:	mov	w14, #0x16d                 	// #365
  431564:	b.ne	4315a0 <argp_parse@@Base+0x28e4>  // b.any
  431568:	mov	w16, #0x5c29                	// #23593
  43156c:	mov	w17, #0xb850                	// #47184
  431570:	movk	w16, #0xc28f, lsl #16
  431574:	movk	w17, #0x51e, lsl #16
  431578:	mov	w18, #0xd70b                	// #55051
  43157c:	madd	w15, w15, w16, w17
  431580:	movk	w18, #0xa3, lsl #16
  431584:	ror	w16, w15, #2
  431588:	ror	w15, w15, #4
  43158c:	cmp	w15, w18
  431590:	mov	w15, #0x5c28                	// #23592
  431594:	movk	w15, #0x28f, lsl #16
  431598:	ccmp	w16, w15, #0x2, cs  // cs = hs, nlast
  43159c:	cinc	w14, w14, hi  // hi = pmore
  4315a0:	add	w14, w10, w14
  4315a4:	sub	w12, w12, w14
  4315a8:	mov	w14, #0x2493                	// #9363
  4315ac:	movk	w14, #0x9249, lsl #16
  4315b0:	add	w12, w12, #0x17e
  4315b4:	smull	x14, w12, w14
  4315b8:	lsr	x14, x14, #32
  4315bc:	add	w12, w14, w12
  4315c0:	asr	w14, w12, #2
  4315c4:	add	w12, w14, w12, lsr #31
  4315c8:	lsl	w14, w12, #3
  4315cc:	sub	w12, w14, w12
  4315d0:	add	w10, w10, w12
  4315d4:	sub	w10, w10, #0x17b
  4315d8:	mvn	w12, w10
  4315dc:	cmp	w10, #0x0
  4315e0:	lsr	w14, w12, #31
  4315e4:	csel	w10, w10, w13, ge  // ge = tcont
  4315e8:	b	431cc4 <argp_parse@@Base+0x3008>
  4315ec:	cmp	w9, #0x45
  4315f0:	orr	w26, w28, w26
  4315f4:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  4315f8:	mov	w21, wzr
  4315fc:	mov	w19, wzr
  431600:	b	431e28 <argp_parse@@Base+0x316c>
  431604:	cbnz	w8, 4322d4 <argp_parse@@Base+0x3618>
  431608:	sub	x23, x23, #0x1
  43160c:	b	4322d4 <argp_parse@@Base+0x3618>
  431610:	cbnz	w9, 4322d4 <argp_parse@@Base+0x3618>
  431614:	bic	w8, w22, w22, asr #31
  431618:	cmp	w8, #0x1
  43161c:	csinc	w19, w8, wzr, hi  // hi = pmore
  431620:	mvn	x9, x1
  431624:	cmp	x19, x9
  431628:	b.cs	43266c <argp_parse@@Base+0x39b0>  // b.hs, b.nlast
  43162c:	cbz	x24, 4323b4 <argp_parse@@Base+0x36f8>
  431630:	mov	x21, x1
  431634:	cmp	w8, #0x2
  431638:	b.cc	43264c <argp_parse@@Base+0x3990>  // b.lo, b.ul, b.last
  43163c:	sxtw	x8, w22
  431640:	cmp	w20, #0x30
  431644:	sub	x20, x8, #0x1
  431648:	b.ne	432634 <argp_parse@@Base+0x3978>  // b.any
  43164c:	cbz	x20, 43264c <argp_parse@@Base+0x3990>
  431650:	mov	w0, #0x30                  	// #48
  431654:	mov	x1, x24
  431658:	bl	404310 <fputc@plt>
  43165c:	subs	x20, x20, #0x1
  431660:	b.ne	431650 <argp_parse@@Base+0x2994>  // b.any
  431664:	b	43264c <argp_parse@@Base+0x3990>
  431668:	mov	w10, #0x1                   	// #1
  43166c:	ldrb	w11, [x23, x10]
  431670:	cmp	w11, #0x3a
  431674:	b.ne	431c10 <argp_parse@@Base+0x2f54>  // b.any
  431678:	add	x10, x10, #0x1
  43167c:	b	43166c <argp_parse@@Base+0x29b0>
  431680:	cbnz	w9, 4322d4 <argp_parse@@Base+0x3618>
  431684:	mov	w21, wzr
  431688:	mov	w19, wzr
  43168c:	orr	w26, w28, w26
  431690:	mov	w8, #0x41                  	// #65
  431694:	b	431e28 <argp_parse@@Base+0x316c>
  431698:	cmp	w9, #0x45
  43169c:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  4316a0:	mov	w21, wzr
  4316a4:	mov	w19, wzr
  4316a8:	orr	w26, w28, w26
  4316ac:	mov	w8, #0x42                  	// #66
  4316b0:	b	431e28 <argp_parse@@Base+0x316c>
  4316b4:	cmp	w9, #0x45
  4316b8:	b.ne	431d28 <argp_parse@@Base+0x306c>  // b.any
  4316bc:	mov	w21, wzr
  4316c0:	mov	w19, wzr
  4316c4:	mov	w8, #0x43                  	// #67
  4316c8:	b	431e28 <argp_parse@@Base+0x316c>
  4316cc:	cbnz	w9, 4322d4 <argp_parse@@Base+0x3618>
  4316d0:	adrp	x25, 453000 <_obstack_memory_used@@Base+0x17808>
  4316d4:	add	x25, x25, #0x4d4
  4316d8:	b	4317a4 <argp_parse@@Base+0x2ae8>
  4316dc:	cbnz	w9, 4322d4 <argp_parse@@Base+0x3618>
  4316e0:	adrp	x25, 453000 <_obstack_memory_used@@Base+0x17808>
  4316e4:	add	x25, x25, #0x4dd
  4316e8:	b	4317a4 <argp_parse@@Base+0x2ae8>
  4316ec:	cmp	w9, #0x45
  4316f0:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  4316f4:	ldr	x10, [sp, #80]
  4316f8:	ldr	w10, [x10, #8]
  4316fc:	b	431e08 <argp_parse@@Base+0x314c>
  431700:	cmp	w9, #0x45
  431704:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  431708:	ldr	w10, [sp, #20]
  43170c:	b	431e08 <argp_parse@@Base+0x314c>
  431710:	cmp	w9, #0x45
  431714:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  431718:	ldr	x10, [sp, #80]
  43171c:	ldr	w10, [x10, #4]
  431720:	b	431e08 <argp_parse@@Base+0x314c>
  431724:	cmp	w9, #0x45
  431728:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  43172c:	cmn	w22, #0x1
  431730:	b.eq	4323bc <argp_parse@@Base+0x3700>  // b.none
  431734:	cmp	w22, #0x8
  431738:	b.gt	4323f0 <argp_parse@@Base+0x3734>
  43173c:	ldr	w10, [sp, #44]
  431740:	sub	w11, w22, #0x1
  431744:	mov	w12, #0x6667                	// #26215
  431748:	movk	w12, #0x6666, lsl #16
  43174c:	smull	x10, w10, w12
  431750:	add	w11, w11, #0x1
  431754:	lsr	x12, x10, #63
  431758:	asr	x10, x10, #34
  43175c:	cmp	w11, #0x8
  431760:	add	w10, w10, w12
  431764:	b.lt	431744 <argp_parse@@Base+0x2a88>  // b.tstop
  431768:	b	4323f4 <argp_parse@@Base+0x3738>
  43176c:	mov	w11, #0x1                   	// #1
  431770:	eor	w8, w28, #0x1
  431774:	mov	w19, wzr
  431778:	orr	w21, w28, w11
  43177c:	and	w26, w26, w8
  431780:	mov	w8, #0x70                  	// #112
  431784:	b	431e28 <argp_parse@@Base+0x316c>
  431788:	cmp	w9, #0x45
  43178c:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  431790:	ldr	x10, [sp, #80]
  431794:	ldr	w10, [x10]
  431798:	b	431e08 <argp_parse@@Base+0x314c>
  43179c:	adrp	x25, 455000 <_obstack_memory_used@@Base+0x19808>
  4317a0:	add	x25, x25, #0x331
  4317a4:	ldr	x2, [sp, #80]
  4317a8:	ldr	x4, [sp, #48]
  4317ac:	ldr	w5, [sp, #44]
  4317b0:	mov	w21, w26
  4317b4:	and	w3, w26, #0x1
  4317b8:	mov	x0, xzr
  4317bc:	mov	x26, x1
  4317c0:	mov	x1, x25
  4317c4:	bl	431304 <argp_parse@@Base+0x2648>
  4317c8:	bic	w8, w22, w22, asr #31
  4317cc:	cmp	x0, x8
  4317d0:	csel	x19, x8, x0, cc  // cc = lo, ul, last
  4317d4:	mvn	x9, x26
  4317d8:	cmp	x19, x9
  4317dc:	b.cs	43266c <argp_parse@@Base+0x39b0>  // b.hs, b.nlast
  4317e0:	mov	x1, x26
  4317e4:	cbz	x24, 432214 <argp_parse@@Base+0x3558>
  4317e8:	cmp	x0, x8
  4317ec:	b.cs	4321f4 <argp_parse@@Base+0x3538>  // b.hs, b.nlast
  4317f0:	sxtw	x8, w22
  4317f4:	cmp	w20, #0x30
  4317f8:	sub	x20, x8, x0
  4317fc:	b.ne	4321dc <argp_parse@@Base+0x3520>  // b.any
  431800:	cbz	x20, 4321f4 <argp_parse@@Base+0x3538>
  431804:	mov	w0, #0x30                  	// #48
  431808:	mov	x1, x24
  43180c:	bl	404310 <fputc@plt>
  431810:	subs	x20, x20, #0x1
  431814:	b.ne	431804 <argp_parse@@Base+0x2b48>  // b.any
  431818:	b	4321f4 <argp_parse@@Base+0x3538>
  43181c:	cmp	w9, #0x45
  431820:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  431824:	ldr	x11, [sp, #80]
  431828:	mov	w12, #0x2493                	// #9363
  43182c:	movk	w12, #0x9249, lsl #16
  431830:	ldp	w11, w10, [x11, #24]
  431834:	sub	w10, w10, w11
  431838:	b	43187c <argp_parse@@Base+0x2bc0>
  43183c:	cmp	w9, #0x45
  431840:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  431844:	ldr	x11, [sp, #80]
  431848:	mov	w12, #0x2493                	// #9363
  43184c:	movk	w12, #0x9249, lsl #16
  431850:	ldp	w10, w11, [x11, #24]
  431854:	add	w10, w10, #0x6
  431858:	smull	x13, w10, w12
  43185c:	lsr	x13, x13, #32
  431860:	add	w13, w13, w10
  431864:	asr	w14, w13, #2
  431868:	add	w13, w14, w13, lsr #31
  43186c:	lsl	w14, w13, #3
  431870:	sub	w13, w14, w13
  431874:	sub	w10, w13, w10
  431878:	add	w10, w11, w10
  43187c:	add	w10, w10, #0x7
  431880:	smull	x11, w10, w12
  431884:	lsr	x11, x11, #32
  431888:	add	w10, w11, w10
  43188c:	asr	w11, w10, #2
  431890:	add	w10, w11, w10, lsr #31
  431894:	b	431e08 <argp_parse@@Base+0x314c>
  431898:	cmp	w9, #0x4f
  43189c:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  4318a0:	mov	w21, wzr
  4318a4:	mov	w19, wzr
  4318a8:	mov	w8, #0x58                  	// #88
  4318ac:	b	431e28 <argp_parse@@Base+0x316c>
  4318b0:	cmp	w9, #0x45
  4318b4:	b.eq	432224 <argp_parse@@Base+0x3568>  // b.none
  4318b8:	cmp	w9, #0x4f
  4318bc:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  4318c0:	ldr	x8, [sp, #80]
  4318c4:	mov	w12, wzr
  4318c8:	mov	w13, wzr
  4318cc:	mov	w19, #0x4                   	// #4
  4318d0:	ldr	w8, [x8, #20]
  4318d4:	cmn	w8, #0x76c
  4318d8:	add	w10, w8, #0x76c
  4318dc:	cset	w11, lt  // lt = tstop
  4318e0:	b	431ec0 <argp_parse@@Base+0x3204>
  4318e4:	ldr	x0, [sp, #24]
  4318e8:	mov	w21, w26
  4318ec:	mov	x26, x1
  4318f0:	bl	404170 <strlen@plt>
  4318f4:	bic	w8, w22, w22, asr #31
  4318f8:	cmp	x0, x8
  4318fc:	csel	x19, x8, x0, cc  // cc = lo, ul, last
  431900:	mvn	x9, x26
  431904:	cmp	x19, x9
  431908:	b.cs	43266c <argp_parse@@Base+0x39b0>  // b.hs, b.nlast
  43190c:	mov	x1, x26
  431910:	cbz	x24, 432214 <argp_parse@@Base+0x3558>
  431914:	mov	x25, x0
  431918:	cmp	x0, x8
  43191c:	b.cs	432414 <argp_parse@@Base+0x3758>  // b.hs, b.nlast
  431920:	sxtw	x8, w22
  431924:	cmp	w20, #0x30
  431928:	sub	x20, x8, x25
  43192c:	b.ne	4323fc <argp_parse@@Base+0x3740>  // b.any
  431930:	cbz	x20, 432414 <argp_parse@@Base+0x3758>
  431934:	mov	w0, #0x30                  	// #48
  431938:	mov	x1, x24
  43193c:	bl	404310 <fputc@plt>
  431940:	subs	x20, x20, #0x1
  431944:	b.ne	431934 <argp_parse@@Base+0x2c78>  // b.any
  431948:	b	432414 <argp_parse@@Base+0x3758>
  43194c:	cbnz	w9, 4322d4 <argp_parse@@Base+0x3618>
  431950:	mov	w21, wzr
  431954:	mov	w19, wzr
  431958:	orr	w26, w28, w26
  43195c:	mov	w8, #0x61                  	// #97
  431960:	b	431e28 <argp_parse@@Base+0x316c>
  431964:	cmp	w9, #0x4f
  431968:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  43196c:	mov	w21, wzr
  431970:	mov	w19, wzr
  431974:	mov	w8, #0x63                  	// #99
  431978:	b	431e28 <argp_parse@@Base+0x316c>
  43197c:	cmp	w9, #0x45
  431980:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  431984:	ldr	x10, [sp, #80]
  431988:	ldr	w10, [x10, #12]
  43198c:	b	431e08 <argp_parse@@Base+0x314c>
  431990:	cmp	w9, #0x45
  431994:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  431998:	ldr	x10, [sp, #80]
  43199c:	ldr	w10, [x10, #12]
  4319a0:	b	4319e4 <argp_parse@@Base+0x2d28>
  4319a4:	cmp	w9, #0x45
  4319a8:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  4319ac:	ldr	x10, [sp, #80]
  4319b0:	mov	w13, wzr
  4319b4:	mov	w12, wzr
  4319b8:	mov	w19, #0x3                   	// #3
  4319bc:	ldr	w10, [x10, #28]
  4319c0:	b	431a20 <argp_parse@@Base+0x2d64>
  4319c4:	cmp	w9, #0x45
  4319c8:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  4319cc:	ldr	x10, [sp, #80]
  4319d0:	ldr	w10, [x10, #8]
  4319d4:	b	4319e4 <argp_parse@@Base+0x2d28>
  4319d8:	ldr	w10, [sp, #20]
  4319dc:	cmp	w9, #0x45
  4319e0:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  4319e4:	and	w11, w20, #0xff
  4319e8:	cmp	w11, #0x2d
  4319ec:	mov	w19, #0x2                   	// #2
  4319f0:	b.eq	431e0c <argp_parse@@Base+0x3150>  // b.none
  4319f4:	cmp	w11, #0x30
  4319f8:	b.eq	431e0c <argp_parse@@Base+0x3150>  // b.none
  4319fc:	mov	w20, #0x5f                  	// #95
  431a00:	b	431e08 <argp_parse@@Base+0x314c>
  431a04:	cmp	w9, #0x45
  431a08:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  431a0c:	ldr	x10, [sp, #80]
  431a10:	mov	w13, wzr
  431a14:	mov	w12, wzr
  431a18:	mov	w19, #0x2                   	// #2
  431a1c:	ldr	w10, [x10, #16]
  431a20:	cmn	w10, #0x1
  431a24:	add	w10, w10, #0x1
  431a28:	cset	w11, lt  // lt = tstop
  431a2c:	b	431e18 <argp_parse@@Base+0x315c>
  431a30:	bic	w8, w22, w22, asr #31
  431a34:	cmp	w8, #0x1
  431a38:	csinc	w19, w8, wzr, hi  // hi = pmore
  431a3c:	mvn	x9, x1
  431a40:	cmp	x19, x9
  431a44:	b.cs	43266c <argp_parse@@Base+0x39b0>  // b.hs, b.nlast
  431a48:	cbz	x24, 4323b4 <argp_parse@@Base+0x36f8>
  431a4c:	mov	x21, x1
  431a50:	cmp	w8, #0x2
  431a54:	b.cc	432464 <argp_parse@@Base+0x37a8>  // b.lo, b.ul, b.last
  431a58:	sxtw	x8, w22
  431a5c:	cmp	w20, #0x30
  431a60:	sub	x20, x8, #0x1
  431a64:	b.ne	43244c <argp_parse@@Base+0x3790>  // b.any
  431a68:	cbz	x20, 432464 <argp_parse@@Base+0x37a8>
  431a6c:	mov	w0, #0x30                  	// #48
  431a70:	mov	x1, x24
  431a74:	bl	404310 <fputc@plt>
  431a78:	subs	x20, x20, #0x1
  431a7c:	b.ne	431a6c <argp_parse@@Base+0x2db0>  // b.any
  431a80:	b	432464 <argp_parse@@Base+0x37a8>
  431a84:	ldr	x10, [sp, #80]
  431a88:	mov	w14, #0xb                   	// #11
  431a8c:	mov	w13, wzr
  431a90:	mov	w12, wzr
  431a94:	ldr	w10, [x10, #16]
  431a98:	mov	w11, wzr
  431a9c:	mov	w19, #0x1                   	// #1
  431aa0:	mul	w10, w10, w14
  431aa4:	asr	w10, w10, #5
  431aa8:	add	w10, w10, #0x1
  431aac:	b	431e18 <argp_parse@@Base+0x315c>
  431ab0:	ldr	x9, [sp, #80]
  431ab4:	ldr	x0, [sp, #48]
  431ab8:	mov	x21, x1
  431abc:	add	x1, sp, #0x60
  431ac0:	ldr	x8, [x9, #48]
  431ac4:	ldp	q1, q0, [x9, #16]
  431ac8:	ldr	q2, [x9]
  431acc:	str	x8, [sp, #144]
  431ad0:	stp	q1, q0, [sp, #112]
  431ad4:	str	q2, [sp, #96]
  431ad8:	bl	4474c4 <_obstack_memory_used@@Base+0xbccc>
  431adc:	ldr	x28, [sp, #72]
  431ae0:	lsr	x11, x0, #63
  431ae4:	mov	x8, x0
  431ae8:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  431aec:	movk	x9, #0x6667
  431af0:	smulh	x9, x8, x9
  431af4:	asr	x13, x9, #2
  431af8:	mov	w10, #0xa                   	// #10
  431afc:	add	x9, x13, x9, lsr #63
  431b00:	cmp	x0, #0x0
  431b04:	add	x12, x8, #0x9
  431b08:	msub	w8, w9, w10, w8
  431b0c:	cneg	w8, w8, lt  // lt = tstop
  431b10:	add	w8, w8, #0x30
  431b14:	cmp	x12, #0x12
  431b18:	strb	w8, [x28, #-1]!
  431b1c:	mov	x8, x9
  431b20:	b.hi	431ae8 <argp_parse@@Base+0x2e2c>  // b.pmore
  431b24:	cmp	w22, #0x1
  431b28:	mov	w8, wzr
  431b2c:	csinc	w13, w22, wzr, gt
  431b30:	mov	x1, x21
  431b34:	b	431f24 <argp_parse@@Base+0x3268>
  431b38:	bic	w8, w22, w22, asr #31
  431b3c:	cmp	w8, #0x1
  431b40:	csinc	w19, w8, wzr, hi  // hi = pmore
  431b44:	mvn	x9, x1
  431b48:	cmp	x19, x9
  431b4c:	b.cs	43266c <argp_parse@@Base+0x39b0>  // b.hs, b.nlast
  431b50:	cbz	x24, 4323b4 <argp_parse@@Base+0x36f8>
  431b54:	mov	x21, x1
  431b58:	cmp	w8, #0x2
  431b5c:	b.cc	432484 <argp_parse@@Base+0x37c8>  // b.lo, b.ul, b.last
  431b60:	sxtw	x8, w22
  431b64:	cmp	w20, #0x30
  431b68:	sub	x20, x8, #0x1
  431b6c:	b.ne	43246c <argp_parse@@Base+0x37b0>  // b.any
  431b70:	cbz	x20, 432484 <argp_parse@@Base+0x37c8>
  431b74:	mov	w0, #0x30                  	// #48
  431b78:	mov	x1, x24
  431b7c:	bl	404310 <fputc@plt>
  431b80:	subs	x20, x20, #0x1
  431b84:	b.ne	431b74 <argp_parse@@Base+0x2eb8>  // b.any
  431b88:	b	432484 <argp_parse@@Base+0x37c8>
  431b8c:	ldr	x10, [sp, #80]
  431b90:	mov	w11, #0x2493                	// #9363
  431b94:	movk	w11, #0x9249, lsl #16
  431b98:	mov	w19, #0x1                   	// #1
  431b9c:	ldr	w10, [x10, #24]
  431ba0:	add	w10, w10, #0x6
  431ba4:	smull	x11, w10, w11
  431ba8:	lsr	x11, x11, #32
  431bac:	add	w11, w11, w10
  431bb0:	asr	w12, w11, #2
  431bb4:	add	w11, w12, w11, lsr #31
  431bb8:	sub	w11, w11, w11, lsl #3
  431bbc:	add	w10, w10, w11
  431bc0:	add	w10, w10, #0x1
  431bc4:	b	431e0c <argp_parse@@Base+0x3150>
  431bc8:	cmp	w9, #0x45
  431bcc:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  431bd0:	ldr	x10, [sp, #80]
  431bd4:	mov	w19, #0x1                   	// #1
  431bd8:	ldr	w10, [x10, #24]
  431bdc:	b	431e0c <argp_parse@@Base+0x3150>
  431be0:	cmp	w9, #0x4f
  431be4:	b.eq	4322d4 <argp_parse@@Base+0x3618>  // b.none
  431be8:	mov	w21, wzr
  431bec:	mov	w19, wzr
  431bf0:	mov	w8, #0x78                  	// #120
  431bf4:	b	431e28 <argp_parse@@Base+0x316c>
  431bf8:	cmp	w9, #0x45
  431bfc:	b.ne	431d80 <argp_parse@@Base+0x30c4>  // b.any
  431c00:	mov	w21, wzr
  431c04:	mov	w19, wzr
  431c08:	mov	w8, #0x79                  	// #121
  431c0c:	b	431e28 <argp_parse@@Base+0x316c>
  431c10:	cmp	w11, #0x7a
  431c14:	b.ne	4322d4 <argp_parse@@Base+0x3618>  // b.any
  431c18:	add	x23, x23, x10
  431c1c:	ldr	x12, [sp, #80]
  431c20:	ldr	w11, [x12, #32]
  431c24:	tbnz	w11, #31, 432588 <argp_parse@@Base+0x38cc>
  431c28:	ldr	w12, [x12, #40]
  431c2c:	tbnz	w12, #31, 43221c <argp_parse@@Base+0x3560>
  431c30:	cbz	w12, 432234 <argp_parse@@Base+0x3578>
  431c34:	mov	w11, wzr
  431c38:	b	432244 <argp_parse@@Base+0x3588>
  431c3c:	sub	w14, w15, #0x1
  431c40:	tst	w14, #0x3
  431c44:	mov	w13, #0x16d                 	// #365
  431c48:	b.ne	431c84 <argp_parse@@Base+0x2fc8>  // b.any
  431c4c:	mov	w15, #0x5c29                	// #23593
  431c50:	mov	w16, #0xb850                	// #47184
  431c54:	movk	w15, #0xc28f, lsl #16
  431c58:	movk	w16, #0x51e, lsl #16
  431c5c:	mov	w17, #0xd70b                	// #55051
  431c60:	madd	w14, w14, w15, w16
  431c64:	movk	w17, #0xa3, lsl #16
  431c68:	ror	w15, w14, #2
  431c6c:	ror	w14, w14, #4
  431c70:	cmp	w14, w17
  431c74:	mov	w14, #0x5c28                	// #23592
  431c78:	movk	w14, #0x28f, lsl #16
  431c7c:	ccmp	w15, w14, #0x2, cs  // cs = hs, nlast
  431c80:	cinc	w13, w13, hi  // hi = pmore
  431c84:	add	w12, w13, w12
  431c88:	mov	w13, #0x17e                 	// #382
  431c8c:	mov	w14, #0x2493                	// #9363
  431c90:	sub	w10, w13, w10
  431c94:	movk	w14, #0x9249, lsl #16
  431c98:	add	w12, w10, w12
  431c9c:	smull	x13, w12, w14
  431ca0:	lsr	x13, x13, #32
  431ca4:	add	w12, w13, w12
  431ca8:	asr	w13, w12, #2
  431cac:	add	w12, w13, w12, lsr #31
  431cb0:	lsl	w13, w12, #3
  431cb4:	sub	w12, w13, w12
  431cb8:	sub	w10, w12, w10
  431cbc:	add	w10, w10, #0x3
  431cc0:	mov	w14, #0xffffffff            	// #-1
  431cc4:	cmp	w8, #0x47
  431cc8:	b.eq	431dc0 <argp_parse@@Base+0x3104>  // b.none
  431ccc:	cmp	w8, #0x67
  431cd0:	b.ne	431de8 <argp_parse@@Base+0x312c>  // b.any
  431cd4:	mov	w10, #0x851f                	// #34079
  431cd8:	movk	w10, #0x51eb, lsl #16
  431cdc:	smull	x13, w11, w10
  431ce0:	lsr	x15, x13, #63
  431ce4:	asr	x13, x13, #37
  431ce8:	mov	w12, #0x64                  	// #100
  431cec:	add	w13, w13, w15
  431cf0:	msub	w13, w13, w12, w11
  431cf4:	add	w13, w14, w13
  431cf8:	smull	x10, w13, w10
  431cfc:	lsr	x15, x10, #63
  431d00:	asr	x10, x10, #37
  431d04:	add	w10, w10, w15
  431d08:	msub	w10, w10, w12, w13
  431d0c:	tbz	w10, #31, 431e08 <argp_parse@@Base+0x314c>
  431d10:	mov	w12, #0xfffff894            	// #-1900
  431d14:	sub	w12, w12, w14
  431d18:	add	w13, w10, #0x64
  431d1c:	cmp	w11, w12
  431d20:	csneg	w10, w13, w10, ge  // ge = tcont
  431d24:	b	431e08 <argp_parse@@Base+0x314c>
  431d28:	ldr	x10, [sp, #80]
  431d2c:	mov	w11, #0x851f                	// #34079
  431d30:	movk	w11, #0x51eb, lsl #16
  431d34:	mov	w14, #0x64                  	// #100
  431d38:	ldrsw	x10, [x10, #20]
  431d3c:	mov	w13, wzr
  431d40:	mov	w12, wzr
  431d44:	mov	w19, #0x2                   	// #2
  431d48:	mul	x11, x10, x11
  431d4c:	lsr	x15, x11, #63
  431d50:	asr	x11, x11, #37
  431d54:	add	w15, w11, w15
  431d58:	cmn	x10, #0x76c
  431d5c:	msub	w10, w15, w14, w10
  431d60:	cset	w11, lt  // lt = tstop
  431d64:	cset	w14, gt
  431d68:	cmp	w10, #0x0
  431d6c:	cset	w10, lt  // lt = tstop
  431d70:	and	w10, w14, w10
  431d74:	sub	w10, w15, w10
  431d78:	add	w10, w10, #0x13
  431d7c:	b	431e18 <argp_parse@@Base+0x315c>
  431d80:	ldr	x10, [sp, #80]
  431d84:	mov	w11, #0x851f                	// #34079
  431d88:	movk	w11, #0x51eb, lsl #16
  431d8c:	mov	w12, #0x64                  	// #100
  431d90:	ldrsw	x10, [x10, #20]
  431d94:	mul	x11, x10, x11
  431d98:	lsr	x13, x11, #63
  431d9c:	asr	x11, x11, #37
  431da0:	add	w11, w11, w13
  431da4:	cmn	w10, #0x76c
  431da8:	msub	w10, w11, w12, w10
  431dac:	add	w11, w10, #0x64
  431db0:	csneg	w11, w11, w10, ge  // ge = tcont
  431db4:	cmp	w10, #0x0
  431db8:	csel	w10, w11, w10, lt  // lt = tstop
  431dbc:	b	431e08 <argp_parse@@Base+0x314c>
  431dc0:	mov	w10, #0xfffff894            	// #-1900
  431dc4:	add	w15, w11, w14
  431dc8:	sub	w14, w10, w14
  431dcc:	cmp	w11, w14
  431dd0:	mov	w13, wzr
  431dd4:	mov	w12, wzr
  431dd8:	add	w10, w15, #0x76c
  431ddc:	cset	w11, lt  // lt = tstop
  431de0:	mov	w19, #0x4                   	// #4
  431de4:	b	431e18 <argp_parse@@Base+0x315c>
  431de8:	mov	w11, #0x2493                	// #9363
  431dec:	movk	w11, #0x9249, lsl #16
  431df0:	smull	x11, w10, w11
  431df4:	lsr	x11, x11, #32
  431df8:	add	w10, w11, w10
  431dfc:	asr	w11, w10, #2
  431e00:	add	w10, w11, w10, lsr #31
  431e04:	add	w10, w10, #0x1
  431e08:	mov	w19, #0x2                   	// #2
  431e0c:	mov	w13, wzr
  431e10:	mov	w12, wzr
  431e14:	lsr	w11, w10, #31
  431e18:	cmp	w9, #0x4f
  431e1c:	b.ne	431ec0 <argp_parse@@Base+0x3204>  // b.any
  431e20:	cbnz	w11, 431ec0 <argp_parse@@Base+0x3204>
  431e24:	mov	w21, wzr
  431e28:	mov	w10, #0x2520                	// #9504
  431e2c:	sturh	w10, [x29, #-40]
  431e30:	ldr	x10, [sp, #64]
  431e34:	mov	x27, x1
  431e38:	cbz	w9, 431e44 <argp_parse@@Base+0x3188>
  431e3c:	ldr	x10, [sp, #56]
  431e40:	sturb	w9, [x29, #-38]
  431e44:	ldr	x3, [sp, #80]
  431e48:	add	x0, sp, #0x60
  431e4c:	sub	x2, x29, #0x28
  431e50:	mov	w1, #0x400                 	// #1024
  431e54:	strb	w8, [x10]
  431e58:	strb	wzr, [x10, #1]
  431e5c:	bl	4042f0 <strftime@plt>
  431e60:	cbz	x0, 431fa8 <argp_parse@@Base+0x32ec>
  431e64:	sub	x25, x0, #0x1
  431e68:	bic	w8, w22, w22, asr #31
  431e6c:	cmp	x25, x8
  431e70:	csel	x28, x8, x25, cc  // cc = lo, ul, last
  431e74:	mvn	x9, x27
  431e78:	cmp	x28, x9
  431e7c:	b.cs	43266c <argp_parse@@Base+0x39b0>  // b.hs, b.nlast
  431e80:	mov	x1, x27
  431e84:	cbz	x24, 43215c <argp_parse@@Base+0x34a0>
  431e88:	cbnz	w19, 432114 <argp_parse@@Base+0x3458>
  431e8c:	cmp	x25, x8
  431e90:	b.cs	432114 <argp_parse@@Base+0x3458>  // b.hs, b.nlast
  431e94:	sxtw	x8, w22
  431e98:	cmp	w20, #0x30
  431e9c:	sub	x19, x8, x25
  431ea0:	b.ne	4320fc <argp_parse@@Base+0x3440>  // b.any
  431ea4:	cbz	x19, 432114 <argp_parse@@Base+0x3458>
  431ea8:	mov	w0, #0x30                  	// #48
  431eac:	mov	x1, x24
  431eb0:	bl	404310 <fputc@plt>
  431eb4:	subs	x19, x19, #0x1
  431eb8:	b.ne	431ea8 <argp_parse@@Base+0x31ec>  // b.any
  431ebc:	b	432114 <argp_parse@@Base+0x3458>
  431ec0:	ldr	x28, [sp, #72]
  431ec4:	cmp	w11, #0x0
  431ec8:	cneg	w8, w10, ne  // ne = any
  431ecc:	tbz	w13, #0, 431ed8 <argp_parse@@Base+0x321c>
  431ed0:	mov	w9, #0x3a                  	// #58
  431ed4:	strb	w9, [x28, #-1]!
  431ed8:	mov	w9, #0xcccd                	// #52429
  431edc:	movk	w9, #0xcccc, lsl #16
  431ee0:	umull	x9, w8, w9
  431ee4:	mov	w10, #0xa                   	// #10
  431ee8:	lsr	x9, x9, #35
  431eec:	msub	w10, w9, w10, w8
  431ef0:	orr	w10, w10, #0x30
  431ef4:	asr	w13, w13, #1
  431ef8:	cmp	w8, #0x9
  431efc:	strb	w10, [x28, #-1]!
  431f00:	mov	w8, w9
  431f04:	b.hi	431ecc <argp_parse@@Base+0x3210>  // b.pmore
  431f08:	mov	w8, w9
  431f0c:	cbnz	w13, 431ecc <argp_parse@@Base+0x3210>
  431f10:	cmp	w19, w22
  431f14:	csel	w13, w22, w19, lt  // lt = tstop
  431f18:	cmp	w12, #0x0
  431f1c:	mov	w8, #0x2b                  	// #43
  431f20:	csel	w8, w8, wzr, ne  // ne = any
  431f24:	cmp	w11, #0x0
  431f28:	mov	w9, #0x2d                  	// #45
  431f2c:	csel	w25, w9, w8, ne  // ne = any
  431f30:	cmp	w20, #0x2d
  431f34:	str	w26, [sp, #40]
  431f38:	b.ne	431fb0 <argp_parse@@Base+0x32f4>  // b.any
  431f3c:	cbz	w25, 4324d4 <argp_parse@@Base+0x3818>
  431f40:	bic	w8, w22, w22, asr #31
  431f44:	cmp	w8, #0x1
  431f48:	csinc	w19, w8, wzr, hi  // hi = pmore
  431f4c:	mvn	x9, x1
  431f50:	cmp	x19, x9
  431f54:	b.cs	43266c <argp_parse@@Base+0x39b0>  // b.hs, b.nlast
  431f58:	cbz	x24, 432094 <argp_parse@@Base+0x33d8>
  431f5c:	mov	x26, x13
  431f60:	str	x1, [sp, #8]
  431f64:	cbnz	w13, 431f90 <argp_parse@@Base+0x32d4>
  431f68:	cmp	w8, #0x2
  431f6c:	b.cc	431f90 <argp_parse@@Base+0x32d4>  // b.lo, b.ul, b.last
  431f70:	sxtw	x8, w22
  431f74:	subs	x21, x8, #0x1
  431f78:	b.eq	431f90 <argp_parse@@Base+0x32d4>  // b.none
  431f7c:	mov	w0, #0x20                  	// #32
  431f80:	mov	x1, x24
  431f84:	bl	404310 <fputc@plt>
  431f88:	subs	x21, x21, #0x1
  431f8c:	b.ne	431f7c <argp_parse@@Base+0x32c0>  // b.any
  431f90:	mov	w0, w25
  431f94:	mov	x1, x24
  431f98:	bl	404310 <fputc@plt>
  431f9c:	ldr	x1, [sp, #8]
  431fa0:	mov	x13, x26
  431fa4:	b	432094 <argp_parse@@Base+0x33d8>
  431fa8:	mov	x1, x27
  431fac:	b	432160 <argp_parse@@Base+0x34a4>
  431fb0:	ldr	x10, [sp, #72]
  431fb4:	sxtw	x8, w13
  431fb8:	cmp	w25, #0x0
  431fbc:	cset	w9, ne  // ne = any
  431fc0:	sub	x10, x8, x10
  431fc4:	add	x10, x10, x28
  431fc8:	sub	x21, x10, x9
  431fcc:	cmp	w21, #0x1
  431fd0:	b.lt	43209c <argp_parse@@Base+0x33e0>  // b.tstop
  431fd4:	cmp	w20, #0x5f
  431fd8:	b.ne	43216c <argp_parse@@Base+0x34b0>  // b.any
  431fdc:	sxtw	x19, w21
  431fe0:	mvn	x8, x1
  431fe4:	cmp	x19, x8
  431fe8:	b.cs	43266c <argp_parse@@Base+0x39b0>  // b.hs, b.nlast
  431fec:	mov	x26, x1
  431ff0:	str	w25, [sp, #4]
  431ff4:	str	x13, [sp, #8]
  431ff8:	cbz	x24, 43201c <argp_parse@@Base+0x3360>
  431ffc:	lsl	x8, x21, #32
  432000:	cbz	x8, 43201c <argp_parse@@Base+0x3360>
  432004:	sxtw	x25, w21
  432008:	mov	w0, #0x20                  	// #32
  43200c:	mov	x1, x24
  432010:	bl	404310 <fputc@plt>
  432014:	subs	x25, x25, #0x1
  432018:	b.ne	432008 <argp_parse@@Base+0x334c>  // b.any
  43201c:	mov	x1, x26
  432020:	add	x1, x19, x26
  432024:	ldr	w26, [sp, #4]
  432028:	subs	w8, w22, w21
  43202c:	csel	w22, w8, wzr, gt
  432030:	cbz	w26, 4321d4 <argp_parse@@Base+0x3518>
  432034:	ldr	x13, [sp, #8]
  432038:	cmp	w22, #0x1
  43203c:	csinc	w19, w22, wzr, hi  // hi = pmore
  432040:	mvn	x8, x1
  432044:	cmp	x19, x8
  432048:	b.cs	43266c <argp_parse@@Base+0x39b0>  // b.hs, b.nlast
  43204c:	cbz	x24, 432094 <argp_parse@@Base+0x33d8>
  432050:	mov	x25, x1
  432054:	cbnz	w13, 432080 <argp_parse@@Base+0x33c4>
  432058:	cmp	w22, #0x2
  43205c:	b.cc	432080 <argp_parse@@Base+0x33c4>  // b.lo, b.ul, b.last
  432060:	mov	w8, w22
  432064:	subs	x21, x8, #0x1
  432068:	b.eq	432080 <argp_parse@@Base+0x33c4>  // b.none
  43206c:	mov	w0, #0x20                  	// #32
  432070:	mov	x1, x24
  432074:	bl	404310 <fputc@plt>
  432078:	subs	x21, x21, #0x1
  43207c:	b.ne	43206c <argp_parse@@Base+0x33b0>  // b.any
  432080:	mov	w0, w26
  432084:	mov	x1, x24
  432088:	bl	404310 <fputc@plt>
  43208c:	ldr	x13, [sp, #8]
  432090:	mov	x1, x25
  432094:	add	x1, x1, x19
  432098:	b	4324d4 <argp_parse@@Base+0x3818>
  43209c:	cbz	w25, 4324d4 <argp_parse@@Base+0x3818>
  4320a0:	bic	w8, w22, w22, asr #31
  4320a4:	cmp	w8, #0x1
  4320a8:	csinc	w21, w8, wzr, hi  // hi = pmore
  4320ac:	mvn	x9, x1
  4320b0:	cmp	x21, x9
  4320b4:	b.cs	43266c <argp_parse@@Base+0x39b0>  // b.hs, b.nlast
  4320b8:	cbz	x24, 4324d0 <argp_parse@@Base+0x3814>
  4320bc:	mov	x26, x13
  4320c0:	str	x1, [sp, #8]
  4320c4:	cbnz	w13, 4324bc <argp_parse@@Base+0x3800>
  4320c8:	cmp	w8, #0x2
  4320cc:	b.cc	4324bc <argp_parse@@Base+0x3800>  // b.lo, b.ul, b.last
  4320d0:	sxtw	x8, w22
  4320d4:	cmp	w20, #0x30
  4320d8:	sub	x19, x8, #0x1
  4320dc:	b.ne	4324a4 <argp_parse@@Base+0x37e8>  // b.any
  4320e0:	cbz	x19, 4324bc <argp_parse@@Base+0x3800>
  4320e4:	mov	w0, #0x30                  	// #48
  4320e8:	mov	x1, x24
  4320ec:	bl	404310 <fputc@plt>
  4320f0:	subs	x19, x19, #0x1
  4320f4:	b.ne	4320e4 <argp_parse@@Base+0x3428>  // b.any
  4320f8:	b	4324bc <argp_parse@@Base+0x3800>
  4320fc:	cbz	x19, 432114 <argp_parse@@Base+0x3458>
  432100:	mov	w0, #0x20                  	// #32
  432104:	mov	x1, x24
  432108:	bl	404310 <fputc@plt>
  43210c:	subs	x19, x19, #0x1
  432110:	b.ne	432100 <argp_parse@@Base+0x3444>  // b.any
  432114:	tbz	w21, #0, 43212c <argp_parse@@Base+0x3470>
  432118:	ldr	x1, [sp, #32]
  43211c:	mov	x0, x24
  432120:	mov	x2, x25
  432124:	bl	432694 <argp_parse@@Base+0x39d8>
  432128:	b	432158 <argp_parse@@Base+0x349c>
  43212c:	tbz	w26, #0, 432144 <argp_parse@@Base+0x3488>
  432130:	ldr	x1, [sp, #32]
  432134:	mov	x0, x24
  432138:	mov	x2, x25
  43213c:	bl	4326e8 <argp_parse@@Base+0x3a2c>
  432140:	b	432158 <argp_parse@@Base+0x349c>
  432144:	ldr	x0, [sp, #32]
  432148:	mov	w2, #0x1                   	// #1
  43214c:	mov	x1, x25
  432150:	mov	x3, x24
  432154:	bl	404a90 <fwrite@plt>
  432158:	mov	x1, x27
  43215c:	add	x1, x28, x1
  432160:	mov	w27, #0xcccc                	// #52428
  432164:	movk	w27, #0xccc, lsl #16
  432168:	b	432588 <argp_parse@@Base+0x38cc>
  43216c:	mvn	x9, x1
  432170:	cmp	x8, x9
  432174:	b.cs	43266c <argp_parse@@Base+0x39b0>  // b.hs, b.nlast
  432178:	cbz	w25, 4325c4 <argp_parse@@Base+0x3908>
  43217c:	bic	w8, w22, w22, asr #31
  432180:	cmp	w8, #0x1
  432184:	csinc	w19, w8, wzr, hi  // hi = pmore
  432188:	cmp	x19, x9
  43218c:	b.cs	43266c <argp_parse@@Base+0x39b0>  // b.hs, b.nlast
  432190:	cbz	x24, 4325c0 <argp_parse@@Base+0x3904>
  432194:	mov	x26, x13
  432198:	str	x1, [sp, #8]
  43219c:	cbnz	w13, 4325ac <argp_parse@@Base+0x38f0>
  4321a0:	cmp	w8, #0x2
  4321a4:	b.cc	4325ac <argp_parse@@Base+0x38f0>  // b.lo, b.ul, b.last
  4321a8:	sxtw	x8, w22
  4321ac:	cmp	w20, #0x30
  4321b0:	sub	x22, x8, #0x1
  4321b4:	b.ne	432594 <argp_parse@@Base+0x38d8>  // b.any
  4321b8:	cbz	x22, 4325ac <argp_parse@@Base+0x38f0>
  4321bc:	mov	w0, #0x30                  	// #48
  4321c0:	mov	x1, x24
  4321c4:	bl	404310 <fputc@plt>
  4321c8:	subs	x22, x22, #0x1
  4321cc:	b.ne	4321bc <argp_parse@@Base+0x3500>  // b.any
  4321d0:	b	4325ac <argp_parse@@Base+0x38f0>
  4321d4:	ldr	x13, [sp, #8]
  4321d8:	b	4324d4 <argp_parse@@Base+0x3818>
  4321dc:	cbz	x20, 4321f4 <argp_parse@@Base+0x3538>
  4321e0:	mov	w0, #0x20                  	// #32
  4321e4:	mov	x1, x24
  4321e8:	bl	404310 <fputc@plt>
  4321ec:	subs	x20, x20, #0x1
  4321f0:	b.ne	4321e0 <argp_parse@@Base+0x3524>  // b.any
  4321f4:	ldr	x2, [sp, #80]
  4321f8:	ldr	x4, [sp, #48]
  4321fc:	ldr	w5, [sp, #44]
  432200:	and	w3, w21, #0x1
  432204:	mov	x0, x24
  432208:	mov	x1, x25
  43220c:	bl	431304 <argp_parse@@Base+0x2648>
  432210:	mov	x1, x26
  432214:	add	x1, x19, x1
  432218:	b	432588 <argp_parse@@Base+0x38cc>
  43221c:	mov	w11, #0x1                   	// #1
  432220:	b	432244 <argp_parse@@Base+0x3588>
  432224:	mov	w21, wzr
  432228:	mov	w19, wzr
  43222c:	mov	w8, #0x59                  	// #89
  432230:	b	431e28 <argp_parse@@Base+0x316c>
  432234:	ldr	x11, [sp, #24]
  432238:	ldrb	w11, [x11]
  43223c:	cmp	w11, #0x2d
  432240:	cset	w11, eq  // eq = none
  432244:	cmp	x10, #0x3
  432248:	b.hi	4322d4 <argp_parse@@Base+0x3618>  // b.pmore
  43224c:	mov	w13, #0x8889                	// #34953
  432250:	movk	w13, #0x8888, lsl #16
  432254:	adrp	x15, 453000 <_obstack_memory_used@@Base+0x17808>
  432258:	add	x15, x15, #0x4d0
  43225c:	smull	x16, w12, w13
  432260:	adr	x17, 4322bc <argp_parse@@Base+0x3600>
  432264:	ldrb	w18, [x15, x10]
  432268:	add	x17, x17, x18, lsl #2
  43226c:	lsr	x10, x16, #32
  432270:	mov	w14, #0xb3c5                	// #46021
  432274:	add	w10, w10, w12
  432278:	movk	w14, #0x91a2, lsl #16
  43227c:	asr	w15, w10, #5
  432280:	smull	x14, w12, w14
  432284:	add	w15, w15, w10, lsr #31
  432288:	lsr	x14, x14, #32
  43228c:	smull	x13, w15, w13
  432290:	add	w14, w14, w12
  432294:	lsr	x13, x13, #32
  432298:	asr	w10, w14, #11
  43229c:	add	w13, w13, w15
  4322a0:	add	w10, w10, w14, lsr #31
  4322a4:	asr	w14, w13, #5
  4322a8:	add	w13, w14, w13, lsr #31
  4322ac:	mov	w16, #0x3c                  	// #60
  4322b0:	msub	w14, w13, w16, w15
  4322b4:	msub	w13, w15, w16, w12
  4322b8:	br	x17
  4322bc:	mov	w12, #0x64                  	// #100
  4322c0:	mov	w13, wzr
  4322c4:	mov	w19, #0x5                   	// #5
  4322c8:	madd	w10, w10, w12, w14
  4322cc:	mov	w12, #0x1                   	// #1
  4322d0:	b	431e18 <argp_parse@@Base+0x315c>
  4322d4:	mov	x9, xzr
  4322d8:	mov	x8, x9
  4322dc:	ldrb	w9, [x23, x9]
  4322e0:	cmp	w9, #0x25
  4322e4:	sub	x9, x8, #0x1
  4322e8:	b.ne	4322d8 <argp_parse@@Base+0x361c>  // b.any
  4322ec:	neg	x10, x9
  4322f0:	bic	w11, w22, w22, asr #31
  4322f4:	cmp	w11, w10
  4322f8:	csel	w19, w10, w11, cc  // cc = lo, ul, last
  4322fc:	mvn	x12, x1
  432300:	cmp	x19, x12
  432304:	b.cs	43266c <argp_parse@@Base+0x39b0>  // b.hs, b.nlast
  432308:	cbz	x24, 4323b4 <argp_parse@@Base+0x36f8>
  43230c:	mov	x27, x1
  432310:	add	x21, x23, x9
  432314:	cmp	w11, w10
  432318:	and	x25, x10, #0xffffffff
  43231c:	b.ls	43237c <argp_parse@@Base+0x36c0>  // b.plast
  432320:	sxtw	x9, w22
  432324:	cmp	w20, #0x30
  432328:	sub	x10, x9, x25
  43232c:	b.ne	432358 <argp_parse@@Base+0x369c>  // b.any
  432330:	cbz	x10, 43237c <argp_parse@@Base+0x36c0>
  432334:	mov	w10, #0x1                   	// #1
  432338:	sub	w8, w10, w8
  43233c:	sub	x20, x9, x8
  432340:	mov	w0, #0x30                  	// #48
  432344:	mov	x1, x24
  432348:	bl	404310 <fputc@plt>
  43234c:	subs	x20, x20, #0x1
  432350:	b.ne	432340 <argp_parse@@Base+0x3684>  // b.any
  432354:	b	43237c <argp_parse@@Base+0x36c0>
  432358:	cbz	x10, 43237c <argp_parse@@Base+0x36c0>
  43235c:	mov	w10, #0x1                   	// #1
  432360:	sub	w8, w10, w8
  432364:	sub	x20, x9, x8
  432368:	mov	w0, #0x20                  	// #32
  43236c:	mov	x1, x24
  432370:	bl	404310 <fputc@plt>
  432374:	subs	x20, x20, #0x1
  432378:	b.ne	432368 <argp_parse@@Base+0x36ac>  // b.any
  43237c:	add	x1, x21, #0x1
  432380:	tbz	w26, #0, 432394 <argp_parse@@Base+0x36d8>
  432384:	mov	x0, x24
  432388:	mov	x2, x25
  43238c:	bl	4326e8 <argp_parse@@Base+0x3a2c>
  432390:	b	4323a8 <argp_parse@@Base+0x36ec>
  432394:	mov	w2, #0x1                   	// #1
  432398:	mov	x0, x1
  43239c:	mov	x1, x25
  4323a0:	mov	x3, x24
  4323a4:	bl	404a90 <fwrite@plt>
  4323a8:	mov	x1, x27
  4323ac:	mov	w27, #0xcccc                	// #52428
  4323b0:	movk	w27, #0xccc, lsl #16
  4323b4:	add	x1, x1, x19
  4323b8:	b	432588 <argp_parse@@Base+0x38cc>
  4323bc:	ldr	w10, [sp, #44]
  4323c0:	mov	w22, #0x9                   	// #9
  4323c4:	mov	w19, #0x9                   	// #9
  4323c8:	b	431e0c <argp_parse@@Base+0x3150>
  4323cc:	cbz	w13, 432618 <argp_parse@@Base+0x395c>
  4323d0:	mov	w15, #0x2710                	// #10000
  4323d4:	mov	w16, #0x64                  	// #100
  4323d8:	madd	w10, w10, w15, w13
  4323dc:	mov	w19, #0x9                   	// #9
  4323e0:	mov	w12, #0x1                   	// #1
  4323e4:	madd	w10, w14, w16, w10
  4323e8:	mov	w13, #0x14                  	// #20
  4323ec:	b	431e18 <argp_parse@@Base+0x315c>
  4323f0:	ldr	w10, [sp, #44]
  4323f4:	mov	w19, w22
  4323f8:	b	431e0c <argp_parse@@Base+0x3150>
  4323fc:	cbz	x20, 432414 <argp_parse@@Base+0x3758>
  432400:	mov	w0, #0x20                  	// #32
  432404:	mov	x1, x24
  432408:	bl	404310 <fputc@plt>
  43240c:	subs	x20, x20, #0x1
  432410:	b.ne	432400 <argp_parse@@Base+0x3744>  // b.any
  432414:	tbz	w28, #0, 43242c <argp_parse@@Base+0x3770>
  432418:	ldr	x1, [sp, #24]
  43241c:	mov	x0, x24
  432420:	mov	x2, x25
  432424:	bl	432694 <argp_parse@@Base+0x39d8>
  432428:	b	432210 <argp_parse@@Base+0x3554>
  43242c:	eor	w8, w28, #0x1
  432430:	and	w8, w21, w8
  432434:	tbz	w8, #0, 43248c <argp_parse@@Base+0x37d0>
  432438:	ldr	x1, [sp, #24]
  43243c:	mov	x0, x24
  432440:	mov	x2, x25
  432444:	bl	4326e8 <argp_parse@@Base+0x3a2c>
  432448:	b	432210 <argp_parse@@Base+0x3554>
  43244c:	cbz	x20, 432464 <argp_parse@@Base+0x37a8>
  432450:	mov	w0, #0x20                  	// #32
  432454:	mov	x1, x24
  432458:	bl	404310 <fputc@plt>
  43245c:	subs	x20, x20, #0x1
  432460:	b.ne	432450 <argp_parse@@Base+0x3794>  // b.any
  432464:	mov	w0, #0xa                   	// #10
  432468:	b	432650 <argp_parse@@Base+0x3994>
  43246c:	cbz	x20, 432484 <argp_parse@@Base+0x37c8>
  432470:	mov	w0, #0x20                  	// #32
  432474:	mov	x1, x24
  432478:	bl	404310 <fputc@plt>
  43247c:	subs	x20, x20, #0x1
  432480:	b.ne	432470 <argp_parse@@Base+0x37b4>  // b.any
  432484:	mov	w0, #0x9                   	// #9
  432488:	b	432650 <argp_parse@@Base+0x3994>
  43248c:	ldr	x0, [sp, #24]
  432490:	mov	w2, #0x1                   	// #1
  432494:	mov	x1, x25
  432498:	mov	x3, x24
  43249c:	bl	404a90 <fwrite@plt>
  4324a0:	b	432210 <argp_parse@@Base+0x3554>
  4324a4:	cbz	x19, 4324bc <argp_parse@@Base+0x3800>
  4324a8:	mov	w0, #0x20                  	// #32
  4324ac:	mov	x1, x24
  4324b0:	bl	404310 <fputc@plt>
  4324b4:	subs	x19, x19, #0x1
  4324b8:	b.ne	4324a8 <argp_parse@@Base+0x37ec>  // b.any
  4324bc:	mov	w0, w25
  4324c0:	mov	x1, x24
  4324c4:	bl	404310 <fputc@plt>
  4324c8:	ldr	x1, [sp, #8]
  4324cc:	mov	x13, x26
  4324d0:	add	x1, x1, x21
  4324d4:	bic	w8, w22, w22, asr #31
  4324d8:	ldr	x9, [sp, #72]
  4324dc:	sub	x25, x9, x28
  4324e0:	mov	w9, w8
  4324e4:	cmp	x25, w8, uxtw
  4324e8:	csel	x21, x9, x25, cc  // cc = lo, ul, last
  4324ec:	mvn	x8, x1
  4324f0:	cmp	x21, x8
  4324f4:	b.cs	43266c <argp_parse@@Base+0x39b0>  // b.hs, b.nlast
  4324f8:	cbz	x24, 432584 <argp_parse@@Base+0x38c8>
  4324fc:	mov	x26, x1
  432500:	cbnz	w13, 432550 <argp_parse@@Base+0x3894>
  432504:	cmp	x25, x9
  432508:	b.cs	432550 <argp_parse@@Base+0x3894>  // b.hs, b.nlast
  43250c:	sxtw	x8, w22
  432510:	cmp	w20, #0x30
  432514:	sub	x19, x8, x25
  432518:	b.ne	432538 <argp_parse@@Base+0x387c>  // b.any
  43251c:	cbz	x19, 432550 <argp_parse@@Base+0x3894>
  432520:	mov	w0, #0x30                  	// #48
  432524:	mov	x1, x24
  432528:	bl	404310 <fputc@plt>
  43252c:	subs	x19, x19, #0x1
  432530:	b.ne	432520 <argp_parse@@Base+0x3864>  // b.any
  432534:	b	432550 <argp_parse@@Base+0x3894>
  432538:	cbz	x19, 432550 <argp_parse@@Base+0x3894>
  43253c:	mov	w0, #0x20                  	// #32
  432540:	mov	x1, x24
  432544:	bl	404310 <fputc@plt>
  432548:	subs	x19, x19, #0x1
  43254c:	b.ne	43253c <argp_parse@@Base+0x3880>  // b.any
  432550:	ldr	w8, [sp, #40]
  432554:	tbz	w8, #0, 43256c <argp_parse@@Base+0x38b0>
  432558:	mov	x0, x24
  43255c:	mov	x1, x28
  432560:	mov	x2, x25
  432564:	bl	4326e8 <argp_parse@@Base+0x3a2c>
  432568:	b	432580 <argp_parse@@Base+0x38c4>
  43256c:	mov	w2, #0x1                   	// #1
  432570:	mov	x0, x28
  432574:	mov	x1, x25
  432578:	mov	x3, x24
  43257c:	bl	404a90 <fwrite@plt>
  432580:	mov	x1, x26
  432584:	add	x1, x21, x1
  432588:	ldrb	w8, [x23, #1]!
  43258c:	cbnz	w8, 4313a8 <argp_parse@@Base+0x26ec>
  432590:	b	432670 <argp_parse@@Base+0x39b4>
  432594:	cbz	x22, 4325ac <argp_parse@@Base+0x38f0>
  432598:	mov	w0, #0x20                  	// #32
  43259c:	mov	x1, x24
  4325a0:	bl	404310 <fputc@plt>
  4325a4:	subs	x22, x22, #0x1
  4325a8:	b.ne	432598 <argp_parse@@Base+0x38dc>  // b.any
  4325ac:	mov	w0, w25
  4325b0:	mov	x1, x24
  4325b4:	bl	404310 <fputc@plt>
  4325b8:	ldr	x1, [sp, #8]
  4325bc:	mov	x13, x26
  4325c0:	add	x1, x1, x19
  4325c4:	sxtw	x19, w21
  4325c8:	cbz	x24, 432608 <argp_parse@@Base+0x394c>
  4325cc:	lsl	x8, x21, #32
  4325d0:	cbz	x8, 432604 <argp_parse@@Base+0x3948>
  4325d4:	mov	x25, x13
  4325d8:	mov	x22, x1
  4325dc:	mov	x21, xzr
  4325e0:	mov	w0, #0x30                  	// #48
  4325e4:	mov	x1, x24
  4325e8:	bl	404310 <fputc@plt>
  4325ec:	add	x21, x21, #0x1
  4325f0:	cmp	x21, x19
  4325f4:	b.cc	4325e0 <argp_parse@@Base+0x3924>  // b.lo, b.ul, b.last
  4325f8:	mov	x1, x22
  4325fc:	mov	x13, x25
  432600:	b	432608 <argp_parse@@Base+0x394c>
  432604:	mov	x19, xzr
  432608:	mov	w22, wzr
  43260c:	mov	w8, wzr
  432610:	add	x1, x1, x19
  432614:	b	4324d8 <argp_parse@@Base+0x381c>
  432618:	cbz	w14, 432660 <argp_parse@@Base+0x39a4>
  43261c:	mov	w13, #0x64                  	// #100
  432620:	mov	w19, #0x6                   	// #6
  432624:	mov	w12, #0x1                   	// #1
  432628:	madd	w10, w10, w13, w14
  43262c:	mov	w13, #0x4                   	// #4
  432630:	b	431e18 <argp_parse@@Base+0x315c>
  432634:	cbz	x20, 43264c <argp_parse@@Base+0x3990>
  432638:	mov	w0, #0x20                  	// #32
  43263c:	mov	x1, x24
  432640:	bl	404310 <fputc@plt>
  432644:	subs	x20, x20, #0x1
  432648:	b.ne	432638 <argp_parse@@Base+0x397c>  // b.any
  43264c:	ldrb	w0, [x23]
  432650:	mov	x1, x24
  432654:	bl	404310 <fputc@plt>
  432658:	mov	x1, x21
  43265c:	b	4323b4 <argp_parse@@Base+0x36f8>
  432660:	mov	w13, wzr
  432664:	mov	w19, #0x3                   	// #3
  432668:	b	4322cc <argp_parse@@Base+0x3610>
  43266c:	mov	x1, xzr
  432670:	mov	x0, x1
  432674:	add	sp, sp, #0x490
  432678:	ldp	x20, x19, [sp, #80]
  43267c:	ldp	x22, x21, [sp, #64]
  432680:	ldp	x24, x23, [sp, #48]
  432684:	ldp	x26, x25, [sp, #32]
  432688:	ldp	x28, x27, [sp, #16]
  43268c:	ldp	x29, x30, [sp], #96
  432690:	ret
  432694:	stp	x29, x30, [sp, #-48]!
  432698:	stp	x22, x21, [sp, #16]
  43269c:	stp	x20, x19, [sp, #32]
  4326a0:	mov	x29, sp
  4326a4:	cbz	x2, 4326d8 <argp_parse@@Base+0x3a1c>
  4326a8:	mov	x19, x2
  4326ac:	mov	x20, x1
  4326b0:	mov	x21, x0
  4326b4:	bl	404390 <__ctype_tolower_loc@plt>
  4326b8:	mov	x22, x0
  4326bc:	ldr	x8, [x22]
  4326c0:	ldrb	w9, [x20], #1
  4326c4:	mov	x1, x21
  4326c8:	sub	x19, x19, #0x1
  4326cc:	ldr	w0, [x8, x9, lsl #2]
  4326d0:	bl	404310 <fputc@plt>
  4326d4:	cbnz	x19, 4326bc <argp_parse@@Base+0x3a00>
  4326d8:	ldp	x20, x19, [sp, #32]
  4326dc:	ldp	x22, x21, [sp, #16]
  4326e0:	ldp	x29, x30, [sp], #48
  4326e4:	ret
  4326e8:	stp	x29, x30, [sp, #-48]!
  4326ec:	stp	x22, x21, [sp, #16]
  4326f0:	stp	x20, x19, [sp, #32]
  4326f4:	mov	x29, sp
  4326f8:	cbz	x2, 43272c <argp_parse@@Base+0x3a70>
  4326fc:	mov	x19, x2
  432700:	mov	x20, x1
  432704:	mov	x21, x0
  432708:	bl	404720 <__ctype_toupper_loc@plt>
  43270c:	mov	x22, x0
  432710:	ldr	x8, [x22]
  432714:	ldrb	w9, [x20], #1
  432718:	mov	x1, x21
  43271c:	sub	x19, x19, #0x1
  432720:	ldr	w0, [x8, x9, lsl #2]
  432724:	bl	404310 <fputc@plt>
  432728:	cbnz	x19, 432710 <argp_parse@@Base+0x3a54>
  43272c:	ldp	x20, x19, [sp, #32]
  432730:	ldp	x22, x21, [sp, #16]
  432734:	ldp	x29, x30, [sp], #48
  432738:	ret
  43273c:	stp	x29, x30, [sp, #-48]!
  432740:	stp	x22, x21, [sp, #16]
  432744:	stp	x20, x19, [sp, #32]
  432748:	mov	x29, sp
  43274c:	cbz	x2, 432790 <argp_parse@@Base+0x3ad4>
  432750:	mov	x20, x2
  432754:	mov	x21, x1
  432758:	mov	w22, w0
  43275c:	mov	x19, xzr
  432760:	mov	w0, w22
  432764:	mov	x1, x21
  432768:	mov	x2, x20
  43276c:	bl	439e50 <argp_parse@@Base+0xb194>
  432770:	cmn	x0, #0x1
  432774:	b.eq	4327a4 <argp_parse@@Base+0x3ae8>  // b.none
  432778:	cbz	x0, 432798 <argp_parse@@Base+0x3adc>
  43277c:	add	x19, x0, x19
  432780:	subs	x20, x20, x0
  432784:	add	x21, x21, x0
  432788:	b.ne	432760 <argp_parse@@Base+0x3aa4>  // b.any
  43278c:	b	4327a4 <argp_parse@@Base+0x3ae8>
  432790:	mov	x19, xzr
  432794:	b	4327a4 <argp_parse@@Base+0x3ae8>
  432798:	bl	404ce0 <__errno_location@plt>
  43279c:	mov	w8, #0x1c                  	// #28
  4327a0:	str	w8, [x0]
  4327a4:	mov	x0, x19
  4327a8:	ldp	x20, x19, [sp, #32]
  4327ac:	ldp	x22, x21, [sp, #16]
  4327b0:	ldp	x29, x30, [sp], #48
  4327b4:	ret
  4327b8:	mov	x1, x0
  4327bc:	mov	w0, wzr
  4327c0:	b	404330 <clock_gettime@plt>
  4327c4:	sub	sp, sp, #0x20
  4327c8:	mov	x1, sp
  4327cc:	mov	w0, wzr
  4327d0:	stp	x29, x30, [sp, #16]
  4327d4:	add	x29, sp, #0x10
  4327d8:	bl	404330 <clock_gettime@plt>
  4327dc:	ldp	x0, x1, [sp]
  4327e0:	ldp	x29, x30, [sp, #16]
  4327e4:	add	sp, sp, #0x20
  4327e8:	ret
  4327ec:	ldr	x0, [x0, #16]
  4327f0:	ret
  4327f4:	ldr	x0, [x0, #24]
  4327f8:	ret
  4327fc:	ldr	x0, [x0, #32]
  432800:	ret
  432804:	ldp	x8, x9, [x0]
  432808:	cmp	x8, x9
  43280c:	b.cs	432848 <argp_parse@@Base+0x3b8c>  // b.hs, b.nlast
  432810:	mov	x0, xzr
  432814:	ldr	x10, [x8]
  432818:	cbz	x10, 432838 <argp_parse@@Base+0x3b7c>
  43281c:	mov	x10, xzr
  432820:	mov	x11, x8
  432824:	ldr	x11, [x11, #8]
  432828:	add	x10, x10, #0x1
  43282c:	cbnz	x11, 432824 <argp_parse@@Base+0x3b68>
  432830:	cmp	x10, x0
  432834:	csel	x0, x10, x0, hi  // hi = pmore
  432838:	add	x8, x8, #0x10
  43283c:	cmp	x8, x9
  432840:	b.cc	432814 <argp_parse@@Base+0x3b58>  // b.lo, b.ul, b.last
  432844:	ret
  432848:	mov	x0, xzr
  43284c:	ret
  432850:	ldp	x9, x10, [x0]
  432854:	cmp	x9, x10
  432858:	b.cs	432890 <argp_parse@@Base+0x3bd4>  // b.hs, b.nlast
  43285c:	mov	x8, xzr
  432860:	mov	x11, xzr
  432864:	ldr	x12, [x9]
  432868:	cbz	x12, 432880 <argp_parse@@Base+0x3bc4>
  43286c:	mov	x12, x9
  432870:	ldr	x12, [x12, #8]
  432874:	add	x8, x8, #0x1
  432878:	cbnz	x12, 432870 <argp_parse@@Base+0x3bb4>
  43287c:	add	x11, x11, #0x1
  432880:	add	x9, x9, #0x10
  432884:	cmp	x9, x10
  432888:	b.cc	432864 <argp_parse@@Base+0x3ba8>  // b.lo, b.ul, b.last
  43288c:	b	432898 <argp_parse@@Base+0x3bdc>
  432890:	mov	x11, xzr
  432894:	mov	x8, xzr
  432898:	ldr	x9, [x0, #24]
  43289c:	cmp	x11, x9
  4328a0:	b.ne	4328b8 <argp_parse@@Base+0x3bfc>  // b.any
  4328a4:	ldr	x9, [x0, #32]
  4328a8:	cmp	x8, x9
  4328ac:	b.ne	4328b8 <argp_parse@@Base+0x3bfc>  // b.any
  4328b0:	mov	w0, #0x1                   	// #1
  4328b4:	ret
  4328b8:	mov	w0, wzr
  4328bc:	ret
  4328c0:	stp	x29, x30, [sp, #-48]!
  4328c4:	stp	x22, x21, [sp, #16]
  4328c8:	stp	x20, x19, [sp, #32]
  4328cc:	ldp	x8, x9, [x0]
  4328d0:	ldp	x20, x3, [x0, #24]
  4328d4:	ldr	x22, [x0, #16]
  4328d8:	mov	x19, x1
  4328dc:	cmp	x8, x9
  4328e0:	mov	x21, xzr
  4328e4:	mov	x29, sp
  4328e8:	b.cs	43291c <argp_parse@@Base+0x3c60>  // b.hs, b.nlast
  4328ec:	ldr	x10, [x8]
  4328f0:	cbz	x10, 432910 <argp_parse@@Base+0x3c54>
  4328f4:	mov	x10, xzr
  4328f8:	mov	x11, x8
  4328fc:	ldr	x11, [x11, #8]
  432900:	add	x10, x10, #0x1
  432904:	cbnz	x11, 4328fc <argp_parse@@Base+0x3c40>
  432908:	cmp	x10, x21
  43290c:	csel	x21, x10, x21, hi  // hi = pmore
  432910:	add	x8, x8, #0x10
  432914:	cmp	x8, x9
  432918:	b.cc	4328ec <argp_parse@@Base+0x3c30>  // b.lo, b.ul, b.last
  43291c:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  432920:	add	x2, x2, #0x4f4
  432924:	mov	w1, #0x1                   	// #1
  432928:	mov	x0, x19
  43292c:	bl	4048f0 <__fprintf_chk@plt>
  432930:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  432934:	add	x2, x2, #0x50c
  432938:	mov	w1, #0x1                   	// #1
  43293c:	mov	x0, x19
  432940:	mov	x3, x22
  432944:	bl	4048f0 <__fprintf_chk@plt>
  432948:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  43294c:	ucvtf	d0, x20
  432950:	fmov	d1, x8
  432954:	fmul	d0, d0, d1
  432958:	ucvtf	d1, x22
  43295c:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  432960:	fdiv	d0, d0, d1
  432964:	add	x2, x2, #0x524
  432968:	mov	w1, #0x1                   	// #1
  43296c:	mov	x0, x19
  432970:	mov	x3, x20
  432974:	bl	4048f0 <__fprintf_chk@plt>
  432978:	mov	x0, x19
  43297c:	mov	x3, x21
  432980:	ldp	x20, x19, [sp, #32]
  432984:	ldp	x22, x21, [sp, #16]
  432988:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  43298c:	add	x2, x2, #0x545
  432990:	mov	w1, #0x1                   	// #1
  432994:	ldp	x29, x30, [sp], #48
  432998:	b	4048f0 <__fprintf_chk@plt>
  43299c:	stp	x29, x30, [sp, #-48]!
  4329a0:	stp	x20, x19, [sp, #32]
  4329a4:	ldr	x8, [x0, #16]
  4329a8:	ldr	x9, [x0, #48]
  4329ac:	mov	x19, x0
  4329b0:	mov	x20, x1
  4329b4:	mov	x0, x1
  4329b8:	mov	x1, x8
  4329bc:	str	x21, [sp, #16]
  4329c0:	mov	x29, sp
  4329c4:	blr	x9
  4329c8:	ldr	x8, [x19, #16]
  4329cc:	cmp	x0, x8
  4329d0:	b.cs	432a38 <argp_parse@@Base+0x3d7c>  // b.hs, b.nlast
  4329d4:	ldr	x8, [x19]
  4329d8:	add	x21, x8, x0, lsl #4
  4329dc:	ldr	x1, [x21]
  4329e0:	mov	x0, xzr
  4329e4:	cbz	x1, 432a28 <argp_parse@@Base+0x3d6c>
  4329e8:	cbz	x8, 432a28 <argp_parse@@Base+0x3d6c>
  4329ec:	cmp	x1, x20
  4329f0:	b.eq	432a14 <argp_parse@@Base+0x3d58>  // b.none
  4329f4:	ldr	x8, [x19, #56]
  4329f8:	mov	x0, x20
  4329fc:	blr	x8
  432a00:	tbnz	w0, #0, 432a1c <argp_parse@@Base+0x3d60>
  432a04:	ldr	x21, [x21, #8]
  432a08:	cbz	x21, 432a24 <argp_parse@@Base+0x3d68>
  432a0c:	ldr	x1, [x21]
  432a10:	b	4329ec <argp_parse@@Base+0x3d30>
  432a14:	mov	x0, x20
  432a18:	b	432a28 <argp_parse@@Base+0x3d6c>
  432a1c:	ldr	x0, [x21]
  432a20:	b	432a28 <argp_parse@@Base+0x3d6c>
  432a24:	mov	x0, xzr
  432a28:	ldp	x20, x19, [sp, #32]
  432a2c:	ldr	x21, [sp, #16]
  432a30:	ldp	x29, x30, [sp], #48
  432a34:	ret
  432a38:	bl	404850 <abort@plt>
  432a3c:	stp	x29, x30, [sp, #-16]!
  432a40:	ldr	x8, [x0, #32]
  432a44:	mov	x29, sp
  432a48:	cbz	x8, 432a64 <argp_parse@@Base+0x3da8>
  432a4c:	ldp	x8, x9, [x0]
  432a50:	cmp	x8, x9
  432a54:	b.cs	432a70 <argp_parse@@Base+0x3db4>  // b.hs, b.nlast
  432a58:	ldr	x0, [x8], #16
  432a5c:	cbz	x0, 432a50 <argp_parse@@Base+0x3d94>
  432a60:	b	432a68 <argp_parse@@Base+0x3dac>
  432a64:	mov	x0, xzr
  432a68:	ldp	x29, x30, [sp], #16
  432a6c:	ret
  432a70:	bl	404850 <abort@plt>
  432a74:	stp	x29, x30, [sp, #-32]!
  432a78:	stp	x20, x19, [sp, #16]
  432a7c:	ldr	x8, [x0, #16]
  432a80:	ldr	x9, [x0, #48]
  432a84:	mov	x19, x0
  432a88:	mov	x20, x1
  432a8c:	mov	x0, x1
  432a90:	mov	x1, x8
  432a94:	mov	x29, sp
  432a98:	blr	x9
  432a9c:	ldr	x8, [x19, #16]
  432aa0:	cmp	x0, x8
  432aa4:	b.cs	432b00 <argp_parse@@Base+0x3e44>  // b.hs, b.nlast
  432aa8:	ldr	x8, [x19]
  432aac:	add	x9, x8, x0, lsl #4
  432ab0:	ldp	x10, x9, [x9]
  432ab4:	cmp	x10, x20
  432ab8:	b.eq	432ac4 <argp_parse@@Base+0x3e08>  // b.none
  432abc:	cbnz	x9, 432ab0 <argp_parse@@Base+0x3df4>
  432ac0:	b	432ad0 <argp_parse@@Base+0x3e14>
  432ac4:	cbz	x9, 432ad0 <argp_parse@@Base+0x3e14>
  432ac8:	ldr	x0, [x9]
  432acc:	b	432af4 <argp_parse@@Base+0x3e38>
  432ad0:	ldr	x9, [x19, #8]
  432ad4:	add	x8, x8, x0, lsl #4
  432ad8:	add	x8, x8, #0x10
  432adc:	cmp	x8, x9
  432ae0:	b.cs	432af0 <argp_parse@@Base+0x3e34>  // b.hs, b.nlast
  432ae4:	ldr	x0, [x8], #16
  432ae8:	cbz	x0, 432adc <argp_parse@@Base+0x3e20>
  432aec:	b	432af4 <argp_parse@@Base+0x3e38>
  432af0:	mov	x0, xzr
  432af4:	ldp	x20, x19, [sp, #16]
  432af8:	ldp	x29, x30, [sp], #32
  432afc:	ret
  432b00:	bl	404850 <abort@plt>
  432b04:	ldp	x9, x10, [x0]
  432b08:	cmp	x9, x10
  432b0c:	b.cs	432b64 <argp_parse@@Base+0x3ea8>  // b.hs, b.nlast
  432b10:	mov	x11, xzr
  432b14:	ldr	x8, [x9]
  432b18:	cbz	x8, 432b4c <argp_parse@@Base+0x3e90>
  432b1c:	cbz	x9, 432b4c <argp_parse@@Base+0x3e90>
  432b20:	mov	x10, x9
  432b24:	cmp	x11, x2
  432b28:	b.cs	432b6c <argp_parse@@Base+0x3eb0>  // b.hs, b.nlast
  432b2c:	ldr	x8, [x10]
  432b30:	str	x8, [x1, x11, lsl #3]
  432b34:	ldr	x10, [x10, #8]
  432b38:	add	x8, x11, #0x1
  432b3c:	mov	x11, x8
  432b40:	cbnz	x10, 432b24 <argp_parse@@Base+0x3e68>
  432b44:	ldr	x10, [x0, #8]
  432b48:	b	432b50 <argp_parse@@Base+0x3e94>
  432b4c:	mov	x8, x11
  432b50:	add	x9, x9, #0x10
  432b54:	cmp	x9, x10
  432b58:	mov	x11, x8
  432b5c:	b.cc	432b14 <argp_parse@@Base+0x3e58>  // b.lo, b.ul, b.last
  432b60:	b	432b70 <argp_parse@@Base+0x3eb4>
  432b64:	mov	x8, xzr
  432b68:	b	432b70 <argp_parse@@Base+0x3eb4>
  432b6c:	mov	x8, x11
  432b70:	mov	x0, x8
  432b74:	ret
  432b78:	stp	x29, x30, [sp, #-64]!
  432b7c:	stp	x24, x23, [sp, #16]
  432b80:	stp	x22, x21, [sp, #32]
  432b84:	stp	x20, x19, [sp, #48]
  432b88:	ldp	x23, x8, [x0]
  432b8c:	mov	x29, sp
  432b90:	cmp	x23, x8
  432b94:	b.cs	432bf8 <argp_parse@@Base+0x3f3c>  // b.hs, b.nlast
  432b98:	mov	x19, x2
  432b9c:	mov	x20, x0
  432ba0:	mov	x21, x1
  432ba4:	mov	x22, xzr
  432ba8:	ldr	x0, [x23]
  432bac:	cbz	x0, 432be8 <argp_parse@@Base+0x3f2c>
  432bb0:	cbz	x23, 432be8 <argp_parse@@Base+0x3f2c>
  432bb4:	mov	x1, x19
  432bb8:	blr	x21
  432bbc:	tbz	w0, #0, 432bfc <argp_parse@@Base+0x3f40>
  432bc0:	mov	x24, x23
  432bc4:	ldr	x24, [x24, #8]
  432bc8:	add	x22, x22, #0x1
  432bcc:	cbz	x24, 432be4 <argp_parse@@Base+0x3f28>
  432bd0:	ldr	x0, [x24]
  432bd4:	mov	x1, x19
  432bd8:	blr	x21
  432bdc:	tbnz	w0, #0, 432bc4 <argp_parse@@Base+0x3f08>
  432be0:	b	432bfc <argp_parse@@Base+0x3f40>
  432be4:	ldr	x8, [x20, #8]
  432be8:	add	x23, x23, #0x10
  432bec:	cmp	x23, x8
  432bf0:	b.cc	432ba8 <argp_parse@@Base+0x3eec>  // b.lo, b.ul, b.last
  432bf4:	b	432bfc <argp_parse@@Base+0x3f40>
  432bf8:	mov	x22, xzr
  432bfc:	mov	x0, x22
  432c00:	ldp	x20, x19, [sp, #48]
  432c04:	ldp	x22, x21, [sp, #32]
  432c08:	ldp	x24, x23, [sp, #16]
  432c0c:	ldp	x29, x30, [sp], #64
  432c10:	ret
  432c14:	ldrb	w9, [x0]
  432c18:	cbz	w9, 432c48 <argp_parse@@Base+0x3f8c>
  432c1c:	mov	x8, x0
  432c20:	mov	x0, xzr
  432c24:	add	x8, x8, #0x1
  432c28:	lsl	x10, x0, #5
  432c2c:	sub	x10, x10, x0
  432c30:	add	x10, x10, w9, uxtb
  432c34:	ldrb	w9, [x8], #1
  432c38:	udiv	x11, x10, x1
  432c3c:	msub	x0, x11, x1, x10
  432c40:	cbnz	w9, 432c28 <argp_parse@@Base+0x3f6c>
  432c44:	ret
  432c48:	mov	x0, xzr
  432c4c:	ret
  432c50:	adrp	x8, 453000 <_obstack_memory_used@@Base+0x17808>
  432c54:	add	x8, x8, #0x560
  432c58:	ldr	w9, [x8, #16]
  432c5c:	ldr	q0, [x8]
  432c60:	str	w9, [x0, #16]
  432c64:	str	q0, [x0]
  432c68:	ret
  432c6c:	stp	x29, x30, [sp, #-64]!
  432c70:	adrp	x8, 432000 <argp_parse@@Base+0x3344>
  432c74:	add	x8, x8, #0xd40
  432c78:	cmp	x2, #0x0
  432c7c:	adrp	x9, 432000 <argp_parse@@Base+0x3344>
  432c80:	stp	x24, x23, [sp, #16]
  432c84:	stp	x22, x21, [sp, #32]
  432c88:	mov	x21, x0
  432c8c:	add	x9, x9, #0xd50
  432c90:	csel	x23, x8, x2, eq  // eq = none
  432c94:	cmp	x3, #0x0
  432c98:	mov	w0, #0x50                  	// #80
  432c9c:	stp	x20, x19, [sp, #48]
  432ca0:	mov	x29, sp
  432ca4:	mov	x19, x4
  432ca8:	mov	x22, x1
  432cac:	csel	x24, x9, x3, eq  // eq = none
  432cb0:	bl	4044d0 <malloc@plt>
  432cb4:	mov	x20, x0
  432cb8:	cbz	x0, 432d28 <argp_parse@@Base+0x406c>
  432cbc:	adrp	x8, 453000 <_obstack_memory_used@@Base+0x17808>
  432cc0:	add	x8, x8, #0x560
  432cc4:	cmp	x22, #0x0
  432cc8:	csel	x22, x8, x22, eq  // eq = none
  432ccc:	mov	x0, x20
  432cd0:	str	x22, [x20, #40]
  432cd4:	bl	432d5c <argp_parse@@Base+0x40a0>
  432cd8:	tbz	w0, #0, 432d1c <argp_parse@@Base+0x4060>
  432cdc:	mov	x0, x21
  432ce0:	mov	x1, x22
  432ce4:	bl	432df0 <argp_parse@@Base+0x4134>
  432ce8:	str	x0, [x20, #16]
  432cec:	cbz	x0, 432d1c <argp_parse@@Base+0x4060>
  432cf0:	mov	w1, #0x10                  	// #16
  432cf4:	mov	x21, x0
  432cf8:	bl	404680 <calloc@plt>
  432cfc:	str	x0, [x20]
  432d00:	cbz	x0, 432d1c <argp_parse@@Base+0x4060>
  432d04:	add	x8, x0, x21, lsl #4
  432d08:	stp	xzr, xzr, [x20, #24]
  432d0c:	stp	x23, x24, [x20, #48]
  432d10:	str	x8, [x20, #8]
  432d14:	stp	x19, xzr, [x20, #64]
  432d18:	b	432d28 <argp_parse@@Base+0x406c>
  432d1c:	mov	x0, x20
  432d20:	bl	4049b0 <free@plt>
  432d24:	mov	x20, xzr
  432d28:	mov	x0, x20
  432d2c:	ldp	x20, x19, [sp, #48]
  432d30:	ldp	x22, x21, [sp, #32]
  432d34:	ldp	x24, x23, [sp, #16]
  432d38:	ldp	x29, x30, [sp], #64
  432d3c:	ret
  432d40:	ror	x8, x0, #3
  432d44:	udiv	x9, x8, x1
  432d48:	msub	x0, x9, x1, x8
  432d4c:	ret
  432d50:	cmp	x0, x1
  432d54:	cset	w0, eq  // eq = none
  432d58:	ret
  432d5c:	ldr	x8, [x0, #40]
  432d60:	adrp	x9, 453000 <_obstack_memory_used@@Base+0x17808>
  432d64:	add	x9, x9, #0x560
  432d68:	cmp	x8, x9
  432d6c:	b.eq	432dd8 <argp_parse@@Base+0x411c>  // b.none
  432d70:	adrp	x10, 453000 <_obstack_memory_used@@Base+0x17808>
  432d74:	ldr	s0, [x8, #8]
  432d78:	ldr	s1, [x10, #1256]
  432d7c:	fcmp	s0, s1
  432d80:	b.le	432de0 <argp_parse@@Base+0x4124>
  432d84:	adrp	x10, 453000 <_obstack_memory_used@@Base+0x17808>
  432d88:	ldr	s2, [x10, #1260]
  432d8c:	fcmp	s0, s2
  432d90:	b.pl	432de0 <argp_parse@@Base+0x4124>  // b.nfrst
  432d94:	adrp	x10, 453000 <_obstack_memory_used@@Base+0x17808>
  432d98:	ldr	s2, [x8, #12]
  432d9c:	ldr	s3, [x10, #1264]
  432da0:	fcmp	s2, s3
  432da4:	b.le	432de0 <argp_parse@@Base+0x4124>
  432da8:	ldr	s2, [x8]
  432dac:	fcmp	s2, #0.0
  432db0:	b.lt	432de0 <argp_parse@@Base+0x4124>  // b.tstop
  432db4:	fadd	s1, s2, s1
  432db8:	fcmp	s1, s0
  432dbc:	b.pl	432de0 <argp_parse@@Base+0x4124>  // b.nfrst
  432dc0:	ldr	s0, [x8, #4]
  432dc4:	fmov	s2, #1.000000000000000000e+00
  432dc8:	fcmp	s0, s2
  432dcc:	b.hi	432de0 <argp_parse@@Base+0x4124>  // b.pmore
  432dd0:	fcmp	s1, s0
  432dd4:	b.pl	432de0 <argp_parse@@Base+0x4124>  // b.nfrst
  432dd8:	mov	w8, #0x1                   	// #1
  432ddc:	b	432de8 <argp_parse@@Base+0x412c>
  432de0:	mov	w8, wzr
  432de4:	str	x9, [x0, #40]
  432de8:	mov	w0, w8
  432dec:	ret
  432df0:	ldrb	w8, [x1, #16]
  432df4:	cbnz	w8, 432e18 <argp_parse@@Base+0x415c>
  432df8:	ldr	s0, [x1, #8]
  432dfc:	ucvtf	s1, x0
  432e00:	mov	w8, #0x5f800000            	// #1602224128
  432e04:	fdiv	s0, s1, s0
  432e08:	fmov	s1, w8
  432e0c:	fcmp	s0, s1
  432e10:	b.ge	432e8c <argp_parse@@Base+0x41d0>  // b.tcont
  432e14:	fcvtzu	x0, s0
  432e18:	cmp	x0, #0xa
  432e1c:	mov	w8, #0xa                   	// #10
  432e20:	csel	x8, x0, x8, hi  // hi = pmore
  432e24:	orr	x0, x8, #0x1
  432e28:	cmn	x0, #0x1
  432e2c:	b.eq	432e8c <argp_parse@@Base+0x41d0>  // b.none
  432e30:	cmp	x0, #0xa
  432e34:	b.cc	432e6c <argp_parse@@Base+0x41b0>  // b.lo, b.ul, b.last
  432e38:	mov	w9, #0xc                   	// #12
  432e3c:	mov	w10, #0x9                   	// #9
  432e40:	mov	w8, #0x3                   	// #3
  432e44:	udiv	x11, x0, x8
  432e48:	msub	x11, x11, x8, x0
  432e4c:	cbz	x11, 432e70 <argp_parse@@Base+0x41b4>
  432e50:	add	x10, x10, x9
  432e54:	add	x10, x10, #0x4
  432e58:	add	x8, x8, #0x2
  432e5c:	cmp	x10, x0
  432e60:	add	x9, x9, #0x8
  432e64:	b.cc	432e44 <argp_parse@@Base+0x4188>  // b.lo, b.ul, b.last
  432e68:	b	432e70 <argp_parse@@Base+0x41b4>
  432e6c:	mov	w8, #0x3                   	// #3
  432e70:	udiv	x9, x0, x8
  432e74:	msub	x8, x9, x8, x0
  432e78:	cbnz	x8, 432e84 <argp_parse@@Base+0x41c8>
  432e7c:	add	x0, x0, #0x2
  432e80:	b	432e28 <argp_parse@@Base+0x416c>
  432e84:	lsr	x8, x0, #60
  432e88:	cbz	x8, 432e90 <argp_parse@@Base+0x41d4>
  432e8c:	mov	x0, xzr
  432e90:	ret
  432e94:	stp	x29, x30, [sp, #-48]!
  432e98:	str	x21, [sp, #16]
  432e9c:	stp	x20, x19, [sp, #32]
  432ea0:	ldp	x20, x8, [x0]
  432ea4:	mov	x19, x0
  432ea8:	mov	x29, sp
  432eac:	cmp	x20, x8
  432eb0:	b.cs	432f20 <argp_parse@@Base+0x4264>  // b.hs, b.nlast
  432eb4:	ldr	x9, [x20]
  432eb8:	cbz	x9, 432f18 <argp_parse@@Base+0x425c>
  432ebc:	ldr	x8, [x19, #64]
  432ec0:	ldr	x21, [x20, #8]
  432ec4:	cmp	x8, #0x0
  432ec8:	cset	w9, ne  // ne = any
  432ecc:	cbz	x21, 432f04 <argp_parse@@Base+0x4248>
  432ed0:	tbz	w9, #0, 432ee0 <argp_parse@@Base+0x4224>
  432ed4:	ldr	x0, [x21]
  432ed8:	blr	x8
  432edc:	ldr	x8, [x19, #64]
  432ee0:	str	xzr, [x21]
  432ee4:	ldr	x9, [x19, #72]
  432ee8:	ldr	x10, [x21, #8]
  432eec:	cmp	x8, #0x0
  432ef0:	str	x9, [x21, #8]
  432ef4:	str	x21, [x19, #72]
  432ef8:	cset	w9, ne  // ne = any
  432efc:	mov	x21, x10
  432f00:	cbnz	x10, 432ed0 <argp_parse@@Base+0x4214>
  432f04:	cbz	w9, 432f10 <argp_parse@@Base+0x4254>
  432f08:	ldr	x0, [x20]
  432f0c:	blr	x8
  432f10:	stp	xzr, xzr, [x20]
  432f14:	ldr	x8, [x19, #8]
  432f18:	add	x20, x20, #0x10
  432f1c:	b	432eac <argp_parse@@Base+0x41f0>
  432f20:	stp	xzr, xzr, [x19, #24]
  432f24:	ldp	x20, x19, [sp, #32]
  432f28:	ldr	x21, [sp, #16]
  432f2c:	ldp	x29, x30, [sp], #48
  432f30:	ret
  432f34:	stp	x29, x30, [sp, #-48]!
  432f38:	stp	x20, x19, [sp, #32]
  432f3c:	ldr	x8, [x0, #64]
  432f40:	mov	x19, x0
  432f44:	str	x21, [sp, #16]
  432f48:	mov	x29, sp
  432f4c:	cbz	x8, 432fa0 <argp_parse@@Base+0x42e4>
  432f50:	ldr	x8, [x19, #32]
  432f54:	cbz	x8, 432fa0 <argp_parse@@Base+0x42e4>
  432f58:	ldp	x20, x8, [x19]
  432f5c:	cmp	x20, x8
  432f60:	b.cs	432fa0 <argp_parse@@Base+0x42e4>  // b.hs, b.nlast
  432f64:	ldr	x0, [x20]
  432f68:	cbz	x0, 432f98 <argp_parse@@Base+0x42dc>
  432f6c:	cbz	x20, 432f98 <argp_parse@@Base+0x42dc>
  432f70:	ldr	x8, [x19, #64]
  432f74:	blr	x8
  432f78:	ldr	x21, [x20, #8]
  432f7c:	cbz	x21, 432f94 <argp_parse@@Base+0x42d8>
  432f80:	ldr	x0, [x21]
  432f84:	ldr	x8, [x19, #64]
  432f88:	blr	x8
  432f8c:	ldr	x21, [x21, #8]
  432f90:	cbnz	x21, 432f80 <argp_parse@@Base+0x42c4>
  432f94:	ldr	x8, [x19, #8]
  432f98:	add	x20, x20, #0x10
  432f9c:	b	432f5c <argp_parse@@Base+0x42a0>
  432fa0:	ldp	x20, x8, [x19]
  432fa4:	cmp	x20, x8
  432fa8:	b.cs	432fd0 <argp_parse@@Base+0x4314>  // b.hs, b.nlast
  432fac:	ldr	x0, [x20, #8]
  432fb0:	cbz	x0, 432fc8 <argp_parse@@Base+0x430c>
  432fb4:	ldr	x21, [x0, #8]
  432fb8:	bl	4049b0 <free@plt>
  432fbc:	mov	x0, x21
  432fc0:	cbnz	x21, 432fb4 <argp_parse@@Base+0x42f8>
  432fc4:	ldr	x8, [x19, #8]
  432fc8:	add	x20, x20, #0x10
  432fcc:	b	432fa4 <argp_parse@@Base+0x42e8>
  432fd0:	ldr	x0, [x19, #72]
  432fd4:	cbz	x0, 432fe8 <argp_parse@@Base+0x432c>
  432fd8:	ldr	x20, [x0, #8]
  432fdc:	bl	4049b0 <free@plt>
  432fe0:	mov	x0, x20
  432fe4:	cbnz	x20, 432fd8 <argp_parse@@Base+0x431c>
  432fe8:	ldr	x0, [x19]
  432fec:	bl	4049b0 <free@plt>
  432ff0:	mov	x0, x19
  432ff4:	ldp	x20, x19, [sp, #32]
  432ff8:	ldr	x21, [sp, #16]
  432ffc:	ldp	x29, x30, [sp], #48
  433000:	b	4049b0 <free@plt>
  433004:	sub	sp, sp, #0x80
  433008:	stp	x29, x30, [sp, #80]
  43300c:	stp	x20, x19, [sp, #112]
  433010:	ldr	x20, [x0, #40]
  433014:	mov	x19, x0
  433018:	mov	x0, x1
  43301c:	str	x21, [sp, #96]
  433020:	mov	x1, x20
  433024:	add	x29, sp, #0x50
  433028:	bl	432df0 <argp_parse@@Base+0x4134>
  43302c:	cbz	x0, 4330ac <argp_parse@@Base+0x43f0>
  433030:	ldr	x8, [x19, #16]
  433034:	mov	x21, x0
  433038:	cmp	x0, x8
  43303c:	b.eq	4330a8 <argp_parse@@Base+0x43ec>  // b.none
  433040:	mov	w1, #0x10                  	// #16
  433044:	mov	x0, x21
  433048:	bl	404680 <calloc@plt>
  43304c:	str	x0, [sp]
  433050:	cbz	x0, 4330ac <argp_parse@@Base+0x43f0>
  433054:	add	x8, x0, x21, lsl #4
  433058:	stp	xzr, xzr, [sp, #24]
  43305c:	stp	x8, x21, [sp, #8]
  433060:	str	x20, [sp, #40]
  433064:	ldr	q0, [x19, #48]
  433068:	mov	x0, sp
  43306c:	mov	x1, x19
  433070:	mov	w2, wzr
  433074:	str	q0, [sp, #48]
  433078:	ldr	q0, [x19, #64]
  43307c:	str	q0, [sp, #64]
  433080:	bl	433104 <argp_parse@@Base+0x4448>
  433084:	tbz	w0, #0, 4330c0 <argp_parse@@Base+0x4404>
  433088:	ldr	x0, [x19]
  43308c:	bl	4049b0 <free@plt>
  433090:	ldr	q0, [sp]
  433094:	str	q0, [x19]
  433098:	ldr	q0, [sp, #16]
  43309c:	str	q0, [x19, #16]
  4330a0:	ldr	x8, [sp, #72]
  4330a4:	str	x8, [x19, #72]
  4330a8:	mov	w0, #0x1                   	// #1
  4330ac:	ldp	x20, x19, [sp, #112]
  4330b0:	ldr	x21, [sp, #96]
  4330b4:	ldp	x29, x30, [sp, #80]
  4330b8:	add	sp, sp, #0x80
  4330bc:	ret
  4330c0:	ldr	x8, [sp, #72]
  4330c4:	mov	x1, sp
  4330c8:	mov	w2, #0x1                   	// #1
  4330cc:	mov	x0, x19
  4330d0:	str	x8, [x19, #72]
  4330d4:	bl	433104 <argp_parse@@Base+0x4448>
  4330d8:	tbz	w0, #0, 433100 <argp_parse@@Base+0x4444>
  4330dc:	mov	x1, sp
  4330e0:	mov	x0, x19
  4330e4:	mov	w2, wzr
  4330e8:	bl	433104 <argp_parse@@Base+0x4448>
  4330ec:	tbz	w0, #0, 433100 <argp_parse@@Base+0x4444>
  4330f0:	ldr	x0, [sp]
  4330f4:	bl	4049b0 <free@plt>
  4330f8:	mov	w0, wzr
  4330fc:	b	4330ac <argp_parse@@Base+0x43f0>
  433100:	bl	404850 <abort@plt>
  433104:	stp	x29, x30, [sp, #-80]!
  433108:	stp	x26, x25, [sp, #16]
  43310c:	stp	x24, x23, [sp, #32]
  433110:	stp	x22, x21, [sp, #48]
  433114:	stp	x20, x19, [sp, #64]
  433118:	ldp	x24, x8, [x1]
  43311c:	mov	x29, sp
  433120:	cmp	x24, x8
  433124:	b.cs	433254 <argp_parse@@Base+0x4598>  // b.hs, b.nlast
  433128:	mov	w19, w2
  43312c:	mov	x20, x1
  433130:	mov	x21, x0
  433134:	add	x25, x0, #0x48
  433138:	ldr	x22, [x24]
  43313c:	cbz	x22, 433244 <argp_parse@@Base+0x4588>
  433140:	ldr	x23, [x24, #8]
  433144:	cbz	x23, 4331b4 <argp_parse@@Base+0x44f8>
  433148:	ldr	x1, [x21, #16]
  43314c:	ldr	x22, [x23]
  433150:	ldr	x8, [x21, #48]
  433154:	mov	x0, x22
  433158:	blr	x8
  43315c:	ldr	x1, [x21, #16]
  433160:	cmp	x0, x1
  433164:	b.cs	433270 <argp_parse@@Base+0x45b4>  // b.hs, b.nlast
  433168:	ldr	x8, [x21]
  43316c:	add	x9, x8, x0, lsl #4
  433170:	ldr	x10, [x9]
  433174:	ldr	x8, [x23, #8]
  433178:	cbz	x10, 433184 <argp_parse@@Base+0x44c8>
  43317c:	add	x9, x9, #0x8
  433180:	b	43319c <argp_parse@@Base+0x44e0>
  433184:	str	x22, [x9]
  433188:	ldr	x9, [x21, #24]
  43318c:	add	x9, x9, #0x1
  433190:	str	x9, [x21, #24]
  433194:	mov	x9, x25
  433198:	str	xzr, [x23]
  43319c:	ldr	x10, [x9]
  4331a0:	str	x10, [x23, #8]
  4331a4:	str	x23, [x9]
  4331a8:	mov	x23, x8
  4331ac:	cbnz	x8, 43314c <argp_parse@@Base+0x4490>
  4331b0:	ldr	x22, [x24]
  4331b4:	str	xzr, [x24, #8]
  4331b8:	tbnz	w19, #0, 433244 <argp_parse@@Base+0x4588>
  4331bc:	ldr	x8, [x21, #48]
  4331c0:	ldr	x1, [x21, #16]
  4331c4:	mov	x0, x22
  4331c8:	blr	x8
  4331cc:	ldr	x8, [x21, #16]
  4331d0:	cmp	x0, x8
  4331d4:	b.cs	433270 <argp_parse@@Base+0x45b4>  // b.hs, b.nlast
  4331d8:	ldr	x26, [x21]
  4331dc:	mov	x23, x0
  4331e0:	add	x8, x26, x0, lsl #4
  4331e4:	ldr	x9, [x8]
  4331e8:	cbz	x9, 433200 <argp_parse@@Base+0x4544>
  4331ec:	ldr	x0, [x25]
  4331f0:	cbz	x0, 433214 <argp_parse@@Base+0x4558>
  4331f4:	ldr	x8, [x0, #8]
  4331f8:	str	x8, [x25]
  4331fc:	b	433220 <argp_parse@@Base+0x4564>
  433200:	str	x22, [x8]
  433204:	ldr	x8, [x21, #24]
  433208:	add	x8, x8, #0x1
  43320c:	str	x8, [x21, #24]
  433210:	b	433234 <argp_parse@@Base+0x4578>
  433214:	mov	w0, #0x10                  	// #16
  433218:	bl	4044d0 <malloc@plt>
  43321c:	cbz	x0, 433258 <argp_parse@@Base+0x459c>
  433220:	str	x22, [x0]
  433224:	add	x8, x26, x23, lsl #4
  433228:	ldr	x9, [x8, #8]
  43322c:	str	x9, [x0, #8]
  433230:	str	x0, [x8, #8]
  433234:	str	xzr, [x24]
  433238:	ldr	x8, [x20, #24]
  43323c:	sub	x8, x8, #0x1
  433240:	str	x8, [x20, #24]
  433244:	ldr	x8, [x20, #8]
  433248:	add	x24, x24, #0x10
  43324c:	cmp	x24, x8
  433250:	b.cc	433138 <argp_parse@@Base+0x447c>  // b.lo, b.ul, b.last
  433254:	mov	w0, #0x1                   	// #1
  433258:	ldp	x20, x19, [sp, #64]
  43325c:	ldp	x22, x21, [sp, #48]
  433260:	ldp	x24, x23, [sp, #32]
  433264:	ldp	x26, x25, [sp, #16]
  433268:	ldp	x29, x30, [sp], #80
  43326c:	ret
  433270:	bl	404850 <abort@plt>
  433274:	stp	x29, x30, [sp, #-48]!
  433278:	str	x21, [sp, #16]
  43327c:	stp	x20, x19, [sp, #32]
  433280:	mov	x29, sp
  433284:	cbz	x1, 4333d8 <argp_parse@@Base+0x471c>
  433288:	mov	x21, x2
  43328c:	add	x2, x29, #0x18
  433290:	mov	w3, wzr
  433294:	mov	x20, x1
  433298:	mov	x19, x0
  43329c:	bl	4333dc <argp_parse@@Base+0x4720>
  4332a0:	cbz	x0, 4332b8 <argp_parse@@Base+0x45fc>
  4332a4:	cbz	x21, 433370 <argp_parse@@Base+0x46b4>
  4332a8:	mov	x8, x0
  4332ac:	mov	w0, wzr
  4332b0:	str	x8, [x21]
  4332b4:	b	4333c8 <argp_parse@@Base+0x470c>
  4332b8:	ldr	x8, [x19, #40]
  4332bc:	ldp	x10, x9, [x19, #16]
  4332c0:	ldr	s0, [x8, #8]
  4332c4:	ucvtf	s2, x10
  4332c8:	ucvtf	s1, x9
  4332cc:	fmul	s0, s0, s2
  4332d0:	fcmp	s0, s1
  4332d4:	b.pl	433350 <argp_parse@@Base+0x4694>  // b.nfrst
  4332d8:	mov	x0, x19
  4332dc:	bl	432d5c <argp_parse@@Base+0x40a0>
  4332e0:	ldr	x8, [x19, #40]
  4332e4:	ldp	x10, x9, [x19, #16]
  4332e8:	ldr	s0, [x8, #8]
  4332ec:	ucvtf	s1, x10
  4332f0:	ucvtf	s2, x9
  4332f4:	fmul	s3, s0, s1
  4332f8:	fcmp	s3, s2
  4332fc:	b.pl	433350 <argp_parse@@Base+0x4694>  // b.nfrst
  433300:	ldr	s2, [x8, #12]
  433304:	ldrb	w8, [x8, #16]
  433308:	fmul	s1, s2, s1
  43330c:	cmp	w8, #0x0
  433310:	fmul	s0, s0, s1
  433314:	mov	w8, #0x5f800000            	// #1602224128
  433318:	fcsel	s0, s0, s1, eq  // eq = none
  43331c:	fmov	s1, w8
  433320:	fcmp	s0, s1
  433324:	b.ge	4333c4 <argp_parse@@Base+0x4708>  // b.tcont
  433328:	fcvtzu	x1, s0
  43332c:	mov	x0, x19
  433330:	bl	433004 <argp_parse@@Base+0x4348>
  433334:	tbz	w0, #0, 4333c4 <argp_parse@@Base+0x4708>
  433338:	add	x2, x29, #0x18
  43333c:	mov	x0, x19
  433340:	mov	x1, x20
  433344:	mov	w3, wzr
  433348:	bl	4333dc <argp_parse@@Base+0x4720>
  43334c:	cbnz	x0, 4333d8 <argp_parse@@Base+0x471c>
  433350:	ldr	x21, [x29, #24]
  433354:	ldr	x8, [x21]
  433358:	cbz	x8, 433378 <argp_parse@@Base+0x46bc>
  43335c:	ldr	x0, [x19, #72]
  433360:	cbz	x0, 433394 <argp_parse@@Base+0x46d8>
  433364:	ldr	x8, [x0, #8]
  433368:	str	x8, [x19, #72]
  43336c:	b	4333a0 <argp_parse@@Base+0x46e4>
  433370:	mov	w0, wzr
  433374:	b	4333c8 <argp_parse@@Base+0x470c>
  433378:	str	x20, [x21]
  43337c:	ldur	q0, [x19, #24]
  433380:	mov	w0, #0x1                   	// #1
  433384:	dup	v1.2d, x0
  433388:	add	v0.2d, v0.2d, v1.2d
  43338c:	stur	q0, [x19, #24]
  433390:	b	4333c8 <argp_parse@@Base+0x470c>
  433394:	mov	w0, #0x10                  	// #16
  433398:	bl	4044d0 <malloc@plt>
  43339c:	cbz	x0, 4333c4 <argp_parse@@Base+0x4708>
  4333a0:	str	x20, [x0]
  4333a4:	ldr	x8, [x21, #8]
  4333a8:	str	x8, [x0, #8]
  4333ac:	str	x0, [x21, #8]
  4333b0:	ldr	x8, [x19, #32]
  4333b4:	mov	w0, #0x1                   	// #1
  4333b8:	add	x8, x8, #0x1
  4333bc:	str	x8, [x19, #32]
  4333c0:	b	4333c8 <argp_parse@@Base+0x470c>
  4333c4:	mov	w0, #0xffffffff            	// #-1
  4333c8:	ldp	x20, x19, [sp, #32]
  4333cc:	ldr	x21, [sp, #16]
  4333d0:	ldp	x29, x30, [sp], #48
  4333d4:	ret
  4333d8:	bl	404850 <abort@plt>
  4333dc:	stp	x29, x30, [sp, #-80]!
  4333e0:	stp	x24, x23, [sp, #32]
  4333e4:	stp	x22, x21, [sp, #48]
  4333e8:	stp	x20, x19, [sp, #64]
  4333ec:	ldr	x8, [x0, #16]
  4333f0:	ldr	x9, [x0, #48]
  4333f4:	mov	x20, x0
  4333f8:	mov	x19, x1
  4333fc:	mov	x0, x1
  433400:	mov	x1, x8
  433404:	str	x25, [sp, #16]
  433408:	mov	x29, sp
  43340c:	mov	w21, w3
  433410:	mov	x23, x2
  433414:	blr	x9
  433418:	ldr	x8, [x20, #16]
  43341c:	cmp	x0, x8
  433420:	b.cs	433504 <argp_parse@@Base+0x4848>  // b.hs, b.nlast
  433424:	ldr	x25, [x20]
  433428:	mov	x22, x0
  43342c:	add	x24, x25, x0, lsl #4
  433430:	str	x24, [x23]
  433434:	ldr	x1, [x24]
  433438:	cbz	x1, 4334ac <argp_parse@@Base+0x47f0>
  43343c:	cmp	x1, x19
  433440:	b.eq	433458 <argp_parse@@Base+0x479c>  // b.none
  433444:	ldr	x8, [x20, #56]
  433448:	mov	x0, x19
  43344c:	blr	x8
  433450:	tbz	w0, #0, 433474 <argp_parse@@Base+0x47b8>
  433454:	ldr	x19, [x24]
  433458:	tbz	w21, #0, 4334e8 <argp_parse@@Base+0x482c>
  43345c:	add	x8, x25, x22, lsl #4
  433460:	ldr	x8, [x8, #8]
  433464:	cbz	x8, 4334b4 <argp_parse@@Base+0x47f8>
  433468:	ldr	q0, [x8]
  43346c:	str	q0, [x24]
  433470:	b	4334d8 <argp_parse@@Base+0x481c>
  433474:	add	x22, x25, x22, lsl #4
  433478:	ldr	x9, [x22, #8]!
  43347c:	cbz	x9, 4334ac <argp_parse@@Base+0x47f0>
  433480:	ldr	x1, [x9]
  433484:	cmp	x1, x19
  433488:	b.eq	4334bc <argp_parse@@Base+0x4800>  // b.none
  43348c:	ldr	x8, [x20, #56]
  433490:	mov	x0, x19
  433494:	blr	x8
  433498:	ldr	x8, [x22]
  43349c:	tbnz	w0, #0, 4334c8 <argp_parse@@Base+0x480c>
  4334a0:	ldr	x9, [x8, #8]!
  4334a4:	mov	x22, x8
  4334a8:	cbnz	x9, 433480 <argp_parse@@Base+0x47c4>
  4334ac:	mov	x19, xzr
  4334b0:	b	4334e8 <argp_parse@@Base+0x482c>
  4334b4:	str	xzr, [x24]
  4334b8:	b	4334e8 <argp_parse@@Base+0x482c>
  4334bc:	mov	x8, x9
  4334c0:	tbnz	w21, #0, 4334d0 <argp_parse@@Base+0x4814>
  4334c4:	b	4334e8 <argp_parse@@Base+0x482c>
  4334c8:	ldr	x19, [x8]
  4334cc:	tbz	w21, #0, 4334e8 <argp_parse@@Base+0x482c>
  4334d0:	ldr	x9, [x8, #8]
  4334d4:	str	x9, [x22]
  4334d8:	str	xzr, [x8]
  4334dc:	ldr	x9, [x20, #72]
  4334e0:	str	x9, [x8, #8]
  4334e4:	str	x8, [x20, #72]
  4334e8:	mov	x0, x19
  4334ec:	ldp	x20, x19, [sp, #64]
  4334f0:	ldp	x22, x21, [sp, #48]
  4334f4:	ldp	x24, x23, [sp, #32]
  4334f8:	ldr	x25, [sp, #16]
  4334fc:	ldp	x29, x30, [sp], #80
  433500:	ret
  433504:	bl	404850 <abort@plt>
  433508:	stp	x29, x30, [sp, #-32]!
  43350c:	mov	x29, sp
  433510:	add	x2, x29, #0x18
  433514:	str	x19, [sp, #16]
  433518:	mov	x19, x1
  43351c:	bl	433274 <argp_parse@@Base+0x45b8>
  433520:	ldr	x8, [x29, #24]
  433524:	cmp	w0, #0x0
  433528:	csel	x8, x8, x19, eq  // eq = none
  43352c:	ldr	x19, [sp, #16]
  433530:	cmn	w0, #0x1
  433534:	csel	x0, xzr, x8, eq  // eq = none
  433538:	ldp	x29, x30, [sp], #32
  43353c:	ret
  433540:	stp	x29, x30, [sp, #-48]!
  433544:	mov	x29, sp
  433548:	add	x2, x29, #0x18
  43354c:	mov	w3, #0x1                   	// #1
  433550:	str	x21, [sp, #16]
  433554:	stp	x20, x19, [sp, #32]
  433558:	mov	x19, x0
  43355c:	bl	4333dc <argp_parse@@Base+0x4720>
  433560:	mov	x20, x0
  433564:	cbz	x0, 433614 <argp_parse@@Base+0x4958>
  433568:	ldr	x8, [x19, #32]
  43356c:	sub	x8, x8, #0x1
  433570:	str	x8, [x19, #32]
  433574:	ldr	x8, [x29, #24]
  433578:	ldr	x8, [x8]
  43357c:	cbnz	x8, 433614 <argp_parse@@Base+0x4958>
  433580:	ldp	x10, x8, [x19, #16]
  433584:	ldr	x9, [x19, #40]
  433588:	sub	x8, x8, #0x1
  43358c:	str	x8, [x19, #24]
  433590:	ldr	s0, [x9]
  433594:	ucvtf	s2, x10
  433598:	ucvtf	s1, x8
  43359c:	fmul	s0, s0, s2
  4335a0:	fcmp	s0, s1
  4335a4:	b.le	433614 <argp_parse@@Base+0x4958>
  4335a8:	mov	x0, x19
  4335ac:	bl	432d5c <argp_parse@@Base+0x40a0>
  4335b0:	ldr	x8, [x19, #40]
  4335b4:	ldp	x10, x9, [x19, #16]
  4335b8:	ldr	s1, [x8]
  4335bc:	ucvtf	s0, x10
  4335c0:	ucvtf	s2, x9
  4335c4:	fmul	s1, s1, s0
  4335c8:	fcmp	s1, s2
  4335cc:	b.le	433614 <argp_parse@@Base+0x4958>
  4335d0:	ldr	s1, [x8, #4]
  4335d4:	ldrb	w9, [x8, #16]
  4335d8:	fmul	s0, s1, s0
  4335dc:	cbnz	w9, 4335e8 <argp_parse@@Base+0x492c>
  4335e0:	ldr	s1, [x8, #8]
  4335e4:	fmul	s0, s0, s1
  4335e8:	fcvtzu	x1, s0
  4335ec:	mov	x0, x19
  4335f0:	bl	433004 <argp_parse@@Base+0x4348>
  4335f4:	tbnz	w0, #0, 433614 <argp_parse@@Base+0x4958>
  4335f8:	ldr	x0, [x19, #72]
  4335fc:	cbz	x0, 433610 <argp_parse@@Base+0x4954>
  433600:	ldr	x21, [x0, #8]
  433604:	bl	4049b0 <free@plt>
  433608:	mov	x0, x21
  43360c:	cbnz	x21, 433600 <argp_parse@@Base+0x4944>
  433610:	str	xzr, [x19, #72]
  433614:	mov	x0, x20
  433618:	ldp	x20, x19, [sp, #32]
  43361c:	ldr	x21, [sp, #16]
  433620:	ldp	x29, x30, [sp], #48
  433624:	ret
  433628:	sub	sp, sp, #0xe0
  43362c:	tst	w2, #0x20
  433630:	mov	w8, #0x3e8                 	// #1000
  433634:	mov	w9, #0x400                 	// #1024
  433638:	stp	x29, x30, [sp, #128]
  43363c:	stp	x28, x27, [sp, #144]
  433640:	stp	x26, x25, [sp, #160]
  433644:	stp	x24, x23, [sp, #176]
  433648:	stp	x22, x21, [sp, #192]
  43364c:	stp	x20, x19, [sp, #208]
  433650:	add	x29, sp, #0x80
  433654:	mov	x21, x4
  433658:	mov	x27, x3
  43365c:	mov	x19, x1
  433660:	mov	x26, x0
  433664:	and	w28, w2, #0x3
  433668:	str	w2, [sp, #20]
  43366c:	csel	w22, w9, w8, ne  // ne = any
  433670:	bl	4043b0 <localeconv@plt>
  433674:	ldr	x25, [x0]
  433678:	mov	x23, x0
  43367c:	mov	x0, x25
  433680:	bl	404170 <strlen@plt>
  433684:	ldp	x23, x20, [x23, #8]
  433688:	sub	x8, x0, #0x1
  43368c:	cmp	x8, #0x10
  433690:	adrp	x8, 44f000 <_obstack_memory_used@@Base+0x13808>
  433694:	csinc	x24, x0, xzr, cc  // cc = lo, ul, last
  433698:	add	x8, x8, #0x94a
  43369c:	mov	x0, x23
  4336a0:	csel	x25, x25, x8, cc  // cc = lo, ul, last
  4336a4:	bl	404170 <strlen@plt>
  4336a8:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  4336ac:	mov	x11, x21
  4336b0:	add	x8, x8, #0x3ee
  4336b4:	cmp	x0, #0x11
  4336b8:	csel	x21, x23, x8, cc  // cc = lo, ul, last
  4336bc:	cmp	x11, x27
  4336c0:	str	x19, [sp, #24]
  4336c4:	add	x19, x19, #0x287
  4336c8:	stp	x21, x11, [sp]
  4336cc:	b.ls	43371c <argp_parse@@Base+0x4a60>  // b.plast
  4336d0:	cbz	x27, 433734 <argp_parse@@Base+0x4a78>
  4336d4:	udiv	x9, x11, x27
  4336d8:	msub	x8, x9, x27, x11
  4336dc:	cbnz	x8, 433734 <argp_parse@@Base+0x4a78>
  4336e0:	udiv	x27, x26, x9
  4336e4:	msub	x8, x27, x9, x26
  4336e8:	add	x8, x8, x8, lsl #2
  4336ec:	lsl	x11, x8, #1
  4336f0:	udiv	x8, x11, x9
  4336f4:	msub	x11, x8, x9, x11
  4336f8:	lsl	x12, x11, #1
  4336fc:	cmp	x12, #0x0
  433700:	mov	w10, #0x2                   	// #2
  433704:	cset	w13, ne  // ne = any
  433708:	cmp	x9, x11, lsl #1
  43370c:	cinc	w10, w10, cc  // cc = lo, ul, last
  433710:	cmp	x12, x9
  433714:	csel	w9, w13, w10, cc  // cc = lo, ul, last
  433718:	b	4339ac <argp_parse@@Base+0x4cf0>
  43371c:	udiv	x10, x27, x11
  433720:	msub	x8, x10, x11, x27
  433724:	cbnz	x8, 433734 <argp_parse@@Base+0x4a78>
  433728:	umulh	x8, x10, x26
  43372c:	cmp	xzr, x8
  433730:	b.eq	4339a0 <argp_parse@@Base+0x4ce4>  // b.none
  433734:	mov	x0, x11
  433738:	bl	44b790 <_obstack_memory_used@@Base+0xff98>
  43373c:	mov	x0, x26
  433740:	str	q0, [sp, #48]
  433744:	bl	44b790 <_obstack_memory_used@@Base+0xff98>
  433748:	mov	x0, x27
  43374c:	str	q0, [sp, #64]
  433750:	bl	44b790 <_obstack_memory_used@@Base+0xff98>
  433754:	ldr	q1, [sp, #48]
  433758:	bl	44a2b8 <_obstack_memory_used@@Base+0xeac0>
  43375c:	ldr	q1, [sp, #64]
  433760:	bl	44ae20 <_obstack_memory_used@@Base+0xf628>
  433764:	ldr	w23, [sp, #20]
  433768:	tbnz	w23, #4, 4337d0 <argp_parse@@Base+0x4b14>
  43376c:	cmp	w28, #0x1
  433770:	b.eq	433960 <argp_parse@@Base+0x4ca4>  // b.none
  433774:	adrp	x8, 453000 <_obstack_memory_used@@Base+0x17808>
  433778:	ldr	q1, [x8, #1424]
  43377c:	str	q0, [sp, #32]
  433780:	bl	44ace0 <_obstack_memory_used@@Base+0xf4e8>
  433784:	ldr	x25, [sp, #24]
  433788:	cmp	w0, #0x0
  43378c:	mov	x27, x19
  433790:	b.ge	43396c <argp_parse@@Base+0x4cb0>  // b.tcont
  433794:	ldr	q0, [sp, #32]
  433798:	bl	44b670 <_obstack_memory_used@@Base+0xfe78>
  43379c:	cmp	w28, #0x0
  4337a0:	mov	x24, x0
  4337a4:	cset	w19, eq  // eq = none
  4337a8:	bl	44b790 <_obstack_memory_used@@Base+0xff98>
  4337ac:	mov	v1.16b, v0.16b
  4337b0:	ldr	q0, [sp, #32]
  4337b4:	bl	44abd8 <_obstack_memory_used@@Base+0xf3e0>
  4337b8:	cmp	w0, #0x0
  4337bc:	cset	w8, ne  // ne = any
  4337c0:	and	w8, w19, w8
  4337c4:	add	x0, x8, x24
  4337c8:	bl	44b790 <_obstack_memory_used@@Base+0xff98>
  4337cc:	b	433970 <argp_parse@@Base+0x4cb4>
  4337d0:	mov	w0, w22
  4337d4:	str	q0, [sp, #32]
  4337d8:	mov	x27, x19
  4337dc:	bl	44b608 <_obstack_memory_used@@Base+0xfe10>
  4337e0:	adrp	x8, 453000 <_obstack_memory_used@@Base+0x17808>
  4337e4:	str	q0, [sp, #48]
  4337e8:	ldr	q0, [x8, #1408]
  4337ec:	mov	w21, wzr
  4337f0:	str	q0, [sp, #64]
  4337f4:	ldp	q1, q0, [sp, #48]
  4337f8:	mov	w19, w21
  4337fc:	bl	44ae20 <_obstack_memory_used@@Base+0xf628>
  433800:	ldr	q1, [sp, #48]
  433804:	add	w21, w21, #0x1
  433808:	str	q0, [sp, #64]
  43380c:	bl	44ae20 <_obstack_memory_used@@Base+0xf628>
  433810:	cmp	w19, #0x6
  433814:	b.hi	433828 <argp_parse@@Base+0x4b6c>  // b.pmore
  433818:	ldr	q1, [sp, #32]
  43381c:	bl	44ace0 <_obstack_memory_used@@Base+0xf4e8>
  433820:	cmp	w0, #0x0
  433824:	b.le	4337f4 <argp_parse@@Base+0x4b38>
  433828:	ldr	q0, [sp, #32]
  43382c:	ldr	q1, [sp, #64]
  433830:	bl	44a2b8 <_obstack_memory_used@@Base+0xeac0>
  433834:	ldr	x25, [sp, #24]
  433838:	cmp	w28, #0x1
  43383c:	adrp	x26, 453000 <_obstack_memory_used@@Base+0x17808>
  433840:	str	q0, [sp, #64]
  433844:	b.eq	43389c <argp_parse@@Base+0x4be0>  // b.none
  433848:	ldr	q1, [x26, #1424]
  43384c:	bl	44ace0 <_obstack_memory_used@@Base+0xf4e8>
  433850:	ldr	q1, [sp, #64]
  433854:	cmp	w0, #0x0
  433858:	mov	v0.16b, v1.16b
  43385c:	b.ge	43389c <argp_parse@@Base+0x4be0>  // b.tcont
  433860:	mov	v0.16b, v1.16b
  433864:	bl	44b670 <_obstack_memory_used@@Base+0xfe78>
  433868:	cmp	w28, #0x0
  43386c:	mov	x25, x0
  433870:	cset	w19, eq  // eq = none
  433874:	bl	44b790 <_obstack_memory_used@@Base+0xff98>
  433878:	mov	v1.16b, v0.16b
  43387c:	ldr	q0, [sp, #64]
  433880:	bl	44abd8 <_obstack_memory_used@@Base+0xf3e0>
  433884:	cmp	w0, #0x0
  433888:	cset	w8, ne  // ne = any
  43388c:	and	w8, w19, w8
  433890:	add	x0, x8, x25
  433894:	ldr	x25, [sp, #24]
  433898:	bl	44b790 <_obstack_memory_used@@Base+0xff98>
  43389c:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  4338a0:	add	x3, x3, #0x5b6
  4338a4:	mov	w1, #0x1                   	// #1
  4338a8:	mov	x2, #0xffffffffffffffff    	// #-1
  4338ac:	mov	x0, x25
  4338b0:	bl	404190 <__sprintf_chk@plt>
  4338b4:	mov	x0, x25
  4338b8:	bl	404170 <strlen@plt>
  4338bc:	ldr	q0, [sp, #64]
  4338c0:	tst	w23, #0x20
  4338c4:	mov	w8, #0x2                   	// #2
  4338c8:	cinc	x8, x8, eq  // eq = none
  4338cc:	add	x8, x8, x24
  4338d0:	cmp	x8, x0
  4338d4:	b.cc	4338f4 <argp_parse@@Base+0x4c38>  // b.lo, b.ul, b.last
  4338d8:	mov	x2, x0
  4338dc:	add	x19, x24, #0x1
  4338e0:	tbz	w23, #3, 4339fc <argp_parse@@Base+0x4d40>
  4338e4:	add	x8, x2, x25
  4338e8:	ldurb	w8, [x8, #-1]
  4338ec:	cmp	w8, #0x30
  4338f0:	b.ne	4339fc <argp_parse@@Base+0x4d40>  // b.any
  4338f4:	adrp	x8, 453000 <_obstack_memory_used@@Base+0x17808>
  4338f8:	ldr	q1, [x8, #1440]
  4338fc:	str	q1, [sp, #64]
  433900:	bl	44ae20 <_obstack_memory_used@@Base+0xf628>
  433904:	cmp	w28, #0x1
  433908:	b.eq	433958 <argp_parse@@Base+0x4c9c>  // b.none
  43390c:	ldr	q1, [x26, #1424]
  433910:	str	q0, [sp, #48]
  433914:	bl	44ace0 <_obstack_memory_used@@Base+0xf4e8>
  433918:	cmp	w0, #0x0
  43391c:	b.ge	4339cc <argp_parse@@Base+0x4d10>  // b.tcont
  433920:	ldr	q0, [sp, #48]
  433924:	bl	44b670 <_obstack_memory_used@@Base+0xfe78>
  433928:	cmp	w28, #0x0
  43392c:	mov	x24, x0
  433930:	cset	w19, eq  // eq = none
  433934:	bl	44b790 <_obstack_memory_used@@Base+0xff98>
  433938:	mov	v1.16b, v0.16b
  43393c:	ldr	q0, [sp, #48]
  433940:	bl	44abd8 <_obstack_memory_used@@Base+0xf3e0>
  433944:	cmp	w0, #0x0
  433948:	cset	w8, ne  // ne = any
  43394c:	and	w8, w19, w8
  433950:	add	x0, x8, x24
  433954:	bl	44b790 <_obstack_memory_used@@Base+0xff98>
  433958:	ldr	q1, [sp, #64]
  43395c:	b	4339d0 <argp_parse@@Base+0x4d14>
  433960:	ldr	x25, [sp, #24]
  433964:	mov	x27, x19
  433968:	b	433970 <argp_parse@@Base+0x4cb4>
  43396c:	ldr	q0, [sp, #32]
  433970:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  433974:	add	x3, x3, #0x5b0
  433978:	mov	w1, #0x1                   	// #1
  43397c:	mov	x2, #0xffffffffffffffff    	// #-1
  433980:	mov	x0, x25
  433984:	bl	404190 <__sprintf_chk@plt>
  433988:	mov	x0, x25
  43398c:	bl	404170 <strlen@plt>
  433990:	mov	x2, x0
  433994:	mov	x19, xzr
  433998:	mov	w21, #0xffffffff            	// #-1
  43399c:	b	4339fc <argp_parse@@Base+0x4d40>
  4339a0:	mov	w9, wzr
  4339a4:	mov	w8, wzr
  4339a8:	mul	x27, x10, x26
  4339ac:	ldr	w23, [sp, #20]
  4339b0:	tbz	w23, #4, 4339c4 <argp_parse@@Base+0x4d08>
  4339b4:	cmp	x27, x22
  4339b8:	b.cs	433a18 <argp_parse@@Base+0x4d5c>  // b.hs, b.nlast
  4339bc:	mov	w21, wzr
  4339c0:	b	433b10 <argp_parse@@Base+0x4e54>
  4339c4:	mov	w21, #0xffffffff            	// #-1
  4339c8:	b	433b10 <argp_parse@@Base+0x4e54>
  4339cc:	ldp	q0, q1, [sp, #48]
  4339d0:	bl	44a2b8 <_obstack_memory_used@@Base+0xeac0>
  4339d4:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  4339d8:	add	x3, x3, #0x5b0
  4339dc:	mov	w1, #0x1                   	// #1
  4339e0:	mov	x2, #0xffffffffffffffff    	// #-1
  4339e4:	mov	x0, x25
  4339e8:	bl	404190 <__sprintf_chk@plt>
  4339ec:	mov	x0, x25
  4339f0:	bl	404170 <strlen@plt>
  4339f4:	mov	x2, x0
  4339f8:	mov	x19, xzr
  4339fc:	sub	x24, x27, x2
  433a00:	mov	x0, x24
  433a04:	mov	x1, x25
  433a08:	bl	404100 <memmove@plt>
  433a0c:	sub	x26, x27, x19
  433a10:	mov	x19, x27
  433a14:	b	433bb8 <argp_parse@@Base+0x4efc>
  433a18:	mov	w12, wzr
  433a1c:	mov	w10, #0xa                   	// #10
  433a20:	mov	w11, #0x2                   	// #2
  433a24:	mov	x13, x27
  433a28:	udiv	x27, x27, x22
  433a2c:	msub	w13, w27, w22, w13
  433a30:	madd	w13, w13, w10, w8
  433a34:	udiv	w8, w13, w22
  433a38:	msub	w13, w8, w22, w13
  433a3c:	lsl	w13, w13, #1
  433a40:	add	w13, w13, w9, lsr #1
  433a44:	cmp	w13, w22
  433a48:	b.cs	433a58 <argp_parse@@Base+0x4d9c>  // b.hs, b.nlast
  433a4c:	cmn	w13, w9
  433a50:	cset	w9, ne  // ne = any
  433a54:	b	433a64 <argp_parse@@Base+0x4da8>
  433a58:	add	w9, w13, w9
  433a5c:	cmp	w22, w9
  433a60:	cinc	w9, w11, cc  // cc = lo, ul, last
  433a64:	cmp	w12, #0x6
  433a68:	add	w21, w12, #0x1
  433a6c:	b.hi	433a7c <argp_parse@@Base+0x4dc0>  // b.pmore
  433a70:	cmp	x27, x22
  433a74:	mov	w12, w21
  433a78:	b.cs	433a24 <argp_parse@@Base+0x4d68>  // b.hs, b.nlast
  433a7c:	cmp	x27, #0x9
  433a80:	b.hi	433b10 <argp_parse@@Base+0x4e54>  // b.pmore
  433a84:	cmp	w28, #0x1
  433a88:	b.ne	433aa0 <argp_parse@@Base+0x4de4>  // b.any
  433a8c:	and	w10, w8, #0x1
  433a90:	add	w10, w9, w10
  433a94:	cmp	w10, #0x2
  433a98:	b.hi	433aa8 <argp_parse@@Base+0x4dec>  // b.pmore
  433a9c:	b	433ad0 <argp_parse@@Base+0x4e14>
  433aa0:	cbnz	w28, 433ad0 <argp_parse@@Base+0x4e14>
  433aa4:	cbz	w9, 433ad0 <argp_parse@@Base+0x4e14>
  433aa8:	add	w8, w8, #0x1
  433aac:	cmp	w8, #0xa
  433ab0:	b.ne	433acc <argp_parse@@Base+0x4e10>  // b.any
  433ab4:	cmp	x27, #0x8
  433ab8:	mov	w8, wzr
  433abc:	b.hi	433b08 <argp_parse@@Base+0x4e4c>  // b.pmore
  433ac0:	add	x27, x27, #0x1
  433ac4:	mov	w9, w8
  433ac8:	b	433ad0 <argp_parse@@Base+0x4e14>
  433acc:	mov	w9, wzr
  433ad0:	tbz	w23, #3, 433ad8 <argp_parse@@Base+0x4e1c>
  433ad4:	cbz	w8, 433b10 <argp_parse@@Base+0x4e54>
  433ad8:	ldr	x10, [sp, #24]
  433adc:	add	w8, w8, #0x30
  433ae0:	mov	x1, x25
  433ae4:	mov	x2, x24
  433ae8:	add	x9, x10, #0x286
  433aec:	sub	x26, x9, x24
  433af0:	mov	x0, x26
  433af4:	strb	w8, [x10, #646]
  433af8:	bl	4040f0 <memcpy@plt>
  433afc:	mov	w9, wzr
  433b00:	mov	w8, wzr
  433b04:	b	433b14 <argp_parse@@Base+0x4e58>
  433b08:	mov	w27, #0xa                   	// #10
  433b0c:	mov	w9, w8
  433b10:	mov	x26, x19
  433b14:	cbz	w28, 433b38 <argp_parse@@Base+0x4e7c>
  433b18:	cmp	w28, #0x1
  433b1c:	b.ne	433b84 <argp_parse@@Base+0x4ec8>  // b.any
  433b20:	and	x10, x27, #0x1
  433b24:	cmn	x10, w9, uxtw
  433b28:	cinc	w8, w8, ne  // ne = any
  433b2c:	cmp	w8, #0x5
  433b30:	b.gt	433b44 <argp_parse@@Base+0x4e88>
  433b34:	b	433b84 <argp_parse@@Base+0x4ec8>
  433b38:	add	w8, w8, w9
  433b3c:	cmp	w8, #0x1
  433b40:	b.lt	433b84 <argp_parse@@Base+0x4ec8>  // b.tstop
  433b44:	cmp	w21, #0x7
  433b48:	add	x27, x27, #0x1
  433b4c:	b.gt	433b84 <argp_parse@@Base+0x4ec8>
  433b50:	tbz	w23, #4, 433b84 <argp_parse@@Base+0x4ec8>
  433b54:	cmp	x27, x22
  433b58:	b.ne	433b84 <argp_parse@@Base+0x4ec8>  // b.any
  433b5c:	add	w21, w21, #0x1
  433b60:	tbnz	w23, #3, 433b80 <argp_parse@@Base+0x4ec4>
  433b64:	mov	w8, #0x30                  	// #48
  433b68:	strb	w8, [x26, #-1]!
  433b6c:	sub	x26, x26, x24
  433b70:	mov	x0, x26
  433b74:	mov	x1, x25
  433b78:	mov	x2, x24
  433b7c:	bl	4040f0 <memcpy@plt>
  433b80:	mov	w27, #0x1                   	// #1
  433b84:	ldr	x25, [sp, #24]
  433b88:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  433b8c:	movk	x8, #0xcccd
  433b90:	mov	w9, #0xa                   	// #10
  433b94:	mov	x24, x26
  433b98:	umulh	x10, x27, x8
  433b9c:	lsr	x10, x10, #3
  433ba0:	msub	w11, w10, w9, w27
  433ba4:	orr	w11, w11, #0x30
  433ba8:	cmp	x27, #0x9
  433bac:	strb	w11, [x24, #-1]!
  433bb0:	mov	x27, x10
  433bb4:	b.hi	433b98 <argp_parse@@Base+0x4edc>  // b.pmore
  433bb8:	tbnz	w23, #2, 433bc8 <argp_parse@@Base+0x4f0c>
  433bbc:	ldr	x9, [sp, #8]
  433bc0:	tbnz	w23, #7, 433cb4 <argp_parse@@Base+0x4ff8>
  433bc4:	b	433d50 <argp_parse@@Base+0x5094>
  433bc8:	ldr	x0, [sp]
  433bcc:	str	x22, [sp, #48]
  433bd0:	str	x19, [sp, #64]
  433bd4:	sub	x28, x26, x24
  433bd8:	bl	404170 <strlen@plt>
  433bdc:	mov	x25, x0
  433be0:	sub	x0, x29, #0x2c
  433be4:	mov	w3, #0x29                  	// #41
  433be8:	mov	x1, x24
  433bec:	mov	x2, x28
  433bf0:	sub	x19, x29, #0x2c
  433bf4:	bl	404400 <__memcpy_chk@plt>
  433bf8:	ldrb	w8, [x20]
  433bfc:	cmp	x8, #0x0
  433c00:	cset	w23, eq  // eq = none
  433c04:	cmp	w8, #0xff
  433c08:	csel	x9, x28, x8, eq  // eq = none
  433c0c:	cmp	w8, #0x0
  433c10:	csinv	x8, x9, xzr, ne  // ne = any
  433c14:	cmp	x8, x28
  433c18:	csel	x27, x28, x8, hi  // hi = pmore
  433c1c:	sub	x24, x26, x27
  433c20:	sub	x26, x28, x27
  433c24:	add	x1, x19, x26
  433c28:	mov	x0, x24
  433c2c:	mov	x2, x27
  433c30:	bl	4040f0 <memcpy@plt>
  433c34:	cbz	x26, 433c9c <argp_parse@@Base+0x4fe0>
  433c38:	ldr	x22, [sp]
  433c3c:	neg	x28, x25
  433c40:	add	x24, x24, x28
  433c44:	tst	w23, #0x1
  433c48:	mov	x0, x24
  433c4c:	mov	x1, x22
  433c50:	mov	x2, x25
  433c54:	cinc	x20, x20, eq  // eq = none
  433c58:	bl	4040f0 <memcpy@plt>
  433c5c:	ldrb	w8, [x20]
  433c60:	cmp	x8, #0x0
  433c64:	cset	w23, eq  // eq = none
  433c68:	cmp	w8, #0xff
  433c6c:	csel	x9, x26, x8, eq  // eq = none
  433c70:	cmp	w8, #0x0
  433c74:	csel	x8, x27, x9, eq  // eq = none
  433c78:	cmp	x26, x8
  433c7c:	csel	x27, x26, x8, cc  // cc = lo, ul, last
  433c80:	sub	x24, x24, x27
  433c84:	sub	x26, x26, x27
  433c88:	add	x1, x19, x26
  433c8c:	mov	x0, x24
  433c90:	mov	x2, x27
  433c94:	bl	4040f0 <memcpy@plt>
  433c98:	cbnz	x26, 433c40 <argp_parse@@Base+0x4f84>
  433c9c:	ldr	w23, [sp, #20]
  433ca0:	ldr	x19, [sp, #64]
  433ca4:	ldr	x25, [sp, #24]
  433ca8:	ldr	x9, [sp, #8]
  433cac:	ldr	x22, [sp, #48]
  433cb0:	tbz	w23, #7, 433d50 <argp_parse@@Base+0x5094>
  433cb4:	tbz	w21, #31, 433cf0 <argp_parse@@Base+0x5034>
  433cb8:	cmp	x9, #0x2
  433cbc:	b.cc	433ce4 <argp_parse@@Base+0x5028>  // b.lo, b.ul, b.last
  433cc0:	mov	w21, wzr
  433cc4:	mov	w8, #0x1                   	// #1
  433cc8:	cmp	w21, #0x7
  433ccc:	b.eq	433cec <argp_parse@@Base+0x5030>  // b.none
  433cd0:	mul	x8, x8, x22
  433cd4:	cmp	x8, x9
  433cd8:	add	w21, w21, #0x1
  433cdc:	b.cc	433cc8 <argp_parse@@Base+0x500c>  // b.lo, b.ul, b.last
  433ce0:	b	433cf0 <argp_parse@@Base+0x5034>
  433ce4:	mov	w21, wzr
  433ce8:	b	433cf0 <argp_parse@@Base+0x5034>
  433cec:	mov	w21, #0x8                   	// #8
  433cf0:	and	w8, w23, #0x100
  433cf4:	tbz	w23, #6, 433d0c <argp_parse@@Base+0x5050>
  433cf8:	orr	w9, w21, w8
  433cfc:	cbz	w9, 433d0c <argp_parse@@Base+0x5050>
  433d00:	add	x19, x25, #0x288
  433d04:	mov	w9, #0x20                  	// #32
  433d08:	strb	w9, [x25, #647]
  433d0c:	cbz	w21, 433d34 <argp_parse@@Base+0x5078>
  433d10:	tbnz	w23, #5, 433d24 <argp_parse@@Base+0x5068>
  433d14:	cmp	w21, #0x1
  433d18:	b.ne	433d24 <argp_parse@@Base+0x5068>  // b.any
  433d1c:	mov	w9, #0x6b                  	// #107
  433d20:	b	433d30 <argp_parse@@Base+0x5074>
  433d24:	adrp	x9, 453000 <_obstack_memory_used@@Base+0x17808>
  433d28:	add	x9, x9, #0x608
  433d2c:	ldrb	w9, [x9, w21, sxtw]
  433d30:	strb	w9, [x19], #1
  433d34:	cbz	w8, 433d50 <argp_parse@@Base+0x5094>
  433d38:	tbz	w23, #5, 433d48 <argp_parse@@Base+0x508c>
  433d3c:	cbz	w21, 433d48 <argp_parse@@Base+0x508c>
  433d40:	mov	w8, #0x69                  	// #105
  433d44:	strb	w8, [x19], #1
  433d48:	mov	w8, #0x42                  	// #66
  433d4c:	strb	w8, [x19], #1
  433d50:	strb	wzr, [x19]
  433d54:	mov	x0, x24
  433d58:	ldp	x20, x19, [sp, #208]
  433d5c:	ldp	x22, x21, [sp, #192]
  433d60:	ldp	x24, x23, [sp, #176]
  433d64:	ldp	x26, x25, [sp, #160]
  433d68:	ldp	x28, x27, [sp, #144]
  433d6c:	ldp	x29, x30, [sp, #128]
  433d70:	add	sp, sp, #0xe0
  433d74:	ret
  433d78:	stp	x29, x30, [sp, #-64]!
  433d7c:	stp	x20, x19, [sp, #48]
  433d80:	mov	x19, x2
  433d84:	mov	x20, x1
  433d88:	str	x23, [sp, #16]
  433d8c:	stp	x22, x21, [sp, #32]
  433d90:	mov	x29, sp
  433d94:	cbnz	x0, 433db8 <argp_parse@@Base+0x50fc>
  433d98:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x17808>
  433d9c:	add	x0, x0, #0x5bc
  433da0:	bl	404d10 <getenv@plt>
  433da4:	cbnz	x0, 433db8 <argp_parse@@Base+0x50fc>
  433da8:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x17808>
  433dac:	add	x0, x0, #0x5c7
  433db0:	bl	404d10 <getenv@plt>
  433db4:	cbz	x0, 433ea8 <argp_parse@@Base+0x51ec>
  433db8:	mov	x8, x0
  433dbc:	ldrb	w9, [x8], #1
  433dc0:	adrp	x22, 453000 <_obstack_memory_used@@Base+0x17808>
  433dc4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x17808>
  433dc8:	add	x22, x22, #0x630
  433dcc:	cmp	w9, #0x27
  433dd0:	csel	x21, x8, x0, eq  // eq = none
  433dd4:	cset	w9, eq  // eq = none
  433dd8:	add	x1, x1, #0x618
  433ddc:	mov	w3, #0x4                   	// #4
  433de0:	mov	x0, x21
  433de4:	mov	x2, x22
  433de8:	lsl	w23, w9, #2
  433dec:	bl	42bd5c <wcrtomb@plt+0x26f5c>
  433df0:	tbnz	w0, #31, 433e14 <argp_parse@@Base+0x5158>
  433df4:	sbfiz	x8, x0, #2, #32
  433df8:	ldr	w8, [x22, x8]
  433dfc:	mov	w9, #0x1                   	// #1
  433e00:	str	x9, [x19]
  433e04:	orr	w23, w8, w23
  433e08:	mov	w0, wzr
  433e0c:	str	w23, [x20]
  433e10:	b	433e38 <argp_parse@@Base+0x517c>
  433e14:	adrp	x4, 453000 <_obstack_memory_used@@Base+0x17808>
  433e18:	add	x4, x4, #0x5d1
  433e1c:	add	x1, x29, #0x18
  433e20:	mov	x0, x21
  433e24:	mov	w2, wzr
  433e28:	mov	x3, x19
  433e2c:	bl	43aa40 <argp_parse@@Base+0xbd84>
  433e30:	cbz	w0, 433e78 <argp_parse@@Base+0x51bc>
  433e34:	str	wzr, [x20]
  433e38:	ldr	x8, [x19]
  433e3c:	cbnz	x8, 433e64 <argp_parse@@Base+0x51a8>
  433e40:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x17808>
  433e44:	add	x0, x0, #0x5f5
  433e48:	bl	404d10 <getenv@plt>
  433e4c:	cmp	x0, #0x0
  433e50:	mov	w8, #0x200                 	// #512
  433e54:	mov	w9, #0x400                 	// #1024
  433e58:	csel	x8, x9, x8, eq  // eq = none
  433e5c:	mov	w0, #0x4                   	// #4
  433e60:	str	x8, [x19]
  433e64:	ldp	x20, x19, [sp, #48]
  433e68:	ldp	x22, x21, [sp, #32]
  433e6c:	ldr	x23, [sp, #16]
  433e70:	ldp	x29, x30, [sp], #64
  433e74:	ret
  433e78:	ldrb	w8, [x21]
  433e7c:	sub	w8, w8, #0x30
  433e80:	cmp	w8, #0xa
  433e84:	b.cc	433e08 <argp_parse@@Base+0x514c>  // b.lo, b.ul, b.last
  433e88:	ldr	x8, [x29, #24]
  433e8c:	cmp	x8, x21
  433e90:	b.eq	433ed0 <argp_parse@@Base+0x5214>  // b.none
  433e94:	ldrb	w9, [x21, #1]!
  433e98:	sub	w9, w9, #0x30
  433e9c:	cmp	w9, #0xa
  433ea0:	b.cs	433e8c <argp_parse@@Base+0x51d0>  // b.hs, b.nlast
  433ea4:	b	433e08 <argp_parse@@Base+0x514c>
  433ea8:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x17808>
  433eac:	add	x0, x0, #0x5f5
  433eb0:	bl	404d10 <getenv@plt>
  433eb4:	cmp	x0, #0x0
  433eb8:	mov	w8, #0x200                 	// #512
  433ebc:	mov	w9, #0x400                 	// #1024
  433ec0:	csel	x8, x9, x8, eq  // eq = none
  433ec4:	mov	w23, wzr
  433ec8:	str	x8, [x19]
  433ecc:	b	433e08 <argp_parse@@Base+0x514c>
  433ed0:	ldurb	w9, [x8, #-1]
  433ed4:	orr	w10, w23, #0x80
  433ed8:	orr	w23, w23, #0x180
  433edc:	cmp	w9, #0x42
  433ee0:	csel	w9, w23, w10, eq  // eq = none
  433ee4:	b.ne	433ef4 <argp_parse@@Base+0x5238>  // b.any
  433ee8:	ldurb	w8, [x8, #-2]
  433eec:	cmp	w8, #0x69
  433ef0:	b.ne	433e08 <argp_parse@@Base+0x514c>  // b.any
  433ef4:	orr	w23, w9, #0x20
  433ef8:	b	433e08 <argp_parse@@Base+0x514c>
  433efc:	mov	x8, x0
  433f00:	mov	x0, x1
  433f04:	strb	wzr, [x0, #20]!
  433f08:	tbnz	x8, #63, 433f44 <argp_parse@@Base+0x5288>
  433f0c:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  433f10:	movk	x9, #0x6667
  433f14:	mov	w10, #0xa                   	// #10
  433f18:	smulh	x11, x8, x9
  433f1c:	asr	x13, x11, #2
  433f20:	add	x11, x13, x11, lsr #63
  433f24:	add	x12, x8, #0x9
  433f28:	msub	w8, w11, w10, w8
  433f2c:	add	w8, w8, #0x30
  433f30:	cmp	x12, #0x12
  433f34:	strb	w8, [x0, #-1]!
  433f38:	mov	x8, x11
  433f3c:	b.hi	433f18 <argp_parse@@Base+0x525c>  // b.pmore
  433f40:	ret
  433f44:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  433f48:	add	x0, x1, #0x13
  433f4c:	movk	x9, #0x6667
  433f50:	mov	w10, #0xa                   	// #10
  433f54:	smulh	x11, x8, x9
  433f58:	asr	x13, x11, #2
  433f5c:	neg	w12, w8
  433f60:	add	x11, x13, x11, lsr #63
  433f64:	madd	w12, w11, w10, w12
  433f68:	add	x8, x8, #0x9
  433f6c:	add	w12, w12, #0x30
  433f70:	cmp	x8, #0x12
  433f74:	strb	w12, [x0], #-1
  433f78:	mov	x8, x11
  433f7c:	b.hi	433f54 <argp_parse@@Base+0x5298>  // b.pmore
  433f80:	mov	w8, #0x2d                  	// #45
  433f84:	strb	w8, [x0]
  433f88:	ret
  433f8c:	mov	x8, x0
  433f90:	mov	x0, x1
  433f94:	strb	wzr, [x0, #20]!
  433f98:	tbnz	x8, #63, 433fd4 <argp_parse@@Base+0x5318>
  433f9c:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  433fa0:	movk	x9, #0x6667
  433fa4:	mov	w10, #0xa                   	// #10
  433fa8:	smulh	x11, x8, x9
  433fac:	asr	x13, x11, #2
  433fb0:	add	x11, x13, x11, lsr #63
  433fb4:	add	x12, x8, #0x9
  433fb8:	msub	w8, w11, w10, w8
  433fbc:	add	w8, w8, #0x30
  433fc0:	cmp	x12, #0x12
  433fc4:	strb	w8, [x0, #-1]!
  433fc8:	mov	x8, x11
  433fcc:	b.hi	433fa8 <argp_parse@@Base+0x52ec>  // b.pmore
  433fd0:	ret
  433fd4:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  433fd8:	add	x0, x1, #0x13
  433fdc:	movk	x9, #0x6667
  433fe0:	mov	w10, #0xa                   	// #10
  433fe4:	smulh	x11, x8, x9
  433fe8:	asr	x13, x11, #2
  433fec:	neg	w12, w8
  433ff0:	add	x11, x13, x11, lsr #63
  433ff4:	madd	w12, w11, w10, w12
  433ff8:	add	x8, x8, #0x9
  433ffc:	add	w12, w12, #0x30
  434000:	cmp	x8, #0x12
  434004:	strb	w12, [x0], #-1
  434008:	mov	x8, x11
  43400c:	b.hi	433fe4 <argp_parse@@Base+0x5328>  // b.pmore
  434010:	mov	w8, #0x2d                  	// #45
  434014:	strb	w8, [x0]
  434018:	ret
  43401c:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  434020:	movk	x8, #0xcccd
  434024:	strb	wzr, [x1, #20]!
  434028:	mov	w9, #0xa                   	// #10
  43402c:	umulh	x10, x0, x8
  434030:	lsr	x10, x10, #3
  434034:	msub	w11, w10, w9, w0
  434038:	orr	w11, w11, #0x30
  43403c:	cmp	x0, #0x9
  434040:	strb	w11, [x1, #-1]!
  434044:	mov	x0, x10
  434048:	b.hi	43402c <argp_parse@@Base+0x5370>  // b.pmore
  43404c:	mov	x0, x1
  434050:	ret
  434054:	stp	x29, x30, [sp, #-16]!
  434058:	mov	w0, #0xe                   	// #14
  43405c:	mov	x29, sp
  434060:	bl	404490 <nl_langinfo@plt>
  434064:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  434068:	add	x8, x8, #0x3ee
  43406c:	cmp	x0, #0x0
  434070:	csel	x8, x8, x0, eq  // eq = none
  434074:	ldrb	w9, [x8]
  434078:	adrp	x10, 453000 <_obstack_memory_used@@Base+0x17808>
  43407c:	add	x10, x10, #0x638
  434080:	cmp	w9, #0x0
  434084:	csel	x0, x10, x8, eq  // eq = none
  434088:	ldp	x29, x30, [sp], #16
  43408c:	ret
  434090:	sub	sp, sp, #0xc0
  434094:	cmp	x0, x1
  434098:	stp	x29, x30, [sp, #128]
  43409c:	str	x23, [sp, #144]
  4340a0:	stp	x22, x21, [sp, #160]
  4340a4:	stp	x20, x19, [sp, #176]
  4340a8:	add	x29, sp, #0x80
  4340ac:	b.eq	434188 <argp_parse@@Base+0x54cc>  // b.none
  4340b0:	mov	x19, x1
  4340b4:	mov	x20, x0
  4340b8:	bl	4049e0 <__ctype_get_mb_cur_max@plt>
  4340bc:	cmp	x0, #0x1
  4340c0:	b.ls	434190 <argp_parse@@Base+0x54d4>  // b.plast
  4340c4:	str	x20, [sp, #80]
  4340c8:	strb	wzr, [sp, #64]
  4340cc:	stur	xzr, [sp, #68]
  4340d0:	strb	wzr, [sp, #76]
  4340d4:	str	x19, [sp, #16]
  4340d8:	strb	wzr, [sp]
  4340dc:	stur	xzr, [sp, #4]
  4340e0:	add	x0, sp, #0x40
  4340e4:	strb	wzr, [sp, #12]
  4340e8:	bl	434294 <argp_parse@@Base+0x55d8>
  4340ec:	ldrb	w8, [sp, #96]
  4340f0:	cbz	w8, 4340fc <argp_parse@@Base+0x5440>
  4340f4:	ldr	w8, [sp, #100]
  4340f8:	cbz	w8, 4341ec <argp_parse@@Base+0x5530>
  4340fc:	mov	x0, sp
  434100:	bl	434294 <argp_parse@@Base+0x55d8>
  434104:	ldrb	w8, [sp, #32]
  434108:	cbz	w8, 434114 <argp_parse@@Base+0x5458>
  43410c:	ldr	w9, [sp, #36]
  434110:	cbz	w9, 4341ec <argp_parse@@Base+0x5530>
  434114:	ldrb	w9, [sp, #96]
  434118:	cbz	w9, 434144 <argp_parse@@Base+0x5488>
  43411c:	cbz	w8, 434248 <argp_parse@@Base+0x558c>
  434120:	ldr	w0, [sp, #100]
  434124:	bl	404d80 <towlower@plt>
  434128:	ldr	w8, [sp, #36]
  43412c:	mov	w19, w0
  434130:	mov	w0, w8
  434134:	bl	404d80 <towlower@plt>
  434138:	sub	w0, w19, w0
  43413c:	cbz	w0, 434168 <argp_parse@@Base+0x54ac>
  434140:	b	434230 <argp_parse@@Base+0x5574>
  434144:	cbnz	w8, 434250 <argp_parse@@Base+0x5594>
  434148:	ldr	x2, [sp, #88]
  43414c:	ldr	x8, [sp, #24]
  434150:	cmp	x2, x8
  434154:	b.ne	434258 <argp_parse@@Base+0x559c>  // b.any
  434158:	ldr	x0, [sp, #80]
  43415c:	ldr	x1, [sp, #16]
  434160:	bl	4048c0 <memcmp@plt>
  434164:	cbnz	w0, 434230 <argp_parse@@Base+0x5574>
  434168:	ldp	x9, x8, [sp, #80]
  43416c:	ldp	x11, x10, [sp, #16]
  434170:	strb	wzr, [sp, #76]
  434174:	add	x8, x9, x8
  434178:	add	x9, x11, x10
  43417c:	str	x8, [sp, #80]
  434180:	str	x9, [sp, #16]
  434184:	b	4340e0 <argp_parse@@Base+0x5424>
  434188:	mov	w0, wzr
  43418c:	b	434230 <argp_parse@@Base+0x5574>
  434190:	bl	404930 <__ctype_b_loc@plt>
  434194:	ldr	x22, [x0]
  434198:	ldrb	w21, [x20]
  43419c:	ldrh	w8, [x22, x21, lsl #1]
  4341a0:	tbz	w8, #8, 4341b4 <argp_parse@@Base+0x54f8>
  4341a4:	bl	404390 <__ctype_tolower_loc@plt>
  4341a8:	ldr	x8, [x0]
  4341ac:	lsl	x9, x21, #2
  4341b0:	ldrb	w21, [x8, x9]
  4341b4:	ldrb	w23, [x19]
  4341b8:	ldrh	w8, [x22, x23, lsl #1]
  4341bc:	tbz	w8, #8, 4341d0 <argp_parse@@Base+0x5514>
  4341c0:	bl	404390 <__ctype_tolower_loc@plt>
  4341c4:	ldr	x8, [x0]
  4341c8:	lsl	x9, x23, #2
  4341cc:	ldrb	w23, [x8, x9]
  4341d0:	cbz	w21, 4341e4 <argp_parse@@Base+0x5528>
  4341d4:	add	x20, x20, #0x1
  4341d8:	cmp	w21, w23
  4341dc:	add	x19, x19, #0x1
  4341e0:	b.eq	434198 <argp_parse@@Base+0x54dc>  // b.none
  4341e4:	sub	w0, w21, w23
  4341e8:	b	434230 <argp_parse@@Base+0x5574>
  4341ec:	add	x0, sp, #0x40
  4341f0:	bl	434294 <argp_parse@@Base+0x55d8>
  4341f4:	ldrb	w8, [sp, #96]
  4341f8:	mov	w0, #0x1                   	// #1
  4341fc:	cbz	w8, 434230 <argp_parse@@Base+0x5574>
  434200:	ldr	w8, [sp, #100]
  434204:	cbnz	w8, 434230 <argp_parse@@Base+0x5574>
  434208:	mov	x0, sp
  43420c:	bl	434294 <argp_parse@@Base+0x55d8>
  434210:	ldrb	w8, [sp, #32]
  434214:	ldr	w9, [sp, #36]
  434218:	cmp	w8, #0x0
  43421c:	cset	w8, eq  // eq = none
  434220:	cmp	w9, #0x0
  434224:	cset	w9, ne  // ne = any
  434228:	orr	w8, w8, w9
  43422c:	sbfx	w0, w8, #0, #1
  434230:	ldp	x20, x19, [sp, #176]
  434234:	ldp	x22, x21, [sp, #160]
  434238:	ldr	x23, [sp, #144]
  43423c:	ldp	x29, x30, [sp, #128]
  434240:	add	sp, sp, #0xc0
  434244:	ret
  434248:	mov	w0, #0xffffffff            	// #-1
  43424c:	b	434230 <argp_parse@@Base+0x5574>
  434250:	mov	w0, #0x1                   	// #1
  434254:	b	434230 <argp_parse@@Base+0x5574>
  434258:	ldr	x0, [sp, #80]
  43425c:	ldr	x1, [sp, #16]
  434260:	cmp	x2, x8
  434264:	b.cs	43427c <argp_parse@@Base+0x55c0>  // b.hs, b.nlast
  434268:	bl	4048c0 <memcmp@plt>
  43426c:	cmp	w0, #0x1
  434270:	mov	w8, #0xffffffff            	// #-1
  434274:	cneg	w0, w8, ge  // ge = tcont
  434278:	b	434230 <argp_parse@@Base+0x5574>
  43427c:	mov	x2, x8
  434280:	bl	4048c0 <memcmp@plt>
  434284:	cmp	w0, #0x0
  434288:	mov	w8, #0x1                   	// #1
  43428c:	cneg	w0, w8, lt  // lt = tstop
  434290:	b	434230 <argp_parse@@Base+0x5574>
  434294:	stp	x29, x30, [sp, #-48]!
  434298:	stp	x22, x21, [sp, #16]
  43429c:	stp	x20, x19, [sp, #32]
  4342a0:	ldrb	w8, [x0, #12]
  4342a4:	mov	x29, sp
  4342a8:	cbnz	w8, 434394 <argp_parse@@Base+0x56d8>
  4342ac:	ldrb	w8, [x0]
  4342b0:	ldr	x20, [x0, #16]
  4342b4:	mov	x19, x0
  4342b8:	cbz	w8, 43430c <argp_parse@@Base+0x5650>
  4342bc:	add	x22, x19, #0x24
  4342c0:	bl	4049e0 <__ctype_get_mb_cur_max@plt>
  4342c4:	mov	x1, x0
  4342c8:	mov	x0, x20
  4342cc:	bl	43a2e4 <argp_parse@@Base+0xb628>
  4342d0:	add	x21, x19, #0x4
  4342d4:	mov	x2, x0
  4342d8:	mov	x0, x22
  4342dc:	mov	x1, x20
  4342e0:	mov	x3, x21
  4342e4:	bl	43b470 <argp_parse@@Base+0xc7b4>
  4342e8:	cmn	x0, #0x2
  4342ec:	str	x0, [x19, #24]
  4342f0:	b.eq	43437c <argp_parse@@Base+0x56c0>  // b.none
  4342f4:	cbz	x0, 434344 <argp_parse@@Base+0x5688>
  4342f8:	cmn	x0, #0x1
  4342fc:	b.ne	434360 <argp_parse@@Base+0x56a4>  // b.any
  434300:	mov	w8, #0x1                   	// #1
  434304:	str	x8, [x19, #24]
  434308:	b	434388 <argp_parse@@Base+0x56cc>
  43430c:	ldrb	w8, [x20]
  434310:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x19808>
  434314:	add	x10, x10, #0xfe0
  434318:	lsr	w9, w8, #3
  43431c:	and	x9, x9, #0x1c
  434320:	ldr	w9, [x10, x9]
  434324:	lsr	w8, w9, w8
  434328:	tbz	w8, #0, 4343a4 <argp_parse@@Base+0x56e8>
  43432c:	mov	w8, #0x1                   	// #1
  434330:	str	x8, [x19, #24]
  434334:	ldrb	w9, [x20]
  434338:	strb	w8, [x19, #32]
  43433c:	str	w9, [x19, #36]
  434340:	b	43438c <argp_parse@@Base+0x56d0>
  434344:	ldr	x8, [x19, #16]
  434348:	mov	w9, #0x1                   	// #1
  43434c:	str	x9, [x19, #24]
  434350:	ldrb	w8, [x8]
  434354:	cbnz	w8, 4343bc <argp_parse@@Base+0x5700>
  434358:	ldr	w8, [x22]
  43435c:	cbnz	w8, 4343dc <argp_parse@@Base+0x5720>
  434360:	mov	w8, #0x1                   	// #1
  434364:	mov	x0, x21
  434368:	strb	w8, [x19, #32]
  43436c:	bl	404870 <mbsinit@plt>
  434370:	cbz	w0, 43438c <argp_parse@@Base+0x56d0>
  434374:	strb	wzr, [x19]
  434378:	b	43438c <argp_parse@@Base+0x56d0>
  43437c:	ldr	x0, [x19, #16]
  434380:	bl	404170 <strlen@plt>
  434384:	str	x0, [x19, #24]
  434388:	strb	wzr, [x19, #32]
  43438c:	mov	w8, #0x1                   	// #1
  434390:	strb	w8, [x19, #12]
  434394:	ldp	x20, x19, [sp, #32]
  434398:	ldp	x22, x21, [sp, #16]
  43439c:	ldp	x29, x30, [sp], #48
  4343a0:	ret
  4343a4:	add	x0, x19, #0x4
  4343a8:	bl	404870 <mbsinit@plt>
  4343ac:	cbz	w0, 4343fc <argp_parse@@Base+0x5740>
  4343b0:	mov	w8, #0x1                   	// #1
  4343b4:	strb	w8, [x19]
  4343b8:	b	4342bc <argp_parse@@Base+0x5600>
  4343bc:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x17808>
  4343c0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x17808>
  4343c4:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  4343c8:	add	x0, x0, #0x691
  4343cc:	add	x1, x1, #0x655
  4343d0:	add	x3, x3, #0x661
  4343d4:	mov	w2, #0xb2                  	// #178
  4343d8:	bl	404cd0 <__assert_fail@plt>
  4343dc:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x17808>
  4343e0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x17808>
  4343e4:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  4343e8:	add	x0, x0, #0x6a8
  4343ec:	add	x1, x1, #0x655
  4343f0:	add	x3, x3, #0x661
  4343f4:	mov	w2, #0xb3                  	// #179
  4343f8:	bl	404cd0 <__assert_fail@plt>
  4343fc:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x17808>
  434400:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x17808>
  434404:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  434408:	add	x0, x0, #0x63e
  43440c:	add	x1, x1, #0x655
  434410:	add	x3, x3, #0x661
  434414:	mov	w2, #0x96                  	// #150
  434418:	bl	404cd0 <__assert_fail@plt>
  43441c:	ldr	x8, [x0, #16]
  434420:	add	x8, x8, x1
  434424:	str	x8, [x0, #16]
  434428:	ret
  43442c:	stp	x29, x30, [sp, #-48]!
  434430:	stp	x20, x19, [sp, #32]
  434434:	ldrb	w8, [x1]
  434438:	mov	x19, x1
  43443c:	mov	x20, x0
  434440:	str	x21, [sp, #16]
  434444:	mov	x29, sp
  434448:	strb	w8, [x0]
  43444c:	cbz	w8, 43445c <argp_parse@@Base+0x57a0>
  434450:	ldur	x8, [x19, #4]
  434454:	stur	x8, [x20, #4]
  434458:	b	434460 <argp_parse@@Base+0x57a4>
  43445c:	stur	xzr, [x20, #4]
  434460:	ldrb	w8, [x19, #12]
  434464:	strb	w8, [x20, #12]
  434468:	ldr	x1, [x19, #16]
  43446c:	add	x8, x19, #0x28
  434470:	cmp	x1, x8
  434474:	b.ne	43448c <argp_parse@@Base+0x57d0>  // b.any
  434478:	ldr	x2, [x19, #24]
  43447c:	add	x21, x20, #0x28
  434480:	mov	x0, x21
  434484:	bl	4040f0 <memcpy@plt>
  434488:	mov	x1, x21
  43448c:	str	x1, [x20, #16]
  434490:	ldr	x8, [x19, #24]
  434494:	str	x8, [x20, #24]
  434498:	ldrb	w8, [x19, #32]
  43449c:	strb	w8, [x20, #32]
  4344a0:	cbz	w8, 4344ac <argp_parse@@Base+0x57f0>
  4344a4:	ldr	w8, [x19, #36]
  4344a8:	str	w8, [x20, #36]
  4344ac:	ldp	x20, x19, [sp, #32]
  4344b0:	ldr	x21, [sp, #16]
  4344b4:	ldp	x29, x30, [sp], #48
  4344b8:	ret
  4344bc:	stp	x29, x30, [sp, #-48]!
  4344c0:	stp	x20, x19, [sp, #32]
  4344c4:	ldrb	w10, [x0]
  4344c8:	mov	x19, x0
  4344cc:	str	x21, [sp, #16]
  4344d0:	mov	x29, sp
  4344d4:	and	w8, w10, #0xf8
  4344d8:	cmp	w8, #0x30
  4344dc:	b.ne	434550 <argp_parse@@Base+0x5894>  // b.any
  4344e0:	mov	w20, wzr
  4344e4:	mov	x8, x19
  4344e8:	lsl	w9, w20, #3
  4344ec:	add	w9, w9, w10, uxtb
  4344f0:	sub	w20, w9, #0x30
  4344f4:	cmp	w20, #0xfff
  4344f8:	b.hi	4347f0 <argp_parse@@Base+0x5b34>  // b.pmore
  4344fc:	ldrb	w10, [x8, #1]
  434500:	add	x9, x8, #0x1
  434504:	and	w8, w10, #0xf8
  434508:	cmp	w8, #0x30
  43450c:	mov	x8, x9
  434510:	b.eq	4344e8 <argp_parse@@Base+0x582c>  // b.none
  434514:	cbnz	w10, 4347f0 <argp_parse@@Base+0x5b34>
  434518:	sub	x8, x9, x19
  43451c:	and	w9, w20, #0xc00
  434520:	orr	w9, w9, #0x3ff
  434524:	cmp	x8, #0x5
  434528:	mov	w19, #0xfff                 	// #4095
  43452c:	mov	w0, #0x20                  	// #32
  434530:	csel	w21, w9, w19, lt  // lt = tstop
  434534:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  434538:	mov	w8, #0x13d                 	// #317
  43453c:	stp	w19, w20, [x0, #4]
  434540:	str	w21, [x0, #12]
  434544:	strh	w8, [x0]
  434548:	strb	wzr, [x0, #17]
  43454c:	b	4347f4 <argp_parse@@Base+0x5b38>
  434550:	mov	w9, #0x1                   	// #1
  434554:	mov	w8, #0x1                   	// #1
  434558:	and	w10, w10, #0xff
  43455c:	cmp	w10, #0x2c
  434560:	b.le	43457c <argp_parse@@Base+0x58c0>
  434564:	cmp	w10, #0x2d
  434568:	b.eq	434594 <argp_parse@@Base+0x58d8>  // b.none
  43456c:	cmp	w10, #0x3d
  434570:	mov	w11, #0x1                   	// #1
  434574:	b.eq	434598 <argp_parse@@Base+0x58dc>  // b.none
  434578:	b	43458c <argp_parse@@Base+0x58d0>
  43457c:	cmp	w10, #0x2b
  434580:	mov	w11, #0x1                   	// #1
  434584:	b.eq	434598 <argp_parse@@Base+0x58dc>  // b.none
  434588:	cbz	w10, 4345a8 <argp_parse@@Base+0x58ec>
  43458c:	mov	x11, xzr
  434590:	b	434598 <argp_parse@@Base+0x58dc>
  434594:	mov	w11, #0x1                   	// #1
  434598:	ldrb	w10, [x19, x9]
  43459c:	add	x8, x11, x8
  4345a0:	add	x9, x9, #0x1
  4345a4:	b	434558 <argp_parse@@Base+0x589c>
  4345a8:	lsr	x9, x8, #59
  4345ac:	cbnz	x9, 434810 <argp_parse@@Base+0x5b54>
  4345b0:	lsl	x0, x8, #4
  4345b4:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  4345b8:	adrp	x8, 453000 <_obstack_memory_used@@Base+0x17808>
  4345bc:	mov	x12, xzr
  4345c0:	add	x8, x8, #0x6ba
  4345c4:	mov	w9, #0x124                 	// #292
  4345c8:	mov	w10, #0x92                  	// #146
  4345cc:	mov	w11, #0x49                  	// #73
  4345d0:	mov	w13, wzr
  4345d4:	ldrb	w14, [x19]
  4345d8:	cmp	w14, #0x66
  4345dc:	b.gt	4345f8 <argp_parse@@Base+0x593c>
  4345e0:	cmp	w14, #0x60
  4345e4:	b.le	434630 <argp_parse@@Base+0x5974>
  4345e8:	cmp	w14, #0x61
  4345ec:	b.ne	4347ec <argp_parse@@Base+0x5b30>  // b.any
  4345f0:	mov	w14, #0xfff                 	// #4095
  4345f4:	b	434624 <argp_parse@@Base+0x5968>
  4345f8:	cmp	w14, #0x67
  4345fc:	b.eq	434618 <argp_parse@@Base+0x595c>  // b.none
  434600:	cmp	w14, #0x6f
  434604:	b.eq	434620 <argp_parse@@Base+0x5964>  // b.none
  434608:	cmp	w14, #0x75
  43460c:	b.ne	4347ec <argp_parse@@Base+0x5b30>  // b.any
  434610:	mov	w14, #0x9c0                 	// #2496
  434614:	b	434624 <argp_parse@@Base+0x5968>
  434618:	mov	w14, #0x438                 	// #1080
  43461c:	b	434624 <argp_parse@@Base+0x5968>
  434620:	mov	w14, #0x207                 	// #519
  434624:	orr	w13, w13, w14
  434628:	add	x19, x19, #0x1
  43462c:	b	4345d4 <argp_parse@@Base+0x5918>
  434630:	cmp	w14, #0x2b
  434634:	b.eq	434648 <argp_parse@@Base+0x598c>  // b.none
  434638:	cmp	w14, #0x2d
  43463c:	b.eq	434648 <argp_parse@@Base+0x598c>  // b.none
  434640:	cmp	w14, #0x3d
  434644:	b.ne	4347ec <argp_parse@@Base+0x5b30>  // b.any
  434648:	mov	x18, x19
  43464c:	ldrb	w17, [x18, #1]!
  434650:	sub	w15, w17, #0x30
  434654:	cmp	w15, #0x8
  434658:	b.cs	4346ac <argp_parse@@Base+0x59f0>  // b.hs, b.nlast
  43465c:	mov	w15, wzr
  434660:	lsl	w15, w15, #3
  434664:	add	w15, w15, w17, uxtb
  434668:	sub	w15, w15, #0x30
  43466c:	cmp	w15, #0xfff
  434670:	b.hi	4347ec <argp_parse@@Base+0x5b30>  // b.pmore
  434674:	ldrb	w17, [x18, #1]
  434678:	add	x19, x18, #0x1
  43467c:	mov	x18, x19
  434680:	and	w16, w17, #0xf8
  434684:	cmp	w16, #0x30
  434688:	b.eq	434660 <argp_parse@@Base+0x59a4>  // b.none
  43468c:	cbnz	w13, 4347ec <argp_parse@@Base+0x5b30>
  434690:	mov	w16, #0x1                   	// #1
  434694:	mov	w13, #0xfff                 	// #4095
  434698:	cbz	w17, 4346d8 <argp_parse@@Base+0x5a1c>
  43469c:	cmp	w17, #0x2c
  4346a0:	mov	w17, #0xfff                 	// #4095
  4346a4:	b.eq	434774 <argp_parse@@Base+0x5ab8>  // b.none
  4346a8:	b	4347ec <argp_parse@@Base+0x5b30>
  4346ac:	cmp	w17, #0x67
  4346b0:	b.eq	4346e0 <argp_parse@@Base+0x5a24>  // b.none
  4346b4:	cmp	w17, #0x6f
  4346b8:	b.eq	4346f4 <argp_parse@@Base+0x5a38>  // b.none
  4346bc:	cmp	w17, #0x75
  4346c0:	b.ne	434708 <argp_parse@@Base+0x5a4c>  // b.any
  4346c4:	mov	w17, wzr
  4346c8:	add	x19, x19, #0x2
  4346cc:	mov	w16, #0x3                   	// #3
  4346d0:	mov	w15, #0x1c0                 	// #448
  4346d4:	b	434774 <argp_parse@@Base+0x5ab8>
  4346d8:	mov	w17, #0xfff                 	// #4095
  4346dc:	b	434774 <argp_parse@@Base+0x5ab8>
  4346e0:	mov	w17, wzr
  4346e4:	add	x19, x19, #0x2
  4346e8:	mov	w16, #0x3                   	// #3
  4346ec:	mov	w15, #0x38                  	// #56
  4346f0:	b	434774 <argp_parse@@Base+0x5ab8>
  4346f4:	mov	w17, wzr
  4346f8:	add	x19, x19, #0x2
  4346fc:	mov	w16, #0x3                   	// #3
  434700:	mov	w15, #0x7                   	// #7
  434704:	b	434774 <argp_parse@@Base+0x5ab8>
  434708:	mov	w15, wzr
  43470c:	mov	w16, #0x1                   	// #1
  434710:	mov	x19, x18
  434714:	and	w18, w17, #0xff
  434718:	sub	w17, w18, #0x72
  43471c:	cmp	w17, #0x6
  434720:	b.hi	43473c <argp_parse@@Base+0x5a80>  // b.pmore
  434724:	adr	x18, 434734 <argp_parse@@Base+0x5a78>
  434728:	ldrb	w1, [x8, x17]
  43472c:	add	x18, x18, x1, lsl #2
  434730:	br	x18
  434734:	orr	w15, w15, w9
  434738:	b	434768 <argp_parse@@Base+0x5aac>
  43473c:	cmp	w18, #0x58
  434740:	b.ne	434770 <argp_parse@@Base+0x5ab4>  // b.any
  434744:	mov	w16, #0x2                   	// #2
  434748:	b	434768 <argp_parse@@Base+0x5aac>
  43474c:	orr	w15, w15, w11
  434750:	b	434768 <argp_parse@@Base+0x5aac>
  434754:	orr	w15, w15, #0x200
  434758:	b	434768 <argp_parse@@Base+0x5aac>
  43475c:	orr	w15, w15, #0xc00
  434760:	b	434768 <argp_parse@@Base+0x5aac>
  434764:	orr	w15, w15, w10
  434768:	ldrb	w17, [x19, #1]!
  43476c:	b	434714 <argp_parse@@Base+0x5a58>
  434770:	mov	w17, wzr
  434774:	add	x18, x0, x12, lsl #4
  434778:	cmp	w13, #0x0
  43477c:	strb	w14, [x18]
  434780:	csinv	w14, w13, wzr, ne  // ne = any
  434784:	and	w14, w14, w15
  434788:	cmp	w17, #0x0
  43478c:	csel	w14, w14, w17, eq  // eq = none
  434790:	strb	w16, [x18, #1]
  434794:	stp	w13, w15, [x18, #4]
  434798:	str	w14, [x18, #12]
  43479c:	ldrb	w14, [x19]
  4347a0:	add	x15, x12, #0x1
  4347a4:	cmp	w14, #0x2c
  4347a8:	b.le	4347c8 <argp_parse@@Base+0x5b0c>
  4347ac:	cmp	w14, #0x2d
  4347b0:	mov	x12, x15
  4347b4:	b.eq	434648 <argp_parse@@Base+0x598c>  // b.none
  4347b8:	cmp	w14, #0x3d
  4347bc:	mov	x12, x15
  4347c0:	b.eq	434648 <argp_parse@@Base+0x598c>  // b.none
  4347c4:	b	4347ec <argp_parse@@Base+0x5b30>
  4347c8:	cmp	w14, #0x2b
  4347cc:	mov	x12, x15
  4347d0:	b.eq	434648 <argp_parse@@Base+0x598c>  // b.none
  4347d4:	cbz	w14, 434804 <argp_parse@@Base+0x5b48>
  4347d8:	cmp	w14, #0x2c
  4347dc:	b.ne	4347ec <argp_parse@@Base+0x5b30>  // b.any
  4347e0:	add	x19, x19, #0x1
  4347e4:	mov	x12, x15
  4347e8:	b	4345d0 <argp_parse@@Base+0x5914>
  4347ec:	bl	4049b0 <free@plt>
  4347f0:	mov	x0, xzr
  4347f4:	ldp	x20, x19, [sp, #32]
  4347f8:	ldr	x21, [sp, #16]
  4347fc:	ldp	x29, x30, [sp], #48
  434800:	ret
  434804:	add	x8, x0, x15, lsl #4
  434808:	strb	wzr, [x8, #1]
  43480c:	b	4347f4 <argp_parse@@Base+0x5b38>
  434810:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  434814:	sub	sp, sp, #0xa0
  434818:	mov	x1, sp
  43481c:	stp	x29, x30, [sp, #128]
  434820:	str	x19, [sp, #144]
  434824:	add	x29, sp, #0x80
  434828:	bl	44b928 <_obstack_memory_used@@Base+0x10130>
  43482c:	cbz	w0, 434838 <argp_parse@@Base+0x5b7c>
  434830:	mov	x0, xzr
  434834:	b	43485c <argp_parse@@Base+0x5ba0>
  434838:	ldr	w19, [sp, #16]
  43483c:	mov	w0, #0x20                  	// #32
  434840:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  434844:	mov	w8, #0x13d                 	// #317
  434848:	mov	w9, #0xfff                 	// #4095
  43484c:	strh	w8, [x0]
  434850:	stp	w9, w19, [x0, #4]
  434854:	str	w9, [x0, #12]
  434858:	strb	wzr, [x0, #17]
  43485c:	ldr	x19, [sp, #144]
  434860:	ldp	x29, x30, [sp, #128]
  434864:	add	sp, sp, #0xa0
  434868:	ret
  43486c:	ldrb	w17, [x3, #1]
  434870:	and	w0, w0, #0xfff
  434874:	mov	w8, wzr
  434878:	cbz	w17, 434970 <argp_parse@@Base+0x5cb4>
  43487c:	tst	w1, #0x1
  434880:	mov	w14, #0xc00                 	// #3072
  434884:	and	w9, w1, #0x1
  434888:	mvn	w10, w2
  43488c:	add	x11, x3, #0x8
  434890:	mov	w12, #0x49                  	// #73
  434894:	mov	w13, #0x124                 	// #292
  434898:	csel	w14, w14, wzr, ne  // ne = any
  43489c:	mov	w15, #0x92                  	// #146
  4348a0:	ldr	w2, [x11, #4]
  4348a4:	ldp	w16, w18, [x11, #-4]
  4348a8:	and	w1, w17, #0xff
  4348ac:	cmp	w1, #0x2
  4348b0:	bic	w17, w14, w2
  4348b4:	b.eq	4348ec <argp_parse@@Base+0x5c30>  // b.none
  4348b8:	cmp	w1, #0x3
  4348bc:	b.ne	434900 <argp_parse@@Base+0x5c44>  // b.any
  4348c0:	and	w18, w18, w0
  4348c4:	tst	w18, w13
  4348c8:	csel	w1, wzr, w13, eq  // eq = none
  4348cc:	tst	w18, w15
  4348d0:	csel	w2, wzr, w15, eq  // eq = none
  4348d4:	tst	w18, w12
  4348d8:	orr	w18, w2, w18
  4348dc:	csel	w3, wzr, w12, eq  // eq = none
  4348e0:	orr	w18, w18, w1
  4348e4:	orr	w18, w18, w3
  4348e8:	b	434900 <argp_parse@@Base+0x5c44>
  4348ec:	and	w1, w0, w12
  4348f0:	orr	w1, w1, w9
  4348f4:	orr	w2, w18, w12
  4348f8:	cmp	w1, #0x0
  4348fc:	csel	w18, w18, w2, eq  // eq = none
  434900:	ldurb	w1, [x11, #-8]
  434904:	cmp	w16, #0x0
  434908:	csel	w2, w16, w10, ne  // ne = any
  43490c:	bic	w2, w2, w17
  434910:	cmp	w1, #0x2b
  434914:	and	w18, w2, w18
  434918:	b.eq	43495c <argp_parse@@Base+0x5ca0>  // b.none
  43491c:	cmp	w1, #0x2d
  434920:	b.eq	434950 <argp_parse@@Base+0x5c94>  // b.none
  434924:	cmp	w1, #0x3d
  434928:	b.ne	434964 <argp_parse@@Base+0x5ca8>  // b.any
  43492c:	cmp	w16, #0x0
  434930:	csinv	w16, wzr, w16, eq  // eq = none
  434934:	orr	w16, w16, w17
  434938:	mvn	w17, w16
  43493c:	and	w16, w16, w0
  434940:	and	w17, w17, #0xfff
  434944:	orr	w8, w17, w8
  434948:	orr	w0, w18, w16
  43494c:	b	434964 <argp_parse@@Base+0x5ca8>
  434950:	orr	w8, w18, w8
  434954:	bic	w0, w0, w18
  434958:	b	434964 <argp_parse@@Base+0x5ca8>
  43495c:	orr	w8, w18, w8
  434960:	orr	w0, w18, w0
  434964:	ldrb	w17, [x11, #9]
  434968:	add	x11, x11, #0x10
  43496c:	cbnz	w17, 4348a0 <argp_parse@@Base+0x5be4>
  434970:	cbz	x4, 434978 <argp_parse@@Base+0x5cbc>
  434974:	str	w8, [x4]
  434978:	ret
  43497c:	stp	x29, x30, [sp, #-32]!
  434980:	stp	x20, x19, [sp, #16]
  434984:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  434988:	ldr	w19, [x8, #496]
  43498c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x17808>
  434990:	mov	w20, w0
  434994:	add	x1, x1, #0x6c1
  434998:	mov	w2, #0x5                   	// #5
  43499c:	mov	x0, xzr
  4349a0:	mov	x29, sp
  4349a4:	bl	404bd0 <dcgettext@plt>
  4349a8:	mov	x2, x0
  4349ac:	mov	w0, w19
  4349b0:	mov	w1, w20
  4349b4:	bl	4041d0 <error@plt>
  4349b8:	bl	404850 <abort@plt>
  4349bc:	stp	x29, x30, [sp, #-32]!
  4349c0:	stp	x20, x19, [sp, #16]
  4349c4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4349c8:	ldr	w19, [x8, #496]
  4349cc:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x17808>
  4349d0:	mov	w20, w0
  4349d4:	add	x1, x1, #0x6ec
  4349d8:	mov	w2, #0x5                   	// #5
  4349dc:	mov	x0, xzr
  4349e0:	mov	x29, sp
  4349e4:	bl	404bd0 <dcgettext@plt>
  4349e8:	mov	x2, x0
  4349ec:	mov	w0, w19
  4349f0:	mov	w1, w20
  4349f4:	bl	4041d0 <error@plt>
  4349f8:	bl	404850 <abort@plt>
  4349fc:	stp	x29, x30, [sp, #-48]!
  434a00:	mov	w8, #0x4900                	// #18688
  434a04:	movk	w8, #0x8, lsl #16
  434a08:	orr	w2, w2, w8
  434a0c:	str	x21, [sp, #16]
  434a10:	stp	x20, x19, [sp, #32]
  434a14:	mov	x29, sp
  434a18:	mov	x19, x3
  434a1c:	bl	44943c <_obstack_memory_used@@Base+0xdc44>
  434a20:	tbnz	w0, #31, 434a38 <argp_parse@@Base+0x5d7c>
  434a24:	mov	w20, w0
  434a28:	bl	404800 <fdopendir@plt>
  434a2c:	cbz	x0, 434a40 <argp_parse@@Base+0x5d84>
  434a30:	str	w20, [x19]
  434a34:	b	434a5c <argp_parse@@Base+0x5da0>
  434a38:	mov	x0, xzr
  434a3c:	b	434a5c <argp_parse@@Base+0x5da0>
  434a40:	bl	404ce0 <__errno_location@plt>
  434a44:	ldr	w21, [x0]
  434a48:	mov	x19, x0
  434a4c:	mov	w0, w20
  434a50:	bl	4047a0 <close@plt>
  434a54:	mov	x0, xzr
  434a58:	str	w21, [x19]
  434a5c:	ldp	x20, x19, [sp, #32]
  434a60:	ldr	x21, [sp, #16]
  434a64:	ldp	x29, x30, [sp], #48
  434a68:	ret
  434a6c:	stp	x29, x30, [sp, #-96]!
  434a70:	stp	x28, x27, [sp, #16]
  434a74:	stp	x26, x25, [sp, #32]
  434a78:	stp	x24, x23, [sp, #48]
  434a7c:	stp	x22, x21, [sp, #64]
  434a80:	stp	x20, x19, [sp, #80]
  434a84:	mov	x29, sp
  434a88:	sub	sp, sp, #0x560
  434a8c:	add	x8, x0, #0x20
  434a90:	str	x8, [sp, #56]
  434a94:	add	x8, x0, #0x50
  434a98:	str	x8, [sp, #32]
  434a9c:	add	x8, x0, #0x58
  434aa0:	str	x8, [sp, #48]
  434aa4:	adrp	x8, 453000 <_obstack_memory_used@@Base+0x17808>
  434aa8:	add	x9, sp, #0x90
  434aac:	ldr	q0, [x8, #1824]
  434ab0:	add	x8, x9, #0x13
  434ab4:	adrp	x15, 453000 <_obstack_memory_used@@Base+0x17808>
  434ab8:	adrp	x16, 453000 <_obstack_memory_used@@Base+0x17808>
  434abc:	adrp	x17, 453000 <_obstack_memory_used@@Base+0x17808>
  434ac0:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  434ac4:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  434ac8:	adrp	x5, 453000 <_obstack_memory_used@@Base+0x17808>
  434acc:	adrp	x7, 453000 <_obstack_memory_used@@Base+0x17808>
  434ad0:	str	x8, [sp, #40]
  434ad4:	orr	x8, x9, #0x1
  434ad8:	mov	x19, x0
  434adc:	mov	w20, wzr
  434ae0:	mov	x24, xzr
  434ae4:	add	x23, sp, #0xd0
  434ae8:	mov	w13, #0xfffffffe            	// #-2
  434aec:	add	x15, x15, #0x8c0
  434af0:	add	x16, x16, #0xb2a
  434af4:	add	x17, x17, #0xb9c
  434af8:	mov	w18, #0x1                   	// #1
  434afc:	mov	w1, #0x38                  	// #56
  434b00:	add	x2, x2, #0xbf8
  434b04:	add	x3, x3, #0xc54
  434b08:	sub	x4, x29, #0x30
  434b0c:	add	x5, x5, #0x7d6
  434b10:	mov	w6, #0xa                   	// #10
  434b14:	add	x7, x7, #0x730
  434b18:	str	x8, [sp, #24]
  434b1c:	orr	x8, x9, #0x2
  434b20:	str	xzr, [sp, #120]
  434b24:	stp	xzr, xzr, [sp, #80]
  434b28:	str	xzr, [sp, #96]
  434b2c:	sturh	wzr, [x29, #-48]
  434b30:	str	q0, [sp, #64]
  434b34:	str	x8, [sp, #16]
  434b38:	cmp	w20, #0xc
  434b3c:	b.eq	435e9c <argp_parse@@Base+0x71e0>  // b.none
  434b40:	ldrsb	w25, [x15, w20, sxtw]
  434b44:	cmn	w25, #0x5d
  434b48:	b.eq	4351d0 <argp_parse@@Base+0x6514>  // b.none
  434b4c:	cmn	w13, #0x2
  434b50:	b.ne	435128 <argp_parse@@Base+0x646c>  // b.any
  434b54:	ldr	x8, [x19]
  434b58:	ldrb	w11, [x8]
  434b5c:	sub	w9, w11, #0x9
  434b60:	cmp	w9, #0x5
  434b64:	b.cs	434b74 <argp_parse@@Base+0x5eb8>  // b.hs, b.nlast
  434b68:	add	x8, x8, #0x1
  434b6c:	str	x8, [x19]
  434b70:	b	434b58 <argp_parse@@Base+0x5e9c>
  434b74:	cmp	w11, #0x20
  434b78:	b.eq	434b68 <argp_parse@@Base+0x5eac>  // b.none
  434b7c:	sub	w9, w11, #0x30
  434b80:	cmp	w9, #0xa
  434b84:	b.cs	434b9c <argp_parse@@Base+0x5ee0>  // b.hs, b.nlast
  434b88:	cmp	w11, #0x2d
  434b8c:	b.eq	434bb8 <argp_parse@@Base+0x5efc>  // b.none
  434b90:	cmp	w11, #0x2b
  434b94:	b.eq	434bb8 <argp_parse@@Base+0x5efc>  // b.none
  434b98:	b	434c3c <argp_parse@@Base+0x5f80>
  434b9c:	sub	w9, w11, #0x28
  434ba0:	cmp	w9, #0x52
  434ba4:	b.hi	435e8c <argp_parse@@Base+0x71d0>  // b.pmore
  434ba8:	adr	x10, 434bb8 <argp_parse@@Base+0x5efc>
  434bac:	ldrh	w12, [x7, x9, lsl #1]
  434bb0:	add	x10, x10, x12, lsl #2
  434bb4:	br	x10
  434bb8:	add	x8, x8, #0x1
  434bbc:	str	x8, [x19]
  434bc0:	ldrb	w9, [x8]
  434bc4:	sub	w10, w9, #0x9
  434bc8:	cmp	w10, #0x5
  434bcc:	b.cc	434bb8 <argp_parse@@Base+0x5efc>  // b.lo, b.ul, b.last
  434bd0:	cmp	w9, #0x20
  434bd4:	b.eq	434bb8 <argp_parse@@Base+0x5efc>  // b.none
  434bd8:	sub	w10, w9, #0x30
  434bdc:	cmp	w10, #0x9
  434be0:	b.hi	434b58 <argp_parse@@Base+0x5e9c>  // b.pmore
  434be4:	b	434c28 <argp_parse@@Base+0x5f6c>
  434be8:	mov	x9, xzr
  434bec:	mov	x10, x8
  434bf0:	add	x8, x8, #0x1
  434bf4:	str	x8, [x19]
  434bf8:	ldrb	w10, [x10]
  434bfc:	cmp	w10, #0x28
  434c00:	b.eq	434c14 <argp_parse@@Base+0x5f58>  // b.none
  434c04:	cmp	w10, #0x29
  434c08:	b.eq	434c1c <argp_parse@@Base+0x5f60>  // b.none
  434c0c:	cbnz	w10, 434c20 <argp_parse@@Base+0x5f64>
  434c10:	b	435140 <argp_parse@@Base+0x6484>
  434c14:	add	x9, x9, #0x1
  434c18:	b	434c20 <argp_parse@@Base+0x5f64>
  434c1c:	sub	x9, x9, #0x1
  434c20:	cbnz	x9, 434bec <argp_parse@@Base+0x5f30>
  434c24:	b	434b58 <argp_parse@@Base+0x5e9c>
  434c28:	cmp	w11, #0x2d
  434c2c:	mov	w10, #0xffffffff            	// #-1
  434c30:	cneg	w10, w10, ne  // ne = any
  434c34:	mov	w11, w9
  434c38:	b	434c40 <argp_parse@@Base+0x5f84>
  434c3c:	mov	w10, wzr
  434c40:	mov	x9, xzr
  434c44:	add	x12, x8, #0x2
  434c48:	tbnz	x9, #63, 434c60 <argp_parse@@Base+0x5fa4>
  434c4c:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
  434c50:	movk	x13, #0xccc, lsl #48
  434c54:	cmp	x9, x13
  434c58:	b.le	434c74 <argp_parse@@Base+0x5fb8>
  434c5c:	b	435178 <argp_parse@@Base+0x64bc>
  434c60:	mov	x13, #0x3333333333333333    	// #3689348814741910323
  434c64:	movk	x13, #0x3334
  434c68:	movk	x13, #0xf333, lsl #48
  434c6c:	cmp	x9, x13
  434c70:	b.lt	435178 <argp_parse@@Base+0x64bc>  // b.tstop
  434c74:	and	w13, w11, #0xff
  434c78:	mov	w14, #0x30                  	// #48
  434c7c:	sub	w11, w14, w11, uxtb
  434c80:	sub	w13, w13, #0x30
  434c84:	cmp	w10, #0x0
  434c88:	add	x9, x9, x9, lsl #2
  434c8c:	csel	w11, w11, w13, lt  // lt = tstop
  434c90:	lsl	x9, x9, #1
  434c94:	sxtw	x13, w11
  434c98:	tbnz	w11, #31, 434cb0 <argp_parse@@Base+0x5ff4>
  434c9c:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  434ca0:	sub	x11, x11, x13
  434ca4:	cmp	x11, x9
  434ca8:	b.ge	434cc0 <argp_parse@@Base+0x6004>  // b.tcont
  434cac:	b	435178 <argp_parse@@Base+0x64bc>
  434cb0:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  434cb4:	sub	x11, x11, x13
  434cb8:	cmp	x9, x11
  434cbc:	b.lt	435178 <argp_parse@@Base+0x64bc>  // b.tstop
  434cc0:	ldurb	w11, [x12, #-1]
  434cc4:	add	x9, x9, x13
  434cc8:	add	x12, x12, #0x1
  434ccc:	sub	w13, w11, #0x30
  434cd0:	cmp	w13, #0xa
  434cd4:	b.cc	434c48 <argp_parse@@Base+0x5f8c>  // b.lo, b.ul, b.last
  434cd8:	orr	w11, w11, #0x2
  434cdc:	cmp	w11, #0x2e
  434ce0:	b.ne	434e20 <argp_parse@@Base+0x6164>  // b.any
  434ce4:	ldurb	w11, [x12, #-1]
  434ce8:	sub	w11, w11, #0x30
  434cec:	cmp	w11, #0x9
  434cf0:	b.hi	434e20 <argp_parse@@Base+0x6164>  // b.pmore
  434cf4:	mov	w8, #0x8                   	// #8
  434cf8:	mov	x13, x12
  434cfc:	ldrb	w14, [x13], #1
  434d00:	sub	w14, w14, #0x30
  434d04:	cmp	w14, #0xa
  434d08:	csel	x12, x13, x12, cc  // cc = lo, ul, last
  434d0c:	csel	w13, w14, wzr, cc  // cc = lo, ul, last
  434d10:	subs	w8, w8, #0x1
  434d14:	madd	w11, w11, w6, w13
  434d18:	b.ne	434cf8 <argp_parse@@Base+0x603c>  // b.any
  434d1c:	tbz	w10, #31, 435150 <argp_parse@@Base+0x6494>
  434d20:	ldrb	w8, [x12]
  434d24:	sub	w13, w8, #0x30
  434d28:	cmp	w13, #0x9
  434d2c:	b.hi	435150 <argp_parse@@Base+0x6494>  // b.pmore
  434d30:	and	w8, w8, #0xff
  434d34:	cmp	w8, #0x30
  434d38:	b.ne	43514c <argp_parse@@Base+0x6490>  // b.any
  434d3c:	ldrb	w8, [x12, #1]!
  434d40:	sub	w13, w8, #0x30
  434d44:	cmp	w13, #0xa
  434d48:	b.cc	434d30 <argp_parse@@Base+0x6074>  // b.lo, b.ul, b.last
  434d4c:	b	435150 <argp_parse@@Base+0x6494>
  434d50:	ldr	x14, [sp, #40]
  434d54:	add	x9, sp, #0x90
  434d58:	mov	x13, #0x3ffffff03ffffff     	// #288230371923853311
  434d5c:	cmp	x9, x14
  434d60:	b.cs	434d6c <argp_parse@@Base+0x60b0>  // b.hs, b.nlast
  434d64:	strb	w11, [x9], #1
  434d68:	ldr	x8, [x19]
  434d6c:	mov	x10, x8
  434d70:	add	x8, x8, #0x1
  434d74:	str	x8, [x19]
  434d78:	ldrb	w11, [x10, #1]
  434d7c:	sub	w10, w11, #0x41
  434d80:	cmp	w10, #0x3a
  434d84:	lsr	x10, x13, x10
  434d88:	cset	w12, cc  // cc = lo, ul, last
  434d8c:	cmp	w11, #0x2e
  434d90:	and	w10, w10, w12
  434d94:	b.eq	434d5c <argp_parse@@Base+0x60a0>  // b.none
  434d98:	tbnz	w10, #0, 434d5c <argp_parse@@Base+0x60a0>
  434d9c:	strb	wzr, [x9]
  434da0:	ldrb	w8, [sp, #144]
  434da4:	cbz	w8, 434dd0 <argp_parse@@Base+0x6114>
  434da8:	ldr	x9, [sp, #24]
  434dac:	and	w10, w8, #0xff
  434db0:	sub	w10, w10, #0x61
  434db4:	sub	w11, w8, #0x20
  434db8:	cmp	w10, #0x1a
  434dbc:	csel	w10, w11, w8, cc  // cc = lo, ul, last
  434dc0:	ldrb	w8, [x9]
  434dc4:	sturb	w10, [x9, #-1]
  434dc8:	add	x9, x9, #0x1
  434dcc:	cbnz	w8, 434dac <argp_parse@@Base+0x60f0>
  434dd0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  434dd4:	adrp	x21, 453000 <_obstack_memory_used@@Base+0x17808>
  434dd8:	add	x1, x1, #0xf30
  434ddc:	add	x21, x21, #0xc88
  434de0:	add	x0, sp, #0x90
  434de4:	bl	404900 <strcmp@plt>
  434de8:	cbz	w0, 4350d0 <argp_parse@@Base+0x6414>
  434dec:	ldr	x1, [x21, #16]!
  434df0:	cbnz	x1, 434de0 <argp_parse@@Base+0x6124>
  434df4:	add	x0, sp, #0x90
  434df8:	bl	404170 <strlen@plt>
  434dfc:	mov	x22, x0
  434e00:	cmp	x0, #0x3
  434e04:	b.eq	434e44 <argp_parse@@Base+0x6188>  // b.none
  434e08:	cmp	x22, #0x4
  434e0c:	b.ne	434e4c <argp_parse@@Base+0x6190>  // b.any
  434e10:	ldrb	w8, [sp, #147]
  434e14:	cmp	w8, #0x2e
  434e18:	cset	w26, eq  // eq = none
  434e1c:	b	434e50 <argp_parse@@Base+0x6194>
  434e20:	sub	x11, x12, #0x2
  434e24:	sub	x8, x11, x8
  434e28:	lsr	w12, w10, #31
  434e2c:	cmp	w10, #0x0
  434e30:	str	x8, [sp, #80]
  434e34:	mov	w8, #0x112                 	// #274
  434e38:	str	x12, [sp, #96]
  434e3c:	str	x11, [x19]
  434e40:	b	435e84 <argp_parse@@Base+0x71c8>
  434e44:	mov	w26, #0x1                   	// #1
  434e48:	b	434e50 <argp_parse@@Base+0x6194>
  434e4c:	mov	w26, wzr
  434e50:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  434e54:	adrp	x21, 453000 <_obstack_memory_used@@Base+0x17808>
  434e58:	add	x1, x1, #0xf40
  434e5c:	add	x21, x21, #0xcd8
  434e60:	add	x0, sp, #0x90
  434e64:	cbz	w26, 434e74 <argp_parse@@Base+0x61b8>
  434e68:	mov	w2, #0x3                   	// #3
  434e6c:	bl	404580 <strncmp@plt>
  434e70:	b	434e78 <argp_parse@@Base+0x61bc>
  434e74:	bl	404900 <strcmp@plt>
  434e78:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  434e7c:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  434e80:	adrp	x5, 453000 <_obstack_memory_used@@Base+0x17808>
  434e84:	adrp	x7, 453000 <_obstack_memory_used@@Base+0x17808>
  434e88:	add	x2, x2, #0xbf8
  434e8c:	add	x3, x3, #0xc54
  434e90:	sub	x4, x29, #0x30
  434e94:	add	x5, x5, #0x7d6
  434e98:	mov	w6, #0xa                   	// #10
  434e9c:	add	x7, x7, #0x730
  434ea0:	cbz	w0, 4350f8 <argp_parse@@Base+0x643c>
  434ea4:	ldr	x1, [x21, #16]!
  434ea8:	cbnz	x1, 434e60 <argp_parse@@Base+0x61a4>
  434eac:	add	x1, sp, #0x90
  434eb0:	mov	x0, x19
  434eb4:	bl	4384b8 <argp_parse@@Base+0x97fc>
  434eb8:	adrp	x7, 453000 <_obstack_memory_used@@Base+0x17808>
  434ebc:	adrp	x5, 453000 <_obstack_memory_used@@Base+0x17808>
  434ec0:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  434ec4:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  434ec8:	add	x7, x7, #0x730
  434ecc:	mov	w6, #0xa                   	// #10
  434ed0:	add	x5, x5, #0x7d6
  434ed4:	sub	x4, x29, #0x30
  434ed8:	add	x3, x3, #0xc54
  434edc:	add	x2, x2, #0xbf8
  434ee0:	mov	x21, x0
  434ee4:	cbnz	x0, 4350f8 <argp_parse@@Base+0x643c>
  434ee8:	ldr	w8, [sp, #144]
  434eec:	mov	w9, #0x5344                	// #21316
  434ef0:	movk	w9, #0x54, lsl #16
  434ef4:	adrp	x21, 453000 <_obstack_memory_used@@Base+0x17808>
  434ef8:	cmp	w8, w9
  434efc:	add	x21, x21, #0xe68
  434f00:	b.eq	4350f8 <argp_parse@@Base+0x643c>  // b.none
  434f04:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  434f08:	adrp	x21, 453000 <_obstack_memory_used@@Base+0x17808>
  434f0c:	add	x1, x1, #0xa8
  434f10:	add	x21, x21, #0xe78
  434f14:	add	x0, sp, #0x90
  434f18:	bl	404900 <strcmp@plt>
  434f1c:	cbz	w0, 4350d0 <argp_parse@@Base+0x6414>
  434f20:	ldr	x1, [x21, #16]!
  434f24:	cbnz	x1, 434f14 <argp_parse@@Base+0x6258>
  434f28:	sub	x26, x22, #0x1
  434f2c:	add	x9, sp, #0x90
  434f30:	ldrb	w8, [x9, x26]
  434f34:	cmp	w8, #0x53
  434f38:	b.ne	434f70 <argp_parse@@Base+0x62b4>  // b.any
  434f3c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  434f40:	adrp	x21, 453000 <_obstack_memory_used@@Base+0x17808>
  434f44:	add	x1, x1, #0xa8
  434f48:	add	x21, x21, #0xe78
  434f4c:	strb	wzr, [x9, x26]
  434f50:	add	x0, sp, #0x90
  434f54:	bl	404900 <strcmp@plt>
  434f58:	cbz	w0, 4350d0 <argp_parse@@Base+0x6414>
  434f5c:	ldr	x1, [x21, #16]!
  434f60:	cbnz	x1, 434f50 <argp_parse@@Base+0x6294>
  434f64:	add	x8, sp, #0x90
  434f68:	mov	w9, #0x53                  	// #83
  434f6c:	strb	w9, [x8, x26]
  434f70:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  434f74:	adrp	x21, 453000 <_obstack_memory_used@@Base+0x17808>
  434f78:	add	x1, x1, #0xdd
  434f7c:	add	x21, x21, #0xf28
  434f80:	add	x0, sp, #0x90
  434f84:	bl	404900 <strcmp@plt>
  434f88:	cbz	w0, 4350d0 <argp_parse@@Base+0x6414>
  434f8c:	ldr	x1, [x21, #16]!
  434f90:	cbnz	x1, 434f80 <argp_parse@@Base+0x62c4>
  434f94:	ldrb	w8, [sp, #144]
  434f98:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  434f9c:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  434fa0:	adrp	x5, 453000 <_obstack_memory_used@@Base+0x17808>
  434fa4:	adrp	x7, 453000 <_obstack_memory_used@@Base+0x17808>
  434fa8:	cmp	x22, #0x1
  434fac:	add	x2, x2, #0xbf8
  434fb0:	add	x3, x3, #0xc54
  434fb4:	sub	x4, x29, #0x30
  434fb8:	add	x5, x5, #0x7d6
  434fbc:	mov	w6, #0xa                   	// #10
  434fc0:	add	x7, x7, #0x730
  434fc4:	b.ne	434fec <argp_parse@@Base+0x6330>  // b.any
  434fc8:	adrp	x9, 44f000 <_obstack_memory_used@@Base+0x13808>
  434fcc:	adrp	x21, 454000 <_obstack_memory_used@@Base+0x18808>
  434fd0:	add	x9, x9, #0x84e
  434fd4:	add	x21, x21, #0x78
  434fd8:	ldrb	w9, [x9]
  434fdc:	cmp	w8, w9
  434fe0:	b.eq	4350f8 <argp_parse@@Base+0x643c>  // b.none
  434fe4:	ldr	x9, [x21, #16]!
  434fe8:	cbnz	x9, 434fd8 <argp_parse@@Base+0x631c>
  434fec:	cbz	w8, 43507c <argp_parse@@Base+0x63c0>
  434ff0:	ldr	x9, [sp, #24]
  434ff4:	ldrb	w10, [sp, #145]
  434ff8:	cmp	w8, #0x2e
  434ffc:	cset	w11, ne  // ne = any
  435000:	add	x12, sp, #0x90
  435004:	cset	w8, eq  // eq = none
  435008:	csel	x9, x12, x9, eq  // eq = none
  43500c:	orr	x11, x12, x11
  435010:	strb	w10, [x11]
  435014:	cbz	w10, 43503c <argp_parse@@Base+0x6380>
  435018:	ldr	x10, [sp, #16]
  43501c:	ldurb	w11, [x10, #-1]
  435020:	ldrb	w12, [x10], #1
  435024:	cmp	w11, #0x2e
  435028:	cset	w11, eq  // eq = none
  43502c:	cinc	x9, x9, ne  // ne = any
  435030:	orr	w8, w8, w11
  435034:	strb	w12, [x9]
  435038:	cbnz	w12, 43501c <argp_parse@@Base+0x6360>
  43503c:	tbz	w8, #0, 43507c <argp_parse@@Base+0x63c0>
  435040:	add	x1, sp, #0x90
  435044:	mov	x0, x19
  435048:	bl	4384b8 <argp_parse@@Base+0x97fc>
  43504c:	adrp	x7, 453000 <_obstack_memory_used@@Base+0x17808>
  435050:	adrp	x5, 453000 <_obstack_memory_used@@Base+0x17808>
  435054:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  435058:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  43505c:	add	x7, x7, #0x730
  435060:	mov	w6, #0xa                   	// #10
  435064:	add	x5, x5, #0x7d6
  435068:	sub	x4, x29, #0x30
  43506c:	add	x3, x3, #0xc54
  435070:	add	x2, x2, #0xbf8
  435074:	mov	x21, x0
  435078:	cbnz	x0, 4350f8 <argp_parse@@Base+0x643c>
  43507c:	ldrb	w8, [x19, #217]
  435080:	cbz	w8, 4350c8 <argp_parse@@Base+0x640c>
  435084:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  435088:	mov	w2, #0x5                   	// #5
  43508c:	mov	x0, xzr
  435090:	add	x1, x1, #0xf16
  435094:	bl	404bd0 <dcgettext@plt>
  435098:	add	x1, sp, #0x90
  43509c:	bl	4368a0 <argp_parse@@Base+0x7be4>
  4350a0:	adrp	x7, 453000 <_obstack_memory_used@@Base+0x17808>
  4350a4:	adrp	x5, 453000 <_obstack_memory_used@@Base+0x17808>
  4350a8:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  4350ac:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  4350b0:	add	x7, x7, #0x730
  4350b4:	mov	w6, #0xa                   	// #10
  4350b8:	add	x5, x5, #0x7d6
  4350bc:	sub	x4, x29, #0x30
  4350c0:	add	x3, x3, #0xc54
  4350c4:	add	x2, x2, #0xbf8
  4350c8:	mov	w13, #0x3f                  	// #63
  4350cc:	b	435108 <argp_parse@@Base+0x644c>
  4350d0:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  4350d4:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  4350d8:	adrp	x5, 453000 <_obstack_memory_used@@Base+0x17808>
  4350dc:	adrp	x7, 453000 <_obstack_memory_used@@Base+0x17808>
  4350e0:	add	x2, x2, #0xbf8
  4350e4:	add	x3, x3, #0xc54
  4350e8:	sub	x4, x29, #0x30
  4350ec:	add	x5, x5, #0x7d6
  4350f0:	mov	w6, #0xa                   	// #10
  4350f4:	add	x7, x7, #0x730
  4350f8:	ldp	w13, w8, [x21, #8]
  4350fc:	str	x8, [sp, #96]
  435100:	sbfx	x8, x8, #8, #24
  435104:	str	x8, [sp, #88]
  435108:	adrp	x15, 453000 <_obstack_memory_used@@Base+0x17808>
  43510c:	adrp	x16, 453000 <_obstack_memory_used@@Base+0x17808>
  435110:	adrp	x17, 453000 <_obstack_memory_used@@Base+0x17808>
  435114:	add	x15, x15, #0x8c0
  435118:	add	x16, x16, #0xb2a
  43511c:	add	x17, x17, #0xb9c
  435120:	mov	w18, #0x1                   	// #1
  435124:	mov	w1, #0x38                  	// #56
  435128:	cmp	w13, #0x1
  43512c:	b.lt	435140 <argp_parse@@Base+0x6484>  // b.tstop
  435130:	cmp	w13, #0x115
  435134:	b.ls	43517c <argp_parse@@Base+0x64c0>  // b.plast
  435138:	mov	w8, #0x2                   	// #2
  43513c:	b	435190 <argp_parse@@Base+0x64d4>
  435140:	mov	w8, wzr
  435144:	mov	w13, wzr
  435148:	b	435190 <argp_parse@@Base+0x64d4>
  43514c:	add	w11, w11, #0x1
  435150:	sub	x8, x12, #0x1
  435154:	ldrb	w12, [x8, #1]!
  435158:	sub	w12, w12, #0x30
  43515c:	cmp	w12, #0xa
  435160:	b.cc	435154 <argp_parse@@Base+0x6498>  // b.lo, b.ul, b.last
  435164:	tbz	w10, #31, 435e6c <argp_parse@@Base+0x71b0>
  435168:	cbz	w11, 435e6c <argp_parse@@Base+0x71b0>
  43516c:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  435170:	cmp	x9, x12
  435174:	b.ne	435e5c <argp_parse@@Base+0x71a0>  // b.any
  435178:	mov	w13, #0x3f                  	// #63
  43517c:	ldr	x9, [sp, #120]
  435180:	adrp	x8, 453000 <_obstack_memory_used@@Base+0x17808>
  435184:	add	x8, x8, #0x932
  435188:	ldrb	w8, [x8, w13, uxtw]
  43518c:	str	x9, [sp, #120]
  435190:	add	w9, w8, w25
  435194:	cmp	w9, #0x70
  435198:	b.hi	4351d0 <argp_parse@@Base+0x6514>  // b.pmore
  43519c:	adrp	x10, 453000 <_obstack_memory_used@@Base+0x17808>
  4351a0:	add	x10, x10, #0xa48
  4351a4:	ldrsb	w10, [x10, w9, uxtw]
  4351a8:	cmp	w8, w10
  4351ac:	b.ne	4351d0 <argp_parse@@Base+0x6514>  // b.any
  4351b0:	adrp	x8, 453000 <_obstack_memory_used@@Base+0x17808>
  4351b4:	add	x8, x8, #0xab9
  4351b8:	ldrb	w20, [x8, x9]
  4351bc:	orr	x8, x9, #0x4
  4351c0:	cmp	x8, #0x6f
  4351c4:	b.ne	43524c <argp_parse@@Base+0x6590>  // b.any
  4351c8:	neg	w27, w20
  4351cc:	b	4351dc <argp_parse@@Base+0x6520>
  4351d0:	sxtw	x8, w20
  4351d4:	ldrb	w27, [x16, x8]
  4351d8:	cbz	w27, 435eb4 <argp_parse@@Base+0x71f8>
  4351dc:	ldrb	w25, [x17, w27, sxtw]
  4351e0:	sub	x8, x18, x25
  4351e4:	madd	x8, x8, x1, x23
  4351e8:	ldp	x28, x12, [x8]
  4351ec:	ldp	x30, x11, [x8, #16]
  4351f0:	ldp	x20, x26, [x8, #32]
  4351f4:	ldp	w22, w14, [x8, #48]
  4351f8:	sub	w8, w27, #0x4
  4351fc:	cmp	w8, #0x57
  435200:	b.hi	435ad4 <argp_parse@@Base+0x6e18>  // b.pmore
  435204:	adr	x9, 435214 <argp_parse@@Base+0x6558>
  435208:	ldrh	w10, [x5, x8, lsl #1]
  43520c:	add	x9, x9, x10, lsl #2
  435210:	br	x9
  435214:	ldr	x8, [x23, #48]
  435218:	ldp	q1, q0, [x23, #16]
  43521c:	ldr	q2, [x23]
  435220:	add	x1, sp, #0x90
  435224:	mov	w2, #0x1                   	// #1
  435228:	mov	w21, #0x1                   	// #1
  43522c:	mov	x0, x19
  435230:	str	x8, [sp, #192]
  435234:	stp	q1, q0, [sp, #160]
  435238:	str	q2, [sp, #144]
  43523c:	stp	w13, w14, [sp, #104]
  435240:	str	x30, [sp, #112]
  435244:	stp	x11, x12, [sp, #128]
  435248:	b	435c44 <argp_parse@@Base+0x6f88>
  43524c:	ldp	x9, x8, [sp, #88]
  435250:	ldr	q0, [sp, #64]
  435254:	mov	w13, #0xfffffffe            	// #-2
  435258:	bfi	x8, x9, #8, #56
  43525c:	str	x8, [x23, #56]!
  435260:	ldr	x8, [sp, #120]
  435264:	stur	q0, [x23, #24]
  435268:	stur	q0, [x23, #40]
  43526c:	str	x8, [x23, #8]
  435270:	ldr	x8, [sp, #80]
  435274:	str	x8, [x23, #16]
  435278:	b	435b48 <argp_parse@@Base+0x6e8c>
  43527c:	ldur	x28, [x23, #-48]
  435280:	b	435a04 <argp_parse@@Base+0x6d48>
  435284:	ldur	x12, [x23, #-48]
  435288:	b	435a30 <argp_parse@@Base+0x6d74>
  43528c:	ldr	x8, [x23]
  435290:	tbnz	x8, #63, 435cb4 <argp_parse@@Base+0x6ff8>
  435294:	ldur	x9, [x23, #-48]
  435298:	cbnz	x8, 435a70 <argp_parse@@Base+0x6db4>
  43529c:	b	435da8 <argp_parse@@Base+0x70ec>
  4352a0:	ldr	x30, [x23]
  4352a4:	mov	x28, xzr
  4352a8:	mov	x12, xzr
  4352ac:	b	435a38 <argp_parse@@Base+0x6d7c>
  4352b0:	ldur	x11, [x23, #-48]
  4352b4:	b	435a84 <argp_parse@@Base+0x6dc8>
  4352b8:	ldur	x20, [x23, #-48]
  4352bc:	b	435abc <argp_parse@@Base+0x6e00>
  4352c0:	ldur	x26, [x23, #-48]
  4352c4:	b	435b80 <argp_parse@@Base+0x6ec4>
  4352c8:	ldur	x26, [x23, #-56]
  4352cc:	ldur	w22, [x23, #-48]
  4352d0:	mov	x28, xzr
  4352d4:	mov	x12, xzr
  4352d8:	mov	x30, xzr
  4352dc:	mov	x11, xzr
  4352e0:	mov	x20, xzr
  4352e4:	b	435ad4 <argp_parse@@Base+0x6e18>
  4352e8:	ldr	x28, [x23, #8]
  4352ec:	mov	x12, xzr
  4352f0:	b	435ad4 <argp_parse@@Base+0x6e18>
  4352f4:	ldr	q0, [x23]
  4352f8:	ldr	x9, [sp, #48]
  4352fc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  435300:	mov	w8, #0x1                   	// #1
  435304:	add	x1, x1, #0x60e
  435308:	mov	w2, #0x5                   	// #5
  43530c:	mov	x0, xzr
  435310:	str	q0, [x9]
  435314:	strb	w8, [x19, #160]
  435318:	str	w13, [sp, #104]
  43531c:	mov	w21, w14
  435320:	str	x30, [sp, #112]
  435324:	stp	x11, x12, [sp, #128]
  435328:	bl	404bd0 <dcgettext@plt>
  43532c:	mov	x1, x19
  435330:	bl	435edc <argp_parse@@Base+0x7220>
  435334:	ldp	x11, x12, [sp, #128]
  435338:	ldr	x30, [sp, #112]
  43533c:	mov	w14, w21
  435340:	b	435bec <argp_parse@@Base+0x6f30>
  435344:	ldr	x8, [x19, #200]
  435348:	ldr	x9, [x19, #168]
  43534c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  435350:	add	x1, x1, #0x620
  435354:	add	x8, x8, #0x1
  435358:	add	x9, x9, #0x1
  43535c:	str	x8, [x19, #200]
  435360:	str	x9, [x19, #168]
  435364:	b	4353f4 <argp_parse@@Base+0x6738>
  435368:	ldr	x8, [x19, #200]
  43536c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x14808>
  435370:	add	x1, x1, #0x447
  435374:	add	x8, x8, #0x1
  435378:	str	x8, [x19, #200]
  43537c:	b	4353f4 <argp_parse@@Base+0x6738>
  435380:	ldr	x8, [x19, #184]
  435384:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  435388:	add	x1, x1, #0x629
  43538c:	add	x8, x8, #0x1
  435390:	str	x8, [x19, #184]
  435394:	b	4353f4 <argp_parse@@Base+0x6738>
  435398:	ldr	x8, [x19, #208]
  43539c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  4353a0:	add	x1, x1, #0x62f
  4353a4:	add	x8, x8, #0x1
  4353a8:	str	x8, [x19, #208]
  4353ac:	b	4353f4 <argp_parse@@Base+0x6738>
  4353b0:	ldr	x8, [x19, #168]
  4353b4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  4353b8:	add	x1, x1, #0x70d
  4353bc:	add	x8, x8, #0x1
  4353c0:	str	x8, [x19, #168]
  4353c4:	b	4353f4 <argp_parse@@Base+0x6738>
  4353c8:	ldr	x8, [x19, #176]
  4353cc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  4353d0:	add	x1, x1, #0x634
  4353d4:	add	x8, x8, #0x1
  4353d8:	str	x8, [x19, #176]
  4353dc:	b	4353f4 <argp_parse@@Base+0x6738>
  4353e0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  4353e4:	add	x1, x1, #0x638
  4353e8:	b	435424 <argp_parse@@Base+0x6768>
  4353ec:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x15808>
  4353f0:	add	x1, x1, #0x7b6
  4353f4:	mov	w2, #0x5                   	// #5
  4353f8:	mov	x0, xzr
  4353fc:	mov	w21, w13
  435400:	str	w14, [sp, #108]
  435404:	str	x30, [sp, #112]
  435408:	stp	x11, x12, [sp, #128]
  43540c:	bl	404bd0 <dcgettext@plt>
  435410:	mov	x1, x19
  435414:	bl	435edc <argp_parse@@Base+0x7220>
  435418:	b	435448 <argp_parse@@Base+0x678c>
  43541c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  435420:	add	x1, x1, #0x641
  435424:	mov	w2, #0x5                   	// #5
  435428:	mov	x0, xzr
  43542c:	mov	w21, w13
  435430:	str	w14, [sp, #108]
  435434:	str	x30, [sp, #112]
  435438:	stp	x11, x12, [sp, #128]
  43543c:	bl	404bd0 <dcgettext@plt>
  435440:	mov	x1, x19
  435444:	bl	4361a8 <argp_parse@@Base+0x74ec>
  435448:	ldp	x11, x12, [sp, #128]
  43544c:	ldr	x30, [sp, #112]
  435450:	ldr	w14, [sp, #108]
  435454:	mov	w13, w21
  435458:	adrp	x7, 453000 <_obstack_memory_used@@Base+0x17808>
  43545c:	adrp	x5, 453000 <_obstack_memory_used@@Base+0x17808>
  435460:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  435464:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  435468:	adrp	x17, 453000 <_obstack_memory_used@@Base+0x17808>
  43546c:	adrp	x16, 453000 <_obstack_memory_used@@Base+0x17808>
  435470:	adrp	x15, 453000 <_obstack_memory_used@@Base+0x17808>
  435474:	add	x7, x7, #0x730
  435478:	mov	w6, #0xa                   	// #10
  43547c:	add	x5, x5, #0x7d6
  435480:	sub	x4, x29, #0x30
  435484:	add	x3, x3, #0xc54
  435488:	add	x2, x2, #0xbf8
  43548c:	mov	w1, #0x38                  	// #56
  435490:	mov	w18, #0x1                   	// #1
  435494:	add	x17, x17, #0xb9c
  435498:	add	x16, x16, #0xb2a
  43549c:	add	x15, x15, #0x8c0
  4354a0:	b	435ad4 <argp_parse@@Base+0x6e18>
  4354a4:	ldur	x8, [x23, #-48]
  4354a8:	str	x8, [x19, #72]
  4354ac:	ldr	x8, [sp, #32]
  4354b0:	stp	xzr, xzr, [x8]
  4354b4:	str	xzr, [x8, #16]
  4354b8:	b	4354f8 <argp_parse@@Base+0x683c>
  4354bc:	ldur	x8, [x23, #-160]
  4354c0:	ldur	x9, [x23, #-48]
  4354c4:	stp	x8, x9, [x19, #72]
  4354c8:	ldr	x8, [sp, #48]
  4354cc:	stp	xzr, xzr, [x8]
  4354d0:	b	4354f8 <argp_parse@@Base+0x683c>
  4354d4:	sub	x8, x23, #0x110
  4354d8:	ldr	x8, [x8]
  4354dc:	ldur	x9, [x23, #-160]
  4354e0:	ldur	x10, [x23, #-56]
  4354e4:	mov	x0, x11
  4354e8:	ldursw	x11, [x23, #-48]
  4354ec:	stp	x8, x9, [x19, #72]
  4354f0:	stp	x10, x11, [x19, #88]
  4354f4:	mov	x11, x0
  4354f8:	ldr	x8, [x23]
  4354fc:	str	w8, [x19, #28]
  435500:	b	435ad4 <argp_parse@@Base+0x6e18>
  435504:	ldur	x8, [x23, #-48]
  435508:	mov	w9, #0x2                   	// #2
  43550c:	str	x8, [x19, #72]
  435510:	ldr	x8, [sp, #32]
  435514:	stp	xzr, xzr, [x8]
  435518:	str	xzr, [x8, #16]
  43551c:	str	w9, [x19, #28]
  435520:	b	435ad4 <argp_parse@@Base+0x6e18>
  435524:	ldur	x8, [x23, #-160]
  435528:	ldur	x9, [x23, #-48]
  43552c:	mov	w10, #0x2                   	// #2
  435530:	stp	x8, x9, [x19, #72]
  435534:	ldr	x8, [sp, #48]
  435538:	stp	xzr, xzr, [x8]
  43553c:	str	w10, [x19, #28]
  435540:	b	435ad4 <argp_parse@@Base+0x6e18>
  435544:	sub	x8, x23, #0x110
  435548:	ldur	x9, [x23, #-160]
  43554c:	ldur	x10, [x23, #-56]
  435550:	mov	x21, x11
  435554:	ldursw	x11, [x23, #-48]
  435558:	ldr	x8, [x8]
  43555c:	mov	x0, x12
  435560:	mov	w12, #0x2                   	// #2
  435564:	stp	x10, x11, [x19, #88]
  435568:	mov	x11, x21
  43556c:	stp	x8, x9, [x19, #72]
  435570:	str	w12, [x19, #28]
  435574:	mov	x12, x0
  435578:	b	435ad4 <argp_parse@@Base+0x6e18>
  43557c:	ldr	x8, [x19, #208]
  435580:	add	x1, sp, #0x90
  435584:	mov	x0, x19
  435588:	str	w13, [sp, #104]
  43558c:	add	x8, x8, #0x1
  435590:	str	x8, [x19, #208]
  435594:	ldur	x8, [x23, #-40]
  435598:	ldur	q0, [x23, #-56]
  43559c:	ldr	x2, [x23]
  4355a0:	mov	w21, w14
  4355a4:	str	x8, [sp, #160]
  4355a8:	str	q0, [sp, #144]
  4355ac:	str	x30, [sp, #112]
  4355b0:	stp	x11, x12, [sp, #128]
  4355b4:	bl	4363bc <argp_parse@@Base+0x7700>
  4355b8:	b	4359a0 <argp_parse@@Base+0x6ce4>
  4355bc:	ldr	x8, [x23]
  4355c0:	str	w8, [x19, #20]
  4355c4:	b	435ad4 <argp_parse@@Base+0x6e18>
  4355c8:	ldr	x8, [x19, #192]
  4355cc:	mov	w9, #0x1                   	// #1
  4355d0:	str	w9, [x19, #20]
  4355d4:	add	x8, x8, #0x1
  4355d8:	str	x8, [x19, #192]
  4355dc:	b	435ad4 <argp_parse@@Base+0x6e18>
  4355e0:	ldr	x8, [x23]
  4355e4:	str	w8, [x19, #24]
  4355e8:	b	435ad4 <argp_parse@@Base+0x6e18>
  4355ec:	mov	w8, #0x6270                	// #25200
  4355f0:	b	435e54 <argp_parse@@Base+0x7198>
  4355f4:	ldur	x8, [x23, #-56]
  4355f8:	stp	x11, x12, [sp, #128]
  4355fc:	str	x30, [sp, #112]
  435600:	stp	w13, w14, [sp, #104]
  435604:	str	w8, [x19, #24]
  435608:	b	435620 <argp_parse@@Base+0x6964>
  43560c:	mov	w8, #0x6270                	// #25200
  435610:	stp	x11, x12, [sp, #128]
  435614:	str	x30, [sp, #112]
  435618:	stp	w13, w14, [sp, #104]
  43561c:	str	w8, [x19, #24]
  435620:	ldr	x8, [x23, #48]
  435624:	ldp	q1, q0, [x23, #16]
  435628:	ldr	q2, [x23]
  43562c:	add	x1, sp, #0x90
  435630:	mov	w2, #0x1                   	// #1
  435634:	mov	x0, x19
  435638:	str	x8, [sp, #192]
  43563c:	stp	q1, q0, [sp, #160]
  435640:	str	q2, [sp, #144]
  435644:	mov	w21, #0x1                   	// #1
  435648:	bl	4364bc <argp_parse@@Base+0x7800>
  43564c:	tbz	w0, #0, 435eb8 <argp_parse@@Base+0x71fc>
  435650:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  435654:	add	x1, x1, #0x638
  435658:	mov	w2, #0x5                   	// #5
  43565c:	mov	x0, xzr
  435660:	bl	404bd0 <dcgettext@plt>
  435664:	mov	x1, x19
  435668:	bl	4361a8 <argp_parse@@Base+0x74ec>
  43566c:	ldp	w13, w14, [sp, #104]
  435670:	ldr	x30, [sp, #112]
  435674:	ldp	x11, x12, [sp, #128]
  435678:	adrp	x15, 453000 <_obstack_memory_used@@Base+0x17808>
  43567c:	adrp	x16, 453000 <_obstack_memory_used@@Base+0x17808>
  435680:	adrp	x17, 453000 <_obstack_memory_used@@Base+0x17808>
  435684:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  435688:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  43568c:	adrp	x5, 453000 <_obstack_memory_used@@Base+0x17808>
  435690:	adrp	x7, 453000 <_obstack_memory_used@@Base+0x17808>
  435694:	add	x15, x15, #0x8c0
  435698:	add	x16, x16, #0xb2a
  43569c:	add	x17, x17, #0xb9c
  4356a0:	mov	w18, #0x1                   	// #1
  4356a4:	mov	w1, #0x38                  	// #56
  4356a8:	add	x2, x2, #0xbf8
  4356ac:	add	x3, x3, #0xc54
  4356b0:	sub	x4, x29, #0x30
  4356b4:	add	x5, x5, #0x7d6
  4356b8:	mov	w6, #0xa                   	// #10
  4356bc:	add	x7, x7, #0x730
  4356c0:	b	435ad4 <argp_parse@@Base+0x6e18>
  4356c4:	ldur	x8, [x23, #-40]
  4356c8:	ldur	q0, [x23, #-56]
  4356cc:	ldr	x2, [x23]
  4356d0:	add	x1, sp, #0x90
  4356d4:	mov	x0, x19
  4356d8:	stp	x11, x12, [sp, #128]
  4356dc:	str	x30, [sp, #112]
  4356e0:	mov	w21, w14
  4356e4:	str	w13, [sp, #104]
  4356e8:	str	x8, [sp, #160]
  4356ec:	str	q0, [sp, #144]
  4356f0:	bl	4363bc <argp_parse@@Base+0x7700>
  4356f4:	tbz	w0, #0, 435eb4 <argp_parse@@Base+0x71f8>
  4356f8:	ldur	x8, [x23, #-112]
  4356fc:	tbnz	x8, #63, 435dc8 <argp_parse@@Base+0x710c>
  435700:	ldr	w9, [x19, #24]
  435704:	ldr	w13, [sp, #104]
  435708:	ldr	x30, [sp, #112]
  43570c:	ldr	x12, [sp, #136]
  435710:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  435714:	sub	x10, x10, x8
  435718:	adrp	x15, 453000 <_obstack_memory_used@@Base+0x17808>
  43571c:	adrp	x16, 453000 <_obstack_memory_used@@Base+0x17808>
  435720:	adrp	x17, 453000 <_obstack_memory_used@@Base+0x17808>
  435724:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  435728:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  43572c:	adrp	x5, 453000 <_obstack_memory_used@@Base+0x17808>
  435730:	adrp	x7, 453000 <_obstack_memory_used@@Base+0x17808>
  435734:	cmp	x10, w9, sxtw
  435738:	add	x15, x15, #0x8c0
  43573c:	add	x16, x16, #0xb2a
  435740:	add	x17, x17, #0xb9c
  435744:	mov	w18, #0x1                   	// #1
  435748:	mov	w1, #0x38                  	// #56
  43574c:	add	x2, x2, #0xbf8
  435750:	add	x3, x3, #0xc54
  435754:	sub	x4, x29, #0x30
  435758:	add	x5, x5, #0x7d6
  43575c:	mov	w6, #0xa                   	// #10
  435760:	add	x7, x7, #0x730
  435764:	b.ge	435e30 <argp_parse@@Base+0x7174>  // b.tcont
  435768:	b	435eac <argp_parse@@Base+0x71f0>
  43576c:	ldr	w8, [x23]
  435770:	b	435778 <argp_parse@@Base+0x6abc>
  435774:	ldur	w8, [x23, #-56]
  435778:	add	w8, w8, #0xe10
  43577c:	b	435e54 <argp_parse@@Base+0x7198>
  435780:	str	xzr, [x19, #8]
  435784:	ldr	x8, [x23]
  435788:	b	4357b4 <argp_parse@@Base+0x6af8>
  43578c:	str	xzr, [x19, #8]
  435790:	ldur	x8, [x23, #-56]
  435794:	b	4357b4 <argp_parse@@Base+0x6af8>
  435798:	ldur	x8, [x23, #-56]
  43579c:	b	4357a4 <argp_parse@@Base+0x6ae8>
  4357a0:	ldur	x8, [x23, #-48]
  4357a4:	str	x8, [x19, #8]
  4357a8:	ldr	x8, [x23]
  4357ac:	mov	w9, #0x1                   	// #1
  4357b0:	strb	w9, [x19, #224]
  4357b4:	str	w8, [x19, #16]
  4357b8:	b	435ad4 <argp_parse@@Base+0x6e18>
  4357bc:	ldur	x21, [x23, #-208]
  4357c0:	ldrb	w8, [x19, #217]
  4357c4:	cmp	x21, #0x4
  4357c8:	b.lt	435cd8 <argp_parse@@Base+0x701c>  // b.tstop
  4357cc:	sub	x9, x23, #0xe0
  4357d0:	cbz	w8, 43585c <argp_parse@@Base+0x6ba0>
  4357d4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  4357d8:	add	x1, x1, #0x648
  4357dc:	mov	w2, #0x5                   	// #5
  4357e0:	mov	x0, xzr
  4357e4:	stp	w13, w14, [sp, #104]
  4357e8:	str	x30, [sp, #112]
  4357ec:	stp	x11, x12, [sp, #128]
  4357f0:	str	x9, [sp, #8]
  4357f4:	bl	404bd0 <dcgettext@plt>
  4357f8:	ldur	x1, [x23, #-216]
  4357fc:	mov	x2, x21
  435800:	bl	4368a0 <argp_parse@@Base+0x7be4>
  435804:	ldr	x9, [sp, #8]
  435808:	ldp	x11, x12, [sp, #128]
  43580c:	ldr	x30, [sp, #112]
  435810:	ldp	w13, w14, [sp, #104]
  435814:	adrp	x7, 453000 <_obstack_memory_used@@Base+0x17808>
  435818:	adrp	x5, 453000 <_obstack_memory_used@@Base+0x17808>
  43581c:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  435820:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  435824:	adrp	x17, 453000 <_obstack_memory_used@@Base+0x17808>
  435828:	adrp	x16, 453000 <_obstack_memory_used@@Base+0x17808>
  43582c:	adrp	x15, 453000 <_obstack_memory_used@@Base+0x17808>
  435830:	add	x7, x7, #0x730
  435834:	mov	w6, #0xa                   	// #10
  435838:	add	x5, x5, #0x7d6
  43583c:	sub	x4, x29, #0x30
  435840:	add	x3, x3, #0xc54
  435844:	add	x2, x2, #0xbf8
  435848:	mov	w1, #0x38                  	// #56
  43584c:	mov	w18, #0x1                   	// #1
  435850:	add	x17, x17, #0xb9c
  435854:	add	x16, x16, #0xb2a
  435858:	add	x15, x15, #0x8c0
  43585c:	ldr	x8, [x9, #16]
  435860:	ldr	q0, [x9]
  435864:	ldr	x9, [sp, #56]
  435868:	str	x8, [x9, #16]
  43586c:	str	q0, [x9]
  435870:	ldur	x8, [x23, #-104]
  435874:	b	4358e0 <argp_parse@@Base+0x6c24>
  435878:	ldur	x8, [x23, #-104]
  43587c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  435880:	str	x8, [x19, #64]
  435884:	ldur	x8, [x23, #-56]
  435888:	str	x8, [x19, #56]
  43588c:	ldr	x8, [x23, #8]
  435890:	neg	x10, x8
  435894:	cmp	x8, x9
  435898:	b	4358c8 <argp_parse@@Base+0x6c0c>
  43589c:	ldur	x8, [x23, #-112]
  4358a0:	str	x8, [x19, #56]
  4358a4:	ldur	x9, [x23, #-48]
  4358a8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  4358ac:	neg	x10, x9
  4358b0:	cmp	x9, x8
  4358b4:	str	x10, [x19, #64]
  4358b8:	b.eq	435eb4 <argp_parse@@Base+0x71f8>  // b.none
  4358bc:	ldr	x9, [x23, #8]
  4358c0:	neg	x10, x9
  4358c4:	cmp	x9, x8
  4358c8:	str	x10, [x19, #40]
  4358cc:	b.eq	435eb4 <argp_parse@@Base+0x71f8>  // b.none
  4358d0:	ldr	x8, [x23, #16]
  4358d4:	str	x8, [x19, #48]
  4358d8:	b	435ad4 <argp_parse@@Base+0x6e18>
  4358dc:	ldur	x8, [x23, #-56]
  4358e0:	str	x8, [x19, #56]
  4358e4:	ldr	x8, [x23, #8]
  4358e8:	str	x8, [x19, #64]
  4358ec:	b	435ad4 <argp_parse@@Base+0x6e18>
  4358f0:	ldur	x8, [x23, #-168]
  4358f4:	b	435d64 <argp_parse@@Base+0x70a8>
  4358f8:	ldur	x8, [x23, #-48]
  4358fc:	str	x8, [x19, #64]
  435900:	ldr	x8, [x23]
  435904:	str	x8, [x19, #56]
  435908:	b	435ad4 <argp_parse@@Base+0x6e18>
  43590c:	ldur	x8, [x23, #-104]
  435910:	str	x8, [x19, #64]
  435914:	ldur	x8, [x23, #-56]
  435918:	str	x8, [x19, #56]
  43591c:	b	435d70 <argp_parse@@Base+0x70b4>
  435920:	ldur	x8, [x23, #-96]
  435924:	ldur	q0, [x23, #-112]
  435928:	ldr	x9, [sp, #56]
  43592c:	str	x8, [x9, #16]
  435930:	str	q0, [x9]
  435934:	ldur	x9, [x23, #-48]
  435938:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  43593c:	neg	x10, x9
  435940:	cmp	x9, x8
  435944:	str	x10, [x19, #56]
  435948:	b.eq	435eb4 <argp_parse@@Base+0x71f8>  // b.none
  43594c:	ldr	x9, [x23, #8]
  435950:	neg	x10, x9
  435954:	cmp	x9, x8
  435958:	str	x10, [x19, #64]
  43595c:	b.ne	435ad4 <argp_parse@@Base+0x6e18>  // b.any
  435960:	b	435eb4 <argp_parse@@Base+0x71f8>
  435964:	ldr	w2, [x23]
  435968:	ldur	x8, [x23, #-8]
  43596c:	ldur	q0, [x23, #-24]
  435970:	ldur	q1, [x23, #-40]
  435974:	ldur	q2, [x23, #-56]
  435978:	add	x1, sp, #0x90
  43597c:	mov	x0, x19
  435980:	str	x8, [sp, #192]
  435984:	stp	q1, q0, [sp, #160]
  435988:	str	q2, [sp, #144]
  43598c:	str	w13, [sp, #104]
  435990:	mov	w21, w14
  435994:	str	x30, [sp, #112]
  435998:	stp	x11, x12, [sp, #128]
  43599c:	bl	4364bc <argp_parse@@Base+0x7800>
  4359a0:	ldp	x11, x12, [sp, #128]
  4359a4:	ldr	x30, [sp, #112]
  4359a8:	ldr	w13, [sp, #104]
  4359ac:	adrp	x7, 453000 <_obstack_memory_used@@Base+0x17808>
  4359b0:	adrp	x5, 453000 <_obstack_memory_used@@Base+0x17808>
  4359b4:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  4359b8:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  4359bc:	adrp	x17, 453000 <_obstack_memory_used@@Base+0x17808>
  4359c0:	adrp	x16, 453000 <_obstack_memory_used@@Base+0x17808>
  4359c4:	adrp	x15, 453000 <_obstack_memory_used@@Base+0x17808>
  4359c8:	mov	w14, w21
  4359cc:	add	x7, x7, #0x730
  4359d0:	mov	w6, #0xa                   	// #10
  4359d4:	add	x5, x5, #0x7d6
  4359d8:	sub	x4, x29, #0x30
  4359dc:	add	x3, x3, #0xc54
  4359e0:	add	x2, x2, #0xbf8
  4359e4:	mov	w1, #0x38                  	// #56
  4359e8:	mov	w18, #0x1                   	// #1
  4359ec:	add	x17, x17, #0xb9c
  4359f0:	add	x16, x16, #0xb2a
  4359f4:	add	x15, x15, #0x8c0
  4359f8:	tbnz	w0, #0, 435ad4 <argp_parse@@Base+0x6e18>
  4359fc:	b	435eb4 <argp_parse@@Base+0x71f8>
  435a00:	ldur	x28, [x23, #-56]
  435a04:	mov	x12, xzr
  435a08:	b	435a34 <argp_parse@@Base+0x6d78>
  435a0c:	mov	x12, xzr
  435a10:	mov	x30, xzr
  435a14:	mov	x11, xzr
  435a18:	mov	x20, xzr
  435a1c:	mov	x26, xzr
  435a20:	mov	w22, wzr
  435a24:	mov	w28, #0x1                   	// #1
  435a28:	b	435ad4 <argp_parse@@Base+0x6e18>
  435a2c:	ldur	x12, [x23, #-56]
  435a30:	mov	x28, xzr
  435a34:	mov	x30, xzr
  435a38:	mov	x11, xzr
  435a3c:	b	435a90 <argp_parse@@Base+0x6dd4>
  435a40:	mov	x28, xzr
  435a44:	mov	x30, xzr
  435a48:	mov	x11, xzr
  435a4c:	mov	x20, xzr
  435a50:	mov	x26, xzr
  435a54:	mov	w22, wzr
  435a58:	mov	w12, #0x1                   	// #1
  435a5c:	b	435ad4 <argp_parse@@Base+0x6e18>
  435a60:	ldr	x8, [x23]
  435a64:	tbnz	x8, #63, 435d90 <argp_parse@@Base+0x70d4>
  435a68:	ldur	x9, [x23, #-56]
  435a6c:	cbz	x8, 435da8 <argp_parse@@Base+0x70ec>
  435a70:	tbnz	x9, #63, 435d88 <argp_parse@@Base+0x70cc>
  435a74:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  435a78:	udiv	x10, x10, x8
  435a7c:	b	435ccc <argp_parse@@Base+0x7010>
  435a80:	ldur	x11, [x23, #-56]
  435a84:	mov	x28, xzr
  435a88:	mov	x12, xzr
  435a8c:	mov	x30, xzr
  435a90:	mov	x20, xzr
  435a94:	b	435acc <argp_parse@@Base+0x6e10>
  435a98:	mov	x28, xzr
  435a9c:	mov	x12, xzr
  435aa0:	mov	x30, xzr
  435aa4:	mov	x20, xzr
  435aa8:	mov	x26, xzr
  435aac:	mov	w22, wzr
  435ab0:	mov	w11, #0x1                   	// #1
  435ab4:	b	435ad4 <argp_parse@@Base+0x6e18>
  435ab8:	ldur	x20, [x23, #-56]
  435abc:	mov	x28, xzr
  435ac0:	mov	x12, xzr
  435ac4:	mov	x30, xzr
  435ac8:	mov	x11, xzr
  435acc:	mov	x26, xzr
  435ad0:	mov	w22, wzr
  435ad4:	sxtw	x8, w27
  435ad8:	ldrb	w8, [x2, x8]
  435adc:	mneg	x9, x25, x1
  435ae0:	sub	x24, x24, x25
  435ae4:	add	x23, x23, x9
  435ae8:	sub	x8, x8, #0x1c
  435aec:	ldrsh	w10, [x4, x24, lsl #1]
  435af0:	ldrsb	w9, [x3, x8]
  435af4:	str	x28, [x23, #56]!
  435af8:	stp	x12, x30, [x23, #8]
  435afc:	stp	x11, x20, [x23, #24]
  435b00:	add	w9, w10, w9
  435b04:	cmp	w9, #0x70
  435b08:	str	x26, [x23, #40]
  435b0c:	stp	w22, w14, [x23, #48]
  435b10:	b.hi	435b3c <argp_parse@@Base+0x6e80>  // b.pmore
  435b14:	adrp	x11, 453000 <_obstack_memory_used@@Base+0x17808>
  435b18:	add	x11, x11, #0xa48
  435b1c:	ldrsb	w11, [x11, w9, uxtw]
  435b20:	and	w10, w10, #0xffff
  435b24:	cmp	w10, w11, uxth
  435b28:	b.ne	435b3c <argp_parse@@Base+0x6e80>  // b.any
  435b2c:	adrp	x8, 453000 <_obstack_memory_used@@Base+0x17808>
  435b30:	add	x8, x8, #0xab9
  435b34:	ldrb	w20, [x8, x9]
  435b38:	b	435b48 <argp_parse@@Base+0x6e8c>
  435b3c:	adrp	x9, 453000 <_obstack_memory_used@@Base+0x17808>
  435b40:	add	x9, x9, #0xc6e
  435b44:	ldrsb	w20, [x9, x8]
  435b48:	cmp	x24, #0x11
  435b4c:	add	x24, x24, #0x1
  435b50:	strh	w20, [x4, x24, lsl #1]
  435b54:	b.le	434b38 <argp_parse@@Base+0x5e7c>
  435b58:	b	435ea4 <argp_parse@@Base+0x71e8>
  435b5c:	mov	x28, xzr
  435b60:	mov	x12, xzr
  435b64:	mov	x30, xzr
  435b68:	mov	x11, xzr
  435b6c:	mov	x26, xzr
  435b70:	mov	w22, wzr
  435b74:	mov	w20, #0x1                   	// #1
  435b78:	b	435ad4 <argp_parse@@Base+0x6e18>
  435b7c:	ldur	x26, [x23, #-56]
  435b80:	mov	x28, xzr
  435b84:	mov	x12, xzr
  435b88:	mov	x30, xzr
  435b8c:	mov	x11, xzr
  435b90:	mov	x20, xzr
  435b94:	b	435ad0 <argp_parse@@Base+0x6e14>
  435b98:	mov	x28, xzr
  435b9c:	mov	x12, xzr
  435ba0:	mov	x30, xzr
  435ba4:	mov	x11, xzr
  435ba8:	mov	x20, xzr
  435bac:	mov	w22, wzr
  435bb0:	mov	w26, #0x1                   	// #1
  435bb4:	b	435ad4 <argp_parse@@Base+0x6e18>
  435bb8:	ldr	x8, [x23, #16]
  435bbc:	ldr	q0, [x23]
  435bc0:	add	x1, sp, #0x90
  435bc4:	mov	x0, x19
  435bc8:	str	x8, [sp, #160]
  435bcc:	str	q0, [sp, #144]
  435bd0:	stp	w13, w14, [sp, #104]
  435bd4:	mov	x21, x30
  435bd8:	stp	x11, x12, [sp, #128]
  435bdc:	bl	436940 <argp_parse@@Base+0x7c84>
  435be0:	ldp	x11, x12, [sp, #128]
  435be4:	ldr	w14, [sp, #108]
  435be8:	mov	x30, x21
  435bec:	ldr	w13, [sp, #104]
  435bf0:	b	435458 <argp_parse@@Base+0x679c>
  435bf4:	ldur	x8, [x23, #-40]
  435bf8:	ldur	q0, [x23, #-56]
  435bfc:	add	x1, sp, #0x90
  435c00:	mov	x0, x19
  435c04:	str	x8, [sp, #160]
  435c08:	str	q0, [sp, #144]
  435c0c:	stp	w13, w14, [sp, #104]
  435c10:	str	x30, [sp, #112]
  435c14:	stp	x11, x12, [sp, #128]
  435c18:	bl	436940 <argp_parse@@Base+0x7c84>
  435c1c:	ldr	x8, [x23, #48]
  435c20:	ldp	q1, q0, [x23, #16]
  435c24:	ldr	q2, [x23]
  435c28:	add	x1, sp, #0x90
  435c2c:	str	x8, [sp, #192]
  435c30:	stp	q1, q0, [sp, #160]
  435c34:	str	q2, [sp, #144]
  435c38:	mov	w2, #0x1                   	// #1
  435c3c:	mov	w21, #0x1                   	// #1
  435c40:	mov	x0, x19
  435c44:	bl	4364bc <argp_parse@@Base+0x7800>
  435c48:	ldp	x11, x12, [sp, #128]
  435c4c:	ldr	x30, [sp, #112]
  435c50:	ldp	w13, w14, [sp, #104]
  435c54:	adrp	x7, 453000 <_obstack_memory_used@@Base+0x17808>
  435c58:	adrp	x5, 453000 <_obstack_memory_used@@Base+0x17808>
  435c5c:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  435c60:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  435c64:	adrp	x17, 453000 <_obstack_memory_used@@Base+0x17808>
  435c68:	adrp	x16, 453000 <_obstack_memory_used@@Base+0x17808>
  435c6c:	adrp	x15, 453000 <_obstack_memory_used@@Base+0x17808>
  435c70:	add	x7, x7, #0x730
  435c74:	mov	w6, #0xa                   	// #10
  435c78:	add	x5, x5, #0x7d6
  435c7c:	sub	x4, x29, #0x30
  435c80:	add	x3, x3, #0xc54
  435c84:	add	x2, x2, #0xbf8
  435c88:	mov	w1, #0x38                  	// #56
  435c8c:	mov	w18, #0x1                   	// #1
  435c90:	add	x17, x17, #0xb9c
  435c94:	add	x16, x16, #0xb2a
  435c98:	add	x15, x15, #0x8c0
  435c9c:	tbnz	w0, #0, 435ad4 <argp_parse@@Base+0x6e18>
  435ca0:	b	435eb8 <argp_parse@@Base+0x71fc>
  435ca4:	mov	x28, #0xffffffffffffffff    	// #-1
  435ca8:	b	435ad4 <argp_parse@@Base+0x6e18>
  435cac:	ldr	x28, [x23, #8]
  435cb0:	b	435ad4 <argp_parse@@Base+0x6e18>
  435cb4:	ldur	x9, [x23, #-48]
  435cb8:	tbnz	x9, #63, 435d98 <argp_parse@@Base+0x70dc>
  435cbc:	cmn	x8, #0x1
  435cc0:	b.eq	435da8 <argp_parse@@Base+0x70ec>  // b.none
  435cc4:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  435cc8:	sdiv	x10, x10, x8
  435ccc:	cmp	x10, x9
  435cd0:	b.ge	435da8 <argp_parse@@Base+0x70ec>  // b.tcont
  435cd4:	b	435eb4 <argp_parse@@Base+0x71f8>
  435cd8:	cbz	w8, 435d60 <argp_parse@@Base+0x70a4>
  435cdc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  435ce0:	add	x1, x1, #0x680
  435ce4:	mov	w2, #0x5                   	// #5
  435ce8:	mov	x0, xzr
  435cec:	str	w13, [sp, #104]
  435cf0:	mov	w21, w14
  435cf4:	str	x30, [sp, #112]
  435cf8:	stp	x11, x12, [sp, #128]
  435cfc:	bl	404bd0 <dcgettext@plt>
  435d00:	ldur	x1, [x23, #-216]
  435d04:	bl	4368a0 <argp_parse@@Base+0x7be4>
  435d08:	ldp	x11, x12, [sp, #128]
  435d0c:	ldr	x30, [sp, #112]
  435d10:	ldr	w13, [sp, #104]
  435d14:	adrp	x7, 453000 <_obstack_memory_used@@Base+0x17808>
  435d18:	adrp	x5, 453000 <_obstack_memory_used@@Base+0x17808>
  435d1c:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  435d20:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  435d24:	adrp	x17, 453000 <_obstack_memory_used@@Base+0x17808>
  435d28:	adrp	x16, 453000 <_obstack_memory_used@@Base+0x17808>
  435d2c:	adrp	x15, 453000 <_obstack_memory_used@@Base+0x17808>
  435d30:	mov	w14, w21
  435d34:	add	x7, x7, #0x730
  435d38:	mov	w6, #0xa                   	// #10
  435d3c:	add	x5, x5, #0x7d6
  435d40:	sub	x4, x29, #0x30
  435d44:	add	x3, x3, #0xc54
  435d48:	add	x2, x2, #0xbf8
  435d4c:	mov	w1, #0x38                  	// #56
  435d50:	mov	w18, #0x1                   	// #1
  435d54:	add	x17, x17, #0xb9c
  435d58:	add	x16, x16, #0xb2a
  435d5c:	add	x15, x15, #0x8c0
  435d60:	ldur	x8, [x23, #-216]
  435d64:	str	x8, [x19, #56]
  435d68:	ldur	x8, [x23, #-104]
  435d6c:	str	x8, [x19, #64]
  435d70:	ldr	x8, [x23, #16]
  435d74:	ldr	q0, [x23]
  435d78:	ldr	x9, [sp, #56]
  435d7c:	str	x8, [x9, #16]
  435d80:	str	q0, [x9]
  435d84:	b	435ad4 <argp_parse@@Base+0x6e18>
  435d88:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  435d8c:	b	435d9c <argp_parse@@Base+0x70e0>
  435d90:	ldur	x9, [x23, #-56]
  435d94:	tbz	x9, #63, 435cbc <argp_parse@@Base+0x7000>
  435d98:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  435d9c:	sdiv	x10, x10, x8
  435da0:	cmp	x9, x10
  435da4:	b.lt	435eb4 <argp_parse@@Base+0x71f8>  // b.tstop
  435da8:	mov	x28, xzr
  435dac:	mov	x12, xzr
  435db0:	mov	x11, xzr
  435db4:	mov	x20, xzr
  435db8:	mov	x26, xzr
  435dbc:	mov	w22, wzr
  435dc0:	mul	x30, x9, x8
  435dc4:	b	435ad4 <argp_parse@@Base+0x6e18>
  435dc8:	ldr	w9, [x19, #24]
  435dcc:	ldr	w13, [sp, #104]
  435dd0:	ldr	x30, [sp, #112]
  435dd4:	ldr	x12, [sp, #136]
  435dd8:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  435ddc:	sub	x10, x10, x8
  435de0:	adrp	x15, 453000 <_obstack_memory_used@@Base+0x17808>
  435de4:	adrp	x16, 453000 <_obstack_memory_used@@Base+0x17808>
  435de8:	adrp	x17, 453000 <_obstack_memory_used@@Base+0x17808>
  435dec:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x17808>
  435df0:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x17808>
  435df4:	adrp	x5, 453000 <_obstack_memory_used@@Base+0x17808>
  435df8:	adrp	x7, 453000 <_obstack_memory_used@@Base+0x17808>
  435dfc:	cmp	x10, w9, sxtw
  435e00:	add	x15, x15, #0x8c0
  435e04:	add	x16, x16, #0xb2a
  435e08:	add	x17, x17, #0xb9c
  435e0c:	mov	w18, #0x1                   	// #1
  435e10:	mov	w1, #0x38                  	// #56
  435e14:	add	x2, x2, #0xbf8
  435e18:	add	x3, x3, #0xc54
  435e1c:	sub	x4, x29, #0x30
  435e20:	add	x5, x5, #0x7d6
  435e24:	mov	w6, #0xa                   	// #10
  435e28:	add	x7, x7, #0x730
  435e2c:	b.gt	435eac <argp_parse@@Base+0x71f0>
  435e30:	sxtw	x10, w9
  435e34:	add	x10, x8, x10
  435e38:	mov	w11, #0x80000000            	// #-2147483648
  435e3c:	add	x10, x10, x11
  435e40:	mov	w14, w21
  435e44:	lsr	x10, x10, #32
  435e48:	cbnz	x10, 435eac <argp_parse@@Base+0x71f0>
  435e4c:	ldr	x11, [sp, #128]
  435e50:	add	w8, w9, w8
  435e54:	str	w8, [x19, #24]
  435e58:	b	435ad4 <argp_parse@@Base+0x6e18>
  435e5c:	mov	w12, #0xca00                	// #51712
  435e60:	movk	w12, #0x3b9a, lsl #16
  435e64:	sub	x9, x9, #0x1
  435e68:	sub	w11, w12, w11
  435e6c:	lsr	x12, x9, #8
  435e70:	stp	x12, x9, [sp, #88]
  435e74:	sxtw	x9, w11
  435e78:	str	x8, [x19]
  435e7c:	cmp	w10, #0x0
  435e80:	mov	w8, #0x114                 	// #276
  435e84:	cinc	w13, w8, eq  // eq = none
  435e88:	b	435180 <argp_parse@@Base+0x64c4>
  435e8c:	add	x9, x8, #0x1
  435e90:	str	x9, [x19]
  435e94:	ldrb	w13, [x8]
  435e98:	b	435128 <argp_parse@@Base+0x646c>
  435e9c:	mov	w21, wzr
  435ea0:	b	435eb8 <argp_parse@@Base+0x71fc>
  435ea4:	mov	w21, #0x2                   	// #2
  435ea8:	b	435eb8 <argp_parse@@Base+0x71fc>
  435eac:	add	w8, w9, w8
  435eb0:	str	w8, [x19, #24]
  435eb4:	mov	w21, #0x1                   	// #1
  435eb8:	mov	w0, w21
  435ebc:	add	sp, sp, #0x560
  435ec0:	ldp	x20, x19, [sp, #80]
  435ec4:	ldp	x22, x21, [sp, #64]
  435ec8:	ldp	x24, x23, [sp, #48]
  435ecc:	ldp	x26, x25, [sp, #32]
  435ed0:	ldp	x28, x27, [sp, #16]
  435ed4:	ldp	x29, x30, [sp], #96
  435ed8:	ret
  435edc:	sub	sp, sp, #0xb0
  435ee0:	stp	x29, x30, [sp, #112]
  435ee4:	stp	x22, x21, [sp, #144]
  435ee8:	stp	x20, x19, [sp, #160]
  435eec:	ldrb	w8, [x1, #217]
  435ef0:	str	x23, [sp, #128]
  435ef4:	add	x29, sp, #0x70
  435ef8:	cbnz	w8, 435f14 <argp_parse@@Base+0x7258>
  435efc:	ldp	x20, x19, [sp, #160]
  435f00:	ldp	x22, x21, [sp, #144]
  435f04:	ldr	x23, [sp, #128]
  435f08:	ldp	x29, x30, [sp, #112]
  435f0c:	add	sp, sp, #0xb0
  435f10:	ret
  435f14:	mov	x19, x1
  435f18:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  435f1c:	mov	x20, x0
  435f20:	add	x1, x1, #0xe24
  435f24:	mov	w2, #0x5                   	// #5
  435f28:	mov	x0, xzr
  435f2c:	bl	404bd0 <dcgettext@plt>
  435f30:	mov	x1, x20
  435f34:	bl	4368a0 <argp_parse@@Base+0x7be4>
  435f38:	ldr	x8, [x19, #168]
  435f3c:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  435f40:	cbz	x8, 435f74 <argp_parse@@Base+0x72b8>
  435f44:	ldrb	w8, [x19, #218]
  435f48:	cbnz	w8, 435f74 <argp_parse@@Base+0x72b8>
  435f4c:	ldr	x0, [x22, #624]
  435f50:	ldr	x3, [x19, #40]
  435f54:	ldp	x4, x5, [x19, #56]
  435f58:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x18808>
  435f5c:	add	x2, x2, #0xe35
  435f60:	mov	w1, #0x1                   	// #1
  435f64:	mov	w23, #0x1                   	// #1
  435f68:	bl	4048f0 <__fprintf_chk@plt>
  435f6c:	strb	w23, [x19, #218]
  435f70:	b	435f78 <argp_parse@@Base+0x72bc>
  435f74:	mov	w23, wzr
  435f78:	ldrb	w8, [x19, #216]
  435f7c:	ldrb	w9, [x19, #223]
  435f80:	cmp	w8, w9
  435f84:	b.eq	435fd0 <argp_parse@@Base+0x7314>  // b.none
  435f88:	cbz	w23, 435f98 <argp_parse@@Base+0x72dc>
  435f8c:	ldr	x1, [x22, #624]
  435f90:	mov	w0, #0x20                  	// #32
  435f94:	bl	404310 <fputc@plt>
  435f98:	ldr	x20, [x22, #624]
  435f9c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  435fa0:	add	x1, x1, #0xe4f
  435fa4:	mov	w2, #0x5                   	// #5
  435fa8:	mov	x0, xzr
  435fac:	bl	404bd0 <dcgettext@plt>
  435fb0:	ldr	x3, [x19, #40]
  435fb4:	mov	x2, x0
  435fb8:	mov	w1, #0x1                   	// #1
  435fbc:	mov	x0, x20
  435fc0:	mov	w23, #0x1                   	// #1
  435fc4:	bl	4048f0 <__fprintf_chk@plt>
  435fc8:	ldrb	w8, [x19, #216]
  435fcc:	strb	w8, [x19, #223]
  435fd0:	ldr	x8, [x19, #200]
  435fd4:	cbz	x8, 436044 <argp_parse@@Base+0x7388>
  435fd8:	ldrb	w8, [x19, #221]
  435fdc:	cbnz	w8, 436044 <argp_parse@@Base+0x7388>
  435fe0:	ldp	x4, x5, [x19, #80]
  435fe4:	ldr	x0, [x22, #624]
  435fe8:	ldr	x3, [x19, #72]
  435fec:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x18808>
  435ff0:	eor	w8, w23, #0x1
  435ff4:	add	x9, x9, #0xe5b
  435ff8:	add	x2, x9, x8
  435ffc:	mov	w1, #0x1                   	// #1
  436000:	bl	4048f0 <__fprintf_chk@plt>
  436004:	ldr	x3, [x19, #96]
  436008:	cbz	x3, 436020 <argp_parse@@Base+0x7364>
  43600c:	ldr	x0, [x22, #624]
  436010:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x18808>
  436014:	add	x2, x2, #0xe6e
  436018:	mov	w1, #0x1                   	// #1
  43601c:	bl	4048f0 <__fprintf_chk@plt>
  436020:	ldr	w8, [x19, #28]
  436024:	cmp	w8, #0x1
  436028:	b.ne	43603c <argp_parse@@Base+0x7380>  // b.any
  43602c:	ldr	x1, [x22, #624]
  436030:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x18808>
  436034:	add	x0, x0, #0x898
  436038:	bl	404180 <fputs@plt>
  43603c:	mov	w23, #0x1                   	// #1
  436040:	strb	w23, [x19, #221]
  436044:	ldr	x8, [x19, #176]
  436048:	cbz	x8, 4360b0 <argp_parse@@Base+0x73f4>
  43604c:	ldrb	w8, [x19, #219]
  436050:	cbnz	w8, 4360b0 <argp_parse@@Base+0x73f4>
  436054:	cbz	w23, 436064 <argp_parse@@Base+0x73a8>
  436058:	ldr	x1, [x22, #624]
  43605c:	mov	w0, #0x20                  	// #32
  436060:	bl	404310 <fputc@plt>
  436064:	ldr	x20, [x22, #624]
  436068:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  43606c:	add	x1, x1, #0xe74
  436070:	mov	w2, #0x5                   	// #5
  436074:	mov	x0, xzr
  436078:	bl	404bd0 <dcgettext@plt>
  43607c:	mov	x21, x0
  436080:	add	x1, sp, #0xc
  436084:	mov	x0, x19
  436088:	bl	4382c0 <argp_parse@@Base+0x9604>
  43608c:	ldr	x4, [x19, #8]
  436090:	ldr	w5, [x19, #16]
  436094:	mov	x3, x0
  436098:	mov	w1, #0x1                   	// #1
  43609c:	mov	x0, x20
  4360a0:	mov	x2, x21
  4360a4:	mov	w23, #0x1                   	// #1
  4360a8:	bl	4048f0 <__fprintf_chk@plt>
  4360ac:	strb	w23, [x19, #219]
  4360b0:	ldr	x8, [x19, #184]
  4360b4:	cbz	x8, 436104 <argp_parse@@Base+0x7448>
  4360b8:	ldrb	w8, [x19, #220]
  4360bc:	cbnz	w8, 436104 <argp_parse@@Base+0x7448>
  4360c0:	ldr	x10, [x19, #192]
  4360c4:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x18808>
  4360c8:	ldr	x0, [x22, #624]
  4360cc:	eor	w8, w23, #0x1
  4360d0:	add	x9, x9, #0xe93
  4360d4:	ldr	w3, [x19, #20]
  4360d8:	add	x2, x9, x8
  4360dc:	adrp	x8, 454000 <_obstack_memory_used@@Base+0x18808>
  4360e0:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x16808>
  4360e4:	add	x8, x8, #0xe9f
  4360e8:	add	x9, x9, #0x3ee
  4360ec:	cmp	x10, #0x0
  4360f0:	csel	x4, x9, x8, eq  // eq = none
  4360f4:	mov	w1, #0x1                   	// #1
  4360f8:	mov	w23, #0x1                   	// #1
  4360fc:	bl	4048f0 <__fprintf_chk@plt>
  436100:	strb	w23, [x19, #220]
  436104:	ldr	x8, [x19, #208]
  436108:	cbz	x8, 436150 <argp_parse@@Base+0x7494>
  43610c:	ldrb	w8, [x19, #222]
  436110:	cbnz	w8, 436150 <argp_parse@@Base+0x7494>
  436114:	ldr	w0, [x19, #24]
  436118:	ldr	x20, [x22, #624]
  43611c:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x18808>
  436120:	eor	w8, w23, #0x1
  436124:	add	x9, x9, #0xea4
  436128:	add	x1, sp, #0xc
  43612c:	add	x21, x9, x8
  436130:	bl	438194 <argp_parse@@Base+0x94d8>
  436134:	mov	x3, x0
  436138:	mov	w1, #0x1                   	// #1
  43613c:	mov	x0, x20
  436140:	mov	x2, x21
  436144:	mov	w23, #0x1                   	// #1
  436148:	bl	4048f0 <__fprintf_chk@plt>
  43614c:	strb	w23, [x19, #222]
  436150:	ldrb	w8, [x19, #160]
  436154:	cbz	w8, 436198 <argp_parse@@Base+0x74dc>
  436158:	ldr	x19, [x19, #88]
  43615c:	cbz	w23, 43616c <argp_parse@@Base+0x74b0>
  436160:	ldr	x1, [x22, #624]
  436164:	mov	w0, #0x20                  	// #32
  436168:	bl	404310 <fputc@plt>
  43616c:	ldr	x20, [x22, #624]
  436170:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  436174:	add	x1, x1, #0xeab
  436178:	mov	w2, #0x5                   	// #5
  43617c:	mov	x0, xzr
  436180:	bl	404bd0 <dcgettext@plt>
  436184:	mov	x2, x0
  436188:	mov	w1, #0x1                   	// #1
  43618c:	mov	x0, x20
  436190:	mov	x3, x19
  436194:	bl	4048f0 <__fprintf_chk@plt>
  436198:	ldr	x1, [x22, #624]
  43619c:	mov	w0, #0xa                   	// #10
  4361a0:	bl	404310 <fputc@plt>
  4361a4:	b	435efc <argp_parse@@Base+0x7240>
  4361a8:	stp	x29, x30, [sp, #-48]!
  4361ac:	stp	x20, x19, [sp, #32]
  4361b0:	ldrb	w8, [x1, #217]
  4361b4:	str	x21, [sp, #16]
  4361b8:	mov	x29, sp
  4361bc:	cbnz	w8, 4361d0 <argp_parse@@Base+0x7514>
  4361c0:	ldp	x20, x19, [sp, #32]
  4361c4:	ldr	x21, [sp, #16]
  4361c8:	ldp	x29, x30, [sp], #48
  4361cc:	ret
  4361d0:	mov	x19, x1
  4361d4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  4361d8:	mov	x20, x0
  4361dc:	add	x1, x1, #0xe24
  4361e0:	mov	w2, #0x5                   	// #5
  4361e4:	mov	x0, xzr
  4361e8:	bl	404bd0 <dcgettext@plt>
  4361ec:	mov	x1, x20
  4361f0:	bl	4368a0 <argp_parse@@Base+0x7be4>
  4361f4:	ldr	x3, [x19, #104]
  4361f8:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4361fc:	cbnz	x3, 436258 <argp_parse@@Base+0x759c>
  436200:	ldr	x3, [x19, #112]
  436204:	cbnz	x3, 436288 <argp_parse@@Base+0x75cc>
  436208:	ldr	x8, [x19, #120]
  43620c:	cbnz	x8, 4362b4 <argp_parse@@Base+0x75f8>
  436210:	ldr	x8, [x19, #128]
  436214:	cbnz	x8, 4362b4 <argp_parse@@Base+0x75f8>
  436218:	ldr	x8, [x19, #136]
  43621c:	cbnz	x8, 4362b4 <argp_parse@@Base+0x75f8>
  436220:	ldr	x8, [x19, #144]
  436224:	cbnz	x8, 4362b4 <argp_parse@@Base+0x75f8>
  436228:	ldr	w8, [x19, #152]
  43622c:	cbnz	w8, 4362b4 <argp_parse@@Base+0x75f8>
  436230:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  436234:	add	x1, x1, #0xec2
  436238:	mov	w2, #0x5                   	// #5
  43623c:	mov	x0, xzr
  436240:	bl	404bd0 <dcgettext@plt>
  436244:	ldr	x1, [x20, #624]
  436248:	ldp	x20, x19, [sp, #32]
  43624c:	ldr	x21, [sp, #16]
  436250:	ldp	x29, x30, [sp], #48
  436254:	b	404180 <fputs@plt>
  436258:	ldr	x0, [x20, #624]
  43625c:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x18808>
  436260:	adrp	x4, 454000 <_obstack_memory_used@@Base+0x18808>
  436264:	add	x2, x2, #0xf07
  436268:	add	x4, x4, #0xed2
  43626c:	mov	w1, #0x1                   	// #1
  436270:	mov	w21, #0x1                   	// #1
  436274:	bl	4048f0 <__fprintf_chk@plt>
  436278:	ldr	x3, [x19, #112]
  43627c:	cbz	x3, 4362b8 <argp_parse@@Base+0x75fc>
  436280:	mov	x8, xzr
  436284:	b	43628c <argp_parse@@Base+0x75d0>
  436288:	mov	w8, #0x1                   	// #1
  43628c:	ldr	x0, [x20, #624]
  436290:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x18808>
  436294:	add	x9, x9, #0xf06
  436298:	adrp	x4, 454000 <_obstack_memory_used@@Base+0x18808>
  43629c:	add	x2, x9, x8
  4362a0:	add	x4, x4, #0xeda
  4362a4:	mov	w1, #0x1                   	// #1
  4362a8:	mov	w21, #0x1                   	// #1
  4362ac:	bl	4048f0 <__fprintf_chk@plt>
  4362b0:	b	4362b8 <argp_parse@@Base+0x75fc>
  4362b4:	mov	w21, wzr
  4362b8:	ldr	x3, [x19, #120]
  4362bc:	cbz	x3, 4362e8 <argp_parse@@Base+0x762c>
  4362c0:	ldr	x0, [x20, #624]
  4362c4:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x18808>
  4362c8:	eor	w8, w21, #0x1
  4362cc:	add	x9, x9, #0xf06
  4362d0:	adrp	x4, 454000 <_obstack_memory_used@@Base+0x18808>
  4362d4:	add	x2, x9, x8
  4362d8:	add	x4, x4, #0xee3
  4362dc:	mov	w1, #0x1                   	// #1
  4362e0:	mov	w21, #0x1                   	// #1
  4362e4:	bl	4048f0 <__fprintf_chk@plt>
  4362e8:	ldr	x3, [x19, #128]
  4362ec:	cbz	x3, 436318 <argp_parse@@Base+0x765c>
  4362f0:	ldr	x0, [x20, #624]
  4362f4:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x18808>
  4362f8:	eor	w8, w21, #0x1
  4362fc:	add	x9, x9, #0xf06
  436300:	adrp	x4, 454000 <_obstack_memory_used@@Base+0x18808>
  436304:	add	x2, x9, x8
  436308:	add	x4, x4, #0xeea
  43630c:	mov	w1, #0x1                   	// #1
  436310:	mov	w21, #0x1                   	// #1
  436314:	bl	4048f0 <__fprintf_chk@plt>
  436318:	ldr	x3, [x19, #136]
  43631c:	cbz	x3, 436348 <argp_parse@@Base+0x768c>
  436320:	ldr	x0, [x20, #624]
  436324:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x18808>
  436328:	eor	w8, w21, #0x1
  43632c:	add	x9, x9, #0xf06
  436330:	adrp	x4, 454000 <_obstack_memory_used@@Base+0x18808>
  436334:	add	x2, x9, x8
  436338:	add	x4, x4, #0xef2
  43633c:	mov	w1, #0x1                   	// #1
  436340:	mov	w21, #0x1                   	// #1
  436344:	bl	4048f0 <__fprintf_chk@plt>
  436348:	ldr	x3, [x19, #144]
  43634c:	cbz	x3, 436378 <argp_parse@@Base+0x76bc>
  436350:	ldr	x0, [x20, #624]
  436354:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x18808>
  436358:	eor	w8, w21, #0x1
  43635c:	add	x9, x9, #0xf06
  436360:	adrp	x4, 454000 <_obstack_memory_used@@Base+0x18808>
  436364:	add	x2, x9, x8
  436368:	add	x4, x4, #0x618
  43636c:	mov	w1, #0x1                   	// #1
  436370:	mov	w21, #0x1                   	// #1
  436374:	bl	4048f0 <__fprintf_chk@plt>
  436378:	ldrsw	x3, [x19, #152]
  43637c:	cbz	w3, 4363a4 <argp_parse@@Base+0x76e8>
  436380:	ldr	x0, [x20, #624]
  436384:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x18808>
  436388:	eor	w8, w21, #0x1
  43638c:	add	x9, x9, #0xf06
  436390:	adrp	x4, 454000 <_obstack_memory_used@@Base+0x18808>
  436394:	add	x2, x9, x8
  436398:	add	x4, x4, #0xefa
  43639c:	mov	w1, #0x1                   	// #1
  4363a0:	bl	4048f0 <__fprintf_chk@plt>
  4363a4:	ldr	x1, [x20, #624]
  4363a8:	ldp	x20, x19, [sp, #32]
  4363ac:	ldr	x21, [sp, #16]
  4363b0:	mov	w0, #0xa                   	// #10
  4363b4:	ldp	x29, x30, [sp], #48
  4363b8:	b	404310 <fputc@plt>
  4363bc:	ldr	x8, [x1, #8]
  4363c0:	tbz	x2, #63, 4363dc <argp_parse@@Base+0x7720>
  4363c4:	ldr	x9, [x1, #16]
  4363c8:	cmp	x9, #0x2
  4363cc:	b.gt	4363dc <argp_parse@@Base+0x7720>
  4363d0:	mov	w9, #0x64                  	// #100
  4363d4:	mul	x8, x8, x9
  4363d8:	str	x8, [x1, #8]
  4363dc:	tbnz	x2, #63, 436400 <argp_parse@@Base+0x7744>
  4363e0:	tbnz	x8, #63, 436438 <argp_parse@@Base+0x777c>
  4363e4:	mov	x9, #0x2222222222222222    	// #2459565876494606882
  4363e8:	movk	x9, #0x2223
  4363ec:	movk	x9, #0x222, lsl #48
  4363f0:	cmp	x8, x9
  4363f4:	b.lt	43644c <argp_parse@@Base+0x7790>  // b.tstop
  4363f8:	mov	w10, #0x1                   	// #1
  4363fc:	b	436450 <argp_parse@@Base+0x7794>
  436400:	mov	x9, #0xd70b                	// #55051
  436404:	movk	x9, #0x70a3, lsl #16
  436408:	movk	x9, #0xa3d, lsl #32
  43640c:	movk	x9, #0xa3d7, lsl #48
  436410:	smulh	x9, x8, x9
  436414:	add	x9, x9, x8
  436418:	asr	x12, x9, #6
  43641c:	mov	w11, #0x64                  	// #100
  436420:	add	x9, x12, x9, lsr #63
  436424:	mov	w10, #0x3c                  	// #60
  436428:	msub	x8, x9, x11, x8
  43642c:	madd	x9, x9, x10, x8
  436430:	mov	w10, #0x1                   	// #1
  436434:	b	436490 <argp_parse@@Base+0x77d4>
  436438:	mov	x9, #0xdddddddddddddddd    	// #-2459565876494606883
  43643c:	movk	x9, #0xddde
  436440:	movk	x9, #0xfddd, lsl #48
  436444:	cmp	x8, x9
  436448:	b.lt	4363f8 <argp_parse@@Base+0x773c>  // b.tstop
  43644c:	mov	w10, wzr
  436450:	ldrb	w11, [x1]
  436454:	mov	w9, #0x3c                  	// #60
  436458:	mul	x9, x8, x9
  43645c:	cbz	w11, 436474 <argp_parse@@Base+0x77b8>
  436460:	orr	x8, x2, #0x8000000000000000
  436464:	cmp	x9, x8
  436468:	cset	w8, lt  // lt = tstop
  43646c:	sub	x9, x9, x2
  436470:	b	436488 <argp_parse@@Base+0x77cc>
  436474:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  436478:	sub	x8, x8, x2
  43647c:	cmp	x8, x9
  436480:	cset	w8, lt  // lt = tstop
  436484:	add	x9, x9, x2
  436488:	orr	w8, w10, w8
  43648c:	eor	w10, w8, #0x1
  436490:	mov	w8, wzr
  436494:	cbz	w10, 4364b4 <argp_parse@@Base+0x77f8>
  436498:	add	x10, x9, #0x5a0
  43649c:	cmp	x10, #0xb40
  4364a0:	b.hi	4364b4 <argp_parse@@Base+0x77f8>  // b.pmore
  4364a4:	mov	w8, #0x3c                  	// #60
  4364a8:	mul	w8, w9, w8
  4364ac:	str	w8, [x0, #24]
  4364b0:	mov	w8, #0x1                   	// #1
  4364b4:	mov	w0, w8
  4364b8:	ret
  4364bc:	ldr	w8, [x1, #48]
  4364c0:	tbnz	w2, #31, 4364e4 <argp_parse@@Base+0x7828>
  4364c4:	tbnz	w8, #31, 436500 <argp_parse@@Base+0x7844>
  4364c8:	ldr	w10, [x0, #152]
  4364cc:	mov	w9, #0x7fffffff            	// #2147483647
  4364d0:	sub	w9, w9, w8
  4364d4:	cmp	w9, w10
  4364d8:	b.ge	436514 <argp_parse@@Base+0x7858>  // b.tcont
  4364dc:	mov	w9, #0x1                   	// #1
  4364e0:	b	436518 <argp_parse@@Base+0x785c>
  4364e4:	tbnz	w8, #31, 4366cc <argp_parse@@Base+0x7a10>
  4364e8:	ldr	w10, [x0, #152]
  4364ec:	orr	w9, w8, #0x80000000
  4364f0:	cmp	w10, w9
  4364f4:	b.ge	4366e0 <argp_parse@@Base+0x7a24>  // b.tcont
  4364f8:	mov	w9, #0x1                   	// #1
  4364fc:	b	4366e4 <argp_parse@@Base+0x7a28>
  436500:	ldr	w10, [x0, #152]
  436504:	mov	w9, #0x80000000            	// #-2147483648
  436508:	sub	w9, w9, w8
  43650c:	cmp	w10, w9
  436510:	b.lt	4364dc <argp_parse@@Base+0x7820>  // b.tstop
  436514:	mov	w9, wzr
  436518:	add	w8, w10, w8
  43651c:	str	w8, [x0, #152]
  436520:	ldr	x8, [x1, #40]
  436524:	tbnz	x8, #63, 436544 <argp_parse@@Base+0x7888>
  436528:	ldr	x10, [x0, #144]
  43652c:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  436530:	sub	x11, x11, x8
  436534:	cmp	x11, x10
  436538:	b.ge	436558 <argp_parse@@Base+0x789c>  // b.tcont
  43653c:	mov	w11, #0x1                   	// #1
  436540:	b	43655c <argp_parse@@Base+0x78a0>
  436544:	ldr	x10, [x0, #144]
  436548:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  43654c:	sub	x11, x11, x8
  436550:	cmp	x10, x11
  436554:	b.lt	43653c <argp_parse@@Base+0x7880>  // b.tstop
  436558:	mov	w11, wzr
  43655c:	add	x8, x10, x8
  436560:	str	x8, [x0, #144]
  436564:	ldr	x10, [x1, #32]
  436568:	orr	w8, w11, w9
  43656c:	tbnz	x10, #63, 43658c <argp_parse@@Base+0x78d0>
  436570:	ldr	x9, [x0, #136]
  436574:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  436578:	sub	x11, x11, x10
  43657c:	cmp	x11, x9
  436580:	b.ge	4365a0 <argp_parse@@Base+0x78e4>  // b.tcont
  436584:	mov	w11, #0x1                   	// #1
  436588:	b	4365a4 <argp_parse@@Base+0x78e8>
  43658c:	ldr	x9, [x0, #136]
  436590:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  436594:	sub	x11, x11, x10
  436598:	cmp	x9, x11
  43659c:	b.lt	436584 <argp_parse@@Base+0x78c8>  // b.tstop
  4365a0:	mov	w11, wzr
  4365a4:	add	x9, x9, x10
  4365a8:	str	x9, [x0, #136]
  4365ac:	ldr	x9, [x1, #24]
  4365b0:	orr	w8, w8, w11
  4365b4:	tbnz	x9, #63, 4365d4 <argp_parse@@Base+0x7918>
  4365b8:	ldr	x10, [x0, #128]
  4365bc:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4365c0:	sub	x11, x11, x9
  4365c4:	cmp	x11, x10
  4365c8:	b.ge	4365e8 <argp_parse@@Base+0x792c>  // b.tcont
  4365cc:	mov	w11, #0x1                   	// #1
  4365d0:	b	4365ec <argp_parse@@Base+0x7930>
  4365d4:	ldr	x10, [x0, #128]
  4365d8:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  4365dc:	sub	x11, x11, x9
  4365e0:	cmp	x10, x11
  4365e4:	b.lt	4365cc <argp_parse@@Base+0x7910>  // b.tstop
  4365e8:	mov	w11, wzr
  4365ec:	add	x9, x10, x9
  4365f0:	str	x9, [x0, #128]
  4365f4:	ldr	x9, [x1, #16]
  4365f8:	orr	w8, w8, w11
  4365fc:	tbnz	x9, #63, 43661c <argp_parse@@Base+0x7960>
  436600:	ldr	x10, [x0, #120]
  436604:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  436608:	sub	x11, x11, x9
  43660c:	cmp	x11, x10
  436610:	b.ge	436630 <argp_parse@@Base+0x7974>  // b.tcont
  436614:	mov	w11, #0x1                   	// #1
  436618:	b	436634 <argp_parse@@Base+0x7978>
  43661c:	ldr	x10, [x0, #120]
  436620:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  436624:	sub	x11, x11, x9
  436628:	cmp	x10, x11
  43662c:	b.lt	436614 <argp_parse@@Base+0x7958>  // b.tstop
  436630:	mov	w11, wzr
  436634:	add	x9, x10, x9
  436638:	str	x9, [x0, #120]
  43663c:	ldr	x9, [x1, #8]
  436640:	orr	w8, w8, w11
  436644:	tbnz	x9, #63, 436664 <argp_parse@@Base+0x79a8>
  436648:	ldr	x10, [x0, #112]
  43664c:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  436650:	sub	x11, x11, x9
  436654:	cmp	x11, x10
  436658:	b.ge	436678 <argp_parse@@Base+0x79bc>  // b.tcont
  43665c:	mov	w11, #0x1                   	// #1
  436660:	b	43667c <argp_parse@@Base+0x79c0>
  436664:	ldr	x10, [x0, #112]
  436668:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  43666c:	sub	x11, x11, x9
  436670:	cmp	x10, x11
  436674:	b.lt	43665c <argp_parse@@Base+0x79a0>  // b.tstop
  436678:	mov	w11, wzr
  43667c:	add	x9, x10, x9
  436680:	str	x9, [x0, #112]
  436684:	ldr	x9, [x1]
  436688:	orr	w8, w8, w11
  43668c:	tbnz	x9, #63, 4366ac <argp_parse@@Base+0x79f0>
  436690:	ldr	x10, [x0, #104]
  436694:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  436698:	sub	x11, x11, x9
  43669c:	cmp	x11, x10
  4366a0:	b.ge	4366c0 <argp_parse@@Base+0x7a04>  // b.tcont
  4366a4:	mov	w11, #0x1                   	// #1
  4366a8:	b	4366c4 <argp_parse@@Base+0x7a08>
  4366ac:	ldr	x10, [x0, #104]
  4366b0:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  4366b4:	sub	x11, x11, x9
  4366b8:	cmp	x10, x11
  4366bc:	b.lt	4366a4 <argp_parse@@Base+0x79e8>  // b.tstop
  4366c0:	mov	w11, wzr
  4366c4:	add	x9, x10, x9
  4366c8:	b	43687c <argp_parse@@Base+0x7bc0>
  4366cc:	ldr	w10, [x0, #152]
  4366d0:	mov	w9, #0x7fffffff            	// #2147483647
  4366d4:	add	w9, w8, w9
  4366d8:	cmp	w9, w10
  4366dc:	b.lt	4364f8 <argp_parse@@Base+0x783c>  // b.tstop
  4366e0:	mov	w9, wzr
  4366e4:	sub	w8, w10, w8
  4366e8:	str	w8, [x0, #152]
  4366ec:	ldr	x8, [x1, #40]
  4366f0:	tbnz	x8, #63, 43670c <argp_parse@@Base+0x7a50>
  4366f4:	ldr	x10, [x0, #144]
  4366f8:	orr	x11, x8, #0x8000000000000000
  4366fc:	cmp	x10, x11
  436700:	b.ge	436720 <argp_parse@@Base+0x7a64>  // b.tcont
  436704:	mov	w11, #0x1                   	// #1
  436708:	b	436724 <argp_parse@@Base+0x7a68>
  43670c:	ldr	x10, [x0, #144]
  436710:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  436714:	add	x11, x8, x11
  436718:	cmp	x11, x10
  43671c:	b.lt	436704 <argp_parse@@Base+0x7a48>  // b.tstop
  436720:	mov	w11, wzr
  436724:	sub	x8, x10, x8
  436728:	str	x8, [x0, #144]
  43672c:	ldr	x10, [x1, #32]
  436730:	orr	w8, w11, w9
  436734:	tbnz	x10, #63, 436750 <argp_parse@@Base+0x7a94>
  436738:	ldr	x9, [x0, #136]
  43673c:	orr	x11, x10, #0x8000000000000000
  436740:	cmp	x9, x11
  436744:	b.ge	436764 <argp_parse@@Base+0x7aa8>  // b.tcont
  436748:	mov	w11, #0x1                   	// #1
  43674c:	b	436768 <argp_parse@@Base+0x7aac>
  436750:	ldr	x9, [x0, #136]
  436754:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  436758:	add	x11, x10, x11
  43675c:	cmp	x11, x9
  436760:	b.lt	436748 <argp_parse@@Base+0x7a8c>  // b.tstop
  436764:	mov	w11, wzr
  436768:	sub	x9, x9, x10
  43676c:	str	x9, [x0, #136]
  436770:	ldr	x9, [x1, #24]
  436774:	orr	w8, w8, w11
  436778:	tbnz	x9, #63, 436794 <argp_parse@@Base+0x7ad8>
  43677c:	ldr	x10, [x0, #128]
  436780:	orr	x11, x9, #0x8000000000000000
  436784:	cmp	x10, x11
  436788:	b.ge	4367a8 <argp_parse@@Base+0x7aec>  // b.tcont
  43678c:	mov	w11, #0x1                   	// #1
  436790:	b	4367ac <argp_parse@@Base+0x7af0>
  436794:	ldr	x10, [x0, #128]
  436798:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  43679c:	add	x11, x9, x11
  4367a0:	cmp	x11, x10
  4367a4:	b.lt	43678c <argp_parse@@Base+0x7ad0>  // b.tstop
  4367a8:	mov	w11, wzr
  4367ac:	sub	x9, x10, x9
  4367b0:	str	x9, [x0, #128]
  4367b4:	ldr	x9, [x1, #16]
  4367b8:	orr	w8, w8, w11
  4367bc:	tbnz	x9, #63, 4367d8 <argp_parse@@Base+0x7b1c>
  4367c0:	ldr	x10, [x0, #120]
  4367c4:	orr	x11, x9, #0x8000000000000000
  4367c8:	cmp	x10, x11
  4367cc:	b.ge	4367ec <argp_parse@@Base+0x7b30>  // b.tcont
  4367d0:	mov	w11, #0x1                   	// #1
  4367d4:	b	4367f0 <argp_parse@@Base+0x7b34>
  4367d8:	ldr	x10, [x0, #120]
  4367dc:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4367e0:	add	x11, x9, x11
  4367e4:	cmp	x11, x10
  4367e8:	b.lt	4367d0 <argp_parse@@Base+0x7b14>  // b.tstop
  4367ec:	mov	w11, wzr
  4367f0:	sub	x9, x10, x9
  4367f4:	str	x9, [x0, #120]
  4367f8:	ldr	x9, [x1, #8]
  4367fc:	orr	w8, w8, w11
  436800:	tbnz	x9, #63, 43681c <argp_parse@@Base+0x7b60>
  436804:	ldr	x10, [x0, #112]
  436808:	orr	x11, x9, #0x8000000000000000
  43680c:	cmp	x10, x11
  436810:	b.ge	436830 <argp_parse@@Base+0x7b74>  // b.tcont
  436814:	mov	w11, #0x1                   	// #1
  436818:	b	436834 <argp_parse@@Base+0x7b78>
  43681c:	ldr	x10, [x0, #112]
  436820:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  436824:	add	x11, x9, x11
  436828:	cmp	x11, x10
  43682c:	b.lt	436814 <argp_parse@@Base+0x7b58>  // b.tstop
  436830:	mov	w11, wzr
  436834:	sub	x9, x10, x9
  436838:	str	x9, [x0, #112]
  43683c:	ldr	x9, [x1]
  436840:	orr	w8, w8, w11
  436844:	tbnz	x9, #63, 436860 <argp_parse@@Base+0x7ba4>
  436848:	ldr	x10, [x0, #104]
  43684c:	orr	x11, x9, #0x8000000000000000
  436850:	cmp	x10, x11
  436854:	b.ge	436874 <argp_parse@@Base+0x7bb8>  // b.tcont
  436858:	mov	w11, #0x1                   	// #1
  43685c:	b	436878 <argp_parse@@Base+0x7bbc>
  436860:	ldr	x10, [x0, #104]
  436864:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  436868:	add	x11, x9, x11
  43686c:	cmp	x11, x10
  436870:	b.lt	436858 <argp_parse@@Base+0x7b9c>  // b.tstop
  436874:	mov	w11, wzr
  436878:	sub	x9, x10, x9
  43687c:	orr	w8, w8, w11
  436880:	str	x9, [x0, #104]
  436884:	cbz	w8, 436890 <argp_parse@@Base+0x7bd4>
  436888:	mov	w8, wzr
  43688c:	b	436898 <argp_parse@@Base+0x7bdc>
  436890:	mov	w8, #0x1                   	// #1
  436894:	strb	w8, [x0, #161]
  436898:	mov	w0, w8
  43689c:	ret
  4368a0:	sub	sp, sp, #0x130
  4368a4:	stp	x29, x30, [sp, #256]
  4368a8:	stp	x20, x19, [sp, #288]
  4368ac:	add	x29, sp, #0x100
  4368b0:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4368b4:	stp	x1, x2, [x29, #-120]
  4368b8:	ldr	x1, [x20, #624]
  4368bc:	mov	x19, x0
  4368c0:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x18808>
  4368c4:	add	x0, x0, #0xf0f
  4368c8:	str	x28, [sp, #272]
  4368cc:	stp	x3, x4, [x29, #-104]
  4368d0:	stp	x5, x6, [x29, #-88]
  4368d4:	stur	x7, [x29, #-72]
  4368d8:	stp	q0, q1, [sp]
  4368dc:	stp	q2, q3, [sp, #32]
  4368e0:	stp	q4, q5, [sp, #64]
  4368e4:	stp	q6, q7, [sp, #96]
  4368e8:	bl	404180 <fputs@plt>
  4368ec:	sub	x9, x29, #0x78
  4368f0:	mov	x10, sp
  4368f4:	mov	x11, #0xffffffffffffffc8    	// #-56
  4368f8:	add	x8, x29, #0x30
  4368fc:	movk	x11, #0xff80, lsl #32
  436900:	add	x9, x9, #0x38
  436904:	add	x10, x10, #0x80
  436908:	stp	x8, x9, [x29, #-64]
  43690c:	stp	x10, x11, [x29, #-48]
  436910:	ldp	q0, q1, [x29, #-64]
  436914:	ldr	x0, [x20, #624]
  436918:	sub	x3, x29, #0x20
  43691c:	mov	w1, #0x1                   	// #1
  436920:	mov	x2, x19
  436924:	stp	q0, q1, [x29, #-32]
  436928:	bl	404670 <__vfprintf_chk@plt>
  43692c:	ldp	x20, x19, [sp, #288]
  436930:	ldr	x28, [sp, #272]
  436934:	ldp	x29, x30, [sp, #256]
  436938:	add	sp, sp, #0x130
  43693c:	ret
  436940:	ldr	x9, [x0, #168]
  436944:	cbz	x9, 436958 <argp_parse@@Base+0x7c9c>
  436948:	ldr	x8, [x0, #48]
  43694c:	cbnz	x8, 436958 <argp_parse@@Base+0x7c9c>
  436950:	ldrb	w8, [x0, #161]
  436954:	cbz	w8, 436a38 <argp_parse@@Base+0x7d7c>
  436958:	ldr	x8, [x1, #16]
  43695c:	cmp	x8, #0x5
  436960:	b.lt	4369d8 <argp_parse@@Base+0x7d1c>  // b.tstop
  436964:	add	x9, x9, #0x1
  436968:	str	x9, [x0, #168]
  43696c:	ldr	x9, [x1, #8]
  436970:	mov	x10, #0xd70b                	// #55051
  436974:	mov	x11, #0x594b                	// #22859
  436978:	movk	x10, #0x70a3, lsl #16
  43697c:	movk	x11, #0x3886, lsl #16
  436980:	movk	x10, #0xa3d, lsl #32
  436984:	movk	x11, #0xc5d6, lsl #32
  436988:	movk	x10, #0xa3d7, lsl #48
  43698c:	movk	x11, #0x346d, lsl #48
  436990:	smulh	x12, x9, x10
  436994:	smulh	x11, x9, x11
  436998:	add	x12, x12, x9
  43699c:	asr	x13, x11, #11
  4369a0:	add	x11, x13, x11, lsr #63
  4369a4:	asr	x13, x12, #6
  4369a8:	add	x12, x13, x12, lsr #63
  4369ac:	smulh	x10, x12, x10
  4369b0:	add	x10, x10, x12
  4369b4:	asr	x13, x10, #6
  4369b8:	add	x10, x13, x10, lsr #63
  4369bc:	mov	w13, #0x64                  	// #100
  4369c0:	sub	x8, x8, #0x4
  4369c4:	msub	x9, x12, x13, x9
  4369c8:	msub	x10, x10, x13, x12
  4369cc:	stp	x10, x9, [x0, #56]
  4369d0:	stp	x11, x8, [x0, #40]
  4369d4:	ret
  4369d8:	ldr	x9, [x0, #200]
  4369dc:	cmp	x8, #0x3
  4369e0:	add	x9, x9, #0x1
  4369e4:	str	x9, [x0, #200]
  4369e8:	ldr	x9, [x1, #8]
  4369ec:	b.ge	4369f8 <argp_parse@@Base+0x7d3c>  // b.tcont
  4369f0:	mov	x8, xzr
  4369f4:	b	436a24 <argp_parse@@Base+0x7d68>
  4369f8:	mov	x8, #0xd70b                	// #55051
  4369fc:	movk	x8, #0x70a3, lsl #16
  436a00:	movk	x8, #0xa3d, lsl #32
  436a04:	movk	x8, #0xa3d7, lsl #48
  436a08:	smulh	x8, x9, x8
  436a0c:	add	x8, x8, x9
  436a10:	asr	x10, x8, #6
  436a14:	add	x10, x10, x8, lsr #63
  436a18:	mov	w8, #0x64                  	// #100
  436a1c:	msub	x8, x10, x8, x9
  436a20:	mov	x9, x10
  436a24:	stp	x9, x8, [x0, #72]
  436a28:	mov	w8, #0x2                   	// #2
  436a2c:	stp	xzr, xzr, [x0, #88]
  436a30:	str	w8, [x0, #28]
  436a34:	ret
  436a38:	ldr	x8, [x0, #200]
  436a3c:	cbnz	x8, 436a4c <argp_parse@@Base+0x7d90>
  436a40:	ldr	x8, [x1, #16]
  436a44:	cmp	x8, #0x3
  436a48:	b.lt	436958 <argp_parse@@Base+0x7c9c>  // b.tstop
  436a4c:	mov	w8, #0x1                   	// #1
  436a50:	strb	w8, [x0, #216]
  436a54:	ldr	x8, [x1, #16]
  436a58:	ldr	q0, [x1]
  436a5c:	str	x8, [x0, #48]
  436a60:	str	q0, [x0, #32]
  436a64:	ret
  436a68:	stp	x29, x30, [sp, #-64]!
  436a6c:	stp	x22, x21, [sp, #32]
  436a70:	mov	x21, x0
  436a74:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x18808>
  436a78:	add	x0, x0, #0x6c2
  436a7c:	str	x23, [sp, #16]
  436a80:	stp	x20, x19, [sp, #48]
  436a84:	mov	x29, sp
  436a88:	mov	x19, x2
  436a8c:	mov	x20, x1
  436a90:	bl	404d10 <getenv@plt>
  436a94:	mov	x22, x0
  436a98:	bl	447110 <_obstack_memory_used@@Base+0xb918>
  436a9c:	cbz	x0, 436ad0 <argp_parse@@Base+0x7e14>
  436aa0:	mov	x23, x0
  436aa4:	mov	x0, x21
  436aa8:	mov	x1, x20
  436aac:	mov	x2, x19
  436ab0:	mov	w3, wzr
  436ab4:	mov	x4, x23
  436ab8:	mov	x5, x22
  436abc:	bl	436ae4 <argp_parse@@Base+0x7e28>
  436ac0:	mov	w19, w0
  436ac4:	mov	x0, x23
  436ac8:	bl	4471a0 <_obstack_memory_used@@Base+0xb9a8>
  436acc:	and	w0, w19, #0x1
  436ad0:	ldp	x20, x19, [sp, #48]
  436ad4:	ldp	x22, x21, [sp, #32]
  436ad8:	ldr	x23, [sp, #16]
  436adc:	ldp	x29, x30, [sp], #64
  436ae0:	ret
  436ae4:	stp	x29, x30, [sp, #-96]!
  436ae8:	stp	x28, x27, [sp, #16]
  436aec:	stp	x26, x25, [sp, #32]
  436af0:	stp	x24, x23, [sp, #48]
  436af4:	stp	x22, x21, [sp, #64]
  436af8:	stp	x20, x19, [sp, #80]
  436afc:	mov	x29, sp
  436b00:	sub	sp, sp, #0x3f0
  436b04:	stp	x0, x5, [sp, #48]
  436b08:	mov	x0, x1
  436b0c:	mov	x19, x4
  436b10:	mov	w24, w3
  436b14:	mov	x25, x2
  436b18:	mov	x20, x1
  436b1c:	bl	404170 <strlen@plt>
  436b20:	mov	x21, x0
  436b24:	cbnz	x25, 436b34 <argp_parse@@Base+0x7e78>
  436b28:	add	x0, sp, #0x208
  436b2c:	add	x25, sp, #0x208
  436b30:	bl	4327b8 <argp_parse@@Base+0x3afc>
  436b34:	ldp	x22, x23, [x25]
  436b38:	add	x27, sp, #0x80
  436b3c:	add	x28, x20, x21
  436b40:	add	x20, x20, #0x4
  436b44:	ldurb	w8, [x20, #-4]
  436b48:	sub	w9, w8, #0x9
  436b4c:	cmp	w9, #0x5
  436b50:	b.cs	436b5c <argp_parse@@Base+0x7ea0>  // b.hs, b.nlast
  436b54:	add	x20, x20, #0x1
  436b58:	b	436b44 <argp_parse@@Base+0x7e88>
  436b5c:	cmp	w8, #0x20
  436b60:	b.eq	436b54 <argp_parse@@Base+0x7e98>  // b.none
  436b64:	sub	x26, x20, #0x4
  436b68:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  436b6c:	movi	v0.2d, #0x0
  436b70:	add	x1, x1, #0x6c5
  436b74:	mov	w2, #0x4                   	// #4
  436b78:	mov	x0, x26
  436b7c:	str	xzr, [sp, #512]
  436b80:	stp	q0, q0, [x27, #352]
  436b84:	str	q0, [x27, #336]
  436b88:	bl	404580 <strncmp@plt>
  436b8c:	cbz	w0, 436cdc <argp_parse@@Base+0x8020>
  436b90:	mov	x8, xzr
  436b94:	str	xzr, [sp, #64]
  436b98:	mov	x21, x19
  436b9c:	add	x2, sp, #0x198
  436ba0:	mov	x0, x21
  436ba4:	mov	x1, x25
  436ba8:	bl	4471d0 <_obstack_memory_used@@Base+0xb9d8>
  436bac:	cbz	x0, 436db8 <argp_parse@@Base+0x80fc>
  436bb0:	ldrb	w8, [x26]
  436bb4:	adrp	x9, 453000 <_obstack_memory_used@@Base+0x17808>
  436bb8:	and	w10, w24, #0x1
  436bbc:	ldp	d1, d0, [sp, #408]
  436bc0:	add	x9, x9, #0x6b8
  436bc4:	strb	w10, [sp, #345]
  436bc8:	ldrsw	x10, [sp, #428]
  436bcc:	ldrsw	x11, [sp, #424]
  436bd0:	cmp	w8, #0x0
  436bd4:	csel	x9, x9, x26, eq  // eq = none
  436bd8:	str	x9, [sp, #128]
  436bdc:	ldr	x9, [sp, #512]
  436be0:	rev64	v0.2s, v0.2s
  436be4:	rev64	v1.2s, v1.2s
  436be8:	add	x11, x11, #0x1
  436bec:	sxtl	v0.2d, v0.2s
  436bf0:	add	x10, x10, #0x76c
  436bf4:	sxtl	v1.2d, v1.2s
  436bf8:	stp	xzr, x11, [sp, #176]
  436bfc:	str	q0, [sp, #192]
  436c00:	str	x10, [sp, #168]
  436c04:	str	q1, [x27, #80]
  436c08:	ldr	q1, [x27, #368]
  436c0c:	ldr	w13, [sp, #440]
  436c10:	ldp	q0, q2, [x27, #336]
  436c14:	str	x9, [sp, #280]
  436c18:	ldr	x9, [sp, #456]
  436c1c:	mov	w20, #0xa700                	// #42752
  436c20:	add	x8, sp, #0x80
  436c24:	sxtw	x12, w23
  436c28:	mov	w11, #0x2                   	// #2
  436c2c:	mov	w24, #0xa700                	// #42752
  436c30:	movk	w20, #0x76, lsl #16
  436c34:	str	w11, [sp, #156]
  436c38:	str	x12, [sp, #224]
  436c3c:	stur	q1, [x27, #136]
  436c40:	movi	v1.2d, #0x0
  436c44:	mov	w10, #0x10d                 	// #269
  436c48:	mov	w23, #0x3                   	// #3
  436c4c:	add	x25, x8, #0x58
  436c50:	movk	w24, #0x76, lsl #16
  436c54:	stur	w13, [x29, #-144]
  436c58:	stur	q2, [x27, #120]
  436c5c:	stur	q0, [x27, #104]
  436c60:	strh	wzr, [sp, #288]
  436c64:	stur	q1, [x27, #168]
  436c68:	stur	q1, [x27, #184]
  436c6c:	stur	q1, [x27, #200]
  436c70:	strb	wzr, [sp, #344]
  436c74:	stur	wzr, [x27, #218]
  436c78:	stur	wzr, [x27, #221]
  436c7c:	str	x9, [sp, #360]
  436c80:	str	w10, [sp, #368]
  436c84:	str	w13, [sp, #372]
  436c88:	str	xzr, [sp, #376]
  436c8c:	eor	x8, x24, #0x7fffffffffffffff
  436c90:	cmp	x8, x22
  436c94:	b.lt	436d50 <argp_parse@@Base+0x8094>  // b.tstop
  436c98:	add	x8, x22, x24
  436c9c:	add	x1, sp, #0x280
  436ca0:	sub	x2, x29, #0x78
  436ca4:	mov	x0, x21
  436ca8:	str	x8, [sp, #640]
  436cac:	bl	4471d0 <_obstack_memory_used@@Base+0xb9d8>
  436cb0:	cbz	x0, 436ccc <argp_parse@@Base+0x8010>
  436cb4:	ldur	x8, [x29, #-72]
  436cb8:	cbz	x8, 436ccc <argp_parse@@Base+0x8010>
  436cbc:	ldur	w9, [x29, #-88]
  436cc0:	ldr	w10, [sp, #372]
  436cc4:	cmp	w9, w10
  436cc8:	b.ne	436d3c <argp_parse@@Base+0x8080>  // b.any
  436ccc:	subs	x23, x23, #0x1
  436cd0:	add	x24, x24, x20
  436cd4:	b.ne	436c8c <argp_parse@@Base+0x7fd0>  // b.any
  436cd8:	b	436d50 <argp_parse@@Base+0x8094>
  436cdc:	mov	w0, #0x1                   	// #1
  436ce0:	mov	x8, x20
  436ce4:	ldrb	w9, [x8]
  436ce8:	cmp	w9, #0x5c
  436cec:	b.eq	436d00 <argp_parse@@Base+0x8044>  // b.none
  436cf0:	cbz	w9, 436b94 <argp_parse@@Base+0x7ed8>
  436cf4:	cmp	w9, #0x22
  436cf8:	b.ne	436d14 <argp_parse@@Base+0x8058>  // b.any
  436cfc:	b	436d20 <argp_parse@@Base+0x8064>
  436d00:	ldrb	w9, [x8, #1]!
  436d04:	cmp	w9, #0x22
  436d08:	b.eq	436d14 <argp_parse@@Base+0x8058>  // b.none
  436d0c:	cmp	w9, #0x5c
  436d10:	b.ne	436b94 <argp_parse@@Base+0x7ed8>  // b.any
  436d14:	add	x8, x8, #0x1
  436d18:	add	x0, x0, #0x1
  436d1c:	b	436ce4 <argp_parse@@Base+0x8028>
  436d20:	cmp	x0, #0x65
  436d24:	b.cc	436f00 <argp_parse@@Base+0x8244>  // b.lo, b.ul, b.last
  436d28:	bl	4044d0 <malloc@plt>
  436d2c:	mov	x8, x0
  436d30:	cbnz	x0, 436f08 <argp_parse@@Base+0x824c>
  436d34:	mov	w22, wzr
  436d38:	b	436dd0 <argp_parse@@Base+0x8114>
  436d3c:	str	x8, [sp, #376]
  436d40:	mov	w8, #0x10d                 	// #269
  436d44:	str	w9, [sp, #388]
  436d48:	str	w8, [sp, #384]
  436d4c:	str	xzr, [sp, #392]
  436d50:	ldr	x0, [sp, #360]
  436d54:	cbz	x0, 436d74 <argp_parse@@Base+0x80b8>
  436d58:	ldr	x1, [sp, #376]
  436d5c:	cbz	x1, 436d74 <argp_parse@@Base+0x80b8>
  436d60:	bl	404900 <strcmp@plt>
  436d64:	cbnz	w0, 436d74 <argp_parse@@Base+0x80b8>
  436d68:	mov	w8, #0xffffffff            	// #-1
  436d6c:	str	w8, [sp, #372]
  436d70:	str	xzr, [sp, #376]
  436d74:	add	x0, sp, #0x80
  436d78:	bl	434a6c <argp_parse@@Base+0x5db0>
  436d7c:	ldrb	w8, [sp, #345]
  436d80:	cbz	w0, 436df8 <argp_parse@@Base+0x813c>
  436d84:	cbz	w8, 436db8 <argp_parse@@Base+0x80fc>
  436d88:	ldr	x8, [sp, #128]
  436d8c:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x18808>
  436d90:	adrp	x10, 454000 <_obstack_memory_used@@Base+0x18808>
  436d94:	add	x9, x9, #0x6ca
  436d98:	add	x10, x10, #0x6e1
  436d9c:	cmp	x28, x8
  436da0:	csel	x1, x10, x9, hi  // hi = pmore
  436da4:	mov	w2, #0x5                   	// #5
  436da8:	mov	x0, xzr
  436dac:	bl	404bd0 <dcgettext@plt>
  436db0:	ldr	x1, [sp, #128]
  436db4:	bl	4368a0 <argp_parse@@Base+0x7be4>
  436db8:	mov	w22, wzr
  436dbc:	cmp	x21, x19
  436dc0:	b.eq	436dcc <argp_parse@@Base+0x8110>  // b.none
  436dc4:	mov	x0, x21
  436dc8:	bl	4471a0 <_obstack_memory_used@@Base+0xb9a8>
  436dcc:	ldr	x0, [sp, #64]
  436dd0:	bl	4049b0 <free@plt>
  436dd4:	mov	w0, w22
  436dd8:	add	sp, sp, #0x3f0
  436ddc:	ldp	x20, x19, [sp, #80]
  436de0:	ldp	x22, x21, [sp, #64]
  436de4:	ldp	x24, x23, [sp, #48]
  436de8:	ldp	x26, x25, [sp, #32]
  436dec:	ldp	x28, x27, [sp, #16]
  436df0:	ldp	x29, x30, [sp], #96
  436df4:	ret
  436df8:	cbnz	w8, 437170 <argp_parse@@Base+0x84b4>
  436dfc:	ldrb	w8, [sp, #288]
  436e00:	cbz	w8, 436e54 <argp_parse@@Base+0x8198>
  436e04:	ldr	q0, [x25]
  436e08:	ldr	x20, [sp, #48]
  436e0c:	str	q0, [x20]
  436e10:	ldr	x22, [sp, #56]
  436e14:	ldrb	w8, [sp, #345]
  436e18:	cbz	w8, 4370d8 <argp_parse@@Base+0x841c>
  436e1c:	cbz	x22, 436fcc <argp_parse@@Base+0x8310>
  436e20:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  436e24:	add	x1, x1, #0x762
  436e28:	mov	x0, x22
  436e2c:	bl	404900 <strcmp@plt>
  436e30:	cbz	w0, 436fd8 <argp_parse@@Base+0x831c>
  436e34:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  436e38:	add	x1, x1, #0xdba
  436e3c:	mov	w2, #0x5                   	// #5
  436e40:	mov	x0, xzr
  436e44:	bl	404bd0 <dcgettext@plt>
  436e48:	mov	x1, x22
  436e4c:	bl	4368a0 <argp_parse@@Base+0x7be4>
  436e50:	b	436ff0 <argp_parse@@Base+0x8334>
  436e54:	ldp	x8, x12, [sp, #296]
  436e58:	ldp	x9, x11, [sp, #328]
  436e5c:	ldp	x10, x13, [sp, #312]
  436e60:	ldrb	w20, [sp, #345]
  436e64:	orr	x14, x8, x9
  436e68:	add	x10, x11, x10
  436e6c:	orr	x11, x14, x12
  436e70:	orr	x11, x11, x13
  436e74:	orr	x10, x11, x10
  436e78:	cmp	x10, #0x2
  436e7c:	b.lt	436f74 <argp_parse@@Base+0x82b8>  // b.tstop
  436e80:	cbz	w20, 436db8 <argp_parse@@Base+0x80fc>
  436e84:	cmp	x9, #0x2
  436e88:	b.lt	436e9c <argp_parse@@Base+0x81e0>  // b.tstop
  436e8c:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x18808>
  436e90:	add	x0, x0, #0x7be
  436e94:	bl	4368a0 <argp_parse@@Base+0x7be4>
  436e98:	ldr	x8, [sp, #296]
  436e9c:	cmp	x8, #0x2
  436ea0:	b.lt	436eb0 <argp_parse@@Base+0x81f4>  // b.tstop
  436ea4:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x18808>
  436ea8:	add	x0, x0, #0x7df
  436eac:	bl	4368a0 <argp_parse@@Base+0x7be4>
  436eb0:	ldr	x8, [sp, #304]
  436eb4:	cmp	x8, #0x2
  436eb8:	b.lt	436ec8 <argp_parse@@Base+0x820c>  // b.tstop
  436ebc:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x18808>
  436ec0:	add	x0, x0, #0x800
  436ec4:	bl	4368a0 <argp_parse@@Base+0x7be4>
  436ec8:	ldr	x8, [sp, #320]
  436ecc:	cmp	x8, #0x2
  436ed0:	b.lt	436ee0 <argp_parse@@Base+0x8224>  // b.tstop
  436ed4:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x18808>
  436ed8:	add	x0, x0, #0x821
  436edc:	bl	4368a0 <argp_parse@@Base+0x7be4>
  436ee0:	ldr	x8, [sp, #312]
  436ee4:	ldr	x9, [sp, #336]
  436ee8:	add	x8, x9, x8
  436eec:	cmp	x8, #0x2
  436ef0:	b.lt	436db8 <argp_parse@@Base+0x80fc>  // b.tstop
  436ef4:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x18808>
  436ef8:	add	x0, x0, #0x84d
  436efc:	b	437210 <argp_parse@@Base+0x8554>
  436f00:	mov	x8, xzr
  436f04:	add	x0, sp, #0x21c
  436f08:	ldrb	w9, [x20]
  436f0c:	str	x8, [sp, #64]
  436f10:	mov	x8, x0
  436f14:	cmp	w9, #0x22
  436f18:	b.eq	436f38 <argp_parse@@Base+0x827c>  // b.none
  436f1c:	and	w9, w9, #0xff
  436f20:	cmp	w9, #0x5c
  436f24:	cinc	x20, x20, eq  // eq = none
  436f28:	ldrb	w9, [x20]
  436f2c:	strb	w9, [x8], #1
  436f30:	ldrb	w9, [x20, #1]!
  436f34:	b	436f14 <argp_parse@@Base+0x8258>
  436f38:	strb	wzr, [x8]
  436f3c:	str	x0, [sp, #56]
  436f40:	bl	447110 <_obstack_memory_used@@Base+0xb918>
  436f44:	cbz	x0, 436fc4 <argp_parse@@Base+0x8308>
  436f48:	mov	x21, x0
  436f4c:	add	x26, x20, #0x1
  436f50:	ldrb	w8, [x26]
  436f54:	sub	w9, w8, #0x9
  436f58:	cmp	w9, #0x5
  436f5c:	b.cs	436f68 <argp_parse@@Base+0x82ac>  // b.hs, b.nlast
  436f60:	add	x26, x26, #0x1
  436f64:	b	436f50 <argp_parse@@Base+0x8294>
  436f68:	cmp	w8, #0x20
  436f6c:	b.eq	436f60 <argp_parse@@Base+0x82a4>  // b.none
  436f70:	b	436b9c <argp_parse@@Base+0x7ee0>
  436f74:	ldr	x24, [sp, #168]
  436f78:	tbnz	x24, #63, 4370e0 <argp_parse@@Base+0x8424>
  436f7c:	ldr	x8, [sp, #176]
  436f80:	cmp	x8, #0x2
  436f84:	b.ne	4371b4 <argp_parse@@Base+0x84f8>  // b.any
  436f88:	cmp	x24, #0x45
  436f8c:	mov	w8, #0x76c                 	// #1900
  436f90:	mov	w9, #0x7d0                 	// #2000
  436f94:	csel	x8, x9, x8, lt  // lt = tstop
  436f98:	add	x25, x8, x24
  436f9c:	cbz	w20, 4371b8 <argp_parse@@Base+0x84fc>
  436fa0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  436fa4:	add	x1, x1, #0x16d
  436fa8:	mov	w2, #0x5                   	// #5
  436fac:	mov	x0, xzr
  436fb0:	bl	404bd0 <dcgettext@plt>
  436fb4:	mov	x1, x24
  436fb8:	mov	x2, x25
  436fbc:	bl	4368a0 <argp_parse@@Base+0x7be4>
  436fc0:	b	4371b8 <argp_parse@@Base+0x84fc>
  436fc4:	mov	w22, wzr
  436fc8:	b	436dcc <argp_parse@@Base+0x8110>
  436fcc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  436fd0:	add	x1, x1, #0xd86
  436fd4:	b	436fe0 <argp_parse@@Base+0x8324>
  436fd8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  436fdc:	add	x1, x1, #0xda0
  436fe0:	mov	w2, #0x5                   	// #5
  436fe4:	mov	x0, xzr
  436fe8:	bl	404bd0 <dcgettext@plt>
  436fec:	bl	4368a0 <argp_parse@@Base+0x7be4>
  436ff0:	ldr	x23, [x20]
  436ff4:	ldr	w24, [x20, #8]
  436ff8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  436ffc:	add	x1, x1, #0xddf
  437000:	mov	w2, #0x5                   	// #5
  437004:	mov	x0, xzr
  437008:	bl	404bd0 <dcgettext@plt>
  43700c:	mov	x1, x23
  437010:	mov	w2, w24
  437014:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437018:	sub	x1, x29, #0x78
  43701c:	mov	x0, x20
  437020:	bl	404620 <gmtime_r@plt>
  437024:	cbz	x0, 43706c <argp_parse@@Base+0x83b0>
  437028:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  43702c:	add	x1, x1, #0xe00
  437030:	mov	w2, #0x5                   	// #5
  437034:	mov	x0, xzr
  437038:	bl	404bd0 <dcgettext@plt>
  43703c:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x19808>
  437040:	mov	x23, x0
  437044:	add	x2, x2, #0x320
  437048:	add	x0, sp, #0x280
  43704c:	sub	x3, x29, #0x78
  437050:	mov	w1, #0x64                  	// #100
  437054:	mov	x4, xzr
  437058:	mov	w5, wzr
  43705c:	bl	447fe8 <_obstack_memory_used@@Base+0xc7f0>
  437060:	add	x1, sp, #0x280
  437064:	mov	x0, x23
  437068:	bl	4368a0 <argp_parse@@Base+0x7be4>
  43706c:	add	x2, sp, #0x48
  437070:	mov	x0, x21
  437074:	mov	x1, x20
  437078:	bl	4471d0 <_obstack_memory_used@@Base+0xb9d8>
  43707c:	cbz	x0, 4370d8 <argp_parse@@Base+0x841c>
  437080:	ldr	w22, [sp, #112]
  437084:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437088:	add	x1, x1, #0xe11
  43708c:	mov	w2, #0x5                   	// #5
  437090:	mov	x0, xzr
  437094:	bl	404bd0 <dcgettext@plt>
  437098:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x19808>
  43709c:	mov	x23, x0
  4370a0:	add	x2, x2, #0x320
  4370a4:	add	x0, sp, #0x280
  4370a8:	add	x3, sp, #0x48
  4370ac:	mov	w1, #0x64                  	// #100
  4370b0:	mov	x4, xzr
  4370b4:	mov	w5, wzr
  4370b8:	bl	447fe8 <_obstack_memory_used@@Base+0xc7f0>
  4370bc:	add	x1, sp, #0x2e4
  4370c0:	mov	w0, w22
  4370c4:	bl	438194 <argp_parse@@Base+0x94d8>
  4370c8:	mov	x2, x0
  4370cc:	add	x1, sp, #0x280
  4370d0:	mov	x0, x23
  4370d4:	bl	4368a0 <argp_parse@@Base+0x7be4>
  4370d8:	mov	w22, #0x1                   	// #1
  4370dc:	b	436dbc <argp_parse@@Base+0x8100>
  4370e0:	mov	x9, #0xfffffffffffff895    	// #-1899
  4370e4:	mov	w8, #0xfffff894            	// #-1900
  4370e8:	movk	x9, #0x7fff, lsl #16
  4370ec:	cmp	x24, x9
  4370f0:	sub	w8, w8, w24
  4370f4:	b.lt	4371d0 <argp_parse@@Base+0x8514>  // b.tstop
  4370f8:	ldr	x9, [sp, #184]
  4370fc:	mov	w10, #0x7fffffff            	// #2147483647
  437100:	add	x10, x9, x10
  437104:	sub	w9, w9, #0x1
  437108:	lsr	x10, x10, #32
  43710c:	stp	w9, w8, [x29, #-160]
  437110:	cbnz	x10, 4371f4 <argp_parse@@Base+0x8538>
  437114:	ldr	x8, [sp, #192]
  437118:	cmp	x8, w8, sxtw
  43711c:	stur	w8, [x29, #-164]
  437120:	b.ne	4371f4 <argp_parse@@Base+0x8538>  // b.any
  437124:	ldr	x8, [sp, #328]
  437128:	cbnz	x8, 437140 <argp_parse@@Base+0x8484>
  43712c:	ldrb	w9, [sp, #289]
  437130:	cbz	w9, 4373d4 <argp_parse@@Base+0x8718>
  437134:	ldp	x9, x10, [sp, #296]
  437138:	orr	x9, x10, x9
  43713c:	cbnz	x9, 4373d4 <argp_parse@@Base+0x8718>
  437140:	ldr	w9, [sp, #156]
  437144:	ldr	x10, [sp, #200]
  437148:	cbz	w9, 4372ec <argp_parse@@Base+0x8630>
  43714c:	cmp	w9, #0x1
  437150:	b.ne	437304 <argp_parse@@Base+0x8648>  // b.any
  437154:	sub	x11, x10, #0x1
  437158:	cmp	x10, #0xc
  43715c:	add	x12, x10, #0xc
  437160:	csinv	x10, x10, xzr, eq  // eq = none
  437164:	cmp	x11, #0xb
  437168:	csel	x10, x12, x10, cc  // cc = lo, ul, last
  43716c:	b	43730c <argp_parse@@Base+0x8650>
  437170:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437174:	add	x1, x1, #0x709
  437178:	mov	w2, #0x5                   	// #5
  43717c:	mov	x0, xzr
  437180:	bl	404bd0 <dcgettext@plt>
  437184:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437188:	ldrb	w8, [sp, #288]
  43718c:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  437190:	cbnz	w8, 437218 <argp_parse@@Base+0x855c>
  437194:	ldr	x8, [sp, #336]
  437198:	cbnz	x8, 437228 <argp_parse@@Base+0x856c>
  43719c:	ldr	x20, [sp, #56]
  4371a0:	cbnz	x20, 4372c0 <argp_parse@@Base+0x8604>
  4371a4:	ldr	x24, [x22, #624]
  4371a8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  4371ac:	add	x1, x1, #0x7a3
  4371b0:	b	437234 <argp_parse@@Base+0x8578>
  4371b4:	mov	x25, x24
  4371b8:	mov	w8, #0x76c                 	// #1900
  4371bc:	movk	w8, #0x8000, lsl #16
  4371c0:	cmp	x25, x8
  4371c4:	sub	w8, w25, #0x76c
  4371c8:	mov	x24, x25
  4371cc:	b.lt	4370f8 <argp_parse@@Base+0x843c>  // b.tstop
  4371d0:	stur	w8, [x29, #-156]
  4371d4:	cbz	w20, 4371f4 <argp_parse@@Base+0x8538>
  4371d8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  4371dc:	add	x1, x1, #0x197
  4371e0:	mov	w2, #0x5                   	// #5
  4371e4:	mov	x0, xzr
  4371e8:	bl	404bd0 <dcgettext@plt>
  4371ec:	mov	x1, x24
  4371f0:	bl	4368a0 <argp_parse@@Base+0x7be4>
  4371f4:	ldrb	w8, [sp, #345]
  4371f8:	cbz	w8, 436db8 <argp_parse@@Base+0x80fc>
  4371fc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437200:	add	x1, x1, #0x873
  437204:	mov	w2, #0x5                   	// #5
  437208:	mov	x0, xzr
  43720c:	bl	404bd0 <dcgettext@plt>
  437210:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437214:	b	436db8 <argp_parse@@Base+0x80fc>
  437218:	ldr	x24, [x22, #624]
  43721c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437220:	add	x1, x1, #0x71a
  437224:	b	437234 <argp_parse@@Base+0x8578>
  437228:	ldr	x24, [x22, #624]
  43722c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437230:	add	x1, x1, #0x733
  437234:	mov	w2, #0x5                   	// #5
  437238:	mov	x0, xzr
  43723c:	bl	404bd0 <dcgettext@plt>
  437240:	mov	x2, x0
  437244:	mov	w1, #0x1                   	// #1
  437248:	mov	x0, x24
  43724c:	bl	4048f0 <__fprintf_chk@plt>
  437250:	ldr	x9, [sp, #312]
  437254:	ldr	x8, [sp, #336]
  437258:	cbz	x9, 437284 <argp_parse@@Base+0x85c8>
  43725c:	cbnz	x8, 437284 <argp_parse@@Base+0x85c8>
  437260:	ldr	w8, [sp, #148]
  437264:	cmp	w8, #0x1
  437268:	b.lt	4372b0 <argp_parse@@Base+0x85f4>  // b.tstop
  43726c:	ldr	x0, [x22, #624]
  437270:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x18808>
  437274:	add	x2, x2, #0x7b2
  437278:	mov	w1, #0x1                   	// #1
  43727c:	bl	4048f0 <__fprintf_chk@plt>
  437280:	ldr	x8, [sp, #336]
  437284:	cbz	x8, 4372b0 <argp_parse@@Base+0x85f4>
  437288:	ldr	w0, [sp, #152]
  43728c:	ldr	x24, [x22, #624]
  437290:	add	x1, sp, #0x2e4
  437294:	bl	438194 <argp_parse@@Base+0x94d8>
  437298:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x18808>
  43729c:	mov	x3, x0
  4372a0:	add	x2, x2, #0x7b8
  4372a4:	mov	w1, #0x1                   	// #1
  4372a8:	mov	x0, x24
  4372ac:	bl	4048f0 <__fprintf_chk@plt>
  4372b0:	ldr	x1, [x22, #624]
  4372b4:	mov	w0, #0xa                   	// #10
  4372b8:	bl	404310 <fputc@plt>
  4372bc:	b	436dfc <argp_parse@@Base+0x8140>
  4372c0:	cmp	x21, x19
  4372c4:	b.ne	4375e8 <argp_parse@@Base+0x892c>  // b.any
  4372c8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  4372cc:	add	x1, x1, #0x762
  4372d0:	mov	x0, x20
  4372d4:	bl	404900 <strcmp@plt>
  4372d8:	ldr	x24, [x22, #624]
  4372dc:	cbnz	w0, 43761c <argp_parse@@Base+0x8960>
  4372e0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  4372e4:	add	x1, x1, #0x767
  4372e8:	b	437234 <argp_parse@@Base+0x8578>
  4372ec:	sub	x11, x10, #0x1
  4372f0:	cmp	x10, #0xc
  4372f4:	csetm	x12, ne  // ne = any
  4372f8:	cmp	x11, #0xb
  4372fc:	csel	x10, x10, x12, cc  // cc = lo, ul, last
  437300:	b	43730c <argp_parse@@Base+0x8650>
  437304:	cmp	x10, #0x18
  437308:	csinv	x10, x10, xzr, cc  // cc = lo, ul, last
  43730c:	stur	w10, [x29, #-168]
  437310:	tbnz	w10, #31, 437380 <argp_parse@@Base+0x86c4>
  437314:	ldp	x9, x10, [sp, #208]
  437318:	ldrb	w11, [sp, #345]
  43731c:	stp	w10, w9, [x29, #-176]
  437320:	cbz	w11, 4373f4 <argp_parse@@Base+0x8738>
  437324:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x18808>
  437328:	adrp	x10, 454000 <_obstack_memory_used@@Base+0x18808>
  43732c:	add	x9, x9, #0x8b6
  437330:	add	x10, x10, #0x8e4
  437334:	cmp	x8, #0x0
  437338:	csel	x1, x10, x9, eq  // eq = none
  43733c:	mov	w2, #0x5                   	// #5
  437340:	mov	x0, xzr
  437344:	bl	404bd0 <dcgettext@plt>
  437348:	ldp	w6, w5, [x29, #-172]
  43734c:	ldur	w7, [x29, #-176]
  437350:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x19808>
  437354:	mov	x24, x0
  437358:	add	x4, x4, #0x1b5
  43735c:	add	x0, sp, #0x280
  437360:	mov	w1, #0x64                  	// #100
  437364:	mov	w2, #0x1                   	// #1
  437368:	mov	w3, #0x64                  	// #100
  43736c:	bl	404440 <__snprintf_chk@plt>
  437370:	add	x1, sp, #0x280
  437374:	mov	x0, x24
  437378:	bl	4368a0 <argp_parse@@Base+0x7be4>
  43737c:	b	4373f4 <argp_parse@@Base+0x8738>
  437380:	ldrb	w8, [sp, #345]
  437384:	cbz	w8, 436db8 <argp_parse@@Base+0x80fc>
  437388:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  43738c:	adrp	x10, 454000 <_obstack_memory_used@@Base+0x18808>
  437390:	add	x8, x8, #0x3ee
  437394:	add	x10, x10, #0x898
  437398:	cmp	w9, #0x1
  43739c:	adrp	x11, 450000 <_obstack_memory_used@@Base+0x14808>
  4373a0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  4373a4:	add	x11, x11, #0xdcb
  4373a8:	csel	x8, x10, x8, eq  // eq = none
  4373ac:	cmp	w9, #0x0
  4373b0:	add	x1, x1, #0x89b
  4373b4:	mov	w2, #0x5                   	// #5
  4373b8:	mov	x0, xzr
  4373bc:	csel	x22, x11, x8, eq  // eq = none
  4373c0:	bl	404bd0 <dcgettext@plt>
  4373c4:	ldr	x1, [sp, #200]
  4373c8:	mov	x2, x22
  4373cc:	bl	4368a0 <argp_parse@@Base+0x7be4>
  4373d0:	b	436db8 <argp_parse@@Base+0x80fc>
  4373d4:	ldrb	w8, [sp, #345]
  4373d8:	stur	xzr, [x29, #-176]
  4373dc:	stur	wzr, [x29, #-168]
  4373e0:	str	xzr, [sp, #224]
  4373e4:	cbz	w8, 4373f4 <argp_parse@@Base+0x8738>
  4373e8:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x18808>
  4373ec:	add	x0, x0, #0x910
  4373f0:	bl	4368a0 <argp_parse@@Base+0x7be4>
  4373f4:	ldp	x8, x9, [sp, #296]
  4373f8:	ldr	x10, [sp, #328]
  4373fc:	orr	x8, x9, x8
  437400:	orr	x8, x8, x10
  437404:	cbz	x8, 437410 <argp_parse@@Base+0x8754>
  437408:	mov	w8, #0xffffffff            	// #-1
  43740c:	stur	w8, [x29, #-144]
  437410:	ldr	x8, [sp, #312]
  437414:	cbz	x8, 437424 <argp_parse@@Base+0x8768>
  437418:	ldr	w8, [sp, #148]
  43741c:	stur	w8, [x29, #-144]
  437420:	b	437428 <argp_parse@@Base+0x876c>
  437424:	ldur	w8, [x29, #-144]
  437428:	ldp	w28, w23, [x29, #-176]
  43742c:	ldp	w20, w26, [x29, #-168]
  437430:	ldp	w25, w22, [x29, #-160]
  437434:	mov	w9, #0xffffffff            	// #-1
  437438:	sub	x1, x29, #0xb0
  43743c:	mov	x0, x21
  437440:	stp	w28, w23, [x29, #-240]
  437444:	stp	w20, w26, [x29, #-232]
  437448:	stp	w25, w22, [x29, #-224]
  43744c:	stur	w8, [x29, #-208]
  437450:	stur	w9, [x29, #-152]
  437454:	bl	4474c4 <_obstack_memory_used@@Base+0xbccc>
  437458:	ldur	w8, [x29, #-152]
  43745c:	tbnz	w8, #31, 43749c <argp_parse@@Base+0x87e0>
  437460:	ldp	w8, w9, [x29, #-176]
  437464:	ldp	w10, w11, [x29, #-168]
  437468:	ldp	w12, w13, [x29, #-160]
  43746c:	eor	w8, w8, w28
  437470:	eor	w9, w9, w23
  437474:	eor	w10, w10, w20
  437478:	orr	w8, w9, w8
  43747c:	eor	w11, w11, w26
  437480:	orr	w8, w8, w10
  437484:	eor	w12, w12, w25
  437488:	orr	w8, w8, w11
  43748c:	orr	w8, w8, w12
  437490:	eor	w9, w13, w22
  437494:	orr	w8, w8, w9
  437498:	cbz	w8, 437550 <argp_parse@@Base+0x8894>
  43749c:	ldr	x22, [sp, #336]
  4374a0:	cbz	x22, 437650 <argp_parse@@Base+0x8994>
  4374a4:	ldr	w0, [sp, #152]
  4374a8:	mov	w8, #0x58                  	// #88
  4374ac:	sturb	w8, [x29, #-118]
  4374b0:	sub	x8, x29, #0x78
  4374b4:	mov	w9, #0x5858                	// #22616
  4374b8:	orr	x1, x8, #0x3
  4374bc:	sturh	w9, [x29, #-120]
  4374c0:	bl	438194 <argp_parse@@Base+0x94d8>
  4374c4:	sub	x0, x29, #0x78
  4374c8:	bl	447110 <_obstack_memory_used@@Base+0xb918>
  4374cc:	cbz	x0, 4375f8 <argp_parse@@Base+0x893c>
  4374d0:	ldr	q0, [x27, #640]
  4374d4:	ldur	x8, [x29, #-224]
  4374d8:	ldur	w9, [x29, #-208]
  4374dc:	mov	w10, #0xffffffff            	// #-1
  4374e0:	sub	x1, x29, #0xb0
  4374e4:	mov	x25, x0
  4374e8:	str	q0, [x27, #704]
  4374ec:	stur	x8, [x29, #-160]
  4374f0:	stur	w9, [x29, #-144]
  4374f4:	stur	w10, [x29, #-152]
  4374f8:	bl	4474c4 <_obstack_memory_used@@Base+0xbccc>
  4374fc:	ldur	w8, [x29, #-152]
  437500:	tbnz	w8, #31, 437648 <argp_parse@@Base+0x898c>
  437504:	ldr	q0, [x27, #640]
  437508:	ldr	q1, [x27, #704]
  43750c:	ldp	w8, w11, [x29, #-160]
  437510:	ldp	w9, w10, [x29, #-224]
  437514:	mov	x24, x0
  437518:	eor	v0.16b, v1.16b, v0.16b
  43751c:	ext	v1.16b, v0.16b, v0.16b, #8
  437520:	orr	v0.16b, v0.16b, v1.16b
  437524:	dup	v1.4s, v0.s[1]
  437528:	orr	v0.16b, v0.16b, v1.16b
  43752c:	eor	w8, w8, w9
  437530:	eor	w9, w11, w10
  437534:	fmov	w10, s0
  437538:	orr	w8, w10, w8
  43753c:	mov	x0, x25
  437540:	orr	w20, w8, w9
  437544:	bl	4471a0 <_obstack_memory_used@@Base+0xb9a8>
  437548:	cbnz	w20, 437650 <argp_parse@@Base+0x8994>
  43754c:	b	437554 <argp_parse@@Base+0x8898>
  437550:	mov	x24, x0
  437554:	ldr	x8, [sp, #304]
  437558:	cbz	x8, 437a48 <argp_parse@@Base+0x8d8c>
  43755c:	ldr	x8, [sp, #296]
  437560:	cbnz	x8, 437a48 <argp_parse@@Base+0x8d8c>
  437564:	ldr	x8, [sp, #136]
  437568:	ldur	w9, [x29, #-152]
  43756c:	ldr	w10, [sp, #144]
  437570:	cmp	x8, #0x0
  437574:	cset	w11, gt
  437578:	subs	w9, w10, w9
  43757c:	cset	w10, ne  // ne = any
  437580:	and	w10, w11, w10
  437584:	subs	x8, x8, x10
  437588:	b.mi	4378c4 <argp_parse@@Base+0x8c08>  // b.first
  43758c:	mov	x10, #0x9249                	// #37449
  437590:	movk	x10, #0x4924, lsl #16
  437594:	movk	x10, #0x2492, lsl #32
  437598:	movk	x10, #0x1249, lsl #48
  43759c:	cmp	x8, x10
  4375a0:	b.gt	43796c <argp_parse@@Base+0x8cb0>
  4375a4:	mov	w12, #0x2493                	// #9363
  4375a8:	lsl	x10, x8, #3
  4375ac:	add	w9, w9, #0x7
  4375b0:	movk	w12, #0x9249, lsl #16
  4375b4:	sub	x8, x10, x8
  4375b8:	smull	x10, w9, w12
  4375bc:	lsr	x10, x10, #32
  4375c0:	add	w10, w10, w9
  4375c4:	asr	w12, w10, #2
  4375c8:	add	w10, w12, w10, lsr #31
  4375cc:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4375d0:	sub	w10, w10, w10, lsl #3
  4375d4:	sub	x11, x11, x8
  4375d8:	add	w9, w9, w10
  4375dc:	cmp	x11, w9, sxtw
  4375e0:	b.ge	43791c <argp_parse@@Base+0x8c60>  // b.tcont
  4375e4:	b	43796c <argp_parse@@Base+0x8cb0>
  4375e8:	ldr	x24, [x22, #624]
  4375ec:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  4375f0:	add	x1, x1, #0x74b
  4375f4:	b	437624 <argp_parse@@Base+0x8968>
  4375f8:	ldrb	w8, [sp, #345]
  4375fc:	cbz	w8, 436db8 <argp_parse@@Base+0x80fc>
  437600:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437604:	add	x1, x1, #0x944
  437608:	mov	w2, #0x5                   	// #5
  43760c:	mov	x0, xzr
  437610:	bl	404bd0 <dcgettext@plt>
  437614:	sub	x1, x29, #0x78
  437618:	b	436db4 <argp_parse@@Base+0x80f8>
  43761c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437620:	add	x1, x1, #0x789
  437624:	mov	w2, #0x5                   	// #5
  437628:	mov	x0, xzr
  43762c:	bl	404bd0 <dcgettext@plt>
  437630:	mov	x2, x0
  437634:	mov	w1, #0x1                   	// #1
  437638:	mov	x0, x24
  43763c:	mov	x3, x20
  437640:	bl	4048f0 <__fprintf_chk@plt>
  437644:	b	437250 <argp_parse@@Base+0x8594>
  437648:	mov	x0, x25
  43764c:	bl	4471a0 <_obstack_memory_used@@Base+0xb9a8>
  437650:	ldp	w15, w17, [x29, #-240]
  437654:	ldp	w16, w18, [x29, #-176]
  437658:	ldp	w0, w20, [x29, #-232]
  43765c:	ldp	w23, w24, [x29, #-168]
  437660:	ldp	w26, w25, [x29, #-224]
  437664:	ldp	w27, w28, [x29, #-160]
  437668:	cmp	w15, w16
  43766c:	cset	w8, eq  // eq = none
  437670:	cmp	w17, w18
  437674:	cset	w9, eq  // eq = none
  437678:	cmp	w0, w23
  43767c:	ldrb	w14, [sp, #345]
  437680:	cset	w10, ne  // ne = any
  437684:	cmp	w20, w24
  437688:	cset	w11, eq  // eq = none
  43768c:	cmp	w26, w27
  437690:	cset	w12, eq  // eq = none
  437694:	cmp	w25, w28
  437698:	cset	w13, eq  // eq = none
  43769c:	cbz	w14, 436db8 <argp_parse@@Base+0x80fc>
  4376a0:	and	w8, w8, w9
  4376a4:	and	w8, w8, w10
  4376a8:	and	w9, w12, w13
  4376ac:	and	w8, w8, w11
  4376b0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  4376b4:	and	w8, w8, w9
  4376b8:	add	x1, x1, #0x1c4
  4376bc:	mov	w2, #0x5                   	// #5
  4376c0:	stp	w0, w18, [sp, #28]
  4376c4:	mov	x0, xzr
  4376c8:	str	x22, [sp, #56]
  4376cc:	stp	w15, w8, [sp, #44]
  4376d0:	stp	w17, w16, [sp, #36]
  4376d4:	bl	404bd0 <dcgettext@plt>
  4376d8:	bl	4368a0 <argp_parse@@Base+0x7be4>
  4376dc:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  4376e0:	add	x1, x1, #0x1e5
  4376e4:	mov	w2, #0x5                   	// #5
  4376e8:	mov	x0, xzr
  4376ec:	bl	404bd0 <dcgettext@plt>
  4376f0:	mov	x22, x0
  4376f4:	sub	x0, x29, #0xf0
  4376f8:	add	x1, sp, #0x80
  4376fc:	sub	x2, x29, #0x78
  437700:	bl	438394 <argp_parse@@Base+0x96d8>
  437704:	mov	x1, x0
  437708:	mov	x0, x22
  43770c:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437710:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  437714:	add	x1, x1, #0x203
  437718:	mov	w2, #0x5                   	// #5
  43771c:	mov	x0, xzr
  437720:	bl	404bd0 <dcgettext@plt>
  437724:	mov	x22, x0
  437728:	sub	x0, x29, #0xb0
  43772c:	add	x1, sp, #0x80
  437730:	sub	x2, x29, #0x78
  437734:	bl	438394 <argp_parse@@Base+0x96d8>
  437738:	mov	x1, x0
  43773c:	mov	x0, x22
  437740:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437744:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x19808>
  437748:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x16808>
  43774c:	add	x8, x8, #0x25a
  437750:	add	x9, x9, #0x3ee
  437754:	cmp	w25, w28
  437758:	csel	x5, x9, x8, eq  // eq = none
  43775c:	ldp	w8, w12, [sp, #28]
  437760:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x19808>
  437764:	ldp	w11, w13, [sp, #36]
  437768:	add	x10, x10, #0x25c
  43776c:	cmp	w26, w27
  437770:	csel	x6, x9, x10, eq  // eq = none
  437774:	cmp	w20, w24
  437778:	csel	x7, x9, x10, eq  // eq = none
  43777c:	cmp	w8, w23
  437780:	csel	x8, x9, x10, eq  // eq = none
  437784:	cmp	w11, w12
  437788:	ldr	w12, [sp, #44]
  43778c:	csel	x11, x9, x10, eq  // eq = none
  437790:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x19808>
  437794:	add	x4, x4, #0x221
  437798:	cmp	w12, w13
  43779c:	csel	x9, x9, x10, eq  // eq = none
  4377a0:	sub	x0, x29, #0x78
  4377a4:	mov	w1, #0x64                  	// #100
  4377a8:	mov	w2, #0x1                   	// #1
  4377ac:	mov	w3, #0x64                  	// #100
  4377b0:	stp	x11, x9, [sp, #8]
  4377b4:	str	x8, [sp]
  4377b8:	bl	404440 <__snprintf_chk@plt>
  4377bc:	mov	w22, w20
  4377c0:	tbnz	w0, #31, 437804 <argp_parse@@Base+0x8b48>
  4377c4:	cmp	w0, #0x63
  4377c8:	mov	w8, #0x63                  	// #99
  4377cc:	csel	w9, w0, w8, cc  // cc = lo, ul, last
  4377d0:	sub	x8, x29, #0x78
  4377d4:	sub	x8, x8, #0x1
  4377d8:	subs	x10, x9, #0x1
  4377dc:	b.lt	4377f8 <argp_parse@@Base+0x8b3c>  // b.tstop
  4377e0:	ldrb	w9, [x8, x9]
  4377e4:	cmp	w9, #0x20
  4377e8:	mov	x9, x10
  4377ec:	b.eq	4377d8 <argp_parse@@Base+0x8b1c>  // b.none
  4377f0:	add	x8, x10, #0x1
  4377f4:	b	4377fc <argp_parse@@Base+0x8b40>
  4377f8:	mov	x8, xzr
  4377fc:	sub	x9, x29, #0x78
  437800:	strb	wzr, [x9, w8, sxtw]
  437804:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x16808>
  437808:	add	x0, x0, #0x893
  43780c:	sub	x1, x29, #0x78
  437810:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437814:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  437818:	add	x1, x1, #0x25f
  43781c:	mov	w2, #0x5                   	// #5
  437820:	mov	x0, xzr
  437824:	bl	404bd0 <dcgettext@plt>
  437828:	bl	4368a0 <argp_parse@@Base+0x7be4>
  43782c:	ldr	x20, [sp, #56]
  437830:	ldr	w8, [sp, #48]
  437834:	cbz	w8, 437850 <argp_parse@@Base+0x8b94>
  437838:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43783c:	add	x1, x1, #0x277
  437840:	mov	w2, #0x5                   	// #5
  437844:	mov	x0, xzr
  437848:	bl	404bd0 <dcgettext@plt>
  43784c:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437850:	cmp	w22, w24
  437854:	b.eq	437878 <argp_parse@@Base+0x8bbc>  // b.none
  437858:	cmp	w26, w27
  43785c:	b.eq	437878 <argp_parse@@Base+0x8bbc>  // b.none
  437860:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  437864:	add	x1, x1, #0x2a9
  437868:	mov	w2, #0x5                   	// #5
  43786c:	mov	x0, xzr
  437870:	bl	404bd0 <dcgettext@plt>
  437874:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437878:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43787c:	add	x1, x1, #0x2d0
  437880:	mov	w2, #0x5                   	// #5
  437884:	mov	x0, xzr
  437888:	bl	404bd0 <dcgettext@plt>
  43788c:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437890:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x19808>
  437894:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x19808>
  437898:	add	x8, x8, #0x30f
  43789c:	add	x9, x9, #0x2fc
  4378a0:	cmp	x20, #0x0
  4378a4:	csel	x1, x9, x8, ne  // ne = any
  4378a8:	mov	w2, #0x5                   	// #5
  4378ac:	mov	x0, xzr
  4378b0:	bl	404bd0 <dcgettext@plt>
  4378b4:	mov	x1, x0
  4378b8:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  4378bc:	add	x0, x0, #0x2f1
  4378c0:	b	436db4 <argp_parse@@Base+0x80f8>
  4378c4:	mov	x10, #0x6db7                	// #28087
  4378c8:	movk	x10, #0xb6db, lsl #16
  4378cc:	movk	x10, #0xdb6d, lsl #32
  4378d0:	movk	x10, #0xedb6, lsl #48
  4378d4:	cmp	x8, x10
  4378d8:	b.lt	43796c <argp_parse@@Base+0x8cb0>  // b.tstop
  4378dc:	mov	w11, #0x2493                	// #9363
  4378e0:	lsl	x10, x8, #3
  4378e4:	add	w9, w9, #0x7
  4378e8:	movk	w11, #0x9249, lsl #16
  4378ec:	sub	x8, x10, x8
  4378f0:	smull	x10, w9, w11
  4378f4:	lsr	x10, x10, #32
  4378f8:	add	w10, w10, w9
  4378fc:	asr	w11, w10, #2
  437900:	add	w10, w11, w10, lsr #31
  437904:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  437908:	sub	w10, w10, w10, lsl #3
  43790c:	add	w9, w9, w10
  437910:	sub	x10, x12, x8
  437914:	cmp	x10, w9, sxtw
  437918:	b.gt	43796c <argp_parse@@Base+0x8cb0>
  43791c:	sxtw	x10, w9
  437920:	ldursw	x9, [x29, #-164]
  437924:	add	x8, x8, x10
  437928:	tbnz	w9, #31, 437940 <argp_parse@@Base+0x8c84>
  43792c:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  437930:	sub	x10, x10, x9
  437934:	cmp	x10, x8
  437938:	b.ge	437950 <argp_parse@@Base+0x8c94>  // b.tcont
  43793c:	b	437964 <argp_parse@@Base+0x8ca8>
  437940:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  437944:	sub	x10, x10, x9
  437948:	cmp	x8, x10
  43794c:	b.lt	437964 <argp_parse@@Base+0x8ca8>  // b.tstop
  437950:	add	x10, x8, x9
  437954:	mov	w11, #0x80000000            	// #-2147483648
  437958:	add	x10, x10, x11
  43795c:	lsr	x10, x10, #32
  437960:	cbz	x10, 4379d0 <argp_parse@@Base+0x8d14>
  437964:	add	w8, w9, w8
  437968:	stur	w8, [x29, #-164]
  43796c:	ldrb	w8, [sp, #345]
  437970:	cbz	w8, 436db8 <argp_parse@@Base+0x80fc>
  437974:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437978:	add	x1, x1, #0x962
  43797c:	mov	w2, #0x5                   	// #5
  437980:	mov	x0, xzr
  437984:	bl	404bd0 <dcgettext@plt>
  437988:	mov	x22, x0
  43798c:	add	x0, sp, #0x80
  437990:	sub	x1, x29, #0x78
  437994:	bl	4382c0 <argp_parse@@Base+0x9604>
  437998:	ldr	x23, [sp, #136]
  43799c:	ldr	w24, [sp, #144]
  4379a0:	mov	x25, x0
  4379a4:	sub	x0, x29, #0xb0
  4379a8:	add	x1, sp, #0x80
  4379ac:	add	x2, sp, #0x280
  4379b0:	bl	438394 <argp_parse@@Base+0x96d8>
  4379b4:	mov	x4, x0
  4379b8:	mov	x0, x22
  4379bc:	mov	x1, x25
  4379c0:	mov	x2, x23
  4379c4:	mov	w3, w24
  4379c8:	bl	4368a0 <argp_parse@@Base+0x7be4>
  4379cc:	b	436db8 <argp_parse@@Base+0x80fc>
  4379d0:	add	w8, w9, w8
  4379d4:	mov	w9, #0xffffffff            	// #-1
  4379d8:	sub	x1, x29, #0xb0
  4379dc:	mov	x0, x21
  4379e0:	stur	w8, [x29, #-164]
  4379e4:	stur	w9, [x29, #-144]
  4379e8:	bl	4474c4 <_obstack_memory_used@@Base+0xbccc>
  4379ec:	ldrb	w8, [sp, #345]
  4379f0:	cmn	x0, #0x1
  4379f4:	b.eq	437970 <argp_parse@@Base+0x8cb4>  // b.none
  4379f8:	mov	x24, x0
  4379fc:	cbz	w8, 437b28 <argp_parse@@Base+0x8e6c>
  437a00:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437a04:	add	x1, x1, #0x9b1
  437a08:	mov	w2, #0x5                   	// #5
  437a0c:	mov	x0, xzr
  437a10:	bl	404bd0 <dcgettext@plt>
  437a14:	mov	x25, x0
  437a18:	add	x0, sp, #0x80
  437a1c:	sub	x1, x29, #0x78
  437a20:	bl	4382c0 <argp_parse@@Base+0x9604>
  437a24:	mov	x26, x0
  437a28:	sub	x0, x29, #0xb0
  437a2c:	add	x1, sp, #0x80
  437a30:	add	x2, sp, #0x280
  437a34:	bl	438394 <argp_parse@@Base+0x96d8>
  437a38:	mov	x2, x0
  437a3c:	mov	x0, x25
  437a40:	mov	x1, x26
  437a44:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437a48:	ldrb	w8, [sp, #345]
  437a4c:	cbz	w8, 437b28 <argp_parse@@Base+0x8e6c>
  437a50:	ldp	x8, x9, [sp, #296]
  437a54:	orr	x10, x9, x8
  437a58:	cbnz	x10, 437abc <argp_parse@@Base+0x8e00>
  437a5c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437a60:	add	x1, x1, #0x9cf
  437a64:	mov	w2, #0x5                   	// #5
  437a68:	mov	x0, xzr
  437a6c:	bl	404bd0 <dcgettext@plt>
  437a70:	ldur	w8, [x29, #-156]
  437a74:	mov	x25, x0
  437a78:	add	x1, sp, #0x48
  437a7c:	mov	w0, w8
  437a80:	bl	43843c <argp_parse@@Base+0x9780>
  437a84:	ldp	w7, w8, [x29, #-164]
  437a88:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x19808>
  437a8c:	mov	x5, x0
  437a90:	add	x4, x4, #0x341
  437a94:	add	w6, w8, #0x1
  437a98:	add	x0, sp, #0x280
  437a9c:	mov	w1, #0x64                  	// #100
  437aa0:	mov	w2, #0x1                   	// #1
  437aa4:	mov	w3, #0x64                  	// #100
  437aa8:	bl	404440 <__snprintf_chk@plt>
  437aac:	add	x1, sp, #0x280
  437ab0:	mov	x0, x25
  437ab4:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437ab8:	ldp	x8, x9, [sp, #296]
  437abc:	cbz	x9, 437af4 <argp_parse@@Base+0x8e38>
  437ac0:	cbz	x8, 437af4 <argp_parse@@Base+0x8e38>
  437ac4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437ac8:	add	x1, x1, #0x9fb
  437acc:	mov	w2, #0x5                   	// #5
  437ad0:	mov	x0, xzr
  437ad4:	bl	404bd0 <dcgettext@plt>
  437ad8:	mov	x25, x0
  437adc:	add	x0, sp, #0x80
  437ae0:	sub	x1, x29, #0x78
  437ae4:	bl	4382c0 <argp_parse@@Base+0x9604>
  437ae8:	mov	x1, x0
  437aec:	mov	x0, x25
  437af0:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437af4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437af8:	add	x1, x1, #0xa34
  437afc:	mov	w2, #0x5                   	// #5
  437b00:	mov	x0, xzr
  437b04:	bl	404bd0 <dcgettext@plt>
  437b08:	mov	x25, x0
  437b0c:	sub	x0, x29, #0xb0
  437b10:	add	x1, sp, #0x80
  437b14:	add	x2, sp, #0x280
  437b18:	bl	438394 <argp_parse@@Base+0x96d8>
  437b1c:	mov	x1, x0
  437b20:	mov	x0, x25
  437b24:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437b28:	ldp	x9, x10, [sp, #232]
  437b2c:	ldr	x8, [sp, #248]
  437b30:	orr	x9, x10, x9
  437b34:	orr	x10, x9, x8
  437b38:	cbz	x10, 437e30 <argp_parse@@Base+0x9174>
  437b3c:	ldrb	w10, [sp, #345]
  437b40:	cbz	w10, 437b98 <argp_parse@@Base+0x8edc>
  437b44:	cbz	x9, 437b70 <argp_parse@@Base+0x8eb4>
  437b48:	ldur	w9, [x29, #-164]
  437b4c:	cmp	w9, #0xf
  437b50:	b.eq	437b70 <argp_parse@@Base+0x8eb4>  // b.none
  437b54:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437b58:	add	x1, x1, #0xa4e
  437b5c:	mov	w2, #0x5                   	// #5
  437b60:	mov	x0, xzr
  437b64:	bl	404bd0 <dcgettext@plt>
  437b68:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437b6c:	ldr	x8, [sp, #248]
  437b70:	cbz	x8, 437b98 <argp_parse@@Base+0x8edc>
  437b74:	ldur	w8, [x29, #-168]
  437b78:	cmp	w8, #0xc
  437b7c:	b.eq	437b98 <argp_parse@@Base+0x8edc>  // b.none
  437b80:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437b84:	add	x1, x1, #0xaaf
  437b88:	mov	w2, #0x5                   	// #5
  437b8c:	mov	x0, xzr
  437b90:	bl	404bd0 <dcgettext@plt>
  437b94:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437b98:	ldr	x8, [sp, #232]
  437b9c:	tbnz	x8, #63, 437bb8 <argp_parse@@Base+0x8efc>
  437ba0:	ldur	w9, [x29, #-156]
  437ba4:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  437ba8:	sub	x10, x10, x8
  437bac:	cmp	x10, w9, sxtw
  437bb0:	b.ge	437bcc <argp_parse@@Base+0x8f10>  // b.tcont
  437bb4:	b	437c7c <argp_parse@@Base+0x8fc0>
  437bb8:	ldur	w9, [x29, #-156]
  437bbc:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  437bc0:	sub	x10, x10, x8
  437bc4:	cmp	x10, w9, sxtw
  437bc8:	b.gt	437c7c <argp_parse@@Base+0x8fc0>
  437bcc:	sxtw	x10, w9
  437bd0:	add	x10, x8, x10
  437bd4:	mov	w11, #0x80000000            	// #-2147483648
  437bd8:	add	x10, x10, x11
  437bdc:	lsr	x10, x10, #32
  437be0:	cbnz	x10, 437c7c <argp_parse@@Base+0x8fc0>
  437be4:	ldr	x10, [sp, #240]
  437be8:	tbnz	x10, #63, 437c04 <argp_parse@@Base+0x8f48>
  437bec:	ldur	w11, [x29, #-160]
  437bf0:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  437bf4:	sub	x12, x12, x10
  437bf8:	cmp	x12, w11, sxtw
  437bfc:	b.ge	437c18 <argp_parse@@Base+0x8f5c>  // b.tcont
  437c00:	b	437c7c <argp_parse@@Base+0x8fc0>
  437c04:	ldur	w11, [x29, #-160]
  437c08:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  437c0c:	sub	x12, x12, x10
  437c10:	cmp	x12, w11, sxtw
  437c14:	b.gt	437c7c <argp_parse@@Base+0x8fc0>
  437c18:	sxtw	x12, w11
  437c1c:	add	x12, x10, x12
  437c20:	mov	w13, #0x80000000            	// #-2147483648
  437c24:	add	x12, x12, x13
  437c28:	lsr	x12, x12, #32
  437c2c:	cbnz	x12, 437c7c <argp_parse@@Base+0x8fc0>
  437c30:	ldr	x12, [sp, #248]
  437c34:	tbnz	x12, #63, 437c50 <argp_parse@@Base+0x8f94>
  437c38:	ldur	w13, [x29, #-164]
  437c3c:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  437c40:	sub	x14, x14, x12
  437c44:	cmp	x14, w13, sxtw
  437c48:	b.ge	437c64 <argp_parse@@Base+0x8fa8>  // b.tcont
  437c4c:	b	437c7c <argp_parse@@Base+0x8fc0>
  437c50:	ldur	w13, [x29, #-164]
  437c54:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
  437c58:	sub	x14, x14, x12
  437c5c:	cmp	x14, w13, sxtw
  437c60:	b.gt	437c7c <argp_parse@@Base+0x8fc0>
  437c64:	sxtw	x14, w13
  437c68:	add	x14, x12, x14
  437c6c:	mov	w15, #0x80000000            	// #-2147483648
  437c70:	add	x14, x14, x15
  437c74:	lsr	x14, x14, #32
  437c78:	cbz	x14, 437cac <argp_parse@@Base+0x8ff0>
  437c7c:	ldrb	w8, [sp, #345]
  437c80:	cbz	w8, 436db8 <argp_parse@@Base+0x80fc>
  437c84:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437c88:	add	x1, x1, #0xaf6
  437c8c:	mov	w2, #0x5                   	// #5
  437c90:	mov	x0, xzr
  437c94:	bl	404bd0 <dcgettext@plt>
  437c98:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437c9c:	add	x1, x1, #0xb04
  437ca0:	mov	w2, #0x877                 	// #2167
  437ca4:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437ca8:	b	436db8 <argp_parse@@Base+0x80fc>
  437cac:	add	w26, w9, w8
  437cb0:	add	w20, w11, w10
  437cb4:	ldur	x8, [x29, #-240]
  437cb8:	ldur	w9, [x29, #-232]
  437cbc:	ldur	w10, [x29, #-208]
  437cc0:	add	w25, w13, w12
  437cc4:	sub	x1, x29, #0xb0
  437cc8:	mov	x0, x21
  437ccc:	stp	w25, w20, [x29, #-164]
  437cd0:	stur	w9, [x29, #-168]
  437cd4:	stur	x8, [x29, #-176]
  437cd8:	stur	w26, [x29, #-156]
  437cdc:	stur	w10, [x29, #-144]
  437ce0:	bl	4474c4 <_obstack_memory_used@@Base+0xbccc>
  437ce4:	ldrb	w8, [sp, #345]
  437ce8:	cmn	x0, #0x1
  437cec:	b.eq	438098 <argp_parse@@Base+0x93dc>  // b.none
  437cf0:	mov	x24, x0
  437cf4:	cbz	w8, 437e30 <argp_parse@@Base+0x9174>
  437cf8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437cfc:	add	x1, x1, #0xb54
  437d00:	mov	w2, #0x5                   	// #5
  437d04:	mov	x0, xzr
  437d08:	bl	404bd0 <dcgettext@plt>
  437d0c:	ldp	x1, x2, [sp, #232]
  437d10:	ldr	x3, [sp, #248]
  437d14:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437d18:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437d1c:	add	x1, x1, #0xb91
  437d20:	mov	w2, #0x5                   	// #5
  437d24:	mov	x0, xzr
  437d28:	bl	404bd0 <dcgettext@plt>
  437d2c:	mov	x27, x0
  437d30:	sub	x0, x29, #0xb0
  437d34:	add	x1, sp, #0x80
  437d38:	add	x2, sp, #0x280
  437d3c:	bl	438394 <argp_parse@@Base+0x96d8>
  437d40:	mov	x1, x0
  437d44:	mov	x0, x27
  437d48:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437d4c:	ldur	w8, [x29, #-208]
  437d50:	cmn	w8, #0x1
  437d54:	b.eq	437d7c <argp_parse@@Base+0x90c0>  // b.none
  437d58:	ldur	w9, [x29, #-144]
  437d5c:	cmp	w9, w8
  437d60:	b.eq	437d7c <argp_parse@@Base+0x90c0>  // b.none
  437d64:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437d68:	add	x1, x1, #0xbab
  437d6c:	mov	w2, #0x5                   	// #5
  437d70:	mov	x0, xzr
  437d74:	bl	404bd0 <dcgettext@plt>
  437d78:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437d7c:	ldr	x8, [sp, #248]
  437d80:	cbnz	x8, 437e30 <argp_parse@@Base+0x9174>
  437d84:	ldur	w8, [x29, #-164]
  437d88:	cmp	w8, w25
  437d8c:	b.ne	437da4 <argp_parse@@Base+0x90e8>  // b.any
  437d90:	ldr	x8, [sp, #240]
  437d94:	cbnz	x8, 437e30 <argp_parse@@Base+0x9174>
  437d98:	ldur	w8, [x29, #-160]
  437d9c:	cmp	w8, w20
  437da0:	b.eq	437e30 <argp_parse@@Base+0x9174>  // b.none
  437da4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437da8:	add	x1, x1, #0xbe8
  437dac:	mov	w2, #0x5                   	// #5
  437db0:	mov	x0, xzr
  437db4:	bl	404bd0 <dcgettext@plt>
  437db8:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437dbc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437dc0:	add	x1, x1, #0xc23
  437dc4:	mov	w2, #0x5                   	// #5
  437dc8:	mov	x0, xzr
  437dcc:	bl	404bd0 <dcgettext@plt>
  437dd0:	mov	x27, x0
  437dd4:	add	x1, sp, #0x48
  437dd8:	mov	w0, w26
  437ddc:	bl	43843c <argp_parse@@Base+0x9780>
  437de0:	mov	x1, x0
  437de4:	add	w2, w20, #0x1
  437de8:	mov	x0, x27
  437dec:	mov	w3, w25
  437df0:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437df4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437df8:	add	x1, x1, #0xc46
  437dfc:	mov	w2, #0x5                   	// #5
  437e00:	mov	x0, xzr
  437e04:	bl	404bd0 <dcgettext@plt>
  437e08:	ldur	w8, [x29, #-156]
  437e0c:	mov	x25, x0
  437e10:	add	x1, sp, #0x48
  437e14:	mov	w0, w8
  437e18:	bl	43843c <argp_parse@@Base+0x9780>
  437e1c:	ldp	w3, w8, [x29, #-164]
  437e20:	mov	x1, x0
  437e24:	mov	x0, x25
  437e28:	add	w2, w8, #0x1
  437e2c:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437e30:	ldr	x8, [sp, #336]
  437e34:	cbz	x8, 437ed0 <argp_parse@@Base+0x9214>
  437e38:	ldur	x9, [x29, #-136]
  437e3c:	ldrsw	x10, [sp, #152]
  437e40:	tbnz	x9, #63, 437e58 <argp_parse@@Base+0x919c>
  437e44:	orr	x8, x9, #0x8000000000000000
  437e48:	cmp	x8, x10
  437e4c:	b.le	437e68 <argp_parse@@Base+0x91ac>
  437e50:	mov	w8, #0x1                   	// #1
  437e54:	b	437e6c <argp_parse@@Base+0x91b0>
  437e58:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  437e5c:	add	x8, x9, x8
  437e60:	cmp	x8, x10
  437e64:	b.lt	437e50 <argp_parse@@Base+0x9194>  // b.tstop
  437e68:	mov	w8, wzr
  437e6c:	subs	x9, x10, x9
  437e70:	b.mi	437e88 <argp_parse@@Base+0x91cc>  // b.first
  437e74:	orr	x10, x9, #0x8000000000000000
  437e78:	cmp	x24, x10
  437e7c:	b.ge	437e98 <argp_parse@@Base+0x91dc>  // b.tcont
  437e80:	mov	w10, #0x1                   	// #1
  437e84:	b	437e9c <argp_parse@@Base+0x91e0>
  437e88:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  437e8c:	add	x10, x9, x10
  437e90:	cmp	x10, x24
  437e94:	b.lt	437e80 <argp_parse@@Base+0x91c4>  // b.tstop
  437e98:	mov	w10, wzr
  437e9c:	orr	w8, w10, w8
  437ea0:	cbz	w8, 437ecc <argp_parse@@Base+0x9210>
  437ea4:	ldrb	w8, [sp, #345]
  437ea8:	cbz	w8, 436db8 <argp_parse@@Base+0x80fc>
  437eac:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437eb0:	add	x1, x1, #0xc69
  437eb4:	mov	w2, #0x5                   	// #5
  437eb8:	mov	x0, xzr
  437ebc:	bl	404bd0 <dcgettext@plt>
  437ec0:	ldr	w1, [sp, #152]
  437ec4:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437ec8:	b	436db8 <argp_parse@@Base+0x80fc>
  437ecc:	sub	x24, x24, x9
  437ed0:	ldrb	w8, [sp, #345]
  437ed4:	cbz	w8, 437f10 <argp_parse@@Base+0x9254>
  437ed8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  437edc:	add	x1, x1, #0xc94
  437ee0:	mov	w2, #0x5                   	// #5
  437ee4:	mov	x0, xzr
  437ee8:	bl	404bd0 <dcgettext@plt>
  437eec:	mov	x25, x0
  437ef0:	sub	x0, x29, #0xb0
  437ef4:	add	x1, sp, #0x80
  437ef8:	add	x2, sp, #0x280
  437efc:	bl	438394 <argp_parse@@Base+0x96d8>
  437f00:	mov	x1, x0
  437f04:	mov	x0, x25
  437f08:	mov	x2, x24
  437f0c:	bl	4368a0 <argp_parse@@Base+0x7be4>
  437f10:	ldr	x11, [sp, #224]
  437f14:	ldr	x8, [sp, #256]
  437f18:	ldrsw	x9, [sp, #280]
  437f1c:	tbnz	x8, #63, 437f54 <argp_parse@@Base+0x9298>
  437f20:	mov	x10, #0x5e6f                	// #24175
  437f24:	movk	x10, #0x3c4d, lsl #16
  437f28:	movk	x10, #0x1a2b, lsl #32
  437f2c:	movk	x10, #0x9, lsl #48
  437f30:	cmp	x8, x10
  437f34:	b.gt	438084 <argp_parse@@Base+0x93c8>
  437f38:	mov	w10, #0xe10                 	// #3600
  437f3c:	mul	x12, x8, x10
  437f40:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  437f44:	sub	x10, x10, x12
  437f48:	cmp	x10, x24
  437f4c:	b.ge	437f84 <argp_parse@@Base+0x92c8>  // b.tcont
  437f50:	b	438084 <argp_parse@@Base+0x93c8>
  437f54:	mov	x10, #0xa191                	// #41361
  437f58:	movk	x10, #0xc3b2, lsl #16
  437f5c:	movk	x10, #0xe5d4, lsl #32
  437f60:	movk	x10, #0xfff6, lsl #48
  437f64:	cmp	x8, x10
  437f68:	b.lt	438084 <argp_parse@@Base+0x93c8>  // b.tstop
  437f6c:	mov	w10, #0xe10                 	// #3600
  437f70:	mul	x12, x8, x10
  437f74:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  437f78:	sub	x10, x10, x12
  437f7c:	cmp	x24, x10
  437f80:	b.lt	438084 <argp_parse@@Base+0x93c8>  // b.tstop
  437f84:	ldr	x10, [sp, #264]
  437f88:	add	x13, x12, x24
  437f8c:	tbnz	x10, #63, 437fbc <argp_parse@@Base+0x9300>
  437f90:	mov	x12, #0x2222222222222222    	// #2459565876494606882
  437f94:	movk	x12, #0x222, lsl #48
  437f98:	cmp	x10, x12
  437f9c:	b.gt	438084 <argp_parse@@Base+0x93c8>
  437fa0:	mov	w12, #0x3c                  	// #60
  437fa4:	mul	x14, x10, x12
  437fa8:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  437fac:	sub	x12, x12, x14
  437fb0:	cmp	x12, x13
  437fb4:	b.ge	437fe8 <argp_parse@@Base+0x932c>  // b.tcont
  437fb8:	b	438084 <argp_parse@@Base+0x93c8>
  437fbc:	mov	x12, #0xdddddddddddddddd    	// #-2459565876494606883
  437fc0:	movk	x12, #0xddde
  437fc4:	movk	x12, #0xfddd, lsl #48
  437fc8:	cmp	x10, x12
  437fcc:	b.lt	438084 <argp_parse@@Base+0x93c8>  // b.tstop
  437fd0:	mov	w12, #0x3c                  	// #60
  437fd4:	mul	x14, x10, x12
  437fd8:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  437fdc:	sub	x12, x12, x14
  437fe0:	cmp	x13, x12
  437fe4:	b.lt	438084 <argp_parse@@Base+0x93c8>  // b.tstop
  437fe8:	ldr	x12, [sp, #272]
  437fec:	add	x13, x14, x13
  437ff0:	tbnz	x12, #63, 438008 <argp_parse@@Base+0x934c>
  437ff4:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  437ff8:	sub	x14, x14, x12
  437ffc:	cmp	x14, x13
  438000:	b.ge	438018 <argp_parse@@Base+0x935c>  // b.tcont
  438004:	b	438084 <argp_parse@@Base+0x93c8>
  438008:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
  43800c:	sub	x14, x14, x12
  438010:	cmp	x13, x14
  438014:	b.lt	438084 <argp_parse@@Base+0x93c8>  // b.tstop
  438018:	mov	x15, #0x94b3                	// #38067
  43801c:	movk	x15, #0x26d6, lsl #16
  438020:	movk	x15, #0xbe8, lsl #32
  438024:	add	x14, x11, x9
  438028:	movk	x15, #0x112e, lsl #48
  43802c:	smulh	x16, x14, x15
  438030:	mov	w11, #0xca00                	// #51712
  438034:	asr	x17, x16, #26
  438038:	movk	w11, #0x3b9a, lsl #16
  43803c:	add	x16, x17, x16, lsr #63
  438040:	msub	x16, x16, x11, x14
  438044:	add	x16, x16, x11
  438048:	smulh	x17, x16, x15
  43804c:	asr	x18, x17, #26
  438050:	add	x17, x18, x17, lsr #63
  438054:	msub	x11, x17, x11, x16
  438058:	sub	x14, x14, x11
  43805c:	smulh	x14, x14, x15
  438060:	asr	x15, x14, #26
  438064:	add	x15, x15, x14, lsr #63
  438068:	add	x13, x12, x13
  43806c:	sxtw	x14, w15
  438070:	tbnz	w15, #31, 4380d0 <argp_parse@@Base+0x9414>
  438074:	mov	x15, #0x7fffffffffffffff    	// #9223372036854775807
  438078:	sub	x15, x15, x14
  43807c:	cmp	x15, x13
  438080:	b.ge	4380e0 <argp_parse@@Base+0x9424>  // b.tcont
  438084:	ldrb	w8, [sp, #345]
  438088:	cbz	w8, 436db8 <argp_parse@@Base+0x80fc>
  43808c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  438090:	add	x1, x1, #0xcae
  438094:	b	437204 <argp_parse@@Base+0x8548>
  438098:	cbz	w8, 436db8 <argp_parse@@Base+0x80fc>
  43809c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  4380a0:	add	x1, x1, #0xb15
  4380a4:	mov	w2, #0x5                   	// #5
  4380a8:	mov	x0, xzr
  4380ac:	bl	404bd0 <dcgettext@plt>
  4380b0:	mov	x22, x0
  4380b4:	sub	x0, x29, #0xb0
  4380b8:	add	x1, sp, #0x80
  4380bc:	add	x2, sp, #0x280
  4380c0:	bl	438394 <argp_parse@@Base+0x96d8>
  4380c4:	mov	x1, x0
  4380c8:	mov	x0, x22
  4380cc:	b	436db4 <argp_parse@@Base+0x80f8>
  4380d0:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
  4380d4:	sub	x15, x15, x14
  4380d8:	cmp	x13, x15
  4380dc:	b.lt	438084 <argp_parse@@Base+0x93c8>  // b.tstop
  4380e0:	add	x24, x13, x14
  4380e4:	ldr	x13, [sp, #48]
  4380e8:	stp	x24, x11, [x13]
  4380ec:	ldrb	w11, [sp, #345]
  4380f0:	cbz	w11, 43818c <argp_parse@@Base+0x94d0>
  4380f4:	orr	x8, x8, x9
  4380f8:	orr	x8, x8, x10
  4380fc:	orr	x8, x8, x12
  438100:	cbz	x8, 43818c <argp_parse@@Base+0x94d0>
  438104:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  438108:	add	x1, x1, #0xcde
  43810c:	mov	w2, #0x5                   	// #5
  438110:	mov	x0, xzr
  438114:	bl	404bd0 <dcgettext@plt>
  438118:	ldp	x1, x2, [sp, #256]
  43811c:	ldr	x3, [sp, #272]
  438120:	ldr	w4, [sp, #280]
  438124:	bl	4368a0 <argp_parse@@Base+0x7be4>
  438128:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  43812c:	add	x1, x1, #0xd27
  438130:	mov	w2, #0x5                   	// #5
  438134:	mov	x0, xzr
  438138:	bl	404bd0 <dcgettext@plt>
  43813c:	mov	x1, x24
  438140:	bl	4368a0 <argp_parse@@Base+0x7be4>
  438144:	ldur	w8, [x29, #-144]
  438148:	cmn	w8, #0x1
  43814c:	b.eq	43818c <argp_parse@@Base+0x94d0>  // b.none
  438150:	ldr	x1, [sp, #48]
  438154:	add	x2, sp, #0x48
  438158:	mov	x0, x21
  43815c:	bl	4471d0 <_obstack_memory_used@@Base+0xb9d8>
  438160:	cbz	x0, 43818c <argp_parse@@Base+0x94d0>
  438164:	ldur	w8, [x29, #-144]
  438168:	ldr	w9, [sp, #104]
  43816c:	cmp	w8, w9
  438170:	b.eq	43818c <argp_parse@@Base+0x94d0>  // b.none
  438174:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  438178:	add	x1, x1, #0xd49
  43817c:	mov	w2, #0x5                   	// #5
  438180:	mov	x0, xzr
  438184:	bl	404bd0 <dcgettext@plt>
  438188:	bl	4368a0 <argp_parse@@Base+0x7be4>
  43818c:	ldr	x20, [sp, #48]
  438190:	b	436e10 <argp_parse@@Base+0x8154>
  438194:	stp	x29, x30, [sp, #-48]!
  438198:	mov	w8, #0xb3c5                	// #46021
  43819c:	movk	w8, #0x91a2, lsl #16
  4381a0:	smull	x8, w0, w8
  4381a4:	lsr	x8, x8, #32
  4381a8:	add	w8, w8, w0
  4381ac:	asr	w10, w8, #11
  4381b0:	str	x21, [sp, #16]
  4381b4:	add	w21, w10, w8, lsr #31
  4381b8:	cmp	w21, #0x0
  4381bc:	stp	x20, x19, [sp, #32]
  4381c0:	mov	x19, x1
  4381c4:	mov	w9, #0x2b                  	// #43
  4381c8:	cneg	w5, w21, mi  // mi = first
  4381cc:	cmp	w0, #0x0
  4381d0:	mov	w8, #0x2d                  	// #45
  4381d4:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  4381d8:	mov	w20, w0
  4381dc:	csel	w4, w8, w9, lt  // lt = tstop
  4381e0:	add	x3, x3, #0x166
  4381e4:	mov	w1, #0x1                   	// #1
  4381e8:	mov	x2, #0xffffffffffffffff    	// #-1
  4381ec:	mov	x0, x19
  4381f0:	mov	x29, sp
  4381f4:	bl	404190 <__sprintf_chk@plt>
  4381f8:	mov	w8, #0xe10                 	// #3600
  4381fc:	msub	w8, w21, w8, w20
  438200:	cbz	w8, 4382ac <argp_parse@@Base+0x95f0>
  438204:	cmp	w8, #0x0
  438208:	mov	w10, #0x8889                	// #34953
  43820c:	cneg	w8, w8, mi  // mi = first
  438210:	movk	w10, #0x8888, lsl #16
  438214:	mov	w12, #0x81b5                	// #33205
  438218:	and	w14, w8, #0xffff
  43821c:	movk	w12, #0x1b4e, lsl #16
  438220:	umull	x10, w14, w10
  438224:	mov	w11, #0x3c                  	// #60
  438228:	umull	x14, w14, w12
  43822c:	lsr	x15, x10, #37
  438230:	mov	w12, #0xcccd                	// #52429
  438234:	msub	w8, w15, w11, w8
  438238:	movk	w12, #0xcccc, lsl #16
  43823c:	lsr	x11, x14, #38
  438240:	ubfx	x10, x10, #37, #8
  438244:	add	x13, x19, w0, sxtw
  438248:	add	w11, w11, #0x30
  43824c:	umull	x10, w10, w12
  438250:	strb	w11, [x13, #1]
  438254:	mov	w11, #0xa                   	// #10
  438258:	lsr	x10, x10, #35
  43825c:	msub	w10, w10, w11, w15
  438260:	mov	w9, #0x3a                  	// #58
  438264:	tst	w8, #0xffff
  438268:	orr	w14, w10, #0x30
  43826c:	add	x10, x13, #0x3
  438270:	strb	w9, [x13]
  438274:	strb	w14, [x13, #2]
  438278:	b.eq	4382a8 <argp_parse@@Base+0x95ec>  // b.none
  43827c:	strb	w9, [x10]
  438280:	and	w9, w8, #0xff
  438284:	umull	x9, w9, w12
  438288:	lsr	x9, x9, #35
  43828c:	msub	w8, w9, w11, w8
  438290:	orr	w12, w9, #0x30
  438294:	orr	w8, w8, #0x30
  438298:	add	x9, x10, #0x3
  43829c:	strb	w12, [x10, #1]
  4382a0:	strb	w8, [x10, #2]
  4382a4:	mov	x10, x9
  4382a8:	strb	wzr, [x10]
  4382ac:	mov	x0, x19
  4382b0:	ldp	x20, x19, [sp, #32]
  4382b4:	ldr	x21, [sp, #16]
  4382b8:	ldp	x29, x30, [sp], #48
  4382bc:	ret
  4382c0:	stp	x29, x30, [sp, #-32]!
  4382c4:	stp	x20, x19, [sp, #16]
  4382c8:	ldrb	w8, [x0, #224]
  4382cc:	mov	x20, x0
  4382d0:	mov	x19, x1
  4382d4:	mov	x29, sp
  4382d8:	cbz	w8, 438308 <argp_parse@@Base+0x964c>
  4382dc:	ldr	x5, [x20, #8]
  4382e0:	add	x8, x5, #0x1
  4382e4:	cmp	x8, #0xd
  4382e8:	b.hi	438314 <argp_parse@@Base+0x9658>  // b.pmore
  4382ec:	adrp	x10, 454000 <_obstack_memory_used@@Base+0x18808>
  4382f0:	mov	w9, #0xb                   	// #11
  4382f4:	add	x10, x10, #0x558
  4382f8:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x16808>
  4382fc:	madd	x5, x8, x9, x10
  438300:	add	x4, x4, #0xb24
  438304:	b	43831c <argp_parse@@Base+0x9660>
  438308:	mov	w0, wzr
  43830c:	strb	wzr, [x19]
  438310:	b	438330 <argp_parse@@Base+0x9674>
  438314:	adrp	x4, 454000 <_obstack_memory_used@@Base+0x18808>
  438318:	add	x4, x4, #0xebe
  43831c:	mov	w1, #0x64                  	// #100
  438320:	mov	w2, #0x1                   	// #1
  438324:	mov	x3, #0xffffffffffffffff    	// #-1
  438328:	mov	x0, x19
  43832c:	bl	404440 <__snprintf_chk@plt>
  438330:	ldr	w9, [x20, #16]
  438334:	tbnz	w9, #31, 438384 <argp_parse@@Base+0x96c8>
  438338:	cmp	w0, #0x63
  43833c:	b.hi	438384 <argp_parse@@Base+0x96c8>  // b.pmore
  438340:	cmp	w9, #0x6
  438344:	b.gt	438384 <argp_parse@@Base+0x96c8>
  438348:	mov	w10, #0x64                  	// #100
  43834c:	adrp	x11, 452000 <_obstack_memory_used@@Base+0x16808>
  438350:	adrp	x12, 454000 <_obstack_memory_used@@Base+0x18808>
  438354:	add	x8, x19, w0, uxtw
  438358:	cmp	w0, #0x0
  43835c:	add	x11, x11, #0xb23
  438360:	add	x12, x12, #0x5f2
  438364:	sub	w10, w10, w0
  438368:	cinc	x4, x11, eq  // eq = none
  43836c:	sxtw	x1, w10
  438370:	add	x5, x12, x9, lsl #2
  438374:	mov	w2, #0x1                   	// #1
  438378:	mov	x3, #0xffffffffffffffff    	// #-1
  43837c:	mov	x0, x8
  438380:	bl	404440 <__snprintf_chk@plt>
  438384:	mov	x0, x19
  438388:	ldp	x20, x19, [sp, #16]
  43838c:	ldp	x29, x30, [sp], #32
  438390:	ret
  438394:	sub	sp, sp, #0x50
  438398:	stp	x20, x19, [sp, #64]
  43839c:	mov	x19, x2
  4383a0:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x19808>
  4383a4:	mov	x20, x1
  4383a8:	mov	x3, x0
  4383ac:	add	x2, x2, #0x320
  4383b0:	mov	w1, #0x64                  	// #100
  4383b4:	mov	x0, x19
  4383b8:	mov	x4, xzr
  4383bc:	mov	w5, wzr
  4383c0:	stp	x29, x30, [sp, #32]
  4383c4:	str	x21, [sp, #48]
  4383c8:	add	x29, sp, #0x20
  4383cc:	bl	447fe8 <_obstack_memory_used@@Base+0xc7f0>
  4383d0:	cbz	x20, 438424 <argp_parse@@Base+0x9768>
  4383d4:	cmp	w0, #0x63
  4383d8:	b.gt	438424 <argp_parse@@Base+0x9768>
  4383dc:	ldr	x8, [x20, #208]
  4383e0:	cbz	x8, 438424 <argp_parse@@Base+0x9768>
  4383e4:	ldr	w8, [x20, #24]
  4383e8:	mov	x9, #0x6400000000          	// #429496729600
  4383ec:	add	x20, x19, w0, sxtw
  4383f0:	sub	x9, x9, x0, lsl #32
  4383f4:	add	x1, sp, #0x4
  4383f8:	mov	w0, w8
  4383fc:	asr	x21, x9, #32
  438400:	bl	438194 <argp_parse@@Base+0x94d8>
  438404:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x19808>
  438408:	mov	x5, x0
  43840c:	add	x4, x4, #0x33a
  438410:	mov	w2, #0x1                   	// #1
  438414:	mov	x3, #0xffffffffffffffff    	// #-1
  438418:	mov	x0, x20
  43841c:	mov	x1, x21
  438420:	bl	404440 <__snprintf_chk@plt>
  438424:	mov	x0, x19
  438428:	ldp	x20, x19, [sp, #64]
  43842c:	ldr	x21, [sp, #48]
  438430:	ldp	x29, x30, [sp, #32]
  438434:	add	sp, sp, #0x50
  438438:	ret
  43843c:	stp	x29, x30, [sp, #-32]!
  438440:	mov	w9, #0x851f                	// #34079
  438444:	movk	w9, #0x51eb, lsl #16
  438448:	smull	x9, w0, w9
  43844c:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x19808>
  438450:	lsr	x11, x9, #63
  438454:	asr	x9, x9, #37
  438458:	cmn	w0, #0x76d
  43845c:	add	x8, x8, #0x356
  438460:	mov	w10, #0xffffffed            	// #-19
  438464:	add	w9, w9, w11
  438468:	mov	w11, #0x64                  	// #100
  43846c:	cinc	x3, x8, gt
  438470:	cmn	w0, #0x7cf
  438474:	msub	w8, w9, w11, w0
  438478:	add	w11, w9, #0x13
  43847c:	sub	w9, w10, w9
  438480:	str	x19, [sp, #16]
  438484:	mov	x19, x1
  438488:	csel	w4, w9, w11, lt  // lt = tstop
  43848c:	cmp	w8, #0x0
  438490:	cneg	w5, w8, mi  // mi = first
  438494:	mov	w1, #0x1                   	// #1
  438498:	mov	x2, #0xffffffffffffffff    	// #-1
  43849c:	mov	x0, x19
  4384a0:	mov	x29, sp
  4384a4:	bl	404190 <__sprintf_chk@plt>
  4384a8:	mov	x0, x19
  4384ac:	ldr	x19, [sp, #16]
  4384b0:	ldp	x29, x30, [sp], #32
  4384b4:	ret
  4384b8:	stp	x29, x30, [sp, #-48]!
  4384bc:	stp	x20, x19, [sp, #32]
  4384c0:	mov	x19, x1
  4384c4:	adrp	x20, 454000 <_obstack_memory_used@@Base+0x18808>
  4384c8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  4384cc:	str	x21, [sp, #16]
  4384d0:	mov	x21, x0
  4384d4:	add	x20, x20, #0x218
  4384d8:	add	x1, x1, #0xfeb
  4384dc:	mov	x29, sp
  4384e0:	mov	x0, x19
  4384e4:	bl	404900 <strcmp@plt>
  4384e8:	cbz	w0, 43853c <argp_parse@@Base+0x9880>
  4384ec:	ldr	x1, [x20, #16]!
  4384f0:	cbnz	x1, 4384e0 <argp_parse@@Base+0x9824>
  4384f4:	ldr	x1, [x21, #232]!
  4384f8:	cbz	x1, 438514 <argp_parse@@Base+0x9858>
  4384fc:	mov	x20, x21
  438500:	mov	x0, x19
  438504:	bl	404900 <strcmp@plt>
  438508:	cbz	w0, 43853c <argp_parse@@Base+0x9880>
  43850c:	ldr	x1, [x20, #16]!
  438510:	cbnz	x1, 438500 <argp_parse@@Base+0x9844>
  438514:	adrp	x20, 454000 <_obstack_memory_used@@Base+0x18808>
  438518:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x18808>
  43851c:	add	x20, x20, #0x258
  438520:	add	x1, x1, #0xff2
  438524:	mov	x0, x19
  438528:	bl	404900 <strcmp@plt>
  43852c:	cbz	w0, 43853c <argp_parse@@Base+0x9880>
  438530:	ldr	x1, [x20, #16]!
  438534:	cbnz	x1, 438524 <argp_parse@@Base+0x9868>
  438538:	mov	x20, xzr
  43853c:	mov	x0, x20
  438540:	ldp	x20, x19, [sp, #32]
  438544:	ldr	x21, [sp, #16]
  438548:	ldp	x29, x30, [sp], #48
  43854c:	ret
  438550:	stp	x29, x30, [sp, #-32]!
  438554:	stp	x20, x19, [sp, #16]
  438558:	mov	x29, sp
  43855c:	cbz	x0, 4385dc <argp_parse@@Base+0x9920>
  438560:	mov	w1, #0x2f                  	// #47
  438564:	mov	x19, x0
  438568:	bl	4047b0 <strrchr@plt>
  43856c:	cmp	x0, #0x0
  438570:	csinc	x20, x19, x0, eq  // eq = none
  438574:	sub	x8, x20, x19
  438578:	cmp	x8, #0x7
  43857c:	b.lt	4385c0 <argp_parse@@Base+0x9904>  // b.tstop
  438580:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  438584:	sub	x0, x20, #0x7
  438588:	add	x1, x1, #0x398
  43858c:	mov	w2, #0x7                   	// #7
  438590:	bl	404580 <strncmp@plt>
  438594:	cbnz	w0, 4385c0 <argp_parse@@Base+0x9904>
  438598:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43859c:	add	x1, x1, #0x3a0
  4385a0:	mov	w2, #0x3                   	// #3
  4385a4:	mov	x0, x20
  4385a8:	bl	404580 <strncmp@plt>
  4385ac:	mov	x19, x20
  4385b0:	cbnz	w0, 4385c0 <argp_parse@@Base+0x9904>
  4385b4:	add	x19, x20, #0x3
  4385b8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4385bc:	str	x19, [x8, #656]
  4385c0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4385c4:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4385c8:	str	x19, [x8, #3032]
  4385cc:	str	x19, [x9, #616]
  4385d0:	ldp	x20, x19, [sp, #16]
  4385d4:	ldp	x29, x30, [sp], #32
  4385d8:	ret
  4385dc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4385e0:	ldr	x1, [x8, #624]
  4385e4:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  4385e8:	add	x0, x0, #0x360
  4385ec:	bl	404180 <fputs@plt>
  4385f0:	bl	404850 <abort@plt>
  4385f4:	stp	x29, x30, [sp, #-48]!
  4385f8:	str	x21, [sp, #16]
  4385fc:	stp	x20, x19, [sp, #32]
  438600:	mov	x29, sp
  438604:	mov	x19, x0
  438608:	bl	404ce0 <__errno_location@plt>
  43860c:	ldr	w21, [x0]
  438610:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  438614:	add	x8, x8, #0xbe0
  438618:	cmp	x19, #0x0
  43861c:	mov	x20, x0
  438620:	csel	x0, x8, x19, eq  // eq = none
  438624:	mov	w1, #0x38                  	// #56
  438628:	bl	43a954 <argp_parse@@Base+0xbc98>
  43862c:	str	w21, [x20]
  438630:	ldp	x20, x19, [sp, #32]
  438634:	ldr	x21, [sp, #16]
  438638:	ldp	x29, x30, [sp], #48
  43863c:	ret
  438640:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  438644:	add	x8, x8, #0xbe0
  438648:	cmp	x0, #0x0
  43864c:	csel	x8, x8, x0, eq  // eq = none
  438650:	ldr	w0, [x8]
  438654:	ret
  438658:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  43865c:	add	x8, x8, #0xbe0
  438660:	cmp	x0, #0x0
  438664:	csel	x8, x8, x0, eq  // eq = none
  438668:	str	w1, [x8]
  43866c:	ret
  438670:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  438674:	add	x8, x8, #0xbe0
  438678:	cmp	x0, #0x0
  43867c:	ubfx	w9, w1, #5, #3
  438680:	csel	x8, x8, x0, eq  // eq = none
  438684:	add	x8, x8, w9, uxtw #2
  438688:	ldr	w9, [x8, #8]
  43868c:	lsr	w10, w9, w1
  438690:	and	w0, w10, #0x1
  438694:	and	w10, w2, #0x1
  438698:	eor	w10, w0, w10
  43869c:	lsl	w10, w10, w1
  4386a0:	eor	w9, w10, w9
  4386a4:	str	w9, [x8, #8]
  4386a8:	ret
  4386ac:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4386b0:	add	x8, x8, #0xbe0
  4386b4:	cmp	x0, #0x0
  4386b8:	csel	x8, x8, x0, eq  // eq = none
  4386bc:	ldr	w0, [x8, #4]
  4386c0:	str	w1, [x8, #4]
  4386c4:	ret
  4386c8:	stp	x29, x30, [sp, #-16]!
  4386cc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4386d0:	add	x8, x8, #0xbe0
  4386d4:	cmp	x0, #0x0
  4386d8:	csel	x8, x8, x0, eq  // eq = none
  4386dc:	mov	w9, #0xa                   	// #10
  4386e0:	mov	x29, sp
  4386e4:	str	w9, [x8]
  4386e8:	cbz	x1, 4386fc <argp_parse@@Base+0x9a40>
  4386ec:	cbz	x2, 4386fc <argp_parse@@Base+0x9a40>
  4386f0:	stp	x1, x2, [x8, #40]
  4386f4:	ldp	x29, x30, [sp], #16
  4386f8:	ret
  4386fc:	bl	404850 <abort@plt>
  438700:	sub	sp, sp, #0x60
  438704:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  438708:	add	x8, x8, #0xbe0
  43870c:	cmp	x4, #0x0
  438710:	stp	x29, x30, [sp, #16]
  438714:	str	x25, [sp, #32]
  438718:	stp	x24, x23, [sp, #48]
  43871c:	stp	x22, x21, [sp, #64]
  438720:	stp	x20, x19, [sp, #80]
  438724:	add	x29, sp, #0x10
  438728:	mov	x19, x3
  43872c:	mov	x20, x2
  438730:	mov	x21, x1
  438734:	mov	x22, x0
  438738:	csel	x24, x8, x4, eq  // eq = none
  43873c:	bl	404ce0 <__errno_location@plt>
  438740:	ldp	w4, w5, [x24]
  438744:	ldp	x7, x8, [x24, #40]
  438748:	ldr	w25, [x0]
  43874c:	mov	x23, x0
  438750:	add	x6, x24, #0x8
  438754:	mov	x0, x22
  438758:	mov	x1, x21
  43875c:	mov	x2, x20
  438760:	mov	x3, x19
  438764:	str	x8, [sp]
  438768:	bl	43878c <argp_parse@@Base+0x9ad0>
  43876c:	str	w25, [x23]
  438770:	ldp	x20, x19, [sp, #80]
  438774:	ldp	x22, x21, [sp, #64]
  438778:	ldp	x24, x23, [sp, #48]
  43877c:	ldr	x25, [sp, #32]
  438780:	ldp	x29, x30, [sp, #16]
  438784:	add	sp, sp, #0x60
  438788:	ret
  43878c:	sub	sp, sp, #0x120
  438790:	stp	x29, x30, [sp, #192]
  438794:	add	x29, sp, #0xc0
  438798:	ldr	x8, [x29, #96]
  43879c:	stp	x28, x27, [sp, #208]
  4387a0:	stp	x26, x25, [sp, #224]
  4387a4:	stp	x24, x23, [sp, #240]
  4387a8:	stp	x22, x21, [sp, #256]
  4387ac:	stp	x20, x19, [sp, #272]
  4387b0:	str	x7, [sp, #88]
  4387b4:	stur	x6, [x29, #-40]
  4387b8:	mov	w19, w5
  4387bc:	mov	w22, w4
  4387c0:	mov	x28, x3
  4387c4:	mov	x20, x2
  4387c8:	mov	x24, x1
  4387cc:	stur	x8, [x29, #-88]
  4387d0:	mov	x21, x0
  4387d4:	bl	4049e0 <__ctype_get_mb_cur_max@plt>
  4387d8:	mov	w4, w22
  4387dc:	mov	w8, wzr
  4387e0:	mov	w14, wzr
  4387e4:	str	w19, [sp, #80]
  4387e8:	ubfx	w19, w19, #1, #1
  4387ec:	add	x9, x20, #0x1
  4387f0:	mov	w25, #0x1                   	// #1
  4387f4:	str	x0, [sp, #48]
  4387f8:	str	xzr, [sp, #64]
  4387fc:	stur	xzr, [x29, #-64]
  438800:	stur	xzr, [x29, #-32]
  438804:	str	wzr, [sp, #72]
  438808:	stur	x20, [x29, #-80]
  43880c:	str	x9, [sp, #96]
  438810:	cmp	w4, #0xa
  438814:	b.hi	4393ac <argp_parse@@Base+0xa6f0>  // b.pmore
  438818:	adrp	x12, 455000 <_obstack_memory_used@@Base+0x19808>
  43881c:	mov	w9, w4
  438820:	add	x12, x12, #0x3a8
  438824:	mov	x22, x24
  438828:	adr	x10, 438848 <argp_parse@@Base+0x9b8c>
  43882c:	ldrb	w11, [x12, x9]
  438830:	add	x10, x10, x11, lsl #2
  438834:	ldur	x24, [x29, #-80]
  438838:	mov	x20, xzr
  43883c:	mov	w16, wzr
  438840:	mov	w9, #0x1                   	// #1
  438844:	br	x10
  438848:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  43884c:	add	x0, x0, #0x4fe
  438850:	mov	w1, w4
  438854:	mov	w20, w4
  438858:	mov	w23, w14
  43885c:	bl	439ad8 <argp_parse@@Base+0xae1c>
  438860:	str	x0, [sp, #88]
  438864:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x15808>
  438868:	add	x0, x0, #0xf3c
  43886c:	mov	w1, w20
  438870:	bl	439ad8 <argp_parse@@Base+0xae1c>
  438874:	mov	w14, w23
  438878:	mov	w4, w20
  43887c:	stur	x0, [x29, #-88]
  438880:	tbnz	w19, #0, 4388c0 <argp_parse@@Base+0x9c04>
  438884:	ldr	x8, [sp, #88]
  438888:	ldrb	w9, [x8]
  43888c:	cbz	w9, 4388c0 <argp_parse@@Base+0x9c04>
  438890:	mov	w27, w14
  438894:	mov	w26, w4
  438898:	mov	x10, xzr
  43889c:	add	x8, x8, #0x1
  4388a0:	cmp	x10, x22
  4388a4:	b.cs	4388ac <argp_parse@@Base+0x9bf0>  // b.hs, b.nlast
  4388a8:	strb	w9, [x21, x10]
  4388ac:	ldrb	w9, [x8, x10]
  4388b0:	add	x20, x10, #0x1
  4388b4:	mov	x10, x20
  4388b8:	cbnz	w9, 4388a0 <argp_parse@@Base+0x9be4>
  4388bc:	b	4388cc <argp_parse@@Base+0x9c10>
  4388c0:	mov	w27, w14
  4388c4:	mov	w26, w4
  4388c8:	mov	x20, xzr
  4388cc:	ldur	x23, [x29, #-88]
  4388d0:	mov	x0, x23
  4388d4:	bl	404170 <strlen@plt>
  4388d8:	stur	x0, [x29, #-32]
  4388dc:	stur	x23, [x29, #-64]
  4388e0:	mov	w9, #0x1                   	// #1
  4388e4:	mov	w16, w19
  4388e8:	mov	w4, w26
  4388ec:	mov	w14, w27
  4388f0:	b	43896c <argp_parse@@Base+0x9cb0>
  4388f4:	mov	w8, #0x1                   	// #1
  4388f8:	b	438948 <argp_parse@@Base+0x9c8c>
  4388fc:	mov	w4, wzr
  438900:	mov	x20, xzr
  438904:	mov	w16, wzr
  438908:	mov	w9, w8
  43890c:	b	43896c <argp_parse@@Base+0x9cb0>
  438910:	tbnz	w19, #0, 438948 <argp_parse@@Base+0x9c8c>
  438914:	mov	w9, w8
  438918:	b	439260 <argp_parse@@Base+0xa5a4>
  43891c:	tbz	w19, #0, 439228 <argp_parse@@Base+0xa56c>
  438920:	mov	w8, #0x1                   	// #1
  438924:	stur	x8, [x29, #-32]
  438928:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  43892c:	add	x8, x8, #0xb08
  438930:	mov	x20, xzr
  438934:	mov	w4, #0x5                   	// #5
  438938:	stur	x8, [x29, #-64]
  43893c:	mov	w9, #0x1                   	// #1
  438940:	b	438968 <argp_parse@@Base+0x9cac>
  438944:	tbz	w19, #0, 43925c <argp_parse@@Base+0xa5a0>
  438948:	mov	w9, #0x1                   	// #1
  43894c:	stur	x9, [x29, #-32]
  438950:	adrp	x9, 451000 <_obstack_memory_used@@Base+0x15808>
  438954:	add	x9, x9, #0xf3c
  438958:	mov	x20, xzr
  43895c:	mov	w4, #0x2                   	// #2
  438960:	stur	x9, [x29, #-64]
  438964:	mov	w9, w8
  438968:	mov	w16, #0x1                   	// #1
  43896c:	mov	w15, w9
  438970:	ldp	x8, x9, [x29, #-40]
  438974:	eor	w17, w16, #0x1
  438978:	stur	w17, [x29, #-68]
  43897c:	mov	x23, xzr
  438980:	cmp	x8, #0x0
  438984:	cset	w8, eq  // eq = none
  438988:	cmp	x9, #0x0
  43898c:	cset	w9, ne  // ne = any
  438990:	cmp	w4, #0x2
  438994:	cset	w10, ne  // ne = any
  438998:	and	w13, w10, w15
  43899c:	and	w12, w9, w16
  4389a0:	orr	w10, w10, w17
  4389a4:	and	w17, w9, w13
  4389a8:	orr	w9, w13, w16
  4389ac:	eor	w9, w9, #0x1
  4389b0:	cset	w11, eq  // eq = none
  4389b4:	orr	w8, w8, w9
  4389b8:	and	w12, w15, w12
  4389bc:	str	w10, [sp, #84]
  4389c0:	and	w10, w11, w16
  4389c4:	stur	w8, [x29, #-24]
  4389c8:	eor	w8, w15, #0x1
  4389cc:	str	w12, [sp, #56]
  4389d0:	str	w10, [sp, #76]
  4389d4:	stur	w15, [x29, #-72]
  4389d8:	str	w8, [sp, #60]
  4389dc:	stp	w16, w4, [x29, #-48]
  4389e0:	stur	w17, [x29, #-52]
  4389e4:	cmn	x28, #0x1
  4389e8:	b.eq	4389f8 <argp_parse@@Base+0x9d3c>  // b.none
  4389ec:	cmp	x23, x28
  4389f0:	b.ne	438a00 <argp_parse@@Base+0x9d44>  // b.any
  4389f4:	b	4391b8 <argp_parse@@Base+0xa4fc>
  4389f8:	ldrb	w8, [x24, x23]
  4389fc:	cbz	w8, 4391c0 <argp_parse@@Base+0xa504>
  438a00:	cbz	w17, 438a40 <argp_parse@@Base+0x9d84>
  438a04:	ldur	x8, [x29, #-32]
  438a08:	cmp	x8, #0x2
  438a0c:	add	x19, x23, x8
  438a10:	b.cc	438a38 <argp_parse@@Base+0x9d7c>  // b.lo, b.ul, b.last
  438a14:	cmn	x28, #0x1
  438a18:	b.ne	438a38 <argp_parse@@Base+0x9d7c>  // b.any
  438a1c:	mov	x0, x24
  438a20:	mov	w26, w14
  438a24:	bl	404170 <strlen@plt>
  438a28:	ldp	w17, w16, [x29, #-52]
  438a2c:	ldur	w4, [x29, #-44]
  438a30:	mov	w14, w26
  438a34:	mov	x28, x0
  438a38:	cmp	x19, x28
  438a3c:	b.ls	438a48 <argp_parse@@Base+0x9d8c>  // b.plast
  438a40:	mov	w27, wzr
  438a44:	b	438a80 <argp_parse@@Base+0x9dc4>
  438a48:	ldur	x1, [x29, #-64]
  438a4c:	ldur	x2, [x29, #-32]
  438a50:	add	x0, x24, x23
  438a54:	mov	w19, w14
  438a58:	bl	4046b0 <bcmp@plt>
  438a5c:	ldur	w9, [x29, #-68]
  438a60:	cmp	w0, #0x0
  438a64:	cset	w8, ne  // ne = any
  438a68:	cset	w27, eq  // eq = none
  438a6c:	orr	w8, w8, w9
  438a70:	tbz	w8, #0, 4392b8 <argp_parse@@Base+0xa5fc>
  438a74:	ldp	w16, w4, [x29, #-48]
  438a78:	ldur	w17, [x29, #-52]
  438a7c:	mov	w14, w19
  438a80:	ldrb	w19, [x24, x23]
  438a84:	cmp	w19, #0x7e
  438a88:	b.hi	438ca0 <argp_parse@@Base+0x9fe4>  // b.pmore
  438a8c:	adrp	x13, 455000 <_obstack_memory_used@@Base+0x19808>
  438a90:	add	x13, x13, #0x3b3
  438a94:	adr	x12, 438ab8 <argp_parse@@Base+0x9dfc>
  438a98:	ldrb	w9, [x13, x19]
  438a9c:	add	x12, x12, x9, lsl #2
  438aa0:	mov	w10, wzr
  438aa4:	mov	w8, wzr
  438aa8:	mov	w26, #0x1                   	// #1
  438aac:	mov	w11, #0x6e                  	// #110
  438ab0:	mov	w9, #0x61                  	// #97
  438ab4:	br	x12
  438ab8:	ldur	w9, [x29, #-24]
  438abc:	tbnz	w9, #0, 438adc <argp_parse@@Base+0x9e20>
  438ac0:	ldur	x10, [x29, #-40]
  438ac4:	lsr	w9, w19, #5
  438ac8:	ldr	w9, [x10, w9, uxtw #2]
  438acc:	lsr	w9, w9, w19
  438ad0:	tbz	w9, #0, 438adc <argp_parse@@Base+0x9e20>
  438ad4:	mov	w9, w19
  438ad8:	b	438ae4 <argp_parse@@Base+0x9e28>
  438adc:	mov	w9, w19
  438ae0:	cbz	w27, 438d04 <argp_parse@@Base+0xa048>
  438ae4:	tbnz	w16, #0, 439290 <argp_parse@@Base+0xa5d4>
  438ae8:	cmp	w4, #0x2
  438aec:	cset	w8, ne  // ne = any
  438af0:	orr	w8, w8, w14
  438af4:	tbnz	w8, #0, 438b38 <argp_parse@@Base+0x9e7c>
  438af8:	cmp	x20, x22
  438afc:	b.cs	438b08 <argp_parse@@Base+0x9e4c>  // b.hs, b.nlast
  438b00:	mov	w8, #0x27                  	// #39
  438b04:	strb	w8, [x21, x20]
  438b08:	add	x8, x20, #0x1
  438b0c:	cmp	x8, x22
  438b10:	b.cs	438b1c <argp_parse@@Base+0x9e60>  // b.hs, b.nlast
  438b14:	mov	w10, #0x24                  	// #36
  438b18:	strb	w10, [x21, x8]
  438b1c:	add	x8, x20, #0x2
  438b20:	cmp	x8, x22
  438b24:	b.cs	438b30 <argp_parse@@Base+0x9e74>  // b.hs, b.nlast
  438b28:	mov	w10, #0x27                  	// #39
  438b2c:	strb	w10, [x21, x8]
  438b30:	add	x20, x20, #0x3
  438b34:	mov	w14, #0x1                   	// #1
  438b38:	cmp	x20, x22
  438b3c:	b.cs	438b48 <argp_parse@@Base+0x9e8c>  // b.hs, b.nlast
  438b40:	mov	w8, #0x5c                  	// #92
  438b44:	strb	w8, [x21, x20]
  438b48:	add	x20, x20, #0x1
  438b4c:	b	438d3c <argp_parse@@Base+0xa080>
  438b50:	cmp	x28, #0x1
  438b54:	b.eq	438b78 <argp_parse@@Base+0x9ebc>  // b.none
  438b58:	cmn	x28, #0x1
  438b5c:	b.ne	438b7c <argp_parse@@Base+0x9ec0>  // b.any
  438b60:	ldrb	w8, [x24, #1]
  438b64:	cbz	w8, 438b78 <argp_parse@@Base+0x9ebc>
  438b68:	mov	w8, wzr
  438b6c:	mov	w26, wzr
  438b70:	mov	x28, #0xffffffffffffffff    	// #-1
  438b74:	b	438ab8 <argp_parse@@Base+0x9dfc>
  438b78:	cbz	x23, 438b88 <argp_parse@@Base+0x9ecc>
  438b7c:	mov	w8, wzr
  438b80:	mov	w26, wzr
  438b84:	b	438ab8 <argp_parse@@Base+0x9dfc>
  438b88:	mov	w10, #0x1                   	// #1
  438b8c:	cmp	w4, #0x2
  438b90:	b.ne	438b98 <argp_parse@@Base+0x9edc>  // b.any
  438b94:	tbnz	w16, #0, 439290 <argp_parse@@Base+0xa5d4>
  438b98:	mov	w8, wzr
  438b9c:	mov	w26, w10
  438ba0:	b	438ab8 <argp_parse@@Base+0x9dfc>
  438ba4:	cmp	w4, #0x2
  438ba8:	b.ne	438cec <argp_parse@@Base+0xa030>  // b.any
  438bac:	tbz	w16, #0, 438cf8 <argp_parse@@Base+0xa03c>
  438bb0:	b	439290 <argp_parse@@Base+0xa5d4>
  438bb4:	mov	w9, #0x66                  	// #102
  438bb8:	b	438d58 <argp_parse@@Base+0xa09c>
  438bbc:	mov	w11, #0x74                  	// #116
  438bc0:	b	438bd0 <argp_parse@@Base+0x9f14>
  438bc4:	mov	w9, #0x62                  	// #98
  438bc8:	b	438d58 <argp_parse@@Base+0xa09c>
  438bcc:	mov	w11, #0x72                  	// #114
  438bd0:	ldr	w8, [sp, #84]
  438bd4:	mov	w9, w11
  438bd8:	tbnz	w8, #0, 438d58 <argp_parse@@Base+0xa09c>
  438bdc:	b	439290 <argp_parse@@Base+0xa5d4>
  438be0:	ldur	w8, [x29, #-72]
  438be4:	tbz	w8, #0, 438d6c <argp_parse@@Base+0xa0b0>
  438be8:	cmp	w4, #0x2
  438bec:	tbnz	w16, #0, 4393a0 <argp_parse@@Base+0xa6e4>
  438bf0:	cset	w8, ne  // ne = any
  438bf4:	orr	w8, w8, w14
  438bf8:	tbz	w8, #0, 4390a0 <argp_parse@@Base+0xa3e4>
  438bfc:	mov	x8, x20
  438c00:	b	4390e0 <argp_parse@@Base+0xa424>
  438c04:	cmp	w4, #0x5
  438c08:	b.eq	438e90 <argp_parse@@Base+0xa1d4>  // b.none
  438c0c:	cmp	w4, #0x2
  438c10:	b.ne	438f40 <argp_parse@@Base+0xa284>  // b.any
  438c14:	tbz	w16, #0, 438f40 <argp_parse@@Base+0xa284>
  438c18:	b	439290 <argp_parse@@Base+0xa5d4>
  438c1c:	mov	w9, #0x76                  	// #118
  438c20:	b	438d58 <argp_parse@@Base+0xa09c>
  438c24:	cmp	w4, #0x2
  438c28:	b.ne	438d7c <argp_parse@@Base+0xa0c0>  // b.any
  438c2c:	tbnz	w16, #0, 439290 <argp_parse@@Base+0xa5d4>
  438c30:	ldr	x10, [sp, #64]
  438c34:	cmp	x22, #0x0
  438c38:	cset	w8, eq  // eq = none
  438c3c:	cmp	x10, #0x0
  438c40:	cset	w9, ne  // ne = any
  438c44:	orr	w8, w9, w8
  438c48:	cmp	w8, #0x0
  438c4c:	csel	x10, x10, x22, ne  // ne = any
  438c50:	csel	x22, x22, xzr, ne  // ne = any
  438c54:	cmp	x20, x22
  438c58:	str	x10, [sp, #64]
  438c5c:	b.cs	438c68 <argp_parse@@Base+0x9fac>  // b.hs, b.nlast
  438c60:	mov	w8, #0x27                  	// #39
  438c64:	strb	w8, [x21, x20]
  438c68:	add	x8, x20, #0x1
  438c6c:	cmp	x8, x22
  438c70:	b.cs	438c7c <argp_parse@@Base+0x9fc0>  // b.hs, b.nlast
  438c74:	mov	w9, #0x5c                  	// #92
  438c78:	strb	w9, [x21, x8]
  438c7c:	add	x8, x20, #0x2
  438c80:	cmp	x8, x22
  438c84:	b.cs	438c90 <argp_parse@@Base+0x9fd4>  // b.hs, b.nlast
  438c88:	mov	w9, #0x27                  	// #39
  438c8c:	strb	w9, [x21, x8]
  438c90:	mov	w14, wzr
  438c94:	mov	w8, wzr
  438c98:	add	x20, x20, #0x3
  438c9c:	b	438d80 <argp_parse@@Base+0xa0c4>
  438ca0:	ldr	x8, [sp, #48]
  438ca4:	str	w14, [sp, #28]
  438ca8:	cmp	x8, #0x1
  438cac:	b.ne	438d94 <argp_parse@@Base+0xa0d8>  // b.any
  438cb0:	bl	404930 <__ctype_b_loc@plt>
  438cb4:	ldr	x8, [x0]
  438cb8:	mov	w11, #0x1                   	// #1
  438cbc:	ldrh	w8, [x8, x19, lsl #1]
  438cc0:	ubfx	w26, w8, #14, #1
  438cc4:	ldr	w8, [sp, #60]
  438cc8:	ldp	w16, w4, [x29, #-48]
  438ccc:	ldr	w14, [sp, #28]
  438cd0:	ldur	w17, [x29, #-52]
  438cd4:	cmp	x11, #0x1
  438cd8:	orr	w8, w26, w8
  438cdc:	b.hi	438f50 <argp_parse@@Base+0xa294>  // b.pmore
  438ce0:	tbz	w8, #0, 438f50 <argp_parse@@Base+0xa294>
  438ce4:	mov	w8, wzr
  438ce8:	b	438ab8 <argp_parse@@Base+0x9dfc>
  438cec:	ldr	w8, [sp, #56]
  438cf0:	mov	w9, #0x5c                  	// #92
  438cf4:	tbz	w8, #0, 438d58 <argp_parse@@Base+0xa09c>
  438cf8:	mov	w8, wzr
  438cfc:	mov	w26, wzr
  438d00:	mov	w19, #0x5c                  	// #92
  438d04:	tbnz	w8, #0, 438d38 <argp_parse@@Base+0xa07c>
  438d08:	tbz	w14, #0, 438d38 <argp_parse@@Base+0xa07c>
  438d0c:	cmp	x20, x22
  438d10:	b.cs	438d1c <argp_parse@@Base+0xa060>  // b.hs, b.nlast
  438d14:	mov	w8, #0x27                  	// #39
  438d18:	strb	w8, [x21, x20]
  438d1c:	add	x8, x20, #0x1
  438d20:	cmp	x8, x22
  438d24:	b.cs	438d30 <argp_parse@@Base+0xa074>  // b.hs, b.nlast
  438d28:	mov	w9, #0x27                  	// #39
  438d2c:	strb	w9, [x21, x8]
  438d30:	mov	w14, wzr
  438d34:	add	x20, x20, #0x2
  438d38:	mov	w9, w19
  438d3c:	cmp	x20, x22
  438d40:	b.cs	438d48 <argp_parse@@Base+0xa08c>  // b.hs, b.nlast
  438d44:	strb	w9, [x21, x20]
  438d48:	add	x20, x20, #0x1
  438d4c:	and	w25, w25, w26
  438d50:	add	x23, x23, #0x1
  438d54:	b	4389e4 <argp_parse@@Base+0x9d28>
  438d58:	ldur	w10, [x29, #-72]
  438d5c:	mov	w8, wzr
  438d60:	mov	w26, wzr
  438d64:	tbz	w10, #0, 438ab8 <argp_parse@@Base+0x9dfc>
  438d68:	b	438ae4 <argp_parse@@Base+0x9e28>
  438d6c:	ldr	w8, [sp, #80]
  438d70:	tbnz	w8, #0, 438d50 <argp_parse@@Base+0xa094>
  438d74:	mov	w19, wzr
  438d78:	b	438b7c <argp_parse@@Base+0x9ec0>
  438d7c:	mov	w8, wzr
  438d80:	mov	w9, #0x1                   	// #1
  438d84:	mov	w19, #0x27                  	// #39
  438d88:	str	w9, [sp, #72]
  438d8c:	mov	w26, #0x1                   	// #1
  438d90:	b	438ab8 <argp_parse@@Base+0x9dfc>
  438d94:	cmn	x28, #0x1
  438d98:	stur	xzr, [x29, #-16]
  438d9c:	b.ne	438dac <argp_parse@@Base+0xa0f0>  // b.any
  438da0:	mov	x0, x24
  438da4:	bl	404170 <strlen@plt>
  438da8:	mov	x28, x0
  438dac:	ldr	x8, [sp, #96]
  438db0:	mov	x11, xzr
  438db4:	mov	w26, #0x1                   	// #1
  438db8:	str	x21, [sp, #32]
  438dbc:	add	x8, x8, x23
  438dc0:	str	x8, [sp, #16]
  438dc4:	add	x21, x11, x23
  438dc8:	add	x1, x24, x21
  438dcc:	sub	x2, x28, x21
  438dd0:	sub	x0, x29, #0x14
  438dd4:	sub	x3, x29, #0x10
  438dd8:	str	x11, [sp, #40]
  438ddc:	bl	43b470 <argp_parse@@Base+0xc7b4>
  438de0:	cbz	x0, 439198 <argp_parse@@Base+0xa4dc>
  438de4:	mov	x24, x0
  438de8:	cmn	x0, #0x1
  438dec:	b.eq	439194 <argp_parse@@Base+0xa4d8>  // b.none
  438df0:	cmn	x24, #0x2
  438df4:	b.eq	439158 <argp_parse@@Base+0xa49c>  // b.none
  438df8:	ldr	w9, [sp, #76]
  438dfc:	ldr	x21, [sp, #32]
  438e00:	cmp	x24, #0x2
  438e04:	cset	w8, cc  // cc = lo, ul, last
  438e08:	eor	w9, w9, #0x1
  438e0c:	mov	x12, #0x2b                  	// #43
  438e10:	orr	w8, w9, w8
  438e14:	mov	w11, #0x1                   	// #1
  438e18:	movk	x12, #0x2, lsl #32
  438e1c:	tbnz	w8, #0, 438e58 <argp_parse@@Base+0xa19c>
  438e20:	ldr	x9, [sp, #40]
  438e24:	ldr	x10, [sp, #16]
  438e28:	sub	x8, x24, #0x1
  438e2c:	add	x9, x10, x9
  438e30:	ldrb	w10, [x9]
  438e34:	sub	w10, w10, #0x5b
  438e38:	cmp	w10, #0x21
  438e3c:	b.hi	438e4c <argp_parse@@Base+0xa190>  // b.pmore
  438e40:	lsl	x10, x11, x10
  438e44:	tst	x10, x12
  438e48:	b.ne	4392c4 <argp_parse@@Base+0xa608>  // b.any
  438e4c:	subs	x8, x8, #0x1
  438e50:	add	x9, x9, #0x1
  438e54:	b.ne	438e30 <argp_parse@@Base+0xa174>  // b.any
  438e58:	ldur	w0, [x29, #-20]
  438e5c:	bl	404c80 <iswprint@plt>
  438e60:	ldr	x21, [sp, #40]
  438e64:	cmp	w0, #0x0
  438e68:	cset	w8, ne  // ne = any
  438e6c:	sub	x0, x29, #0x10
  438e70:	and	w26, w26, w8
  438e74:	add	x21, x24, x21
  438e78:	bl	404870 <mbsinit@plt>
  438e7c:	mov	x11, x21
  438e80:	ldr	x21, [sp, #32]
  438e84:	ldur	x24, [x29, #-80]
  438e88:	cbz	w0, 438dc4 <argp_parse@@Base+0xa108>
  438e8c:	b	438cc4 <argp_parse@@Base+0xa008>
  438e90:	ldr	w8, [sp, #80]
  438e94:	tbz	w8, #2, 438f40 <argp_parse@@Base+0xa284>
  438e98:	add	x9, x23, #0x2
  438e9c:	cmp	x9, x28
  438ea0:	b.cs	438f40 <argp_parse@@Base+0xa284>  // b.hs, b.nlast
  438ea4:	add	x8, x23, x24
  438ea8:	ldrb	w8, [x8, #1]
  438eac:	cmp	w8, #0x3f
  438eb0:	b.ne	438f40 <argp_parse@@Base+0xa284>  // b.any
  438eb4:	ldrb	w19, [x24, x9]
  438eb8:	mov	w8, wzr
  438ebc:	cmp	w19, #0x3e
  438ec0:	b.hi	4391ac <argp_parse@@Base+0xa4f0>  // b.pmore
  438ec4:	mov	w10, #0x1                   	// #1
  438ec8:	mov	x11, #0xa38200000000        	// #179778741075968
  438ecc:	lsl	x10, x10, x19
  438ed0:	movk	x11, #0x7000, lsl #48
  438ed4:	tst	x10, x11
  438ed8:	b.eq	4391ac <argp_parse@@Base+0xa4f0>  // b.none
  438edc:	tbnz	w16, #0, 439290 <argp_parse@@Base+0xa5d4>
  438ee0:	cmp	x20, x22
  438ee4:	b.cs	438ef0 <argp_parse@@Base+0xa234>  // b.hs, b.nlast
  438ee8:	mov	w8, #0x3f                  	// #63
  438eec:	strb	w8, [x21, x20]
  438ef0:	add	x8, x20, #0x1
  438ef4:	cmp	x8, x22
  438ef8:	b.cs	438f04 <argp_parse@@Base+0xa248>  // b.hs, b.nlast
  438efc:	mov	w10, #0x22                  	// #34
  438f00:	strb	w10, [x21, x8]
  438f04:	add	x8, x20, #0x2
  438f08:	cmp	x8, x22
  438f0c:	b.cs	438f18 <argp_parse@@Base+0xa25c>  // b.hs, b.nlast
  438f10:	mov	w10, #0x22                  	// #34
  438f14:	strb	w10, [x21, x8]
  438f18:	add	x8, x20, #0x3
  438f1c:	cmp	x8, x22
  438f20:	b.cs	438f2c <argp_parse@@Base+0xa270>  // b.hs, b.nlast
  438f24:	mov	w10, #0x3f                  	// #63
  438f28:	strb	w10, [x21, x8]
  438f2c:	mov	w8, wzr
  438f30:	mov	w26, wzr
  438f34:	add	x20, x20, #0x4
  438f38:	mov	x23, x9
  438f3c:	b	438ab8 <argp_parse@@Base+0x9dfc>
  438f40:	mov	w8, wzr
  438f44:	mov	w26, wzr
  438f48:	mov	w19, #0x3f                  	// #63
  438f4c:	b	438ab8 <argp_parse@@Base+0x9dfc>
  438f50:	mov	w10, wzr
  438f54:	add	x9, x11, x23
  438f58:	tbz	w8, #0, 438fb8 <argp_parse@@Base+0xa2fc>
  438f5c:	b	439064 <argp_parse@@Base+0xa3a8>
  438f60:	and	w12, w10, #0x1
  438f64:	orn	w12, w12, w14
  438f68:	tbnz	w12, #0, 438f98 <argp_parse@@Base+0xa2dc>
  438f6c:	cmp	x20, x22
  438f70:	b.cs	438f7c <argp_parse@@Base+0xa2c0>  // b.hs, b.nlast
  438f74:	mov	w12, #0x27                  	// #39
  438f78:	strb	w12, [x21, x20]
  438f7c:	add	x12, x20, #0x1
  438f80:	cmp	x12, x22
  438f84:	b.cs	438f90 <argp_parse@@Base+0xa2d4>  // b.hs, b.nlast
  438f88:	mov	w13, #0x27                  	// #39
  438f8c:	strb	w13, [x21, x12]
  438f90:	mov	w14, wzr
  438f94:	add	x20, x20, #0x2
  438f98:	cmp	x20, x22
  438f9c:	b.cs	438fa4 <argp_parse@@Base+0xa2e8>  // b.hs, b.nlast
  438fa0:	strb	w19, [x21, x20]
  438fa4:	ldr	x12, [sp, #96]
  438fa8:	add	x20, x20, #0x1
  438fac:	ldrb	w19, [x12, x23]
  438fb0:	mov	x23, x11
  438fb4:	tbnz	w8, #0, 439064 <argp_parse@@Base+0xa3a8>
  438fb8:	tbnz	w16, #0, 439290 <argp_parse@@Base+0xa5d4>
  438fbc:	cmp	w4, #0x2
  438fc0:	cset	w10, ne  // ne = any
  438fc4:	orr	w10, w10, w14
  438fc8:	tbnz	w10, #0, 43900c <argp_parse@@Base+0xa350>
  438fcc:	cmp	x20, x22
  438fd0:	b.cs	438fdc <argp_parse@@Base+0xa320>  // b.hs, b.nlast
  438fd4:	mov	w10, #0x27                  	// #39
  438fd8:	strb	w10, [x21, x20]
  438fdc:	add	x10, x20, #0x1
  438fe0:	cmp	x10, x22
  438fe4:	b.cs	438ff0 <argp_parse@@Base+0xa334>  // b.hs, b.nlast
  438fe8:	mov	w11, #0x24                  	// #36
  438fec:	strb	w11, [x21, x10]
  438ff0:	add	x10, x20, #0x2
  438ff4:	cmp	x10, x22
  438ff8:	b.cs	439004 <argp_parse@@Base+0xa348>  // b.hs, b.nlast
  438ffc:	mov	w11, #0x27                  	// #39
  439000:	strb	w11, [x21, x10]
  439004:	add	x20, x20, #0x3
  439008:	mov	w14, #0x1                   	// #1
  43900c:	cmp	x20, x22
  439010:	b.cs	43901c <argp_parse@@Base+0xa360>  // b.hs, b.nlast
  439014:	mov	w10, #0x5c                  	// #92
  439018:	strb	w10, [x21, x20]
  43901c:	add	x10, x20, #0x1
  439020:	cmp	x10, x22
  439024:	b.cs	439034 <argp_parse@@Base+0xa378>  // b.hs, b.nlast
  439028:	mov	w11, #0x30                  	// #48
  43902c:	bfxil	w11, w19, #6, #2
  439030:	strb	w11, [x21, x10]
  439034:	add	x10, x20, #0x2
  439038:	cmp	x10, x22
  43903c:	b.cs	43904c <argp_parse@@Base+0xa390>  // b.hs, b.nlast
  439040:	mov	w11, #0x30                  	// #48
  439044:	bfxil	w11, w19, #3, #3
  439048:	strb	w11, [x21, x10]
  43904c:	mov	w11, #0x30                  	// #48
  439050:	bfxil	w11, w19, #0, #3
  439054:	add	x20, x20, #0x3
  439058:	mov	w10, #0x1                   	// #1
  43905c:	mov	w19, w11
  439060:	b	439088 <argp_parse@@Base+0xa3cc>
  439064:	tbz	w27, #0, 439084 <argp_parse@@Base+0xa3c8>
  439068:	cmp	x20, x22
  43906c:	b.cs	439078 <argp_parse@@Base+0xa3bc>  // b.hs, b.nlast
  439070:	mov	w11, #0x5c                  	// #92
  439074:	strb	w11, [x21, x20]
  439078:	mov	w27, wzr
  43907c:	add	x20, x20, #0x1
  439080:	b	439088 <argp_parse@@Base+0xa3cc>
  439084:	mov	w27, wzr
  439088:	add	x11, x23, #0x1
  43908c:	cmp	x9, x11
  439090:	b.hi	438f60 <argp_parse@@Base+0xa2a4>  // b.pmore
  439094:	and	w8, w10, #0x1
  439098:	tbz	w8, #0, 438d08 <argp_parse@@Base+0xa04c>
  43909c:	b	438d38 <argp_parse@@Base+0xa07c>
  4390a0:	cmp	x20, x22
  4390a4:	b.cs	4390b0 <argp_parse@@Base+0xa3f4>  // b.hs, b.nlast
  4390a8:	mov	w8, #0x27                  	// #39
  4390ac:	strb	w8, [x21, x20]
  4390b0:	add	x8, x20, #0x1
  4390b4:	cmp	x8, x22
  4390b8:	b.cs	4390c4 <argp_parse@@Base+0xa408>  // b.hs, b.nlast
  4390bc:	mov	w9, #0x24                  	// #36
  4390c0:	strb	w9, [x21, x8]
  4390c4:	add	x8, x20, #0x2
  4390c8:	cmp	x8, x22
  4390cc:	b.cs	4390d8 <argp_parse@@Base+0xa41c>  // b.hs, b.nlast
  4390d0:	mov	w9, #0x27                  	// #39
  4390d4:	strb	w9, [x21, x8]
  4390d8:	add	x8, x20, #0x3
  4390dc:	mov	w14, #0x1                   	// #1
  4390e0:	cmp	x8, x22
  4390e4:	b.cs	4390f0 <argp_parse@@Base+0xa434>  // b.hs, b.nlast
  4390e8:	mov	w9, #0x5c                  	// #92
  4390ec:	strb	w9, [x21, x8]
  4390f0:	cmp	w4, #0x2
  4390f4:	add	x20, x8, #0x1
  4390f8:	b.eq	439148 <argp_parse@@Base+0xa48c>  // b.none
  4390fc:	add	x9, x23, #0x1
  439100:	cmp	x9, x28
  439104:	b.cs	439148 <argp_parse@@Base+0xa48c>  // b.hs, b.nlast
  439108:	ldrb	w9, [x24, x9]
  43910c:	sub	w9, w9, #0x30
  439110:	cmp	w9, #0x9
  439114:	b.hi	439148 <argp_parse@@Base+0xa48c>  // b.pmore
  439118:	cmp	x20, x22
  43911c:	b.cs	439128 <argp_parse@@Base+0xa46c>  // b.hs, b.nlast
  439120:	mov	w9, #0x30                  	// #48
  439124:	strb	w9, [x21, x20]
  439128:	add	x9, x8, #0x2
  43912c:	cmp	x9, x22
  439130:	b.cs	43913c <argp_parse@@Base+0xa480>  // b.hs, b.nlast
  439134:	mov	w10, #0x30                  	// #48
  439138:	strb	w10, [x21, x9]
  43913c:	mov	w26, wzr
  439140:	add	x20, x8, #0x3
  439144:	b	43914c <argp_parse@@Base+0xa490>
  439148:	mov	w26, wzr
  43914c:	mov	w8, #0x1                   	// #1
  439150:	mov	w19, #0x30                  	// #48
  439154:	b	438ab8 <argp_parse@@Base+0x9dfc>
  439158:	cmp	x28, x21
  43915c:	b.ls	439194 <argp_parse@@Base+0xa4d8>  // b.plast
  439160:	ldur	x24, [x29, #-80]
  439164:	ldp	x21, x11, [sp, #32]
  439168:	sub	x8, x28, x23
  43916c:	add	x9, x24, x23
  439170:	ldrb	w10, [x9, x11]
  439174:	cbz	w10, 4391a4 <argp_parse@@Base+0xa4e8>
  439178:	add	x11, x11, #0x1
  43917c:	add	x10, x23, x11
  439180:	cmp	x10, x28
  439184:	b.cc	439170 <argp_parse@@Base+0xa4b4>  // b.lo, b.ul, b.last
  439188:	mov	w26, wzr
  43918c:	mov	x11, x8
  439190:	b	438cc4 <argp_parse@@Base+0xa008>
  439194:	mov	w26, wzr
  439198:	ldp	x21, x11, [sp, #32]
  43919c:	ldur	x24, [x29, #-80]
  4391a0:	b	438cc4 <argp_parse@@Base+0xa008>
  4391a4:	mov	w26, wzr
  4391a8:	b	438cc4 <argp_parse@@Base+0xa008>
  4391ac:	mov	w19, #0x3f                  	// #63
  4391b0:	mov	w26, w8
  4391b4:	b	438ab8 <argp_parse@@Base+0x9dfc>
  4391b8:	mov	x28, x23
  4391bc:	b	4391c4 <argp_parse@@Base+0xa508>
  4391c0:	mov	x28, #0xffffffffffffffff    	// #-1
  4391c4:	cmp	w4, #0x2
  4391c8:	ldur	w10, [x29, #-72]
  4391cc:	cset	w8, eq  // eq = none
  4391d0:	cmp	x20, #0x0
  4391d4:	cset	w9, eq  // eq = none
  4391d8:	and	w8, w8, w9
  4391dc:	and	w8, w16, w8
  4391e0:	tbnz	w8, #0, 439294 <argp_parse@@Base+0xa5d8>
  4391e4:	cmp	w4, #0x2
  4391e8:	cset	w8, ne  // ne = any
  4391ec:	orr	w8, w16, w8
  4391f0:	tbnz	w8, #0, 439360 <argp_parse@@Base+0xa6a4>
  4391f4:	ldr	w8, [sp, #72]
  4391f8:	eor	w8, w8, #0x1
  4391fc:	tbnz	w8, #0, 439360 <argp_parse@@Base+0xa6a4>
  439200:	tbnz	w25, #0, 439330 <argp_parse@@Base+0xa674>
  439204:	ldr	x24, [sp, #64]
  439208:	mov	w19, wzr
  43920c:	cbz	x24, 43935c <argp_parse@@Base+0xa6a0>
  439210:	mov	w4, #0x2                   	// #2
  439214:	mov	w8, w10
  439218:	mov	w25, w19
  43921c:	mov	w16, w19
  439220:	cbz	x22, 438810 <argp_parse@@Base+0x9b54>
  439224:	b	439360 <argp_parse@@Base+0xa6a4>
  439228:	mov	w16, wzr
  43922c:	cbz	x22, 439238 <argp_parse@@Base+0xa57c>
  439230:	mov	w8, #0x22                  	// #34
  439234:	strb	w8, [x21]
  439238:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x16808>
  43923c:	add	x8, x8, #0xb08
  439240:	stur	x8, [x29, #-64]
  439244:	mov	w8, #0x1                   	// #1
  439248:	mov	w20, #0x1                   	// #1
  43924c:	mov	w4, #0x5                   	// #5
  439250:	stur	x8, [x29, #-32]
  439254:	mov	w9, #0x1                   	// #1
  439258:	b	43896c <argp_parse@@Base+0x9cb0>
  43925c:	mov	w9, #0x1                   	// #1
  439260:	mov	w16, wzr
  439264:	cbz	x22, 439270 <argp_parse@@Base+0xa5b4>
  439268:	mov	w8, #0x27                  	// #39
  43926c:	strb	w8, [x21]
  439270:	adrp	x8, 451000 <_obstack_memory_used@@Base+0x15808>
  439274:	add	x8, x8, #0xf3c
  439278:	stur	x8, [x29, #-64]
  43927c:	mov	w8, #0x1                   	// #1
  439280:	mov	w4, #0x2                   	// #2
  439284:	mov	w20, #0x1                   	// #1
  439288:	stur	x8, [x29, #-32]
  43928c:	b	43896c <argp_parse@@Base+0x9cb0>
  439290:	ldur	w10, [x29, #-72]
  439294:	tst	w10, #0x1
  439298:	mov	w8, #0x2                   	// #2
  43929c:	mov	w9, #0x4                   	// #4
  4392a0:	csel	w8, w9, w8, ne  // ne = any
  4392a4:	cmp	w4, #0x2
  4392a8:	b.ne	4392b0 <argp_parse@@Base+0xa5f4>  // b.any
  4392ac:	mov	w4, w8
  4392b0:	ldr	x7, [sp, #88]
  4392b4:	b	4392e0 <argp_parse@@Base+0xa624>
  4392b8:	ldr	x7, [sp, #88]
  4392bc:	ldur	w4, [x29, #-44]
  4392c0:	b	4392e0 <argp_parse@@Base+0xa624>
  4392c4:	ldur	w8, [x29, #-72]
  4392c8:	ldr	x7, [sp, #88]
  4392cc:	ldur	x24, [x29, #-80]
  4392d0:	mov	w9, #0x4                   	// #4
  4392d4:	tst	w8, #0x1
  4392d8:	mov	w8, #0x2                   	// #2
  4392dc:	csel	w4, w9, w8, ne  // ne = any
  4392e0:	ldr	w8, [sp, #80]
  4392e4:	mov	x0, x21
  4392e8:	mov	x1, x22
  4392ec:	mov	x2, x24
  4392f0:	and	w5, w8, #0xfffffffd
  4392f4:	ldur	x8, [x29, #-88]
  4392f8:	mov	x3, x28
  4392fc:	mov	x6, xzr
  439300:	str	x8, [sp]
  439304:	bl	43878c <argp_parse@@Base+0x9ad0>
  439308:	mov	x20, x0
  43930c:	mov	x0, x20
  439310:	ldp	x20, x19, [sp, #272]
  439314:	ldp	x22, x21, [sp, #256]
  439318:	ldp	x24, x23, [sp, #240]
  43931c:	ldp	x26, x25, [sp, #224]
  439320:	ldp	x28, x27, [sp, #208]
  439324:	ldp	x29, x30, [sp, #192]
  439328:	add	sp, sp, #0x120
  43932c:	ret
  439330:	ldur	x8, [x29, #-88]
  439334:	ldr	x1, [sp, #64]
  439338:	ldur	x2, [x29, #-80]
  43933c:	ldr	w5, [sp, #80]
  439340:	ldur	x6, [x29, #-40]
  439344:	ldr	x7, [sp, #88]
  439348:	mov	w4, #0x5                   	// #5
  43934c:	str	x8, [sp]
  439350:	mov	x0, x21
  439354:	mov	x3, x28
  439358:	b	439304 <argp_parse@@Base+0xa648>
  43935c:	mov	w16, w19
  439360:	ldur	x8, [x29, #-64]
  439364:	cbz	x8, 439390 <argp_parse@@Base+0xa6d4>
  439368:	tbnz	w16, #0, 439390 <argp_parse@@Base+0xa6d4>
  43936c:	ldrb	w9, [x8]
  439370:	cbz	w9, 439390 <argp_parse@@Base+0xa6d4>
  439374:	add	x8, x8, #0x1
  439378:	cmp	x20, x22
  43937c:	b.cs	439384 <argp_parse@@Base+0xa6c8>  // b.hs, b.nlast
  439380:	strb	w9, [x21, x20]
  439384:	ldrb	w9, [x8], #1
  439388:	add	x20, x20, #0x1
  43938c:	cbnz	w9, 439378 <argp_parse@@Base+0xa6bc>
  439390:	cmp	x20, x22
  439394:	b.cs	43930c <argp_parse@@Base+0xa650>  // b.hs, b.nlast
  439398:	strb	wzr, [x21, x20]
  43939c:	b	43930c <argp_parse@@Base+0xa650>
  4393a0:	b.ne	4392b0 <argp_parse@@Base+0xa5f4>  // b.any
  4393a4:	mov	w4, #0x4                   	// #4
  4393a8:	b	4392b0 <argp_parse@@Base+0xa5f4>
  4393ac:	bl	404850 <abort@plt>
  4393b0:	mov	x3, x2
  4393b4:	mov	x2, xzr
  4393b8:	b	4393bc <argp_parse@@Base+0xa700>
  4393bc:	sub	sp, sp, #0x70
  4393c0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4393c4:	add	x8, x8, #0xbe0
  4393c8:	cmp	x3, #0x0
  4393cc:	stp	x29, x30, [sp, #16]
  4393d0:	stp	x28, x27, [sp, #32]
  4393d4:	stp	x26, x25, [sp, #48]
  4393d8:	stp	x24, x23, [sp, #64]
  4393dc:	stp	x22, x21, [sp, #80]
  4393e0:	stp	x20, x19, [sp, #96]
  4393e4:	add	x29, sp, #0x10
  4393e8:	mov	x19, x2
  4393ec:	mov	x22, x1
  4393f0:	mov	x23, x0
  4393f4:	csel	x21, x8, x3, eq  // eq = none
  4393f8:	bl	404ce0 <__errno_location@plt>
  4393fc:	ldp	w4, w8, [x21]
  439400:	cmp	x19, #0x0
  439404:	ldp	x7, x9, [x21, #40]
  439408:	ldr	w28, [x0]
  43940c:	cset	w10, eq  // eq = none
  439410:	orr	w25, w8, w10
  439414:	add	x26, x21, #0x8
  439418:	mov	x24, x0
  43941c:	mov	x0, xzr
  439420:	mov	x1, xzr
  439424:	mov	x2, x23
  439428:	mov	x3, x22
  43942c:	mov	w5, w25
  439430:	mov	x6, x26
  439434:	str	x9, [sp]
  439438:	bl	43878c <argp_parse@@Base+0x9ad0>
  43943c:	add	x27, x0, #0x1
  439440:	mov	x20, x0
  439444:	mov	x0, x27
  439448:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  43944c:	ldr	w4, [x21]
  439450:	ldp	x7, x8, [x21, #40]
  439454:	mov	x1, x27
  439458:	mov	x2, x23
  43945c:	mov	x3, x22
  439460:	mov	w5, w25
  439464:	mov	x6, x26
  439468:	mov	x21, x0
  43946c:	str	x8, [sp]
  439470:	bl	43878c <argp_parse@@Base+0x9ad0>
  439474:	str	w28, [x24]
  439478:	cbz	x19, 439480 <argp_parse@@Base+0xa7c4>
  43947c:	str	x20, [x19]
  439480:	mov	x0, x21
  439484:	ldp	x20, x19, [sp, #96]
  439488:	ldp	x22, x21, [sp, #80]
  43948c:	ldp	x24, x23, [sp, #64]
  439490:	ldp	x26, x25, [sp, #48]
  439494:	ldp	x28, x27, [sp, #32]
  439498:	ldp	x29, x30, [sp, #16]
  43949c:	add	sp, sp, #0x70
  4394a0:	ret
  4394a4:	stp	x29, x30, [sp, #-64]!
  4394a8:	stp	x20, x19, [sp, #48]
  4394ac:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4394b0:	stp	x22, x21, [sp, #32]
  4394b4:	ldr	w8, [x20, #512]
  4394b8:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4394bc:	ldr	x19, [x21, #504]
  4394c0:	str	x23, [sp, #16]
  4394c4:	cmp	w8, #0x2
  4394c8:	mov	x29, sp
  4394cc:	b.lt	4394f0 <argp_parse@@Base+0xa834>  // b.tstop
  4394d0:	add	x22, x19, #0x18
  4394d4:	mov	w23, #0x1                   	// #1
  4394d8:	ldr	x0, [x22], #16
  4394dc:	bl	4049b0 <free@plt>
  4394e0:	ldrsw	x8, [x20, #512]
  4394e4:	add	x23, x23, #0x1
  4394e8:	cmp	x23, x8
  4394ec:	b.lt	4394d8 <argp_parse@@Base+0xa81c>  // b.tstop
  4394f0:	ldr	x0, [x19, #8]
  4394f4:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4394f8:	add	x23, x23, #0xc18
  4394fc:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  439500:	cmp	x0, x23
  439504:	add	x22, x22, #0x208
  439508:	b.eq	439518 <argp_parse@@Base+0xa85c>  // b.none
  43950c:	bl	4049b0 <free@plt>
  439510:	mov	w8, #0x100                 	// #256
  439514:	stp	x8, x23, [x22]
  439518:	cmp	x19, x22
  43951c:	b.eq	43952c <argp_parse@@Base+0xa870>  // b.none
  439520:	mov	x0, x19
  439524:	bl	4049b0 <free@plt>
  439528:	str	x22, [x21, #504]
  43952c:	mov	w8, #0x1                   	// #1
  439530:	str	w8, [x20, #512]
  439534:	ldp	x20, x19, [sp, #48]
  439538:	ldp	x22, x21, [sp, #32]
  43953c:	ldr	x23, [sp, #16]
  439540:	ldp	x29, x30, [sp], #64
  439544:	ret
  439548:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x2e808>
  43954c:	add	x3, x3, #0xbe0
  439550:	mov	x2, #0xffffffffffffffff    	// #-1
  439554:	b	439558 <argp_parse@@Base+0xa89c>
  439558:	sub	sp, sp, #0x80
  43955c:	stp	x29, x30, [sp, #32]
  439560:	add	x29, sp, #0x20
  439564:	stp	x28, x27, [sp, #48]
  439568:	stp	x26, x25, [sp, #64]
  43956c:	stp	x24, x23, [sp, #80]
  439570:	stp	x22, x21, [sp, #96]
  439574:	stp	x20, x19, [sp, #112]
  439578:	mov	x22, x3
  43957c:	stur	x2, [x29, #-8]
  439580:	mov	x21, x1
  439584:	mov	w23, w0
  439588:	bl	404ce0 <__errno_location@plt>
  43958c:	tbnz	w23, #31, 4396dc <argp_parse@@Base+0xaa20>
  439590:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x2e808>
  439594:	ldr	w8, [x25, #512]
  439598:	adrp	x28, 46a000 <_obstack_memory_used@@Base+0x2e808>
  43959c:	ldr	w20, [x0]
  4395a0:	ldr	x27, [x28, #504]
  4395a4:	mov	x19, x0
  4395a8:	cmp	w8, w23
  4395ac:	b.gt	439618 <argp_parse@@Base+0xa95c>
  4395b0:	mov	w8, #0x7fffffff            	// #2147483647
  4395b4:	cmp	w23, w8
  4395b8:	stur	w20, [x29, #-12]
  4395bc:	b.eq	4396e0 <argp_parse@@Base+0xaa24>  // b.none
  4395c0:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4395c4:	add	x20, x20, #0x208
  4395c8:	add	w26, w23, #0x1
  4395cc:	cmp	x27, x20
  4395d0:	csel	x0, xzr, x27, eq  // eq = none
  4395d4:	sbfiz	x1, x26, #4, #32
  4395d8:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  4395dc:	mov	x24, x0
  4395e0:	cmp	x27, x20
  4395e4:	str	x0, [x28, #504]
  4395e8:	b.ne	4395f4 <argp_parse@@Base+0xa938>  // b.any
  4395ec:	ldr	q0, [x20]
  4395f0:	str	q0, [x24]
  4395f4:	ldrsw	x8, [x25, #512]
  4395f8:	mov	w1, wzr
  4395fc:	add	x0, x24, x8, lsl #4
  439600:	sub	w8, w26, w8
  439604:	sbfiz	x2, x8, #4, #32
  439608:	bl	4045e0 <memset@plt>
  43960c:	ldur	w20, [x29, #-12]
  439610:	mov	x27, x24
  439614:	str	w26, [x25, #512]
  439618:	add	x28, x27, w23, uxtw #4
  43961c:	mov	x27, x28
  439620:	ldr	x26, [x28]
  439624:	ldr	x23, [x27, #8]!
  439628:	ldp	w4, w8, [x22]
  43962c:	ldp	x7, x9, [x22, #40]
  439630:	ldur	x3, [x29, #-8]
  439634:	add	x24, x22, #0x8
  439638:	orr	w25, w8, #0x1
  43963c:	mov	x0, x23
  439640:	mov	x1, x26
  439644:	mov	x2, x21
  439648:	mov	w5, w25
  43964c:	mov	x6, x24
  439650:	str	x9, [sp]
  439654:	bl	43878c <argp_parse@@Base+0x9ad0>
  439658:	cmp	x26, x0
  43965c:	b.hi	4396b4 <argp_parse@@Base+0xa9f8>  // b.pmore
  439660:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  439664:	add	x8, x8, #0xc18
  439668:	add	x26, x0, #0x1
  43966c:	cmp	x23, x8
  439670:	str	x26, [x28]
  439674:	b.eq	439680 <argp_parse@@Base+0xa9c4>  // b.none
  439678:	mov	x0, x23
  43967c:	bl	4049b0 <free@plt>
  439680:	mov	x0, x26
  439684:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  439688:	str	x0, [x27]
  43968c:	ldr	w4, [x22]
  439690:	ldp	x7, x8, [x22, #40]
  439694:	ldur	x3, [x29, #-8]
  439698:	mov	x1, x26
  43969c:	mov	x2, x21
  4396a0:	mov	w5, w25
  4396a4:	mov	x6, x24
  4396a8:	mov	x23, x0
  4396ac:	str	x8, [sp]
  4396b0:	bl	43878c <argp_parse@@Base+0x9ad0>
  4396b4:	str	w20, [x19]
  4396b8:	mov	x0, x23
  4396bc:	ldp	x20, x19, [sp, #112]
  4396c0:	ldp	x22, x21, [sp, #96]
  4396c4:	ldp	x24, x23, [sp, #80]
  4396c8:	ldp	x26, x25, [sp, #64]
  4396cc:	ldp	x28, x27, [sp, #48]
  4396d0:	ldp	x29, x30, [sp, #32]
  4396d4:	add	sp, sp, #0x80
  4396d8:	ret
  4396dc:	bl	404850 <abort@plt>
  4396e0:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  4396e4:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4396e8:	add	x3, x3, #0xbe0
  4396ec:	b	439558 <argp_parse@@Base+0xa89c>
  4396f0:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4396f4:	add	x3, x3, #0xbe0
  4396f8:	mov	x2, #0xffffffffffffffff    	// #-1
  4396fc:	mov	x1, x0
  439700:	mov	w0, wzr
  439704:	b	439558 <argp_parse@@Base+0xa89c>
  439708:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x2e808>
  43970c:	mov	x2, x1
  439710:	add	x3, x3, #0xbe0
  439714:	mov	x1, x0
  439718:	mov	w0, wzr
  43971c:	b	439558 <argp_parse@@Base+0xa89c>
  439720:	sub	sp, sp, #0x50
  439724:	movi	v0.2d, #0x0
  439728:	cmp	w1, #0xa
  43972c:	stp	x29, x30, [sp, #64]
  439730:	add	x29, sp, #0x40
  439734:	str	xzr, [sp, #48]
  439738:	stp	q0, q0, [sp, #16]
  43973c:	str	q0, [sp]
  439740:	b.eq	439768 <argp_parse@@Base+0xaaac>  // b.none
  439744:	mov	x8, x2
  439748:	str	w1, [sp]
  43974c:	mov	x3, sp
  439750:	mov	x2, #0xffffffffffffffff    	// #-1
  439754:	mov	x1, x8
  439758:	bl	439558 <argp_parse@@Base+0xa89c>
  43975c:	ldp	x29, x30, [sp, #64]
  439760:	add	sp, sp, #0x50
  439764:	ret
  439768:	bl	404850 <abort@plt>
  43976c:	sub	sp, sp, #0x50
  439770:	movi	v0.2d, #0x0
  439774:	cmp	w1, #0xa
  439778:	stp	x29, x30, [sp, #64]
  43977c:	add	x29, sp, #0x40
  439780:	str	xzr, [sp, #48]
  439784:	stp	q0, q0, [sp, #16]
  439788:	str	q0, [sp]
  43978c:	b.eq	4397b4 <argp_parse@@Base+0xaaf8>  // b.none
  439790:	mov	x8, x3
  439794:	str	w1, [sp]
  439798:	mov	x3, sp
  43979c:	mov	x1, x2
  4397a0:	mov	x2, x8
  4397a4:	bl	439558 <argp_parse@@Base+0xa89c>
  4397a8:	ldp	x29, x30, [sp, #64]
  4397ac:	add	sp, sp, #0x50
  4397b0:	ret
  4397b4:	bl	404850 <abort@plt>
  4397b8:	mov	x2, x1
  4397bc:	mov	w1, w0
  4397c0:	mov	w0, wzr
  4397c4:	b	439720 <argp_parse@@Base+0xaa64>
  4397c8:	mov	x3, x2
  4397cc:	mov	x2, x1
  4397d0:	mov	w1, w0
  4397d4:	mov	w0, wzr
  4397d8:	b	43976c <argp_parse@@Base+0xaab0>
  4397dc:	sub	sp, sp, #0x50
  4397e0:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4397e4:	add	x9, x9, #0xbe0
  4397e8:	ldp	q0, q1, [x9]
  4397ec:	ubfx	w10, w2, #5, #3
  4397f0:	mov	x11, sp
  4397f4:	mov	x8, x1
  4397f8:	stp	q0, q1, [sp]
  4397fc:	ldr	q0, [x9, #32]
  439800:	ldr	x9, [x9, #48]
  439804:	mov	x1, x0
  439808:	mov	x3, sp
  43980c:	str	q0, [sp, #32]
  439810:	str	x9, [sp, #48]
  439814:	add	x9, x11, w10, uxtw #2
  439818:	ldr	w10, [x9, #8]
  43981c:	mov	w0, wzr
  439820:	stp	x29, x30, [sp, #64]
  439824:	add	x29, sp, #0x40
  439828:	lsr	w11, w10, w2
  43982c:	mvn	w11, w11
  439830:	and	w11, w11, #0x1
  439834:	lsl	w11, w11, w2
  439838:	eor	w10, w11, w10
  43983c:	mov	x2, x8
  439840:	str	w10, [x9, #8]
  439844:	bl	439558 <argp_parse@@Base+0xa89c>
  439848:	ldp	x29, x30, [sp, #64]
  43984c:	add	sp, sp, #0x50
  439850:	ret
  439854:	sub	sp, sp, #0x50
  439858:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  43985c:	add	x9, x9, #0xbe0
  439860:	ldp	q0, q1, [x9]
  439864:	ubfx	w10, w1, #5, #3
  439868:	mov	x11, sp
  43986c:	mov	x8, x0
  439870:	stp	q0, q1, [sp]
  439874:	ldr	q0, [x9, #32]
  439878:	ldr	x9, [x9, #48]
  43987c:	mov	x3, sp
  439880:	mov	x2, #0xffffffffffffffff    	// #-1
  439884:	str	q0, [sp, #32]
  439888:	str	x9, [sp, #48]
  43988c:	add	x9, x11, w10, uxtw #2
  439890:	ldr	w10, [x9, #8]
  439894:	mov	w0, wzr
  439898:	stp	x29, x30, [sp, #64]
  43989c:	add	x29, sp, #0x40
  4398a0:	lsr	w11, w10, w1
  4398a4:	mvn	w11, w11
  4398a8:	and	w11, w11, #0x1
  4398ac:	lsl	w11, w11, w1
  4398b0:	eor	w10, w11, w10
  4398b4:	mov	x1, x8
  4398b8:	str	w10, [x9, #8]
  4398bc:	bl	439558 <argp_parse@@Base+0xa89c>
  4398c0:	ldp	x29, x30, [sp, #64]
  4398c4:	add	sp, sp, #0x50
  4398c8:	ret
  4398cc:	sub	sp, sp, #0x50
  4398d0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4398d4:	add	x8, x8, #0xbe0
  4398d8:	ldp	q0, q1, [x8]
  4398dc:	ldr	q2, [x8, #32]
  4398e0:	ldr	x8, [x8, #48]
  4398e4:	mov	x1, x0
  4398e8:	stp	q0, q1, [sp]
  4398ec:	ldr	w9, [sp, #12]
  4398f0:	str	x8, [sp, #48]
  4398f4:	mov	x3, sp
  4398f8:	mov	x2, #0xffffffffffffffff    	// #-1
  4398fc:	orr	w8, w9, #0x4000000
  439900:	mov	w0, wzr
  439904:	stp	x29, x30, [sp, #64]
  439908:	add	x29, sp, #0x40
  43990c:	str	q2, [sp, #32]
  439910:	str	w8, [sp, #12]
  439914:	bl	439558 <argp_parse@@Base+0xa89c>
  439918:	ldp	x29, x30, [sp, #64]
  43991c:	add	sp, sp, #0x50
  439920:	ret
  439924:	sub	sp, sp, #0x50
  439928:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  43992c:	add	x8, x8, #0xbe0
  439930:	ldp	q0, q1, [x8]
  439934:	ldr	q2, [x8, #32]
  439938:	ldr	x8, [x8, #48]
  43993c:	mov	x2, x1
  439940:	stp	q0, q1, [sp]
  439944:	ldr	w9, [sp, #12]
  439948:	mov	x1, x0
  43994c:	str	x8, [sp, #48]
  439950:	mov	x3, sp
  439954:	orr	w8, w9, #0x4000000
  439958:	mov	w0, wzr
  43995c:	stp	x29, x30, [sp, #64]
  439960:	add	x29, sp, #0x40
  439964:	str	q2, [sp, #32]
  439968:	str	w8, [sp, #12]
  43996c:	bl	439558 <argp_parse@@Base+0xa89c>
  439970:	ldp	x29, x30, [sp, #64]
  439974:	add	sp, sp, #0x50
  439978:	ret
  43997c:	sub	sp, sp, #0x80
  439980:	movi	v0.2d, #0x0
  439984:	cmp	w1, #0xa
  439988:	stp	x29, x30, [sp, #112]
  43998c:	add	x29, sp, #0x70
  439990:	str	wzr, [sp, #48]
  439994:	stp	q0, q0, [sp, #16]
  439998:	str	q0, [sp]
  43999c:	b.eq	4399ec <argp_parse@@Base+0xad30>  // b.none
  4399a0:	ldp	q0, q1, [sp]
  4399a4:	ldr	w9, [sp, #48]
  4399a8:	ldr	q2, [sp, #32]
  4399ac:	mov	x8, x2
  4399b0:	stur	q0, [sp, #60]
  4399b4:	ldr	w10, [sp, #68]
  4399b8:	str	w1, [sp, #56]
  4399bc:	str	w9, [sp, #108]
  4399c0:	add	x3, sp, #0x38
  4399c4:	orr	w9, w10, #0x4000000
  4399c8:	mov	x2, #0xffffffffffffffff    	// #-1
  4399cc:	mov	x1, x8
  4399d0:	stur	q1, [sp, #76]
  4399d4:	stur	q2, [sp, #92]
  4399d8:	str	w9, [sp, #68]
  4399dc:	bl	439558 <argp_parse@@Base+0xa89c>
  4399e0:	ldp	x29, x30, [sp, #112]
  4399e4:	add	sp, sp, #0x80
  4399e8:	ret
  4399ec:	bl	404850 <abort@plt>
  4399f0:	mov	x4, #0xffffffffffffffff    	// #-1
  4399f4:	b	4399f8 <argp_parse@@Base+0xad3c>
  4399f8:	sub	sp, sp, #0x50
  4399fc:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x2e808>
  439a00:	add	x9, x9, #0xbe0
  439a04:	ldp	q0, q1, [x9]
  439a08:	ldr	x10, [x9, #48]
  439a0c:	stp	x29, x30, [sp, #64]
  439a10:	add	x29, sp, #0x40
  439a14:	stp	q0, q1, [sp]
  439a18:	ldr	q0, [x9, #32]
  439a1c:	mov	w9, #0xa                   	// #10
  439a20:	str	x10, [sp, #48]
  439a24:	str	w9, [sp]
  439a28:	str	q0, [sp, #32]
  439a2c:	cbz	x1, 439a58 <argp_parse@@Base+0xad9c>
  439a30:	cbz	x2, 439a58 <argp_parse@@Base+0xad9c>
  439a34:	mov	x8, x3
  439a38:	stp	x1, x2, [sp, #40]
  439a3c:	mov	x3, sp
  439a40:	mov	x1, x8
  439a44:	mov	x2, x4
  439a48:	bl	439558 <argp_parse@@Base+0xa89c>
  439a4c:	ldp	x29, x30, [sp, #64]
  439a50:	add	sp, sp, #0x50
  439a54:	ret
  439a58:	bl	404850 <abort@plt>
  439a5c:	mov	x3, x2
  439a60:	mov	x2, x1
  439a64:	mov	x4, #0xffffffffffffffff    	// #-1
  439a68:	mov	x1, x0
  439a6c:	mov	w0, wzr
  439a70:	b	4399f8 <argp_parse@@Base+0xad3c>
  439a74:	mov	x4, x3
  439a78:	mov	x3, x2
  439a7c:	mov	x2, x1
  439a80:	mov	x1, x0
  439a84:	mov	w0, wzr
  439a88:	b	4399f8 <argp_parse@@Base+0xad3c>
  439a8c:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x2e808>
  439a90:	add	x3, x3, #0x218
  439a94:	b	439558 <argp_parse@@Base+0xa89c>
  439a98:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x2e808>
  439a9c:	mov	x2, x1
  439aa0:	add	x3, x3, #0x218
  439aa4:	mov	x1, x0
  439aa8:	mov	w0, wzr
  439aac:	b	439558 <argp_parse@@Base+0xa89c>
  439ab0:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x2e808>
  439ab4:	add	x3, x3, #0x218
  439ab8:	mov	x2, #0xffffffffffffffff    	// #-1
  439abc:	b	439558 <argp_parse@@Base+0xa89c>
  439ac0:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x2e808>
  439ac4:	add	x3, x3, #0x218
  439ac8:	mov	x2, #0xffffffffffffffff    	// #-1
  439acc:	mov	x1, x0
  439ad0:	mov	w0, wzr
  439ad4:	b	439558 <argp_parse@@Base+0xa89c>
  439ad8:	stp	x29, x30, [sp, #-32]!
  439adc:	stp	x20, x19, [sp, #16]
  439ae0:	mov	x20, x0
  439ae4:	mov	w19, w1
  439ae8:	mov	w2, #0x5                   	// #5
  439aec:	mov	x0, xzr
  439af0:	mov	x1, x20
  439af4:	mov	x29, sp
  439af8:	bl	404bd0 <dcgettext@plt>
  439afc:	cmp	x0, x20
  439b00:	b.ne	439be4 <argp_parse@@Base+0xaf28>  // b.any
  439b04:	bl	434054 <argp_parse@@Base+0x5398>
  439b08:	ldrb	w8, [x0]
  439b0c:	and	w8, w8, #0xffffffdf
  439b10:	cmp	w8, #0x47
  439b14:	b.eq	439b78 <argp_parse@@Base+0xaebc>  // b.none
  439b18:	cmp	w8, #0x55
  439b1c:	b.ne	439bcc <argp_parse@@Base+0xaf10>  // b.any
  439b20:	ldrb	w8, [x0, #1]
  439b24:	and	w8, w8, #0xffffffdf
  439b28:	cmp	w8, #0x54
  439b2c:	b.ne	439bcc <argp_parse@@Base+0xaf10>  // b.any
  439b30:	ldrb	w8, [x0, #2]
  439b34:	and	w8, w8, #0xffffffdf
  439b38:	cmp	w8, #0x46
  439b3c:	b.ne	439bcc <argp_parse@@Base+0xaf10>  // b.any
  439b40:	ldrb	w8, [x0, #3]
  439b44:	cmp	w8, #0x2d
  439b48:	b.ne	439bcc <argp_parse@@Base+0xaf10>  // b.any
  439b4c:	ldrb	w8, [x0, #4]
  439b50:	cmp	w8, #0x38
  439b54:	b.ne	439bcc <argp_parse@@Base+0xaf10>  // b.any
  439b58:	ldrb	w8, [x0, #5]
  439b5c:	cbnz	w8, 439bcc <argp_parse@@Base+0xaf10>
  439b60:	ldrb	w8, [x20]
  439b64:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x19808>
  439b68:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x19808>
  439b6c:	add	x9, x9, #0x504
  439b70:	add	x10, x10, #0x500
  439b74:	b	439c04 <argp_parse@@Base+0xaf48>
  439b78:	ldrb	w8, [x0, #1]
  439b7c:	and	w8, w8, #0xffffffdf
  439b80:	cmp	w8, #0x42
  439b84:	b.ne	439bcc <argp_parse@@Base+0xaf10>  // b.any
  439b88:	ldrb	w8, [x0, #2]
  439b8c:	cmp	w8, #0x31
  439b90:	b.ne	439bcc <argp_parse@@Base+0xaf10>  // b.any
  439b94:	ldrb	w8, [x0, #3]
  439b98:	cmp	w8, #0x38
  439b9c:	b.ne	439bcc <argp_parse@@Base+0xaf10>  // b.any
  439ba0:	ldrb	w8, [x0, #4]
  439ba4:	cmp	w8, #0x30
  439ba8:	b.ne	439bcc <argp_parse@@Base+0xaf10>  // b.any
  439bac:	ldrb	w8, [x0, #5]
  439bb0:	cmp	w8, #0x33
  439bb4:	b.ne	439bcc <argp_parse@@Base+0xaf10>  // b.any
  439bb8:	ldrb	w8, [x0, #6]
  439bbc:	cmp	w8, #0x30
  439bc0:	b.ne	439bcc <argp_parse@@Base+0xaf10>  // b.any
  439bc4:	ldrb	w8, [x0, #7]
  439bc8:	cbz	w8, 439bf0 <argp_parse@@Base+0xaf34>
  439bcc:	adrp	x8, 451000 <_obstack_memory_used@@Base+0x15808>
  439bd0:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x16808>
  439bd4:	add	x8, x8, #0xf3c
  439bd8:	add	x9, x9, #0xb08
  439bdc:	cmp	w19, #0x9
  439be0:	csel	x0, x9, x8, eq  // eq = none
  439be4:	ldp	x20, x19, [sp, #16]
  439be8:	ldp	x29, x30, [sp], #32
  439bec:	ret
  439bf0:	ldrb	w8, [x20]
  439bf4:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x19808>
  439bf8:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x19808>
  439bfc:	add	x9, x9, #0x50c
  439c00:	add	x10, x10, #0x508
  439c04:	cmp	w8, #0x60
  439c08:	csel	x0, x10, x9, eq  // eq = none
  439c0c:	b	439be4 <argp_parse@@Base+0xaf28>
  439c10:	sub	sp, sp, #0x150
  439c14:	stp	x29, x30, [sp, #256]
  439c18:	stp	x28, x25, [sp, #272]
  439c1c:	stp	x24, x23, [sp, #288]
  439c20:	stp	x22, x21, [sp, #304]
  439c24:	stp	x20, x19, [sp, #320]
  439c28:	add	x29, sp, #0x100
  439c2c:	mov	w25, w4
  439c30:	mov	x19, x3
  439c34:	mov	w20, w2
  439c38:	mov	x21, x1
  439c3c:	mov	w22, w0
  439c40:	bl	4049d0 <renameat2@plt>
  439c44:	mov	w24, w0
  439c48:	bl	404ce0 <__errno_location@plt>
  439c4c:	tbz	w24, #31, 439da4 <argp_parse@@Base+0xb0e8>
  439c50:	ldr	w8, [x0]
  439c54:	mov	x23, x0
  439c58:	cmp	w8, #0x16
  439c5c:	b.eq	439c70 <argp_parse@@Base+0xafb4>  // b.none
  439c60:	cmp	w8, #0x5f
  439c64:	b.eq	439c70 <argp_parse@@Base+0xafb4>  // b.none
  439c68:	cmp	w8, #0x26
  439c6c:	b.ne	439da4 <argp_parse@@Base+0xb0e8>  // b.any
  439c70:	cbz	w25, 439cc4 <argp_parse@@Base+0xb008>
  439c74:	cmp	w25, #0x1
  439c78:	b.ne	439cb0 <argp_parse@@Base+0xaff4>  // b.any
  439c7c:	mov	x2, sp
  439c80:	mov	w3, #0x100                 	// #256
  439c84:	mov	w0, w20
  439c88:	mov	x1, x19
  439c8c:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  439c90:	cbz	w0, 439ca8 <argp_parse@@Base+0xafec>
  439c94:	ldr	w8, [x23]
  439c98:	cmp	w8, #0x2
  439c9c:	b.eq	439cc0 <argp_parse@@Base+0xb004>  // b.none
  439ca0:	cmp	w8, #0x4b
  439ca4:	b.ne	439cb8 <argp_parse@@Base+0xaffc>  // b.any
  439ca8:	mov	w8, #0x11                  	// #17
  439cac:	b	439cb4 <argp_parse@@Base+0xaff8>
  439cb0:	mov	w8, #0x5f                  	// #95
  439cb4:	str	w8, [x23]
  439cb8:	mov	w24, #0xffffffff            	// #-1
  439cbc:	b	439da4 <argp_parse@@Base+0xb0e8>
  439cc0:	mov	w25, #0x1                   	// #1
  439cc4:	mov	x0, x21
  439cc8:	bl	404170 <strlen@plt>
  439ccc:	mov	x24, x0
  439cd0:	mov	x0, x19
  439cd4:	bl	404170 <strlen@plt>
  439cd8:	cbz	x24, 439d8c <argp_parse@@Base+0xb0d0>
  439cdc:	cbz	x0, 439d8c <argp_parse@@Base+0xb0d0>
  439ce0:	add	x8, x24, x21
  439ce4:	ldurb	w8, [x8, #-1]
  439ce8:	cmp	w8, #0x2f
  439cec:	b.eq	439d00 <argp_parse@@Base+0xb044>  // b.none
  439cf0:	add	x8, x0, x19
  439cf4:	ldurb	w8, [x8, #-1]
  439cf8:	cmp	w8, #0x2f
  439cfc:	b.ne	439d8c <argp_parse@@Base+0xb0d0>  // b.any
  439d00:	add	x2, sp, #0x80
  439d04:	mov	w3, #0x100                 	// #256
  439d08:	mov	w0, w22
  439d0c:	mov	x1, x21
  439d10:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  439d14:	cbnz	w0, 439cb8 <argp_parse@@Base+0xaffc>
  439d18:	cbz	w25, 439d34 <argp_parse@@Base+0xb078>
  439d1c:	ldr	w8, [sp, #144]
  439d20:	and	w8, w8, #0xf000
  439d24:	cmp	w8, #0x4, lsl #12
  439d28:	b.eq	439d8c <argp_parse@@Base+0xb0d0>  // b.none
  439d2c:	mov	w8, #0x2                   	// #2
  439d30:	b	439cb4 <argp_parse@@Base+0xaff8>
  439d34:	mov	x2, sp
  439d38:	mov	w3, #0x100                 	// #256
  439d3c:	mov	w0, w20
  439d40:	mov	x1, x19
  439d44:	bl	44b948 <_obstack_memory_used@@Base+0x10150>
  439d48:	cbz	w0, 439d6c <argp_parse@@Base+0xb0b0>
  439d4c:	ldr	w8, [x23]
  439d50:	cmp	w8, #0x2
  439d54:	b.ne	439cb8 <argp_parse@@Base+0xaffc>  // b.any
  439d58:	ldr	w8, [sp, #144]
  439d5c:	and	w8, w8, #0xf000
  439d60:	cmp	w8, #0x4, lsl #12
  439d64:	b.ne	439cb8 <argp_parse@@Base+0xaffc>  // b.any
  439d68:	b	439d8c <argp_parse@@Base+0xb0d0>
  439d6c:	ldr	w8, [sp, #16]
  439d70:	and	w8, w8, #0xf000
  439d74:	cmp	w8, #0x4, lsl #12
  439d78:	b.ne	439dc4 <argp_parse@@Base+0xb108>  // b.any
  439d7c:	ldr	w8, [sp, #144]
  439d80:	and	w8, w8, #0xf000
  439d84:	cmp	w8, #0x4, lsl #12
  439d88:	b.ne	439dcc <argp_parse@@Base+0xb110>  // b.any
  439d8c:	mov	w0, w22
  439d90:	mov	x1, x21
  439d94:	mov	w2, w20
  439d98:	mov	x3, x19
  439d9c:	bl	404a00 <renameat@plt>
  439da0:	mov	w24, w0
  439da4:	mov	w0, w24
  439da8:	ldp	x20, x19, [sp, #320]
  439dac:	ldp	x22, x21, [sp, #304]
  439db0:	ldp	x24, x23, [sp, #288]
  439db4:	ldp	x28, x25, [sp, #272]
  439db8:	ldp	x29, x30, [sp, #256]
  439dbc:	add	sp, sp, #0x150
  439dc0:	ret
  439dc4:	mov	w8, #0x14                  	// #20
  439dc8:	b	439cb4 <argp_parse@@Base+0xaff8>
  439dcc:	mov	w8, #0x15                  	// #21
  439dd0:	b	439cb4 <argp_parse@@Base+0xaff8>
  439dd4:	stp	x29, x30, [sp, #-64]!
  439dd8:	str	x23, [sp, #16]
  439ddc:	mov	w23, #0x1                   	// #1
  439de0:	stp	x22, x21, [sp, #32]
  439de4:	stp	x20, x19, [sp, #48]
  439de8:	mov	x21, x2
  439dec:	mov	x19, x1
  439df0:	mov	w20, w0
  439df4:	movk	w23, #0x7ff0, lsl #16
  439df8:	mov	x29, sp
  439dfc:	mov	w0, w20
  439e00:	mov	x1, x19
  439e04:	mov	x2, x21
  439e08:	bl	404b40 <read@plt>
  439e0c:	mov	x22, x0
  439e10:	tbz	x0, #63, 439e38 <argp_parse@@Base+0xb17c>
  439e14:	bl	404ce0 <__errno_location@plt>
  439e18:	ldr	w8, [x0]
  439e1c:	cmp	w8, #0x4
  439e20:	b.eq	439dfc <argp_parse@@Base+0xb140>  // b.none
  439e24:	cmp	x21, x23
  439e28:	b.cc	439e38 <argp_parse@@Base+0xb17c>  // b.lo, b.ul, b.last
  439e2c:	cmp	w8, #0x16
  439e30:	mov	w21, #0x7ff00000            	// #2146435072
  439e34:	b.eq	439dfc <argp_parse@@Base+0xb140>  // b.none
  439e38:	mov	x0, x22
  439e3c:	ldp	x20, x19, [sp, #48]
  439e40:	ldp	x22, x21, [sp, #32]
  439e44:	ldr	x23, [sp, #16]
  439e48:	ldp	x29, x30, [sp], #64
  439e4c:	ret
  439e50:	stp	x29, x30, [sp, #-64]!
  439e54:	str	x23, [sp, #16]
  439e58:	mov	w23, #0x1                   	// #1
  439e5c:	stp	x22, x21, [sp, #32]
  439e60:	stp	x20, x19, [sp, #48]
  439e64:	mov	x21, x2
  439e68:	mov	x19, x1
  439e6c:	mov	w20, w0
  439e70:	movk	w23, #0x7ff0, lsl #16
  439e74:	mov	x29, sp
  439e78:	mov	w0, w20
  439e7c:	mov	x1, x19
  439e80:	mov	x2, x21
  439e84:	bl	404810 <write@plt>
  439e88:	mov	x22, x0
  439e8c:	tbz	x0, #63, 439eb4 <argp_parse@@Base+0xb1f8>
  439e90:	bl	404ce0 <__errno_location@plt>
  439e94:	ldr	w8, [x0]
  439e98:	cmp	w8, #0x4
  439e9c:	b.eq	439e78 <argp_parse@@Base+0xb1bc>  // b.none
  439ea0:	cmp	x21, x23
  439ea4:	b.cc	439eb4 <argp_parse@@Base+0xb1f8>  // b.lo, b.ul, b.last
  439ea8:	cmp	w8, #0x16
  439eac:	mov	w21, #0x7ff00000            	// #2146435072
  439eb0:	b.eq	439e78 <argp_parse@@Base+0xb1bc>  // b.none
  439eb4:	mov	x0, x22
  439eb8:	ldp	x20, x19, [sp, #48]
  439ebc:	ldp	x22, x21, [sp, #32]
  439ec0:	ldr	x23, [sp, #16]
  439ec4:	ldp	x29, x30, [sp], #64
  439ec8:	ret
  439ecc:	stp	x29, x30, [sp, #-32]!
  439ed0:	str	x19, [sp, #16]
  439ed4:	mov	x19, x0
  439ed8:	str	xzr, [x0, #8]
  439edc:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x13808>
  439ee0:	add	x0, x0, #0x94a
  439ee4:	mov	w1, #0x80000               	// #524288
  439ee8:	mov	x29, sp
  439eec:	bl	447e2c <_obstack_memory_used@@Base+0xc634>
  439ef0:	str	w0, [x19]
  439ef4:	tbnz	w0, #31, 439f00 <argp_parse@@Base+0xb244>
  439ef8:	mov	w0, wzr
  439efc:	b	439f18 <argp_parse@@Base+0xb25c>
  439f00:	mov	x0, xzr
  439f04:	mov	x1, xzr
  439f08:	bl	404120 <getcwd@plt>
  439f0c:	cmp	x0, #0x0
  439f10:	str	x0, [x19, #8]
  439f14:	csetm	w0, eq  // eq = none
  439f18:	ldr	x19, [sp, #16]
  439f1c:	ldp	x29, x30, [sp], #32
  439f20:	ret
  439f24:	mov	x8, x0
  439f28:	ldr	w0, [x0]
  439f2c:	tbnz	w0, #31, 439f34 <argp_parse@@Base+0xb278>
  439f30:	b	4041e0 <fchdir@plt>
  439f34:	ldr	x0, [x8, #8]
  439f38:	b	43ae80 <argp_parse@@Base+0xc1c4>
  439f3c:	stp	x29, x30, [sp, #-32]!
  439f40:	str	x19, [sp, #16]
  439f44:	mov	x19, x0
  439f48:	ldr	w0, [x0]
  439f4c:	mov	x29, sp
  439f50:	tbnz	w0, #31, 439f58 <argp_parse@@Base+0xb29c>
  439f54:	bl	4047a0 <close@plt>
  439f58:	ldr	x0, [x19, #8]
  439f5c:	ldr	x19, [sp, #16]
  439f60:	ldp	x29, x30, [sp], #32
  439f64:	b	4049b0 <free@plt>
  439f68:	sub	sp, sp, #0x90
  439f6c:	stp	x29, x30, [sp, #48]
  439f70:	stp	x28, x27, [sp, #64]
  439f74:	stp	x26, x25, [sp, #80]
  439f78:	stp	x24, x23, [sp, #96]
  439f7c:	stp	x22, x21, [sp, #112]
  439f80:	stp	x20, x19, [sp, #128]
  439f84:	add	x29, sp, #0x30
  439f88:	cbz	x0, 43a12c <argp_parse@@Base+0xb470>
  439f8c:	mov	x24, x0
  439f90:	str	w1, [sp, #12]
  439f94:	mov	w22, w1
  439f98:	bl	404ce0 <__errno_location@plt>
  439f9c:	mov	x23, x0
  439fa0:	str	wzr, [x0]
  439fa4:	mov	x0, x24
  439fa8:	bl	404700 <readdir@plt>
  439fac:	str	x22, [sp, #16]
  439fb0:	cbz	x0, 43a134 <argp_parse@@Base+0xb478>
  439fb4:	mov	x28, x0
  439fb8:	mov	x19, xzr
  439fbc:	mov	x25, xzr
  439fc0:	mov	x21, xzr
  439fc4:	mov	x20, xzr
  439fc8:	sub	x22, x22, #0x1
  439fcc:	stp	xzr, xzr, [x29, #-16]
  439fd0:	str	x22, [sp, #24]
  439fd4:	mov	x27, x28
  439fd8:	ldrb	w8, [x27, #19]!
  439fdc:	cmp	w8, #0x2e
  439fe0:	b.ne	439ffc <argp_parse@@Base+0xb340>  // b.any
  439fe4:	ldrb	w8, [x28, #20]
  439fe8:	cmp	w8, #0x2e
  439fec:	mov	w8, #0x1                   	// #1
  439ff0:	cinc	x8, x8, eq  // eq = none
  439ff4:	add	x8, x28, x8
  439ff8:	ldrb	w8, [x8, #19]
  439ffc:	cbz	w8, 43a114 <argp_parse@@Base+0xb458>
  43a000:	mov	x0, x27
  43a004:	bl	404170 <strlen@plt>
  43a008:	cmp	x22, #0x1
  43a00c:	add	x26, x0, #0x1
  43a010:	b.hi	43a048 <argp_parse@@Base+0xb38c>  // b.pmore
  43a014:	ldur	x9, [x29, #-16]
  43a018:	cmp	x9, x21
  43a01c:	b.ne	43a07c <argp_parse@@Base+0xb3c0>  // b.any
  43a020:	ldur	x8, [x29, #-8]
  43a024:	cbz	x8, 43a088 <argp_parse@@Base+0xb3cc>
  43a028:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  43a02c:	movk	x8, #0x555, lsl #48
  43a030:	cmp	x9, x8
  43a034:	b.cs	43a24c <argp_parse@@Base+0xb590>  // b.hs, b.nlast
  43a038:	add	x8, x9, x9, lsr #1
  43a03c:	mov	x22, x19
  43a040:	add	x9, x8, #0x1
  43a044:	b	43a0ac <argp_parse@@Base+0xb3f0>
  43a048:	sub	x8, x25, x20
  43a04c:	cmp	x8, x26
  43a050:	b.hi	43a100 <argp_parse@@Base+0xb444>  // b.pmore
  43a054:	adds	x25, x26, x20
  43a058:	b.cs	43a24c <argp_parse@@Base+0xb590>  // b.hs, b.nlast
  43a05c:	cbz	x19, 43a09c <argp_parse@@Base+0xb3e0>
  43a060:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  43a064:	movk	x8, #0x5554
  43a068:	cmp	x25, x8
  43a06c:	b.cs	43a24c <argp_parse@@Base+0xb590>  // b.hs, b.nlast
  43a070:	add	x8, x25, x25, lsr #1
  43a074:	add	x25, x8, #0x1
  43a078:	b	43a0f0 <argp_parse@@Base+0xb434>
  43a07c:	mov	x22, x19
  43a080:	ldur	x19, [x29, #-8]
  43a084:	b	43a0c0 <argp_parse@@Base+0xb404>
  43a088:	mov	x22, x19
  43a08c:	cbz	x9, 43a0a8 <argp_parse@@Base+0xb3ec>
  43a090:	lsr	x8, x9, #59
  43a094:	cbz	x8, 43a0ac <argp_parse@@Base+0xb3f0>
  43a098:	b	43a24c <argp_parse@@Base+0xb590>
  43a09c:	cbz	x25, 43a0ec <argp_parse@@Base+0xb430>
  43a0a0:	tbz	x25, #63, 43a0f0 <argp_parse@@Base+0xb434>
  43a0a4:	b	43a24c <argp_parse@@Base+0xb590>
  43a0a8:	mov	w9, #0x8                   	// #8
  43a0ac:	ldur	x0, [x29, #-8]
  43a0b0:	lsl	x1, x9, #4
  43a0b4:	stur	x9, [x29, #-16]
  43a0b8:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  43a0bc:	mov	x19, x0
  43a0c0:	mov	x0, x27
  43a0c4:	bl	43a998 <argp_parse@@Base+0xbcdc>
  43a0c8:	add	x8, x19, x21, lsl #4
  43a0cc:	str	x0, [x8]
  43a0d0:	ldr	x9, [x28]
  43a0d4:	stur	x19, [x29, #-8]
  43a0d8:	mov	x19, x22
  43a0dc:	ldr	x22, [sp, #24]
  43a0e0:	str	x9, [x8, #8]
  43a0e4:	add	x21, x21, #0x1
  43a0e8:	b	43a110 <argp_parse@@Base+0xb454>
  43a0ec:	mov	w25, #0x80                  	// #128
  43a0f0:	mov	x0, x19
  43a0f4:	mov	x1, x25
  43a0f8:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  43a0fc:	mov	x19, x0
  43a100:	add	x0, x19, x20
  43a104:	mov	x1, x27
  43a108:	mov	x2, x26
  43a10c:	bl	4040f0 <memcpy@plt>
  43a110:	add	x20, x26, x20
  43a114:	mov	x0, x24
  43a118:	str	wzr, [x23]
  43a11c:	bl	404700 <readdir@plt>
  43a120:	mov	x28, x0
  43a124:	cbnz	x0, 439fd4 <argp_parse@@Base+0xb318>
  43a128:	b	43a148 <argp_parse@@Base+0xb48c>
  43a12c:	mov	x19, xzr
  43a130:	b	43a228 <argp_parse@@Base+0xb56c>
  43a134:	mov	x20, xzr
  43a138:	mov	x21, xzr
  43a13c:	stur	xzr, [x29, #-8]
  43a140:	mov	x25, xzr
  43a144:	mov	x19, xzr
  43a148:	ldr	w22, [x23]
  43a14c:	cbz	w22, 43a16c <argp_parse@@Base+0xb4b0>
  43a150:	ldur	x0, [x29, #-8]
  43a154:	bl	4049b0 <free@plt>
  43a158:	mov	x0, x19
  43a15c:	bl	4049b0 <free@plt>
  43a160:	mov	x19, xzr
  43a164:	str	w22, [x23]
  43a168:	b	43a228 <argp_parse@@Base+0xb56c>
  43a16c:	ldr	x8, [sp, #16]
  43a170:	sub	x8, x8, #0x1
  43a174:	cmp	x8, #0x1
  43a178:	b.hi	43a1ec <argp_parse@@Base+0xb530>  // b.pmore
  43a17c:	cbz	x21, 43a208 <argp_parse@@Base+0xb54c>
  43a180:	ldr	w9, [sp, #12]
  43a184:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x19808>
  43a188:	add	x8, x8, #0x510
  43a18c:	ldur	x24, [x29, #-8]
  43a190:	ldr	x3, [x8, w9, uxtw #3]
  43a194:	mov	w2, #0x10                  	// #16
  43a198:	mov	x1, x21
  43a19c:	mov	x0, x24
  43a1a0:	bl	404340 <qsort@plt>
  43a1a4:	add	x0, x20, #0x1
  43a1a8:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  43a1ac:	mov	x19, x0
  43a1b0:	mov	x20, xzr
  43a1b4:	mov	x23, x24
  43a1b8:	ldr	x1, [x23]
  43a1bc:	add	x22, x19, x20
  43a1c0:	mov	x0, x22
  43a1c4:	bl	4043c0 <stpcpy@plt>
  43a1c8:	ldr	x8, [x23], #16
  43a1cc:	sub	x9, x20, x22
  43a1d0:	add	x9, x9, x0
  43a1d4:	add	x20, x9, #0x1
  43a1d8:	mov	x0, x8
  43a1dc:	bl	4049b0 <free@plt>
  43a1e0:	subs	x21, x21, #0x1
  43a1e4:	b.ne	43a1b8 <argp_parse@@Base+0xb4fc>  // b.any
  43a1e8:	b	43a21c <argp_parse@@Base+0xb560>
  43a1ec:	cmp	x25, x20
  43a1f0:	b.ne	43a224 <argp_parse@@Base+0xb568>  // b.any
  43a1f4:	add	x1, x20, #0x1
  43a1f8:	mov	x0, x19
  43a1fc:	bl	43a7f4 <argp_parse@@Base+0xbb38>
  43a200:	mov	x19, x0
  43a204:	b	43a224 <argp_parse@@Base+0xb568>
  43a208:	add	x0, x20, #0x1
  43a20c:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  43a210:	ldur	x24, [x29, #-8]
  43a214:	mov	x19, x0
  43a218:	mov	x20, xzr
  43a21c:	mov	x0, x24
  43a220:	bl	4049b0 <free@plt>
  43a224:	strb	wzr, [x19, x20]
  43a228:	mov	x0, x19
  43a22c:	ldp	x20, x19, [sp, #128]
  43a230:	ldp	x22, x21, [sp, #112]
  43a234:	ldp	x24, x23, [sp, #96]
  43a238:	ldp	x26, x25, [sp, #80]
  43a23c:	ldp	x28, x27, [sp, #64]
  43a240:	ldp	x29, x30, [sp, #48]
  43a244:	add	sp, sp, #0x90
  43a248:	ret
  43a24c:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  43a250:	stp	x29, x30, [sp, #-48]!
  43a254:	str	x21, [sp, #16]
  43a258:	stp	x20, x19, [sp, #32]
  43a25c:	mov	x29, sp
  43a260:	mov	w19, w1
  43a264:	bl	447d8c <_obstack_memory_used@@Base+0xc594>
  43a268:	cbz	x0, 43a2a8 <argp_parse@@Base+0xb5ec>
  43a26c:	mov	w1, w19
  43a270:	mov	x20, x0
  43a274:	bl	439f68 <argp_parse@@Base+0xb2ac>
  43a278:	mov	x19, x0
  43a27c:	mov	x0, x20
  43a280:	bl	404770 <closedir@plt>
  43a284:	cbz	w0, 43a2ac <argp_parse@@Base+0xb5f0>
  43a288:	bl	404ce0 <__errno_location@plt>
  43a28c:	ldr	w21, [x0]
  43a290:	mov	x20, x0
  43a294:	mov	x0, x19
  43a298:	bl	4049b0 <free@plt>
  43a29c:	mov	x19, xzr
  43a2a0:	str	w21, [x20]
  43a2a4:	b	43a2ac <argp_parse@@Base+0xb5f0>
  43a2a8:	mov	x19, xzr
  43a2ac:	mov	x0, x19
  43a2b0:	ldp	x20, x19, [sp, #32]
  43a2b4:	ldr	x21, [sp, #16]
  43a2b8:	ldp	x29, x30, [sp], #48
  43a2bc:	ret
  43a2c0:	ldr	x0, [x0]
  43a2c4:	ldr	x1, [x1]
  43a2c8:	b	404900 <strcmp@plt>
  43a2cc:	ldr	x8, [x0, #8]
  43a2d0:	ldr	x9, [x1, #8]
  43a2d4:	cmp	x8, x9
  43a2d8:	cset	w8, hi  // hi = pmore
  43a2dc:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  43a2e0:	ret
  43a2e4:	stp	x29, x30, [sp, #-32]!
  43a2e8:	stp	x20, x19, [sp, #16]
  43a2ec:	mov	x19, x1
  43a2f0:	mov	w1, wzr
  43a2f4:	mov	x2, x19
  43a2f8:	mov	x29, sp
  43a2fc:	mov	x20, x0
  43a300:	bl	404b50 <memchr@plt>
  43a304:	sub	x8, x0, x20
  43a308:	cmp	x0, #0x0
  43a30c:	csinc	x0, x19, x8, eq  // eq = none
  43a310:	ldp	x20, x19, [sp, #16]
  43a314:	ldp	x29, x30, [sp], #32
  43a318:	ret
  43a31c:	sub	sp, sp, #0x50
  43a320:	str	x21, [sp, #48]
  43a324:	stp	x20, x19, [sp, #64]
  43a328:	mov	x21, x5
  43a32c:	mov	x20, x4
  43a330:	mov	x5, x3
  43a334:	mov	x4, x2
  43a338:	mov	x19, x0
  43a33c:	stp	x29, x30, [sp, #32]
  43a340:	add	x29, sp, #0x20
  43a344:	cbz	x1, 43a364 <argp_parse@@Base+0xb6a8>
  43a348:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x19808>
  43a34c:	mov	x3, x1
  43a350:	add	x2, x2, #0x532
  43a354:	mov	w1, #0x1                   	// #1
  43a358:	mov	x0, x19
  43a35c:	bl	4048f0 <__fprintf_chk@plt>
  43a360:	b	43a380 <argp_parse@@Base+0xb6c4>
  43a364:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x19808>
  43a368:	add	x2, x2, #0x53e
  43a36c:	mov	w1, #0x1                   	// #1
  43a370:	mov	x0, x19
  43a374:	mov	x3, x4
  43a378:	mov	x4, x5
  43a37c:	bl	4048f0 <__fprintf_chk@plt>
  43a380:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43a384:	add	x1, x1, #0x545
  43a388:	mov	w2, #0x5                   	// #5
  43a38c:	mov	x0, xzr
  43a390:	bl	404bd0 <dcgettext@plt>
  43a394:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x19808>
  43a398:	mov	x3, x0
  43a39c:	add	x2, x2, #0x82b
  43a3a0:	mov	w1, #0x1                   	// #1
  43a3a4:	mov	w4, #0x7e3                 	// #2019
  43a3a8:	mov	x0, x19
  43a3ac:	bl	4048f0 <__fprintf_chk@plt>
  43a3b0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43a3b4:	add	x1, x1, #0x549
  43a3b8:	mov	w2, #0x5                   	// #5
  43a3bc:	mov	x0, xzr
  43a3c0:	bl	404bd0 <dcgettext@plt>
  43a3c4:	mov	x1, x19
  43a3c8:	bl	404bf0 <fputs_unlocked@plt>
  43a3cc:	cmp	x21, #0x9
  43a3d0:	b.hi	43a424 <argp_parse@@Base+0xb768>  // b.pmore
  43a3d4:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x19808>
  43a3d8:	add	x8, x8, #0x528
  43a3dc:	adr	x9, 43a3ec <argp_parse@@Base+0xb730>
  43a3e0:	ldrb	w10, [x8, x21]
  43a3e4:	add	x9, x9, x10, lsl #2
  43a3e8:	br	x9
  43a3ec:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43a3f0:	add	x1, x1, #0x615
  43a3f4:	mov	w2, #0x5                   	// #5
  43a3f8:	mov	x0, xzr
  43a3fc:	bl	404bd0 <dcgettext@plt>
  43a400:	ldr	x3, [x20]
  43a404:	mov	x2, x0
  43a408:	mov	x0, x19
  43a40c:	ldp	x20, x19, [sp, #64]
  43a410:	ldr	x21, [sp, #48]
  43a414:	ldp	x29, x30, [sp, #32]
  43a418:	mov	w1, #0x1                   	// #1
  43a41c:	add	sp, sp, #0x50
  43a420:	b	4048f0 <__fprintf_chk@plt>
  43a424:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43a428:	add	x1, x1, #0x754
  43a42c:	b	43a588 <argp_parse@@Base+0xb8cc>
  43a430:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43a434:	add	x1, x1, #0x625
  43a438:	mov	w2, #0x5                   	// #5
  43a43c:	mov	x0, xzr
  43a440:	bl	404bd0 <dcgettext@plt>
  43a444:	ldp	x3, x4, [x20]
  43a448:	mov	x2, x0
  43a44c:	mov	x0, x19
  43a450:	ldp	x20, x19, [sp, #64]
  43a454:	ldr	x21, [sp, #48]
  43a458:	ldp	x29, x30, [sp, #32]
  43a45c:	mov	w1, #0x1                   	// #1
  43a460:	add	sp, sp, #0x50
  43a464:	b	4048f0 <__fprintf_chk@plt>
  43a468:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43a46c:	add	x1, x1, #0x63c
  43a470:	mov	w2, #0x5                   	// #5
  43a474:	mov	x0, xzr
  43a478:	bl	404bd0 <dcgettext@plt>
  43a47c:	ldp	x3, x4, [x20]
  43a480:	ldr	x5, [x20, #16]
  43a484:	mov	x2, x0
  43a488:	mov	x0, x19
  43a48c:	ldp	x20, x19, [sp, #64]
  43a490:	ldr	x21, [sp, #48]
  43a494:	ldp	x29, x30, [sp, #32]
  43a498:	mov	w1, #0x1                   	// #1
  43a49c:	add	sp, sp, #0x50
  43a4a0:	b	4048f0 <__fprintf_chk@plt>
  43a4a4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43a4a8:	add	x1, x1, #0x658
  43a4ac:	mov	w2, #0x5                   	// #5
  43a4b0:	mov	x0, xzr
  43a4b4:	bl	404bd0 <dcgettext@plt>
  43a4b8:	ldp	x3, x4, [x20]
  43a4bc:	ldp	x5, x6, [x20, #16]
  43a4c0:	mov	x2, x0
  43a4c4:	mov	x0, x19
  43a4c8:	ldp	x20, x19, [sp, #64]
  43a4cc:	ldr	x21, [sp, #48]
  43a4d0:	ldp	x29, x30, [sp, #32]
  43a4d4:	mov	w1, #0x1                   	// #1
  43a4d8:	add	sp, sp, #0x50
  43a4dc:	b	4048f0 <__fprintf_chk@plt>
  43a4e0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43a4e4:	add	x1, x1, #0x678
  43a4e8:	mov	w2, #0x5                   	// #5
  43a4ec:	mov	x0, xzr
  43a4f0:	bl	404bd0 <dcgettext@plt>
  43a4f4:	ldp	x3, x4, [x20]
  43a4f8:	ldp	x5, x6, [x20, #16]
  43a4fc:	ldr	x7, [x20, #32]
  43a500:	mov	x2, x0
  43a504:	mov	x0, x19
  43a508:	ldp	x20, x19, [sp, #64]
  43a50c:	ldr	x21, [sp, #48]
  43a510:	ldp	x29, x30, [sp, #32]
  43a514:	mov	w1, #0x1                   	// #1
  43a518:	add	sp, sp, #0x50
  43a51c:	b	4048f0 <__fprintf_chk@plt>
  43a520:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43a524:	add	x1, x1, #0x69c
  43a528:	mov	w2, #0x5                   	// #5
  43a52c:	mov	x0, xzr
  43a530:	bl	404bd0 <dcgettext@plt>
  43a534:	ldp	x3, x4, [x20]
  43a538:	ldp	x5, x6, [x20, #16]
  43a53c:	ldp	x7, x8, [x20, #32]
  43a540:	mov	x2, x0
  43a544:	b	43a574 <argp_parse@@Base+0xb8b8>
  43a548:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43a54c:	add	x1, x1, #0x6c4
  43a550:	mov	w2, #0x5                   	// #5
  43a554:	mov	x0, xzr
  43a558:	bl	404bd0 <dcgettext@plt>
  43a55c:	ldr	x9, [x20, #48]
  43a560:	ldp	x3, x4, [x20]
  43a564:	ldp	x5, x6, [x20, #16]
  43a568:	ldp	x7, x8, [x20, #32]
  43a56c:	mov	x2, x0
  43a570:	str	x9, [sp, #8]
  43a574:	mov	w1, #0x1                   	// #1
  43a578:	str	x8, [sp]
  43a57c:	b	43a5ec <argp_parse@@Base+0xb930>
  43a580:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43a584:	add	x1, x1, #0x720
  43a588:	mov	w2, #0x5                   	// #5
  43a58c:	mov	x0, xzr
  43a590:	bl	404bd0 <dcgettext@plt>
  43a594:	ldp	x8, x9, [x20, #56]
  43a598:	ldp	x3, x4, [x20]
  43a59c:	ldp	x5, x6, [x20, #16]
  43a5a0:	ldr	x7, [x20, #32]
  43a5a4:	ldur	q0, [x20, #40]
  43a5a8:	mov	x2, x0
  43a5ac:	str	x9, [sp, #24]
  43a5b0:	b	43a5e0 <argp_parse@@Base+0xb924>
  43a5b4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43a5b8:	add	x1, x1, #0x6f0
  43a5bc:	mov	w2, #0x5                   	// #5
  43a5c0:	mov	x0, xzr
  43a5c4:	bl	404bd0 <dcgettext@plt>
  43a5c8:	ldp	x3, x4, [x20]
  43a5cc:	ldp	x5, x6, [x20, #16]
  43a5d0:	ldr	x7, [x20, #32]
  43a5d4:	ldur	q0, [x20, #40]
  43a5d8:	ldr	x8, [x20, #56]
  43a5dc:	mov	x2, x0
  43a5e0:	str	x8, [sp, #16]
  43a5e4:	mov	w1, #0x1                   	// #1
  43a5e8:	str	q0, [sp]
  43a5ec:	mov	x0, x19
  43a5f0:	bl	4048f0 <__fprintf_chk@plt>
  43a5f4:	ldp	x20, x19, [sp, #64]
  43a5f8:	ldr	x21, [sp, #48]
  43a5fc:	ldp	x29, x30, [sp, #32]
  43a600:	add	sp, sp, #0x50
  43a604:	ret
  43a608:	mov	x8, xzr
  43a60c:	ldr	x9, [x4, x8, lsl #3]
  43a610:	add	x8, x8, #0x1
  43a614:	cbnz	x9, 43a60c <argp_parse@@Base+0xb950>
  43a618:	sub	x5, x8, #0x1
  43a61c:	b	43a31c <argp_parse@@Base+0xb660>
  43a620:	sub	sp, sp, #0x60
  43a624:	stp	x29, x30, [sp, #80]
  43a628:	ldr	w8, [x4, #24]
  43a62c:	mov	x5, xzr
  43a630:	mov	x9, sp
  43a634:	add	x29, sp, #0x50
  43a638:	tbz	w8, #31, 43a660 <argp_parse@@Base+0xb9a4>
  43a63c:	add	w11, w8, #0x8
  43a640:	cmn	w8, #0x8
  43a644:	str	w11, [x4, #24]
  43a648:	b.gt	43a65c <argp_parse@@Base+0xb9a0>
  43a64c:	ldr	x10, [x4, #8]
  43a650:	add	x10, x10, w8, sxtw
  43a654:	mov	w8, w11
  43a658:	b	43a66c <argp_parse@@Base+0xb9b0>
  43a65c:	mov	w8, w11
  43a660:	ldr	x10, [x4]
  43a664:	add	x11, x10, #0x8
  43a668:	str	x11, [x4]
  43a66c:	ldr	x10, [x10]
  43a670:	str	x10, [x9, x5, lsl #3]
  43a674:	cbz	x10, 43a684 <argp_parse@@Base+0xb9c8>
  43a678:	add	x5, x5, #0x1
  43a67c:	cmp	x5, #0xa
  43a680:	b.ne	43a638 <argp_parse@@Base+0xb97c>  // b.any
  43a684:	mov	x4, sp
  43a688:	bl	43a31c <argp_parse@@Base+0xb660>
  43a68c:	ldp	x29, x30, [sp, #80]
  43a690:	add	sp, sp, #0x60
  43a694:	ret
  43a698:	sub	sp, sp, #0xf0
  43a69c:	stp	x29, x30, [sp, #224]
  43a6a0:	add	x29, sp, #0xe0
  43a6a4:	mov	x8, #0xffffffffffffffe0    	// #-32
  43a6a8:	mov	x9, sp
  43a6ac:	sub	x10, x29, #0x60
  43a6b0:	movk	x8, #0xff80, lsl #32
  43a6b4:	add	x11, x29, #0x10
  43a6b8:	add	x9, x9, #0x80
  43a6bc:	add	x10, x10, #0x20
  43a6c0:	stp	x9, x8, [x29, #-16]
  43a6c4:	stp	x11, x10, [x29, #-32]
  43a6c8:	stp	x4, x5, [x29, #-96]
  43a6cc:	stp	x6, x7, [x29, #-80]
  43a6d0:	stp	q0, q1, [sp]
  43a6d4:	ldp	q0, q1, [x29, #-32]
  43a6d8:	sub	x4, x29, #0x40
  43a6dc:	stp	q2, q3, [sp, #32]
  43a6e0:	stp	q4, q5, [sp, #64]
  43a6e4:	stp	q6, q7, [sp, #96]
  43a6e8:	stp	q0, q1, [x29, #-64]
  43a6ec:	bl	43a620 <argp_parse@@Base+0xb964>
  43a6f0:	ldp	x29, x30, [sp, #224]
  43a6f4:	add	sp, sp, #0xf0
  43a6f8:	ret
  43a6fc:	stp	x29, x30, [sp, #-16]!
  43a700:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43a704:	add	x1, x1, #0x790
  43a708:	mov	w2, #0x5                   	// #5
  43a70c:	mov	x0, xzr
  43a710:	mov	x29, sp
  43a714:	bl	404bd0 <dcgettext@plt>
  43a718:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x19808>
  43a71c:	mov	x1, x0
  43a720:	add	x2, x2, #0x7a5
  43a724:	mov	w0, #0x1                   	// #1
  43a728:	bl	4045d0 <__printf_chk@plt>
  43a72c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43a730:	add	x1, x1, #0x7b5
  43a734:	mov	w2, #0x5                   	// #5
  43a738:	mov	x0, xzr
  43a73c:	bl	404bd0 <dcgettext@plt>
  43a740:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x11808>
  43a744:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  43a748:	mov	x1, x0
  43a74c:	add	x2, x2, #0x602
  43a750:	add	x3, x3, #0x7c9
  43a754:	mov	w0, #0x1                   	// #1
  43a758:	bl	4045d0 <__printf_chk@plt>
  43a75c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43a760:	add	x1, x1, #0x7ea
  43a764:	mov	w2, #0x5                   	// #5
  43a768:	mov	x0, xzr
  43a76c:	bl	404bd0 <dcgettext@plt>
  43a770:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  43a774:	ldr	x1, [x8, #632]
  43a778:	ldp	x29, x30, [sp], #16
  43a77c:	b	404bf0 <fputs_unlocked@plt>
  43a780:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  43a784:	udiv	x8, x8, x1
  43a788:	cmp	x8, x0
  43a78c:	b.cc	43a798 <argp_parse@@Base+0xbadc>  // b.lo, b.ul, b.last
  43a790:	mul	x0, x1, x0
  43a794:	b	43a7a4 <argp_parse@@Base+0xbae8>
  43a798:	stp	x29, x30, [sp, #-16]!
  43a79c:	mov	x29, sp
  43a7a0:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  43a7a4:	stp	x29, x30, [sp, #-32]!
  43a7a8:	str	x19, [sp, #16]
  43a7ac:	mov	x29, sp
  43a7b0:	mov	x19, x0
  43a7b4:	bl	4044d0 <malloc@plt>
  43a7b8:	cbz	x19, 43a7c0 <argp_parse@@Base+0xbb04>
  43a7bc:	cbz	x0, 43a7cc <argp_parse@@Base+0xbb10>
  43a7c0:	ldr	x19, [sp, #16]
  43a7c4:	ldp	x29, x30, [sp], #32
  43a7c8:	ret
  43a7cc:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  43a7d0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  43a7d4:	udiv	x8, x8, x2
  43a7d8:	cmp	x8, x1
  43a7dc:	b.cc	43a7e8 <argp_parse@@Base+0xbb2c>  // b.lo, b.ul, b.last
  43a7e0:	mul	x1, x2, x1
  43a7e4:	b	43a7f4 <argp_parse@@Base+0xbb38>
  43a7e8:	stp	x29, x30, [sp, #-16]!
  43a7ec:	mov	x29, sp
  43a7f0:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  43a7f4:	stp	x29, x30, [sp, #-32]!
  43a7f8:	str	x19, [sp, #16]
  43a7fc:	mov	x19, x1
  43a800:	mov	x29, sp
  43a804:	cbz	x0, 43a818 <argp_parse@@Base+0xbb5c>
  43a808:	cbnz	x19, 43a818 <argp_parse@@Base+0xbb5c>
  43a80c:	bl	4049b0 <free@plt>
  43a810:	mov	x0, xzr
  43a814:	b	43a828 <argp_parse@@Base+0xbb6c>
  43a818:	mov	x1, x19
  43a81c:	bl	404710 <realloc@plt>
  43a820:	cbz	x19, 43a828 <argp_parse@@Base+0xbb6c>
  43a824:	cbz	x0, 43a834 <argp_parse@@Base+0xbb78>
  43a828:	ldr	x19, [sp, #16]
  43a82c:	ldp	x29, x30, [sp], #32
  43a830:	ret
  43a834:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  43a838:	stp	x29, x30, [sp, #-16]!
  43a83c:	ldr	x9, [x1]
  43a840:	mov	x29, sp
  43a844:	cbz	x0, 43a868 <argp_parse@@Base+0xbbac>
  43a848:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  43a84c:	movk	x8, #0x5554
  43a850:	udiv	x8, x8, x2
  43a854:	cmp	x8, x9
  43a858:	b.ls	43a8a0 <argp_parse@@Base+0xbbe4>  // b.plast
  43a85c:	add	x8, x9, x9, lsr #1
  43a860:	add	x9, x8, #0x1
  43a864:	b	43a88c <argp_parse@@Base+0xbbd0>
  43a868:	cbnz	x9, 43a87c <argp_parse@@Base+0xbbc0>
  43a86c:	mov	w8, #0x80                  	// #128
  43a870:	udiv	x8, x8, x2
  43a874:	cmp	x2, #0x80
  43a878:	cinc	x9, x8, hi  // hi = pmore
  43a87c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  43a880:	udiv	x8, x8, x2
  43a884:	cmp	x8, x9
  43a888:	b.cc	43a8a0 <argp_parse@@Base+0xbbe4>  // b.lo, b.ul, b.last
  43a88c:	mul	x8, x9, x2
  43a890:	str	x9, [x1]
  43a894:	mov	x1, x8
  43a898:	ldp	x29, x30, [sp], #16
  43a89c:	b	43a7f4 <argp_parse@@Base+0xbb38>
  43a8a0:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  43a8a4:	b	43a7a4 <argp_parse@@Base+0xbae8>
  43a8a8:	stp	x29, x30, [sp, #-16]!
  43a8ac:	ldr	x8, [x1]
  43a8b0:	mov	x29, sp
  43a8b4:	cbz	x0, 43a8d4 <argp_parse@@Base+0xbc18>
  43a8b8:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  43a8bc:	movk	x9, #0x5554
  43a8c0:	cmp	x8, x9
  43a8c4:	b.cs	43a8dc <argp_parse@@Base+0xbc20>  // b.hs, b.nlast
  43a8c8:	add	x8, x8, x8, lsr #1
  43a8cc:	add	x8, x8, #0x1
  43a8d0:	b	43a8e4 <argp_parse@@Base+0xbc28>
  43a8d4:	cbz	x8, 43a8e0 <argp_parse@@Base+0xbc24>
  43a8d8:	tbz	x8, #63, 43a8e4 <argp_parse@@Base+0xbc28>
  43a8dc:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  43a8e0:	mov	w8, #0x80                  	// #128
  43a8e4:	str	x8, [x1]
  43a8e8:	mov	x1, x8
  43a8ec:	ldp	x29, x30, [sp], #16
  43a8f0:	b	43a7f4 <argp_parse@@Base+0xbb38>
  43a8f4:	stp	x29, x30, [sp, #-32]!
  43a8f8:	stp	x20, x19, [sp, #16]
  43a8fc:	mov	x29, sp
  43a900:	mov	x19, x0
  43a904:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  43a908:	mov	w1, wzr
  43a90c:	mov	x2, x19
  43a910:	mov	x20, x0
  43a914:	bl	4045e0 <memset@plt>
  43a918:	mov	x0, x20
  43a91c:	ldp	x20, x19, [sp, #16]
  43a920:	ldp	x29, x30, [sp], #32
  43a924:	ret
  43a928:	stp	x29, x30, [sp, #-16]!
  43a92c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  43a930:	udiv	x8, x8, x1
  43a934:	cmp	x8, x0
  43a938:	mov	x29, sp
  43a93c:	b.cc	43a950 <argp_parse@@Base+0xbc94>  // b.lo, b.ul, b.last
  43a940:	bl	404680 <calloc@plt>
  43a944:	cbz	x0, 43a950 <argp_parse@@Base+0xbc94>
  43a948:	ldp	x29, x30, [sp], #16
  43a94c:	ret
  43a950:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  43a954:	stp	x29, x30, [sp, #-48]!
  43a958:	stp	x20, x19, [sp, #32]
  43a95c:	mov	x20, x0
  43a960:	mov	x0, x1
  43a964:	str	x21, [sp, #16]
  43a968:	mov	x29, sp
  43a96c:	mov	x19, x1
  43a970:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  43a974:	mov	x1, x20
  43a978:	mov	x2, x19
  43a97c:	mov	x21, x0
  43a980:	bl	4040f0 <memcpy@plt>
  43a984:	mov	x0, x21
  43a988:	ldp	x20, x19, [sp, #32]
  43a98c:	ldr	x21, [sp, #16]
  43a990:	ldp	x29, x30, [sp], #48
  43a994:	ret
  43a998:	stp	x29, x30, [sp, #-48]!
  43a99c:	str	x21, [sp, #16]
  43a9a0:	stp	x20, x19, [sp, #32]
  43a9a4:	mov	x29, sp
  43a9a8:	mov	x19, x0
  43a9ac:	bl	404170 <strlen@plt>
  43a9b0:	add	x20, x0, #0x1
  43a9b4:	mov	x0, x20
  43a9b8:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  43a9bc:	mov	x1, x19
  43a9c0:	mov	x2, x20
  43a9c4:	mov	x21, x0
  43a9c8:	bl	4040f0 <memcpy@plt>
  43a9cc:	mov	x0, x21
  43a9d0:	ldp	x20, x19, [sp, #32]
  43a9d4:	ldr	x21, [sp, #16]
  43a9d8:	ldp	x29, x30, [sp], #48
  43a9dc:	ret
  43a9e0:	stp	x29, x30, [sp, #-32]!
  43a9e4:	mov	x0, xzr
  43a9e8:	mov	x1, xzr
  43a9ec:	str	x19, [sp, #16]
  43a9f0:	mov	x29, sp
  43a9f4:	bl	404120 <getcwd@plt>
  43a9f8:	mov	x19, x0
  43a9fc:	cbnz	x0, 43aa10 <argp_parse@@Base+0xbd54>
  43aa00:	bl	404ce0 <__errno_location@plt>
  43aa04:	ldr	w8, [x0]
  43aa08:	cmp	w8, #0xc
  43aa0c:	b.eq	43aa20 <argp_parse@@Base+0xbd64>  // b.none
  43aa10:	mov	x0, x19
  43aa14:	ldr	x19, [sp, #16]
  43aa18:	ldp	x29, x30, [sp], #32
  43aa1c:	ret
  43aa20:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  43aa24:	stp	x29, x30, [sp, #-16]!
  43aa28:	mov	x29, sp
  43aa2c:	bl	404a30 <strndup@plt>
  43aa30:	cbz	x0, 43aa3c <argp_parse@@Base+0xbd80>
  43aa34:	ldp	x29, x30, [sp], #16
  43aa38:	ret
  43aa3c:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  43aa40:	stp	x29, x30, [sp, #-80]!
  43aa44:	cmp	w2, #0x25
  43aa48:	str	x25, [sp, #16]
  43aa4c:	stp	x24, x23, [sp, #32]
  43aa50:	stp	x22, x21, [sp, #48]
  43aa54:	stp	x20, x19, [sp, #64]
  43aa58:	mov	x29, sp
  43aa5c:	b.cs	43adec <argp_parse@@Base+0xc130>  // b.hs, b.nlast
  43aa60:	mov	x23, x4
  43aa64:	mov	x19, x3
  43aa68:	mov	w22, w2
  43aa6c:	mov	x21, x1
  43aa70:	mov	x20, x0
  43aa74:	bl	404ce0 <__errno_location@plt>
  43aa78:	mov	x24, x0
  43aa7c:	str	wzr, [x0]
  43aa80:	bl	404930 <__ctype_b_loc@plt>
  43aa84:	ldr	x8, [x0]
  43aa88:	mov	x10, x20
  43aa8c:	ldrb	w9, [x10], #1
  43aa90:	ldrh	w11, [x8, x9, lsl #1]
  43aa94:	tbnz	w11, #13, 43aa8c <argp_parse@@Base+0xbdd0>
  43aa98:	cmp	x21, #0x0
  43aa9c:	add	x8, x29, #0x18
  43aaa0:	csel	x21, x8, x21, eq  // eq = none
  43aaa4:	cmp	w9, #0x2d
  43aaa8:	b.ne	43aab4 <argp_parse@@Base+0xbdf8>  // b.any
  43aaac:	mov	w20, #0x4                   	// #4
  43aab0:	b	43add0 <argp_parse@@Base+0xc114>
  43aab4:	mov	x0, x20
  43aab8:	mov	x1, x21
  43aabc:	mov	w2, w22
  43aac0:	bl	404820 <strtoumax@plt>
  43aac4:	ldr	x25, [x21]
  43aac8:	cmp	x25, x20
  43aacc:	b.eq	43aaf0 <argp_parse@@Base+0xbe34>  // b.none
  43aad0:	ldr	w20, [x24]
  43aad4:	mov	x22, x0
  43aad8:	cbz	w20, 43aae8 <argp_parse@@Base+0xbe2c>
  43aadc:	cmp	w20, #0x22
  43aae0:	b.ne	43aaac <argp_parse@@Base+0xbdf0>  // b.any
  43aae4:	mov	w20, #0x1                   	// #1
  43aae8:	cbnz	x23, 43ab10 <argp_parse@@Base+0xbe54>
  43aaec:	b	43adcc <argp_parse@@Base+0xc110>
  43aaf0:	cbz	x23, 43aaac <argp_parse@@Base+0xbdf0>
  43aaf4:	ldrb	w1, [x20]
  43aaf8:	cbz	w1, 43aaac <argp_parse@@Base+0xbdf0>
  43aafc:	mov	x0, x23
  43ab00:	bl	404a50 <strchr@plt>
  43ab04:	cbz	x0, 43aaac <argp_parse@@Base+0xbdf0>
  43ab08:	mov	w20, wzr
  43ab0c:	mov	w22, #0x1                   	// #1
  43ab10:	ldrb	w24, [x25]
  43ab14:	cbz	w24, 43adcc <argp_parse@@Base+0xc110>
  43ab18:	mov	x0, x23
  43ab1c:	mov	w1, w24
  43ab20:	bl	404a50 <strchr@plt>
  43ab24:	cbz	x0, 43ad50 <argp_parse@@Base+0xc094>
  43ab28:	sub	w10, w24, #0x45
  43ab2c:	mov	w8, #0x1                   	// #1
  43ab30:	cmp	w10, #0x2f
  43ab34:	mov	w9, #0x400                 	// #1024
  43ab38:	b.hi	43abac <argp_parse@@Base+0xbef0>  // b.pmore
  43ab3c:	mov	w11, #0x1                   	// #1
  43ab40:	lsl	x10, x11, x10
  43ab44:	mov	x11, #0x8945                	// #35141
  43ab48:	movk	x11, #0x30, lsl #16
  43ab4c:	movk	x11, #0x8144, lsl #32
  43ab50:	tst	x10, x11
  43ab54:	b.eq	43abac <argp_parse@@Base+0xbef0>  // b.none
  43ab58:	mov	w1, #0x30                  	// #48
  43ab5c:	mov	x0, x23
  43ab60:	bl	404a50 <strchr@plt>
  43ab64:	cbz	x0, 43ab98 <argp_parse@@Base+0xbedc>
  43ab68:	ldrb	w8, [x25, #1]
  43ab6c:	cmp	w8, #0x42
  43ab70:	b.eq	43aba4 <argp_parse@@Base+0xbee8>  // b.none
  43ab74:	cmp	w8, #0x44
  43ab78:	b.eq	43aba4 <argp_parse@@Base+0xbee8>  // b.none
  43ab7c:	cmp	w8, #0x69
  43ab80:	b.ne	43ab98 <argp_parse@@Base+0xbedc>  // b.any
  43ab84:	ldrb	w8, [x25, #2]
  43ab88:	mov	w9, #0x3                   	// #3
  43ab8c:	cmp	w8, #0x42
  43ab90:	csinc	x8, x9, xzr, eq  // eq = none
  43ab94:	b	43ab9c <argp_parse@@Base+0xbee0>
  43ab98:	mov	w8, #0x1                   	// #1
  43ab9c:	mov	w9, #0x400                 	// #1024
  43aba0:	b	43abac <argp_parse@@Base+0xbef0>
  43aba4:	mov	w8, #0x2                   	// #2
  43aba8:	mov	w9, #0x3e8                 	// #1000
  43abac:	cmp	w24, #0x59
  43abb0:	b.gt	43abe4 <argp_parse@@Base+0xbf28>
  43abb4:	sub	w10, w24, #0x42
  43abb8:	cmp	w10, #0xe
  43abbc:	b.hi	43ac20 <argp_parse@@Base+0xbf64>  // b.pmore
  43abc0:	adrp	x11, 455000 <_obstack_memory_used@@Base+0x19808>
  43abc4:	add	x11, x11, #0x85a
  43abc8:	adr	x12, 43abd8 <argp_parse@@Base+0xbf1c>
  43abcc:	ldrb	w13, [x11, x10]
  43abd0:	add	x12, x12, x13, lsl #2
  43abd4:	br	x12
  43abd8:	cmp	xzr, x22, lsr #54
  43abdc:	lsl	x9, x22, #10
  43abe0:	b	43acb8 <argp_parse@@Base+0xbffc>
  43abe4:	cmp	w24, #0x73
  43abe8:	b.gt	43ac5c <argp_parse@@Base+0xbfa0>
  43abec:	sub	w10, w24, #0x62
  43abf0:	cmp	w10, #0xb
  43abf4:	b.hi	43ad1c <argp_parse@@Base+0xc060>  // b.pmore
  43abf8:	adrp	x11, 455000 <_obstack_memory_used@@Base+0x19808>
  43abfc:	add	x11, x11, #0x869
  43ac00:	adr	x12, 43ac14 <argp_parse@@Base+0xbf58>
  43ac04:	ldrb	w13, [x11, x10]
  43ac08:	add	x12, x12, x13, lsl #2
  43ac0c:	mov	w10, wzr
  43ac10:	br	x12
  43ac14:	cmp	xzr, x22, lsr #55
  43ac18:	lsl	x9, x22, #9
  43ac1c:	b	43acb8 <argp_parse@@Base+0xbffc>
  43ac20:	cmp	w24, #0x54
  43ac24:	b.eq	43acf0 <argp_parse@@Base+0xc034>  // b.none
  43ac28:	cmp	w24, #0x59
  43ac2c:	b.ne	43ad50 <argp_parse@@Base+0xc094>  // b.any
  43ac30:	mov	w10, wzr
  43ac34:	mov	w11, #0xfffffff8            	// #-8
  43ac38:	umulh	x12, x9, x22
  43ac3c:	cmp	xzr, x12
  43ac40:	mul	x13, x22, x9
  43ac44:	cset	w12, ne  // ne = any
  43ac48:	csinv	x22, x13, xzr, eq  // eq = none
  43ac4c:	adds	w11, w11, #0x1
  43ac50:	orr	w10, w10, w12
  43ac54:	b.cc	43ac38 <argp_parse@@Base+0xbf7c>  // b.lo, b.ul, b.last
  43ac58:	b	43adb0 <argp_parse@@Base+0xc0f4>
  43ac5c:	cmp	w24, #0x74
  43ac60:	b.eq	43acf0 <argp_parse@@Base+0xc034>  // b.none
  43ac64:	cmp	w24, #0x77
  43ac68:	b.ne	43ad50 <argp_parse@@Base+0xc094>  // b.any
  43ac6c:	cmn	x22, x22
  43ac70:	lsl	x9, x22, #1
  43ac74:	cset	w10, cs  // cs = hs, nlast
  43ac78:	csinv	x22, x9, xzr, cc  // cc = lo, ul, last
  43ac7c:	b	43adb0 <argp_parse@@Base+0xc0f4>
  43ac80:	mov	w10, wzr
  43ac84:	mov	w11, #0xfffffffd            	// #-3
  43ac88:	umulh	x12, x9, x22
  43ac8c:	cmp	xzr, x12
  43ac90:	mul	x13, x22, x9
  43ac94:	cset	w12, ne  // ne = any
  43ac98:	csinv	x22, x13, xzr, eq  // eq = none
  43ac9c:	adds	w11, w11, #0x1
  43aca0:	orr	w10, w10, w12
  43aca4:	b.cc	43ac88 <argp_parse@@Base+0xbfcc>  // b.lo, b.ul, b.last
  43aca8:	b	43adb0 <argp_parse@@Base+0xc0f4>
  43acac:	umulh	x10, x9, x22
  43acb0:	mul	x9, x22, x9
  43acb4:	cmp	xzr, x10
  43acb8:	cset	w10, ne  // ne = any
  43acbc:	csinv	x22, x9, xzr, eq  // eq = none
  43acc0:	b	43adb0 <argp_parse@@Base+0xc0f4>
  43acc4:	mov	w10, wzr
  43acc8:	mov	w11, #0xfffffffe            	// #-2
  43accc:	umulh	x12, x9, x22
  43acd0:	cmp	xzr, x12
  43acd4:	mul	x13, x22, x9
  43acd8:	cset	w12, ne  // ne = any
  43acdc:	csinv	x22, x13, xzr, eq  // eq = none
  43ace0:	adds	w11, w11, #0x1
  43ace4:	orr	w10, w10, w12
  43ace8:	b.cc	43accc <argp_parse@@Base+0xc010>  // b.lo, b.ul, b.last
  43acec:	b	43adb0 <argp_parse@@Base+0xc0f4>
  43acf0:	mov	w10, wzr
  43acf4:	mov	w11, #0xfffffffc            	// #-4
  43acf8:	umulh	x12, x9, x22
  43acfc:	cmp	xzr, x12
  43ad00:	mul	x13, x22, x9
  43ad04:	cset	w12, ne  // ne = any
  43ad08:	csinv	x22, x13, xzr, eq  // eq = none
  43ad0c:	adds	w11, w11, #0x1
  43ad10:	orr	w10, w10, w12
  43ad14:	b.cc	43acf8 <argp_parse@@Base+0xc03c>  // b.lo, b.ul, b.last
  43ad18:	b	43adb0 <argp_parse@@Base+0xc0f4>
  43ad1c:	cmp	w24, #0x5a
  43ad20:	b.ne	43ad50 <argp_parse@@Base+0xc094>  // b.any
  43ad24:	mov	w10, wzr
  43ad28:	mov	w11, #0xfffffff9            	// #-7
  43ad2c:	umulh	x12, x9, x22
  43ad30:	cmp	xzr, x12
  43ad34:	mul	x13, x22, x9
  43ad38:	cset	w12, ne  // ne = any
  43ad3c:	csinv	x22, x13, xzr, eq  // eq = none
  43ad40:	adds	w11, w11, #0x1
  43ad44:	orr	w10, w10, w12
  43ad48:	b.cc	43ad2c <argp_parse@@Base+0xc070>  // b.lo, b.ul, b.last
  43ad4c:	b	43adb0 <argp_parse@@Base+0xc0f4>
  43ad50:	str	x22, [x19]
  43ad54:	orr	w20, w20, #0x2
  43ad58:	b	43add0 <argp_parse@@Base+0xc114>
  43ad5c:	mov	w10, wzr
  43ad60:	mov	w11, #0xfffffffa            	// #-6
  43ad64:	umulh	x12, x9, x22
  43ad68:	cmp	xzr, x12
  43ad6c:	mul	x13, x22, x9
  43ad70:	cset	w12, ne  // ne = any
  43ad74:	csinv	x22, x13, xzr, eq  // eq = none
  43ad78:	adds	w11, w11, #0x1
  43ad7c:	orr	w10, w10, w12
  43ad80:	b.cc	43ad64 <argp_parse@@Base+0xc0a8>  // b.lo, b.ul, b.last
  43ad84:	b	43adb0 <argp_parse@@Base+0xc0f4>
  43ad88:	mov	w10, wzr
  43ad8c:	mov	w11, #0xfffffffb            	// #-5
  43ad90:	umulh	x12, x9, x22
  43ad94:	cmp	xzr, x12
  43ad98:	mul	x13, x22, x9
  43ad9c:	cset	w12, ne  // ne = any
  43ada0:	csinv	x22, x13, xzr, eq  // eq = none
  43ada4:	adds	w11, w11, #0x1
  43ada8:	orr	w10, w10, w12
  43adac:	b.cc	43ad90 <argp_parse@@Base+0xc0d4>  // b.lo, b.ul, b.last
  43adb0:	add	x9, x25, x8
  43adb4:	str	x9, [x21]
  43adb8:	ldrb	w8, [x25, x8]
  43adbc:	orr	w9, w10, w20
  43adc0:	orr	w10, w9, #0x2
  43adc4:	cmp	w8, #0x0
  43adc8:	csel	w20, w9, w10, eq  // eq = none
  43adcc:	str	x22, [x19]
  43add0:	mov	w0, w20
  43add4:	ldp	x20, x19, [sp, #64]
  43add8:	ldp	x22, x21, [sp, #48]
  43addc:	ldp	x24, x23, [sp, #32]
  43ade0:	ldr	x25, [sp, #16]
  43ade4:	ldp	x29, x30, [sp], #80
  43ade8:	ret
  43adec:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  43adf0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43adf4:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  43adf8:	add	x0, x0, #0x875
  43adfc:	add	x1, x1, #0x89b
  43ae00:	add	x3, x3, #0x8a7
  43ae04:	mov	w2, #0x54                  	// #84
  43ae08:	bl	404cd0 <__assert_fail@plt>
  43ae0c:	sub	sp, sp, #0x120
  43ae10:	stp	x29, x30, [sp, #256]
  43ae14:	add	x29, sp, #0x100
  43ae18:	mov	x8, #0xffffffffffffffc8    	// #-56
  43ae1c:	mov	x9, sp
  43ae20:	sub	x10, x29, #0x78
  43ae24:	movk	x8, #0xff80, lsl #32
  43ae28:	add	x11, x29, #0x20
  43ae2c:	add	x9, x9, #0x80
  43ae30:	add	x10, x10, #0x38
  43ae34:	stp	x9, x8, [x29, #-16]
  43ae38:	stp	x11, x10, [x29, #-32]
  43ae3c:	stp	x1, x2, [x29, #-120]
  43ae40:	stp	x3, x4, [x29, #-104]
  43ae44:	stp	x5, x6, [x29, #-88]
  43ae48:	stur	x7, [x29, #-72]
  43ae4c:	stp	q0, q1, [sp]
  43ae50:	ldp	q0, q1, [x29, #-32]
  43ae54:	sub	x1, x29, #0x40
  43ae58:	str	x28, [sp, #272]
  43ae5c:	stp	q2, q3, [sp, #32]
  43ae60:	stp	q4, q5, [sp, #64]
  43ae64:	stp	q6, q7, [sp, #96]
  43ae68:	stp	q0, q1, [x29, #-64]
  43ae6c:	bl	44953c <_obstack_memory_used@@Base+0xdd44>
  43ae70:	ldr	x28, [sp, #272]
  43ae74:	ldp	x29, x30, [sp, #256]
  43ae78:	add	sp, sp, #0x120
  43ae7c:	ret
  43ae80:	sub	sp, sp, #0x50
  43ae84:	stp	x29, x30, [sp, #16]
  43ae88:	stp	x24, x23, [sp, #32]
  43ae8c:	stp	x22, x21, [sp, #48]
  43ae90:	stp	x20, x19, [sp, #64]
  43ae94:	add	x29, sp, #0x10
  43ae98:	mov	x20, x0
  43ae9c:	bl	4049a0 <chdir@plt>
  43aea0:	mov	w21, w0
  43aea4:	cbz	w0, 43b038 <argp_parse@@Base+0xc37c>
  43aea8:	bl	404ce0 <__errno_location@plt>
  43aeac:	ldr	w8, [x0]
  43aeb0:	cmp	w8, #0x24
  43aeb4:	b.ne	43b038 <argp_parse@@Base+0xc37c>  // b.any
  43aeb8:	mov	x19, x0
  43aebc:	mov	x0, x20
  43aec0:	bl	404170 <strlen@plt>
  43aec4:	mov	w8, #0xffffff9c            	// #-100
  43aec8:	str	w8, [sp, #8]
  43aecc:	cbz	x0, 43b084 <argp_parse@@Base+0xc3c8>
  43aed0:	mov	x21, x0
  43aed4:	cmp	x0, #0xfff
  43aed8:	b.ls	43b0a4 <argp_parse@@Base+0xc3e8>  // b.plast
  43aedc:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43aee0:	add	x1, x1, #0x9c3
  43aee4:	mov	x0, x20
  43aee8:	bl	404a40 <strspn@plt>
  43aeec:	mov	x22, x20
  43aef0:	cbz	x0, 43af68 <argp_parse@@Base+0xc2ac>
  43aef4:	mov	x23, x0
  43aef8:	cmp	x0, #0x2
  43aefc:	b.ne	43af50 <argp_parse@@Base+0xc294>  // b.any
  43af00:	add	x0, x20, #0x3
  43af04:	sub	x2, x21, #0x3
  43af08:	mov	w1, #0x2f                  	// #47
  43af0c:	mov	w23, #0x2f                  	// #47
  43af10:	bl	404b50 <memchr@plt>
  43af14:	cbz	x0, 43b02c <argp_parse@@Base+0xc370>
  43af18:	mov	x22, x0
  43af1c:	strb	wzr, [x0]
  43af20:	add	x0, sp, #0x8
  43af24:	mov	x1, x20
  43af28:	bl	43b104 <argp_parse@@Base+0xc448>
  43af2c:	strb	w23, [x22]
  43af30:	cbnz	w0, 43b018 <argp_parse@@Base+0xc35c>
  43af34:	add	x22, x22, #0x1
  43af38:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43af3c:	add	x1, x1, #0x9c3
  43af40:	mov	x0, x22
  43af44:	bl	404a40 <strspn@plt>
  43af48:	add	x22, x22, x0
  43af4c:	b	43af68 <argp_parse@@Base+0xc2ac>
  43af50:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43af54:	add	x1, x1, #0x9c3
  43af58:	add	x0, sp, #0x8
  43af5c:	bl	43b104 <argp_parse@@Base+0xc448>
  43af60:	cbnz	w0, 43b018 <argp_parse@@Base+0xc35c>
  43af64:	add	x22, x20, x23
  43af68:	ldrb	w8, [x22]
  43af6c:	cmp	w8, #0x2f
  43af70:	b.eq	43b0c4 <argp_parse@@Base+0xc408>  // b.none
  43af74:	add	x23, x20, x21
  43af78:	cmp	x22, x23
  43af7c:	b.hi	43b0e4 <argp_parse@@Base+0xc428>  // b.pmore
  43af80:	sub	x8, x23, x22
  43af84:	cmp	x8, #0x1, lsl #12
  43af88:	b.lt	43aff4 <argp_parse@@Base+0xc338>  // b.tstop
  43af8c:	adrp	x20, 455000 <_obstack_memory_used@@Base+0x19808>
  43af90:	mov	w24, #0x2f                  	// #47
  43af94:	add	x20, x20, #0x9c3
  43af98:	mov	w1, #0x2f                  	// #47
  43af9c:	mov	w2, #0x1000                	// #4096
  43afa0:	mov	x0, x22
  43afa4:	bl	404a70 <memrchr@plt>
  43afa8:	cbz	x0, 43b02c <argp_parse@@Base+0xc370>
  43afac:	sub	x8, x0, x22
  43afb0:	mov	x21, x0
  43afb4:	cmp	x8, #0x1, lsl #12
  43afb8:	strb	wzr, [x0]
  43afbc:	b.ge	43b064 <argp_parse@@Base+0xc3a8>  // b.tcont
  43afc0:	add	x0, sp, #0x8
  43afc4:	mov	x1, x22
  43afc8:	bl	43b104 <argp_parse@@Base+0xc448>
  43afcc:	strb	w24, [x21]
  43afd0:	cbnz	w0, 43b018 <argp_parse@@Base+0xc35c>
  43afd4:	add	x21, x21, #0x1
  43afd8:	mov	x0, x21
  43afdc:	mov	x1, x20
  43afe0:	bl	404a40 <strspn@plt>
  43afe4:	add	x22, x21, x0
  43afe8:	sub	x8, x23, x22
  43afec:	cmp	x8, #0xfff
  43aff0:	b.gt	43af98 <argp_parse@@Base+0xc2dc>
  43aff4:	cmp	x22, x23
  43aff8:	b.cs	43b00c <argp_parse@@Base+0xc350>  // b.hs, b.nlast
  43affc:	add	x0, sp, #0x8
  43b000:	mov	x1, x22
  43b004:	bl	43b104 <argp_parse@@Base+0xc448>
  43b008:	cbnz	w0, 43b018 <argp_parse@@Base+0xc35c>
  43b00c:	ldr	w0, [sp, #8]
  43b010:	bl	4041e0 <fchdir@plt>
  43b014:	cbz	w0, 43b054 <argp_parse@@Base+0xc398>
  43b018:	ldr	w20, [x19]
  43b01c:	add	x0, sp, #0x8
  43b020:	bl	43b14c <argp_parse@@Base+0xc490>
  43b024:	str	w20, [x19]
  43b028:	b	43b034 <argp_parse@@Base+0xc378>
  43b02c:	mov	w8, #0x24                  	// #36
  43b030:	str	w8, [x19]
  43b034:	mov	w21, #0xffffffff            	// #-1
  43b038:	mov	w0, w21
  43b03c:	ldp	x20, x19, [sp, #64]
  43b040:	ldp	x22, x21, [sp, #48]
  43b044:	ldp	x24, x23, [sp, #32]
  43b048:	ldp	x29, x30, [sp, #16]
  43b04c:	add	sp, sp, #0x50
  43b050:	ret
  43b054:	add	x0, sp, #0x8
  43b058:	bl	43b14c <argp_parse@@Base+0xc490>
  43b05c:	mov	w21, wzr
  43b060:	b	43b038 <argp_parse@@Base+0xc37c>
  43b064:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  43b068:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43b06c:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  43b070:	add	x0, x0, #0x949
  43b074:	add	x1, x1, #0x8fe
  43b078:	add	x3, x3, #0x90b
  43b07c:	mov	w2, #0xb3                  	// #179
  43b080:	bl	404cd0 <__assert_fail@plt>
  43b084:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  43b088:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43b08c:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  43b090:	add	x0, x0, #0x8f6
  43b094:	add	x1, x1, #0x8fe
  43b098:	add	x3, x3, #0x90b
  43b09c:	mov	w2, #0x7e                  	// #126
  43b0a0:	bl	404cd0 <__assert_fail@plt>
  43b0a4:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  43b0a8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43b0ac:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  43b0b0:	add	x0, x0, #0x922
  43b0b4:	add	x1, x1, #0x8fe
  43b0b8:	add	x3, x3, #0x90b
  43b0bc:	mov	w2, #0x7f                  	// #127
  43b0c0:	bl	404cd0 <__assert_fail@plt>
  43b0c4:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  43b0c8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43b0cc:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  43b0d0:	add	x0, x0, #0x92e
  43b0d4:	add	x1, x1, #0x8fe
  43b0d8:	add	x3, x3, #0x90b
  43b0dc:	mov	w2, #0xa2                  	// #162
  43b0e0:	bl	404cd0 <__assert_fail@plt>
  43b0e4:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  43b0e8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43b0ec:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  43b0f0:	add	x0, x0, #0x93a
  43b0f4:	add	x1, x1, #0x8fe
  43b0f8:	add	x3, x3, #0x90b
  43b0fc:	mov	w2, #0xa3                  	// #163
  43b100:	bl	404cd0 <__assert_fail@plt>
  43b104:	stp	x29, x30, [sp, #-32]!
  43b108:	stp	x20, x19, [sp, #16]
  43b10c:	mov	x19, x0
  43b110:	ldr	w0, [x0]
  43b114:	mov	w2, #0x4900                	// #18688
  43b118:	mov	x29, sp
  43b11c:	bl	404cc0 <openat@plt>
  43b120:	tbnz	w0, #31, 43b13c <argp_parse@@Base+0xc480>
  43b124:	mov	w20, w0
  43b128:	mov	x0, x19
  43b12c:	bl	43b14c <argp_parse@@Base+0xc490>
  43b130:	mov	w0, wzr
  43b134:	str	w20, [x19]
  43b138:	b	43b140 <argp_parse@@Base+0xc484>
  43b13c:	mov	w0, #0xffffffff            	// #-1
  43b140:	ldp	x20, x19, [sp, #16]
  43b144:	ldp	x29, x30, [sp], #32
  43b148:	ret
  43b14c:	stp	x29, x30, [sp, #-16]!
  43b150:	ldr	w0, [x0]
  43b154:	mov	x29, sp
  43b158:	tbnz	w0, #31, 43b164 <argp_parse@@Base+0xc4a8>
  43b15c:	bl	4047a0 <close@plt>
  43b160:	cbnz	w0, 43b16c <argp_parse@@Base+0xc4b0>
  43b164:	ldp	x29, x30, [sp], #16
  43b168:	ret
  43b16c:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  43b170:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43b174:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  43b178:	add	x0, x0, #0x95c
  43b17c:	add	x1, x1, #0x8fe
  43b180:	add	x3, x3, #0x969
  43b184:	mov	w2, #0x40                  	// #64
  43b188:	bl	404cd0 <__assert_fail@plt>
  43b18c:	sub	sp, sp, #0x100
  43b190:	stp	x29, x30, [sp, #208]
  43b194:	add	x29, sp, #0xd0
  43b198:	mov	x8, #0xffffffffffffffd0    	// #-48
  43b19c:	mov	x9, sp
  43b1a0:	sub	x10, x29, #0x50
  43b1a4:	stp	x20, x19, [sp, #240]
  43b1a8:	mov	w19, w0
  43b1ac:	movk	x8, #0xff80, lsl #32
  43b1b0:	add	x11, x29, #0x30
  43b1b4:	cmp	w1, #0xb
  43b1b8:	add	x9, x9, #0x80
  43b1bc:	add	x10, x10, #0x30
  43b1c0:	stp	x22, x21, [sp, #224]
  43b1c4:	stp	x2, x3, [x29, #-80]
  43b1c8:	stp	x4, x5, [x29, #-64]
  43b1cc:	stp	x6, x7, [x29, #-48]
  43b1d0:	stp	q1, q2, [sp, #16]
  43b1d4:	stp	q3, q4, [sp, #48]
  43b1d8:	str	q0, [sp]
  43b1dc:	stp	q5, q6, [sp, #80]
  43b1e0:	str	q7, [sp, #112]
  43b1e4:	stp	x9, x8, [x29, #-16]
  43b1e8:	stp	x11, x10, [x29, #-32]
  43b1ec:	b.hi	43b238 <argp_parse@@Base+0xc57c>  // b.pmore
  43b1f0:	mov	w8, #0x1                   	// #1
  43b1f4:	lsl	w8, w8, w1
  43b1f8:	mov	w9, #0x514                 	// #1300
  43b1fc:	tst	w8, w9
  43b200:	b.ne	43b270 <argp_parse@@Base+0xc5b4>  // b.any
  43b204:	mov	w9, #0xa0a                 	// #2570
  43b208:	tst	w8, w9
  43b20c:	b.ne	43b264 <argp_parse@@Base+0xc5a8>  // b.any
  43b210:	cbnz	w1, 43b238 <argp_parse@@Base+0xc57c>
  43b214:	ldursw	x8, [x29, #-8]
  43b218:	tbz	w8, #31, 43b318 <argp_parse@@Base+0xc65c>
  43b21c:	add	w9, w8, #0x8
  43b220:	cmn	w8, #0x8
  43b224:	stur	w9, [x29, #-8]
  43b228:	b.gt	43b318 <argp_parse@@Base+0xc65c>
  43b22c:	ldur	x9, [x29, #-24]
  43b230:	add	x8, x9, x8
  43b234:	b	43b324 <argp_parse@@Base+0xc668>
  43b238:	sub	w8, w1, #0x400
  43b23c:	cmp	w8, #0xa
  43b240:	b.hi	43b2f4 <argp_parse@@Base+0xc638>  // b.pmore
  43b244:	mov	w9, #0x1                   	// #1
  43b248:	lsl	w9, w9, w8
  43b24c:	mov	w10, #0x285                 	// #645
  43b250:	tst	w9, w10
  43b254:	b.ne	43b270 <argp_parse@@Base+0xc5b4>  // b.any
  43b258:	mov	w10, #0x502                 	// #1282
  43b25c:	tst	w9, w10
  43b260:	b.eq	43b2c8 <argp_parse@@Base+0xc60c>  // b.none
  43b264:	mov	w0, w19
  43b268:	bl	404ac0 <fcntl@plt>
  43b26c:	b	43b2ac <argp_parse@@Base+0xc5f0>
  43b270:	ldursw	x8, [x29, #-8]
  43b274:	tbz	w8, #31, 43b294 <argp_parse@@Base+0xc5d8>
  43b278:	add	w9, w8, #0x8
  43b27c:	cmn	w8, #0x8
  43b280:	stur	w9, [x29, #-8]
  43b284:	b.gt	43b294 <argp_parse@@Base+0xc5d8>
  43b288:	ldur	x9, [x29, #-24]
  43b28c:	add	x8, x9, x8
  43b290:	b	43b2a0 <argp_parse@@Base+0xc5e4>
  43b294:	ldur	x8, [x29, #-32]
  43b298:	add	x9, x8, #0x8
  43b29c:	stur	x9, [x29, #-32]
  43b2a0:	ldr	w2, [x8]
  43b2a4:	mov	w0, w19
  43b2a8:	bl	404ac0 <fcntl@plt>
  43b2ac:	mov	w20, w0
  43b2b0:	mov	w0, w20
  43b2b4:	ldp	x20, x19, [sp, #240]
  43b2b8:	ldp	x22, x21, [sp, #224]
  43b2bc:	ldp	x29, x30, [sp, #208]
  43b2c0:	add	sp, sp, #0x100
  43b2c4:	ret
  43b2c8:	cmp	w8, #0x6
  43b2cc:	b.ne	43b2f4 <argp_parse@@Base+0xc638>  // b.any
  43b2d0:	ldursw	x8, [x29, #-8]
  43b2d4:	tbz	w8, #31, 43b334 <argp_parse@@Base+0xc678>
  43b2d8:	add	w9, w8, #0x8
  43b2dc:	cmn	w8, #0x8
  43b2e0:	stur	w9, [x29, #-8]
  43b2e4:	b.gt	43b334 <argp_parse@@Base+0xc678>
  43b2e8:	ldur	x9, [x29, #-24]
  43b2ec:	add	x8, x9, x8
  43b2f0:	b	43b340 <argp_parse@@Base+0xc684>
  43b2f4:	ldursw	x8, [x29, #-8]
  43b2f8:	tbz	w8, #31, 43b3a0 <argp_parse@@Base+0xc6e4>
  43b2fc:	add	w9, w8, #0x8
  43b300:	cmn	w8, #0x8
  43b304:	stur	w9, [x29, #-8]
  43b308:	b.gt	43b3a0 <argp_parse@@Base+0xc6e4>
  43b30c:	ldur	x9, [x29, #-24]
  43b310:	add	x8, x9, x8
  43b314:	b	43b3ac <argp_parse@@Base+0xc6f0>
  43b318:	ldur	x8, [x29, #-32]
  43b31c:	add	x9, x8, #0x8
  43b320:	stur	x9, [x29, #-32]
  43b324:	ldr	w2, [x8]
  43b328:	mov	w0, w19
  43b32c:	mov	w1, wzr
  43b330:	b	43b2a8 <argp_parse@@Base+0xc5ec>
  43b334:	ldur	x8, [x29, #-32]
  43b338:	add	x9, x8, #0x8
  43b33c:	stur	x9, [x29, #-32]
  43b340:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x2e808>
  43b344:	ldr	w9, [x22, #3352]
  43b348:	ldr	w21, [x8]
  43b34c:	tbnz	w9, #31, 43b3c8 <argp_parse@@Base+0xc70c>
  43b350:	mov	w1, #0x406                 	// #1030
  43b354:	mov	w0, w19
  43b358:	mov	w2, w21
  43b35c:	bl	404ac0 <fcntl@plt>
  43b360:	mov	w20, w0
  43b364:	tbz	w0, #31, 43b3bc <argp_parse@@Base+0xc700>
  43b368:	bl	404ce0 <__errno_location@plt>
  43b36c:	ldr	w8, [x0]
  43b370:	cmp	w8, #0x16
  43b374:	b.ne	43b3bc <argp_parse@@Base+0xc700>  // b.any
  43b378:	mov	w0, w19
  43b37c:	mov	w1, wzr
  43b380:	mov	w2, w21
  43b384:	bl	404ac0 <fcntl@plt>
  43b388:	mov	w20, w0
  43b38c:	tbnz	w0, #31, 43b2b0 <argp_parse@@Base+0xc5f4>
  43b390:	mov	w8, #0xffffffff            	// #-1
  43b394:	str	w8, [x22, #3352]
  43b398:	mov	w8, #0x1                   	// #1
  43b39c:	b	43b3e8 <argp_parse@@Base+0xc72c>
  43b3a0:	ldur	x8, [x29, #-32]
  43b3a4:	add	x9, x8, #0x8
  43b3a8:	stur	x9, [x29, #-32]
  43b3ac:	ldr	x2, [x8]
  43b3b0:	mov	w0, w19
  43b3b4:	bl	404ac0 <fcntl@plt>
  43b3b8:	b	43b2ac <argp_parse@@Base+0xc5f0>
  43b3bc:	mov	w8, #0x1                   	// #1
  43b3c0:	str	w8, [x22, #3352]
  43b3c4:	b	43b2b0 <argp_parse@@Base+0xc5f4>
  43b3c8:	mov	w0, w19
  43b3cc:	mov	w1, wzr
  43b3d0:	mov	w2, w21
  43b3d4:	bl	404ac0 <fcntl@plt>
  43b3d8:	ldr	w8, [x22, #3352]
  43b3dc:	mov	w20, w0
  43b3e0:	cmn	w8, #0x1
  43b3e4:	cset	w8, eq  // eq = none
  43b3e8:	cbz	w8, 43b2b0 <argp_parse@@Base+0xc5f4>
  43b3ec:	tbnz	w20, #31, 43b2b0 <argp_parse@@Base+0xc5f4>
  43b3f0:	mov	w1, #0x1                   	// #1
  43b3f4:	mov	w0, w20
  43b3f8:	bl	404ac0 <fcntl@plt>
  43b3fc:	tbnz	w0, #31, 43b418 <argp_parse@@Base+0xc75c>
  43b400:	orr	w2, w0, #0x1
  43b404:	mov	w1, #0x2                   	// #2
  43b408:	mov	w0, w20
  43b40c:	bl	404ac0 <fcntl@plt>
  43b410:	cmn	w0, #0x1
  43b414:	b.ne	43b2b0 <argp_parse@@Base+0xc5f4>  // b.any
  43b418:	bl	404ce0 <__errno_location@plt>
  43b41c:	ldr	w21, [x0]
  43b420:	mov	x19, x0
  43b424:	mov	w0, w20
  43b428:	bl	4047a0 <close@plt>
  43b42c:	str	w21, [x19]
  43b430:	mov	w20, #0xffffffff            	// #-1
  43b434:	b	43b2b0 <argp_parse@@Base+0xc5f4>
  43b438:	mov	w5, wzr
  43b43c:	mov	w6, wzr
  43b440:	b	44a1dc <_obstack_memory_used@@Base+0xe9e4>
  43b444:	mov	x6, x5
  43b448:	mov	w5, wzr
  43b44c:	mov	w7, wzr
  43b450:	b	4496f0 <_obstack_memory_used@@Base+0xdef8>
  43b454:	mov	w5, #0x1                   	// #1
  43b458:	mov	w6, wzr
  43b45c:	b	44a1dc <_obstack_memory_used@@Base+0xe9e4>
  43b460:	mov	x6, x5
  43b464:	mov	w5, #0x1                   	// #1
  43b468:	mov	w7, wzr
  43b46c:	b	4496f0 <_obstack_memory_used@@Base+0xdef8>
  43b470:	sub	sp, sp, #0x40
  43b474:	stp	x29, x30, [sp, #16]
  43b478:	add	x29, sp, #0x10
  43b47c:	cmp	x0, #0x0
  43b480:	sub	x8, x29, #0x4
  43b484:	stp	x20, x19, [sp, #48]
  43b488:	csel	x20, x8, x0, eq  // eq = none
  43b48c:	mov	x0, x20
  43b490:	stp	x22, x21, [sp, #32]
  43b494:	mov	x22, x2
  43b498:	mov	x19, x1
  43b49c:	bl	4040e0 <mbrtowc@plt>
  43b4a0:	mov	x21, x0
  43b4a4:	cbz	x22, 43b4c8 <argp_parse@@Base+0xc80c>
  43b4a8:	cmn	x21, #0x2
  43b4ac:	b.cc	43b4c8 <argp_parse@@Base+0xc80c>  // b.lo, b.ul, b.last
  43b4b0:	mov	w0, wzr
  43b4b4:	bl	447ed0 <_obstack_memory_used@@Base+0xc6d8>
  43b4b8:	tbnz	w0, #0, 43b4c8 <argp_parse@@Base+0xc80c>
  43b4bc:	ldrb	w8, [x19]
  43b4c0:	mov	w21, #0x1                   	// #1
  43b4c4:	str	w8, [x20]
  43b4c8:	mov	x0, x21
  43b4cc:	ldp	x20, x19, [sp, #48]
  43b4d0:	ldp	x22, x21, [sp, #32]
  43b4d4:	ldp	x29, x30, [sp, #16]
  43b4d8:	add	sp, sp, #0x40
  43b4dc:	ret

000000000043b4e0 <_obstack_begin@@Base>:
  43b4e0:	stp	x29, x30, [sp, #-16]!
  43b4e4:	ldrb	w8, [x0, #80]
  43b4e8:	mov	x29, sp
  43b4ec:	stp	x3, x4, [x0, #56]
  43b4f0:	and	w8, w8, #0xfe
  43b4f4:	strb	w8, [x0, #80]
  43b4f8:	bl	43b508 <_obstack_begin@@Base+0x28>
  43b4fc:	mov	w0, #0x1                   	// #1
  43b500:	ldp	x29, x30, [sp], #16
  43b504:	ret
  43b508:	stp	x29, x30, [sp, #-48]!
  43b50c:	stp	x20, x19, [sp, #32]
  43b510:	ldrb	w10, [x0, #80]
  43b514:	cmp	x2, #0x0
  43b518:	mov	w8, #0x10                  	// #16
  43b51c:	mov	w9, #0xfe0                 	// #4064
  43b520:	csel	x20, x8, x2, eq  // eq = none
  43b524:	cmp	x1, #0x0
  43b528:	str	x21, [sp, #16]
  43b52c:	mov	x19, x0
  43b530:	csel	x1, x9, x1, eq  // eq = none
  43b534:	sub	x21, x20, #0x1
  43b538:	mov	x29, sp
  43b53c:	str	x1, [x0]
  43b540:	str	x21, [x0, #48]
  43b544:	tbnz	w10, #0, 43b558 <_obstack_begin@@Base+0x78>
  43b548:	ldr	x8, [x19, #56]
  43b54c:	mov	x0, x1
  43b550:	blr	x8
  43b554:	b	43b564 <_obstack_begin@@Base+0x84>
  43b558:	ldr	x8, [x19, #56]
  43b55c:	ldr	x0, [x19, #72]
  43b560:	blr	x8
  43b564:	str	x0, [x19, #8]
  43b568:	cbz	x0, 43b5b0 <_obstack_begin@@Base+0xd0>
  43b56c:	ldr	x10, [x19]
  43b570:	add	x8, x0, x21
  43b574:	neg	x9, x20
  43b578:	add	x8, x8, #0x10
  43b57c:	and	x8, x8, x9
  43b580:	stp	x8, x8, [x19, #16]
  43b584:	add	x8, x0, x10
  43b588:	str	x8, [x0]
  43b58c:	str	x8, [x19, #32]
  43b590:	str	xzr, [x0, #8]
  43b594:	ldrb	w8, [x19, #80]
  43b598:	ldr	x21, [sp, #16]
  43b59c:	and	w8, w8, #0xfffffff9
  43b5a0:	strb	w8, [x19, #80]
  43b5a4:	ldp	x20, x19, [sp, #32]
  43b5a8:	ldp	x29, x30, [sp], #48
  43b5ac:	ret
  43b5b0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  43b5b4:	ldr	x8, [x8, #592]
  43b5b8:	blr	x8

000000000043b5bc <_obstack_begin_1@@Base>:
  43b5bc:	stp	x29, x30, [sp, #-16]!
  43b5c0:	ldrb	w8, [x0, #80]
  43b5c4:	mov	x29, sp
  43b5c8:	stp	x3, x4, [x0, #56]
  43b5cc:	str	x5, [x0, #72]
  43b5d0:	orr	w8, w8, #0x1
  43b5d4:	strb	w8, [x0, #80]
  43b5d8:	bl	43b508 <_obstack_begin@@Base+0x28>
  43b5dc:	mov	w0, #0x1                   	// #1
  43b5e0:	ldp	x29, x30, [sp], #16
  43b5e4:	ret

000000000043b5e8 <_obstack_newchunk@@Base>:
  43b5e8:	stp	x29, x30, [sp, #-64]!
  43b5ec:	str	x23, [sp, #16]
  43b5f0:	stp	x22, x21, [sp, #32]
  43b5f4:	stp	x20, x19, [sp, #48]
  43b5f8:	ldp	x9, x8, [x0, #16]
  43b5fc:	ldr	x10, [x0, #48]
  43b600:	ldr	x11, [x0]
  43b604:	mov	x29, sp
  43b608:	sub	x20, x8, x9
  43b60c:	adds	x8, x20, x1
  43b610:	lsr	x9, x20, #3
  43b614:	cset	w12, cs  // cs = hs, nlast
  43b618:	adds	x10, x8, x10
  43b61c:	add	x9, x9, #0x64
  43b620:	cset	w8, cs  // cs = hs, nlast
  43b624:	adds	x9, x9, x10
  43b628:	csel	x9, x10, x9, cs  // cs = hs, nlast
  43b62c:	cmp	x9, x11
  43b630:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  43b634:	tbnz	w12, #0, 43b720 <_obstack_newchunk@@Base+0x138>
  43b638:	tbnz	w8, #0, 43b720 <_obstack_newchunk@@Base+0x138>
  43b63c:	ldrb	w8, [x0, #80]
  43b640:	ldr	x21, [x0, #8]
  43b644:	mov	x19, x0
  43b648:	tbnz	w8, #0, 43b65c <_obstack_newchunk@@Base+0x74>
  43b64c:	ldr	x8, [x19, #56]
  43b650:	mov	x0, x23
  43b654:	blr	x8
  43b658:	b	43b66c <_obstack_newchunk@@Base+0x84>
  43b65c:	ldr	x8, [x19, #56]
  43b660:	ldr	x0, [x19, #72]
  43b664:	mov	x1, x23
  43b668:	blr	x8
  43b66c:	mov	x22, x0
  43b670:	cbz	x0, 43b720 <_obstack_newchunk@@Base+0x138>
  43b674:	add	x8, x22, x23
  43b678:	str	x22, [x19, #8]
  43b67c:	str	x21, [x22, #8]
  43b680:	str	x8, [x19, #32]
  43b684:	str	x8, [x22]
  43b688:	ldr	x8, [x19, #48]
  43b68c:	ldr	x1, [x19, #16]
  43b690:	mov	x2, x20
  43b694:	add	x9, x22, x8
  43b698:	add	x9, x9, #0x10
  43b69c:	bic	x23, x9, x8
  43b6a0:	mov	x0, x23
  43b6a4:	bl	4040f0 <memcpy@plt>
  43b6a8:	ldrb	w8, [x19, #80]
  43b6ac:	tbnz	w8, #1, 43b6f8 <_obstack_newchunk@@Base+0x110>
  43b6b0:	ldr	x8, [x19, #48]
  43b6b4:	ldr	x9, [x19, #16]
  43b6b8:	add	x10, x21, x8
  43b6bc:	add	x10, x10, #0x10
  43b6c0:	bic	x8, x10, x8
  43b6c4:	cmp	x9, x8
  43b6c8:	b.ne	43b6f8 <_obstack_newchunk@@Base+0x110>  // b.any
  43b6cc:	ldr	x8, [x21, #8]
  43b6d0:	str	x8, [x22, #8]
  43b6d4:	ldrb	w8, [x19, #80]
  43b6d8:	tbnz	w8, #0, 43b6ec <_obstack_newchunk@@Base+0x104>
  43b6dc:	ldr	x8, [x19, #64]
  43b6e0:	mov	x0, x21
  43b6e4:	blr	x8
  43b6e8:	b	43b6f8 <_obstack_newchunk@@Base+0x110>
  43b6ec:	ldp	x8, x0, [x19, #64]
  43b6f0:	mov	x1, x21
  43b6f4:	blr	x8
  43b6f8:	ldrb	w8, [x19, #80]
  43b6fc:	add	x9, x23, x20
  43b700:	stp	x23, x9, [x19, #16]
  43b704:	ldr	x23, [sp, #16]
  43b708:	and	w8, w8, #0xfffffffd
  43b70c:	strb	w8, [x19, #80]
  43b710:	ldp	x20, x19, [sp, #48]
  43b714:	ldp	x22, x21, [sp, #32]
  43b718:	ldp	x29, x30, [sp], #64
  43b71c:	ret
  43b720:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  43b724:	ldr	x8, [x8, #592]
  43b728:	blr	x8

000000000043b72c <_obstack_allocated_p@@Base>:
  43b72c:	ldr	x8, [x0, #8]
  43b730:	cbz	x8, 43b750 <_obstack_allocated_p@@Base+0x24>
  43b734:	cmp	x8, x1
  43b738:	b.cs	43b748 <_obstack_allocated_p@@Base+0x1c>  // b.hs, b.nlast
  43b73c:	ldr	x9, [x8]
  43b740:	cmp	x9, x1
  43b744:	b.cs	43b758 <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  43b748:	ldr	x8, [x8, #8]
  43b74c:	cbnz	x8, 43b734 <_obstack_allocated_p@@Base+0x8>
  43b750:	mov	w0, wzr
  43b754:	ret
  43b758:	mov	w0, #0x1                   	// #1
  43b75c:	ret

000000000043b760 <_obstack_free@@Base>:
  43b760:	stp	x29, x30, [sp, #-48]!
  43b764:	stp	x20, x19, [sp, #32]
  43b768:	ldr	x8, [x0, #8]
  43b76c:	mov	x20, x1
  43b770:	str	x21, [sp, #16]
  43b774:	mov	x29, sp
  43b778:	cbz	x8, 43b7d0 <_obstack_free@@Base+0x70>
  43b77c:	mov	x19, x0
  43b780:	cmp	x8, x20
  43b784:	b.cs	43b794 <_obstack_free@@Base+0x34>  // b.hs, b.nlast
  43b788:	ldr	x9, [x8]
  43b78c:	cmp	x9, x20
  43b790:	b.cs	43b7d8 <_obstack_free@@Base+0x78>  // b.hs, b.nlast
  43b794:	ldrb	w9, [x19, #80]
  43b798:	ldr	x21, [x8, #8]
  43b79c:	tbnz	w9, #0, 43b7b0 <_obstack_free@@Base+0x50>
  43b7a0:	ldr	x9, [x19, #64]
  43b7a4:	mov	x0, x8
  43b7a8:	blr	x9
  43b7ac:	b	43b7bc <_obstack_free@@Base+0x5c>
  43b7b0:	ldp	x9, x0, [x19, #64]
  43b7b4:	mov	x1, x8
  43b7b8:	blr	x9
  43b7bc:	ldrb	w8, [x19, #80]
  43b7c0:	orr	w8, w8, #0x2
  43b7c4:	strb	w8, [x19, #80]
  43b7c8:	mov	x8, x21
  43b7cc:	cbnz	x21, 43b780 <_obstack_free@@Base+0x20>
  43b7d0:	cbz	x20, 43b7e8 <_obstack_free@@Base+0x88>
  43b7d4:	bl	404850 <abort@plt>
  43b7d8:	stp	x20, x20, [x19, #16]
  43b7dc:	ldr	x9, [x8]
  43b7e0:	str	x8, [x19, #8]
  43b7e4:	str	x9, [x19, #32]
  43b7e8:	ldp	x20, x19, [sp, #32]
  43b7ec:	ldr	x21, [sp, #16]
  43b7f0:	ldp	x29, x30, [sp], #48
  43b7f4:	ret

000000000043b7f8 <_obstack_memory_used@@Base>:
  43b7f8:	ldr	x8, [x0, #8]
  43b7fc:	cbz	x8, 43b818 <_obstack_memory_used@@Base+0x20>
  43b800:	mov	x0, xzr
  43b804:	sub	x10, x0, x8
  43b808:	ldp	x9, x8, [x8]
  43b80c:	add	x0, x10, x9
  43b810:	cbnz	x8, 43b804 <_obstack_memory_used@@Base+0xc>
  43b814:	ret
  43b818:	mov	x0, xzr
  43b81c:	ret
  43b820:	stp	x29, x30, [sp, #-32]!
  43b824:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  43b828:	str	x19, [sp, #16]
  43b82c:	ldr	x19, [x8, #624]
  43b830:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x10808>
  43b834:	add	x1, x1, #0xa73
  43b838:	mov	w2, #0x5                   	// #5
  43b83c:	mov	x0, xzr
  43b840:	mov	x29, sp
  43b844:	bl	404bd0 <dcgettext@plt>
  43b848:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  43b84c:	mov	x3, x0
  43b850:	add	x2, x2, #0x893
  43b854:	mov	w1, #0x1                   	// #1
  43b858:	mov	x0, x19
  43b85c:	bl	4048f0 <__fprintf_chk@plt>
  43b860:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  43b864:	ldr	w0, [x8, #496]
  43b868:	bl	4041a0 <exit@plt>
  43b86c:	sub	sp, sp, #0x60
  43b870:	stp	x29, x30, [sp, #32]
  43b874:	stp	x24, x23, [sp, #48]
  43b878:	stp	x22, x21, [sp, #64]
  43b87c:	stp	x20, x19, [sp, #80]
  43b880:	ldrb	w8, [x2]
  43b884:	mov	x19, x0
  43b888:	add	x29, sp, #0x20
  43b88c:	cbz	w8, 43b8f4 <_obstack_memory_used@@Base+0xfc>
  43b890:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x2e808>
  43b894:	ldr	w8, [x23, #3356]
  43b898:	mov	x20, x2
  43b89c:	mov	w21, w1
  43b8a0:	cbz	w8, 43b8fc <_obstack_memory_used@@Base+0x104>
  43b8a4:	tbnz	w8, #31, 43b95c <_obstack_memory_used@@Base+0x164>
  43b8a8:	mov	x0, x20
  43b8ac:	bl	404170 <strlen@plt>
  43b8b0:	add	x0, x0, #0x1b
  43b8b4:	cmp	x0, #0xfc1
  43b8b8:	b.cc	43b8c8 <_obstack_memory_used@@Base+0xd0>  // b.lo, b.ul, b.last
  43b8bc:	bl	4044d0 <malloc@plt>
  43b8c0:	mov	x19, x0
  43b8c4:	cbz	x0, 43b970 <_obstack_memory_used@@Base+0x178>
  43b8c8:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  43b8cc:	add	x3, x3, #0x9b3
  43b8d0:	mov	w1, #0x1                   	// #1
  43b8d4:	mov	x2, #0xffffffffffffffff    	// #-1
  43b8d8:	mov	x0, x19
  43b8dc:	mov	w4, w21
  43b8e0:	bl	404190 <__sprintf_chk@plt>
  43b8e4:	add	x0, x19, w0, sxtw
  43b8e8:	mov	x1, x20
  43b8ec:	bl	404b00 <strcpy@plt>
  43b8f0:	b	43b970 <_obstack_memory_used@@Base+0x178>
  43b8f4:	strb	wzr, [x19]
  43b8f8:	b	43b970 <_obstack_memory_used@@Base+0x178>
  43b8fc:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  43b900:	add	x0, x0, #0x98e
  43b904:	mov	w1, #0x4900                	// #18688
  43b908:	bl	404510 <open@plt>
  43b90c:	tbnz	w0, #31, 43b964 <_obstack_memory_used@@Base+0x16c>
  43b910:	mov	w22, w0
  43b914:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  43b918:	add	x3, x3, #0x99c
  43b91c:	mov	x0, sp
  43b920:	mov	w1, #0x1                   	// #1
  43b924:	mov	w2, #0x20                  	// #32
  43b928:	mov	w4, w22
  43b92c:	mov	w24, #0x1                   	// #1
  43b930:	bl	404190 <__sprintf_chk@plt>
  43b934:	mov	x0, sp
  43b938:	mov	w1, wzr
  43b93c:	bl	404880 <access@plt>
  43b940:	cmp	w0, #0x0
  43b944:	cneg	w8, w24, ne  // ne = any
  43b948:	mov	w0, w22
  43b94c:	str	w8, [x23, #3356]
  43b950:	bl	4047a0 <close@plt>
  43b954:	ldr	w8, [x23, #3356]
  43b958:	tbz	w8, #31, 43b8a8 <_obstack_memory_used@@Base+0xb0>
  43b95c:	mov	x19, xzr
  43b960:	b	43b970 <_obstack_memory_used@@Base+0x178>
  43b964:	mov	w8, #0xffffffff            	// #-1
  43b968:	mov	x19, xzr
  43b96c:	str	w8, [x23, #3356]
  43b970:	mov	x0, x19
  43b974:	ldp	x20, x19, [sp, #80]
  43b978:	ldp	x22, x21, [sp, #64]
  43b97c:	ldp	x24, x23, [sp, #48]
  43b980:	ldp	x29, x30, [sp, #32]
  43b984:	add	sp, sp, #0x60
  43b988:	ret
  43b98c:	stp	x29, x30, [sp, #-16]!
  43b990:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  43b994:	ldr	x3, [x9, #528]
  43b998:	ldrb	w9, [x2, #56]
  43b99c:	mov	x8, x1
  43b9a0:	mov	x1, x0
  43b9a4:	ubfx	x10, x3, #21, #11
  43b9a8:	and	w10, w10, #0x10
  43b9ac:	and	w9, w9, #0xffffffef
  43b9b0:	orr	w9, w9, w10
  43b9b4:	orr	w9, w9, #0x80
  43b9b8:	strb	w9, [x2, #56]
  43b9bc:	mov	x0, x2
  43b9c0:	mov	x2, x8
  43b9c4:	mov	x29, sp
  43b9c8:	bl	43ba04 <_obstack_memory_used@@Base+0x20c>
  43b9cc:	cbz	w0, 43b9f8 <_obstack_memory_used@@Base+0x200>
  43b9d0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x19808>
  43b9d4:	add	x8, x8, #0xc10
  43b9d8:	ldr	x8, [x8, w0, sxtw #3]
  43b9dc:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x19808>
  43b9e0:	add	x9, x9, #0xa8f
  43b9e4:	mov	w2, #0x5                   	// #5
  43b9e8:	add	x1, x9, x8
  43b9ec:	mov	x0, xzr
  43b9f0:	ldp	x29, x30, [sp], #16
  43b9f4:	b	404bd0 <dcgettext@plt>
  43b9f8:	mov	x0, xzr
  43b9fc:	ldp	x29, x30, [sp], #16
  43ba00:	ret
  43ba04:	sub	sp, sp, #0x140
  43ba08:	stp	x29, x30, [sp, #224]
  43ba0c:	add	x29, sp, #0xe0
  43ba10:	stp	x28, x27, [sp, #240]
  43ba14:	stp	x26, x25, [sp, #256]
  43ba18:	stp	x24, x23, [sp, #272]
  43ba1c:	stp	x22, x21, [sp, #288]
  43ba20:	stp	x20, x19, [sp, #304]
  43ba24:	str	x1, [sp, #8]
  43ba28:	stur	wzr, [x29, #-52]
  43ba2c:	ldrb	w8, [x0, #56]
  43ba30:	ldp	x20, x9, [x0]
  43ba34:	mov	w10, #0x90                  	// #144
  43ba38:	mov	x21, x3
  43ba3c:	mov	x22, x2
  43ba40:	mov	x19, x0
  43ba44:	and	w8, w8, w10
  43ba48:	cmp	x9, #0xe7
  43ba4c:	stp	xzr, x3, [x0, #16]
  43ba50:	str	xzr, [x0, #48]
  43ba54:	strb	w8, [x0, #56]
  43ba58:	b.ls	43c470 <_obstack_memory_used@@Base+0xc78>  // b.plast
  43ba5c:	mov	w8, #0xe8                  	// #232
  43ba60:	mov	w2, #0xe8                  	// #232
  43ba64:	mov	x0, x20
  43ba68:	mov	w1, wzr
  43ba6c:	str	x8, [x19, #16]
  43ba70:	bl	4045e0 <memset@plt>
  43ba74:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  43ba78:	movk	x9, #0x5554
  43ba7c:	movk	x9, #0x555, lsl #48
  43ba80:	mov	w8, #0xf                   	// #15
  43ba84:	cmp	x22, x9
  43ba88:	str	w8, [x20, #128]
  43ba8c:	b.hi	43bc8c <_obstack_memory_used@@Base+0x494>  // b.pmore
  43ba90:	add	x24, x22, #0x1
  43ba94:	lsl	x0, x24, #4
  43ba98:	str	x24, [x20, #8]
  43ba9c:	bl	4044d0 <malloc@plt>
  43baa0:	mov	w8, #0x1                   	// #1
  43baa4:	str	x0, [x20]
  43baa8:	mov	x25, x8
  43baac:	cmp	x8, x22
  43bab0:	lsl	x8, x8, #1
  43bab4:	b.ls	43baa8 <_obstack_memory_used@@Base+0x2b0>  // b.plast
  43bab8:	mov	w0, #0x18                  	// #24
  43babc:	mov	x1, x25
  43bac0:	bl	404680 <calloc@plt>
  43bac4:	sub	x8, x25, #0x1
  43bac8:	str	x0, [x20, #64]
  43bacc:	str	x8, [x20, #136]
  43bad0:	bl	4049e0 <__ctype_get_mb_cur_max@plt>
  43bad4:	str	w0, [x20, #180]
  43bad8:	mov	w0, #0xe                   	// #14
  43badc:	bl	404490 <nl_langinfo@plt>
  43bae0:	ldrb	w8, [x0]
  43bae4:	orr	w8, w8, #0x20
  43bae8:	cmp	w8, #0x75
  43baec:	b.ne	43bb38 <_obstack_memory_used@@Base+0x340>  // b.any
  43baf0:	ldrb	w8, [x0, #1]
  43baf4:	orr	w8, w8, #0x20
  43baf8:	cmp	w8, #0x74
  43bafc:	b.ne	43bb38 <_obstack_memory_used@@Base+0x340>  // b.any
  43bb00:	ldrb	w8, [x0, #2]
  43bb04:	orr	w8, w8, #0x20
  43bb08:	cmp	w8, #0x66
  43bb0c:	b.ne	43bb38 <_obstack_memory_used@@Base+0x340>  // b.any
  43bb10:	ldrb	w8, [x0, #3]!
  43bb14:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x16808>
  43bb18:	add	x1, x1, #0x12c
  43bb1c:	cmp	w8, #0x2d
  43bb20:	cinc	x0, x0, eq  // eq = none
  43bb24:	bl	404900 <strcmp@plt>
  43bb28:	cbnz	w0, 43bb38 <_obstack_memory_used@@Base+0x340>
  43bb2c:	ldrb	w8, [x20, #176]
  43bb30:	orr	w8, w8, #0x4
  43bb34:	strb	w8, [x20, #176]
  43bb38:	ldrb	w8, [x20, #176]
  43bb3c:	ldr	w9, [x20, #180]
  43bb40:	and	w10, w8, #0xfffffff7
  43bb44:	cmp	w9, #0x2
  43bb48:	strb	w10, [x20, #176]
  43bb4c:	b.lt	43bbec <_obstack_memory_used@@Base+0x3f4>  // b.tstop
  43bb50:	tbnz	w8, #2, 43bbe0 <_obstack_memory_used@@Base+0x3e8>
  43bb54:	mov	w0, #0x20                  	// #32
  43bb58:	mov	w1, #0x1                   	// #1
  43bb5c:	bl	404680 <calloc@plt>
  43bb60:	str	x0, [x20, #120]
  43bb64:	cbz	x0, 43bc8c <_obstack_memory_used@@Base+0x494>
  43bb68:	mov	x26, xzr
  43bb6c:	mov	w8, wzr
  43bb70:	mov	w27, #0x1                   	// #1
  43bb74:	mov	x28, xzr
  43bb78:	mov	w23, w8
  43bb7c:	add	x25, x23, x28
  43bb80:	mov	w0, w25
  43bb84:	bl	404830 <btowc@plt>
  43bb88:	cmn	w0, #0x1
  43bb8c:	b.eq	43bba4 <_obstack_memory_used@@Base+0x3ac>  // b.none
  43bb90:	ldr	x8, [x20, #120]
  43bb94:	lsl	x10, x27, x28
  43bb98:	ldr	x9, [x8, x26, lsl #3]
  43bb9c:	orr	x9, x9, x10
  43bba0:	str	x9, [x8, x26, lsl #3]
  43bba4:	cmp	w25, #0x7f
  43bba8:	b.hi	43bbc0 <_obstack_memory_used@@Base+0x3c8>  // b.pmore
  43bbac:	cmp	w25, w0
  43bbb0:	b.eq	43bbc0 <_obstack_memory_used@@Base+0x3c8>  // b.none
  43bbb4:	ldrb	w8, [x20, #176]
  43bbb8:	orr	w8, w8, #0x8
  43bbbc:	strb	w8, [x20, #176]
  43bbc0:	add	x28, x28, #0x1
  43bbc4:	cmp	x28, #0x40
  43bbc8:	b.ne	43bb7c <_obstack_memory_used@@Base+0x384>  // b.any
  43bbcc:	add	x26, x26, #0x1
  43bbd0:	cmp	x26, #0x4
  43bbd4:	add	w8, w23, w28
  43bbd8:	b.ne	43bb74 <_obstack_memory_used@@Base+0x37c>  // b.any
  43bbdc:	b	43bbec <_obstack_memory_used@@Base+0x3f4>
  43bbe0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x19808>
  43bbe4:	add	x8, x8, #0xc98
  43bbe8:	str	x8, [x20, #120]
  43bbec:	ldr	x8, [x20]
  43bbf0:	cbz	x8, 43bc8c <_obstack_memory_used@@Base+0x494>
  43bbf4:	ldr	x8, [x20, #64]
  43bbf8:	cbz	x8, 43bc8c <_obstack_memory_used@@Base+0x494>
  43bbfc:	stur	wzr, [x29, #-52]
  43bc00:	ldr	x26, [x19, #40]
  43bc04:	add	x8, sp, #0x10
  43bc08:	and	x25, x21, #0x400000
  43bc0c:	add	x0, x8, #0x8
  43bc10:	mov	w2, #0x90                  	// #144
  43bc14:	mov	w1, wzr
  43bc18:	orr	x23, x25, x26
  43bc1c:	bl	4045e0 <memset@plt>
  43bc20:	ldr	x9, [sp, #8]
  43bc24:	cmp	x23, #0x0
  43bc28:	ubfx	x8, x21, #22, #1
  43bc2c:	stp	x22, x22, [sp, #96]
  43bc30:	str	x9, [sp, #16]
  43bc34:	cset	w9, ne  // ne = any
  43bc38:	str	x26, [sp, #136]
  43bc3c:	strb	w8, [sp, #152]
  43bc40:	strb	w9, [sp, #155]
  43bc44:	ldr	w8, [x20, #180]
  43bc48:	cmp	x22, #0x1
  43bc4c:	str	w8, [sp, #160]
  43bc50:	ldrb	w10, [x20, #176]
  43bc54:	stp	x22, x22, [sp, #112]
  43bc58:	ubfx	w11, w10, #2, #1
  43bc5c:	ubfx	w10, w10, #3, #1
  43bc60:	strb	w11, [sp, #153]
  43bc64:	strb	w10, [sp, #154]
  43bc68:	b.lt	43bca4 <_obstack_memory_used@@Base+0x4ac>  // b.tstop
  43bc6c:	add	x0, sp, #0x10
  43bc70:	mov	x1, x24
  43bc74:	bl	43ec60 <_obstack_memory_used@@Base+0x3468>
  43bc78:	cbnz	w0, 43c3dc <_obstack_memory_used@@Base+0xbe4>
  43bc7c:	ldrb	w9, [sp, #155]
  43bc80:	ldr	x10, [sp, #24]
  43bc84:	ldr	w8, [x20, #180]
  43bc88:	b	43bca8 <_obstack_memory_used@@Base+0x4b0>
  43bc8c:	mov	w21, #0xc                   	// #12
  43bc90:	mov	x0, x20
  43bc94:	stur	w21, [x29, #-52]
  43bc98:	bl	43ca84 <_obstack_memory_used@@Base+0x128c>
  43bc9c:	stp	xzr, xzr, [x19]
  43bca0:	b	43c3b4 <_obstack_memory_used@@Base+0xbbc>
  43bca4:	mov	x10, xzr
  43bca8:	cmp	w9, #0x0
  43bcac:	ldr	x9, [sp, #8]
  43bcb0:	csel	x10, x9, x10, eq  // eq = none
  43bcb4:	cmp	w8, #0x2
  43bcb8:	str	x10, [sp, #24]
  43bcbc:	cbz	x25, 43bd08 <_obstack_memory_used@@Base+0x510>
  43bcc0:	b.lt	43bd18 <_obstack_memory_used@@Base+0x520>  // b.tstop
  43bcc4:	add	x0, sp, #0x10
  43bcc8:	bl	43ecf0 <_obstack_memory_used@@Base+0x34f8>
  43bccc:	cbnz	w0, 43c3dc <_obstack_memory_used@@Base+0xbe4>
  43bcd0:	ldr	x8, [sp, #72]
  43bcd4:	cmp	x8, x22
  43bcd8:	b.ge	43bd9c <_obstack_memory_used@@Base+0x5a4>  // b.tcont
  43bcdc:	ldr	x9, [sp, #64]
  43bce0:	ldrsw	x10, [x20, #180]
  43bce4:	ldr	x8, [sp, #80]
  43bce8:	add	x9, x9, x10
  43bcec:	cmp	x8, x9
  43bcf0:	b.gt	43bd9c <_obstack_memory_used@@Base+0x5a4>
  43bcf4:	lsl	x1, x8, #1
  43bcf8:	add	x0, sp, #0x10
  43bcfc:	bl	43ec60 <_obstack_memory_used@@Base+0x3468>
  43bd00:	cbz	w0, 43bcc4 <_obstack_memory_used@@Base+0x4cc>
  43bd04:	b	43c3dc <_obstack_memory_used@@Base+0xbe4>
  43bd08:	b.lt	43bd24 <_obstack_memory_used@@Base+0x52c>  // b.tstop
  43bd0c:	add	x0, sp, #0x10
  43bd10:	bl	43f2b0 <_obstack_memory_used@@Base+0x3ab8>
  43bd14:	b	43bd9c <_obstack_memory_used@@Base+0x5a4>
  43bd18:	add	x0, sp, #0x10
  43bd1c:	bl	43f238 <_obstack_memory_used@@Base+0x3a40>
  43bd20:	b	43bd9c <_obstack_memory_used@@Base+0x5a4>
  43bd24:	ldr	x9, [sp, #80]
  43bd28:	cbz	x26, 43bd98 <_obstack_memory_used@@Base+0x5a0>
  43bd2c:	ldr	x11, [sp, #104]
  43bd30:	ldr	x8, [sp, #64]
  43bd34:	cmp	x9, x11
  43bd38:	csel	x9, x11, x9, gt
  43bd3c:	cmp	x8, x9
  43bd40:	b.ge	43bd90 <_obstack_memory_used@@Base+0x598>  // b.tcont
  43bd44:	ldr	x11, [sp, #56]
  43bd48:	ldr	x12, [sp, #16]
  43bd4c:	ldr	x13, [sp, #136]
  43bd50:	add	x11, x11, x8
  43bd54:	ldrb	w11, [x12, x11]
  43bd58:	ldrb	w11, [x13, x11]
  43bd5c:	strb	w11, [x10, x8]
  43bd60:	add	x8, x8, #0x1
  43bd64:	cmp	x8, x9
  43bd68:	b.ge	43bd90 <_obstack_memory_used@@Base+0x598>  // b.tcont
  43bd6c:	ldr	x10, [sp, #16]
  43bd70:	ldr	x11, [sp, #56]
  43bd74:	ldr	x12, [sp, #136]
  43bd78:	add	x10, x10, x11
  43bd7c:	ldrb	w10, [x10, x8]
  43bd80:	ldr	x11, [sp, #24]
  43bd84:	ldrb	w10, [x12, x10]
  43bd88:	strb	w10, [x11, x8]
  43bd8c:	b	43bd60 <_obstack_memory_used@@Base+0x568>
  43bd90:	stp	x8, x8, [sp, #64]
  43bd94:	b	43bd9c <_obstack_memory_used@@Base+0x5a4>
  43bd98:	stp	x9, x9, [sp, #64]
  43bd9c:	stur	wzr, [x29, #-52]
  43bda0:	ldr	x22, [x19]
  43bda4:	orr	x2, x21, #0x800000
  43bda8:	sub	x0, x29, #0x30
  43bdac:	add	x1, sp, #0x10
  43bdb0:	str	xzr, [x19, #48]
  43bdb4:	str	x21, [x22, #216]
  43bdb8:	bl	43f650 <_obstack_memory_used@@Base+0x3e58>
  43bdbc:	ldr	x8, [sp, #88]
  43bdc0:	sub	x2, x29, #0x30
  43bdc4:	sub	x5, x29, #0x34
  43bdc8:	mov	x1, x19
  43bdcc:	add	x8, x8, w0, sxtw
  43bdd0:	add	x0, sp, #0x10
  43bdd4:	mov	x3, x21
  43bdd8:	mov	x4, xzr
  43bddc:	str	x8, [sp, #88]
  43bde0:	bl	43f4cc <_obstack_memory_used@@Base+0x3cd4>
  43bde4:	mov	x21, x0
  43bde8:	cbnz	x0, 43bdf4 <_obstack_memory_used@@Base+0x5fc>
  43bdec:	ldur	w8, [x29, #-52]
  43bdf0:	cbnz	w8, 43c4a0 <_obstack_memory_used@@Base+0xca8>
  43bdf4:	mov	w8, #0x2                   	// #2
  43bdf8:	sub	x3, x29, #0x20
  43bdfc:	mov	x0, x22
  43be00:	mov	x1, xzr
  43be04:	mov	x2, xzr
  43be08:	stur	w8, [x29, #-24]
  43be0c:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  43be10:	mov	x23, x0
  43be14:	cbz	x21, 43be34 <_obstack_memory_used@@Base+0x63c>
  43be18:	mov	w8, #0x10                  	// #16
  43be1c:	sub	x3, x29, #0x20
  43be20:	mov	x0, x22
  43be24:	mov	x1, x21
  43be28:	mov	x2, x23
  43be2c:	stur	w8, [x29, #-24]
  43be30:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  43be34:	cbz	x23, 43c498 <_obstack_memory_used@@Base+0xca0>
  43be38:	cbz	x0, 43c498 <_obstack_memory_used@@Base+0xca0>
  43be3c:	str	x0, [x20, #104]
  43be40:	ldr	x21, [x19]
  43be44:	ldr	x8, [x21, #8]
  43be48:	lsl	x0, x8, #3
  43be4c:	bl	4044d0 <malloc@plt>
  43be50:	ldr	x8, [x21, #8]
  43be54:	str	x0, [x21, #24]
  43be58:	lsl	x0, x8, #3
  43be5c:	bl	4044d0 <malloc@plt>
  43be60:	ldr	x8, [x21, #8]
  43be64:	str	x0, [x21, #32]
  43be68:	add	x8, x8, x8, lsl #1
  43be6c:	lsl	x0, x8, #3
  43be70:	bl	4044d0 <malloc@plt>
  43be74:	ldr	x8, [x21, #8]
  43be78:	str	x0, [x21, #40]
  43be7c:	add	x8, x8, x8, lsl #1
  43be80:	lsl	x0, x8, #3
  43be84:	bl	4044d0 <malloc@plt>
  43be88:	ldr	x9, [x21, #24]
  43be8c:	str	x0, [x21, #48]
  43be90:	cbz	x9, 43c3d8 <_obstack_memory_used@@Base+0xbe0>
  43be94:	ldr	x9, [x21, #32]
  43be98:	cbz	x9, 43c3d8 <_obstack_memory_used@@Base+0xbe0>
  43be9c:	mov	x8, x0
  43bea0:	mov	w0, #0xc                   	// #12
  43bea4:	cbz	x8, 43c3dc <_obstack_memory_used@@Base+0xbe4>
  43bea8:	ldr	x8, [x21, #40]
  43beac:	cbz	x8, 43c3dc <_obstack_memory_used@@Base+0xbe4>
  43beb0:	ldr	x22, [x19, #48]
  43beb4:	lsl	x0, x22, #3
  43beb8:	bl	4044d0 <malloc@plt>
  43bebc:	str	x0, [x21, #224]
  43bec0:	cbz	x0, 43bf34 <_obstack_memory_used@@Base+0x73c>
  43bec4:	cbz	x22, 43bedc <_obstack_memory_used@@Base+0x6e4>
  43bec8:	mov	x8, xzr
  43becc:	str	x8, [x0, x8, lsl #3]
  43bed0:	add	x8, x8, #0x1
  43bed4:	cmp	x22, x8
  43bed8:	b.ne	43becc <_obstack_memory_used@@Base+0x6d4>  // b.any
  43bedc:	ldr	x0, [x21, #104]
  43bee0:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x6808>
  43bee4:	add	x1, x1, #0xc8
  43bee8:	mov	x2, x21
  43beec:	bl	442044 <_obstack_memory_used@@Base+0x684c>
  43bef0:	ldr	x8, [x19, #48]
  43bef4:	cbz	x8, 43bf1c <_obstack_memory_used@@Base+0x724>
  43bef8:	ldr	x0, [x21, #224]
  43befc:	mov	x9, xzr
  43bf00:	ldr	x10, [x0, x9, lsl #3]
  43bf04:	cmp	x9, x10
  43bf08:	b.ne	43bf24 <_obstack_memory_used@@Base+0x72c>  // b.any
  43bf0c:	add	x9, x9, #0x1
  43bf10:	cmp	x8, x9
  43bf14:	b.ne	43bf00 <_obstack_memory_used@@Base+0x708>  // b.any
  43bf18:	b	43bf2c <_obstack_memory_used@@Base+0x734>
  43bf1c:	ldr	x0, [x21, #224]
  43bf20:	b	43bf2c <_obstack_memory_used@@Base+0x734>
  43bf24:	cmp	x8, x9
  43bf28:	b.ne	43bf34 <_obstack_memory_used@@Base+0x73c>  // b.any
  43bf2c:	bl	4049b0 <free@plt>
  43bf30:	str	xzr, [x21, #224]
  43bf34:	ldr	x0, [x21, #104]
  43bf38:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x6808>
  43bf3c:	add	x1, x1, #0x168
  43bf40:	mov	x2, x19
  43bf44:	bl	43fe20 <_obstack_memory_used@@Base+0x4628>
  43bf48:	cbnz	w0, 43c3dc <_obstack_memory_used@@Base+0xbe4>
  43bf4c:	ldr	x0, [x21, #104]
  43bf50:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x6808>
  43bf54:	add	x1, x1, #0x1f0
  43bf58:	mov	x2, x21
  43bf5c:	bl	43fe20 <_obstack_memory_used@@Base+0x4628>
  43bf60:	cbnz	w0, 43c3dc <_obstack_memory_used@@Base+0xbe4>
  43bf64:	ldr	x0, [x21, #104]
  43bf68:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x6808>
  43bf6c:	add	x1, x1, #0x28c
  43bf70:	mov	x2, x21
  43bf74:	bl	442044 <_obstack_memory_used@@Base+0x684c>
  43bf78:	ldr	x0, [x21, #104]
  43bf7c:	adrp	x1, 442000 <_obstack_memory_used@@Base+0x6808>
  43bf80:	add	x1, x1, #0x2e4
  43bf84:	mov	x2, x21
  43bf88:	bl	442044 <_obstack_memory_used@@Base+0x684c>
  43bf8c:	cbnz	w0, 43c3dc <_obstack_memory_used@@Base+0xbe4>
  43bf90:	ldr	x8, [x21, #16]
  43bf94:	cbz	x8, 43c01c <_obstack_memory_used@@Base+0x824>
  43bf98:	mov	w24, wzr
  43bf9c:	mov	x22, xzr
  43bfa0:	mov	w23, #0x18                  	// #24
  43bfa4:	ldr	x8, [x21, #48]
  43bfa8:	madd	x8, x22, x23, x8
  43bfac:	ldr	x8, [x8, #8]
  43bfb0:	cbnz	x8, 43bfe8 <_obstack_memory_used@@Base+0x7f0>
  43bfb4:	sub	x0, x29, #0x20
  43bfb8:	mov	w3, #0x1                   	// #1
  43bfbc:	mov	x1, x21
  43bfc0:	mov	x2, x22
  43bfc4:	bl	442830 <_obstack_memory_used@@Base+0x7038>
  43bfc8:	cbnz	w0, 43c3dc <_obstack_memory_used@@Base+0xbe4>
  43bfcc:	ldr	x8, [x21, #48]
  43bfd0:	madd	x8, x22, x23, x8
  43bfd4:	ldr	x8, [x8, #8]
  43bfd8:	cbnz	x8, 43bfe8 <_obstack_memory_used@@Base+0x7f0>
  43bfdc:	ldur	x0, [x29, #-16]
  43bfe0:	bl	4049b0 <free@plt>
  43bfe4:	mov	w24, #0x1                   	// #1
  43bfe8:	ldr	x9, [x21, #16]
  43bfec:	add	x8, x22, #0x1
  43bff0:	mov	w10, w24
  43bff4:	cmp	x8, x9
  43bff8:	cset	w11, ne  // ne = any
  43bffc:	csinc	x22, xzr, x22, eq  // eq = none
  43c000:	and	w24, w24, w11
  43c004:	tbnz	w10, #0, 43bfa4 <_obstack_memory_used@@Base+0x7ac>
  43c008:	cmp	x8, x9
  43c00c:	b.ne	43bfa4 <_obstack_memory_used@@Base+0x7ac>  // b.any
  43c010:	add	x8, x8, x8, lsl #1
  43c014:	lsl	x0, x8, #3
  43c018:	b	43c020 <_obstack_memory_used@@Base+0x828>
  43c01c:	mov	x0, xzr
  43c020:	ldrb	w8, [x19, #56]
  43c024:	tbnz	w8, #4, 43c038 <_obstack_memory_used@@Base+0x840>
  43c028:	ldr	x8, [x19, #48]
  43c02c:	cbz	x8, 43c038 <_obstack_memory_used@@Base+0x840>
  43c030:	ldrb	w8, [x21, #176]
  43c034:	tbnz	w8, #0, 43c040 <_obstack_memory_used@@Base+0x848>
  43c038:	ldr	x8, [x21, #152]
  43c03c:	cbz	x8, 43c0fc <_obstack_memory_used@@Base+0x904>
  43c040:	bl	4044d0 <malloc@plt>
  43c044:	str	x0, [x21, #56]
  43c048:	cbz	x0, 43c3d8 <_obstack_memory_used@@Base+0xbe0>
  43c04c:	ldr	x8, [x21, #16]
  43c050:	cbz	x8, 43c0fc <_obstack_memory_used@@Base+0x904>
  43c054:	stp	xzr, xzr, [x0]
  43c058:	str	xzr, [x0, #16]
  43c05c:	ldr	x8, [x21, #16]
  43c060:	cmp	x8, #0x2
  43c064:	b.cc	43c094 <_obstack_memory_used@@Base+0x89c>  // b.lo, b.ul, b.last
  43c068:	mov	w9, #0x1                   	// #1
  43c06c:	mov	w10, #0x18                  	// #24
  43c070:	ldr	x8, [x21, #56]
  43c074:	add	x9, x9, #0x1
  43c078:	add	x8, x8, x10
  43c07c:	stp	xzr, xzr, [x8]
  43c080:	str	xzr, [x8, #16]
  43c084:	ldr	x8, [x21, #16]
  43c088:	add	x10, x10, #0x18
  43c08c:	cmp	x9, x8
  43c090:	b.cc	43c070 <_obstack_memory_used@@Base+0x878>  // b.lo, b.ul, b.last
  43c094:	cbz	x8, 43c0fc <_obstack_memory_used@@Base+0x904>
  43c098:	ldr	x9, [x21, #48]
  43c09c:	mov	x22, xzr
  43c0a0:	mov	w23, #0x18                  	// #24
  43c0a4:	madd	x10, x22, x23, x9
  43c0a8:	ldr	x11, [x10, #8]
  43c0ac:	cmp	x11, #0x1
  43c0b0:	b.lt	43c0f0 <_obstack_memory_used@@Base+0x8f8>  // b.tstop
  43c0b4:	ldr	x24, [x10, #16]
  43c0b8:	mov	x26, xzr
  43c0bc:	ldr	x8, [x21, #56]
  43c0c0:	ldr	x9, [x24, x26, lsl #3]
  43c0c4:	mov	x1, x22
  43c0c8:	madd	x0, x9, x23, x8
  43c0cc:	bl	442fcc <_obstack_memory_used@@Base+0x77d4>
  43c0d0:	tbz	w0, #0, 43c3d8 <_obstack_memory_used@@Base+0xbe0>
  43c0d4:	ldr	x9, [x21, #48]
  43c0d8:	add	x26, x26, #0x1
  43c0dc:	madd	x8, x22, x23, x9
  43c0e0:	ldr	x8, [x8, #8]
  43c0e4:	cmp	x26, x8
  43c0e8:	b.lt	43c0bc <_obstack_memory_used@@Base+0x8c4>  // b.tstop
  43c0ec:	ldr	x8, [x21, #16]
  43c0f0:	add	x22, x22, #0x1
  43c0f4:	cmp	x22, x8
  43c0f8:	b.cc	43c0a4 <_obstack_memory_used@@Base+0x8ac>  // b.lo, b.ul, b.last
  43c0fc:	stur	wzr, [x29, #-52]
  43c100:	cbnz	x25, 43c1f8 <_obstack_memory_used@@Base+0xa00>
  43c104:	ldrb	w9, [x20, #176]
  43c108:	tbz	w9, #2, 43c1f8 <_obstack_memory_used@@Base+0xa00>
  43c10c:	ldr	x8, [x19, #40]
  43c110:	cbnz	x8, 43c1f8 <_obstack_memory_used@@Base+0xa00>
  43c114:	ldr	x11, [x20, #16]
  43c118:	cbz	x11, 43c1c4 <_obstack_memory_used@@Base+0x9cc>
  43c11c:	ldr	x10, [x20]
  43c120:	adrp	x13, 455000 <_obstack_memory_used@@Base+0x19808>
  43c124:	mov	w8, wzr
  43c128:	mov	w12, wzr
  43c12c:	add	x13, x13, #0x9c8
  43c130:	mov	w14, #0x1                   	// #1
  43c134:	mov	w15, #0x8b                  	// #139
  43c138:	mov	x16, x10
  43c13c:	ldrb	w17, [x16, #8]
  43c140:	sub	w17, w17, #0x1
  43c144:	cmp	w17, #0xb
  43c148:	b.hi	43c4b0 <_obstack_memory_used@@Base+0xcb8>  // b.pmore
  43c14c:	adr	x18, 43c15c <_obstack_memory_used@@Base+0x964>
  43c150:	ldrb	w0, [x13, x17]
  43c154:	add	x18, x18, x0, lsl #2
  43c158:	br	x18
  43c15c:	subs	x11, x11, #0x1
  43c160:	add	x16, x16, #0x10
  43c164:	b.ne	43c13c <_obstack_memory_used@@Base+0x944>  // b.any
  43c168:	b	43c404 <_obstack_memory_used@@Base+0xc0c>
  43c16c:	ldr	x17, [x16]
  43c170:	ldr	x18, [x17, #16]
  43c174:	cbnz	x18, 43c1f8 <_obstack_memory_used@@Base+0xa00>
  43c178:	ldr	x17, [x17, #24]
  43c17c:	cbz	x17, 43c15c <_obstack_memory_used@@Base+0x964>
  43c180:	b	43c1f8 <_obstack_memory_used@@Base+0xa00>
  43c184:	ldr	w17, [x16]
  43c188:	sub	w17, w17, #0x10
  43c18c:	ror	w17, w17, #4
  43c190:	cmp	w17, #0x7
  43c194:	b.hi	43c1f8 <_obstack_memory_used@@Base+0xa00>  // b.pmore
  43c198:	lsl	w17, w14, w17
  43c19c:	tst	w17, w15
  43c1a0:	b.ne	43c15c <_obstack_memory_used@@Base+0x964>  // b.any
  43c1a4:	b	43c1f8 <_obstack_memory_used@@Base+0xa00>
  43c1a8:	ldrsb	w17, [x16]
  43c1ac:	cmp	w17, #0x0
  43c1b0:	cset	w17, lt  // lt = tstop
  43c1b4:	orr	w12, w12, w17
  43c1b8:	b	43c15c <_obstack_memory_used@@Base+0x964>
  43c1bc:	mov	w8, #0x1                   	// #1
  43c1c0:	b	43c15c <_obstack_memory_used@@Base+0x964>
  43c1c4:	mov	w8, wzr
  43c1c8:	ldr	x10, [x20, #152]
  43c1cc:	mov	w12, #0x2                   	// #2
  43c1d0:	and	w9, w9, #0xfffffff9
  43c1d4:	mov	w11, #0x1                   	// #1
  43c1d8:	cmp	x10, #0x0
  43c1dc:	cset	w10, gt
  43c1e0:	orr	w8, w8, w10
  43c1e4:	tst	w8, #0x1
  43c1e8:	csel	w8, w12, wzr, ne  // ne = any
  43c1ec:	orr	w8, w8, w9
  43c1f0:	str	w11, [x20, #180]
  43c1f4:	strb	w8, [x20, #176]
  43c1f8:	ldr	x8, [x20, #104]
  43c1fc:	ldr	x9, [x20, #48]
  43c200:	mov	w10, #0x18                  	// #24
  43c204:	sub	x0, x29, #0x20
  43c208:	ldr	x8, [x8, #24]
  43c20c:	ldr	x8, [x8, #56]
  43c210:	madd	x1, x8, x10, x9
  43c214:	str	x8, [x20, #144]
  43c218:	bl	443034 <_obstack_memory_used@@Base+0x783c>
  43c21c:	stur	w0, [x29, #-48]
  43c220:	cbnz	w0, 43c394 <_obstack_memory_used@@Base+0xb9c>
  43c224:	ldr	x8, [x20, #152]
  43c228:	cmp	x8, #0x1
  43c22c:	b.lt	43c2fc <_obstack_memory_used@@Base+0xb04>  // b.tstop
  43c230:	ldur	x23, [x29, #-24]
  43c234:	cmp	x23, #0x1
  43c238:	b.lt	43c2fc <_obstack_memory_used@@Base+0xb04>  // b.tstop
  43c23c:	mov	x24, xzr
  43c240:	mov	w22, #0x18                  	// #24
  43c244:	ldur	x9, [x29, #-16]
  43c248:	ldr	x10, [x20]
  43c24c:	ldr	x8, [x9, x24, lsl #3]
  43c250:	add	x11, x10, x8, lsl #4
  43c254:	ldrb	w11, [x11, #8]
  43c258:	cmp	w11, #0x4
  43c25c:	b.ne	43c2f0 <_obstack_memory_used@@Base+0xaf8>  // b.any
  43c260:	cmp	x23, #0x1
  43c264:	b.lt	43c2a8 <_obstack_memory_used@@Base+0xab0>  // b.tstop
  43c268:	mov	x11, xzr
  43c26c:	add	x12, x10, x8, lsl #4
  43c270:	ldr	x13, [x9, x11, lsl #3]
  43c274:	add	x14, x10, x13, lsl #4
  43c278:	ldrb	w14, [x14, #8]
  43c27c:	cmp	w14, #0x9
  43c280:	b.ne	43c298 <_obstack_memory_used@@Base+0xaa0>  // b.any
  43c284:	lsl	x13, x13, #4
  43c288:	ldr	x13, [x10, x13]
  43c28c:	ldr	x14, [x12]
  43c290:	cmp	x13, x14
  43c294:	b.eq	43c2ac <_obstack_memory_used@@Base+0xab4>  // b.none
  43c298:	add	x11, x11, #0x1
  43c29c:	cmp	x23, x11
  43c2a0:	b.ne	43c270 <_obstack_memory_used@@Base+0xa78>  // b.any
  43c2a4:	b	43c2f0 <_obstack_memory_used@@Base+0xaf8>
  43c2a8:	mov	x11, xzr
  43c2ac:	cmp	x11, x23
  43c2b0:	b.eq	43c2f0 <_obstack_memory_used@@Base+0xaf8>  // b.none
  43c2b4:	ldr	x9, [x20, #40]
  43c2b8:	sub	x0, x29, #0x20
  43c2bc:	madd	x8, x8, x22, x9
  43c2c0:	ldr	x8, [x8, #16]
  43c2c4:	ldr	x21, [x8]
  43c2c8:	mov	x1, x21
  43c2cc:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  43c2d0:	cbnz	x0, 43c2f0 <_obstack_memory_used@@Base+0xaf8>
  43c2d4:	ldr	x8, [x20, #48]
  43c2d8:	sub	x0, x29, #0x20
  43c2dc:	madd	x1, x21, x22, x8
  43c2e0:	bl	442ca8 <_obstack_memory_used@@Base+0x74b0>
  43c2e4:	cbnz	w0, 43c394 <_obstack_memory_used@@Base+0xb9c>
  43c2e8:	ldur	x23, [x29, #-24]
  43c2ec:	mov	x24, xzr
  43c2f0:	add	x24, x24, #0x1
  43c2f4:	cmp	x24, x23
  43c2f8:	b.lt	43c244 <_obstack_memory_used@@Base+0xa4c>  // b.tstop
  43c2fc:	sub	x0, x29, #0x30
  43c300:	sub	x2, x29, #0x20
  43c304:	mov	x1, x20
  43c308:	mov	w3, wzr
  43c30c:	bl	443100 <_obstack_memory_used@@Base+0x7908>
  43c310:	str	x0, [x20, #72]
  43c314:	cbz	x0, 43c490 <_obstack_memory_used@@Base+0xc98>
  43c318:	ldrsb	w8, [x0, #104]
  43c31c:	tbnz	w8, #31, 43c32c <_obstack_memory_used@@Base+0xb34>
  43c320:	stp	x0, x0, [x20, #88]
  43c324:	str	x0, [x20, #80]
  43c328:	b	43c388 <_obstack_memory_used@@Base+0xb90>
  43c32c:	sub	x0, x29, #0x30
  43c330:	sub	x2, x29, #0x20
  43c334:	mov	w3, #0x1                   	// #1
  43c338:	mov	x1, x20
  43c33c:	bl	443100 <_obstack_memory_used@@Base+0x7908>
  43c340:	str	x0, [x20, #80]
  43c344:	sub	x0, x29, #0x30
  43c348:	sub	x2, x29, #0x20
  43c34c:	mov	w3, #0x2                   	// #2
  43c350:	mov	x1, x20
  43c354:	bl	443100 <_obstack_memory_used@@Base+0x7908>
  43c358:	str	x0, [x20, #88]
  43c35c:	sub	x0, x29, #0x30
  43c360:	sub	x2, x29, #0x20
  43c364:	mov	w3, #0x6                   	// #6
  43c368:	mov	x1, x20
  43c36c:	bl	443100 <_obstack_memory_used@@Base+0x7908>
  43c370:	ldr	x8, [x20, #80]
  43c374:	str	x0, [x20, #96]
  43c378:	cbz	x8, 43c490 <_obstack_memory_used@@Base+0xc98>
  43c37c:	cbz	x0, 43c490 <_obstack_memory_used@@Base+0xc98>
  43c380:	ldr	x8, [x20, #88]
  43c384:	cbz	x8, 43c490 <_obstack_memory_used@@Base+0xc98>
  43c388:	ldur	x0, [x29, #-16]
  43c38c:	bl	4049b0 <free@plt>
  43c390:	mov	w0, wzr
  43c394:	stur	w0, [x29, #-52]
  43c398:	mov	x0, x19
  43c39c:	bl	43ebd0 <_obstack_memory_used@@Base+0x33d8>
  43c3a0:	add	x0, sp, #0x10
  43c3a4:	bl	43ec1c <_obstack_memory_used@@Base+0x3424>
  43c3a8:	ldur	w8, [x29, #-52]
  43c3ac:	cbnz	w8, 43c3f0 <_obstack_memory_used@@Base+0xbf8>
  43c3b0:	mov	w21, wzr
  43c3b4:	mov	w0, w21
  43c3b8:	ldp	x20, x19, [sp, #304]
  43c3bc:	ldp	x22, x21, [sp, #288]
  43c3c0:	ldp	x24, x23, [sp, #272]
  43c3c4:	ldp	x26, x25, [sp, #256]
  43c3c8:	ldp	x28, x27, [sp, #240]
  43c3cc:	ldp	x29, x30, [sp, #224]
  43c3d0:	add	sp, sp, #0x140
  43c3d4:	ret
  43c3d8:	mov	w0, #0xc                   	// #12
  43c3dc:	stur	w0, [x29, #-52]
  43c3e0:	mov	x0, x19
  43c3e4:	bl	43ebd0 <_obstack_memory_used@@Base+0x33d8>
  43c3e8:	add	x0, sp, #0x10
  43c3ec:	bl	43ec1c <_obstack_memory_used@@Base+0x3424>
  43c3f0:	mov	x0, x20
  43c3f4:	bl	43ca84 <_obstack_memory_used@@Base+0x128c>
  43c3f8:	stp	xzr, xzr, [x19]
  43c3fc:	ldur	w21, [x29, #-52]
  43c400:	b	43c3b4 <_obstack_memory_used@@Base+0xbbc>
  43c404:	orr	w11, w12, w8
  43c408:	tbz	w11, #0, 43c1c8 <_obstack_memory_used@@Base+0x9d0>
  43c40c:	mov	x9, xzr
  43c410:	mov	w11, #0x1                   	// #1
  43c414:	add	x12, x10, x9
  43c418:	ldr	w13, [x12, #8]
  43c41c:	and	w14, w13, #0xff
  43c420:	cmp	w14, #0x5
  43c424:	b.eq	43c440 <_obstack_memory_used@@Base+0xc48>  // b.none
  43c428:	cmp	w14, #0x1
  43c42c:	b.ne	43c44c <_obstack_memory_used@@Base+0xc54>  // b.any
  43c430:	ldrsb	w10, [x10, x9]
  43c434:	tbz	w10, #31, 43c44c <_obstack_memory_used@@Base+0xc54>
  43c438:	and	w10, w13, #0xffdfffff
  43c43c:	b	43c448 <_obstack_memory_used@@Base+0xc50>
  43c440:	and	w10, w13, #0xffffff00
  43c444:	orr	w10, w10, #0x7
  43c448:	str	w10, [x12, #8]
  43c44c:	ldr	x10, [x20, #16]
  43c450:	cmp	x11, x10
  43c454:	b.cs	43c468 <_obstack_memory_used@@Base+0xc70>  // b.hs, b.nlast
  43c458:	ldr	x10, [x20]
  43c45c:	add	x9, x9, #0x10
  43c460:	add	x11, x11, #0x1
  43c464:	b	43c414 <_obstack_memory_used@@Base+0xc1c>
  43c468:	ldrb	w9, [x20, #176]
  43c46c:	b	43c1c8 <_obstack_memory_used@@Base+0x9d0>
  43c470:	mov	w1, #0xe8                  	// #232
  43c474:	mov	x0, x20
  43c478:	bl	404710 <realloc@plt>
  43c47c:	cbz	x0, 43c4a8 <_obstack_memory_used@@Base+0xcb0>
  43c480:	mov	x20, x0
  43c484:	mov	w8, #0xe8                  	// #232
  43c488:	stp	x0, x8, [x19]
  43c48c:	b	43ba5c <_obstack_memory_used@@Base+0x264>
  43c490:	ldur	w0, [x29, #-48]
  43c494:	b	43c394 <_obstack_memory_used@@Base+0xb9c>
  43c498:	mov	w8, #0xc                   	// #12
  43c49c:	stur	w8, [x29, #-52]
  43c4a0:	str	xzr, [x20, #104]
  43c4a4:	b	43c3e0 <_obstack_memory_used@@Base+0xbe8>
  43c4a8:	mov	w21, #0xc                   	// #12
  43c4ac:	b	43c3b4 <_obstack_memory_used@@Base+0xbbc>
  43c4b0:	bl	404850 <abort@plt>
  43c4b4:	adrp	x9, 46b000 <argp_program_version_hook@@Base+0x458>
  43c4b8:	ldr	x8, [x9, #528]
  43c4bc:	str	x0, [x9, #528]
  43c4c0:	mov	x0, x8
  43c4c4:	ret
  43c4c8:	stp	x29, x30, [sp, #-48]!
  43c4cc:	stp	x20, x19, [sp, #32]
  43c4d0:	ldr	x20, [x0, #32]
  43c4d4:	str	x21, [sp, #16]
  43c4d8:	ldr	x21, [x0]
  43c4dc:	mov	x19, x0
  43c4e0:	mov	w2, #0x100                 	// #256
  43c4e4:	mov	x0, x20
  43c4e8:	mov	w1, wzr
  43c4ec:	mov	x29, sp
  43c4f0:	bl	4045e0 <memset@plt>
  43c4f4:	ldr	x1, [x21, #72]
  43c4f8:	mov	x0, x19
  43c4fc:	mov	x2, x20
  43c500:	bl	43c574 <_obstack_memory_used@@Base+0xd7c>
  43c504:	ldp	x8, x1, [x21, #72]
  43c508:	cmp	x8, x1
  43c50c:	b.eq	43c520 <_obstack_memory_used@@Base+0xd28>  // b.none
  43c510:	mov	x0, x19
  43c514:	mov	x2, x20
  43c518:	bl	43c574 <_obstack_memory_used@@Base+0xd7c>
  43c51c:	ldr	x8, [x21, #72]
  43c520:	ldr	x1, [x21, #88]
  43c524:	cmp	x8, x1
  43c528:	b.eq	43c53c <_obstack_memory_used@@Base+0xd44>  // b.none
  43c52c:	mov	x0, x19
  43c530:	mov	x2, x20
  43c534:	bl	43c574 <_obstack_memory_used@@Base+0xd7c>
  43c538:	ldr	x8, [x21, #72]
  43c53c:	ldr	x1, [x21, #96]
  43c540:	cmp	x8, x1
  43c544:	b.eq	43c554 <_obstack_memory_used@@Base+0xd5c>  // b.none
  43c548:	mov	x0, x19
  43c54c:	mov	x2, x20
  43c550:	bl	43c574 <_obstack_memory_used@@Base+0xd7c>
  43c554:	ldrb	w8, [x19, #56]
  43c558:	ldr	x21, [sp, #16]
  43c55c:	mov	w0, wzr
  43c560:	orr	w8, w8, #0x8
  43c564:	strb	w8, [x19, #56]
  43c568:	ldp	x20, x19, [sp, #32]
  43c56c:	ldp	x29, x30, [sp], #48
  43c570:	ret
  43c574:	sub	sp, sp, #0x1a0
  43c578:	stp	x29, x30, [sp, #320]
  43c57c:	stp	x28, x27, [sp, #336]
  43c580:	stp	x26, x25, [sp, #352]
  43c584:	stp	x24, x23, [sp, #368]
  43c588:	stp	x22, x21, [sp, #384]
  43c58c:	stp	x20, x19, [sp, #400]
  43c590:	ldr	x23, [x0]
  43c594:	mov	x20, x2
  43c598:	add	x29, sp, #0x140
  43c59c:	str	x0, [sp, #32]
  43c5a0:	ldr	w8, [x23, #180]
  43c5a4:	cmp	w8, #0x1
  43c5a8:	b.ne	43c5b8 <_obstack_memory_used@@Base+0xdc0>  // b.any
  43c5ac:	ldrb	w8, [x0, #26]
  43c5b0:	ubfx	w24, w8, #6, #1
  43c5b4:	b	43c5bc <_obstack_memory_used@@Base+0xdc4>
  43c5b8:	mov	w24, wzr
  43c5bc:	ldr	x8, [x1, #16]
  43c5c0:	cmp	x8, #0x1
  43c5c4:	b.lt	43c894 <_obstack_memory_used@@Base+0x109c>  // b.tstop
  43c5c8:	add	x8, sp, #0x28
  43c5cc:	mov	x9, xzr
  43c5d0:	mov	w28, #0x1                   	// #1
  43c5d4:	orr	x8, x8, #0x1
  43c5d8:	stp	x8, x1, [sp, #8]
  43c5dc:	ldr	x8, [x1, #24]
  43c5e0:	str	x9, [sp, #24]
  43c5e4:	ldr	x21, [x8, x9, lsl #3]
  43c5e8:	ldr	x8, [x23]
  43c5ec:	add	x9, x8, x21, lsl #4
  43c5f0:	ldrb	w19, [x9, #8]
  43c5f4:	sub	w10, w19, #0x1
  43c5f8:	cmp	w10, #0x6
  43c5fc:	b.hi	43c854 <_obstack_memory_used@@Base+0x105c>  // b.pmore
  43c600:	adrp	x13, 455000 <_obstack_memory_used@@Base+0x19808>
  43c604:	add	x13, x13, #0x9d4
  43c608:	adr	x11, 43c61c <_obstack_memory_used@@Base+0xe24>
  43c60c:	ldrb	w12, [x13, x10]
  43c610:	add	x11, x11, x12, lsl #2
  43c614:	lsl	x22, x21, #4
  43c618:	br	x11
  43c61c:	ldrb	w0, [x9]
  43c620:	strb	w28, [x20, x0]
  43c624:	cbz	w24, 43c630 <_obstack_memory_used@@Base+0xe38>
  43c628:	bl	404cf0 <tolower@plt>
  43c62c:	strb	w28, [x20, w0, sxtw]
  43c630:	ldr	x8, [sp, #32]
  43c634:	ldrb	w8, [x8, #26]
  43c638:	tbz	w8, #6, 43c854 <_obstack_memory_used@@Base+0x105c>
  43c63c:	ldr	w8, [x23, #180]
  43c640:	cmp	w8, #0x2
  43c644:	b.lt	43c854 <_obstack_memory_used@@Base+0x105c>  // b.tstop
  43c648:	ldr	x8, [x23]
  43c64c:	add	x9, x21, #0x1
  43c650:	mov	w13, #0x1                   	// #1
  43c654:	movk	w13, #0x20, lsl #16
  43c658:	ldrb	w8, [x8, x22]
  43c65c:	strb	w8, [sp, #40]
  43c660:	ldr	x8, [x23, #16]
  43c664:	cmp	x9, x8
  43c668:	ldr	x8, [sp, #8]
  43c66c:	b.cs	43c6ac <_obstack_memory_used@@Base+0xeb4>  // b.hs, b.nlast
  43c670:	ldr	x8, [sp, #8]
  43c674:	ldr	x10, [x23]
  43c678:	add	w12, w13, #0xfe
  43c67c:	add	x10, x10, x22
  43c680:	ldr	w11, [x10, #24]
  43c684:	and	w11, w11, w12
  43c688:	cmp	w11, w13
  43c68c:	b.ne	43c6ac <_obstack_memory_used@@Base+0xeb4>  // b.any
  43c690:	ldrb	w10, [x10, #16]
  43c694:	add	x9, x9, #0x1
  43c698:	add	x22, x22, #0x10
  43c69c:	strb	w10, [x8], #1
  43c6a0:	ldr	x10, [x23, #16]
  43c6a4:	cmp	x9, x10
  43c6a8:	b.cc	43c674 <_obstack_memory_used@@Base+0xe7c>  // b.lo, b.ul, b.last
  43c6ac:	add	x9, sp, #0x28
  43c6b0:	sub	x22, x8, x9
  43c6b4:	sub	x0, x29, #0xc
  43c6b8:	add	x1, sp, #0x28
  43c6bc:	sub	x3, x29, #0x18
  43c6c0:	mov	x2, x22
  43c6c4:	stur	xzr, [x29, #-24]
  43c6c8:	bl	43b470 <argp_parse@@Base+0xc7b4>
  43c6cc:	cmp	x0, x22
  43c6d0:	b.ne	43c854 <_obstack_memory_used@@Base+0x105c>  // b.any
  43c6d4:	ldur	w0, [x29, #-12]
  43c6d8:	bl	404d80 <towlower@plt>
  43c6dc:	mov	w1, w0
  43c6e0:	add	x0, sp, #0x28
  43c6e4:	sub	x2, x29, #0x18
  43c6e8:	bl	404e00 <wcrtomb@plt>
  43c6ec:	cmn	x0, #0x1
  43c6f0:	b.eq	43c854 <_obstack_memory_used@@Base+0x105c>  // b.none
  43c6f4:	ldrb	w8, [sp, #40]
  43c6f8:	strb	w28, [x20, x8]
  43c6fc:	b	43c854 <_obstack_memory_used@@Base+0x105c>
  43c700:	mov	x27, xzr
  43c704:	mov	x26, xzr
  43c708:	ldr	x8, [x8, x22]
  43c70c:	mov	x21, xzr
  43c710:	add	x25, x20, w26, sxtw
  43c714:	ldr	x19, [x8, x27, lsl #3]
  43c718:	lsr	x8, x19, x21
  43c71c:	tbz	w8, #0, 43c734 <_obstack_memory_used@@Base+0xf3c>
  43c720:	strb	w28, [x25, x21]
  43c724:	cbz	w24, 43c734 <_obstack_memory_used@@Base+0xf3c>
  43c728:	add	w0, w26, w21
  43c72c:	bl	404cf0 <tolower@plt>
  43c730:	strb	w28, [x20, w0, sxtw]
  43c734:	add	x21, x21, #0x1
  43c738:	cmp	x21, #0x40
  43c73c:	b.ne	43c718 <_obstack_memory_used@@Base+0xf20>  // b.any
  43c740:	add	x27, x27, #0x1
  43c744:	cmp	x27, #0x4
  43c748:	b.eq	43c854 <_obstack_memory_used@@Base+0x105c>  // b.none
  43c74c:	ldr	x8, [x23]
  43c750:	add	x26, x21, w26, sxtw
  43c754:	b	43c708 <_obstack_memory_used@@Base+0xf10>
  43c758:	ldr	w8, [x23, #180]
  43c75c:	ldr	x22, [x9]
  43c760:	cmp	w8, #0x2
  43c764:	b.lt	43c7bc <_obstack_memory_used@@Base+0xfc4>  // b.tstop
  43c768:	ldr	x8, [x22, #72]
  43c76c:	cbnz	x8, 43c780 <_obstack_memory_used@@Base+0xf88>
  43c770:	ldrb	w8, [x22, #32]
  43c774:	tbnz	w8, #0, 43c780 <_obstack_memory_used@@Base+0xf88>
  43c778:	ldr	x8, [x22, #64]
  43c77c:	cbz	x8, 43c7bc <_obstack_memory_used@@Base+0xfc4>
  43c780:	sturb	wzr, [x29, #-24]
  43c784:	sub	x1, x29, #0x18
  43c788:	add	x3, sp, #0x28
  43c78c:	mov	w2, #0x1                   	// #1
  43c790:	mov	x0, xzr
  43c794:	str	xzr, [sp, #40]
  43c798:	bl	43b470 <argp_parse@@Base+0xc7b4>
  43c79c:	ldurb	w8, [x29, #-24]
  43c7a0:	cmn	x0, #0x2
  43c7a4:	b.ne	43c7ac <_obstack_memory_used@@Base+0xfb4>  // b.any
  43c7a8:	strb	w28, [x20, x8]
  43c7ac:	add	w8, w8, #0x1
  43c7b0:	sturb	w8, [x29, #-24]
  43c7b4:	tbz	w8, #8, 43c784 <_obstack_memory_used@@Base+0xf8c>
  43c7b8:	b	43c854 <_obstack_memory_used@@Base+0x105c>
  43c7bc:	ldr	x8, [x22, #40]
  43c7c0:	cmp	x8, #0x1
  43c7c4:	b.lt	43c854 <_obstack_memory_used@@Base+0x105c>  // b.tstop
  43c7c8:	mov	x27, xzr
  43c7cc:	stur	xzr, [x29, #-24]
  43c7d0:	ldr	x8, [x22]
  43c7d4:	add	x0, sp, #0x28
  43c7d8:	sub	x2, x29, #0x18
  43c7dc:	ldr	w1, [x8, x27, lsl #2]
  43c7e0:	bl	404e00 <wcrtomb@plt>
  43c7e4:	cmn	x0, #0x1
  43c7e8:	b.eq	43c800 <_obstack_memory_used@@Base+0x1008>  // b.none
  43c7ec:	ldrb	w0, [sp, #40]
  43c7f0:	strb	w28, [x20, x0]
  43c7f4:	cbz	w24, 43c800 <_obstack_memory_used@@Base+0x1008>
  43c7f8:	bl	404cf0 <tolower@plt>
  43c7fc:	strb	w28, [x20, w0, sxtw]
  43c800:	ldr	x8, [sp, #32]
  43c804:	ldrb	w8, [x8, #26]
  43c808:	tbz	w8, #6, 43c844 <_obstack_memory_used@@Base+0x104c>
  43c80c:	ldr	w8, [x23, #180]
  43c810:	cmp	w8, #0x2
  43c814:	b.lt	43c844 <_obstack_memory_used@@Base+0x104c>  // b.tstop
  43c818:	ldr	x8, [x22]
  43c81c:	ldr	w0, [x8, x27, lsl #2]
  43c820:	bl	404d80 <towlower@plt>
  43c824:	mov	w1, w0
  43c828:	add	x0, sp, #0x28
  43c82c:	sub	x2, x29, #0x18
  43c830:	bl	404e00 <wcrtomb@plt>
  43c834:	cmn	x0, #0x1
  43c838:	b.eq	43c844 <_obstack_memory_used@@Base+0x104c>  // b.none
  43c83c:	ldrb	w8, [sp, #40]
  43c840:	strb	w28, [x20, x8]
  43c844:	ldr	x8, [x22, #40]
  43c848:	add	x27, x27, #0x1
  43c84c:	cmp	x27, x8
  43c850:	b.lt	43c7cc <_obstack_memory_used@@Base+0xfd4>  // b.tstop
  43c854:	ldp	x1, x9, [sp, #16]
  43c858:	ldr	x8, [x1, #16]
  43c85c:	add	x9, x9, #0x1
  43c860:	cmp	x9, x8
  43c864:	b.lt	43c5dc <_obstack_memory_used@@Base+0xde4>  // b.tstop
  43c868:	b	43c894 <_obstack_memory_used@@Base+0x109c>
  43c86c:	mov	w1, #0x1                   	// #1
  43c870:	mov	w2, #0x100                 	// #256
  43c874:	mov	x0, x20
  43c878:	bl	4045e0 <memset@plt>
  43c87c:	cmp	w19, #0x2
  43c880:	b.ne	43c894 <_obstack_memory_used@@Base+0x109c>  // b.any
  43c884:	ldr	x9, [sp, #32]
  43c888:	ldrb	w8, [x9, #56]
  43c88c:	orr	w8, w8, #0x1
  43c890:	strb	w8, [x9, #56]
  43c894:	ldp	x20, x19, [sp, #400]
  43c898:	ldp	x22, x21, [sp, #384]
  43c89c:	ldp	x24, x23, [sp, #368]
  43c8a0:	ldp	x26, x25, [sp, #352]
  43c8a4:	ldp	x28, x27, [sp, #336]
  43c8a8:	ldp	x29, x30, [sp, #320]
  43c8ac:	add	sp, sp, #0x1a0
  43c8b0:	ret
  43c8b4:	stp	x29, x30, [sp, #-48]!
  43c8b8:	stp	x20, x19, [sp, #32]
  43c8bc:	mov	x19, x0
  43c8c0:	stp	xzr, xzr, [x0]
  43c8c4:	str	xzr, [x0, #16]
  43c8c8:	mov	w0, #0x100                 	// #256
  43c8cc:	stp	x22, x21, [sp, #16]
  43c8d0:	mov	x29, sp
  43c8d4:	mov	w21, w2
  43c8d8:	mov	x20, x1
  43c8dc:	bl	4044d0 <malloc@plt>
  43c8e0:	str	x0, [x19, #32]
  43c8e4:	cbz	x0, 43c998 <_obstack_memory_used@@Base+0x11a0>
  43c8e8:	mov	w8, #0xb2fc                	// #45820
  43c8ec:	mov	w9, #0x2c6                 	// #710
  43c8f0:	tst	w21, #0x1
  43c8f4:	movk	w8, #0x3, lsl #16
  43c8f8:	movk	w9, #0x101, lsl #16
  43c8fc:	lsl	w10, w21, #21
  43c900:	csel	x8, x9, x8, eq  // eq = none
  43c904:	and	w9, w10, #0x400000
  43c908:	orr	x22, x8, x9
  43c90c:	tbnz	w21, #2, 43c91c <_obstack_memory_used@@Base+0x1124>
  43c910:	ldrb	w8, [x19, #56]
  43c914:	and	w8, w8, #0x7f
  43c918:	b	43c934 <_obstack_memory_used@@Base+0x113c>
  43c91c:	ldrb	w8, [x19, #56]
  43c920:	mov	w9, #0xb2be                	// #45758
  43c924:	movk	w9, #0x143, lsl #16
  43c928:	and	x9, x22, x9
  43c92c:	orr	x22, x9, #0x100
  43c930:	orr	w8, w8, #0xffffff80
  43c934:	lsl	w9, w21, #1
  43c938:	strb	w8, [x19, #56]
  43c93c:	and	w8, w8, #0xffffffef
  43c940:	and	w9, w9, #0x10
  43c944:	orr	w8, w8, w9
  43c948:	mov	x0, x20
  43c94c:	strb	w8, [x19, #56]
  43c950:	str	xzr, [x19, #40]
  43c954:	bl	404170 <strlen@plt>
  43c958:	mov	x2, x0
  43c95c:	mov	x0, x19
  43c960:	mov	x1, x20
  43c964:	mov	x3, x22
  43c968:	bl	43ba04 <_obstack_memory_used@@Base+0x20c>
  43c96c:	cmp	w0, #0x10
  43c970:	mov	w8, #0x8                   	// #8
  43c974:	csel	w20, w8, w0, eq  // eq = none
  43c978:	cbnz	w20, 43c9a0 <_obstack_memory_used@@Base+0x11a8>
  43c97c:	mov	x0, x19
  43c980:	bl	43c4c8 <_obstack_memory_used@@Base+0xcd0>
  43c984:	mov	w0, w20
  43c988:	ldp	x20, x19, [sp, #32]
  43c98c:	ldp	x22, x21, [sp, #16]
  43c990:	ldp	x29, x30, [sp], #48
  43c994:	ret
  43c998:	mov	w20, #0xc                   	// #12
  43c99c:	b	43c984 <_obstack_memory_used@@Base+0x118c>
  43c9a0:	ldr	x0, [x19, #32]
  43c9a4:	bl	4049b0 <free@plt>
  43c9a8:	str	xzr, [x19, #32]
  43c9ac:	b	43c984 <_obstack_memory_used@@Base+0x118c>
  43c9b0:	stp	x29, x30, [sp, #-48]!
  43c9b4:	cmp	w0, #0x11
  43c9b8:	stp	x22, x21, [sp, #16]
  43c9bc:	stp	x20, x19, [sp, #32]
  43c9c0:	mov	x29, sp
  43c9c4:	b.cs	43ca3c <_obstack_memory_used@@Base+0x1244>  // b.hs, b.nlast
  43c9c8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x19808>
  43c9cc:	add	x8, x8, #0xc10
  43c9d0:	ldr	x8, [x8, w0, uxtw #3]
  43c9d4:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x19808>
  43c9d8:	add	x9, x9, #0xa8f
  43c9dc:	mov	x19, x2
  43c9e0:	add	x1, x9, x8
  43c9e4:	mov	w2, #0x5                   	// #5
  43c9e8:	mov	x0, xzr
  43c9ec:	mov	x20, x3
  43c9f0:	bl	404bd0 <dcgettext@plt>
  43c9f4:	mov	x21, x0
  43c9f8:	bl	404170 <strlen@plt>
  43c9fc:	add	x22, x0, #0x1
  43ca00:	cbz	x20, 43ca1c <_obstack_memory_used@@Base+0x1224>
  43ca04:	cmp	x22, x20
  43ca08:	mov	x2, x22
  43ca0c:	b.hi	43ca30 <_obstack_memory_used@@Base+0x1238>  // b.pmore
  43ca10:	mov	x0, x19
  43ca14:	mov	x1, x21
  43ca18:	bl	4040f0 <memcpy@plt>
  43ca1c:	mov	x0, x22
  43ca20:	ldp	x20, x19, [sp, #32]
  43ca24:	ldp	x22, x21, [sp, #16]
  43ca28:	ldp	x29, x30, [sp], #48
  43ca2c:	ret
  43ca30:	sub	x2, x20, #0x1
  43ca34:	strb	wzr, [x19, x2]
  43ca38:	b	43ca10 <_obstack_memory_used@@Base+0x1218>
  43ca3c:	bl	404850 <abort@plt>
  43ca40:	stp	x29, x30, [sp, #-32]!
  43ca44:	str	x19, [sp, #16]
  43ca48:	mov	x19, x0
  43ca4c:	ldr	x0, [x0]
  43ca50:	mov	x29, sp
  43ca54:	cbz	x0, 43ca5c <_obstack_memory_used@@Base+0x1264>
  43ca58:	bl	43ca84 <_obstack_memory_used@@Base+0x128c>
  43ca5c:	ldr	x0, [x19, #32]
  43ca60:	stp	xzr, xzr, [x19]
  43ca64:	bl	4049b0 <free@plt>
  43ca68:	ldr	x0, [x19, #40]
  43ca6c:	str	xzr, [x19, #32]
  43ca70:	bl	4049b0 <free@plt>
  43ca74:	str	xzr, [x19, #40]
  43ca78:	ldr	x19, [sp, #16]
  43ca7c:	ldp	x29, x30, [sp], #32
  43ca80:	ret
  43ca84:	stp	x29, x30, [sp, #-64]!
  43ca88:	stp	x24, x23, [sp, #16]
  43ca8c:	stp	x22, x21, [sp, #32]
  43ca90:	stp	x20, x19, [sp, #48]
  43ca94:	mov	x19, x0
  43ca98:	ldr	x0, [x0]
  43ca9c:	mov	x29, sp
  43caa0:	cbz	x0, 43cae4 <_obstack_memory_used@@Base+0x12ec>
  43caa4:	ldr	x8, [x19, #16]
  43caa8:	cbz	x8, 43cae4 <_obstack_memory_used@@Base+0x12ec>
  43caac:	bl	43eaf4 <_obstack_memory_used@@Base+0x32fc>
  43cab0:	ldr	x8, [x19, #16]
  43cab4:	cmp	x8, #0x2
  43cab8:	b.cc	43cae4 <_obstack_memory_used@@Base+0x12ec>  // b.lo, b.ul, b.last
  43cabc:	mov	w20, #0x1                   	// #1
  43cac0:	mov	w21, #0x10                  	// #16
  43cac4:	ldr	x8, [x19]
  43cac8:	add	x0, x8, x21
  43cacc:	bl	43eaf4 <_obstack_memory_used@@Base+0x32fc>
  43cad0:	ldr	x8, [x19, #16]
  43cad4:	add	x20, x20, #0x1
  43cad8:	add	x21, x21, #0x10
  43cadc:	cmp	x20, x8
  43cae0:	b.cc	43cac4 <_obstack_memory_used@@Base+0x12cc>  // b.lo, b.ul, b.last
  43cae4:	ldr	x0, [x19, #24]
  43cae8:	bl	4049b0 <free@plt>
  43caec:	ldr	x8, [x19, #16]
  43caf0:	cbz	x8, 43cb40 <_obstack_memory_used@@Base+0x1348>
  43caf4:	mov	x20, xzr
  43caf8:	mov	w21, #0x10                  	// #16
  43cafc:	ldr	x8, [x19, #48]
  43cb00:	cbz	x8, 43cb0c <_obstack_memory_used@@Base+0x1314>
  43cb04:	ldr	x0, [x8, x21]
  43cb08:	bl	4049b0 <free@plt>
  43cb0c:	ldr	x8, [x19, #56]
  43cb10:	cbz	x8, 43cb1c <_obstack_memory_used@@Base+0x1324>
  43cb14:	ldr	x0, [x8, x21]
  43cb18:	bl	4049b0 <free@plt>
  43cb1c:	ldr	x8, [x19, #40]
  43cb20:	cbz	x8, 43cb2c <_obstack_memory_used@@Base+0x1334>
  43cb24:	ldr	x0, [x8, x21]
  43cb28:	bl	4049b0 <free@plt>
  43cb2c:	ldr	x8, [x19, #16]
  43cb30:	add	x20, x20, #0x1
  43cb34:	add	x21, x21, #0x18
  43cb38:	cmp	x20, x8
  43cb3c:	b.cc	43cafc <_obstack_memory_used@@Base+0x1304>  // b.lo, b.ul, b.last
  43cb40:	ldr	x0, [x19, #40]
  43cb44:	bl	4049b0 <free@plt>
  43cb48:	ldr	x0, [x19, #48]
  43cb4c:	bl	4049b0 <free@plt>
  43cb50:	ldr	x0, [x19, #56]
  43cb54:	bl	4049b0 <free@plt>
  43cb58:	ldr	x0, [x19]
  43cb5c:	bl	4049b0 <free@plt>
  43cb60:	ldr	x0, [x19, #64]
  43cb64:	cbz	x0, 43cbc8 <_obstack_memory_used@@Base+0x13d0>
  43cb68:	mov	x20, xzr
  43cb6c:	mov	w21, #0x18                  	// #24
  43cb70:	madd	x23, x20, x21, x0
  43cb74:	mov	x22, x23
  43cb78:	ldr	x8, [x22], #16
  43cb7c:	cmp	x8, #0x1
  43cb80:	b.lt	43cba4 <_obstack_memory_used@@Base+0x13ac>  // b.tstop
  43cb84:	mov	x24, xzr
  43cb88:	ldr	x8, [x22]
  43cb8c:	ldr	x0, [x8, x24, lsl #3]
  43cb90:	bl	43eb28 <_obstack_memory_used@@Base+0x3330>
  43cb94:	ldr	x8, [x23]
  43cb98:	add	x24, x24, #0x1
  43cb9c:	cmp	x24, x8
  43cba0:	b.lt	43cb88 <_obstack_memory_used@@Base+0x1390>  // b.tstop
  43cba4:	ldr	x0, [x22]
  43cba8:	bl	4049b0 <free@plt>
  43cbac:	ldr	x8, [x19, #136]
  43cbb0:	cmp	x20, x8
  43cbb4:	b.cs	43cbc4 <_obstack_memory_used@@Base+0x13cc>  // b.hs, b.nlast
  43cbb8:	ldr	x0, [x19, #64]
  43cbbc:	add	x20, x20, #0x1
  43cbc0:	b	43cb70 <_obstack_memory_used@@Base+0x1378>
  43cbc4:	ldr	x0, [x19, #64]
  43cbc8:	bl	4049b0 <free@plt>
  43cbcc:	ldr	x0, [x19, #120]
  43cbd0:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x19808>
  43cbd4:	add	x8, x8, #0xc98
  43cbd8:	cmp	x0, x8
  43cbdc:	b.eq	43cbe4 <_obstack_memory_used@@Base+0x13ec>  // b.none
  43cbe0:	bl	4049b0 <free@plt>
  43cbe4:	ldr	x0, [x19, #224]
  43cbe8:	bl	4049b0 <free@plt>
  43cbec:	mov	x0, x19
  43cbf0:	ldp	x20, x19, [sp, #48]
  43cbf4:	ldp	x22, x21, [sp, #32]
  43cbf8:	ldp	x24, x23, [sp, #16]
  43cbfc:	ldp	x29, x30, [sp], #64
  43cc00:	b	4049b0 <free@plt>
  43cc04:	cmp	w4, #0x7
  43cc08:	b.ls	43cc14 <_obstack_memory_used@@Base+0x141c>  // b.plast
  43cc0c:	mov	w0, #0x2                   	// #2
  43cc10:	ret
  43cc14:	sub	sp, sp, #0x50
  43cc18:	str	x23, [sp, #32]
  43cc1c:	stp	x22, x21, [sp, #48]
  43cc20:	stp	x20, x19, [sp, #64]
  43cc24:	mov	w22, w4
  43cc28:	mov	x19, x3
  43cc2c:	mov	x21, x2
  43cc30:	mov	x20, x1
  43cc34:	mov	x23, x0
  43cc38:	stp	x29, x30, [sp, #16]
  43cc3c:	add	x29, sp, #0x10
  43cc40:	tbnz	w4, #2, 43cc58 <_obstack_memory_used@@Base+0x1460>
  43cc44:	mov	x0, x20
  43cc48:	bl	404170 <strlen@plt>
  43cc4c:	mov	x2, x0
  43cc50:	mov	x3, xzr
  43cc54:	b	43cc5c <_obstack_memory_used@@Base+0x1464>
  43cc58:	ldp	x3, x2, [x19]
  43cc5c:	ldrb	w8, [x23, #56]
  43cc60:	tbnz	w8, #4, 43cc84 <_obstack_memory_used@@Base+0x148c>
  43cc64:	mov	x0, x23
  43cc68:	mov	x1, x20
  43cc6c:	mov	x4, x2
  43cc70:	mov	x5, x2
  43cc74:	mov	x6, x21
  43cc78:	mov	x7, x19
  43cc7c:	str	w22, [sp]
  43cc80:	b	43cca0 <_obstack_memory_used@@Base+0x14a8>
  43cc84:	str	w22, [sp]
  43cc88:	mov	x0, x23
  43cc8c:	mov	x1, x20
  43cc90:	mov	x4, x2
  43cc94:	mov	x5, x2
  43cc98:	mov	x6, xzr
  43cc9c:	mov	x7, xzr
  43cca0:	bl	43ccc4 <_obstack_memory_used@@Base+0x14cc>
  43cca4:	ldp	x20, x19, [sp, #64]
  43cca8:	ldp	x22, x21, [sp, #48]
  43ccac:	ldr	x23, [sp, #32]
  43ccb0:	ldp	x29, x30, [sp, #16]
  43ccb4:	cmp	w0, #0x0
  43ccb8:	cset	w0, ne  // ne = any
  43ccbc:	add	sp, sp, #0x50
  43ccc0:	ret
  43ccc4:	stp	x29, x30, [sp, #-96]!
  43ccc8:	stp	x28, x27, [sp, #16]
  43cccc:	stp	x26, x25, [sp, #32]
  43ccd0:	stp	x24, x23, [sp, #48]
  43ccd4:	stp	x22, x21, [sp, #64]
  43ccd8:	stp	x20, x19, [sp, #80]
  43ccdc:	mov	x29, sp
  43cce0:	sub	sp, sp, #0x300
  43cce4:	ldr	x22, [x0]
  43cce8:	str	x2, [sp, #288]
  43ccec:	mov	x25, x0
  43ccf0:	mov	x27, x1
  43ccf4:	add	x0, sp, #0x130
  43ccf8:	mov	w2, #0x100                 	// #256
  43ccfc:	mov	w1, wzr
  43cd00:	str	x7, [sp, #160]
  43cd04:	mov	x24, x6
  43cd08:	mov	x28, x5
  43cd0c:	mov	x19, x4
  43cd10:	mov	x26, x3
  43cd14:	bl	4045e0 <memset@plt>
  43cd18:	str	x22, [sp, #456]
  43cd1c:	ldr	x8, [x25, #32]
  43cd20:	cbz	x8, 43cd40 <_obstack_memory_used@@Base+0x1548>
  43cd24:	ldrb	w9, [x25, #56]
  43cd28:	mov	w10, #0x9                   	// #9
  43cd2c:	and	w9, w9, w10
  43cd30:	cmp	w9, #0x8
  43cd34:	ccmp	x26, x19, #0x4, eq  // eq = none
  43cd38:	csel	x21, x8, xzr, ne  // ne = any
  43cd3c:	b	43cd44 <_obstack_memory_used@@Base+0x154c>
  43cd40:	mov	x21, xzr
  43cd44:	ldr	x8, [x25, #48]
  43cd48:	ldr	x9, [x25, #16]
  43cd4c:	mvn	x10, x8
  43cd50:	add	x10, x10, x24
  43cd54:	cmp	x8, x24
  43cd58:	csel	x12, x10, xzr, cc  // cc = lo, ul, last
  43cd5c:	cbz	x9, 43e3e8 <_obstack_memory_used@@Base+0x2bf0>
  43cd60:	ldr	x10, [x22, #72]
  43cd64:	cbz	x10, 43e3e8 <_obstack_memory_used@@Base+0x2bf0>
  43cd68:	ldr	x9, [x22, #80]
  43cd6c:	cbz	x9, 43e3e8 <_obstack_memory_used@@Base+0x2bf0>
  43cd70:	ldr	x8, [x22, #88]
  43cd74:	cbz	x8, 43e3e8 <_obstack_memory_used@@Base+0x2bf0>
  43cd78:	ldr	x11, [x22, #96]
  43cd7c:	cbz	x11, 43e3e8 <_obstack_memory_used@@Base+0x2bf0>
  43cd80:	ldr	x10, [x10, #16]
  43cd84:	ldr	x23, [x25, #40]
  43cd88:	cbnz	x10, 43cd94 <_obstack_memory_used@@Base+0x159c>
  43cd8c:	ldr	x9, [x9, #16]
  43cd90:	cbz	x9, 43e3c8 <_obstack_memory_used@@Base+0x2bd0>
  43cd94:	mov	x20, x19
  43cd98:	sub	x8, x24, x12
  43cd9c:	str	x8, [sp, #208]
  43cda0:	stp	x24, x12, [sp, #144]
  43cda4:	cbz	x8, 43cdb0 <_obstack_memory_used@@Base+0x15b8>
  43cda8:	mov	w8, #0x1                   	// #1
  43cdac:	b	43cdbc <_obstack_memory_used@@Base+0x15c4>
  43cdb0:	ldr	x8, [x22, #152]
  43cdb4:	cmp	x8, #0x0
  43cdb8:	cset	w8, ne  // ne = any
  43cdbc:	str	w8, [sp, #180]
  43cdc0:	ldr	x8, [x22, #16]
  43cdc4:	stp	x25, x27, [sp, #216]
  43cdc8:	ldrsw	x10, [x22, #180]
  43cdcc:	ldr	x9, [x25, #24]
  43cdd0:	ldr	x25, [sp, #288]
  43cdd4:	add	x12, x8, #0x1
  43cdd8:	cmp	x12, x10
  43cddc:	and	x12, x9, #0x400000
  43cde0:	add	x11, x25, #0x1
  43cde4:	ubfx	x9, x9, #22, #1
  43cde8:	csinc	x8, x10, x8, lt  // lt = tstop
  43cdec:	strb	w9, [sp, #440]
  43cdf0:	orr	x9, x23, x12
  43cdf4:	cmp	x11, x8
  43cdf8:	csinc	x1, x8, x25, ge  // ge = tcont
  43cdfc:	cmp	x9, #0x0
  43ce00:	cset	w8, ne  // ne = any
  43ce04:	str	x27, [sp, #304]
  43ce08:	stp	x25, x25, [sp, #384]
  43ce0c:	str	x23, [sp, #424]
  43ce10:	str	w10, [sp, #448]
  43ce14:	strb	w8, [sp, #443]
  43ce18:	ldrb	w8, [x22, #176]
  43ce1c:	add	x0, sp, #0x130
  43ce20:	stp	x25, x25, [sp, #400]
  43ce24:	ubfx	w9, w8, #2, #1
  43ce28:	ubfx	w8, w8, #3, #1
  43ce2c:	strb	w9, [sp, #441]
  43ce30:	strb	w8, [sp, #442]
  43ce34:	bl	43ec60 <_obstack_memory_used@@Base+0x3468>
  43ce38:	str	x22, [sp, #256]
  43ce3c:	cbnz	w0, 43e5a0 <_obstack_memory_used@@Base+0x2da8>
  43ce40:	add	x8, x22, #0xb8
  43ce44:	str	x8, [sp, #432]
  43ce48:	ldrb	w8, [x22, #176]
  43ce4c:	ldrb	w9, [sp, #443]
  43ce50:	ldr	w10, [x29, #96]
  43ce54:	ubfx	w8, w8, #4, #1
  43ce58:	strb	w8, [sp, #446]
  43ce5c:	str	w10, [sp, #300]
  43ce60:	cbz	w9, 43ce6c <_obstack_memory_used@@Base+0x1674>
  43ce64:	mov	x8, xzr
  43ce68:	b	43ce80 <_obstack_memory_used@@Base+0x1688>
  43ce6c:	ldr	x8, [sp, #224]
  43ce70:	str	x8, [sp, #312]
  43ce74:	ldr	w8, [x22, #180]
  43ce78:	cmp	w8, #0x1
  43ce7c:	csel	x8, xzr, x25, gt
  43ce80:	ldr	x9, [sp, #216]
  43ce84:	stp	x8, x8, [sp, #352]
  43ce88:	stp	x28, x28, [sp, #400]
  43ce8c:	ldrb	w8, [x9, #56]
  43ce90:	ldr	w9, [sp, #300]
  43ce94:	lsr	w8, w8, #7
  43ce98:	strb	w8, [sp, #445]
  43ce9c:	ldr	x24, [x22, #152]
  43cea0:	mov	x8, #0xffffffffffffffff    	// #-1
  43cea4:	str	w9, [sp, #464]
  43cea8:	str	x8, [sp, #472]
  43ceac:	lsl	x22, x24, #1
  43ceb0:	cmp	x24, #0x1
  43ceb4:	b.lt	43cef4 <_obstack_memory_used@@Base+0x16fc>  // b.tstop
  43ceb8:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  43cebc:	movk	x8, #0x666, lsl #48
  43cec0:	cmp	x22, x8
  43cec4:	b.hi	43e5dc <_obstack_memory_used@@Base+0x2de4>  // b.pmore
  43cec8:	add	x8, x24, x24, lsl #2
  43cecc:	lsl	x0, x8, #4
  43ced0:	bl	4044d0 <malloc@plt>
  43ced4:	mov	x19, x0
  43ced8:	str	x0, [sp, #520]
  43cedc:	lsl	x0, x24, #4
  43cee0:	bl	4044d0 <malloc@plt>
  43cee4:	mov	w27, #0xc                   	// #12
  43cee8:	str	x0, [sp, #552]
  43ceec:	cbz	x19, 43e370 <_obstack_memory_used@@Base+0x2b78>
  43cef0:	cbz	x0, 43e370 <_obstack_memory_used@@Base+0x2b78>
  43cef4:	ldr	x9, [sp, #208]
  43cef8:	ldr	x19, [sp, #256]
  43cefc:	mov	w8, #0x1                   	// #1
  43cf00:	str	x22, [sp, #512]
  43cf04:	cmp	x9, #0x1
  43cf08:	str	w8, [sp, #528]
  43cf0c:	str	x22, [sp, #544]
  43cf10:	b.hi	43cf24 <_obstack_memory_used@@Base+0x172c>  // b.pmore
  43cf14:	ldrb	w8, [x19, #176]
  43cf18:	tbnz	w8, #1, 43cf24 <_obstack_memory_used@@Base+0x172c>
  43cf1c:	str	xzr, [sp, #488]
  43cf20:	b	43cf48 <_obstack_memory_used@@Base+0x1750>
  43cf24:	ldr	x8, [sp, #368]
  43cf28:	mov	x9, #0x1ffffffffffffffe    	// #2305843009213693950
  43cf2c:	cmp	x8, x9
  43cf30:	b.hi	43e5dc <_obstack_memory_used@@Base+0x2de4>  // b.pmore
  43cf34:	lsl	x8, x8, #3
  43cf38:	add	x0, x8, #0x8
  43cf3c:	bl	4044d0 <malloc@plt>
  43cf40:	str	x0, [sp, #488]
  43cf44:	cbz	x0, 43e5dc <_obstack_memory_used@@Base+0x2de4>
  43cf48:	ldr	w9, [sp, #300]
  43cf4c:	mov	w10, #0x6                   	// #6
  43cf50:	stur	x26, [x29, #-208]
  43cf54:	add	x8, sp, #0x130
  43cf58:	tst	w9, #0x1
  43cf5c:	mov	w9, #0x4                   	// #4
  43cf60:	csel	w9, w10, w9, eq  // eq = none
  43cf64:	str	w9, [sp, #416]
  43cf68:	ldr	w19, [x19, #180]
  43cf6c:	cmp	x20, x26
  43cf70:	csel	x28, x20, x26, lt  // lt = tstop
  43cf74:	csel	x24, x26, x20, lt  // lt = tstop
  43cf78:	cbz	x21, 43cf8c <_obstack_memory_used@@Base+0x1794>
  43cf7c:	cmp	w19, #0x1
  43cf80:	b.ne	43cf94 <_obstack_memory_used@@Base+0x179c>  // b.any
  43cf84:	mov	w9, #0x4                   	// #4
  43cf88:	b	43cfb0 <_obstack_memory_used@@Base+0x17b8>
  43cf8c:	mov	w9, #0x8                   	// #8
  43cf90:	b	43cfc8 <_obstack_memory_used@@Base+0x17d0>
  43cf94:	ldr	x9, [sp, #216]
  43cf98:	ldr	x9, [x9, #24]
  43cf9c:	and	x9, x9, #0x400000
  43cfa0:	orr	x9, x23, x9
  43cfa4:	cmp	x9, #0x0
  43cfa8:	cset	w9, eq  // eq = none
  43cfac:	lsl	w9, w9, #2
  43cfb0:	cmp	x20, x26
  43cfb4:	cset	w10, ge  // ge = tcont
  43cfb8:	cmp	x23, #0x0
  43cfbc:	cset	w11, ne  // ne = any
  43cfc0:	bfi	w11, w10, #1, #1
  43cfc4:	orr	w9, w11, w9
  43cfc8:	add	x8, x8, #0x38
  43cfcc:	str	x8, [sp, #136]
  43cfd0:	add	x8, sp, #0x130
  43cfd4:	cmp	x20, x26
  43cfd8:	sub	x10, x29, #0xd0
  43cfdc:	add	x8, x8, #0xc0
  43cfe0:	mov	x11, #0xffffffffffffffff    	// #-1
  43cfe4:	str	x8, [sp, #200]
  43cfe8:	csel	x8, xzr, x10, lt  // lt = tstop
  43cfec:	sub	x12, x29, #0x40
  43cff0:	cneg	x20, x11, ge  // ge = tcont
  43cff4:	cmp	x8, #0x0
  43cff8:	sub	w22, w9, #0x4
  43cffc:	add	x9, x12, #0x20
  43d000:	str	x8, [sp, #184]
  43d004:	cset	w8, ne  // ne = any
  43d008:	str	x9, [sp, #168]
  43d00c:	str	w8, [sp, #196]
  43d010:	stp	x22, x20, [sp, #264]
  43d014:	str	w19, [sp, #252]
  43d018:	str	x28, [sp, #240]
  43d01c:	cmp	w22, #0x4
  43d020:	b.hi	43d174 <_obstack_memory_used@@Base+0x197c>  // b.pmore
  43d024:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x19808>
  43d028:	add	x10, x10, #0x9db
  43d02c:	adr	x8, 43d03c <_obstack_memory_used@@Base+0x1844>
  43d030:	ldrb	w9, [x10, x22]
  43d034:	add	x8, x8, x9, lsl #2
  43d038:	br	x8
  43d03c:	cmp	x26, x28
  43d040:	b.lt	43e36c <_obstack_memory_used@@Base+0x2b74>  // b.tstop
  43d044:	ldr	x9, [sp, #224]
  43d048:	cmp	x26, x25
  43d04c:	b.ge	43d05c <_obstack_memory_used@@Base+0x1864>  // b.tcont
  43d050:	ldrb	w8, [x9, x26]
  43d054:	cbnz	x23, 43d064 <_obstack_memory_used@@Base+0x186c>
  43d058:	b	43d068 <_obstack_memory_used@@Base+0x1870>
  43d05c:	mov	w8, wzr
  43d060:	cbz	x23, 43d068 <_obstack_memory_used@@Base+0x1870>
  43d064:	ldrb	w8, [x23, w8, uxtw]
  43d068:	ldrb	w8, [x21, w8, uxtw]
  43d06c:	cbnz	w8, 43d0e4 <_obstack_memory_used@@Base+0x18ec>
  43d070:	cmp	x26, x28
  43d074:	sub	x26, x26, #0x1
  43d078:	stur	x26, [x29, #-208]
  43d07c:	b.gt	43d048 <_obstack_memory_used@@Base+0x1850>
  43d080:	b	43e36c <_obstack_memory_used@@Base+0x2b74>
  43d084:	cmp	x26, x24
  43d088:	b.ge	43d0dc <_obstack_memory_used@@Base+0x18e4>  // b.tcont
  43d08c:	ldr	x9, [sp, #224]
  43d090:	ldrb	w8, [x9, x26]
  43d094:	ldrb	w8, [x23, x8]
  43d098:	ldrb	w8, [x21, x8]
  43d09c:	cbnz	w8, 43d0dc <_obstack_memory_used@@Base+0x18e4>
  43d0a0:	add	x26, x26, #0x1
  43d0a4:	cmp	x26, x24
  43d0a8:	stur	x26, [x29, #-208]
  43d0ac:	b.lt	43d090 <_obstack_memory_used@@Base+0x1898>  // b.tstop
  43d0b0:	b	43d0dc <_obstack_memory_used@@Base+0x18e4>
  43d0b4:	ldr	x9, [sp, #224]
  43d0b8:	cmp	x26, x24
  43d0bc:	b.ge	43d0dc <_obstack_memory_used@@Base+0x18e4>  // b.tcont
  43d0c0:	ldrb	w8, [x9, x26]
  43d0c4:	ldrb	w8, [x21, x8]
  43d0c8:	cbnz	w8, 43d0dc <_obstack_memory_used@@Base+0x18e4>
  43d0cc:	add	x26, x26, #0x1
  43d0d0:	cmp	x26, x24
  43d0d4:	stur	x26, [x29, #-208]
  43d0d8:	b.lt	43d0c0 <_obstack_memory_used@@Base+0x18c8>  // b.tstop
  43d0dc:	cmp	x26, x24
  43d0e0:	b.eq	43e2a8 <_obstack_memory_used@@Base+0x2ab0>  // b.none
  43d0e4:	ldr	w2, [sp, #300]
  43d0e8:	add	x0, sp, #0x130
  43d0ec:	mov	x1, x26
  43d0f0:	bl	4434d8 <_obstack_memory_used@@Base+0x7ce0>
  43d0f4:	cbnz	w0, 43e5a0 <_obstack_memory_used@@Base+0x2da8>
  43d0f8:	cmp	w19, #0x1
  43d0fc:	b.eq	43d118 <_obstack_memory_used@@Base+0x1920>  // b.none
  43d100:	ldr	x8, [sp, #352]
  43d104:	cbz	x8, 43d118 <_obstack_memory_used@@Base+0x1920>
  43d108:	ldr	x8, [sp, #320]
  43d10c:	ldr	w8, [x8]
  43d110:	cmn	w8, #0x1
  43d114:	b.eq	43e1bc <_obstack_memory_used@@Base+0x29c4>  // b.none
  43d118:	ldr	x8, [sp, #200]
  43d11c:	str	wzr, [sp, #528]
  43d120:	stur	wzr, [x29, #-196]
  43d124:	stp	xzr, xzr, [x8]
  43d128:	ldr	x19, [sp, #456]
  43d12c:	ldr	x27, [sp, #376]
  43d130:	ldr	x28, [x19, #72]
  43d134:	ldrsb	w8, [x28, #104]
  43d138:	tbnz	w8, #31, 43d144 <_obstack_memory_used@@Base+0x194c>
  43d13c:	ldr	w26, [sp, #196]
  43d140:	b	43d1f0 <_obstack_memory_used@@Base+0x19f8>
  43d144:	ldr	w2, [sp, #464]
  43d148:	sub	x1, x27, #0x1
  43d14c:	add	x0, sp, #0x130
  43d150:	bl	44420c <_obstack_memory_used@@Base+0x8a14>
  43d154:	ldr	w26, [sp, #196]
  43d158:	tbnz	w0, #0, 43d1ec <_obstack_memory_used@@Base+0x19f4>
  43d15c:	mov	w3, w0
  43d160:	cbz	w0, 43d1f0 <_obstack_memory_used@@Base+0x19f8>
  43d164:	tbz	w3, #1, 43e1e0 <_obstack_memory_used@@Base+0x29e8>
  43d168:	tbz	w3, #2, 43e1e0 <_obstack_memory_used@@Base+0x29e8>
  43d16c:	ldr	x28, [x19, #96]
  43d170:	b	43d1f0 <_obstack_memory_used@@Base+0x19f8>
  43d174:	ldr	x8, [sp, #344]
  43d178:	ldr	x10, [sp, #360]
  43d17c:	sub	x9, x26, x8
  43d180:	cmp	x9, x10
  43d184:	b.cs	43d1c8 <_obstack_memory_used@@Base+0x19d0>  // b.hs, b.nlast
  43d188:	cmp	x26, x25
  43d18c:	b.ge	43d19c <_obstack_memory_used@@Base+0x19a4>  // b.tcont
  43d190:	ldr	x10, [sp, #312]
  43d194:	ldrb	w9, [x10, x9]
  43d198:	b	43d1a0 <_obstack_memory_used@@Base+0x19a8>
  43d19c:	mov	x9, xzr
  43d1a0:	ldrb	w9, [x21, x9]
  43d1a4:	cbnz	w9, 43d0e4 <_obstack_memory_used@@Base+0x18ec>
  43d1a8:	add	x26, x26, x20
  43d1ac:	cmp	x26, x28
  43d1b0:	mov	w27, #0x1                   	// #1
  43d1b4:	stur	x26, [x29, #-208]
  43d1b8:	b.lt	43e370 <_obstack_memory_used@@Base+0x2b78>  // b.tstop
  43d1bc:	cmp	x26, x24
  43d1c0:	b.le	43d178 <_obstack_memory_used@@Base+0x1980>
  43d1c4:	b	43e370 <_obstack_memory_used@@Base+0x2b78>
  43d1c8:	ldr	w2, [sp, #300]
  43d1cc:	add	x0, sp, #0x130
  43d1d0:	mov	x1, x26
  43d1d4:	bl	4434d8 <_obstack_memory_used@@Base+0x7ce0>
  43d1d8:	cbnz	w0, 43e5a0 <_obstack_memory_used@@Base+0x2da8>
  43d1dc:	ldur	x26, [x29, #-208]
  43d1e0:	ldr	x8, [sp, #344]
  43d1e4:	sub	x9, x26, x8
  43d1e8:	b	43d188 <_obstack_memory_used@@Base+0x1990>
  43d1ec:	ldr	x28, [x19, #80]
  43d1f0:	cbz	x28, 43e5a8 <_obstack_memory_used@@Base+0x2db0>
  43d1f4:	ldr	x8, [sp, #488]
  43d1f8:	mov	w11, w26
  43d1fc:	cbz	x8, 43d210 <_obstack_memory_used@@Base+0x1a18>
  43d200:	str	x28, [x8, x27, lsl #3]
  43d204:	ldr	x8, [x19, #152]
  43d208:	mov	w11, w26
  43d20c:	cbnz	x8, 43e268 <_obstack_memory_used@@Base+0x2a70>
  43d210:	ldrsb	w25, [x28, #104]
  43d214:	tbnz	w25, #4, 43e24c <_obstack_memory_used@@Base+0x2a54>
  43d218:	str	xzr, [sp, #232]
  43d21c:	mov	x26, #0xffffffffffffffff    	// #-1
  43d220:	ldr	x8, [sp, #408]
  43d224:	ldr	x19, [sp, #376]
  43d228:	cmp	x8, x19
  43d22c:	b.le	43dfcc <_obstack_memory_used@@Base+0x27d4>
  43d230:	ldr	x8, [sp, #184]
  43d234:	str	x8, [sp, #280]
  43d238:	ldr	x9, [sp, #368]
  43d23c:	ldr	x8, [sp, #392]
  43d240:	add	x20, x19, #0x1
  43d244:	mov	x22, x28
  43d248:	cmp	x20, x9
  43d24c:	b.lt	43d258 <_obstack_memory_used@@Base+0x1a60>  // b.tstop
  43d250:	cmp	x9, x8
  43d254:	b.lt	43d3d4 <_obstack_memory_used@@Base+0x1bdc>  // b.tstop
  43d258:	ldr	x9, [sp, #352]
  43d25c:	cmp	x20, x9
  43d260:	b.lt	43d26c <_obstack_memory_used@@Base+0x1a74>  // b.tstop
  43d264:	cmp	x9, x8
  43d268:	b.lt	43d3d4 <_obstack_memory_used@@Base+0x1bdc>  // b.tstop
  43d26c:	tbnz	w25, #5, 43d404 <_obstack_memory_used@@Base+0x1c0c>
  43d270:	ldr	x8, [sp, #376]
  43d274:	ldr	x9, [sp, #312]
  43d278:	mov	x25, x22
  43d27c:	add	x10, x8, #0x1
  43d280:	str	x10, [sp, #376]
  43d284:	ldrb	w19, [x9, x8]
  43d288:	ldr	x0, [x25, #88]!
  43d28c:	cbz	x0, 43d674 <_obstack_memory_used@@Base+0x1e7c>
  43d290:	ldr	x28, [x0, x19, lsl #3]
  43d294:	ldr	x8, [sp, #488]
  43d298:	cbz	x8, 43d2b8 <_obstack_memory_used@@Base+0x1ac0>
  43d29c:	sub	x0, x29, #0xc4
  43d2a0:	add	x1, sp, #0x130
  43d2a4:	mov	x2, x28
  43d2a8:	mov	w19, w11
  43d2ac:	bl	444ad8 <_obstack_memory_used@@Base+0x92e0>
  43d2b0:	mov	w11, w19
  43d2b4:	mov	x28, x0
  43d2b8:	cbz	x28, 43d2e4 <_obstack_memory_used@@Base+0x1aec>
  43d2bc:	ldrsb	w25, [x28, #104]
  43d2c0:	cmp	x22, x28
  43d2c4:	mov	x22, x27
  43d2c8:	cset	w27, eq  // eq = none
  43d2cc:	tst	w11, w27
  43d2d0:	csel	x22, x20, x22, ne  // ne = any
  43d2d4:	tbnz	w25, #4, 43d360 <_obstack_memory_used@@Base+0x1b68>
  43d2d8:	ldr	x19, [sp, #376]
  43d2dc:	ldr	x20, [sp, #272]
  43d2e0:	b	43d3b0 <_obstack_memory_used@@Base+0x1bb8>
  43d2e4:	ldur	w8, [x29, #-196]
  43d2e8:	cbnz	w8, 43e5dc <_obstack_memory_used@@Base+0x2de4>
  43d2ec:	ldr	x8, [sp, #232]
  43d2f0:	ldr	w9, [sp, #180]
  43d2f4:	cmp	x8, #0x0
  43d2f8:	cset	w8, ne  // ne = any
  43d2fc:	bic	w8, w8, w9
  43d300:	tbnz	w8, #0, 43dfd8 <_obstack_memory_used@@Base+0x27e0>
  43d304:	ldr	x10, [sp, #488]
  43d308:	cbz	x10, 43dfd8 <_obstack_memory_used@@Base+0x27e0>
  43d30c:	mov	w19, w11
  43d310:	ldr	x8, [sp, #496]
  43d314:	ldr	x9, [sp, #376]
  43d318:	add	x10, x10, #0x8
  43d31c:	cmp	x9, x8
  43d320:	b.ge	43dfd8 <_obstack_memory_used@@Base+0x27e0>  // b.tcont
  43d324:	add	x11, x9, #0x1
  43d328:	str	x11, [sp, #376]
  43d32c:	ldr	x12, [x10, x9, lsl #3]
  43d330:	mov	x9, x11
  43d334:	cbz	x12, 43d31c <_obstack_memory_used@@Base+0x1b24>
  43d338:	sub	x0, x29, #0xc4
  43d33c:	add	x1, sp, #0x130
  43d340:	mov	x2, xzr
  43d344:	bl	444ad8 <_obstack_memory_used@@Base+0x92e0>
  43d348:	mov	x28, x0
  43d34c:	cbnz	x0, 43d3c8 <_obstack_memory_used@@Base+0x1bd0>
  43d350:	ldur	w8, [x29, #-196]
  43d354:	cbnz	w8, 43d3c8 <_obstack_memory_used@@Base+0x1bd0>
  43d358:	ldr	x10, [sp, #488]
  43d35c:	b	43d310 <_obstack_memory_used@@Base+0x1b18>
  43d360:	ldr	x19, [sp, #376]
  43d364:	ldr	x20, [sp, #272]
  43d368:	tbz	w25, #31, 43d398 <_obstack_memory_used@@Base+0x1ba0>
  43d36c:	add	x0, sp, #0x130
  43d370:	mov	x1, x28
  43d374:	mov	x2, x19
  43d378:	str	x24, [sp, #128]
  43d37c:	mov	x24, x23
  43d380:	mov	w23, w11
  43d384:	bl	443b2c <_obstack_memory_used@@Base+0x8334>
  43d388:	mov	w11, w23
  43d38c:	mov	x23, x24
  43d390:	ldr	x24, [sp, #128]
  43d394:	cbz	x0, 43d3b0 <_obstack_memory_used@@Base+0x1bb8>
  43d398:	ldr	w8, [sp, #180]
  43d39c:	cbz	w8, 43e244 <_obstack_memory_used@@Base+0x2a4c>
  43d3a0:	mov	x26, x19
  43d3a4:	mov	w8, #0x1                   	// #1
  43d3a8:	str	xzr, [sp, #280]
  43d3ac:	str	x8, [sp, #232]
  43d3b0:	ldr	x8, [sp, #408]
  43d3b4:	and	w11, w11, w27
  43d3b8:	mov	x27, x22
  43d3bc:	cmp	x8, x19
  43d3c0:	b.gt	43d238 <_obstack_memory_used@@Base+0x1a40>
  43d3c4:	b	43dfdc <_obstack_memory_used@@Base+0x27e4>
  43d3c8:	mov	w11, w19
  43d3cc:	cbnz	x28, 43d2bc <_obstack_memory_used@@Base+0x1ac4>
  43d3d0:	b	43dfd8 <_obstack_memory_used@@Base+0x27e0>
  43d3d4:	add	w1, w19, #0x2
  43d3d8:	add	x0, sp, #0x130
  43d3dc:	mov	x25, x22
  43d3e0:	mov	w22, w11
  43d3e4:	bl	444a10 <_obstack_memory_used@@Base+0x9218>
  43d3e8:	stur	w0, [x29, #-196]
  43d3ec:	cbnz	w0, 43e5e4 <_obstack_memory_used@@Base+0x2dec>
  43d3f0:	mov	x8, x25
  43d3f4:	ldrb	w25, [x25, #104]
  43d3f8:	mov	w11, w22
  43d3fc:	mov	x22, x8
  43d400:	tbz	w25, #5, 43d270 <_obstack_memory_used@@Base+0x1a78>
  43d404:	ldr	x8, [x22, #16]
  43d408:	str	x27, [sp, #112]
  43d40c:	cmp	x8, #0x1
  43d410:	b.lt	43d580 <_obstack_memory_used@@Base+0x1d88>  // b.tstop
  43d414:	ldr	x8, [sp, #456]
  43d418:	mov	x25, xzr
  43d41c:	stp	x22, x8, [sp, #120]
  43d420:	ldr	x8, [x22, #24]
  43d424:	ldr	x19, [x8, x25, lsl #3]
  43d428:	ldr	x8, [sp, #128]
  43d42c:	ldr	x8, [x8]
  43d430:	add	x8, x8, x19, lsl #4
  43d434:	ldr	w27, [x8, #8]
  43d438:	tbz	w27, #20, 43d56c <_obstack_memory_used@@Base+0x1d74>
  43d43c:	ldr	x28, [sp, #376]
  43d440:	tst	w27, #0x3ff00
  43d444:	b.eq	43d484 <_obstack_memory_used@@Base+0x1c8c>  // b.none
  43d448:	ldr	w2, [sp, #464]
  43d44c:	add	x0, sp, #0x130
  43d450:	mov	x1, x28
  43d454:	mov	w22, w11
  43d458:	bl	44420c <_obstack_memory_used@@Base+0x8a14>
  43d45c:	mov	w11, w22
  43d460:	and	w8, w0, #0x1
  43d464:	tbz	w27, #10, 43d46c <_obstack_memory_used@@Base+0x1c74>
  43d468:	cbz	w8, 43d56c <_obstack_memory_used@@Base+0x1d74>
  43d46c:	tbz	w27, #11, 43d474 <_obstack_memory_used@@Base+0x1c7c>
  43d470:	cbnz	w8, 43d56c <_obstack_memory_used@@Base+0x1d74>
  43d474:	tbz	w27, #13, 43d47c <_obstack_memory_used@@Base+0x1c84>
  43d478:	tbz	w0, #1, 43d56c <_obstack_memory_used@@Base+0x1d74>
  43d47c:	tbz	w27, #15, 43d484 <_obstack_memory_used@@Base+0x1c8c>
  43d480:	tbz	w0, #3, 43d56c <_obstack_memory_used@@Base+0x1d74>
  43d484:	ldr	x0, [sp, #128]
  43d488:	add	x2, sp, #0x130
  43d48c:	mov	x1, x19
  43d490:	mov	x3, x28
  43d494:	mov	w22, w11
  43d498:	bl	445be4 <_obstack_memory_used@@Base+0xa3ec>
  43d49c:	mov	w11, w22
  43d4a0:	cbz	w0, 43d56c <_obstack_memory_used@@Base+0x1d74>
  43d4a4:	ldr	x8, [sp, #376]
  43d4a8:	ldr	w9, [sp, #528]
  43d4ac:	add	x28, x8, w0, sxtw
  43d4b0:	cmp	w9, w0
  43d4b4:	csel	w8, w0, w9, lt  // lt = tstop
  43d4b8:	add	x0, sp, #0x130
  43d4bc:	mov	x1, x28
  43d4c0:	str	w8, [sp, #528]
  43d4c4:	bl	444e50 <_obstack_memory_used@@Base+0x9658>
  43d4c8:	stur	w0, [x29, #-96]
  43d4cc:	cbnz	w0, 43d58c <_obstack_memory_used@@Base+0x1d94>
  43d4d0:	ldr	x10, [sp, #128]
  43d4d4:	ldr	x9, [sp, #488]
  43d4d8:	ldr	x8, [x10, #24]
  43d4dc:	ldr	x10, [x10, #48]
  43d4e0:	ldr	x8, [x8, x19, lsl #3]
  43d4e4:	ldr	x19, [x9, x28, lsl #3]
  43d4e8:	mov	w9, #0x18                  	// #24
  43d4ec:	madd	x2, x8, x9, x10
  43d4f0:	cbz	x19, 43d50c <_obstack_memory_used@@Base+0x1d14>
  43d4f4:	ldr	x1, [x19, #80]
  43d4f8:	sub	x0, x29, #0x40
  43d4fc:	bl	444c20 <_obstack_memory_used@@Base+0x9428>
  43d500:	stur	w0, [x29, #-96]
  43d504:	cbz	w0, 43d51c <_obstack_memory_used@@Base+0x1d24>
  43d508:	b	43d58c <_obstack_memory_used@@Base+0x1d94>
  43d50c:	ldr	x8, [x2, #16]
  43d510:	ldr	q0, [x2]
  43d514:	stur	x8, [x29, #-48]
  43d518:	stur	q0, [x29, #-64]
  43d51c:	ldr	w2, [sp, #464]
  43d520:	sub	x1, x28, #0x1
  43d524:	add	x0, sp, #0x130
  43d528:	bl	44420c <_obstack_memory_used@@Base+0x8a14>
  43d52c:	ldr	x1, [sp, #128]
  43d530:	mov	w3, w0
  43d534:	sub	x0, x29, #0x60
  43d538:	sub	x2, x29, #0x40
  43d53c:	bl	443100 <_obstack_memory_used@@Base+0x7908>
  43d540:	ldr	x8, [sp, #488]
  43d544:	str	x0, [x8, x28, lsl #3]
  43d548:	cbz	x19, 43d554 <_obstack_memory_used@@Base+0x1d5c>
  43d54c:	ldur	x0, [x29, #-48]
  43d550:	bl	4049b0 <free@plt>
  43d554:	ldr	x8, [sp, #488]
  43d558:	mov	w11, w22
  43d55c:	ldr	x8, [x8, x28, lsl #3]
  43d560:	cbnz	x8, 43d56c <_obstack_memory_used@@Base+0x1d74>
  43d564:	ldur	w0, [x29, #-96]
  43d568:	cbnz	w0, 43d590 <_obstack_memory_used@@Base+0x1d98>
  43d56c:	ldr	x22, [sp, #120]
  43d570:	add	x25, x25, #0x1
  43d574:	ldr	x8, [x22, #16]
  43d578:	cmp	x25, x8
  43d57c:	b.lt	43d420 <_obstack_memory_used@@Base+0x1c28>  // b.tstop
  43d580:	ldr	x27, [sp, #112]
  43d584:	stur	wzr, [x29, #-196]
  43d588:	b	43d270 <_obstack_memory_used@@Base+0x1a78>
  43d58c:	mov	w11, w22
  43d590:	ldp	x27, x22, [sp, #112]
  43d594:	mov	x28, xzr
  43d598:	stur	w0, [x29, #-196]
  43d59c:	b	43d294 <_obstack_memory_used@@Base+0x1a9c>
  43d5a0:	ldr	x24, [sp, #96]
  43d5a4:	cmp	x24, #0x1
  43d5a8:	b.lt	43d5c4 <_obstack_memory_used@@Base+0x1dcc>  // b.tstop
  43d5ac:	ldr	x8, [sp, #80]
  43d5b0:	add	x27, x8, #0x10
  43d5b4:	ldr	x0, [x27], #24
  43d5b8:	bl	4049b0 <free@plt>
  43d5bc:	subs	x24, x24, #0x1
  43d5c0:	b.ne	43d5b4 <_obstack_memory_used@@Base+0x1dbc>  // b.any
  43d5c4:	mov	x8, #0xffffffffffffffff    	// #-1
  43d5c8:	str	x8, [sp, #96]
  43d5cc:	b	43de98 <_obstack_memory_used@@Base+0x26a0>
  43d5d0:	stp	xzr, xzr, [x27]
  43d5d4:	b	43d5a4 <_obstack_memory_used@@Base+0x1dac>
  43d5d8:	mov	w0, #0x8                   	// #8
  43d5dc:	mov	w1, #0x200                 	// #512
  43d5e0:	bl	404680 <calloc@plt>
  43d5e4:	str	x0, [x22, #96]
  43d5e8:	cbz	x0, 43df5c <_obstack_memory_used@@Base+0x2764>
  43d5ec:	ldr	x10, [sp, #48]
  43d5f0:	ldr	x11, [sp, #64]
  43d5f4:	mov	x8, xzr
  43d5f8:	mov	x9, xzr
  43d5fc:	sub	x10, x10, #0x8
  43d600:	ldr	x12, [x27, x9, lsl #3]
  43d604:	cbz	x12, 43d65c <_obstack_memory_used@@Base+0x1e64>
  43d608:	mov	x13, x8
  43d60c:	mov	w14, #0x1                   	// #1
  43d610:	tbnz	w12, #0, 43d628 <_obstack_memory_used@@Base+0x1e30>
  43d614:	lsl	x14, x14, #1
  43d618:	lsr	x12, x12, #1
  43d61c:	add	x13, x13, #0x1
  43d620:	cbnz	x12, 43d610 <_obstack_memory_used@@Base+0x1e18>
  43d624:	b	43d65c <_obstack_memory_used@@Base+0x1e64>
  43d628:	mov	x16, x11
  43d62c:	mov	x15, x10
  43d630:	ldr	x17, [x16], #32
  43d634:	add	x15, x15, #0x8
  43d638:	tst	x17, x14
  43d63c:	b.eq	43d630 <_obstack_memory_used@@Base+0x1e38>  // b.none
  43d640:	ldr	x17, [sp, #96]
  43d644:	ldr	x16, [x15]
  43d648:	ldr	x15, [x15, x17, lsl #3]
  43d64c:	add	x17, x0, x13, lsl #3
  43d650:	str	x16, [x17]
  43d654:	str	x15, [x17, #2048]
  43d658:	b	43d614 <_obstack_memory_used@@Base+0x1e1c>
  43d65c:	add	x9, x9, #0x1
  43d660:	add	x8, x8, #0x40
  43d664:	cmp	x9, #0x4
  43d668:	add	x11, x11, #0x8
  43d66c:	b.ne	43d600 <_obstack_memory_used@@Base+0x1e08>  // b.any
  43d670:	b	43de58 <_obstack_memory_used@@Base+0x2660>
  43d674:	str	x27, [sp, #112]
  43d678:	ldr	x27, [x22, #96]
  43d67c:	str	w11, [sp, #108]
  43d680:	mov	x8, x22
  43d684:	cbnz	x27, 43df2c <_obstack_memory_used@@Base+0x2734>
  43d688:	ldr	x8, [sp, #456]
  43d68c:	mov	w0, #0x3800                	// #14336
  43d690:	str	x24, [sp, #128]
  43d694:	str	x23, [sp, #8]
  43d698:	str	x8, [sp, #88]
  43d69c:	bl	4044d0 <malloc@plt>
  43d6a0:	str	x0, [sp, #80]
  43d6a4:	cbz	x0, 43dfa0 <_obstack_memory_used@@Base+0x27a8>
  43d6a8:	movi	v0.2d, #0x0
  43d6ac:	stp	xzr, xzr, [x25]
  43d6b0:	stp	q0, q0, [x29, #-64]
  43d6b4:	ldr	x8, [x22, #16]
  43d6b8:	cmp	x8, #0x1
  43d6bc:	b.lt	43de94 <_obstack_memory_used@@Base+0x269c>  // b.tstop
  43d6c0:	ldr	x9, [sp, #80]
  43d6c4:	mov	w8, #0x1800                	// #6144
  43d6c8:	str	xzr, [sp, #96]
  43d6cc:	add	x8, x9, x8
  43d6d0:	stp	x8, xzr, [sp, #64]
  43d6d4:	ldr	x8, [sp, #88]
  43d6d8:	add	x8, x8, #0xb8
  43d6dc:	str	x8, [sp, #32]
  43d6e0:	ldr	x8, [x22, #24]
  43d6e4:	ldr	x9, [sp, #88]
  43d6e8:	ldr	x10, [sp, #72]
  43d6ec:	ldr	x9, [x9]
  43d6f0:	ldr	x8, [x8, x10, lsl #3]
  43d6f4:	add	x8, x9, x8, lsl #4
  43d6f8:	str	x8, [sp, #40]
  43d6fc:	ldr	w9, [x8, #8]!
  43d700:	and	w10, w9, #0xff
  43d704:	mov	w27, w10
  43d708:	cmp	w10, #0x1
  43d70c:	b.ne	43d7c8 <_obstack_memory_used@@Base+0x1fd0>  // b.any
  43d710:	ldr	x10, [sp, #40]
  43d714:	sub	x13, x29, #0x40
  43d718:	mov	w14, #0x1                   	// #1
  43d71c:	ldrb	w10, [x10]
  43d720:	lsr	x11, x10, #3
  43d724:	and	x11, x11, #0x18
  43d728:	ldr	x12, [x13, x11]
  43d72c:	lsl	x10, x14, x10
  43d730:	orr	x10, x10, x12
  43d734:	str	x10, [x13, x11]
  43d738:	and	w10, w9, #0x3ff00
  43d73c:	cbz	w10, 43d98c <_obstack_memory_used@@Base+0x2194>
  43d740:	tbz	w9, #13, 43d75c <_obstack_memory_used@@Base+0x1f64>
  43d744:	ldur	x10, [x29, #-64]
  43d748:	movi	v0.2d, #0x0
  43d74c:	stp	q0, q0, [x29, #-64]
  43d750:	tbz	w10, #10, 43db5c <_obstack_memory_used@@Base+0x2364>
  43d754:	mov	w10, #0x400                 	// #1024
  43d758:	stur	x10, [x29, #-64]
  43d75c:	tbnz	w9, #15, 43db54 <_obstack_memory_used@@Base+0x235c>
  43d760:	tbz	w9, #10, 43d8f0 <_obstack_memory_used@@Base+0x20f8>
  43d764:	cmp	w27, #0x1
  43d768:	b.ne	43d774 <_obstack_memory_used@@Base+0x1f7c>  // b.any
  43d76c:	ldrb	w10, [x8, #2]
  43d770:	tbz	w10, #6, 43db54 <_obstack_memory_used@@Base+0x235c>
  43d774:	ldr	x10, [sp, #88]
  43d778:	ldr	w10, [x10, #180]
  43d77c:	cmp	w10, #0x1
  43d780:	b.le	43d8bc <_obstack_memory_used@@Base+0x20c4>
  43d784:	ldr	x10, [sp, #88]
  43d788:	mov	x11, xzr
  43d78c:	ldr	x12, [x10, #120]
  43d790:	mov	x10, xzr
  43d794:	ldr	x13, [sp, #32]
  43d798:	ldr	x14, [x12, x11]
  43d79c:	sub	x16, x29, #0x40
  43d7a0:	ldr	x15, [x16, x11]
  43d7a4:	ldr	x13, [x13, x11]
  43d7a8:	orn	x13, x13, x14
  43d7ac:	and	x13, x15, x13
  43d7b0:	str	x13, [x16, x11]
  43d7b4:	add	x11, x11, #0x8
  43d7b8:	cmp	x11, #0x20
  43d7bc:	orr	x10, x13, x10
  43d7c0:	b.ne	43d794 <_obstack_memory_used@@Base+0x1f9c>  // b.any
  43d7c4:	b	43d8ec <_obstack_memory_used@@Base+0x20f4>
  43d7c8:	cmp	w27, #0x7
  43d7cc:	b.eq	43d850 <_obstack_memory_used@@Base+0x2058>  // b.none
  43d7d0:	cmp	w27, #0x5
  43d7d4:	b.eq	43d810 <_obstack_memory_used@@Base+0x2018>  // b.none
  43d7d8:	cmp	w27, #0x3
  43d7dc:	b.ne	43db5c <_obstack_memory_used@@Base+0x2364>  // b.any
  43d7e0:	ldr	x10, [sp, #40]
  43d7e4:	mov	x11, xzr
  43d7e8:	ldr	x10, [x10]
  43d7ec:	sub	x14, x29, #0x40
  43d7f0:	ldr	x12, [x10, x11]
  43d7f4:	ldr	x13, [x14, x11]
  43d7f8:	orr	x12, x13, x12
  43d7fc:	str	x12, [x14, x11]
  43d800:	add	x11, x11, #0x8
  43d804:	cmp	x11, #0x20
  43d808:	b.ne	43d7ec <_obstack_memory_used@@Base+0x1ff4>  // b.any
  43d80c:	b	43d738 <_obstack_memory_used@@Base+0x1f40>
  43d810:	ldr	x10, [sp, #88]
  43d814:	ldr	w10, [x10, #180]
  43d818:	cmp	w10, #0x2
  43d81c:	b.lt	43d888 <_obstack_memory_used@@Base+0x2090>  // b.tstop
  43d820:	ldr	x10, [sp, #88]
  43d824:	mov	x11, xzr
  43d828:	ldr	x10, [x10, #120]
  43d82c:	sub	x14, x29, #0x40
  43d830:	ldr	x12, [x10, x11]
  43d834:	ldr	x13, [x14, x11]
  43d838:	orr	x12, x13, x12
  43d83c:	str	x12, [x14, x11]
  43d840:	add	x11, x11, #0x8
  43d844:	cmp	x11, #0x20
  43d848:	b.ne	43d82c <_obstack_memory_used@@Base+0x2034>  // b.any
  43d84c:	b	43d890 <_obstack_memory_used@@Base+0x2098>
  43d850:	mov	x10, #0xffffffffffffffff    	// #-1
  43d854:	stp	x10, x10, [x29, #-64]
  43d858:	ldr	x10, [sp, #88]
  43d85c:	ldr	x10, [x10, #216]
  43d860:	tbz	w10, #6, 43d868 <_obstack_memory_used@@Base+0x2070>
  43d864:	tbz	w10, #7, 43d738 <_obstack_memory_used@@Base+0x1f40>
  43d868:	tst	x10, #0x40
  43d86c:	mov	x11, #0xfffffffffffffffe    	// #-2
  43d870:	mov	x12, #0xfffffffffffffbfe    	// #-1026
  43d874:	csel	x11, x12, x11, eq  // eq = none
  43d878:	tst	x10, #0x80
  43d87c:	mov	x10, #0xfffffffffffffbff    	// #-1025
  43d880:	csel	x10, x10, x11, eq  // eq = none
  43d884:	b	43d8b4 <_obstack_memory_used@@Base+0x20bc>
  43d888:	movi	v0.2d, #0xffffffffffffffff
  43d88c:	stp	q0, q0, [x29, #-64]
  43d890:	ldr	x10, [sp, #88]
  43d894:	ldr	x10, [x10, #216]
  43d898:	tbnz	w10, #6, 43d8a8 <_obstack_memory_used@@Base+0x20b0>
  43d89c:	ldur	x11, [x29, #-64]
  43d8a0:	and	x11, x11, #0xfffffffffffffbff
  43d8a4:	stur	x11, [x29, #-64]
  43d8a8:	tbz	w10, #7, 43d738 <_obstack_memory_used@@Base+0x1f40>
  43d8ac:	ldur	x10, [x29, #-64]
  43d8b0:	and	x10, x10, #0xfffffffffffffffe
  43d8b4:	stur	x10, [x29, #-64]
  43d8b8:	b	43d738 <_obstack_memory_used@@Base+0x1f40>
  43d8bc:	mov	x11, xzr
  43d8c0:	mov	x10, xzr
  43d8c4:	ldr	x12, [sp, #32]
  43d8c8:	sub	x14, x29, #0x40
  43d8cc:	ldr	x13, [x14, x11]
  43d8d0:	ldr	x12, [x12, x11]
  43d8d4:	and	x12, x13, x12
  43d8d8:	str	x12, [x14, x11]
  43d8dc:	add	x11, x11, #0x8
  43d8e0:	cmp	x11, #0x20
  43d8e4:	orr	x10, x12, x10
  43d8e8:	b.ne	43d8c4 <_obstack_memory_used@@Base+0x20cc>  // b.any
  43d8ec:	cbz	x10, 43db5c <_obstack_memory_used@@Base+0x2364>
  43d8f0:	tbz	w9, #11, 43d98c <_obstack_memory_used@@Base+0x2194>
  43d8f4:	cmp	w27, #0x1
  43d8f8:	b.ne	43d904 <_obstack_memory_used@@Base+0x210c>  // b.any
  43d8fc:	ldrb	w8, [x8, #2]
  43d900:	tbnz	w8, #6, 43db54 <_obstack_memory_used@@Base+0x235c>
  43d904:	ldr	x8, [sp, #88]
  43d908:	ldr	w8, [x8, #180]
  43d90c:	cmp	w8, #0x1
  43d910:	b.le	43d958 <_obstack_memory_used@@Base+0x2160>
  43d914:	ldr	x8, [sp, #88]
  43d918:	mov	x9, xzr
  43d91c:	ldr	x10, [x8, #120]
  43d920:	mov	x8, xzr
  43d924:	ldr	x11, [sp, #32]
  43d928:	ldr	x12, [x10, x9]
  43d92c:	sub	x14, x29, #0x40
  43d930:	ldr	x13, [x14, x9]
  43d934:	ldr	x11, [x11, x9]
  43d938:	and	x11, x12, x11
  43d93c:	bic	x11, x13, x11
  43d940:	str	x11, [x14, x9]
  43d944:	add	x9, x9, #0x8
  43d948:	cmp	x9, #0x20
  43d94c:	orr	x8, x11, x8
  43d950:	b.ne	43d924 <_obstack_memory_used@@Base+0x212c>  // b.any
  43d954:	b	43d988 <_obstack_memory_used@@Base+0x2190>
  43d958:	mov	x9, xzr
  43d95c:	mov	x8, xzr
  43d960:	ldr	x10, [sp, #32]
  43d964:	sub	x12, x29, #0x40
  43d968:	ldr	x11, [x12, x9]
  43d96c:	ldr	x10, [x10, x9]
  43d970:	bic	x10, x11, x10
  43d974:	str	x10, [x12, x9]
  43d978:	add	x9, x9, #0x8
  43d97c:	cmp	x9, #0x20
  43d980:	orr	x8, x10, x8
  43d984:	b.ne	43d960 <_obstack_memory_used@@Base+0x2168>  // b.any
  43d988:	cbz	x8, 43db5c <_obstack_memory_used@@Base+0x2364>
  43d98c:	ldr	x8, [sp, #96]
  43d990:	cmp	x8, #0x1
  43d994:	b.lt	43daf8 <_obstack_memory_used@@Base+0x2300>  // b.tstop
  43d998:	ldr	x28, [sp, #64]
  43d99c:	mov	x24, xzr
  43d9a0:	cmp	w27, #0x1
  43d9a4:	b.ne	43d9cc <_obstack_memory_used@@Base+0x21d4>  // b.any
  43d9a8:	ldr	x8, [sp, #40]
  43d9ac:	ldr	x10, [sp, #64]
  43d9b0:	ldrb	w8, [x8]
  43d9b4:	add	x10, x10, x24, lsl #5
  43d9b8:	lsr	x9, x8, #3
  43d9bc:	and	x9, x9, #0x18
  43d9c0:	ldr	x9, [x10, x9]
  43d9c4:	lsr	x8, x9, x8
  43d9c8:	tbz	w8, #0, 43dad8 <_obstack_memory_used@@Base+0x22e0>
  43d9cc:	mov	x8, xzr
  43d9d0:	movi	v0.2d, #0x0
  43d9d4:	sub	x9, x29, #0x40
  43d9d8:	sub	x10, x29, #0x60
  43d9dc:	ldr	q1, [x9, x8]
  43d9e0:	ldr	q2, [x28, x8]
  43d9e4:	and	v1.16b, v2.16b, v1.16b
  43d9e8:	str	q1, [x10, x8]
  43d9ec:	add	x8, x8, #0x10
  43d9f0:	cmp	x8, #0x20
  43d9f4:	orr	v0.16b, v1.16b, v0.16b
  43d9f8:	b.ne	43d9dc <_obstack_memory_used@@Base+0x21e4>  // b.any
  43d9fc:	dup	v1.2d, v0.d[1]
  43da00:	orr	v0.16b, v0.16b, v1.16b
  43da04:	fmov	x8, d0
  43da08:	cbz	x8, 43dad8 <_obstack_memory_used@@Base+0x22e0>
  43da0c:	mov	x8, xzr
  43da10:	movi	v4.2d, #0x0
  43da14:	movi	v0.2d, #0x0
  43da18:	sub	x9, x29, #0x40
  43da1c:	sub	x10, x29, #0x80
  43da20:	ldr	q1, [x9, x8]
  43da24:	ldr	q2, [x28, x8]
  43da28:	bic	v3.16b, v2.16b, v1.16b
  43da2c:	bic	v1.16b, v1.16b, v2.16b
  43da30:	str	q3, [x10, x8]
  43da34:	str	q1, [x9, x8]
  43da38:	add	x8, x8, #0x10
  43da3c:	orr	v0.16b, v3.16b, v0.16b
  43da40:	cmp	x8, #0x20
  43da44:	orr	v4.16b, v1.16b, v4.16b
  43da48:	b.ne	43da20 <_obstack_memory_used@@Base+0x2228>  // b.any
  43da4c:	dup	v1.2d, v0.d[1]
  43da50:	orr	v0.16b, v0.16b, v1.16b
  43da54:	fmov	x8, d0
  43da58:	str	q4, [sp, #48]
  43da5c:	cbz	x8, 43daa4 <_obstack_memory_used@@Base+0x22ac>
  43da60:	ldr	x12, [sp, #96]
  43da64:	ldr	x9, [sp, #64]
  43da68:	ldr	x11, [sp, #80]
  43da6c:	ldp	q0, q1, [x29, #-128]
  43da70:	ldp	q2, q3, [x29, #-96]
  43da74:	mov	w10, #0x18                  	// #24
  43da78:	add	x8, x9, x12, lsl #5
  43da7c:	add	x9, x9, x24, lsl #5
  43da80:	madd	x0, x12, x10, x11
  43da84:	madd	x1, x24, x10, x11
  43da88:	stp	q0, q1, [x8]
  43da8c:	stp	q2, q3, [x9]
  43da90:	bl	443034 <_obstack_memory_used@@Base+0x783c>
  43da94:	cbnz	w0, 43d5a0 <_obstack_memory_used@@Base+0x1da8>
  43da98:	ldr	x8, [sp, #96]
  43da9c:	add	x8, x8, #0x1
  43daa0:	str	x8, [sp, #96]
  43daa4:	ldr	x8, [x22, #24]
  43daa8:	ldr	x9, [sp, #72]
  43daac:	ldr	x1, [x8, x9, lsl #3]
  43dab0:	ldr	x9, [sp, #80]
  43dab4:	mov	w8, #0x18                  	// #24
  43dab8:	madd	x0, x24, x8, x9
  43dabc:	bl	442e2c <_obstack_memory_used@@Base+0x7634>
  43dac0:	tbz	w0, #0, 43d5a0 <_obstack_memory_used@@Base+0x1da8>
  43dac4:	ldr	q1, [sp, #48]
  43dac8:	dup	v0.2d, v1.d[1]
  43dacc:	orr	v0.16b, v1.16b, v0.16b
  43dad0:	fmov	x8, d0
  43dad4:	cbz	x8, 43dafc <_obstack_memory_used@@Base+0x2304>
  43dad8:	ldr	x9, [sp, #96]
  43dadc:	mov	x8, x24
  43dae0:	add	x8, x24, #0x1
  43dae4:	mov	x24, x8
  43dae8:	cmp	x8, x9
  43daec:	add	x28, x28, #0x20
  43daf0:	b.lt	43d9a0 <_obstack_memory_used@@Base+0x21a8>  // b.tstop
  43daf4:	b	43dafc <_obstack_memory_used@@Base+0x2304>
  43daf8:	mov	x24, xzr
  43dafc:	ldr	x8, [sp, #96]
  43db00:	cmp	x24, x8
  43db04:	b.ne	43db5c <_obstack_memory_used@@Base+0x2364>  // b.any
  43db08:	ldp	x8, x9, [sp, #64]
  43db0c:	ldp	q1, q0, [x29, #-64]
  43db10:	mov	w0, #0x8                   	// #8
  43db14:	add	x8, x8, x24, lsl #5
  43db18:	stp	q1, q0, [x8]
  43db1c:	ldr	x8, [x22, #24]
  43db20:	ldr	x28, [x8, x9, lsl #3]
  43db24:	ldr	x9, [sp, #80]
  43db28:	mov	w8, #0x18                  	// #24
  43db2c:	madd	x27, x24, x8, x9
  43db30:	mov	w8, #0x1                   	// #1
  43db34:	dup	v0.2d, x8
  43db38:	str	q0, [x27]
  43db3c:	bl	4044d0 <malloc@plt>
  43db40:	str	x0, [x27, #16]
  43db44:	cbz	x0, 43d5d0 <_obstack_memory_used@@Base+0x1dd8>
  43db48:	add	x8, x24, #0x1
  43db4c:	str	x28, [x0]
  43db50:	str	x8, [sp, #96]
  43db54:	movi	v0.2d, #0x0
  43db58:	stp	q0, q0, [x29, #-64]
  43db5c:	ldr	x9, [sp, #72]
  43db60:	ldr	x8, [x22, #16]
  43db64:	add	x9, x9, #0x1
  43db68:	cmp	x9, x8
  43db6c:	str	x9, [sp, #72]
  43db70:	b.lt	43d6e0 <_obstack_memory_used@@Base+0x1ee8>  // b.tstop
  43db74:	ldr	x8, [sp, #96]
  43db78:	cmp	x8, #0x0
  43db7c:	b.le	43de98 <_obstack_memory_used@@Base+0x26a0>
  43db80:	ldr	x27, [sp, #96]
  43db84:	add	x8, x27, #0x1
  43db88:	lsl	x0, x8, #3
  43db8c:	stp	x8, xzr, [x29, #-160]
  43db90:	bl	4044d0 <malloc@plt>
  43db94:	cmp	x0, #0x0
  43db98:	mov	w8, #0xc                   	// #12
  43db9c:	csel	w9, w8, wzr, eq  // eq = none
  43dba0:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  43dba4:	movk	x8, #0xa855
  43dba8:	movk	x8, #0xaaa, lsl #48
  43dbac:	mov	x24, x0
  43dbb0:	cmp	x27, x8
  43dbb4:	stur	x0, [x29, #-144]
  43dbb8:	stur	w9, [x29, #-132]
  43dbbc:	b.hi	43dfc0 <_obstack_memory_used@@Base+0x27c8>  // b.pmore
  43dbc0:	cbz	x24, 43dfc0 <_obstack_memory_used@@Base+0x27c8>
  43dbc4:	ldr	x8, [sp, #96]
  43dbc8:	mov	w23, w9
  43dbcc:	add	x8, x8, x8, lsl #1
  43dbd0:	lsl	x0, x8, #3
  43dbd4:	bl	4044d0 <malloc@plt>
  43dbd8:	str	x0, [sp, #48]
  43dbdc:	cbz	x0, 43dfc0 <_obstack_memory_used@@Base+0x27c8>
  43dbe0:	ldr	x8, [sp, #96]
  43dbe4:	ldr	x9, [sp, #48]
  43dbe8:	movi	v0.2d, #0x0
  43dbec:	str	xzr, [sp, #72]
  43dbf0:	str	wzr, [sp, #20]
  43dbf4:	add	x9, x9, x8, lsl #3
  43dbf8:	add	x8, x9, x8, lsl #3
  43dbfc:	stp	x8, x9, [sp, #24]
  43dc00:	ldr	x8, [sp, #64]
  43dc04:	stp	q0, q0, [x29, #-192]
  43dc08:	str	x8, [sp, #40]
  43dc0c:	ldp	x10, x9, [sp, #72]
  43dc10:	mov	w8, #0x18                  	// #24
  43dc14:	stur	xzr, [x29, #-152]
  43dc18:	madd	x24, x10, x8, x9
  43dc1c:	ldr	x8, [x24, #8]!
  43dc20:	cmp	x8, #0x1
  43dc24:	b.lt	43dc8c <_obstack_memory_used@@Base+0x2494>  // b.tstop
  43dc28:	ldp	x11, x10, [sp, #72]
  43dc2c:	mov	w9, #0x18                  	// #24
  43dc30:	mov	x28, xzr
  43dc34:	madd	x9, x11, x9, x10
  43dc38:	ldr	x11, [sp, #88]
  43dc3c:	add	x27, x9, #0x10
  43dc40:	ldr	x9, [x27]
  43dc44:	ldr	x10, [x11, #24]
  43dc48:	ldr	x9, [x9, x28, lsl #3]
  43dc4c:	ldr	x9, [x10, x9, lsl #3]
  43dc50:	cmn	x9, #0x1
  43dc54:	b.eq	43dc7c <_obstack_memory_used@@Base+0x2484>  // b.none
  43dc58:	ldr	x8, [x11, #48]
  43dc5c:	mov	w10, #0x18                  	// #24
  43dc60:	sub	x0, x29, #0xa0
  43dc64:	madd	x1, x9, x10, x8
  43dc68:	bl	442ca8 <_obstack_memory_used@@Base+0x74b0>
  43dc6c:	cbnz	w0, 43df58 <_obstack_memory_used@@Base+0x2760>
  43dc70:	ldr	x8, [x24]
  43dc74:	ldr	x11, [sp, #88]
  43dc78:	mov	w23, wzr
  43dc7c:	add	x28, x28, #0x1
  43dc80:	cmp	x28, x8
  43dc84:	b.lt	43dc40 <_obstack_memory_used@@Base+0x2448>  // b.tstop
  43dc88:	stur	w23, [x29, #-132]
  43dc8c:	ldr	x1, [sp, #88]
  43dc90:	sub	x0, x29, #0x84
  43dc94:	sub	x2, x29, #0xa0
  43dc98:	mov	w3, wzr
  43dc9c:	bl	443100 <_obstack_memory_used@@Base+0x7908>
  43dca0:	ldur	w23, [x29, #-132]
  43dca4:	ldr	x8, [sp, #48]
  43dca8:	ldr	x9, [sp, #72]
  43dcac:	str	x0, [x8, x9, lsl #3]
  43dcb0:	cbnz	x0, 43dcb8 <_obstack_memory_used@@Base+0x24c0>
  43dcb4:	cbnz	w23, 43df5c <_obstack_memory_used@@Base+0x2764>
  43dcb8:	ldrsb	w8, [x0, #104]
  43dcbc:	tbnz	w8, #31, 43dcdc <_obstack_memory_used@@Base+0x24e4>
  43dcc0:	ldp	x9, x8, [sp, #24]
  43dcc4:	ldr	x10, [sp, #72]
  43dcc8:	str	x0, [x8, x10, lsl #3]
  43dccc:	ldr	x8, [sp, #48]
  43dcd0:	ldr	x8, [x8, x10, lsl #3]
  43dcd4:	str	x8, [x9, x10, lsl #3]
  43dcd8:	b	43dd64 <_obstack_memory_used@@Base+0x256c>
  43dcdc:	ldr	x1, [sp, #88]
  43dce0:	sub	x0, x29, #0x84
  43dce4:	sub	x2, x29, #0xa0
  43dce8:	mov	w3, #0x1                   	// #1
  43dcec:	bl	443100 <_obstack_memory_used@@Base+0x7908>
  43dcf0:	ldr	x8, [sp, #32]
  43dcf4:	ldr	x9, [sp, #72]
  43dcf8:	str	x0, [x8, x9, lsl #3]
  43dcfc:	cbnz	x0, 43dd08 <_obstack_memory_used@@Base+0x2510>
  43dd00:	ldur	w8, [x29, #-132]
  43dd04:	cbnz	w8, 43df5c <_obstack_memory_used@@Base+0x2764>
  43dd08:	ldr	x8, [sp, #48]
  43dd0c:	ldr	x9, [sp, #72]
  43dd10:	ldr	x8, [x8, x9, lsl #3]
  43dd14:	cmp	x8, x0
  43dd18:	b.eq	43dd38 <_obstack_memory_used@@Base+0x2540>  // b.none
  43dd1c:	ldr	x8, [sp, #88]
  43dd20:	ldr	w9, [sp, #20]
  43dd24:	ldr	w8, [x8, #180]
  43dd28:	cmp	w8, #0x1
  43dd2c:	cset	w8, gt
  43dd30:	orr	w9, w9, w8
  43dd34:	str	w9, [sp, #20]
  43dd38:	ldr	x1, [sp, #88]
  43dd3c:	sub	x0, x29, #0x84
  43dd40:	sub	x2, x29, #0xa0
  43dd44:	mov	w3, #0x2                   	// #2
  43dd48:	bl	443100 <_obstack_memory_used@@Base+0x7908>
  43dd4c:	ldur	w23, [x29, #-132]
  43dd50:	ldr	x8, [sp, #24]
  43dd54:	ldr	x9, [sp, #72]
  43dd58:	str	x0, [x8, x9, lsl #3]
  43dd5c:	cbnz	x0, 43dd64 <_obstack_memory_used@@Base+0x256c>
  43dd60:	cbnz	w23, 43df5c <_obstack_memory_used@@Base+0x2764>
  43dd64:	ldr	x10, [sp, #40]
  43dd68:	mov	x8, xzr
  43dd6c:	sub	x9, x29, #0xc0
  43dd70:	ldr	q0, [x10, x8]
  43dd74:	ldr	q1, [x9, x8]
  43dd78:	orr	v0.16b, v1.16b, v0.16b
  43dd7c:	str	q0, [x9, x8]
  43dd80:	add	x8, x8, #0x10
  43dd84:	cmp	x8, #0x20
  43dd88:	b.ne	43dd70 <_obstack_memory_used@@Base+0x2578>  // b.any
  43dd8c:	ldr	x9, [sp, #72]
  43dd90:	ldr	x8, [sp, #96]
  43dd94:	sub	x27, x29, #0xc0
  43dd98:	add	x10, x10, #0x20
  43dd9c:	add	x9, x9, #0x1
  43dda0:	cmp	x9, x8
  43dda4:	str	x9, [sp, #72]
  43dda8:	str	x10, [sp, #40]
  43ddac:	b.ne	43dc0c <_obstack_memory_used@@Base+0x2414>  // b.any
  43ddb0:	ldr	w8, [sp, #20]
  43ddb4:	tbnz	w8, #0, 43d5d8 <_obstack_memory_used@@Base+0x1de0>
  43ddb8:	mov	w0, #0x8                   	// #8
  43ddbc:	mov	w1, #0x100                 	// #256
  43ddc0:	bl	404680 <calloc@plt>
  43ddc4:	str	x0, [x25]
  43ddc8:	cbz	x0, 43df5c <_obstack_memory_used@@Base+0x2764>
  43ddcc:	ldr	x10, [sp, #64]
  43ddd0:	mov	x8, xzr
  43ddd4:	mov	x9, xzr
  43ddd8:	ldr	x11, [x27, x9, lsl #3]
  43dddc:	cbz	x11, 43de44 <_obstack_memory_used@@Base+0x264c>
  43dde0:	ldr	x12, [sp, #88]
  43dde4:	mov	w14, #0x1                   	// #1
  43dde8:	add	x13, x12, x9, lsl #3
  43ddec:	mov	x12, x8
  43ddf0:	add	x13, x13, #0xb8
  43ddf4:	tbnz	w11, #0, 43de0c <_obstack_memory_used@@Base+0x2614>
  43ddf8:	lsl	x14, x14, #1
  43ddfc:	lsr	x11, x11, #1
  43de00:	add	x12, x12, #0x1
  43de04:	cbnz	x11, 43ddf4 <_obstack_memory_used@@Base+0x25fc>
  43de08:	b	43de44 <_obstack_memory_used@@Base+0x264c>
  43de0c:	mov	x15, #0xfffffffffffffff8    	// #-8
  43de10:	mov	x16, x10
  43de14:	ldr	x17, [x16], #32
  43de18:	add	x15, x15, #0x8
  43de1c:	tst	x17, x14
  43de20:	b.eq	43de14 <_obstack_memory_used@@Base+0x261c>  // b.none
  43de24:	ldr	x16, [x13]
  43de28:	ldr	x17, [sp, #32]
  43de2c:	tst	x16, x14
  43de30:	ldr	x16, [sp, #48]
  43de34:	csel	x16, x16, x17, eq  // eq = none
  43de38:	ldr	x15, [x16, x15]
  43de3c:	str	x15, [x0, x12, lsl #3]
  43de40:	b	43ddf8 <_obstack_memory_used@@Base+0x2600>
  43de44:	add	x9, x9, #0x1
  43de48:	add	x8, x8, #0x40
  43de4c:	cmp	x9, #0x4
  43de50:	add	x10, x10, #0x8
  43de54:	b.ne	43ddd8 <_obstack_memory_used@@Base+0x25e0>  // b.any
  43de58:	ldurb	w8, [x29, #-191]
  43de5c:	tbz	w8, #2, 43ded4 <_obstack_memory_used@@Base+0x26dc>
  43de60:	ldr	x9, [sp, #96]
  43de64:	ldr	x8, [sp, #48]
  43de68:	add	x8, x8, x9, lsl #4
  43de6c:	ldr	x10, [sp, #64]
  43de70:	ldrb	w10, [x10, #1]
  43de74:	tbnz	w10, #2, 43dec0 <_obstack_memory_used@@Base+0x26c8>
  43de78:	ldr	x10, [sp, #64]
  43de7c:	add	x8, x8, #0x8
  43de80:	subs	x9, x9, #0x1
  43de84:	add	x10, x10, #0x20
  43de88:	str	x10, [sp, #64]
  43de8c:	b.ne	43de6c <_obstack_memory_used@@Base+0x2674>  // b.any
  43de90:	b	43ded4 <_obstack_memory_used@@Base+0x26dc>
  43de94:	str	xzr, [sp, #96]
  43de98:	ldr	x0, [sp, #80]
  43de9c:	bl	4049b0 <free@plt>
  43dea0:	ldr	x8, [sp, #96]
  43dea4:	cbnz	x8, 43dfa0 <_obstack_memory_used@@Base+0x27a8>
  43dea8:	mov	w0, #0x8                   	// #8
  43deac:	mov	w1, #0x100                 	// #256
  43deb0:	bl	404680 <calloc@plt>
  43deb4:	str	x0, [x25]
  43deb8:	cbnz	x0, 43df14 <_obstack_memory_used@@Base+0x271c>
  43debc:	b	43dfa0 <_obstack_memory_used@@Base+0x27a8>
  43dec0:	ldr	x8, [x8]
  43dec4:	ldr	w9, [sp, #20]
  43dec8:	str	x8, [x0, #80]
  43decc:	tbz	w9, #0, 43ded4 <_obstack_memory_used@@Base+0x26dc>
  43ded0:	str	x8, [x0, #2128]
  43ded4:	ldr	x0, [sp, #48]
  43ded8:	bl	4049b0 <free@plt>
  43dedc:	ldur	x0, [x29, #-144]
  43dee0:	bl	4049b0 <free@plt>
  43dee4:	mov	w27, #0x10                  	// #16
  43dee8:	ldr	x8, [sp, #80]
  43deec:	ldr	x0, [x8, x27]
  43def0:	bl	4049b0 <free@plt>
  43def4:	ldr	x8, [sp, #96]
  43def8:	add	x27, x27, #0x18
  43defc:	subs	x8, x8, #0x1
  43df00:	str	x8, [sp, #96]
  43df04:	b.ne	43dee8 <_obstack_memory_used@@Base+0x26f0>  // b.any
  43df08:	ldr	x0, [sp, #80]
  43df0c:	bl	4049b0 <free@plt>
  43df10:	ldr	x0, [x25]
  43df14:	ldr	x27, [sp, #112]
  43df18:	ldr	w11, [sp, #108]
  43df1c:	ldr	x23, [sp, #8]
  43df20:	ldr	x24, [sp, #128]
  43df24:	cbnz	x0, 43d290 <_obstack_memory_used@@Base+0x1a98>
  43df28:	b	43d674 <_obstack_memory_used@@Base+0x1e7c>
  43df2c:	ldr	x8, [sp, #376]
  43df30:	ldr	w2, [sp, #464]
  43df34:	add	x0, sp, #0x130
  43df38:	sub	x1, x8, #0x1
  43df3c:	bl	44420c <_obstack_memory_used@@Base+0x8a14>
  43df40:	ubfiz	w8, w0, #8, #1
  43df44:	orr	x8, x8, x19
  43df48:	ldr	x28, [x27, x8, lsl #3]
  43df4c:	ldr	x27, [sp, #112]
  43df50:	ldr	w11, [sp, #108]
  43df54:	b	43d294 <_obstack_memory_used@@Base+0x1a9c>
  43df58:	stur	w0, [x29, #-132]
  43df5c:	ldr	x0, [sp, #48]
  43df60:	bl	4049b0 <free@plt>
  43df64:	ldur	x0, [x29, #-144]
  43df68:	bl	4049b0 <free@plt>
  43df6c:	ldr	x8, [sp, #96]
  43df70:	cmp	x8, #0x1
  43df74:	b.lt	43df98 <_obstack_memory_used@@Base+0x27a0>  // b.tstop
  43df78:	ldr	x8, [sp, #80]
  43df7c:	add	x19, x8, #0x10
  43df80:	ldr	x0, [x19], #24
  43df84:	bl	4049b0 <free@plt>
  43df88:	ldr	x8, [sp, #96]
  43df8c:	subs	x8, x8, #0x1
  43df90:	str	x8, [sp, #96]
  43df94:	b.ne	43df80 <_obstack_memory_used@@Base+0x2788>  // b.any
  43df98:	ldr	x0, [sp, #80]
  43df9c:	bl	4049b0 <free@plt>
  43dfa0:	ldr	x27, [sp, #112]
  43dfa4:	ldr	w11, [sp, #108]
  43dfa8:	ldr	x23, [sp, #8]
  43dfac:	ldr	x24, [sp, #128]
  43dfb0:	mov	w8, #0xc                   	// #12
  43dfb4:	mov	x28, xzr
  43dfb8:	stur	w8, [x29, #-196]
  43dfbc:	b	43d294 <_obstack_memory_used@@Base+0x1a9c>
  43dfc0:	mov	x0, x24
  43dfc4:	bl	4049b0 <free@plt>
  43dfc8:	b	43df78 <_obstack_memory_used@@Base+0x2780>
  43dfcc:	ldr	x8, [sp, #184]
  43dfd0:	str	x8, [sp, #280]
  43dfd4:	b	43dfdc <_obstack_memory_used@@Base+0x27e4>
  43dfd8:	ldr	x20, [sp, #272]
  43dfdc:	ldr	x9, [sp, #280]
  43dfe0:	cbz	x9, 43dff0 <_obstack_memory_used@@Base+0x27f8>
  43dfe4:	ldr	x8, [x9]
  43dfe8:	add	x8, x8, x27
  43dfec:	str	x8, [x9]
  43dff0:	ldr	x25, [sp, #288]
  43dff4:	ldr	w19, [sp, #252]
  43dff8:	ldr	x28, [sp, #240]
  43dffc:	ldr	x22, [sp, #264]
  43e000:	cmn	x26, #0x1
  43e004:	b.eq	43e1b4 <_obstack_memory_used@@Base+0x29bc>  // b.none
  43e008:	cmn	x26, #0x2
  43e00c:	b.eq	43e5dc <_obstack_memory_used@@Base+0x2de4>  // b.none
  43e010:	ldr	x20, [sp, #208]
  43e014:	str	x26, [sp, #472]
  43e018:	cmp	x20, #0x2
  43e01c:	b.cc	43e060 <_obstack_memory_used@@Base+0x2868>  // b.lo, b.ul, b.last
  43e020:	ldr	x8, [sp, #216]
  43e024:	ldrb	w8, [x8, #56]
  43e028:	tbnz	w8, #4, 43e060 <_obstack_memory_used@@Base+0x2868>
  43e02c:	ldr	x8, [sp, #488]
  43e030:	add	x0, sp, #0x130
  43e034:	mov	x2, x26
  43e038:	ldr	x1, [x8, x26, lsl #3]
  43e03c:	bl	443b2c <_obstack_memory_used@@Base+0x8334>
  43e040:	ldr	x22, [sp, #256]
  43e044:	str	x0, [sp, #480]
  43e048:	mov	x19, x0
  43e04c:	ldrb	w8, [x22, #176]
  43e050:	tbnz	w8, #0, 43e088 <_obstack_memory_used@@Base+0x2890>
  43e054:	ldr	x8, [x22, #152]
  43e058:	cbnz	x8, 43e088 <_obstack_memory_used@@Base+0x2890>
  43e05c:	b	43e404 <_obstack_memory_used@@Base+0x2c0c>
  43e060:	ldr	x22, [sp, #256]
  43e064:	ldr	x8, [x22, #152]
  43e068:	cbz	x8, 43e404 <_obstack_memory_used@@Base+0x2c0c>
  43e06c:	ldr	x8, [sp, #488]
  43e070:	add	x0, sp, #0x130
  43e074:	mov	x2, x26
  43e078:	ldr	x1, [x8, x26, lsl #3]
  43e07c:	bl	443b2c <_obstack_memory_used@@Base+0x8334>
  43e080:	mov	x19, x0
  43e084:	str	x0, [sp, #480]
  43e088:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
  43e08c:	cmp	x26, x8
  43e090:	b.cs	43e5dc <_obstack_memory_used@@Base+0x2de4>  // b.hs, b.nlast
  43e094:	ldr	x25, [sp, #456]
  43e098:	lsl	x8, x26, #3
  43e09c:	add	x20, x8, #0x8
  43e0a0:	mov	x0, x20
  43e0a4:	bl	4044d0 <malloc@plt>
  43e0a8:	mov	x28, x0
  43e0ac:	cbz	x0, 43e5d4 <_obstack_memory_used@@Base+0x2ddc>
  43e0b0:	ldr	x8, [x25, #152]
  43e0b4:	cbz	x8, 43e160 <_obstack_memory_used@@Base+0x2968>
  43e0b8:	mov	x0, x20
  43e0bc:	bl	4044d0 <malloc@plt>
  43e0c0:	cbz	x0, 43e5d4 <_obstack_memory_used@@Base+0x2ddc>
  43e0c4:	mov	x20, x0
  43e0c8:	add	x22, x26, #0x1
  43e0cc:	lsl	x2, x22, #3
  43e0d0:	mov	x0, x20
  43e0d4:	mov	w1, wzr
  43e0d8:	bl	4045e0 <memset@plt>
  43e0dc:	ldr	x8, [sp, #168]
  43e0e0:	add	x0, sp, #0x130
  43e0e4:	sub	x1, x29, #0x40
  43e0e8:	stp	x28, x20, [x29, #-64]
  43e0ec:	stp	x19, x26, [x29, #-48]
  43e0f0:	stp	xzr, xzr, [x8, #8]
  43e0f4:	str	xzr, [x8]
  43e0f8:	bl	445fe0 <_obstack_memory_used@@Base+0xa7e8>
  43e0fc:	cbnz	w0, 43e2bc <_obstack_memory_used@@Base+0x2ac4>
  43e100:	ldr	x8, [x28]
  43e104:	cbnz	x8, 43e208 <_obstack_memory_used@@Base+0x2a10>
  43e108:	ldr	x8, [x20]
  43e10c:	cbnz	x8, 43e208 <_obstack_memory_used@@Base+0x2a10>
  43e110:	subs	x26, x26, #0x1
  43e114:	b.lt	43e23c <_obstack_memory_used@@Base+0x2a44>  // b.tstop
  43e118:	ldr	x8, [sp, #488]
  43e11c:	ldr	x22, [sp, #264]
  43e120:	ldr	x1, [x8, x26, lsl #3]
  43e124:	cbz	x1, 43e130 <_obstack_memory_used@@Base+0x2938>
  43e128:	ldrb	w9, [x1, #104]
  43e12c:	tbnz	w9, #4, 43e144 <_obstack_memory_used@@Base+0x294c>
  43e130:	add	x9, x26, #0x1
  43e134:	sub	x26, x26, #0x1
  43e138:	cmp	x9, #0x2
  43e13c:	b.ge	43e120 <_obstack_memory_used@@Base+0x2928>  // b.tcont
  43e140:	b	43e158 <_obstack_memory_used@@Base+0x2960>
  43e144:	add	x0, sp, #0x130
  43e148:	mov	x2, x26
  43e14c:	bl	443b2c <_obstack_memory_used@@Base+0x8334>
  43e150:	mov	x19, x0
  43e154:	b	43e0c8 <_obstack_memory_used@@Base+0x28d0>
  43e158:	ldr	x25, [sp, #288]
  43e15c:	b	43e198 <_obstack_memory_used@@Base+0x29a0>
  43e160:	ldr	x8, [sp, #168]
  43e164:	add	x0, sp, #0x130
  43e168:	sub	x1, x29, #0x40
  43e16c:	stp	x28, xzr, [x29, #-64]
  43e170:	stp	x19, x26, [x29, #-48]
  43e174:	stp	xzr, xzr, [x8]
  43e178:	str	xzr, [x8, #16]
  43e17c:	bl	445fe0 <_obstack_memory_used@@Base+0xa7e8>
  43e180:	cbnz	w0, 43e328 <_obstack_memory_used@@Base+0x2b30>
  43e184:	ldr	x8, [x28]
  43e188:	ldr	x25, [sp, #288]
  43e18c:	cbnz	x8, 43e3f0 <_obstack_memory_used@@Base+0x2bf8>
  43e190:	mov	x20, xzr
  43e194:	ldr	x22, [sp, #264]
  43e198:	mov	x0, x28
  43e19c:	bl	4049b0 <free@plt>
  43e1a0:	mov	x0, x20
  43e1a4:	bl	4049b0 <free@plt>
  43e1a8:	ldr	w19, [sp, #252]
  43e1ac:	ldr	x28, [sp, #240]
  43e1b0:	ldr	x20, [sp, #272]
  43e1b4:	add	x0, sp, #0x130
  43e1b8:	bl	443bcc <_obstack_memory_used@@Base+0x83d4>
  43e1bc:	ldur	x8, [x29, #-208]
  43e1c0:	mov	w27, #0x1                   	// #1
  43e1c4:	add	x26, x8, x20
  43e1c8:	cmp	x26, x28
  43e1cc:	stur	x26, [x29, #-208]
  43e1d0:	b.lt	43e370 <_obstack_memory_used@@Base+0x2b78>  // b.tstop
  43e1d4:	cmp	x24, x26
  43e1d8:	b.ge	43d01c <_obstack_memory_used@@Base+0x1824>  // b.tcont
  43e1dc:	b	43e370 <_obstack_memory_used@@Base+0x2b78>
  43e1e0:	tbnz	w3, #1, 43e200 <_obstack_memory_used@@Base+0x2a08>
  43e1e4:	tbz	w3, #2, 43d1f0 <_obstack_memory_used@@Base+0x19f8>
  43e1e8:	ldr	x2, [x28, #80]
  43e1ec:	sub	x0, x29, #0xc4
  43e1f0:	mov	x1, x19
  43e1f4:	bl	443100 <_obstack_memory_used@@Base+0x7908>
  43e1f8:	mov	x28, x0
  43e1fc:	b	43d1f0 <_obstack_memory_used@@Base+0x19f8>
  43e200:	ldr	x28, [x19, #88]
  43e204:	b	43d1f0 <_obstack_memory_used@@Base+0x19f8>
  43e208:	mov	x0, x25
  43e20c:	mov	x1, x28
  43e210:	mov	x2, x20
  43e214:	mov	x3, x22
  43e218:	bl	44622c <_obstack_memory_used@@Base+0xaa34>
  43e21c:	mov	w27, w0
  43e220:	mov	x0, x20
  43e224:	bl	4049b0 <free@plt>
  43e228:	ldr	x22, [sp, #256]
  43e22c:	ldr	x25, [sp, #288]
  43e230:	cbz	w27, 43e3f0 <_obstack_memory_used@@Base+0x2bf8>
  43e234:	mov	x20, xzr
  43e238:	b	43e334 <_obstack_memory_used@@Base+0x2b3c>
  43e23c:	ldr	x25, [sp, #288]
  43e240:	b	43e194 <_obstack_memory_used@@Base+0x299c>
  43e244:	mov	x26, x19
  43e248:	b	43dff0 <_obstack_memory_used@@Base+0x27f8>
  43e24c:	tbnz	w25, #31, 43e2c8 <_obstack_memory_used@@Base+0x2ad0>
  43e250:	ldr	w8, [sp, #180]
  43e254:	cbz	w8, 43e304 <_obstack_memory_used@@Base+0x2b0c>
  43e258:	mov	x26, x27
  43e25c:	mov	w8, #0x1                   	// #1
  43e260:	str	x8, [sp, #232]
  43e264:	b	43d220 <_obstack_memory_used@@Base+0x1a28>
  43e268:	add	x19, x28, #0x8
  43e26c:	add	x0, sp, #0x130
  43e270:	mov	x1, x19
  43e274:	mov	x2, xzr
  43e278:	bl	444300 <_obstack_memory_used@@Base+0x8b08>
  43e27c:	stur	w0, [x29, #-196]
  43e280:	cbnz	w0, 43e364 <_obstack_memory_used@@Base+0x2b6c>
  43e284:	ldrb	w8, [x28, #104]
  43e288:	tbz	w8, #6, 43e2a0 <_obstack_memory_used@@Base+0x2aa8>
  43e28c:	add	x0, sp, #0x130
  43e290:	mov	x1, x19
  43e294:	bl	444404 <_obstack_memory_used@@Base+0x8c0c>
  43e298:	stur	w0, [x29, #-196]
  43e29c:	cbnz	w0, 43e364 <_obstack_memory_used@@Base+0x2b6c>
  43e2a0:	mov	w11, wzr
  43e2a4:	b	43d210 <_obstack_memory_used@@Base+0x1a18>
  43e2a8:	cmp	x24, x25
  43e2ac:	b.ge	43e30c <_obstack_memory_used@@Base+0x2b14>  // b.tcont
  43e2b0:	ldr	x8, [sp, #224]
  43e2b4:	ldrb	w8, [x8, x24]
  43e2b8:	b	43e310 <_obstack_memory_used@@Base+0x2b18>
  43e2bc:	ldr	x22, [sp, #256]
  43e2c0:	mov	w27, w0
  43e2c4:	b	43e330 <_obstack_memory_used@@Base+0x2b38>
  43e2c8:	add	x0, sp, #0x130
  43e2cc:	mov	x1, x28
  43e2d0:	mov	x2, x27
  43e2d4:	mov	w19, w11
  43e2d8:	bl	443b2c <_obstack_memory_used@@Base+0x8334>
  43e2dc:	ldr	w9, [sp, #180]
  43e2e0:	cmp	x0, #0x0
  43e2e4:	cset	w8, ne  // ne = any
  43e2e8:	str	x8, [sp, #232]
  43e2ec:	cset	w8, eq  // eq = none
  43e2f0:	orr	w8, w9, w8
  43e2f4:	csinv	x26, x27, xzr, ne  // ne = any
  43e2f8:	tbz	w8, #0, 43e304 <_obstack_memory_used@@Base+0x2b0c>
  43e2fc:	mov	w11, w19
  43e300:	b	43d220 <_obstack_memory_used@@Base+0x1a28>
  43e304:	mov	x26, x27
  43e308:	b	43dff0 <_obstack_memory_used@@Base+0x27f8>
  43e30c:	mov	w8, wzr
  43e310:	cbz	x23, 43e318 <_obstack_memory_used@@Base+0x2b20>
  43e314:	ldrb	w8, [x23, w8, uxtw]
  43e318:	ldrb	w8, [x21, w8, uxtw]
  43e31c:	mov	x26, x24
  43e320:	cbnz	w8, 43d0e4 <_obstack_memory_used@@Base+0x18ec>
  43e324:	b	43e36c <_obstack_memory_used@@Base+0x2b74>
  43e328:	mov	w27, w0
  43e32c:	mov	x20, xzr
  43e330:	ldr	x25, [sp, #288]
  43e334:	mov	x0, x28
  43e338:	bl	4049b0 <free@plt>
  43e33c:	mov	x0, x20
  43e340:	bl	4049b0 <free@plt>
  43e344:	ldr	x20, [sp, #208]
  43e348:	ldr	w19, [sp, #252]
  43e34c:	ldr	x28, [sp, #240]
  43e350:	cbz	w27, 43e404 <_obstack_memory_used@@Base+0x2c0c>
  43e354:	ldp	x22, x20, [sp, #264]
  43e358:	cmp	w27, #0x1
  43e35c:	b.eq	43e1b4 <_obstack_memory_used@@Base+0x29bc>  // b.none
  43e360:	b	43e370 <_obstack_memory_used@@Base+0x2b78>
  43e364:	sxtw	x26, w0
  43e368:	b	43dff4 <_obstack_memory_used@@Base+0x27fc>
  43e36c:	mov	w27, #0x1                   	// #1
  43e370:	ldr	x0, [sp, #488]
  43e374:	bl	4049b0 <free@plt>
  43e378:	ldr	x8, [sp, #256]
  43e37c:	ldr	x8, [x8, #152]
  43e380:	cbz	x8, 43e39c <_obstack_memory_used@@Base+0x2ba4>
  43e384:	add	x0, sp, #0x130
  43e388:	bl	443bcc <_obstack_memory_used@@Base+0x83d4>
  43e38c:	ldr	x0, [sp, #552]
  43e390:	bl	4049b0 <free@plt>
  43e394:	ldr	x0, [sp, #520]
  43e398:	bl	4049b0 <free@plt>
  43e39c:	add	x0, sp, #0x130
  43e3a0:	bl	43ec1c <_obstack_memory_used@@Base+0x3424>
  43e3a4:	mov	w0, w27
  43e3a8:	add	sp, sp, #0x300
  43e3ac:	ldp	x20, x19, [sp, #80]
  43e3b0:	ldp	x22, x21, [sp, #64]
  43e3b4:	ldp	x24, x23, [sp, #48]
  43e3b8:	ldp	x26, x25, [sp, #32]
  43e3bc:	ldp	x28, x27, [sp, #16]
  43e3c0:	ldp	x29, x30, [sp], #96
  43e3c4:	ret
  43e3c8:	ldr	x8, [x8, #16]
  43e3cc:	cbz	x8, 43e3d8 <_obstack_memory_used@@Base+0x2be0>
  43e3d0:	ldrsb	w8, [x25, #56]
  43e3d4:	tbnz	w8, #31, 43cd94 <_obstack_memory_used@@Base+0x159c>
  43e3d8:	mov	x20, xzr
  43e3dc:	cbz	x26, 43e468 <_obstack_memory_used@@Base+0x2c70>
  43e3e0:	mov	x26, x20
  43e3e4:	cbz	x19, 43cd98 <_obstack_memory_used@@Base+0x15a0>
  43e3e8:	mov	w27, #0x1                   	// #1
  43e3ec:	b	43e3a4 <_obstack_memory_used@@Base+0x2bac>
  43e3f0:	ldr	x0, [sp, #488]
  43e3f4:	bl	4049b0 <free@plt>
  43e3f8:	ldr	x20, [sp, #208]
  43e3fc:	stp	x19, x28, [sp, #480]
  43e400:	str	x26, [sp, #472]
  43e404:	cbz	x20, 43e460 <_obstack_memory_used@@Base+0x2c68>
  43e408:	cmp	x20, #0x1
  43e40c:	b.eq	43e430 <_obstack_memory_used@@Base+0x2c38>  // b.none
  43e410:	ldr	x8, [sp, #160]
  43e414:	mov	w1, #0xff                  	// #255
  43e418:	add	x0, x8, #0x10
  43e41c:	ldp	x9, x8, [sp, #144]
  43e420:	mvn	x8, x8
  43e424:	add	x8, x8, x9
  43e428:	lsl	x2, x8, #4
  43e42c:	bl	4045e0 <memset@plt>
  43e430:	ldr	x9, [sp, #160]
  43e434:	ldr	x8, [sp, #472]
  43e438:	cmp	x20, #0x2
  43e43c:	stp	xzr, x8, [x9]
  43e440:	ldr	x0, [sp, #216]
  43e444:	b.cc	43e490 <_obstack_memory_used@@Base+0x2c98>  // b.lo, b.ul, b.last
  43e448:	ldrb	w8, [x0, #56]
  43e44c:	tbnz	w8, #4, 43e490 <_obstack_memory_used@@Base+0x2c98>
  43e450:	ldrb	w8, [x22, #176]
  43e454:	tbnz	w8, #0, 43e470 <_obstack_memory_used@@Base+0x2c78>
  43e458:	mov	w4, wzr
  43e45c:	b	43e47c <_obstack_memory_used@@Base+0x2c84>
  43e460:	mov	w27, wzr
  43e464:	b	43e370 <_obstack_memory_used@@Base+0x2b78>
  43e468:	mov	x26, x20
  43e46c:	b	43cd98 <_obstack_memory_used@@Base+0x15a0>
  43e470:	ldr	x8, [x22, #152]
  43e474:	cmp	x8, #0x0
  43e478:	cset	w4, gt
  43e47c:	ldr	x3, [sp, #160]
  43e480:	add	x1, sp, #0x130
  43e484:	mov	x2, x20
  43e488:	bl	443c88 <_obstack_memory_used@@Base+0x8490>
  43e48c:	cbnz	w0, 43e5a0 <_obstack_memory_used@@Base+0x2da8>
  43e490:	ldp	x19, x13, [sp, #152]
  43e494:	ldrb	w9, [sp, #444]
  43e498:	ldr	x10, [sp, #352]
  43e49c:	ldr	x11, [sp, #328]
  43e4a0:	ldur	x12, [x29, #-208]
  43e4a4:	ldr	x17, [sp, #136]
  43e4a8:	mov	x8, xzr
  43e4ac:	add	x13, x13, #0x8
  43e4b0:	ldur	x14, [x13, #-8]
  43e4b4:	cmn	x14, #0x1
  43e4b8:	b.eq	43e4d0 <_obstack_memory_used@@Base+0x2cd8>  // b.none
  43e4bc:	cbnz	w9, 43e4e4 <_obstack_memory_used@@Base+0x2cec>
  43e4c0:	ldr	x15, [x13]
  43e4c4:	add	x14, x14, x12
  43e4c8:	add	x15, x15, x12
  43e4cc:	stp	x14, x15, [x13, #-8]
  43e4d0:	add	x8, x8, #0x1
  43e4d4:	cmp	x8, x20
  43e4d8:	add	x13, x13, #0x10
  43e4dc:	b.cc	43e4b0 <_obstack_memory_used@@Base+0x2cb8>  // b.lo, b.ul, b.last
  43e4e0:	b	43e514 <_obstack_memory_used@@Base+0x2d1c>
  43e4e4:	add	x15, x11, x14, lsl #3
  43e4e8:	cmp	x14, x10
  43e4ec:	ldr	x16, [x13]
  43e4f0:	csel	x14, x17, x15, eq  // eq = none
  43e4f4:	ldr	x14, [x14]
  43e4f8:	add	x15, x11, x16, lsl #3
  43e4fc:	cmp	x16, x10
  43e500:	stur	x14, [x13, #-8]
  43e504:	csel	x15, x17, x15, eq  // eq = none
  43e508:	ldr	x15, [x15]
  43e50c:	str	x15, [x13]
  43e510:	b	43e4c4 <_obstack_memory_used@@Base+0x2ccc>
  43e514:	cmp	x19, #0x1
  43e518:	b.lt	43e530 <_obstack_memory_used@@Base+0x2d38>  // b.tstop
  43e51c:	ldr	x8, [sp, #160]
  43e520:	lsl	x2, x19, #4
  43e524:	mov	w1, #0xff                  	// #255
  43e528:	add	x0, x8, x20, lsl #4
  43e52c:	bl	4045e0 <memset@plt>
  43e530:	ldr	x8, [x22, #224]
  43e534:	mov	w27, wzr
  43e538:	cbz	x8, 43e370 <_obstack_memory_used@@Base+0x2b78>
  43e53c:	cmp	x20, #0x2
  43e540:	b.cc	43e370 <_obstack_memory_used@@Base+0x2b78>  // b.lo, b.ul, b.last
  43e544:	ldr	x11, [sp, #144]
  43e548:	mvn	x10, x19
  43e54c:	ldr	x13, [sp, #160]
  43e550:	mov	x9, xzr
  43e554:	add	x10, x10, x11
  43e558:	ldr	x11, [sp, #160]
  43e55c:	add	x11, x11, #0x18
  43e560:	ldr	x12, [x8, x9, lsl #3]
  43e564:	cmp	x9, x12
  43e568:	b.eq	43e588 <_obstack_memory_used@@Base+0x2d90>  // b.none
  43e56c:	add	x12, x13, x12, lsl #4
  43e570:	ldr	x12, [x12, #16]
  43e574:	stur	x12, [x11, #-8]
  43e578:	ldr	x12, [x8, x9, lsl #3]
  43e57c:	add	x12, x13, x12, lsl #4
  43e580:	ldr	x12, [x12, #24]
  43e584:	str	x12, [x11]
  43e588:	add	x9, x9, #0x1
  43e58c:	mov	w27, wzr
  43e590:	cmp	x10, x9
  43e594:	add	x11, x11, #0x10
  43e598:	b.ne	43e560 <_obstack_memory_used@@Base+0x2d68>  // b.any
  43e59c:	b	43e370 <_obstack_memory_used@@Base+0x2b78>
  43e5a0:	mov	w27, w0
  43e5a4:	b	43e370 <_obstack_memory_used@@Base+0x2b78>
  43e5a8:	ldur	w8, [x29, #-196]
  43e5ac:	cmp	w8, #0xc
  43e5b0:	b.eq	43e5dc <_obstack_memory_used@@Base+0x2de4>  // b.none
  43e5b4:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  43e5b8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43e5bc:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  43e5c0:	add	x0, x0, #0xf32
  43e5c4:	add	x1, x1, #0xe2f
  43e5c8:	add	x3, x3, #0xf44
  43e5cc:	mov	w2, #0x435                 	// #1077
  43e5d0:	bl	404cd0 <__assert_fail@plt>
  43e5d4:	mov	x0, x28
  43e5d8:	bl	4049b0 <free@plt>
  43e5dc:	mov	w27, #0xc                   	// #12
  43e5e0:	b	43e370 <_obstack_memory_used@@Base+0x2b78>
  43e5e4:	cmp	w0, #0xc
  43e5e8:	b.eq	43e5dc <_obstack_memory_used@@Base+0x2de4>  // b.none
  43e5ec:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  43e5f0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43e5f4:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  43e5f8:	add	x0, x0, #0xf32
  43e5fc:	add	x1, x1, #0xe2f
  43e600:	add	x3, x3, #0xf44
  43e604:	mov	w2, #0x46c                 	// #1132
  43e608:	bl	404cd0 <__assert_fail@plt>
  43e60c:	mov	x6, x4
  43e610:	mov	w7, #0x1                   	// #1
  43e614:	mov	x4, xzr
  43e618:	mov	x5, x2
  43e61c:	b	43e620 <_obstack_memory_used@@Base+0x2e28>
  43e620:	sub	sp, sp, #0x70
  43e624:	cmp	x3, x2
  43e628:	cset	w8, gt
  43e62c:	orr	x8, x8, x3, lsr #63
  43e630:	stp	x29, x30, [sp, #16]
  43e634:	stp	x28, x27, [sp, #32]
  43e638:	stp	x26, x25, [sp, #48]
  43e63c:	stp	x24, x23, [sp, #64]
  43e640:	stp	x22, x21, [sp, #80]
  43e644:	stp	x20, x19, [sp, #96]
  43e648:	add	x29, sp, #0x10
  43e64c:	cbnz	x8, 43e888 <_obstack_memory_used@@Base+0x3090>
  43e650:	add	x8, x4, x3
  43e654:	ldrb	w20, [x0, #56]
  43e658:	bic	x9, x8, x8, asr #63
  43e65c:	cmp	x8, x2
  43e660:	csel	x27, x2, x9, gt
  43e664:	mov	x22, x6
  43e668:	mov	x24, x5
  43e66c:	mov	x19, x3
  43e670:	mov	x25, x2
  43e674:	mov	x26, x1
  43e678:	mov	x21, x0
  43e67c:	cmp	x27, x3
  43e680:	stur	w7, [x29, #-4]
  43e684:	b.le	43e6a8 <_obstack_memory_used@@Base+0x2eb0>
  43e688:	tbnz	w20, #3, 43e6a8 <_obstack_memory_used@@Base+0x2eb0>
  43e68c:	ldr	x9, [x21, #32]
  43e690:	mov	w8, w20
  43e694:	cbz	x9, 43e6ac <_obstack_memory_used@@Base+0x2eb4>
  43e698:	mov	x0, x21
  43e69c:	bl	43c4c8 <_obstack_memory_used@@Base+0xcd0>
  43e6a0:	ldrb	w8, [x21, #56]
  43e6a4:	b	43e6ac <_obstack_memory_used@@Base+0x2eb4>
  43e6a8:	mov	w8, w20
  43e6ac:	mov	x28, xzr
  43e6b0:	mov	w23, #0x1                   	// #1
  43e6b4:	cbz	x22, 43e6f4 <_obstack_memory_used@@Base+0x2efc>
  43e6b8:	tbnz	w8, #4, 43e6f4 <_obstack_memory_used@@Base+0x2efc>
  43e6bc:	and	w8, w8, #0x6
  43e6c0:	cmp	w8, #0x4
  43e6c4:	b.ne	43e6e8 <_obstack_memory_used@@Base+0x2ef0>  // b.any
  43e6c8:	ldr	x8, [x22]
  43e6cc:	ldr	x9, [x21, #48]
  43e6d0:	cmp	x8, x9
  43e6d4:	b.hi	43e6ec <_obstack_memory_used@@Base+0x2ef4>  // b.pmore
  43e6d8:	cmp	x8, #0x1
  43e6dc:	csel	x28, xzr, x22, lt  // lt = tstop
  43e6e0:	csinc	x23, x8, xzr, ge  // ge = tcont
  43e6e4:	b	43e6f4 <_obstack_memory_used@@Base+0x2efc>
  43e6e8:	ldr	x9, [x21, #48]
  43e6ec:	add	x23, x9, #0x1
  43e6f0:	mov	x28, x22
  43e6f4:	lsl	x0, x23, #4
  43e6f8:	bl	4044d0 <malloc@plt>
  43e6fc:	cbz	x0, 43e890 <_obstack_memory_used@@Base+0x3098>
  43e700:	mov	x22, x0
  43e704:	ubfx	w8, w20, #5, #2
  43e708:	mov	x0, x21
  43e70c:	mov	x1, x26
  43e710:	mov	x2, x25
  43e714:	mov	x3, x19
  43e718:	mov	x4, x27
  43e71c:	mov	x5, x24
  43e720:	mov	x6, x23
  43e724:	mov	x7, x22
  43e728:	str	w8, [sp]
  43e72c:	bl	43ccc4 <_obstack_memory_used@@Base+0x14cc>
  43e730:	cbz	w0, 43e76c <_obstack_memory_used@@Base+0x2f74>
  43e734:	cmp	w0, #0x1
  43e738:	mov	x8, #0xfffffffffffffffe    	// #-2
  43e73c:	cinc	x21, x8, eq  // eq = none
  43e740:	mov	x0, x22
  43e744:	bl	4049b0 <free@plt>
  43e748:	mov	x0, x21
  43e74c:	ldp	x20, x19, [sp, #96]
  43e750:	ldp	x22, x21, [sp, #80]
  43e754:	ldp	x24, x23, [sp, #64]
  43e758:	ldp	x26, x25, [sp, #48]
  43e75c:	ldp	x28, x27, [sp, #32]
  43e760:	ldp	x29, x30, [sp, #16]
  43e764:	add	sp, sp, #0x70
  43e768:	ret
  43e76c:	cbz	x28, 43e860 <_obstack_memory_used@@Base+0x3068>
  43e770:	ldrb	w8, [x21, #56]
  43e774:	ubfx	w8, w8, #1, #2
  43e778:	cmp	w8, #0x2
  43e77c:	b.eq	43e7dc <_obstack_memory_used@@Base+0x2fe4>  // b.none
  43e780:	cmp	w8, #0x1
  43e784:	add	x26, x23, #0x1
  43e788:	b.eq	43e7c4 <_obstack_memory_used@@Base+0x2fcc>  // b.none
  43e78c:	cbnz	w8, 43e8d8 <_obstack_memory_used@@Base+0x30e0>
  43e790:	lsl	x25, x26, #3
  43e794:	mov	x0, x25
  43e798:	bl	4044d0 <malloc@plt>
  43e79c:	str	x0, [x28, #8]
  43e7a0:	cbz	x0, 43e8d0 <_obstack_memory_used@@Base+0x30d8>
  43e7a4:	mov	x24, x0
  43e7a8:	mov	x0, x25
  43e7ac:	bl	4044d0 <malloc@plt>
  43e7b0:	str	x0, [x28, #16]
  43e7b4:	cbz	x0, 43e8c8 <_obstack_memory_used@@Base+0x30d0>
  43e7b8:	str	x26, [x28]
  43e7bc:	mov	w8, #0x1                   	// #1
  43e7c0:	b	43e7ec <_obstack_memory_used@@Base+0x2ff4>
  43e7c4:	ldr	x9, [x28]
  43e7c8:	cmp	x26, x9
  43e7cc:	b.hi	43e898 <_obstack_memory_used@@Base+0x30a0>  // b.pmore
  43e7d0:	mov	w8, #0x1                   	// #1
  43e7d4:	mov	x26, x9
  43e7d8:	b	43e7ec <_obstack_memory_used@@Base+0x2ff4>
  43e7dc:	ldr	x26, [x28]
  43e7e0:	cmp	x26, x23
  43e7e4:	b.cc	43e918 <_obstack_memory_used@@Base+0x3120>  // b.lo, b.ul, b.last
  43e7e8:	mov	w8, #0x2                   	// #2
  43e7ec:	cmp	x23, #0x1
  43e7f0:	b.lt	43e820 <_obstack_memory_used@@Base+0x3028>  // b.tstop
  43e7f4:	ldp	x9, x10, [x28, #8]
  43e7f8:	add	x11, x22, #0x8
  43e7fc:	mov	x12, x23
  43e800:	ldur	x13, [x11, #-8]
  43e804:	subs	x12, x12, #0x1
  43e808:	str	x13, [x9], #8
  43e80c:	ldr	x13, [x11], #16
  43e810:	str	x13, [x10], #8
  43e814:	b.ne	43e800 <_obstack_memory_used@@Base+0x3008>  // b.any
  43e818:	ldr	x26, [x28]
  43e81c:	b	43e824 <_obstack_memory_used@@Base+0x302c>
  43e820:	mov	x23, xzr
  43e824:	cmp	x23, x26
  43e828:	b.cs	43e84c <_obstack_memory_used@@Base+0x3054>  // b.hs, b.nlast
  43e82c:	ldp	x10, x9, [x28, #8]
  43e830:	mov	x11, #0xffffffffffffffff    	// #-1
  43e834:	str	x11, [x9, x23, lsl #3]
  43e838:	str	x11, [x10, x23, lsl #3]
  43e83c:	ldr	x12, [x28]
  43e840:	add	x23, x23, #0x1
  43e844:	cmp	x23, x12
  43e848:	b.cc	43e834 <_obstack_memory_used@@Base+0x303c>  // b.lo, b.ul, b.last
  43e84c:	ldrb	w9, [x21, #56]
  43e850:	and	w9, w9, #0xfffffff9
  43e854:	orr	w9, w9, w8, lsl #1
  43e858:	strb	w9, [x21, #56]
  43e85c:	cbz	w8, 43e880 <_obstack_memory_used@@Base+0x3088>
  43e860:	ldr	x21, [x22]
  43e864:	ldur	w8, [x29, #-4]
  43e868:	tbz	w8, #0, 43e740 <_obstack_memory_used@@Base+0x2f48>
  43e86c:	cmp	x21, x19
  43e870:	b.ne	43e8f8 <_obstack_memory_used@@Base+0x3100>  // b.any
  43e874:	ldr	x8, [x22, #8]
  43e878:	sub	x21, x8, x19
  43e87c:	b	43e740 <_obstack_memory_used@@Base+0x2f48>
  43e880:	mov	x21, #0xfffffffffffffffe    	// #-2
  43e884:	b	43e740 <_obstack_memory_used@@Base+0x2f48>
  43e888:	mov	x21, #0xffffffffffffffff    	// #-1
  43e88c:	b	43e748 <_obstack_memory_used@@Base+0x2f50>
  43e890:	mov	x21, #0xfffffffffffffffe    	// #-2
  43e894:	b	43e748 <_obstack_memory_used@@Base+0x2f50>
  43e898:	ldr	x0, [x28, #8]
  43e89c:	lsl	x25, x26, #3
  43e8a0:	mov	x1, x25
  43e8a4:	bl	404710 <realloc@plt>
  43e8a8:	cbz	x0, 43e8d0 <_obstack_memory_used@@Base+0x30d8>
  43e8ac:	mov	x24, x0
  43e8b0:	ldr	x0, [x28, #16]
  43e8b4:	mov	x1, x25
  43e8b8:	bl	404710 <realloc@plt>
  43e8bc:	cbz	x0, 43e8c8 <_obstack_memory_used@@Base+0x30d0>
  43e8c0:	stp	x24, x0, [x28, #8]
  43e8c4:	b	43e7b8 <_obstack_memory_used@@Base+0x2fc0>
  43e8c8:	mov	x0, x24
  43e8cc:	bl	4049b0 <free@plt>
  43e8d0:	mov	w8, wzr
  43e8d4:	b	43e84c <_obstack_memory_used@@Base+0x3054>
  43e8d8:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  43e8dc:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43e8e0:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  43e8e4:	add	x0, x0, #0xeb4
  43e8e8:	add	x1, x1, #0xe2f
  43e8ec:	add	x3, x3, #0xed1
  43e8f0:	mov	w2, #0x1f9                 	// #505
  43e8f4:	bl	404cd0 <__assert_fail@plt>
  43e8f8:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  43e8fc:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43e900:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  43e904:	add	x0, x0, #0xe16
  43e908:	add	x1, x1, #0xe2f
  43e90c:	add	x3, x3, #0xe3b
  43e910:	mov	w2, #0x1be                 	// #446
  43e914:	bl	404cd0 <__assert_fail@plt>
  43e918:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  43e91c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  43e920:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  43e924:	add	x0, x0, #0xf1a
  43e928:	add	x1, x1, #0xe2f
  43e92c:	add	x3, x3, #0xed1
  43e930:	mov	w2, #0x1fb                 	// #507
  43e934:	bl	404cd0 <__assert_fail@plt>
  43e938:	mov	x6, x5
  43e93c:	mov	x5, x2
  43e940:	mov	w7, wzr
  43e944:	b	43e620 <_obstack_memory_used@@Base+0x2e28>
  43e948:	sub	sp, sp, #0x20
  43e94c:	mov	x8, x6
  43e950:	mov	w9, #0x1                   	// #1
  43e954:	str	x7, [sp]
  43e958:	mov	x6, xzr
  43e95c:	mov	x7, x8
  43e960:	stp	x29, x30, [sp, #16]
  43e964:	add	x29, sp, #0x10
  43e968:	strb	w9, [sp, #8]
  43e96c:	bl	43e97c <_obstack_memory_used@@Base+0x3184>
  43e970:	ldp	x29, x30, [sp, #16]
  43e974:	add	sp, sp, #0x20
  43e978:	ret
  43e97c:	sub	sp, sp, #0x70
  43e980:	stp	x29, x30, [sp, #16]
  43e984:	add	x29, sp, #0x10
  43e988:	stp	x22, x21, [sp, #80]
  43e98c:	ldr	x22, [x29, #96]
  43e990:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  43e994:	sub	x9, x9, x4
  43e998:	orr	x8, x4, x2
  43e99c:	cmp	x9, x2
  43e9a0:	orr	x8, x8, x22
  43e9a4:	cset	w9, lt  // lt = tstop
  43e9a8:	orr	x8, x9, x8, lsr #63
  43e9ac:	stp	x28, x27, [sp, #32]
  43e9b0:	stp	x26, x25, [sp, #48]
  43e9b4:	stp	x24, x23, [sp, #64]
  43e9b8:	stp	x20, x19, [sp, #96]
  43e9bc:	cbnz	x8, 43ea98 <_obstack_memory_used@@Base+0x32a0>
  43e9c0:	mov	x10, x7
  43e9c4:	mov	x20, x6
  43e9c8:	mov	x21, x5
  43e9cc:	mov	x28, x4
  43e9d0:	mov	x19, x2
  43e9d4:	mov	x24, x1
  43e9d8:	mov	x23, x0
  43e9dc:	cmp	x4, #0x1
  43e9e0:	add	x25, x4, x2
  43e9e4:	b.lt	43ea30 <_obstack_memory_used@@Base+0x3238>  // b.tstop
  43e9e8:	mov	x27, x3
  43e9ec:	cmp	x19, #0x1
  43e9f0:	b.lt	43ea38 <_obstack_memory_used@@Base+0x3240>  // b.tstop
  43e9f4:	mov	x0, x25
  43e9f8:	str	x10, [sp, #8]
  43e9fc:	bl	4044d0 <malloc@plt>
  43ea00:	cbz	x0, 43ea98 <_obstack_memory_used@@Base+0x32a0>
  43ea04:	mov	x1, x24
  43ea08:	mov	x2, x19
  43ea0c:	mov	x26, x0
  43ea10:	bl	4040f0 <memcpy@plt>
  43ea14:	add	x0, x26, x19
  43ea18:	mov	x1, x27
  43ea1c:	mov	x2, x28
  43ea20:	bl	4040f0 <memcpy@plt>
  43ea24:	ldr	x10, [sp, #8]
  43ea28:	mov	x24, x26
  43ea2c:	b	43ea40 <_obstack_memory_used@@Base+0x3248>
  43ea30:	mov	x26, xzr
  43ea34:	b	43ea40 <_obstack_memory_used@@Base+0x3248>
  43ea38:	mov	x26, xzr
  43ea3c:	mov	x24, x27
  43ea40:	ldrb	w8, [x29, #104]
  43ea44:	mov	x0, x23
  43ea48:	mov	x1, x24
  43ea4c:	mov	x2, x25
  43ea50:	and	w7, w8, #0x1
  43ea54:	mov	x3, x21
  43ea58:	mov	x4, x20
  43ea5c:	mov	x5, x22
  43ea60:	mov	x6, x10
  43ea64:	bl	43e620 <_obstack_memory_used@@Base+0x2e28>
  43ea68:	mov	x19, x0
  43ea6c:	mov	x0, x26
  43ea70:	bl	4049b0 <free@plt>
  43ea74:	mov	x0, x19
  43ea78:	ldp	x20, x19, [sp, #96]
  43ea7c:	ldp	x22, x21, [sp, #80]
  43ea80:	ldp	x24, x23, [sp, #64]
  43ea84:	ldp	x26, x25, [sp, #48]
  43ea88:	ldp	x28, x27, [sp, #32]
  43ea8c:	ldp	x29, x30, [sp, #16]
  43ea90:	add	sp, sp, #0x70
  43ea94:	ret
  43ea98:	mov	x0, #0xfffffffffffffffe    	// #-2
  43ea9c:	b	43ea78 <_obstack_memory_used@@Base+0x3280>
  43eaa0:	sub	sp, sp, #0x20
  43eaa4:	stp	x29, x30, [sp, #16]
  43eaa8:	add	x29, sp, #0x10
  43eaac:	ldr	x8, [x29, #16]
  43eab0:	strb	wzr, [sp, #8]
  43eab4:	str	x8, [sp]
  43eab8:	bl	43e97c <_obstack_memory_used@@Base+0x3184>
  43eabc:	ldp	x29, x30, [sp, #16]
  43eac0:	add	sp, sp, #0x20
  43eac4:	ret
  43eac8:	ldrb	w8, [x0, #56]
  43eacc:	cmp	x2, #0x0
  43ead0:	csel	x9, xzr, x4, eq  // eq = none
  43ead4:	csel	x10, xzr, x3, eq  // eq = none
  43ead8:	and	w8, w8, #0xfffffff9
  43eadc:	orr	w11, w8, #0x2
  43eae0:	csel	w8, w8, w11, eq  // eq = none
  43eae4:	strb	w8, [x0, #56]
  43eae8:	stp	x10, x9, [x1, #8]
  43eaec:	str	x2, [x1]
  43eaf0:	ret
  43eaf4:	ldr	w8, [x0, #8]
  43eaf8:	mov	w9, #0xff                  	// #255
  43eafc:	movk	w9, #0x4, lsl #16
  43eb00:	and	w8, w8, w9
  43eb04:	cmp	w8, #0x3
  43eb08:	b.eq	43eb1c <_obstack_memory_used@@Base+0x3324>  // b.none
  43eb0c:	cmp	w8, #0x6
  43eb10:	b.ne	43eb24 <_obstack_memory_used@@Base+0x332c>  // b.any
  43eb14:	ldr	x0, [x0]
  43eb18:	b	43eb90 <_obstack_memory_used@@Base+0x3398>
  43eb1c:	ldr	x0, [x0]
  43eb20:	b	4049b0 <free@plt>
  43eb24:	ret
  43eb28:	stp	x29, x30, [sp, #-32]!
  43eb2c:	str	x19, [sp, #16]
  43eb30:	mov	x19, x0
  43eb34:	ldr	x0, [x0, #48]
  43eb38:	mov	x29, sp
  43eb3c:	bl	4049b0 <free@plt>
  43eb40:	ldr	x0, [x19, #72]
  43eb44:	bl	4049b0 <free@plt>
  43eb48:	ldr	x8, [x19, #80]
  43eb4c:	add	x9, x19, #0x8
  43eb50:	cmp	x8, x9
  43eb54:	b.eq	43eb68 <_obstack_memory_used@@Base+0x3370>  // b.none
  43eb58:	ldr	x0, [x8, #16]
  43eb5c:	bl	4049b0 <free@plt>
  43eb60:	ldr	x0, [x19, #80]
  43eb64:	bl	4049b0 <free@plt>
  43eb68:	ldr	x0, [x19, #24]
  43eb6c:	bl	4049b0 <free@plt>
  43eb70:	ldr	x0, [x19, #96]
  43eb74:	bl	4049b0 <free@plt>
  43eb78:	ldr	x0, [x19, #88]
  43eb7c:	bl	4049b0 <free@plt>
  43eb80:	mov	x0, x19
  43eb84:	ldr	x19, [sp, #16]
  43eb88:	ldp	x29, x30, [sp], #32
  43eb8c:	b	4049b0 <free@plt>
  43eb90:	stp	x29, x30, [sp, #-32]!
  43eb94:	str	x19, [sp, #16]
  43eb98:	mov	x19, x0
  43eb9c:	ldr	x0, [x0]
  43eba0:	mov	x29, sp
  43eba4:	bl	4049b0 <free@plt>
  43eba8:	ldr	x0, [x19, #8]
  43ebac:	bl	4049b0 <free@plt>
  43ebb0:	ldr	x0, [x19, #16]
  43ebb4:	bl	4049b0 <free@plt>
  43ebb8:	ldr	x0, [x19, #24]
  43ebbc:	bl	4049b0 <free@plt>
  43ebc0:	mov	x0, x19
  43ebc4:	ldr	x19, [sp, #16]
  43ebc8:	ldp	x29, x30, [sp], #32
  43ebcc:	b	4049b0 <free@plt>
  43ebd0:	stp	x29, x30, [sp, #-32]!
  43ebd4:	stp	x20, x19, [sp, #16]
  43ebd8:	ldr	x19, [x0]
  43ebdc:	mov	x29, sp
  43ebe0:	ldr	x0, [x19, #112]
  43ebe4:	cbz	x0, 43ebf8 <_obstack_memory_used@@Base+0x3400>
  43ebe8:	ldr	x20, [x0]
  43ebec:	bl	4049b0 <free@plt>
  43ebf0:	mov	x0, x20
  43ebf4:	cbnz	x20, 43ebe8 <_obstack_memory_used@@Base+0x33f0>
  43ebf8:	ldr	x0, [x19, #32]
  43ebfc:	mov	w8, #0xf                   	// #15
  43ec00:	str	w8, [x19, #128]
  43ec04:	stp	xzr, xzr, [x19, #104]
  43ec08:	bl	4049b0 <free@plt>
  43ec0c:	str	xzr, [x19, #32]
  43ec10:	ldp	x20, x19, [sp, #16]
  43ec14:	ldp	x29, x30, [sp], #32
  43ec18:	ret
  43ec1c:	stp	x29, x30, [sp, #-32]!
  43ec20:	str	x19, [sp, #16]
  43ec24:	mov	x19, x0
  43ec28:	ldr	x0, [x0, #16]
  43ec2c:	mov	x29, sp
  43ec30:	bl	4049b0 <free@plt>
  43ec34:	ldr	x0, [x19, #24]
  43ec38:	bl	4049b0 <free@plt>
  43ec3c:	ldrb	w8, [x19, #139]
  43ec40:	cbz	w8, 43ec54 <_obstack_memory_used@@Base+0x345c>
  43ec44:	ldr	x0, [x19, #8]
  43ec48:	ldr	x19, [sp, #16]
  43ec4c:	ldp	x29, x30, [sp], #32
  43ec50:	b	4049b0 <free@plt>
  43ec54:	ldr	x19, [sp, #16]
  43ec58:	ldp	x29, x30, [sp], #32
  43ec5c:	ret
  43ec60:	stp	x29, x30, [sp, #-32]!
  43ec64:	stp	x20, x19, [sp, #16]
  43ec68:	ldr	w8, [x0, #144]
  43ec6c:	mov	x19, x0
  43ec70:	mov	x20, x1
  43ec74:	mov	x29, sp
  43ec78:	cmp	w8, #0x2
  43ec7c:	b.lt	43ecb8 <_obstack_memory_used@@Base+0x34c0>  // b.tstop
  43ec80:	lsr	x8, x20, #61
  43ec84:	cbnz	x8, 43ece8 <_obstack_memory_used@@Base+0x34f0>
  43ec88:	ldr	x0, [x19, #16]
  43ec8c:	lsl	x1, x20, #2
  43ec90:	bl	404710 <realloc@plt>
  43ec94:	cbz	x0, 43ece8 <_obstack_memory_used@@Base+0x34f0>
  43ec98:	mov	x8, x0
  43ec9c:	ldr	x0, [x19, #24]
  43eca0:	str	x8, [x19, #16]
  43eca4:	cbz	x0, 43ecb8 <_obstack_memory_used@@Base+0x34c0>
  43eca8:	lsl	x1, x20, #3
  43ecac:	bl	404710 <realloc@plt>
  43ecb0:	cbz	x0, 43ece8 <_obstack_memory_used@@Base+0x34f0>
  43ecb4:	str	x0, [x19, #24]
  43ecb8:	ldrb	w8, [x19, #139]
  43ecbc:	cbz	w8, 43ecd4 <_obstack_memory_used@@Base+0x34dc>
  43ecc0:	ldr	x0, [x19, #8]
  43ecc4:	mov	x1, x20
  43ecc8:	bl	404710 <realloc@plt>
  43eccc:	cbz	x0, 43ece8 <_obstack_memory_used@@Base+0x34f0>
  43ecd0:	str	x0, [x19, #8]
  43ecd4:	mov	w0, wzr
  43ecd8:	str	x20, [x19, #64]
  43ecdc:	ldp	x20, x19, [sp, #16]
  43ece0:	ldp	x29, x30, [sp], #32
  43ece4:	ret
  43ece8:	mov	w0, #0xc                   	// #12
  43ecec:	b	43ecdc <_obstack_memory_used@@Base+0x34e4>
  43ecf0:	sub	sp, sp, #0xc0
  43ecf4:	stp	x29, x30, [sp, #96]
  43ecf8:	stp	x28, x27, [sp, #112]
  43ecfc:	stp	x26, x25, [sp, #128]
  43ed00:	stp	x24, x23, [sp, #144]
  43ed04:	stp	x22, x21, [sp, #160]
  43ed08:	stp	x20, x19, [sp, #176]
  43ed0c:	ldr	x8, [x0, #64]
  43ed10:	ldr	x9, [x0, #88]
  43ed14:	ldrb	w10, [x0, #138]
  43ed18:	ldr	x26, [x0, #48]
  43ed1c:	mov	x24, x0
  43ed20:	cmp	x8, x9
  43ed24:	csel	x25, x9, x8, gt
  43ed28:	add	x29, sp, #0x60
  43ed2c:	str	x0, [sp, #8]
  43ed30:	cbnz	w10, 43ed44 <_obstack_memory_used@@Base+0x354c>
  43ed34:	ldr	x8, [x24, #120]
  43ed38:	cbnz	x8, 43ed44 <_obstack_memory_used@@Base+0x354c>
  43ed3c:	ldrb	w8, [x24, #140]
  43ed40:	cbz	w8, 43ed4c <_obstack_memory_used@@Base+0x3554>
  43ed44:	ldr	x23, [x24, #56]
  43ed48:	b	43eef8 <_obstack_memory_used@@Base+0x3700>
  43ed4c:	cmp	x25, x26
  43ed50:	b.le	43eef0 <_obstack_memory_used@@Base+0x36f8>
  43ed54:	add	x20, x24, #0x20
  43ed58:	ldr	x21, [x24, #40]
  43ed5c:	ldr	x22, [x24]
  43ed60:	add	x8, x21, x26
  43ed64:	ldrsb	w23, [x22, x8]
  43ed68:	tbnz	w23, #31, 43eda4 <_obstack_memory_used@@Base+0x35ac>
  43ed6c:	mov	x0, x20
  43ed70:	bl	404870 <mbsinit@plt>
  43ed74:	cbz	w0, 43eda4 <_obstack_memory_used@@Base+0x35ac>
  43ed78:	and	x21, x23, #0xff
  43ed7c:	bl	404720 <__ctype_toupper_loc@plt>
  43ed80:	ldr	x8, [x0]
  43ed84:	ldr	x9, [x24, #8]
  43ed88:	add	x28, x26, #0x1
  43ed8c:	ldr	w8, [x8, x21, lsl #2]
  43ed90:	strb	w8, [x9, x26]
  43ed94:	ldp	x8, x9, [x24, #8]
  43ed98:	ldrb	w8, [x8, x26]
  43ed9c:	str	w8, [x9, x26, lsl #2]
  43eda0:	b	43ee74 <_obstack_memory_used@@Base+0x367c>
  43eda4:	ldr	x8, [x20]
  43eda8:	add	x9, x22, x21
  43edac:	sub	x2, x25, x26
  43edb0:	add	x1, x9, x26
  43edb4:	add	x0, sp, #0x14
  43edb8:	mov	x3, x20
  43edbc:	stur	x8, [x29, #-8]
  43edc0:	bl	43b470 <argp_parse@@Base+0xc7b4>
  43edc4:	sub	x24, x0, #0x1
  43edc8:	mov	x21, x0
  43edcc:	cmn	x24, #0x4
  43edd0:	b.hi	43ee88 <_obstack_memory_used@@Base+0x3690>  // b.pmore
  43edd4:	ldr	w0, [sp, #20]
  43edd8:	bl	404c70 <towupper@plt>
  43eddc:	ldr	w8, [sp, #20]
  43ede0:	mov	w22, w0
  43ede4:	cmp	w0, w8
  43ede8:	b.ne	43ee04 <_obstack_memory_used@@Base+0x360c>  // b.any
  43edec:	ldr	x19, [sp, #8]
  43edf0:	ldr	x8, [x19]
  43edf4:	ldr	x9, [x19, #40]
  43edf8:	add	x8, x8, x9
  43edfc:	add	x23, x8, x26
  43ee00:	b	43ee24 <_obstack_memory_used@@Base+0x362c>
  43ee04:	add	x0, sp, #0x18
  43ee08:	sub	x2, x29, #0x8
  43ee0c:	mov	w1, w22
  43ee10:	add	x23, sp, #0x18
  43ee14:	bl	404e00 <wcrtomb@plt>
  43ee18:	ldr	x19, [sp, #8]
  43ee1c:	cmp	x21, x0
  43ee20:	b.ne	43eedc <_obstack_memory_used@@Base+0x36e4>  // b.any
  43ee24:	ldr	x8, [x19, #8]
  43ee28:	mov	x1, x23
  43ee2c:	mov	x2, x21
  43ee30:	add	x0, x8, x26
  43ee34:	bl	4040f0 <memcpy@plt>
  43ee38:	ldr	x8, [x19, #16]
  43ee3c:	add	x23, x21, x26
  43ee40:	add	x28, x26, #0x1
  43ee44:	cmp	x28, x23
  43ee48:	str	w22, [x8, x26, lsl #2]
  43ee4c:	b.ge	43ee74 <_obstack_memory_used@@Base+0x367c>  // b.tcont
  43ee50:	add	x8, x8, x26, lsl #2
  43ee54:	lsl	x9, x21, #2
  43ee58:	add	x0, x8, #0x4
  43ee5c:	sub	x2, x9, #0x4
  43ee60:	mov	w1, #0xff                  	// #255
  43ee64:	bl	4045e0 <memset@plt>
  43ee68:	subs	x24, x24, #0x1
  43ee6c:	b.ne	43ee68 <_obstack_memory_used@@Base+0x3670>  // b.any
  43ee70:	mov	x28, x23
  43ee74:	ldr	x24, [sp, #8]
  43ee78:	cmp	x25, x28
  43ee7c:	mov	x26, x28
  43ee80:	b.gt	43ed58 <_obstack_memory_used@@Base+0x3560>
  43ee84:	b	43f1f4 <_obstack_memory_used@@Base+0x39fc>
  43ee88:	ldr	x24, [sp, #8]
  43ee8c:	add	x8, x21, #0x1
  43ee90:	cmp	x8, #0x2
  43ee94:	b.cc	43eea8 <_obstack_memory_used@@Base+0x36b0>  // b.lo, b.ul, b.last
  43ee98:	ldr	x8, [x24, #64]
  43ee9c:	ldr	x9, [x24, #88]
  43eea0:	cmp	x8, x9
  43eea4:	b.lt	43eee8 <_obstack_memory_used@@Base+0x36f0>  // b.tstop
  43eea8:	ldr	x8, [x24, #40]
  43eeac:	ldp	x9, x10, [x24]
  43eeb0:	add	x28, x26, #0x1
  43eeb4:	cmn	x21, #0x1
  43eeb8:	add	x8, x8, x26
  43eebc:	ldrb	w8, [x9, x8]
  43eec0:	strb	w8, [x10, x26]
  43eec4:	ldr	x9, [x24, #16]
  43eec8:	str	w8, [x9, x26, lsl #2]
  43eecc:	b.ne	43ee74 <_obstack_memory_used@@Base+0x367c>  // b.any
  43eed0:	ldur	x8, [x29, #-8]
  43eed4:	str	x8, [x20]
  43eed8:	b	43ee74 <_obstack_memory_used@@Base+0x367c>
  43eedc:	mov	x28, x26
  43eee0:	mov	x24, x19
  43eee4:	b	43ef08 <_obstack_memory_used@@Base+0x3710>
  43eee8:	ldur	x8, [x29, #-8]
  43eeec:	str	x8, [x20]
  43eef0:	mov	x28, x26
  43eef4:	b	43f1f4 <_obstack_memory_used@@Base+0x39fc>
  43eef8:	cmp	x26, x25
  43eefc:	mov	x28, x26
  43ef00:	mov	x26, x23
  43ef04:	b.ge	43f1f4 <_obstack_memory_used@@Base+0x39fc>  // b.tcont
  43ef08:	mov	x21, x24
  43ef0c:	ldr	x8, [x21, #32]!
  43ef10:	sub	x2, x25, x28
  43ef14:	stur	x8, [x29, #-8]
  43ef18:	ldr	x8, [x21, #88]
  43ef1c:	cbnz	x8, 43eff4 <_obstack_memory_used@@Base+0x37fc>
  43ef20:	ldr	x8, [x24]
  43ef24:	ldr	x9, [x24, #40]
  43ef28:	add	x8, x8, x9
  43ef2c:	add	x24, x8, x26
  43ef30:	add	x0, sp, #0x10
  43ef34:	mov	x1, x24
  43ef38:	mov	x3, x21
  43ef3c:	bl	43b470 <argp_parse@@Base+0xc7b4>
  43ef40:	sub	x27, x0, #0x1
  43ef44:	mov	x20, x0
  43ef48:	cmn	x27, #0x4
  43ef4c:	b.hi	43f04c <_obstack_memory_used@@Base+0x3854>  // b.pmore
  43ef50:	ldr	w0, [sp, #16]
  43ef54:	mov	x19, x25
  43ef58:	bl	404c70 <towupper@plt>
  43ef5c:	ldr	w8, [sp, #16]
  43ef60:	mov	w22, w0
  43ef64:	cmp	w0, w8
  43ef68:	b.ne	43ef74 <_obstack_memory_used@@Base+0x377c>  // b.any
  43ef6c:	mov	x25, x24
  43ef70:	b	43ef90 <_obstack_memory_used@@Base+0x3798>
  43ef74:	add	x0, sp, #0x18
  43ef78:	sub	x2, x29, #0x8
  43ef7c:	mov	w1, w22
  43ef80:	add	x25, sp, #0x18
  43ef84:	bl	404e00 <wcrtomb@plt>
  43ef88:	subs	x9, x0, x20
  43ef8c:	b.ne	43f0bc <_obstack_memory_used@@Base+0x38c4>  // b.any
  43ef90:	ldr	x24, [sp, #8]
  43ef94:	mov	x1, x25
  43ef98:	mov	x2, x20
  43ef9c:	ldr	x8, [x24, #8]
  43efa0:	add	x0, x8, x28
  43efa4:	bl	4040f0 <memcpy@plt>
  43efa8:	ldrb	w8, [x24, #140]
  43efac:	cbnz	w8, 43f1c4 <_obstack_memory_used@@Base+0x39cc>
  43efb0:	ldr	x8, [x24, #16]
  43efb4:	add	x23, x20, x26
  43efb8:	add	x21, x20, x28
  43efbc:	add	x26, x28, #0x1
  43efc0:	cmp	x26, x21
  43efc4:	mov	x25, x19
  43efc8:	str	w22, [x8, x28, lsl #2]
  43efcc:	b.ge	43eef8 <_obstack_memory_used@@Base+0x3700>  // b.tcont
  43efd0:	add	x0, x8, x26, lsl #2
  43efd4:	lsl	x8, x20, #2
  43efd8:	sub	x2, x8, #0x4
  43efdc:	mov	w1, #0xff                  	// #255
  43efe0:	bl	4045e0 <memset@plt>
  43efe4:	subs	x27, x27, #0x1
  43efe8:	b.ne	43efe4 <_obstack_memory_used@@Base+0x37ec>  // b.any
  43efec:	mov	x26, x21
  43eff0:	b	43eef8 <_obstack_memory_used@@Base+0x3700>
  43eff4:	ldr	w9, [x24, #144]
  43eff8:	add	x24, sp, #0x18
  43effc:	cmp	w9, #0x1
  43f000:	b.lt	43ef30 <_obstack_memory_used@@Base+0x3738>  // b.tstop
  43f004:	cmp	x2, #0x1
  43f008:	b.lt	43ef30 <_obstack_memory_used@@Base+0x3738>  // b.tstop
  43f00c:	ldr	x12, [sp, #8]
  43f010:	mov	x10, xzr
  43f014:	ldr	x11, [x12, #40]
  43f018:	ldr	x12, [x12]
  43f01c:	add	x11, x26, x11
  43f020:	add	x11, x12, x11
  43f024:	ldrb	w12, [x11, x10]
  43f028:	add	x24, sp, #0x18
  43f02c:	ldrb	w12, [x8, x12]
  43f030:	strb	w12, [x24, x10]
  43f034:	add	x10, x10, #0x1
  43f038:	cmp	x10, x9
  43f03c:	b.cs	43ef30 <_obstack_memory_used@@Base+0x3738>  // b.hs, b.nlast
  43f040:	cmp	x2, x10
  43f044:	b.gt	43f024 <_obstack_memory_used@@Base+0x382c>
  43f048:	b	43ef30 <_obstack_memory_used@@Base+0x3738>
  43f04c:	ldr	x19, [sp, #8]
  43f050:	add	x8, x20, #0x1
  43f054:	cmp	x8, #0x2
  43f058:	b.cc	43f06c <_obstack_memory_used@@Base+0x3874>  // b.lo, b.ul, b.last
  43f05c:	ldr	x8, [x19, #64]
  43f060:	ldr	x9, [x19, #88]
  43f064:	cmp	x8, x9
  43f068:	b.lt	43f1e8 <_obstack_memory_used@@Base+0x39f0>  // b.tstop
  43f06c:	ldr	x8, [x19, #40]
  43f070:	ldr	x10, [x19]
  43f074:	ldr	x9, [x19, #120]
  43f078:	mov	x24, x19
  43f07c:	add	x8, x8, x26
  43f080:	ldrb	w8, [x10, x8]
  43f084:	cbnz	x9, 43f224 <_obstack_memory_used@@Base+0x3a2c>
  43f088:	ldr	x9, [x24, #8]
  43f08c:	strb	w8, [x9, x28]
  43f090:	ldrb	w9, [x24, #140]
  43f094:	cbnz	w9, 43f22c <_obstack_memory_used@@Base+0x3a34>
  43f098:	ldr	x9, [x24, #16]
  43f09c:	add	x23, x26, #0x1
  43f0a0:	add	x26, x28, #0x1
  43f0a4:	cmn	x20, #0x1
  43f0a8:	str	w8, [x9, x28, lsl #2]
  43f0ac:	b.ne	43eef8 <_obstack_memory_used@@Base+0x3700>  // b.any
  43f0b0:	ldur	x8, [x29, #-8]
  43f0b4:	str	x8, [x21]
  43f0b8:	b	43eef8 <_obstack_memory_used@@Base+0x3700>
  43f0bc:	mov	x23, x0
  43f0c0:	cmn	x0, #0x1
  43f0c4:	mov	x25, x24
  43f0c8:	b.eq	43ef90 <_obstack_memory_used@@Base+0x3798>  // b.none
  43f0cc:	ldr	x19, [sp, #8]
  43f0d0:	add	x24, x23, x28
  43f0d4:	ldr	x8, [x19, #64]
  43f0d8:	cmp	x24, x8
  43f0dc:	b.hi	43f1e8 <_obstack_memory_used@@Base+0x39f0>  // b.pmore
  43f0e0:	ldr	x0, [x19, #24]
  43f0e4:	mov	x21, x9
  43f0e8:	cbnz	x0, 43f0fc <_obstack_memory_used@@Base+0x3904>
  43f0ec:	lsl	x0, x8, #3
  43f0f0:	bl	4044d0 <malloc@plt>
  43f0f4:	str	x0, [x19, #24]
  43f0f8:	cbz	x0, 43f21c <_obstack_memory_used@@Base+0x3a24>
  43f0fc:	ldrb	w8, [x19, #140]
  43f100:	cbnz	w8, 43f128 <_obstack_memory_used@@Base+0x3930>
  43f104:	cbz	x28, 43f11c <_obstack_memory_used@@Base+0x3924>
  43f108:	mov	x8, xzr
  43f10c:	str	x8, [x0, x8, lsl #3]
  43f110:	add	x8, x8, #0x1
  43f114:	cmp	x28, x8
  43f118:	b.ne	43f10c <_obstack_memory_used@@Base+0x3914>  // b.any
  43f11c:	ldr	x19, [sp, #8]
  43f120:	mov	w8, #0x1                   	// #1
  43f124:	strb	w8, [x19, #140]
  43f128:	ldr	x8, [x19, #8]
  43f12c:	add	x1, sp, #0x18
  43f130:	mov	x2, x23
  43f134:	add	x0, x8, x28
  43f138:	bl	4040f0 <memcpy@plt>
  43f13c:	ldr	x8, [x19, #16]
  43f140:	cmp	x23, #0x2
  43f144:	str	w22, [x8, x28, lsl #2]
  43f148:	ldr	x9, [x19, #24]
  43f14c:	str	x26, [x9, x28, lsl #3]
  43f150:	b.cc	43f184 <_obstack_memory_used@@Base+0x398c>  // b.lo, b.ul, b.last
  43f154:	add	x8, x8, x28, lsl #2
  43f158:	add	x9, x9, x28, lsl #3
  43f15c:	mov	w10, #0x1                   	// #1
  43f160:	mov	w11, #0xffffffff            	// #-1
  43f164:	cmp	x10, x20
  43f168:	csel	x12, x10, x27, cc  // cc = lo, ul, last
  43f16c:	add	x12, x12, x26
  43f170:	str	x12, [x9, x10, lsl #3]
  43f174:	str	w11, [x8, x10, lsl #2]
  43f178:	add	x10, x10, #0x1
  43f17c:	cmp	x23, x10
  43f180:	b.ne	43f164 <_obstack_memory_used@@Base+0x396c>  // b.any
  43f184:	ldr	x10, [sp, #8]
  43f188:	ldp	x8, x9, [x10, #88]
  43f18c:	add	x8, x8, x21
  43f190:	cmp	x9, x26
  43f194:	str	x8, [x10, #88]
  43f198:	b.le	43f1a8 <_obstack_memory_used@@Base+0x39b0>
  43f19c:	ldr	x9, [x10, #104]
  43f1a0:	add	x9, x9, x21
  43f1a4:	str	x9, [x10, #104]
  43f1a8:	ldr	x9, [x10, #64]
  43f1ac:	add	x23, x20, x26
  43f1b0:	mov	x26, x24
  43f1b4:	mov	x24, x10
  43f1b8:	cmp	x9, x8
  43f1bc:	csel	x25, x8, x9, gt
  43f1c0:	b	43eef8 <_obstack_memory_used@@Base+0x3700>
  43f1c4:	ldr	x8, [x24, #24]
  43f1c8:	mov	x9, x26
  43f1cc:	mov	x10, x20
  43f1d0:	add	x8, x8, x28, lsl #3
  43f1d4:	str	x9, [x8], #8
  43f1d8:	subs	x10, x10, #0x1
  43f1dc:	add	x9, x9, #0x1
  43f1e0:	b.ne	43f1d4 <_obstack_memory_used@@Base+0x39dc>  // b.any
  43f1e4:	b	43efb0 <_obstack_memory_used@@Base+0x37b8>
  43f1e8:	ldur	x8, [x29, #-8]
  43f1ec:	mov	x24, x19
  43f1f0:	str	x8, [x21]
  43f1f4:	mov	w0, wzr
  43f1f8:	stp	x28, x26, [x24, #48]
  43f1fc:	ldp	x20, x19, [sp, #176]
  43f200:	ldp	x22, x21, [sp, #160]
  43f204:	ldp	x24, x23, [sp, #144]
  43f208:	ldp	x26, x25, [sp, #128]
  43f20c:	ldp	x28, x27, [sp, #112]
  43f210:	ldp	x29, x30, [sp, #96]
  43f214:	add	sp, sp, #0xc0
  43f218:	ret
  43f21c:	mov	w0, #0xc                   	// #12
  43f220:	b	43f1fc <_obstack_memory_used@@Base+0x3a04>
  43f224:	ldrb	w8, [x9, x8]
  43f228:	b	43f088 <_obstack_memory_used@@Base+0x3890>
  43f22c:	ldr	x9, [x24, #24]
  43f230:	str	x26, [x9, x28, lsl #3]
  43f234:	b	43f098 <_obstack_memory_used@@Base+0x38a0>
  43f238:	stp	x29, x30, [sp, #-48]!
  43f23c:	stp	x20, x19, [sp, #32]
  43f240:	ldr	x8, [x0, #64]
  43f244:	ldr	x9, [x0, #88]
  43f248:	ldr	x20, [x0, #48]
  43f24c:	str	x21, [sp, #16]
  43f250:	mov	x19, x0
  43f254:	cmp	x8, x9
  43f258:	csel	x21, x9, x8, gt
  43f25c:	mov	x29, sp
  43f260:	cmp	x20, x21
  43f264:	b.ge	43f29c <_obstack_memory_used@@Base+0x3aa4>  // b.tcont
  43f268:	ldr	x8, [x19]
  43f26c:	ldr	x9, [x19, #40]
  43f270:	add	x9, x8, x9
  43f274:	ldr	x8, [x19, #120]
  43f278:	ldrb	w0, [x9, x20]
  43f27c:	cbnz	x8, 43f294 <_obstack_memory_used@@Base+0x3a9c>
  43f280:	bl	4044e0 <toupper@plt>
  43f284:	ldr	x8, [x19, #8]
  43f288:	strb	w0, [x8, x20]
  43f28c:	add	x20, x20, #0x1
  43f290:	b	43f260 <_obstack_memory_used@@Base+0x3a68>
  43f294:	ldrb	w0, [x8, x0]
  43f298:	b	43f280 <_obstack_memory_used@@Base+0x3a88>
  43f29c:	stp	x20, x20, [x19, #48]
  43f2a0:	ldp	x20, x19, [sp, #32]
  43f2a4:	ldr	x21, [sp, #16]
  43f2a8:	ldp	x29, x30, [sp], #48
  43f2ac:	ret
  43f2b0:	sub	sp, sp, #0x90
  43f2b4:	stp	x29, x30, [sp, #80]
  43f2b8:	stp	x24, x23, [sp, #96]
  43f2bc:	stp	x22, x21, [sp, #112]
  43f2c0:	stp	x20, x19, [sp, #128]
  43f2c4:	ldr	x8, [x0, #64]
  43f2c8:	ldr	x9, [x0, #88]
  43f2cc:	ldr	x23, [x0, #48]
  43f2d0:	mov	x19, x0
  43f2d4:	add	x29, sp, #0x50
  43f2d8:	cmp	x8, x9
  43f2dc:	csel	x22, x9, x8, gt
  43f2e0:	cmp	x22, x23
  43f2e4:	b.le	43f464 <_obstack_memory_used@@Base+0x3c6c>
  43f2e8:	add	x20, x19, #0x20
  43f2ec:	ldr	x8, [x19, #120]
  43f2f0:	ldr	x24, [x19, #32]
  43f2f4:	sub	x2, x22, x23
  43f2f8:	cbnz	x8, 43f3bc <_obstack_memory_used@@Base+0x3bc4>
  43f2fc:	ldr	x8, [x19]
  43f300:	ldr	x9, [x19, #40]
  43f304:	add	x8, x8, x9
  43f308:	add	x1, x8, x23
  43f30c:	add	x0, sp, #0xc
  43f310:	mov	x3, x20
  43f314:	bl	43b470 <argp_parse@@Base+0xc7b4>
  43f318:	add	x8, x0, #0x1
  43f31c:	cmp	x8, #0x2
  43f320:	b.cc	43f340 <_obstack_memory_used@@Base+0x3b48>  // b.lo, b.ul, b.last
  43f324:	mov	x21, x0
  43f328:	cmn	x0, #0x2
  43f32c:	b.ne	43f368 <_obstack_memory_used@@Base+0x3b70>  // b.any
  43f330:	ldr	x8, [x19, #64]
  43f334:	ldr	x9, [x19, #88]
  43f338:	cmp	x8, x9
  43f33c:	b.lt	43f460 <_obstack_memory_used@@Base+0x3c68>  // b.tstop
  43f340:	ldr	x8, [x19, #40]
  43f344:	ldr	x9, [x19]
  43f348:	add	x8, x8, x23
  43f34c:	ldrb	w8, [x9, x8]
  43f350:	str	w8, [sp, #12]
  43f354:	ldr	x9, [x19, #120]
  43f358:	cbnz	x9, 43f454 <_obstack_memory_used@@Base+0x3c5c>
  43f35c:	mov	w21, #0x1                   	// #1
  43f360:	str	x24, [x20]
  43f364:	b	43f36c <_obstack_memory_used@@Base+0x3b74>
  43f368:	ldr	w8, [sp, #12]
  43f36c:	ldr	x10, [x19, #16]
  43f370:	add	x24, x21, x23
  43f374:	add	x9, x23, #0x1
  43f378:	cmp	x9, x24
  43f37c:	str	w8, [x10, x23, lsl #2]
  43f380:	b.ge	43f3ac <_obstack_memory_used@@Base+0x3bb4>  // b.tcont
  43f384:	add	x8, x10, x23, lsl #2
  43f388:	lsl	x9, x21, #2
  43f38c:	add	x0, x8, #0x4
  43f390:	sub	x2, x9, #0x4
  43f394:	mov	w1, #0xff                  	// #255
  43f398:	bl	4045e0 <memset@plt>
  43f39c:	sub	x8, x21, #0x1
  43f3a0:	subs	x8, x8, #0x1
  43f3a4:	b.ne	43f3a0 <_obstack_memory_used@@Base+0x3ba8>  // b.any
  43f3a8:	mov	x9, x24
  43f3ac:	cmp	x22, x9
  43f3b0:	mov	x23, x9
  43f3b4:	b.gt	43f2ec <_obstack_memory_used@@Base+0x3af4>
  43f3b8:	b	43f468 <_obstack_memory_used@@Base+0x3c70>
  43f3bc:	ldr	w9, [x19, #144]
  43f3c0:	add	x1, sp, #0x10
  43f3c4:	cmp	w9, #0x1
  43f3c8:	b.lt	43f30c <_obstack_memory_used@@Base+0x3b14>  // b.tstop
  43f3cc:	cmp	x2, #0x1
  43f3d0:	b.lt	43f30c <_obstack_memory_used@@Base+0x3b14>  // b.tstop
  43f3d4:	ldr	x9, [x19, #40]
  43f3d8:	ldp	x10, x11, [x19]
  43f3dc:	add	x1, sp, #0x10
  43f3e0:	add	x9, x23, x9
  43f3e4:	ldrb	w9, [x10, x9]
  43f3e8:	ldrb	w8, [x8, x9]
  43f3ec:	strb	w8, [x11, x23]
  43f3f0:	strb	w8, [sp, #16]
  43f3f4:	ldr	w8, [x19, #144]
  43f3f8:	cmp	w8, #0x2
  43f3fc:	b.lt	43f30c <_obstack_memory_used@@Base+0x3b14>  // b.tstop
  43f400:	cmp	x2, #0x2
  43f404:	b.lt	43f30c <_obstack_memory_used@@Base+0x3b14>  // b.tstop
  43f408:	mov	w8, #0x1                   	// #1
  43f40c:	ldr	x9, [x19, #40]
  43f410:	ldp	x10, x12, [x19]
  43f414:	ldr	x11, [x19, #120]
  43f418:	add	x1, sp, #0x10
  43f41c:	add	x9, x10, x9
  43f420:	add	x9, x9, x23
  43f424:	ldrb	w9, [x9, x8]
  43f428:	add	x10, x12, x23
  43f42c:	ldrb	w9, [x11, x9]
  43f430:	strb	w9, [x10, x8]
  43f434:	strb	w9, [x1, x8]
  43f438:	ldr	w9, [x19, #144]
  43f43c:	add	x8, x8, #0x1
  43f440:	cmp	w9, w8
  43f444:	b.le	43f30c <_obstack_memory_used@@Base+0x3b14>
  43f448:	cmp	x2, x8
  43f44c:	b.gt	43f40c <_obstack_memory_used@@Base+0x3c14>
  43f450:	b	43f30c <_obstack_memory_used@@Base+0x3b14>
  43f454:	ldrb	w8, [x9, w8, uxtw]
  43f458:	str	w8, [sp, #12]
  43f45c:	b	43f35c <_obstack_memory_used@@Base+0x3b64>
  43f460:	str	x24, [x20]
  43f464:	mov	x9, x23
  43f468:	stp	x9, x9, [x19, #48]
  43f46c:	ldp	x20, x19, [sp, #128]
  43f470:	ldp	x22, x21, [sp, #112]
  43f474:	ldp	x24, x23, [sp, #96]
  43f478:	ldp	x29, x30, [sp, #80]
  43f47c:	add	sp, sp, #0x90
  43f480:	ret
  43f484:	ldr	x9, [x0, #64]
  43f488:	ldr	x10, [x0, #88]
  43f48c:	ldr	x8, [x0, #48]
  43f490:	cmp	x9, x10
  43f494:	csel	x9, x10, x9, gt
  43f498:	cmp	x8, x9
  43f49c:	b.ge	43f4c4 <_obstack_memory_used@@Base+0x3ccc>  // b.tcont
  43f4a0:	ldr	x10, [x0, #40]
  43f4a4:	ldp	x11, x13, [x0]
  43f4a8:	ldr	x12, [x0, #120]
  43f4ac:	add	x10, x11, x10
  43f4b0:	ldrb	w10, [x10, x8]
  43f4b4:	ldrb	w10, [x12, x10]
  43f4b8:	strb	w10, [x13, x8]
  43f4bc:	add	x8, x8, #0x1
  43f4c0:	b	43f498 <_obstack_memory_used@@Base+0x3ca0>
  43f4c4:	stp	x8, x8, [x0, #48]
  43f4c8:	ret
  43f4cc:	sub	sp, sp, #0x80
  43f4d0:	stp	x29, x30, [sp, #32]
  43f4d4:	stp	x28, x27, [sp, #48]
  43f4d8:	stp	x26, x25, [sp, #64]
  43f4dc:	stp	x24, x23, [sp, #80]
  43f4e0:	stp	x22, x21, [sp, #96]
  43f4e4:	stp	x20, x19, [sp, #112]
  43f4e8:	ldr	x25, [x1]
  43f4ec:	add	x29, sp, #0x20
  43f4f0:	mov	x20, x5
  43f4f4:	mov	x21, x4
  43f4f8:	ldr	x8, [x25, #168]
  43f4fc:	mov	x23, x2
  43f500:	mov	x24, x1
  43f504:	mov	x26, x0
  43f508:	stp	x8, x3, [sp]
  43f50c:	bl	43fc54 <_obstack_memory_used@@Base+0x445c>
  43f510:	mov	x19, x0
  43f514:	cbnz	x0, 43f520 <_obstack_memory_used@@Base+0x3d28>
  43f518:	ldr	w8, [x20]
  43f51c:	cbnz	w8, 43f648 <_obstack_memory_used@@Base+0x3e50>
  43f520:	ldr	x8, [sp, #8]
  43f524:	mov	w28, #0xa                   	// #10
  43f528:	orr	x27, x8, #0x800000
  43f52c:	ldrb	w8, [x23, #8]
  43f530:	cmp	w8, #0xa
  43f534:	b.ne	43f5e0 <_obstack_memory_used@@Base+0x3de8>  // b.any
  43f538:	mov	x0, x23
  43f53c:	mov	x1, x26
  43f540:	mov	x2, x27
  43f544:	bl	43f650 <_obstack_memory_used@@Base+0x3e58>
  43f548:	ldr	x8, [x26, #72]
  43f54c:	add	x8, x8, w0, sxtw
  43f550:	str	x8, [x26, #72]
  43f554:	ldrb	w8, [x23, #8]
  43f558:	orr	w9, w8, #0x8
  43f55c:	cmp	w9, #0xa
  43f560:	b.ne	43f588 <_obstack_memory_used@@Base+0x3d90>  // b.any
  43f564:	mov	x2, xzr
  43f568:	add	x3, sp, #0x10
  43f56c:	mov	x0, x25
  43f570:	mov	x1, x19
  43f574:	str	w28, [sp, #24]
  43f578:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  43f57c:	mov	x19, x0
  43f580:	cbnz	x0, 43f52c <_obstack_memory_used@@Base+0x3d34>
  43f584:	b	43f5d8 <_obstack_memory_used@@Base+0x3de0>
  43f588:	cbz	x21, 43f594 <_obstack_memory_used@@Base+0x3d9c>
  43f58c:	cmp	w8, #0x9
  43f590:	b.eq	43f564 <_obstack_memory_used@@Base+0x3d6c>  // b.none
  43f594:	ldp	x8, x3, [sp]
  43f598:	ldr	x22, [x25, #168]
  43f59c:	mov	x0, x26
  43f5a0:	mov	x1, x24
  43f5a4:	mov	x2, x23
  43f5a8:	mov	x4, x21
  43f5ac:	mov	x5, x20
  43f5b0:	str	x8, [x25, #168]
  43f5b4:	bl	43fc54 <_obstack_memory_used@@Base+0x445c>
  43f5b8:	mov	x2, x0
  43f5bc:	cbnz	x0, 43f5c8 <_obstack_memory_used@@Base+0x3dd0>
  43f5c0:	ldr	w8, [x20]
  43f5c4:	cbnz	w8, 43f604 <_obstack_memory_used@@Base+0x3e0c>
  43f5c8:	ldr	x8, [x25, #168]
  43f5cc:	orr	x8, x8, x22
  43f5d0:	str	x8, [x25, #168]
  43f5d4:	b	43f568 <_obstack_memory_used@@Base+0x3d70>
  43f5d8:	mov	w8, #0xc                   	// #12
  43f5dc:	str	w8, [x20]
  43f5e0:	mov	x0, x19
  43f5e4:	ldp	x20, x19, [sp, #112]
  43f5e8:	ldp	x22, x21, [sp, #96]
  43f5ec:	ldp	x24, x23, [sp, #80]
  43f5f0:	ldp	x26, x25, [sp, #64]
  43f5f4:	ldp	x28, x27, [sp, #48]
  43f5f8:	ldp	x29, x30, [sp, #32]
  43f5fc:	add	sp, sp, #0x80
  43f600:	ret
  43f604:	cbz	x19, 43f5e0 <_obstack_memory_used@@Base+0x3de8>
  43f608:	mov	x20, x19
  43f60c:	ldr	x19, [x19, #8]
  43f610:	cbnz	x19, 43f608 <_obstack_memory_used@@Base+0x3e10>
  43f614:	ldr	x19, [x20, #16]
  43f618:	cbnz	x19, 43f608 <_obstack_memory_used@@Base+0x3e10>
  43f61c:	add	x0, x20, #0x28
  43f620:	bl	43eaf4 <_obstack_memory_used@@Base+0x32fc>
  43f624:	ldr	x8, [x20]
  43f628:	cbz	x8, 43f648 <_obstack_memory_used@@Base+0x3e50>
  43f62c:	ldr	x19, [x8, #16]
  43f630:	cmp	x19, x20
  43f634:	mov	x20, x8
  43f638:	b.eq	43f61c <_obstack_memory_used@@Base+0x3e24>  // b.none
  43f63c:	mov	x20, x8
  43f640:	cbz	x19, 43f61c <_obstack_memory_used@@Base+0x3e24>
  43f644:	b	43f608 <_obstack_memory_used@@Base+0x3e10>
  43f648:	mov	x19, xzr
  43f64c:	b	43f5e0 <_obstack_memory_used@@Base+0x3de8>
  43f650:	sub	sp, sp, #0x50
  43f654:	stp	x29, x30, [sp, #16]
  43f658:	stp	x24, x23, [sp, #32]
  43f65c:	stp	x22, x21, [sp, #48]
  43f660:	stp	x20, x19, [sp, #64]
  43f664:	ldr	x9, [x1, #104]
  43f668:	ldr	x8, [x1, #72]
  43f66c:	mov	x19, x0
  43f670:	add	x29, sp, #0x10
  43f674:	cmp	x9, x8
  43f678:	b.le	43f75c <_obstack_memory_used@@Base+0x3f64>
  43f67c:	ldr	x9, [x1, #8]
  43f680:	mov	x23, x19
  43f684:	mov	x20, x2
  43f688:	mov	x21, x1
  43f68c:	ldrb	w24, [x9, x8]
  43f690:	strb	w24, [x23], #8
  43f694:	ldr	w8, [x23]
  43f698:	and	w9, w8, #0xff9fffff
  43f69c:	str	w9, [x23]
  43f6a0:	ldr	w11, [x1, #144]
  43f6a4:	cmp	w11, #0x2
  43f6a8:	b.lt	43f6cc <_obstack_memory_used@@Base+0x3ed4>  // b.tstop
  43f6ac:	ldr	x9, [x21, #72]
  43f6b0:	ldr	x10, [x21, #48]
  43f6b4:	cmp	x9, x10
  43f6b8:	b.eq	43f6cc <_obstack_memory_used@@Base+0x3ed4>  // b.none
  43f6bc:	ldr	x10, [x21, #16]
  43f6c0:	ldr	w9, [x10, x9, lsl #2]
  43f6c4:	cmn	w9, #0x1
  43f6c8:	b.eq	43f978 <_obstack_memory_used@@Base+0x4180>  // b.none
  43f6cc:	mov	w9, #0xff00                	// #65280
  43f6d0:	cmp	w24, #0x5c
  43f6d4:	movk	w9, #0xff9f, lsl #16
  43f6d8:	b.ne	43f76c <_obstack_memory_used@@Base+0x3f74>  // b.any
  43f6dc:	ldr	x12, [x21, #72]
  43f6e0:	ldr	x13, [x21, #88]
  43f6e4:	add	x10, x12, #0x1
  43f6e8:	cmp	x10, x13
  43f6ec:	b.ge	43f7bc <_obstack_memory_used@@Base+0x3fc4>  // b.tcont
  43f6f0:	ldrb	w13, [x21, #139]
  43f6f4:	cbnz	w13, 43fbf0 <_obstack_memory_used@@Base+0x43f8>
  43f6f8:	ldr	x11, [x21, #8]
  43f6fc:	ldrb	w22, [x11, x10]
  43f700:	and	w8, w8, w9
  43f704:	orr	w24, w8, #0x1
  43f708:	strb	w22, [x19]
  43f70c:	str	w24, [x19, #8]
  43f710:	ldr	w8, [x21, #144]
  43f714:	cmp	w8, #0x2
  43f718:	b.lt	43f8cc <_obstack_memory_used@@Base+0x40d4>  // b.tstop
  43f71c:	ldr	x8, [x21, #72]
  43f720:	ldr	x9, [x21, #16]
  43f724:	add	x8, x9, x8, lsl #2
  43f728:	ldr	w21, [x8, #4]
  43f72c:	mov	w0, w21
  43f730:	bl	404ba0 <iswalnum@plt>
  43f734:	ldr	w9, [x23]
  43f738:	cmp	w0, #0x0
  43f73c:	mov	w8, #0x5f                  	// #95
  43f740:	mov	w10, #0x400000              	// #4194304
  43f744:	ccmp	w21, w8, #0x4, eq  // eq = none
  43f748:	csel	w8, w10, wzr, eq  // eq = none
  43f74c:	and	w9, w9, #0xffbfffff
  43f750:	orr	w8, w8, w9
  43f754:	and	x9, x22, #0xff
  43f758:	b	43f8f4 <_obstack_memory_used@@Base+0x40fc>
  43f75c:	mov	w8, #0x2                   	// #2
  43f760:	mov	w0, wzr
  43f764:	strb	w8, [x19, #8]
  43f768:	b	43fbd8 <_obstack_memory_used@@Base+0x43e0>
  43f76c:	and	w8, w8, w9
  43f770:	orr	w22, w8, #0x1
  43f774:	str	w22, [x23]
  43f778:	ldr	w8, [x21, #144]
  43f77c:	cmp	w8, #0x2
  43f780:	b.lt	43f7cc <_obstack_memory_used@@Base+0x3fd4>  // b.tstop
  43f784:	ldr	x8, [x21, #72]
  43f788:	ldr	x9, [x21, #16]
  43f78c:	ldr	w22, [x9, x8, lsl #2]
  43f790:	mov	w0, w22
  43f794:	bl	404ba0 <iswalnum@plt>
  43f798:	ldr	w9, [x23]
  43f79c:	cmp	w0, #0x0
  43f7a0:	mov	w8, #0x5f                  	// #95
  43f7a4:	ccmp	w22, w8, #0x4, eq  // eq = none
  43f7a8:	mov	w8, #0x400000              	// #4194304
  43f7ac:	csel	w8, w8, wzr, eq  // eq = none
  43f7b0:	and	w9, w9, #0xffbfffff
  43f7b4:	orr	w8, w8, w9
  43f7b8:	b	43f7f8 <_obstack_memory_used@@Base+0x4000>
  43f7bc:	and	w8, w8, w9
  43f7c0:	mov	w9, #0x24                  	// #36
  43f7c4:	orr	w8, w8, w9
  43f7c8:	b	43fa60 <_obstack_memory_used@@Base+0x4268>
  43f7cc:	bl	404930 <__ctype_b_loc@plt>
  43f7d0:	ldr	x8, [x0]
  43f7d4:	cmp	w24, #0x5f
  43f7d8:	cset	w9, eq  // eq = none
  43f7dc:	ldrh	w8, [x8, x24, lsl #1]
  43f7e0:	and	w8, w8, #0x8
  43f7e4:	orr	w8, w9, w8, lsr #3
  43f7e8:	cmp	w8, #0x0
  43f7ec:	mov	w8, #0x400000              	// #4194304
  43f7f0:	csel	w8, w8, wzr, ne  // ne = any
  43f7f4:	orr	w8, w8, w22
  43f7f8:	cmp	w24, #0x3e
  43f7fc:	mov	w0, #0x1                   	// #1
  43f800:	str	w8, [x23]
  43f804:	b.gt	43f884 <_obstack_memory_used@@Base+0x408c>
  43f808:	sub	w9, w24, #0x24
  43f80c:	cmp	w9, #0xa
  43f810:	b.hi	43f9c4 <_obstack_memory_used@@Base+0x41cc>  // b.pmore
  43f814:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x19808>
  43f818:	add	x10, x10, #0x9e0
  43f81c:	adr	x11, 43f82c <_obstack_memory_used@@Base+0x4034>
  43f820:	ldrb	w12, [x10, x9]
  43f824:	add	x11, x11, x12, lsl #2
  43f828:	br	x11
  43f82c:	tbnz	w20, #3, 43f878 <_obstack_memory_used@@Base+0x4080>
  43f830:	ldr	x9, [x21, #72]
  43f834:	ldr	x10, [x21, #88]
  43f838:	add	x9, x9, #0x1
  43f83c:	cmp	x9, x10
  43f840:	b.eq	43f878 <_obstack_memory_used@@Base+0x4080>  // b.none
  43f844:	mov	x0, sp
  43f848:	mov	x1, x21
  43f84c:	mov	x2, x20
  43f850:	str	x9, [x21, #72]
  43f854:	bl	43f650 <_obstack_memory_used@@Base+0x3e58>
  43f858:	ldr	x8, [x21, #72]
  43f85c:	sub	x8, x8, #0x1
  43f860:	str	x8, [x21, #72]
  43f864:	ldrb	w8, [sp, #8]
  43f868:	sub	w8, w8, #0x9
  43f86c:	cmp	w8, #0x1
  43f870:	b.hi	43fa64 <_obstack_memory_used@@Base+0x426c>  // b.pmore
  43f874:	ldr	w8, [x23]
  43f878:	and	w8, w8, #0xffffff00
  43f87c:	mov	w9, #0x20                  	// #32
  43f880:	b	43f8bc <_obstack_memory_used@@Base+0x40c4>
  43f884:	cmp	w24, #0x7a
  43f888:	b.gt	43f944 <_obstack_memory_used@@Base+0x414c>
  43f88c:	cmp	w24, #0x3f
  43f890:	b.eq	43fa14 <_obstack_memory_used@@Base+0x421c>  // b.none
  43f894:	cmp	w24, #0x5b
  43f898:	b.eq	43fa28 <_obstack_memory_used@@Base+0x4230>  // b.none
  43f89c:	cmp	w24, #0x5e
  43f8a0:	b.ne	43fbd8 <_obstack_memory_used@@Base+0x43e0>  // b.any
  43f8a4:	mov	w9, #0x8                   	// #8
  43f8a8:	movk	w9, #0x80, lsl #16
  43f8ac:	tst	x20, x9
  43f8b0:	b.eq	43fa8c <_obstack_memory_used@@Base+0x4294>  // b.none
  43f8b4:	and	w8, w8, #0xffffff00
  43f8b8:	mov	w9, #0x10                  	// #16
  43f8bc:	orr	w8, w8, #0xc
  43f8c0:	str	w9, [x19]
  43f8c4:	str	w8, [x19, #8]
  43f8c8:	b	43fa64 <_obstack_memory_used@@Base+0x426c>
  43f8cc:	bl	404930 <__ctype_b_loc@plt>
  43f8d0:	ldr	x8, [x0]
  43f8d4:	and	x9, x22, #0xff
  43f8d8:	and	w10, w22, #0xff
  43f8dc:	cmp	w10, #0x5f
  43f8e0:	ldrh	w8, [x8, x9, lsl #1]
  43f8e4:	cset	w10, eq  // eq = none
  43f8e8:	ubfx	w8, w8, #3, #1
  43f8ec:	orr	w8, w8, w10
  43f8f0:	orr	w8, w24, w8, lsl #22
  43f8f4:	and	w10, w22, #0xff
  43f8f8:	cmp	w10, #0x5f
  43f8fc:	mov	w0, #0x2                   	// #2
  43f900:	str	w8, [x23]
  43f904:	b.gt	43f994 <_obstack_memory_used@@Base+0x419c>
  43f908:	sub	w11, w10, #0x27
  43f90c:	cmp	w11, #0x2c
  43f910:	b.hi	43fab0 <_obstack_memory_used@@Base+0x42b8>  // b.pmore
  43f914:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x19808>
  43f918:	add	x10, x10, #0x9eb
  43f91c:	adr	x12, 43f92c <_obstack_memory_used@@Base+0x4134>
  43f920:	ldrb	w13, [x10, x11]
  43f924:	add	x12, x12, x13, lsl #2
  43f928:	br	x12
  43f92c:	tbnz	w20, #14, 43fbd4 <_obstack_memory_used@@Base+0x43dc>
  43f930:	and	w8, w8, #0xffffff00
  43f934:	sub	x9, x9, #0x31
  43f938:	orr	w8, w8, #0x4
  43f93c:	str	x9, [x19]
  43f940:	b	43fbbc <_obstack_memory_used@@Base+0x43c4>
  43f944:	cmp	w24, #0x7b
  43f948:	b.eq	43fa30 <_obstack_memory_used@@Base+0x4238>  // b.none
  43f94c:	cmp	w24, #0x7c
  43f950:	b.eq	43fa48 <_obstack_memory_used@@Base+0x4250>  // b.none
  43f954:	cmp	w24, #0x7d
  43f958:	b.ne	43fbd8 <_obstack_memory_used@@Base+0x43e0>  // b.any
  43f95c:	mvn	w9, w20
  43f960:	mov	w10, #0x1200                	// #4608
  43f964:	tst	x9, x10
  43f968:	b.ne	43fa64 <_obstack_memory_used@@Base+0x426c>  // b.any
  43f96c:	and	w8, w8, #0xffffff00
  43f970:	orr	w8, w8, #0x18
  43f974:	b	43fa60 <_obstack_memory_used@@Base+0x4268>
  43f978:	mov	w9, #0xff00                	// #65280
  43f97c:	movk	w9, #0xff9f, lsl #16
  43f980:	mov	w10, #0x1                   	// #1
  43f984:	movk	w10, #0x20, lsl #16
  43f988:	and	w8, w8, w9
  43f98c:	orr	w8, w8, w10
  43f990:	b	43fa60 <_obstack_memory_used@@Base+0x4268>
  43f994:	sub	w9, w10, #0x73
  43f998:	cmp	w9, #0xa
  43f99c:	b.hi	43fa6c <_obstack_memory_used@@Base+0x4274>  // b.pmore
  43f9a0:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x19808>
  43f9a4:	add	x10, x10, #0xa18
  43f9a8:	adr	x11, 43f9b8 <_obstack_memory_used@@Base+0x41c0>
  43f9ac:	ldrb	w12, [x10, x9]
  43f9b0:	add	x11, x11, x12, lsl #2
  43f9b4:	br	x11
  43f9b8:	tbnz	w20, #19, 43fbd4 <_obstack_memory_used@@Base+0x43dc>
  43f9bc:	mov	w9, #0x22                  	// #34
  43f9c0:	b	43fbcc <_obstack_memory_used@@Base+0x43d4>
  43f9c4:	cmp	w24, #0xa
  43f9c8:	b.ne	43fbd8 <_obstack_memory_used@@Base+0x43e0>  // b.any
  43f9cc:	tbnz	w20, #11, 43fa58 <_obstack_memory_used@@Base+0x4260>
  43f9d0:	b	43fa64 <_obstack_memory_used@@Base+0x426c>
  43f9d4:	tbz	w20, #13, 43fa64 <_obstack_memory_used@@Base+0x426c>
  43f9d8:	and	w8, w8, #0xffffff00
  43f9dc:	orr	w8, w8, #0x8
  43f9e0:	b	43fa60 <_obstack_memory_used@@Base+0x4268>
  43f9e4:	tbz	w20, #13, 43fa64 <_obstack_memory_used@@Base+0x426c>
  43f9e8:	mov	w9, #0x9                   	// #9
  43f9ec:	b	43fa5c <_obstack_memory_used@@Base+0x4264>
  43f9f0:	mov	w9, #0xb                   	// #11
  43f9f4:	b	43fa5c <_obstack_memory_used@@Base+0x4264>
  43f9f8:	mov	w9, #0x402                 	// #1026
  43f9fc:	tst	x20, x9
  43fa00:	b.ne	43fa64 <_obstack_memory_used@@Base+0x426c>  // b.any
  43fa04:	mov	w9, #0x12                  	// #18
  43fa08:	b	43fa5c <_obstack_memory_used@@Base+0x4264>
  43fa0c:	mov	w9, #0x5                   	// #5
  43fa10:	b	43fa5c <_obstack_memory_used@@Base+0x4264>
  43fa14:	mov	w9, #0x402                 	// #1026
  43fa18:	tst	x20, x9
  43fa1c:	b.ne	43fa64 <_obstack_memory_used@@Base+0x426c>  // b.any
  43fa20:	mov	w9, #0x13                  	// #19
  43fa24:	b	43fa5c <_obstack_memory_used@@Base+0x4264>
  43fa28:	mov	w9, #0x14                  	// #20
  43fa2c:	b	43fa5c <_obstack_memory_used@@Base+0x4264>
  43fa30:	mvn	w9, w20
  43fa34:	mov	w10, #0x1200                	// #4608
  43fa38:	tst	x9, x10
  43fa3c:	b.ne	43fa64 <_obstack_memory_used@@Base+0x426c>  // b.any
  43fa40:	mov	w9, #0x17                  	// #23
  43fa44:	b	43fa5c <_obstack_memory_used@@Base+0x4264>
  43fa48:	mov	w9, #0x8400                	// #33792
  43fa4c:	and	x9, x20, x9
  43fa50:	cmp	x9, #0x8, lsl #12
  43fa54:	b.ne	43fa64 <_obstack_memory_used@@Base+0x426c>  // b.any
  43fa58:	mov	w9, #0xa                   	// #10
  43fa5c:	bfxil	w8, w9, #0, #8
  43fa60:	str	w8, [x23]
  43fa64:	mov	w0, #0x1                   	// #1
  43fa68:	b	43fbd8 <_obstack_memory_used@@Base+0x43e0>
  43fa6c:	cmp	w10, #0x60
  43fa70:	b.eq	43fb1c <_obstack_memory_used@@Base+0x4324>  // b.none
  43fa74:	cmp	w10, #0x62
  43fa78:	b.ne	43fbd8 <_obstack_memory_used@@Base+0x43e0>  // b.any
  43fa7c:	tbnz	w20, #19, 43fbd4 <_obstack_memory_used@@Base+0x43dc>
  43fa80:	and	w8, w8, #0xffffff00
  43fa84:	mov	w9, #0x100                 	// #256
  43fa88:	b	43fbb4 <_obstack_memory_used@@Base+0x43bc>
  43fa8c:	ldr	x9, [x21, #72]
  43fa90:	cbz	x9, 43f8b4 <_obstack_memory_used@@Base+0x40bc>
  43fa94:	tbz	w20, #11, 43fa64 <_obstack_memory_used@@Base+0x426c>
  43fa98:	ldr	x10, [x21, #8]
  43fa9c:	add	x9, x9, x10
  43faa0:	ldurb	w9, [x9, #-1]
  43faa4:	cmp	w9, #0xa
  43faa8:	b.eq	43f8b4 <_obstack_memory_used@@Base+0x40bc>  // b.none
  43faac:	b	43fa64 <_obstack_memory_used@@Base+0x426c>
  43fab0:	cmp	w10, #0x57
  43fab4:	b.ne	43fbd8 <_obstack_memory_used@@Base+0x43e0>  // b.any
  43fab8:	tbnz	w20, #19, 43fbd4 <_obstack_memory_used@@Base+0x43dc>
  43fabc:	mov	w9, #0x21                  	// #33
  43fac0:	b	43fbcc <_obstack_memory_used@@Base+0x43d4>
  43fac4:	tbnz	w20, #19, 43fbd4 <_obstack_memory_used@@Base+0x43dc>
  43fac8:	and	w8, w8, #0xffffff00
  43facc:	orr	w8, w8, #0x20
  43fad0:	b	43fbd0 <_obstack_memory_used@@Base+0x43d8>
  43fad4:	mov	w9, #0x1200                	// #4608
  43fad8:	and	x9, x20, x9
  43fadc:	cmp	x9, #0x200
  43fae0:	b.ne	43fbd4 <_obstack_memory_used@@Base+0x43dc>  // b.any
  43fae4:	mov	w9, #0x17                  	// #23
  43fae8:	b	43fbcc <_obstack_memory_used@@Base+0x43d4>
  43faec:	mov	w9, #0x8400                	// #33792
  43faf0:	tst	x20, x9
  43faf4:	b.ne	43fbd4 <_obstack_memory_used@@Base+0x43dc>  // b.any
  43faf8:	mov	w9, #0xa                   	// #10
  43fafc:	b	43fbcc <_obstack_memory_used@@Base+0x43d4>
  43fb00:	mov	w9, #0x1200                	// #4608
  43fb04:	and	x9, x20, x9
  43fb08:	cmp	x9, #0x200
  43fb0c:	b.ne	43fbd4 <_obstack_memory_used@@Base+0x43dc>  // b.any
  43fb10:	and	w8, w8, #0xffffff00
  43fb14:	orr	w8, w8, #0x18
  43fb18:	b	43fbd0 <_obstack_memory_used@@Base+0x43d8>
  43fb1c:	tbnz	w20, #19, 43fbd4 <_obstack_memory_used@@Base+0x43dc>
  43fb20:	and	w8, w8, #0xffffff00
  43fb24:	mov	w9, #0x40                  	// #64
  43fb28:	b	43fbb4 <_obstack_memory_used@@Base+0x43bc>
  43fb2c:	tbnz	w20, #19, 43fbd4 <_obstack_memory_used@@Base+0x43dc>
  43fb30:	and	w8, w8, #0xffffff00
  43fb34:	mov	w9, #0x80                  	// #128
  43fb38:	b	43fbb4 <_obstack_memory_used@@Base+0x43bc>
  43fb3c:	tbnz	w20, #13, 43fbd4 <_obstack_memory_used@@Base+0x43dc>
  43fb40:	and	w8, w8, #0xffffff00
  43fb44:	orr	w8, w8, #0x8
  43fb48:	b	43fbd0 <_obstack_memory_used@@Base+0x43d8>
  43fb4c:	tbnz	w20, #13, 43fbd4 <_obstack_memory_used@@Base+0x43dc>
  43fb50:	mov	w9, #0x9                   	// #9
  43fb54:	b	43fbcc <_obstack_memory_used@@Base+0x43d4>
  43fb58:	mov	w9, #0x402                 	// #1026
  43fb5c:	and	x9, x20, x9
  43fb60:	cmp	x9, #0x2
  43fb64:	b.ne	43fbd4 <_obstack_memory_used@@Base+0x43dc>  // b.any
  43fb68:	mov	w9, #0x12                  	// #18
  43fb6c:	b	43fbcc <_obstack_memory_used@@Base+0x43d4>
  43fb70:	tbnz	w20, #19, 43fbd4 <_obstack_memory_used@@Base+0x43dc>
  43fb74:	and	w8, w8, #0xffffff00
  43fb78:	mov	w9, #0x6                   	// #6
  43fb7c:	b	43fbb4 <_obstack_memory_used@@Base+0x43bc>
  43fb80:	tbnz	w20, #19, 43fbd4 <_obstack_memory_used@@Base+0x43dc>
  43fb84:	and	w8, w8, #0xffffff00
  43fb88:	mov	w9, #0x9                   	// #9
  43fb8c:	b	43fbb4 <_obstack_memory_used@@Base+0x43bc>
  43fb90:	mov	w9, #0x402                 	// #1026
  43fb94:	and	x9, x20, x9
  43fb98:	cmp	x9, #0x2
  43fb9c:	b.ne	43fbd4 <_obstack_memory_used@@Base+0x43dc>  // b.any
  43fba0:	mov	w9, #0x13                  	// #19
  43fba4:	b	43fbcc <_obstack_memory_used@@Base+0x43d4>
  43fba8:	tbnz	w20, #19, 43fbd4 <_obstack_memory_used@@Base+0x43dc>
  43fbac:	and	w8, w8, #0xffffff00
  43fbb0:	mov	w9, #0x200                 	// #512
  43fbb4:	orr	w8, w8, #0xc
  43fbb8:	str	w9, [x19]
  43fbbc:	str	w8, [x19, #8]
  43fbc0:	b	43fbd4 <_obstack_memory_used@@Base+0x43dc>
  43fbc4:	tbnz	w20, #19, 43fbd4 <_obstack_memory_used@@Base+0x43dc>
  43fbc8:	mov	w9, #0x23                  	// #35
  43fbcc:	bfxil	w8, w9, #0, #8
  43fbd0:	str	w8, [x23]
  43fbd4:	mov	w0, #0x2                   	// #2
  43fbd8:	ldp	x20, x19, [sp, #64]
  43fbdc:	ldp	x22, x21, [sp, #48]
  43fbe0:	ldp	x24, x23, [sp, #32]
  43fbe4:	ldp	x29, x30, [sp, #16]
  43fbe8:	add	sp, sp, #0x50
  43fbec:	ret
  43fbf0:	cmp	w11, #0x2
  43fbf4:	b.lt	43fc24 <_obstack_memory_used@@Base+0x442c>  // b.tstop
  43fbf8:	ldr	x11, [x21, #16]
  43fbfc:	ldr	w13, [x11, x10, lsl #2]
  43fc00:	cmn	w13, #0x1
  43fc04:	b.eq	43f6f8 <_obstack_memory_used@@Base+0x3f00>  // b.none
  43fc08:	ldr	x13, [x21, #48]
  43fc0c:	add	x12, x12, #0x2
  43fc10:	cmp	x13, x12
  43fc14:	b.eq	43fc24 <_obstack_memory_used@@Base+0x442c>  // b.none
  43fc18:	ldr	w11, [x11, x12, lsl #2]
  43fc1c:	cmn	w11, #0x1
  43fc20:	b.eq	43f6f8 <_obstack_memory_used@@Base+0x3f00>  // b.none
  43fc24:	ldrb	w11, [x21, #140]
  43fc28:	mov	x12, x10
  43fc2c:	cbz	w11, 43fc38 <_obstack_memory_used@@Base+0x4440>
  43fc30:	ldr	x12, [x21, #24]
  43fc34:	ldr	x12, [x12, x10, lsl #3]
  43fc38:	ldr	x13, [x21, #40]
  43fc3c:	ldr	x14, [x21]
  43fc40:	add	x12, x13, x12
  43fc44:	ldrsb	w22, [x14, x12]
  43fc48:	cbz	w11, 43f700 <_obstack_memory_used@@Base+0x3f08>
  43fc4c:	tbnz	w22, #31, 43f6f8 <_obstack_memory_used@@Base+0x3f00>
  43fc50:	b	43f700 <_obstack_memory_used@@Base+0x3f08>
  43fc54:	sub	sp, sp, #0x70
  43fc58:	stp	x29, x30, [sp, #16]
  43fc5c:	stp	x28, x27, [sp, #32]
  43fc60:	stp	x26, x25, [sp, #48]
  43fc64:	stp	x24, x23, [sp, #64]
  43fc68:	stp	x22, x21, [sp, #80]
  43fc6c:	stp	x20, x19, [sp, #96]
  43fc70:	ldr	x25, [x1]
  43fc74:	add	x29, sp, #0x10
  43fc78:	mov	x19, x5
  43fc7c:	mov	x21, x4
  43fc80:	mov	x22, x3
  43fc84:	mov	x23, x2
  43fc88:	mov	x24, x1
  43fc8c:	mov	x26, x0
  43fc90:	bl	43fe90 <_obstack_memory_used@@Base+0x4698>
  43fc94:	cbnz	x0, 43fca0 <_obstack_memory_used@@Base+0x44a8>
  43fc98:	ldr	w8, [x19]
  43fc9c:	cbnz	w8, 43fe18 <_obstack_memory_used@@Base+0x4620>
  43fca0:	mov	w28, #0x10                  	// #16
  43fca4:	ldrb	w8, [x23, #8]
  43fca8:	mov	x20, x0
  43fcac:	orr	w9, w8, #0x8
  43fcb0:	cmp	w9, #0xa
  43fcb4:	b.eq	43fdb0 <_obstack_memory_used@@Base+0x45b8>  // b.none
  43fcb8:	cbz	x21, 43fcc4 <_obstack_memory_used@@Base+0x44cc>
  43fcbc:	cmp	w8, #0x9
  43fcc0:	b.eq	43fdb0 <_obstack_memory_used@@Base+0x45b8>  // b.none
  43fcc4:	mov	x0, x26
  43fcc8:	mov	x1, x24
  43fccc:	mov	x2, x23
  43fcd0:	mov	x3, x22
  43fcd4:	mov	x4, x21
  43fcd8:	mov	x5, x19
  43fcdc:	bl	43fe90 <_obstack_memory_used@@Base+0x4698>
  43fce0:	mov	x27, x0
  43fce4:	cbnz	x0, 43fcf0 <_obstack_memory_used@@Base+0x44f8>
  43fce8:	ldr	w8, [x19]
  43fcec:	cbnz	w8, 43fdd4 <_obstack_memory_used@@Base+0x45dc>
  43fcf0:	cbz	x20, 43fd18 <_obstack_memory_used@@Base+0x4520>
  43fcf4:	cbz	x27, 43fd18 <_obstack_memory_used@@Base+0x4520>
  43fcf8:	mov	x3, sp
  43fcfc:	mov	x0, x25
  43fd00:	mov	x1, x20
  43fd04:	mov	x2, x27
  43fd08:	str	w28, [sp, #8]
  43fd0c:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  43fd10:	cbnz	x0, 43fca4 <_obstack_memory_used@@Base+0x44ac>
  43fd14:	b	43fd24 <_obstack_memory_used@@Base+0x452c>
  43fd18:	cmp	x20, #0x0
  43fd1c:	csel	x0, x27, x20, eq  // eq = none
  43fd20:	b	43fca4 <_obstack_memory_used@@Base+0x44ac>
  43fd24:	mov	x21, x27
  43fd28:	ldr	x27, [x27, #8]
  43fd2c:	cbnz	x27, 43fd24 <_obstack_memory_used@@Base+0x452c>
  43fd30:	ldr	x27, [x21, #16]
  43fd34:	cbnz	x27, 43fd24 <_obstack_memory_used@@Base+0x452c>
  43fd38:	add	x0, x21, #0x28
  43fd3c:	bl	43eaf4 <_obstack_memory_used@@Base+0x32fc>
  43fd40:	ldr	x8, [x21]
  43fd44:	cbz	x8, 43fd64 <_obstack_memory_used@@Base+0x456c>
  43fd48:	ldr	x27, [x8, #16]
  43fd4c:	cmp	x27, x21
  43fd50:	mov	x21, x8
  43fd54:	b.eq	43fd38 <_obstack_memory_used@@Base+0x4540>  // b.none
  43fd58:	mov	x21, x8
  43fd5c:	cbz	x27, 43fd38 <_obstack_memory_used@@Base+0x4540>
  43fd60:	b	43fd24 <_obstack_memory_used@@Base+0x452c>
  43fd64:	mov	x21, x20
  43fd68:	ldr	x20, [x20, #8]
  43fd6c:	cbnz	x20, 43fd64 <_obstack_memory_used@@Base+0x456c>
  43fd70:	ldr	x20, [x21, #16]
  43fd74:	cbnz	x20, 43fd64 <_obstack_memory_used@@Base+0x456c>
  43fd78:	add	x0, x21, #0x28
  43fd7c:	bl	43eaf4 <_obstack_memory_used@@Base+0x32fc>
  43fd80:	ldr	x8, [x21]
  43fd84:	cbz	x8, 43fda4 <_obstack_memory_used@@Base+0x45ac>
  43fd88:	ldr	x20, [x8, #16]
  43fd8c:	cmp	x20, x21
  43fd90:	mov	x21, x8
  43fd94:	b.eq	43fd78 <_obstack_memory_used@@Base+0x4580>  // b.none
  43fd98:	mov	x21, x8
  43fd9c:	cbz	x20, 43fd78 <_obstack_memory_used@@Base+0x4580>
  43fda0:	b	43fd64 <_obstack_memory_used@@Base+0x456c>
  43fda4:	mov	x20, xzr
  43fda8:	mov	w8, #0xc                   	// #12
  43fdac:	str	w8, [x19]
  43fdb0:	mov	x0, x20
  43fdb4:	ldp	x20, x19, [sp, #96]
  43fdb8:	ldp	x22, x21, [sp, #80]
  43fdbc:	ldp	x24, x23, [sp, #64]
  43fdc0:	ldp	x26, x25, [sp, #48]
  43fdc4:	ldp	x28, x27, [sp, #32]
  43fdc8:	ldp	x29, x30, [sp, #16]
  43fdcc:	add	sp, sp, #0x70
  43fdd0:	ret
  43fdd4:	cbz	x20, 43fdb0 <_obstack_memory_used@@Base+0x45b8>
  43fdd8:	mov	x19, x20
  43fddc:	ldr	x20, [x20, #8]
  43fde0:	cbnz	x20, 43fdd8 <_obstack_memory_used@@Base+0x45e0>
  43fde4:	ldr	x20, [x19, #16]
  43fde8:	cbnz	x20, 43fdd8 <_obstack_memory_used@@Base+0x45e0>
  43fdec:	add	x0, x19, #0x28
  43fdf0:	bl	43eaf4 <_obstack_memory_used@@Base+0x32fc>
  43fdf4:	ldr	x8, [x19]
  43fdf8:	cbz	x8, 43fe18 <_obstack_memory_used@@Base+0x4620>
  43fdfc:	ldr	x20, [x8, #16]
  43fe00:	cmp	x20, x19
  43fe04:	mov	x19, x8
  43fe08:	b.eq	43fdec <_obstack_memory_used@@Base+0x45f4>  // b.none
  43fe0c:	mov	x19, x8
  43fe10:	cbz	x20, 43fdec <_obstack_memory_used@@Base+0x45f4>
  43fe14:	b	43fdd8 <_obstack_memory_used@@Base+0x45e0>
  43fe18:	mov	x20, xzr
  43fe1c:	b	43fdb0 <_obstack_memory_used@@Base+0x45b8>
  43fe20:	stp	x29, x30, [sp, #-48]!
  43fe24:	stp	x20, x19, [sp, #32]
  43fe28:	mov	x19, x2
  43fe2c:	mov	x20, x1
  43fe30:	str	x21, [sp, #16]
  43fe34:	mov	x29, sp
  43fe38:	mov	x21, x0
  43fe3c:	ldr	x0, [x0, #8]
  43fe40:	cbnz	x0, 43fe38 <_obstack_memory_used@@Base+0x4640>
  43fe44:	ldr	x0, [x21, #16]
  43fe48:	cbnz	x0, 43fe38 <_obstack_memory_used@@Base+0x4640>
  43fe4c:	mov	x0, x19
  43fe50:	mov	x1, x21
  43fe54:	blr	x20
  43fe58:	cbnz	w0, 43fe80 <_obstack_memory_used@@Base+0x4688>
  43fe5c:	ldr	x8, [x21]
  43fe60:	cbz	x8, 43fe80 <_obstack_memory_used@@Base+0x4688>
  43fe64:	ldr	x0, [x8, #16]
  43fe68:	cmp	x0, x21
  43fe6c:	mov	x21, x8
  43fe70:	b.eq	43fe4c <_obstack_memory_used@@Base+0x4654>  // b.none
  43fe74:	mov	x21, x8
  43fe78:	cbz	x0, 43fe4c <_obstack_memory_used@@Base+0x4654>
  43fe7c:	b	43fe38 <_obstack_memory_used@@Base+0x4640>
  43fe80:	ldp	x20, x19, [sp, #32]
  43fe84:	ldr	x21, [sp, #16]
  43fe88:	ldp	x29, x30, [sp], #48
  43fe8c:	ret
  43fe90:	sub	sp, sp, #0x120
  43fe94:	stp	x29, x30, [sp, #192]
  43fe98:	stp	x28, x27, [sp, #208]
  43fe9c:	stp	x26, x25, [sp, #224]
  43fea0:	stp	x24, x23, [sp, #240]
  43fea4:	stp	x22, x21, [sp, #256]
  43fea8:	stp	x20, x19, [sp, #272]
  43feac:	ldr	w8, [x2, #8]
  43feb0:	mov	x19, xzr
  43feb4:	add	x29, sp, #0xc0
  43feb8:	str	x3, [sp, #56]
  43febc:	and	w9, w8, #0xff
  43fec0:	sub	w9, w9, #0x1
  43fec4:	cmp	w9, #0x23
  43fec8:	b.hi	440e0c <_obstack_memory_used@@Base+0x5614>  // b.pmore
  43fecc:	ldr	x23, [x1]
  43fed0:	adrp	x10, 455000 <_obstack_memory_used@@Base+0x19808>
  43fed4:	add	x10, x10, #0xa24
  43fed8:	adr	x11, 43ff00 <_obstack_memory_used@@Base+0x4708>
  43fedc:	ldrh	w12, [x10, x9, lsl #1]
  43fee0:	add	x11, x11, x12, lsl #2
  43fee4:	mov	x20, x5
  43fee8:	mov	x25, x4
  43feec:	mov	x22, x2
  43fef0:	mov	x26, x1
  43fef4:	mov	x28, x0
  43fef8:	str	x0, [sp, #48]
  43fefc:	br	x11
  43ff00:	ldr	x9, [sp, #56]
  43ff04:	tbnz	w9, #5, 440e00 <_obstack_memory_used@@Base+0x5608>
  43ff08:	tbnz	w9, #4, 440264 <_obstack_memory_used@@Base+0x4a6c>
  43ff0c:	ldr	x9, [sp, #56]
  43ff10:	tbnz	w9, #17, 43ff98 <_obstack_memory_used@@Base+0x47a0>
  43ff14:	and	w9, w8, #0xff
  43ff18:	cmp	w9, #0x9
  43ff1c:	b.ne	43ff98 <_obstack_memory_used@@Base+0x47a0>  // b.any
  43ff20:	mov	x19, xzr
  43ff24:	mov	w8, #0x10                  	// #16
  43ff28:	b	440e08 <_obstack_memory_used@@Base+0x5610>
  43ff2c:	ldr	x1, [x28, #120]
  43ff30:	and	w8, w8, #0xff
  43ff34:	cmp	w8, #0x23
  43ff38:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x19808>
  43ff3c:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x16808>
  43ff40:	cset	w4, eq  // eq = none
  43ff44:	add	x2, x2, #0xce8
  43ff48:	add	x3, x3, #0x3ee
  43ff4c:	b	43ff70 <_obstack_memory_used@@Base+0x4778>
  43ff50:	ldr	x1, [x28, #120]
  43ff54:	and	w8, w8, #0xff
  43ff58:	cmp	w8, #0x21
  43ff5c:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x19808>
  43ff60:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  43ff64:	cset	w4, eq  // eq = none
  43ff68:	add	x2, x2, #0xce0
  43ff6c:	add	x3, x3, #0xce6
  43ff70:	mov	x0, x23
  43ff74:	mov	x5, x20
  43ff78:	bl	441120 <_obstack_memory_used@@Base+0x5928>
  43ff7c:	mov	x19, x0
  43ff80:	str	x20, [sp, #40]
  43ff84:	cbnz	x0, 4408a0 <_obstack_memory_used@@Base+0x50a8>
  43ff88:	ldr	w8, [x20]
  43ff8c:	ldr	x25, [sp, #56]
  43ff90:	cbz	w8, 4409b0 <_obstack_memory_used@@Base+0x51b8>
  43ff94:	b	4402e4 <_obstack_memory_used@@Base+0x4aec>
  43ff98:	and	w8, w8, #0xffffff00
  43ff9c:	orr	w8, w8, #0x1
  43ffa0:	mov	x0, x23
  43ffa4:	mov	x1, xzr
  43ffa8:	mov	x2, xzr
  43ffac:	mov	x3, x22
  43ffb0:	str	x20, [sp, #40]
  43ffb4:	str	w8, [x22, #8]
  43ffb8:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  43ffbc:	ldr	x25, [sp, #56]
  43ffc0:	mov	x19, x0
  43ffc4:	cbnz	x0, 4409b0 <_obstack_memory_used@@Base+0x51b8>
  43ffc8:	b	440140 <_obstack_memory_used@@Base+0x4948>
  43ffcc:	ldr	x9, [sp, #56]
  43ffd0:	tbnz	w9, #24, 440e00 <_obstack_memory_used@@Base+0x5608>
  43ffd4:	b	43ff00 <_obstack_memory_used@@Base+0x4708>
  43ffd8:	ldr	w8, [x22]
  43ffdc:	ldr	x9, [x23, #168]
  43ffe0:	mov	w10, #0x1                   	// #1
  43ffe4:	lsl	w8, w10, w8
  43ffe8:	sxtw	x8, w8
  43ffec:	tst	x9, x8
  43fff0:	b.eq	440f30 <_obstack_memory_used@@Base+0x5738>  // b.none
  43fff4:	ldr	x9, [x23, #160]
  43fff8:	mov	x0, x23
  43fffc:	mov	x1, xzr
  440000:	mov	x2, xzr
  440004:	orr	x8, x9, x8
  440008:	mov	x3, x22
  44000c:	str	x20, [sp, #40]
  440010:	str	x8, [x23, #160]
  440014:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  440018:	ldr	x25, [sp, #56]
  44001c:	mov	x19, x0
  440020:	cbz	x0, 440140 <_obstack_memory_used@@Base+0x4948>
  440024:	ldr	x8, [x23, #152]
  440028:	ldrb	w9, [x23, #176]
  44002c:	add	x8, x8, #0x1
  440030:	orr	w9, w9, #0x2
  440034:	str	x8, [x23, #152]
  440038:	strb	w9, [x23, #176]
  44003c:	b	4409b0 <_obstack_memory_used@@Base+0x51b8>
  440040:	str	x20, [sp, #40]
  440044:	ldr	x20, [x26, #48]
  440048:	ldr	x21, [sp, #56]
  44004c:	mov	x0, x22
  440050:	mov	x1, x28
  440054:	add	x8, x20, #0x1
  440058:	orr	x2, x21, #0x800000
  44005c:	str	x8, [x26, #48]
  440060:	bl	43f650 <_obstack_memory_used@@Base+0x3e58>
  440064:	ldr	x8, [x28, #72]
  440068:	add	x8, x8, w0, sxtw
  44006c:	str	x8, [x28, #72]
  440070:	ldrb	w8, [x22, #8]
  440074:	cmp	w8, #0x9
  440078:	b.ne	4402bc <_obstack_memory_used@@Base+0x4ac4>  // b.any
  44007c:	mov	x1, xzr
  440080:	b	440968 <_obstack_memory_used@@Base+0x5170>
  440084:	mov	x0, x23
  440088:	mov	x1, xzr
  44008c:	mov	x2, xzr
  440090:	mov	x3, x22
  440094:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  440098:	mov	x19, x0
  44009c:	cbz	x0, 440ef4 <_obstack_memory_used@@Base+0x56fc>
  4400a0:	ldr	w8, [x23, #180]
  4400a4:	ldr	x25, [sp, #56]
  4400a8:	str	x20, [sp, #40]
  4400ac:	cmp	w8, #0x2
  4400b0:	b.lt	4409b0 <_obstack_memory_used@@Base+0x51b8>  // b.tstop
  4400b4:	mov	w20, #0x10                  	// #16
  4400b8:	ldr	x9, [x28, #104]
  4400bc:	ldr	x8, [x28, #72]
  4400c0:	cmp	x9, x8
  4400c4:	b.le	4409b0 <_obstack_memory_used@@Base+0x51b8>
  4400c8:	ldr	x9, [x28, #48]
  4400cc:	cmp	x8, x9
  4400d0:	b.eq	4409b0 <_obstack_memory_used@@Base+0x51b8>  // b.none
  4400d4:	ldr	x9, [x28, #16]
  4400d8:	ldr	w8, [x9, x8, lsl #2]
  4400dc:	cmn	w8, #0x1
  4400e0:	b.ne	4409b0 <_obstack_memory_used@@Base+0x51b8>  // b.any
  4400e4:	mov	x0, x22
  4400e8:	mov	x1, x28
  4400ec:	mov	x2, x25
  4400f0:	bl	43f650 <_obstack_memory_used@@Base+0x3e58>
  4400f4:	ldr	x8, [x28, #72]
  4400f8:	mov	x1, xzr
  4400fc:	mov	x2, xzr
  440100:	mov	x3, x22
  440104:	add	x8, x8, w0, sxtw
  440108:	mov	x0, x23
  44010c:	str	x8, [x28, #72]
  440110:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  440114:	mov	x24, x0
  440118:	sub	x3, x29, #0x50
  44011c:	mov	x0, x23
  440120:	mov	x1, x19
  440124:	mov	x2, x24
  440128:	stur	w20, [x29, #-72]
  44012c:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  440130:	cbz	x24, 44013c <_obstack_memory_used@@Base+0x4944>
  440134:	mov	x19, x0
  440138:	cbnz	x0, 4400b8 <_obstack_memory_used@@Base+0x48c0>
  44013c:	mov	x19, xzr
  440140:	mov	w8, #0xc                   	// #12
  440144:	ldr	x9, [sp, #40]
  440148:	str	w8, [x9]
  44014c:	b	440e0c <_obstack_memory_used@@Base+0x5614>
  440150:	mov	x0, x23
  440154:	mov	x1, xzr
  440158:	mov	x2, xzr
  44015c:	mov	x3, x22
  440160:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  440164:	mov	x19, x0
  440168:	cbz	x0, 440ef4 <_obstack_memory_used@@Base+0x56fc>
  44016c:	ldr	w8, [x23, #180]
  440170:	ldr	x25, [sp, #56]
  440174:	str	x20, [sp, #40]
  440178:	cmp	w8, #0x2
  44017c:	b.lt	4409b0 <_obstack_memory_used@@Base+0x51b8>  // b.tstop
  440180:	ldrb	w8, [x23, #176]
  440184:	orr	w8, w8, #0x2
  440188:	strb	w8, [x23, #176]
  44018c:	b	4409b0 <_obstack_memory_used@@Base+0x51b8>
  440190:	ldr	w8, [x22]
  440194:	mov	w9, #0x30f                 	// #783
  440198:	tst	w8, w9
  44019c:	b.eq	4401d4 <_obstack_memory_used@@Base+0x49dc>  // b.none
  4401a0:	ldrb	w8, [x23, #176]
  4401a4:	mov	x21, x20
  4401a8:	tbnz	w8, #4, 4401cc <_obstack_memory_used@@Base+0x49d4>
  4401ac:	orr	w9, w8, #0x10
  4401b0:	strb	w9, [x23, #176]
  4401b4:	tbnz	w8, #3, 440f5c <_obstack_memory_used@@Base+0x5764>
  4401b8:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x19808>
  4401bc:	ldr	q0, [x9, #3280]
  4401c0:	stur	q0, [x23, #184]
  4401c4:	tbz	w8, #2, 440f68 <_obstack_memory_used@@Base+0x5770>
  4401c8:	stp	xzr, xzr, [x23, #200]
  4401cc:	ldr	w8, [x22]
  4401d0:	mov	x20, x21
  4401d4:	cmp	w8, #0x100
  4401d8:	b.eq	4408a8 <_obstack_memory_used@@Base+0x50b0>  // b.none
  4401dc:	cmp	w8, #0x200
  4401e0:	b.ne	44091c <_obstack_memory_used@@Base+0x5124>  // b.any
  4401e4:	mov	w19, #0xa                   	// #10
  4401e8:	mov	w8, #0x5                   	// #5
  4401ec:	b	4408b0 <_obstack_memory_used@@Base+0x50b8>
  4401f0:	mov	x19, xzr
  4401f4:	mov	w8, #0x5                   	// #5
  4401f8:	b	440e08 <_obstack_memory_used@@Base+0x5610>
  4401fc:	mov	w0, #0x20                  	// #32
  440200:	mov	w1, #0x1                   	// #1
  440204:	stur	xzr, [x29, #-16]
  440208:	bl	404680 <calloc@plt>
  44020c:	mov	x25, x0
  440210:	mov	w0, #0x50                  	// #80
  440214:	mov	w1, #0x1                   	// #1
  440218:	bl	404680 <calloc@plt>
  44021c:	mov	x27, x0
  440220:	str	x20, [sp, #40]
  440224:	cbz	x25, 440f3c <_obstack_memory_used@@Base+0x5744>
  440228:	cbz	x27, 440f3c <_obstack_memory_used@@Base+0x5744>
  44022c:	ldr	x19, [sp, #56]
  440230:	mov	x0, x22
  440234:	mov	x1, x28
  440238:	mov	x2, x19
  44023c:	bl	441318 <_obstack_memory_used@@Base+0x5b20>
  440240:	ldr	w8, [x22, #8]
  440244:	mov	w3, w0
  440248:	and	w9, w8, #0xff
  44024c:	cmp	w9, #0x19
  440250:	b.eq	4402ec <_obstack_memory_used@@Base+0x4af4>  // b.none
  440254:	cmp	w9, #0x2
  440258:	b.eq	440f04 <_obstack_memory_used@@Base+0x570c>  // b.none
  44025c:	str	wzr, [sp, #36]
  440260:	b	440340 <_obstack_memory_used@@Base+0x4b48>
  440264:	ldr	x19, [sp, #56]
  440268:	mov	x0, x22
  44026c:	mov	x1, x28
  440270:	mov	x2, x19
  440274:	bl	43f650 <_obstack_memory_used@@Base+0x3e58>
  440278:	ldr	x8, [x28, #72]
  44027c:	mov	x1, x26
  440280:	mov	x2, x22
  440284:	mov	x3, x19
  440288:	add	x8, x8, w0, sxtw
  44028c:	str	x8, [x28, #72]
  440290:	mov	x0, x28
  440294:	mov	x4, x25
  440298:	mov	x5, x20
  44029c:	ldp	x20, x19, [sp, #272]
  4402a0:	ldp	x22, x21, [sp, #256]
  4402a4:	ldp	x24, x23, [sp, #240]
  4402a8:	ldp	x26, x25, [sp, #224]
  4402ac:	ldp	x28, x27, [sp, #208]
  4402b0:	ldp	x29, x30, [sp, #192]
  4402b4:	add	sp, sp, #0x120
  4402b8:	b	43fe90 <_obstack_memory_used@@Base+0x4698>
  4402bc:	ldr	x19, [sp, #40]
  4402c0:	add	x4, x25, #0x1
  4402c4:	mov	x0, x28
  4402c8:	mov	x1, x26
  4402cc:	mov	x2, x22
  4402d0:	mov	x3, x21
  4402d4:	mov	x5, x19
  4402d8:	bl	43f4cc <_obstack_memory_used@@Base+0x3cd4>
  4402dc:	ldr	w8, [x19]
  4402e0:	cbz	w8, 440958 <_obstack_memory_used@@Base+0x5160>
  4402e4:	mov	x19, xzr
  4402e8:	b	440e0c <_obstack_memory_used@@Base+0x5614>
  4402ec:	ldrb	w8, [x27, #32]
  4402f0:	orr	w8, w8, #0x1
  4402f4:	strb	w8, [x27, #32]
  4402f8:	tbz	w19, #8, 440308 <_obstack_memory_used@@Base+0x4b10>
  4402fc:	ldr	x8, [x25]
  440300:	orr	x8, x8, #0x400
  440304:	str	x8, [x25]
  440308:	ldr	x8, [x28, #72]
  44030c:	ldr	x2, [sp, #56]
  440310:	mov	x0, x22
  440314:	mov	x1, x28
  440318:	add	x8, x8, w3, sxtw
  44031c:	str	x8, [x28, #72]
  440320:	bl	441318 <_obstack_memory_used@@Base+0x5b20>
  440324:	ldr	w8, [x22, #8]
  440328:	and	w9, w8, #0xff
  44032c:	cmp	w9, #0x2
  440330:	b.eq	440f04 <_obstack_memory_used@@Base+0x570c>  // b.none
  440334:	mov	w3, w0
  440338:	mov	w9, #0x1                   	// #1
  44033c:	str	w9, [sp, #36]
  440340:	and	w9, w8, #0xff
  440344:	cmp	w9, #0x15
  440348:	b.ne	440358 <_obstack_memory_used@@Base+0x4b60>  // b.any
  44034c:	and	w8, w8, #0xffffff00
  440350:	orr	w8, w8, #0x1
  440354:	str	w8, [x22, #8]
  440358:	ldr	x4, [sp, #56]
  44035c:	sub	x21, x29, #0x50
  440360:	mov	w8, #0x3                   	// #3
  440364:	sub	x0, x29, #0x20
  440368:	mov	w5, #0x1                   	// #1
  44036c:	mov	x1, x28
  440370:	mov	x2, x22
  440374:	stur	x21, [x29, #-24]
  440378:	stur	w8, [x29, #-32]
  44037c:	mov	w26, #0x1                   	// #1
  440380:	bl	441474 <_obstack_memory_used@@Base+0x5c7c>
  440384:	cbnz	w0, 440f10 <_obstack_memory_used@@Base+0x5718>
  440388:	ldr	x19, [sp, #56]
  44038c:	stp	xzr, xzr, [sp, #16]
  440390:	mov	x0, x22
  440394:	mov	x1, x28
  440398:	mov	x2, x19
  44039c:	bl	441318 <_obstack_memory_used@@Base+0x5b20>
  4403a0:	ldur	w19, [x29, #-32]
  4403a4:	mov	w24, w0
  4403a8:	cmp	w19, #0x2
  4403ac:	b.eq	440518 <_obstack_memory_used@@Base+0x4d20>  // b.none
  4403b0:	cmp	w19, #0x4
  4403b4:	b.ne	4403e0 <_obstack_memory_used@@Base+0x4be8>  // b.any
  4403b8:	ldr	x0, [x28, #120]
  4403bc:	ldur	x4, [x29, #-24]
  4403c0:	ldr	x5, [sp, #56]
  4403c4:	sub	x3, x29, #0x10
  4403c8:	mov	x1, x25
  4403cc:	mov	x2, x27
  4403d0:	bl	441718 <_obstack_memory_used@@Base+0x5f20>
  4403d4:	str	w0, [x20]
  4403d8:	cbz	w0, 44054c <_obstack_memory_used@@Base+0x4d54>
  4403dc:	b	440f18 <_obstack_memory_used@@Base+0x5720>
  4403e0:	ldrb	w8, [x22, #8]
  4403e4:	cmp	w8, #0x16
  4403e8:	b.eq	4403f8 <_obstack_memory_used@@Base+0x4c00>  // b.none
  4403ec:	cmp	w8, #0x2
  4403f0:	b.ne	4404f0 <_obstack_memory_used@@Base+0x4cf8>  // b.any
  4403f4:	b	440efc <_obstack_memory_used@@Base+0x5704>
  4403f8:	ldr	x8, [x28, #72]
  4403fc:	ldr	x2, [sp, #56]
  440400:	add	x0, sp, #0x40
  440404:	mov	x1, x28
  440408:	add	x8, x8, w24, sxtw
  44040c:	str	x8, [x28, #72]
  440410:	bl	441318 <_obstack_memory_used@@Base+0x5b20>
  440414:	ldrb	w8, [sp, #72]
  440418:	cmp	w8, #0x15
  44041c:	b.eq	4404d8 <_obstack_memory_used@@Base+0x4ce0>  // b.none
  440420:	cmp	w8, #0x2
  440424:	b.eq	440efc <_obstack_memory_used@@Base+0x5704>  // b.none
  440428:	ldr	x20, [sp, #56]
  44042c:	add	x8, sp, #0x50
  440430:	mov	w3, w0
  440434:	stur	x8, [x29, #-40]
  440438:	mov	w8, #0x3                   	// #3
  44043c:	sub	x0, x29, #0x30
  440440:	add	x2, sp, #0x40
  440444:	mov	w5, #0x1                   	// #1
  440448:	mov	x1, x28
  44044c:	mov	x4, x20
  440450:	stur	w8, [x29, #-48]
  440454:	bl	441474 <_obstack_memory_used@@Base+0x5c7c>
  440458:	cbnz	w0, 440f10 <_obstack_memory_used@@Base+0x5718>
  44045c:	mov	x0, x22
  440460:	mov	x1, x28
  440464:	mov	x2, x20
  440468:	bl	441318 <_obstack_memory_used@@Base+0x5b20>
  44046c:	ldr	w8, [x23, #180]
  440470:	ldur	w21, [x29, #-48]
  440474:	mov	w24, w0
  440478:	mov	w0, #0xb                   	// #11
  44047c:	cmp	w8, #0x1
  440480:	csel	x20, x27, xzr, gt
  440484:	cmp	w21, #0x2
  440488:	b.eq	440f10 <_obstack_memory_used@@Base+0x5718>  // b.none
  44048c:	cmp	w21, #0x4
  440490:	b.eq	440f10 <_obstack_memory_used@@Base+0x5718>  // b.none
  440494:	cmp	w19, #0x3
  440498:	b.ne	4404ac <_obstack_memory_used@@Base+0x4cb4>  // b.any
  44049c:	ldur	x0, [x29, #-24]
  4404a0:	bl	404170 <strlen@plt>
  4404a4:	cmp	x0, #0x1
  4404a8:	b.hi	440f0c <_obstack_memory_used@@Base+0x5714>  // b.pmore
  4404ac:	cmp	w21, #0x3
  4404b0:	b.ne	4404c4 <_obstack_memory_used@@Base+0x4ccc>  // b.any
  4404b4:	ldur	x0, [x29, #-40]
  4404b8:	bl	404170 <strlen@plt>
  4404bc:	cmp	x0, #0x1
  4404c0:	b.hi	440f0c <_obstack_memory_used@@Base+0x5714>  // b.pmore
  4404c4:	cmp	w19, #0x3
  4404c8:	b.eq	4405dc <_obstack_memory_used@@Base+0x4de4>  // b.none
  4404cc:	cbnz	w19, 4405e8 <_obstack_memory_used@@Base+0x4df0>
  4404d0:	ldurb	w26, [x29, #-24]
  4404d4:	b	4405ec <_obstack_memory_used@@Base+0x4df4>
  4404d8:	ldr	x8, [x28, #72]
  4404dc:	neg	w9, w24
  4404e0:	add	x8, x8, w9, sxtw
  4404e4:	str	x8, [x28, #72]
  4404e8:	mov	w8, #0x1                   	// #1
  4404ec:	strb	w8, [x22, #8]
  4404f0:	mov	w26, #0x1                   	// #1
  4404f4:	cmp	w19, #0x3
  4404f8:	b.hi	441054 <_obstack_memory_used@@Base+0x585c>  // b.pmore
  4404fc:	adrp	x11, 455000 <_obstack_memory_used@@Base+0x19808>
  440500:	mov	w8, w19
  440504:	add	x11, x11, #0xa6c
  440508:	adr	x9, 440518 <_obstack_memory_used@@Base+0x4d20>
  44050c:	ldrb	w10, [x11, x8]
  440510:	add	x9, x9, x10, lsl #2
  440514:	br	x9
  440518:	ldur	x19, [x29, #-24]
  44051c:	mov	x0, x19
  440520:	bl	404170 <strlen@plt>
  440524:	cmp	x0, #0x1
  440528:	b.ne	440f0c <_obstack_memory_used@@Base+0x5714>  // b.any
  44052c:	ldrb	w8, [x19]
  440530:	lsr	x9, x8, #3
  440534:	and	x9, x9, #0x18
  440538:	ldr	x10, [x25, x9]
  44053c:	lsl	x8, x26, x8
  440540:	orr	x8, x8, x10
  440544:	str	x8, [x25, x9]
  440548:	str	wzr, [x20]
  44054c:	ldrb	w8, [x22, #8]
  440550:	cmp	w8, #0x15
  440554:	b.eq	440788 <_obstack_memory_used@@Base+0x4f90>  // b.none
  440558:	cmp	w8, #0x2
  44055c:	b.eq	440efc <_obstack_memory_used@@Base+0x5704>  // b.none
  440560:	ldr	x19, [sp, #56]
  440564:	mov	w8, #0x3                   	// #3
  440568:	sub	x0, x29, #0x20
  44056c:	mov	x1, x28
  440570:	mov	x2, x22
  440574:	mov	w3, w24
  440578:	mov	x4, x19
  44057c:	mov	w5, wzr
  440580:	stur	x21, [x29, #-24]
  440584:	stur	w8, [x29, #-32]
  440588:	bl	441474 <_obstack_memory_used@@Base+0x5c7c>
  44058c:	cbz	w0, 440390 <_obstack_memory_used@@Base+0x4b98>
  440590:	b	440f10 <_obstack_memory_used@@Base+0x5718>
  440594:	ldurb	w8, [x29, #-24]
  440598:	lsr	x9, x8, #3
  44059c:	and	x9, x9, #0x18
  4405a0:	ldr	x10, [x25, x9]
  4405a4:	lsl	x8, x26, x8
  4405a8:	orr	x8, x8, x10
  4405ac:	str	x8, [x25, x9]
  4405b0:	b	44054c <_obstack_memory_used@@Base+0x4d54>
  4405b4:	ldr	x8, [x27, #40]
  4405b8:	ldr	x9, [sp, #24]
  4405bc:	cmp	x9, x8
  4405c0:	b.eq	4406f8 <_obstack_memory_used@@Base+0x4f00>  // b.none
  4405c4:	ldr	x0, [x27]
  4405c8:	ldur	w9, [x29, #-24]
  4405cc:	add	x10, x8, #0x1
  4405d0:	str	x10, [x27, #40]
  4405d4:	str	w9, [x0, x8, lsl #2]
  4405d8:	b	44054c <_obstack_memory_used@@Base+0x4d54>
  4405dc:	ldur	x8, [x29, #-24]
  4405e0:	ldrb	w26, [x8]
  4405e4:	b	4405ec <_obstack_memory_used@@Base+0x4df4>
  4405e8:	mov	w26, wzr
  4405ec:	cmp	w21, #0x3
  4405f0:	b.eq	440600 <_obstack_memory_used@@Base+0x4e08>  // b.none
  4405f4:	cbnz	w21, 44060c <_obstack_memory_used@@Base+0x4e14>
  4405f8:	ldurb	w28, [x29, #-40]
  4405fc:	b	440610 <_obstack_memory_used@@Base+0x4e18>
  440600:	ldur	x8, [x29, #-40]
  440604:	ldrb	w28, [x8]
  440608:	b	440610 <_obstack_memory_used@@Base+0x4e18>
  44060c:	mov	w28, wzr
  440610:	cmp	w19, #0x3
  440614:	b.eq	44061c <_obstack_memory_used@@Base+0x4e24>  // b.none
  440618:	cbnz	w19, 440630 <_obstack_memory_used@@Base+0x4e38>
  44061c:	cbz	x20, 440634 <_obstack_memory_used@@Base+0x4e3c>
  440620:	mov	w0, w26
  440624:	bl	404830 <btowc@plt>
  440628:	mov	w26, w0
  44062c:	b	440634 <_obstack_memory_used@@Base+0x4e3c>
  440630:	ldur	w26, [x29, #-24]
  440634:	cmp	w21, #0x3
  440638:	b.eq	440640 <_obstack_memory_used@@Base+0x4e48>  // b.none
  44063c:	cbnz	w21, 440654 <_obstack_memory_used@@Base+0x4e5c>
  440640:	cbz	x20, 440658 <_obstack_memory_used@@Base+0x4e60>
  440644:	mov	w0, w28
  440648:	bl	404830 <btowc@plt>
  44064c:	mov	w28, w0
  440650:	b	440658 <_obstack_memory_used@@Base+0x4e60>
  440654:	ldur	w28, [x29, #-40]
  440658:	cmn	w26, #0x1
  44065c:	mov	w0, #0x3                   	// #3
  440660:	b.eq	440f10 <_obstack_memory_used@@Base+0x5718>  // b.none
  440664:	cmn	w28, #0x1
  440668:	b.eq	440f10 <_obstack_memory_used@@Base+0x5718>  // b.none
  44066c:	ldr	x8, [sp, #56]
  440670:	tbz	w8, #16, 44067c <_obstack_memory_used@@Base+0x4e84>
  440674:	cmp	w26, w28
  440678:	b.hi	441028 <_obstack_memory_used@@Base+0x5830>  // b.pmore
  44067c:	sub	x21, x29, #0x50
  440680:	mov	w14, #0x1                   	// #1
  440684:	cbz	x20, 4406ac <_obstack_memory_used@@Base+0x4eb4>
  440688:	ldr	x8, [x20, #64]
  44068c:	ldr	x9, [sp, #16]
  440690:	cmp	x9, x8
  440694:	b.eq	44072c <_obstack_memory_used@@Base+0x4f34>  // b.none
  440698:	ldp	x0, x19, [x20, #8]
  44069c:	add	x9, x8, #0x1
  4406a0:	str	w26, [x0, x8, lsl #2]
  4406a4:	str	x9, [x20, #64]
  4406a8:	str	w28, [x19, x8, lsl #2]
  4406ac:	mov	w9, w28
  4406b0:	ldp	x20, x28, [sp, #40]
  4406b4:	mov	x8, xzr
  4406b8:	mov	w10, w26
  4406bc:	cmp	x8, x10
  4406c0:	b.cc	4406e4 <_obstack_memory_used@@Base+0x4eec>  // b.lo, b.ul, b.last
  4406c4:	cmp	x8, x9
  4406c8:	b.hi	4406e4 <_obstack_memory_used@@Base+0x4eec>  // b.pmore
  4406cc:	lsr	x11, x8, #3
  4406d0:	and	x11, x11, #0x1ffffffffffffff8
  4406d4:	ldr	x12, [x25, x11]
  4406d8:	lsl	x13, x14, x8
  4406dc:	orr	x12, x12, x13
  4406e0:	str	x12, [x25, x11]
  4406e4:	add	x8, x8, #0x1
  4406e8:	cmp	x8, #0x100
  4406ec:	b.ne	4406bc <_obstack_memory_used@@Base+0x4ec4>  // b.any
  4406f0:	mov	w26, #0x1                   	// #1
  4406f4:	b	440548 <_obstack_memory_used@@Base+0x4d50>
  4406f8:	ldr	x8, [sp, #24]
  4406fc:	ldr	x0, [x27]
  440700:	mov	w19, #0x1                   	// #1
  440704:	bfi	x19, x8, #1, #63
  440708:	lsl	x1, x19, #2
  44070c:	bl	404710 <realloc@plt>
  440710:	cbz	x0, 441030 <_obstack_memory_used@@Base+0x5838>
  440714:	ldr	x8, [x27, #40]
  440718:	ldr	x28, [sp, #48]
  44071c:	sub	x21, x29, #0x50
  440720:	str	x0, [x27]
  440724:	str	x19, [sp, #24]
  440728:	b	4405c8 <_obstack_memory_used@@Base+0x4dd0>
  44072c:	ldr	x8, [sp, #16]
  440730:	ldr	x0, [x20, #8]
  440734:	mov	w21, #0x1                   	// #1
  440738:	bfi	x21, x8, #1, #63
  44073c:	lsl	x19, x21, #2
  440740:	mov	x1, x19
  440744:	bl	404710 <realloc@plt>
  440748:	ldr	x8, [x20, #16]
  44074c:	str	x0, [sp, #8]
  440750:	mov	x1, x19
  440754:	mov	x0, x8
  440758:	bl	404710 <realloc@plt>
  44075c:	ldr	x8, [sp, #8]
  440760:	mov	x19, x0
  440764:	mov	x0, x8
  440768:	cbz	x8, 441040 <_obstack_memory_used@@Base+0x5848>
  44076c:	cbz	x19, 441040 <_obstack_memory_used@@Base+0x5848>
  440770:	ldr	x8, [x20, #64]
  440774:	stp	x0, x19, [x20, #8]
  440778:	str	x21, [sp, #16]
  44077c:	sub	x21, x29, #0x50
  440780:	mov	w14, #0x1                   	// #1
  440784:	b	44069c <_obstack_memory_used@@Base+0x4ea4>
  440788:	ldr	x8, [x28, #72]
  44078c:	add	x8, x8, w24, sxtw
  440790:	str	x8, [x28, #72]
  440794:	ldr	w8, [sp, #36]
  440798:	cbz	w8, 4407ac <_obstack_memory_used@@Base+0x4fb4>
  44079c:	ldp	q0, q1, [x25]
  4407a0:	mvn	v0.16b, v0.16b
  4407a4:	mvn	v1.16b, v1.16b
  4407a8:	stp	q0, q1, [x25]
  4407ac:	ldr	w8, [x23, #180]
  4407b0:	cmp	w8, #0x2
  4407b4:	b.lt	4407dc <_obstack_memory_used@@Base+0x4fe4>  // b.tstop
  4407b8:	ldr	x9, [x23, #120]
  4407bc:	mov	x10, xzr
  4407c0:	ldr	x11, [x9, x10]
  4407c4:	ldr	x12, [x25, x10]
  4407c8:	and	x11, x12, x11
  4407cc:	str	x11, [x25, x10]
  4407d0:	add	x10, x10, #0x8
  4407d4:	cmp	x10, #0x20
  4407d8:	b.ne	4407c0 <_obstack_memory_used@@Base+0x4fc8>  // b.any
  4407dc:	ldr	x9, [x27, #40]
  4407e0:	cbnz	x9, 4407fc <_obstack_memory_used@@Base+0x5004>
  4407e4:	ldr	x9, [x27, #48]
  4407e8:	cbnz	x9, 4407fc <_obstack_memory_used@@Base+0x5004>
  4407ec:	ldr	x9, [x27, #56]
  4407f0:	cbnz	x9, 4407fc <_obstack_memory_used@@Base+0x5004>
  4407f4:	ldr	x9, [x27, #64]
  4407f8:	cbz	x9, 440eb4 <_obstack_memory_used@@Base+0x56bc>
  4407fc:	ldrb	w8, [x23, #176]
  440800:	mov	w9, #0x6                   	// #6
  440804:	add	x3, sp, #0x50
  440808:	mov	x0, x23
  44080c:	orr	w8, w8, #0x2
  440810:	mov	x1, xzr
  440814:	mov	x2, xzr
  440818:	strb	w8, [x23, #176]
  44081c:	str	w9, [sp, #88]
  440820:	str	x27, [sp, #80]
  440824:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  440828:	cbz	x0, 441034 <_obstack_memory_used@@Base+0x583c>
  44082c:	mov	x19, x0
  440830:	mov	x8, xzr
  440834:	ldr	x9, [x25, x8]
  440838:	cbnz	x9, 440854 <_obstack_memory_used@@Base+0x505c>
  44083c:	add	x8, x8, #0x8
  440840:	cmp	x8, #0x20
  440844:	b.ne	440834 <_obstack_memory_used@@Base+0x503c>  // b.any
  440848:	mov	x0, x25
  44084c:	bl	4049b0 <free@plt>
  440850:	b	44089c <_obstack_memory_used@@Base+0x50a4>
  440854:	mov	w8, #0x3                   	// #3
  440858:	add	x3, sp, #0x50
  44085c:	mov	x0, x23
  440860:	mov	x1, xzr
  440864:	mov	x2, xzr
  440868:	str	w8, [sp, #88]
  44086c:	str	x25, [sp, #80]
  440870:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  440874:	cbz	x0, 441034 <_obstack_memory_used@@Base+0x583c>
  440878:	mov	w8, #0xa                   	// #10
  44087c:	mov	x1, x0
  440880:	stur	w8, [x29, #-72]
  440884:	sub	x3, x29, #0x50
  440888:	mov	x0, x23
  44088c:	mov	x2, x19
  440890:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  440894:	mov	x19, x0
  440898:	cbz	x0, 441034 <_obstack_memory_used@@Base+0x583c>
  44089c:	cbz	x19, 43ff88 <_obstack_memory_used@@Base+0x4790>
  4408a0:	ldr	x25, [sp, #56]
  4408a4:	b	4409b0 <_obstack_memory_used@@Base+0x51b8>
  4408a8:	mov	w19, #0x9                   	// #9
  4408ac:	mov	w8, #0x6                   	// #6
  4408b0:	mov	x0, x23
  4408b4:	mov	x1, xzr
  4408b8:	mov	x2, xzr
  4408bc:	mov	x3, x22
  4408c0:	str	w8, [x22]
  4408c4:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  4408c8:	mov	x25, x0
  4408cc:	mov	x0, x23
  4408d0:	mov	x1, xzr
  4408d4:	mov	x2, xzr
  4408d8:	mov	x3, x22
  4408dc:	str	w19, [x22]
  4408e0:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  4408e4:	mov	x24, x0
  4408e8:	mov	w8, #0xa                   	// #10
  4408ec:	sub	x3, x29, #0x50
  4408f0:	mov	x0, x23
  4408f4:	mov	x1, x25
  4408f8:	mov	x2, x24
  4408fc:	stur	w8, [x29, #-72]
  440900:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  440904:	cbz	x25, 440914 <_obstack_memory_used@@Base+0x511c>
  440908:	cbz	x24, 440914 <_obstack_memory_used@@Base+0x511c>
  44090c:	mov	x19, x0
  440910:	cbnz	x0, 440938 <_obstack_memory_used@@Base+0x5140>
  440914:	mov	x19, xzr
  440918:	b	440ef4 <_obstack_memory_used@@Base+0x56fc>
  44091c:	mov	x0, x23
  440920:	mov	x1, xzr
  440924:	mov	x2, xzr
  440928:	mov	x3, x22
  44092c:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  440930:	mov	x19, x0
  440934:	cbz	x0, 440ef4 <_obstack_memory_used@@Base+0x56fc>
  440938:	ldr	x2, [sp, #56]
  44093c:	mov	x0, x22
  440940:	mov	x1, x28
  440944:	bl	43f650 <_obstack_memory_used@@Base+0x3e58>
  440948:	ldr	x8, [x28, #72]
  44094c:	add	x8, x8, w0, sxtw
  440950:	str	x8, [x28, #72]
  440954:	b	440e0c <_obstack_memory_used@@Base+0x5614>
  440958:	ldrb	w8, [x22, #8]
  44095c:	mov	x1, x0
  440960:	cmp	w8, #0x9
  440964:	b.ne	440fd8 <_obstack_memory_used@@Base+0x57e0>  // b.any
  440968:	mov	x25, x21
  44096c:	cmp	x20, #0x8
  440970:	b.hi	44098c <_obstack_memory_used@@Base+0x5194>  // b.pmore
  440974:	ldr	x8, [x23, #168]
  440978:	mov	w9, #0x1                   	// #1
  44097c:	lsl	w9, w9, w20
  440980:	sxtw	x9, w9
  440984:	orr	x8, x8, x9
  440988:	str	x8, [x23, #168]
  44098c:	mov	w8, #0x11                  	// #17
  440990:	sub	x3, x29, #0x50
  440994:	mov	x0, x23
  440998:	mov	x2, xzr
  44099c:	stur	w8, [x29, #-72]
  4409a0:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  4409a4:	mov	x19, x0
  4409a8:	cbz	x0, 440140 <_obstack_memory_used@@Base+0x4948>
  4409ac:	str	x20, [x19, #40]
  4409b0:	mov	x0, x22
  4409b4:	mov	x1, x28
  4409b8:	mov	x2, x25
  4409bc:	bl	43f650 <_obstack_memory_used@@Base+0x3e58>
  4409c0:	ldr	x8, [x28, #72]
  4409c4:	mov	w26, #0x1                   	// #1
  4409c8:	mov	w21, #0xa                   	// #10
  4409cc:	mov	w20, #0x10                  	// #16
  4409d0:	add	x8, x8, w0, sxtw
  4409d4:	str	x8, [x28, #72]
  4409d8:	ldrb	w8, [x22, #8]
  4409dc:	cmp	w8, #0x17
  4409e0:	b.hi	440e0c <_obstack_memory_used@@Base+0x5614>  // b.pmore
  4409e4:	mov	w10, #0x800                 	// #2048
  4409e8:	lsl	w9, w26, w8
  4409ec:	movk	w10, #0x8c, lsl #16
  4409f0:	tst	w9, w10
  4409f4:	b.eq	440e0c <_obstack_memory_used@@Base+0x5614>  // b.none
  4409f8:	ldr	q0, [x22]
  4409fc:	ldr	x24, [x28, #72]
  440a00:	cmp	w8, #0x17
  440a04:	str	q0, [sp, #80]
  440a08:	b.ne	440a44 <_obstack_memory_used@@Base+0x524c>  // b.any
  440a0c:	mov	x0, x28
  440a10:	mov	x1, x22
  440a14:	mov	x2, x25
  440a18:	bl	441e90 <_obstack_memory_used@@Base+0x6698>
  440a1c:	cmn	x0, #0x1
  440a20:	b.ne	440a5c <_obstack_memory_used@@Base+0x5264>  // b.any
  440a24:	ldrb	w8, [x22, #8]
  440a28:	cmp	w8, #0x1
  440a2c:	b.ne	440c58 <_obstack_memory_used@@Base+0x5460>  // b.any
  440a30:	ldrb	w9, [x22]
  440a34:	cmp	w9, #0x2c
  440a38:	b.ne	440c58 <_obstack_memory_used@@Base+0x5460>  // b.any
  440a3c:	mov	x27, xzr
  440a40:	b	440a6c <_obstack_memory_used@@Base+0x5274>
  440a44:	cmp	w8, #0x12
  440a48:	cset	w27, eq  // eq = none
  440a4c:	cmp	w8, #0x13
  440a50:	mov	w8, #0x1                   	// #1
  440a54:	cneg	x26, x8, ne  // ne = any
  440a58:	b	440ad8 <_obstack_memory_used@@Base+0x52e0>
  440a5c:	mov	x27, x0
  440a60:	cmn	x0, #0x2
  440a64:	b.eq	440c68 <_obstack_memory_used@@Base+0x5470>  // b.none
  440a68:	ldr	w8, [x22, #8]
  440a6c:	and	w8, w8, #0xff
  440a70:	cmp	w8, #0x18
  440a74:	mov	x26, x27
  440a78:	b.eq	440aac <_obstack_memory_used@@Base+0x52b4>  // b.none
  440a7c:	cmp	w8, #0x1
  440a80:	b.ne	440c68 <_obstack_memory_used@@Base+0x5470>  // b.any
  440a84:	ldrb	w8, [x22]
  440a88:	cmp	w8, #0x2c
  440a8c:	b.ne	440c68 <_obstack_memory_used@@Base+0x5470>  // b.any
  440a90:	mov	x0, x28
  440a94:	mov	x1, x22
  440a98:	mov	x2, x25
  440a9c:	bl	441e90 <_obstack_memory_used@@Base+0x6698>
  440aa0:	mov	x26, x0
  440aa4:	cmn	x0, #0x2
  440aa8:	b.eq	440c68 <_obstack_memory_used@@Base+0x5470>  // b.none
  440aac:	cmn	x26, #0x1
  440ab0:	b.eq	440abc <_obstack_memory_used@@Base+0x52c4>  // b.none
  440ab4:	cmp	x27, x26
  440ab8:	b.gt	440dac <_obstack_memory_used@@Base+0x55b4>
  440abc:	ldrb	w8, [x22, #8]
  440ac0:	cmp	w8, #0x18
  440ac4:	b.ne	440dac <_obstack_memory_used@@Base+0x55b4>  // b.any
  440ac8:	cmn	x26, #0x1
  440acc:	csel	x8, x27, x26, eq  // eq = none
  440ad0:	cmp	x8, #0x8, lsl #12
  440ad4:	b.ge	440de0 <_obstack_memory_used@@Base+0x55e8>  // b.tcont
  440ad8:	mov	x0, x22
  440adc:	mov	x1, x28
  440ae0:	mov	x2, x25
  440ae4:	bl	43f650 <_obstack_memory_used@@Base+0x3e58>
  440ae8:	ldr	x8, [x28, #72]
  440aec:	add	x8, x8, w0, sxtw
  440af0:	str	x8, [x28, #72]
  440af4:	cbz	x19, 440cc0 <_obstack_memory_used@@Base+0x54c8>
  440af8:	orr	x8, x26, x27
  440afc:	cbz	x8, 440cc8 <_obstack_memory_used@@Base+0x54d0>
  440b00:	subs	x28, x27, #0x1
  440b04:	b.ge	440d18 <_obstack_memory_used@@Base+0x5520>  // b.tcont
  440b08:	mov	x24, xzr
  440b0c:	mov	x28, x19
  440b10:	ldrb	w8, [x28, #48]
  440b14:	cmp	w8, #0x11
  440b18:	b.ne	440b80 <_obstack_memory_used@@Base+0x5388>  // b.any
  440b1c:	ldr	x8, [x28, #40]
  440b20:	mov	x10, x28
  440b24:	mov	x9, x10
  440b28:	ldr	x10, [x10, #8]
  440b2c:	cbnz	x10, 440b24 <_obstack_memory_used@@Base+0x532c>
  440b30:	ldr	x10, [x9, #16]
  440b34:	cbnz	x10, 440b24 <_obstack_memory_used@@Base+0x532c>
  440b38:	ldr	w10, [x9, #48]
  440b3c:	and	w11, w10, #0xff
  440b40:	cmp	w11, #0x11
  440b44:	b.ne	440b5c <_obstack_memory_used@@Base+0x5364>  // b.any
  440b48:	ldr	x11, [x9, #40]
  440b4c:	cmp	x11, x8
  440b50:	b.ne	440b5c <_obstack_memory_used@@Base+0x5364>  // b.any
  440b54:	orr	w10, w10, #0x80000
  440b58:	str	w10, [x9, #48]
  440b5c:	ldr	x11, [x9]
  440b60:	cbz	x11, 440b80 <_obstack_memory_used@@Base+0x5388>
  440b64:	ldr	x10, [x11, #16]
  440b68:	cmp	x10, x9
  440b6c:	mov	x9, x11
  440b70:	b.eq	440b38 <_obstack_memory_used@@Base+0x5340>  // b.none
  440b74:	mov	x9, x11
  440b78:	cbz	x10, 440b38 <_obstack_memory_used@@Base+0x5340>
  440b7c:	b	440b24 <_obstack_memory_used@@Base+0x532c>
  440b80:	cmn	x26, #0x1
  440b84:	cinc	w8, w21, eq  // eq = none
  440b88:	sub	x3, x29, #0x50
  440b8c:	mov	x0, x23
  440b90:	mov	x1, x28
  440b94:	mov	x2, xzr
  440b98:	stur	w8, [x29, #-72]
  440b9c:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  440ba0:	cbz	x0, 440d90 <_obstack_memory_used@@Base+0x5598>
  440ba4:	add	x8, x27, #0x2
  440ba8:	mov	x25, x0
  440bac:	cmp	x8, x26
  440bb0:	b.gt	440c14 <_obstack_memory_used@@Base+0x541c>
  440bb4:	add	x27, x27, #0x1
  440bb8:	mov	x0, x28
  440bbc:	mov	x1, x23
  440bc0:	bl	441f70 <_obstack_memory_used@@Base+0x6778>
  440bc4:	mov	x28, x0
  440bc8:	sub	x3, x29, #0x50
  440bcc:	mov	x0, x23
  440bd0:	mov	x1, x25
  440bd4:	mov	x2, x28
  440bd8:	stur	w20, [x29, #-72]
  440bdc:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  440be0:	cbz	x28, 440d90 <_obstack_memory_used@@Base+0x5598>
  440be4:	mov	x1, x0
  440be8:	cbz	x0, 440d90 <_obstack_memory_used@@Base+0x5598>
  440bec:	sub	x3, x29, #0x50
  440bf0:	mov	x0, x23
  440bf4:	mov	x2, xzr
  440bf8:	stur	w21, [x29, #-72]
  440bfc:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  440c00:	cbz	x0, 440d90 <_obstack_memory_used@@Base+0x5598>
  440c04:	add	x27, x27, #0x1
  440c08:	mov	x25, x0
  440c0c:	cmp	x27, x26
  440c10:	b.lt	440bb8 <_obstack_memory_used@@Base+0x53c0>  // b.tstop
  440c14:	ldr	x28, [sp, #48]
  440c18:	mov	w26, #0x1                   	// #1
  440c1c:	cbz	x24, 440c44 <_obstack_memory_used@@Base+0x544c>
  440c20:	sub	x3, x29, #0x50
  440c24:	mov	x0, x23
  440c28:	mov	x1, x24
  440c2c:	mov	x2, x25
  440c30:	stur	w20, [x29, #-72]
  440c34:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  440c38:	ldr	x25, [sp, #56]
  440c3c:	mov	x24, x0
  440c40:	b	440c84 <_obstack_memory_used@@Base+0x548c>
  440c44:	mov	x24, x25
  440c48:	ldr	x25, [sp, #56]
  440c4c:	cmp	x24, #0x0
  440c50:	cset	w8, eq  // eq = none
  440c54:	b	440c9c <_obstack_memory_used@@Base+0x54a4>
  440c58:	ldr	x8, [sp, #40]
  440c5c:	mov	x24, xzr
  440c60:	str	w21, [x8]
  440c64:	b	440c84 <_obstack_memory_used@@Base+0x548c>
  440c68:	tbz	w25, #21, 440dbc <_obstack_memory_used@@Base+0x55c4>
  440c6c:	str	x24, [x28, #72]
  440c70:	ldr	q0, [sp, #80]
  440c74:	mov	w26, #0x1                   	// #1
  440c78:	mov	x24, x19
  440c7c:	str	q0, [x22]
  440c80:	strb	w26, [x22, #8]
  440c84:	cmp	x24, #0x0
  440c88:	cset	w8, eq  // eq = none
  440c8c:	cbnz	x24, 440c9c <_obstack_memory_used@@Base+0x54a4>
  440c90:	ldr	x9, [sp, #40]
  440c94:	ldr	w9, [x9]
  440c98:	cbnz	w9, 440e70 <_obstack_memory_used@@Base+0x5678>
  440c9c:	mov	x19, x24
  440ca0:	tbz	w25, #24, 4409d8 <_obstack_memory_used@@Base+0x51e0>
  440ca4:	ldrb	w9, [x22, #8]
  440ca8:	cmp	w9, #0x17
  440cac:	b.eq	440df8 <_obstack_memory_used@@Base+0x5600>  // b.none
  440cb0:	cmp	w9, #0xb
  440cb4:	mov	x19, x24
  440cb8:	b.ne	4409d8 <_obstack_memory_used@@Base+0x51e0>  // b.any
  440cbc:	b	440df8 <_obstack_memory_used@@Base+0x5600>
  440cc0:	mov	x24, xzr
  440cc4:	b	440da4 <_obstack_memory_used@@Base+0x55ac>
  440cc8:	mov	x8, x19
  440ccc:	mov	w26, #0x1                   	// #1
  440cd0:	mov	x24, x8
  440cd4:	ldr	x8, [x8, #8]
  440cd8:	cbnz	x8, 440cd0 <_obstack_memory_used@@Base+0x54d8>
  440cdc:	ldr	x8, [x24, #16]
  440ce0:	cbnz	x8, 440cd0 <_obstack_memory_used@@Base+0x54d8>
  440ce4:	add	x0, x24, #0x28
  440ce8:	bl	43eaf4 <_obstack_memory_used@@Base+0x32fc>
  440cec:	ldr	x9, [x24]
  440cf0:	cbz	x9, 440d10 <_obstack_memory_used@@Base+0x5518>
  440cf4:	ldr	x8, [x9, #16]
  440cf8:	cmp	x8, x24
  440cfc:	mov	x24, x9
  440d00:	b.eq	440ce4 <_obstack_memory_used@@Base+0x54ec>  // b.none
  440d04:	mov	x24, x9
  440d08:	cbz	x8, 440ce4 <_obstack_memory_used@@Base+0x54ec>
  440d0c:	b	440cd0 <_obstack_memory_used@@Base+0x54d8>
  440d10:	mov	x24, xzr
  440d14:	b	440c84 <_obstack_memory_used@@Base+0x548c>
  440d18:	mov	x24, x19
  440d1c:	mov	x25, x19
  440d20:	b.eq	440d68 <_obstack_memory_used@@Base+0x5570>  // b.none
  440d24:	mov	x25, x19
  440d28:	mov	x24, x19
  440d2c:	mov	x0, x25
  440d30:	mov	x1, x23
  440d34:	bl	441f70 <_obstack_memory_used@@Base+0x6778>
  440d38:	mov	x25, x0
  440d3c:	sub	x3, x29, #0x50
  440d40:	mov	x0, x23
  440d44:	mov	x1, x24
  440d48:	mov	x2, x25
  440d4c:	stur	w20, [x29, #-72]
  440d50:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  440d54:	cbz	x25, 440d90 <_obstack_memory_used@@Base+0x5598>
  440d58:	mov	x24, x0
  440d5c:	cbz	x0, 440d90 <_obstack_memory_used@@Base+0x5598>
  440d60:	subs	x28, x28, #0x1
  440d64:	b.ne	440d2c <_obstack_memory_used@@Base+0x5534>  // b.any
  440d68:	cmp	x27, x26
  440d6c:	b.ne	440d7c <_obstack_memory_used@@Base+0x5584>  // b.any
  440d70:	ldr	x28, [sp, #48]
  440d74:	mov	w26, #0x1                   	// #1
  440d78:	b	440c48 <_obstack_memory_used@@Base+0x5450>
  440d7c:	mov	x0, x25
  440d80:	mov	x1, x23
  440d84:	bl	441f70 <_obstack_memory_used@@Base+0x6778>
  440d88:	mov	x28, x0
  440d8c:	cbnz	x0, 440b10 <_obstack_memory_used@@Base+0x5318>
  440d90:	ldp	x8, x28, [sp, #40]
  440d94:	ldr	x25, [sp, #56]
  440d98:	mov	w9, #0xc                   	// #12
  440d9c:	mov	x24, xzr
  440da0:	str	w9, [x8]
  440da4:	mov	w26, #0x1                   	// #1
  440da8:	b	440c84 <_obstack_memory_used@@Base+0x548c>
  440dac:	ldr	x8, [sp, #40]
  440db0:	mov	x24, xzr
  440db4:	mov	w26, #0x1                   	// #1
  440db8:	b	440c60 <_obstack_memory_used@@Base+0x5468>
  440dbc:	ldrb	w8, [x22, #8]
  440dc0:	ldr	x9, [sp, #40]
  440dc4:	mov	x24, xzr
  440dc8:	mov	w26, #0x1                   	// #1
  440dcc:	cmp	w8, #0x2
  440dd0:	mov	w8, #0x9                   	// #9
  440dd4:	cinc	w8, w8, ne  // ne = any
  440dd8:	str	w8, [x9]
  440ddc:	b	440c84 <_obstack_memory_used@@Base+0x548c>
  440de0:	ldr	x8, [sp, #40]
  440de4:	mov	w9, #0xf                   	// #15
  440de8:	mov	x24, xzr
  440dec:	mov	w26, #0x1                   	// #1
  440df0:	str	w9, [x8]
  440df4:	b	440c84 <_obstack_memory_used@@Base+0x548c>
  440df8:	ldr	x20, [sp, #40]
  440dfc:	tbz	w8, #0, 440e30 <_obstack_memory_used@@Base+0x5638>
  440e00:	mov	x19, xzr
  440e04:	mov	w8, #0xd                   	// #13
  440e08:	str	w8, [x20]
  440e0c:	mov	x0, x19
  440e10:	ldp	x20, x19, [sp, #272]
  440e14:	ldp	x22, x21, [sp, #256]
  440e18:	ldp	x24, x23, [sp, #240]
  440e1c:	ldp	x26, x25, [sp, #224]
  440e20:	ldp	x28, x27, [sp, #208]
  440e24:	ldp	x29, x30, [sp, #192]
  440e28:	add	sp, sp, #0x120
  440e2c:	ret
  440e30:	mov	x19, x24
  440e34:	ldr	x24, [x24, #8]
  440e38:	cbnz	x24, 440e30 <_obstack_memory_used@@Base+0x5638>
  440e3c:	ldr	x24, [x19, #16]
  440e40:	cbnz	x24, 440e30 <_obstack_memory_used@@Base+0x5638>
  440e44:	add	x0, x19, #0x28
  440e48:	bl	43eaf4 <_obstack_memory_used@@Base+0x32fc>
  440e4c:	ldr	x8, [x19]
  440e50:	cbz	x8, 440e00 <_obstack_memory_used@@Base+0x5608>
  440e54:	ldr	x24, [x8, #16]
  440e58:	cmp	x24, x19
  440e5c:	mov	x19, x8
  440e60:	b.eq	440e44 <_obstack_memory_used@@Base+0x564c>  // b.none
  440e64:	mov	x19, x8
  440e68:	cbz	x24, 440e44 <_obstack_memory_used@@Base+0x564c>
  440e6c:	b	440e30 <_obstack_memory_used@@Base+0x5638>
  440e70:	cbz	x19, 440e0c <_obstack_memory_used@@Base+0x5614>
  440e74:	mov	x20, x19
  440e78:	ldr	x19, [x19, #8]
  440e7c:	cbnz	x19, 440e74 <_obstack_memory_used@@Base+0x567c>
  440e80:	ldr	x19, [x20, #16]
  440e84:	cbnz	x19, 440e74 <_obstack_memory_used@@Base+0x567c>
  440e88:	add	x0, x20, #0x28
  440e8c:	bl	43eaf4 <_obstack_memory_used@@Base+0x32fc>
  440e90:	ldr	x8, [x20]
  440e94:	cbz	x8, 4402e4 <_obstack_memory_used@@Base+0x4aec>
  440e98:	ldr	x19, [x8, #16]
  440e9c:	cmp	x19, x20
  440ea0:	mov	x20, x8
  440ea4:	b.eq	440e88 <_obstack_memory_used@@Base+0x5690>  // b.none
  440ea8:	mov	x20, x8
  440eac:	cbz	x19, 440e88 <_obstack_memory_used@@Base+0x5690>
  440eb0:	b	440e74 <_obstack_memory_used@@Base+0x567c>
  440eb4:	cmp	w8, #0x2
  440eb8:	b.lt	440ecc <_obstack_memory_used@@Base+0x56d4>  // b.tstop
  440ebc:	ldr	x8, [x27, #72]
  440ec0:	cbnz	x8, 4407fc <_obstack_memory_used@@Base+0x5004>
  440ec4:	ldrb	w8, [x27, #32]
  440ec8:	tbnz	w8, #0, 4407fc <_obstack_memory_used@@Base+0x5004>
  440ecc:	mov	x0, x27
  440ed0:	bl	43eb90 <_obstack_memory_used@@Base+0x3398>
  440ed4:	mov	w8, #0x3                   	// #3
  440ed8:	add	x3, sp, #0x50
  440edc:	mov	x0, x23
  440ee0:	mov	x1, xzr
  440ee4:	mov	x2, xzr
  440ee8:	str	w8, [sp, #88]
  440eec:	str	x25, [sp, #80]
  440ef0:	b	440890 <_obstack_memory_used@@Base+0x5098>
  440ef4:	mov	w8, #0xc                   	// #12
  440ef8:	b	440e08 <_obstack_memory_used@@Base+0x5610>
  440efc:	mov	w0, #0x7                   	// #7
  440f00:	b	440f10 <_obstack_memory_used@@Base+0x5718>
  440f04:	mov	w8, #0x2                   	// #2
  440f08:	b	441038 <_obstack_memory_used@@Base+0x5840>
  440f0c:	mov	w0, #0x3                   	// #3
  440f10:	ldp	x20, x28, [sp, #40]
  440f14:	str	w0, [x20]
  440f18:	mov	x0, x25
  440f1c:	bl	4049b0 <free@plt>
  440f20:	mov	x0, x27
  440f24:	bl	43eb90 <_obstack_memory_used@@Base+0x3398>
  440f28:	mov	x19, xzr
  440f2c:	b	44089c <_obstack_memory_used@@Base+0x50a4>
  440f30:	mov	x19, xzr
  440f34:	mov	w8, #0x6                   	// #6
  440f38:	b	440e08 <_obstack_memory_used@@Base+0x5610>
  440f3c:	mov	x0, x25
  440f40:	bl	4049b0 <free@plt>
  440f44:	mov	x0, x27
  440f48:	bl	4049b0 <free@plt>
  440f4c:	mov	w8, #0xc                   	// #12
  440f50:	mov	x19, xzr
  440f54:	str	w8, [x20]
  440f58:	b	44089c <_obstack_memory_used@@Base+0x50a4>
  440f5c:	mov	x20, xzr
  440f60:	mov	x19, xzr
  440f64:	b	440f70 <_obstack_memory_used@@Base+0x5778>
  440f68:	mov	w19, #0x2                   	// #2
  440f6c:	mov	w20, #0x80                  	// #128
  440f70:	bl	404930 <__ctype_b_loc@plt>
  440f74:	ldr	x8, [x0]
  440f78:	ldr	x28, [sp, #48]
  440f7c:	mov	w9, #0x1                   	// #1
  440f80:	add	x8, x8, x20, lsl #1
  440f84:	add	x11, x23, x19, lsl #3
  440f88:	mov	x10, xzr
  440f8c:	add	x11, x11, #0xb8
  440f90:	add	x12, x20, x10
  440f94:	cmp	x12, #0x5f
  440f98:	b.eq	440fa4 <_obstack_memory_used@@Base+0x57ac>  // b.none
  440f9c:	ldrh	w12, [x8, x10, lsl #1]
  440fa0:	tbz	w12, #3, 440fb4 <_obstack_memory_used@@Base+0x57bc>
  440fa4:	ldr	x12, [x11]
  440fa8:	lsl	x13, x9, x10
  440fac:	orr	x12, x12, x13
  440fb0:	str	x12, [x11]
  440fb4:	add	x10, x10, #0x1
  440fb8:	cmp	x10, #0x40
  440fbc:	b.ne	440f90 <_obstack_memory_used@@Base+0x5798>  // b.any
  440fc0:	add	x19, x19, #0x1
  440fc4:	add	x20, x20, #0x40
  440fc8:	cmp	x19, #0x4
  440fcc:	add	x8, x8, #0x80
  440fd0:	b.ne	440f84 <_obstack_memory_used@@Base+0x578c>  // b.any
  440fd4:	b	4401cc <_obstack_memory_used@@Base+0x49d4>
  440fd8:	cbz	x1, 44101c <_obstack_memory_used@@Base+0x5824>
  440fdc:	mov	x19, x1
  440fe0:	ldr	x1, [x1, #8]
  440fe4:	cbnz	x1, 440fdc <_obstack_memory_used@@Base+0x57e4>
  440fe8:	ldr	x1, [x19, #16]
  440fec:	cbnz	x1, 440fdc <_obstack_memory_used@@Base+0x57e4>
  440ff0:	add	x0, x19, #0x28
  440ff4:	bl	43eaf4 <_obstack_memory_used@@Base+0x32fc>
  440ff8:	ldr	x8, [x19]
  440ffc:	cbz	x8, 44101c <_obstack_memory_used@@Base+0x5824>
  441000:	ldr	x1, [x8, #16]
  441004:	cmp	x1, x19
  441008:	mov	x19, x8
  44100c:	b.eq	440ff0 <_obstack_memory_used@@Base+0x57f8>  // b.none
  441010:	mov	x19, x8
  441014:	cbz	x1, 440ff0 <_obstack_memory_used@@Base+0x57f8>
  441018:	b	440fdc <_obstack_memory_used@@Base+0x57e4>
  44101c:	mov	x19, xzr
  441020:	mov	w8, #0x8                   	// #8
  441024:	b	440144 <_obstack_memory_used@@Base+0x494c>
  441028:	mov	w0, #0xb                   	// #11
  44102c:	b	440f10 <_obstack_memory_used@@Base+0x5718>
  441030:	ldr	x28, [sp, #48]
  441034:	mov	w8, #0xc                   	// #12
  441038:	str	w8, [x20]
  44103c:	b	440f18 <_obstack_memory_used@@Base+0x5720>
  441040:	bl	4049b0 <free@plt>
  441044:	mov	x0, x19
  441048:	bl	4049b0 <free@plt>
  44104c:	mov	w0, #0xc                   	// #12
  441050:	b	440f10 <_obstack_memory_used@@Base+0x5718>
  441054:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x17808>
  441058:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  44105c:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  441060:	add	x0, x0, #0x6b8
  441064:	add	x1, x1, #0xcee
  441068:	add	x3, x3, #0xcfa
  44106c:	mov	w2, #0xced                 	// #3309
  441070:	bl	404cd0 <__assert_fail@plt>
  441074:	stp	x29, x30, [sp, #-48]!
  441078:	stp	x22, x21, [sp, #16]
  44107c:	stp	x20, x19, [sp, #32]
  441080:	ldr	w8, [x0, #128]
  441084:	mov	x21, x3
  441088:	mov	x19, x2
  44108c:	mov	x22, x0
  441090:	cmp	w8, #0xf
  441094:	mov	x20, x1
  441098:	mov	x29, sp
  44109c:	b.eq	4410fc <_obstack_memory_used@@Base+0x5904>  // b.none
  4410a0:	ldr	x0, [x22, #112]
  4410a4:	add	w9, w8, #0x1
  4410a8:	sxtw	x8, w8
  4410ac:	add	x0, x0, x8, lsl #6
  4410b0:	str	w9, [x22, #128]
  4410b4:	str	xzr, [x0, #8]!
  4410b8:	stp	x20, x19, [x0, #8]
  4410bc:	ldr	q0, [x21]
  4410c0:	mov	x9, #0xffffffffffffffff    	// #-1
  4410c4:	stp	xzr, xzr, [x0, #24]
  4410c8:	str	x9, [x0, #56]
  4410cc:	stur	q0, [x0, #40]
  4410d0:	ldr	w8, [x0, #48]
  4410d4:	and	w8, w8, #0xfff3ffff
  4410d8:	str	w8, [x0, #48]
  4410dc:	cbz	x20, 4410e4 <_obstack_memory_used@@Base+0x58ec>
  4410e0:	str	x0, [x20]
  4410e4:	cbz	x19, 4410ec <_obstack_memory_used@@Base+0x58f4>
  4410e8:	str	x0, [x19]
  4410ec:	ldp	x20, x19, [sp, #32]
  4410f0:	ldp	x22, x21, [sp, #16]
  4410f4:	ldp	x29, x30, [sp], #48
  4410f8:	ret
  4410fc:	mov	w0, #0x3c8                 	// #968
  441100:	bl	4044d0 <malloc@plt>
  441104:	cbz	x0, 4410ec <_obstack_memory_used@@Base+0x58f4>
  441108:	ldr	x9, [x22, #112]
  44110c:	mov	w8, wzr
  441110:	str	x9, [x0]
  441114:	str	x0, [x22, #112]
  441118:	str	wzr, [x22, #128]
  44111c:	b	4410a4 <_obstack_memory_used@@Base+0x58ac>
  441120:	sub	sp, sp, #0x80
  441124:	stp	x26, x25, [sp, #64]
  441128:	stp	x20, x19, [sp, #112]
  44112c:	mov	x26, x1
  441130:	mov	x20, x0
  441134:	mov	w0, #0x20                  	// #32
  441138:	mov	w1, #0x1                   	// #1
  44113c:	stp	x29, x30, [sp, #48]
  441140:	stp	x24, x23, [sp, #80]
  441144:	stp	x22, x21, [sp, #96]
  441148:	add	x29, sp, #0x30
  44114c:	mov	x19, x5
  441150:	mov	w23, w4
  441154:	mov	x24, x3
  441158:	mov	x25, x2
  44115c:	str	xzr, [sp, #24]
  441160:	bl	404680 <calloc@plt>
  441164:	cbz	x0, 4412e8 <_obstack_memory_used@@Base+0x5af0>
  441168:	mov	x21, x0
  44116c:	mov	w0, #0x50                  	// #80
  441170:	mov	w1, #0x1                   	// #1
  441174:	bl	404680 <calloc@plt>
  441178:	cbz	x0, 4412e0 <_obstack_memory_used@@Base+0x5ae8>
  44117c:	mov	x22, x0
  441180:	and	w8, w23, #0x1
  441184:	strb	w8, [x0, #32]
  441188:	add	x3, sp, #0x18
  44118c:	mov	x0, x26
  441190:	mov	x1, x21
  441194:	mov	x2, x22
  441198:	mov	x4, x25
  44119c:	mov	x5, xzr
  4411a0:	bl	441718 <_obstack_memory_used@@Base+0x5f20>
  4411a4:	cbnz	w0, 4412f8 <_obstack_memory_used@@Base+0x5b00>
  4411a8:	ldrb	w8, [x24]
  4411ac:	cbz	w8, 4411d8 <_obstack_memory_used@@Base+0x59e0>
  4411b0:	add	x9, x24, #0x1
  4411b4:	mov	w10, #0x1                   	// #1
  4411b8:	lsr	w11, w8, #3
  4411bc:	and	x11, x11, #0x18
  4411c0:	ldr	x12, [x21, x11]
  4411c4:	lsl	x8, x10, x8
  4411c8:	orr	x8, x12, x8
  4411cc:	str	x8, [x21, x11]
  4411d0:	ldrb	w8, [x9], #1
  4411d4:	cbnz	w8, 4411b8 <_obstack_memory_used@@Base+0x59c0>
  4411d8:	tbz	w23, #0, 4411ec <_obstack_memory_used@@Base+0x59f4>
  4411dc:	ldp	q0, q1, [x21]
  4411e0:	mvn	v0.16b, v0.16b
  4411e4:	mvn	v1.16b, v1.16b
  4411e8:	stp	q0, q1, [x21]
  4411ec:	ldr	w8, [x20, #180]
  4411f0:	cmp	w8, #0x2
  4411f4:	b.lt	44121c <_obstack_memory_used@@Base+0x5a24>  // b.tstop
  4411f8:	ldr	x8, [x20, #120]
  4411fc:	mov	x9, xzr
  441200:	ldr	x10, [x8, x9]
  441204:	ldr	x11, [x21, x9]
  441208:	and	x10, x11, x10
  44120c:	str	x10, [x21, x9]
  441210:	add	x9, x9, #0x8
  441214:	cmp	x9, #0x20
  441218:	b.ne	441200 <_obstack_memory_used@@Base+0x5a08>  // b.any
  44121c:	mov	w8, #0x3                   	// #3
  441220:	add	x3, sp, #0x8
  441224:	mov	x0, x20
  441228:	mov	x1, xzr
  44122c:	mov	x2, xzr
  441230:	str	w8, [sp, #16]
  441234:	str	x21, [sp, #8]
  441238:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  44123c:	cbz	x0, 4412cc <_obstack_memory_used@@Base+0x5ad4>
  441240:	ldr	w8, [x20, #180]
  441244:	mov	x23, x0
  441248:	cmp	w8, #0x2
  44124c:	b.lt	4412a4 <_obstack_memory_used@@Base+0x5aac>  // b.tstop
  441250:	mov	w8, #0x6                   	// #6
  441254:	str	w8, [sp, #16]
  441258:	str	x22, [sp, #8]
  44125c:	ldrb	w8, [x20, #176]
  441260:	add	x3, sp, #0x8
  441264:	mov	x0, x20
  441268:	mov	x1, xzr
  44126c:	orr	w8, w8, #0x2
  441270:	mov	x2, xzr
  441274:	strb	w8, [x20, #176]
  441278:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  44127c:	cbz	x0, 4412cc <_obstack_memory_used@@Base+0x5ad4>
  441280:	mov	x2, x0
  441284:	mov	w8, #0xa                   	// #10
  441288:	sub	x3, x29, #0x10
  44128c:	mov	x0, x20
  441290:	mov	x1, x23
  441294:	stur	w8, [x29, #-8]
  441298:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  44129c:	mov	x23, x0
  4412a0:	b	4412ac <_obstack_memory_used@@Base+0x5ab4>
  4412a4:	mov	x0, x22
  4412a8:	bl	43eb90 <_obstack_memory_used@@Base+0x3398>
  4412ac:	mov	x0, x23
  4412b0:	ldp	x20, x19, [sp, #112]
  4412b4:	ldp	x22, x21, [sp, #96]
  4412b8:	ldp	x24, x23, [sp, #80]
  4412bc:	ldp	x26, x25, [sp, #64]
  4412c0:	ldp	x29, x30, [sp, #48]
  4412c4:	add	sp, sp, #0x80
  4412c8:	ret
  4412cc:	mov	x0, x21
  4412d0:	bl	4049b0 <free@plt>
  4412d4:	mov	x0, x22
  4412d8:	bl	43eb90 <_obstack_memory_used@@Base+0x3398>
  4412dc:	b	4412e8 <_obstack_memory_used@@Base+0x5af0>
  4412e0:	mov	x0, x21
  4412e4:	bl	4049b0 <free@plt>
  4412e8:	mov	x23, xzr
  4412ec:	mov	w8, #0xc                   	// #12
  4412f0:	str	w8, [x19]
  4412f4:	b	4412ac <_obstack_memory_used@@Base+0x5ab4>
  4412f8:	mov	w25, w0
  4412fc:	mov	x0, x21
  441300:	bl	4049b0 <free@plt>
  441304:	mov	x0, x22
  441308:	bl	43eb90 <_obstack_memory_used@@Base+0x3398>
  44130c:	mov	x23, xzr
  441310:	str	w25, [x19]
  441314:	b	4412ac <_obstack_memory_used@@Base+0x5ab4>
  441318:	ldr	x9, [x1, #104]
  44131c:	ldr	x8, [x1, #72]
  441320:	cmp	x9, x8
  441324:	b.le	441398 <_obstack_memory_used@@Base+0x5ba0>
  441328:	ldr	x9, [x1, #8]
  44132c:	ldrb	w8, [x9, x8]
  441330:	strb	w8, [x0]
  441334:	ldr	w9, [x1, #144]
  441338:	cmp	w9, #0x2
  44133c:	b.lt	441360 <_obstack_memory_used@@Base+0x5b68>  // b.tstop
  441340:	ldr	x9, [x1, #72]
  441344:	ldr	x10, [x1, #48]
  441348:	cmp	x9, x10
  44134c:	b.eq	441360 <_obstack_memory_used@@Base+0x5b68>  // b.none
  441350:	ldr	x10, [x1, #16]
  441354:	ldr	w9, [x10, x9, lsl #2]
  441358:	cmn	w9, #0x1
  44135c:	b.eq	441418 <_obstack_memory_used@@Base+0x5c20>  // b.none
  441360:	tbz	w2, #0, 4413a8 <_obstack_memory_used@@Base+0x5bb0>
  441364:	cmp	w8, #0x5c
  441368:	b.ne	4413a8 <_obstack_memory_used@@Base+0x5bb0>  // b.any
  44136c:	ldr	x8, [x1, #72]
  441370:	ldr	x9, [x1, #88]
  441374:	add	x8, x8, #0x1
  441378:	cmp	x8, x9
  44137c:	b.ge	441418 <_obstack_memory_used@@Base+0x5c20>  // b.tcont
  441380:	ldr	x9, [x1, #8]
  441384:	str	x8, [x1, #72]
  441388:	ldrb	w9, [x9, x8]
  44138c:	mov	w8, #0x1                   	// #1
  441390:	strb	w9, [x0]
  441394:	b	44141c <_obstack_memory_used@@Base+0x5c24>
  441398:	mov	w8, wzr
  44139c:	mov	w9, #0x2                   	// #2
  4413a0:	strb	w9, [x0, #8]
  4413a4:	b	441438 <_obstack_memory_used@@Base+0x5c40>
  4413a8:	cmp	w8, #0x5c
  4413ac:	b.gt	441400 <_obstack_memory_used@@Base+0x5c08>
  4413b0:	cmp	w8, #0x2d
  4413b4:	b.eq	441424 <_obstack_memory_used@@Base+0x5c2c>  // b.none
  4413b8:	cmp	w8, #0x5b
  4413bc:	b.ne	441418 <_obstack_memory_used@@Base+0x5c20>  // b.any
  4413c0:	ldr	x8, [x1, #72]
  4413c4:	ldr	x9, [x1, #88]
  4413c8:	add	x8, x8, #0x1
  4413cc:	cmp	x8, x9
  4413d0:	b.ge	441440 <_obstack_memory_used@@Base+0x5c48>  // b.tcont
  4413d4:	ldr	x9, [x1, #8]
  4413d8:	ldrb	w8, [x9, x8]
  4413dc:	cmp	w8, #0x3d
  4413e0:	strb	w8, [x0]
  4413e4:	b.eq	441458 <_obstack_memory_used@@Base+0x5c60>  // b.none
  4413e8:	cmp	w8, #0x3a
  4413ec:	b.eq	441460 <_obstack_memory_used@@Base+0x5c68>  // b.none
  4413f0:	cmp	w8, #0x2e
  4413f4:	b.ne	441444 <_obstack_memory_used@@Base+0x5c4c>  // b.any
  4413f8:	mov	w8, #0x1a                  	// #26
  4413fc:	b	441468 <_obstack_memory_used@@Base+0x5c70>
  441400:	cmp	w8, #0x5d
  441404:	b.eq	44142c <_obstack_memory_used@@Base+0x5c34>  // b.none
  441408:	cmp	w8, #0x5e
  44140c:	b.ne	441418 <_obstack_memory_used@@Base+0x5c20>  // b.any
  441410:	mov	w8, #0x19                  	// #25
  441414:	b	441430 <_obstack_memory_used@@Base+0x5c38>
  441418:	mov	w8, #0x1                   	// #1
  44141c:	strb	w8, [x0, #8]
  441420:	b	441438 <_obstack_memory_used@@Base+0x5c40>
  441424:	mov	w8, #0x16                  	// #22
  441428:	b	441430 <_obstack_memory_used@@Base+0x5c38>
  44142c:	mov	w8, #0x15                  	// #21
  441430:	strb	w8, [x0, #8]
  441434:	mov	w8, #0x1                   	// #1
  441438:	mov	w0, w8
  44143c:	ret
  441440:	strb	wzr, [x0]
  441444:	mov	w8, #0x1                   	// #1
  441448:	mov	w9, #0x5b                  	// #91
  44144c:	strb	w8, [x0, #8]
  441450:	strb	w9, [x0]
  441454:	b	441438 <_obstack_memory_used@@Base+0x5c40>
  441458:	mov	w8, #0x1c                  	// #28
  44145c:	b	441468 <_obstack_memory_used@@Base+0x5c70>
  441460:	tbz	w2, #2, 441444 <_obstack_memory_used@@Base+0x5c4c>
  441464:	mov	w8, #0x1e                  	// #30
  441468:	strb	w8, [x0, #8]
  44146c:	mov	w8, #0x2                   	// #2
  441470:	b	441438 <_obstack_memory_used@@Base+0x5c40>
  441474:	sub	sp, sp, #0x30
  441478:	stp	x29, x30, [sp, #32]
  44147c:	ldr	w8, [x1, #144]
  441480:	ldr	x9, [x1, #72]
  441484:	add	x29, sp, #0x20
  441488:	cmp	w8, #0x1
  44148c:	b.eq	4414fc <_obstack_memory_used@@Base+0x5d04>  // b.none
  441490:	ldr	x8, [x1, #48]
  441494:	add	x10, x9, #0x1
  441498:	cmp	x10, x8
  44149c:	b.ge	4414fc <_obstack_memory_used@@Base+0x5d04>  // b.tcont
  4414a0:	ldr	x10, [x1, #16]
  4414a4:	sub	x8, x8, x9
  4414a8:	mov	w11, #0x1                   	// #1
  4414ac:	add	x12, x10, x9, lsl #2
  4414b0:	ldr	w13, [x12, x11, lsl #2]
  4414b4:	cmn	w13, #0x1
  4414b8:	b.ne	4414d0 <_obstack_memory_used@@Base+0x5cd8>  // b.any
  4414bc:	add	x11, x11, #0x1
  4414c0:	cmp	x8, x11
  4414c4:	b.ne	4414b0 <_obstack_memory_used@@Base+0x5cb8>  // b.any
  4414c8:	mov	x11, x8
  4414cc:	b	4414d8 <_obstack_memory_used@@Base+0x5ce0>
  4414d0:	cmp	w11, #0x2
  4414d4:	b.lt	4414fc <_obstack_memory_used@@Base+0x5d04>  // b.tstop
  4414d8:	mov	w12, #0x1                   	// #1
  4414dc:	str	w12, [x0]
  4414e0:	ldr	w9, [x10, x9, lsl #2]
  4414e4:	mov	w8, wzr
  4414e8:	str	w9, [x0, #8]
  4414ec:	ldr	x9, [x1, #72]
  4414f0:	add	x9, x9, w11, sxtw
  4414f4:	str	x9, [x1, #72]
  4414f8:	b	441700 <_obstack_memory_used@@Base+0x5f08>
  4414fc:	add	x8, x9, w3, sxtw
  441500:	str	x8, [x1, #72]
  441504:	ldrb	w10, [x2, #8]
  441508:	sub	w9, w10, #0x16
  44150c:	cmp	w9, #0x8
  441510:	b.hi	4416f0 <_obstack_memory_used@@Base+0x5ef8>  // b.pmore
  441514:	adrp	x11, 455000 <_obstack_memory_used@@Base+0x19808>
  441518:	add	x11, x11, #0xa70
  44151c:	adr	x12, 44152c <_obstack_memory_used@@Base+0x5d34>
  441520:	ldrb	w13, [x11, x9]
  441524:	add	x12, x12, x13, lsl #2
  441528:	br	x12
  44152c:	ldr	x9, [x1, #104]
  441530:	cmp	x9, x8
  441534:	b.le	441674 <_obstack_memory_used@@Base+0x5e7c>
  441538:	ldrb	w9, [x2]
  44153c:	mov	x8, xzr
  441540:	and	w10, w10, #0xff
  441544:	cmp	w10, #0x1e
  441548:	b.ne	441554 <_obstack_memory_used@@Base+0x5d5c>  // b.any
  44154c:	ldrb	w10, [x1, #139]
  441550:	cbnz	w10, 4415a8 <_obstack_memory_used@@Base+0x5db0>
  441554:	ldr	x10, [x1, #72]
  441558:	ldr	x11, [x1, #8]
  44155c:	add	x12, x10, #0x1
  441560:	str	x12, [x1, #72]
  441564:	ldrb	w10, [x11, x10]
  441568:	ldr	x11, [x1, #104]
  44156c:	cmp	x11, x12
  441570:	b.le	441674 <_obstack_memory_used@@Base+0x5e7c>
  441574:	cmp	w9, w10, uxtb
  441578:	b.ne	44158c <_obstack_memory_used@@Base+0x5d94>  // b.any
  44157c:	ldr	x11, [x1, #8]
  441580:	ldrb	w11, [x11, x12]
  441584:	cmp	w11, #0x5d
  441588:	b.eq	44167c <_obstack_memory_used@@Base+0x5e84>  // b.none
  44158c:	ldr	x11, [x0, #8]
  441590:	strb	w10, [x11, x8]
  441594:	add	x8, x8, #0x1
  441598:	cmp	x8, #0x20
  44159c:	b.eq	441674 <_obstack_memory_used@@Base+0x5e7c>  // b.none
  4415a0:	ldrb	w10, [x2, #8]
  4415a4:	b	441540 <_obstack_memory_used@@Base+0x5d48>
  4415a8:	ldrb	w10, [x1, #140]
  4415ac:	cbz	w10, 441630 <_obstack_memory_used@@Base+0x5e38>
  4415b0:	ldr	x11, [x1, #72]
  4415b4:	ldr	x13, [x1, #48]
  4415b8:	subs	x12, x13, x11
  4415bc:	b.eq	4415d0 <_obstack_memory_used@@Base+0x5dd8>  // b.none
  4415c0:	ldr	x10, [x1, #16]
  4415c4:	ldr	w10, [x10, x11, lsl #2]
  4415c8:	cmn	w10, #0x1
  4415cc:	b.eq	441650 <_obstack_memory_used@@Base+0x5e58>  // b.none
  4415d0:	ldr	x10, [x1, #24]
  4415d4:	ldr	x14, [x1, #40]
  4415d8:	ldr	x15, [x1]
  4415dc:	ldr	x10, [x10, x11, lsl #3]
  4415e0:	add	x10, x14, x10
  4415e4:	ldrsb	w10, [x15, x10]
  4415e8:	tbnz	w10, #31, 441650 <_obstack_memory_used@@Base+0x5e58>
  4415ec:	ldr	w14, [x1, #144]
  4415f0:	cmp	w14, #0x1
  4415f4:	b.eq	441664 <_obstack_memory_used@@Base+0x5e6c>  // b.none
  4415f8:	add	x14, x11, #0x1
  4415fc:	cmp	x14, x13
  441600:	b.ge	441664 <_obstack_memory_used@@Base+0x5e6c>  // b.tcont
  441604:	ldr	x13, [x1, #16]
  441608:	add	x14, x13, x11, lsl #2
  44160c:	mov	w13, #0x1                   	// #1
  441610:	ldr	w15, [x14, x13, lsl #2]
  441614:	cmn	w15, #0x1
  441618:	b.ne	441668 <_obstack_memory_used@@Base+0x5e70>  // b.any
  44161c:	add	x13, x13, #0x1
  441620:	cmp	x12, x13
  441624:	b.ne	441610 <_obstack_memory_used@@Base+0x5e18>  // b.any
  441628:	mov	x13, x12
  44162c:	b	441668 <_obstack_memory_used@@Base+0x5e70>
  441630:	ldr	x10, [x1, #72]
  441634:	ldr	x11, [x1, #40]
  441638:	ldr	x13, [x1]
  44163c:	add	x12, x10, #0x1
  441640:	str	x12, [x1, #72]
  441644:	add	x10, x10, x11
  441648:	ldrb	w10, [x13, x10]
  44164c:	b	441568 <_obstack_memory_used@@Base+0x5d70>
  441650:	ldr	x10, [x1, #8]
  441654:	add	x12, x11, #0x1
  441658:	str	x12, [x1, #72]
  44165c:	ldrb	w10, [x10, x11]
  441660:	b	441568 <_obstack_memory_used@@Base+0x5d70>
  441664:	mov	w13, #0x1                   	// #1
  441668:	add	x12, x11, w13, sxtw
  44166c:	str	x12, [x1, #72]
  441670:	b	441568 <_obstack_memory_used@@Base+0x5d70>
  441674:	mov	w8, #0x7                   	// #7
  441678:	b	441700 <_obstack_memory_used@@Base+0x5f08>
  44167c:	add	x9, x12, #0x1
  441680:	str	x9, [x1, #72]
  441684:	ldr	x9, [x0, #8]
  441688:	strb	wzr, [x9, w8, uxtw]
  44168c:	ldrb	w8, [x2, #8]
  441690:	cmp	w8, #0x1e
  441694:	b.eq	4416b4 <_obstack_memory_used@@Base+0x5ebc>  // b.none
  441698:	cmp	w8, #0x1c
  44169c:	b.eq	4416bc <_obstack_memory_used@@Base+0x5ec4>  // b.none
  4416a0:	cmp	w8, #0x1a
  4416a4:	mov	w8, wzr
  4416a8:	b.ne	441700 <_obstack_memory_used@@Base+0x5f08>  // b.any
  4416ac:	mov	w9, #0x3                   	// #3
  4416b0:	b	4416c0 <_obstack_memory_used@@Base+0x5ec8>
  4416b4:	mov	w9, #0x4                   	// #4
  4416b8:	b	4416c0 <_obstack_memory_used@@Base+0x5ec8>
  4416bc:	mov	w9, #0x2                   	// #2
  4416c0:	mov	w8, wzr
  4416c4:	str	w9, [x0]
  4416c8:	b	441700 <_obstack_memory_used@@Base+0x5f08>
  4416cc:	tbnz	w5, #0, 4416f0 <_obstack_memory_used@@Base+0x5ef8>
  4416d0:	stp	x2, x0, [sp]
  4416d4:	add	x0, sp, #0x10
  4416d8:	mov	x2, x4
  4416dc:	bl	441318 <_obstack_memory_used@@Base+0x5b20>
  4416e0:	ldrb	w8, [sp, #24]
  4416e4:	ldp	x2, x0, [sp]
  4416e8:	cmp	w8, #0x15
  4416ec:	b.ne	441710 <_obstack_memory_used@@Base+0x5f18>  // b.any
  4416f0:	str	wzr, [x0]
  4416f4:	ldrb	w9, [x2]
  4416f8:	mov	w8, wzr
  4416fc:	strb	w9, [x0, #8]
  441700:	ldp	x29, x30, [sp, #32]
  441704:	mov	w0, w8
  441708:	add	sp, sp, #0x30
  44170c:	ret
  441710:	mov	w8, #0xb                   	// #11
  441714:	b	441700 <_obstack_memory_used@@Base+0x5f08>
  441718:	stp	x29, x30, [sp, #-64]!
  44171c:	stp	x24, x23, [sp, #16]
  441720:	stp	x22, x21, [sp, #32]
  441724:	stp	x20, x19, [sp, #48]
  441728:	mov	x21, x4
  44172c:	mov	x23, x3
  441730:	mov	x22, x2
  441734:	mov	x19, x1
  441738:	mov	x20, x0
  44173c:	mov	x29, sp
  441740:	tbz	w5, #22, 441774 <_obstack_memory_used@@Base+0x5f7c>
  441744:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  441748:	add	x1, x1, #0xd60
  44174c:	mov	x0, x21
  441750:	bl	404900 <strcmp@plt>
  441754:	cbz	w0, 44176c <_obstack_memory_used@@Base+0x5f74>
  441758:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  44175c:	add	x1, x1, #0xd66
  441760:	mov	x0, x21
  441764:	bl	404900 <strcmp@plt>
  441768:	cbnz	w0, 441774 <_obstack_memory_used@@Base+0x5f7c>
  44176c:	adrp	x21, 455000 <_obstack_memory_used@@Base+0x19808>
  441770:	add	x21, x21, #0xd6c
  441774:	ldr	x8, [x23]
  441778:	ldr	x9, [x22, #72]
  44177c:	cmp	x8, x9
  441780:	b.eq	441d14 <_obstack_memory_used@@Base+0x651c>  // b.none
  441784:	mov	x0, x21
  441788:	bl	404230 <wctype@plt>
  44178c:	ldr	x8, [x22, #72]
  441790:	ldr	x9, [x22, #24]
  441794:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  441798:	add	x1, x1, #0xce0
  44179c:	add	x10, x8, #0x1
  4417a0:	str	x10, [x22, #72]
  4417a4:	str	x0, [x9, x8, lsl #3]
  4417a8:	mov	x0, x21
  4417ac:	bl	404900 <strcmp@plt>
  4417b0:	cbz	w0, 441898 <_obstack_memory_used@@Base+0x60a0>
  4417b4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  4417b8:	add	x1, x1, #0xd72
  4417bc:	mov	x0, x21
  4417c0:	bl	404900 <strcmp@plt>
  4417c4:	cbz	w0, 4418d8 <_obstack_memory_used@@Base+0x60e0>
  4417c8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  4417cc:	add	x1, x1, #0xd66
  4417d0:	mov	x0, x21
  4417d4:	bl	404900 <strcmp@plt>
  4417d8:	cbz	w0, 441918 <_obstack_memory_used@@Base+0x6120>
  4417dc:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  4417e0:	add	x1, x1, #0xce8
  4417e4:	mov	x0, x21
  4417e8:	bl	404900 <strcmp@plt>
  4417ec:	cbz	w0, 441958 <_obstack_memory_used@@Base+0x6160>
  4417f0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  4417f4:	add	x1, x1, #0xd6c
  4417f8:	mov	x0, x21
  4417fc:	bl	404900 <strcmp@plt>
  441800:	cbz	w0, 441998 <_obstack_memory_used@@Base+0x61a0>
  441804:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  441808:	add	x1, x1, #0xd91
  44180c:	mov	x0, x21
  441810:	bl	404900 <strcmp@plt>
  441814:	cbz	w0, 4419d8 <_obstack_memory_used@@Base+0x61e0>
  441818:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  44181c:	add	x1, x1, #0xd78
  441820:	mov	x0, x21
  441824:	bl	404900 <strcmp@plt>
  441828:	cbz	w0, 441a2c <_obstack_memory_used@@Base+0x6234>
  44182c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  441830:	add	x1, x1, #0xd60
  441834:	mov	x0, x21
  441838:	bl	404900 <strcmp@plt>
  44183c:	cbz	w0, 441a70 <_obstack_memory_used@@Base+0x6278>
  441840:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  441844:	add	x1, x1, #0xd7e
  441848:	mov	x0, x21
  44184c:	bl	404900 <strcmp@plt>
  441850:	cbz	w0, 441ab4 <_obstack_memory_used@@Base+0x62bc>
  441854:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  441858:	add	x1, x1, #0xd84
  44185c:	mov	x0, x21
  441860:	bl	404900 <strcmp@plt>
  441864:	cbz	w0, 441b30 <_obstack_memory_used@@Base+0x6338>
  441868:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  44186c:	add	x1, x1, #0xd8a
  441870:	mov	x0, x21
  441874:	bl	404900 <strcmp@plt>
  441878:	cbz	w0, 441bac <_obstack_memory_used@@Base+0x63b4>
  44187c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  441880:	add	x1, x1, #0xd90
  441884:	mov	x0, x21
  441888:	bl	404900 <strcmp@plt>
  44188c:	cbz	w0, 441c28 <_obstack_memory_used@@Base+0x6430>
  441890:	mov	w0, #0x4                   	// #4
  441894:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441898:	bl	404930 <__ctype_b_loc@plt>
  44189c:	ldr	x8, [x0]
  4418a0:	mov	x9, xzr
  4418a4:	mov	w10, #0x1                   	// #1
  4418a8:	cbnz	x20, 441af8 <_obstack_memory_used@@Base+0x6300>
  4418ac:	ldrh	w11, [x8, x9, lsl #1]
  4418b0:	tbz	w11, #3, 4418c8 <_obstack_memory_used@@Base+0x60d0>
  4418b4:	ubfx	x11, x9, #6, #2
  4418b8:	ldr	x12, [x19, x11, lsl #3]
  4418bc:	lsl	x13, x10, x9
  4418c0:	orr	x12, x12, x13
  4418c4:	str	x12, [x19, x11, lsl #3]
  4418c8:	add	x9, x9, #0x1
  4418cc:	cmp	x9, #0x100
  4418d0:	b.ne	4418ac <_obstack_memory_used@@Base+0x60b4>  // b.any
  4418d4:	b	441a14 <_obstack_memory_used@@Base+0x621c>
  4418d8:	bl	404930 <__ctype_b_loc@plt>
  4418dc:	ldr	x8, [x0]
  4418e0:	mov	x9, xzr
  4418e4:	mov	w10, #0x1                   	// #1
  4418e8:	cbnz	x20, 441b74 <_obstack_memory_used@@Base+0x637c>
  4418ec:	ldrh	w11, [x8, x9, lsl #1]
  4418f0:	tbz	w11, #1, 441908 <_obstack_memory_used@@Base+0x6110>
  4418f4:	ubfx	x11, x9, #6, #2
  4418f8:	ldr	x12, [x19, x11, lsl #3]
  4418fc:	lsl	x13, x10, x9
  441900:	orr	x12, x12, x13
  441904:	str	x12, [x19, x11, lsl #3]
  441908:	add	x9, x9, #0x1
  44190c:	cmp	x9, #0x100
  441910:	b.ne	4418ec <_obstack_memory_used@@Base+0x60f4>  // b.any
  441914:	b	441a14 <_obstack_memory_used@@Base+0x621c>
  441918:	bl	404930 <__ctype_b_loc@plt>
  44191c:	ldr	x8, [x0]
  441920:	mov	x9, xzr
  441924:	mov	w10, #0x1                   	// #1
  441928:	cbnz	x20, 441bf0 <_obstack_memory_used@@Base+0x63f8>
  44192c:	ldrh	w11, [x8, x9, lsl #1]
  441930:	tbz	w11, #9, 441948 <_obstack_memory_used@@Base+0x6150>
  441934:	ubfx	x11, x9, #6, #2
  441938:	ldr	x12, [x19, x11, lsl #3]
  44193c:	lsl	x13, x10, x9
  441940:	orr	x12, x12, x13
  441944:	str	x12, [x19, x11, lsl #3]
  441948:	add	x9, x9, #0x1
  44194c:	cmp	x9, #0x100
  441950:	b.ne	44192c <_obstack_memory_used@@Base+0x6134>  // b.any
  441954:	b	441a14 <_obstack_memory_used@@Base+0x621c>
  441958:	bl	404930 <__ctype_b_loc@plt>
  44195c:	ldr	x8, [x0]
  441960:	mov	x9, xzr
  441964:	mov	w10, #0x1                   	// #1
  441968:	cbnz	x20, 441c6c <_obstack_memory_used@@Base+0x6474>
  44196c:	ldrh	w11, [x8, x9, lsl #1]
  441970:	tbz	w11, #13, 441988 <_obstack_memory_used@@Base+0x6190>
  441974:	ubfx	x11, x9, #6, #2
  441978:	ldr	x12, [x19, x11, lsl #3]
  44197c:	lsl	x13, x10, x9
  441980:	orr	x12, x12, x13
  441984:	str	x12, [x19, x11, lsl #3]
  441988:	add	x9, x9, #0x1
  44198c:	cmp	x9, #0x100
  441990:	b.ne	44196c <_obstack_memory_used@@Base+0x6174>  // b.any
  441994:	b	441a14 <_obstack_memory_used@@Base+0x621c>
  441998:	bl	404930 <__ctype_b_loc@plt>
  44199c:	ldr	x8, [x0]
  4419a0:	mov	x9, xzr
  4419a4:	mov	w10, #0x1                   	// #1
  4419a8:	cbnz	x20, 441ca4 <_obstack_memory_used@@Base+0x64ac>
  4419ac:	ldrh	w11, [x8, x9, lsl #1]
  4419b0:	tbz	w11, #10, 4419c8 <_obstack_memory_used@@Base+0x61d0>
  4419b4:	ubfx	x11, x9, #6, #2
  4419b8:	ldr	x12, [x19, x11, lsl #3]
  4419bc:	lsl	x13, x10, x9
  4419c0:	orr	x12, x12, x13
  4419c4:	str	x12, [x19, x11, lsl #3]
  4419c8:	add	x9, x9, #0x1
  4419cc:	cmp	x9, #0x100
  4419d0:	b.ne	4419ac <_obstack_memory_used@@Base+0x61b4>  // b.any
  4419d4:	b	441a14 <_obstack_memory_used@@Base+0x621c>
  4419d8:	bl	404930 <__ctype_b_loc@plt>
  4419dc:	ldr	x8, [x0]
  4419e0:	mov	x9, xzr
  4419e4:	mov	w10, #0x1                   	// #1
  4419e8:	cbnz	x20, 441cdc <_obstack_memory_used@@Base+0x64e4>
  4419ec:	ldrh	w11, [x8, x9, lsl #1]
  4419f0:	tbz	w11, #11, 441a08 <_obstack_memory_used@@Base+0x6210>
  4419f4:	ubfx	x11, x9, #6, #2
  4419f8:	ldr	x12, [x19, x11, lsl #3]
  4419fc:	lsl	x13, x10, x9
  441a00:	orr	x12, x12, x13
  441a04:	str	x12, [x19, x11, lsl #3]
  441a08:	add	x9, x9, #0x1
  441a0c:	cmp	x9, #0x100
  441a10:	b.ne	4419ec <_obstack_memory_used@@Base+0x61f4>  // b.any
  441a14:	mov	w0, wzr
  441a18:	ldp	x20, x19, [sp, #48]
  441a1c:	ldp	x22, x21, [sp, #32]
  441a20:	ldp	x24, x23, [sp, #16]
  441a24:	ldp	x29, x30, [sp], #64
  441a28:	ret
  441a2c:	bl	404930 <__ctype_b_loc@plt>
  441a30:	ldr	x8, [x0]
  441a34:	mov	x9, xzr
  441a38:	mov	w10, #0x1                   	// #1
  441a3c:	cbnz	x20, 441d38 <_obstack_memory_used@@Base+0x6540>
  441a40:	ldrh	w11, [x8, x9, lsl #1]
  441a44:	tbz	w11, #14, 441a5c <_obstack_memory_used@@Base+0x6264>
  441a48:	ubfx	x11, x9, #6, #2
  441a4c:	ldr	x12, [x19, x11, lsl #3]
  441a50:	lsl	x13, x10, x9
  441a54:	orr	x12, x12, x13
  441a58:	str	x12, [x19, x11, lsl #3]
  441a5c:	add	x9, x9, #0x1
  441a60:	cmp	x9, #0x100
  441a64:	mov	w0, wzr
  441a68:	b.ne	441a40 <_obstack_memory_used@@Base+0x6248>  // b.any
  441a6c:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441a70:	bl	404930 <__ctype_b_loc@plt>
  441a74:	ldr	x8, [x0]
  441a78:	mov	x9, xzr
  441a7c:	mov	w10, #0x1                   	// #1
  441a80:	cbnz	x20, 441d70 <_obstack_memory_used@@Base+0x6578>
  441a84:	ldrh	w11, [x8, x9, lsl #1]
  441a88:	tbz	w11, #8, 441aa0 <_obstack_memory_used@@Base+0x62a8>
  441a8c:	ubfx	x11, x9, #6, #2
  441a90:	ldr	x12, [x19, x11, lsl #3]
  441a94:	lsl	x13, x10, x9
  441a98:	orr	x12, x12, x13
  441a9c:	str	x12, [x19, x11, lsl #3]
  441aa0:	add	x9, x9, #0x1
  441aa4:	cmp	x9, #0x100
  441aa8:	mov	w0, wzr
  441aac:	b.ne	441a84 <_obstack_memory_used@@Base+0x628c>  // b.any
  441ab0:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441ab4:	bl	404930 <__ctype_b_loc@plt>
  441ab8:	ldr	x8, [x0]
  441abc:	mov	x9, xzr
  441ac0:	mov	w10, #0x1                   	// #1
  441ac4:	cbnz	x20, 441da8 <_obstack_memory_used@@Base+0x65b0>
  441ac8:	ldrh	w11, [x8, x9, lsl #1]
  441acc:	tbz	w11, #0, 441ae4 <_obstack_memory_used@@Base+0x62ec>
  441ad0:	ubfx	x11, x9, #6, #2
  441ad4:	ldr	x12, [x19, x11, lsl #3]
  441ad8:	lsl	x13, x10, x9
  441adc:	orr	x12, x12, x13
  441ae0:	str	x12, [x19, x11, lsl #3]
  441ae4:	add	x9, x9, #0x1
  441ae8:	cmp	x9, #0x100
  441aec:	mov	w0, wzr
  441af0:	b.ne	441ac8 <_obstack_memory_used@@Base+0x62d0>  // b.any
  441af4:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441af8:	ldrh	w11, [x8, x9, lsl #1]
  441afc:	tbz	w11, #3, 441b1c <_obstack_memory_used@@Base+0x6324>
  441b00:	ldrb	w11, [x20, x9]
  441b04:	lsr	x12, x11, #3
  441b08:	and	x12, x12, #0x18
  441b0c:	ldr	x13, [x19, x12]
  441b10:	lsl	x11, x10, x11
  441b14:	orr	x11, x11, x13
  441b18:	str	x11, [x19, x12]
  441b1c:	add	x9, x9, #0x1
  441b20:	cmp	x9, #0x100
  441b24:	mov	w0, wzr
  441b28:	b.ne	441af8 <_obstack_memory_used@@Base+0x6300>  // b.any
  441b2c:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441b30:	bl	404930 <__ctype_b_loc@plt>
  441b34:	ldr	x8, [x0]
  441b38:	mov	x9, xzr
  441b3c:	mov	w10, #0x1                   	// #1
  441b40:	cbnz	x20, 441de0 <_obstack_memory_used@@Base+0x65e8>
  441b44:	ldrsh	w11, [x8, x9, lsl #1]
  441b48:	tbz	w11, #31, 441b60 <_obstack_memory_used@@Base+0x6368>
  441b4c:	ubfx	x11, x9, #6, #2
  441b50:	ldr	x12, [x19, x11, lsl #3]
  441b54:	lsl	x13, x10, x9
  441b58:	orr	x12, x12, x13
  441b5c:	str	x12, [x19, x11, lsl #3]
  441b60:	add	x9, x9, #0x1
  441b64:	cmp	x9, #0x100
  441b68:	mov	w0, wzr
  441b6c:	b.ne	441b44 <_obstack_memory_used@@Base+0x634c>  // b.any
  441b70:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441b74:	ldrh	w11, [x8, x9, lsl #1]
  441b78:	tbz	w11, #1, 441b98 <_obstack_memory_used@@Base+0x63a0>
  441b7c:	ldrb	w11, [x20, x9]
  441b80:	lsr	x12, x11, #3
  441b84:	and	x12, x12, #0x18
  441b88:	ldr	x13, [x19, x12]
  441b8c:	lsl	x11, x10, x11
  441b90:	orr	x11, x11, x13
  441b94:	str	x11, [x19, x12]
  441b98:	add	x9, x9, #0x1
  441b9c:	cmp	x9, #0x100
  441ba0:	mov	w0, wzr
  441ba4:	b.ne	441b74 <_obstack_memory_used@@Base+0x637c>  // b.any
  441ba8:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441bac:	bl	404930 <__ctype_b_loc@plt>
  441bb0:	ldr	x8, [x0]
  441bb4:	mov	x9, xzr
  441bb8:	mov	w10, #0x1                   	// #1
  441bbc:	cbnz	x20, 441e18 <_obstack_memory_used@@Base+0x6620>
  441bc0:	ldrh	w11, [x8, x9, lsl #1]
  441bc4:	tbz	w11, #2, 441bdc <_obstack_memory_used@@Base+0x63e4>
  441bc8:	ubfx	x11, x9, #6, #2
  441bcc:	ldr	x12, [x19, x11, lsl #3]
  441bd0:	lsl	x13, x10, x9
  441bd4:	orr	x12, x12, x13
  441bd8:	str	x12, [x19, x11, lsl #3]
  441bdc:	add	x9, x9, #0x1
  441be0:	cmp	x9, #0x100
  441be4:	mov	w0, wzr
  441be8:	b.ne	441bc0 <_obstack_memory_used@@Base+0x63c8>  // b.any
  441bec:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441bf0:	ldrh	w11, [x8, x9, lsl #1]
  441bf4:	tbz	w11, #9, 441c14 <_obstack_memory_used@@Base+0x641c>
  441bf8:	ldrb	w11, [x20, x9]
  441bfc:	lsr	x12, x11, #3
  441c00:	and	x12, x12, #0x18
  441c04:	ldr	x13, [x19, x12]
  441c08:	lsl	x11, x10, x11
  441c0c:	orr	x11, x11, x13
  441c10:	str	x11, [x19, x12]
  441c14:	add	x9, x9, #0x1
  441c18:	cmp	x9, #0x100
  441c1c:	mov	w0, wzr
  441c20:	b.ne	441bf0 <_obstack_memory_used@@Base+0x63f8>  // b.any
  441c24:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441c28:	bl	404930 <__ctype_b_loc@plt>
  441c2c:	ldr	x8, [x0]
  441c30:	mov	x9, xzr
  441c34:	mov	w10, #0x1                   	// #1
  441c38:	cbnz	x20, 441e50 <_obstack_memory_used@@Base+0x6658>
  441c3c:	ldrh	w11, [x8, x9, lsl #1]
  441c40:	tbz	w11, #12, 441c58 <_obstack_memory_used@@Base+0x6460>
  441c44:	ubfx	x11, x9, #6, #2
  441c48:	ldr	x12, [x19, x11, lsl #3]
  441c4c:	lsl	x13, x10, x9
  441c50:	orr	x12, x12, x13
  441c54:	str	x12, [x19, x11, lsl #3]
  441c58:	add	x9, x9, #0x1
  441c5c:	cmp	x9, #0x100
  441c60:	mov	w0, wzr
  441c64:	b.ne	441c3c <_obstack_memory_used@@Base+0x6444>  // b.any
  441c68:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441c6c:	ldrh	w11, [x8, x9, lsl #1]
  441c70:	tbz	w11, #13, 441c90 <_obstack_memory_used@@Base+0x6498>
  441c74:	ldrb	w11, [x20, x9]
  441c78:	lsr	x12, x11, #3
  441c7c:	and	x12, x12, #0x18
  441c80:	ldr	x13, [x19, x12]
  441c84:	lsl	x11, x10, x11
  441c88:	orr	x11, x11, x13
  441c8c:	str	x11, [x19, x12]
  441c90:	add	x9, x9, #0x1
  441c94:	cmp	x9, #0x100
  441c98:	mov	w0, wzr
  441c9c:	b.ne	441c6c <_obstack_memory_used@@Base+0x6474>  // b.any
  441ca0:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441ca4:	ldrh	w11, [x8, x9, lsl #1]
  441ca8:	tbz	w11, #10, 441cc8 <_obstack_memory_used@@Base+0x64d0>
  441cac:	ldrb	w11, [x20, x9]
  441cb0:	lsr	x12, x11, #3
  441cb4:	and	x12, x12, #0x18
  441cb8:	ldr	x13, [x19, x12]
  441cbc:	lsl	x11, x10, x11
  441cc0:	orr	x11, x11, x13
  441cc4:	str	x11, [x19, x12]
  441cc8:	add	x9, x9, #0x1
  441ccc:	cmp	x9, #0x100
  441cd0:	mov	w0, wzr
  441cd4:	b.ne	441ca4 <_obstack_memory_used@@Base+0x64ac>  // b.any
  441cd8:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441cdc:	ldrh	w11, [x8, x9, lsl #1]
  441ce0:	tbz	w11, #11, 441d00 <_obstack_memory_used@@Base+0x6508>
  441ce4:	ldrb	w11, [x20, x9]
  441ce8:	lsr	x12, x11, #3
  441cec:	and	x12, x12, #0x18
  441cf0:	ldr	x13, [x19, x12]
  441cf4:	lsl	x11, x10, x11
  441cf8:	orr	x11, x11, x13
  441cfc:	str	x11, [x19, x12]
  441d00:	add	x9, x9, #0x1
  441d04:	cmp	x9, #0x100
  441d08:	mov	w0, wzr
  441d0c:	b.ne	441cdc <_obstack_memory_used@@Base+0x64e4>  // b.any
  441d10:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441d14:	ldr	x0, [x22, #24]
  441d18:	mov	w24, #0x1                   	// #1
  441d1c:	bfi	x24, x8, #1, #63
  441d20:	lsl	x1, x24, #3
  441d24:	bl	404710 <realloc@plt>
  441d28:	cbz	x0, 441e88 <_obstack_memory_used@@Base+0x6690>
  441d2c:	str	x0, [x22, #24]
  441d30:	str	x24, [x23]
  441d34:	b	441784 <_obstack_memory_used@@Base+0x5f8c>
  441d38:	ldrh	w11, [x8, x9, lsl #1]
  441d3c:	tbz	w11, #14, 441d5c <_obstack_memory_used@@Base+0x6564>
  441d40:	ldrb	w11, [x20, x9]
  441d44:	lsr	x12, x11, #3
  441d48:	and	x12, x12, #0x18
  441d4c:	ldr	x13, [x19, x12]
  441d50:	lsl	x11, x10, x11
  441d54:	orr	x11, x11, x13
  441d58:	str	x11, [x19, x12]
  441d5c:	add	x9, x9, #0x1
  441d60:	cmp	x9, #0x100
  441d64:	mov	w0, wzr
  441d68:	b.ne	441d38 <_obstack_memory_used@@Base+0x6540>  // b.any
  441d6c:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441d70:	ldrh	w11, [x8, x9, lsl #1]
  441d74:	tbz	w11, #8, 441d94 <_obstack_memory_used@@Base+0x659c>
  441d78:	ldrb	w11, [x20, x9]
  441d7c:	lsr	x12, x11, #3
  441d80:	and	x12, x12, #0x18
  441d84:	ldr	x13, [x19, x12]
  441d88:	lsl	x11, x10, x11
  441d8c:	orr	x11, x11, x13
  441d90:	str	x11, [x19, x12]
  441d94:	add	x9, x9, #0x1
  441d98:	cmp	x9, #0x100
  441d9c:	mov	w0, wzr
  441da0:	b.ne	441d70 <_obstack_memory_used@@Base+0x6578>  // b.any
  441da4:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441da8:	ldrh	w11, [x8, x9, lsl #1]
  441dac:	tbz	w11, #0, 441dcc <_obstack_memory_used@@Base+0x65d4>
  441db0:	ldrb	w11, [x20, x9]
  441db4:	lsr	x12, x11, #3
  441db8:	and	x12, x12, #0x18
  441dbc:	ldr	x13, [x19, x12]
  441dc0:	lsl	x11, x10, x11
  441dc4:	orr	x11, x11, x13
  441dc8:	str	x11, [x19, x12]
  441dcc:	add	x9, x9, #0x1
  441dd0:	cmp	x9, #0x100
  441dd4:	mov	w0, wzr
  441dd8:	b.ne	441da8 <_obstack_memory_used@@Base+0x65b0>  // b.any
  441ddc:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441de0:	ldrsh	w11, [x8, x9, lsl #1]
  441de4:	tbz	w11, #31, 441e04 <_obstack_memory_used@@Base+0x660c>
  441de8:	ldrb	w11, [x20, x9]
  441dec:	lsr	x12, x11, #3
  441df0:	and	x12, x12, #0x18
  441df4:	ldr	x13, [x19, x12]
  441df8:	lsl	x11, x10, x11
  441dfc:	orr	x11, x11, x13
  441e00:	str	x11, [x19, x12]
  441e04:	add	x9, x9, #0x1
  441e08:	cmp	x9, #0x100
  441e0c:	mov	w0, wzr
  441e10:	b.ne	441de0 <_obstack_memory_used@@Base+0x65e8>  // b.any
  441e14:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441e18:	ldrh	w11, [x8, x9, lsl #1]
  441e1c:	tbz	w11, #2, 441e3c <_obstack_memory_used@@Base+0x6644>
  441e20:	ldrb	w11, [x20, x9]
  441e24:	lsr	x12, x11, #3
  441e28:	and	x12, x12, #0x18
  441e2c:	ldr	x13, [x19, x12]
  441e30:	lsl	x11, x10, x11
  441e34:	orr	x11, x11, x13
  441e38:	str	x11, [x19, x12]
  441e3c:	add	x9, x9, #0x1
  441e40:	cmp	x9, #0x100
  441e44:	mov	w0, wzr
  441e48:	b.ne	441e18 <_obstack_memory_used@@Base+0x6620>  // b.any
  441e4c:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441e50:	ldrh	w11, [x8, x9, lsl #1]
  441e54:	tbz	w11, #12, 441e74 <_obstack_memory_used@@Base+0x667c>
  441e58:	ldrb	w11, [x20, x9]
  441e5c:	lsr	x12, x11, #3
  441e60:	and	x12, x12, #0x18
  441e64:	ldr	x13, [x19, x12]
  441e68:	lsl	x11, x10, x11
  441e6c:	orr	x11, x11, x13
  441e70:	str	x11, [x19, x12]
  441e74:	add	x9, x9, #0x1
  441e78:	cmp	x9, #0x100
  441e7c:	mov	w0, wzr
  441e80:	b.ne	441e50 <_obstack_memory_used@@Base+0x6658>  // b.any
  441e84:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441e88:	mov	w0, #0xc                   	// #12
  441e8c:	b	441a18 <_obstack_memory_used@@Base+0x6220>
  441e90:	stp	x29, x30, [sp, #-80]!
  441e94:	str	x25, [sp, #16]
  441e98:	stp	x24, x23, [sp, #32]
  441e9c:	stp	x22, x21, [sp, #48]
  441ea0:	stp	x20, x19, [sp, #64]
  441ea4:	mov	x19, x2
  441ea8:	mov	x20, x1
  441eac:	mov	x21, x0
  441eb0:	mov	x9, #0xffffffffffffffff    	// #-1
  441eb4:	mov	w23, #0xa                   	// #10
  441eb8:	mov	w24, #0x8030                	// #32816
  441ebc:	mov	w25, #0x8000                	// #32768
  441ec0:	mov	x29, sp
  441ec4:	mov	x0, x20
  441ec8:	mov	x1, x21
  441ecc:	mov	x2, x19
  441ed0:	mov	x22, x9
  441ed4:	bl	43f650 <_obstack_memory_used@@Base+0x3e58>
  441ed8:	ldr	x8, [x21, #72]
  441edc:	add	x8, x8, w0, sxtw
  441ee0:	str	x8, [x21, #72]
  441ee4:	ldrb	w10, [x20, #8]
  441ee8:	cmp	w10, #0x18
  441eec:	b.eq	441f54 <_obstack_memory_used@@Base+0x675c>  // b.none
  441ef0:	cmp	w10, #0x2
  441ef4:	b.eq	441f50 <_obstack_memory_used@@Base+0x6758>  // b.none
  441ef8:	ldrb	w8, [x20]
  441efc:	cmp	w8, #0x2c
  441f00:	b.eq	441f54 <_obstack_memory_used@@Base+0x675c>  // b.none
  441f04:	cmp	w8, #0x30
  441f08:	mov	x9, #0xfffffffffffffffe    	// #-2
  441f0c:	b.cc	441ec4 <_obstack_memory_used@@Base+0x66cc>  // b.lo, b.ul, b.last
  441f10:	cmp	w10, #0x1
  441f14:	b.ne	441ec4 <_obstack_memory_used@@Base+0x66cc>  // b.any
  441f18:	cmn	x22, #0x2
  441f1c:	mov	x9, #0xfffffffffffffffe    	// #-2
  441f20:	b.eq	441ec4 <_obstack_memory_used@@Base+0x66cc>  // b.none
  441f24:	cmp	w8, #0x39
  441f28:	b.hi	441ec4 <_obstack_memory_used@@Base+0x66cc>  // b.pmore
  441f2c:	cmn	x22, #0x1
  441f30:	b.eq	441f48 <_obstack_memory_used@@Base+0x6750>  // b.none
  441f34:	madd	x8, x22, x23, x8
  441f38:	sub	x9, x8, #0x30
  441f3c:	cmp	x8, x24
  441f40:	csel	x9, x25, x9, gt
  441f44:	b	441ec4 <_obstack_memory_used@@Base+0x66cc>
  441f48:	sub	x9, x8, #0x30
  441f4c:	b	441ec4 <_obstack_memory_used@@Base+0x66cc>
  441f50:	mov	x22, #0xfffffffffffffffe    	// #-2
  441f54:	mov	x0, x22
  441f58:	ldp	x20, x19, [sp, #64]
  441f5c:	ldp	x22, x21, [sp, #48]
  441f60:	ldp	x24, x23, [sp, #32]
  441f64:	ldr	x25, [sp, #16]
  441f68:	ldp	x29, x30, [sp], #80
  441f6c:	ret
  441f70:	stp	x29, x30, [sp, #-64]!
  441f74:	str	x23, [sp, #16]
  441f78:	stp	x22, x21, [sp, #32]
  441f7c:	stp	x20, x19, [sp, #48]
  441f80:	mov	x3, x0
  441f84:	ldr	x22, [x3], #40
  441f88:	mov	x21, x0
  441f8c:	mov	x19, x1
  441f90:	mov	x0, x1
  441f94:	mov	x1, xzr
  441f98:	mov	x2, xzr
  441f9c:	mov	x29, sp
  441fa0:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  441fa4:	mov	x20, x0
  441fa8:	str	x0, [x29, #24]
  441fac:	cbz	x0, 44202c <_obstack_memory_used@@Base+0x6834>
  441fb0:	add	x23, x29, #0x18
  441fb4:	mov	x0, x20
  441fb8:	str	x22, [x0]
  441fbc:	ldr	x8, [x23]
  441fc0:	ldr	w9, [x8, #48]
  441fc4:	orr	w9, w9, #0x40000
  441fc8:	str	w9, [x8, #48]
  441fcc:	ldr	x8, [x21, #8]
  441fd0:	ldr	x22, [x23]
  441fd4:	cbz	x8, 441ff0 <_obstack_memory_used@@Base+0x67f8>
  441fd8:	add	x23, x22, #0x8
  441fdc:	mov	x21, x8
  441fe0:	b	44200c <_obstack_memory_used@@Base+0x6814>
  441fe4:	ldr	x21, [x8]
  441fe8:	ldr	x22, [x22]
  441fec:	cbz	x21, 44202c <_obstack_memory_used@@Base+0x6834>
  441ff0:	mov	x9, x8
  441ff4:	mov	x8, x21
  441ff8:	ldr	x21, [x21, #16]
  441ffc:	cmp	x21, x9
  442000:	b.eq	441fe4 <_obstack_memory_used@@Base+0x67ec>  // b.none
  442004:	cbz	x21, 441fe4 <_obstack_memory_used@@Base+0x67ec>
  442008:	add	x23, x22, #0x10
  44200c:	add	x3, x21, #0x28
  442010:	mov	x0, x19
  442014:	mov	x1, xzr
  442018:	mov	x2, xzr
  44201c:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  442020:	str	x0, [x23]
  442024:	cbnz	x0, 441fb8 <_obstack_memory_used@@Base+0x67c0>
  442028:	mov	x20, xzr
  44202c:	mov	x0, x20
  442030:	ldp	x20, x19, [sp, #48]
  442034:	ldp	x22, x21, [sp, #32]
  442038:	ldr	x23, [sp, #16]
  44203c:	ldp	x29, x30, [sp], #64
  442040:	ret
  442044:	stp	x29, x30, [sp, #-48]!
  442048:	stp	x22, x21, [sp, #16]
  44204c:	mov	x21, x0
  442050:	stp	x20, x19, [sp, #32]
  442054:	mov	x20, x1
  442058:	mov	x0, x2
  44205c:	mov	x1, x21
  442060:	mov	x29, sp
  442064:	mov	x19, x2
  442068:	blr	x20
  44206c:	cbnz	w0, 4420b8 <_obstack_memory_used@@Base+0x68c0>
  442070:	ldr	x22, [x21, #8]
  442074:	cbz	x22, 442090 <_obstack_memory_used@@Base+0x6898>
  442078:	mov	x0, x19
  44207c:	mov	x1, x22
  442080:	blr	x20
  442084:	mov	x21, x22
  442088:	cbz	w0, 442070 <_obstack_memory_used@@Base+0x6878>
  44208c:	b	4420b8 <_obstack_memory_used@@Base+0x68c0>
  442090:	mov	x8, xzr
  442094:	ldr	x22, [x21, #16]
  442098:	mov	x9, x8
  44209c:	mov	x8, x21
  4420a0:	cmp	x22, x9
  4420a4:	b.eq	4420ac <_obstack_memory_used@@Base+0x68b4>  // b.none
  4420a8:	cbnz	x22, 442078 <_obstack_memory_used@@Base+0x6880>
  4420ac:	ldr	x21, [x8]
  4420b0:	cbnz	x21, 442094 <_obstack_memory_used@@Base+0x689c>
  4420b4:	mov	w0, wzr
  4420b8:	ldp	x20, x19, [sp, #32]
  4420bc:	ldp	x22, x21, [sp, #16]
  4420c0:	ldp	x29, x30, [sp], #48
  4420c4:	ret
  4420c8:	ldrb	w8, [x1, #48]
  4420cc:	cmp	w8, #0x11
  4420d0:	b.eq	44210c <_obstack_memory_used@@Base+0x6914>  // b.none
  4420d4:	cmp	w8, #0x4
  4420d8:	b.ne	442160 <_obstack_memory_used@@Base+0x6968>  // b.any
  4420dc:	ldr	x8, [x0, #224]
  4420e0:	cbz	x8, 442160 <_obstack_memory_used@@Base+0x6968>
  4420e4:	ldr	x9, [x1, #40]
  4420e8:	mov	w10, #0x1                   	// #1
  4420ec:	sbfiz	x9, x9, #3, #32
  4420f0:	ldr	x8, [x8, x9]
  4420f4:	str	x8, [x1, #40]
  4420f8:	ldr	x9, [x0, #160]
  4420fc:	lsl	w8, w10, w8
  442100:	sxtw	x8, w8
  442104:	orr	x8, x9, x8
  442108:	b	44215c <_obstack_memory_used@@Base+0x6964>
  44210c:	ldr	x8, [x1, #8]
  442110:	cbz	x8, 442160 <_obstack_memory_used@@Base+0x6968>
  442114:	ldrb	w9, [x8, #48]
  442118:	cmp	w9, #0x11
  44211c:	b.ne	442160 <_obstack_memory_used@@Base+0x6968>  // b.any
  442120:	ldr	x9, [x8, #8]
  442124:	ldr	x8, [x8, #40]
  442128:	str	x9, [x1, #8]
  44212c:	cbz	x9, 442134 <_obstack_memory_used@@Base+0x693c>
  442130:	str	x1, [x9]
  442134:	ldr	x9, [x0, #224]
  442138:	ldr	x10, [x1, #40]
  44213c:	cmp	x8, #0x3f
  442140:	ldr	x10, [x9, x10, lsl #3]
  442144:	str	x10, [x9, x8, lsl #3]
  442148:	b.gt	442160 <_obstack_memory_used@@Base+0x6968>
  44214c:	ldr	x9, [x0, #160]
  442150:	mov	w10, #0x1                   	// #1
  442154:	lsl	x8, x10, x8
  442158:	bic	x8, x9, x8
  44215c:	str	x8, [x0, #160]
  442160:	mov	w0, wzr
  442164:	ret
  442168:	sub	sp, sp, #0x30
  44216c:	stp	x29, x30, [sp, #16]
  442170:	add	x29, sp, #0x10
  442174:	stp	x20, x19, [sp, #32]
  442178:	stur	wzr, [x29, #-4]
  44217c:	ldr	x2, [x1, #8]
  442180:	mov	x19, x1
  442184:	mov	x20, x0
  442188:	cbz	x2, 4421b0 <_obstack_memory_used@@Base+0x69b8>
  44218c:	ldrb	w8, [x2, #48]
  442190:	cmp	w8, #0x11
  442194:	b.ne	4421b0 <_obstack_memory_used@@Base+0x69b8>  // b.any
  442198:	sub	x0, x29, #0x4
  44219c:	mov	x1, x20
  4421a0:	bl	442520 <_obstack_memory_used@@Base+0x6d28>
  4421a4:	str	x0, [x19, #8]
  4421a8:	cbz	x0, 4421b0 <_obstack_memory_used@@Base+0x69b8>
  4421ac:	str	x19, [x0]
  4421b0:	ldr	x2, [x19, #16]
  4421b4:	cbz	x2, 4421dc <_obstack_memory_used@@Base+0x69e4>
  4421b8:	ldrb	w8, [x2, #48]
  4421bc:	cmp	w8, #0x11
  4421c0:	b.ne	4421dc <_obstack_memory_used@@Base+0x69e4>  // b.any
  4421c4:	sub	x0, x29, #0x4
  4421c8:	mov	x1, x20
  4421cc:	bl	442520 <_obstack_memory_used@@Base+0x6d28>
  4421d0:	str	x0, [x19, #16]
  4421d4:	cbz	x0, 4421dc <_obstack_memory_used@@Base+0x69e4>
  4421d8:	str	x19, [x0]
  4421dc:	ldur	w0, [x29, #-4]
  4421e0:	ldp	x20, x19, [sp, #32]
  4421e4:	ldp	x29, x30, [sp, #16]
  4421e8:	add	sp, sp, #0x30
  4421ec:	ret
  4421f0:	stp	x29, x30, [sp, #-32]!
  4421f4:	stp	x20, x19, [sp, #16]
  4421f8:	ldrb	w8, [x1, #48]
  4421fc:	mov	x19, x1
  442200:	mov	x29, sp
  442204:	cmp	w8, #0x10
  442208:	b.ne	442228 <_obstack_memory_used@@Base+0x6a30>  // b.any
  44220c:	ldr	x8, [x19, #8]
  442210:	mov	w0, wzr
  442214:	ldr	x9, [x8, #24]
  442218:	str	x9, [x19, #24]
  44221c:	ldr	x8, [x8, #56]
  442220:	str	x8, [x19, #56]
  442224:	b	442278 <_obstack_memory_used@@Base+0x6a80>
  442228:	ldp	x1, x2, [x19, #40]
  44222c:	mov	x20, x0
  442230:	str	x19, [x19, #24]
  442234:	bl	44266c <_obstack_memory_used@@Base+0x6e74>
  442238:	cmn	x0, #0x1
  44223c:	str	x0, [x19, #56]
  442240:	b.eq	442284 <_obstack_memory_used@@Base+0x6a8c>  // b.none
  442244:	ldrb	w9, [x19, #48]
  442248:	cmp	w9, #0xc
  44224c:	b.ne	442274 <_obstack_memory_used@@Base+0x6a7c>  // b.any
  442250:	ldr	x9, [x20]
  442254:	mov	x8, x0
  442258:	ldr	w10, [x19, #40]
  44225c:	mov	w0, wzr
  442260:	add	x8, x9, x8, lsl #4
  442264:	ldr	w9, [x8, #8]
  442268:	bfi	w9, w10, #8, #10
  44226c:	str	w9, [x8, #8]
  442270:	b	442278 <_obstack_memory_used@@Base+0x6a80>
  442274:	mov	w0, wzr
  442278:	ldp	x20, x19, [sp, #16]
  44227c:	ldp	x29, x30, [sp], #32
  442280:	ret
  442284:	mov	w0, #0xc                   	// #12
  442288:	b	442278 <_obstack_memory_used@@Base+0x6a80>
  44228c:	ldrb	w8, [x1, #48]
  442290:	cmp	w8, #0x10
  442294:	b.eq	4422ac <_obstack_memory_used@@Base+0x6ab4>  // b.none
  442298:	cmp	w8, #0xb
  44229c:	b.ne	4422bc <_obstack_memory_used@@Base+0x6ac4>  // b.any
  4422a0:	ldr	x8, [x1, #8]
  4422a4:	str	x1, [x8, #32]
  4422a8:	b	4422dc <_obstack_memory_used@@Base+0x6ae4>
  4422ac:	ldp	x9, x8, [x1, #8]
  4422b0:	ldr	x10, [x8, #24]
  4422b4:	str	x10, [x9, #32]
  4422b8:	b	4422d4 <_obstack_memory_used@@Base+0x6adc>
  4422bc:	ldr	x8, [x1, #8]
  4422c0:	cbz	x8, 4422cc <_obstack_memory_used@@Base+0x6ad4>
  4422c4:	ldr	x9, [x1, #32]
  4422c8:	str	x9, [x8, #32]
  4422cc:	ldr	x8, [x1, #16]
  4422d0:	cbz	x8, 4422dc <_obstack_memory_used@@Base+0x6ae4>
  4422d4:	ldr	x9, [x1, #32]
  4422d8:	str	x9, [x8, #32]
  4422dc:	mov	w0, wzr
  4422e0:	ret
  4422e4:	stp	x29, x30, [sp, #-64]!
  4422e8:	stp	x22, x21, [sp, #32]
  4422ec:	stp	x20, x19, [sp, #48]
  4422f0:	ldr	w9, [x1, #48]
  4422f4:	ldr	x19, [x1, #56]
  4422f8:	str	x23, [sp, #16]
  4422fc:	mov	x29, sp
  442300:	and	w8, w9, #0xff
  442304:	sub	w10, w8, #0x2
  442308:	cmp	w10, #0xe
  44230c:	mov	x8, x0
  442310:	b.hi	442444 <_obstack_memory_used@@Base+0x6c4c>  // b.pmore
  442314:	adrp	x11, 455000 <_obstack_memory_used@@Base+0x19808>
  442318:	add	x11, x11, #0xa79
  44231c:	adr	x12, 442330 <_obstack_memory_used@@Base+0x6b38>
  442320:	ldrb	w13, [x11, x10]
  442324:	add	x12, x12, x13, lsl #2
  442328:	mov	w0, wzr
  44232c:	br	x12
  442330:	ldr	x9, [x1, #32]
  442334:	ldr	x8, [x8, #40]
  442338:	mov	w10, #0x18                  	// #24
  44233c:	ldr	x20, [x9, #56]
  442340:	madd	x19, x19, x10, x8
  442344:	mov	w8, #0x1                   	// #1
  442348:	dup	v0.2d, x8
  44234c:	mov	w0, #0x8                   	// #8
  442350:	str	q0, [x19]
  442354:	bl	4044d0 <malloc@plt>
  442358:	str	x0, [x19, #16]
  44235c:	cbz	x0, 442494 <_obstack_memory_used@@Base+0x6c9c>
  442360:	mov	x8, x0
  442364:	mov	w0, wzr
  442368:	b	4423f8 <_obstack_memory_used@@Base+0x6c00>
  44236c:	ldrb	w9, [x8, #176]
  442370:	add	x10, x1, #0x20
  442374:	orr	w9, w9, #0x1
  442378:	strb	w9, [x8, #176]
  44237c:	ldp	x9, x11, [x1, #8]
  442380:	add	x12, x9, #0x18
  442384:	cmp	x9, #0x0
  442388:	csel	x9, x10, x12, eq  // eq = none
  44238c:	ldr	x9, [x9]
  442390:	cmp	x11, #0x0
  442394:	ldr	x20, [x9, #56]
  442398:	add	x9, x11, #0x18
  44239c:	csel	x9, x10, x9, eq  // eq = none
  4423a0:	tbnz	x20, #63, 4424a0 <_obstack_memory_used@@Base+0x6ca8>
  4423a4:	ldr	x9, [x9]
  4423a8:	ldr	x21, [x9, #56]
  4423ac:	tbnz	x21, #63, 4424c0 <_obstack_memory_used@@Base+0x6cc8>
  4423b0:	ldr	x22, [x8, #40]
  4423b4:	mov	w8, #0x18                  	// #24
  4423b8:	mov	w0, #0x10                  	// #16
  4423bc:	madd	x23, x19, x8, x22
  4423c0:	mov	w8, #0x2                   	// #2
  4423c4:	str	x8, [x23]
  4423c8:	bl	4044d0 <malloc@plt>
  4423cc:	str	x0, [x23, #16]
  4423d0:	cbz	x0, 442498 <_obstack_memory_used@@Base+0x6ca0>
  4423d4:	mov	w9, #0x18                  	// #24
  4423d8:	madd	x9, x19, x9, x22
  4423dc:	mov	x8, x0
  4423e0:	cmp	x20, x21
  4423e4:	add	x9, x9, #0x8
  4423e8:	b.ne	442460 <_obstack_memory_used@@Base+0x6c68>  // b.any
  4423ec:	mov	w10, #0x1                   	// #1
  4423f0:	mov	w0, wzr
  4423f4:	str	x10, [x9]
  4423f8:	str	x20, [x8]
  4423fc:	b	442480 <_obstack_memory_used@@Base+0x6c88>
  442400:	ldr	x9, [x1, #32]
  442404:	ldr	x20, [x9, #56]
  442408:	ldr	x9, [x8, #24]
  44240c:	str	x20, [x9, x19, lsl #3]
  442410:	ldrb	w9, [x1, #48]
  442414:	cmp	w9, #0x4
  442418:	b.ne	44243c <_obstack_memory_used@@Base+0x6c44>  // b.any
  44241c:	ldr	x8, [x8, #40]
  442420:	mov	w9, #0x18                  	// #24
  442424:	mov	w10, #0x1                   	// #1
  442428:	dup	v0.2d, x10
  44242c:	madd	x19, x19, x9, x8
  442430:	b	44234c <_obstack_memory_used@@Base+0x6b54>
  442434:	ldr	x8, [x1, #32]
  442438:	cbnz	x8, 4424e0 <_obstack_memory_used@@Base+0x6ce8>
  44243c:	mov	w0, wzr
  442440:	b	442480 <_obstack_memory_used@@Base+0x6c88>
  442444:	tbnz	w9, #3, 442500 <_obstack_memory_used@@Base+0x6d08>
  442448:	ldr	x9, [x1, #32]
  44244c:	ldr	x8, [x8, #24]
  442450:	mov	w0, wzr
  442454:	ldr	x9, [x9, #56]
  442458:	str	x9, [x8, x19, lsl #3]
  44245c:	b	442480 <_obstack_memory_used@@Base+0x6c88>
  442460:	mov	w10, #0x2                   	// #2
  442464:	cmp	x20, x21
  442468:	mov	w0, wzr
  44246c:	str	x10, [x9]
  442470:	b.ge	44247c <_obstack_memory_used@@Base+0x6c84>  // b.tcont
  442474:	stp	x20, x21, [x8]
  442478:	b	442480 <_obstack_memory_used@@Base+0x6c88>
  44247c:	stp	x21, x20, [x8]
  442480:	ldp	x20, x19, [sp, #48]
  442484:	ldp	x22, x21, [sp, #32]
  442488:	ldr	x23, [sp, #16]
  44248c:	ldp	x29, x30, [sp], #64
  442490:	ret
  442494:	stp	xzr, xzr, [x19]
  442498:	mov	w0, #0xc                   	// #12
  44249c:	b	442480 <_obstack_memory_used@@Base+0x6c88>
  4424a0:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  4424a4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  4424a8:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  4424ac:	add	x0, x0, #0xddd
  4424b0:	add	x1, x1, #0xcee
  4424b4:	add	x3, x3, #0xdaa
  4424b8:	mov	w2, #0x5af                 	// #1455
  4424bc:	bl	404cd0 <__assert_fail@plt>
  4424c0:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  4424c4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  4424c8:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  4424cc:	add	x0, x0, #0xde7
  4424d0:	add	x1, x1, #0xcee
  4424d4:	add	x3, x3, #0xdaa
  4424d8:	mov	w2, #0x5b0                 	// #1456
  4424dc:	bl	404cd0 <__assert_fail@plt>
  4424e0:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  4424e4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  4424e8:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  4424ec:	add	x0, x0, #0xd97
  4424f0:	add	x1, x1, #0xcee
  4424f4:	add	x3, x3, #0xdaa
  4424f8:	mov	w2, #0x59f                 	// #1439
  4424fc:	bl	404cd0 <__assert_fail@plt>
  442500:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  442504:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  442508:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  44250c:	add	x0, x0, #0xdf2
  442510:	add	x1, x1, #0xcee
  442514:	add	x3, x3, #0xdaa
  442518:	mov	w2, #0x5c2                 	// #1474
  44251c:	bl	404cd0 <__assert_fail@plt>
  442520:	sub	sp, sp, #0x60
  442524:	stp	x29, x30, [sp, #16]
  442528:	stp	x24, x23, [sp, #48]
  44252c:	stp	x22, x21, [sp, #64]
  442530:	stp	x20, x19, [sp, #80]
  442534:	ldr	x19, [x2, #8]
  442538:	ldr	x22, [x1]
  44253c:	mov	x20, x2
  442540:	mov	x21, x0
  442544:	str	x25, [sp, #32]
  442548:	add	x29, sp, #0x10
  44254c:	cbz	x19, 442570 <_obstack_memory_used@@Base+0x6d78>
  442550:	ldrb	w8, [x1, #56]
  442554:	tbz	w8, #4, 442570 <_obstack_memory_used@@Base+0x6d78>
  442558:	ldr	x8, [x20, #40]
  44255c:	cmp	x8, #0x3f
  442560:	b.gt	44263c <_obstack_memory_used@@Base+0x6e44>
  442564:	ldr	x9, [x22, #160]
  442568:	lsr	x8, x9, x8
  44256c:	tbz	w8, #0, 44263c <_obstack_memory_used@@Base+0x6e44>
  442570:	mov	w8, #0x8                   	// #8
  442574:	mov	x3, sp
  442578:	mov	x0, x22
  44257c:	mov	x1, xzr
  442580:	mov	x2, xzr
  442584:	str	w8, [sp, #8]
  442588:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  44258c:	mov	x23, x0
  442590:	mov	w8, #0x9                   	// #9
  442594:	mov	x3, sp
  442598:	mov	x0, x22
  44259c:	mov	x1, xzr
  4425a0:	mov	x2, xzr
  4425a4:	str	w8, [sp, #8]
  4425a8:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  4425ac:	mov	x24, x0
  4425b0:	mov	x25, x0
  4425b4:	cbz	x19, 4425d8 <_obstack_memory_used@@Base+0x6de0>
  4425b8:	mov	w8, #0x10                  	// #16
  4425bc:	mov	x3, sp
  4425c0:	mov	x0, x22
  4425c4:	mov	x1, x19
  4425c8:	mov	x2, x24
  4425cc:	str	w8, [sp, #8]
  4425d0:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  4425d4:	mov	x25, x0
  4425d8:	mov	w8, #0x10                  	// #16
  4425dc:	mov	x3, sp
  4425e0:	mov	x0, x22
  4425e4:	mov	x1, x23
  4425e8:	mov	x2, x25
  4425ec:	str	w8, [sp, #8]
  4425f0:	bl	441074 <_obstack_memory_used@@Base+0x587c>
  4425f4:	cbz	x24, 44265c <_obstack_memory_used@@Base+0x6e64>
  4425f8:	cbz	x23, 44265c <_obstack_memory_used@@Base+0x6e64>
  4425fc:	cbz	x25, 44265c <_obstack_memory_used@@Base+0x6e64>
  442600:	mov	x19, x0
  442604:	cbz	x0, 44265c <_obstack_memory_used@@Base+0x6e64>
  442608:	ldr	x8, [x20, #40]
  44260c:	str	x8, [x24, #40]
  442610:	str	x8, [x23, #40]
  442614:	ldr	w8, [x20, #48]
  442618:	ldr	w9, [x24, #48]
  44261c:	and	w8, w8, #0x80000
  442620:	and	w9, w9, #0xfff7ffff
  442624:	orr	w9, w9, w8
  442628:	str	w9, [x24, #48]
  44262c:	ldr	w9, [x23, #48]
  442630:	and	w9, w9, #0xfff7ffff
  442634:	orr	w8, w9, w8
  442638:	str	w8, [x23, #48]
  44263c:	mov	x0, x19
  442640:	ldp	x20, x19, [sp, #80]
  442644:	ldp	x22, x21, [sp, #64]
  442648:	ldp	x24, x23, [sp, #48]
  44264c:	ldr	x25, [sp, #32]
  442650:	ldp	x29, x30, [sp, #16]
  442654:	add	sp, sp, #0x60
  442658:	ret
  44265c:	mov	w8, #0xc                   	// #12
  442660:	mov	x19, xzr
  442664:	str	w8, [x21]
  442668:	b	44263c <_obstack_memory_used@@Base+0x6e44>
  44266c:	stp	x29, x30, [sp, #-80]!
  442670:	stp	x26, x25, [sp, #16]
  442674:	stp	x24, x23, [sp, #32]
  442678:	stp	x22, x21, [sp, #48]
  44267c:	stp	x20, x19, [sp, #64]
  442680:	ldp	x24, x8, [x0, #8]
  442684:	mov	x20, x2
  442688:	mov	x19, x0
  44268c:	mov	x21, x1
  442690:	cmp	x8, x24
  442694:	mov	x29, sp
  442698:	b.cs	442764 <_obstack_memory_used@@Base+0x6f6c>  // b.hs, b.nlast
  44269c:	ldr	x9, [x19]
  4426a0:	add	x8, x9, x8, lsl #4
  4426a4:	stp	x21, x20, [x8]
  4426a8:	ldr	x8, [x19]
  4426ac:	ldr	x9, [x19, #16]
  4426b0:	add	x9, x8, x9, lsl #4
  4426b4:	ldr	w10, [x9, #8]
  4426b8:	and	w8, w20, #0xff
  4426bc:	cmp	w8, #0x5
  4426c0:	and	w10, w10, #0xfffc00ff
  4426c4:	str	w10, [x9, #8]
  4426c8:	b.ne	4426e0 <_obstack_memory_used@@Base+0x6ee8>  // b.any
  4426cc:	ldr	w9, [x19, #180]
  4426d0:	cmp	w9, #0x1
  4426d4:	b.le	4426e0 <_obstack_memory_used@@Base+0x6ee8>
  4426d8:	mov	w8, #0x100000              	// #1048576
  4426dc:	b	4426ec <_obstack_memory_used@@Base+0x6ef4>
  4426e0:	cmp	w8, #0x6
  4426e4:	cset	w8, eq  // eq = none
  4426e8:	lsl	w8, w8, #20
  4426ec:	ldr	x9, [x19]
  4426f0:	ldr	x10, [x19, #16]
  4426f4:	add	x9, x9, x10, lsl #4
  4426f8:	ldr	w10, [x9, #8]
  4426fc:	and	w10, w10, #0xffefffff
  442700:	orr	w8, w10, w8
  442704:	str	w8, [x9, #8]
  442708:	ldp	x9, x8, [x19, #16]
  44270c:	mov	x10, #0xffffffffffffffff    	// #-1
  442710:	str	x10, [x8, x9, lsl #3]
  442714:	ldr	x8, [x19, #40]
  442718:	ldr	x9, [x19, #16]
  44271c:	mov	w10, #0x18                  	// #24
  442720:	madd	x8, x9, x10, x8
  442724:	stp	xzr, xzr, [x8]
  442728:	str	xzr, [x8, #16]
  44272c:	ldr	x8, [x19, #48]
  442730:	ldr	x9, [x19, #16]
  442734:	madd	x8, x9, x10, x8
  442738:	stp	xzr, xzr, [x8]
  44273c:	str	xzr, [x8, #16]
  442740:	ldr	x0, [x19, #16]
  442744:	add	x8, x0, #0x1
  442748:	str	x8, [x19, #16]
  44274c:	ldp	x20, x19, [sp, #64]
  442750:	ldp	x22, x21, [sp, #48]
  442754:	ldp	x24, x23, [sp, #32]
  442758:	ldp	x26, x25, [sp, #16]
  44275c:	ldp	x29, x30, [sp], #80
  442760:	ret
  442764:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  442768:	lsl	x26, x24, #1
  44276c:	movk	x8, #0xaaa, lsl #48
  442770:	cmp	x26, x8
  442774:	b.hi	442828 <_obstack_memory_used@@Base+0x7030>  // b.pmore
  442778:	ldr	x0, [x19]
  44277c:	lsl	x1, x24, #5
  442780:	bl	404710 <realloc@plt>
  442784:	cbz	x0, 442828 <_obstack_memory_used@@Base+0x7030>
  442788:	ldr	x8, [x19, #24]
  44278c:	lsl	x23, x24, #4
  442790:	str	x0, [x19]
  442794:	mov	x1, x23
  442798:	mov	x0, x8
  44279c:	bl	404710 <realloc@plt>
  4427a0:	ldr	x8, [x19, #32]
  4427a4:	mov	x22, x0
  4427a8:	mov	x1, x23
  4427ac:	mov	x0, x8
  4427b0:	bl	404710 <realloc@plt>
  4427b4:	mov	x23, x0
  4427b8:	ldr	x0, [x19, #40]
  4427bc:	add	x8, x24, x24, lsl #1
  4427c0:	lsl	x25, x8, #4
  4427c4:	mov	x1, x25
  4427c8:	bl	404710 <realloc@plt>
  4427cc:	ldr	x8, [x19, #48]
  4427d0:	mov	x24, x0
  4427d4:	mov	x1, x25
  4427d8:	mov	x0, x8
  4427dc:	bl	404710 <realloc@plt>
  4427e0:	cbz	x22, 442804 <_obstack_memory_used@@Base+0x700c>
  4427e4:	cbz	x23, 442804 <_obstack_memory_used@@Base+0x700c>
  4427e8:	cbz	x24, 442804 <_obstack_memory_used@@Base+0x700c>
  4427ec:	cbz	x0, 442804 <_obstack_memory_used@@Base+0x700c>
  4427f0:	ldr	x8, [x19, #16]
  4427f4:	stp	x22, x23, [x19, #24]
  4427f8:	stp	x24, x0, [x19, #40]
  4427fc:	str	x26, [x19, #8]
  442800:	b	44269c <_obstack_memory_used@@Base+0x6ea4>
  442804:	mov	x19, x0
  442808:	mov	x0, x22
  44280c:	bl	4049b0 <free@plt>
  442810:	mov	x0, x23
  442814:	bl	4049b0 <free@plt>
  442818:	mov	x0, x24
  44281c:	bl	4049b0 <free@plt>
  442820:	mov	x0, x19
  442824:	bl	4049b0 <free@plt>
  442828:	mov	x0, #0xffffffffffffffff    	// #-1
  44282c:	b	44274c <_obstack_memory_used@@Base+0x6f54>
  442830:	sub	sp, sp, #0x80
  442834:	stp	x29, x30, [sp, #48]
  442838:	stp	x26, x25, [sp, #64]
  44283c:	stp	x24, x23, [sp, #80]
  442840:	stp	x22, x21, [sp, #96]
  442844:	stp	x20, x19, [sp, #112]
  442848:	ldr	x23, [x1, #40]
  44284c:	mov	w8, #0x18                  	// #24
  442850:	mov	x19, x0
  442854:	add	x29, sp, #0x30
  442858:	madd	x24, x2, x8, x23
  44285c:	ldr	x8, [x24, #8]!
  442860:	mov	w21, w3
  442864:	mov	x20, x2
  442868:	mov	x22, x1
  44286c:	add	x8, x8, #0x1
  442870:	lsl	x0, x8, #3
  442874:	stp	x8, xzr, [sp, #24]
  442878:	bl	4044d0 <malloc@plt>
  44287c:	str	x0, [sp, #40]
  442880:	cbz	x0, 442a38 <_obstack_memory_used@@Base+0x7240>
  442884:	ldr	x8, [x22, #48]
  442888:	mov	w9, #0x18                  	// #24
  44288c:	madd	x8, x20, x9, x8
  442890:	mov	x9, #0xffffffffffffffff    	// #-1
  442894:	str	x9, [x8, #8]
  442898:	ldr	x9, [x22]
  44289c:	add	x8, x9, x20, lsl #4
  4428a0:	ldr	w8, [x8, #8]
  4428a4:	ubfx	w4, w8, #8, #10
  4428a8:	cbz	w4, 4428f4 <_obstack_memory_used@@Base+0x70fc>
  4428ac:	ldr	x10, [x24]
  4428b0:	cbz	x10, 4428f4 <_obstack_memory_used@@Base+0x70fc>
  4428b4:	mov	w10, #0x18                  	// #24
  4428b8:	madd	x10, x20, x10, x23
  4428bc:	ldr	x10, [x10, #16]
  4428c0:	ldr	x10, [x10]
  4428c4:	add	x9, x9, x10, lsl #4
  4428c8:	ldrb	w9, [x9, #10]
  4428cc:	tbnz	w9, #2, 4428f4 <_obstack_memory_used@@Base+0x70fc>
  4428d0:	mov	x0, x22
  4428d4:	mov	x1, x20
  4428d8:	mov	x2, x20
  4428dc:	mov	x3, x20
  4428e0:	bl	442a40 <_obstack_memory_used@@Base+0x7248>
  4428e4:	cbnz	w0, 442a1c <_obstack_memory_used@@Base+0x7224>
  4428e8:	ldr	x8, [x22]
  4428ec:	add	x8, x8, x20, lsl #4
  4428f0:	ldr	w8, [x8, #8]
  4428f4:	tbz	w8, #3, 4429c0 <_obstack_memory_used@@Base+0x71c8>
  4428f8:	ldr	x8, [x22, #40]
  4428fc:	mov	w9, #0x18                  	// #24
  442900:	madd	x9, x20, x9, x8
  442904:	ldr	x9, [x9, #8]
  442908:	cmp	x9, #0x1
  44290c:	b.lt	4429c0 <_obstack_memory_used@@Base+0x71c8>  // b.tstop
  442910:	mov	w26, wzr
  442914:	mov	x24, xzr
  442918:	mov	w25, #0x18                  	// #24
  44291c:	madd	x8, x20, x25, x8
  442920:	ldr	x8, [x8, #16]
  442924:	ldr	x23, [x8, x24, lsl #3]
  442928:	ldr	x8, [x22, #48]
  44292c:	madd	x9, x23, x25, x8
  442930:	ldr	x9, [x9, #8]
  442934:	cmn	x9, #0x1
  442938:	b.eq	442998 <_obstack_memory_used@@Base+0x71a0>  // b.none
  44293c:	cbnz	x9, 44295c <_obstack_memory_used@@Base+0x7164>
  442940:	mov	x0, sp
  442944:	mov	x1, x22
  442948:	mov	x2, x23
  44294c:	mov	w3, wzr
  442950:	bl	442830 <_obstack_memory_used@@Base+0x7038>
  442954:	cbz	w0, 442970 <_obstack_memory_used@@Base+0x7178>
  442958:	b	442a1c <_obstack_memory_used@@Base+0x7224>
  44295c:	madd	x8, x23, x25, x8
  442960:	ldr	x9, [x8, #16]
  442964:	ldr	q0, [x8]
  442968:	str	x9, [sp, #16]
  44296c:	str	q0, [sp]
  442970:	add	x0, sp, #0x18
  442974:	mov	x1, sp
  442978:	bl	442ca8 <_obstack_memory_used@@Base+0x74b0>
  44297c:	cbnz	w0, 442a1c <_obstack_memory_used@@Base+0x7224>
  442980:	ldr	x8, [x22, #48]
  442984:	madd	x8, x23, x25, x8
  442988:	ldr	x8, [x8, #8]
  44298c:	cbnz	x8, 44299c <_obstack_memory_used@@Base+0x71a4>
  442990:	ldr	x0, [sp, #16]
  442994:	bl	4049b0 <free@plt>
  442998:	mov	w26, #0x1                   	// #1
  44299c:	ldr	x8, [x22, #40]
  4429a0:	add	x24, x24, #0x1
  4429a4:	madd	x9, x20, x25, x8
  4429a8:	ldr	x9, [x9, #8]
  4429ac:	cmp	x24, x9
  4429b0:	b.lt	44291c <_obstack_memory_used@@Base+0x7124>  // b.tstop
  4429b4:	tst	w26, #0x1
  4429b8:	cset	w23, eq  // eq = none
  4429bc:	b	4429c4 <_obstack_memory_used@@Base+0x71cc>
  4429c0:	mov	w23, #0x1                   	// #1
  4429c4:	add	x0, sp, #0x18
  4429c8:	mov	x1, x20
  4429cc:	bl	442e2c <_obstack_memory_used@@Base+0x7634>
  4429d0:	tbz	w0, #0, 442a38 <_obstack_memory_used@@Base+0x7240>
  4429d4:	ldr	x8, [x22, #48]
  4429d8:	orr	w9, w23, w21
  4429dc:	tbz	w9, #0, 4429fc <_obstack_memory_used@@Base+0x7204>
  4429e0:	ldr	x9, [sp, #40]
  4429e4:	ldur	q0, [sp, #24]
  4429e8:	mov	w10, #0x18                  	// #24
  4429ec:	madd	x8, x20, x10, x8
  4429f0:	str	x9, [x8, #16]
  4429f4:	str	q0, [x8]
  4429f8:	b	442a08 <_obstack_memory_used@@Base+0x7210>
  4429fc:	mov	w9, #0x18                  	// #24
  442a00:	madd	x8, x20, x9, x8
  442a04:	str	xzr, [x8, #8]
  442a08:	ldr	x8, [sp, #40]
  442a0c:	ldur	q0, [sp, #24]
  442a10:	mov	w0, wzr
  442a14:	str	x8, [x19, #16]
  442a18:	str	q0, [x19]
  442a1c:	ldp	x20, x19, [sp, #112]
  442a20:	ldp	x22, x21, [sp, #96]
  442a24:	ldp	x24, x23, [sp, #80]
  442a28:	ldp	x26, x25, [sp, #64]
  442a2c:	ldp	x29, x30, [sp, #48]
  442a30:	add	sp, sp, #0x80
  442a34:	ret
  442a38:	mov	w0, #0xc                   	// #12
  442a3c:	b	442a1c <_obstack_memory_used@@Base+0x7224>
  442a40:	stp	x29, x30, [sp, #-80]!
  442a44:	stp	x26, x25, [sp, #16]
  442a48:	stp	x24, x23, [sp, #32]
  442a4c:	stp	x22, x21, [sp, #48]
  442a50:	stp	x20, x19, [sp, #64]
  442a54:	mov	w19, w4
  442a58:	mov	x20, x3
  442a5c:	mov	x22, x2
  442a60:	mov	x24, x1
  442a64:	mov	x21, x0
  442a68:	mov	w26, #0x18                  	// #24
  442a6c:	mov	x29, sp
  442a70:	mov	x23, x24
  442a74:	ldr	x9, [x21]
  442a78:	add	x10, x9, x23, lsl #4
  442a7c:	ldrb	w8, [x10, #8]!
  442a80:	cmp	w8, #0x4
  442a84:	b.ne	442ae4 <_obstack_memory_used@@Base+0x72ec>  // b.any
  442a88:	ldr	x8, [x21, #24]
  442a8c:	ldr	x9, [x21, #40]
  442a90:	mov	x0, x21
  442a94:	mov	w2, w19
  442a98:	ldr	x24, [x8, x23, lsl #3]
  442a9c:	madd	x8, x22, x26, x9
  442aa0:	str	xzr, [x8, #8]
  442aa4:	mov	x1, x24
  442aa8:	bl	442f34 <_obstack_memory_used@@Base+0x773c>
  442aac:	cmn	x0, #0x1
  442ab0:	b.eq	442ca0 <_obstack_memory_used@@Base+0x74a8>  // b.none
  442ab4:	ldr	x8, [x21, #24]
  442ab8:	mov	x25, x0
  442abc:	mov	x1, x25
  442ac0:	ldr	x9, [x8, x23, lsl #3]
  442ac4:	str	x9, [x8, x22, lsl #3]
  442ac8:	ldr	x8, [x21, #40]
  442acc:	madd	x0, x22, x26, x8
  442ad0:	bl	442e2c <_obstack_memory_used@@Base+0x7634>
  442ad4:	mov	x23, x24
  442ad8:	mov	x22, x25
  442adc:	tbnz	w0, #0, 442a74 <_obstack_memory_used@@Base+0x727c>
  442ae0:	b	442ca0 <_obstack_memory_used@@Base+0x74a8>
  442ae4:	ldr	x8, [x21, #40]
  442ae8:	madd	x11, x23, x26, x8
  442aec:	ldr	x11, [x11, #8]
  442af0:	cbz	x11, 442c5c <_obstack_memory_used@@Base+0x7464>
  442af4:	madd	x12, x23, x26, x8
  442af8:	ldr	x12, [x12, #16]
  442afc:	cmp	x11, #0x1
  442b00:	ldr	x24, [x12]
  442b04:	madd	x12, x22, x26, x8
  442b08:	str	xzr, [x12, #8]
  442b0c:	b.eq	442c08 <_obstack_memory_used@@Base+0x7410>  // b.none
  442b10:	ldr	x12, [x21, #16]
  442b14:	sub	x1, x12, #0x1
  442b18:	cmp	x1, #0x1
  442b1c:	b.lt	442b64 <_obstack_memory_used@@Base+0x736c>  // b.tstop
  442b20:	add	x10, x9, x1, lsl #4
  442b24:	ldr	w11, [x10, #8]
  442b28:	tbz	w11, #18, 442b64 <_obstack_memory_used@@Base+0x736c>
  442b2c:	ldr	x10, [x21, #32]
  442b30:	add	x9, x9, x12, lsl #4
  442b34:	sub	x9, x9, #0x18
  442b38:	ldr	x12, [x10, x1, lsl #3]
  442b3c:	cmp	x12, x24
  442b40:	b.ne	442b50 <_obstack_memory_used@@Base+0x7358>  // b.any
  442b44:	ubfx	w11, w11, #8, #10
  442b48:	cmp	w11, w19
  442b4c:	b.eq	442bf8 <_obstack_memory_used@@Base+0x7400>  // b.none
  442b50:	ldr	w11, [x9], #-16
  442b54:	sub	x1, x1, #0x1
  442b58:	cmp	x1, #0x1
  442b5c:	b.lt	442b64 <_obstack_memory_used@@Base+0x736c>  // b.tstop
  442b60:	tbnz	w11, #18, 442b38 <_obstack_memory_used@@Base+0x7340>
  442b64:	mov	x0, x21
  442b68:	mov	x1, x24
  442b6c:	mov	w2, w19
  442b70:	bl	442f34 <_obstack_memory_used@@Base+0x773c>
  442b74:	cmn	x0, #0x1
  442b78:	b.eq	442ca0 <_obstack_memory_used@@Base+0x74a8>  // b.none
  442b7c:	ldr	x8, [x21, #40]
  442b80:	mov	x25, x0
  442b84:	mov	x1, x25
  442b88:	madd	x0, x22, x26, x8
  442b8c:	bl	442e2c <_obstack_memory_used@@Base+0x7634>
  442b90:	tbz	w0, #0, 442ca0 <_obstack_memory_used@@Base+0x74a8>
  442b94:	mov	x0, x21
  442b98:	mov	x1, x24
  442b9c:	mov	x2, x25
  442ba0:	mov	x3, x20
  442ba4:	mov	w4, w19
  442ba8:	bl	442a40 <_obstack_memory_used@@Base+0x7248>
  442bac:	cbnz	w0, 442c6c <_obstack_memory_used@@Base+0x7474>
  442bb0:	ldr	x8, [x21, #40]
  442bb4:	mov	x0, x21
  442bb8:	mov	w2, w19
  442bbc:	madd	x8, x23, x26, x8
  442bc0:	ldr	x8, [x8, #16]
  442bc4:	ldr	x23, [x8, #8]
  442bc8:	mov	x1, x23
  442bcc:	bl	442f34 <_obstack_memory_used@@Base+0x773c>
  442bd0:	cmn	x0, #0x1
  442bd4:	b.eq	442ca0 <_obstack_memory_used@@Base+0x74a8>  // b.none
  442bd8:	ldr	x8, [x21, #40]
  442bdc:	mov	x24, x0
  442be0:	mov	x1, x24
  442be4:	madd	x0, x22, x26, x8
  442be8:	bl	442e2c <_obstack_memory_used@@Base+0x7634>
  442bec:	mov	x22, x24
  442bf0:	tbnz	w0, #0, 442a74 <_obstack_memory_used@@Base+0x727c>
  442bf4:	b	442ca0 <_obstack_memory_used@@Base+0x74a8>
  442bf8:	madd	x0, x22, x26, x8
  442bfc:	bl	442e2c <_obstack_memory_used@@Base+0x7634>
  442c00:	tbnz	w0, #0, 442bb0 <_obstack_memory_used@@Base+0x73b8>
  442c04:	b	442ca0 <_obstack_memory_used@@Base+0x74a8>
  442c08:	cmp	x23, x20
  442c0c:	b.ne	442c18 <_obstack_memory_used@@Base+0x7420>  // b.any
  442c10:	cmp	x22, x23
  442c14:	b.ne	442c84 <_obstack_memory_used@@Base+0x748c>  // b.any
  442c18:	ldr	w8, [x10]
  442c1c:	mov	x0, x21
  442c20:	mov	x1, x24
  442c24:	ubfx	w8, w8, #8, #10
  442c28:	orr	w19, w8, w19
  442c2c:	mov	w2, w19
  442c30:	bl	442f34 <_obstack_memory_used@@Base+0x773c>
  442c34:	cmn	x0, #0x1
  442c38:	b.eq	442ca0 <_obstack_memory_used@@Base+0x74a8>  // b.none
  442c3c:	ldr	x8, [x21, #40]
  442c40:	mov	x23, x0
  442c44:	mov	x1, x23
  442c48:	madd	x0, x22, x26, x8
  442c4c:	bl	442e2c <_obstack_memory_used@@Base+0x7634>
  442c50:	mov	x22, x23
  442c54:	tbnz	w0, #0, 442a70 <_obstack_memory_used@@Base+0x7278>
  442c58:	b	442ca0 <_obstack_memory_used@@Base+0x74a8>
  442c5c:	ldr	x8, [x21, #24]
  442c60:	mov	w0, wzr
  442c64:	ldr	x9, [x8, x23, lsl #3]
  442c68:	str	x9, [x8, x22, lsl #3]
  442c6c:	ldp	x20, x19, [sp, #64]
  442c70:	ldp	x22, x21, [sp, #48]
  442c74:	ldp	x24, x23, [sp, #32]
  442c78:	ldp	x26, x25, [sp, #16]
  442c7c:	ldp	x29, x30, [sp], #80
  442c80:	ret
  442c84:	mov	w9, #0x18                  	// #24
  442c88:	madd	x0, x22, x9, x8
  442c8c:	mov	x1, x24
  442c90:	bl	442e2c <_obstack_memory_used@@Base+0x7634>
  442c94:	tbz	w0, #0, 442ca0 <_obstack_memory_used@@Base+0x74a8>
  442c98:	mov	w0, wzr
  442c9c:	b	442c6c <_obstack_memory_used@@Base+0x7474>
  442ca0:	mov	w0, #0xc                   	// #12
  442ca4:	b	442c6c <_obstack_memory_used@@Base+0x7474>
  442ca8:	stp	x29, x30, [sp, #-48]!
  442cac:	str	x21, [sp, #16]
  442cb0:	stp	x20, x19, [sp, #32]
  442cb4:	mov	x29, sp
  442cb8:	cbz	x1, 442d98 <_obstack_memory_used@@Base+0x75a0>
  442cbc:	ldr	x10, [x1, #8]
  442cc0:	mov	x20, x1
  442cc4:	cbz	x10, 442d98 <_obstack_memory_used@@Base+0x75a0>
  442cc8:	ldp	x8, x11, [x0]
  442ccc:	mov	x19, x0
  442cd0:	add	x9, x11, x10, lsl #1
  442cd4:	cmp	x8, x9
  442cd8:	b.ge	442d04 <_obstack_memory_used@@Base+0x750c>  // b.tcont
  442cdc:	ldr	x0, [x19, #16]
  442ce0:	add	x21, x8, x10
  442ce4:	lsl	x1, x21, #4
  442ce8:	bl	404710 <realloc@plt>
  442cec:	cbz	x0, 442e24 <_obstack_memory_used@@Base+0x762c>
  442cf0:	lsl	x8, x21, #1
  442cf4:	str	x0, [x19, #16]
  442cf8:	str	x8, [x19]
  442cfc:	ldr	x11, [x19, #8]
  442d00:	ldr	x10, [x20, #8]
  442d04:	cbz	x11, 442e10 <_obstack_memory_used@@Base+0x7618>
  442d08:	sub	x8, x10, #0x1
  442d0c:	sub	x9, x11, #0x1
  442d10:	orr	x12, x8, x9
  442d14:	add	x21, x11, x10, lsl #1
  442d18:	tbnz	x12, #63, 442d5c <_obstack_memory_used@@Base+0x7564>
  442d1c:	ldr	x10, [x19, #16]
  442d20:	ldr	x11, [x20, #16]
  442d24:	ldr	x13, [x10, x9, lsl #3]
  442d28:	ldr	x12, [x11, x8, lsl #3]
  442d2c:	cmp	x13, x12
  442d30:	b.ne	442d3c <_obstack_memory_used@@Base+0x7544>  // b.any
  442d34:	sub	x8, x8, #0x1
  442d38:	b	442d50 <_obstack_memory_used@@Base+0x7558>
  442d3c:	b.ge	442d50 <_obstack_memory_used@@Base+0x7558>  // b.tcont
  442d40:	sub	x8, x8, #0x1
  442d44:	sub	x21, x21, #0x1
  442d48:	str	x12, [x10, x21, lsl #3]
  442d4c:	b	442d54 <_obstack_memory_used@@Base+0x755c>
  442d50:	sub	x9, x9, #0x1
  442d54:	orr	x12, x8, x9
  442d58:	tbz	x12, #63, 442d24 <_obstack_memory_used@@Base+0x752c>
  442d5c:	tbnz	x8, #63, 442d7c <_obstack_memory_used@@Base+0x7584>
  442d60:	ldr	x9, [x19, #16]
  442d64:	ldr	x1, [x20, #16]
  442d68:	add	x8, x8, #0x1
  442d6c:	sub	x21, x21, x8
  442d70:	add	x0, x9, x21, lsl #3
  442d74:	lsl	x2, x8, #3
  442d78:	bl	4040f0 <memcpy@plt>
  442d7c:	ldr	x10, [x19, #8]
  442d80:	ldr	x8, [x20, #8]
  442d84:	sub	x9, x10, #0x1
  442d88:	add	x8, x9, x8, lsl #1
  442d8c:	sub	x11, x8, x21
  442d90:	adds	x11, x11, #0x1
  442d94:	b.cc	442dac <_obstack_memory_used@@Base+0x75b4>  // b.lo, b.ul, b.last
  442d98:	mov	w0, wzr
  442d9c:	ldp	x20, x19, [sp, #32]
  442da0:	ldr	x21, [sp, #16]
  442da4:	ldp	x29, x30, [sp], #48
  442da8:	ret
  442dac:	ldr	x0, [x19, #16]
  442db0:	add	x10, x11, x10
  442db4:	str	x10, [x19, #8]
  442db8:	add	x10, x0, x9, lsl #3
  442dbc:	lsl	x2, x11, #3
  442dc0:	neg	x11, x11
  442dc4:	ldr	x12, [x0, x8, lsl #3]
  442dc8:	ldr	x13, [x0, x9, lsl #3]
  442dcc:	cmp	x12, x13
  442dd0:	b.le	442dec <_obstack_memory_used@@Base+0x75f4>
  442dd4:	sub	x8, x8, #0x1
  442dd8:	str	x12, [x10, x2]
  442ddc:	adds	x11, x11, #0x1
  442de0:	sub	x2, x2, #0x8
  442de4:	b.cc	442dc4 <_obstack_memory_used@@Base+0x75cc>  // b.lo, b.ul, b.last
  442de8:	b	442d98 <_obstack_memory_used@@Base+0x75a0>
  442dec:	str	x13, [x10, x2]
  442df0:	cmp	x9, #0x0
  442df4:	sub	x9, x9, #0x1
  442df8:	neg	x11, x11
  442dfc:	sub	x10, x10, #0x8
  442e00:	b.gt	442dbc <_obstack_memory_used@@Base+0x75c4>
  442e04:	add	x1, x0, x21, lsl #3
  442e08:	bl	4040f0 <memcpy@plt>
  442e0c:	b	442d98 <_obstack_memory_used@@Base+0x75a0>
  442e10:	str	x10, [x19, #8]
  442e14:	ldp	x8, x1, [x20, #8]
  442e18:	ldr	x0, [x19, #16]
  442e1c:	lsl	x2, x8, #3
  442e20:	b	442e08 <_obstack_memory_used@@Base+0x7610>
  442e24:	mov	w0, #0xc                   	// #12
  442e28:	b	442d9c <_obstack_memory_used@@Base+0x75a4>
  442e2c:	stp	x29, x30, [sp, #-32]!
  442e30:	stp	x20, x19, [sp, #16]
  442e34:	ldr	x9, [x0]
  442e38:	mov	x19, x0
  442e3c:	mov	x20, x1
  442e40:	mov	x29, sp
  442e44:	cbz	x9, 442e68 <_obstack_memory_used@@Base+0x7670>
  442e48:	ldr	x8, [x19, #8]
  442e4c:	cbnz	x8, 442e98 <_obstack_memory_used@@Base+0x76a0>
  442e50:	ldr	x8, [x19, #16]
  442e54:	str	x20, [x8]
  442e58:	ldr	x8, [x19, #8]
  442e5c:	add	x8, x8, #0x1
  442e60:	str	x8, [x19, #8]
  442e64:	b	442e88 <_obstack_memory_used@@Base+0x7690>
  442e68:	mov	w8, #0x1                   	// #1
  442e6c:	dup	v0.2d, x8
  442e70:	mov	w0, #0x8                   	// #8
  442e74:	str	q0, [x19]
  442e78:	bl	4044d0 <malloc@plt>
  442e7c:	str	x0, [x19, #16]
  442e80:	cbz	x0, 442ec4 <_obstack_memory_used@@Base+0x76cc>
  442e84:	str	x20, [x0]
  442e88:	mov	w0, #0x1                   	// #1
  442e8c:	ldp	x20, x19, [sp, #16]
  442e90:	ldp	x29, x30, [sp], #32
  442e94:	ret
  442e98:	cmp	x9, x8
  442e9c:	b.ne	442ecc <_obstack_memory_used@@Base+0x76d4>  // b.any
  442ea0:	ldr	x0, [x19, #16]
  442ea4:	lsl	x8, x9, #1
  442ea8:	lsl	x1, x9, #4
  442eac:	str	x8, [x19]
  442eb0:	bl	404710 <realloc@plt>
  442eb4:	cbz	x0, 442e8c <_obstack_memory_used@@Base+0x7694>
  442eb8:	ldr	x8, [x19, #8]
  442ebc:	str	x0, [x19, #16]
  442ec0:	b	442ed0 <_obstack_memory_used@@Base+0x76d8>
  442ec4:	stp	xzr, xzr, [x19]
  442ec8:	b	442e8c <_obstack_memory_used@@Base+0x7694>
  442ecc:	ldr	x0, [x19, #16]
  442ed0:	ldr	x9, [x0]
  442ed4:	cmp	x9, x20
  442ed8:	b.le	442f04 <_obstack_memory_used@@Base+0x770c>
  442edc:	cmp	x8, #0x1
  442ee0:	b.lt	442f2c <_obstack_memory_used@@Base+0x7734>  // b.tstop
  442ee4:	mov	x9, x8
  442ee8:	add	x10, x0, x9, lsl #3
  442eec:	ldur	x11, [x10, #-8]
  442ef0:	subs	x8, x9, #0x1
  442ef4:	mov	x9, x8
  442ef8:	str	x11, [x10]
  442efc:	b.gt	442ee8 <_obstack_memory_used@@Base+0x76f0>
  442f00:	b	442f2c <_obstack_memory_used@@Base+0x7734>
  442f04:	add	x9, x0, x8, lsl #3
  442f08:	ldur	x9, [x9, #-8]
  442f0c:	cmp	x9, x20
  442f10:	b.le	442f2c <_obstack_memory_used@@Base+0x7734>
  442f14:	add	x10, x0, x8, lsl #3
  442f18:	str	x9, [x10]
  442f1c:	ldur	x9, [x10, #-16]
  442f20:	sub	x8, x8, #0x1
  442f24:	cmp	x9, x20
  442f28:	b.gt	442f14 <_obstack_memory_used@@Base+0x771c>
  442f2c:	str	x20, [x0, x8, lsl #3]
  442f30:	b	442e58 <_obstack_memory_used@@Base+0x7660>
  442f34:	stp	x29, x30, [sp, #-48]!
  442f38:	stp	x20, x19, [sp, #32]
  442f3c:	ldr	x8, [x0]
  442f40:	str	x21, [sp, #16]
  442f44:	mov	x19, x1
  442f48:	mov	w21, w2
  442f4c:	add	x8, x8, x1, lsl #4
  442f50:	ldp	x1, x8, [x8]
  442f54:	mov	x29, sp
  442f58:	mov	x20, x0
  442f5c:	mov	x2, x8
  442f60:	bl	44266c <_obstack_memory_used@@Base+0x6e74>
  442f64:	cmn	x0, #0x1
  442f68:	b.eq	442fbc <_obstack_memory_used@@Base+0x77c4>  // b.none
  442f6c:	ldr	x8, [x20]
  442f70:	add	x8, x8, x0, lsl #4
  442f74:	ldr	w9, [x8, #8]
  442f78:	bfi	w9, w21, #8, #10
  442f7c:	str	w9, [x8, #8]
  442f80:	ldr	x8, [x20]
  442f84:	add	x9, x8, x19, lsl #4
  442f88:	ldr	w9, [x9, #8]
  442f8c:	add	x8, x8, x0, lsl #4
  442f90:	ldr	w10, [x8, #8]
  442f94:	and	w9, w9, #0x3ff00
  442f98:	orr	w9, w9, w10
  442f9c:	str	w9, [x8, #8]
  442fa0:	ldr	x8, [x20]
  442fa4:	add	x8, x8, x0, lsl #4
  442fa8:	ldr	w9, [x8, #8]
  442fac:	orr	w9, w9, #0x40000
  442fb0:	str	w9, [x8, #8]
  442fb4:	ldr	x8, [x20, #32]
  442fb8:	str	x19, [x8, x0, lsl #3]
  442fbc:	ldp	x20, x19, [sp, #32]
  442fc0:	ldr	x21, [sp, #16]
  442fc4:	ldp	x29, x30, [sp], #48
  442fc8:	ret
  442fcc:	stp	x29, x30, [sp, #-32]!
  442fd0:	stp	x20, x19, [sp, #16]
  442fd4:	ldp	x9, x8, [x0]
  442fd8:	mov	x19, x0
  442fdc:	mov	x20, x1
  442fe0:	mov	x29, sp
  442fe4:	cmp	x9, x8
  442fe8:	b.ne	443014 <_obstack_memory_used@@Base+0x781c>  // b.any
  442fec:	ldr	x0, [x19, #16]
  442ff0:	lsl	x8, x9, #1
  442ff4:	add	x8, x8, #0x2
  442ff8:	lsl	x1, x8, #3
  442ffc:	str	x8, [x19]
  443000:	bl	404710 <realloc@plt>
  443004:	cbz	x0, 443028 <_obstack_memory_used@@Base+0x7830>
  443008:	ldr	x8, [x19, #8]
  44300c:	str	x0, [x19, #16]
  443010:	b	443018 <_obstack_memory_used@@Base+0x7820>
  443014:	ldr	x0, [x19, #16]
  443018:	add	x9, x8, #0x1
  44301c:	str	x9, [x19, #8]
  443020:	str	x20, [x0, x8, lsl #3]
  443024:	mov	w0, #0x1                   	// #1
  443028:	ldp	x20, x19, [sp, #16]
  44302c:	ldp	x29, x30, [sp], #32
  443030:	ret
  443034:	stp	x29, x30, [sp, #-48]!
  443038:	stp	x20, x19, [sp, #32]
  44303c:	ldr	x8, [x1, #8]
  443040:	str	x21, [sp, #16]
  443044:	mov	x19, x0
  443048:	mov	x29, sp
  44304c:	str	x8, [x0, #8]
  443050:	ldr	x21, [x1, #8]
  443054:	cmp	x21, #0x1
  443058:	b.lt	443088 <_obstack_memory_used@@Base+0x7890>  // b.tstop
  44305c:	lsl	x0, x8, #3
  443060:	mov	x20, x1
  443064:	str	x8, [x19]
  443068:	bl	4044d0 <malloc@plt>
  44306c:	str	x0, [x19, #16]
  443070:	cbz	x0, 4430a4 <_obstack_memory_used@@Base+0x78ac>
  443074:	ldr	x1, [x20, #16]
  443078:	lsl	x2, x21, #3
  44307c:	bl	4040f0 <memcpy@plt>
  443080:	mov	w0, wzr
  443084:	b	443094 <_obstack_memory_used@@Base+0x789c>
  443088:	mov	w0, wzr
  44308c:	stp	xzr, xzr, [x19]
  443090:	str	xzr, [x19, #16]
  443094:	ldp	x20, x19, [sp, #32]
  443098:	ldr	x21, [sp, #16]
  44309c:	ldp	x29, x30, [sp], #48
  4430a0:	ret
  4430a4:	stp	xzr, xzr, [x19]
  4430a8:	mov	w0, #0xc                   	// #12
  4430ac:	b	443094 <_obstack_memory_used@@Base+0x789c>
  4430b0:	ldr	x8, [x0, #8]
  4430b4:	subs	x9, x8, #0x1
  4430b8:	b.lt	4430f8 <_obstack_memory_used@@Base+0x7900>  // b.tstop
  4430bc:	ldr	x8, [x0, #16]
  4430c0:	mov	x10, xzr
  4430c4:	b.eq	4430e8 <_obstack_memory_used@@Base+0x78f0>  // b.none
  4430c8:	add	x11, x9, x10
  4430cc:	lsr	x11, x11, #1
  4430d0:	ldr	x12, [x8, x11, lsl #3]
  4430d4:	cmp	x12, x1
  4430d8:	csinc	x10, x10, x11, ge  // ge = tcont
  4430dc:	csel	x9, x9, x11, lt  // lt = tstop
  4430e0:	cmp	x10, x9
  4430e4:	b.cc	4430c8 <_obstack_memory_used@@Base+0x78d0>  // b.lo, b.ul, b.last
  4430e8:	ldr	x8, [x8, x10, lsl #3]
  4430ec:	cmp	x8, x1
  4430f0:	csinc	x0, xzr, x10, ne  // ne = any
  4430f4:	ret
  4430f8:	mov	x0, xzr
  4430fc:	ret
  443100:	stp	x29, x30, [sp, #-96]!
  443104:	stp	x26, x25, [sp, #32]
  443108:	stp	x24, x23, [sp, #48]
  44310c:	stp	x22, x21, [sp, #64]
  443110:	stp	x20, x19, [sp, #80]
  443114:	ldr	x8, [x2, #8]
  443118:	mov	x19, x0
  44311c:	str	x27, [sp, #16]
  443120:	mov	x29, sp
  443124:	cbz	x8, 443380 <_obstack_memory_used@@Base+0x7b88>
  443128:	mov	w21, w3
  44312c:	mov	x22, x2
  443130:	mov	x20, x1
  443134:	subs	x9, x8, #0x1
  443138:	add	x23, x8, w3, uxtw
  44313c:	b.lt	443158 <_obstack_memory_used@@Base+0x7960>  // b.tstop
  443140:	ldr	x10, [x22, #16]
  443144:	mov	x11, x8
  443148:	ldr	x12, [x10], #8
  44314c:	subs	x11, x11, #0x1
  443150:	add	x23, x12, x23
  443154:	b.ne	443148 <_obstack_memory_used@@Base+0x7950>  // b.any
  443158:	ldr	x10, [x20, #136]
  44315c:	ldr	x11, [x20, #64]
  443160:	and	x12, x10, x23
  443164:	mov	w10, #0x18                  	// #24
  443168:	mul	x10, x12, x10
  44316c:	ldr	x10, [x11, x10]
  443170:	cmp	x10, #0x1
  443174:	b.lt	4431f8 <_obstack_memory_used@@Base+0x7a00>  // b.tstop
  443178:	mov	w13, #0x18                  	// #24
  44317c:	madd	x11, x12, x13, x11
  443180:	ldr	x11, [x11, #16]
  443184:	mov	x12, xzr
  443188:	ldr	x24, [x11, x12, lsl #3]
  44318c:	ldr	x13, [x24]
  443190:	cmp	x13, x23
  443194:	b.ne	4431ec <_obstack_memory_used@@Base+0x79f4>  // b.any
  443198:	ldrb	w13, [x24, #104]
  44319c:	and	w13, w13, #0xf
  4431a0:	cmp	w13, w21
  4431a4:	b.ne	4431ec <_obstack_memory_used@@Base+0x79f4>  // b.any
  4431a8:	cbz	x22, 4431ec <_obstack_memory_used@@Base+0x79f4>
  4431ac:	ldr	x13, [x24, #80]
  4431b0:	cbz	x13, 4431ec <_obstack_memory_used@@Base+0x79f4>
  4431b4:	ldr	x14, [x13, #8]
  4431b8:	cmp	x14, x8
  4431bc:	b.ne	4431ec <_obstack_memory_used@@Base+0x79f4>  // b.any
  4431c0:	mov	x14, x9
  4431c4:	add	x15, x14, #0x1
  4431c8:	cmp	x15, #0x1
  4431cc:	b.lt	443388 <_obstack_memory_used@@Base+0x7b90>  // b.tstop
  4431d0:	ldr	x15, [x13, #16]
  4431d4:	ldr	x16, [x22, #16]
  4431d8:	ldr	x15, [x15, x14, lsl #3]
  4431dc:	ldr	x16, [x16, x14, lsl #3]
  4431e0:	sub	x14, x14, #0x1
  4431e4:	cmp	x15, x16
  4431e8:	b.eq	4431c4 <_obstack_memory_used@@Base+0x79cc>  // b.none
  4431ec:	add	x12, x12, #0x1
  4431f0:	cmp	x12, x10
  4431f4:	b.lt	443188 <_obstack_memory_used@@Base+0x7990>  // b.tstop
  4431f8:	mov	w0, #0x70                  	// #112
  4431fc:	mov	w1, #0x1                   	// #1
  443200:	bl	404680 <calloc@plt>
  443204:	cbz	x0, 4433b0 <_obstack_memory_used@@Base+0x7bb8>
  443208:	add	x25, x0, #0x8
  44320c:	mov	x24, x0
  443210:	mov	x0, x25
  443214:	mov	x1, x22
  443218:	bl	443034 <_obstack_memory_used@@Base+0x783c>
  44321c:	cbnz	w0, 4433a8 <_obstack_memory_used@@Base+0x7bb0>
  443220:	ldrb	w8, [x24, #104]
  443224:	str	x25, [x24, #80]
  443228:	bfxil	w8, w21, #0, #4
  44322c:	strb	w8, [x24, #104]
  443230:	ldr	x8, [x22, #8]
  443234:	cmp	x8, #0x1
  443238:	b.lt	443360 <_obstack_memory_used@@Base+0x7b68>  // b.tstop
  44323c:	mov	x26, xzr
  443240:	mov	x8, xzr
  443244:	ldr	x9, [x22, #16]
  443248:	ldr	x10, [x20]
  44324c:	ldr	x9, [x9, x26, lsl #3]
  443250:	add	x9, x10, x9, lsl #4
  443254:	ldr	w27, [x9, #8]
  443258:	and	w9, w27, #0x3ffff
  44325c:	cmp	w9, #0x1
  443260:	b.eq	443350 <_obstack_memory_used@@Base+0x7b58>  // b.none
  443264:	ldrb	w10, [x24, #104]
  443268:	lsr	w12, w27, #15
  44326c:	and	w11, w27, #0xff
  443270:	and	w12, w12, #0x20
  443274:	and	w9, w27, #0x3ff00
  443278:	orr	w10, w10, w12
  44327c:	cmp	w11, #0x2
  443280:	strb	w10, [x24, #104]
  443284:	b.eq	443298 <_obstack_memory_used@@Base+0x7aa0>  // b.none
  443288:	cmp	w11, #0x4
  44328c:	b.ne	4432a4 <_obstack_memory_used@@Base+0x7aac>  // b.any
  443290:	mov	w11, #0x40                  	// #64
  443294:	b	44329c <_obstack_memory_used@@Base+0x7aa4>
  443298:	mov	w11, #0x10                  	// #16
  44329c:	orr	w10, w10, w11
  4432a0:	strb	w10, [x24, #104]
  4432a4:	cbz	w9, 443350 <_obstack_memory_used@@Base+0x7b58>
  4432a8:	ldr	x9, [x24, #80]
  4432ac:	cmp	x9, x25
  4432b0:	b.eq	4432bc <_obstack_memory_used@@Base+0x7ac4>  // b.none
  4432b4:	tbz	w21, #0, 4432ec <_obstack_memory_used@@Base+0x7af4>
  4432b8:	b	4432f0 <_obstack_memory_used@@Base+0x7af8>
  4432bc:	mov	w0, #0x18                  	// #24
  4432c0:	bl	4044d0 <malloc@plt>
  4432c4:	str	x0, [x24, #80]
  4432c8:	cbz	x0, 443374 <_obstack_memory_used@@Base+0x7b7c>
  4432cc:	mov	x1, x22
  4432d0:	bl	443034 <_obstack_memory_used@@Base+0x783c>
  4432d4:	cbnz	w0, 4433b0 <_obstack_memory_used@@Base+0x7bb8>
  4432d8:	ldrb	w9, [x24, #104]
  4432dc:	mov	x8, xzr
  4432e0:	orr	w9, w9, #0x80
  4432e4:	strb	w9, [x24, #104]
  4432e8:	tbnz	w21, #0, 4432f0 <_obstack_memory_used@@Base+0x7af8>
  4432ec:	tbnz	w27, #8, 443308 <_obstack_memory_used@@Base+0x7b10>
  4432f0:	tbz	w21, #0, 4432f8 <_obstack_memory_used@@Base+0x7b00>
  4432f4:	tbnz	w27, #9, 443308 <_obstack_memory_used@@Base+0x7b10>
  4432f8:	tbnz	w21, #1, 443300 <_obstack_memory_used@@Base+0x7b08>
  4432fc:	tbnz	w27, #12, 443308 <_obstack_memory_used@@Base+0x7b10>
  443300:	tbnz	w21, #2, 443350 <_obstack_memory_used@@Base+0x7b58>
  443304:	tbz	w27, #14, 443350 <_obstack_memory_used@@Base+0x7b58>
  443308:	subs	x9, x26, x8
  44330c:	b.mi	44334c <_obstack_memory_used@@Base+0x7b54>  // b.first
  443310:	ldr	x10, [x24, #16]
  443314:	cmp	x10, x9
  443318:	b.le	44334c <_obstack_memory_used@@Base+0x7b54>
  44331c:	sub	x10, x10, #0x1
  443320:	cmp	x10, x9
  443324:	str	x10, [x24, #16]
  443328:	b.le	44334c <_obstack_memory_used@@Base+0x7b54>
  44332c:	ldr	x10, [x24, #24]
  443330:	add	x11, x10, x9, lsl #3
  443334:	ldr	x12, [x11, #8]
  443338:	add	x9, x9, #0x1
  44333c:	str	x12, [x11]
  443340:	ldr	x11, [x24, #16]
  443344:	cmp	x9, x11
  443348:	b.lt	443330 <_obstack_memory_used@@Base+0x7b38>  // b.tstop
  44334c:	add	x8, x8, #0x1
  443350:	ldr	x9, [x22, #8]
  443354:	add	x26, x26, #0x1
  443358:	cmp	x26, x9
  44335c:	b.lt	443244 <_obstack_memory_used@@Base+0x7a4c>  // b.tstop
  443360:	mov	x0, x20
  443364:	mov	x1, x24
  443368:	mov	x2, x23
  44336c:	bl	4433c0 <_obstack_memory_used@@Base+0x7bc8>
  443370:	cbz	w0, 443388 <_obstack_memory_used@@Base+0x7b90>
  443374:	mov	x0, x24
  443378:	bl	43eb28 <_obstack_memory_used@@Base+0x3330>
  44337c:	b	4433b0 <_obstack_memory_used@@Base+0x7bb8>
  443380:	mov	x24, xzr
  443384:	str	wzr, [x19]
  443388:	mov	x0, x24
  44338c:	ldp	x20, x19, [sp, #80]
  443390:	ldp	x22, x21, [sp, #64]
  443394:	ldp	x24, x23, [sp, #48]
  443398:	ldp	x26, x25, [sp, #32]
  44339c:	ldr	x27, [sp, #16]
  4433a0:	ldp	x29, x30, [sp], #96
  4433a4:	ret
  4433a8:	mov	x0, x24
  4433ac:	bl	4049b0 <free@plt>
  4433b0:	mov	x24, xzr
  4433b4:	mov	w8, #0xc                   	// #12
  4433b8:	str	w8, [x19]
  4433bc:	b	443388 <_obstack_memory_used@@Base+0x7b90>
  4433c0:	stp	x29, x30, [sp, #-64]!
  4433c4:	stp	x24, x23, [sp, #16]
  4433c8:	stp	x22, x21, [sp, #32]
  4433cc:	stp	x20, x19, [sp, #48]
  4433d0:	ldr	x23, [x1, #16]
  4433d4:	mov	x21, x0
  4433d8:	mov	x22, x1
  4433dc:	mov	x29, sp
  4433e0:	lsl	x0, x23, #3
  4433e4:	mov	x20, x2
  4433e8:	mov	x19, x1
  4433ec:	str	x2, [x1]
  4433f0:	str	x23, [x22, #32]!
  4433f4:	str	xzr, [x1, #40]
  4433f8:	bl	4044d0 <malloc@plt>
  4433fc:	str	x0, [x19, #48]
  443400:	cbz	x0, 4434c0 <_obstack_memory_used@@Base+0x7cc8>
  443404:	cmp	x23, #0x1
  443408:	b.lt	443444 <_obstack_memory_used@@Base+0x7c4c>  // b.tstop
  44340c:	mov	x24, xzr
  443410:	ldr	x8, [x19, #24]
  443414:	ldr	x1, [x8, x24, lsl #3]
  443418:	ldr	x8, [x21]
  44341c:	add	x8, x8, x1, lsl #4
  443420:	ldrb	w8, [x8, #8]
  443424:	tbnz	w8, #3, 443438 <_obstack_memory_used@@Base+0x7c40>
  443428:	mov	x0, x22
  44342c:	bl	442fcc <_obstack_memory_used@@Base+0x77d4>
  443430:	tbz	w0, #0, 4434c0 <_obstack_memory_used@@Base+0x7cc8>
  443434:	ldr	x23, [x19, #16]
  443438:	add	x24, x24, #0x1
  44343c:	cmp	x24, x23
  443440:	b.lt	443410 <_obstack_memory_used@@Base+0x7c18>  // b.tstop
  443444:	ldr	x9, [x21, #136]
  443448:	ldr	x8, [x21, #64]
  44344c:	mov	w11, #0x18                  	// #24
  443450:	and	x10, x9, x20
  443454:	madd	x20, x10, x11, x8
  443458:	mov	x21, x20
  44345c:	ldr	x11, [x21, #8]!
  443460:	ldr	x9, [x20]
  443464:	cmp	x11, x9
  443468:	b.le	44348c <_obstack_memory_used@@Base+0x7c94>
  44346c:	mov	w11, #0x18                  	// #24
  443470:	madd	x8, x10, x11, x8
  443474:	ldr	x8, [x8, #16]
  443478:	mov	w0, wzr
  44347c:	add	x10, x9, #0x1
  443480:	str	x10, [x20]
  443484:	str	x19, [x8, x9, lsl #3]
  443488:	b	4434c4 <_obstack_memory_used@@Base+0x7ccc>
  44348c:	mov	w11, #0x18                  	// #24
  443490:	madd	x22, x10, x11, x8
  443494:	ldr	x0, [x22, #16]!
  443498:	lsl	x8, x9, #1
  44349c:	add	x23, x8, #0x2
  4434a0:	lsl	x1, x23, #3
  4434a4:	bl	404710 <realloc@plt>
  4434a8:	cbz	x0, 4434c0 <_obstack_memory_used@@Base+0x7cc8>
  4434ac:	str	x0, [x22]
  4434b0:	str	x23, [x21]
  4434b4:	ldr	x9, [x20]
  4434b8:	mov	x8, x0
  4434bc:	b	443478 <_obstack_memory_used@@Base+0x7c80>
  4434c0:	mov	w0, #0xc                   	// #12
  4434c4:	ldp	x20, x19, [sp, #48]
  4434c8:	ldp	x22, x21, [sp, #32]
  4434cc:	ldp	x24, x23, [sp, #16]
  4434d0:	ldp	x29, x30, [sp], #64
  4434d4:	ret
  4434d8:	sub	sp, sp, #0x70
  4434dc:	stp	x29, x30, [sp, #32]
  4434e0:	str	x25, [sp, #48]
  4434e4:	stp	x24, x23, [sp, #64]
  4434e8:	stp	x22, x21, [sp, #80]
  4434ec:	stp	x20, x19, [sp, #96]
  4434f0:	mov	x9, x0
  4434f4:	ldr	x8, [x9, #40]!
  4434f8:	mov	x19, x0
  4434fc:	mov	x20, x1
  443500:	add	x29, sp, #0x20
  443504:	cmp	x8, x1
  443508:	b.le	443660 <_obstack_memory_used@@Base+0x7e68>
  44350c:	ldr	w8, [x19, #144]
  443510:	cmp	w8, #0x2
  443514:	b.lt	44351c <_obstack_memory_used@@Base+0x7d24>  // b.tstop
  443518:	str	xzr, [x19, #32]
  44351c:	ldr	x10, [x19, #80]
  443520:	ldr	x11, [x19, #96]
  443524:	strb	wzr, [x19, #140]
  443528:	tst	w2, #0x1
  44352c:	str	x10, [x19, #88]
  443530:	str	x11, [x19, #104]
  443534:	stp	xzr, xzr, [x9]
  443538:	str	xzr, [x9, #16]
  44353c:	ldrb	w9, [x19, #139]
  443540:	mov	w10, #0x4                   	// #4
  443544:	mov	w11, #0x6                   	// #6
  443548:	mov	x8, xzr
  44354c:	csel	w10, w11, w10, eq  // eq = none
  443550:	mov	x23, x20
  443554:	str	w10, [x19, #112]
  443558:	cbnz	w9, 44356c <_obstack_memory_used@@Base+0x7d74>
  44355c:	ldr	x9, [x19]
  443560:	mov	x8, xzr
  443564:	mov	x23, x20
  443568:	str	x9, [x19, #8]
  44356c:	cbz	x23, 4435e4 <_obstack_memory_used@@Base+0x7dec>
  443570:	ldr	x10, [x19, #56]
  443574:	cmp	x23, x10
  443578:	b.ge	44366c <_obstack_memory_used@@Base+0x7e74>  // b.tcont
  44357c:	ldrb	w8, [x19, #140]
  443580:	cbnz	w8, 4437c0 <_obstack_memory_used@@Base+0x7fc8>
  443584:	sub	x1, x23, #0x1
  443588:	mov	x0, x19
  44358c:	bl	44420c <_obstack_memory_used@@Base+0x8a14>
  443590:	ldr	w8, [x19, #144]
  443594:	str	w0, [x19, #112]
  443598:	cmp	w8, #0x2
  44359c:	b.lt	4435b8 <_obstack_memory_used@@Base+0x7dc0>  // b.tstop
  4435a0:	ldr	x8, [x19, #48]
  4435a4:	ldr	x0, [x19, #16]
  4435a8:	sub	x8, x8, x23
  4435ac:	add	x1, x0, x23, lsl #2
  4435b0:	lsl	x2, x8, #2
  4435b4:	bl	404100 <memmove@plt>
  4435b8:	ldrb	w8, [x19, #139]
  4435bc:	cbnz	w8, 4438a8 <_obstack_memory_used@@Base+0x80b0>
  4435c0:	ldr	q0, [x19, #48]
  4435c4:	dup	v1.2d, x23
  4435c8:	sub	v0.2d, v0.2d, v1.2d
  4435cc:	str	q0, [x19, #48]
  4435d0:	ldrb	w8, [x19, #139]
  4435d4:	cbnz	w8, 4435e4 <_obstack_memory_used@@Base+0x7dec>
  4435d8:	ldr	x8, [x19, #8]
  4435dc:	add	x8, x8, x23
  4435e0:	str	x8, [x19, #8]
  4435e4:	ldr	x8, [x19, #88]
  4435e8:	ldr	x9, [x19, #104]
  4435ec:	ldr	w10, [x19, #144]
  4435f0:	str	x20, [x19, #40]
  4435f4:	sub	x8, x8, x23
  4435f8:	sub	x9, x9, x23
  4435fc:	cmp	w10, #0x2
  443600:	str	x8, [x19, #88]
  443604:	str	x9, [x19, #104]
  443608:	b.lt	443624 <_obstack_memory_used@@Base+0x7e2c>  // b.tstop
  44360c:	ldrb	w8, [x19, #136]
  443610:	cbz	w8, 443634 <_obstack_memory_used@@Base+0x7e3c>
  443614:	mov	x0, x19
  443618:	bl	43ecf0 <_obstack_memory_used@@Base+0x34f8>
  44361c:	cbnz	w0, 443644 <_obstack_memory_used@@Base+0x7e4c>
  443620:	b	44363c <_obstack_memory_used@@Base+0x7e44>
  443624:	ldrb	w9, [x19, #139]
  443628:	cbnz	w9, 443938 <_obstack_memory_used@@Base+0x8140>
  44362c:	str	x8, [x19, #48]
  443630:	b	44363c <_obstack_memory_used@@Base+0x7e44>
  443634:	mov	x0, x19
  443638:	bl	43f2b0 <_obstack_memory_used@@Base+0x3ab8>
  44363c:	mov	w0, wzr
  443640:	str	xzr, [x19, #72]
  443644:	ldp	x20, x19, [sp, #96]
  443648:	ldp	x22, x21, [sp, #80]
  44364c:	ldp	x24, x23, [sp, #64]
  443650:	ldr	x25, [sp, #48]
  443654:	ldp	x29, x30, [sp, #32]
  443658:	add	sp, sp, #0x70
  44365c:	ret
  443660:	sub	x23, x20, x8
  443664:	cbnz	x23, 443570 <_obstack_memory_used@@Base+0x7d78>
  443668:	b	4435e4 <_obstack_memory_used@@Base+0x7dec>
  44366c:	ldrb	w11, [x19, #140]
  443670:	ldr	x9, [x19, #48]
  443674:	cbnz	w11, 443a7c <_obstack_memory_used@@Base+0x8284>
  443678:	ldr	w11, [x19, #144]
  44367c:	str	xzr, [x19, #48]
  443680:	cmp	w11, #0x2
  443684:	b.lt	44394c <_obstack_memory_used@@Base+0x8154>  // b.tstop
  443688:	ldrb	w12, [x19, #137]
  44368c:	cbz	w12, 443744 <_obstack_memory_used@@Base+0x7f4c>
  443690:	ldr	x14, [x19]
  443694:	sub	x11, x23, x11
  443698:	add	x12, x14, x8
  44369c:	add	x11, x12, x11
  4436a0:	cmp	x11, x14
  4436a4:	add	x24, x12, x23
  4436a8:	csel	x13, x14, x11, cc  // cc = lo, ul, last
  4436ac:	add	x11, x14, x23
  4436b0:	add	x14, x11, x8
  4436b4:	sub	x14, x14, #0x1
  4436b8:	cmp	x14, x13
  4436bc:	b.cc	443744 <_obstack_memory_used@@Base+0x7f4c>  // b.lo, b.ul, b.last
  4436c0:	ldrb	w14, [x14]
  4436c4:	sub	x11, x11, #0x1
  4436c8:	and	w14, w14, #0xc0
  4436cc:	cmp	w14, #0x80
  4436d0:	b.eq	4436b0 <_obstack_memory_used@@Base+0x7eb8>  // b.none
  4436d4:	ldr	x10, [x19, #88]
  4436d8:	mov	x21, x9
  4436dc:	ldr	x9, [x19, #120]
  4436e0:	add	x25, x11, x8
  4436e4:	add	x10, x12, x10
  4436e8:	mov	w22, w2
  4436ec:	sub	x2, x10, x25
  4436f0:	mov	x1, x25
  4436f4:	cbnz	x9, 443ae8 <_obstack_memory_used@@Base+0x82f0>
  4436f8:	sub	x0, x29, #0x4
  4436fc:	add	x3, x29, #0x18
  443700:	str	xzr, [x29, #24]
  443704:	bl	43b470 <argp_parse@@Base+0xc7b4>
  443708:	sub	x8, x24, x25
  44370c:	subs	x9, x0, x8
  443710:	mov	w8, #0xffffffff            	// #-1
  443714:	b.cc	44372c <_obstack_memory_used@@Base+0x7f34>  // b.lo, b.ul, b.last
  443718:	cmn	x0, #0x3
  44371c:	b.hi	44372c <_obstack_memory_used@@Base+0x7f34>  // b.pmore
  443720:	str	xzr, [x19, #32]
  443724:	str	x9, [x19, #48]
  443728:	ldur	w8, [x29, #-4]
  44372c:	cmn	w8, #0x1
  443730:	b.ne	4439dc <_obstack_memory_used@@Base+0x81e4>  // b.any
  443734:	ldr	x8, [x19, #40]
  443738:	ldr	x10, [x19, #56]
  44373c:	mov	w2, w22
  443740:	mov	x9, x21
  443744:	add	x24, x10, x8
  443748:	subs	x21, x24, x20
  44374c:	b.ge	4439c8 <_obstack_memory_used@@Base+0x81d0>  // b.tcont
  443750:	add	x22, x19, #0x20
  443754:	str	x9, [sp, #8]
  443758:	str	w2, [sp, #4]
  44375c:	ldr	x8, [x19, #80]
  443760:	ldr	x9, [x19]
  443764:	ldr	x25, [x19, #32]
  443768:	add	x0, x29, #0x18
  44376c:	sub	x21, x8, x24
  443770:	add	x1, x9, x24
  443774:	mov	x2, x21
  443778:	mov	x3, x22
  44377c:	bl	43b470 <argp_parse@@Base+0xc7b4>
  443780:	sub	x8, x0, #0x1
  443784:	cmn	x8, #0x3
  443788:	b.cs	4437a0 <_obstack_memory_used@@Base+0x7fa8>  // b.hs, b.nlast
  44378c:	ldr	w8, [x29, #24]
  443790:	add	x24, x0, x24
  443794:	subs	x21, x24, x20
  443798:	b.lt	44375c <_obstack_memory_used@@Base+0x7f64>  // b.tstop
  44379c:	b	4439d0 <_obstack_memory_used@@Base+0x81d8>
  4437a0:	mov	w8, wzr
  4437a4:	cbz	x21, 4437b4 <_obstack_memory_used@@Base+0x7fbc>
  4437a8:	cbz	x0, 4437b4 <_obstack_memory_used@@Base+0x7fbc>
  4437ac:	ldr	x8, [x19]
  4437b0:	ldrb	w8, [x8, x24]
  4437b4:	str	x25, [x22]
  4437b8:	mov	w0, #0x1                   	// #1
  4437bc:	b	443790 <_obstack_memory_used@@Base+0x7f98>
  4437c0:	ldr	x22, [x19, #48]
  4437c4:	ldr	x21, [x19, #24]
  4437c8:	mov	x8, xzr
  4437cc:	mov	x10, x22
  4437d0:	add	x9, x8, x10
  4437d4:	cmp	x9, #0x0
  4437d8:	cinc	x9, x9, lt  // lt = tstop
  4437dc:	asr	x9, x9, #1
  4437e0:	ldr	x11, [x21, x9, lsl #3]
  4437e4:	mov	x12, x9
  4437e8:	cmp	x11, x23
  4437ec:	b.gt	4437fc <_obstack_memory_used@@Base+0x8004>
  4437f0:	b.ge	443808 <_obstack_memory_used@@Base+0x8010>  // b.tcont
  4437f4:	add	x8, x9, #0x1
  4437f8:	mov	x12, x10
  4437fc:	cmp	x8, x12
  443800:	mov	x10, x12
  443804:	b.lt	4437d0 <_obstack_memory_used@@Base+0x7fd8>  // b.tstop
  443808:	cmp	x11, x23
  44380c:	cinc	x24, x9, lt  // lt = tstop
  443810:	sub	x1, x24, #0x1
  443814:	mov	x0, x19
  443818:	bl	44420c <_obstack_memory_used@@Base+0x8a14>
  44381c:	subs	x8, x22, x23
  443820:	str	w0, [x19, #112]
  443824:	b.le	4438c0 <_obstack_memory_used@@Base+0x80c8>
  443828:	cmp	x24, x23
  44382c:	b.ne	4438c0 <_obstack_memory_used@@Base+0x80c8>  // b.any
  443830:	ldr	x9, [x21, x23, lsl #3]
  443834:	cmp	x9, x23
  443838:	b.ne	4438c0 <_obstack_memory_used@@Base+0x80c8>  // b.any
  44383c:	ldr	x0, [x19, #16]
  443840:	lsl	x2, x8, #2
  443844:	add	x1, x0, x23, lsl #2
  443848:	bl	404100 <memmove@plt>
  44384c:	ldr	x0, [x19, #8]
  443850:	ldr	x8, [x19, #48]
  443854:	add	x1, x0, x23
  443858:	sub	x2, x8, x23
  44385c:	bl	404100 <memmove@plt>
  443860:	ldr	q0, [x19, #48]
  443864:	dup	v1.2d, x23
  443868:	sub	v0.2d, v0.2d, v1.2d
  44386c:	fmov	x8, d0
  443870:	cmp	x8, #0x1
  443874:	str	q0, [x19, #48]
  443878:	b.lt	4435d0 <_obstack_memory_used@@Base+0x7dd8>  // b.tstop
  44387c:	ldr	x9, [x19, #24]
  443880:	mov	x8, xzr
  443884:	add	x10, x9, x23, lsl #3
  443888:	ldr	x11, [x10, x8, lsl #3]
  44388c:	sub	x11, x11, x23
  443890:	str	x11, [x9, x8, lsl #3]
  443894:	ldr	x11, [x19, #48]
  443898:	add	x8, x8, #0x1
  44389c:	cmp	x8, x11
  4438a0:	b.lt	443888 <_obstack_memory_used@@Base+0x8090>  // b.tstop
  4438a4:	b	4435d0 <_obstack_memory_used@@Base+0x7dd8>
  4438a8:	ldr	x0, [x19, #8]
  4438ac:	ldr	x8, [x19, #48]
  4438b0:	add	x1, x0, x23
  4438b4:	sub	x2, x8, x23
  4438b8:	bl	404100 <memmove@plt>
  4438bc:	b	4435c0 <_obstack_memory_used@@Base+0x7dc8>
  4438c0:	ldr	x9, [x19, #96]
  4438c4:	ldr	x8, [x19, #80]
  4438c8:	sub	x10, x23, x20
  4438cc:	strb	wzr, [x19, #140]
  4438d0:	add	x9, x10, x9
  4438d4:	add	x8, x10, x8
  4438d8:	str	x9, [x19, #104]
  4438dc:	sub	x9, x21, #0x8
  4438e0:	str	x8, [x19, #88]
  4438e4:	mov	x8, x24
  4438e8:	subs	x24, x24, #0x1
  4438ec:	b.lt	4438fc <_obstack_memory_used@@Base+0x8104>  // b.tstop
  4438f0:	ldr	x10, [x9, x8, lsl #3]
  4438f4:	cmp	x10, x23
  4438f8:	b.eq	4438e4 <_obstack_memory_used@@Base+0x80ec>  // b.none
  4438fc:	cmp	x8, x22
  443900:	b.ge	443924 <_obstack_memory_used@@Base+0x812c>  // b.tcont
  443904:	ldr	x9, [x19, #16]
  443908:	ldr	w10, [x9, x8, lsl #2]
  44390c:	cmn	w10, #0x1
  443910:	b.ne	443924 <_obstack_memory_used@@Base+0x812c>  // b.any
  443914:	add	x8, x8, #0x1
  443918:	cmp	x22, x8
  44391c:	b.ne	443908 <_obstack_memory_used@@Base+0x8110>  // b.any
  443920:	b	44392c <_obstack_memory_used@@Base+0x8134>
  443924:	cmp	x8, x22
  443928:	b.ne	44398c <_obstack_memory_used@@Base+0x8194>  // b.any
  44392c:	mov	x8, xzr
  443930:	str	xzr, [x19, #48]
  443934:	b	443a74 <_obstack_memory_used@@Base+0x827c>
  443938:	ldrb	w8, [x19, #136]
  44393c:	cbz	w8, 443a00 <_obstack_memory_used@@Base+0x8208>
  443940:	mov	x0, x19
  443944:	bl	43f238 <_obstack_memory_used@@Base+0x3a40>
  443948:	b	44363c <_obstack_memory_used@@Base+0x7e44>
  44394c:	ldr	x9, [x19]
  443950:	add	x8, x23, x8
  443954:	add	x8, x8, x9
  443958:	ldr	x9, [x19, #120]
  44395c:	ldurb	w8, [x8, #-1]
  443960:	str	xzr, [x19, #56]
  443964:	cbz	x9, 44396c <_obstack_memory_used@@Base+0x8174>
  443968:	ldrb	w8, [x9, x8]
  44396c:	ldr	x9, [x19, #128]
  443970:	lsr	x10, x8, #3
  443974:	and	x10, x10, #0x18
  443978:	ldr	x9, [x9, x10]
  44397c:	lsr	x9, x9, x8
  443980:	tbz	w9, #0, 443a14 <_obstack_memory_used@@Base+0x821c>
  443984:	mov	w8, #0x1                   	// #1
  443988:	b	443a4c <_obstack_memory_used@@Base+0x8254>
  44398c:	ldr	x8, [x21, x8, lsl #3]
  443990:	subs	x21, x8, x23
  443994:	str	x21, [x19, #48]
  443998:	b.eq	443a40 <_obstack_memory_used@@Base+0x8248>  // b.none
  44399c:	cmp	x21, #0x1
  4439a0:	b.lt	4439b4 <_obstack_memory_used@@Base+0x81bc>  // b.tstop
  4439a4:	ldr	x0, [x19, #16]
  4439a8:	lsl	x2, x21, #2
  4439ac:	mov	w1, #0xff                  	// #255
  4439b0:	bl	4045e0 <memset@plt>
  4439b4:	ldr	x0, [x19, #8]
  4439b8:	mov	w1, #0xff                  	// #255
  4439bc:	mov	x2, x21
  4439c0:	bl	4045e0 <memset@plt>
  4439c4:	b	443a70 <_obstack_memory_used@@Base+0x8278>
  4439c8:	str	x21, [x19, #48]
  4439cc:	b	443a5c <_obstack_memory_used@@Base+0x8264>
  4439d0:	cmn	w8, #0x1
  4439d4:	str	x21, [x19, #48]
  4439d8:	b.eq	443a54 <_obstack_memory_used@@Base+0x825c>  // b.none
  4439dc:	ldrb	w9, [x19, #142]
  4439e0:	cbnz	w9, 443ac4 <_obstack_memory_used@@Base+0x82cc>
  4439e4:	cmp	w8, #0xa
  4439e8:	b.ne	443a30 <_obstack_memory_used@@Base+0x8238>  // b.any
  4439ec:	ldrb	w8, [x19, #141]
  4439f0:	cmp	w8, #0x0
  4439f4:	cset	w8, ne  // ne = any
  4439f8:	lsl	w9, w8, #1
  4439fc:	b	443a34 <_obstack_memory_used@@Base+0x823c>
  443a00:	ldr	x8, [x19, #120]
  443a04:	cbz	x8, 44363c <_obstack_memory_used@@Base+0x7e44>
  443a08:	mov	x0, x19
  443a0c:	bl	43f484 <_obstack_memory_used@@Base+0x3c8c>
  443a10:	b	44363c <_obstack_memory_used@@Base+0x7e44>
  443a14:	cmp	w8, #0xa
  443a18:	b.ne	443a48 <_obstack_memory_used@@Base+0x8250>  // b.any
  443a1c:	ldrb	w8, [x19, #141]
  443a20:	cmp	w8, #0x0
  443a24:	cset	w8, ne  // ne = any
  443a28:	lsl	w8, w8, #1
  443a2c:	b	443a4c <_obstack_memory_used@@Base+0x8254>
  443a30:	mov	w9, wzr
  443a34:	ldr	x21, [x19, #48]
  443a38:	str	w9, [x19, #112]
  443a3c:	b	443a6c <_obstack_memory_used@@Base+0x8274>
  443a40:	mov	x8, xzr
  443a44:	b	443a74 <_obstack_memory_used@@Base+0x827c>
  443a48:	mov	w8, wzr
  443a4c:	str	w8, [x19, #112]
  443a50:	b	4435d0 <_obstack_memory_used@@Base+0x7dd8>
  443a54:	ldr	w2, [sp, #4]
  443a58:	ldr	x9, [sp, #8]
  443a5c:	sub	x1, x9, #0x1
  443a60:	mov	x0, x19
  443a64:	bl	44420c <_obstack_memory_used@@Base+0x8a14>
  443a68:	str	w0, [x19, #112]
  443a6c:	cbnz	x21, 443aa0 <_obstack_memory_used@@Base+0x82a8>
  443a70:	ldr	x8, [x19, #48]
  443a74:	str	x8, [x19, #56]
  443a78:	b	4435d0 <_obstack_memory_used@@Base+0x7dd8>
  443a7c:	ldr	x11, [x19, #80]
  443a80:	ldr	x12, [x19, #96]
  443a84:	sub	x13, x23, x20
  443a88:	strb	wzr, [x19, #140]
  443a8c:	add	x11, x13, x11
  443a90:	add	x12, x13, x12
  443a94:	str	x11, [x19, #88]
  443a98:	str	x12, [x19, #104]
  443a9c:	b	443678 <_obstack_memory_used@@Base+0x7e80>
  443aa0:	cmp	x21, #0x1
  443aa4:	b.lt	443ab8 <_obstack_memory_used@@Base+0x82c0>  // b.tstop
  443aa8:	ldr	x0, [x19, #16]
  443aac:	lsl	x2, x21, #2
  443ab0:	mov	w1, #0xff                  	// #255
  443ab4:	bl	4045e0 <memset@plt>
  443ab8:	ldrb	w8, [x19, #139]
  443abc:	cbnz	w8, 4439b4 <_obstack_memory_used@@Base+0x81bc>
  443ac0:	b	443a70 <_obstack_memory_used@@Base+0x8278>
  443ac4:	mov	w0, w8
  443ac8:	mov	w21, w8
  443acc:	bl	404ba0 <iswalnum@plt>
  443ad0:	cmp	w21, #0x5f
  443ad4:	mov	w9, #0x1                   	// #1
  443ad8:	b.eq	443a34 <_obstack_memory_used@@Base+0x823c>  // b.none
  443adc:	mov	w8, w21
  443ae0:	cbz	w0, 4439e4 <_obstack_memory_used@@Base+0x81ec>
  443ae4:	b	443a34 <_obstack_memory_used@@Base+0x823c>
  443ae8:	cmp	x2, #0x6
  443aec:	mov	w10, #0x6                   	// #6
  443af0:	csel	x10, x2, x10, lt  // lt = tstop
  443af4:	cmp	w10, #0x1
  443af8:	sub	x1, x29, #0xc
  443afc:	b.lt	4436f8 <_obstack_memory_used@@Base+0x7f00>  // b.tstop
  443b00:	sxtw	x10, w10
  443b04:	sub	x12, x1, #0x1
  443b08:	add	x13, x8, x10
  443b0c:	add	x13, x11, x13
  443b10:	ldurb	w13, [x13, #-1]
  443b14:	sub	x1, x29, #0xc
  443b18:	ldrb	w13, [x9, x13]
  443b1c:	strb	w13, [x12, x10]
  443b20:	subs	x10, x10, #0x1
  443b24:	b.gt	443b08 <_obstack_memory_used@@Base+0x8310>
  443b28:	b	4436f8 <_obstack_memory_used@@Base+0x7f00>
  443b2c:	stp	x29, x30, [sp, #-32]!
  443b30:	stp	x20, x19, [sp, #16]
  443b34:	mov	x8, x2
  443b38:	ldr	w2, [x0, #160]
  443b3c:	mov	x20, x1
  443b40:	mov	x1, x8
  443b44:	mov	x29, sp
  443b48:	mov	x19, x0
  443b4c:	bl	44420c <_obstack_memory_used@@Base+0x8a14>
  443b50:	ldr	x9, [x20, #16]
  443b54:	cmp	x9, #0x1
  443b58:	b.lt	443bb8 <_obstack_memory_used@@Base+0x83c0>  // b.tstop
  443b5c:	ldr	x8, [x19, #152]
  443b60:	ldr	x10, [x20, #24]
  443b64:	mov	x12, xzr
  443b68:	ldr	x11, [x8]
  443b6c:	ldr	x8, [x10, x12, lsl #3]
  443b70:	add	x13, x11, x8, lsl #4
  443b74:	ldr	w13, [x13, #8]
  443b78:	and	w14, w13, #0xff
  443b7c:	cmp	w14, #0x2
  443b80:	b.ne	443bac <_obstack_memory_used@@Base+0x83b4>  // b.any
  443b84:	tst	w13, #0x3ff00
  443b88:	b.eq	443bbc <_obstack_memory_used@@Base+0x83c4>  // b.none
  443b8c:	tbnz	w0, #0, 443b94 <_obstack_memory_used@@Base+0x839c>
  443b90:	tbnz	w13, #10, 443bac <_obstack_memory_used@@Base+0x83b4>
  443b94:	tbz	w0, #0, 443b9c <_obstack_memory_used@@Base+0x83a4>
  443b98:	tbnz	w13, #11, 443bac <_obstack_memory_used@@Base+0x83b4>
  443b9c:	tbnz	w0, #1, 443ba4 <_obstack_memory_used@@Base+0x83ac>
  443ba0:	tbnz	w13, #13, 443bac <_obstack_memory_used@@Base+0x83b4>
  443ba4:	tbnz	w0, #3, 443bbc <_obstack_memory_used@@Base+0x83c4>
  443ba8:	tbz	w13, #15, 443bbc <_obstack_memory_used@@Base+0x83c4>
  443bac:	add	x12, x12, #0x1
  443bb0:	cmp	x12, x9
  443bb4:	b.lt	443b6c <_obstack_memory_used@@Base+0x8374>  // b.tstop
  443bb8:	mov	x8, xzr
  443bbc:	ldp	x20, x19, [sp, #16]
  443bc0:	mov	x0, x8
  443bc4:	ldp	x29, x30, [sp], #32
  443bc8:	ret
  443bcc:	stp	x29, x30, [sp, #-64]!
  443bd0:	stp	x22, x21, [sp, #32]
  443bd4:	stp	x20, x19, [sp, #48]
  443bd8:	ldr	x8, [x0, #232]
  443bdc:	mov	x19, x0
  443be0:	str	x23, [sp, #16]
  443be4:	mov	x29, sp
  443be8:	cmp	x8, #0x1
  443bec:	b.lt	443c6c <_obstack_memory_used@@Base+0x8474>  // b.tstop
  443bf0:	mov	x22, xzr
  443bf4:	ldr	x8, [x19, #248]
  443bf8:	ldr	x20, [x8, x22, lsl #3]
  443bfc:	ldr	x8, [x20, #32]
  443c00:	cmp	x8, #0x1
  443c04:	b.lt	443c34 <_obstack_memory_used@@Base+0x843c>  // b.tstop
  443c08:	mov	x23, xzr
  443c0c:	ldr	x8, [x20, #40]
  443c10:	ldr	x21, [x8, x23, lsl #3]
  443c14:	ldr	x0, [x21, #32]
  443c18:	bl	4049b0 <free@plt>
  443c1c:	mov	x0, x21
  443c20:	bl	4049b0 <free@plt>
  443c24:	ldr	x8, [x20, #32]
  443c28:	add	x23, x23, #0x1
  443c2c:	cmp	x23, x8
  443c30:	b.lt	443c0c <_obstack_memory_used@@Base+0x8414>  // b.tstop
  443c34:	ldr	x0, [x20, #40]
  443c38:	bl	4049b0 <free@plt>
  443c3c:	ldr	x8, [x20, #16]
  443c40:	cbz	x8, 443c54 <_obstack_memory_used@@Base+0x845c>
  443c44:	ldr	x0, [x8, #16]
  443c48:	bl	4049b0 <free@plt>
  443c4c:	ldr	x0, [x20, #16]
  443c50:	bl	4049b0 <free@plt>
  443c54:	mov	x0, x20
  443c58:	bl	4049b0 <free@plt>
  443c5c:	ldr	x8, [x19, #232]
  443c60:	add	x22, x22, #0x1
  443c64:	cmp	x22, x8
  443c68:	b.lt	443bf4 <_obstack_memory_used@@Base+0x83fc>  // b.tstop
  443c6c:	str	xzr, [x19, #232]
  443c70:	str	xzr, [x19, #200]
  443c74:	ldp	x20, x19, [sp, #48]
  443c78:	ldp	x22, x21, [sp, #32]
  443c7c:	ldr	x23, [sp, #16]
  443c80:	ldp	x29, x30, [sp], #64
  443c84:	ret
  443c88:	stp	x29, x30, [sp, #-96]!
  443c8c:	stp	x28, x27, [sp, #16]
  443c90:	stp	x26, x25, [sp, #32]
  443c94:	stp	x24, x23, [sp, #48]
  443c98:	stp	x22, x21, [sp, #64]
  443c9c:	stp	x20, x19, [sp, #80]
  443ca0:	mov	x29, sp
  443ca4:	sub	sp, sp, #0x70
  443ca8:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x19808>
  443cac:	add	x8, x8, #0xcb8
  443cb0:	ldr	q0, [x8]
  443cb4:	ldr	x8, [x8, #16]
  443cb8:	ldr	x24, [x0]
  443cbc:	mov	x21, x3
  443cc0:	mov	x22, x2
  443cc4:	mov	x23, x1
  443cc8:	stur	q0, [x29, #-64]
  443ccc:	stur	x8, [x29, #-48]
  443cd0:	tbz	w4, #0, 443cec <_obstack_memory_used@@Base+0x84f4>
  443cd4:	mov	w0, #0x60                  	// #96
  443cd8:	bl	4044d0 <malloc@plt>
  443cdc:	stur	x0, [x29, #-48]
  443ce0:	cbz	x0, 4441e8 <_obstack_memory_used@@Base+0x89f0>
  443ce4:	sub	x19, x29, #0x40
  443ce8:	b	443cf0 <_obstack_memory_used@@Base+0x84f8>
  443cec:	mov	x19, xzr
  443cf0:	ldr	x26, [x24, #144]
  443cf4:	lsl	x20, x22, #4
  443cf8:	cmp	x20, #0xfbf
  443cfc:	stp	xzr, xzr, [x29, #-32]
  443d00:	stur	xzr, [x29, #-16]
  443d04:	b.hi	443d24 <_obstack_memory_used@@Base+0x852c>  // b.pmore
  443d08:	add	x9, x20, #0xf
  443d0c:	mov	x8, sp
  443d10:	and	x9, x9, #0xfffffffffffffff0
  443d14:	sub	x0, x8, x9
  443d18:	mov	sp, x0
  443d1c:	stur	wzr, [x29, #-84]
  443d20:	b	443d38 <_obstack_memory_used@@Base+0x8540>
  443d24:	mov	x0, x20
  443d28:	bl	4044d0 <malloc@plt>
  443d2c:	cbz	x0, 4441e0 <_obstack_memory_used@@Base+0x89e8>
  443d30:	mov	w8, #0x1                   	// #1
  443d34:	stur	w8, [x29, #-84]
  443d38:	mov	x1, x21
  443d3c:	mov	x2, x20
  443d40:	stur	x0, [x29, #-80]
  443d44:	stur	x20, [x29, #-96]
  443d48:	bl	4040f0 <memcpy@plt>
  443d4c:	ldp	x25, x8, [x21]
  443d50:	cmp	x25, x8
  443d54:	stur	x25, [x29, #-8]
  443d58:	b.le	443d64 <_obstack_memory_used@@Base+0x856c>
  443d5c:	mov	x0, xzr
  443d60:	b	444168 <_obstack_memory_used@@Base+0x8970>
  443d64:	add	x8, x21, #0x8
  443d68:	stur	x8, [x29, #-104]
  443d6c:	stur	x24, [x29, #-72]
  443d70:	ldr	x8, [x24]
  443d74:	add	x8, x8, x26, lsl #4
  443d78:	ldr	w9, [x8, #8]
  443d7c:	and	w10, w9, #0xff
  443d80:	cmp	w10, #0x9
  443d84:	b.eq	443db0 <_obstack_memory_used@@Base+0x85b8>  // b.none
  443d88:	cmp	w10, #0x8
  443d8c:	b.ne	443e14 <_obstack_memory_used@@Base+0x861c>  // b.any
  443d90:	ldr	x8, [x8]
  443d94:	add	x8, x8, #0x1
  443d98:	cmp	x8, x22
  443d9c:	b.ge	443e14 <_obstack_memory_used@@Base+0x861c>  // b.tcont
  443da0:	add	x8, x21, x8, lsl #4
  443da4:	mov	x9, #0xffffffffffffffff    	// #-1
  443da8:	stp	x25, x9, [x8]
  443dac:	b	443e14 <_obstack_memory_used@@Base+0x861c>
  443db0:	ldr	x8, [x8]
  443db4:	add	x8, x8, #0x1
  443db8:	cmp	x8, x22
  443dbc:	b.ge	443e14 <_obstack_memory_used@@Base+0x861c>  // b.tcont
  443dc0:	lsl	x10, x8, #4
  443dc4:	ldr	x11, [x21, x10]
  443dc8:	cmp	x11, x25
  443dcc:	b.ge	443de4 <_obstack_memory_used@@Base+0x85ec>  // b.tcont
  443dd0:	ldur	x0, [x29, #-80]
  443dd4:	add	x8, x21, x8, lsl #4
  443dd8:	str	x25, [x8, #8]
  443ddc:	mov	x1, x21
  443de0:	b	443e00 <_obstack_memory_used@@Base+0x8608>
  443de4:	tbz	w9, #19, 443e0c <_obstack_memory_used@@Base+0x8614>
  443de8:	ldur	x9, [x29, #-80]
  443dec:	ldr	x9, [x9, x10]
  443df0:	cmn	x9, #0x1
  443df4:	b.eq	443e0c <_obstack_memory_used@@Base+0x8614>  // b.none
  443df8:	ldur	x1, [x29, #-80]
  443dfc:	mov	x0, x21
  443e00:	ldur	x2, [x29, #-96]
  443e04:	bl	4040f0 <memcpy@plt>
  443e08:	b	443e14 <_obstack_memory_used@@Base+0x861c>
  443e0c:	add	x8, x21, x8, lsl #4
  443e10:	str	x25, [x8, #8]
  443e14:	ldr	x8, [x21, #8]
  443e18:	cmp	x25, x8
  443e1c:	b.ne	443e88 <_obstack_memory_used@@Base+0x8690>  // b.any
  443e20:	ldr	x8, [x23, #176]
  443e24:	cmp	x26, x8
  443e28:	b.ne	443e88 <_obstack_memory_used@@Base+0x8690>  // b.any
  443e2c:	cbz	x19, 4441ac <_obstack_memory_used@@Base+0x89b4>
  443e30:	mov	x8, xzr
  443e34:	cbz	x22, 443e64 <_obstack_memory_used@@Base+0x866c>
  443e38:	ldur	x9, [x29, #-104]
  443e3c:	ldur	x10, [x9, #-8]
  443e40:	tbnz	x10, #63, 443e50 <_obstack_memory_used@@Base+0x8658>
  443e44:	ldr	x10, [x9]
  443e48:	cmn	x10, #0x1
  443e4c:	b.eq	443e64 <_obstack_memory_used@@Base+0x866c>  // b.none
  443e50:	add	x8, x8, #0x1
  443e54:	cmp	x22, x8
  443e58:	add	x9, x9, #0x10
  443e5c:	b.ne	443e3c <_obstack_memory_used@@Base+0x8644>  // b.any
  443e60:	b	444164 <_obstack_memory_used@@Base+0x896c>
  443e64:	cmp	x8, x22
  443e68:	b.eq	444164 <_obstack_memory_used@@Base+0x896c>  // b.none
  443e6c:	sub	x1, x29, #0x8
  443e70:	sub	x4, x29, #0x20
  443e74:	mov	x0, x19
  443e78:	mov	x2, x22
  443e7c:	mov	x3, x21
  443e80:	bl	447054 <_obstack_memory_used@@Base+0xb85c>
  443e84:	mov	x26, x0
  443e88:	ldr	x28, [x23, #152]
  443e8c:	ldr	x8, [x28]
  443e90:	add	x9, x8, x26, lsl #4
  443e94:	ldr	w9, [x9, #8]
  443e98:	tbnz	w9, #3, 443f08 <_obstack_memory_used@@Base+0x8710>
  443e9c:	tbnz	w9, #20, 443f84 <_obstack_memory_used@@Base+0x878c>
  443ea0:	and	w9, w9, #0xff
  443ea4:	cmp	w9, #0x4
  443ea8:	b.ne	443fa8 <_obstack_memory_used@@Base+0x87b0>  // b.any
  443eac:	lsl	x9, x26, #4
  443eb0:	ldr	x8, [x8, x9]
  443eb4:	add	x8, x21, x8, lsl #4
  443eb8:	ldp	x8, x9, [x8, #16]
  443ebc:	sub	x25, x9, x8
  443ec0:	cbz	x19, 444024 <_obstack_memory_used@@Base+0x882c>
  443ec4:	cmn	x9, #0x1
  443ec8:	b.eq	444134 <_obstack_memory_used@@Base+0x893c>  // b.none
  443ecc:	cmn	x8, #0x1
  443ed0:	b.eq	444134 <_obstack_memory_used@@Base+0x893c>  // b.none
  443ed4:	cbz	x25, 444084 <_obstack_memory_used@@Base+0x888c>
  443ed8:	ldr	x9, [x23, #8]
  443edc:	ldur	x20, [x29, #-8]
  443ee0:	mov	x2, x25
  443ee4:	add	x0, x9, x8
  443ee8:	add	x1, x9, x20
  443eec:	bl	4046b0 <bcmp@plt>
  443ef0:	cbnz	w0, 444134 <_obstack_memory_used@@Base+0x893c>
  443ef4:	ldr	x8, [x28, #24]
  443ef8:	add	x25, x20, x25
  443efc:	ldr	x27, [x8, x26, lsl #3]
  443f00:	stur	x25, [x29, #-8]
  443f04:	b	443fe0 <_obstack_memory_used@@Base+0x87e8>
  443f08:	ldr	x8, [x23, #184]
  443f0c:	ldur	x25, [x29, #-8]
  443f10:	ldr	x20, [x28, #40]
  443f14:	sub	x0, x29, #0x20
  443f18:	mov	x1, x26
  443f1c:	ldr	x27, [x8, x25, lsl #3]
  443f20:	bl	442e2c <_obstack_memory_used@@Base+0x7634>
  443f24:	tbz	w0, #0, 4441c8 <_obstack_memory_used@@Base+0x89d0>
  443f28:	mov	w8, #0x18                  	// #24
  443f2c:	madd	x8, x26, x8, x20
  443f30:	ldr	x24, [x8, #8]
  443f34:	cmp	x24, #0x1
  443f38:	b.lt	44412c <_obstack_memory_used@@Base+0x8934>  // b.tstop
  443f3c:	mov	w8, #0x18                  	// #24
  443f40:	madd	x8, x26, x8, x20
  443f44:	ldr	x20, [x8, #16]
  443f48:	add	x28, x27, #0x8
  443f4c:	mov	x27, #0xffffffffffffffff    	// #-1
  443f50:	ldr	x26, [x20]
  443f54:	mov	x0, x28
  443f58:	mov	x1, x26
  443f5c:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  443f60:	cbz	x0, 443f70 <_obstack_memory_used@@Base+0x8778>
  443f64:	cmn	x27, #0x1
  443f68:	b.ne	44400c <_obstack_memory_used@@Base+0x8814>  // b.any
  443f6c:	mov	x27, x26
  443f70:	subs	x24, x24, #0x1
  443f74:	add	x20, x20, #0x8
  443f78:	b.ne	443f50 <_obstack_memory_used@@Base+0x8758>  // b.any
  443f7c:	ldur	x24, [x29, #-72]
  443f80:	b	444120 <_obstack_memory_used@@Base+0x8928>
  443f84:	ldur	x25, [x29, #-8]
  443f88:	mov	x0, x28
  443f8c:	mov	x1, x26
  443f90:	mov	x2, x23
  443f94:	mov	x3, x25
  443f98:	bl	445be4 <_obstack_memory_used@@Base+0xa3ec>
  443f9c:	cbz	w0, 443fac <_obstack_memory_used@@Base+0x87b4>
  443fa0:	sxtw	x8, w0
  443fa4:	b	443fcc <_obstack_memory_used@@Base+0x87d4>
  443fa8:	ldur	x25, [x29, #-8]
  443fac:	ldr	x8, [x28]
  443fb0:	mov	x0, x23
  443fb4:	mov	x2, x25
  443fb8:	add	x1, x8, x26, lsl #4
  443fbc:	bl	445edc <_obstack_memory_used@@Base+0xa6e4>
  443fc0:	tbz	w0, #0, 44412c <_obstack_memory_used@@Base+0x8934>
  443fc4:	ldur	x24, [x29, #-72]
  443fc8:	mov	w8, #0x1                   	// #1
  443fcc:	ldr	x9, [x28, #24]
  443fd0:	add	x25, x25, x8
  443fd4:	ldr	x27, [x9, x26, lsl #3]
  443fd8:	stur	x25, [x29, #-8]
  443fdc:	cbz	x19, 44403c <_obstack_memory_used@@Base+0x8844>
  443fe0:	ldr	x8, [x23, #168]
  443fe4:	cmp	x25, x8
  443fe8:	b.gt	444134 <_obstack_memory_used@@Base+0x893c>
  443fec:	ldr	x8, [x23, #184]
  443ff0:	ldr	x8, [x8, x25, lsl #3]
  443ff4:	cbz	x8, 444134 <_obstack_memory_used@@Base+0x893c>
  443ff8:	add	x0, x8, #0x8
  443ffc:	mov	x1, x27
  444000:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  444004:	cbnz	x0, 44403c <_obstack_memory_used@@Base+0x8844>
  444008:	b	444134 <_obstack_memory_used@@Base+0x893c>
  44400c:	sub	x0, x29, #0x20
  444010:	mov	x1, x27
  444014:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  444018:	cbz	x0, 444044 <_obstack_memory_used@@Base+0x884c>
  44401c:	ldur	x24, [x29, #-72]
  444020:	b	44411c <_obstack_memory_used@@Base+0x8924>
  444024:	cbz	x25, 444084 <_obstack_memory_used@@Base+0x888c>
  444028:	ldr	x8, [x28, #24]
  44402c:	ldur	x9, [x29, #-8]
  444030:	ldr	x27, [x8, x26, lsl #3]
  444034:	add	x25, x9, x25
  444038:	stur	x25, [x29, #-8]
  44403c:	stur	xzr, [x29, #-24]
  444040:	b	444120 <_obstack_memory_used@@Base+0x8928>
  444044:	ldur	x24, [x29, #-72]
  444048:	cbz	x19, 444120 <_obstack_memory_used@@Base+0x8928>
  44404c:	ldp	x28, x9, [x19]
  444050:	add	x8, x28, #0x1
  444054:	cmp	x8, x9
  444058:	str	x8, [x19]
  44405c:	b.ne	4440cc <_obstack_memory_used@@Base+0x88d4>  // b.any
  444060:	ldr	x0, [x19, #16]
  444064:	add	x8, x8, x8, lsl #1
  444068:	lsl	x1, x8, #5
  44406c:	bl	404710 <realloc@plt>
  444070:	cbz	x0, 444118 <_obstack_memory_used@@Base+0x8920>
  444074:	ldr	x8, [x19, #8]
  444078:	lsl	x8, x8, #1
  44407c:	stp	x8, x0, [x19, #8]
  444080:	b	4440d0 <_obstack_memory_used@@Base+0x88d8>
  444084:	sub	x0, x29, #0x20
  444088:	mov	x1, x26
  44408c:	bl	442e2c <_obstack_memory_used@@Base+0x7634>
  444090:	tbz	w0, #0, 4441c8 <_obstack_memory_used@@Base+0x89d0>
  444094:	ldr	x8, [x28, #40]
  444098:	mov	w10, #0x18                  	// #24
  44409c:	ldr	x9, [x23, #184]
  4440a0:	ldur	x25, [x29, #-8]
  4440a4:	madd	x8, x26, x10, x8
  4440a8:	ldr	x8, [x8, #16]
  4440ac:	ldr	x9, [x9, x25, lsl #3]
  4440b0:	ldr	x27, [x8]
  4440b4:	add	x0, x9, #0x8
  4440b8:	mov	x1, x27
  4440bc:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  4440c0:	ldur	x24, [x29, #-72]
  4440c4:	cbnz	x0, 444120 <_obstack_memory_used@@Base+0x8928>
  4440c8:	b	443fac <_obstack_memory_used@@Base+0x87b4>
  4440cc:	ldr	x0, [x19, #16]
  4440d0:	mov	w8, #0x30                  	// #48
  4440d4:	madd	x20, x28, x8, x0
  4440d8:	stp	x25, x26, [x20]
  4440dc:	ldur	x26, [x29, #-96]
  4440e0:	mov	x0, x26
  4440e4:	bl	4044d0 <malloc@plt>
  4440e8:	str	x0, [x20, #16]
  4440ec:	cbz	x0, 444118 <_obstack_memory_used@@Base+0x8920>
  4440f0:	mov	x1, x21
  4440f4:	mov	x2, x26
  4440f8:	bl	4040f0 <memcpy@plt>
  4440fc:	ldr	x8, [x19, #16]
  444100:	mov	w9, #0x30                  	// #48
  444104:	sub	x1, x29, #0x20
  444108:	madd	x8, x28, x9, x8
  44410c:	add	x0, x8, #0x18
  444110:	bl	443034 <_obstack_memory_used@@Base+0x783c>
  444114:	cbz	w0, 444120 <_obstack_memory_used@@Base+0x8928>
  444118:	mov	x26, #0xfffffffffffffffe    	// #-2
  44411c:	mov	x27, x26
  444120:	tbz	x27, #63, 444154 <_obstack_memory_used@@Base+0x895c>
  444124:	cmn	x27, #0x2
  444128:	b.eq	4441c8 <_obstack_memory_used@@Base+0x89d0>  // b.none
  44412c:	ldur	x24, [x29, #-72]
  444130:	cbz	x19, 44418c <_obstack_memory_used@@Base+0x8994>
  444134:	sub	x1, x29, #0x8
  444138:	sub	x4, x29, #0x20
  44413c:	mov	x0, x19
  444140:	mov	x2, x22
  444144:	mov	x3, x21
  444148:	bl	447054 <_obstack_memory_used@@Base+0xb85c>
  44414c:	ldur	x25, [x29, #-8]
  444150:	mov	x27, x0
  444154:	ldr	x8, [x21, #8]
  444158:	mov	x26, x27
  44415c:	cmp	x25, x8
  444160:	b.le	443d70 <_obstack_memory_used@@Base+0x8578>
  444164:	ldur	x0, [x29, #-16]
  444168:	bl	4049b0 <free@plt>
  44416c:	ldur	w8, [x29, #-84]
  444170:	cbz	w8, 44417c <_obstack_memory_used@@Base+0x8984>
  444174:	ldur	x0, [x29, #-80]
  444178:	bl	4049b0 <free@plt>
  44417c:	mov	x0, x19
  444180:	bl	446fdc <_obstack_memory_used@@Base+0xb7e4>
  444184:	mov	w0, wzr
  444188:	b	4441ec <_obstack_memory_used@@Base+0x89f4>
  44418c:	ldur	x0, [x29, #-16]
  444190:	bl	4049b0 <free@plt>
  444194:	ldur	w8, [x29, #-84]
  444198:	cbz	w8, 4441a4 <_obstack_memory_used@@Base+0x89ac>
  44419c:	ldur	x0, [x29, #-80]
  4441a0:	bl	4049b0 <free@plt>
  4441a4:	mov	w0, #0x1                   	// #1
  4441a8:	b	4441ec <_obstack_memory_used@@Base+0x89f4>
  4441ac:	ldur	x0, [x29, #-16]
  4441b0:	bl	4049b0 <free@plt>
  4441b4:	ldur	w8, [x29, #-84]
  4441b8:	cbz	w8, 444184 <_obstack_memory_used@@Base+0x898c>
  4441bc:	ldur	x0, [x29, #-80]
  4441c0:	bl	4049b0 <free@plt>
  4441c4:	b	444184 <_obstack_memory_used@@Base+0x898c>
  4441c8:	ldur	x0, [x29, #-16]
  4441cc:	bl	4049b0 <free@plt>
  4441d0:	ldur	w8, [x29, #-84]
  4441d4:	cbz	w8, 4441e0 <_obstack_memory_used@@Base+0x89e8>
  4441d8:	ldur	x0, [x29, #-80]
  4441dc:	bl	4049b0 <free@plt>
  4441e0:	mov	x0, x19
  4441e4:	bl	446fdc <_obstack_memory_used@@Base+0xb7e4>
  4441e8:	mov	w0, #0xc                   	// #12
  4441ec:	mov	sp, x29
  4441f0:	ldp	x20, x19, [sp, #80]
  4441f4:	ldp	x22, x21, [sp, #64]
  4441f8:	ldp	x24, x23, [sp, #48]
  4441fc:	ldp	x26, x25, [sp, #32]
  444200:	ldp	x28, x27, [sp, #16]
  444204:	ldp	x29, x30, [sp], #96
  444208:	ret
  44420c:	sub	sp, sp, #0x20
  444210:	stp	x29, x30, [sp, #16]
  444214:	add	x29, sp, #0x10
  444218:	tbnz	x1, #63, 444250 <_obstack_memory_used@@Base+0x8a58>
  44421c:	ldr	x8, [x0, #88]
  444220:	cmp	x8, x1
  444224:	b.eq	4442c0 <_obstack_memory_used@@Base+0x8ac8>  // b.none
  444228:	ldr	w8, [x0, #144]
  44422c:	cmp	w8, #0x2
  444230:	b.lt	444258 <_obstack_memory_used@@Base+0x8a60>  // b.tstop
  444234:	ldr	x8, [x0, #16]
  444238:	ldr	w9, [x8, x1, lsl #2]
  44423c:	cmn	w9, #0x1
  444240:	b.ne	444280 <_obstack_memory_used@@Base+0x8a88>  // b.any
  444244:	cmp	x1, #0x0
  444248:	sub	x1, x1, #0x1
  44424c:	b.gt	444238 <_obstack_memory_used@@Base+0x8a40>
  444250:	ldr	w8, [x0, #112]
  444254:	b	4442b0 <_obstack_memory_used@@Base+0x8ab8>
  444258:	ldr	x8, [x0, #8]
  44425c:	ldr	x9, [x0, #128]
  444260:	ldrb	w8, [x8, x1]
  444264:	lsr	x10, x8, #3
  444268:	and	x10, x10, #0x18
  44426c:	ldr	x9, [x9, x10]
  444270:	lsr	x9, x9, x8
  444274:	tbz	w9, #0, 4442a4 <_obstack_memory_used@@Base+0x8aac>
  444278:	mov	w8, #0x1                   	// #1
  44427c:	b	4442b0 <_obstack_memory_used@@Base+0x8ab8>
  444280:	ldrb	w8, [x0, #142]
  444284:	cbnz	w8, 4442d0 <_obstack_memory_used@@Base+0x8ad8>
  444288:	cmp	w9, #0xa
  44428c:	b.ne	4442ac <_obstack_memory_used@@Base+0x8ab4>  // b.any
  444290:	ldrb	w8, [x0, #141]
  444294:	cmp	w8, #0x0
  444298:	cset	w8, ne  // ne = any
  44429c:	lsl	w8, w8, #1
  4442a0:	b	4442b0 <_obstack_memory_used@@Base+0x8ab8>
  4442a4:	cmp	w8, #0xa
  4442a8:	b.eq	444290 <_obstack_memory_used@@Base+0x8a98>  // b.none
  4442ac:	mov	w8, wzr
  4442b0:	ldp	x29, x30, [sp, #16]
  4442b4:	mov	w0, w8
  4442b8:	add	sp, sp, #0x20
  4442bc:	ret
  4442c0:	and	w8, w2, #0x2
  4442c4:	mov	w9, #0xa                   	// #10
  4442c8:	eor	w8, w8, w9
  4442cc:	b	4442b0 <_obstack_memory_used@@Base+0x8ab8>
  4442d0:	str	x0, [sp]
  4442d4:	mov	w0, w9
  4442d8:	stur	w9, [x29, #-4]
  4442dc:	bl	404ba0 <iswalnum@plt>
  4442e0:	ldur	w9, [x29, #-4]
  4442e4:	mov	w8, #0x1                   	// #1
  4442e8:	cmp	w9, #0x5f
  4442ec:	b.eq	4442b0 <_obstack_memory_used@@Base+0x8ab8>  // b.none
  4442f0:	mov	w10, w0
  4442f4:	ldr	x0, [sp]
  4442f8:	cbz	w10, 444288 <_obstack_memory_used@@Base+0x8a90>
  4442fc:	b	4442b0 <_obstack_memory_used@@Base+0x8ab8>
  444300:	stp	x29, x30, [sp, #-80]!
  444304:	stp	x24, x23, [sp, #32]
  444308:	stp	x22, x21, [sp, #48]
  44430c:	stp	x20, x19, [sp, #64]
  444310:	ldr	x8, [x1, #8]
  444314:	str	x25, [sp, #16]
  444318:	mov	x29, sp
  44431c:	cmp	x8, #0x1
  444320:	b.lt	4443e0 <_obstack_memory_used@@Base+0x8be8>  // b.tstop
  444324:	ldr	x22, [x0, #152]
  444328:	mov	x19, x2
  44432c:	mov	x20, x1
  444330:	mov	x21, x0
  444334:	mov	x23, xzr
  444338:	ldr	x9, [x20, #16]
  44433c:	ldr	x24, [x9, x23, lsl #3]
  444340:	ldr	x9, [x22]
  444344:	add	x10, x9, x24, lsl #4
  444348:	ldrb	w10, [x10, #8]
  44434c:	cmp	w10, #0x8
  444350:	b.ne	4443b4 <_obstack_memory_used@@Base+0x8bbc>  // b.any
  444354:	lsl	x10, x24, #4
  444358:	ldr	x9, [x9, x10]
  44435c:	cmp	x9, #0x3f
  444360:	b.gt	4443b4 <_obstack_memory_used@@Base+0x8bbc>
  444364:	ldr	x10, [x22, #160]
  444368:	lsr	x9, x10, x9
  44436c:	tbz	w9, #0, 4443b4 <_obstack_memory_used@@Base+0x8bbc>
  444370:	ldp	x25, x8, [x21, #232]
  444374:	cmp	x25, x8
  444378:	b.eq	4443c4 <_obstack_memory_used@@Base+0x8bcc>  // b.none
  44437c:	mov	w0, #0x1                   	// #1
  444380:	mov	w1, #0x30                  	// #48
  444384:	bl	404680 <calloc@plt>
  444388:	ldr	x9, [x21, #248]
  44438c:	ldr	x8, [x21, #232]
  444390:	str	x0, [x9, x8, lsl #3]
  444394:	ldr	x9, [x21, #248]
  444398:	ldr	x9, [x9, x8, lsl #3]
  44439c:	cbz	x9, 4443fc <_obstack_memory_used@@Base+0x8c04>
  4443a0:	add	x8, x8, #0x1
  4443a4:	str	x24, [x9, #8]
  4443a8:	str	x8, [x21, #232]
  4443ac:	str	x19, [x9]
  4443b0:	ldr	x8, [x20, #8]
  4443b4:	add	x23, x23, #0x1
  4443b8:	cmp	x23, x8
  4443bc:	b.lt	444338 <_obstack_memory_used@@Base+0x8b40>  // b.tstop
  4443c0:	b	4443e0 <_obstack_memory_used@@Base+0x8be8>
  4443c4:	ldr	x0, [x21, #248]
  4443c8:	lsl	x1, x25, #4
  4443cc:	bl	404710 <realloc@plt>
  4443d0:	cbz	x0, 4443fc <_obstack_memory_used@@Base+0x8c04>
  4443d4:	lsl	x8, x25, #1
  4443d8:	stp	x8, x0, [x21, #240]
  4443dc:	b	44437c <_obstack_memory_used@@Base+0x8b84>
  4443e0:	mov	w0, wzr
  4443e4:	ldp	x20, x19, [sp, #64]
  4443e8:	ldp	x22, x21, [sp, #48]
  4443ec:	ldp	x24, x23, [sp, #32]
  4443f0:	ldr	x25, [sp, #16]
  4443f4:	ldp	x29, x30, [sp], #80
  4443f8:	ret
  4443fc:	mov	w0, #0xc                   	// #12
  444400:	b	4443e4 <_obstack_memory_used@@Base+0x8bec>
  444404:	sub	sp, sp, #0xd0
  444408:	stp	x29, x30, [sp, #112]
  44440c:	stp	x28, x27, [sp, #128]
  444410:	stp	x26, x25, [sp, #144]
  444414:	stp	x24, x23, [sp, #160]
  444418:	stp	x22, x21, [sp, #176]
  44441c:	stp	x20, x19, [sp, #192]
  444420:	ldr	x8, [x1, #8]
  444424:	add	x29, sp, #0x70
  444428:	cmp	x8, #0x1
  44442c:	b.lt	4449b8 <_obstack_memory_used@@Base+0x91c0>  // b.tstop
  444430:	ldr	x28, [x0, #152]
  444434:	ldr	x8, [x0, #72]
  444438:	mov	x21, x1
  44443c:	mov	x20, x0
  444440:	mov	x9, xzr
  444444:	stur	x8, [x29, #-40]
  444448:	stp	x1, x28, [sp, #16]
  44444c:	ldr	x8, [x21, #16]
  444450:	str	x9, [sp, #48]
  444454:	ldr	x9, [x8, x9, lsl #3]
  444458:	ldr	x8, [x28]
  44445c:	stur	x9, [x29, #-48]
  444460:	add	x8, x8, x9, lsl #4
  444464:	ldr	w19, [x8, #8]
  444468:	and	w8, w19, #0xff
  44446c:	cmp	w8, #0x4
  444470:	b.ne	4449a4 <_obstack_memory_used@@Base+0x91ac>  // b.any
  444474:	tst	w19, #0x3ff00
  444478:	b.eq	4444b0 <_obstack_memory_used@@Base+0x8cb8>  // b.none
  44447c:	ldr	w2, [x20, #160]
  444480:	ldur	x1, [x29, #-40]
  444484:	mov	x0, x20
  444488:	bl	44420c <_obstack_memory_used@@Base+0x8a14>
  44448c:	and	w8, w0, #0x1
  444490:	tbz	w19, #10, 444498 <_obstack_memory_used@@Base+0x8ca0>
  444494:	cbz	w8, 4449a4 <_obstack_memory_used@@Base+0x91ac>
  444498:	tbz	w19, #11, 4444a0 <_obstack_memory_used@@Base+0x8ca8>
  44449c:	cbnz	w8, 4449a4 <_obstack_memory_used@@Base+0x91ac>
  4444a0:	tbz	w19, #13, 4444a8 <_obstack_memory_used@@Base+0x8cb0>
  4444a4:	tbz	w0, #1, 4449a4 <_obstack_memory_used@@Base+0x91ac>
  4444a8:	tbz	w19, #15, 4444b0 <_obstack_memory_used@@Base+0x8cb8>
  4444ac:	tbz	w0, #3, 4449a4 <_obstack_memory_used@@Base+0x91ac>
  4444b0:	ldur	x1, [x29, #-40]
  4444b4:	ldr	x19, [x20, #200]
  4444b8:	ldr	x23, [x20, #152]
  4444bc:	ldr	x21, [x20, #8]
  4444c0:	mov	x0, x20
  4444c4:	bl	444dd4 <_obstack_memory_used@@Base+0x95dc>
  4444c8:	cmn	x0, #0x1
  4444cc:	b.eq	4444f8 <_obstack_memory_used@@Base+0x8d00>  // b.none
  4444d0:	ldr	x8, [x20, #216]
  4444d4:	mov	w9, #0x28                  	// #40
  4444d8:	madd	x8, x0, x9, x8
  4444dc:	ldr	x9, [x8]
  4444e0:	ldur	x10, [x29, #-48]
  4444e4:	cmp	x9, x10
  4444e8:	b.eq	4447f4 <_obstack_memory_used@@Base+0x8ffc>  // b.none
  4444ec:	ldrb	w9, [x8, #32]
  4444f0:	add	x8, x8, #0x28
  4444f4:	cbnz	w9, 4444dc <_obstack_memory_used@@Base+0x8ce4>
  4444f8:	ldr	x8, [x20, #232]
  4444fc:	cmp	x8, #0x1
  444500:	b.lt	4447f4 <_obstack_memory_used@@Base+0x8ffc>  // b.tstop
  444504:	ldur	x9, [x29, #-48]
  444508:	ldr	x8, [x23]
  44450c:	str	x19, [sp, #8]
  444510:	mov	x12, xzr
  444514:	lsl	x9, x9, #4
  444518:	ldr	x19, [x8, x9]
  44451c:	stp	x23, x19, [sp, #32]
  444520:	ldr	x9, [x20, #248]
  444524:	ldr	x24, [x9, x12, lsl #3]
  444528:	ldr	x9, [x24, #8]
  44452c:	lsl	x9, x9, #4
  444530:	ldr	x8, [x8, x9]
  444534:	cmp	x8, x19
  444538:	b.ne	444640 <_obstack_memory_used@@Base+0x8e48>  // b.any
  44453c:	ldr	x8, [x24, #32]
  444540:	ldr	x28, [x24]
  444544:	str	x12, [sp, #56]
  444548:	cmp	x8, #0x1
  44454c:	b.lt	4445f4 <_obstack_memory_used@@Base+0x8dfc>  // b.tstop
  444550:	ldur	x22, [x29, #-40]
  444554:	mov	x23, xzr
  444558:	mov	x19, x28
  44455c:	ldr	x9, [x24, #40]
  444560:	ldr	x26, [x9, x23, lsl #3]
  444564:	ldr	x28, [x26, #8]
  444568:	sub	x25, x28, x19
  44456c:	cmp	x25, #0x1
  444570:	b.lt	444598 <_obstack_memory_used@@Base+0x8da0>  // b.tstop
  444574:	ldr	x9, [x20, #48]
  444578:	add	x1, x25, x22
  44457c:	cmp	x1, x9
  444580:	b.gt	4445d4 <_obstack_memory_used@@Base+0x8ddc>
  444584:	add	x0, x21, x22
  444588:	add	x1, x21, x19
  44458c:	mov	x2, x25
  444590:	bl	4046b0 <bcmp@plt>
  444594:	cbnz	w0, 444600 <_obstack_memory_used@@Base+0x8e08>
  444598:	ldp	x3, x4, [x29, #-48]
  44459c:	mov	x0, x20
  4445a0:	mov	x1, x24
  4445a4:	mov	x2, x26
  4445a8:	bl	444ef0 <_obstack_memory_used@@Base+0x96f8>
  4445ac:	cmp	w0, #0x1
  4445b0:	b.hi	4449ec <_obstack_memory_used@@Base+0x91f4>  // b.pmore
  4445b4:	ldr	x8, [x24, #32]
  4445b8:	ldr	x21, [x20, #8]
  4445bc:	add	x23, x23, #0x1
  4445c0:	add	x22, x25, x22
  4445c4:	cmp	x23, x8
  4445c8:	mov	x19, x28
  4445cc:	b.lt	44455c <_obstack_memory_used@@Base+0x8d64>  // b.tstop
  4445d0:	b	444608 <_obstack_memory_used@@Base+0x8e10>
  4445d4:	ldr	x9, [x20, #88]
  4445d8:	cmp	x1, x9
  4445dc:	b.gt	444604 <_obstack_memory_used@@Base+0x8e0c>
  4445e0:	mov	x0, x20
  4445e4:	bl	444e50 <_obstack_memory_used@@Base+0x9658>
  4445e8:	cbnz	w0, 4449ec <_obstack_memory_used@@Base+0x91f4>
  4445ec:	ldr	x21, [x20, #8]
  4445f0:	b	444584 <_obstack_memory_used@@Base+0x8d8c>
  4445f4:	ldur	x22, [x29, #-40]
  4445f8:	mov	x23, xzr
  4445fc:	b	444608 <_obstack_memory_used@@Base+0x8e10>
  444600:	ldr	x8, [x24, #32]
  444604:	mov	x28, x19
  444608:	cmp	x23, x8
  44460c:	b.ge	444620 <_obstack_memory_used@@Base+0x8e28>  // b.tcont
  444610:	ldp	x28, x23, [sp, #24]
  444614:	ldr	x19, [sp, #40]
  444618:	ldr	x12, [sp, #56]
  44461c:	b	444640 <_obstack_memory_used@@Base+0x8e48>
  444620:	ldur	x8, [x29, #-40]
  444624:	ldr	x19, [sp, #40]
  444628:	ldr	x12, [sp, #56]
  44462c:	cmp	x23, #0x0
  444630:	cinc	x25, x28, ne  // ne = any
  444634:	cmp	x25, x8
  444638:	b.le	444658 <_obstack_memory_used@@Base+0x8e60>
  44463c:	ldp	x28, x23, [sp, #24]
  444640:	ldr	x8, [x20, #232]
  444644:	add	x12, x12, #0x1
  444648:	cmp	x12, x8
  44464c:	b.ge	444800 <_obstack_memory_used@@Base+0x9008>  // b.tcont
  444650:	ldr	x8, [x23]
  444654:	b	444520 <_obstack_memory_used@@Base+0x8d28>
  444658:	ldp	x28, x23, [sp, #24]
  44465c:	ldr	x8, [x24]
  444660:	cmp	x25, x8
  444664:	b.le	44468c <_obstack_memory_used@@Base+0x8e94>
  444668:	ldr	x8, [x20, #48]
  44466c:	cmp	x22, x8
  444670:	b.ge	4447a4 <_obstack_memory_used@@Base+0x8fac>  // b.tcont
  444674:	add	x9, x25, x21
  444678:	ldrb	w8, [x21, x22]
  44467c:	ldurb	w9, [x9, #-1]
  444680:	cmp	w8, w9
  444684:	b.ne	444640 <_obstack_memory_used@@Base+0x8e48>  // b.any
  444688:	add	x22, x22, #0x1
  44468c:	ldr	x8, [x20, #184]
  444690:	ldr	x9, [x8, x25, lsl #3]
  444694:	cbz	x9, 4446dc <_obstack_memory_used@@Base+0x8ee4>
  444698:	ldr	x8, [x9, #16]
  44469c:	cmp	x8, #0x1
  4446a0:	b.lt	4446dc <_obstack_memory_used@@Base+0x8ee4>  // b.tstop
  4446a4:	ldr	x9, [x9, #24]
  4446a8:	ldr	x10, [x23]
  4446ac:	ldr	x26, [x9]
  4446b0:	add	x11, x10, x26, lsl #4
  4446b4:	ldrb	w11, [x11, #8]
  4446b8:	cmp	w11, #0x9
  4446bc:	b.ne	4446d0 <_obstack_memory_used@@Base+0x8ed8>  // b.any
  4446c0:	lsl	x11, x26, #4
  4446c4:	ldr	x11, [x10, x11]
  4446c8:	cmp	x11, x19
  4446cc:	b.eq	4446f0 <_obstack_memory_used@@Base+0x8ef8>  // b.none
  4446d0:	subs	x8, x8, #0x1
  4446d4:	add	x9, x9, #0x8
  4446d8:	b.ne	4446ac <_obstack_memory_used@@Base+0x8eb4>  // b.any
  4446dc:	ldur	x8, [x29, #-40]
  4446e0:	cmp	x25, x8
  4446e4:	add	x25, x25, #0x1
  4446e8:	b.lt	44465c <_obstack_memory_used@@Base+0x8e64>  // b.tstop
  4446ec:	b	444640 <_obstack_memory_used@@Base+0x8e48>
  4446f0:	cmn	x26, #0x1
  4446f4:	b.eq	4446dc <_obstack_memory_used@@Base+0x8ee4>  // b.none
  4446f8:	ldr	x1, [x24, #16]
  4446fc:	cbnz	x1, 444720 <_obstack_memory_used@@Base+0x8f28>
  444700:	ldr	x8, [x24]
  444704:	mov	w0, #0x18                  	// #24
  444708:	sub	x8, x25, x8
  44470c:	add	x1, x8, #0x1
  444710:	bl	404680 <calloc@plt>
  444714:	mov	x1, x0
  444718:	str	x0, [x24, #16]
  44471c:	cbz	x0, 4449e4 <_obstack_memory_used@@Base+0x91ec>
  444720:	ldp	x3, x2, [x24]
  444724:	mov	w6, #0x9                   	// #9
  444728:	mov	x0, x20
  44472c:	mov	x4, x26
  444730:	mov	x5, x25
  444734:	bl	44504c <_obstack_memory_used@@Base+0x9854>
  444738:	ldr	x12, [sp, #56]
  44473c:	cmp	w0, #0x1
  444740:	b.eq	4446dc <_obstack_memory_used@@Base+0x8ee4>  // b.none
  444744:	mov	w27, w0
  444748:	cbnz	w0, 4449f0 <_obstack_memory_used@@Base+0x91f8>
  44474c:	ldp	x9, x8, [x24, #24]
  444750:	cmp	x8, x9
  444754:	b.eq	4447cc <_obstack_memory_used@@Base+0x8fd4>  // b.none
  444758:	mov	w0, #0x1                   	// #1
  44475c:	mov	w1, #0x28                  	// #40
  444760:	bl	404680 <calloc@plt>
  444764:	cbz	x0, 4449e4 <_obstack_memory_used@@Base+0x91ec>
  444768:	ldp	x9, x8, [x24, #32]
  44476c:	mov	x2, x0
  444770:	mov	x1, x24
  444774:	str	x0, [x8, x9, lsl #3]
  444778:	add	x8, x9, #0x1
  44477c:	stp	x26, x25, [x0]
  444780:	str	x8, [x24, #32]
  444784:	ldp	x3, x4, [x29, #-48]
  444788:	mov	x0, x20
  44478c:	bl	444ef0 <_obstack_memory_used@@Base+0x96f8>
  444790:	cmp	w0, #0x1
  444794:	b.hi	4449ec <_obstack_memory_used@@Base+0x91f4>  // b.pmore
  444798:	ldr	x21, [x20, #8]
  44479c:	ldr	x12, [sp, #56]
  4447a0:	b	4446dc <_obstack_memory_used@@Base+0x8ee4>
  4447a4:	ldr	x8, [x20, #88]
  4447a8:	cmp	x22, x8
  4447ac:	b.ge	444640 <_obstack_memory_used@@Base+0x8e48>  // b.tcont
  4447b0:	add	w1, w22, #0x1
  4447b4:	mov	x0, x20
  4447b8:	bl	444a10 <_obstack_memory_used@@Base+0x9218>
  4447bc:	cbnz	w0, 4449ec <_obstack_memory_used@@Base+0x91f4>
  4447c0:	ldr	x21, [x20, #8]
  4447c4:	ldr	x12, [sp, #56]
  4447c8:	b	444674 <_obstack_memory_used@@Base+0x8e7c>
  4447cc:	ldr	x0, [x24, #40]
  4447d0:	mov	w19, #0x1                   	// #1
  4447d4:	bfi	x19, x8, #1, #63
  4447d8:	lsl	x1, x19, #3
  4447dc:	bl	404710 <realloc@plt>
  4447e0:	cbz	x0, 4449e4 <_obstack_memory_used@@Base+0x91ec>
  4447e4:	str	x19, [x24, #24]
  4447e8:	ldr	x19, [sp, #40]
  4447ec:	str	x0, [x24, #40]
  4447f0:	b	444758 <_obstack_memory_used@@Base+0x8f60>
  4447f4:	ldr	x21, [sp, #16]
  4447f8:	stur	wzr, [x29, #-4]
  4447fc:	b	4449a4 <_obstack_memory_used@@Base+0x91ac>
  444800:	ldr	x8, [x20, #200]
  444804:	ldp	x24, x21, [sp, #8]
  444808:	stur	wzr, [x29, #-4]
  44480c:	cmp	x24, x8
  444810:	b.ge	4449a4 <_obstack_memory_used@@Base+0x91ac>  // b.tcont
  444814:	add	x8, x24, x24, lsl #2
  444818:	lsl	x19, x8, #3
  44481c:	ldr	x8, [x20, #216]
  444820:	ldur	x10, [x29, #-48]
  444824:	ldr	x9, [x8, x19]
  444828:	cmp	x9, x10
  44482c:	b.ne	444990 <_obstack_memory_used@@Base+0x9198>  // b.any
  444830:	add	x8, x8, x19
  444834:	ldr	x9, [x8, #8]
  444838:	ldur	x10, [x29, #-40]
  44483c:	cmp	x9, x10
  444840:	b.ne	444990 <_obstack_memory_used@@Base+0x9198>  // b.any
  444844:	ldp	x22, x21, [x8, #16]
  444848:	ldr	x8, [x28, #48]
  44484c:	cmp	x21, x22
  444850:	b.ne	44486c <_obstack_memory_used@@Base+0x9074>  // b.any
  444854:	ldr	x9, [x28, #40]
  444858:	ldur	x10, [x29, #-48]
  44485c:	mov	w11, #0x18                  	// #24
  444860:	madd	x9, x10, x11, x9
  444864:	ldr	x9, [x9, #16]
  444868:	b	44487c <_obstack_memory_used@@Base+0x9084>
  44486c:	ldr	x9, [x28, #24]
  444870:	ldur	x10, [x29, #-48]
  444874:	mov	w11, #0x18                  	// #24
  444878:	add	x9, x9, x10, lsl #3
  44487c:	ldur	x23, [x29, #-40]
  444880:	ldr	x9, [x9]
  444884:	ldr	w2, [x20, #160]
  444888:	mov	x0, x20
  44488c:	add	x10, x21, x23
  444890:	sub	x26, x10, x22
  444894:	sub	x1, x26, #0x1
  444898:	madd	x27, x9, x11, x8
  44489c:	bl	44420c <_obstack_memory_used@@Base+0x8a14>
  4448a0:	ldr	x8, [x20, #184]
  4448a4:	mov	w25, w0
  4448a8:	ldr	x9, [x8, x23, lsl #3]
  4448ac:	ldr	x8, [x8, x26, lsl #3]
  4448b0:	cbz	x9, 444904 <_obstack_memory_used@@Base+0x910c>
  4448b4:	ldr	x9, [x9, #16]
  4448b8:	str	x9, [sp, #56]
  4448bc:	cbz	x8, 44490c <_obstack_memory_used@@Base+0x9114>
  4448c0:	ldr	x1, [x8, #80]
  4448c4:	sub	x0, x29, #0x20
  4448c8:	mov	x2, x27
  4448cc:	mov	x23, x27
  4448d0:	bl	444c20 <_obstack_memory_used@@Base+0x9428>
  4448d4:	stur	w0, [x29, #-4]
  4448d8:	cbnz	w0, 4449f8 <_obstack_memory_used@@Base+0x9200>
  4448dc:	sub	x0, x29, #0x4
  4448e0:	sub	x2, x29, #0x20
  4448e4:	mov	x1, x28
  4448e8:	mov	w3, w25
  4448ec:	bl	443100 <_obstack_memory_used@@Base+0x7908>
  4448f0:	ldr	x8, [x20, #184]
  4448f4:	str	x0, [x8, x26, lsl #3]
  4448f8:	ldur	x0, [x29, #-16]
  4448fc:	bl	4049b0 <free@plt>
  444900:	b	44492c <_obstack_memory_used@@Base+0x9134>
  444904:	str	xzr, [sp, #56]
  444908:	cbnz	x8, 4448c0 <_obstack_memory_used@@Base+0x90c8>
  44490c:	sub	x0, x29, #0x4
  444910:	mov	x1, x28
  444914:	mov	x2, x27
  444918:	mov	w3, w25
  44491c:	mov	x23, x27
  444920:	bl	443100 <_obstack_memory_used@@Base+0x7908>
  444924:	ldr	x8, [x20, #184]
  444928:	str	x0, [x8, x26, lsl #3]
  44492c:	ldr	x8, [x20, #184]
  444930:	ldr	x9, [x8, x26, lsl #3]
  444934:	cbnz	x9, 444940 <_obstack_memory_used@@Base+0x9148>
  444938:	ldur	w27, [x29, #-4]
  44493c:	cbnz	w27, 4449c0 <_obstack_memory_used@@Base+0x91c8>
  444940:	cmp	x21, x22
  444944:	ldr	x21, [sp, #16]
  444948:	b.ne	444990 <_obstack_memory_used@@Base+0x9198>  // b.any
  44494c:	ldur	x9, [x29, #-40]
  444950:	ldr	x8, [x8, x9, lsl #3]
  444954:	ldr	x9, [sp, #56]
  444958:	ldr	x8, [x8, #16]
  44495c:	cmp	x8, x9
  444960:	b.le	444990 <_obstack_memory_used@@Base+0x9198>
  444964:	ldur	x2, [x29, #-40]
  444968:	mov	x0, x20
  44496c:	mov	x1, x23
  444970:	bl	444300 <_obstack_memory_used@@Base+0x8b08>
  444974:	stur	w0, [x29, #-4]
  444978:	cbnz	w0, 444a08 <_obstack_memory_used@@Base+0x9210>
  44497c:	mov	x0, x20
  444980:	mov	x1, x23
  444984:	bl	444404 <_obstack_memory_used@@Base+0x8c0c>
  444988:	stur	w0, [x29, #-4]
  44498c:	cbnz	w0, 444a08 <_obstack_memory_used@@Base+0x9210>
  444990:	ldr	x8, [x20, #200]
  444994:	add	x24, x24, #0x1
  444998:	add	x19, x19, #0x28
  44499c:	cmp	x24, x8
  4449a0:	b.lt	44481c <_obstack_memory_used@@Base+0x9024>  // b.tstop
  4449a4:	ldr	x9, [sp, #48]
  4449a8:	ldr	x8, [x21, #8]
  4449ac:	add	x9, x9, #0x1
  4449b0:	cmp	x9, x8
  4449b4:	b.lt	44444c <_obstack_memory_used@@Base+0x8c54>  // b.tstop
  4449b8:	mov	w27, wzr
  4449bc:	stur	wzr, [x29, #-4]
  4449c0:	mov	w0, w27
  4449c4:	ldp	x20, x19, [sp, #192]
  4449c8:	ldp	x22, x21, [sp, #176]
  4449cc:	ldp	x24, x23, [sp, #160]
  4449d0:	ldp	x26, x25, [sp, #144]
  4449d4:	ldp	x28, x27, [sp, #128]
  4449d8:	ldp	x29, x30, [sp, #112]
  4449dc:	add	sp, sp, #0xd0
  4449e0:	ret
  4449e4:	mov	w27, #0xc                   	// #12
  4449e8:	b	4449f0 <_obstack_memory_used@@Base+0x91f8>
  4449ec:	mov	w27, w0
  4449f0:	stur	w27, [x29, #-4]
  4449f4:	b	4449c0 <_obstack_memory_used@@Base+0x91c8>
  4449f8:	mov	w27, w0
  4449fc:	ldur	x0, [x29, #-16]
  444a00:	bl	4049b0 <free@plt>
  444a04:	b	4449c0 <_obstack_memory_used@@Base+0x91c8>
  444a08:	mov	w27, w0
  444a0c:	b	4449c0 <_obstack_memory_used@@Base+0x91c8>
  444a10:	stp	x29, x30, [sp, #-32]!
  444a14:	ldr	x8, [x0, #64]
  444a18:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  444a1c:	str	x19, [sp, #16]
  444a20:	mov	x29, sp
  444a24:	cmp	x8, x9
  444a28:	b.hi	444ad0 <_obstack_memory_used@@Base+0x92d8>  // b.pmore
  444a2c:	ldr	x9, [x0, #88]
  444a30:	lsl	x11, x8, #1
  444a34:	sxtw	x10, w1
  444a38:	mov	x19, x0
  444a3c:	cmp	x9, x8, lsl #1
  444a40:	csel	x8, x9, x11, lt  // lt = tstop
  444a44:	cmp	x8, w1, sxtw
  444a48:	csel	x1, x8, x10, gt
  444a4c:	bl	43ec60 <_obstack_memory_used@@Base+0x3468>
  444a50:	cbnz	w0, 444ac4 <_obstack_memory_used@@Base+0x92cc>
  444a54:	ldr	x0, [x19, #184]
  444a58:	cbz	x0, 444a74 <_obstack_memory_used@@Base+0x927c>
  444a5c:	ldr	x8, [x19, #64]
  444a60:	lsl	x8, x8, #3
  444a64:	add	x1, x8, #0x8
  444a68:	bl	404710 <realloc@plt>
  444a6c:	cbz	x0, 444ad0 <_obstack_memory_used@@Base+0x92d8>
  444a70:	str	x0, [x19, #184]
  444a74:	ldr	w8, [x19, #144]
  444a78:	ldrb	w9, [x19, #136]
  444a7c:	cmp	w8, #0x2
  444a80:	cbz	w9, 444a98 <_obstack_memory_used@@Base+0x92a0>
  444a84:	mov	x0, x19
  444a88:	b.lt	444aa8 <_obstack_memory_used@@Base+0x92b0>  // b.tstop
  444a8c:	bl	43ecf0 <_obstack_memory_used@@Base+0x34f8>
  444a90:	cbz	w0, 444ac0 <_obstack_memory_used@@Base+0x92c8>
  444a94:	b	444ac4 <_obstack_memory_used@@Base+0x92cc>
  444a98:	b.lt	444ab0 <_obstack_memory_used@@Base+0x92b8>  // b.tstop
  444a9c:	mov	x0, x19
  444aa0:	bl	43f2b0 <_obstack_memory_used@@Base+0x3ab8>
  444aa4:	b	444ac0 <_obstack_memory_used@@Base+0x92c8>
  444aa8:	bl	43f238 <_obstack_memory_used@@Base+0x3a40>
  444aac:	b	444ac0 <_obstack_memory_used@@Base+0x92c8>
  444ab0:	ldr	x8, [x19, #120]
  444ab4:	cbz	x8, 444ac0 <_obstack_memory_used@@Base+0x92c8>
  444ab8:	mov	x0, x19
  444abc:	bl	43f484 <_obstack_memory_used@@Base+0x3c8c>
  444ac0:	mov	w0, wzr
  444ac4:	ldr	x19, [sp, #16]
  444ac8:	ldp	x29, x30, [sp], #32
  444acc:	ret
  444ad0:	mov	w0, #0xc                   	// #12
  444ad4:	b	444ac4 <_obstack_memory_used@@Base+0x92cc>
  444ad8:	sub	sp, sp, #0x60
  444adc:	stp	x29, x30, [sp, #32]
  444ae0:	stp	x24, x23, [sp, #48]
  444ae4:	stp	x22, x21, [sp, #64]
  444ae8:	stp	x20, x19, [sp, #80]
  444aec:	ldr	x20, [x1, #72]
  444af0:	ldp	x8, x9, [x1, #184]
  444af4:	ldr	x22, [x1, #152]
  444af8:	mov	x23, x2
  444afc:	mov	x19, x1
  444b00:	cmp	x20, x9
  444b04:	mov	x21, x0
  444b08:	add	x29, sp, #0x20
  444b0c:	b.le	444b1c <_obstack_memory_used@@Base+0x9324>
  444b10:	str	x23, [x8, x20, lsl #3]
  444b14:	str	x20, [x19, #192]
  444b18:	b	444bb0 <_obstack_memory_used@@Base+0x93b8>
  444b1c:	ldr	x9, [x8, x20, lsl #3]
  444b20:	cbz	x9, 444b54 <_obstack_memory_used@@Base+0x935c>
  444b24:	ldr	x2, [x9, #80]
  444b28:	cbz	x23, 444b5c <_obstack_memory_used@@Base+0x9364>
  444b2c:	ldr	x23, [x23, #80]
  444b30:	mov	x0, sp
  444b34:	mov	x1, x23
  444b38:	bl	444c20 <_obstack_memory_used@@Base+0x9428>
  444b3c:	str	w0, [x21]
  444b40:	cbnz	w0, 444c18 <_obstack_memory_used@@Base+0x9420>
  444b44:	ldr	x8, [x19, #72]
  444b48:	cmp	x23, #0x0
  444b4c:	cset	w24, eq  // eq = none
  444b50:	b	444b74 <_obstack_memory_used@@Base+0x937c>
  444b54:	str	x23, [x8, x20, lsl #3]
  444b58:	b	444bb0 <_obstack_memory_used@@Base+0x93b8>
  444b5c:	ldr	x8, [x2, #16]
  444b60:	ldr	q0, [x2]
  444b64:	mov	w24, #0x1                   	// #1
  444b68:	str	x8, [sp, #16]
  444b6c:	mov	x8, x20
  444b70:	str	q0, [sp]
  444b74:	ldr	w2, [x19, #160]
  444b78:	sub	x1, x8, #0x1
  444b7c:	mov	x0, x19
  444b80:	bl	44420c <_obstack_memory_used@@Base+0x8a14>
  444b84:	mov	w3, w0
  444b88:	mov	x2, sp
  444b8c:	mov	x0, x21
  444b90:	mov	x1, x22
  444b94:	bl	443100 <_obstack_memory_used@@Base+0x7908>
  444b98:	ldr	x8, [x19, #184]
  444b9c:	mov	x23, x0
  444ba0:	str	x0, [x8, x20, lsl #3]
  444ba4:	tbnz	w24, #0, 444bb0 <_obstack_memory_used@@Base+0x93b8>
  444ba8:	ldr	x0, [sp, #16]
  444bac:	bl	4049b0 <free@plt>
  444bb0:	cbz	x23, 444bfc <_obstack_memory_used@@Base+0x9404>
  444bb4:	ldr	x8, [x22, #152]
  444bb8:	cbz	x8, 444bfc <_obstack_memory_used@@Base+0x9404>
  444bbc:	add	x22, x23, #0x8
  444bc0:	mov	x0, x19
  444bc4:	mov	x1, x22
  444bc8:	mov	x2, x20
  444bcc:	bl	444300 <_obstack_memory_used@@Base+0x8b08>
  444bd0:	str	w0, [x21]
  444bd4:	cbnz	w0, 444c18 <_obstack_memory_used@@Base+0x9420>
  444bd8:	ldrb	w8, [x23, #104]
  444bdc:	tbz	w8, #6, 444bfc <_obstack_memory_used@@Base+0x9404>
  444be0:	mov	x0, x19
  444be4:	mov	x1, x22
  444be8:	bl	444404 <_obstack_memory_used@@Base+0x8c0c>
  444bec:	str	w0, [x21]
  444bf0:	cbnz	w0, 444c18 <_obstack_memory_used@@Base+0x9420>
  444bf4:	ldr	x8, [x19, #184]
  444bf8:	ldr	x23, [x8, x20, lsl #3]
  444bfc:	mov	x0, x23
  444c00:	ldp	x20, x19, [sp, #80]
  444c04:	ldp	x22, x21, [sp, #64]
  444c08:	ldp	x24, x23, [sp, #48]
  444c0c:	ldp	x29, x30, [sp, #32]
  444c10:	add	sp, sp, #0x60
  444c14:	ret
  444c18:	mov	x23, xzr
  444c1c:	b	444bfc <_obstack_memory_used@@Base+0x9404>
  444c20:	stp	x29, x30, [sp, #-80]!
  444c24:	stp	x20, x19, [sp, #64]
  444c28:	mov	x20, x2
  444c2c:	mov	x19, x0
  444c30:	stp	x26, x25, [sp, #16]
  444c34:	stp	x24, x23, [sp, #32]
  444c38:	stp	x22, x21, [sp, #48]
  444c3c:	mov	x29, sp
  444c40:	cbz	x1, 444d48 <_obstack_memory_used@@Base+0x9550>
  444c44:	ldr	x24, [x1, #8]
  444c48:	mov	x21, x1
  444c4c:	cbz	x20, 444d34 <_obstack_memory_used@@Base+0x953c>
  444c50:	cmp	x24, #0x1
  444c54:	b.lt	444d34 <_obstack_memory_used@@Base+0x953c>  // b.tstop
  444c58:	ldr	x23, [x20, #8]
  444c5c:	cmp	x23, #0x1
  444c60:	b.lt	444d34 <_obstack_memory_used@@Base+0x953c>  // b.tstop
  444c64:	add	x8, x23, x24
  444c68:	lsl	x0, x8, #3
  444c6c:	str	x8, [x19]
  444c70:	bl	4044d0 <malloc@plt>
  444c74:	str	x0, [x19, #16]
  444c78:	cbz	x0, 444dcc <_obstack_memory_used@@Base+0x95d4>
  444c7c:	mov	x25, xzr
  444c80:	mov	x22, xzr
  444c84:	mov	x11, xzr
  444c88:	mov	x9, xzr
  444c8c:	mov	w10, #0x1                   	// #1
  444c90:	add	x8, x0, x22, lsl #3
  444c94:	mov	x26, x11
  444c98:	tbz	w10, #0, 444d88 <_obstack_memory_used@@Base+0x9590>
  444c9c:	ldr	x10, [x21, #16]
  444ca0:	ldr	x11, [x20, #16]
  444ca4:	ldr	x13, [x10, x9, lsl #3]
  444ca8:	ldr	x12, [x11, x26, lsl #3]
  444cac:	cmp	x13, x12
  444cb0:	b.le	444cd4 <_obstack_memory_used@@Base+0x94dc>
  444cb4:	add	x26, x26, #0x1
  444cb8:	cmp	x23, x26
  444cbc:	add	x22, x22, #0x1
  444cc0:	cset	w10, gt
  444cc4:	cmp	x24, x9
  444cc8:	str	x12, [x8], #8
  444ccc:	b.gt	444c98 <_obstack_memory_used@@Base+0x94a0>
  444cd0:	b	444d08 <_obstack_memory_used@@Base+0x9510>
  444cd4:	str	x13, [x8]
  444cd8:	ldr	x23, [x20, #8]
  444cdc:	ldr	x24, [x21, #8]
  444ce0:	cinc	x11, x26, eq  // eq = none
  444ce4:	add	x9, x9, #0x1
  444ce8:	cmp	x23, x11
  444cec:	add	x22, x22, #0x1
  444cf0:	cset	w10, gt
  444cf4:	cmp	x24, x9
  444cf8:	sub	x25, x25, #0x1
  444cfc:	b.gt	444c90 <_obstack_memory_used@@Base+0x9498>
  444d00:	cmp	x13, x12
  444d04:	cinc	x26, x26, eq  // eq = none
  444d08:	cbz	w10, 444dac <_obstack_memory_used@@Base+0x95b4>
  444d0c:	ldr	x8, [x20, #16]
  444d10:	sub	x9, x23, x26
  444d14:	add	x0, x0, x22, lsl #3
  444d18:	lsl	x2, x9, #3
  444d1c:	add	x1, x8, x26, lsl #3
  444d20:	bl	4040f0 <memcpy@plt>
  444d24:	ldr	x8, [x20, #8]
  444d28:	sub	x9, x22, x26
  444d2c:	add	x22, x9, x8
  444d30:	b	444dac <_obstack_memory_used@@Base+0x95b4>
  444d34:	cmp	x24, #0x1
  444d38:	b.lt	444d48 <_obstack_memory_used@@Base+0x9550>  // b.tstop
  444d3c:	mov	x0, x19
  444d40:	mov	x1, x21
  444d44:	b	444d60 <_obstack_memory_used@@Base+0x9568>
  444d48:	cbz	x20, 444d78 <_obstack_memory_used@@Base+0x9580>
  444d4c:	ldr	x8, [x20, #8]
  444d50:	cmp	x8, #0x1
  444d54:	b.lt	444d78 <_obstack_memory_used@@Base+0x9580>  // b.tstop
  444d58:	mov	x0, x19
  444d5c:	mov	x1, x20
  444d60:	ldp	x20, x19, [sp, #64]
  444d64:	ldp	x22, x21, [sp, #48]
  444d68:	ldp	x24, x23, [sp, #32]
  444d6c:	ldp	x26, x25, [sp, #16]
  444d70:	ldp	x29, x30, [sp], #80
  444d74:	b	443034 <_obstack_memory_used@@Base+0x783c>
  444d78:	mov	w0, wzr
  444d7c:	stp	xzr, xzr, [x19]
  444d80:	str	xzr, [x19, #16]
  444d84:	b	444db4 <_obstack_memory_used@@Base+0x95bc>
  444d88:	ldr	x10, [x21, #16]
  444d8c:	sub	x11, x24, x9
  444d90:	lsl	x2, x11, #3
  444d94:	mov	x0, x8
  444d98:	add	x1, x10, x9, lsl #3
  444d9c:	bl	4040f0 <memcpy@plt>
  444da0:	ldr	x8, [x21, #8]
  444da4:	add	x8, x8, x25
  444da8:	add	x22, x8, x22
  444dac:	mov	w0, wzr
  444db0:	str	x22, [x19, #8]
  444db4:	ldp	x20, x19, [sp, #64]
  444db8:	ldp	x22, x21, [sp, #48]
  444dbc:	ldp	x24, x23, [sp, #32]
  444dc0:	ldp	x26, x25, [sp, #16]
  444dc4:	ldp	x29, x30, [sp], #80
  444dc8:	ret
  444dcc:	mov	w0, #0xc                   	// #12
  444dd0:	b	444db4 <_obstack_memory_used@@Base+0x95bc>
  444dd4:	ldr	x9, [x0, #200]
  444dd8:	mov	x8, x0
  444ddc:	cmp	x9, #0x1
  444de0:	b.lt	444e24 <_obstack_memory_used@@Base+0x962c>  // b.tstop
  444de4:	ldr	x10, [x8, #216]
  444de8:	mov	x0, xzr
  444dec:	mov	w11, #0x28                  	// #40
  444df0:	mov	x12, x9
  444df4:	add	x13, x0, x12
  444df8:	cmp	x13, #0x0
  444dfc:	cinc	x13, x13, lt  // lt = tstop
  444e00:	asr	x13, x13, #1
  444e04:	madd	x14, x13, x11, x10
  444e08:	ldr	x14, [x14, #8]
  444e0c:	cmp	x14, x1
  444e10:	csel	x12, x12, x13, lt  // lt = tstop
  444e14:	csinc	x0, x0, x13, ge  // ge = tcont
  444e18:	cmp	x0, x12
  444e1c:	b.lt	444df4 <_obstack_memory_used@@Base+0x95fc>  // b.tstop
  444e20:	b	444e28 <_obstack_memory_used@@Base+0x9630>
  444e24:	mov	x0, xzr
  444e28:	cmp	x0, x9
  444e2c:	b.ge	444e48 <_obstack_memory_used@@Base+0x9650>  // b.tcont
  444e30:	ldr	x8, [x8, #216]
  444e34:	mov	w9, #0x28                  	// #40
  444e38:	madd	x8, x0, x9, x8
  444e3c:	ldr	x8, [x8, #8]
  444e40:	cmp	x8, x1
  444e44:	b.eq	444e4c <_obstack_memory_used@@Base+0x9654>  // b.none
  444e48:	mov	x0, #0xffffffffffffffff    	// #-1
  444e4c:	ret
  444e50:	stp	x29, x30, [sp, #-48]!
  444e54:	stp	x20, x19, [sp, #32]
  444e58:	ldr	x8, [x0, #64]
  444e5c:	str	x21, [sp, #16]
  444e60:	ldr	x21, [x0, #192]
  444e64:	mov	x19, x0
  444e68:	mov	x20, x1
  444e6c:	cmp	x8, x1
  444e70:	mov	x29, sp
  444e74:	b.gt	444e84 <_obstack_memory_used@@Base+0x968c>
  444e78:	ldr	x9, [x19, #88]
  444e7c:	cmp	x8, x9
  444e80:	b.lt	444e9c <_obstack_memory_used@@Base+0x96a4>  // b.tstop
  444e84:	ldr	x8, [x19, #48]
  444e88:	cmp	x8, x20
  444e8c:	b.gt	444eac <_obstack_memory_used@@Base+0x96b4>
  444e90:	ldr	x9, [x19, #88]
  444e94:	cmp	x8, x9
  444e98:	b.ge	444eac <_obstack_memory_used@@Base+0x96b4>  // b.tcont
  444e9c:	add	w1, w20, #0x1
  444ea0:	mov	x0, x19
  444ea4:	bl	444a10 <_obstack_memory_used@@Base+0x9218>
  444ea8:	cbnz	w0, 444ee0 <_obstack_memory_used@@Base+0x96e8>
  444eac:	cmp	x21, x20
  444eb0:	b.ge	444edc <_obstack_memory_used@@Base+0x96e4>  // b.tcont
  444eb4:	ldr	x8, [x19, #184]
  444eb8:	sub	x9, x20, x21
  444ebc:	lsl	x2, x9, #3
  444ec0:	mov	w1, wzr
  444ec4:	add	x8, x8, x21, lsl #3
  444ec8:	add	x0, x8, #0x8
  444ecc:	bl	4045e0 <memset@plt>
  444ed0:	mov	w0, wzr
  444ed4:	str	x20, [x19, #192]
  444ed8:	b	444ee0 <_obstack_memory_used@@Base+0x96e8>
  444edc:	mov	w0, wzr
  444ee0:	ldp	x20, x19, [sp, #32]
  444ee4:	ldr	x21, [sp, #16]
  444ee8:	ldp	x29, x30, [sp], #48
  444eec:	ret
  444ef0:	stp	x29, x30, [sp, #-80]!
  444ef4:	stp	x26, x25, [sp, #16]
  444ef8:	stp	x24, x23, [sp, #32]
  444efc:	stp	x22, x21, [sp, #48]
  444f00:	stp	x20, x19, [sp, #64]
  444f04:	mov	x22, x2
  444f08:	mov	x23, x3
  444f0c:	ldr	x2, [x2]
  444f10:	ldr	x3, [x22, #8]
  444f14:	mov	x19, x4
  444f18:	mov	x21, x1
  444f1c:	add	x1, x22, #0x10
  444f20:	mov	w6, #0x8                   	// #8
  444f24:	mov	x4, x23
  444f28:	mov	x5, x19
  444f2c:	mov	x29, sp
  444f30:	mov	x20, x0
  444f34:	bl	44504c <_obstack_memory_used@@Base+0x9854>
  444f38:	cbz	w0, 444f54 <_obstack_memory_used@@Base+0x975c>
  444f3c:	ldp	x20, x19, [sp, #64]
  444f40:	ldp	x22, x21, [sp, #48]
  444f44:	ldp	x24, x23, [sp, #32]
  444f48:	ldp	x26, x25, [sp, #16]
  444f4c:	ldp	x29, x30, [sp], #80
  444f50:	ret
  444f54:	ldp	x8, x9, [x20, #200]
  444f58:	ldr	x25, [x21]
  444f5c:	ldr	x24, [x22, #8]
  444f60:	cmp	x8, x9
  444f64:	b.lt	444fa8 <_obstack_memory_used@@Base+0x97b0>  // b.tstop
  444f68:	ldr	x0, [x20, #216]
  444f6c:	add	x8, x9, x9, lsl #2
  444f70:	lsl	x1, x8, #4
  444f74:	bl	404710 <realloc@plt>
  444f78:	cbz	x0, 44503c <_obstack_memory_used@@Base+0x9844>
  444f7c:	ldp	x8, x26, [x20, #200]
  444f80:	mov	w9, #0x28                  	// #40
  444f84:	str	x0, [x20, #216]
  444f88:	mov	w1, wzr
  444f8c:	madd	x0, x8, x9, x0
  444f90:	add	x8, x26, x26, lsl #2
  444f94:	lsl	x2, x8, #3
  444f98:	bl	4045e0 <memset@plt>
  444f9c:	ldr	x8, [x20, #200]
  444fa0:	lsl	x9, x26, #1
  444fa4:	str	x9, [x20, #208]
  444fa8:	ldr	x9, [x20, #216]
  444fac:	subs	x10, x8, #0x1
  444fb0:	b.lt	444fd8 <_obstack_memory_used@@Base+0x97e0>  // b.tstop
  444fb4:	mov	w11, #0x28                  	// #40
  444fb8:	madd	x11, x10, x11, x9
  444fbc:	ldr	x11, [x11, #8]
  444fc0:	cmp	x11, x19
  444fc4:	b.ne	444fd8 <_obstack_memory_used@@Base+0x97e0>  // b.any
  444fc8:	mov	w11, #0x28                  	// #40
  444fcc:	madd	x10, x10, x11, x9
  444fd0:	mov	w11, #0x1                   	// #1
  444fd4:	strb	w11, [x10, #32]
  444fd8:	mov	w11, #0x28                  	// #40
  444fdc:	subs	x10, x24, x25
  444fe0:	add	x12, x8, #0x1
  444fe4:	madd	x8, x8, x11, x9
  444fe8:	csetm	w9, eq  // eq = none
  444fec:	stp	x23, x19, [x8]
  444ff0:	stp	x25, x24, [x8, #16]
  444ff4:	strh	w9, [x8, #34]
  444ff8:	str	x12, [x20, #200]
  444ffc:	strb	wzr, [x8, #32]
  445000:	ldrsw	x8, [x20, #224]
  445004:	cmp	x10, x8
  445008:	b.le	445010 <_obstack_memory_used@@Base+0x9818>
  44500c:	str	w10, [x20, #224]
  445010:	ldr	x8, [x22, #8]
  445014:	ldr	x9, [x21]
  445018:	mov	x0, x20
  44501c:	ldp	x22, x21, [sp, #48]
  445020:	add	x8, x8, x19
  445024:	ldp	x20, x19, [sp, #64]
  445028:	ldp	x24, x23, [sp, #32]
  44502c:	ldp	x26, x25, [sp, #16]
  445030:	sub	x1, x8, x9
  445034:	ldp	x29, x30, [sp], #80
  445038:	b	444e50 <_obstack_memory_used@@Base+0x9658>
  44503c:	ldr	x0, [x20, #216]
  445040:	bl	4049b0 <free@plt>
  445044:	mov	w0, #0xc                   	// #12
  445048:	b	444f3c <_obstack_memory_used@@Base+0x9744>
  44504c:	sub	sp, sp, #0xf0
  445050:	stp	x29, x30, [sp, #144]
  445054:	stp	x28, x27, [sp, #160]
  445058:	stp	x26, x25, [sp, #176]
  44505c:	stp	x24, x23, [sp, #192]
  445060:	stp	x22, x21, [sp, #208]
  445064:	stp	x20, x19, [sp, #224]
  445068:	ldr	x8, [x0, #152]
  44506c:	add	x29, sp, #0x90
  445070:	stur	wzr, [x29, #-36]
  445074:	lsl	x10, x2, #4
  445078:	stp	x5, x8, [sp, #48]
  44507c:	ldr	x8, [x8]
  445080:	ldrsw	x9, [x0, #224]
  445084:	ldr	x20, [x1, #8]
  445088:	mov	w24, w6
  44508c:	ldr	x8, [x8, x10]
  445090:	mov	x23, x5
  445094:	mov	x25, x4
  445098:	mov	x22, x2
  44509c:	str	x8, [sp, #64]
  4450a0:	add	x8, x9, x5
  4450a4:	mov	x27, x1
  4450a8:	mov	x21, x0
  4450ac:	cmp	x20, x8
  4450b0:	mov	x19, x3
  4450b4:	str	w6, [sp, #44]
  4450b8:	b.le	4454a4 <_obstack_memory_used@@Base+0x9cac>
  4450bc:	ldr	x9, [x21, #184]
  4450c0:	ldr	x8, [x27]
  4450c4:	ldr	x20, [x27, #16]
  4450c8:	ldr	w2, [x21, #160]
  4450cc:	str	x9, [sp, #24]
  4450d0:	ldr	x9, [x21, #72]
  4450d4:	cmp	x8, #0x0
  4450d8:	csel	x26, x19, x8, eq  // eq = none
  4450dc:	sub	x1, x26, #0x1
  4450e0:	mov	x0, x21
  4450e4:	str	x9, [sp, #16]
  4450e8:	str	x20, [x21, #184]
  4450ec:	str	x26, [x21, #72]
  4450f0:	bl	44420c <_obstack_memory_used@@Base+0x8a14>
  4450f4:	cmp	x26, x19
  4450f8:	mov	w19, w0
  4450fc:	str	x27, [sp, #32]
  445100:	b.ne	445150 <_obstack_memory_used@@Base+0x9958>  // b.any
  445104:	mov	w8, #0x1                   	// #1
  445108:	dup	v0.2d, x8
  44510c:	mov	w0, #0x8                   	// #8
  445110:	stur	q0, [x29, #-64]
  445114:	bl	4044d0 <malloc@plt>
  445118:	stur	x0, [x29, #-48]
  44511c:	cbz	x0, 4454f4 <_obstack_memory_used@@Base+0x9cfc>
  445120:	str	x22, [x0]
  445124:	ldp	x0, x2, [sp, #56]
  445128:	sub	x1, x29, #0x40
  44512c:	mov	w3, w24
  445130:	stur	wzr, [x29, #-36]
  445134:	bl	445514 <_obstack_memory_used@@Base+0x9d1c>
  445138:	stur	w0, [x29, #-36]
  44513c:	cbz	w0, 445194 <_obstack_memory_used@@Base+0x999c>
  445140:	mov	w22, w0
  445144:	ldur	x0, [x29, #-48]
  445148:	bl	4049b0 <free@plt>
  44514c:	b	445450 <_obstack_memory_used@@Base+0x9c58>
  445150:	ldr	x27, [x20, x26, lsl #3]
  445154:	cbz	x27, 44516c <_obstack_memory_used@@Base+0x9974>
  445158:	ldrb	w8, [x27, #104]
  44515c:	tbnz	w8, #6, 445178 <_obstack_memory_used@@Base+0x9980>
  445160:	stp	xzr, xzr, [x29, #-64]
  445164:	stur	xzr, [x29, #-48]
  445168:	b	44518c <_obstack_memory_used@@Base+0x9994>
  44516c:	stp	xzr, xzr, [x29, #-64]
  445170:	stur	xzr, [x29, #-48]
  445174:	b	4451e8 <_obstack_memory_used@@Base+0x99f0>
  445178:	add	x1, x27, #0x8
  44517c:	sub	x0, x29, #0x40
  445180:	bl	443034 <_obstack_memory_used@@Base+0x783c>
  445184:	stur	w0, [x29, #-36]
  445188:	cbnz	w0, 445504 <_obstack_memory_used@@Base+0x9d0c>
  44518c:	ldrb	w8, [x27, #104]
  445190:	tbz	w8, #6, 4451e8 <_obstack_memory_used@@Base+0x99f0>
  445194:	ldur	x8, [x29, #-56]
  445198:	ldr	x3, [sp, #64]
  44519c:	cbz	x8, 4451bc <_obstack_memory_used@@Base+0x99c4>
  4451a0:	sub	x1, x29, #0x40
  4451a4:	mov	x0, x21
  4451a8:	mov	x2, x26
  4451ac:	mov	w4, w24
  4451b0:	bl	445654 <_obstack_memory_used@@Base+0x9e5c>
  4451b4:	stur	w0, [x29, #-36]
  4451b8:	cbnz	w0, 445494 <_obstack_memory_used@@Base+0x9c9c>
  4451bc:	ldr	x1, [sp, #56]
  4451c0:	sub	x0, x29, #0x24
  4451c4:	sub	x2, x29, #0x40
  4451c8:	mov	w3, w19
  4451cc:	bl	443100 <_obstack_memory_used@@Base+0x7908>
  4451d0:	mov	x27, x0
  4451d4:	cbnz	x0, 4451e0 <_obstack_memory_used@@Base+0x99e8>
  4451d8:	ldur	w8, [x29, #-36]
  4451dc:	cbnz	w8, 445494 <_obstack_memory_used@@Base+0x9c9c>
  4451e0:	ldr	x8, [x21, #184]
  4451e4:	str	x27, [x8, x26, lsl #3]
  4451e8:	cmp	x26, x23
  4451ec:	b.ge	445408 <_obstack_memory_used@@Base+0x9c10>  // b.tcont
  4451f0:	ldp	x20, x22, [sp, #56]
  4451f4:	str	x25, [sp, #8]
  4451f8:	mov	x25, xzr
  4451fc:	ldrsw	x8, [x21, #224]
  445200:	cmp	x25, x8
  445204:	b.gt	445404 <_obstack_memory_used@@Base+0x9c0c>
  445208:	stur	xzr, [x29, #-56]
  44520c:	ldr	x8, [x21, #184]
  445210:	add	x19, x26, #0x1
  445214:	ldr	x8, [x8, x19, lsl #3]
  445218:	cbz	x8, 445230 <_obstack_memory_used@@Base+0x9a38>
  44521c:	add	x1, x8, #0x8
  445220:	sub	x0, x29, #0x40
  445224:	bl	442ca8 <_obstack_memory_used@@Base+0x74b0>
  445228:	stur	w0, [x29, #-36]
  44522c:	cbnz	w0, 445494 <_obstack_memory_used@@Base+0x9c9c>
  445230:	cbz	x27, 44536c <_obstack_memory_used@@Base+0x9b74>
  445234:	str	x19, [sp, #72]
  445238:	ldr	x19, [x21, #152]
  44523c:	stur	wzr, [x29, #-4]
  445240:	stp	xzr, xzr, [x29, #-32]
  445244:	stur	xzr, [x29, #-16]
  445248:	ldr	x8, [x27, #40]
  44524c:	cmp	x8, #0x1
  445250:	b.lt	44535c <_obstack_memory_used@@Base+0x9b64>  // b.tstop
  445254:	mov	x24, xzr
  445258:	ldr	x8, [x27, #48]
  44525c:	ldr	x22, [x8, x24, lsl #3]
  445260:	ldr	x8, [x19]
  445264:	add	x9, x8, x22, lsl #4
  445268:	ldrb	w9, [x9, #10]
  44526c:	tbnz	w9, #4, 445288 <_obstack_memory_used@@Base+0x9a90>
  445270:	add	x1, x8, x22, lsl #4
  445274:	mov	x0, x21
  445278:	mov	x2, x26
  44527c:	bl	445edc <_obstack_memory_used@@Base+0xa6e4>
  445280:	tbnz	w0, #0, 445318 <_obstack_memory_used@@Base+0x9b20>
  445284:	b	44532c <_obstack_memory_used@@Base+0x9b34>
  445288:	mov	x0, x19
  44528c:	mov	x1, x22
  445290:	mov	x2, x21
  445294:	mov	x3, x26
  445298:	bl	445be4 <_obstack_memory_used@@Base+0xa3ec>
  44529c:	cmp	w0, #0x2
  4452a0:	b.lt	445314 <_obstack_memory_used@@Base+0x9b1c>  // b.tstop
  4452a4:	ldr	x8, [x21, #184]
  4452a8:	ldr	x9, [x19, #24]
  4452ac:	add	x28, x26, w0, uxtw
  4452b0:	ldr	x8, [x8, x28, lsl #3]
  4452b4:	ldr	x20, [x9, x22, lsl #3]
  4452b8:	stur	xzr, [x29, #-24]
  4452bc:	cbz	x8, 4452d4 <_obstack_memory_used@@Base+0x9adc>
  4452c0:	add	x1, x8, #0x8
  4452c4:	sub	x0, x29, #0x20
  4452c8:	bl	442ca8 <_obstack_memory_used@@Base+0x74b0>
  4452cc:	stur	w0, [x29, #-4]
  4452d0:	cbnz	w0, 44549c <_obstack_memory_used@@Base+0x9ca4>
  4452d4:	sub	x0, x29, #0x20
  4452d8:	mov	x1, x20
  4452dc:	bl	442e2c <_obstack_memory_used@@Base+0x7634>
  4452e0:	tbz	w0, #0, 445474 <_obstack_memory_used@@Base+0x9c7c>
  4452e4:	sub	x0, x29, #0x4
  4452e8:	sub	x2, x29, #0x20
  4452ec:	mov	x1, x19
  4452f0:	bl	4459f4 <_obstack_memory_used@@Base+0xa1fc>
  4452f4:	ldr	x8, [x21, #184]
  4452f8:	str	x0, [x8, x28, lsl #3]
  4452fc:	ldr	x8, [x21, #184]
  445300:	ldr	x8, [x8, x28, lsl #3]
  445304:	cbnz	x8, 445318 <_obstack_memory_used@@Base+0x9b20>
  445308:	ldur	w23, [x29, #-4]
  44530c:	cbz	w23, 445318 <_obstack_memory_used@@Base+0x9b20>
  445310:	b	445478 <_obstack_memory_used@@Base+0x9c80>
  445314:	cbz	w0, 445340 <_obstack_memory_used@@Base+0x9b48>
  445318:	ldr	x8, [x19, #24]
  44531c:	sub	x0, x29, #0x40
  445320:	ldr	x1, [x8, x22, lsl #3]
  445324:	bl	442e2c <_obstack_memory_used@@Base+0x7634>
  445328:	tbz	w0, #0, 445474 <_obstack_memory_used@@Base+0x9c7c>
  44532c:	ldr	x8, [x27, #40]
  445330:	add	x24, x24, #0x1
  445334:	cmp	x24, x8
  445338:	b.lt	445258 <_obstack_memory_used@@Base+0x9a60>  // b.tstop
  44533c:	b	445348 <_obstack_memory_used@@Base+0x9b50>
  445340:	ldr	x8, [x19]
  445344:	b	445270 <_obstack_memory_used@@Base+0x9a78>
  445348:	ldur	x0, [x29, #-16]
  44534c:	ldp	x23, x20, [sp, #48]
  445350:	ldr	w24, [sp, #44]
  445354:	ldr	x22, [sp, #64]
  445358:	b	445360 <_obstack_memory_used@@Base+0x9b68>
  44535c:	mov	x0, xzr
  445360:	bl	4049b0 <free@plt>
  445364:	ldr	x19, [sp, #72]
  445368:	stur	wzr, [x29, #-36]
  44536c:	ldur	x8, [x29, #-56]
  445370:	cbz	x8, 4453b0 <_obstack_memory_used@@Base+0x9bb8>
  445374:	sub	x1, x29, #0x40
  445378:	mov	x0, x20
  44537c:	mov	x2, x22
  445380:	mov	w3, w24
  445384:	bl	445514 <_obstack_memory_used@@Base+0x9d1c>
  445388:	stur	w0, [x29, #-36]
  44538c:	cbnz	w0, 445494 <_obstack_memory_used@@Base+0x9c9c>
  445390:	sub	x1, x29, #0x40
  445394:	mov	x0, x21
  445398:	mov	x2, x19
  44539c:	mov	x3, x22
  4453a0:	mov	w4, w24
  4453a4:	bl	445654 <_obstack_memory_used@@Base+0x9e5c>
  4453a8:	stur	w0, [x29, #-36]
  4453ac:	cbnz	w0, 445494 <_obstack_memory_used@@Base+0x9c9c>
  4453b0:	ldr	w2, [x21, #160]
  4453b4:	mov	x0, x21
  4453b8:	mov	x1, x26
  4453bc:	bl	44420c <_obstack_memory_used@@Base+0x8a14>
  4453c0:	mov	w3, w0
  4453c4:	sub	x0, x29, #0x24
  4453c8:	sub	x2, x29, #0x40
  4453cc:	mov	x1, x20
  4453d0:	bl	443100 <_obstack_memory_used@@Base+0x7908>
  4453d4:	mov	x27, x0
  4453d8:	cbnz	x0, 4453e4 <_obstack_memory_used@@Base+0x9bec>
  4453dc:	ldur	w8, [x29, #-36]
  4453e0:	cbnz	w8, 445494 <_obstack_memory_used@@Base+0x9c9c>
  4453e4:	ldr	x8, [x21, #184]
  4453e8:	cmp	x27, #0x0
  4453ec:	csinc	x25, xzr, x25, ne  // ne = any
  4453f0:	cmp	x19, x23
  4453f4:	mov	x26, x19
  4453f8:	str	x27, [x8, x19, lsl #3]
  4453fc:	b.ne	4451fc <_obstack_memory_used@@Base+0x9a04>  // b.any
  445400:	mov	x26, x23
  445404:	ldr	x25, [sp, #8]
  445408:	ldur	x0, [x29, #-48]
  44540c:	bl	4049b0 <free@plt>
  445410:	ldr	x8, [x21, #184]
  445414:	ldr	x9, [sp, #32]
  445418:	ldr	x8, [x8, x23, lsl #3]
  44541c:	str	x26, [x9]
  445420:	ldr	x9, [sp, #24]
  445424:	str	x9, [x21, #184]
  445428:	ldr	x9, [sp, #16]
  44542c:	str	x9, [x21, #72]
  445430:	cbz	x8, 44544c <_obstack_memory_used@@Base+0x9c54>
  445434:	add	x0, x8, #0x8
  445438:	mov	x1, x25
  44543c:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  445440:	cbz	x0, 44544c <_obstack_memory_used@@Base+0x9c54>
  445444:	mov	w22, wzr
  445448:	b	445450 <_obstack_memory_used@@Base+0x9c58>
  44544c:	mov	w22, #0x1                   	// #1
  445450:	mov	w0, w22
  445454:	ldp	x20, x19, [sp, #224]
  445458:	ldp	x22, x21, [sp, #208]
  44545c:	ldp	x24, x23, [sp, #192]
  445460:	ldp	x26, x25, [sp, #176]
  445464:	ldp	x28, x27, [sp, #160]
  445468:	ldp	x29, x30, [sp, #144]
  44546c:	add	sp, sp, #0xf0
  445470:	ret
  445474:	mov	w23, #0xc                   	// #12
  445478:	ldur	x0, [x29, #-16]
  44547c:	bl	4049b0 <free@plt>
  445480:	ldur	x0, [x29, #-48]
  445484:	stur	w23, [x29, #-36]
  445488:	bl	4049b0 <free@plt>
  44548c:	ldur	w22, [x29, #-36]
  445490:	b	445450 <_obstack_memory_used@@Base+0x9c58>
  445494:	ldur	x0, [x29, #-48]
  445498:	b	445488 <_obstack_memory_used@@Base+0x9c90>
  44549c:	mov	w23, w0
  4454a0:	b	445478 <_obstack_memory_used@@Base+0x9c80>
  4454a4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4454a8:	sub	x9, x9, x20
  4454ac:	cmp	x9, x8
  4454b0:	b.le	44550c <_obstack_memory_used@@Base+0x9d14>
  4454b4:	add	x23, x8, #0x1
  4454b8:	add	x24, x23, x20
  4454bc:	lsr	x8, x24, #61
  4454c0:	cbnz	x8, 44550c <_obstack_memory_used@@Base+0x9d14>
  4454c4:	ldr	x0, [x27, #16]
  4454c8:	lsl	x1, x24, #3
  4454cc:	bl	404710 <realloc@plt>
  4454d0:	cbz	x0, 44550c <_obstack_memory_used@@Base+0x9d14>
  4454d4:	stp	x24, x0, [x27, #8]
  4454d8:	add	x0, x0, x20, lsl #3
  4454dc:	lsl	x2, x23, #3
  4454e0:	mov	w1, wzr
  4454e4:	bl	4045e0 <memset@plt>
  4454e8:	ldr	x23, [sp, #48]
  4454ec:	ldr	w24, [sp, #44]
  4454f0:	b	4450bc <_obstack_memory_used@@Base+0x98c4>
  4454f4:	mov	w22, #0xc                   	// #12
  4454f8:	stp	xzr, xzr, [x29, #-64]
  4454fc:	stur	w22, [x29, #-36]
  445500:	b	445450 <_obstack_memory_used@@Base+0x9c58>
  445504:	mov	w22, w0
  445508:	b	445450 <_obstack_memory_used@@Base+0x9c58>
  44550c:	mov	w22, #0xc                   	// #12
  445510:	b	445450 <_obstack_memory_used@@Base+0x9c58>
  445514:	sub	sp, sp, #0x70
  445518:	stp	x29, x30, [sp, #32]
  44551c:	stp	x24, x23, [sp, #64]
  445520:	stp	x22, x21, [sp, #80]
  445524:	stp	x20, x19, [sp, #96]
  445528:	ldr	x23, [x1, #8]
  44552c:	mov	x22, x0
  445530:	str	x25, [sp, #48]
  445534:	add	x29, sp, #0x20
  445538:	lsl	x0, x23, #3
  44553c:	mov	w20, w3
  445540:	mov	x21, x2
  445544:	mov	x19, x1
  445548:	stp	x23, xzr, [sp, #8]
  44554c:	bl	4044d0 <malloc@plt>
  445550:	str	x0, [sp, #24]
  445554:	cbz	x0, 44564c <_obstack_memory_used@@Base+0x9e54>
  445558:	cmp	x23, #0x1
  44555c:	b.lt	445610 <_obstack_memory_used@@Base+0x9e18>  // b.tstop
  445560:	mov	x24, xzr
  445564:	mov	w25, #0x18                  	// #24
  445568:	ldr	x8, [x19, #16]
  44556c:	ldr	x9, [x22, #48]
  445570:	ldr	x2, [x8, x24, lsl #3]
  445574:	madd	x1, x2, x25, x9
  445578:	ldr	x8, [x1, #8]
  44557c:	cmp	x8, #0x1
  445580:	b.lt	4455c0 <_obstack_memory_used@@Base+0x9dc8>  // b.tstop
  445584:	madd	x9, x2, x25, x9
  445588:	ldr	x9, [x9, #16]
  44558c:	ldr	x10, [x22]
  445590:	ldr	x11, [x9]
  445594:	add	x12, x10, x11, lsl #4
  445598:	ldrb	w12, [x12, #8]
  44559c:	cmp	w12, w20
  4455a0:	b.ne	4455b4 <_obstack_memory_used@@Base+0x9dbc>  // b.any
  4455a4:	lsl	x12, x11, #4
  4455a8:	ldr	x12, [x10, x12]
  4455ac:	cmp	x12, x21
  4455b0:	b.eq	4455e0 <_obstack_memory_used@@Base+0x9de8>  // b.none
  4455b4:	subs	x8, x8, #0x1
  4455b8:	add	x9, x9, #0x8
  4455bc:	b.ne	445590 <_obstack_memory_used@@Base+0x9d98>  // b.any
  4455c0:	add	x0, sp, #0x8
  4455c4:	bl	442ca8 <_obstack_memory_used@@Base+0x74b0>
  4455c8:	cbnz	w0, 445600 <_obstack_memory_used@@Base+0x9e08>
  4455cc:	ldr	x8, [x19, #8]
  4455d0:	add	x24, x24, #0x1
  4455d4:	cmp	x24, x8
  4455d8:	b.lt	445568 <_obstack_memory_used@@Base+0x9d70>  // b.tstop
  4455dc:	b	445610 <_obstack_memory_used@@Base+0x9e18>
  4455e0:	cmn	x11, #0x1
  4455e4:	b.eq	4455c0 <_obstack_memory_used@@Base+0x9dc8>  // b.none
  4455e8:	add	x1, sp, #0x8
  4455ec:	mov	x0, x22
  4455f0:	mov	x3, x21
  4455f4:	mov	w4, w20
  4455f8:	bl	4458e8 <_obstack_memory_used@@Base+0xa0f0>
  4455fc:	cbz	w0, 4455cc <_obstack_memory_used@@Base+0x9dd4>
  445600:	mov	w23, w0
  445604:	ldr	x0, [sp, #24]
  445608:	bl	4049b0 <free@plt>
  44560c:	b	44562c <_obstack_memory_used@@Base+0x9e34>
  445610:	ldr	x0, [x19, #16]
  445614:	bl	4049b0 <free@plt>
  445618:	ldr	x8, [sp, #24]
  44561c:	ldur	q0, [sp, #8]
  445620:	mov	w23, wzr
  445624:	str	x8, [x19, #16]
  445628:	str	q0, [x19]
  44562c:	mov	w0, w23
  445630:	ldp	x20, x19, [sp, #96]
  445634:	ldp	x22, x21, [sp, #80]
  445638:	ldp	x24, x23, [sp, #64]
  44563c:	ldr	x25, [sp, #48]
  445640:	ldp	x29, x30, [sp, #32]
  445644:	add	sp, sp, #0x70
  445648:	ret
  44564c:	mov	w23, #0xc                   	// #12
  445650:	b	44562c <_obstack_memory_used@@Base+0x9e34>
  445654:	sub	sp, sp, #0xa0
  445658:	stp	x29, x30, [sp, #64]
  44565c:	stp	x28, x27, [sp, #80]
  445660:	stp	x26, x25, [sp, #96]
  445664:	stp	x24, x23, [sp, #112]
  445668:	stp	x22, x21, [sp, #128]
  44566c:	stp	x20, x19, [sp, #144]
  445670:	ldr	x23, [x0, #152]
  445674:	mov	x24, x1
  445678:	mov	x1, x2
  44567c:	add	x29, sp, #0x40
  445680:	str	w4, [sp, #28]
  445684:	str	x3, [sp, #16]
  445688:	mov	x21, x2
  44568c:	mov	x22, x0
  445690:	bl	444dd4 <_obstack_memory_used@@Base+0x95dc>
  445694:	cmn	x0, #0x1
  445698:	b.eq	4458c0 <_obstack_memory_used@@Base+0xa0c8>  // b.none
  44569c:	mov	w8, #0x1                   	// #1
  4456a0:	dup	v0.2d, x8
  4456a4:	mov	x25, x0
  4456a8:	mov	w9, #0x28                  	// #40
  4456ac:	str	q0, [sp]
  4456b0:	ldr	x8, [x22, #216]
  4456b4:	madd	x8, x25, x9, x8
  4456b8:	add	x20, x8, #0x10
  4456bc:	ldur	x27, [x20, #-16]
  4456c0:	mov	x0, x24
  4456c4:	mov	x1, x27
  4456c8:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  4456cc:	cbz	x0, 445850 <_obstack_memory_used@@Base+0xa058>
  4456d0:	ldp	x9, x8, [x20]
  4456d4:	add	x8, x8, x21
  4456d8:	sub	x19, x8, x9
  4456dc:	cmp	x19, x21
  4456e0:	b.ne	445778 <_obstack_memory_used@@Base+0x9f80>  // b.any
  4456e4:	ldr	x8, [x23, #40]
  4456e8:	mov	w9, #0x18                  	// #24
  4456ec:	mov	x0, x24
  4456f0:	madd	x8, x27, x9, x8
  4456f4:	ldr	x8, [x8, #16]
  4456f8:	ldr	x27, [x8]
  4456fc:	mov	x1, x27
  445700:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  445704:	cbnz	x0, 4457a0 <_obstack_memory_used@@Base+0x9fa8>
  445708:	ldr	q0, [sp]
  44570c:	mov	w0, #0x8                   	// #8
  445710:	str	q0, [sp, #32]
  445714:	bl	4044d0 <malloc@plt>
  445718:	str	x0, [sp, #48]
  44571c:	cbz	x0, 445860 <_obstack_memory_used@@Base+0xa068>
  445720:	mov	w19, wzr
  445724:	str	x27, [x0]
  445728:	ldr	x2, [sp, #16]
  44572c:	ldr	w3, [sp, #28]
  445730:	add	x1, sp, #0x20
  445734:	mov	x0, x23
  445738:	stur	w19, [x29, #-4]
  44573c:	bl	445514 <_obstack_memory_used@@Base+0x9d1c>
  445740:	mov	w27, w0
  445744:	add	x1, sp, #0x20
  445748:	mov	x0, x24
  44574c:	bl	442ca8 <_obstack_memory_used@@Base+0x74b0>
  445750:	ldr	x8, [sp, #48]
  445754:	mov	w28, w0
  445758:	mov	x0, x8
  44575c:	bl	4049b0 <free@plt>
  445760:	orr	w8, w27, w19
  445764:	orr	w8, w8, w28
  445768:	cbnz	w8, 44586c <_obstack_memory_used@@Base+0xa074>
  44576c:	mov	w8, #0x2                   	// #2
  445770:	cbnz	w8, 445848 <_obstack_memory_used@@Base+0xa050>
  445774:	b	445850 <_obstack_memory_used@@Base+0xa058>
  445778:	ldr	x8, [x22, #184]
  44577c:	ldr	x9, [x23, #24]
  445780:	ldr	x8, [x8, x19, lsl #3]
  445784:	ldr	x27, [x9, x27, lsl #3]
  445788:	cbz	x8, 4457ac <_obstack_memory_used@@Base+0x9fb4>
  44578c:	add	x28, x8, #0x8
  445790:	mov	x0, x28
  445794:	mov	x1, x27
  445798:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  44579c:	cbz	x0, 4457d4 <_obstack_memory_used@@Base+0x9fdc>
  4457a0:	mov	w8, #0x4                   	// #4
  4457a4:	cbnz	w8, 445848 <_obstack_memory_used@@Base+0xa050>
  4457a8:	b	445850 <_obstack_memory_used@@Base+0xa058>
  4457ac:	mov	w8, #0x1                   	// #1
  4457b0:	dup	v0.2d, x8
  4457b4:	mov	w0, #0x8                   	// #8
  4457b8:	str	q0, [sp, #32]
  4457bc:	bl	4044d0 <malloc@plt>
  4457c0:	str	x0, [sp, #48]
  4457c4:	cbz	x0, 445880 <_obstack_memory_used@@Base+0xa088>
  4457c8:	str	x27, [x0]
  4457cc:	stur	wzr, [x29, #-4]
  4457d0:	b	4457fc <_obstack_memory_used@@Base+0xa004>
  4457d4:	add	x0, sp, #0x20
  4457d8:	mov	x1, x28
  4457dc:	bl	443034 <_obstack_memory_used@@Base+0x783c>
  4457e0:	mov	w28, w0
  4457e4:	stur	w0, [x29, #-4]
  4457e8:	add	x0, sp, #0x20
  4457ec:	mov	x1, x27
  4457f0:	bl	442e2c <_obstack_memory_used@@Base+0x7634>
  4457f4:	cbnz	w28, 44588c <_obstack_memory_used@@Base+0xa094>
  4457f8:	tbz	w0, #0, 44588c <_obstack_memory_used@@Base+0xa094>
  4457fc:	sub	x0, x29, #0x4
  445800:	add	x2, sp, #0x20
  445804:	mov	x1, x23
  445808:	bl	4459f4 <_obstack_memory_used@@Base+0xa1fc>
  44580c:	ldr	x8, [x22, #184]
  445810:	str	x0, [x8, x19, lsl #3]
  445814:	ldr	x0, [sp, #48]
  445818:	bl	4049b0 <free@plt>
  44581c:	ldr	x8, [x22, #184]
  445820:	ldur	w9, [x29, #-4]
  445824:	ldr	x8, [x8, x19, lsl #3]
  445828:	cmp	x8, #0x0
  44582c:	cset	w10, eq  // eq = none
  445830:	cmp	w9, #0x0
  445834:	cset	w11, ne  // ne = any
  445838:	tst	w10, w11
  44583c:	and	w8, w10, w11
  445840:	csel	w26, w9, w26, ne  // ne = any
  445844:	cbz	w8, 445850 <_obstack_memory_used@@Base+0xa058>
  445848:	cmp	w8, #0x4
  44584c:	b.ne	4458b0 <_obstack_memory_used@@Base+0xa0b8>  // b.any
  445850:	ldrb	w8, [x20, #16]
  445854:	add	x20, x20, #0x28
  445858:	cbnz	w8, 4456bc <_obstack_memory_used@@Base+0x9ec4>
  44585c:	b	4458c0 <_obstack_memory_used@@Base+0xa0c8>
  445860:	stp	xzr, xzr, [sp, #32]
  445864:	mov	w19, #0xc                   	// #12
  445868:	b	445728 <_obstack_memory_used@@Base+0x9f30>
  44586c:	cmp	w27, #0x0
  445870:	csel	w8, w28, w27, eq  // eq = none
  445874:	cmp	w19, #0x0
  445878:	csel	w26, w8, w19, eq  // eq = none
  44587c:	b	4458a0 <_obstack_memory_used@@Base+0xa0a8>
  445880:	mov	w26, #0xc                   	// #12
  445884:	stp	xzr, xzr, [sp, #32]
  445888:	b	4458a0 <_obstack_memory_used@@Base+0xa0a8>
  44588c:	ldr	x0, [sp, #48]
  445890:	bl	4049b0 <free@plt>
  445894:	cmp	w28, #0x0
  445898:	mov	w8, #0xc                   	// #12
  44589c:	csel	w26, w8, w28, eq  // eq = none
  4458a0:	mov	w8, #0x1                   	// #1
  4458a4:	stur	w26, [x29, #-4]
  4458a8:	cbnz	w8, 445848 <_obstack_memory_used@@Base+0xa050>
  4458ac:	b	445850 <_obstack_memory_used@@Base+0xa058>
  4458b0:	cmp	w8, #0x2
  4458b4:	b.ne	4458c4 <_obstack_memory_used@@Base+0xa0cc>  // b.any
  4458b8:	mov	w9, #0x28                  	// #40
  4458bc:	b	4456b0 <_obstack_memory_used@@Base+0x9eb8>
  4458c0:	mov	w26, wzr
  4458c4:	mov	w0, w26
  4458c8:	ldp	x20, x19, [sp, #144]
  4458cc:	ldp	x22, x21, [sp, #128]
  4458d0:	ldp	x24, x23, [sp, #112]
  4458d4:	ldp	x26, x25, [sp, #96]
  4458d8:	ldp	x28, x27, [sp, #80]
  4458dc:	ldp	x29, x30, [sp, #64]
  4458e0:	add	sp, sp, #0xa0
  4458e4:	ret
  4458e8:	stp	x29, x30, [sp, #-64]!
  4458ec:	stp	x24, x23, [sp, #16]
  4458f0:	stp	x20, x19, [sp, #48]
  4458f4:	mov	x20, x1
  4458f8:	mov	x23, x0
  4458fc:	mov	x0, x1
  445900:	mov	x1, x2
  445904:	stp	x22, x21, [sp, #32]
  445908:	mov	x29, sp
  44590c:	mov	w21, w4
  445910:	mov	x22, x3
  445914:	mov	x19, x2
  445918:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  44591c:	cbz	x0, 445938 <_obstack_memory_used@@Base+0xa140>
  445920:	mov	w0, wzr
  445924:	ldp	x20, x19, [sp, #48]
  445928:	ldp	x22, x21, [sp, #32]
  44592c:	ldp	x24, x23, [sp, #16]
  445930:	ldp	x29, x30, [sp], #64
  445934:	ret
  445938:	mov	w24, #0x18                  	// #24
  44593c:	ldr	x8, [x23]
  445940:	add	x9, x8, x19, lsl #4
  445944:	ldrb	w9, [x9, #8]
  445948:	cmp	w9, w21
  44594c:	b.ne	445960 <_obstack_memory_used@@Base+0xa168>  // b.any
  445950:	lsl	x9, x19, #4
  445954:	ldr	x8, [x8, x9]
  445958:	cmp	x8, x22
  44595c:	b.eq	4459d4 <_obstack_memory_used@@Base+0xa1dc>  // b.none
  445960:	mov	x0, x20
  445964:	mov	x1, x19
  445968:	bl	442e2c <_obstack_memory_used@@Base+0x7634>
  44596c:	tbz	w0, #0, 4459ec <_obstack_memory_used@@Base+0xa1f4>
  445970:	ldr	x8, [x23, #40]
  445974:	madd	x9, x19, x24, x8
  445978:	ldr	x9, [x9, #8]
  44597c:	cmp	x9, #0x2
  445980:	b.eq	44598c <_obstack_memory_used@@Base+0xa194>  // b.none
  445984:	cbnz	x9, 4459b4 <_obstack_memory_used@@Base+0xa1bc>
  445988:	b	445920 <_obstack_memory_used@@Base+0xa128>
  44598c:	madd	x8, x19, x24, x8
  445990:	ldr	x8, [x8, #16]
  445994:	mov	x0, x23
  445998:	mov	x1, x20
  44599c:	mov	x3, x22
  4459a0:	ldr	x2, [x8, #8]
  4459a4:	mov	w4, w21
  4459a8:	bl	4458e8 <_obstack_memory_used@@Base+0xa0f0>
  4459ac:	cbnz	w0, 445924 <_obstack_memory_used@@Base+0xa12c>
  4459b0:	ldr	x8, [x23, #40]
  4459b4:	madd	x8, x19, x24, x8
  4459b8:	ldr	x8, [x8, #16]
  4459bc:	mov	x0, x20
  4459c0:	ldr	x19, [x8]
  4459c4:	mov	x1, x19
  4459c8:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  4459cc:	cbz	x0, 44593c <_obstack_memory_used@@Base+0xa144>
  4459d0:	b	445920 <_obstack_memory_used@@Base+0xa128>
  4459d4:	cmp	w21, #0x9
  4459d8:	b.ne	445920 <_obstack_memory_used@@Base+0xa128>  // b.any
  4459dc:	mov	x0, x20
  4459e0:	mov	x1, x19
  4459e4:	bl	442e2c <_obstack_memory_used@@Base+0x7634>
  4459e8:	tbnz	w0, #0, 445920 <_obstack_memory_used@@Base+0xa128>
  4459ec:	mov	w0, #0xc                   	// #12
  4459f0:	b	445924 <_obstack_memory_used@@Base+0xa12c>
  4459f4:	stp	x29, x30, [sp, #-64]!
  4459f8:	stp	x24, x23, [sp, #16]
  4459fc:	stp	x22, x21, [sp, #32]
  445a00:	stp	x20, x19, [sp, #48]
  445a04:	ldr	x8, [x2, #8]
  445a08:	mov	x19, x0
  445a0c:	mov	x29, sp
  445a10:	cbz	x8, 445bb4 <_obstack_memory_used@@Base+0xa3bc>
  445a14:	mov	x23, x2
  445a18:	mov	x20, x1
  445a1c:	subs	x9, x8, #0x1
  445a20:	b.lt	445a44 <_obstack_memory_used@@Base+0xa24c>  // b.tstop
  445a24:	ldr	x10, [x23, #16]
  445a28:	mov	x11, x8
  445a2c:	mov	x21, x8
  445a30:	ldr	x12, [x10], #8
  445a34:	subs	x11, x11, #0x1
  445a38:	add	x21, x12, x21
  445a3c:	b.ne	445a30 <_obstack_memory_used@@Base+0xa238>  // b.any
  445a40:	b	445a48 <_obstack_memory_used@@Base+0xa250>
  445a44:	mov	x21, x8
  445a48:	ldr	x10, [x20, #136]
  445a4c:	ldr	x11, [x20, #64]
  445a50:	and	x12, x10, x21
  445a54:	mov	w10, #0x18                  	// #24
  445a58:	mul	x10, x12, x10
  445a5c:	ldr	x10, [x11, x10]
  445a60:	cmp	x10, #0x1
  445a64:	b.lt	445ad0 <_obstack_memory_used@@Base+0xa2d8>  // b.tstop
  445a68:	mov	w13, #0x18                  	// #24
  445a6c:	madd	x11, x12, x13, x11
  445a70:	ldr	x11, [x11, #16]
  445a74:	mov	x12, xzr
  445a78:	cbz	x23, 445ac4 <_obstack_memory_used@@Base+0xa2cc>
  445a7c:	ldr	x22, [x11, x12, lsl #3]
  445a80:	ldr	x13, [x22]
  445a84:	cmp	x21, x13
  445a88:	b.ne	445ac4 <_obstack_memory_used@@Base+0xa2cc>  // b.any
  445a8c:	ldr	x13, [x22, #16]
  445a90:	cmp	x13, x8
  445a94:	b.ne	445ac4 <_obstack_memory_used@@Base+0xa2cc>  // b.any
  445a98:	mov	x13, x9
  445a9c:	add	x14, x13, #0x1
  445aa0:	cmp	x14, #0x1
  445aa4:	b.lt	445b9c <_obstack_memory_used@@Base+0xa3a4>  // b.tstop
  445aa8:	ldr	x14, [x22, #24]
  445aac:	ldr	x15, [x23, #16]
  445ab0:	ldr	x14, [x14, x13, lsl #3]
  445ab4:	ldr	x15, [x15, x13, lsl #3]
  445ab8:	sub	x13, x13, #0x1
  445abc:	cmp	x14, x15
  445ac0:	b.eq	445a9c <_obstack_memory_used@@Base+0xa2a4>  // b.none
  445ac4:	add	x12, x12, #0x1
  445ac8:	cmp	x12, x10
  445acc:	b.lt	445a78 <_obstack_memory_used@@Base+0xa280>  // b.tstop
  445ad0:	mov	w0, #0x70                  	// #112
  445ad4:	mov	w1, #0x1                   	// #1
  445ad8:	bl	404680 <calloc@plt>
  445adc:	cbz	x0, 445bd4 <_obstack_memory_used@@Base+0xa3dc>
  445ae0:	add	x24, x0, #0x8
  445ae4:	mov	x22, x0
  445ae8:	mov	x0, x24
  445aec:	mov	x1, x23
  445af0:	bl	443034 <_obstack_memory_used@@Base+0x783c>
  445af4:	cbnz	w0, 445bc0 <_obstack_memory_used@@Base+0xa3c8>
  445af8:	str	x24, [x22, #80]
  445afc:	ldr	x8, [x23, #8]
  445b00:	cmp	x8, #0x1
  445b04:	b.lt	445b88 <_obstack_memory_used@@Base+0xa390>  // b.tstop
  445b08:	ldr	x9, [x20]
  445b0c:	ldr	x10, [x23, #16]
  445b10:	ldr	x11, [x10]
  445b14:	add	x11, x9, x11, lsl #4
  445b18:	ldr	w12, [x11, #8]!
  445b1c:	and	w13, w12, #0x3ffff
  445b20:	cmp	w13, #0x1
  445b24:	b.eq	445b7c <_obstack_memory_used@@Base+0xa384>  // b.none
  445b28:	ldrb	w14, [x22, #104]
  445b2c:	lsr	w15, w12, #15
  445b30:	and	w13, w12, #0xff
  445b34:	and	w12, w15, #0x20
  445b38:	orr	w12, w14, w12
  445b3c:	cmp	w13, #0xc
  445b40:	strb	w12, [x22, #104]
  445b44:	b.eq	445b74 <_obstack_memory_used@@Base+0xa37c>  // b.none
  445b48:	cmp	w13, #0x4
  445b4c:	b.eq	445b60 <_obstack_memory_used@@Base+0xa368>  // b.none
  445b50:	cmp	w13, #0x2
  445b54:	b.ne	445b68 <_obstack_memory_used@@Base+0xa370>  // b.any
  445b58:	orr	w11, w12, #0x10
  445b5c:	b	445b78 <_obstack_memory_used@@Base+0xa380>
  445b60:	orr	w11, w12, #0x40
  445b64:	b	445b78 <_obstack_memory_used@@Base+0xa380>
  445b68:	ldr	w11, [x11]
  445b6c:	tst	w11, #0x3ff00
  445b70:	b.eq	445b7c <_obstack_memory_used@@Base+0xa384>  // b.none
  445b74:	orr	w11, w12, #0x80
  445b78:	strb	w11, [x22, #104]
  445b7c:	subs	x8, x8, #0x1
  445b80:	add	x10, x10, #0x8
  445b84:	b.ne	445b10 <_obstack_memory_used@@Base+0xa318>  // b.any
  445b88:	mov	x0, x20
  445b8c:	mov	x1, x22
  445b90:	mov	x2, x21
  445b94:	bl	4433c0 <_obstack_memory_used@@Base+0x7bc8>
  445b98:	cbnz	w0, 445bcc <_obstack_memory_used@@Base+0xa3d4>
  445b9c:	mov	x0, x22
  445ba0:	ldp	x20, x19, [sp, #48]
  445ba4:	ldp	x22, x21, [sp, #32]
  445ba8:	ldp	x24, x23, [sp, #16]
  445bac:	ldp	x29, x30, [sp], #64
  445bb0:	ret
  445bb4:	mov	x22, xzr
  445bb8:	str	wzr, [x19]
  445bbc:	b	445b9c <_obstack_memory_used@@Base+0xa3a4>
  445bc0:	mov	x0, x22
  445bc4:	bl	4049b0 <free@plt>
  445bc8:	b	445bd4 <_obstack_memory_used@@Base+0xa3dc>
  445bcc:	mov	x0, x22
  445bd0:	bl	43eb28 <_obstack_memory_used@@Base+0x3330>
  445bd4:	mov	x22, xzr
  445bd8:	mov	w8, #0xc                   	// #12
  445bdc:	str	w8, [x19]
  445be0:	b	445b9c <_obstack_memory_used@@Base+0xa3a4>
  445be4:	stp	x29, x30, [sp, #-48]!
  445be8:	stp	x22, x21, [sp, #16]
  445bec:	stp	x20, x19, [sp, #32]
  445bf0:	ldr	x8, [x0]
  445bf4:	mov	x29, sp
  445bf8:	add	x9, x8, x1, lsl #4
  445bfc:	ldrb	w10, [x9, #8]
  445c00:	cmp	w10, #0x7
  445c04:	b.eq	445dd0 <_obstack_memory_used@@Base+0xa5d8>  // b.none
  445c08:	ldr	w9, [x2, #144]
  445c0c:	cmp	w9, #0x1
  445c10:	b.eq	445c54 <_obstack_memory_used@@Base+0xa45c>  // b.none
  445c14:	ldr	x11, [x2, #48]
  445c18:	add	x12, x3, #0x1
  445c1c:	cmp	x12, x11
  445c20:	b.ge	445c54 <_obstack_memory_used@@Base+0xa45c>  // b.tcont
  445c24:	ldr	x13, [x2, #16]
  445c28:	sub	w20, w11, w3
  445c2c:	sub	x12, x11, x3
  445c30:	mov	w11, #0x1                   	// #1
  445c34:	add	x13, x13, x3, lsl #2
  445c38:	ldr	w14, [x13, x11, lsl #2]
  445c3c:	cmn	w14, #0x1
  445c40:	b.ne	445ce0 <_obstack_memory_used@@Base+0xa4e8>  // b.any
  445c44:	add	x11, x11, #0x1
  445c48:	cmp	x12, x11
  445c4c:	b.ne	445c38 <_obstack_memory_used@@Base+0xa440>  // b.any
  445c50:	b	445c58 <_obstack_memory_used@@Base+0xa460>
  445c54:	mov	w20, #0x1                   	// #1
  445c58:	cmp	w10, #0x5
  445c5c:	b.ne	445c98 <_obstack_memory_used@@Base+0xa4a0>  // b.any
  445c60:	cmp	w20, #0x2
  445c64:	b.lt	445da8 <_obstack_memory_used@@Base+0xa5b0>  // b.tstop
  445c68:	ldr	x8, [x0, #216]
  445c6c:	tbnz	w8, #6, 445c80 <_obstack_memory_used@@Base+0xa488>
  445c70:	ldr	x9, [x2, #8]
  445c74:	ldrb	w9, [x9, x3]
  445c78:	cmp	w9, #0xa
  445c7c:	b.eq	445da8 <_obstack_memory_used@@Base+0xa5b0>  // b.none
  445c80:	tbz	w8, #7, 445c90 <_obstack_memory_used@@Base+0xa498>
  445c84:	ldr	x8, [x2, #8]
  445c88:	ldrb	w8, [x8, x3]
  445c8c:	cbz	w8, 445da8 <_obstack_memory_used@@Base+0xa5b0>
  445c90:	mov	w0, w20
  445c94:	b	445dac <_obstack_memory_used@@Base+0xa5b4>
  445c98:	cmp	w10, #0x6
  445c9c:	mov	w0, wzr
  445ca0:	b.ne	445dac <_obstack_memory_used@@Base+0xa5b4>  // b.any
  445ca4:	cmp	w20, #0x2
  445ca8:	b.lt	445dac <_obstack_memory_used@@Base+0xa5b4>  // b.tstop
  445cac:	lsl	x10, x1, #4
  445cb0:	ldr	x21, [x8, x10]
  445cb4:	ldr	x8, [x21, #64]
  445cb8:	cbnz	x8, 445ccc <_obstack_memory_used@@Base+0xa4d4>
  445cbc:	ldr	x10, [x21, #72]
  445cc0:	cbnz	x10, 445ccc <_obstack_memory_used@@Base+0xa4d4>
  445cc4:	ldr	x10, [x21, #40]
  445cc8:	cbz	x10, 445dc8 <_obstack_memory_used@@Base+0xa5d0>
  445ccc:	cmp	w9, #0x1
  445cd0:	b.ne	445ce8 <_obstack_memory_used@@Base+0xa4f0>  // b.any
  445cd4:	ldr	x9, [x2, #8]
  445cd8:	ldrb	w19, [x9, x3]
  445cdc:	b	445cf0 <_obstack_memory_used@@Base+0xa4f8>
  445ce0:	mov	w20, w11
  445ce4:	b	445c58 <_obstack_memory_used@@Base+0xa460>
  445ce8:	ldr	x9, [x2, #16]
  445cec:	ldr	w19, [x9, x3, lsl #2]
  445cf0:	ldr	x9, [x21, #40]
  445cf4:	cmp	x9, #0x1
  445cf8:	b.lt	445d1c <_obstack_memory_used@@Base+0xa524>  // b.tstop
  445cfc:	ldr	x10, [x21]
  445d00:	mov	x11, xzr
  445d04:	ldr	w12, [x10, x11, lsl #2]
  445d08:	cmp	w19, w12
  445d0c:	b.eq	445d94 <_obstack_memory_used@@Base+0xa59c>  // b.none
  445d10:	add	x11, x11, #0x1
  445d14:	cmp	x11, x9
  445d18:	b.lt	445d04 <_obstack_memory_used@@Base+0xa50c>  // b.tstop
  445d1c:	ldr	x9, [x21, #72]
  445d20:	cmp	x9, #0x1
  445d24:	b.lt	445d54 <_obstack_memory_used@@Base+0xa55c>  // b.tstop
  445d28:	mov	x22, xzr
  445d2c:	ldr	x8, [x21, #24]
  445d30:	mov	w0, w19
  445d34:	ldr	x1, [x8, x22, lsl #3]
  445d38:	bl	4044c0 <iswctype@plt>
  445d3c:	cbnz	w0, 445d94 <_obstack_memory_used@@Base+0xa59c>
  445d40:	ldr	x8, [x21, #72]
  445d44:	add	x22, x22, #0x1
  445d48:	cmp	x22, x8
  445d4c:	b.lt	445d2c <_obstack_memory_used@@Base+0xa534>  // b.tstop
  445d50:	ldr	x8, [x21, #64]
  445d54:	cmp	x8, #0x1
  445d58:	b.lt	445d8c <_obstack_memory_used@@Base+0xa594>  // b.tstop
  445d5c:	ldr	x9, [x21, #8]
  445d60:	mov	x10, xzr
  445d64:	ldr	w11, [x9, x10, lsl #2]
  445d68:	cmp	w11, w19
  445d6c:	b.hi	445d80 <_obstack_memory_used@@Base+0xa588>  // b.pmore
  445d70:	ldr	x11, [x21, #16]
  445d74:	ldr	w11, [x11, x10, lsl #2]
  445d78:	cmp	w19, w11
  445d7c:	b.ls	445d94 <_obstack_memory_used@@Base+0xa59c>  // b.plast
  445d80:	add	x10, x10, #0x1
  445d84:	cmp	x10, x8
  445d88:	b.lt	445d64 <_obstack_memory_used@@Base+0xa56c>  // b.tstop
  445d8c:	mov	w0, wzr
  445d90:	b	445d98 <_obstack_memory_used@@Base+0xa5a0>
  445d94:	mov	w0, w20
  445d98:	ldrb	w8, [x21, #32]
  445d9c:	tbz	w8, #0, 445dac <_obstack_memory_used@@Base+0xa5b4>
  445da0:	cmp	w0, #0x0
  445da4:	b.le	445dbc <_obstack_memory_used@@Base+0xa5c4>
  445da8:	mov	w0, wzr
  445dac:	ldp	x20, x19, [sp, #32]
  445db0:	ldp	x22, x21, [sp, #16]
  445db4:	ldp	x29, x30, [sp], #48
  445db8:	ret
  445dbc:	cmp	w20, #0x1
  445dc0:	csinc	w0, w20, wzr, gt
  445dc4:	b	445dac <_obstack_memory_used@@Base+0xa5b4>
  445dc8:	mov	w19, wzr
  445dcc:	b	445cf0 <_obstack_memory_used@@Base+0xa4f8>
  445dd0:	ldr	x8, [x2, #8]
  445dd4:	ldrb	w10, [x8, x3]
  445dd8:	cmp	w10, #0xc2
  445ddc:	b.cc	445da8 <_obstack_memory_used@@Base+0xa5b0>  // b.lo, b.ul, b.last
  445de0:	ldr	x9, [x2, #88]
  445de4:	add	x11, x3, #0x2
  445de8:	cmp	x11, x9
  445dec:	b.gt	445da8 <_obstack_memory_used@@Base+0xa5b0>
  445df0:	add	x11, x3, x8
  445df4:	ldrb	w11, [x11, #1]
  445df8:	cmp	w10, #0xdf
  445dfc:	b.hi	445e1c <_obstack_memory_used@@Base+0xa624>  // b.pmore
  445e00:	sxtb	w8, w11
  445e04:	cmp	w11, #0xbf
  445e08:	mov	w9, #0xffffffff            	// #-1
  445e0c:	ccmp	w8, w9, #0x0, ls  // ls = plast
  445e10:	mov	w8, #0x2                   	// #2
  445e14:	csel	w0, wzr, w8, gt
  445e18:	b	445dac <_obstack_memory_used@@Base+0xa5b4>
  445e1c:	cmp	w10, #0xef
  445e20:	b.hi	445e3c <_obstack_memory_used@@Base+0xa644>  // b.pmore
  445e24:	cmp	w10, #0xe0
  445e28:	mov	w10, #0x3                   	// #3
  445e2c:	b.ne	445e98 <_obstack_memory_used@@Base+0xa6a0>  // b.any
  445e30:	cmp	w11, #0xa0
  445e34:	b.cc	445da8 <_obstack_memory_used@@Base+0xa5b0>  // b.lo, b.ul, b.last
  445e38:	b	445e98 <_obstack_memory_used@@Base+0xa6a0>
  445e3c:	cmp	w10, #0xf7
  445e40:	b.hi	445e5c <_obstack_memory_used@@Base+0xa664>  // b.pmore
  445e44:	cmp	w10, #0xf0
  445e48:	mov	w10, #0x4                   	// #4
  445e4c:	b.ne	445e98 <_obstack_memory_used@@Base+0xa6a0>  // b.any
  445e50:	cmp	w11, #0x90
  445e54:	b.cc	445da8 <_obstack_memory_used@@Base+0xa5b0>  // b.lo, b.ul, b.last
  445e58:	b	445e98 <_obstack_memory_used@@Base+0xa6a0>
  445e5c:	cmp	w10, #0xfb
  445e60:	b.hi	445e7c <_obstack_memory_used@@Base+0xa684>  // b.pmore
  445e64:	cmp	w10, #0xf8
  445e68:	mov	w10, #0x5                   	// #5
  445e6c:	b.ne	445e98 <_obstack_memory_used@@Base+0xa6a0>  // b.any
  445e70:	cmp	w11, #0x88
  445e74:	b.cc	445da8 <_obstack_memory_used@@Base+0xa5b0>  // b.lo, b.ul, b.last
  445e78:	b	445e98 <_obstack_memory_used@@Base+0xa6a0>
  445e7c:	cmp	w10, #0xfd
  445e80:	b.hi	445da8 <_obstack_memory_used@@Base+0xa5b0>  // b.pmore
  445e84:	cmp	w10, #0xfc
  445e88:	mov	w10, #0x6                   	// #6
  445e8c:	b.ne	445e98 <_obstack_memory_used@@Base+0xa6a0>  // b.any
  445e90:	cmp	w11, #0x84
  445e94:	b.cc	445da8 <_obstack_memory_used@@Base+0xa5b0>  // b.lo, b.ul, b.last
  445e98:	add	x11, x10, x3
  445e9c:	cmp	x11, x9
  445ea0:	b.gt	445da8 <_obstack_memory_used@@Base+0xa5b0>
  445ea4:	add	x8, x3, x8
  445ea8:	sub	x9, x10, #0x1
  445eac:	add	x8, x8, #0x1
  445eb0:	ldrb	w11, [x8]
  445eb4:	mov	w0, wzr
  445eb8:	sxtb	w12, w11
  445ebc:	tbz	w12, #31, 445dac <_obstack_memory_used@@Base+0xa5b4>
  445ec0:	cmp	w11, #0xbf
  445ec4:	b.hi	445dac <_obstack_memory_used@@Base+0xa5b4>  // b.pmore
  445ec8:	subs	x9, x9, #0x1
  445ecc:	add	x8, x8, #0x1
  445ed0:	b.ne	445eb0 <_obstack_memory_used@@Base+0xa6b8>  // b.any
  445ed4:	mov	w0, w10
  445ed8:	b	445dac <_obstack_memory_used@@Base+0xa5b4>
  445edc:	stp	x29, x30, [sp, #-32]!
  445ee0:	str	x19, [sp, #16]
  445ee4:	ldr	w19, [x1, #8]
  445ee8:	mov	x29, sp
  445eec:	and	w8, w19, #0xff
  445ef0:	sub	w10, w8, #0x1
  445ef4:	cmp	w10, #0x6
  445ef8:	mov	w8, wzr
  445efc:	b.hi	445fbc <_obstack_memory_used@@Base+0xa7c4>  // b.pmore
  445f00:	ldr	x9, [x0, #8]
  445f04:	adrp	x11, 455000 <_obstack_memory_used@@Base+0x19808>
  445f08:	add	x11, x11, #0xa88
  445f0c:	ldrb	w9, [x9, x2]
  445f10:	adr	x12, 445f20 <_obstack_memory_used@@Base+0xa728>
  445f14:	ldrb	w13, [x11, x10]
  445f18:	add	x12, x12, x13, lsl #2
  445f1c:	br	x12
  445f20:	ldrb	w8, [x1]
  445f24:	cmp	w8, w9
  445f28:	b.eq	445f7c <_obstack_memory_used@@Base+0xa784>  // b.none
  445f2c:	b	445fb0 <_obstack_memory_used@@Base+0xa7b8>
  445f30:	ldr	x8, [x1]
  445f34:	lsr	x10, x9, #3
  445f38:	and	x10, x10, #0x18
  445f3c:	ldr	x8, [x8, x10]
  445f40:	lsr	x8, x8, x9
  445f44:	tbnz	w8, #0, 445f7c <_obstack_memory_used@@Base+0xa784>
  445f48:	b	445fb0 <_obstack_memory_used@@Base+0xa7b8>
  445f4c:	sxtb	w8, w9
  445f50:	tbnz	w8, #31, 445fb0 <_obstack_memory_used@@Base+0xa7b8>
  445f54:	cbz	w9, 445f70 <_obstack_memory_used@@Base+0xa778>
  445f58:	cmp	w9, #0xa
  445f5c:	b.ne	445f7c <_obstack_memory_used@@Base+0xa784>  // b.any
  445f60:	ldr	x8, [x0, #152]
  445f64:	ldrb	w8, [x8, #216]
  445f68:	tbnz	w8, #6, 445f7c <_obstack_memory_used@@Base+0xa784>
  445f6c:	b	445fb0 <_obstack_memory_used@@Base+0xa7b8>
  445f70:	ldr	x8, [x0, #152]
  445f74:	ldrb	w8, [x8, #216]
  445f78:	tbnz	w8, #7, 445fb0 <_obstack_memory_used@@Base+0xa7b8>
  445f7c:	tst	w19, #0x3ff00
  445f80:	b.eq	445fb8 <_obstack_memory_used@@Base+0xa7c0>  // b.none
  445f84:	ldr	w8, [x0, #160]
  445f88:	mov	x1, x2
  445f8c:	mov	w2, w8
  445f90:	bl	44420c <_obstack_memory_used@@Base+0x8a14>
  445f94:	and	w8, w0, #0x1
  445f98:	tbz	w19, #10, 445fa0 <_obstack_memory_used@@Base+0xa7a8>
  445f9c:	cbz	w8, 445fbc <_obstack_memory_used@@Base+0xa7c4>
  445fa0:	tbz	w19, #11, 445fa8 <_obstack_memory_used@@Base+0xa7b0>
  445fa4:	cbnz	w8, 445fb0 <_obstack_memory_used@@Base+0xa7b8>
  445fa8:	tbz	w19, #13, 445fcc <_obstack_memory_used@@Base+0xa7d4>
  445fac:	tbnz	w0, #1, 445fcc <_obstack_memory_used@@Base+0xa7d4>
  445fb0:	mov	w8, wzr
  445fb4:	b	445fbc <_obstack_memory_used@@Base+0xa7c4>
  445fb8:	mov	w8, #0x1                   	// #1
  445fbc:	mov	w0, w8
  445fc0:	ldr	x19, [sp, #16]
  445fc4:	ldp	x29, x30, [sp], #32
  445fc8:	ret
  445fcc:	tst	w19, #0x8000
  445fd0:	cset	w8, eq  // eq = none
  445fd4:	and	w9, w0, #0x8
  445fd8:	orr	w0, w8, w9, lsr #3
  445fdc:	b	445fc0 <_obstack_memory_used@@Base+0xa7c8>
  445fe0:	sub	sp, sp, #0xa0
  445fe4:	stp	x29, x30, [sp, #64]
  445fe8:	stp	x28, x27, [sp, #80]
  445fec:	stp	x26, x25, [sp, #96]
  445ff0:	stp	x24, x23, [sp, #112]
  445ff4:	stp	x22, x21, [sp, #128]
  445ff8:	stp	x20, x19, [sp, #144]
  445ffc:	ldp	x22, x21, [x1, #16]
  446000:	mov	w8, #0x1                   	// #1
  446004:	mov	x20, x0
  446008:	dup	v0.2d, x8
  44600c:	mov	w0, #0x8                   	// #8
  446010:	add	x29, sp, #0x40
  446014:	mov	x19, x1
  446018:	str	q0, [sp, #32]
  44601c:	bl	4044d0 <malloc@plt>
  446020:	str	x0, [sp, #48]
  446024:	cbz	x0, 446220 <_obstack_memory_used@@Base+0xaa28>
  446028:	str	x22, [x0]
  44602c:	add	x3, sp, #0x20
  446030:	mov	x0, x20
  446034:	mov	x1, x19
  446038:	mov	x2, x21
  44603c:	bl	4462d4 <_obstack_memory_used@@Base+0xaadc>
  446040:	cbnz	w0, 4461c4 <_obstack_memory_used@@Base+0xa9cc>
  446044:	mov	w10, wzr
  446048:	add	x8, x19, #0x20
  44604c:	str	x8, [sp, #16]
  446050:	mov	x11, x21
  446054:	subs	x21, x21, #0x1
  446058:	b.lt	4461d4 <_obstack_memory_used@@Base+0xa9dc>  // b.tstop
  44605c:	ldr	x0, [x19]
  446060:	ldr	w9, [x20, #224]
  446064:	ldr	x8, [x0, x11, lsl #3]
  446068:	cmp	x8, #0x0
  44606c:	csinc	w10, wzr, w10, ne  // ne = any
  446070:	cmp	w10, w9
  446074:	b.gt	446204 <_obstack_memory_used@@Base+0xaa0c>
  446078:	str	xzr, [sp, #40]
  44607c:	ldr	x8, [x20, #184]
  446080:	str	x11, [sp, #24]
  446084:	str	w10, [sp, #12]
  446088:	ldr	x28, [x8, x21, lsl #3]
  44608c:	cbz	x28, 4461a8 <_obstack_memory_used@@Base+0xa9b0>
  446090:	ldr	x8, [x28, #40]
  446094:	cmp	x8, #0x1
  446098:	b.lt	4461a8 <_obstack_memory_used@@Base+0xa9b0>  // b.tstop
  44609c:	ldr	x22, [x20, #152]
  4460a0:	mov	x26, xzr
  4460a4:	ldr	x8, [x28, #48]
  4460a8:	ldr	x23, [x8, x26, lsl #3]
  4460ac:	ldr	x8, [x22]
  4460b0:	add	x8, x8, x23, lsl #4
  4460b4:	ldrb	w8, [x8, #10]
  4460b8:	tbnz	w8, #4, 446100 <_obstack_memory_used@@Base+0xa908>
  4460bc:	ldr	x8, [x22]
  4460c0:	mov	x0, x20
  4460c4:	mov	x2, x21
  4460c8:	add	x1, x8, x23, lsl #4
  4460cc:	bl	445edc <_obstack_memory_used@@Base+0xa6e4>
  4460d0:	tbz	w0, #0, 446198 <_obstack_memory_used@@Base+0xa9a0>
  4460d4:	ldr	x8, [x19]
  4460d8:	ldr	x9, [sp, #24]
  4460dc:	ldr	x8, [x8, x9, lsl #3]
  4460e0:	cbz	x8, 446198 <_obstack_memory_used@@Base+0xa9a0>
  4460e4:	ldr	x9, [x22, #24]
  4460e8:	add	x0, x8, #0x8
  4460ec:	ldr	x1, [x9, x23, lsl #3]
  4460f0:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  4460f4:	cbz	x0, 446198 <_obstack_memory_used@@Base+0xa9a0>
  4460f8:	mov	w24, #0x1                   	// #1
  4460fc:	b	44615c <_obstack_memory_used@@Base+0xa964>
  446100:	ldr	x25, [x20, #152]
  446104:	ldr	x27, [x19, #24]
  446108:	mov	x1, x23
  44610c:	mov	x2, x20
  446110:	mov	x0, x25
  446114:	mov	x3, x21
  446118:	bl	445be4 <_obstack_memory_used@@Base+0xa3ec>
  44611c:	mov	w24, w0
  446120:	cmp	w0, #0x1
  446124:	b.lt	446158 <_obstack_memory_used@@Base+0xa960>  // b.tstop
  446128:	add	x8, x21, w24, uxtw
  44612c:	cmp	x8, x27
  446130:	b.gt	44615c <_obstack_memory_used@@Base+0xa964>
  446134:	ldr	x9, [x19]
  446138:	ldr	x8, [x9, x8, lsl #3]
  44613c:	cbz	x8, 4460bc <_obstack_memory_used@@Base+0xa8c4>
  446140:	ldr	x9, [x25, #24]
  446144:	add	x0, x8, #0x8
  446148:	ldr	x1, [x9, x23, lsl #3]
  44614c:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  446150:	cbnz	x0, 44615c <_obstack_memory_used@@Base+0xa964>
  446154:	b	4460bc <_obstack_memory_used@@Base+0xa8c4>
  446158:	cbz	w24, 4460bc <_obstack_memory_used@@Base+0xa8c4>
  44615c:	ldr	x8, [x19, #40]
  446160:	cbz	x8, 446188 <_obstack_memory_used@@Base+0xa990>
  446164:	ldr	x8, [x22, #24]
  446168:	ldr	x1, [sp, #16]
  44616c:	add	x3, x21, w24, sxtw
  446170:	mov	x0, x20
  446174:	ldr	x2, [x8, x23, lsl #3]
  446178:	mov	x4, x23
  44617c:	mov	x5, x21
  446180:	bl	446c8c <_obstack_memory_used@@Base+0xb494>
  446184:	tbnz	w0, #0, 446198 <_obstack_memory_used@@Base+0xa9a0>
  446188:	add	x0, sp, #0x20
  44618c:	mov	x1, x23
  446190:	bl	442e2c <_obstack_memory_used@@Base+0x7634>
  446194:	tbz	w0, #0, 4461cc <_obstack_memory_used@@Base+0xa9d4>
  446198:	ldr	x8, [x28, #40]
  44619c:	add	x26, x26, #0x1
  4461a0:	cmp	x26, x8
  4461a4:	b.lt	4460a4 <_obstack_memory_used@@Base+0xa8ac>  // b.tstop
  4461a8:	add	x3, sp, #0x20
  4461ac:	mov	x0, x20
  4461b0:	mov	x1, x19
  4461b4:	mov	x2, x21
  4461b8:	bl	4462d4 <_obstack_memory_used@@Base+0xaadc>
  4461bc:	ldr	w10, [sp, #12]
  4461c0:	cbz	w0, 446050 <_obstack_memory_used@@Base+0xa858>
  4461c4:	mov	w23, w0
  4461c8:	b	4461d8 <_obstack_memory_used@@Base+0xa9e0>
  4461cc:	mov	w23, #0xc                   	// #12
  4461d0:	b	4461d8 <_obstack_memory_used@@Base+0xa9e0>
  4461d4:	mov	w23, wzr
  4461d8:	ldr	x0, [sp, #48]
  4461dc:	bl	4049b0 <free@plt>
  4461e0:	mov	w0, w23
  4461e4:	ldp	x20, x19, [sp, #144]
  4461e8:	ldp	x22, x21, [sp, #128]
  4461ec:	ldp	x24, x23, [sp, #112]
  4461f0:	ldp	x26, x25, [sp, #96]
  4461f4:	ldp	x28, x27, [sp, #80]
  4461f8:	ldp	x29, x30, [sp, #64]
  4461fc:	add	sp, sp, #0xa0
  446200:	ret
  446204:	lsl	x2, x11, #3
  446208:	mov	w1, wzr
  44620c:	bl	4045e0 <memset@plt>
  446210:	ldr	x0, [sp, #48]
  446214:	bl	4049b0 <free@plt>
  446218:	mov	w23, wzr
  44621c:	b	4461e0 <_obstack_memory_used@@Base+0xa9e8>
  446220:	stp	xzr, xzr, [sp, #32]
  446224:	mov	w23, #0xc                   	// #12
  446228:	b	4461e0 <_obstack_memory_used@@Base+0xa9e8>
  44622c:	sub	sp, sp, #0x50
  446230:	cmp	x3, #0x1
  446234:	stp	x29, x30, [sp, #32]
  446238:	stp	x22, x21, [sp, #48]
  44623c:	stp	x20, x19, [sp, #64]
  446240:	add	x29, sp, #0x20
  446244:	b.lt	4462bc <_obstack_memory_used@@Base+0xaac4>  // b.tstop
  446248:	mov	x19, x3
  44624c:	mov	x20, x2
  446250:	mov	x21, x1
  446254:	mov	x22, x0
  446258:	ldr	x9, [x21]
  44625c:	ldr	x8, [x20]
  446260:	cbz	x9, 4462a8 <_obstack_memory_used@@Base+0xaab0>
  446264:	cbz	x8, 4462ac <_obstack_memory_used@@Base+0xaab4>
  446268:	add	x1, x9, #0x8
  44626c:	add	x2, x8, #0x8
  446270:	mov	x0, sp
  446274:	bl	444c20 <_obstack_memory_used@@Base+0x9428>
  446278:	stur	w0, [x29, #-4]
  44627c:	cbnz	w0, 4462c0 <_obstack_memory_used@@Base+0xaac8>
  446280:	sub	x0, x29, #0x4
  446284:	mov	x2, sp
  446288:	mov	x1, x22
  44628c:	bl	4459f4 <_obstack_memory_used@@Base+0xa1fc>
  446290:	str	x0, [x21]
  446294:	ldr	x0, [sp, #16]
  446298:	bl	4049b0 <free@plt>
  44629c:	ldur	w0, [x29, #-4]
  4462a0:	cbz	w0, 4462ac <_obstack_memory_used@@Base+0xaab4>
  4462a4:	b	4462c0 <_obstack_memory_used@@Base+0xaac8>
  4462a8:	str	x8, [x21]
  4462ac:	subs	x19, x19, #0x1
  4462b0:	add	x20, x20, #0x8
  4462b4:	add	x21, x21, #0x8
  4462b8:	b.ne	446258 <_obstack_memory_used@@Base+0xaa60>  // b.any
  4462bc:	mov	w0, wzr
  4462c0:	ldp	x20, x19, [sp, #64]
  4462c4:	ldp	x22, x21, [sp, #48]
  4462c8:	ldp	x29, x30, [sp, #32]
  4462cc:	add	sp, sp, #0x50
  4462d0:	ret
  4462d4:	sub	sp, sp, #0xd0
  4462d8:	stp	x29, x30, [sp, #112]
  4462dc:	stp	x28, x27, [sp, #128]
  4462e0:	stp	x26, x25, [sp, #144]
  4462e4:	stp	x24, x23, [sp, #160]
  4462e8:	stp	x22, x21, [sp, #176]
  4462ec:	stp	x20, x19, [sp, #192]
  4462f0:	ldr	x24, [x0, #152]
  4462f4:	str	wzr, [sp, #44]
  4462f8:	ldr	x8, [x0, #184]
  4462fc:	mov	x19, x2
  446300:	mov	x20, x1
  446304:	add	x29, sp, #0x70
  446308:	ldr	x28, [x8, x2, lsl #3]
  44630c:	ldr	x8, [x3, #8]
  446310:	add	x9, x28, #0x8
  446314:	cmp	x28, #0x0
  446318:	csel	x9, xzr, x9, eq  // eq = none
  44631c:	stp	x9, x0, [sp, #24]
  446320:	cbz	x8, 4465dc <_obstack_memory_used@@Base+0xade4>
  446324:	mov	x23, x3
  446328:	cbz	x28, 4465f0 <_obstack_memory_used@@Base+0xadf8>
  44632c:	add	x0, sp, #0x30
  446330:	mov	x1, x24
  446334:	mov	x2, x23
  446338:	str	wzr, [sp, #48]
  44633c:	bl	4459f4 <_obstack_memory_used@@Base+0xa1fc>
  446340:	ldr	w26, [sp, #48]
  446344:	cbnz	w26, 4468a4 <_obstack_memory_used@@Base+0xb0ac>
  446348:	mov	x25, x0
  44634c:	ldr	x8, [x25, #56]!
  446350:	mov	x27, x0
  446354:	cbnz	x8, 4463c4 <_obstack_memory_used@@Base+0xabcc>
  446358:	ldr	x8, [x23, #8]
  44635c:	lsl	x0, x8, #3
  446360:	stp	x8, xzr, [x27, #56]
  446364:	bl	4044d0 <malloc@plt>
  446368:	cmp	x0, #0x0
  44636c:	mov	w26, #0xc                   	// #12
  446370:	csel	w8, w26, wzr, eq  // eq = none
  446374:	str	x0, [x27, #72]
  446378:	str	w8, [sp, #48]
  44637c:	cbz	x0, 4468a4 <_obstack_memory_used@@Base+0xb0ac>
  446380:	ldr	x8, [x23, #8]
  446384:	cmp	x8, #0x1
  446388:	b.lt	4463c4 <_obstack_memory_used@@Base+0xabcc>  // b.tstop
  44638c:	mov	x21, xzr
  446390:	mov	w22, #0x18                  	// #24
  446394:	ldr	x8, [x23, #16]
  446398:	ldr	x9, [x24, #56]
  44639c:	mov	x0, x25
  4463a0:	ldr	x8, [x8, x21, lsl #3]
  4463a4:	madd	x1, x8, x22, x9
  4463a8:	bl	442ca8 <_obstack_memory_used@@Base+0x74b0>
  4463ac:	cbnz	w0, 4468b4 <_obstack_memory_used@@Base+0xb0bc>
  4463b0:	ldr	x8, [x23, #8]
  4463b4:	add	x21, x21, #0x1
  4463b8:	cmp	x21, x8
  4463bc:	b.lt	446394 <_obstack_memory_used@@Base+0xab9c>  // b.tstop
  4463c0:	str	wzr, [sp, #48]
  4463c4:	ldr	x1, [sp, #24]
  4463c8:	mov	x0, x23
  4463cc:	mov	x2, x25
  4463d0:	bl	4468d0 <_obstack_memory_used@@Base+0xb0d8>
  4463d4:	str	w0, [sp, #44]
  4463d8:	cbnz	w0, 4468c8 <_obstack_memory_used@@Base+0xb0d0>
  4463dc:	ldr	x8, [x20, #40]
  4463e0:	cbz	x8, 4465f0 <_obstack_memory_used@@Base+0xadf8>
  4463e4:	cmp	x8, #0x1
  4463e8:	str	x28, [sp, #8]
  4463ec:	b.lt	4465e8 <_obstack_memory_used@@Base+0xadf0>  // b.tstop
  4463f0:	ldr	x8, [sp, #32]
  4463f4:	mov	x27, xzr
  4463f8:	mov	w13, #0x18                  	// #24
  4463fc:	ldr	x28, [x8, #216]
  446400:	ldr	x8, [x20, #48]
  446404:	mov	w9, #0x28                  	// #40
  446408:	ldr	x8, [x8, x27, lsl #3]
  44640c:	madd	x9, x8, x9, x28
  446410:	ldr	x9, [x9, #16]
  446414:	cmp	x9, x19
  446418:	b.ge	446430 <_obstack_memory_used@@Base+0xac38>  // b.tcont
  44641c:	mov	w9, #0x28                  	// #40
  446420:	madd	x9, x8, x9, x28
  446424:	ldr	x9, [x9, #8]
  446428:	cmp	x9, x19
  44642c:	b.ge	446444 <_obstack_memory_used@@Base+0xac4c>  // b.tcont
  446430:	ldr	x8, [x20, #40]
  446434:	add	x27, x27, #0x1
  446438:	cmp	x27, x8
  44643c:	b.lt	446400 <_obstack_memory_used@@Base+0xac08>  // b.tstop
  446440:	b	4465e8 <_obstack_memory_used@@Base+0xadf0>
  446444:	mov	w9, #0x28                  	// #40
  446448:	madd	x8, x8, x9, x28
  44644c:	ldr	x10, [x8]
  446450:	ldr	x9, [x24]
  446454:	ldr	x11, [x8, #24]
  446458:	lsl	x8, x10, #4
  44645c:	ldr	x21, [x9, x8]
  446460:	ldr	x8, [x23, #8]
  446464:	cmp	x11, x19
  446468:	b.ne	446570 <_obstack_memory_used@@Base+0xad78>  // b.any
  44646c:	cmp	x8, #0x1
  446470:	b.lt	446430 <_obstack_memory_used@@Base+0xac38>  // b.tstop
  446474:	ldr	x10, [x23, #16]
  446478:	mov	x25, #0xffffffffffffffff    	// #-1
  44647c:	mov	x1, #0xffffffffffffffff    	// #-1
  446480:	ldr	x11, [x10]
  446484:	add	x12, x9, x11, lsl #4
  446488:	ldrb	w12, [x12, #8]
  44648c:	cmp	w12, #0x9
  446490:	b.eq	4464b0 <_obstack_memory_used@@Base+0xacb8>  // b.none
  446494:	cmp	w12, #0x8
  446498:	b.ne	4464c0 <_obstack_memory_used@@Base+0xacc8>  // b.any
  44649c:	lsl	x12, x11, #4
  4464a0:	ldr	x12, [x9, x12]
  4464a4:	cmp	x21, x12
  4464a8:	csel	x1, x11, x1, eq  // eq = none
  4464ac:	b	4464c0 <_obstack_memory_used@@Base+0xacc8>
  4464b0:	lsl	x12, x11, #4
  4464b4:	ldr	x12, [x9, x12]
  4464b8:	cmp	x21, x12
  4464bc:	csel	x25, x11, x25, eq  // eq = none
  4464c0:	subs	x8, x8, #0x1
  4464c4:	add	x10, x10, #0x8
  4464c8:	b.ne	446480 <_obstack_memory_used@@Base+0xac88>  // b.any
  4464cc:	tbnz	x1, #63, 4464e8 <_obstack_memory_used@@Base+0xacf0>
  4464d0:	ldr	x3, [sp, #24]
  4464d4:	mov	x0, x24
  4464d8:	mov	x2, x23
  4464dc:	bl	446a98 <_obstack_memory_used@@Base+0xb2a0>
  4464e0:	mov	w13, #0x18                  	// #24
  4464e4:	cbnz	w0, 4468a0 <_obstack_memory_used@@Base+0xb0a8>
  4464e8:	tbnz	x25, #63, 446430 <_obstack_memory_used@@Base+0xac38>
  4464ec:	ldr	x8, [x23, #8]
  4464f0:	cmp	x8, #0x1
  4464f4:	str	x8, [sp, #16]
  4464f8:	b.lt	446430 <_obstack_memory_used@@Base+0xac38>  // b.tstop
  4464fc:	mov	x21, xzr
  446500:	ldr	x8, [x23, #16]
  446504:	mov	x1, x25
  446508:	mov	w22, #0x18                  	// #24
  44650c:	ldr	x26, [x8, x21, lsl #3]
  446510:	ldr	x8, [x24, #56]
  446514:	madd	x0, x26, x13, x8
  446518:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  44651c:	cbnz	x0, 446558 <_obstack_memory_used@@Base+0xad60>
  446520:	ldr	x8, [x24, #48]
  446524:	mov	x1, x25
  446528:	madd	x0, x26, x22, x8
  44652c:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  446530:	cbnz	x0, 446558 <_obstack_memory_used@@Base+0xad60>
  446534:	ldr	x3, [sp, #24]
  446538:	mov	x0, x24
  44653c:	mov	x1, x26
  446540:	mov	x2, x23
  446544:	bl	446a98 <_obstack_memory_used@@Base+0xb2a0>
  446548:	cbnz	w0, 4468a0 <_obstack_memory_used@@Base+0xb0a8>
  44654c:	ldr	x8, [x23, #8]
  446550:	sub	x21, x21, #0x1
  446554:	str	x8, [sp, #16]
  446558:	ldr	x8, [sp, #16]
  44655c:	add	x21, x21, #0x1
  446560:	mov	w13, #0x18                  	// #24
  446564:	cmp	x21, x8
  446568:	b.lt	446500 <_obstack_memory_used@@Base+0xad08>  // b.tstop
  44656c:	b	446430 <_obstack_memory_used@@Base+0xac38>
  446570:	cmp	x8, #0x1
  446574:	b.lt	446430 <_obstack_memory_used@@Base+0xac38>  // b.tstop
  446578:	mov	x22, xzr
  44657c:	ldr	x10, [x23, #16]
  446580:	ldr	x1, [x10, x22, lsl #3]
  446584:	add	x10, x9, x1, lsl #4
  446588:	ldr	w10, [x10, #8]
  44658c:	and	w10, w10, #0xfe
  446590:	orr	w10, w10, #0x1
  446594:	cmp	w10, #0x9
  446598:	b.ne	4465c8 <_obstack_memory_used@@Base+0xadd0>  // b.any
  44659c:	lsl	x10, x1, #4
  4465a0:	ldr	x9, [x9, x10]
  4465a4:	cmp	x21, x9
  4465a8:	b.ne	4465c8 <_obstack_memory_used@@Base+0xadd0>  // b.any
  4465ac:	ldr	x3, [sp, #24]
  4465b0:	mov	x0, x24
  4465b4:	mov	x2, x23
  4465b8:	bl	446a98 <_obstack_memory_used@@Base+0xb2a0>
  4465bc:	cbnz	w0, 4468a0 <_obstack_memory_used@@Base+0xb0a8>
  4465c0:	ldr	x8, [x23, #8]
  4465c4:	mov	w13, #0x18                  	// #24
  4465c8:	add	x22, x22, #0x1
  4465cc:	cmp	x22, x8
  4465d0:	b.ge	446430 <_obstack_memory_used@@Base+0xac38>  // b.tcont
  4465d4:	ldr	x9, [x24]
  4465d8:	b	44657c <_obstack_memory_used@@Base+0xad84>
  4465dc:	ldr	x8, [x20]
  4465e0:	str	xzr, [x8, x19, lsl #3]
  4465e4:	b	446610 <_obstack_memory_used@@Base+0xae18>
  4465e8:	ldr	x28, [sp, #8]
  4465ec:	str	wzr, [sp, #44]
  4465f0:	add	x0, sp, #0x2c
  4465f4:	mov	x1, x24
  4465f8:	mov	x2, x23
  4465fc:	bl	4459f4 <_obstack_memory_used@@Base+0xa1fc>
  446600:	ldr	x8, [x20]
  446604:	str	x0, [x8, x19, lsl #3]
  446608:	ldr	w26, [sp, #44]
  44660c:	cbnz	w26, 44687c <_obstack_memory_used@@Base+0xb084>
  446610:	cbz	x28, 446878 <_obstack_memory_used@@Base+0xb080>
  446614:	ldr	x8, [sp, #32]
  446618:	ldr	x8, [x8, #184]
  44661c:	ldr	x8, [x8, x19, lsl #3]
  446620:	ldrb	w8, [x8, #104]
  446624:	tbz	w8, #6, 446878 <_obstack_memory_used@@Base+0xb080>
  446628:	ldr	x0, [sp, #32]
  44662c:	mov	x1, x19
  446630:	ldr	x23, [x0, #152]
  446634:	bl	444dd4 <_obstack_memory_used@@Base+0x95dc>
  446638:	cmn	x0, #0x1
  44663c:	str	x0, [sp, #8]
  446640:	b.eq	446874 <_obstack_memory_used@@Base+0xb07c>  // b.none
  446644:	ldr	x8, [sp, #24]
  446648:	str	xzr, [sp, #48]
  44664c:	ldr	x8, [x8, #8]
  446650:	cmp	x8, #0x0
  446654:	b.le	446874 <_obstack_memory_used@@Base+0xb07c>
  446658:	add	x9, x20, #0x20
  44665c:	str	x9, [sp, #16]
  446660:	add	x9, sp, #0x30
  446664:	mov	x21, xzr
  446668:	add	x10, x19, #0x1
  44666c:	add	x27, x9, #0x20
  446670:	str	x10, [sp]
  446674:	ldr	x9, [sp, #24]
  446678:	ldr	x10, [x20, #16]
  44667c:	ldr	x9, [x9, #16]
  446680:	ldr	x28, [x9, x21, lsl #3]
  446684:	ldr	x9, [x23]
  446688:	cmp	x28, x10
  44668c:	add	x9, x9, x28, lsl #4
  446690:	ldrb	w9, [x9, #8]
  446694:	b.ne	4466b0 <_obstack_memory_used@@Base+0xaeb8>  // b.any
  446698:	cmp	w9, #0x4
  44669c:	b.ne	446848 <_obstack_memory_used@@Base+0xb050>  // b.any
  4466a0:	ldr	x9, [x20, #24]
  4466a4:	cmp	x9, x19
  4466a8:	b.ne	4466b8 <_obstack_memory_used@@Base+0xaec0>  // b.any
  4466ac:	b	446848 <_obstack_memory_used@@Base+0xb050>
  4466b0:	cmp	w9, #0x4
  4466b4:	b.ne	446848 <_obstack_memory_used@@Base+0xb050>  // b.any
  4466b8:	ldr	x8, [sp, #32]
  4466bc:	ldr	x24, [sp, #8]
  4466c0:	mov	w9, #0x28                  	// #40
  4466c4:	ldr	x8, [x8, #216]
  4466c8:	madd	x25, x24, x9, x8
  4466cc:	ldr	x8, [x25]
  4466d0:	cmp	x8, x28
  4466d4:	b.ne	446830 <_obstack_memory_used@@Base+0xb038>  // b.any
  4466d8:	ldp	x9, x8, [x25, #16]
  4466dc:	subs	x8, x8, x9
  4466e0:	add	x26, x8, x19
  4466e4:	b.eq	4466f4 <_obstack_memory_used@@Base+0xaefc>  // b.none
  4466e8:	ldr	x8, [x23, #24]
  4466ec:	add	x8, x8, x28, lsl #3
  4466f0:	b	446704 <_obstack_memory_used@@Base+0xaf0c>
  4466f4:	ldr	x8, [x23, #40]
  4466f8:	mov	w9, #0x18                  	// #24
  4466fc:	madd	x8, x28, x9, x8
  446700:	ldr	x8, [x8, #16]
  446704:	ldr	x9, [x20, #24]
  446708:	cmp	x26, x9
  44670c:	b.gt	446830 <_obstack_memory_used@@Base+0xb038>
  446710:	ldr	x9, [x20]
  446714:	ldr	x9, [x9, x26, lsl #3]
  446718:	cbz	x9, 446830 <_obstack_memory_used@@Base+0xb038>
  44671c:	ldr	x22, [x8]
  446720:	add	x0, x9, #0x8
  446724:	mov	x1, x22
  446728:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  44672c:	cbz	x0, 446830 <_obstack_memory_used@@Base+0xb038>
  446730:	ldr	x0, [sp, #32]
  446734:	ldr	x1, [sp, #16]
  446738:	mov	x2, x28
  44673c:	mov	x3, x19
  446740:	mov	x4, x22
  446744:	mov	x5, x26
  446748:	bl	446c8c <_obstack_memory_used@@Base+0xb494>
  44674c:	tbnz	w0, #0, 446830 <_obstack_memory_used@@Base+0xb038>
  446750:	ldr	x8, [sp, #48]
  446754:	cbnz	x8, 446780 <_obstack_memory_used@@Base+0xaf88>
  446758:	ldr	x8, [x20, #48]
  44675c:	ldp	q1, q0, [x20, #16]
  446760:	ldr	q2, [x20]
  446764:	ldr	x1, [sp, #16]
  446768:	mov	x0, x27
  44676c:	str	x8, [sp, #96]
  446770:	stp	q1, q0, [sp, #64]
  446774:	str	q2, [sp, #48]
  446778:	bl	443034 <_obstack_memory_used@@Base+0x783c>
  44677c:	cbnz	w0, 4468ac <_obstack_memory_used@@Base+0xb0b4>
  446780:	mov	x0, x27
  446784:	mov	x1, x24
  446788:	stp	x28, x19, [sp, #64]
  44678c:	bl	442e2c <_obstack_memory_used@@Base+0x7634>
  446790:	tbz	w0, #0, 4468c0 <_obstack_memory_used@@Base+0xb0c8>
  446794:	ldr	x8, [sp, #48]
  446798:	ldr	x0, [sp, #32]
  44679c:	add	x1, sp, #0x30
  4467a0:	ldr	x22, [x8, x19, lsl #3]
  4467a4:	bl	445fe0 <_obstack_memory_used@@Base+0xa7e8>
  4467a8:	cbnz	w0, 4468ac <_obstack_memory_used@@Base+0xb0b4>
  4467ac:	ldr	x1, [x20, #8]
  4467b0:	cbz	x1, 4467c8 <_obstack_memory_used@@Base+0xafd0>
  4467b4:	ldr	x2, [sp, #48]
  4467b8:	ldr	x3, [sp]
  4467bc:	mov	x0, x23
  4467c0:	bl	44622c <_obstack_memory_used@@Base+0xaa34>
  4467c4:	cbnz	w0, 4468ac <_obstack_memory_used@@Base+0xb0b4>
  4467c8:	ldr	x8, [sp, #48]
  4467cc:	mov	x0, x27
  4467d0:	mov	x1, x24
  4467d4:	str	x22, [x8, x19, lsl #3]
  4467d8:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  4467dc:	cmp	x0, #0x1
  4467e0:	b.lt	446820 <_obstack_memory_used@@Base+0xb028>  // b.tstop
  4467e4:	ldr	x8, [sp, #88]
  4467e8:	cmp	x8, x0
  4467ec:	b.lt	446820 <_obstack_memory_used@@Base+0xb028>  // b.tstop
  4467f0:	sub	x9, x8, #0x1
  4467f4:	cmp	x8, x0
  4467f8:	str	x9, [sp, #88]
  4467fc:	b.le	446820 <_obstack_memory_used@@Base+0xb028>
  446800:	ldr	x8, [sp, #96]
  446804:	add	x9, x8, x0, lsl #3
  446808:	ldr	x10, [x9]
  44680c:	stur	x10, [x9, #-8]
  446810:	ldr	x9, [sp, #88]
  446814:	cmp	x0, x9
  446818:	add	x0, x0, #0x1
  44681c:	b.lt	446804 <_obstack_memory_used@@Base+0xb00c>  // b.tstop
  446820:	ldr	x8, [sp, #32]
  446824:	mov	w9, #0x28                  	// #40
  446828:	ldr	x8, [x8, #216]
  44682c:	madd	x25, x24, x9, x8
  446830:	ldrb	w8, [x25, #32]
  446834:	add	x25, x25, #0x28
  446838:	add	x24, x24, #0x1
  44683c:	cbnz	w8, 4466cc <_obstack_memory_used@@Base+0xaed4>
  446840:	ldr	x8, [sp, #24]
  446844:	ldr	x8, [x8, #8]
  446848:	add	x21, x21, #0x1
  44684c:	cmp	x21, x8
  446850:	b.lt	446674 <_obstack_memory_used@@Base+0xae7c>  // b.tstop
  446854:	mov	w26, wzr
  446858:	ldr	x8, [sp, #48]
  44685c:	cbz	x8, 446868 <_obstack_memory_used@@Base+0xb070>
  446860:	ldr	x0, [sp, #96]
  446864:	bl	4049b0 <free@plt>
  446868:	str	w26, [sp, #44]
  44686c:	cbz	w26, 446878 <_obstack_memory_used@@Base+0xb080>
  446870:	b	44687c <_obstack_memory_used@@Base+0xb084>
  446874:	str	wzr, [sp, #44]
  446878:	mov	w26, wzr
  44687c:	mov	w0, w26
  446880:	ldp	x20, x19, [sp, #192]
  446884:	ldp	x22, x21, [sp, #176]
  446888:	ldp	x24, x23, [sp, #160]
  44688c:	ldp	x26, x25, [sp, #144]
  446890:	ldp	x28, x27, [sp, #128]
  446894:	ldp	x29, x30, [sp, #112]
  446898:	add	sp, sp, #0xd0
  44689c:	ret
  4468a0:	mov	w26, w0
  4468a4:	str	w26, [sp, #44]
  4468a8:	b	44687c <_obstack_memory_used@@Base+0xb084>
  4468ac:	mov	w26, w0
  4468b0:	b	446858 <_obstack_memory_used@@Base+0xb060>
  4468b4:	mov	w26, #0xc                   	// #12
  4468b8:	str	w0, [sp, #48]
  4468bc:	b	4468a4 <_obstack_memory_used@@Base+0xb0ac>
  4468c0:	mov	w26, #0xc                   	// #12
  4468c4:	b	446858 <_obstack_memory_used@@Base+0xb060>
  4468c8:	mov	w26, w0
  4468cc:	b	44687c <_obstack_memory_used@@Base+0xb084>
  4468d0:	stp	x29, x30, [sp, #-48]!
  4468d4:	stp	x22, x21, [sp, #16]
  4468d8:	stp	x20, x19, [sp, #32]
  4468dc:	ldr	x9, [x1, #8]
  4468e0:	mov	x29, sp
  4468e4:	cbz	x9, 446a7c <_obstack_memory_used@@Base+0xb284>
  4468e8:	ldr	x10, [x2, #8]
  4468ec:	mov	x20, x2
  4468f0:	cbz	x10, 446a7c <_obstack_memory_used@@Base+0xb284>
  4468f4:	ldp	x8, x13, [x0]
  4468f8:	add	x11, x10, x9
  4468fc:	mov	x21, x1
  446900:	mov	x19, x0
  446904:	add	x12, x13, x11
  446908:	cmp	x12, x8
  44690c:	b.le	446938 <_obstack_memory_used@@Base+0xb140>
  446910:	ldr	x0, [x19, #16]
  446914:	add	x22, x8, x11
  446918:	lsl	x1, x22, #3
  44691c:	bl	404710 <realloc@plt>
  446920:	cbz	x0, 446a90 <_obstack_memory_used@@Base+0xb298>
  446924:	str	x0, [x19, #16]
  446928:	str	x22, [x19]
  44692c:	ldr	x13, [x19, #8]
  446930:	ldr	x9, [x21, #8]
  446934:	ldr	x10, [x20, #8]
  446938:	ldr	x11, [x21, #16]
  44693c:	ldr	x12, [x20, #16]
  446940:	add	x8, x9, x13
  446944:	add	x8, x8, x10
  446948:	sub	x13, x13, #0x1
  44694c:	sub	x9, x9, #0x1
  446950:	mov	x14, x10
  446954:	sub	x10, x14, #0x1
  446958:	ldr	x16, [x12, x10, lsl #3]
  44695c:	ldr	x15, [x11, x9, lsl #3]
  446960:	cmp	x15, x16
  446964:	b.eq	44698c <_obstack_memory_used@@Base+0xb194>  // b.none
  446968:	b.lt	44697c <_obstack_memory_used@@Base+0xb184>  // b.tstop
  44696c:	cmp	x9, #0x0
  446970:	sub	x9, x9, #0x1
  446974:	b.gt	44695c <_obstack_memory_used@@Base+0xb164>
  446978:	b	4469e4 <_obstack_memory_used@@Base+0xb1ec>
  44697c:	cmp	x14, #0x2
  446980:	mov	x14, x10
  446984:	b.ge	446954 <_obstack_memory_used@@Base+0xb15c>  // b.tcont
  446988:	b	4469e4 <_obstack_memory_used@@Base+0xb1ec>
  44698c:	tbnz	x13, #63, 4469b4 <_obstack_memory_used@@Base+0xb1bc>
  446990:	ldr	x17, [x19, #16]
  446994:	ldr	x16, [x17, x13, lsl #3]
  446998:	cmp	x16, x15
  44699c:	b.le	4469bc <_obstack_memory_used@@Base+0xb1c4>
  4469a0:	sub	x16, x13, #0x1
  4469a4:	cmp	x13, #0x0
  4469a8:	mov	x13, x16
  4469ac:	b.gt	446994 <_obstack_memory_used@@Base+0xb19c>
  4469b0:	b	4469c4 <_obstack_memory_used@@Base+0xb1cc>
  4469b4:	mov	x16, x13
  4469b8:	b	4469c4 <_obstack_memory_used@@Base+0xb1cc>
  4469bc:	mov	x16, x13
  4469c0:	b.eq	4469d4 <_obstack_memory_used@@Base+0xb1dc>  // b.none
  4469c4:	ldr	x13, [x19, #16]
  4469c8:	sub	x8, x8, #0x1
  4469cc:	str	x15, [x13, x8, lsl #3]
  4469d0:	mov	x13, x16
  4469d4:	cmp	x9, #0x1
  4469d8:	b.lt	4469e4 <_obstack_memory_used@@Base+0xb1ec>  // b.tstop
  4469dc:	cmp	x14, #0x2
  4469e0:	b.ge	44694c <_obstack_memory_used@@Base+0xb154>  // b.tcont
  4469e4:	ldp	x12, x0, [x19, #8]
  4469e8:	ldr	x13, [x21, #8]
  4469ec:	ldr	x14, [x20, #8]
  4469f0:	subs	x9, x12, #0x1
  4469f4:	add	x9, x9, x13
  4469f8:	add	x10, x9, x14
  4469fc:	sub	x15, x10, x8
  446a00:	add	x9, x15, #0x1
  446a04:	subs	x11, x12, #0x1
  446a08:	add	x16, x9, x12
  446a0c:	str	x16, [x19, #8]
  446a10:	b.lt	446a6c <_obstack_memory_used@@Base+0xb274>  // b.tstop
  446a14:	tbnz	x15, #63, 446a6c <_obstack_memory_used@@Base+0xb274>
  446a18:	add	x12, x12, x14
  446a1c:	add	x12, x12, x13
  446a20:	sub	x12, x12, x8
  446a24:	add	x12, x0, x12, lsl #3
  446a28:	ldr	x14, [x0, x10, lsl #3]
  446a2c:	ldr	x13, [x0, x11, lsl #3]
  446a30:	cmp	x14, x13
  446a34:	b.gt	446a50 <_obstack_memory_used@@Base+0xb258>
  446a38:	sub	x14, x11, #0x1
  446a3c:	cmp	x11, #0x0
  446a40:	str	x13, [x12, x11, lsl #3]
  446a44:	mov	x11, x14
  446a48:	b.gt	446a28 <_obstack_memory_used@@Base+0xb230>
  446a4c:	b	446a6c <_obstack_memory_used@@Base+0xb274>
  446a50:	mov	x13, xzr
  446a54:	sub	x10, x10, #0x1
  446a58:	sub	x9, x9, #0x1
  446a5c:	str	x14, [x12, x11, lsl #3]
  446a60:	sub	x12, x12, #0x8
  446a64:	cbnz	x9, 446a28 <_obstack_memory_used@@Base+0xb230>
  446a68:	b	446a70 <_obstack_memory_used@@Base+0xb278>
  446a6c:	mov	x13, x9
  446a70:	add	x1, x0, x8, lsl #3
  446a74:	lsl	x2, x13, #3
  446a78:	bl	4040f0 <memcpy@plt>
  446a7c:	mov	w0, wzr
  446a80:	ldp	x20, x19, [sp, #32]
  446a84:	ldp	x22, x21, [sp, #16]
  446a88:	ldp	x29, x30, [sp], #48
  446a8c:	ret
  446a90:	mov	w0, #0xc                   	// #12
  446a94:	b	446a80 <_obstack_memory_used@@Base+0xb288>
  446a98:	sub	sp, sp, #0x90
  446a9c:	stp	x29, x30, [sp, #48]
  446aa0:	stp	x28, x27, [sp, #64]
  446aa4:	stp	x26, x25, [sp, #80]
  446aa8:	stp	x24, x23, [sp, #96]
  446aac:	stp	x22, x21, [sp, #112]
  446ab0:	stp	x20, x19, [sp, #128]
  446ab4:	ldr	x9, [x0, #56]
  446ab8:	mov	w8, #0x18                  	// #24
  446abc:	stp	xzr, xzr, [sp, #24]
  446ac0:	str	xzr, [sp, #40]
  446ac4:	madd	x26, x1, x8, x9
  446ac8:	stp	x3, x26, [sp, #8]
  446acc:	ldr	x21, [x26, #8]!
  446ad0:	add	x29, sp, #0x30
  446ad4:	cmp	x21, #0x1
  446ad8:	b.lt	446c54 <_obstack_memory_used@@Base+0xb45c>  // b.tstop
  446adc:	mov	w8, #0x18                  	// #24
  446ae0:	madd	x8, x1, x8, x9
  446ae4:	mov	x20, x1
  446ae8:	mov	x22, x0
  446aec:	mov	x19, x2
  446af0:	mov	x28, xzr
  446af4:	add	x27, x8, #0x10
  446af8:	str	x9, [sp]
  446afc:	ldr	x8, [x27]
  446b00:	ldr	x23, [x8, x28, lsl #3]
  446b04:	cmp	x23, x20
  446b08:	b.eq	446bb0 <_obstack_memory_used@@Base+0xb3b8>  // b.none
  446b0c:	ldr	x8, [x22]
  446b10:	add	x8, x8, x23, lsl #4
  446b14:	ldrb	w8, [x8, #8]
  446b18:	tbz	w8, #3, 446bb0 <_obstack_memory_used@@Base+0xb3b8>
  446b1c:	ldr	x8, [x22, #40]
  446b20:	mov	w9, #0x18                  	// #24
  446b24:	madd	x9, x23, x9, x8
  446b28:	ldp	x9, x8, [x9, #8]
  446b2c:	ldr	x25, [x8]
  446b30:	cmp	x9, #0x2
  446b34:	b.lt	446b40 <_obstack_memory_used@@Base+0xb348>  // b.tstop
  446b38:	ldr	x24, [x8, #8]
  446b3c:	b	446b44 <_obstack_memory_used@@Base+0xb34c>
  446b40:	mov	x24, #0xffffffffffffffff    	// #-1
  446b44:	ldr	x0, [sp, #16]
  446b48:	mov	x1, x25
  446b4c:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  446b50:	cbz	x0, 446b80 <_obstack_memory_used@@Base+0xb388>
  446b54:	cmp	x24, #0x1
  446b58:	b.lt	446bb0 <_obstack_memory_used@@Base+0xb3b8>  // b.tstop
  446b5c:	ldr	x0, [sp, #16]
  446b60:	mov	x1, x24
  446b64:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  446b68:	cbnz	x0, 446bb0 <_obstack_memory_used@@Base+0xb3b8>
  446b6c:	mov	x0, x19
  446b70:	mov	x1, x24
  446b74:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  446b78:	cbnz	x0, 446b90 <_obstack_memory_used@@Base+0xb398>
  446b7c:	b	446bb0 <_obstack_memory_used@@Base+0xb3b8>
  446b80:	mov	x0, x19
  446b84:	mov	x1, x25
  446b88:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  446b8c:	cbz	x0, 446b54 <_obstack_memory_used@@Base+0xb35c>
  446b90:	ldr	x8, [x22, #56]
  446b94:	ldr	x1, [sp, #8]
  446b98:	mov	w9, #0x18                  	// #24
  446b9c:	add	x0, sp, #0x18
  446ba0:	madd	x2, x23, x9, x8
  446ba4:	bl	4468d0 <_obstack_memory_used@@Base+0xb0d8>
  446ba8:	cbnz	w0, 446c84 <_obstack_memory_used@@Base+0xb48c>
  446bac:	ldr	x21, [x26]
  446bb0:	add	x28, x28, #0x1
  446bb4:	cmp	x28, x21
  446bb8:	b.lt	446afc <_obstack_memory_used@@Base+0xb304>  // b.tstop
  446bbc:	cmp	x21, #0x1
  446bc0:	b.lt	446c54 <_obstack_memory_used@@Base+0xb45c>  // b.tstop
  446bc4:	ldr	x9, [sp]
  446bc8:	mov	w8, #0x18                  	// #24
  446bcc:	mov	x22, xzr
  446bd0:	madd	x8, x20, x8, x9
  446bd4:	ldr	x21, [x8, #16]
  446bd8:	ldr	x20, [x21, x22, lsl #3]
  446bdc:	add	x0, sp, #0x18
  446be0:	mov	x1, x20
  446be4:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  446be8:	cbz	x0, 446c00 <_obstack_memory_used@@Base+0xb408>
  446bec:	ldr	x8, [x26]
  446bf0:	add	x22, x22, #0x1
  446bf4:	cmp	x22, x8
  446bf8:	b.lt	446bd8 <_obstack_memory_used@@Base+0xb3e0>  // b.tstop
  446bfc:	b	446c54 <_obstack_memory_used@@Base+0xb45c>
  446c00:	mov	x0, x19
  446c04:	mov	x1, x20
  446c08:	bl	4430b0 <_obstack_memory_used@@Base+0x78b8>
  446c0c:	cmp	x0, #0x1
  446c10:	b.lt	446bec <_obstack_memory_used@@Base+0xb3f4>  // b.tstop
  446c14:	ldr	x8, [x19, #8]
  446c18:	cmp	x8, x0
  446c1c:	b.lt	446bec <_obstack_memory_used@@Base+0xb3f4>  // b.tstop
  446c20:	sub	x9, x8, #0x1
  446c24:	cmp	x8, x0
  446c28:	str	x9, [x19, #8]
  446c2c:	b.le	446bec <_obstack_memory_used@@Base+0xb3f4>
  446c30:	ldr	x8, [x19, #16]
  446c34:	add	x9, x8, x0, lsl #3
  446c38:	ldr	x10, [x9]
  446c3c:	stur	x10, [x9, #-8]
  446c40:	ldr	x9, [x19, #8]
  446c44:	cmp	x0, x9
  446c48:	add	x0, x0, #0x1
  446c4c:	b.lt	446c34 <_obstack_memory_used@@Base+0xb43c>  // b.tstop
  446c50:	b	446bec <_obstack_memory_used@@Base+0xb3f4>
  446c54:	mov	w24, wzr
  446c58:	ldr	x0, [sp, #40]
  446c5c:	bl	4049b0 <free@plt>
  446c60:	mov	w0, w24
  446c64:	ldp	x20, x19, [sp, #128]
  446c68:	ldp	x22, x21, [sp, #112]
  446c6c:	ldp	x24, x23, [sp, #96]
  446c70:	ldp	x26, x25, [sp, #80]
  446c74:	ldp	x28, x27, [sp, #64]
  446c78:	ldp	x29, x30, [sp, #48]
  446c7c:	add	sp, sp, #0x90
  446c80:	ret
  446c84:	mov	w24, w0
  446c88:	b	446c58 <_obstack_memory_used@@Base+0xb460>
  446c8c:	sub	sp, sp, #0x70
  446c90:	stp	x24, x23, [sp, #64]
  446c94:	mov	x23, x1
  446c98:	mov	x1, x3
  446c9c:	stp	x29, x30, [sp, #16]
  446ca0:	stp	x28, x27, [sp, #32]
  446ca4:	stp	x26, x25, [sp, #48]
  446ca8:	stp	x22, x21, [sp, #80]
  446cac:	stp	x20, x19, [sp, #96]
  446cb0:	add	x29, sp, #0x10
  446cb4:	mov	x19, x5
  446cb8:	stp	x2, x4, [sp]
  446cbc:	mov	x21, x3
  446cc0:	mov	x24, x0
  446cc4:	bl	444dd4 <_obstack_memory_used@@Base+0x95dc>
  446cc8:	mov	x25, x0
  446ccc:	mov	x0, x24
  446cd0:	mov	x1, x19
  446cd4:	bl	444dd4 <_obstack_memory_used@@Base+0x95dc>
  446cd8:	ldr	x8, [x23, #8]
  446cdc:	cmp	x8, #0x1
  446ce0:	b.lt	446d68 <_obstack_memory_used@@Base+0xb570>  // b.tstop
  446ce4:	ldr	x22, [x24, #152]
  446ce8:	mov	x26, x0
  446cec:	mov	x20, xzr
  446cf0:	ldr	x8, [x23, #16]
  446cf4:	mov	w9, #0x28                  	// #40
  446cf8:	ldr	x3, [sp]
  446cfc:	mov	x0, x24
  446d00:	ldr	x1, [x8, x20, lsl #3]
  446d04:	ldr	x8, [x24, #216]
  446d08:	mov	x4, x21
  446d0c:	mov	x5, x25
  446d10:	mul	x9, x1, x9
  446d14:	ldr	x8, [x8, x9]
  446d18:	ldr	x9, [x22]
  446d1c:	lsl	x8, x8, #4
  446d20:	ldr	x27, [x9, x8]
  446d24:	mov	x2, x27
  446d28:	bl	446d94 <_obstack_memory_used@@Base+0xb59c>
  446d2c:	ldr	x8, [x23, #16]
  446d30:	ldr	x3, [sp, #8]
  446d34:	mov	w28, w0
  446d38:	mov	x0, x24
  446d3c:	ldr	x1, [x8, x20, lsl #3]
  446d40:	mov	x2, x27
  446d44:	mov	x4, x19
  446d48:	mov	x5, x26
  446d4c:	bl	446d94 <_obstack_memory_used@@Base+0xb59c>
  446d50:	cmp	w0, w28
  446d54:	b.ne	446d70 <_obstack_memory_used@@Base+0xb578>  // b.any
  446d58:	ldr	x8, [x23, #8]
  446d5c:	add	x20, x20, #0x1
  446d60:	cmp	x20, x8
  446d64:	b.lt	446cf0 <_obstack_memory_used@@Base+0xb4f8>  // b.tstop
  446d68:	mov	w0, wzr
  446d6c:	b	446d74 <_obstack_memory_used@@Base+0xb57c>
  446d70:	mov	w0, #0x1                   	// #1
  446d74:	ldp	x20, x19, [sp, #96]
  446d78:	ldp	x22, x21, [sp, #80]
  446d7c:	ldp	x24, x23, [sp, #64]
  446d80:	ldp	x26, x25, [sp, #48]
  446d84:	ldp	x28, x27, [sp, #32]
  446d88:	ldp	x29, x30, [sp, #16]
  446d8c:	add	sp, sp, #0x70
  446d90:	ret
  446d94:	ldr	x9, [x0, #216]
  446d98:	mov	w8, #0x28                  	// #40
  446d9c:	madd	x8, x1, x8, x9
  446da0:	ldr	x8, [x8, #16]
  446da4:	cmp	x8, x4
  446da8:	b.le	446db4 <_obstack_memory_used@@Base+0xb5bc>
  446dac:	mov	w0, #0xffffffff            	// #-1
  446db0:	ret
  446db4:	mov	w10, #0x28                  	// #40
  446db8:	madd	x9, x1, x10, x9
  446dbc:	ldr	x9, [x9, #24]
  446dc0:	cmp	x9, x4
  446dc4:	b.ge	446dd0 <_obstack_memory_used@@Base+0xb5d8>  // b.tcont
  446dc8:	mov	w0, #0x1                   	// #1
  446dcc:	ret
  446dd0:	cmp	x8, x4
  446dd4:	cset	w1, eq  // eq = none
  446dd8:	cmp	x9, x4
  446ddc:	cset	w8, eq  // eq = none
  446de0:	bfi	w1, w8, #1, #1
  446de4:	cbz	w1, 446df0 <_obstack_memory_used@@Base+0xb5f8>
  446de8:	mov	x4, x5
  446dec:	b	446df8 <_obstack_memory_used@@Base+0xb600>
  446df0:	mov	w0, wzr
  446df4:	ret
  446df8:	sub	sp, sp, #0x80
  446dfc:	stp	x29, x30, [sp, #32]
  446e00:	stp	x28, x27, [sp, #48]
  446e04:	stp	x26, x25, [sp, #64]
  446e08:	stp	x24, x23, [sp, #80]
  446e0c:	stp	x22, x21, [sp, #96]
  446e10:	stp	x20, x19, [sp, #112]
  446e14:	ldr	x24, [x0, #152]
  446e18:	mov	w8, #0x18                  	// #24
  446e1c:	mov	w23, w1
  446e20:	add	x29, sp, #0x20
  446e24:	ldr	x9, [x24, #48]
  446e28:	madd	x13, x3, x8, x9
  446e2c:	ldr	x8, [x13, #8]!
  446e30:	cmp	x8, #0x1
  446e34:	b.lt	446fa0 <_obstack_memory_used@@Base+0xb7a8>  // b.tstop
  446e38:	mov	w12, #0x18                  	// #24
  446e3c:	cmp	x2, #0x3f
  446e40:	and	w10, w23, #0x2
  446e44:	mov	w11, #0x1                   	// #1
  446e48:	madd	x9, x3, x12, x9
  446e4c:	cset	w12, gt
  446e50:	lsl	x11, x11, x2
  446e54:	add	x25, x9, #0x10
  446e58:	orr	w9, w12, w10, lsr #1
  446e5c:	mov	x19, x4
  446e60:	mov	x20, x3
  446e64:	mov	x21, x2
  446e68:	mov	x22, x0
  446e6c:	mov	x26, xzr
  446e70:	stur	w9, [x29, #-12]
  446e74:	stur	x11, [x29, #-8]
  446e78:	mvn	w9, w11
  446e7c:	mov	w11, #0x28                  	// #40
  446e80:	str	w9, [sp, #16]
  446e84:	str	x13, [sp, #8]
  446e88:	ldr	x9, [x25]
  446e8c:	ldr	x27, [x9, x26, lsl #3]
  446e90:	ldr	x9, [x24]
  446e94:	add	x9, x9, x27, lsl #4
  446e98:	ldrb	w10, [x9, #8]
  446e9c:	cmp	w10, #0x9
  446ea0:	b.eq	446f70 <_obstack_memory_used@@Base+0xb778>  // b.none
  446ea4:	cmp	w10, #0x8
  446ea8:	b.eq	446f84 <_obstack_memory_used@@Base+0xb78c>  // b.none
  446eac:	cmp	w10, #0x4
  446eb0:	b.ne	446f94 <_obstack_memory_used@@Base+0xb79c>  // b.any
  446eb4:	cmn	x19, #0x1
  446eb8:	b.eq	446f94 <_obstack_memory_used@@Base+0xb79c>  // b.none
  446ebc:	ldr	x8, [x22, #216]
  446ec0:	madd	x8, x19, x11, x8
  446ec4:	add	x28, x8, #0x22
  446ec8:	ldur	x8, [x28, #-34]
  446ecc:	cmp	x8, x27
  446ed0:	b.ne	446f54 <_obstack_memory_used@@Base+0xb75c>  // b.any
  446ed4:	cmp	x21, #0x3f
  446ed8:	b.gt	446eec <_obstack_memory_used@@Base+0xb6f4>
  446edc:	ldrh	w8, [x28]
  446ee0:	ldur	x9, [x29, #-8]
  446ee4:	tst	x9, x8
  446ee8:	b.eq	446f54 <_obstack_memory_used@@Base+0xb75c>  // b.none
  446eec:	ldr	x8, [x24, #40]
  446ef0:	mov	w9, #0x18                  	// #24
  446ef4:	madd	x8, x27, x9, x8
  446ef8:	ldr	x8, [x8, #16]
  446efc:	ldr	x3, [x8]
  446f00:	cmp	x3, x20
  446f04:	b.eq	446fa8 <_obstack_memory_used@@Base+0xb7b0>  // b.none
  446f08:	mov	x0, x22
  446f0c:	mov	w1, w23
  446f10:	mov	x2, x21
  446f14:	mov	x4, x19
  446f18:	bl	446df8 <_obstack_memory_used@@Base+0xb600>
  446f1c:	cbz	w0, 446f34 <_obstack_memory_used@@Base+0xb73c>
  446f20:	cmn	w0, #0x1
  446f24:	b.eq	446fbc <_obstack_memory_used@@Base+0xb7c4>  // b.none
  446f28:	cmp	x21, #0x3f
  446f2c:	b.le	446f44 <_obstack_memory_used@@Base+0xb74c>
  446f30:	b	446f54 <_obstack_memory_used@@Base+0xb75c>
  446f34:	ldur	w8, [x29, #-12]
  446f38:	tbz	w8, #0, 446f44 <_obstack_memory_used@@Base+0xb74c>
  446f3c:	tbz	w23, #1, 446f54 <_obstack_memory_used@@Base+0xb75c>
  446f40:	b	446fb0 <_obstack_memory_used@@Base+0xb7b8>
  446f44:	ldrh	w8, [x28]
  446f48:	ldr	w9, [sp, #16]
  446f4c:	and	w8, w8, w9
  446f50:	strh	w8, [x28]
  446f54:	ldurb	w8, [x28, #-2]
  446f58:	add	x28, x28, #0x28
  446f5c:	cbnz	w8, 446ec8 <_obstack_memory_used@@Base+0xb6d0>
  446f60:	ldr	x13, [sp, #8]
  446f64:	mov	w11, #0x28                  	// #40
  446f68:	ldr	x8, [x13]
  446f6c:	b	446f94 <_obstack_memory_used@@Base+0xb79c>
  446f70:	tbz	w23, #1, 446f94 <_obstack_memory_used@@Base+0xb79c>
  446f74:	ldr	x9, [x9]
  446f78:	cmp	x9, x21
  446f7c:	b.ne	446f94 <_obstack_memory_used@@Base+0xb79c>  // b.any
  446f80:	b	446fb0 <_obstack_memory_used@@Base+0xb7b8>
  446f84:	tbz	w23, #0, 446f94 <_obstack_memory_used@@Base+0xb79c>
  446f88:	ldr	x9, [x9]
  446f8c:	cmp	x9, x21
  446f90:	b.eq	446fb8 <_obstack_memory_used@@Base+0xb7c0>  // b.none
  446f94:	add	x26, x26, #0x1
  446f98:	cmp	x26, x8
  446f9c:	b.lt	446e88 <_obstack_memory_used@@Base+0xb690>  // b.tstop
  446fa0:	ubfx	w0, w23, #1, #1
  446fa4:	b	446fbc <_obstack_memory_used@@Base+0xb7c4>
  446fa8:	sbfx	w0, w23, #0, #1
  446fac:	b	446fbc <_obstack_memory_used@@Base+0xb7c4>
  446fb0:	mov	w0, wzr
  446fb4:	b	446fbc <_obstack_memory_used@@Base+0xb7c4>
  446fb8:	mov	w0, #0xffffffff            	// #-1
  446fbc:	ldp	x20, x19, [sp, #112]
  446fc0:	ldp	x22, x21, [sp, #96]
  446fc4:	ldp	x24, x23, [sp, #80]
  446fc8:	ldp	x26, x25, [sp, #64]
  446fcc:	ldp	x28, x27, [sp, #48]
  446fd0:	ldp	x29, x30, [sp, #32]
  446fd4:	add	sp, sp, #0x80
  446fd8:	ret
  446fdc:	cbz	x0, 447050 <_obstack_memory_used@@Base+0xb858>
  446fe0:	stp	x29, x30, [sp, #-48]!
  446fe4:	stp	x20, x19, [sp, #32]
  446fe8:	ldr	x8, [x0]
  446fec:	mov	x19, x0
  446ff0:	ldr	x0, [x0, #16]
  446ff4:	str	x21, [sp, #16]
  446ff8:	cmp	x8, #0x1
  446ffc:	mov	x29, sp
  447000:	b.lt	447040 <_obstack_memory_used@@Base+0xb848>  // b.tstop
  447004:	mov	x20, xzr
  447008:	mov	x21, xzr
  44700c:	add	x8, x0, x20
  447010:	ldr	x0, [x8, #40]
  447014:	bl	4049b0 <free@plt>
  447018:	ldr	x8, [x19, #16]
  44701c:	add	x8, x8, x20
  447020:	ldr	x0, [x8, #16]
  447024:	bl	4049b0 <free@plt>
  447028:	ldr	x8, [x19]
  44702c:	ldr	x0, [x19, #16]
  447030:	add	x21, x21, #0x1
  447034:	add	x20, x20, #0x30
  447038:	cmp	x21, x8
  44703c:	b.lt	44700c <_obstack_memory_used@@Base+0xb814>  // b.tstop
  447040:	ldp	x20, x19, [sp, #32]
  447044:	ldr	x21, [sp, #16]
  447048:	ldp	x29, x30, [sp], #48
  44704c:	b	4049b0 <free@plt>
  447050:	ret
  447054:	stp	x29, x30, [sp, #-48]!
  447058:	stp	x20, x19, [sp, #32]
  44705c:	ldr	x9, [x0]
  447060:	str	x21, [sp, #16]
  447064:	mov	x29, sp
  447068:	sub	x8, x9, #0x1
  44706c:	cmp	x9, #0x0
  447070:	str	x8, [x0]
  447074:	b.le	4470f0 <_obstack_memory_used@@Base+0xb8f8>
  447078:	ldr	x9, [x0, #16]
  44707c:	add	x21, x8, x8, lsl #1
  447080:	mov	x20, x0
  447084:	lsl	x2, x2, #4
  447088:	add	x8, x9, x21, lsl #4
  44708c:	ldr	x9, [x8]
  447090:	mov	x0, x3
  447094:	mov	x19, x4
  447098:	str	x9, [x1]
  44709c:	ldr	x1, [x8, #16]
  4470a0:	bl	4040f0 <memcpy@plt>
  4470a4:	ldr	x0, [x19, #16]
  4470a8:	bl	4049b0 <free@plt>
  4470ac:	ldr	x8, [x20, #16]
  4470b0:	add	x8, x8, x21, lsl #4
  4470b4:	ldr	x0, [x8, #16]
  4470b8:	bl	4049b0 <free@plt>
  4470bc:	ldr	x8, [x20, #16]
  4470c0:	add	x8, x8, x21, lsl #4
  4470c4:	ldr	x9, [x8, #40]
  4470c8:	ldur	q0, [x8, #24]
  4470cc:	str	x9, [x19, #16]
  4470d0:	str	q0, [x19]
  4470d4:	ldr	x8, [x20, #16]
  4470d8:	ldp	x20, x19, [sp, #32]
  4470dc:	add	x8, x8, x21, lsl #4
  4470e0:	ldr	x0, [x8, #8]
  4470e4:	ldr	x21, [sp, #16]
  4470e8:	ldp	x29, x30, [sp], #48
  4470ec:	ret
  4470f0:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x19808>
  4470f4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  4470f8:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x19808>
  4470fc:	add	x0, x0, #0xf7b
  447100:	add	x1, x1, #0xe2f
  447104:	add	x3, x3, #0xf84
  447108:	mov	w2, #0x553                 	// #1363
  44710c:	bl	404cd0 <__assert_fail@plt>
  447110:	stp	x29, x30, [sp, #-48]!
  447114:	stp	x20, x19, [sp, #32]
  447118:	mov	x19, x0
  44711c:	stp	x22, x21, [sp, #16]
  447120:	mov	x29, sp
  447124:	cbz	x0, 447148 <_obstack_memory_used@@Base+0xb950>
  447128:	mov	x0, x19
  44712c:	bl	404170 <strlen@plt>
  447130:	add	x20, x0, #0x1
  447134:	cmp	x20, #0x76
  447138:	b.ls	44714c <_obstack_memory_used@@Base+0xb954>  // b.plast
  44713c:	add	x8, x0, #0x12
  447140:	and	x0, x8, #0xfffffffffffffff8
  447144:	b	447150 <_obstack_memory_used@@Base+0xb958>
  447148:	mov	x20, xzr
  44714c:	mov	w0, #0x80                  	// #128
  447150:	bl	4044d0 <malloc@plt>
  447154:	mov	x21, x0
  447158:	cbz	x0, 44718c <_obstack_memory_used@@Base+0xb994>
  44715c:	cmp	x19, #0x0
  447160:	mov	x22, x21
  447164:	cset	w8, ne  // ne = any
  447168:	str	xzr, [x21]
  44716c:	strb	w8, [x21, #8]
  447170:	strb	wzr, [x22, #9]!
  447174:	cbz	x19, 44718c <_obstack_memory_used@@Base+0xb994>
  447178:	mov	x0, x22
  44717c:	mov	x1, x19
  447180:	mov	x2, x20
  447184:	bl	4040f0 <memcpy@plt>
  447188:	strb	wzr, [x22, x20]
  44718c:	mov	x0, x21
  447190:	ldp	x20, x19, [sp, #32]
  447194:	ldp	x22, x21, [sp, #16]
  447198:	ldp	x29, x30, [sp], #48
  44719c:	ret
  4471a0:	stp	x29, x30, [sp, #-32]!
  4471a4:	cmp	x0, #0x2
  4471a8:	str	x19, [sp, #16]
  4471ac:	mov	x29, sp
  4471b0:	b.cc	4471c4 <_obstack_memory_used@@Base+0xb9cc>  // b.lo, b.ul, b.last
  4471b4:	ldr	x19, [x0]
  4471b8:	bl	4049b0 <free@plt>
  4471bc:	mov	x0, x19
  4471c0:	cbnz	x19, 4471b4 <_obstack_memory_used@@Base+0xb9bc>
  4471c4:	ldr	x19, [sp, #16]
  4471c8:	ldp	x29, x30, [sp], #32
  4471cc:	ret
  4471d0:	stp	x29, x30, [sp, #-48]!
  4471d4:	stp	x22, x21, [sp, #16]
  4471d8:	stp	x20, x19, [sp, #32]
  4471dc:	mov	x19, x2
  4471e0:	mov	x22, x1
  4471e4:	mov	x29, sp
  4471e8:	cbz	x0, 447220 <_obstack_memory_used@@Base+0xba28>
  4471ec:	mov	x21, x0
  4471f0:	bl	447260 <_obstack_memory_used@@Base+0xba68>
  4471f4:	cbz	x0, 447250 <_obstack_memory_used@@Base+0xba58>
  4471f8:	mov	x20, x0
  4471fc:	mov	x0, x22
  447200:	mov	x1, x19
  447204:	bl	404280 <localtime_r@plt>
  447208:	cbz	x0, 447238 <_obstack_memory_used@@Base+0xba40>
  44720c:	mov	x0, x21
  447210:	mov	x1, x19
  447214:	bl	44730c <_obstack_memory_used@@Base+0xbb14>
  447218:	eor	w21, w0, #0x1
  44721c:	b	44723c <_obstack_memory_used@@Base+0xba44>
  447220:	mov	x0, x22
  447224:	mov	x1, x19
  447228:	ldp	x20, x19, [sp, #32]
  44722c:	ldp	x22, x21, [sp, #16]
  447230:	ldp	x29, x30, [sp], #48
  447234:	b	404620 <gmtime_r@plt>
  447238:	mov	w21, #0x1                   	// #1
  44723c:	mov	x0, x20
  447240:	bl	447444 <_obstack_memory_used@@Base+0xbc4c>
  447244:	orn	w8, w21, w0
  447248:	tst	w8, #0x1
  44724c:	csel	x0, xzr, x19, ne  // ne = any
  447250:	ldp	x20, x19, [sp, #32]
  447254:	ldp	x22, x21, [sp, #16]
  447258:	ldp	x29, x30, [sp], #48
  44725c:	ret
  447260:	stp	x29, x30, [sp, #-48]!
  447264:	stp	x20, x19, [sp, #32]
  447268:	mov	x20, x0
  44726c:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x18808>
  447270:	add	x0, x0, #0x6c2
  447274:	stp	x22, x21, [sp, #16]
  447278:	mov	x29, sp
  44727c:	bl	404d10 <getenv@plt>
  447280:	ldrb	w8, [x20, #8]
  447284:	mov	x19, x0
  447288:	cbz	x0, 4472a8 <_obstack_memory_used@@Base+0xbab0>
  44728c:	cbz	w8, 4472ac <_obstack_memory_used@@Base+0xbab4>
  447290:	add	x0, x20, #0x9
  447294:	mov	x1, x19
  447298:	bl	404900 <strcmp@plt>
  44729c:	cbnz	w0, 4472ac <_obstack_memory_used@@Base+0xbab4>
  4472a0:	mov	w19, #0x1                   	// #1
  4472a4:	b	4472f8 <_obstack_memory_used@@Base+0xbb00>
  4472a8:	cbz	w8, 4472a0 <_obstack_memory_used@@Base+0xbaa8>
  4472ac:	mov	x0, x19
  4472b0:	bl	447110 <_obstack_memory_used@@Base+0xb918>
  4472b4:	mov	x19, x0
  4472b8:	cbz	x0, 4472f8 <_obstack_memory_used@@Base+0xbb00>
  4472bc:	mov	x0, x20
  4472c0:	bl	4475e0 <_obstack_memory_used@@Base+0xbde8>
  4472c4:	tbnz	w0, #0, 4472f8 <_obstack_memory_used@@Base+0xbb00>
  4472c8:	bl	404ce0 <__errno_location@plt>
  4472cc:	ldr	w21, [x0]
  4472d0:	mov	x20, x0
  4472d4:	cmp	x19, #0x2
  4472d8:	b.cc	4472f0 <_obstack_memory_used@@Base+0xbaf8>  // b.lo, b.ul, b.last
  4472dc:	ldr	x22, [x19]
  4472e0:	mov	x0, x19
  4472e4:	bl	4049b0 <free@plt>
  4472e8:	mov	x19, x22
  4472ec:	cbnz	x22, 4472dc <_obstack_memory_used@@Base+0xbae4>
  4472f0:	mov	x19, xzr
  4472f4:	str	w21, [x20]
  4472f8:	mov	x0, x19
  4472fc:	ldp	x20, x19, [sp, #32]
  447300:	ldp	x22, x21, [sp, #16]
  447304:	ldp	x29, x30, [sp], #48
  447308:	ret
  44730c:	stp	x29, x30, [sp, #-64]!
  447310:	stp	x24, x23, [sp, #16]
  447314:	stp	x22, x21, [sp, #32]
  447318:	stp	x20, x19, [sp, #48]
  44731c:	ldr	x21, [x1, #48]
  447320:	mov	x29, sp
  447324:	cbz	x21, 4473b4 <_obstack_memory_used@@Base+0xbbbc>
  447328:	mov	x19, x1
  44732c:	mov	x22, x0
  447330:	cmp	x21, x1
  447334:	b.cc	447344 <_obstack_memory_used@@Base+0xbb4c>  // b.lo, b.ul, b.last
  447338:	add	x8, x19, #0x38
  44733c:	cmp	x21, x8
  447340:	b.cc	4473b4 <_obstack_memory_used@@Base+0xbbbc>  // b.lo, b.ul, b.last
  447344:	ldrb	w8, [x21]
  447348:	cbz	w8, 4473a8 <_obstack_memory_used@@Base+0xbbb0>
  44734c:	add	x20, x22, #0x9
  447350:	mov	x0, x20
  447354:	mov	x1, x21
  447358:	bl	404900 <strcmp@plt>
  44735c:	cbz	w0, 4473b0 <_obstack_memory_used@@Base+0xbbb8>
  447360:	ldrb	w8, [x20]
  447364:	cbnz	w8, 44737c <_obstack_memory_used@@Base+0xbb84>
  447368:	add	x24, x22, #0x9
  44736c:	cmp	x20, x24
  447370:	b.ne	4473d0 <_obstack_memory_used@@Base+0xbbd8>  // b.any
  447374:	ldrb	w8, [x22, #8]
  447378:	cbz	w8, 4473cc <_obstack_memory_used@@Base+0xbbd4>
  44737c:	mov	x0, x20
  447380:	bl	404170 <strlen@plt>
  447384:	add	x20, x0, x20
  447388:	ldrb	w8, [x20, #1]!
  44738c:	cbnz	w8, 447350 <_obstack_memory_used@@Base+0xbb58>
  447390:	ldr	x8, [x22]
  447394:	add	x9, x8, #0x9
  447398:	cmp	x8, #0x0
  44739c:	csel	x20, x20, x9, eq  // eq = none
  4473a0:	csel	x22, x22, x8, eq  // eq = none
  4473a4:	b	447350 <_obstack_memory_used@@Base+0xbb58>
  4473a8:	adrp	x20, 452000 <_obstack_memory_used@@Base+0x16808>
  4473ac:	add	x20, x20, #0x3ee
  4473b0:	str	x20, [x19, #48]
  4473b4:	mov	w0, #0x1                   	// #1
  4473b8:	ldp	x20, x19, [sp, #48]
  4473bc:	ldp	x22, x21, [sp, #32]
  4473c0:	ldp	x24, x23, [sp, #16]
  4473c4:	ldp	x29, x30, [sp], #64
  4473c8:	ret
  4473cc:	mov	x24, x20
  4473d0:	mov	x0, x21
  4473d4:	bl	404170 <strlen@plt>
  4473d8:	sub	x8, x20, x24
  4473dc:	add	x23, x0, #0x1
  4473e0:	mvn	x9, x8
  4473e4:	cmp	x23, x9
  4473e8:	b.ls	447404 <_obstack_memory_used@@Base+0xbc0c>  // b.plast
  4473ec:	bl	404ce0 <__errno_location@plt>
  4473f0:	mov	x8, x0
  4473f4:	mov	w0, wzr
  4473f8:	mov	w9, #0xc                   	// #12
  4473fc:	str	w9, [x8]
  447400:	b	4473b8 <_obstack_memory_used@@Base+0xbbc0>
  447404:	add	x8, x23, x8
  447408:	cmp	x8, #0x76
  44740c:	b.hi	447428 <_obstack_memory_used@@Base+0xbc30>  // b.pmore
  447410:	mov	x0, x20
  447414:	mov	x1, x21
  447418:	mov	x2, x23
  44741c:	bl	4040f0 <memcpy@plt>
  447420:	strb	wzr, [x20, x23]
  447424:	b	4473b0 <_obstack_memory_used@@Base+0xbbb8>
  447428:	mov	x0, x21
  44742c:	bl	447110 <_obstack_memory_used@@Base+0xb918>
  447430:	str	x0, [x22]
  447434:	cbz	x0, 4473b8 <_obstack_memory_used@@Base+0xbbc0>
  447438:	add	x20, x0, #0x9
  44743c:	strb	wzr, [x0, #8]
  447440:	b	4473b0 <_obstack_memory_used@@Base+0xbbb8>
  447444:	stp	x29, x30, [sp, #-64]!
  447448:	cmp	x0, #0x1
  44744c:	str	x23, [sp, #16]
  447450:	stp	x22, x21, [sp, #32]
  447454:	stp	x20, x19, [sp, #48]
  447458:	mov	x29, sp
  44745c:	b.eq	4474a8 <_obstack_memory_used@@Base+0xbcb0>  // b.none
  447460:	mov	x19, x0
  447464:	bl	404ce0 <__errno_location@plt>
  447468:	ldr	w22, [x0]
  44746c:	mov	x21, x0
  447470:	mov	x0, x19
  447474:	bl	4475e0 <_obstack_memory_used@@Base+0xbde8>
  447478:	mov	w20, w0
  44747c:	tbnz	w0, #0, 447484 <_obstack_memory_used@@Base+0xbc8c>
  447480:	ldr	w22, [x21]
  447484:	cmp	x19, #0x2
  447488:	b.cc	4474a0 <_obstack_memory_used@@Base+0xbca8>  // b.lo, b.ul, b.last
  44748c:	ldr	x23, [x19]
  447490:	mov	x0, x19
  447494:	bl	4049b0 <free@plt>
  447498:	mov	x19, x23
  44749c:	cbnz	x23, 44748c <_obstack_memory_used@@Base+0xbc94>
  4474a0:	str	w22, [x21]
  4474a4:	b	4474ac <_obstack_memory_used@@Base+0xbcb4>
  4474a8:	mov	w20, #0x1                   	// #1
  4474ac:	and	w0, w20, #0x1
  4474b0:	ldp	x20, x19, [sp, #48]
  4474b4:	ldp	x22, x21, [sp, #32]
  4474b8:	ldr	x23, [sp, #16]
  4474bc:	ldp	x29, x30, [sp], #64
  4474c0:	ret
  4474c4:	sub	sp, sp, #0x70
  4474c8:	stp	x20, x19, [sp, #96]
  4474cc:	mov	x20, x1
  4474d0:	stp	x29, x30, [sp, #64]
  4474d4:	str	x21, [sp, #80]
  4474d8:	add	x29, sp, #0x40
  4474dc:	cbz	x0, 447520 <_obstack_memory_used@@Base+0xbd28>
  4474e0:	mov	x21, x0
  4474e4:	bl	447260 <_obstack_memory_used@@Base+0xba68>
  4474e8:	cbz	x0, 4475c8 <_obstack_memory_used@@Base+0xbdd0>
  4474ec:	mov	x19, x0
  4474f0:	mov	x0, x20
  4474f4:	bl	4047f0 <mktime@plt>
  4474f8:	cmn	x0, #0x1
  4474fc:	str	x0, [x29, #24]
  447500:	b.eq	447538 <_obstack_memory_used@@Base+0xbd40>  // b.none
  447504:	mov	x0, x21
  447508:	mov	x1, x20
  44750c:	bl	44730c <_obstack_memory_used@@Base+0xbb14>
  447510:	tbnz	w0, #0, 4475b4 <_obstack_memory_used@@Base+0xbdbc>
  447514:	mov	x8, #0xffffffffffffffff    	// #-1
  447518:	str	x8, [x29, #24]
  44751c:	b	4475b4 <_obstack_memory_used@@Base+0xbdbc>
  447520:	mov	x0, x20
  447524:	ldp	x20, x19, [sp, #96]
  447528:	ldr	x21, [sp, #80]
  44752c:	ldp	x29, x30, [sp, #64]
  447530:	add	sp, sp, #0x70
  447534:	b	404d50 <timegm@plt>
  447538:	add	x0, x29, #0x18
  44753c:	mov	x1, sp
  447540:	bl	404280 <localtime_r@plt>
  447544:	cbz	x0, 4475b4 <_obstack_memory_used@@Base+0xbdbc>
  447548:	ldr	q0, [x20]
  44754c:	ldr	q1, [sp]
  447550:	ldr	w12, [x20, #32]
  447554:	ldp	w8, w9, [x20, #16]
  447558:	ldp	w10, w11, [sp, #16]
  44755c:	ldr	w13, [sp, #32]
  447560:	eor	v0.16b, v1.16b, v0.16b
  447564:	cmp	w12, #0x0
  447568:	ext	v1.16b, v0.16b, v0.16b, #8
  44756c:	eor	w8, w10, w8
  447570:	eor	w9, w11, w9
  447574:	orr	w10, w13, w12
  447578:	cset	w11, eq  // eq = none
  44757c:	cmp	w13, #0x0
  447580:	orr	v0.16b, v0.16b, v1.16b
  447584:	cset	w12, eq  // eq = none
  447588:	cmp	w10, #0x0
  44758c:	dup	v1.4s, v0.s[1]
  447590:	eor	w10, w11, w12
  447594:	cset	w11, ge  // ge = tcont
  447598:	orr	v0.16b, v0.16b, v1.16b
  44759c:	and	w10, w11, w10
  4475a0:	fmov	w11, s0
  4475a4:	orr	w8, w11, w8
  4475a8:	orr	w8, w8, w9
  4475ac:	orr	w8, w8, w10
  4475b0:	cbz	w8, 447504 <_obstack_memory_used@@Base+0xbd0c>
  4475b4:	mov	x0, x19
  4475b8:	bl	447444 <_obstack_memory_used@@Base+0xbc4c>
  4475bc:	tbz	w0, #0, 4475c8 <_obstack_memory_used@@Base+0xbdd0>
  4475c0:	ldr	x0, [x29, #24]
  4475c4:	b	4475cc <_obstack_memory_used@@Base+0xbdd4>
  4475c8:	mov	x0, #0xffffffffffffffff    	// #-1
  4475cc:	ldp	x20, x19, [sp, #96]
  4475d0:	ldr	x21, [sp, #80]
  4475d4:	ldp	x29, x30, [sp, #64]
  4475d8:	add	sp, sp, #0x70
  4475dc:	ret
  4475e0:	stp	x29, x30, [sp, #-16]!
  4475e4:	ldrb	w8, [x0, #8]
  4475e8:	mov	x29, sp
  4475ec:	cbz	w8, 447610 <_obstack_memory_used@@Base+0xbe18>
  4475f0:	add	x1, x0, #0x9
  4475f4:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x18808>
  4475f8:	add	x0, x0, #0x6c2
  4475fc:	mov	w2, #0x1                   	// #1
  447600:	bl	404290 <setenv@plt>
  447604:	cbz	w0, 447620 <_obstack_memory_used@@Base+0xbe28>
  447608:	mov	w0, wzr
  44760c:	b	447628 <_obstack_memory_used@@Base+0xbe30>
  447610:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x18808>
  447614:	add	x0, x0, #0x6c2
  447618:	bl	404b20 <unsetenv@plt>
  44761c:	cbnz	w0, 447608 <_obstack_memory_used@@Base+0xbe10>
  447620:	bl	404530 <tzset@plt>
  447624:	mov	w0, #0x1                   	// #1
  447628:	ldp	x29, x30, [sp], #16
  44762c:	ret
  447630:	mov	w8, w0
  447634:	cmp	w0, #0x26
  447638:	mov	w0, wzr
  44763c:	b.hi	44765c <_obstack_memory_used@@Base+0xbe64>  // b.pmore
  447640:	mov	w9, w8
  447644:	mov	w10, #0x1                   	// #1
  447648:	lsl	x9, x10, x9
  44764c:	mov	x10, #0x410000              	// #4259840
  447650:	movk	x10, #0x40, lsl #32
  447654:	tst	x9, x10
  447658:	b.ne	447664 <_obstack_memory_used@@Base+0xbe6c>  // b.any
  44765c:	cmp	w8, #0x5f
  447660:	b.ne	447668 <_obstack_memory_used@@Base+0xbe70>  // b.any
  447664:	ret
  447668:	mov	w0, #0x1                   	// #1
  44766c:	ret
  447670:	stp	x29, x30, [sp, #-64]!
  447674:	str	x23, [sp, #16]
  447678:	mov	x23, x0
  44767c:	mov	w0, #0x48                  	// #72
  447680:	stp	x22, x21, [sp, #32]
  447684:	stp	x20, x19, [sp, #48]
  447688:	mov	x29, sp
  44768c:	mov	x20, x3
  447690:	mov	x21, x2
  447694:	mov	x22, x1
  447698:	bl	4044d0 <malloc@plt>
  44769c:	mov	x19, x0
  4476a0:	cbz	x0, 4476d8 <_obstack_memory_used@@Base+0xbee0>
  4476a4:	mov	w0, #0xc8                  	// #200
  4476a8:	stp	x23, x22, [x19]
  4476ac:	stp	x21, x20, [x19, #16]
  4476b0:	stp	xzr, xzr, [x19, #32]
  4476b4:	bl	4044d0 <malloc@plt>
  4476b8:	str	x0, [x19, #48]
  4476bc:	cbz	x0, 4476cc <_obstack_memory_used@@Base+0xbed4>
  4476c0:	add	x8, x0, #0xc8
  4476c4:	stp	x0, x8, [x19, #56]
  4476c8:	b	4476d8 <_obstack_memory_used@@Base+0xbee0>
  4476cc:	mov	x0, x19
  4476d0:	bl	4049b0 <free@plt>
  4476d4:	mov	x19, xzr
  4476d8:	mov	x0, x19
  4476dc:	ldp	x20, x19, [sp, #48]
  4476e0:	ldp	x22, x21, [sp, #32]
  4476e4:	ldr	x23, [sp, #16]
  4476e8:	ldp	x29, x30, [sp], #64
  4476ec:	ret
  4476f0:	stp	x29, x30, [sp, #-32]!
  4476f4:	str	x19, [sp, #16]
  4476f8:	mov	x29, sp
  4476fc:	mov	x19, x0
  447700:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  447704:	ldp	x0, x8, [x19, #48]
  447708:	subs	x2, x8, x0
  44770c:	b.ls	447720 <_obstack_memory_used@@Base+0xbf28>  // b.plast
  447710:	ldr	x3, [x19]
  447714:	mov	w1, #0x1                   	// #1
  447718:	bl	404150 <fwrite_unlocked@plt>
  44771c:	ldr	x0, [x19, #48]
  447720:	bl	4049b0 <free@plt>
  447724:	mov	x0, x19
  447728:	ldr	x19, [sp, #16]
  44772c:	ldp	x29, x30, [sp], #32
  447730:	b	4049b0 <free@plt>
  447734:	stp	x29, x30, [sp, #-96]!
  447738:	stp	x28, x27, [sp, #16]
  44773c:	stp	x26, x25, [sp, #32]
  447740:	stp	x24, x23, [sp, #48]
  447744:	stp	x22, x21, [sp, #64]
  447748:	stp	x20, x19, [sp, #80]
  44774c:	ldr	x8, [x0, #32]
  447750:	ldp	x9, x27, [x0, #48]
  447754:	mov	x19, x0
  447758:	mov	x29, sp
  44775c:	add	x21, x9, x8
  447760:	cmp	x21, x27
  447764:	b.cs	447b2c <_obstack_memory_used@@Base+0xc334>  // b.hs, b.nlast
  447768:	ldr	x23, [x19, #40]
  44776c:	cbnz	x23, 4477e0 <_obstack_memory_used@@Base+0xbfe8>
  447770:	ldr	x23, [x19, #8]
  447774:	cbz	x23, 4477e0 <_obstack_memory_used@@Base+0xbfe8>
  447778:	ldr	x8, [x19, #64]
  44777c:	add	x9, x27, x23
  447780:	mov	x20, x23
  447784:	cmp	x9, x8
  447788:	b.cs	4477c4 <_obstack_memory_used@@Base+0xbfcc>  // b.hs, b.nlast
  44778c:	add	x20, x21, x23
  447790:	sub	x2, x27, x21
  447794:	mov	x0, x20
  447798:	mov	x1, x21
  44779c:	bl	404100 <memmove@plt>
  4477a0:	ldr	x8, [x19, #56]
  4477a4:	mov	w1, #0x20                  	// #32
  4477a8:	mov	x0, x21
  4477ac:	mov	x2, x23
  4477b0:	add	x8, x8, x23
  4477b4:	str	x8, [x19, #56]
  4477b8:	bl	4045e0 <memset@plt>
  4477bc:	mov	x21, x20
  4477c0:	b	4477d8 <_obstack_memory_used@@Base+0xbfe0>
  4477c4:	ldr	x1, [x19]
  4477c8:	mov	w0, #0x20                  	// #32
  4477cc:	bl	4043e0 <putc_unlocked@plt>
  4477d0:	subs	x20, x20, #0x1
  4477d4:	b.ne	4477c4 <_obstack_memory_used@@Base+0xbfcc>  // b.any
  4477d8:	ldr	x27, [x19, #56]
  4477dc:	str	x23, [x19, #40]
  4477e0:	sub	x26, x27, x21
  4477e4:	mov	w1, #0xa                   	// #10
  4477e8:	mov	x0, x21
  4477ec:	mov	x2, x26
  4477f0:	bl	404b50 <memchr@plt>
  4477f4:	mov	x24, x0
  4477f8:	tbnz	x23, #63, 447818 <_obstack_memory_used@@Base+0xc020>
  4477fc:	cbz	x24, 447824 <_obstack_memory_used@@Base+0xc02c>
  447800:	ldr	x20, [x19, #16]
  447804:	sub	x8, x24, x21
  447808:	add	x8, x8, x23
  44780c:	cmp	x8, x20
  447810:	b.ge	447838 <_obstack_memory_used@@Base+0xc040>  // b.tcont
  447814:	b	447994 <_obstack_memory_used@@Base+0xc19c>
  447818:	mov	x23, xzr
  44781c:	str	xzr, [x19, #40]
  447820:	cbnz	x24, 447800 <_obstack_memory_used@@Base+0xc008>
  447824:	ldr	x20, [x19, #16]
  447828:	add	x8, x23, x26
  44782c:	mov	x24, x27
  447830:	cmp	x8, x20
  447834:	b.cc	447b10 <_obstack_memory_used@@Base+0xc318>  // b.lo, b.ul, b.last
  447838:	ldr	x28, [x19, #24]
  44783c:	tbnz	x28, #63, 447878 <_obstack_memory_used@@Base+0xc080>
  447840:	subs	x25, x20, x23
  447844:	add	x20, x21, x25
  447848:	b.mi	4478c4 <_obstack_memory_used@@Base+0xc0cc>  // b.first
  44784c:	bl	404930 <__ctype_b_loc@plt>
  447850:	ldr	x8, [x0]
  447854:	mov	x22, x20
  447858:	ldrb	w9, [x22]
  44785c:	ldrh	w9, [x8, x9, lsl #1]
  447860:	tbnz	w9, #0, 4478d0 <_obstack_memory_used@@Base+0xc0d8>
  447864:	sub	x22, x22, #0x1
  447868:	cmp	x22, x21
  44786c:	b.cs	447858 <_obstack_memory_used@@Base+0xc060>  // b.hs, b.nlast
  447870:	mov	w8, wzr
  447874:	b	4478d4 <_obstack_memory_used@@Base+0xc0dc>
  447878:	cmp	x24, x27
  44787c:	sub	x22, x20, #0x1
  447880:	b.cs	447b18 <_obstack_memory_used@@Base+0xc320>  // b.hs, b.nlast
  447884:	sub	x8, x22, x23
  447888:	add	x0, x21, x8
  44788c:	sub	x2, x27, x24
  447890:	mov	x1, x24
  447894:	bl	404100 <memmove@plt>
  447898:	ldr	x8, [x19, #40]
  44789c:	ldr	x9, [x19, #56]
  4478a0:	mov	x23, xzr
  4478a4:	str	xzr, [x19, #40]
  4478a8:	sub	x8, x22, x8
  4478ac:	add	x8, x21, x8
  4478b0:	sub	x8, x24, x8
  4478b4:	add	x27, x9, x8
  4478b8:	str	x27, [x19, #56]
  4478bc:	add	x20, x21, x20
  4478c0:	b	447b00 <_obstack_memory_used@@Base+0xc308>
  4478c4:	mov	w8, wzr
  4478c8:	mov	x22, x20
  4478cc:	b	4478d4 <_obstack_memory_used@@Base+0xc0dc>
  4478d0:	mov	w8, #0x1                   	// #1
  4478d4:	add	x23, x22, #0x1
  4478d8:	cmp	x23, x21
  4478dc:	b.ls	447914 <_obstack_memory_used@@Base+0xc11c>  // b.plast
  4478e0:	cbz	w8, 44790c <_obstack_memory_used@@Base+0xc114>
  4478e4:	sub	x8, x22, #0x1
  4478e8:	mov	x22, x8
  4478ec:	cmp	x8, x21
  4478f0:	b.cc	44790c <_obstack_memory_used@@Base+0xc114>  // b.lo, b.ul, b.last
  4478f4:	bl	404930 <__ctype_b_loc@plt>
  4478f8:	mov	x8, x22
  4478fc:	ldr	x9, [x0]
  447900:	ldrb	w10, [x8], #-1
  447904:	ldrh	w9, [x9, x10, lsl #1]
  447908:	tbnz	w9, #0, 4478e8 <_obstack_memory_used@@Base+0xc0f0>
  44790c:	add	x20, x22, #0x1
  447910:	b	447968 <_obstack_memory_used@@Base+0xc170>
  447914:	cmp	x20, x24
  447918:	b.cs	447948 <_obstack_memory_used@@Base+0xc150>  // b.hs, b.nlast
  44791c:	add	x8, x21, x25
  447920:	add	x8, x8, #0x1
  447924:	mov	x20, x8
  447928:	cmp	x8, x24
  44792c:	b.cs	447948 <_obstack_memory_used@@Base+0xc150>  // b.hs, b.nlast
  447930:	bl	404930 <__ctype_b_loc@plt>
  447934:	mov	x8, x20
  447938:	ldr	x9, [x0]
  44793c:	ldrb	w10, [x8], #1
  447940:	ldrh	w9, [x9, x10, lsl #1]
  447944:	tbz	w9, #0, 447924 <_obstack_memory_used@@Base+0xc12c>
  447948:	cmp	x20, x24
  44794c:	b.eq	447994 <_obstack_memory_used@@Base+0xc19c>  // b.none
  447950:	bl	404930 <__ctype_b_loc@plt>
  447954:	ldr	x8, [x0]
  447958:	mov	x23, x20
  44795c:	ldrb	w9, [x23, #1]!
  447960:	ldrh	w9, [x8, x9, lsl #1]
  447964:	tbnz	w9, #0, 44795c <_obstack_memory_used@@Base+0xc164>
  447968:	add	x8, x27, #0x1
  44796c:	cmp	x23, x8
  447970:	b.eq	4479a4 <_obstack_memory_used@@Base+0xc1ac>  // b.none
  447974:	cmp	x27, x23
  447978:	b.ls	447a04 <_obstack_memory_used@@Base+0xc20c>  // b.plast
  44797c:	mvn	x8, x20
  447980:	add	x8, x8, x23
  447984:	cmp	x8, x28
  447988:	b.ge	447a04 <_obstack_memory_used@@Base+0xc20c>  // b.tcont
  44798c:	ldr	x8, [x19, #64]
  447990:	b	4479bc <_obstack_memory_used@@Base+0xc1c4>
  447994:	mov	x23, xzr
  447998:	add	x20, x24, #0x1
  44799c:	str	xzr, [x19, #40]
  4479a0:	b	447b00 <_obstack_memory_used@@Base+0xc308>
  4479a4:	cmp	x27, x23
  4479a8:	b.ls	447a04 <_obstack_memory_used@@Base+0xc20c>  // b.plast
  4479ac:	ldr	x8, [x19, #64]
  4479b0:	sub	x9, x8, x20
  4479b4:	cmp	x9, x28
  4479b8:	b.gt	447a04 <_obstack_memory_used@@Base+0xc20c>
  4479bc:	sub	x8, x8, x27
  4479c0:	add	x9, x28, #0x1
  4479c4:	cmp	x8, x9
  4479c8:	b.le	447a10 <_obstack_memory_used@@Base+0xc218>
  4479cc:	sub	x22, x27, x23
  4479d0:	add	x24, x20, #0x1
  4479d4:	add	x0, x24, x28
  4479d8:	mov	x1, x23
  4479dc:	mov	x2, x22
  4479e0:	bl	404100 <memmove@plt>
  4479e4:	ldr	x8, [x19, #24]
  4479e8:	mov	w9, #0xa                   	// #10
  4479ec:	strb	w9, [x20]
  4479f0:	mov	x20, x24
  4479f4:	add	x23, x24, x8
  4479f8:	add	x8, x23, x22
  4479fc:	sub	x26, x8, x21
  447a00:	b	447a40 <_obstack_memory_used@@Base+0xc248>
  447a04:	mov	w8, #0xa                   	// #10
  447a08:	strb	w8, [x20], #1
  447a0c:	b	447a40 <_obstack_memory_used@@Base+0xc248>
  447a10:	ldr	x0, [x19, #48]
  447a14:	subs	x2, x20, x0
  447a18:	b.ls	447a28 <_obstack_memory_used@@Base+0xc230>  // b.plast
  447a1c:	ldr	x3, [x19]
  447a20:	mov	w1, #0x1                   	// #1
  447a24:	bl	404150 <fwrite_unlocked@plt>
  447a28:	ldr	x1, [x19]
  447a2c:	mov	w0, #0xa                   	// #10
  447a30:	bl	4043e0 <putc_unlocked@plt>
  447a34:	ldr	x20, [x19, #48]
  447a38:	sub	x26, x27, x20
  447a3c:	mov	x21, x20
  447a40:	ldr	x8, [x19, #24]
  447a44:	sub	x9, x23, x20
  447a48:	mov	w10, #0x20                  	// #32
  447a4c:	cmp	x9, x8
  447a50:	b.ge	447aa0 <_obstack_memory_used@@Base+0xc2a8>  // b.tcont
  447a54:	add	x9, x21, x26
  447a58:	add	x9, x9, #0x1
  447a5c:	cmp	x23, x9
  447a60:	b.ne	447a74 <_obstack_memory_used@@Base+0xc27c>  // b.any
  447a64:	ldr	x9, [x19, #64]
  447a68:	sub	x9, x9, x23
  447a6c:	cmp	x9, x8
  447a70:	b.ge	447aa0 <_obstack_memory_used@@Base+0xc2a8>  // b.tcont
  447a74:	cmp	x8, #0x1
  447a78:	b.lt	447ac4 <_obstack_memory_used@@Base+0xc2cc>  // b.tstop
  447a7c:	mov	x22, xzr
  447a80:	ldr	x1, [x19]
  447a84:	mov	w0, #0x20                  	// #32
  447a88:	bl	4043e0 <putc_unlocked@plt>
  447a8c:	ldr	x8, [x19, #24]
  447a90:	add	x22, x22, #0x1
  447a94:	cmp	x8, x22
  447a98:	b.gt	447a80 <_obstack_memory_used@@Base+0xc288>
  447a9c:	b	447ac4 <_obstack_memory_used@@Base+0xc2cc>
  447aa0:	cmp	x8, #0x1
  447aa4:	b.lt	447ac4 <_obstack_memory_used@@Base+0xc2cc>  // b.tstop
  447aa8:	mov	x9, xzr
  447aac:	strb	w10, [x20, x9]
  447ab0:	ldr	x8, [x19, #24]
  447ab4:	add	x9, x9, #0x1
  447ab8:	cmp	x8, x9
  447abc:	b.gt	447aac <_obstack_memory_used@@Base+0xc2b4>
  447ac0:	add	x20, x20, x9
  447ac4:	cmp	x20, x23
  447ac8:	b.cs	447ae4 <_obstack_memory_used@@Base+0xc2ec>  // b.hs, b.nlast
  447acc:	add	x8, x21, x26
  447ad0:	sub	x2, x8, x23
  447ad4:	mov	x0, x20
  447ad8:	mov	x1, x23
  447adc:	bl	404100 <memmove@plt>
  447ae0:	ldr	x8, [x19, #24]
  447ae4:	sub	x9, x26, x23
  447ae8:	cmp	x8, #0x0
  447aec:	add	x9, x9, x21
  447af0:	csinv	x23, x8, xzr, ne  // ne = any
  447af4:	add	x27, x20, x9
  447af8:	str	x27, [x19, #56]
  447afc:	str	x23, [x19, #40]
  447b00:	cmp	x20, x27
  447b04:	mov	x21, x20
  447b08:	b.cc	44776c <_obstack_memory_used@@Base+0xbf74>  // b.lo, b.ul, b.last
  447b0c:	b	447b2c <_obstack_memory_used@@Base+0xc334>
  447b10:	str	x8, [x19, #40]
  447b14:	b	447b2c <_obstack_memory_used@@Base+0xc334>
  447b18:	add	x8, x23, x26
  447b1c:	str	x8, [x19, #40]
  447b20:	sub	x8, x22, x8
  447b24:	add	x27, x27, x8
  447b28:	str	x27, [x19, #56]
  447b2c:	ldr	x8, [x19, #48]
  447b30:	sub	x8, x27, x8
  447b34:	str	x8, [x19, #32]
  447b38:	ldp	x20, x19, [sp, #80]
  447b3c:	ldp	x22, x21, [sp, #64]
  447b40:	ldp	x24, x23, [sp, #48]
  447b44:	ldp	x26, x25, [sp, #32]
  447b48:	ldp	x28, x27, [sp, #16]
  447b4c:	ldp	x29, x30, [sp], #96
  447b50:	ret
  447b54:	stp	x29, x30, [sp, #-32]!
  447b58:	stp	x20, x19, [sp, #16]
  447b5c:	ldp	x9, x8, [x0, #56]
  447b60:	mov	x29, sp
  447b64:	sub	x8, x8, x9
  447b68:	cmp	x8, x1
  447b6c:	b.cs	447bdc <_obstack_memory_used@@Base+0xc3e4>  // b.hs, b.nlast
  447b70:	mov	x20, x1
  447b74:	mov	x19, x0
  447b78:	bl	447734 <_obstack_memory_used@@Base+0xbf3c>
  447b7c:	ldp	x0, x8, [x19, #48]
  447b80:	ldr	x3, [x19]
  447b84:	mov	w1, #0x1                   	// #1
  447b88:	sub	x2, x8, x0
  447b8c:	bl	404150 <fwrite_unlocked@plt>
  447b90:	mov	x8, x0
  447b94:	ldp	x0, x9, [x19, #48]
  447b98:	sub	x10, x9, x0
  447b9c:	cmp	x8, x10
  447ba0:	b.ne	447be4 <_obstack_memory_used@@Base+0xc3ec>  // b.any
  447ba4:	ldr	x8, [x19, #64]
  447ba8:	str	x0, [x19, #56]
  447bac:	str	xzr, [x19, #32]
  447bb0:	sub	x8, x8, x0
  447bb4:	cmp	x8, x20
  447bb8:	b.cs	447bdc <_obstack_memory_used@@Base+0xc3e4>  // b.hs, b.nlast
  447bbc:	adds	x20, x8, x20
  447bc0:	b.cs	447c0c <_obstack_memory_used@@Base+0xc414>  // b.hs, b.nlast
  447bc4:	mov	x1, x20
  447bc8:	bl	404710 <realloc@plt>
  447bcc:	cbz	x0, 447c0c <_obstack_memory_used@@Base+0xc414>
  447bd0:	add	x8, x0, x20
  447bd4:	stp	x0, x0, [x19, #48]
  447bd8:	str	x8, [x19, #64]
  447bdc:	mov	w0, #0x1                   	// #1
  447be0:	b	447c20 <_obstack_memory_used@@Base+0xc428>
  447be4:	ldr	x10, [x19, #32]
  447be8:	sub	x9, x9, x8
  447bec:	add	x1, x0, x8
  447bf0:	sub	x2, x9, x0
  447bf4:	sub	x8, x10, x8
  447bf8:	str	x9, [x19, #56]
  447bfc:	str	x8, [x19, #32]
  447c00:	bl	404100 <memmove@plt>
  447c04:	mov	w0, wzr
  447c08:	b	447c20 <_obstack_memory_used@@Base+0xc428>
  447c0c:	bl	404ce0 <__errno_location@plt>
  447c10:	mov	x8, x0
  447c14:	mov	w0, wzr
  447c18:	mov	w9, #0xc                   	// #12
  447c1c:	str	w9, [x8]
  447c20:	ldp	x20, x19, [sp, #16]
  447c24:	ldp	x29, x30, [sp], #32
  447c28:	ret
  447c2c:	sub	sp, sp, #0x140
  447c30:	stp	x29, x30, [sp, #240]
  447c34:	add	x29, sp, #0xf0
  447c38:	stp	x22, x21, [sp, #288]
  447c3c:	mov	x22, #0xffffffffffffffd0    	// #-48
  447c40:	mov	x8, sp
  447c44:	sub	x9, x29, #0x70
  447c48:	stp	x28, x25, [sp, #256]
  447c4c:	stp	x24, x23, [sp, #272]
  447c50:	stp	x20, x19, [sp, #304]
  447c54:	mov	x20, x1
  447c58:	mov	x19, x0
  447c5c:	mov	w1, #0x96                  	// #150
  447c60:	movk	x22, #0xff80, lsl #32
  447c64:	add	x23, x29, #0x50
  447c68:	add	x24, x8, #0x80
  447c6c:	add	x25, x9, #0x30
  447c70:	stp	x2, x3, [x29, #-112]
  447c74:	stp	x4, x5, [x29, #-96]
  447c78:	stp	x6, x7, [x29, #-80]
  447c7c:	stp	q1, q2, [sp, #16]
  447c80:	stp	q3, q4, [sp, #48]
  447c84:	str	q0, [sp]
  447c88:	stp	q5, q6, [sp, #80]
  447c8c:	str	q7, [sp, #112]
  447c90:	mov	x0, x19
  447c94:	bl	447b54 <_obstack_memory_used@@Base+0xc35c>
  447c98:	cbz	w0, 447cf0 <_obstack_memory_used@@Base+0xc4f8>
  447c9c:	stp	x24, x22, [x29, #-48]
  447ca0:	stp	x23, x25, [x29, #-64]
  447ca4:	ldp	x0, x8, [x19, #56]
  447ca8:	ldp	q0, q1, [x29, #-64]
  447cac:	sub	x5, x29, #0x20
  447cb0:	mov	w2, #0x1                   	// #1
  447cb4:	sub	x21, x8, x0
  447cb8:	mov	x3, #0xffffffffffffffff    	// #-1
  447cbc:	mov	x1, x21
  447cc0:	mov	x4, x20
  447cc4:	stp	q0, q1, [x29, #-32]
  447cc8:	bl	4044b0 <__vsnprintf_chk@plt>
  447ccc:	add	w8, w0, #0x1
  447cd0:	cmp	x21, w0, sxtw
  447cd4:	sxtw	x1, w8
  447cd8:	b.ls	447c90 <_obstack_memory_used@@Base+0xc498>  // b.plast
  447cdc:	ldr	x8, [x19, #56]
  447ce0:	sxtw	x0, w0
  447ce4:	add	x8, x8, x0
  447ce8:	str	x8, [x19, #56]
  447cec:	b	447cf4 <_obstack_memory_used@@Base+0xc4fc>
  447cf0:	mov	x0, #0xffffffffffffffff    	// #-1
  447cf4:	ldp	x20, x19, [sp, #304]
  447cf8:	ldp	x22, x21, [sp, #288]
  447cfc:	ldp	x24, x23, [sp, #272]
  447d00:	ldp	x28, x25, [sp, #256]
  447d04:	ldp	x29, x30, [sp, #240]
  447d08:	add	sp, sp, #0x140
  447d0c:	ret
  447d10:	stp	x29, x30, [sp, #-48]!
  447d14:	str	x21, [sp, #16]
  447d18:	stp	x20, x19, [sp, #32]
  447d1c:	mov	x29, sp
  447d20:	mov	x20, x0
  447d24:	bl	404380 <__fpending@plt>
  447d28:	mov	x19, x0
  447d2c:	mov	x0, x20
  447d30:	bl	4042b0 <ferror_unlocked@plt>
  447d34:	mov	w21, w0
  447d38:	mov	x0, x20
  447d3c:	bl	404450 <fclose@plt>
  447d40:	mov	w8, w0
  447d44:	cbz	w21, 447d5c <_obstack_memory_used@@Base+0xc564>
  447d48:	cbnz	w8, 447d54 <_obstack_memory_used@@Base+0xc55c>
  447d4c:	bl	404ce0 <__errno_location@plt>
  447d50:	str	wzr, [x0]
  447d54:	mov	w0, #0xffffffff            	// #-1
  447d58:	b	447d7c <_obstack_memory_used@@Base+0xc584>
  447d5c:	cmp	w8, #0x0
  447d60:	csetm	w0, ne  // ne = any
  447d64:	cbnz	x19, 447d7c <_obstack_memory_used@@Base+0xc584>
  447d68:	cbz	w8, 447d7c <_obstack_memory_used@@Base+0xc584>
  447d6c:	bl	404ce0 <__errno_location@plt>
  447d70:	ldr	w8, [x0]
  447d74:	cmp	w8, #0x9
  447d78:	csetm	w0, ne  // ne = any
  447d7c:	ldp	x20, x19, [sp, #32]
  447d80:	ldr	x21, [sp, #16]
  447d84:	ldp	x29, x30, [sp], #48
  447d88:	ret
  447d8c:	stp	x29, x30, [sp, #-64]!
  447d90:	str	x23, [sp, #16]
  447d94:	stp	x22, x21, [sp, #32]
  447d98:	stp	x20, x19, [sp, #48]
  447d9c:	mov	x29, sp
  447da0:	bl	4042e0 <opendir@plt>
  447da4:	mov	x19, x0
  447da8:	cbz	x0, 447e14 <_obstack_memory_used@@Base+0xc61c>
  447dac:	mov	x0, x19
  447db0:	bl	404b10 <dirfd@plt>
  447db4:	cmp	w0, #0x2
  447db8:	b.hi	447e14 <_obstack_memory_used@@Base+0xc61c>  // b.pmore
  447dbc:	mov	w1, #0x406                 	// #1030
  447dc0:	mov	w2, #0x3                   	// #3
  447dc4:	bl	43b18c <argp_parse@@Base+0xc4d0>
  447dc8:	tbnz	w0, #31, 447df4 <_obstack_memory_used@@Base+0xc5fc>
  447dcc:	mov	w22, w0
  447dd0:	bl	404800 <fdopendir@plt>
  447dd4:	mov	x21, x0
  447dd8:	bl	404ce0 <__errno_location@plt>
  447ddc:	ldr	w23, [x0]
  447de0:	mov	x20, x0
  447de4:	cbnz	x21, 447e04 <_obstack_memory_used@@Base+0xc60c>
  447de8:	mov	w0, w22
  447dec:	bl	4047a0 <close@plt>
  447df0:	b	447e04 <_obstack_memory_used@@Base+0xc60c>
  447df4:	bl	404ce0 <__errno_location@plt>
  447df8:	ldr	w23, [x0]
  447dfc:	mov	x20, x0
  447e00:	mov	x21, xzr
  447e04:	mov	x0, x19
  447e08:	bl	404770 <closedir@plt>
  447e0c:	mov	x19, x21
  447e10:	str	w23, [x20]
  447e14:	mov	x0, x19
  447e18:	ldp	x20, x19, [sp, #48]
  447e1c:	ldp	x22, x21, [sp, #32]
  447e20:	ldr	x23, [sp, #16]
  447e24:	ldp	x29, x30, [sp], #64
  447e28:	ret
  447e2c:	sub	sp, sp, #0xe0
  447e30:	stp	x29, x30, [sp, #208]
  447e34:	add	x29, sp, #0xd0
  447e38:	stp	x2, x3, [x29, #-80]
  447e3c:	stp	x4, x5, [x29, #-64]
  447e40:	stp	x6, x7, [x29, #-48]
  447e44:	stp	q1, q2, [sp, #16]
  447e48:	stp	q3, q4, [sp, #48]
  447e4c:	str	q0, [sp]
  447e50:	stp	q5, q6, [sp, #80]
  447e54:	str	q7, [sp, #112]
  447e58:	tbnz	w1, #6, 447e64 <_obstack_memory_used@@Base+0xc66c>
  447e5c:	mov	w2, wzr
  447e60:	b	447ebc <_obstack_memory_used@@Base+0xc6c4>
  447e64:	mov	x9, #0xffffffffffffffd0    	// #-48
  447e68:	mov	x11, sp
  447e6c:	sub	x12, x29, #0x50
  447e70:	movk	x9, #0xff80, lsl #32
  447e74:	add	x10, x29, #0x10
  447e78:	mov	x8, #0xffffffffffffffd0    	// #-48
  447e7c:	add	x11, x11, #0x80
  447e80:	add	x12, x12, #0x30
  447e84:	stp	x11, x9, [x29, #-16]
  447e88:	stp	x10, x12, [x29, #-32]
  447e8c:	tbz	w8, #31, 447eac <_obstack_memory_used@@Base+0xc6b4>
  447e90:	add	w9, w8, #0x8
  447e94:	cmn	w8, #0x8
  447e98:	stur	w9, [x29, #-8]
  447e9c:	b.gt	447eac <_obstack_memory_used@@Base+0xc6b4>
  447ea0:	ldur	x9, [x29, #-24]
  447ea4:	add	x8, x9, x8
  447ea8:	b	447eb8 <_obstack_memory_used@@Base+0xc6c0>
  447eac:	ldur	x8, [x29, #-32]
  447eb0:	add	x9, x8, #0x8
  447eb4:	stur	x9, [x29, #-32]
  447eb8:	ldr	w2, [x8]
  447ebc:	bl	404510 <open@plt>
  447ec0:	bl	4494e0 <_obstack_memory_used@@Base+0xdce8>
  447ec4:	ldp	x29, x30, [sp, #208]
  447ec8:	add	sp, sp, #0xe0
  447ecc:	ret
  447ed0:	stp	x29, x30, [sp, #-32]!
  447ed4:	mov	x1, xzr
  447ed8:	str	x19, [sp, #16]
  447edc:	mov	x29, sp
  447ee0:	bl	404dc0 <setlocale@plt>
  447ee4:	cbz	x0, 447f10 <_obstack_memory_used@@Base+0xc718>
  447ee8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  447eec:	add	x1, x1, #0xdb
  447ef0:	mov	x19, x0
  447ef4:	bl	404900 <strcmp@plt>
  447ef8:	cbz	w0, 447f18 <_obstack_memory_used@@Base+0xc720>
  447efc:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x19808>
  447f00:	add	x1, x1, #0xfda
  447f04:	mov	x0, x19
  447f08:	bl	404900 <strcmp@plt>
  447f0c:	cbz	w0, 447f18 <_obstack_memory_used@@Base+0xc720>
  447f10:	mov	w0, #0x1                   	// #1
  447f14:	b	447f1c <_obstack_memory_used@@Base+0xc724>
  447f18:	mov	w0, wzr
  447f1c:	ldr	x19, [sp, #16]
  447f20:	ldp	x29, x30, [sp], #32
  447f24:	ret
  447f28:	stp	x29, x30, [sp, #-32]!
  447f2c:	str	x19, [sp, #16]
  447f30:	mov	x29, sp
  447f34:	mov	w19, w0
  447f38:	bl	4044f0 <wcwidth@plt>
  447f3c:	tbz	w0, #31, 447f50 <_obstack_memory_used@@Base+0xc758>
  447f40:	mov	w0, w19
  447f44:	bl	404320 <iswcntrl@plt>
  447f48:	cmp	w0, #0x0
  447f4c:	cset	w0, eq  // eq = none
  447f50:	ldr	x19, [sp, #16]
  447f54:	ldp	x29, x30, [sp], #32
  447f58:	ret
  447f5c:	stp	x29, x30, [sp, #-48]!
  447f60:	str	x21, [sp, #16]
  447f64:	stp	x20, x19, [sp, #32]
  447f68:	mov	x8, x1
  447f6c:	mov	x19, x1
  447f70:	ldr	x1, [x8], #24
  447f74:	mov	x20, x0
  447f78:	mov	x29, sp
  447f7c:	cmp	x1, x8
  447f80:	b.ne	447f98 <_obstack_memory_used@@Base+0xc7a0>  // b.any
  447f84:	ldr	x2, [x19, #8]
  447f88:	add	x21, x20, #0x18
  447f8c:	mov	x0, x21
  447f90:	bl	4040f0 <memcpy@plt>
  447f94:	mov	x1, x21
  447f98:	str	x1, [x20]
  447f9c:	ldr	x8, [x19, #8]
  447fa0:	str	x8, [x20, #8]
  447fa4:	ldrb	w8, [x19, #16]
  447fa8:	strb	w8, [x20, #16]
  447fac:	cbz	w8, 447fb8 <_obstack_memory_used@@Base+0xc7c0>
  447fb0:	ldr	w8, [x19, #20]
  447fb4:	str	w8, [x20, #20]
  447fb8:	ldp	x20, x19, [sp, #32]
  447fbc:	ldr	x21, [sp, #16]
  447fc0:	ldp	x29, x30, [sp], #48
  447fc4:	ret
  447fc8:	lsr	w8, w0, #3
  447fcc:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x19808>
  447fd0:	and	x8, x8, #0x1c
  447fd4:	add	x9, x9, #0xfe0
  447fd8:	ldr	w8, [x9, x8]
  447fdc:	lsr	w8, w8, w0
  447fe0:	and	w0, w8, #0x1
  447fe4:	ret
  447fe8:	mov	w6, w5
  447fec:	mov	x5, x4
  447ff0:	mov	w4, wzr
  447ff4:	b	447ff8 <_obstack_memory_used@@Base+0xc800>
  447ff8:	stp	x29, x30, [sp, #-96]!
  447ffc:	stp	x28, x27, [sp, #16]
  448000:	stp	x26, x25, [sp, #32]
  448004:	stp	x24, x23, [sp, #48]
  448008:	stp	x22, x21, [sp, #64]
  44800c:	stp	x20, x19, [sp, #80]
  448010:	mov	x29, sp
  448014:	sub	sp, sp, #0x4a0
  448018:	ldr	x8, [x3, #48]
  44801c:	ldr	w9, [x3, #8]
  448020:	adrp	x10, 452000 <_obstack_memory_used@@Base+0x16808>
  448024:	mov	x25, x2
  448028:	add	x10, x10, #0x3ee
  44802c:	cmp	x8, #0x0
  448030:	csel	x12, x10, x8, eq  // eq = none
  448034:	ldrb	w8, [x25]
  448038:	mov	w11, #0xc                   	// #12
  44803c:	cmp	w9, #0x0
  448040:	csel	w10, w11, w9, eq  // eq = none
  448044:	subs	w9, w9, #0xc
  448048:	mov	x2, x0
  44804c:	csel	w9, w9, w10, gt
  448050:	str	w6, [sp, #52]
  448054:	str	x5, [sp, #56]
  448058:	str	w4, [sp, #100]
  44805c:	str	x1, [sp, #104]
  448060:	cbz	w8, 449400 <_obstack_memory_used@@Base+0xdc08>
  448064:	str	w9, [sp, #36]
  448068:	sub	x9, x29, #0x20
  44806c:	sub	x10, x29, #0x28
  448070:	add	x9, x9, #0x17
  448074:	stp	x9, x3, [sp, #80]
  448078:	orr	x9, x10, #0x2
  44807c:	add	x11, sp, #0x70
  448080:	str	x9, [sp, #72]
  448084:	orr	x9, x10, #0x3
  448088:	str	x12, [sp, #24]
  44808c:	sub	x12, x12, #0x1
  448090:	str	x9, [sp, #64]
  448094:	orr	x9, x11, #0x1
  448098:	mov	x0, xzr
  44809c:	mov	w1, #0x1                   	// #1
  4480a0:	stp	x12, x9, [sp, #8]
  4480a4:	sub	x9, x11, #0x1
  4480a8:	str	x9, [sp, #40]
  4480ac:	and	w9, w8, #0xff
  4480b0:	cmp	w9, #0x25
  4480b4:	b.ne	448128 <_obstack_memory_used@@Base+0xc930>  // b.any
  4480b8:	ldr	w20, [sp, #100]
  4480bc:	mov	w10, #0xcccc                	// #52428
  4480c0:	mov	w28, wzr
  4480c4:	mov	w26, wzr
  4480c8:	movk	w10, #0xccc, lsl #16
  4480cc:	mov	w11, #0xa                   	// #10
  4480d0:	add	x25, x25, #0x1
  4480d4:	ldrb	w8, [x25]
  4480d8:	cmp	w8, #0x2f
  4480dc:	b.le	4480f4 <_obstack_memory_used@@Base+0xc8fc>
  4480e0:	cmp	w8, #0x30
  4480e4:	b.eq	4480fc <_obstack_memory_used@@Base+0xc904>  // b.none
  4480e8:	cmp	w8, #0x5f
  4480ec:	b.eq	4480fc <_obstack_memory_used@@Base+0xc904>  // b.none
  4480f0:	b	448108 <_obstack_memory_used@@Base+0xc910>
  4480f4:	cmp	w8, #0x2d
  4480f8:	b.ne	448118 <_obstack_memory_used@@Base+0xc920>  // b.any
  4480fc:	add	x25, x25, #0x1
  448100:	mov	w26, w8
  448104:	b	4480d4 <_obstack_memory_used@@Base+0xc8dc>
  448108:	cmp	w8, #0x5e
  44810c:	b.ne	448148 <_obstack_memory_used@@Base+0xc950>  // b.any
  448110:	mov	w20, #0x1                   	// #1
  448114:	b	4480d0 <_obstack_memory_used@@Base+0xc8d8>
  448118:	cmp	w8, #0x23
  44811c:	b.ne	448148 <_obstack_memory_used@@Base+0xc950>  // b.any
  448120:	mov	w28, #0x1                   	// #1
  448124:	b	4480d0 <_obstack_memory_used@@Base+0xc8d8>
  448128:	ldr	x9, [sp, #104]
  44812c:	sub	x9, x9, x0
  448130:	cmp	x9, #0x2
  448134:	b.cc	449418 <_obstack_memory_used@@Base+0xdc20>  // b.lo, b.ul, b.last
  448138:	cbz	x2, 448140 <_obstack_memory_used@@Base+0xc948>
  44813c:	strb	w8, [x2], #1
  448140:	add	x0, x0, #0x1
  448144:	b	449334 <_obstack_memory_used@@Base+0xdb3c>
  448148:	sub	w9, w8, #0x30
  44814c:	cmp	w9, #0x9
  448150:	b.hi	448198 <_obstack_memory_used@@Base+0xc9a0>  // b.pmore
  448154:	mov	w19, wzr
  448158:	cmp	w19, w10
  44815c:	b.gt	448170 <_obstack_memory_used@@Base+0xc978>
  448160:	b.ne	448178 <_obstack_memory_used@@Base+0xc980>  // b.any
  448164:	and	w9, w8, #0xff
  448168:	cmp	w9, #0x37
  44816c:	b.ls	448178 <_obstack_memory_used@@Base+0xc980>  // b.plast
  448170:	mov	w19, #0x7fffffff            	// #2147483647
  448174:	b	448184 <_obstack_memory_used@@Base+0xc98c>
  448178:	mul	w9, w19, w11
  44817c:	add	w8, w9, w8, uxtb
  448180:	sub	w19, w8, #0x30
  448184:	ldrb	w8, [x25, #1]!
  448188:	sub	w9, w8, #0x30
  44818c:	cmp	w9, #0xa
  448190:	b.cc	448158 <_obstack_memory_used@@Base+0xc960>  // b.lo, b.ul, b.last
  448194:	b	44819c <_obstack_memory_used@@Base+0xc9a4>
  448198:	mov	w19, #0xffffffff            	// #-1
  44819c:	cmp	w8, #0x4f
  4481a0:	b.eq	4481ac <_obstack_memory_used@@Base+0xc9b4>  // b.none
  4481a4:	cmp	w8, #0x45
  4481a8:	b.ne	4481bc <_obstack_memory_used@@Base+0xc9c4>  // b.any
  4481ac:	ldrb	w10, [x25, #1]!
  4481b0:	mov	w9, w8
  4481b4:	mov	w8, w10
  4481b8:	b	4481c0 <_obstack_memory_used@@Base+0xc9c8>
  4481bc:	mov	w9, wzr
  4481c0:	sub	w12, w8, #0x25
  4481c4:	cmp	w12, #0x55
  4481c8:	b.hi	448308 <_obstack_memory_used@@Base+0xcb10>  // b.pmore
  4481cc:	adrp	x15, 456000 <_obstack_memory_used@@Base+0x1a808>
  4481d0:	add	x15, x15, #0x0
  4481d4:	adr	x13, 4481fc <_obstack_memory_used@@Base+0xca04>
  4481d8:	ldrh	w14, [x15, x12, lsl #1]
  4481dc:	add	x13, x13, x14, lsl #2
  4481e0:	adrp	x21, 44d000 <_obstack_memory_used@@Base+0x11808>
  4481e4:	mov	w24, wzr
  4481e8:	mov	w22, wzr
  4481ec:	mov	w11, wzr
  4481f0:	mov	x10, xzr
  4481f4:	add	x21, x21, #0xb4b
  4481f8:	br	x13
  4481fc:	cmp	w9, #0x45
  448200:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  448204:	ldr	x10, [sp, #88]
  448208:	mov	w13, #0xffffff9c            	// #-100
  44820c:	mov	w14, #0x12c                 	// #300
  448210:	ldr	w11, [x10, #20]
  448214:	ldp	w10, w12, [x10, #24]
  448218:	cmp	w11, #0x0
  44821c:	sub	w15, w12, w10
  448220:	csel	w14, w14, w13, lt  // lt = tstop
  448224:	add	w13, w15, #0x17e
  448228:	mov	w15, #0x2493                	// #9363
  44822c:	movk	w15, #0x9249, lsl #16
  448230:	smull	x15, w13, w15
  448234:	lsr	x15, x15, #32
  448238:	add	w15, w15, w13
  44823c:	asr	w16, w15, #2
  448240:	add	w15, w16, w15, lsr #31
  448244:	lsl	w16, w15, #3
  448248:	sub	w15, w16, w15
  44824c:	sub	w13, w15, w13
  448250:	add	w13, w12, w13
  448254:	adds	w13, w13, #0x3
  448258:	add	w15, w14, w11
  44825c:	b.mi	448920 <_obstack_memory_used@@Base+0xd128>  // b.first
  448260:	tst	w15, #0x3
  448264:	mov	w14, #0x16d                 	// #365
  448268:	b.ne	4482a4 <_obstack_memory_used@@Base+0xcaac>  // b.any
  44826c:	mov	w16, #0x5c29                	// #23593
  448270:	mov	w17, #0xb850                	// #47184
  448274:	movk	w16, #0xc28f, lsl #16
  448278:	movk	w17, #0x51e, lsl #16
  44827c:	mov	w18, #0xd70b                	// #55051
  448280:	madd	w15, w15, w16, w17
  448284:	movk	w18, #0xa3, lsl #16
  448288:	ror	w16, w15, #2
  44828c:	ror	w15, w15, #4
  448290:	cmp	w15, w18
  448294:	mov	w15, #0x5c28                	// #23592
  448298:	movk	w15, #0x28f, lsl #16
  44829c:	ccmp	w16, w15, #0x2, cs  // cs = hs, nlast
  4482a0:	cinc	w14, w14, hi  // hi = pmore
  4482a4:	add	w14, w10, w14
  4482a8:	sub	w12, w12, w14
  4482ac:	mov	w14, #0x2493                	// #9363
  4482b0:	movk	w14, #0x9249, lsl #16
  4482b4:	add	w12, w12, #0x17e
  4482b8:	smull	x14, w12, w14
  4482bc:	lsr	x14, x14, #32
  4482c0:	add	w12, w14, w12
  4482c4:	asr	w14, w12, #2
  4482c8:	add	w12, w14, w12, lsr #31
  4482cc:	lsl	w14, w12, #3
  4482d0:	sub	w12, w14, w12
  4482d4:	add	w10, w10, w12
  4482d8:	sub	w10, w10, #0x17b
  4482dc:	mvn	w12, w10
  4482e0:	cmp	w10, #0x0
  4482e4:	lsr	w14, w12, #31
  4482e8:	csel	w10, w10, w13, ge  // ge = tcont
  4482ec:	b	4489a8 <_obstack_memory_used@@Base+0xd1b0>
  4482f0:	cmp	w9, #0x45
  4482f4:	orr	w20, w28, w20
  4482f8:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  4482fc:	mov	w24, wzr
  448300:	mov	w22, wzr
  448304:	b	448b0c <_obstack_memory_used@@Base+0xd314>
  448308:	cbnz	w8, 448fac <_obstack_memory_used@@Base+0xd7b4>
  44830c:	sub	x25, x25, #0x1
  448310:	b	448fac <_obstack_memory_used@@Base+0xd7b4>
  448314:	cbnz	w9, 448fac <_obstack_memory_used@@Base+0xd7b4>
  448318:	ldr	x9, [sp, #104]
  44831c:	bic	w8, w19, w19, asr #31
  448320:	cmp	w8, #0x1
  448324:	csinc	w20, w8, wzr, hi  // hi = pmore
  448328:	sub	x9, x9, x0
  44832c:	cmp	x9, x20
  448330:	b.ls	449418 <_obstack_memory_used@@Base+0xdc20>  // b.plast
  448334:	cbz	x2, 4490a8 <_obstack_memory_used@@Base+0xd8b0>
  448338:	cmp	w8, #0x2
  44833c:	b.cc	449340 <_obstack_memory_used@@Base+0xdb48>  // b.lo, b.ul, b.last
  448340:	sxtw	x8, w19
  448344:	mov	x22, x0
  448348:	cmp	w26, #0x30
  44834c:	sub	x21, x8, #0x1
  448350:	b.ne	4493cc <_obstack_memory_used@@Base+0xdbd4>  // b.any
  448354:	mov	w1, #0x30                  	// #48
  448358:	b	4493d0 <_obstack_memory_used@@Base+0xdbd8>
  44835c:	mov	w10, #0x1                   	// #1
  448360:	ldrb	w11, [x25, x10]
  448364:	cmp	w11, #0x3a
  448368:	b.ne	4488ec <_obstack_memory_used@@Base+0xd0f4>  // b.any
  44836c:	add	x10, x10, #0x1
  448370:	b	448360 <_obstack_memory_used@@Base+0xcb68>
  448374:	cbnz	w9, 448fac <_obstack_memory_used@@Base+0xd7b4>
  448378:	mov	w24, wzr
  44837c:	mov	w22, wzr
  448380:	orr	w20, w28, w20
  448384:	mov	w8, #0x41                  	// #65
  448388:	b	448b0c <_obstack_memory_used@@Base+0xd314>
  44838c:	cmp	w9, #0x45
  448390:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  448394:	mov	w24, wzr
  448398:	mov	w22, wzr
  44839c:	orr	w20, w28, w20
  4483a0:	mov	w8, #0x42                  	// #66
  4483a4:	b	448b0c <_obstack_memory_used@@Base+0xd314>
  4483a8:	cmp	w9, #0x45
  4483ac:	b.ne	448a0c <_obstack_memory_used@@Base+0xd214>  // b.any
  4483b0:	mov	w24, wzr
  4483b4:	mov	w22, wzr
  4483b8:	mov	w8, #0x43                  	// #67
  4483bc:	b	448b0c <_obstack_memory_used@@Base+0xd314>
  4483c0:	cbnz	w9, 448fac <_obstack_memory_used@@Base+0xd7b4>
  4483c4:	adrp	x21, 453000 <_obstack_memory_used@@Base+0x17808>
  4483c8:	add	x21, x21, #0x4d4
  4483cc:	b	448498 <_obstack_memory_used@@Base+0xcca0>
  4483d0:	cbnz	w9, 448fac <_obstack_memory_used@@Base+0xd7b4>
  4483d4:	adrp	x21, 453000 <_obstack_memory_used@@Base+0x17808>
  4483d8:	add	x21, x21, #0x4dd
  4483dc:	b	448498 <_obstack_memory_used@@Base+0xcca0>
  4483e0:	cmp	w9, #0x45
  4483e4:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  4483e8:	ldr	x10, [sp, #88]
  4483ec:	ldr	w10, [x10, #8]
  4483f0:	b	448aec <_obstack_memory_used@@Base+0xd2f4>
  4483f4:	cmp	w9, #0x45
  4483f8:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  4483fc:	ldr	w10, [sp, #36]
  448400:	b	448aec <_obstack_memory_used@@Base+0xd2f4>
  448404:	cmp	w9, #0x45
  448408:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  44840c:	ldr	x10, [sp, #88]
  448410:	ldr	w10, [x10, #4]
  448414:	b	448aec <_obstack_memory_used@@Base+0xd2f4>
  448418:	cmp	w9, #0x45
  44841c:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  448420:	cmn	w19, #0x1
  448424:	b.eq	4490b0 <_obstack_memory_used@@Base+0xd8b8>  // b.none
  448428:	cmp	w19, #0x8
  44842c:	b.gt	4490e4 <_obstack_memory_used@@Base+0xd8ec>
  448430:	ldr	w10, [sp, #52]
  448434:	sub	w11, w19, #0x1
  448438:	mov	w12, #0x6667                	// #26215
  44843c:	movk	w12, #0x6666, lsl #16
  448440:	smull	x10, w10, w12
  448444:	add	w11, w11, #0x1
  448448:	lsr	x12, x10, #63
  44844c:	asr	x10, x10, #34
  448450:	cmp	w11, #0x8
  448454:	add	w10, w10, w12
  448458:	b.lt	448438 <_obstack_memory_used@@Base+0xcc40>  // b.tstop
  44845c:	b	4490e8 <_obstack_memory_used@@Base+0xd8f0>
  448460:	mov	w11, #0x1                   	// #1
  448464:	eor	w8, w28, #0x1
  448468:	mov	w22, wzr
  44846c:	orr	w24, w28, w11
  448470:	and	w20, w20, w8
  448474:	mov	w8, #0x70                  	// #112
  448478:	b	448b0c <_obstack_memory_used@@Base+0xd314>
  44847c:	cmp	w9, #0x45
  448480:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  448484:	ldr	x10, [sp, #88]
  448488:	ldr	w10, [x10]
  44848c:	b	448aec <_obstack_memory_used@@Base+0xd2f4>
  448490:	adrp	x21, 455000 <_obstack_memory_used@@Base+0x19808>
  448494:	add	x21, x21, #0x331
  448498:	ldr	x3, [sp, #88]
  44849c:	ldr	x5, [sp, #56]
  4484a0:	ldr	w6, [sp, #52]
  4484a4:	mov	w23, w20
  4484a8:	and	w4, w20, #0x1
  4484ac:	mov	x1, #0xffffffffffffffff    	// #-1
  4484b0:	mov	x24, x0
  4484b4:	mov	x0, xzr
  4484b8:	mov	x20, x2
  4484bc:	mov	x2, x21
  4484c0:	bl	447ff8 <_obstack_memory_used@@Base+0xc800>
  4484c4:	ldr	x9, [sp, #104]
  4484c8:	mov	x28, x0
  4484cc:	bic	w8, w19, w19, asr #31
  4484d0:	mov	x0, x24
  4484d4:	cmp	x28, x8
  4484d8:	mov	x10, x20
  4484dc:	csel	x20, x8, x28, cc  // cc = lo, ul, last
  4484e0:	sub	x22, x9, x0
  4484e4:	mov	w1, #0x1                   	// #1
  4484e8:	cmp	x20, x22
  4484ec:	b.cs	449418 <_obstack_memory_used@@Base+0xdc20>  // b.hs, b.nlast
  4484f0:	cbz	x10, 448918 <_obstack_memory_used@@Base+0xd120>
  4484f4:	cmp	x28, x8
  4484f8:	b.cs	448ec0 <_obstack_memory_used@@Base+0xd6c8>  // b.hs, b.nlast
  4484fc:	sxtw	x8, w19
  448500:	cmp	w26, #0x30
  448504:	sub	x26, x8, x28
  448508:	b.ne	448ea8 <_obstack_memory_used@@Base+0xd6b0>  // b.any
  44850c:	mov	w1, #0x30                  	// #48
  448510:	b	448eac <_obstack_memory_used@@Base+0xd6b4>
  448514:	cmp	w9, #0x45
  448518:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  44851c:	ldr	x11, [sp, #88]
  448520:	mov	w12, #0x2493                	// #9363
  448524:	movk	w12, #0x9249, lsl #16
  448528:	ldp	w11, w10, [x11, #24]
  44852c:	sub	w10, w10, w11
  448530:	b	448574 <_obstack_memory_used@@Base+0xcd7c>
  448534:	cmp	w9, #0x45
  448538:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  44853c:	ldr	x11, [sp, #88]
  448540:	mov	w12, #0x2493                	// #9363
  448544:	movk	w12, #0x9249, lsl #16
  448548:	ldp	w10, w11, [x11, #24]
  44854c:	add	w10, w10, #0x6
  448550:	smull	x13, w10, w12
  448554:	lsr	x13, x13, #32
  448558:	add	w13, w13, w10
  44855c:	asr	w14, w13, #2
  448560:	add	w13, w14, w13, lsr #31
  448564:	lsl	w14, w13, #3
  448568:	sub	w13, w14, w13
  44856c:	sub	w10, w13, w10
  448570:	add	w10, w11, w10
  448574:	add	w10, w10, #0x7
  448578:	smull	x11, w10, w12
  44857c:	lsr	x11, x11, #32
  448580:	add	w10, w11, w10
  448584:	asr	w11, w10, #2
  448588:	add	w10, w11, w10, lsr #31
  44858c:	b	448aec <_obstack_memory_used@@Base+0xd2f4>
  448590:	cmp	w9, #0x4f
  448594:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  448598:	mov	w24, wzr
  44859c:	mov	w22, wzr
  4485a0:	mov	w8, #0x58                  	// #88
  4485a4:	b	448b0c <_obstack_memory_used@@Base+0xd314>
  4485a8:	cmp	w9, #0x45
  4485ac:	b.eq	448efc <_obstack_memory_used@@Base+0xd704>  // b.none
  4485b0:	cmp	w9, #0x4f
  4485b4:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  4485b8:	ldr	x8, [sp, #88]
  4485bc:	mov	w12, wzr
  4485c0:	mov	w13, wzr
  4485c4:	mov	w22, #0x4                   	// #4
  4485c8:	ldr	w8, [x8, #20]
  4485cc:	cmn	w8, #0x76c
  4485d0:	add	w10, w8, #0x76c
  4485d4:	cset	w11, lt  // lt = tstop
  4485d8:	b	448ba4 <_obstack_memory_used@@Base+0xd3ac>
  4485dc:	mov	x24, x0
  4485e0:	ldr	x0, [sp, #24]
  4485e4:	mov	w27, w20
  4485e8:	mov	x23, x2
  4485ec:	bl	404170 <strlen@plt>
  4485f0:	ldr	x9, [sp, #104]
  4485f4:	bic	w8, w19, w19, asr #31
  4485f8:	cmp	x0, x8
  4485fc:	csel	x20, x8, x0, cc  // cc = lo, ul, last
  448600:	sub	x9, x9, x24
  448604:	mov	w1, #0x1                   	// #1
  448608:	mov	x21, x0
  44860c:	cmp	x20, x9
  448610:	b.cs	449418 <_obstack_memory_used@@Base+0xdc20>  // b.hs, b.nlast
  448614:	mov	x2, x23
  448618:	cbz	x23, 449220 <_obstack_memory_used@@Base+0xda28>
  44861c:	cmp	x21, x8
  448620:	b.cs	44910c <_obstack_memory_used@@Base+0xd914>  // b.hs, b.nlast
  448624:	sxtw	x8, w19
  448628:	cmp	w26, #0x30
  44862c:	sub	x22, x8, x21
  448630:	b.ne	4490f0 <_obstack_memory_used@@Base+0xd8f8>  // b.any
  448634:	mov	w1, #0x30                  	// #48
  448638:	b	4490f4 <_obstack_memory_used@@Base+0xd8fc>
  44863c:	cbnz	w9, 448fac <_obstack_memory_used@@Base+0xd7b4>
  448640:	mov	w24, wzr
  448644:	mov	w22, wzr
  448648:	orr	w20, w28, w20
  44864c:	mov	w8, #0x61                  	// #97
  448650:	b	448b0c <_obstack_memory_used@@Base+0xd314>
  448654:	cmp	w9, #0x4f
  448658:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  44865c:	mov	w24, wzr
  448660:	mov	w22, wzr
  448664:	mov	w8, #0x63                  	// #99
  448668:	b	448b0c <_obstack_memory_used@@Base+0xd314>
  44866c:	cmp	w9, #0x45
  448670:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  448674:	ldr	x10, [sp, #88]
  448678:	ldr	w10, [x10, #12]
  44867c:	b	448aec <_obstack_memory_used@@Base+0xd2f4>
  448680:	cmp	w9, #0x45
  448684:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  448688:	ldr	x10, [sp, #88]
  44868c:	ldr	w10, [x10, #12]
  448690:	b	4486d4 <_obstack_memory_used@@Base+0xcedc>
  448694:	cmp	w9, #0x45
  448698:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  44869c:	ldr	x10, [sp, #88]
  4486a0:	mov	w13, wzr
  4486a4:	mov	w12, wzr
  4486a8:	mov	w22, #0x3                   	// #3
  4486ac:	ldr	w10, [x10, #28]
  4486b0:	b	448710 <_obstack_memory_used@@Base+0xcf18>
  4486b4:	cmp	w9, #0x45
  4486b8:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  4486bc:	ldr	x10, [sp, #88]
  4486c0:	ldr	w10, [x10, #8]
  4486c4:	b	4486d4 <_obstack_memory_used@@Base+0xcedc>
  4486c8:	ldr	w10, [sp, #36]
  4486cc:	cmp	w9, #0x45
  4486d0:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  4486d4:	and	w11, w26, #0xff
  4486d8:	cmp	w11, #0x2d
  4486dc:	mov	w22, #0x2                   	// #2
  4486e0:	b.eq	448af0 <_obstack_memory_used@@Base+0xd2f8>  // b.none
  4486e4:	cmp	w11, #0x30
  4486e8:	b.eq	448af0 <_obstack_memory_used@@Base+0xd2f8>  // b.none
  4486ec:	mov	w26, #0x5f                  	// #95
  4486f0:	b	448aec <_obstack_memory_used@@Base+0xd2f4>
  4486f4:	cmp	w9, #0x45
  4486f8:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  4486fc:	ldr	x10, [sp, #88]
  448700:	mov	w13, wzr
  448704:	mov	w12, wzr
  448708:	mov	w22, #0x2                   	// #2
  44870c:	ldr	w10, [x10, #16]
  448710:	cmn	w10, #0x1
  448714:	add	w10, w10, #0x1
  448718:	cset	w11, lt  // lt = tstop
  44871c:	b	448afc <_obstack_memory_used@@Base+0xd304>
  448720:	ldr	x9, [sp, #104]
  448724:	bic	w8, w19, w19, asr #31
  448728:	cmp	w8, #0x1
  44872c:	csinc	w20, w8, wzr, hi  // hi = pmore
  448730:	sub	x9, x9, x0
  448734:	cmp	x9, x20
  448738:	b.ls	449418 <_obstack_memory_used@@Base+0xdc20>  // b.plast
  44873c:	cbz	x2, 4490a8 <_obstack_memory_used@@Base+0xd8b0>
  448740:	cmp	w8, #0x2
  448744:	b.cc	4491c4 <_obstack_memory_used@@Base+0xd9cc>  // b.lo, b.ul, b.last
  448748:	sxtw	x8, w19
  44874c:	cmp	w26, #0x30
  448750:	sub	x21, x8, #0x1
  448754:	b.ne	44919c <_obstack_memory_used@@Base+0xd9a4>  // b.any
  448758:	mov	w1, #0x30                  	// #48
  44875c:	b	4491a0 <_obstack_memory_used@@Base+0xd9a8>
  448760:	ldr	x10, [sp, #88]
  448764:	mov	w14, #0xb                   	// #11
  448768:	mov	w13, wzr
  44876c:	mov	w12, wzr
  448770:	ldr	w10, [x10, #16]
  448774:	mov	w11, wzr
  448778:	mov	w22, #0x1                   	// #1
  44877c:	mul	w10, w10, w14
  448780:	asr	w10, w10, #5
  448784:	add	w10, w10, #0x1
  448788:	b	448afc <_obstack_memory_used@@Base+0xd304>
  44878c:	ldr	x9, [sp, #88]
  448790:	mov	w23, w20
  448794:	mov	x20, x0
  448798:	ldr	x0, [sp, #56]
  44879c:	ldr	x8, [x9, #48]
  4487a0:	ldp	q1, q0, [x9, #16]
  4487a4:	ldr	q2, [x9]
  4487a8:	add	x1, sp, #0x70
  4487ac:	mov	x21, x2
  4487b0:	str	x8, [sp, #160]
  4487b4:	stp	q1, q0, [sp, #128]
  4487b8:	str	q2, [sp, #112]
  4487bc:	bl	4474c4 <_obstack_memory_used@@Base+0xbccc>
  4487c0:	ldr	x28, [sp, #80]
  4487c4:	lsr	x11, x0, #63
  4487c8:	mov	x8, x0
  4487cc:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  4487d0:	movk	x9, #0x6667
  4487d4:	smulh	x9, x8, x9
  4487d8:	asr	x13, x9, #2
  4487dc:	mov	w10, #0xa                   	// #10
  4487e0:	add	x9, x13, x9, lsr #63
  4487e4:	cmp	x0, #0x0
  4487e8:	add	x12, x8, #0x9
  4487ec:	msub	w8, w9, w10, w8
  4487f0:	cneg	w8, w8, lt  // lt = tstop
  4487f4:	add	w8, w8, #0x30
  4487f8:	cmp	x12, #0x12
  4487fc:	strb	w8, [x28, #-1]!
  448800:	mov	x8, x9
  448804:	b.hi	4487cc <_obstack_memory_used@@Base+0xcfd4>  // b.pmore
  448808:	cmp	w19, #0x1
  44880c:	mov	w8, wzr
  448810:	csinc	w22, w19, wzr, gt
  448814:	mov	x0, x20
  448818:	mov	x2, x21
  44881c:	mov	w1, #0x1                   	// #1
  448820:	mov	w20, w23
  448824:	b	448c08 <_obstack_memory_used@@Base+0xd410>
  448828:	ldr	x9, [sp, #104]
  44882c:	bic	w8, w19, w19, asr #31
  448830:	cmp	w8, #0x1
  448834:	csinc	w20, w8, wzr, hi  // hi = pmore
  448838:	sub	x9, x9, x0
  44883c:	cmp	x9, x20
  448840:	b.ls	449418 <_obstack_memory_used@@Base+0xdc20>  // b.plast
  448844:	cbz	x2, 4490a8 <_obstack_memory_used@@Base+0xd8b0>
  448848:	cmp	w8, #0x2
  44884c:	b.cc	4491f4 <_obstack_memory_used@@Base+0xd9fc>  // b.lo, b.ul, b.last
  448850:	sxtw	x8, w19
  448854:	cmp	w26, #0x30
  448858:	sub	x21, x8, #0x1
  44885c:	b.ne	4491cc <_obstack_memory_used@@Base+0xd9d4>  // b.any
  448860:	mov	w1, #0x30                  	// #48
  448864:	b	4491d0 <_obstack_memory_used@@Base+0xd9d8>
  448868:	ldr	x10, [sp, #88]
  44886c:	mov	w11, #0x2493                	// #9363
  448870:	movk	w11, #0x9249, lsl #16
  448874:	mov	w22, #0x1                   	// #1
  448878:	ldr	w10, [x10, #24]
  44887c:	add	w10, w10, #0x6
  448880:	smull	x11, w10, w11
  448884:	lsr	x11, x11, #32
  448888:	add	w11, w11, w10
  44888c:	asr	w12, w11, #2
  448890:	add	w11, w12, w11, lsr #31
  448894:	sub	w11, w11, w11, lsl #3
  448898:	add	w10, w10, w11
  44889c:	add	w10, w10, #0x1
  4488a0:	b	448af0 <_obstack_memory_used@@Base+0xd2f8>
  4488a4:	cmp	w9, #0x45
  4488a8:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  4488ac:	ldr	x10, [sp, #88]
  4488b0:	mov	w22, #0x1                   	// #1
  4488b4:	ldr	w10, [x10, #24]
  4488b8:	b	448af0 <_obstack_memory_used@@Base+0xd2f8>
  4488bc:	cmp	w9, #0x4f
  4488c0:	b.eq	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.none
  4488c4:	mov	w24, wzr
  4488c8:	mov	w22, wzr
  4488cc:	mov	w8, #0x78                  	// #120
  4488d0:	b	448b0c <_obstack_memory_used@@Base+0xd314>
  4488d4:	cmp	w9, #0x45
  4488d8:	b.ne	448a64 <_obstack_memory_used@@Base+0xd26c>  // b.any
  4488dc:	mov	w24, wzr
  4488e0:	mov	w22, wzr
  4488e4:	mov	w8, #0x79                  	// #121
  4488e8:	b	448b0c <_obstack_memory_used@@Base+0xd314>
  4488ec:	cmp	w11, #0x7a
  4488f0:	b.ne	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.any
  4488f4:	add	x25, x25, x10
  4488f8:	ldr	x12, [sp, #88]
  4488fc:	ldr	w11, [x12, #32]
  448900:	tbnz	w11, #31, 449334 <_obstack_memory_used@@Base+0xdb3c>
  448904:	ldr	w12, [x12, #40]
  448908:	tbnz	w12, #31, 448ef4 <_obstack_memory_used@@Base+0xd6fc>
  44890c:	cbz	w12, 448f0c <_obstack_memory_used@@Base+0xd714>
  448910:	mov	w11, wzr
  448914:	b	448f1c <_obstack_memory_used@@Base+0xd724>
  448918:	mov	x2, xzr
  44891c:	b	449330 <_obstack_memory_used@@Base+0xdb38>
  448920:	sub	w14, w15, #0x1
  448924:	tst	w14, #0x3
  448928:	mov	w13, #0x16d                 	// #365
  44892c:	b.ne	448968 <_obstack_memory_used@@Base+0xd170>  // b.any
  448930:	mov	w15, #0x5c29                	// #23593
  448934:	mov	w16, #0xb850                	// #47184
  448938:	movk	w15, #0xc28f, lsl #16
  44893c:	movk	w16, #0x51e, lsl #16
  448940:	mov	w17, #0xd70b                	// #55051
  448944:	madd	w14, w14, w15, w16
  448948:	movk	w17, #0xa3, lsl #16
  44894c:	ror	w15, w14, #2
  448950:	ror	w14, w14, #4
  448954:	cmp	w14, w17
  448958:	mov	w14, #0x5c28                	// #23592
  44895c:	movk	w14, #0x28f, lsl #16
  448960:	ccmp	w15, w14, #0x2, cs  // cs = hs, nlast
  448964:	cinc	w13, w13, hi  // hi = pmore
  448968:	add	w12, w13, w12
  44896c:	mov	w13, #0x17e                 	// #382
  448970:	mov	w14, #0x2493                	// #9363
  448974:	sub	w10, w13, w10
  448978:	movk	w14, #0x9249, lsl #16
  44897c:	add	w12, w10, w12
  448980:	smull	x13, w12, w14
  448984:	lsr	x13, x13, #32
  448988:	add	w12, w13, w12
  44898c:	asr	w13, w12, #2
  448990:	add	w12, w13, w12, lsr #31
  448994:	lsl	w13, w12, #3
  448998:	sub	w12, w13, w12
  44899c:	sub	w10, w12, w10
  4489a0:	add	w10, w10, #0x3
  4489a4:	mov	w14, #0xffffffff            	// #-1
  4489a8:	cmp	w8, #0x47
  4489ac:	b.eq	448aa4 <_obstack_memory_used@@Base+0xd2ac>  // b.none
  4489b0:	cmp	w8, #0x67
  4489b4:	b.ne	448acc <_obstack_memory_used@@Base+0xd2d4>  // b.any
  4489b8:	mov	w10, #0x851f                	// #34079
  4489bc:	movk	w10, #0x51eb, lsl #16
  4489c0:	smull	x13, w11, w10
  4489c4:	lsr	x15, x13, #63
  4489c8:	asr	x13, x13, #37
  4489cc:	mov	w12, #0x64                  	// #100
  4489d0:	add	w13, w13, w15
  4489d4:	msub	w13, w13, w12, w11
  4489d8:	add	w13, w14, w13
  4489dc:	smull	x10, w13, w10
  4489e0:	lsr	x15, x10, #63
  4489e4:	asr	x10, x10, #37
  4489e8:	add	w10, w10, w15
  4489ec:	msub	w10, w10, w12, w13
  4489f0:	tbz	w10, #31, 448aec <_obstack_memory_used@@Base+0xd2f4>
  4489f4:	mov	w12, #0xfffff894            	// #-1900
  4489f8:	sub	w12, w12, w14
  4489fc:	add	w13, w10, #0x64
  448a00:	cmp	w11, w12
  448a04:	csneg	w10, w13, w10, ge  // ge = tcont
  448a08:	b	448aec <_obstack_memory_used@@Base+0xd2f4>
  448a0c:	ldr	x10, [sp, #88]
  448a10:	mov	w11, #0x851f                	// #34079
  448a14:	movk	w11, #0x51eb, lsl #16
  448a18:	mov	w14, #0x64                  	// #100
  448a1c:	ldrsw	x10, [x10, #20]
  448a20:	mov	w13, wzr
  448a24:	mov	w12, wzr
  448a28:	mov	w22, #0x2                   	// #2
  448a2c:	mul	x11, x10, x11
  448a30:	lsr	x15, x11, #63
  448a34:	asr	x11, x11, #37
  448a38:	add	w15, w11, w15
  448a3c:	cmn	x10, #0x76c
  448a40:	msub	w10, w15, w14, w10
  448a44:	cset	w11, lt  // lt = tstop
  448a48:	cset	w14, gt
  448a4c:	cmp	w10, #0x0
  448a50:	cset	w10, lt  // lt = tstop
  448a54:	and	w10, w14, w10
  448a58:	sub	w10, w15, w10
  448a5c:	add	w10, w10, #0x13
  448a60:	b	448afc <_obstack_memory_used@@Base+0xd304>
  448a64:	ldr	x10, [sp, #88]
  448a68:	mov	w11, #0x851f                	// #34079
  448a6c:	movk	w11, #0x51eb, lsl #16
  448a70:	mov	w12, #0x64                  	// #100
  448a74:	ldrsw	x10, [x10, #20]
  448a78:	mul	x11, x10, x11
  448a7c:	lsr	x13, x11, #63
  448a80:	asr	x11, x11, #37
  448a84:	add	w11, w11, w13
  448a88:	cmn	w10, #0x76c
  448a8c:	msub	w10, w11, w12, w10
  448a90:	add	w11, w10, #0x64
  448a94:	csneg	w11, w11, w10, ge  // ge = tcont
  448a98:	cmp	w10, #0x0
  448a9c:	csel	w10, w11, w10, lt  // lt = tstop
  448aa0:	b	448aec <_obstack_memory_used@@Base+0xd2f4>
  448aa4:	mov	w10, #0xfffff894            	// #-1900
  448aa8:	add	w15, w11, w14
  448aac:	sub	w14, w10, w14
  448ab0:	cmp	w11, w14
  448ab4:	mov	w13, wzr
  448ab8:	mov	w12, wzr
  448abc:	add	w10, w15, #0x76c
  448ac0:	cset	w11, lt  // lt = tstop
  448ac4:	mov	w22, #0x4                   	// #4
  448ac8:	b	448afc <_obstack_memory_used@@Base+0xd304>
  448acc:	mov	w11, #0x2493                	// #9363
  448ad0:	movk	w11, #0x9249, lsl #16
  448ad4:	smull	x11, w10, w11
  448ad8:	lsr	x11, x11, #32
  448adc:	add	w10, w11, w10
  448ae0:	asr	w11, w10, #2
  448ae4:	add	w10, w11, w10, lsr #31
  448ae8:	add	w10, w10, #0x1
  448aec:	mov	w22, #0x2                   	// #2
  448af0:	mov	w13, wzr
  448af4:	mov	w12, wzr
  448af8:	lsr	w11, w10, #31
  448afc:	cmp	w9, #0x4f
  448b00:	b.ne	448ba4 <_obstack_memory_used@@Base+0xd3ac>  // b.any
  448b04:	cbnz	w11, 448ba4 <_obstack_memory_used@@Base+0xd3ac>
  448b08:	mov	w24, wzr
  448b0c:	mov	w10, #0x2520                	// #9504
  448b10:	sturh	w10, [x29, #-40]
  448b14:	ldr	x10, [sp, #72]
  448b18:	mov	x23, x2
  448b1c:	mov	x27, x0
  448b20:	cbz	w9, 448b2c <_obstack_memory_used@@Base+0xd334>
  448b24:	ldr	x10, [sp, #64]
  448b28:	sturb	w9, [x29, #-38]
  448b2c:	ldr	x3, [sp, #88]
  448b30:	add	x0, sp, #0x70
  448b34:	sub	x2, x29, #0x28
  448b38:	mov	w1, #0x400                 	// #1024
  448b3c:	strb	w8, [x10]
  448b40:	strb	wzr, [x10, #1]
  448b44:	bl	4042f0 <strftime@plt>
  448b48:	cbz	x0, 448c58 <_obstack_memory_used@@Base+0xd460>
  448b4c:	ldr	x9, [sp, #104]
  448b50:	sub	x28, x0, #0x1
  448b54:	bic	w8, w19, w19, asr #31
  448b58:	cmp	x28, x8
  448b5c:	mov	w10, w22
  448b60:	csel	x22, x8, x28, cc  // cc = lo, ul, last
  448b64:	sub	x9, x9, x27
  448b68:	mov	x21, x0
  448b6c:	cmp	x22, x9
  448b70:	mov	w1, #0x1                   	// #1
  448b74:	b.cs	449418 <_obstack_memory_used@@Base+0xdc20>  // b.hs, b.nlast
  448b78:	mov	x2, x23
  448b7c:	cbz	x23, 448e48 <_obstack_memory_used@@Base+0xd650>
  448b80:	cbnz	w10, 448da8 <_obstack_memory_used@@Base+0xd5b0>
  448b84:	cmp	x28, x8
  448b88:	b.cs	448da8 <_obstack_memory_used@@Base+0xd5b0>  // b.hs, b.nlast
  448b8c:	sxtw	x8, w19
  448b90:	cmp	w26, #0x30
  448b94:	sub	x19, x8, x28
  448b98:	b.ne	448d8c <_obstack_memory_used@@Base+0xd594>  // b.any
  448b9c:	mov	w1, #0x30                  	// #48
  448ba0:	b	448d90 <_obstack_memory_used@@Base+0xd598>
  448ba4:	ldr	x28, [sp, #80]
  448ba8:	cmp	w11, #0x0
  448bac:	cneg	w8, w10, ne  // ne = any
  448bb0:	tbz	w13, #0, 448bbc <_obstack_memory_used@@Base+0xd3c4>
  448bb4:	mov	w9, #0x3a                  	// #58
  448bb8:	strb	w9, [x28, #-1]!
  448bbc:	mov	w9, #0xcccd                	// #52429
  448bc0:	movk	w9, #0xcccc, lsl #16
  448bc4:	umull	x9, w8, w9
  448bc8:	mov	w10, #0xa                   	// #10
  448bcc:	lsr	x9, x9, #35
  448bd0:	msub	w10, w9, w10, w8
  448bd4:	orr	w10, w10, #0x30
  448bd8:	asr	w13, w13, #1
  448bdc:	cmp	w8, #0x9
  448be0:	strb	w10, [x28, #-1]!
  448be4:	mov	w8, w9
  448be8:	b.hi	448bb0 <_obstack_memory_used@@Base+0xd3b8>  // b.pmore
  448bec:	mov	w8, w9
  448bf0:	cbnz	w13, 448bb0 <_obstack_memory_used@@Base+0xd3b8>
  448bf4:	cmp	w22, w19
  448bf8:	csel	w22, w19, w22, lt  // lt = tstop
  448bfc:	cmp	w12, #0x0
  448c00:	mov	w8, #0x2b                  	// #43
  448c04:	csel	w8, w8, wzr, ne  // ne = any
  448c08:	cmp	w11, #0x0
  448c0c:	mov	w9, #0x2d                  	// #45
  448c10:	csel	w24, w9, w8, ne  // ne = any
  448c14:	cmp	w26, #0x2d
  448c18:	str	w20, [sp, #48]
  448c1c:	b.ne	448c68 <_obstack_memory_used@@Base+0xd470>  // b.any
  448c20:	cbz	w24, 449250 <_obstack_memory_used@@Base+0xda58>
  448c24:	ldr	x9, [sp, #104]
  448c28:	bic	w8, w19, w19, asr #31
  448c2c:	cmp	w8, #0x1
  448c30:	csinc	w20, w8, wzr, hi  // hi = pmore
  448c34:	sub	x9, x9, x0
  448c38:	cmp	x9, x20
  448c3c:	b.ls	449418 <_obstack_memory_used@@Base+0xdc20>  // b.plast
  448c40:	cbz	x2, 44924c <_obstack_memory_used@@Base+0xda54>
  448c44:	cbnz	w22, 449248 <_obstack_memory_used@@Base+0xda50>
  448c48:	cmp	w8, #0x2
  448c4c:	b.cc	449248 <_obstack_memory_used@@Base+0xda50>  // b.lo, b.ul, b.last
  448c50:	sxtw	x8, w19
  448c54:	b	448d10 <_obstack_memory_used@@Base+0xd518>
  448c58:	mov	x0, x27
  448c5c:	mov	x2, x23
  448c60:	mov	w1, #0x1                   	// #1
  448c64:	b	449334 <_obstack_memory_used@@Base+0xdb3c>
  448c68:	ldr	x10, [sp, #80]
  448c6c:	sxtw	x8, w22
  448c70:	cmp	w24, #0x0
  448c74:	cset	w9, ne  // ne = any
  448c78:	sub	x10, x8, x10
  448c7c:	add	x10, x10, x28
  448c80:	sub	x20, x10, x9
  448c84:	cmp	w20, #0x1
  448c88:	b.lt	448d40 <_obstack_memory_used@@Base+0xd548>  // b.tstop
  448c8c:	cmp	w26, #0x5f
  448c90:	b.ne	448e54 <_obstack_memory_used@@Base+0xd65c>  // b.any
  448c94:	ldr	x8, [sp, #104]
  448c98:	sxtw	x21, w20
  448c9c:	sub	x8, x8, x0
  448ca0:	cmp	x21, x8
  448ca4:	b.cs	449418 <_obstack_memory_used@@Base+0xdc20>  // b.hs, b.nlast
  448ca8:	cbz	x2, 448cd4 <_obstack_memory_used@@Base+0xd4dc>
  448cac:	mov	w1, #0x20                  	// #32
  448cb0:	mov	x27, x0
  448cb4:	mov	x0, x2
  448cb8:	mov	x23, x2
  448cbc:	mov	x2, x21
  448cc0:	bl	4045e0 <memset@plt>
  448cc4:	mov	x2, x23
  448cc8:	mov	w1, #0x1                   	// #1
  448ccc:	mov	x0, x27
  448cd0:	add	x2, x23, x21
  448cd4:	subs	w8, w19, w20
  448cd8:	add	x0, x21, x0
  448cdc:	csel	w19, w8, wzr, gt
  448ce0:	cbz	w24, 449250 <_obstack_memory_used@@Base+0xda58>
  448ce4:	ldr	x8, [sp, #104]
  448ce8:	cmp	w19, #0x1
  448cec:	csinc	w20, w19, wzr, hi  // hi = pmore
  448cf0:	sub	x8, x8, x0
  448cf4:	cmp	x8, x20
  448cf8:	b.ls	449418 <_obstack_memory_used@@Base+0xdc20>  // b.plast
  448cfc:	cbz	x2, 44924c <_obstack_memory_used@@Base+0xda54>
  448d00:	cbnz	w22, 449248 <_obstack_memory_used@@Base+0xda50>
  448d04:	cmp	w19, #0x2
  448d08:	b.cc	449248 <_obstack_memory_used@@Base+0xda50>  // b.lo, b.ul, b.last
  448d0c:	mov	w8, w19
  448d10:	sub	x21, x8, #0x1
  448d14:	mov	w1, #0x20                  	// #32
  448d18:	mov	x27, x0
  448d1c:	mov	x0, x2
  448d20:	mov	x23, x2
  448d24:	mov	x2, x21
  448d28:	bl	4045e0 <memset@plt>
  448d2c:	mov	x2, x23
  448d30:	mov	w1, #0x1                   	// #1
  448d34:	mov	x0, x27
  448d38:	add	x2, x23, x21
  448d3c:	b	449248 <_obstack_memory_used@@Base+0xda50>
  448d40:	cbz	w24, 449250 <_obstack_memory_used@@Base+0xda58>
  448d44:	ldr	x9, [sp, #104]
  448d48:	bic	w8, w19, w19, asr #31
  448d4c:	cmp	w8, #0x1
  448d50:	csinc	w20, w8, wzr, hi  // hi = pmore
  448d54:	sub	x9, x9, x0
  448d58:	cmp	x9, x20
  448d5c:	b.ls	449418 <_obstack_memory_used@@Base+0xdc20>  // b.plast
  448d60:	cbz	x2, 44924c <_obstack_memory_used@@Base+0xda54>
  448d64:	cbnz	w22, 449248 <_obstack_memory_used@@Base+0xda50>
  448d68:	cmp	w8, #0x2
  448d6c:	b.cc	449248 <_obstack_memory_used@@Base+0xda50>  // b.lo, b.ul, b.last
  448d70:	sxtw	x8, w19
  448d74:	mov	x27, x0
  448d78:	cmp	w26, #0x30
  448d7c:	sub	x21, x8, #0x1
  448d80:	b.ne	449228 <_obstack_memory_used@@Base+0xda30>  // b.any
  448d84:	mov	w1, #0x30                  	// #48
  448d88:	b	44922c <_obstack_memory_used@@Base+0xda34>
  448d8c:	mov	w1, #0x20                  	// #32
  448d90:	mov	x0, x2
  448d94:	mov	x2, x19
  448d98:	bl	4045e0 <memset@plt>
  448d9c:	mov	x2, x23
  448da0:	mov	w1, #0x1                   	// #1
  448da4:	add	x2, x23, x19
  448da8:	tbz	w24, #0, 448de8 <_obstack_memory_used@@Base+0xd5f0>
  448dac:	cbz	x28, 448e44 <_obstack_memory_used@@Base+0xd64c>
  448db0:	mov	x19, x2
  448db4:	bl	404390 <__ctype_tolower_loc@plt>
  448db8:	ldr	x11, [sp, #40]
  448dbc:	mov	w1, #0x1                   	// #1
  448dc0:	mov	x2, x19
  448dc4:	sub	x8, x19, #0x2
  448dc8:	ldr	x9, [x0]
  448dcc:	ldrb	w10, [x11, x21]
  448dd0:	ldr	w9, [x9, x10, lsl #2]
  448dd4:	strb	w9, [x8, x21]
  448dd8:	sub	x21, x21, #0x1
  448ddc:	cmp	x21, #0x1
  448de0:	b.ne	448dc8 <_obstack_memory_used@@Base+0xd5d0>  // b.any
  448de4:	b	448e44 <_obstack_memory_used@@Base+0xd64c>
  448de8:	tbz	w20, #0, 448e28 <_obstack_memory_used@@Base+0xd630>
  448dec:	cbz	x28, 448e44 <_obstack_memory_used@@Base+0xd64c>
  448df0:	mov	x19, x2
  448df4:	bl	404720 <__ctype_toupper_loc@plt>
  448df8:	ldr	x11, [sp, #40]
  448dfc:	mov	w1, #0x1                   	// #1
  448e00:	mov	x2, x19
  448e04:	sub	x8, x19, #0x2
  448e08:	ldr	x9, [x0]
  448e0c:	ldrb	w10, [x11, x21]
  448e10:	ldr	w9, [x9, x10, lsl #2]
  448e14:	strb	w9, [x8, x21]
  448e18:	sub	x21, x21, #0x1
  448e1c:	cmp	x21, #0x1
  448e20:	b.ne	448e08 <_obstack_memory_used@@Base+0xd610>  // b.any
  448e24:	b	448e44 <_obstack_memory_used@@Base+0xd64c>
  448e28:	ldr	x1, [sp, #16]
  448e2c:	mov	x0, x2
  448e30:	mov	x19, x2
  448e34:	mov	x2, x28
  448e38:	bl	4040f0 <memcpy@plt>
  448e3c:	mov	w1, #0x1                   	// #1
  448e40:	mov	x2, x19
  448e44:	add	x2, x2, x28
  448e48:	mov	x0, x27
  448e4c:	add	x0, x22, x27
  448e50:	b	449334 <_obstack_memory_used@@Base+0xdb3c>
  448e54:	ldr	x9, [sp, #104]
  448e58:	sub	x9, x9, x0
  448e5c:	cmp	x9, x8
  448e60:	b.ls	449418 <_obstack_memory_used@@Base+0xdc20>  // b.plast
  448e64:	cbz	w24, 449370 <_obstack_memory_used@@Base+0xdb78>
  448e68:	bic	w8, w19, w19, asr #31
  448e6c:	cmp	w8, #0x1
  448e70:	csinc	w27, w8, wzr, hi  // hi = pmore
  448e74:	cmp	x9, x27
  448e78:	b.ls	449418 <_obstack_memory_used@@Base+0xdc20>  // b.plast
  448e7c:	cbz	x2, 44936c <_obstack_memory_used@@Base+0xdb74>
  448e80:	cbnz	w22, 449368 <_obstack_memory_used@@Base+0xdb70>
  448e84:	cmp	w8, #0x2
  448e88:	b.cc	449368 <_obstack_memory_used@@Base+0xdb70>  // b.lo, b.ul, b.last
  448e8c:	sxtw	x8, w19
  448e90:	cmp	w26, #0x30
  448e94:	sub	x21, x8, #0x1
  448e98:	str	x0, [sp]
  448e9c:	b.ne	449348 <_obstack_memory_used@@Base+0xdb50>  // b.any
  448ea0:	mov	w1, #0x30                  	// #48
  448ea4:	b	44934c <_obstack_memory_used@@Base+0xdb54>
  448ea8:	mov	w1, #0x20                  	// #32
  448eac:	mov	x0, x10
  448eb0:	mov	x2, x26
  448eb4:	mov	x19, x10
  448eb8:	bl	4045e0 <memset@plt>
  448ebc:	add	x10, x19, x26
  448ec0:	ldr	x3, [sp, #88]
  448ec4:	ldr	x5, [sp, #56]
  448ec8:	ldr	w6, [sp, #52]
  448ecc:	and	w4, w23, #0x1
  448ed0:	mov	x0, x10
  448ed4:	mov	x1, x22
  448ed8:	mov	x2, x21
  448edc:	mov	x19, x10
  448ee0:	bl	447ff8 <_obstack_memory_used@@Base+0xc800>
  448ee4:	mov	x2, x19
  448ee8:	add	x2, x19, x28
  448eec:	mov	x0, x24
  448ef0:	b	44932c <_obstack_memory_used@@Base+0xdb34>
  448ef4:	mov	w11, #0x1                   	// #1
  448ef8:	b	448f1c <_obstack_memory_used@@Base+0xd724>
  448efc:	mov	w24, wzr
  448f00:	mov	w22, wzr
  448f04:	mov	w8, #0x59                  	// #89
  448f08:	b	448b0c <_obstack_memory_used@@Base+0xd314>
  448f0c:	ldr	x11, [sp, #24]
  448f10:	ldrb	w11, [x11]
  448f14:	cmp	w11, #0x2d
  448f18:	cset	w11, eq  // eq = none
  448f1c:	cmp	x10, #0x3
  448f20:	b.hi	448fac <_obstack_memory_used@@Base+0xd7b4>  // b.pmore
  448f24:	mov	w13, #0x8889                	// #34953
  448f28:	movk	w13, #0x8888, lsl #16
  448f2c:	adrp	x15, 456000 <_obstack_memory_used@@Base+0x1a808>
  448f30:	add	x15, x15, #0xac
  448f34:	smull	x16, w12, w13
  448f38:	adr	x17, 448f94 <_obstack_memory_used@@Base+0xd79c>
  448f3c:	ldrh	w18, [x15, x10, lsl #1]
  448f40:	add	x17, x17, x18, lsl #2
  448f44:	lsr	x10, x16, #32
  448f48:	mov	w14, #0xb3c5                	// #46021
  448f4c:	add	w10, w10, w12
  448f50:	movk	w14, #0x91a2, lsl #16
  448f54:	asr	w15, w10, #5
  448f58:	smull	x14, w12, w14
  448f5c:	add	w15, w15, w10, lsr #31
  448f60:	lsr	x14, x14, #32
  448f64:	smull	x13, w15, w13
  448f68:	add	w14, w14, w12
  448f6c:	lsr	x13, x13, #32
  448f70:	asr	w10, w14, #11
  448f74:	add	w13, w13, w15
  448f78:	add	w10, w10, w14, lsr #31
  448f7c:	asr	w14, w13, #5
  448f80:	add	w13, w14, w13, lsr #31
  448f84:	mov	w16, #0x3c                  	// #60
  448f88:	msub	w14, w13, w16, w15
  448f8c:	msub	w13, w15, w16, w12
  448f90:	br	x17
  448f94:	mov	w12, #0x64                  	// #100
  448f98:	mov	w13, wzr
  448f9c:	mov	w22, #0x5                   	// #5
  448fa0:	madd	w10, w10, w12, w14
  448fa4:	mov	w12, #0x1                   	// #1
  448fa8:	b	448afc <_obstack_memory_used@@Base+0xd304>
  448fac:	mov	w23, w20
  448fb0:	sub	x8, x25, #0x1
  448fb4:	mov	w9, #0x1                   	// #1
  448fb8:	sub	x27, x1, x9
  448fbc:	ldrb	w10, [x25, x27]
  448fc0:	mov	x24, x9
  448fc4:	mov	x28, x8
  448fc8:	add	x9, x9, #0x1
  448fcc:	cmp	w10, #0x25
  448fd0:	sub	x8, x8, #0x1
  448fd4:	b.ne	448fb8 <_obstack_memory_used@@Base+0xd7c0>  // b.any
  448fd8:	ldr	x9, [sp, #104]
  448fdc:	bic	w8, w19, w19, asr #31
  448fe0:	cmp	w8, w24
  448fe4:	csel	w20, w24, w8, cc  // cc = lo, ul, last
  448fe8:	sub	x9, x9, x0
  448fec:	cmp	x9, x20
  448ff0:	b.ls	449418 <_obstack_memory_used@@Base+0xdc20>  // b.plast
  448ff4:	cbz	x2, 4490a8 <_obstack_memory_used@@Base+0xd8b0>
  448ff8:	cmp	w8, w24
  448ffc:	and	x21, x24, #0xffffffff
  449000:	b.ls	449040 <_obstack_memory_used@@Base+0xd848>  // b.plast
  449004:	sxtw	x8, w19
  449008:	cmp	w26, #0x30
  44900c:	sub	x22, x8, x21
  449010:	b.ne	44901c <_obstack_memory_used@@Base+0xd824>  // b.any
  449014:	mov	w1, #0x30                  	// #48
  449018:	b	449020 <_obstack_memory_used@@Base+0xd828>
  44901c:	mov	w1, #0x20                  	// #32
  449020:	mov	x19, x0
  449024:	mov	x0, x2
  449028:	mov	x26, x2
  44902c:	mov	x2, x22
  449030:	bl	4045e0 <memset@plt>
  449034:	mov	x2, x26
  449038:	mov	x0, x19
  44903c:	add	x2, x26, x22
  449040:	mov	x19, x0
  449044:	tbz	w23, #0, 449084 <_obstack_memory_used@@Base+0xd88c>
  449048:	mov	x22, x2
  44904c:	bl	404720 <__ctype_toupper_loc@plt>
  449050:	mov	w1, #0x1                   	// #1
  449054:	mov	x2, x22
  449058:	sub	x8, x22, #0x1
  44905c:	add	x9, x28, w24, uxtw
  449060:	mov	x10, x21
  449064:	ldr	x11, [x0]
  449068:	ldrb	w12, [x9], #-1
  44906c:	ldr	w11, [x11, x12, lsl #2]
  449070:	subs	x12, x10, #0x1
  449074:	strb	w11, [x8, x10]
  449078:	mov	x10, x12
  44907c:	b.ne	449064 <_obstack_memory_used@@Base+0xd86c>  // b.any
  449080:	b	4490a0 <_obstack_memory_used@@Base+0xd8a8>
  449084:	add	x1, x25, x27
  449088:	mov	x0, x2
  44908c:	mov	x22, x2
  449090:	mov	x2, x21
  449094:	bl	4040f0 <memcpy@plt>
  449098:	mov	w1, #0x1                   	// #1
  44909c:	mov	x2, x22
  4490a0:	add	x2, x2, x21
  4490a4:	mov	x0, x19
  4490a8:	add	x0, x0, x20
  4490ac:	b	449334 <_obstack_memory_used@@Base+0xdb3c>
  4490b0:	ldr	w10, [sp, #52]
  4490b4:	mov	w19, #0x9                   	// #9
  4490b8:	mov	w22, #0x9                   	// #9
  4490bc:	b	448af0 <_obstack_memory_used@@Base+0xd2f8>
  4490c0:	cbz	w13, 4493b0 <_obstack_memory_used@@Base+0xdbb8>
  4490c4:	mov	w15, #0x2710                	// #10000
  4490c8:	mov	w16, #0x64                  	// #100
  4490cc:	madd	w10, w10, w15, w13
  4490d0:	mov	w22, #0x9                   	// #9
  4490d4:	mov	w12, #0x1                   	// #1
  4490d8:	madd	w10, w14, w16, w10
  4490dc:	mov	w13, #0x14                  	// #20
  4490e0:	b	448afc <_obstack_memory_used@@Base+0xd304>
  4490e4:	ldr	w10, [sp, #52]
  4490e8:	mov	w22, w19
  4490ec:	b	448af0 <_obstack_memory_used@@Base+0xd2f8>
  4490f0:	mov	w1, #0x20                  	// #32
  4490f4:	mov	x0, x2
  4490f8:	mov	x2, x22
  4490fc:	bl	4045e0 <memset@plt>
  449100:	mov	x2, x23
  449104:	mov	w1, #0x1                   	// #1
  449108:	add	x2, x23, x22
  44910c:	tbz	w28, #0, 449150 <_obstack_memory_used@@Base+0xd958>
  449110:	cbz	x21, 44921c <_obstack_memory_used@@Base+0xda24>
  449114:	mov	x19, x2
  449118:	bl	404390 <__ctype_tolower_loc@plt>
  44911c:	ldr	x12, [sp, #8]
  449120:	mov	w1, #0x1                   	// #1
  449124:	mov	x2, x19
  449128:	sub	x8, x19, #0x1
  44912c:	mov	x9, x21
  449130:	ldr	x10, [x0]
  449134:	ldrb	w11, [x12, x9]
  449138:	ldr	w10, [x10, x11, lsl #2]
  44913c:	subs	x11, x9, #0x1
  449140:	strb	w10, [x8, x9]
  449144:	mov	x9, x11
  449148:	b.ne	449130 <_obstack_memory_used@@Base+0xd938>  // b.any
  44914c:	b	44921c <_obstack_memory_used@@Base+0xda24>
  449150:	eor	w8, w28, #0x1
  449154:	and	w8, w27, w8
  449158:	tbz	w8, #0, 449200 <_obstack_memory_used@@Base+0xda08>
  44915c:	cbz	x21, 44921c <_obstack_memory_used@@Base+0xda24>
  449160:	mov	x19, x2
  449164:	bl	404720 <__ctype_toupper_loc@plt>
  449168:	ldr	x12, [sp, #8]
  44916c:	mov	w1, #0x1                   	// #1
  449170:	mov	x2, x19
  449174:	sub	x8, x19, #0x1
  449178:	mov	x9, x21
  44917c:	ldr	x10, [x0]
  449180:	ldrb	w11, [x12, x9]
  449184:	ldr	w10, [x10, x11, lsl #2]
  449188:	subs	x11, x9, #0x1
  44918c:	strb	w10, [x8, x9]
  449190:	mov	x9, x11
  449194:	b.ne	44917c <_obstack_memory_used@@Base+0xd984>  // b.any
  449198:	b	44921c <_obstack_memory_used@@Base+0xda24>
  44919c:	mov	w1, #0x20                  	// #32
  4491a0:	mov	x19, x0
  4491a4:	mov	x0, x2
  4491a8:	mov	x22, x2
  4491ac:	mov	x2, x21
  4491b0:	bl	4045e0 <memset@plt>
  4491b4:	mov	x2, x22
  4491b8:	mov	w1, #0x1                   	// #1
  4491bc:	mov	x0, x19
  4491c0:	add	x2, x22, x21
  4491c4:	mov	w8, #0xa                   	// #10
  4491c8:	b	4491f8 <_obstack_memory_used@@Base+0xda00>
  4491cc:	mov	w1, #0x20                  	// #32
  4491d0:	mov	x19, x0
  4491d4:	mov	x0, x2
  4491d8:	mov	x22, x2
  4491dc:	mov	x2, x21
  4491e0:	bl	4045e0 <memset@plt>
  4491e4:	mov	x2, x22
  4491e8:	mov	w1, #0x1                   	// #1
  4491ec:	mov	x0, x19
  4491f0:	add	x2, x22, x21
  4491f4:	mov	w8, #0x9                   	// #9
  4491f8:	strb	w8, [x2], #1
  4491fc:	b	4490a8 <_obstack_memory_used@@Base+0xd8b0>
  449200:	ldr	x1, [sp, #24]
  449204:	mov	x0, x2
  449208:	mov	x19, x2
  44920c:	mov	x2, x21
  449210:	bl	4040f0 <memcpy@plt>
  449214:	mov	w1, #0x1                   	// #1
  449218:	mov	x2, x19
  44921c:	add	x2, x2, x21
  449220:	mov	x0, x24
  449224:	b	449330 <_obstack_memory_used@@Base+0xdb38>
  449228:	mov	w1, #0x20                  	// #32
  44922c:	mov	x0, x2
  449230:	mov	x23, x2
  449234:	mov	x2, x21
  449238:	bl	4045e0 <memset@plt>
  44923c:	add	x2, x23, x21
  449240:	mov	x0, x27
  449244:	mov	w1, #0x1                   	// #1
  449248:	strb	w24, [x2], #1
  44924c:	add	x0, x0, x20
  449250:	bic	w8, w19, w19, asr #31
  449254:	ldr	x9, [sp, #80]
  449258:	sub	x21, x9, x28
  44925c:	mov	w9, w8
  449260:	cmp	x21, w8, uxtw
  449264:	ldr	x8, [sp, #104]
  449268:	csel	x20, x9, x21, cc  // cc = lo, ul, last
  44926c:	sub	x8, x8, x0
  449270:	cmp	x20, x8
  449274:	b.cs	449418 <_obstack_memory_used@@Base+0xdc20>  // b.hs, b.nlast
  449278:	cbz	x2, 449330 <_obstack_memory_used@@Base+0xdb38>
  44927c:	cbnz	w22, 4492c4 <_obstack_memory_used@@Base+0xdacc>
  449280:	cmp	x21, x9
  449284:	b.cs	4492c4 <_obstack_memory_used@@Base+0xdacc>  // b.hs, b.nlast
  449288:	sxtw	x8, w19
  44928c:	cmp	w26, #0x30
  449290:	sub	x22, x8, x21
  449294:	b.ne	4492a0 <_obstack_memory_used@@Base+0xdaa8>  // b.any
  449298:	mov	w1, #0x30                  	// #48
  44929c:	b	4492a4 <_obstack_memory_used@@Base+0xdaac>
  4492a0:	mov	w1, #0x20                  	// #32
  4492a4:	mov	x19, x0
  4492a8:	mov	x0, x2
  4492ac:	mov	x23, x2
  4492b0:	mov	x2, x22
  4492b4:	bl	4045e0 <memset@plt>
  4492b8:	mov	x2, x23
  4492bc:	mov	x0, x19
  4492c0:	add	x2, x23, x22
  4492c4:	ldr	w8, [sp, #48]
  4492c8:	mov	x19, x0
  4492cc:	tbz	w8, #0, 44930c <_obstack_memory_used@@Base+0xdb14>
  4492d0:	cbz	x21, 449324 <_obstack_memory_used@@Base+0xdb2c>
  4492d4:	mov	x22, x2
  4492d8:	bl	404720 <__ctype_toupper_loc@plt>
  4492dc:	mov	x2, x22
  4492e0:	sub	x8, x22, #0x1
  4492e4:	sub	x9, x28, #0x1
  4492e8:	mov	x10, x21
  4492ec:	ldr	x11, [x0]
  4492f0:	ldrb	w12, [x9, x10]
  4492f4:	ldr	w11, [x11, x12, lsl #2]
  4492f8:	subs	x12, x10, #0x1
  4492fc:	strb	w11, [x8, x10]
  449300:	mov	x10, x12
  449304:	b.ne	4492ec <_obstack_memory_used@@Base+0xdaf4>  // b.any
  449308:	b	449324 <_obstack_memory_used@@Base+0xdb2c>
  44930c:	mov	x0, x2
  449310:	mov	x1, x28
  449314:	mov	x22, x2
  449318:	mov	x2, x21
  44931c:	bl	4040f0 <memcpy@plt>
  449320:	mov	x2, x22
  449324:	add	x2, x2, x21
  449328:	mov	x0, x19
  44932c:	mov	w1, #0x1                   	// #1
  449330:	add	x0, x20, x0
  449334:	ldrb	w8, [x25, #1]!
  449338:	cbnz	w8, 4480ac <_obstack_memory_used@@Base+0xc8b4>
  44933c:	b	449404 <_obstack_memory_used@@Base+0xdc0c>
  449340:	mov	w8, #0x25                  	// #37
  449344:	b	4491f8 <_obstack_memory_used@@Base+0xda00>
  449348:	mov	w1, #0x20                  	// #32
  44934c:	mov	x0, x2
  449350:	mov	x19, x2
  449354:	mov	x2, x21
  449358:	bl	4045e0 <memset@plt>
  44935c:	ldr	x0, [sp]
  449360:	add	x2, x19, x21
  449364:	mov	w1, #0x1                   	// #1
  449368:	strb	w24, [x2], #1
  44936c:	add	x0, x0, x27
  449370:	sxtw	x21, w20
  449374:	cbz	x2, 4493a0 <_obstack_memory_used@@Base+0xdba8>
  449378:	mov	w1, #0x30                  	// #48
  44937c:	mov	x19, x0
  449380:	mov	x0, x2
  449384:	mov	x20, x2
  449388:	mov	x2, x21
  44938c:	bl	4045e0 <memset@plt>
  449390:	mov	x2, x20
  449394:	mov	w1, #0x1                   	// #1
  449398:	mov	x0, x19
  44939c:	add	x2, x20, x21
  4493a0:	mov	w19, wzr
  4493a4:	mov	w8, wzr
  4493a8:	add	x0, x0, x21
  4493ac:	b	449254 <_obstack_memory_used@@Base+0xda5c>
  4493b0:	cbz	w14, 4493f4 <_obstack_memory_used@@Base+0xdbfc>
  4493b4:	mov	w13, #0x64                  	// #100
  4493b8:	mov	w22, #0x6                   	// #6
  4493bc:	mov	w12, #0x1                   	// #1
  4493c0:	madd	w10, w10, w13, w14
  4493c4:	mov	w13, #0x4                   	// #4
  4493c8:	b	448afc <_obstack_memory_used@@Base+0xd304>
  4493cc:	mov	w1, #0x20                  	// #32
  4493d0:	mov	x0, x2
  4493d4:	mov	x19, x2
  4493d8:	mov	x2, x21
  4493dc:	bl	4045e0 <memset@plt>
  4493e0:	ldrb	w8, [x25]
  4493e4:	add	x2, x19, x21
  4493e8:	mov	x0, x22
  4493ec:	mov	w1, #0x1                   	// #1
  4493f0:	b	4491f8 <_obstack_memory_used@@Base+0xda00>
  4493f4:	mov	w13, wzr
  4493f8:	mov	w22, #0x3                   	// #3
  4493fc:	b	448fa4 <_obstack_memory_used@@Base+0xd7ac>
  449400:	mov	x0, xzr
  449404:	ldr	x8, [sp, #104]
  449408:	cbz	x8, 44941c <_obstack_memory_used@@Base+0xdc24>
  44940c:	cbz	x2, 44941c <_obstack_memory_used@@Base+0xdc24>
  449410:	strb	wzr, [x2]
  449414:	b	44941c <_obstack_memory_used@@Base+0xdc24>
  449418:	mov	x0, xzr
  44941c:	add	sp, sp, #0x4a0
  449420:	ldp	x20, x19, [sp, #80]
  449424:	ldp	x22, x21, [sp, #64]
  449428:	ldp	x24, x23, [sp, #48]
  44942c:	ldp	x26, x25, [sp, #32]
  449430:	ldp	x28, x27, [sp, #16]
  449434:	ldp	x29, x30, [sp], #96
  449438:	ret
  44943c:	sub	sp, sp, #0xe0
  449440:	stp	x29, x30, [sp, #208]
  449444:	add	x29, sp, #0xd0
  449448:	stp	x3, x4, [x29, #-72]
  44944c:	stp	x5, x6, [x29, #-56]
  449450:	stur	x7, [x29, #-40]
  449454:	stp	q1, q2, [sp, #16]
  449458:	stp	q3, q4, [sp, #48]
  44945c:	str	q0, [sp]
  449460:	stp	q5, q6, [sp, #80]
  449464:	str	q7, [sp, #112]
  449468:	tbnz	w2, #6, 449474 <_obstack_memory_used@@Base+0xdc7c>
  44946c:	mov	w3, wzr
  449470:	b	4494cc <_obstack_memory_used@@Base+0xdcd4>
  449474:	mov	x9, #0xffffffffffffffd8    	// #-40
  449478:	mov	x11, sp
  44947c:	sub	x12, x29, #0x48
  449480:	movk	x9, #0xff80, lsl #32
  449484:	add	x10, x29, #0x10
  449488:	mov	x8, #0xffffffffffffffd8    	// #-40
  44948c:	add	x11, x11, #0x80
  449490:	add	x12, x12, #0x28
  449494:	stp	x11, x9, [x29, #-16]
  449498:	stp	x10, x12, [x29, #-32]
  44949c:	tbz	w8, #31, 4494bc <_obstack_memory_used@@Base+0xdcc4>
  4494a0:	add	w9, w8, #0x8
  4494a4:	cmn	w8, #0x8
  4494a8:	stur	w9, [x29, #-8]
  4494ac:	b.gt	4494bc <_obstack_memory_used@@Base+0xdcc4>
  4494b0:	ldur	x9, [x29, #-24]
  4494b4:	add	x8, x9, x8
  4494b8:	b	4494c8 <_obstack_memory_used@@Base+0xdcd0>
  4494bc:	ldur	x8, [x29, #-32]
  4494c0:	add	x9, x8, #0x8
  4494c4:	stur	x9, [x29, #-32]
  4494c8:	ldr	w3, [x8]
  4494cc:	bl	404cc0 <openat@plt>
  4494d0:	bl	4494e0 <_obstack_memory_used@@Base+0xdce8>
  4494d4:	ldp	x29, x30, [sp, #208]
  4494d8:	add	sp, sp, #0xe0
  4494dc:	ret
  4494e0:	stp	x29, x30, [sp, #-48]!
  4494e4:	stp	x20, x19, [sp, #32]
  4494e8:	mov	w19, w0
  4494ec:	cmp	w0, #0x2
  4494f0:	stp	x22, x21, [sp, #16]
  4494f4:	mov	x29, sp
  4494f8:	b.hi	449528 <_obstack_memory_used@@Base+0xdd30>  // b.pmore
  4494fc:	mov	w0, w19
  449500:	bl	44a2a8 <_obstack_memory_used@@Base+0xeab0>
  449504:	mov	w20, w0
  449508:	bl	404ce0 <__errno_location@plt>
  44950c:	ldr	w22, [x0]
  449510:	mov	x21, x0
  449514:	mov	w0, w19
  449518:	bl	4047a0 <close@plt>
  44951c:	str	w22, [x21]
  449520:	mov	w0, w20
  449524:	b	44952c <_obstack_memory_used@@Base+0xdd34>
  449528:	mov	w0, w19
  44952c:	ldp	x20, x19, [sp, #32]
  449530:	ldp	x22, x21, [sp, #16]
  449534:	ldp	x29, x30, [sp], #48
  449538:	ret
  44953c:	sub	sp, sp, #0x80
  449540:	str	x23, [sp, #80]
  449544:	mov	x2, x0
  449548:	mov	x23, xzr
  44954c:	mov	x8, x0
  449550:	stp	x29, x30, [sp, #64]
  449554:	stp	x22, x21, [sp, #96]
  449558:	stp	x20, x19, [sp, #112]
  44955c:	add	x29, sp, #0x40
  449560:	ldrb	w9, [x8]
  449564:	cmp	w9, #0x25
  449568:	b.ne	449584 <_obstack_memory_used@@Base+0xdd8c>  // b.any
  44956c:	ldrb	w9, [x8, #1]
  449570:	cmp	w9, #0x73
  449574:	b.ne	449610 <_obstack_memory_used@@Base+0xde18>  // b.any
  449578:	sub	x23, x23, #0x1
  44957c:	add	x8, x8, #0x2
  449580:	b	449560 <_obstack_memory_used@@Base+0xdd68>
  449584:	cbnz	w9, 449610 <_obstack_memory_used@@Base+0xde18>
  449588:	ldp	q1, q0, [x1]
  44958c:	stp	q1, q0, [sp]
  449590:	stp	q1, q0, [sp, #32]
  449594:	cbz	x23, 44964c <_obstack_memory_used@@Base+0xde54>
  449598:	ldr	x20, [sp, #40]
  44959c:	ldr	w8, [sp, #56]
  4495a0:	mov	x19, xzr
  4495a4:	mov	x21, x23
  4495a8:	tbnz	w8, #31, 4495b4 <_obstack_memory_used@@Base+0xddbc>
  4495ac:	mov	w22, w8
  4495b0:	b	4495cc <_obstack_memory_used@@Base+0xddd4>
  4495b4:	add	w22, w8, #0x8
  4495b8:	cmn	w8, #0x8
  4495bc:	str	w22, [sp, #56]
  4495c0:	b.gt	4495cc <_obstack_memory_used@@Base+0xddd4>
  4495c4:	add	x8, x20, w8, sxtw
  4495c8:	b	4495d8 <_obstack_memory_used@@Base+0xdde0>
  4495cc:	ldr	x8, [sp, #32]
  4495d0:	add	x9, x8, #0x8
  4495d4:	str	x9, [sp, #32]
  4495d8:	ldr	x0, [x8]
  4495dc:	bl	404170 <strlen@plt>
  4495e0:	adds	x8, x19, x0
  4495e4:	csinv	x19, x8, xzr, cc  // cc = lo, ul, last
  4495e8:	adds	x21, x21, #0x1
  4495ec:	mov	w8, w22
  4495f0:	b.cc	4495a8 <_obstack_memory_used@@Base+0xddb0>  // b.lo, b.ul, b.last
  4495f4:	lsr	x8, x19, #31
  4495f8:	cbz	x8, 449660 <_obstack_memory_used@@Base+0xde68>
  4495fc:	bl	404ce0 <__errno_location@plt>
  449600:	mov	w8, #0x4b                  	// #75
  449604:	mov	x19, xzr
  449608:	str	w8, [x0]
  44960c:	b	4496d0 <_obstack_memory_used@@Base+0xded8>
  449610:	ldp	q1, q0, [x1]
  449614:	mov	x0, sp
  449618:	add	x3, sp, #0x20
  44961c:	mov	w1, #0x1                   	// #1
  449620:	stp	q1, q0, [sp, #32]
  449624:	bl	404520 <__vasprintf_chk@plt>
  449628:	tbnz	w0, #31, 449634 <_obstack_memory_used@@Base+0xde3c>
  44962c:	ldr	x19, [sp]
  449630:	b	4496d0 <_obstack_memory_used@@Base+0xded8>
  449634:	bl	404ce0 <__errno_location@plt>
  449638:	ldr	w8, [x0]
  44963c:	cmp	w8, #0xc
  449640:	b.eq	4496ec <_obstack_memory_used@@Base+0xdef4>  // b.none
  449644:	mov	x19, xzr
  449648:	b	4496d0 <_obstack_memory_used@@Base+0xded8>
  44964c:	mov	w0, #0x1                   	// #1
  449650:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  449654:	mov	x19, x0
  449658:	mov	x20, x0
  44965c:	b	4496cc <_obstack_memory_used@@Base+0xded4>
  449660:	add	x0, x19, #0x1
  449664:	bl	43a7a4 <argp_parse@@Base+0xbae8>
  449668:	mov	x19, x0
  44966c:	mov	x20, x0
  449670:	ldrsw	x8, [sp, #24]
  449674:	tbz	w8, #31, 449694 <_obstack_memory_used@@Base+0xde9c>
  449678:	add	w9, w8, #0x8
  44967c:	cmn	w8, #0x8
  449680:	str	w9, [sp, #24]
  449684:	b.gt	449694 <_obstack_memory_used@@Base+0xde9c>
  449688:	ldr	x9, [sp, #8]
  44968c:	add	x8, x9, x8
  449690:	b	4496a0 <_obstack_memory_used@@Base+0xdea8>
  449694:	ldr	x8, [sp]
  449698:	add	x9, x8, #0x8
  44969c:	str	x9, [sp]
  4496a0:	ldr	x21, [x8]
  4496a4:	mov	x0, x21
  4496a8:	bl	404170 <strlen@plt>
  4496ac:	mov	x22, x0
  4496b0:	mov	x0, x20
  4496b4:	mov	x1, x21
  4496b8:	mov	x2, x22
  4496bc:	bl	4040f0 <memcpy@plt>
  4496c0:	adds	x23, x23, #0x1
  4496c4:	add	x20, x20, x22
  4496c8:	b.cc	449670 <_obstack_memory_used@@Base+0xde78>  // b.lo, b.ul, b.last
  4496cc:	strb	wzr, [x20]
  4496d0:	mov	x0, x19
  4496d4:	ldp	x20, x19, [sp, #112]
  4496d8:	ldp	x22, x21, [sp, #96]
  4496dc:	ldr	x23, [sp, #80]
  4496e0:	ldp	x29, x30, [sp, #64]
  4496e4:	add	sp, sp, #0x80
  4496e8:	ret
  4496ec:	bl	40d6d8 <wcrtomb@plt+0x88d8>
  4496f0:	sub	sp, sp, #0x70
  4496f4:	cmp	w0, #0x1
  4496f8:	stp	x29, x30, [sp, #16]
  4496fc:	stp	x28, x27, [sp, #32]
  449700:	stp	x26, x25, [sp, #48]
  449704:	stp	x24, x23, [sp, #64]
  449708:	stp	x22, x21, [sp, #80]
  44970c:	stp	x20, x19, [sp, #96]
  449710:	add	x29, sp, #0x10
  449714:	b.lt	449a90 <_obstack_memory_used@@Base+0xe298>  // b.tstop
  449718:	ldp	w28, w25, [x6]
  44971c:	mov	x19, x6
  449720:	mov	w26, w5
  449724:	mov	x22, x4
  449728:	mov	x24, x3
  44972c:	mov	x21, x2
  449730:	mov	w23, w0
  449734:	mov	x20, x1
  449738:	str	xzr, [x6, #16]
  44973c:	cbz	w28, 449764 <_obstack_memory_used@@Base+0xdf6c>
  449740:	ldr	w8, [x19, #24]
  449744:	cbz	w8, 44976c <_obstack_memory_used@@Base+0xdf74>
  449748:	ldrb	w8, [x21]
  44974c:	cmp	w8, #0x2d
  449750:	b.eq	44975c <_obstack_memory_used@@Base+0xdf64>  // b.none
  449754:	cmp	w8, #0x2b
  449758:	b.ne	4497c0 <_obstack_memory_used@@Base+0xdfc8>  // b.any
  44975c:	add	x21, x21, #0x1
  449760:	b	4497c0 <_obstack_memory_used@@Base+0xdfc8>
  449764:	mov	w28, #0x1                   	// #1
  449768:	str	w28, [x19]
  44976c:	stp	w28, w28, [x19, #44]
  449770:	str	xzr, [x19, #32]
  449774:	ldrb	w8, [x21]
  449778:	cmp	w8, #0x2b
  44977c:	b.eq	449794 <_obstack_memory_used@@Base+0xdf9c>  // b.none
  449780:	cmp	w8, #0x2d
  449784:	b.ne	4497a0 <_obstack_memory_used@@Base+0xdfa8>  // b.any
  449788:	mov	w8, #0x2                   	// #2
  44978c:	str	w8, [x19, #40]
  449790:	b	449798 <_obstack_memory_used@@Base+0xdfa0>
  449794:	str	wzr, [x19, #40]
  449798:	add	x21, x21, #0x1
  44979c:	b	4497b8 <_obstack_memory_used@@Base+0xdfc0>
  4497a0:	cbnz	w7, 4497b4 <_obstack_memory_used@@Base+0xdfbc>
  4497a4:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x17808>
  4497a8:	add	x0, x0, #0x5f5
  4497ac:	bl	404d10 <getenv@plt>
  4497b0:	cbz	x0, 449ad0 <_obstack_memory_used@@Base+0xe2d8>
  4497b4:	str	wzr, [x19, #40]
  4497b8:	mov	w8, #0x1                   	// #1
  4497bc:	str	w8, [x19, #24]
  4497c0:	ldrb	w8, [x21]
  4497c4:	ldr	x27, [x19, #32]
  4497c8:	str	x22, [sp, #8]
  4497cc:	cmp	w8, #0x3a
  4497d0:	csel	w25, wzr, w25, eq  // eq = none
  4497d4:	cbz	x27, 449894 <_obstack_memory_used@@Base+0xe09c>
  4497d8:	ldrb	w8, [x27]
  4497dc:	cbz	w8, 449894 <_obstack_memory_used@@Base+0xe09c>
  4497e0:	add	x22, x27, #0x1
  4497e4:	str	x22, [x19, #32]
  4497e8:	ldrb	w26, [x27]
  4497ec:	mov	x0, x21
  4497f0:	mov	w1, w26
  4497f4:	bl	404a50 <strchr@plt>
  4497f8:	ldrb	w8, [x27, #1]
  4497fc:	cbnz	w8, 449808 <_obstack_memory_used@@Base+0xe010>
  449800:	add	w28, w28, #0x1
  449804:	str	w28, [x19]
  449808:	orr	w8, w26, #0x1
  44980c:	cmp	w8, #0x3b
  449810:	b.eq	4498ec <_obstack_memory_used@@Base+0xe0f4>  // b.none
  449814:	cbz	x0, 4498ec <_obstack_memory_used@@Base+0xe0f4>
  449818:	ldrb	w9, [x0]
  44981c:	ldrb	w8, [x0, #1]
  449820:	cmp	w9, #0x57
  449824:	b.ne	449930 <_obstack_memory_used@@Base+0xe138>  // b.any
  449828:	cbz	x24, 449930 <_obstack_memory_used@@Base+0xe138>
  44982c:	cmp	w8, #0x3b
  449830:	b.ne	449930 <_obstack_memory_used@@Base+0xe138>  // b.any
  449834:	ldrb	w8, [x22]
  449838:	cbnz	w8, 449b38 <_obstack_memory_used@@Base+0xe340>
  44983c:	cmp	w28, w23
  449840:	b.ne	449b34 <_obstack_memory_used@@Base+0xe33c>  // b.any
  449844:	cbz	w25, 44987c <_obstack_memory_used@@Base+0xe084>
  449848:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  44984c:	ldr	x22, [x8, #624]
  449850:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1a808>
  449854:	add	x1, x1, #0xd0
  449858:	mov	w2, #0x5                   	// #5
  44985c:	mov	x0, xzr
  449860:	bl	404bd0 <dcgettext@plt>
  449864:	ldr	x3, [x20]
  449868:	mov	x2, x0
  44986c:	mov	w1, #0x1                   	// #1
  449870:	mov	x0, x22
  449874:	mov	w4, w26
  449878:	bl	4048f0 <__fprintf_chk@plt>
  44987c:	str	w26, [x19, #8]
  449880:	ldrb	w8, [x21]
  449884:	mov	w9, #0x3f                  	// #63
  449888:	cmp	w8, #0x3a
  44988c:	csel	w26, w8, w9, eq  // eq = none
  449890:	b	449a94 <_obstack_memory_used@@Base+0xe29c>
  449894:	ldr	w22, [x19, #48]
  449898:	cmp	w22, w28
  44989c:	b.le	4498a8 <_obstack_memory_used@@Base+0xe0b0>
  4498a0:	mov	w22, w28
  4498a4:	str	w28, [x19, #48]
  4498a8:	ldr	w8, [x19, #44]
  4498ac:	cmp	w8, w28
  4498b0:	b.le	4498bc <_obstack_memory_used@@Base+0xe0c4>
  4498b4:	mov	w8, w28
  4498b8:	str	w28, [x19, #44]
  4498bc:	ldr	w9, [x19, #40]
  4498c0:	cmp	w9, #0x1
  4498c4:	b.ne	4499a4 <_obstack_memory_used@@Base+0xe1ac>  // b.any
  4498c8:	cmp	w8, w22
  4498cc:	b.eq	449954 <_obstack_memory_used@@Base+0xe15c>  // b.none
  4498d0:	cmp	w22, w28
  4498d4:	b.eq	449954 <_obstack_memory_used@@Base+0xe15c>  // b.none
  4498d8:	mov	x0, x20
  4498dc:	mov	x1, x19
  4498e0:	bl	449c04 <_obstack_memory_used@@Base+0xe40c>
  4498e4:	ldr	w28, [x19]
  4498e8:	b	449960 <_obstack_memory_used@@Base+0xe168>
  4498ec:	cbz	w25, 449924 <_obstack_memory_used@@Base+0xe12c>
  4498f0:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  4498f4:	ldr	x21, [x8, #624]
  4498f8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1a808>
  4498fc:	add	x1, x1, #0xb4
  449900:	mov	w2, #0x5                   	// #5
  449904:	mov	x0, xzr
  449908:	bl	404bd0 <dcgettext@plt>
  44990c:	ldr	x3, [x20]
  449910:	mov	x2, x0
  449914:	mov	w1, #0x1                   	// #1
  449918:	mov	x0, x21
  44991c:	mov	w4, w26
  449920:	bl	4048f0 <__fprintf_chk@plt>
  449924:	str	w26, [x19, #8]
  449928:	mov	w26, #0x3f                  	// #63
  44992c:	b	449a94 <_obstack_memory_used@@Base+0xe29c>
  449930:	cmp	w8, #0x3a
  449934:	b.ne	449a94 <_obstack_memory_used@@Base+0xe29c>  // b.any
  449938:	ldrb	w9, [x0, #2]
  44993c:	ldrb	w8, [x22]
  449940:	cmp	w9, #0x3a
  449944:	b.ne	449ab8 <_obstack_memory_used@@Base+0xe2c0>  // b.any
  449948:	cbnz	w8, 449abc <_obstack_memory_used@@Base+0xe2c4>
  44994c:	str	xzr, [x19, #16]
  449950:	b	449ac8 <_obstack_memory_used@@Base+0xe2d0>
  449954:	cmp	w22, w28
  449958:	b.eq	449960 <_obstack_memory_used@@Base+0xe168>  // b.none
  44995c:	str	w28, [x19, #44]
  449960:	cmp	w28, w23
  449964:	b.ge	44999c <_obstack_memory_used@@Base+0xe1a4>  // b.tcont
  449968:	add	x8, x20, w28, sxtw #3
  44996c:	ldr	x9, [x8]
  449970:	ldrb	w10, [x9]
  449974:	cmp	w10, #0x2d
  449978:	b.ne	449984 <_obstack_memory_used@@Base+0xe18c>  // b.any
  44997c:	ldrb	w9, [x9, #1]
  449980:	cbnz	w9, 44999c <_obstack_memory_used@@Base+0xe1a4>
  449984:	add	w28, w28, #0x1
  449988:	cmp	w23, w28
  44998c:	add	x8, x8, #0x8
  449990:	str	w28, [x19]
  449994:	b.ne	44996c <_obstack_memory_used@@Base+0xe174>  // b.any
  449998:	mov	w28, w23
  44999c:	mov	w22, w28
  4499a0:	str	w28, [x19, #48]
  4499a4:	cmp	w28, w23
  4499a8:	b.eq	449a80 <_obstack_memory_used@@Base+0xe288>  // b.none
  4499ac:	ldr	x0, [x20, w28, sxtw #3]
  4499b0:	adrp	x27, 455000 <_obstack_memory_used@@Base+0x19808>
  4499b4:	add	x27, x27, #0x25c
  4499b8:	mov	x1, x27
  4499bc:	bl	404900 <strcmp@plt>
  4499c0:	cbz	w0, 449a20 <_obstack_memory_used@@Base+0xe228>
  4499c4:	cmp	w28, w23
  4499c8:	b.eq	449a80 <_obstack_memory_used@@Base+0xe288>  // b.none
  4499cc:	sxtw	x8, w28
  4499d0:	ldr	x22, [x20, x8, lsl #3]
  4499d4:	ldrb	w8, [x22]
  4499d8:	cmp	w8, #0x2d
  4499dc:	b.ne	449a4c <_obstack_memory_used@@Base+0xe254>  // b.any
  4499e0:	mov	x9, x22
  4499e4:	ldrb	w1, [x9, #1]!
  4499e8:	cbz	w1, 449a4c <_obstack_memory_used@@Base+0xe254>
  4499ec:	cbz	x24, 449bf8 <_obstack_memory_used@@Base+0xe400>
  4499f0:	cmp	w1, #0x2d
  4499f4:	b.ne	449b78 <_obstack_memory_used@@Base+0xe380>  // b.any
  4499f8:	ldr	x4, [sp, #8]
  4499fc:	add	x8, x22, #0x2
  449a00:	mov	w0, w23
  449a04:	mov	x1, x20
  449a08:	mov	x2, x21
  449a0c:	mov	x3, x24
  449a10:	mov	w5, w26
  449a14:	str	x8, [x19, #32]
  449a18:	str	x27, [sp]
  449a1c:	b	449b68 <_obstack_memory_used@@Base+0xe370>
  449a20:	ldr	w9, [x19, #44]
  449a24:	add	w8, w28, #0x1
  449a28:	str	w8, [x19]
  449a2c:	cmp	w9, w22
  449a30:	b.eq	449a68 <_obstack_memory_used@@Base+0xe270>  // b.none
  449a34:	cmp	w22, w8
  449a38:	b.eq	449a68 <_obstack_memory_used@@Base+0xe270>  // b.none
  449a3c:	mov	x0, x20
  449a40:	mov	x1, x19
  449a44:	bl	449c04 <_obstack_memory_used@@Base+0xe40c>
  449a48:	b	449a74 <_obstack_memory_used@@Base+0xe27c>
  449a4c:	ldr	w8, [x19, #40]
  449a50:	cbz	w8, 449a90 <_obstack_memory_used@@Base+0xe298>
  449a54:	add	w8, w28, #0x1
  449a58:	str	x22, [x19, #16]
  449a5c:	str	w8, [x19]
  449a60:	mov	w26, #0x1                   	// #1
  449a64:	b	449a94 <_obstack_memory_used@@Base+0xe29c>
  449a68:	cmp	w9, w22
  449a6c:	b.ne	449a74 <_obstack_memory_used@@Base+0xe27c>  // b.any
  449a70:	str	w8, [x19, #44]
  449a74:	str	w23, [x19, #48]
  449a78:	str	w23, [x19]
  449a7c:	mov	w22, w23
  449a80:	ldr	w8, [x19, #44]
  449a84:	cmp	w8, w22
  449a88:	b.eq	449a90 <_obstack_memory_used@@Base+0xe298>  // b.none
  449a8c:	str	w8, [x19]
  449a90:	mov	w26, #0xffffffff            	// #-1
  449a94:	mov	w0, w26
  449a98:	ldp	x20, x19, [sp, #96]
  449a9c:	ldp	x22, x21, [sp, #80]
  449aa0:	ldp	x24, x23, [sp, #64]
  449aa4:	ldp	x26, x25, [sp, #48]
  449aa8:	ldp	x28, x27, [sp, #32]
  449aac:	ldp	x29, x30, [sp, #16]
  449ab0:	add	sp, sp, #0x70
  449ab4:	ret
  449ab8:	cbz	w8, 449adc <_obstack_memory_used@@Base+0xe2e4>
  449abc:	add	w8, w28, #0x1
  449ac0:	str	x22, [x19, #16]
  449ac4:	str	w8, [x19]
  449ac8:	str	xzr, [x19, #32]
  449acc:	b	449a94 <_obstack_memory_used@@Base+0xe29c>
  449ad0:	mov	w8, #0x1                   	// #1
  449ad4:	str	w8, [x19, #40]
  449ad8:	b	4497b8 <_obstack_memory_used@@Base+0xdfc0>
  449adc:	cmp	w28, w23
  449ae0:	b.ne	449bd0 <_obstack_memory_used@@Base+0xe3d8>  // b.any
  449ae4:	cbz	w25, 449b1c <_obstack_memory_used@@Base+0xe324>
  449ae8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  449aec:	ldr	x22, [x8, #624]
  449af0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1a808>
  449af4:	add	x1, x1, #0xd0
  449af8:	mov	w2, #0x5                   	// #5
  449afc:	mov	x0, xzr
  449b00:	bl	404bd0 <dcgettext@plt>
  449b04:	ldr	x3, [x20]
  449b08:	mov	x2, x0
  449b0c:	mov	w1, #0x1                   	// #1
  449b10:	mov	x0, x22
  449b14:	mov	w4, w26
  449b18:	bl	4048f0 <__fprintf_chk@plt>
  449b1c:	str	w26, [x19, #8]
  449b20:	ldrb	w8, [x21]
  449b24:	mov	w9, #0x3f                  	// #63
  449b28:	cmp	w8, #0x3a
  449b2c:	csel	w26, w8, w9, eq  // eq = none
  449b30:	b	449ac8 <_obstack_memory_used@@Base+0xe2d0>
  449b34:	ldr	x22, [x20, w28, sxtw #3]
  449b38:	str	x22, [x19, #16]
  449b3c:	ldr	x4, [sp, #8]
  449b40:	adrp	x8, 456000 <_obstack_memory_used@@Base+0x1a808>
  449b44:	add	x8, x8, #0xf9
  449b48:	str	x22, [x19, #32]
  449b4c:	str	xzr, [x19, #16]
  449b50:	str	x8, [sp]
  449b54:	mov	w0, w23
  449b58:	mov	x1, x20
  449b5c:	mov	x2, x21
  449b60:	mov	x3, x24
  449b64:	mov	w5, wzr
  449b68:	mov	x6, x19
  449b6c:	mov	w7, w25
  449b70:	bl	449cc0 <_obstack_memory_used@@Base+0xe4c8>
  449b74:	b	449a98 <_obstack_memory_used@@Base+0xe2a0>
  449b78:	cbz	w26, 449bf8 <_obstack_memory_used@@Base+0xe400>
  449b7c:	ldrb	w8, [x22, #2]
  449b80:	cbz	w8, 449be4 <_obstack_memory_used@@Base+0xe3ec>
  449b84:	ldr	x4, [sp, #8]
  449b88:	adrp	x8, 455000 <_obstack_memory_used@@Base+0x19808>
  449b8c:	add	x8, x8, #0x25d
  449b90:	mov	w0, w23
  449b94:	mov	x1, x20
  449b98:	mov	x2, x21
  449b9c:	mov	x3, x24
  449ba0:	mov	w5, w26
  449ba4:	mov	x6, x19
  449ba8:	mov	w7, w25
  449bac:	str	x9, [x19, #32]
  449bb0:	str	x8, [sp]
  449bb4:	bl	449cc0 <_obstack_memory_used@@Base+0xe4c8>
  449bb8:	mov	w26, w0
  449bbc:	cmn	w0, #0x1
  449bc0:	b.ne	449a94 <_obstack_memory_used@@Base+0xe29c>  // b.any
  449bc4:	ldrsw	x28, [x19]
  449bc8:	ldr	x22, [x20, x28, lsl #3]
  449bcc:	b	449bf8 <_obstack_memory_used@@Base+0xe400>
  449bd0:	add	w8, w28, #0x1
  449bd4:	str	w8, [x19]
  449bd8:	ldr	x8, [x20, w28, sxtw #3]
  449bdc:	str	x8, [x19, #16]
  449be0:	b	449ac8 <_obstack_memory_used@@Base+0xe2d0>
  449be4:	mov	x0, x21
  449be8:	mov	x27, x9
  449bec:	bl	404a50 <strchr@plt>
  449bf0:	mov	x9, x27
  449bf4:	cbz	x0, 449b84 <_obstack_memory_used@@Base+0xe38c>
  449bf8:	add	x27, x22, #0x1
  449bfc:	str	x27, [x19, #32]
  449c00:	b	4497e0 <_obstack_memory_used@@Base+0xdfe8>
  449c04:	ldp	w9, w11, [x1, #44]
  449c08:	ldr	w8, [x1]
  449c0c:	sxtw	x10, w11
  449c10:	cmp	w8, w11
  449c14:	b.le	449cb0 <_obstack_memory_used@@Base+0xe4b8>
  449c18:	cmp	w9, w11
  449c1c:	b.ge	449cb0 <_obstack_memory_used@@Base+0xe4b8>  // b.tcont
  449c20:	add	x11, x0, x10, lsl #3
  449c24:	mov	w12, w9
  449c28:	mov	w13, w8
  449c2c:	sub	w14, w13, w10
  449c30:	sub	w15, w10, w12
  449c34:	cmp	w14, w15
  449c38:	b.le	449c70 <_obstack_memory_used@@Base+0xe478>
  449c3c:	cmp	w15, #0x1
  449c40:	sub	w13, w13, w15
  449c44:	b.lt	449ca0 <_obstack_memory_used@@Base+0xe4a8>  // b.tstop
  449c48:	mov	w14, w15
  449c4c:	add	x15, x0, w13, sxtw #3
  449c50:	add	x16, x0, w12, sxtw #3
  449c54:	ldr	x17, [x15]
  449c58:	ldr	x18, [x16]
  449c5c:	subs	x14, x14, #0x1
  449c60:	str	x17, [x16], #8
  449c64:	str	x18, [x15], #8
  449c68:	b.ne	449c54 <_obstack_memory_used@@Base+0xe45c>  // b.any
  449c6c:	b	449ca0 <_obstack_memory_used@@Base+0xe4a8>
  449c70:	cmp	w14, #0x1
  449c74:	b.lt	449c9c <_obstack_memory_used@@Base+0xe4a4>  // b.tstop
  449c78:	sub	w15, w13, w10
  449c7c:	add	x16, x0, w12, sxtw #3
  449c80:	mov	x17, x11
  449c84:	ldr	x18, [x17]
  449c88:	ldr	x2, [x16]
  449c8c:	subs	x15, x15, #0x1
  449c90:	str	x18, [x16], #8
  449c94:	str	x2, [x17], #8
  449c98:	b.ne	449c84 <_obstack_memory_used@@Base+0xe48c>  // b.any
  449c9c:	add	w12, w12, w14
  449ca0:	cmp	w13, w10
  449ca4:	b.le	449cb0 <_obstack_memory_used@@Base+0xe4b8>
  449ca8:	cmp	w10, w12
  449cac:	b.gt	449c2c <_obstack_memory_used@@Base+0xe434>
  449cb0:	sub	w9, w9, w10
  449cb4:	add	w9, w9, w8
  449cb8:	stp	w9, w8, [x1, #44]
  449cbc:	ret
  449cc0:	sub	sp, sp, #0xa0
  449cc4:	stp	x29, x30, [sp, #64]
  449cc8:	stp	x28, x27, [sp, #80]
  449ccc:	stp	x26, x25, [sp, #96]
  449cd0:	stp	x24, x23, [sp, #112]
  449cd4:	stp	x22, x21, [sp, #128]
  449cd8:	stp	x20, x19, [sp, #144]
  449cdc:	add	x29, sp, #0x40
  449ce0:	ldr	x21, [x6, #32]
  449ce4:	ldr	x26, [x29, #96]
  449ce8:	mov	x19, x6
  449cec:	mov	x23, x3
  449cf0:	mov	x22, x1
  449cf4:	mov	x24, x21
  449cf8:	stur	w7, [x29, #-16]
  449cfc:	stur	w5, [x29, #-8]
  449d00:	ldrb	w8, [x24]
  449d04:	cbz	w8, 449d18 <_obstack_memory_used@@Base+0xe520>
  449d08:	cmp	w8, #0x3d
  449d0c:	b.eq	449d18 <_obstack_memory_used@@Base+0xe520>  // b.none
  449d10:	add	x24, x24, #0x1
  449d14:	b	449d00 <_obstack_memory_used@@Base+0xe508>
  449d18:	ldr	x25, [x23]
  449d1c:	str	x2, [sp, #16]
  449d20:	str	w0, [sp, #12]
  449d24:	cbz	x25, 449e94 <_obstack_memory_used@@Base+0xe69c>
  449d28:	stp	x4, x26, [sp, #24]
  449d2c:	mov	x28, xzr
  449d30:	sub	x27, x24, x21
  449d34:	mov	x26, x25
  449d38:	mov	x20, x23
  449d3c:	mov	x0, x26
  449d40:	mov	x1, x21
  449d44:	mov	x2, x27
  449d48:	bl	404580 <strncmp@plt>
  449d4c:	cbnz	w0, 449d60 <_obstack_memory_used@@Base+0xe568>
  449d50:	mov	x0, x26
  449d54:	bl	404170 <strlen@plt>
  449d58:	cmp	x27, x0
  449d5c:	b.eq	449eb8 <_obstack_memory_used@@Base+0xe6c0>  // b.none
  449d60:	ldr	x26, [x20, #32]!
  449d64:	add	x28, x28, #0x1
  449d68:	cbnz	x26, 449d3c <_obstack_memory_used@@Base+0xe544>
  449d6c:	cbz	x25, 449ec8 <_obstack_memory_used@@Base+0xe6d0>
  449d70:	str	x22, [sp]
  449d74:	mov	x26, xzr
  449d78:	mov	x20, xzr
  449d7c:	mov	w8, #0xffffffff            	// #-1
  449d80:	mov	x22, x23
  449d84:	stur	wzr, [x29, #-4]
  449d88:	str	wzr, [sp, #8]
  449d8c:	stur	xzr, [x29, #-24]
  449d90:	stur	w8, [x29, #-12]
  449d94:	mov	x0, x25
  449d98:	mov	x1, x21
  449d9c:	mov	x2, x27
  449da0:	bl	404580 <strncmp@plt>
  449da4:	cbz	w0, 449dbc <_obstack_memory_used@@Base+0xe5c4>
  449da8:	ldr	x25, [x22, #32]!
  449dac:	cbz	x25, 449ea0 <_obstack_memory_used@@Base+0xe6a8>
  449db0:	ldr	x21, [x19, #32]
  449db4:	add	x26, x26, #0x1
  449db8:	b	449d94 <_obstack_memory_used@@Base+0xe59c>
  449dbc:	cbz	x20, 449e38 <_obstack_memory_used@@Base+0xe640>
  449dc0:	ldur	w8, [x29, #-8]
  449dc4:	cbnz	w8, 449de8 <_obstack_memory_used@@Base+0xe5f0>
  449dc8:	ldr	w8, [x20, #8]
  449dcc:	ldr	w9, [x22, #8]
  449dd0:	cmp	w8, w9
  449dd4:	b.ne	449de8 <_obstack_memory_used@@Base+0xe5f0>  // b.any
  449dd8:	ldr	x8, [x20, #16]
  449ddc:	ldr	x9, [x22, #16]
  449de0:	cmp	x8, x9
  449de4:	b.eq	449e68 <_obstack_memory_used@@Base+0xe670>  // b.none
  449de8:	ldur	w8, [x29, #-4]
  449dec:	cbnz	w8, 449da8 <_obstack_memory_used@@Base+0xe5b0>
  449df0:	ldur	w8, [x29, #-16]
  449df4:	cbz	w8, 449e48 <_obstack_memory_used@@Base+0xe650>
  449df8:	ldur	x21, [x29, #-24]
  449dfc:	cbnz	x21, 449e30 <_obstack_memory_used@@Base+0xe638>
  449e00:	mov	x0, x28
  449e04:	bl	4044d0 <malloc@plt>
  449e08:	mov	w25, #0x1                   	// #1
  449e0c:	cbz	x0, 449e84 <_obstack_memory_used@@Base+0xe68c>
  449e10:	mov	w1, wzr
  449e14:	mov	x2, x28
  449e18:	mov	x21, x0
  449e1c:	bl	4045e0 <memset@plt>
  449e20:	ldur	w8, [x29, #-12]
  449e24:	strb	w25, [x21, w8, sxtw]
  449e28:	mov	w8, #0x1                   	// #1
  449e2c:	str	w8, [sp, #8]
  449e30:	stur	wzr, [x29, #-4]
  449e34:	b	449e58 <_obstack_memory_used@@Base+0xe660>
  449e38:	mov	x20, x22
  449e3c:	mov	w8, w26
  449e40:	stur	w26, [x29, #-12]
  449e44:	b	449da8 <_obstack_memory_used@@Base+0xe5b0>
  449e48:	ldur	x21, [x29, #-24]
  449e4c:	mov	w8, #0x1                   	// #1
  449e50:	stur	w8, [x29, #-4]
  449e54:	cbz	x21, 449e8c <_obstack_memory_used@@Base+0xe694>
  449e58:	mov	w8, #0x1                   	// #1
  449e5c:	stur	x21, [x29, #-24]
  449e60:	strb	w8, [x21, x26]
  449e64:	b	449da8 <_obstack_memory_used@@Base+0xe5b0>
  449e68:	ldur	w8, [x29, #-4]
  449e6c:	cbnz	w8, 449da8 <_obstack_memory_used@@Base+0xe5b0>
  449e70:	ldr	w8, [x20, #24]
  449e74:	ldr	w9, [x22, #24]
  449e78:	cmp	w8, w9
  449e7c:	b.ne	449df0 <_obstack_memory_used@@Base+0xe5f8>  // b.any
  449e80:	b	449da8 <_obstack_memory_used@@Base+0xe5b0>
  449e84:	mov	w8, #0x1                   	// #1
  449e88:	stur	w8, [x29, #-4]
  449e8c:	stur	xzr, [x29, #-24]
  449e90:	b	449da8 <_obstack_memory_used@@Base+0xe5b0>
  449e94:	mov	w8, #0xffffffff            	// #-1
  449e98:	mov	w28, wzr
  449e9c:	b	449ed0 <_obstack_memory_used@@Base+0xe6d8>
  449ea0:	ldp	x4, x26, [sp, #24]
  449ea4:	ldr	x22, [sp]
  449ea8:	ldur	x25, [x29, #-24]
  449eac:	ldr	w27, [sp, #8]
  449eb0:	cbz	x25, 449ee4 <_obstack_memory_used@@Base+0xe6ec>
  449eb4:	b	449f1c <_obstack_memory_used@@Base+0xe724>
  449eb8:	ldp	x4, x26, [sp, #24]
  449ebc:	mov	w8, w28
  449ec0:	stur	w28, [x29, #-12]
  449ec4:	b	449ef0 <_obstack_memory_used@@Base+0xe6f8>
  449ec8:	ldp	x4, x26, [sp, #24]
  449ecc:	mov	w8, #0xffffffff            	// #-1
  449ed0:	mov	x20, xzr
  449ed4:	mov	w27, wzr
  449ed8:	stur	wzr, [x29, #-4]
  449edc:	stur	w8, [x29, #-12]
  449ee0:	cbnz	x25, 449f1c <_obstack_memory_used@@Base+0xe724>
  449ee4:	ldur	w8, [x29, #-4]
  449ee8:	cbnz	w8, 449f1c <_obstack_memory_used@@Base+0xe724>
  449eec:	cbz	x20, 449fd8 <_obstack_memory_used@@Base+0xe7e0>
  449ef0:	ldr	w9, [x19]
  449ef4:	str	xzr, [x19, #32]
  449ef8:	add	w8, w9, #0x1
  449efc:	str	w8, [x19]
  449f00:	ldrb	w11, [x24]
  449f04:	ldr	w10, [x20, #8]
  449f08:	cbz	w11, 449f90 <_obstack_memory_used@@Base+0xe798>
  449f0c:	cbz	w10, 44a088 <_obstack_memory_used@@Base+0xe890>
  449f10:	add	x8, x24, #0x1
  449f14:	str	x8, [x19, #16]
  449f18:	b	449fb4 <_obstack_memory_used@@Base+0xe7bc>
  449f1c:	ldur	w8, [x29, #-16]
  449f20:	cbz	w8, 449f64 <_obstack_memory_used@@Base+0xe76c>
  449f24:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  449f28:	ldr	x21, [x20, #624]
  449f2c:	ldur	w8, [x29, #-4]
  449f30:	cbz	w8, 44a0d8 <_obstack_memory_used@@Base+0xe8e0>
  449f34:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1a808>
  449f38:	add	x1, x1, #0xfd
  449f3c:	mov	w2, #0x5                   	// #5
  449f40:	mov	x0, xzr
  449f44:	bl	404bd0 <dcgettext@plt>
  449f48:	ldr	x3, [x22]
  449f4c:	ldr	x5, [x19, #32]
  449f50:	mov	x2, x0
  449f54:	mov	w1, #0x1                   	// #1
  449f58:	mov	x0, x21
  449f5c:	mov	x4, x26
  449f60:	bl	4048f0 <__fprintf_chk@plt>
  449f64:	cbz	w27, 449f70 <_obstack_memory_used@@Base+0xe778>
  449f68:	mov	x0, x25
  449f6c:	bl	4049b0 <free@plt>
  449f70:	ldr	x20, [x19, #32]
  449f74:	mov	x0, x20
  449f78:	bl	404170 <strlen@plt>
  449f7c:	ldr	w8, [x19]
  449f80:	add	x9, x20, x0
  449f84:	str	wzr, [x19, #8]
  449f88:	str	x9, [x19, #32]
  449f8c:	b	44a05c <_obstack_memory_used@@Base+0xe864>
  449f90:	cmp	w10, #0x1
  449f94:	b.ne	449fb4 <_obstack_memory_used@@Base+0xe7bc>  // b.any
  449f98:	ldr	w10, [sp, #12]
  449f9c:	cmp	w8, w10
  449fa0:	b.ge	44a17c <_obstack_memory_used@@Base+0xe984>  // b.tcont
  449fa4:	add	w9, w9, #0x2
  449fa8:	str	w9, [x19]
  449fac:	ldr	x8, [x22, w8, sxtw #3]
  449fb0:	b	449f14 <_obstack_memory_used@@Base+0xe71c>
  449fb4:	cbz	x4, 449fc0 <_obstack_memory_used@@Base+0xe7c8>
  449fb8:	ldur	w8, [x29, #-12]
  449fbc:	str	w8, [x4]
  449fc0:	ldr	x8, [x20, #16]
  449fc4:	ldr	w0, [x20, #24]
  449fc8:	cbz	x8, 44a068 <_obstack_memory_used@@Base+0xe870>
  449fcc:	str	w0, [x8]
  449fd0:	mov	w0, wzr
  449fd4:	b	44a068 <_obstack_memory_used@@Base+0xe870>
  449fd8:	ldur	w8, [x29, #-8]
  449fdc:	cbz	w8, 44a010 <_obstack_memory_used@@Base+0xe818>
  449fe0:	ldrsw	x8, [x19]
  449fe4:	ldr	x8, [x22, x8, lsl #3]
  449fe8:	ldrb	w8, [x8, #1]
  449fec:	cmp	w8, #0x2d
  449ff0:	b.eq	44a010 <_obstack_memory_used@@Base+0xe818>  // b.none
  449ff4:	ldr	x8, [x19, #32]
  449ff8:	ldr	x0, [sp, #16]
  449ffc:	ldrb	w1, [x8]
  44a000:	bl	404a50 <strchr@plt>
  44a004:	cbz	x0, 44a010 <_obstack_memory_used@@Base+0xe818>
  44a008:	mov	w0, #0xffffffff            	// #-1
  44a00c:	b	44a068 <_obstack_memory_used@@Base+0xe870>
  44a010:	ldur	w8, [x29, #-16]
  44a014:	cbz	w8, 44a050 <_obstack_memory_used@@Base+0xe858>
  44a018:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  44a01c:	ldr	x21, [x8, #624]
  44a020:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1a808>
  44a024:	add	x1, x1, #0x154
  44a028:	mov	w2, #0x5                   	// #5
  44a02c:	mov	x0, xzr
  44a030:	bl	404bd0 <dcgettext@plt>
  44a034:	ldr	x3, [x22]
  44a038:	ldr	x5, [x19, #32]
  44a03c:	mov	x2, x0
  44a040:	mov	w1, #0x1                   	// #1
  44a044:	mov	x0, x21
  44a048:	mov	x4, x26
  44a04c:	bl	4048f0 <__fprintf_chk@plt>
  44a050:	ldr	w8, [x19]
  44a054:	str	xzr, [x19, #32]
  44a058:	str	wzr, [x19, #8]
  44a05c:	add	w8, w8, #0x1
  44a060:	str	w8, [x19]
  44a064:	mov	w0, #0x3f                  	// #63
  44a068:	ldp	x20, x19, [sp, #144]
  44a06c:	ldp	x22, x21, [sp, #128]
  44a070:	ldp	x24, x23, [sp, #112]
  44a074:	ldp	x26, x25, [sp, #96]
  44a078:	ldp	x28, x27, [sp, #80]
  44a07c:	ldp	x29, x30, [sp, #64]
  44a080:	add	sp, sp, #0xa0
  44a084:	ret
  44a088:	ldur	w8, [x29, #-16]
  44a08c:	cbz	w8, 44a0c8 <_obstack_memory_used@@Base+0xe8d0>
  44a090:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  44a094:	ldr	x21, [x8, #624]
  44a098:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1a808>
  44a09c:	add	x1, x1, #0x174
  44a0a0:	mov	w2, #0x5                   	// #5
  44a0a4:	mov	x0, xzr
  44a0a8:	bl	404bd0 <dcgettext@plt>
  44a0ac:	ldr	x3, [x22]
  44a0b0:	ldr	x5, [x20]
  44a0b4:	mov	x2, x0
  44a0b8:	mov	w1, #0x1                   	// #1
  44a0bc:	mov	x0, x21
  44a0c0:	mov	x4, x26
  44a0c4:	bl	4048f0 <__fprintf_chk@plt>
  44a0c8:	ldr	w8, [x20, #24]
  44a0cc:	mov	w0, #0x3f                  	// #63
  44a0d0:	str	w8, [x19, #8]
  44a0d4:	b	44a068 <_obstack_memory_used@@Base+0xe870>
  44a0d8:	mov	x0, x21
  44a0dc:	bl	404210 <flockfile@plt>
  44a0e0:	ldr	x21, [x20, #624]
  44a0e4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1a808>
  44a0e8:	add	x1, x1, #0x11d
  44a0ec:	mov	w2, #0x5                   	// #5
  44a0f0:	mov	x0, xzr
  44a0f4:	bl	404bd0 <dcgettext@plt>
  44a0f8:	ldr	x3, [x22]
  44a0fc:	ldr	x5, [x19, #32]
  44a100:	mov	x2, x0
  44a104:	mov	w1, #0x1                   	// #1
  44a108:	mov	x0, x21
  44a10c:	mov	x4, x26
  44a110:	bl	4048f0 <__fprintf_chk@plt>
  44a114:	cbz	w28, 44a158 <_obstack_memory_used@@Base+0xe960>
  44a118:	adrp	x21, 456000 <_obstack_memory_used@@Base+0x1a808>
  44a11c:	mov	w22, w28
  44a120:	add	x21, x21, #0x14c
  44a124:	mov	x24, x25
  44a128:	ldrb	w8, [x24]
  44a12c:	cbz	w8, 44a148 <_obstack_memory_used@@Base+0xe950>
  44a130:	ldr	x0, [x20, #624]
  44a134:	ldr	x4, [x23]
  44a138:	mov	w1, #0x1                   	// #1
  44a13c:	mov	x2, x21
  44a140:	mov	x3, x26
  44a144:	bl	4048f0 <__fprintf_chk@plt>
  44a148:	add	x24, x24, #0x1
  44a14c:	subs	x22, x22, #0x1
  44a150:	add	x23, x23, #0x20
  44a154:	b.ne	44a128 <_obstack_memory_used@@Base+0xe930>  // b.any
  44a158:	ldr	x0, [x20, #624]
  44a15c:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x16808>
  44a160:	add	x2, x2, #0xb03
  44a164:	mov	w1, #0x1                   	// #1
  44a168:	bl	4048f0 <__fprintf_chk@plt>
  44a16c:	ldr	x0, [x20, #624]
  44a170:	bl	404500 <funlockfile@plt>
  44a174:	cbnz	w27, 449f68 <_obstack_memory_used@@Base+0xe770>
  44a178:	b	449f70 <_obstack_memory_used@@Base+0xe778>
  44a17c:	ldur	w8, [x29, #-16]
  44a180:	cbz	w8, 44a1bc <_obstack_memory_used@@Base+0xe9c4>
  44a184:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  44a188:	ldr	x21, [x8, #624]
  44a18c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1a808>
  44a190:	add	x1, x1, #0x1a1
  44a194:	mov	w2, #0x5                   	// #5
  44a198:	mov	x0, xzr
  44a19c:	bl	404bd0 <dcgettext@plt>
  44a1a0:	ldr	x3, [x22]
  44a1a4:	ldr	x5, [x20]
  44a1a8:	mov	x2, x0
  44a1ac:	mov	w1, #0x1                   	// #1
  44a1b0:	mov	x0, x21
  44a1b4:	mov	x4, x26
  44a1b8:	bl	4048f0 <__fprintf_chk@plt>
  44a1bc:	ldr	w8, [x20, #24]
  44a1c0:	mov	w9, #0x3f                  	// #63
  44a1c4:	str	w8, [x19, #8]
  44a1c8:	ldr	x8, [sp, #16]
  44a1cc:	ldrb	w8, [x8]
  44a1d0:	cmp	w8, #0x3a
  44a1d4:	csel	w0, w8, w9, eq  // eq = none
  44a1d8:	b	44a068 <_obstack_memory_used@@Base+0xe870>
  44a1dc:	stp	x29, x30, [sp, #-32]!
  44a1e0:	stp	x20, x19, [sp, #16]
  44a1e4:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  44a1e8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  44a1ec:	ldr	w9, [x20, #604]
  44a1f0:	ldr	w8, [x8, #608]
  44a1f4:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  44a1f8:	add	x19, x19, #0xd20
  44a1fc:	mov	w7, w6
  44a200:	mov	x6, x19
  44a204:	mov	x29, sp
  44a208:	stp	w9, w8, [x19]
  44a20c:	bl	4496f0 <_obstack_memory_used@@Base+0xdef8>
  44a210:	ldr	w8, [x19]
  44a214:	ldr	x9, [x19, #16]
  44a218:	ldr	w11, [x19, #8]
  44a21c:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  44a220:	str	w8, [x20, #604]
  44a224:	ldp	x20, x19, [sp, #16]
  44a228:	adrp	x12, 46a000 <_obstack_memory_used@@Base+0x2e808>
  44a22c:	str	x9, [x10, #544]
  44a230:	str	w11, [x12, #612]
  44a234:	ldp	x29, x30, [sp], #32
  44a238:	ret
  44a23c:	stp	x29, x30, [sp, #-32]!
  44a240:	stp	x20, x19, [sp, #16]
  44a244:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x2e808>
  44a248:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x2e808>
  44a24c:	ldr	w9, [x20, #604]
  44a250:	ldr	w8, [x8, #608]
  44a254:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x2e808>
  44a258:	add	x19, x19, #0xd20
  44a25c:	mov	w7, #0x1                   	// #1
  44a260:	mov	x3, xzr
  44a264:	mov	x4, xzr
  44a268:	mov	w5, wzr
  44a26c:	mov	x6, x19
  44a270:	mov	x29, sp
  44a274:	stp	w9, w8, [x19]
  44a278:	bl	4496f0 <_obstack_memory_used@@Base+0xdef8>
  44a27c:	ldr	w8, [x19]
  44a280:	ldr	x9, [x19, #16]
  44a284:	ldr	w11, [x19, #8]
  44a288:	adrp	x10, 46b000 <argp_program_version_hook@@Base+0x458>
  44a28c:	str	w8, [x20, #604]
  44a290:	ldp	x20, x19, [sp, #16]
  44a294:	adrp	x12, 46a000 <_obstack_memory_used@@Base+0x2e808>
  44a298:	str	x9, [x10, #544]
  44a29c:	str	w11, [x12, #612]
  44a2a0:	ldp	x29, x30, [sp], #32
  44a2a4:	ret
  44a2a8:	mov	w2, #0x3                   	// #3
  44a2ac:	mov	w1, wzr
  44a2b0:	b	43b18c <argp_parse@@Base+0xc4d0>
  44a2b4:	nop
  44a2b8:	stp	x29, x30, [sp, #-48]!
  44a2bc:	mov	x29, sp
  44a2c0:	str	q0, [sp, #16]
  44a2c4:	str	q1, [sp, #32]
  44a2c8:	ldp	x2, x0, [sp, #16]
  44a2cc:	ldp	x5, x3, [sp, #32]
  44a2d0:	mrs	x10, fpcr
  44a2d4:	lsr	x1, x0, #63
  44a2d8:	ubfx	x6, x0, #0, #48
  44a2dc:	and	w13, w1, #0xff
  44a2e0:	mov	x14, x1
  44a2e4:	ubfx	x7, x0, #48, #15
  44a2e8:	cbz	w7, 44a708 <_obstack_memory_used@@Base+0xef10>
  44a2ec:	mov	w4, #0x7fff                	// #32767
  44a2f0:	cmp	w7, w4
  44a2f4:	b.eq	44a750 <_obstack_memory_used@@Base+0xef58>  // b.none
  44a2f8:	and	x7, x7, #0xffff
  44a2fc:	extr	x6, x6, x2, #61
  44a300:	mov	x15, #0xffffffffffffc001    	// #-16383
  44a304:	orr	x4, x6, #0x8000000000000
  44a308:	add	x7, x7, x15
  44a30c:	lsl	x2, x2, #3
  44a310:	mov	x1, #0x0                   	// #0
  44a314:	mov	x16, #0x0                   	// #0
  44a318:	mov	w0, #0x0                   	// #0
  44a31c:	lsr	x8, x3, #63
  44a320:	ubfx	x6, x3, #0, #48
  44a324:	and	w15, w8, #0xff
  44a328:	ubfx	x9, x3, #48, #15
  44a32c:	cbz	w9, 44a6c4 <_obstack_memory_used@@Base+0xeecc>
  44a330:	mov	w11, #0x7fff                	// #32767
  44a334:	cmp	w9, w11
  44a338:	b.eq	44a3fc <_obstack_memory_used@@Base+0xec04>  // b.none
  44a33c:	and	x9, x9, #0xffff
  44a340:	extr	x6, x6, x5, #61
  44a344:	mov	x12, #0xffffffffffffc001    	// #-16383
  44a348:	orr	x6, x6, #0x8000000000000
  44a34c:	add	x9, x9, x12
  44a350:	lsl	x5, x5, #3
  44a354:	sub	x7, x7, x9
  44a358:	mov	x9, #0x0                   	// #0
  44a35c:	eor	w11, w13, w15
  44a360:	cmp	x1, #0x9
  44a364:	and	x3, x11, #0xff
  44a368:	mov	x12, x3
  44a36c:	b.gt	44a69c <_obstack_memory_used@@Base+0xeea4>
  44a370:	cmp	x1, #0x7
  44a374:	b.gt	44a85c <_obstack_memory_used@@Base+0xf064>
  44a378:	cmp	x1, #0x3
  44a37c:	b.eq	44a398 <_obstack_memory_used@@Base+0xeba0>  // b.none
  44a380:	b.le	44a66c <_obstack_memory_used@@Base+0xee74>
  44a384:	cmp	x1, #0x5
  44a388:	b.eq	44a6ac <_obstack_memory_used@@Base+0xeeb4>  // b.none
  44a38c:	b.le	44a490 <_obstack_memory_used@@Base+0xec98>
  44a390:	cmp	x1, #0x6
  44a394:	b.eq	44a460 <_obstack_memory_used@@Base+0xec68>  // b.none
  44a398:	cmp	x9, #0x1
  44a39c:	b.eq	44a7e0 <_obstack_memory_used@@Base+0xefe8>  // b.none
  44a3a0:	cbz	x9, 44a3b4 <_obstack_memory_used@@Base+0xebbc>
  44a3a4:	cmp	x9, #0x2
  44a3a8:	b.eq	44a9e4 <_obstack_memory_used@@Base+0xf1ec>  // b.none
  44a3ac:	cmp	x9, #0x3
  44a3b0:	b.eq	44a9cc <_obstack_memory_used@@Base+0xf1d4>  // b.none
  44a3b4:	mov	x1, #0x3fff                	// #16383
  44a3b8:	mov	x12, x8
  44a3bc:	add	x3, x7, x1
  44a3c0:	cmp	x3, #0x0
  44a3c4:	b.le	44a8a0 <_obstack_memory_used@@Base+0xf0a8>
  44a3c8:	tst	x5, #0x7
  44a3cc:	b.ne	44a810 <_obstack_memory_used@@Base+0xf018>  // b.any
  44a3d0:	and	w11, w12, #0x1
  44a3d4:	tbz	x6, #52, 44a3e0 <_obstack_memory_used@@Base+0xebe8>
  44a3d8:	and	x6, x6, #0xffefffffffffffff
  44a3dc:	add	x3, x7, #0x4, lsl #12
  44a3e0:	mov	x1, #0x7ffe                	// #32766
  44a3e4:	cmp	x3, x1
  44a3e8:	b.gt	44a988 <_obstack_memory_used@@Base+0xf190>
  44a3ec:	and	w1, w3, #0x7fff
  44a3f0:	extr	x2, x6, x5, #3
  44a3f4:	ubfx	x6, x6, #3, #48
  44a3f8:	b	44a46c <_obstack_memory_used@@Base+0xec74>
  44a3fc:	mov	x9, #0xffffffffffff8001    	// #-32767
  44a400:	orr	x3, x6, x5
  44a404:	add	x7, x7, x9
  44a408:	cbz	x3, 44a784 <_obstack_memory_used@@Base+0xef8c>
  44a40c:	tst	x6, #0x800000000000
  44a410:	orr	x1, x1, #0x3
  44a414:	csinc	w0, w0, wzr, ne  // ne = any
  44a418:	mov	x9, #0x3                   	// #3
  44a41c:	eor	w11, w13, w15
  44a420:	cmp	x1, #0x9
  44a424:	and	x3, x11, #0xff
  44a428:	mov	x12, x3
  44a42c:	b.le	44a370 <_obstack_memory_used@@Base+0xeb78>
  44a430:	cmp	x1, #0xf
  44a434:	b.ne	44a69c <_obstack_memory_used@@Base+0xeea4>  // b.any
  44a438:	tbz	x4, #47, 44a848 <_obstack_memory_used@@Base+0xf050>
  44a43c:	tbnz	x6, #47, 44a848 <_obstack_memory_used@@Base+0xf050>
  44a440:	orr	x6, x6, #0x800000000000
  44a444:	mov	w11, w15
  44a448:	and	x6, x6, #0xffffffffffff
  44a44c:	mov	x2, x5
  44a450:	mov	w1, #0x7fff                	// #32767
  44a454:	b	44a46c <_obstack_memory_used@@Base+0xec74>
  44a458:	cmp	x1, #0x2
  44a45c:	b.ne	44a498 <_obstack_memory_used@@Base+0xeca0>  // b.any
  44a460:	mov	w1, #0x0                   	// #0
  44a464:	mov	x6, #0x0                   	// #0
  44a468:	mov	x2, #0x0                   	// #0
  44a46c:	mov	x5, #0x0                   	// #0
  44a470:	orr	w1, w1, w11, lsl #15
  44a474:	bfxil	x5, x6, #0, #48
  44a478:	fmov	d0, x2
  44a47c:	bfi	x5, x1, #48, #16
  44a480:	fmov	v0.d[1], x5
  44a484:	cbnz	w0, 44a68c <_obstack_memory_used@@Base+0xee94>
  44a488:	ldp	x29, x30, [sp], #48
  44a48c:	ret
  44a490:	cmp	x1, #0x4
  44a494:	b.eq	44a460 <_obstack_memory_used@@Base+0xec68>  // b.none
  44a498:	cmp	x4, x6
  44a49c:	b.ls	44a7f4 <_obstack_memory_used@@Base+0xeffc>  // b.plast
  44a4a0:	lsr	x3, x4, #1
  44a4a4:	extr	x8, x4, x2, #1
  44a4a8:	lsl	x2, x2, #63
  44a4ac:	ubfx	x14, x6, #20, #32
  44a4b0:	extr	x9, x6, x5, #52
  44a4b4:	lsl	x13, x5, #12
  44a4b8:	and	x15, x9, #0xffffffff
  44a4bc:	udiv	x5, x3, x14
  44a4c0:	msub	x3, x5, x14, x3
  44a4c4:	mul	x1, x15, x5
  44a4c8:	extr	x3, x3, x8, #32
  44a4cc:	cmp	x1, x3
  44a4d0:	b.ls	44a4e4 <_obstack_memory_used@@Base+0xecec>  // b.plast
  44a4d4:	adds	x3, x9, x3
  44a4d8:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
  44a4dc:	b.hi	44aac4 <_obstack_memory_used@@Base+0xf2cc>  // b.pmore
  44a4e0:	sub	x5, x5, #0x1
  44a4e4:	sub	x3, x3, x1
  44a4e8:	mov	x4, x8
  44a4ec:	udiv	x1, x3, x14
  44a4f0:	msub	x3, x1, x14, x3
  44a4f4:	mul	x6, x15, x1
  44a4f8:	bfi	x4, x3, #32, #32
  44a4fc:	cmp	x6, x4
  44a500:	b.ls	44a514 <_obstack_memory_used@@Base+0xed1c>  // b.plast
  44a504:	adds	x4, x9, x4
  44a508:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
  44a50c:	b.hi	44aab8 <_obstack_memory_used@@Base+0xf2c0>  // b.pmore
  44a510:	sub	x1, x1, #0x1
  44a514:	orr	x8, x1, x5, lsl #32
  44a518:	and	x17, x13, #0xffffffff
  44a51c:	and	x1, x8, #0xffffffff
  44a520:	lsr	x16, x13, #32
  44a524:	lsr	x5, x8, #32
  44a528:	sub	x4, x4, x6
  44a52c:	mov	x18, #0x100000000           	// #4294967296
  44a530:	mul	x3, x1, x17
  44a534:	mul	x30, x5, x17
  44a538:	madd	x6, x16, x1, x30
  44a53c:	and	x1, x3, #0xffffffff
  44a540:	mul	x5, x5, x16
  44a544:	add	x3, x6, x3, lsr #32
  44a548:	add	x6, x5, x18
  44a54c:	cmp	x30, x3
  44a550:	csel	x5, x6, x5, hi  // hi = pmore
  44a554:	add	x1, x1, x3, lsl #32
  44a558:	add	x5, x5, x3, lsr #32
  44a55c:	cmp	x4, x5
  44a560:	b.cc	44a86c <_obstack_memory_used@@Base+0xf074>  // b.lo, b.ul, b.last
  44a564:	ccmp	x2, x1, #0x2, eq  // eq = none
  44a568:	mov	x6, x8
  44a56c:	b.cc	44a86c <_obstack_memory_used@@Base+0xf074>  // b.lo, b.ul, b.last
  44a570:	subs	x8, x2, x1
  44a574:	mov	x3, #0x3fff                	// #16383
  44a578:	cmp	x2, x1
  44a57c:	add	x3, x7, x3
  44a580:	sbc	x4, x4, x5
  44a584:	cmp	x9, x4
  44a588:	b.eq	44aad0 <_obstack_memory_used@@Base+0xf2d8>  // b.none
  44a58c:	udiv	x5, x4, x14
  44a590:	msub	x4, x5, x14, x4
  44a594:	mul	x2, x15, x5
  44a598:	extr	x1, x4, x8, #32
  44a59c:	cmp	x2, x1
  44a5a0:	b.ls	44a5b4 <_obstack_memory_used@@Base+0xedbc>  // b.plast
  44a5a4:	adds	x1, x9, x1
  44a5a8:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
  44a5ac:	b.hi	44ab88 <_obstack_memory_used@@Base+0xf390>  // b.pmore
  44a5b0:	sub	x5, x5, #0x1
  44a5b4:	sub	x1, x1, x2
  44a5b8:	udiv	x2, x1, x14
  44a5bc:	msub	x1, x2, x14, x1
  44a5c0:	mul	x15, x15, x2
  44a5c4:	bfi	x8, x1, #32, #32
  44a5c8:	mov	x1, x8
  44a5cc:	cmp	x15, x8
  44a5d0:	b.ls	44a5e4 <_obstack_memory_used@@Base+0xedec>  // b.plast
  44a5d4:	adds	x1, x9, x8
  44a5d8:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
  44a5dc:	b.hi	44ab94 <_obstack_memory_used@@Base+0xf39c>  // b.pmore
  44a5e0:	sub	x2, x2, #0x1
  44a5e4:	orr	x5, x2, x5, lsl #32
  44a5e8:	mov	x11, #0x100000000           	// #4294967296
  44a5ec:	and	x4, x5, #0xffffffff
  44a5f0:	sub	x1, x1, x15
  44a5f4:	lsr	x14, x5, #32
  44a5f8:	mul	x2, x17, x4
  44a5fc:	mul	x17, x14, x17
  44a600:	madd	x4, x16, x4, x17
  44a604:	and	x8, x2, #0xffffffff
  44a608:	mul	x16, x16, x14
  44a60c:	add	x2, x4, x2, lsr #32
  44a610:	add	x4, x16, x11
  44a614:	cmp	x17, x2
  44a618:	csel	x16, x4, x16, hi  // hi = pmore
  44a61c:	add	x4, x8, x2, lsl #32
  44a620:	add	x16, x16, x2, lsr #32
  44a624:	cmp	x1, x16
  44a628:	b.cs	44aa08 <_obstack_memory_used@@Base+0xf210>  // b.hs, b.nlast
  44a62c:	adds	x2, x9, x1
  44a630:	sub	x8, x5, #0x1
  44a634:	mov	x1, x2
  44a638:	b.cs	44a64c <_obstack_memory_used@@Base+0xee54>  // b.hs, b.nlast
  44a63c:	cmp	x2, x16
  44a640:	b.cc	44ab08 <_obstack_memory_used@@Base+0xf310>  // b.lo, b.ul, b.last
  44a644:	ccmp	x13, x4, #0x2, eq  // eq = none
  44a648:	b.cc	44ab08 <_obstack_memory_used@@Base+0xf310>  // b.lo, b.ul, b.last
  44a64c:	cmp	x13, x4
  44a650:	mov	x5, x8
  44a654:	cset	w2, ne  // ne = any
  44a658:	cmp	w2, #0x0
  44a65c:	orr	x2, x5, #0x1
  44a660:	ccmp	x1, x16, #0x0, eq  // eq = none
  44a664:	csel	x5, x2, x5, ne  // ne = any
  44a668:	b	44a3c0 <_obstack_memory_used@@Base+0xebc8>
  44a66c:	cmp	x1, #0x1
  44a670:	b.ne	44a458 <_obstack_memory_used@@Base+0xec60>  // b.any
  44a674:	mov	x4, #0x0                   	// #0
  44a678:	fmov	d0, x4
  44a67c:	lsl	x3, x3, #63
  44a680:	orr	w0, w0, #0x2
  44a684:	orr	x5, x3, #0x7fff000000000000
  44a688:	fmov	v0.d[1], x5
  44a68c:	str	q0, [sp, #16]
  44a690:	bl	44b830 <_obstack_memory_used@@Base+0x10038>
  44a694:	ldr	q0, [sp, #16]
  44a698:	b	44a488 <_obstack_memory_used@@Base+0xec90>
  44a69c:	cmp	x1, #0xb
  44a6a0:	b.gt	44a770 <_obstack_memory_used@@Base+0xef78>
  44a6a4:	cmp	x1, #0xa
  44a6a8:	b.ne	44a398 <_obstack_memory_used@@Base+0xeba0>  // b.any
  44a6ac:	mov	w11, #0x0                   	// #0
  44a6b0:	mov	x6, #0xffffffffffff        	// #281474976710655
  44a6b4:	mov	x2, #0xffffffffffffffff    	// #-1
  44a6b8:	mov	w0, #0x1                   	// #1
  44a6bc:	mov	w1, #0x7fff                	// #32767
  44a6c0:	b	44a46c <_obstack_memory_used@@Base+0xec74>
  44a6c4:	orr	x3, x6, x5
  44a6c8:	cbz	x3, 44a7b0 <_obstack_memory_used@@Base+0xefb8>
  44a6cc:	cbz	x6, 44a964 <_obstack_memory_used@@Base+0xf16c>
  44a6d0:	clz	x3, x6
  44a6d4:	sub	x9, x3, #0xf
  44a6d8:	add	w12, w9, #0x3
  44a6dc:	mov	w11, #0x3d                  	// #61
  44a6e0:	sub	w9, w11, w9
  44a6e4:	lsl	x6, x6, x12
  44a6e8:	lsr	x9, x5, x9
  44a6ec:	orr	x6, x9, x6
  44a6f0:	lsl	x5, x5, x12
  44a6f4:	add	x7, x3, x7
  44a6f8:	mov	x11, #0x3fef                	// #16367
  44a6fc:	mov	x9, #0x0                   	// #0
  44a700:	add	x7, x7, x11
  44a704:	b	44a35c <_obstack_memory_used@@Base+0xeb64>
  44a708:	orr	x4, x6, x2
  44a70c:	cbz	x4, 44a798 <_obstack_memory_used@@Base+0xefa0>
  44a710:	cbz	x6, 44a940 <_obstack_memory_used@@Base+0xf148>
  44a714:	clz	x0, x6
  44a718:	sub	x4, x0, #0xf
  44a71c:	add	w7, w4, #0x3
  44a720:	mov	w1, #0x3d                  	// #61
  44a724:	sub	w4, w1, w4
  44a728:	lsl	x6, x6, x7
  44a72c:	lsr	x4, x2, x4
  44a730:	orr	x4, x4, x6
  44a734:	lsl	x2, x2, x7
  44a738:	mov	x7, #0xffffffffffffc011    	// #-16367
  44a73c:	mov	x1, #0x0                   	// #0
  44a740:	sub	x7, x7, x0
  44a744:	mov	x16, #0x0                   	// #0
  44a748:	mov	w0, #0x0                   	// #0
  44a74c:	b	44a31c <_obstack_memory_used@@Base+0xeb24>
  44a750:	orr	x4, x6, x2
  44a754:	cbnz	x4, 44a7c4 <_obstack_memory_used@@Base+0xefcc>
  44a758:	mov	x2, #0x0                   	// #0
  44a75c:	mov	x1, #0x8                   	// #8
  44a760:	mov	x7, #0x7fff                	// #32767
  44a764:	mov	x16, #0x2                   	// #2
  44a768:	mov	w0, #0x0                   	// #0
  44a76c:	b	44a31c <_obstack_memory_used@@Base+0xeb24>
  44a770:	mov	x6, x4
  44a774:	mov	x5, x2
  44a778:	mov	x8, x14
  44a77c:	mov	x9, x16
  44a780:	b	44a398 <_obstack_memory_used@@Base+0xeba0>
  44a784:	orr	x1, x1, #0x2
  44a788:	mov	x6, #0x0                   	// #0
  44a78c:	mov	x5, #0x0                   	// #0
  44a790:	mov	x9, #0x2                   	// #2
  44a794:	b	44a41c <_obstack_memory_used@@Base+0xec24>
  44a798:	mov	x2, #0x0                   	// #0
  44a79c:	mov	x1, #0x4                   	// #4
  44a7a0:	mov	x7, #0x0                   	// #0
  44a7a4:	mov	x16, #0x1                   	// #1
  44a7a8:	mov	w0, #0x0                   	// #0
  44a7ac:	b	44a31c <_obstack_memory_used@@Base+0xeb24>
  44a7b0:	orr	x1, x1, #0x1
  44a7b4:	mov	x6, #0x0                   	// #0
  44a7b8:	mov	x5, #0x0                   	// #0
  44a7bc:	mov	x9, #0x1                   	// #1
  44a7c0:	b	44a35c <_obstack_memory_used@@Base+0xeb64>
  44a7c4:	lsr	x0, x6, #47
  44a7c8:	mov	x4, x6
  44a7cc:	eor	w0, w0, #0x1
  44a7d0:	mov	x1, #0xc                   	// #12
  44a7d4:	mov	x7, #0x7fff                	// #32767
  44a7d8:	mov	x16, #0x3                   	// #3
  44a7dc:	b	44a31c <_obstack_memory_used@@Base+0xeb24>
  44a7e0:	mov	w11, w8
  44a7e4:	mov	w1, #0x0                   	// #0
  44a7e8:	mov	x6, #0x0                   	// #0
  44a7ec:	mov	x2, #0x0                   	// #0
  44a7f0:	b	44a46c <_obstack_memory_used@@Base+0xec74>
  44a7f4:	ccmp	x5, x2, #0x2, eq  // eq = none
  44a7f8:	b.ls	44a4a0 <_obstack_memory_used@@Base+0xeca8>  // b.plast
  44a7fc:	mov	x8, x2
  44a800:	sub	x7, x7, #0x1
  44a804:	mov	x3, x4
  44a808:	mov	x2, #0x0                   	// #0
  44a80c:	b	44a4ac <_obstack_memory_used@@Base+0xecb4>
  44a810:	and	x1, x10, #0xc00000
  44a814:	orr	w0, w0, #0x10
  44a818:	cmp	x1, #0x400, lsl #12
  44a81c:	b.eq	44ab70 <_obstack_memory_used@@Base+0xf378>  // b.none
  44a820:	cmp	x1, #0x800, lsl #12
  44a824:	b.eq	44aa84 <_obstack_memory_used@@Base+0xf28c>  // b.none
  44a828:	cbnz	x1, 44a3d0 <_obstack_memory_used@@Base+0xebd8>
  44a82c:	and	x1, x5, #0xf
  44a830:	and	w11, w12, #0x1
  44a834:	cmp	x1, #0x4
  44a838:	b.eq	44a3d4 <_obstack_memory_used@@Base+0xebdc>  // b.none
  44a83c:	adds	x5, x5, #0x4
  44a840:	cinc	x6, x6, cs  // cs = hs, nlast
  44a844:	b	44a3d4 <_obstack_memory_used@@Base+0xebdc>
  44a848:	orr	x6, x4, #0x800000000000
  44a84c:	mov	w11, w13
  44a850:	and	x6, x6, #0xffffffffffff
  44a854:	mov	w1, #0x7fff                	// #32767
  44a858:	b	44a46c <_obstack_memory_used@@Base+0xec74>
  44a85c:	mov	w1, #0x7fff                	// #32767
  44a860:	mov	x6, #0x0                   	// #0
  44a864:	mov	x2, #0x0                   	// #0
  44a868:	b	44a46c <_obstack_memory_used@@Base+0xec74>
  44a86c:	adds	x3, x2, x13
  44a870:	sub	x6, x8, #0x1
  44a874:	adc	x4, x4, x9
  44a878:	cset	x18, cs  // cs = hs, nlast
  44a87c:	mov	x2, x3
  44a880:	cmp	x9, x4
  44a884:	b.cs	44a9f8 <_obstack_memory_used@@Base+0xf200>  // b.hs, b.nlast
  44a888:	cmp	x5, x4
  44a88c:	b.ls	44aa20 <_obstack_memory_used@@Base+0xf228>  // b.plast
  44a890:	adds	x2, x13, x3
  44a894:	sub	x6, x8, #0x2
  44a898:	adc	x4, x4, x9
  44a89c:	b	44a570 <_obstack_memory_used@@Base+0xed78>
  44a8a0:	mov	x1, #0x1                   	// #1
  44a8a4:	sub	x1, x1, x3
  44a8a8:	cmp	x1, #0x74
  44a8ac:	and	w11, w12, #0x1
  44a8b0:	b.le	44a8cc <_obstack_memory_used@@Base+0xf0d4>
  44a8b4:	orr	x2, x5, x6
  44a8b8:	cbnz	x2, 44aaec <_obstack_memory_used@@Base+0xf2f4>
  44a8bc:	orr	w0, w0, #0x8
  44a8c0:	mov	w1, #0x0                   	// #0
  44a8c4:	mov	x6, #0x0                   	// #0
  44a8c8:	b	44a9b0 <_obstack_memory_used@@Base+0xf1b8>
  44a8cc:	cmp	x1, #0x3f
  44a8d0:	b.le	44aa2c <_obstack_memory_used@@Base+0xf234>
  44a8d4:	mov	w2, #0x80                  	// #128
  44a8d8:	sub	w2, w2, w1
  44a8dc:	cmp	x1, #0x40
  44a8e0:	sub	w1, w1, #0x40
  44a8e4:	lsl	x2, x6, x2
  44a8e8:	orr	x2, x5, x2
  44a8ec:	csel	x5, x2, x5, ne  // ne = any
  44a8f0:	lsr	x6, x6, x1
  44a8f4:	cmp	x5, #0x0
  44a8f8:	cset	x2, ne  // ne = any
  44a8fc:	orr	x2, x2, x6
  44a900:	ands	x6, x2, #0x7
  44a904:	b.eq	44aa60 <_obstack_memory_used@@Base+0xf268>  // b.none
  44a908:	mov	x6, #0x0                   	// #0
  44a90c:	and	x10, x10, #0xc00000
  44a910:	orr	w0, w0, #0x10
  44a914:	cmp	x10, #0x400, lsl #12
  44a918:	b.eq	44abac <_obstack_memory_used@@Base+0xf3b4>  // b.none
  44a91c:	cmp	x10, #0x800, lsl #12
  44a920:	b.eq	44abc0 <_obstack_memory_used@@Base+0xf3c8>  // b.none
  44a924:	cbz	x10, 44ab28 <_obstack_memory_used@@Base+0xf330>
  44a928:	tbnz	x6, #51, 44ab40 <_obstack_memory_used@@Base+0xf348>
  44a92c:	orr	w0, w0, #0x8
  44a930:	extr	x2, x6, x2, #3
  44a934:	mov	w1, #0x0                   	// #0
  44a938:	ubfx	x6, x6, #3, #48
  44a93c:	b	44a9b0 <_obstack_memory_used@@Base+0xf1b8>
  44a940:	clz	x7, x2
  44a944:	add	x4, x7, #0x31
  44a948:	add	x0, x7, #0x40
  44a94c:	cmp	x4, #0x3c
  44a950:	b.le	44a71c <_obstack_memory_used@@Base+0xef24>
  44a954:	sub	w4, w4, #0x3d
  44a958:	lsl	x4, x2, x4
  44a95c:	mov	x2, #0x0                   	// #0
  44a960:	b	44a738 <_obstack_memory_used@@Base+0xef40>
  44a964:	clz	x3, x5
  44a968:	add	x9, x3, #0x31
  44a96c:	add	x3, x3, #0x40
  44a970:	cmp	x9, #0x3c
  44a974:	b.le	44a6d8 <_obstack_memory_used@@Base+0xeee0>
  44a978:	sub	w6, w9, #0x3d
  44a97c:	lsl	x6, x5, x6
  44a980:	mov	x5, #0x0                   	// #0
  44a984:	b	44a6f4 <_obstack_memory_used@@Base+0xeefc>
  44a988:	and	x2, x10, #0xc00000
  44a98c:	cmp	x2, #0x400, lsl #12
  44a990:	b.eq	44ab54 <_obstack_memory_used@@Base+0xf35c>  // b.none
  44a994:	cmp	x2, #0x800, lsl #12
  44a998:	b.eq	44aa9c <_obstack_memory_used@@Base+0xf2a4>  // b.none
  44a99c:	cbz	x2, 44aa78 <_obstack_memory_used@@Base+0xf280>
  44a9a0:	mov	x6, #0xffffffffffff        	// #281474976710655
  44a9a4:	mov	x2, #0xffffffffffffffff    	// #-1
  44a9a8:	mov	w3, #0x14                  	// #20
  44a9ac:	orr	w0, w0, w3
  44a9b0:	mov	x5, #0x0                   	// #0
  44a9b4:	orr	w1, w1, w11, lsl #15
  44a9b8:	bfxil	x5, x6, #0, #48
  44a9bc:	fmov	d0, x2
  44a9c0:	bfi	x5, x1, #48, #16
  44a9c4:	fmov	v0.d[1], x5
  44a9c8:	b	44a68c <_obstack_memory_used@@Base+0xee94>
  44a9cc:	orr	x6, x6, #0x800000000000
  44a9d0:	mov	w11, w8
  44a9d4:	and	x6, x6, #0xffffffffffff
  44a9d8:	mov	x2, x5
  44a9dc:	mov	w1, #0x7fff                	// #32767
  44a9e0:	b	44a46c <_obstack_memory_used@@Base+0xec74>
  44a9e4:	mov	w11, w8
  44a9e8:	mov	w1, #0x7fff                	// #32767
  44a9ec:	mov	x6, #0x0                   	// #0
  44a9f0:	mov	x2, #0x0                   	// #0
  44a9f4:	b	44a46c <_obstack_memory_used@@Base+0xec74>
  44a9f8:	cmp	x18, #0x0
  44a9fc:	ccmp	x9, x4, #0x0, eq  // eq = none
  44aa00:	b.ne	44a570 <_obstack_memory_used@@Base+0xed78>  // b.any
  44aa04:	b	44a888 <_obstack_memory_used@@Base+0xf090>
  44aa08:	cmp	x4, #0x0
  44aa0c:	cset	w2, ne  // ne = any
  44aa10:	cmp	w2, #0x0
  44aa14:	ccmp	x1, x16, #0x0, ne  // ne = any
  44aa18:	b.ne	44a658 <_obstack_memory_used@@Base+0xee60>  // b.any
  44aa1c:	b	44a62c <_obstack_memory_used@@Base+0xee34>
  44aa20:	ccmp	x1, x3, #0x0, eq  // eq = none
  44aa24:	b.ls	44a570 <_obstack_memory_used@@Base+0xed78>  // b.plast
  44aa28:	b	44a890 <_obstack_memory_used@@Base+0xf098>
  44aa2c:	mov	w2, #0x40                  	// #64
  44aa30:	sub	w2, w2, w1
  44aa34:	lsr	x4, x5, x1
  44aa38:	lsl	x5, x5, x2
  44aa3c:	cmp	x5, #0x0
  44aa40:	cset	x3, ne  // ne = any
  44aa44:	lsl	x2, x6, x2
  44aa48:	orr	x2, x2, x4
  44aa4c:	lsr	x6, x6, x1
  44aa50:	orr	x2, x2, x3
  44aa54:	tst	x2, #0x7
  44aa58:	b.ne	44a90c <_obstack_memory_used@@Base+0xf114>  // b.any
  44aa5c:	tbnz	x6, #51, 44abcc <_obstack_memory_used@@Base+0xf3d4>
  44aa60:	mov	w1, #0x0                   	// #0
  44aa64:	extr	x2, x6, x2, #3
  44aa68:	ubfx	x6, x6, #3, #48
  44aa6c:	tbz	w10, #11, 44a46c <_obstack_memory_used@@Base+0xec74>
  44aa70:	orr	w0, w0, #0x8
  44aa74:	b	44a9b0 <_obstack_memory_used@@Base+0xf1b8>
  44aa78:	mov	w1, #0x7fff                	// #32767
  44aa7c:	mov	x6, #0x0                   	// #0
  44aa80:	b	44a9a8 <_obstack_memory_used@@Base+0xf1b0>
  44aa84:	mov	w11, #0x0                   	// #0
  44aa88:	cbz	x12, 44a3d4 <_obstack_memory_used@@Base+0xebdc>
  44aa8c:	adds	x5, x5, #0x8
  44aa90:	mov	w11, #0x1                   	// #1
  44aa94:	cinc	x6, x6, cs  // cs = hs, nlast
  44aa98:	b	44a3d4 <_obstack_memory_used@@Base+0xebdc>
  44aa9c:	cmp	x12, #0x0
  44aaa0:	mov	w2, #0x7fff                	// #32767
  44aaa4:	mov	x6, #0xffffffffffff        	// #281474976710655
  44aaa8:	csel	w1, w1, w2, eq  // eq = none
  44aaac:	csel	x6, x6, xzr, eq  // eq = none
  44aab0:	csetm	x2, eq  // eq = none
  44aab4:	b	44a9a8 <_obstack_memory_used@@Base+0xf1b0>
  44aab8:	sub	x1, x1, #0x2
  44aabc:	add	x4, x4, x9
  44aac0:	b	44a514 <_obstack_memory_used@@Base+0xed1c>
  44aac4:	sub	x5, x5, #0x2
  44aac8:	add	x3, x3, x9
  44aacc:	b	44a4e4 <_obstack_memory_used@@Base+0xecec>
  44aad0:	cmp	x3, #0x0
  44aad4:	mov	x5, #0xffffffffffffffff    	// #-1
  44aad8:	b.gt	44a810 <_obstack_memory_used@@Base+0xf018>
  44aadc:	mov	x1, #0x1                   	// #1
  44aae0:	sub	x1, x1, x3
  44aae4:	cmp	x1, #0x74
  44aae8:	b.le	44a8cc <_obstack_memory_used@@Base+0xf0d4>
  44aaec:	and	x10, x10, #0xc00000
  44aaf0:	orr	w0, w0, #0x10
  44aaf4:	cmp	x10, #0x400, lsl #12
  44aaf8:	b.eq	44aba0 <_obstack_memory_used@@Base+0xf3a8>  // b.none
  44aafc:	cmp	x10, #0x800, lsl #12
  44ab00:	csel	x2, x12, xzr, eq  // eq = none
  44ab04:	b	44a8bc <_obstack_memory_used@@Base+0xf0c4>
  44ab08:	lsl	x8, x13, #1
  44ab0c:	sub	x5, x5, #0x2
  44ab10:	cmp	x13, x8
  44ab14:	cinc	x1, x9, hi  // hi = pmore
  44ab18:	cmp	x4, x8
  44ab1c:	add	x1, x2, x1
  44ab20:	cset	w2, ne  // ne = any
  44ab24:	b	44a658 <_obstack_memory_used@@Base+0xee60>
  44ab28:	and	x1, x2, #0xf
  44ab2c:	cmp	x1, #0x4
  44ab30:	b.eq	44ab3c <_obstack_memory_used@@Base+0xf344>  // b.none
  44ab34:	adds	x2, x2, #0x4
  44ab38:	cinc	x6, x6, cs  // cs = hs, nlast
  44ab3c:	tbz	x6, #51, 44a92c <_obstack_memory_used@@Base+0xf134>
  44ab40:	orr	w0, w0, #0x8
  44ab44:	mov	w1, #0x1                   	// #1
  44ab48:	mov	x6, #0x0                   	// #0
  44ab4c:	mov	x2, #0x0                   	// #0
  44ab50:	b	44a9b0 <_obstack_memory_used@@Base+0xf1b8>
  44ab54:	cmp	x12, #0x0
  44ab58:	mov	w2, #0x7fff                	// #32767
  44ab5c:	mov	x6, #0xffffffffffff        	// #281474976710655
  44ab60:	csel	w1, w1, w2, ne  // ne = any
  44ab64:	csel	x6, x6, xzr, ne  // ne = any
  44ab68:	csetm	x2, ne  // ne = any
  44ab6c:	b	44a9a8 <_obstack_memory_used@@Base+0xf1b0>
  44ab70:	mov	w11, #0x1                   	// #1
  44ab74:	cbnz	x12, 44a3d4 <_obstack_memory_used@@Base+0xebdc>
  44ab78:	adds	x5, x5, #0x8
  44ab7c:	mov	w11, #0x0                   	// #0
  44ab80:	cinc	x6, x6, cs  // cs = hs, nlast
  44ab84:	b	44a3d4 <_obstack_memory_used@@Base+0xebdc>
  44ab88:	sub	x5, x5, #0x2
  44ab8c:	add	x1, x1, x9
  44ab90:	b	44a5b4 <_obstack_memory_used@@Base+0xedbc>
  44ab94:	sub	x2, x2, #0x2
  44ab98:	add	x1, x1, x9
  44ab9c:	b	44a5e4 <_obstack_memory_used@@Base+0xedec>
  44aba0:	mov	x2, #0x1                   	// #1
  44aba4:	sub	x2, x2, x12
  44aba8:	b	44a8bc <_obstack_memory_used@@Base+0xf0c4>
  44abac:	cbnz	x12, 44ab3c <_obstack_memory_used@@Base+0xf344>
  44abb0:	adds	x2, x2, #0x8
  44abb4:	cinc	x6, x6, cs  // cs = hs, nlast
  44abb8:	tbnz	x6, #51, 44ab40 <_obstack_memory_used@@Base+0xf348>
  44abbc:	b	44a92c <_obstack_memory_used@@Base+0xf134>
  44abc0:	cbnz	x12, 44abb0 <_obstack_memory_used@@Base+0xf3b8>
  44abc4:	tbnz	x6, #51, 44ab40 <_obstack_memory_used@@Base+0xf348>
  44abc8:	b	44a92c <_obstack_memory_used@@Base+0xf134>
  44abcc:	orr	w0, w0, #0x10
  44abd0:	b	44ab40 <_obstack_memory_used@@Base+0xf348>
  44abd4:	nop
  44abd8:	stp	x29, x30, [sp, #-48]!
  44abdc:	mov	x29, sp
  44abe0:	str	q0, [sp, #16]
  44abe4:	str	q1, [sp, #32]
  44abe8:	ldp	x6, x1, [sp, #16]
  44abec:	ldp	x7, x0, [sp, #32]
  44abf0:	mrs	x2, fpcr
  44abf4:	ubfx	x4, x1, #48, #15
  44abf8:	lsr	x2, x1, #63
  44abfc:	lsr	x3, x0, #63
  44ac00:	ubfx	x9, x0, #0, #48
  44ac04:	mov	x5, #0x7fff                	// #32767
  44ac08:	mov	x10, x6
  44ac0c:	cmp	x4, x5
  44ac10:	and	w2, w2, #0xff
  44ac14:	ubfx	x1, x1, #0, #48
  44ac18:	and	w3, w3, #0xff
  44ac1c:	ubfx	x0, x0, #48, #15
  44ac20:	b.eq	44ac54 <_obstack_memory_used@@Base+0xf45c>  // b.none
  44ac24:	cmp	x0, x5
  44ac28:	b.eq	44ac40 <_obstack_memory_used@@Base+0xf448>  // b.none
  44ac2c:	cmp	x4, x0
  44ac30:	mov	w0, #0x1                   	// #1
  44ac34:	b.eq	44ac6c <_obstack_memory_used@@Base+0xf474>  // b.none
  44ac38:	ldp	x29, x30, [sp], #48
  44ac3c:	ret
  44ac40:	orr	x8, x9, x7
  44ac44:	cbnz	x8, 44acd0 <_obstack_memory_used@@Base+0xf4d8>
  44ac48:	mov	w0, #0x1                   	// #1
  44ac4c:	ldp	x29, x30, [sp], #48
  44ac50:	ret
  44ac54:	orr	x5, x1, x6
  44ac58:	cbnz	x5, 44aca0 <_obstack_memory_used@@Base+0xf4a8>
  44ac5c:	cmp	x0, x4
  44ac60:	b.ne	44ac48 <_obstack_memory_used@@Base+0xf450>  // b.any
  44ac64:	orr	x8, x9, x7
  44ac68:	cbnz	x8, 44acd0 <_obstack_memory_used@@Base+0xf4d8>
  44ac6c:	cmp	x1, x9
  44ac70:	mov	w0, #0x1                   	// #1
  44ac74:	ccmp	x6, x7, #0x0, eq  // eq = none
  44ac78:	b.ne	44ac38 <_obstack_memory_used@@Base+0xf440>  // b.any
  44ac7c:	cmp	w2, w3
  44ac80:	mov	w0, #0x0                   	// #0
  44ac84:	b.eq	44ac38 <_obstack_memory_used@@Base+0xf440>  // b.none
  44ac88:	mov	w0, #0x1                   	// #1
  44ac8c:	cbnz	x4, 44ac38 <_obstack_memory_used@@Base+0xf440>
  44ac90:	orr	x1, x1, x10
  44ac94:	cmp	x1, #0x0
  44ac98:	cset	w0, ne  // ne = any
  44ac9c:	b	44ac38 <_obstack_memory_used@@Base+0xf440>
  44aca0:	tst	x1, #0x800000000000
  44aca4:	b.ne	44acbc <_obstack_memory_used@@Base+0xf4c4>  // b.any
  44aca8:	mov	w0, #0x1                   	// #1
  44acac:	bl	44b830 <_obstack_memory_used@@Base+0x10038>
  44acb0:	mov	w0, #0x1                   	// #1
  44acb4:	ldp	x29, x30, [sp], #48
  44acb8:	ret
  44acbc:	cmp	x0, x4
  44acc0:	mov	w0, #0x1                   	// #1
  44acc4:	b.ne	44ac38 <_obstack_memory_used@@Base+0xf440>  // b.any
  44acc8:	orr	x8, x9, x7
  44accc:	cbz	x8, 44ac38 <_obstack_memory_used@@Base+0xf440>
  44acd0:	tst	x9, #0x800000000000
  44acd4:	b.eq	44aca8 <_obstack_memory_used@@Base+0xf4b0>  // b.none
  44acd8:	b	44ac48 <_obstack_memory_used@@Base+0xf450>
  44acdc:	nop
  44ace0:	stp	x29, x30, [sp, #-48]!
  44ace4:	mov	x29, sp
  44ace8:	str	q0, [sp, #16]
  44acec:	str	q1, [sp, #32]
  44acf0:	ldp	x8, x1, [sp, #16]
  44acf4:	ldp	x9, x0, [sp, #32]
  44acf8:	mrs	x2, fpcr
  44acfc:	ubfx	x4, x1, #48, #15
  44ad00:	ubfx	x10, x1, #0, #48
  44ad04:	lsr	x2, x1, #63
  44ad08:	mov	x5, #0x7fff                	// #32767
  44ad0c:	mov	x6, x8
  44ad10:	cmp	x4, x5
  44ad14:	ubfx	x11, x0, #0, #48
  44ad18:	ubfx	x7, x0, #48, #15
  44ad1c:	lsr	x1, x0, #63
  44ad20:	mov	x3, x9
  44ad24:	b.eq	44ad5c <_obstack_memory_used@@Base+0xf564>  // b.none
  44ad28:	cmp	x7, x5
  44ad2c:	b.eq	44ad6c <_obstack_memory_used@@Base+0xf574>  // b.none
  44ad30:	cbnz	x4, 44ad98 <_obstack_memory_used@@Base+0xf5a0>
  44ad34:	orr	x6, x10, x8
  44ad38:	cmp	x6, #0x0
  44ad3c:	cset	w0, eq  // eq = none
  44ad40:	cbnz	x7, 44ad84 <_obstack_memory_used@@Base+0xf58c>
  44ad44:	orr	x3, x11, x9
  44ad48:	cbnz	x3, 44ad84 <_obstack_memory_used@@Base+0xf58c>
  44ad4c:	mov	w0, #0x0                   	// #0
  44ad50:	cbnz	x6, 44adac <_obstack_memory_used@@Base+0xf5b4>
  44ad54:	ldp	x29, x30, [sp], #48
  44ad58:	ret
  44ad5c:	orr	x0, x10, x8
  44ad60:	cbnz	x0, 44adc0 <_obstack_memory_used@@Base+0xf5c8>
  44ad64:	cmp	x7, x4
  44ad68:	b.ne	44ad98 <_obstack_memory_used@@Base+0xf5a0>  // b.any
  44ad6c:	orr	x3, x11, x3
  44ad70:	cbnz	x3, 44adc0 <_obstack_memory_used@@Base+0xf5c8>
  44ad74:	cbnz	x4, 44ada4 <_obstack_memory_used@@Base+0xf5ac>
  44ad78:	orr	x6, x10, x6
  44ad7c:	cmp	x6, #0x0
  44ad80:	cset	w0, eq  // eq = none
  44ad84:	cbz	w0, 44ada4 <_obstack_memory_used@@Base+0xf5ac>
  44ad88:	cmp	x1, #0x0
  44ad8c:	csinv	w0, w0, wzr, ne  // ne = any
  44ad90:	ldp	x29, x30, [sp], #48
  44ad94:	ret
  44ad98:	cbnz	x7, 44ada4 <_obstack_memory_used@@Base+0xf5ac>
  44ad9c:	orr	x3, x11, x3
  44ada0:	cbz	x3, 44adac <_obstack_memory_used@@Base+0xf5b4>
  44ada4:	cmp	x2, x1
  44ada8:	b.eq	44add4 <_obstack_memory_used@@Base+0xf5dc>  // b.none
  44adac:	cmp	x2, #0x0
  44adb0:	mov	w0, #0xffffffff            	// #-1
  44adb4:	cneg	w0, w0, eq  // eq = none
  44adb8:	ldp	x29, x30, [sp], #48
  44adbc:	ret
  44adc0:	mov	w0, #0x1                   	// #1
  44adc4:	bl	44b830 <_obstack_memory_used@@Base+0x10038>
  44adc8:	mov	w0, #0x2                   	// #2
  44adcc:	ldp	x29, x30, [sp], #48
  44add0:	ret
  44add4:	cmp	x4, x7
  44add8:	b.gt	44adac <_obstack_memory_used@@Base+0xf5b4>
  44addc:	b.lt	44ae10 <_obstack_memory_used@@Base+0xf618>  // b.tstop
  44ade0:	cmp	x10, x11
  44ade4:	b.hi	44adac <_obstack_memory_used@@Base+0xf5b4>  // b.pmore
  44ade8:	cset	w0, eq  // eq = none
  44adec:	cmp	w0, #0x0
  44adf0:	ccmp	x8, x9, #0x0, ne  // ne = any
  44adf4:	b.hi	44adac <_obstack_memory_used@@Base+0xf5b4>  // b.pmore
  44adf8:	cmp	x10, x11
  44adfc:	b.cc	44ae10 <_obstack_memory_used@@Base+0xf618>  // b.lo, b.ul, b.last
  44ae00:	cmp	w0, #0x0
  44ae04:	mov	w0, #0x0                   	// #0
  44ae08:	ccmp	x8, x9, #0x2, ne  // ne = any
  44ae0c:	b.cs	44ad54 <_obstack_memory_used@@Base+0xf55c>  // b.hs, b.nlast
  44ae10:	cmp	x2, #0x0
  44ae14:	mov	w0, #0x1                   	// #1
  44ae18:	cneg	w0, w0, eq  // eq = none
  44ae1c:	b	44ad54 <_obstack_memory_used@@Base+0xf55c>
  44ae20:	stp	x29, x30, [sp, #-80]!
  44ae24:	mov	x29, sp
  44ae28:	str	q0, [sp, #48]
  44ae2c:	str	q1, [sp, #64]
  44ae30:	ldp	x1, x0, [sp, #48]
  44ae34:	ldp	x6, x2, [sp, #64]
  44ae38:	mrs	x11, fpcr
  44ae3c:	lsr	x3, x0, #63
  44ae40:	ubfx	x7, x0, #0, #48
  44ae44:	and	w12, w3, #0xff
  44ae48:	mov	x14, x3
  44ae4c:	ubfx	x3, x0, #48, #15
  44ae50:	cbz	w3, 44b1f8 <_obstack_memory_used@@Base+0xfa00>
  44ae54:	mov	w4, #0x7fff                	// #32767
  44ae58:	cmp	w3, w4
  44ae5c:	b.eq	44b29c <_obstack_memory_used@@Base+0xfaa4>  // b.none
  44ae60:	and	x3, x3, #0xffff
  44ae64:	extr	x4, x7, x1, #61
  44ae68:	mov	x18, #0xffffffffffffc001    	// #-16383
  44ae6c:	orr	x7, x4, #0x8000000000000
  44ae70:	add	x3, x3, x18
  44ae74:	lsl	x5, x1, #3
  44ae78:	mov	x16, #0x0                   	// #0
  44ae7c:	mov	x1, #0x0                   	// #0
  44ae80:	mov	w0, #0x0                   	// #0
  44ae84:	lsr	x8, x2, #63
  44ae88:	ubfx	x4, x2, #0, #48
  44ae8c:	and	w15, w8, #0xff
  44ae90:	mov	x13, x8
  44ae94:	ubfx	x9, x2, #48, #15
  44ae98:	cbz	w9, 44b258 <_obstack_memory_used@@Base+0xfa60>
  44ae9c:	mov	w8, #0x7fff                	// #32767
  44aea0:	cmp	w9, w8
  44aea4:	b.eq	44af28 <_obstack_memory_used@@Base+0xf730>  // b.none
  44aea8:	and	x9, x9, #0xffff
  44aeac:	mov	x17, #0xffffffffffffc001    	// #-16383
  44aeb0:	add	x9, x9, x17
  44aeb4:	extr	x2, x4, x6, #61
  44aeb8:	add	x9, x9, x3
  44aebc:	lsl	x6, x6, #3
  44aec0:	orr	x4, x2, #0x8000000000000
  44aec4:	mov	x2, #0x0                   	// #0
  44aec8:	eor	w8, w12, w15
  44aecc:	cmp	x1, #0xa
  44aed0:	and	w10, w8, #0xff
  44aed4:	add	x3, x9, #0x1
  44aed8:	and	x8, x8, #0xff
  44aedc:	b.le	44af60 <_obstack_memory_used@@Base+0xf768>
  44aee0:	cmp	x1, #0xb
  44aee4:	b.eq	44b5f8 <_obstack_memory_used@@Base+0xfe00>  // b.none
  44aee8:	mov	w15, w12
  44aeec:	mov	x13, x14
  44aef0:	mov	w10, w15
  44aef4:	cmp	x16, #0x2
  44aef8:	b.eq	44b2bc <_obstack_memory_used@@Base+0xfac4>  // b.none
  44aefc:	mov	x4, x7
  44af00:	mov	x6, x5
  44af04:	mov	x2, x16
  44af08:	mov	x8, x13
  44af0c:	cmp	x2, #0x3
  44af10:	b.ne	44af7c <_obstack_memory_used@@Base+0xf784>  // b.any
  44af14:	orr	x4, x4, #0x800000000000
  44af18:	mov	x5, x6
  44af1c:	and	x4, x4, #0xffffffffffff
  44af20:	mov	w1, #0x7fff                	// #32767
  44af24:	b	44af90 <_obstack_memory_used@@Base+0xf798>
  44af28:	mov	x8, #0x7fff                	// #32767
  44af2c:	orr	x2, x4, x6
  44af30:	add	x9, x3, x8
  44af34:	cbnz	x2, 44afb4 <_obstack_memory_used@@Base+0xf7bc>
  44af38:	eor	w8, w12, w15
  44af3c:	orr	x1, x1, #0x2
  44af40:	and	w10, w8, #0xff
  44af44:	cmp	x1, #0xa
  44af48:	add	x3, x3, #0x8, lsl #12
  44af4c:	and	x8, x8, #0xff
  44af50:	mov	x6, #0x0                   	// #0
  44af54:	b.gt	44b56c <_obstack_memory_used@@Base+0xfd74>
  44af58:	mov	x4, #0x0                   	// #0
  44af5c:	mov	x2, #0x2                   	// #2
  44af60:	cmp	x1, #0x2
  44af64:	b.gt	44afdc <_obstack_memory_used@@Base+0xf7e4>
  44af68:	sub	x1, x1, #0x1
  44af6c:	cmp	x1, #0x1
  44af70:	b.hi	44b018 <_obstack_memory_used@@Base+0xf820>  // b.pmore
  44af74:	cmp	x2, #0x2
  44af78:	b.eq	44b2bc <_obstack_memory_used@@Base+0xfac4>  // b.none
  44af7c:	cmp	x2, #0x1
  44af80:	b.ne	44b178 <_obstack_memory_used@@Base+0xf980>  // b.any
  44af84:	mov	w1, #0x0                   	// #0
  44af88:	mov	x4, #0x0                   	// #0
  44af8c:	mov	x5, #0x0                   	// #0
  44af90:	mov	x3, #0x0                   	// #0
  44af94:	orr	w1, w1, w10, lsl #15
  44af98:	bfxil	x3, x4, #0, #48
  44af9c:	fmov	d0, x5
  44afa0:	bfi	x3, x1, #48, #16
  44afa4:	fmov	v0.d[1], x3
  44afa8:	cbnz	w0, 44b3e8 <_obstack_memory_used@@Base+0xfbf0>
  44afac:	ldp	x29, x30, [sp], #80
  44afb0:	ret
  44afb4:	tst	x4, #0x800000000000
  44afb8:	eor	w8, w12, w15
  44afbc:	orr	x1, x1, #0x3
  44afc0:	csinc	w0, w0, wzr, ne  // ne = any
  44afc4:	and	w10, w8, #0xff
  44afc8:	add	x3, x3, #0x8, lsl #12
  44afcc:	cmp	x1, #0xa
  44afd0:	and	x8, x8, #0xff
  44afd4:	mov	x2, #0x3                   	// #3
  44afd8:	b.gt	44b5ec <_obstack_memory_used@@Base+0xfdf4>
  44afdc:	mov	x12, #0x1                   	// #1
  44afe0:	mov	x14, #0x530                 	// #1328
  44afe4:	lsl	x1, x12, x1
  44afe8:	tst	x1, x14
  44afec:	b.ne	44b1ec <_obstack_memory_used@@Base+0xf9f4>  // b.any
  44aff0:	mov	x14, #0x240                 	// #576
  44aff4:	tst	x1, x14
  44aff8:	b.ne	44b1d4 <_obstack_memory_used@@Base+0xf9dc>  // b.any
  44affc:	mov	x12, #0x88                  	// #136
  44b000:	tst	x1, x12
  44b004:	b.eq	44b018 <_obstack_memory_used@@Base+0xf820>  // b.none
  44b008:	mov	x7, x4
  44b00c:	mov	x5, x6
  44b010:	mov	x16, x2
  44b014:	b	44aef0 <_obstack_memory_used@@Base+0xf6f8>
  44b018:	lsr	x13, x5, #32
  44b01c:	and	x12, x6, #0xffffffff
  44b020:	and	x15, x5, #0xffffffff
  44b024:	lsr	x6, x6, #32
  44b028:	and	x18, x4, #0xffffffff
  44b02c:	lsr	x2, x4, #32
  44b030:	mul	x4, x13, x12
  44b034:	stp	x21, x22, [sp, #32]
  44b038:	lsr	x22, x7, #32
  44b03c:	and	x5, x7, #0xffffffff
  44b040:	mul	x16, x12, x15
  44b044:	madd	x7, x6, x15, x4
  44b048:	stp	x19, x20, [sp, #16]
  44b04c:	mul	x1, x13, x18
  44b050:	mul	x17, x15, x18
  44b054:	and	x30, x16, #0xffffffff
  44b058:	madd	x15, x2, x15, x1
  44b05c:	add	x16, x7, x16, lsr #32
  44b060:	mul	x21, x22, x12
  44b064:	cmp	x4, x16
  44b068:	mul	x20, x22, x18
  44b06c:	mov	x14, #0x100000000           	// #4294967296
  44b070:	mul	x19, x13, x6
  44b074:	add	x15, x15, x17, lsr #32
  44b078:	mul	x12, x12, x5
  44b07c:	and	x17, x17, #0xffffffff
  44b080:	mul	x18, x5, x18
  44b084:	add	x4, x19, x14
  44b088:	madd	x7, x6, x5, x21
  44b08c:	csel	x19, x4, x19, hi  // hi = pmore
  44b090:	madd	x5, x2, x5, x20
  44b094:	cmp	x1, x15
  44b098:	mul	x13, x13, x2
  44b09c:	add	x17, x17, x15, lsl #32
  44b0a0:	mul	x6, x6, x22
  44b0a4:	add	x7, x7, x12, lsr #32
  44b0a8:	add	x5, x5, x18, lsr #32
  44b0ac:	add	x4, x13, x14
  44b0b0:	mul	x2, x2, x22
  44b0b4:	csel	x13, x4, x13, hi  // hi = pmore
  44b0b8:	and	x1, x18, #0xffffffff
  44b0bc:	cmp	x21, x7
  44b0c0:	add	x4, x6, x14
  44b0c4:	add	x30, x30, x16, lsl #32
  44b0c8:	csel	x6, x4, x6, hi  // hi = pmore
  44b0cc:	add	x13, x13, x15, lsr #32
  44b0d0:	cmp	x20, x5
  44b0d4:	add	x1, x1, x5, lsl #32
  44b0d8:	add	x16, x17, x16, lsr #32
  44b0dc:	add	x14, x2, x14
  44b0e0:	csel	x2, x14, x2, hi  // hi = pmore
  44b0e4:	add	x16, x19, x16
  44b0e8:	adds	x1, x1, x13
  44b0ec:	and	x12, x12, #0xffffffff
  44b0f0:	cset	x13, cs  // cs = hs, nlast
  44b0f4:	cmp	x16, x17
  44b0f8:	cset	x4, cc  // cc = lo, ul, last
  44b0fc:	add	x12, x12, x7, lsl #32
  44b100:	adds	x1, x1, x4
  44b104:	lsr	x5, x5, #32
  44b108:	cset	x4, cs  // cs = hs, nlast
  44b10c:	cmp	x13, #0x0
  44b110:	ccmp	x4, #0x0, #0x0, eq  // eq = none
  44b114:	add	x7, x6, x7, lsr #32
  44b118:	cinc	x5, x5, ne  // ne = any
  44b11c:	adds	x6, x16, x12
  44b120:	cset	x4, cs  // cs = hs, nlast
  44b124:	adds	x1, x1, x7
  44b128:	cset	x7, cs  // cs = hs, nlast
  44b12c:	adds	x4, x1, x4
  44b130:	cset	x1, cs  // cs = hs, nlast
  44b134:	cmp	x7, #0x0
  44b138:	orr	x30, x30, x6, lsl #13
  44b13c:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  44b140:	cinc	x1, x2, ne  // ne = any
  44b144:	cmp	x30, #0x0
  44b148:	add	x1, x1, x5
  44b14c:	cset	x2, ne  // ne = any
  44b150:	orr	x6, x2, x6, lsr #51
  44b154:	orr	x6, x6, x4, lsl #13
  44b158:	extr	x4, x1, x4, #51
  44b15c:	tbz	x1, #39, 44b470 <_obstack_memory_used@@Base+0xfc78>
  44b160:	ldp	x19, x20, [sp, #16]
  44b164:	and	x1, x6, #0x1
  44b168:	ldp	x21, x22, [sp, #32]
  44b16c:	orr	x6, x1, x6, lsr #1
  44b170:	orr	x6, x6, x4, lsl #63
  44b174:	lsr	x4, x4, #1
  44b178:	mov	x1, #0x3fff                	// #16383
  44b17c:	add	x2, x3, x1
  44b180:	cmp	x2, #0x0
  44b184:	b.le	44b31c <_obstack_memory_used@@Base+0xfb24>
  44b188:	tst	x6, #0x7
  44b18c:	b.eq	44b1ac <_obstack_memory_used@@Base+0xf9b4>  // b.none
  44b190:	and	x1, x11, #0xc00000
  44b194:	orr	w0, w0, #0x10
  44b198:	cmp	x1, #0x400, lsl #12
  44b19c:	b.eq	44b564 <_obstack_memory_used@@Base+0xfd6c>  // b.none
  44b1a0:	cmp	x1, #0x800, lsl #12
  44b1a4:	b.eq	44b50c <_obstack_memory_used@@Base+0xfd14>  // b.none
  44b1a8:	cbz	x1, 44b4f4 <_obstack_memory_used@@Base+0xfcfc>
  44b1ac:	tbz	x4, #52, 44b1b8 <_obstack_memory_used@@Base+0xf9c0>
  44b1b0:	and	x4, x4, #0xffefffffffffffff
  44b1b4:	add	x2, x3, #0x4, lsl #12
  44b1b8:	mov	x1, #0x7ffe                	// #32766
  44b1bc:	cmp	x2, x1
  44b1c0:	b.gt	44b444 <_obstack_memory_used@@Base+0xfc4c>
  44b1c4:	and	w1, w2, #0x7fff
  44b1c8:	extr	x5, x4, x6, #3
  44b1cc:	ubfx	x4, x4, #3, #48
  44b1d0:	b	44af90 <_obstack_memory_used@@Base+0xf798>
  44b1d4:	mov	w0, w12
  44b1d8:	mov	w10, #0x0                   	// #0
  44b1dc:	mov	x4, #0xffffffffffff        	// #281474976710655
  44b1e0:	mov	x5, #0xffffffffffffffff    	// #-1
  44b1e4:	mov	w1, #0x7fff                	// #32767
  44b1e8:	b	44af90 <_obstack_memory_used@@Base+0xf798>
  44b1ec:	mov	w15, w10
  44b1f0:	mov	x13, x8
  44b1f4:	b	44aef0 <_obstack_memory_used@@Base+0xf6f8>
  44b1f8:	orr	x5, x7, x1
  44b1fc:	cbz	x5, 44b304 <_obstack_memory_used@@Base+0xfb0c>
  44b200:	cbz	x7, 44b420 <_obstack_memory_used@@Base+0xfc28>
  44b204:	clz	x0, x7
  44b208:	sub	x4, x0, #0xf
  44b20c:	add	w5, w4, #0x3
  44b210:	mov	w3, #0x3d                  	// #61
  44b214:	sub	w3, w3, w4
  44b218:	lsl	x4, x7, x5
  44b21c:	lsr	x3, x1, x3
  44b220:	orr	x7, x3, x4
  44b224:	lsl	x5, x1, x5
  44b228:	lsr	x8, x2, #63
  44b22c:	mov	x3, #0xffffffffffffc011    	// #-16367
  44b230:	ubfx	x4, x2, #0, #48
  44b234:	sub	x3, x3, x0
  44b238:	and	w15, w8, #0xff
  44b23c:	mov	x13, x8
  44b240:	ubfx	x9, x2, #48, #15
  44b244:	mov	x1, #0x0                   	// #0
  44b248:	mov	x16, #0x0                   	// #0
  44b24c:	mov	w0, #0x0                   	// #0
  44b250:	cbnz	w9, 44ae9c <_obstack_memory_used@@Base+0xf6a4>
  44b254:	nop
  44b258:	orr	x2, x4, x6
  44b25c:	cbz	x2, 44b2cc <_obstack_memory_used@@Base+0xfad4>
  44b260:	cbz	x4, 44b3fc <_obstack_memory_used@@Base+0xfc04>
  44b264:	clz	x9, x4
  44b268:	sub	x2, x9, #0xf
  44b26c:	add	w10, w2, #0x3
  44b270:	mov	w8, #0x3d                  	// #61
  44b274:	sub	w8, w8, w2
  44b278:	lsl	x2, x4, x10
  44b27c:	lsr	x8, x6, x8
  44b280:	orr	x4, x8, x2
  44b284:	lsl	x6, x6, x10
  44b288:	sub	x9, x3, x9
  44b28c:	mov	x10, #0xffffffffffffc011    	// #-16367
  44b290:	mov	x2, #0x0                   	// #0
  44b294:	add	x9, x9, x10
  44b298:	b	44aec8 <_obstack_memory_used@@Base+0xf6d0>
  44b29c:	orr	x5, x7, x1
  44b2a0:	cbnz	x5, 44b2e4 <_obstack_memory_used@@Base+0xfaec>
  44b2a4:	mov	x7, #0x0                   	// #0
  44b2a8:	mov	x1, #0x8                   	// #8
  44b2ac:	mov	x3, #0x7fff                	// #32767
  44b2b0:	mov	x16, #0x2                   	// #2
  44b2b4:	mov	w0, #0x0                   	// #0
  44b2b8:	b	44ae84 <_obstack_memory_used@@Base+0xf68c>
  44b2bc:	mov	w1, #0x7fff                	// #32767
  44b2c0:	mov	x4, #0x0                   	// #0
  44b2c4:	mov	x5, #0x0                   	// #0
  44b2c8:	b	44af90 <_obstack_memory_used@@Base+0xf798>
  44b2cc:	orr	x1, x1, #0x1
  44b2d0:	mov	x9, x3
  44b2d4:	mov	x4, #0x0                   	// #0
  44b2d8:	mov	x6, #0x0                   	// #0
  44b2dc:	mov	x2, #0x1                   	// #1
  44b2e0:	b	44aec8 <_obstack_memory_used@@Base+0xf6d0>
  44b2e4:	lsr	x0, x7, #47
  44b2e8:	mov	x5, x1
  44b2ec:	eor	x0, x0, #0x1
  44b2f0:	mov	x1, #0xc                   	// #12
  44b2f4:	and	w0, w0, #0x1
  44b2f8:	mov	x3, #0x7fff                	// #32767
  44b2fc:	mov	x16, #0x3                   	// #3
  44b300:	b	44ae84 <_obstack_memory_used@@Base+0xf68c>
  44b304:	mov	x7, #0x0                   	// #0
  44b308:	mov	x1, #0x4                   	// #4
  44b30c:	mov	x3, #0x0                   	// #0
  44b310:	mov	x16, #0x1                   	// #1
  44b314:	mov	w0, #0x0                   	// #0
  44b318:	b	44ae84 <_obstack_memory_used@@Base+0xf68c>
  44b31c:	mov	x1, #0x1                   	// #1
  44b320:	sub	x2, x1, x2
  44b324:	cmp	x2, #0x74
  44b328:	b.gt	44b3a0 <_obstack_memory_used@@Base+0xfba8>
  44b32c:	cmp	x2, #0x3f
  44b330:	b.le	44b480 <_obstack_memory_used@@Base+0xfc88>
  44b334:	mov	w1, #0x80                  	// #128
  44b338:	sub	w1, w1, w2
  44b33c:	cmp	x2, #0x40
  44b340:	sub	w2, w2, #0x40
  44b344:	lsl	x1, x4, x1
  44b348:	orr	x1, x6, x1
  44b34c:	csel	x6, x1, x6, ne  // ne = any
  44b350:	lsr	x2, x4, x2
  44b354:	cmp	x6, #0x0
  44b358:	cset	x5, ne  // ne = any
  44b35c:	orr	x5, x5, x2
  44b360:	ands	x2, x5, #0x7
  44b364:	b.eq	44b4b4 <_obstack_memory_used@@Base+0xfcbc>  // b.none
  44b368:	mov	x2, #0x0                   	// #0
  44b36c:	and	x11, x11, #0xc00000
  44b370:	orr	w0, w0, #0x10
  44b374:	cmp	x11, #0x400, lsl #12
  44b378:	b.eq	44b5c4 <_obstack_memory_used@@Base+0xfdcc>  // b.none
  44b37c:	cmp	x11, #0x800, lsl #12
  44b380:	b.eq	44b5d8 <_obstack_memory_used@@Base+0xfde0>  // b.none
  44b384:	cbz	x11, 44b51c <_obstack_memory_used@@Base+0xfd24>
  44b388:	tbnz	x2, #51, 44b534 <_obstack_memory_used@@Base+0xfd3c>
  44b38c:	ubfx	x4, x2, #3, #48
  44b390:	extr	x5, x2, x5, #3
  44b394:	orr	w0, w0, #0x8
  44b398:	mov	w1, #0x0                   	// #0
  44b39c:	b	44b3d0 <_obstack_memory_used@@Base+0xfbd8>
  44b3a0:	orr	x5, x6, x4
  44b3a4:	cbz	x5, 44b3c4 <_obstack_memory_used@@Base+0xfbcc>
  44b3a8:	and	x11, x11, #0xc00000
  44b3ac:	orr	w0, w0, #0x10
  44b3b0:	cmp	x11, #0x400, lsl #12
  44b3b4:	sub	x5, x1, x8
  44b3b8:	b.eq	44b3c4 <_obstack_memory_used@@Base+0xfbcc>  // b.none
  44b3bc:	cmp	x11, #0x800, lsl #12
  44b3c0:	csel	x5, x8, xzr, eq  // eq = none
  44b3c4:	orr	w0, w0, #0x8
  44b3c8:	mov	w1, #0x0                   	// #0
  44b3cc:	mov	x4, #0x0                   	// #0
  44b3d0:	mov	x3, #0x0                   	// #0
  44b3d4:	fmov	d0, x5
  44b3d8:	bfxil	x3, x4, #0, #48
  44b3dc:	bfi	x3, x1, #48, #15
  44b3e0:	bfi	x3, x10, #63, #1
  44b3e4:	fmov	v0.d[1], x3
  44b3e8:	str	q0, [sp, #48]
  44b3ec:	bl	44b830 <_obstack_memory_used@@Base+0x10038>
  44b3f0:	ldr	q0, [sp, #48]
  44b3f4:	ldp	x29, x30, [sp], #80
  44b3f8:	ret
  44b3fc:	clz	x9, x6
  44b400:	add	x2, x9, #0x31
  44b404:	add	x9, x9, #0x40
  44b408:	cmp	x2, #0x3c
  44b40c:	b.le	44b26c <_obstack_memory_used@@Base+0xfa74>
  44b410:	sub	w2, w2, #0x3d
  44b414:	lsl	x4, x6, x2
  44b418:	mov	x6, #0x0                   	// #0
  44b41c:	b	44b288 <_obstack_memory_used@@Base+0xfa90>
  44b420:	clz	x3, x1
  44b424:	add	x4, x3, #0x31
  44b428:	add	x0, x3, #0x40
  44b42c:	cmp	x4, #0x3c
  44b430:	b.le	44b20c <_obstack_memory_used@@Base+0xfa14>
  44b434:	sub	w4, w4, #0x3d
  44b438:	mov	x5, #0x0                   	// #0
  44b43c:	lsl	x7, x1, x4
  44b440:	b	44b228 <_obstack_memory_used@@Base+0xfa30>
  44b444:	and	x5, x11, #0xc00000
  44b448:	cmp	x5, #0x400, lsl #12
  44b44c:	b.eq	44b548 <_obstack_memory_used@@Base+0xfd50>  // b.none
  44b450:	cmp	x5, #0x800, lsl #12
  44b454:	b.eq	44b4d8 <_obstack_memory_used@@Base+0xfce0>  // b.none
  44b458:	cbz	x5, 44b4cc <_obstack_memory_used@@Base+0xfcd4>
  44b45c:	mov	x4, #0xffffffffffff        	// #281474976710655
  44b460:	mov	x5, #0xffffffffffffffff    	// #-1
  44b464:	mov	w2, #0x14                  	// #20
  44b468:	orr	w0, w0, w2
  44b46c:	b	44b3d0 <_obstack_memory_used@@Base+0xfbd8>
  44b470:	mov	x3, x9
  44b474:	ldp	x19, x20, [sp, #16]
  44b478:	ldp	x21, x22, [sp, #32]
  44b47c:	b	44b178 <_obstack_memory_used@@Base+0xf980>
  44b480:	mov	w1, #0x40                  	// #64
  44b484:	sub	w1, w1, w2
  44b488:	lsr	x3, x6, x2
  44b48c:	lsl	x6, x6, x1
  44b490:	cmp	x6, #0x0
  44b494:	lsl	x5, x4, x1
  44b498:	cset	x1, ne  // ne = any
  44b49c:	orr	x5, x5, x3
  44b4a0:	lsr	x2, x4, x2
  44b4a4:	orr	x5, x5, x1
  44b4a8:	tst	x5, #0x7
  44b4ac:	b.ne	44b36c <_obstack_memory_used@@Base+0xfb74>  // b.any
  44b4b0:	tbnz	x2, #51, 44b5e4 <_obstack_memory_used@@Base+0xfdec>
  44b4b4:	ubfx	x4, x2, #3, #48
  44b4b8:	extr	x5, x2, x5, #3
  44b4bc:	mov	w1, #0x0                   	// #0
  44b4c0:	tbz	w11, #11, 44af90 <_obstack_memory_used@@Base+0xf798>
  44b4c4:	orr	w0, w0, #0x8
  44b4c8:	b	44b3d0 <_obstack_memory_used@@Base+0xfbd8>
  44b4cc:	mov	w1, #0x7fff                	// #32767
  44b4d0:	mov	x4, #0x0                   	// #0
  44b4d4:	b	44b464 <_obstack_memory_used@@Base+0xfc6c>
  44b4d8:	cmp	x8, #0x0
  44b4dc:	mov	w2, #0x7fff                	// #32767
  44b4e0:	mov	x4, #0xffffffffffff        	// #281474976710655
  44b4e4:	csel	w1, w1, w2, eq  // eq = none
  44b4e8:	csel	x4, x4, xzr, eq  // eq = none
  44b4ec:	csetm	x5, eq  // eq = none
  44b4f0:	b	44b464 <_obstack_memory_used@@Base+0xfc6c>
  44b4f4:	and	x1, x6, #0xf
  44b4f8:	cmp	x1, #0x4
  44b4fc:	b.eq	44b1ac <_obstack_memory_used@@Base+0xf9b4>  // b.none
  44b500:	adds	x6, x6, #0x4
  44b504:	cinc	x4, x4, cs  // cs = hs, nlast
  44b508:	b	44b1ac <_obstack_memory_used@@Base+0xf9b4>
  44b50c:	cbz	x8, 44b1ac <_obstack_memory_used@@Base+0xf9b4>
  44b510:	adds	x6, x6, #0x8
  44b514:	cinc	x4, x4, cs  // cs = hs, nlast
  44b518:	b	44b1ac <_obstack_memory_used@@Base+0xf9b4>
  44b51c:	and	x1, x5, #0xf
  44b520:	cmp	x1, #0x4
  44b524:	b.eq	44b530 <_obstack_memory_used@@Base+0xfd38>  // b.none
  44b528:	adds	x5, x5, #0x4
  44b52c:	cinc	x2, x2, cs  // cs = hs, nlast
  44b530:	tbz	x2, #51, 44b38c <_obstack_memory_used@@Base+0xfb94>
  44b534:	orr	w0, w0, #0x8
  44b538:	mov	w1, #0x1                   	// #1
  44b53c:	mov	x4, #0x0                   	// #0
  44b540:	mov	x5, #0x0                   	// #0
  44b544:	b	44b3d0 <_obstack_memory_used@@Base+0xfbd8>
  44b548:	cmp	x8, #0x0
  44b54c:	mov	w2, #0x7fff                	// #32767
  44b550:	mov	x4, #0xffffffffffff        	// #281474976710655
  44b554:	csel	w1, w1, w2, ne  // ne = any
  44b558:	csel	x4, x4, xzr, ne  // ne = any
  44b55c:	csetm	x5, ne  // ne = any
  44b560:	b	44b464 <_obstack_memory_used@@Base+0xfc6c>
  44b564:	cbnz	x8, 44b1ac <_obstack_memory_used@@Base+0xf9b4>
  44b568:	b	44b510 <_obstack_memory_used@@Base+0xfd18>
  44b56c:	mov	x4, #0x2                   	// #2
  44b570:	cmp	x1, #0xf
  44b574:	b.ne	44b598 <_obstack_memory_used@@Base+0xfda0>  // b.any
  44b578:	tbz	x7, #47, 44b5b0 <_obstack_memory_used@@Base+0xfdb8>
  44b57c:	tbnz	x2, #47, 44b5b0 <_obstack_memory_used@@Base+0xfdb8>
  44b580:	orr	x4, x2, #0x800000000000
  44b584:	mov	w10, w15
  44b588:	and	x4, x4, #0xffffffffffff
  44b58c:	mov	x5, x6
  44b590:	mov	w1, #0x7fff                	// #32767
  44b594:	b	44af90 <_obstack_memory_used@@Base+0xf798>
  44b598:	cmp	x1, #0xb
  44b59c:	b.ne	44aee8 <_obstack_memory_used@@Base+0xf6f0>  // b.any
  44b5a0:	mov	x7, x2
  44b5a4:	mov	x5, x6
  44b5a8:	mov	x16, x4
  44b5ac:	b	44aef0 <_obstack_memory_used@@Base+0xf6f8>
  44b5b0:	orr	x4, x7, #0x800000000000
  44b5b4:	mov	w10, w12
  44b5b8:	and	x4, x4, #0xffffffffffff
  44b5bc:	mov	w1, #0x7fff                	// #32767
  44b5c0:	b	44af90 <_obstack_memory_used@@Base+0xf798>
  44b5c4:	cbnz	x8, 44b530 <_obstack_memory_used@@Base+0xfd38>
  44b5c8:	adds	x5, x5, #0x8
  44b5cc:	cinc	x2, x2, cs  // cs = hs, nlast
  44b5d0:	tbnz	x2, #51, 44b534 <_obstack_memory_used@@Base+0xfd3c>
  44b5d4:	b	44b38c <_obstack_memory_used@@Base+0xfb94>
  44b5d8:	cbnz	x8, 44b5c8 <_obstack_memory_used@@Base+0xfdd0>
  44b5dc:	tbnz	x2, #51, 44b534 <_obstack_memory_used@@Base+0xfd3c>
  44b5e0:	b	44b38c <_obstack_memory_used@@Base+0xfb94>
  44b5e4:	orr	w0, w0, #0x10
  44b5e8:	b	44b534 <_obstack_memory_used@@Base+0xfd3c>
  44b5ec:	mov	x2, x4
  44b5f0:	mov	x4, #0x3                   	// #3
  44b5f4:	b	44b570 <_obstack_memory_used@@Base+0xfd78>
  44b5f8:	mov	w10, w15
  44b5fc:	mov	x8, x13
  44b600:	b	44af0c <_obstack_memory_used@@Base+0xf714>
  44b604:	nop
  44b608:	cbz	w0, 44b64c <_obstack_memory_used@@Base+0xfe54>
  44b60c:	mov	w0, w0
  44b610:	mov	w1, #0x403e                	// #16446
  44b614:	clz	x3, x0
  44b618:	mov	w2, #0x402f                	// #16431
  44b61c:	sub	w1, w1, w3
  44b620:	mov	x3, #0x0                   	// #0
  44b624:	sub	w2, w2, w1
  44b628:	and	w1, w1, #0x7fff
  44b62c:	lsl	x0, x0, x2
  44b630:	and	x0, x0, #0xffffffffffff
  44b634:	mov	x2, #0x0                   	// #0
  44b638:	fmov	d0, x2
  44b63c:	bfxil	x3, x0, #0, #48
  44b640:	bfi	x3, x1, #48, #16
  44b644:	fmov	v0.d[1], x3
  44b648:	ret
  44b64c:	mov	x0, #0x0                   	// #0
  44b650:	mov	x3, #0x0                   	// #0
  44b654:	bfxil	x3, x0, #0, #48
  44b658:	mov	x2, #0x0                   	// #0
  44b65c:	fmov	d0, x2
  44b660:	mov	w1, #0x0                   	// #0
  44b664:	bfi	x3, x1, #48, #16
  44b668:	fmov	v0.d[1], x3
  44b66c:	ret
  44b670:	stp	x29, x30, [sp, #-48]!
  44b674:	mov	x29, sp
  44b678:	str	x19, [sp, #16]
  44b67c:	str	q0, [sp, #32]
  44b680:	ldr	x19, [sp, #32]
  44b684:	ldr	x1, [sp, #40]
  44b688:	mrs	x0, fpcr
  44b68c:	ubfx	x3, x1, #48, #15
  44b690:	mov	x2, x19
  44b694:	mov	x4, #0x3ffe                	// #16382
  44b698:	ubfx	x19, x1, #0, #48
  44b69c:	cmp	x3, x4
  44b6a0:	b.gt	44b6cc <_obstack_memory_used@@Base+0xfed4>
  44b6a4:	cbnz	x3, 44b6b0 <_obstack_memory_used@@Base+0xfeb8>
  44b6a8:	orr	x19, x2, x19
  44b6ac:	cbz	x19, 44b6bc <_obstack_memory_used@@Base+0xfec4>
  44b6b0:	mov	w0, #0x10                  	// #16
  44b6b4:	mov	x19, #0x0                   	// #0
  44b6b8:	bl	44b830 <_obstack_memory_used@@Base+0x10038>
  44b6bc:	mov	x0, x19
  44b6c0:	ldr	x19, [sp, #16]
  44b6c4:	ldp	x29, x30, [sp], #48
  44b6c8:	ret
  44b6cc:	lsr	x0, x1, #63
  44b6d0:	mov	x4, #0x403f                	// #16447
  44b6d4:	and	w0, w0, #0xff
  44b6d8:	and	x5, x0, #0xff
  44b6dc:	sub	x4, x4, x5
  44b6e0:	cmp	x4, x3
  44b6e4:	b.le	44b738 <_obstack_memory_used@@Base+0xff40>
  44b6e8:	cbnz	x5, 44b74c <_obstack_memory_used@@Base+0xff54>
  44b6ec:	mov	x1, x3
  44b6f0:	mov	x0, #0x406f                	// #16495
  44b6f4:	sub	x3, x0, x3
  44b6f8:	orr	x4, x19, #0x1000000000000
  44b6fc:	cmp	x3, #0x3f
  44b700:	b.gt	44b75c <_obstack_memory_used@@Base+0xff64>
  44b704:	mov	w3, #0xffffbfd1            	// #-16431
  44b708:	add	w3, w1, w3
  44b70c:	sub	w1, w0, w1
  44b710:	lsl	x0, x2, x3
  44b714:	cmp	x0, #0x0
  44b718:	lsr	x19, x2, x1
  44b71c:	cset	w0, ne  // ne = any
  44b720:	lsl	x4, x4, x3
  44b724:	orr	x19, x19, x4
  44b728:	cbz	w0, 44b6bc <_obstack_memory_used@@Base+0xfec4>
  44b72c:	mov	w0, #0x10                  	// #16
  44b730:	bl	44b830 <_obstack_memory_used@@Base+0x10038>
  44b734:	b	44b6bc <_obstack_memory_used@@Base+0xfec4>
  44b738:	eor	w19, w0, #0x1
  44b73c:	mov	w0, #0x1                   	// #1
  44b740:	sbfx	x19, x19, #0, #1
  44b744:	bl	44b830 <_obstack_memory_used@@Base+0x10038>
  44b748:	b	44b6bc <_obstack_memory_used@@Base+0xfec4>
  44b74c:	mov	w0, #0x1                   	// #1
  44b750:	mov	x19, #0x0                   	// #0
  44b754:	bl	44b830 <_obstack_memory_used@@Base+0x10038>
  44b758:	b	44b6bc <_obstack_memory_used@@Base+0xfec4>
  44b75c:	mov	w0, #0xffffc011            	// #-16367
  44b760:	add	w5, w1, w0
  44b764:	mov	w0, #0x402f                	// #16431
  44b768:	cmp	x3, #0x40
  44b76c:	sub	w1, w0, w1
  44b770:	lsl	x0, x4, x5
  44b774:	orr	x0, x2, x0
  44b778:	csel	x2, x0, x2, ne  // ne = any
  44b77c:	lsr	x19, x4, x1
  44b780:	cmp	x2, #0x0
  44b784:	cset	w0, ne  // ne = any
  44b788:	b	44b728 <_obstack_memory_used@@Base+0xff30>
  44b78c:	nop
  44b790:	cbz	x0, 44b7e4 <_obstack_memory_used@@Base+0xffec>
  44b794:	clz	x2, x0
  44b798:	mov	w1, #0x403e                	// #16446
  44b79c:	sub	w1, w1, w2
  44b7a0:	mov	x2, #0x406f                	// #16495
  44b7a4:	and	w4, w1, #0x7fff
  44b7a8:	sub	x3, x2, w1, sxtw
  44b7ac:	cmp	x3, #0x3f
  44b7b0:	b.gt	44b804 <_obstack_memory_used@@Base+0x1000c>
  44b7b4:	sub	w2, w2, w1
  44b7b8:	mov	w3, #0xffffbfd1            	// #-16431
  44b7bc:	add	w1, w1, w3
  44b7c0:	mov	x3, #0x0                   	// #0
  44b7c4:	lsr	x1, x0, x1
  44b7c8:	and	x1, x1, #0xffffffffffff
  44b7cc:	lsl	x0, x0, x2
  44b7d0:	fmov	d0, x0
  44b7d4:	bfxil	x3, x1, #0, #48
  44b7d8:	bfi	x3, x4, #48, #16
  44b7dc:	fmov	v0.d[1], x3
  44b7e0:	ret
  44b7e4:	mov	x1, #0x0                   	// #0
  44b7e8:	mov	x3, #0x0                   	// #0
  44b7ec:	bfxil	x3, x1, #0, #48
  44b7f0:	fmov	d0, x0
  44b7f4:	mov	w4, #0x0                   	// #0
  44b7f8:	bfi	x3, x4, #48, #16
  44b7fc:	fmov	v0.d[1], x3
  44b800:	ret
  44b804:	mov	w2, #0x402f                	// #16431
  44b808:	sub	w1, w2, w1
  44b80c:	mov	x3, #0x0                   	// #0
  44b810:	lsl	x1, x0, x1
  44b814:	and	x1, x1, #0xffffffffffff
  44b818:	mov	x0, #0x0                   	// #0
  44b81c:	fmov	d0, x0
  44b820:	bfxil	x3, x1, #0, #48
  44b824:	bfi	x3, x4, #48, #16
  44b828:	fmov	v0.d[1], x3
  44b82c:	ret
  44b830:	tbz	w0, #0, 44b840 <_obstack_memory_used@@Base+0x10048>
  44b834:	movi	v1.2s, #0x0
  44b838:	fdiv	s0, s1, s1
  44b83c:	mrs	x1, fpsr
  44b840:	tbz	w0, #1, 44b854 <_obstack_memory_used@@Base+0x1005c>
  44b844:	fmov	s1, #1.000000000000000000e+00
  44b848:	movi	v2.2s, #0x0
  44b84c:	fdiv	s0, s1, s2
  44b850:	mrs	x1, fpsr
  44b854:	tbz	w0, #2, 44b874 <_obstack_memory_used@@Base+0x1007c>
  44b858:	mov	w2, #0xc5ae                	// #50606
  44b85c:	mov	w1, #0x7f7fffff            	// #2139095039
  44b860:	movk	w2, #0x749d, lsl #16
  44b864:	fmov	s1, w1
  44b868:	fmov	s2, w2
  44b86c:	fadd	s0, s1, s2
  44b870:	mrs	x1, fpsr
  44b874:	tbz	w0, #3, 44b884 <_obstack_memory_used@@Base+0x1008c>
  44b878:	movi	v1.2s, #0x80, lsl #16
  44b87c:	fmul	s0, s1, s1
  44b880:	mrs	x1, fpsr
  44b884:	tbz	w0, #4, 44b89c <_obstack_memory_used@@Base+0x100a4>
  44b888:	mov	w0, #0x7f7fffff            	// #2139095039
  44b88c:	fmov	s2, #1.000000000000000000e+00
  44b890:	fmov	s1, w0
  44b894:	fsub	s0, s1, s2
  44b898:	mrs	x0, fpsr
  44b89c:	ret
  44b8a0:	stp	x29, x30, [sp, #-64]!
  44b8a4:	mov	x29, sp
  44b8a8:	stp	x19, x20, [sp, #16]
  44b8ac:	adrp	x20, 466000 <_obstack_memory_used@@Base+0x2a808>
  44b8b0:	add	x20, x20, #0xde0
  44b8b4:	stp	x21, x22, [sp, #32]
  44b8b8:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x2a808>
  44b8bc:	add	x21, x21, #0xdd8
  44b8c0:	sub	x20, x20, x21
  44b8c4:	mov	w22, w0
  44b8c8:	stp	x23, x24, [sp, #48]
  44b8cc:	mov	x23, x1
  44b8d0:	mov	x24, x2
  44b8d4:	bl	4040a0 <mbrtowc@plt-0x40>
  44b8d8:	cmp	xzr, x20, asr #3
  44b8dc:	b.eq	44b908 <_obstack_memory_used@@Base+0x10110>  // b.none
  44b8e0:	asr	x20, x20, #3
  44b8e4:	mov	x19, #0x0                   	// #0
  44b8e8:	ldr	x3, [x21, x19, lsl #3]
  44b8ec:	mov	x2, x24
  44b8f0:	add	x19, x19, #0x1
  44b8f4:	mov	x1, x23
  44b8f8:	mov	w0, w22
  44b8fc:	blr	x3
  44b900:	cmp	x20, x19
  44b904:	b.ne	44b8e8 <_obstack_memory_used@@Base+0x100f0>  // b.any
  44b908:	ldp	x19, x20, [sp, #16]
  44b90c:	ldp	x21, x22, [sp, #32]
  44b910:	ldp	x23, x24, [sp, #48]
  44b914:	ldp	x29, x30, [sp], #64
  44b918:	ret
  44b91c:	nop
  44b920:	ret
  44b924:	nop
  44b928:	mov	x2, x1
  44b92c:	mov	x1, x0
  44b930:	mov	w0, #0x0                   	// #0
  44b934:	b	404d20 <__xstat@plt>
  44b938:	mov	x2, x1
  44b93c:	mov	w1, w0
  44b940:	mov	w0, #0x0                   	// #0
  44b944:	b	404bb0 <__fxstat@plt>
  44b948:	mov	x4, x1
  44b94c:	mov	x5, x2
  44b950:	mov	w1, w0
  44b954:	mov	x2, x4
  44b958:	mov	w0, #0x0                   	// #0
  44b95c:	mov	w4, w3
  44b960:	mov	x3, x5
  44b964:	b	404de0 <__fxstatat@plt>
  44b968:	stp	x29, x30, [sp, #-32]!
  44b96c:	mov	w5, w2
  44b970:	mov	x4, x1
  44b974:	mov	x29, sp
  44b978:	mov	w1, w0
  44b97c:	mov	x2, x4
  44b980:	mov	w0, #0x0                   	// #0
  44b984:	add	x4, sp, #0x18
  44b988:	str	x3, [sp, #24]
  44b98c:	mov	w3, w5
  44b990:	bl	404650 <__xmknodat@plt>
  44b994:	ldp	x29, x30, [sp], #32
  44b998:	ret

Disassembly of section .fini:

000000000044b99c <.fini>:
  44b99c:	stp	x29, x30, [sp, #-16]!
  44b9a0:	mov	x29, sp
  44b9a4:	ldp	x29, x30, [sp], #16
  44b9a8:	ret
