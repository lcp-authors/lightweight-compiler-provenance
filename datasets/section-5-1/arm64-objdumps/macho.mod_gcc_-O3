
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//macho.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_macho_close>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	x19, x0
      10:	ldr	x0, [x0, #48]
      14:	ldr	x20, [x19]
      18:	cbz	x0, 58 <grub_macho_close+0x58>
      1c:	bl	0 <grub_free>
      20:	ldr	x0, [x19, #120]
      24:	cbz	x0, 70 <grub_macho_close+0x70>
      28:	bl	0 <grub_free>
      2c:	mov	x0, x19
      30:	bl	0 <grub_free>
      34:	cbz	x20, 40 <grub_macho_close+0x40>
      38:	mov	x0, x20
      3c:	bl	0 <grub_file_close>
      40:	adrp	x0, 0 <grub_macho_close>
      44:	ldp	x19, x20, [sp, #16]
      48:	ldr	x0, [x0]
      4c:	ldp	x29, x30, [sp], #32
      50:	ldr	w0, [x0]
      54:	ret
      58:	ldr	x0, [x19, #40]
      5c:	bl	0 <grub_free>
      60:	ldr	x0, [x19, #48]
      64:	bl	0 <grub_free>
      68:	ldr	x0, [x19, #120]
      6c:	cbnz	x0, 28 <grub_macho_close+0x28>
      70:	ldr	x0, [x19, #112]
      74:	bl	0 <grub_free>
      78:	ldr	x0, [x19, #120]
      7c:	b	28 <grub_macho_close+0x28>
	...

0000000000000088 <grub_macho_file>:
      88:	stp	x29, x30, [sp, #-112]!
      8c:	mov	x29, sp
      90:	stp	x19, x20, [sp, #16]
      94:	mov	x20, x0
      98:	mov	x0, #0x98                  	// #152
      9c:	stp	x21, x22, [sp, #32]
      a0:	mov	x22, x1
      a4:	mov	w21, w2
      a8:	bl	0 <grub_malloc>
      ac:	mov	x19, x0
      b0:	cbz	x0, 1bc <grub_macho_file+0x134>
      b4:	mov	x3, #0xffffffffffffffff    	// #-1
      b8:	stp	x20, x3, [x19]
      bc:	mov	x0, x20
      c0:	str	x3, [x19, #16]
      c4:	mov	x1, #0x0                   	// #0
      c8:	stp	xzr, xzr, [x19, #40]
      cc:	str	wzr, [x19, #56]
      d0:	stp	x3, x3, [x19, #80]
      d4:	stp	xzr, xzr, [x19, #112]
      d8:	str	wzr, [x19, #128]
      dc:	bl	0 <grub_file_seek>
      e0:	cmn	x0, #0x1
      e4:	b.eq	1e0 <grub_macho_file+0x158>  // b.none
      e8:	ldr	x0, [x19]
      ec:	add	x1, sp, #0x50
      f0:	mov	x2, #0x20                  	// #32
      f4:	bl	0 <grub_file_read>
      f8:	cmp	x0, #0x20
      fc:	b.ne	1d0 <grub_macho_file+0x148>  // b.any
     100:	ldr	w0, [sp, #80]
     104:	mov	w1, #0xfeca                	// #65226
     108:	stp	x23, x24, [sp, #48]
     10c:	movk	w1, #0xbeba, lsl #16
     110:	cmp	w0, w1
     114:	b.eq	3d8 <grub_macho_file+0x350>  // b.none
     118:	mov	w1, #0xface                	// #64206
     11c:	movk	w1, #0xfeed, lsl #16
     120:	cmp	w0, w1
     124:	b.eq	36c <grub_macho_file+0x2e4>  // b.none
     128:	mov	w1, #0xfacf                	// #64207
     12c:	movk	w1, #0xfeed, lsl #16
     130:	cmp	w0, w1
     134:	adrp	x1, 0 <grub_macho_close>
     138:	b.ne	21c <grub_macho_file+0x194>  // b.any
     13c:	cbz	w21, 494 <grub_macho_file+0x40c>
     140:	str	xzr, [x19, #80]
     144:	add	x0, sp, #0x50
     148:	ldr	x23, [x1]
     14c:	mov	x2, #0x8                   	// #8
     150:	ldr	x1, [x20, #64]
     154:	str	x1, [x19, #88]
     158:	mov	x1, x23
     15c:	bl	0 <grub_memcmp>
     160:	cbnz	w0, 2e8 <grub_macho_file+0x260>
     164:	mov	x1, x23
     168:	add	x0, sp, #0x50
     16c:	mov	x2, #0x8                   	// #8
     170:	bl	0 <grub_memcmp>
     174:	cbnz	w0, 320 <grub_macho_file+0x298>
     178:	str	xzr, [x19, #80]
     17c:	mov	x1, x22
     180:	mov	x0, x19
     184:	ldr	x2, [x20, #64]
     188:	str	x2, [x19, #88]
     18c:	bl	5e8 <grub_macho_parse32>
     190:	mov	x0, x19
     194:	mov	x1, x22
     198:	bl	1188 <grub_macho_parse64>
     19c:	ldr	x0, [x19, #8]
     1a0:	cmn	x0, #0x1
     1a4:	b.eq	348 <grub_macho_file+0x2c0>  // b.none
     1a8:	ldr	x0, [x19, #80]
     1ac:	cmp	w21, #0x0
     1b0:	ccmn	x0, #0x1, #0x0, ne  // ne = any
     1b4:	b.eq	354 <grub_macho_file+0x2cc>  // b.none
     1b8:	ldp	x23, x24, [sp, #48]
     1bc:	mov	x0, x19
     1c0:	ldp	x19, x20, [sp, #16]
     1c4:	ldp	x21, x22, [sp, #32]
     1c8:	ldp	x29, x30, [sp], #112
     1cc:	ret
     1d0:	adrp	x0, 0 <grub_macho_close>
     1d4:	ldr	x0, [x0]
     1d8:	ldr	w0, [x0]
     1dc:	cbz	w0, 2b8 <grub_macho_file+0x230>
     1e0:	ldr	x0, [x19, #48]
     1e4:	str	xzr, [x19]
     1e8:	cbz	x0, 4c0 <grub_macho_file+0x438>
     1ec:	bl	0 <grub_free>
     1f0:	ldr	x0, [x19, #120]
     1f4:	cbz	x0, 4b0 <grub_macho_file+0x428>
     1f8:	bl	0 <grub_free>
     1fc:	mov	x0, x19
     200:	mov	x19, #0x0                   	// #0
     204:	bl	0 <grub_free>
     208:	mov	x0, x19
     20c:	ldp	x19, x20, [sp, #16]
     210:	ldp	x21, x22, [sp, #32]
     214:	ldp	x29, x30, [sp], #112
     218:	ret
     21c:	ldr	x23, [x1]
     220:	add	x0, sp, #0x50
     224:	mov	x2, #0x8                   	// #8
     228:	mov	x1, x23
     22c:	bl	0 <grub_memcmp>
     230:	cbnz	w0, 308 <grub_macho_file+0x280>
     234:	cbnz	w21, 164 <grub_macho_file+0xdc>
     238:	str	xzr, [x19, #8]
     23c:	mov	x1, x23
     240:	add	x0, sp, #0x50
     244:	mov	x2, #0x8                   	// #8
     248:	ldr	x3, [x20, #64]
     24c:	str	x3, [x19, #16]
     250:	bl	0 <grub_memcmp>
     254:	cbnz	w0, 320 <grub_macho_file+0x298>
     258:	mov	x1, x22
     25c:	mov	x0, x19
     260:	bl	5e8 <grub_macho_parse32>
     264:	mov	x0, x19
     268:	mov	x1, x22
     26c:	bl	1188 <grub_macho_parse64>
     270:	ldr	x0, [x19, #8]
     274:	cmn	x0, #0x1
     278:	b.ne	1a8 <grub_macho_file+0x120>  // b.any
     27c:	adrp	x1, 0 <grub_macho_close>
     280:	mov	w0, #0x15                  	// #21
     284:	ldr	x1, [x1]
     288:	bl	0 <grub_error>
     28c:	ldp	x23, x24, [sp, #48]
     290:	b	1e0 <grub_macho_file+0x158>
     294:	mov	x0, x25
     298:	bl	0 <grub_free>
     29c:	adrp	x0, 0 <grub_macho_close>
     2a0:	ldp	x23, x24, [sp, #48]
     2a4:	ldr	x0, [x0]
     2a8:	ldr	x25, [sp, #64]
     2ac:	ldr	w0, [x0]
     2b0:	cbnz	w0, 1e0 <grub_macho_file+0x158>
     2b4:	nop
     2b8:	adrp	x1, 0 <grub_macho_close>
     2bc:	mov	x2, x22
     2c0:	mov	w0, #0x15                  	// #21
     2c4:	ldr	x1, [x1]
     2c8:	bl	0 <grub_error>
     2cc:	b	1e0 <grub_macho_file+0x158>
     2d0:	ldr	x23, [x1]
     2d4:	add	x0, sp, #0x50
     2d8:	mov	x2, #0x8                   	// #8
     2dc:	mov	x1, x23
     2e0:	bl	0 <grub_memcmp>
     2e4:	cbz	w0, 164 <grub_macho_file+0xdc>
     2e8:	mov	x1, x23
     2ec:	add	x0, sp, #0x50
     2f0:	mov	x2, #0x8                   	// #8
     2f4:	bl	0 <grub_memcmp>
     2f8:	cbz	w0, 178 <grub_macho_file+0xf0>
     2fc:	mov	x1, x22
     300:	mov	x0, x19
     304:	b	18c <grub_macho_file+0x104>
     308:	mov	x1, x23
     30c:	add	x0, sp, #0x50
     310:	mov	x2, #0x8                   	// #8
     314:	bl	0 <grub_memcmp>
     318:	cbz	w0, 4d0 <grub_macho_file+0x448>
     31c:	nop
     320:	mov	x1, x22
     324:	mov	x0, x19
     328:	bl	5e8 <grub_macho_parse32>
     32c:	mov	x0, x19
     330:	mov	x1, x22
     334:	bl	1188 <grub_macho_parse64>
     338:	ldr	x0, [x19, #8]
     33c:	cmn	x0, #0x1
     340:	b.ne	1a8 <grub_macho_file+0x120>  // b.any
     344:	cbz	w21, 27c <grub_macho_file+0x1f4>
     348:	ldr	x0, [x19, #80]
     34c:	cmn	x0, #0x1
     350:	b.ne	1b8 <grub_macho_file+0x130>  // b.any
     354:	adrp	x1, 0 <grub_macho_close>
     358:	mov	w0, #0x15                  	// #21
     35c:	ldr	x1, [x1]
     360:	bl	0 <grub_error>
     364:	ldp	x23, x24, [sp, #48]
     368:	b	1e0 <grub_macho_file+0x158>
     36c:	adrp	x1, 0 <grub_macho_close>
     370:	cbnz	w21, 2d0 <grub_macho_file+0x248>
     374:	str	xzr, [x19, #8]
     378:	add	x0, sp, #0x50
     37c:	ldr	x23, [x1]
     380:	mov	x2, #0x8                   	// #8
     384:	ldr	x1, [x20, #64]
     388:	str	x1, [x19, #16]
     38c:	mov	x1, x23
     390:	bl	0 <grub_memcmp>
     394:	cbz	w0, 238 <grub_macho_file+0x1b0>
     398:	mov	x1, x23
     39c:	add	x0, sp, #0x50
     3a0:	mov	x2, #0x8                   	// #8
     3a4:	bl	0 <grub_memcmp>
     3a8:	cbnz	w0, 320 <grub_macho_file+0x298>
     3ac:	mov	x1, x22
     3b0:	mov	x0, x19
     3b4:	bl	5e8 <grub_macho_parse32>
     3b8:	mov	x0, x19
     3bc:	mov	x1, x22
     3c0:	bl	1188 <grub_macho_parse64>
     3c4:	ldr	x0, [x19, #8]
     3c8:	cmn	x0, #0x1
     3cc:	b.eq	27c <grub_macho_file+0x1f4>  // b.none
     3d0:	ldp	x23, x24, [sp, #48]
     3d4:	b	1bc <grub_macho_file+0x134>
     3d8:	ldr	x0, [x19]
     3dc:	mov	x1, #0x8                   	// #8
     3e0:	ldr	w23, [sp, #84]
     3e4:	bl	0 <grub_file_seek>
     3e8:	rev	w23, w23
     3ec:	cmn	x0, #0x1
     3f0:	b.eq	52c <grub_macho_file+0x4a4>  // b.none
     3f4:	mov	w24, #0x14                  	// #20
     3f8:	str	x25, [sp, #64]
     3fc:	smull	x24, w23, w24
     400:	mov	x0, x24
     404:	bl	0 <grub_malloc>
     408:	mov	x25, x0
     40c:	cbz	x0, 534 <grub_macho_file+0x4ac>
     410:	mov	x1, x0
     414:	mov	x2, x24
     418:	ldr	x0, [x19]
     41c:	bl	0 <grub_file_read>
     420:	cmp	x0, x24
     424:	b.ne	294 <grub_macho_file+0x20c>  // b.any
     428:	cmp	w23, #0x0
     42c:	b.le	480 <grub_macho_file+0x3f8>
     430:	cbz	w21, 4d8 <grub_macho_file+0x450>
     434:	sub	w5, w23, #0x1
     438:	mov	w1, #0x1                   	// #1
     43c:	add	x5, x5, #0x1
     440:	mov	x2, x25
     444:	movk	w1, #0x700, lsl #16
     448:	add	x5, x5, x5, lsl #2
     44c:	add	x5, x25, x5, lsl #2
     450:	ldr	w3, [x2]
     454:	cmp	w3, w1
     458:	b.ne	474 <grub_macho_file+0x3ec>  // b.any
     45c:	ldp	w4, w3, [x2, #8]
     460:	rev	w0, w4
     464:	rev	w3, w3
     468:	rev	w4, w4
     46c:	add	w3, w3, w0
     470:	stp	x4, x3, [x19, #80]
     474:	add	x2, x2, #0x14
     478:	cmp	x5, x2
     47c:	b.ne	450 <grub_macho_file+0x3c8>  // b.any
     480:	mov	x0, x25
     484:	bl	0 <grub_free>
     488:	ldr	w0, [sp, #80]
     48c:	ldr	x25, [sp, #64]
     490:	b	118 <grub_macho_file+0x90>
     494:	ldr	x23, [x1]
     498:	add	x0, sp, #0x50
     49c:	mov	x2, #0x8                   	// #8
     4a0:	mov	x1, x23
     4a4:	bl	0 <grub_memcmp>
     4a8:	cbz	w0, 238 <grub_macho_file+0x1b0>
     4ac:	b	398 <grub_macho_file+0x310>
     4b0:	ldr	x0, [x19, #112]
     4b4:	bl	0 <grub_free>
     4b8:	ldr	x0, [x19, #120]
     4bc:	b	1f8 <grub_macho_file+0x170>
     4c0:	ldr	x0, [x19, #40]
     4c4:	bl	0 <grub_free>
     4c8:	ldr	x0, [x19, #48]
     4cc:	b	1ec <grub_macho_file+0x164>
     4d0:	cbnz	w21, 178 <grub_macho_file+0xf0>
     4d4:	b	3ac <grub_macho_file+0x324>
     4d8:	sub	w3, w23, #0x1
     4dc:	mov	x2, x25
     4e0:	add	x3, x3, #0x1
     4e4:	mov	w0, #0x7000000             	// #117440512
     4e8:	add	x3, x3, x3, lsl #2
     4ec:	add	x3, x25, x3, lsl #2
     4f0:	b	500 <grub_macho_file+0x478>
     4f4:	add	x2, x2, #0x14
     4f8:	cmp	x2, x3
     4fc:	b.eq	480 <grub_macho_file+0x3f8>  // b.none
     500:	ldr	w4, [x2]
     504:	cmp	w4, w0
     508:	b.ne	4f4 <grub_macho_file+0x46c>  // b.any
     50c:	ldp	w1, w5, [x2, #8]
     510:	rev	w4, w1
     514:	rev	w5, w5
     518:	rev	w1, w1
     51c:	str	x1, [x19, #8]
     520:	add	w1, w4, w5
     524:	str	x1, [x19, #16]
     528:	b	4f4 <grub_macho_file+0x46c>
     52c:	ldp	x23, x24, [sp, #48]
     530:	b	1e0 <grub_macho_file+0x158>
     534:	ldp	x23, x24, [sp, #48]
     538:	ldr	x25, [sp, #64]
     53c:	b	1e0 <grub_macho_file+0x158>
	...

0000000000000568 <grub_macho_open>:
     568:	stp	x29, x30, [sp, #-48]!
     56c:	mov	x29, sp
     570:	stp	x19, x20, [sp, #16]
     574:	mov	x19, x0
     578:	str	x21, [sp, #32]
     57c:	mov	w21, w2
     580:	bl	0 <grub_file_open>
     584:	cbz	x0, 5b4 <grub_macho_open+0x4c>
     588:	mov	x1, x19
     58c:	mov	x20, x0
     590:	mov	w2, w21
     594:	bl	88 <grub_macho_file>
     598:	mov	x19, x0
     59c:	cbz	x0, 5cc <grub_macho_open+0x64>
     5a0:	mov	x0, x19
     5a4:	ldp	x19, x20, [sp, #16]
     5a8:	ldr	x21, [sp, #32]
     5ac:	ldp	x29, x30, [sp], #48
     5b0:	ret
     5b4:	mov	x19, #0x0                   	// #0
     5b8:	mov	x0, x19
     5bc:	ldp	x19, x20, [sp, #16]
     5c0:	ldr	x21, [sp, #32]
     5c4:	ldp	x29, x30, [sp], #48
     5c8:	ret
     5cc:	mov	x0, x20
     5d0:	bl	0 <grub_file_close>
     5d4:	mov	x0, x19
     5d8:	ldp	x19, x20, [sp, #16]
     5dc:	ldr	x21, [sp, #32]
     5e0:	ldp	x29, x30, [sp], #48
     5e4:	ret

00000000000005e8 <grub_macho_parse32>:
     5e8:	stp	x29, x30, [sp, #-64]!
     5ec:	mov	x29, sp
     5f0:	stp	x19, x20, [sp, #16]
     5f4:	mov	x20, x1
     5f8:	ldr	x1, [x0, #8]
     5fc:	cmn	x1, #0x1
     600:	b.eq	648 <grub_macho_parse32+0x60>  // b.none
     604:	mov	x19, x0
     608:	ldr	x0, [x0]
     60c:	bl	0 <grub_file_seek>
     610:	cmn	x0, #0x1
     614:	b.eq	630 <grub_macho_parse32+0x48>  // b.none
     618:	ldr	x0, [x19]
     61c:	add	x1, sp, #0x20
     620:	mov	x2, #0x1c                  	// #28
     624:	bl	0 <grub_file_read>
     628:	cmp	x0, #0x1c
     62c:	b.eq	66c <grub_macho_parse32+0x84>  // b.none
     630:	adrp	x0, 0 <grub_macho_close>
     634:	ldr	x0, [x0]
     638:	ldr	w0, [x0]
     63c:	cbz	w0, 654 <grub_macho_parse32+0x6c>
     640:	mov	x0, #0xffffffffffffffff    	// #-1
     644:	str	x0, [x19, #8]
     648:	ldp	x19, x20, [sp, #16]
     64c:	ldp	x29, x30, [sp], #64
     650:	ret
     654:	adrp	x1, 0 <grub_macho_close>
     658:	mov	x2, x20
     65c:	mov	w0, #0x15                  	// #21
     660:	ldr	x1, [x1]
     664:	bl	0 <grub_error>
     668:	b	640 <grub_macho_parse32+0x58>
     66c:	adrp	x1, 0 <grub_macho_close>
     670:	add	x0, sp, #0x20
     674:	mov	x2, #0x8                   	// #8
     678:	ldr	x1, [x1]
     67c:	bl	0 <grub_memcmp>
     680:	cbnz	w0, 6ac <grub_macho_parse32+0xc4>
     684:	ldp	w0, w1, [sp, #44]
     688:	rev	w2, w0
     68c:	rev	w1, w1
     690:	stp	x1, x2, [x19, #64]
     694:	rev	w0, w0
     698:	cmp	w0, #0x1b
     69c:	b.ls	71c <grub_macho_parse32+0x134>  // b.plast
     6a0:	mov	w0, #0x1                   	// #1
     6a4:	str	w0, [x19, #56]
     6a8:	b	648 <grub_macho_parse32+0x60>
     6ac:	ldr	w1, [sp, #32]
     6b0:	mov	w0, #0xface                	// #64206
     6b4:	movk	w0, #0xfeed, lsl #16
     6b8:	cmp	w1, w0
     6bc:	b.ne	708 <grub_macho_parse32+0x120>  // b.any
     6c0:	ldp	w1, w0, [sp, #48]
     6c4:	str	w1, [x19, #24]
     6c8:	str	x0, [x19, #32]
     6cc:	bl	0 <grub_malloc>
     6d0:	str	x0, [x19, #40]
     6d4:	cbz	x0, 648 <grub_macho_parse32+0x60>
     6d8:	ldp	x0, x1, [x19]
     6dc:	add	x1, x1, #0x1c
     6e0:	bl	0 <grub_file_seek>
     6e4:	cmn	x0, #0x1
     6e8:	b.eq	630 <grub_macho_parse32+0x48>  // b.none
     6ec:	ldp	x2, x1, [x19, #32]
     6f0:	ldr	x0, [x19]
     6f4:	bl	0 <grub_file_read>
     6f8:	ldr	x1, [x19, #32]
     6fc:	cmp	x0, x1
     700:	b.ne	630 <grub_macho_parse32+0x48>  // b.any
     704:	b	648 <grub_macho_parse32+0x60>
     708:	adrp	x1, 0 <grub_macho_close>
     70c:	mov	w0, #0x15                  	// #21
     710:	ldr	x1, [x1]
     714:	bl	0 <grub_error>
     718:	b	640 <grub_macho_parse32+0x58>
     71c:	adrp	x1, 0 <grub_macho_close>
     720:	mov	x2, x20
     724:	mov	w0, #0x15                  	// #21
     728:	ldr	x1, [x1]
     72c:	bl	0 <grub_error>
     730:	mov	x0, #0xffffffffffffffff    	// #-1
     734:	str	x0, [x19, #8]
     738:	b	648 <grub_macho_parse32+0x60>
     73c:	nop
	...

0000000000000760 <grub_macho_filesize32>:
     760:	ldr	x1, [x0, #8]
     764:	cmn	x1, #0x1
     768:	b.eq	778 <grub_macho_filesize32+0x18>  // b.none
     76c:	ldr	x0, [x0, #16]
     770:	sub	x0, x0, x1
     774:	ret
     778:	mov	x0, #0x0                   	// #0
     77c:	ret

0000000000000780 <grub_macho_readfile32>:
     780:	stp	x29, x30, [sp, #-48]!
     784:	mov	x29, sp
     788:	str	x21, [sp, #32]
     78c:	mov	x21, x1
     790:	ldr	x1, [x0, #8]
     794:	cmn	x1, #0x1
     798:	b.eq	820 <grub_macho_readfile32+0xa0>  // b.none
     79c:	stp	x19, x20, [sp, #16]
     7a0:	mov	x19, x0
     7a4:	mov	x20, x2
     7a8:	ldr	x0, [x0]
     7ac:	bl	0 <grub_file_seek>
     7b0:	cmn	x0, #0x1
     7b4:	b.eq	804 <grub_macho_readfile32+0x84>  // b.none
     7b8:	ldp	x0, x2, [x19]
     7bc:	mov	x1, x20
     7c0:	ldr	x3, [x19, #16]
     7c4:	sub	x2, x3, x2
     7c8:	bl	0 <grub_file_read>
     7cc:	ldp	x3, x2, [x19, #8]
     7d0:	mov	x1, x0
     7d4:	mov	w0, #0x0                   	// #0
     7d8:	sub	x2, x2, x3
     7dc:	cmp	x2, x1
     7e0:	b.eq	7f4 <grub_macho_readfile32+0x74>  // b.none
     7e4:	adrp	x0, 0 <grub_macho_close>
     7e8:	ldr	x19, [x0]
     7ec:	ldr	w0, [x19]
     7f0:	cbz	w0, 838 <grub_macho_readfile32+0xb8>
     7f4:	ldp	x19, x20, [sp, #16]
     7f8:	ldr	x21, [sp, #32]
     7fc:	ldp	x29, x30, [sp], #48
     800:	ret
     804:	adrp	x0, 0 <grub_macho_close>
     808:	ldp	x19, x20, [sp, #16]
     80c:	ldr	x0, [x0]
     810:	ldr	x21, [sp, #32]
     814:	ldr	w0, [x0]
     818:	ldp	x29, x30, [sp], #48
     81c:	ret
     820:	adrp	x1, 0 <grub_macho_close>
     824:	mov	w0, #0x15                  	// #21
     828:	ldr	x21, [sp, #32]
     82c:	ldp	x29, x30, [sp], #48
     830:	ldr	x1, [x1]
     834:	b	0 <grub_error>
     838:	adrp	x1, 0 <grub_macho_close>
     83c:	mov	x2, x21
     840:	mov	w0, #0x15                  	// #21
     844:	ldr	x1, [x1]
     848:	bl	0 <grub_error>
     84c:	ldr	w0, [x19]
     850:	b	7f4 <grub_macho_readfile32+0x74>
     854:	nop
	...

0000000000000870 <grub_macho_size32>:
     870:	stp	x29, x30, [sp, #-64]!
     874:	mov	w5, #0xffffffff            	// #-1
     878:	mov	x29, sp
     87c:	stp	x19, x20, [sp, #16]
     880:	mov	x19, x0
     884:	mov	w20, w3
     888:	stp	x21, x22, [sp, #32]
     88c:	mov	x22, x1
     890:	stp	x23, x24, [sp, #48]
     894:	mov	x23, x2
     898:	str	w5, [x1]
     89c:	str	wzr, [x2]
     8a0:	ldr	w0, [x0, #56]
     8a4:	cbz	w0, 8b0 <grub_macho_size32+0x40>
     8a8:	ldr	x0, [x19, #48]
     8ac:	cbz	x0, 9f0 <grub_macho_size32+0x180>
     8b0:	ldr	x5, [x19, #40]
     8b4:	cbz	x5, ab0 <grub_macho_size32+0x240>
     8b8:	ldr	w6, [x19, #24]
     8bc:	cmp	w6, #0x0
     8c0:	b.le	a70 <grub_macho_size32+0x200>
     8c4:	and	w4, w20, #0x1
     8c8:	tbnz	w20, #0, 97c <grub_macho_size32+0x10c>
     8cc:	mov	w7, #0x0                   	// #0
     8d0:	b	8f4 <grub_macho_size32+0x84>
     8d4:	str	w0, [x23]
     8d8:	ldr	w6, [x19, #24]
     8dc:	nop
     8e0:	ldr	w0, [x5, #4]
     8e4:	add	w7, w7, #0x1
     8e8:	cmp	w6, w7
     8ec:	add	x5, x5, x0
     8f0:	b.le	950 <grub_macho_size32+0xe0>
     8f4:	ldr	w0, [x5]
     8f8:	cmp	w0, #0x1
     8fc:	b.ne	8e0 <grub_macho_size32+0x70>  // b.any
     900:	ldr	w0, [x5, #28]
     904:	cbz	w0, 8e0 <grub_macho_size32+0x70>
     908:	ldr	w3, [x5, #24]
     90c:	add	w4, w4, #0x1
     910:	ldr	w1, [x22]
     914:	cmp	w1, w3
     918:	b.ls	924 <grub_macho_size32+0xb4>  // b.plast
     91c:	str	w3, [x22]
     920:	ldp	w3, w0, [x5, #24]
     924:	add	w0, w0, w3
     928:	ldr	w1, [x23]
     92c:	cmp	w1, w0
     930:	b.cc	8d4 <grub_macho_size32+0x64>  // b.lo, b.ul, b.last
     934:	ldr	w6, [x19, #24]
     938:	add	w7, w7, #0x1
     93c:	ldr	w0, [x5, #4]
     940:	cmp	w6, w7
     944:	add	x5, x5, x0
     948:	b.gt	8f4 <grub_macho_size32+0x84>
     94c:	nop
     950:	cbz	w4, a70 <grub_macho_size32+0x200>
     954:	ldr	w0, [x22]
     958:	ldr	w1, [x23]
     95c:	cmp	w1, w0
     960:	b.cc	a90 <grub_macho_size32+0x220>  // b.lo, b.ul, b.last
     964:	mov	w0, #0x0                   	// #0
     968:	ldp	x19, x20, [sp, #16]
     96c:	ldp	x21, x22, [sp, #32]
     970:	ldp	x23, x24, [sp, #48]
     974:	ldp	x29, x30, [sp], #64
     978:	ret
     97c:	mov	w4, #0x0                   	// #0
     980:	mov	w3, #0x0                   	// #0
     984:	nop
     988:	ldr	w0, [x5]
     98c:	cmp	w0, #0x1
     990:	b.ne	9d8 <grub_macho_size32+0x168>  // b.any
     994:	ldr	w7, [x5, #28]
     998:	cbz	w7, 9d8 <grub_macho_size32+0x168>
     99c:	ldr	w0, [x5, #36]
     9a0:	cbz	w0, 9d8 <grub_macho_size32+0x168>
     9a4:	ldr	w0, [x5, #24]
     9a8:	add	w4, w4, #0x1
     9ac:	ldr	w1, [x22]
     9b0:	cmp	w0, w1
     9b4:	b.cs	9c0 <grub_macho_size32+0x150>  // b.hs, b.nlast
     9b8:	str	w0, [x22]
     9bc:	ldp	w0, w7, [x5, #24]
     9c0:	add	w0, w0, w7
     9c4:	ldr	w1, [x23]
     9c8:	cmp	w0, w1
     9cc:	b.ls	9d4 <grub_macho_size32+0x164>  // b.plast
     9d0:	str	w0, [x23]
     9d4:	ldr	w6, [x19, #24]
     9d8:	ldr	w0, [x5, #4]
     9dc:	add	w3, w3, #0x1
     9e0:	cmp	w3, w6
     9e4:	add	x5, x5, x0
     9e8:	b.lt	988 <grub_macho_size32+0x118>  // b.tstop
     9ec:	b	950 <grub_macho_size32+0xe0>
     9f0:	ldr	x0, [x19, #72]
     9f4:	mov	x21, x4
     9f8:	bl	0 <grub_malloc>
     9fc:	str	x0, [x19, #48]
     a00:	cbz	x0, a70 <grub_macho_size32+0x200>
     a04:	ldr	x0, [x19, #64]
     a08:	bl	0 <grub_malloc>
     a0c:	mov	x24, x0
     a10:	cbz	x0, ac4 <grub_macho_size32+0x254>
     a14:	ldp	x0, x1, [x19]
     a18:	add	x1, x1, #0x180
     a1c:	bl	0 <grub_file_seek>
     a20:	cmn	x0, #0x1
     a24:	b.eq	a44 <grub_macho_size32+0x1d4>  // b.none
     a28:	ldr	x0, [x19]
     a2c:	mov	x1, x24
     a30:	ldr	x2, [x19, #64]
     a34:	bl	0 <grub_file_read>
     a38:	ldr	x1, [x19, #64]
     a3c:	cmp	x0, x1
     a40:	b.eq	aec <grub_macho_size32+0x27c>  // b.none
     a44:	adrp	x0, 0 <grub_macho_close>
     a48:	ldr	x0, [x0]
     a4c:	ldr	w0, [x0]
     a50:	cbz	w0, ad4 <grub_macho_size32+0x264>
     a54:	mov	x0, x24
     a58:	bl	0 <grub_free>
     a5c:	ldr	x0, [x19, #48]
     a60:	bl	0 <grub_free>
     a64:	str	xzr, [x19, #48]
     a68:	mov	x0, #0xffffffffffffffff    	// #-1
     a6c:	str	x0, [x19, #8]
     a70:	adrp	x1, 0 <grub_macho_close>
     a74:	mov	w0, #0x15                  	// #21
     a78:	ldp	x19, x20, [sp, #16]
     a7c:	ldp	x21, x22, [sp, #32]
     a80:	ldp	x23, x24, [sp, #48]
     a84:	ldp	x29, x30, [sp], #64
     a88:	ldr	x1, [x1]
     a8c:	b	0 <grub_error>
     a90:	adrp	x1, 0 <grub_macho_close>
     a94:	mov	w0, #0x15                  	// #21
     a98:	ldp	x19, x20, [sp, #16]
     a9c:	ldp	x21, x22, [sp, #32]
     aa0:	ldp	x23, x24, [sp, #48]
     aa4:	ldp	x29, x30, [sp], #64
     aa8:	ldr	x1, [x1]
     aac:	b	0 <grub_error>
     ab0:	adrp	x1, 0 <grub_macho_close>
     ab4:	mov	w0, #0x15                  	// #21
     ab8:	ldr	x1, [x1]
     abc:	bl	0 <grub_error>
     ac0:	b	a70 <grub_macho_size32+0x200>
     ac4:	ldr	x0, [x19, #48]
     ac8:	bl	0 <grub_free>
     acc:	str	xzr, [x19, #48]
     ad0:	b	a70 <grub_macho_size32+0x200>
     ad4:	adrp	x1, 0 <grub_macho_close>
     ad8:	mov	x2, x21
     adc:	mov	w0, #0x15                  	// #21
     ae0:	ldr	x1, [x1]
     ae4:	bl	0 <grub_error>
     ae8:	b	a54 <grub_macho_size32+0x1e4>
     aec:	ldr	x4, [x19, #72]
     af0:	add	x3, x24, x0
     af4:	ldr	x1, [x19, #48]
     af8:	mov	x2, x24
     afc:	mov	x0, x1
     b00:	add	x1, x1, x4
     b04:	bl	1d30 <grub_decompress_lzss>
     b08:	ldr	x1, [x19, #72]
     b0c:	cmp	x0, x1
     b10:	b.ne	a44 <grub_macho_size32+0x1d4>  // b.any
     b14:	mov	x0, x24
     b18:	bl	0 <grub_free>
     b1c:	ldr	x0, [x19, #48]
     b20:	ldr	x2, [x19, #72]
     b24:	add	x5, x0, #0x1c
     b28:	ldp	w6, w1, [x0, #16]
     b2c:	str	w6, [x19, #24]
     b30:	stp	x1, x5, [x19, #32]
     b34:	add	x0, x1, #0x1c
     b38:	cmp	x0, x2
     b3c:	b.cc	8bc <grub_macho_size32+0x4c>  // b.lo, b.ul, b.last
     b40:	adrp	x1, 0 <grub_macho_close>
     b44:	mov	x2, x21
     b48:	mov	w0, #0x15                  	// #21
     b4c:	ldr	x1, [x1]
     b50:	bl	0 <grub_error>
     b54:	b	a5c <grub_macho_size32+0x1ec>
	...

0000000000000b80 <grub_macho_load32>:
     b80:	stp	x29, x30, [sp, #-112]!
     b84:	mov	x29, sp
     b88:	stp	x19, x20, [sp, #16]
     b8c:	stp	x21, x22, [sp, #32]
     b90:	mov	w22, w3
     b94:	mov	x21, x4
     b98:	stp	x23, x24, [sp, #48]
     b9c:	mov	x23, x2
     ba0:	stp	x27, x28, [sp, #80]
     ba4:	mov	x27, x0
     ba8:	str	x1, [sp, #104]
     bac:	cbz	x4, bb4 <grub_macho_load32+0x34>
     bb0:	str	wzr, [x4]
     bb4:	ldr	w0, [x27, #56]
     bb8:	cbz	w0, bc4 <grub_macho_load32+0x44>
     bbc:	ldr	x0, [x27, #48]
     bc0:	cbz	x0, dd0 <grub_macho_load32+0x250>
     bc4:	ldr	x19, [x27, #40]
     bc8:	cbz	x19, e8c <grub_macho_load32+0x30c>
     bcc:	ldr	w0, [x27, #24]
     bd0:	stp	x25, x26, [sp, #64]
     bd4:	and	w22, w22, #0x1
     bd8:	cmp	w0, #0x0
     bdc:	mov	w24, #0x0                   	// #0
     be0:	adrp	x26, 0 <grub_macho_close>
     be4:	b.le	c28 <grub_macho_load32+0xa8>
     be8:	ldr	w1, [x19]
     bec:	cmp	w1, #0x1
     bf0:	b.ne	c14 <grub_macho_load32+0x94>  // b.any
     bf4:	ldr	w3, [x19, #36]
     bf8:	cbnz	w3, c50 <grub_macho_load32+0xd0>
     bfc:	cbnz	w22, c14 <grub_macho_load32+0x94>
     c00:	ldr	w2, [x19, #28]
     c04:	cbz	w2, c14 <grub_macho_load32+0x94>
     c08:	cmp	w3, w2
     c0c:	b.cc	cb0 <grub_macho_load32+0x130>  // b.lo, b.ul, b.last
     c10:	ldr	w0, [x27, #24]
     c14:	ldr	w1, [x19, #4]
     c18:	add	w24, w24, #0x1
     c1c:	cmp	w24, w0
     c20:	add	x19, x19, x1
     c24:	b.lt	be8 <grub_macho_load32+0x68>  // b.tstop
     c28:	adrp	x0, 0 <grub_macho_close>
     c2c:	ldp	x25, x26, [sp, #64]
     c30:	ldr	x0, [x0]
     c34:	ldr	w0, [x0]
     c38:	ldp	x19, x20, [sp, #16]
     c3c:	ldp	x21, x22, [sp, #32]
     c40:	ldp	x23, x24, [sp, #48]
     c44:	ldp	x27, x28, [sp, #80]
     c48:	ldp	x29, x30, [sp], #112
     c4c:	ret
     c50:	ldr	w20, [x19, #28]
     c54:	cbz	w20, c14 <grub_macho_load32+0x94>
     c58:	ldr	x4, [x27, #48]
     c5c:	cmp	w3, w20
     c60:	ldr	w1, [x19, #32]
     c64:	csel	w20, w3, w20, ls  // ls = plast
     c68:	cbz	x4, e54 <grub_macho_load32+0x2d4>
     c6c:	ldr	x0, [x27, #72]
     c70:	mov	w1, w1
     c74:	mov	w2, w20
     c78:	add	x3, x1, x2
     c7c:	cmp	x3, x0
     c80:	b.ls	cd0 <grub_macho_load32+0x150>  // b.plast
     c84:	adrp	x0, 0 <grub_macho_close>
     c88:	ldr	x19, [x0]
     c8c:	ldr	w0, [x19]
     c90:	cbz	w0, d84 <grub_macho_load32+0x204>
     c94:	ldp	x19, x20, [sp, #16]
     c98:	ldp	x21, x22, [sp, #32]
     c9c:	ldp	x23, x24, [sp, #48]
     ca0:	ldp	x25, x26, [sp, #64]
     ca4:	ldp	x27, x28, [sp, #80]
     ca8:	ldp	x29, x30, [sp], #112
     cac:	ret
     cb0:	ldr	w0, [x19, #24]
     cb4:	mov	w1, w3
     cb8:	add	x0, x0, x1
     cbc:	sub	w2, w2, w3
     cc0:	add	x0, x23, x0
     cc4:	mov	w1, #0x0                   	// #0
     cc8:	bl	0 <grub_memset>
     ccc:	b	c10 <grub_macho_load32+0x90>
     cd0:	ldr	w0, [x19, #24]
     cd4:	add	x1, x4, x1
     cd8:	add	x0, x23, x0
     cdc:	bl	0 <grub_memmove>
     ce0:	ldr	w2, [x19, #28]
     ce4:	ldr	w3, [x19, #36]
     ce8:	cbz	x21, c08 <grub_macho_load32+0x88>
     cec:	ldr	w0, [x19, #24]
     cf0:	cmp	w3, w2
     cf4:	add	x25, x23, x0
     cf8:	b.cs	db8 <grub_macho_load32+0x238>  // b.hs, b.nlast
     cfc:	mov	w1, w3
     d00:	sub	x20, x1, #0x16
     d04:	add	x20, x25, x20
     d08:	cmp	x25, x20
     d0c:	b.cs	cb8 <grub_macho_load32+0x138>  // b.hs, b.nlast
     d10:	ldr	x28, [x26]
     d14:	b	d24 <grub_macho_load32+0x1a4>
     d18:	add	x25, x25, #0x1
     d1c:	cmp	x20, x25
     d20:	b.ls	d78 <grub_macho_load32+0x1f8>  // b.plast
     d24:	mov	x1, x28
     d28:	mov	x0, x25
     d2c:	mov	x2, #0x16                  	// #22
     d30:	bl	0 <grub_memcmp>
     d34:	cbnz	w0, d18 <grub_macho_load32+0x198>
     d38:	str	wzr, [x21]
     d3c:	add	x4, x25, #0x16
     d40:	add	x20, x20, #0x16
     d44:	cmp	x4, x20
     d48:	b.cc	d5c <grub_macho_load32+0x1dc>  // b.lo, b.ul, b.last
     d4c:	b	d78 <grub_macho_load32+0x1f8>
     d50:	str	w0, [x21]
     d54:	cmp	x20, x4
     d58:	b.eq	d78 <grub_macho_load32+0x1f8>  // b.none
     d5c:	ldrb	w1, [x4]
     d60:	add	w0, w0, w0, lsl #2
     d64:	add	x4, x4, #0x1
     d68:	sub	w1, w1, #0x30
     d6c:	add	w0, w1, w0, lsl #1
     d70:	cmp	w1, #0x9
     d74:	b.ls	d50 <grub_macho_load32+0x1d0>  // b.plast
     d78:	ldr	w2, [x19, #28]
     d7c:	ldr	w3, [x19, #36]
     d80:	b	c08 <grub_macho_load32+0x88>
     d84:	adrp	x1, 0 <grub_macho_close>
     d88:	mov	w0, #0x15                  	// #21
     d8c:	ldr	x2, [sp, #104]
     d90:	ldr	x1, [x1]
     d94:	bl	0 <grub_error>
     d98:	ldr	w0, [x19]
     d9c:	ldp	x19, x20, [sp, #16]
     da0:	ldp	x21, x22, [sp, #32]
     da4:	ldp	x23, x24, [sp, #48]
     da8:	ldp	x25, x26, [sp, #64]
     dac:	ldp	x27, x28, [sp, #80]
     db0:	ldp	x29, x30, [sp], #112
     db4:	ret
     db8:	mov	w20, w2
     dbc:	sub	x20, x20, #0x16
     dc0:	add	x20, x25, x20
     dc4:	cmp	x20, x25
     dc8:	b.hi	d10 <grub_macho_load32+0x190>  // b.pmore
     dcc:	b	c10 <grub_macho_load32+0x90>
     dd0:	ldr	x0, [x27, #72]
     dd4:	bl	0 <grub_malloc>
     dd8:	str	x0, [x27, #48]
     ddc:	cbz	x0, ec8 <grub_macho_load32+0x348>
     de0:	ldr	x0, [x27, #64]
     de4:	bl	0 <grub_malloc>
     de8:	mov	x19, x0
     dec:	cbz	x0, eac <grub_macho_load32+0x32c>
     df0:	ldp	x0, x1, [x27]
     df4:	add	x1, x1, #0x180
     df8:	bl	0 <grub_file_seek>
     dfc:	cmn	x0, #0x1
     e00:	b.eq	e20 <grub_macho_load32+0x2a0>  // b.none
     e04:	ldr	x0, [x27]
     e08:	mov	x1, x19
     e0c:	ldr	x2, [x27, #64]
     e10:	bl	0 <grub_file_read>
     e14:	ldr	x1, [x27, #64]
     e18:	cmp	x0, x1
     e1c:	b.eq	ef0 <grub_macho_load32+0x370>  // b.none
     e20:	adrp	x0, 0 <grub_macho_close>
     e24:	ldr	x20, [x0]
     e28:	ldr	w0, [x20]
     e2c:	cbz	w0, ed8 <grub_macho_load32+0x358>
     e30:	mov	x0, x19
     e34:	bl	0 <grub_free>
     e38:	ldr	x0, [x27, #48]
     e3c:	bl	0 <grub_free>
     e40:	str	xzr, [x27, #48]
     e44:	mov	x0, #0xffffffffffffffff    	// #-1
     e48:	str	x0, [x27, #8]
     e4c:	ldr	w0, [x20]
     e50:	b	c38 <grub_macho_load32+0xb8>
     e54:	ldp	x0, x2, [x27]
     e58:	add	x1, x2, w1, uxtw
     e5c:	bl	0 <grub_file_seek>
     e60:	cmn	x0, #0x1
     e64:	b.eq	c28 <grub_macho_load32+0xa8>  // b.none
     e68:	ldr	x0, [x27]
     e6c:	mov	w20, w20
     e70:	ldr	w1, [x19, #24]
     e74:	mov	x2, x20
     e78:	add	x1, x23, x1
     e7c:	bl	0 <grub_file_read>
     e80:	cmp	x20, x0
     e84:	b.eq	ce0 <grub_macho_load32+0x160>  // b.none
     e88:	b	c84 <grub_macho_load32+0x104>
     e8c:	adrp	x1, 0 <grub_macho_close>
     e90:	mov	w0, #0x15                  	// #21
     e94:	ldr	x1, [x1]
     e98:	bl	0 <grub_error>
     e9c:	adrp	x0, 0 <grub_macho_close>
     ea0:	ldr	x0, [x0]
     ea4:	ldr	w0, [x0]
     ea8:	b	c38 <grub_macho_load32+0xb8>
     eac:	ldr	x0, [x27, #48]
     eb0:	bl	0 <grub_free>
     eb4:	str	xzr, [x27, #48]
     eb8:	adrp	x0, 0 <grub_macho_close>
     ebc:	ldr	x0, [x0]
     ec0:	ldr	w0, [x0]
     ec4:	b	c38 <grub_macho_load32+0xb8>
     ec8:	adrp	x0, 0 <grub_macho_close>
     ecc:	ldr	x0, [x0]
     ed0:	ldr	w0, [x0]
     ed4:	b	c38 <grub_macho_load32+0xb8>
     ed8:	adrp	x1, 0 <grub_macho_close>
     edc:	mov	w0, #0x15                  	// #21
     ee0:	ldr	x2, [sp, #104]
     ee4:	ldr	x1, [x1]
     ee8:	bl	0 <grub_error>
     eec:	b	e30 <grub_macho_load32+0x2b0>
     ef0:	ldr	x4, [x27, #72]
     ef4:	add	x3, x19, x0
     ef8:	ldr	x1, [x27, #48]
     efc:	mov	x2, x19
     f00:	mov	x0, x1
     f04:	add	x1, x1, x4
     f08:	bl	1d30 <grub_decompress_lzss>
     f0c:	ldr	x1, [x27, #72]
     f10:	cmp	x0, x1
     f14:	b.ne	e20 <grub_macho_load32+0x2a0>  // b.any
     f18:	mov	x0, x19
     f1c:	bl	0 <grub_free>
     f20:	ldr	x0, [x27, #48]
     f24:	ldr	x2, [x27, #72]
     f28:	add	x19, x0, #0x1c
     f2c:	ldr	w1, [x0, #20]
     f30:	ldr	w0, [x0, #16]
     f34:	str	w0, [x27, #24]
     f38:	add	x3, x1, #0x1c
     f3c:	stp	x1, x19, [x27, #32]
     f40:	cmp	x3, x2
     f44:	b.cs	f50 <grub_macho_load32+0x3d0>  // b.hs, b.nlast
     f48:	stp	x25, x26, [sp, #64]
     f4c:	b	bd4 <grub_macho_load32+0x54>
     f50:	adrp	x1, 0 <grub_macho_close>
     f54:	mov	w0, #0x15                  	// #21
     f58:	ldr	x2, [sp, #104]
     f5c:	ldr	x1, [x1]
     f60:	bl	0 <grub_error>
     f64:	ldr	x0, [x27, #48]
     f68:	bl	0 <grub_free>
     f6c:	str	xzr, [x27, #48]
     f70:	adrp	x0, 0 <grub_macho_close>
     f74:	mov	x1, #0xffffffffffffffff    	// #-1
     f78:	str	x1, [x27, #8]
     f7c:	ldr	x0, [x0]
     f80:	ldr	w0, [x0]
     f84:	b	c38 <grub_macho_load32+0xb8>
	...

0000000000000fa8 <grub_macho_get_entry_point32>:
     fa8:	stp	x29, x30, [sp, #-48]!
     fac:	mov	x29, sp
     fb0:	stp	x19, x20, [sp, #16]
     fb4:	mov	x19, x0
     fb8:	ldr	w0, [x0, #56]
     fbc:	cbz	w0, fc8 <grub_macho_get_entry_point32+0x20>
     fc0:	ldr	x0, [x19, #48]
     fc4:	cbz	x0, 1018 <grub_macho_get_entry_point32+0x70>
     fc8:	ldr	x2, [x19, #40]
     fcc:	cbz	x2, 10a8 <grub_macho_get_entry_point32+0x100>
     fd0:	ldr	w3, [x19, #24]
     fd4:	cmp	w3, #0x0
     fd8:	mov	w0, #0x0                   	// #0
     fdc:	mov	w1, #0x0                   	// #0
     fe0:	b.le	10b8 <grub_macho_get_entry_point32+0x110>
     fe4:	nop
     fe8:	ldr	w4, [x2]
     fec:	add	w1, w1, #0x1
     ff0:	cmp	w4, #0x5
     ff4:	b.ne	ffc <grub_macho_get_entry_point32+0x54>  // b.any
     ff8:	ldr	w0, [x2, #56]
     ffc:	ldr	w4, [x2, #4]
    1000:	cmp	w3, w1
    1004:	add	x2, x2, x4
    1008:	b.ne	fe8 <grub_macho_get_entry_point32+0x40>  // b.any
    100c:	ldp	x19, x20, [sp, #16]
    1010:	ldp	x29, x30, [sp], #48
    1014:	ret
    1018:	ldr	x0, [x19, #72]
    101c:	mov	x20, x1
    1020:	bl	0 <grub_malloc>
    1024:	str	x0, [x19, #48]
    1028:	cbz	x0, 10b8 <grub_macho_get_entry_point32+0x110>
    102c:	ldr	x0, [x19, #64]
    1030:	str	x21, [sp, #32]
    1034:	bl	0 <grub_malloc>
    1038:	mov	x21, x0
    103c:	cbz	x0, 10c8 <grub_macho_get_entry_point32+0x120>
    1040:	ldp	x0, x1, [x19]
    1044:	add	x1, x1, #0x180
    1048:	bl	0 <grub_file_seek>
    104c:	cmn	x0, #0x1
    1050:	b.eq	1070 <grub_macho_get_entry_point32+0xc8>  // b.none
    1054:	ldr	x0, [x19]
    1058:	mov	x1, x21
    105c:	ldr	x2, [x19, #64]
    1060:	bl	0 <grub_file_read>
    1064:	ldr	x1, [x19, #64]
    1068:	cmp	x0, x1
    106c:	b.eq	10f8 <grub_macho_get_entry_point32+0x150>  // b.none
    1070:	adrp	x0, 0 <grub_macho_close>
    1074:	ldr	x0, [x0]
    1078:	ldr	w0, [x0]
    107c:	cbz	w0, 10e0 <grub_macho_get_entry_point32+0x138>
    1080:	mov	x0, x21
    1084:	bl	0 <grub_free>
    1088:	ldr	x0, [x19, #48]
    108c:	bl	0 <grub_free>
    1090:	mov	x1, #0xffffffffffffffff    	// #-1
    1094:	mov	w0, #0x0                   	// #0
    1098:	ldr	x21, [sp, #32]
    109c:	str	x1, [x19, #8]
    10a0:	str	xzr, [x19, #48]
    10a4:	b	100c <grub_macho_get_entry_point32+0x64>
    10a8:	adrp	x1, 0 <grub_macho_close>
    10ac:	mov	w0, #0x15                  	// #21
    10b0:	ldr	x1, [x1]
    10b4:	bl	0 <grub_error>
    10b8:	mov	w0, #0x0                   	// #0
    10bc:	ldp	x19, x20, [sp, #16]
    10c0:	ldp	x29, x30, [sp], #48
    10c4:	ret
    10c8:	ldr	x0, [x19, #48]
    10cc:	bl	0 <grub_free>
    10d0:	mov	w0, #0x0                   	// #0
    10d4:	ldr	x21, [sp, #32]
    10d8:	str	xzr, [x19, #48]
    10dc:	b	100c <grub_macho_get_entry_point32+0x64>
    10e0:	adrp	x1, 0 <grub_macho_close>
    10e4:	mov	x2, x20
    10e8:	mov	w0, #0x15                  	// #21
    10ec:	ldr	x1, [x1]
    10f0:	bl	0 <grub_error>
    10f4:	b	1080 <grub_macho_get_entry_point32+0xd8>
    10f8:	ldr	x4, [x19, #72]
    10fc:	add	x3, x21, x0
    1100:	ldr	x1, [x19, #48]
    1104:	mov	x2, x21
    1108:	mov	x0, x1
    110c:	add	x1, x1, x4
    1110:	bl	1d30 <grub_decompress_lzss>
    1114:	ldr	x1, [x19, #72]
    1118:	cmp	x0, x1
    111c:	b.ne	1070 <grub_macho_get_entry_point32+0xc8>  // b.any
    1120:	mov	x0, x21
    1124:	bl	0 <grub_free>
    1128:	ldr	x0, [x19, #48]
    112c:	ldr	x4, [x19, #72]
    1130:	add	x2, x0, #0x1c
    1134:	ldp	w3, w1, [x0, #16]
    1138:	str	w3, [x19, #24]
    113c:	stp	x1, x2, [x19, #32]
    1140:	add	x0, x1, #0x1c
    1144:	cmp	x0, x4
    1148:	b.cs	1154 <grub_macho_get_entry_point32+0x1ac>  // b.hs, b.nlast
    114c:	ldr	x21, [sp, #32]
    1150:	b	fd4 <grub_macho_get_entry_point32+0x2c>
    1154:	adrp	x1, 0 <grub_macho_close>
    1158:	mov	x2, x20
    115c:	mov	w0, #0x15                  	// #21
    1160:	ldr	x1, [x1]
    1164:	bl	0 <grub_error>
    1168:	b	1088 <grub_macho_get_entry_point32+0xe0>
    116c:	nop
	...

0000000000001188 <grub_macho_parse64>:
    1188:	stp	x29, x30, [sp, #-64]!
    118c:	mov	x29, sp
    1190:	stp	x19, x20, [sp, #16]
    1194:	mov	x20, x1
    1198:	ldr	x1, [x0, #80]
    119c:	cmn	x1, #0x1
    11a0:	b.eq	11e8 <grub_macho_parse64+0x60>  // b.none
    11a4:	mov	x19, x0
    11a8:	ldr	x0, [x0]
    11ac:	bl	0 <grub_file_seek>
    11b0:	cmn	x0, #0x1
    11b4:	b.eq	11d0 <grub_macho_parse64+0x48>  // b.none
    11b8:	ldr	x0, [x19]
    11bc:	add	x1, sp, #0x20
    11c0:	mov	x2, #0x20                  	// #32
    11c4:	bl	0 <grub_file_read>
    11c8:	cmp	x0, #0x20
    11cc:	b.eq	120c <grub_macho_parse64+0x84>  // b.none
    11d0:	adrp	x0, 0 <grub_macho_close>
    11d4:	ldr	x0, [x0]
    11d8:	ldr	w0, [x0]
    11dc:	cbz	w0, 11f4 <grub_macho_parse64+0x6c>
    11e0:	mov	x0, #0xffffffffffffffff    	// #-1
    11e4:	str	x0, [x19, #80]
    11e8:	ldp	x19, x20, [sp, #16]
    11ec:	ldp	x29, x30, [sp], #64
    11f0:	ret
    11f4:	adrp	x1, 0 <grub_macho_close>
    11f8:	mov	x2, x20
    11fc:	mov	w0, #0x15                  	// #21
    1200:	ldr	x1, [x1]
    1204:	bl	0 <grub_error>
    1208:	b	11e0 <grub_macho_parse64+0x58>
    120c:	adrp	x1, 0 <grub_macho_close>
    1210:	add	x0, sp, #0x20
    1214:	mov	x2, #0x8                   	// #8
    1218:	ldr	x1, [x1]
    121c:	bl	0 <grub_memcmp>
    1220:	cbnz	w0, 124c <grub_macho_parse64+0xc4>
    1224:	ldp	w0, w1, [sp, #44]
    1228:	rev	w2, w0
    122c:	rev	w1, w1
    1230:	stp	x1, x2, [x19, #136]
    1234:	rev	w0, w0
    1238:	cmp	w0, #0x1f
    123c:	b.ls	12c0 <grub_macho_parse64+0x138>  // b.plast
    1240:	mov	w0, #0x1                   	// #1
    1244:	str	w0, [x19, #128]
    1248:	b	11e8 <grub_macho_parse64+0x60>
    124c:	ldr	w1, [sp, #32]
    1250:	mov	w0, #0xfacf                	// #64207
    1254:	movk	w0, #0xfeed, lsl #16
    1258:	cmp	w1, w0
    125c:	b.ne	12ac <grub_macho_parse64+0x124>  // b.any
    1260:	ldp	w1, w0, [sp, #48]
    1264:	str	w1, [x19, #96]
    1268:	str	x0, [x19, #104]
    126c:	bl	0 <grub_malloc>
    1270:	str	x0, [x19, #112]
    1274:	cbz	x0, 11e8 <grub_macho_parse64+0x60>
    1278:	ldr	x0, [x19]
    127c:	ldr	x1, [x19, #80]
    1280:	add	x1, x1, #0x20
    1284:	bl	0 <grub_file_seek>
    1288:	cmn	x0, #0x1
    128c:	b.eq	11d0 <grub_macho_parse64+0x48>  // b.none
    1290:	ldp	x2, x1, [x19, #104]
    1294:	ldr	x0, [x19]
    1298:	bl	0 <grub_file_read>
    129c:	ldr	x1, [x19, #104]
    12a0:	cmp	x0, x1
    12a4:	b.ne	11d0 <grub_macho_parse64+0x48>  // b.any
    12a8:	b	11e8 <grub_macho_parse64+0x60>
    12ac:	adrp	x1, 0 <grub_macho_close>
    12b0:	mov	w0, #0x15                  	// #21
    12b4:	ldr	x1, [x1]
    12b8:	bl	0 <grub_error>
    12bc:	b	11e0 <grub_macho_parse64+0x58>
    12c0:	adrp	x1, 0 <grub_macho_close>
    12c4:	mov	x2, x20
    12c8:	mov	w0, #0x15                  	// #21
    12cc:	ldr	x1, [x1]
    12d0:	bl	0 <grub_error>
    12d4:	mov	x0, #0xffffffffffffffff    	// #-1
    12d8:	str	x0, [x19, #80]
    12dc:	b	11e8 <grub_macho_parse64+0x60>
	...

0000000000001300 <grub_macho_filesize64>:
    1300:	ldr	x1, [x0, #80]
    1304:	cmn	x1, #0x1
    1308:	b.eq	1318 <grub_macho_filesize64+0x18>  // b.none
    130c:	ldr	x0, [x0, #88]
    1310:	sub	x0, x0, x1
    1314:	ret
    1318:	mov	x0, #0x0                   	// #0
    131c:	ret

0000000000001320 <grub_macho_readfile64>:
    1320:	stp	x29, x30, [sp, #-48]!
    1324:	mov	x29, sp
    1328:	str	x21, [sp, #32]
    132c:	mov	x21, x1
    1330:	ldr	x1, [x0, #80]
    1334:	cmn	x1, #0x1
    1338:	b.eq	13c0 <grub_macho_readfile64+0xa0>  // b.none
    133c:	stp	x19, x20, [sp, #16]
    1340:	mov	x19, x0
    1344:	mov	x20, x2
    1348:	ldr	x0, [x0]
    134c:	bl	0 <grub_file_seek>
    1350:	cmn	x0, #0x1
    1354:	b.eq	13a4 <grub_macho_readfile64+0x84>  // b.none
    1358:	ldp	x2, x3, [x19, #80]
    135c:	mov	x1, x20
    1360:	ldr	x0, [x19]
    1364:	sub	x2, x3, x2
    1368:	bl	0 <grub_file_read>
    136c:	ldp	x3, x2, [x19, #80]
    1370:	mov	x1, x0
    1374:	mov	w0, #0x0                   	// #0
    1378:	sub	x2, x2, x3
    137c:	cmp	x2, x1
    1380:	b.eq	1394 <grub_macho_readfile64+0x74>  // b.none
    1384:	adrp	x0, 0 <grub_macho_close>
    1388:	ldr	x19, [x0]
    138c:	ldr	w0, [x19]
    1390:	cbz	w0, 13d8 <grub_macho_readfile64+0xb8>
    1394:	ldp	x19, x20, [sp, #16]
    1398:	ldr	x21, [sp, #32]
    139c:	ldp	x29, x30, [sp], #48
    13a0:	ret
    13a4:	adrp	x0, 0 <grub_macho_close>
    13a8:	ldp	x19, x20, [sp, #16]
    13ac:	ldr	x0, [x0]
    13b0:	ldr	x21, [sp, #32]
    13b4:	ldr	w0, [x0]
    13b8:	ldp	x29, x30, [sp], #48
    13bc:	ret
    13c0:	adrp	x1, 0 <grub_macho_close>
    13c4:	mov	w0, #0x15                  	// #21
    13c8:	ldr	x21, [sp, #32]
    13cc:	ldp	x29, x30, [sp], #48
    13d0:	ldr	x1, [x1]
    13d4:	b	0 <grub_error>
    13d8:	adrp	x1, 0 <grub_macho_close>
    13dc:	mov	x2, x21
    13e0:	mov	w0, #0x15                  	// #21
    13e4:	ldr	x1, [x1]
    13e8:	bl	0 <grub_error>
    13ec:	ldr	w0, [x19]
    13f0:	b	1394 <grub_macho_readfile64+0x74>
    13f4:	nop
	...

0000000000001410 <grub_macho_size64>:
    1410:	stp	x29, x30, [sp, #-80]!
    1414:	mov	x29, sp
    1418:	stp	x19, x20, [sp, #16]
    141c:	mov	x19, x1
    1420:	mov	x20, x2
    1424:	stp	x21, x22, [sp, #32]
    1428:	mov	x21, x0
    142c:	ldr	w0, [x0, #128]
    1430:	stp	x23, x24, [sp, #48]
    1434:	mov	x24, #0xffffffffffffffff    	// #-1
    1438:	mov	w22, w3
    143c:	str	x24, [x1]
    1440:	str	xzr, [x2]
    1444:	cbz	w0, 1450 <grub_macho_size64+0x40>
    1448:	ldr	x0, [x21, #120]
    144c:	cbz	x0, 1564 <grub_macho_size64+0x154>
    1450:	ldr	x5, [x21, #112]
    1454:	cbz	x5, 1630 <grub_macho_size64+0x220>
    1458:	ldr	w3, [x21, #96]
    145c:	cmp	w3, #0x0
    1460:	b.le	15f0 <grub_macho_size64+0x1e0>
    1464:	and	w1, w22, #0x1
    1468:	tbnz	w22, #0, 14f8 <grub_macho_size64+0xe8>
    146c:	mov	w4, #0x0                   	// #0
    1470:	ldr	w0, [x5]
    1474:	cmp	w0, #0x19
    1478:	b.ne	14b8 <grub_macho_size64+0xa8>  // b.any
    147c:	ldr	x0, [x5, #32]
    1480:	cbz	x0, 14b8 <grub_macho_size64+0xa8>
    1484:	ldr	x6, [x19]
    1488:	add	w1, w1, #0x1
    148c:	ldr	x2, [x5, #24]
    1490:	cmp	x6, x2
    1494:	b.ls	14a0 <grub_macho_size64+0x90>  // b.plast
    1498:	str	x2, [x19]
    149c:	ldp	x2, x0, [x5, #24]
    14a0:	add	x0, x0, x2
    14a4:	ldr	x6, [x20]
    14a8:	cmp	x6, x0
    14ac:	b.cs	14b8 <grub_macho_size64+0xa8>  // b.hs, b.nlast
    14b0:	str	x0, [x20]
    14b4:	nop
    14b8:	ldr	w0, [x5, #4]
    14bc:	add	w4, w4, #0x1
    14c0:	cmp	w3, w4
    14c4:	add	x5, x5, x0
    14c8:	b.ne	1470 <grub_macho_size64+0x60>  // b.any
    14cc:	cbz	w1, 15f0 <grub_macho_size64+0x1e0>
    14d0:	ldr	x0, [x19]
    14d4:	ldr	x1, [x20]
    14d8:	cmp	x1, x0
    14dc:	b.cc	1610 <grub_macho_size64+0x200>  // b.lo, b.ul, b.last
    14e0:	mov	w0, #0x0                   	// #0
    14e4:	ldp	x19, x20, [sp, #16]
    14e8:	ldp	x21, x22, [sp, #32]
    14ec:	ldp	x23, x24, [sp, #48]
    14f0:	ldp	x29, x30, [sp], #80
    14f4:	ret
    14f8:	mov	w1, #0x0                   	// #0
    14fc:	mov	w2, #0x0                   	// #0
    1500:	ldr	w0, [x5]
    1504:	add	w2, w2, #0x1
    1508:	cmp	w0, #0x19
    150c:	b.ne	1550 <grub_macho_size64+0x140>  // b.any
    1510:	ldr	x0, [x5, #32]
    1514:	cbz	x0, 1550 <grub_macho_size64+0x140>
    1518:	ldr	x4, [x5, #48]
    151c:	cbz	x4, 1550 <grub_macho_size64+0x140>
    1520:	ldr	x6, [x19]
    1524:	add	w1, w1, #0x1
    1528:	ldr	x4, [x5, #24]
    152c:	cmp	x4, x6
    1530:	b.cs	153c <grub_macho_size64+0x12c>  // b.hs, b.nlast
    1534:	str	x4, [x19]
    1538:	ldp	x4, x0, [x5, #24]
    153c:	add	x0, x0, x4
    1540:	ldr	x6, [x20]
    1544:	cmp	x0, x6
    1548:	b.ls	1550 <grub_macho_size64+0x140>  // b.plast
    154c:	str	x0, [x20]
    1550:	ldr	w0, [x5, #4]
    1554:	cmp	w3, w2
    1558:	add	x5, x5, x0
    155c:	b.ne	1500 <grub_macho_size64+0xf0>  // b.any
    1560:	b	14cc <grub_macho_size64+0xbc>
    1564:	ldr	x0, [x21, #144]
    1568:	mov	x23, x4
    156c:	bl	0 <grub_malloc>
    1570:	str	x0, [x21, #120]
    1574:	cbz	x0, 15f0 <grub_macho_size64+0x1e0>
    1578:	ldr	x0, [x21, #136]
    157c:	str	x25, [sp, #64]
    1580:	bl	0 <grub_malloc>
    1584:	mov	x25, x0
    1588:	cbz	x0, 1644 <grub_macho_size64+0x234>
    158c:	ldr	x0, [x21]
    1590:	ldr	x1, [x21, #80]
    1594:	add	x1, x1, #0x180
    1598:	bl	0 <grub_file_seek>
    159c:	cmn	x0, #0x1
    15a0:	b.eq	15c0 <grub_macho_size64+0x1b0>  // b.none
    15a4:	ldr	x0, [x21]
    15a8:	mov	x1, x25
    15ac:	ldr	x2, [x21, #136]
    15b0:	bl	0 <grub_file_read>
    15b4:	ldr	x1, [x21, #136]
    15b8:	cmp	x0, x1
    15bc:	b.eq	1670 <grub_macho_size64+0x260>  // b.none
    15c0:	adrp	x0, 0 <grub_macho_close>
    15c4:	ldr	x0, [x0]
    15c8:	ldr	w0, [x0]
    15cc:	cbz	w0, 1658 <grub_macho_size64+0x248>
    15d0:	mov	x0, x25
    15d4:	bl	0 <grub_free>
    15d8:	ldr	x0, [x21, #120]
    15dc:	bl	0 <grub_free>
    15e0:	mov	x0, #0xffffffffffffffff    	// #-1
    15e4:	ldr	x25, [sp, #64]
    15e8:	str	x0, [x21, #80]
    15ec:	str	xzr, [x21, #120]
    15f0:	adrp	x1, 0 <grub_macho_close>
    15f4:	mov	w0, #0x15                  	// #21
    15f8:	ldp	x19, x20, [sp, #16]
    15fc:	ldp	x21, x22, [sp, #32]
    1600:	ldp	x23, x24, [sp, #48]
    1604:	ldp	x29, x30, [sp], #80
    1608:	ldr	x1, [x1]
    160c:	b	0 <grub_error>
    1610:	adrp	x1, 0 <grub_macho_close>
    1614:	mov	w0, #0x15                  	// #21
    1618:	ldp	x19, x20, [sp, #16]
    161c:	ldp	x21, x22, [sp, #32]
    1620:	ldp	x23, x24, [sp, #48]
    1624:	ldp	x29, x30, [sp], #80
    1628:	ldr	x1, [x1]
    162c:	b	0 <grub_error>
    1630:	adrp	x1, 0 <grub_macho_close>
    1634:	mov	w0, #0x15                  	// #21
    1638:	ldr	x1, [x1]
    163c:	bl	0 <grub_error>
    1640:	b	15f0 <grub_macho_size64+0x1e0>
    1644:	ldr	x0, [x21, #120]
    1648:	bl	0 <grub_free>
    164c:	ldr	x25, [sp, #64]
    1650:	str	xzr, [x21, #120]
    1654:	b	15f0 <grub_macho_size64+0x1e0>
    1658:	adrp	x1, 0 <grub_macho_close>
    165c:	mov	x2, x23
    1660:	mov	w0, #0x15                  	// #21
    1664:	ldr	x1, [x1]
    1668:	bl	0 <grub_error>
    166c:	b	15d0 <grub_macho_size64+0x1c0>
    1670:	ldr	x4, [x21, #144]
    1674:	add	x3, x25, x0
    1678:	ldr	x1, [x21, #120]
    167c:	mov	x2, x25
    1680:	mov	x0, x1
    1684:	add	x1, x1, x4
    1688:	bl	1d30 <grub_decompress_lzss>
    168c:	ldr	x1, [x21, #144]
    1690:	cmp	x0, x1
    1694:	b.ne	15c0 <grub_macho_size64+0x1b0>  // b.any
    1698:	mov	x0, x25
    169c:	bl	0 <grub_free>
    16a0:	ldr	x0, [x21, #120]
    16a4:	ldr	x2, [x21, #144]
    16a8:	add	x5, x0, #0x20
    16ac:	ldp	w3, w1, [x0, #16]
    16b0:	str	w3, [x21, #96]
    16b4:	stp	x1, x5, [x21, #104]
    16b8:	add	x0, x1, #0x20
    16bc:	cmp	x0, x2
    16c0:	b.cs	16cc <grub_macho_size64+0x2bc>  // b.hs, b.nlast
    16c4:	ldr	x25, [sp, #64]
    16c8:	b	145c <grub_macho_size64+0x4c>
    16cc:	adrp	x1, 0 <grub_macho_close>
    16d0:	mov	x2, x23
    16d4:	mov	w0, #0x15                  	// #21
    16d8:	ldr	x1, [x1]
    16dc:	bl	0 <grub_error>
    16e0:	ldr	x0, [x21, #120]
    16e4:	bl	0 <grub_free>
    16e8:	ldr	x25, [sp, #64]
    16ec:	str	x24, [x21, #80]
    16f0:	str	xzr, [x21, #120]
    16f4:	b	15f0 <grub_macho_size64+0x1e0>
	...

0000000000001720 <grub_macho_load64>:
    1720:	stp	x29, x30, [sp, #-112]!
    1724:	mov	x29, sp
    1728:	stp	x19, x20, [sp, #16]
    172c:	mov	x20, x0
    1730:	stp	x21, x22, [sp, #32]
    1734:	mov	x22, x4
    1738:	stp	x23, x24, [sp, #48]
    173c:	mov	x24, x2
    1740:	mov	w23, w3
    1744:	str	x1, [sp, #104]
    1748:	cbz	x4, 1750 <grub_macho_load64+0x30>
    174c:	str	wzr, [x4]
    1750:	ldr	w0, [x20, #128]
    1754:	cbz	w0, 1760 <grub_macho_load64+0x40>
    1758:	ldr	x0, [x20, #120]
    175c:	cbz	x0, 1938 <grub_macho_load64+0x218>
    1760:	ldr	x19, [x20, #112]
    1764:	cbz	x19, 1a30 <grub_macho_load64+0x310>
    1768:	ldr	w0, [x20, #96]
    176c:	stp	x25, x26, [sp, #64]
    1770:	stp	x27, x28, [sp, #80]
    1774:	and	w23, w23, #0x1
    1778:	cmp	w0, #0x0
    177c:	mov	w25, #0x0                   	// #0
    1780:	adrp	x27, 0 <grub_macho_close>
    1784:	b.le	17c8 <grub_macho_load64+0xa8>
    1788:	ldr	w1, [x19]
    178c:	cmp	w1, #0x19
    1790:	b.ne	17b4 <grub_macho_load64+0x94>  // b.any
    1794:	ldr	x3, [x19, #48]
    1798:	cbnz	x3, 17f0 <grub_macho_load64+0xd0>
    179c:	cbnz	w23, 17b4 <grub_macho_load64+0x94>
    17a0:	ldr	x2, [x19, #32]
    17a4:	cbz	x2, 17b4 <grub_macho_load64+0x94>
    17a8:	cmp	x3, x2
    17ac:	b.cc	1854 <grub_macho_load64+0x134>  // b.lo, b.ul, b.last
    17b0:	ldr	w0, [x20, #96]
    17b4:	ldr	w1, [x19, #4]
    17b8:	add	w25, w25, #0x1
    17bc:	cmp	w25, w0
    17c0:	add	x19, x19, x1
    17c4:	b.lt	1788 <grub_macho_load64+0x68>  // b.tstop
    17c8:	adrp	x0, 0 <grub_macho_close>
    17cc:	ldp	x19, x20, [sp, #16]
    17d0:	ldr	x0, [x0]
    17d4:	ldp	x21, x22, [sp, #32]
    17d8:	ldr	w0, [x0]
    17dc:	ldp	x23, x24, [sp, #48]
    17e0:	ldp	x25, x26, [sp, #64]
    17e4:	ldp	x27, x28, [sp, #80]
    17e8:	ldp	x29, x30, [sp], #112
    17ec:	ret
    17f0:	ldr	x21, [x19, #32]
    17f4:	cbz	x21, 17b4 <grub_macho_load64+0x94>
    17f8:	ldr	x4, [x20, #120]
    17fc:	cmp	x3, x21
    1800:	csel	x21, x3, x21, ls  // ls = plast
    1804:	ldr	x1, [x19, #40]
    1808:	cbz	x4, 19c0 <grub_macho_load64+0x2a0>
    180c:	ldr	x3, [x20, #144]
    1810:	add	x2, x21, x1
    1814:	mov	x0, #0xffffffffffffffff    	// #-1
    1818:	cmp	x2, x3
    181c:	b.ls	1870 <grub_macho_load64+0x150>  // b.plast
    1820:	cmp	x21, x0
    1824:	b.eq	1884 <grub_macho_load64+0x164>  // b.none
    1828:	adrp	x0, 0 <grub_macho_close>
    182c:	ldr	x19, [x0]
    1830:	ldr	w0, [x19]
    1834:	cbz	w0, 19f0 <grub_macho_load64+0x2d0>
    1838:	ldp	x25, x26, [sp, #64]
    183c:	ldp	x27, x28, [sp, #80]
    1840:	ldp	x19, x20, [sp, #16]
    1844:	ldp	x21, x22, [sp, #32]
    1848:	ldp	x23, x24, [sp, #48]
    184c:	ldp	x29, x30, [sp], #112
    1850:	ret
    1854:	ldr	x0, [x19, #24]
    1858:	add	x0, x3, x0
    185c:	add	x0, x24, x0
    1860:	sub	x2, x2, x3
    1864:	mov	w1, #0x0                   	// #0
    1868:	bl	0 <grub_memset>
    186c:	b	17b0 <grub_macho_load64+0x90>
    1870:	ldr	x0, [x19, #24]
    1874:	mov	x2, x21
    1878:	add	x1, x4, x1
    187c:	add	x0, x24, x0
    1880:	bl	0 <grub_memmove>
    1884:	ldr	x2, [x19, #32]
    1888:	ldr	x3, [x19, #48]
    188c:	cbz	x22, 17a8 <grub_macho_load64+0x88>
    1890:	ldr	x0, [x19, #24]
    1894:	cmp	x3, x2
    1898:	add	x26, x24, x0
    189c:	b.cs	1924 <grub_macho_load64+0x204>  // b.hs, b.nlast
    18a0:	sub	x21, x3, #0x16
    18a4:	add	x21, x26, x21
    18a8:	cmp	x26, x21
    18ac:	b.cs	1858 <grub_macho_load64+0x138>  // b.hs, b.nlast
    18b0:	ldr	x28, [x27]
    18b4:	b	18c4 <grub_macho_load64+0x1a4>
    18b8:	add	x26, x26, #0x1
    18bc:	cmp	x21, x26
    18c0:	b.ls	1a24 <grub_macho_load64+0x304>  // b.plast
    18c4:	mov	x1, x28
    18c8:	mov	x0, x26
    18cc:	mov	x2, #0x16                  	// #22
    18d0:	bl	0 <grub_memcmp>
    18d4:	cbnz	w0, 18b8 <grub_macho_load64+0x198>
    18d8:	ldr	x2, [x19, #32]
    18dc:	add	x4, x26, #0x16
    18e0:	ldr	x3, [x19, #48]
    18e4:	str	wzr, [x22]
    18e8:	add	x21, x21, #0x16
    18ec:	cmp	x4, x21
    18f0:	b.cc	1904 <grub_macho_load64+0x1e4>  // b.lo, b.ul, b.last
    18f4:	b	17a8 <grub_macho_load64+0x88>
    18f8:	str	w0, [x22]
    18fc:	cmp	x21, x4
    1900:	b.eq	17a8 <grub_macho_load64+0x88>  // b.none
    1904:	ldrb	w1, [x4]
    1908:	add	w0, w0, w0, lsl #2
    190c:	add	x4, x4, #0x1
    1910:	sub	w1, w1, #0x30
    1914:	add	w0, w1, w0, lsl #1
    1918:	cmp	w1, #0x9
    191c:	b.ls	18f8 <grub_macho_load64+0x1d8>  // b.plast
    1920:	b	17a8 <grub_macho_load64+0x88>
    1924:	sub	x2, x2, #0x16
    1928:	add	x21, x26, x2
    192c:	cmp	x21, x26
    1930:	b.hi	18b0 <grub_macho_load64+0x190>  // b.pmore
    1934:	b	17b0 <grub_macho_load64+0x90>
    1938:	ldr	x0, [x20, #144]
    193c:	bl	0 <grub_malloc>
    1940:	str	x0, [x20, #120]
    1944:	cbz	x0, 1a6c <grub_macho_load64+0x34c>
    1948:	ldr	x0, [x20, #136]
    194c:	bl	0 <grub_malloc>
    1950:	mov	x19, x0
    1954:	cbz	x0, 1a50 <grub_macho_load64+0x330>
    1958:	ldr	x0, [x20]
    195c:	ldr	x1, [x20, #80]
    1960:	add	x1, x1, #0x180
    1964:	bl	0 <grub_file_seek>
    1968:	cmn	x0, #0x1
    196c:	b.eq	198c <grub_macho_load64+0x26c>  // b.none
    1970:	ldr	x0, [x20]
    1974:	mov	x1, x19
    1978:	ldr	x2, [x20, #136]
    197c:	bl	0 <grub_file_read>
    1980:	ldr	x1, [x20, #136]
    1984:	cmp	x0, x1
    1988:	b.eq	1a94 <grub_macho_load64+0x374>  // b.none
    198c:	adrp	x0, 0 <grub_macho_close>
    1990:	ldr	x21, [x0]
    1994:	ldr	w0, [x21]
    1998:	cbz	w0, 1a7c <grub_macho_load64+0x35c>
    199c:	mov	x0, x19
    19a0:	bl	0 <grub_free>
    19a4:	ldr	x0, [x20, #120]
    19a8:	bl	0 <grub_free>
    19ac:	str	xzr, [x20, #120]
    19b0:	mov	x0, #0xffffffffffffffff    	// #-1
    19b4:	str	x0, [x20, #80]
    19b8:	ldr	w0, [x21]
    19bc:	b	1840 <grub_macho_load64+0x120>
    19c0:	ldr	x0, [x20]
    19c4:	ldr	x2, [x20, #80]
    19c8:	add	x1, x1, x2
    19cc:	bl	0 <grub_file_seek>
    19d0:	cmn	x0, #0x1
    19d4:	b.eq	17c8 <grub_macho_load64+0xa8>  // b.none
    19d8:	ldr	x0, [x20]
    19dc:	mov	x2, x21
    19e0:	ldr	x1, [x19, #24]
    19e4:	add	x1, x24, x1
    19e8:	bl	0 <grub_file_read>
    19ec:	b	1820 <grub_macho_load64+0x100>
    19f0:	adrp	x1, 0 <grub_macho_close>
    19f4:	mov	w0, #0x15                  	// #21
    19f8:	ldr	x2, [sp, #104]
    19fc:	ldr	x1, [x1]
    1a00:	bl	0 <grub_error>
    1a04:	ldr	w0, [x19]
    1a08:	ldp	x19, x20, [sp, #16]
    1a0c:	ldp	x21, x22, [sp, #32]
    1a10:	ldp	x23, x24, [sp, #48]
    1a14:	ldp	x25, x26, [sp, #64]
    1a18:	ldp	x27, x28, [sp, #80]
    1a1c:	ldp	x29, x30, [sp], #112
    1a20:	ret
    1a24:	ldr	x2, [x19, #32]
    1a28:	ldr	x3, [x19, #48]
    1a2c:	b	17a8 <grub_macho_load64+0x88>
    1a30:	adrp	x1, 0 <grub_macho_close>
    1a34:	mov	w0, #0x15                  	// #21
    1a38:	ldr	x1, [x1]
    1a3c:	bl	0 <grub_error>
    1a40:	adrp	x0, 0 <grub_macho_close>
    1a44:	ldr	x0, [x0]
    1a48:	ldr	w0, [x0]
    1a4c:	b	1840 <grub_macho_load64+0x120>
    1a50:	ldr	x0, [x20, #120]
    1a54:	bl	0 <grub_free>
    1a58:	str	xzr, [x20, #120]
    1a5c:	adrp	x0, 0 <grub_macho_close>
    1a60:	ldr	x0, [x0]
    1a64:	ldr	w0, [x0]
    1a68:	b	1840 <grub_macho_load64+0x120>
    1a6c:	adrp	x0, 0 <grub_macho_close>
    1a70:	ldr	x0, [x0]
    1a74:	ldr	w0, [x0]
    1a78:	b	1840 <grub_macho_load64+0x120>
    1a7c:	adrp	x1, 0 <grub_macho_close>
    1a80:	mov	w0, #0x15                  	// #21
    1a84:	ldr	x2, [sp, #104]
    1a88:	ldr	x1, [x1]
    1a8c:	bl	0 <grub_error>
    1a90:	b	199c <grub_macho_load64+0x27c>
    1a94:	ldr	x4, [x20, #144]
    1a98:	add	x3, x19, x0
    1a9c:	ldr	x1, [x20, #120]
    1aa0:	mov	x2, x19
    1aa4:	mov	x0, x1
    1aa8:	add	x1, x1, x4
    1aac:	bl	1d30 <grub_decompress_lzss>
    1ab0:	ldr	x1, [x20, #144]
    1ab4:	cmp	x0, x1
    1ab8:	b.ne	198c <grub_macho_load64+0x26c>  // b.any
    1abc:	mov	x0, x19
    1ac0:	bl	0 <grub_free>
    1ac4:	ldr	x0, [x20, #120]
    1ac8:	ldr	x2, [x20, #144]
    1acc:	add	x19, x0, #0x20
    1ad0:	ldr	w1, [x0, #20]
    1ad4:	ldr	w0, [x0, #16]
    1ad8:	str	w0, [x20, #96]
    1adc:	add	x3, x1, #0x20
    1ae0:	stp	x1, x19, [x20, #104]
    1ae4:	cmp	x3, x2
    1ae8:	b.cs	1af8 <grub_macho_load64+0x3d8>  // b.hs, b.nlast
    1aec:	stp	x25, x26, [sp, #64]
    1af0:	stp	x27, x28, [sp, #80]
    1af4:	b	1774 <grub_macho_load64+0x54>
    1af8:	adrp	x1, 0 <grub_macho_close>
    1afc:	mov	w0, #0x15                  	// #21
    1b00:	ldr	x2, [sp, #104]
    1b04:	ldr	x1, [x1]
    1b08:	bl	0 <grub_error>
    1b0c:	ldr	x0, [x20, #120]
    1b10:	bl	0 <grub_free>
    1b14:	str	xzr, [x20, #120]
    1b18:	adrp	x0, 0 <grub_macho_close>
    1b1c:	mov	x1, #0xffffffffffffffff    	// #-1
    1b20:	str	x1, [x20, #80]
    1b24:	ldr	x0, [x0]
    1b28:	ldr	w0, [x0]
    1b2c:	b	1840 <grub_macho_load64+0x120>
	...

0000000000001b50 <grub_macho_get_entry_point64>:
    1b50:	stp	x29, x30, [sp, #-48]!
    1b54:	mov	x29, sp
    1b58:	stp	x19, x20, [sp, #16]
    1b5c:	mov	x19, x0
    1b60:	ldr	w0, [x0, #128]
    1b64:	cbz	w0, 1b70 <grub_macho_get_entry_point64+0x20>
    1b68:	ldr	x0, [x19, #120]
    1b6c:	cbz	x0, 1bc0 <grub_macho_get_entry_point64+0x70>
    1b70:	ldr	x2, [x19, #112]
    1b74:	cbz	x2, 1c54 <grub_macho_get_entry_point64+0x104>
    1b78:	ldr	w3, [x19, #96]
    1b7c:	cmp	w3, #0x0
    1b80:	mov	x0, #0x0                   	// #0
    1b84:	mov	w1, #0x0                   	// #0
    1b88:	b.le	1c64 <grub_macho_get_entry_point64+0x114>
    1b8c:	nop
    1b90:	ldr	w4, [x2]
    1b94:	add	w1, w1, #0x1
    1b98:	cmp	w4, #0x5
    1b9c:	b.ne	1ba4 <grub_macho_get_entry_point64+0x54>  // b.any
    1ba0:	ldr	x0, [x2, #144]
    1ba4:	cmp	w3, w1
    1ba8:	ldr	w4, [x2, #4]
    1bac:	add	x2, x2, x4
    1bb0:	b.ne	1b90 <grub_macho_get_entry_point64+0x40>  // b.any
    1bb4:	ldp	x19, x20, [sp, #16]
    1bb8:	ldp	x29, x30, [sp], #48
    1bbc:	ret
    1bc0:	ldr	x0, [x19, #144]
    1bc4:	mov	x20, x1
    1bc8:	bl	0 <grub_malloc>
    1bcc:	str	x0, [x19, #120]
    1bd0:	cbz	x0, 1c64 <grub_macho_get_entry_point64+0x114>
    1bd4:	ldr	x0, [x19, #136]
    1bd8:	str	x21, [sp, #32]
    1bdc:	bl	0 <grub_malloc>
    1be0:	mov	x21, x0
    1be4:	cbz	x0, 1c74 <grub_macho_get_entry_point64+0x124>
    1be8:	ldr	x0, [x19]
    1bec:	ldr	x1, [x19, #80]
    1bf0:	add	x1, x1, #0x180
    1bf4:	bl	0 <grub_file_seek>
    1bf8:	cmn	x0, #0x1
    1bfc:	b.eq	1c1c <grub_macho_get_entry_point64+0xcc>  // b.none
    1c00:	ldr	x0, [x19]
    1c04:	mov	x1, x21
    1c08:	ldr	x2, [x19, #136]
    1c0c:	bl	0 <grub_file_read>
    1c10:	ldr	x1, [x19, #136]
    1c14:	cmp	x0, x1
    1c18:	b.eq	1ca4 <grub_macho_get_entry_point64+0x154>  // b.none
    1c1c:	adrp	x0, 0 <grub_macho_close>
    1c20:	ldr	x0, [x0]
    1c24:	ldr	w0, [x0]
    1c28:	cbz	w0, 1c8c <grub_macho_get_entry_point64+0x13c>
    1c2c:	mov	x0, x21
    1c30:	bl	0 <grub_free>
    1c34:	ldr	x0, [x19, #120]
    1c38:	bl	0 <grub_free>
    1c3c:	mov	x1, #0xffffffffffffffff    	// #-1
    1c40:	mov	x0, #0x0                   	// #0
    1c44:	ldr	x21, [sp, #32]
    1c48:	str	x1, [x19, #80]
    1c4c:	str	xzr, [x19, #120]
    1c50:	b	1bb4 <grub_macho_get_entry_point64+0x64>
    1c54:	adrp	x1, 0 <grub_macho_close>
    1c58:	mov	w0, #0x15                  	// #21
    1c5c:	ldr	x1, [x1]
    1c60:	bl	0 <grub_error>
    1c64:	mov	x0, #0x0                   	// #0
    1c68:	ldp	x19, x20, [sp, #16]
    1c6c:	ldp	x29, x30, [sp], #48
    1c70:	ret
    1c74:	ldr	x0, [x19, #120]
    1c78:	bl	0 <grub_free>
    1c7c:	mov	x0, #0x0                   	// #0
    1c80:	ldr	x21, [sp, #32]
    1c84:	str	xzr, [x19, #120]
    1c88:	b	1bb4 <grub_macho_get_entry_point64+0x64>
    1c8c:	adrp	x1, 0 <grub_macho_close>
    1c90:	mov	x2, x20
    1c94:	mov	w0, #0x15                  	// #21
    1c98:	ldr	x1, [x1]
    1c9c:	bl	0 <grub_error>
    1ca0:	b	1c2c <grub_macho_get_entry_point64+0xdc>
    1ca4:	ldr	x4, [x19, #144]
    1ca8:	add	x3, x21, x0
    1cac:	ldr	x1, [x19, #120]
    1cb0:	mov	x2, x21
    1cb4:	mov	x0, x1
    1cb8:	add	x1, x1, x4
    1cbc:	bl	1d30 <grub_decompress_lzss>
    1cc0:	ldr	x1, [x19, #144]
    1cc4:	cmp	x0, x1
    1cc8:	b.ne	1c1c <grub_macho_get_entry_point64+0xcc>  // b.any
    1ccc:	mov	x0, x21
    1cd0:	bl	0 <grub_free>
    1cd4:	ldr	x0, [x19, #120]
    1cd8:	ldr	x4, [x19, #144]
    1cdc:	add	x2, x0, #0x20
    1ce0:	ldp	w3, w1, [x0, #16]
    1ce4:	str	w3, [x19, #96]
    1ce8:	stp	x1, x2, [x19, #104]
    1cec:	add	x0, x1, #0x20
    1cf0:	cmp	x0, x4
    1cf4:	b.cs	1d00 <grub_macho_get_entry_point64+0x1b0>  // b.hs, b.nlast
    1cf8:	ldr	x21, [sp, #32]
    1cfc:	b	1b7c <grub_macho_get_entry_point64+0x2c>
    1d00:	adrp	x1, 0 <grub_macho_close>
    1d04:	mov	x2, x20
    1d08:	mov	w0, #0x15                  	// #21
    1d0c:	ldr	x1, [x1]
    1d10:	bl	0 <grub_error>
    1d14:	b	1c34 <grub_macho_get_entry_point64+0xe4>
	...

0000000000001d30 <grub_decompress_lzss>:
    1d30:	adrp	x4, 0 <grub_macho_close>
    1d34:	mov	x5, #0x2020202020202020    	// #2314885530818453536
    1d38:	ldr	x13, [x4]
    1d3c:	mov	x4, x13
    1d40:	add	x6, x13, #0xfe8
    1d44:	nop
    1d48:	str	x5, [x4], #8
    1d4c:	cmp	x6, x4
    1d50:	b.ne	1d48 <grub_decompress_lzss+0x18>  // b.any
    1d54:	mov	x7, x0
    1d58:	mov	w6, #0x20202020            	// #538976288
    1d5c:	mov	w4, #0x2020                	// #8224
    1d60:	mov	w12, #0x0                   	// #0
    1d64:	mov	w5, #0xfee                 	// #4078
    1d68:	str	w6, [x13, #4072]
    1d6c:	strh	w4, [x13, #4076]
    1d70:	lsr	w12, w12, #1
    1d74:	tbnz	w12, #8, 1d88 <grub_decompress_lzss+0x58>
    1d78:	cmp	x2, x3
    1d7c:	b.cs	1e48 <grub_decompress_lzss+0x118>  // b.hs, b.nlast
    1d80:	ldrb	w12, [x2], #1
    1d84:	orr	w12, w12, #0xff00
    1d88:	tbz	w12, #0, 1db4 <grub_decompress_lzss+0x84>
    1d8c:	cmp	x2, x3
    1d90:	b.cs	1e48 <grub_decompress_lzss+0x118>  // b.hs, b.nlast
    1d94:	ldrb	w4, [x2], #1
    1d98:	cmp	x7, x1
    1d9c:	b.cs	1da4 <grub_decompress_lzss+0x74>  // b.hs, b.nlast
    1da0:	strb	w4, [x7], #1
    1da4:	add	w6, w5, #0x1
    1da8:	strb	w4, [x13, w5, sxtw]
    1dac:	and	w5, w6, #0xfff
    1db0:	b	1d70 <grub_decompress_lzss+0x40>
    1db4:	cmp	x2, x3
    1db8:	b.cs	1e48 <grub_decompress_lzss+0x118>  // b.hs, b.nlast
    1dbc:	mov	x4, x2
    1dc0:	ldrb	w8, [x4], #1
    1dc4:	cmp	x3, x4
    1dc8:	b.ls	1e48 <grub_decompress_lzss+0x118>  // b.plast
    1dcc:	ldrb	w4, [x2, #1]
    1dd0:	add	x6, x2, #0x2
    1dd4:	and	w9, w4, #0xf
    1dd8:	lsl	w2, w4, #4
    1ddc:	add	w9, w9, #0x3
    1de0:	and	w2, w2, #0xf00
    1de4:	orr	w2, w2, w8
    1de8:	add	w9, w9, w2
    1dec:	nop
    1df0:	and	w4, w2, #0xfff
    1df4:	mov	x8, x7
    1df8:	add	w11, w5, #0x1
    1dfc:	cmp	x1, x7
    1e00:	ldrb	w4, [x13, w4, sxtw]
    1e04:	b.ls	1e2c <grub_decompress_lzss+0xfc>  // b.plast
    1e08:	strb	w4, [x8], #1
    1e0c:	add	w2, w2, #0x1
    1e10:	strb	w4, [x13, w5, sxtw]
    1e14:	cmp	w2, w9
    1e18:	and	w5, w11, #0xfff
    1e1c:	mov	x7, x8
    1e20:	b.ne	1df0 <grub_decompress_lzss+0xc0>  // b.any
    1e24:	mov	x2, x6
    1e28:	b	1d70 <grub_decompress_lzss+0x40>
    1e2c:	strb	w4, [x13, w5, sxtw]
    1e30:	add	w2, w2, #0x1
    1e34:	cmp	w2, w9
    1e38:	and	w5, w11, #0xfff
    1e3c:	b.ne	1df0 <grub_decompress_lzss+0xc0>  // b.any
    1e40:	mov	x2, x6
    1e44:	b	1d70 <grub_decompress_lzss+0x40>
    1e48:	sub	x0, x7, x0
    1e4c:	ret
	...
