
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//liblsan.so.0.0.0_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006618 <.init>:
    6618:	stp	x29, x30, [sp, #-16]!
    661c:	mov	x29, sp
    6620:	bl	6d70 <*ABS*+0x10@plt+0x10>
    6624:	ldp	x29, x30, [sp], #16
    6628:	ret

Disassembly of section .plt:

0000000000006630 <_Unwind_Backtrace@plt-0x20>:
    6630:	stp	x16, x30, [sp, #-16]!
    6634:	adrp	x16, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6638:	ldr	x17, [x16, #4088]
    663c:	add	x16, x16, #0xff8
    6640:	br	x17
    6644:	nop
    6648:	nop
    664c:	nop

0000000000006650 <_Unwind_Backtrace@plt>:
    6650:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6654:	ldr	x17, [x16]
    6658:	add	x16, x16, #0x0
    665c:	br	x17

0000000000006660 <__fxstat@plt>:
    6660:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6664:	ldr	x17, [x16, #8]
    6668:	add	x16, x16, #0x8
    666c:	br	x17

0000000000006670 <__sanitizer_report_error_summary@plt>:
    6670:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6674:	ldr	x17, [x16, #16]
    6678:	add	x16, x16, #0x10
    667c:	br	x17

0000000000006680 <OnPrint@plt>:
    6680:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6684:	ldr	x17, [x16, #24]
    6688:	add	x16, x16, #0x18
    668c:	br	x17

0000000000006690 <__lsan_default_options@plt>:
    6690:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6694:	ldr	x17, [x16, #32]
    6698:	add	x16, x16, #0x20
    669c:	br	x17

00000000000066a0 <__asan_cplus_demangle_init_info@plt>:
    66a0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    66a4:	ldr	x17, [x16, #40]
    66a8:	add	x16, x16, #0x28
    66ac:	br	x17

00000000000066b0 <__asan_backtrace_qsort@plt>:
    66b0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    66b4:	ldr	x17, [x16, #48]
    66b8:	add	x16, x16, #0x30
    66bc:	br	x17

00000000000066c0 <readlink@plt>:
    66c0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    66c4:	ldr	x17, [x16, #56]
    66c8:	add	x16, x16, #0x38
    66cc:	br	x17

00000000000066d0 <shm_open@plt>:
    66d0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    66d4:	ldr	x17, [x16, #64]
    66d8:	add	x16, x16, #0x40
    66dc:	br	x17

00000000000066e0 <sched_getaffinity@plt>:
    66e0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    66e4:	ldr	x17, [x16, #72]
    66e8:	add	x16, x16, #0x48
    66ec:	br	x17

00000000000066f0 <free@plt>:
    66f0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    66f4:	ldr	x17, [x16, #80]
    66f8:	add	x16, x16, #0x50
    66fc:	br	x17

0000000000006700 <__asan_backtrace_pcinfo@plt>:
    6700:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6704:	ldr	x17, [x16, #88]
    6708:	add	x16, x16, #0x58
    670c:	br	x17

0000000000006710 <execv@plt>:
    6710:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6714:	ldr	x17, [x16, #96]
    6718:	add	x16, x16, #0x60
    671c:	br	x17

0000000000006720 <pipe@plt>:
    6720:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6724:	ldr	x17, [x16, #104]
    6728:	add	x16, x16, #0x68
    672c:	br	x17

0000000000006730 <pthread_attr_getdetachstate@plt>:
    6730:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6734:	ldr	x17, [x16, #112]
    6738:	add	x16, x16, #0x70
    673c:	br	x17

0000000000006740 <__sanitizer_get_module_and_offset_for_pc@plt>:
    6740:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6744:	ldr	x17, [x16, #120]
    6748:	add	x16, x16, #0x78
    674c:	br	x17

0000000000006750 <__asan_cplus_demangle_type@plt>:
    6750:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6754:	ldr	x17, [x16, #128]
    6758:	add	x16, x16, #0x80
    675c:	br	x17

0000000000006760 <__asan_backtrace_release_view@plt>:
    6760:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6764:	ldr	x17, [x16, #136]
    6768:	add	x16, x16, #0x88
    676c:	br	x17

0000000000006770 <__asan_backtrace_dwarf_add@plt>:
    6770:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6774:	ldr	x17, [x16, #144]
    6778:	add	x16, x16, #0x90
    677c:	br	x17

0000000000006780 <__sanitizer_malloc_hook@plt>:
    6780:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6784:	ldr	x17, [x16, #152]
    6788:	add	x16, x16, #0x98
    678c:	br	x17

0000000000006790 <dlvsym@plt>:
    6790:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6794:	ldr	x17, [x16, #160]
    6798:	add	x16, x16, #0xa0
    679c:	br	x17

00000000000067a0 <pthread_getattr_np@plt>:
    67a0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    67a4:	ldr	x17, [x16, #168]
    67a8:	add	x16, x16, #0xa8
    67ac:	br	x17

00000000000067b0 <__sanitizer_symbolize_demangle@plt>:
    67b0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    67b4:	ldr	x17, [x16, #176]
    67b8:	add	x16, x16, #0xb0
    67bc:	br	x17

00000000000067c0 <__asan_cplus_demangle_fill_name@plt>:
    67c0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    67c4:	ldr	x17, [x16, #184]
    67c8:	add	x16, x16, #0xb8
    67cc:	br	x17

00000000000067d0 <__asan_internal_memcpy@plt>:
    67d0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    67d4:	ldr	x17, [x16, #192]
    67d8:	add	x16, x16, #0xc0
    67dc:	br	x17

00000000000067e0 <__asan_internal_strlen@plt>:
    67e0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    67e4:	ldr	x17, [x16, #200]
    67e8:	add	x16, x16, #0xc8
    67ec:	br	x17

00000000000067f0 <open@plt>:
    67f0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    67f4:	ldr	x17, [x16, #208]
    67f8:	add	x16, x16, #0xd0
    67fc:	br	x17

0000000000006800 <pthread_attr_init@plt>:
    6800:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6804:	ldr	x17, [x16, #216]
    6808:	add	x16, x16, #0xd8
    680c:	br	x17

0000000000006810 <real_pthread_attr_getstack@plt>:
    6810:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6814:	ldr	x17, [x16, #224]
    6818:	add	x16, x16, #0xe0
    681c:	br	x17

0000000000006820 <sleep@plt>:
    6820:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6824:	ldr	x17, [x16, #232]
    6828:	add	x16, x16, #0xe8
    682c:	br	x17

0000000000006830 <dlsym@plt>:
    6830:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6834:	ldr	x17, [x16, #240]
    6838:	add	x16, x16, #0xf0
    683c:	br	x17

0000000000006840 <__asan_backtrace_vector_grow@plt>:
    6840:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6844:	ldr	x17, [x16, #248]
    6848:	add	x16, x16, #0xf8
    684c:	br	x17

0000000000006850 <__asan_backtrace_syminfo@plt>:
    6850:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6854:	ldr	x17, [x16, #256]
    6858:	add	x16, x16, #0x100
    685c:	br	x17

0000000000006860 <__asan_internal_memset@plt>:
    6860:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6864:	ldr	x17, [x16, #264]
    6868:	add	x16, x16, #0x108
    686c:	br	x17

0000000000006870 <memset@plt>:
    6870:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6874:	ldr	x17, [x16, #272]
    6878:	add	x16, x16, #0x110
    687c:	br	x17

0000000000006880 <__sanitizer_symbolize_data@plt>:
    6880:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6884:	ldr	x17, [x16, #280]
    6888:	add	x16, x16, #0x118
    688c:	br	x17

0000000000006890 <isatty@plt>:
    6890:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6894:	ldr	x17, [x16, #288]
    6898:	add	x16, x16, #0x120
    689c:	br	x17

00000000000068a0 <dlerror@plt>:
    68a0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    68a4:	ldr	x17, [x16, #296]
    68a8:	add	x16, x16, #0x128
    68ac:	br	x17

00000000000068b0 <__cxa_finalize@plt>:
    68b0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    68b4:	ldr	x17, [x16, #304]
    68b8:	add	x16, x16, #0x130
    68bc:	br	x17

00000000000068c0 <__asan_backtrace_alloc@plt>:
    68c0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    68c4:	ldr	x17, [x16, #312]
    68c8:	add	x16, x16, #0x138
    68cc:	br	x17

00000000000068d0 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>:
    68d0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    68d4:	ldr	x17, [x16, #320]
    68d8:	add	x16, x16, #0x140
    68dc:	br	x17

00000000000068e0 <getrusage@plt>:
    68e0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    68e4:	ldr	x17, [x16, #328]
    68e8:	add	x16, x16, #0x148
    68ec:	br	x17

00000000000068f0 <pthread_attr_destroy@plt>:
    68f0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    68f4:	ldr	x17, [x16, #336]
    68f8:	add	x16, x16, #0x150
    68fc:	br	x17

0000000000006900 <sprintf@plt>:
    6900:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6904:	ldr	x17, [x16, #344]
    6908:	add	x16, x16, #0x158
    690c:	br	x17

0000000000006910 <__asan_backtrace_vector_release@plt>:
    6910:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6914:	ldr	x17, [x16, #352]
    6918:	add	x16, x16, #0x160
    691c:	br	x17

0000000000006920 <real_clock_gettime@plt>:
    6920:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6924:	ldr	x17, [x16, #360]
    6928:	add	x16, x16, #0x168
    692c:	br	x17

0000000000006930 <__cxa_demangle@plt>:
    6930:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6934:	ldr	x17, [x16, #368]
    6938:	add	x16, x16, #0x170
    693c:	br	x17

0000000000006940 <__sanitizer_symbolize_code@plt>:
    6940:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6944:	ldr	x17, [x16, #376]
    6948:	add	x16, x16, #0x178
    694c:	br	x17

0000000000006950 <dl_iterate_phdr@plt>:
    6950:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6954:	ldr	x17, [x16, #384]
    6958:	add	x16, x16, #0x180
    695c:	br	x17

0000000000006960 <__sanitizer_dump_coverage@plt>:
    6960:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6964:	ldr	x17, [x16, #392]
    6968:	add	x16, x16, #0x188
    696c:	br	x17

0000000000006970 <clock_gettime@plt>:
    6970:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6974:	ldr	x17, [x16, #400]
    6978:	add	x16, x16, #0x190
    697c:	br	x17

0000000000006980 <__lsan_default_suppressions@plt>:
    6980:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6984:	ldr	x17, [x16, #408]
    6988:	add	x16, x16, #0x198
    698c:	br	x17

0000000000006990 <getpid@plt>:
    6990:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6994:	ldr	x17, [x16, #416]
    6998:	add	x16, x16, #0x1a0
    699c:	br	x17

00000000000069a0 <__lsan_is_turned_off@plt>:
    69a0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    69a4:	ldr	x17, [x16, #424]
    69a8:	add	x16, x16, #0x1a8
    69ac:	br	x17

00000000000069b0 <__sanitizer_symbolize_flush@plt>:
    69b0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    69b4:	ldr	x17, [x16, #432]
    69b8:	add	x16, x16, #0x1b0
    69bc:	br	x17

00000000000069c0 <__asan_backtrace_create_state@plt>:
    69c0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    69c4:	ldr	x17, [x16, #440]
    69c8:	add	x16, x16, #0x1b8
    69cc:	br	x17

00000000000069d0 <mmap@plt>:
    69d0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    69d4:	ldr	x17, [x16, #448]
    69d8:	add	x16, x16, #0x1c0
    69dc:	br	x17

00000000000069e0 <pthread_setspecific@plt>:
    69e0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    69e4:	ldr	x17, [x16, #456]
    69e8:	add	x16, x16, #0x1c8
    69ec:	br	x17

00000000000069f0 <munmap@plt>:
    69f0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    69f4:	ldr	x17, [x16, #464]
    69f8:	add	x16, x16, #0x1d0
    69fc:	br	x17

0000000000006a00 <__asan_cplus_demangle_print_callback@plt>:
    6a00:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6a04:	ldr	x17, [x16, #472]
    6a08:	add	x16, x16, #0x1d8
    6a0c:	br	x17

0000000000006a10 <__cxa_atexit@plt>:
    6a10:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6a14:	ldr	x17, [x16, #480]
    6a18:	add	x16, x16, #0x1e0
    6a1c:	br	x17

0000000000006a20 <snprintf@plt>:
    6a20:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6a24:	ldr	x17, [x16, #488]
    6a28:	add	x16, x16, #0x1e8
    6a2c:	br	x17

0000000000006a30 <malloc@plt>:
    6a30:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6a34:	ldr	x17, [x16, #496]
    6a38:	add	x16, x16, #0x1f0
    6a3c:	br	x17

0000000000006a40 <pthread_attr_getstack@plt>:
    6a40:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6a44:	ldr	x17, [x16, #504]
    6a48:	add	x16, x16, #0x1f8
    6a4c:	br	x17

0000000000006a50 <pthread_attr_setstacksize@plt>:
    6a50:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6a54:	ldr	x17, [x16, #512]
    6a58:	add	x16, x16, #0x200
    6a5c:	br	x17

0000000000006a60 <_Unwind_GetIP@plt>:
    6a60:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6a64:	ldr	x17, [x16, #520]
    6a68:	add	x16, x16, #0x208
    6a6c:	br	x17

0000000000006a70 <madvise@plt>:
    6a70:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6a74:	ldr	x17, [x16, #528]
    6a78:	add	x16, x16, #0x210
    6a7c:	br	x17

0000000000006a80 <usleep@plt>:
    6a80:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6a84:	ldr	x17, [x16, #536]
    6a88:	add	x16, x16, #0x218
    6a8c:	br	x17

0000000000006a90 <shm_unlink@plt>:
    6a90:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6a94:	ldr	x17, [x16, #544]
    6a98:	add	x16, x16, #0x220
    6a9c:	br	x17

0000000000006aa0 <__sched_cpucount@plt>:
    6aa0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6aa4:	ldr	x17, [x16, #552]
    6aa8:	add	x16, x16, #0x228
    6aac:	br	x17

0000000000006ab0 <strrchr@plt>:
    6ab0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6ab4:	ldr	x17, [x16, #560]
    6ab8:	add	x16, x16, #0x230
    6abc:	br	x17

0000000000006ac0 <__errno_location@plt>:
    6ac0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6ac4:	ldr	x17, [x16, #568]
    6ac8:	add	x16, x16, #0x238
    6acc:	br	x17

0000000000006ad0 <sched_yield@plt>:
    6ad0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6ad4:	ldr	x17, [x16, #576]
    6ad8:	add	x16, x16, #0x240
    6adc:	br	x17

0000000000006ae0 <__asan_backtrace_get_view@plt>:
    6ae0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6ae4:	ldr	x17, [x16, #584]
    6ae8:	add	x16, x16, #0x248
    6aec:	br	x17

0000000000006af0 <syslog@plt>:
    6af0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6af4:	ldr	x17, [x16, #592]
    6af8:	add	x16, x16, #0x250
    6afc:	br	x17

0000000000006b00 <sigaction@plt>:
    6b00:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6b04:	ldr	x17, [x16, #600]
    6b08:	add	x16, x16, #0x258
    6b0c:	br	x17

0000000000006b10 <__sanitizer_dump_trace_pc_guard_coverage@plt>:
    6b10:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6b14:	ldr	x17, [x16, #608]
    6b18:	add	x16, x16, #0x260
    6b1c:	br	x17

0000000000006b20 <__asan_cplus_demangle_fill_extended_operator@plt>:
    6b20:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6b24:	ldr	x17, [x16, #616]
    6b28:	add	x16, x16, #0x268
    6b2c:	br	x17

0000000000006b30 <__asan_internal_strcmp@plt>:
    6b30:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6b34:	ldr	x17, [x16, #624]
    6b38:	add	x16, x16, #0x270
    6b3c:	br	x17

0000000000006b40 <__lsan_init@plt>:
    6b40:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6b44:	ldr	x17, [x16, #632]
    6b48:	add	x16, x16, #0x278
    6b4c:	br	x17

0000000000006b50 <__asan_internal_strnlen@plt>:
    6b50:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6b54:	ldr	x17, [x16, #640]
    6b58:	add	x16, x16, #0x280
    6b5c:	br	x17

0000000000006b60 <close@plt>:
    6b60:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6b64:	ldr	x17, [x16, #648]
    6b68:	add	x16, x16, #0x288
    6b6c:	br	x17

0000000000006b70 <__asan_internal_strncmp@plt>:
    6b70:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6b74:	ldr	x17, [x16, #656]
    6b78:	add	x16, x16, #0x290
    6b7c:	br	x17

0000000000006b80 <pthread_key_create@plt>:
    6b80:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6b84:	ldr	x17, [x16, #664]
    6b88:	add	x16, x16, #0x298
    6b8c:	br	x17

0000000000006b90 <__asan_cplus_demangle_fill_ctor@plt>:
    6b90:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6b94:	ldr	x17, [x16, #672]
    6b98:	add	x16, x16, #0x2a0
    6b9c:	br	x17

0000000000006ba0 <setrlimit@plt>:
    6ba0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6ba4:	ldr	x17, [x16, #680]
    6ba8:	add	x16, x16, #0x2a8
    6bac:	br	x17

0000000000006bb0 <getauxval@plt>:
    6bb0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6bb4:	ldr	x17, [x16, #688]
    6bb8:	add	x16, x16, #0x2b0
    6bbc:	br	x17

0000000000006bc0 <__asan_backtrace_free@plt>:
    6bc0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6bc4:	ldr	x17, [x16, #696]
    6bc8:	add	x16, x16, #0x2b8
    6bcc:	br	x17

0000000000006bd0 <__lxstat@plt>:
    6bd0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6bd4:	ldr	x17, [x16, #704]
    6bd8:	add	x16, x16, #0x2c0
    6bdc:	br	x17

0000000000006be0 <__sanitizer_free_hook@plt>:
    6be0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6be4:	ldr	x17, [x16, #712]
    6be8:	add	x16, x16, #0x2c8
    6bec:	br	x17

0000000000006bf0 <abort@plt>:
    6bf0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6bf4:	ldr	x17, [x16, #720]
    6bf8:	add	x16, x16, #0x2d0
    6bfc:	br	x17

0000000000006c00 <__asan_backtrace_initialize@plt>:
    6c00:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6c04:	ldr	x17, [x16, #728]
    6c08:	add	x16, x16, #0x2d8
    6c0c:	br	x17

0000000000006c10 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>:
    6c10:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6c14:	ldr	x17, [x16, #736]
    6c18:	add	x16, x16, #0x2e0
    6c1c:	br	x17

0000000000006c20 <__asan_internal_memcmp@plt>:
    6c20:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6c24:	ldr	x17, [x16, #744]
    6c28:	add	x16, x16, #0x2e8
    6c2c:	br	x17

0000000000006c30 <sysconf@plt>:
    6c30:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6c34:	ldr	x17, [x16, #752]
    6c38:	add	x16, x16, #0x2f0
    6c3c:	br	x17

0000000000006c40 <realloc@plt>:
    6c40:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6c44:	ldr	x17, [x16, #760]
    6c48:	add	x16, x16, #0x2f8
    6c4c:	br	x17

0000000000006c50 <pthread_self@plt>:
    6c50:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6c54:	ldr	x17, [x16, #768]
    6c58:	add	x16, x16, #0x300
    6c5c:	br	x17

0000000000006c60 <getuid@plt>:
    6c60:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6c64:	ldr	x17, [x16, #776]
    6c68:	add	x16, x16, #0x308
    6c6c:	br	x17

0000000000006c70 <getpagesize@plt>:
    6c70:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6c74:	ldr	x17, [x16, #784]
    6c78:	add	x16, x16, #0x310
    6c7c:	br	x17

0000000000006c80 <__asan_backtrace_vector_finish@plt>:
    6c80:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6c84:	ldr	x17, [x16, #792]
    6c88:	add	x16, x16, #0x318
    6c8c:	br	x17

0000000000006c90 <__asan_backtrace_close@plt>:
    6c90:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6c94:	ldr	x17, [x16, #800]
    6c98:	add	x16, x16, #0x320
    6c9c:	br	x17

0000000000006ca0 <__asan_cplus_demangle_mangled_name@plt>:
    6ca0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6ca4:	ldr	x17, [x16, #808]
    6ca8:	add	x16, x16, #0x328
    6cac:	br	x17

0000000000006cb0 <getrlimit@plt>:
    6cb0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6cb4:	ldr	x17, [x16, #816]
    6cb8:	add	x16, x16, #0x330
    6cbc:	br	x17

0000000000006cc0 <sigaltstack@plt>:
    6cc0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6cc4:	ldr	x17, [x16, #824]
    6cc8:	add	x16, x16, #0x338
    6ccc:	br	x17

0000000000006cd0 <fcntl@plt>:
    6cd0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6cd4:	ldr	x17, [x16, #832]
    6cd8:	add	x16, x16, #0x340
    6cdc:	br	x17

0000000000006ce0 <__gmon_start__@plt>:
    6ce0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6ce4:	ldr	x17, [x16, #840]
    6ce8:	add	x16, x16, #0x348
    6cec:	br	x17

0000000000006cf0 <__sanitizer_set_report_path@plt>:
    6cf0:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6cf4:	ldr	x17, [x16, #848]
    6cf8:	add	x16, x16, #0x350
    6cfc:	br	x17

0000000000006d00 <__asan_cplus_demangle_v3_callback@plt>:
    6d00:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6d04:	ldr	x17, [x16, #856]
    6d08:	add	x16, x16, #0x358
    6d0c:	br	x17

0000000000006d10 <__sanitizer_print_memory_profile@plt>:
    6d10:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6d14:	ldr	x17, [x16, #864]
    6d18:	add	x16, x16, #0x360
    6d1c:	br	x17

0000000000006d20 <__asan_cplus_demangle_fill_dtor@plt>:
    6d20:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6d24:	ldr	x17, [x16, #872]
    6d28:	add	x16, x16, #0x368
    6d2c:	br	x17

0000000000006d30 <__sancov_default_options@plt>:
    6d30:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6d34:	ldr	x17, [x16, #880]
    6d38:	add	x16, x16, #0x370
    6d3c:	br	x17

0000000000006d40 <__asan_backtrace_open@plt>:
    6d40:	adrp	x16, 60000 <_Unwind_Backtrace@GCC_3.3>
    6d44:	ldr	x17, [x16, #888]
    6d48:	add	x16, x16, #0x378
    6d4c:	br	x17

0000000000006d50 <*ABS*@plt>:
    6d50:	stp	x2, x3, [sp, #-16]!
    6d54:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6d58:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6d5c:	ldr	x2, [x2, #4064]

0000000000006d60 <*ABS*+0x10@plt>:
    6d60:	add	x3, x3, #0xfe8
    6d64:	br	x2
    6d68:	nop
    6d6c:	nop

Disassembly of section .text:

0000000000006d70 <__lsan_ignore_object@@Base-0x1db8>:
    6d70:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6d74:	ldr	x0, [x0, #4016]
    6d78:	cbz	x0, 6d80 <*ABS*+0x10@plt+0x20>
    6d7c:	b	6ce0 <__gmon_start__@plt>
    6d80:	ret
    6d84:	nop
    6d88:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6d8c:	add	x0, x0, #0xc60
    6d90:	adrp	x1, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6d94:	add	x1, x1, #0xc60
    6d98:	cmp	x1, x0
    6d9c:	b.eq	6db4 <*ABS*+0x10@plt+0x54>  // b.none
    6da0:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6da4:	ldr	x1, [x1, #3920]
    6da8:	cbz	x1, 6db4 <*ABS*+0x10@plt+0x54>
    6dac:	mov	x16, x1
    6db0:	br	x16
    6db4:	ret
    6db8:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6dbc:	add	x0, x0, #0xc60
    6dc0:	adrp	x1, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6dc4:	add	x1, x1, #0xc60
    6dc8:	sub	x1, x1, x0
    6dcc:	lsr	x2, x1, #63
    6dd0:	add	x1, x2, x1, asr #3
    6dd4:	cmp	xzr, x1, asr #1
    6dd8:	asr	x1, x1, #1
    6ddc:	b.eq	6df4 <*ABS*+0x10@plt+0x94>  // b.none
    6de0:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6de4:	ldr	x2, [x2, #4024]
    6de8:	cbz	x2, 6df4 <*ABS*+0x10@plt+0x94>
    6dec:	mov	x16, x2
    6df0:	br	x16
    6df4:	ret
    6df8:	stp	x29, x30, [sp, #-32]!
    6dfc:	mov	x29, sp
    6e00:	str	x19, [sp, #16]
    6e04:	adrp	x19, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6e08:	ldrb	w0, [x19, #3200]
    6e0c:	cbnz	w0, 6e34 <*ABS*+0x10@plt+0xd4>
    6e10:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6e14:	ldr	x0, [x0, #3584]
    6e18:	cbz	x0, 6e28 <*ABS*+0x10@plt+0xc8>
    6e1c:	adrp	x0, 60000 <_Unwind_Backtrace@GCC_3.3>
    6e20:	ldr	x0, [x0, #928]
    6e24:	bl	68b0 <__cxa_finalize@plt>
    6e28:	bl	6d88 <*ABS*+0x10@plt+0x28>
    6e2c:	mov	w0, #0x1                   	// #1
    6e30:	strb	w0, [x19, #3200]
    6e34:	ldr	x19, [sp, #16]
    6e38:	ldp	x29, x30, [sp], #32
    6e3c:	ret
    6e40:	b	6db8 <*ABS*+0x10@plt+0x58>
    6e44:	nop
    6e48:	ldrb	w3, [x1, #28]
    6e4c:	mov	x2, x0
    6e50:	ldrb	w0, [x0, #28]
    6e54:	cmp	w3, w0
    6e58:	b.eq	6e60 <*ABS*+0x10@plt+0x100>  // b.none
    6e5c:	ret
    6e60:	ldr	x0, [x1, #16]
    6e64:	ldr	x2, [x2, #16]
    6e68:	cmp	x2, x0
    6e6c:	cset	w0, hi  // hi = pmore
    6e70:	ret
    6e74:	nop
    6e78:	adrp	x4, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6e7c:	stp	x19, x20, [sp, #-48]!
    6e80:	mov	x20, x0
    6e84:	ldr	x0, [x4, #3456]
    6e88:	mov	x19, x3
    6e8c:	stp	x21, x22, [sp, #16]
    6e90:	mov	x22, x2
    6e94:	mov	x21, x1
    6e98:	mov	x1, #0x10                  	// #16
    6e9c:	str	x30, [sp, #32]
    6ea0:	bl	10e80 <__sancov_default_options@@Base+0x288>
    6ea4:	mov	x2, x0
    6ea8:	mov	x3, x22
    6eac:	mov	x1, x21
    6eb0:	adrp	x4, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
    6eb4:	add	x4, x4, #0xb80
    6eb8:	ldp	x21, x22, [sp, #16]
    6ebc:	mov	x0, x20
    6ec0:	ldr	x30, [sp, #32]
    6ec4:	stp	x4, x19, [x2]
    6ec8:	ldp	x19, x20, [sp], #48
    6ecc:	b	187f8 <__sanitizer_set_report_fd@@Base+0x1548>
    6ed0:	stp	x19, x30, [sp, #-32]!
    6ed4:	bl	b270 <__sanitizer_print_stack_trace@@Base+0x7d8>
    6ed8:	mov	x1, x0
    6edc:	add	x19, sp, #0x18
    6ee0:	mov	x0, x19
    6ee4:	bl	b278 <__sanitizer_print_stack_trace@@Base+0x7e0>
    6ee8:	mov	x0, x19
    6eec:	bl	b400 <__sanitizer_print_stack_trace@@Base+0x968>
    6ef0:	tst	w0, #0xff
    6ef4:	b.ne	6f00 <*ABS*+0x10@plt+0x1a0>  // b.any
    6ef8:	ldp	x19, x30, [sp], #32
    6efc:	ret
    6f00:	mov	x0, x19
    6f04:	bl	b418 <__sanitizer_print_stack_trace@@Base+0x980>
    6f08:	cmp	w0, #0x3
    6f0c:	b.eq	6ef8 <*ABS*+0x10@plt+0x198>  // b.none
    6f10:	mov	x0, x19
    6f14:	mov	w1, #0x0                   	// #0
    6f18:	bl	b428 <__sanitizer_print_stack_trace@@Base+0x990>
    6f1c:	ldp	x19, x30, [sp], #32
    6f20:	ret
    6f24:	nop
    6f28:	ldr	w2, [x0, #112]
    6f2c:	cmp	w2, #0x2
    6f30:	b.eq	6f38 <*ABS*+0x10@plt+0x1d8>  // b.none
    6f34:	ret
    6f38:	ldr	x4, [x1, #16]
    6f3c:	mov	x5, #0x0                   	// #0
    6f40:	mov	x2, x4
    6f44:	b	6f5c <*ABS*+0x10@plt+0x1fc>
    6f48:	ldr	x7, [x6, x3, lsl #3]
    6f4c:	ldr	x6, [x0, #32]
    6f50:	cmp	w7, w6
    6f54:	b.lt	6fc0 <*ABS*+0x10@plt+0x260>  // b.tstop
    6f58:	mov	x2, x3
    6f5c:	cmp	x2, x5
    6f60:	b.ls	6f94 <*ABS*+0x10@plt+0x234>  // b.plast
    6f64:	add	x3, x2, x5
    6f68:	ldr	x6, [x1]
    6f6c:	cmp	x4, x3, lsr #1
    6f70:	lsr	x3, x3, #1
    6f74:	b.hi	6f48 <*ABS*+0x10@plt+0x1e8>  // b.pmore
    6f78:	str	x30, [sp, #-16]!
    6f7c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    6f80:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    6f84:	add	x2, x2, #0xe0
    6f88:	add	x0, x0, #0xf8
    6f8c:	mov	w1, #0x1ba                 	// #442
    6f90:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    6f94:	cmp	x4, x5
    6f98:	ldr	x0, [x0, #32]
    6f9c:	b.ls	6fb0 <*ABS*+0x10@plt+0x250>  // b.plast
    6fa0:	ldr	x1, [x1]
    6fa4:	ldr	x1, [x1, x5, lsl #3]
    6fa8:	cmp	x1, x0
    6fac:	b.eq	6f34 <*ABS*+0x10@plt+0x1d4>  // b.none
    6fb0:	mov	x1, x0
    6fb4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    6fb8:	add	x0, x0, #0x138
    6fbc:	b	1e648 <OnPrint@@Base+0x398>
    6fc0:	add	x5, x3, #0x1
    6fc4:	b	6f5c <*ABS*+0x10@plt+0x1fc>
    6fc8:	stp	x19, x20, [sp, #-64]!
    6fcc:	str	x30, [sp, #24]
    6fd0:	str	x0, [sp, #40]
    6fd4:	cbz	x1, 70c8 <*ABS*+0x10@plt+0x368>
    6fd8:	mov	x19, x1
    6fdc:	bl	b270 <__sanitizer_print_stack_trace@@Base+0x7d8>
    6fe0:	mov	x1, x0
    6fe4:	add	x20, sp, #0x38
    6fe8:	mov	x0, x20
    6fec:	str	x1, [sp, #40]
    6ff0:	bl	b278 <__sanitizer_print_stack_trace@@Base+0x7e0>
    6ff4:	mov	x0, x20
    6ff8:	bl	b400 <__sanitizer_print_stack_trace@@Base+0x968>
    6ffc:	tst	w0, #0xff
    7000:	b.ne	7010 <*ABS*+0x10@plt+0x2b0>  // b.any
    7004:	ldr	x30, [sp, #24]
    7008:	ldp	x19, x20, [sp], #64
    700c:	ret
    7010:	mov	x0, x20
    7014:	bl	b418 <__sanitizer_print_stack_trace@@Base+0x980>
    7018:	cmp	w0, #0x2
    701c:	b.eq	7004 <*ABS*+0x10@plt+0x2a4>  // b.none
    7020:	mov	x0, x20
    7024:	bl	b418 <__sanitizer_print_stack_trace@@Base+0x980>
    7028:	cmp	w0, #0x3
    702c:	b.eq	7004 <*ABS*+0x10@plt+0x2a4>  // b.none
    7030:	mov	x0, x20
    7034:	str	x21, [sp, #16]
    7038:	bl	b450 <__sanitizer_print_stack_trace@@Base+0x9b8>
    703c:	mov	w1, w0
    7040:	cbz	w0, 7080 <*ABS*+0x10@plt+0x320>
    7044:	ldr	x0, [x19, #8]
    7048:	bl	1f5a0 <OnPrint@@Base+0x12f0>
    704c:	cmp	w1, #0x1
    7050:	b.ls	7080 <*ABS*+0x10@plt+0x320>  // b.plast
    7054:	ldr	x21, [x0, #8]
    7058:	cbz	x21, 7080 <*ABS*+0x10@plt+0x320>
    705c:	ldrb	w0, [x19, #16]
    7060:	cbnz	w0, 706c <*ABS*+0x10@plt+0x30c>
    7064:	ldr	x21, [sp, #16]
    7068:	b	7004 <*ABS*+0x10@plt+0x2a4>
    706c:	bl	a718 <__lsan_do_recoverable_leak_check@@Base+0x808>
    7070:	mov	x1, x21
    7074:	bl	139a8 <__sancov_default_options@@Base+0x2db0>
    7078:	tst	w0, #0xff
    707c:	b.eq	7064 <*ABS*+0x10@plt+0x304>  // b.none
    7080:	mov	x0, x20
    7084:	mov	w1, #0x2                   	// #2
    7088:	bl	b428 <__sanitizer_print_stack_trace@@Base+0x990>
    708c:	ldr	x19, [x19]
    7090:	ldp	x4, x3, [x19, #8]
    7094:	lsr	x4, x4, #3
    7098:	cmp	x3, x4
    709c:	b.hi	70ec <*ABS*+0x10@plt+0x38c>  // b.pmore
    70a0:	add	x20, x3, #0x1
    70a4:	b.eq	7104 <*ABS*+0x10@plt+0x3a4>  // b.none
    70a8:	ldr	x21, [x19]
    70ac:	str	x20, [x19, #16]
    70b0:	add	x0, x21, x3, lsl #3
    70b4:	add	x1, sp, #0x28
    70b8:	mov	x2, #0x8                   	// #8
    70bc:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    70c0:	ldr	x21, [sp, #16]
    70c4:	b	7004 <*ABS*+0x10@plt+0x2a4>
    70c8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    70cc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    70d0:	add	x2, x2, #0x178
    70d4:	add	x0, x0, #0x188
    70d8:	mov	x4, #0x0                   	// #0
    70dc:	mov	x3, #0x0                   	// #0
    70e0:	mov	w1, #0x18b                 	// #395
    70e4:	str	x21, [sp, #16]
    70e8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    70ec:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    70f0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    70f4:	add	x2, x2, #0x1b8
    70f8:	add	x0, x0, #0xf8
    70fc:	mov	w1, #0x1be                 	// #446
    7100:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7104:	tst	x20, x3
    7108:	b.eq	7144 <*ABS*+0x10@plt+0x3e4>  // b.none
    710c:	clz	x2, x20
    7110:	mov	w1, #0x3f                  	// #63
    7114:	sub	w2, w1, w2
    7118:	mov	x1, #0x1                   	// #1
    711c:	add	w4, w2, #0x1
    7120:	lsl	x4, x1, x4
    7124:	cmp	x20, x4
    7128:	b.cs	71e4 <*ABS*+0x10@plt+0x484>  // b.hs, b.nlast
    712c:	lsl	x1, x1, x2
    7130:	cmp	x20, x1
    7134:	b.ls	7200 <*ABS*+0x10@plt+0x4a0>  // b.plast
    7138:	cmp	x3, x4
    713c:	b.hi	71bc <*ABS*+0x10@plt+0x45c>  // b.pmore
    7140:	mov	x20, x4
    7144:	adrp	x21, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7148:	lsl	x20, x20, #3
    714c:	ldr	x21, [x21, #4000]
    7150:	ldr	x0, [x21]
    7154:	cbz	x0, 71b0 <*ABS*+0x10@plt+0x450>
    7158:	sub	x1, x0, #0x1
    715c:	tst	x1, x0
    7160:	b.ne	71d4 <*ABS*+0x10@plt+0x474>  // b.any
    7164:	add	x20, x20, x1
    7168:	neg	x0, x0
    716c:	and	x20, x20, x0
    7170:	mov	w2, #0x0                   	// #0
    7174:	mov	x0, x20
    7178:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    717c:	add	x1, x1, #0x258
    7180:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    7184:	ldr	x1, [x19]
    7188:	mov	x21, x0
    718c:	ldr	x2, [x19, #16]
    7190:	lsl	x2, x2, #3
    7194:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    7198:	ldp	x0, x1, [x19]
    719c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    71a0:	stp	x21, x20, [x19]
    71a4:	ldr	x3, [x19, #16]
    71a8:	add	x20, x3, #0x1
    71ac:	b	70ac <*ABS*+0x10@plt+0x34c>
    71b0:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    71b4:	str	x0, [x21]
    71b8:	b	7158 <*ABS*+0x10@plt+0x3f8>
    71bc:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    71c0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    71c4:	add	x2, x2, #0x220
    71c8:	add	x0, x0, #0xf8
    71cc:	mov	w1, #0x1fd                 	// #509
    71d0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    71d4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    71d8:	add	x0, x0, #0x240
    71dc:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
    71e0:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    71e4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    71e8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    71ec:	mov	x3, x20
    71f0:	add	x2, x2, #0x1d8
    71f4:	add	x0, x0, #0xf8
    71f8:	mov	w1, #0x17b                 	// #379
    71fc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7200:	mov	x4, x1
    7204:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7208:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    720c:	mov	x3, x20
    7210:	add	x2, x2, #0x200
    7214:	add	x0, x0, #0xf8
    7218:	mov	w1, #0x17c                 	// #380
    721c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7220:	stp	x19, x20, [sp, #-64]!
    7224:	str	x30, [sp, #24]
    7228:	str	x0, [sp, #40]
    722c:	cbz	x1, 72c0 <*ABS*+0x10@plt+0x560>
    7230:	mov	x19, x1
    7234:	bl	b270 <__sanitizer_print_stack_trace@@Base+0x7d8>
    7238:	mov	x1, x0
    723c:	add	x20, sp, #0x38
    7240:	mov	x0, x20
    7244:	str	x1, [sp, #40]
    7248:	bl	b278 <__sanitizer_print_stack_trace@@Base+0x7e0>
    724c:	mov	x0, x20
    7250:	bl	b400 <__sanitizer_print_stack_trace@@Base+0x968>
    7254:	tst	w0, #0xff
    7258:	b.ne	7268 <*ABS*+0x10@plt+0x508>  // b.any
    725c:	ldr	x30, [sp, #24]
    7260:	ldp	x19, x20, [sp], #64
    7264:	ret
    7268:	mov	x0, x20
    726c:	bl	b418 <__sanitizer_print_stack_trace@@Base+0x980>
    7270:	cmp	w0, #0x3
    7274:	b.ne	725c <*ABS*+0x10@plt+0x4fc>  // b.any
    7278:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    727c:	str	x21, [sp, #16]
    7280:	ldrb	w0, [x0, #3284]
    7284:	cbnz	w0, 72e4 <*ABS*+0x10@plt+0x584>
    7288:	ldp	x4, x3, [x19, #8]
    728c:	lsr	x4, x4, #3
    7290:	cmp	x3, x4
    7294:	b.hi	73cc <*ABS*+0x10@plt+0x66c>  // b.pmore
    7298:	add	x20, x3, #0x1
    729c:	b.eq	7320 <*ABS*+0x10@plt+0x5c0>  // b.none
    72a0:	ldr	x21, [x19]
    72a4:	str	x20, [x19, #16]
    72a8:	add	x0, x21, x3, lsl #3
    72ac:	add	x1, sp, #0x28
    72b0:	mov	x2, #0x8                   	// #8
    72b4:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    72b8:	ldr	x21, [sp, #16]
    72bc:	b	725c <*ABS*+0x10@plt+0x4fc>
    72c0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    72c4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    72c8:	add	x2, x2, #0x178
    72cc:	add	x0, x0, #0x188
    72d0:	mov	x4, #0x0                   	// #0
    72d4:	mov	x3, #0x0                   	// #0
    72d8:	mov	w1, #0x16f                 	// #367
    72dc:	str	x21, [sp, #16]
    72e0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    72e4:	mov	x0, x20
    72e8:	ldr	x21, [sp, #40]
    72ec:	bl	b440 <__sanitizer_print_stack_trace@@Base+0x9a8>
    72f0:	mov	x2, x0
    72f4:	mov	x0, x20
    72f8:	ldr	x20, [sp, #40]
    72fc:	add	x20, x2, x20
    7300:	bl	b440 <__sanitizer_print_stack_trace@@Base+0x9a8>
    7304:	mov	x2, x20
    7308:	mov	x3, x0
    730c:	mov	x1, x21
    7310:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7314:	add	x0, x0, #0x270
    7318:	bl	1e648 <OnPrint@@Base+0x398>
    731c:	b	7288 <*ABS*+0x10@plt+0x528>
    7320:	tst	x3, x20
    7324:	b.eq	7360 <*ABS*+0x10@plt+0x600>  // b.none
    7328:	clz	x2, x20
    732c:	mov	w0, #0x3f                  	// #63
    7330:	sub	w0, w0, w2
    7334:	mov	x2, #0x1                   	// #1
    7338:	add	w4, w0, #0x1
    733c:	lsl	x4, x2, x4
    7340:	cmp	x4, x20
    7344:	b.ls	7418 <*ABS*+0x10@plt+0x6b8>  // b.plast
    7348:	lsl	x0, x2, x0
    734c:	cmp	x20, x0
    7350:	b.ls	7434 <*ABS*+0x10@plt+0x6d4>  // b.plast
    7354:	cmp	x3, x4
    7358:	b.hi	73f0 <*ABS*+0x10@plt+0x690>  // b.pmore
    735c:	mov	x20, x4
    7360:	adrp	x21, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7364:	lsl	x20, x20, #3
    7368:	ldr	x21, [x21, #4000]
    736c:	ldr	x0, [x21]
    7370:	cbz	x0, 73e4 <*ABS*+0x10@plt+0x684>
    7374:	sub	x1, x0, #0x1
    7378:	tst	x1, x0
    737c:	b.ne	7408 <*ABS*+0x10@plt+0x6a8>  // b.any
    7380:	add	x20, x20, x1
    7384:	neg	x0, x0
    7388:	and	x20, x20, x0
    738c:	mov	w2, #0x0                   	// #0
    7390:	mov	x0, x20
    7394:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7398:	add	x1, x1, #0x258
    739c:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    73a0:	ldr	x1, [x19]
    73a4:	mov	x21, x0
    73a8:	ldr	x2, [x19, #16]
    73ac:	lsl	x2, x2, #3
    73b0:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    73b4:	ldp	x0, x1, [x19]
    73b8:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    73bc:	stp	x21, x20, [x19]
    73c0:	ldr	x3, [x19, #16]
    73c4:	add	x20, x3, #0x1
    73c8:	b	72a4 <*ABS*+0x10@plt+0x544>
    73cc:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    73d0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    73d4:	add	x2, x2, #0x1b8
    73d8:	add	x0, x0, #0xf8
    73dc:	mov	w1, #0x1be                 	// #446
    73e0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    73e4:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    73e8:	str	x0, [x21]
    73ec:	b	7374 <*ABS*+0x10@plt+0x614>
    73f0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    73f4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    73f8:	add	x2, x2, #0x220
    73fc:	add	x0, x0, #0xf8
    7400:	mov	w1, #0x1fd                 	// #509
    7404:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7408:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    740c:	add	x0, x0, #0x240
    7410:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
    7414:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    7418:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    741c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7420:	mov	x3, x20
    7424:	add	x2, x2, #0x1d8
    7428:	add	x0, x0, #0xf8
    742c:	mov	w1, #0x17b                 	// #379
    7430:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7434:	mov	x4, x0
    7438:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    743c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7440:	mov	x3, x20
    7444:	add	x2, x2, #0x200
    7448:	add	x0, x0, #0xf8
    744c:	mov	w1, #0x17c                 	// #380
    7450:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7454:	nop
    7458:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    745c:	ldr	x0, [x0, #4040]
    7460:	ldrb	w0, [x0, #57]
    7464:	cbnz	w0, 746c <*ABS*+0x10@plt+0x70c>
    7468:	ret
    746c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7470:	add	x0, x0, #0x298
    7474:	str	x30, [sp, #-16]!
    7478:	bl	1e648 <OnPrint@@Base+0x398>
    747c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    7480:	mov	w2, #0x1010101             	// #16843009
    7484:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
    7488:	movk	x2, #0x101, lsl #32
    748c:	add	x1, x1, #0x5c8
    7490:	strb	wzr, [x0]
    7494:	stur	xzr, [x0, #4]
    7498:	stur	x2, [x0, #12]
    749c:	strh	wzr, [x0, #20]
    74a0:	str	x1, [x0, #24]
    74a4:	ret
    74a8:	stp	x19, x20, [sp, #-48]!
    74ac:	mov	x3, x1
    74b0:	mov	x20, x0
    74b4:	stp	x21, x22, [sp, #16]
    74b8:	adrp	x21, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    74bc:	mov	x19, x1
    74c0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    74c4:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    74c8:	add	x2, x2, #0x2c0
    74cc:	add	x1, x1, #0x300
    74d0:	str	x30, [sp, #32]
    74d4:	bl	6e78 <*ABS*+0x10@plt+0x118>
    74d8:	ldr	x21, [x21, #3456]
    74dc:	mov	x1, #0x10                  	// #16
    74e0:	adrp	x22, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
    74e4:	add	x22, x22, #0xbb0
    74e8:	mov	x0, x21
    74ec:	bl	10e80 <__sancov_default_options@@Base+0x288>
    74f0:	mov	x2, x0
    74f4:	add	x1, x19, #0x4
    74f8:	adrp	x3, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    74fc:	add	x3, x3, #0x310
    7500:	mov	x0, x20
    7504:	stp	x22, x1, [x2]
    7508:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    750c:	add	x1, x1, #0x388
    7510:	bl	187f8 <__sanitizer_set_report_fd@@Base+0x1548>
    7514:	mov	x0, x21
    7518:	mov	x1, #0x10                  	// #16
    751c:	bl	10e80 <__sancov_default_options@@Base+0x288>
    7520:	mov	x2, x0
    7524:	add	x4, x19, #0x8
    7528:	mov	x0, x20
    752c:	adrp	x3, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7530:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7534:	stp	x22, x4, [x2]
    7538:	add	x3, x3, #0x398
    753c:	add	x1, x1, #0x3b8
    7540:	bl	187f8 <__sanitizer_set_report_fd@@Base+0x1548>
    7544:	adrp	x22, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7548:	add	x3, x19, #0xc
    754c:	mov	x0, x20
    7550:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7554:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7558:	add	x2, x2, #0x3c8
    755c:	add	x1, x1, #0x400
    7560:	bl	6e78 <*ABS*+0x10@plt+0x118>
    7564:	add	x22, x22, #0x658
    7568:	add	x3, x19, #0xd
    756c:	mov	x0, x20
    7570:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7574:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7578:	add	x2, x2, #0x410
    757c:	add	x1, x1, #0x430
    7580:	bl	6e78 <*ABS*+0x10@plt+0x118>
    7584:	add	x3, x19, #0xe
    7588:	mov	x0, x20
    758c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7590:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7594:	add	x2, x2, #0x440
    7598:	add	x1, x1, #0x468
    759c:	bl	6e78 <*ABS*+0x10@plt+0x118>
    75a0:	add	x3, x19, #0xf
    75a4:	mov	x0, x20
    75a8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    75ac:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    75b0:	add	x2, x2, #0x478
    75b4:	add	x1, x1, #0x4b0
    75b8:	bl	6e78 <*ABS*+0x10@plt+0x118>
    75bc:	add	x3, x19, #0x10
    75c0:	mov	x0, x20
    75c4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    75c8:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    75cc:	add	x2, x2, #0x4b8
    75d0:	add	x1, x1, #0x500
    75d4:	bl	6e78 <*ABS*+0x10@plt+0x118>
    75d8:	add	x3, x19, #0x11
    75dc:	mov	x0, x20
    75e0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    75e4:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    75e8:	add	x2, x2, #0x518
    75ec:	add	x1, x1, #0x5c0
    75f0:	bl	6e78 <*ABS*+0x10@plt+0x118>
    75f4:	add	x3, x19, #0x12
    75f8:	mov	x0, x20
    75fc:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7600:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7604:	add	x2, x2, #0x5d8
    7608:	add	x1, x1, #0x600
    760c:	bl	6e78 <*ABS*+0x10@plt+0x118>
    7610:	add	x3, x19, #0x13
    7614:	mov	x0, x20
    7618:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    761c:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7620:	add	x2, x2, #0x610
    7624:	add	x1, x1, #0x648
    7628:	bl	6e78 <*ABS*+0x10@plt+0x118>
    762c:	add	x3, x19, #0x14
    7630:	mov	x0, x20
    7634:	mov	x2, x22
    7638:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    763c:	add	x1, x1, #0x668
    7640:	bl	6e78 <*ABS*+0x10@plt+0x118>
    7644:	mov	x2, x22
    7648:	add	x3, x19, #0x15
    764c:	mov	x0, x20
    7650:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7654:	add	x1, x1, #0x678
    7658:	bl	6e78 <*ABS*+0x10@plt+0x118>
    765c:	mov	x0, x21
    7660:	mov	x1, #0x10                  	// #16
    7664:	bl	10e80 <__sancov_default_options@@Base+0x288>
    7668:	mov	x2, x0
    766c:	add	x19, x19, #0x18
    7670:	adrp	x1, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
    7674:	add	x1, x1, #0xb98
    7678:	mov	x0, x20
    767c:	ldp	x21, x22, [sp, #16]
    7680:	adrp	x3, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7684:	ldr	x30, [sp, #32]
    7688:	stp	x1, x19, [x2]
    768c:	add	x3, x3, #0x688
    7690:	ldp	x19, x20, [sp], #48
    7694:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7698:	add	x1, x1, #0x6a0
    769c:	b	187f8 <__sanitizer_set_report_fd@@Base+0x1548>
    76a0:	stp	x19, x20, [sp, #-32]!
    76a4:	stp	x21, x30, [sp, #16]
    76a8:	adrp	x21, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    76ac:	add	x20, x21, #0xcc0
    76b0:	ldr	x4, [x20, #32]
    76b4:	cbnz	x4, 771c <*ABS*+0x10@plt+0x9bc>
    76b8:	add	x19, x20, #0x40
    76bc:	mov	w2, #0x1                   	// #1
    76c0:	mov	x0, x19
    76c4:	adrp	x1, 60000 <_Unwind_Backtrace@GCC_3.3>
    76c8:	add	x1, x1, #0x3a8
    76cc:	bl	23540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2960>
    76d0:	ldr	x1, [x20, #24]
    76d4:	mov	x0, x19
    76d8:	str	x19, [x20, #32]
    76dc:	bl	239b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dd0>
    76e0:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    76e4:	ldr	x0, [x0, #3704]
    76e8:	cbz	x0, 7700 <*ABS*+0x10@plt+0x9a0>
    76ec:	ldr	x19, [x20, #32]
    76f0:	bl	6980 <__lsan_default_suppressions@plt>
    76f4:	mov	x1, x0
    76f8:	mov	x0, x19
    76fc:	bl	23630 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a50>
    7700:	add	x21, x21, #0xcc0
    7704:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    7708:	add	x1, x1, #0x68
    770c:	ldr	x0, [x21, #32]
    7710:	ldp	x21, x30, [sp, #16]
    7714:	ldp	x19, x20, [sp], #32
    7718:	b	23630 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a50>
    771c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7720:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7724:	add	x2, x2, #0x6b0
    7728:	add	x0, x0, #0x188
    772c:	mov	x3, #0x0                   	// #0
    7730:	mov	w1, #0x55                  	// #85
    7734:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7738:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    773c:	ldr	x0, [x0, #3408]
    7740:	ret
    7744:	nop
    7748:	stp	x19, x20, [sp, #-48]!
    774c:	adrp	x19, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7750:	add	x0, x19, #0xcc0
    7754:	stp	x21, x22, [sp, #16]
    7758:	ldr	x1, [x0, #144]
    775c:	str	x30, [sp, #32]
    7760:	cbnz	x1, 77f0 <*ABS*+0x10@plt+0xa90>
    7764:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7768:	stp	xzr, xzr, [x0, #192]
    776c:	ldr	x20, [x20, #4000]
    7770:	str	xzr, [x0, #208]
    7774:	ldr	x0, [x20]
    7778:	cbz	x0, 77e4 <*ABS*+0x10@plt+0xa84>
    777c:	sub	x1, x0, #0x1
    7780:	tst	x1, x0
    7784:	b.ne	7810 <*ABS*+0x10@plt+0xab0>  // b.any
    7788:	add	x19, x19, #0xcc0
    778c:	add	x21, x0, #0xf
    7790:	neg	x0, x0
    7794:	mov	w2, #0x0                   	// #0
    7798:	and	x21, x21, x0
    779c:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    77a0:	mov	x0, x21
    77a4:	add	x1, x1, #0x258
    77a8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    77ac:	mov	x22, x0
    77b0:	ldr	x1, [x19, #192]
    77b4:	add	x20, x19, #0xc0
    77b8:	ldr	x2, [x19, #208]
    77bc:	lsl	x2, x2, #4
    77c0:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    77c4:	ldp	x0, x1, [x19, #192]
    77c8:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    77cc:	str	x20, [x19, #144]
    77d0:	stp	x22, x21, [x19, #192]
    77d4:	ldp	x21, x22, [sp, #16]
    77d8:	ldr	x30, [sp, #32]
    77dc:	ldp	x19, x20, [sp], #48
    77e0:	ret
    77e4:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    77e8:	str	x0, [x20]
    77ec:	b	777c <*ABS*+0x10@plt+0xa1c>
    77f0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    77f4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    77f8:	add	x2, x2, #0x6d8
    77fc:	add	x0, x0, #0x188
    7800:	mov	x4, #0x0                   	// #0
    7804:	mov	x3, #0x0                   	// #0
    7808:	mov	w1, #0x68                  	// #104
    780c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7810:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7814:	add	x0, x0, #0x240
    7818:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
    781c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    7820:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7824:	ldr	x0, [x0, #3432]
    7828:	cbz	x0, 7830 <*ABS*+0x10@plt+0xad0>
    782c:	b	6690 <__lsan_default_options@plt>
    7830:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
    7834:	add	x0, x0, #0x5c8
    7838:	ret
    783c:	nop
    7840:	str	x30, [sp, #-16]!
    7844:	bl	7748 <*ABS*+0x10@plt+0x9e8>
    7848:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    784c:	ldr	x0, [x0, #4040]
    7850:	ldrb	w0, [x0, #57]
    7854:	cbnz	w0, 7860 <*ABS*+0x10@plt+0xb00>
    7858:	ldr	x30, [sp], #16
    785c:	ret
    7860:	bl	76a0 <*ABS*+0x10@plt+0x940>
    7864:	ldr	x30, [sp], #16
    7868:	b	a500 <__lsan_do_recoverable_leak_check@@Base+0x5f0>
    786c:	nop
    7870:	stp	x29, x30, [sp, #-128]!
    7874:	mov	x29, sp
    7878:	stp	x19, x20, [sp, #16]
    787c:	stp	x21, x22, [sp, #32]
    7880:	stp	x23, x24, [sp, #48]
    7884:	mov	w24, w4
    7888:	sub	w4, w4, #0x1
    788c:	stp	x25, x26, [sp, #64]
    7890:	cmp	w4, #0x1
    7894:	stp	x27, x28, [sp, #80]
    7898:	b.hi	7ad0 <*ABS*+0x10@plt+0xd70>  // b.pmore
    789c:	mov	x21, x0
    78a0:	adrp	x27, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    78a4:	add	x0, x27, #0xcc0
    78a8:	mov	x20, x1
    78ac:	mov	x25, x2
    78b0:	ldrb	w1, [x0, #18]
    78b4:	ldrb	w0, [x0, #20]
    78b8:	cbz	w1, 79f4 <*ABS*+0x10@plt+0xc94>
    78bc:	cbnz	w0, 7a18 <*ABS*+0x10@plt+0xcb8>
    78c0:	mov	x19, x21
    78c4:	mov	x23, #0x1                   	// #1
    78c8:	add	x0, x19, #0x8
    78cc:	cmp	x20, x0
    78d0:	b.cc	79d8 <*ABS*+0x10@plt+0xc78>  // b.lo, b.ul, b.last
    78d4:	clz	x22, x29
    78d8:	mov	w0, #0x3f                  	// #63
    78dc:	sub	w22, w0, w22
    78e0:	add	x26, x29, #0x78
    78e4:	add	w22, w22, #0x1
    78e8:	b	78fc <*ABS*+0x10@plt+0xb9c>
    78ec:	add	x19, x19, x23
    78f0:	add	x0, x19, #0x8
    78f4:	cmp	x20, x0
    78f8:	b.cc	79d8 <*ABS*+0x10@plt+0xc78>  // b.lo, b.ul, b.last
    78fc:	ldr	x28, [x19]
    7900:	mov	x0, #0x3fff                	// #16383
    7904:	cmp	x28, x0
    7908:	b.ls	78ec <*ABS*+0x10@plt+0xb8c>  // b.plast
    790c:	lsr	x0, x28, x22
    7910:	cbnz	x0, 78ec <*ABS*+0x10@plt+0xb8c>
    7914:	mov	x0, x28
    7918:	bl	bca0 <__sanitizer_get_allocated_size@@Base+0x170>
    791c:	str	x0, [x29, #112]
    7920:	cmp	x0, #0x0
    7924:	ccmp	x0, x21, #0x4, ne  // ne = any
    7928:	b.eq	78ec <*ABS*+0x10@plt+0xb8c>  // b.none
    792c:	mov	x1, x0
    7930:	mov	x0, x26
    7934:	bl	b278 <__sanitizer_print_stack_trace@@Base+0x7e0>
    7938:	mov	x0, x26
    793c:	bl	b418 <__sanitizer_print_stack_trace@@Base+0x980>
    7940:	cmp	w0, #0x2
    7944:	b.eq	78ec <*ABS*+0x10@plt+0xb8c>  // b.none
    7948:	mov	x0, x26
    794c:	bl	b418 <__sanitizer_print_stack_trace@@Base+0x980>
    7950:	cmp	w0, #0x3
    7954:	b.eq	78ec <*ABS*+0x10@plt+0xb8c>  // b.none
    7958:	add	x1, x27, #0xcc0
    795c:	ldrb	w0, [x1, #19]
    7960:	cbnz	w0, 797c <*ABS*+0x10@plt+0xc1c>
    7964:	mov	x0, x19
    7968:	str	x1, [x29, #104]
    796c:	bl	a958 <__lsan_do_recoverable_leak_check@@Base+0xa48>
    7970:	tst	w0, #0xff
    7974:	ldr	x1, [x29, #104]
    7978:	b.ne	7a80 <*ABS*+0x10@plt+0xd20>  // b.any
    797c:	mov	x0, x26
    7980:	mov	w1, w24
    7984:	bl	b428 <__sanitizer_print_stack_trace@@Base+0x990>
    7988:	add	x0, x27, #0xcc0
    798c:	ldrb	w0, [x0, #20]
    7990:	cbnz	w0, 7a38 <*ABS*+0x10@plt+0xcd8>
    7994:	cbz	x25, 78ec <*ABS*+0x10@plt+0xb8c>
    7998:	ldp	x4, x0, [x25, #8]
    799c:	lsr	x4, x4, #3
    79a0:	cmp	x0, x4
    79a4:	b.hi	7af0 <*ABS*+0x10@plt+0xd90>  // b.pmore
    79a8:	add	x3, x0, #0x1
    79ac:	b.eq	7b0c <*ABS*+0x10@plt+0xdac>  // b.none
    79b0:	ldr	x4, [x25]
    79b4:	str	x3, [x25, #16]
    79b8:	add	x0, x4, x0, lsl #3
    79bc:	add	x1, x29, #0x70
    79c0:	add	x19, x19, x23
    79c4:	mov	x2, #0x8                   	// #8
    79c8:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    79cc:	add	x0, x19, #0x8
    79d0:	cmp	x20, x0
    79d4:	b.cs	78fc <*ABS*+0x10@plt+0xb9c>  // b.hs, b.nlast
    79d8:	ldp	x19, x20, [sp, #16]
    79dc:	ldp	x21, x22, [sp, #32]
    79e0:	ldp	x23, x24, [sp, #48]
    79e4:	ldp	x25, x26, [sp, #64]
    79e8:	ldp	x27, x28, [sp, #80]
    79ec:	ldp	x29, x30, [sp], #128
    79f0:	ret
    79f4:	mov	x23, #0x8                   	// #8
    79f8:	cbnz	w0, 7a1c <*ABS*+0x10@plt+0xcbc>
    79fc:	udiv	x0, x21, x23
    7a00:	add	x19, x21, x23
    7a04:	msub	x0, x0, x23, x21
    7a08:	cmp	x0, #0x0
    7a0c:	sub	x19, x19, x0
    7a10:	csel	x19, x19, x21, ne  // ne = any
    7a14:	b	78c8 <*ABS*+0x10@plt+0xb68>
    7a18:	mov	x23, #0x1                   	// #1
    7a1c:	mov	x1, x3
    7a20:	mov	x2, x21
    7a24:	mov	x3, x20
    7a28:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7a2c:	add	x0, x0, #0x738
    7a30:	bl	1e648 <OnPrint@@Base+0x398>
    7a34:	b	79fc <*ABS*+0x10@plt+0xc9c>
    7a38:	ldr	x3, [x29, #112]
    7a3c:	mov	x0, x26
    7a40:	str	x3, [x29, #96]
    7a44:	bl	b440 <__sanitizer_print_stack_trace@@Base+0x9a8>
    7a48:	mov	x4, x0
    7a4c:	ldr	x1, [x29, #112]
    7a50:	mov	x0, x26
    7a54:	add	x4, x4, x1
    7a58:	str	x4, [x29, #104]
    7a5c:	bl	b440 <__sanitizer_print_stack_trace@@Base+0x9a8>
    7a60:	mov	x5, x0
    7a64:	ldp	x3, x4, [x29, #96]
    7a68:	mov	x2, x28
    7a6c:	mov	x1, x19
    7a70:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7a74:	add	x0, x0, #0x7b0
    7a78:	bl	1e648 <OnPrint@@Base+0x398>
    7a7c:	b	7994 <*ABS*+0x10@plt+0xc34>
    7a80:	ldrb	w0, [x1, #20]
    7a84:	cbz	w0, 78ec <*ABS*+0x10@plt+0xb8c>
    7a88:	ldr	x3, [x29, #112]
    7a8c:	mov	x0, x26
    7a90:	str	x3, [x29, #96]
    7a94:	bl	b440 <__sanitizer_print_stack_trace@@Base+0x9a8>
    7a98:	mov	x4, x0
    7a9c:	ldr	x1, [x29, #112]
    7aa0:	mov	x0, x26
    7aa4:	add	x4, x4, x1
    7aa8:	str	x4, [x29, #104]
    7aac:	bl	b440 <__sanitizer_print_stack_trace@@Base+0x9a8>
    7ab0:	mov	x5, x0
    7ab4:	ldp	x3, x4, [x29, #96]
    7ab8:	mov	x2, x28
    7abc:	mov	x1, x19
    7ac0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7ac4:	add	x0, x0, #0x768
    7ac8:	bl	1e648 <OnPrint@@Base+0x398>
    7acc:	b	78ec <*ABS*+0x10@plt+0xb8c>
    7ad0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7ad4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7ad8:	add	x2, x2, #0x6f8
    7adc:	add	x0, x0, #0x188
    7ae0:	mov	x4, #0x0                   	// #0
    7ae4:	mov	x3, #0x0                   	// #0
    7ae8:	mov	w1, #0x9e                  	// #158
    7aec:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7af0:	mov	x3, x0
    7af4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7af8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7afc:	add	x2, x2, #0x1b8
    7b00:	add	x0, x0, #0xf8
    7b04:	mov	w1, #0x1be                 	// #446
    7b08:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7b0c:	tst	x3, x0
    7b10:	b.eq	7b4c <*ABS*+0x10@plt+0xdec>  // b.none
    7b14:	clz	x2, x3
    7b18:	mov	w4, #0x3f                  	// #63
    7b1c:	sub	w2, w4, w2
    7b20:	mov	x1, #0x1                   	// #1
    7b24:	add	w4, w2, #0x1
    7b28:	lsl	x4, x1, x4
    7b2c:	cmp	x3, x4
    7b30:	b.cs	7bf0 <*ABS*+0x10@plt+0xe90>  // b.hs, b.nlast
    7b34:	lsl	x1, x1, x2
    7b38:	cmp	x3, x1
    7b3c:	b.ls	7bd4 <*ABS*+0x10@plt+0xe74>  // b.plast
    7b40:	cmp	x0, x4
    7b44:	b.hi	7c08 <*ABS*+0x10@plt+0xea8>  // b.pmore
    7b48:	mov	x3, x4
    7b4c:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7b50:	lsl	x3, x3, #3
    7b54:	ldr	x1, [x1, #4000]
    7b58:	ldr	x0, [x1]
    7b5c:	cbz	x0, 7bc0 <*ABS*+0x10@plt+0xe60>
    7b60:	sub	x1, x0, #0x1
    7b64:	tst	x0, x1
    7b68:	b.ne	7c24 <*ABS*+0x10@plt+0xec4>  // b.any
    7b6c:	add	x3, x3, x1
    7b70:	neg	x0, x0
    7b74:	and	x3, x3, x0
    7b78:	mov	w2, #0x0                   	// #0
    7b7c:	mov	x0, x3
    7b80:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7b84:	add	x1, x1, #0x258
    7b88:	str	x3, [x29, #96]
    7b8c:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    7b90:	str	x0, [x29, #104]
    7b94:	ldr	x1, [x25]
    7b98:	ldr	x2, [x25, #16]
    7b9c:	lsl	x2, x2, #3
    7ba0:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    7ba4:	ldp	x0, x1, [x25]
    7ba8:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    7bac:	ldr	x0, [x25, #16]
    7bb0:	ldp	x3, x4, [x29, #96]
    7bb4:	stp	x4, x3, [x25]
    7bb8:	add	x3, x0, #0x1
    7bbc:	b	79b4 <*ABS*+0x10@plt+0xc54>
    7bc0:	stp	x1, x3, [x29, #96]
    7bc4:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    7bc8:	ldp	x1, x3, [x29, #96]
    7bcc:	str	x0, [x1]
    7bd0:	b	7b60 <*ABS*+0x10@plt+0xe00>
    7bd4:	mov	x4, x1
    7bd8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7bdc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7be0:	add	x2, x2, #0x200
    7be4:	add	x0, x0, #0xf8
    7be8:	mov	w1, #0x17c                 	// #380
    7bec:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7bf0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7bf4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7bf8:	add	x2, x2, #0x1d8
    7bfc:	add	x0, x0, #0xf8
    7c00:	mov	w1, #0x17b                 	// #379
    7c04:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7c08:	mov	x3, x0
    7c0c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7c10:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7c14:	add	x2, x2, #0x220
    7c18:	add	x0, x0, #0xf8
    7c1c:	mov	w1, #0x1fd                 	// #509
    7c20:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7c24:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7c28:	add	x0, x0, #0x240
    7c2c:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
    7c30:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    7c34:	nop
    7c38:	adrp	x3, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7c3c:	mov	w4, #0x2                   	// #2
    7c40:	add	x3, x3, #0x7e8
    7c44:	b	7870 <*ABS*+0x10@plt+0xb10>
    7c48:	stp	x19, x20, [sp, #-48]!
    7c4c:	str	x30, [sp, #16]
    7c50:	bl	b270 <__sanitizer_print_stack_trace@@Base+0x7d8>
    7c54:	mov	x1, x0
    7c58:	add	x20, sp, #0x28
    7c5c:	mov	x19, x0
    7c60:	mov	x0, x20
    7c64:	bl	b278 <__sanitizer_print_stack_trace@@Base+0x7e0>
    7c68:	mov	x0, x20
    7c6c:	bl	b400 <__sanitizer_print_stack_trace@@Base+0x968>
    7c70:	tst	w0, #0xff
    7c74:	b.ne	7c84 <*ABS*+0x10@plt+0xf24>  // b.any
    7c78:	ldr	x30, [sp, #16]
    7c7c:	ldp	x19, x20, [sp], #48
    7c80:	ret
    7c84:	mov	x0, x20
    7c88:	bl	b418 <__sanitizer_print_stack_trace@@Base+0x980>
    7c8c:	cmp	w0, #0x2
    7c90:	b.eq	7c78 <*ABS*+0x10@plt+0xf18>  // b.none
    7c94:	mov	x0, x20
    7c98:	bl	b440 <__sanitizer_print_stack_trace@@Base+0x9a8>
    7c9c:	mov	w4, #0x1                   	// #1
    7ca0:	add	x1, x0, x19
    7ca4:	mov	x2, #0x0                   	// #0
    7ca8:	mov	x0, x19
    7cac:	adrp	x3, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7cb0:	add	x3, x3, #0x7f8
    7cb4:	bl	7870 <*ABS*+0x10@plt+0xb10>
    7cb8:	ldr	x30, [sp, #16]
    7cbc:	ldp	x19, x20, [sp], #48
    7cc0:	ret
    7cc4:	nop
    7cc8:	ldr	x1, [x0, #16]
    7ccc:	cbz	x1, 7d48 <*ABS*+0x10@plt+0xfe8>
    7cd0:	stp	x19, x20, [sp, #-64]!
    7cd4:	mov	x19, x0
    7cd8:	stp	x21, x22, [sp, #16]
    7cdc:	adrp	x22, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7ce0:	add	x21, sp, #0x38
    7ce4:	add	x22, x22, #0x7f8
    7ce8:	str	x30, [sp, #32]
    7cec:	nop
    7cf0:	ldr	x3, [x19]
    7cf4:	sub	x2, x1, #0x1
    7cf8:	mov	x0, x21
    7cfc:	add	x1, x3, x1, lsl #3
    7d00:	ldur	x20, [x1, #-8]
    7d04:	str	x2, [x19, #16]
    7d08:	mov	x1, x20
    7d0c:	bl	b278 <__sanitizer_print_stack_trace@@Base+0x7e0>
    7d10:	mov	x0, x21
    7d14:	bl	b440 <__sanitizer_print_stack_trace@@Base+0x9a8>
    7d18:	add	x1, x20, x0
    7d1c:	mov	x3, x22
    7d20:	mov	x0, x20
    7d24:	mov	x2, x19
    7d28:	mov	w4, #0x2                   	// #2
    7d2c:	bl	7870 <*ABS*+0x10@plt+0xb10>
    7d30:	ldr	x1, [x19, #16]
    7d34:	cbnz	x1, 7cf0 <*ABS*+0x10@plt+0xf90>
    7d38:	ldp	x21, x22, [sp, #16]
    7d3c:	ldr	x30, [sp, #32]
    7d40:	ldp	x19, x20, [sp], #64
    7d44:	ret
    7d48:	ret
    7d4c:	nop
    7d50:	stp	x19, x20, [sp, #-48]!
    7d54:	mov	x20, x0
    7d58:	mov	x19, x1
    7d5c:	add	x0, sp, #0x20
    7d60:	add	x1, sp, #0x28
    7d64:	stp	x21, x30, [sp, #16]
    7d68:	mov	x21, x2
    7d6c:	stp	xzr, xzr, [sp, #32]
    7d70:	bl	b250 <__sanitizer_print_stack_trace@@Base+0x7b8>
    7d74:	ldr	x1, [sp, #32]
    7d78:	cmp	x1, x19
    7d7c:	ccmp	x1, x20, #0x0, cc  // cc = lo, ul, last
    7d80:	b.cs	7dac <*ABS*+0x10@plt+0x104c>  // b.hs, b.nlast
    7d84:	adrp	x3, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7d88:	mov	x2, x21
    7d8c:	mov	x1, x19
    7d90:	mov	x0, x20
    7d94:	add	x3, x3, #0x850
    7d98:	mov	w4, #0x2                   	// #2
    7d9c:	bl	7870 <*ABS*+0x10@plt+0xb10>
    7da0:	ldp	x21, x30, [sp, #16]
    7da4:	ldp	x19, x20, [sp], #48
    7da8:	ret
    7dac:	ldr	x0, [sp, #40]
    7db0:	cmp	x1, x0
    7db4:	b.hi	7e0c <*ABS*+0x10@plt+0x10ac>  // b.pmore
    7db8:	cmp	x19, x0
    7dbc:	b.cc	7e2c <*ABS*+0x10@plt+0x10cc>  // b.lo, b.ul, b.last
    7dc0:	cmp	x1, x20
    7dc4:	b.hi	7dec <*ABS*+0x10@plt+0x108c>  // b.pmore
    7dc8:	cmp	x19, x0
    7dcc:	b.ls	7da0 <*ABS*+0x10@plt+0x1040>  // b.plast
    7dd0:	mov	x2, x21
    7dd4:	mov	x1, x19
    7dd8:	adrp	x3, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7ddc:	mov	w4, #0x2                   	// #2
    7de0:	add	x3, x3, #0x850
    7de4:	bl	7870 <*ABS*+0x10@plt+0xb10>
    7de8:	b	7da0 <*ABS*+0x10@plt+0x1040>
    7dec:	mov	x0, x20
    7df0:	mov	x2, x21
    7df4:	adrp	x3, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7df8:	mov	w4, #0x2                   	// #2
    7dfc:	add	x3, x3, #0x850
    7e00:	bl	7870 <*ABS*+0x10@plt+0xb10>
    7e04:	ldr	x0, [sp, #40]
    7e08:	b	7dc8 <*ABS*+0x10@plt+0x1068>
    7e0c:	mov	x4, x0
    7e10:	mov	x3, x1
    7e14:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7e18:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7e1c:	add	x2, x2, #0x800
    7e20:	add	x0, x0, #0x188
    7e24:	mov	w1, #0xc4                  	// #196
    7e28:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7e2c:	mov	x3, x0
    7e30:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7e34:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7e38:	mov	x4, x19
    7e3c:	add	x2, x2, #0x830
    7e40:	add	x0, x0, #0x188
    7e44:	mov	w1, #0xc5                  	// #197
    7e48:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    7e4c:	nop
    7e50:	stp	x19, x20, [sp, #-48]!
    7e54:	mov	x5, x1
    7e58:	mov	x6, x2
    7e5c:	ldr	x1, [x1]
    7e60:	stp	x21, x22, [sp, #16]
    7e64:	and	w22, w4, #0xff
    7e68:	ldr	x4, [x5, #8]
    7e6c:	cmp	x1, x2
    7e70:	csel	x20, x1, x2, cs  // cs = hs, nlast
    7e74:	str	x30, [sp, #32]
    7e78:	add	x2, x1, x4
    7e7c:	cmp	x2, x3
    7e80:	csel	x21, x2, x3, ls  // ls = plast
    7e84:	cmp	x20, x21
    7e88:	b.cs	7ecc <*ABS*+0x10@plt+0x116c>  // b.hs, b.nlast
    7e8c:	mov	x19, x0
    7e90:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7e94:	ldrb	w0, [x0, #3284]
    7e98:	cbz	w0, 7ec8 <*ABS*+0x10@plt+0x1168>
    7e9c:	cmp	w22, #0x0
    7ea0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7ea4:	adrp	x5, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7ea8:	add	x0, x0, #0x868
    7eac:	add	x5, x5, #0x858
    7eb0:	mov	x4, x3
    7eb4:	csel	x5, x5, x0, ne  // ne = any
    7eb8:	mov	x3, x6
    7ebc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7ec0:	add	x0, x0, #0x878
    7ec4:	bl	1e648 <OnPrint@@Base+0x398>
    7ec8:	cbnz	w22, 7edc <*ABS*+0x10@plt+0x117c>
    7ecc:	ldp	x21, x22, [sp, #16]
    7ed0:	ldr	x30, [sp, #32]
    7ed4:	ldp	x19, x20, [sp], #48
    7ed8:	ret
    7edc:	mov	x2, x19
    7ee0:	mov	x1, x21
    7ee4:	mov	x0, x20
    7ee8:	adrp	x3, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    7eec:	ldp	x21, x22, [sp, #16]
    7ef0:	add	x3, x3, #0x8b8
    7ef4:	ldr	x30, [sp, #32]
    7ef8:	mov	w4, #0x2                   	// #2
    7efc:	ldp	x19, x20, [sp], #48
    7f00:	b	7870 <*ABS*+0x10@plt+0xb10>
    7f04:	nop
    7f08:	stp	x19, x20, [sp, #-80]!
    7f0c:	mov	x20, x0
    7f10:	add	x19, sp, #0x20
    7f14:	str	x30, [sp, #16]
    7f18:	mov	x0, x19
    7f1c:	bl	1f678 <OnPrint@@Base+0x13c8>
    7f20:	adrp	x1, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7f24:	add	x1, x1, #0xcc0
    7f28:	stp	x20, x19, [sp, #56]
    7f2c:	ldrb	w2, [x1, #15]
    7f30:	cbz	w2, 7f3c <*ABS*+0x10@plt+0x11dc>
    7f34:	ldrb	w2, [x1, #17]
    7f38:	cbnz	w2, 7f64 <*ABS*+0x10@plt+0x1204>
    7f3c:	add	x1, sp, #0x38
    7f40:	adrp	x0, 6000 <_Unwind_Backtrace@plt-0x650>
    7f44:	add	x0, x0, #0xfc8
    7f48:	strb	w2, [sp, #72]
    7f4c:	bl	c0f0 <__sanitizer_get_allocated_size@@Base+0x5c0>
    7f50:	ldp	x0, x1, [sp, #32]
    7f54:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    7f58:	ldr	x30, [sp, #16]
    7f5c:	ldp	x19, x20, [sp], #80
    7f60:	ret
    7f64:	bl	a718 <__lsan_do_recoverable_leak_check@@Base+0x808>
    7f68:	cmp	x0, #0x0
    7f6c:	cset	w2, ne  // ne = any
    7f70:	b	7f3c <*ABS*+0x10@plt+0x11dc>
    7f74:	nop
    7f78:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7f7c:	ldrb	w0, [x0, #3480]
    7f80:	ret
    7f84:	nop
    7f88:	stp	x19, x20, [sp, #-144]!
    7f8c:	cmp	w4, #0x1
    7f90:	stp	x21, x22, [sp, #16]
    7f94:	str	x30, [sp, #48]
    7f98:	b.hi	8120 <*ABS*+0x10@plt+0x13c0>  // b.pmore
    7f9c:	ldr	x6, [x0, #24]
    7fa0:	eor	w4, w4, #0x1
    7fa4:	mov	x20, x0
    7fa8:	mov	x22, x1
    7fac:	mov	x21, x3
    7fb0:	and	w7, w4, #0x1
    7fb4:	cbz	x6, 82f0 <*ABS*+0x10@plt+0x1590>
    7fb8:	ldr	x3, [x0, #8]
    7fbc:	mov	x19, #0x0                   	// #0
    7fc0:	mov	x5, x3
    7fc4:	b	7fd8 <*ABS*+0x10@plt+0x1278>
    7fc8:	add	x19, x19, #0x1
    7fcc:	add	x5, x5, #0x20
    7fd0:	cmp	x19, x6
    7fd4:	b.eq	80ac <*ABS*+0x10@plt+0x134c>  // b.none
    7fd8:	ldr	w4, [x5, #24]
    7fdc:	cmp	w4, w2
    7fe0:	b.ne	7fc8 <*ABS*+0x10@plt+0x1268>  // b.any
    7fe4:	ldrb	w4, [x5, #28]
    7fe8:	cmp	w4, w7
    7fec:	b.ne	7fc8 <*ABS*+0x10@plt+0x1268>  // b.any
    7ff0:	ldr	x0, [x5, #8]
    7ff4:	add	x0, x0, #0x1
    7ff8:	str	x0, [x5, #8]
    7ffc:	ldr	x4, [x20, #24]
    8000:	cmp	x19, x4
    8004:	b.cs	8200 <*ABS*+0x10@plt+0x14a0>  // b.hs, b.nlast
    8008:	ldr	x0, [x5, #16]
    800c:	add	x0, x0, x21
    8010:	str	x0, [x5, #16]
    8014:	ldr	x0, [x20, #24]
    8018:	cmp	x19, x0
    801c:	b.eq	80b0 <*ABS*+0x10@plt+0x1350>  // b.none
    8020:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8024:	ldrb	w0, [x0, #3264]
    8028:	cbz	w0, 809c <*ABS*+0x10@plt+0x133c>
    802c:	ldr	x4, [x20, #24]
    8030:	stp	x23, x24, [sp, #32]
    8034:	cmp	x19, x4
    8038:	ldr	x1, [x20, #8]
    803c:	b.cs	8204 <*ABS*+0x10@plt+0x14a4>  // b.hs, b.nlast
    8040:	ldr	x0, [x20, #40]
    8044:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    8048:	movk	x4, #0xaaab
    804c:	lsl	x19, x19, #5
    8050:	ldr	x3, [x20, #48]
    8054:	umulh	x0, x0, x4
    8058:	ldr	w1, [x1, x19]
    805c:	add	x23, x20, #0x20
    8060:	str	w1, [sp, #88]
    8064:	stp	x22, x21, [sp, #96]
    8068:	lsr	x4, x0, #4
    806c:	cmp	x3, x4
    8070:	b.hi	8224 <*ABS*+0x10@plt+0x14c4>  // b.pmore
    8074:	add	x1, x3, #0x1
    8078:	b.eq	8144 <*ABS*+0x10@plt+0x13e4>  // b.none
    807c:	ldr	x21, [x20, #32]
    8080:	add	x3, x3, x3, lsl #1
    8084:	str	x1, [x23, #16]
    8088:	mov	x2, #0x18                  	// #24
    808c:	add	x0, x21, x3, lsl #3
    8090:	add	x1, sp, #0x58
    8094:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    8098:	ldp	x23, x24, [sp, #32]
    809c:	ldp	x21, x22, [sp, #16]
    80a0:	ldr	x30, [sp, #48]
    80a4:	ldp	x19, x20, [sp], #144
    80a8:	ret
    80ac:	mov	x0, x19
    80b0:	mov	x1, #0x1388                	// #5000
    80b4:	cmp	x0, x1
    80b8:	b.eq	809c <*ABS*+0x10@plt+0x133c>  // b.none
    80bc:	ldr	x4, [x20, #16]
    80c0:	stp	x23, x24, [sp, #32]
    80c4:	ldr	w1, [x20]
    80c8:	stp	xzr, xzr, [sp, #112]
    80cc:	mov	x5, #0x1                   	// #1
    80d0:	add	w8, w1, #0x1
    80d4:	stp	xzr, xzr, [sp, #128]
    80d8:	lsr	x4, x4, #5
    80dc:	cmp	x4, x0
    80e0:	str	w8, [x20]
    80e4:	str	w1, [sp, #112]
    80e8:	stp	x5, x21, [sp, #120]
    80ec:	str	w2, [sp, #136]
    80f0:	strb	w7, [sp, #140]
    80f4:	b.cc	8220 <*ABS*+0x10@plt+0x14c0>  // b.lo, b.ul, b.last
    80f8:	b.eq	823c <*ABS*+0x10@plt+0x14dc>  // b.none
    80fc:	add	x23, x20, #0x8
    8100:	add	x0, x6, #0x1
    8104:	str	x0, [x23, #16]
    8108:	add	x1, sp, #0x70
    810c:	add	x0, x3, x6, lsl #5
    8110:	mov	x2, #0x20                  	// #32
    8114:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    8118:	ldp	x23, x24, [sp, #32]
    811c:	b	8020 <*ABS*+0x10@plt+0x12c0>
    8120:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8124:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8128:	add	x2, x2, #0x8c0
    812c:	add	x0, x0, #0x188
    8130:	mov	x4, #0x0                   	// #0
    8134:	mov	x3, #0x0                   	// #0
    8138:	mov	w1, #0x29f                 	// #671
    813c:	stp	x23, x24, [sp, #32]
    8140:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    8144:	tst	x1, x3
    8148:	b.eq	8184 <*ABS*+0x10@plt+0x1424>  // b.none
    814c:	clz	x2, x1
    8150:	mov	w0, #0x3f                  	// #63
    8154:	sub	w2, w0, w2
    8158:	mov	x0, #0x1                   	// #1
    815c:	add	w4, w2, #0x1
    8160:	lsl	x4, x0, x4
    8164:	cmp	x1, x4
    8168:	b.cs	8384 <*ABS*+0x10@plt+0x1624>  // b.hs, b.nlast
    816c:	lsl	x0, x0, x2
    8170:	cmp	x1, x0
    8174:	b.ls	83a0 <*ABS*+0x10@plt+0x1640>  // b.plast
    8178:	cmp	x3, x4
    817c:	b.hi	836c <*ABS*+0x10@plt+0x160c>  // b.pmore
    8180:	mov	x1, x4
    8184:	adrp	x21, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8188:	add	x1, x1, x1, lsl #1
    818c:	ldr	x21, [x21, #4000]
    8190:	lsl	x19, x1, #3
    8194:	ldr	x0, [x21]
    8198:	cbz	x0, 8338 <*ABS*+0x10@plt+0x15d8>
    819c:	sub	x1, x0, #0x1
    81a0:	tst	x1, x0
    81a4:	b.ne	8358 <*ABS*+0x10@plt+0x15f8>  // b.any
    81a8:	add	x19, x19, x1
    81ac:	neg	x0, x0
    81b0:	and	x19, x19, x0
    81b4:	mov	w2, #0x0                   	// #0
    81b8:	mov	x0, x19
    81bc:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    81c0:	add	x1, x1, #0x258
    81c4:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    81c8:	ldr	x2, [x23, #16]
    81cc:	mov	x21, x0
    81d0:	ldr	x1, [x20, #32]
    81d4:	add	x2, x2, x2, lsl #1
    81d8:	lsl	x2, x2, #3
    81dc:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    81e0:	ldr	x1, [x23, #8]
    81e4:	ldr	x0, [x20, #32]
    81e8:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    81ec:	ldr	x3, [x23, #16]
    81f0:	str	x21, [x20, #32]
    81f4:	str	x19, [x23, #8]
    81f8:	add	x1, x3, #0x1
    81fc:	b	8080 <*ABS*+0x10@plt+0x1320>
    8200:	stp	x23, x24, [sp, #32]
    8204:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8208:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    820c:	mov	x3, x19
    8210:	add	x2, x2, #0xe0
    8214:	add	x0, x0, #0xf8
    8218:	mov	w1, #0x1b6                 	// #438
    821c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    8220:	mov	x3, x0
    8224:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8228:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    822c:	add	x2, x2, #0x1b8
    8230:	add	x0, x0, #0xf8
    8234:	mov	w1, #0x1be                 	// #446
    8238:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    823c:	add	x3, x0, #0x1
    8240:	tst	x3, x0
    8244:	b.eq	83c0 <*ABS*+0x10@plt+0x1660>  // b.none
    8248:	clz	x2, x3
    824c:	mov	w1, #0x3f                  	// #63
    8250:	sub	w1, w1, w2
    8254:	add	w4, w1, #0x1
    8258:	lsl	x4, x5, x4
    825c:	cmp	x3, x4
    8260:	b.cs	8388 <*ABS*+0x10@plt+0x1628>  // b.hs, b.nlast
    8264:	lsl	x5, x5, x1
    8268:	cmp	x3, x5
    826c:	b.ls	83c8 <*ABS*+0x10@plt+0x1668>  // b.plast
    8270:	cmp	x4, x0
    8274:	b.cc	8368 <*ABS*+0x10@plt+0x1608>  // b.lo, b.ul, b.last
    8278:	adrp	x24, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    827c:	lsl	x23, x4, #5
    8280:	ldr	x24, [x24, #4000]
    8284:	ldr	x0, [x24]
    8288:	cbz	x0, 834c <*ABS*+0x10@plt+0x15ec>
    828c:	sub	x4, x0, #0x1
    8290:	tst	x4, x0
    8294:	b.ne	8358 <*ABS*+0x10@plt+0x15f8>  // b.any
    8298:	add	x4, x23, x4
    829c:	neg	x0, x0
    82a0:	add	x23, x20, #0x8
    82a4:	and	x24, x4, x0
    82a8:	mov	w2, #0x0                   	// #0
    82ac:	mov	x0, x24
    82b0:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    82b4:	add	x1, x1, #0x258
    82b8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    82bc:	str	x0, [sp, #72]
    82c0:	ldr	x1, [x20, #8]
    82c4:	ldr	x2, [x23, #16]
    82c8:	lsl	x2, x2, #5
    82cc:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    82d0:	ldr	x0, [x20, #8]
    82d4:	ldr	x1, [x23, #8]
    82d8:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    82dc:	ldr	x3, [sp, #72]
    82e0:	ldr	x6, [x23, #16]
    82e4:	str	x3, [x20, #8]
    82e8:	str	x24, [x23, #8]
    82ec:	b	8100 <*ABS*+0x10@plt+0x13a0>
    82f0:	ldr	w1, [x20]
    82f4:	mov	x0, #0x1                   	// #1
    82f8:	ldr	x19, [x20, #16]
    82fc:	stp	x23, x24, [sp, #32]
    8300:	add	w3, w1, #0x1
    8304:	stp	xzr, xzr, [sp, #112]
    8308:	cmp	xzr, x19, lsr #5
    830c:	stp	xzr, xzr, [sp, #128]
    8310:	lsr	x19, x19, #5
    8314:	str	w3, [x20]
    8318:	str	w1, [sp, #112]
    831c:	stp	x0, x21, [sp, #120]
    8320:	str	w2, [sp, #136]
    8324:	strb	w7, [sp, #140]
    8328:	b.eq	8344 <*ABS*+0x10@plt+0x15e4>  // b.none
    832c:	mov	x19, #0x0                   	// #0
    8330:	ldr	x3, [x20, #8]
    8334:	b	80fc <*ABS*+0x10@plt+0x139c>
    8338:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    833c:	str	x0, [x21]
    8340:	b	819c <*ABS*+0x10@plt+0x143c>
    8344:	mov	x4, x0
    8348:	b	8278 <*ABS*+0x10@plt+0x1518>
    834c:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    8350:	str	x0, [x24]
    8354:	b	828c <*ABS*+0x10@plt+0x152c>
    8358:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    835c:	add	x0, x0, #0x240
    8360:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
    8364:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    8368:	mov	x3, x0
    836c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8370:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8374:	add	x2, x2, #0x220
    8378:	add	x0, x0, #0xf8
    837c:	mov	w1, #0x1fd                 	// #509
    8380:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    8384:	mov	x3, x1
    8388:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    838c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8390:	add	x2, x2, #0x1d8
    8394:	add	x0, x0, #0xf8
    8398:	mov	w1, #0x17b                 	// #379
    839c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    83a0:	mov	x4, x0
    83a4:	mov	x3, x1
    83a8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    83ac:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    83b0:	add	x2, x2, #0x200
    83b4:	add	x0, x0, #0xf8
    83b8:	mov	w1, #0x17c                 	// #380
    83bc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    83c0:	mov	x4, x3
    83c4:	b	8278 <*ABS*+0x10@plt+0x1518>
    83c8:	mov	x4, x5
    83cc:	b	83a8 <*ABS*+0x10@plt+0x1648>
    83d0:	stp	x19, x20, [sp, #-64]!
    83d4:	stp	x21, x22, [sp, #16]
    83d8:	str	x30, [sp, #32]
    83dc:	cbz	x1, 84b8 <*ABS*+0x10@plt+0x1758>
    83e0:	mov	x19, x1
    83e4:	bl	b270 <__sanitizer_print_stack_trace@@Base+0x7d8>
    83e8:	mov	x1, x0
    83ec:	add	x20, sp, #0x38
    83f0:	mov	x21, x0
    83f4:	mov	x0, x20
    83f8:	bl	b278 <__sanitizer_print_stack_trace@@Base+0x7e0>
    83fc:	mov	x0, x20
    8400:	bl	b400 <__sanitizer_print_stack_trace@@Base+0x968>
    8404:	tst	w0, #0xff
    8408:	b.ne	841c <*ABS*+0x10@plt+0x16bc>  // b.any
    840c:	ldp	x21, x22, [sp, #16]
    8410:	ldr	x30, [sp, #32]
    8414:	ldp	x19, x20, [sp], #64
    8418:	ret
    841c:	mov	x0, x20
    8420:	bl	b418 <__sanitizer_print_stack_trace@@Base+0x980>
    8424:	cbnz	w0, 84a4 <*ABS*+0x10@plt+0x1744>
    8428:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    842c:	ldr	w22, [x0, #3268]
    8430:	cbnz	w22, 8480 <*ABS*+0x10@plt+0x1720>
    8434:	mov	x0, x20
    8438:	bl	b450 <__sanitizer_print_stack_trace@@Base+0x9b8>
    843c:	mov	w22, w0
    8440:	mov	x0, x20
    8444:	bl	b440 <__sanitizer_print_stack_trace@@Base+0x9a8>
    8448:	mov	x3, x0
    844c:	mov	x0, x20
    8450:	mov	x20, x3
    8454:	bl	b418 <__sanitizer_print_stack_trace@@Base+0x980>
    8458:	mov	w4, w0
    845c:	mov	x3, x20
    8460:	mov	w2, w22
    8464:	mov	x1, x21
    8468:	mov	x0, x19
    846c:	bl	7f88 <*ABS*+0x10@plt+0x1228>
    8470:	ldp	x21, x22, [sp, #16]
    8474:	ldr	x30, [sp, #32]
    8478:	ldp	x19, x20, [sp], #64
    847c:	ret
    8480:	mov	x0, x20
    8484:	bl	b450 <__sanitizer_print_stack_trace@@Base+0x9b8>
    8488:	bl	1f480 <OnPrint@@Base+0x11d0>
    848c:	cmp	w22, w1
    8490:	csel	w22, w22, w1, cc  // cc = lo, ul, last
    8494:	bfxil	x1, x22, #0, #32
    8498:	bl	1f9a0 <OnPrint@@Base+0x16f0>
    849c:	mov	w22, w0
    84a0:	b	8440 <*ABS*+0x10@plt+0x16e0>
    84a4:	mov	x0, x20
    84a8:	bl	b418 <__sanitizer_print_stack_trace@@Base+0x980>
    84ac:	cmp	w0, #0x1
    84b0:	b.ne	840c <*ABS*+0x10@plt+0x16ac>  // b.any
    84b4:	b	8428 <*ABS*+0x10@plt+0x16c8>
    84b8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    84bc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    84c0:	add	x2, x2, #0x178
    84c4:	add	x0, x0, #0x188
    84c8:	mov	x4, #0x0                   	// #0
    84cc:	mov	x3, #0x0                   	// #0
    84d0:	mov	w1, #0x1e8                 	// #488
    84d4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    84d8:	stp	x19, x20, [sp, #-48]!
    84dc:	ldr	x4, [x0, #24]
    84e0:	stp	x21, x22, [sp, #16]
    84e4:	mov	x21, x0
    84e8:	ldr	x0, [x0, #8]
    84ec:	str	x30, [sp, #40]
    84f0:	cmp	x1, x4
    84f4:	b.cs	8578 <*ABS*+0x10@plt+0x1818>  // b.hs, b.nlast
    84f8:	ldr	x2, [x21, #48]
    84fc:	lsl	x1, x1, #5
    8500:	ldr	w22, [x0, x1]
    8504:	cbz	x2, 8568 <*ABS*+0x10@plt+0x1808>
    8508:	mov	x19, #0x0                   	// #0
    850c:	mov	x20, #0x0                   	// #0
    8510:	str	x23, [sp, #32]
    8514:	adrp	x23, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8518:	add	x23, x23, #0x900
    851c:	b	8530 <*ABS*+0x10@plt+0x17d0>
    8520:	add	x20, x20, #0x1
    8524:	add	x19, x19, #0x18
    8528:	cmp	x20, x2
    852c:	b.cs	8564 <*ABS*+0x10@plt+0x1804>  // b.hs, b.nlast
    8530:	ldr	x1, [x21, #32]
    8534:	add	x3, x1, x19
    8538:	ldr	w1, [x1, x19]
    853c:	cmp	w1, w22
    8540:	b.ne	8520 <*ABS*+0x10@plt+0x17c0>  // b.any
    8544:	ldp	x1, x2, [x3, #8]
    8548:	mov	x0, x23
    854c:	add	x20, x20, #0x1
    8550:	add	x19, x19, #0x18
    8554:	bl	1e5c0 <OnPrint@@Base+0x310>
    8558:	ldr	x2, [x21, #48]
    855c:	cmp	x20, x2
    8560:	b.cc	8530 <*ABS*+0x10@plt+0x17d0>  // b.lo, b.ul, b.last
    8564:	ldr	x23, [sp, #32]
    8568:	ldp	x21, x22, [sp, #16]
    856c:	ldr	x30, [sp, #40]
    8570:	ldp	x19, x20, [sp], #48
    8574:	ret
    8578:	mov	x3, x1
    857c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8580:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8584:	add	x2, x2, #0xe0
    8588:	add	x0, x0, #0xf8
    858c:	mov	w1, #0x1b6                 	// #438
    8590:	str	x23, [sp, #32]
    8594:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    8598:	stp	x19, x20, [sp, #-80]!
    859c:	mov	x19, x0
    85a0:	mov	x20, x1
    85a4:	stp	x21, x22, [sp, #16]
    85a8:	adrp	x21, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
    85ac:	adrp	x22, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    85b0:	stp	x23, x24, [sp, #32]
    85b4:	add	x21, x21, #0x5c8
    85b8:	add	x22, x22, #0x948
    85bc:	str	x30, [sp, #48]
    85c0:	bl	20e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a8>
    85c4:	ands	w23, w0, #0xff
    85c8:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    85cc:	add	x1, x1, #0x910
    85d0:	mov	x0, x22
    85d4:	csel	x1, x1, x21, ne  // ne = any
    85d8:	bl	1e5c0 <OnPrint@@Base+0x310>
    85dc:	ldr	x4, [x19, #24]
    85e0:	ldr	x2, [x19, #8]
    85e4:	cmp	x20, x4
    85e8:	b.cs	86c4 <*ABS*+0x10@plt+0x1964>  // b.hs, b.nlast
    85ec:	lsl	x24, x20, #5
    85f0:	adrp	x4, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    85f4:	add	x2, x2, x24
    85f8:	add	x4, x4, #0x928
    85fc:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8600:	add	x1, x1, #0x920
    8604:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8608:	add	x0, x0, #0x950
    860c:	ldrb	w5, [x2, #28]
    8610:	ldp	x3, x2, [x2, #8]
    8614:	cmp	w5, #0x0
    8618:	csel	x1, x1, x4, ne  // ne = any
    861c:	bl	1e5c0 <OnPrint@@Base+0x310>
    8620:	cmp	w23, #0x0
    8624:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8628:	add	x1, x1, #0x938
    862c:	mov	x0, x22
    8630:	csel	x1, x1, x21, ne  // ne = any
    8634:	bl	1e5c0 <OnPrint@@Base+0x310>
    8638:	ldr	x4, [x19, #24]
    863c:	ldr	x0, [x19, #8]
    8640:	cmp	x20, x4
    8644:	b.cs	86c4 <*ABS*+0x10@plt+0x1964>  // b.hs, b.nlast
    8648:	add	x0, x0, x24
    864c:	ldr	w0, [x0, #24]
    8650:	cbz	w0, 86e0 <*ABS*+0x10@plt+0x1980>
    8654:	bl	1f480 <OnPrint@@Base+0x11d0>
    8658:	mov	x2, x0
    865c:	mov	x3, x1
    8660:	add	x0, sp, #0x40
    8664:	stp	x2, x3, [sp, #64]
    8668:	bl	20260 <OnPrint@@Base+0x1fb0>
    866c:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8670:	ldrb	w0, [x0, #3264]
    8674:	cbnz	w0, 868c <*ABS*+0x10@plt+0x192c>
    8678:	ldp	x21, x22, [sp, #16]
    867c:	ldp	x23, x24, [sp, #32]
    8680:	ldr	x30, [sp, #48]
    8684:	ldp	x19, x20, [sp], #80
    8688:	ret
    868c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8690:	add	x0, x0, #0x9b0
    8694:	bl	1e5c0 <OnPrint@@Base+0x310>
    8698:	mov	x1, x20
    869c:	mov	x0, x19
    86a0:	bl	84d8 <*ABS*+0x10@plt+0x1778>
    86a4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
    86a8:	add	x0, x0, #0xc70
    86ac:	bl	1e5c0 <OnPrint@@Base+0x310>
    86b0:	ldp	x21, x22, [sp, #16]
    86b4:	ldp	x23, x24, [sp, #32]
    86b8:	ldr	x30, [sp, #48]
    86bc:	ldp	x19, x20, [sp], #80
    86c0:	ret
    86c4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    86c8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    86cc:	mov	x3, x20
    86d0:	add	x2, x2, #0xe0
    86d4:	add	x0, x0, #0xf8
    86d8:	mov	w1, #0x1b6                 	// #438
    86dc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    86e0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    86e4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    86e8:	add	x2, x2, #0x990
    86ec:	add	x0, x0, #0x188
    86f0:	mov	x4, #0x0                   	// #0
    86f4:	mov	x3, #0x0                   	// #0
    86f8:	mov	w1, #0x1e1                 	// #481
    86fc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    8700:	stp	x19, x20, [sp, #-96]!
    8704:	mov	x1, #0x1388                	// #5000
    8708:	ldr	x19, [x0, #24]
    870c:	stp	x21, x22, [sp, #16]
    8710:	stp	x23, x24, [sp, #32]
    8714:	cmp	x19, x1
    8718:	str	x30, [sp, #48]
    871c:	b.hi	883c <*ABS*+0x10@plt+0x1adc>  // b.pmore
    8720:	cbz	x19, 885c <*ABS*+0x10@plt+0x1afc>
    8724:	ldr	x0, [x0, #8]
    8728:	mov	x20, #0x0                   	// #0
    872c:	add	x3, x0, x19, lsl #5
    8730:	mov	x19, #0x0                   	// #0
    8734:	nop
    8738:	ldrb	w1, [x0, #29]
    873c:	cbnz	w1, 874c <*ABS*+0x10@plt+0x19ec>
    8740:	ldp	x2, x1, [x0, #8]
    8744:	add	x20, x20, x2
    8748:	add	x19, x19, x1
    874c:	add	x0, x0, #0x20
    8750:	cmp	x0, x3
    8754:	b.ne	8738 <*ABS*+0x10@plt+0x19d8>  // b.any
    8758:	adrp	x23, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    875c:	stp	xzr, xzr, [sp, #64]
    8760:	ldr	x21, [x23, #4000]
    8764:	str	xzr, [sp, #80]
    8768:	ldr	x0, [x21]
    876c:	cbz	x0, 8830 <*ABS*+0x10@plt+0x1ad0>
    8770:	sub	x1, x0, #0x1
    8774:	tst	x1, x0
    8778:	b.ne	88bc <*ABS*+0x10@plt+0x1b5c>  // b.any
    877c:	add	x22, x0, #0x3ff
    8780:	neg	x0, x0
    8784:	and	x22, x22, x0
    8788:	mov	w2, #0x0                   	// #0
    878c:	mov	x0, x22
    8790:	adrp	x24, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8794:	add	x1, x24, #0x258
    8798:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    879c:	ldr	x1, [sp, #64]
    87a0:	mov	x21, x0
    87a4:	ldr	x2, [sp, #80]
    87a8:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    87ac:	ldp	x0, x1, [sp, #64]
    87b0:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    87b4:	stp	x21, x22, [sp, #64]
    87b8:	ldr	x2, [sp, #80]
    87bc:	cmp	x2, #0x3ff
    87c0:	b.hi	87e4 <*ABS*+0x10@plt+0x1a84>  // b.pmore
    87c4:	cmp	x22, #0x3ff
    87c8:	b.ls	8864 <*ABS*+0x10@plt+0x1b04>  // b.plast
    87cc:	mov	x3, #0x400                 	// #1024
    87d0:	add	x0, x21, x2
    87d4:	mov	w1, #0x0                   	// #0
    87d8:	sub	x2, x3, x2
    87dc:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
    87e0:	ldr	x21, [sp, #64]
    87e4:	mov	x0, #0x400                 	// #1024
    87e8:	stp	x0, xzr, [sp, #80]
    87ec:	mov	x3, x20
    87f0:	mov	x2, x19
    87f4:	strb	wzr, [x21]
    87f8:	add	x0, sp, #0x40
    87fc:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8800:	add	x1, x1, #0x9f8
    8804:	bl	1e6d0 <OnPrint@@Base+0x420>
    8808:	ldr	x0, [sp, #64]
    880c:	mov	x1, #0x0                   	// #0
    8810:	bl	13de0 <__sanitizer_report_error_summary@@Base+0x10>
    8814:	ldp	x0, x1, [sp, #64]
    8818:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    881c:	ldp	x21, x22, [sp, #16]
    8820:	ldp	x23, x24, [sp, #32]
    8824:	ldr	x30, [sp, #48]
    8828:	ldp	x19, x20, [sp], #96
    882c:	ret
    8830:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    8834:	str	x0, [x21]
    8838:	b	8770 <*ABS*+0x10@plt+0x1a10>
    883c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8840:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8844:	add	x2, x2, #0x9c8
    8848:	add	x0, x0, #0x188
    884c:	mov	x4, #0x0                   	// #0
    8850:	mov	x3, #0x0                   	// #0
    8854:	mov	w1, #0x2f1                 	// #753
    8858:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    885c:	mov	x20, #0x0                   	// #0
    8860:	b	8758 <*ABS*+0x10@plt+0x19f8>
    8864:	ldr	x23, [x23, #4000]
    8868:	ldr	x0, [x23]
    886c:	cbz	x0, 88cc <*ABS*+0x10@plt+0x1b6c>
    8870:	sub	x1, x0, #0x1
    8874:	tst	x1, x0
    8878:	b.ne	88bc <*ABS*+0x10@plt+0x1b5c>  // b.any
    887c:	add	x22, x0, #0x3ff
    8880:	neg	x0, x0
    8884:	and	x22, x22, x0
    8888:	add	x1, x24, #0x258
    888c:	mov	w2, #0x0                   	// #0
    8890:	mov	x0, x22
    8894:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    8898:	mov	x21, x0
    889c:	ldr	x1, [sp, #64]
    88a0:	ldr	x2, [sp, #80]
    88a4:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    88a8:	ldp	x0, x1, [sp, #64]
    88ac:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    88b0:	stp	x21, x22, [sp, #64]
    88b4:	ldr	x2, [sp, #80]
    88b8:	b	87cc <*ABS*+0x10@plt+0x1a6c>
    88bc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    88c0:	add	x0, x0, #0x240
    88c4:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
    88c8:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    88cc:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    88d0:	str	x0, [x23]
    88d4:	b	8870 <*ABS*+0x10@plt+0x1b10>
    88d8:	stp	x19, x20, [sp, #-160]!
    88dc:	stp	x23, x24, [sp, #32]
    88e0:	mov	x24, x0
    88e4:	ldr	x0, [x0, #24]
    88e8:	str	x30, [sp, #80]
    88ec:	str	xzr, [sp, #112]
    88f0:	cbz	x0, 8ab8 <*ABS*+0x10@plt+0x1d58>
    88f4:	stp	x21, x22, [sp, #16]
    88f8:	adrp	x22, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    88fc:	add	x22, x22, #0x68
    8900:	add	x22, x22, #0x18
    8904:	stp	x27, x28, [sp, #64]
    8908:	add	x28, sp, #0x98
    890c:	stp	x25, x26, [sp, #48]
    8910:	ldr	x1, [sp, #112]
    8914:	ldr	x0, [x24, #8]
    8918:	lsl	x1, x1, #5
    891c:	str	x1, [sp, #120]
    8920:	add	x0, x0, x1
    8924:	ldr	w0, [x0, #24]
    8928:	bl	1f480 <OnPrint@@Base+0x11d0>
    892c:	str	x0, [sp, #104]
    8930:	mov	w25, w1
    8934:	cbz	w1, 8a1c <*ABS*+0x10@plt+0x1cbc>
    8938:	add	x27, sp, #0x90
    893c:	mov	x21, #0x0                   	// #0
    8940:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8944:	add	x0, x0, #0xcc0
    8948:	ldr	x1, [sp, #104]
    894c:	ldr	x20, [x0, #32]
    8950:	ldr	x19, [x1, x21, lsl #3]
    8954:	str	xzr, [sp, #136]
    8958:	sub	x19, x19, #0x4
    895c:	cbz	x20, 8a24 <*ABS*+0x10@plt+0x1cc4>
    8960:	bl	24d68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
    8964:	str	xzr, [sp, #144]
    8968:	mov	x3, x28
    896c:	mov	x2, x27
    8970:	mov	x1, x19
    8974:	bl	251f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4618>
    8978:	tst	w0, #0xff
    897c:	b.eq	89a0 <*ABS*+0x10@plt+0x1c40>  // b.none
    8980:	ldr	x1, [sp, #144]
    8984:	cbz	x1, 89a0 <*ABS*+0x10@plt+0x1c40>
    8988:	add	x3, sp, #0x88
    898c:	mov	x2, x22
    8990:	mov	x0, x20
    8994:	bl	23d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31a0>
    8998:	tst	w0, #0xff
    899c:	b.ne	8a08 <*ABS*+0x10@plt+0x1ca8>  // b.any
    89a0:	bl	24d68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
    89a4:	add	x23, sp, #0x88
    89a8:	mov	x1, x19
    89ac:	bl	25298 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46b8>
    89b0:	mov	x19, x0
    89b4:	mov	x26, x0
    89b8:	cbnz	x0, 89e4 <*ABS*+0x10@plt+0x1c84>
    89bc:	b	8a00 <*ABS*+0x10@plt+0x1ca0>
    89c0:	ldr	x1, [x26, #56]
    89c4:	mov	x3, x23
    89c8:	mov	x2, x22
    89cc:	mov	x0, x20
    89d0:	bl	23d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31a0>
    89d4:	tst	w0, #0xff
    89d8:	b.ne	8a00 <*ABS*+0x10@plt+0x1ca0>  // b.any
    89dc:	ldr	x26, [x26]
    89e0:	cbz	x26, 8a00 <*ABS*+0x10@plt+0x1ca0>
    89e4:	ldr	x1, [x26, #40]
    89e8:	mov	x3, x23
    89ec:	mov	x2, x22
    89f0:	mov	x0, x20
    89f4:	bl	23d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31a0>
    89f8:	tst	w0, #0xff
    89fc:	b.eq	89c0 <*ABS*+0x10@plt+0x1c60>  // b.none
    8a00:	mov	x0, x19
    8a04:	bl	24180 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35a0>
    8a08:	ldr	x0, [sp, #136]
    8a0c:	cbnz	x0, 8a44 <*ABS*+0x10@plt+0x1ce4>
    8a10:	add	x21, x21, #0x1
    8a14:	cmp	x21, x25
    8a18:	b.ne	8940 <*ABS*+0x10@plt+0x1be0>  // b.any
    8a1c:	ldr	x4, [x24, #24]
    8a20:	b	8a98 <*ABS*+0x10@plt+0x1d38>
    8a24:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8a28:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8a2c:	add	x2, x2, #0xa28
    8a30:	add	x0, x0, #0x188
    8a34:	mov	x4, #0x0                   	// #0
    8a38:	mov	x3, #0x0                   	// #0
    8a3c:	mov	w1, #0x5f                  	// #95
    8a40:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    8a44:	ldr	x4, [x24, #24]
    8a48:	ldr	x2, [sp, #112]
    8a4c:	ldr	x1, [x24, #8]
    8a50:	cmp	x4, x2
    8a54:	b.ls	8ae4 <*ABS*+0x10@plt+0x1d84>  // b.plast
    8a58:	ldr	x2, [sp, #120]
    8a5c:	ldr	w3, [x0, #16]
    8a60:	add	x1, x1, x2
    8a64:	ldr	x2, [x0, #24]
    8a68:	ldr	x4, [x1, #16]
    8a6c:	add	x2, x2, x4
    8a70:	str	x2, [x0, #24]
    8a74:	ldr	x2, [sp, #112]
    8a78:	ldr	x4, [x24, #24]
    8a7c:	cmp	x4, x2
    8a80:	b.ls	8ac8 <*ABS*+0x10@plt+0x1d68>  // b.plast
    8a84:	ldr	x5, [x1, #8]
    8a88:	mov	w2, #0x1                   	// #1
    8a8c:	add	w3, w3, w5
    8a90:	str	w3, [x0, #16]
    8a94:	strb	w2, [x1, #29]
    8a98:	ldr	x0, [sp, #112]
    8a9c:	add	x0, x0, #0x1
    8aa0:	str	x0, [sp, #112]
    8aa4:	cmp	x4, x0
    8aa8:	b.hi	8910 <*ABS*+0x10@plt+0x1bb0>  // b.pmore
    8aac:	ldp	x21, x22, [sp, #16]
    8ab0:	ldp	x25, x26, [sp, #48]
    8ab4:	ldp	x27, x28, [sp, #64]
    8ab8:	ldp	x23, x24, [sp, #32]
    8abc:	ldr	x30, [sp, #80]
    8ac0:	ldp	x19, x20, [sp], #160
    8ac4:	ret
    8ac8:	mov	x3, x2
    8acc:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8ad0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8ad4:	add	x2, x2, #0xe0
    8ad8:	add	x0, x0, #0xf8
    8adc:	mov	w1, #0x1b6                 	// #438
    8ae0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    8ae4:	ldr	x3, [sp, #112]
    8ae8:	b	8acc <*ABS*+0x10@plt+0x1d6c>
    8aec:	nop
    8af0:	mov	x1, x0
    8af4:	ldr	x0, [x0, #24]
    8af8:	cbz	x0, 8b20 <*ABS*+0x10@plt+0x1dc0>
    8afc:	ldr	x1, [x1, #8]
    8b00:	add	x3, x1, x0, lsl #5
    8b04:	mov	x0, #0x0                   	// #0
    8b08:	ldrb	w2, [x1, #29]
    8b0c:	add	x1, x1, #0x20
    8b10:	cmp	w2, #0x0
    8b14:	cinc	x0, x0, eq  // eq = none
    8b18:	cmp	x3, x1
    8b1c:	b.ne	8b08 <*ABS*+0x10@plt+0x1da8>  // b.any
    8b20:	ret
    8b24:	nop

0000000000008b28 <__lsan_ignore_object@@Base>:
    8b28:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8b2c:	stp	x19, x20, [sp, #-32]!
    8b30:	mov	x19, x0
    8b34:	ldr	x2, [x2, #4040]
    8b38:	ldrb	w0, [x2, #57]
    8b3c:	str	x30, [sp, #16]
    8b40:	cbnz	w0, 8b50 <__lsan_ignore_object@@Base+0x28>
    8b44:	ldr	x30, [sp, #16]
    8b48:	ldp	x19, x20, [sp], #32
    8b4c:	ret
    8b50:	adrp	x20, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8b54:	add	x0, x20, #0xcc0
    8b58:	add	x0, x0, #0xe0
    8b5c:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
    8b60:	mov	x0, x19
    8b64:	bl	b460 <__sanitizer_print_stack_trace@@Base+0x9c8>
    8b68:	cmp	w0, #0x2
    8b6c:	b.eq	8bd4 <__lsan_ignore_object@@Base+0xac>  // b.none
    8b70:	cmp	w0, #0x1
    8b74:	b.ne	8bac <__lsan_ignore_object@@Base+0x84>  // b.any
    8b78:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8b7c:	ldr	x0, [x0, #3680]
    8b80:	ldr	w0, [x0]
    8b84:	cbz	w0, 8b98 <__lsan_ignore_object@@Base+0x70>
    8b88:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8b8c:	mov	x1, x19
    8b90:	add	x0, x0, #0xa80
    8b94:	bl	1e648 <OnPrint@@Base+0x398>
    8b98:	add	x0, x20, #0xcc0
    8b9c:	ldr	x30, [sp, #16]
    8ba0:	add	x0, x0, #0xe0
    8ba4:	ldp	x19, x20, [sp], #32
    8ba8:	b	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
    8bac:	cbnz	w0, 8b98 <__lsan_ignore_object@@Base+0x70>
    8bb0:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8bb4:	ldr	x0, [x0, #3680]
    8bb8:	ldr	w0, [x0]
    8bbc:	cbz	w0, 8b98 <__lsan_ignore_object@@Base+0x70>
    8bc0:	mov	x1, x19
    8bc4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8bc8:	add	x0, x0, #0xac8
    8bcc:	bl	1e648 <OnPrint@@Base+0x398>
    8bd0:	b	8b98 <__lsan_ignore_object@@Base+0x70>
    8bd4:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8bd8:	ldr	x0, [x0, #3680]
    8bdc:	ldr	w0, [x0]
    8be0:	cbz	w0, 8b98 <__lsan_ignore_object@@Base+0x70>
    8be4:	mov	x1, x19
    8be8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8bec:	add	x0, x0, #0xa48
    8bf0:	bl	1e648 <OnPrint@@Base+0x398>
    8bf4:	b	8b98 <__lsan_ignore_object@@Base+0x70>

0000000000008bf8 <__lsan_register_root_region@@Base>:
    8bf8:	stp	x19, x20, [sp, #-80]!
    8bfc:	adrp	x20, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8c00:	add	x19, x20, #0xcc0
    8c04:	stp	x21, x22, [sp, #16]
    8c08:	mov	x21, x0
    8c0c:	mov	x22, x1
    8c10:	add	x0, x19, #0xe0
    8c14:	stp	x23, x24, [sp, #32]
    8c18:	str	x30, [sp, #48]
    8c1c:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
    8c20:	ldr	x19, [x19, #144]
    8c24:	cbz	x19, 8d70 <__lsan_register_root_region@@Base+0x178>
    8c28:	stp	x21, x22, [sp, #64]
    8c2c:	ldr	x4, [x19, #8]
    8c30:	ldr	x3, [x19, #16]
    8c34:	lsr	x4, x4, #4
    8c38:	cmp	x3, x4
    8c3c:	b.hi	8d90 <__lsan_register_root_region@@Base+0x198>  // b.pmore
    8c40:	add	x23, x3, #0x1
    8c44:	b.eq	8cc4 <__lsan_register_root_region@@Base+0xcc>  // b.none
    8c48:	ldr	x24, [x19]
    8c4c:	str	x23, [x19, #16]
    8c50:	add	x0, x24, x3, lsl #4
    8c54:	add	x1, sp, #0x40
    8c58:	mov	x2, #0x10                  	// #16
    8c5c:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    8c60:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8c64:	ldr	x0, [x0, #3680]
    8c68:	ldr	w0, [x0]
    8c6c:	cbnz	w0, 8c90 <__lsan_register_root_region@@Base+0x98>
    8c70:	add	x0, x20, #0xcc0
    8c74:	add	x0, x0, #0xe0
    8c78:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
    8c7c:	ldp	x21, x22, [sp, #16]
    8c80:	ldp	x23, x24, [sp, #32]
    8c84:	ldr	x30, [sp, #48]
    8c88:	ldp	x19, x20, [sp], #80
    8c8c:	ret
    8c90:	mov	x2, x22
    8c94:	mov	x1, x21
    8c98:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8c9c:	add	x0, x0, #0xb18
    8ca0:	bl	1e648 <OnPrint@@Base+0x398>
    8ca4:	add	x0, x20, #0xcc0
    8ca8:	add	x0, x0, #0xe0
    8cac:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
    8cb0:	ldp	x21, x22, [sp, #16]
    8cb4:	ldp	x23, x24, [sp, #32]
    8cb8:	ldr	x30, [sp, #48]
    8cbc:	ldp	x19, x20, [sp], #80
    8cc0:	ret
    8cc4:	tst	x3, x23
    8cc8:	b.eq	8d04 <__lsan_register_root_region@@Base+0x10c>  // b.none
    8ccc:	clz	x4, x23
    8cd0:	mov	w0, #0x3f                  	// #63
    8cd4:	sub	w0, w0, w4
    8cd8:	mov	x2, #0x1                   	// #1
    8cdc:	add	w4, w0, #0x1
    8ce0:	lsl	x4, x2, x4
    8ce4:	cmp	x23, x4
    8ce8:	b.cs	8ddc <__lsan_register_root_region@@Base+0x1e4>  // b.hs, b.nlast
    8cec:	lsl	x0, x2, x0
    8cf0:	cmp	x23, x0
    8cf4:	b.ls	8df8 <__lsan_register_root_region@@Base+0x200>  // b.plast
    8cf8:	cmp	x3, x4
    8cfc:	b.hi	8da8 <__lsan_register_root_region@@Base+0x1b0>  // b.pmore
    8d00:	mov	x23, x4
    8d04:	adrp	x24, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8d08:	lsl	x23, x23, #4
    8d0c:	ldr	x24, [x24, #4000]
    8d10:	ldr	x0, [x24]
    8d14:	cbz	x0, 8dc0 <__lsan_register_root_region@@Base+0x1c8>
    8d18:	sub	x1, x0, #0x1
    8d1c:	tst	x1, x0
    8d20:	b.ne	8dcc <__lsan_register_root_region@@Base+0x1d4>  // b.any
    8d24:	add	x23, x23, x1
    8d28:	neg	x0, x0
    8d2c:	and	x23, x23, x0
    8d30:	mov	w2, #0x0                   	// #0
    8d34:	mov	x0, x23
    8d38:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8d3c:	add	x1, x1, #0x258
    8d40:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    8d44:	ldr	x1, [x19]
    8d48:	mov	x24, x0
    8d4c:	ldr	x2, [x19, #16]
    8d50:	lsl	x2, x2, #4
    8d54:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    8d58:	ldp	x0, x1, [x19]
    8d5c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    8d60:	stp	x24, x23, [x19]
    8d64:	ldr	x3, [x19, #16]
    8d68:	add	x23, x3, #0x1
    8d6c:	b	8c4c <__lsan_register_root_region@@Base+0x54>
    8d70:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8d74:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8d78:	add	x2, x2, #0xb00
    8d7c:	add	x0, x0, #0x188
    8d80:	mov	x4, #0x0                   	// #0
    8d84:	mov	x3, #0x0                   	// #0
    8d88:	mov	w1, #0x336                 	// #822
    8d8c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    8d90:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8d94:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8d98:	add	x2, x2, #0x1b8
    8d9c:	add	x0, x0, #0xf8
    8da0:	mov	w1, #0x1be                 	// #446
    8da4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    8da8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8dac:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8db0:	add	x2, x2, #0x220
    8db4:	add	x0, x0, #0xf8
    8db8:	mov	w1, #0x1fd                 	// #509
    8dbc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    8dc0:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    8dc4:	str	x0, [x24]
    8dc8:	b	8d18 <__lsan_register_root_region@@Base+0x120>
    8dcc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8dd0:	add	x0, x0, #0x240
    8dd4:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
    8dd8:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    8ddc:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8de0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8de4:	mov	x3, x23
    8de8:	add	x2, x2, #0x1d8
    8dec:	add	x0, x0, #0xf8
    8df0:	mov	w1, #0x17b                 	// #379
    8df4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    8df8:	mov	x4, x0
    8dfc:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8e00:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8e04:	mov	x3, x23
    8e08:	add	x2, x2, #0x200
    8e0c:	add	x0, x0, #0xf8
    8e10:	mov	w1, #0x17c                 	// #380
    8e14:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

0000000000008e18 <__lsan_unregister_root_region@@Base>:
    8e18:	stp	x19, x20, [sp, #-48]!
    8e1c:	mov	x19, x0
    8e20:	mov	x20, x1
    8e24:	stp	x21, x22, [sp, #16]
    8e28:	adrp	x21, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8e2c:	add	x22, x21, #0xcc0
    8e30:	add	x0, x22, #0xe0
    8e34:	str	x30, [sp, #32]
    8e38:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
    8e3c:	ldr	x0, [x22, #144]
    8e40:	cbz	x0, 8eec <__lsan_unregister_root_region@@Base+0xd4>
    8e44:	ldr	x7, [x0, #16]
    8e48:	cbz	x7, 8f2c <__lsan_unregister_root_region@@Base+0x114>
    8e4c:	ldr	x1, [x0]
    8e50:	mov	x4, #0x0                   	// #0
    8e54:	mov	x3, x1
    8e58:	b	8e6c <__lsan_unregister_root_region@@Base+0x54>
    8e5c:	add	x4, x4, #0x1
    8e60:	add	x3, x3, #0x10
    8e64:	cmp	x7, x4
    8e68:	b.eq	8f2c <__lsan_unregister_root_region@@Base+0x114>  // b.none
    8e6c:	ldp	x5, x6, [x3]
    8e70:	cmp	x6, x20
    8e74:	ccmp	x5, x19, #0x0, eq  // eq = none
    8e78:	b.ne	8e5c <__lsan_unregister_root_region@@Base+0x44>  // b.any
    8e7c:	add	x7, x1, x7, lsl #4
    8e80:	ldp	x4, x5, [x7, #-16]
    8e84:	stp	x4, x5, [x3]
    8e88:	ldr	x1, [x0, #16]
    8e8c:	cbz	x1, 8f0c <__lsan_unregister_root_region@@Base+0xf4>
    8e90:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8e94:	sub	x1, x1, #0x1
    8e98:	str	x1, [x0, #16]
    8e9c:	ldr	x0, [x2, #3680]
    8ea0:	ldr	w0, [x0]
    8ea4:	cbnz	w0, 8ec0 <__lsan_unregister_root_region@@Base+0xa8>
    8ea8:	add	x0, x21, #0xcc0
    8eac:	ldp	x21, x22, [sp, #16]
    8eb0:	add	x0, x0, #0xe0
    8eb4:	ldr	x30, [sp, #32]
    8eb8:	ldp	x19, x20, [sp], #48
    8ebc:	b	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
    8ec0:	mov	x2, x20
    8ec4:	mov	x1, x19
    8ec8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8ecc:	add	x0, x0, #0xb60
    8ed0:	bl	1e648 <OnPrint@@Base+0x398>
    8ed4:	add	x0, x21, #0xcc0
    8ed8:	ldp	x21, x22, [sp, #16]
    8edc:	add	x0, x0, #0xe0
    8ee0:	ldr	x30, [sp, #32]
    8ee4:	ldp	x19, x20, [sp], #48
    8ee8:	b	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
    8eec:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8ef0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8ef4:	add	x2, x2, #0xb00
    8ef8:	add	x0, x0, #0x188
    8efc:	mov	x4, #0x0                   	// #0
    8f00:	mov	x3, #0x0                   	// #0
    8f04:	mov	w1, #0x341                 	// #833
    8f08:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    8f0c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8f10:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8f14:	add	x2, x2, #0xb48
    8f18:	add	x0, x0, #0xf8
    8f1c:	mov	x4, #0x0                   	// #0
    8f20:	mov	x3, #0x0                   	// #0
    8f24:	mov	w1, #0x1ca                 	// #458
    8f28:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    8f2c:	mov	x2, x20
    8f30:	mov	x1, x19
    8f34:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8f38:	add	x0, x0, #0xb90
    8f3c:	bl	1e648 <OnPrint@@Base+0x398>
    8f40:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    8f44:	nop

0000000000008f48 <__lsan_disable@@Base>:
    8f48:	b	a490 <__lsan_do_recoverable_leak_check@@Base+0x580>
    8f4c:	nop

0000000000008f50 <__lsan_enable@@Base>:
    8f50:	b	a4b0 <__lsan_do_recoverable_leak_check@@Base+0x5a0>
    8f54:	nop
    8f58:	stp	x19, x20, [sp, #-368]!
    8f5c:	stp	x21, x22, [sp, #16]
    8f60:	stp	x23, x24, [sp, #32]
    8f64:	stp	x25, x26, [sp, #48]
    8f68:	stp	x27, x28, [sp, #64]
    8f6c:	str	x30, [sp, #80]
    8f70:	cbz	x1, 9610 <__lsan_enable@@Base+0x6c0>
    8f74:	mov	x22, x1
    8f78:	ldrb	w1, [x1]
    8f7c:	cbnz	w1, 9690 <__lsan_enable@@Base+0x740>
    8f80:	ldr	x1, [x0]
    8f84:	mov	x19, x0
    8f88:	ldr	x1, [x1, #16]
    8f8c:	blr	x1
    8f90:	stp	xzr, xzr, [sp, #288]
    8f94:	mov	x21, x0
    8f98:	str	xzr, [sp, #304]
    8f9c:	cbnz	x0, 93f4 <__lsan_enable@@Base+0x4a4>
    8fa0:	mov	x20, #0x0                   	// #0
    8fa4:	str	x21, [sp, #304]
    8fa8:	b	8fc0 <__lsan_enable@@Base+0x70>
    8fac:	mov	x1, x20
    8fb0:	mov	x0, x19
    8fb4:	blr	x2
    8fb8:	str	x0, [x21, x20, lsl #3]
    8fbc:	add	x20, x20, #0x1
    8fc0:	ldr	x1, [x19]
    8fc4:	mov	x0, x19
    8fc8:	ldr	x1, [x1, #16]
    8fcc:	blr	x1
    8fd0:	cmp	x0, x20
    8fd4:	b.ls	900c <__lsan_enable@@Base+0xbc>  // b.plast
    8fd8:	ldr	x0, [x19]
    8fdc:	ldr	x4, [sp, #304]
    8fe0:	ldr	x2, [x0, #24]
    8fe4:	cmp	x20, x4
    8fe8:	ldr	x21, [sp, #288]
    8fec:	b.cc	8fac <__lsan_enable@@Base+0x5c>  // b.lo, b.ul, b.last
    8ff0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8ff4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    8ff8:	mov	x3, x20
    8ffc:	add	x2, x2, #0xe0
    9000:	add	x0, x0, #0xf8
    9004:	mov	w1, #0x1b6                 	// #438
    9008:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    900c:	ldr	x0, [sp, #288]
    9010:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9014:	ldr	x1, [sp, #304]
    9018:	mov	w2, #0x0                   	// #0
    901c:	mov	x20, x3
    9020:	str	x3, [sp, #112]
    9024:	add	x26, sp, #0x120
    9028:	bl	a088 <__lsan_do_recoverable_leak_check@@Base+0x178>
    902c:	bl	10ba8 <_ZdaPvmSt11align_val_t@@Base+0x6f8>
    9030:	mov	x2, x26
    9034:	adrp	x1, 6000 <_Unwind_Backtrace@plt-0x650>
    9038:	add	x1, x1, #0xf28
    903c:	bl	27520 <__sanitizer_set_death_callback@@Base+0x718>
    9040:	ldp	x0, x1, [sp, #288]
    9044:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    9048:	stp	xzr, xzr, [sp, #232]
    904c:	ldr	x20, [x20, #4000]
    9050:	str	xzr, [sp, #248]
    9054:	ldr	x0, [x20]
    9058:	cbz	x0, 9484 <__lsan_enable@@Base+0x534>
    905c:	sub	x24, x0, #0x1
    9060:	ands	x24, x24, x0
    9064:	b.ne	95b0 <__lsan_enable@@Base+0x660>  // b.any
    9068:	add	x21, x0, #0x7
    906c:	neg	x0, x0
    9070:	and	x21, x21, x0
    9074:	mov	w2, #0x0                   	// #0
    9078:	mov	x0, x21
    907c:	adrp	x20, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9080:	add	x1, x20, #0x258
    9084:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    9088:	ldr	x1, [sp, #232]
    908c:	mov	x23, x0
    9090:	ldr	x2, [sp, #248]
    9094:	add	x25, sp, #0xe8
    9098:	lsl	x2, x2, #3
    909c:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    90a0:	ldp	x0, x1, [sp, #232]
    90a4:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    90a8:	stp	x23, x21, [sp, #232]
    90ac:	mov	x1, x25
    90b0:	adrp	x0, 7000 <*ABS*+0x10@plt+0x2a0>
    90b4:	add	x0, x0, #0x220
    90b8:	bl	c0f0 <__sanitizer_get_allocated_size@@Base+0x5c0>
    90bc:	mov	x0, x25
    90c0:	bl	a6f0 <__lsan_do_recoverable_leak_check@@Base+0x7e0>
    90c4:	ldr	x1, [x19]
    90c8:	mov	x0, x19
    90cc:	ldr	x1, [x1, #8]
    90d0:	blr	x1
    90d4:	str	x0, [sp, #128]
    90d8:	cbnz	x0, 9584 <__lsan_enable@@Base+0x634>
    90dc:	mov	x23, #0x0                   	// #0
    90e0:	mov	x27, #0x0                   	// #0
    90e4:	str	xzr, [sp, #144]
    90e8:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    90ec:	add	x1, x1, #0xc20
    90f0:	str	x1, [sp, #120]
    90f4:	add	x0, x27, x23
    90f8:	ldr	x1, [x19]
    90fc:	str	x0, [sp, #152]
    9100:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9104:	add	x0, x0, #0xd60
    9108:	str	x0, [sp, #136]
    910c:	mov	x23, #0x0                   	// #0
    9110:	ldr	x1, [x1, #16]
    9114:	mov	x0, x19
    9118:	adrp	x21, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    911c:	blr	x1
    9120:	cmp	x0, x23
    9124:	b.ls	92c0 <__lsan_enable@@Base+0x370>  // b.plast
    9128:	ldr	x2, [x19]
    912c:	mov	x1, x23
    9130:	mov	x0, x19
    9134:	ldr	x2, [x2, #24]
    9138:	blr	x2
    913c:	mov	x20, x0
    9140:	add	x1, x21, #0xcc0
    9144:	ldrb	w0, [x1, #21]
    9148:	cbnz	w0, 95e4 <__lsan_enable@@Base+0x694>
    914c:	add	x7, sp, #0x100
    9150:	add	x6, sp, #0xe0
    9154:	add	x5, sp, #0xd8
    9158:	add	x4, sp, #0xd0
    915c:	add	x3, sp, #0xc8
    9160:	add	x2, sp, #0xc0
    9164:	add	x1, sp, #0xb8
    9168:	mov	x0, x20
    916c:	bl	10ad0 <_ZdaPvmSt11align_val_t@@Base+0x620>
    9170:	tst	w0, #0xff
    9174:	b.eq	95c0 <__lsan_enable@@Base+0x670>  // b.none
    9178:	ldr	x4, [x19]
    917c:	mov	x3, x26
    9180:	mov	x2, x27
    9184:	mov	x1, x23
    9188:	mov	x0, x19
    918c:	ldr	x4, [x4]
    9190:	blr	x4
    9194:	mov	w28, w0
    9198:	cmp	w0, #0x1
    919c:	b.eq	91c0 <__lsan_enable@@Base+0x270>  // b.none
    91a0:	mov	x1, x20
    91a4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    91a8:	add	x0, x0, #0xc60
    91ac:	bl	1e648 <OnPrint@@Base+0x398>
    91b0:	cmn	w28, #0x1
    91b4:	b.eq	92a4 <__lsan_enable@@Base+0x354>  // b.none
    91b8:	ldr	x0, [sp, #184]
    91bc:	str	x0, [sp, #288]
    91c0:	add	x0, x21, #0xcc0
    91c4:	cmp	w28, #0x0
    91c8:	cset	w1, ne  // ne = any
    91cc:	ldrb	w0, [x0, #14]
    91d0:	tst	w1, w0
    91d4:	b.ne	95f4 <__lsan_enable@@Base+0x6a4>  // b.any
    91d8:	add	x0, x21, #0xcc0
    91dc:	ldrb	w1, [x0, #13]
    91e0:	cbz	w1, 9234 <__lsan_enable@@Base+0x2e4>
    91e4:	ldrb	w2, [x0, #21]
    91e8:	ldr	x1, [sp, #184]
    91ec:	ldr	x0, [sp, #288]
    91f0:	cbnz	w2, 949c <__lsan_enable@@Base+0x54c>
    91f4:	cmp	x0, x1
    91f8:	b.cc	94e4 <__lsan_enable@@Base+0x594>  // b.lo, b.ul, b.last
    91fc:	ldr	x1, [sp, #192]
    9200:	cmp	x1, x0
    9204:	b.ls	94e4 <__lsan_enable@@Base+0x594>  // b.plast
    9208:	str	x0, [sp, #184]
    920c:	adrp	x3, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9210:	add	x3, x3, #0xd28
    9214:	mov	w4, #0x2                   	// #2
    9218:	mov	x2, x25
    921c:	bl	7870 <*ABS*+0x10@plt+0xb10>
    9220:	adrp	x1, 7000 <*ABS*+0x10@plt+0x2a0>
    9224:	mov	x2, x25
    9228:	add	x1, x1, #0xc38
    922c:	mov	x0, x20
    9230:	bl	10b80 <_ZdaPvmSt11align_val_t@@Base+0x6d0>
    9234:	add	x1, x21, #0xcc0
    9238:	ldrb	w0, [x1, #15]
    923c:	cbz	w0, 92a4 <__lsan_enable@@Base+0x354>
    9240:	ldr	x0, [sp, #200]
    9244:	cbz	x0, 9284 <__lsan_enable@@Base+0x334>
    9248:	ldrb	w2, [x1, #21]
    924c:	ldr	x1, [sp, #208]
    9250:	cbnz	w2, 96b0 <__lsan_enable@@Base+0x760>
    9254:	ldp	x2, x3, [sp, #216]
    9258:	cmp	x2, x3
    925c:	b.eq	9270 <__lsan_enable@@Base+0x320>  // b.none
    9260:	cmp	x1, x2
    9264:	b.cc	9270 <__lsan_enable@@Base+0x320>  // b.lo, b.ul, b.last
    9268:	cmp	x0, x3
    926c:	b.ls	97d4 <__lsan_enable@@Base+0x884>  // b.plast
    9270:	adrp	x3, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9274:	mov	x2, x25
    9278:	add	x3, x3, #0xd40
    927c:	mov	w4, #0x2                   	// #2
    9280:	bl	7870 <*ABS*+0x10@plt+0xb10>
    9284:	ldr	x0, [sp, #256]
    9288:	cbz	x0, 9298 <__lsan_enable@@Base+0x348>
    928c:	bl	282d0 <__sanitizer_set_death_callback@@Base+0x14c8>
    9290:	tst	w0, #0xff
    9294:	b.eq	96dc <__lsan_enable@@Base+0x78c>  // b.none
    9298:	add	x0, x21, #0xcc0
    929c:	ldrb	w0, [x0, #21]
    92a0:	cbnz	w0, 956c <__lsan_enable@@Base+0x61c>
    92a4:	add	x23, x23, #0x1
    92a8:	ldr	x1, [x19]
    92ac:	mov	x0, x19
    92b0:	ldr	x1, [x1, #16]
    92b4:	blr	x1
    92b8:	cmp	x0, x23
    92bc:	b.hi	9128 <__lsan_enable@@Base+0x1d8>  // b.pmore
    92c0:	ldr	x1, [sp, #128]
    92c4:	add	x23, x21, #0xcc0
    92c8:	mov	x0, x27
    92cc:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    92d0:	ldrb	w0, [x23, #16]
    92d4:	cbz	w0, 9358 <__lsan_enable@@Base+0x408>
    92d8:	ldr	x0, [x23, #144]
    92dc:	cbz	x0, 98b8 <__lsan_enable@@Base+0x968>
    92e0:	ldr	x1, [x0, #16]
    92e4:	cbz	x1, 9358 <__lsan_enable@@Base+0x408>
    92e8:	add	x20, sp, #0x100
    92ec:	nop
    92f0:	ldr	x19, [x0]
    92f4:	mov	w1, #0x1                   	// #1
    92f8:	mov	x0, x20
    92fc:	bl	1ea18 <OnPrint@@Base+0x768>
    9300:	stp	xzr, xzr, [sp, #312]
    9304:	add	x19, x19, x24, lsl #4
    9308:	str	xzr, [sp, #360]
    930c:	b	9328 <__lsan_enable@@Base+0x3d8>
    9310:	ldp	x2, x3, [sp, #288]
    9314:	mov	x1, x19
    9318:	ldr	x4, [sp, #328]
    931c:	mov	x0, x25
    9320:	and	w4, w4, #0x1
    9324:	bl	7e50 <*ABS*+0x10@plt+0x10f0>
    9328:	mov	x1, x26
    932c:	mov	x0, x20
    9330:	bl	1f018 <OnPrint@@Base+0xd68>
    9334:	tst	w0, #0xff
    9338:	b.ne	9310 <__lsan_enable@@Base+0x3c0>  // b.any
    933c:	mov	x0, x20
    9340:	bl	1e8e8 <OnPrint@@Base+0x638>
    9344:	ldr	x0, [x23, #144]
    9348:	add	x24, x24, #0x1
    934c:	ldr	x1, [x0, #16]
    9350:	cmp	x1, x24
    9354:	b.hi	92f0 <__lsan_enable@@Base+0x3a0>  // b.pmore
    9358:	mov	x0, x25
    935c:	bl	7cc8 <*ABS*+0x10@plt+0xf68>
    9360:	ldr	x4, [sp, #248]
    9364:	cbnz	x4, 9878 <__lsan_enable@@Base+0x928>
    9368:	mov	x0, x25
    936c:	bl	7f08 <*ABS*+0x10@plt+0x11a8>
    9370:	add	x0, x21, #0xcc0
    9374:	ldrb	w0, [x0, #20]
    9378:	cbnz	w0, 97fc <__lsan_enable@@Base+0x8ac>
    937c:	add	x21, x21, #0xcc0
    9380:	mov	x0, x25
    9384:	bl	a728 <__lsan_do_recoverable_leak_check@@Base+0x818>
    9388:	mov	x0, x25
    938c:	bl	7cc8 <*ABS*+0x10@plt+0xf68>
    9390:	ldrb	w0, [x21, #20]
    9394:	cbnz	w0, 97ec <__lsan_enable@@Base+0x89c>
    9398:	mov	x1, #0x0                   	// #0
    939c:	adrp	x0, 7000 <*ABS*+0x10@plt+0x2a0>
    93a0:	add	x0, x0, #0xc48
    93a4:	bl	c0f0 <__sanitizer_get_allocated_size@@Base+0x5c0>
    93a8:	ldp	x0, x1, [sp, #232]
    93ac:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    93b0:	add	x1, x22, #0x8
    93b4:	adrp	x0, 8000 <*ABS*+0x10@plt+0x12a0>
    93b8:	add	x0, x0, #0x3d0
    93bc:	bl	c0f0 <__sanitizer_get_allocated_size@@Base+0x5c0>
    93c0:	mov	x1, #0x0                   	// #0
    93c4:	adrp	x0, 6000 <_Unwind_Backtrace@plt-0x650>
    93c8:	add	x0, x0, #0xed0
    93cc:	bl	c0f0 <__sanitizer_get_allocated_size@@Base+0x5c0>
    93d0:	mov	w0, #0x1                   	// #1
    93d4:	strb	w0, [x22]
    93d8:	ldp	x21, x22, [sp, #16]
    93dc:	ldp	x23, x24, [sp, #32]
    93e0:	ldp	x25, x26, [sp, #48]
    93e4:	ldp	x27, x28, [sp, #64]
    93e8:	ldr	x30, [sp, #80]
    93ec:	ldp	x19, x20, [sp], #368
    93f0:	ret
    93f4:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    93f8:	str	x0, [sp, #112]
    93fc:	lsl	x24, x21, #3
    9400:	ldr	x20, [x0, #4000]
    9404:	ldr	x0, [x20]
    9408:	cbz	x0, 9490 <__lsan_enable@@Base+0x540>
    940c:	sub	x1, x0, #0x1
    9410:	tst	x0, x1
    9414:	b.ne	95b0 <__lsan_enable@@Base+0x660>  // b.any
    9418:	add	x1, x24, x1
    941c:	neg	x0, x0
    9420:	and	x23, x1, x0
    9424:	mov	w2, #0x0                   	// #0
    9428:	mov	x0, x23
    942c:	adrp	x20, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9430:	add	x1, x20, #0x258
    9434:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    9438:	ldr	x1, [sp, #288]
    943c:	mov	x25, x0
    9440:	ldr	x2, [sp, #304]
    9444:	lsl	x2, x2, #3
    9448:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    944c:	ldp	x0, x1, [sp, #288]
    9450:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    9454:	stp	x25, x23, [sp, #288]
    9458:	ldr	x0, [sp, #304]
    945c:	cmp	x21, x0
    9460:	b.ls	8fa0 <__lsan_enable@@Base+0x50>  // b.plast
    9464:	cmp	x21, x23, lsr #3
    9468:	b.hi	9630 <__lsan_enable@@Base+0x6e0>  // b.pmore
    946c:	sub	x2, x21, x0
    9470:	mov	w1, #0x0                   	// #0
    9474:	add	x0, x25, x0, lsl #3
    9478:	lsl	x2, x2, #3
    947c:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
    9480:	b	8fa0 <__lsan_enable@@Base+0x50>
    9484:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    9488:	str	x0, [x20]
    948c:	b	905c <__lsan_enable@@Base+0x10c>
    9490:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    9494:	str	x0, [x20]
    9498:	b	940c <__lsan_enable@@Base+0x4bc>
    949c:	ldr	x2, [sp, #192]
    94a0:	mov	x3, x0
    94a4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    94a8:	add	x0, x0, #0xca0
    94ac:	bl	1e648 <OnPrint@@Base+0x398>
    94b0:	ldr	x1, [sp, #184]
    94b4:	ldr	x0, [sp, #288]
    94b8:	cmp	x0, x1
    94bc:	b.cc	94cc <__lsan_enable@@Base+0x57c>  // b.lo, b.ul, b.last
    94c0:	ldr	x1, [sp, #192]
    94c4:	cmp	x0, x1
    94c8:	b.cc	9208 <__lsan_enable@@Base+0x2b8>  // b.lo, b.ul, b.last
    94cc:	add	x0, x21, #0xcc0
    94d0:	ldrb	w0, [x0, #21]
    94d4:	cbz	w0, 94e4 <__lsan_enable@@Base+0x594>
    94d8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    94dc:	add	x0, x0, #0xcc0
    94e0:	bl	1e648 <OnPrint@@Base+0x398>
    94e4:	ldr	x0, [sp, #112]
    94e8:	ldr	x28, [x0, #4000]
    94ec:	ldr	x0, [x28]
    94f0:	str	x0, [sp, #104]
    94f4:	cbz	x0, 96cc <__lsan_enable@@Base+0x77c>
    94f8:	ldp	x0, x1, [sp, #184]
    94fc:	mov	w28, #0x0                   	// #0
    9500:	cmp	x0, x1
    9504:	b.cc	9528 <__lsan_enable@@Base+0x5d8>  // b.lo, b.ul, b.last
    9508:	b	9540 <__lsan_enable@@Base+0x5f0>
    950c:	ldr	x2, [sp, #104]
    9510:	add	w28, w28, #0x1
    9514:	ldr	x1, [sp, #192]
    9518:	add	x0, x2, x0
    951c:	str	x0, [sp, #184]
    9520:	cmp	x1, x0
    9524:	b.ls	9540 <__lsan_enable@@Base+0x5f0>  // b.plast
    9528:	mov	x1, #0x1                   	// #1
    952c:	bl	1d0b8 <__sanitizer_set_report_fd@@Base+0x5e08>
    9530:	tst	w0, #0xff
    9534:	ldr	x0, [sp, #184]
    9538:	b.eq	950c <__lsan_enable@@Base+0x5bc>  // b.none
    953c:	ldr	x1, [sp, #192]
    9540:	add	x2, x21, #0xcc0
    9544:	ldrb	w2, [x2, #21]
    9548:	cbz	w2, 920c <__lsan_enable@@Base+0x2bc>
    954c:	mov	x3, x1
    9550:	mov	x2, x0
    9554:	mov	w1, w28
    9558:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    955c:	add	x0, x0, #0xcf0
    9560:	bl	1e648 <OnPrint@@Base+0x398>
    9564:	ldp	x0, x1, [sp, #184]
    9568:	b	920c <__lsan_enable@@Base+0x2bc>
    956c:	mov	x1, x20
    9570:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9574:	add	x23, x23, #0x1
    9578:	add	x0, x0, #0xd68
    957c:	bl	1e648 <OnPrint@@Base+0x398>
    9580:	b	92a8 <__lsan_enable@@Base+0x358>
    9584:	ldr	x0, [sp, #112]
    9588:	ldr	x21, [x0, #4000]
    958c:	ldr	x0, [sp, #128]
    9590:	lsl	x23, x0, #3
    9594:	ldr	x0, [x21]
    9598:	cbnz	x0, 95a4 <__lsan_enable@@Base+0x654>
    959c:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    95a0:	str	x0, [x21]
    95a4:	sub	x1, x0, #0x1
    95a8:	tst	x0, x1
    95ac:	b.eq	9774 <__lsan_enable@@Base+0x824>  // b.none
    95b0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    95b4:	add	x0, x0, #0x240
    95b8:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
    95bc:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    95c0:	add	x0, x21, #0xcc0
    95c4:	ldrb	w0, [x0, #21]
    95c8:	cbz	w0, 92a4 <__lsan_enable@@Base+0x354>
    95cc:	mov	x1, x20
    95d0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    95d4:	add	x23, x23, #0x1
    95d8:	add	x0, x0, #0xc38
    95dc:	bl	1e648 <OnPrint@@Base+0x398>
    95e0:	b	92a8 <__lsan_enable@@Base+0x358>
    95e4:	ldr	x0, [sp, #120]
    95e8:	mov	x1, x20
    95ec:	bl	1e648 <OnPrint@@Base+0x398>
    95f0:	b	914c <__lsan_enable@@Base+0x1fc>
    95f4:	ldp	x0, x1, [sp, #144]
    95f8:	mov	x2, x25
    95fc:	adrp	x3, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9600:	mov	w4, #0x2                   	// #2
    9604:	add	x3, x3, #0xc90
    9608:	bl	7870 <*ABS*+0x10@plt+0xb10>
    960c:	b	91d8 <__lsan_enable@@Base+0x288>
    9610:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9614:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9618:	add	x2, x2, #0xbe8
    961c:	add	x0, x0, #0x188
    9620:	mov	x4, #0x0                   	// #0
    9624:	mov	x3, #0x0                   	// #0
    9628:	mov	w1, #0x22b                 	// #555
    962c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    9630:	ldr	x0, [sp, #112]
    9634:	ldr	x23, [x0, #4000]
    9638:	ldr	x0, [x23]
    963c:	cbz	x0, 980c <__lsan_enable@@Base+0x8bc>
    9640:	sub	x1, x0, #0x1
    9644:	tst	x0, x1
    9648:	b.ne	95b0 <__lsan_enable@@Base+0x660>  // b.any
    964c:	add	x24, x24, x1
    9650:	neg	x0, x0
    9654:	and	x24, x24, x0
    9658:	add	x1, x20, #0x258
    965c:	mov	w2, #0x0                   	// #0
    9660:	mov	x0, x24
    9664:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    9668:	mov	x25, x0
    966c:	ldr	x1, [sp, #288]
    9670:	ldr	x2, [sp, #304]
    9674:	lsl	x2, x2, #3
    9678:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    967c:	ldp	x0, x1, [sp, #288]
    9680:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    9684:	stp	x25, x24, [sp, #288]
    9688:	ldr	x0, [sp, #304]
    968c:	b	946c <__lsan_enable@@Base+0x51c>
    9690:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9694:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9698:	add	x2, x2, #0xc00
    969c:	add	x0, x0, #0x188
    96a0:	mov	x4, #0x0                   	// #0
    96a4:	mov	x3, #0x0                   	// #0
    96a8:	mov	w1, #0x22c                 	// #556
    96ac:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    96b0:	mov	x2, x1
    96b4:	mov	x1, x0
    96b8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    96bc:	add	x0, x0, #0xd30
    96c0:	bl	1e648 <OnPrint@@Base+0x398>
    96c4:	ldp	x0, x1, [sp, #200]
    96c8:	b	9254 <__lsan_enable@@Base+0x304>
    96cc:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    96d0:	str	x0, [x28]
    96d4:	str	x0, [sp, #104]
    96d8:	b	94f8 <__lsan_enable@@Base+0x5a8>
    96dc:	ldr	x4, [sp, #256]
    96e0:	ldr	x0, [x4]
    96e4:	cbz	x0, 92a4 <__lsan_enable@@Base+0x354>
    96e8:	adrp	x28, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    96ec:	add	x20, x21, #0xcc0
    96f0:	add	x0, x28, #0xd48
    96f4:	mov	x28, #0x0                   	// #0
    96f8:	str	x0, [sp, #168]
    96fc:	b	972c <__lsan_enable@@Base+0x7dc>
    9700:	mov	x1, x3
    9704:	mov	x0, x2
    9708:	ldr	x3, [sp, #136]
    970c:	mov	w4, #0x2                   	// #2
    9710:	mov	x2, x25
    9714:	bl	7870 <*ABS*+0x10@plt+0xb10>
    9718:	ldr	x4, [sp, #256]
    971c:	add	x28, x28, #0x1
    9720:	ldr	x0, [x4]
    9724:	cmp	x0, x28
    9728:	b.ls	92a4 <__lsan_enable@@Base+0x354>  // b.plast
    972c:	ldr	x1, [x4, #8]
    9730:	lsl	x0, x28, #4
    9734:	add	x3, x1, x0
    9738:	ldr	x2, [x1, x0]
    973c:	ldr	x3, [x3, #8]
    9740:	add	x3, x2, x3
    9744:	cmp	x2, x3
    9748:	b.cs	971c <__lsan_enable@@Base+0x7cc>  // b.hs, b.nlast
    974c:	ldrb	w0, [x20, #21]
    9750:	cbz	w0, 9700 <__lsan_enable@@Base+0x7b0>
    9754:	ldr	x0, [sp, #168]
    9758:	mov	x1, x28
    975c:	str	x2, [sp, #104]
    9760:	str	x3, [sp, #160]
    9764:	bl	1e648 <OnPrint@@Base+0x398>
    9768:	ldr	x2, [sp, #104]
    976c:	ldr	x3, [sp, #160]
    9770:	b	9700 <__lsan_enable@@Base+0x7b0>
    9774:	add	x1, x23, x1
    9778:	neg	x0, x0
    977c:	and	x21, x1, x0
    9780:	mov	w2, #0x0                   	// #0
    9784:	add	x1, x20, #0x258
    9788:	mov	x0, x21
    978c:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    9790:	mov	x27, x0
    9794:	mov	x2, #0x0                   	// #0
    9798:	mov	x1, #0x0                   	// #0
    979c:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    97a0:	mov	x0, #0x0                   	// #0
    97a4:	mov	x1, #0x0                   	// #0
    97a8:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    97ac:	ldr	x0, [sp, #128]
    97b0:	cmp	x0, x21, lsr #3
    97b4:	b.hi	9818 <__lsan_enable@@Base+0x8c8>  // b.pmore
    97b8:	mov	x2, x23
    97bc:	mov	x0, x27
    97c0:	mov	w1, #0x0                   	// #0
    97c4:	str	x21, [sp, #128]
    97c8:	str	x27, [sp, #144]
    97cc:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
    97d0:	b	90e8 <__lsan_enable@@Base+0x198>
    97d4:	cmp	x0, x2
    97d8:	b.cc	9894 <__lsan_enable@@Base+0x944>  // b.lo, b.ul, b.last
    97dc:	cmp	x3, x1
    97e0:	b.cs	9284 <__lsan_enable@@Base+0x334>  // b.hs, b.nlast
    97e4:	mov	x0, x3
    97e8:	b	9270 <__lsan_enable@@Base+0x320>
    97ec:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    97f0:	add	x0, x0, #0xde0
    97f4:	bl	1e648 <OnPrint@@Base+0x398>
    97f8:	b	9398 <__lsan_enable@@Base+0x448>
    97fc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9800:	add	x0, x0, #0xdb0
    9804:	bl	1e648 <OnPrint@@Base+0x398>
    9808:	b	937c <__lsan_enable@@Base+0x42c>
    980c:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    9810:	str	x0, [x23]
    9814:	b	9640 <__lsan_enable@@Base+0x6f0>
    9818:	ldr	x0, [sp, #112]
    981c:	ldr	x28, [x0, #4000]
    9820:	ldr	x0, [x28]
    9824:	cbz	x0, 98d8 <__lsan_enable@@Base+0x988>
    9828:	sub	x1, x0, #0x1
    982c:	tst	x0, x1
    9830:	b.ne	95b0 <__lsan_enable@@Base+0x660>  // b.any
    9834:	add	x1, x23, x1
    9838:	neg	x0, x0
    983c:	and	x28, x1, x0
    9840:	mov	w2, #0x0                   	// #0
    9844:	add	x1, x20, #0x258
    9848:	mov	x0, x28
    984c:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    9850:	mov	x20, x0
    9854:	mov	x2, #0x0                   	// #0
    9858:	mov	x1, x27
    985c:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    9860:	mov	x1, x21
    9864:	mov	x0, x27
    9868:	mov	x21, x28
    986c:	mov	x27, x20
    9870:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    9874:	b	97b8 <__lsan_enable@@Base+0x868>
    9878:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    987c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9880:	add	x2, x2, #0xd90
    9884:	add	x0, x0, #0x188
    9888:	mov	x3, #0x0                   	// #0
    988c:	mov	w1, #0x1c7                 	// #455
    9890:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    9894:	mov	x1, x2
    9898:	adrp	x3, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    989c:	mov	x2, x25
    98a0:	add	x3, x3, #0xd40
    98a4:	mov	w4, #0x2                   	// #2
    98a8:	bl	7870 <*ABS*+0x10@plt+0xb10>
    98ac:	ldr	x1, [sp, #208]
    98b0:	ldr	x3, [sp, #224]
    98b4:	b	97dc <__lsan_enable@@Base+0x88c>
    98b8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    98bc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    98c0:	add	x2, x2, #0xb00
    98c4:	add	x0, x0, #0x188
    98c8:	mov	x4, #0x0                   	// #0
    98cc:	mov	x3, #0x0                   	// #0
    98d0:	mov	w1, #0x151                 	// #337
    98d4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    98d8:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    98dc:	str	x0, [x28]
    98e0:	b	9828 <__lsan_enable@@Base+0x8d8>
    98e4:	nop
    98e8:	stp	x19, x20, [sp, #-48]!
    98ec:	mov	x20, x0
    98f0:	mov	x19, #0x1388                	// #5000
    98f4:	ldr	x0, [x0, #24]
    98f8:	stp	x21, x22, [sp, #16]
    98fc:	stp	x23, x30, [sp, #32]
    9900:	cmp	x0, x19
    9904:	b.hi	9a18 <__lsan_enable@@Base+0xac8>  // b.pmore
    9908:	mov	x23, x1
    990c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
    9910:	add	x0, x0, #0xc70
    9914:	bl	1e5c0 <OnPrint@@Base+0x310>
    9918:	ldr	x1, [x20, #24]
    991c:	cmp	x1, x19
    9920:	b.eq	9a04 <__lsan_enable@@Base+0xab4>  // b.none
    9924:	ldr	x0, [x20, #8]
    9928:	cbz	x1, 9a38 <__lsan_enable@@Base+0xae8>
    992c:	mov	x2, x0
    9930:	add	x4, x0, x1, lsl #5
    9934:	mov	x22, #0x0                   	// #0
    9938:	ldrb	w3, [x2, #29]
    993c:	add	x2, x2, #0x20
    9940:	cmp	w3, #0x0
    9944:	cinc	x22, x22, eq  // eq = none
    9948:	cmp	x2, x4
    994c:	b.ne	9938 <__lsan_enable@@Base+0x9e8>  // b.any
    9950:	cmp	x23, #0x0
    9954:	ccmp	x23, x22, #0x2, ne  // ne = any
    9958:	b.cs	9974 <__lsan_enable@@Base+0xa24>  // b.hs, b.nlast
    995c:	mov	x1, x23
    9960:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9964:	add	x0, x0, #0xe48
    9968:	bl	1e5c0 <OnPrint@@Base+0x310>
    996c:	ldr	x0, [x20, #8]
    9970:	ldr	x1, [x20, #24]
    9974:	adrp	x2, 6000 <_Unwind_Backtrace@plt-0x650>
    9978:	add	x2, x2, #0xe48
    997c:	bl	a1a0 <__lsan_do_recoverable_leak_check@@Base+0x290>
    9980:	ldr	x3, [x20, #24]
    9984:	mov	x21, x3
    9988:	cbz	x3, 99d0 <__lsan_enable@@Base+0xa80>
    998c:	mov	x21, #0x0                   	// #0
    9990:	mov	x19, #0x0                   	// #0
    9994:	nop
    9998:	ldr	x2, [x20, #8]
    999c:	add	x2, x2, x19, lsl #5
    99a0:	ldrb	w0, [x2, #29]
    99a4:	cbnz	w0, 99c4 <__lsan_enable@@Base+0xa74>
    99a8:	add	x21, x21, #0x1
    99ac:	mov	x1, x19
    99b0:	mov	x0, x20
    99b4:	bl	8598 <*ABS*+0x10@plt+0x1838>
    99b8:	cmp	x23, x21
    99bc:	b.eq	99d0 <__lsan_enable@@Base+0xa80>  // b.none
    99c0:	ldr	x3, [x20, #24]
    99c4:	add	x19, x19, #0x1
    99c8:	cmp	x3, x19
    99cc:	b.hi	9998 <__lsan_enable@@Base+0xa48>  // b.pmore
    99d0:	cmp	x22, x21
    99d4:	b.hi	99e8 <__lsan_enable@@Base+0xa98>  // b.pmore
    99d8:	ldp	x21, x22, [sp, #16]
    99dc:	ldp	x23, x30, [sp, #32]
    99e0:	ldp	x19, x20, [sp], #48
    99e4:	ret
    99e8:	sub	x1, x22, x21
    99ec:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    99f0:	ldp	x21, x22, [sp, #16]
    99f4:	add	x0, x0, #0xe60
    99f8:	ldp	x23, x30, [sp, #32]
    99fc:	ldp	x19, x20, [sp], #48
    9a00:	b	1e5c0 <OnPrint@@Base+0x310>
    9a04:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9a08:	add	x0, x0, #0xe00
    9a0c:	bl	1e5c0 <OnPrint@@Base+0x310>
    9a10:	ldr	x1, [x20, #24]
    9a14:	b	9924 <__lsan_enable@@Base+0x9d4>
    9a18:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9a1c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9a20:	add	x2, x2, #0x9c8
    9a24:	add	x0, x0, #0x188
    9a28:	mov	x4, #0x0                   	// #0
    9a2c:	mov	x3, #0x0                   	// #0
    9a30:	mov	w1, #0x2be                 	// #702
    9a34:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    9a38:	adrp	x2, 6000 <_Unwind_Backtrace@plt-0x650>
    9a3c:	mov	x1, #0x0                   	// #0
    9a40:	add	x2, x2, #0xe48
    9a44:	bl	a1a0 <__lsan_do_recoverable_leak_check@@Base+0x290>
    9a48:	ldr	x3, [x20, #24]
    9a4c:	mov	x22, #0x0                   	// #0
    9a50:	cbnz	x3, 998c <__lsan_enable@@Base+0xa3c>
    9a54:	b	99d8 <__lsan_enable@@Base+0xa88>
    9a58:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9a5c:	stp	x19, x20, [sp, #-160]!
    9a60:	ldr	x0, [x0, #3712]
    9a64:	stp	x23, x24, [sp, #32]
    9a68:	str	x30, [sp, #56]
    9a6c:	cbz	x0, 9a78 <__lsan_enable@@Base+0xb28>
    9a70:	bl	69a0 <__lsan_is_turned_off@plt>
    9a74:	cbnz	w0, 9bf0 <__lsan_enable@@Base+0xca0>
    9a78:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9a7c:	stp	x21, x22, [sp, #16]
    9a80:	bl	10aa0 <_ZdaPvmSt11align_val_t@@Base+0x5f0>
    9a84:	ldr	x19, [x20, #4000]
    9a88:	str	wzr, [sp, #104]
    9a8c:	stp	xzr, xzr, [sp, #112]
    9a90:	ldr	x0, [x19]
    9a94:	str	xzr, [sp, #128]
    9a98:	cbz	x0, 9c08 <__lsan_enable@@Base+0xcb8>
    9a9c:	sub	x1, x0, #0x1
    9aa0:	tst	x1, x0
    9aa4:	b.ne	9dac <__lsan_enable@@Base+0xe5c>  // b.any
    9aa8:	add	x19, x0, #0x1f
    9aac:	neg	x0, x0
    9ab0:	and	x19, x19, x0
    9ab4:	mov	w2, #0x0                   	// #0
    9ab8:	mov	x0, x19
    9abc:	adrp	x21, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9ac0:	add	x1, x21, #0x258
    9ac4:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    9ac8:	ldr	x1, [sp, #112]
    9acc:	mov	x22, x0
    9ad0:	ldr	x2, [sp, #128]
    9ad4:	lsl	x2, x2, #5
    9ad8:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    9adc:	ldp	x0, x1, [sp, #112]
    9ae0:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    9ae4:	stp	x22, x19, [sp, #112]
    9ae8:	ldr	x22, [x20, #4000]
    9aec:	stp	xzr, xzr, [sp, #136]
    9af0:	str	xzr, [sp, #152]
    9af4:	ldr	x0, [x22]
    9af8:	cbz	x0, 9c14 <__lsan_enable@@Base+0xcc4>
    9afc:	sub	x22, x0, #0x1
    9b00:	ands	x22, x22, x0
    9b04:	b.ne	9dac <__lsan_enable@@Base+0xe5c>  // b.any
    9b08:	add	x19, x0, #0x17
    9b0c:	neg	x0, x0
    9b10:	and	x19, x19, x0
    9b14:	add	x1, x21, #0x258
    9b18:	mov	w2, #0x0                   	// #0
    9b1c:	mov	x0, x19
    9b20:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    9b24:	mov	x23, x0
    9b28:	ldr	x2, [sp, #152]
    9b2c:	add	x24, sp, #0x60
    9b30:	ldr	x1, [sp, #136]
    9b34:	add	x2, x2, x2, lsl #1
    9b38:	lsl	x2, x2, #3
    9b3c:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    9b40:	ldp	x0, x1, [sp, #136]
    9b44:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    9b48:	strb	wzr, [sp, #96]
    9b4c:	stp	x23, x19, [sp, #136]
    9b50:	bl	10b88 <_ZdaPvmSt11align_val_t@@Base+0x6d8>
    9b54:	bl	b180 <__sanitizer_print_stack_trace@@Base+0x6e8>
    9b58:	mov	x1, x24
    9b5c:	adrp	x0, 8000 <*ABS*+0x10@plt+0x12a0>
    9b60:	add	x0, x0, #0xf58
    9b64:	bl	a750 <__lsan_do_recoverable_leak_check@@Base+0x840>
    9b68:	bl	b210 <__sanitizer_print_stack_trace@@Base+0x778>
    9b6c:	bl	10b98 <_ZdaPvmSt11align_val_t@@Base+0x6e8>
    9b70:	ldrb	w23, [sp, #96]
    9b74:	cbz	w23, 9e1c <__lsan_enable@@Base+0xecc>
    9b78:	add	x0, x24, #0x8
    9b7c:	bl	88d8 <*ABS*+0x10@plt+0x1b78>
    9b80:	ldr	x2, [sp, #128]
    9b84:	cbz	x2, 9bb4 <__lsan_enable@@Base+0xc64>
    9b88:	ldr	x0, [sp, #112]
    9b8c:	mov	x19, #0x0                   	// #0
    9b90:	add	x2, x0, x2, lsl #5
    9b94:	nop
    9b98:	ldrb	w1, [x0, #29]
    9b9c:	add	x0, x0, #0x20
    9ba0:	cmp	w1, #0x0
    9ba4:	cinc	x19, x19, eq  // eq = none
    9ba8:	cmp	x2, x0
    9bac:	b.ne	9b98 <__lsan_enable@@Base+0xc48>  // b.any
    9bb0:	cbnz	x19, 9d30 <__lsan_enable@@Base+0xde0>
    9bb4:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9bb8:	ldr	x0, [x0, #4040]
    9bbc:	ldrb	w0, [x0, #177]
    9bc0:	cbnz	w0, 9c28 <__lsan_enable@@Base+0xcd8>
    9bc4:	mov	w23, #0x0                   	// #0
    9bc8:	ldp	x0, x1, [sp, #136]
    9bcc:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    9bd0:	ldp	x0, x1, [sp, #112]
    9bd4:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    9bd8:	mov	w0, w23
    9bdc:	ldp	x21, x22, [sp, #16]
    9be0:	ldp	x23, x24, [sp, #32]
    9be4:	ldr	x30, [sp, #56]
    9be8:	ldp	x19, x20, [sp], #160
    9bec:	ret
    9bf0:	mov	w23, #0x0                   	// #0
    9bf4:	mov	w0, w23
    9bf8:	ldp	x23, x24, [sp, #32]
    9bfc:	ldr	x30, [sp, #56]
    9c00:	ldp	x19, x20, [sp], #160
    9c04:	ret
    9c08:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    9c0c:	str	x0, [x19]
    9c10:	b	9a9c <__lsan_enable@@Base+0xb4c>
    9c14:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    9c18:	str	x0, [x22]
    9c1c:	b	9afc <__lsan_enable@@Base+0xbac>
    9c20:	ldr	x25, [sp, #48]
    9c24:	mov	x22, x19
    9c28:	ldr	x20, [x20, #4000]
    9c2c:	stp	xzr, xzr, [sp, #72]
    9c30:	str	xzr, [sp, #88]
    9c34:	ldr	x0, [x20]
    9c38:	cbz	x0, 9dec <__lsan_enable@@Base+0xe9c>
    9c3c:	sub	x19, x0, #0x1
    9c40:	ands	x19, x19, x0
    9c44:	b.ne	9dac <__lsan_enable@@Base+0xe5c>  // b.any
    9c48:	add	x20, x0, #0x7
    9c4c:	neg	x0, x0
    9c50:	and	x20, x20, x0
    9c54:	add	x1, x21, #0x258
    9c58:	mov	w2, #0x0                   	// #0
    9c5c:	mov	x0, x20
    9c60:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    9c64:	mov	x21, x0
    9c68:	ldr	x1, [sp, #72]
    9c6c:	ldr	x2, [sp, #88]
    9c70:	lsl	x2, x2, #3
    9c74:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    9c78:	ldp	x0, x1, [sp, #72]
    9c7c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    9c80:	stp	x21, x20, [sp, #72]
    9c84:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9c88:	ldr	x0, [x0, #3296]
    9c8c:	cbz	x0, 9df8 <__lsan_enable@@Base+0xea8>
    9c90:	add	x1, sp, #0x48
    9c94:	bl	23e70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3290>
    9c98:	ldr	x0, [sp, #88]
    9c9c:	cbz	x0, 9d20 <__lsan_enable@@Base+0xdd0>
    9ca0:	adrp	x21, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9ca4:	add	x1, x21, #0xfa0
    9ca8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
    9cac:	add	x0, x0, #0x78
    9cb0:	bl	1e5c0 <OnPrint@@Base+0x310>
    9cb4:	adrp	x20, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    9cb8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9cbc:	add	x0, x0, #0xfd8
    9cc0:	bl	1e5c0 <OnPrint@@Base+0x310>
    9cc4:	add	x20, x20, #0x18
    9cc8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9ccc:	add	x0, x0, #0xff0
    9cd0:	bl	1e5c0 <OnPrint@@Base+0x310>
    9cd4:	ldr	x0, [sp, #88]
    9cd8:	cbz	x0, 9d10 <__lsan_enable@@Base+0xdc0>
    9cdc:	nop
    9ce0:	ldr	x1, [sp, #72]
    9ce4:	mov	x0, x20
    9ce8:	ldr	x1, [x1, x19, lsl #3]
    9cec:	add	x19, x19, #0x1
    9cf0:	ldr	x3, [x1, #8]
    9cf4:	ldr	x2, [x1, #24]
    9cf8:	ldr	w1, [x1, #16]
    9cfc:	mov	w1, w1
    9d00:	bl	1e5c0 <OnPrint@@Base+0x310>
    9d04:	ldr	x1, [sp, #88]
    9d08:	cmp	x1, x19
    9d0c:	b.hi	9ce0 <__lsan_enable@@Base+0xd90>  // b.pmore
    9d10:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    9d14:	add	x1, x21, #0xfa0
    9d18:	add	x0, x0, #0x10
    9d1c:	bl	1e5c0 <OnPrint@@Base+0x310>
    9d20:	ldp	x0, x1, [sp, #72]
    9d24:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    9d28:	cbz	x22, 9bc4 <__lsan_enable@@Base+0xc74>
    9d2c:	b	9da0 <__lsan_enable@@Base+0xe50>
    9d30:	str	x25, [sp, #48]
    9d34:	bl	20e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a8>
    9d38:	and	w22, w0, #0xff
    9d3c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9d40:	add	x0, x0, #0xf58
    9d44:	bl	1e5c0 <OnPrint@@Base+0x310>
    9d48:	cbz	w22, 9dc0 <__lsan_enable@@Base+0xe70>
    9d4c:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    9d50:	add	x1, x1, #0x28
    9d54:	adrp	x25, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9d58:	add	x0, x25, #0x948
    9d5c:	bl	1e5c0 <OnPrint@@Base+0x310>
    9d60:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    9d64:	add	x0, x0, #0x38
    9d68:	bl	1e648 <OnPrint@@Base+0x398>
    9d6c:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9d70:	add	x1, x1, #0x938
    9d74:	add	x0, x25, #0x948
    9d78:	bl	1e5c0 <OnPrint@@Base+0x310>
    9d7c:	adrp	x1, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9d80:	add	x0, x24, #0x8
    9d84:	ldrsw	x1, [x1, #3272]
    9d88:	bl	98e8 <__lsan_enable@@Base+0x998>
    9d8c:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9d90:	ldr	x0, [x0, #4040]
    9d94:	ldrb	w0, [x0, #177]
    9d98:	cbnz	w0, 9c20 <__lsan_enable@@Base+0xcd0>
    9d9c:	ldr	x25, [sp, #48]
    9da0:	add	x0, x24, #0x8
    9da4:	bl	8700 <*ABS*+0x10@plt+0x19a0>
    9da8:	b	9bc8 <__lsan_enable@@Base+0xc78>
    9dac:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9db0:	add	x0, x0, #0x240
    9db4:	str	x25, [sp, #48]
    9db8:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
    9dbc:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    9dc0:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
    9dc4:	add	x22, x1, #0x5c8
    9dc8:	mov	x1, x22
    9dcc:	adrp	x25, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9dd0:	add	x0, x25, #0x948
    9dd4:	bl	1e5c0 <OnPrint@@Base+0x310>
    9dd8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    9ddc:	add	x0, x0, #0x38
    9de0:	bl	1e648 <OnPrint@@Base+0x398>
    9de4:	mov	x1, x22
    9de8:	b	9d74 <__lsan_enable@@Base+0xe24>
    9dec:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    9df0:	str	x0, [x20]
    9df4:	b	9c3c <__lsan_enable@@Base+0xcec>
    9df8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9dfc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9e00:	add	x2, x2, #0xa28
    9e04:	add	x0, x0, #0x188
    9e08:	mov	x4, #0x0                   	// #0
    9e0c:	mov	x3, #0x0                   	// #0
    9e10:	mov	w1, #0x5f                  	// #95
    9e14:	str	x25, [sp, #48]
    9e18:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    9e1c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9e20:	add	x0, x0, #0xe80
    9e24:	str	x25, [sp, #48]
    9e28:	bl	1e648 <OnPrint@@Base+0x398>
    9e2c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9e30:	add	x0, x0, #0xeb0
    9e34:	bl	1e648 <OnPrint@@Base+0x398>
    9e38:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9e3c:	add	x0, x0, #0xf10
    9e40:	bl	1e648 <OnPrint@@Base+0x398>
    9e44:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    9e48:	stp	x19, x20, [sp, #-32]!
    9e4c:	adrp	x19, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9e50:	add	x20, x19, #0xcc0
    9e54:	add	x0, x20, #0xe0
    9e58:	str	x30, [sp, #16]
    9e5c:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
    9e60:	ldrb	w0, [x20, #312]
    9e64:	cbnz	w0, 9e80 <__lsan_enable@@Base+0xf30>
    9e68:	mov	w0, #0x1                   	// #1
    9e6c:	strb	w0, [x20, #312]
    9e70:	bl	9a58 <__lsan_enable@@Base+0xb08>
    9e74:	strb	w0, [x20, #216]
    9e78:	tst	w0, #0xff
    9e7c:	b.ne	9e94 <__lsan_enable@@Base+0xf44>  // b.any
    9e80:	add	x0, x19, #0xcc0
    9e84:	ldr	x30, [sp, #16]
    9e88:	add	x0, x0, #0xe0
    9e8c:	ldp	x19, x20, [sp], #32
    9e90:	b	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
    9e94:	bl	a730 <__lsan_do_recoverable_leak_check@@Base+0x820>
    9e98:	add	x0, x19, #0xcc0
    9e9c:	ldr	x30, [sp, #16]
    9ea0:	add	x0, x0, #0xe0
    9ea4:	ldp	x19, x20, [sp], #32
    9ea8:	b	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
    9eac:	nop

0000000000009eb0 <__lsan_do_leak_check@@Base>:
    9eb0:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9eb4:	ldr	x0, [x0, #4040]
    9eb8:	ldrb	w0, [x0, #57]
    9ebc:	cbnz	w0, 9ec4 <__lsan_do_leak_check@@Base+0x14>
    9ec0:	ret
    9ec4:	b	9e48 <__lsan_enable@@Base+0xef8>
    9ec8:	stp	x19, x20, [sp, #-32]!
    9ecc:	adrp	x19, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9ed0:	add	x19, x19, #0xcc0
    9ed4:	add	x19, x19, #0xe0
    9ed8:	str	x30, [sp, #16]
    9edc:	mov	x0, x19
    9ee0:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
    9ee4:	bl	9a58 <__lsan_enable@@Base+0xb08>
    9ee8:	and	w20, w0, #0xff
    9eec:	mov	x0, x19
    9ef0:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
    9ef4:	mov	w0, w20
    9ef8:	ldr	x30, [sp, #16]
    9efc:	ldp	x19, x20, [sp], #32
    9f00:	ret
    9f04:	nop
    9f08:	b	9ec8 <__lsan_do_leak_check@@Base+0x18>
    9f0c:	nop

0000000000009f10 <__lsan_do_recoverable_leak_check@@Base>:
    9f10:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9f14:	ldr	x0, [x0, #4040]
    9f18:	ldrb	w0, [x0, #57]
    9f1c:	cbnz	w0, 9f28 <__lsan_do_recoverable_leak_check@@Base+0x18>
    9f20:	mov	w0, #0x0                   	// #0
    9f24:	ret
    9f28:	b	9ec8 <__lsan_do_leak_check@@Base+0x18>
    9f2c:	nop
    9f30:	mov	x2, x0
    9f34:	mov	w0, #0x1                   	// #1
    9f38:	ldr	x2, [x2, #8]
    9f3c:	str	x1, [x2]
    9f40:	ret
    9f44:	nop
    9f48:	stp	x19, x20, [sp, #-48]!
    9f4c:	mov	x20, x0
    9f50:	mov	w2, #0xa                   	// #10
    9f54:	mov	x0, x1
    9f58:	mov	x19, x1
    9f5c:	add	x1, sp, #0x28
    9f60:	str	x30, [sp, #16]
    9f64:	bl	18ef8 <__sanitizer_set_report_fd@@Base+0x1c48>
    9f68:	ldr	x2, [x20, #8]
    9f6c:	ldr	x1, [sp, #40]
    9f70:	str	w0, [x2]
    9f74:	ldrb	w0, [x1]
    9f78:	cmp	w0, #0x0
    9f7c:	cset	w20, eq  // eq = none
    9f80:	cbnz	w0, 9f94 <__lsan_do_recoverable_leak_check@@Base+0x84>
    9f84:	mov	w0, w20
    9f88:	ldr	x30, [sp, #16]
    9f8c:	ldp	x19, x20, [sp], #48
    9f90:	ret
    9f94:	mov	x1, x19
    9f98:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9f9c:	add	x0, x0, #0x50
    9fa0:	bl	1e5c0 <OnPrint@@Base+0x310>
    9fa4:	mov	w0, w20
    9fa8:	ldr	x30, [sp, #16]
    9fac:	ldp	x19, x20, [sp], #48
    9fb0:	ret
    9fb4:	nop
    9fb8:	mov	x2, x0
    9fbc:	stp	x19, x20, [sp, #-32]!
    9fc0:	mov	x19, x1
    9fc4:	mov	x0, x19
    9fc8:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9fcc:	add	x1, x1, #0x80
    9fd0:	ldr	x20, [x2, #8]
    9fd4:	str	x30, [sp, #16]
    9fd8:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
    9fdc:	cbnz	w0, 9ff4 <__lsan_do_recoverable_leak_check@@Base+0xe4>
    9fe0:	mov	w0, #0x1                   	// #1
    9fe4:	strb	wzr, [x20]
    9fe8:	ldr	x30, [sp, #16]
    9fec:	ldp	x19, x20, [sp], #32
    9ff0:	ret
    9ff4:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    9ff8:	mov	x0, x19
    9ffc:	add	x1, x1, #0x88
    a000:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
    a004:	cbz	w0, 9fe0 <__lsan_do_recoverable_leak_check@@Base+0xd0>
    a008:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    a00c:	mov	x0, x19
    a010:	add	x1, x1, #0x90
    a014:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
    a018:	cbz	w0, 9fe0 <__lsan_do_recoverable_leak_check@@Base+0xd0>
    a01c:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    a020:	mov	x0, x19
    a024:	add	x1, x1, #0x98
    a028:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
    a02c:	cbz	w0, a044 <__lsan_do_recoverable_leak_check@@Base+0x134>
    a030:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    a034:	mov	x0, x19
    a038:	add	x1, x1, #0xa0
    a03c:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
    a040:	cbnz	w0, a054 <__lsan_do_recoverable_leak_check@@Base+0x144>
    a044:	mov	w1, #0x1                   	// #1
    a048:	mov	w0, #0x1                   	// #1
    a04c:	strb	w1, [x20]
    a050:	b	9fe8 <__lsan_do_recoverable_leak_check@@Base+0xd8>
    a054:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    a058:	mov	x0, x19
    a05c:	add	x1, x1, #0xa8
    a060:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
    a064:	cbz	w0, a044 <__lsan_do_recoverable_leak_check@@Base+0x134>
    a068:	mov	x1, x19
    a06c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    a070:	add	x0, x0, #0xb0
    a074:	bl	1e5c0 <OnPrint@@Base+0x310>
    a078:	mov	w0, #0x0                   	// #0
    a07c:	ldr	x30, [sp, #16]
    a080:	ldp	x19, x20, [sp], #32
    a084:	ret
    a088:	cmp	x1, #0x1
    a08c:	mov	x3, #0x1                   	// #1
    a090:	b.ls	a184 <__lsan_do_recoverable_leak_check@@Base+0x274>  // b.plast
    a094:	nop
    a098:	ldr	x5, [x0, x3, lsl #3]
    a09c:	mov	x2, x3
    a0a0:	sub	x4, x2, #0x1
    a0a4:	mov	x6, x2
    a0a8:	lsr	x2, x4, #1
    a0ac:	ldr	x4, [x0, x2, lsl #3]
    a0b0:	cmp	x4, x5
    a0b4:	b.cs	a0c4 <__lsan_do_recoverable_leak_check@@Base+0x1b4>  // b.hs, b.nlast
    a0b8:	str	x4, [x0, x6, lsl #3]
    a0bc:	str	x5, [x0, x2, lsl #3]
    a0c0:	cbnz	x2, a0a0 <__lsan_do_recoverable_leak_check@@Base+0x190>
    a0c4:	add	x2, x3, #0x1
    a0c8:	cmp	x1, x2
    a0cc:	b.eq	a11c <__lsan_do_recoverable_leak_check@@Base+0x20c>  // b.none
    a0d0:	mov	x3, x2
    a0d4:	b	a098 <__lsan_do_recoverable_leak_check@@Base+0x188>
    a0d8:	cmp	x1, x3
    a0dc:	b.cs	a114 <__lsan_do_recoverable_leak_check@@Base+0x204>  // b.hs, b.nlast
    a0e0:	lsl	x5, x5, #4
    a0e4:	ldr	x4, [x0, x2, lsl #3]
    a0e8:	ldr	x5, [x0, x5]
    a0ec:	cmp	x5, x4
    a0f0:	b.ls	a114 <__lsan_do_recoverable_leak_check@@Base+0x204>  // b.plast
    a0f4:	cmp	x1, x2
    a0f8:	b.eq	a114 <__lsan_do_recoverable_leak_check@@Base+0x204>  // b.none
    a0fc:	ldr	x5, [x0, x1, lsl #3]
    a100:	cmp	x1, x3
    a104:	ldr	x4, [x0, x2, lsl #3]
    a108:	str	x5, [x0, x2, lsl #3]
    a10c:	str	x4, [x0, x1, lsl #3]
    a110:	b.cc	a17c <__lsan_do_recoverable_leak_check@@Base+0x26c>  // b.lo, b.ul, b.last
    a114:	subs	x3, x3, #0x1
    a118:	b.eq	a184 <__lsan_do_recoverable_leak_check@@Base+0x274>  // b.none
    a11c:	ldr	x4, [x0, x3, lsl #3]
    a120:	mov	x2, #0x0                   	// #0
    a124:	ldr	x1, [x0]
    a128:	str	x4, [x0]
    a12c:	str	x1, [x0, x3, lsl #3]
    a130:	lsl	x1, x2, #1
    a134:	add	x5, x2, #0x1
    a138:	add	x4, x1, #0x1
    a13c:	add	x1, x1, #0x2
    a140:	cmp	x4, x3
    a144:	b.cs	a0d8 <__lsan_do_recoverable_leak_check@@Base+0x1c8>  // b.hs, b.nlast
    a148:	ldr	x7, [x0, x2, lsl #3]
    a14c:	ldr	x6, [x0, x4, lsl #3]
    a150:	cmp	x7, x6
    a154:	b.cs	a0d8 <__lsan_do_recoverable_leak_check@@Base+0x1c8>  // b.hs, b.nlast
    a158:	cmp	x1, x3
    a15c:	b.cc	a188 <__lsan_do_recoverable_leak_check@@Base+0x278>  // b.lo, b.ul, b.last
    a160:	cmp	x4, x2
    a164:	b.eq	a114 <__lsan_do_recoverable_leak_check@@Base+0x204>  // b.none
    a168:	ldr	x6, [x0, x4, lsl #3]
    a16c:	mov	x1, x4
    a170:	ldr	x5, [x0, x2, lsl #3]
    a174:	str	x6, [x0, x2, lsl #3]
    a178:	str	x5, [x0, x4, lsl #3]
    a17c:	mov	x2, x1
    a180:	b	a130 <__lsan_do_recoverable_leak_check@@Base+0x220>
    a184:	ret
    a188:	lsl	x5, x5, #4
    a18c:	ldr	x5, [x0, x5]
    a190:	cmp	x6, x5
    a194:	csel	x1, x1, x4, cc  // cc = lo, ul, last
    a198:	b	a0f4 <__lsan_do_recoverable_leak_check@@Base+0x1e4>
    a19c:	nop
    a1a0:	cmp	x1, #0x1
    a1a4:	b.ls	a39c <__lsan_do_recoverable_leak_check@@Base+0x48c>  // b.plast
    a1a8:	stp	x19, x20, [sp, #-144]!
    a1ac:	stp	x23, x24, [sp, #32]
    a1b0:	mov	x23, x2
    a1b4:	add	x24, sp, #0x70
    a1b8:	stp	x25, x26, [sp, #48]
    a1bc:	mov	x25, x1
    a1c0:	stp	x27, x28, [sp, #64]
    a1c4:	mov	x27, x0
    a1c8:	stp	x21, x22, [sp, #16]
    a1cc:	mov	x22, #0x1                   	// #1
    a1d0:	str	x30, [sp, #80]
    a1d4:	nop
    a1d8:	mov	x21, x22
    a1dc:	nop
    a1e0:	sub	x0, x21, #0x1
    a1e4:	mov	x19, x21
    a1e8:	lsr	x21, x0, #1
    a1ec:	add	x19, x27, x19, lsl #5
    a1f0:	mov	x1, x19
    a1f4:	add	x20, x27, x21, lsl #5
    a1f8:	mov	x0, x20
    a1fc:	blr	x23
    a200:	tst	w0, #0xff
    a204:	b.eq	a22c <__lsan_do_recoverable_leak_check@@Base+0x31c>  // b.none
    a208:	ldp	x0, x1, [x20]
    a20c:	ldp	x4, x5, [x19]
    a210:	stp	x0, x1, [x19]
    a214:	ldp	x0, x1, [x20, #16]
    a218:	ldp	x2, x3, [x19, #16]
    a21c:	stp	x0, x1, [x19, #16]
    a220:	stp	x4, x5, [x20]
    a224:	stp	x2, x3, [x20, #16]
    a228:	cbnz	x21, a1e0 <__lsan_do_recoverable_leak_check@@Base+0x2d0>
    a22c:	add	x0, x22, #0x1
    a230:	cmp	x25, x0
    a234:	b.eq	a240 <__lsan_do_recoverable_leak_check@@Base+0x330>  // b.none
    a238:	mov	x22, x0
    a23c:	b	a1d8 <__lsan_do_recoverable_leak_check@@Base+0x2c8>
    a240:	add	x0, x27, x22, lsl #5
    a244:	str	x0, [sp, #104]
    a248:	ldr	x6, [sp, #104]
    a24c:	mov	x21, #0x0                   	// #0
    a250:	ldp	x4, x5, [x27]
    a254:	lsl	x19, x21, #1
    a258:	ldp	x0, x1, [x6]
    a25c:	stp	x0, x1, [x27]
    a260:	add	x25, x19, #0x1
    a264:	ldp	x2, x3, [x6, #16]
    a268:	stp	x4, x5, [x24]
    a26c:	add	x19, x19, #0x2
    a270:	ldp	x0, x1, [x27, #16]
    a274:	stp	x2, x3, [x27, #16]
    a278:	cmp	x25, x22
    a27c:	stp	x4, x5, [x6]
    a280:	add	x26, x21, #0x1
    a284:	stp	x0, x1, [x24, #16]
    a288:	stp	x0, x1, [x6, #16]
    a28c:	b.cs	a310 <__lsan_do_recoverable_leak_check@@Base+0x400>  // b.hs, b.nlast
    a290:	lsl	x20, x21, #5
    a294:	add	x28, x27, x25, lsl #5
    a298:	add	x2, x27, x20
    a29c:	mov	x1, x28
    a2a0:	mov	x0, x2
    a2a4:	str	x2, [sp, #96]
    a2a8:	blr	x23
    a2ac:	tst	w0, #0xff
    a2b0:	b.eq	a310 <__lsan_do_recoverable_leak_check@@Base+0x400>  // b.none
    a2b4:	cmp	x19, x22
    a2b8:	ldr	x2, [sp, #96]
    a2bc:	b.cc	a3a0 <__lsan_do_recoverable_leak_check@@Base+0x490>  // b.lo, b.ul, b.last
    a2c0:	cmp	x25, x21
    a2c4:	b.eq	a36c <__lsan_do_recoverable_leak_check@@Base+0x45c>  // b.none
    a2c8:	ldp	x0, x1, [x28]
    a2cc:	mov	x19, x25
    a2d0:	ldp	x6, x7, [x2]
    a2d4:	stp	x0, x1, [x2]
    a2d8:	ldp	x0, x1, [x28, #16]
    a2dc:	stp	x6, x7, [x24]
    a2e0:	ldp	x4, x5, [x2, #16]
    a2e4:	stp	x0, x1, [x2, #16]
    a2e8:	stp	x6, x7, [x28]
    a2ec:	stp	x4, x5, [x24, #16]
    a2f0:	stp	x4, x5, [x28, #16]
    a2f4:	mov	x21, x19
    a2f8:	add	x26, x21, #0x1
    a2fc:	lsl	x19, x21, #1
    a300:	add	x25, x19, #0x1
    a304:	add	x19, x19, #0x2
    a308:	cmp	x25, x22
    a30c:	b.cc	a290 <__lsan_do_recoverable_leak_check@@Base+0x380>  // b.lo, b.ul, b.last
    a310:	cmp	x19, x22
    a314:	b.cs	a36c <__lsan_do_recoverable_leak_check@@Base+0x45c>  // b.hs, b.nlast
    a318:	lsl	x20, x21, #5
    a31c:	add	x1, x27, x26, lsl #6
    a320:	add	x0, x27, x20
    a324:	blr	x23
    a328:	tst	w0, #0xff
    a32c:	b.eq	a36c <__lsan_do_recoverable_leak_check@@Base+0x45c>  // b.none
    a330:	cmp	x19, x21
    a334:	b.eq	a36c <__lsan_do_recoverable_leak_check@@Base+0x45c>  // b.none
    a338:	add	x2, x27, x19, lsl #5
    a33c:	add	x1, x27, x20
    a340:	cmp	x19, x22
    a344:	ldp	x4, x5, [x2]
    a348:	ldp	x8, x9, [x1]
    a34c:	stp	x4, x5, [x1]
    a350:	ldp	x4, x5, [x2, #16]
    a354:	ldp	x6, x7, [x1, #16]
    a358:	stp	x4, x5, [x1, #16]
    a35c:	stp	x8, x9, [x2]
    a360:	stp	x6, x7, [x24, #16]
    a364:	stp	x6, x7, [x2, #16]
    a368:	b.cc	a2f4 <__lsan_do_recoverable_leak_check@@Base+0x3e4>  // b.lo, b.ul, b.last
    a36c:	ldr	x0, [sp, #104]
    a370:	subs	x22, x22, #0x1
    a374:	sub	x0, x0, #0x20
    a378:	str	x0, [sp, #104]
    a37c:	b.ne	a248 <__lsan_do_recoverable_leak_check@@Base+0x338>  // b.any
    a380:	ldp	x21, x22, [sp, #16]
    a384:	ldp	x23, x24, [sp, #32]
    a388:	ldp	x25, x26, [sp, #48]
    a38c:	ldp	x27, x28, [sp, #64]
    a390:	ldr	x30, [sp, #80]
    a394:	ldp	x19, x20, [sp], #144
    a398:	ret
    a39c:	ret
    a3a0:	add	x1, x27, x26, lsl #6
    a3a4:	mov	x0, x28
    a3a8:	blr	x23
    a3ac:	tst	w0, #0xff
    a3b0:	csel	x19, x19, x25, ne  // ne = any
    a3b4:	b	a330 <__lsan_do_recoverable_leak_check@@Base+0x420>
    a3b8:	stp	x19, x20, [sp, #-64]!
    a3bc:	stp	x21, x22, [sp, #16]
    a3c0:	mov	x21, x0
    a3c4:	ldrh	w0, [x0, #24]
    a3c8:	str	x30, [sp, #48]
    a3cc:	cbz	w0, a440 <__lsan_do_recoverable_leak_check@@Base+0x530>
    a3d0:	mov	x22, #0x1                   	// #1
    a3d4:	stp	x23, x24, [sp, #32]
    a3d8:	mov	x23, #0xffffffff            	// #4294967295
    a3dc:	mov	x24, x2
    a3e0:	mov	x19, #0x0                   	// #0
    a3e4:	mov	x20, #0x0                   	// #0
    a3e8:	movk	x23, #0x2, lsl #32
    a3ec:	movk	x22, #0x2, lsl #32
    a3f0:	ldr	x1, [x21, #16]
    a3f4:	add	x20, x20, #0x1
    a3f8:	add	x3, x1, x19
    a3fc:	ldr	x1, [x1, x19]
    a400:	add	x19, x19, #0x38
    a404:	and	x1, x1, x23
    a408:	cmp	x1, x22
    a40c:	b.ne	a430 <__lsan_do_recoverable_leak_check@@Base+0x520>  // b.any
    a410:	ldr	x1, [x3, #40]
    a414:	mov	x2, x24
    a418:	cbz	x1, a430 <__lsan_do_recoverable_leak_check@@Base+0x520>
    a41c:	ldr	x0, [x21]
    a420:	ldr	x3, [x3, #16]
    a424:	add	x0, x0, x3
    a428:	add	x1, x1, x0
    a42c:	bl	7d50 <*ABS*+0x10@plt+0xff0>
    a430:	ldrh	w0, [x21, #24]
    a434:	cmp	x0, x20
    a438:	b.hi	a3f0 <__lsan_do_recoverable_leak_check@@Base+0x4e0>  // b.pmore
    a43c:	ldp	x23, x24, [sp, #32]
    a440:	mov	w0, #0x0                   	// #0
    a444:	ldp	x21, x22, [sp, #16]
    a448:	ldr	x30, [sp, #48]
    a44c:	ldp	x19, x20, [sp], #64
    a450:	ret
    a454:	nop
    a458:	ldp	x0, x1, [x2]
    a45c:	str	x30, [sp, #-16]!
    a460:	bl	23068 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2488>
    a464:	mov	w0, #0x1                   	// #1
    a468:	ldr	x30, [sp], #16
    a46c:	ret
    a470:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a474:	ldr	x0, [x0, #3400]
    a478:	mrs	x1, tpidr_el0
    a47c:	ldr	w0, [x1, x0]
    a480:	cmp	w0, #0x0
    a484:	cset	w0, gt
    a488:	ret
    a48c:	nop
    a490:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a494:	ldr	x1, [x1, #3400]
    a498:	mrs	x2, tpidr_el0
    a49c:	ldr	w0, [x2, x1]
    a4a0:	add	w0, w0, #0x1
    a4a4:	str	w0, [x2, x1]
    a4a8:	ret
    a4ac:	nop
    a4b0:	stp	x19, x20, [sp, #-32]!
    a4b4:	mrs	x20, tpidr_el0
    a4b8:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a4bc:	ldr	x19, [x19, #3400]
    a4c0:	ldr	w0, [x20, x19]
    a4c4:	str	x30, [sp, #16]
    a4c8:	cbz	w0, a4e0 <__lsan_do_recoverable_leak_check@@Base+0x5d0>
    a4cc:	sub	w0, w0, #0x1
    a4d0:	str	w0, [x20, x19]
    a4d4:	ldr	x30, [sp, #16]
    a4d8:	ldp	x19, x20, [sp], #32
    a4dc:	ret
    a4e0:	bl	7458 <*ABS*+0x10@plt+0x6f8>
    a4e4:	ldr	w0, [x20, x19]
    a4e8:	ldr	x30, [sp, #16]
    a4ec:	sub	w0, w0, #0x1
    a4f0:	str	w0, [x20, x19]
    a4f4:	ldp	x19, x20, [sp], #32
    a4f8:	ret
    a4fc:	nop
    a500:	stp	x19, x20, [sp, #-192]!
    a504:	add	x0, sp, #0x58
    a508:	stp	x23, x24, [sp, #32]
    a50c:	str	x30, [sp, #64]
    a510:	strb	wzr, [sp, #112]
    a514:	bl	1b928 <__sanitizer_set_report_fd@@Base+0x4678>
    a518:	ldr	x23, [sp, #104]
    a51c:	ldr	x19, [sp, #88]
    a520:	add	x23, x23, x23, lsl #3
    a524:	add	x23, x19, x23, lsl #3
    a528:	cmp	x23, x19
    a52c:	b.eq	a644 <__lsan_do_recoverable_leak_check@@Base+0x734>  // b.none
    a530:	stp	x21, x22, [sp, #16]
    a534:	add	x21, sp, #0x78
    a538:	stp	x25, x26, [sp, #48]
    a53c:	adrp	x26, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a540:	add	x24, x26, #0xe00
    a544:	add	x20, x24, #0x40
    a548:	add	x25, x21, #0x1c
    a54c:	nop
    a550:	ldr	x22, [x19, #8]
    a554:	mov	x0, #0x7                   	// #7
    a558:	bl	6bb0 <getauxval@plt>
    a55c:	mov	x3, x0
    a560:	cmp	x22, x3
    a564:	mov	x0, x25
    a568:	mov	x2, #0x10                  	// #16
    a56c:	mov	w1, #0x0                   	// #0
    a570:	b.ne	a5ec <__lsan_do_recoverable_leak_check@@Base+0x6dc>  // b.any
    a574:	ldr	x3, [x24]
    a578:	cbnz	x3, a670 <__lsan_do_recoverable_leak_check@@Base+0x760>
    a57c:	ldp	x4, x5, [x19]
    a580:	stp	x4, x5, [x20]
    a584:	ldp	x4, x5, [x19, #16]
    a588:	stp	x4, x5, [x20, #16]
    a58c:	ldp	x4, x5, [x19, #32]
    a590:	stp	x4, x5, [x20, #32]
    a594:	ldp	x4, x5, [x19, #48]
    a598:	stp	x4, x5, [x20, #48]
    a59c:	ldr	x3, [x19, #64]
    a5a0:	str	x3, [x20, #64]
    a5a4:	str	x20, [x24]
    a5a8:	stp	xzr, xzr, [sp, #120]
    a5ac:	str	xzr, [sp, #136]
    a5b0:	str	wzr, [sp, #144]
    a5b4:	strb	wzr, [sp, #164]
    a5b8:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
    a5bc:	stp	xzr, xzr, [sp, #168]
    a5c0:	str	xzr, [sp, #184]
    a5c4:	ldp	x0, x1, [x21]
    a5c8:	stp	x0, x1, [x19]
    a5cc:	ldp	x0, x1, [x21, #16]
    a5d0:	stp	x0, x1, [x19, #16]
    a5d4:	ldp	x0, x1, [x21, #32]
    a5d8:	stp	x0, x1, [x19, #32]
    a5dc:	ldp	x0, x1, [x21, #48]
    a5e0:	stp	x0, x1, [x19, #48]
    a5e4:	ldr	x0, [x21, #64]
    a5e8:	str	x0, [x19, #64]
    a5ec:	add	x19, x19, #0x48
    a5f0:	cmp	x23, x19
    a5f4:	b.ne	a550 <__lsan_do_recoverable_leak_check@@Base+0x640>  // b.any
    a5f8:	ldr	x0, [x26, #3584]
    a5fc:	ldp	x21, x22, [sp, #16]
    a600:	ldp	x25, x26, [sp, #48]
    a604:	cbz	x0, a650 <__lsan_do_recoverable_leak_check@@Base+0x740>
    a608:	ldr	x20, [sp, #104]
    a60c:	ldr	x19, [sp, #88]
    a610:	add	x20, x20, x20, lsl #3
    a614:	add	x20, x19, x20, lsl #3
    a618:	cmp	x19, x20
    a61c:	b.eq	a634 <__lsan_do_recoverable_leak_check@@Base+0x724>  // b.none
    a620:	mov	x0, x19
    a624:	add	x19, x19, #0x48
    a628:	bl	137b8 <__sancov_default_options@@Base+0x2bc0>
    a62c:	cmp	x20, x19
    a630:	b.ne	a620 <__lsan_do_recoverable_leak_check@@Base+0x710>  // b.any
    a634:	ldp	x23, x24, [sp, #32]
    a638:	ldr	x30, [sp, #64]
    a63c:	ldp	x19, x20, [sp], #192
    a640:	ret
    a644:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a648:	ldr	x0, [x0, #3584]
    a64c:	cbnz	x0, a634 <__lsan_do_recoverable_leak_check@@Base+0x724>
    a650:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a654:	ldr	x0, [x0, #3680]
    a658:	ldr	w0, [x0]
    a65c:	cbz	w0, a608 <__lsan_do_recoverable_leak_check@@Base+0x6f8>
    a660:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    a664:	add	x0, x0, #0x110
    a668:	bl	1e648 <OnPrint@@Base+0x398>
    a66c:	b	a608 <__lsan_do_recoverable_leak_check@@Base+0x6f8>
    a670:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a674:	ldr	x0, [x0, #3680]
    a678:	ldr	w0, [x0]
    a67c:	cbnz	w0, a6d4 <__lsan_do_recoverable_leak_check@@Base+0x7c4>
    a680:	mov	x0, x3
    a684:	bl	137b8 <__sancov_default_options@@Base+0x2bc0>
    a688:	ldr	x20, [sp, #104]
    a68c:	str	xzr, [x26, #3584]
    a690:	ldr	x0, [sp, #88]
    a694:	add	x20, x20, x20, lsl #3
    a698:	mov	x19, x0
    a69c:	add	x20, x0, x20, lsl #3
    a6a0:	cmp	x0, x20
    a6a4:	b.eq	a6bc <__lsan_do_recoverable_leak_check@@Base+0x7ac>  // b.none
    a6a8:	mov	x0, x19
    a6ac:	add	x19, x19, #0x48
    a6b0:	bl	137b8 <__sancov_default_options@@Base+0x2bc0>
    a6b4:	cmp	x20, x19
    a6b8:	b.ne	a6a8 <__lsan_do_recoverable_leak_check@@Base+0x798>  // b.any
    a6bc:	ldp	x21, x22, [sp, #16]
    a6c0:	ldp	x23, x24, [sp, #32]
    a6c4:	ldp	x25, x26, [sp, #48]
    a6c8:	ldr	x30, [sp, #64]
    a6cc:	ldp	x19, x20, [sp], #192
    a6d0:	ret
    a6d4:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    a6d8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    a6dc:	add	x1, x1, #0x190
    a6e0:	add	x0, x0, #0x88
    a6e4:	bl	1e648 <OnPrint@@Base+0x398>
    a6e8:	ldr	x3, [x24]
    a6ec:	b	a680 <__lsan_do_recoverable_leak_check@@Base+0x770>
    a6f0:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a6f4:	ldr	x2, [x2, #3928]
    a6f8:	ldrb	w1, [x2, #12]
    a6fc:	cbnz	w1, a704 <__lsan_do_recoverable_leak_check@@Base+0x7f4>
    a700:	ret
    a704:	mov	x1, x0
    a708:	adrp	x0, a000 <__lsan_do_recoverable_leak_check@@Base+0xf0>
    a70c:	add	x0, x0, #0x3b8
    a710:	b	6950 <dl_iterate_phdr@plt>
    a714:	nop
    a718:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a71c:	ldr	x0, [x0, #3584]
    a720:	ret
    a724:	nop
    a728:	ret
    a72c:	nop
    a730:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a734:	ldr	x0, [x0, #4040]
    a738:	ldr	w0, [x0, #216]
    a73c:	cbnz	w0, a744 <__lsan_do_recoverable_leak_check@@Base+0x834>
    a740:	ret
    a744:	str	x30, [sp, #-16]!
    a748:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    a74c:	nop
    a750:	mov	x3, x0
    a754:	mov	x2, x1
    a758:	str	x30, [sp, #-32]!
    a75c:	adrp	x0, a000 <__lsan_do_recoverable_leak_check@@Base+0xf0>
    a760:	add	x0, x0, #0x458
    a764:	add	x1, sp, #0x10
    a768:	stp	x3, x2, [sp, #16]
    a76c:	bl	6950 <dl_iterate_phdr@plt>
    a770:	ldr	x30, [sp], #32
    a774:	ret
    a778:	stp	x19, x20, [sp, #-32]!
    a77c:	mov	x19, x1
    a780:	mov	x20, x2
    a784:	str	x30, [sp, #16]
    a788:	bl	ab28 <__sanitizer_print_stack_trace@@Base+0x90>
    a78c:	mov	x1, x20
    a790:	mov	w2, w0
    a794:	mov	x0, x19
    a798:	adrp	x3, a000 <__lsan_do_recoverable_leak_check@@Base+0xf0>
    a79c:	ldr	x30, [sp, #16]
    a7a0:	add	x3, x3, #0x7b0
    a7a4:	ldp	x19, x20, [sp], #32
    a7a8:	mov	x4, #0x0                   	// #0
    a7ac:	b	21ad8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xef8>
    a7b0:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a7b4:	stp	x19, x20, [sp, #-48]!
    a7b8:	mov	x19, x2
    a7bc:	ldr	x1, [x1, #4040]
    a7c0:	stp	x21, x22, [sp, #16]
    a7c4:	stp	x23, x30, [sp, #32]
    a7c8:	ldrb	w20, [x1, #33]
    a7cc:	ldr	x23, [x0, #8]
    a7d0:	ldr	x21, [x0, #24]
    a7d4:	ldr	x22, [x0, #40]
    a7d8:	cbnz	w20, a80c <__lsan_do_recoverable_leak_check@@Base+0x8fc>
    a7dc:	mov	x6, #0x0                   	// #0
    a7e0:	mov	x5, #0x0                   	// #0
    a7e4:	mov	w7, w20
    a7e8:	mov	x4, x23
    a7ec:	mov	x3, x22
    a7f0:	mov	x2, x21
    a7f4:	mov	x0, x19
    a7f8:	mov	w1, #0x100                 	// #256
    a7fc:	ldp	x21, x22, [sp, #16]
    a800:	ldp	x23, x30, [sp, #32]
    a804:	ldp	x19, x20, [sp], #48
    a808:	b	206c8 <OnPrint@@Base+0x2418>
    a80c:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    a810:	cbz	x0, a7dc <__lsan_do_recoverable_leak_check@@Base+0x8cc>
    a814:	ldp	x6, x5, [x0, #144]
    a818:	b	a7e4 <__lsan_do_recoverable_leak_check@@Base+0x8d4>
    a81c:	nop
    a820:	stp	x19, x20, [sp, #-288]!
    a824:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a828:	stp	x21, x22, [sp, #16]
    a82c:	add	x19, sp, #0x30
    a830:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a834:	ldr	x21, [x20, #4040]
    a838:	str	x30, [sp, #32]
    a83c:	mov	x0, x21
    a840:	bl	17488 <__sanitizer_set_report_fd@@Base+0x1d8>
    a844:	mov	x1, x21
    a848:	mov	x0, x19
    a84c:	bl	17588 <__sanitizer_set_report_fd@@Base+0x2d8>
    a850:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    a854:	add	x0, x0, #0x198
    a858:	bl	19b20 <__sanitizer_set_report_fd@@Base+0x2870>
    a85c:	mov	x5, x0
    a860:	mov	w2, #0x1                   	// #1
    a864:	mov	w4, #0x1e                  	// #30
    a868:	mov	w3, #0x17                  	// #23
    a86c:	mov	x1, x19
    a870:	mov	x0, x21
    a874:	str	x5, [sp, #56]
    a878:	str	w4, [sp, #84]
    a87c:	strb	w2, [sp, #105]
    a880:	strb	w2, [sp, #169]
    a884:	str	w3, [sp, #264]
    a888:	bl	17588 <__sanitizer_set_report_fd@@Base+0x2d8>
    a88c:	ldr	x22, [x22, #3928]
    a890:	mov	x0, x22
    a894:	bl	7480 <*ABS*+0x10@plt+0x720>
    a898:	mov	x0, x19
    a89c:	bl	18850 <__sanitizer_set_report_fd@@Base+0x15a0>
    a8a0:	mov	x1, x22
    a8a4:	mov	x0, x19
    a8a8:	bl	74a8 <*ABS*+0x10@plt+0x748>
    a8ac:	mov	x1, x21
    a8b0:	mov	x0, x19
    a8b4:	bl	17790 <__sanitizer_set_report_fd@@Base+0x4e0>
    a8b8:	bl	7820 <*ABS*+0x10@plt+0xac0>
    a8bc:	mov	x1, x0
    a8c0:	mov	x0, x19
    a8c4:	bl	187c8 <__sanitizer_set_report_fd@@Base+0x1518>
    a8c8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    a8cc:	add	x0, x0, #0x1b0
    a8d0:	bl	19b20 <__sanitizer_set_report_fd@@Base+0x2870>
    a8d4:	mov	x1, x0
    a8d8:	mov	x0, x19
    a8dc:	bl	187c8 <__sanitizer_set_report_fd@@Base+0x1518>
    a8e0:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a8e4:	ldr	w1, [x21, #52]
    a8e8:	ldr	x0, [x0, #3680]
    a8ec:	str	w1, [x0]
    a8f0:	ldr	w0, [x0]
    a8f4:	cbnz	w0, a920 <__lsan_do_recoverable_leak_check@@Base+0xa10>
    a8f8:	ldr	x0, [x20, #4040]
    a8fc:	ldrb	w0, [x0, #122]
    a900:	cbnz	w0, a930 <__lsan_do_recoverable_leak_check@@Base+0xa20>
    a904:	ldr	x20, [x20, #4040]
    a908:	ldr	x0, [x20, #40]
    a90c:	bl	6cf0 <__sanitizer_set_report_path@plt>
    a910:	ldp	x21, x22, [sp, #16]
    a914:	ldr	x30, [sp, #32]
    a918:	ldp	x19, x20, [sp], #288
    a91c:	ret
    a920:	bl	18228 <__sanitizer_set_report_fd@@Base+0xf78>
    a924:	ldr	x0, [x20, #4040]
    a928:	ldrb	w0, [x0, #122]
    a92c:	cbz	w0, a904 <__lsan_do_recoverable_leak_check@@Base+0x9f4>
    a930:	mov	x0, x19
    a934:	bl	18308 <__sanitizer_set_report_fd@@Base+0x1058>
    a938:	ldr	x20, [x20, #4040]
    a93c:	ldr	x0, [x20, #40]
    a940:	bl	6cf0 <__sanitizer_set_report_path@plt>
    a944:	ldp	x21, x22, [sp, #16]
    a948:	ldr	x30, [sp, #32]
    a94c:	ldp	x19, x20, [sp], #288
    a950:	ret
    a954:	nop
    a958:	mov	w0, #0x0                   	// #0
    a95c:	ret

000000000000a960 <__lsan_init@@Base>:
    a960:	stp	x19, x20, [sp, #-32]!
    a964:	adrp	x19, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a968:	ldrb	w0, [x19, #3720]
    a96c:	str	x30, [sp, #16]
    a970:	cbnz	w0, aa58 <__lsan_init@@Base+0xf8>
    a974:	add	x1, x19, #0xe88
    a978:	ldrb	w0, [x1, #1]
    a97c:	cbz	w0, a98c <__lsan_init@@Base+0x2c>
    a980:	ldr	x30, [sp, #16]
    a984:	ldp	x19, x20, [sp], #32
    a988:	ret
    a98c:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a990:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    a994:	add	x1, x1, #0x210
    a998:	mov	w20, #0x1                   	// #1
    a99c:	ldr	x0, [x0, #4008]
    a9a0:	strb	w20, [x19, #3720]
    a9a4:	str	x1, [x0]
    a9a8:	bl	13c48 <__sancov_default_options@@Base+0x3050>
    a9ac:	bl	a820 <__lsan_do_recoverable_leak_check@@Base+0x910>
    a9b0:	bl	7840 <*ABS*+0x10@plt+0xae0>
    a9b4:	bl	aef8 <__sanitizer_print_stack_trace@@Base+0x460>
    a9b8:	bl	aba0 <__sanitizer_print_stack_trace@@Base+0x108>
    a9bc:	bl	1b6f0 <__sanitizer_set_report_fd@@Base+0x4440>
    a9c0:	bl	10520 <_ZdaPvmSt11align_val_t@@Base+0x70>
    a9c4:	bl	108b8 <_ZdaPvmSt11align_val_t@@Base+0x408>
    a9c8:	adrp	x0, a000 <__lsan_do_recoverable_leak_check@@Base+0xf0>
    a9cc:	add	x0, x0, #0x778
    a9d0:	bl	1cfb0 <__sanitizer_set_report_fd@@Base+0x5d00>
    a9d4:	mov	w2, w20
    a9d8:	mov	x1, #0x0                   	// #0
    a9dc:	mov	w0, #0x0                   	// #0
    a9e0:	bl	10920 <_ZdaPvmSt11align_val_t@@Base+0x470>
    a9e4:	mov	w3, w0
    a9e8:	cbnz	w0, aa78 <__lsan_init@@Base+0x118>
    a9ec:	bl	19a98 <__sanitizer_set_report_fd@@Base+0x27e8>
    a9f0:	mov	x1, x0
    a9f4:	mov	w2, #0x0                   	// #0
    a9f8:	mov	w0, #0x0                   	// #0
    a9fc:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    aa00:	bl	10938 <_ZdaPvmSt11align_val_t@@Base+0x488>
    aa04:	mov	w0, #0x0                   	// #0
    aa08:	bl	ab50 <__sanitizer_print_stack_trace@@Base+0xb8>
    aa0c:	ldr	x0, [x20, #4040]
    aa10:	ldrb	w1, [x0, #57]
    aa14:	cbz	w1, aa2c <__lsan_init@@Base+0xcc>
    aa18:	ldrb	w0, [x0, #58]
    aa1c:	cbz	w0, aa2c <__lsan_init@@Base+0xcc>
    aa20:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    aa24:	ldr	x0, [x0, #3552]
    aa28:	bl	1ce90 <__sanitizer_set_report_fd@@Base+0x5be0>
    aa2c:	ldr	x20, [x20, #4040]
    aa30:	ldrb	w0, [x20, #161]
    aa34:	ldr	x1, [x20, #168]
    aa38:	bl	145a0 <__sanitizer_sandbox_on_notify@@Base+0x140>
    aa3c:	strb	wzr, [x19, #3720]
    aa40:	add	x0, x19, #0xe88
    aa44:	mov	w1, #0x1                   	// #1
    aa48:	ldr	x30, [sp, #16]
    aa4c:	strb	w1, [x0, #1]
    aa50:	ldp	x19, x20, [sp], #32
    aa54:	ret
    aa58:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    aa5c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    aa60:	add	x2, x2, #0x1c0
    aa64:	add	x0, x0, #0x1e8
    aa68:	mov	x4, #0x0                   	// #0
    aa6c:	mov	x3, #0x0                   	// #0
    aa70:	mov	w1, #0x53                  	// #83
    aa74:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    aa78:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    aa7c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    aa80:	add	x2, x2, #0x220
    aa84:	add	x0, x0, #0x1e8
    aa88:	mov	x4, #0x0                   	// #0
    aa8c:	mov	w1, #0x63                  	// #99
    aa90:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    aa94:	nop

000000000000aa98 <__sanitizer_print_stack_trace@@Base>:
    aa98:	sub	sp, sp, #0x850
    aa9c:	stp	x29, x30, [sp]
    aaa0:	mov	x29, sp
    aaa4:	stp	x19, x20, [sp, #16]
    aaa8:	add	x19, x29, #0x38
    aaac:	add	x0, x19, #0x10
    aab0:	stp	x21, x22, [sp, #32]
    aab4:	mov	x22, x29
    aab8:	stp	x0, xzr, [x29, #56]
    aabc:	str	xzr, [x29, #2120]
    aac0:	bl	20018 <OnPrint@@Base+0x1d68>
    aac4:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    aac8:	mov	x20, x0
    aacc:	ldr	x1, [x1, #4040]
    aad0:	ldrb	w21, [x1, #33]
    aad4:	cbnz	w21, ab18 <__sanitizer_print_stack_trace@@Base+0x80>
    aad8:	mov	x6, #0x0                   	// #0
    aadc:	mov	x5, #0x0                   	// #0
    aae0:	mov	w7, w21
    aae4:	mov	x3, x22
    aae8:	mov	x2, x20
    aaec:	mov	x4, #0x0                   	// #0
    aaf0:	mov	w1, #0x100                 	// #256
    aaf4:	mov	x0, x19
    aaf8:	bl	206c8 <OnPrint@@Base+0x2418>
    aafc:	mov	x0, x19
    ab00:	bl	20260 <OnPrint@@Base+0x1fb0>
    ab04:	ldp	x29, x30, [sp]
    ab08:	ldp	x19, x20, [sp, #16]
    ab0c:	ldp	x21, x22, [sp, #32]
    ab10:	add	sp, sp, #0x850
    ab14:	ret
    ab18:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    ab1c:	cbz	x0, aad8 <__sanitizer_print_stack_trace@@Base+0x40>
    ab20:	ldp	x6, x5, [x0, #144]
    ab24:	b	aae0 <__sanitizer_print_stack_trace@@Base+0x48>
    ab28:	mrs	x1, tpidr_el0
    ab2c:	str	x30, [sp, #-16]!
    ab30:	adrp	x0, 60000 <_Unwind_Backtrace@GCC_3.3>
    ab34:	ldr	x2, [x0, #912]
    ab38:	add	x0, x0, #0x390
    ab3c:	blr	x2
    ab40:	ldr	x30, [sp], #16
    ab44:	ldr	w0, [x1, x0]
    ab48:	ret
    ab4c:	nop
    ab50:	mrs	x1, tpidr_el0
    ab54:	str	x30, [sp, #-16]!
    ab58:	mov	w2, w0
    ab5c:	adrp	x0, 60000 <_Unwind_Backtrace@GCC_3.3>
    ab60:	ldr	x3, [x0, #912]
    ab64:	add	x0, x0, #0x390
    ab68:	blr	x3
    ab6c:	ldr	x30, [sp], #16
    ab70:	str	w2, [x1, x0]
    ab74:	ret
    ab78:	str	x30, [sp, #-16]!
    ab7c:	mrs	x1, tpidr_el0
    ab80:	adrp	x0, 60000 <_Unwind_Backtrace@GCC_3.3>
    ab84:	ldr	x2, [x0, #896]
    ab88:	add	x0, x0, #0x380
    ab8c:	blr	x2
    ab90:	add	x0, x1, x0
    ab94:	ldr	x30, [sp], #16
    ab98:	ret
    ab9c:	nop
    aba0:	ret
    aba4:	nop
    aba8:	stp	x19, x20, [sp, #-32]!
    abac:	mov	x19, x0
    abb0:	mov	x1, #0xffffffffffff        	// #281474976710655
    abb4:	str	x30, [sp, #16]
    abb8:	cmp	x19, x1
    abbc:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    abc0:	b.ls	ac40 <__sanitizer_print_stack_trace@@Base+0x1a8>  // b.plast
    abc4:	add	x0, x0, #0xec0
    abc8:	add	x20, x0, #0x80, lsl #12
    abcc:	ldr	x2, [x20, #3520]
    abd0:	sub	x0, x2, #0x1
    abd4:	tst	x0, x19
    abd8:	b.ne	abf4 <__sanitizer_print_stack_trace@@Base+0x15c>  // b.any
    abdc:	sub	x19, x19, x2
    abe0:	add	x19, x19, #0x20
    abe4:	strb	wzr, [x19]
    abe8:	ldr	x30, [sp, #16]
    abec:	ldp	x19, x20, [sp], #32
    abf0:	ret
    abf4:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    abf8:	mov	x2, x19
    abfc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ac00:	add	x0, x0, #0x2a8
    ac04:	ldr	x1, [x1, #4008]
    ac08:	ldr	x1, [x1]
    ac0c:	bl	1e5c0 <OnPrint@@Base+0x310>
    ac10:	ldr	x2, [x20, #3520]
    ac14:	sub	x0, x2, #0x1
    ac18:	tst	x0, x19
    ac1c:	b.eq	abdc <__sanitizer_print_stack_trace@@Base+0x144>  // b.none
    ac20:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ac24:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ac28:	add	x2, x2, #0x2c0
    ac2c:	add	x0, x0, #0x300
    ac30:	mov	x4, #0x0                   	// #0
    ac34:	mov	x3, #0x0                   	// #0
    ac38:	mov	w1, #0xae                  	// #174
    ac3c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    ac40:	lsr	x3, x19, #32
    ac44:	add	x2, x0, #0xec0
    ac48:	ldr	x1, [x2, x3, lsl #3]
    ac4c:	dmb	ish
    ac50:	cbz	x1, abc4 <__sanitizer_print_stack_trace@@Base+0x12c>
    ac54:	lsr	w4, w19, #20
    ac58:	ldrb	w1, [x1, x4]
    ac5c:	cbz	w1, abc4 <__sanitizer_print_stack_trace@@Base+0x12c>
    ac60:	ldr	x0, [x2, x3, lsl #3]
    ac64:	dmb	ish
    ac68:	cbz	x0, ad04 <__sanitizer_print_stack_trace@@Base+0x26c>
    ac6c:	ldrb	w0, [x0, x4]
    ac70:	cbz	w0, ad04 <__sanitizer_print_stack_trace@@Base+0x26c>
    ac74:	and	x0, x19, #0xfffffffffff00000
    ac78:	ldr	x1, [x2, x3, lsl #3]
    ac7c:	dmb	ish
    ac80:	cbz	x1, acfc <__sanitizer_print_stack_trace@@Base+0x264>
    ac84:	ldrb	w3, [x1, x4]
    ac88:	mov	w2, #0x200                 	// #512
    ac8c:	cmp	w3, #0x35
    ac90:	and	x1, x3, #0xff
    ac94:	b.eq	acc0 <__sanitizer_print_stack_trace@@Base+0x228>  // b.none
    ac98:	lsl	w2, w3, #4
    ac9c:	cmp	x1, #0x10
    aca0:	b.ls	acc0 <__sanitizer_print_stack_trace@@Base+0x228>  // b.plast
    aca4:	sub	x1, x1, #0x10
    aca8:	mov	x2, #0x100                 	// #256
    acac:	and	x3, x1, #0x3
    acb0:	lsr	x1, x1, #2
    acb4:	lsl	x1, x2, x1
    acb8:	lsr	x2, x1, #2
    acbc:	madd	w2, w2, w3, w1
    acc0:	sub	w19, w19, w0
    acc4:	add	x0, x0, #0x100, lsl #12
    acc8:	udiv	w19, w19, w2
    accc:	add	x19, x19, #0x1
    acd0:	cmp	x0, x19, lsl #4
    acd4:	lsl	x19, x19, #4
    acd8:	b.ne	ad24 <__sanitizer_print_stack_trace@@Base+0x28c>  // b.any
    acdc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ace0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ace4:	add	x2, x2, #0x350
    ace8:	add	x0, x0, #0x360
    acec:	mov	x4, #0x0                   	// #0
    acf0:	mov	x3, #0x0                   	// #0
    acf4:	mov	w1, #0x44                  	// #68
    acf8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    acfc:	mov	w2, #0x0                   	// #0
    ad00:	b	acc0 <__sanitizer_print_stack_trace@@Base+0x228>
    ad04:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ad08:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ad0c:	add	x2, x2, #0x238
    ad10:	add	x0, x0, #0x258
    ad14:	mov	x4, #0x0                   	// #0
    ad18:	mov	x3, #0x0                   	// #0
    ad1c:	mov	w1, #0x91                  	// #145
    ad20:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    ad24:	sub	x19, x0, x19
    ad28:	b	abe4 <__sanitizer_print_stack_trace@@Base+0x14c>
    ad2c:	nop
    ad30:	stp	x19, x20, [sp, #-48]!
    ad34:	mov	x19, x1
    ad38:	mov	x20, x0
    ad3c:	stp	x21, x22, [sp, #16]
    ad40:	mov	x0, #0xffffffffffff        	// #281474976710655
    ad44:	mov	x21, x2
    ad48:	str	x30, [sp, #32]
    ad4c:	cmp	x19, x0
    ad50:	adrp	x1, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    ad54:	b.ls	ae0c <__sanitizer_print_stack_trace@@Base+0x374>  // b.plast
    ad58:	add	x1, x1, #0xec0
    ad5c:	add	x22, x1, #0x80, lsl #12
    ad60:	ldr	x1, [x22, #3520]
    ad64:	sub	x0, x1, #0x1
    ad68:	tst	x19, x0
    ad6c:	b.ne	adc0 <__sanitizer_print_stack_trace@@Base+0x328>  // b.any
    ad70:	sub	x19, x19, x1
    ad74:	add	x19, x19, #0x20
    ad78:	bl	a470 <__lsan_do_recoverable_leak_check@@Base+0x560>
    ad7c:	mov	w2, w0
    ad80:	ldrb	w3, [x19, #1]
    ad84:	neg	w2, w2
    ad88:	ldp	x0, x1, [x20]
    ad8c:	bfxil	w3, w2, #0, #2
    ad90:	strb	w3, [x19, #1]
    ad94:	bl	1f9a0 <OnPrint@@Base+0x16f0>
    ad98:	str	w0, [x19, #8]
    ad9c:	ldr	x1, [x19]
    ada0:	mov	w2, #0x1                   	// #1
    ada4:	bfi	x1, x21, #10, #54
    ada8:	str	x1, [x19]
    adac:	strb	w2, [x19]
    adb0:	ldp	x21, x22, [sp, #16]
    adb4:	ldr	x30, [sp, #32]
    adb8:	ldp	x19, x20, [sp], #48
    adbc:	ret
    adc0:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    adc4:	mov	x2, x19
    adc8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    adcc:	add	x0, x0, #0x2a8
    add0:	ldr	x1, [x1, #4008]
    add4:	ldr	x1, [x1]
    add8:	bl	1e5c0 <OnPrint@@Base+0x310>
    addc:	ldr	x1, [x22, #3520]
    ade0:	sub	x0, x1, #0x1
    ade4:	tst	x19, x0
    ade8:	b.eq	ad70 <__sanitizer_print_stack_trace@@Base+0x2d8>  // b.none
    adec:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    adf0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    adf4:	add	x2, x2, #0x2c0
    adf8:	add	x0, x0, #0x300
    adfc:	mov	x4, #0x0                   	// #0
    ae00:	mov	x3, #0x0                   	// #0
    ae04:	mov	w1, #0xae                  	// #174
    ae08:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    ae0c:	lsr	x3, x19, #32
    ae10:	add	x2, x1, #0xec0
    ae14:	ldr	x0, [x2, x3, lsl #3]
    ae18:	dmb	ish
    ae1c:	cbz	x0, ad58 <__sanitizer_print_stack_trace@@Base+0x2c0>
    ae20:	lsr	w4, w19, #20
    ae24:	ldrb	w0, [x0, x4]
    ae28:	cbz	w0, ad58 <__sanitizer_print_stack_trace@@Base+0x2c0>
    ae2c:	ldr	x0, [x2, x3, lsl #3]
    ae30:	dmb	ish
    ae34:	cbz	x0, aed0 <__sanitizer_print_stack_trace@@Base+0x438>
    ae38:	ldrb	w0, [x0, x4]
    ae3c:	cbz	w0, aed0 <__sanitizer_print_stack_trace@@Base+0x438>
    ae40:	and	x0, x19, #0xfffffffffff00000
    ae44:	ldr	x1, [x2, x3, lsl #3]
    ae48:	dmb	ish
    ae4c:	cbz	x1, aec8 <__sanitizer_print_stack_trace@@Base+0x430>
    ae50:	ldrb	w3, [x1, x4]
    ae54:	mov	w2, #0x200                 	// #512
    ae58:	cmp	w3, #0x35
    ae5c:	and	x1, x3, #0xff
    ae60:	b.eq	ae8c <__sanitizer_print_stack_trace@@Base+0x3f4>  // b.none
    ae64:	lsl	w2, w3, #4
    ae68:	cmp	x1, #0x10
    ae6c:	b.ls	ae8c <__sanitizer_print_stack_trace@@Base+0x3f4>  // b.plast
    ae70:	sub	x1, x1, #0x10
    ae74:	mov	x2, #0x100                 	// #256
    ae78:	and	x3, x1, #0x3
    ae7c:	lsr	x1, x1, #2
    ae80:	lsl	x1, x2, x1
    ae84:	lsr	x2, x1, #2
    ae88:	madd	w2, w2, w3, w1
    ae8c:	sub	w19, w19, w0
    ae90:	add	x0, x0, #0x100, lsl #12
    ae94:	udiv	w19, w19, w2
    ae98:	add	x19, x19, #0x1
    ae9c:	cmp	x0, x19, lsl #4
    aea0:	lsl	x19, x19, #4
    aea4:	b.ne	aef0 <__sanitizer_print_stack_trace@@Base+0x458>  // b.any
    aea8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    aeac:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    aeb0:	add	x2, x2, #0x350
    aeb4:	add	x0, x0, #0x360
    aeb8:	mov	x4, #0x0                   	// #0
    aebc:	mov	x3, #0x0                   	// #0
    aec0:	mov	w1, #0x3a                  	// #58
    aec4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    aec8:	mov	w2, #0x0                   	// #0
    aecc:	b	ae8c <__sanitizer_print_stack_trace@@Base+0x3f4>
    aed0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    aed4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    aed8:	add	x2, x2, #0x238
    aedc:	add	x0, x0, #0x258
    aee0:	mov	x4, #0x0                   	// #0
    aee4:	mov	x3, #0x0                   	// #0
    aee8:	mov	w1, #0x91                  	// #145
    aeec:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    aef0:	sub	x19, x0, x19
    aef4:	b	ad78 <__sanitizer_print_stack_trace@@Base+0x2e0>
    aef8:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    aefc:	stp	x19, x20, [sp, #-32]!
    af00:	adrp	x19, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    af04:	ldr	x0, [x0, #4040]
    af08:	add	x20, x19, #0xec0
    af0c:	ldrb	w0, [x0, #59]
    af10:	str	x30, [sp, #16]
    af14:	bl	11010 <__sancov_default_options@@Base+0x418>
    af18:	mov	x0, x20
    af1c:	add	x20, x20, #0x80, lsl #12
    af20:	mov	x2, #0x80000               	// #524288
    af24:	mov	w1, #0x0                   	// #0
    af28:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
    af2c:	strb	wzr, [x20]
    af30:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    af34:	mov	x2, #0xd80                 	// #3456
    af38:	adrp	x0, e2000 <__asan_cplus_demangle_operators@@Base+0x82be0>
    af3c:	mov	w1, #0x0                   	// #0
    af40:	add	x0, x0, #0xf00
    af44:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
    af48:	ldr	x20, [x20, #4000]
    af4c:	ldr	x2, [x20]
    af50:	cbz	x2, afa4 <__sanitizer_print_stack_trace@@Base+0x50c>
    af54:	adrp	x4, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    af58:	add	x19, x19, #0xec0
    af5c:	add	x19, x19, #0x80, lsl #12
    af60:	adrp	x0, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    af64:	ldr	x4, [x4, #3840]
    af68:	add	x0, x0, #0xc90
    af6c:	str	x2, [x19, #3520]
    af70:	mov	x3, #0x0                   	// #0
    af74:	mov	x1, #0x800000              	// #8388608
    af78:	ldr	x2, [x4]
    af7c:	bl	1d408 <__sanitizer_set_report_fd@@Base+0x6158>
    af80:	cbz	x0, afb4 <__sanitizer_print_stack_trace@@Base+0x51c>
    af84:	adrp	x1, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    af88:	add	x1, x1, #0xef0
    af8c:	ldr	x30, [sp, #16]
    af90:	str	x0, [x19, #3528]
    af94:	str	x1, [x19, #4144]
    af98:	str	x1, [x19, #4152]
    af9c:	ldp	x19, x20, [sp], #32
    afa0:	ret
    afa4:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    afa8:	mov	x2, x0
    afac:	str	x0, [x20]
    afb0:	b	af54 <__sanitizer_print_stack_trace@@Base+0x4bc>
    afb4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    afb8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    afbc:	add	x2, x2, #0x390
    afc0:	add	x0, x0, #0x300
    afc4:	mov	x4, #0x0                   	// #0
    afc8:	mov	x3, #0x0                   	// #0
    afcc:	mov	w1, #0x24                  	// #36
    afd0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    afd4:	nop
    afd8:	stp	x19, x20, [sp, #-32]!
    afdc:	mov	x20, x0
    afe0:	mov	x19, x1
    afe4:	str	x30, [sp, #16]
    afe8:	bl	ab78 <__sanitizer_print_stack_trace@@Base+0xe0>
    afec:	ldr	x30, [sp, #16]
    aff0:	str	x0, [x20]
    aff4:	mov	x1, #0xd820                	// #55328
    aff8:	add	x0, x0, x1
    affc:	str	x0, [x19]
    b000:	ldp	x19, x20, [sp], #32
    b004:	ret
    b008:	stp	x19, x20, [sp, #-32]!
    b00c:	mov	x19, x0
    b010:	mov	x1, #0xffffffffffff        	// #281474976710655
    b014:	str	x30, [sp, #16]
    b018:	cmp	x19, x1
    b01c:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b020:	b.ls	b0a4 <__sanitizer_print_stack_trace@@Base+0x60c>  // b.plast
    b024:	add	x0, x0, #0xec0
    b028:	add	x20, x0, #0x80, lsl #12
    b02c:	ldr	x2, [x20, #3520]
    b030:	sub	x0, x2, #0x1
    b034:	tst	x0, x19
    b038:	b.ne	b058 <__sanitizer_print_stack_trace@@Base+0x5c0>  // b.any
    b03c:	sub	x19, x19, x2
    b040:	add	x19, x19, #0x20
    b044:	ldr	x0, [x19]
    b048:	lsr	x0, x0, #10
    b04c:	ldr	x30, [sp, #16]
    b050:	ldp	x19, x20, [sp], #32
    b054:	ret
    b058:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b05c:	mov	x2, x19
    b060:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b064:	add	x0, x0, #0x2a8
    b068:	ldr	x1, [x1, #4008]
    b06c:	ldr	x1, [x1]
    b070:	bl	1e5c0 <OnPrint@@Base+0x310>
    b074:	ldr	x2, [x20, #3520]
    b078:	sub	x0, x2, #0x1
    b07c:	tst	x0, x19
    b080:	b.eq	b03c <__sanitizer_print_stack_trace@@Base+0x5a4>  // b.none
    b084:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b088:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b08c:	add	x2, x2, #0x2c0
    b090:	add	x0, x0, #0x300
    b094:	mov	x4, #0x0                   	// #0
    b098:	mov	x3, #0x0                   	// #0
    b09c:	mov	w1, #0xae                  	// #174
    b0a0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    b0a4:	lsr	x3, x19, #32
    b0a8:	add	x2, x0, #0xec0
    b0ac:	ldr	x1, [x2, x3, lsl #3]
    b0b0:	dmb	ish
    b0b4:	cbz	x1, b024 <__sanitizer_print_stack_trace@@Base+0x58c>
    b0b8:	lsr	w4, w19, #20
    b0bc:	ldrb	w1, [x1, x4]
    b0c0:	cbz	w1, b024 <__sanitizer_print_stack_trace@@Base+0x58c>
    b0c4:	ldr	x0, [x2, x3, lsl #3]
    b0c8:	dmb	ish
    b0cc:	cbz	x0, b154 <__sanitizer_print_stack_trace@@Base+0x6bc>
    b0d0:	ldrb	w0, [x0, x4]
    b0d4:	cbz	w0, b154 <__sanitizer_print_stack_trace@@Base+0x6bc>
    b0d8:	and	x0, x19, #0xfffffffffff00000
    b0dc:	ldr	x1, [x2, x3, lsl #3]
    b0e0:	dmb	ish
    b0e4:	cbz	x1, b14c <__sanitizer_print_stack_trace@@Base+0x6b4>
    b0e8:	ldrb	w3, [x1, x4]
    b0ec:	mov	w2, #0x200                 	// #512
    b0f0:	cmp	w3, #0x35
    b0f4:	and	x1, x3, #0xff
    b0f8:	b.eq	b124 <__sanitizer_print_stack_trace@@Base+0x68c>  // b.none
    b0fc:	lsl	w2, w3, #4
    b100:	cmp	x1, #0x10
    b104:	b.ls	b124 <__sanitizer_print_stack_trace@@Base+0x68c>  // b.plast
    b108:	sub	x1, x1, #0x10
    b10c:	mov	x2, #0x100                 	// #256
    b110:	and	x3, x1, #0x3
    b114:	lsr	x1, x1, #2
    b118:	lsl	x1, x2, x1
    b11c:	lsr	x2, x1, #2
    b120:	madd	w2, w2, w3, w1
    b124:	sub	w19, w19, w0
    b128:	add	x1, x0, #0x100, lsl #12
    b12c:	mov	x0, #0x0                   	// #0
    b130:	udiv	w19, w19, w2
    b134:	add	x19, x19, #0x1
    b138:	cmp	x1, x19, lsl #4
    b13c:	lsl	x19, x19, #4
    b140:	b.eq	b04c <__sanitizer_print_stack_trace@@Base+0x5b4>  // b.none
    b144:	sub	x19, x1, x19
    b148:	b	b044 <__sanitizer_print_stack_trace@@Base+0x5ac>
    b14c:	mov	w2, #0x0                   	// #0
    b150:	b	b124 <__sanitizer_print_stack_trace@@Base+0x68c>
    b154:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b158:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b15c:	add	x2, x2, #0x238
    b160:	add	x0, x0, #0x258
    b164:	mov	x4, #0x0                   	// #0
    b168:	mov	x3, #0x0                   	// #0
    b16c:	mov	w1, #0x91                  	// #145
    b170:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    b174:	nop
    b178:	b	b008 <__sanitizer_print_stack_trace@@Base+0x570>
    b17c:	nop
    b180:	stp	x19, x20, [sp, #-32]!
    b184:	adrp	x20, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b188:	add	x20, x20, #0xec0
    b18c:	add	x20, x20, #0x80, lsl #12
    b190:	adrp	x19, e2000 <__asan_cplus_demangle_operators@@Base+0x82be0>
    b194:	add	x20, x20, #0xdc0
    b198:	add	x19, x19, #0xf00
    b19c:	stp	x21, x30, [sp, #16]
    b1a0:	mov	w21, #0x1                   	// #1
    b1a4:	nop
    b1a8:	ldxrb	w0, [x19]
    b1ac:	stxrb	w1, w21, [x19]
    b1b0:	cbnz	w1, b1a8 <__sanitizer_print_stack_trace@@Base+0x710>
    b1b4:	dmb	ish
    b1b8:	tst	w0, #0xff
    b1bc:	b.eq	b1c8 <__sanitizer_print_stack_trace@@Base+0x730>  // b.none
    b1c0:	mov	x0, x19
    b1c4:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
    b1c8:	add	x19, x19, #0x40
    b1cc:	cmp	x19, x20
    b1d0:	b.ne	b1a8 <__sanitizer_print_stack_trace@@Base+0x710>  // b.any
    b1d4:	adrp	x0, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b1d8:	add	x0, x0, #0xee8
    b1dc:	mov	w2, #0x1                   	// #1
    b1e0:	ldxrb	w1, [x0]
    b1e4:	stxrb	w3, w2, [x0]
    b1e8:	cbnz	w3, b1e0 <__sanitizer_print_stack_trace@@Base+0x748>
    b1ec:	dmb	ish
    b1f0:	tst	w1, #0xff
    b1f4:	b.eq	b204 <__sanitizer_print_stack_trace@@Base+0x76c>  // b.none
    b1f8:	ldp	x21, x30, [sp, #16]
    b1fc:	ldp	x19, x20, [sp], #32
    b200:	b	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
    b204:	ldp	x21, x30, [sp, #16]
    b208:	ldp	x19, x20, [sp], #32
    b20c:	ret
    b210:	dmb	ish
    b214:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b218:	add	x0, x0, #0xec0
    b21c:	add	x1, x0, #0x81, lsl #12
    b220:	strb	wzr, [x1, #40]
    b224:	mov	x1, #0x35                  	// #53
    b228:	mov	x3, #0x2001                	// #8193
    b22c:	nop
    b230:	dmb	ish
    b234:	add	x2, x1, x3
    b238:	lsl	x2, x2, #6
    b23c:	strb	wzr, [x0, x2]
    b240:	sub	x1, x1, #0x1
    b244:	cmn	x1, #0x1
    b248:	b.ne	b230 <__sanitizer_print_stack_trace@@Base+0x798>  // b.any
    b24c:	ret
    b250:	adrp	x2, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b254:	add	x2, x2, #0xec0
    b258:	add	x3, x2, #0x81, lsl #12
    b25c:	str	x2, [x0]
    b260:	add	x3, x3, #0x80
    b264:	str	x3, [x1]
    b268:	ret
    b26c:	nop
    b270:	ret
    b274:	nop
    b278:	stp	x19, x20, [sp, #-32]!
    b27c:	mov	x19, x1
    b280:	mov	x2, #0xffffffffffff        	// #281474976710655
    b284:	stp	x21, x30, [sp, #16]
    b288:	cmp	x19, x2
    b28c:	mov	x21, x0
    b290:	adrp	x1, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b294:	b.ls	b314 <__sanitizer_print_stack_trace@@Base+0x87c>  // b.plast
    b298:	add	x1, x1, #0xec0
    b29c:	add	x20, x1, #0x80, lsl #12
    b2a0:	ldr	x2, [x20, #3520]
    b2a4:	sub	x0, x2, #0x1
    b2a8:	tst	x0, x19
    b2ac:	b.ne	b2c8 <__sanitizer_print_stack_trace@@Base+0x830>  // b.any
    b2b0:	sub	x19, x19, x2
    b2b4:	add	x19, x19, #0x20
    b2b8:	str	x19, [x21]
    b2bc:	ldp	x21, x30, [sp, #16]
    b2c0:	ldp	x19, x20, [sp], #32
    b2c4:	ret
    b2c8:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b2cc:	mov	x2, x19
    b2d0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b2d4:	add	x0, x0, #0x2a8
    b2d8:	ldr	x1, [x1, #4008]
    b2dc:	ldr	x1, [x1]
    b2e0:	bl	1e5c0 <OnPrint@@Base+0x310>
    b2e4:	ldr	x2, [x20, #3520]
    b2e8:	sub	x0, x2, #0x1
    b2ec:	tst	x0, x19
    b2f0:	b.eq	b2b0 <__sanitizer_print_stack_trace@@Base+0x818>  // b.none
    b2f4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b2f8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b2fc:	add	x2, x2, #0x2c0
    b300:	add	x0, x0, #0x300
    b304:	mov	x4, #0x0                   	// #0
    b308:	mov	x3, #0x0                   	// #0
    b30c:	mov	w1, #0xae                  	// #174
    b310:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    b314:	lsr	x3, x19, #32
    b318:	add	x2, x1, #0xec0
    b31c:	ldr	x0, [x2, x3, lsl #3]
    b320:	dmb	ish
    b324:	cbz	x0, b298 <__sanitizer_print_stack_trace@@Base+0x800>
    b328:	lsr	w4, w19, #20
    b32c:	ldrb	w0, [x0, x4]
    b330:	cbz	w0, b298 <__sanitizer_print_stack_trace@@Base+0x800>
    b334:	ldr	x0, [x2, x3, lsl #3]
    b338:	dmb	ish
    b33c:	cbz	x0, b3e0 <__sanitizer_print_stack_trace@@Base+0x948>
    b340:	ldrb	w0, [x0, x4]
    b344:	cbz	w0, b3e0 <__sanitizer_print_stack_trace@@Base+0x948>
    b348:	and	x1, x19, #0xfffffffffff00000
    b34c:	ldr	x0, [x2, x3, lsl #3]
    b350:	dmb	ish
    b354:	cbz	x0, b3d8 <__sanitizer_print_stack_trace@@Base+0x940>
    b358:	ldrb	w0, [x0, x4]
    b35c:	mov	w3, #0x200                 	// #512
    b360:	cmp	w0, #0x35
    b364:	and	x2, x0, #0xff
    b368:	b.eq	b394 <__sanitizer_print_stack_trace@@Base+0x8fc>  // b.none
    b36c:	lsl	w3, w0, #4
    b370:	cmp	x2, #0x10
    b374:	b.ls	b394 <__sanitizer_print_stack_trace@@Base+0x8fc>  // b.plast
    b378:	sub	x2, x2, #0x10
    b37c:	mov	x3, #0x100                 	// #256
    b380:	and	x4, x2, #0x3
    b384:	lsr	x2, x2, #2
    b388:	lsl	x2, x3, x2
    b38c:	lsr	x0, x2, #2
    b390:	madd	w3, w0, w4, w2
    b394:	sub	w0, w19, w1
    b398:	add	x1, x1, #0x100, lsl #12
    b39c:	udiv	w0, w0, w3
    b3a0:	add	x0, x0, #0x1
    b3a4:	lsl	x0, x0, #4
    b3a8:	sub	x2, x1, x0
    b3ac:	str	x2, [x21]
    b3b0:	cmp	x0, x1
    b3b4:	b.ne	b2bc <__sanitizer_print_stack_trace@@Base+0x824>  // b.any
    b3b8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b3bc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b3c0:	add	x2, x2, #0x3a0
    b3c4:	add	x0, x0, #0x360
    b3c8:	mov	x4, #0x0                   	// #0
    b3cc:	mov	x3, #0x0                   	// #0
    b3d0:	mov	w1, #0xff                  	// #255
    b3d4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    b3d8:	mov	w3, #0x0                   	// #0
    b3dc:	b	b394 <__sanitizer_print_stack_trace@@Base+0x8fc>
    b3e0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b3e4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b3e8:	add	x2, x2, #0x238
    b3ec:	add	x0, x0, #0x258
    b3f0:	mov	x4, #0x0                   	// #0
    b3f4:	mov	x3, #0x0                   	// #0
    b3f8:	mov	w1, #0x91                  	// #145
    b3fc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    b400:	ldr	x0, [x0]
    b404:	ldrb	w0, [x0]
    b408:	cmp	w0, #0x0
    b40c:	cset	w0, ne  // ne = any
    b410:	ret
    b414:	nop
    b418:	ldr	x0, [x0]
    b41c:	ldrb	w0, [x0, #1]
    b420:	and	w0, w0, #0x3
    b424:	ret
    b428:	ldr	x0, [x0]
    b42c:	ldrb	w2, [x0, #1]
    b430:	bfxil	w2, w1, #0, #2
    b434:	strb	w2, [x0, #1]
    b438:	ret
    b43c:	nop
    b440:	ldr	x0, [x0]
    b444:	ldr	x0, [x0]
    b448:	lsr	x0, x0, #10
    b44c:	ret
    b450:	ldr	x0, [x0]
    b454:	ldr	w0, [x0, #8]
    b458:	ret
    b45c:	nop
    b460:	stp	x19, x20, [sp, #-32]!
    b464:	mov	x1, #0xffffffffffff        	// #281474976710655
    b468:	mov	x20, x0
    b46c:	stp	x21, x30, [sp, #16]
    b470:	cmp	x0, x1
    b474:	adrp	x21, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b478:	b.ls	b5e0 <__sanitizer_print_stack_trace@@Base+0xb48>  // b.plast
    b47c:	adrp	x0, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b480:	add	x0, x0, #0xee8
    b484:	mov	w2, #0x1                   	// #1
    b488:	ldxrb	w1, [x0]
    b48c:	stxrb	w3, w2, [x0]
    b490:	cbnz	w3, b488 <__sanitizer_print_stack_trace@@Base+0x9f0>
    b494:	dmb	ish
    b498:	tst	w1, #0xff
    b49c:	b.eq	b4a4 <__sanitizer_print_stack_trace@@Base+0xa0c>  // b.none
    b4a0:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
    b4a4:	add	x2, x21, #0xec0
    b4a8:	add	x0, x2, #0x80, lsl #12
    b4ac:	ldr	x1, [x0, #3576]
    b4b0:	cbz	x1, b5c4 <__sanitizer_print_stack_trace@@Base+0xb2c>
    b4b4:	ldr	x0, [x0, #3528]
    b4b8:	mov	x3, #0x0                   	// #0
    b4bc:	add	x2, x0, x1, lsl #3
    b4c0:	ldr	x1, [x0]
    b4c4:	cmp	x20, x1
    b4c8:	b.cc	b4dc <__sanitizer_print_stack_trace@@Base+0xa44>  // b.lo, b.ul, b.last
    b4cc:	sub	x4, x20, x3
    b4d0:	sub	x5, x20, x1
    b4d4:	cmp	x5, x4
    b4d8:	csel	x3, x3, x1, cs  // cs = hs, nlast
    b4dc:	add	x0, x0, #0x8
    b4e0:	cmp	x2, x0
    b4e4:	b.ne	b4c0 <__sanitizer_print_stack_trace@@Base+0xa28>  // b.any
    b4e8:	cbz	x3, b7a4 <__sanitizer_print_stack_trace@@Base+0xd0c>
    b4ec:	ldr	x4, [x3]
    b4f0:	cmp	x4, x3
    b4f4:	b.hi	b7b8 <__sanitizer_print_stack_trace@@Base+0xd20>  // b.pmore
    b4f8:	ldr	x0, [x3, #8]
    b4fc:	add	x4, x4, x0
    b500:	cmp	x4, x3
    b504:	b.ls	b7d0 <__sanitizer_print_stack_trace@@Base+0xd38>  // b.plast
    b508:	cmp	x20, x3
    b50c:	b.cc	b6cc <__sanitizer_print_stack_trace@@Base+0xc34>  // b.lo, b.ul, b.last
    b510:	cmp	x20, x4
    b514:	b.cs	b7a4 <__sanitizer_print_stack_trace@@Base+0xd0c>  // b.hs, b.nlast
    b518:	add	x0, x21, #0xec0
    b51c:	add	x1, x0, #0x80, lsl #12
    b520:	ldr	x19, [x1, #3520]
    b524:	sub	x1, x19, #0x1
    b528:	tst	x1, x3
    b52c:	b.ne	b7e8 <__sanitizer_print_stack_trace@@Base+0xd50>  // b.any
    b530:	add	x19, x3, x19
    b534:	dmb	ish
    b538:	cmp	x20, x19
    b53c:	cset	w1, cc  // cc = lo, ul, last
    b540:	cmp	x19, #0x0
    b544:	csinc	w1, w1, wzr, ne  // ne = any
    b548:	add	x0, x0, #0x81, lsl #12
    b54c:	strb	wzr, [x0, #40]
    b550:	cbnz	w1, b5d0 <__sanitizer_print_stack_trace@@Base+0xb38>
    b554:	mov	x0, #0xffffffffffff        	// #281474976710655
    b558:	cmp	x19, x0
    b55c:	b.ls	b6e8 <__sanitizer_print_stack_trace@@Base+0xc50>  // b.plast
    b560:	add	x21, x21, #0xec0
    b564:	add	x21, x21, #0x80, lsl #12
    b568:	ldr	x0, [x21, #3520]
    b56c:	sub	x1, x0, #0x1
    b570:	tst	x19, x1
    b574:	b.ne	b680 <__sanitizer_print_stack_trace@@Base+0xbe8>  // b.any
    b578:	sub	x0, x19, x0
    b57c:	add	x1, x0, #0x20
    b580:	ldrb	w0, [x1]
    b584:	cbz	w0, b5d0 <__sanitizer_print_stack_trace@@Base+0xb38>
    b588:	ldr	x3, [x1]
    b58c:	add	x3, x19, x3, lsr #10
    b590:	cmp	x3, x20
    b594:	b.ls	b5d0 <__sanitizer_print_stack_trace@@Base+0xb38>  // b.plast
    b598:	ldrb	w2, [x1, #1]
    b59c:	mov	w0, #0x1                   	// #1
    b5a0:	and	w3, w2, #0x3
    b5a4:	cmp	w3, #0x3
    b5a8:	b.eq	b5d4 <__sanitizer_print_stack_trace@@Base+0xb3c>  // b.none
    b5ac:	orr	w2, w2, #0x3
    b5b0:	strb	w2, [x1, #1]
    b5b4:	mov	w0, #0x0                   	// #0
    b5b8:	ldp	x21, x30, [sp, #16]
    b5bc:	ldp	x19, x20, [sp], #32
    b5c0:	ret
    b5c4:	dmb	ish
    b5c8:	add	x2, x2, #0x81, lsl #12
    b5cc:	strb	wzr, [x2, #40]
    b5d0:	mov	w0, #0x2                   	// #2
    b5d4:	ldp	x21, x30, [sp, #16]
    b5d8:	ldp	x19, x20, [sp], #32
    b5dc:	ret
    b5e0:	lsr	x4, x0, #32
    b5e4:	add	x1, x21, #0xec0
    b5e8:	ldr	x0, [x1, x4, lsl #3]
    b5ec:	dmb	ish
    b5f0:	cbz	x0, b47c <__sanitizer_print_stack_trace@@Base+0x9e4>
    b5f4:	lsr	w5, w20, #20
    b5f8:	ldrb	w0, [x0, x5]
    b5fc:	cbz	w0, b47c <__sanitizer_print_stack_trace@@Base+0x9e4>
    b600:	ldr	x0, [x1, x4, lsl #3]
    b604:	dmb	ish
    b608:	cbz	x0, b814 <__sanitizer_print_stack_trace@@Base+0xd7c>
    b60c:	ldrb	w0, [x0, x5]
    b610:	cbz	w0, b814 <__sanitizer_print_stack_trace@@Base+0xd7c>
    b614:	and	x3, x20, #0xfffffffffff00000
    b618:	ldr	x0, [x1, x4, lsl #3]
    b61c:	dmb	ish
    b620:	sub	w1, w20, w3
    b624:	cbz	x0, b668 <__sanitizer_print_stack_trace@@Base+0xbd0>
    b628:	ldrb	w2, [x0, x5]
    b62c:	cmp	w2, #0x35
    b630:	and	x0, x2, #0xff
    b634:	b.eq	b808 <__sanitizer_print_stack_trace@@Base+0xd70>  // b.none
    b638:	cmp	x0, #0x10
    b63c:	b.ls	b85c <__sanitizer_print_stack_trace@@Base+0xdc4>  // b.plast
    b640:	sub	x0, x0, #0x10
    b644:	mov	x2, #0x100                 	// #256
    b648:	and	x4, x0, #0x3
    b64c:	lsr	x0, x0, #2
    b650:	lsl	x2, x2, x0
    b654:	lsr	x0, x2, #2
    b658:	madd	x0, x0, x4, x2
    b65c:	udiv	w1, w1, w0
    b660:	mul	w1, w1, w0
    b664:	add	x3, x3, x1
    b668:	cmp	x20, x3
    b66c:	mov	x19, x3
    b670:	cset	w1, cc  // cc = lo, ul, last
    b674:	cmp	x3, #0x0
    b678:	csinc	w1, w1, wzr, ne  // ne = any
    b67c:	b	b550 <__sanitizer_print_stack_trace@@Base+0xab8>
    b680:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b684:	mov	x2, x19
    b688:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b68c:	add	x0, x0, #0x2a8
    b690:	ldr	x1, [x1, #4008]
    b694:	ldr	x1, [x1]
    b698:	bl	1e5c0 <OnPrint@@Base+0x310>
    b69c:	ldr	x0, [x21, #3520]
    b6a0:	sub	x1, x0, #0x1
    b6a4:	tst	x19, x1
    b6a8:	b.eq	b578 <__sanitizer_print_stack_trace@@Base+0xae0>  // b.none
    b6ac:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b6b0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b6b4:	add	x2, x2, #0x2c0
    b6b8:	add	x0, x0, #0x300
    b6bc:	mov	x4, #0x0                   	// #0
    b6c0:	mov	x3, #0x0                   	// #0
    b6c4:	mov	w1, #0xae                  	// #174
    b6c8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    b6cc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b6d0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b6d4:	mov	x4, x20
    b6d8:	add	x2, x2, #0x418
    b6dc:	add	x0, x0, #0x300
    b6e0:	mov	w1, #0xc3                  	// #195
    b6e4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    b6e8:	lsr	x2, x19, #32
    b6ec:	add	x1, x21, #0xec0
    b6f0:	ldr	x0, [x1, x2, lsl #3]
    b6f4:	dmb	ish
    b6f8:	cbz	x0, b560 <__sanitizer_print_stack_trace@@Base+0xac8>
    b6fc:	lsr	w3, w19, #20
    b700:	ldrb	w0, [x0, x3]
    b704:	cbz	w0, b560 <__sanitizer_print_stack_trace@@Base+0xac8>
    b708:	ldr	x0, [x1, x2, lsl #3]
    b70c:	dmb	ish
    b710:	cbz	x0, b83c <__sanitizer_print_stack_trace@@Base+0xda4>
    b714:	ldrb	w0, [x0, x3]
    b718:	cbz	w0, b83c <__sanitizer_print_stack_trace@@Base+0xda4>
    b71c:	and	x0, x19, #0xfffffffffff00000
    b720:	ldr	x1, [x1, x2, lsl #3]
    b724:	dmb	ish
    b728:	cbz	x1, b834 <__sanitizer_print_stack_trace@@Base+0xd9c>
    b72c:	ldrb	w3, [x1, x3]
    b730:	mov	w2, #0x200                 	// #512
    b734:	cmp	w3, #0x35
    b738:	and	x1, x3, #0xff
    b73c:	b.eq	b768 <__sanitizer_print_stack_trace@@Base+0xcd0>  // b.none
    b740:	lsl	w2, w3, #4
    b744:	cmp	x1, #0x10
    b748:	b.ls	b768 <__sanitizer_print_stack_trace@@Base+0xcd0>  // b.plast
    b74c:	sub	x1, x1, #0x10
    b750:	mov	x2, #0x100                 	// #256
    b754:	and	x3, x1, #0x3
    b758:	lsr	x1, x1, #2
    b75c:	lsl	x2, x2, x1
    b760:	lsr	x1, x2, #2
    b764:	madd	w2, w1, w3, w2
    b768:	sub	w1, w19, w0
    b76c:	add	x0, x0, #0x100, lsl #12
    b770:	udiv	w1, w1, w2
    b774:	add	x1, x1, #0x1
    b778:	cmp	x0, x1, lsl #4
    b77c:	lsl	x1, x1, #4
    b780:	b.ne	b870 <__sanitizer_print_stack_trace@@Base+0xdd8>  // b.any
    b784:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b788:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b78c:	add	x2, x2, #0x350
    b790:	add	x0, x0, #0x360
    b794:	mov	x4, #0x0                   	// #0
    b798:	mov	x3, #0x0                   	// #0
    b79c:	mov	w1, #0x11e                 	// #286
    b7a0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    b7a4:	dmb	ish
    b7a8:	add	x21, x21, #0xec0
    b7ac:	add	x21, x21, #0x81, lsl #12
    b7b0:	strb	wzr, [x21, #40]
    b7b4:	b	b5d0 <__sanitizer_print_stack_trace@@Base+0xb38>
    b7b8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b7bc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b7c0:	add	x2, x2, #0x3b8
    b7c4:	add	x0, x0, #0x300
    b7c8:	mov	w1, #0xc1                  	// #193
    b7cc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    b7d0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b7d4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b7d8:	add	x2, x2, #0x3e0
    b7dc:	add	x0, x0, #0x300
    b7e0:	mov	w1, #0xc2                  	// #194
    b7e4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    b7e8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b7ec:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b7f0:	add	x2, x2, #0x438
    b7f4:	add	x0, x0, #0x300
    b7f8:	mov	x4, #0x0                   	// #0
    b7fc:	mov	x3, #0x0                   	// #0
    b800:	mov	w1, #0x12b                 	// #299
    b804:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    b808:	and	x1, x1, #0xfffffe00
    b80c:	add	x3, x3, x1
    b810:	b	b668 <__sanitizer_print_stack_trace@@Base+0xbd0>
    b814:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b818:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b81c:	add	x2, x2, #0x238
    b820:	add	x0, x0, #0x258
    b824:	mov	x4, #0x0                   	// #0
    b828:	mov	x3, #0x0                   	// #0
    b82c:	mov	w1, #0xc1                  	// #193
    b830:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    b834:	mov	w2, #0x0                   	// #0
    b838:	b	b768 <__sanitizer_print_stack_trace@@Base+0xcd0>
    b83c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b840:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    b844:	add	x2, x2, #0x238
    b848:	add	x0, x0, #0x258
    b84c:	mov	x4, #0x0                   	// #0
    b850:	mov	x3, #0x0                   	// #0
    b854:	mov	w1, #0x91                  	// #145
    b858:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    b85c:	ubfiz	x2, x2, #4, #8
    b860:	udiv	w0, w1, w2
    b864:	mul	w0, w0, w2
    b868:	add	x3, x3, w0, uxtw
    b86c:	b	b668 <__sanitizer_print_stack_trace@@Base+0xbd0>
    b870:	sub	x1, x0, x1
    b874:	b	b580 <__sanitizer_print_stack_trace@@Base+0xae8>

000000000000b878 <__sanitizer_get_current_allocated_bytes@@Base>:
    b878:	str	x30, [sp, #-32]!
    b87c:	mov	x2, #0x10                  	// #16
    b880:	mov	w1, #0x0                   	// #0
    b884:	add	x0, sp, x2
    b888:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
    b88c:	adrp	x0, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b890:	add	x0, x0, #0xf10
    b894:	mov	w2, #0x1                   	// #1
    b898:	ldxrb	w1, [x0]
    b89c:	stxrb	w3, w2, [x0]
    b8a0:	cbnz	w3, b898 <__sanitizer_get_current_allocated_bytes@@Base+0x20>
    b8a4:	dmb	ish
    b8a8:	tst	w1, #0xff
    b8ac:	b.eq	b8b4 <__sanitizer_get_current_allocated_bytes@@Base+0x3c>  // b.none
    b8b0:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
    b8b4:	ldp	x2, x1, [sp, #16]
    b8b8:	adrp	x0, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b8bc:	add	x0, x0, #0xef0
    b8c0:	mov	x3, x0
    b8c4:	nop
    b8c8:	ldr	x5, [x0, #16]
    b8cc:	ldr	x4, [x0, #24]
    b8d0:	add	x2, x2, x5
    b8d4:	ldr	x0, [x0]
    b8d8:	add	x1, x1, x4
    b8dc:	cmp	x0, x3
    b8e0:	b.ne	b8c8 <__sanitizer_get_current_allocated_bytes@@Base+0x50>  // b.any
    b8e4:	cmp	x2, #0x0
    b8e8:	csel	x2, x2, xzr, ge  // ge = tcont
    b8ec:	cmp	x1, #0x0
    b8f0:	csel	x1, x1, xzr, ge  // ge = tcont
    b8f4:	stp	x2, x1, [sp, #16]
    b8f8:	dmb	ish
    b8fc:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b900:	add	x0, x0, #0xec0
    b904:	add	x0, x0, #0x81, lsl #12
    b908:	strb	wzr, [x0, #80]
    b90c:	ldr	x0, [sp, #16]
    b910:	ldr	x30, [sp], #32
    b914:	ret

000000000000b918 <__sanitizer_get_heap_size@@Base>:
    b918:	str	x30, [sp, #-32]!
    b91c:	mov	x2, #0x10                  	// #16
    b920:	mov	w1, #0x0                   	// #0
    b924:	add	x0, sp, x2
    b928:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
    b92c:	adrp	x0, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b930:	add	x0, x0, #0xf10
    b934:	mov	w2, #0x1                   	// #1
    b938:	ldxrb	w1, [x0]
    b93c:	stxrb	w3, w2, [x0]
    b940:	cbnz	w3, b938 <__sanitizer_get_heap_size@@Base+0x20>
    b944:	dmb	ish
    b948:	tst	w1, #0xff
    b94c:	b.eq	b954 <__sanitizer_get_heap_size@@Base+0x3c>  // b.none
    b950:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
    b954:	ldp	x2, x1, [sp, #16]
    b958:	adrp	x0, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b95c:	add	x0, x0, #0xef0
    b960:	mov	x3, x0
    b964:	nop
    b968:	ldr	x5, [x0, #16]
    b96c:	ldr	x4, [x0, #24]
    b970:	add	x2, x2, x5
    b974:	ldr	x0, [x0]
    b978:	add	x1, x1, x4
    b97c:	cmp	x0, x3
    b980:	b.ne	b968 <__sanitizer_get_heap_size@@Base+0x50>  // b.any
    b984:	cmp	x2, #0x0
    b988:	csel	x2, x2, xzr, ge  // ge = tcont
    b98c:	cmp	x1, #0x0
    b990:	csel	x1, x1, xzr, ge  // ge = tcont
    b994:	stp	x2, x1, [sp, #16]
    b998:	dmb	ish
    b99c:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b9a0:	add	x0, x0, #0xec0
    b9a4:	add	x0, x0, #0x81, lsl #12
    b9a8:	strb	wzr, [x0, #80]
    b9ac:	ldr	x0, [sp, #24]
    b9b0:	ldr	x30, [sp], #32
    b9b4:	ret

000000000000b9b8 <__sanitizer_get_free_bytes@@Base>:
    b9b8:	mov	x0, #0x0                   	// #0
    b9bc:	ret

000000000000b9c0 <__sanitizer_get_unmapped_bytes@@Base>:
    b9c0:	mov	x0, #0x0                   	// #0
    b9c4:	ret

000000000000b9c8 <__sanitizer_get_estimated_allocated_size@@Base>:
    b9c8:	ret
    b9cc:	nop

000000000000b9d0 <__sanitizer_get_ownership@@Base>:
    b9d0:	stp	x19, x20, [sp, #-32]!
    b9d4:	mov	x19, x0
    b9d8:	mov	x1, #0xffffffffffff        	// #281474976710655
    b9dc:	str	x30, [sp, #16]
    b9e0:	cmp	x19, x1
    b9e4:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b9e8:	b.ls	ba6c <__sanitizer_get_ownership@@Base+0x9c>  // b.plast
    b9ec:	add	x0, x0, #0xec0
    b9f0:	add	x20, x0, #0x80, lsl #12
    b9f4:	ldr	x2, [x20, #3520]
    b9f8:	sub	x0, x2, #0x1
    b9fc:	tst	x0, x19
    ba00:	b.ne	ba20 <__sanitizer_get_ownership@@Base+0x50>  // b.any
    ba04:	sub	x19, x19, x2
    ba08:	add	x19, x19, #0x20
    ba0c:	cmp	x19, #0x0
    ba10:	cset	w0, ne  // ne = any
    ba14:	ldr	x30, [sp, #16]
    ba18:	ldp	x19, x20, [sp], #32
    ba1c:	ret
    ba20:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ba24:	mov	x2, x19
    ba28:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ba2c:	add	x0, x0, #0x2a8
    ba30:	ldr	x1, [x1, #4008]
    ba34:	ldr	x1, [x1]
    ba38:	bl	1e5c0 <OnPrint@@Base+0x310>
    ba3c:	ldr	x2, [x20, #3520]
    ba40:	sub	x0, x2, #0x1
    ba44:	tst	x0, x19
    ba48:	b.eq	ba04 <__sanitizer_get_ownership@@Base+0x34>  // b.none
    ba4c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ba50:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ba54:	add	x2, x2, #0x2c0
    ba58:	add	x0, x0, #0x300
    ba5c:	mov	x4, #0x0                   	// #0
    ba60:	mov	x3, #0x0                   	// #0
    ba64:	mov	w1, #0xae                  	// #174
    ba68:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    ba6c:	lsr	x3, x19, #32
    ba70:	add	x2, x0, #0xec0
    ba74:	ldr	x1, [x2, x3, lsl #3]
    ba78:	dmb	ish
    ba7c:	cbz	x1, b9ec <__sanitizer_get_ownership@@Base+0x1c>
    ba80:	lsr	w4, w19, #20
    ba84:	ldrb	w1, [x1, x4]
    ba88:	cbz	w1, b9ec <__sanitizer_get_ownership@@Base+0x1c>
    ba8c:	ldr	x0, [x2, x3, lsl #3]
    ba90:	dmb	ish
    ba94:	cbz	x0, bb0c <__sanitizer_get_ownership@@Base+0x13c>
    ba98:	ldrb	w0, [x0, x4]
    ba9c:	cbz	w0, bb0c <__sanitizer_get_ownership@@Base+0x13c>
    baa0:	and	x0, x19, #0xfffffffffff00000
    baa4:	ldr	x1, [x2, x3, lsl #3]
    baa8:	dmb	ish
    baac:	cbz	x1, bb04 <__sanitizer_get_ownership@@Base+0x134>
    bab0:	ldrb	w3, [x1, x4]
    bab4:	mov	w2, #0x200                 	// #512
    bab8:	cmp	w3, #0x35
    babc:	and	x1, x3, #0xff
    bac0:	b.eq	baec <__sanitizer_get_ownership@@Base+0x11c>  // b.none
    bac4:	lsl	w2, w3, #4
    bac8:	cmp	x1, #0x10
    bacc:	b.ls	baec <__sanitizer_get_ownership@@Base+0x11c>  // b.plast
    bad0:	sub	x1, x1, #0x10
    bad4:	mov	x2, #0x100                 	// #256
    bad8:	and	x3, x1, #0x3
    badc:	lsr	x1, x1, #2
    bae0:	lsl	x1, x2, x1
    bae4:	lsr	x2, x1, #2
    bae8:	madd	w2, w2, w3, w1
    baec:	sub	w19, w19, w0
    baf0:	add	x0, x0, #0x100, lsl #12
    baf4:	udiv	w19, w19, w2
    baf8:	add	x19, x19, #0x1
    bafc:	sub	x19, x0, x19, lsl #4
    bb00:	b	ba0c <__sanitizer_get_ownership@@Base+0x3c>
    bb04:	mov	w2, #0x0                   	// #0
    bb08:	b	baec <__sanitizer_get_ownership@@Base+0x11c>
    bb0c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    bb10:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    bb14:	add	x2, x2, #0x238
    bb18:	add	x0, x0, #0x258
    bb1c:	mov	x4, #0x0                   	// #0
    bb20:	mov	x3, #0x0                   	// #0
    bb24:	mov	w1, #0x91                  	// #145
    bb28:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    bb2c:	nop

000000000000bb30 <__sanitizer_get_allocated_size@@Base>:
    bb30:	stp	x19, x20, [sp, #-32]!
    bb34:	mov	x19, x0
    bb38:	mov	x1, #0xffffffffffff        	// #281474976710655
    bb3c:	str	x30, [sp, #16]
    bb40:	cmp	x19, x1
    bb44:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    bb48:	b.ls	bbcc <__sanitizer_get_allocated_size@@Base+0x9c>  // b.plast
    bb4c:	add	x0, x0, #0xec0
    bb50:	add	x20, x0, #0x80, lsl #12
    bb54:	ldr	x2, [x20, #3520]
    bb58:	sub	x0, x2, #0x1
    bb5c:	tst	x0, x19
    bb60:	b.ne	bb80 <__sanitizer_get_allocated_size@@Base+0x50>  // b.any
    bb64:	sub	x19, x19, x2
    bb68:	add	x19, x19, #0x20
    bb6c:	ldr	x0, [x19]
    bb70:	lsr	x0, x0, #10
    bb74:	ldr	x30, [sp, #16]
    bb78:	ldp	x19, x20, [sp], #32
    bb7c:	ret
    bb80:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    bb84:	mov	x2, x19
    bb88:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    bb8c:	add	x0, x0, #0x2a8
    bb90:	ldr	x1, [x1, #4008]
    bb94:	ldr	x1, [x1]
    bb98:	bl	1e5c0 <OnPrint@@Base+0x310>
    bb9c:	ldr	x2, [x20, #3520]
    bba0:	sub	x0, x2, #0x1
    bba4:	tst	x0, x19
    bba8:	b.eq	bb64 <__sanitizer_get_allocated_size@@Base+0x34>  // b.none
    bbac:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    bbb0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    bbb4:	add	x2, x2, #0x2c0
    bbb8:	add	x0, x0, #0x300
    bbbc:	mov	x4, #0x0                   	// #0
    bbc0:	mov	x3, #0x0                   	// #0
    bbc4:	mov	w1, #0xae                  	// #174
    bbc8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    bbcc:	lsr	x3, x19, #32
    bbd0:	add	x2, x0, #0xec0
    bbd4:	ldr	x1, [x2, x3, lsl #3]
    bbd8:	dmb	ish
    bbdc:	cbz	x1, bb4c <__sanitizer_get_allocated_size@@Base+0x1c>
    bbe0:	lsr	w4, w19, #20
    bbe4:	ldrb	w1, [x1, x4]
    bbe8:	cbz	w1, bb4c <__sanitizer_get_allocated_size@@Base+0x1c>
    bbec:	ldr	x0, [x2, x3, lsl #3]
    bbf0:	dmb	ish
    bbf4:	cbz	x0, bc7c <__sanitizer_get_allocated_size@@Base+0x14c>
    bbf8:	ldrb	w0, [x0, x4]
    bbfc:	cbz	w0, bc7c <__sanitizer_get_allocated_size@@Base+0x14c>
    bc00:	and	x0, x19, #0xfffffffffff00000
    bc04:	ldr	x1, [x2, x3, lsl #3]
    bc08:	dmb	ish
    bc0c:	cbz	x1, bc74 <__sanitizer_get_allocated_size@@Base+0x144>
    bc10:	ldrb	w3, [x1, x4]
    bc14:	mov	w2, #0x200                 	// #512
    bc18:	cmp	w3, #0x35
    bc1c:	and	x1, x3, #0xff
    bc20:	b.eq	bc4c <__sanitizer_get_allocated_size@@Base+0x11c>  // b.none
    bc24:	lsl	w2, w3, #4
    bc28:	cmp	x1, #0x10
    bc2c:	b.ls	bc4c <__sanitizer_get_allocated_size@@Base+0x11c>  // b.plast
    bc30:	sub	x1, x1, #0x10
    bc34:	mov	x2, #0x100                 	// #256
    bc38:	and	x3, x1, #0x3
    bc3c:	lsr	x1, x1, #2
    bc40:	lsl	x1, x2, x1
    bc44:	lsr	x2, x1, #2
    bc48:	madd	w2, w2, w3, w1
    bc4c:	sub	w19, w19, w0
    bc50:	add	x1, x0, #0x100, lsl #12
    bc54:	mov	x0, #0x0                   	// #0
    bc58:	udiv	w19, w19, w2
    bc5c:	add	x19, x19, #0x1
    bc60:	cmp	x1, x19, lsl #4
    bc64:	lsl	x19, x19, #4
    bc68:	b.eq	bb74 <__sanitizer_get_allocated_size@@Base+0x44>  // b.none
    bc6c:	sub	x19, x1, x19
    bc70:	b	bb6c <__sanitizer_get_allocated_size@@Base+0x3c>
    bc74:	mov	w2, #0x0                   	// #0
    bc78:	b	bc4c <__sanitizer_get_allocated_size@@Base+0x11c>
    bc7c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    bc80:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    bc84:	add	x2, x2, #0x238
    bc88:	add	x0, x0, #0x258
    bc8c:	mov	x4, #0x0                   	// #0
    bc90:	mov	x3, #0x0                   	// #0
    bc94:	mov	w1, #0x91                  	// #145
    bc98:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    bc9c:	nop
    bca0:	stp	x19, x20, [sp, #-48]!
    bca4:	mov	x1, #0xffffffffffff        	// #281474976710655
    bca8:	mov	x19, x0
    bcac:	stp	x21, x22, [sp, #16]
    bcb0:	cmp	x0, x1
    bcb4:	adrp	x22, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    bcb8:	str	x30, [sp, #32]
    bcbc:	b.ls	be88 <__sanitizer_get_allocated_size@@Base+0x358>  // b.plast
    bcc0:	add	x21, x22, #0xec0
    bcc4:	add	x0, x21, #0x81, lsl #12
    bcc8:	ldrb	w3, [x0, #40]
    bccc:	and	x3, x3, #0xff
    bcd0:	cmp	x3, #0x1
    bcd4:	b.ne	c024 <__sanitizer_get_allocated_size@@Base+0x4f4>  // b.any
    bcd8:	add	x21, x21, #0x80, lsl #12
    bcdc:	ldr	x20, [x21, #3576]
    bce0:	cbz	x20, bda0 <__sanitizer_get_allocated_size@@Base+0x270>
    bce4:	ldrb	w1, [x21, #3584]
    bce8:	ldr	x0, [x21, #3528]
    bcec:	cbz	w1, bdb8 <__sanitizer_get_allocated_size@@Base+0x288>
    bcf0:	add	x1, x0, x20, lsl #3
    bcf4:	ldr	x2, [x0]
    bcf8:	ldur	x1, [x1, #-8]
    bcfc:	ldr	x3, [x1, #8]
    bd00:	add	x1, x1, x3
    bd04:	cmp	x19, x1
    bd08:	ccmp	x19, x2, #0x0, cc  // cc = lo, ul, last
    bd0c:	b.cc	bda0 <__sanitizer_get_allocated_size@@Base+0x270>  // b.lo, b.ul, b.last
    bd10:	sub	x20, x20, #0x1
    bd14:	mov	x2, #0x0                   	// #0
    bd18:	b	bd34 <__sanitizer_get_allocated_size@@Base+0x204>
    bd1c:	add	x1, x2, x20
    bd20:	lsr	x1, x1, #1
    bd24:	ldr	x3, [x0, x1, lsl #3]
    bd28:	cmp	x3, x19
    bd2c:	b.hi	bf14 <__sanitizer_get_allocated_size@@Base+0x3e4>  // b.pmore
    bd30:	mov	x2, x1
    bd34:	sub	x1, x20, x2
    bd38:	cmp	x1, #0x1
    bd3c:	b.hi	bd1c <__sanitizer_get_allocated_size@@Base+0x1ec>  // b.pmore
    bd40:	cmp	x2, x20
    bd44:	b.cs	bd60 <__sanitizer_get_allocated_size@@Base+0x230>  // b.hs, b.nlast
    bd48:	add	x3, x2, #0x1
    bd4c:	cmp	x3, x20
    bd50:	b.ne	c060 <__sanitizer_get_allocated_size@@Base+0x530>  // b.any
    bd54:	ldr	x1, [x0, x20, lsl #3]
    bd58:	cmp	x1, x19
    bd5c:	csel	x2, x2, x20, hi  // hi = pmore
    bd60:	ldr	x0, [x0, x2, lsl #3]
    bd64:	ldp	x2, x1, [x0]
    bd68:	add	x1, x2, x1
    bd6c:	cmp	x19, x1
    bd70:	ccmp	x19, x2, #0x0, cc  // cc = lo, ul, last
    bd74:	b.cc	bda0 <__sanitizer_get_allocated_size@@Base+0x270>  // b.lo, b.ul, b.last
    bd78:	add	x1, x22, #0xec0
    bd7c:	add	x1, x1, #0x80, lsl #12
    bd80:	ldr	x20, [x1, #3520]
    bd84:	sub	x1, x20, #0x1
    bd88:	add	x20, x0, x20
    bd8c:	tst	x0, x1
    bd90:	b.ne	c040 <__sanitizer_get_allocated_size@@Base+0x510>  // b.any
    bd94:	cmp	x20, #0x0
    bd98:	ccmp	x19, x20, #0x0, ne  // ne = any
    bd9c:	b.cs	be20 <__sanitizer_get_allocated_size@@Base+0x2f0>  // b.hs, b.nlast
    bda0:	mov	x20, #0x0                   	// #0
    bda4:	mov	x0, x20
    bda8:	ldp	x21, x22, [sp, #16]
    bdac:	ldr	x30, [sp, #32]
    bdb0:	ldp	x19, x20, [sp], #48
    bdb4:	ret
    bdb8:	mov	x1, x20
    bdbc:	mov	w2, #0x0                   	// #0
    bdc0:	bl	d958 <__sancov_lowest_stack@@Base+0x128>
    bdc4:	ldr	x3, [x21, #3576]
    bdc8:	ldr	x0, [x21, #3528]
    bdcc:	cbz	x3, bdec <__sanitizer_get_allocated_size@@Base+0x2bc>
    bdd0:	mov	x1, #0x0                   	// #0
    bdd4:	nop
    bdd8:	ldr	x2, [x0, x1, lsl #3]
    bddc:	str	x1, [x2, #24]
    bde0:	add	x1, x1, #0x1
    bde4:	cmp	x1, x3
    bde8:	b.ne	bdd8 <__sanitizer_get_allocated_size@@Base+0x2a8>  // b.any
    bdec:	add	x1, x22, #0xec0
    bdf0:	mov	w2, #0x1                   	// #1
    bdf4:	add	x1, x1, #0x80, lsl #12
    bdf8:	strb	w2, [x1, #3584]
    bdfc:	add	x1, x0, x20, lsl #3
    be00:	ldr	x2, [x0]
    be04:	ldur	x1, [x1, #-8]
    be08:	ldr	x3, [x1, #8]
    be0c:	add	x1, x1, x3
    be10:	cmp	x19, x1
    be14:	ccmp	x19, x2, #0x0, cc  // cc = lo, ul, last
    be18:	b.cs	bd10 <__sanitizer_get_allocated_size@@Base+0x1e0>  // b.hs, b.nlast
    be1c:	b	bda0 <__sanitizer_get_allocated_size@@Base+0x270>
    be20:	mov	x0, #0xffffffffffff        	// #281474976710655
    be24:	cmp	x20, x0
    be28:	b.ls	bf1c <__sanitizer_get_allocated_size@@Base+0x3ec>  // b.plast
    be2c:	add	x22, x22, #0xec0
    be30:	add	x22, x22, #0x80, lsl #12
    be34:	ldr	x0, [x22, #3520]
    be38:	sub	x1, x0, #0x1
    be3c:	tst	x1, x20
    be40:	b.ne	bfd8 <__sanitizer_get_allocated_size@@Base+0x4a8>  // b.any
    be44:	sub	x0, x20, x0
    be48:	add	x0, x0, #0x20
    be4c:	ldrb	w1, [x0]
    be50:	cbz	w1, bda0 <__sanitizer_get_allocated_size@@Base+0x270>
    be54:	ldr	x0, [x0]
    be58:	lsr	x0, x0, #10
    be5c:	add	x1, x0, x20
    be60:	cmp	x1, x19
    be64:	b.hi	bda4 <__sanitizer_get_allocated_size@@Base+0x274>  // b.pmore
    be68:	cmp	x0, #0x8
    be6c:	b.ne	bda0 <__sanitizer_get_allocated_size@@Base+0x270>  // b.any
    be70:	add	x0, x20, #0x8
    be74:	cmp	x19, x0
    be78:	b.ne	bda0 <__sanitizer_get_allocated_size@@Base+0x270>  // b.any
    be7c:	ldr	x0, [x20]
    be80:	cbz	x0, bda4 <__sanitizer_get_allocated_size@@Base+0x274>
    be84:	b	bda0 <__sanitizer_get_allocated_size@@Base+0x270>
    be88:	lsr	x2, x0, #32
    be8c:	add	x1, x22, #0xec0
    be90:	ldr	x0, [x1, x2, lsl #3]
    be94:	dmb	ish
    be98:	cbz	x0, bcc0 <__sanitizer_get_allocated_size@@Base+0x190>
    be9c:	lsr	w3, w19, #20
    bea0:	ldrb	w0, [x0, x3]
    bea4:	cbz	w0, bcc0 <__sanitizer_get_allocated_size@@Base+0x190>
    bea8:	ldr	x0, [x1, x2, lsl #3]
    beac:	dmb	ish
    beb0:	cbz	x0, c088 <__sanitizer_get_allocated_size@@Base+0x558>
    beb4:	ldrb	w0, [x0, x3]
    beb8:	cbz	w0, c088 <__sanitizer_get_allocated_size@@Base+0x558>
    bebc:	and	x20, x19, #0xfffffffffff00000
    bec0:	ldr	x0, [x1, x2, lsl #3]
    bec4:	dmb	ish
    bec8:	sub	w1, w19, w20
    becc:	cbz	x0, bd94 <__sanitizer_get_allocated_size@@Base+0x264>
    bed0:	ldrb	w2, [x0, x3]
    bed4:	cmp	w2, #0x35
    bed8:	and	x0, x2, #0xff
    bedc:	b.eq	c07c <__sanitizer_get_allocated_size@@Base+0x54c>  // b.none
    bee0:	cmp	x0, #0x10
    bee4:	b.ls	c0d0 <__sanitizer_get_allocated_size@@Base+0x5a0>  // b.plast
    bee8:	sub	x0, x0, #0x10
    beec:	mov	x2, #0x100                 	// #256
    bef0:	and	x3, x0, #0x3
    bef4:	lsr	x0, x0, #2
    bef8:	lsl	x2, x2, x0
    befc:	lsr	x0, x2, #2
    bf00:	madd	x0, x0, x3, x2
    bf04:	udiv	w1, w1, w0
    bf08:	mul	w1, w1, w0
    bf0c:	add	x20, x20, x1
    bf10:	b	bd94 <__sanitizer_get_allocated_size@@Base+0x264>
    bf14:	sub	x20, x1, #0x1
    bf18:	b	bd34 <__sanitizer_get_allocated_size@@Base+0x204>
    bf1c:	lsr	x2, x20, #32
    bf20:	add	x1, x22, #0xec0
    bf24:	ldr	x0, [x1, x2, lsl #3]
    bf28:	dmb	ish
    bf2c:	cbz	x0, be2c <__sanitizer_get_allocated_size@@Base+0x2fc>
    bf30:	lsr	w3, w20, #20
    bf34:	ldrb	w0, [x0, x3]
    bf38:	cbz	w0, be2c <__sanitizer_get_allocated_size@@Base+0x2fc>
    bf3c:	ldr	x0, [x1, x2, lsl #3]
    bf40:	dmb	ish
    bf44:	cbz	x0, c0b0 <__sanitizer_get_allocated_size@@Base+0x580>
    bf48:	ldrb	w0, [x0, x3]
    bf4c:	cbz	w0, c0b0 <__sanitizer_get_allocated_size@@Base+0x580>
    bf50:	and	x0, x20, #0xfffffffffff00000
    bf54:	ldr	x1, [x1, x2, lsl #3]
    bf58:	dmb	ish
    bf5c:	cbz	x1, c0a8 <__sanitizer_get_allocated_size@@Base+0x578>
    bf60:	ldrb	w3, [x1, x3]
    bf64:	mov	w2, #0x200                 	// #512
    bf68:	cmp	w3, #0x35
    bf6c:	and	x1, x3, #0xff
    bf70:	b.eq	bf9c <__sanitizer_get_allocated_size@@Base+0x46c>  // b.none
    bf74:	lsl	w2, w3, #4
    bf78:	cmp	x1, #0x10
    bf7c:	b.ls	bf9c <__sanitizer_get_allocated_size@@Base+0x46c>  // b.plast
    bf80:	sub	x1, x1, #0x10
    bf84:	mov	x2, #0x100                 	// #256
    bf88:	and	x3, x1, #0x3
    bf8c:	lsr	x1, x1, #2
    bf90:	lsl	x2, x2, x1
    bf94:	lsr	x1, x2, #2
    bf98:	madd	w2, w1, w3, w2
    bf9c:	sub	w1, w20, w0
    bfa0:	add	x0, x0, #0x100, lsl #12
    bfa4:	udiv	w1, w1, w2
    bfa8:	add	x1, x1, #0x1
    bfac:	cmp	x0, x1, lsl #4
    bfb0:	lsl	x1, x1, #4
    bfb4:	b.ne	c0e4 <__sanitizer_get_allocated_size@@Base+0x5b4>  // b.any
    bfb8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    bfbc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    bfc0:	add	x2, x2, #0x350
    bfc4:	add	x0, x0, #0x360
    bfc8:	mov	x4, #0x0                   	// #0
    bfcc:	mov	x3, #0x0                   	// #0
    bfd0:	mov	w1, #0xef                  	// #239
    bfd4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    bfd8:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    bfdc:	mov	x2, x20
    bfe0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    bfe4:	add	x0, x0, #0x2a8
    bfe8:	ldr	x1, [x1, #4008]
    bfec:	ldr	x1, [x1]
    bff0:	bl	1e5c0 <OnPrint@@Base+0x310>
    bff4:	ldr	x0, [x22, #3520]
    bff8:	sub	x1, x0, #0x1
    bffc:	tst	x1, x20
    c000:	b.eq	be44 <__sanitizer_get_allocated_size@@Base+0x314>  // b.none
    c004:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c008:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c00c:	add	x2, x2, #0x2c0
    c010:	add	x0, x0, #0x300
    c014:	mov	x4, #0x0                   	// #0
    c018:	mov	x3, #0x0                   	// #0
    c01c:	mov	w1, #0xae                  	// #174
    c020:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    c024:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c028:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c02c:	add	x2, x2, #0x468
    c030:	add	x0, x0, #0x4a0
    c034:	mov	x4, #0x1                   	// #1
    c038:	mov	w1, #0x2a                  	// #42
    c03c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    c040:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c044:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c048:	add	x2, x2, #0x438
    c04c:	add	x0, x0, #0x300
    c050:	mov	x4, #0x0                   	// #0
    c054:	mov	x3, #0x0                   	// #0
    c058:	mov	w1, #0x12b                 	// #299
    c05c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    c060:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c064:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c068:	mov	x4, x20
    c06c:	add	x2, x2, #0x4e0
    c070:	add	x0, x0, #0x300
    c074:	mov	w1, #0xea                  	// #234
    c078:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    c07c:	and	x1, x1, #0xfffffe00
    c080:	add	x20, x20, x1
    c084:	b	bd94 <__sanitizer_get_allocated_size@@Base+0x264>
    c088:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c08c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c090:	add	x2, x2, #0x238
    c094:	add	x0, x0, #0x258
    c098:	mov	x4, #0x0                   	// #0
    c09c:	mov	x3, #0x0                   	// #0
    c0a0:	mov	w1, #0xc1                  	// #193
    c0a4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    c0a8:	mov	w2, #0x0                   	// #0
    c0ac:	b	bf9c <__sanitizer_get_allocated_size@@Base+0x46c>
    c0b0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c0b4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c0b8:	add	x2, x2, #0x238
    c0bc:	add	x0, x0, #0x258
    c0c0:	mov	x4, #0x0                   	// #0
    c0c4:	mov	x3, #0x0                   	// #0
    c0c8:	mov	w1, #0x91                  	// #145
    c0cc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    c0d0:	ubfiz	x2, x2, #4, #8
    c0d4:	udiv	w0, w1, w2
    c0d8:	mul	w0, w0, w2
    c0dc:	add	x20, x20, w0, uxtw
    c0e0:	b	bd94 <__sanitizer_get_allocated_size@@Base+0x264>
    c0e4:	sub	x0, x0, x1
    c0e8:	b	be4c <__sanitizer_get_allocated_size@@Base+0x31c>
    c0ec:	nop
    c0f0:	stp	x19, x20, [sp, #-96]!
    c0f4:	mov	x19, #0x0                   	// #0
    c0f8:	stp	x21, x22, [sp, #16]
    c0fc:	mov	x21, x0
    c100:	mov	x22, x1
    c104:	stp	x23, x24, [sp, #32]
    c108:	stp	x25, x26, [sp, #48]
    c10c:	mov	x26, #0x100                 	// #256
    c110:	mov	x25, #0x100000              	// #1048576
    c114:	stp	x27, x28, [sp, #64]
    c118:	adrp	x27, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c11c:	add	x28, x27, #0xec0
    c120:	str	x30, [sp, #80]
    c124:	b	c138 <__sanitizer_get_allocated_size@@Base+0x608>
    c128:	add	x19, x19, #0x1
    c12c:	mov	x0, #0x10000000            	// #268435456
    c130:	cmp	x19, x0
    c134:	b.eq	c1dc <__sanitizer_get_allocated_size@@Base+0x6ac>  // b.none
    c138:	lsr	x1, x19, #12
    c13c:	ldr	x0, [x28, x1, lsl #3]
    c140:	dmb	ish
    c144:	cbz	x0, c128 <__sanitizer_get_allocated_size@@Base+0x5f8>
    c148:	and	x2, x19, #0xfff
    c14c:	ldrb	w0, [x0, x2]
    c150:	cbz	w0, c128 <__sanitizer_get_allocated_size@@Base+0x5f8>
    c154:	ldr	x0, [x28, x1, lsl #3]
    c158:	dmb	ish
    c15c:	cbz	x0, c128 <__sanitizer_get_allocated_size@@Base+0x5f8>
    c160:	ldrb	w24, [x0, x2]
    c164:	cmp	w24, #0x35
    c168:	and	x0, x24, #0xff
    c16c:	b.eq	c1cc <__sanitizer_get_allocated_size@@Base+0x69c>  // b.none
    c170:	cmp	x0, #0x10
    c174:	b.ls	c2b4 <__sanitizer_get_allocated_size@@Base+0x784>  // b.plast
    c178:	sub	x0, x0, #0x10
    c17c:	and	x1, x0, #0x3
    c180:	lsr	x0, x0, #2
    c184:	lsl	x0, x26, x0
    c188:	lsr	x24, x0, #2
    c18c:	madd	x24, x24, x1, x0
    c190:	add	x23, x24, #0x10
    c194:	udiv	x23, x25, x23
    c198:	mul	x23, x23, x24
    c19c:	lsl	x20, x19, #20
    c1a0:	add	x23, x23, x20
    c1a4:	cmp	x23, x20
    c1a8:	b.ls	c128 <__sanitizer_get_allocated_size@@Base+0x5f8>  // b.plast
    c1ac:	nop
    c1b0:	mov	x0, x20
    c1b4:	mov	x1, x22
    c1b8:	add	x20, x20, x24
    c1bc:	blr	x21
    c1c0:	cmp	x23, x20
    c1c4:	b.hi	c1b0 <__sanitizer_get_allocated_size@@Base+0x680>  // b.pmore
    c1c8:	b	c128 <__sanitizer_get_allocated_size@@Base+0x5f8>
    c1cc:	mov	x23, #0x8200                	// #33280
    c1d0:	mov	x24, #0x200                 	// #512
    c1d4:	movk	x23, #0xf, lsl #16
    c1d8:	b	c19c <__sanitizer_get_allocated_size@@Base+0x66c>
    c1dc:	add	x19, x27, #0xec0
    c1e0:	add	x19, x19, #0x80, lsl #12
    c1e4:	ldrb	w0, [x19, #3584]
    c1e8:	ldr	x1, [x19, #3576]
    c1ec:	cbnz	w0, c234 <__sanitizer_get_allocated_size@@Base+0x704>
    c1f0:	ldr	x0, [x19, #3528]
    c1f4:	mov	w2, #0x0                   	// #0
    c1f8:	bl	d958 <__sancov_lowest_stack@@Base+0x128>
    c1fc:	ldr	x1, [x19, #3576]
    c200:	cbz	x1, c224 <__sanitizer_get_allocated_size@@Base+0x6f4>
    c204:	ldr	x4, [x19, #3528]
    c208:	mov	x0, #0x0                   	// #0
    c20c:	nop
    c210:	ldr	x2, [x4, x0, lsl #3]
    c214:	str	x0, [x2, #24]
    c218:	add	x0, x0, #0x1
    c21c:	cmp	x0, x1
    c220:	b.ne	c210 <__sanitizer_get_allocated_size@@Base+0x6e0>  // b.any
    c224:	add	x0, x27, #0xec0
    c228:	mov	w2, #0x1                   	// #1
    c22c:	add	x0, x0, #0x80, lsl #12
    c230:	strb	w2, [x0, #3584]
    c234:	cbz	x1, c298 <__sanitizer_get_allocated_size@@Base+0x768>
    c238:	add	x3, x27, #0xec0
    c23c:	mov	x19, #0x0                   	// #0
    c240:	add	x3, x3, #0x80, lsl #12
    c244:	mov	x23, x3
    c248:	ldr	x1, [x3, #3528]
    c24c:	ldr	x0, [x23, #3520]
    c250:	ldr	x20, [x1, x19, lsl #3]
    c254:	sub	x1, x0, #0x1
    c258:	tst	x1, x20
    c25c:	b.ne	c2c8 <__sanitizer_get_allocated_size@@Base+0x798>  // b.any
    c260:	mov	x1, x22
    c264:	add	x0, x20, x0
    c268:	blr	x21
    c26c:	ldr	x1, [x23, #3528]
    c270:	ldr	x3, [x1, x19, lsl #3]
    c274:	cmp	x3, x20
    c278:	b.ne	c2e8 <__sanitizer_get_allocated_size@@Base+0x7b8>  // b.any
    c27c:	ldr	x3, [x3, #24]
    c280:	cmp	x3, x19
    c284:	b.ne	c304 <__sanitizer_get_allocated_size@@Base+0x7d4>  // b.any
    c288:	ldr	x0, [x23, #3576]
    c28c:	add	x19, x19, #0x1
    c290:	cmp	x0, x19
    c294:	b.hi	c24c <__sanitizer_get_allocated_size@@Base+0x71c>  // b.pmore
    c298:	ldp	x21, x22, [sp, #16]
    c29c:	ldp	x23, x24, [sp, #32]
    c2a0:	ldp	x25, x26, [sp, #48]
    c2a4:	ldp	x27, x28, [sp, #64]
    c2a8:	ldr	x30, [sp, #80]
    c2ac:	ldp	x19, x20, [sp], #96
    c2b0:	ret
    c2b4:	ubfiz	x24, x24, #4, #8
    c2b8:	add	x23, x24, #0x10
    c2bc:	udiv	x23, x25, x23
    c2c0:	mul	x23, x23, x24
    c2c4:	b	c19c <__sanitizer_get_allocated_size@@Base+0x66c>
    c2c8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c2cc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c2d0:	add	x2, x2, #0x438
    c2d4:	add	x0, x0, #0x300
    c2d8:	mov	x4, #0x0                   	// #0
    c2dc:	mov	x3, #0x0                   	// #0
    c2e0:	mov	w1, #0x12b                 	// #299
    c2e4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    c2e8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c2ec:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c2f0:	mov	x4, x20
    c2f4:	add	x2, x2, #0x4f8
    c2f8:	add	x0, x0, #0x300
    c2fc:	mov	w1, #0x115                 	// #277
    c300:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    c304:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c308:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c30c:	mov	x4, x19
    c310:	add	x2, x2, #0x510
    c314:	add	x0, x0, #0x300
    c318:	mov	w1, #0x116                 	// #278
    c31c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    c320:	stp	x19, x20, [sp, #-48]!
    c324:	mov	x20, x2
    c328:	stp	x21, x22, [sp, #16]
    c32c:	mov	x22, x0
    c330:	stp	x23, x30, [sp, #32]
    c334:	and	w23, w3, #0xff
    c338:	cbz	x1, c400 <__sanitizer_get_allocated_size@@Base+0x8d0>
    c33c:	mov	x21, #0x100000000           	// #4294967296
    c340:	mov	x19, x1
    c344:	cmp	x1, x21
    c348:	b.hi	c3cc <__sanitizer_get_allocated_size@@Base+0x89c>  // b.pmore
    c34c:	bl	ab78 <__sanitizer_print_stack_trace@@Base+0xe0>
    c350:	adrp	x21, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c354:	add	x21, x21, #0xec0
    c358:	mov	x1, x0
    c35c:	mov	x3, x20
    c360:	mov	x0, x21
    c364:	mov	x2, x19
    c368:	bl	e420 <__sancov_lowest_stack@@Base+0xbf0>
    c36c:	mov	x20, x0
    c370:	cbz	x0, c434 <__sanitizer_get_allocated_size@@Base+0x904>
    c374:	cbz	w23, c384 <__sanitizer_get_allocated_size@@Base+0x854>
    c378:	mov	x1, #0xffffffffffff        	// #281474976710655
    c37c:	cmp	x0, x1
    c380:	b.ls	c408 <__sanitizer_get_allocated_size@@Base+0x8d8>  // b.plast
    c384:	mov	x0, x22
    c388:	mov	x2, x19
    c38c:	mov	x1, x20
    c390:	bl	ad30 <__sanitizer_print_stack_trace@@Base+0x298>
    c394:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c398:	ldr	x0, [x0, #3488]
    c39c:	cbz	x0, c3ac <__sanitizer_get_allocated_size@@Base+0x87c>
    c3a0:	mov	x1, x19
    c3a4:	mov	x0, x20
    c3a8:	bl	6780 <__sanitizer_malloc_hook@plt>
    c3ac:	mov	x1, x19
    c3b0:	mov	x0, x20
    c3b4:	bl	13d30 <__sancov_default_options@@Base+0x3138>
    c3b8:	mov	x0, x20
    c3bc:	ldp	x21, x22, [sp, #16]
    c3c0:	ldp	x23, x30, [sp, #32]
    c3c4:	ldp	x19, x20, [sp], #48
    c3c8:	ret
    c3cc:	bl	10ff8 <__sancov_default_options@@Base+0x400>
    c3d0:	tst	w0, #0xff
    c3d4:	b.eq	c450 <__sanitizer_get_allocated_size@@Base+0x920>  // b.none
    c3d8:	mov	x1, x19
    c3dc:	mov	x20, #0x0                   	// #0
    c3e0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c3e4:	add	x0, x0, #0x538
    c3e8:	bl	1e648 <OnPrint@@Base+0x398>
    c3ec:	mov	x0, x20
    c3f0:	ldp	x21, x22, [sp, #16]
    c3f4:	ldp	x23, x30, [sp, #32]
    c3f8:	ldp	x19, x20, [sp], #48
    c3fc:	ret
    c400:	mov	x19, #0x1                   	// #1
    c404:	b	c34c <__sanitizer_get_allocated_size@@Base+0x81c>
    c408:	lsr	x1, x0, #32
    c40c:	ldr	x1, [x21, x1, lsl #3]
    c410:	dmb	ish
    c414:	cbz	x1, c384 <__sanitizer_get_allocated_size@@Base+0x854>
    c418:	lsr	w2, w0, #20
    c41c:	ldrb	w1, [x1, x2]
    c420:	cbz	w1, c384 <__sanitizer_get_allocated_size@@Base+0x854>
    c424:	mov	x2, x19
    c428:	mov	w1, #0x0                   	// #0
    c42c:	bl	6870 <memset@plt>
    c430:	b	c384 <__sanitizer_get_allocated_size@@Base+0x854>
    c434:	bl	10fe8 <__sancov_default_options@@Base+0x3f0>
    c438:	bl	10ff8 <__sancov_default_options@@Base+0x400>
    c43c:	tst	w0, #0xff
    c440:	b.ne	c3b8 <__sanitizer_get_allocated_size@@Base+0x888>  // b.any
    c444:	mov	x1, x22
    c448:	mov	x0, x19
    c44c:	bl	13468 <__sancov_default_options@@Base+0x2870>
    c450:	mov	x2, x22
    c454:	mov	x1, x21
    c458:	mov	x0, x19
    c45c:	bl	13410 <__sancov_default_options@@Base+0x2818>
    c460:	stp	x19, x20, [sp, #-48]!
    c464:	mov	x19, x1
    c468:	str	x30, [sp, #24]
    c46c:	cbnz	x1, c494 <__sanitizer_get_allocated_size@@Base+0x964>
    c470:	str	x3, [sp, #40]
    c474:	bl	10ff8 <__sancov_default_options@@Base+0x400>
    c478:	tst	w0, #0xff
    c47c:	mov	w0, #0x16                  	// #22
    c480:	ldr	x3, [sp, #40]
    c484:	b.eq	c51c <__sanitizer_get_allocated_size@@Base+0x9ec>  // b.none
    c488:	ldr	x30, [sp, #24]
    c48c:	ldp	x19, x20, [sp], #48
    c490:	ret
    c494:	str	x21, [sp, #16]
    c498:	sub	x21, x1, #0x1
    c49c:	mov	x20, x0
    c4a0:	orr	x0, x21, #0x7
    c4a4:	tst	x0, x1
    c4a8:	b.eq	c4b4 <__sanitizer_get_allocated_size@@Base+0x984>  // b.none
    c4ac:	ldr	x21, [sp, #16]
    c4b0:	b	c470 <__sanitizer_get_allocated_size@@Base+0x940>
    c4b4:	mov	x1, x2
    c4b8:	mov	x0, x3
    c4bc:	mov	x2, x19
    c4c0:	mov	w3, #0x1                   	// #1
    c4c4:	bl	c320 <__sanitizer_get_allocated_size@@Base+0x7f0>
    c4c8:	mov	x1, x0
    c4cc:	cbz	x0, c4f0 <__sanitizer_get_allocated_size@@Base+0x9c0>
    c4d0:	tst	x0, x21
    c4d4:	b.ne	c4fc <__sanitizer_get_allocated_size@@Base+0x9cc>  // b.any
    c4d8:	ldr	x21, [sp, #16]
    c4dc:	str	x1, [x20]
    c4e0:	mov	w0, #0x0                   	// #0
    c4e4:	ldr	x30, [sp, #24]
    c4e8:	ldp	x19, x20, [sp], #48
    c4ec:	ret
    c4f0:	mov	w0, #0xc                   	// #12
    c4f4:	ldr	x21, [sp, #16]
    c4f8:	b	c488 <__sanitizer_get_allocated_size@@Base+0x958>
    c4fc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c500:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    c504:	add	x2, x2, #0x570
    c508:	add	x0, x0, #0x360
    c50c:	mov	x4, #0x0                   	// #0
    c510:	mov	x3, #0x0                   	// #0
    c514:	mov	w1, #0x99                  	// #153
    c518:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    c51c:	mov	x1, x3
    c520:	mov	x0, x19
    c524:	str	x21, [sp, #16]
    c528:	bl	133c0 <__sancov_default_options@@Base+0x27c8>
    c52c:	nop
    c530:	stp	x19, x20, [sp, #-48]!
    c534:	mov	x19, x0
    c538:	stp	x21, x22, [sp, #16]
    c53c:	mov	x21, x2
    c540:	mov	x22, x1
    c544:	str	x30, [sp, #32]
    c548:	cbnz	x0, c57c <__sanitizer_get_allocated_size@@Base+0xa4c>
    c54c:	bl	6ac0 <__errno_location@plt>
    c550:	mov	x20, #0x0                   	// #0
    c554:	mov	w1, #0x16                  	// #22
    c558:	str	w1, [x0]
    c55c:	bl	10ff8 <__sancov_default_options@@Base+0x400>
    c560:	tst	w0, #0xff
    c564:	b.eq	c5ac <__sanitizer_get_allocated_size@@Base+0xa7c>  // b.none
    c568:	mov	x0, x20
    c56c:	ldp	x21, x22, [sp, #16]
    c570:	ldr	x30, [sp, #32]
    c574:	ldp	x19, x20, [sp], #48
    c578:	ret
    c57c:	sub	x0, x0, #0x1
    c580:	orr	x2, x19, x1
    c584:	tst	x0, x2
    c588:	b.ne	c54c <__sanitizer_get_allocated_size@@Base+0xa1c>  // b.any
    c58c:	mov	x2, x19
    c590:	mov	x0, x21
    c594:	mov	w3, #0x1                   	// #1
    c598:	bl	c320 <__sanitizer_get_allocated_size@@Base+0x7f0>
    c59c:	mov	x20, x0
    c5a0:	cbnz	x0, c568 <__sanitizer_get_allocated_size@@Base+0xa38>
    c5a4:	bl	13238 <__sancov_default_options@@Base+0x2640>
    c5a8:	b	c568 <__sanitizer_get_allocated_size@@Base+0xa38>
    c5ac:	mov	x2, x21
    c5b0:	mov	x1, x19
    c5b4:	mov	x0, x22
    c5b8:	bl	13368 <__sancov_default_options@@Base+0x2770>
    c5bc:	nop
    c5c0:	stp	x19, x20, [sp, #-32]!
    c5c4:	mov	x19, x0
    c5c8:	sub	x0, x0, #0x1
    c5cc:	stp	x21, x30, [sp, #16]
    c5d0:	tst	x0, x19
    c5d4:	mov	x21, x2
    c5d8:	b.ne	c604 <__sanitizer_get_allocated_size@@Base+0xad4>  // b.any
    c5dc:	mov	x2, x19
    c5e0:	mov	x0, x21
    c5e4:	mov	w3, #0x1                   	// #1
    c5e8:	bl	c320 <__sanitizer_get_allocated_size@@Base+0x7f0>
    c5ec:	mov	x20, x0
    c5f0:	cbz	x0, c62c <__sanitizer_get_allocated_size@@Base+0xafc>
    c5f4:	mov	x0, x20
    c5f8:	ldp	x21, x30, [sp, #16]
    c5fc:	ldp	x19, x20, [sp], #32
    c600:	ret
    c604:	bl	6ac0 <__errno_location@plt>
    c608:	mov	x20, #0x0                   	// #0
    c60c:	mov	w1, #0x16                  	// #22
    c610:	str	w1, [x0]
    c614:	bl	10ff8 <__sancov_default_options@@Base+0x400>
    c618:	tst	w0, #0xff
    c61c:	b.ne	c5f4 <__sanitizer_get_allocated_size@@Base+0xac4>  // b.any
    c620:	mov	x1, x21
    c624:	mov	x0, x19
    c628:	bl	13318 <__sancov_default_options@@Base+0x2720>
    c62c:	bl	13238 <__sancov_default_options@@Base+0x2640>
    c630:	b	c5f4 <__sanitizer_get_allocated_size@@Base+0xac4>
    c634:	nop
    c638:	str	x30, [sp, #-32]!
    c63c:	mov	x2, x0
    c640:	mov	w3, #0x1                   	// #1
    c644:	mov	x0, x1
    c648:	mov	x1, x2
    c64c:	mov	x2, #0x1                   	// #1
    c650:	bl	c320 <__sanitizer_get_allocated_size@@Base+0x7f0>
    c654:	cbz	x0, c660 <__sanitizer_get_allocated_size@@Base+0xb30>
    c658:	ldr	x30, [sp], #32
    c65c:	ret
    c660:	str	x0, [sp, #24]
    c664:	bl	13238 <__sancov_default_options@@Base+0x2640>
    c668:	ldr	x0, [sp, #24]
    c66c:	ldr	x30, [sp], #32
    c670:	ret
    c674:	nop
    c678:	stp	x19, x30, [sp, #-32]!
    c67c:	mov	x19, x0
    c680:	cbz	x1, c68c <__sanitizer_get_allocated_size@@Base+0xb5c>
    c684:	umulh	x0, x0, x1
    c688:	cbnz	x0, c6bc <__sanitizer_get_allocated_size@@Base+0xb8c>
    c68c:	mul	x1, x19, x1
    c690:	mov	x0, x2
    c694:	mov	w3, #0x1                   	// #1
    c698:	mov	x2, #0x1                   	// #1
    c69c:	bl	c320 <__sanitizer_get_allocated_size@@Base+0x7f0>
    c6a0:	cbz	x0, c6ac <__sanitizer_get_allocated_size@@Base+0xb7c>
    c6a4:	ldp	x19, x30, [sp], #32
    c6a8:	ret
    c6ac:	bl	13238 <__sancov_default_options@@Base+0x2640>
    c6b0:	mov	x0, #0x0                   	// #0
    c6b4:	ldp	x19, x30, [sp], #32
    c6b8:	ret
    c6bc:	stp	x1, x2, [sp, #16]
    c6c0:	bl	10ff8 <__sancov_default_options@@Base+0x400>
    c6c4:	tst	w0, #0xff
    c6c8:	ldp	x1, x2, [sp, #16]
    c6cc:	b.ne	c6ac <__sanitizer_get_allocated_size@@Base+0xb7c>  // b.any
    c6d0:	mov	x0, x19
    c6d4:	bl	13250 <__sancov_default_options@@Base+0x2658>
    c6d8:	stp	x19, x20, [sp, #-48]!
    c6dc:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c6e0:	mov	x20, x1
    c6e4:	ldr	x19, [x19, #4000]
    c6e8:	stp	x21, x30, [sp, #16]
    c6ec:	mov	x21, x0
    c6f0:	ldr	x2, [x19]
    c6f4:	cbz	x2, c718 <__sanitizer_get_allocated_size@@Base+0xbe8>
    c6f8:	mov	x1, x21
    c6fc:	mov	x0, x20
    c700:	mov	w3, #0x1                   	// #1
    c704:	bl	c320 <__sanitizer_get_allocated_size@@Base+0x7f0>
    c708:	cbz	x0, c738 <__sanitizer_get_allocated_size@@Base+0xc08>
    c70c:	ldp	x21, x30, [sp, #16]
    c710:	ldp	x19, x20, [sp], #48
    c714:	ret
    c718:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    c71c:	mov	x2, x0
    c720:	mov	x1, x21
    c724:	mov	w3, #0x1                   	// #1
    c728:	str	x0, [x19]
    c72c:	mov	x0, x20
    c730:	bl	c320 <__sanitizer_get_allocated_size@@Base+0x7f0>
    c734:	cbnz	x0, c70c <__sanitizer_get_allocated_size@@Base+0xbdc>
    c738:	str	x0, [sp, #40]
    c73c:	bl	13238 <__sancov_default_options@@Base+0x2640>
    c740:	ldp	x21, x30, [sp, #16]
    c744:	ldr	x0, [sp, #40]
    c748:	ldp	x19, x20, [sp], #48
    c74c:	ret
    c750:	stp	x19, x20, [sp, #-32]!
    c754:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c758:	mov	x19, x0
    c75c:	ldr	x20, [x20, #4000]
    c760:	stp	x21, x30, [sp, #16]
    c764:	mov	x21, x1
    c768:	ldr	x2, [x20]
    c76c:	cbz	x2, c7bc <__sanitizer_get_allocated_size@@Base+0xc8c>
    c770:	sub	x3, x2, #0x1
    c774:	tst	x2, x3
    c778:	b.ne	c7d4 <__sanitizer_get_allocated_size@@Base+0xca4>  // b.any
    c77c:	add	x3, x19, x3
    c780:	neg	x1, x2
    c784:	and	x1, x3, x1
    c788:	cmp	x19, x1
    c78c:	b.hi	c7e4 <__sanitizer_get_allocated_size@@Base+0xcb4>  // b.pmore
    c790:	cmp	x19, #0x0
    c794:	mov	x0, x21
    c798:	csel	x1, x1, x2, ne  // ne = any
    c79c:	mov	w3, #0x1                   	// #1
    c7a0:	bl	c320 <__sanitizer_get_allocated_size@@Base+0x7f0>
    c7a4:	mov	x20, x0
    c7a8:	cbz	x0, c80c <__sanitizer_get_allocated_size@@Base+0xcdc>
    c7ac:	mov	x0, x20
    c7b0:	ldp	x21, x30, [sp, #16]
    c7b4:	ldp	x19, x20, [sp], #32
    c7b8:	ret
    c7bc:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
    c7c0:	mov	x2, x0
    c7c4:	str	x0, [x20]
    c7c8:	sub	x3, x2, #0x1
    c7cc:	tst	x2, x3
    c7d0:	b.eq	c77c <__sanitizer_get_allocated_size@@Base+0xc4c>  // b.none
    c7d4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    c7d8:	add	x0, x0, #0x240
    c7dc:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
    c7e0:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    c7e4:	bl	6ac0 <__errno_location@plt>
    c7e8:	mov	x20, #0x0                   	// #0
    c7ec:	mov	w1, #0xc                   	// #12
    c7f0:	str	w1, [x0]
    c7f4:	bl	10ff8 <__sancov_default_options@@Base+0x400>
    c7f8:	tst	w0, #0xff
    c7fc:	b.ne	c7ac <__sanitizer_get_allocated_size@@Base+0xc7c>  // b.any
    c800:	mov	x1, x21
    c804:	mov	x0, x19
    c808:	bl	132a0 <__sancov_default_options@@Base+0x26a8>
    c80c:	bl	13238 <__sancov_default_options@@Base+0x2640>
    c810:	b	c7ac <__sanitizer_get_allocated_size@@Base+0xc7c>
    c814:	nop
    c818:	stp	x19, x20, [sp, #-48]!
    c81c:	mov	x20, #0x1                   	// #1
    c820:	stp	x21, x22, [sp, #16]
    c824:	adrp	x22, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c828:	add	x22, x22, #0xec0
    c82c:	str	x30, [sp, #32]
    c830:	bl	ab78 <__sanitizer_print_stack_trace@@Base+0xe0>
    c834:	mov	x21, x0
    c838:	add	x19, x0, #0x400
    c83c:	b	c854 <__sanitizer_get_allocated_size@@Base+0xd24>
    c840:	mov	x3, x20
    c844:	mov	x2, x22
    c848:	mov	x1, x19
    c84c:	mov	x0, x21
    c850:	bl	e910 <__sancov_lowest_stack@@Base+0x10e0>
    c854:	ldr	x0, [x19]
    c858:	cbnz	x0, c840 <__sanitizer_get_allocated_size@@Base+0xd10>
    c85c:	add	x20, x20, #0x1
    c860:	add	x19, x19, #0x400
    c864:	cmp	x20, #0x36
    c868:	b.ne	c854 <__sanitizer_get_allocated_size@@Base+0xd24>  // b.any
    c86c:	ldp	x21, x22, [sp, #16]
    c870:	ldr	x30, [sp, #32]
    c874:	ldp	x19, x20, [sp], #48
    c878:	ret
    c87c:	nop
    c880:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c884:	stp	x19, x20, [sp, #-64]!
    c888:	mov	x19, x0
    c88c:	ldr	x1, [x1, #3856]
    c890:	str	x30, [sp, #32]
    c894:	cbz	x1, c89c <__sanitizer_get_allocated_size@@Base+0xd6c>
    c898:	bl	6be0 <__sanitizer_free_hook@plt>
    c89c:	mov	x0, x19
    c8a0:	bl	13d88 <__sancov_default_options@@Base+0x3190>
    c8a4:	cbz	x19, ca54 <__sanitizer_get_allocated_size@@Base+0xf24>
    c8a8:	mov	x0, x19
    c8ac:	bl	aba8 <__sanitizer_print_stack_trace@@Base+0x110>
    c8b0:	adrp	x20, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c8b4:	bl	ab78 <__sanitizer_print_stack_trace@@Base+0xe0>
    c8b8:	mov	x1, #0xffffffffffff        	// #281474976710655
    c8bc:	cmp	x19, x1
    c8c0:	b.ls	c998 <__sanitizer_get_allocated_size@@Base+0xe68>  // b.plast
    c8c4:	add	x0, x20, #0xec0
    c8c8:	add	x0, x0, #0x80, lsl #12
    c8cc:	ldr	x4, [x0, #3520]
    c8d0:	sub	x0, x4, #0x1
    c8d4:	tst	x19, x0
    c8d8:	b.ne	ca60 <__sanitizer_get_allocated_size@@Base+0xf30>  // b.any
    c8dc:	adrp	x0, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    c8e0:	sub	x19, x19, x4
    c8e4:	add	x0, x0, #0xee8
    c8e8:	mov	w2, #0x1                   	// #1
    c8ec:	ldxrb	w1, [x0]
    c8f0:	stxrb	w3, w2, [x0]
    c8f4:	cbnz	w3, c8ec <__sanitizer_get_allocated_size@@Base+0xdbc>
    c8f8:	dmb	ish
    c8fc:	tst	w1, #0xff
    c900:	b.eq	c908 <__sanitizer_get_allocated_size@@Base+0xdd8>  // b.none
    c904:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
    c908:	add	x20, x20, #0xec0
    c90c:	add	x0, x20, #0x80, lsl #12
    c910:	ldr	x1, [x19, #24]
    c914:	ldr	x2, [x0, #3528]
    c918:	ldr	x3, [x2, x1, lsl #3]
    c91c:	cmp	x3, x19
    c920:	b.ne	ca34 <__sanitizer_get_allocated_size@@Base+0xf04>  // b.any
    c924:	ldr	x4, [x0, #3576]
    c928:	cmp	x1, x4
    c92c:	b.cs	ca84 <__sanitizer_get_allocated_size@@Base+0xf54>  // b.hs, b.nlast
    c930:	sub	x4, x4, #0x1
    c934:	ldr	x3, [x19, #8]
    c938:	str	x4, [x0, #3576]
    c93c:	ldr	x4, [x2, x4, lsl #3]
    c940:	str	x4, [x2, x1, lsl #3]
    c944:	ldr	x2, [x0, #4160]
    c948:	str	x1, [x4, #24]
    c94c:	sub	x2, x2, x3
    c950:	str	x2, [x0, #4160]
    c954:	ldr	x4, [x0, #3600]
    c958:	strb	wzr, [x0, #3584]
    c95c:	ldr	x2, [x0, #3608]
    c960:	add	x4, x4, #0x1
    c964:	ldr	x1, [x0, #4168]
    c968:	sub	x2, x2, x3
    c96c:	str	x4, [x0, #3600]
    c970:	sub	x1, x1, x3
    c974:	str	x2, [x0, #3608]
    c978:	str	x1, [x0, #4168]
    c97c:	dmb	ish
    c980:	add	x20, x20, #0x81, lsl #12
    c984:	strb	wzr, [x20, #40]
    c988:	ldp	x0, x1, [x19]
    c98c:	ldr	x30, [sp, #32]
    c990:	ldp	x19, x20, [sp], #64
    c994:	b	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    c998:	lsr	x3, x19, #32
    c99c:	add	x2, x20, #0xec0
    c9a0:	ldr	x1, [x2, x3, lsl #3]
    c9a4:	dmb	ish
    c9a8:	cbz	x1, c8c4 <__sanitizer_get_allocated_size@@Base+0xd94>
    c9ac:	lsr	w4, w19, #20
    c9b0:	ldrb	w1, [x1, x4]
    c9b4:	cbz	w1, c8c4 <__sanitizer_get_allocated_size@@Base+0xd94>
    c9b8:	stp	x21, x22, [sp, #16]
    c9bc:	ldr	x1, [x2, x3, lsl #3]
    c9c0:	dmb	ish
    c9c4:	cbz	x1, caa4 <__sanitizer_get_allocated_size@@Base+0xf74>
    c9c8:	ldrb	w21, [x1, x4]
    c9cc:	cbz	x21, caa4 <__sanitizer_get_allocated_size@@Base+0xf74>
    c9d0:	cmp	x21, #0x35
    c9d4:	b.hi	cac4 <__sanitizer_get_allocated_size@@Base+0xf94>  // b.pmore
    c9d8:	lsl	x22, x21, #10
    c9dc:	add	x1, x0, x22
    c9e0:	ldr	x3, [x1, #8]
    c9e4:	cbz	x3, cb00 <__sanitizer_get_allocated_size@@Base+0xfd0>
    c9e8:	ldr	x2, [x0, x22]
    c9ec:	cmp	x2, x3
    c9f0:	b.eq	cae4 <__sanitizer_get_allocated_size@@Base+0xfb4>  // b.none
    c9f4:	add	x21, x2, x21, lsl #7
    c9f8:	add	x3, x0, x22
    c9fc:	add	x21, x21, #0x4
    ca00:	add	x2, x2, #0x1
    ca04:	mov	x1, #0xd800                	// #55296
    ca08:	add	x1, x0, x1
    ca0c:	str	x2, [x0, x22]
    ca10:	str	x19, [x0, x21, lsl #3]
    ca14:	ldr	x0, [x1, #16]
    ca18:	ldr	x2, [x3, #16]
    ca1c:	ldp	x21, x22, [sp, #16]
    ca20:	sub	x0, x0, x2
    ca24:	ldr	x30, [sp, #32]
    ca28:	str	x0, [x1, #16]
    ca2c:	ldp	x19, x20, [sp], #64
    ca30:	ret
    ca34:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ca38:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ca3c:	mov	x4, x19
    ca40:	add	x2, x2, #0x5c8
    ca44:	add	x0, x0, #0x300
    ca48:	mov	w1, #0x88                  	// #136
    ca4c:	stp	x21, x22, [sp, #16]
    ca50:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    ca54:	ldr	x30, [sp, #32]
    ca58:	ldp	x19, x20, [sp], #64
    ca5c:	b	ab78 <__sanitizer_print_stack_trace@@Base+0xe0>
    ca60:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ca64:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ca68:	add	x2, x2, #0x5a0
    ca6c:	add	x0, x0, #0x300
    ca70:	mov	x4, #0x0                   	// #0
    ca74:	mov	x3, #0x0                   	// #0
    ca78:	mov	w1, #0x123                 	// #291
    ca7c:	stp	x21, x22, [sp, #16]
    ca80:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    ca84:	mov	x3, x1
    ca88:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ca8c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ca90:	add	x2, x2, #0x5e8
    ca94:	add	x0, x0, #0x300
    ca98:	mov	w1, #0x89                  	// #137
    ca9c:	stp	x21, x22, [sp, #16]
    caa0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    caa4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    caa8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    caac:	add	x2, x2, #0x810
    cab0:	add	x0, x0, #0x708
    cab4:	mov	x4, #0x0                   	// #0
    cab8:	mov	x3, #0x0                   	// #0
    cabc:	mov	w1, #0xae                  	// #174
    cac0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    cac4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    cac8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    cacc:	mov	x3, x21
    cad0:	add	x2, x2, #0x6e8
    cad4:	add	x0, x0, #0x708
    cad8:	mov	x4, #0x36                  	// #54
    cadc:	mov	w1, #0xaf                  	// #175
    cae0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    cae4:	add	x2, x20, #0xec0
    cae8:	mov	x3, x21
    caec:	str	x0, [sp, #56]
    caf0:	bl	e910 <__sancov_lowest_stack@@Base+0x10e0>
    caf4:	ldr	x0, [sp, #56]
    caf8:	ldr	x2, [x0, x22]
    cafc:	b	c9f4 <__sanitizer_get_allocated_size@@Base+0xec4>
    cb00:	mov	x4, #0x1                   	// #1
    cb04:	mov	x12, x4
    cb08:	mov	x13, #0x7c                  	// #124
    cb0c:	mov	x11, #0x14                  	// #20
    cb10:	mov	x10, #0x100                 	// #256
    cb14:	mov	w9, #0x4000                	// #16384
    cb18:	mov	x8, #0x3e                  	// #62
    cb1c:	nop
    cb20:	add	x6, x0, x4, lsl #10
    cb24:	lsl	x7, x4, #4
    cb28:	mov	x5, x6
    cb2c:	mov	x2, #0x14                  	// #20
    cb30:	mov	x3, x4
    cb34:	add	x4, x4, #0x1
    cb38:	stp	x13, x7, [x6, #8]
    cb3c:	cmp	x4, #0x36
    cb40:	str	x2, [x5, #24]
    cb44:	b.eq	cbb4 <__sanitizer_get_allocated_size@@Base+0x1084>  // b.none
    cb48:	cmp	x4, #0x35
    cb4c:	b.eq	cbbc <__sanitizer_get_allocated_size@@Base+0x108c>  // b.none
    cb50:	cmp	x4, #0x10
    cb54:	b.ls	cb20 <__sanitizer_get_allocated_size@@Base+0xff0>  // b.plast
    cb58:	sub	x2, x3, #0xf
    cb5c:	add	x5, x5, #0x400
    cb60:	and	x7, x2, #0x3
    cb64:	mov	x3, x4
    cb68:	lsr	x2, x2, #2
    cb6c:	add	x4, x4, #0x1
    cb70:	lsl	x2, x10, x2
    cb74:	lsr	x6, x2, #2
    cb78:	madd	x6, x6, x7, x2
    cb7c:	str	x6, [x5, #16]
    cb80:	udiv	w2, w9, w6
    cb84:	cmp	x2, #0x0
    cb88:	csel	x2, x2, x12, ne  // ne = any
    cb8c:	cmp	x2, #0x3e
    cb90:	csel	x2, x2, x8, ls  // ls = plast
    cb94:	add	x7, x2, #0x2
    cb98:	lsl	x2, x2, #1
    cb9c:	str	x2, [x5, #8]
    cba0:	cmp	x6, x7, lsl #3
    cba4:	csel	x2, x11, xzr, cc  // cc = lo, ul, last
    cba8:	str	x2, [x5, #24]
    cbac:	cmp	x4, #0x36
    cbb0:	b.ne	cb48 <__sanitizer_get_allocated_size@@Base+0x1018>  // b.any
    cbb4:	ldr	x3, [x1, #8]
    cbb8:	b	c9e8 <__sanitizer_get_allocated_size@@Base+0xeb8>
    cbbc:	add	x2, x0, #0x8, lsl #12
    cbc0:	mov	x3, #0x200                 	// #512
    cbc4:	mov	x4, #0x40                  	// #64
    cbc8:	str	x4, [x2, #21512]
    cbcc:	str	x3, [x2, #21520]
    cbd0:	str	xzr, [x2, #21528]
    cbd4:	ldr	x3, [x1, #8]
    cbd8:	b	c9e8 <__sanitizer_get_allocated_size@@Base+0xeb8>
    cbdc:	nop
    cbe0:	b	c880 <__sanitizer_get_allocated_size@@Base+0xd50>
    cbe4:	nop
    cbe8:	stp	x19, x20, [sp, #-96]!
    cbec:	mov	x20, x2
    cbf0:	stp	x21, x22, [sp, #16]
    cbf4:	mov	x22, x0
    cbf8:	stp	x23, x24, [sp, #32]
    cbfc:	mov	x23, x3
    cc00:	str	x30, [sp, #64]
    cc04:	cbz	x1, cfbc <__sanitizer_get_allocated_size@@Base+0x148c>
    cc08:	mov	x0, x1
    cc0c:	mov	x19, x1
    cc10:	bl	aba8 <__sanitizer_print_stack_trace@@Base+0x110>
    cc14:	mov	x0, #0x100000000           	// #4294967296
    cc18:	cmp	x20, x0
    cc1c:	b.ls	cd58 <__sanitizer_get_allocated_size@@Base+0x1228>  // b.plast
    cc20:	bl	ab78 <__sanitizer_print_stack_trace@@Base+0xe0>
    cc24:	adrp	x21, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    cc28:	mov	x1, #0xffffffffffff        	// #281474976710655
    cc2c:	cmp	x19, x1
    cc30:	b.hi	cc54 <__sanitizer_get_allocated_size@@Base+0x1124>  // b.pmore
    cc34:	lsr	x3, x19, #32
    cc38:	add	x2, x21, #0xec0
    cc3c:	ldr	x1, [x2, x3, lsl #3]
    cc40:	dmb	ish
    cc44:	cbz	x1, cc54 <__sanitizer_get_allocated_size@@Base+0x1124>
    cc48:	lsr	w4, w19, #20
    cc4c:	ldrb	w1, [x1, x4]
    cc50:	cbnz	w1, d1bc <__sanitizer_get_allocated_size@@Base+0x168c>
    cc54:	add	x0, x21, #0xec0
    cc58:	add	x0, x0, #0x80, lsl #12
    cc5c:	ldr	x4, [x0, #3520]
    cc60:	sub	x0, x4, #0x1
    cc64:	tst	x19, x0
    cc68:	b.ne	d0a4 <__sanitizer_get_allocated_size@@Base+0x1574>  // b.any
    cc6c:	adrp	x0, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    cc70:	sub	x19, x19, x4
    cc74:	add	x0, x0, #0xee8
    cc78:	mov	w2, #0x1                   	// #1
    cc7c:	ldxrb	w1, [x0]
    cc80:	stxrb	w3, w2, [x0]
    cc84:	cbnz	w3, cc7c <__sanitizer_get_allocated_size@@Base+0x114c>
    cc88:	dmb	ish
    cc8c:	tst	w1, #0xff
    cc90:	b.eq	cc98 <__sanitizer_get_allocated_size@@Base+0x1168>  // b.none
    cc94:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
    cc98:	add	x21, x21, #0xec0
    cc9c:	add	x0, x21, #0x80, lsl #12
    cca0:	ldr	x1, [x19, #24]
    cca4:	ldr	x2, [x0, #3528]
    cca8:	ldr	x3, [x2, x1, lsl #3]
    ccac:	cmp	x3, x19
    ccb0:	b.ne	d380 <__sanitizer_get_allocated_size@@Base+0x1850>  // b.any
    ccb4:	ldr	x4, [x0, #3576]
    ccb8:	cmp	x1, x4
    ccbc:	b.cs	d3a0 <__sanitizer_get_allocated_size@@Base+0x1870>  // b.hs, b.nlast
    ccc0:	sub	x4, x4, #0x1
    ccc4:	ldr	x3, [x19, #8]
    ccc8:	str	x4, [x0, #3576]
    cccc:	ldr	x4, [x2, x4, lsl #3]
    ccd0:	str	x4, [x2, x1, lsl #3]
    ccd4:	ldr	x2, [x0, #4160]
    ccd8:	str	x1, [x4, #24]
    ccdc:	sub	x2, x2, x3
    cce0:	str	x2, [x0, #4160]
    cce4:	ldr	x4, [x0, #3600]
    cce8:	strb	wzr, [x0, #3584]
    ccec:	ldr	x2, [x0, #3608]
    ccf0:	add	x4, x4, #0x1
    ccf4:	ldr	x1, [x0, #4168]
    ccf8:	sub	x2, x2, x3
    ccfc:	str	x4, [x0, #3600]
    cd00:	sub	x1, x1, x3
    cd04:	str	x2, [x0, #3608]
    cd08:	str	x1, [x0, #4168]
    cd0c:	dmb	ish
    cd10:	add	x21, x21, #0x81, lsl #12
    cd14:	strb	wzr, [x21, #40]
    cd18:	ldp	x0, x1, [x19]
    cd1c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    cd20:	bl	10ff8 <__sancov_default_options@@Base+0x400>
    cd24:	tst	w0, #0xff
    cd28:	b.eq	d7c4 <__sanitizer_get_allocated_size@@Base+0x1c94>  // b.none
    cd2c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    cd30:	mov	x1, x20
    cd34:	add	x0, x0, #0x538
    cd38:	mov	x23, #0x0                   	// #0
    cd3c:	bl	1e648 <OnPrint@@Base+0x398>
    cd40:	mov	x0, x23
    cd44:	ldp	x21, x22, [sp, #16]
    cd48:	ldp	x23, x24, [sp, #32]
    cd4c:	ldr	x30, [sp, #64]
    cd50:	ldp	x19, x20, [sp], #96
    cd54:	ret
    cd58:	stp	x25, x26, [sp, #48]
    cd5c:	bl	ab78 <__sanitizer_print_stack_trace@@Base+0xe0>
    cd60:	mov	x24, x0
    cd64:	cbz	x20, d0c8 <__sanitizer_get_allocated_size@@Base+0x1598>
    cd68:	mov	x0, #0xffffffffffff        	// #281474976710655
    cd6c:	cmp	x19, x0
    cd70:	b.ls	cfec <__sanitizer_get_allocated_size@@Base+0x14bc>  // b.plast
    cd74:	adrp	x21, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    cd78:	adrp	x0, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    cd7c:	add	x0, x0, #0xee8
    cd80:	mov	w2, #0x1                   	// #1
    cd84:	ldxrb	w1, [x0]
    cd88:	stxrb	w3, w2, [x0]
    cd8c:	cbnz	w3, cd84 <__sanitizer_get_allocated_size@@Base+0x1254>
    cd90:	dmb	ish
    cd94:	tst	w1, #0xff
    cd98:	b.eq	cda0 <__sanitizer_get_allocated_size@@Base+0x1270>  // b.none
    cd9c:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
    cda0:	add	x1, x21, #0xec0
    cda4:	add	x0, x1, #0x80, lsl #12
    cda8:	ldr	x6, [x0, #3576]
    cdac:	cbz	x6, d3c0 <__sanitizer_get_allocated_size@@Base+0x1890>
    cdb0:	ldr	x2, [x0, #3528]
    cdb4:	mov	x1, #0x0                   	// #0
    cdb8:	add	x6, x2, x6, lsl #3
    cdbc:	nop
    cdc0:	ldr	x4, [x2]
    cdc4:	cmp	x4, x19
    cdc8:	b.hi	cddc <__sanitizer_get_allocated_size@@Base+0x12ac>  // b.pmore
    cdcc:	sub	x3, x19, x1
    cdd0:	sub	x5, x19, x4
    cdd4:	cmp	x5, x3
    cdd8:	csel	x1, x1, x4, cs  // cs = hs, nlast
    cddc:	add	x2, x2, #0x8
    cde0:	cmp	x6, x2
    cde4:	b.ne	cdc0 <__sanitizer_get_allocated_size@@Base+0x1290>  // b.any
    cde8:	cbz	x1, d438 <__sanitizer_get_allocated_size@@Base+0x1908>
    cdec:	ldr	x4, [x1]
    cdf0:	cmp	x4, x1
    cdf4:	b.hi	d3d0 <__sanitizer_get_allocated_size@@Base+0x18a0>  // b.pmore
    cdf8:	ldr	x0, [x1, #8]
    cdfc:	add	x4, x4, x0
    ce00:	cmp	x4, x1
    ce04:	b.ls	d3ec <__sanitizer_get_allocated_size@@Base+0x18bc>  // b.plast
    ce08:	cmp	x1, x19
    ce0c:	b.hi	d408 <__sanitizer_get_allocated_size@@Base+0x18d8>  // b.pmore
    ce10:	cmp	x4, x19
    ce14:	b.ls	d350 <__sanitizer_get_allocated_size@@Base+0x1820>  // b.plast
    ce18:	add	x0, x21, #0xec0
    ce1c:	add	x2, x0, #0x80, lsl #12
    ce20:	ldr	x2, [x2, #3520]
    ce24:	sub	x3, x2, #0x1
    ce28:	tst	x3, x1
    ce2c:	b.ne	d44c <__sanitizer_get_allocated_size@@Base+0x191c>  // b.any
    ce30:	dmb	ish
    ce34:	add	x0, x0, #0x81, lsl #12
    ce38:	strb	wzr, [x0, #40]
    ce3c:	cmn	x1, x2
    ce40:	b.eq	d360 <__sanitizer_get_allocated_size@@Base+0x1830>  // b.none
    ce44:	mov	x0, #0xffffffffffff        	// #281474976710655
    ce48:	cmp	x19, x0
    ce4c:	b.ls	d1b0 <__sanitizer_get_allocated_size@@Base+0x1680>  // b.plast
    ce50:	add	x0, x21, #0xec0
    ce54:	add	x0, x0, #0x80, lsl #12
    ce58:	ldr	x1, [x0, #3520]
    ce5c:	sub	x2, x1, #0x1
    ce60:	tst	x19, x2
    ce64:	b.ne	d0a8 <__sanitizer_get_allocated_size@@Base+0x1578>  // b.any
    ce68:	sub	x0, x19, x1
    ce6c:	tst	x1, x2
    ce70:	ldr	x0, [x0, #16]
    ce74:	b.ne	d428 <__sanitizer_get_allocated_size@@Base+0x18f8>  // b.any
    ce78:	add	x0, x0, x2
    ce7c:	neg	x2, x1
    ce80:	and	x2, x0, x2
    ce84:	cmp	x2, x20
    ce88:	csel	x25, x2, x20, ls  // ls = plast
    ce8c:	mov	x3, x23
    ce90:	mov	x2, x20
    ce94:	mov	x1, x24
    ce98:	add	x0, x21, #0xec0
    ce9c:	bl	e420 <__sancov_lowest_stack@@Base+0xbf0>
    cea0:	mov	x23, x0
    cea4:	cbz	x0, ceb4 <__sanitizer_get_allocated_size@@Base+0x1384>
    cea8:	mov	x2, x25
    ceac:	mov	x1, x19
    ceb0:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
    ceb4:	mov	x0, #0xffffffffffff        	// #281474976710655
    ceb8:	cmp	x19, x0
    cebc:	b.ls	d2bc <__sanitizer_get_allocated_size@@Base+0x178c>  // b.plast
    cec0:	add	x0, x21, #0xec0
    cec4:	add	x0, x0, #0x80, lsl #12
    cec8:	ldr	x4, [x0, #3520]
    cecc:	sub	x0, x4, #0x1
    ced0:	tst	x19, x0
    ced4:	b.ne	d0a8 <__sanitizer_get_allocated_size@@Base+0x1578>  // b.any
    ced8:	adrp	x0, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    cedc:	sub	x19, x19, x4
    cee0:	add	x0, x0, #0xee8
    cee4:	mov	w2, #0x1                   	// #1
    cee8:	ldxrb	w1, [x0]
    ceec:	stxrb	w3, w2, [x0]
    cef0:	cbnz	w3, cee8 <__sanitizer_get_allocated_size@@Base+0x13b8>
    cef4:	dmb	ish
    cef8:	tst	w1, #0xff
    cefc:	b.eq	cf04 <__sanitizer_get_allocated_size@@Base+0x13d4>  // b.none
    cf00:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
    cf04:	add	x21, x21, #0xec0
    cf08:	add	x0, x21, #0x80, lsl #12
    cf0c:	ldr	x1, [x19, #24]
    cf10:	ldr	x2, [x0, #3528]
    cf14:	ldr	x3, [x2, x1, lsl #3]
    cf18:	cmp	x3, x19
    cf1c:	b.ne	d384 <__sanitizer_get_allocated_size@@Base+0x1854>  // b.any
    cf20:	ldr	x4, [x0, #3576]
    cf24:	cmp	x1, x4
    cf28:	b.cs	d3a4 <__sanitizer_get_allocated_size@@Base+0x1874>  // b.hs, b.nlast
    cf2c:	sub	x4, x4, #0x1
    cf30:	ldr	x3, [x19, #8]
    cf34:	str	x4, [x0, #3576]
    cf38:	ldr	x4, [x2, x4, lsl #3]
    cf3c:	str	x4, [x2, x1, lsl #3]
    cf40:	ldr	x2, [x0, #4160]
    cf44:	str	x1, [x4, #24]
    cf48:	sub	x2, x2, x3
    cf4c:	str	x2, [x0, #4160]
    cf50:	ldr	x4, [x0, #3600]
    cf54:	strb	wzr, [x0, #3584]
    cf58:	ldr	x2, [x0, #3608]
    cf5c:	add	x4, x4, #0x1
    cf60:	ldr	x1, [x0, #4168]
    cf64:	sub	x2, x2, x3
    cf68:	str	x4, [x0, #3600]
    cf6c:	sub	x1, x1, x3
    cf70:	str	x2, [x0, #3608]
    cf74:	str	x1, [x0, #4168]
    cf78:	dmb	ish
    cf7c:	add	x21, x21, #0x81, lsl #12
    cf80:	strb	wzr, [x21, #40]
    cf84:	ldp	x0, x1, [x19]
    cf88:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    cf8c:	ldp	x25, x26, [sp, #48]
    cf90:	cbz	x23, cd40 <__sanitizer_get_allocated_size@@Base+0x1210>
    cf94:	mov	x2, x20
    cf98:	mov	x0, x22
    cf9c:	mov	x1, x23
    cfa0:	bl	ad30 <__sanitizer_print_stack_trace@@Base+0x298>
    cfa4:	mov	x0, x23
    cfa8:	ldp	x21, x22, [sp, #16]
    cfac:	ldp	x23, x24, [sp, #32]
    cfb0:	ldr	x30, [sp, #64]
    cfb4:	ldp	x19, x20, [sp], #96
    cfb8:	ret
    cfbc:	mov	x0, #0x100000000           	// #4294967296
    cfc0:	cmp	x2, x0
    cfc4:	b.hi	d09c <__sanitizer_get_allocated_size@@Base+0x156c>  // b.pmore
    cfc8:	bl	ab78 <__sanitizer_print_stack_trace@@Base+0xe0>
    cfcc:	mov	x1, x0
    cfd0:	mov	x3, x23
    cfd4:	mov	x2, x20
    cfd8:	adrp	x0, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    cfdc:	add	x0, x0, #0xec0
    cfe0:	bl	e420 <__sancov_lowest_stack@@Base+0xbf0>
    cfe4:	mov	x23, x0
    cfe8:	b	cf90 <__sanitizer_get_allocated_size@@Base+0x1460>
    cfec:	lsr	x0, x19, #32
    cff0:	adrp	x21, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    cff4:	add	x1, x21, #0xec0
    cff8:	ldr	x1, [x1, x0, lsl #3]
    cffc:	dmb	ish
    d000:	cbz	x1, cd78 <__sanitizer_get_allocated_size@@Base+0x1248>
    d004:	lsr	w2, w19, #20
    d008:	lsr	x3, x19, #20
    d00c:	ldrb	w1, [x1, x2]
    d010:	cbz	w1, cd78 <__sanitizer_get_allocated_size@@Base+0x1248>
    d014:	add	x2, x21, #0xec0
    d018:	ldr	x1, [x2, x0, lsl #3]
    d01c:	dmb	ish
    d020:	cbz	x1, ce50 <__sanitizer_get_allocated_size@@Base+0x1320>
    d024:	and	x3, x3, #0xfff
    d028:	ldrb	w1, [x1, x3]
    d02c:	cbz	w1, ce50 <__sanitizer_get_allocated_size@@Base+0x1320>
    d030:	ldr	x1, [x2, x0, lsl #3]
    d034:	dmb	ish
    d038:	cbz	x1, d5c4 <__sanitizer_get_allocated_size@@Base+0x1a94>
    d03c:	ldrb	w1, [x1, x3]
    d040:	cbz	w1, d5c4 <__sanitizer_get_allocated_size@@Base+0x1a94>
    d044:	ldr	x25, [x2, x0, lsl #3]
    d048:	dmb	ish
    d04c:	cbz	x25, ce8c <__sanitizer_get_allocated_size@@Base+0x135c>
    d050:	ldrb	w0, [x25, x3]
    d054:	cmp	w0, #0x35
    d058:	and	x1, x0, #0xff
    d05c:	b.eq	d4bc <__sanitizer_get_allocated_size@@Base+0x198c>  // b.none
    d060:	ubfiz	x0, x0, #4, #8
    d064:	cmp	x0, x20
    d068:	csel	x25, x0, x20, ls  // ls = plast
    d06c:	cmp	x1, #0x10
    d070:	b.ls	ce8c <__sanitizer_get_allocated_size@@Base+0x135c>  // b.plast
    d074:	sub	x1, x1, #0x10
    d078:	mov	x2, #0x100                 	// #256
    d07c:	and	x25, x1, #0x3
    d080:	lsr	x1, x1, #2
    d084:	lsl	x1, x2, x1
    d088:	lsr	x2, x1, #2
    d08c:	madd	x2, x2, x25, x1
    d090:	cmp	x2, x20
    d094:	csel	x25, x2, x20, ls  // ls = plast
    d098:	b	ce8c <__sanitizer_get_allocated_size@@Base+0x135c>
    d09c:	bl	ab78 <__sanitizer_print_stack_trace@@Base+0xe0>
    d0a0:	b	cd20 <__sanitizer_get_allocated_size@@Base+0x11f0>
    d0a4:	stp	x25, x26, [sp, #48]
    d0a8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d0ac:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d0b0:	add	x2, x2, #0x5a0
    d0b4:	add	x0, x0, #0x300
    d0b8:	mov	x4, #0x0                   	// #0
    d0bc:	mov	x3, #0x0                   	// #0
    d0c0:	mov	w1, #0x123                 	// #291
    d0c4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d0c8:	mov	x0, #0xffffffffffff        	// #281474976710655
    d0cc:	adrp	x21, 62000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    d0d0:	cmp	x19, x0
    d0d4:	b.ls	d228 <__sanitizer_get_allocated_size@@Base+0x16f8>  // b.plast
    d0d8:	add	x0, x21, #0xec0
    d0dc:	add	x0, x0, #0x80, lsl #12
    d0e0:	ldr	x4, [x0, #3520]
    d0e4:	sub	x0, x4, #0x1
    d0e8:	tst	x19, x0
    d0ec:	b.ne	d0a8 <__sanitizer_get_allocated_size@@Base+0x1578>  // b.any
    d0f0:	adrp	x0, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    d0f4:	sub	x19, x19, x4
    d0f8:	add	x0, x0, #0xee8
    d0fc:	mov	w2, #0x1                   	// #1
    d100:	ldxrb	w1, [x0]
    d104:	stxrb	w3, w2, [x0]
    d108:	cbnz	w3, d100 <__sanitizer_get_allocated_size@@Base+0x15d0>
    d10c:	dmb	ish
    d110:	tst	w1, #0xff
    d114:	b.eq	d11c <__sanitizer_get_allocated_size@@Base+0x15ec>  // b.none
    d118:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
    d11c:	add	x21, x21, #0xec0
    d120:	add	x0, x21, #0x80, lsl #12
    d124:	ldr	x1, [x19, #24]
    d128:	ldr	x2, [x0, #3528]
    d12c:	ldr	x3, [x2, x1, lsl #3]
    d130:	cmp	x3, x19
    d134:	b.ne	d384 <__sanitizer_get_allocated_size@@Base+0x1854>  // b.any
    d138:	ldr	x4, [x0, #3576]
    d13c:	cmp	x1, x4
    d140:	b.cs	d3a4 <__sanitizer_get_allocated_size@@Base+0x1874>  // b.hs, b.nlast
    d144:	sub	x4, x4, #0x1
    d148:	ldr	x3, [x19, #8]
    d14c:	str	x4, [x0, #3576]
    d150:	ldr	x4, [x2, x4, lsl #3]
    d154:	str	x4, [x2, x1, lsl #3]
    d158:	ldr	x2, [x0, #4160]
    d15c:	str	x1, [x4, #24]
    d160:	sub	x2, x2, x3
    d164:	str	x2, [x0, #4160]
    d168:	ldr	x4, [x0, #3600]
    d16c:	strb	wzr, [x0, #3584]
    d170:	ldr	x2, [x0, #3608]
    d174:	add	x4, x4, #0x1
    d178:	ldr	x1, [x0, #4168]
    d17c:	sub	x2, x2, x3
    d180:	str	x4, [x0, #3600]
    d184:	sub	x1, x1, x3
    d188:	str	x2, [x0, #3608]
    d18c:	str	x1, [x0, #4168]
    d190:	dmb	ish
    d194:	add	x21, x21, #0x81, lsl #12
    d198:	strb	wzr, [x21, #40]
    d19c:	ldp	x0, x1, [x19]
    d1a0:	mov	x23, #0x0                   	// #0
    d1a4:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
    d1a8:	ldp	x25, x26, [sp, #48]
    d1ac:	b	cd40 <__sanitizer_get_allocated_size@@Base+0x1210>
    d1b0:	lsr	x3, x19, #20
    d1b4:	lsr	x0, x19, #32
    d1b8:	b	d014 <__sanitizer_get_allocated_size@@Base+0x14e4>
    d1bc:	ldr	x1, [x2, x3, lsl #3]
    d1c0:	dmb	ish
    d1c4:	cbz	x1, d46c <__sanitizer_get_allocated_size@@Base+0x193c>
    d1c8:	ldrb	w23, [x1, x4]
    d1cc:	cbz	x23, d46c <__sanitizer_get_allocated_size@@Base+0x193c>
    d1d0:	cmp	x23, #0x35
    d1d4:	b.hi	d4b0 <__sanitizer_get_allocated_size@@Base+0x1980>  // b.pmore
    d1d8:	lsl	x24, x23, #10
    d1dc:	add	x1, x0, x24
    d1e0:	ldr	x3, [x1, #8]
    d1e4:	cbz	x3, d4e8 <__sanitizer_get_allocated_size@@Base+0x19b8>
    d1e8:	ldr	x2, [x0, x24]
    d1ec:	cmp	x2, x3
    d1f0:	b.eq	d4cc <__sanitizer_get_allocated_size@@Base+0x199c>  // b.none
    d1f4:	add	x1, x2, x23, lsl #7
    d1f8:	add	x4, x0, x24
    d1fc:	add	x1, x1, #0x4
    d200:	add	x2, x2, #0x1
    d204:	mov	x5, #0xd800                	// #55296
    d208:	add	x3, x0, x5
    d20c:	str	x2, [x0, x24]
    d210:	str	x19, [x0, x1, lsl #3]
    d214:	ldr	x0, [x3, #16]
    d218:	ldr	x1, [x4, #16]
    d21c:	sub	x0, x0, x1
    d220:	str	x0, [x3, #16]
    d224:	b	cd20 <__sanitizer_get_allocated_size@@Base+0x11f0>
    d228:	lsr	x2, x19, #32
    d22c:	add	x1, x21, #0xec0
    d230:	ldr	x0, [x1, x2, lsl #3]
    d234:	dmb	ish
    d238:	cbz	x0, d0d8 <__sanitizer_get_allocated_size@@Base+0x15a8>
    d23c:	lsr	w3, w19, #20
    d240:	ldrb	w0, [x0, x3]
    d244:	cbz	w0, d0d8 <__sanitizer_get_allocated_size@@Base+0x15a8>
    d248:	ldr	x0, [x1, x2, lsl #3]
    d24c:	dmb	ish
    d250:	cbz	x0, d470 <__sanitizer_get_allocated_size@@Base+0x1940>
    d254:	ldrb	w20, [x0, x3]
    d258:	cbz	x20, d470 <__sanitizer_get_allocated_size@@Base+0x1940>
    d25c:	cmp	x20, #0x35
    d260:	b.hi	d490 <__sanitizer_get_allocated_size@@Base+0x1960>  // b.pmore
    d264:	lsl	x22, x20, #10
    d268:	add	x1, x24, x22
    d26c:	ldr	x2, [x1, #8]
    d270:	cbz	x2, d6ec <__sanitizer_get_allocated_size@@Base+0x1bbc>
    d274:	ldr	x0, [x24, x22]
    d278:	cmp	x0, x2
    d27c:	b.eq	d6d4 <__sanitizer_get_allocated_size@@Base+0x1ba4>  // b.none
    d280:	add	x1, x0, x20, lsl #7
    d284:	add	x3, x24, x22
    d288:	add	x1, x1, #0x4
    d28c:	add	x0, x0, #0x1
    d290:	mov	x4, #0xd800                	// #55296
    d294:	add	x2, x24, x4
    d298:	str	x0, [x24, x22]
    d29c:	mov	x23, #0x0                   	// #0
    d2a0:	str	x19, [x24, x1, lsl #3]
    d2a4:	ldr	x0, [x2, #16]
    d2a8:	ldr	x1, [x3, #16]
    d2ac:	ldp	x25, x26, [sp, #48]
    d2b0:	sub	x0, x0, x1
    d2b4:	str	x0, [x2, #16]
    d2b8:	b	cd40 <__sanitizer_get_allocated_size@@Base+0x1210>
    d2bc:	lsr	x2, x19, #32
    d2c0:	add	x1, x21, #0xec0
    d2c4:	ldr	x0, [x1, x2, lsl #3]
    d2c8:	dmb	ish
    d2cc:	cbz	x0, cec0 <__sanitizer_get_allocated_size@@Base+0x1390>
    d2d0:	lsr	w3, w19, #20
    d2d4:	ldrb	w0, [x0, x3]
    d2d8:	cbz	w0, cec0 <__sanitizer_get_allocated_size@@Base+0x1390>
    d2dc:	ldr	x0, [x1, x2, lsl #3]
    d2e0:	dmb	ish
    d2e4:	cbz	x0, d470 <__sanitizer_get_allocated_size@@Base+0x1940>
    d2e8:	ldrb	w25, [x0, x3]
    d2ec:	cbz	x25, d470 <__sanitizer_get_allocated_size@@Base+0x1940>
    d2f0:	mov	x3, x25
    d2f4:	cmp	x25, #0x35
    d2f8:	b.hi	d494 <__sanitizer_get_allocated_size@@Base+0x1964>  // b.pmore
    d2fc:	lsl	x26, x25, #10
    d300:	add	x1, x24, x26
    d304:	ldr	x2, [x1, #8]
    d308:	cbz	x2, d5e4 <__sanitizer_get_allocated_size@@Base+0x1ab4>
    d30c:	ldr	x0, [x24, x26]
    d310:	cmp	x2, x0
    d314:	b.eq	d6bc <__sanitizer_get_allocated_size@@Base+0x1b8c>  // b.none
    d318:	add	x1, x0, x25, lsl #7
    d31c:	add	x3, x24, x26
    d320:	add	x1, x1, #0x4
    d324:	add	x0, x0, #0x1
    d328:	mov	x2, #0xd800                	// #55296
    d32c:	add	x2, x24, x2
    d330:	str	x0, [x24, x26]
    d334:	str	x19, [x24, x1, lsl #3]
    d338:	ldr	x0, [x2, #16]
    d33c:	ldr	x1, [x3, #16]
    d340:	ldp	x25, x26, [sp, #48]
    d344:	sub	x0, x0, x1
    d348:	str	x0, [x2, #16]
    d34c:	b	cf90 <__sanitizer_get_allocated_size@@Base+0x1460>
    d350:	dmb	ish
    d354:	add	x21, x21, #0xec0
    d358:	add	x21, x21, #0x81, lsl #12
    d35c:	strb	wzr, [x21, #40]
    d360:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d364:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d368:	add	x2, x2, #0x238
    d36c:	add	x0, x0, #0x9d8
    d370:	mov	x4, #0x0                   	// #0
    d374:	mov	x3, #0x0                   	// #0
    d378:	mov	w1, #0x62                  	// #98
    d37c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d380:	stp	x25, x26, [sp, #48]
    d384:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d388:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d38c:	mov	x4, x19
    d390:	add	x2, x2, #0x5c8
    d394:	add	x0, x0, #0x300
    d398:	mov	w1, #0x88                  	// #136
    d39c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d3a0:	stp	x25, x26, [sp, #48]
    d3a4:	mov	x3, x1
    d3a8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d3ac:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d3b0:	add	x2, x2, #0x5e8
    d3b4:	add	x0, x0, #0x300
    d3b8:	mov	w1, #0x89                  	// #137
    d3bc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d3c0:	dmb	ish
    d3c4:	add	x1, x1, #0x81, lsl #12
    d3c8:	strb	wzr, [x1, #40]
    d3cc:	b	d360 <__sanitizer_get_allocated_size@@Base+0x1830>
    d3d0:	mov	x3, x1
    d3d4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d3d8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d3dc:	add	x2, x2, #0x3b8
    d3e0:	add	x0, x0, #0x300
    d3e4:	mov	w1, #0xc1                  	// #193
    d3e8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d3ec:	mov	x3, x1
    d3f0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d3f4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d3f8:	add	x2, x2, #0x3e0
    d3fc:	add	x0, x0, #0x300
    d400:	mov	w1, #0xc2                  	// #194
    d404:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d408:	mov	x3, x1
    d40c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d410:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d414:	mov	x4, x19
    d418:	add	x2, x2, #0x418
    d41c:	add	x0, x0, #0x300
    d420:	mov	w1, #0xc3                  	// #195
    d424:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d428:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    d42c:	add	x0, x0, #0x240
    d430:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
    d434:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    d438:	dmb	ish
    d43c:	add	x0, x21, #0xec0
    d440:	add	x0, x0, #0x81, lsl #12
    d444:	strb	wzr, [x0, #40]
    d448:	b	d360 <__sanitizer_get_allocated_size@@Base+0x1830>
    d44c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d450:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d454:	add	x2, x2, #0x438
    d458:	add	x0, x0, #0x300
    d45c:	mov	x4, #0x0                   	// #0
    d460:	mov	x3, #0x0                   	// #0
    d464:	mov	w1, #0x12b                 	// #299
    d468:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d46c:	stp	x25, x26, [sp, #48]
    d470:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d474:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d478:	add	x2, x2, #0x810
    d47c:	add	x0, x0, #0x708
    d480:	mov	x4, #0x0                   	// #0
    d484:	mov	x3, #0x0                   	// #0
    d488:	mov	w1, #0xae                  	// #174
    d48c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d490:	mov	x3, x20
    d494:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d498:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d49c:	add	x2, x2, #0x6e8
    d4a0:	add	x0, x0, #0x708
    d4a4:	mov	x4, #0x36                  	// #54
    d4a8:	mov	w1, #0xaf                  	// #175
    d4ac:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d4b0:	mov	x3, x23
    d4b4:	stp	x25, x26, [sp, #48]
    d4b8:	b	d494 <__sanitizer_get_allocated_size@@Base+0x1964>
    d4bc:	cmp	x20, #0x200
    d4c0:	mov	x2, #0x200                 	// #512
    d4c4:	csel	x25, x20, x2, ls  // ls = plast
    d4c8:	b	ce8c <__sanitizer_get_allocated_size@@Base+0x135c>
    d4cc:	add	x2, x21, #0xec0
    d4d0:	mov	x3, x23
    d4d4:	str	x0, [sp, #88]
    d4d8:	bl	e910 <__sancov_lowest_stack@@Base+0x10e0>
    d4dc:	ldr	x0, [sp, #88]
    d4e0:	ldr	x2, [x0, x24]
    d4e4:	b	d1f4 <__sanitizer_get_allocated_size@@Base+0x16c4>
    d4e8:	mov	x4, #0x1                   	// #1
    d4ec:	mov	x12, x4
    d4f0:	mov	x13, #0x7c                  	// #124
    d4f4:	mov	x11, #0x14                  	// #20
    d4f8:	mov	x10, #0x100                 	// #256
    d4fc:	mov	w9, #0x4000                	// #16384
    d500:	mov	x8, #0x3e                  	// #62
    d504:	nop
    d508:	add	x6, x0, x4, lsl #10
    d50c:	lsl	x7, x4, #4
    d510:	mov	x5, x6
    d514:	mov	x2, #0x14                  	// #20
    d518:	mov	x3, x4
    d51c:	add	x4, x4, #0x1
    d520:	stp	x13, x7, [x6, #8]
    d524:	cmp	x4, #0x36
    d528:	str	x2, [x5, #24]
    d52c:	b.eq	d59c <__sanitizer_get_allocated_size@@Base+0x1a6c>  // b.none
    d530:	cmp	x4, #0x35
    d534:	b.eq	d5a4 <__sanitizer_get_allocated_size@@Base+0x1a74>  // b.none
    d538:	cmp	x4, #0x10
    d53c:	b.ls	d508 <__sanitizer_get_allocated_size@@Base+0x19d8>  // b.plast
    d540:	sub	x2, x3, #0xf
    d544:	add	x5, x5, #0x400
    d548:	and	x7, x2, #0x3
    d54c:	mov	x3, x4
    d550:	lsr	x2, x2, #2
    d554:	add	x4, x4, #0x1
    d558:	lsl	x2, x10, x2
    d55c:	lsr	x6, x2, #2
    d560:	madd	x6, x6, x7, x2
    d564:	str	x6, [x5, #16]
    d568:	udiv	w2, w9, w6
    d56c:	cmp	x2, #0x0
    d570:	csel	x2, x2, x12, ne  // ne = any
    d574:	cmp	x2, #0x3e
    d578:	csel	x2, x2, x8, ls  // ls = plast
    d57c:	add	x7, x2, #0x2
    d580:	lsl	x2, x2, #1
    d584:	str	x2, [x5, #8]
    d588:	cmp	x6, x7, lsl #3
    d58c:	csel	x2, x11, xzr, cc  // cc = lo, ul, last
    d590:	str	x2, [x5, #24]
    d594:	cmp	x4, #0x36
    d598:	b.ne	d530 <__sanitizer_get_allocated_size@@Base+0x1a00>  // b.any
    d59c:	ldr	x3, [x1, #8]
    d5a0:	b	d1e8 <__sanitizer_get_allocated_size@@Base+0x16b8>
    d5a4:	add	x2, x0, #0x8, lsl #12
    d5a8:	mov	x3, #0x200                 	// #512
    d5ac:	mov	x4, #0x40                  	// #64
    d5b0:	str	x4, [x2, #21512]
    d5b4:	str	x3, [x2, #21520]
    d5b8:	str	xzr, [x2, #21528]
    d5bc:	ldr	x3, [x1, #8]
    d5c0:	b	d1e8 <__sanitizer_get_allocated_size@@Base+0x16b8>
    d5c4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d5c8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d5cc:	add	x2, x2, #0x238
    d5d0:	add	x0, x0, #0x258
    d5d4:	mov	x4, #0x0                   	// #0
    d5d8:	mov	x3, #0x0                   	// #0
    d5dc:	mov	w1, #0xcc                  	// #204
    d5e0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d5e4:	mov	x2, #0x1                   	// #1
    d5e8:	mov	x11, x2
    d5ec:	mov	x12, #0x7c                  	// #124
    d5f0:	mov	x10, #0x14                  	// #20
    d5f4:	mov	x9, #0x100                 	// #256
    d5f8:	mov	w8, #0x4000                	// #16384
    d5fc:	mov	x7, #0x3e                  	// #62
    d600:	add	x5, x24, x2, lsl #10
    d604:	lsl	x6, x2, #4
    d608:	mov	x4, x5
    d60c:	mov	x0, #0x14                  	// #20
    d610:	mov	x3, x2
    d614:	add	x2, x2, #0x1
    d618:	stp	x12, x6, [x5, #8]
    d61c:	cmp	x2, #0x36
    d620:	str	x0, [x4, #24]
    d624:	b.eq	d694 <__sanitizer_get_allocated_size@@Base+0x1b64>  // b.none
    d628:	cmp	x2, #0x35
    d62c:	b.eq	d69c <__sanitizer_get_allocated_size@@Base+0x1b6c>  // b.none
    d630:	cmp	x2, #0x10
    d634:	b.ls	d600 <__sanitizer_get_allocated_size@@Base+0x1ad0>  // b.plast
    d638:	sub	x0, x3, #0xf
    d63c:	add	x4, x4, #0x400
    d640:	and	x6, x0, #0x3
    d644:	mov	x3, x2
    d648:	lsr	x0, x0, #2
    d64c:	add	x2, x2, #0x1
    d650:	lsl	x0, x9, x0
    d654:	lsr	x5, x0, #2
    d658:	madd	x5, x5, x6, x0
    d65c:	str	x5, [x4, #16]
    d660:	udiv	w0, w8, w5
    d664:	cmp	x0, #0x0
    d668:	csel	x0, x0, x11, ne  // ne = any
    d66c:	cmp	x0, #0x3e
    d670:	csel	x0, x0, x7, ls  // ls = plast
    d674:	add	x6, x0, #0x2
    d678:	lsl	x0, x0, #1
    d67c:	str	x0, [x4, #8]
    d680:	cmp	x5, x6, lsl #3
    d684:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
    d688:	str	x0, [x4, #24]
    d68c:	cmp	x2, #0x36
    d690:	b.ne	d628 <__sanitizer_get_allocated_size@@Base+0x1af8>  // b.any
    d694:	ldr	x2, [x1, #8]
    d698:	b	d30c <__sanitizer_get_allocated_size@@Base+0x17dc>
    d69c:	add	x0, x24, #0x8, lsl #12
    d6a0:	mov	x2, #0x200                 	// #512
    d6a4:	mov	x3, #0x40                  	// #64
    d6a8:	str	x3, [x0, #21512]
    d6ac:	str	x2, [x0, #21520]
    d6b0:	str	xzr, [x0, #21528]
    d6b4:	ldr	x2, [x1, #8]
    d6b8:	b	d30c <__sanitizer_get_allocated_size@@Base+0x17dc>
    d6bc:	mov	x0, x24
    d6c0:	add	x2, x21, #0xec0
    d6c4:	mov	x3, x25
    d6c8:	bl	e910 <__sancov_lowest_stack@@Base+0x10e0>
    d6cc:	ldr	x0, [x24, x26]
    d6d0:	b	d318 <__sanitizer_get_allocated_size@@Base+0x17e8>
    d6d4:	mov	x0, x24
    d6d8:	add	x2, x21, #0xec0
    d6dc:	mov	x3, x20
    d6e0:	bl	e910 <__sancov_lowest_stack@@Base+0x10e0>
    d6e4:	ldr	x0, [x24, x22]
    d6e8:	b	d280 <__sanitizer_get_allocated_size@@Base+0x1750>
    d6ec:	mov	x2, #0x1                   	// #1
    d6f0:	mov	x11, x2
    d6f4:	mov	x12, #0x7c                  	// #124
    d6f8:	mov	x10, #0x14                  	// #20
    d6fc:	mov	x9, #0x100                 	// #256
    d700:	mov	w8, #0x4000                	// #16384
    d704:	mov	x7, #0x3e                  	// #62
    d708:	add	x5, x24, x2, lsl #10
    d70c:	lsl	x6, x2, #4
    d710:	mov	x4, x5
    d714:	mov	x0, #0x14                  	// #20
    d718:	mov	x3, x2
    d71c:	add	x2, x2, #0x1
    d720:	stp	x12, x6, [x5, #8]
    d724:	cmp	x2, #0x36
    d728:	str	x0, [x4, #24]
    d72c:	b.eq	d79c <__sanitizer_get_allocated_size@@Base+0x1c6c>  // b.none
    d730:	cmp	x2, #0x35
    d734:	b.eq	d7a4 <__sanitizer_get_allocated_size@@Base+0x1c74>  // b.none
    d738:	cmp	x2, #0x10
    d73c:	b.ls	d708 <__sanitizer_get_allocated_size@@Base+0x1bd8>  // b.plast
    d740:	sub	x0, x3, #0xf
    d744:	add	x4, x4, #0x400
    d748:	and	x6, x0, #0x3
    d74c:	mov	x3, x2
    d750:	lsr	x0, x0, #2
    d754:	add	x2, x2, #0x1
    d758:	lsl	x0, x9, x0
    d75c:	lsr	x5, x0, #2
    d760:	madd	x5, x5, x6, x0
    d764:	str	x5, [x4, #16]
    d768:	udiv	w0, w8, w5
    d76c:	cmp	x0, #0x0
    d770:	csel	x0, x0, x11, ne  // ne = any
    d774:	cmp	x0, #0x3e
    d778:	csel	x0, x0, x7, ls  // ls = plast
    d77c:	add	x6, x0, #0x2
    d780:	lsl	x0, x0, #1
    d784:	str	x0, [x4, #8]
    d788:	cmp	x5, x6, lsl #3
    d78c:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
    d790:	str	x0, [x4, #24]
    d794:	cmp	x2, #0x36
    d798:	b.ne	d730 <__sanitizer_get_allocated_size@@Base+0x1c00>  // b.any
    d79c:	ldr	x2, [x1, #8]
    d7a0:	b	d274 <__sanitizer_get_allocated_size@@Base+0x1744>
    d7a4:	add	x0, x24, #0x8, lsl #12
    d7a8:	mov	x2, #0x200                 	// #512
    d7ac:	mov	x3, #0x40                  	// #64
    d7b0:	str	x3, [x0, #21512]
    d7b4:	str	x2, [x0, #21520]
    d7b8:	str	xzr, [x0, #21528]
    d7bc:	ldr	x2, [x1, #8]
    d7c0:	b	d274 <__sanitizer_get_allocated_size@@Base+0x1744>
    d7c4:	mov	x2, x22
    d7c8:	mov	x0, x20
    d7cc:	mov	x1, #0x100000000           	// #4294967296
    d7d0:	stp	x25, x26, [sp, #48]
    d7d4:	bl	13410 <__sancov_default_options@@Base+0x2818>
    d7d8:	mov	x4, x0
    d7dc:	str	x30, [sp, #-32]!
    d7e0:	mov	x3, x1
    d7e4:	mov	x0, x2
    d7e8:	mov	x1, x4
    d7ec:	mov	x2, x3
    d7f0:	mov	x3, #0x1                   	// #1
    d7f4:	bl	cbe8 <__sanitizer_get_allocated_size@@Base+0x10b8>
    d7f8:	cbz	x0, d804 <__sanitizer_get_allocated_size@@Base+0x1cd4>
    d7fc:	ldr	x30, [sp], #32
    d800:	ret
    d804:	str	x0, [sp, #24]
    d808:	bl	13238 <__sancov_default_options@@Base+0x2640>
    d80c:	ldr	x0, [sp, #24]
    d810:	ldr	x30, [sp], #32
    d814:	ret
    d818:	stp	x19, x20, [sp, #-32]!
    d81c:	mov	x20, x0
    d820:	mov	w19, #0x0                   	// #0
    d824:	stp	x21, x30, [sp, #16]
    d828:	mov	w21, #0x1                   	// #1
    d82c:	nop
    d830:	cmp	w19, #0x9
    d834:	b.gt	d870 <__sancov_lowest_stack@@Base+0x40>
    d838:	ldrb	w0, [x20]
    d83c:	tst	w0, #0xff
    d840:	b.ne	d85c <__sancov_lowest_stack@@Base+0x2c>  // b.any
    d844:	ldxrb	w0, [x20]
    d848:	stxrb	w1, w21, [x20]
    d84c:	cbnz	w1, d844 <__sancov_lowest_stack@@Base+0x14>
    d850:	dmb	ish
    d854:	tst	w0, #0xff
    d858:	b.eq	d864 <__sancov_lowest_stack@@Base+0x34>  // b.none
    d85c:	add	w19, w19, #0x1
    d860:	b	d830 <__sancov_lowest_stack@@Base>
    d864:	ldp	x21, x30, [sp, #16]
    d868:	ldp	x19, x20, [sp], #32
    d86c:	ret
    d870:	bl	199e0 <__sanitizer_set_report_fd@@Base+0x2730>
    d874:	b	d838 <__sancov_lowest_stack@@Base+0x8>
    d878:	stp	x19, x20, [sp, #-48]!
    d87c:	stp	x21, x22, [sp, #16]
    d880:	mov	x21, x0
    d884:	ldr	x0, [x2, #8]
    d888:	stp	x23, x30, [sp, #32]
    d88c:	cbz	x0, d934 <__sancov_lowest_stack@@Base+0x104>
    d890:	mov	x0, #0x2001                	// #8193
    d894:	add	x22, x1, x0
    d898:	mov	x20, x2
    d89c:	mov	x19, x1
    d8a0:	add	x23, x21, x22, lsl #6
    d8a4:	mov	w1, #0x1                   	// #1
    d8a8:	ldxrb	w0, [x23]
    d8ac:	stxrb	w2, w1, [x23]
    d8b0:	cbnz	w2, d8a8 <__sancov_lowest_stack@@Base+0x78>
    d8b4:	dmb	ish
    d8b8:	tst	w0, #0xff
    d8bc:	b.eq	d8c8 <__sancov_lowest_stack@@Base+0x98>  // b.none
    d8c0:	mov	x0, x23
    d8c4:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
    d8c8:	ldr	x0, [x23, #8]
    d8cc:	add	x19, x21, x19, lsl #6
    d8d0:	cbz	x0, d904 <__sancov_lowest_stack@@Base+0xd4>
    d8d4:	add	x19, x19, #0x80, lsl #12
    d8d8:	add	x0, x0, #0x1
    d8dc:	ldr	x1, [x19, #80]
    d8e0:	str	x1, [x20]
    d8e4:	stp	x0, x20, [x19, #72]
    d8e8:	dmb	ish
    d8ec:	lsl	x22, x22, #6
    d8f0:	strb	wzr, [x21, x22]
    d8f4:	ldp	x21, x22, [sp, #16]
    d8f8:	ldp	x23, x30, [sp, #32]
    d8fc:	ldp	x19, x20, [sp], #48
    d900:	ret
    d904:	add	x19, x19, #0x80, lsl #12
    d908:	str	xzr, [x20]
    d90c:	mov	x0, #0x1                   	// #1
    d910:	stp	x0, x20, [x19, #72]
    d914:	str	x20, [x19, #88]
    d918:	dmb	ish
    d91c:	lsl	x22, x22, #6
    d920:	strb	wzr, [x21, x22]
    d924:	ldp	x21, x22, [sp, #16]
    d928:	ldp	x23, x30, [sp, #32]
    d92c:	ldp	x19, x20, [sp], #48
    d930:	ret
    d934:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d938:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    d93c:	add	x2, x2, #0x600
    d940:	add	x0, x0, #0x258
    d944:	mov	x4, #0x0                   	// #0
    d948:	mov	x3, #0x0                   	// #0
    d94c:	mov	w1, #0xad                  	// #173
    d950:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    d954:	nop
    d958:	cmp	x1, #0x1
    d95c:	mov	x3, #0x1                   	// #1
    d960:	b.ls	da54 <__sancov_lowest_stack@@Base+0x224>  // b.plast
    d964:	nop
    d968:	ldr	x5, [x0, x3, lsl #3]
    d96c:	mov	x2, x3
    d970:	sub	x4, x2, #0x1
    d974:	mov	x6, x2
    d978:	lsr	x2, x4, #1
    d97c:	ldr	x4, [x0, x2, lsl #3]
    d980:	cmp	x4, x5
    d984:	b.cs	d994 <__sancov_lowest_stack@@Base+0x164>  // b.hs, b.nlast
    d988:	str	x4, [x0, x6, lsl #3]
    d98c:	str	x5, [x0, x2, lsl #3]
    d990:	cbnz	x2, d970 <__sancov_lowest_stack@@Base+0x140>
    d994:	add	x2, x3, #0x1
    d998:	cmp	x1, x2
    d99c:	b.eq	d9ec <__sancov_lowest_stack@@Base+0x1bc>  // b.none
    d9a0:	mov	x3, x2
    d9a4:	b	d968 <__sancov_lowest_stack@@Base+0x138>
    d9a8:	cmp	x1, x3
    d9ac:	b.cs	d9e4 <__sancov_lowest_stack@@Base+0x1b4>  // b.hs, b.nlast
    d9b0:	lsl	x5, x5, #4
    d9b4:	ldr	x4, [x0, x2, lsl #3]
    d9b8:	ldr	x5, [x0, x5]
    d9bc:	cmp	x5, x4
    d9c0:	b.ls	d9e4 <__sancov_lowest_stack@@Base+0x1b4>  // b.plast
    d9c4:	cmp	x1, x2
    d9c8:	b.eq	d9e4 <__sancov_lowest_stack@@Base+0x1b4>  // b.none
    d9cc:	ldr	x5, [x0, x1, lsl #3]
    d9d0:	cmp	x1, x3
    d9d4:	ldr	x4, [x0, x2, lsl #3]
    d9d8:	str	x5, [x0, x2, lsl #3]
    d9dc:	str	x4, [x0, x1, lsl #3]
    d9e0:	b.cc	da4c <__sancov_lowest_stack@@Base+0x21c>  // b.lo, b.ul, b.last
    d9e4:	subs	x3, x3, #0x1
    d9e8:	b.eq	da54 <__sancov_lowest_stack@@Base+0x224>  // b.none
    d9ec:	ldr	x4, [x0, x3, lsl #3]
    d9f0:	mov	x2, #0x0                   	// #0
    d9f4:	ldr	x1, [x0]
    d9f8:	str	x4, [x0]
    d9fc:	str	x1, [x0, x3, lsl #3]
    da00:	lsl	x1, x2, #1
    da04:	add	x5, x2, #0x1
    da08:	add	x4, x1, #0x1
    da0c:	add	x1, x1, #0x2
    da10:	cmp	x4, x3
    da14:	b.cs	d9a8 <__sancov_lowest_stack@@Base+0x178>  // b.hs, b.nlast
    da18:	ldr	x7, [x0, x2, lsl #3]
    da1c:	ldr	x6, [x0, x4, lsl #3]
    da20:	cmp	x7, x6
    da24:	b.cs	d9a8 <__sancov_lowest_stack@@Base+0x178>  // b.hs, b.nlast
    da28:	cmp	x1, x3
    da2c:	b.cc	da58 <__sancov_lowest_stack@@Base+0x228>  // b.lo, b.ul, b.last
    da30:	cmp	x4, x2
    da34:	b.eq	d9e4 <__sancov_lowest_stack@@Base+0x1b4>  // b.none
    da38:	ldr	x6, [x0, x4, lsl #3]
    da3c:	mov	x1, x4
    da40:	ldr	x5, [x0, x2, lsl #3]
    da44:	str	x6, [x0, x2, lsl #3]
    da48:	str	x5, [x0, x4, lsl #3]
    da4c:	mov	x2, x1
    da50:	b	da00 <__sancov_lowest_stack@@Base+0x1d0>
    da54:	ret
    da58:	lsl	x5, x5, #4
    da5c:	ldr	x5, [x0, x5]
    da60:	cmp	x6, x5
    da64:	csel	x1, x1, x4, cc  // cc = lo, ul, last
    da68:	b	d9c4 <__sancov_lowest_stack@@Base+0x194>
    da6c:	nop
    da70:	adrp	x5, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    da74:	sub	sp, sp, #0x210
    da78:	ldr	x5, [x5, #3616]
    da7c:	stp	x25, x26, [sp, #48]
    da80:	mov	x26, x2
    da84:	mov	x25, x3
    da88:	stp	x19, x20, [sp]
    da8c:	mov	x19, x1
    da90:	ldr	x2, [x5]
    da94:	mov	x1, #0x100000              	// #1048576
    da98:	stp	x21, x22, [sp, #16]
    da9c:	mov	x21, x0
    daa0:	mov	x0, x1
    daa4:	str	x30, [sp, #80]
    daa8:	str	x4, [sp, #104]
    daac:	bl	1c008 <__sanitizer_set_report_fd@@Base+0x4d58>
    dab0:	ldr	x4, [sp, #104]
    dab4:	cbz	x0, dc98 <__sancov_lowest_stack@@Base+0x468>
    dab8:	mov	x22, x0
    dabc:	tst	x0, #0xfffff
    dac0:	ldr	x0, [x19, #24]
    dac4:	stp	x23, x24, [sp, #32]
    dac8:	stp	x27, x28, [sp, #64]
    dacc:	add	x0, x0, #0x100, lsl #12
    dad0:	str	x0, [x19, #24]
    dad4:	b.ne	de98 <__sancov_lowest_stack@@Base+0x668>  // b.any
    dad8:	mov	x0, #0xfffffff             	// #268435455
    dadc:	lsr	x19, x22, #20
    dae0:	cmp	x0, x22, lsr #20
    dae4:	b.cc	defc <__sancov_lowest_stack@@Base+0x6cc>  // b.lo, b.ul, b.last
    dae8:	and	w23, w4, #0xff
    daec:	lsr	x20, x22, #32
    daf0:	ldr	x0, [x21, x20, lsl #3]
    daf4:	dmb	ish
    daf8:	cbz	x0, de50 <__sancov_lowest_stack@@Base+0x620>
    dafc:	and	x3, x19, #0xfff
    db00:	ldrb	w1, [x0, x3]
    db04:	cbnz	x1, df54 <__sancov_lowest_stack@@Base+0x724>
    db08:	strb	w23, [x0, x3]
    db0c:	cmp	x4, #0x35
    db10:	b.eq	dd28 <__sancov_lowest_stack@@Base+0x4f8>  // b.none
    db14:	lsl	x28, x4, #4
    db18:	cmp	x4, #0x10
    db1c:	b.ls	db3c <__sancov_lowest_stack@@Base+0x30c>  // b.plast
    db20:	sub	x0, x4, #0x10
    db24:	mov	x28, #0x100                 	// #256
    db28:	and	x1, x0, #0x3
    db2c:	lsr	x0, x0, #2
    db30:	lsl	x0, x28, x0
    db34:	lsr	x28, x0, #2
    db38:	madd	x28, x28, x1, x0
    db3c:	add	x0, x28, #0x10
    db40:	mov	x27, #0x100000              	// #1048576
    db44:	udiv	x27, x27, x0
    db48:	cbz	x28, de40 <__sancov_lowest_stack@@Base+0x610>
    db4c:	mov	w23, #0x4000                	// #16384
    db50:	mov	x1, #0x40                  	// #64
    db54:	mov	x0, #0x3e                  	// #62
    db58:	mul	x27, x27, x28
    db5c:	udiv	w23, w23, w28
    db60:	cmp	x23, x1
    db64:	csel	x23, x23, x1, ls  // ls = plast
    db68:	cmp	x23, #0x0
    db6c:	csinc	x23, x23, xzr, ne  // ne = any
    db70:	cmp	x23, x0
    db74:	csel	x23, x23, x0, ls  // ls = plast
    db78:	add	x27, x22, x27
    db7c:	cmp	x22, x27
    db80:	b.cs	de40 <__sancov_lowest_stack@@Base+0x610>  // b.hs, b.nlast
    db84:	add	x24, sp, #0x90
    db88:	add	x7, x26, x4, lsl #10
    db8c:	mov	x1, #0x0                   	// #0
    db90:	mov	x19, #0x1                   	// #1
    db94:	str	x22, [sp, #144]
    db98:	add	x22, x22, x28
    db9c:	cmp	x22, x27
    dba0:	b.cs	dce8 <__sancov_lowest_stack@@Base+0x4b8>  // b.hs, b.nlast
    dba4:	str	x22, [x24, x19, lsl #3]
    dba8:	cmp	x19, #0x2f
    dbac:	add	x19, x19, #0x1
    dbb0:	b.ne	db98 <__sancov_lowest_stack@@Base+0x368>  // b.any
    dbb4:	mov	x2, #0xd800                	// #55296
    dbb8:	mov	x19, #0x0                   	// #0
    dbbc:	add	x9, x26, x2
    dbc0:	b	dbcc <__sancov_lowest_stack@@Base+0x39c>
    dbc4:	cmp	x19, #0x2f
    dbc8:	b.hi	dd20 <__sancov_lowest_stack@@Base+0x4f0>  // b.pmore
    dbcc:	ldr	x8, [x24, x19, lsl #3]
    dbd0:	cbz	x1, dc18 <__sancov_lowest_stack@@Base+0x3e8>
    dbd4:	ldr	x5, [x1, #8]
    dbd8:	add	x6, x5, #0x1
    dbdc:	add	x5, x5, #0x2
    dbe0:	str	x6, [x1, #8]
    dbe4:	add	x19, x19, #0x1
    dbe8:	cmp	x6, x23
    dbec:	str	x8, [x1, x5, lsl #3]
    dbf0:	b.ne	dbc4 <__sancov_lowest_stack@@Base+0x394>  // b.any
    dbf4:	ldr	x5, [x25, #8]
    dbf8:	str	xzr, [x1]
    dbfc:	cbnz	x5, dcb4 <__sancov_lowest_stack@@Base+0x484>
    dc00:	mov	x2, #0x1                   	// #1
    dc04:	stp	x2, x1, [x25, #8]
    dc08:	cmp	x19, #0x2f
    dc0c:	str	x1, [x25, #24]
    dc10:	b.hi	dcd0 <__sancov_lowest_stack@@Base+0x4a0>  // b.pmore
    dc14:	ldr	x8, [x24, x19, lsl #3]
    dc18:	mov	x1, x8
    dc1c:	ldr	x20, [x7, #24]
    dc20:	cbnz	x20, dc38 <__sancov_lowest_stack@@Base+0x408>
    dc24:	cbz	x1, dc90 <__sancov_lowest_stack@@Base+0x460>
    dc28:	mov	x5, #0x0                   	// #0
    dc2c:	mov	x6, #0x1                   	// #1
    dc30:	str	xzr, [x1, #8]
    dc34:	b	dbdc <__sancov_lowest_stack@@Base+0x3ac>
    dc38:	cmp	x20, #0x35
    dc3c:	b.hi	deb8 <__sancov_lowest_stack@@Base+0x688>  // b.pmore
    dc40:	lsl	x5, x20, #10
    dc44:	add	x1, x26, x5
    dc48:	ldr	x0, [x26, x5]
    dc4c:	cbz	x0, df1c <__sancov_lowest_stack@@Base+0x6ec>
    dc50:	lsl	x20, x20, #7
    dc54:	add	x3, x26, x5
    dc58:	add	x1, x20, x0
    dc5c:	sub	x0, x0, #0x1
    dc60:	add	x1, x1, #0x2
    dc64:	str	x0, [x26, x5]
    dc68:	add	x20, x20, x0
    dc6c:	add	x20, x20, #0x4
    dc70:	ldr	x2, [x26, x1, lsl #3]
    dc74:	ldr	x0, [x9, #16]
    dc78:	ldr	x1, [x3, #16]
    dc7c:	prfm	pldl1keep, [x2]
    dc80:	add	x0, x0, x1
    dc84:	ldr	x1, [x26, x20, lsl #3]
    dc88:	str	x0, [x9, #16]
    dc8c:	cbnz	x1, dc28 <__sancov_lowest_stack@@Base+0x3f8>
    dc90:	ldp	x23, x24, [sp, #32]
    dc94:	ldp	x27, x28, [sp, #64]
    dc98:	mov	w0, #0x0                   	// #0
    dc9c:	ldp	x19, x20, [sp]
    dca0:	ldp	x21, x22, [sp, #16]
    dca4:	ldp	x25, x26, [sp, #48]
    dca8:	ldr	x30, [sp, #80]
    dcac:	add	sp, sp, #0x210
    dcb0:	ret
    dcb4:	ldr	x2, [x25, #24]
    dcb8:	add	x5, x5, #0x1
    dcbc:	cmp	x19, #0x2f
    dcc0:	str	x1, [x2]
    dcc4:	str	x5, [x25, #8]
    dcc8:	str	x1, [x25, #24]
    dccc:	b.ls	dc14 <__sancov_lowest_stack@@Base+0x3e4>  // b.plast
    dcd0:	add	x22, x22, x28
    dcd4:	mov	x19, #0x0                   	// #0
    dcd8:	cmp	x22, x27
    dcdc:	mov	x1, #0x0                   	// #0
    dce0:	b.cc	dba4 <__sancov_lowest_stack@@Base+0x374>  // b.lo, b.ul, b.last
    dce4:	nop
    dce8:	cbnz	x19, dd3c <__sancov_lowest_stack@@Base+0x50c>
    dcec:	cbz	x1, de40 <__sancov_lowest_stack@@Base+0x610>
    dcf0:	ldr	x2, [x1, #8]
    dcf4:	cbz	x2, df74 <__sancov_lowest_stack@@Base+0x744>
    dcf8:	ldr	x0, [x25, #8]
    dcfc:	str	xzr, [x1]
    dd00:	cbnz	x0, ded8 <__sancov_lowest_stack@@Base+0x6a8>
    dd04:	mov	x2, #0x1                   	// #1
    dd08:	mov	w0, w2
    dd0c:	ldp	x23, x24, [sp, #32]
    dd10:	ldp	x27, x28, [sp, #64]
    dd14:	stp	x2, x1, [x25, #8]
    dd18:	str	x1, [x25, #24]
    dd1c:	b	dc9c <__sancov_lowest_stack@@Base+0x46c>
    dd20:	mov	x19, #0x0                   	// #0
    dd24:	b	db98 <__sancov_lowest_stack@@Base+0x368>
    dd28:	mov	x27, #0x8200                	// #33280
    dd2c:	mov	x23, #0x20                  	// #32
    dd30:	movk	x27, #0xf, lsl #16
    dd34:	mov	x28, #0x200                 	// #512
    dd38:	b	db78 <__sancov_lowest_stack@@Base+0x348>
    dd3c:	add	x28, x26, x4, lsl #10
    dd40:	mov	x0, #0xd800                	// #55296
    dd44:	add	x27, sp, #0x90
    dd48:	add	x4, x26, x0
    dd4c:	mov	x20, #0x0                   	// #0
    dd50:	b	dd5c <__sancov_lowest_stack@@Base+0x52c>
    dd54:	cmp	x19, x20
    dd58:	b.ls	dcf4 <__sancov_lowest_stack@@Base+0x4c4>  // b.plast
    dd5c:	ldr	x22, [x27, x20, lsl #3]
    dd60:	cbz	x1, dda8 <__sancov_lowest_stack@@Base+0x578>
    dd64:	ldr	x0, [x1, #8]
    dd68:	add	x2, x0, #0x1
    dd6c:	add	x0, x0, #0x2
    dd70:	str	x2, [x1, #8]
    dd74:	add	x20, x20, #0x1
    dd78:	cmp	x2, x23
    dd7c:	str	x22, [x1, x0, lsl #3]
    dd80:	b.ne	dd54 <__sancov_lowest_stack@@Base+0x524>  // b.any
    dd84:	ldr	x0, [x25, #8]
    dd88:	cbnz	x0, de20 <__sancov_lowest_stack@@Base+0x5f0>
    dd8c:	str	xzr, [x1]
    dd90:	mov	x2, #0x1                   	// #1
    dd94:	stp	x2, x1, [x25, #8]
    dd98:	cmp	x19, x20
    dd9c:	str	x1, [x25, #24]
    dda0:	b.ls	de40 <__sancov_lowest_stack@@Base+0x610>  // b.plast
    dda4:	ldr	x22, [x27, x20, lsl #3]
    dda8:	mov	x1, x22
    ddac:	ldr	x24, [x28, #24]
    ddb0:	cbnz	x24, ddc8 <__sancov_lowest_stack@@Base+0x598>
    ddb4:	cbz	x1, dc90 <__sancov_lowest_stack@@Base+0x460>
    ddb8:	mov	x0, #0x0                   	// #0
    ddbc:	mov	x2, #0x1                   	// #1
    ddc0:	str	xzr, [x1, #8]
    ddc4:	b	dd6c <__sancov_lowest_stack@@Base+0x53c>
    ddc8:	cmp	x24, #0x35
    ddcc:	b.hi	dfbc <__sancov_lowest_stack@@Base+0x78c>  // b.pmore
    ddd0:	lsl	x5, x24, #10
    ddd4:	add	x1, x26, x5
    ddd8:	ldr	x0, [x26, x5]
    dddc:	cbz	x0, dfc4 <__sancov_lowest_stack@@Base+0x794>
    dde0:	lsl	x24, x24, #7
    dde4:	add	x2, x26, x5
    dde8:	add	x1, x24, x0
    ddec:	sub	x0, x0, #0x1
    ddf0:	add	x1, x1, #0x2
    ddf4:	str	x0, [x26, x5]
    ddf8:	add	x24, x24, x0
    ddfc:	add	x0, x24, #0x4
    de00:	ldr	x3, [x26, x1, lsl #3]
    de04:	ldr	x1, [x2, #16]
    de08:	ldr	x2, [x4, #16]
    de0c:	prfm	pldl1keep, [x3]
    de10:	add	x2, x2, x1
    de14:	ldr	x1, [x26, x0, lsl #3]
    de18:	str	x2, [x4, #16]
    de1c:	b	ddb4 <__sancov_lowest_stack@@Base+0x584>
    de20:	ldr	x3, [x25, #24]
    de24:	str	xzr, [x1]
    de28:	add	x0, x0, #0x1
    de2c:	cmp	x19, x20
    de30:	str	x1, [x3]
    de34:	str	x0, [x25, #8]
    de38:	str	x1, [x25, #24]
    de3c:	b.hi	dda4 <__sancov_lowest_stack@@Base+0x574>  // b.pmore
    de40:	mov	w0, #0x1                   	// #1
    de44:	ldp	x23, x24, [sp, #32]
    de48:	ldp	x27, x28, [sp, #64]
    de4c:	b	dc9c <__sancov_lowest_stack@@Base+0x46c>
    de50:	add	x24, x21, #0x80, lsl #12
    de54:	mov	w1, #0x1                   	// #1
    de58:	ldxrb	w0, [x24]
    de5c:	stxrb	w2, w1, [x24]
    de60:	cbnz	w2, de58 <__sancov_lowest_stack@@Base+0x628>
    de64:	dmb	ish
    de68:	tst	w0, #0xff
    de6c:	b.eq	de80 <__sancov_lowest_stack@@Base+0x650>  // b.none
    de70:	mov	x0, x24
    de74:	str	x4, [sp, #104]
    de78:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
    de7c:	ldr	x4, [sp, #104]
    de80:	ldr	x0, [x21, x20, lsl #3]
    de84:	dmb	ish
    de88:	cbz	x0, df94 <__sancov_lowest_stack@@Base+0x764>
    de8c:	dmb	ish
    de90:	strb	wzr, [x24]
    de94:	b	dafc <__sancov_lowest_stack@@Base+0x2cc>
    de98:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    de9c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    dea0:	add	x2, x2, #0x618
    dea4:	add	x0, x0, #0x258
    dea8:	mov	x4, #0x0                   	// #0
    deac:	mov	x3, #0x0                   	// #0
    deb0:	mov	w1, #0x126                 	// #294
    deb4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    deb8:	mov	x3, x20
    debc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    dec0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    dec4:	add	x2, x2, #0x6e8
    dec8:	add	x0, x0, #0x708
    decc:	mov	x4, #0x36                  	// #54
    ded0:	mov	w1, #0xa0                  	// #160
    ded4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    ded8:	ldr	x4, [x25, #24]
    dedc:	add	x2, x0, #0x1
    dee0:	ldp	x23, x24, [sp, #32]
    dee4:	mov	w0, #0x1                   	// #1
    dee8:	ldp	x27, x28, [sp, #64]
    deec:	str	x1, [x4]
    def0:	str	x2, [x25, #8]
    def4:	str	x1, [x25, #24]
    def8:	b	dc9c <__sancov_lowest_stack@@Base+0x46c>
    defc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    df00:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    df04:	mov	x3, x19
    df08:	add	x2, x2, #0x640
    df0c:	add	x0, x0, #0x258
    df10:	mov	x4, #0x10000000            	// #268435456
    df14:	mov	w1, #0x116                 	// #278
    df18:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    df1c:	mov	x3, x20
    df20:	mov	x2, x21
    df24:	mov	x0, x26
    df28:	stp	x8, x4, [sp, #104]
    df2c:	stp	x5, x9, [sp, #120]
    df30:	str	x7, [sp, #136]
    df34:	bl	e0f8 <__sancov_lowest_stack@@Base+0x8c8>
    df38:	tst	w0, #0xff
    df3c:	b.eq	dc90 <__sancov_lowest_stack@@Base+0x460>  // b.none
    df40:	ldp	x5, x9, [sp, #120]
    df44:	ldp	x8, x4, [sp, #104]
    df48:	ldr	x7, [sp, #136]
    df4c:	ldr	x0, [x26, x5]
    df50:	b	dc50 <__sancov_lowest_stack@@Base+0x420>
    df54:	mov	x4, x1
    df58:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    df5c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    df60:	add	x2, x2, #0x678
    df64:	add	x0, x0, #0x6a0
    df68:	mov	x3, #0x0                   	// #0
    df6c:	mov	w1, #0x42                  	// #66
    df70:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    df74:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    df78:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    df7c:	add	x2, x2, #0x600
    df80:	add	x0, x0, #0x258
    df84:	mov	x4, #0x0                   	// #0
    df88:	mov	x3, #0x0                   	// #0
    df8c:	mov	w1, #0x169                 	// #361
    df90:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    df94:	mov	w2, #0x0                   	// #0
    df98:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    df9c:	mov	x0, #0x1000                	// #4096
    dfa0:	add	x1, x1, #0x668
    dfa4:	str	x4, [sp, #104]
    dfa8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
    dfac:	dmb	ish
    dfb0:	str	x0, [x21, x20, lsl #3]
    dfb4:	ldr	x4, [sp, #104]
    dfb8:	b	de8c <__sancov_lowest_stack@@Base+0x65c>
    dfbc:	mov	x3, x24
    dfc0:	b	debc <__sancov_lowest_stack@@Base+0x68c>
    dfc4:	mov	x3, x24
    dfc8:	mov	x2, x21
    dfcc:	mov	x0, x26
    dfd0:	stp	x5, x4, [sp, #104]
    dfd4:	bl	e0f8 <__sancov_lowest_stack@@Base+0x8c8>
    dfd8:	tst	w0, #0xff
    dfdc:	b.eq	dc90 <__sancov_lowest_stack@@Base+0x460>  // b.none
    dfe0:	ldp	x5, x4, [sp, #104]
    dfe4:	ldr	x0, [x26, x5]
    dfe8:	b	dde0 <__sancov_lowest_stack@@Base+0x5b0>
    dfec:	nop
    dff0:	stp	x19, x20, [sp, #-80]!
    dff4:	mov	x20, x0
    dff8:	mov	x0, #0x2001                	// #8193
    dffc:	stp	x21, x22, [sp, #16]
    e000:	add	x22, x3, x0
    e004:	mov	x19, x3
    e008:	lsl	x21, x22, #6
    e00c:	stp	x23, x24, [sp, #32]
    e010:	add	x23, x20, x21
    e014:	stp	x25, x26, [sp, #48]
    e018:	mov	x25, x2
    e01c:	mov	x24, x1
    e020:	mov	w1, #0x1                   	// #1
    e024:	str	x30, [sp, #64]
    e028:	ldxrb	w0, [x23]
    e02c:	stxrb	w2, w1, [x23]
    e030:	cbnz	w2, e028 <__sancov_lowest_stack@@Base+0x7f8>
    e034:	dmb	ish
    e038:	tst	w0, #0xff
    e03c:	b.eq	e048 <__sancov_lowest_stack@@Base+0x818>  // b.none
    e040:	mov	x0, x23
    e044:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
    e048:	add	x21, x21, #0x8
    e04c:	add	x26, x20, x21
    e050:	ldr	x5, [x20, x21]
    e054:	cbnz	x5, e080 <__sancov_lowest_stack@@Base+0x850>
    e058:	mov	x3, x23
    e05c:	mov	x2, x25
    e060:	mov	x1, x24
    e064:	mov	x4, x19
    e068:	mov	x0, x20
    e06c:	bl	da70 <__sancov_lowest_stack@@Base+0x240>
    e070:	tst	w0, #0xff
    e074:	b.eq	e0f0 <__sancov_lowest_stack@@Base+0x8c0>  // b.none
    e078:	ldr	x5, [x20, x21]
    e07c:	cbz	x5, e0d0 <__sancov_lowest_stack@@Base+0x8a0>
    e080:	add	x4, x20, x19, lsl #6
    e084:	add	x4, x4, #0x80, lsl #12
    e088:	ldr	x0, [x26, #8]
    e08c:	ldr	x1, [x4, #80]
    e090:	ldr	x1, [x1]
    e094:	str	x1, [x4, #80]
    e098:	cbz	x1, e0c8 <__sancov_lowest_stack@@Base+0x898>
    e09c:	sub	x5, x5, #0x1
    e0a0:	str	x5, [x4, #72]
    e0a4:	dmb	ish
    e0a8:	lsl	x22, x22, #6
    e0ac:	strb	wzr, [x20, x22]
    e0b0:	ldp	x21, x22, [sp, #16]
    e0b4:	ldp	x23, x24, [sp, #32]
    e0b8:	ldp	x25, x26, [sp, #48]
    e0bc:	ldr	x30, [sp, #64]
    e0c0:	ldp	x19, x20, [sp], #80
    e0c4:	ret
    e0c8:	str	xzr, [x4, #88]
    e0cc:	b	e09c <__sancov_lowest_stack@@Base+0x86c>
    e0d0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e0d4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e0d8:	add	x2, x2, #0x758
    e0dc:	add	x0, x0, #0x770
    e0e0:	mov	x4, #0x0                   	// #0
    e0e4:	mov	x3, #0x0                   	// #0
    e0e8:	mov	w1, #0x40                  	// #64
    e0ec:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e0f0:	mov	x0, #0x0                   	// #0
    e0f4:	b	e0a4 <__sancov_lowest_stack@@Base+0x874>
    e0f8:	stp	x19, x20, [sp, #-64]!
    e0fc:	mov	x19, x0
    e100:	mov	x20, x2
    e104:	ldr	x0, [x1, #8]
    e108:	stp	x21, x22, [sp, #16]
    e10c:	mov	x22, x1
    e110:	stp	x23, x24, [sp, #32]
    e114:	mov	x21, x3
    e118:	str	x30, [sp, #48]
    e11c:	cbz	x0, e1f8 <__sancov_lowest_stack@@Base+0x9c8>
    e120:	mov	x0, #0xd800                	// #55296
    e124:	add	x24, x19, x0
    e128:	mov	x3, x21
    e12c:	mov	x1, x24
    e130:	mov	x2, x19
    e134:	mov	x0, x20
    e138:	bl	dff0 <__sancov_lowest_stack@@Base+0x7c0>
    e13c:	mov	x23, x0
    e140:	cbz	x0, e2d0 <__sancov_lowest_stack@@Base+0xaa0>
    e144:	ldr	x6, [x0, #8]
    e148:	add	x8, x0, #0x10
    e14c:	add	x7, x22, #0x20
    e150:	mov	x4, #0x0                   	// #0
    e154:	cbz	x6, e2e8 <__sancov_lowest_stack@@Base+0xab8>
    e158:	ldr	x5, [x8, x4, lsl #3]
    e15c:	str	x5, [x7, x4, lsl #3]
    e160:	add	x4, x4, #0x1
    e164:	cmp	x6, x4
    e168:	b.ne	e158 <__sancov_lowest_stack@@Base+0x928>  // b.any
    e16c:	add	x21, x19, x21, lsl #10
    e170:	mov	w0, #0x1                   	// #1
    e174:	ldr	x21, [x21, #24]
    e178:	str	x6, [x22]
    e17c:	cbnz	x21, e194 <__sancov_lowest_stack@@Base+0x964>
    e180:	ldp	x21, x22, [sp, #16]
    e184:	ldp	x23, x24, [sp, #32]
    e188:	ldr	x30, [sp, #48]
    e18c:	ldp	x19, x20, [sp], #64
    e190:	ret
    e194:	cmp	x21, #0x35
    e198:	b.hi	e400 <__sancov_lowest_stack@@Base+0xbd0>  // b.pmore
    e19c:	lsl	x22, x21, #10
    e1a0:	add	x1, x19, x22
    e1a4:	ldr	x2, [x1, #8]
    e1a8:	cbz	x2, e31c <__sancov_lowest_stack@@Base+0xaec>
    e1ac:	ldr	x0, [x19, x22]
    e1b0:	cmp	x0, x2
    e1b4:	b.eq	e304 <__sancov_lowest_stack@@Base+0xad4>  // b.none
    e1b8:	add	x2, x0, x21, lsl #7
    e1bc:	add	x3, x19, x22
    e1c0:	add	x2, x2, #0x4
    e1c4:	add	x0, x0, #0x1
    e1c8:	str	x0, [x19, x22]
    e1cc:	mov	w0, #0x1                   	// #1
    e1d0:	ldr	x1, [x24, #16]
    e1d4:	str	x23, [x19, x2, lsl #3]
    e1d8:	ldp	x21, x22, [sp, #16]
    e1dc:	ldr	x2, [x3, #16]
    e1e0:	ldr	x30, [sp, #48]
    e1e4:	sub	x1, x1, x2
    e1e8:	str	x1, [x24, #16]
    e1ec:	ldp	x23, x24, [sp, #32]
    e1f0:	ldp	x19, x20, [sp], #64
    e1f4:	ret
    e1f8:	mov	x5, #0x1                   	// #1
    e1fc:	mov	x11, x5
    e200:	mov	x12, #0x7c                  	// #124
    e204:	mov	x10, #0x14                  	// #20
    e208:	mov	x9, #0x100                 	// #256
    e20c:	mov	w8, #0x4000                	// #16384
    e210:	mov	x3, #0x3e                  	// #62
    e214:	nop
    e218:	add	x1, x19, x5, lsl #10
    e21c:	lsl	x4, x5, #4
    e220:	mov	x6, x1
    e224:	mov	x0, #0x14                  	// #20
    e228:	mov	x2, x5
    e22c:	add	x5, x5, #0x1
    e230:	stp	x12, x4, [x1, #8]
    e234:	cmp	x5, #0x36
    e238:	str	x0, [x6, #24]
    e23c:	b.eq	e120 <__sancov_lowest_stack@@Base+0x8f0>  // b.none
    e240:	cmp	x5, #0x35
    e244:	b.eq	e2b4 <__sancov_lowest_stack@@Base+0xa84>  // b.none
    e248:	cmp	x5, #0x10
    e24c:	b.ls	e218 <__sancov_lowest_stack@@Base+0x9e8>  // b.plast
    e250:	sub	x4, x2, #0xf
    e254:	add	x6, x6, #0x400
    e258:	and	x0, x4, #0x3
    e25c:	mov	x2, x5
    e260:	lsr	x4, x4, #2
    e264:	add	x5, x5, #0x1
    e268:	lsl	x4, x9, x4
    e26c:	lsr	x7, x4, #2
    e270:	madd	x7, x7, x0, x4
    e274:	str	x7, [x6, #16]
    e278:	udiv	w4, w8, w7
    e27c:	cmp	x4, #0x0
    e280:	csel	x4, x4, x11, ne  // ne = any
    e284:	cmp	x4, #0x3e
    e288:	csel	x4, x4, x3, ls  // ls = plast
    e28c:	add	x0, x4, #0x2
    e290:	lsl	x4, x4, #1
    e294:	str	x4, [x6, #8]
    e298:	cmp	x7, x0, lsl #3
    e29c:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
    e2a0:	str	x0, [x6, #24]
    e2a4:	cmp	x5, #0x36
    e2a8:	b.eq	e120 <__sancov_lowest_stack@@Base+0x8f0>  // b.none
    e2ac:	cmp	x5, #0x35
    e2b0:	b.ne	e248 <__sancov_lowest_stack@@Base+0xa18>  // b.any
    e2b4:	add	x0, x19, #0x8, lsl #12
    e2b8:	mov	x2, #0x40                  	// #64
    e2bc:	mov	x1, #0x200                 	// #512
    e2c0:	str	x2, [x0, #21512]
    e2c4:	str	x1, [x0, #21520]
    e2c8:	str	xzr, [x0, #21528]
    e2cc:	b	e120 <__sancov_lowest_stack@@Base+0x8f0>
    e2d0:	mov	w0, #0x0                   	// #0
    e2d4:	ldp	x21, x22, [sp, #16]
    e2d8:	ldp	x23, x24, [sp, #32]
    e2dc:	ldr	x30, [sp, #48]
    e2e0:	ldp	x19, x20, [sp], #64
    e2e4:	ret
    e2e8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e2ec:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e2f0:	add	x2, x2, #0x600
    e2f4:	add	x0, x0, #0x708
    e2f8:	mov	x3, #0x0                   	// #0
    e2fc:	mov	w1, #0xf6                  	// #246
    e300:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e304:	mov	x0, x19
    e308:	mov	x2, x20
    e30c:	mov	x3, x21
    e310:	bl	e910 <__sancov_lowest_stack@@Base+0x10e0>
    e314:	ldr	x0, [x19, x22]
    e318:	b	e1b8 <__sancov_lowest_stack@@Base+0x988>
    e31c:	mov	x5, #0x1                   	// #1
    e320:	mov	x11, x5
    e324:	mov	x12, #0x7c                  	// #124
    e328:	mov	x10, #0x14                  	// #20
    e32c:	mov	x9, #0x100                 	// #256
    e330:	mov	w8, #0x4000                	// #16384
    e334:	mov	x7, #0x3e                  	// #62
    e338:	add	x4, x19, x5, lsl #10
    e33c:	lsl	x6, x5, #4
    e340:	mov	x2, x4
    e344:	mov	x0, #0x14                  	// #20
    e348:	mov	x3, x5
    e34c:	add	x5, x5, #0x1
    e350:	stp	x12, x6, [x4, #8]
    e354:	cmp	x5, #0x36
    e358:	str	x0, [x2, #24]
    e35c:	b.eq	e3cc <__sancov_lowest_stack@@Base+0xb9c>  // b.none
    e360:	cmp	x5, #0x35
    e364:	b.eq	e3d4 <__sancov_lowest_stack@@Base+0xba4>  // b.none
    e368:	cmp	x5, #0x10
    e36c:	b.ls	e338 <__sancov_lowest_stack@@Base+0xb08>  // b.plast
    e370:	sub	x0, x3, #0xf
    e374:	add	x2, x2, #0x400
    e378:	and	x6, x0, #0x3
    e37c:	mov	x3, x5
    e380:	lsr	x0, x0, #2
    e384:	add	x5, x5, #0x1
    e388:	lsl	x0, x9, x0
    e38c:	lsr	x4, x0, #2
    e390:	madd	x0, x4, x6, x0
    e394:	str	x0, [x2, #16]
    e398:	udiv	w4, w8, w0
    e39c:	cmp	x4, #0x0
    e3a0:	csel	x4, x4, x11, ne  // ne = any
    e3a4:	cmp	x4, #0x3e
    e3a8:	csel	x4, x4, x7, ls  // ls = plast
    e3ac:	add	x6, x4, #0x2
    e3b0:	lsl	x4, x4, #1
    e3b4:	str	x4, [x2, #8]
    e3b8:	cmp	x0, x6, lsl #3
    e3bc:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
    e3c0:	str	x0, [x2, #24]
    e3c4:	cmp	x5, #0x36
    e3c8:	b.ne	e360 <__sancov_lowest_stack@@Base+0xb30>  // b.any
    e3cc:	ldr	x2, [x1, #8]
    e3d0:	b	e1ac <__sancov_lowest_stack@@Base+0x97c>
    e3d4:	add	x0, x19, #0x8, lsl #12
    e3d8:	mov	x2, #0x200                 	// #512
    e3dc:	mov	x3, #0x40                  	// #64
    e3e0:	str	x3, [x0, #21512]
    e3e4:	str	x2, [x0, #21520]
    e3e8:	str	xzr, [x0, #21528]
    e3ec:	ldr	x0, [x19, x22]
    e3f0:	ldr	x2, [x1, #8]
    e3f4:	cmp	x0, x2
    e3f8:	b.ne	e1b8 <__sancov_lowest_stack@@Base+0x988>  // b.any
    e3fc:	b	e304 <__sancov_lowest_stack@@Base+0xad4>
    e400:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e404:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e408:	mov	x3, x21
    e40c:	add	x2, x2, #0x6e8
    e410:	add	x0, x0, #0x708
    e414:	mov	x4, #0x36                  	// #54
    e418:	mov	w1, #0xaf                  	// #175
    e41c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e420:	stp	x19, x20, [sp, #-80]!
    e424:	cmp	x2, #0x0
    e428:	stp	x21, x22, [sp, #16]
    e42c:	csinc	x22, x2, xzr, ne  // ne = any
    e430:	stp	x23, x24, [sp, #32]
    e434:	mov	x23, x0
    e438:	adds	x0, x3, x22
    e43c:	str	x30, [sp, #72]
    e440:	b.cs	e8ec <__sancov_lowest_stack@@Base+0x10bc>  // b.hs, b.nlast
    e444:	mov	x19, x3
    e448:	mov	x21, x1
    e44c:	cmp	x3, #0x8
    e450:	b.hi	e6c0 <__sancov_lowest_stack@@Base+0xe90>  // b.pmore
    e454:	cmp	x2, #0x20, lsl #12
    e458:	b.hi	e51c <__sancov_lowest_stack@@Base+0xcec>  // b.pmore
    e45c:	cmp	x22, #0x100
    e460:	b.ls	e6fc <__sancov_lowest_stack@@Base+0xecc>  // b.plast
    e464:	clz	x3, x22
    e468:	mov	w20, #0x3f                  	// #63
    e46c:	sub	w20, w20, w3
    e470:	mov	w0, #0x1                   	// #1
    e474:	sub	w2, w20, #0x2
    e478:	lsl	w0, w0, w2
    e47c:	sub	w0, w0, #0x1
    e480:	tst	x0, x22
    e484:	lsr	x3, x22, x2
    e488:	and	x3, x3, #0x3
    e48c:	cinc	x3, x3, ne  // ne = any
    e490:	add	x20, x3, w20, sxtw #2
    e494:	sub	x20, x20, #0x10
    e498:	cmp	x20, #0x35
    e49c:	b.hi	e748 <__sancov_lowest_stack@@Base+0xf18>  // b.pmore
    e4a0:	lsl	x22, x20, #10
    e4a4:	add	x1, x21, x22
    e4a8:	ldr	x0, [x21, x22]
    e4ac:	cbz	x0, e7c0 <__sancov_lowest_stack@@Base+0xf90>
    e4b0:	lsl	x20, x20, #7
    e4b4:	add	x4, x21, x22
    e4b8:	add	x1, x20, x0
    e4bc:	mov	x2, #0xd800                	// #55296
    e4c0:	add	x1, x1, #0x2
    e4c4:	sub	x0, x0, #0x1
    e4c8:	add	x2, x21, x2
    e4cc:	str	x0, [x21, x22]
    e4d0:	add	x20, x20, x0
    e4d4:	ldr	x3, [x21, x1, lsl #3]
    e4d8:	add	x20, x20, #0x4
    e4dc:	ldr	x0, [x4, #16]
    e4e0:	ldr	x1, [x2, #16]
    e4e4:	prfm	pldl1keep, [x3]
    e4e8:	add	x1, x1, x0
    e4ec:	ldr	x0, [x21, x20, lsl #3]
    e4f0:	str	x1, [x2, #16]
    e4f4:	cmp	x19, #0x8
    e4f8:	b.ls	e508 <__sancov_lowest_stack@@Base+0xcd8>  // b.plast
    e4fc:	sub	x19, x19, #0x1
    e500:	ands	x3, x0, x19
    e504:	b.ne	e7e0 <__sancov_lowest_stack@@Base+0xfb0>  // b.any
    e508:	ldp	x21, x22, [sp, #16]
    e50c:	ldp	x23, x24, [sp, #32]
    e510:	ldr	x30, [sp, #72]
    e514:	ldp	x19, x20, [sp], #80
    e518:	ret
    e51c:	stp	x25, x26, [sp, #48]
    e520:	sub	x25, x3, #0x1
    e524:	tst	x3, x25
    e528:	b.ne	e79c <__sancov_lowest_stack@@Base+0xf6c>  // b.any
    e52c:	add	x24, x23, #0x80, lsl #12
    e530:	add	x24, x24, #0xc00
    e534:	ldr	x1, [x24, #448]
    e538:	sub	x0, x1, #0x1
    e53c:	tst	x1, x0
    e540:	b.ne	e734 <__sancov_lowest_stack@@Base+0xf04>  // b.any
    e544:	add	x20, x22, x0
    e548:	neg	x0, x1
    e54c:	and	x20, x20, x0
    e550:	cmp	x19, x1
    e554:	add	x20, x20, x1
    e558:	add	x0, x20, x19
    e55c:	csel	x20, x0, x20, hi  // hi = pmore
    e560:	cmp	x22, x20
    e564:	b.hi	e770 <__sancov_lowest_stack@@Base+0xf40>  // b.pmore
    e568:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e56c:	mov	x0, x20
    e570:	ldr	x1, [x1, #3840]
    e574:	ldr	x1, [x1]
    e578:	bl	1bf38 <__sanitizer_set_report_fd@@Base+0x4c88>
    e57c:	mov	x4, x0
    e580:	cbz	x0, e804 <__sancov_lowest_stack@@Base+0xfd4>
    e584:	ldr	x1, [x24, #448]
    e588:	str	x27, [sp, #64]
    e58c:	sub	x2, x1, #0x1
    e590:	tst	x0, x2
    e594:	b.ne	e810 <__sancov_lowest_stack@@Base+0xfe0>  // b.any
    e598:	add	x21, x0, x1
    e59c:	ands	x3, x25, x21
    e5a0:	b.eq	e5b4 <__sancov_lowest_stack@@Base+0xd84>  // b.none
    e5a4:	add	x0, x19, x21
    e5a8:	sub	x21, x0, x3
    e5ac:	tst	x25, x21
    e5b0:	b.ne	e830 <__sancov_lowest_stack@@Base+0x1000>  // b.any
    e5b4:	tst	x21, x2
    e5b8:	b.ne	e850 <__sancov_lowest_stack@@Base+0x1020>  // b.any
    e5bc:	add	x3, x21, x22
    e5c0:	cmp	x4, x3
    e5c4:	b.hi	e870 <__sancov_lowest_stack@@Base+0x1040>  // b.pmore
    e5c8:	add	x0, x4, x20
    e5cc:	cmp	x0, x3
    e5d0:	b.cc	e888 <__sancov_lowest_stack@@Base+0x1058>  // b.lo, b.ul, b.last
    e5d4:	sub	x25, x21, x1
    e5d8:	add	x26, x23, #0x80, lsl #12
    e5dc:	add	x26, x26, #0xdc0
    e5e0:	mov	w2, #0x1                   	// #1
    e5e4:	add	x0, x26, #0x268
    e5e8:	stp	x4, x20, [x25]
    e5ec:	str	x22, [x25, #16]
    e5f0:	ldxrb	w1, [x0]
    e5f4:	stxrb	w3, w2, [x0]
    e5f8:	cbnz	w3, e5f0 <__sancov_lowest_stack@@Base+0xdc0>
    e5fc:	dmb	ish
    e600:	tst	w1, #0xff
    e604:	b.eq	e60c <__sancov_lowest_stack@@Base+0xddc>  // b.none
    e608:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
    e60c:	ldr	x3, [x24, #504]
    e610:	add	x22, x24, #0x1c0
    e614:	mov	x0, #0xfffff               	// #1048575
    e618:	cmp	x3, x0
    e61c:	b.hi	e8a4 <__sancov_lowest_stack@@Base+0x1074>  // b.pmore
    e620:	ldr	x0, [x24, #496]
    e624:	cmp	x3, x0
    e628:	b.eq	e8c0 <__sancov_lowest_stack@@Base+0x1090>  // b.none
    e62c:	clz	x1, x20
    e630:	mov	w0, #0x3f                  	// #63
    e634:	sub	w0, w0, w1
    e638:	add	x1, x3, #0x1
    e63c:	str	x1, [x24, #504]
    e640:	add	x24, x24, #0x1c0
    e644:	ldr	x1, [x24, #88]
    e648:	add	x4, x23, #0x81, lsl #12
    e64c:	ldr	x5, [x24, #8]
    e650:	add	x23, x23, w0, sxtw #3
    e654:	ldr	x2, [x24, #96]
    e658:	add	x0, x20, x1
    e65c:	ldr	x1, [x24, #72]
    e660:	str	x3, [x25, #24]
    e664:	add	x23, x23, #0x80, lsl #12
    e668:	cmp	x2, x0
    e66c:	str	x25, [x5, x3, lsl #3]
    e670:	csel	x2, x2, x0, cs  // cs = hs, nlast
    e674:	add	x3, x1, #0x1
    e678:	strb	wzr, [x24, #64]
    e67c:	str	x3, [x24, #72]
    e680:	stp	x0, x2, [x24, #88]
    e684:	ldr	x2, [x23, #3624]
    e688:	ldr	x0, [x4, #64]
    e68c:	add	x2, x2, #0x1
    e690:	str	x2, [x23, #3624]
    e694:	add	x0, x20, x0
    e698:	str	x0, [x4, #64]
    e69c:	ldr	x0, [x4, #72]
    e6a0:	add	x20, x20, x0
    e6a4:	str	x20, [x4, #72]
    e6a8:	dmb	ish
    e6ac:	strb	wzr, [x4, #40]
    e6b0:	mov	x0, x21
    e6b4:	ldp	x25, x26, [sp, #48]
    e6b8:	ldr	x27, [sp, #64]
    e6bc:	b	e4f4 <__sancov_lowest_stack@@Base+0xcc4>
    e6c0:	stp	x25, x26, [sp, #48]
    e6c4:	sub	x25, x3, #0x1
    e6c8:	tst	x3, x25
    e6cc:	b.ne	e734 <__sancov_lowest_stack@@Base+0xf04>  // b.any
    e6d0:	sub	x1, x0, #0x1
    e6d4:	neg	x0, x3
    e6d8:	and	x0, x1, x0
    e6dc:	cmp	x3, #0x20, lsl #12
    e6e0:	mov	x1, #0x20000               	// #131072
    e6e4:	ccmp	x0, x1, #0x2, ls  // ls = plast
    e6e8:	b.hi	e52c <__sancov_lowest_stack@@Base+0xcfc>  // b.pmore
    e6ec:	mov	x22, x0
    e6f0:	cmp	x22, #0x100
    e6f4:	ldp	x25, x26, [sp, #48]
    e6f8:	b.hi	e464 <__sancov_lowest_stack@@Base+0xc34>  // b.pmore
    e6fc:	add	x20, x22, #0xf
    e700:	cmp	xzr, x20, lsr #4
    e704:	lsr	x20, x20, #4
    e708:	b.ne	e4a0 <__sancov_lowest_stack@@Base+0xc70>  // b.any
    e70c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e710:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e714:	add	x2, x2, #0x810
    e718:	add	x0, x0, #0x708
    e71c:	mov	x4, #0x0                   	// #0
    e720:	mov	x3, #0x0                   	// #0
    e724:	mov	w1, #0x9f                  	// #159
    e728:	stp	x25, x26, [sp, #48]
    e72c:	str	x27, [sp, #64]
    e730:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e734:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
    e738:	add	x0, x0, #0x240
    e73c:	str	x27, [sp, #64]
    e740:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
    e744:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    e748:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e74c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e750:	mov	x3, x20
    e754:	add	x2, x2, #0x6e8
    e758:	add	x0, x0, #0x708
    e75c:	mov	x4, #0x36                  	// #54
    e760:	mov	w1, #0xa0                  	// #160
    e764:	stp	x25, x26, [sp, #48]
    e768:	str	x27, [sp, #64]
    e76c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e770:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e774:	mov	x3, x19
    e778:	mov	x2, x20
    e77c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e780:	ldr	x1, [x1, #4008]
    e784:	add	x0, x0, #0x850
    e788:	ldr	x1, [x1]
    e78c:	bl	1e648 <OnPrint@@Base+0x398>
    e790:	mov	x0, #0x0                   	// #0
    e794:	ldp	x25, x26, [sp, #48]
    e798:	b	e508 <__sancov_lowest_stack@@Base+0xcd8>
    e79c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e7a0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e7a4:	add	x2, x2, #0x828
    e7a8:	add	x0, x0, #0x300
    e7ac:	mov	x4, #0x0                   	// #0
    e7b0:	mov	x3, #0x0                   	// #0
    e7b4:	mov	w1, #0x53                  	// #83
    e7b8:	str	x27, [sp, #64]
    e7bc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e7c0:	mov	x2, x23
    e7c4:	mov	x3, x20
    e7c8:	mov	x0, x21
    e7cc:	bl	e0f8 <__sancov_lowest_stack@@Base+0x8c8>
    e7d0:	tst	w0, #0xff
    e7d4:	b.eq	e808 <__sancov_lowest_stack@@Base+0xfd8>  // b.none
    e7d8:	ldr	x0, [x21, x22]
    e7dc:	b	e4b0 <__sancov_lowest_stack@@Base+0xc80>
    e7e0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e7e4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e7e8:	add	x2, x2, #0x998
    e7ec:	add	x0, x0, #0x9d8
    e7f0:	mov	x4, #0x0                   	// #0
    e7f4:	mov	w1, #0x42                  	// #66
    e7f8:	stp	x25, x26, [sp, #48]
    e7fc:	str	x27, [sp, #64]
    e800:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e804:	ldp	x25, x26, [sp, #48]
    e808:	mov	x0, #0x0                   	// #0
    e80c:	b	e508 <__sancov_lowest_stack@@Base+0xcd8>
    e810:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e814:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e818:	add	x2, x2, #0x8b8
    e81c:	add	x0, x0, #0x300
    e820:	mov	x4, #0x0                   	// #0
    e824:	mov	x3, #0x0                   	// #0
    e828:	mov	w1, #0x62                  	// #98
    e82c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e830:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e834:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e838:	add	x2, x2, #0x8e8
    e83c:	add	x0, x0, #0x300
    e840:	mov	x4, #0x0                   	// #0
    e844:	mov	x3, #0x0                   	// #0
    e848:	mov	w1, #0x68                  	// #104
    e84c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e850:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e854:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e858:	add	x2, x2, #0x910
    e85c:	add	x0, x0, #0x300
    e860:	mov	x4, #0x0                   	// #0
    e864:	mov	x3, #0x0                   	// #0
    e868:	mov	w1, #0x69                  	// #105
    e86c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e870:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e874:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e878:	add	x2, x2, #0x938
    e87c:	add	x0, x0, #0x300
    e880:	mov	w1, #0x6a                  	// #106
    e884:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e888:	mov	x4, x0
    e88c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e890:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e894:	add	x2, x2, #0x958
    e898:	add	x0, x0, #0x300
    e89c:	mov	w1, #0x6b                  	// #107
    e8a0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e8a4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e8a8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e8ac:	add	x2, x2, #0x978
    e8b0:	add	x0, x0, #0x300
    e8b4:	mov	x4, #0x100000              	// #1048576
    e8b8:	mov	w1, #0x29                  	// #41
    e8bc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    e8c0:	add	x1, x23, #0x80, lsl #12
    e8c4:	add	x0, x26, #0x10
    e8c8:	mov	x2, #0x20000               	// #131072
    e8cc:	ldr	x1, [x1, #3536]
    e8d0:	add	x1, x1, x3, lsl #3
    e8d4:	bl	1d488 <__sanitizer_set_report_fd@@Base+0x61d8>
    e8d8:	ldr	x0, [x24, #496]
    e8dc:	ldr	x3, [x22, #56]
    e8e0:	add	x0, x0, #0x4, lsl #12
    e8e4:	str	x0, [x24, #496]
    e8e8:	b	e62c <__sancov_lowest_stack@@Base+0xdfc>
    e8ec:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e8f0:	mov	x2, x22
    e8f4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    e8f8:	add	x0, x0, #0x7b0
    e8fc:	ldr	x1, [x1, #4008]
    e900:	ldr	x1, [x1]
    e904:	bl	1e648 <OnPrint@@Base+0x398>
    e908:	mov	x0, #0x0                   	// #0
    e90c:	b	e508 <__sancov_lowest_stack@@Base+0xcd8>
    e910:	stp	x19, x20, [sp, #-80]!
    e914:	stp	x21, x22, [sp, #16]
    e918:	mov	x21, x1
    e91c:	add	x1, x0, x3, lsl #10
    e920:	stp	x23, x24, [sp, #32]
    e924:	mov	x23, x3
    e928:	mov	x24, x2
    e92c:	ldp	x5, x19, [x21]
    e930:	ldr	x20, [x1, #24]
    e934:	str	x30, [sp, #56]
    e938:	lsr	x19, x19, #1
    e93c:	cmp	x19, x5
    e940:	csel	x19, x19, x5, ls  // ls = plast
    e944:	sub	x5, x5, x19
    e948:	cbnz	x20, e9ac <__sancov_lowest_stack@@Base+0x117c>
    e94c:	add	x0, x5, #0x4
    e950:	ldr	x2, [x21, x0, lsl #3]
    e954:	cbz	x2, ea18 <__sancov_lowest_stack@@Base+0x11e8>
    e958:	add	x5, x5, #0x4
    e95c:	str	x19, [x2, #8]
    e960:	add	x6, x2, #0x10
    e964:	mov	x0, #0x0                   	// #0
    e968:	add	x5, x21, x5, lsl #3
    e96c:	cbz	x19, e984 <__sancov_lowest_stack@@Base+0x1154>
    e970:	ldr	x4, [x5, x0, lsl #3]
    e974:	str	x4, [x6, x0, lsl #3]
    e978:	add	x0, x0, #0x1
    e97c:	cmp	x19, x0
    e980:	b.ne	e970 <__sancov_lowest_stack@@Base+0x1140>  // b.any
    e984:	ldr	x4, [x21]
    e988:	mov	x1, x23
    e98c:	mov	x0, x24
    e990:	sub	x19, x4, x19
    e994:	ldp	x23, x24, [sp, #32]
    e998:	ldr	x30, [sp, #56]
    e99c:	str	x19, [x21]
    e9a0:	ldp	x21, x22, [sp, #16]
    e9a4:	ldp	x19, x20, [sp], #80
    e9a8:	b	d878 <__sancov_lowest_stack@@Base+0x48>
    e9ac:	str	x25, [sp, #48]
    e9b0:	cmp	x20, #0x35
    e9b4:	b.hi	ea38 <__sancov_lowest_stack@@Base+0x1208>  // b.pmore
    e9b8:	lsl	x25, x20, #10
    e9bc:	mov	x22, x0
    e9c0:	add	x1, x0, x25
    e9c4:	ldr	x3, [x0, x25]
    e9c8:	cbz	x3, ea58 <__sancov_lowest_stack@@Base+0x1228>
    e9cc:	lsl	x20, x20, #7
    e9d0:	add	x2, x22, x25
    e9d4:	add	x0, x20, x3
    e9d8:	mov	x1, #0xd800                	// #55296
    e9dc:	add	x0, x0, #0x2
    e9e0:	sub	x3, x3, #0x1
    e9e4:	add	x1, x22, x1
    e9e8:	str	x3, [x22, x25]
    e9ec:	add	x20, x20, x3
    e9f0:	ldr	x3, [x22, x0, lsl #3]
    e9f4:	add	x20, x20, #0x4
    e9f8:	ldr	x2, [x2, #16]
    e9fc:	ldr	x0, [x1, #16]
    ea00:	prfm	pldl1keep, [x3]
    ea04:	add	x0, x0, x2
    ea08:	ldr	x2, [x22, x20, lsl #3]
    ea0c:	ldr	x25, [sp, #48]
    ea10:	str	x0, [x1, #16]
    ea14:	b	e954 <__sancov_lowest_stack@@Base+0x1124>
    ea18:	str	x25, [sp, #48]
    ea1c:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ea20:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ea24:	add	x0, x0, #0xa28
    ea28:	ldr	x1, [x1, #4008]
    ea2c:	ldr	x1, [x1]
    ea30:	bl	1e648 <OnPrint@@Base+0x398>
    ea34:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    ea38:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ea3c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ea40:	mov	x3, x20
    ea44:	add	x2, x2, #0x6e8
    ea48:	add	x0, x0, #0x708
    ea4c:	mov	x4, #0x36                  	// #54
    ea50:	mov	w1, #0xa0                  	// #160
    ea54:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    ea58:	mov	x3, x20
    ea5c:	str	x5, [sp, #72]
    ea60:	bl	e0f8 <__sancov_lowest_stack@@Base+0x8c8>
    ea64:	tst	w0, #0xff
    ea68:	ldr	x5, [sp, #72]
    ea6c:	b.eq	ea1c <__sancov_lowest_stack@@Base+0x11ec>  // b.none
    ea70:	ldr	x3, [x22, x25]
    ea74:	b	e9cc <__sancov_lowest_stack@@Base+0x119c>

000000000000ea78 <__interceptor_mallopt@@Base>:
    ea78:	mov	w0, #0xffffffff            	// #-1
    ea7c:	ret

000000000000ea80 <__interceptor_malloc@@Base>:
    ea80:	sub	sp, sp, #0x860
    ea84:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ea88:	stp	x29, x30, [sp]
    ea8c:	mov	x29, sp
    ea90:	ldr	x1, [x1, #4048]
    ea94:	stp	x19, x20, [sp, #16]
    ea98:	mov	x20, x0
    ea9c:	stp	x21, x22, [sp, #32]
    eaa0:	ldrb	w0, [x1]
    eaa4:	stp	x23, x24, [sp, #48]
    eaa8:	cbnz	w0, eb4c <__interceptor_malloc@@Base+0xcc>
    eaac:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    eab0:	ldr	x0, [x0, #3592]
    eab4:	ldrb	w0, [x0]
    eab8:	cbz	w0, eb34 <__interceptor_malloc@@Base+0xb4>
    eabc:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    eac0:	add	x21, x29, #0x48
    eac4:	add	x0, x21, #0x10
    eac8:	stp	x0, xzr, [x29, #72]
    eacc:	mov	x24, x29
    ead0:	ldr	x19, [x19, #4040]
    ead4:	str	xzr, [x29, #2136]
    ead8:	ldrsw	x23, [x19, #36]
    eadc:	bl	20018 <OnPrint@@Base+0x1d68>
    eae0:	ldrb	w22, [x19, #34]
    eae4:	mov	x19, x0
    eae8:	cbnz	w22, eb3c <__interceptor_malloc@@Base+0xbc>
    eaec:	mov	x6, #0x0                   	// #0
    eaf0:	mov	x5, #0x0                   	// #0
    eaf4:	mov	w7, w22
    eaf8:	mov	x3, x24
    eafc:	mov	x2, x19
    eb00:	mov	x4, #0x0                   	// #0
    eb04:	mov	w1, w23
    eb08:	mov	x0, x21
    eb0c:	bl	206c8 <OnPrint@@Base+0x2418>
    eb10:	mov	x1, x21
    eb14:	mov	x0, x20
    eb18:	bl	c638 <__sanitizer_get_allocated_size@@Base+0xb08>
    eb1c:	ldp	x29, x30, [sp]
    eb20:	ldp	x19, x20, [sp, #16]
    eb24:	ldp	x21, x22, [sp, #32]
    eb28:	ldp	x23, x24, [sp, #48]
    eb2c:	add	sp, sp, #0x860
    eb30:	ret
    eb34:	bl	6b40 <__lsan_init@plt>
    eb38:	b	eabc <__interceptor_malloc@@Base+0x3c>
    eb3c:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    eb40:	cbz	x0, eaec <__interceptor_malloc@@Base+0x6c>
    eb44:	ldp	x6, x5, [x0, #144]
    eb48:	b	eaf4 <__interceptor_malloc@@Base+0x74>
    eb4c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    eb50:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    eb54:	add	x2, x2, #0x1c0
    eb58:	add	x0, x0, #0xa78
    eb5c:	mov	x4, #0x0                   	// #0
    eb60:	mov	x3, #0x0                   	// #0
    eb64:	mov	w1, #0x34                  	// #52
    eb68:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    eb6c:	nop

000000000000eb70 <__interceptor_cfree@@Base>:
    eb70:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    eb74:	str	x30, [sp, #-32]!
    eb78:	ldr	x1, [x1, #4048]
    eb7c:	ldrb	w1, [x1]
    eb80:	cbnz	w1, ebb0 <__interceptor_cfree@@Base+0x40>
    eb84:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    eb88:	ldr	x1, [x1, #3592]
    eb8c:	ldrb	w1, [x1]
    eb90:	cbz	w1, eb9c <__interceptor_cfree@@Base+0x2c>
    eb94:	ldr	x30, [sp], #32
    eb98:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
    eb9c:	str	x0, [sp, #24]
    eba0:	bl	6b40 <__lsan_init@plt>
    eba4:	ldr	x0, [sp, #24]
    eba8:	ldr	x30, [sp], #32
    ebac:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
    ebb0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ebb4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ebb8:	add	x2, x2, #0x1c0
    ebbc:	add	x0, x0, #0xa78
    ebc0:	mov	x4, #0x0                   	// #0
    ebc4:	mov	x3, #0x0                   	// #0
    ebc8:	mov	w1, #0x3a                  	// #58
    ebcc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

000000000000ebd0 <__interceptor_realloc@@Base>:
    ebd0:	sub	sp, sp, #0x870
    ebd4:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ebd8:	stp	x29, x30, [sp]
    ebdc:	mov	x29, sp
    ebe0:	ldr	x2, [x2, #4048]
    ebe4:	stp	x19, x20, [sp, #16]
    ebe8:	mov	x20, x0
    ebec:	stp	x21, x22, [sp, #32]
    ebf0:	ldrb	w0, [x2]
    ebf4:	stp	x23, x24, [sp, #48]
    ebf8:	str	x25, [sp, #64]
    ebfc:	cbnz	w0, ecac <__interceptor_realloc@@Base+0xdc>
    ec00:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ec04:	mov	x21, x1
    ec08:	ldr	x0, [x0, #3592]
    ec0c:	ldrb	w0, [x0]
    ec10:	cbz	w0, ec94 <__interceptor_realloc@@Base+0xc4>
    ec14:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ec18:	add	x22, x29, #0x58
    ec1c:	add	x0, x22, #0x10
    ec20:	stp	x0, xzr, [x29, #88]
    ec24:	mov	x25, x29
    ec28:	ldr	x19, [x19, #4040]
    ec2c:	str	xzr, [x29, #2152]
    ec30:	ldrsw	x24, [x19, #36]
    ec34:	bl	20018 <OnPrint@@Base+0x1d68>
    ec38:	ldrb	w23, [x19, #34]
    ec3c:	mov	x19, x0
    ec40:	cbnz	w23, ec9c <__interceptor_realloc@@Base+0xcc>
    ec44:	mov	x6, #0x0                   	// #0
    ec48:	mov	x5, #0x0                   	// #0
    ec4c:	mov	w7, w23
    ec50:	mov	x3, x25
    ec54:	mov	x4, #0x0                   	// #0
    ec58:	mov	x2, x19
    ec5c:	mov	w1, w24
    ec60:	mov	x0, x22
    ec64:	bl	206c8 <OnPrint@@Base+0x2418>
    ec68:	mov	x2, x22
    ec6c:	mov	x1, x21
    ec70:	mov	x0, x20
    ec74:	bl	d7d8 <__sanitizer_get_allocated_size@@Base+0x1ca8>
    ec78:	ldp	x29, x30, [sp]
    ec7c:	ldp	x19, x20, [sp, #16]
    ec80:	ldp	x21, x22, [sp, #32]
    ec84:	ldp	x23, x24, [sp, #48]
    ec88:	ldr	x25, [sp, #64]
    ec8c:	add	sp, sp, #0x870
    ec90:	ret
    ec94:	bl	6b40 <__lsan_init@plt>
    ec98:	b	ec14 <__interceptor_realloc@@Base+0x44>
    ec9c:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    eca0:	cbz	x0, ec44 <__interceptor_realloc@@Base+0x74>
    eca4:	ldp	x6, x5, [x0, #144]
    eca8:	b	ec4c <__interceptor_realloc@@Base+0x7c>
    ecac:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ecb0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ecb4:	add	x2, x2, #0x1c0
    ecb8:	add	x0, x0, #0xa78
    ecbc:	mov	x4, #0x0                   	// #0
    ecc0:	mov	x3, #0x0                   	// #0
    ecc4:	mov	w1, #0x50                  	// #80
    ecc8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    eccc:	nop

000000000000ecd0 <__interceptor_posix_memalign@@Base>:
    ecd0:	sub	sp, sp, #0x870
    ecd4:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ecd8:	stp	x29, x30, [sp]
    ecdc:	mov	x29, sp
    ece0:	ldr	x3, [x3, #4048]
    ece4:	stp	x19, x20, [sp, #16]
    ece8:	mov	x20, x0
    ecec:	stp	x21, x22, [sp, #32]
    ecf0:	ldrb	w0, [x3]
    ecf4:	stp	x23, x24, [sp, #48]
    ecf8:	stp	x25, x26, [sp, #64]
    ecfc:	cbnz	w0, edb4 <__interceptor_posix_memalign@@Base+0xe4>
    ed00:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ed04:	mov	x21, x1
    ed08:	mov	x22, x2
    ed0c:	ldr	x0, [x0, #3592]
    ed10:	ldrb	w0, [x0]
    ed14:	cbz	w0, ed9c <__interceptor_posix_memalign@@Base+0xcc>
    ed18:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ed1c:	add	x23, x29, #0x58
    ed20:	add	x0, x23, #0x10
    ed24:	stp	x0, xzr, [x29, #88]
    ed28:	mov	x26, x29
    ed2c:	ldr	x19, [x19, #4040]
    ed30:	str	xzr, [x29, #2152]
    ed34:	ldrsw	x25, [x19, #36]
    ed38:	bl	20018 <OnPrint@@Base+0x1d68>
    ed3c:	ldrb	w24, [x19, #34]
    ed40:	mov	x19, x0
    ed44:	cbnz	w24, eda4 <__interceptor_posix_memalign@@Base+0xd4>
    ed48:	mov	x6, #0x0                   	// #0
    ed4c:	mov	x5, #0x0                   	// #0
    ed50:	mov	w7, w24
    ed54:	mov	x4, #0x0                   	// #0
    ed58:	mov	x3, x26
    ed5c:	mov	x2, x19
    ed60:	mov	w1, w25
    ed64:	mov	x0, x23
    ed68:	bl	206c8 <OnPrint@@Base+0x2418>
    ed6c:	mov	x3, x23
    ed70:	mov	x2, x22
    ed74:	mov	x1, x21
    ed78:	mov	x0, x20
    ed7c:	bl	c460 <__sanitizer_get_allocated_size@@Base+0x930>
    ed80:	ldp	x29, x30, [sp]
    ed84:	ldp	x19, x20, [sp, #16]
    ed88:	ldp	x21, x22, [sp, #32]
    ed8c:	ldp	x23, x24, [sp, #48]
    ed90:	ldp	x25, x26, [sp, #64]
    ed94:	add	sp, sp, #0x870
    ed98:	ret
    ed9c:	bl	6b40 <__lsan_init@plt>
    eda0:	b	ed18 <__interceptor_posix_memalign@@Base+0x48>
    eda4:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    eda8:	cbz	x0, ed48 <__interceptor_posix_memalign@@Base+0x78>
    edac:	ldp	x6, x5, [x0, #144]
    edb0:	b	ed50 <__interceptor_posix_memalign@@Base+0x80>
    edb4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    edb8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    edbc:	add	x2, x2, #0x1c0
    edc0:	add	x0, x0, #0xa78
    edc4:	mov	x4, #0x0                   	// #0
    edc8:	mov	x3, #0x0                   	// #0
    edcc:	mov	w1, #0x56                  	// #86
    edd0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    edd4:	nop

000000000000edd8 <__interceptor_valloc@@Base>:
    edd8:	sub	sp, sp, #0x860
    eddc:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ede0:	stp	x29, x30, [sp]
    ede4:	mov	x29, sp
    ede8:	ldr	x1, [x1, #4048]
    edec:	stp	x19, x20, [sp, #16]
    edf0:	mov	x20, x0
    edf4:	stp	x21, x22, [sp, #32]
    edf8:	ldrb	w0, [x1]
    edfc:	stp	x23, x24, [sp, #48]
    ee00:	cbnz	w0, eea4 <__interceptor_valloc@@Base+0xcc>
    ee04:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ee08:	ldr	x0, [x0, #3592]
    ee0c:	ldrb	w0, [x0]
    ee10:	cbz	w0, ee8c <__interceptor_valloc@@Base+0xb4>
    ee14:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ee18:	add	x21, x29, #0x48
    ee1c:	add	x0, x21, #0x10
    ee20:	stp	x0, xzr, [x29, #72]
    ee24:	mov	x24, x29
    ee28:	ldr	x19, [x19, #4040]
    ee2c:	str	xzr, [x29, #2136]
    ee30:	ldrsw	x23, [x19, #36]
    ee34:	bl	20018 <OnPrint@@Base+0x1d68>
    ee38:	ldrb	w22, [x19, #34]
    ee3c:	mov	x19, x0
    ee40:	cbnz	w22, ee94 <__interceptor_valloc@@Base+0xbc>
    ee44:	mov	x6, #0x0                   	// #0
    ee48:	mov	x5, #0x0                   	// #0
    ee4c:	mov	w7, w22
    ee50:	mov	x3, x24
    ee54:	mov	x2, x19
    ee58:	mov	x4, #0x0                   	// #0
    ee5c:	mov	w1, w23
    ee60:	mov	x0, x21
    ee64:	bl	206c8 <OnPrint@@Base+0x2418>
    ee68:	mov	x1, x21
    ee6c:	mov	x0, x20
    ee70:	bl	c6d8 <__sanitizer_get_allocated_size@@Base+0xba8>
    ee74:	ldp	x29, x30, [sp]
    ee78:	ldp	x19, x20, [sp, #16]
    ee7c:	ldp	x21, x22, [sp, #32]
    ee80:	ldp	x23, x24, [sp, #48]
    ee84:	add	sp, sp, #0x860
    ee88:	ret
    ee8c:	bl	6b40 <__lsan_init@plt>
    ee90:	b	ee14 <__interceptor_valloc@@Base+0x3c>
    ee94:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    ee98:	cbz	x0, ee44 <__interceptor_valloc@@Base+0x6c>
    ee9c:	ldp	x6, x5, [x0, #144]
    eea0:	b	ee4c <__interceptor_valloc@@Base+0x74>
    eea4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    eea8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    eeac:	add	x2, x2, #0x1c0
    eeb0:	add	x0, x0, #0xa78
    eeb4:	mov	x4, #0x0                   	// #0
    eeb8:	mov	x3, #0x0                   	// #0
    eebc:	mov	w1, #0x5c                  	// #92
    eec0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    eec4:	nop

000000000000eec8 <__interceptor_memalign@@Base>:
    eec8:	sub	sp, sp, #0x870
    eecc:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    eed0:	stp	x29, x30, [sp]
    eed4:	mov	x29, sp
    eed8:	ldr	x2, [x2, #4048]
    eedc:	stp	x19, x20, [sp, #16]
    eee0:	mov	x20, x0
    eee4:	stp	x21, x22, [sp, #32]
    eee8:	ldrb	w0, [x2]
    eeec:	stp	x23, x24, [sp, #48]
    eef0:	str	x25, [sp, #64]
    eef4:	cbnz	w0, efa4 <__interceptor_memalign@@Base+0xdc>
    eef8:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    eefc:	mov	x21, x1
    ef00:	ldr	x0, [x0, #3592]
    ef04:	ldrb	w0, [x0]
    ef08:	cbz	w0, ef8c <__interceptor_memalign@@Base+0xc4>
    ef0c:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ef10:	add	x22, x29, #0x58
    ef14:	add	x0, x22, #0x10
    ef18:	stp	x0, xzr, [x29, #88]
    ef1c:	mov	x25, x29
    ef20:	ldr	x19, [x19, #4040]
    ef24:	str	xzr, [x29, #2152]
    ef28:	ldrsw	x24, [x19, #36]
    ef2c:	bl	20018 <OnPrint@@Base+0x1d68>
    ef30:	ldrb	w23, [x19, #34]
    ef34:	mov	x19, x0
    ef38:	cbnz	w23, ef94 <__interceptor_memalign@@Base+0xcc>
    ef3c:	mov	x6, #0x0                   	// #0
    ef40:	mov	x5, #0x0                   	// #0
    ef44:	mov	w7, w23
    ef48:	mov	x3, x25
    ef4c:	mov	x4, #0x0                   	// #0
    ef50:	mov	x2, x19
    ef54:	mov	w1, w24
    ef58:	mov	x0, x22
    ef5c:	bl	206c8 <OnPrint@@Base+0x2418>
    ef60:	mov	x2, x22
    ef64:	mov	x1, x21
    ef68:	mov	x0, x20
    ef6c:	bl	c5c0 <__sanitizer_get_allocated_size@@Base+0xa90>
    ef70:	ldp	x29, x30, [sp]
    ef74:	ldp	x19, x20, [sp, #16]
    ef78:	ldp	x21, x22, [sp, #32]
    ef7c:	ldp	x23, x24, [sp, #48]
    ef80:	ldr	x25, [sp, #64]
    ef84:	add	sp, sp, #0x870
    ef88:	ret
    ef8c:	bl	6b40 <__lsan_init@plt>
    ef90:	b	ef0c <__interceptor_memalign@@Base+0x44>
    ef94:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    ef98:	cbz	x0, ef3c <__interceptor_memalign@@Base+0x74>
    ef9c:	ldp	x6, x5, [x0, #144]
    efa0:	b	ef44 <__interceptor_memalign@@Base+0x7c>
    efa4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    efa8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    efac:	add	x2, x2, #0x1c0
    efb0:	add	x0, x0, #0xa78
    efb4:	mov	x4, #0x0                   	// #0
    efb8:	mov	x3, #0x0                   	// #0
    efbc:	mov	w1, #0x64                  	// #100
    efc0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    efc4:	nop

000000000000efc8 <__interceptor___libc_memalign@@Base>:
    efc8:	sub	sp, sp, #0x870
    efcc:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    efd0:	stp	x29, x30, [sp]
    efd4:	mov	x29, sp
    efd8:	ldr	x2, [x2, #4048]
    efdc:	stp	x21, x22, [sp, #32]
    efe0:	mov	x21, x0
    efe4:	stp	x19, x20, [sp, #16]
    efe8:	ldrb	w0, [x2]
    efec:	stp	x23, x24, [sp, #48]
    eff0:	str	x25, [sp, #64]
    eff4:	cbnz	w0, f0b4 <__interceptor___libc_memalign@@Base+0xec>
    eff8:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    effc:	mov	x19, x1
    f000:	ldr	x0, [x0, #3592]
    f004:	ldrb	w0, [x0]
    f008:	cbz	w0, f09c <__interceptor___libc_memalign@@Base+0xd4>
    f00c:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f010:	add	x22, x29, #0x58
    f014:	add	x0, x22, #0x10
    f018:	stp	x0, xzr, [x29, #88]
    f01c:	mov	x25, x29
    f020:	ldr	x20, [x20, #4040]
    f024:	str	xzr, [x29, #2152]
    f028:	ldrsw	x24, [x20, #36]
    f02c:	bl	20018 <OnPrint@@Base+0x1d68>
    f030:	ldrb	w23, [x20, #34]
    f034:	mov	x20, x0
    f038:	cbnz	w23, f0a4 <__interceptor___libc_memalign@@Base+0xdc>
    f03c:	mov	x6, #0x0                   	// #0
    f040:	mov	x5, #0x0                   	// #0
    f044:	mov	w7, w23
    f048:	mov	x3, x25
    f04c:	mov	x4, #0x0                   	// #0
    f050:	mov	x2, x20
    f054:	mov	w1, w24
    f058:	mov	x0, x22
    f05c:	bl	206c8 <OnPrint@@Base+0x2418>
    f060:	mov	x2, x22
    f064:	mov	x1, x19
    f068:	mov	x0, x21
    f06c:	bl	c5c0 <__sanitizer_get_allocated_size@@Base+0xa90>
    f070:	mov	x1, x19
    f074:	mov	x19, x0
    f078:	bl	28248 <__sanitizer_set_death_callback@@Base+0x1440>
    f07c:	mov	x0, x19
    f080:	ldp	x29, x30, [sp]
    f084:	ldp	x19, x20, [sp, #16]
    f088:	ldp	x21, x22, [sp, #32]
    f08c:	ldp	x23, x24, [sp, #48]
    f090:	ldr	x25, [sp, #64]
    f094:	add	sp, sp, #0x870
    f098:	ret
    f09c:	bl	6b40 <__lsan_init@plt>
    f0a0:	b	f00c <__interceptor___libc_memalign@@Base+0x44>
    f0a4:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    f0a8:	cbz	x0, f03c <__interceptor___libc_memalign@@Base+0x74>
    f0ac:	ldp	x6, x5, [x0, #144]
    f0b0:	b	f044 <__interceptor___libc_memalign@@Base+0x7c>
    f0b4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f0b8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f0bc:	add	x2, x2, #0x1c0
    f0c0:	add	x0, x0, #0xa78
    f0c4:	mov	x4, #0x0                   	// #0
    f0c8:	mov	x3, #0x0                   	// #0
    f0cc:	mov	w1, #0x6b                  	// #107
    f0d0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    f0d4:	nop

000000000000f0d8 <__interceptor_aligned_alloc@@Base>:
    f0d8:	sub	sp, sp, #0x870
    f0dc:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f0e0:	stp	x29, x30, [sp]
    f0e4:	mov	x29, sp
    f0e8:	ldr	x2, [x2, #4048]
    f0ec:	stp	x19, x20, [sp, #16]
    f0f0:	mov	x20, x0
    f0f4:	stp	x21, x22, [sp, #32]
    f0f8:	ldrb	w0, [x2]
    f0fc:	stp	x23, x24, [sp, #48]
    f100:	str	x25, [sp, #64]
    f104:	cbnz	w0, f1b4 <__interceptor_aligned_alloc@@Base+0xdc>
    f108:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f10c:	mov	x21, x1
    f110:	ldr	x0, [x0, #3592]
    f114:	ldrb	w0, [x0]
    f118:	cbz	w0, f19c <__interceptor_aligned_alloc@@Base+0xc4>
    f11c:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f120:	add	x22, x29, #0x58
    f124:	add	x0, x22, #0x10
    f128:	stp	x0, xzr, [x29, #88]
    f12c:	mov	x25, x29
    f130:	ldr	x19, [x19, #4040]
    f134:	str	xzr, [x29, #2152]
    f138:	ldrsw	x24, [x19, #36]
    f13c:	bl	20018 <OnPrint@@Base+0x1d68>
    f140:	ldrb	w23, [x19, #34]
    f144:	mov	x19, x0
    f148:	cbnz	w23, f1a4 <__interceptor_aligned_alloc@@Base+0xcc>
    f14c:	mov	x6, #0x0                   	// #0
    f150:	mov	x5, #0x0                   	// #0
    f154:	mov	w7, w23
    f158:	mov	x3, x25
    f15c:	mov	x4, #0x0                   	// #0
    f160:	mov	x2, x19
    f164:	mov	w1, w24
    f168:	mov	x0, x22
    f16c:	bl	206c8 <OnPrint@@Base+0x2418>
    f170:	mov	x2, x22
    f174:	mov	x1, x21
    f178:	mov	x0, x20
    f17c:	bl	c530 <__sanitizer_get_allocated_size@@Base+0xa00>
    f180:	ldp	x29, x30, [sp]
    f184:	ldp	x19, x20, [sp, #16]
    f188:	ldp	x21, x22, [sp, #32]
    f18c:	ldp	x23, x24, [sp, #48]
    f190:	ldr	x25, [sp, #64]
    f194:	add	sp, sp, #0x870
    f198:	ret
    f19c:	bl	6b40 <__lsan_init@plt>
    f1a0:	b	f11c <__interceptor_aligned_alloc@@Base+0x44>
    f1a4:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    f1a8:	cbz	x0, f14c <__interceptor_aligned_alloc@@Base+0x74>
    f1ac:	ldp	x6, x5, [x0, #144]
    f1b0:	b	f154 <__interceptor_aligned_alloc@@Base+0x7c>
    f1b4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f1b8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f1bc:	add	x2, x2, #0x1c0
    f1c0:	add	x0, x0, #0xa78
    f1c4:	mov	x4, #0x0                   	// #0
    f1c8:	mov	x3, #0x0                   	// #0
    f1cc:	mov	w1, #0x79                  	// #121
    f1d0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    f1d4:	nop

000000000000f1d8 <__interceptor_malloc_usable_size@@Base>:
    f1d8:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f1dc:	str	x30, [sp, #-32]!
    f1e0:	ldr	x1, [x1, #4048]
    f1e4:	ldrb	w1, [x1]
    f1e8:	cbnz	w1, f218 <__interceptor_malloc_usable_size@@Base+0x40>
    f1ec:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f1f0:	ldr	x1, [x1, #3592]
    f1f4:	ldrb	w1, [x1]
    f1f8:	cbz	w1, f204 <__interceptor_malloc_usable_size@@Base+0x2c>
    f1fc:	ldr	x30, [sp], #32
    f200:	b	b008 <__sanitizer_print_stack_trace@@Base+0x570>
    f204:	str	x0, [sp, #24]
    f208:	bl	6b40 <__lsan_init@plt>
    f20c:	ldr	x0, [sp, #24]
    f210:	ldr	x30, [sp], #32
    f214:	b	b008 <__sanitizer_print_stack_trace@@Base+0x570>
    f218:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f21c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f220:	add	x2, x2, #0x1c0
    f224:	add	x0, x0, #0xa78
    f228:	mov	x4, #0x0                   	// #0
    f22c:	mov	x3, #0x0                   	// #0
    f230:	mov	w1, #0x84                  	// #132
    f234:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

000000000000f238 <__interceptor_mallinfo@@Base>:
    f238:	str	x30, [sp, #-16]!
    f23c:	mov	x0, x8
    f240:	mov	x2, #0x28                  	// #40
    f244:	mov	w1, #0x0                   	// #0
    f248:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
    f24c:	ldr	x30, [sp], #16
    f250:	ret
    f254:	nop

000000000000f258 <__interceptor_pvalloc@@Base>:
    f258:	sub	sp, sp, #0x860
    f25c:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f260:	stp	x29, x30, [sp]
    f264:	mov	x29, sp
    f268:	ldr	x1, [x1, #4048]
    f26c:	stp	x19, x20, [sp, #16]
    f270:	mov	x20, x0
    f274:	stp	x21, x22, [sp, #32]
    f278:	ldrb	w0, [x1]
    f27c:	stp	x23, x24, [sp, #48]
    f280:	cbnz	w0, f324 <__interceptor_pvalloc@@Base+0xcc>
    f284:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f288:	ldr	x0, [x0, #3592]
    f28c:	ldrb	w0, [x0]
    f290:	cbz	w0, f30c <__interceptor_pvalloc@@Base+0xb4>
    f294:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f298:	add	x21, x29, #0x48
    f29c:	add	x0, x21, #0x10
    f2a0:	stp	x0, xzr, [x29, #72]
    f2a4:	mov	x24, x29
    f2a8:	ldr	x19, [x19, #4040]
    f2ac:	str	xzr, [x29, #2136]
    f2b0:	ldrsw	x23, [x19, #36]
    f2b4:	bl	20018 <OnPrint@@Base+0x1d68>
    f2b8:	ldrb	w22, [x19, #34]
    f2bc:	mov	x19, x0
    f2c0:	cbnz	w22, f314 <__interceptor_pvalloc@@Base+0xbc>
    f2c4:	mov	x6, #0x0                   	// #0
    f2c8:	mov	x5, #0x0                   	// #0
    f2cc:	mov	w7, w22
    f2d0:	mov	x3, x24
    f2d4:	mov	x2, x19
    f2d8:	mov	x4, #0x0                   	// #0
    f2dc:	mov	w1, w23
    f2e0:	mov	x0, x21
    f2e4:	bl	206c8 <OnPrint@@Base+0x2418>
    f2e8:	mov	x1, x21
    f2ec:	mov	x0, x20
    f2f0:	bl	c750 <__sanitizer_get_allocated_size@@Base+0xc20>
    f2f4:	ldp	x29, x30, [sp]
    f2f8:	ldp	x19, x20, [sp, #16]
    f2fc:	ldp	x21, x22, [sp, #32]
    f300:	ldp	x23, x24, [sp, #48]
    f304:	add	sp, sp, #0x860
    f308:	ret
    f30c:	bl	6b40 <__lsan_init@plt>
    f310:	b	f294 <__interceptor_pvalloc@@Base+0x3c>
    f314:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    f318:	cbz	x0, f2c4 <__interceptor_pvalloc@@Base+0x6c>
    f31c:	ldp	x6, x5, [x0, #144]
    f320:	b	f2cc <__interceptor_pvalloc@@Base+0x74>
    f324:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f328:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f32c:	add	x2, x2, #0x1c0
    f330:	add	x0, x0, #0xa78
    f334:	mov	x4, #0x0                   	// #0
    f338:	mov	x3, #0x0                   	// #0
    f33c:	mov	w1, #0xa4                  	// #164
    f340:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    f344:	nop

000000000000f348 <__interceptor_pthread_join@@Base>:
    f348:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f34c:	stp	x19, x20, [sp, #-32]!
    f350:	mov	x19, x0
    f354:	ldr	x2, [x2, #4048]
    f358:	stp	x21, x30, [sp, #16]
    f35c:	ldrb	w0, [x2]
    f360:	cbnz	w0, f3d0 <__interceptor_pthread_join@@Base+0x88>
    f364:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f368:	mov	x20, x1
    f36c:	ldr	x0, [x0, #3592]
    f370:	ldrb	w0, [x0]
    f374:	cbz	w0, f3b0 <__interceptor_pthread_join@@Base+0x68>
    f378:	mov	x0, x19
    f37c:	bl	10a48 <_ZdaPvmSt11align_val_t@@Base+0x598>
    f380:	adrp	x2, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    f384:	mov	w21, w0
    f388:	mov	x1, x20
    f38c:	mov	x0, x19
    f390:	ldr	x2, [x2, #3904]
    f394:	blr	x2
    f398:	mov	w19, w0
    f39c:	cbz	w0, f3b8 <__interceptor_pthread_join@@Base+0x70>
    f3a0:	mov	w0, w19
    f3a4:	ldp	x21, x30, [sp, #16]
    f3a8:	ldp	x19, x20, [sp], #32
    f3ac:	ret
    f3b0:	bl	6b40 <__lsan_init@plt>
    f3b4:	b	f378 <__interceptor_pthread_join@@Base+0x30>
    f3b8:	mov	w0, w21
    f3bc:	bl	10a60 <_ZdaPvmSt11align_val_t@@Base+0x5b0>
    f3c0:	mov	w0, w19
    f3c4:	ldp	x21, x30, [sp, #16]
    f3c8:	ldp	x19, x20, [sp], #32
    f3cc:	ret
    f3d0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f3d4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f3d8:	add	x2, x2, #0x1c0
    f3dc:	add	x0, x0, #0xa78
    f3e0:	mov	x4, #0x0                   	// #0
    f3e4:	mov	x3, #0x0                   	// #0
    f3e8:	mov	w1, #0x198                 	// #408
    f3ec:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

000000000000f3f0 <__interceptor__exit@@Base>:
    f3f0:	stp	x19, x30, [sp, #-16]!
    f3f4:	mov	w19, w0
    f3f8:	cbz	w0, f414 <__interceptor__exit@@Base+0x24>
    f3fc:	mov	w0, w19
    f400:	adrp	x1, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    f404:	ldp	x19, x30, [sp], #16
    f408:	ldr	x1, [x1, #3912]
    f40c:	mov	x16, x1
    f410:	br	x16
    f414:	bl	7f78 <*ABS*+0x10@plt+0x1218>
    f418:	tst	w0, #0xff
    f41c:	b.eq	f3fc <__interceptor__exit@@Base+0xc>  // b.none
    f420:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f424:	adrp	x1, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    f428:	ldr	x0, [x0, #4040]
    f42c:	ldr	x1, [x1, #3912]
    f430:	ldr	w19, [x0, #216]
    f434:	mov	x16, x1
    f438:	mov	w0, w19
    f43c:	ldp	x19, x30, [sp], #16
    f440:	br	x16
    f444:	nop

000000000000f448 <__interceptor_signal@@Base>:
    f448:	stp	x19, x20, [sp, #-32]!
    f44c:	mov	x20, x1
    f450:	mov	w19, w0
    f454:	str	x30, [sp, #16]
    f458:	bl	1ad60 <__sanitizer_set_report_fd@@Base+0x3ab0>
    f45c:	cmp	w0, #0x2
    f460:	b.eq	f484 <__interceptor_signal@@Base+0x3c>  // b.none
    f464:	mov	x1, x20
    f468:	mov	w0, w19
    f46c:	adrp	x2, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    f470:	ldr	x30, [sp, #16]
    f474:	ldp	x19, x20, [sp], #32
    f478:	ldr	x2, [x2, #3920]
    f47c:	mov	x16, x2
    f480:	br	x16
    f484:	mov	x0, #0x0                   	// #0
    f488:	ldr	x30, [sp, #16]
    f48c:	ldp	x19, x20, [sp], #32
    f490:	ret
    f494:	nop

000000000000f498 <__interceptor_sigaction@@Base>:
    f498:	stp	x19, x20, [sp, #-48]!
    f49c:	mov	x20, x1
    f4a0:	mov	w19, w0
    f4a4:	stp	x21, x30, [sp, #16]
    f4a8:	mov	x21, x2
    f4ac:	str	x2, [sp, #40]
    f4b0:	bl	1ad60 <__sanitizer_set_report_fd@@Base+0x3ab0>
    f4b4:	cmp	w0, #0x2
    f4b8:	b.eq	f4e0 <__interceptor_sigaction@@Base+0x48>  // b.none
    f4bc:	adrp	x3, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    f4c0:	mov	x2, x21
    f4c4:	mov	x1, x20
    f4c8:	mov	w0, w19
    f4cc:	ldr	x3, [x3, #3928]
    f4d0:	ldp	x21, x30, [sp, #16]
    f4d4:	mov	x16, x3
    f4d8:	ldp	x19, x20, [sp], #48
    f4dc:	br	x16
    f4e0:	mov	w0, #0x0                   	// #0
    f4e4:	ldp	x21, x30, [sp, #16]
    f4e8:	ldp	x19, x20, [sp], #48
    f4ec:	ret
    f4f0:	sub	sp, sp, #0x870
    f4f4:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f4f8:	stp	x29, x30, [sp]
    f4fc:	mov	x29, sp
    f500:	ldr	x2, [x2, #3592]
    f504:	stp	x19, x20, [sp, #16]
    f508:	mov	x20, x0
    f50c:	stp	x21, x22, [sp, #32]
    f510:	mov	x21, x1
    f514:	ldrb	w0, [x2]
    f518:	stp	x23, x24, [sp, #48]
    f51c:	str	x25, [sp, #64]
    f520:	cbz	w0, f5a4 <__interceptor_sigaction@@Base+0x10c>
    f524:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f528:	add	x22, x29, #0x58
    f52c:	add	x0, x22, #0x10
    f530:	stp	x0, xzr, [x29, #88]
    f534:	mov	x25, x29
    f538:	ldr	x19, [x19, #4040]
    f53c:	str	xzr, [x29, #2152]
    f540:	ldrsw	x24, [x19, #36]
    f544:	bl	20018 <OnPrint@@Base+0x1d68>
    f548:	ldrb	w23, [x19, #34]
    f54c:	mov	x19, x0
    f550:	cbnz	w23, f5ac <__interceptor_sigaction@@Base+0x114>
    f554:	mov	x6, #0x0                   	// #0
    f558:	mov	x5, #0x0                   	// #0
    f55c:	mov	w7, w23
    f560:	mov	x3, x25
    f564:	mov	x4, #0x0                   	// #0
    f568:	mov	x2, x19
    f56c:	mov	w1, w24
    f570:	mov	x0, x22
    f574:	bl	206c8 <OnPrint@@Base+0x2418>
    f578:	mov	x2, x22
    f57c:	mov	x1, x21
    f580:	mov	x0, x20
    f584:	bl	c678 <__sanitizer_get_allocated_size@@Base+0xb48>
    f588:	ldp	x29, x30, [sp]
    f58c:	ldp	x19, x20, [sp, #16]
    f590:	ldp	x21, x22, [sp, #32]
    f594:	ldp	x23, x24, [sp, #48]
    f598:	ldr	x25, [sp, #64]
    f59c:	add	sp, sp, #0x870
    f5a0:	ret
    f5a4:	bl	6b40 <__lsan_init@plt>
    f5a8:	b	f524 <__interceptor_sigaction@@Base+0x8c>
    f5ac:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    f5b0:	cbz	x0, f554 <__interceptor_sigaction@@Base+0xbc>
    f5b4:	ldp	x6, x5, [x0, #144]
    f5b8:	b	f55c <__interceptor_sigaction@@Base+0xc4>
    f5bc:	nop

000000000000f5c0 <__interceptor_calloc@@Base>:
    f5c0:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f5c4:	ldr	x3, [x3, #4048]
    f5c8:	ldrb	w3, [x3]
    f5cc:	cbz	w3, f608 <__interceptor_calloc@@Base+0x48>
    f5d0:	mov	x4, x1
    f5d4:	adrp	x1, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    f5d8:	add	x1, x1, #0xf40
    f5dc:	mul	x2, x0, x4
    f5e0:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x84be0>
    f5e4:	add	x3, x0, #0x0
    f5e8:	ldr	x0, [x1, #32]
    f5ec:	add	x2, x2, #0x7
    f5f0:	add	x2, x0, x2, lsr #3
    f5f4:	str	x2, [x1, #32]
    f5f8:	cmp	x2, #0x3ff
    f5fc:	add	x0, x3, x0, lsl #3
    f600:	b.hi	f60c <__interceptor_calloc@@Base+0x4c>  // b.pmore
    f604:	ret
    f608:	b	f4f0 <__interceptor_sigaction@@Base+0x58>
    f60c:	str	x30, [sp, #-16]!
    f610:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f614:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f618:	add	x2, x2, #0xab0
    f61c:	add	x0, x0, #0xa78
    f620:	mov	x4, #0x0                   	// #0
    f624:	mov	x3, #0x0                   	// #0
    f628:	mov	w1, #0x47                  	// #71
    f62c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

000000000000f630 <__interceptor_pthread_create@@Base>:
    f630:	adrp	x4, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f634:	stp	x19, x20, [sp, #-208]!
    f638:	ldr	x4, [x4, #4048]
    f63c:	stp	x21, x22, [sp, #16]
    f640:	mov	x21, x0
    f644:	ldrb	w0, [x4]
    f648:	str	x30, [sp, #32]
    f64c:	cbnz	w0, f770 <__interceptor_pthread_create@@Base+0x140>
    f650:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f654:	mov	x19, x1
    f658:	mov	x22, x2
    f65c:	mov	x20, x3
    f660:	ldr	x0, [x0, #3592]
    f664:	ldrb	w0, [x0]
    f668:	cbz	w0, f6e4 <__interceptor_pthread_create@@Base+0xb4>
    f66c:	bl	10aa0 <_ZdaPvmSt11align_val_t@@Base+0x5f0>
    f670:	cbz	x19, f6f0 <__interceptor_pthread_create@@Base+0xc0>
    f674:	mov	x0, x19
    f678:	bl	1d5e8 <__sanitizer_set_report_fd@@Base+0x6338>
    f67c:	add	x1, sp, #0x34
    f680:	mov	x0, x19
    f684:	str	wzr, [sp, #52]
    f688:	bl	6730 <pthread_attr_getdetachstate@plt>
    f68c:	stp	x22, x20, [sp, #56]
    f690:	str	xzr, [sp, #72]
    f694:	bl	a490 <__lsan_do_recoverable_leak_check@@Base+0x580>
    f698:	adrp	x0, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    f69c:	add	x3, sp, #0x38
    f6a0:	mov	x1, x19
    f6a4:	adrp	x2, f000 <__interceptor___libc_memalign@@Base+0x38>
    f6a8:	ldr	x4, [x0, #3944]
    f6ac:	add	x2, x2, #0x7b0
    f6b0:	mov	x0, x21
    f6b4:	blr	x4
    f6b8:	mov	w20, w0
    f6bc:	bl	a4b0 <__lsan_do_recoverable_leak_check@@Base+0x5a0>
    f6c0:	cbz	w20, f700 <__interceptor_pthread_create@@Base+0xd0>
    f6c4:	add	x0, sp, #0x50
    f6c8:	cmp	x19, x0
    f6cc:	b.eq	f754 <__interceptor_pthread_create@@Base+0x124>  // b.none
    f6d0:	mov	w0, w20
    f6d4:	ldp	x21, x22, [sp, #16]
    f6d8:	ldr	x30, [sp, #32]
    f6dc:	ldp	x19, x20, [sp], #208
    f6e0:	ret
    f6e4:	bl	6b40 <__lsan_init@plt>
    f6e8:	bl	10aa0 <_ZdaPvmSt11align_val_t@@Base+0x5f0>
    f6ec:	cbnz	x19, f674 <__interceptor_pthread_create@@Base+0x44>
    f6f0:	add	x0, sp, #0x50
    f6f4:	mov	x19, x0
    f6f8:	bl	6800 <pthread_attr_init@plt>
    f6fc:	b	f674 <__interceptor_pthread_create@@Base+0x44>
    f700:	bl	ab28 <__sanitizer_print_stack_trace@@Base+0x90>
    f704:	mov	w22, w0
    f708:	ldr	w0, [sp, #52]
    f70c:	ldr	x21, [x21]
    f710:	bl	1d8c0 <__sanitizer_set_report_fd@@Base+0x6610>
    f714:	mov	w2, w0
    f718:	mov	x1, x21
    f71c:	mov	w0, w22
    f720:	bl	10920 <_ZdaPvmSt11align_val_t@@Base+0x470>
    f724:	sxtw	x1, w0
    f728:	cbz	w0, f790 <__interceptor_pthread_create@@Base+0x160>
    f72c:	dmb	ish
    f730:	str	x1, [sp, #72]
    f734:	b	f73c <__interceptor_pthread_create@@Base+0x10c>
    f738:	bl	199e0 <__sanitizer_set_report_fd@@Base+0x2730>
    f73c:	ldr	x1, [sp, #72]
    f740:	dmb	ish
    f744:	cbnz	x1, f738 <__interceptor_pthread_create@@Base+0x108>
    f748:	add	x0, sp, #0x50
    f74c:	cmp	x19, x0
    f750:	b.ne	f6d0 <__interceptor_pthread_create@@Base+0xa0>  // b.any
    f754:	mov	x0, x19
    f758:	bl	68f0 <pthread_attr_destroy@plt>
    f75c:	mov	w0, w20
    f760:	ldp	x21, x22, [sp, #16]
    f764:	ldr	x30, [sp, #32]
    f768:	ldp	x19, x20, [sp], #208
    f76c:	ret
    f770:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f774:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f778:	add	x2, x2, #0x1c0
    f77c:	add	x0, x0, #0xa78
    f780:	mov	x4, #0x0                   	// #0
    f784:	mov	x3, #0x0                   	// #0
    f788:	mov	w1, #0x173                 	// #371
    f78c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    f790:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f794:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f798:	add	x2, x2, #0xad8
    f79c:	add	x0, x0, #0xa78
    f7a0:	mov	x4, #0x0                   	// #0
    f7a4:	mov	x3, #0x0                   	// #0
    f7a8:	mov	w1, #0x18d                 	// #397
    f7ac:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    f7b0:	adrp	x2, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    f7b4:	stp	x19, x20, [sp, #-48]!
    f7b8:	mov	x20, x0
    f7bc:	ldr	w0, [x2, #3952]
    f7c0:	mov	x1, #0x4                   	// #4
    f7c4:	stp	x21, x22, [sp, #16]
    f7c8:	ldp	x21, x22, [x20]
    f7cc:	str	x30, [sp, #32]
    f7d0:	bl	69e0 <pthread_setspecific@plt>
    f7d4:	cbz	w0, f7e0 <__interceptor_pthread_create@@Base+0x1b0>
    f7d8:	b	f828 <__interceptor_pthread_create@@Base+0x1f8>
    f7dc:	bl	199e0 <__sanitizer_set_report_fd@@Base+0x2730>
    f7e0:	ldr	x19, [x20, #16]
    f7e4:	dmb	ish
    f7e8:	cbz	w19, f7dc <__interceptor_pthread_create@@Base+0x1ac>
    f7ec:	mov	w0, w19
    f7f0:	bl	ab50 <__sanitizer_print_stack_trace@@Base+0xb8>
    f7f4:	bl	19a98 <__sanitizer_set_report_fd@@Base+0x27e8>
    f7f8:	mov	x1, x0
    f7fc:	mov	w2, #0x0                   	// #0
    f800:	mov	w0, w19
    f804:	bl	10938 <_ZdaPvmSt11align_val_t@@Base+0x488>
    f808:	dmb	ish
    f80c:	str	xzr, [x20, #16]
    f810:	mov	x0, x22
    f814:	mov	x16, x21
    f818:	ldp	x21, x22, [sp, #16]
    f81c:	ldr	x30, [sp, #32]
    f820:	ldp	x19, x20, [sp], #48
    f824:	br	x16
    f828:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f82c:	add	x0, x0, #0xaf0
    f830:	bl	1e648 <OnPrint@@Base+0x398>
    f834:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    f838:	cmp	x0, #0x1
    f83c:	b.ls	f860 <__interceptor_pthread_create@@Base+0x230>  // b.plast
    f840:	adrp	x2, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    f844:	sub	x1, x0, #0x1
    f848:	str	x30, [sp, #-16]!
    f84c:	ldr	w0, [x2, #3952]
    f850:	bl	69e0 <pthread_setspecific@plt>
    f854:	cbnz	w0, f864 <__interceptor_pthread_create@@Base+0x234>
    f858:	ldr	x30, [sp], #16
    f85c:	ret
    f860:	b	109d8 <_ZdaPvmSt11align_val_t@@Base+0x528>
    f864:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f868:	add	x0, x0, #0xaf0
    f86c:	bl	1e648 <OnPrint@@Base+0x398>
    f870:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
    f874:	nop

000000000000f878 <__interceptor_mcheck@@Base>:
    f878:	mov	w0, #0x0                   	// #0
    f87c:	ret

000000000000f880 <__interceptor_mcheck_pedantic@@Base>:
    f880:	mov	w0, #0x0                   	// #0
    f884:	ret

000000000000f888 <__interceptor_mprobe@@Base>:
    f888:	mov	w0, #0x0                   	// #0
    f88c:	ret

000000000000f890 <_Znwm@@Base>:
    f890:	sub	sp, sp, #0x860
    f894:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f898:	stp	x29, x30, [sp]
    f89c:	mov	x29, sp
    f8a0:	ldr	x1, [x1, #4048]
    f8a4:	stp	x19, x20, [sp, #16]
    f8a8:	mov	x20, x0
    f8ac:	stp	x21, x22, [sp, #32]
    f8b0:	ldrb	w0, [x1]
    f8b4:	stp	x23, x24, [sp, #48]
    f8b8:	cbnz	w0, f960 <_Znwm@@Base+0xd0>
    f8bc:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f8c0:	ldr	x0, [x0, #3592]
    f8c4:	ldrb	w0, [x0]
    f8c8:	cbz	w0, f948 <_Znwm@@Base+0xb8>
    f8cc:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f8d0:	add	x21, x29, #0x48
    f8d4:	add	x0, x21, #0x10
    f8d8:	stp	x0, xzr, [x29, #72]
    f8dc:	mov	x24, x29
    f8e0:	ldr	x19, [x19, #4040]
    f8e4:	str	xzr, [x29, #2136]
    f8e8:	ldrsw	x23, [x19, #36]
    f8ec:	bl	20018 <OnPrint@@Base+0x1d68>
    f8f0:	ldrb	w22, [x19, #34]
    f8f4:	mov	x19, x0
    f8f8:	cbnz	w22, f950 <_Znwm@@Base+0xc0>
    f8fc:	mov	x6, #0x0                   	// #0
    f900:	mov	x5, #0x0                   	// #0
    f904:	mov	w7, w22
    f908:	mov	x3, x24
    f90c:	mov	x2, x19
    f910:	mov	x4, #0x0                   	// #0
    f914:	mov	w1, w23
    f918:	mov	x0, x21
    f91c:	bl	206c8 <OnPrint@@Base+0x2418>
    f920:	mov	x1, x21
    f924:	mov	x0, x20
    f928:	bl	c638 <__sanitizer_get_allocated_size@@Base+0xb08>
    f92c:	cbz	x0, f980 <_Znwm@@Base+0xf0>
    f930:	ldp	x29, x30, [sp]
    f934:	ldp	x19, x20, [sp, #16]
    f938:	ldp	x21, x22, [sp, #32]
    f93c:	ldp	x23, x24, [sp, #48]
    f940:	add	sp, sp, #0x860
    f944:	ret
    f948:	bl	6b40 <__lsan_init@plt>
    f94c:	b	f8cc <_Znwm@@Base+0x3c>
    f950:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    f954:	cbz	x0, f8fc <_Znwm@@Base+0x6c>
    f958:	ldp	x6, x5, [x0, #144]
    f95c:	b	f904 <_Znwm@@Base+0x74>
    f960:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f964:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    f968:	add	x2, x2, #0x1c0
    f96c:	add	x0, x0, #0xa78
    f970:	mov	x4, #0x0                   	// #0
    f974:	mov	x3, #0x0                   	// #0
    f978:	mov	w1, #0xde                  	// #222
    f97c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    f980:	mov	x1, x21
    f984:	mov	x0, x20
    f988:	bl	13468 <__sancov_default_options@@Base+0x2870>
    f98c:	nop

000000000000f990 <_Znam@@Base>:
    f990:	sub	sp, sp, #0x860
    f994:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f998:	stp	x29, x30, [sp]
    f99c:	mov	x29, sp
    f9a0:	ldr	x1, [x1, #4048]
    f9a4:	stp	x19, x20, [sp, #16]
    f9a8:	mov	x20, x0
    f9ac:	stp	x21, x22, [sp, #32]
    f9b0:	ldrb	w0, [x1]
    f9b4:	stp	x23, x24, [sp, #48]
    f9b8:	cbnz	w0, fa60 <_Znam@@Base+0xd0>
    f9bc:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f9c0:	ldr	x0, [x0, #3592]
    f9c4:	ldrb	w0, [x0]
    f9c8:	cbz	w0, fa48 <_Znam@@Base+0xb8>
    f9cc:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f9d0:	add	x21, x29, #0x48
    f9d4:	add	x0, x21, #0x10
    f9d8:	stp	x0, xzr, [x29, #72]
    f9dc:	mov	x24, x29
    f9e0:	ldr	x19, [x19, #4040]
    f9e4:	str	xzr, [x29, #2136]
    f9e8:	ldrsw	x23, [x19, #36]
    f9ec:	bl	20018 <OnPrint@@Base+0x1d68>
    f9f0:	ldrb	w22, [x19, #34]
    f9f4:	mov	x19, x0
    f9f8:	cbnz	w22, fa50 <_Znam@@Base+0xc0>
    f9fc:	mov	x6, #0x0                   	// #0
    fa00:	mov	x5, #0x0                   	// #0
    fa04:	mov	w7, w22
    fa08:	mov	x3, x24
    fa0c:	mov	x2, x19
    fa10:	mov	x4, #0x0                   	// #0
    fa14:	mov	w1, w23
    fa18:	mov	x0, x21
    fa1c:	bl	206c8 <OnPrint@@Base+0x2418>
    fa20:	mov	x1, x21
    fa24:	mov	x0, x20
    fa28:	bl	c638 <__sanitizer_get_allocated_size@@Base+0xb08>
    fa2c:	cbz	x0, fa80 <_Znam@@Base+0xf0>
    fa30:	ldp	x29, x30, [sp]
    fa34:	ldp	x19, x20, [sp, #16]
    fa38:	ldp	x21, x22, [sp, #32]
    fa3c:	ldp	x23, x24, [sp, #48]
    fa40:	add	sp, sp, #0x860
    fa44:	ret
    fa48:	bl	6b40 <__lsan_init@plt>
    fa4c:	b	f9cc <_Znam@@Base+0x3c>
    fa50:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    fa54:	cbz	x0, f9fc <_Znam@@Base+0x6c>
    fa58:	ldp	x6, x5, [x0, #144]
    fa5c:	b	fa04 <_Znam@@Base+0x74>
    fa60:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    fa64:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    fa68:	add	x2, x2, #0x1c0
    fa6c:	add	x0, x0, #0xa78
    fa70:	mov	x4, #0x0                   	// #0
    fa74:	mov	x3, #0x0                   	// #0
    fa78:	mov	w1, #0xe0                  	// #224
    fa7c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    fa80:	mov	x1, x21
    fa84:	mov	x0, x20
    fa88:	bl	13468 <__sancov_default_options@@Base+0x2870>
    fa8c:	nop

000000000000fa90 <_ZnwmRKSt9nothrow_t@@Base>:
    fa90:	sub	sp, sp, #0x860
    fa94:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fa98:	stp	x29, x30, [sp]
    fa9c:	mov	x29, sp
    faa0:	ldr	x1, [x1, #4048]
    faa4:	stp	x19, x20, [sp, #16]
    faa8:	mov	x20, x0
    faac:	stp	x21, x22, [sp, #32]
    fab0:	ldrb	w0, [x1]
    fab4:	stp	x23, x24, [sp, #48]
    fab8:	cbnz	w0, fb5c <_ZnwmRKSt9nothrow_t@@Base+0xcc>
    fabc:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fac0:	ldr	x0, [x0, #3592]
    fac4:	ldrb	w0, [x0]
    fac8:	cbz	w0, fb44 <_ZnwmRKSt9nothrow_t@@Base+0xb4>
    facc:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fad0:	add	x21, x29, #0x48
    fad4:	add	x0, x21, #0x10
    fad8:	stp	x0, xzr, [x29, #72]
    fadc:	mov	x24, x29
    fae0:	ldr	x19, [x19, #4040]
    fae4:	str	xzr, [x29, #2136]
    fae8:	ldrsw	x23, [x19, #36]
    faec:	bl	20018 <OnPrint@@Base+0x1d68>
    faf0:	ldrb	w22, [x19, #34]
    faf4:	mov	x19, x0
    faf8:	cbnz	w22, fb4c <_ZnwmRKSt9nothrow_t@@Base+0xbc>
    fafc:	mov	x6, #0x0                   	// #0
    fb00:	mov	x5, #0x0                   	// #0
    fb04:	mov	w7, w22
    fb08:	mov	x3, x24
    fb0c:	mov	x2, x19
    fb10:	mov	x4, #0x0                   	// #0
    fb14:	mov	w1, w23
    fb18:	mov	x0, x21
    fb1c:	bl	206c8 <OnPrint@@Base+0x2418>
    fb20:	mov	x1, x21
    fb24:	mov	x0, x20
    fb28:	bl	c638 <__sanitizer_get_allocated_size@@Base+0xb08>
    fb2c:	ldp	x29, x30, [sp]
    fb30:	ldp	x19, x20, [sp, #16]
    fb34:	ldp	x21, x22, [sp, #32]
    fb38:	ldp	x23, x24, [sp, #48]
    fb3c:	add	sp, sp, #0x860
    fb40:	ret
    fb44:	bl	6b40 <__lsan_init@plt>
    fb48:	b	facc <_ZnwmRKSt9nothrow_t@@Base+0x3c>
    fb4c:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    fb50:	cbz	x0, fafc <_ZnwmRKSt9nothrow_t@@Base+0x6c>
    fb54:	ldp	x6, x5, [x0, #144]
    fb58:	b	fb04 <_ZnwmRKSt9nothrow_t@@Base+0x74>
    fb5c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    fb60:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    fb64:	add	x2, x2, #0x1c0
    fb68:	add	x0, x0, #0xa78
    fb6c:	mov	x4, #0x0                   	// #0
    fb70:	mov	x3, #0x0                   	// #0
    fb74:	mov	w1, #0xe3                  	// #227
    fb78:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    fb7c:	nop

000000000000fb80 <_ZnamRKSt9nothrow_t@@Base>:
    fb80:	sub	sp, sp, #0x860
    fb84:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fb88:	stp	x29, x30, [sp]
    fb8c:	mov	x29, sp
    fb90:	ldr	x1, [x1, #4048]
    fb94:	stp	x19, x20, [sp, #16]
    fb98:	mov	x20, x0
    fb9c:	stp	x21, x22, [sp, #32]
    fba0:	ldrb	w0, [x1]
    fba4:	stp	x23, x24, [sp, #48]
    fba8:	cbnz	w0, fc4c <_ZnamRKSt9nothrow_t@@Base+0xcc>
    fbac:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fbb0:	ldr	x0, [x0, #3592]
    fbb4:	ldrb	w0, [x0]
    fbb8:	cbz	w0, fc34 <_ZnamRKSt9nothrow_t@@Base+0xb4>
    fbbc:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fbc0:	add	x21, x29, #0x48
    fbc4:	add	x0, x21, #0x10
    fbc8:	stp	x0, xzr, [x29, #72]
    fbcc:	mov	x24, x29
    fbd0:	ldr	x19, [x19, #4040]
    fbd4:	str	xzr, [x29, #2136]
    fbd8:	ldrsw	x23, [x19, #36]
    fbdc:	bl	20018 <OnPrint@@Base+0x1d68>
    fbe0:	ldrb	w22, [x19, #34]
    fbe4:	mov	x19, x0
    fbe8:	cbnz	w22, fc3c <_ZnamRKSt9nothrow_t@@Base+0xbc>
    fbec:	mov	x6, #0x0                   	// #0
    fbf0:	mov	x5, #0x0                   	// #0
    fbf4:	mov	w7, w22
    fbf8:	mov	x3, x24
    fbfc:	mov	x2, x19
    fc00:	mov	x4, #0x0                   	// #0
    fc04:	mov	w1, w23
    fc08:	mov	x0, x21
    fc0c:	bl	206c8 <OnPrint@@Base+0x2418>
    fc10:	mov	x1, x21
    fc14:	mov	x0, x20
    fc18:	bl	c638 <__sanitizer_get_allocated_size@@Base+0xb08>
    fc1c:	ldp	x29, x30, [sp]
    fc20:	ldp	x19, x20, [sp, #16]
    fc24:	ldp	x21, x22, [sp, #32]
    fc28:	ldp	x23, x24, [sp, #48]
    fc2c:	add	sp, sp, #0x860
    fc30:	ret
    fc34:	bl	6b40 <__lsan_init@plt>
    fc38:	b	fbbc <_ZnamRKSt9nothrow_t@@Base+0x3c>
    fc3c:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    fc40:	cbz	x0, fbec <_ZnamRKSt9nothrow_t@@Base+0x6c>
    fc44:	ldp	x6, x5, [x0, #144]
    fc48:	b	fbf4 <_ZnamRKSt9nothrow_t@@Base+0x74>
    fc4c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    fc50:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    fc54:	add	x2, x2, #0x1c0
    fc58:	add	x0, x0, #0xa78
    fc5c:	mov	x4, #0x0                   	// #0
    fc60:	mov	x3, #0x0                   	// #0
    fc64:	mov	w1, #0xe6                  	// #230
    fc68:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    fc6c:	nop

000000000000fc70 <_ZnwmSt11align_val_t@@Base>:
    fc70:	sub	sp, sp, #0x870
    fc74:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fc78:	stp	x29, x30, [sp]
    fc7c:	mov	x29, sp
    fc80:	ldr	x2, [x2, #4048]
    fc84:	stp	x19, x20, [sp, #16]
    fc88:	mov	x20, x0
    fc8c:	stp	x21, x22, [sp, #32]
    fc90:	ldrb	w0, [x2]
    fc94:	stp	x23, x24, [sp, #48]
    fc98:	str	x25, [sp, #64]
    fc9c:	cbnz	w0, fd50 <_ZnwmSt11align_val_t@@Base+0xe0>
    fca0:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fca4:	mov	x21, x1
    fca8:	ldr	x0, [x0, #3592]
    fcac:	ldrb	w0, [x0]
    fcb0:	cbz	w0, fd38 <_ZnwmSt11align_val_t@@Base+0xc8>
    fcb4:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fcb8:	add	x22, x29, #0x58
    fcbc:	add	x0, x22, #0x10
    fcc0:	stp	x0, xzr, [x29, #88]
    fcc4:	mov	x25, x29
    fcc8:	ldr	x19, [x19, #4040]
    fccc:	str	xzr, [x29, #2152]
    fcd0:	ldrsw	x24, [x19, #36]
    fcd4:	bl	20018 <OnPrint@@Base+0x1d68>
    fcd8:	ldrb	w23, [x19, #34]
    fcdc:	mov	x19, x0
    fce0:	cbnz	w23, fd40 <_ZnwmSt11align_val_t@@Base+0xd0>
    fce4:	mov	x6, #0x0                   	// #0
    fce8:	mov	x5, #0x0                   	// #0
    fcec:	mov	w7, w23
    fcf0:	mov	x3, x25
    fcf4:	mov	x4, #0x0                   	// #0
    fcf8:	mov	x2, x19
    fcfc:	mov	w1, w24
    fd00:	mov	x0, x22
    fd04:	bl	206c8 <OnPrint@@Base+0x2418>
    fd08:	mov	x2, x22
    fd0c:	mov	x1, x20
    fd10:	mov	x0, x21
    fd14:	bl	c5c0 <__sanitizer_get_allocated_size@@Base+0xa90>
    fd18:	cbz	x0, fd70 <_ZnwmSt11align_val_t@@Base+0x100>
    fd1c:	ldp	x29, x30, [sp]
    fd20:	ldp	x19, x20, [sp, #16]
    fd24:	ldp	x21, x22, [sp, #32]
    fd28:	ldp	x23, x24, [sp, #48]
    fd2c:	ldr	x25, [sp, #64]
    fd30:	add	sp, sp, #0x870
    fd34:	ret
    fd38:	bl	6b40 <__lsan_init@plt>
    fd3c:	b	fcb4 <_ZnwmSt11align_val_t@@Base+0x44>
    fd40:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    fd44:	cbz	x0, fce4 <_ZnwmSt11align_val_t@@Base+0x74>
    fd48:	ldp	x6, x5, [x0, #144]
    fd4c:	b	fcec <_ZnwmSt11align_val_t@@Base+0x7c>
    fd50:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    fd54:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    fd58:	add	x2, x2, #0x1c0
    fd5c:	add	x0, x0, #0xa78
    fd60:	mov	x4, #0x0                   	// #0
    fd64:	mov	x3, #0x0                   	// #0
    fd68:	mov	w1, #0xe9                  	// #233
    fd6c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    fd70:	mov	x1, x22
    fd74:	mov	x0, x20
    fd78:	bl	13468 <__sancov_default_options@@Base+0x2870>
    fd7c:	nop

000000000000fd80 <_ZnamSt11align_val_t@@Base>:
    fd80:	sub	sp, sp, #0x870
    fd84:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fd88:	stp	x29, x30, [sp]
    fd8c:	mov	x29, sp
    fd90:	ldr	x2, [x2, #4048]
    fd94:	stp	x19, x20, [sp, #16]
    fd98:	mov	x20, x0
    fd9c:	stp	x21, x22, [sp, #32]
    fda0:	ldrb	w0, [x2]
    fda4:	stp	x23, x24, [sp, #48]
    fda8:	str	x25, [sp, #64]
    fdac:	cbnz	w0, fe60 <_ZnamSt11align_val_t@@Base+0xe0>
    fdb0:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fdb4:	mov	x21, x1
    fdb8:	ldr	x0, [x0, #3592]
    fdbc:	ldrb	w0, [x0]
    fdc0:	cbz	w0, fe48 <_ZnamSt11align_val_t@@Base+0xc8>
    fdc4:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fdc8:	add	x22, x29, #0x58
    fdcc:	add	x0, x22, #0x10
    fdd0:	stp	x0, xzr, [x29, #88]
    fdd4:	mov	x25, x29
    fdd8:	ldr	x19, [x19, #4040]
    fddc:	str	xzr, [x29, #2152]
    fde0:	ldrsw	x24, [x19, #36]
    fde4:	bl	20018 <OnPrint@@Base+0x1d68>
    fde8:	ldrb	w23, [x19, #34]
    fdec:	mov	x19, x0
    fdf0:	cbnz	w23, fe50 <_ZnamSt11align_val_t@@Base+0xd0>
    fdf4:	mov	x6, #0x0                   	// #0
    fdf8:	mov	x5, #0x0                   	// #0
    fdfc:	mov	w7, w23
    fe00:	mov	x3, x25
    fe04:	mov	x4, #0x0                   	// #0
    fe08:	mov	x2, x19
    fe0c:	mov	w1, w24
    fe10:	mov	x0, x22
    fe14:	bl	206c8 <OnPrint@@Base+0x2418>
    fe18:	mov	x2, x22
    fe1c:	mov	x1, x20
    fe20:	mov	x0, x21
    fe24:	bl	c5c0 <__sanitizer_get_allocated_size@@Base+0xa90>
    fe28:	cbz	x0, fe80 <_ZnamSt11align_val_t@@Base+0x100>
    fe2c:	ldp	x29, x30, [sp]
    fe30:	ldp	x19, x20, [sp, #16]
    fe34:	ldp	x21, x22, [sp, #32]
    fe38:	ldp	x23, x24, [sp, #48]
    fe3c:	ldr	x25, [sp, #64]
    fe40:	add	sp, sp, #0x870
    fe44:	ret
    fe48:	bl	6b40 <__lsan_init@plt>
    fe4c:	b	fdc4 <_ZnamSt11align_val_t@@Base+0x44>
    fe50:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    fe54:	cbz	x0, fdf4 <_ZnamSt11align_val_t@@Base+0x74>
    fe58:	ldp	x6, x5, [x0, #144]
    fe5c:	b	fdfc <_ZnamSt11align_val_t@@Base+0x7c>
    fe60:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    fe64:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    fe68:	add	x2, x2, #0x1c0
    fe6c:	add	x0, x0, #0xa78
    fe70:	mov	x4, #0x0                   	// #0
    fe74:	mov	x3, #0x0                   	// #0
    fe78:	mov	w1, #0xec                  	// #236
    fe7c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    fe80:	mov	x1, x22
    fe84:	mov	x0, x20
    fe88:	bl	13468 <__sancov_default_options@@Base+0x2870>
    fe8c:	nop

000000000000fe90 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base>:
    fe90:	sub	sp, sp, #0x870
    fe94:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fe98:	stp	x29, x30, [sp]
    fe9c:	mov	x29, sp
    fea0:	ldr	x2, [x2, #4048]
    fea4:	stp	x21, x22, [sp, #32]
    fea8:	mov	x21, x0
    feac:	stp	x19, x20, [sp, #16]
    feb0:	ldrb	w0, [x2]
    feb4:	stp	x23, x24, [sp, #48]
    feb8:	str	x25, [sp, #64]
    febc:	cbnz	w0, ff6c <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0xdc>
    fec0:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fec4:	mov	x20, x1
    fec8:	ldr	x0, [x0, #3592]
    fecc:	ldrb	w0, [x0]
    fed0:	cbz	w0, ff54 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0xc4>
    fed4:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fed8:	add	x22, x29, #0x58
    fedc:	add	x0, x22, #0x10
    fee0:	stp	x0, xzr, [x29, #88]
    fee4:	mov	x25, x29
    fee8:	ldr	x19, [x19, #4040]
    feec:	str	xzr, [x29, #2152]
    fef0:	ldrsw	x24, [x19, #36]
    fef4:	bl	20018 <OnPrint@@Base+0x1d68>
    fef8:	ldrb	w23, [x19, #34]
    fefc:	mov	x19, x0
    ff00:	cbnz	w23, ff5c <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0xcc>
    ff04:	mov	x6, #0x0                   	// #0
    ff08:	mov	x5, #0x0                   	// #0
    ff0c:	mov	w7, w23
    ff10:	mov	x3, x25
    ff14:	mov	x4, #0x0                   	// #0
    ff18:	mov	x2, x19
    ff1c:	mov	w1, w24
    ff20:	mov	x0, x22
    ff24:	bl	206c8 <OnPrint@@Base+0x2418>
    ff28:	mov	x2, x22
    ff2c:	mov	x1, x21
    ff30:	mov	x0, x20
    ff34:	bl	c5c0 <__sanitizer_get_allocated_size@@Base+0xa90>
    ff38:	ldp	x29, x30, [sp]
    ff3c:	ldp	x19, x20, [sp, #16]
    ff40:	ldp	x21, x22, [sp, #32]
    ff44:	ldp	x23, x24, [sp, #48]
    ff48:	ldr	x25, [sp, #64]
    ff4c:	add	sp, sp, #0x870
    ff50:	ret
    ff54:	bl	6b40 <__lsan_init@plt>
    ff58:	b	fed4 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0x44>
    ff5c:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
    ff60:	cbz	x0, ff04 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0x74>
    ff64:	ldp	x6, x5, [x0, #144]
    ff68:	b	ff0c <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0x7c>
    ff6c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ff70:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
    ff74:	add	x2, x2, #0x1c0
    ff78:	add	x0, x0, #0xa78
    ff7c:	mov	x4, #0x0                   	// #0
    ff80:	mov	x3, #0x0                   	// #0
    ff84:	mov	w1, #0xef                  	// #239
    ff88:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
    ff8c:	nop

000000000000ff90 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base>:
    ff90:	sub	sp, sp, #0x870
    ff94:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ff98:	stp	x29, x30, [sp]
    ff9c:	mov	x29, sp
    ffa0:	ldr	x2, [x2, #4048]
    ffa4:	stp	x21, x22, [sp, #32]
    ffa8:	mov	x21, x0
    ffac:	stp	x19, x20, [sp, #16]
    ffb0:	ldrb	w0, [x2]
    ffb4:	stp	x23, x24, [sp, #48]
    ffb8:	str	x25, [sp, #64]
    ffbc:	cbnz	w0, 1006c <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0xdc>
    ffc0:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ffc4:	mov	x20, x1
    ffc8:	ldr	x0, [x0, #3592]
    ffcc:	ldrb	w0, [x0]
    ffd0:	cbz	w0, 10054 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0xc4>
    ffd4:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ffd8:	add	x22, x29, #0x58
    ffdc:	add	x0, x22, #0x10
    ffe0:	stp	x0, xzr, [x29, #88]
    ffe4:	mov	x25, x29
    ffe8:	ldr	x19, [x19, #4040]
    ffec:	str	xzr, [x29, #2152]
    fff0:	ldrsw	x24, [x19, #36]
    fff4:	bl	20018 <OnPrint@@Base+0x1d68>
    fff8:	ldrb	w23, [x19, #34]
    fffc:	mov	x19, x0
   10000:	cbnz	w23, 1005c <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0xcc>
   10004:	mov	x6, #0x0                   	// #0
   10008:	mov	x5, #0x0                   	// #0
   1000c:	mov	w7, w23
   10010:	mov	x3, x25
   10014:	mov	x4, #0x0                   	// #0
   10018:	mov	x2, x19
   1001c:	mov	w1, w24
   10020:	mov	x0, x22
   10024:	bl	206c8 <OnPrint@@Base+0x2418>
   10028:	mov	x2, x22
   1002c:	mov	x1, x21
   10030:	mov	x0, x20
   10034:	bl	c5c0 <__sanitizer_get_allocated_size@@Base+0xa90>
   10038:	ldp	x29, x30, [sp]
   1003c:	ldp	x19, x20, [sp, #16]
   10040:	ldp	x21, x22, [sp, #32]
   10044:	ldp	x23, x24, [sp, #48]
   10048:	ldr	x25, [sp, #64]
   1004c:	add	sp, sp, #0x870
   10050:	ret
   10054:	bl	6b40 <__lsan_init@plt>
   10058:	b	ffd4 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x44>
   1005c:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
   10060:	cbz	x0, 10004 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x74>
   10064:	ldp	x6, x5, [x0, #144]
   10068:	b	1000c <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x7c>
   1006c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10070:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10074:	add	x2, x2, #0x1c0
   10078:	add	x0, x0, #0xa78
   1007c:	mov	x4, #0x0                   	// #0
   10080:	mov	x3, #0x0                   	// #0
   10084:	mov	w1, #0xf2                  	// #242
   10088:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1008c:	nop

0000000000010090 <_ZdlPv@@Base>:
   10090:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10094:	str	x30, [sp, #-32]!
   10098:	ldr	x1, [x1, #4048]
   1009c:	ldrb	w1, [x1]
   100a0:	cbnz	w1, 100d0 <_ZdlPv@@Base+0x40>
   100a4:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   100a8:	ldr	x1, [x1, #3592]
   100ac:	ldrb	w1, [x1]
   100b0:	cbz	w1, 100bc <_ZdlPv@@Base+0x2c>
   100b4:	ldr	x30, [sp], #32
   100b8:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   100bc:	str	x0, [sp, #24]
   100c0:	bl	6b40 <__lsan_init@plt>
   100c4:	ldr	x0, [sp, #24]
   100c8:	ldr	x30, [sp], #32
   100cc:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   100d0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   100d4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   100d8:	add	x2, x2, #0x1c0
   100dc:	add	x0, x0, #0xa78
   100e0:	mov	x4, #0x0                   	// #0
   100e4:	mov	x3, #0x0                   	// #0
   100e8:	mov	w1, #0xf5                  	// #245
   100ec:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

00000000000100f0 <_ZdaPv@@Base>:
   100f0:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   100f4:	str	x30, [sp, #-32]!
   100f8:	ldr	x1, [x1, #4048]
   100fc:	ldrb	w1, [x1]
   10100:	cbnz	w1, 10130 <_ZdaPv@@Base+0x40>
   10104:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10108:	ldr	x1, [x1, #3592]
   1010c:	ldrb	w1, [x1]
   10110:	cbz	w1, 1011c <_ZdaPv@@Base+0x2c>
   10114:	ldr	x30, [sp], #32
   10118:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   1011c:	str	x0, [sp, #24]
   10120:	bl	6b40 <__lsan_init@plt>
   10124:	ldr	x0, [sp, #24]
   10128:	ldr	x30, [sp], #32
   1012c:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   10130:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10134:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10138:	add	x2, x2, #0x1c0
   1013c:	add	x0, x0, #0xa78
   10140:	mov	x4, #0x0                   	// #0
   10144:	mov	x3, #0x0                   	// #0
   10148:	mov	w1, #0xf7                  	// #247
   1014c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

0000000000010150 <_ZdlPvRKSt9nothrow_t@@Base>:
   10150:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10154:	str	x30, [sp, #-32]!
   10158:	ldr	x1, [x1, #4048]
   1015c:	ldrb	w1, [x1]
   10160:	cbnz	w1, 10190 <_ZdlPvRKSt9nothrow_t@@Base+0x40>
   10164:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10168:	ldr	x1, [x1, #3592]
   1016c:	ldrb	w1, [x1]
   10170:	cbz	w1, 1017c <_ZdlPvRKSt9nothrow_t@@Base+0x2c>
   10174:	ldr	x30, [sp], #32
   10178:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   1017c:	str	x0, [sp, #24]
   10180:	bl	6b40 <__lsan_init@plt>
   10184:	ldr	x0, [sp, #24]
   10188:	ldr	x30, [sp], #32
   1018c:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   10190:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10194:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10198:	add	x2, x2, #0x1c0
   1019c:	add	x0, x0, #0xa78
   101a0:	mov	x4, #0x0                   	// #0
   101a4:	mov	x3, #0x0                   	// #0
   101a8:	mov	w1, #0xf9                  	// #249
   101ac:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

00000000000101b0 <_ZdaPvRKSt9nothrow_t@@Base>:
   101b0:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   101b4:	str	x30, [sp, #-32]!
   101b8:	ldr	x1, [x1, #4048]
   101bc:	ldrb	w1, [x1]
   101c0:	cbnz	w1, 101f0 <_ZdaPvRKSt9nothrow_t@@Base+0x40>
   101c4:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   101c8:	ldr	x1, [x1, #3592]
   101cc:	ldrb	w1, [x1]
   101d0:	cbz	w1, 101dc <_ZdaPvRKSt9nothrow_t@@Base+0x2c>
   101d4:	ldr	x30, [sp], #32
   101d8:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   101dc:	str	x0, [sp, #24]
   101e0:	bl	6b40 <__lsan_init@plt>
   101e4:	ldr	x0, [sp, #24]
   101e8:	ldr	x30, [sp], #32
   101ec:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   101f0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   101f4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   101f8:	add	x2, x2, #0x1c0
   101fc:	add	x0, x0, #0xa78
   10200:	mov	x4, #0x0                   	// #0
   10204:	mov	x3, #0x0                   	// #0
   10208:	mov	w1, #0xfc                  	// #252
   1020c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

0000000000010210 <_ZdlPvm@@Base>:
   10210:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10214:	str	x30, [sp, #-32]!
   10218:	ldr	x1, [x1, #4048]
   1021c:	ldrb	w1, [x1]
   10220:	cbnz	w1, 10250 <_ZdlPvm@@Base+0x40>
   10224:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10228:	ldr	x1, [x1, #3592]
   1022c:	ldrb	w1, [x1]
   10230:	cbz	w1, 1023c <_ZdlPvm@@Base+0x2c>
   10234:	ldr	x30, [sp], #32
   10238:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   1023c:	str	x0, [sp, #24]
   10240:	bl	6b40 <__lsan_init@plt>
   10244:	ldr	x0, [sp, #24]
   10248:	ldr	x30, [sp], #32
   1024c:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   10250:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10254:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10258:	add	x2, x2, #0x1c0
   1025c:	add	x0, x0, #0xa78
   10260:	mov	x4, #0x0                   	// #0
   10264:	mov	x3, #0x0                   	// #0
   10268:	mov	w1, #0xff                  	// #255
   1026c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

0000000000010270 <_ZdaPvm@@Base>:
   10270:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10274:	str	x30, [sp, #-32]!
   10278:	ldr	x1, [x1, #4048]
   1027c:	ldrb	w1, [x1]
   10280:	cbnz	w1, 102b0 <_ZdaPvm@@Base+0x40>
   10284:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10288:	ldr	x1, [x1, #3592]
   1028c:	ldrb	w1, [x1]
   10290:	cbz	w1, 1029c <_ZdaPvm@@Base+0x2c>
   10294:	ldr	x30, [sp], #32
   10298:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   1029c:	str	x0, [sp, #24]
   102a0:	bl	6b40 <__lsan_init@plt>
   102a4:	ldr	x0, [sp, #24]
   102a8:	ldr	x30, [sp], #32
   102ac:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   102b0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   102b4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   102b8:	add	x2, x2, #0x1c0
   102bc:	add	x0, x0, #0xa78
   102c0:	mov	x4, #0x0                   	// #0
   102c4:	mov	x3, #0x0                   	// #0
   102c8:	mov	w1, #0x102                 	// #258
   102cc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

00000000000102d0 <_ZdlPvSt11align_val_t@@Base>:
   102d0:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   102d4:	str	x30, [sp, #-32]!
   102d8:	ldr	x1, [x1, #4048]
   102dc:	ldrb	w1, [x1]
   102e0:	cbnz	w1, 10310 <_ZdlPvSt11align_val_t@@Base+0x40>
   102e4:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   102e8:	ldr	x1, [x1, #3592]
   102ec:	ldrb	w1, [x1]
   102f0:	cbz	w1, 102fc <_ZdlPvSt11align_val_t@@Base+0x2c>
   102f4:	ldr	x30, [sp], #32
   102f8:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   102fc:	str	x0, [sp, #24]
   10300:	bl	6b40 <__lsan_init@plt>
   10304:	ldr	x0, [sp, #24]
   10308:	ldr	x30, [sp], #32
   1030c:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   10310:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10314:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10318:	add	x2, x2, #0x1c0
   1031c:	add	x0, x0, #0xa78
   10320:	mov	x4, #0x0                   	// #0
   10324:	mov	x3, #0x0                   	// #0
   10328:	mov	w1, #0x105                 	// #261
   1032c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

0000000000010330 <_ZdaPvSt11align_val_t@@Base>:
   10330:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10334:	str	x30, [sp, #-32]!
   10338:	ldr	x1, [x1, #4048]
   1033c:	ldrb	w1, [x1]
   10340:	cbnz	w1, 10370 <_ZdaPvSt11align_val_t@@Base+0x40>
   10344:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10348:	ldr	x1, [x1, #3592]
   1034c:	ldrb	w1, [x1]
   10350:	cbz	w1, 1035c <_ZdaPvSt11align_val_t@@Base+0x2c>
   10354:	ldr	x30, [sp], #32
   10358:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   1035c:	str	x0, [sp, #24]
   10360:	bl	6b40 <__lsan_init@plt>
   10364:	ldr	x0, [sp, #24]
   10368:	ldr	x30, [sp], #32
   1036c:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   10370:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10374:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10378:	add	x2, x2, #0x1c0
   1037c:	add	x0, x0, #0xa78
   10380:	mov	x4, #0x0                   	// #0
   10384:	mov	x3, #0x0                   	// #0
   10388:	mov	w1, #0x108                 	// #264
   1038c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

0000000000010390 <_ZdlPvSt11align_val_tRKSt9nothrow_t@@Base>:
   10390:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10394:	str	x30, [sp, #-32]!
   10398:	ldr	x1, [x1, #4048]
   1039c:	ldrb	w1, [x1]
   103a0:	cbnz	w1, 103d0 <_ZdlPvSt11align_val_tRKSt9nothrow_t@@Base+0x40>
   103a4:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   103a8:	ldr	x1, [x1, #3592]
   103ac:	ldrb	w1, [x1]
   103b0:	cbz	w1, 103bc <_ZdlPvSt11align_val_tRKSt9nothrow_t@@Base+0x2c>
   103b4:	ldr	x30, [sp], #32
   103b8:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   103bc:	str	x0, [sp, #24]
   103c0:	bl	6b40 <__lsan_init@plt>
   103c4:	ldr	x0, [sp, #24]
   103c8:	ldr	x30, [sp], #32
   103cc:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   103d0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   103d4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   103d8:	add	x2, x2, #0x1c0
   103dc:	add	x0, x0, #0xa78
   103e0:	mov	x4, #0x0                   	// #0
   103e4:	mov	x3, #0x0                   	// #0
   103e8:	mov	w1, #0x10b                 	// #267
   103ec:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

00000000000103f0 <_ZdaPvSt11align_val_tRKSt9nothrow_t@@Base>:
   103f0:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   103f4:	str	x30, [sp, #-32]!
   103f8:	ldr	x1, [x1, #4048]
   103fc:	ldrb	w1, [x1]
   10400:	cbnz	w1, 10430 <_ZdaPvSt11align_val_tRKSt9nothrow_t@@Base+0x40>
   10404:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10408:	ldr	x1, [x1, #3592]
   1040c:	ldrb	w1, [x1]
   10410:	cbz	w1, 1041c <_ZdaPvSt11align_val_tRKSt9nothrow_t@@Base+0x2c>
   10414:	ldr	x30, [sp], #32
   10418:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   1041c:	str	x0, [sp, #24]
   10420:	bl	6b40 <__lsan_init@plt>
   10424:	ldr	x0, [sp, #24]
   10428:	ldr	x30, [sp], #32
   1042c:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   10430:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10434:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10438:	add	x2, x2, #0x1c0
   1043c:	add	x0, x0, #0xa78
   10440:	mov	x4, #0x0                   	// #0
   10444:	mov	x3, #0x0                   	// #0
   10448:	mov	w1, #0x10e                 	// #270
   1044c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

0000000000010450 <_ZdlPvmSt11align_val_t@@Base>:
   10450:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10454:	str	x30, [sp, #-32]!
   10458:	ldr	x1, [x1, #4048]
   1045c:	ldrb	w1, [x1]
   10460:	cbnz	w1, 10490 <_ZdlPvmSt11align_val_t@@Base+0x40>
   10464:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10468:	ldr	x1, [x1, #3592]
   1046c:	ldrb	w1, [x1]
   10470:	cbz	w1, 1047c <_ZdlPvmSt11align_val_t@@Base+0x2c>
   10474:	ldr	x30, [sp], #32
   10478:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   1047c:	str	x0, [sp, #24]
   10480:	bl	6b40 <__lsan_init@plt>
   10484:	ldr	x0, [sp, #24]
   10488:	ldr	x30, [sp], #32
   1048c:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   10490:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10494:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10498:	add	x2, x2, #0x1c0
   1049c:	add	x0, x0, #0xa78
   104a0:	mov	x4, #0x0                   	// #0
   104a4:	mov	x3, #0x0                   	// #0
   104a8:	mov	w1, #0x111                 	// #273
   104ac:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

00000000000104b0 <_ZdaPvmSt11align_val_t@@Base>:
   104b0:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   104b4:	str	x30, [sp, #-32]!
   104b8:	ldr	x1, [x1, #4048]
   104bc:	ldrb	w1, [x1]
   104c0:	cbnz	w1, 104f0 <_ZdaPvmSt11align_val_t@@Base+0x40>
   104c4:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   104c8:	ldr	x1, [x1, #3592]
   104cc:	ldrb	w1, [x1]
   104d0:	cbz	w1, 104dc <_ZdaPvmSt11align_val_t@@Base+0x2c>
   104d4:	ldr	x30, [sp], #32
   104d8:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   104dc:	str	x0, [sp, #24]
   104e0:	bl	6b40 <__lsan_init@plt>
   104e4:	ldr	x0, [sp, #24]
   104e8:	ldr	x30, [sp], #32
   104ec:	b	cbe0 <__sanitizer_get_allocated_size@@Base+0x10b0>
   104f0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   104f4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   104f8:	add	x2, x2, #0x1c0
   104fc:	add	x0, x0, #0xa78
   10500:	mov	x4, #0x0                   	// #0
   10504:	mov	x3, #0x0                   	// #0
   10508:	mov	w1, #0x114                 	// #276
   1050c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   10510:	adrp	x3, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
   10514:	ldr	x3, [x3, #3928]
   10518:	mov	x16, x3
   1051c:	br	x16
   10520:	stp	x19, x30, [sp, #-16]!
   10524:	adrp	x19, e3000 <__asan_cplus_demangle_operators@@Base+0x83be0>
   10528:	add	x19, x19, #0xf40
   1052c:	ldrb	w0, [x19, #52]
   10530:	cbnz	w0, 107b8 <_ZdaPvmSt11align_val_t@@Base+0x308>
   10534:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10538:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1053c:	mov	w4, #0x1                   	// #1
   10540:	add	x1, x19, #0x10
   10544:	ldr	x3, [x3, #3984]
   10548:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1054c:	ldr	x2, [x2, #3440]
   10550:	add	x0, x0, #0xb90
   10554:	strb	w4, [x19, #52]
   10558:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   1055c:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10560:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10564:	add	x1, x19, #0x18
   10568:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1056c:	ldr	x3, [x3, #3720]
   10570:	add	x0, x0, #0xb98
   10574:	ldr	x2, [x2, #3800]
   10578:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   1057c:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10580:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10584:	add	x1, x19, #0x38
   10588:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1058c:	ldr	x3, [x3, #3640]
   10590:	add	x0, x0, #0xba8
   10594:	ldr	x2, [x2, #3752]
   10598:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   1059c:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   105a0:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   105a4:	add	x1, x19, #0x40
   105a8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   105ac:	ldr	x3, [x3, #3848]
   105b0:	add	x0, x0, #0xbb0
   105b4:	ldr	x2, [x2, #3464]
   105b8:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   105bc:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   105c0:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   105c4:	add	x1, x19, #0x48
   105c8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   105cc:	ldr	x3, [x3, #3944]
   105d0:	add	x0, x0, #0xbb8
   105d4:	ldr	x2, [x2, #4056]
   105d8:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   105dc:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   105e0:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   105e4:	add	x1, x19, #0x50
   105e8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   105ec:	ldr	x3, [x3, #3864]
   105f0:	add	x0, x0, #0xbc0
   105f4:	ldr	x2, [x2, #3768]
   105f8:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   105fc:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10600:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10604:	add	x1, x19, #0x58
   10608:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1060c:	ldr	x3, [x3, #3960]
   10610:	add	x0, x0, #0xbc8
   10614:	ldr	x2, [x2, #3904]
   10618:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   1061c:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10620:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10624:	add	x1, x19, #0x60
   10628:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1062c:	ldr	x3, [x3, #3576]
   10630:	add	x0, x0, #0xbd0
   10634:	ldr	x2, [x2, #3416]
   10638:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   1063c:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10640:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10644:	add	x1, x19, #0x68
   10648:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1064c:	ldr	x3, [x3, #3448]
   10650:	add	x0, x0, #0xbe0
   10654:	ldr	x2, [x2, #3872]
   10658:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   1065c:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10660:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10664:	add	x1, x19, #0x70
   10668:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1066c:	ldr	x3, [x3, #3952]
   10670:	add	x0, x0, #0xbf0
   10674:	ldr	x2, [x2, #3896]
   10678:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   1067c:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10680:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10684:	add	x1, x19, #0x78
   10688:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1068c:	ldr	x3, [x3, #3792]
   10690:	add	x0, x0, #0xc00
   10694:	ldr	x2, [x2, #3656]
   10698:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   1069c:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   106a0:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   106a4:	add	x1, x19, #0x80
   106a8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   106ac:	ldr	x3, [x3, #3624]
   106b0:	add	x0, x0, #0xc10
   106b4:	ldr	x2, [x2, #3912]
   106b8:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   106bc:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   106c0:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   106c4:	add	x1, x19, #0x88
   106c8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   106cc:	ldr	x3, [x3, #3824]
   106d0:	add	x0, x0, #0xc18
   106d4:	ldr	x2, [x2, #3888]
   106d8:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   106dc:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   106e0:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   106e4:	add	x1, x19, #0x90
   106e8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   106ec:	ldr	x3, [x3, #3776]
   106f0:	add	x0, x0, #0xc20
   106f4:	ldr	x2, [x2, #3992]
   106f8:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   106fc:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10700:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10704:	add	x1, x19, #0x98
   10708:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1070c:	ldr	x3, [x3, #3480]
   10710:	add	x0, x0, #0xc38
   10714:	ldr	x2, [x2, #3632]
   10718:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   1071c:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10720:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10724:	add	x1, x19, #0xa0
   10728:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1072c:	ldr	x3, [x3, #3688]
   10730:	add	x0, x0, #0xc48
   10734:	ldr	x2, [x2, #3600]
   10738:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   1073c:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10740:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10744:	add	x1, x19, #0x28
   10748:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1074c:	ldr	x3, [x3, #3520]
   10750:	add	x0, x0, #0xc50
   10754:	ldr	x2, [x2, #3504]
   10758:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   1075c:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10760:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10764:	mov	x1, x19
   10768:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1076c:	ldr	x3, [x3, #3968]
   10770:	add	x0, x0, #0xc60
   10774:	ldr	x2, [x2, #3936]
   10778:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   1077c:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10780:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10784:	add	x1, x19, #0x8
   10788:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1078c:	ldr	x3, [x3, #3696]
   10790:	add	x0, x0, #0xc70
   10794:	ldr	x2, [x2, #3608]
   10798:	bl	286a8 <__sanitizer_set_death_callback@@Base+0x18a0>
   1079c:	adrp	x1, f000 <__interceptor___libc_memalign@@Base+0x38>
   107a0:	add	x0, x19, #0x30
   107a4:	add	x1, x1, #0x838
   107a8:	bl	6b80 <pthread_key_create@plt>
   107ac:	cbnz	w0, 107d8 <_ZdaPvmSt11align_val_t@@Base+0x328>
   107b0:	ldp	x19, x30, [sp], #16
   107b4:	ret
   107b8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   107bc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   107c0:	add	x2, x2, #0xb20
   107c4:	add	x0, x0, #0xb40
   107c8:	mov	x4, #0x0                   	// #0
   107cc:	mov	x3, #0x0                   	// #0
   107d0:	mov	w1, #0x4f                  	// #79
   107d4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   107d8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   107dc:	add	x0, x0, #0xc78
   107e0:	bl	1e648 <OnPrint@@Base+0x398>
   107e4:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   107e8:	ldr	x2, [x1]
   107ec:	str	x2, [x0, #144]
   107f0:	ldr	x2, [x1, #48]
   107f4:	ldr	x3, [x1, #8]
   107f8:	str	x3, [x0, #152]
   107fc:	ldr	x3, [x1, #32]
   10800:	str	x3, [x0, #176]
   10804:	ldr	x3, [x1, #40]
   10808:	str	x3, [x0, #184]
   1080c:	ldr	x3, [x1, #16]
   10810:	str	x3, [x0, #160]
   10814:	ldr	x1, [x1, #24]
   10818:	str	x1, [x0, #168]
   1081c:	str	x2, [x0, #192]
   10820:	ret
   10824:	nop
   10828:	ldr	x2, [x0, #40]
   1082c:	cmp	x1, x2
   10830:	b.eq	1083c <_ZdaPvmSt11align_val_t@@Base+0x38c>  // b.none
   10834:	mov	w0, #0x0                   	// #0
   10838:	ret
   1083c:	ldr	w0, [x0, #112]
   10840:	cmp	w0, #0x0
   10844:	cset	w0, ne  // ne = any
   10848:	ret
   1084c:	nop
   10850:	stp	x19, x20, [sp, #-32]!
   10854:	mov	w2, #0x0                   	// #0
   10858:	mov	w20, w0
   1085c:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10860:	mov	x0, #0xc8                  	// #200
   10864:	add	x1, x1, #0xca8
   10868:	str	x30, [sp, #16]
   1086c:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   10870:	mov	x19, x0
   10874:	mov	w1, w20
   10878:	bl	26e40 <__sanitizer_set_death_callback@@Base+0x38>
   1087c:	adrp	x1, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   10880:	add	x1, x1, #0xbc8
   10884:	ldr	x30, [sp, #16]
   10888:	str	x1, [x19]
   1088c:	stp	xzr, xzr, [x19, #144]
   10890:	mov	x0, x19
   10894:	stp	xzr, xzr, [x19, #160]
   10898:	stp	xzr, xzr, [x19, #176]
   1089c:	str	xzr, [x19, #192]
   108a0:	ldp	x19, x20, [sp], #32
   108a4:	ret
   108a8:	str	x30, [sp, #-16]!
   108ac:	bl	c818 <__sanitizer_get_allocated_size@@Base+0xce8>
   108b0:	ldr	x30, [sp], #16
   108b4:	b	27d98 <__sanitizer_set_death_callback@@Base+0xf90>
   108b8:	stp	x19, x30, [sp, #-16]!
   108bc:	adrp	x19, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   108c0:	add	x19, x19, #0x0
   108c4:	mov	x0, x19
   108c8:	mov	w4, #0x0                   	// #0
   108cc:	mov	w3, #0x40                  	// #64
   108d0:	mov	w2, #0x2000                	// #8192
   108d4:	adrp	x1, 10000 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x70>
   108d8:	add	x1, x1, #0x850
   108dc:	bl	27228 <__sanitizer_set_death_callback@@Base+0x420>
   108e0:	str	x19, [x19, #208]
   108e4:	ldp	x19, x30, [sp], #16
   108e8:	ret
   108ec:	nop
   108f0:	stp	x19, x30, [sp, #-16]!
   108f4:	mov	x19, x0
   108f8:	bl	26e40 <__sanitizer_set_death_callback@@Base+0x38>
   108fc:	adrp	x0, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   10900:	add	x0, x0, #0xbc8
   10904:	str	x0, [x19]
   10908:	stp	xzr, xzr, [x19, #144]
   1090c:	stp	xzr, xzr, [x19, #160]
   10910:	stp	xzr, xzr, [x19, #176]
   10914:	str	xzr, [x19, #192]
   10918:	ldp	x19, x30, [sp], #16
   1091c:	ret
   10920:	adrp	x5, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10924:	mov	w3, w0
   10928:	mov	x4, #0x0                   	// #0
   1092c:	ldr	x0, [x5, #208]
   10930:	b	27318 <__sanitizer_set_death_callback@@Base+0x510>
   10934:	nop
   10938:	stp	x19, x20, [sp, #-128]!
   1093c:	cmp	w0, #0x0
   10940:	mov	x20, x1
   10944:	add	x19, sp, #0x48
   10948:	add	x3, sp, #0x68
   1094c:	mov	x1, x19
   10950:	add	x4, sp, #0x40
   10954:	stp	x21, x22, [sp, #16]
   10958:	mov	w22, w0
   1095c:	and	w21, w2, #0xff
   10960:	cset	w0, eq  // eq = none
   10964:	add	x2, sp, #0x38
   10968:	str	x30, [sp, #32]
   1096c:	stp	xzr, xzr, [sp, #56]
   10970:	bl	1b828 <__sanitizer_set_report_fd@@Base+0x4578>
   10974:	add	x1, x19, #0x18
   10978:	ldp	x5, x4, [sp, #56]
   1097c:	add	x0, x19, #0x10
   10980:	ldr	x3, [sp, #72]
   10984:	ldr	x2, [sp, #104]
   10988:	add	x3, x3, x5
   1098c:	str	x3, [sp, #80]
   10990:	add	x2, x2, x4
   10994:	str	x2, [sp, #112]
   10998:	bl	afd8 <__sanitizer_print_stack_trace@@Base+0x540>
   1099c:	bl	282b8 <__sanitizer_set_death_callback@@Base+0x14b0>
   109a0:	mov	x5, x0
   109a4:	adrp	x0, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   109a8:	mov	x2, x20
   109ac:	mov	x4, x19
   109b0:	mov	w3, w21
   109b4:	ldr	x0, [x0, #208]
   109b8:	mov	w1, w22
   109bc:	str	x5, [sp, #120]
   109c0:	bl	27c20 <__sanitizer_set_death_callback@@Base+0xe18>
   109c4:	ldp	x21, x22, [sp, #16]
   109c8:	ldr	x30, [sp, #32]
   109cc:	ldp	x19, x20, [sp], #128
   109d0:	ret
   109d4:	nop
   109d8:	adrp	x0, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   109dc:	stp	x19, x30, [sp, #-16]!
   109e0:	ldr	x19, [x0, #208]
   109e4:	bl	ab28 <__sanitizer_print_stack_trace@@Base+0x90>
   109e8:	mov	w1, w0
   109ec:	mov	x0, x19
   109f0:	bl	27a48 <__sanitizer_set_death_callback@@Base+0xc40>
   109f4:	ldp	x19, x30, [sp], #16
   109f8:	mov	w0, #0xffffffff            	// #-1
   109fc:	b	ab50 <__sanitizer_print_stack_trace@@Base+0xb8>
   10a00:	stp	x19, x30, [sp, #-16]!
   10a04:	adrp	x19, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10a08:	add	x19, x19, #0x0
   10a0c:	ldr	x0, [x19, #208]
   10a10:	cbz	x0, 10a38 <_ZdaPvmSt11align_val_t@@Base+0x588>
   10a14:	bl	ab28 <__sanitizer_print_stack_trace@@Base+0x90>
   10a18:	cmn	w0, #0x1
   10a1c:	b.eq	10a38 <_ZdaPvmSt11align_val_t@@Base+0x588>  // b.none
   10a20:	ldr	x19, [x19, #208]
   10a24:	bl	ab28 <__sanitizer_print_stack_trace@@Base+0x90>
   10a28:	ldr	x1, [x19, #152]
   10a2c:	ldp	x19, x30, [sp], #16
   10a30:	ldr	x0, [x1, w0, uxtw #3]
   10a34:	ret
   10a38:	mov	x0, #0x0                   	// #0
   10a3c:	ldp	x19, x30, [sp], #16
   10a40:	ret
   10a44:	nop
   10a48:	adrp	x3, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10a4c:	mov	x2, x0
   10a50:	adrp	x1, 10000 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x70>
   10a54:	add	x1, x1, #0x828
   10a58:	ldr	x0, [x3, #208]
   10a5c:	b	27588 <__sanitizer_set_death_callback@@Base+0x780>
   10a60:	cmn	w0, #0x1
   10a64:	b.eq	10a7c <_ZdaPvmSt11align_val_t@@Base+0x5cc>  // b.none
   10a68:	mov	w1, w0
   10a6c:	adrp	x0, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10a70:	mov	x2, #0x0                   	// #0
   10a74:	ldr	x0, [x0, #208]
   10a78:	b	27940 <__sanitizer_set_death_callback@@Base+0xb38>
   10a7c:	str	x30, [sp, #-16]!
   10a80:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10a84:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10a88:	mov	x4, #0xffffffff            	// #4294967295
   10a8c:	add	x2, x2, #0xcb8
   10a90:	add	x0, x0, #0xcd8
   10a94:	mov	x3, x4
   10a98:	mov	w1, #0x75                  	// #117
   10a9c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   10aa0:	stp	x19, x30, [sp, #-16]!
   10aa4:	bl	ab28 <__sanitizer_print_stack_trace@@Base+0x90>
   10aa8:	cbz	w0, 10ab4 <_ZdaPvmSt11align_val_t@@Base+0x604>
   10aac:	ldp	x19, x30, [sp], #16
   10ab0:	ret
   10ab4:	bl	10a00 <_ZdaPvmSt11align_val_t@@Base+0x550>
   10ab8:	mov	x19, x0
   10abc:	bl	19a98 <__sanitizer_set_report_fd@@Base+0x27e8>
   10ac0:	str	x0, [x19, #32]
   10ac4:	ldp	x19, x30, [sp], #16
   10ac8:	ret
   10acc:	nop
   10ad0:	adrp	x8, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10ad4:	mov	x9, x0
   10ad8:	stp	x19, x20, [sp, #-64]!
   10adc:	mov	x20, x5
   10ae0:	mov	x19, x7
   10ae4:	ldr	x0, [x8, #208]
   10ae8:	stp	x21, x22, [sp, #16]
   10aec:	mov	x22, x3
   10af0:	mov	x21, x4
   10af4:	stp	x23, x24, [sp, #32]
   10af8:	mov	x24, x1
   10afc:	mov	x23, x2
   10b00:	mov	x1, x9
   10b04:	stp	x25, x30, [sp, #48]
   10b08:	mov	x25, x6
   10b0c:	bl	276b0 <__sanitizer_set_death_callback@@Base+0x8a8>
   10b10:	cbz	x0, 10b68 <_ZdaPvmSt11align_val_t@@Base+0x6b8>
   10b14:	mov	x8, x0
   10b18:	ldr	x0, [x0, #144]
   10b1c:	ldr	x1, [x8, #192]
   10b20:	str	x0, [x24]
   10b24:	mov	w0, #0x1                   	// #1
   10b28:	ldr	x2, [x8, #152]
   10b2c:	str	x2, [x23]
   10b30:	ldp	x23, x24, [sp, #32]
   10b34:	ldr	x2, [x8, #176]
   10b38:	str	x2, [x22]
   10b3c:	ldr	x2, [x8, #184]
   10b40:	str	x2, [x21]
   10b44:	ldp	x21, x22, [sp, #16]
   10b48:	ldr	x2, [x8, #160]
   10b4c:	str	x2, [x20]
   10b50:	ldr	x2, [x8, #168]
   10b54:	str	x2, [x25]
   10b58:	str	x1, [x19]
   10b5c:	ldp	x25, x30, [sp, #48]
   10b60:	ldp	x19, x20, [sp], #64
   10b64:	ret
   10b68:	mov	w0, #0x0                   	// #0
   10b6c:	ldp	x21, x22, [sp, #16]
   10b70:	ldp	x23, x24, [sp, #32]
   10b74:	ldp	x25, x30, [sp, #48]
   10b78:	ldp	x19, x20, [sp], #64
   10b7c:	ret
   10b80:	ret
   10b84:	nop
   10b88:	adrp	x0, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10b8c:	ldr	x0, [x0, #208]
   10b90:	add	x0, x0, #0x18
   10b94:	b	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   10b98:	adrp	x0, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10b9c:	ldr	x0, [x0, #208]
   10ba0:	add	x0, x0, #0x18
   10ba4:	b	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   10ba8:	stp	x19, x30, [sp, #-16]!
   10bac:	adrp	x19, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10bb0:	add	x19, x19, #0x0
   10bb4:	ldr	x0, [x19, #208]
   10bb8:	add	x0, x0, #0x18
   10bbc:	bl	19e28 <__sanitizer_set_report_fd@@Base+0x2b78>
   10bc0:	ldr	x0, [x19, #208]
   10bc4:	ldp	x19, x30, [sp], #16
   10bc8:	ret
   10bcc:	nop
   10bd0:	ret
   10bd4:	nop
   10bd8:	ret
   10bdc:	nop
   10be0:	ret
   10be4:	nop
   10be8:	ret
   10bec:	nop
   10bf0:	ret
   10bf4:	nop

0000000000010bf8 <__sancov_default_options@@Base>:
   10bf8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   10bfc:	add	x0, x0, #0x5c8
   10c00:	ret
   10c04:	nop
   10c08:	mov	w1, #0x1                   	// #1
   10c0c:	strh	w1, [x0]
   10c10:	ret
   10c14:	nop
   10c18:	stp	x19, x20, [sp, #-80]!
   10c1c:	adrp	x0, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10c20:	mov	w1, #0x1                   	// #1
   10c24:	stp	x21, x22, [sp, #16]
   10c28:	adrp	x21, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10c2c:	add	x19, sp, #0x30
   10c30:	add	x22, x0, #0xd8
   10c34:	strh	w1, [x0, #216]
   10c38:	mov	x0, x19
   10c3c:	str	x30, [sp, #32]
   10c40:	bl	18850 <__sanitizer_set_report_fd@@Base+0x15a0>
   10c44:	adrp	x20, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   10c48:	ldr	x21, [x21, #3456]
   10c4c:	mov	x1, #0x10                  	// #16
   10c50:	add	x20, x20, #0xb80
   10c54:	mov	x0, x21
   10c58:	bl	10e80 <__sancov_default_options@@Base+0x288>
   10c5c:	mov	x2, x0
   10c60:	adrp	x3, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10c64:	add	x3, x3, #0xd08
   10c68:	mov	x0, x19
   10c6c:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10c70:	add	x1, x1, #0xd58
   10c74:	stp	x20, x22, [x2]
   10c78:	bl	187f8 <__sanitizer_set_report_fd@@Base+0x1548>
   10c7c:	mov	x1, #0x10                  	// #16
   10c80:	mov	x0, x21
   10c84:	bl	10e80 <__sancov_default_options@@Base+0x288>
   10c88:	mov	x2, x0
   10c8c:	add	x4, x22, #0x1
   10c90:	mov	x0, x19
   10c94:	adrp	x3, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10c98:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10c9c:	add	x3, x3, #0xd68
   10ca0:	add	x1, x1, #0xd80
   10ca4:	stp	x20, x4, [x2]
   10ca8:	bl	187f8 <__sanitizer_set_report_fd@@Base+0x1548>
   10cac:	bl	6d30 <__sancov_default_options@plt>
   10cb0:	mov	x1, x0
   10cb4:	mov	x0, x19
   10cb8:	bl	187c8 <__sanitizer_set_report_fd@@Base+0x1518>
   10cbc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10cc0:	add	x0, x0, #0xd88
   10cc4:	bl	19b20 <__sanitizer_set_report_fd@@Base+0x2870>
   10cc8:	mov	x1, x0
   10ccc:	mov	x0, x19
   10cd0:	bl	187c8 <__sanitizer_set_report_fd@@Base+0x1518>
   10cd4:	bl	18228 <__sanitizer_set_report_fd@@Base+0xf78>
   10cd8:	ldrb	w0, [x22, #1]
   10cdc:	cbnz	w0, 10cf0 <__sancov_default_options@@Base+0xf8>
   10ce0:	ldp	x21, x22, [sp, #16]
   10ce4:	ldr	x30, [sp, #32]
   10ce8:	ldp	x19, x20, [sp], #80
   10cec:	ret
   10cf0:	mov	x0, x19
   10cf4:	bl	18308 <__sanitizer_set_report_fd@@Base+0x1058>
   10cf8:	ldp	x21, x22, [sp, #16]
   10cfc:	ldr	x30, [sp, #32]
   10d00:	ldp	x19, x20, [sp], #80
   10d04:	ret
   10d08:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10d0c:	mov	x2, x0
   10d10:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10d14:	add	x0, x0, #0xd98
   10d18:	ldr	x1, [x1, #4008]
   10d1c:	adrp	x3, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10d20:	mov	w4, #0x1                   	// #1
   10d24:	str	x30, [sp, #-16]!
   10d28:	strb	w4, [x3, #256]
   10d2c:	ldr	x1, [x1]
   10d30:	bl	1e648 <OnPrint@@Base+0x398>
   10d34:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   10d38:	stp	x19, x20, [sp, #-48]!
   10d3c:	str	x30, [sp, #32]
   10d40:	adrp	x19, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10d44:	add	x0, x19, #0x100
   10d48:	ldrb	w1, [x0, #8]
   10d4c:	dmb	ish
   10d50:	and	w1, w1, #0xff
   10d54:	adrp	x20, f3000 <__asan_cplus_demangle_operators@@Base+0x93be0>
   10d58:	cbz	w1, 10d6c <__sancov_default_options@@Base+0x174>
   10d5c:	add	x0, x20, #0x980
   10d60:	ldr	x30, [sp, #32]
   10d64:	ldp	x19, x20, [sp], #48
   10d68:	ret
   10d6c:	add	x0, x0, #0x10
   10d70:	mov	w2, #0x1                   	// #1
   10d74:	ldxrb	w1, [x0]
   10d78:	stxrb	w3, w2, [x0]
   10d7c:	cbnz	w3, 10d74 <__sancov_default_options@@Base+0x17c>
   10d80:	dmb	ish
   10d84:	tst	w1, #0xff
   10d88:	b.eq	10d90 <__sancov_default_options@@Base+0x198>  // b.none
   10d8c:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   10d90:	add	x0, x19, #0x100
   10d94:	adrp	x20, f3000 <__asan_cplus_demangle_operators@@Base+0x93be0>
   10d98:	ldrb	w0, [x0, #8]
   10d9c:	tst	w0, #0xff
   10da0:	b.eq	10dc0 <__sancov_default_options@@Base+0x1c8>  // b.none
   10da4:	dmb	ish
   10da8:	add	x19, x19, #0x100
   10dac:	strb	wzr, [x19, #16]
   10db0:	add	x0, x20, #0x980
   10db4:	ldr	x30, [sp, #32]
   10db8:	ldp	x19, x20, [sp], #48
   10dbc:	ret
   10dc0:	stp	x21, x22, [sp, #16]
   10dc4:	add	x21, x20, #0x980
   10dc8:	mov	x0, x21
   10dcc:	add	x21, x21, #0x80, lsl #12
   10dd0:	mov	x2, #0x80000               	// #524288
   10dd4:	mov	w1, #0x0                   	// #0
   10dd8:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   10ddc:	mov	x2, #0xd80                 	// #3456
   10de0:	mov	w1, #0x0                   	// #0
   10de4:	strb	wzr, [x21]
   10de8:	adrp	x0, 173000 <__asan_cplus_demangle_operators@@Base+0x113be0>
   10dec:	adrp	x21, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10df0:	add	x0, x0, #0x9c0
   10df4:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   10df8:	mov	x2, #0x248                 	// #584
   10dfc:	adrp	x0, 174000 <__asan_cplus_demangle_operators@@Base+0x114be0>
   10e00:	movk	x2, #0x4, lsl #16
   10e04:	add	x0, x0, #0x740
   10e08:	mov	w1, #0x0                   	// #0
   10e0c:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   10e10:	ldr	x21, [x21, #4000]
   10e14:	ldr	x3, [x21]
   10e18:	cbz	x3, 10e70 <__sancov_default_options@@Base+0x278>
   10e1c:	add	x21, x20, #0x980
   10e20:	adrp	x4, 174000 <__asan_cplus_demangle_operators@@Base+0x114be0>
   10e24:	add	x5, x21, #0x80, lsl #12
   10e28:	add	x4, x4, #0x750
   10e2c:	add	x21, x21, #0xc0, lsl #12
   10e30:	adrp	x22, 1b4000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   10e34:	mov	x2, #0x28                  	// #40
   10e38:	add	x0, x22, #0x988
   10e3c:	str	x3, [x5, #3520]
   10e40:	add	x22, x22, #0x988
   10e44:	str	x4, [x5, #3528]
   10e48:	mov	w1, #0x0                   	// #0
   10e4c:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   10e50:	str	x22, [x21, #4104]
   10e54:	str	x22, [x21, #4112]
   10e58:	dmb	ish
   10e5c:	add	x0, x19, #0x100
   10e60:	mov	w1, #0x1                   	// #1
   10e64:	strb	w1, [x0, #8]
   10e68:	ldp	x21, x22, [sp, #16]
   10e6c:	b	10da4 <__sancov_default_options@@Base+0x1ac>
   10e70:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   10e74:	mov	x3, x0
   10e78:	str	x0, [x21]
   10e7c:	b	10e1c <__sancov_default_options@@Base+0x224>
   10e80:	adrp	x2, 60000 <_Unwind_Backtrace@GCC_3.3>
   10e84:	stp	x19, x20, [sp, #-32]!
   10e88:	mov	x20, x0
   10e8c:	ldr	x0, [x2, #944]
   10e90:	str	x30, [sp, #24]
   10e94:	sub	x19, x0, #0x1
   10e98:	tst	x0, x19
   10e9c:	b.ne	10f44 <__sancov_default_options@@Base+0x34c>  // b.any
   10ea0:	ldp	x3, x2, [x20]
   10ea4:	add	x1, x1, x19
   10ea8:	neg	x19, x0
   10eac:	and	x19, x1, x19
   10eb0:	sub	x0, x3, x2
   10eb4:	cmp	x0, x19
   10eb8:	b.ge	10f20 <__sancov_default_options@@Base+0x328>  // b.tcont
   10ebc:	str	x21, [sp, #16]
   10ec0:	adrp	x21, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10ec4:	ldr	x21, [x21, #4000]
   10ec8:	ldr	x0, [x21]
   10ecc:	cbz	x0, 10f38 <__sancov_default_options@@Base+0x340>
   10ed0:	cmp	x19, x0
   10ed4:	mov	w2, #0x0                   	// #0
   10ed8:	csel	x21, x19, x0, cs  // cs = hs, nlast
   10edc:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10ee0:	mov	x0, x21
   10ee4:	add	x1, x1, #0xde8
   10ee8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   10eec:	add	x1, x0, x21
   10ef0:	adrp	x3, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10ef4:	stp	x1, x0, [x20]
   10ef8:	mov	x2, x0
   10efc:	ldr	x3, [x3, #280]
   10f00:	cbz	x3, 10f10 <__sancov_default_options@@Base+0x318>
   10f04:	mov	x1, x21
   10f08:	blr	x3
   10f0c:	ldp	x1, x2, [x20]
   10f10:	sub	x1, x1, x2
   10f14:	cmp	x19, x1
   10f18:	b.gt	10f58 <__sancov_default_options@@Base+0x360>
   10f1c:	ldr	x21, [sp, #16]
   10f20:	add	x19, x2, x19
   10f24:	ldr	x30, [sp, #24]
   10f28:	str	x19, [x20, #8]
   10f2c:	mov	x0, x2
   10f30:	ldp	x19, x20, [sp], #32
   10f34:	ret
   10f38:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   10f3c:	str	x0, [x21]
   10f40:	b	10ed0 <__sancov_default_options@@Base+0x2d8>
   10f44:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   10f48:	add	x0, x0, #0x240
   10f4c:	str	x21, [sp, #16]
   10f50:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   10f54:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   10f58:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10f5c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10f60:	add	x2, x2, #0xdf8
   10f64:	add	x0, x0, #0xe38
   10f68:	mov	x4, #0x0                   	// #0
   10f6c:	mov	x3, #0x0                   	// #0
   10f70:	mov	w1, #0xd4                  	// #212
   10f74:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   10f78:	sub	x1, x0, #0x1
   10f7c:	tst	x1, x0
   10f80:	b.ne	10f9c <__sancov_default_options@@Base+0x3a4>  // b.any
   10f84:	adrp	x2, 60000 <_Unwind_Backtrace@GCC_3.3>
   10f88:	ldr	x1, [x2, #944]
   10f8c:	cmp	x1, x0
   10f90:	csel	x0, x1, x0, cs  // cs = hs, nlast
   10f94:	str	x0, [x2, #944]
   10f98:	ret
   10f9c:	str	x30, [sp, #-16]!
   10fa0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10fa4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   10fa8:	add	x2, x2, #0x828
   10fac:	add	x0, x0, #0xe38
   10fb0:	mov	x4, #0x0                   	// #0
   10fb4:	mov	x3, #0x0                   	// #0
   10fb8:	mov	w1, #0xdb                  	// #219
   10fbc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   10fc0:	adrp	x1, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10fc4:	str	x0, [x1, #280]
   10fc8:	ret
   10fcc:	nop
   10fd0:	adrp	x0, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10fd4:	ldrb	w0, [x0, #256]
   10fd8:	tst	w0, #0xff
   10fdc:	cset	w0, ne  // ne = any
   10fe0:	ret
   10fe4:	nop
   10fe8:	adrp	x0, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10fec:	mov	w1, #0x1                   	// #1
   10ff0:	strb	w1, [x0, #256]
   10ff4:	ret
   10ff8:	adrp	x0, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10ffc:	add	x0, x0, #0x100
   11000:	ldrb	w0, [x0, #32]
   11004:	tst	w0, #0xff
   11008:	cset	w0, ne  // ne = any
   1100c:	ret
   11010:	adrp	x1, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   11014:	add	x1, x1, #0x100
   11018:	and	w0, w0, #0xff
   1101c:	strb	w0, [x1, #32]
   11020:	ret
   11024:	nop
   11028:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1102c:	add	x0, x0, #0xe80
   11030:	b	1e648 <OnPrint@@Base+0x398>
   11034:	nop
   11038:	cmn	x0, #0x9
   1103c:	b.hi	110ec <__sancov_default_options@@Base+0x4f4>  // b.pmore
   11040:	stp	x19, x20, [sp, #-32]!
   11044:	cmp	x2, #0x0
   11048:	add	x20, x0, #0x8
   1104c:	stp	x21, x30, [sp, #16]
   11050:	mov	x0, #0x8                   	// #8
   11054:	mov	x21, x1
   11058:	csel	x19, x2, x0, ne  // ne = any
   1105c:	cbz	x1, 11098 <__sancov_default_options@@Base+0x4a0>
   11060:	bl	10d38 <__sancov_default_options@@Base+0x140>
   11064:	mov	x3, x19
   11068:	mov	x2, x20
   1106c:	mov	x1, x21
   11070:	bl	123c0 <__sancov_default_options@@Base+0x17c8>
   11074:	cbz	x0, 110f4 <__sancov_default_options@@Base+0x4fc>
   11078:	mov	x1, #0xc041                	// #49217
   1107c:	movk	x1, #0xbceb, lsl #16
   11080:	movk	x1, #0xb03a, lsl #32
   11084:	movk	x1, #0x6a6c, lsl #48
   11088:	str	x1, [x0], #8
   1108c:	ldp	x21, x30, [sp, #16]
   11090:	ldp	x19, x20, [sp], #32
   11094:	ret
   11098:	adrp	x21, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   1109c:	add	x0, x21, #0x100
   110a0:	add	x0, x0, #0x28
   110a4:	mov	w2, #0x1                   	// #1
   110a8:	ldxrb	w1, [x0]
   110ac:	stxrb	w3, w2, [x0]
   110b0:	cbnz	w3, 110a8 <__sancov_default_options@@Base+0x4b0>
   110b4:	dmb	ish
   110b8:	tst	w1, #0xff
   110bc:	b.eq	110c4 <__sancov_default_options@@Base+0x4cc>  // b.none
   110c0:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   110c4:	bl	10d38 <__sancov_default_options@@Base+0x140>
   110c8:	mov	x3, x19
   110cc:	mov	x2, x20
   110d0:	adrp	x1, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   110d4:	add	x1, x1, #0x130
   110d8:	bl	123c0 <__sancov_default_options@@Base+0x17c8>
   110dc:	dmb	ish
   110e0:	add	x21, x21, #0x100
   110e4:	strb	wzr, [x21, #40]
   110e8:	b	11074 <__sancov_default_options@@Base+0x47c>
   110ec:	mov	x0, #0x0                   	// #0
   110f0:	ret
   110f4:	mov	x0, x20
   110f8:	bl	10d08 <__sancov_default_options@@Base+0x110>
   110fc:	nop
   11100:	stp	x19, x20, [sp, #-32]!
   11104:	mov	x19, x1
   11108:	mov	x1, x2
   1110c:	str	x30, [sp, #16]
   11110:	cbz	x0, 1111c <__sancov_default_options@@Base+0x524>
   11114:	umulh	x2, x19, x0
   11118:	cbnz	x2, 11150 <__sancov_default_options@@Base+0x558>
   1111c:	mul	x19, x0, x19
   11120:	mov	x2, #0x0                   	// #0
   11124:	mov	x0, x19
   11128:	bl	11038 <__sancov_default_options@@Base+0x440>
   1112c:	mov	x20, x0
   11130:	cbz	x0, 11140 <__sancov_default_options@@Base+0x548>
   11134:	mov	x2, x19
   11138:	mov	w1, #0x0                   	// #0
   1113c:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   11140:	mov	x0, x20
   11144:	ldr	x30, [sp, #16]
   11148:	ldp	x19, x20, [sp], #32
   1114c:	ret
   11150:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11154:	mov	x2, x0
   11158:	mov	x3, x19
   1115c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11160:	ldr	x1, [x1, #4008]
   11164:	add	x0, x0, #0xed8
   11168:	ldr	x1, [x1]
   1116c:	bl	1e648 <OnPrint@@Base+0x398>
   11170:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   11174:	nop
   11178:	stp	x19, x20, [sp, #-32]!
   1117c:	mov	x20, x1
   11180:	stp	x21, x30, [sp, #16]
   11184:	mov	x21, x2
   11188:	cbz	x0, 11248 <__sancov_default_options@@Base+0x650>
   1118c:	cmn	x1, #0x9
   11190:	b.hi	11260 <__sancov_default_options@@Base+0x668>  // b.pmore
   11194:	mov	x3, #0xc041                	// #49217
   11198:	add	x20, x1, #0x8
   1119c:	ldur	x4, [x0, #-8]
   111a0:	movk	x3, #0xbceb, lsl #16
   111a4:	movk	x3, #0xb03a, lsl #32
   111a8:	sub	x19, x0, #0x8
   111ac:	movk	x3, #0x6a6c, lsl #48
   111b0:	cmp	x4, x3
   111b4:	b.ne	11270 <__sancov_default_options@@Base+0x678>  // b.any
   111b8:	cbz	x2, 111ec <__sancov_default_options@@Base+0x5f4>
   111bc:	bl	10d38 <__sancov_default_options@@Base+0x140>
   111c0:	mov	x1, x21
   111c4:	mov	x2, x19
   111c8:	mov	x3, x20
   111cc:	mov	x4, #0x8                   	// #8
   111d0:	bl	129c0 <__sancov_default_options@@Base+0x1dc8>
   111d4:	mov	x1, x0
   111d8:	add	x0, x1, #0x8
   111dc:	cbz	x1, 11288 <__sancov_default_options@@Base+0x690>
   111e0:	ldp	x21, x30, [sp, #16]
   111e4:	ldp	x19, x20, [sp], #32
   111e8:	ret
   111ec:	adrp	x21, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   111f0:	add	x0, x21, #0x100
   111f4:	add	x0, x0, #0x28
   111f8:	mov	w2, #0x1                   	// #1
   111fc:	ldxrb	w1, [x0]
   11200:	stxrb	w3, w2, [x0]
   11204:	cbnz	w3, 111fc <__sancov_default_options@@Base+0x604>
   11208:	dmb	ish
   1120c:	tst	w1, #0xff
   11210:	b.eq	11218 <__sancov_default_options@@Base+0x620>  // b.none
   11214:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   11218:	bl	10d38 <__sancov_default_options@@Base+0x140>
   1121c:	adrp	x1, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   11220:	add	x1, x1, #0x130
   11224:	mov	x2, x19
   11228:	mov	x3, x20
   1122c:	mov	x4, #0x8                   	// #8
   11230:	bl	129c0 <__sancov_default_options@@Base+0x1dc8>
   11234:	dmb	ish
   11238:	mov	x1, x0
   1123c:	add	x21, x21, #0x100
   11240:	strb	wzr, [x21, #40]
   11244:	b	111d8 <__sancov_default_options@@Base+0x5e0>
   11248:	mov	x0, x20
   1124c:	mov	x1, x2
   11250:	ldp	x21, x30, [sp, #16]
   11254:	mov	x2, #0x0                   	// #0
   11258:	ldp	x19, x20, [sp], #32
   1125c:	b	11038 <__sancov_default_options@@Base+0x440>
   11260:	mov	x0, #0x0                   	// #0
   11264:	ldp	x21, x30, [sp, #16]
   11268:	ldp	x19, x20, [sp], #32
   1126c:	ret
   11270:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11274:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11278:	add	x2, x2, #0xf40
   1127c:	add	x0, x0, #0xe38
   11280:	mov	w1, #0xa5                  	// #165
   11284:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11288:	mov	x0, x20
   1128c:	bl	10d08 <__sancov_default_options@@Base+0x110>
   11290:	cbz	x0, 1160c <__sancov_default_options@@Base+0xa14>
   11294:	stp	x19, x20, [sp, #-48]!
   11298:	mov	x3, #0xc041                	// #49217
   1129c:	movk	x3, #0xbceb, lsl #16
   112a0:	ldur	x4, [x0, #-8]
   112a4:	stp	x21, x22, [sp, #16]
   112a8:	movk	x3, #0xb03a, lsl #32
   112ac:	str	x30, [sp, #40]
   112b0:	movk	x3, #0x6a6c, lsl #48
   112b4:	sub	x21, x0, #0x8
   112b8:	cmp	x4, x3
   112bc:	b.ne	115f0 <__sancov_default_options@@Base+0x9f8>  // b.any
   112c0:	stur	xzr, [x0, #-8]
   112c4:	mov	x19, x1
   112c8:	cbz	x1, 11434 <__sancov_default_options@@Base+0x83c>
   112cc:	bl	10d38 <__sancov_default_options@@Base+0x140>
   112d0:	mov	x1, #0xffffffffffff        	// #281474976710655
   112d4:	cmp	x21, x1
   112d8:	b.ls	113ac <__sancov_default_options@@Base+0x7b4>  // b.plast
   112dc:	add	x19, x0, #0x80, lsl #12
   112e0:	add	x19, x19, #0xc00
   112e4:	ldr	x20, [x19, #448]
   112e8:	sub	x1, x20, #0x1
   112ec:	tst	x21, x1
   112f0:	b.ne	11610 <__sancov_default_options@@Base+0xa18>  // b.any
   112f4:	sub	x20, x21, x20
   112f8:	add	x21, x0, #0xc1, lsl #12
   112fc:	mov	w1, #0x1                   	// #1
   11300:	ldxrb	w0, [x21]
   11304:	stxrb	w2, w1, [x21]
   11308:	cbnz	w2, 11300 <__sancov_default_options@@Base+0x708>
   1130c:	dmb	ish
   11310:	tst	w0, #0xff
   11314:	b.eq	11320 <__sancov_default_options@@Base+0x728>  // b.none
   11318:	mov	x0, x21
   1131c:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   11320:	ldr	x0, [x20, #24]
   11324:	add	x1, x19, #0x1c0
   11328:	ldr	x5, [x1, #8]
   1132c:	ldr	x3, [x5, x0, lsl #3]
   11330:	cmp	x3, x20
   11334:	b.ne	11634 <__sancov_default_options@@Base+0xa3c>  // b.any
   11338:	add	x1, x1, #0x40, lsl #12
   1133c:	ldr	x4, [x1, #16]
   11340:	cmp	x0, x4
   11344:	b.cs	11654 <__sancov_default_options@@Base+0xa5c>  // b.hs, b.nlast
   11348:	sub	x4, x4, #0x1
   1134c:	add	x2, x21, #0x8
   11350:	ldr	x3, [x20, #8]
   11354:	ldr	x6, [x5, x4, lsl #3]
   11358:	str	x4, [x1, #16]
   1135c:	str	x6, [x5, x0, lsl #3]
   11360:	ldp	x5, x4, [x1, #40]
   11364:	str	x0, [x6, #24]
   11368:	ldr	x0, [x2, #16]
   1136c:	strb	wzr, [x1, #24]
   11370:	sub	x0, x0, x3
   11374:	sub	x4, x4, x3
   11378:	add	x5, x5, #0x1
   1137c:	stp	x5, x4, [x1, #40]
   11380:	str	x0, [x2, #16]
   11384:	ldr	x0, [x2, #24]
   11388:	sub	x0, x0, x3
   1138c:	str	x0, [x2, #24]
   11390:	dmb	ish
   11394:	strb	wzr, [x21]
   11398:	ldp	x0, x1, [x20]
   1139c:	ldp	x21, x22, [sp, #16]
   113a0:	ldr	x30, [sp, #40]
   113a4:	ldp	x19, x20, [sp], #48
   113a8:	b	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   113ac:	lsr	x2, x21, #32
   113b0:	ldr	x1, [x0, x2, lsl #3]
   113b4:	dmb	ish
   113b8:	cbz	x1, 112dc <__sancov_default_options@@Base+0x6e4>
   113bc:	lsr	w3, w21, #20
   113c0:	ldrb	w1, [x1, x3]
   113c4:	cbz	w1, 112dc <__sancov_default_options@@Base+0x6e4>
   113c8:	ldr	x1, [x0, x2, lsl #3]
   113cc:	dmb	ish
   113d0:	cbz	x1, 11674 <__sancov_default_options@@Base+0xa7c>
   113d4:	ldrb	w20, [x1, x3]
   113d8:	cbz	x20, 11674 <__sancov_default_options@@Base+0xa7c>
   113dc:	cmp	x20, #0x35
   113e0:	b.hi	116fc <__sancov_default_options@@Base+0xb04>  // b.pmore
   113e4:	lsl	x22, x20, #10
   113e8:	add	x1, x19, x22
   113ec:	ldr	x3, [x1, #8]
   113f0:	cbz	x3, 11738 <__sancov_default_options@@Base+0xb40>
   113f4:	ldr	x2, [x19, x22]
   113f8:	cmp	x2, x3
   113fc:	b.eq	11720 <__sancov_default_options@@Base+0xb28>  // b.none
   11400:	add	x20, x2, x20, lsl #7
   11404:	mov	x0, #0xd800                	// #55296
   11408:	add	x20, x20, #0x4
   1140c:	add	x2, x2, #0x1
   11410:	add	x1, x19, x0
   11414:	add	x3, x19, x22
   11418:	str	x2, [x19, x22]
   1141c:	str	x21, [x19, x20, lsl #3]
   11420:	ldr	x0, [x1, #16]
   11424:	ldr	x2, [x3, #16]
   11428:	sub	x0, x0, x2
   1142c:	str	x0, [x1, #16]
   11430:	b	115e0 <__sancov_default_options@@Base+0x9e8>
   11434:	adrp	x22, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   11438:	add	x0, x22, #0x100
   1143c:	add	x0, x0, #0x28
   11440:	mov	w2, #0x1                   	// #1
   11444:	ldxrb	w1, [x0]
   11448:	stxrb	w3, w2, [x0]
   1144c:	cbnz	w3, 11444 <__sancov_default_options@@Base+0x84c>
   11450:	dmb	ish
   11454:	tst	w1, #0xff
   11458:	b.eq	11460 <__sancov_default_options@@Base+0x868>  // b.none
   1145c:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   11460:	bl	10d38 <__sancov_default_options@@Base+0x140>
   11464:	mov	x1, #0xffffffffffff        	// #281474976710655
   11468:	cmp	x21, x1
   1146c:	b.hi	11514 <__sancov_default_options@@Base+0x91c>  // b.pmore
   11470:	lsr	x2, x21, #32
   11474:	ldr	x1, [x0, x2, lsl #3]
   11478:	dmb	ish
   1147c:	cbz	x1, 11514 <__sancov_default_options@@Base+0x91c>
   11480:	lsr	w3, w21, #20
   11484:	ldrb	w1, [x1, x3]
   11488:	cbz	w1, 11514 <__sancov_default_options@@Base+0x91c>
   1148c:	str	x23, [sp, #32]
   11490:	ldr	x1, [x0, x2, lsl #3]
   11494:	dmb	ish
   11498:	cbz	x1, 11678 <__sancov_default_options@@Base+0xa80>
   1149c:	ldrb	w23, [x1, x3]
   114a0:	cbz	x23, 11678 <__sancov_default_options@@Base+0xa80>
   114a4:	cmp	x23, #0x35
   114a8:	b.hi	11814 <__sancov_default_options@@Base+0xc1c>  // b.pmore
   114ac:	lsl	x20, x23, #10
   114b0:	adrp	x19, e6000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   114b4:	add	x7, x19, #0x130
   114b8:	add	x1, x7, x20
   114bc:	ldr	x2, [x1, #8]
   114c0:	cbz	x2, 11848 <__sancov_default_options@@Base+0xc50>
   114c4:	add	x4, x19, #0x130
   114c8:	add	x1, x4, x20
   114cc:	ldr	x5, [x4, x20]
   114d0:	cmp	x5, x2
   114d4:	b.eq	11834 <__sancov_default_options@@Base+0xc3c>  // b.none
   114d8:	add	x19, x19, #0x130
   114dc:	add	x1, x19, x20
   114e0:	add	x2, x19, #0x8, lsl #12
   114e4:	ldr	x0, [x19, x20]
   114e8:	ldr	x4, [x1, #16]
   114ec:	add	x1, x0, #0x1
   114f0:	add	x0, x0, x23, lsl #7
   114f4:	str	x1, [x19, x20]
   114f8:	add	x0, x0, #0x4
   114fc:	ldr	x1, [x2, #22544]
   11500:	str	x21, [x19, x0, lsl #3]
   11504:	sub	x0, x1, x4
   11508:	ldr	x23, [sp, #32]
   1150c:	str	x0, [x2, #22544]
   11510:	b	115d4 <__sancov_default_options@@Base+0x9dc>
   11514:	add	x19, x0, #0x80, lsl #12
   11518:	add	x19, x19, #0xc00
   1151c:	ldr	x20, [x19, #448]
   11520:	sub	x1, x20, #0x1
   11524:	tst	x21, x1
   11528:	b.ne	11698 <__sancov_default_options@@Base+0xaa0>  // b.any
   1152c:	sub	x20, x21, x20
   11530:	add	x21, x0, #0xc1, lsl #12
   11534:	mov	w1, #0x1                   	// #1
   11538:	ldxrb	w0, [x21]
   1153c:	stxrb	w2, w1, [x21]
   11540:	cbnz	w2, 11538 <__sancov_default_options@@Base+0x940>
   11544:	dmb	ish
   11548:	tst	w0, #0xff
   1154c:	b.eq	11558 <__sancov_default_options@@Base+0x960>  // b.none
   11550:	mov	x0, x21
   11554:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   11558:	ldr	x0, [x20, #24]
   1155c:	add	x1, x19, #0x1c0
   11560:	ldr	x5, [x1, #8]
   11564:	ldr	x3, [x5, x0, lsl #3]
   11568:	cmp	x3, x20
   1156c:	b.ne	116bc <__sancov_default_options@@Base+0xac4>  // b.any
   11570:	add	x1, x1, #0x40, lsl #12
   11574:	ldr	x4, [x1, #16]
   11578:	cmp	x0, x4
   1157c:	b.cs	116dc <__sancov_default_options@@Base+0xae4>  // b.hs, b.nlast
   11580:	sub	x4, x4, #0x1
   11584:	ldr	x3, [x20, #8]
   11588:	ldr	x6, [x5, x4, lsl #3]
   1158c:	str	x4, [x1, #16]
   11590:	str	x6, [x5, x0, lsl #3]
   11594:	ldp	x5, x4, [x1, #40]
   11598:	str	x0, [x6, #24]
   1159c:	ldr	x0, [x21, #24]
   115a0:	strb	wzr, [x1, #24]
   115a4:	sub	x0, x0, x3
   115a8:	sub	x4, x4, x3
   115ac:	add	x5, x5, #0x1
   115b0:	stp	x5, x4, [x1, #40]
   115b4:	str	x0, [x21, #24]
   115b8:	ldr	x0, [x21, #32]
   115bc:	sub	x0, x0, x3
   115c0:	str	x0, [x21, #32]
   115c4:	dmb	ish
   115c8:	strb	wzr, [x21]
   115cc:	ldp	x0, x1, [x20]
   115d0:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   115d4:	dmb	ish
   115d8:	add	x22, x22, #0x100
   115dc:	strb	wzr, [x22, #40]
   115e0:	ldp	x21, x22, [sp, #16]
   115e4:	ldr	x30, [sp, #40]
   115e8:	ldp	x19, x20, [sp], #48
   115ec:	ret
   115f0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   115f4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   115f8:	add	x2, x2, #0xf40
   115fc:	add	x0, x0, #0xe38
   11600:	mov	w1, #0xbd                  	// #189
   11604:	str	x23, [sp, #32]
   11608:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1160c:	ret
   11610:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11614:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11618:	add	x2, x2, #0x5a0
   1161c:	add	x0, x0, #0x300
   11620:	mov	x4, #0x0                   	// #0
   11624:	mov	x3, #0x0                   	// #0
   11628:	mov	w1, #0x123                 	// #291
   1162c:	str	x23, [sp, #32]
   11630:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11634:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11638:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1163c:	mov	x4, x20
   11640:	add	x2, x2, #0x5c8
   11644:	add	x0, x0, #0x300
   11648:	mov	w1, #0x88                  	// #136
   1164c:	str	x23, [sp, #32]
   11650:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11654:	mov	x3, x0
   11658:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1165c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11660:	add	x2, x2, #0x5e8
   11664:	add	x0, x0, #0x300
   11668:	mov	w1, #0x89                  	// #137
   1166c:	str	x23, [sp, #32]
   11670:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11674:	str	x23, [sp, #32]
   11678:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1167c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11680:	add	x2, x2, #0x810
   11684:	add	x0, x0, #0x708
   11688:	mov	x4, #0x0                   	// #0
   1168c:	mov	x3, #0x0                   	// #0
   11690:	mov	w1, #0xae                  	// #174
   11694:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11698:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1169c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   116a0:	add	x2, x2, #0x5a0
   116a4:	add	x0, x0, #0x300
   116a8:	mov	x4, #0x0                   	// #0
   116ac:	mov	x3, #0x0                   	// #0
   116b0:	mov	w1, #0x123                 	// #291
   116b4:	str	x23, [sp, #32]
   116b8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   116bc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   116c0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   116c4:	mov	x4, x20
   116c8:	add	x2, x2, #0x5c8
   116cc:	add	x0, x0, #0x300
   116d0:	mov	w1, #0x88                  	// #136
   116d4:	str	x23, [sp, #32]
   116d8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   116dc:	mov	x3, x0
   116e0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   116e4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   116e8:	add	x2, x2, #0x5e8
   116ec:	add	x0, x0, #0x300
   116f0:	mov	w1, #0x89                  	// #137
   116f4:	str	x23, [sp, #32]
   116f8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   116fc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11700:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11704:	mov	x3, x20
   11708:	add	x2, x2, #0x6e8
   1170c:	add	x0, x0, #0x708
   11710:	mov	x4, #0x36                  	// #54
   11714:	mov	w1, #0xaf                  	// #175
   11718:	str	x23, [sp, #32]
   1171c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11720:	mov	x2, x0
   11724:	mov	x3, x20
   11728:	mov	x0, x19
   1172c:	bl	12858 <__sancov_default_options@@Base+0x1c60>
   11730:	ldr	x2, [x19, x22]
   11734:	b	11400 <__sancov_default_options@@Base+0x808>
   11738:	mov	x4, #0x1                   	// #1
   1173c:	mov	x12, x4
   11740:	mov	x13, #0x7c                  	// #124
   11744:	mov	x11, #0x14                  	// #20
   11748:	mov	x10, #0x100                 	// #256
   1174c:	mov	w9, #0x4000                	// #16384
   11750:	mov	x8, #0x3e                  	// #62
   11754:	nop
   11758:	add	x3, x19, x4, lsl #10
   1175c:	lsl	x6, x4, #4
   11760:	mov	x5, x3
   11764:	mov	x2, #0x14                  	// #20
   11768:	mov	x7, x4
   1176c:	add	x4, x4, #0x1
   11770:	stp	x13, x6, [x3, #8]
   11774:	cmp	x4, #0x36
   11778:	str	x2, [x5, #24]
   1177c:	b.eq	117ec <__sancov_default_options@@Base+0xbf4>  // b.none
   11780:	cmp	x4, #0x35
   11784:	b.eq	117f4 <__sancov_default_options@@Base+0xbfc>  // b.none
   11788:	cmp	x4, #0x10
   1178c:	b.ls	11758 <__sancov_default_options@@Base+0xb60>  // b.plast
   11790:	sub	x2, x7, #0xf
   11794:	add	x5, x5, #0x400
   11798:	and	x3, x2, #0x3
   1179c:	mov	x7, x4
   117a0:	lsr	x2, x2, #2
   117a4:	add	x4, x4, #0x1
   117a8:	lsl	x2, x10, x2
   117ac:	lsr	x6, x2, #2
   117b0:	madd	x6, x6, x3, x2
   117b4:	str	x6, [x5, #16]
   117b8:	udiv	w2, w9, w6
   117bc:	cmp	x2, #0x0
   117c0:	csel	x2, x2, x12, ne  // ne = any
   117c4:	cmp	x2, #0x3e
   117c8:	csel	x2, x2, x8, ls  // ls = plast
   117cc:	add	x3, x2, #0x2
   117d0:	lsl	x2, x2, #1
   117d4:	str	x2, [x5, #8]
   117d8:	cmp	x6, x3, lsl #3
   117dc:	csel	x2, x11, xzr, cc  // cc = lo, ul, last
   117e0:	str	x2, [x5, #24]
   117e4:	cmp	x4, #0x36
   117e8:	b.ne	11780 <__sancov_default_options@@Base+0xb88>  // b.any
   117ec:	ldr	x3, [x1, #8]
   117f0:	b	113f4 <__sancov_default_options@@Base+0x7fc>
   117f4:	add	x2, x19, #0x8, lsl #12
   117f8:	mov	x3, #0x200                 	// #512
   117fc:	mov	x4, #0x40                  	// #64
   11800:	str	x4, [x2, #21512]
   11804:	str	x3, [x2, #21520]
   11808:	str	xzr, [x2, #21528]
   1180c:	ldr	x3, [x1, #8]
   11810:	b	113f4 <__sancov_default_options@@Base+0x7fc>
   11814:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11818:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1181c:	mov	x3, x23
   11820:	add	x2, x2, #0x6e8
   11824:	add	x0, x0, #0x708
   11828:	mov	x4, #0x36                  	// #54
   1182c:	mov	w1, #0xaf                  	// #175
   11830:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11834:	mov	x2, x0
   11838:	mov	x3, x23
   1183c:	mov	x0, x4
   11840:	bl	12858 <__sancov_default_options@@Base+0x1c60>
   11844:	b	114d8 <__sancov_default_options@@Base+0x8e0>
   11848:	mov	x2, #0x1                   	// #1
   1184c:	mov	x12, x2
   11850:	mov	x13, #0x7c                  	// #124
   11854:	mov	x11, #0x14                  	// #20
   11858:	mov	x10, #0x100                 	// #256
   1185c:	mov	w9, #0x4000                	// #16384
   11860:	mov	x8, #0x3e                  	// #62
   11864:	nop
   11868:	lsl	x1, x2, #10
   1186c:	lsl	x5, x2, #4
   11870:	add	x14, x7, x1
   11874:	add	x1, x1, #0x18
   11878:	add	x4, x1, x7
   1187c:	mov	x1, #0x14                  	// #20
   11880:	mov	x6, x2
   11884:	add	x2, x2, #0x1
   11888:	stp	x13, x5, [x14, #8]
   1188c:	cmp	x2, #0x36
   11890:	str	x1, [x4]
   11894:	b.eq	11904 <__sancov_default_options@@Base+0xd0c>  // b.none
   11898:	cmp	x2, #0x35
   1189c:	b.eq	11914 <__sancov_default_options@@Base+0xd1c>  // b.none
   118a0:	cmp	x2, #0x10
   118a4:	b.ls	11868 <__sancov_default_options@@Base+0xc70>  // b.plast
   118a8:	sub	x1, x6, #0xf
   118ac:	add	x4, x4, #0x400
   118b0:	and	x14, x1, #0x3
   118b4:	mov	x6, x2
   118b8:	lsr	x1, x1, #2
   118bc:	add	x2, x2, #0x1
   118c0:	lsl	x1, x10, x1
   118c4:	lsr	x5, x1, #2
   118c8:	madd	x5, x5, x14, x1
   118cc:	stur	x5, [x4, #-8]
   118d0:	udiv	w1, w9, w5
   118d4:	cmp	x1, #0x0
   118d8:	csel	x1, x1, x12, ne  // ne = any
   118dc:	cmp	x1, #0x3e
   118e0:	csel	x1, x1, x8, ls  // ls = plast
   118e4:	add	x14, x1, #0x2
   118e8:	lsl	x1, x1, #1
   118ec:	stur	x1, [x4, #-16]
   118f0:	cmp	x5, x14, lsl #3
   118f4:	csel	x1, x11, xzr, cc  // cc = lo, ul, last
   118f8:	str	x1, [x4]
   118fc:	cmp	x2, #0x36
   11900:	b.ne	11898 <__sancov_default_options@@Base+0xca0>  // b.any
   11904:	add	x1, x19, #0x130
   11908:	add	x1, x1, x20
   1190c:	ldr	x2, [x1, #8]
   11910:	b	114c4 <__sancov_default_options@@Base+0x8cc>
   11914:	add	x1, x19, #0x130
   11918:	mov	x5, #0x40                  	// #64
   1191c:	add	x2, x1, #0x8, lsl #12
   11920:	add	x1, x1, x20
   11924:	mov	x4, #0x200                 	// #512
   11928:	str	x5, [x2, #21512]
   1192c:	str	x4, [x2, #21520]
   11930:	str	xzr, [x2, #21528]
   11934:	ldr	x2, [x1, #8]
   11938:	b	114c4 <__sancov_default_options@@Base+0x8cc>
   1193c:	nop
   11940:	stp	x19, x20, [sp, #-48]!
   11944:	stp	x21, x22, [sp, #16]
   11948:	mov	x21, x0
   1194c:	ldr	x0, [x2, #8]
   11950:	stp	x23, x30, [sp, #32]
   11954:	cbz	x0, 119fc <__sancov_default_options@@Base+0xe04>
   11958:	mov	x0, #0x2001                	// #8193
   1195c:	add	x22, x1, x0
   11960:	mov	x20, x2
   11964:	mov	x19, x1
   11968:	add	x23, x21, x22, lsl #6
   1196c:	mov	w1, #0x1                   	// #1
   11970:	ldxrb	w0, [x23]
   11974:	stxrb	w2, w1, [x23]
   11978:	cbnz	w2, 11970 <__sancov_default_options@@Base+0xd78>
   1197c:	dmb	ish
   11980:	tst	w0, #0xff
   11984:	b.eq	11990 <__sancov_default_options@@Base+0xd98>  // b.none
   11988:	mov	x0, x23
   1198c:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   11990:	ldr	x0, [x23, #8]
   11994:	add	x19, x21, x19, lsl #6
   11998:	cbz	x0, 119cc <__sancov_default_options@@Base+0xdd4>
   1199c:	add	x19, x19, #0x80, lsl #12
   119a0:	add	x0, x0, #0x1
   119a4:	ldr	x1, [x19, #80]
   119a8:	str	x1, [x20]
   119ac:	stp	x0, x20, [x19, #72]
   119b0:	dmb	ish
   119b4:	lsl	x22, x22, #6
   119b8:	strb	wzr, [x21, x22]
   119bc:	ldp	x21, x22, [sp, #16]
   119c0:	ldp	x23, x30, [sp, #32]
   119c4:	ldp	x19, x20, [sp], #48
   119c8:	ret
   119cc:	add	x19, x19, #0x80, lsl #12
   119d0:	str	xzr, [x20]
   119d4:	mov	x0, #0x1                   	// #1
   119d8:	stp	x0, x20, [x19, #72]
   119dc:	str	x20, [x19, #88]
   119e0:	dmb	ish
   119e4:	lsl	x22, x22, #6
   119e8:	strb	wzr, [x21, x22]
   119ec:	ldp	x21, x22, [sp, #16]
   119f0:	ldp	x23, x30, [sp, #32]
   119f4:	ldp	x19, x20, [sp], #48
   119f8:	ret
   119fc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11a00:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11a04:	add	x2, x2, #0x600
   11a08:	add	x0, x0, #0x258
   11a0c:	mov	x4, #0x0                   	// #0
   11a10:	mov	x3, #0x0                   	// #0
   11a14:	mov	w1, #0xad                  	// #173
   11a18:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11a1c:	nop
   11a20:	sub	sp, sp, #0x210
   11a24:	adrp	x5, 60000 <_Unwind_Backtrace@GCC_3.3>
   11a28:	stp	x25, x26, [sp, #48]
   11a2c:	mov	x26, x2
   11a30:	mov	x25, x3
   11a34:	ldr	x2, [x5, #952]
   11a38:	stp	x19, x20, [sp]
   11a3c:	mov	x19, x1
   11a40:	mov	x1, #0x100000              	// #1048576
   11a44:	stp	x21, x22, [sp, #16]
   11a48:	mov	x21, x0
   11a4c:	mov	x0, x1
   11a50:	str	x30, [sp, #80]
   11a54:	str	x4, [sp, #104]
   11a58:	bl	1c008 <__sanitizer_set_report_fd@@Base+0x4d58>
   11a5c:	ldr	x4, [sp, #104]
   11a60:	cbz	x0, 11c40 <__sancov_default_options@@Base+0x1048>
   11a64:	mov	x22, x0
   11a68:	tst	x0, #0xfffff
   11a6c:	ldr	x0, [x19, #24]
   11a70:	stp	x23, x24, [sp, #32]
   11a74:	stp	x27, x28, [sp, #64]
   11a78:	add	x0, x0, #0x100, lsl #12
   11a7c:	str	x0, [x19, #24]
   11a80:	b.ne	11e3c <__sancov_default_options@@Base+0x1244>  // b.any
   11a84:	mov	x0, #0xfffffff             	// #268435455
   11a88:	lsr	x19, x22, #20
   11a8c:	cmp	x0, x22, lsr #20
   11a90:	b.cc	11ea0 <__sancov_default_options@@Base+0x12a8>  // b.lo, b.ul, b.last
   11a94:	and	w23, w4, #0xff
   11a98:	lsr	x20, x22, #32
   11a9c:	ldr	x0, [x21, x20, lsl #3]
   11aa0:	dmb	ish
   11aa4:	cbz	x0, 11df4 <__sancov_default_options@@Base+0x11fc>
   11aa8:	and	x3, x19, #0xfff
   11aac:	ldrb	w1, [x0, x3]
   11ab0:	cbnz	x1, 11ef8 <__sancov_default_options@@Base+0x1300>
   11ab4:	strb	w23, [x0, x3]
   11ab8:	cmp	x4, #0x35
   11abc:	b.eq	11cd0 <__sancov_default_options@@Base+0x10d8>  // b.none
   11ac0:	lsl	x28, x4, #4
   11ac4:	cmp	x4, #0x10
   11ac8:	b.ls	11ae8 <__sancov_default_options@@Base+0xef0>  // b.plast
   11acc:	sub	x0, x4, #0x10
   11ad0:	mov	x28, #0x100                 	// #256
   11ad4:	and	x1, x0, #0x3
   11ad8:	lsr	x0, x0, #2
   11adc:	lsl	x0, x28, x0
   11ae0:	lsr	x28, x0, #2
   11ae4:	madd	x28, x28, x1, x0
   11ae8:	mov	x27, #0x100000              	// #1048576
   11aec:	udiv	x27, x27, x28
   11af0:	cbz	x28, 11de4 <__sancov_default_options@@Base+0x11ec>
   11af4:	mov	w23, #0x4000                	// #16384
   11af8:	mov	x1, #0x40                  	// #64
   11afc:	mov	x0, #0x3e                  	// #62
   11b00:	mul	x27, x27, x28
   11b04:	udiv	w23, w23, w28
   11b08:	cmp	x23, x1
   11b0c:	csel	x23, x23, x1, ls  // ls = plast
   11b10:	cmp	x23, #0x0
   11b14:	csinc	x23, x23, xzr, ne  // ne = any
   11b18:	cmp	x23, x0
   11b1c:	csel	x23, x23, x0, ls  // ls = plast
   11b20:	add	x27, x22, x27
   11b24:	cmp	x22, x27
   11b28:	b.cs	11de4 <__sancov_default_options@@Base+0x11ec>  // b.hs, b.nlast
   11b2c:	add	x24, sp, #0x90
   11b30:	add	x7, x26, x4, lsl #10
   11b34:	mov	x1, #0x0                   	// #0
   11b38:	mov	x19, #0x1                   	// #1
   11b3c:	str	x22, [sp, #144]
   11b40:	add	x22, x22, x28
   11b44:	cmp	x22, x27
   11b48:	b.cs	11c90 <__sancov_default_options@@Base+0x1098>  // b.hs, b.nlast
   11b4c:	str	x22, [x24, x19, lsl #3]
   11b50:	cmp	x19, #0x2f
   11b54:	add	x19, x19, #0x1
   11b58:	b.ne	11b40 <__sancov_default_options@@Base+0xf48>  // b.any
   11b5c:	mov	x2, #0xd800                	// #55296
   11b60:	mov	x19, #0x0                   	// #0
   11b64:	add	x9, x26, x2
   11b68:	b	11b74 <__sancov_default_options@@Base+0xf7c>
   11b6c:	cmp	x19, #0x2f
   11b70:	b.hi	11cc8 <__sancov_default_options@@Base+0x10d0>  // b.pmore
   11b74:	ldr	x8, [x24, x19, lsl #3]
   11b78:	cbz	x1, 11bc0 <__sancov_default_options@@Base+0xfc8>
   11b7c:	ldr	x5, [x1, #8]
   11b80:	add	x6, x5, #0x1
   11b84:	add	x5, x5, #0x2
   11b88:	str	x6, [x1, #8]
   11b8c:	add	x19, x19, #0x1
   11b90:	cmp	x6, x23
   11b94:	str	x8, [x1, x5, lsl #3]
   11b98:	b.ne	11b6c <__sancov_default_options@@Base+0xf74>  // b.any
   11b9c:	ldr	x5, [x25, #8]
   11ba0:	str	xzr, [x1]
   11ba4:	cbnz	x5, 11c5c <__sancov_default_options@@Base+0x1064>
   11ba8:	mov	x2, #0x1                   	// #1
   11bac:	stp	x2, x1, [x25, #8]
   11bb0:	cmp	x19, #0x2f
   11bb4:	str	x1, [x25, #24]
   11bb8:	b.hi	11c78 <__sancov_default_options@@Base+0x1080>  // b.pmore
   11bbc:	ldr	x8, [x24, x19, lsl #3]
   11bc0:	mov	x1, x8
   11bc4:	ldr	x20, [x7, #24]
   11bc8:	cbnz	x20, 11be0 <__sancov_default_options@@Base+0xfe8>
   11bcc:	cbz	x1, 11c38 <__sancov_default_options@@Base+0x1040>
   11bd0:	mov	x5, #0x0                   	// #0
   11bd4:	mov	x6, #0x1                   	// #1
   11bd8:	str	xzr, [x1, #8]
   11bdc:	b	11b84 <__sancov_default_options@@Base+0xf8c>
   11be0:	cmp	x20, #0x35
   11be4:	b.hi	11e5c <__sancov_default_options@@Base+0x1264>  // b.pmore
   11be8:	lsl	x5, x20, #10
   11bec:	add	x1, x26, x5
   11bf0:	ldr	x0, [x26, x5]
   11bf4:	cbz	x0, 11ec0 <__sancov_default_options@@Base+0x12c8>
   11bf8:	lsl	x20, x20, #7
   11bfc:	add	x3, x26, x5
   11c00:	add	x1, x20, x0
   11c04:	sub	x0, x0, #0x1
   11c08:	add	x1, x1, #0x2
   11c0c:	str	x0, [x26, x5]
   11c10:	add	x20, x20, x0
   11c14:	add	x20, x20, #0x4
   11c18:	ldr	x2, [x26, x1, lsl #3]
   11c1c:	ldr	x0, [x9, #16]
   11c20:	ldr	x1, [x3, #16]
   11c24:	prfm	pldl1keep, [x2]
   11c28:	add	x0, x0, x1
   11c2c:	ldr	x1, [x26, x20, lsl #3]
   11c30:	str	x0, [x9, #16]
   11c34:	cbnz	x1, 11bd0 <__sancov_default_options@@Base+0xfd8>
   11c38:	ldp	x23, x24, [sp, #32]
   11c3c:	ldp	x27, x28, [sp, #64]
   11c40:	mov	w0, #0x0                   	// #0
   11c44:	ldp	x19, x20, [sp]
   11c48:	ldp	x21, x22, [sp, #16]
   11c4c:	ldp	x25, x26, [sp, #48]
   11c50:	ldr	x30, [sp, #80]
   11c54:	add	sp, sp, #0x210
   11c58:	ret
   11c5c:	ldr	x2, [x25, #24]
   11c60:	add	x5, x5, #0x1
   11c64:	cmp	x19, #0x2f
   11c68:	str	x1, [x2]
   11c6c:	str	x5, [x25, #8]
   11c70:	str	x1, [x25, #24]
   11c74:	b.ls	11bbc <__sancov_default_options@@Base+0xfc4>  // b.plast
   11c78:	add	x22, x22, x28
   11c7c:	mov	x19, #0x0                   	// #0
   11c80:	cmp	x22, x27
   11c84:	mov	x1, #0x0                   	// #0
   11c88:	b.cc	11b4c <__sancov_default_options@@Base+0xf54>  // b.lo, b.ul, b.last
   11c8c:	nop
   11c90:	cbnz	x19, 11ce0 <__sancov_default_options@@Base+0x10e8>
   11c94:	cbz	x1, 11de4 <__sancov_default_options@@Base+0x11ec>
   11c98:	ldr	x2, [x1, #8]
   11c9c:	cbz	x2, 11f18 <__sancov_default_options@@Base+0x1320>
   11ca0:	ldr	x0, [x25, #8]
   11ca4:	str	xzr, [x1]
   11ca8:	cbnz	x0, 11e7c <__sancov_default_options@@Base+0x1284>
   11cac:	mov	x2, #0x1                   	// #1
   11cb0:	mov	w0, w2
   11cb4:	ldp	x23, x24, [sp, #32]
   11cb8:	ldp	x27, x28, [sp, #64]
   11cbc:	stp	x2, x1, [x25, #8]
   11cc0:	str	x1, [x25, #24]
   11cc4:	b	11c44 <__sancov_default_options@@Base+0x104c>
   11cc8:	mov	x19, #0x0                   	// #0
   11ccc:	b	11b40 <__sancov_default_options@@Base+0xf48>
   11cd0:	mov	x27, #0x100000              	// #1048576
   11cd4:	mov	x23, #0x20                  	// #32
   11cd8:	mov	x28, #0x200                 	// #512
   11cdc:	b	11b20 <__sancov_default_options@@Base+0xf28>
   11ce0:	add	x28, x26, x4, lsl #10
   11ce4:	mov	x0, #0xd800                	// #55296
   11ce8:	add	x27, sp, #0x90
   11cec:	add	x4, x26, x0
   11cf0:	mov	x20, #0x0                   	// #0
   11cf4:	b	11d00 <__sancov_default_options@@Base+0x1108>
   11cf8:	cmp	x19, x20
   11cfc:	b.ls	11c9c <__sancov_default_options@@Base+0x10a4>  // b.plast
   11d00:	ldr	x22, [x27, x20, lsl #3]
   11d04:	cbz	x1, 11d4c <__sancov_default_options@@Base+0x1154>
   11d08:	ldr	x0, [x1, #8]
   11d0c:	add	x2, x0, #0x1
   11d10:	add	x0, x0, #0x2
   11d14:	str	x2, [x1, #8]
   11d18:	add	x20, x20, #0x1
   11d1c:	cmp	x2, x23
   11d20:	str	x22, [x1, x0, lsl #3]
   11d24:	b.ne	11cf8 <__sancov_default_options@@Base+0x1100>  // b.any
   11d28:	ldr	x0, [x25, #8]
   11d2c:	cbnz	x0, 11dc4 <__sancov_default_options@@Base+0x11cc>
   11d30:	str	xzr, [x1]
   11d34:	mov	x2, #0x1                   	// #1
   11d38:	stp	x2, x1, [x25, #8]
   11d3c:	cmp	x19, x20
   11d40:	str	x1, [x25, #24]
   11d44:	b.ls	11de4 <__sancov_default_options@@Base+0x11ec>  // b.plast
   11d48:	ldr	x22, [x27, x20, lsl #3]
   11d4c:	mov	x1, x22
   11d50:	ldr	x24, [x28, #24]
   11d54:	cbnz	x24, 11d6c <__sancov_default_options@@Base+0x1174>
   11d58:	cbz	x1, 11c38 <__sancov_default_options@@Base+0x1040>
   11d5c:	mov	x0, #0x0                   	// #0
   11d60:	mov	x2, #0x1                   	// #1
   11d64:	str	xzr, [x1, #8]
   11d68:	b	11d10 <__sancov_default_options@@Base+0x1118>
   11d6c:	cmp	x24, #0x35
   11d70:	b.hi	11f60 <__sancov_default_options@@Base+0x1368>  // b.pmore
   11d74:	lsl	x5, x24, #10
   11d78:	add	x1, x26, x5
   11d7c:	ldr	x0, [x26, x5]
   11d80:	cbz	x0, 11f68 <__sancov_default_options@@Base+0x1370>
   11d84:	lsl	x24, x24, #7
   11d88:	add	x2, x26, x5
   11d8c:	add	x1, x24, x0
   11d90:	sub	x0, x0, #0x1
   11d94:	add	x1, x1, #0x2
   11d98:	str	x0, [x26, x5]
   11d9c:	add	x24, x24, x0
   11da0:	add	x0, x24, #0x4
   11da4:	ldr	x3, [x26, x1, lsl #3]
   11da8:	ldr	x1, [x2, #16]
   11dac:	ldr	x2, [x4, #16]
   11db0:	prfm	pldl1keep, [x3]
   11db4:	add	x2, x2, x1
   11db8:	ldr	x1, [x26, x0, lsl #3]
   11dbc:	str	x2, [x4, #16]
   11dc0:	b	11d58 <__sancov_default_options@@Base+0x1160>
   11dc4:	ldr	x3, [x25, #24]
   11dc8:	str	xzr, [x1]
   11dcc:	add	x0, x0, #0x1
   11dd0:	cmp	x19, x20
   11dd4:	str	x1, [x3]
   11dd8:	str	x0, [x25, #8]
   11ddc:	str	x1, [x25, #24]
   11de0:	b.hi	11d48 <__sancov_default_options@@Base+0x1150>  // b.pmore
   11de4:	mov	w0, #0x1                   	// #1
   11de8:	ldp	x23, x24, [sp, #32]
   11dec:	ldp	x27, x28, [sp, #64]
   11df0:	b	11c44 <__sancov_default_options@@Base+0x104c>
   11df4:	add	x24, x21, #0x80, lsl #12
   11df8:	mov	w1, #0x1                   	// #1
   11dfc:	ldxrb	w0, [x24]
   11e00:	stxrb	w2, w1, [x24]
   11e04:	cbnz	w2, 11dfc <__sancov_default_options@@Base+0x1204>
   11e08:	dmb	ish
   11e0c:	tst	w0, #0xff
   11e10:	b.eq	11e24 <__sancov_default_options@@Base+0x122c>  // b.none
   11e14:	mov	x0, x24
   11e18:	str	x4, [sp, #104]
   11e1c:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   11e20:	ldr	x4, [sp, #104]
   11e24:	ldr	x0, [x21, x20, lsl #3]
   11e28:	dmb	ish
   11e2c:	cbz	x0, 11f38 <__sancov_default_options@@Base+0x1340>
   11e30:	dmb	ish
   11e34:	strb	wzr, [x24]
   11e38:	b	11aa8 <__sancov_default_options@@Base+0xeb0>
   11e3c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11e40:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11e44:	add	x2, x2, #0x618
   11e48:	add	x0, x0, #0x258
   11e4c:	mov	x4, #0x0                   	// #0
   11e50:	mov	x3, #0x0                   	// #0
   11e54:	mov	w1, #0x126                 	// #294
   11e58:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11e5c:	mov	x3, x20
   11e60:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11e64:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11e68:	add	x2, x2, #0x6e8
   11e6c:	add	x0, x0, #0x708
   11e70:	mov	x4, #0x36                  	// #54
   11e74:	mov	w1, #0xa0                  	// #160
   11e78:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11e7c:	ldr	x4, [x25, #24]
   11e80:	add	x2, x0, #0x1
   11e84:	ldp	x23, x24, [sp, #32]
   11e88:	mov	w0, #0x1                   	// #1
   11e8c:	ldp	x27, x28, [sp, #64]
   11e90:	str	x1, [x4]
   11e94:	str	x2, [x25, #8]
   11e98:	str	x1, [x25, #24]
   11e9c:	b	11c44 <__sancov_default_options@@Base+0x104c>
   11ea0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11ea4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11ea8:	mov	x3, x19
   11eac:	add	x2, x2, #0x640
   11eb0:	add	x0, x0, #0x258
   11eb4:	mov	x4, #0x10000000            	// #268435456
   11eb8:	mov	w1, #0x116                 	// #278
   11ebc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11ec0:	mov	x3, x20
   11ec4:	mov	x2, x21
   11ec8:	mov	x0, x26
   11ecc:	stp	x8, x4, [sp, #104]
   11ed0:	stp	x5, x9, [sp, #120]
   11ed4:	str	x7, [sp, #136]
   11ed8:	bl	12098 <__sancov_default_options@@Base+0x14a0>
   11edc:	tst	w0, #0xff
   11ee0:	b.eq	11c38 <__sancov_default_options@@Base+0x1040>  // b.none
   11ee4:	ldp	x5, x9, [sp, #120]
   11ee8:	ldp	x8, x4, [sp, #104]
   11eec:	ldr	x7, [sp, #136]
   11ef0:	ldr	x0, [x26, x5]
   11ef4:	b	11bf8 <__sancov_default_options@@Base+0x1000>
   11ef8:	mov	x4, x1
   11efc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11f00:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11f04:	add	x2, x2, #0x678
   11f08:	add	x0, x0, #0x6a0
   11f0c:	mov	x3, #0x0                   	// #0
   11f10:	mov	w1, #0x42                  	// #66
   11f14:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11f18:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11f1c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11f20:	add	x2, x2, #0x600
   11f24:	add	x0, x0, #0x258
   11f28:	mov	x4, #0x0                   	// #0
   11f2c:	mov	x3, #0x0                   	// #0
   11f30:	mov	w1, #0x169                 	// #361
   11f34:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   11f38:	mov	w2, #0x0                   	// #0
   11f3c:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   11f40:	mov	x0, #0x1000                	// #4096
   11f44:	add	x1, x1, #0x668
   11f48:	str	x4, [sp, #104]
   11f4c:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   11f50:	dmb	ish
   11f54:	str	x0, [x21, x20, lsl #3]
   11f58:	ldr	x4, [sp, #104]
   11f5c:	b	11e30 <__sancov_default_options@@Base+0x1238>
   11f60:	mov	x3, x24
   11f64:	b	11e60 <__sancov_default_options@@Base+0x1268>
   11f68:	mov	x3, x24
   11f6c:	mov	x2, x21
   11f70:	mov	x0, x26
   11f74:	stp	x5, x4, [sp, #104]
   11f78:	bl	12098 <__sancov_default_options@@Base+0x14a0>
   11f7c:	tst	w0, #0xff
   11f80:	b.eq	11c38 <__sancov_default_options@@Base+0x1040>  // b.none
   11f84:	ldp	x5, x4, [sp, #104]
   11f88:	ldr	x0, [x26, x5]
   11f8c:	b	11d84 <__sancov_default_options@@Base+0x118c>
   11f90:	stp	x19, x20, [sp, #-80]!
   11f94:	mov	x20, x0
   11f98:	mov	x0, #0x2001                	// #8193
   11f9c:	stp	x21, x22, [sp, #16]
   11fa0:	add	x22, x3, x0
   11fa4:	mov	x19, x3
   11fa8:	lsl	x21, x22, #6
   11fac:	stp	x23, x24, [sp, #32]
   11fb0:	add	x23, x20, x21
   11fb4:	stp	x25, x26, [sp, #48]
   11fb8:	mov	x25, x2
   11fbc:	mov	x24, x1
   11fc0:	mov	w1, #0x1                   	// #1
   11fc4:	str	x30, [sp, #64]
   11fc8:	ldxrb	w0, [x23]
   11fcc:	stxrb	w2, w1, [x23]
   11fd0:	cbnz	w2, 11fc8 <__sancov_default_options@@Base+0x13d0>
   11fd4:	dmb	ish
   11fd8:	tst	w0, #0xff
   11fdc:	b.eq	11fe8 <__sancov_default_options@@Base+0x13f0>  // b.none
   11fe0:	mov	x0, x23
   11fe4:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   11fe8:	add	x21, x21, #0x8
   11fec:	add	x26, x20, x21
   11ff0:	ldr	x5, [x20, x21]
   11ff4:	cbnz	x5, 12020 <__sancov_default_options@@Base+0x1428>
   11ff8:	mov	x3, x23
   11ffc:	mov	x2, x25
   12000:	mov	x1, x24
   12004:	mov	x4, x19
   12008:	mov	x0, x20
   1200c:	bl	11a20 <__sancov_default_options@@Base+0xe28>
   12010:	tst	w0, #0xff
   12014:	b.eq	12090 <__sancov_default_options@@Base+0x1498>  // b.none
   12018:	ldr	x5, [x20, x21]
   1201c:	cbz	x5, 12070 <__sancov_default_options@@Base+0x1478>
   12020:	add	x4, x20, x19, lsl #6
   12024:	add	x4, x4, #0x80, lsl #12
   12028:	ldr	x0, [x26, #8]
   1202c:	ldr	x1, [x4, #80]
   12030:	ldr	x1, [x1]
   12034:	str	x1, [x4, #80]
   12038:	cbz	x1, 12068 <__sancov_default_options@@Base+0x1470>
   1203c:	sub	x5, x5, #0x1
   12040:	str	x5, [x4, #72]
   12044:	dmb	ish
   12048:	lsl	x22, x22, #6
   1204c:	strb	wzr, [x20, x22]
   12050:	ldp	x21, x22, [sp, #16]
   12054:	ldp	x23, x24, [sp, #32]
   12058:	ldp	x25, x26, [sp, #48]
   1205c:	ldr	x30, [sp, #64]
   12060:	ldp	x19, x20, [sp], #80
   12064:	ret
   12068:	str	xzr, [x4, #88]
   1206c:	b	1203c <__sancov_default_options@@Base+0x1444>
   12070:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12074:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12078:	add	x2, x2, #0x758
   1207c:	add	x0, x0, #0x770
   12080:	mov	x4, #0x0                   	// #0
   12084:	mov	x3, #0x0                   	// #0
   12088:	mov	w1, #0x40                  	// #64
   1208c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12090:	mov	x0, #0x0                   	// #0
   12094:	b	12044 <__sancov_default_options@@Base+0x144c>
   12098:	stp	x19, x20, [sp, #-64]!
   1209c:	mov	x19, x0
   120a0:	mov	x20, x2
   120a4:	ldr	x0, [x1, #8]
   120a8:	stp	x21, x22, [sp, #16]
   120ac:	mov	x22, x1
   120b0:	stp	x23, x24, [sp, #32]
   120b4:	mov	x21, x3
   120b8:	str	x30, [sp, #48]
   120bc:	cbz	x0, 12198 <__sancov_default_options@@Base+0x15a0>
   120c0:	mov	x0, #0xd800                	// #55296
   120c4:	add	x24, x19, x0
   120c8:	mov	x3, x21
   120cc:	mov	x1, x24
   120d0:	mov	x2, x19
   120d4:	mov	x0, x20
   120d8:	bl	11f90 <__sancov_default_options@@Base+0x1398>
   120dc:	mov	x23, x0
   120e0:	cbz	x0, 12270 <__sancov_default_options@@Base+0x1678>
   120e4:	ldr	x6, [x0, #8]
   120e8:	add	x8, x0, #0x10
   120ec:	add	x7, x22, #0x20
   120f0:	mov	x4, #0x0                   	// #0
   120f4:	cbz	x6, 12288 <__sancov_default_options@@Base+0x1690>
   120f8:	ldr	x5, [x8, x4, lsl #3]
   120fc:	str	x5, [x7, x4, lsl #3]
   12100:	add	x4, x4, #0x1
   12104:	cmp	x6, x4
   12108:	b.ne	120f8 <__sancov_default_options@@Base+0x1500>  // b.any
   1210c:	add	x21, x19, x21, lsl #10
   12110:	mov	w0, #0x1                   	// #1
   12114:	ldr	x21, [x21, #24]
   12118:	str	x6, [x22]
   1211c:	cbnz	x21, 12134 <__sancov_default_options@@Base+0x153c>
   12120:	ldp	x21, x22, [sp, #16]
   12124:	ldp	x23, x24, [sp, #32]
   12128:	ldr	x30, [sp, #48]
   1212c:	ldp	x19, x20, [sp], #64
   12130:	ret
   12134:	cmp	x21, #0x35
   12138:	b.hi	123a0 <__sancov_default_options@@Base+0x17a8>  // b.pmore
   1213c:	lsl	x22, x21, #10
   12140:	add	x1, x19, x22
   12144:	ldr	x2, [x1, #8]
   12148:	cbz	x2, 122bc <__sancov_default_options@@Base+0x16c4>
   1214c:	ldr	x0, [x19, x22]
   12150:	cmp	x0, x2
   12154:	b.eq	122a4 <__sancov_default_options@@Base+0x16ac>  // b.none
   12158:	add	x2, x0, x21, lsl #7
   1215c:	add	x3, x19, x22
   12160:	add	x2, x2, #0x4
   12164:	add	x0, x0, #0x1
   12168:	str	x0, [x19, x22]
   1216c:	mov	w0, #0x1                   	// #1
   12170:	ldr	x1, [x24, #16]
   12174:	str	x23, [x19, x2, lsl #3]
   12178:	ldp	x21, x22, [sp, #16]
   1217c:	ldr	x2, [x3, #16]
   12180:	ldr	x30, [sp, #48]
   12184:	sub	x1, x1, x2
   12188:	str	x1, [x24, #16]
   1218c:	ldp	x23, x24, [sp, #32]
   12190:	ldp	x19, x20, [sp], #64
   12194:	ret
   12198:	mov	x5, #0x1                   	// #1
   1219c:	mov	x11, x5
   121a0:	mov	x12, #0x7c                  	// #124
   121a4:	mov	x10, #0x14                  	// #20
   121a8:	mov	x9, #0x100                 	// #256
   121ac:	mov	w8, #0x4000                	// #16384
   121b0:	mov	x3, #0x3e                  	// #62
   121b4:	nop
   121b8:	add	x1, x19, x5, lsl #10
   121bc:	lsl	x4, x5, #4
   121c0:	mov	x6, x1
   121c4:	mov	x0, #0x14                  	// #20
   121c8:	mov	x2, x5
   121cc:	add	x5, x5, #0x1
   121d0:	stp	x12, x4, [x1, #8]
   121d4:	cmp	x5, #0x36
   121d8:	str	x0, [x6, #24]
   121dc:	b.eq	120c0 <__sancov_default_options@@Base+0x14c8>  // b.none
   121e0:	cmp	x5, #0x35
   121e4:	b.eq	12254 <__sancov_default_options@@Base+0x165c>  // b.none
   121e8:	cmp	x5, #0x10
   121ec:	b.ls	121b8 <__sancov_default_options@@Base+0x15c0>  // b.plast
   121f0:	sub	x4, x2, #0xf
   121f4:	add	x6, x6, #0x400
   121f8:	and	x0, x4, #0x3
   121fc:	mov	x2, x5
   12200:	lsr	x4, x4, #2
   12204:	add	x5, x5, #0x1
   12208:	lsl	x4, x9, x4
   1220c:	lsr	x7, x4, #2
   12210:	madd	x7, x7, x0, x4
   12214:	str	x7, [x6, #16]
   12218:	udiv	w4, w8, w7
   1221c:	cmp	x4, #0x0
   12220:	csel	x4, x4, x11, ne  // ne = any
   12224:	cmp	x4, #0x3e
   12228:	csel	x4, x4, x3, ls  // ls = plast
   1222c:	add	x0, x4, #0x2
   12230:	lsl	x4, x4, #1
   12234:	str	x4, [x6, #8]
   12238:	cmp	x7, x0, lsl #3
   1223c:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   12240:	str	x0, [x6, #24]
   12244:	cmp	x5, #0x36
   12248:	b.eq	120c0 <__sancov_default_options@@Base+0x14c8>  // b.none
   1224c:	cmp	x5, #0x35
   12250:	b.ne	121e8 <__sancov_default_options@@Base+0x15f0>  // b.any
   12254:	add	x0, x19, #0x8, lsl #12
   12258:	mov	x2, #0x40                  	// #64
   1225c:	mov	x1, #0x200                 	// #512
   12260:	str	x2, [x0, #21512]
   12264:	str	x1, [x0, #21520]
   12268:	str	xzr, [x0, #21528]
   1226c:	b	120c0 <__sancov_default_options@@Base+0x14c8>
   12270:	mov	w0, #0x0                   	// #0
   12274:	ldp	x21, x22, [sp, #16]
   12278:	ldp	x23, x24, [sp, #32]
   1227c:	ldr	x30, [sp, #48]
   12280:	ldp	x19, x20, [sp], #64
   12284:	ret
   12288:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1228c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12290:	add	x2, x2, #0x600
   12294:	add	x0, x0, #0x708
   12298:	mov	x3, #0x0                   	// #0
   1229c:	mov	w1, #0xf6                  	// #246
   122a0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   122a4:	mov	x0, x19
   122a8:	mov	x2, x20
   122ac:	mov	x3, x21
   122b0:	bl	12858 <__sancov_default_options@@Base+0x1c60>
   122b4:	ldr	x0, [x19, x22]
   122b8:	b	12158 <__sancov_default_options@@Base+0x1560>
   122bc:	mov	x5, #0x1                   	// #1
   122c0:	mov	x11, x5
   122c4:	mov	x12, #0x7c                  	// #124
   122c8:	mov	x10, #0x14                  	// #20
   122cc:	mov	x9, #0x100                 	// #256
   122d0:	mov	w8, #0x4000                	// #16384
   122d4:	mov	x7, #0x3e                  	// #62
   122d8:	add	x4, x19, x5, lsl #10
   122dc:	lsl	x6, x5, #4
   122e0:	mov	x2, x4
   122e4:	mov	x0, #0x14                  	// #20
   122e8:	mov	x3, x5
   122ec:	add	x5, x5, #0x1
   122f0:	stp	x12, x6, [x4, #8]
   122f4:	cmp	x5, #0x36
   122f8:	str	x0, [x2, #24]
   122fc:	b.eq	1236c <__sancov_default_options@@Base+0x1774>  // b.none
   12300:	cmp	x5, #0x35
   12304:	b.eq	12374 <__sancov_default_options@@Base+0x177c>  // b.none
   12308:	cmp	x5, #0x10
   1230c:	b.ls	122d8 <__sancov_default_options@@Base+0x16e0>  // b.plast
   12310:	sub	x0, x3, #0xf
   12314:	add	x2, x2, #0x400
   12318:	and	x6, x0, #0x3
   1231c:	mov	x3, x5
   12320:	lsr	x0, x0, #2
   12324:	add	x5, x5, #0x1
   12328:	lsl	x0, x9, x0
   1232c:	lsr	x4, x0, #2
   12330:	madd	x0, x4, x6, x0
   12334:	str	x0, [x2, #16]
   12338:	udiv	w4, w8, w0
   1233c:	cmp	x4, #0x0
   12340:	csel	x4, x4, x11, ne  // ne = any
   12344:	cmp	x4, #0x3e
   12348:	csel	x4, x4, x7, ls  // ls = plast
   1234c:	add	x6, x4, #0x2
   12350:	lsl	x4, x4, #1
   12354:	str	x4, [x2, #8]
   12358:	cmp	x0, x6, lsl #3
   1235c:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   12360:	str	x0, [x2, #24]
   12364:	cmp	x5, #0x36
   12368:	b.ne	12300 <__sancov_default_options@@Base+0x1708>  // b.any
   1236c:	ldr	x2, [x1, #8]
   12370:	b	1214c <__sancov_default_options@@Base+0x1554>
   12374:	add	x0, x19, #0x8, lsl #12
   12378:	mov	x2, #0x200                 	// #512
   1237c:	mov	x3, #0x40                  	// #64
   12380:	str	x3, [x0, #21512]
   12384:	str	x2, [x0, #21520]
   12388:	str	xzr, [x0, #21528]
   1238c:	ldr	x0, [x19, x22]
   12390:	ldr	x2, [x1, #8]
   12394:	cmp	x0, x2
   12398:	b.ne	12158 <__sancov_default_options@@Base+0x1560>  // b.any
   1239c:	b	122a4 <__sancov_default_options@@Base+0x16ac>
   123a0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   123a4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   123a8:	mov	x3, x21
   123ac:	add	x2, x2, #0x6e8
   123b0:	add	x0, x0, #0x708
   123b4:	mov	x4, #0x36                  	// #54
   123b8:	mov	w1, #0xaf                  	// #175
   123bc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   123c0:	stp	x19, x20, [sp, #-80]!
   123c4:	cmp	x2, #0x0
   123c8:	stp	x21, x22, [sp, #16]
   123cc:	csinc	x22, x2, xzr, ne  // ne = any
   123d0:	mov	x21, x1
   123d4:	str	x30, [sp, #64]
   123d8:	adds	x1, x3, x22
   123dc:	b.cs	12830 <__sancov_default_options@@Base+0x1c38>  // b.hs, b.nlast
   123e0:	stp	x23, x24, [sp, #32]
   123e4:	mov	x19, x3
   123e8:	mov	x23, x0
   123ec:	cmp	x3, #0x8
   123f0:	b.hi	12638 <__sancov_default_options@@Base+0x1a40>  // b.pmore
   123f4:	cmp	x2, #0x20, lsl #12
   123f8:	b.hi	124bc <__sancov_default_options@@Base+0x18c4>  // b.pmore
   123fc:	cmp	x22, #0x100
   12400:	b.ls	1266c <__sancov_default_options@@Base+0x1a74>  // b.plast
   12404:	clz	x3, x22
   12408:	mov	w20, #0x3f                  	// #63
   1240c:	sub	w20, w20, w3
   12410:	mov	w3, #0x1                   	// #1
   12414:	sub	w1, w20, #0x2
   12418:	lsl	w3, w3, w1
   1241c:	sub	w3, w3, #0x1
   12420:	tst	x3, x22
   12424:	lsr	x3, x22, x1
   12428:	and	x3, x3, #0x3
   1242c:	cinc	x3, x3, ne  // ne = any
   12430:	add	x20, x3, w20, sxtw #2
   12434:	sub	x20, x20, #0x10
   12438:	cmp	x20, #0x35
   1243c:	b.hi	126bc <__sancov_default_options@@Base+0x1ac4>  // b.pmore
   12440:	lsl	x22, x20, #10
   12444:	add	x1, x21, x22
   12448:	ldr	x3, [x21, x22]
   1244c:	cbz	x3, 12750 <__sancov_default_options@@Base+0x1b58>
   12450:	lsl	x20, x20, #7
   12454:	add	x1, x21, x22
   12458:	add	x0, x20, x3
   1245c:	mov	x2, #0xd800                	// #55296
   12460:	add	x0, x0, #0x2
   12464:	sub	x3, x3, #0x1
   12468:	add	x2, x21, x2
   1246c:	str	x3, [x21, x22]
   12470:	add	x20, x20, x3
   12474:	ldr	x3, [x21, x0, lsl #3]
   12478:	add	x20, x20, #0x4
   1247c:	ldr	x0, [x1, #16]
   12480:	ldr	x1, [x2, #16]
   12484:	prfm	pldl1keep, [x3]
   12488:	add	x1, x1, x0
   1248c:	ldr	x0, [x21, x20, lsl #3]
   12490:	str	x1, [x2, #16]
   12494:	cmp	x19, #0x8
   12498:	b.ls	124a8 <__sancov_default_options@@Base+0x18b0>  // b.plast
   1249c:	sub	x19, x19, #0x1
   124a0:	ands	x3, x0, x19
   124a4:	b.ne	12710 <__sancov_default_options@@Base+0x1b18>  // b.any
   124a8:	ldp	x23, x24, [sp, #32]
   124ac:	ldp	x21, x22, [sp, #16]
   124b0:	ldr	x30, [sp, #64]
   124b4:	ldp	x19, x20, [sp], #80
   124b8:	ret
   124bc:	stp	x25, x26, [sp, #48]
   124c0:	sub	x24, x3, #0x1
   124c4:	tst	x3, x24
   124c8:	b.ne	12730 <__sancov_default_options@@Base+0x1b38>  // b.any
   124cc:	add	x25, x23, #0x80, lsl #12
   124d0:	add	x25, x25, #0xc00
   124d4:	ldr	x2, [x25, #448]
   124d8:	sub	x0, x2, #0x1
   124dc:	tst	x2, x0
   124e0:	b.ne	126ac <__sancov_default_options@@Base+0x1ab4>  // b.any
   124e4:	add	x20, x22, x0
   124e8:	neg	x0, x2
   124ec:	and	x20, x20, x0
   124f0:	cmp	x19, x2
   124f4:	add	x20, x20, x2
   124f8:	add	x0, x20, x19
   124fc:	csel	x20, x0, x20, hi  // hi = pmore
   12500:	cmp	x22, x20
   12504:	b.hi	126e0 <__sancov_default_options@@Base+0x1ae8>  // b.pmore
   12508:	adrp	x1, 60000 <_Unwind_Backtrace@GCC_3.3>
   1250c:	mov	x0, x20
   12510:	ldr	x1, [x1, #960]
   12514:	bl	1bf38 <__sanitizer_set_report_fd@@Base+0x4c88>
   12518:	cbz	x0, 12770 <__sancov_default_options@@Base+0x1b78>
   1251c:	ldr	x1, [x25, #448]
   12520:	sub	x2, x1, #0x1
   12524:	tst	x0, x2
   12528:	b.ne	12780 <__sancov_default_options@@Base+0x1b88>  // b.any
   1252c:	add	x21, x0, x1
   12530:	ands	x3, x24, x21
   12534:	b.eq	12548 <__sancov_default_options@@Base+0x1950>  // b.none
   12538:	add	x21, x19, x21
   1253c:	sub	x21, x21, x3
   12540:	tst	x24, x21
   12544:	b.ne	127a0 <__sancov_default_options@@Base+0x1ba8>  // b.any
   12548:	tst	x21, x2
   1254c:	b.ne	127c0 <__sancov_default_options@@Base+0x1bc8>  // b.any
   12550:	add	x3, x21, x22
   12554:	cmp	x0, x3
   12558:	b.hi	127e0 <__sancov_default_options@@Base+0x1be8>  // b.pmore
   1255c:	add	x4, x0, x20
   12560:	cmp	x4, x3
   12564:	b.cc	127fc <__sancov_default_options@@Base+0x1c04>  // b.lo, b.ul, b.last
   12568:	sub	x24, x21, x1
   1256c:	add	x26, x23, #0xc1, lsl #12
   12570:	mov	w1, #0x1                   	// #1
   12574:	stp	x0, x20, [x24]
   12578:	str	x22, [x24, #16]
   1257c:	ldxrb	w0, [x26]
   12580:	stxrb	w2, w1, [x26]
   12584:	cbnz	w2, 1257c <__sancov_default_options@@Base+0x1984>
   12588:	dmb	ish
   1258c:	tst	w0, #0xff
   12590:	b.eq	1259c <__sancov_default_options@@Base+0x19a4>  // b.none
   12594:	mov	x0, x26
   12598:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   1259c:	add	x25, x25, #0x1c0
   125a0:	mov	x0, #0x7fff                	// #32767
   125a4:	add	x1, x25, #0x40, lsl #12
   125a8:	ldr	x3, [x1, #16]
   125ac:	cmp	x3, x0
   125b0:	b.hi	12814 <__sancov_default_options@@Base+0x1c1c>  // b.pmore
   125b4:	clz	x0, x20
   125b8:	mov	w2, #0x3f                  	// #63
   125bc:	sub	w2, w2, w0
   125c0:	add	x5, x3, #0x1
   125c4:	ldp	x0, x4, [x1, #48]
   125c8:	add	x23, x23, w2, sxtw #3
   125cc:	ldr	x6, [x25, #8]
   125d0:	str	x5, [x1, #16]
   125d4:	ldr	x5, [x1, #32]
   125d8:	str	x3, [x24, #24]
   125dc:	add	x0, x20, x0
   125e0:	add	x23, x23, #0xc0, lsl #12
   125e4:	cmp	x4, x0
   125e8:	str	x24, [x6, x3, lsl #3]
   125ec:	csel	x4, x4, x0, cs  // cs = hs, nlast
   125f0:	add	x5, x5, #0x1
   125f4:	strb	wzr, [x1, #24]
   125f8:	str	x5, [x1, #32]
   125fc:	stp	x0, x4, [x1, #48]
   12600:	ldr	x1, [x23, #3584]
   12604:	ldr	x0, [x26, #24]
   12608:	add	x1, x1, #0x1
   1260c:	str	x1, [x23, #3584]
   12610:	add	x0, x20, x0
   12614:	str	x0, [x26, #24]
   12618:	ldr	x0, [x26, #32]
   1261c:	add	x20, x20, x0
   12620:	str	x20, [x26, #32]
   12624:	dmb	ish
   12628:	strb	wzr, [x26]
   1262c:	mov	x0, x21
   12630:	ldp	x25, x26, [sp, #48]
   12634:	b	12494 <__sancov_default_options@@Base+0x189c>
   12638:	sub	x24, x3, #0x1
   1263c:	tst	x3, x24
   12640:	b.ne	126a8 <__sancov_default_options@@Base+0x1ab0>  // b.any
   12644:	sub	x3, x1, #0x1
   12648:	neg	x1, x19
   1264c:	cmp	x19, #0x20, lsl #12
   12650:	and	x1, x3, x1
   12654:	mov	x0, #0x20000               	// #131072
   12658:	ccmp	x1, x0, #0x2, ls  // ls = plast
   1265c:	b.hi	126a0 <__sancov_default_options@@Base+0x1aa8>  // b.pmore
   12660:	mov	x22, x1
   12664:	cmp	x22, #0x100
   12668:	b.hi	12404 <__sancov_default_options@@Base+0x180c>  // b.pmore
   1266c:	add	x20, x22, #0xf
   12670:	cmp	xzr, x20, lsr #4
   12674:	lsr	x20, x20, #4
   12678:	b.ne	12440 <__sancov_default_options@@Base+0x1848>  // b.any
   1267c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12680:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12684:	add	x2, x2, #0x810
   12688:	add	x0, x0, #0x708
   1268c:	mov	x4, #0x0                   	// #0
   12690:	mov	x3, #0x0                   	// #0
   12694:	mov	w1, #0x9f                  	// #159
   12698:	stp	x25, x26, [sp, #48]
   1269c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   126a0:	stp	x25, x26, [sp, #48]
   126a4:	b	124cc <__sancov_default_options@@Base+0x18d4>
   126a8:	stp	x25, x26, [sp, #48]
   126ac:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   126b0:	add	x0, x0, #0x240
   126b4:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   126b8:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   126bc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   126c0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   126c4:	mov	x3, x20
   126c8:	add	x2, x2, #0x6e8
   126cc:	add	x0, x0, #0x708
   126d0:	mov	x4, #0x36                  	// #54
   126d4:	mov	w1, #0xa0                  	// #160
   126d8:	stp	x25, x26, [sp, #48]
   126dc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   126e0:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   126e4:	mov	x3, x19
   126e8:	mov	x2, x20
   126ec:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   126f0:	ldr	x1, [x1, #4008]
   126f4:	add	x0, x0, #0x850
   126f8:	ldr	x1, [x1]
   126fc:	bl	1e648 <OnPrint@@Base+0x398>
   12700:	mov	x0, #0x0                   	// #0
   12704:	ldp	x23, x24, [sp, #32]
   12708:	ldp	x25, x26, [sp, #48]
   1270c:	b	124ac <__sancov_default_options@@Base+0x18b4>
   12710:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12714:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12718:	add	x2, x2, #0x998
   1271c:	add	x0, x0, #0x9d8
   12720:	mov	x4, #0x0                   	// #0
   12724:	mov	w1, #0x42                  	// #66
   12728:	stp	x25, x26, [sp, #48]
   1272c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12730:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12734:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12738:	add	x2, x2, #0x828
   1273c:	add	x0, x0, #0x300
   12740:	mov	x4, #0x0                   	// #0
   12744:	mov	x3, #0x0                   	// #0
   12748:	mov	w1, #0x53                  	// #83
   1274c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12750:	mov	x2, x23
   12754:	mov	x3, x20
   12758:	mov	x0, x21
   1275c:	bl	12098 <__sancov_default_options@@Base+0x14a0>
   12760:	tst	w0, #0xff
   12764:	b.eq	12774 <__sancov_default_options@@Base+0x1b7c>  // b.none
   12768:	ldr	x3, [x21, x22]
   1276c:	b	12450 <__sancov_default_options@@Base+0x1858>
   12770:	ldp	x25, x26, [sp, #48]
   12774:	mov	x0, #0x0                   	// #0
   12778:	ldp	x23, x24, [sp, #32]
   1277c:	b	124ac <__sancov_default_options@@Base+0x18b4>
   12780:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12784:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12788:	add	x2, x2, #0x8b8
   1278c:	add	x0, x0, #0x300
   12790:	mov	x4, #0x0                   	// #0
   12794:	mov	x3, #0x0                   	// #0
   12798:	mov	w1, #0x62                  	// #98
   1279c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   127a0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   127a4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   127a8:	add	x2, x2, #0x8e8
   127ac:	add	x0, x0, #0x300
   127b0:	mov	x4, #0x0                   	// #0
   127b4:	mov	x3, #0x0                   	// #0
   127b8:	mov	w1, #0x68                  	// #104
   127bc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   127c0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   127c4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   127c8:	add	x2, x2, #0x910
   127cc:	add	x0, x0, #0x300
   127d0:	mov	x4, #0x0                   	// #0
   127d4:	mov	x3, #0x0                   	// #0
   127d8:	mov	w1, #0x69                  	// #105
   127dc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   127e0:	mov	x4, x0
   127e4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   127e8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   127ec:	add	x2, x2, #0x938
   127f0:	add	x0, x0, #0x300
   127f4:	mov	w1, #0x6a                  	// #106
   127f8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   127fc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12800:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12804:	add	x2, x2, #0x958
   12808:	add	x0, x0, #0x300
   1280c:	mov	w1, #0x6b                  	// #107
   12810:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12814:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12818:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1281c:	add	x2, x2, #0x978
   12820:	add	x0, x0, #0x300
   12824:	mov	x4, #0x8000                	// #32768
   12828:	mov	w1, #0x15                  	// #21
   1282c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12830:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12834:	mov	x2, x22
   12838:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1283c:	add	x0, x0, #0x7b0
   12840:	ldr	x1, [x1, #4008]
   12844:	ldr	x1, [x1]
   12848:	bl	1e648 <OnPrint@@Base+0x398>
   1284c:	mov	x0, #0x0                   	// #0
   12850:	b	124ac <__sancov_default_options@@Base+0x18b4>
   12854:	nop
   12858:	stp	x19, x20, [sp, #-80]!
   1285c:	stp	x21, x22, [sp, #16]
   12860:	mov	x21, x1
   12864:	add	x1, x0, x3, lsl #10
   12868:	stp	x23, x24, [sp, #32]
   1286c:	mov	x23, x3
   12870:	mov	x24, x2
   12874:	ldp	x5, x19, [x21]
   12878:	ldr	x20, [x1, #24]
   1287c:	str	x30, [sp, #56]
   12880:	lsr	x19, x19, #1
   12884:	cmp	x19, x5
   12888:	csel	x19, x19, x5, ls  // ls = plast
   1288c:	sub	x5, x5, x19
   12890:	cbnz	x20, 128f4 <__sancov_default_options@@Base+0x1cfc>
   12894:	add	x0, x5, #0x4
   12898:	ldr	x2, [x21, x0, lsl #3]
   1289c:	cbz	x2, 12960 <__sancov_default_options@@Base+0x1d68>
   128a0:	add	x5, x5, #0x4
   128a4:	str	x19, [x2, #8]
   128a8:	add	x6, x2, #0x10
   128ac:	mov	x0, #0x0                   	// #0
   128b0:	add	x5, x21, x5, lsl #3
   128b4:	cbz	x19, 128cc <__sancov_default_options@@Base+0x1cd4>
   128b8:	ldr	x4, [x5, x0, lsl #3]
   128bc:	str	x4, [x6, x0, lsl #3]
   128c0:	add	x0, x0, #0x1
   128c4:	cmp	x19, x0
   128c8:	b.ne	128b8 <__sancov_default_options@@Base+0x1cc0>  // b.any
   128cc:	ldr	x4, [x21]
   128d0:	mov	x1, x23
   128d4:	mov	x0, x24
   128d8:	sub	x19, x4, x19
   128dc:	ldp	x23, x24, [sp, #32]
   128e0:	ldr	x30, [sp, #56]
   128e4:	str	x19, [x21]
   128e8:	ldp	x21, x22, [sp, #16]
   128ec:	ldp	x19, x20, [sp], #80
   128f0:	b	11940 <__sancov_default_options@@Base+0xd48>
   128f4:	str	x25, [sp, #48]
   128f8:	cmp	x20, #0x35
   128fc:	b.hi	12980 <__sancov_default_options@@Base+0x1d88>  // b.pmore
   12900:	lsl	x25, x20, #10
   12904:	mov	x22, x0
   12908:	add	x1, x0, x25
   1290c:	ldr	x3, [x0, x25]
   12910:	cbz	x3, 129a0 <__sancov_default_options@@Base+0x1da8>
   12914:	lsl	x20, x20, #7
   12918:	add	x2, x22, x25
   1291c:	add	x0, x20, x3
   12920:	mov	x1, #0xd800                	// #55296
   12924:	add	x0, x0, #0x2
   12928:	sub	x3, x3, #0x1
   1292c:	add	x1, x22, x1
   12930:	str	x3, [x22, x25]
   12934:	add	x20, x20, x3
   12938:	ldr	x3, [x22, x0, lsl #3]
   1293c:	add	x20, x20, #0x4
   12940:	ldr	x2, [x2, #16]
   12944:	ldr	x0, [x1, #16]
   12948:	prfm	pldl1keep, [x3]
   1294c:	add	x0, x0, x2
   12950:	ldr	x2, [x22, x20, lsl #3]
   12954:	ldr	x25, [sp, #48]
   12958:	str	x0, [x1, #16]
   1295c:	b	1289c <__sancov_default_options@@Base+0x1ca4>
   12960:	str	x25, [sp, #48]
   12964:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12968:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1296c:	add	x0, x0, #0xa28
   12970:	ldr	x1, [x1, #4008]
   12974:	ldr	x1, [x1]
   12978:	bl	1e648 <OnPrint@@Base+0x398>
   1297c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   12980:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12984:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12988:	mov	x3, x20
   1298c:	add	x2, x2, #0x6e8
   12990:	add	x0, x0, #0x708
   12994:	mov	x4, #0x36                  	// #54
   12998:	mov	w1, #0xa0                  	// #160
   1299c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   129a0:	mov	x3, x20
   129a4:	str	x5, [sp, #72]
   129a8:	bl	12098 <__sancov_default_options@@Base+0x14a0>
   129ac:	tst	w0, #0xff
   129b0:	ldr	x5, [sp, #72]
   129b4:	b.eq	12964 <__sancov_default_options@@Base+0x1d6c>  // b.none
   129b8:	ldr	x3, [x22, x25]
   129bc:	b	12914 <__sancov_default_options@@Base+0x1d1c>
   129c0:	stp	x19, x20, [sp, #-64]!
   129c4:	stp	x23, x24, [sp, #32]
   129c8:	mov	x23, x3
   129cc:	mov	x24, x4
   129d0:	str	x30, [sp, #56]
   129d4:	cbz	x2, 12c80 <__sancov_default_options@@Base+0x2088>
   129d8:	stp	x21, x22, [sp, #16]
   129dc:	mov	x19, x2
   129e0:	mov	x20, x0
   129e4:	mov	x22, x1
   129e8:	cbz	x3, 12c98 <__sancov_default_options@@Base+0x20a0>
   129ec:	str	x25, [sp, #48]
   129f0:	mov	x0, #0xffffffffffff        	// #281474976710655
   129f4:	cmp	x2, x0
   129f8:	b.ls	12c10 <__sancov_default_options@@Base+0x2018>  // b.plast
   129fc:	add	x25, x20, #0xc1, lsl #12
   12a00:	mov	w2, #0x1                   	// #1
   12a04:	ldxrb	w1, [x25]
   12a08:	stxrb	w0, w2, [x25]
   12a0c:	cbnz	w0, 12a04 <__sancov_default_options@@Base+0x1e0c>
   12a10:	dmb	ish
   12a14:	tst	w1, #0xff
   12a18:	b.eq	12a24 <__sancov_default_options@@Base+0x1e2c>  // b.none
   12a1c:	mov	x0, x25
   12a20:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   12a24:	add	x21, x20, #0x80, lsl #12
   12a28:	add	x21, x21, #0xc00
   12a2c:	add	x1, x21, #0x1c0
   12a30:	add	x2, x1, #0x40, lsl #12
   12a34:	ldr	x7, [x2, #16]
   12a38:	cbz	x7, 12c58 <__sancov_default_options@@Base+0x2060>
   12a3c:	ldr	x6, [x1, #8]
   12a40:	mov	x3, #0x0                   	// #0
   12a44:	add	x8, x6, x7, lsl #3
   12a48:	ldr	x7, [x6]
   12a4c:	cmp	x7, x19
   12a50:	b.hi	12a64 <__sancov_default_options@@Base+0x1e6c>  // b.pmore
   12a54:	sub	x1, x19, x3
   12a58:	sub	x2, x19, x7
   12a5c:	cmp	x2, x1
   12a60:	csel	x3, x3, x7, cs  // cs = hs, nlast
   12a64:	add	x6, x6, #0x8
   12a68:	cmp	x8, x6
   12a6c:	b.ne	12a48 <__sancov_default_options@@Base+0x1e50>  // b.any
   12a70:	cbz	x3, 12c58 <__sancov_default_options@@Base+0x2060>
   12a74:	ldr	x4, [x3]
   12a78:	cmp	x4, x3
   12a7c:	b.hi	12f44 <__sancov_default_options@@Base+0x234c>  // b.pmore
   12a80:	ldr	x0, [x3, #8]
   12a84:	add	x4, x4, x0
   12a88:	cmp	x4, x3
   12a8c:	b.ls	12f5c <__sancov_default_options@@Base+0x2364>  // b.plast
   12a90:	cmp	x19, x3
   12a94:	b.cc	12f74 <__sancov_default_options@@Base+0x237c>  // b.lo, b.ul, b.last
   12a98:	cmp	x4, x19
   12a9c:	b.ls	12c58 <__sancov_default_options@@Base+0x2060>  // b.plast
   12aa0:	ldr	x0, [x21, #448]
   12aa4:	sub	x1, x0, #0x1
   12aa8:	tst	x1, x3
   12aac:	b.ne	12eb8 <__sancov_default_options@@Base+0x22c0>  // b.any
   12ab0:	dmb	ish
   12ab4:	strb	wzr, [x25]
   12ab8:	cmn	x3, x0
   12abc:	b.eq	12c60 <__sancov_default_options@@Base+0x2068>  // b.none
   12ac0:	mov	x0, #0xffffffffffff        	// #281474976710655
   12ac4:	cmp	x19, x0
   12ac8:	b.ls	12e00 <__sancov_default_options@@Base+0x2208>  // b.plast
   12acc:	ldr	x1, [x21, #448]
   12ad0:	sub	x0, x1, #0x1
   12ad4:	tst	x19, x0
   12ad8:	b.ne	12e98 <__sancov_default_options@@Base+0x22a0>  // b.any
   12adc:	sub	x2, x19, x1
   12ae0:	tst	x1, x0
   12ae4:	ldr	x5, [x2, #16]
   12ae8:	b.ne	12f90 <__sancov_default_options@@Base+0x2398>  // b.any
   12aec:	add	x5, x5, x0
   12af0:	neg	x0, x1
   12af4:	and	x0, x5, x0
   12af8:	cmp	x0, x23
   12afc:	csel	x21, x0, x23, ls  // ls = plast
   12b00:	mov	x2, x23
   12b04:	mov	x3, x24
   12b08:	mov	x1, x22
   12b0c:	mov	x0, x20
   12b10:	bl	123c0 <__sancov_default_options@@Base+0x17c8>
   12b14:	mov	x23, x0
   12b18:	cbz	x0, 12b28 <__sancov_default_options@@Base+0x1f30>
   12b1c:	mov	x2, x21
   12b20:	mov	x1, x19
   12b24:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   12b28:	mov	x0, #0xffffffffffff        	// #281474976710655
   12b2c:	cmp	x19, x0
   12b30:	b.ls	12e0c <__sancov_default_options@@Base+0x2214>  // b.plast
   12b34:	add	x21, x20, #0x80, lsl #12
   12b38:	add	x21, x21, #0xc00
   12b3c:	ldr	x4, [x21, #448]
   12b40:	sub	x0, x4, #0x1
   12b44:	tst	x19, x0
   12b48:	b.ne	12e98 <__sancov_default_options@@Base+0x22a0>  // b.any
   12b4c:	sub	x19, x19, x4
   12b50:	add	x25, x20, #0xc1, lsl #12
   12b54:	mov	w1, #0x1                   	// #1
   12b58:	ldxrb	w0, [x25]
   12b5c:	stxrb	w2, w1, [x25]
   12b60:	cbnz	w2, 12b58 <__sancov_default_options@@Base+0x1f60>
   12b64:	dmb	ish
   12b68:	tst	w0, #0xff
   12b6c:	b.eq	12b78 <__sancov_default_options@@Base+0x1f80>  // b.none
   12b70:	mov	x0, x25
   12b74:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   12b78:	ldr	x0, [x19, #24]
   12b7c:	add	x21, x21, #0x1c0
   12b80:	ldr	x2, [x21, #8]
   12b84:	ldr	x3, [x2, x0, lsl #3]
   12b88:	cmp	x3, x19
   12b8c:	b.ne	12fa0 <__sancov_default_options@@Base+0x23a8>  // b.any
   12b90:	add	x21, x21, #0x40, lsl #12
   12b94:	ldr	x4, [x21, #16]
   12b98:	cmp	x0, x4
   12b9c:	b.cs	12fbc <__sancov_default_options@@Base+0x23c4>  // b.hs, b.nlast
   12ba0:	sub	x4, x4, #0x1
   12ba4:	ldr	x3, [x19, #8]
   12ba8:	ldr	x5, [x2, x4, lsl #3]
   12bac:	str	x4, [x21, #16]
   12bb0:	str	x5, [x2, x0, lsl #3]
   12bb4:	ldp	x4, x2, [x21, #40]
   12bb8:	str	x0, [x5, #24]
   12bbc:	ldr	x0, [x25, #24]
   12bc0:	strb	wzr, [x21, #24]
   12bc4:	sub	x0, x0, x3
   12bc8:	sub	x2, x2, x3
   12bcc:	add	x4, x4, #0x1
   12bd0:	stp	x4, x2, [x21, #40]
   12bd4:	str	x0, [x25, #24]
   12bd8:	ldr	x0, [x25, #32]
   12bdc:	sub	x0, x0, x3
   12be0:	str	x0, [x25, #32]
   12be4:	dmb	ish
   12be8:	strb	wzr, [x25]
   12bec:	ldp	x0, x1, [x19]
   12bf0:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   12bf4:	ldr	x25, [sp, #48]
   12bf8:	mov	x0, x23
   12bfc:	ldp	x21, x22, [sp, #16]
   12c00:	ldp	x23, x24, [sp, #32]
   12c04:	ldr	x30, [sp, #56]
   12c08:	ldp	x19, x20, [sp], #64
   12c0c:	ret
   12c10:	lsr	x0, x2, #32
   12c14:	ldr	x1, [x20, x0, lsl #3]
   12c18:	dmb	ish
   12c1c:	cbz	x1, 129fc <__sancov_default_options@@Base+0x1e04>
   12c20:	lsr	w2, w2, #20
   12c24:	lsr	x3, x19, #20
   12c28:	ldrb	w1, [x1, x2]
   12c2c:	cbz	w1, 129fc <__sancov_default_options@@Base+0x1e04>
   12c30:	lsl	x1, x0, #3
   12c34:	ldr	x0, [x20, x0, lsl #3]
   12c38:	dmb	ish
   12c3c:	cbz	x0, 12c4c <__sancov_default_options@@Base+0x2054>
   12c40:	and	x3, x3, #0xfff
   12c44:	ldrb	w0, [x0, x3]
   12c48:	cbnz	w0, 12ed8 <__sancov_default_options@@Base+0x22e0>
   12c4c:	add	x21, x20, #0x80, lsl #12
   12c50:	add	x21, x21, #0xc00
   12c54:	b	12acc <__sancov_default_options@@Base+0x1ed4>
   12c58:	dmb	ish
   12c5c:	strb	wzr, [x25]
   12c60:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12c64:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12c68:	add	x2, x2, #0x238
   12c6c:	add	x0, x0, #0x9d8
   12c70:	mov	x4, #0x0                   	// #0
   12c74:	mov	x3, #0x0                   	// #0
   12c78:	mov	w1, #0x62                  	// #98
   12c7c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12c80:	mov	x2, x23
   12c84:	mov	x3, x4
   12c88:	ldp	x23, x24, [sp, #32]
   12c8c:	ldr	x30, [sp, #56]
   12c90:	ldp	x19, x20, [sp], #64
   12c94:	b	123c0 <__sancov_default_options@@Base+0x17c8>
   12c98:	mov	x0, #0xffffffffffff        	// #281474976710655
   12c9c:	cmp	x2, x0
   12ca0:	b.hi	12d30 <__sancov_default_options@@Base+0x2138>  // b.pmore
   12ca4:	lsr	x1, x2, #32
   12ca8:	ldr	x0, [x20, x1, lsl #3]
   12cac:	dmb	ish
   12cb0:	cbz	x0, 12d30 <__sancov_default_options@@Base+0x2138>
   12cb4:	lsr	w2, w2, #20
   12cb8:	ldrb	w0, [x0, x2]
   12cbc:	cbz	w0, 12d30 <__sancov_default_options@@Base+0x2138>
   12cc0:	ldr	x0, [x20, x1, lsl #3]
   12cc4:	dmb	ish
   12cc8:	cbz	x0, 12fe8 <__sancov_default_options@@Base+0x23f0>
   12ccc:	ldrb	w21, [x0, x2]
   12cd0:	cbz	x21, 12fe8 <__sancov_default_options@@Base+0x23f0>
   12cd4:	cmp	x21, #0x35
   12cd8:	b.hi	1302c <__sancov_default_options@@Base+0x2434>  // b.pmore
   12cdc:	lsl	x23, x21, #10
   12ce0:	add	x1, x22, x23
   12ce4:	ldr	x2, [x1, #8]
   12ce8:	cbz	x2, 1315c <__sancov_default_options@@Base+0x2564>
   12cec:	ldr	x0, [x22, x23]
   12cf0:	cmp	x0, x2
   12cf4:	b.eq	13144 <__sancov_default_options@@Base+0x254c>  // b.none
   12cf8:	add	x1, x0, x21, lsl #7
   12cfc:	add	x3, x22, x23
   12d00:	add	x1, x1, #0x4
   12d04:	add	x0, x0, #0x1
   12d08:	mov	x4, #0xd800                	// #55296
   12d0c:	add	x2, x22, x4
   12d10:	str	x0, [x22, x23]
   12d14:	mov	x23, #0x0                   	// #0
   12d18:	str	x19, [x22, x1, lsl #3]
   12d1c:	ldr	x0, [x2, #16]
   12d20:	ldr	x1, [x3, #16]
   12d24:	sub	x0, x0, x1
   12d28:	str	x0, [x2, #16]
   12d2c:	b	12bf8 <__sancov_default_options@@Base+0x2000>
   12d30:	add	x21, x20, #0x80, lsl #12
   12d34:	add	x21, x21, #0xc00
   12d38:	ldr	x4, [x21, #448]
   12d3c:	str	x25, [sp, #48]
   12d40:	sub	x0, x4, #0x1
   12d44:	tst	x19, x0
   12d48:	b.ne	12e98 <__sancov_default_options@@Base+0x22a0>  // b.any
   12d4c:	sub	x19, x19, x4
   12d50:	add	x25, x20, #0xc1, lsl #12
   12d54:	mov	w1, #0x1                   	// #1
   12d58:	ldxrb	w0, [x25]
   12d5c:	stxrb	w2, w1, [x25]
   12d60:	cbnz	w2, 12d58 <__sancov_default_options@@Base+0x2160>
   12d64:	dmb	ish
   12d68:	tst	w0, #0xff
   12d6c:	b.eq	12d78 <__sancov_default_options@@Base+0x2180>  // b.none
   12d70:	mov	x0, x25
   12d74:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   12d78:	ldr	x0, [x19, #24]
   12d7c:	add	x21, x21, #0x1c0
   12d80:	ldr	x2, [x21, #8]
   12d84:	ldr	x3, [x2, x0, lsl #3]
   12d88:	cmp	x3, x19
   12d8c:	b.ne	12fa0 <__sancov_default_options@@Base+0x23a8>  // b.any
   12d90:	add	x21, x21, #0x40, lsl #12
   12d94:	ldr	x4, [x21, #16]
   12d98:	cmp	x0, x4
   12d9c:	b.cs	12fbc <__sancov_default_options@@Base+0x23c4>  // b.hs, b.nlast
   12da0:	sub	x4, x4, #0x1
   12da4:	ldr	x3, [x19, #8]
   12da8:	ldr	x5, [x2, x4, lsl #3]
   12dac:	str	x4, [x21, #16]
   12db0:	str	x5, [x2, x0, lsl #3]
   12db4:	ldp	x4, x2, [x21, #40]
   12db8:	str	x0, [x5, #24]
   12dbc:	ldr	x0, [x25, #24]
   12dc0:	strb	wzr, [x21, #24]
   12dc4:	sub	x0, x0, x3
   12dc8:	sub	x2, x2, x3
   12dcc:	add	x4, x4, #0x1
   12dd0:	stp	x4, x2, [x21, #40]
   12dd4:	str	x0, [x25, #24]
   12dd8:	ldr	x0, [x25, #32]
   12ddc:	sub	x0, x0, x3
   12de0:	str	x0, [x25, #32]
   12de4:	dmb	ish
   12de8:	strb	wzr, [x25]
   12dec:	ldp	x0, x1, [x19]
   12df0:	mov	x23, #0x0                   	// #0
   12df4:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   12df8:	ldr	x25, [sp, #48]
   12dfc:	b	12bf8 <__sancov_default_options@@Base+0x2000>
   12e00:	lsr	x3, x19, #20
   12e04:	lsr	x0, x19, #32
   12e08:	b	12c30 <__sancov_default_options@@Base+0x2038>
   12e0c:	lsr	x1, x19, #32
   12e10:	ldr	x0, [x20, x1, lsl #3]
   12e14:	dmb	ish
   12e18:	cbz	x0, 12b34 <__sancov_default_options@@Base+0x1f3c>
   12e1c:	lsr	w2, w19, #20
   12e20:	ldrb	w0, [x0, x2]
   12e24:	cbz	w0, 12b34 <__sancov_default_options@@Base+0x1f3c>
   12e28:	ldr	x0, [x20, x1, lsl #3]
   12e2c:	dmb	ish
   12e30:	cbz	x0, 12fec <__sancov_default_options@@Base+0x23f4>
   12e34:	ldrb	w21, [x0, x2]
   12e38:	cbz	x21, 12fec <__sancov_default_options@@Base+0x23f4>
   12e3c:	cmp	x21, #0x35
   12e40:	b.hi	13030 <__sancov_default_options@@Base+0x2438>  // b.pmore
   12e44:	lsl	x24, x21, #10
   12e48:	add	x1, x22, x24
   12e4c:	ldr	x2, [x1, #8]
   12e50:	cbz	x2, 13068 <__sancov_default_options@@Base+0x2470>
   12e54:	ldr	x0, [x22, x24]
   12e58:	cmp	x2, x0
   12e5c:	b.eq	13050 <__sancov_default_options@@Base+0x2458>  // b.none
   12e60:	add	x1, x0, x21, lsl #7
   12e64:	add	x3, x22, x24
   12e68:	add	x1, x1, #0x4
   12e6c:	add	x0, x0, #0x1
   12e70:	mov	x2, #0xd800                	// #55296
   12e74:	add	x2, x22, x2
   12e78:	str	x0, [x22, x24]
   12e7c:	str	x19, [x22, x1, lsl #3]
   12e80:	ldr	x0, [x2, #16]
   12e84:	ldr	x1, [x3, #16]
   12e88:	ldr	x25, [sp, #48]
   12e8c:	sub	x0, x0, x1
   12e90:	str	x0, [x2, #16]
   12e94:	b	12bf8 <__sancov_default_options@@Base+0x2000>
   12e98:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12e9c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12ea0:	add	x2, x2, #0x5a0
   12ea4:	add	x0, x0, #0x300
   12ea8:	mov	x4, #0x0                   	// #0
   12eac:	mov	x3, #0x0                   	// #0
   12eb0:	mov	w1, #0x123                 	// #291
   12eb4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12eb8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12ebc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12ec0:	add	x2, x2, #0x438
   12ec4:	add	x0, x0, #0x300
   12ec8:	mov	x4, #0x0                   	// #0
   12ecc:	mov	x3, #0x0                   	// #0
   12ed0:	mov	w1, #0x12b                 	// #299
   12ed4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12ed8:	ldr	x0, [x20, x1]
   12edc:	dmb	ish
   12ee0:	cbz	x0, 1300c <__sancov_default_options@@Base+0x2414>
   12ee4:	ldrb	w0, [x0, x3]
   12ee8:	cbz	w0, 1300c <__sancov_default_options@@Base+0x2414>
   12eec:	ldr	x21, [x20, x1]
   12ef0:	dmb	ish
   12ef4:	cbz	x21, 12b00 <__sancov_default_options@@Base+0x1f08>
   12ef8:	ldrb	w0, [x21, x3]
   12efc:	cmp	w0, #0x35
   12f00:	and	x1, x0, #0xff
   12f04:	b.eq	12fd8 <__sancov_default_options@@Base+0x23e0>  // b.none
   12f08:	ubfiz	x0, x0, #4, #8
   12f0c:	cmp	x0, x23
   12f10:	csel	x21, x0, x23, ls  // ls = plast
   12f14:	cmp	x1, #0x10
   12f18:	b.ls	12b00 <__sancov_default_options@@Base+0x1f08>  // b.plast
   12f1c:	sub	x1, x1, #0x10
   12f20:	mov	x0, #0x100                 	// #256
   12f24:	and	x21, x1, #0x3
   12f28:	lsr	x1, x1, #2
   12f2c:	lsl	x1, x0, x1
   12f30:	lsr	x0, x1, #2
   12f34:	madd	x0, x0, x21, x1
   12f38:	cmp	x0, x23
   12f3c:	csel	x21, x0, x23, ls  // ls = plast
   12f40:	b	12b00 <__sancov_default_options@@Base+0x1f08>
   12f44:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12f48:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12f4c:	add	x2, x2, #0x3b8
   12f50:	add	x0, x0, #0x300
   12f54:	mov	w1, #0xc1                  	// #193
   12f58:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12f5c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12f60:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12f64:	add	x2, x2, #0x3e0
   12f68:	add	x0, x0, #0x300
   12f6c:	mov	w1, #0xc2                  	// #194
   12f70:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12f74:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12f78:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12f7c:	mov	x4, x19
   12f80:	add	x2, x2, #0x418
   12f84:	add	x0, x0, #0x300
   12f88:	mov	w1, #0xc3                  	// #195
   12f8c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12f90:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   12f94:	add	x0, x0, #0x240
   12f98:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   12f9c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   12fa0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12fa4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12fa8:	mov	x4, x19
   12fac:	add	x2, x2, #0x5c8
   12fb0:	add	x0, x0, #0x300
   12fb4:	mov	w1, #0x88                  	// #136
   12fb8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12fbc:	mov	x3, x0
   12fc0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12fc4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12fc8:	add	x2, x2, #0x5e8
   12fcc:	add	x0, x0, #0x300
   12fd0:	mov	w1, #0x89                  	// #137
   12fd4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   12fd8:	cmp	x23, #0x200
   12fdc:	mov	x0, #0x200                 	// #512
   12fe0:	csel	x21, x23, x0, ls  // ls = plast
   12fe4:	b	12b00 <__sancov_default_options@@Base+0x1f08>
   12fe8:	str	x25, [sp, #48]
   12fec:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12ff0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   12ff4:	add	x2, x2, #0x810
   12ff8:	add	x0, x0, #0x708
   12ffc:	mov	x4, #0x0                   	// #0
   13000:	mov	x3, #0x0                   	// #0
   13004:	mov	w1, #0xae                  	// #174
   13008:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1300c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   13010:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   13014:	add	x2, x2, #0x238
   13018:	add	x0, x0, #0x258
   1301c:	mov	x4, #0x0                   	// #0
   13020:	mov	x3, #0x0                   	// #0
   13024:	mov	w1, #0xcc                  	// #204
   13028:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1302c:	str	x25, [sp, #48]
   13030:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   13034:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   13038:	mov	x3, x21
   1303c:	add	x2, x2, #0x6e8
   13040:	add	x0, x0, #0x708
   13044:	mov	x4, #0x36                  	// #54
   13048:	mov	w1, #0xaf                  	// #175
   1304c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   13050:	mov	x0, x22
   13054:	mov	x2, x20
   13058:	mov	x3, x21
   1305c:	bl	12858 <__sancov_default_options@@Base+0x1c60>
   13060:	ldr	x0, [x22, x24]
   13064:	b	12e60 <__sancov_default_options@@Base+0x2268>
   13068:	mov	x2, #0x1                   	// #1
   1306c:	mov	x11, x2
   13070:	mov	x12, #0x7c                  	// #124
   13074:	mov	x10, #0x14                  	// #20
   13078:	mov	x9, #0x100                 	// #256
   1307c:	mov	w8, #0x4000                	// #16384
   13080:	mov	x7, #0x3e                  	// #62
   13084:	nop
   13088:	add	x5, x22, x2, lsl #10
   1308c:	lsl	x6, x2, #4
   13090:	mov	x4, x5
   13094:	mov	x0, #0x14                  	// #20
   13098:	mov	x3, x2
   1309c:	add	x2, x2, #0x1
   130a0:	stp	x12, x6, [x5, #8]
   130a4:	cmp	x2, #0x36
   130a8:	str	x0, [x4, #24]
   130ac:	b.eq	1311c <__sancov_default_options@@Base+0x2524>  // b.none
   130b0:	cmp	x2, #0x35
   130b4:	b.eq	13124 <__sancov_default_options@@Base+0x252c>  // b.none
   130b8:	cmp	x2, #0x10
   130bc:	b.ls	13088 <__sancov_default_options@@Base+0x2490>  // b.plast
   130c0:	sub	x0, x3, #0xf
   130c4:	add	x4, x4, #0x400
   130c8:	and	x6, x0, #0x3
   130cc:	mov	x3, x2
   130d0:	lsr	x0, x0, #2
   130d4:	add	x2, x2, #0x1
   130d8:	lsl	x0, x9, x0
   130dc:	lsr	x5, x0, #2
   130e0:	madd	x5, x5, x6, x0
   130e4:	str	x5, [x4, #16]
   130e8:	udiv	w0, w8, w5
   130ec:	cmp	x0, #0x0
   130f0:	csel	x0, x0, x11, ne  // ne = any
   130f4:	cmp	x0, #0x3e
   130f8:	csel	x0, x0, x7, ls  // ls = plast
   130fc:	add	x6, x0, #0x2
   13100:	lsl	x0, x0, #1
   13104:	str	x0, [x4, #8]
   13108:	cmp	x5, x6, lsl #3
   1310c:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   13110:	str	x0, [x4, #24]
   13114:	cmp	x2, #0x36
   13118:	b.ne	130b0 <__sancov_default_options@@Base+0x24b8>  // b.any
   1311c:	ldr	x2, [x1, #8]
   13120:	b	12e54 <__sancov_default_options@@Base+0x225c>
   13124:	add	x0, x22, #0x8, lsl #12
   13128:	mov	x2, #0x200                 	// #512
   1312c:	mov	x3, #0x40                  	// #64
   13130:	str	x3, [x0, #21512]
   13134:	str	x2, [x0, #21520]
   13138:	str	xzr, [x0, #21528]
   1313c:	ldr	x2, [x1, #8]
   13140:	b	12e54 <__sancov_default_options@@Base+0x225c>
   13144:	mov	x0, x22
   13148:	mov	x2, x20
   1314c:	mov	x3, x21
   13150:	bl	12858 <__sancov_default_options@@Base+0x1c60>
   13154:	ldr	x0, [x22, x23]
   13158:	b	12cf8 <__sancov_default_options@@Base+0x2100>
   1315c:	mov	x2, #0x1                   	// #1
   13160:	mov	x11, x2
   13164:	mov	x12, #0x7c                  	// #124
   13168:	mov	x10, #0x14                  	// #20
   1316c:	mov	x9, #0x100                 	// #256
   13170:	mov	w8, #0x4000                	// #16384
   13174:	mov	x7, #0x3e                  	// #62
   13178:	add	x5, x22, x2, lsl #10
   1317c:	lsl	x6, x2, #4
   13180:	mov	x4, x5
   13184:	mov	x0, #0x14                  	// #20
   13188:	mov	x3, x2
   1318c:	add	x2, x2, #0x1
   13190:	stp	x12, x6, [x5, #8]
   13194:	cmp	x2, #0x36
   13198:	str	x0, [x4, #24]
   1319c:	b.eq	1320c <__sancov_default_options@@Base+0x2614>  // b.none
   131a0:	cmp	x2, #0x35
   131a4:	b.eq	13214 <__sancov_default_options@@Base+0x261c>  // b.none
   131a8:	cmp	x2, #0x10
   131ac:	b.ls	13178 <__sancov_default_options@@Base+0x2580>  // b.plast
   131b0:	sub	x0, x3, #0xf
   131b4:	add	x4, x4, #0x400
   131b8:	and	x6, x0, #0x3
   131bc:	mov	x3, x2
   131c0:	lsr	x0, x0, #2
   131c4:	add	x2, x2, #0x1
   131c8:	lsl	x0, x9, x0
   131cc:	lsr	x5, x0, #2
   131d0:	madd	x5, x5, x6, x0
   131d4:	str	x5, [x4, #16]
   131d8:	udiv	w0, w8, w5
   131dc:	cmp	x0, #0x0
   131e0:	csel	x0, x0, x11, ne  // ne = any
   131e4:	cmp	x0, #0x3e
   131e8:	csel	x0, x0, x7, ls  // ls = plast
   131ec:	add	x6, x0, #0x2
   131f0:	lsl	x0, x0, #1
   131f4:	str	x0, [x4, #8]
   131f8:	cmp	x5, x6, lsl #3
   131fc:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   13200:	str	x0, [x4, #24]
   13204:	cmp	x2, #0x36
   13208:	b.ne	131a0 <__sancov_default_options@@Base+0x25a8>  // b.any
   1320c:	ldr	x2, [x1, #8]
   13210:	b	12cec <__sancov_default_options@@Base+0x20f4>
   13214:	add	x0, x22, #0x8, lsl #12
   13218:	mov	x2, #0x200                 	// #512
   1321c:	mov	x3, #0x40                  	// #64
   13220:	str	x3, [x0, #21512]
   13224:	str	x2, [x0, #21520]
   13228:	str	xzr, [x0, #21528]
   1322c:	ldr	x2, [x1, #8]
   13230:	b	12cec <__sancov_default_options@@Base+0x20f4>
   13234:	nop
   13238:	str	x30, [sp, #-16]!
   1323c:	bl	6ac0 <__errno_location@plt>
   13240:	mov	w1, #0xc                   	// #12
   13244:	ldr	x30, [sp], #16
   13248:	str	w1, [x0]
   1324c:	ret
   13250:	stp	x19, x20, [sp, #-64]!
   13254:	mov	x20, x0
   13258:	add	x19, sp, #0x20
   1325c:	stp	x21, x30, [sp, #16]
   13260:	mov	x0, x19
   13264:	mov	x21, x1
   13268:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1326c:	add	x1, x1, #0xf98
   13270:	bl	134b8 <__sancov_default_options@@Base+0x28c0>
   13274:	adrp	x4, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   13278:	mov	x3, x21
   1327c:	mov	x2, x20
   13280:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   13284:	ldr	x1, [x4, #4008]
   13288:	add	x0, x0, #0xfa8
   1328c:	ldr	x1, [x1]
   13290:	bl	1e648 <OnPrint@@Base+0x398>
   13294:	mov	x0, x19
   13298:	bl	13508 <__sancov_default_options@@Base+0x2910>
   1329c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   132a0:	stp	x19, x20, [sp, #-80]!
   132a4:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   132a8:	mov	x2, x1
   132ac:	stp	x21, x22, [sp, #16]
   132b0:	add	x21, sp, #0x30
   132b4:	mov	x20, x0
   132b8:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   132bc:	mov	x0, x21
   132c0:	add	x1, x1, #0x10
   132c4:	str	x30, [sp, #32]
   132c8:	bl	134b8 <__sancov_default_options@@Base+0x28c0>
   132cc:	ldr	x19, [x19, #4000]
   132d0:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   132d4:	ldr	x0, [x0, #4008]
   132d8:	ldr	x3, [x19]
   132dc:	ldr	x22, [x0]
   132e0:	cbz	x3, 13304 <__sancov_default_options@@Base+0x270c>
   132e4:	mov	x2, x20
   132e8:	mov	x1, x22
   132ec:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   132f0:	add	x0, x0, #0x28
   132f4:	bl	1e648 <OnPrint@@Base+0x398>
   132f8:	mov	x0, x21
   132fc:	bl	13508 <__sancov_default_options@@Base+0x2910>
   13300:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   13304:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   13308:	mov	x3, x0
   1330c:	str	x0, [x19]
   13310:	b	132e4 <__sancov_default_options@@Base+0x26ec>
   13314:	nop
   13318:	stp	x19, x20, [sp, #-64]!
   1331c:	mov	x2, x1
   13320:	mov	x20, x0
   13324:	add	x19, sp, #0x20
   13328:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   1332c:	mov	x0, x19
   13330:	add	x1, x1, #0xa8
   13334:	str	x30, [sp, #16]
   13338:	bl	134b8 <__sancov_default_options@@Base+0x28c0>
   1333c:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   13340:	mov	x2, x20
   13344:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   13348:	add	x0, x0, #0xc8
   1334c:	ldr	x1, [x1, #4008]
   13350:	ldr	x1, [x1]
   13354:	bl	1e648 <OnPrint@@Base+0x398>
   13358:	mov	x0, x19
   1335c:	bl	13508 <__sancov_default_options@@Base+0x2910>
   13360:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   13364:	nop
   13368:	stp	x19, x20, [sp, #-80]!
   1336c:	mov	x20, x1
   13370:	add	x19, sp, #0x30
   13374:	stp	x21, x30, [sp, #16]
   13378:	mov	x21, x0
   1337c:	mov	x0, x19
   13380:	str	x1, [sp, #40]
   13384:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   13388:	add	x1, x1, #0x118
   1338c:	bl	134b8 <__sancov_default_options@@Base+0x28c0>
   13390:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   13394:	mov	x3, x21
   13398:	mov	x2, x20
   1339c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   133a0:	ldr	x1, [x1, #4008]
   133a4:	add	x0, x0, #0x138
   133a8:	ldr	x1, [x1]
   133ac:	bl	1e648 <OnPrint@@Base+0x398>
   133b0:	mov	x0, x19
   133b4:	bl	13508 <__sancov_default_options@@Base+0x2910>
   133b8:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   133bc:	nop
   133c0:	stp	x19, x20, [sp, #-64]!
   133c4:	mov	x2, x1
   133c8:	mov	x20, x0
   133cc:	add	x19, sp, #0x20
   133d0:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   133d4:	mov	x0, x19
   133d8:	add	x1, x1, #0x1d8
   133dc:	str	x30, [sp, #16]
   133e0:	bl	134b8 <__sancov_default_options@@Base+0x28c0>
   133e4:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   133e8:	mov	x2, x20
   133ec:	mov	x3, #0x8                   	// #8
   133f0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   133f4:	ldr	x1, [x1, #4008]
   133f8:	add	x0, x0, #0x200
   133fc:	ldr	x1, [x1]
   13400:	bl	1e648 <OnPrint@@Base+0x398>
   13404:	mov	x0, x19
   13408:	bl	13508 <__sancov_default_options@@Base+0x2910>
   1340c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   13410:	stp	x19, x20, [sp, #-80]!
   13414:	mov	x20, x0
   13418:	add	x19, sp, #0x30
   1341c:	stp	x21, x30, [sp, #16]
   13420:	mov	x0, x19
   13424:	mov	x21, x1
   13428:	str	x1, [sp, #40]
   1342c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   13430:	add	x1, x1, #0x288
   13434:	bl	134b8 <__sancov_default_options@@Base+0x28c0>
   13438:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1343c:	mov	x3, x21
   13440:	mov	x2, x20
   13444:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   13448:	ldr	x1, [x1, #4008]
   1344c:	add	x0, x0, #0x2a0
   13450:	ldr	x1, [x1]
   13454:	bl	1e648 <OnPrint@@Base+0x398>
   13458:	mov	x0, x19
   1345c:	bl	13508 <__sancov_default_options@@Base+0x2910>
   13460:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   13464:	nop
   13468:	stp	x19, x20, [sp, #-64]!
   1346c:	mov	x2, x1
   13470:	mov	x20, x0
   13474:	add	x19, sp, #0x20
   13478:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   1347c:	mov	x0, x19
   13480:	add	x1, x1, #0x2f8
   13484:	str	x30, [sp, #16]
   13488:	bl	134b8 <__sancov_default_options@@Base+0x28c0>
   1348c:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   13490:	mov	x2, x20
   13494:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   13498:	add	x0, x0, #0x308
   1349c:	ldr	x1, [x1, #4008]
   134a0:	ldr	x1, [x1]
   134a4:	bl	1e648 <OnPrint@@Base+0x398>
   134a8:	mov	x0, x19
   134ac:	bl	13508 <__sancov_default_options@@Base+0x2910>
   134b0:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   134b4:	nop
   134b8:	stp	x19, x20, [sp, #-32]!
   134bc:	mov	x19, x0
   134c0:	mov	x20, x2
   134c4:	stp	x21, x30, [sp, #16]
   134c8:	mov	x21, x1
   134cc:	bl	217c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbe0>
   134d0:	stp	x21, x20, [x19, #8]
   134d4:	bl	20e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a8>
   134d8:	strb	w0, [x19, #24]
   134dc:	ldp	x21, x30, [sp, #16]
   134e0:	tst	w0, #0xff
   134e4:	ldp	x19, x20, [sp], #32
   134e8:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   134ec:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   134f0:	add	x2, x2, #0x5c8
   134f4:	add	x1, x1, #0x28
   134f8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   134fc:	csel	x1, x1, x2, ne  // ne = any
   13500:	add	x0, x0, #0x948
   13504:	b	1e5c0 <OnPrint@@Base+0x310>
   13508:	stp	x19, x30, [sp, #-16]!
   1350c:	mov	x19, x0
   13510:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   13514:	add	x2, x2, #0x5c8
   13518:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1351c:	ldrb	w3, [x19, #24]
   13520:	add	x1, x1, #0x938
   13524:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   13528:	add	x0, x0, #0x948
   1352c:	cmp	w3, #0x0
   13530:	csel	x1, x1, x2, ne  // ne = any
   13534:	bl	1e5c0 <OnPrint@@Base+0x310>
   13538:	ldr	x0, [x19, #16]
   1353c:	bl	20260 <OnPrint@@Base+0x1fb0>
   13540:	bl	11028 <__sancov_default_options@@Base+0x430>
   13544:	ldp	x0, x1, [x19, #8]
   13548:	mov	x2, #0x0                   	// #0
   1354c:	bl	20ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x308>
   13550:	mov	x0, x19
   13554:	ldp	x19, x30, [sp], #16
   13558:	b	21b70 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf90>
   1355c:	nop
   13560:	stp	x19, x20, [sp, #-32]!
   13564:	adrp	x19, 1b4000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   13568:	add	x19, x19, #0xa30
   1356c:	mov	x1, #0x1000                	// #4096
   13570:	mov	x0, x19
   13574:	str	x30, [sp, #24]
   13578:	bl	1aa30 <__sanitizer_set_report_fd@@Base+0x3780>
   1357c:	mov	x0, x19
   13580:	mov	w1, #0x2f                  	// #47
   13584:	bl	18c08 <__sanitizer_set_report_fd@@Base+0x1958>
   13588:	cbz	x0, 135d0 <__sancov_default_options@@Base+0x29d8>
   1358c:	add	x20, x0, #0x1
   13590:	str	x21, [sp, #16]
   13594:	mov	x0, x20
   13598:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   1359c:	cmp	x20, x19
   135a0:	mov	x21, x0
   135a4:	b.eq	135bc <__sancov_default_options@@Base+0x29c4>  // b.none
   135a8:	mov	x2, x0
   135ac:	mov	x1, x20
   135b0:	mov	x0, x19
   135b4:	bl	18948 <__sanitizer_set_report_fd@@Base+0x1698>
   135b8:	strb	wzr, [x21, x19]
   135bc:	mov	x0, x21
   135c0:	ldr	x21, [sp, #16]
   135c4:	ldr	x30, [sp, #24]
   135c8:	ldp	x19, x20, [sp], #32
   135cc:	ret
   135d0:	mov	x0, x19
   135d4:	ldr	x30, [sp, #24]
   135d8:	ldp	x19, x20, [sp], #32
   135dc:	b	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   135e0:	str	x30, [sp, #-16]!
   135e4:	mov	x1, #0x1000                	// #4096
   135e8:	adrp	x0, 1b5000 <__asan_cplus_demangle_operators@@Base+0x155be0>
   135ec:	add	x0, x0, #0xa30
   135f0:	bl	1a998 <__sanitizer_set_report_fd@@Base+0x36e8>
   135f4:	ldr	x30, [sp], #16
   135f8:	b	13560 <__sancov_default_options@@Base+0x2968>
   135fc:	nop
   13600:	str	x30, [sp, #-16]!
   13604:	tst	w4, #0xff
   13608:	b.ne	1361c <__sancov_default_options@@Base+0x2a24>  // b.any
   1360c:	adrp	x8, 1b4000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   13610:	mov	x7, x0
   13614:	ldr	w0, [x8, #2496]
   13618:	cbz	w0, 1362c <__sancov_default_options@@Base+0x2a34>
   1361c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   13620:	add	x0, x0, #0x350
   13624:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   13628:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1362c:	adrp	x4, 60000 <_Unwind_Backtrace@GCC_3.3>
   13630:	mov	x5, x1
   13634:	mov	w6, w3
   13638:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   1363c:	ldr	x1, [x4, #968]
   13640:	mov	x3, x7
   13644:	mov	x4, x7
   13648:	add	x0, x0, #0x368
   1364c:	mov	w7, #0x1                   	// #1
   13650:	str	w7, [x8, #2496]
   13654:	bl	1e648 <OnPrint@@Base+0x398>
   13658:	bl	1c710 <__sanitizer_set_report_fd@@Base+0x5460>
   1365c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   13660:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   13664:	add	x2, x2, #0x3b0
   13668:	add	x0, x0, #0x3d8
   1366c:	mov	x4, #0x0                   	// #0
   13670:	mov	x3, #0x0                   	// #0
   13674:	mov	w1, #0x35                  	// #53
   13678:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1367c:	nop
   13680:	stp	x19, x20, [sp, #-32]!
   13684:	str	x30, [sp, #24]
   13688:	cbz	x0, 136f8 <__sancov_default_options@@Base+0x2b00>
   1368c:	mov	x19, x0
   13690:	mov	x20, x1
   13694:	cbz	x1, 136c4 <__sancov_default_options@@Base+0x2acc>
   13698:	str	x21, [sp, #16]
   1369c:	bl	18e60 <__sanitizer_set_report_fd@@Base+0x1bb0>
   136a0:	mov	x21, x0
   136a4:	cbz	x0, 136b4 <__sancov_default_options@@Base+0x2abc>
   136a8:	mov	x0, x20
   136ac:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   136b0:	add	x19, x21, x0
   136b4:	ldrb	w0, [x19]
   136b8:	cmp	w0, #0x2e
   136bc:	b.eq	136d4 <__sancov_default_options@@Base+0x2adc>  // b.none
   136c0:	ldr	x21, [sp, #16]
   136c4:	mov	x0, x19
   136c8:	ldr	x30, [sp, #24]
   136cc:	ldp	x19, x20, [sp], #32
   136d0:	ret
   136d4:	ldrb	w1, [x19, #1]
   136d8:	add	x0, x19, #0x2
   136dc:	ldr	x21, [sp, #16]
   136e0:	cmp	w1, #0x2f
   136e4:	csel	x19, x0, x19, eq  // eq = none
   136e8:	mov	x0, x19
   136ec:	ldr	x30, [sp, #24]
   136f0:	ldp	x19, x20, [sp], #32
   136f4:	ret
   136f8:	mov	x19, #0x0                   	// #0
   136fc:	b	136c4 <__sancov_default_options@@Base+0x2acc>
   13700:	stp	x19, x30, [sp, #-16]!
   13704:	mov	x19, x0
   13708:	cbz	x0, 1371c <__sancov_default_options@@Base+0x2b24>
   1370c:	mov	w1, #0x2f                  	// #47
   13710:	bl	18c08 <__sanitizer_set_report_fd@@Base+0x1958>
   13714:	cmp	x0, #0x0
   13718:	csinc	x19, x19, x0, eq  // eq = none
   1371c:	mov	x0, x19
   13720:	ldp	x19, x30, [sp], #16
   13724:	ret
   13728:	cbz	x0, 137b4 <__sancov_default_options@@Base+0x2bbc>
   1372c:	stp	x19, x30, [sp, #-16]!
   13730:	mov	x19, x0
   13734:	ldrb	w1, [x0]
   13738:	cbz	w1, 137a8 <__sancov_default_options@@Base+0x2bb0>
   1373c:	nop
   13740:	cmp	w1, #0x1b
   13744:	b.eq	1378c <__sancov_default_options@@Base+0x2b94>  // b.none
   13748:	cmp	x0, x19
   1374c:	b.eq	13754 <__sancov_default_options@@Base+0x2b5c>  // b.none
   13750:	strb	w1, [x19]
   13754:	add	x19, x19, #0x1
   13758:	ldrb	w1, [x0, #1]
   1375c:	add	x0, x0, #0x1
   13760:	cbz	w1, 137a8 <__sancov_default_options@@Base+0x2bb0>
   13764:	cmp	x0, x19
   13768:	b.cs	13740 <__sancov_default_options@@Base+0x2b48>  // b.hs, b.nlast
   1376c:	mov	x3, x0
   13770:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   13774:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   13778:	mov	x4, x19
   1377c:	add	x2, x2, #0x418
   13780:	add	x0, x0, #0x3d8
   13784:	mov	w1, #0x68                  	// #104
   13788:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1378c:	ldrb	w2, [x0, #1]
   13790:	cmp	w2, #0x5b
   13794:	b.ne	13748 <__sancov_default_options@@Base+0x2b50>  // b.any
   13798:	mov	w1, #0x6d                  	// #109
   1379c:	bl	18bb8 <__sanitizer_set_report_fd@@Base+0x1908>
   137a0:	ldrb	w1, [x0]
   137a4:	cbnz	w1, 13758 <__sancov_default_options@@Base+0x2b60>
   137a8:	strb	wzr, [x19]
   137ac:	ldp	x19, x30, [sp], #16
   137b0:	ret
   137b4:	ret
   137b8:	stp	x19, x20, [sp, #-32]!
   137bc:	mov	x19, x0
   137c0:	mov	x1, #0x0                   	// #0
   137c4:	ldr	x0, [x0]
   137c8:	str	x30, [sp, #16]
   137cc:	bl	11290 <__sancov_default_options@@Base+0x698>
   137d0:	stp	xzr, xzr, [x19]
   137d4:	mov	w1, #0x0                   	// #0
   137d8:	str	xzr, [x19, #16]
   137dc:	add	x0, x19, #0x1c
   137e0:	str	wzr, [x19, #24]
   137e4:	mov	x2, #0x10                  	// #16
   137e8:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   137ec:	strb	wzr, [x19, #44]
   137f0:	ldr	x1, [x19, #48]
   137f4:	cbz	x1, 1383c <__sancov_default_options@@Base+0x2c44>
   137f8:	add	x20, x19, #0x30
   137fc:	b	13810 <__sancov_default_options@@Base+0x2c18>
   13800:	str	x2, [x20]
   13804:	bl	11290 <__sancov_default_options@@Base+0x698>
   13808:	ldr	x1, [x19, #48]
   1380c:	cbz	x1, 1383c <__sancov_default_options@@Base+0x2c44>
   13810:	ldr	x0, [x19, #56]
   13814:	sub	x2, x1, #0x1
   13818:	mov	x1, #0x0                   	// #0
   1381c:	ldr	x3, [x0]
   13820:	str	x3, [x20, #8]
   13824:	cbnz	x3, 13800 <__sancov_default_options@@Base+0x2c08>
   13828:	str	x2, [x20]
   1382c:	str	xzr, [x20, #16]
   13830:	bl	11290 <__sancov_default_options@@Base+0x698>
   13834:	ldr	x1, [x19, #48]
   13838:	cbnz	x1, 13810 <__sancov_default_options@@Base+0x2c18>
   1383c:	ldr	x30, [sp, #16]
   13840:	ldp	x19, x20, [sp], #32
   13844:	ret
   13848:	stp	x19, x20, [sp, #-32]!
   1384c:	mov	x19, x0
   13850:	mov	x20, x2
   13854:	stp	x21, x30, [sp, #16]
   13858:	mov	x21, x1
   1385c:	bl	137b8 <__sancov_default_options@@Base+0x2bc0>
   13860:	mov	x0, x21
   13864:	bl	18a68 <__sanitizer_set_report_fd@@Base+0x17b8>
   13868:	ldp	x21, x30, [sp, #16]
   1386c:	stp	x0, x20, [x19]
   13870:	ldp	x19, x20, [sp], #32
   13874:	ret
   13878:	stp	x19, x20, [sp, #-64]!
   1387c:	mov	x19, x0
   13880:	mov	w20, w3
   13884:	stp	x21, x22, [sp, #16]
   13888:	mov	x21, x4
   1388c:	mov	x22, x2
   13890:	stp	x23, x24, [sp, #32]
   13894:	and	w24, w5, #0xff
   13898:	mov	x23, x1
   1389c:	str	x30, [sp, #48]
   138a0:	bl	137b8 <__sancov_default_options@@Base+0x2bc0>
   138a4:	mov	x0, x23
   138a8:	bl	18a68 <__sanitizer_set_report_fd@@Base+0x17b8>
   138ac:	stp	x0, x22, [x19]
   138b0:	mov	x1, x21
   138b4:	add	x0, x19, #0x1c
   138b8:	str	w20, [x19, #24]
   138bc:	mov	x2, #0x10                  	// #16
   138c0:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   138c4:	strb	w24, [x19, #44]
   138c8:	ldp	x21, x22, [sp, #16]
   138cc:	ldp	x23, x24, [sp, #32]
   138d0:	ldr	x30, [sp, #48]
   138d4:	ldp	x19, x20, [sp], #64
   138d8:	ret
   138dc:	nop
   138e0:	stp	x19, x20, [sp, #-64]!
   138e4:	mov	x20, x0
   138e8:	mov	x0, #0x30                  	// #48
   138ec:	stp	x21, x22, [sp, #16]
   138f0:	mov	x21, x5
   138f4:	mov	x22, x2
   138f8:	mov	x2, #0x0                   	// #0
   138fc:	stp	x23, x24, [sp, #32]
   13900:	and	w24, w3, #0xff
   13904:	mov	x23, x1
   13908:	mov	x1, #0x0                   	// #0
   1390c:	stp	x25, x30, [sp, #48]
   13910:	and	w25, w4, #0xff
   13914:	bl	11038 <__sancov_default_options@@Base+0x440>
   13918:	mov	x19, x0
   1391c:	cmp	x21, #0x0
   13920:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   13924:	add	x1, x1, #0x5c8
   13928:	add	x0, x0, #0x1a
   1392c:	csel	x1, x1, x21, eq  // eq = none
   13930:	stp	xzr, x23, [x19]
   13934:	mov	x2, #0x10                  	// #16
   13938:	str	x22, [x19, #16]
   1393c:	strb	w24, [x19, #24]
   13940:	strb	w25, [x19, #25]
   13944:	bl	18dd0 <__sanitizer_set_report_fd@@Base+0x1b20>
   13948:	ldr	x0, [x20, #48]
   1394c:	cbnz	x0, 13988 <__sancov_default_options@@Base+0x2d90>
   13950:	str	xzr, [x19]
   13954:	mov	x1, #0x1                   	// #1
   13958:	stp	x1, x19, [x20, #48]
   1395c:	str	x19, [x20, #64]
   13960:	cbz	w24, 13974 <__sancov_default_options@@Base+0x2d7c>
   13964:	ldr	x0, [x20, #16]
   13968:	cmp	x0, x22
   1396c:	b.cs	13974 <__sancov_default_options@@Base+0x2d7c>  // b.hs, b.nlast
   13970:	str	x22, [x20, #16]
   13974:	ldp	x21, x22, [sp, #16]
   13978:	ldp	x23, x24, [sp, #32]
   1397c:	ldp	x25, x30, [sp, #48]
   13980:	ldp	x19, x20, [sp], #64
   13984:	ret
   13988:	str	xzr, [x19]
   1398c:	add	x0, x0, #0x1
   13990:	ldr	x2, [x20, #64]
   13994:	str	x19, [x2]
   13998:	str	x0, [x20, #48]
   1399c:	str	x19, [x20, #64]
   139a0:	b	13960 <__sancov_default_options@@Base+0x2d68>
   139a4:	nop
   139a8:	ldr	x0, [x0, #56]
   139ac:	cbz	x0, 139dc <__sancov_default_options@@Base+0x2de4>
   139b0:	ldr	x2, [x0, #8]
   139b4:	cmp	x2, x1
   139b8:	b.hi	139c8 <__sancov_default_options@@Base+0x2dd0>  // b.pmore
   139bc:	ldr	x2, [x0, #16]
   139c0:	cmp	x2, x1
   139c4:	b.hi	139d4 <__sancov_default_options@@Base+0x2ddc>  // b.pmore
   139c8:	ldr	x0, [x0]
   139cc:	cbnz	x0, 139b0 <__sancov_default_options@@Base+0x2db8>
   139d0:	ret
   139d4:	mov	w0, #0x1                   	// #1
   139d8:	ret
   139dc:	mov	w0, #0x0                   	// #0
   139e0:	ret
   139e4:	nop
   139e8:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   139ec:	ldr	x1, [x1, #4040]
   139f0:	ldr	x2, [x1, #128]
   139f4:	cbnz	x2, 139fc <__sancov_default_options@@Base+0x2e04>
   139f8:	ret
   139fc:	adrp	x2, 1b4000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   13a00:	add	x2, x2, #0x9c0
   13a04:	add	x2, x2, #0x8
   13a08:	ldxr	x3, [x2]
   13a0c:	add	x4, x3, x0
   13a10:	stlxr	w5, x4, [x2]
   13a14:	cbnz	w5, 13a08 <__sancov_default_options@@Base+0x2e10>
   13a18:	dmb	ish
   13a1c:	ldr	x1, [x1, #128]
   13a20:	add	x0, x3, x0
   13a24:	cmp	x1, x0, lsr #20
   13a28:	b.hi	139f8 <__sancov_default_options@@Base+0x2e00>  // b.pmore
   13a2c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   13a30:	add	x0, x0, #0x428
   13a34:	str	x30, [sp, #-16]!
   13a38:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   13a3c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   13a40:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   13a44:	ldr	x1, [x1, #4040]
   13a48:	ldr	x1, [x1, #128]
   13a4c:	cbnz	x1, 13a54 <__sancov_default_options@@Base+0x2e5c>
   13a50:	ret
   13a54:	adrp	x1, 1b4000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   13a58:	add	x1, x1, #0x9c0
   13a5c:	neg	x0, x0
   13a60:	add	x1, x1, #0x8
   13a64:	ldxr	x2, [x1]
   13a68:	add	x2, x2, x0
   13a6c:	stlxr	w3, x2, [x1]
   13a70:	cbnz	w3, 13a64 <__sancov_default_options@@Base+0x2e6c>
   13a74:	dmb	ish
   13a78:	ret
   13a7c:	nop
   13a80:	cbz	x1, 13c14 <__sancov_default_options@@Base+0x301c>
   13a84:	stp	x19, x20, [sp, #-80]!
   13a88:	mov	x19, x0
   13a8c:	stp	x21, x22, [sp, #16]
   13a90:	mov	x21, x1
   13a94:	str	x30, [sp, #64]
   13a98:	ldrb	w0, [x1]
   13a9c:	cbz	w0, 13b94 <__sancov_default_options@@Base+0x2f9c>
   13aa0:	cbz	x19, 13b78 <__sancov_default_options@@Base+0x2f80>
   13aa4:	stp	x23, x24, [sp, #32]
   13aa8:	mov	w23, #0x0                   	// #0
   13aac:	stp	x25, x26, [sp, #48]
   13ab0:	ldrb	w1, [x19]
   13ab4:	cmp	w1, #0x5e
   13ab8:	b.ne	13ac8 <__sancov_default_options@@Base+0x2ed0>  // b.any
   13abc:	ldrb	w1, [x19, #1]
   13ac0:	add	x19, x19, #0x1
   13ac4:	mov	w23, #0x1                   	// #1
   13ac8:	mov	w2, #0x0                   	// #0
   13acc:	mov	w25, #0x2a                  	// #42
   13ad0:	mov	w24, #0x24                  	// #36
   13ad4:	cbz	w1, 13b70 <__sancov_default_options@@Base+0x2f78>
   13ad8:	cmp	w1, #0x2a
   13adc:	b.eq	13c04 <__sancov_default_options@@Base+0x300c>  // b.none
   13ae0:	ldrb	w0, [x21]
   13ae4:	cmp	w1, #0x24
   13ae8:	b.eq	13c1c <__sancov_default_options@@Base+0x3024>  // b.none
   13aec:	cbz	w0, 13b8c <__sancov_default_options@@Base+0x2f94>
   13af0:	mov	w1, #0x2a                  	// #42
   13af4:	mov	x0, x19
   13af8:	bl	18b88 <__sanitizer_set_report_fd@@Base+0x18d8>
   13afc:	mov	x22, x0
   13b00:	mov	w1, #0x24                  	// #36
   13b04:	mov	x0, x19
   13b08:	bl	18b88 <__sanitizer_set_report_fd@@Base+0x18d8>
   13b0c:	mov	x26, x0
   13b10:	cbz	x22, 13bdc <__sancov_default_options@@Base+0x2fe4>
   13b14:	cmp	x0, #0x0
   13b18:	ccmp	x22, x0, #0x0, ne  // ne = any
   13b1c:	b.ls	13ba8 <__sancov_default_options@@Base+0x2fb0>  // b.plast
   13b20:	strb	wzr, [x26]
   13b24:	mov	x1, x19
   13b28:	mov	x0, x21
   13b2c:	bl	18e60 <__sanitizer_set_report_fd@@Base+0x1bb0>
   13b30:	mov	x20, x0
   13b34:	mov	x0, x19
   13b38:	mov	x19, x26
   13b3c:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   13b40:	add	x0, x20, x0
   13b44:	mov	w1, #0x24                  	// #36
   13b48:	strb	w1, [x19]
   13b4c:	cbz	x20, 13b8c <__sancov_default_options@@Base+0x2f94>
   13b50:	cmp	x21, x20
   13b54:	csel	w2, w23, wzr, ne  // ne = any
   13b58:	cbnz	w2, 13b8c <__sancov_default_options@@Base+0x2f94>
   13b5c:	cbz	x19, 13b70 <__sancov_default_options@@Base+0x2f78>
   13b60:	ldrb	w1, [x19]
   13b64:	mov	x21, x0
   13b68:	mov	w23, #0x0                   	// #0
   13b6c:	cbnz	w1, 13ad8 <__sancov_default_options@@Base+0x2ee0>
   13b70:	ldp	x23, x24, [sp, #32]
   13b74:	ldp	x25, x26, [sp, #48]
   13b78:	mov	w0, #0x1                   	// #1
   13b7c:	ldp	x21, x22, [sp, #16]
   13b80:	ldr	x30, [sp, #64]
   13b84:	ldp	x19, x20, [sp], #80
   13b88:	ret
   13b8c:	ldp	x23, x24, [sp, #32]
   13b90:	ldp	x25, x26, [sp, #48]
   13b94:	mov	w0, #0x0                   	// #0
   13b98:	ldp	x21, x22, [sp, #16]
   13b9c:	ldr	x30, [sp, #64]
   13ba0:	ldp	x19, x20, [sp], #80
   13ba4:	ret
   13ba8:	strb	wzr, [x22]
   13bac:	mov	x1, x19
   13bb0:	mov	x0, x21
   13bb4:	bl	18e60 <__sanitizer_set_report_fd@@Base+0x1bb0>
   13bb8:	mov	x20, x0
   13bbc:	mov	x0, x19
   13bc0:	mov	x19, x22
   13bc4:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   13bc8:	add	x0, x20, x0
   13bcc:	cmp	x22, x26
   13bd0:	csel	w1, w24, w25, eq  // eq = none
   13bd4:	strb	w1, [x19]
   13bd8:	b	13b4c <__sancov_default_options@@Base+0x2f54>
   13bdc:	cbnz	x0, 13b20 <__sancov_default_options@@Base+0x2f28>
   13be0:	mov	x1, x19
   13be4:	mov	x0, x21
   13be8:	bl	18e60 <__sanitizer_set_report_fd@@Base+0x1bb0>
   13bec:	mov	x20, x0
   13bf0:	mov	x0, x19
   13bf4:	mov	x19, #0x0                   	// #0
   13bf8:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   13bfc:	add	x0, x20, x0
   13c00:	b	13b4c <__sancov_default_options@@Base+0x2f54>
   13c04:	add	x19, x19, #0x1
   13c08:	mov	x0, x21
   13c0c:	mov	w2, #0x1                   	// #1
   13c10:	b	13b60 <__sancov_default_options@@Base+0x2f68>
   13c14:	mov	w0, #0x0                   	// #0
   13c18:	ret
   13c1c:	cmp	w0, #0x0
   13c20:	csinc	w0, w2, wzr, ne  // ne = any
   13c24:	ldp	x23, x24, [sp, #32]
   13c28:	ldp	x25, x26, [sp, #48]
   13c2c:	b	13b98 <__sancov_default_options@@Base+0x2fa0>
   13c30:	adrp	x0, 1b4000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   13c34:	add	x0, x0, #0xa30
   13c38:	ret
   13c3c:	nop
   13c40:	b	13560 <__sancov_default_options@@Base+0x2968>
   13c44:	nop
   13c48:	adrp	x0, 1b5000 <__asan_cplus_demangle_operators@@Base+0x155be0>
   13c4c:	ldrb	w0, [x0, #2608]
   13c50:	cbz	w0, 13c58 <__sancov_default_options@@Base+0x3060>
   13c54:	ret
   13c58:	b	135e0 <__sancov_default_options@@Base+0x29e8>
   13c5c:	nop
   13c60:	stp	x19, x20, [sp, #-32]!
   13c64:	adrp	x20, 1b5000 <__asan_cplus_demangle_operators@@Base+0x155be0>
   13c68:	mov	x19, x1
   13c6c:	stp	x21, x30, [sp, #16]
   13c70:	mov	x21, x0
   13c74:	ldrb	w0, [x20, #2608]
   13c78:	cbnz	w0, 13c80 <__sancov_default_options@@Base+0x3088>
   13c7c:	bl	135e0 <__sancov_default_options@@Base+0x29e8>
   13c80:	add	x20, x20, #0xa30
   13c84:	mov	x0, x20
   13c88:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   13c8c:	mov	x2, x0
   13c90:	cbz	x19, 13cb4 <__sancov_default_options@@Base+0x30bc>
   13c94:	sub	x19, x19, #0x1
   13c98:	mov	x1, x20
   13c9c:	cmp	x19, x0
   13ca0:	mov	x0, x21
   13ca4:	csel	x19, x19, x2, ls  // ls = plast
   13ca8:	mov	x2, x19
   13cac:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   13cb0:	strb	wzr, [x21, x19]
   13cb4:	mov	x0, x19
   13cb8:	ldp	x21, x30, [sp, #16]
   13cbc:	ldp	x19, x20, [sp], #32
   13cc0:	ret
   13cc4:	nop
   13cc8:	stp	x19, x20, [sp, #-32]!
   13ccc:	str	x30, [sp, #16]
   13cd0:	bl	19c28 <__sanitizer_set_report_fd@@Base+0x2978>
   13cd4:	cbz	x0, 13d24 <__sancov_default_options@@Base+0x312c>
   13cd8:	mov	x19, x0
   13cdc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   13ce0:	add	x0, x0, #0x460
   13ce4:	bl	1e5c0 <OnPrint@@Base+0x310>
   13ce8:	ldr	x1, [x19]
   13cec:	cbz	x1, 13d10 <__sancov_default_options@@Base+0x3118>
   13cf0:	adrp	x20, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   13cf4:	add	x19, x19, #0x8
   13cf8:	add	x20, x20, #0xac8
   13cfc:	nop
   13d00:	mov	x0, x20
   13d04:	bl	1e5c0 <OnPrint@@Base+0x310>
   13d08:	ldr	x1, [x19], #8
   13d0c:	cbnz	x1, 13d00 <__sancov_default_options@@Base+0x3108>
   13d10:	ldr	x30, [sp, #16]
   13d14:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   13d18:	ldp	x19, x20, [sp], #32
   13d1c:	add	x0, x0, #0x470
   13d20:	b	1e5c0 <OnPrint@@Base+0x310>
   13d24:	ldr	x30, [sp, #16]
   13d28:	ldp	x19, x20, [sp], #32
   13d2c:	ret
   13d30:	stp	x19, x20, [sp, #-48]!
   13d34:	adrp	x20, 1b4000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   13d38:	add	x20, x20, #0x9c0
   13d3c:	add	x19, x20, #0x10
   13d40:	add	x20, x20, #0x60
   13d44:	stp	x21, x22, [sp, #16]
   13d48:	mov	x22, x0
   13d4c:	mov	x21, x1
   13d50:	str	x30, [sp, #32]
   13d54:	ldr	x2, [x19]
   13d58:	mov	x1, x21
   13d5c:	mov	x0, x22
   13d60:	add	x19, x19, #0x10
   13d64:	cbz	x2, 13d74 <__sancov_default_options@@Base+0x317c>
   13d68:	blr	x2
   13d6c:	cmp	x19, x20
   13d70:	b.ne	13d54 <__sancov_default_options@@Base+0x315c>  // b.any
   13d74:	ldp	x21, x22, [sp, #16]
   13d78:	ldr	x30, [sp, #32]
   13d7c:	ldp	x19, x20, [sp], #48
   13d80:	ret
   13d84:	nop
   13d88:	stp	x19, x20, [sp, #-32]!
   13d8c:	adrp	x20, 1b4000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   13d90:	add	x20, x20, #0x9c0
   13d94:	add	x20, x20, #0x10
   13d98:	stp	x21, x30, [sp, #16]
   13d9c:	mov	x21, x0
   13da0:	mov	x19, #0x0                   	// #0
   13da4:	add	x1, x20, x19
   13da8:	mov	x0, x21
   13dac:	add	x19, x19, #0x10
   13db0:	ldr	x1, [x1, #8]
   13db4:	cbz	x1, 13dc4 <__sancov_default_options@@Base+0x31cc>
   13db8:	blr	x1
   13dbc:	cmp	x19, #0x50
   13dc0:	b.ne	13da4 <__sancov_default_options@@Base+0x31ac>  // b.any
   13dc4:	ldp	x21, x30, [sp, #16]
   13dc8:	ldp	x19, x20, [sp], #32
   13dcc:	ret

0000000000013dd0 <__sanitizer_report_error_summary@@Base>:
   13dd0:	mov	x1, x0
   13dd4:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   13dd8:	add	x0, x2, #0x78
   13ddc:	b	1e5c0 <OnPrint@@Base+0x310>
   13de0:	adrp	x4, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   13de4:	ldr	x4, [x4, #4040]
   13de8:	ldrb	w2, [x4, #60]
   13dec:	cbnz	w2, 13df4 <__sanitizer_report_error_summary@@Base+0x24>
   13df0:	ret
   13df4:	stp	x19, x20, [sp, #-96]!
   13df8:	mov	x20, x1
   13dfc:	stp	x23, x24, [sp, #32]
   13e00:	adrp	x23, 1b4000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   13e04:	add	x19, x23, #0x9c0
   13e08:	stp	x21, x22, [sp, #16]
   13e0c:	mov	x21, x0
   13e10:	ldr	x2, [x19, #96]
   13e14:	str	x30, [sp, #48]
   13e18:	stp	xzr, xzr, [sp, #64]
   13e1c:	str	xzr, [sp, #80]
   13e20:	cbz	x2, 13eec <__sanitizer_report_error_summary@@Base+0x11c>
   13e24:	sub	x0, x2, #0x1
   13e28:	tst	x0, x2
   13e2c:	b.ne	13f54 <__sanitizer_report_error_summary@@Base+0x184>  // b.any
   13e30:	add	x22, x2, #0x3ff
   13e34:	neg	x2, x2
   13e38:	and	x22, x22, x2
   13e3c:	adrp	x24, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   13e40:	mov	w2, #0x0                   	// #0
   13e44:	add	x1, x24, #0x258
   13e48:	mov	x0, x22
   13e4c:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   13e50:	ldr	x1, [sp, #64]
   13e54:	mov	x19, x0
   13e58:	ldr	x2, [sp, #80]
   13e5c:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   13e60:	ldp	x0, x1, [sp, #64]
   13e64:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   13e68:	stp	x19, x22, [sp, #64]
   13e6c:	ldr	x2, [sp, #80]
   13e70:	cmp	x2, #0x3ff
   13e74:	b.hi	13e98 <__sanitizer_report_error_summary@@Base+0xc8>  // b.pmore
   13e78:	cmp	x22, #0x3ff
   13e7c:	b.ls	13efc <__sanitizer_report_error_summary@@Base+0x12c>  // b.plast
   13e80:	mov	x3, #0x400                 	// #1024
   13e84:	add	x0, x19, x2
   13e88:	mov	w1, #0x0                   	// #0
   13e8c:	sub	x2, x3, x2
   13e90:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   13e94:	ldr	x19, [sp, #64]
   13e98:	mov	x0, #0x400                 	// #1024
   13e9c:	stp	x0, xzr, [sp, #80]
   13ea0:	adrp	x2, 60000 <_Unwind_Backtrace@GCC_3.3>
   13ea4:	cmp	x20, #0x0
   13ea8:	strb	wzr, [x19]
   13eac:	mov	x3, x21
   13eb0:	add	x0, sp, #0x40
   13eb4:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   13eb8:	ldr	x2, [x2, #968]
   13ebc:	add	x1, x1, #0x478
   13ec0:	csel	x2, x2, x20, eq  // eq = none
   13ec4:	bl	1e6d0 <OnPrint@@Base+0x420>
   13ec8:	ldr	x0, [sp, #64]
   13ecc:	bl	6670 <__sanitizer_report_error_summary@plt>
   13ed0:	ldp	x0, x1, [sp, #64]
   13ed4:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   13ed8:	ldp	x21, x22, [sp, #16]
   13edc:	ldp	x23, x24, [sp, #32]
   13ee0:	ldr	x30, [sp, #48]
   13ee4:	ldp	x19, x20, [sp], #96
   13ee8:	ret
   13eec:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   13ef0:	mov	x2, x0
   13ef4:	str	x0, [x19, #96]
   13ef8:	b	13e24 <__sanitizer_report_error_summary@@Base+0x54>
   13efc:	add	x23, x23, #0x9c0
   13f00:	ldr	x0, [x23, #96]
   13f04:	cbz	x0, 13f64 <__sanitizer_report_error_summary@@Base+0x194>
   13f08:	sub	x1, x0, #0x1
   13f0c:	tst	x1, x0
   13f10:	b.ne	13f54 <__sanitizer_report_error_summary@@Base+0x184>  // b.any
   13f14:	add	x22, x0, #0x3ff
   13f18:	neg	x0, x0
   13f1c:	and	x22, x22, x0
   13f20:	add	x1, x24, #0x258
   13f24:	mov	w2, #0x0                   	// #0
   13f28:	mov	x0, x22
   13f2c:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   13f30:	mov	x19, x0
   13f34:	ldr	x1, [sp, #64]
   13f38:	ldr	x2, [sp, #80]
   13f3c:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   13f40:	ldp	x0, x1, [sp, #64]
   13f44:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   13f48:	stp	x19, x22, [sp, #64]
   13f4c:	ldr	x2, [sp, #80]
   13f50:	b	13e80 <__sanitizer_report_error_summary@@Base+0xb0>
   13f54:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   13f58:	add	x0, x0, #0x240
   13f5c:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   13f60:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   13f64:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   13f68:	str	x0, [x23, #96]
   13f6c:	b	13f08 <__sanitizer_report_error_summary@@Base+0x138>

0000000000013f70 <__sanitizer_acquire_crash_state@@Base>:
   13f70:	adrp	x0, 1b4000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   13f74:	add	x0, x0, #0x9c0
   13f78:	add	x0, x0, #0x68
   13f7c:	mov	w2, #0x1                   	// #1
   13f80:	ldxrb	w1, [x0]
   13f84:	stxrb	w3, w2, [x0]
   13f88:	cbnz	w3, 13f80 <__sanitizer_acquire_crash_state@@Base+0x10>
   13f8c:	tst	w1, #0xff
   13f90:	dmb	ish
   13f94:	cset	w0, eq  // eq = none
   13f98:	ret
   13f9c:	nop

0000000000013fa0 <__sanitizer_install_malloc_and_free_hooks@@Base>:
   13fa0:	cmp	x0, #0x0
   13fa4:	mov	x4, x0
   13fa8:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   13fac:	b.eq	13fdc <__sanitizer_install_malloc_and_free_hooks@@Base+0x3c>  // b.none
   13fb0:	adrp	x6, 1b4000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   13fb4:	add	x2, x6, #0x9c0
   13fb8:	add	x2, x2, #0x10
   13fbc:	mov	w0, #0x0                   	// #0
   13fc0:	ldr	x3, [x2]
   13fc4:	mov	w5, w0
   13fc8:	add	w0, w0, #0x1
   13fcc:	add	x2, x2, #0x10
   13fd0:	cmp	w0, #0x5
   13fd4:	cbz	x3, 13fe4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x44>
   13fd8:	b.ne	13fc0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20>  // b.any
   13fdc:	mov	w0, #0x0                   	// #0
   13fe0:	ret
   13fe4:	add	x6, x6, #0x9c0
   13fe8:	sbfiz	x5, x5, #4, #32
   13fec:	add	x6, x6, #0x10
   13ff0:	add	x2, x6, x5
   13ff4:	str	x4, [x6, x5]
   13ff8:	str	x1, [x2, #8]
   13ffc:	ret
   14000:	adrp	x1, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   14004:	ldr	x3, [x1, #2640]
   14008:	cbnz	x3, 14014 <__sanitizer_install_malloc_and_free_hooks@@Base+0x74>
   1400c:	str	x0, [x1, #2640]
   14010:	ret
   14014:	str	x30, [sp, #-16]!
   14018:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   1401c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   14020:	add	x2, x2, #0x498
   14024:	add	x0, x0, #0x4c8
   14028:	mov	x4, #0x0                   	// #0
   1402c:	mov	w1, #0x16                  	// #22
   14030:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   14034:	nop
   14038:	mov	x0, #0x0                   	// #0
   1403c:	ret
   14040:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   14044:	stp	x19, x20, [sp, #-128]!
   14048:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   1404c:	ldr	x0, [x0, #4040]
   14050:	stp	x21, x22, [sp, #16]
   14054:	add	x1, x1, #0x520
   14058:	str	x1, [sp, #120]
   1405c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   14060:	ldp	x21, x19, [x0, #136]
   14064:	stp	x23, x24, [sp, #32]
   14068:	mov	x22, #0x0                   	// #0
   1406c:	stp	x27, x28, [sp, #64]
   14070:	mov	x27, #0xcccccccccccccccc    	// #-3689348814741910324
   14074:	mov	w23, #0x0                   	// #0
   14078:	stp	d8, d9, [sp, #96]
   1407c:	mov	x20, #0x0                   	// #0
   14080:	cmp	x21, #0x0
   14084:	cset	w24, ne  // ne = any
   14088:	ldr	d9, [x1, #1488]
   1408c:	fmov	d8, xzr
   14090:	movk	x27, #0xcccd
   14094:	stp	x25, x26, [sp, #48]
   14098:	adrp	x25, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1409c:	ldrb	w26, [x0, #152]
   140a0:	str	x30, [sp, #80]
   140a4:	nop
   140a8:	mov	w0, #0x64                  	// #100
   140ac:	bl	1ce40 <__sanitizer_set_report_fd@@Base+0x5b90>
   140b0:	bl	1bb40 <__sanitizer_set_report_fd@@Base+0x4890>
   140b4:	lsr	x28, x0, #20
   140b8:	ldr	x1, [x25, #3680]
   140bc:	ldr	w0, [x1]
   140c0:	cbz	w0, 14104 <__sanitizer_install_malloc_and_free_hooks@@Base+0x164>
   140c4:	add	x0, x20, x20, lsl #1
   140c8:	lsl	x0, x0, #2
   140cc:	sub	x0, x0, x20
   140d0:	umulh	x0, x0, x27
   140d4:	cmp	x28, x0, lsr #3
   140d8:	b.hi	1418c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ec>  // b.pmore
   140dc:	bl	1f470 <OnPrint@@Base+0x11c0>
   140e0:	mov	x5, x0
   140e4:	cbz	x0, 14104 <__sanitizer_install_malloc_and_free_hooks@@Base+0x164>
   140e8:	add	x1, x22, x22, lsl #1
   140ec:	ldr	x3, [x0, #8]
   140f0:	lsl	x1, x1, #2
   140f4:	sub	x1, x1, x22
   140f8:	umulh	x1, x1, x27
   140fc:	cmp	x3, x1, lsr #3
   14100:	b.hi	141ec <__sanitizer_install_malloc_and_free_hooks@@Base+0x24c>  // b.pmore
   14104:	cmp	w24, #0x0
   14108:	ccmp	x21, x28, #0x2, ne  // ne = any
   1410c:	b.cc	14220 <__sanitizer_install_malloc_and_free_hooks@@Base+0x280>  // b.lo, b.ul, b.last
   14110:	cbz	x19, 14150 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b0>
   14114:	cmp	x19, x28
   14118:	eor	w0, w23, #0x1
   1411c:	cset	w1, cc  // cc = lo, ul, last
   14120:	ands	w1, w1, w0
   14124:	b.ne	141b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x210>  // b.any
   14128:	cmp	w23, #0x0
   1412c:	ccmp	x19, x28, #0x0, ne  // ne = any
   14130:	b.cc	14150 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b0>  // b.lo, b.ul, b.last
   14134:	adrp	x0, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   14138:	mov	w23, #0x0                   	// #0
   1413c:	ldr	x1, [x0, #2640]
   14140:	cbz	x1, 14150 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b0>
   14144:	mov	w0, #0x0                   	// #0
   14148:	blr	x1
   1414c:	nop
   14150:	cbz	w26, 140a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x108>
   14154:	scvtf	d0, d8
   14158:	scvtf	d1, x28
   1415c:	fmul	d0, d0, d9
   14160:	fcmpe	d1, d0
   14164:	b.le	140a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x108>
   14168:	mov	x1, x28
   1416c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   14170:	add	x0, x0, #0x5b0
   14174:	bl	1e5c0 <OnPrint@@Base+0x310>
   14178:	fmov	d8, x28
   1417c:	mov	x1, #0x14                  	// #20
   14180:	mov	x0, #0x5a                  	// #90
   14184:	bl	6d10 <__sanitizer_print_memory_profile@plt>
   14188:	b	140a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x108>
   1418c:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   14190:	mov	x20, x28
   14194:	mov	x2, x28
   14198:	ldr	x1, [x0, #4008]
   1419c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   141a0:	add	x0, x0, #0x510
   141a4:	ldr	x1, [x1]
   141a8:	bl	1e5c0 <OnPrint@@Base+0x310>
   141ac:	b	140dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x13c>
   141b0:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   141b4:	mov	w23, w1
   141b8:	mov	x3, x28
   141bc:	mov	x2, x19
   141c0:	ldr	x5, [x0, #4008]
   141c4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   141c8:	add	x0, x0, #0x580
   141cc:	ldr	x1, [x5]
   141d0:	bl	1e648 <OnPrint@@Base+0x398>
   141d4:	adrp	x0, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   141d8:	ldr	x1, [x0, #2640]
   141dc:	cbz	x1, 14150 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b0>
   141e0:	mov	w0, #0x1                   	// #1
   141e4:	blr	x1
   141e8:	b	14150 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b0>
   141ec:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   141f0:	lsr	x3, x3, #20
   141f4:	ldr	x2, [x5]
   141f8:	str	x5, [sp, #112]
   141fc:	ldr	x1, [x0, #4008]
   14200:	ldr	x0, [sp, #120]
   14204:	ldr	x1, [x1]
   14208:	bl	1e5c0 <OnPrint@@Base+0x310>
   1420c:	ldr	x5, [sp, #112]
   14210:	cmp	w24, #0x0
   14214:	ccmp	x21, x28, #0x2, ne  // ne = any
   14218:	ldr	x22, [x5, #8]
   1421c:	b.cs	14110 <__sanitizer_install_malloc_and_free_hooks@@Base+0x170>  // b.hs, b.nlast
   14220:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   14224:	mov	x3, x28
   14228:	mov	x2, x21
   1422c:	ldr	x1, [x0, #4008]
   14230:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   14234:	add	x0, x0, #0x550
   14238:	ldr	x1, [x1]
   1423c:	bl	1e648 <OnPrint@@Base+0x398>
   14240:	bl	1c710 <__sanitizer_set_report_fd@@Base+0x5460>
   14244:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   14248:	stp	x19, x20, [sp, #-96]!
   1424c:	stp	x23, x24, [sp, #32]
   14250:	adrp	x23, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   14254:	ldr	x19, [x23, #4000]
   14258:	stp	x21, x22, [sp, #16]
   1425c:	mov	x21, x0
   14260:	stp	xzr, xzr, [sp, #64]
   14264:	ldr	x1, [x19]
   14268:	str	x30, [sp, #48]
   1426c:	str	xzr, [sp, #80]
   14270:	cbz	x1, 14384 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3e4>
   14274:	sub	x0, x1, #0x1
   14278:	tst	x0, x1
   1427c:	b.ne	143f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x450>  // b.any
   14280:	neg	x19, x1
   14284:	mov	x22, #0xffff                	// #65535
   14288:	add	x1, x1, x22
   1428c:	mov	w2, #0x0                   	// #0
   14290:	and	x19, x1, x19
   14294:	adrp	x24, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   14298:	mov	x0, x19
   1429c:	add	x1, x24, #0x258
   142a0:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   142a4:	mov	x20, x0
   142a8:	ldr	x1, [sp, #64]
   142ac:	ldr	x2, [sp, #80]
   142b0:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   142b4:	ldp	x0, x1, [sp, #64]
   142b8:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   142bc:	stp	x20, x19, [sp, #64]
   142c0:	ldr	x2, [sp, #80]
   142c4:	cmp	x2, x22
   142c8:	b.ls	1433c <__sanitizer_install_malloc_and_free_hooks@@Base+0x39c>  // b.plast
   142cc:	mov	x0, #0x10000               	// #65536
   142d0:	stp	x0, xzr, [sp, #80]
   142d4:	mov	x2, x21
   142d8:	strb	wzr, [x20]
   142dc:	add	x0, sp, #0x40
   142e0:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   142e4:	add	x1, x1, #0x948
   142e8:	bl	1e6d0 <OnPrint@@Base+0x420>
   142ec:	ldr	x19, [sp, #64]
   142f0:	b	14304 <__sanitizer_install_malloc_and_free_hooks@@Base+0x364>
   142f4:	strb	wzr, [x0]
   142f8:	mov	x0, x19
   142fc:	add	x19, x1, #0x1
   14300:	bl	1bd00 <__sanitizer_set_report_fd@@Base+0x4a50>
   14304:	mov	w1, #0xa                   	// #10
   14308:	mov	x0, x19
   1430c:	bl	18b88 <__sanitizer_set_report_fd@@Base+0x18d8>
   14310:	mov	x1, x0
   14314:	cbnz	x0, 142f4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x354>
   14318:	ldrb	w0, [x19]
   1431c:	cbnz	w0, 14360 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3c0>
   14320:	ldp	x0, x1, [sp, #64]
   14324:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   14328:	ldp	x21, x22, [sp, #16]
   1432c:	ldp	x23, x24, [sp, #32]
   14330:	ldr	x30, [sp, #48]
   14334:	ldp	x19, x20, [sp], #96
   14338:	ret
   1433c:	cmp	x19, x22
   14340:	b.ls	14394 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3f4>  // b.plast
   14344:	mov	x3, #0x10000               	// #65536
   14348:	add	x0, x20, x2
   1434c:	mov	w1, #0x0                   	// #0
   14350:	sub	x2, x3, x2
   14354:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   14358:	ldr	x20, [sp, #64]
   1435c:	b	142cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x32c>
   14360:	mov	x0, x19
   14364:	bl	1bd00 <__sanitizer_set_report_fd@@Base+0x4a50>
   14368:	ldp	x0, x1, [sp, #64]
   1436c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   14370:	ldp	x21, x22, [sp, #16]
   14374:	ldp	x23, x24, [sp, #32]
   14378:	ldr	x30, [sp, #48]
   1437c:	ldp	x19, x20, [sp], #96
   14380:	ret
   14384:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   14388:	mov	x1, x0
   1438c:	str	x0, [x19]
   14390:	b	14274 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2d4>
   14394:	ldr	x23, [x23, #4000]
   14398:	ldr	x0, [x23]
   1439c:	cbz	x0, 14400 <__sanitizer_install_malloc_and_free_hooks@@Base+0x460>
   143a0:	sub	x1, x0, #0x1
   143a4:	tst	x1, x0
   143a8:	b.ne	143f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x450>  // b.any
   143ac:	mov	x1, #0xffff                	// #65535
   143b0:	add	x19, x0, x1
   143b4:	neg	x0, x0
   143b8:	add	x1, x24, #0x258
   143bc:	and	x19, x19, x0
   143c0:	mov	w2, #0x0                   	// #0
   143c4:	mov	x0, x19
   143c8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   143cc:	ldr	x1, [sp, #64]
   143d0:	mov	x20, x0
   143d4:	ldr	x2, [sp, #80]
   143d8:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   143dc:	ldp	x0, x1, [sp, #64]
   143e0:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   143e4:	stp	x20, x19, [sp, #64]
   143e8:	ldr	x2, [sp, #80]
   143ec:	b	14344 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3a4>
   143f0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   143f4:	add	x0, x0, #0x240
   143f8:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   143fc:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   14400:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   14404:	str	x0, [x23]
   14408:	b	143a0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x400>
   1440c:	nop
   14410:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   14414:	ldr	x0, [x0, #4040]
   14418:	ldp	x1, x2, [x0, #136]
   1441c:	orr	x1, x1, x2
   14420:	cbnz	x1, 1442c <__sanitizer_install_malloc_and_free_hooks@@Base+0x48c>
   14424:	ldrb	w0, [x0, #152]
   14428:	cbz	w0, 14448 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4a8>
   1442c:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   14430:	ldr	x0, [x0, #3880]
   14434:	cbz	x0, 14448 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4a8>
   14438:	adrp	x0, 14000 <__sanitizer_install_malloc_and_free_hooks@@Base+0x60>
   1443c:	mov	x1, #0x0                   	// #0
   14440:	add	x0, x0, #0x40
   14444:	b	1ae40 <__sanitizer_set_report_fd@@Base+0x3b90>
   14448:	ret
   1444c:	nop
   14450:	adrp	x1, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   14454:	str	x0, [x1, #2648]
   14458:	ret
   1445c:	nop

0000000000014460 <__sanitizer_sandbox_on_notify@@Base>:
   14460:	str	x30, [sp, #-16]!
   14464:	bl	1d1e0 <__sanitizer_set_report_fd@@Base+0x5f30>
   14468:	adrp	x0, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1446c:	ldr	x0, [x0, #2648]
   14470:	cbz	x0, 14480 <__sanitizer_sandbox_on_notify@@Base+0x20>
   14474:	ldr	x30, [sp], #16
   14478:	mov	x16, x0
   1447c:	br	x16
   14480:	ldr	x30, [sp], #16
   14484:	ret
   14488:	stp	x19, x20, [sp, #-64]!
   1448c:	mov	x20, x0
   14490:	mov	x0, x1
   14494:	stp	x21, x22, [sp, #16]
   14498:	mov	x22, x2
   1449c:	mov	x21, x3
   144a0:	stp	x23, x30, [sp, #32]
   144a4:	bl	13700 <__sancov_default_options@@Base+0x2b08>
   144a8:	cbz	x0, 1457c <__sanitizer_sandbox_on_notify@@Base+0x11c>
   144ac:	mov	x19, x0
   144b0:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   144b4:	ldr	x0, [x0, #4040]
   144b8:	ldr	x23, [x0, #168]
   144bc:	bl	19e88 <__sanitizer_set_report_fd@@Base+0x2bd8>
   144c0:	mov	x4, x19
   144c4:	mov	x5, x0
   144c8:	mov	x3, x23
   144cc:	adrp	x6, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   144d0:	add	x6, x6, #0x638
   144d4:	mov	x1, #0x1000                	// #4096
   144d8:	mov	x0, x20
   144dc:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   144e0:	add	x2, x2, #0x640
   144e4:	bl	1e2b8 <OnPrint@@Base+0x8>
   144e8:	add	x2, sp, #0x3c
   144ec:	mov	x0, x20
   144f0:	mov	w1, #0x1                   	// #1
   144f4:	bl	1c328 <__sanitizer_set_report_fd@@Base+0x5078>
   144f8:	mov	w19, w0
   144fc:	cmn	w0, #0x1
   14500:	b.eq	14564 <__sanitizer_sandbox_on_notify@@Base+0x104>  // b.none
   14504:	mov	w0, w19
   14508:	mov	x4, #0x0                   	// #0
   1450c:	mov	x3, #0x0                   	// #0
   14510:	mov	x2, #0x8                   	// #8
   14514:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   14518:	add	x1, x1, #0x720
   1451c:	bl	1c3c8 <__sanitizer_set_report_fd@@Base+0x5118>
   14520:	mov	x1, x22
   14524:	lsl	x2, x21, #3
   14528:	mov	x4, #0x0                   	// #0
   1452c:	mov	x3, #0x0                   	// #0
   14530:	mov	w0, w19
   14534:	bl	1c3c8 <__sanitizer_set_report_fd@@Base+0x5118>
   14538:	mov	w0, w19
   1453c:	bl	1c370 <__sanitizer_set_report_fd@@Base+0x50c0>
   14540:	mov	x2, x21
   14544:	mov	x1, x20
   14548:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   1454c:	add	x0, x0, #0x690
   14550:	bl	1e5c0 <OnPrint@@Base+0x310>
   14554:	ldp	x21, x22, [sp, #16]
   14558:	ldp	x23, x30, [sp, #32]
   1455c:	ldp	x19, x20, [sp], #64
   14560:	ret
   14564:	ldr	w2, [sp, #60]
   14568:	mov	x1, x20
   1456c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   14570:	add	x0, x0, #0x650
   14574:	bl	1e648 <OnPrint@@Base+0x398>
   14578:	b	14504 <__sanitizer_sandbox_on_notify@@Base+0xa4>
   1457c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   14580:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   14584:	add	x2, x2, #0x5d8
   14588:	add	x0, x0, #0x5e8
   1458c:	mov	x4, #0x0                   	// #0
   14590:	mov	x3, #0x0                   	// #0
   14594:	mov	w1, #0x28                  	// #40
   14598:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1459c:	nop
   145a0:	adrp	x1, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   145a4:	ldrb	w2, [x1, #2656]
   145a8:	cbz	w2, 145b0 <__sanitizer_sandbox_on_notify@@Base+0x150>
   145ac:	ret
   145b0:	stp	x19, x30, [sp, #-16]!
   145b4:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   145b8:	and	w0, w0, #0xff
   145bc:	ldr	x19, [x19, #3784]
   145c0:	strb	w0, [x1, #2656]
   145c4:	mov	x0, x19
   145c8:	bl	1ce90 <__sanitizer_set_report_fd@@Base+0x5be0>
   145cc:	mov	x0, x19
   145d0:	ldp	x19, x30, [sp], #16
   145d4:	b	26c60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6080>

00000000000145d8 <__sanitizer_cov_trace_pc_guard@@Base>:
   145d8:	ldr	w3, [x0]
   145dc:	cbnz	w3, 145e4 <__sanitizer_cov_trace_pc_guard@@Base+0xc>
   145e0:	ret
   145e4:	adrp	x0, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   145e8:	add	x0, x0, #0xa60
   145ec:	add	x0, x0, #0x8
   145f0:	str	x30, [sp, #-16]!
   145f4:	sub	w3, w3, #0x1
   145f8:	ldr	x4, [x0, #24]
   145fc:	ldr	x0, [x0, #8]
   14600:	cmp	x3, x4
   14604:	b.cs	14620 <__sanitizer_cov_trace_pc_guard@@Base+0x48>  // b.hs, b.nlast
   14608:	ldr	x1, [x0, x3, lsl #3]
   1460c:	cbnz	x1, 14618 <__sanitizer_cov_trace_pc_guard@@Base+0x40>
   14610:	sub	x30, x30, #0x1
   14614:	str	x30, [x0, x3, lsl #3]
   14618:	ldr	x30, [sp], #16
   1461c:	ret
   14620:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   14624:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   14628:	add	x2, x2, #0xe0
   1462c:	add	x0, x0, #0xf8
   14630:	mov	w1, #0x1b6                 	// #438
   14634:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

0000000000014638 <__sanitizer_cov_trace_pc_guard_init@@Base>:
   14638:	cmp	x0, x1
   1463c:	b.eq	14714 <__sanitizer_cov_trace_pc_guard_init@@Base+0xdc>  // b.none
   14640:	stp	x19, x20, [sp, #-48]!
   14644:	mov	x19, x0
   14648:	ldr	w0, [x0]
   1464c:	str	x30, [sp, #40]
   14650:	cbz	w0, 14660 <__sanitizer_cov_trace_pc_guard_init@@Base+0x28>
   14654:	ldr	x30, [sp, #40]
   14658:	ldp	x19, x20, [sp], #48
   1465c:	ret
   14660:	stp	x21, x22, [sp, #16]
   14664:	adrp	x22, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   14668:	add	x0, x22, #0xa60
   1466c:	mov	x20, x1
   14670:	add	x21, x0, #0x8
   14674:	ldrb	w1, [x0, #8]
   14678:	cbz	w1, 14718 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe0>
   1467c:	cmp	x19, x20
   14680:	mov	x2, x19
   14684:	b.eq	147c8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x190>  // b.none
   14688:	add	x0, x22, #0xa60
   1468c:	ldr	x0, [x0, #32]
   14690:	mov	w21, w0
   14694:	b.cs	146c4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x8c>  // b.hs, b.nlast
   14698:	mov	w1, w0
   1469c:	nop
   146a0:	add	w1, w1, #0x1
   146a4:	str	w1, [x19], #4
   146a8:	cmp	x20, x19
   146ac:	b.hi	146a0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x68>  // b.pmore
   146b0:	sub	x20, x20, #0x1
   146b4:	add	w21, w21, #0x1
   146b8:	sub	x20, x20, x2
   146bc:	lsr	x20, x20, #2
   146c0:	add	w21, w21, w20
   146c4:	cmp	x0, w21, uxtw
   146c8:	mov	w19, w21
   146cc:	b.cs	146fc <__sanitizer_cov_trace_pc_guard_init@@Base+0xc4>  // b.hs, b.nlast
   146d0:	add	x1, x22, #0xa60
   146d4:	add	x1, x1, #0x8
   146d8:	ldr	x2, [x1, #16]
   146dc:	cmp	x19, x2, lsr #3
   146e0:	b.hi	14758 <__sanitizer_cov_trace_pc_guard_init@@Base+0x120>  // b.pmore
   146e4:	ldr	x21, [x1, #8]
   146e8:	sub	x2, x19, x0
   146ec:	mov	w1, #0x0                   	// #0
   146f0:	add	x0, x21, x0, lsl #3
   146f4:	lsl	x2, x2, #3
   146f8:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   146fc:	add	x22, x22, #0xa60
   14700:	ldr	x30, [sp, #40]
   14704:	str	x19, [x22, #32]
   14708:	ldp	x21, x22, [sp, #16]
   1470c:	ldp	x19, x20, [sp], #48
   14710:	ret
   14714:	ret
   14718:	mov	w1, #0x1                   	// #1
   1471c:	strb	w1, [x0, #8]
   14720:	bl	10c18 <__sancov_default_options@@Base+0x20>
   14724:	ldr	w0, [x19]
   14728:	stp	xzr, xzr, [x21, #8]
   1472c:	str	xzr, [x21, #24]
   14730:	cbz	w0, 1467c <__sanitizer_cov_trace_pc_guard_init@@Base+0x44>
   14734:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   14738:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   1473c:	add	x2, x2, #0x6b8
   14740:	add	x0, x0, #0x5e8
   14744:	mov	x4, #0x0                   	// #0
   14748:	mov	x3, #0x0                   	// #0
   1474c:	mov	w1, #0x77                  	// #119
   14750:	str	x23, [sp, #32]
   14754:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   14758:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1475c:	ldr	x20, [x20, #4000]
   14760:	ldr	x0, [x20]
   14764:	str	x23, [sp, #32]
   14768:	cbz	x0, 147ec <__sanitizer_cov_trace_pc_guard_init@@Base+0x1b4>
   1476c:	sub	x20, x0, #0x1
   14770:	tst	x0, x20
   14774:	b.ne	147f8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1c0>  // b.any
   14778:	add	x23, x22, #0xa60
   1477c:	add	x20, x20, w21, uxtw #3
   14780:	neg	x0, x0
   14784:	mov	w2, #0x0                   	// #0
   14788:	and	x20, x20, x0
   1478c:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   14790:	mov	x0, x20
   14794:	add	x1, x1, #0x258
   14798:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1479c:	mov	x21, x0
   147a0:	ldr	x1, [x23, #16]
   147a4:	ldr	x2, [x23, #32]
   147a8:	lsl	x2, x2, #3
   147ac:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   147b0:	ldp	x0, x1, [x23, #16]
   147b4:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   147b8:	stp	x21, x20, [x23, #16]
   147bc:	ldr	x0, [x23, #32]
   147c0:	ldr	x23, [sp, #32]
   147c4:	b	146e8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb0>
   147c8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   147cc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   147d0:	add	x2, x2, #0x6d0
   147d4:	add	x0, x0, #0x5e8
   147d8:	mov	x4, x19
   147dc:	mov	x3, x19
   147e0:	mov	w1, #0x78                  	// #120
   147e4:	str	x23, [sp, #32]
   147e8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   147ec:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   147f0:	str	x0, [x20]
   147f4:	b	1476c <__sanitizer_cov_trace_pc_guard_init@@Base+0x134>
   147f8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   147fc:	add	x0, x0, #0x240
   14800:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   14804:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>

0000000000014808 <__sanitizer_cov_reset@@Base>:
   14808:	adrp	x0, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1480c:	add	x0, x0, #0xa60
   14810:	add	x0, x0, #0x8
   14814:	ldr	x2, [x0, #24]
   14818:	ldr	x0, [x0, #8]
   1481c:	cbz	x2, 1482c <__sanitizer_cov_reset@@Base+0x24>
   14820:	lsl	x2, x2, #3
   14824:	mov	w1, #0x0                   	// #0
   14828:	b	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   1482c:	str	x30, [sp, #-16]!
   14830:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   14834:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   14838:	add	x2, x2, #0xe0
   1483c:	add	x0, x0, #0xf8
   14840:	mov	x4, #0x0                   	// #0
   14844:	mov	x3, #0x0                   	// #0
   14848:	mov	w1, #0x1b6                 	// #438
   1484c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>

0000000000014850 <__sanitizer_cov_trace_cmp@@Base>:
   14850:	ret
   14854:	nop

0000000000014858 <__sanitizer_cov_trace_cmp1@@Base>:
   14858:	ret
   1485c:	nop

0000000000014860 <__sanitizer_cov_trace_cmp2@@Base>:
   14860:	ret
   14864:	nop

0000000000014868 <__sanitizer_cov_trace_cmp4@@Base>:
   14868:	ret
   1486c:	nop

0000000000014870 <__sanitizer_cov_trace_cmp8@@Base>:
   14870:	ret
   14874:	nop

0000000000014878 <__sanitizer_cov_trace_const_cmp1@@Base>:
   14878:	ret
   1487c:	nop

0000000000014880 <__sanitizer_cov_trace_const_cmp2@@Base>:
   14880:	ret
   14884:	nop

0000000000014888 <__sanitizer_cov_trace_const_cmp4@@Base>:
   14888:	ret
   1488c:	nop

0000000000014890 <__sanitizer_cov_trace_const_cmp8@@Base>:
   14890:	ret
   14894:	nop

0000000000014898 <__sanitizer_cov_trace_switch@@Base>:
   14898:	ret
   1489c:	nop

00000000000148a0 <__sanitizer_cov_trace_div4@@Base>:
   148a0:	ret
   148a4:	nop

00000000000148a8 <__sanitizer_cov_trace_div8@@Base>:
   148a8:	ret
   148ac:	nop

00000000000148b0 <__sanitizer_cov_trace_gep@@Base>:
   148b0:	ret
   148b4:	nop

00000000000148b8 <__sanitizer_cov_trace_pc_indir@@Base>:
   148b8:	ret
   148bc:	nop

00000000000148c0 <__sanitizer_cov_8bit_counters_init@@Base>:
   148c0:	ret
   148c4:	nop

00000000000148c8 <__sanitizer_cov_pcs_init@@Base>:
   148c8:	ret
   148cc:	nop

00000000000148d0 <__sanitizer_dump_coverage@@Base>:
   148d0:	cbnz	x1, 148d8 <__sanitizer_dump_coverage@@Base+0x8>
   148d4:	ret
   148d8:	stp	x19, x20, [sp, #-128]!
   148dc:	mov	x20, x1
   148e0:	mov	x19, x0
   148e4:	mov	x2, #0x0                   	// #0
   148e8:	mov	x1, #0x0                   	// #0
   148ec:	mov	x0, #0x1000                	// #4096
   148f0:	stp	x21, x22, [sp, #16]
   148f4:	lsl	x22, x20, #3
   148f8:	stp	x23, x24, [sp, #32]
   148fc:	mov	w23, #0x0                   	// #0
   14900:	stp	x25, x26, [sp, #48]
   14904:	mov	x26, #0x0                   	// #0
   14908:	stp	x27, x28, [sp, #64]
   1490c:	adrp	x28, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   14910:	mov	x27, #0x0                   	// #0
   14914:	str	x30, [sp, #80]
   14918:	bl	11038 <__sancov_default_options@@Base+0x440>
   1491c:	mov	x2, #0x0                   	// #0
   14920:	mov	x1, #0x0                   	// #0
   14924:	mov	x25, x0
   14928:	mov	x0, #0x1000                	// #4096
   1492c:	bl	11038 <__sancov_default_options@@Base+0x440>
   14930:	mov	x24, x0
   14934:	mov	x2, #0x0                   	// #0
   14938:	mov	x1, #0x0                   	// #0
   1493c:	mov	x0, x22
   14940:	bl	11038 <__sancov_default_options@@Base+0x440>
   14944:	mov	x1, x19
   14948:	mov	x2, x22
   1494c:	mov	x21, x0
   14950:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   14954:	mov	x0, x21
   14958:	mov	x1, x20
   1495c:	mov	w2, #0x0                   	// #0
   14960:	bl	d958 <__sancov_lowest_stack@@Base+0x128>
   14964:	add	x0, x28, #0x6e8
   14968:	mov	x19, #0x0                   	// #0
   1496c:	str	x0, [sp, #104]
   14970:	b	149a4 <__sanitizer_dump_coverage@@Base+0xd4>
   14974:	cbnz	w23, 14a58 <__sanitizer_dump_coverage@@Base+0x188>
   14978:	mov	x3, x28
   1497c:	mov	x0, x22
   14980:	mov	x26, x5
   14984:	mov	w23, w4
   14988:	mov	x1, x24
   1498c:	mov	x27, x19
   14990:	mov	x2, #0x1000                	// #4096
   14994:	bl	6740 <__sanitizer_get_module_and_offset_for_pc@plt>
   14998:	add	x19, x19, #0x1
   1499c:	cmp	x20, x19
   149a0:	b.eq	149f4 <__sanitizer_dump_coverage@@Base+0x124>  // b.none
   149a4:	ldr	x22, [x21, x19, lsl #3]
   149a8:	add	x28, x21, x19, lsl #3
   149ac:	mov	x3, x28
   149b0:	mov	x2, #0x0                   	// #0
   149b4:	mov	x0, x22
   149b8:	mov	x1, #0x0                   	// #0
   149bc:	cbz	x22, 14998 <__sanitizer_dump_coverage@@Base+0xc8>
   149c0:	bl	6740 <__sanitizer_get_module_and_offset_for_pc@plt>
   149c4:	eor	w1, w23, #0x1
   149c8:	cbz	w0, 14a48 <__sanitizer_dump_coverage@@Base+0x178>
   149cc:	ldr	x5, [x21, x19, lsl #3]
   149d0:	sub	x5, x22, x5
   149d4:	cmp	x5, x26
   149d8:	cset	w4, ne  // ne = any
   149dc:	orr	w4, w4, w1
   149e0:	cbnz	w4, 14974 <__sanitizer_dump_coverage@@Base+0xa4>
   149e4:	add	x19, x19, #0x1
   149e8:	mov	w23, #0x1                   	// #1
   149ec:	cmp	x20, x19
   149f0:	b.ne	149a4 <__sanitizer_dump_coverage@@Base+0xd4>  // b.any
   149f4:	cbz	w23, 14a0c <__sanitizer_dump_coverage@@Base+0x13c>
   149f8:	sub	x3, x20, x27
   149fc:	add	x2, x21, x27, lsl #3
   14a00:	mov	x1, x24
   14a04:	mov	x0, x25
   14a08:	bl	14488 <__sanitizer_sandbox_on_notify@@Base+0x28>
   14a0c:	mov	x0, x25
   14a10:	mov	x1, #0x0                   	// #0
   14a14:	bl	11290 <__sancov_default_options@@Base+0x698>
   14a18:	mov	x0, x24
   14a1c:	mov	x1, #0x0                   	// #0
   14a20:	bl	11290 <__sancov_default_options@@Base+0x698>
   14a24:	mov	x0, x21
   14a28:	mov	x1, #0x0                   	// #0
   14a2c:	ldp	x21, x22, [sp, #16]
   14a30:	ldp	x23, x24, [sp, #32]
   14a34:	ldp	x25, x26, [sp, #48]
   14a38:	ldp	x27, x28, [sp, #64]
   14a3c:	ldr	x30, [sp, #80]
   14a40:	ldp	x19, x20, [sp], #128
   14a44:	b	11290 <__sancov_default_options@@Base+0x698>
   14a48:	ldr	x0, [sp, #104]
   14a4c:	mov	x1, x22
   14a50:	bl	1e5c0 <OnPrint@@Base+0x310>
   14a54:	b	14998 <__sanitizer_dump_coverage@@Base+0xc8>
   14a58:	sub	x3, x19, x27
   14a5c:	add	x2, x21, x27, lsl #3
   14a60:	mov	x1, x24
   14a64:	mov	x0, x25
   14a68:	str	x5, [sp, #112]
   14a6c:	str	w4, [sp, #124]
   14a70:	bl	14488 <__sanitizer_sandbox_on_notify@@Base+0x28>
   14a74:	ldr	w4, [sp, #124]
   14a78:	ldr	x5, [sp, #112]
   14a7c:	b	14978 <__sanitizer_dump_coverage@@Base+0xa8>

0000000000014a80 <__sanitizer_dump_trace_pc_guard_coverage@@Base>:
   14a80:	adrp	x0, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   14a84:	add	x0, x0, #0xa60
   14a88:	add	x1, x0, #0x8
   14a8c:	ldrb	w0, [x0, #8]
   14a90:	cbz	w0, 14aa4 <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x24>
   14a94:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   14a98:	ldr	x0, [x0, #4040]
   14a9c:	ldrb	w0, [x0, #161]
   14aa0:	cbnz	w0, 14aa8 <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x28>
   14aa4:	ret
   14aa8:	ldr	x0, [x1, #8]
   14aac:	ldr	x1, [x1, #24]
   14ab0:	b	6960 <__sanitizer_dump_coverage@plt>
   14ab4:	nop

0000000000014ab8 <__sanitizer_cov_dump@@Base>:
   14ab8:	b	6b10 <__sanitizer_dump_trace_pc_guard_coverage@plt>
   14abc:	nop
   14ac0:	mov	x0, #0x0                   	// #0
   14ac4:	ret
   14ac8:	ret
   14acc:	nop
   14ad0:	ldr	x1, [x1, #16]
   14ad4:	ldrb	w0, [x1, #2224]
   14ad8:	cbz	w0, 14ae8 <__sanitizer_cov_dump@@Base+0x30>
   14adc:	add	x0, x1, #0x628
   14ae0:	strb	wzr, [x1, #2224]
   14ae4:	ret
   14ae8:	mov	x0, #0x0                   	// #0
   14aec:	ret
   14af0:	stp	x19, x30, [sp, #-16]!
   14af4:	mov	x2, #0x0                   	// #0
   14af8:	mov	x19, x1
   14afc:	mov	x0, #0x8b8                 	// #2232
   14b00:	mov	x1, #0x0                   	// #0
   14b04:	bl	11038 <__sancov_default_options@@Base+0x440>
   14b08:	mov	x3, x0
   14b0c:	str	x19, [x0]
   14b10:	str	xzr, [x3, #8]!
   14b14:	str	xzr, [x3, #520]
   14b18:	str	xzr, [x3, #1040]
   14b1c:	str	xzr, [x3, #1560]
   14b20:	strb	wzr, [x0, #2224]
   14b24:	ldp	x19, x30, [sp], #16
   14b28:	ret
   14b2c:	nop
   14b30:	mov	x0, x1
   14b34:	mov	x1, #0x0                   	// #0
   14b38:	b	11290 <__sancov_default_options@@Base+0x698>
   14b3c:	nop
   14b40:	ldr	x1, [x1, #16]
   14b44:	ldr	x2, [x2]
   14b48:	ldr	x3, [x1, #528]
   14b4c:	and	x0, x2, #0xfffffffffffff000
   14b50:	cmp	x3, x0
   14b54:	b.eq	14b5c <__sanitizer_cov_dump@@Base+0xa4>  // b.none
   14b58:	ret
   14b5c:	ldr	x7, [x1, #1048]
   14b60:	add	x6, x1, #0x8
   14b64:	and	x4, x2, #0xfff
   14b68:	cbz	x7, 14bb4 <__sanitizer_cov_dump@@Base+0xfc>
   14b6c:	sub	x8, x7, #0x1
   14b70:	mov	x0, x8
   14b74:	tbnz	x8, #63, 14bb4 <__sanitizer_cov_dump@@Base+0xfc>
   14b78:	add	x5, x1, #0x218
   14b7c:	b	14b8c <__sanitizer_cov_dump@@Base+0xd4>
   14b80:	sub	x0, x0, #0x1
   14b84:	cmn	x0, #0x1
   14b88:	b.eq	14bb4 <__sanitizer_cov_dump@@Base+0xfc>  // b.none
   14b8c:	ldr	x3, [x5, x0, lsl #3]
   14b90:	cmp	x4, x3
   14b94:	b.ne	14b80 <__sanitizer_cov_dump@@Base+0xc8>  // b.any
   14b98:	add	x1, x1, x7, lsl #3
   14b9c:	add	x0, x0, #0x42
   14ba0:	str	x8, [x6, #1040]
   14ba4:	ldr	x2, [x1, #528]
   14ba8:	str	x2, [x6, x0, lsl #3]
   14bac:	str	x4, [x1, #528]
   14bb0:	ret
   14bb4:	ldr	x7, [x1, #8]
   14bb8:	lsr	x3, x4, #6
   14bbc:	mov	x0, #0x1                   	// #1
   14bc0:	lsl	x5, x0, x3
   14bc4:	tst	x7, x5
   14bc8:	b.eq	14b58 <__sanitizer_cov_dump@@Base+0xa0>  // b.none
   14bcc:	add	x3, x3, x0
   14bd0:	lsl	x0, x0, x2
   14bd4:	ldr	x2, [x6, x3, lsl #3]
   14bd8:	bic	x0, x2, x0
   14bdc:	str	x0, [x6, x3, lsl #3]
   14be0:	cbz	x0, 14c5c <__sanitizer_cov_dump@@Base+0x1a4>
   14be4:	cmp	x2, x0
   14be8:	b.eq	14b58 <__sanitizer_cov_dump@@Base+0xa0>  // b.none
   14bec:	ldr	x5, [x6, #1560]
   14bf0:	cbz	x5, 14b58 <__sanitizer_cov_dump@@Base+0xa0>
   14bf4:	sub	x7, x5, #0x1
   14bf8:	mov	x0, x7
   14bfc:	tbnz	x7, #63, 14b58 <__sanitizer_cov_dump@@Base+0xa0>
   14c00:	add	x1, x1, #0x420
   14c04:	mov	w3, w4
   14c08:	b	14c18 <__sanitizer_cov_dump@@Base+0x160>
   14c0c:	sub	x0, x0, #0x1
   14c10:	cmn	x0, #0x1
   14c14:	b.eq	14b58 <__sanitizer_cov_dump@@Base+0xa0>  // b.none
   14c18:	lsl	x2, x0, #3
   14c1c:	ldr	w2, [x1, x2]
   14c20:	cmp	w3, w2
   14c24:	b.ne	14c0c <__sanitizer_cov_dump@@Base+0x154>  // b.any
   14c28:	add	x3, x6, x0, lsl #3
   14c2c:	add	x1, x5, #0x82
   14c30:	add	x5, x6, x7, lsl #3
   14c34:	mov	x0, x3
   14c38:	lsl	x1, x1, #3
   14c3c:	add	x2, x6, x1
   14c40:	ldr	w3, [x3, #1052]
   14c44:	ldr	x5, [x5, #1048]
   14c48:	str	x5, [x0, #1048]
   14c4c:	str	w4, [x6, x1]
   14c50:	str	w3, [x2, #4]
   14c54:	str	x7, [x6, #1560]
   14c58:	ret
   14c5c:	bic	x5, x7, x5
   14c60:	str	x5, [x1, #8]
   14c64:	b	14be4 <__sanitizer_cov_dump@@Base+0x12c>
   14c68:	ldr	x3, [x1]
   14c6c:	stp	x19, x30, [sp, #-16]!
   14c70:	mov	x19, x2
   14c74:	adrp	x2, 16000 <__sanitizer_cov_dump@@Base+0x1548>
   14c78:	add	x2, x2, #0x128
   14c7c:	ldr	x3, [x3]
   14c80:	str	xzr, [x19]
   14c84:	mov	w0, #0x0                   	// #0
   14c88:	cmp	x3, x2
   14c8c:	b.ne	14c9c <__sanitizer_cov_dump@@Base+0x1e4>  // b.any
   14c90:	str	w0, [x19, #8]
   14c94:	ldp	x19, x30, [sp], #16
   14c98:	ret
   14c9c:	mov	x0, x1
   14ca0:	blr	x3
   14ca4:	str	w0, [x19, #8]
   14ca8:	ldp	x19, x30, [sp], #16
   14cac:	ret
   14cb0:	stp	x19, x20, [sp, #-32]!
   14cb4:	mov	x20, x0
   14cb8:	ldr	x0, [x2]
   14cbc:	str	x30, [sp, #16]
   14cc0:	cbnz	x0, 14cd0 <__sanitizer_cov_dump@@Base+0x218>
   14cc4:	ldr	x30, [sp, #16]
   14cc8:	ldp	x19, x20, [sp], #32
   14ccc:	ret
   14cd0:	add	x0, x20, #0x8
   14cd4:	mov	x19, x2
   14cd8:	mov	w2, #0x1                   	// #1
   14cdc:	ldxrb	w1, [x0]
   14ce0:	stxrb	w3, w2, [x0]
   14ce4:	cbnz	w3, 14cdc <__sanitizer_cov_dump@@Base+0x224>
   14ce8:	dmb	ish
   14cec:	tst	w1, #0xff
   14cf0:	b.eq	14cf8 <__sanitizer_cov_dump@@Base+0x240>  // b.none
   14cf4:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   14cf8:	ldr	x3, [x19]
   14cfc:	cbz	x3, 14d10 <__sanitizer_cov_dump@@Base+0x258>
   14d00:	ldr	x0, [x20, #16]
   14d04:	and	x1, x3, #0xfffffffffffff000
   14d08:	cmp	x1, x0
   14d0c:	b.eq	14d28 <__sanitizer_cov_dump@@Base+0x270>  // b.none
   14d10:	str	xzr, [x19]
   14d14:	dmb	ish
   14d18:	strb	wzr, [x20, #8]
   14d1c:	ldr	x30, [sp, #16]
   14d20:	ldp	x19, x20, [sp], #32
   14d24:	ret
   14d28:	cmp	x3, #0xfff
   14d2c:	b.ls	14de8 <__sanitizer_cov_dump@@Base+0x330>  // b.plast
   14d30:	ubfx	x0, x3, #6, #6
   14d34:	mov	x1, #0x1                   	// #1
   14d38:	ldr	x6, [x20, #24]
   14d3c:	add	x4, x0, x1
   14d40:	and	x2, x3, #0xfff
   14d44:	lsl	x0, x1, x0
   14d48:	lsl	x5, x4, #3
   14d4c:	tst	x0, x6
   14d50:	lsl	x3, x1, x3
   14d54:	b.ne	14d84 <__sanitizer_cov_dump@@Base+0x2cc>  // b.any
   14d58:	ldr	x1, [x20, #544]
   14d5c:	add	x5, x20, #0x220
   14d60:	tst	x0, x1
   14d64:	b.ne	14db4 <__sanitizer_cov_dump@@Base+0x2fc>  // b.any
   14d68:	orr	x0, x0, x1
   14d6c:	str	x0, [x20, #544]
   14d70:	str	x3, [x5, x4, lsl #3]
   14d74:	add	x2, x2, x2, lsl #6
   14d78:	add	x2, x20, x2, lsl #3
   14d7c:	str	xzr, [x2, #1584]
   14d80:	b	14d10 <__sanitizer_cov_dump@@Base+0x258>
   14d84:	add	x5, x20, x5
   14d88:	ldr	x1, [x5, #24]
   14d8c:	tst	x3, x1
   14d90:	b.eq	14d58 <__sanitizer_cov_dump@@Base+0x2a0>  // b.none
   14d94:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   14d98:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   14d9c:	add	x2, x2, #0x800
   14da0:	add	x0, x0, #0x7b8
   14da4:	mov	x4, #0x0                   	// #0
   14da8:	mov	x3, #0x0                   	// #0
   14dac:	mov	w1, #0xc0                  	// #192
   14db0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   14db4:	ldr	x0, [x5, x4, lsl #3]
   14db8:	orr	x3, x3, x0
   14dbc:	str	x3, [x5, x4, lsl #3]
   14dc0:	cmp	x0, x3
   14dc4:	b.ne	14d74 <__sanitizer_cov_dump@@Base+0x2bc>  // b.any
   14dc8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   14dcc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   14dd0:	add	x2, x2, #0x830
   14dd4:	add	x0, x0, #0x7b8
   14dd8:	mov	x4, #0x0                   	// #0
   14ddc:	mov	x3, #0x0                   	// #0
   14de0:	mov	w1, #0xc1                  	// #193
   14de4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   14de8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   14dec:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   14df0:	add	x2, x2, #0x7a0
   14df4:	add	x0, x0, #0x7b8
   14df8:	mov	x4, #0x1000                	// #4096
   14dfc:	mov	w1, #0x172                 	// #370
   14e00:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   14e04:	nop
   14e08:	stp	x19, x30, [sp, #-16]!
   14e0c:	mov	x19, x0
   14e10:	mov	x0, #0xa50                 	// #2640
   14e14:	mov	w2, #0x0                   	// #0
   14e18:	movk	x0, #0x41, lsl #16
   14e1c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   14e20:	add	x1, x1, #0x858
   14e24:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   14e28:	add	x4, x0, #0x410, lsl #12
   14e2c:	strb	wzr, [x0, #8]
   14e30:	adrp	x1, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   14e34:	add	x3, x1, #0xc10
   14e38:	add	x2, x0, #0x208, lsl #12
   14e3c:	str	x3, [x0]
   14e40:	add	x1, x0, #0x630
   14e44:	ldrb	w3, [x19]
   14e48:	add	x2, x2, #0x630
   14e4c:	strb	w3, [x4, #2632]
   14e50:	stp	xzr, xzr, [x0, #16]
   14e54:	str	xzr, [x0, #544]
   14e58:	str	xzr, [x1]
   14e5c:	add	x1, x1, #0x208
   14e60:	cmp	x1, x2
   14e64:	b.ne	14e58 <__sanitizer_cov_dump@@Base+0x3a0>  // b.any
   14e68:	add	x1, x0, #0x10
   14e6c:	add	x1, x1, #0x410, lsl #12
   14e70:	str	xzr, [x1, #2608]
   14e74:	ldp	x19, x30, [sp], #16
   14e78:	ret
   14e7c:	nop
   14e80:	add	x5, x0, #0x410, lsl #12
   14e84:	strb	wzr, [x0, #8]
   14e88:	add	x3, x0, #0x208, lsl #12
   14e8c:	adrp	x4, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   14e90:	ldrb	w1, [x1]
   14e94:	add	x4, x4, #0xc10
   14e98:	str	x4, [x0]
   14e9c:	add	x2, x0, #0x630
   14ea0:	add	x3, x3, #0x630
   14ea4:	strb	w1, [x5, #2632]
   14ea8:	stp	xzr, xzr, [x0, #16]
   14eac:	str	xzr, [x0, #544]
   14eb0:	str	xzr, [x2]
   14eb4:	add	x2, x2, #0x208
   14eb8:	cmp	x2, x3
   14ebc:	b.ne	14eb0 <__sanitizer_cov_dump@@Base+0x3f8>  // b.any
   14ec0:	add	x0, x0, #0x10
   14ec4:	add	x0, x0, #0x410, lsl #12
   14ec8:	str	xzr, [x0, #2608]
   14ecc:	ret
   14ed0:	ldr	x3, [x2]
   14ed4:	cbz	x3, 14ee8 <__sanitizer_cov_dump@@Base+0x430>
   14ed8:	ldr	x4, [x0, #16]
   14edc:	and	x3, x3, #0xfffffffffffff000
   14ee0:	cmp	x3, x4
   14ee4:	b.eq	151ac <__sanitizer_cov_dump@@Base+0x6f4>  // b.none
   14ee8:	stp	x19, x20, [sp, #-32]!
   14eec:	ldr	x9, [x0, #24]
   14ef0:	str	x30, [sp, #16]
   14ef4:	cbz	x9, 14f60 <__sanitizer_cov_dump@@Base+0x4a8>
   14ef8:	mov	x4, x0
   14efc:	rbit	x3, x9
   14f00:	clz	x3, x3
   14f04:	mov	x5, #0x1                   	// #1
   14f08:	add	x8, x3, x5
   14f0c:	lsl	x7, x5, x3
   14f10:	bic	x9, x9, x7
   14f14:	str	x9, [x4, #24]!
   14f18:	ldr	x6, [x4, x8, lsl #3]
   14f1c:	cbz	x6, 15310 <__sanitizer_cov_dump@@Base+0x858>
   14f20:	rbit	x10, x6
   14f24:	clz	x10, x10
   14f28:	lsl	x5, x5, x10
   14f2c:	bic	x5, x6, x5
   14f30:	str	x5, [x4, x8, lsl #3]
   14f34:	cbz	x5, 14f40 <__sanitizer_cov_dump@@Base+0x488>
   14f38:	orr	x7, x7, x9
   14f3c:	str	x7, [x0, #24]
   14f40:	add	x3, x10, x3, lsl #6
   14f44:	add	x4, x0, #0x10
   14f48:	add	x5, x3, #0x41, lsl #12
   14f4c:	add	x5, x5, #0x146
   14f50:	str	x2, [x4, x5, lsl #3]
   14f54:	ldr	x4, [x0, #16]
   14f58:	add	x3, x3, x4
   14f5c:	b	15160 <__sanitizer_cov_dump@@Base+0x6a8>
   14f60:	ldr	x15, [x0, #544]
   14f64:	cbz	x15, 150ac <__sanitizer_cov_dump@@Base+0x5f4>
   14f68:	add	x11, x0, #0x10
   14f6c:	add	x10, x11, #0x410, lsl #12
   14f70:	ldr	x4, [x10, #2608]
   14f74:	subs	x12, x4, #0x1
   14f78:	b.mi	15050 <__sanitizer_cov_dump@@Base+0x598>  // b.first
   14f7c:	add	x4, x4, #0x21, lsl #12
   14f80:	mov	x16, #0x10a2                	// #4258
   14f84:	add	x4, x4, #0xa3
   14f88:	add	x14, x0, #0x220
   14f8c:	mov	x13, #0x1                   	// #1
   14f90:	movk	x16, #0x2, lsl #16
   14f94:	add	x4, x0, x4, lsl #4
   14f98:	ldrh	w6, [x4]
   14f9c:	and	x3, x6, #0xffff
   14fa0:	cmp	x3, #0x1, lsl #12
   14fa4:	b.hi	152ac <__sanitizer_cov_dump@@Base+0x7f4>  // b.pmore
   14fa8:	lsr	x5, x3, #12
   14fac:	ubfx	x3, x3, #6, #6
   14fb0:	lsl	x8, x13, x3
   14fb4:	ldr	x7, [x14, x5, lsl #3]
   14fb8:	tst	x8, x7
   14fbc:	b.ne	15190 <__sanitizer_cov_dump@@Base+0x6d8>  // b.any
   14fc0:	ldrh	w6, [x4, #2]
   14fc4:	and	x3, x6, #0xffff
   14fc8:	cmp	x3, #0x1, lsl #12
   14fcc:	b.hi	152d4 <__sanitizer_cov_dump@@Base+0x81c>  // b.pmore
   14fd0:	lsr	x5, x3, #12
   14fd4:	ubfx	x3, x3, #6, #6
   14fd8:	lsl	x8, x13, x3
   14fdc:	ldr	x7, [x14, x5, lsl #3]
   14fe0:	tst	x8, x7
   14fe4:	b.eq	15040 <__sanitizer_cov_dump@@Base+0x588>  // b.none
   14fe8:	add	x3, x3, x5, lsl #6
   14fec:	lsl	x6, x13, x6
   14ff0:	add	x3, x3, #0x1
   14ff4:	ldr	x3, [x14, x3, lsl #3]
   14ff8:	tst	x6, x3
   14ffc:	b.eq	15040 <__sanitizer_cov_dump@@Base+0x588>  // b.none
   15000:	ldr	x3, [x10, #2608]
   15004:	ldrh	w20, [x4]
   15008:	add	x8, x3, x16
   1500c:	sub	x5, x3, #0x1
   15010:	ldrh	w19, [x4, #2]
   15014:	lsl	x8, x8, #4
   15018:	ldr	w17, [x4, #12]
   1501c:	add	x3, x11, x8
   15020:	ldp	w30, w18, [x4, #4]
   15024:	ldp	x6, x7, [x3]
   15028:	stp	x6, x7, [x4]
   1502c:	strh	w20, [x11, x8]
   15030:	strh	w19, [x3, #2]
   15034:	stp	w30, w18, [x3, #4]
   15038:	str	w17, [x3, #12]
   1503c:	str	x5, [x10, #2608]
   15040:	sub	x12, x12, #0x1
   15044:	sub	x4, x4, #0x10
   15048:	cmn	x12, #0x1
   1504c:	b.ne	14f98 <__sanitizer_cov_dump@@Base+0x4e0>  // b.any
   15050:	mov	x12, #0x1                   	// #1
   15054:	add	x6, x0, #0x630
   15058:	mov	x14, x12
   1505c:	ldr	x3, [x6, x9, lsl #3]
   15060:	add	x13, x9, #0x1
   15064:	and	x3, x15, x3
   15068:	cbz	x3, 151ec <__sanitizer_cov_dump@@Base+0x734>
   1506c:	rbit	x4, x3
   15070:	clz	x4, x4
   15074:	add	x7, x13, x4
   15078:	add	x10, x0, x4, lsl #3
   1507c:	lsl	x5, x12, x4
   15080:	bic	x3, x3, x5
   15084:	ldr	x8, [x6, x7, lsl #3]
   15088:	ldr	x5, [x10, #552]
   1508c:	bic	x5, x8, x5
   15090:	str	x5, [x6, x7, lsl #3]
   15094:	cbnz	x5, 15068 <__sanitizer_cov_dump@@Base+0x5b0>
   15098:	ldr	x5, [x6, x9, lsl #3]
   1509c:	lsl	x4, x14, x4
   150a0:	bic	x4, x5, x4
   150a4:	str	x4, [x6, x9, lsl #3]
   150a8:	b	15068 <__sanitizer_cov_dump@@Base+0x5b0>
   150ac:	ldr	x4, [x0, #16]
   150b0:	mov	x6, x0
   150b4:	mov	x7, #0xffffffffffffffff    	// #-1
   150b8:	add	x3, x0, #0x20
   150bc:	add	x4, x4, #0x1, lsl #12
   150c0:	mov	x5, x7
   150c4:	str	x4, [x0, #16]
   150c8:	add	x4, x0, #0x220
   150cc:	str	x7, [x6, #24]!
   150d0:	str	x5, [x3], #8
   150d4:	cmp	x3, x4
   150d8:	b.ne	150d0 <__sanitizer_cov_dump@@Base+0x618>  // b.any
   150dc:	add	x4, x0, #0x208, lsl #12
   150e0:	add	x3, x0, #0x630
   150e4:	add	x4, x4, #0x630
   150e8:	str	xzr, [x3]
   150ec:	add	x3, x3, #0x208
   150f0:	cmp	x4, x3
   150f4:	b.ne	150e8 <__sanitizer_cov_dump@@Base+0x630>  // b.any
   150f8:	add	x11, x0, #0x10
   150fc:	add	x3, x11, #0x410, lsl #12
   15100:	str	xzr, [x3, #2608]
   15104:	ldr	x4, [x0, #24]
   15108:	cbz	x4, 151cc <__sanitizer_cov_dump@@Base+0x714>
   1510c:	rbit	x3, x4
   15110:	mov	x5, #0x1                   	// #1
   15114:	clz	x3, x3
   15118:	add	x9, x3, x5
   1511c:	lsl	x8, x5, x3
   15120:	bic	x4, x4, x8
   15124:	str	x4, [x0, #24]
   15128:	ldr	x7, [x6, x9, lsl #3]
   1512c:	cbz	x7, 152f0 <__sanitizer_cov_dump@@Base+0x838>
   15130:	rbit	x10, x7
   15134:	clz	x10, x10
   15138:	lsl	x5, x5, x10
   1513c:	bic	x5, x7, x5
   15140:	str	x5, [x6, x9, lsl #3]
   15144:	cbnz	x5, 152c8 <__sanitizer_cov_dump@@Base+0x810>
   15148:	add	x3, x10, x3, lsl #6
   1514c:	add	x4, x3, #0x41, lsl #12
   15150:	add	x4, x4, #0x146
   15154:	str	x2, [x11, x4, lsl #3]
   15158:	ldr	x4, [x0, #16]
   1515c:	add	x3, x3, x4
   15160:	str	x3, [x2]
   15164:	ldr	x2, [x1, #528]
   15168:	ldr	x4, [x0, #16]
   1516c:	cmp	x2, x4
   15170:	b.eq	15184 <__sanitizer_cov_dump@@Base+0x6cc>  // b.none
   15174:	str	xzr, [x1, #8]
   15178:	str	x4, [x1, #528]
   1517c:	str	xzr, [x1, #1048]
   15180:	str	xzr, [x1, #1568]
   15184:	ldr	x30, [sp, #16]
   15188:	ldp	x19, x20, [sp], #32
   1518c:	ret
   15190:	add	x3, x3, x5, lsl #6
   15194:	lsl	x6, x13, x6
   15198:	add	x3, x3, #0x1
   1519c:	ldr	x3, [x14, x3, lsl #3]
   151a0:	tst	x6, x3
   151a4:	b.ne	15000 <__sanitizer_cov_dump@@Base+0x548>  // b.any
   151a8:	b	14fc0 <__sanitizer_cov_dump@@Base+0x508>
   151ac:	ldr	x2, [x1, #528]
   151b0:	cmp	x2, x4
   151b4:	b.eq	151c8 <__sanitizer_cov_dump@@Base+0x710>  // b.none
   151b8:	str	xzr, [x1, #8]
   151bc:	str	x4, [x1, #528]
   151c0:	str	xzr, [x1, #1048]
   151c4:	str	xzr, [x1, #1568]
   151c8:	ret
   151cc:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   151d0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   151d4:	add	x2, x2, #0x870
   151d8:	add	x0, x0, #0x748
   151dc:	mov	x4, #0x0                   	// #0
   151e0:	mov	x3, #0x0                   	// #0
   151e4:	mov	w1, #0xbf                  	// #191
   151e8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   151ec:	add	x9, x9, #0x41
   151f0:	cmp	x9, #0x41, lsl #12
   151f4:	ldr	x15, [x0, #544]
   151f8:	b.ne	1505c <__sanitizer_cov_dump@@Base+0x5a4>  // b.any
   151fc:	add	x8, x0, #0x220
   15200:	add	x6, x0, #0x18
   15204:	mov	x7, #0x1                   	// #1
   15208:	cbz	x15, 15250 <__sanitizer_cov_dump@@Base+0x798>
   1520c:	rbit	x3, x15
   15210:	ldr	x5, [x0, #24]
   15214:	clz	x3, x3
   15218:	lsl	x4, x7, x3
   1521c:	add	x3, x3, #0x1
   15220:	bic	x15, x15, x4
   15224:	orr	x4, x4, x5
   15228:	str	x4, [x0, #24]
   1522c:	cmp	x5, x4
   15230:	lsl	x4, x3, #3
   15234:	b.eq	15330 <__sanitizer_cov_dump@@Base+0x878>  // b.none
   15238:	mov	x5, #0x0                   	// #0
   1523c:	str	xzr, [x6, x3, lsl #3]
   15240:	ldr	x4, [x8, x3, lsl #3]
   15244:	orr	x4, x4, x5
   15248:	str	x4, [x6, x3, lsl #3]
   1524c:	cbnz	x15, 1520c <__sanitizer_cov_dump@@Base+0x754>
   15250:	ldr	x5, [x0, #24]
   15254:	str	xzr, [x0, #544]
   15258:	cbz	x5, 151cc <__sanitizer_cov_dump@@Base+0x714>
   1525c:	rbit	x3, x5
   15260:	mov	x7, x0
   15264:	clz	x3, x3
   15268:	mov	x4, #0x1                   	// #1
   1526c:	add	x6, x3, #0x1
   15270:	lsl	x8, x4, x3
   15274:	bic	x5, x5, x8
   15278:	lsl	x6, x6, #3
   1527c:	str	x5, [x7, #24]!
   15280:	ldr	x9, [x7, x6]
   15284:	cbz	x9, 15338 <__sanitizer_cov_dump@@Base+0x880>
   15288:	rbit	x10, x9
   1528c:	clz	x10, x10
   15290:	lsl	x4, x4, x10
   15294:	bic	x4, x9, x4
   15298:	str	x4, [x7, x6]
   1529c:	cbz	x4, 15148 <__sanitizer_cov_dump@@Base+0x690>
   152a0:	orr	x5, x8, x5
   152a4:	str	x5, [x0, #24]
   152a8:	b	15148 <__sanitizer_cov_dump@@Base+0x690>
   152ac:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   152b0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   152b4:	add	x2, x2, #0x788
   152b8:	add	x0, x0, #0x748
   152bc:	mov	x4, #0x1000                	// #4096
   152c0:	mov	w1, #0x143                 	// #323
   152c4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   152c8:	orr	x4, x8, x4
   152cc:	str	x4, [x0, #24]
   152d0:	b	15148 <__sanitizer_cov_dump@@Base+0x690>
   152d4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   152d8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   152dc:	add	x2, x2, #0x788
   152e0:	add	x0, x0, #0x748
   152e4:	mov	x4, #0x1000                	// #4096
   152e8:	mov	w1, #0x143                 	// #323
   152ec:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   152f0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   152f4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   152f8:	add	x2, x2, #0x758
   152fc:	add	x0, x0, #0x748
   15300:	mov	x4, #0x0                   	// #0
   15304:	mov	x3, #0x0                   	// #0
   15308:	mov	w1, #0x30                  	// #48
   1530c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15310:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   15314:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15318:	add	x2, x2, #0x758
   1531c:	add	x0, x0, #0x748
   15320:	mov	x4, #0x0                   	// #0
   15324:	mov	x3, #0x0                   	// #0
   15328:	mov	w1, #0x30                  	// #48
   1532c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15330:	ldr	x5, [x6, x4]
   15334:	b	15240 <__sanitizer_cov_dump@@Base+0x788>
   15338:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1533c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15340:	add	x2, x2, #0x758
   15344:	add	x0, x0, #0x748
   15348:	mov	x4, #0x0                   	// #0
   1534c:	mov	x3, #0x0                   	// #0
   15350:	mov	w1, #0x30                  	// #48
   15354:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15358:	stp	x19, x20, [sp, #-96]!
   1535c:	mov	x20, x1
   15360:	add	x1, x0, #0x410, lsl #12
   15364:	stp	x21, x22, [sp, #16]
   15368:	mov	x19, x0
   1536c:	mov	x21, x2
   15370:	ldrb	w1, [x1, #2632]
   15374:	stp	x23, x24, [sp, #32]
   15378:	and	w24, w3, #0xff
   1537c:	stp	x25, x26, [sp, #48]
   15380:	and	w26, w4, #0xff
   15384:	mov	w25, #0x0                   	// #0
   15388:	ldr	x23, [x20, #16]
   1538c:	str	x30, [sp, #64]
   15390:	cbz	w1, 153ac <__sanitizer_cov_dump@@Base+0x8f4>
   15394:	ldr	x0, [x20]
   15398:	adrp	x1, 16000 <__sanitizer_cov_dump@@Base+0x1548>
   1539c:	add	x1, x1, #0x128
   153a0:	ldr	x2, [x0]
   153a4:	cmp	x2, x1
   153a8:	b.ne	15548 <__sanitizer_cov_dump@@Base+0xa90>  // b.any
   153ac:	ldr	x1, [x23, #8]
   153b0:	add	x22, x23, #0x8
   153b4:	ldr	x2, [x21]
   153b8:	ldr	x5, [x23, #528]
   153bc:	cbz	x1, 154ec <__sanitizer_cov_dump@@Base+0xa34>
   153c0:	cbz	x2, 153d0 <__sanitizer_cov_dump@@Base+0x918>
   153c4:	ldr	x0, [x19, #16]
   153c8:	cmp	x0, x5
   153cc:	b.eq	1556c <__sanitizer_cov_dump@@Base+0xab4>  // b.none
   153d0:	add	x0, x19, #0x8
   153d4:	mov	w2, #0x1                   	// #1
   153d8:	ldxrb	w1, [x0]
   153dc:	stxrb	w3, w2, [x0]
   153e0:	cbnz	w3, 153d8 <__sanitizer_cov_dump@@Base+0x920>
   153e4:	dmb	ish
   153e8:	tst	w1, #0xff
   153ec:	b.eq	153f8 <__sanitizer_cov_dump@@Base+0x940>  // b.none
   153f0:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   153f4:	nop
   153f8:	mov	x2, x21
   153fc:	mov	x1, x23
   15400:	mov	x0, x19
   15404:	bl	14ed0 <__sanitizer_cov_dump@@Base+0x418>
   15408:	cbnz	w24, 15628 <__sanitizer_cov_dump@@Base+0xb70>
   1540c:	ldr	x24, [x21]
   15410:	cbnz	w26, 1544c <__sanitizer_cov_dump@@Base+0x994>
   15414:	mov	w3, w25
   15418:	ldr	x1, [x20]
   1541c:	cbz	w25, 156f0 <__sanitizer_cov_dump@@Base+0xc38>
   15420:	ldr	x2, [x1, #8]
   15424:	adrp	x1, 16000 <__sanitizer_cov_dump@@Base+0x1548>
   15428:	add	x1, x1, #0x130
   1542c:	mov	w4, #0x0                   	// #0
   15430:	cmp	x2, x1
   15434:	b.ne	157bc <__sanitizer_cov_dump@@Base+0xd04>  // b.any
   15438:	mov	x2, x24
   1543c:	mov	x1, x22
   15440:	add	x0, x19, #0x10
   15444:	bl	162f8 <__sanitizer_cov_dump@@Base+0x1840>
   15448:	ldr	x24, [x21]
   1544c:	ldr	x0, [x19, #16]
   15450:	ldr	x1, [x22, #520]
   15454:	cmp	x0, x1
   15458:	b.eq	1546c <__sanitizer_cov_dump@@Base+0x9b4>  // b.none
   1545c:	str	xzr, [x23, #8]
   15460:	str	x0, [x22, #520]
   15464:	str	xzr, [x22, #1040]
   15468:	str	xzr, [x22, #1560]
   1546c:	cmp	x24, #0xfff
   15470:	b.ls	15784 <__sanitizer_cov_dump@@Base+0xccc>  // b.plast
   15474:	ldr	x3, [x19, #16]
   15478:	and	x4, x24, #0xfffffffffffff000
   1547c:	cmp	x3, x4
   15480:	b.ne	157a4 <__sanitizer_cov_dump@@Base+0xcec>  // b.any
   15484:	ldr	x0, [x22, #520]
   15488:	and	x4, x24, #0xfff
   1548c:	cmp	x0, x3
   15490:	b.ne	157d4 <__sanitizer_cov_dump@@Base+0xd1c>  // b.any
   15494:	ldr	x1, [x23, #8]
   15498:	lsr	x2, x4, #6
   1549c:	mov	x0, #0x1                   	// #1
   154a0:	add	x3, x2, x0
   154a4:	lsl	x24, x0, x24
   154a8:	lsl	x0, x0, x2
   154ac:	tst	x1, x0
   154b0:	b.ne	156a0 <__sanitizer_cov_dump@@Base+0xbe8>  // b.any
   154b4:	orr	x0, x1, x0
   154b8:	str	x0, [x23, #8]
   154bc:	str	x24, [x22, x3, lsl #3]
   154c0:	ldr	x3, [x22, #1560]
   154c4:	cmp	x3, #0x3f
   154c8:	b.hi	15718 <__sanitizer_cov_dump@@Base+0xc60>  // b.pmore
   154cc:	add	x0, x3, #0x83
   154d0:	add	x3, x3, #0x1
   154d4:	str	x3, [x22, #1560]
   154d8:	lsl	x0, x0, #3
   154dc:	add	x1, x22, x0
   154e0:	str	w4, [x22, x0]
   154e4:	str	w25, [x1, #4]
   154e8:	b	156d0 <__sanitizer_cov_dump@@Base+0xc18>
   154ec:	cbz	x5, 153c0 <__sanitizer_cov_dump@@Base+0x908>
   154f0:	and	x0, x2, #0xfffffffffffff000
   154f4:	cmp	x0, x5
   154f8:	b.ne	153c0 <__sanitizer_cov_dump@@Base+0x908>  // b.any
   154fc:	ubfx	x1, x2, #6, #6
   15500:	mov	x0, #0x1                   	// #1
   15504:	add	x3, x1, x0
   15508:	lsl	x4, x0, x2
   1550c:	lsl	x0, x0, x1
   15510:	str	x0, [x23, #8]
   15514:	and	x2, x2, #0xfff
   15518:	str	x4, [x22, x3, lsl #3]
   1551c:	ldr	x3, [x22, #1560]
   15520:	cmp	x3, #0x3f
   15524:	b.hi	15718 <__sanitizer_cov_dump@@Base+0xc60>  // b.pmore
   15528:	add	x0, x3, #0x83
   1552c:	add	x3, x3, #0x1
   15530:	str	x3, [x22, #1560]
   15534:	lsl	x0, x0, #3
   15538:	add	x1, x22, x0
   1553c:	str	w2, [x22, x0]
   15540:	str	w25, [x1, #4]
   15544:	b	156d8 <__sanitizer_cov_dump@@Base+0xc20>
   15548:	mov	x0, x20
   1554c:	blr	x2
   15550:	ldr	x1, [x23, #8]
   15554:	mov	w25, w0
   15558:	add	x22, x23, #0x8
   1555c:	ldr	x2, [x21]
   15560:	ldr	x5, [x23, #528]
   15564:	cbnz	x1, 153c0 <__sanitizer_cov_dump@@Base+0x908>
   15568:	b	154ec <__sanitizer_cov_dump@@Base+0xa34>
   1556c:	and	x0, x2, #0xfffffffffffff000
   15570:	cmp	x0, x5
   15574:	b.ne	153d0 <__sanitizer_cov_dump@@Base+0x918>  // b.any
   15578:	ldr	x9, [x23, #1568]
   1557c:	ubfx	x6, x2, #6, #6
   15580:	mov	x0, #0x1                   	// #1
   15584:	and	x8, x2, #0xfff
   15588:	add	x5, x6, x0
   1558c:	lsl	x3, x0, x6
   15590:	lsl	x2, x0, x2
   15594:	cbz	x9, 155e8 <__sanitizer_cov_dump@@Base+0xb30>
   15598:	add	x6, x6, #0x1
   1559c:	add	x7, x19, #0x630
   155a0:	add	x11, x23, #0x420
   155a4:	mov	x0, #0x0                   	// #0
   155a8:	mov	w10, #0x208                 	// #520
   155ac:	mov	w12, #0x41                  	// #65
   155b0:	lsl	x4, x0, #3
   155b4:	ldr	w4, [x11, x4]
   155b8:	umull	x5, w4, w10
   155bc:	ldr	x5, [x7, x5]
   155c0:	tst	x3, x5
   155c4:	b.eq	153d0 <__sanitizer_cov_dump@@Base+0x918>  // b.none
   155c8:	umaddl	x4, w4, w12, x6
   155cc:	mov	x5, x6
   155d0:	ldr	x4, [x7, x4, lsl #3]
   155d4:	tst	x2, x4
   155d8:	b.eq	153d0 <__sanitizer_cov_dump@@Base+0x918>  // b.none
   155dc:	add	x0, x0, #0x1
   155e0:	cmp	x9, x0
   155e4:	b.ne	155b0 <__sanitizer_cov_dump@@Base+0xaf8>  // b.any
   155e8:	tst	x1, x3
   155ec:	b.ne	15750 <__sanitizer_cov_dump@@Base+0xc98>  // b.any
   155f0:	orr	x1, x1, x3
   155f4:	str	x1, [x23, #8]
   155f8:	str	x2, [x22, x5, lsl #3]
   155fc:	ldr	x3, [x22, #1560]
   15600:	cmp	x3, #0x3f
   15604:	b.hi	15718 <__sanitizer_cov_dump@@Base+0xc60>  // b.pmore
   15608:	add	x0, x3, #0x83
   1560c:	add	x3, x3, #0x1
   15610:	str	x3, [x22, #1560]
   15614:	lsl	x0, x0, #3
   15618:	add	x1, x22, x0
   1561c:	str	w8, [x22, x0]
   15620:	str	w25, [x1, #4]
   15624:	b	156d8 <__sanitizer_cov_dump@@Base+0xc20>
   15628:	ldr	x0, [x19, #16]
   1562c:	ldr	x3, [x22, #520]
   15630:	ldr	x24, [x21]
   15634:	cmp	x0, x3
   15638:	b.ne	157f4 <__sanitizer_cov_dump@@Base+0xd3c>  // b.any
   1563c:	cmp	x24, #0xfff
   15640:	b.ls	15784 <__sanitizer_cov_dump@@Base+0xccc>  // b.plast
   15644:	and	x4, x24, #0xfffffffffffff000
   15648:	mov	x3, x0
   1564c:	cmp	x0, x4
   15650:	b.ne	157a4 <__sanitizer_cov_dump@@Base+0xcec>  // b.any
   15654:	ldr	x2, [x23, #8]
   15658:	ubfx	x1, x24, #6, #6
   1565c:	mov	x0, #0x1                   	// #1
   15660:	lsl	x3, x0, x1
   15664:	tst	x3, x2
   15668:	b.eq	15410 <__sanitizer_cov_dump@@Base+0x958>  // b.none
   1566c:	add	x1, x1, x0
   15670:	lsl	x0, x0, x24
   15674:	ldr	x1, [x22, x1, lsl #3]
   15678:	tst	x0, x1
   1567c:	b.eq	15410 <__sanitizer_cov_dump@@Base+0x958>  // b.none
   15680:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15684:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15688:	add	x2, x2, #0x938
   1568c:	add	x0, x0, #0x960
   15690:	mov	x4, #0x0                   	// #0
   15694:	mov	x3, #0x0                   	// #0
   15698:	mov	w1, #0xa5                  	// #165
   1569c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   156a0:	ldr	x0, [x22, x3, lsl #3]
   156a4:	orr	x24, x24, x0
   156a8:	str	x24, [x22, x3, lsl #3]
   156ac:	cmp	x0, x24
   156b0:	b.ne	154c0 <__sanitizer_cov_dump@@Base+0xa08>  // b.any
   156b4:	ldr	x3, [x22, #1040]
   156b8:	cmp	x3, #0x3f
   156bc:	b.hi	15734 <__sanitizer_cov_dump@@Base+0xc7c>  // b.pmore
   156c0:	add	x0, x3, #0x42
   156c4:	add	x3, x3, #0x1
   156c8:	str	x3, [x22, #1040]
   156cc:	str	x4, [x22, x0, lsl #3]
   156d0:	dmb	ish
   156d4:	strb	wzr, [x19, #8]
   156d8:	ldp	x21, x22, [sp, #16]
   156dc:	ldp	x23, x24, [sp, #32]
   156e0:	ldp	x25, x26, [sp, #48]
   156e4:	ldr	x30, [sp, #64]
   156e8:	ldp	x19, x20, [sp], #96
   156ec:	ret
   156f0:	ldr	x2, [x1]
   156f4:	adrp	x0, 16000 <__sanitizer_cov_dump@@Base+0x1548>
   156f8:	add	x0, x0, #0x128
   156fc:	cmp	x2, x0
   15700:	b.eq	15420 <__sanitizer_cov_dump@@Base+0x968>  // b.none
   15704:	mov	x0, x20
   15708:	blr	x2
   1570c:	mov	w3, w0
   15710:	ldr	x1, [x20]
   15714:	b	15420 <__sanitizer_cov_dump@@Base+0x968>
   15718:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   1571c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15720:	add	x2, x2, #0x880
   15724:	add	x0, x0, #0x7b8
   15728:	mov	x4, #0x40                  	// #64
   1572c:	mov	w1, #0x43                  	// #67
   15730:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15734:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15738:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   1573c:	add	x2, x2, #0x8e0
   15740:	add	x0, x0, #0x7b8
   15744:	mov	x4, #0x40                  	// #64
   15748:	mov	w1, #0x3f                  	// #63
   1574c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15750:	ldr	x0, [x22, x5, lsl #3]
   15754:	orr	x2, x2, x0
   15758:	str	x2, [x22, x5, lsl #3]
   1575c:	cmp	x0, x2
   15760:	b.ne	155fc <__sanitizer_cov_dump@@Base+0xb44>  // b.any
   15764:	ldr	x3, [x22, #1040]
   15768:	cmp	x3, #0x3f
   1576c:	b.hi	15734 <__sanitizer_cov_dump@@Base+0xc7c>  // b.pmore
   15770:	add	x0, x3, #0x42
   15774:	add	x3, x3, #0x1
   15778:	str	x3, [x22, #1040]
   1577c:	str	x8, [x22, x0, lsl #3]
   15780:	b	156d8 <__sanitizer_cov_dump@@Base+0xc20>
   15784:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15788:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   1578c:	mov	x3, x24
   15790:	add	x2, x2, #0x7a0
   15794:	add	x0, x0, #0x7b8
   15798:	mov	x4, #0x1000                	// #4096
   1579c:	mov	w1, #0x172                 	// #370
   157a0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   157a4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   157a8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   157ac:	add	x2, x2, #0xa50
   157b0:	add	x0, x0, #0x7b8
   157b4:	mov	w1, #0x173                 	// #371
   157b8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   157bc:	str	w3, [sp, #92]
   157c0:	mov	x0, x20
   157c4:	blr	x2
   157c8:	mov	w4, w0
   157cc:	ldr	w3, [sp, #92]
   157d0:	b	15438 <__sanitizer_cov_dump@@Base+0x980>
   157d4:	mov	x4, x3
   157d8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   157dc:	mov	x3, x0
   157e0:	add	x2, x2, #0xa80
   157e4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   157e8:	mov	w1, #0x3c                  	// #60
   157ec:	add	x0, x0, #0x7b8
   157f0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   157f4:	mov	x4, x0
   157f8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   157fc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15800:	add	x2, x2, #0xa80
   15804:	add	x0, x0, #0x7b8
   15808:	mov	w1, #0x6c                  	// #108
   1580c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15810:	stp	x19, x20, [sp, #-336]!
   15814:	stp	x23, x24, [sp, #32]
   15818:	ldr	x23, [x1, #16]
   1581c:	stp	x21, x22, [sp, #16]
   15820:	mov	x22, x2
   15824:	ldr	x4, [x0, #16]
   15828:	stp	x25, x26, [sp, #48]
   1582c:	add	x2, x23, #0x8
   15830:	ldr	x3, [x2, #520]
   15834:	stp	x27, x28, [sp, #64]
   15838:	ldr	x25, [x22]
   1583c:	str	x30, [sp, #80]
   15840:	cmp	x4, x3
   15844:	b.ne	15a4c <__sanitizer_cov_dump@@Base+0xf94>  // b.any
   15848:	str	xzr, [x0, #1064]
   1584c:	mov	x19, x0
   15850:	add	x21, x0, #0x428
   15854:	ldr	x1, [x23, #8]
   15858:	cbz	x1, 158b0 <__sanitizer_cov_dump@@Base+0xdf8>
   1585c:	mov	x3, #0x0                   	// #0
   15860:	mov	x6, #0x1                   	// #1
   15864:	rbit	x0, x1
   15868:	clz	x0, x0
   1586c:	lsl	x5, x6, x0
   15870:	orr	x4, x5, x3
   15874:	str	x4, [x19, #1064]
   15878:	bic	x1, x1, x5
   1587c:	cmp	x3, x4
   15880:	add	x0, x0, #0x1
   15884:	b.eq	158a8 <__sanitizer_cov_dump@@Base+0xdf0>  // b.none
   15888:	mov	x4, #0x0                   	// #0
   1588c:	str	xzr, [x21, x0, lsl #3]
   15890:	ldr	x3, [x2, x0, lsl #3]
   15894:	orr	x3, x3, x4
   15898:	str	x3, [x21, x0, lsl #3]
   1589c:	cbz	x1, 158b0 <__sanitizer_cov_dump@@Base+0xdf8>
   158a0:	ldr	x3, [x19, #1064]
   158a4:	b	15864 <__sanitizer_cov_dump@@Base+0xdac>
   158a8:	ldr	x4, [x21, x0, lsl #3]
   158ac:	b	15890 <__sanitizer_cov_dump@@Base+0xdd8>
   158b0:	mov	x3, x25
   158b4:	cmp	x25, #0xfff
   158b8:	b.ls	15a90 <__sanitizer_cov_dump@@Base+0xfd8>  // b.plast
   158bc:	ldr	x3, [x19, #16]
   158c0:	and	x4, x25, #0xfffffffffffff000
   158c4:	cmp	x3, x4
   158c8:	b.ne	15ab0 <__sanitizer_cov_dump@@Base+0xff8>  // b.any
   158cc:	ubfx	x24, x25, #6, #6
   158d0:	mov	x5, #0x1                   	// #1
   158d4:	ldr	x20, [x19, #1064]
   158d8:	add	x0, x24, x5
   158dc:	and	x6, x25, #0xfff
   158e0:	lsl	x24, x5, x24
   158e4:	add	x11, x21, x0, lsl #3
   158e8:	ands	x20, x20, x24
   158ec:	lsl	x5, x5, x25
   158f0:	b.eq	15920 <__sanitizer_cov_dump@@Base+0xe68>  // b.none
   158f4:	ldr	x0, [x21, x0, lsl #3]
   158f8:	tst	x5, x0
   158fc:	b.eq	15920 <__sanitizer_cov_dump@@Base+0xe68>  // b.none
   15900:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15904:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15908:	add	x2, x2, #0x9b0
   1590c:	add	x0, x0, #0x7b8
   15910:	mov	x4, #0x0                   	// #0
   15914:	mov	x3, #0x0                   	// #0
   15918:	mov	w1, #0x13e                 	// #318
   1591c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15920:	add	x8, x6, x6, lsl #6
   15924:	str	x6, [sp, #176]
   15928:	add	x7, x19, #0x630
   1592c:	mov	x26, #0x1                   	// #1
   15930:	add	x3, sp, #0xb8
   15934:	add	x10, x7, x8, lsl #3
   15938:	mov	x9, x26
   1593c:	cbz	x20, 15974 <__sanitizer_cov_dump@@Base+0xebc>
   15940:	ldr	x20, [x11]
   15944:	ands	x20, x5, x20
   15948:	b.eq	15974 <__sanitizer_cov_dump@@Base+0xebc>  // b.none
   1594c:	mov	x0, #0x1                   	// #1
   15950:	cmp	x0, x26
   15954:	b.eq	15ae8 <__sanitizer_cov_dump@@Base+0x1030>  // b.none
   15958:	add	x26, x26, #0x1
   1595c:	cmp	x26, #0x15
   15960:	b.eq	15c64 <__sanitizer_cov_dump@@Base+0x11ac>  // b.none
   15964:	ldr	x20, [x19, #1064]
   15968:	str	x6, [sp, #176]
   1596c:	and	x20, x20, x24
   15970:	cbnz	x20, 15940 <__sanitizer_cov_dump@@Base+0xe88>
   15974:	sub	x4, x26, #0x1
   15978:	mov	x28, #0x0                   	// #0
   1597c:	mov	x27, #0x0                   	// #0
   15980:	mov	x12, #0x0                   	// #0
   15984:	cbnz	x27, 15a28 <__sanitizer_cov_dump@@Base+0xf70>
   15988:	cbnz	x20, 15958 <__sanitizer_cov_dump@@Base+0xea0>
   1598c:	ldr	x27, [x10]
   15990:	cbz	x27, 15958 <__sanitizer_cov_dump@@Base+0xea0>
   15994:	cbnz	x28, 15a64 <__sanitizer_cov_dump@@Base+0xfac>
   15998:	mov	x1, x8
   1599c:	mov	x20, x28
   159a0:	rbit	x12, x27
   159a4:	clz	x12, x12
   159a8:	add	x0, x12, x1
   159ac:	add	x0, x0, #0x1
   159b0:	ldr	x2, [x7, x0, lsl #3]
   159b4:	cbz	x2, 15ac8 <__sanitizer_cov_dump@@Base+0x1010>
   159b8:	add	x1, x28, x12
   159bc:	lsl	x0, x9, x12
   159c0:	mov	x28, x2
   159c4:	bic	x27, x27, x0
   159c8:	rbit	x0, x28
   159cc:	clz	x0, x0
   159d0:	add	x1, x0, x1, lsl #6
   159d4:	lsl	x2, x9, x0
   159d8:	bic	x28, x28, x2
   159dc:	orr	x0, x28, x27
   159e0:	cbz	x0, 15a7c <__sanitizer_cov_dump@@Base+0xfc4>
   159e4:	mov	x0, x7
   159e8:	mov	x2, x21
   159ec:	stp	x7, x3, [sp, #104]
   159f0:	stp	x4, x6, [sp, #120]
   159f4:	stp	x11, x12, [sp, #136]
   159f8:	stp	x10, x5, [sp, #152]
   159fc:	str	x8, [sp, #168]
   15a00:	bl	165d8 <__sanitizer_cov_dump@@Base+0x1b20>
   15a04:	mov	x9, #0x1                   	// #1
   15a08:	ldp	x7, x3, [sp, #104]
   15a0c:	ldp	x4, x6, [sp, #120]
   15a10:	ldp	x11, x12, [sp, #136]
   15a14:	ldp	x10, x5, [sp, #152]
   15a18:	ldr	x8, [sp, #168]
   15a1c:	cbz	x0, 15984 <__sanitizer_cov_dump@@Base+0xecc>
   15a20:	add	x0, x0, x9
   15a24:	b	15950 <__sanitizer_cov_dump@@Base+0xe98>
   15a28:	lsl	x0, x20, #6
   15a2c:	cbz	x28, 15a70 <__sanitizer_cov_dump@@Base+0xfb8>
   15a30:	rbit	x1, x28
   15a34:	add	x0, x12, x0
   15a38:	clz	x1, x1
   15a3c:	lsl	x2, x9, x1
   15a40:	add	x1, x1, x0, lsl #6
   15a44:	bic	x28, x28, x2
   15a48:	b	159e4 <__sanitizer_cov_dump@@Base+0xf2c>
   15a4c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15a50:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15a54:	add	x2, x2, #0xa80
   15a58:	add	x0, x0, #0x7b8
   15a5c:	mov	w1, #0x6c                  	// #108
   15a60:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15a64:	mov	x1, x12
   15a68:	mov	x27, #0x0                   	// #0
   15a6c:	b	159c8 <__sanitizer_cov_dump@@Base+0xf10>
   15a70:	add	x1, x8, x0
   15a74:	mov	x28, x0
   15a78:	b	159a0 <__sanitizer_cov_dump@@Base+0xee8>
   15a7c:	add	x20, x20, #0x1
   15a80:	mov	x27, #0x0                   	// #0
   15a84:	mov	x28, #0x0                   	// #0
   15a88:	b	159e4 <__sanitizer_cov_dump@@Base+0xf2c>
   15a8c:	mov	x3, x5
   15a90:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15a94:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15a98:	add	x2, x2, #0x7a0
   15a9c:	add	x0, x0, #0x7b8
   15aa0:	mov	x4, #0x1000                	// #4096
   15aa4:	mov	w1, #0x172                 	// #370
   15aa8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15aac:	mov	x3, x1
   15ab0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15ab4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15ab8:	add	x2, x2, #0xa50
   15abc:	add	x0, x0, #0x7b8
   15ac0:	mov	w1, #0x173                 	// #371
   15ac4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15ac8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15acc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15ad0:	add	x2, x2, #0x728
   15ad4:	add	x0, x0, #0x748
   15ad8:	mov	x4, #0x0                   	// #0
   15adc:	mov	x3, #0x0                   	// #0
   15ae0:	mov	w1, #0x132                 	// #306
   15ae4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15ae8:	add	x7, sp, #0xb0
   15aec:	mov	x0, x7
   15af0:	add	x2, x7, x26, lsl #3
   15af4:	b	15b0c <__sanitizer_cov_dump@@Base+0x1054>
   15af8:	ldr	x1, [x19, #16]
   15afc:	add	x3, x3, x1
   15b00:	str	x3, [x0], #8
   15b04:	cmp	x2, x0
   15b08:	b.eq	15b34 <__sanitizer_cov_dump@@Base+0x107c>  // b.none
   15b0c:	ldr	x3, [x0]
   15b10:	cmp	x3, #0xfff
   15b14:	b.ls	15af8 <__sanitizer_cov_dump@@Base+0x1040>  // b.plast
   15b18:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15b1c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15b20:	add	x2, x2, #0x9d0
   15b24:	add	x0, x0, #0x7b8
   15b28:	mov	x4, #0x1000                	// #4096
   15b2c:	mov	w1, #0x16f                 	// #367
   15b30:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15b34:	ldr	x5, [sp, #176]
   15b38:	cmp	x25, x5
   15b3c:	b.ne	15cb4 <__sanitizer_cov_dump@@Base+0x11fc>  // b.any
   15b40:	ldr	x3, [x22]
   15b44:	cmp	x3, x25
   15b48:	b.ne	15c8c <__sanitizer_cov_dump@@Base+0x11d4>  // b.any
   15b4c:	add	x10, x19, #0x10
   15b50:	cmp	x26, #0x14
   15b54:	mov	x13, #0xa40                 	// #2624
   15b58:	mov	x11, #0x1146                	// #4422
   15b5c:	add	x12, x10, #0x410, lsl #12
   15b60:	add	x9, x23, #0x630
   15b64:	mov	x2, #0x14                  	// #20
   15b68:	mov	w0, #0x1                   	// #1
   15b6c:	csel	x26, x26, x2, ls  // ls = plast
   15b70:	mov	x8, #0x1                   	// #1
   15b74:	movk	x13, #0x21, lsl #16
   15b78:	movk	x11, #0x4, lsl #16
   15b7c:	str	w26, [x23, #1576]
   15b80:	strb	w0, [x23, #2224]
   15b84:	udiv	x0, x8, x26
   15b88:	cmp	x5, #0xfff
   15b8c:	msub	x0, x0, x26, x8
   15b90:	b.ls	15a8c <__sanitizer_cov_dump@@Base+0xfd4>  // b.plast
   15b94:	and	x4, x5, #0xfffffffffffff000
   15b98:	cmp	x1, x4
   15b9c:	b.ne	15aac <__sanitizer_cov_dump@@Base+0xff4>  // b.any
   15ba0:	ldr	x3, [x7, x0, lsl #3]
   15ba4:	and	x5, x5, #0xfff
   15ba8:	cmp	x3, #0xfff
   15bac:	b.ls	15a90 <__sanitizer_cov_dump@@Base+0xfd8>  // b.plast
   15bb0:	and	x4, x3, #0xfffffffffffff000
   15bb4:	cmp	x1, x4
   15bb8:	b.ne	15aac <__sanitizer_cov_dump@@Base+0xff4>  // b.any
   15bbc:	ldr	x4, [x12, #2608]
   15bc0:	and	x6, x3, #0xfff
   15bc4:	cbz	x4, 15ca8 <__sanitizer_cov_dump@@Base+0x11f0>
   15bc8:	add	x0, x19, x13
   15bcc:	mov	x2, #0x0                   	// #0
   15bd0:	b	15be4 <__sanitizer_cov_dump@@Base+0x112c>
   15bd4:	add	x2, x2, #0x1
   15bd8:	add	x0, x0, #0x10
   15bdc:	cmp	x4, x2
   15be0:	b.eq	15c54 <__sanitizer_cov_dump@@Base+0x119c>  // b.none
   15be4:	ldrh	w3, [x0]
   15be8:	cmp	x5, x3
   15bec:	b.ne	15bd4 <__sanitizer_cov_dump@@Base+0x111c>  // b.any
   15bf0:	ldrh	w3, [x0, #2]
   15bf4:	cmp	x6, x3
   15bf8:	b.ne	15bd4 <__sanitizer_cov_dump@@Base+0x111c>  // b.any
   15bfc:	add	x0, x19, x2, lsl #4
   15c00:	add	x0, x0, #0x210, lsl #12
   15c04:	ldrsw	x4, [x0, #2636]
   15c08:	ldr	w2, [x0, #2628]
   15c0c:	ldr	w0, [x0, #2632]
   15c10:	add	x5, x5, x11
   15c14:	add	x3, x6, x11
   15c18:	cmp	x26, x8
   15c1c:	add	x8, x8, #0x1
   15c20:	ldr	x5, [x10, x5, lsl #3]
   15c24:	ldr	x3, [x10, x3, lsl #3]
   15c28:	str	x4, [x9]
   15c2c:	ldr	x4, [x5, #16]
   15c30:	str	x4, [x9, #8]
   15c34:	ldr	x3, [x3, #16]
   15c38:	str	x3, [x9, #16]
   15c3c:	stp	w0, w2, [x9, #24]
   15c40:	add	x9, x9, #0x20
   15c44:	b.eq	15c70 <__sanitizer_cov_dump@@Base+0x11b8>  // b.none
   15c48:	add	x0, x7, x8, lsl #3
   15c4c:	ldur	x5, [x0, #-8]
   15c50:	b	15b84 <__sanitizer_cov_dump@@Base+0x10cc>
   15c54:	mov	w0, #0xffffffff            	// #-1
   15c58:	mov	x4, #0x0                   	// #0
   15c5c:	mov	w2, w0
   15c60:	b	15c10 <__sanitizer_cov_dump@@Base+0x1158>
   15c64:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15c68:	add	x0, x0, #0xa28
   15c6c:	bl	1e5c0 <OnPrint@@Base+0x310>
   15c70:	ldp	x21, x22, [sp, #16]
   15c74:	ldp	x23, x24, [sp, #32]
   15c78:	ldp	x25, x26, [sp, #48]
   15c7c:	ldp	x27, x28, [sp, #64]
   15c80:	ldr	x30, [sp, #80]
   15c84:	ldp	x19, x20, [sp], #336
   15c88:	ret
   15c8c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15c90:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15c94:	mov	x4, x25
   15c98:	add	x2, x2, #0xa08
   15c9c:	add	x0, x0, #0x960
   15ca0:	mov	w1, #0x7f                  	// #127
   15ca4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15ca8:	mov	w0, #0xffffffff            	// #-1
   15cac:	mov	w2, w0
   15cb0:	b	15c10 <__sanitizer_cov_dump@@Base+0x1158>
   15cb4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15cb8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15cbc:	mov	x4, x25
   15cc0:	mov	x3, x5
   15cc4:	add	x2, x2, #0x9e8
   15cc8:	add	x0, x0, #0x7b8
   15ccc:	mov	w1, #0x143                 	// #323
   15cd0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15cd4:	nop
   15cd8:	stp	x19, x20, [sp, #-64]!
   15cdc:	mov	x19, x0
   15ce0:	stp	x21, x22, [sp, #16]
   15ce4:	ldr	x21, [x1, #16]
   15ce8:	ldr	x0, [x21, #8]
   15cec:	str	x30, [sp, #40]
   15cf0:	cbz	x0, 15ebc <__sanitizer_cov_dump@@Base+0x1404>
   15cf4:	ldr	x0, [x2]
   15cf8:	mov	x22, x1
   15cfc:	mov	x20, x2
   15d00:	cbz	x0, 15d14 <__sanitizer_cov_dump@@Base+0x125c>
   15d04:	ldr	x2, [x19, #16]
   15d08:	ldr	x1, [x21, #528]
   15d0c:	cmp	x1, x2
   15d10:	b.eq	15edc <__sanitizer_cov_dump@@Base+0x1424>  // b.none
   15d14:	add	x0, x19, #0x8
   15d18:	mov	w2, #0x1                   	// #1
   15d1c:	str	x23, [sp, #32]
   15d20:	ldxrb	w1, [x0]
   15d24:	stxrb	w3, w2, [x0]
   15d28:	cbnz	w3, 15d20 <__sanitizer_cov_dump@@Base+0x1268>
   15d2c:	dmb	ish
   15d30:	tst	w1, #0xff
   15d34:	b.eq	15d3c <__sanitizer_cov_dump@@Base+0x1284>  // b.none
   15d38:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   15d3c:	add	x23, x21, #0x8
   15d40:	mov	x1, x21
   15d44:	mov	x0, x19
   15d48:	mov	x2, x20
   15d4c:	bl	14ed0 <__sanitizer_cov_dump@@Base+0x418>
   15d50:	ldr	x1, [x19, #16]
   15d54:	ldr	x3, [x23, #520]
   15d58:	ldr	x0, [x20]
   15d5c:	cmp	x1, x3
   15d60:	b.ne	15f58 <__sanitizer_cov_dump@@Base+0x14a0>  // b.any
   15d64:	cmp	x0, #0xfff
   15d68:	b.ls	15f74 <__sanitizer_cov_dump@@Base+0x14bc>  // b.plast
   15d6c:	and	x4, x0, #0xfffffffffffff000
   15d70:	cmp	x1, x4
   15d74:	b.ne	15f94 <__sanitizer_cov_dump@@Base+0x14dc>  // b.any
   15d78:	ldr	x2, [x21, #8]
   15d7c:	ubfx	x1, x0, #6, #6
   15d80:	mov	x3, #0x1                   	// #1
   15d84:	add	x8, x1, x3
   15d88:	lsl	x5, x3, x1
   15d8c:	and	x1, x0, #0xfff
   15d90:	tst	x5, x2
   15d94:	lsl	x3, x3, x0
   15d98:	b.ne	15ecc <__sanitizer_cov_dump@@Base+0x1414>  // b.any
   15d9c:	add	x6, x19, #0x208, lsl #12
   15da0:	add	x4, x1, x1, lsl #6
   15da4:	add	x10, x19, #0x630
   15da8:	str	xzr, [x6, #1584]
   15dac:	ldr	x1, [x10, x4, lsl #3]
   15db0:	cbz	x1, 15fb0 <__sanitizer_cov_dump@@Base+0x14f8>
   15db4:	add	x9, x19, #0x208, lsl #12
   15db8:	mov	x2, #0x0                   	// #0
   15dbc:	add	x9, x9, #0x630
   15dc0:	mov	x11, #0x1                   	// #1
   15dc4:	rbit	x0, x1
   15dc8:	clz	x0, x0
   15dcc:	lsl	x0, x11, x0
   15dd0:	orr	x7, x0, x2
   15dd4:	cmp	x7, x2
   15dd8:	rbit	x2, x1
   15ddc:	str	x7, [x6, #1584]
   15de0:	clz	x2, x2
   15de4:	bic	x1, x1, x0
   15de8:	add	x7, x2, #0x1
   15dec:	b.eq	15f50 <__sanitizer_cov_dump@@Base+0x1498>  // b.none
   15df0:	mov	x12, #0x0                   	// #0
   15df4:	str	xzr, [x9, x7, lsl #3]
   15df8:	add	x2, x2, x4
   15dfc:	add	x2, x2, #0x1
   15e00:	ldr	x0, [x10, x2, lsl #3]
   15e04:	orr	x0, x0, x12
   15e08:	str	x0, [x9, x7, lsl #3]
   15e0c:	cbz	x1, 15fb0 <__sanitizer_cov_dump@@Base+0x14f8>
   15e10:	ldr	x2, [x6, #1584]
   15e14:	b	15dc4 <__sanitizer_cov_dump@@Base+0x130c>
   15e18:	ldr	x0, [x21, #8]
   15e1c:	mov	x4, #0x1                   	// #1
   15e20:	ldr	x3, [x6, #2104]
   15e24:	ands	x0, x3, x0
   15e28:	b.eq	15eb0 <__sanitizer_cov_dump@@Base+0x13f8>  // b.none
   15e2c:	rbit	x1, x0
   15e30:	clz	x1, x1
   15e34:	mov	x2, x1
   15e38:	lsl	x1, x4, x1
   15e3c:	tst	x1, x3
   15e40:	bic	x0, x0, x1
   15e44:	b.eq	160ac <__sanitizer_cov_dump@@Base+0x15f4>  // b.none
   15e48:	add	x1, x2, #0x1
   15e4c:	ldr	x2, [x23, x1, lsl #3]
   15e50:	ldr	x1, [x7, x1, lsl #3]
   15e54:	tst	x2, x1
   15e58:	b.eq	160ac <__sanitizer_cov_dump@@Base+0x15f4>  // b.none
   15e5c:	ldr	x1, [x22]
   15e60:	adrp	x0, 16000 <__sanitizer_cov_dump@@Base+0x1548>
   15e64:	add	x0, x0, #0x128
   15e68:	mov	w3, #0x0                   	// #0
   15e6c:	ldr	x2, [x20]
   15e70:	ldr	x4, [x1]
   15e74:	cmp	x4, x0
   15e78:	b.ne	160ec <__sanitizer_cov_dump@@Base+0x1634>  // b.any
   15e7c:	ldr	x1, [x1, #8]
   15e80:	adrp	x0, 16000 <__sanitizer_cov_dump@@Base+0x1548>
   15e84:	add	x0, x0, #0x130
   15e88:	mov	w4, #0x0                   	// #0
   15e8c:	cmp	x1, x0
   15e90:	b.ne	160cc <__sanitizer_cov_dump@@Base+0x1614>  // b.any
   15e94:	mov	x1, x23
   15e98:	add	x0, x19, #0x10
   15e9c:	bl	162f8 <__sanitizer_cov_dump@@Base+0x1840>
   15ea0:	mov	x2, x20
   15ea4:	mov	x1, x22
   15ea8:	mov	x0, x19
   15eac:	bl	15810 <__sanitizer_cov_dump@@Base+0xd58>
   15eb0:	dmb	ish
   15eb4:	strb	wzr, [x19, #8]
   15eb8:	ldr	x23, [sp, #32]
   15ebc:	ldp	x21, x22, [sp, #16]
   15ec0:	ldr	x30, [sp, #40]
   15ec4:	ldp	x19, x20, [sp], #64
   15ec8:	ret
   15ecc:	ldr	x0, [x23, x8, lsl #3]
   15ed0:	tst	x3, x0
   15ed4:	b.eq	15d9c <__sanitizer_cov_dump@@Base+0x12e4>  // b.none
   15ed8:	b	15eb0 <__sanitizer_cov_dump@@Base+0x13f8>
   15edc:	and	x2, x0, #0xfffffffffffff000
   15ee0:	cmp	x1, x2
   15ee4:	b.ne	15d14 <__sanitizer_cov_dump@@Base+0x125c>  // b.any
   15ee8:	ldr	x6, [x21, #1568]
   15eec:	cbz	x6, 15ebc <__sanitizer_cov_dump@@Base+0x1404>
   15ef0:	ubfx	x3, x0, #6, #6
   15ef4:	mov	x1, #0x1                   	// #1
   15ef8:	add	x5, x19, #0x630
   15efc:	add	x8, x21, #0x420
   15f00:	add	x10, x3, x1
   15f04:	lsl	x0, x1, x0
   15f08:	lsl	x3, x1, x3
   15f0c:	mov	w7, #0x208                 	// #520
   15f10:	mov	x1, #0x0                   	// #0
   15f14:	mov	w9, #0x41                  	// #65
   15f18:	lsl	x2, x1, #3
   15f1c:	ldr	w2, [x8, x2]
   15f20:	umull	x4, w2, w7
   15f24:	ldr	x4, [x5, x4]
   15f28:	tst	x3, x4
   15f2c:	b.eq	15d14 <__sanitizer_cov_dump@@Base+0x125c>  // b.none
   15f30:	umaddl	x2, w2, w9, x10
   15f34:	ldr	x2, [x5, x2, lsl #3]
   15f38:	tst	x0, x2
   15f3c:	b.eq	15d14 <__sanitizer_cov_dump@@Base+0x125c>  // b.none
   15f40:	add	x1, x1, #0x1
   15f44:	cmp	x6, x1
   15f48:	b.ne	15f18 <__sanitizer_cov_dump@@Base+0x1460>  // b.any
   15f4c:	b	15ebc <__sanitizer_cov_dump@@Base+0x1404>
   15f50:	ldr	x12, [x9, x7, lsl #3]
   15f54:	b	15df8 <__sanitizer_cov_dump@@Base+0x1340>
   15f58:	mov	x4, x1
   15f5c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15f60:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15f64:	add	x2, x2, #0xa80
   15f68:	add	x0, x0, #0x7b8
   15f6c:	mov	w1, #0x6c                  	// #108
   15f70:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15f74:	mov	x3, x0
   15f78:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15f7c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15f80:	add	x2, x2, #0x7a0
   15f84:	add	x0, x0, #0x7b8
   15f88:	mov	x4, #0x1000                	// #4096
   15f8c:	mov	w1, #0x172                 	// #370
   15f90:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15f94:	mov	x3, x1
   15f98:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15f9c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   15fa0:	add	x2, x2, #0xa50
   15fa4:	add	x0, x0, #0x7b8
   15fa8:	mov	w1, #0x173                 	// #371
   15fac:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   15fb0:	add	x7, x19, #0x208, lsl #12
   15fb4:	add	x9, x19, #0x208, lsl #12
   15fb8:	add	x7, x7, #0x838
   15fbc:	add	x9, x9, #0x630
   15fc0:	str	x5, [x6, #2104]
   15fc4:	mov	w12, #0x40                  	// #64
   15fc8:	mov	x13, #0x208                 	// #520
   15fcc:	mov	x5, #0x1                   	// #1
   15fd0:	str	x3, [x7, x8, lsl #3]
   15fd4:	ldr	x0, [x6, #1584]
   15fd8:	cbz	x0, 15e18 <__sanitizer_cov_dump@@Base+0x1360>
   15fdc:	rbit	x1, x0
   15fe0:	clz	x1, x1
   15fe4:	add	x3, x1, #0x1
   15fe8:	lsl	x4, x5, x1
   15fec:	bic	x0, x0, x4
   15ff0:	str	x0, [x6, #1584]
   15ff4:	ldr	x2, [x9, x3, lsl #3]
   15ff8:	cbz	x2, 16108 <__sanitizer_cov_dump@@Base+0x1650>
   15ffc:	rbit	x11, x2
   16000:	clz	x11, x11
   16004:	lsl	x8, x5, x11
   16008:	bic	x2, x2, x8
   1600c:	str	x2, [x9, x3, lsl #3]
   16010:	cbz	x2, 1601c <__sanitizer_cov_dump@@Base+0x1564>
   16014:	orr	x0, x4, x0
   16018:	str	x0, [x6, #1584]
   1601c:	sxtw	x11, w11
   16020:	ldr	x3, [x6, #2104]
   16024:	smaddl	x1, w1, w12, x11
   16028:	lsr	x0, x1, #6
   1602c:	lsl	x2, x5, x1
   16030:	add	x4, x0, #0x1
   16034:	lsl	x0, x5, x0
   16038:	tst	x3, x0
   1603c:	b.ne	160b4 <__sanitizer_cov_dump@@Base+0x15fc>  // b.any
   16040:	orr	x0, x3, x0
   16044:	str	x0, [x6, #2104]
   16048:	str	x2, [x7, x4, lsl #3]
   1604c:	mul	x0, x1, x13
   16050:	add	x1, x1, x1, lsl #6
   16054:	ldr	x2, [x10, x0]
   16058:	ldr	x8, [x6, #1584]
   1605c:	cbz	x2, 15fd4 <__sanitizer_cov_dump@@Base+0x151c>
   16060:	rbit	x4, x2
   16064:	clz	x4, x4
   16068:	mov	x0, x4
   1606c:	add	x3, x0, #0x1
   16070:	lsl	x4, x5, x4
   16074:	orr	x11, x4, x8
   16078:	str	x11, [x6, #1584]
   1607c:	cmp	x11, x8
   16080:	bic	x2, x2, x4
   16084:	lsl	x3, x3, #3
   16088:	b.eq	16090 <__sanitizer_cov_dump@@Base+0x15d8>  // b.none
   1608c:	str	xzr, [x9, x3]
   16090:	add	x0, x0, x1
   16094:	add	x0, x0, #0x1
   16098:	ldr	x4, [x9, x3]
   1609c:	ldr	x0, [x10, x0, lsl #3]
   160a0:	orr	x0, x4, x0
   160a4:	str	x0, [x9, x3]
   160a8:	b	16058 <__sanitizer_cov_dump@@Base+0x15a0>
   160ac:	cbnz	x0, 15e2c <__sanitizer_cov_dump@@Base+0x1374>
   160b0:	b	15eb0 <__sanitizer_cov_dump@@Base+0x13f8>
   160b4:	ldr	x0, [x7, x4, lsl #3]
   160b8:	orr	x2, x0, x2
   160bc:	str	x2, [x7, x4, lsl #3]
   160c0:	cmp	x0, x2
   160c4:	b.eq	15fd4 <__sanitizer_cov_dump@@Base+0x151c>  // b.none
   160c8:	b	1604c <__sanitizer_cov_dump@@Base+0x1594>
   160cc:	str	x2, [sp, #48]
   160d0:	mov	x0, x22
   160d4:	str	w3, [sp, #60]
   160d8:	blr	x1
   160dc:	mov	w4, w0
   160e0:	ldr	w3, [sp, #60]
   160e4:	ldr	x2, [sp, #48]
   160e8:	b	15e94 <__sanitizer_cov_dump@@Base+0x13dc>
   160ec:	str	x2, [sp, #48]
   160f0:	mov	x0, x22
   160f4:	blr	x4
   160f8:	mov	w3, w0
   160fc:	ldr	x1, [x22]
   16100:	ldr	x2, [sp, #48]
   16104:	b	15e7c <__sanitizer_cov_dump@@Base+0x13c4>
   16108:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1610c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   16110:	add	x2, x2, #0x758
   16114:	add	x0, x0, #0x748
   16118:	mov	x4, #0x0                   	// #0
   1611c:	mov	x3, #0x0                   	// #0
   16120:	mov	w1, #0x30                  	// #48
   16124:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   16128:	mov	w0, #0x0                   	// #0
   1612c:	ret
   16130:	mov	w0, #0x0                   	// #0
   16134:	ret
   16138:	stp	x19, x20, [sp, #-112]!
   1613c:	add	x1, x1, x1, lsl #6
   16140:	mov	x19, #0x0                   	// #0
   16144:	stp	x21, x22, [sp, #16]
   16148:	mov	x22, x0
   1614c:	add	x21, x1, #0x1
   16150:	stp	x23, x24, [sp, #32]
   16154:	mov	x24, x3
   16158:	add	x3, x3, #0x8
   1615c:	stp	x25, x26, [sp, #48]
   16160:	sub	x25, x4, #0x1
   16164:	mov	x20, #0x0                   	// #0
   16168:	stp	x27, x28, [sp, #64]
   1616c:	add	x28, x0, x1, lsl #3
   16170:	mov	x26, #0x0                   	// #0
   16174:	mov	x23, #0x0                   	// #0
   16178:	mov	x27, #0x1                   	// #1
   1617c:	str	x30, [sp, #80]
   16180:	cbnz	x20, 1622c <__sanitizer_cov_dump@@Base+0x1774>
   16184:	cbnz	x23, 1620c <__sanitizer_cov_dump@@Base+0x1754>
   16188:	ldr	x0, [x28]
   1618c:	cbz	x0, 1620c <__sanitizer_cov_dump@@Base+0x1754>
   16190:	cbz	x19, 16270 <__sanitizer_cov_dump@@Base+0x17b8>
   16194:	mov	x5, x26
   16198:	mov	x20, x23
   1619c:	rbit	x1, x19
   161a0:	clz	x1, x1
   161a4:	lsl	x0, x27, x1
   161a8:	bic	x19, x19, x0
   161ac:	orr	x0, x19, x20
   161b0:	cbnz	x0, 161c0 <__sanitizer_cov_dump@@Base+0x1708>
   161b4:	add	x23, x23, #0x1
   161b8:	mov	x20, #0x0                   	// #0
   161bc:	mov	x19, #0x0                   	// #0
   161c0:	cbz	x25, 16180 <__sanitizer_cov_dump@@Base+0x16c8>
   161c4:	sxtw	x1, w1
   161c8:	add	x1, x1, x5, lsl #6
   161cc:	str	x1, [x24, #8]
   161d0:	cmp	x1, #0x1, lsl #12
   161d4:	b.hi	162d8 <__sanitizer_cov_dump@@Base+0x1820>  // b.pmore
   161d8:	lsr	x0, x1, #12
   161dc:	ubfx	x4, x1, #6, #6
   161e0:	lsl	x6, x27, x4
   161e4:	ldr	x5, [x2, x0, lsl #3]
   161e8:	tst	x6, x5
   161ec:	b.eq	16298 <__sanitizer_cov_dump@@Base+0x17e0>  // b.none
   161f0:	add	x0, x4, x0, lsl #6
   161f4:	lsl	x4, x27, x1
   161f8:	add	x0, x0, #0x1
   161fc:	ldr	x5, [x2, x0, lsl #3]
   16200:	tst	x4, x5
   16204:	b.eq	16298 <__sanitizer_cov_dump@@Base+0x17e0>  // b.none
   16208:	mov	x20, #0x2                   	// #2
   1620c:	mov	x0, x20
   16210:	ldp	x21, x22, [sp, #16]
   16214:	ldp	x23, x24, [sp, #32]
   16218:	ldp	x25, x26, [sp, #48]
   1621c:	ldp	x27, x28, [sp, #64]
   16220:	ldr	x30, [sp, #80]
   16224:	ldp	x19, x20, [sp], #112
   16228:	ret
   1622c:	cbnz	x19, 16258 <__sanitizer_cov_dump@@Base+0x17a0>
   16230:	rbit	x26, x20
   16234:	clz	x26, x26
   16238:	add	x5, x26, x23, lsl #6
   1623c:	mov	x0, x26
   16240:	add	x1, x5, x21
   16244:	ldr	x19, [x22, x1, lsl #3]
   16248:	cbz	x19, 162b8 <__sanitizer_cov_dump@@Base+0x1800>
   1624c:	lsl	x0, x27, x0
   16250:	bic	x20, x20, x0
   16254:	b	1619c <__sanitizer_cov_dump@@Base+0x16e4>
   16258:	rbit	x1, x19
   1625c:	add	x5, x26, x23, lsl #6
   16260:	clz	x1, x1
   16264:	lsl	x0, x27, x1
   16268:	bic	x19, x19, x0
   1626c:	b	161c0 <__sanitizer_cov_dump@@Base+0x1708>
   16270:	mov	x20, x0
   16274:	mov	x23, x19
   16278:	rbit	x26, x20
   1627c:	clz	x26, x26
   16280:	add	x5, x26, x23, lsl #6
   16284:	mov	x0, x26
   16288:	add	x1, x5, x21
   1628c:	ldr	x19, [x22, x1, lsl #3]
   16290:	cbnz	x19, 1624c <__sanitizer_cov_dump@@Base+0x1794>
   16294:	b	162b8 <__sanitizer_cov_dump@@Base+0x1800>
   16298:	mov	x4, x25
   1629c:	mov	x0, x22
   162a0:	stp	x2, x3, [sp, #96]
   162a4:	bl	16138 <__sanitizer_cov_dump@@Base+0x1680>
   162a8:	ldp	x2, x3, [sp, #96]
   162ac:	cbz	x0, 16180 <__sanitizer_cov_dump@@Base+0x16c8>
   162b0:	add	x20, x0, #0x1
   162b4:	b	1620c <__sanitizer_cov_dump@@Base+0x1754>
   162b8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   162bc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   162c0:	add	x2, x2, #0x728
   162c4:	add	x0, x0, #0x748
   162c8:	mov	x4, #0x0                   	// #0
   162cc:	mov	x3, #0x0                   	// #0
   162d0:	mov	w1, #0x132                 	// #306
   162d4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   162d8:	mov	x3, x1
   162dc:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   162e0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   162e4:	add	x2, x2, #0x788
   162e8:	add	x0, x0, #0x748
   162ec:	mov	x4, #0x1000                	// #4096
   162f0:	mov	w1, #0x143                 	// #323
   162f4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   162f8:	stp	x19, x20, [sp, #-352]!
   162fc:	mov	x8, x0
   16300:	ldr	x0, [x0]
   16304:	ldr	x5, [x1, #520]
   16308:	str	x30, [sp, #16]
   1630c:	cmp	x0, x5
   16310:	b.eq	16324 <__sanitizer_cov_dump@@Base+0x186c>  // b.none
   16314:	str	xzr, [x1]
   16318:	str	x0, [x1, #520]
   1631c:	str	xzr, [x1, #1040]
   16320:	str	xzr, [x1, #1560]
   16324:	cmp	x2, #0xfff
   16328:	b.ls	163b4 <__sanitizer_cov_dump@@Base+0x18fc>  // b.plast
   1632c:	ldr	x0, [x8]
   16330:	and	x5, x2, #0xfffffffffffff000
   16334:	cmp	x0, x5
   16338:	b.ne	163d4 <__sanitizer_cov_dump@@Base+0x191c>  // b.any
   1633c:	ldr	x5, [x1, #520]
   16340:	cmp	x5, x0
   16344:	b.ne	163f4 <__sanitizer_cov_dump@@Base+0x193c>  // b.any
   16348:	add	x12, x8, #0x208, lsl #12
   1634c:	str	xzr, [x12, #1568]
   16350:	ldr	x5, [x1]
   16354:	cbz	x5, 16418 <__sanitizer_cov_dump@@Base+0x1960>
   16358:	add	x10, x8, #0x208, lsl #12
   1635c:	mov	x6, #0x0                   	// #0
   16360:	add	x10, x10, #0x620
   16364:	mov	x11, #0x1                   	// #1
   16368:	rbit	x0, x5
   1636c:	clz	x0, x0
   16370:	lsl	x9, x11, x0
   16374:	orr	x7, x9, x6
   16378:	str	x7, [x12, #1568]
   1637c:	bic	x5, x5, x9
   16380:	cmp	x7, x6
   16384:	add	x0, x0, #0x1
   16388:	b.eq	163ac <__sanitizer_cov_dump@@Base+0x18f4>  // b.none
   1638c:	mov	x7, #0x0                   	// #0
   16390:	str	xzr, [x10, x0, lsl #3]
   16394:	ldr	x6, [x1, x0, lsl #3]
   16398:	orr	x6, x6, x7
   1639c:	str	x6, [x10, x0, lsl #3]
   163a0:	cbz	x5, 16414 <__sanitizer_cov_dump@@Base+0x195c>
   163a4:	ldr	x6, [x12, #1568]
   163a8:	b	16368 <__sanitizer_cov_dump@@Base+0x18b0>
   163ac:	ldr	x7, [x10, x0, lsl #3]
   163b0:	b	16394 <__sanitizer_cov_dump@@Base+0x18dc>
   163b4:	mov	x3, x2
   163b8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   163bc:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   163c0:	add	x0, x0, #0x7b8
   163c4:	add	x2, x2, #0x7a0
   163c8:	mov	x4, #0x1000                	// #4096
   163cc:	mov	w1, #0x172                 	// #370
   163d0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   163d4:	mov	x3, x0
   163d8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   163dc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   163e0:	mov	x4, x5
   163e4:	add	x2, x2, #0xa50
   163e8:	add	x0, x0, #0x7b8
   163ec:	mov	w1, #0x173                 	// #371
   163f0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   163f4:	mov	x4, x0
   163f8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   163fc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   16400:	mov	x3, x5
   16404:	add	x2, x2, #0xa80
   16408:	add	x0, x0, #0x7b8
   1640c:	mov	w1, #0x6c                  	// #108
   16410:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   16414:	ldr	x5, [x12, #1568]
   16418:	ubfx	x0, x2, #6, #6
   1641c:	mov	x6, #0x1                   	// #1
   16420:	add	x10, x8, #0x208, lsl #12
   16424:	add	x19, x0, x6
   16428:	lsl	x16, x6, x0
   1642c:	mov	x11, x6
   16430:	and	x15, x2, #0xfff
   16434:	add	x10, x10, #0x620
   16438:	add	x17, x8, #0x620
   1643c:	add	x30, sp, #0x20
   16440:	mov	x0, #0x0                   	// #0
   16444:	lsl	x13, x6, x2
   16448:	mov	w20, #0x40                  	// #64
   1644c:	cbz	x5, 164c8 <__sanitizer_cov_dump@@Base+0x1a10>
   16450:	rbit	x2, x5
   16454:	clz	x2, x2
   16458:	add	x9, x2, #0x1
   1645c:	lsl	x7, x11, x2
   16460:	bic	x5, x5, x7
   16464:	str	x5, [x12, #1568]
   16468:	ldr	x6, [x10, x9, lsl #3]
   1646c:	cbz	x6, 165b4 <__sanitizer_cov_dump@@Base+0x1afc>
   16470:	rbit	x18, x6
   16474:	clz	x18, x18
   16478:	lsl	x14, x11, x18
   1647c:	bic	x6, x6, x14
   16480:	str	x6, [x10, x9, lsl #3]
   16484:	cbnz	x6, 1658c <__sanitizer_cov_dump@@Base+0x1ad4>
   16488:	sxtw	x18, w18
   1648c:	smaddl	x2, w2, w20, x18
   16490:	add	x9, x2, x2, lsl #6
   16494:	add	x14, x19, x9
   16498:	ldr	x5, [x17, x9, lsl #3]
   1649c:	ands	x7, x5, x16
   164a0:	b.ne	165a8 <__sanitizer_cov_dump@@Base+0x1af0>  // b.any
   164a4:	mov	x6, x13
   164a8:	orr	x5, x5, x16
   164ac:	str	x5, [x17, x9, lsl #3]
   164b0:	str	x6, [x17, x14, lsl #3]
   164b4:	cmp	x0, #0x27
   164b8:	ccmp	x7, x6, #0x4, ls  // ls = plast
   164bc:	b.ne	16598 <__sanitizer_cov_dump@@Base+0x1ae0>  // b.any
   164c0:	ldr	x5, [x12, #1568]
   164c4:	cbnz	x5, 16450 <__sanitizer_cov_dump@@Base+0x1998>
   164c8:	add	x12, x8, #0x410, lsl #12
   164cc:	mov	x5, #0x1                   	// #1
   164d0:	cbz	x0, 16578 <__sanitizer_cov_dump@@Base+0x1ac0>
   164d4:	mov	x16, #0x10a3                	// #4259
   164d8:	and	w15, w15, #0xffff
   164dc:	add	x17, sp, #0x20
   164e0:	add	x11, x1, #0x418
   164e4:	mov	x13, #0x1ffff               	// #131071
   164e8:	movk	x16, #0x2, lsl #16
   164ec:	b	164fc <__sanitizer_cov_dump@@Base+0x1a44>
   164f0:	cmp	x0, x5
   164f4:	add	x5, x5, #0x1
   164f8:	b.eq	16578 <__sanitizer_cov_dump@@Base+0x1ac0>  // b.none
   164fc:	ldr	x9, [x12, #2608]
   16500:	cmp	x9, x13
   16504:	b.hi	164f0 <__sanitizer_cov_dump@@Base+0x1a38>  // b.pmore
   16508:	add	x2, x17, x5, lsl #3
   1650c:	ldr	x10, [x1, #1560]
   16510:	ldur	x7, [x2, #-8]
   16514:	and	w14, w7, #0xffff
   16518:	cbz	x10, 16584 <__sanitizer_cov_dump@@Base+0x1acc>
   1651c:	mov	x2, #0x0                   	// #0
   16520:	b	16530 <__sanitizer_cov_dump@@Base+0x1a78>
   16524:	add	x2, x2, #0x1
   16528:	cmp	x2, x10
   1652c:	b.eq	16584 <__sanitizer_cov_dump@@Base+0x1acc>  // b.none
   16530:	lsl	x6, x2, #3
   16534:	ldr	w6, [x11, x6]
   16538:	cmp	w6, w7
   1653c:	b.ne	16524 <__sanitizer_cov_dump@@Base+0x1a6c>  // b.any
   16540:	add	x2, x1, x2, lsl #3
   16544:	ldr	w7, [x2, #1052]
   16548:	add	x6, x9, x16
   1654c:	add	x9, x9, #0x1
   16550:	str	x9, [x12, #2608]
   16554:	cmp	x0, x5
   16558:	lsl	x6, x6, #4
   1655c:	add	x5, x5, #0x1
   16560:	add	x2, x8, x6
   16564:	strh	w14, [x8, x6]
   16568:	strh	w15, [x2, #2]
   1656c:	stp	w7, w3, [x2, #4]
   16570:	str	w4, [x2, #12]
   16574:	b.ne	164fc <__sanitizer_cov_dump@@Base+0x1a44>  // b.any
   16578:	ldr	x30, [sp, #16]
   1657c:	ldp	x19, x20, [sp], #352
   16580:	ret
   16584:	mov	w7, #0x0                   	// #0
   16588:	b	16548 <__sanitizer_cov_dump@@Base+0x1a90>
   1658c:	orr	x7, x7, x5
   16590:	str	x7, [x12, #1568]
   16594:	b	16488 <__sanitizer_cov_dump@@Base+0x19d0>
   16598:	str	x2, [x30, x0, lsl #3]
   1659c:	add	x0, x0, #0x1
   165a0:	ldr	x5, [x12, #1568]
   165a4:	b	164c4 <__sanitizer_cov_dump@@Base+0x1a0c>
   165a8:	ldr	x7, [x17, x14, lsl #3]
   165ac:	orr	x6, x7, x13
   165b0:	b	164b0 <__sanitizer_cov_dump@@Base+0x19f8>
   165b4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   165b8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   165bc:	add	x2, x2, #0x758
   165c0:	add	x0, x0, #0x748
   165c4:	mov	x4, #0x0                   	// #0
   165c8:	mov	x3, #0x0                   	// #0
   165cc:	mov	w1, #0x30                  	// #48
   165d0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   165d4:	nop
   165d8:	stp	x19, x20, [sp, #-112]!
   165dc:	stp	x23, x24, [sp, #32]
   165e0:	mov	x23, x0
   165e4:	mov	x0, x4
   165e8:	str	x30, [sp, #80]
   165ec:	cbnz	x4, 16600 <__sanitizer_cov_dump@@Base+0x1b48>
   165f0:	ldp	x23, x24, [sp, #32]
   165f4:	ldr	x30, [sp, #80]
   165f8:	ldp	x19, x20, [sp], #112
   165fc:	ret
   16600:	stp	x21, x22, [sp, #16]
   16604:	cmp	x1, #0x1, lsl #12
   16608:	mov	x22, x3
   1660c:	str	x1, [x3]
   16610:	b.hi	167b8 <__sanitizer_cov_dump@@Base+0x1d00>  // b.pmore
   16614:	lsr	x3, x1, #12
   16618:	ubfx	x5, x1, #6, #6
   1661c:	mov	x4, #0x1                   	// #1
   16620:	lsl	x7, x4, x5
   16624:	ldr	x6, [x2, x3, lsl #3]
   16628:	tst	x7, x6
   1662c:	b.eq	16654 <__sanitizer_cov_dump@@Base+0x1b9c>  // b.none
   16630:	add	x3, x5, x3, lsl #6
   16634:	lsl	x5, x4, x1
   16638:	add	x3, x3, x4
   1663c:	ldr	x6, [x2, x3, lsl #3]
   16640:	tst	x5, x6
   16644:	b.eq	16654 <__sanitizer_cov_dump@@Base+0x1b9c>  // b.none
   16648:	mov	x0, x4
   1664c:	ldp	x21, x22, [sp, #16]
   16650:	b	165f0 <__sanitizer_cov_dump@@Base+0x1b38>
   16654:	add	x1, x1, x1, lsl #6
   16658:	sub	x20, x0, #0x1
   1665c:	add	x3, x22, #0x8
   16660:	stp	x27, x28, [sp, #64]
   16664:	add	x19, x23, x1, lsl #3
   16668:	add	x28, x1, #0x1
   1666c:	mov	x21, #0x0                   	// #0
   16670:	mov	x24, #0x0                   	// #0
   16674:	mov	x27, #0x1                   	// #1
   16678:	stp	x25, x26, [sp, #48]
   1667c:	mov	x26, #0x0                   	// #0
   16680:	mov	x25, #0x0                   	// #0
   16684:	cbnz	x24, 16720 <__sanitizer_cov_dump@@Base+0x1c68>
   16688:	cbnz	x25, 16800 <__sanitizer_cov_dump@@Base+0x1d48>
   1668c:	ldr	x0, [x19]
   16690:	cbz	x0, 16800 <__sanitizer_cov_dump@@Base+0x1d48>
   16694:	cbz	x21, 16764 <__sanitizer_cov_dump@@Base+0x1cac>
   16698:	mov	x1, x26
   1669c:	mov	x24, x25
   166a0:	rbit	x0, x21
   166a4:	clz	x0, x0
   166a8:	lsl	x4, x27, x0
   166ac:	bic	x21, x21, x4
   166b0:	orr	x4, x24, x21
   166b4:	cbnz	x4, 166c4 <__sanitizer_cov_dump@@Base+0x1c0c>
   166b8:	add	x25, x25, #0x1
   166bc:	mov	x21, #0x0                   	// #0
   166c0:	mov	x24, #0x0                   	// #0
   166c4:	cbz	x20, 16684 <__sanitizer_cov_dump@@Base+0x1bcc>
   166c8:	sxtw	x0, w0
   166cc:	add	x1, x0, x1, lsl #6
   166d0:	str	x1, [x22, #8]
   166d4:	cmp	x1, #0x1, lsl #12
   166d8:	b.hi	167c0 <__sanitizer_cov_dump@@Base+0x1d08>  // b.pmore
   166dc:	lsr	x0, x1, #12
   166e0:	ubfx	x4, x1, #6, #6
   166e4:	lsl	x6, x27, x4
   166e8:	ldr	x5, [x2, x0, lsl #3]
   166ec:	tst	x6, x5
   166f0:	b.eq	1678c <__sanitizer_cov_dump@@Base+0x1cd4>  // b.none
   166f4:	add	x0, x4, x0, lsl #6
   166f8:	lsl	x4, x27, x1
   166fc:	add	x0, x0, #0x1
   16700:	ldr	x5, [x2, x0, lsl #3]
   16704:	tst	x4, x5
   16708:	b.eq	1678c <__sanitizer_cov_dump@@Base+0x1cd4>  // b.none
   1670c:	mov	x0, #0x2                   	// #2
   16710:	ldp	x21, x22, [sp, #16]
   16714:	ldp	x25, x26, [sp, #48]
   16718:	ldp	x27, x28, [sp, #64]
   1671c:	b	165f0 <__sanitizer_cov_dump@@Base+0x1b38>
   16720:	cbnz	x21, 1674c <__sanitizer_cov_dump@@Base+0x1c94>
   16724:	rbit	x26, x24
   16728:	clz	x26, x26
   1672c:	add	x1, x26, x25, lsl #6
   16730:	mov	x0, x26
   16734:	add	x4, x1, x28
   16738:	ldr	x21, [x23, x4, lsl #3]
   1673c:	cbz	x21, 167e0 <__sanitizer_cov_dump@@Base+0x1d28>
   16740:	lsl	x0, x27, x0
   16744:	bic	x24, x24, x0
   16748:	b	166a0 <__sanitizer_cov_dump@@Base+0x1be8>
   1674c:	rbit	x0, x21
   16750:	add	x1, x26, x25, lsl #6
   16754:	clz	x0, x0
   16758:	lsl	x4, x27, x0
   1675c:	bic	x21, x21, x4
   16760:	b	166c4 <__sanitizer_cov_dump@@Base+0x1c0c>
   16764:	mov	x25, x24
   16768:	mov	x24, x0
   1676c:	rbit	x26, x24
   16770:	clz	x26, x26
   16774:	add	x1, x26, x25, lsl #6
   16778:	mov	x0, x26
   1677c:	add	x4, x1, x28
   16780:	ldr	x21, [x23, x4, lsl #3]
   16784:	cbnz	x21, 16740 <__sanitizer_cov_dump@@Base+0x1c88>
   16788:	b	167e0 <__sanitizer_cov_dump@@Base+0x1d28>
   1678c:	mov	x4, x20
   16790:	mov	x0, x23
   16794:	stp	x2, x3, [sp, #96]
   16798:	bl	16138 <__sanitizer_cov_dump@@Base+0x1680>
   1679c:	ldp	x2, x3, [sp, #96]
   167a0:	cbz	x0, 16684 <__sanitizer_cov_dump@@Base+0x1bcc>
   167a4:	add	x0, x0, #0x1
   167a8:	ldp	x21, x22, [sp, #16]
   167ac:	ldp	x25, x26, [sp, #48]
   167b0:	ldp	x27, x28, [sp, #64]
   167b4:	b	165f0 <__sanitizer_cov_dump@@Base+0x1b38>
   167b8:	stp	x25, x26, [sp, #48]
   167bc:	stp	x27, x28, [sp, #64]
   167c0:	mov	x3, x1
   167c4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   167c8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   167cc:	add	x2, x2, #0x788
   167d0:	add	x0, x0, #0x748
   167d4:	mov	x4, #0x1000                	// #4096
   167d8:	mov	w1, #0x143                 	// #323
   167dc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   167e0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   167e4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   167e8:	add	x2, x2, #0x728
   167ec:	add	x0, x0, #0x748
   167f0:	mov	x4, #0x0                   	// #0
   167f4:	mov	x3, #0x0                   	// #0
   167f8:	mov	w1, #0x132                 	// #306
   167fc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   16800:	mov	x0, #0x0                   	// #0
   16804:	ldp	x21, x22, [sp, #16]
   16808:	ldp	x25, x26, [sp, #48]
   1680c:	ldp	x27, x28, [sp, #64]
   16810:	b	165f0 <__sanitizer_cov_dump@@Base+0x1b38>
   16814:	nop
   16818:	mov	x2, x1
   1681c:	mov	x4, #0x0                   	// #0
   16820:	mov	x1, x0
   16824:	mov	x3, #0x0                   	// #0
   16828:	mov	w0, #0x2                   	// #2
   1682c:	b	1c3c8 <__sanitizer_set_report_fd@@Base+0x5118>
   16830:	stp	x19, x30, [sp, #-16]!
   16834:	mov	x19, x0
   16838:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   1683c:	mov	x2, x0
   16840:	mov	x1, x19
   16844:	adrp	x0, 60000 <_Unwind_Backtrace@GCC_3.3>
   16848:	ldp	x19, x30, [sp], #16
   1684c:	add	x0, x0, #0x3d0
   16850:	b	1c800 <__sanitizer_set_report_fd@@Base+0x5550>
   16854:	nop
   16858:	stp	x19, x20, [sp, #-32]!
   1685c:	mov	x19, x0
   16860:	ldr	x0, [x0]
   16864:	str	x30, [sp, #24]
   16868:	ldrb	w3, [x0]
   1686c:	and	x3, x3, #0xff
   16870:	cmp	x3, #0x1
   16874:	b.ne	16978 <__sanitizer_cov_dump@@Base+0x1ec0>  // b.any
   16878:	ldr	w0, [x19, #8]
   1687c:	sub	w0, w0, #0x1
   16880:	cmp	w0, #0x1
   16884:	b.ls	16930 <__sanitizer_cov_dump@@Base+0x1e78>  // b.plast
   16888:	bl	19e88 <__sanitizer_set_report_fd@@Base+0x2bd8>
   1688c:	mov	x20, x0
   16890:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16894:	ldr	x1, [x1, #3560]
   16898:	ldr	x0, [x1]
   1689c:	cmp	x0, x20
   168a0:	b.eq	1693c <__sanitizer_cov_dump@@Base+0x1e84>  // b.none
   168a4:	ldr	w0, [x19, #8]
   168a8:	cmn	w0, #0x1
   168ac:	b.eq	16954 <__sanitizer_cov_dump@@Base+0x1e9c>  // b.none
   168b0:	ldr	x1, [x19, #8208]
   168b4:	cmp	x1, x20
   168b8:	b.eq	16930 <__sanitizer_cov_dump@@Base+0x1e78>  // b.none
   168bc:	str	x21, [sp, #16]
   168c0:	bl	1c370 <__sanitizer_set_report_fd@@Base+0x50c0>
   168c4:	bl	13c30 <__sancov_default_options@@Base+0x3038>
   168c8:	cmp	x0, #0x0
   168cc:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   168d0:	mov	x4, x0
   168d4:	mov	x0, #0x100c                	// #4108
   168d8:	add	x21, x19, x0
   168dc:	ldr	x0, [x1, #4040]
   168e0:	cset	w1, ne  // ne = any
   168e4:	add	x3, x19, #0xc
   168e8:	ldrb	w0, [x0, #48]
   168ec:	tst	w1, w0
   168f0:	b.ne	1695c <__sanitizer_cov_dump@@Base+0x1ea4>  // b.any
   168f4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   168f8:	mov	x4, x20
   168fc:	add	x2, x2, #0xab8
   16900:	mov	x0, x21
   16904:	mov	x1, #0x1000                	// #4096
   16908:	bl	1e2b8 <OnPrint@@Base+0x8>
   1690c:	mov	x0, x21
   16910:	mov	x2, #0x0                   	// #0
   16914:	mov	w1, #0x1                   	// #1
   16918:	bl	1c328 <__sanitizer_set_report_fd@@Base+0x5078>
   1691c:	str	w0, [x19, #8]
   16920:	cmn	w0, #0x1
   16924:	b.eq	16998 <__sanitizer_cov_dump@@Base+0x1ee0>  // b.none
   16928:	ldr	x21, [sp, #16]
   1692c:	str	x20, [x19, #8208]
   16930:	ldr	x30, [sp, #24]
   16934:	ldp	x19, x20, [sp], #32
   16938:	ret
   1693c:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16940:	ldr	x0, [x0, #3544]
   16944:	ldr	x20, [x0]
   16948:	ldr	w0, [x19, #8]
   1694c:	cmn	w0, #0x1
   16950:	b.ne	168b0 <__sanitizer_cov_dump@@Base+0x1df8>  // b.any
   16954:	str	x21, [sp, #16]
   16958:	b	168c4 <__sanitizer_cov_dump@@Base+0x1e0c>
   1695c:	mov	x5, x20
   16960:	mov	x0, x21
   16964:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   16968:	mov	x1, #0x1000                	// #4096
   1696c:	add	x2, x2, #0xaa8
   16970:	bl	1e2b8 <OnPrint@@Base+0x8>
   16974:	b	1690c <__sanitizer_cov_dump@@Base+0x1e54>
   16978:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1697c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   16980:	add	x2, x2, #0x468
   16984:	add	x0, x0, #0x4a0
   16988:	mov	x4, #0x1                   	// #1
   1698c:	mov	w1, #0x2a                  	// #42
   16990:	str	x21, [sp, #16]
   16994:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   16998:	adrp	x19, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   1699c:	add	x19, x19, #0xac0
   169a0:	mov	x0, x19
   169a4:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   169a8:	mov	x1, x19
   169ac:	mov	x2, x0
   169b0:	mov	x4, #0x0                   	// #0
   169b4:	mov	x3, #0x0                   	// #0
   169b8:	mov	w0, #0x2                   	// #2
   169bc:	bl	1c3c8 <__sanitizer_set_report_fd@@Base+0x5118>
   169c0:	mov	x0, x21
   169c4:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   169c8:	mov	x1, x21
   169cc:	mov	x2, x0
   169d0:	mov	x4, #0x0                   	// #0
   169d4:	mov	x3, #0x0                   	// #0
   169d8:	mov	w0, #0x2                   	// #2
   169dc:	bl	1c3c8 <__sanitizer_set_report_fd@@Base+0x5118>
   169e0:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   169e4:	nop
   169e8:	cbz	x1, 16adc <__sanitizer_cov_dump@@Base+0x2024>
   169ec:	sub	sp, sp, #0x30
   169f0:	stp	x19, x20, [sp, #16]
   169f4:	mov	x19, x0
   169f8:	mov	x20, x1
   169fc:	mov	x0, x1
   16a00:	stp	x21, x30, [sp, #32]
   16a04:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   16a08:	cmp	x0, #0xf9c
   16a0c:	b.hi	16afc <__sanitizer_cov_dump@@Base+0x2044>  // b.pmore
   16a10:	ldr	x21, [x19]
   16a14:	mov	w1, #0x1                   	// #1
   16a18:	ldxrb	w0, [x21]
   16a1c:	stxrb	w2, w1, [x21]
   16a20:	cbnz	w2, 16a18 <__sanitizer_cov_dump@@Base+0x1f60>
   16a24:	dmb	ish
   16a28:	tst	w0, #0xff
   16a2c:	b.eq	16a38 <__sanitizer_cov_dump@@Base+0x1f80>  // b.none
   16a30:	mov	x0, x21
   16a34:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   16a38:	ldr	w0, [x19, #8]
   16a3c:	sub	w1, w0, #0x1
   16a40:	cmp	w1, #0x1
   16a44:	ccmn	w0, #0x1, #0x4, hi  // hi = pmore
   16a48:	b.ne	16a88 <__sanitizer_cov_dump@@Base+0x1fd0>  // b.any
   16a4c:	mov	w0, #0xffffffff            	// #-1
   16a50:	str	w0, [x19, #8]
   16a54:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   16a58:	mov	x0, x20
   16a5c:	add	x1, x1, #0xb10
   16a60:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   16a64:	cbnz	w0, 16aa8 <__sanitizer_cov_dump@@Base+0x1ff0>
   16a68:	mov	w0, #0x1                   	// #1
   16a6c:	str	w0, [x19, #8]
   16a70:	dmb	ish
   16a74:	strb	wzr, [x21]
   16a78:	ldp	x19, x20, [sp, #16]
   16a7c:	ldp	x21, x30, [sp, #32]
   16a80:	add	sp, sp, #0x30
   16a84:	ret
   16a88:	bl	1c370 <__sanitizer_set_report_fd@@Base+0x50c0>
   16a8c:	mov	w0, #0xffffffff            	// #-1
   16a90:	str	w0, [x19, #8]
   16a94:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   16a98:	mov	x0, x20
   16a9c:	add	x1, x1, #0xb10
   16aa0:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   16aa4:	cbz	w0, 16a68 <__sanitizer_cov_dump@@Base+0x1fb0>
   16aa8:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   16aac:	mov	x0, x20
   16ab0:	add	x1, x1, #0xb18
   16ab4:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   16ab8:	cbnz	w0, 16ae0 <__sanitizer_cov_dump@@Base+0x2028>
   16abc:	mov	w0, #0x2                   	// #2
   16ac0:	str	w0, [x19, #8]
   16ac4:	dmb	ish
   16ac8:	strb	wzr, [x21]
   16acc:	ldp	x19, x20, [sp, #16]
   16ad0:	ldp	x21, x30, [sp, #32]
   16ad4:	add	sp, sp, #0x30
   16ad8:	ret
   16adc:	ret
   16ae0:	mov	x3, x20
   16ae4:	add	x0, x19, #0xc
   16ae8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   16aec:	mov	x1, #0x1000                	// #4096
   16af0:	add	x2, x2, #0x948
   16af4:	bl	1e2b8 <OnPrint@@Base+0x8>
   16af8:	b	16a70 <__sanitizer_cov_dump@@Base+0x1fb8>
   16afc:	ldrb	w7, [x20, #6]
   16b00:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   16b04:	ldrb	w6, [x20, #5]
   16b08:	add	x0, x0, #0xae0
   16b0c:	ldrb	w5, [x20, #4]
   16b10:	ldrb	w4, [x20, #3]
   16b14:	ldrb	w3, [x20, #2]
   16b18:	ldrb	w2, [x20, #1]
   16b1c:	ldrb	w1, [x20]
   16b20:	ldrb	w8, [x20, #7]
   16b24:	str	w8, [sp]
   16b28:	bl	1e648 <OnPrint@@Base+0x398>
   16b2c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   16b30:	stp	x19, x20, [sp, #-128]!
   16b34:	mov	w19, #0x1                   	// #1
   16b38:	str	x30, [sp, #80]
   16b3c:	str	xzr, [x1]
   16b40:	str	xzr, [x2]
   16b44:	str	xzr, [x3]
   16b48:	cbz	x4, 16c54 <__sanitizer_cov_dump@@Base+0x219c>
   16b4c:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16b50:	stp	x21, x22, [sp, #16]
   16b54:	mov	x21, x1
   16b58:	ldr	x19, [x19, #4000]
   16b5c:	stp	x23, x24, [sp, #32]
   16b60:	mov	x22, x4
   16b64:	stp	x25, x26, [sp, #48]
   16b68:	mov	x23, x5
   16b6c:	mov	x26, x0
   16b70:	ldr	x20, [x19]
   16b74:	stp	x27, x28, [sp, #64]
   16b78:	mov	x25, x2
   16b7c:	mov	x28, x3
   16b80:	mov	x0, #0x0                   	// #0
   16b84:	cbz	x20, 16c90 <__sanitizer_cov_dump@@Base+0x21d8>
   16b88:	cmp	x20, x22
   16b8c:	add	x24, sp, #0x78
   16b90:	csel	x20, x20, x22, ls  // ls = plast
   16b94:	adrp	x27, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   16b98:	add	x1, x27, #0xb20
   16b9c:	str	x1, [sp, #104]
   16ba0:	ldr	x1, [x25]
   16ba4:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   16ba8:	ldr	x1, [sp, #104]
   16bac:	mov	w2, #0x0                   	// #0
   16bb0:	mov	x0, x20
   16bb4:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   16bb8:	str	x0, [x21]
   16bbc:	str	x20, [x25]
   16bc0:	mov	x2, x23
   16bc4:	mov	x0, x26
   16bc8:	mov	w1, #0x0                   	// #0
   16bcc:	bl	1c328 <__sanitizer_set_report_fd@@Base+0x5078>
   16bd0:	mov	w27, w0
   16bd4:	cmn	w0, #0x1
   16bd8:	b.eq	16ca4 <__sanitizer_cov_dump@@Base+0x21ec>  // b.none
   16bdc:	str	xzr, [x28]
   16be0:	mov	x1, #0x0                   	// #0
   16be4:	cbnz	x20, 16bf4 <__sanitizer_cov_dump@@Base+0x213c>
   16be8:	b	16c64 <__sanitizer_cov_dump@@Base+0x21ac>
   16bec:	cmp	x1, x20
   16bf0:	b.cs	16c64 <__sanitizer_cov_dump@@Base+0x21ac>  // b.hs, b.nlast
   16bf4:	ldr	x5, [x21]
   16bf8:	sub	x2, x20, x1
   16bfc:	mov	x4, x23
   16c00:	mov	x3, x24
   16c04:	mov	w0, w27
   16c08:	add	x1, x5, x1
   16c0c:	bl	1c378 <__sanitizer_set_report_fd@@Base+0x50c8>
   16c10:	ands	w19, w0, #0xff
   16c14:	b.eq	16c80 <__sanitizer_cov_dump@@Base+0x21c8>  // b.none
   16c18:	ldr	x1, [x28]
   16c1c:	ldr	x2, [sp, #120]
   16c20:	add	x1, x2, x1
   16c24:	str	x1, [x28]
   16c28:	cmp	x1, x22
   16c2c:	cset	w19, eq  // eq = none
   16c30:	cmp	x2, #0x0
   16c34:	csinc	w19, w19, wzr, ne  // ne = any
   16c38:	cbz	w19, 16bec <__sanitizer_cov_dump@@Base+0x2134>
   16c3c:	mov	w0, w27
   16c40:	bl	1c370 <__sanitizer_set_report_fd@@Base+0x50c0>
   16c44:	ldp	x21, x22, [sp, #16]
   16c48:	ldp	x23, x24, [sp, #32]
   16c4c:	ldp	x25, x26, [sp, #48]
   16c50:	ldp	x27, x28, [sp, #64]
   16c54:	mov	w0, w19
   16c58:	ldr	x30, [sp, #80]
   16c5c:	ldp	x19, x20, [sp], #128
   16c60:	ret
   16c64:	mov	w0, w27
   16c68:	lsl	x20, x20, #1
   16c6c:	bl	1c370 <__sanitizer_set_report_fd@@Base+0x50c0>
   16c70:	cmp	x20, x22
   16c74:	csel	x20, x20, x22, ls  // ls = plast
   16c78:	ldr	x0, [x21]
   16c7c:	b	16ba0 <__sanitizer_cov_dump@@Base+0x20e8>
   16c80:	ldr	x0, [x21]
   16c84:	ldr	x1, [x25]
   16c88:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   16c8c:	b	16c3c <__sanitizer_cov_dump@@Base+0x2184>
   16c90:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   16c94:	mov	x20, x0
   16c98:	ldr	x0, [x21]
   16c9c:	str	x20, [x19]
   16ca0:	b	16b88 <__sanitizer_cov_dump@@Base+0x20d0>
   16ca4:	ldr	x0, [x21]
   16ca8:	mov	w19, #0x0                   	// #0
   16cac:	ldr	x1, [x25]
   16cb0:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   16cb4:	ldp	x21, x22, [sp, #16]
   16cb8:	ldp	x23, x24, [sp, #32]
   16cbc:	ldp	x25, x26, [sp, #48]
   16cc0:	ldp	x27, x28, [sp, #64]
   16cc4:	b	16c54 <__sanitizer_cov_dump@@Base+0x219c>
   16cc8:	stp	x19, x20, [sp, #-144]!
   16ccc:	stp	x27, x28, [sp, #64]
   16cd0:	str	x30, [sp, #80]
   16cd4:	str	xzr, [x1, #16]
   16cd8:	cbz	x2, 16e54 <__sanitizer_cov_dump@@Base+0x239c>
   16cdc:	stp	x25, x26, [sp, #48]
   16ce0:	adrp	x25, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16ce4:	mov	x20, x1
   16ce8:	stp	x23, x24, [sp, #32]
   16cec:	mov	x19, x0
   16cf0:	ldr	x24, [x25, #4000]
   16cf4:	stp	x21, x22, [sp, #16]
   16cf8:	mov	x21, x2
   16cfc:	mov	x22, x3
   16d00:	ldr	x23, [x24]
   16d04:	cbz	x23, 16e08 <__sanitizer_cov_dump@@Base+0x2350>
   16d08:	mov	x0, x19
   16d0c:	mov	x2, x22
   16d10:	mov	w1, #0x0                   	// #0
   16d14:	bl	1c328 <__sanitizer_set_report_fd@@Base+0x5078>
   16d18:	mov	w27, w0
   16d1c:	cmn	w0, #0x1
   16d20:	b.eq	16e30 <__sanitizer_cov_dump@@Base+0x2378>  // b.none
   16d24:	ldr	x0, [x25, #4000]
   16d28:	str	x0, [sp, #104]
   16d2c:	ldr	x3, [x20, #16]
   16d30:	adrp	x26, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   16d34:	mov	x19, #0x0                   	// #0
   16d38:	add	x24, sp, #0x88
   16d3c:	add	x26, x26, #0x258
   16d40:	cmp	x3, x19
   16d44:	b.ls	16d98 <__sanitizer_cov_dump@@Base+0x22e0>  // b.plast
   16d48:	cmp	x3, x21
   16d4c:	b.hi	16dec <__sanitizer_cov_dump@@Base+0x2334>  // b.pmore
   16d50:	ldr	x1, [x20]
   16d54:	sub	x2, x3, x19
   16d58:	mov	x4, x22
   16d5c:	mov	x3, x24
   16d60:	mov	w0, w27
   16d64:	add	x1, x1, x19
   16d68:	bl	1c378 <__sanitizer_set_report_fd@@Base+0x50c8>
   16d6c:	ands	w28, w0, #0xff
   16d70:	b.eq	16f50 <__sanitizer_cov_dump@@Base+0x2498>  // b.none
   16d74:	ldr	x1, [sp, #136]
   16d78:	add	x3, x1, x19
   16d7c:	cbz	x1, 16ef4 <__sanitizer_cov_dump@@Base+0x243c>
   16d80:	cmp	x21, x3
   16d84:	b.ls	16ef8 <__sanitizer_cov_dump@@Base+0x2440>  // b.plast
   16d88:	mov	x19, x3
   16d8c:	ldr	x3, [x20, #16]
   16d90:	cmp	x3, x19
   16d94:	b.hi	16d48 <__sanitizer_cov_dump@@Base+0x2290>  // b.pmore
   16d98:	lsl	x28, x19, #1
   16d9c:	cmp	x28, x23
   16da0:	csel	x28, x28, x23, cs  // cs = hs, nlast
   16da4:	cmp	x28, x21
   16da8:	csel	x28, x28, x21, ls  // ls = plast
   16dac:	cmp	x28, x3
   16db0:	b.ls	16e6c <__sanitizer_cov_dump@@Base+0x23b4>  // b.plast
   16db4:	ldr	x0, [x20, #8]
   16db8:	cmp	x28, x0
   16dbc:	b.hi	16e90 <__sanitizer_cov_dump@@Base+0x23d8>  // b.pmore
   16dc0:	ldr	x4, [x20]
   16dc4:	add	x0, x4, x3
   16dc8:	sub	x2, x28, x3
   16dcc:	mov	w1, #0x0                   	// #0
   16dd0:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   16dd4:	str	x28, [x20, #16]
   16dd8:	cmp	x28, x19
   16ddc:	b.ls	16e70 <__sanitizer_cov_dump@@Base+0x23b8>  // b.plast
   16de0:	mov	x3, x28
   16de4:	cmp	x3, x21
   16de8:	b.ls	16d50 <__sanitizer_cov_dump@@Base+0x2298>  // b.plast
   16dec:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   16df0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   16df4:	mov	x4, x21
   16df8:	add	x2, x2, #0xbb8
   16dfc:	add	x0, x0, #0xb78
   16e00:	mov	w1, #0x99                  	// #153
   16e04:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   16e08:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   16e0c:	mov	x23, x0
   16e10:	mov	x2, x22
   16e14:	mov	w1, #0x0                   	// #0
   16e18:	str	x0, [x24]
   16e1c:	mov	x0, x19
   16e20:	bl	1c328 <__sanitizer_set_report_fd@@Base+0x5078>
   16e24:	mov	w27, w0
   16e28:	cmn	w0, #0x1
   16e2c:	b.ne	16d24 <__sanitizer_cov_dump@@Base+0x226c>  // b.any
   16e30:	mov	w28, #0x0                   	// #0
   16e34:	mov	w0, w28
   16e38:	ldp	x21, x22, [sp, #16]
   16e3c:	ldp	x23, x24, [sp, #32]
   16e40:	ldp	x25, x26, [sp, #48]
   16e44:	ldp	x27, x28, [sp, #64]
   16e48:	ldr	x30, [sp, #80]
   16e4c:	ldp	x19, x20, [sp], #144
   16e50:	ret
   16e54:	mov	w28, #0x1                   	// #1
   16e58:	mov	w0, w28
   16e5c:	ldp	x27, x28, [sp, #64]
   16e60:	ldr	x30, [sp, #80]
   16e64:	ldp	x19, x20, [sp], #144
   16e68:	ret
   16e6c:	str	x28, [x20, #16]
   16e70:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   16e74:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   16e78:	mov	x4, x28
   16e7c:	mov	x3, x19
   16e80:	add	x2, x2, #0xb58
   16e84:	add	x0, x0, #0xb78
   16e88:	mov	w1, #0x98                  	// #152
   16e8c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   16e90:	cbz	x28, 16fe0 <__sanitizer_cov_dump@@Base+0x2528>
   16e94:	ldr	x0, [sp, #104]
   16e98:	ldr	x0, [x0]
   16e9c:	cbz	x0, 16f68 <__sanitizer_cov_dump@@Base+0x24b0>
   16ea0:	sub	x1, x0, #0x1
   16ea4:	tst	x0, x1
   16ea8:	b.ne	17000 <__sanitizer_cov_dump@@Base+0x2548>  // b.any
   16eac:	add	x1, x28, x1
   16eb0:	neg	x0, x0
   16eb4:	and	x6, x1, x0
   16eb8:	mov	w2, #0x0                   	// #0
   16ebc:	mov	x0, x6
   16ec0:	mov	x1, x26
   16ec4:	str	x6, [sp, #120]
   16ec8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   16ecc:	str	x0, [sp, #112]
   16ed0:	ldr	x1, [x20]
   16ed4:	ldr	x2, [x20, #16]
   16ed8:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   16edc:	ldp	x0, x1, [x20]
   16ee0:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   16ee4:	ldp	x4, x6, [sp, #112]
   16ee8:	stp	x4, x6, [x20]
   16eec:	ldr	x3, [x20, #16]
   16ef0:	b	16dc4 <__sanitizer_cov_dump@@Base+0x230c>
   16ef4:	mov	x3, x19
   16ef8:	mov	w0, w27
   16efc:	str	x3, [sp, #104]
   16f00:	bl	1c370 <__sanitizer_set_report_fd@@Base+0x50c0>
   16f04:	ldr	x2, [x20, #16]
   16f08:	ldr	x3, [sp, #104]
   16f0c:	cmp	x3, x2
   16f10:	b.ls	16f3c <__sanitizer_cov_dump@@Base+0x2484>  // b.plast
   16f14:	ldr	x0, [x20, #8]
   16f18:	cmp	x3, x0
   16f1c:	b.hi	16f78 <__sanitizer_cov_dump@@Base+0x24c0>  // b.pmore
   16f20:	ldr	x19, [x20]
   16f24:	add	x0, x19, x2
   16f28:	mov	w1, #0x0                   	// #0
   16f2c:	sub	x2, x3, x2
   16f30:	str	x3, [sp, #104]
   16f34:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   16f38:	ldr	x3, [sp, #104]
   16f3c:	ldp	x21, x22, [sp, #16]
   16f40:	ldp	x23, x24, [sp, #32]
   16f44:	ldp	x25, x26, [sp, #48]
   16f48:	str	x3, [x20, #16]
   16f4c:	b	16e58 <__sanitizer_cov_dump@@Base+0x23a0>
   16f50:	mov	w0, w27
   16f54:	bl	1c370 <__sanitizer_set_report_fd@@Base+0x50c0>
   16f58:	ldp	x21, x22, [sp, #16]
   16f5c:	ldp	x23, x24, [sp, #32]
   16f60:	ldp	x25, x26, [sp, #48]
   16f64:	b	16e58 <__sanitizer_cov_dump@@Base+0x23a0>
   16f68:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   16f6c:	ldr	x1, [sp, #104]
   16f70:	str	x0, [x1]
   16f74:	b	16ea0 <__sanitizer_cov_dump@@Base+0x23e8>
   16f78:	cbz	x3, 16fe0 <__sanitizer_cov_dump@@Base+0x2528>
   16f7c:	ldr	x25, [x25, #4000]
   16f80:	ldr	x0, [x25]
   16f84:	cbz	x0, 17010 <__sanitizer_cov_dump@@Base+0x2558>
   16f88:	sub	x1, x0, #0x1
   16f8c:	tst	x0, x1
   16f90:	b.ne	17000 <__sanitizer_cov_dump@@Base+0x2548>  // b.any
   16f94:	add	x1, x3, x1
   16f98:	neg	x0, x0
   16f9c:	and	x21, x1, x0
   16fa0:	mov	w2, #0x0                   	// #0
   16fa4:	mov	x0, x21
   16fa8:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   16fac:	add	x1, x1, #0x258
   16fb0:	str	x3, [sp, #104]
   16fb4:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   16fb8:	mov	x19, x0
   16fbc:	ldr	x1, [x20]
   16fc0:	ldr	x2, [x20, #16]
   16fc4:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   16fc8:	ldp	x0, x1, [x20]
   16fcc:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   16fd0:	stp	x19, x21, [x20]
   16fd4:	ldr	x2, [x20, #16]
   16fd8:	ldr	x3, [sp, #104]
   16fdc:	b	16f24 <__sanitizer_cov_dump@@Base+0x246c>
   16fe0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   16fe4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   16fe8:	add	x2, x2, #0xb38
   16fec:	add	x0, x0, #0xf8
   16ff0:	mov	x4, #0x0                   	// #0
   16ff4:	mov	x3, #0x0                   	// #0
   16ff8:	mov	w1, #0x1fc                 	// #508
   16ffc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   17000:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   17004:	add	x0, x0, #0x240
   17008:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1700c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   17010:	str	x3, [sp, #104]
   17014:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   17018:	str	x0, [x25]
   1701c:	ldr	x3, [sp, #104]
   17020:	b	16f88 <__sanitizer_cov_dump@@Base+0x24d0>
   17024:	nop
   17028:	stp	x19, x20, [sp, #-80]!
   1702c:	stp	x23, x24, [sp, #32]
   17030:	mov	x23, x0
   17034:	str	x30, [sp, #72]
   17038:	bl	19a50 <__sanitizer_set_report_fd@@Base+0x27a0>
   1703c:	tst	w0, #0xff
   17040:	b.eq	17058 <__sanitizer_cov_dump@@Base+0x25a0>  // b.none
   17044:	mov	x0, x23
   17048:	ldp	x23, x24, [sp, #32]
   1704c:	ldr	x30, [sp, #72]
   17050:	ldp	x19, x20, [sp], #80
   17054:	b	18a68 <__sanitizer_set_report_fd@@Base+0x17b8>
   17058:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1705c:	add	x0, x0, #0x1a8
   17060:	stp	x21, x22, [sp, #16]
   17064:	bl	19b20 <__sanitizer_set_report_fd@@Base+0x2870>
   17068:	mov	x21, x0
   1706c:	cbz	x0, 171a8 <__sanitizer_cov_dump@@Base+0x26f0>
   17070:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   17074:	mov	x0, x23
   17078:	stp	x25, x26, [sp, #48]
   1707c:	str	x27, [sp, #64]
   17080:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   17084:	ldr	x20, [x19, #4000]
   17088:	mov	x24, x0
   1708c:	ldr	x0, [x20]
   17090:	cbz	x0, 171c0 <__sanitizer_cov_dump@@Base+0x2708>
   17094:	sub	x1, x0, #0x1
   17098:	tst	x1, x0
   1709c:	b.ne	17284 <__sanitizer_cov_dump@@Base+0x27cc>  // b.any
   170a0:	add	x25, x0, #0xfff
   170a4:	neg	x0, x0
   170a8:	and	x25, x25, x0
   170ac:	mov	w2, #0x0                   	// #0
   170b0:	mov	x0, x25
   170b4:	adrp	x20, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   170b8:	add	x1, x20, #0x258
   170bc:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   170c0:	mov	x2, #0x0                   	// #0
   170c4:	mov	x1, #0x0                   	// #0
   170c8:	mov	x22, x0
   170cc:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   170d0:	mov	x1, #0x0                   	// #0
   170d4:	mov	x0, #0x0                   	// #0
   170d8:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   170dc:	cmp	x25, #0xfff
   170e0:	b.ls	17228 <__sanitizer_cov_dump@@Base+0x2770>  // b.plast
   170e4:	mov	x0, x22
   170e8:	mov	w26, #0x2f                  	// #47
   170ec:	mov	x2, #0x1000                	// #4096
   170f0:	mov	w1, #0x0                   	// #0
   170f4:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   170f8:	b	17108 <__sanitizer_cov_dump@@Base+0x2650>
   170fc:	ldrb	w0, [x19]
   17100:	cbz	w0, 17190 <__sanitizer_cov_dump@@Base+0x26d8>
   17104:	add	x21, x19, #0x1
   17108:	mov	x0, x21
   1710c:	mov	w1, #0x3a                  	// #58
   17110:	bl	18bb8 <__sanitizer_set_report_fd@@Base+0x1908>
   17114:	sub	x20, x0, x21
   17118:	add	x27, x24, x20
   1711c:	mov	x19, x0
   17120:	add	x0, x27, #0x2
   17124:	cmp	x0, #0x1, lsl #12
   17128:	b.hi	170fc <__sanitizer_cov_dump@@Base+0x2644>  // b.pmore
   1712c:	mov	x1, x21
   17130:	mov	x2, x20
   17134:	mov	x0, x22
   17138:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1713c:	cmp	x20, #0xfff
   17140:	b.hi	171cc <__sanitizer_cov_dump@@Base+0x2714>  // b.pmore
   17144:	strb	w26, [x22, x20]
   17148:	add	x4, x20, #0x1
   1714c:	b.eq	171ec <__sanitizer_cov_dump@@Base+0x2734>  // b.none
   17150:	add	x0, x22, x4
   17154:	mov	x2, x24
   17158:	mov	x1, x23
   1715c:	add	x27, x27, #0x1
   17160:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   17164:	cmp	x27, #0xfff
   17168:	b.hi	17208 <__sanitizer_cov_dump@@Base+0x2750>  // b.pmore
   1716c:	strb	wzr, [x22, x27]
   17170:	mov	x0, x22
   17174:	bl	19a50 <__sanitizer_set_report_fd@@Base+0x27a0>
   17178:	tst	w0, #0xff
   1717c:	b.eq	170fc <__sanitizer_cov_dump@@Base+0x2644>  // b.none
   17180:	mov	x0, x22
   17184:	bl	18a68 <__sanitizer_set_report_fd@@Base+0x17b8>
   17188:	mov	x21, x0
   1718c:	b	17194 <__sanitizer_cov_dump@@Base+0x26dc>
   17190:	mov	x21, #0x0                   	// #0
   17194:	mov	x1, x25
   17198:	mov	x0, x22
   1719c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   171a0:	ldp	x25, x26, [sp, #48]
   171a4:	ldr	x27, [sp, #64]
   171a8:	mov	x0, x21
   171ac:	ldp	x21, x22, [sp, #16]
   171b0:	ldp	x23, x24, [sp, #32]
   171b4:	ldr	x30, [sp, #72]
   171b8:	ldp	x19, x20, [sp], #80
   171bc:	ret
   171c0:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   171c4:	str	x0, [x20]
   171c8:	b	17094 <__sanitizer_cov_dump@@Base+0x25dc>
   171cc:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   171d0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   171d4:	mov	x3, x20
   171d8:	add	x2, x2, #0xe0
   171dc:	add	x0, x0, #0xf8
   171e0:	mov	x4, #0x1000                	// #4096
   171e4:	mov	w1, #0x1b6                 	// #438
   171e8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   171ec:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   171f0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   171f4:	add	x2, x2, #0xe0
   171f8:	add	x0, x0, #0xf8
   171fc:	mov	x3, x4
   17200:	mov	w1, #0x1b6                 	// #438
   17204:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   17208:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1720c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   17210:	add	x2, x2, #0xe0
   17214:	add	x0, x0, #0xf8
   17218:	mov	x4, #0x1000                	// #4096
   1721c:	mov	x3, #0xffffffffffffffff    	// #-1
   17220:	mov	w1, #0x1b6                 	// #438
   17224:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   17228:	ldr	x19, [x19, #4000]
   1722c:	ldr	x0, [x19]
   17230:	cbz	x0, 17294 <__sanitizer_cov_dump@@Base+0x27dc>
   17234:	sub	x1, x0, #0x1
   17238:	tst	x1, x0
   1723c:	b.ne	17284 <__sanitizer_cov_dump@@Base+0x27cc>  // b.any
   17240:	add	x19, x0, #0xfff
   17244:	neg	x0, x0
   17248:	and	x19, x19, x0
   1724c:	add	x1, x20, #0x258
   17250:	mov	x0, x19
   17254:	mov	w2, #0x0                   	// #0
   17258:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1725c:	mov	x20, x0
   17260:	mov	x2, #0x0                   	// #0
   17264:	mov	x1, x22
   17268:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1726c:	mov	x1, x25
   17270:	mov	x0, x22
   17274:	mov	x25, x19
   17278:	mov	x22, x20
   1727c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   17280:	b	170e4 <__sanitizer_cov_dump@@Base+0x262c>
   17284:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   17288:	add	x0, x0, #0x240
   1728c:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   17290:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   17294:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   17298:	str	x0, [x19]
   1729c:	b	17234 <__sanitizer_cov_dump@@Base+0x277c>

00000000000172a0 <__sanitizer_set_report_path@@Base>:
   172a0:	mov	x1, x0
   172a4:	adrp	x2, 60000 <_Unwind_Backtrace@GCC_3.3>
   172a8:	add	x0, x2, #0x3d0
   172ac:	b	169e8 <__sanitizer_cov_dump@@Base+0x1f30>

00000000000172b0 <__sanitizer_set_report_fd@@Base>:
   172b0:	stp	x19, x30, [sp, #-16]!
   172b4:	adrp	x19, 60000 <_Unwind_Backtrace@GCC_3.3>
   172b8:	add	x19, x19, #0x3d0
   172bc:	str	w0, [x19, #8]
   172c0:	bl	19e88 <__sanitizer_set_report_fd@@Base+0x2bd8>
   172c4:	str	x0, [x19, #8208]
   172c8:	ldp	x19, x30, [sp], #16
   172cc:	ret
   172d0:	adrp	x4, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   172d4:	stp	x19, x20, [sp, #-48]!
   172d8:	mov	x20, x0
   172dc:	ldr	x0, [x4, #3456]
   172e0:	mov	x19, x3
   172e4:	stp	x21, x22, [sp, #16]
   172e8:	mov	x22, x2
   172ec:	mov	x21, x1
   172f0:	mov	x1, #0x10                  	// #16
   172f4:	str	x30, [sp, #32]
   172f8:	bl	10e80 <__sancov_default_options@@Base+0x288>
   172fc:	mov	x2, x0
   17300:	mov	x3, x22
   17304:	mov	x1, x21
   17308:	adrp	x4, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   1730c:	add	x4, x4, #0xb80
   17310:	ldp	x21, x22, [sp, #16]
   17314:	mov	x0, x20
   17318:	ldr	x30, [sp, #32]
   1731c:	stp	x4, x19, [x2]
   17320:	ldp	x19, x20, [sp], #48
   17324:	b	187f8 <__sanitizer_set_report_fd@@Base+0x1548>
   17328:	adrp	x4, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1732c:	stp	x19, x20, [sp, #-48]!
   17330:	mov	x20, x0
   17334:	ldr	x0, [x4, #3456]
   17338:	mov	x19, x3
   1733c:	stp	x21, x22, [sp, #16]
   17340:	mov	x22, x2
   17344:	mov	x21, x1
   17348:	mov	x1, #0x10                  	// #16
   1734c:	str	x30, [sp, #32]
   17350:	bl	10e80 <__sancov_default_options@@Base+0x288>
   17354:	mov	x2, x0
   17358:	mov	x3, x22
   1735c:	mov	x1, x21
   17360:	adrp	x4, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   17364:	add	x4, x4, #0xb98
   17368:	ldp	x21, x22, [sp, #16]
   1736c:	mov	x0, x20
   17370:	ldr	x30, [sp, #32]
   17374:	stp	x4, x19, [x2]
   17378:	ldp	x19, x20, [sp], #48
   1737c:	b	187f8 <__sanitizer_set_report_fd@@Base+0x1548>
   17380:	adrp	x4, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   17384:	stp	x19, x20, [sp, #-48]!
   17388:	mov	x20, x0
   1738c:	ldr	x0, [x4, #3456]
   17390:	mov	x19, x3
   17394:	stp	x21, x22, [sp, #16]
   17398:	mov	x22, x2
   1739c:	mov	x21, x1
   173a0:	mov	x1, #0x10                  	// #16
   173a4:	str	x30, [sp, #32]
   173a8:	bl	10e80 <__sancov_default_options@@Base+0x288>
   173ac:	mov	x2, x0
   173b0:	mov	x3, x22
   173b4:	mov	x1, x21
   173b8:	adrp	x4, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   173bc:	add	x4, x4, #0xbb0
   173c0:	ldp	x21, x22, [sp, #16]
   173c4:	mov	x0, x20
   173c8:	ldr	x30, [sp, #32]
   173cc:	stp	x4, x19, [x2]
   173d0:	ldp	x19, x20, [sp], #48
   173d4:	b	187f8 <__sanitizer_set_report_fd@@Base+0x1548>
   173d8:	adrp	x4, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   173dc:	stp	x19, x20, [sp, #-48]!
   173e0:	mov	x20, x0
   173e4:	ldr	x0, [x4, #3456]
   173e8:	mov	x19, x3
   173ec:	stp	x21, x22, [sp, #16]
   173f0:	mov	x22, x2
   173f4:	mov	x21, x1
   173f8:	mov	x1, #0x10                  	// #16
   173fc:	str	x30, [sp, #32]
   17400:	bl	10e80 <__sancov_default_options@@Base+0x288>
   17404:	mov	x2, x0
   17408:	mov	x3, x22
   1740c:	mov	x1, x21
   17410:	adrp	x4, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   17414:	add	x4, x4, #0xc70
   17418:	ldp	x21, x22, [sp, #16]
   1741c:	mov	x0, x20
   17420:	ldr	x30, [sp, #32]
   17424:	stp	x4, x19, [x2]
   17428:	ldp	x19, x20, [sp], #48
   1742c:	b	187f8 <__sanitizer_set_report_fd@@Base+0x1548>
   17430:	adrp	x4, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   17434:	stp	x19, x20, [sp, #-48]!
   17438:	mov	x20, x0
   1743c:	ldr	x0, [x4, #3456]
   17440:	mov	x19, x3
   17444:	stp	x21, x22, [sp, #16]
   17448:	mov	x22, x2
   1744c:	mov	x21, x1
   17450:	mov	x1, #0x10                  	// #16
   17454:	str	x30, [sp, #32]
   17458:	bl	10e80 <__sancov_default_options@@Base+0x288>
   1745c:	mov	x2, x0
   17460:	mov	x3, x22
   17464:	mov	x1, x21
   17468:	adrp	x4, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   1746c:	add	x4, x4, #0xc88
   17470:	ldp	x21, x22, [sp, #16]
   17474:	mov	x0, x20
   17478:	ldr	x30, [sp, #32]
   1747c:	stp	x4, x19, [x2]
   17480:	ldp	x19, x20, [sp], #48
   17484:	b	187f8 <__sanitizer_set_report_fd@@Base+0x1548>
   17488:	mov	x18, #0x10000               	// #65536
   1748c:	mov	x17, #0x10100000000         	// #1103806595072
   17490:	mov	w11, #0x100                 	// #256
   17494:	mov	x10, #0x101010101010101     	// #72340172838076673
   17498:	mov	w5, #0x1                   	// #1
   1749c:	mov	w7, #0x1                   	// #1
   174a0:	movk	x18, #0x1, lsl #32
   174a4:	movk	x17, #0x1, lsl #48
   174a8:	mov	x16, #0x100000001           	// #4294967297
   174ac:	mov	x15, #0x100000000           	// #4294967296
   174b0:	mov	w14, #0x101                 	// #257
   174b4:	mov	x13, #0x10000               	// #65536
   174b8:	mov	w12, #0x1388                	// #5000
   174bc:	movk	w11, #0x101, lsl #16
   174c0:	movk	x10, #0x1
   174c4:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   174c8:	adrp	x6, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   174cc:	add	x1, x1, #0x5c8
   174d0:	add	x6, x6, #0xb18
   174d4:	adrp	x4, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   174d8:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   174dc:	add	x4, x4, #0xc50
   174e0:	add	x3, x3, #0x210
   174e4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   174e8:	mov	x9, #0x101010101010101     	// #72340172838076673
   174ec:	add	x2, x2, #0xc58
   174f0:	mov	x8, #0x1                   	// #1
   174f4:	strb	w5, [x0]
   174f8:	str	xzr, [x0, #8]
   174fc:	movk	x9, #0x1, lsl #48
   17500:	strb	wzr, [x0, #16]
   17504:	movk	x8, #0x100, lsl #32
   17508:	stp	x1, x18, [x0, #24]
   1750c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   17510:	add	x1, x1, #0x638
   17514:	str	x6, [x0, #40]
   17518:	mov	w6, #0x100                 	// #256
   1751c:	strh	wzr, [x0, #48]
   17520:	stur	x17, [x0, #52]
   17524:	strb	w5, [x0, #60]
   17528:	str	wzr, [x0, #64]
   1752c:	strb	w5, [x0, #68]
   17530:	stp	x16, xzr, [x0, #72]
   17534:	str	x15, [x0, #88]
   17538:	strh	w14, [x0, #96]
   1753c:	strb	wzr, [x0, #98]
   17540:	stp	x13, x4, [x0, #104]
   17544:	strh	wzr, [x0, #120]
   17548:	strb	wzr, [x0, #122]
   1754c:	stp	xzr, xzr, [x0, #128]
   17550:	str	xzr, [x0, #144]
   17554:	strb	wzr, [x0, #152]
   17558:	str	w12, [x0, #156]
   1755c:	strh	w7, [x0, #160]
   17560:	str	x3, [x0, #168]
   17564:	str	w11, [x0, #176]
   17568:	strh	w7, [x0, #180]
   1756c:	str	wzr, [x0, #184]
   17570:	stp	x2, x10, [x0, #192]
   17574:	stp	x9, x8, [x0, #208]
   17578:	str	x1, [x0, #224]
   1757c:	strh	w6, [x0, #232]
   17580:	strb	wzr, [x0, #234]
   17584:	ret
   17588:	mov	x2, #0xf0                  	// #240
   1758c:	b	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   17590:	stp	x19, x20, [sp, #-80]!
   17594:	sub	x2, x2, #0x1
   17598:	mov	x19, x1
   1759c:	stp	x21, x22, [sp, #16]
   175a0:	mov	x21, x0
   175a4:	add	x20, x1, x2
   175a8:	str	x30, [sp, #32]
   175ac:	ldrb	w0, [x0]
   175b0:	cbz	w0, 17690 <__sanitizer_set_report_fd@@Base+0x3e0>
   175b4:	cmp	x1, x20
   175b8:	b.cs	1765c <__sanitizer_set_report_fd@@Base+0x3ac>  // b.hs, b.nlast
   175bc:	mov	w22, #0x6667                	// #26215
   175c0:	movk	w22, #0x6666, lsl #16
   175c4:	nop
   175c8:	cmp	w0, #0x25
   175cc:	b.ne	17680 <__sanitizer_set_report_fd@@Base+0x3d0>  // b.any
   175d0:	ldrb	w1, [x21, #1]
   175d4:	cmp	w1, #0x62
   175d8:	b.eq	176ac <__sanitizer_set_report_fd@@Base+0x3fc>  // b.none
   175dc:	cmp	w1, #0x70
   175e0:	b.ne	17680 <__sanitizer_set_report_fd@@Base+0x3d0>  // b.any
   175e4:	bl	19e88 <__sanitizer_set_report_fd@@Base+0x2bd8>
   175e8:	add	x3, sp, #0x50
   175ec:	nop
   175f0:	smull	x1, w0, w22
   175f4:	asr	x1, x1, #34
   175f8:	sub	w1, w1, w0, asr #31
   175fc:	add	w2, w1, w1, lsl #2
   17600:	sub	w2, w0, w2, lsl #1
   17604:	mov	w0, w1
   17608:	add	w2, w2, #0x30
   1760c:	and	w2, w2, #0xff
   17610:	strb	w2, [x3, #-1]!
   17614:	cbnz	w1, 175f0 <__sanitizer_set_report_fd@@Base+0x340>
   17618:	add	x0, sp, #0x50
   1761c:	cmp	x0, x3
   17620:	ccmp	x19, x20, #0x2, hi  // hi = pmore
   17624:	b.cc	17630 <__sanitizer_set_report_fd@@Base+0x380>  // b.lo, b.ul, b.last
   17628:	b	17648 <__sanitizer_set_report_fd@@Base+0x398>
   1762c:	ldrb	w2, [x3]
   17630:	strb	w2, [x19], #1
   17634:	add	x3, x3, #0x1
   17638:	add	x0, sp, #0x50
   1763c:	cmp	x19, x20
   17640:	ccmp	x0, x3, #0x0, cc  // cc = lo, ul, last
   17644:	b.hi	1762c <__sanitizer_set_report_fd@@Base+0x37c>  // b.pmore
   17648:	ldrb	w0, [x21, #2]
   1764c:	add	x21, x21, #0x2
   17650:	cbz	w0, 17690 <__sanitizer_set_report_fd@@Base+0x3e0>
   17654:	cmp	x19, x20
   17658:	b.cc	175c8 <__sanitizer_set_report_fd@@Base+0x318>  // b.lo, b.ul, b.last
   1765c:	cmp	x19, x20
   17660:	cset	x3, cc  // cc = lo, ul, last
   17664:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   17668:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   1766c:	add	x2, x2, #0xcb0
   17670:	add	x0, x0, #0xc70
   17674:	mov	x4, #0x0                   	// #0
   17678:	mov	w1, #0x46                  	// #70
   1767c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   17680:	add	x21, x21, #0x1
   17684:	strb	w0, [x19], #1
   17688:	ldrb	w0, [x21]
   1768c:	cbnz	w0, 17654 <__sanitizer_set_report_fd@@Base+0x3a4>
   17690:	cmp	x19, x20
   17694:	b.cs	17700 <__sanitizer_set_report_fd@@Base+0x450>  // b.hs, b.nlast
   17698:	strb	wzr, [x19]
   1769c:	ldp	x21, x22, [sp, #16]
   176a0:	ldr	x30, [sp, #32]
   176a4:	ldp	x19, x20, [sp], #80
   176a8:	ret
   176ac:	bl	13c30 <__sancov_default_options@@Base+0x3038>
   176b0:	cbz	x0, 176e0 <__sanitizer_set_report_fd@@Base+0x430>
   176b4:	ldrb	w1, [x0]
   176b8:	cmp	w1, #0x0
   176bc:	ccmp	x19, x20, #0x2, ne  // ne = any
   176c0:	b.cs	17648 <__sanitizer_set_report_fd@@Base+0x398>  // b.hs, b.nlast
   176c4:	nop
   176c8:	strb	w1, [x19], #1
   176cc:	ldrb	w1, [x0, #1]!
   176d0:	cmp	w1, #0x0
   176d4:	ccmp	x19, x20, #0x2, ne  // ne = any
   176d8:	b.cc	176c8 <__sanitizer_set_report_fd@@Base+0x418>  // b.lo, b.ul, b.last
   176dc:	b	17648 <__sanitizer_set_report_fd@@Base+0x398>
   176e0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   176e4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   176e8:	add	x2, x2, #0xc60
   176ec:	add	x0, x0, #0xc70
   176f0:	mov	x4, #0x0                   	// #0
   176f4:	mov	x3, #0x0                   	// #0
   176f8:	mov	w1, #0x2e                  	// #46
   176fc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   17700:	mov	x3, #0x0                   	// #0
   17704:	b	17664 <__sanitizer_set_report_fd@@Base+0x3b4>
   17708:	stp	x19, x20, [sp, #-32]!
   1770c:	mov	x1, #0x18                  	// #24
   17710:	mov	x19, x0
   17714:	stp	x21, x30, [sp, #16]
   17718:	adrp	x21, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1771c:	adrp	x20, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   17720:	ldr	x21, [x21, #3456]
   17724:	add	x20, x20, #0xca0
   17728:	mov	x0, x21
   1772c:	bl	10e80 <__sancov_default_options@@Base+0x288>
   17730:	mov	x2, x0
   17734:	adrp	x3, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   17738:	add	x3, x3, #0xcd0
   1773c:	mov	x0, x19
   17740:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   17744:	add	x1, x1, #0xcf8
   17748:	stp	x20, x19, [x2]
   1774c:	strb	wzr, [x2, #16]
   17750:	bl	187f8 <__sanitizer_set_report_fd@@Base+0x1548>
   17754:	mov	x0, x21
   17758:	mov	x1, #0x18                  	// #24
   1775c:	bl	10e80 <__sancov_default_options@@Base+0x288>
   17760:	mov	x2, x0
   17764:	mov	w4, #0x1                   	// #1
   17768:	mov	x0, x19
   1776c:	ldp	x21, x30, [sp, #16]
   17770:	stp	x20, x19, [x2]
   17774:	adrp	x3, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   17778:	strb	w4, [x2, #16]
   1777c:	add	x3, x3, #0xd00
   17780:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   17784:	add	x1, x1, #0xd38
   17788:	ldp	x19, x20, [sp], #32
   1778c:	b	187f8 <__sanitizer_set_report_fd@@Base+0x1548>
   17790:	stp	x19, x20, [sp, #-32]!
   17794:	mov	x3, x1
   17798:	mov	x19, x1
   1779c:	mov	x20, x0
   177a0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   177a4:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   177a8:	add	x2, x2, #0xd50
   177ac:	add	x1, x1, #0xd58
   177b0:	str	x30, [sp, #16]
   177b4:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   177b8:	add	x3, x19, #0x8
   177bc:	mov	x0, x20
   177c0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   177c4:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   177c8:	add	x2, x2, #0xdc8
   177cc:	add	x1, x1, #0xe20
   177d0:	bl	17328 <__sanitizer_set_report_fd@@Base+0x78>
   177d4:	add	x3, x19, #0x10
   177d8:	mov	x0, x20
   177dc:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   177e0:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   177e4:	add	x2, x2, #0xe40
   177e8:	add	x1, x1, #0xee0
   177ec:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   177f0:	add	x3, x19, #0x18
   177f4:	mov	x0, x20
   177f8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   177fc:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   17800:	add	x2, x2, #0xef0
   17804:	add	x1, x1, #0xf28
   17808:	bl	17328 <__sanitizer_set_report_fd@@Base+0x78>
   1780c:	add	x3, x19, #0x20
   17810:	mov	x0, x20
   17814:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   17818:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   1781c:	add	x2, x2, #0xf40
   17820:	add	x1, x1, #0xf98
   17824:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17828:	add	x3, x19, #0x21
   1782c:	mov	x0, x20
   17830:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   17834:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17838:	add	x2, x2, #0xfb0
   1783c:	add	x1, x1, #0x0
   17840:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17844:	add	x3, x19, #0x22
   17848:	mov	x0, x20
   1784c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17850:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17854:	add	x2, x2, #0x18
   17858:	add	x1, x1, #0x60
   1785c:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17860:	add	x3, x19, #0x23
   17864:	mov	x0, x20
   17868:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   1786c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17870:	add	x2, x2, #0x78
   17874:	add	x1, x1, #0xa0
   17878:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   1787c:	add	x3, x19, #0x24
   17880:	mov	x0, x20
   17884:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17888:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   1788c:	add	x2, x2, #0xb0
   17890:	add	x1, x1, #0xf8
   17894:	bl	17380 <__sanitizer_set_report_fd@@Base+0xd0>
   17898:	add	x3, x19, #0x28
   1789c:	mov	x0, x20
   178a0:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   178a4:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   178a8:	add	x2, x2, #0x110
   178ac:	add	x1, x1, #0x178
   178b0:	bl	17328 <__sanitizer_set_report_fd@@Base+0x78>
   178b4:	add	x3, x19, #0x30
   178b8:	mov	x0, x20
   178bc:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   178c0:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   178c4:	add	x2, x2, #0x188
   178c8:	add	x1, x1, #0x200
   178cc:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   178d0:	add	x3, x19, #0x31
   178d4:	mov	x0, x20
   178d8:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   178dc:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   178e0:	add	x2, x2, #0x210
   178e4:	add	x1, x1, #0x260
   178e8:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   178ec:	add	x3, x19, #0x34
   178f0:	mov	x0, x20
   178f4:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   178f8:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   178fc:	add	x2, x2, #0x270
   17900:	add	x1, x1, #0x2b8
   17904:	bl	17380 <__sanitizer_set_report_fd@@Base+0xd0>
   17908:	add	x3, x19, #0x38
   1790c:	mov	x0, x20
   17910:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17914:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17918:	add	x2, x2, #0x2c8
   1791c:	add	x1, x1, #0x338
   17920:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17924:	add	x3, x19, #0x39
   17928:	mov	x0, x20
   1792c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17930:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17934:	add	x2, x2, #0x348
   17938:	add	x1, x1, #0x368
   1793c:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17940:	add	x3, x19, #0x3a
   17944:	mov	x0, x20
   17948:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   1794c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17950:	add	x2, x2, #0x378
   17954:	add	x1, x1, #0x418
   17958:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   1795c:	add	x3, x19, #0x3b
   17960:	mov	x0, x20
   17964:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17968:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   1796c:	add	x2, x2, #0x430
   17970:	add	x1, x1, #0x480
   17974:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17978:	add	x3, x19, #0x3c
   1797c:	mov	x0, x20
   17980:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17984:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17988:	add	x2, x2, #0x4a0
   1798c:	add	x1, x1, #0x4f0
   17990:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17994:	add	x3, x19, #0x40
   17998:	mov	x0, x20
   1799c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   179a0:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   179a4:	add	x2, x2, #0x500
   179a8:	add	x1, x1, #0x568
   179ac:	bl	17380 <__sanitizer_set_report_fd@@Base+0xd0>
   179b0:	add	x3, x19, #0x44
   179b4:	mov	x0, x20
   179b8:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   179bc:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   179c0:	add	x2, x2, #0x580
   179c4:	add	x1, x1, #0x598
   179c8:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   179cc:	add	x3, x19, #0x48
   179d0:	mov	x0, x20
   179d4:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   179d8:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   179dc:	add	x2, x2, #0x5a8
   179e0:	add	x1, x1, #0x668
   179e4:	bl	173d8 <__sanitizer_set_report_fd@@Base+0x128>
   179e8:	add	x3, x19, #0x4c
   179ec:	mov	x0, x20
   179f0:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   179f4:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   179f8:	add	x2, x2, #0x678
   179fc:	add	x1, x1, #0x738
   17a00:	bl	173d8 <__sanitizer_set_report_fd@@Base+0x128>
   17a04:	add	x3, x19, #0x50
   17a08:	mov	x0, x20
   17a0c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17a10:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17a14:	add	x2, x2, #0x748
   17a18:	add	x1, x1, #0x808
   17a1c:	bl	173d8 <__sanitizer_set_report_fd@@Base+0x128>
   17a20:	add	x3, x19, #0x54
   17a24:	mov	x0, x20
   17a28:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17a2c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17a30:	add	x2, x2, #0x818
   17a34:	add	x1, x1, #0x8d8
   17a38:	bl	173d8 <__sanitizer_set_report_fd@@Base+0x128>
   17a3c:	add	x3, x19, #0x58
   17a40:	mov	x0, x20
   17a44:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17a48:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17a4c:	add	x2, x2, #0x8e8
   17a50:	add	x1, x1, #0x9a8
   17a54:	bl	173d8 <__sanitizer_set_report_fd@@Base+0x128>
   17a58:	add	x3, x19, #0x5c
   17a5c:	mov	x0, x20
   17a60:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17a64:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17a68:	add	x2, x2, #0x9b8
   17a6c:	add	x1, x1, #0xa78
   17a70:	bl	173d8 <__sanitizer_set_report_fd@@Base+0x128>
   17a74:	add	x3, x19, #0x60
   17a78:	mov	x0, x20
   17a7c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17a80:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17a84:	add	x2, x2, #0xa88
   17a88:	add	x1, x1, #0xaf8
   17a8c:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17a90:	add	x3, x19, #0x61
   17a94:	mov	x0, x20
   17a98:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17a9c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17aa0:	add	x2, x2, #0xb10
   17aa4:	add	x1, x1, #0xb48
   17aa8:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17aac:	add	x3, x19, #0x62
   17ab0:	mov	x0, x20
   17ab4:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17ab8:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17abc:	add	x2, x2, #0xb58
   17ac0:	add	x1, x1, #0xb80
   17ac4:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17ac8:	add	x3, x19, #0x68
   17acc:	mov	x0, x20
   17ad0:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17ad4:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17ad8:	add	x2, x2, #0xb98
   17adc:	add	x1, x1, #0xc10
   17ae0:	bl	17430 <__sanitizer_set_report_fd@@Base+0x180>
   17ae4:	add	x3, x19, #0x70
   17ae8:	mov	x0, x20
   17aec:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17af0:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17af4:	add	x2, x2, #0xc30
   17af8:	add	x1, x1, #0xc58
   17afc:	bl	17328 <__sanitizer_set_report_fd@@Base+0x78>
   17b00:	add	x3, x19, #0x78
   17b04:	mov	x0, x20
   17b08:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17b0c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17b10:	add	x2, x2, #0xc60
   17b14:	add	x1, x1, #0xca8
   17b18:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17b1c:	add	x3, x19, #0x79
   17b20:	mov	x0, x20
   17b24:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17b28:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17b2c:	add	x2, x2, #0xcc0
   17b30:	add	x1, x1, #0xce0
   17b34:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17b38:	add	x3, x19, #0x7a
   17b3c:	mov	x0, x20
   17b40:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17b44:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   17b48:	add	x2, x2, #0xcf8
   17b4c:	add	x1, x1, #0xd80
   17b50:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17b54:	add	x3, x19, #0x80
   17b58:	mov	x0, x20
   17b5c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17b60:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17b64:	add	x2, x2, #0xd18
   17b68:	add	x1, x1, #0xd90
   17b6c:	bl	17430 <__sanitizer_set_report_fd@@Base+0x180>
   17b70:	add	x3, x19, #0x88
   17b74:	mov	x0, x20
   17b78:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17b7c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17b80:	add	x2, x2, #0xda0
   17b84:	add	x1, x1, #0xe40
   17b88:	bl	17430 <__sanitizer_set_report_fd@@Base+0x180>
   17b8c:	add	x3, x19, #0x90
   17b90:	mov	x0, x20
   17b94:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17b98:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17b9c:	add	x2, x2, #0xe58
   17ba0:	add	x1, x1, #0xfb8
   17ba4:	bl	17430 <__sanitizer_set_report_fd@@Base+0x180>
   17ba8:	add	x3, x19, #0x98
   17bac:	mov	x0, x20
   17bb0:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17bb4:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   17bb8:	add	x2, x2, #0xfd0
   17bbc:	add	x1, x1, #0xff8
   17bc0:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17bc4:	add	x3, x19, #0x9c
   17bc8:	mov	x0, x20
   17bcc:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17bd0:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17bd4:	add	x2, x2, #0x8
   17bd8:	add	x1, x1, #0xd8
   17bdc:	bl	17380 <__sanitizer_set_report_fd@@Base+0xd0>
   17be0:	add	x3, x19, #0xa0
   17be4:	mov	x0, x20
   17be8:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17bec:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17bf0:	add	x2, x2, #0x100
   17bf4:	add	x1, x1, #0x160
   17bf8:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17bfc:	add	x3, x19, #0xa1
   17c00:	mov	x0, x20
   17c04:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17c08:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17c0c:	add	x2, x2, #0x178
   17c10:	add	x1, x1, #0x1f8
   17c14:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17c18:	add	x3, x19, #0xa8
   17c1c:	mov	x0, x20
   17c20:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17c24:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17c28:	add	x2, x2, #0x208
   17c2c:	add	x1, x1, #0x250
   17c30:	bl	17328 <__sanitizer_set_report_fd@@Base+0x78>
   17c34:	add	x3, x19, #0xb0
   17c38:	mov	x0, x20
   17c3c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17c40:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17c44:	add	x2, x2, #0x260
   17c48:	add	x1, x1, #0x2c8
   17c4c:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17c50:	add	x3, x19, #0xb1
   17c54:	mov	x0, x20
   17c58:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17c5c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17c60:	add	x2, x2, #0x2e0
   17c64:	add	x1, x1, #0x308
   17c68:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17c6c:	add	x3, x19, #0xb2
   17c70:	mov	x0, x20
   17c74:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17c78:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17c7c:	add	x2, x2, #0x320
   17c80:	add	x1, x1, #0x3f0
   17c84:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17c88:	add	x3, x19, #0xb3
   17c8c:	mov	x0, x20
   17c90:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17c94:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17c98:	add	x2, x2, #0x408
   17c9c:	add	x1, x1, #0x450
   17ca0:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17ca4:	add	x3, x19, #0xb4
   17ca8:	mov	x0, x20
   17cac:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17cb0:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17cb4:	add	x2, x2, #0x468
   17cb8:	add	x1, x1, #0x4a0
   17cbc:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17cc0:	add	x3, x19, #0xb5
   17cc4:	mov	x0, x20
   17cc8:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17ccc:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17cd0:	add	x2, x2, #0x4b8
   17cd4:	add	x1, x1, #0x500
   17cd8:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17cdc:	add	x3, x19, #0xb8
   17ce0:	mov	x0, x20
   17ce4:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17ce8:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17cec:	add	x2, x2, #0x518
   17cf0:	add	x1, x1, #0x5e8
   17cf4:	bl	17380 <__sanitizer_set_report_fd@@Base+0xd0>
   17cf8:	add	x3, x19, #0xc0
   17cfc:	mov	x0, x20
   17d00:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17d04:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17d08:	add	x2, x2, #0x600
   17d0c:	add	x1, x1, #0x690
   17d10:	bl	17328 <__sanitizer_set_report_fd@@Base+0x78>
   17d14:	add	x3, x19, #0xc8
   17d18:	mov	x0, x20
   17d1c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17d20:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17d24:	add	x2, x2, #0x6a8
   17d28:	add	x1, x1, #0x6e0
   17d2c:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17d30:	add	x3, x19, #0xc9
   17d34:	mov	x0, x20
   17d38:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17d3c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17d40:	add	x2, x2, #0x700
   17d44:	add	x1, x1, #0x740
   17d48:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17d4c:	add	x3, x19, #0xca
   17d50:	mov	x0, x20
   17d54:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17d58:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17d5c:	add	x2, x2, #0x758
   17d60:	add	x1, x1, #0x7b0
   17d64:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17d68:	add	x3, x19, #0xcb
   17d6c:	mov	x0, x20
   17d70:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17d74:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17d78:	add	x2, x2, #0x7c8
   17d7c:	add	x1, x1, #0x820
   17d80:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17d84:	add	x3, x19, #0xcc
   17d88:	mov	x0, x20
   17d8c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17d90:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17d94:	add	x2, x2, #0x838
   17d98:	add	x1, x1, #0x888
   17d9c:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17da0:	add	x3, x19, #0xcd
   17da4:	mov	x0, x20
   17da8:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17dac:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17db0:	add	x2, x2, #0x8a0
   17db4:	add	x1, x1, #0x8e8
   17db8:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17dbc:	add	x3, x19, #0xce
   17dc0:	mov	x0, x20
   17dc4:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17dc8:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17dcc:	add	x2, x2, #0x900
   17dd0:	add	x1, x1, #0x958
   17dd4:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17dd8:	add	x3, x19, #0xcf
   17ddc:	mov	x0, x20
   17de0:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17de4:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17de8:	add	x2, x2, #0x970
   17dec:	add	x1, x1, #0x9b8
   17df0:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17df4:	add	x3, x19, #0xd0
   17df8:	mov	x0, x20
   17dfc:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17e00:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17e04:	add	x2, x2, #0x9d0
   17e08:	add	x1, x1, #0xa30
   17e0c:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17e10:	add	x3, x19, #0xd1
   17e14:	mov	x0, x20
   17e18:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17e1c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17e20:	add	x2, x2, #0xa48
   17e24:	add	x1, x1, #0xa90
   17e28:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17e2c:	add	x3, x19, #0xd2
   17e30:	mov	x0, x20
   17e34:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17e38:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17e3c:	add	x2, x2, #0xaa8
   17e40:	add	x1, x1, #0xb00
   17e44:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17e48:	add	x3, x19, #0xd3
   17e4c:	mov	x0, x20
   17e50:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17e54:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17e58:	add	x2, x2, #0xb10
   17e5c:	add	x1, x1, #0xb50
   17e60:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17e64:	add	x3, x19, #0xd4
   17e68:	mov	x0, x20
   17e6c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17e70:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17e74:	add	x2, x2, #0xb68
   17e78:	add	x1, x1, #0xbc0
   17e7c:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17e80:	add	x3, x19, #0xd5
   17e84:	mov	x0, x20
   17e88:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17e8c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17e90:	add	x2, x2, #0xbd8
   17e94:	add	x1, x1, #0xc20
   17e98:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17e9c:	add	x3, x19, #0xd6
   17ea0:	mov	x0, x20
   17ea4:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17ea8:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17eac:	add	x2, x2, #0xc30
   17eb0:	add	x1, x1, #0xc78
   17eb4:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17eb8:	add	x3, x19, #0xd7
   17ebc:	mov	x0, x20
   17ec0:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17ec4:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17ec8:	add	x2, x2, #0xc88
   17ecc:	add	x1, x1, #0xcd8
   17ed0:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17ed4:	add	x3, x19, #0xd8
   17ed8:	mov	x0, x20
   17edc:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17ee0:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17ee4:	add	x2, x2, #0xcf0
   17ee8:	add	x1, x1, #0xd30
   17eec:	bl	17380 <__sanitizer_set_report_fd@@Base+0xd0>
   17ef0:	add	x3, x19, #0xdc
   17ef4:	mov	x0, x20
   17ef8:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17efc:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17f00:	add	x2, x2, #0xd40
   17f04:	add	x1, x1, #0xd98
   17f08:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17f0c:	add	x3, x19, #0xdd
   17f10:	mov	x0, x20
   17f14:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17f18:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17f1c:	add	x2, x2, #0xda8
   17f20:	add	x1, x1, #0xe10
   17f24:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17f28:	add	x3, x19, #0xde
   17f2c:	mov	x0, x20
   17f30:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17f34:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17f38:	add	x2, x2, #0xe28
   17f3c:	add	x1, x1, #0xe58
   17f40:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17f44:	add	x3, x19, #0xdf
   17f48:	mov	x0, x20
   17f4c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17f50:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17f54:	add	x2, x2, #0xe68
   17f58:	add	x1, x1, #0xe88
   17f5c:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17f60:	add	x3, x19, #0xe0
   17f64:	mov	x0, x20
   17f68:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17f6c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17f70:	add	x2, x2, #0xe98
   17f74:	add	x1, x1, #0xeb0
   17f78:	bl	17328 <__sanitizer_set_report_fd@@Base+0x78>
   17f7c:	add	x3, x19, #0xe8
   17f80:	mov	x0, x20
   17f84:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17f88:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17f8c:	add	x2, x2, #0xec0
   17f90:	add	x1, x1, #0xf08
   17f94:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17f98:	add	x3, x19, #0xe9
   17f9c:	mov	x0, x20
   17fa0:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17fa4:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17fa8:	add	x2, x2, #0xf20
   17fac:	add	x1, x1, #0xf80
   17fb0:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17fb4:	add	x3, x19, #0xea
   17fb8:	mov	x0, x20
   17fbc:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17fc0:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   17fc4:	add	x2, x2, #0xf90
   17fc8:	add	x1, x1, #0xfe8
   17fcc:	bl	172d0 <__sanitizer_set_report_fd@@Base+0x20>
   17fd0:	mov	x1, x19
   17fd4:	mov	x0, x20
   17fd8:	ldr	x30, [sp, #16]
   17fdc:	ldp	x19, x20, [sp], #32
   17fe0:	b	17708 <__sanitizer_set_report_fd@@Base+0x458>
   17fe4:	nop
   17fe8:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   17fec:	ldrb	w4, [x0, #223]
   17ff0:	ldr	w3, [x0, #52]
   17ff4:	ldr	x2, [x1, #3680]
   17ff8:	ldrb	w1, [x0, #161]
   17ffc:	orr	w1, w1, w4
   18000:	str	w3, [x2]
   18004:	strb	w1, [x0, #161]
   18008:	ret
   1800c:	nop
   18010:	stp	x19, x20, [sp, #-48]!
   18014:	mov	x20, x0
   18018:	mov	w2, #0xa                   	// #10
   1801c:	mov	x0, x1
   18020:	mov	x19, x1
   18024:	add	x1, sp, #0x28
   18028:	str	x30, [sp, #16]
   1802c:	bl	18ef8 <__sanitizer_set_report_fd@@Base+0x1c48>
   18030:	ldr	x2, [x20, #8]
   18034:	ldr	x1, [sp, #40]
   18038:	str	x0, [x2]
   1803c:	ldrb	w0, [x1]
   18040:	cmp	w0, #0x0
   18044:	cset	w20, eq  // eq = none
   18048:	cbnz	w0, 1805c <__sanitizer_set_report_fd@@Base+0xdac>
   1804c:	mov	w0, w20
   18050:	ldr	x30, [sp, #16]
   18054:	ldp	x19, x20, [sp], #48
   18058:	ret
   1805c:	mov	x1, x19
   18060:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   18064:	add	x0, x0, #0xbd8
   18068:	bl	1e5c0 <OnPrint@@Base+0x310>
   1806c:	mov	w0, w20
   18070:	ldr	x30, [sp, #16]
   18074:	ldp	x19, x20, [sp], #48
   18078:	ret
   1807c:	nop
   18080:	stp	x19, x20, [sp, #-32]!
   18084:	mov	x19, x1
   18088:	mov	x20, x0
   1808c:	mov	x0, x1
   18090:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   18094:	add	x1, x1, #0x80
   18098:	str	x30, [sp, #16]
   1809c:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   180a0:	cbnz	w0, 180c0 <__sanitizer_set_report_fd@@Base+0xe10>
   180a4:	mov	w1, #0x0                   	// #0
   180a8:	ldr	x2, [x20, #8]
   180ac:	mov	w0, #0x1                   	// #1
   180b0:	ldr	x30, [sp, #16]
   180b4:	str	w1, [x2]
   180b8:	ldp	x19, x20, [sp], #32
   180bc:	ret
   180c0:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   180c4:	mov	x0, x19
   180c8:	add	x1, x1, #0x88
   180cc:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   180d0:	cbz	w0, 180a4 <__sanitizer_set_report_fd@@Base+0xdf4>
   180d4:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   180d8:	mov	x0, x19
   180dc:	add	x1, x1, #0x90
   180e0:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   180e4:	cbz	w0, 180a4 <__sanitizer_set_report_fd@@Base+0xdf4>
   180e8:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   180ec:	mov	x0, x19
   180f0:	add	x1, x1, #0x98
   180f4:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   180f8:	cbz	w0, 18110 <__sanitizer_set_report_fd@@Base+0xe60>
   180fc:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   18100:	mov	x0, x19
   18104:	add	x1, x1, #0xa0
   18108:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   1810c:	cbnz	w0, 18118 <__sanitizer_set_report_fd@@Base+0xe68>
   18110:	mov	w1, #0x1                   	// #1
   18114:	b	180a8 <__sanitizer_set_report_fd@@Base+0xdf8>
   18118:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1811c:	mov	x0, x19
   18120:	add	x1, x1, #0xa8
   18124:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   18128:	cbz	w0, 18110 <__sanitizer_set_report_fd@@Base+0xe60>
   1812c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   18130:	mov	x0, x19
   18134:	add	x1, x1, #0xeb0
   18138:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   1813c:	cbz	w0, 18174 <__sanitizer_set_report_fd@@Base+0xec4>
   18140:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   18144:	mov	x0, x19
   18148:	add	x1, x1, #0xc08
   1814c:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   18150:	cbz	w0, 18174 <__sanitizer_set_report_fd@@Base+0xec4>
   18154:	mov	x1, x19
   18158:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   1815c:	add	x0, x0, #0xc18
   18160:	bl	1e5c0 <OnPrint@@Base+0x310>
   18164:	mov	w0, #0x0                   	// #0
   18168:	ldr	x30, [sp, #16]
   1816c:	ldp	x19, x20, [sp], #32
   18170:	ret
   18174:	ldr	x1, [x20, #8]
   18178:	mov	w2, #0x2                   	// #2
   1817c:	mov	w0, #0x1                   	// #1
   18180:	ldr	x30, [sp, #16]
   18184:	str	w2, [x1]
   18188:	ldp	x19, x20, [sp], #32
   1818c:	ret
   18190:	stp	x19, x20, [sp, #-32]!
   18194:	mov	x19, x1
   18198:	mov	x20, x0
   1819c:	mov	x0, x1
   181a0:	mov	w1, #0x25                  	// #37
   181a4:	str	x30, [sp, #24]
   181a8:	bl	18b88 <__sanitizer_set_report_fd@@Base+0x18d8>
   181ac:	cbz	x0, 18210 <__sanitizer_set_report_fd@@Base+0xf60>
   181b0:	mov	w2, #0x0                   	// #0
   181b4:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   181b8:	mov	x0, #0x1000                	// #4096
   181bc:	add	x1, x1, #0x0
   181c0:	str	x21, [sp, #16]
   181c4:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   181c8:	mov	x21, x0
   181cc:	mov	x2, #0x1000                	// #4096
   181d0:	mov	x0, x19
   181d4:	mov	x1, x21
   181d8:	bl	17590 <__sanitizer_set_report_fd@@Base+0x2e0>
   181dc:	ldrb	w2, [x20, #16]
   181e0:	mov	x1, x21
   181e4:	ldr	x0, [x20, #8]
   181e8:	bl	186e8 <__sanitizer_set_report_fd@@Base+0x1438>
   181ec:	mov	w19, w0
   181f0:	mov	x1, #0x1000                	// #4096
   181f4:	mov	x0, x21
   181f8:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   181fc:	mov	w0, w19
   18200:	ldr	x21, [sp, #16]
   18204:	ldr	x30, [sp, #24]
   18208:	ldp	x19, x20, [sp], #32
   1820c:	ret
   18210:	ldrb	w2, [x20, #16]
   18214:	mov	x1, x19
   18218:	ldr	x0, [x20, #8]
   1821c:	ldr	x30, [sp, #24]
   18220:	ldp	x19, x20, [sp], #32
   18224:	b	186e8 <__sanitizer_set_report_fd@@Base+0x1438>
   18228:	stp	x19, x20, [sp, #-48]!
   1822c:	stp	x21, x22, [sp, #16]
   18230:	adrp	x21, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   18234:	add	x19, x21, #0xb80
   18238:	str	x30, [sp, #32]
   1823c:	ldr	w1, [x19, #160]
   18240:	cbnz	w1, 18254 <__sanitizer_set_report_fd@@Base+0xfa4>
   18244:	ldp	x21, x22, [sp, #16]
   18248:	ldr	x30, [sp, #32]
   1824c:	ldp	x19, x20, [sp], #48
   18250:	ret
   18254:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   18258:	add	x0, x0, #0x18
   1825c:	bl	1e5c0 <OnPrint@@Base+0x310>
   18260:	ldr	w0, [x19, #160]
   18264:	cmp	w0, #0x0
   18268:	b.le	18294 <__sanitizer_set_report_fd@@Base+0xfe4>
   1826c:	adrp	x22, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   18270:	add	x22, x22, #0x48
   18274:	mov	x20, #0x0                   	// #0
   18278:	ldr	x1, [x19, x20, lsl #3]
   1827c:	mov	x0, x22
   18280:	add	x20, x20, #0x1
   18284:	bl	1e5c0 <OnPrint@@Base+0x310>
   18288:	ldr	w0, [x19, #160]
   1828c:	cmp	w0, w20
   18290:	b.gt	18278 <__sanitizer_set_report_fd@@Base+0xfc8>
   18294:	add	x21, x21, #0xb80
   18298:	ldr	x30, [sp, #32]
   1829c:	str	wzr, [x21, #160]
   182a0:	ldp	x21, x22, [sp, #16]
   182a4:	ldp	x19, x20, [sp], #48
   182a8:	ret
   182ac:	nop
   182b0:	stp	x19, x20, [sp, #-32]!
   182b4:	stp	x21, x30, [sp, #16]
   182b8:	mov	x21, x1
   182bc:	mov	x0, x21
   182c0:	mov	x1, x2
   182c4:	bl	18e38 <__sanitizer_set_report_fd@@Base+0x1b88>
   182c8:	adrp	x1, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   182cc:	mov	x19, x0
   182d0:	add	x0, x1, #0xb80
   182d4:	add	x1, x19, #0x1
   182d8:	add	x0, x0, #0xa8
   182dc:	bl	10e80 <__sancov_default_options@@Base+0x288>
   182e0:	mov	x20, x0
   182e4:	mov	x1, x21
   182e8:	mov	x2, x19
   182ec:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   182f0:	mov	x0, x20
   182f4:	strb	wzr, [x20, x19]
   182f8:	ldp	x21, x30, [sp, #16]
   182fc:	ldp	x19, x20, [sp], #32
   18300:	ret
   18304:	nop
   18308:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1830c:	stp	x19, x20, [sp, #-48]!
   18310:	ldr	x1, [x1, #4008]
   18314:	stp	x21, x22, [sp, #16]
   18318:	mov	x21, x0
   1831c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   18320:	add	x0, x0, #0x50
   18324:	ldr	x1, [x1]
   18328:	str	x30, [sp, #32]
   1832c:	bl	1e5c0 <OnPrint@@Base+0x310>
   18330:	ldr	w0, [x21, #8]
   18334:	cmp	w0, #0x0
   18338:	b.le	1837c <__sanitizer_set_report_fd@@Base+0x10cc>
   1833c:	adrp	x22, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   18340:	add	x22, x22, #0x70
   18344:	mov	x19, #0x0                   	// #0
   18348:	mov	w20, #0x0                   	// #0
   1834c:	nop
   18350:	ldr	x1, [x21]
   18354:	mov	x0, x22
   18358:	add	w20, w20, #0x1
   1835c:	add	x2, x1, x19
   18360:	ldr	x1, [x1, x19]
   18364:	add	x19, x19, #0x18
   18368:	ldr	x2, [x2, #8]
   1836c:	bl	1e5c0 <OnPrint@@Base+0x310>
   18370:	ldr	w1, [x21, #8]
   18374:	cmp	w1, w20
   18378:	b.gt	18350 <__sanitizer_set_report_fd@@Base+0x10a0>
   1837c:	ldp	x21, x22, [sp, #16]
   18380:	ldr	x30, [sp, #32]
   18384:	ldp	x19, x20, [sp], #48
   18388:	ret
   1838c:	nop
   18390:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   18394:	add	x0, x0, #0x80
   18398:	str	x30, [sp, #-16]!
   1839c:	bl	1e5c0 <OnPrint@@Base+0x310>
   183a0:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   183a4:	nop
   183a8:	and	w1, w1, #0xff
   183ac:	cmp	w1, #0x20
   183b0:	cset	w0, eq  // eq = none
   183b4:	cmp	w1, #0x2c
   183b8:	csinc	w0, w0, wzr, ne  // ne = any
   183bc:	cbnz	w0, 183d4 <__sanitizer_set_report_fd@@Base+0x1124>
   183c0:	cmp	w1, #0x3a
   183c4:	cset	w0, eq  // eq = none
   183c8:	cmp	w1, #0xa
   183cc:	csinc	w0, w0, wzr, ne  // ne = any
   183d0:	cbz	w0, 183d8 <__sanitizer_set_report_fd@@Base+0x1128>
   183d4:	ret
   183d8:	and	w1, w1, #0xfffffffb
   183dc:	cmp	w1, #0x9
   183e0:	cset	w0, eq  // eq = none
   183e4:	ret
   183e8:	mov	x3, x0
   183ec:	str	x30, [sp, #-16]!
   183f0:	ldp	x4, x2, [x0, #16]
   183f4:	b	183fc <__sanitizer_set_report_fd@@Base+0x114c>
   183f8:	str	x2, [x3, #24]
   183fc:	ldrb	w1, [x4, x2]
   18400:	add	x2, x2, #0x1
   18404:	mov	x0, x3
   18408:	bl	183a8 <__sanitizer_set_report_fd@@Base+0x10f8>
   1840c:	tst	w0, #0xff
   18410:	b.ne	183f8 <__sanitizer_set_report_fd@@Base+0x1148>  // b.any
   18414:	ldr	x30, [sp], #16
   18418:	ret
   1841c:	nop
   18420:	stp	x19, x20, [sp, #-48]!
   18424:	stp	x21, x22, [sp, #16]
   18428:	mov	x21, x0
   1842c:	ldr	w0, [x0, #8]
   18430:	str	x30, [sp, #40]
   18434:	mov	x22, x1
   18438:	cmp	w0, #0x0
   1843c:	b.le	184b0 <__sanitizer_set_report_fd@@Base+0x1200>
   18440:	mov	x19, #0x0                   	// #0
   18444:	mov	w20, #0x0                   	// #0
   18448:	str	x23, [sp, #32]
   1844c:	mov	x23, x2
   18450:	b	18468 <__sanitizer_set_report_fd@@Base+0x11b8>
   18454:	ldr	w0, [x21, #8]
   18458:	add	w20, w20, #0x1
   1845c:	add	x19, x19, #0x18
   18460:	cmp	w0, w20
   18464:	b.le	184ac <__sanitizer_set_report_fd@@Base+0x11fc>
   18468:	ldr	x3, [x21]
   1846c:	mov	x0, x22
   18470:	ldr	x1, [x3, x19]
   18474:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   18478:	cbnz	w0, 18454 <__sanitizer_set_report_fd@@Base+0x11a4>
   1847c:	ldr	x0, [x21]
   18480:	mov	x1, x23
   18484:	ldp	x21, x22, [sp, #16]
   18488:	add	x19, x0, x19
   1848c:	ldr	x23, [sp, #32]
   18490:	ldr	x0, [x19, #16]
   18494:	ldr	x30, [sp, #40]
   18498:	ldr	x2, [x0]
   1849c:	ldp	x19, x20, [sp], #48
   184a0:	ldr	x2, [x2]
   184a4:	mov	x16, x2
   184a8:	br	x16
   184ac:	ldr	x23, [sp, #32]
   184b0:	adrp	x1, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   184b4:	add	x1, x1, #0xb80
   184b8:	ldr	w0, [x1, #160]
   184bc:	sxtw	x3, w0
   184c0:	cmp	x3, #0x13
   184c4:	b.hi	184e8 <__sanitizer_set_report_fd@@Base+0x1238>  // b.pmore
   184c8:	add	w2, w0, #0x1
   184cc:	str	x22, [x1, x3, lsl #3]
   184d0:	ldp	x21, x22, [sp, #16]
   184d4:	mov	w0, #0x1                   	// #1
   184d8:	ldr	x30, [sp, #40]
   184dc:	str	w2, [x1, #160]
   184e0:	ldp	x19, x20, [sp], #48
   184e4:	ret
   184e8:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   184ec:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   184f0:	add	x2, x2, #0x90
   184f4:	add	x0, x0, #0xc0
   184f8:	mov	x4, #0x14                  	// #20
   184fc:	mov	w1, #0x1e                  	// #30
   18500:	str	x23, [sp, #32]
   18504:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   18508:	stp	x19, x20, [sp, #-32]!
   1850c:	mov	x19, x0
   18510:	ldp	x3, x4, [x0, #16]
   18514:	str	x30, [sp, #16]
   18518:	ldrb	w1, [x3, x4]
   1851c:	add	x5, x3, x4
   18520:	mov	x2, x4
   18524:	cmp	w1, #0x3d
   18528:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   1852c:	b.ne	1854c <__sanitizer_set_report_fd@@Base+0x129c>  // b.any
   18530:	b	1856c <__sanitizer_set_report_fd@@Base+0x12bc>
   18534:	add	x2, x2, #0x1
   18538:	str	x2, [x19, #24]
   1853c:	ldrb	w1, [x3, x2]
   18540:	cmp	w1, #0x3d
   18544:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   18548:	b.eq	1856c <__sanitizer_set_report_fd@@Base+0x12bc>  // b.none
   1854c:	mov	x0, x19
   18550:	bl	183a8 <__sanitizer_set_report_fd@@Base+0x10f8>
   18554:	tst	w0, #0xff
   18558:	b.eq	18534 <__sanitizer_set_report_fd@@Base+0x1284>  // b.none
   1855c:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   18560:	mov	x0, x19
   18564:	add	x1, x1, #0x108
   18568:	bl	18390 <__sanitizer_set_report_fd@@Base+0x10e0>
   1856c:	cmp	w1, #0x3d
   18570:	b.ne	1855c <__sanitizer_set_report_fd@@Base+0x12ac>  // b.any
   18574:	sub	x2, x2, x4
   18578:	mov	x1, x5
   1857c:	mov	x0, x19
   18580:	bl	182b0 <__sanitizer_set_report_fd@@Base+0x1000>
   18584:	ldp	x4, x2, [x19, #16]
   18588:	mov	w3, #0x22                  	// #34
   1858c:	mov	x20, x0
   18590:	add	x6, x2, #0x1
   18594:	str	x6, [x19, #24]
   18598:	add	x7, x4, x6
   1859c:	ldrb	w1, [x4, x6]
   185a0:	cmp	w1, #0x27
   185a4:	ccmp	w1, w3, #0x4, ne  // ne = any
   185a8:	b.eq	185f4 <__sanitizer_set_report_fd@@Base+0x1344>  // b.none
   185ac:	cbz	w1, 18680 <__sanitizer_set_report_fd@@Base+0x13d0>
   185b0:	mov	x5, x6
   185b4:	b	185cc <__sanitizer_set_report_fd@@Base+0x131c>
   185b8:	add	x3, x5, #0x1
   185bc:	str	x3, [x19, #24]
   185c0:	ldrb	w1, [x4, x3]
   185c4:	cbz	w1, 18678 <__sanitizer_set_report_fd@@Base+0x13c8>
   185c8:	mov	x5, x3
   185cc:	mov	x0, x19
   185d0:	bl	183a8 <__sanitizer_set_report_fd@@Base+0x10f8>
   185d4:	tst	w0, #0xff
   185d8:	b.eq	185b8 <__sanitizer_set_report_fd@@Base+0x1308>  // b.none
   185dc:	sub	x2, x5, x6
   185e0:	mov	x1, x7
   185e4:	mov	x0, x19
   185e8:	bl	182b0 <__sanitizer_set_report_fd@@Base+0x1000>
   185ec:	mov	x2, x0
   185f0:	b	18648 <__sanitizer_set_report_fd@@Base+0x1398>
   185f4:	add	x2, x2, #0x2
   185f8:	str	x2, [x19, #24]
   185fc:	add	x1, x4, x2
   18600:	ldrb	w0, [x4, x6]
   18604:	ldrb	w3, [x4, x2]
   18608:	cbnz	w3, 18620 <__sanitizer_set_report_fd@@Base+0x1370>
   1860c:	b	18668 <__sanitizer_set_report_fd@@Base+0x13b8>
   18610:	add	x2, x2, #0x1
   18614:	str	x2, [x19, #24]
   18618:	ldrb	w3, [x4, x2]
   1861c:	cbz	w3, 18668 <__sanitizer_set_report_fd@@Base+0x13b8>
   18620:	cmp	w0, w3
   18624:	b.ne	18610 <__sanitizer_set_report_fd@@Base+0x1360>  // b.any
   18628:	mvn	x6, x6
   1862c:	mov	x0, x19
   18630:	add	x2, x6, x2
   18634:	bl	182b0 <__sanitizer_set_report_fd@@Base+0x1000>
   18638:	mov	x2, x0
   1863c:	ldr	x1, [x19, #24]
   18640:	add	x1, x1, #0x1
   18644:	str	x1, [x19, #24]
   18648:	mov	x1, x20
   1864c:	mov	x0, x19
   18650:	bl	18420 <__sanitizer_set_report_fd@@Base+0x1170>
   18654:	tst	w0, #0xff
   18658:	b.eq	18688 <__sanitizer_set_report_fd@@Base+0x13d8>  // b.none
   1865c:	ldr	x30, [sp, #16]
   18660:	ldp	x19, x20, [sp], #32
   18664:	ret
   18668:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1866c:	mov	x0, x19
   18670:	add	x1, x1, #0x130
   18674:	bl	18390 <__sanitizer_set_report_fd@@Base+0x10e0>
   18678:	sub	x2, x5, x2
   1867c:	b	185e0 <__sanitizer_set_report_fd@@Base+0x1330>
   18680:	mov	x2, #0x0                   	// #0
   18684:	b	185e0 <__sanitizer_set_report_fd@@Base+0x1330>
   18688:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1868c:	mov	x0, x19
   18690:	add	x1, x1, #0x118
   18694:	bl	18390 <__sanitizer_set_report_fd@@Base+0x10e0>
   18698:	stp	x19, x30, [sp, #-16]!
   1869c:	mov	x19, x0
   186a0:	b	186a8 <__sanitizer_set_report_fd@@Base+0x13f8>
   186a4:	bl	18508 <__sanitizer_set_report_fd@@Base+0x1258>
   186a8:	mov	x0, x19
   186ac:	bl	183e8 <__sanitizer_set_report_fd@@Base+0x1138>
   186b0:	ldp	x2, x1, [x19, #16]
   186b4:	mov	x0, x19
   186b8:	ldrb	w1, [x2, x1]
   186bc:	cbnz	w1, 186a4 <__sanitizer_set_report_fd@@Base+0x13f4>
   186c0:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   186c4:	ldr	x0, [x0, #4040]
   186c8:	ldr	w1, [x0, #36]
   186cc:	cmp	w1, #0x0
   186d0:	b.gt	186dc <__sanitizer_set_report_fd@@Base+0x142c>
   186d4:	mov	w1, #0x1                   	// #1
   186d8:	str	w1, [x0, #36]
   186dc:	ldp	x19, x30, [sp], #16
   186e0:	ret
   186e4:	nop
   186e8:	stp	x19, x20, [sp, #-80]!
   186ec:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   186f0:	mov	x19, x0
   186f4:	ldr	x20, [x20, #4000]
   186f8:	stp	x21, x22, [sp, #16]
   186fc:	mov	x21, x1
   18700:	and	w22, w2, #0xff
   18704:	ldr	x0, [x20]
   18708:	str	x30, [sp, #32]
   1870c:	cbz	x0, 18794 <__sanitizer_set_report_fd@@Base+0x14e4>
   18710:	cmp	x0, #0x8, lsl #12
   18714:	add	x5, sp, #0x34
   18718:	add	x3, sp, #0x48
   1871c:	add	x2, sp, #0x40
   18720:	add	x1, sp, #0x38
   18724:	mov	x4, #0x8000                	// #32768
   18728:	csel	x4, x0, x4, cs  // cs = hs, nlast
   1872c:	mov	x0, x21
   18730:	bl	16b30 <__sanitizer_cov_dump@@Base+0x2078>
   18734:	ands	w20, w0, #0xff
   18738:	b.ne	18754 <__sanitizer_set_report_fd@@Base+0x14a4>  // b.any
   1873c:	cbz	w22, 187a0 <__sanitizer_set_report_fd@@Base+0x14f0>
   18740:	mov	w0, w22
   18744:	ldp	x21, x22, [sp, #16]
   18748:	ldr	x30, [sp, #32]
   1874c:	ldp	x19, x20, [sp], #80
   18750:	ret
   18754:	ldr	x0, [sp, #56]
   18758:	cbz	x0, 18774 <__sanitizer_set_report_fd@@Base+0x14c4>
   1875c:	ldp	x22, x21, [x19, #16]
   18760:	stp	x0, xzr, [x19, #16]
   18764:	mov	x0, x19
   18768:	bl	18698 <__sanitizer_set_report_fd@@Base+0x13e8>
   1876c:	stp	x22, x21, [x19, #16]
   18770:	ldr	x0, [sp, #56]
   18774:	mov	w22, w20
   18778:	ldr	x1, [sp, #64]
   1877c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   18780:	mov	w0, w22
   18784:	ldp	x21, x22, [sp, #16]
   18788:	ldr	x30, [sp, #32]
   1878c:	ldp	x19, x20, [sp], #80
   18790:	ret
   18794:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   18798:	str	x0, [x20]
   1879c:	b	18710 <__sanitizer_set_report_fd@@Base+0x1460>
   187a0:	ldr	w2, [sp, #52]
   187a4:	mov	x1, x21
   187a8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   187ac:	add	x0, x0, #0x148
   187b0:	bl	1e5c0 <OnPrint@@Base+0x310>
   187b4:	mov	w0, w22
   187b8:	ldp	x21, x22, [sp, #16]
   187bc:	ldr	x30, [sp, #32]
   187c0:	ldp	x19, x20, [sp], #80
   187c4:	ret
   187c8:	cbz	x1, 187f4 <__sanitizer_set_report_fd@@Base+0x1544>
   187cc:	stp	x19, x20, [sp, #-32]!
   187d0:	mov	x19, x0
   187d4:	stp	x21, x30, [sp, #16]
   187d8:	ldp	x21, x20, [x0, #16]
   187dc:	stp	x1, xzr, [x0, #16]
   187e0:	bl	18698 <__sanitizer_set_report_fd@@Base+0x13e8>
   187e4:	stp	x21, x20, [x19, #16]
   187e8:	ldp	x21, x30, [sp, #16]
   187ec:	ldp	x19, x20, [sp], #32
   187f0:	ret
   187f4:	ret
   187f8:	ldr	w4, [x0, #8]
   187fc:	sxtw	x5, w4
   18800:	cmp	x5, #0xc7
   18804:	b.hi	1882c <__sanitizer_set_report_fd@@Base+0x157c>  // b.pmore
   18808:	mov	w5, #0x18                  	// #24
   1880c:	add	w7, w4, #0x1
   18810:	ldr	x6, [x0]
   18814:	smull	x4, w4, w5
   18818:	add	x5, x6, x4
   1881c:	str	x1, [x6, x4]
   18820:	stp	x3, x2, [x5, #8]
   18824:	str	w7, [x0, #8]
   18828:	ret
   1882c:	str	x30, [sp, #-16]!
   18830:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   18834:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   18838:	mov	x3, x5
   1883c:	add	x2, x2, #0x178
   18840:	add	x0, x0, #0xc0
   18844:	mov	x4, #0xc8                  	// #200
   18848:	mov	w1, #0x9e                  	// #158
   1884c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   18850:	stp	x19, x30, [sp, #-16]!
   18854:	mov	x19, x0
   18858:	adrp	x1, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1885c:	add	x0, x1, #0xb80
   18860:	mov	x1, #0x12c0                	// #4800
   18864:	str	wzr, [x19, #8]
   18868:	add	x0, x0, #0xa8
   1886c:	stp	xzr, xzr, [x19, #16]
   18870:	bl	10e80 <__sancov_default_options@@Base+0x288>
   18874:	str	x0, [x19]
   18878:	ldp	x19, x30, [sp], #16
   1887c:	ret
   18880:	cbz	x2, 188a8 <__sanitizer_set_report_fd@@Base+0x15f8>
   18884:	add	x3, x0, x2
   18888:	b	18898 <__sanitizer_set_report_fd@@Base+0x15e8>
   1888c:	add	x0, x0, #0x1
   18890:	cmp	x3, x0
   18894:	b.eq	188a8 <__sanitizer_set_report_fd@@Base+0x15f8>  // b.none
   18898:	ldrb	w2, [x0]
   1889c:	cmp	w2, w1
   188a0:	b.ne	1888c <__sanitizer_set_report_fd@@Base+0x15dc>  // b.any
   188a4:	ret
   188a8:	mov	x0, #0x0                   	// #0
   188ac:	ret
   188b0:	mov	x3, x0
   188b4:	cbz	x2, 188dc <__sanitizer_set_report_fd@@Base+0x162c>
   188b8:	add	x4, x0, x2
   188bc:	mov	x0, #0x0                   	// #0
   188c0:	ldrb	w2, [x3]
   188c4:	cmp	w2, w1
   188c8:	csel	x0, x0, x3, ne  // ne = any
   188cc:	add	x3, x3, #0x1
   188d0:	cmp	x4, x3
   188d4:	b.ne	188c0 <__sanitizer_set_report_fd@@Base+0x1610>  // b.any
   188d8:	ret
   188dc:	mov	x0, #0x0                   	// #0
   188e0:	ret
   188e4:	nop
   188e8:	cbz	x2, 1891c <__sanitizer_set_report_fd@@Base+0x166c>
   188ec:	mov	x3, #0x0                   	// #0
   188f0:	b	188fc <__sanitizer_set_report_fd@@Base+0x164c>
   188f4:	cmp	x2, x3
   188f8:	b.eq	1891c <__sanitizer_set_report_fd@@Base+0x166c>  // b.none
   188fc:	ldrb	w5, [x0, x3]
   18900:	ldrb	w4, [x1, x3]
   18904:	add	x3, x3, #0x1
   18908:	cmp	w5, w4
   1890c:	b.eq	188f4 <__sanitizer_set_report_fd@@Base+0x1644>  // b.none
   18910:	mov	w0, #0x1                   	// #1
   18914:	cneg	w0, w0, cc  // cc = lo, ul, last
   18918:	ret
   1891c:	mov	w0, #0x0                   	// #0
   18920:	ret
   18924:	nop
   18928:	cbz	x2, 18944 <__sanitizer_set_report_fd@@Base+0x1694>
   1892c:	mov	x3, #0x0                   	// #0
   18930:	ldrb	w4, [x1, x3]
   18934:	strb	w4, [x0, x3]
   18938:	add	x3, x3, #0x1
   1893c:	cmp	x2, x3
   18940:	b.ne	18930 <__sanitizer_set_report_fd@@Base+0x1680>  // b.any
   18944:	ret
   18948:	cmp	x0, x1
   1894c:	b.cs	18978 <__sanitizer_set_report_fd@@Base+0x16c8>  // b.hs, b.nlast
   18950:	cmp	x2, #0x0
   18954:	b.le	18974 <__sanitizer_set_report_fd@@Base+0x16c4>
   18958:	mov	x3, #0x0                   	// #0
   1895c:	nop
   18960:	ldrb	w4, [x1, x3]
   18964:	strb	w4, [x0, x3]
   18968:	add	x3, x3, #0x1
   1896c:	cmp	x2, x3
   18970:	b.ne	18960 <__sanitizer_set_report_fd@@Base+0x16b0>  // b.any
   18974:	ret
   18978:	cmp	x2, #0x0
   1897c:	ccmp	x0, x1, #0x0, gt
   18980:	b.ls	18974 <__sanitizer_set_report_fd@@Base+0x16c4>  // b.plast
   18984:	sub	x2, x2, #0x1
   18988:	ldrb	w3, [x1, x2]
   1898c:	strb	w3, [x0, x2]
   18990:	sub	x2, x2, #0x1
   18994:	cmn	x2, #0x1
   18998:	b.ne	18988 <__sanitizer_set_report_fd@@Base+0x16d8>  // b.any
   1899c:	ret
   189a0:	orr	x3, x0, x2
   189a4:	tst	x3, #0xf
   189a8:	b.eq	189d0 <__sanitizer_set_report_fd@@Base+0x1720>  // b.none
   189ac:	cbz	x2, 189cc <__sanitizer_set_report_fd@@Base+0x171c>
   189b0:	and	w3, w1, #0xff
   189b4:	add	x2, x0, x2
   189b8:	mov	x1, x0
   189bc:	nop
   189c0:	strb	w3, [x1], #1
   189c4:	cmp	x2, x1
   189c8:	b.ne	189c0 <__sanitizer_set_report_fd@@Base+0x1710>  // b.any
   189cc:	ret
   189d0:	sxtw	x3, w1
   189d4:	sbfiz	x1, x1, #8, #32
   189d8:	orr	x3, x3, x1
   189dc:	and	x2, x2, #0xfffffffffffffff8
   189e0:	add	x1, x0, x2
   189e4:	mov	x2, x0
   189e8:	orr	x3, x3, x3, lsl #16
   189ec:	cmp	x0, x1
   189f0:	orr	x3, x3, x3, lsl #32
   189f4:	b.cs	189cc <__sanitizer_set_report_fd@@Base+0x171c>  // b.hs, b.nlast
   189f8:	str	x3, [x2, #8]
   189fc:	str	x3, [x2], #16
   18a00:	cmp	x1, x2
   18a04:	b.hi	189f8 <__sanitizer_set_report_fd@@Base+0x1748>  // b.pmore
   18a08:	ret
   18a0c:	nop
   18a10:	ldrb	w4, [x0]
   18a14:	mov	x6, x0
   18a18:	cbz	w4, 18a5c <__sanitizer_set_report_fd@@Base+0x17ac>
   18a1c:	ldrb	w5, [x1]
   18a20:	mov	x0, #0x0                   	// #0
   18a24:	nop
   18a28:	cmp	w4, w5
   18a2c:	b.eq	18a48 <__sanitizer_set_report_fd@@Base+0x1798>  // b.none
   18a30:	mov	w2, w5
   18a34:	mov	x3, x1
   18a38:	cbz	w2, 18a4c <__sanitizer_set_report_fd@@Base+0x179c>
   18a3c:	ldrb	w2, [x3, #1]!
   18a40:	cmp	w4, w2
   18a44:	b.ne	18a38 <__sanitizer_set_report_fd@@Base+0x1788>  // b.any
   18a48:	ret
   18a4c:	add	x0, x0, #0x1
   18a50:	ldrb	w4, [x6, x0]
   18a54:	cbnz	w4, 18a28 <__sanitizer_set_report_fd@@Base+0x1778>
   18a58:	ret
   18a5c:	mov	x0, #0x0                   	// #0
   18a60:	ret
   18a64:	nop
   18a68:	stp	x19, x20, [sp, #-32]!
   18a6c:	mov	x20, x0
   18a70:	str	x30, [sp, #24]
   18a74:	ldrb	w0, [x0]
   18a78:	cbz	w0, 18adc <__sanitizer_set_report_fd@@Base+0x182c>
   18a7c:	mov	x19, #0x0                   	// #0
   18a80:	str	x21, [sp, #16]
   18a84:	nop
   18a88:	mov	x21, x19
   18a8c:	add	x19, x19, #0x1
   18a90:	ldrb	w0, [x20, x19]
   18a94:	cbnz	w0, 18a88 <__sanitizer_set_report_fd@@Base+0x17d8>
   18a98:	mov	x1, #0x0                   	// #0
   18a9c:	add	x0, x21, #0x2
   18aa0:	mov	x2, #0x0                   	// #0
   18aa4:	bl	11038 <__sancov_default_options@@Base+0x440>
   18aa8:	mov	x1, #0x0                   	// #0
   18aac:	nop
   18ab0:	ldrb	w3, [x20, x1]
   18ab4:	cmp	x1, x21
   18ab8:	strb	w3, [x0, x1]
   18abc:	add	x1, x1, #0x1
   18ac0:	b.ne	18ab0 <__sanitizer_set_report_fd@@Base+0x1800>  // b.any
   18ac4:	add	x19, x0, x19
   18ac8:	ldr	x21, [sp, #16]
   18acc:	strb	wzr, [x19]
   18ad0:	ldr	x30, [sp, #24]
   18ad4:	ldp	x19, x20, [sp], #32
   18ad8:	ret
   18adc:	mov	x2, #0x0                   	// #0
   18ae0:	mov	x1, #0x0                   	// #0
   18ae4:	mov	x0, #0x1                   	// #1
   18ae8:	bl	11038 <__sancov_default_options@@Base+0x440>
   18aec:	mov	x19, x0
   18af0:	strb	wzr, [x19]
   18af4:	ldr	x30, [sp, #24]
   18af8:	ldp	x19, x20, [sp], #32
   18afc:	ret
   18b00:	ldrb	w3, [x0]
   18b04:	mov	x2, #0x1                   	// #1
   18b08:	ldrb	w4, [x1]
   18b0c:	cmp	w4, w3
   18b10:	b.ne	18b30 <__sanitizer_set_report_fd@@Base+0x1880>  // b.any
   18b14:	nop
   18b18:	cbz	w3, 18b40 <__sanitizer_set_report_fd@@Base+0x1890>
   18b1c:	ldrb	w3, [x0, x2]
   18b20:	ldrb	w4, [x1, x2]
   18b24:	add	x2, x2, #0x1
   18b28:	cmp	w3, w4
   18b2c:	b.eq	18b18 <__sanitizer_set_report_fd@@Base+0x1868>  // b.none
   18b30:	cmp	w3, w4
   18b34:	mov	w0, #0x1                   	// #1
   18b38:	cneg	w0, w0, cc  // cc = lo, ul, last
   18b3c:	ret
   18b40:	mov	w0, #0x0                   	// #0
   18b44:	ret
   18b48:	cbz	x2, 18b80 <__sanitizer_set_report_fd@@Base+0x18d0>
   18b4c:	mov	x3, #0x0                   	// #0
   18b50:	b	18b60 <__sanitizer_set_report_fd@@Base+0x18b0>
   18b54:	cbz	w4, 18b80 <__sanitizer_set_report_fd@@Base+0x18d0>
   18b58:	cmp	x2, x3
   18b5c:	b.eq	18b80 <__sanitizer_set_report_fd@@Base+0x18d0>  // b.none
   18b60:	ldrb	w4, [x0, x3]
   18b64:	ldrb	w5, [x1, x3]
   18b68:	add	x3, x3, #0x1
   18b6c:	cmp	w4, w5
   18b70:	b.eq	18b54 <__sanitizer_set_report_fd@@Base+0x18a4>  // b.none
   18b74:	mov	w0, #0x1                   	// #1
   18b78:	cneg	w0, w0, cc  // cc = lo, ul, last
   18b7c:	ret
   18b80:	mov	w0, #0x0                   	// #0
   18b84:	ret
   18b88:	ldrb	w2, [x0]
   18b8c:	and	w3, w1, #0xff
   18b90:	cmp	w2, w1, uxtb
   18b94:	b.eq	18ba8 <__sanitizer_set_report_fd@@Base+0x18f8>  // b.none
   18b98:	cbz	w2, 18bac <__sanitizer_set_report_fd@@Base+0x18fc>
   18b9c:	ldrb	w2, [x0, #1]!
   18ba0:	cmp	w2, w3
   18ba4:	b.ne	18b98 <__sanitizer_set_report_fd@@Base+0x18e8>  // b.any
   18ba8:	ret
   18bac:	mov	x0, #0x0                   	// #0
   18bb0:	ret
   18bb4:	nop
   18bb8:	ldrb	w4, [x0]
   18bbc:	mov	x2, x0
   18bc0:	and	w3, w1, #0xff
   18bc4:	cmp	w4, w1, uxtb
   18bc8:	b.eq	18be0 <__sanitizer_set_report_fd@@Base+0x1930>  // b.none
   18bcc:	mov	w1, w4
   18bd0:	cbz	w1, 18be4 <__sanitizer_set_report_fd@@Base+0x1934>
   18bd4:	ldrb	w1, [x0, #1]!
   18bd8:	cmp	w1, w3
   18bdc:	b.ne	18bd0 <__sanitizer_set_report_fd@@Base+0x1920>  // b.any
   18be0:	ret
   18be4:	cbz	w4, 18c00 <__sanitizer_set_report_fd@@Base+0x1950>
   18be8:	add	x1, x2, #0x1
   18bec:	nop
   18bf0:	mov	x0, x1
   18bf4:	ldrb	w2, [x1], #1
   18bf8:	cbnz	w2, 18bf0 <__sanitizer_set_report_fd@@Base+0x1940>
   18bfc:	ret
   18c00:	mov	x0, x2
   18c04:	ret
   18c08:	ldrb	w3, [x0]
   18c0c:	mov	x2, x0
   18c10:	mov	x0, #0x0                   	// #0
   18c14:	cbz	w3, 18c28 <__sanitizer_set_report_fd@@Base+0x1978>
   18c18:	cmp	w3, w1
   18c1c:	csel	x0, x0, x2, ne  // ne = any
   18c20:	ldrb	w3, [x2, #1]!
   18c24:	cbnz	w3, 18c18 <__sanitizer_set_report_fd@@Base+0x1968>
   18c28:	ret
   18c2c:	nop
   18c30:	mov	x2, x0
   18c34:	ldrb	w0, [x0]
   18c38:	cbz	w0, 18c50 <__sanitizer_set_report_fd@@Base+0x19a0>
   18c3c:	mov	x0, #0x0                   	// #0
   18c40:	add	x0, x0, #0x1
   18c44:	ldrb	w1, [x2, x0]
   18c48:	cbnz	w1, 18c40 <__sanitizer_set_report_fd@@Base+0x1990>
   18c4c:	ret
   18c50:	mov	x0, #0x0                   	// #0
   18c54:	ret
   18c58:	mov	x7, x0
   18c5c:	ldrb	w0, [x1]
   18c60:	mov	x8, x2
   18c64:	mov	x6, #0x0                   	// #0
   18c68:	cbz	w0, 18c7c <__sanitizer_set_report_fd@@Base+0x19cc>
   18c6c:	nop
   18c70:	add	x6, x6, #0x1
   18c74:	ldrb	w3, [x1, x6]
   18c78:	cbnz	w3, 18c70 <__sanitizer_set_report_fd@@Base+0x19c0>
   18c7c:	cbz	x8, 18ce0 <__sanitizer_set_report_fd@@Base+0x1a30>
   18c80:	mov	x5, #0x0                   	// #0
   18c84:	b	18c94 <__sanitizer_set_report_fd@@Base+0x19e4>
   18c88:	add	x5, x5, #0x1
   18c8c:	cmp	x8, x5
   18c90:	b.eq	18ce0 <__sanitizer_set_report_fd@@Base+0x1a30>  // b.none
   18c94:	ldrb	w3, [x7, x5]
   18c98:	add	x0, x7, x5
   18c9c:	cbnz	w3, 18c88 <__sanitizer_set_report_fd@@Base+0x19d8>
   18ca0:	str	x30, [sp, #-16]!
   18ca4:	sub	x2, x8, x5
   18ca8:	cmp	x2, x6
   18cac:	b.hi	18ccc <__sanitizer_set_report_fd@@Base+0x1a1c>  // b.pmore
   18cb0:	sub	x2, x2, #0x1
   18cb4:	bl	18948 <__sanitizer_set_report_fd@@Base+0x1698>
   18cb8:	add	x7, x7, x8
   18cbc:	add	x0, x6, x5
   18cc0:	sturb	wzr, [x7, #-1]
   18cc4:	ldr	x30, [sp], #16
   18cc8:	ret
   18ccc:	add	x2, x6, #0x1
   18cd0:	bl	18948 <__sanitizer_set_report_fd@@Base+0x1698>
   18cd4:	add	x0, x6, x5
   18cd8:	ldr	x30, [sp], #16
   18cdc:	ret
   18ce0:	add	x0, x8, x6
   18ce4:	ret
   18ce8:	ldrb	w3, [x0]
   18cec:	mov	x4, #0x0                   	// #0
   18cf0:	cbz	w3, 18d50 <__sanitizer_set_report_fd@@Base+0x1aa0>
   18cf4:	nop
   18cf8:	add	x4, x4, #0x1
   18cfc:	add	x5, x0, x4
   18d00:	ldrb	w3, [x0, x4]
   18d04:	cbnz	w3, 18cf8 <__sanitizer_set_report_fd@@Base+0x1a48>
   18d08:	add	x6, x0, x4
   18d0c:	mov	x3, #0x0                   	// #0
   18d10:	cbnz	x2, 18d24 <__sanitizer_set_report_fd@@Base+0x1a74>
   18d14:	b	18d38 <__sanitizer_set_report_fd@@Base+0x1a88>
   18d18:	strb	w7, [x6]
   18d1c:	add	x6, x6, #0x1
   18d20:	b.eq	18d40 <__sanitizer_set_report_fd@@Base+0x1a90>  // b.none
   18d24:	ldrb	w7, [x1, x3]
   18d28:	add	x3, x3, #0x1
   18d2c:	mov	x5, x6
   18d30:	cmp	x2, x3
   18d34:	cbnz	w7, 18d18 <__sanitizer_set_report_fd@@Base+0x1a68>
   18d38:	strb	wzr, [x5]
   18d3c:	ret
   18d40:	add	x4, x2, x4
   18d44:	add	x5, x0, x4
   18d48:	strb	wzr, [x5]
   18d4c:	ret
   18d50:	mov	x5, x0
   18d54:	b	18d08 <__sanitizer_set_report_fd@@Base+0x1a58>
   18d58:	mov	x7, x0
   18d5c:	ldrb	w0, [x1]
   18d60:	str	x30, [sp, #-16]!
   18d64:	mov	x5, #0x0                   	// #0
   18d68:	cbz	w0, 18d7c <__sanitizer_set_report_fd@@Base+0x1acc>
   18d6c:	nop
   18d70:	add	x5, x5, #0x1
   18d74:	ldrb	w3, [x1, x5]
   18d78:	cbnz	w3, 18d70 <__sanitizer_set_report_fd@@Base+0x1ac0>
   18d7c:	cmp	x2, x5
   18d80:	b.hi	18db4 <__sanitizer_set_report_fd@@Base+0x1b04>  // b.pmore
   18d84:	cbnz	x2, 18d94 <__sanitizer_set_report_fd@@Base+0x1ae4>
   18d88:	mov	x0, x5
   18d8c:	ldr	x30, [sp], #16
   18d90:	ret
   18d94:	sub	x6, x2, #0x1
   18d98:	mov	x0, x7
   18d9c:	mov	x2, x6
   18da0:	bl	18948 <__sanitizer_set_report_fd@@Base+0x1698>
   18da4:	strb	wzr, [x7, x6]
   18da8:	mov	x0, x5
   18dac:	ldr	x30, [sp], #16
   18db0:	ret
   18db4:	mov	x0, x7
   18db8:	add	x2, x5, #0x1
   18dbc:	bl	18948 <__sanitizer_set_report_fd@@Base+0x1698>
   18dc0:	mov	x0, x5
   18dc4:	ldr	x30, [sp], #16
   18dc8:	ret
   18dcc:	nop
   18dd0:	str	x30, [sp, #-16]!
   18dd4:	mov	x5, x0
   18dd8:	cbz	x2, 18e04 <__sanitizer_set_report_fd@@Base+0x1b54>
   18ddc:	mov	x3, #0x0                   	// #0
   18de0:	b	18df4 <__sanitizer_set_report_fd@@Base+0x1b44>
   18de4:	strb	w4, [x5, x3]
   18de8:	add	x3, x3, #0x1
   18dec:	cmp	x2, x3
   18df0:	b.eq	18e18 <__sanitizer_set_report_fd@@Base+0x1b68>  // b.none
   18df4:	ldrb	w4, [x1, x3]
   18df8:	add	x0, x5, x3
   18dfc:	cbnz	w4, 18de4 <__sanitizer_set_report_fd@@Base+0x1b34>
   18e00:	sub	x2, x2, x3
   18e04:	mov	w1, #0x0                   	// #0
   18e08:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   18e0c:	mov	x0, x5
   18e10:	ldr	x30, [sp], #16
   18e14:	ret
   18e18:	add	x0, x5, x2
   18e1c:	mov	w1, #0x0                   	// #0
   18e20:	mov	x2, #0x0                   	// #0
   18e24:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   18e28:	mov	x0, x5
   18e2c:	ldr	x30, [sp], #16
   18e30:	ret
   18e34:	nop
   18e38:	mov	x3, x0
   18e3c:	mov	x0, #0x0                   	// #0
   18e40:	cbnz	x1, 18e54 <__sanitizer_set_report_fd@@Base+0x1ba4>
   18e44:	b	18e5c <__sanitizer_set_report_fd@@Base+0x1bac>
   18e48:	add	x0, x0, #0x1
   18e4c:	cmp	x1, x0
   18e50:	b.eq	18e5c <__sanitizer_set_report_fd@@Base+0x1bac>  // b.none
   18e54:	ldrb	w2, [x3, x0]
   18e58:	cbnz	w2, 18e48 <__sanitizer_set_report_fd@@Base+0x1b98>
   18e5c:	ret
   18e60:	mov	x8, x0
   18e64:	ldrb	w0, [x0]
   18e68:	mov	x2, #0x0                   	// #0
   18e6c:	cbz	w0, 18e7c <__sanitizer_set_report_fd@@Base+0x1bcc>
   18e70:	add	x2, x2, #0x1
   18e74:	ldrb	w3, [x8, x2]
   18e78:	cbnz	w3, 18e70 <__sanitizer_set_report_fd@@Base+0x1bc0>
   18e7c:	ldrb	w10, [x1]
   18e80:	cbz	w10, 18ef0 <__sanitizer_set_report_fd@@Base+0x1c40>
   18e84:	mov	x4, #0x0                   	// #0
   18e88:	mov	x5, x4
   18e8c:	add	x4, x4, #0x1
   18e90:	ldrb	w3, [x1, x4]
   18e94:	cbnz	w3, 18e88 <__sanitizer_set_report_fd@@Base+0x1bd8>
   18e98:	cmp	x4, x2
   18e9c:	b.hi	18ee8 <__sanitizer_set_report_fd@@Base+0x1c38>  // b.pmore
   18ea0:	sub	x4, x2, x4
   18ea4:	mov	x9, #0x0                   	// #0
   18ea8:	add	x0, x8, x9
   18eac:	mov	w7, w10
   18eb0:	mov	x2, #0x0                   	// #0
   18eb4:	b	18ec8 <__sanitizer_set_report_fd@@Base+0x1c18>
   18eb8:	cmp	x5, x2
   18ebc:	b.eq	18eec <__sanitizer_set_report_fd@@Base+0x1c3c>  // b.none
   18ec0:	ldrb	w7, [x1, x3]
   18ec4:	mov	x2, x3
   18ec8:	ldrb	w6, [x0, x2]
   18ecc:	add	x3, x2, #0x1
   18ed0:	cmp	w6, w7
   18ed4:	b.eq	18eb8 <__sanitizer_set_report_fd@@Base+0x1c08>  // b.none
   18ed8:	add	x9, x9, #0x1
   18edc:	cmp	x9, x4
   18ee0:	b.ls	18ea8 <__sanitizer_set_report_fd@@Base+0x1bf8>  // b.plast
   18ee4:	nop
   18ee8:	mov	x0, #0x0                   	// #0
   18eec:	ret
   18ef0:	mov	x0, x8
   18ef4:	ret
   18ef8:	cmp	w2, #0xa
   18efc:	b.ne	18ff0 <__sanitizer_set_report_fd@@Base+0x1d40>  // b.any
   18f00:	ldrb	w2, [x0]
   18f04:	cmp	w2, #0x20
   18f08:	b.eq	18fb0 <__sanitizer_set_report_fd@@Base+0x1d00>  // b.none
   18f0c:	sub	w3, w2, #0x9
   18f10:	and	w3, w3, #0xff
   18f14:	cmp	w3, #0x4
   18f18:	b.ls	18fb0 <__sanitizer_set_report_fd@@Base+0x1d00>  // b.plast
   18f1c:	cmp	w2, #0x2b
   18f20:	b.eq	18fdc <__sanitizer_set_report_fd@@Base+0x1d2c>  // b.none
   18f24:	cmp	w2, #0x2d
   18f28:	b.eq	18fb8 <__sanitizer_set_report_fd@@Base+0x1d08>  // b.none
   18f2c:	mov	w4, w2
   18f30:	mov	x5, x0
   18f34:	mov	w8, #0x1                   	// #1
   18f38:	sub	w2, w2, #0x30
   18f3c:	cmp	w2, #0x9
   18f40:	b.hi	19014 <__sanitizer_set_report_fd@@Base+0x1d64>  // b.pmore
   18f44:	mov	x7, #0x9999999999999999    	// #-7378697629483820647
   18f48:	mov	x3, #0x0                   	// #0
   18f4c:	movk	x7, #0x1999, lsl #48
   18f50:	mov	x6, #0xffffffffffffffff    	// #-1
   18f54:	nop
   18f58:	sub	w0, w4, #0x30
   18f5c:	add	x2, x3, x3, lsl #2
   18f60:	cmp	x3, x7
   18f64:	ldrb	w4, [x5, #1]!
   18f68:	sxtw	x0, w0
   18f6c:	lsl	x2, x2, #1
   18f70:	csel	x2, x2, x6, ls  // ls = plast
   18f74:	mvn	x3, x0
   18f78:	cmp	x3, x2
   18f7c:	add	x0, x0, x2
   18f80:	sub	w2, w4, #0x30
   18f84:	csel	x3, x0, x6, cs  // cs = hs, nlast
   18f88:	cmp	w2, #0x9
   18f8c:	b.ls	18f58 <__sanitizer_set_report_fd@@Base+0x1ca8>  // b.plast
   18f90:	cbz	x1, 18f98 <__sanitizer_set_report_fd@@Base+0x1ce8>
   18f94:	str	x5, [x1]
   18f98:	cmp	w8, #0x1
   18f9c:	b.ne	18fcc <__sanitizer_set_report_fd@@Base+0x1d1c>  // b.any
   18fa0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   18fa4:	cmp	x3, x0
   18fa8:	csel	x0, x3, x0, ls  // ls = plast
   18fac:	ret
   18fb0:	add	x0, x0, #0x1
   18fb4:	b	18f00 <__sanitizer_set_report_fd@@Base+0x1c50>
   18fb8:	ldrb	w2, [x0, #1]
   18fbc:	add	x5, x0, #0x1
   18fc0:	mov	w8, #0xffffffff            	// #-1
   18fc4:	mov	w4, w2
   18fc8:	b	18f38 <__sanitizer_set_report_fd@@Base+0x1c88>
   18fcc:	cmp	x3, #0x0
   18fd0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   18fd4:	csneg	x0, x0, x3, lt  // lt = tstop
   18fd8:	ret
   18fdc:	ldrb	w2, [x0, #1]
   18fe0:	add	x5, x0, #0x1
   18fe4:	mov	w8, #0x1                   	// #1
   18fe8:	mov	w4, w2
   18fec:	b	18f38 <__sanitizer_set_report_fd@@Base+0x1c88>
   18ff0:	str	x30, [sp, #-16]!
   18ff4:	sxtw	x3, w2
   18ff8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   18ffc:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19000:	add	x0, x0, #0x1b0
   19004:	add	x2, x2, #0x198
   19008:	mov	x4, #0xa                   	// #10
   1900c:	mov	w1, #0xe5                  	// #229
   19010:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   19014:	mov	x5, x0
   19018:	mov	x3, #0x0                   	// #0
   1901c:	cbnz	x1, 18f94 <__sanitizer_set_report_fd@@Base+0x1ce4>
   19020:	mov	x0, #0x0                   	// #0
   19024:	ret
   19028:	mov	w2, #0xa                   	// #10
   1902c:	mov	x1, #0x0                   	// #0
   19030:	b	18ef8 <__sanitizer_set_report_fd@@Base+0x1c48>
   19034:	nop
   19038:	mov	x4, #0x10000000000         	// #1099511627776
   1903c:	cmp	x1, x4
   19040:	b.hi	190c8 <__sanitizer_set_report_fd@@Base+0x1e18>  // b.pmore
   19044:	add	x5, x0, x1
   19048:	add	x2, x0, #0x7
   1904c:	cmp	x0, x5
   19050:	and	x2, x2, #0xfffffffffffffff8
   19054:	ccmp	x0, x2, #0x2, cc  // cc = lo, ul, last
   19058:	and	x4, x5, #0xfffffffffffffff8
   1905c:	mov	x3, x0
   19060:	mov	x1, #0x0                   	// #0
   19064:	b.cs	1907c <__sanitizer_set_report_fd@@Base+0x1dcc>  // b.hs, b.nlast
   19068:	ldrb	w6, [x3], #1
   1906c:	cmp	x2, x3
   19070:	orr	x1, x1, x6
   19074:	ccmp	x5, x3, #0x0, hi  // hi = pmore
   19078:	b.hi	19068 <__sanitizer_set_report_fd@@Base+0x1db8>  // b.pmore
   1907c:	cmp	x2, x4
   19080:	b.cs	19098 <__sanitizer_set_report_fd@@Base+0x1de8>  // b.hs, b.nlast
   19084:	nop
   19088:	ldr	x3, [x2], #8
   1908c:	orr	x1, x1, x3
   19090:	cmp	x4, x2
   19094:	b.hi	19088 <__sanitizer_set_report_fd@@Base+0x1dd8>  // b.pmore
   19098:	cmp	x0, x4
   1909c:	b.ls	190b4 <__sanitizer_set_report_fd@@Base+0x1e04>  // b.plast
   190a0:	cmp	x1, #0x0
   190a4:	cset	w0, eq  // eq = none
   190a8:	ret
   190ac:	ldrb	w0, [x4], #1
   190b0:	orr	x1, x1, x0
   190b4:	cmp	x5, x4
   190b8:	b.hi	190ac <__sanitizer_set_report_fd@@Base+0x1dfc>  // b.pmore
   190bc:	cmp	x1, #0x0
   190c0:	cset	w0, eq  // eq = none
   190c4:	ret
   190c8:	str	x30, [sp, #-16]!
   190cc:	mov	x3, x1
   190d0:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   190d4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   190d8:	add	x2, x2, #0x1f0
   190dc:	add	x0, x0, #0x1b0
   190e0:	mov	w1, #0x104                 	// #260
   190e4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   190e8:	mov	x1, #0x4810                	// #18448
   190ec:	add	x0, x0, x1
   190f0:	b	19d10 <__sanitizer_set_report_fd@@Base+0x2a60>
   190f4:	nop
   190f8:	stp	x19, x20, [sp, #-48]!
   190fc:	mov	x20, x0
   19100:	stp	x21, x22, [sp, #16]
   19104:	mov	x21, x1
   19108:	mov	x1, #0x4810                	// #18448
   1910c:	add	x22, x0, x1
   19110:	str	x30, [sp, #32]
   19114:	mov	x0, x22
   19118:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   1911c:	ldr	x19, [x20, #18536]
   19120:	cmp	x19, #0x3ff
   19124:	b.hi	19168 <__sanitizer_set_report_fd@@Base+0x1eb8>  // b.pmore
   19128:	add	x0, x19, #0x1
   1912c:	str	x0, [x20, #18536]
   19130:	mov	x0, x21
   19134:	bl	18a68 <__sanitizer_set_report_fd@@Base+0x17b8>
   19138:	mov	x3, x0
   1913c:	add	x1, x20, x19, lsl #5
   19140:	mov	x0, x22
   19144:	add	x2, x1, #0x4, lsl #12
   19148:	ldp	x21, x22, [sp, #16]
   1914c:	ldr	x30, [sp, #32]
   19150:	str	x3, [x1, #18544]
   19154:	str	xzr, [x1, #18552]
   19158:	str	xzr, [x1, #18560]
   1915c:	strb	wzr, [x2, #2184]
   19160:	ldp	x19, x20, [sp], #48
   19164:	b	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   19168:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1916c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19170:	add	x0, x0, #0x210
   19174:	mov	x2, #0x400                 	// #1024
   19178:	ldr	x1, [x1, #4008]
   1917c:	ldr	x1, [x1]
   19180:	bl	1e648 <OnPrint@@Base+0x398>
   19184:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   19188:	stp	x19, x20, [sp, #-160]!
   1918c:	mov	x3, #0x4810                	// #18448
   19190:	mov	x20, x0
   19194:	stp	x21, x22, [sp, #16]
   19198:	adrp	x21, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1919c:	add	x0, x0, x3
   191a0:	mov	x19, x1
   191a4:	stp	x23, x24, [sp, #32]
   191a8:	stp	x25, x26, [sp, #48]
   191ac:	str	x30, [sp, #80]
   191b0:	str	x0, [sp, #112]
   191b4:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   191b8:	ldr	x22, [x21, #4000]
   191bc:	ldr	x0, [x22]
   191c0:	cbz	x0, 1946c <__sanitizer_set_report_fd@@Base+0x21bc>
   191c4:	sub	x1, x0, #0x1
   191c8:	tst	x1, x0
   191cc:	b.ne	1950c <__sanitizer_set_report_fd@@Base+0x225c>  // b.any
   191d0:	add	x25, x0, #0xfff
   191d4:	neg	x0, x0
   191d8:	and	x23, x25, x0
   191dc:	mov	w2, #0x0                   	// #0
   191e0:	mov	x0, x23
   191e4:	adrp	x22, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   191e8:	add	x1, x22, #0x258
   191ec:	str	x23, [sp, #120]
   191f0:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   191f4:	mov	x24, x0
   191f8:	mov	x2, #0x0                   	// #0
   191fc:	mov	x1, #0x0                   	// #0
   19200:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   19204:	mov	x1, #0x0                   	// #0
   19208:	mov	x0, #0x0                   	// #0
   1920c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   19210:	cmp	x23, #0xfff
   19214:	b.ls	19478 <__sanitizer_set_report_fd@@Base+0x21c8>  // b.plast
   19218:	mov	x0, x24
   1921c:	mov	x2, #0x1000                	// #4096
   19220:	mov	w1, #0x0                   	// #0
   19224:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   19228:	strb	wzr, [x24]
   1922c:	cbz	x19, 19250 <__sanitizer_set_report_fd@@Base+0x1fa0>
   19230:	mov	x1, x24
   19234:	mov	x0, x19
   19238:	mov	x2, #0xfff                 	// #4095
   1923c:	bl	19988 <__sanitizer_set_report_fd@@Base+0x26d8>
   19240:	cbz	x0, 19250 <__sanitizer_set_report_fd@@Base+0x1fa0>
   19244:	ldrb	w0, [x24]
   19248:	cbnz	w0, 194d4 <__sanitizer_set_report_fd@@Base+0x2224>
   1924c:	nop
   19250:	add	x0, sp, #0x80
   19254:	strb	wzr, [sp, #152]
   19258:	bl	1b928 <__sanitizer_set_report_fd@@Base+0x4678>
   1925c:	ldr	x0, [x20, #18536]
   19260:	cbz	x0, 19374 <__sanitizer_set_report_fd@@Base+0x20c4>
   19264:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   19268:	mov	x0, #0x4870                	// #18544
   1926c:	adrp	x26, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19270:	add	x19, x20, x0
   19274:	ldr	x22, [x22, #3680]
   19278:	add	x0, x26, #0x298
   1927c:	stp	x27, x28, [sp, #64]
   19280:	stp	x0, xzr, [sp, #96]
   19284:	ldr	x21, [sp, #144]
   19288:	ldr	x5, [sp, #128]
   1928c:	add	x21, x21, x21, lsl #3
   19290:	add	x21, x5, x21, lsl #3
   19294:	cmp	x5, x21
   19298:	b.eq	1955c <__sanitizer_set_report_fd@@Base+0x22ac>  // b.none
   1929c:	mov	x28, x5
   192a0:	mov	w27, #0x0                   	// #0
   192a4:	mov	w23, #0x1                   	// #1
   192a8:	ldr	x26, [x28, #56]
   192ac:	cbz	x26, 19334 <__sanitizer_set_report_fd@@Base+0x2084>
   192b0:	ldrb	w25, [x26, #24]
   192b4:	cbz	w25, 19418 <__sanitizer_set_report_fd@@Base+0x2168>
   192b8:	ldr	x0, [x19]
   192bc:	ldr	x1, [x28]
   192c0:	bl	13a80 <__sancov_default_options@@Base+0x2e88>
   192c4:	tst	w0, #0xff
   192c8:	b.ne	192e0 <__sanitizer_set_report_fd@@Base+0x2030>  // b.any
   192cc:	ldr	x0, [x19, #16]
   192d0:	cbz	x0, 19418 <__sanitizer_set_report_fd@@Base+0x2168>
   192d4:	ldr	x1, [x28]
   192d8:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   192dc:	cbnz	w0, 19418 <__sanitizer_set_report_fd@@Base+0x2168>
   192e0:	cbnz	w27, 19670 <__sanitizer_set_report_fd@@Base+0x23c0>
   192e4:	ldrb	w27, [x19, #24]
   192e8:	cbnz	w27, 19418 <__sanitizer_set_report_fd@@Base+0x2168>
   192ec:	ldr	w0, [x22]
   192f0:	cbnz	w0, 19424 <__sanitizer_set_report_fd@@Base+0x2174>
   192f4:	strb	w23, [x19, #24]
   192f8:	ldr	x0, [x28]
   192fc:	bl	18a68 <__sanitizer_set_report_fd@@Base+0x17b8>
   19300:	ldr	x3, [x20]
   19304:	str	x0, [x19, #8]
   19308:	cmp	x3, #0x7f
   1930c:	b.hi	19450 <__sanitizer_set_report_fd@@Base+0x21a0>  // b.pmore
   19310:	add	x0, x20, x3, lsl #4
   19314:	add	x3, x3, #0x1
   19318:	ldr	x1, [x26, #8]
   1931c:	str	x1, [x0, #8]
   19320:	ldr	x1, [x26, #16]
   19324:	str	x1, [x0, #16]
   19328:	dmb	ish
   1932c:	str	x3, [x20]
   19330:	mov	w27, w25
   19334:	add	x28, x28, #0x48
   19338:	cmp	x21, x28
   1933c:	b.ne	192a8 <__sanitizer_set_report_fd@@Base+0x1ff8>  // b.any
   19340:	ldrb	w0, [x19, #24]
   19344:	eor	w0, w0, #0x1
   19348:	orr	w2, w27, w0
   1934c:	tst	w2, #0xff
   19350:	b.eq	196a0 <__sanitizer_set_report_fd@@Base+0x23f0>  // b.none
   19354:	ldr	x1, [sp, #104]
   19358:	add	x19, x19, #0x20
   1935c:	ldr	x0, [x20, #18536]
   19360:	add	x1, x1, #0x1
   19364:	str	x1, [sp, #104]
   19368:	cmp	x0, x1
   1936c:	b.hi	19284 <__sanitizer_set_report_fd@@Base+0x1fd4>  // b.pmore
   19370:	ldp	x27, x28, [sp, #64]
   19374:	add	x1, x20, #0xc, lsl #12
   19378:	ldr	x0, [sp, #144]
   1937c:	ldrb	w1, [x1, #2160]
   19380:	ldr	x19, [sp, #128]
   19384:	add	x0, x0, x0, lsl #3
   19388:	add	x22, x19, x0, lsl #3
   1938c:	cbz	w1, 193d0 <__sanitizer_set_report_fd@@Base+0x2120>
   19390:	mov	x21, x19
   19394:	cmp	x22, x19
   19398:	b.eq	193ec <__sanitizer_set_report_fd@@Base+0x213c>  // b.none
   1939c:	adrp	x23, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   193a0:	adrp	x26, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   193a4:	add	x26, x26, #0x3c8
   193a8:	ldr	x23, [x23, #3680]
   193ac:	ldrb	w0, [x21, #44]
   193b0:	cbnz	w0, 19564 <__sanitizer_set_report_fd@@Base+0x22b4>
   193b4:	add	x21, x21, #0x48
   193b8:	cmp	x22, x21
   193bc:	b.ne	193ac <__sanitizer_set_report_fd@@Base+0x20fc>  // b.any
   193c0:	ldr	x0, [sp, #144]
   193c4:	ldr	x19, [sp, #128]
   193c8:	add	x0, x0, x0, lsl #3
   193cc:	add	x22, x19, x0, lsl #3
   193d0:	cmp	x19, x22
   193d4:	b.eq	193ec <__sanitizer_set_report_fd@@Base+0x213c>  // b.none
   193d8:	mov	x0, x19
   193dc:	add	x19, x19, #0x48
   193e0:	bl	137b8 <__sancov_default_options@@Base+0x2bc0>
   193e4:	cmp	x22, x19
   193e8:	b.ne	193d8 <__sanitizer_set_report_fd@@Base+0x2128>  // b.any
   193ec:	ldr	x1, [sp, #120]
   193f0:	mov	x0, x24
   193f4:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   193f8:	ldr	x0, [sp, #112]
   193fc:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   19400:	ldp	x21, x22, [sp, #16]
   19404:	ldp	x23, x24, [sp, #32]
   19408:	ldp	x25, x26, [sp, #48]
   1940c:	ldr	x30, [sp, #80]
   19410:	ldp	x19, x20, [sp], #160
   19414:	ret
   19418:	ldr	x26, [x26]
   1941c:	cbnz	x26, 192b0 <__sanitizer_set_report_fd@@Base+0x2000>
   19420:	b	19334 <__sanitizer_set_report_fd@@Base+0x2084>
   19424:	ldr	x1, [x19]
   19428:	ldr	x2, [x28]
   1942c:	ldr	x0, [sp, #96]
   19430:	bl	1e648 <OnPrint@@Base+0x398>
   19434:	strb	w23, [x19, #24]
   19438:	ldr	x0, [x28]
   1943c:	bl	18a68 <__sanitizer_set_report_fd@@Base+0x17b8>
   19440:	ldr	x3, [x20]
   19444:	str	x0, [x19, #8]
   19448:	cmp	x3, #0x7f
   1944c:	b.ls	19310 <__sanitizer_set_report_fd@@Base+0x2060>  // b.plast
   19450:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19454:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19458:	add	x2, x2, #0x2d8
   1945c:	add	x0, x0, #0x328
   19460:	mov	x4, #0x80                  	// #128
   19464:	mov	w1, #0x52                  	// #82
   19468:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1946c:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   19470:	str	x0, [x22]
   19474:	b	191c4 <__sanitizer_set_report_fd@@Base+0x1f14>
   19478:	ldr	x21, [x21, #4000]
   1947c:	ldr	x0, [x21]
   19480:	cbz	x0, 19550 <__sanitizer_set_report_fd@@Base+0x22a0>
   19484:	sub	x1, x0, #0x1
   19488:	tst	x1, x0
   1948c:	b.ne	1950c <__sanitizer_set_report_fd@@Base+0x225c>  // b.any
   19490:	add	x21, x0, #0xfff
   19494:	neg	x0, x0
   19498:	and	x21, x21, x0
   1949c:	add	x1, x22, #0x258
   194a0:	mov	x0, x21
   194a4:	mov	w2, #0x0                   	// #0
   194a8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   194ac:	mov	x22, x0
   194b0:	mov	x1, x24
   194b4:	mov	x2, #0x0                   	// #0
   194b8:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   194bc:	ldr	x1, [sp, #120]
   194c0:	mov	x0, x24
   194c4:	mov	x24, x22
   194c8:	str	x21, [sp, #120]
   194cc:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   194d0:	b	19218 <__sanitizer_set_report_fd@@Base+0x1f68>
   194d4:	ldr	x1, [x20, #18536]
   194d8:	cbz	x1, 19250 <__sanitizer_set_report_fd@@Base+0x1fa0>
   194dc:	mov	x2, #0x4870                	// #18544
   194e0:	add	x21, x20, x2
   194e4:	mov	x22, #0x0                   	// #0
   194e8:	ldrb	w0, [x21, #24]
   194ec:	cbnz	w0, 194f8 <__sanitizer_set_report_fd@@Base+0x2248>
   194f0:	ldr	x0, [x21, #16]
   194f4:	cbz	x0, 19520 <__sanitizer_set_report_fd@@Base+0x2270>
   194f8:	add	x22, x22, #0x1
   194fc:	add	x21, x21, #0x20
   19500:	cmp	x1, x22
   19504:	b.hi	194e8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.pmore
   19508:	b	19250 <__sanitizer_set_report_fd@@Base+0x1fa0>
   1950c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   19510:	add	x0, x0, #0x240
   19514:	stp	x27, x28, [sp, #64]
   19518:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1951c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   19520:	ldr	x0, [x21]
   19524:	mov	x1, x19
   19528:	bl	13a80 <__sancov_default_options@@Base+0x2e88>
   1952c:	tst	w0, #0xff
   19530:	b.ne	1953c <__sanitizer_set_report_fd@@Base+0x228c>  // b.any
   19534:	ldr	x1, [x20, #18536]
   19538:	b	194f8 <__sanitizer_set_report_fd@@Base+0x2248>
   1953c:	mov	x0, x24
   19540:	bl	18a68 <__sanitizer_set_report_fd@@Base+0x17b8>
   19544:	str	x0, [x21, #16]
   19548:	ldr	x1, [x20, #18536]
   1954c:	b	194f8 <__sanitizer_set_report_fd@@Base+0x2248>
   19550:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   19554:	str	x0, [x21]
   19558:	b	19484 <__sanitizer_set_report_fd@@Base+0x21d4>
   1955c:	mov	w27, #0x0                   	// #0
   19560:	b	19340 <__sanitizer_set_report_fd@@Base+0x2090>
   19564:	ldr	x19, [x21, #56]
   19568:	cbz	x19, 193b4 <__sanitizer_set_report_fd@@Base+0x2104>
   1956c:	ldrb	w1, [x19, #24]
   19570:	cbz	w1, 1961c <__sanitizer_set_report_fd@@Base+0x236c>
   19574:	ldr	x4, [x19, #8]
   19578:	ldr	x6, [x20, #2056]
   1957c:	dmb	ish
   19580:	add	x5, x20, #0x810
   19584:	mov	x2, #0x0                   	// #0
   19588:	mov	x1, x5
   1958c:	cbz	x6, 195e8 <__sanitizer_set_report_fd@@Base+0x2338>
   19590:	ldr	x3, [x1]
   19594:	cmp	x4, x3
   19598:	b.cc	19628 <__sanitizer_set_report_fd@@Base+0x2378>  // b.lo, b.ul, b.last
   1959c:	ldr	x3, [x1, #8]
   195a0:	cmp	x4, x3
   195a4:	b.cs	19628 <__sanitizer_set_report_fd@@Base+0x2378>  // b.hs, b.nlast
   195a8:	ldr	x2, [x19, #16]
   195ac:	sub	x2, x2, #0x1
   195b0:	ldr	x0, [x20, #2056]
   195b4:	dmb	ish
   195b8:	cbz	x0, 195e8 <__sanitizer_set_report_fd@@Base+0x2338>
   195bc:	mov	x1, #0x0                   	// #0
   195c0:	ldr	x3, [x5]
   195c4:	cmp	x2, x3
   195c8:	b.cc	195d8 <__sanitizer_set_report_fd@@Base+0x2328>  // b.lo, b.ul, b.last
   195cc:	ldr	x3, [x5, #8]
   195d0:	cmp	x2, x3
   195d4:	b.cc	1961c <__sanitizer_set_report_fd@@Base+0x236c>  // b.lo, b.ul, b.last
   195d8:	add	x1, x1, #0x1
   195dc:	add	x5, x5, #0x10
   195e0:	cmp	x1, x0
   195e4:	b.ne	195c0 <__sanitizer_set_report_fd@@Base+0x2310>  // b.any
   195e8:	ldr	w0, [x23]
   195ec:	cbnz	w0, 1963c <__sanitizer_set_report_fd@@Base+0x238c>
   195f0:	ldr	x3, [x20, #2056]
   195f4:	cmp	x3, #0x3ff
   195f8:	b.hi	19650 <__sanitizer_set_report_fd@@Base+0x23a0>  // b.pmore
   195fc:	add	x1, x20, x3, lsl #4
   19600:	add	x3, x3, #0x1
   19604:	ldr	x0, [x19, #8]
   19608:	str	x0, [x1, #2064]
   1960c:	ldr	x0, [x19, #16]
   19610:	str	x0, [x1, #2072]
   19614:	dmb	ish
   19618:	str	x3, [x20, #2056]
   1961c:	ldr	x19, [x19]
   19620:	cbnz	x19, 1956c <__sanitizer_set_report_fd@@Base+0x22bc>
   19624:	b	193b4 <__sanitizer_set_report_fd@@Base+0x2104>
   19628:	add	x2, x2, #0x1
   1962c:	add	x1, x1, #0x10
   19630:	cmp	x2, x6
   19634:	b.ne	19590 <__sanitizer_set_report_fd@@Base+0x22e0>  // b.any
   19638:	b	195e8 <__sanitizer_set_report_fd@@Base+0x2338>
   1963c:	ldp	x1, x2, [x19, #8]
   19640:	mov	x0, x26
   19644:	ldr	x3, [x21]
   19648:	bl	1e648 <OnPrint@@Base+0x398>
   1964c:	b	195f0 <__sanitizer_set_report_fd@@Base+0x2340>
   19650:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19654:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19658:	add	x2, x2, #0x400
   1965c:	add	x0, x0, #0x328
   19660:	mov	x4, #0x400                 	// #1024
   19664:	mov	w1, #0x6f                  	// #111
   19668:	stp	x27, x28, [sp, #64]
   1966c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   19670:	ldr	x0, [sp, #104]
   19674:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   19678:	ldr	x4, [x28]
   1967c:	ldr	x1, [x1, #4008]
   19680:	add	x20, x20, x0, lsl #5
   19684:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19688:	add	x0, x0, #0x240
   1968c:	ldr	x1, [x1]
   19690:	ldr	x2, [x20, #18544]
   19694:	ldr	x3, [x20, #18552]
   19698:	bl	1e648 <OnPrint@@Base+0x398>
   1969c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   196a0:	ldr	x0, [sp, #104]
   196a4:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   196a8:	ldr	x1, [x1, #4008]
   196ac:	add	x20, x20, x0, lsl #5
   196b0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   196b4:	add	x0, x0, #0x370
   196b8:	ldr	x1, [x1]
   196bc:	ldr	x3, [x20, #18544]
   196c0:	ldr	x2, [x20, #18552]
   196c4:	bl	1e648 <OnPrint@@Base+0x398>
   196c8:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   196cc:	nop
   196d0:	mov	x1, #0x0                   	// #0
   196d4:	b	19188 <__sanitizer_set_report_fd@@Base+0x1ed8>
   196d8:	stp	x19, x20, [sp, #-64]!
   196dc:	mov	x19, x1
   196e0:	mov	x20, x0
   196e4:	mov	w2, #0x0                   	// #0
   196e8:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   196ec:	mov	x0, #0x3e80                	// #16000
   196f0:	add	x1, x1, #0x460
   196f4:	str	x30, [sp, #16]
   196f8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   196fc:	str	x0, [x19]
   19700:	add	x3, sp, #0x38
   19704:	add	x2, sp, #0x30
   19708:	add	x1, sp, #0x28
   1970c:	mov	x0, x20
   19710:	mov	x5, #0x0                   	// #0
   19714:	mov	x4, #0x100000              	// #1048576
   19718:	bl	16b30 <__sanitizer_cov_dump@@Base+0x2078>
   1971c:	tst	w0, #0xff
   19720:	b.eq	197c0 <__sanitizer_set_report_fd@@Base+0x2510>  // b.none
   19724:	ldr	x4, [x19]
   19728:	mov	x0, #0x1                   	// #1
   1972c:	ldr	x1, [sp, #40]
   19730:	mov	w2, w0
   19734:	str	x1, [x4]
   19738:	ldr	x1, [sp, #40]
   1973c:	nop
   19740:	ldrb	w3, [x1, x0]
   19744:	add	x0, x0, #0x1
   19748:	cbnz	w3, 19740 <__sanitizer_set_report_fd@@Base+0x2490>
   1974c:	add	x5, x1, x0
   19750:	ldrb	w1, [x1, x0]
   19754:	sxtw	x3, w2
   19758:	add	x6, x4, w2, sxtw #3
   1975c:	cbz	w1, 19794 <__sanitizer_set_report_fd@@Base+0x24e4>
   19760:	str	x5, [x4, x3, lsl #3]
   19764:	cmp	w2, #0x7cf
   19768:	b.gt	197a4 <__sanitizer_set_report_fd@@Base+0x24f4>
   1976c:	ldr	x1, [sp, #40]
   19770:	add	w2, w2, #0x1
   19774:	ldrb	w3, [x1, x0]
   19778:	add	x0, x0, #0x1
   1977c:	cbnz	w3, 19740 <__sanitizer_set_report_fd@@Base+0x2490>
   19780:	add	x5, x1, x0
   19784:	ldrb	w1, [x1, x0]
   19788:	sxtw	x3, w2
   1978c:	add	x6, x4, w2, sxtw #3
   19790:	cbnz	w1, 19760 <__sanitizer_set_report_fd@@Base+0x24b0>
   19794:	str	xzr, [x6]
   19798:	ldr	x30, [sp, #16]
   1979c:	ldp	x19, x20, [sp], #64
   197a0:	ret
   197a4:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   197a8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   197ac:	add	x2, x2, #0x478
   197b0:	add	x0, x0, #0x498
   197b4:	mov	x4, #0x7cf                 	// #1999
   197b8:	mov	w1, #0x23f                 	// #575
   197bc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   197c0:	ldr	x0, [x19]
   197c4:	ldr	x30, [sp, #16]
   197c8:	str	xzr, [x0]
   197cc:	ldp	x19, x20, [sp], #64
   197d0:	ret
   197d4:	nop
   197d8:	mov	x2, x0
   197dc:	mov	w0, #0x0                   	// #0
   197e0:	cmn	x2, #0x1, lsl #12
   197e4:	b.hi	197ec <__sanitizer_set_report_fd@@Base+0x253c>  // b.pmore
   197e8:	ret
   197ec:	mov	w0, #0x1                   	// #1
   197f0:	cbz	x1, 197e8 <__sanitizer_set_report_fd@@Base+0x2538>
   197f4:	neg	w2, w2
   197f8:	str	w2, [x1]
   197fc:	ret
   19800:	mov	x8, #0xde                  	// #222
   19804:	sxtw	x2, w2
   19808:	sxtw	x3, w3
   1980c:	sxtw	x4, w4
   19810:	svc	#0x0
   19814:	ret
   19818:	mov	x8, #0xd7                  	// #215
   1981c:	svc	#0x0
   19820:	ret
   19824:	nop
   19828:	mov	x8, #0xe2                  	// #226
   1982c:	sxtw	x2, w2
   19830:	svc	#0x0
   19834:	ret
   19838:	mov	x8, #0x39                  	// #57
   1983c:	sxtw	x0, w0
   19840:	svc	#0x0
   19844:	ret
   19848:	sxtw	x2, w1
   1984c:	mov	x8, #0x38                  	// #56
   19850:	mov	x1, x0
   19854:	mov	x0, #0xffffffffffffff9c    	// #-100
   19858:	svc	#0x0
   1985c:	ret
   19860:	mov	w4, w1
   19864:	mov	w3, w2
   19868:	mov	x1, x0
   1986c:	mov	x8, #0x38                  	// #56
   19870:	sxtw	x2, w4
   19874:	mov	x0, #0xffffffffffffff9c    	// #-100
   19878:	svc	#0x0
   1987c:	ret
   19880:	sxtw	x3, w0
   19884:	mov	x0, x3
   19888:	mov	x8, #0x3f                  	// #63
   1988c:	svc	#0x0
   19890:	cmn	x0, #0x1, lsl #12
   19894:	b.hi	1989c <__sanitizer_set_report_fd@@Base+0x25ec>  // b.pmore
   19898:	ret
   1989c:	cmn	w0, #0x4
   198a0:	b.eq	19884 <__sanitizer_set_report_fd@@Base+0x25d4>  // b.none
   198a4:	ret
   198a8:	sxtw	x3, w0
   198ac:	mov	x0, x3
   198b0:	mov	x8, #0x40                  	// #64
   198b4:	svc	#0x0
   198b8:	cmn	x0, #0x1, lsl #12
   198bc:	b.hi	198c4 <__sanitizer_set_report_fd@@Base+0x2614>  // b.pmore
   198c0:	ret
   198c4:	cmn	w0, #0x4
   198c8:	b.eq	198ac <__sanitizer_set_report_fd@@Base+0x25fc>  // b.none
   198cc:	ret
   198d0:	sxtw	x2, w0
   198d4:	mov	x0, x2
   198d8:	mov	x8, #0x2e                  	// #46
   198dc:	svc	#0x0
   198e0:	cmn	x0, #0x1, lsl #12
   198e4:	b.hi	198ec <__sanitizer_set_report_fd@@Base+0x263c>  // b.pmore
   198e8:	ret
   198ec:	cmn	w0, #0x4
   198f0:	b.eq	198d4 <__sanitizer_set_report_fd@@Base+0x2624>  // b.none
   198f4:	ret
   198f8:	mov	x2, x1
   198fc:	mov	x8, #0x4f                  	// #79
   19900:	mov	x1, x0
   19904:	mov	x3, #0x0                   	// #0
   19908:	mov	x0, #0xffffffffffffff9c    	// #-100
   1990c:	svc	#0x0
   19910:	ret
   19914:	nop
   19918:	mov	x2, x1
   1991c:	mov	x8, #0x4f                  	// #79
   19920:	mov	x1, x0
   19924:	mov	x3, #0x100                 	// #256
   19928:	mov	x0, #0xffffffffffffff9c    	// #-100
   1992c:	svc	#0x0
   19930:	ret
   19934:	nop
   19938:	mov	x8, #0x50                  	// #80
   1993c:	sxtw	x0, w0
   19940:	svc	#0x0
   19944:	ret
   19948:	sub	sp, sp, #0x80
   1994c:	mov	x8, #0x50                  	// #80
   19950:	mov	x1, sp
   19954:	sxtw	x0, w0
   19958:	svc	#0x0
   1995c:	ldr	x1, [sp, #48]
   19960:	cmp	x0, #0x0
   19964:	add	sp, sp, #0x80
   19968:	csinv	x0, x1, xzr, eq  // eq = none
   1996c:	ret
   19970:	mov	x8, #0x18                  	// #24
   19974:	mov	x2, #0x0                   	// #0
   19978:	sxtw	x0, w0
   1997c:	sxtw	x1, w1
   19980:	svc	#0x0
   19984:	ret
   19988:	mov	x4, x1
   1998c:	mov	x3, x2
   19990:	mov	x1, x0
   19994:	mov	x2, x4
   19998:	mov	x8, #0x4e                  	// #78
   1999c:	mov	x0, #0xffffffffffffff9c    	// #-100
   199a0:	svc	#0x0
   199a4:	ret
   199a8:	mov	x1, x0
   199ac:	mov	x8, #0x23                  	// #35
   199b0:	mov	x0, #0xffffffffffffff9c    	// #-100
   199b4:	mov	x2, #0x0                   	// #0
   199b8:	svc	#0x0
   199bc:	ret
   199c0:	mov	x3, x1
   199c4:	mov	x8, #0x26                  	// #38
   199c8:	mov	x1, x0
   199cc:	mov	x0, #0xffffffffffffff9c    	// #-100
   199d0:	mov	x2, x0
   199d4:	svc	#0x0
   199d8:	ret
   199dc:	nop
   199e0:	mov	x8, #0x7c                  	// #124
   199e4:	svc	#0x0
   199e8:	ret
   199ec:	nop
   199f0:	sxtw	x0, w0
   199f4:	mov	x8, #0x5e                  	// #94
   199f8:	str	x30, [sp, #-16]!
   199fc:	svc	#0x0
   19a00:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   19a04:	nop
   19a08:	sub	sp, sp, #0x10
   19a0c:	mov	x2, #0x1                   	// #1
   19a10:	mov	x0, sp
   19a14:	mov	x8, #0x65                  	// #101
   19a18:	mov	x1, x0
   19a1c:	stp	x2, xzr, [sp]
   19a20:	svc	#0x0
   19a24:	ldr	w1, [sp]
   19a28:	cmp	w0, #0x0
   19a2c:	mov	w0, #0x0                   	// #0
   19a30:	add	sp, sp, #0x10
   19a34:	csel	w0, w1, w0, ne  // ne = any
   19a38:	ret
   19a3c:	nop
   19a40:	mov	x8, #0xdd                  	// #221
   19a44:	svc	#0x0
   19a48:	ret
   19a4c:	nop
   19a50:	sub	sp, sp, #0x80
   19a54:	mov	x1, x0
   19a58:	mov	x2, sp
   19a5c:	mov	x8, #0x4f                  	// #79
   19a60:	mov	x0, #0xffffffffffffff9c    	// #-100
   19a64:	mov	x3, #0x0                   	// #0
   19a68:	svc	#0x0
   19a6c:	cbnz	x0, 19a88 <__sanitizer_set_report_fd@@Base+0x27d8>
   19a70:	ldr	w0, [sp, #16]
   19a74:	add	sp, sp, #0x80
   19a78:	and	w0, w0, #0xf000
   19a7c:	cmp	w0, #0x8, lsl #12
   19a80:	cset	w0, eq  // eq = none
   19a84:	ret
   19a88:	mov	w0, #0x0                   	// #0
   19a8c:	add	sp, sp, #0x80
   19a90:	ret
   19a94:	nop
   19a98:	mov	x8, #0xb2                  	// #178
   19a9c:	svc	#0x0
   19aa0:	ret
   19aa4:	nop
   19aa8:	mov	x8, #0x83                  	// #131
   19aac:	sxtw	x0, w0
   19ab0:	sxtw	x2, w2
   19ab4:	svc	#0x0
   19ab8:	ret
   19abc:	nop
   19ac0:	stp	x19, x30, [sp, #-32]!
   19ac4:	mov	x2, #0x10                  	// #16
   19ac8:	mov	w1, #0x0                   	// #0
   19acc:	add	x19, sp, #0x10
   19ad0:	mov	x0, x19
   19ad4:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   19ad8:	mov	x0, x19
   19adc:	mov	x8, #0xa9                  	// #169
   19ae0:	mov	x1, #0x0                   	// #0
   19ae4:	svc	#0x0
   19ae8:	ldp	x3, x2, [sp, #16]
   19aec:	mov	x0, #0xca00                	// #51712
   19af0:	movk	x0, #0x3b9a, lsl #16
   19af4:	ldp	x19, x30, [sp], #32
   19af8:	lsl	x1, x2, #5
   19afc:	sub	x1, x1, x2
   19b00:	add	x1, x2, x1, lsl #2
   19b04:	lsl	x1, x1, #3
   19b08:	madd	x0, x3, x0, x1
   19b0c:	ret
   19b10:	mov	x8, #0x71                  	// #113
   19b14:	sxtw	x0, w0
   19b18:	svc	#0x0
   19b1c:	ret
   19b20:	stp	x19, x20, [sp, #-64]!
   19b24:	stp	x21, x22, [sp, #16]
   19b28:	adrp	x21, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   19b2c:	add	x19, x21, #0xc38
   19b30:	stp	x23, x30, [sp, #32]
   19b34:	mov	x23, x0
   19b38:	ldrb	w0, [x21, #3128]
   19b3c:	cbz	w0, 19bd8 <__sanitizer_set_report_fd@@Base+0x2928>
   19b40:	ldr	x0, [x19, #8]
   19b44:	cbz	x0, 19bc4 <__sanitizer_set_report_fd@@Base+0x2914>
   19b48:	add	x21, x21, #0xc38
   19b4c:	ldr	x0, [x21, #16]
   19b50:	cbz	x0, 19bc4 <__sanitizer_set_report_fd@@Base+0x2914>
   19b54:	mov	x0, x23
   19b58:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   19b5c:	ldr	x20, [x21, #8]
   19b60:	mov	x22, x0
   19b64:	ldrb	w0, [x20]
   19b68:	cbz	w0, 19bc4 <__sanitizer_set_report_fd@@Base+0x2914>
   19b6c:	mov	x2, x20
   19b70:	b	19ba0 <__sanitizer_set_report_fd@@Base+0x28f0>
   19b74:	mov	x1, x23
   19b78:	mov	x0, x20
   19b7c:	bl	188e8 <__sanitizer_set_report_fd@@Base+0x1638>
   19b80:	cbnz	w0, 19b90 <__sanitizer_set_report_fd@@Base+0x28e0>
   19b84:	ldrb	w0, [x20, x22]
   19b88:	cmp	w0, #0x3d
   19b8c:	b.eq	19c10 <__sanitizer_set_report_fd@@Base+0x2960>  // b.none
   19b90:	ldrb	w0, [x19, #1]
   19b94:	add	x20, x19, #0x1
   19b98:	cbz	w0, 19bc4 <__sanitizer_set_report_fd@@Base+0x2914>
   19b9c:	ldr	x2, [x21, #8]
   19ba0:	sub	x2, x20, x2
   19ba4:	ldr	x3, [x21, #16]
   19ba8:	mov	x0, x20
   19bac:	mov	w1, #0x0                   	// #0
   19bb0:	sub	x2, x3, x2
   19bb4:	bl	18880 <__sanitizer_set_report_fd@@Base+0x15d0>
   19bb8:	mov	x19, x0
   19bbc:	mov	x2, x22
   19bc0:	cbnz	x0, 19b74 <__sanitizer_set_report_fd@@Base+0x28c4>
   19bc4:	mov	x0, #0x0                   	// #0
   19bc8:	ldp	x21, x22, [sp, #16]
   19bcc:	ldp	x23, x30, [sp, #32]
   19bd0:	ldp	x19, x20, [sp], #64
   19bd4:	ret
   19bd8:	mov	w1, #0x1                   	// #1
   19bdc:	add	x3, x19, #0x10
   19be0:	strb	w1, [x21, #3128]
   19be4:	add	x2, sp, #0x38
   19be8:	add	x1, x19, #0x8
   19bec:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19bf0:	mov	x5, #0x0                   	// #0
   19bf4:	add	x0, x0, #0x4d8
   19bf8:	mov	x4, #0x4000000             	// #67108864
   19bfc:	bl	16b30 <__sanitizer_cov_dump@@Base+0x2078>
   19c00:	tst	w0, #0xff
   19c04:	b.ne	19b40 <__sanitizer_set_report_fd@@Base+0x2890>  // b.any
   19c08:	str	xzr, [x19, #8]
   19c0c:	b	19bc4 <__sanitizer_set_report_fd@@Base+0x2914>
   19c10:	add	x0, x22, #0x1
   19c14:	add	x0, x20, x0
   19c18:	ldp	x21, x22, [sp, #16]
   19c1c:	ldp	x23, x30, [sp, #32]
   19c20:	ldp	x19, x20, [sp], #64
   19c24:	ret
   19c28:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   19c2c:	ldr	x0, [x0, #4032]
   19c30:	cbz	x0, 19c40 <__sanitizer_set_report_fd@@Base+0x2990>
   19c34:	ldr	x0, [x0]
   19c38:	add	x0, x0, #0x8
   19c3c:	ret
   19c40:	str	x30, [sp, #-32]!
   19c44:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19c48:	add	x0, x0, #0x4f0
   19c4c:	add	x1, sp, #0x10
   19c50:	bl	196d8 <__sanitizer_set_report_fd@@Base+0x2428>
   19c54:	add	x1, sp, #0x18
   19c58:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19c5c:	add	x0, x0, #0x4d8
   19c60:	bl	196d8 <__sanitizer_set_report_fd@@Base+0x2428>
   19c64:	ldr	x0, [sp, #16]
   19c68:	ldr	x30, [sp], #32
   19c6c:	ret
   19c70:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   19c74:	str	x30, [sp, #-32]!
   19c78:	ldr	x0, [x0, #4032]
   19c7c:	cbz	x0, 19ce4 <__sanitizer_set_report_fd@@Base+0x2a34>
   19c80:	ldr	x0, [x0]
   19c84:	mov	x1, x0
   19c88:	ldr	x2, [x1], #8
   19c8c:	add	x2, x0, w2, sxtw #3
   19c90:	add	x2, x2, #0x10
   19c94:	stp	x1, x2, [sp, #16]
   19c98:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19c9c:	mov	x8, #0xdd                  	// #221
   19ca0:	add	x0, x0, #0x508
   19ca4:	svc	#0x0
   19ca8:	cmn	x0, #0x1, lsl #12
   19cac:	b.hi	19cd0 <__sanitizer_set_report_fd@@Base+0x2a20>  // b.pmore
   19cb0:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19cb4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19cb8:	add	x2, x2, #0x518
   19cbc:	add	x0, x0, #0x498
   19cc0:	mov	x4, #0x1                   	// #1
   19cc4:	mov	x3, #0x0                   	// #0
   19cc8:	mov	w1, #0x286                 	// #646
   19ccc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   19cd0:	neg	w1, w0
   19cd4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19cd8:	add	x0, x0, #0x548
   19cdc:	bl	1e5c0 <OnPrint@@Base+0x310>
   19ce0:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   19ce4:	add	x1, sp, #0x10
   19ce8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19cec:	add	x0, x0, #0x4f0
   19cf0:	bl	196d8 <__sanitizer_set_report_fd@@Base+0x2428>
   19cf4:	add	x1, sp, #0x18
   19cf8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19cfc:	add	x0, x0, #0x4d8
   19d00:	bl	196d8 <__sanitizer_set_report_fd@@Base+0x2428>
   19d04:	ldp	x1, x2, [sp, #16]
   19d08:	b	19c98 <__sanitizer_set_report_fd@@Base+0x29e8>
   19d0c:	nop
   19d10:	mov	x2, #0x58                  	// #88
   19d14:	mov	w1, #0x0                   	// #0
   19d18:	b	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   19d1c:	nop
   19d20:	ldr	x3, [x0, #80]
   19d24:	mov	x6, x0
   19d28:	mov	w1, #0x1                   	// #1
   19d2c:	cbnz	x3, 19d94 <__sanitizer_set_report_fd@@Base+0x2ae4>
   19d30:	ldxr	w0, [x6]
   19d34:	stxr	w2, w1, [x6]
   19d38:	cbnz	w2, 19d30 <__sanitizer_set_report_fd@@Base+0x2a80>
   19d3c:	dmb	ish
   19d40:	cbz	w0, 19d90 <__sanitizer_set_report_fd@@Base+0x2ae0>
   19d44:	mov	w7, #0x2                   	// #2
   19d48:	ldxr	w0, [x6]
   19d4c:	stxr	w1, w7, [x6]
   19d50:	cbnz	w1, 19d48 <__sanitizer_set_report_fd@@Base+0x2a98>
   19d54:	dmb	ish
   19d58:	cbz	w0, 19d90 <__sanitizer_set_report_fd@@Base+0x2ae0>
   19d5c:	mov	x0, x6
   19d60:	mov	x8, #0x62                  	// #98
   19d64:	mov	x1, #0x80                  	// #128
   19d68:	mov	x2, #0x2                   	// #2
   19d6c:	mov	x3, #0x0                   	// #0
   19d70:	mov	x4, #0x0                   	// #0
   19d74:	mov	x5, #0x0                   	// #0
   19d78:	svc	#0x0
   19d7c:	ldxr	w0, [x6]
   19d80:	stxr	w1, w7, [x6]
   19d84:	cbnz	w1, 19d48 <__sanitizer_set_report_fd@@Base+0x2a98>
   19d88:	dmb	ish
   19d8c:	cbnz	w0, 19d5c <__sanitizer_set_report_fd@@Base+0x2aac>
   19d90:	ret
   19d94:	str	x30, [sp, #-16]!
   19d98:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19d9c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19da0:	add	x2, x2, #0x568
   19da4:	add	x0, x0, #0x498
   19da8:	mov	x4, #0x0                   	// #0
   19dac:	mov	w1, #0x298                 	// #664
   19db0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   19db4:	nop
   19db8:	dmb	ish
   19dbc:	mov	x1, x0
   19dc0:	ldxr	w2, [x1]
   19dc4:	stxr	w3, wzr, [x1]
   19dc8:	cbnz	w3, 19dc0 <__sanitizer_set_report_fd@@Base+0x2b10>
   19dcc:	dmb	ish
   19dd0:	cbz	w2, 19e00 <__sanitizer_set_report_fd@@Base+0x2b50>
   19dd4:	cmp	w2, #0x2
   19dd8:	b.eq	19de0 <__sanitizer_set_report_fd@@Base+0x2b30>  // b.none
   19ddc:	ret
   19de0:	mov	x8, #0x62                  	// #98
   19de4:	mov	x1, #0x81                  	// #129
   19de8:	mov	x2, #0x1                   	// #1
   19dec:	mov	x3, #0x0                   	// #0
   19df0:	mov	x4, #0x0                   	// #0
   19df4:	mov	x5, #0x0                   	// #0
   19df8:	svc	#0x0
   19dfc:	ret
   19e00:	str	x30, [sp, #-16]!
   19e04:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19e08:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19e0c:	add	x2, x2, #0x580
   19e10:	add	x0, x0, #0x498
   19e14:	mov	x4, #0x0                   	// #0
   19e18:	mov	x3, #0x0                   	// #0
   19e1c:	mov	w1, #0x2ab                 	// #683
   19e20:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   19e24:	nop
   19e28:	ldr	w0, [x0]
   19e2c:	cbz	w0, 19e34 <__sanitizer_set_report_fd@@Base+0x2b84>
   19e30:	ret
   19e34:	str	x30, [sp, #-16]!
   19e38:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19e3c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   19e40:	add	x2, x2, #0x5a0
   19e44:	add	x0, x0, #0x498
   19e48:	mov	x4, #0x0                   	// #0
   19e4c:	mov	x3, #0x0                   	// #0
   19e50:	mov	w1, #0x2b9                 	// #697
   19e54:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   19e58:	mov	x8, #0x75                  	// #117
   19e5c:	sxtw	x0, w0
   19e60:	sxtw	x1, w1
   19e64:	svc	#0x0
   19e68:	ret
   19e6c:	nop
   19e70:	mov	x8, #0x104                 	// #260
   19e74:	mov	x3, #0x0                   	// #0
   19e78:	sxtw	x0, w0
   19e7c:	sxtw	x2, w2
   19e80:	svc	#0x0
   19e84:	ret
   19e88:	mov	x8, #0xac                  	// #172
   19e8c:	svc	#0x0
   19e90:	ret
   19e94:	nop
   19e98:	mov	x8, #0xad                  	// #173
   19e9c:	svc	#0x0
   19ea0:	ret
   19ea4:	nop
   19ea8:	mov	w2, w2
   19eac:	mov	x8, #0x3d                  	// #61
   19eb0:	sxtw	x0, w0
   19eb4:	svc	#0x0
   19eb8:	ret
   19ebc:	nop
   19ec0:	mov	x8, #0x3e                  	// #62
   19ec4:	sxtw	x0, w0
   19ec8:	sxtw	x2, w2
   19ecc:	svc	#0x0
   19ed0:	ret
   19ed4:	nop
   19ed8:	mov	x8, #0xa7                  	// #167
   19edc:	sxtw	x0, w0
   19ee0:	svc	#0x0
   19ee4:	ret
   19ee8:	mov	x8, #0x84                  	// #132
   19eec:	svc	#0x0
   19ef0:	ret
   19ef4:	nop
   19ef8:	mov	x8, #0xdc                  	// #220
   19efc:	mov	x0, #0x11                  	// #17
   19f00:	mov	x1, #0x0                   	// #0
   19f04:	svc	#0x0
   19f08:	ret
   19f0c:	nop
   19f10:	stp	x19, x20, [sp, #-112]!
   19f14:	sxtw	x20, w0
   19f18:	mov	x19, x1
   19f1c:	stp	x23, x30, [sp, #32]
   19f20:	add	x23, sp, #0x30
   19f24:	mov	w1, #0x0                   	// #0
   19f28:	mov	x0, x23
   19f2c:	stp	x21, x22, [sp, #16]
   19f30:	mov	x21, x2
   19f34:	add	x22, sp, #0x50
   19f38:	mov	x2, #0x20                  	// #32
   19f3c:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   19f40:	mov	w1, #0x0                   	// #0
   19f44:	mov	x0, x22
   19f48:	mov	x2, #0x20                  	// #32
   19f4c:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   19f50:	mov	x1, #0x0                   	// #0
   19f54:	cbz	x19, 19f88 <__sanitizer_set_report_fd@@Base+0x2cd8>
   19f58:	mov	x1, x19
   19f5c:	mov	x2, #0x8                   	// #8
   19f60:	add	x0, x23, #0x18
   19f64:	ldr	x3, [x1], #8
   19f68:	str	x3, [sp, #48]
   19f6c:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   19f70:	ldr	w0, [x19, #136]
   19f74:	mov	x1, x23
   19f78:	ldr	x2, [x19, #144]
   19f7c:	orr	w0, w0, #0x4000000
   19f80:	sxtw	x0, w0
   19f84:	stp	x0, x2, [sp, #56]
   19f88:	cmp	x21, #0x0
   19f8c:	mov	x0, x20
   19f90:	csel	x2, x22, xzr, ne  // ne = any
   19f94:	mov	x8, #0x86                  	// #134
   19f98:	mov	x3, #0x8                   	// #8
   19f9c:	svc	#0x0
   19fa0:	cmp	x0, #0x0
   19fa4:	mov	x19, x0
   19fa8:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   19fac:	b.ne	19fc4 <__sanitizer_set_report_fd@@Base+0x2d14>  // b.any
   19fb0:	mov	w0, w19
   19fb4:	ldp	x21, x22, [sp, #16]
   19fb8:	ldp	x23, x30, [sp, #32]
   19fbc:	ldp	x19, x20, [sp], #112
   19fc0:	ret
   19fc4:	mov	x0, x21
   19fc8:	mov	x2, x3
   19fcc:	ldr	x3, [sp, #80]
   19fd0:	add	x1, x22, #0x18
   19fd4:	str	x3, [x0], #8
   19fd8:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   19fdc:	ldr	x0, [sp, #88]
   19fe0:	str	w0, [x21, #136]
   19fe4:	ldr	x0, [sp, #96]
   19fe8:	str	x0, [x21, #144]
   19fec:	mov	w0, w19
   19ff0:	ldp	x21, x22, [sp, #16]
   19ff4:	ldp	x23, x30, [sp, #32]
   19ff8:	ldp	x19, x20, [sp], #112
   19ffc:	ret
   1a000:	mov	x8, #0x87                  	// #135
   1a004:	mov	x3, #0x8                   	// #8
   1a008:	sxtw	x0, w0
   1a00c:	svc	#0x0
   1a010:	ret
   1a014:	nop
   1a018:	mov	x2, #0x80                  	// #128
   1a01c:	mov	w1, #0xff                  	// #255
   1a020:	b	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   1a024:	nop
   1a028:	mov	x2, #0x80                  	// #128
   1a02c:	mov	w1, #0x0                   	// #0
   1a030:	b	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   1a034:	nop
   1a038:	sub	w1, w1, #0x1
   1a03c:	sxtw	x3, w1
   1a040:	cmp	x3, #0x3ff
   1a044:	b.hi	1a068 <__sanitizer_set_report_fd@@Base+0x2db8>  // b.pmore
   1a048:	lsr	x3, x3, #3
   1a04c:	and	w1, w1, #0x7
   1a050:	mov	w2, #0x1                   	// #1
   1a054:	lsl	w1, w2, w1
   1a058:	ldrb	w2, [x0, x3]
   1a05c:	bic	w1, w2, w1
   1a060:	strb	w1, [x0, x3]
   1a064:	ret
   1a068:	str	x30, [sp, #-16]!
   1a06c:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1a070:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1a074:	add	x2, x2, #0x5e0
   1a078:	add	x0, x0, #0x498
   1a07c:	mov	x4, #0x400                 	// #1024
   1a080:	mov	w1, #0x381                 	// #897
   1a084:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a088:	sub	w1, w1, #0x1
   1a08c:	sxtw	x3, w1
   1a090:	cmp	x3, #0x3ff
   1a094:	b.hi	1a0b0 <__sanitizer_set_report_fd@@Base+0x2e00>  // b.pmore
   1a098:	lsr	x3, x3, #3
   1a09c:	and	w1, w1, #0x7
   1a0a0:	ldrb	w0, [x0, x3]
   1a0a4:	asr	w0, w0, w1
   1a0a8:	and	w0, w0, #0x1
   1a0ac:	ret
   1a0b0:	str	x30, [sp, #-16]!
   1a0b4:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1a0b8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1a0bc:	add	x2, x2, #0x5e0
   1a0c0:	add	x0, x0, #0x498
   1a0c4:	mov	x4, #0x400                 	// #1024
   1a0c8:	mov	w1, #0x38b                 	// #907
   1a0cc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a0d0:	stp	x19, x20, [sp, #-144]!
   1a0d4:	mov	x19, x0
   1a0d8:	add	x20, x0, #0x8
   1a0dc:	stp	x23, x24, [sp, #32]
   1a0e0:	adrp	x24, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a0e4:	mov	w0, #0xffffffff            	// #-1
   1a0e8:	stp	x21, x22, [sp, #16]
   1a0ec:	mov	w21, w1
   1a0f0:	ldr	x22, [x24, #4000]
   1a0f4:	stp	x25, x30, [sp, #48]
   1a0f8:	stp	w1, w0, [x19]
   1a0fc:	ldr	x0, [x22]
   1a100:	stp	xzr, xzr, [x20, #8]
   1a104:	str	xzr, [x19, #8]
   1a108:	cbz	x0, 1a204 <__sanitizer_set_report_fd@@Base+0x2f54>
   1a10c:	sub	x1, x0, #0x1
   1a110:	tst	x1, x0
   1a114:	b.ne	1a274 <__sanitizer_set_report_fd@@Base+0x2fc4>  // b.any
   1a118:	add	x22, x0, #0xfff
   1a11c:	neg	x0, x0
   1a120:	and	x22, x22, x0
   1a124:	mov	w2, #0x0                   	// #0
   1a128:	mov	x0, x22
   1a12c:	adrp	x25, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a130:	add	x1, x25, #0x258
   1a134:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1a138:	ldr	x1, [x19, #8]
   1a13c:	mov	x23, x0
   1a140:	ldr	x2, [x20, #16]
   1a144:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1a148:	ldr	x0, [x19, #8]
   1a14c:	ldr	x1, [x20, #8]
   1a150:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1a154:	ldr	x2, [x20, #16]
   1a158:	str	x23, [x19, #8]
   1a15c:	str	x22, [x20, #8]
   1a160:	cmp	x2, #0xfff
   1a164:	b.hi	1a184 <__sanitizer_set_report_fd@@Base+0x2ed4>  // b.pmore
   1a168:	cmp	x22, #0xfff
   1a16c:	b.ls	1a214 <__sanitizer_set_report_fd@@Base+0x2f64>  // b.plast
   1a170:	mov	x3, #0x1000                	// #4096
   1a174:	add	x0, x23, x2
   1a178:	mov	w1, #0x0                   	// #0
   1a17c:	sub	x2, x3, x2
   1a180:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   1a184:	mov	x0, #0x1000                	// #4096
   1a188:	str	x0, [x20, #16]
   1a18c:	add	x20, sp, #0x40
   1a190:	mov	w3, w21
   1a194:	mov	x0, x20
   1a198:	mov	x1, #0x50                  	// #80
   1a19c:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1a1a0:	add	x2, x2, #0x608
   1a1a4:	bl	1e2b8 <OnPrint@@Base+0x8>
   1a1a8:	mov	x1, x20
   1a1ac:	mov	x8, #0x38                  	// #56
   1a1b0:	mov	x0, #0xffffffffffffff9c    	// #-100
   1a1b4:	mov	x2, #0x4000                	// #16384
   1a1b8:	svc	#0x0
   1a1bc:	str	w0, [x19, #4]
   1a1c0:	sxtw	x0, w0
   1a1c4:	cmn	x0, #0x1, lsl #12
   1a1c8:	b.hi	1a1e0 <__sanitizer_set_report_fd@@Base+0x2f30>  // b.pmore
   1a1cc:	ldp	x21, x22, [sp, #16]
   1a1d0:	ldp	x23, x24, [sp, #32]
   1a1d4:	ldp	x25, x30, [sp, #48]
   1a1d8:	ldp	x19, x20, [sp], #144
   1a1dc:	ret
   1a1e0:	mov	w1, w21
   1a1e4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1a1e8:	add	x0, x0, #0x618
   1a1ec:	bl	1e648 <OnPrint@@Base+0x398>
   1a1f0:	ldp	x21, x22, [sp, #16]
   1a1f4:	ldp	x23, x24, [sp, #32]
   1a1f8:	ldp	x25, x30, [sp, #48]
   1a1fc:	ldp	x19, x20, [sp], #144
   1a200:	ret
   1a204:	mov	x0, #0x6                   	// #6
   1a208:	bl	6bb0 <getauxval@plt>
   1a20c:	str	x0, [x22]
   1a210:	b	1a10c <__sanitizer_set_report_fd@@Base+0x2e5c>
   1a214:	ldr	x24, [x24, #4000]
   1a218:	ldr	x0, [x24]
   1a21c:	cbz	x0, 1a284 <__sanitizer_set_report_fd@@Base+0x2fd4>
   1a220:	sub	x1, x0, #0x1
   1a224:	tst	x1, x0
   1a228:	b.ne	1a274 <__sanitizer_set_report_fd@@Base+0x2fc4>  // b.any
   1a22c:	add	x22, x0, #0xfff
   1a230:	neg	x0, x0
   1a234:	and	x22, x22, x0
   1a238:	add	x1, x25, #0x258
   1a23c:	mov	w2, #0x0                   	// #0
   1a240:	mov	x0, x22
   1a244:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1a248:	mov	x23, x0
   1a24c:	ldr	x1, [x19, #8]
   1a250:	ldr	x2, [x20, #16]
   1a254:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1a258:	ldr	x0, [x19, #8]
   1a25c:	ldr	x1, [x20, #8]
   1a260:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1a264:	ldr	x2, [x20, #16]
   1a268:	str	x23, [x19, #8]
   1a26c:	str	x22, [x20, #8]
   1a270:	b	1a170 <__sanitizer_set_report_fd@@Base+0x2ec0>
   1a274:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a278:	add	x0, x0, #0x240
   1a27c:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1a280:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1a284:	mov	x0, #0x6                   	// #6
   1a288:	bl	6bb0 <getauxval@plt>
   1a28c:	str	x0, [x24]
   1a290:	b	1a220 <__sanitizer_set_report_fd@@Base+0x2f70>
   1a294:	nop
   1a298:	stp	x19, x20, [sp, #-160]!
   1a29c:	mov	x20, x0
   1a2a0:	mov	w4, w1
   1a2a4:	stp	x21, x22, [sp, #16]
   1a2a8:	add	x21, sp, #0x50
   1a2ac:	ldr	w3, [x20], #8
   1a2b0:	mov	x1, #0x50                  	// #80
   1a2b4:	mov	x19, x0
   1a2b8:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1a2bc:	mov	x0, x21
   1a2c0:	add	x2, x2, #0x640
   1a2c4:	str	x30, [sp, #32]
   1a2c8:	bl	1e2b8 <OnPrint@@Base+0x8>
   1a2cc:	mov	x0, x21
   1a2d0:	mov	x1, x20
   1a2d4:	mov	x3, #0x0                   	// #0
   1a2d8:	mov	x2, #0x4000000             	// #67108864
   1a2dc:	bl	16cc8 <__sanitizer_cov_dump@@Base+0x2210>
   1a2e0:	tst	w0, #0xff
   1a2e4:	b.eq	1a2f0 <__sanitizer_set_report_fd@@Base+0x3040>  // b.none
   1a2e8:	ldr	x3, [x19, #24]
   1a2ec:	cbnz	x3, 1a304 <__sanitizer_set_report_fd@@Base+0x3054>
   1a2f0:	mov	w0, #0x0                   	// #0
   1a2f4:	ldp	x21, x22, [sp, #16]
   1a2f8:	ldr	x30, [sp, #32]
   1a2fc:	ldp	x19, x20, [sp], #160
   1a300:	ret
   1a304:	ldr	x4, [x19, #16]
   1a308:	strb	wzr, [sp, #79]
   1a30c:	cmp	x3, x4
   1a310:	b.hi	1a430 <__sanitizer_set_report_fd@@Base+0x3180>  // b.pmore
   1a314:	add	x1, x3, #0x1
   1a318:	b.eq	1a37c <__sanitizer_set_report_fd@@Base+0x30cc>  // b.none
   1a31c:	ldr	x21, [x19, #8]
   1a320:	str	x1, [x20, #16]
   1a324:	add	x0, x21, x3
   1a328:	add	x1, sp, #0x4f
   1a32c:	mov	x2, #0x1                   	// #1
   1a330:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1a334:	ldr	x0, [x19, #8]
   1a338:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1a33c:	add	x20, x20, #0x8f0
   1a340:	mov	x1, x20
   1a344:	bl	18e60 <__sanitizer_set_report_fd@@Base+0x1bb0>
   1a348:	str	x0, [sp, #56]
   1a34c:	mov	x19, x0
   1a350:	cbz	x0, 1a2f0 <__sanitizer_set_report_fd@@Base+0x3040>
   1a354:	mov	x0, x20
   1a358:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   1a35c:	add	x0, x19, x0
   1a360:	bl	19028 <__sanitizer_set_report_fd@@Base+0x1d78>
   1a364:	cmp	w0, #0x0
   1a368:	cset	w0, ne  // ne = any
   1a36c:	ldp	x21, x22, [sp, #16]
   1a370:	ldr	x30, [sp, #32]
   1a374:	ldp	x19, x20, [sp], #160
   1a378:	ret
   1a37c:	cbz	x1, 1a458 <__sanitizer_set_report_fd@@Base+0x31a8>
   1a380:	tst	x3, x1
   1a384:	b.eq	1a428 <__sanitizer_set_report_fd@@Base+0x3178>  // b.none
   1a388:	clz	x2, x1
   1a38c:	mov	w0, #0x3f                  	// #63
   1a390:	sub	w0, w0, w2
   1a394:	mov	x2, #0x1                   	// #1
   1a398:	add	w21, w0, #0x1
   1a39c:	lsl	x21, x2, x21
   1a3a0:	cmp	x1, x21
   1a3a4:	b.cs	1a4a4 <__sanitizer_set_report_fd@@Base+0x31f4>  // b.hs, b.nlast
   1a3a8:	lsl	x4, x2, x0
   1a3ac:	cmp	x1, x4
   1a3b0:	b.ls	1a4c4 <__sanitizer_set_report_fd@@Base+0x3214>  // b.plast
   1a3b4:	cmp	x3, x21
   1a3b8:	b.hi	1a478 <__sanitizer_set_report_fd@@Base+0x31c8>  // b.pmore
   1a3bc:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a3c0:	ldr	x22, [x22, #4000]
   1a3c4:	ldr	x0, [x22]
   1a3c8:	cbz	x0, 1a448 <__sanitizer_set_report_fd@@Base+0x3198>
   1a3cc:	sub	x22, x0, #0x1
   1a3d0:	tst	x22, x0
   1a3d4:	b.ne	1a494 <__sanitizer_set_report_fd@@Base+0x31e4>  // b.any
   1a3d8:	add	x21, x21, x22
   1a3dc:	neg	x0, x0
   1a3e0:	and	x22, x21, x0
   1a3e4:	mov	w2, #0x0                   	// #0
   1a3e8:	mov	x0, x22
   1a3ec:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a3f0:	add	x1, x1, #0x258
   1a3f4:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1a3f8:	ldr	x1, [x19, #8]
   1a3fc:	mov	x21, x0
   1a400:	ldr	x2, [x20, #16]
   1a404:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1a408:	ldr	x1, [x20, #8]
   1a40c:	ldr	x0, [x19, #8]
   1a410:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1a414:	ldr	x3, [x20, #16]
   1a418:	str	x21, [x19, #8]
   1a41c:	str	x22, [x20, #8]
   1a420:	add	x1, x3, #0x1
   1a424:	b	1a320 <__sanitizer_set_report_fd@@Base+0x3070>
   1a428:	mov	x21, x1
   1a42c:	b	1a3bc <__sanitizer_set_report_fd@@Base+0x310c>
   1a430:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a434:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a438:	add	x2, x2, #0x1b8
   1a43c:	add	x0, x0, #0xf8
   1a440:	mov	w1, #0x1be                 	// #446
   1a444:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a448:	mov	x0, #0x6                   	// #6
   1a44c:	bl	6bb0 <getauxval@plt>
   1a450:	str	x0, [x22]
   1a454:	b	1a3cc <__sanitizer_set_report_fd@@Base+0x311c>
   1a458:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1a45c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a460:	add	x2, x2, #0x658
   1a464:	add	x0, x0, #0xf8
   1a468:	mov	x4, #0x0                   	// #0
   1a46c:	mov	x3, #0x0                   	// #0
   1a470:	mov	w1, #0x177                 	// #375
   1a474:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a478:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a47c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a480:	mov	x4, x21
   1a484:	add	x2, x2, #0x220
   1a488:	add	x0, x0, #0xf8
   1a48c:	mov	w1, #0x1fd                 	// #509
   1a490:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a494:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a498:	add	x0, x0, #0x240
   1a49c:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1a4a0:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1a4a4:	mov	x3, x1
   1a4a8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a4ac:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a4b0:	mov	x4, x21
   1a4b4:	add	x2, x2, #0x1d8
   1a4b8:	add	x0, x0, #0xf8
   1a4bc:	mov	w1, #0x17b                 	// #379
   1a4c0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a4c4:	mov	x3, x1
   1a4c8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a4cc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a4d0:	add	x2, x2, #0x200
   1a4d4:	add	x0, x0, #0xf8
   1a4d8:	mov	w1, #0x17c                 	// #380
   1a4dc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a4e0:	stp	x19, x20, [sp, #-144]!
   1a4e4:	stp	x23, x24, [sp, #32]
   1a4e8:	stp	x25, x26, [sp, #48]
   1a4ec:	mov	x25, x0
   1a4f0:	ldrsw	x0, [x0, #4]
   1a4f4:	str	x30, [sp, #80]
   1a4f8:	cmn	x0, #0x1, lsl #12
   1a4fc:	b.hi	1a6bc <__sanitizer_set_report_fd@@Base+0x340c>  // b.pmore
   1a500:	mov	x8, #0x3e                  	// #62
   1a504:	mov	x2, #0x0                   	// #0
   1a508:	stp	x21, x22, [sp, #16]
   1a50c:	stp	x27, x28, [sp, #64]
   1a510:	mov	x28, x1
   1a514:	mov	x1, #0x0                   	// #0
   1a518:	svc	#0x0
   1a51c:	add	x23, x25, #0x8
   1a520:	str	xzr, [x28, #16]
   1a524:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a528:	add	x0, sp, #0x88
   1a52c:	ldr	x19, [x25, #16]
   1a530:	str	x0, [sp, #96]
   1a534:	ldr	x3, [x23, #16]
   1a538:	mov	w20, #0x1                   	// #1
   1a53c:	ldr	x0, [x22, #4000]
   1a540:	mov	w24, #0x2                   	// #2
   1a544:	str	x0, [sp, #104]
   1a548:	cmp	x19, x3
   1a54c:	b.ls	1a564 <__sanitizer_set_report_fd@@Base+0x32b4>  // b.plast
   1a550:	ldr	x0, [x23]
   1a554:	sub	x2, x19, x3
   1a558:	mov	w1, #0x0                   	// #0
   1a55c:	add	x0, x0, x3
   1a560:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   1a564:	str	x19, [x23, #16]
   1a568:	cmp	x19, #0xfff
   1a56c:	b.ls	1a6e4 <__sanitizer_set_report_fd@@Base+0x3434>  // b.plast
   1a570:	ldrsw	x0, [x25, #4]
   1a574:	and	x2, x19, #0xffffffff
   1a578:	mov	x8, #0x3d                  	// #61
   1a57c:	ldr	x1, [x25, #8]
   1a580:	svc	#0x0
   1a584:	mov	x26, x0
   1a588:	cbz	x0, 1a89c <__sanitizer_set_report_fd@@Base+0x35ec>
   1a58c:	cmn	x0, #0x1, lsl #12
   1a590:	b.hi	1a688 <__sanitizer_set_report_fd@@Base+0x33d8>  // b.pmore
   1a594:	ldr	x19, [x25, #8]
   1a598:	add	x27, x19, x0
   1a59c:	cmp	x19, x27
   1a5a0:	b.cs	1a630 <__sanitizer_set_report_fd@@Base+0x3380>  // b.hs, b.nlast
   1a5a4:	adrp	x21, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a5a8:	add	x21, x21, #0x258
   1a5ac:	b	1a5bc <__sanitizer_set_report_fd@@Base+0x330c>
   1a5b0:	cbnz	x2, 1a5d8 <__sanitizer_set_report_fd@@Base+0x3328>
   1a5b4:	cmp	x27, x19
   1a5b8:	b.ls	1a630 <__sanitizer_set_report_fd@@Base+0x3380>  // b.plast
   1a5bc:	mov	x0, x19
   1a5c0:	ldrh	w2, [x19, #16]
   1a5c4:	add	x19, x19, x2
   1a5c8:	ldr	x2, [x0]
   1a5cc:	cmp	x2, #0x1
   1a5d0:	b.ne	1a5b0 <__sanitizer_set_report_fd@@Base+0x3300>  // b.any
   1a5d4:	mov	w24, w2
   1a5d8:	ldrb	w2, [x0, #19]
   1a5dc:	sub	w2, w2, #0x30
   1a5e0:	and	w2, w2, #0xff
   1a5e4:	cmp	w2, #0x9
   1a5e8:	b.hi	1a5b4 <__sanitizer_set_report_fd@@Base+0x3304>  // b.pmore
   1a5ec:	add	x0, x0, #0x13
   1a5f0:	bl	19028 <__sanitizer_set_report_fd@@Base+0x1d78>
   1a5f4:	ldp	x4, x3, [x28, #8]
   1a5f8:	str	x0, [sp, #136]
   1a5fc:	lsr	x4, x4, #3
   1a600:	cmp	x3, x4
   1a604:	b.hi	1a884 <__sanitizer_set_report_fd@@Base+0x35d4>  // b.pmore
   1a608:	add	x0, x3, #0x1
   1a60c:	b.eq	1a748 <__sanitizer_set_report_fd@@Base+0x3498>  // b.none
   1a610:	ldr	x7, [x28]
   1a614:	str	x0, [x28, #16]
   1a618:	ldr	x1, [sp, #96]
   1a61c:	add	x0, x7, x3, lsl #3
   1a620:	mov	x2, #0x8                   	// #8
   1a624:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1a628:	cmp	x27, x19
   1a62c:	b.hi	1a5bc <__sanitizer_set_report_fd@@Base+0x330c>  // b.pmore
   1a630:	ldr	x3, [x25, #24]
   1a634:	cbz	w20, 1a678 <__sanitizer_set_report_fd@@Base+0x33c8>
   1a638:	sub	x0, x3, #0x400
   1a63c:	cmp	x0, x26
   1a640:	b.cc	1a704 <__sanitizer_set_report_fd@@Base+0x3454>  // b.lo, b.ul, b.last
   1a644:	ldr	x1, [x28, #16]
   1a648:	cbz	x1, 1a6d8 <__sanitizer_set_report_fd@@Base+0x3428>
   1a64c:	ldr	x2, [x28]
   1a650:	mov	x0, x25
   1a654:	add	x1, x2, x1, lsl #3
   1a658:	ldur	w1, [x1, #-8]
   1a65c:	bl	1a298 <__sanitizer_set_report_fd@@Base+0x2fe8>
   1a660:	tst	w0, #0xff
   1a664:	b.eq	1a7f4 <__sanitizer_set_report_fd@@Base+0x3544>  // b.none
   1a668:	mov	w20, #0x0                   	// #0
   1a66c:	ldr	x3, [x23, #16]
   1a670:	ldr	x19, [x25, #16]
   1a674:	b	1a548 <__sanitizer_set_report_fd@@Base+0x3298>
   1a678:	mov	w24, #0x1                   	// #1
   1a67c:	mov	w20, #0x0                   	// #0
   1a680:	ldr	x19, [x25, #16]
   1a684:	b	1a548 <__sanitizer_set_report_fd@@Base+0x3298>
   1a688:	ldr	w1, [x25]
   1a68c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1a690:	add	x0, x0, #0x688
   1a694:	mov	w24, #0x0                   	// #0
   1a698:	bl	1e648 <OnPrint@@Base+0x398>
   1a69c:	ldp	x21, x22, [sp, #16]
   1a6a0:	ldp	x27, x28, [sp, #64]
   1a6a4:	mov	w0, w24
   1a6a8:	ldp	x23, x24, [sp, #32]
   1a6ac:	ldp	x25, x26, [sp, #48]
   1a6b0:	ldr	x30, [sp, #80]
   1a6b4:	ldp	x19, x20, [sp], #144
   1a6b8:	ret
   1a6bc:	mov	w24, #0x0                   	// #0
   1a6c0:	mov	w0, w24
   1a6c4:	ldp	x23, x24, [sp, #32]
   1a6c8:	ldp	x25, x26, [sp, #48]
   1a6cc:	ldr	x30, [sp, #80]
   1a6d0:	ldp	x19, x20, [sp], #144
   1a6d4:	ret
   1a6d8:	mov	w20, #0x0                   	// #0
   1a6dc:	ldr	x19, [x25, #16]
   1a6e0:	b	1a548 <__sanitizer_set_report_fd@@Base+0x3298>
   1a6e4:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1a6e8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1a6ec:	mov	x3, x19
   1a6f0:	add	x2, x2, #0x668
   1a6f4:	add	x0, x0, #0x498
   1a6f8:	mov	x4, #0x1000                	// #4096
   1a6fc:	mov	w1, #0x3b5                 	// #949
   1a700:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a704:	cmp	x3, x3, lsl #1
   1a708:	lsl	x20, x3, #1
   1a70c:	ldr	x19, [x25, #16]
   1a710:	b.cs	1a734 <__sanitizer_set_report_fd@@Base+0x3484>  // b.hs, b.nlast
   1a714:	cmp	x20, x19
   1a718:	b.hi	1a808 <__sanitizer_set_report_fd@@Base+0x3558>  // b.pmore
   1a71c:	ldr	x19, [x23]
   1a720:	add	x0, x19, x3
   1a724:	sub	x2, x20, x3
   1a728:	mov	w1, #0x0                   	// #0
   1a72c:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   1a730:	ldr	x19, [x25, #16]
   1a734:	mov	x3, x20
   1a738:	mov	w24, #0x1                   	// #1
   1a73c:	str	x20, [x23, #16]
   1a740:	mov	w20, #0x0                   	// #0
   1a744:	b	1a548 <__sanitizer_set_report_fd@@Base+0x3298>
   1a748:	tst	x0, x3
   1a74c:	b.eq	1a788 <__sanitizer_set_report_fd@@Base+0x34d8>  // b.none
   1a750:	clz	x2, x0
   1a754:	mov	w1, #0x3f                  	// #63
   1a758:	sub	w2, w1, w2
   1a75c:	mov	x1, #0x1                   	// #1
   1a760:	add	w4, w2, #0x1
   1a764:	lsl	x4, x1, x4
   1a768:	cmp	x0, x4
   1a76c:	b.cs	1a868 <__sanitizer_set_report_fd@@Base+0x35b8>  // b.hs, b.nlast
   1a770:	lsl	x1, x1, x2
   1a774:	cmp	x0, x1
   1a778:	b.ls	1a8fc <__sanitizer_set_report_fd@@Base+0x364c>  // b.plast
   1a77c:	cmp	x3, x4
   1a780:	b.hi	1a8d4 <__sanitizer_set_report_fd@@Base+0x3624>  // b.pmore
   1a784:	mov	x0, x4
   1a788:	ldr	x1, [sp, #104]
   1a78c:	ldr	x2, [x1]
   1a790:	lsl	x1, x0, #3
   1a794:	cbz	x2, 1a8a8 <__sanitizer_set_report_fd@@Base+0x35f8>
   1a798:	sub	x0, x2, #0x1
   1a79c:	tst	x2, x0
   1a7a0:	b.ne	1a8c4 <__sanitizer_set_report_fd@@Base+0x3614>  // b.any
   1a7a4:	add	x0, x1, x0
   1a7a8:	neg	x2, x2
   1a7ac:	and	x4, x0, x2
   1a7b0:	mov	x1, x21
   1a7b4:	mov	x0, x4
   1a7b8:	mov	w2, #0x0                   	// #0
   1a7bc:	str	x4, [sp, #120]
   1a7c0:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1a7c4:	str	x0, [sp, #112]
   1a7c8:	ldr	x1, [x28]
   1a7cc:	ldr	x2, [x28, #16]
   1a7d0:	lsl	x2, x2, #3
   1a7d4:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1a7d8:	ldp	x0, x1, [x28]
   1a7dc:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1a7e0:	ldr	x3, [x28, #16]
   1a7e4:	ldp	x7, x4, [sp, #112]
   1a7e8:	add	x0, x3, #0x1
   1a7ec:	stp	x7, x4, [x28]
   1a7f0:	b	1a614 <__sanitizer_set_report_fd@@Base+0x3364>
   1a7f4:	mov	w24, #0x1                   	// #1
   1a7f8:	mov	w20, #0x0                   	// #0
   1a7fc:	ldr	x3, [x23, #16]
   1a800:	ldr	x19, [x25, #16]
   1a804:	b	1a548 <__sanitizer_set_report_fd@@Base+0x3298>
   1a808:	cbz	x20, 1a91c <__sanitizer_set_report_fd@@Base+0x366c>
   1a80c:	ldr	x19, [x22, #4000]
   1a810:	ldr	x0, [x19]
   1a814:	cbz	x0, 1a8ec <__sanitizer_set_report_fd@@Base+0x363c>
   1a818:	sub	x1, x0, #0x1
   1a81c:	tst	x1, x0
   1a820:	b.ne	1a8c4 <__sanitizer_set_report_fd@@Base+0x3614>  // b.any
   1a824:	add	x1, x20, x1
   1a828:	neg	x0, x0
   1a82c:	and	x21, x1, x0
   1a830:	mov	w2, #0x0                   	// #0
   1a834:	mov	x0, x21
   1a838:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a83c:	add	x1, x1, #0x258
   1a840:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1a844:	ldr	x1, [x23]
   1a848:	mov	x19, x0
   1a84c:	ldr	x2, [x23, #16]
   1a850:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1a854:	ldp	x0, x1, [x23]
   1a858:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1a85c:	stp	x19, x21, [x23]
   1a860:	ldr	x3, [x23, #16]
   1a864:	b	1a720 <__sanitizer_set_report_fd@@Base+0x3470>
   1a868:	mov	x3, x0
   1a86c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a870:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a874:	add	x2, x2, #0x1d8
   1a878:	add	x0, x0, #0xf8
   1a87c:	mov	w1, #0x17b                 	// #379
   1a880:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a884:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a888:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a88c:	add	x2, x2, #0x1b8
   1a890:	add	x0, x0, #0xf8
   1a894:	mov	w1, #0x1be                 	// #446
   1a898:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a89c:	ldp	x21, x22, [sp, #16]
   1a8a0:	ldp	x27, x28, [sp, #64]
   1a8a4:	b	1a6a4 <__sanitizer_set_report_fd@@Base+0x33f4>
   1a8a8:	mov	x0, #0x6                   	// #6
   1a8ac:	str	x1, [sp, #112]
   1a8b0:	bl	6bb0 <getauxval@plt>
   1a8b4:	mov	x2, x0
   1a8b8:	ldp	x0, x1, [sp, #104]
   1a8bc:	str	x2, [x0]
   1a8c0:	b	1a798 <__sanitizer_set_report_fd@@Base+0x34e8>
   1a8c4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a8c8:	add	x0, x0, #0x240
   1a8cc:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1a8d0:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1a8d4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a8d8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a8dc:	add	x2, x2, #0x220
   1a8e0:	add	x0, x0, #0xf8
   1a8e4:	mov	w1, #0x1fd                 	// #509
   1a8e8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a8ec:	mov	x0, #0x6                   	// #6
   1a8f0:	bl	6bb0 <getauxval@plt>
   1a8f4:	str	x0, [x19]
   1a8f8:	b	1a818 <__sanitizer_set_report_fd@@Base+0x3568>
   1a8fc:	mov	x4, x1
   1a900:	mov	x3, x0
   1a904:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a908:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a90c:	add	x2, x2, #0x200
   1a910:	add	x0, x0, #0xf8
   1a914:	mov	w1, #0x17c                 	// #380
   1a918:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a91c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   1a920:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a924:	add	x2, x2, #0xb38
   1a928:	add	x0, x0, #0xf8
   1a92c:	mov	x4, #0x0                   	// #0
   1a930:	mov	x3, #0x0                   	// #0
   1a934:	mov	w1, #0x1fc                 	// #508
   1a938:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1a93c:	nop
   1a940:	mov	x1, x0
   1a944:	ldrsw	x0, [x0, #4]
   1a948:	cmn	x0, #0x1, lsl #12
   1a94c:	b.hi	1a958 <__sanitizer_set_report_fd@@Base+0x36a8>  // b.pmore
   1a950:	mov	x8, #0x39                  	// #57
   1a954:	svc	#0x0
   1a958:	ldp	x0, x1, [x1, #8]
   1a95c:	b	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1a960:	stp	x29, x30, [sp, #-16]!
   1a964:	mov	x0, #0x1                   	// #1
   1a968:	mov	x29, sp
   1a96c:	clz	x1, x29
   1a970:	neg	w1, w1
   1a974:	ldp	x29, x30, [sp], #16
   1a978:	lsl	x0, x0, x1
   1a97c:	sub	x0, x0, #0x1
   1a980:	ret
   1a984:	nop
   1a988:	b	1a960 <__sanitizer_set_report_fd@@Base+0x36b0>
   1a98c:	nop
   1a990:	mov	x0, #0x6                   	// #6
   1a994:	b	6bb0 <getauxval@plt>
   1a998:	stp	x19, x20, [sp, #-32]!
   1a99c:	mov	x2, x0
   1a9a0:	mov	x20, x0
   1a9a4:	mov	x19, x1
   1a9a8:	mov	x3, x1
   1a9ac:	mov	x8, #0x4e                  	// #78
   1a9b0:	mov	x0, #0xffffffffffffff9c    	// #-100
   1a9b4:	stp	x21, x30, [sp, #16]
   1a9b8:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1a9bc:	add	x1, x21, #0x508
   1a9c0:	svc	#0x0
   1a9c4:	cmn	x0, #0x1, lsl #12
   1a9c8:	b.hi	1a9d8 <__sanitizer_set_report_fd@@Base+0x3728>  // b.pmore
   1a9cc:	ldp	x21, x30, [sp, #16]
   1a9d0:	ldp	x19, x20, [sp], #32
   1a9d4:	ret
   1a9d8:	neg	w1, w0
   1a9dc:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1a9e0:	add	x0, x0, #0x6c0
   1a9e4:	bl	1e648 <OnPrint@@Base+0x398>
   1a9e8:	add	x3, x21, #0x508
   1a9ec:	mov	x0, x20
   1a9f0:	mov	x1, x19
   1a9f4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1a9f8:	add	x2, x2, #0x948
   1a9fc:	bl	1e2b8 <OnPrint@@Base+0x8>
   1aa00:	cmp	x19, w0, sxtw
   1aa04:	sxtw	x0, w0
   1aa08:	b.hi	1a9cc <__sanitizer_set_report_fd@@Base+0x371c>  // b.pmore
   1aa0c:	mov	x3, x0
   1aa10:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1aa14:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1aa18:	mov	x4, x19
   1aa1c:	add	x2, x2, #0x720
   1aa20:	add	x0, x0, #0x498
   1aa24:	mov	w1, #0x470                 	// #1136
   1aa28:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1aa2c:	nop
   1aa30:	stp	x19, x20, [sp, #-64]!
   1aa34:	mov	x5, #0x0                   	// #0
   1aa38:	mov	x19, x0
   1aa3c:	mov	x20, x1
   1aa40:	add	x3, sp, #0x38
   1aa44:	add	x2, sp, #0x30
   1aa48:	add	x1, sp, #0x28
   1aa4c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1aa50:	mov	x4, #0x100000              	// #1048576
   1aa54:	add	x0, x0, #0x4f0
   1aa58:	str	x30, [sp, #16]
   1aa5c:	bl	16b30 <__sanitizer_cov_dump@@Base+0x2078>
   1aa60:	tst	w0, #0xff
   1aa64:	b.eq	1aa94 <__sanitizer_set_report_fd@@Base+0x37e4>  // b.none
   1aa68:	ldr	x1, [sp, #40]
   1aa6c:	mov	x2, x20
   1aa70:	mov	x0, x19
   1aa74:	bl	18dd0 <__sanitizer_set_report_fd@@Base+0x1b20>
   1aa78:	ldp	x0, x1, [sp, #40]
   1aa7c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1aa80:	mov	x0, x19
   1aa84:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   1aa88:	ldr	x30, [sp, #16]
   1aa8c:	ldp	x19, x20, [sp], #64
   1aa90:	ret
   1aa94:	mov	x1, x20
   1aa98:	mov	x0, x19
   1aa9c:	bl	1a998 <__sanitizer_set_report_fd@@Base+0x36e8>
   1aaa0:	ldr	x30, [sp, #16]
   1aaa4:	ldp	x19, x20, [sp], #64
   1aaa8:	ret
   1aaac:	nop
   1aab0:	stp	x19, x20, [sp, #-32]!
   1aab4:	mov	x20, x1
   1aab8:	str	x30, [sp, #16]
   1aabc:	ldrb	w1, [x0]
   1aac0:	cbz	w1, 1ab48 <__sanitizer_set_report_fd@@Base+0x3898>
   1aac4:	mov	x2, x0
   1aac8:	ldrb	w3, [x2, #1]!
   1aacc:	cbnz	w3, 1aac8 <__sanitizer_set_report_fd@@Base+0x3818>
   1aad0:	cmp	x0, x2
   1aad4:	b.cs	1ab50 <__sanitizer_set_report_fd@@Base+0x38a0>  // b.hs, b.nlast
   1aad8:	mov	x19, x2
   1aadc:	sub	x2, x2, #0x1
   1aae0:	cmp	x0, x2
   1aae4:	ldurb	w3, [x19, #-1]
   1aae8:	b.eq	1ab3c <__sanitizer_set_report_fd@@Base+0x388c>  // b.none
   1aaec:	cmp	w3, #0x2f
   1aaf0:	b.ne	1aad8 <__sanitizer_set_report_fd@@Base+0x3828>  // b.any
   1aaf4:	mov	x0, x20
   1aaf8:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   1aafc:	mov	x1, x20
   1ab00:	mov	x20, x0
   1ab04:	mov	x2, x20
   1ab08:	mov	x0, x19
   1ab0c:	bl	18b48 <__sanitizer_set_report_fd@@Base+0x1898>
   1ab10:	mov	w1, #0x0                   	// #0
   1ab14:	cbnz	w0, 1ab2c <__sanitizer_set_report_fd@@Base+0x387c>
   1ab18:	ldrb	w0, [x19, x20]
   1ab1c:	sub	w0, w0, #0x2d
   1ab20:	and	w0, w0, #0xff
   1ab24:	cmp	w0, #0x1
   1ab28:	cset	w1, ls  // ls = plast
   1ab2c:	mov	w0, w1
   1ab30:	ldr	x30, [sp, #16]
   1ab34:	ldp	x19, x20, [sp], #32
   1ab38:	ret
   1ab3c:	cmp	w3, #0x2f
   1ab40:	csel	x19, x19, x0, eq  // eq = none
   1ab44:	b	1aaf4 <__sanitizer_set_report_fd@@Base+0x3844>
   1ab48:	mov	x19, x0
   1ab4c:	b	1aaf4 <__sanitizer_set_report_fd@@Base+0x3844>
   1ab50:	mov	x19, x2
   1ab54:	b	1aaf4 <__sanitizer_set_report_fd@@Base+0x3844>
   1ab58:	stp	x19, x20, [sp, #-80]!
   1ab5c:	stp	x21, x22, [sp, #16]
   1ab60:	str	x30, [sp, #72]
   1ab64:	cbz	x0, 1aca8 <__sanitizer_set_report_fd@@Base+0x39f8>
   1ab68:	stp	x25, x26, [sp, #48]
   1ab6c:	mov	x21, x1
   1ab70:	mov	x22, #0xffffffffffffffff    	// #-1
   1ab74:	ldr	x25, [x0]
   1ab78:	ldrh	w0, [x25, #54]
   1ab7c:	ldrh	w20, [x25, #56]
   1ab80:	ldr	x19, [x25, #32]
   1ab84:	and	x1, x0, #0xffff
   1ab88:	mul	w20, w20, w0
   1ab8c:	add	x19, x25, x19
   1ab90:	mov	x0, x19
   1ab94:	add	x20, x19, w20, sxtw
   1ab98:	cmp	x19, x20
   1ab9c:	b.eq	1ac54 <__sanitizer_set_report_fd@@Base+0x39a4>  // b.none
   1aba0:	stp	x23, x24, [sp, #32]
   1aba4:	str	x27, [sp, #64]
   1aba8:	ldr	w2, [x0]
   1abac:	cmp	w2, #0x1
   1abb0:	b.ne	1abc0 <__sanitizer_set_report_fd@@Base+0x3910>  // b.any
   1abb4:	ldr	x2, [x0, #16]
   1abb8:	cmp	x22, x2
   1abbc:	csel	x22, x22, x2, ls  // ls = plast
   1abc0:	add	x0, x0, x1
   1abc4:	cmp	x20, x0
   1abc8:	b.ne	1aba8 <__sanitizer_set_report_fd@@Base+0x38f8>  // b.any
   1abcc:	adrp	x23, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1abd0:	sub	x22, x25, x22
   1abd4:	ldr	x23, [x23, #4000]
   1abd8:	b	1abec <__sanitizer_set_report_fd@@Base+0x393c>
   1abdc:	ldrh	w0, [x25, #54]
   1abe0:	add	x19, x19, x0
   1abe4:	cmp	x20, x19
   1abe8:	b.eq	1ac4c <__sanitizer_set_report_fd@@Base+0x399c>  // b.none
   1abec:	ldr	w0, [x19]
   1abf0:	cmp	w0, #0x1
   1abf4:	b.ne	1abdc <__sanitizer_set_report_fd@@Base+0x392c>  // b.any
   1abf8:	ldr	x0, [x23]
   1abfc:	ldr	x26, [x19, #16]
   1ac00:	neg	x24, x0
   1ac04:	ldr	x1, [x19, #40]
   1ac08:	add	x26, x22, x26
   1ac0c:	and	x24, x24, x26
   1ac10:	add	x27, x26, x1
   1ac14:	cbz	x0, 1ac68 <__sanitizer_set_report_fd@@Base+0x39b8>
   1ac18:	sub	x2, x0, #0x1
   1ac1c:	tst	x2, x0
   1ac20:	b.ne	1ac98 <__sanitizer_set_report_fd@@Base+0x39e8>  // b.any
   1ac24:	add	x2, x2, x27
   1ac28:	neg	x0, x0
   1ac2c:	and	x1, x2, x0
   1ac30:	mov	x0, x24
   1ac34:	sub	x1, x1, x24
   1ac38:	blr	x21
   1ac3c:	ldrh	w0, [x25, #54]
   1ac40:	add	x19, x19, x0
   1ac44:	cmp	x20, x19
   1ac48:	b.ne	1abec <__sanitizer_set_report_fd@@Base+0x393c>  // b.any
   1ac4c:	ldp	x23, x24, [sp, #32]
   1ac50:	ldr	x27, [sp, #64]
   1ac54:	ldp	x21, x22, [sp, #16]
   1ac58:	ldp	x25, x26, [sp, #48]
   1ac5c:	ldr	x30, [sp, #72]
   1ac60:	ldp	x19, x20, [sp], #80
   1ac64:	ret
   1ac68:	mov	x0, #0x6                   	// #6
   1ac6c:	bl	6bb0 <getauxval@plt>
   1ac70:	str	x0, [x23]
   1ac74:	neg	x24, x0
   1ac78:	and	x24, x24, x26
   1ac7c:	cbnz	x0, 1ac18 <__sanitizer_set_report_fd@@Base+0x3968>
   1ac80:	mov	x0, #0x6                   	// #6
   1ac84:	bl	6bb0 <getauxval@plt>
   1ac88:	str	x0, [x23]
   1ac8c:	sub	x2, x0, #0x1
   1ac90:	tst	x2, x0
   1ac94:	b.eq	1ac24 <__sanitizer_set_report_fd@@Base+0x3974>  // b.none
   1ac98:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1ac9c:	add	x0, x0, #0x240
   1aca0:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1aca4:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1aca8:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1acac:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1acb0:	add	x2, x2, #0x748
   1acb4:	add	x0, x0, #0x498
   1acb8:	mov	x4, #0x0                   	// #0
   1acbc:	mov	x3, #0x0                   	// #0
   1acc0:	mov	w1, #0x495                 	// #1173
   1acc4:	stp	x23, x24, [sp, #32]
   1acc8:	stp	x25, x26, [sp, #48]
   1accc:	str	x27, [sp, #64]
   1acd0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1acd4:	nop
   1acd8:	cmp	x0, #0x0
   1acdc:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1ace0:	b.eq	1ad34 <__sanitizer_set_report_fd@@Base+0x3a84>  // b.none
   1ace4:	str	x30, [sp, #-16]!
   1ace8:	mov	x7, x1
   1acec:	ands	x1, x1, #0xf
   1acf0:	b.ne	1ad3c <__sanitizer_set_report_fd@@Base+0x3a8c>  // b.any
   1acf4:	sub	x1, x7, #0x10
   1acf8:	stp	x0, x3, [x7, #-16]
   1acfc:	mov	x0, x2
   1ad00:	mov	x2, x4
   1ad04:	mov	x3, x5
   1ad08:	mov	x4, x6
   1ad0c:	mov	x8, #0xdc                  	// #220
   1ad10:	svc	#0x0
   1ad14:	cmp	x0, #0x0
   1ad18:	b.ne	1ad2c <__sanitizer_set_report_fd@@Base+0x3a7c>  // b.any
   1ad1c:	ldp	x1, x0, [sp], #16
   1ad20:	blr	x1
   1ad24:	mov	x8, #0x5d                  	// #93
   1ad28:	svc	#0x0
   1ad2c:	ldr	x30, [sp], #16
   1ad30:	ret
   1ad34:	mov	x0, #0xffffffffffffffea    	// #-22
   1ad38:	ret
   1ad3c:	mov	x4, x1
   1ad40:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1ad44:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1ad48:	add	x2, x2, #0x760
   1ad4c:	add	x0, x0, #0x498
   1ad50:	mov	x3, #0x0                   	// #0
   1ad54:	mov	w1, #0x54b                 	// #1355
   1ad58:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1ad5c:	nop
   1ad60:	cmp	w0, #0x7
   1ad64:	b.eq	1ae10 <__sanitizer_set_report_fd@@Base+0x3b60>  // b.none
   1ad68:	b.gt	1adb4 <__sanitizer_set_report_fd@@Base+0x3b04>
   1ad6c:	cmp	w0, #0x5
   1ad70:	b.eq	1ae28 <__sanitizer_set_report_fd@@Base+0x3b78>  // b.none
   1ad74:	cmp	w0, #0x6
   1ad78:	b.ne	1ad94 <__sanitizer_set_report_fd@@Base+0x3ae4>  // b.any
   1ad7c:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ad80:	ldr	x0, [x1, #4040]
   1ad84:	ldr	w0, [x0, #80]
   1ad88:	cmp	w0, #0x1
   1ad8c:	b.eq	1add8 <__sanitizer_set_report_fd@@Base+0x3b28>  // b.none
   1ad90:	ret
   1ad94:	cmp	w0, #0x4
   1ad98:	b.ne	1adf0 <__sanitizer_set_report_fd@@Base+0x3b40>  // b.any
   1ad9c:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ada0:	ldr	x0, [x1, #4040]
   1ada4:	ldr	w0, [x0, #84]
   1ada8:	cmp	w0, #0x1
   1adac:	b.ne	1ad90 <__sanitizer_set_report_fd@@Base+0x3ae0>  // b.any
   1adb0:	b	1add8 <__sanitizer_set_report_fd@@Base+0x3b28>
   1adb4:	cmp	w0, #0x8
   1adb8:	b.eq	1adf8 <__sanitizer_set_report_fd@@Base+0x3b48>  // b.none
   1adbc:	cmp	w0, #0xb
   1adc0:	b.ne	1adf0 <__sanitizer_set_report_fd@@Base+0x3b40>  // b.any
   1adc4:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1adc8:	ldr	x0, [x1, #4040]
   1adcc:	ldr	w0, [x0, #72]
   1add0:	cmp	w0, #0x1
   1add4:	b.ne	1ad90 <__sanitizer_set_report_fd@@Base+0x3ae0>  // b.any
   1add8:	ldr	x1, [x1, #4040]
   1addc:	mov	w2, #0x2                   	// #2
   1ade0:	ldrb	w1, [x1, #96]
   1ade4:	cmp	w1, #0x0
   1ade8:	csel	w0, w0, w2, ne  // ne = any
   1adec:	ret
   1adf0:	mov	w0, #0x0                   	// #0
   1adf4:	ret
   1adf8:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1adfc:	ldr	x0, [x1, #4040]
   1ae00:	ldr	w0, [x0, #92]
   1ae04:	cmp	w0, #0x1
   1ae08:	b.ne	1ad90 <__sanitizer_set_report_fd@@Base+0x3ae0>  // b.any
   1ae0c:	b	1add8 <__sanitizer_set_report_fd@@Base+0x3b28>
   1ae10:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ae14:	ldr	x0, [x1, #4040]
   1ae18:	ldr	w0, [x0, #76]
   1ae1c:	cmp	w0, #0x1
   1ae20:	b.ne	1ad90 <__sanitizer_set_report_fd@@Base+0x3ae0>  // b.any
   1ae24:	b	1add8 <__sanitizer_set_report_fd@@Base+0x3b28>
   1ae28:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ae2c:	ldr	x0, [x1, #4040]
   1ae30:	ldr	w0, [x0, #88]
   1ae34:	cmp	w0, #0x1
   1ae38:	b.ne	1ad90 <__sanitizer_set_report_fd@@Base+0x3ae0>  // b.any
   1ae3c:	b	1add8 <__sanitizer_set_report_fd@@Base+0x3b28>
   1ae40:	stp	x19, x20, [sp, #-320]!
   1ae44:	mov	x2, #0x80                  	// #128
   1ae48:	add	x20, sp, #0x40
   1ae4c:	stp	x21, x22, [sp, #16]
   1ae50:	mov	x21, x0
   1ae54:	mov	x22, x1
   1ae58:	mov	x0, x20
   1ae5c:	mov	w1, #0xff                  	// #255
   1ae60:	str	x30, [sp, #32]
   1ae64:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   1ae68:	add	x19, sp, #0xc0
   1ae6c:	ldrb	w4, [sp, #68]
   1ae70:	mov	x1, x20
   1ae74:	mov	x2, x19
   1ae78:	mov	x8, #0x87                  	// #135
   1ae7c:	and	w4, w4, #0xfffffffe
   1ae80:	mov	x0, #0x2                   	// #2
   1ae84:	mov	x3, #0x8                   	// #8
   1ae88:	strb	w4, [sp, #68]
   1ae8c:	svc	#0x0
   1ae90:	mov	x1, #0x0                   	// #0
   1ae94:	mov	x3, x22
   1ae98:	mov	x2, x21
   1ae9c:	add	x0, sp, #0x38
   1aea0:	bl	6c10 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>
   1aea4:	mov	x1, x19
   1aea8:	mov	x8, #0x87                  	// #135
   1aeac:	mov	x0, #0x2                   	// #2
   1aeb0:	mov	x2, #0x0                   	// #0
   1aeb4:	mov	x3, #0x8                   	// #8
   1aeb8:	svc	#0x0
   1aebc:	ldp	x21, x22, [sp, #16]
   1aec0:	ldr	x30, [sp, #32]
   1aec4:	ldr	x0, [sp, #56]
   1aec8:	ldp	x19, x20, [sp], #320
   1aecc:	ret
   1aed0:	mov	x1, #0x0                   	// #0
   1aed4:	b	68d0 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>
   1aed8:	ldr	x0, [x0, #8]
   1aedc:	add	x1, x0, #0x1d0
   1aee0:	ldr	w0, [x0, #468]
   1aee4:	cbz	w0, 1af18 <__sanitizer_set_report_fd@@Base+0x3c68>
   1aee8:	mov	w3, #0x5201                	// #20993
   1aeec:	movk	w3, #0x4553, lsl #16
   1aef0:	b	1af00 <__sanitizer_set_report_fd@@Base+0x3c50>
   1aef4:	add	x1, x1, w0, uxtw
   1aef8:	ldr	w0, [x1, #4]
   1aefc:	cbz	w0, 1af18 <__sanitizer_set_report_fd@@Base+0x3c68>
   1af00:	ldr	w2, [x1]
   1af04:	cmp	w2, w3
   1af08:	b.ne	1aef4 <__sanitizer_set_report_fd@@Base+0x3c44>  // b.any
   1af0c:	ldr	x0, [x1, #8]
   1af10:	ubfx	w0, w0, #6, #1
   1af14:	add	w0, w0, #0x1
   1af18:	ret
   1af1c:	nop
   1af20:	ret
   1af24:	nop
   1af28:	ldr	x1, [x0, #8]
   1af2c:	ldr	x2, [x1, #416]
   1af30:	ldp	x3, x1, [x1, #432]
   1af34:	stp	x1, x3, [x0, #24]
   1af38:	str	x2, [x0, #40]
   1af3c:	ret
   1af40:	ret
   1af44:	nop
   1af48:	ret
   1af4c:	nop
   1af50:	ret
   1af54:	nop
   1af58:	tbnz	w1, #3, 1af60 <__sanitizer_set_report_fd@@Base+0x3cb0>
   1af5c:	ret
   1af60:	mov	x2, x0
   1af64:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1af68:	add	x0, x1, #0x788
   1af6c:	mov	x1, x2
   1af70:	str	x30, [sp, #-16]!
   1af74:	bl	1e648 <OnPrint@@Base+0x398>
   1af78:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1af7c:	nop
   1af80:	str	x30, [sp, #-16]!
   1af84:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1af88:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1af8c:	add	x2, x2, #0x8a0
   1af90:	add	x0, x0, #0x498
   1af94:	mov	x4, #0x0                   	// #0
   1af98:	mov	x3, #0x0                   	// #0
   1af9c:	mov	w1, #0x80a                 	// #2058
   1afa0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1afa4:	nop
   1afa8:	sub	x5, x1, #0x1
   1afac:	mov	x3, x1
   1afb0:	cmp	x5, #0xff
   1afb4:	mov	x4, x0
   1afb8:	and	w2, w2, #0xff
   1afbc:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
   1afc0:	b.ne	1afcc <__sanitizer_set_report_fd@@Base+0x3d1c>  // b.any
   1afc4:	mov	w0, #0x0                   	// #0
   1afc8:	ret
   1afcc:	adrp	x5, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1afd0:	add	x5, x5, #0xc38
   1afd4:	ldrb	w6, [x5, #24]
   1afd8:	tst	w6, #0xff
   1afdc:	b.ne	1b004 <__sanitizer_set_report_fd@@Base+0x3d54>  // b.any
   1afe0:	eor	w2, w2, #0x1
   1afe4:	mov	x8, #0x116                 	// #278
   1afe8:	and	x2, x2, #0xff
   1afec:	svc	#0x0
   1aff0:	cmn	x0, #0x1, lsl #12
   1aff4:	b.hi	1b058 <__sanitizer_set_report_fd@@Base+0x3da8>  // b.pmore
   1aff8:	cmp	x1, x0
   1affc:	mov	w0, #0x1                   	// #1
   1b000:	b.eq	1afc8 <__sanitizer_set_report_fd@@Base+0x3d18>  // b.none
   1b004:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b008:	mov	x8, #0x38                  	// #56
   1b00c:	add	x1, x1, #0x8e0
   1b010:	mov	x0, #0xffffffffffffff9c    	// #-100
   1b014:	mov	x2, #0x0                   	// #0
   1b018:	svc	#0x0
   1b01c:	cmn	x0, #0x1, lsl #12
   1b020:	b.hi	1afc4 <__sanitizer_set_report_fd@@Base+0x3d14>  // b.pmore
   1b024:	sxtw	x5, w0
   1b028:	mov	x0, x5
   1b02c:	mov	x1, x4
   1b030:	mov	x2, x3
   1b034:	mov	x8, #0x3f                  	// #63
   1b038:	svc	#0x0
   1b03c:	cmn	x0, #0x1, lsl #12
   1b040:	b.hi	1b06c <__sanitizer_set_report_fd@@Base+0x3dbc>  // b.pmore
   1b044:	mov	x0, x5
   1b048:	mov	x8, #0x39                  	// #57
   1b04c:	svc	#0x0
   1b050:	mov	w0, #0x1                   	// #1
   1b054:	ret
   1b058:	cmn	w0, #0x26
   1b05c:	b.ne	1b004 <__sanitizer_set_report_fd@@Base+0x3d54>  // b.any
   1b060:	mov	w0, #0x1                   	// #1
   1b064:	strb	w0, [x5, #24]
   1b068:	b	1b004 <__sanitizer_set_report_fd@@Base+0x3d54>
   1b06c:	cmn	w0, #0x4
   1b070:	b.eq	1b028 <__sanitizer_set_report_fd@@Base+0x3d78>  // b.none
   1b074:	mov	w0, #0x0                   	// #0
   1b078:	b	1afc8 <__sanitizer_set_report_fd@@Base+0x3d18>
   1b07c:	nop
   1b080:	stp	x19, x20, [sp, #-176]!
   1b084:	stp	x21, x22, [sp, #16]
   1b088:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b08c:	mov	x21, x2
   1b090:	ldr	x19, [x22, #4000]
   1b094:	stp	x23, x24, [sp, #32]
   1b098:	stp	x25, x30, [sp, #48]
   1b09c:	mov	x25, x0
   1b0a0:	ldr	x1, [x19]
   1b0a4:	stp	xzr, xzr, [sp, #72]
   1b0a8:	str	xzr, [sp, #88]
   1b0ac:	cbz	x1, 1b29c <__sanitizer_set_report_fd@@Base+0x3fec>
   1b0b0:	sub	x19, x1, #0x1
   1b0b4:	ands	x19, x19, x1
   1b0b8:	b.ne	1b3b0 <__sanitizer_set_report_fd@@Base+0x4100>  // b.any
   1b0bc:	add	x24, x1, #0xfff
   1b0c0:	neg	x1, x1
   1b0c4:	and	x24, x24, x1
   1b0c8:	mov	w2, #0x0                   	// #0
   1b0cc:	mov	x0, x24
   1b0d0:	adrp	x23, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1b0d4:	add	x1, x23, #0x258
   1b0d8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1b0dc:	ldr	x1, [sp, #72]
   1b0e0:	mov	x20, x0
   1b0e4:	ldr	x2, [sp, #88]
   1b0e8:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1b0ec:	ldp	x0, x1, [sp, #72]
   1b0f0:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1b0f4:	stp	x20, x24, [sp, #72]
   1b0f8:	ldr	x2, [sp, #88]
   1b0fc:	cmp	x2, #0xfff
   1b100:	b.hi	1b124 <__sanitizer_set_report_fd@@Base+0x3e74>  // b.pmore
   1b104:	cmp	x24, #0xfff
   1b108:	b.ls	1b358 <__sanitizer_set_report_fd@@Base+0x40a8>  // b.plast
   1b10c:	mov	x3, #0x1000                	// #4096
   1b110:	add	x0, x20, x2
   1b114:	mov	w1, #0x0                   	// #0
   1b118:	sub	x2, x3, x2
   1b11c:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   1b120:	ldr	x20, [sp, #72]
   1b124:	mov	x0, #0x1000                	// #4096
   1b128:	stp	x0, xzr, [sp, #88]
   1b12c:	strb	wzr, [x20]
   1b130:	ldrb	w0, [x21, #8]
   1b134:	cbnz	w0, 1b288 <__sanitizer_set_report_fd@@Base+0x3fd8>
   1b138:	ldr	x2, [x25, #8]
   1b13c:	cbz	x2, 1b150 <__sanitizer_set_report_fd@@Base+0x3ea0>
   1b140:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1b144:	add	x0, sp, #0x48
   1b148:	add	x1, x1, #0x948
   1b14c:	bl	1e6d0 <OnPrint@@Base+0x420>
   1b150:	ldr	x1, [sp, #88]
   1b154:	ldr	x0, [sp, #72]
   1b158:	cbz	x1, 1b3c0 <__sanitizer_set_report_fd@@Base+0x4110>
   1b15c:	ldrb	w1, [x0]
   1b160:	cbz	w1, 1b268 <__sanitizer_set_report_fd@@Base+0x3fb8>
   1b164:	add	x24, sp, #0x68
   1b168:	mov	x2, #0x10                  	// #16
   1b16c:	mov	w1, #0x0                   	// #0
   1b170:	add	x0, x24, #0x1c
   1b174:	stp	xzr, xzr, [sp, #104]
   1b178:	mov	w20, #0x0                   	// #0
   1b17c:	str	xzr, [sp, #120]
   1b180:	str	wzr, [sp, #128]
   1b184:	strb	wzr, [sp, #148]
   1b188:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   1b18c:	ldr	x2, [x25]
   1b190:	mov	x0, x24
   1b194:	ldr	x1, [sp, #72]
   1b198:	stp	xzr, xzr, [sp, #152]
   1b19c:	str	xzr, [sp, #168]
   1b1a0:	bl	13848 <__sancov_default_options@@Base+0x2c50>
   1b1a4:	ldrh	w3, [x25, #24]
   1b1a8:	cbnz	w3, 1b1c0 <__sanitizer_set_report_fd@@Base+0x3f10>
   1b1ac:	b	1b218 <__sanitizer_set_report_fd@@Base+0x3f68>
   1b1b0:	add	w20, w20, #0x1
   1b1b4:	add	x19, x19, #0x38
   1b1b8:	cmp	w3, w20
   1b1bc:	b.le	1b218 <__sanitizer_set_report_fd@@Base+0x3f68>
   1b1c0:	ldr	x1, [x25, #16]
   1b1c4:	add	x2, x1, x19
   1b1c8:	ldr	w1, [x1, x19]
   1b1cc:	cmp	w1, #0x1
   1b1d0:	b.ne	1b1b0 <__sanitizer_set_report_fd@@Base+0x3f00>  // b.any
   1b1d4:	ldr	x1, [x25]
   1b1d8:	mov	x0, x24
   1b1dc:	ldr	x4, [x2, #16]
   1b1e0:	mov	x5, #0x0                   	// #0
   1b1e4:	ldr	w3, [x2, #4]
   1b1e8:	add	w20, w20, #0x1
   1b1ec:	ldr	x2, [x2, #40]
   1b1f0:	add	x1, x1, x4
   1b1f4:	ubfx	x4, x3, #1, #1
   1b1f8:	and	w3, w3, #0x1
   1b1fc:	add	x2, x1, x2
   1b200:	bl	138e0 <__sancov_default_options@@Base+0x2ce8>
   1b204:	ldrh	w3, [x25, #24]
   1b208:	add	x19, x19, #0x38
   1b20c:	cmp	w3, w20
   1b210:	b.gt	1b1c0 <__sanitizer_set_report_fd@@Base+0x3f10>
   1b214:	nop
   1b218:	ldr	x19, [x21]
   1b21c:	mov	x0, #0xe38f                	// #58255
   1b220:	movk	x0, #0x8e38, lsl #16
   1b224:	movk	x0, #0x38e3, lsl #32
   1b228:	ldp	x4, x3, [x19, #8]
   1b22c:	movk	x0, #0xe38e, lsl #48
   1b230:	umulh	x4, x4, x0
   1b234:	lsr	x4, x4, #6
   1b238:	cmp	x3, x4
   1b23c:	b.hi	1b3ec <__sanitizer_set_report_fd@@Base+0x413c>  // b.pmore
   1b240:	add	x0, x3, #0x1
   1b244:	b.eq	1b2ac <__sanitizer_set_report_fd@@Base+0x3ffc>  // b.none
   1b248:	ldr	x21, [x19]
   1b24c:	add	x3, x3, x3, lsl #3
   1b250:	str	x0, [x19, #16]
   1b254:	mov	x1, x24
   1b258:	add	x0, x21, x3, lsl #3
   1b25c:	mov	x2, #0x48                  	// #72
   1b260:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1b264:	ldr	x0, [sp, #72]
   1b268:	ldr	x1, [sp, #80]
   1b26c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1b270:	mov	w0, #0x0                   	// #0
   1b274:	ldp	x21, x22, [sp, #16]
   1b278:	ldp	x23, x24, [sp, #32]
   1b27c:	ldp	x25, x30, [sp, #48]
   1b280:	ldp	x19, x20, [sp], #176
   1b284:	ret
   1b288:	ldr	x0, [sp, #72]
   1b28c:	strb	wzr, [x21, #8]
   1b290:	ldr	x1, [sp, #88]
   1b294:	bl	13c60 <__sancov_default_options@@Base+0x3068>
   1b298:	b	1b150 <__sanitizer_set_report_fd@@Base+0x3ea0>
   1b29c:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1b2a0:	mov	x1, x0
   1b2a4:	str	x0, [x19]
   1b2a8:	b	1b0b0 <__sanitizer_set_report_fd@@Base+0x3e00>
   1b2ac:	tst	x3, x0
   1b2b0:	b.eq	1b2ec <__sanitizer_set_report_fd@@Base+0x403c>  // b.none
   1b2b4:	clz	x2, x0
   1b2b8:	mov	w1, #0x3f                  	// #63
   1b2bc:	sub	w1, w1, w2
   1b2c0:	mov	x2, #0x1                   	// #1
   1b2c4:	add	w4, w1, #0x1
   1b2c8:	lsl	x4, x2, x4
   1b2cc:	cmp	x0, x4
   1b2d0:	b.cs	1b448 <__sanitizer_set_report_fd@@Base+0x4198>  // b.hs, b.nlast
   1b2d4:	lsl	x1, x2, x1
   1b2d8:	cmp	x0, x1
   1b2dc:	b.ls	1b428 <__sanitizer_set_report_fd@@Base+0x4178>  // b.plast
   1b2e0:	cmp	x3, x4
   1b2e4:	b.hi	1b410 <__sanitizer_set_report_fd@@Base+0x4160>  // b.pmore
   1b2e8:	mov	x0, x4
   1b2ec:	ldr	x22, [x22, #4000]
   1b2f0:	add	x0, x0, x0, lsl #3
   1b2f4:	lsl	x20, x0, #3
   1b2f8:	ldr	x0, [x22]
   1b2fc:	cbz	x0, 1b404 <__sanitizer_set_report_fd@@Base+0x4154>
   1b300:	sub	x1, x0, #0x1
   1b304:	tst	x0, x1
   1b308:	b.ne	1b3b0 <__sanitizer_set_report_fd@@Base+0x4100>  // b.any
   1b30c:	add	x20, x20, x1
   1b310:	neg	x0, x0
   1b314:	and	x20, x20, x0
   1b318:	add	x1, x23, #0x258
   1b31c:	mov	w2, #0x0                   	// #0
   1b320:	mov	x0, x20
   1b324:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1b328:	mov	x21, x0
   1b32c:	ldr	x2, [x19, #16]
   1b330:	ldr	x1, [x19]
   1b334:	add	x2, x2, x2, lsl #3
   1b338:	lsl	x2, x2, #3
   1b33c:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1b340:	ldp	x0, x1, [x19]
   1b344:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1b348:	stp	x21, x20, [x19]
   1b34c:	ldr	x3, [x19, #16]
   1b350:	add	x0, x3, #0x1
   1b354:	b	1b24c <__sanitizer_set_report_fd@@Base+0x3f9c>
   1b358:	ldr	x20, [x22, #4000]
   1b35c:	ldr	x0, [x20]
   1b360:	cbz	x0, 1b3e0 <__sanitizer_set_report_fd@@Base+0x4130>
   1b364:	sub	x1, x0, #0x1
   1b368:	tst	x1, x0
   1b36c:	b.ne	1b3b0 <__sanitizer_set_report_fd@@Base+0x4100>  // b.any
   1b370:	add	x24, x0, #0xfff
   1b374:	neg	x0, x0
   1b378:	and	x24, x24, x0
   1b37c:	add	x1, x23, #0x258
   1b380:	mov	w2, #0x0                   	// #0
   1b384:	mov	x0, x24
   1b388:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1b38c:	mov	x20, x0
   1b390:	ldr	x1, [sp, #72]
   1b394:	ldr	x2, [sp, #88]
   1b398:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1b39c:	ldp	x0, x1, [sp, #72]
   1b3a0:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1b3a4:	stp	x20, x24, [sp, #72]
   1b3a8:	ldr	x2, [sp, #88]
   1b3ac:	b	1b10c <__sanitizer_set_report_fd@@Base+0x3e5c>
   1b3b0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1b3b4:	add	x0, x0, #0x240
   1b3b8:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1b3bc:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1b3c0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1b3c4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1b3c8:	add	x2, x2, #0xe0
   1b3cc:	add	x0, x0, #0xf8
   1b3d0:	mov	x4, #0x0                   	// #0
   1b3d4:	mov	x3, #0x0                   	// #0
   1b3d8:	mov	w1, #0x1b6                 	// #438
   1b3dc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b3e0:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1b3e4:	str	x0, [x20]
   1b3e8:	b	1b364 <__sanitizer_set_report_fd@@Base+0x40b4>
   1b3ec:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1b3f0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1b3f4:	add	x2, x2, #0x1b8
   1b3f8:	add	x0, x0, #0xf8
   1b3fc:	mov	w1, #0x1be                 	// #446
   1b400:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b404:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1b408:	str	x0, [x22]
   1b40c:	b	1b300 <__sanitizer_set_report_fd@@Base+0x4050>
   1b410:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1b414:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1b418:	add	x2, x2, #0x220
   1b41c:	add	x0, x0, #0xf8
   1b420:	mov	w1, #0x1fd                 	// #509
   1b424:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b428:	mov	x4, x1
   1b42c:	mov	x3, x0
   1b430:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1b434:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1b438:	add	x2, x2, #0x200
   1b43c:	add	x0, x0, #0xf8
   1b440:	mov	w1, #0x17c                 	// #380
   1b444:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b448:	mov	x3, x0
   1b44c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1b450:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1b454:	add	x2, x2, #0x1d8
   1b458:	add	x0, x0, #0xf8
   1b45c:	mov	w1, #0x17b                 	// #379
   1b460:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b464:	nop
   1b468:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b46c:	ldr	x3, [x3, #3496]
   1b470:	cbz	x3, 1b478 <__sanitizer_set_report_fd@@Base+0x41c8>
   1b474:	b	10510 <_ZdaPvmSt11align_val_t@@Base+0x60>
   1b478:	b	6b00 <sigaction@plt>
   1b47c:	nop
   1b480:	stp	x19, x20, [sp, #-192]!
   1b484:	str	x30, [sp, #48]
   1b488:	cbz	x1, 1b5f4 <__sanitizer_set_report_fd@@Base+0x4344>
   1b48c:	stp	x23, x24, [sp, #32]
   1b490:	mov	x24, x2
   1b494:	cbz	x2, 1b61c <__sanitizer_set_report_fd@@Base+0x436c>
   1b498:	mov	x20, x1
   1b49c:	and	w0, w0, #0xff
   1b4a0:	cbz	w0, 1b53c <__sanitizer_set_report_fd@@Base+0x428c>
   1b4a4:	stp	x21, x22, [sp, #16]
   1b4a8:	add	x21, sp, #0x40
   1b4ac:	mov	x1, x21
   1b4b0:	mov	w0, #0x3                   	// #3
   1b4b4:	bl	6cb0 <getrlimit@plt>
   1b4b8:	sxtw	x19, w0
   1b4bc:	cbnz	w0, 1b640 <__sanitizer_set_report_fd@@Base+0x4390>
   1b4c0:	add	x22, sp, #0x50
   1b4c4:	mov	w1, #0x1                   	// #1
   1b4c8:	mov	x0, x22
   1b4cc:	add	x23, sp, #0x70
   1b4d0:	bl	1ea18 <OnPrint@@Base+0x768>
   1b4d4:	stp	xzr, xzr, [sp, #136]
   1b4d8:	str	xzr, [sp, #184]
   1b4dc:	b	1b4f0 <__sanitizer_set_report_fd@@Base+0x4240>
   1b4e0:	ldr	x0, [sp, #120]
   1b4e4:	cmp	x0, x21
   1b4e8:	b.hi	1b5a0 <__sanitizer_set_report_fd@@Base+0x42f0>  // b.pmore
   1b4ec:	mov	x19, x0
   1b4f0:	mov	x1, x23
   1b4f4:	mov	x0, x22
   1b4f8:	bl	1f018 <OnPrint@@Base+0xd68>
   1b4fc:	tst	w0, #0xff
   1b500:	b.ne	1b4e0 <__sanitizer_set_report_fd@@Base+0x4230>  // b.any
   1b504:	ldr	x0, [sp, #112]
   1b508:	cmp	x0, x21
   1b50c:	b.hi	1b51c <__sanitizer_set_report_fd@@Base+0x426c>  // b.pmore
   1b510:	ldr	x3, [sp, #120]
   1b514:	cmp	x3, x21
   1b518:	b.hi	1b5b0 <__sanitizer_set_report_fd@@Base+0x4300>  // b.pmore
   1b51c:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b520:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b524:	add	x2, x2, #0x9a0
   1b528:	add	x0, x0, #0x910
   1b52c:	mov	x4, #0x0                   	// #0
   1b530:	mov	x3, #0x0                   	// #0
   1b534:	mov	w1, #0x6a                  	// #106
   1b538:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b53c:	add	x19, sp, #0x70
   1b540:	str	xzr, [sp, #64]
   1b544:	mov	x0, x19
   1b548:	str	xzr, [sp, #80]
   1b54c:	bl	6800 <pthread_attr_init@plt>
   1b550:	bl	6c50 <pthread_self@plt>
   1b554:	mov	x1, x19
   1b558:	bl	67a0 <pthread_getattr_np@plt>
   1b55c:	sxtw	x3, w0
   1b560:	cbnz	w0, 1b660 <__sanitizer_set_report_fd@@Base+0x43b0>
   1b564:	add	x2, sp, #0x40
   1b568:	add	x1, sp, #0x50
   1b56c:	mov	x0, x19
   1b570:	bl	1d5d0 <__sanitizer_set_report_fd@@Base+0x6320>
   1b574:	mov	x0, x19
   1b578:	bl	68f0 <pthread_attr_destroy@plt>
   1b57c:	ldr	x0, [sp, #64]
   1b580:	ldr	x1, [sp, #80]
   1b584:	ldr	x30, [sp, #48]
   1b588:	add	x0, x0, x1
   1b58c:	str	x0, [x20]
   1b590:	str	x1, [x24]
   1b594:	ldp	x23, x24, [sp, #32]
   1b598:	ldp	x19, x20, [sp], #192
   1b59c:	ret
   1b5a0:	ldr	x1, [sp, #112]
   1b5a4:	cmp	x1, x21
   1b5a8:	b.hi	1b51c <__sanitizer_set_report_fd@@Base+0x426c>  // b.pmore
   1b5ac:	mov	x3, x0
   1b5b0:	ldr	x1, [sp, #64]
   1b5b4:	mov	x2, #0x40000000            	// #1073741824
   1b5b8:	sub	x19, x3, x19
   1b5bc:	str	x3, [x20]
   1b5c0:	cmp	x1, x2
   1b5c4:	mov	x0, x22
   1b5c8:	csel	x1, x1, x2, ls  // ls = plast
   1b5cc:	cmp	x19, x1
   1b5d0:	csel	x19, x19, x1, ls  // ls = plast
   1b5d4:	sub	x3, x3, x19
   1b5d8:	str	x3, [x24]
   1b5dc:	bl	1e8e8 <OnPrint@@Base+0x638>
   1b5e0:	ldp	x21, x22, [sp, #16]
   1b5e4:	ldp	x23, x24, [sp, #32]
   1b5e8:	ldr	x30, [sp, #48]
   1b5ec:	ldp	x19, x20, [sp], #192
   1b5f0:	ret
   1b5f4:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b5f8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b5fc:	add	x2, x2, #0x8f8
   1b600:	add	x0, x0, #0x910
   1b604:	mov	x4, #0x0                   	// #0
   1b608:	mov	x3, #0x0                   	// #0
   1b60c:	mov	w1, #0x5b                  	// #91
   1b610:	stp	x21, x22, [sp, #16]
   1b614:	stp	x23, x24, [sp, #32]
   1b618:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b61c:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b620:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b624:	add	x2, x2, #0x958
   1b628:	add	x0, x0, #0x910
   1b62c:	mov	x4, #0x0                   	// #0
   1b630:	mov	x3, #0x0                   	// #0
   1b634:	mov	w1, #0x5c                  	// #92
   1b638:	stp	x21, x22, [sp, #16]
   1b63c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b640:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b644:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b648:	mov	x3, x19
   1b64c:	add	x2, x2, #0x970
   1b650:	add	x0, x0, #0x910
   1b654:	mov	x4, #0x0                   	// #0
   1b658:	mov	w1, #0x60                  	// #96
   1b65c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b660:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b664:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b668:	add	x2, x2, #0x9e8
   1b66c:	add	x0, x0, #0x910
   1b670:	mov	x4, #0x0                   	// #0
   1b674:	mov	w1, #0x88                  	// #136
   1b678:	stp	x21, x22, [sp, #16]
   1b67c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b680:	stp	x19, x20, [sp, #-48]!
   1b684:	mov	x19, x0
   1b688:	mov	x20, x1
   1b68c:	mov	x0, #0xffffffffffffffff    	// #-1
   1b690:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b694:	add	x1, x1, #0xa20
   1b698:	str	x30, [sp, #16]
   1b69c:	bl	6830 <dlsym@plt>
   1b6a0:	str	x0, [sp, #32]
   1b6a4:	cbz	x0, 1b6e0 <__sanitizer_set_report_fd@@Base+0x4430>
   1b6a8:	add	x1, sp, #0x20
   1b6ac:	add	x0, sp, #0x28
   1b6b0:	mov	x2, #0x8                   	// #8
   1b6b4:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1b6b8:	ldr	x3, [sp, #40]
   1b6bc:	mov	x1, x20
   1b6c0:	mov	x0, x19
   1b6c4:	mov	w2, #0x1                   	// #1
   1b6c8:	blr	x3
   1b6cc:	cmp	w0, #0x0
   1b6d0:	cset	w0, eq  // eq = none
   1b6d4:	ldr	x30, [sp, #16]
   1b6d8:	ldp	x19, x20, [sp], #48
   1b6dc:	ret
   1b6e0:	mov	w0, #0x0                   	// #0
   1b6e4:	ldr	x30, [sp, #16]
   1b6e8:	ldp	x19, x20, [sp], #48
   1b6ec:	ret
   1b6f0:	str	x30, [sp, #-48]!
   1b6f4:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b6f8:	mov	x0, #0xffffffffffffffff    	// #-1
   1b6fc:	add	x1, x1, #0xa28
   1b700:	bl	6830 <dlsym@plt>
   1b704:	mov	x3, x0
   1b708:	mov	x2, #0x8                   	// #8
   1b70c:	add	x1, sp, #0x20
   1b710:	add	x0, sp, #0x28
   1b714:	stp	xzr, xzr, [sp, #16]
   1b718:	str	x3, [sp, #32]
   1b71c:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1b720:	ldr	x2, [sp, #40]
   1b724:	cbz	x2, 1b798 <__sanitizer_set_report_fd@@Base+0x44e8>
   1b728:	add	x1, sp, #0x18
   1b72c:	add	x0, sp, #0x10
   1b730:	blr	x2
   1b734:	ldr	x1, [sp, #24]
   1b738:	cmp	x1, #0xf
   1b73c:	b.ls	1b770 <__sanitizer_set_report_fd@@Base+0x44c0>  // b.plast
   1b740:	sub	x0, x1, #0x1
   1b744:	tst	x0, x1
   1b748:	b.ne	1b7b8 <__sanitizer_set_report_fd@@Base+0x4508>  // b.any
   1b74c:	ldr	x0, [sp, #16]
   1b750:	adrp	x2, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1b754:	add	x0, x0, x1
   1b758:	neg	x1, x1
   1b75c:	sub	x0, x0, #0x1
   1b760:	and	x0, x0, x1
   1b764:	str	x0, [x2, #3160]
   1b768:	ldr	x30, [sp], #48
   1b76c:	ret
   1b770:	ldr	x0, [sp, #16]
   1b774:	mov	x1, #0x10                  	// #16
   1b778:	adrp	x2, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1b77c:	add	x0, x0, x1
   1b780:	neg	x1, x1
   1b784:	sub	x0, x0, #0x1
   1b788:	and	x0, x0, x1
   1b78c:	str	x0, [x2, #3160]
   1b790:	ldr	x30, [sp], #48
   1b794:	ret
   1b798:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b79c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b7a0:	add	x2, x2, #0xa40
   1b7a4:	add	x0, x0, #0x910
   1b7a8:	mov	x4, #0x0                   	// #0
   1b7ac:	mov	x3, #0x0                   	// #0
   1b7b0:	mov	w1, #0xd4                  	// #212
   1b7b4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b7b8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1b7bc:	add	x0, x0, #0x240
   1b7c0:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1b7c4:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1b7c8:	adrp	x1, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1b7cc:	add	x1, x1, #0xc58
   1b7d0:	ldr	x0, [x1, #8]
   1b7d4:	cbnz	x0, 1b7e4 <__sanitizer_set_report_fd@@Base+0x4534>
   1b7d8:	mov	x2, #0x6f0                 	// #1776
   1b7dc:	mov	x0, x2
   1b7e0:	str	x2, [x1, #8]
   1b7e4:	ret
   1b7e8:	mov	x0, #0x10                  	// #16
   1b7ec:	ret
   1b7f0:	adrp	x1, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1b7f4:	add	x1, x1, #0xc58
   1b7f8:	mrs	x2, tpidr_el0
   1b7fc:	ldr	x0, [x1, #8]
   1b800:	cbnz	x0, 1b810 <__sanitizer_set_report_fd@@Base+0x4560>
   1b804:	mov	x3, #0x6f0                 	// #1776
   1b808:	mov	x0, x3
   1b80c:	str	x3, [x1, #8]
   1b810:	sub	x0, x2, x0
   1b814:	ret
   1b818:	adrp	x0, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1b81c:	ldr	x0, [x0, #3160]
   1b820:	ret
   1b824:	nop
   1b828:	adrp	x6, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1b82c:	add	x7, x6, #0xc58
   1b830:	stp	x19, x20, [sp, #-64]!
   1b834:	mov	x20, x1
   1b838:	mov	x19, x3
   1b83c:	ldr	x5, [x7, #8]
   1b840:	stp	x21, x22, [sp, #16]
   1b844:	mov	x22, x2
   1b848:	stp	x23, x30, [sp, #32]
   1b84c:	mov	x21, x4
   1b850:	and	w23, w0, #0xff
   1b854:	mrs	x0, tpidr_el0
   1b858:	cbnz	x5, 1b868 <__sanitizer_set_report_fd@@Base+0x45b8>
   1b85c:	mov	x1, #0x6f0                 	// #1776
   1b860:	mov	x5, x1
   1b864:	str	x1, [x7, #8]
   1b868:	sub	x0, x0, x5
   1b86c:	str	x0, [x19]
   1b870:	ldr	x0, [x6, #3160]
   1b874:	str	x0, [x21]
   1b878:	add	x1, sp, #0x30
   1b87c:	mov	w0, w23
   1b880:	add	x2, sp, #0x38
   1b884:	bl	1b480 <__sanitizer_set_report_fd@@Base+0x41d0>
   1b888:	ldp	x0, x1, [sp, #48]
   1b88c:	str	x1, [x20]
   1b890:	sub	x0, x0, x1
   1b894:	str	x0, [x22]
   1b898:	cbnz	w23, 1b8e4 <__sanitizer_set_report_fd@@Base+0x4634>
   1b89c:	ldr	x3, [x19]
   1b8a0:	ldr	x4, [x20]
   1b8a4:	cmp	x3, x4
   1b8a8:	b.ls	1b8e4 <__sanitizer_set_report_fd@@Base+0x4634>  // b.plast
   1b8ac:	add	x1, x0, x4
   1b8b0:	cmp	x3, x1
   1b8b4:	b.cs	1b8e4 <__sanitizer_set_report_fd@@Base+0x4634>  // b.hs, b.nlast
   1b8b8:	ldr	x2, [x21]
   1b8bc:	add	x3, x3, x2
   1b8c0:	cmp	x4, x3
   1b8c4:	b.cs	1b8f4 <__sanitizer_set_report_fd@@Base+0x4644>  // b.hs, b.nlast
   1b8c8:	cmp	x1, x3
   1b8cc:	b.cc	1b90c <__sanitizer_set_report_fd@@Base+0x465c>  // b.lo, b.ul, b.last
   1b8d0:	sub	x0, x0, x2
   1b8d4:	str	x0, [x22]
   1b8d8:	ldr	x1, [x20]
   1b8dc:	add	x0, x1, x0
   1b8e0:	str	x0, [x19]
   1b8e4:	ldp	x21, x22, [sp, #16]
   1b8e8:	ldp	x23, x30, [sp, #32]
   1b8ec:	ldp	x19, x20, [sp], #64
   1b8f0:	ret
   1b8f4:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b8f8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b8fc:	add	x2, x2, #0xa58
   1b900:	add	x0, x0, #0x910
   1b904:	mov	w1, #0x203                 	// #515
   1b908:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b90c:	mov	x4, x1
   1b910:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b914:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1b918:	add	x2, x2, #0xa88
   1b91c:	add	x0, x0, #0x910
   1b920:	mov	w1, #0x204                 	// #516
   1b924:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1b928:	stp	x19, x20, [sp, #-48]!
   1b92c:	mov	x19, x0
   1b930:	ldrb	w0, [x0, #24]
   1b934:	stp	x21, x30, [sp, #16]
   1b938:	cbz	w0, 1b9a8 <__sanitizer_set_report_fd@@Base+0x46f8>
   1b93c:	ldr	x20, [x19, #16]
   1b940:	ldr	x0, [x19]
   1b944:	add	x20, x20, x20, lsl #3
   1b948:	mov	x21, x0
   1b94c:	add	x20, x0, x20, lsl #3
   1b950:	cmp	x0, x20
   1b954:	b.eq	1b96c <__sanitizer_set_report_fd@@Base+0x46bc>  // b.none
   1b958:	mov	x0, x21
   1b95c:	add	x21, x21, #0x48
   1b960:	bl	137b8 <__sancov_default_options@@Base+0x2bc0>
   1b964:	cmp	x20, x21
   1b968:	b.ne	1b958 <__sanitizer_set_report_fd@@Base+0x46a8>  // b.any
   1b96c:	str	xzr, [x19, #16]
   1b970:	mov	w2, #0x1                   	// #1
   1b974:	strb	w2, [x19, #24]
   1b978:	add	x1, sp, #0x20
   1b97c:	adrp	x0, 1b000 <__sanitizer_set_report_fd@@Base+0x3d50>
   1b980:	add	x0, x0, #0x80
   1b984:	str	x19, [sp, #32]
   1b988:	strb	w2, [sp, #40]
   1b98c:	stur	wzr, [sp, #41]
   1b990:	sturh	wzr, [sp, #45]
   1b994:	strb	wzr, [sp, #47]
   1b998:	bl	6950 <dl_iterate_phdr@plt>
   1b99c:	ldp	x21, x30, [sp, #16]
   1b9a0:	ldp	x19, x20, [sp], #48
   1b9a4:	ret
   1b9a8:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b9ac:	str	xzr, [x19, #16]
   1b9b0:	ldr	x20, [x20, #4000]
   1b9b4:	ldr	x0, [x20]
   1b9b8:	stp	xzr, xzr, [x19]
   1b9bc:	cbz	x0, 1ba18 <__sanitizer_set_report_fd@@Base+0x4768>
   1b9c0:	sub	x1, x0, #0x1
   1b9c4:	tst	x1, x0
   1b9c8:	b.ne	1ba24 <__sanitizer_set_report_fd@@Base+0x4774>  // b.any
   1b9cc:	add	x20, x0, #0x11f, lsl #12
   1b9d0:	neg	x0, x0
   1b9d4:	add	x20, x20, #0xfff
   1b9d8:	mov	w2, #0x0                   	// #0
   1b9dc:	and	x20, x20, x0
   1b9e0:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1b9e4:	mov	x0, x20
   1b9e8:	add	x1, x1, #0x258
   1b9ec:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1b9f0:	mov	x21, x0
   1b9f4:	ldr	x2, [x19, #16]
   1b9f8:	ldr	x1, [x19]
   1b9fc:	add	x2, x2, x2, lsl #3
   1ba00:	lsl	x2, x2, #3
   1ba04:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1ba08:	ldp	x0, x1, [x19]
   1ba0c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1ba10:	stp	x21, x20, [x19]
   1ba14:	b	1b970 <__sanitizer_set_report_fd@@Base+0x46c0>
   1ba18:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1ba1c:	str	x0, [x20]
   1ba20:	b	1b9c0 <__sanitizer_set_report_fd@@Base+0x4710>
   1ba24:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1ba28:	add	x0, x0, #0x240
   1ba2c:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1ba30:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1ba34:	nop
   1ba38:	stp	x19, x20, [sp, #-64]!
   1ba3c:	mov	x19, x0
   1ba40:	ldrb	w0, [x0, #24]
   1ba44:	stp	x21, x30, [sp, #16]
   1ba48:	cbz	w0, 1bab4 <__sanitizer_set_report_fd@@Base+0x4804>
   1ba4c:	ldr	x20, [x19, #16]
   1ba50:	ldr	x0, [x19]
   1ba54:	add	x20, x20, x20, lsl #3
   1ba58:	mov	x21, x0
   1ba5c:	add	x20, x0, x20, lsl #3
   1ba60:	cmp	x0, x20
   1ba64:	b.eq	1ba7c <__sanitizer_set_report_fd@@Base+0x47cc>  // b.none
   1ba68:	mov	x0, x21
   1ba6c:	add	x21, x21, #0x48
   1ba70:	bl	137b8 <__sancov_default_options@@Base+0x2bc0>
   1ba74:	cmp	x20, x21
   1ba78:	b.ne	1ba68 <__sanitizer_set_report_fd@@Base+0x47b8>  // b.any
   1ba7c:	str	xzr, [x19, #16]
   1ba80:	mov	w1, #0x1                   	// #1
   1ba84:	strb	w1, [x19, #24]
   1ba88:	add	x20, sp, #0x20
   1ba8c:	mov	x0, x20
   1ba90:	bl	1ea18 <OnPrint@@Base+0x768>
   1ba94:	mov	x1, x19
   1ba98:	mov	x0, x20
   1ba9c:	bl	1eab0 <OnPrint@@Base+0x800>
   1baa0:	mov	x0, x20
   1baa4:	bl	1e8e8 <OnPrint@@Base+0x638>
   1baa8:	ldp	x21, x30, [sp, #16]
   1baac:	ldp	x19, x20, [sp], #64
   1bab0:	ret
   1bab4:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bab8:	str	xzr, [x19, #16]
   1babc:	ldr	x20, [x20, #4000]
   1bac0:	ldr	x0, [x20]
   1bac4:	stp	xzr, xzr, [x19]
   1bac8:	cbz	x0, 1bb24 <__sanitizer_set_report_fd@@Base+0x4874>
   1bacc:	sub	x1, x0, #0x1
   1bad0:	tst	x1, x0
   1bad4:	b.ne	1bb30 <__sanitizer_set_report_fd@@Base+0x4880>  // b.any
   1bad8:	add	x20, x0, #0x11f, lsl #12
   1badc:	neg	x0, x0
   1bae0:	add	x20, x20, #0xfff
   1bae4:	mov	w2, #0x0                   	// #0
   1bae8:	and	x20, x20, x0
   1baec:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1baf0:	mov	x0, x20
   1baf4:	add	x1, x1, #0x258
   1baf8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1bafc:	mov	x21, x0
   1bb00:	ldr	x2, [x19, #16]
   1bb04:	ldr	x1, [x19]
   1bb08:	add	x2, x2, x2, lsl #3
   1bb0c:	lsl	x2, x2, #3
   1bb10:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1bb14:	ldp	x0, x1, [x19]
   1bb18:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1bb1c:	stp	x21, x20, [x19]
   1bb20:	b	1ba80 <__sanitizer_set_report_fd@@Base+0x47d0>
   1bb24:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1bb28:	str	x0, [x20]
   1bb2c:	b	1bacc <__sanitizer_set_report_fd@@Base+0x481c>
   1bb30:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1bb34:	add	x0, x0, #0x240
   1bb38:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1bb3c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1bb40:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bb44:	stp	x19, x20, [sp, #-176]!
   1bb48:	ldr	x0, [x0, #4040]
   1bb4c:	ldrb	w0, [x0, #160]
   1bb50:	str	x30, [sp, #16]
   1bb54:	cbnz	w0, 1bb80 <__sanitizer_set_report_fd@@Base+0x48d0>
   1bb58:	add	x1, sp, #0x20
   1bb5c:	bl	68e0 <getrusage@plt>
   1bb60:	mov	w1, w0
   1bb64:	mov	x0, #0x0                   	// #0
   1bb68:	cbnz	w1, 1bb74 <__sanitizer_set_report_fd@@Base+0x48c4>
   1bb6c:	ldr	x0, [sp, #64]
   1bb70:	lsl	x0, x0, #10
   1bb74:	ldr	x30, [sp, #16]
   1bb78:	ldp	x19, x20, [sp], #176
   1bb7c:	ret
   1bb80:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1bb84:	mov	x2, #0x0                   	// #0
   1bb88:	add	x0, x0, #0xac0
   1bb8c:	mov	w1, #0x0                   	// #0
   1bb90:	bl	1c328 <__sanitizer_set_report_fd@@Base+0x5078>
   1bb94:	mov	w20, w0
   1bb98:	cmn	w0, #0x1
   1bb9c:	b.eq	1bc6c <__sanitizer_set_report_fd@@Base+0x49bc>  // b.none
   1bba0:	add	x19, sp, #0x20
   1bba4:	mov	x2, #0x3f                  	// #63
   1bba8:	mov	x1, x19
   1bbac:	bl	19880 <__sanitizer_set_report_fd@@Base+0x25d0>
   1bbb0:	mov	x1, x0
   1bbb4:	mov	w0, w20
   1bbb8:	mov	x20, x1
   1bbbc:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   1bbc0:	cmp	x20, #0x0
   1bbc4:	mov	x0, #0x0                   	// #0
   1bbc8:	b.le	1bb74 <__sanitizer_set_report_fd@@Base+0x48c4>
   1bbcc:	strb	wzr, [x19, x20]
   1bbd0:	mov	x1, x19
   1bbd4:	ldrb	w2, [sp, #32]
   1bbd8:	sub	w0, w2, #0x30
   1bbdc:	and	w0, w0, #0xff
   1bbe0:	cmp	w0, #0x9
   1bbe4:	b.hi	1bbfc <__sanitizer_set_report_fd@@Base+0x494c>  // b.pmore
   1bbe8:	ldrb	w2, [x1, #1]!
   1bbec:	sub	w0, w2, #0x30
   1bbf0:	and	w0, w0, #0xff
   1bbf4:	cmp	w0, #0x9
   1bbf8:	b.ls	1bbe8 <__sanitizer_set_report_fd@@Base+0x4938>  // b.plast
   1bbfc:	cbz	w2, 1bca0 <__sanitizer_set_report_fd@@Base+0x49f0>
   1bc00:	ldrb	w2, [x1, #1]!
   1bc04:	sub	w0, w2, #0x30
   1bc08:	cmp	w2, #0x0
   1bc0c:	and	w0, w0, #0xff
   1bc10:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   1bc14:	b.hi	1bc00 <__sanitizer_set_report_fd@@Base+0x4950>  // b.pmore
   1bc18:	cmp	w0, #0x9
   1bc1c:	mov	x19, #0x0                   	// #0
   1bc20:	b.hi	1bc4c <__sanitizer_set_report_fd@@Base+0x499c>  // b.pmore
   1bc24:	nop
   1bc28:	and	x3, x2, #0xff
   1bc2c:	ldrb	w2, [x1, #1]!
   1bc30:	add	x19, x19, x19, lsl #2
   1bc34:	sub	w0, w2, #0x30
   1bc38:	add	x19, x3, x19, lsl #1
   1bc3c:	and	w0, w0, #0xff
   1bc40:	sub	x19, x19, #0x30
   1bc44:	cmp	w0, #0x9
   1bc48:	b.ls	1bc28 <__sanitizer_set_report_fd@@Base+0x4978>  // b.plast
   1bc4c:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bc50:	ldr	x20, [x20, #4000]
   1bc54:	ldr	x0, [x20]
   1bc58:	cbz	x0, 1bc90 <__sanitizer_set_report_fd@@Base+0x49e0>
   1bc5c:	mul	x0, x19, x0
   1bc60:	ldr	x30, [sp, #16]
   1bc64:	ldp	x19, x20, [sp], #176
   1bc68:	ret
   1bc6c:	add	x1, sp, #0x20
   1bc70:	mov	w0, #0x0                   	// #0
   1bc74:	bl	68e0 <getrusage@plt>
   1bc78:	mov	w1, w0
   1bc7c:	mov	x0, #0x0                   	// #0
   1bc80:	cbnz	w1, 1bb74 <__sanitizer_set_report_fd@@Base+0x48c4>
   1bc84:	ldr	x0, [sp, #64]
   1bc88:	lsl	x0, x0, #10
   1bc8c:	b	1bb74 <__sanitizer_set_report_fd@@Base+0x48c4>
   1bc90:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1bc94:	str	x0, [x20]
   1bc98:	mul	x0, x19, x0
   1bc9c:	b	1bc60 <__sanitizer_set_report_fd@@Base+0x49b0>
   1bca0:	mov	x19, #0x0                   	// #0
   1bca4:	b	1bc4c <__sanitizer_set_report_fd@@Base+0x499c>
   1bca8:	stp	x19, x30, [sp, #-144]!
   1bcac:	mov	x1, #0x80                  	// #128
   1bcb0:	mov	w0, #0x0                   	// #0
   1bcb4:	add	x19, sp, #0x10
   1bcb8:	mov	x2, x19
   1bcbc:	bl	66e0 <sched_getaffinity@plt>
   1bcc0:	cbnz	w0, 1bcd8 <__sanitizer_set_report_fd@@Base+0x4a28>
   1bcc4:	mov	x1, x19
   1bcc8:	mov	x0, #0x80                  	// #128
   1bccc:	bl	6aa0 <__sched_cpucount@plt>
   1bcd0:	ldp	x19, x30, [sp], #144
   1bcd4:	ret
   1bcd8:	sxtw	x3, w0
   1bcdc:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1bce0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1bce4:	add	x2, x2, #0xad8
   1bce8:	add	x0, x0, #0x910
   1bcec:	mov	x4, #0x0                   	// #0
   1bcf0:	mov	w1, #0x2bb                 	// #699
   1bcf4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1bcf8:	ret
   1bcfc:	nop
   1bd00:	mov	x2, x0
   1bd04:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1bd08:	mov	w0, #0x6                   	// #6
   1bd0c:	add	x1, x1, #0x948
   1bd10:	b	6af0 <syslog@plt>
   1bd14:	nop
   1bd18:	ret
   1bd1c:	nop
   1bd20:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bd24:	ldr	x1, [x1, #4040]
   1bd28:	ldrb	w1, [x1, #49]
   1bd2c:	cbnz	w1, 1bd34 <__sanitizer_set_report_fd@@Base+0x4a84>
   1bd30:	ret
   1bd34:	b	14248 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2a8>
   1bd38:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bd3c:	str	x30, [sp, #-32]!
   1bd40:	ldr	x0, [x0, #3976]
   1bd44:	cbz	x0, 1bd58 <__sanitizer_set_report_fd@@Base+0x4aa8>
   1bd48:	ldr	x0, [x0]
   1bd4c:	cbz	x0, 1bd58 <__sanitizer_set_report_fd@@Base+0x4aa8>
   1bd50:	ldrb	w0, [x0]
   1bd54:	cbnz	w0, 1bd7c <__sanitizer_set_report_fd@@Base+0x4acc>
   1bd58:	add	x1, sp, #0x10
   1bd5c:	mov	w0, #0x1                   	// #1
   1bd60:	bl	19b10 <__sanitizer_set_report_fd@@Base+0x2860>
   1bd64:	ldp	x2, x1, [sp, #16]
   1bd68:	mov	x0, #0xca00                	// #51712
   1bd6c:	movk	x0, #0x3b9a, lsl #16
   1bd70:	ldr	x30, [sp], #32
   1bd74:	madd	x0, x2, x0, x1
   1bd78:	ret
   1bd7c:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bd80:	add	x1, sp, #0x10
   1bd84:	ldr	x0, [x0, #3648]
   1bd88:	cbz	x0, 1bdac <__sanitizer_set_report_fd@@Base+0x4afc>
   1bd8c:	mov	w0, #0x1                   	// #1
   1bd90:	bl	6920 <real_clock_gettime@plt>
   1bd94:	ldp	x2, x1, [sp, #16]
   1bd98:	mov	x0, #0xca00                	// #51712
   1bd9c:	movk	x0, #0x3b9a, lsl #16
   1bda0:	ldr	x30, [sp], #32
   1bda4:	madd	x0, x2, x0, x1
   1bda8:	ret
   1bdac:	mov	w0, #0x1                   	// #1
   1bdb0:	bl	6970 <clock_gettime@plt>
   1bdb4:	b	1bd64 <__sanitizer_set_report_fd@@Base+0x4ab4>
   1bdb8:	cmp	w0, #0x2
   1bdbc:	b.eq	1bdd0 <__sanitizer_set_report_fd@@Base+0x4b20>  // b.none
   1bdc0:	cmp	w0, #0xa
   1bdc4:	cset	x0, eq  // eq = none
   1bdc8:	lsl	x0, x0, #4
   1bdcc:	ret
   1bdd0:	mov	x0, #0x4                   	// #4
   1bdd4:	ret
   1bdd8:	b	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1bddc:	nop
   1bde0:	stp	x19, x20, [sp, #-64]!
   1bde4:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bde8:	mov	x19, x0
   1bdec:	ldr	x20, [x20, #4000]
   1bdf0:	stp	x21, x22, [sp, #16]
   1bdf4:	mov	x21, x1
   1bdf8:	and	w22, w2, #0xff
   1bdfc:	ldr	x0, [x20]
   1be00:	str	x30, [sp, #32]
   1be04:	cbz	x0, 1be6c <__sanitizer_set_report_fd@@Base+0x4bbc>
   1be08:	sub	x1, x0, #0x1
   1be0c:	tst	x0, x1
   1be10:	b.ne	1be80 <__sanitizer_set_report_fd@@Base+0x4bd0>  // b.any
   1be14:	add	x19, x19, x1
   1be18:	neg	x0, x0
   1be1c:	and	x19, x19, x0
   1be20:	mov	x5, #0x0                   	// #0
   1be24:	mov	w4, #0xffffffff            	// #-1
   1be28:	mov	w3, #0x22                  	// #34
   1be2c:	mov	w2, #0x3                   	// #3
   1be30:	mov	x1, x19
   1be34:	mov	x0, #0x0                   	// #0
   1be38:	bl	19800 <__sanitizer_set_report_fd@@Base+0x2550>
   1be3c:	add	x1, sp, #0x3c
   1be40:	mov	x20, x0
   1be44:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   1be48:	tst	w0, #0xff
   1be4c:	b.ne	1be90 <__sanitizer_set_report_fd@@Base+0x4be0>  // b.any
   1be50:	mov	x0, x19
   1be54:	bl	139e8 <__sancov_default_options@@Base+0x2df0>
   1be58:	mov	x0, x20
   1be5c:	ldp	x21, x22, [sp, #16]
   1be60:	ldr	x30, [sp, #32]
   1be64:	ldp	x19, x20, [sp], #64
   1be68:	ret
   1be6c:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1be70:	str	x0, [x20]
   1be74:	sub	x1, x0, #0x1
   1be78:	tst	x0, x1
   1be7c:	b.eq	1be14 <__sanitizer_set_report_fd@@Base+0x4b64>  // b.none
   1be80:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1be84:	add	x0, x0, #0x240
   1be88:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1be8c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1be90:	ldr	w3, [sp, #60]
   1be94:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1be98:	mov	w4, w22
   1be9c:	mov	x1, x21
   1bea0:	mov	x0, x19
   1bea4:	add	x2, x2, #0xb48
   1bea8:	bl	13600 <__sancov_default_options@@Base+0x2a08>
   1beac:	nop
   1beb0:	cmp	x0, #0x0
   1beb4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1beb8:	b.ne	1bec0 <__sanitizer_set_report_fd@@Base+0x4c10>  // b.any
   1bebc:	ret
   1bec0:	stp	x19, x20, [sp, #-32]!
   1bec4:	mov	x19, x1
   1bec8:	mov	x20, x0
   1becc:	str	x30, [sp, #16]
   1bed0:	bl	19818 <__sanitizer_set_report_fd@@Base+0x2568>
   1bed4:	mov	x1, #0x0                   	// #0
   1bed8:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   1bedc:	tst	w0, #0xff
   1bee0:	b.ne	1bef4 <__sanitizer_set_report_fd@@Base+0x4c44>  // b.any
   1bee4:	mov	x0, x19
   1bee8:	ldr	x30, [sp, #16]
   1beec:	ldp	x19, x20, [sp], #32
   1bef0:	b	13a40 <__sancov_default_options@@Base+0x2e48>
   1bef4:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bef8:	mov	x4, x20
   1befc:	mov	x3, x19
   1bf00:	mov	x2, x19
   1bf04:	ldr	x1, [x1, #4008]
   1bf08:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1bf0c:	add	x0, x0, #0xb58
   1bf10:	ldr	x1, [x1]
   1bf14:	bl	1e648 <OnPrint@@Base+0x398>
   1bf18:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1bf1c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1bf20:	add	x2, x2, #0xb98
   1bf24:	add	x0, x0, #0xbc0
   1bf28:	mov	x4, #0x0                   	// #0
   1bf2c:	mov	x3, #0x0                   	// #0
   1bf30:	mov	w1, #0x3c                  	// #60
   1bf34:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1bf38:	stp	x19, x20, [sp, #-48]!
   1bf3c:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bf40:	mov	x19, x0
   1bf44:	ldr	x20, [x20, #4000]
   1bf48:	stp	x21, x30, [sp, #16]
   1bf4c:	mov	x21, x1
   1bf50:	ldr	x0, [x20]
   1bf54:	cbz	x0, 1bfb8 <__sanitizer_set_report_fd@@Base+0x4d08>
   1bf58:	sub	x1, x0, #0x1
   1bf5c:	tst	x0, x1
   1bf60:	b.ne	1bfcc <__sanitizer_set_report_fd@@Base+0x4d1c>  // b.any
   1bf64:	add	x19, x19, x1
   1bf68:	neg	x0, x0
   1bf6c:	and	x19, x19, x0
   1bf70:	mov	x5, #0x0                   	// #0
   1bf74:	mov	w4, #0xffffffff            	// #-1
   1bf78:	mov	w3, #0x22                  	// #34
   1bf7c:	mov	w2, #0x3                   	// #3
   1bf80:	mov	x1, x19
   1bf84:	mov	x0, #0x0                   	// #0
   1bf88:	bl	19800 <__sanitizer_set_report_fd@@Base+0x2550>
   1bf8c:	add	x1, sp, #0x2c
   1bf90:	mov	x20, x0
   1bf94:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   1bf98:	tst	w0, #0xff
   1bf9c:	b.ne	1bfdc <__sanitizer_set_report_fd@@Base+0x4d2c>  // b.any
   1bfa0:	mov	x0, x19
   1bfa4:	bl	139e8 <__sancov_default_options@@Base+0x2df0>
   1bfa8:	mov	x0, x20
   1bfac:	ldp	x21, x30, [sp, #16]
   1bfb0:	ldp	x19, x20, [sp], #48
   1bfb4:	ret
   1bfb8:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1bfbc:	str	x0, [x20]
   1bfc0:	sub	x1, x0, #0x1
   1bfc4:	tst	x0, x1
   1bfc8:	b.eq	1bf64 <__sanitizer_set_report_fd@@Base+0x4cb4>  // b.none
   1bfcc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1bfd0:	add	x0, x0, #0x240
   1bfd4:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1bfd8:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1bfdc:	ldr	w3, [sp, #44]
   1bfe0:	mov	x0, #0x0                   	// #0
   1bfe4:	cmp	w3, #0xc
   1bfe8:	b.eq	1bfac <__sanitizer_set_report_fd@@Base+0x4cfc>  // b.none
   1bfec:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1bff0:	mov	x1, x21
   1bff4:	mov	x0, x19
   1bff8:	add	x2, x2, #0xb48
   1bffc:	mov	w4, #0x0                   	// #0
   1c000:	bl	13600 <__sancov_default_options@@Base+0x2a08>
   1c004:	nop
   1c008:	stp	x19, x20, [sp, #-48]!
   1c00c:	mov	x20, x0
   1c010:	sub	x0, x0, #0x1
   1c014:	stp	x21, x22, [sp, #16]
   1c018:	tst	x0, x20
   1c01c:	stp	x23, x30, [sp, #32]
   1c020:	b.ne	1c0c4 <__sanitizer_set_report_fd@@Base+0x4e14>  // b.any
   1c024:	sub	x23, x1, #0x1
   1c028:	mov	x21, x1
   1c02c:	tst	x1, x23
   1c030:	b.ne	1c0e4 <__sanitizer_set_report_fd@@Base+0x4e34>  // b.any
   1c034:	mov	x1, x2
   1c038:	add	x22, x20, x21
   1c03c:	mov	x0, x22
   1c040:	bl	1bf38 <__sanitizer_set_report_fd@@Base+0x4c88>
   1c044:	mov	x19, x0
   1c048:	mov	x1, x0
   1c04c:	cbz	x0, 1c068 <__sanitizer_set_report_fd@@Base+0x4db8>
   1c050:	add	x22, x22, x0
   1c054:	tst	x0, x23
   1c058:	b.ne	1c098 <__sanitizer_set_report_fd@@Base+0x4de8>  // b.any
   1c05c:	add	x0, x1, x20
   1c060:	cmp	x22, x0
   1c064:	b.ne	1c07c <__sanitizer_set_report_fd@@Base+0x4dcc>  // b.any
   1c068:	mov	x0, x19
   1c06c:	ldp	x21, x22, [sp, #16]
   1c070:	ldp	x23, x30, [sp, #32]
   1c074:	ldp	x19, x20, [sp], #48
   1c078:	ret
   1c07c:	sub	x1, x22, x0
   1c080:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1c084:	mov	x0, x19
   1c088:	ldp	x21, x22, [sp, #16]
   1c08c:	ldp	x23, x30, [sp, #32]
   1c090:	ldp	x19, x20, [sp], #48
   1c094:	ret
   1c098:	add	x23, x0, x23
   1c09c:	neg	x21, x21
   1c0a0:	and	x21, x23, x21
   1c0a4:	sub	x1, x21, x0
   1c0a8:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1c0ac:	mov	x1, x21
   1c0b0:	mov	x19, x21
   1c0b4:	add	x0, x1, x20
   1c0b8:	cmp	x22, x0
   1c0bc:	b.eq	1c068 <__sanitizer_set_report_fd@@Base+0x4db8>  // b.none
   1c0c0:	b	1c07c <__sanitizer_set_report_fd@@Base+0x4dcc>
   1c0c4:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c0c8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c0cc:	add	x2, x2, #0xc00
   1c0d0:	add	x0, x0, #0xbc0
   1c0d4:	mov	x4, #0x0                   	// #0
   1c0d8:	mov	x3, #0x0                   	// #0
   1c0dc:	mov	w1, #0x55                  	// #85
   1c0e0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1c0e4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   1c0e8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c0ec:	add	x2, x2, #0x828
   1c0f0:	add	x0, x0, #0xbc0
   1c0f4:	mov	x4, #0x0                   	// #0
   1c0f8:	mov	x3, #0x0                   	// #0
   1c0fc:	mov	w1, #0x56                  	// #86
   1c100:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1c104:	nop
   1c108:	stp	x19, x20, [sp, #-48]!
   1c10c:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c110:	mov	x19, x0
   1c114:	ldr	x20, [x20, #4000]
   1c118:	stp	x21, x30, [sp, #16]
   1c11c:	mov	x21, x1
   1c120:	ldr	x2, [x20]
   1c124:	cbz	x2, 1c184 <__sanitizer_set_report_fd@@Base+0x4ed4>
   1c128:	sub	x0, x2, #0x1
   1c12c:	tst	x2, x0
   1c130:	b.ne	1c19c <__sanitizer_set_report_fd@@Base+0x4eec>  // b.any
   1c134:	add	x0, x19, x0
   1c138:	neg	x1, x2
   1c13c:	mov	x5, #0x0                   	// #0
   1c140:	mov	w4, #0xffffffff            	// #-1
   1c144:	mov	w3, #0x4022                	// #16418
   1c148:	mov	w2, #0x3                   	// #3
   1c14c:	and	x1, x0, x1
   1c150:	mov	x0, #0x0                   	// #0
   1c154:	bl	19800 <__sanitizer_set_report_fd@@Base+0x2550>
   1c158:	mov	x20, x0
   1c15c:	add	x1, sp, #0x2c
   1c160:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   1c164:	tst	w0, #0xff
   1c168:	b.ne	1c1ac <__sanitizer_set_report_fd@@Base+0x4efc>  // b.any
   1c16c:	mov	x0, x19
   1c170:	bl	139e8 <__sancov_default_options@@Base+0x2df0>
   1c174:	mov	x0, x20
   1c178:	ldp	x21, x30, [sp, #16]
   1c17c:	ldp	x19, x20, [sp], #48
   1c180:	ret
   1c184:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1c188:	mov	x2, x0
   1c18c:	str	x0, [x20]
   1c190:	sub	x0, x2, #0x1
   1c194:	tst	x2, x0
   1c198:	b.eq	1c134 <__sanitizer_set_report_fd@@Base+0x4e84>  // b.none
   1c19c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1c1a0:	add	x0, x0, #0x240
   1c1a4:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1c1a8:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1c1ac:	ldr	w3, [sp, #44]
   1c1b0:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c1b4:	mov	x1, x21
   1c1b8:	mov	x0, x19
   1c1bc:	add	x2, x2, #0xc20
   1c1c0:	mov	w4, #0x0                   	// #0
   1c1c4:	bl	13600 <__sancov_default_options@@Base+0x2a08>
   1c1c8:	stp	x19, x20, [sp, #-96]!
   1c1cc:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c1d0:	mov	x20, x1
   1c1d4:	ldr	x19, [x19, #4000]
   1c1d8:	stp	x21, x22, [sp, #16]
   1c1dc:	and	w22, w2, #0xff
   1c1e0:	mov	x21, x0
   1c1e4:	ldr	x2, [x19]
   1c1e8:	str	x30, [sp, #32]
   1c1ec:	cbz	x2, 1c250 <__sanitizer_set_report_fd@@Base+0x4fa0>
   1c1f0:	neg	x6, x2
   1c1f4:	sub	x3, x2, #0x1
   1c1f8:	and	x0, x6, x21
   1c1fc:	tst	x3, x2
   1c200:	b.ne	1c270 <__sanitizer_set_report_fd@@Base+0x4fc0>  // b.any
   1c204:	add	x1, x20, x3
   1c208:	mov	x5, #0x0                   	// #0
   1c20c:	mov	w4, #0xffffffff            	// #-1
   1c210:	mov	w3, #0x32                  	// #50
   1c214:	mov	w2, #0x3                   	// #3
   1c218:	and	x1, x1, x6
   1c21c:	bl	19800 <__sanitizer_set_report_fd@@Base+0x2550>
   1c220:	mov	x19, x0
   1c224:	add	x1, sp, #0x34
   1c228:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   1c22c:	tst	w0, #0xff
   1c230:	b.ne	1c280 <__sanitizer_set_report_fd@@Base+0x4fd0>  // b.any
   1c234:	mov	x0, x20
   1c238:	bl	139e8 <__sancov_default_options@@Base+0x2df0>
   1c23c:	mov	x0, x19
   1c240:	ldp	x21, x22, [sp, #16]
   1c244:	ldr	x30, [sp, #32]
   1c248:	ldp	x19, x20, [sp], #96
   1c24c:	ret
   1c250:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1c254:	mov	x2, x0
   1c258:	str	x0, [x19]
   1c25c:	neg	x6, x2
   1c260:	sub	x3, x2, #0x1
   1c264:	and	x0, x6, x21
   1c268:	tst	x3, x2
   1c26c:	b.eq	1c204 <__sanitizer_set_report_fd@@Base+0x4f54>  // b.none
   1c270:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1c274:	add	x0, x0, #0x240
   1c278:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1c27c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1c280:	cbz	w22, 1c298 <__sanitizer_set_report_fd@@Base+0x4fe8>
   1c284:	ldr	w0, [sp, #52]
   1c288:	cmp	w0, #0xc
   1c28c:	b.ne	1c298 <__sanitizer_set_report_fd@@Base+0x4fe8>  // b.any
   1c290:	mov	x0, #0x0                   	// #0
   1c294:	b	1c240 <__sanitizer_set_report_fd@@Base+0x4f90>
   1c298:	add	x19, sp, #0x38
   1c29c:	mov	x3, x21
   1c2a0:	mov	x1, #0x28                  	// #40
   1c2a4:	mov	x0, x19
   1c2a8:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c2ac:	add	x2, x2, #0xc38
   1c2b0:	bl	1e2b8 <OnPrint@@Base+0x8>
   1c2b4:	ldr	w3, [sp, #52]
   1c2b8:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c2bc:	mov	x1, x19
   1c2c0:	mov	x0, x20
   1c2c4:	add	x2, x2, #0xb48
   1c2c8:	mov	w4, #0x0                   	// #0
   1c2cc:	bl	13600 <__sancov_default_options@@Base+0x2a08>
   1c2d0:	mov	w2, #0x0                   	// #0
   1c2d4:	b	1c1c8 <__sanitizer_set_report_fd@@Base+0x4f18>
   1c2d8:	mov	w2, #0x1                   	// #1
   1c2dc:	b	1c1c8 <__sanitizer_set_report_fd@@Base+0x4f18>
   1c2e0:	str	x30, [sp, #-16]!
   1c2e4:	mov	w2, #0x0                   	// #0
   1c2e8:	bl	19828 <__sanitizer_set_report_fd@@Base+0x2578>
   1c2ec:	cmp	w0, #0x0
   1c2f0:	cset	w0, eq  // eq = none
   1c2f4:	ldr	x30, [sp], #16
   1c2f8:	ret
   1c2fc:	nop
   1c300:	str	x30, [sp, #-16]!
   1c304:	mov	w2, #0x1                   	// #1
   1c308:	bl	19828 <__sanitizer_set_report_fd@@Base+0x2578>
   1c30c:	cmp	w0, #0x0
   1c310:	cset	w0, eq  // eq = none
   1c314:	ldr	x30, [sp], #16
   1c318:	ret
   1c31c:	nop
   1c320:	ret
   1c324:	nop
   1c328:	stp	x19, x30, [sp, #-16]!
   1c32c:	cmp	w1, #0x2
   1c330:	mov	x19, x2
   1c334:	b.hi	1c344 <__sanitizer_set_report_fd@@Base+0x5094>  // b.pmore
   1c338:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c33c:	add	x2, x2, #0xe20
   1c340:	ldr	w3, [x2, w1, uxtw #2]
   1c344:	mov	w2, #0x1b0                 	// #432
   1c348:	mov	w1, w3
   1c34c:	bl	19860 <__sanitizer_set_report_fd@@Base+0x25b0>
   1c350:	mov	x1, x19
   1c354:	mov	x19, x0
   1c358:	sxtw	x0, w0
   1c35c:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   1c360:	tst	w0, #0xff
   1c364:	csinv	w0, w19, wzr, eq  // eq = none
   1c368:	ldp	x19, x30, [sp], #16
   1c36c:	ret
   1c370:	b	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   1c374:	nop
   1c378:	stp	x19, x20, [sp, #-32]!
   1c37c:	mov	x20, x4
   1c380:	mov	x19, x3
   1c384:	str	x30, [sp, #16]
   1c388:	bl	19880 <__sanitizer_set_report_fd@@Base+0x25d0>
   1c38c:	mov	x1, x20
   1c390:	mov	x20, x0
   1c394:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   1c398:	tst	w0, #0xff
   1c39c:	b.ne	1c3b8 <__sanitizer_set_report_fd@@Base+0x5108>  // b.any
   1c3a0:	mov	w0, #0x1                   	// #1
   1c3a4:	cbz	x19, 1c3ac <__sanitizer_set_report_fd@@Base+0x50fc>
   1c3a8:	str	x20, [x19]
   1c3ac:	ldr	x30, [sp, #16]
   1c3b0:	ldp	x19, x20, [sp], #32
   1c3b4:	ret
   1c3b8:	mov	w0, #0x0                   	// #0
   1c3bc:	ldr	x30, [sp, #16]
   1c3c0:	ldp	x19, x20, [sp], #32
   1c3c4:	ret
   1c3c8:	stp	x19, x20, [sp, #-32]!
   1c3cc:	mov	x20, x4
   1c3d0:	mov	x19, x3
   1c3d4:	str	x30, [sp, #16]
   1c3d8:	bl	198a8 <__sanitizer_set_report_fd@@Base+0x25f8>
   1c3dc:	mov	x1, x20
   1c3e0:	mov	x20, x0
   1c3e4:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   1c3e8:	tst	w0, #0xff
   1c3ec:	b.ne	1c408 <__sanitizer_set_report_fd@@Base+0x5158>  // b.any
   1c3f0:	mov	w0, #0x1                   	// #1
   1c3f4:	cbz	x19, 1c3fc <__sanitizer_set_report_fd@@Base+0x514c>
   1c3f8:	str	x20, [x19]
   1c3fc:	ldr	x30, [sp, #16]
   1c400:	ldp	x19, x20, [sp], #32
   1c404:	ret
   1c408:	mov	w0, #0x0                   	// #0
   1c40c:	ldr	x30, [sp, #16]
   1c410:	ldp	x19, x20, [sp], #32
   1c414:	ret
   1c418:	stp	x19, x30, [sp, #-16]!
   1c41c:	mov	x19, x2
   1c420:	bl	199c0 <__sanitizer_set_report_fd@@Base+0x2710>
   1c424:	mov	x1, x19
   1c428:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   1c42c:	and	w0, w0, #0xff
   1c430:	eor	w0, w0, #0x1
   1c434:	ldp	x19, x30, [sp], #16
   1c438:	ret
   1c43c:	nop
   1c440:	stp	x19, x20, [sp, #-48]!
   1c444:	mov	x2, #0x0                   	// #0
   1c448:	stp	x21, x22, [sp, #16]
   1c44c:	mov	x21, x1
   1c450:	mov	w1, #0x0                   	// #0
   1c454:	str	x30, [sp, #32]
   1c458:	bl	1c328 <__sanitizer_set_report_fd@@Base+0x5078>
   1c45c:	cmn	w0, #0x1
   1c460:	b.eq	1c4f4 <__sanitizer_set_report_fd@@Base+0x5244>  // b.none
   1c464:	mov	w20, w0
   1c468:	bl	19948 <__sanitizer_set_report_fd@@Base+0x2698>
   1c46c:	mov	x19, x0
   1c470:	cmn	x0, #0x1
   1c474:	b.eq	1c514 <__sanitizer_set_report_fd@@Base+0x5264>  // b.none
   1c478:	cbz	x0, 1c534 <__sanitizer_set_report_fd@@Base+0x5284>
   1c47c:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c480:	ldr	x22, [x22, #4000]
   1c484:	ldr	x2, [x22]
   1c488:	cbz	x2, 1c4e4 <__sanitizer_set_report_fd@@Base+0x5234>
   1c48c:	sub	x1, x2, #0x1
   1c490:	tst	x2, x1
   1c494:	b.ne	1c554 <__sanitizer_set_report_fd@@Base+0x52a4>  // b.any
   1c498:	add	x19, x19, x1
   1c49c:	neg	x2, x2
   1c4a0:	and	x1, x19, x2
   1c4a4:	mov	w4, w20
   1c4a8:	str	x1, [x21]
   1c4ac:	mov	x5, #0x0                   	// #0
   1c4b0:	mov	w3, #0x2                   	// #2
   1c4b4:	mov	w2, #0x1                   	// #1
   1c4b8:	mov	x0, #0x0                   	// #0
   1c4bc:	bl	19800 <__sanitizer_set_report_fd@@Base+0x2550>
   1c4c0:	mov	x1, #0x0                   	// #0
   1c4c4:	mov	x19, x0
   1c4c8:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   1c4cc:	tst	w0, #0xff
   1c4d0:	csel	x0, x19, xzr, eq  // eq = none
   1c4d4:	ldp	x21, x22, [sp, #16]
   1c4d8:	ldr	x30, [sp, #32]
   1c4dc:	ldp	x19, x20, [sp], #48
   1c4e0:	ret
   1c4e4:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1c4e8:	mov	x2, x0
   1c4ec:	str	x0, [x22]
   1c4f0:	b	1c48c <__sanitizer_set_report_fd@@Base+0x51dc>
   1c4f4:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c4f8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c4fc:	add	x2, x2, #0xc50
   1c500:	add	x0, x0, #0xbc0
   1c504:	mov	x4, #0x0                   	// #0
   1c508:	mov	x3, #0x0                   	// #0
   1c50c:	mov	w1, #0xc9                  	// #201
   1c510:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1c514:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c518:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c51c:	add	x2, x2, #0xc70
   1c520:	add	x0, x0, #0xbc0
   1c524:	mov	x4, x19
   1c528:	mov	x3, x19
   1c52c:	mov	w1, #0xcb                  	// #203
   1c530:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1c534:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c538:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c53c:	add	x2, x2, #0xc90
   1c540:	add	x0, x0, #0xbc0
   1c544:	mov	x4, #0x0                   	// #0
   1c548:	mov	x3, #0x0                   	// #0
   1c54c:	mov	w1, #0xcc                  	// #204
   1c550:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1c554:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1c558:	add	x0, x0, #0x240
   1c55c:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1c560:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1c564:	nop
   1c568:	stp	x19, x20, [sp, #-64]!
   1c56c:	cmp	x0, #0x0
   1c570:	mov	x5, x3
   1c574:	mov	w4, w2
   1c578:	stp	x21, x22, [sp, #16]
   1c57c:	mov	x21, x3
   1c580:	mov	w3, #0x11                  	// #17
   1c584:	csinc	w3, w3, wzr, ne  // ne = any
   1c588:	mov	w20, w2
   1c58c:	mov	w2, #0x3                   	// #3
   1c590:	mov	x22, x1
   1c594:	str	x30, [sp, #32]
   1c598:	bl	19800 <__sanitizer_set_report_fd@@Base+0x2550>
   1c59c:	mov	x19, x0
   1c5a0:	add	x1, sp, #0x3c
   1c5a4:	str	wzr, [sp, #60]
   1c5a8:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   1c5ac:	tst	w0, #0xff
   1c5b0:	b.ne	1c5c8 <__sanitizer_set_report_fd@@Base+0x5318>  // b.any
   1c5b4:	mov	x0, x19
   1c5b8:	ldp	x21, x22, [sp, #16]
   1c5bc:	ldr	x30, [sp, #32]
   1c5c0:	ldp	x19, x20, [sp], #64
   1c5c4:	ret
   1c5c8:	ldr	w5, [sp, #60]
   1c5cc:	mov	x4, x19
   1c5d0:	mov	x3, x22
   1c5d4:	mov	x2, x21
   1c5d8:	mov	w1, w20
   1c5dc:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c5e0:	add	x0, x0, #0xca8
   1c5e4:	bl	1e5c0 <OnPrint@@Base+0x310>
   1c5e8:	mov	x0, #0x0                   	// #0
   1c5ec:	b	1c5b8 <__sanitizer_set_report_fd@@Base+0x5308>
   1c5f0:	stp	x19, x20, [sp, #-160]!
   1c5f4:	mov	x20, x1
   1c5f8:	mov	w1, #0x1                   	// #1
   1c5fc:	stp	x21, x22, [sp, #16]
   1c600:	add	x22, sp, #0x30
   1c604:	mov	x21, x0
   1c608:	stp	x23, x30, [sp, #32]
   1c60c:	add	x23, sp, #0x50
   1c610:	mov	x0, x22
   1c614:	bl	1ea18 <OnPrint@@Base+0x768>
   1c618:	stp	xzr, xzr, [sp, #104]
   1c61c:	str	xzr, [sp, #152]
   1c620:	mov	x1, x23
   1c624:	mov	x0, x22
   1c628:	bl	1f018 <OnPrint@@Base+0xd68>
   1c62c:	tst	w0, #0xff
   1c630:	b.eq	1c6ec <__sanitizer_set_report_fd@@Base+0x543c>  // b.none
   1c634:	ldp	x3, x2, [sp, #80]
   1c638:	cmp	x3, x2
   1c63c:	b.eq	1c620 <__sanitizer_set_report_fd@@Base+0x5370>  // b.none
   1c640:	cbz	x2, 1c68c <__sanitizer_set_report_fd@@Base+0x53dc>
   1c644:	sub	x2, x2, #0x1
   1c648:	cmp	x3, x2
   1c64c:	b.hi	1c6ac <__sanitizer_set_report_fd@@Base+0x53fc>  // b.pmore
   1c650:	cmp	x21, x20
   1c654:	b.hi	1c6cc <__sanitizer_set_report_fd@@Base+0x541c>  // b.pmore
   1c658:	cmp	x2, x21
   1c65c:	cset	w19, cc  // cc = lo, ul, last
   1c660:	cmp	x3, x20
   1c664:	cset	w0, hi  // hi = pmore
   1c668:	orr	w19, w19, w0
   1c66c:	cbnz	w19, 1c620 <__sanitizer_set_report_fd@@Base+0x5370>
   1c670:	mov	x0, x22
   1c674:	bl	1e8e8 <OnPrint@@Base+0x638>
   1c678:	mov	w0, w19
   1c67c:	ldp	x21, x22, [sp, #16]
   1c680:	ldp	x23, x30, [sp, #32]
   1c684:	ldp	x19, x20, [sp], #160
   1c688:	ret
   1c68c:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c690:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c694:	add	x2, x2, #0xce8
   1c698:	add	x0, x0, #0xbc0
   1c69c:	mov	x4, #0x0                   	// #0
   1c6a0:	mov	x3, #0x0                   	// #0
   1c6a4:	mov	w1, #0xef                  	// #239
   1c6a8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1c6ac:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c6b0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c6b4:	add	x2, x2, #0xd08
   1c6b8:	add	x0, x0, #0xbc0
   1c6bc:	mov	x4, #0x0                   	// #0
   1c6c0:	mov	x3, #0x0                   	// #0
   1c6c4:	mov	w1, #0xe1                  	// #225
   1c6c8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1c6cc:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c6d0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c6d4:	add	x2, x2, #0xd28
   1c6d8:	add	x0, x0, #0xbc0
   1c6dc:	mov	x4, #0x0                   	// #0
   1c6e0:	mov	x3, #0x0                   	// #0
   1c6e4:	mov	w1, #0xe2                  	// #226
   1c6e8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1c6ec:	mov	x0, x22
   1c6f0:	mov	w19, #0x1                   	// #1
   1c6f4:	bl	1e8e8 <OnPrint@@Base+0x638>
   1c6f8:	mov	w0, w19
   1c6fc:	ldp	x21, x22, [sp, #16]
   1c700:	ldp	x23, x30, [sp, #32]
   1c704:	ldp	x19, x20, [sp], #160
   1c708:	ret
   1c70c:	nop
   1c710:	stp	x19, x20, [sp, #-160]!
   1c714:	mov	w1, #0x1                   	// #1
   1c718:	adrp	x20, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c71c:	add	x19, sp, #0x30
   1c720:	stp	x21, x22, [sp, #16]
   1c724:	mov	x0, x19
   1c728:	str	x30, [sp, #32]
   1c72c:	bl	1ea18 <OnPrint@@Base+0x768>
   1c730:	mov	w2, #0x0                   	// #0
   1c734:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c738:	mov	x0, #0xfff                 	// #4095
   1c73c:	add	x1, x1, #0xd48
   1c740:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1c744:	add	x21, sp, #0x50
   1c748:	mov	x1, #0xfff                 	// #4095
   1c74c:	mov	x22, x0
   1c750:	add	x20, x20, #0xd78
   1c754:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c758:	add	x0, x0, #0xd58
   1c75c:	stp	x22, x1, [sp, #104]
   1c760:	str	xzr, [sp, #152]
   1c764:	bl	1e648 <OnPrint@@Base+0x398>
   1c768:	b	1c77c <__sanitizer_set_report_fd@@Base+0x54cc>
   1c76c:	ldp	x1, x2, [sp, #80]
   1c770:	mov	x0, x20
   1c774:	ldr	x3, [sp, #104]
   1c778:	bl	1e5c0 <OnPrint@@Base+0x310>
   1c77c:	mov	x1, x21
   1c780:	mov	x0, x19
   1c784:	bl	1f018 <OnPrint@@Base+0xd68>
   1c788:	tst	w0, #0xff
   1c78c:	b.ne	1c76c <__sanitizer_set_report_fd@@Base+0x54bc>  // b.any
   1c790:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c794:	add	x0, x0, #0xd88
   1c798:	bl	1e648 <OnPrint@@Base+0x398>
   1c79c:	mov	x1, #0xfff                 	// #4095
   1c7a0:	mov	x0, x22
   1c7a4:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1c7a8:	mov	x0, x19
   1c7ac:	bl	1e8e8 <OnPrint@@Base+0x638>
   1c7b0:	ldp	x21, x22, [sp, #16]
   1c7b4:	ldr	x30, [sp, #32]
   1c7b8:	ldp	x19, x20, [sp], #160
   1c7bc:	ret
   1c7c0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c7c4:	add	x0, x0, #0xda8
   1c7c8:	b	19b20 <__sanitizer_set_report_fd@@Base+0x2870>
   1c7cc:	nop
   1c7d0:	and	w0, w0, #0xff
   1c7d4:	cmp	w0, #0x2f
   1c7d8:	cset	w0, eq  // eq = none
   1c7dc:	ret
   1c7e0:	cbz	x0, 1c7f4 <__sanitizer_set_report_fd@@Base+0x5544>
   1c7e4:	ldrb	w0, [x0]
   1c7e8:	cmp	w0, #0x2f
   1c7ec:	cset	w0, eq  // eq = none
   1c7f0:	ret
   1c7f4:	mov	w0, #0x0                   	// #0
   1c7f8:	ret
   1c7fc:	nop
   1c800:	stp	x19, x20, [sp, #-48]!
   1c804:	mov	x19, x0
   1c808:	mov	x20, x2
   1c80c:	stp	x21, x22, [sp, #16]
   1c810:	mov	x22, x1
   1c814:	mov	w1, #0x1                   	// #1
   1c818:	ldr	x21, [x0]
   1c81c:	str	x30, [sp, #32]
   1c820:	ldxrb	w0, [x21]
   1c824:	stxrb	w2, w1, [x21]
   1c828:	cbnz	w2, 1c820 <__sanitizer_set_report_fd@@Base+0x5570>
   1c82c:	dmb	ish
   1c830:	tst	w0, #0xff
   1c834:	b.eq	1c840 <__sanitizer_set_report_fd@@Base+0x5590>  // b.none
   1c838:	mov	x0, x21
   1c83c:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   1c840:	mov	x0, x19
   1c844:	bl	16858 <__sanitizer_cov_dump@@Base+0x1da0>
   1c848:	ldr	w0, [x19, #8]
   1c84c:	mov	x2, x20
   1c850:	mov	x1, x22
   1c854:	bl	198a8 <__sanitizer_set_report_fd@@Base+0x25f8>
   1c858:	cmp	x0, x20
   1c85c:	b.ne	1c878 <__sanitizer_set_report_fd@@Base+0x55c8>  // b.any
   1c860:	dmb	ish
   1c864:	strb	wzr, [x21]
   1c868:	ldp	x21, x22, [sp, #16]
   1c86c:	ldr	x30, [sp, #32]
   1c870:	ldp	x19, x20, [sp], #48
   1c874:	ret
   1c878:	ldr	w20, [x19, #8]
   1c87c:	adrp	x19, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1c880:	add	x19, x19, #0xdb0
   1c884:	mov	x0, x19
   1c888:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   1c88c:	mov	x1, x19
   1c890:	mov	x2, x0
   1c894:	mov	w0, w20
   1c898:	bl	198a8 <__sanitizer_set_report_fd@@Base+0x25f8>
   1c89c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1c8a0:	stp	x19, x20, [sp, #-192]!
   1c8a4:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c8a8:	add	x20, sp, #0x50
   1c8ac:	stp	x21, x22, [sp, #16]
   1c8b0:	mov	x22, x0
   1c8b4:	mov	x0, x20
   1c8b8:	stp	x23, x24, [sp, #32]
   1c8bc:	mov	x24, x1
   1c8c0:	mov	x23, x2
   1c8c4:	mov	w1, #0x0                   	// #0
   1c8c8:	stp	x25, x26, [sp, #48]
   1c8cc:	str	x30, [sp, #64]
   1c8d0:	bl	1ea18 <OnPrint@@Base+0x768>
   1c8d4:	ldr	x21, [x19, #4000]
   1c8d8:	ldr	x3, [x21]
   1c8dc:	cbz	x3, 1c9c8 <__sanitizer_set_report_fd@@Base+0x5718>
   1c8e0:	sub	x0, x3, #0x1
   1c8e4:	tst	x0, x3
   1c8e8:	b.ne	1ca34 <__sanitizer_set_report_fd@@Base+0x5784>  // b.any
   1c8ec:	add	x26, x3, #0xfff
   1c8f0:	neg	x3, x3
   1c8f4:	and	x26, x26, x3
   1c8f8:	mov	w2, #0x0                   	// #0
   1c8fc:	mov	x0, x26
   1c900:	adrp	x21, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1c904:	add	x1, x21, #0x258
   1c908:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1c90c:	mov	x2, #0x0                   	// #0
   1c910:	mov	x1, #0x0                   	// #0
   1c914:	mov	x25, x0
   1c918:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1c91c:	mov	x1, #0x0                   	// #0
   1c920:	mov	x0, #0x0                   	// #0
   1c924:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1c928:	cmp	x26, #0xfff
   1c92c:	b.ls	1c9d8 <__sanitizer_set_report_fd@@Base+0x5728>  // b.plast
   1c930:	mov	x0, x25
   1c934:	mov	x2, #0x1000                	// #4096
   1c938:	mov	w1, #0x0                   	// #0
   1c93c:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   1c940:	strb	wzr, [x25]
   1c944:	mov	x0, #0x1000                	// #4096
   1c948:	add	x21, sp, #0x70
   1c94c:	stp	x25, x0, [sp, #136]
   1c950:	str	xzr, [sp, #184]
   1c954:	b	1c960 <__sanitizer_set_report_fd@@Base+0x56b0>
   1c958:	ldr	x3, [sp, #152]
   1c95c:	tbnz	w3, #2, 1c9a4 <__sanitizer_set_report_fd@@Base+0x56f4>
   1c960:	mov	x1, x21
   1c964:	mov	x0, x20
   1c968:	bl	1f018 <OnPrint@@Base+0xd68>
   1c96c:	ands	w19, w0, #0xff
   1c970:	b.ne	1c958 <__sanitizer_set_report_fd@@Base+0x56a8>  // b.any
   1c974:	mov	x1, x26
   1c978:	mov	x0, x25
   1c97c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1c980:	mov	x0, x20
   1c984:	bl	1e8e8 <OnPrint@@Base+0x638>
   1c988:	mov	w0, w19
   1c98c:	ldp	x21, x22, [sp, #16]
   1c990:	ldp	x23, x24, [sp, #32]
   1c994:	ldp	x25, x26, [sp, #48]
   1c998:	ldr	x30, [sp, #64]
   1c99c:	ldp	x19, x20, [sp], #192
   1c9a0:	ret
   1c9a4:	ldr	x1, [sp, #136]
   1c9a8:	mov	x0, x22
   1c9ac:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   1c9b0:	cbnz	w0, 1c960 <__sanitizer_set_report_fd@@Base+0x56b0>
   1c9b4:	ldr	x0, [sp, #112]
   1c9b8:	str	x0, [x24]
   1c9bc:	ldr	x0, [sp, #120]
   1c9c0:	str	x0, [x23]
   1c9c4:	b	1c974 <__sanitizer_set_report_fd@@Base+0x56c4>
   1c9c8:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1c9cc:	mov	x3, x0
   1c9d0:	str	x0, [x21]
   1c9d4:	b	1c8e0 <__sanitizer_set_report_fd@@Base+0x5630>
   1c9d8:	ldr	x19, [x19, #4000]
   1c9dc:	ldr	x0, [x19]
   1c9e0:	cbz	x0, 1ca44 <__sanitizer_set_report_fd@@Base+0x5794>
   1c9e4:	sub	x1, x0, #0x1
   1c9e8:	tst	x1, x0
   1c9ec:	b.ne	1ca34 <__sanitizer_set_report_fd@@Base+0x5784>  // b.any
   1c9f0:	add	x19, x0, #0xfff
   1c9f4:	neg	x0, x0
   1c9f8:	and	x19, x19, x0
   1c9fc:	add	x1, x21, #0x258
   1ca00:	mov	x0, x19
   1ca04:	mov	w2, #0x0                   	// #0
   1ca08:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1ca0c:	mov	x21, x0
   1ca10:	mov	x2, #0x0                   	// #0
   1ca14:	mov	x1, x25
   1ca18:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1ca1c:	mov	x1, x26
   1ca20:	mov	x0, x25
   1ca24:	mov	x26, x19
   1ca28:	mov	x25, x21
   1ca2c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1ca30:	b	1c930 <__sanitizer_set_report_fd@@Base+0x5680>
   1ca34:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1ca38:	add	x0, x0, #0x240
   1ca3c:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1ca40:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1ca44:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1ca48:	str	x0, [x19]
   1ca4c:	b	1c9e4 <__sanitizer_set_report_fd@@Base+0x5734>
   1ca50:	ldr	x0, [x0]
   1ca54:	ldr	x0, [x0, #16]
   1ca58:	ret
   1ca5c:	nop
   1ca60:	ldr	x0, [x0]
   1ca64:	ldr	w0, [x0]
   1ca68:	cmp	w0, #0xb
   1ca6c:	cset	w0, eq  // eq = none
   1ca70:	ret
   1ca74:	nop
   1ca78:	ldr	x0, [x0]
   1ca7c:	ldr	w0, [x0]
   1ca80:	ret
   1ca84:	nop
   1ca88:	ldr	x0, [x0]
   1ca8c:	ldr	w0, [x0]
   1ca90:	cmp	w0, #0x7
   1ca94:	b.eq	1caec <__sanitizer_set_report_fd@@Base+0x583c>  // b.none
   1ca98:	b.le	1cab8 <__sanitizer_set_report_fd@@Base+0x5808>
   1ca9c:	cmp	w0, #0x8
   1caa0:	b.eq	1cad4 <__sanitizer_set_report_fd@@Base+0x5824>  // b.none
   1caa4:	cmp	w0, #0xb
   1caa8:	b.ne	1caf8 <__sanitizer_set_report_fd@@Base+0x5848>  // b.any
   1caac:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cab0:	add	x0, x0, #0xe18
   1cab4:	ret
   1cab8:	cmp	w0, #0x4
   1cabc:	b.eq	1cae0 <__sanitizer_set_report_fd@@Base+0x5830>  // b.none
   1cac0:	cmp	w0, #0x6
   1cac4:	b.ne	1caf8 <__sanitizer_set_report_fd@@Base+0x5848>  // b.any
   1cac8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cacc:	add	x0, x0, #0xe10
   1cad0:	ret
   1cad4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cad8:	add	x0, x0, #0xe08
   1cadc:	ret
   1cae0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cae4:	add	x0, x0, #0xe00
   1cae8:	ret
   1caec:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1caf0:	add	x0, x0, #0xdf8
   1caf4:	ret
   1caf8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cafc:	add	x0, x0, #0xde8
   1cb00:	ret
   1cb04:	nop
   1cb08:	str	x30, [sp, #-32]!
   1cb0c:	add	x1, sp, #0x10
   1cb10:	bl	6cb0 <getrlimit@plt>
   1cb14:	cbnz	w0, 1cb24 <__sanitizer_set_report_fd@@Base+0x5874>
   1cb18:	ldr	x0, [sp, #16]
   1cb1c:	ldr	x30, [sp], #32
   1cb20:	ret
   1cb24:	sxtw	x4, w0
   1cb28:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cb2c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cb30:	add	x2, x2, #0xe30
   1cb34:	add	x0, x0, #0xe58
   1cb38:	mov	x3, #0x0                   	// #0
   1cb3c:	mov	w1, #0x5a                  	// #90
   1cb40:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1cb44:	nop
   1cb48:	stp	x19, x30, [sp, #-32]!
   1cb4c:	mov	x2, x1
   1cb50:	str	x2, [sp, #16]
   1cb54:	add	x1, sp, #0x10
   1cb58:	str	x2, [sp, #24]
   1cb5c:	bl	6ba0 <setrlimit@plt>
   1cb60:	cbnz	w0, 1cb6c <__sanitizer_set_report_fd@@Base+0x58bc>
   1cb64:	ldp	x19, x30, [sp], #32
   1cb68:	ret
   1cb6c:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1cb70:	ldr	x0, [x0, #4008]
   1cb74:	ldr	x19, [x0]
   1cb78:	bl	6ac0 <__errno_location@plt>
   1cb7c:	mov	x2, x0
   1cb80:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cb84:	mov	x1, x19
   1cb88:	add	x0, x0, #0xea0
   1cb8c:	ldr	w2, [x2]
   1cb90:	bl	1e648 <OnPrint@@Base+0x398>
   1cb94:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1cb98:	stp	x19, x20, [sp, #-192]!
   1cb9c:	mov	x19, x1
   1cba0:	stp	x21, x30, [sp, #16]
   1cba4:	mov	w21, w0
   1cba8:	bl	1ad60 <__sanitizer_set_report_fd@@Base+0x3ab0>
   1cbac:	cbnz	w0, 1cbbc <__sanitizer_set_report_fd@@Base+0x590c>
   1cbb0:	ldp	x21, x30, [sp, #16]
   1cbb4:	ldp	x19, x20, [sp], #192
   1cbb8:	ret
   1cbbc:	add	x20, sp, #0x28
   1cbc0:	mov	x2, #0x98                  	// #152
   1cbc4:	mov	w1, #0x0                   	// #0
   1cbc8:	mov	x0, x20
   1cbcc:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   1cbd0:	str	x19, [sp, #40]
   1cbd4:	adrp	x4, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1cbd8:	mov	w5, #0x4                   	// #4
   1cbdc:	mov	w3, #0x4                   	// #4
   1cbe0:	movk	w5, #0x4000, lsl #16
   1cbe4:	ldr	x4, [x4, #4040]
   1cbe8:	movk	w3, #0x4800, lsl #16
   1cbec:	mov	x1, x20
   1cbf0:	mov	w0, w21
   1cbf4:	mov	x2, #0x0                   	// #0
   1cbf8:	ldrb	w4, [x4, #97]
   1cbfc:	cmp	w4, #0x0
   1cc00:	csel	w3, w3, w5, ne  // ne = any
   1cc04:	str	w3, [sp, #176]
   1cc08:	bl	1b468 <__sanitizer_set_report_fd@@Base+0x41b8>
   1cc0c:	sxtw	x4, w0
   1cc10:	cbnz	w0, 1cc40 <__sanitizer_set_report_fd@@Base+0x5990>
   1cc14:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1cc18:	ldr	x0, [x0, #3680]
   1cc1c:	ldr	w0, [x0]
   1cc20:	cbz	w0, 1cbb0 <__sanitizer_set_report_fd@@Base+0x5900>
   1cc24:	mov	w1, w21
   1cc28:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cc2c:	add	x0, x0, #0xf08
   1cc30:	bl	1e648 <OnPrint@@Base+0x398>
   1cc34:	ldp	x21, x30, [sp, #16]
   1cc38:	ldp	x19, x20, [sp], #192
   1cc3c:	ret
   1cc40:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cc44:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cc48:	add	x2, x2, #0xec8
   1cc4c:	add	x0, x0, #0xe58
   1cc50:	mov	x3, #0x0                   	// #0
   1cc54:	mov	w1, #0xd2                  	// #210
   1cc58:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1cc5c:	nop
   1cc60:	b	6c60 <getuid@plt>
   1cc64:	nop
   1cc68:	b	6c50 <pthread_self@plt>
   1cc6c:	nop
   1cc70:	stp	x19, x20, [sp, #-32]!
   1cc74:	mov	x19, x0
   1cc78:	mov	x20, x1
   1cc7c:	stp	x21, x30, [sp, #16]
   1cc80:	adrp	x21, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1cc84:	ldr	x21, [x21, #4000]
   1cc88:	ldr	x2, [x21]
   1cc8c:	cbz	x2, 1ccc0 <__sanitizer_set_report_fd@@Base+0x5a10>
   1cc90:	sub	x0, x2, #0x1
   1cc94:	tst	x2, x0
   1cc98:	b.ne	1ccd8 <__sanitizer_set_report_fd@@Base+0x5a28>  // b.any
   1cc9c:	neg	x2, x2
   1cca0:	add	x0, x19, x0
   1cca4:	and	x20, x20, x2
   1cca8:	and	x0, x0, x2
   1ccac:	cmp	x20, x0
   1ccb0:	b.hi	1cce8 <__sanitizer_set_report_fd@@Base+0x5a38>  // b.pmore
   1ccb4:	ldp	x21, x30, [sp, #16]
   1ccb8:	ldp	x19, x20, [sp], #32
   1ccbc:	ret
   1ccc0:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1ccc4:	mov	x2, x0
   1ccc8:	str	x0, [x21]
   1cccc:	sub	x0, x2, #0x1
   1ccd0:	tst	x2, x0
   1ccd4:	b.eq	1cc9c <__sanitizer_set_report_fd@@Base+0x59ec>  // b.none
   1ccd8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1ccdc:	add	x0, x0, #0x240
   1cce0:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1cce4:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1cce8:	sub	x1, x20, x0
   1ccec:	mov	w2, #0x4                   	// #4
   1ccf0:	ldp	x21, x30, [sp, #16]
   1ccf4:	ldp	x19, x20, [sp], #32
   1ccf8:	b	6a70 <madvise@plt>
   1ccfc:	nop
   1cd00:	str	x30, [sp, #-16]!
   1cd04:	mov	w2, #0xf                   	// #15
   1cd08:	bl	6a70 <madvise@plt>
   1cd0c:	cmp	w0, #0x0
   1cd10:	cset	w0, eq  // eq = none
   1cd14:	ldr	x30, [sp], #16
   1cd18:	ret
   1cd1c:	nop
   1cd20:	str	x30, [sp, #-16]!
   1cd24:	mov	w2, #0x10                  	// #16
   1cd28:	bl	6a70 <madvise@plt>
   1cd2c:	cmp	w0, #0x0
   1cd30:	cset	w0, eq  // eq = none
   1cd34:	ldr	x30, [sp], #16
   1cd38:	ret
   1cd3c:	nop
   1cd40:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1cd44:	ldr	x0, [x0, #4040]
   1cd48:	ldrb	w0, [x0, #178]
   1cd4c:	cbnz	w0, 1cd54 <__sanitizer_set_report_fd@@Base+0x5aa4>
   1cd50:	ret
   1cd54:	mov	x1, #0x0                   	// #0
   1cd58:	mov	w0, #0x4                   	// #4
   1cd5c:	b	1cb48 <__sanitizer_set_report_fd@@Base+0x5898>
   1cd60:	str	x30, [sp, #-16]!
   1cd64:	mov	w0, #0x3                   	// #3
   1cd68:	bl	1cb08 <__sanitizer_set_report_fd@@Base+0x5858>
   1cd6c:	cmn	x0, #0x1
   1cd70:	cset	w0, eq  // eq = none
   1cd74:	ldr	x30, [sp], #16
   1cd78:	ret
   1cd7c:	nop
   1cd80:	mov	w0, #0x3                   	// #3
   1cd84:	b	1cb08 <__sanitizer_set_report_fd@@Base+0x5858>
   1cd88:	mov	x1, x0
   1cd8c:	str	x30, [sp, #-16]!
   1cd90:	mov	w0, #0x3                   	// #3
   1cd94:	bl	1cb48 <__sanitizer_set_report_fd@@Base+0x5898>
   1cd98:	mov	w0, #0x3                   	// #3
   1cd9c:	bl	1cb08 <__sanitizer_set_report_fd@@Base+0x5858>
   1cda0:	cmn	x0, #0x1
   1cda4:	b.eq	1cdb0 <__sanitizer_set_report_fd@@Base+0x5b00>  // b.none
   1cda8:	ldr	x30, [sp], #16
   1cdac:	ret
   1cdb0:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cdb4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cdb8:	add	x2, x2, #0xf30
   1cdbc:	add	x0, x0, #0xe58
   1cdc0:	mov	x4, #0x0                   	// #0
   1cdc4:	mov	x3, #0x0                   	// #0
   1cdc8:	mov	w1, #0x7a                  	// #122
   1cdcc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1cdd0:	str	x30, [sp, #-16]!
   1cdd4:	mov	w0, #0x9                   	// #9
   1cdd8:	bl	1cb08 <__sanitizer_set_report_fd@@Base+0x5858>
   1cddc:	cmn	x0, #0x1
   1cde0:	cset	w0, eq  // eq = none
   1cde4:	ldr	x30, [sp], #16
   1cde8:	ret
   1cdec:	nop
   1cdf0:	str	x30, [sp, #-16]!
   1cdf4:	mov	x1, #0xffffffffffffffff    	// #-1
   1cdf8:	mov	w0, #0x9                   	// #9
   1cdfc:	bl	1cb48 <__sanitizer_set_report_fd@@Base+0x5898>
   1ce00:	mov	w0, #0x9                   	// #9
   1ce04:	bl	1cb08 <__sanitizer_set_report_fd@@Base+0x5858>
   1ce08:	cmn	x0, #0x1
   1ce0c:	b.ne	1ce18 <__sanitizer_set_report_fd@@Base+0x5b68>  // b.any
   1ce10:	ldr	x30, [sp], #16
   1ce14:	ret
   1ce18:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1ce1c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1ce20:	add	x2, x2, #0xf58
   1ce24:	add	x0, x0, #0xe58
   1ce28:	mov	x4, #0x0                   	// #0
   1ce2c:	mov	x3, #0x0                   	// #0
   1ce30:	mov	w1, #0x84                  	// #132
   1ce34:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1ce38:	b	6820 <sleep@plt>
   1ce3c:	nop
   1ce40:	mov	w1, #0x3e8                 	// #1000
   1ce44:	mul	w0, w0, w1
   1ce48:	b	6a80 <usleep@plt>
   1ce4c:	nop
   1ce50:	stp	x19, x30, [sp, #-176]!
   1ce54:	mov	w0, #0x6                   	// #6
   1ce58:	bl	1ad60 <__sanitizer_set_report_fd@@Base+0x3ab0>
   1ce5c:	cbnz	w0, 1ce64 <__sanitizer_set_report_fd@@Base+0x5bb4>
   1ce60:	bl	6bf0 <abort@plt>
   1ce64:	add	x19, sp, #0x18
   1ce68:	mov	x2, #0x98                  	// #152
   1ce6c:	mov	w1, #0x0                   	// #0
   1ce70:	mov	x0, x19
   1ce74:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   1ce78:	str	xzr, [sp, #24]
   1ce7c:	mov	x1, x19
   1ce80:	mov	x2, #0x0                   	// #0
   1ce84:	mov	w0, #0x6                   	// #6
   1ce88:	bl	1b468 <__sanitizer_set_report_fd@@Base+0x41b8>
   1ce8c:	bl	6bf0 <abort@plt>
   1ce90:	b	3a030 <__asan_backtrace_vector_release@@Base+0x58>
   1ce94:	nop
   1ce98:	str	x30, [sp, #-16]!
   1ce9c:	bl	6890 <isatty@plt>
   1cea0:	cmp	w0, #0x0
   1cea4:	cset	w0, ne  // ne = any
   1cea8:	ldr	x30, [sp], #16
   1ceac:	ret
   1ceb0:	str	x30, [sp, #-64]!
   1ceb4:	mov	x0, #0x0                   	// #0
   1ceb8:	add	x1, sp, #0x10
   1cebc:	bl	6cc0 <sigaltstack@plt>
   1cec0:	cbnz	w0, 1cf2c <__sanitizer_set_report_fd@@Base+0x5c7c>
   1cec4:	ldr	w0, [sp, #24]
   1cec8:	tbnz	w0, #1, 1ced4 <__sanitizer_set_report_fd@@Base+0x5c24>
   1cecc:	ldr	x30, [sp], #64
   1ced0:	ret
   1ced4:	mov	w2, #0x0                   	// #0
   1ced8:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cedc:	mov	x0, #0x10000               	// #65536
   1cee0:	add	x1, x1, #0xfb0
   1cee4:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1cee8:	mov	x3, x0
   1ceec:	mov	x2, #0x10000               	// #65536
   1cef0:	add	x0, sp, #0x28
   1cef4:	mov	x1, #0x0                   	// #0
   1cef8:	str	x3, [sp, #40]
   1cefc:	str	wzr, [sp, #48]
   1cf00:	str	x2, [sp, #56]
   1cf04:	bl	6cc0 <sigaltstack@plt>
   1cf08:	sxtw	x4, w0
   1cf0c:	cbz	w0, 1cecc <__sanitizer_set_report_fd@@Base+0x5c1c>
   1cf10:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cf14:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cf18:	add	x2, x2, #0xfc8
   1cf1c:	add	x0, x0, #0xe58
   1cf20:	mov	x3, #0x0                   	// #0
   1cf24:	mov	w1, #0xbb                  	// #187
   1cf28:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1cf2c:	sxtw	x4, w0
   1cf30:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cf34:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cf38:	add	x2, x2, #0xf80
   1cf3c:	add	x0, x0, #0xe58
   1cf40:	mov	x3, #0x0                   	// #0
   1cf44:	mov	w1, #0xb0                  	// #176
   1cf48:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1cf4c:	nop
   1cf50:	mov	w3, #0x2                   	// #2
   1cf54:	mov	x2, #0x10000               	// #65536
   1cf58:	str	x30, [sp, #-64]!
   1cf5c:	add	x1, sp, #0x28
   1cf60:	add	x0, sp, #0x10
   1cf64:	str	xzr, [sp, #16]
   1cf68:	str	w3, [sp, #24]
   1cf6c:	str	x2, [sp, #32]
   1cf70:	bl	6cc0 <sigaltstack@plt>
   1cf74:	cbnz	w0, 1cf8c <__sanitizer_set_report_fd@@Base+0x5cdc>
   1cf78:	ldr	x0, [sp, #40]
   1cf7c:	ldr	x1, [sp, #56]
   1cf80:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1cf84:	ldr	x30, [sp], #64
   1cf88:	ret
   1cf8c:	sxtw	x4, w0
   1cf90:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cf94:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1cf98:	add	x2, x2, #0xff8
   1cf9c:	add	x0, x0, #0xe58
   1cfa0:	mov	x3, #0x0                   	// #0
   1cfa4:	mov	w1, #0xc3                  	// #195
   1cfa8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1cfac:	nop
   1cfb0:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1cfb4:	stp	x19, x30, [sp, #-16]!
   1cfb8:	mov	x19, x0
   1cfbc:	ldr	x1, [x1, #4040]
   1cfc0:	ldrb	w0, [x1, #97]
   1cfc4:	cbnz	w0, 1d014 <__sanitizer_set_report_fd@@Base+0x5d64>
   1cfc8:	mov	x1, x19
   1cfcc:	mov	w0, #0xb                   	// #11
   1cfd0:	bl	1cb98 <__sanitizer_set_report_fd@@Base+0x58e8>
   1cfd4:	mov	x1, x19
   1cfd8:	mov	w0, #0x7                   	// #7
   1cfdc:	bl	1cb98 <__sanitizer_set_report_fd@@Base+0x58e8>
   1cfe0:	mov	x1, x19
   1cfe4:	mov	w0, #0x6                   	// #6
   1cfe8:	bl	1cb98 <__sanitizer_set_report_fd@@Base+0x58e8>
   1cfec:	mov	x1, x19
   1cff0:	mov	w0, #0x8                   	// #8
   1cff4:	bl	1cb98 <__sanitizer_set_report_fd@@Base+0x58e8>
   1cff8:	mov	x1, x19
   1cffc:	mov	w0, #0x4                   	// #4
   1d000:	bl	1cb98 <__sanitizer_set_report_fd@@Base+0x58e8>
   1d004:	mov	x1, x19
   1d008:	mov	w0, #0x5                   	// #5
   1d00c:	ldp	x19, x30, [sp], #16
   1d010:	b	1cb98 <__sanitizer_set_report_fd@@Base+0x58e8>
   1d014:	bl	1ceb0 <__sanitizer_set_report_fd@@Base+0x5c00>
   1d018:	b	1cfc8 <__sanitizer_set_report_fd@@Base+0x5d18>
   1d01c:	nop
   1d020:	stp	x19, x20, [sp, #-32]!
   1d024:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d028:	mov	x19, x0
   1d02c:	ldr	x20, [x20, #4000]
   1d030:	stp	x21, x30, [sp, #16]
   1d034:	ldr	x21, [x0, #16]
   1d038:	ldr	x0, [x20]
   1d03c:	cbz	x0, 1d0a8 <__sanitizer_set_report_fd@@Base+0x5df8>
   1d040:	ldr	x1, [x19, #32]
   1d044:	add	x21, x21, x0
   1d048:	mov	w0, #0x0                   	// #0
   1d04c:	cmp	x21, x1
   1d050:	b.ls	1d09c <__sanitizer_set_report_fd@@Base+0x5dec>  // b.plast
   1d054:	mov	x2, #0xffff                	// #65535
   1d058:	add	x1, x1, x2
   1d05c:	ldr	x2, [x19, #16]
   1d060:	cmp	x2, x1
   1d064:	b.cs	1d09c <__sanitizer_set_report_fd@@Base+0x5dec>  // b.hs, b.nlast
   1d068:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d06c:	mov	w0, #0x1                   	// #1
   1d070:	ldr	x2, [x19]
   1d074:	ldr	x1, [x1, #3424]
   1d078:	ldr	w2, [x2, #8]
   1d07c:	ldr	w1, [x1]
   1d080:	cmp	w2, w1
   1d084:	b.eq	1d09c <__sanitizer_set_report_fd@@Base+0x5dec>  // b.none
   1d088:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d08c:	ldr	x0, [x0, #3472]
   1d090:	ldr	w0, [x0]
   1d094:	cmp	w0, w2
   1d098:	cset	w0, eq  // eq = none
   1d09c:	ldp	x21, x30, [sp, #16]
   1d0a0:	ldp	x19, x20, [sp], #32
   1d0a4:	ret
   1d0a8:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1d0ac:	str	x0, [x20]
   1d0b0:	b	1d040 <__sanitizer_set_report_fd@@Base+0x5d90>
   1d0b4:	nop
   1d0b8:	stp	x19, x20, [sp, #-64]!
   1d0bc:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d0c0:	mov	x19, x1
   1d0c4:	ldr	x20, [x20, #4000]
   1d0c8:	stp	x21, x22, [sp, #16]
   1d0cc:	mov	x21, x0
   1d0d0:	ldr	x4, [x20]
   1d0d4:	str	x30, [sp, #32]
   1d0d8:	cbz	x4, 1d16c <__sanitizer_set_report_fd@@Base+0x5ebc>
   1d0dc:	add	x4, x4, x4, lsl #2
   1d0e0:	cmp	x19, x4, lsl #1
   1d0e4:	lsl	x4, x4, #1
   1d0e8:	b.cs	1d188 <__sanitizer_set_report_fd@@Base+0x5ed8>  // b.hs, b.nlast
   1d0ec:	add	x0, sp, #0x38
   1d0f0:	mov	w22, #0x0                   	// #0
   1d0f4:	bl	6720 <pipe@plt>
   1d0f8:	mov	w20, w0
   1d0fc:	cbz	w0, 1d114 <__sanitizer_set_report_fd@@Base+0x5e64>
   1d100:	mov	w0, w22
   1d104:	ldp	x21, x22, [sp, #16]
   1d108:	ldr	x30, [sp, #32]
   1d10c:	ldp	x19, x20, [sp], #64
   1d110:	ret
   1d114:	ldr	w0, [sp, #60]
   1d118:	mov	x2, x19
   1d11c:	mov	x1, x21
   1d120:	bl	198a8 <__sanitizer_set_report_fd@@Base+0x25f8>
   1d124:	mov	x21, x0
   1d128:	add	x1, sp, #0x34
   1d12c:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   1d130:	tst	w0, #0xff
   1d134:	b.eq	1d1a4 <__sanitizer_set_report_fd@@Base+0x5ef4>  // b.none
   1d138:	ldrsw	x4, [sp, #52]
   1d13c:	mov	w22, w20
   1d140:	cmp	x4, #0xe
   1d144:	b.ne	1d1c0 <__sanitizer_set_report_fd@@Base+0x5f10>  // b.any
   1d148:	ldr	w0, [sp, #56]
   1d14c:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   1d150:	ldr	w0, [sp, #60]
   1d154:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   1d158:	mov	w0, w22
   1d15c:	ldp	x21, x22, [sp, #16]
   1d160:	ldr	x30, [sp, #32]
   1d164:	ldp	x19, x20, [sp], #64
   1d168:	ret
   1d16c:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1d170:	mov	x4, x0
   1d174:	str	x0, [x20]
   1d178:	add	x4, x4, x4, lsl #2
   1d17c:	cmp	x19, x4, lsl #1
   1d180:	lsl	x4, x4, #1
   1d184:	b.cc	1d0ec <__sanitizer_set_report_fd@@Base+0x5e3c>  // b.lo, b.ul, b.last
   1d188:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1d18c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1d190:	mov	x3, x19
   1d194:	add	x2, x2, #0x28
   1d198:	add	x0, x0, #0xe58
   1d19c:	mov	w1, #0x118                 	// #280
   1d1a0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1d1a4:	ldr	w0, [sp, #56]
   1d1a8:	cmp	x19, x21
   1d1ac:	cset	w22, eq  // eq = none
   1d1b0:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   1d1b4:	ldr	w0, [sp, #60]
   1d1b8:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   1d1bc:	b	1d158 <__sanitizer_set_report_fd@@Base+0x5ea8>
   1d1c0:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1d1c4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1d1c8:	add	x2, x2, #0x48
   1d1cc:	add	x0, x0, #0xe58
   1d1d0:	mov	x3, #0xe                   	// #14
   1d1d4:	mov	w1, #0x121                 	// #289
   1d1d8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1d1dc:	nop
   1d1e0:	b	1e920 <OnPrint@@Base+0x670>
   1d1e4:	nop
   1d1e8:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d1ec:	stp	x19, x20, [sp, #-240]!
   1d1f0:	ldr	x2, [x2, #4040]
   1d1f4:	ldrb	w2, [x2, #215]
   1d1f8:	str	x30, [sp, #16]
   1d1fc:	cbz	w2, 1d2d4 <__sanitizer_set_report_fd@@Base+0x6024>
   1d200:	mov	x20, x1
   1d204:	mov	x19, x0
   1d208:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   1d20c:	cmp	x0, #0xbd
   1d210:	b.hi	1d27c <__sanitizer_set_report_fd@@Base+0x5fcc>  // b.pmore
   1d214:	bl	19e88 <__sanitizer_set_report_fd@@Base+0x2bd8>
   1d218:	mov	x3, x0
   1d21c:	mov	x4, x19
   1d220:	add	x19, sp, #0x28
   1d224:	mov	x1, #0xc8                  	// #200
   1d228:	mov	x0, x19
   1d22c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1d230:	add	x2, x2, #0xa0
   1d234:	bl	1e2b8 <OnPrint@@Base+0x8>
   1d238:	mov	w2, #0x1c0                 	// #448
   1d23c:	mov	w1, #0x242                 	// #578
   1d240:	mov	x0, x19
   1d244:	bl	66d0 <shm_open@plt>
   1d248:	mov	x1, x20
   1d24c:	mov	w20, w0
   1d250:	bl	198d0 <__sanitizer_set_report_fd@@Base+0x2620>
   1d254:	sxtw	x4, w0
   1d258:	cbnz	w0, 1d29c <__sanitizer_set_report_fd@@Base+0x5fec>
   1d25c:	mov	x0, x19
   1d260:	bl	6a90 <shm_unlink@plt>
   1d264:	sxtw	x4, w0
   1d268:	cbnz	w0, 1d2b8 <__sanitizer_set_report_fd@@Base+0x6008>
   1d26c:	mov	w0, w20
   1d270:	ldr	x30, [sp, #16]
   1d274:	ldp	x19, x20, [sp], #240
   1d278:	ret
   1d27c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1d280:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1d284:	add	x2, x2, #0x68
   1d288:	add	x0, x0, #0xe58
   1d28c:	mov	x4, #0x0                   	// #0
   1d290:	mov	x3, #0x0                   	// #0
   1d294:	mov	w1, #0x13c                 	// #316
   1d298:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1d29c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1d2a0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1d2a4:	add	x2, x2, #0xb0
   1d2a8:	add	x0, x0, #0xe58
   1d2ac:	mov	x3, #0x0                   	// #0
   1d2b0:	mov	w1, #0x142                 	// #322
   1d2b4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1d2b8:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1d2bc:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1d2c0:	add	x2, x2, #0xb0
   1d2c4:	add	x0, x0, #0xe58
   1d2c8:	mov	x3, #0x0                   	// #0
   1d2cc:	mov	w1, #0x144                 	// #324
   1d2d0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1d2d4:	mov	w20, #0xffffffff            	// #-1
   1d2d8:	b	1d26c <__sanitizer_set_report_fd@@Base+0x5fbc>
   1d2dc:	nop
   1d2e0:	stp	x19, x20, [sp, #-64]!
   1d2e4:	mov	x19, x1
   1d2e8:	stp	x21, x22, [sp, #16]
   1d2ec:	mov	x21, x0
   1d2f0:	stp	x23, x30, [sp, #32]
   1d2f4:	cbz	x2, 1d380 <__sanitizer_set_report_fd@@Base+0x60d0>
   1d2f8:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d2fc:	mov	x0, x2
   1d300:	bl	1d1e8 <__sanitizer_set_report_fd@@Base+0x5f38>
   1d304:	cmn	w0, #0x1
   1d308:	ldr	x20, [x20, #4000]
   1d30c:	mov	w23, #0x4012                	// #16402
   1d310:	mov	w3, #0x4032                	// #16434
   1d314:	mov	w22, w0
   1d318:	csel	w23, w23, w3, ne  // ne = any
   1d31c:	ldr	x2, [x20]
   1d320:	cbz	x2, 1d398 <__sanitizer_set_report_fd@@Base+0x60e8>
   1d324:	neg	x6, x2
   1d328:	sub	x5, x2, #0x1
   1d32c:	and	x0, x6, x21
   1d330:	tst	x2, x5
   1d334:	b.ne	1d3b8 <__sanitizer_set_report_fd@@Base+0x6108>  // b.any
   1d338:	mov	w4, w22
   1d33c:	mov	w3, w23
   1d340:	add	x1, x19, x5
   1d344:	mov	w2, #0x3                   	// #3
   1d348:	mov	x5, #0x0                   	// #0
   1d34c:	and	x1, x1, x6
   1d350:	bl	19800 <__sanitizer_set_report_fd@@Base+0x2550>
   1d354:	add	x1, sp, #0x3c
   1d358:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   1d35c:	tst	w0, #0xff
   1d360:	b.ne	1d3c8 <__sanitizer_set_report_fd@@Base+0x6118>  // b.any
   1d364:	mov	x0, x19
   1d368:	bl	139e8 <__sancov_default_options@@Base+0x2df0>
   1d36c:	mov	w0, #0x1                   	// #1
   1d370:	ldp	x21, x22, [sp, #16]
   1d374:	ldp	x23, x30, [sp, #32]
   1d378:	ldp	x19, x20, [sp], #64
   1d37c:	ret
   1d380:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d384:	mov	w22, #0xffffffff            	// #-1
   1d388:	mov	w23, #0x4032                	// #16434
   1d38c:	ldr	x20, [x20, #4000]
   1d390:	ldr	x2, [x20]
   1d394:	cbnz	x2, 1d324 <__sanitizer_set_report_fd@@Base+0x6074>
   1d398:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1d39c:	mov	x2, x0
   1d3a0:	str	x0, [x20]
   1d3a4:	neg	x6, x2
   1d3a8:	sub	x5, x2, #0x1
   1d3ac:	and	x0, x6, x21
   1d3b0:	tst	x2, x5
   1d3b4:	b.eq	1d338 <__sanitizer_set_report_fd@@Base+0x6088>  // b.none
   1d3b8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1d3bc:	add	x0, x0, #0x240
   1d3c0:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1d3c4:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1d3c8:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d3cc:	ldr	w5, [sp, #60]
   1d3d0:	mov	x4, x21
   1d3d4:	mov	x3, x19
   1d3d8:	ldr	x1, [x1, #4008]
   1d3dc:	mov	x2, x19
   1d3e0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1d3e4:	add	x0, x0, #0xc8
   1d3e8:	ldr	x1, [x1]
   1d3ec:	bl	1e648 <OnPrint@@Base+0x398>
   1d3f0:	mov	w0, #0x0                   	// #0
   1d3f4:	ldp	x21, x22, [sp, #16]
   1d3f8:	ldp	x23, x30, [sp, #32]
   1d3fc:	ldp	x19, x20, [sp], #64
   1d400:	ret
   1d404:	nop
   1d408:	stp	x19, x20, [sp, #-32]!
   1d40c:	mov	x19, x0
   1d410:	mov	x20, x2
   1d414:	stp	x21, x30, [sp, #16]
   1d418:	mov	x21, x1
   1d41c:	cbz	x3, 1d44c <__sanitizer_set_report_fd@@Base+0x619c>
   1d420:	mov	x0, x3
   1d424:	mov	x5, #0x0                   	// #0
   1d428:	mov	w4, #0xffffffff            	// #-1
   1d42c:	mov	w3, #0x4032                	// #16434
   1d430:	mov	w2, #0x0                   	// #0
   1d434:	bl	19800 <__sanitizer_set_report_fd@@Base+0x2550>
   1d438:	stp	x0, x21, [x19]
   1d43c:	str	x20, [x19, #16]
   1d440:	ldp	x21, x30, [sp, #16]
   1d444:	ldp	x19, x20, [sp], #32
   1d448:	ret
   1d44c:	mov	x5, #0x0                   	// #0
   1d450:	mov	w4, #0xffffffff            	// #-1
   1d454:	mov	w3, #0x4022                	// #16418
   1d458:	mov	w2, #0x0                   	// #0
   1d45c:	mov	x0, #0x0                   	// #0
   1d460:	bl	19800 <__sanitizer_set_report_fd@@Base+0x2550>
   1d464:	stp	x0, x21, [x19]
   1d468:	str	x20, [x19, #16]
   1d46c:	ldp	x21, x30, [sp, #16]
   1d470:	ldp	x19, x20, [sp], #32
   1d474:	ret
   1d478:	mov	x0, x1
   1d47c:	mov	x1, x2
   1d480:	b	1c2d8 <__sanitizer_set_report_fd@@Base+0x5028>
   1d484:	nop
   1d488:	mov	x0, x1
   1d48c:	mov	x1, x2
   1d490:	b	1c2d0 <__sanitizer_set_report_fd@@Base+0x5020>
   1d494:	nop
   1d498:	ldr	x4, [x0, #8]
   1d49c:	str	x30, [sp, #-16]!
   1d4a0:	mov	x5, x0
   1d4a4:	cmp	x2, x4
   1d4a8:	b.hi	1d504 <__sanitizer_set_report_fd@@Base+0x6254>  // b.pmore
   1d4ac:	mov	x0, x1
   1d4b0:	ldr	x1, [x5]
   1d4b4:	cmp	x1, x0
   1d4b8:	b.eq	1d4e0 <__sanitizer_set_report_fd@@Base+0x6230>  // b.none
   1d4bc:	add	x1, x1, x4
   1d4c0:	add	x3, x2, x0
   1d4c4:	cmp	x3, x1
   1d4c8:	b.ne	1d520 <__sanitizer_set_report_fd@@Base+0x6270>  // b.any
   1d4cc:	ldr	x30, [sp], #16
   1d4d0:	sub	x4, x4, x2
   1d4d4:	str	x4, [x5, #8]
   1d4d8:	mov	x1, x2
   1d4dc:	b	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1d4e0:	ldr	x30, [sp], #16
   1d4e4:	cmp	x2, x4
   1d4e8:	add	x1, x2, x0
   1d4ec:	sub	x4, x4, x2
   1d4f0:	csel	x1, x1, xzr, ne  // ne = any
   1d4f4:	str	x1, [x5]
   1d4f8:	str	x4, [x5, #8]
   1d4fc:	mov	x1, x2
   1d500:	b	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1d504:	mov	x3, x2
   1d508:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1d50c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1d510:	add	x0, x0, #0xe58
   1d514:	add	x2, x2, #0x118
   1d518:	mov	w1, #0x175                 	// #373
   1d51c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1d520:	mov	x4, x1
   1d524:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1d528:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   1d52c:	add	x2, x2, #0x130
   1d530:	add	x0, x0, #0xe58
   1d534:	mov	w1, #0x17a                 	// #378
   1d538:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1d53c:	nop
   1d540:	stp	x19, x20, [sp, #-32]!
   1d544:	mov	x19, x0
   1d548:	mov	x20, x1
   1d54c:	str	x30, [sp, #16]
   1d550:	cbz	x2, 1d58c <__sanitizer_set_report_fd@@Base+0x62dc>
   1d554:	mov	x0, x2
   1d558:	bl	1d1e8 <__sanitizer_set_report_fd@@Base+0x5f38>
   1d55c:	mov	w4, w0
   1d560:	mov	w0, #0x4032                	// #16434
   1d564:	cmn	w4, #0x1
   1d568:	mov	x1, x20
   1d56c:	mov	w3, #0x4012                	// #16402
   1d570:	csel	w3, w3, w0, ne  // ne = any
   1d574:	mov	x0, x19
   1d578:	mov	x5, #0x0                   	// #0
   1d57c:	ldr	x30, [sp, #16]
   1d580:	mov	w2, #0x0                   	// #0
   1d584:	ldp	x19, x20, [sp], #32
   1d588:	b	19800 <__sanitizer_set_report_fd@@Base+0x2550>
   1d58c:	mov	x1, x20
   1d590:	mov	x0, x19
   1d594:	ldr	x30, [sp, #16]
   1d598:	mov	w3, #0x4032                	// #16434
   1d59c:	ldp	x19, x20, [sp], #32
   1d5a0:	mov	w4, #0xffffffff            	// #-1
   1d5a4:	mov	x5, #0x0                   	// #0
   1d5a8:	mov	w2, #0x0                   	// #0
   1d5ac:	b	19800 <__sanitizer_set_report_fd@@Base+0x2550>
   1d5b0:	mov	x1, x0
   1d5b4:	mov	x5, #0x0                   	// #0
   1d5b8:	mov	w4, #0xffffffff            	// #-1
   1d5bc:	mov	w3, #0x4022                	// #16418
   1d5c0:	mov	w2, #0x0                   	// #0
   1d5c4:	mov	x0, #0x0                   	// #0
   1d5c8:	b	19800 <__sanitizer_set_report_fd@@Base+0x2550>
   1d5cc:	nop
   1d5d0:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d5d4:	ldr	x3, [x3, #3536]
   1d5d8:	cbz	x3, 1d5e0 <__sanitizer_set_report_fd@@Base+0x6330>
   1d5dc:	b	6810 <real_pthread_attr_getstack@plt>
   1d5e0:	b	6a40 <pthread_attr_getstack@plt>
   1d5e4:	nop
   1d5e8:	stp	x19, x20, [sp, #-48]!
   1d5ec:	mov	x20, x0
   1d5f0:	add	x2, sp, #0x28
   1d5f4:	add	x1, sp, #0x20
   1d5f8:	str	x30, [sp, #16]
   1d5fc:	stp	xzr, xzr, [sp, #32]
   1d600:	bl	1d5d0 <__sanitizer_set_report_fd@@Base+0x6320>
   1d604:	ldr	x0, [sp, #32]
   1d608:	cbz	x0, 1d618 <__sanitizer_set_report_fd@@Base+0x6368>
   1d60c:	ldr	x1, [sp, #40]
   1d610:	cmn	x0, x1
   1d614:	b.ne	1d63c <__sanitizer_set_report_fd@@Base+0x638c>  // b.any
   1d618:	bl	1b818 <__sanitizer_set_report_fd@@Base+0x4568>
   1d61c:	add	x19, x0, #0x20, lsl #12
   1d620:	ldr	x1, [sp, #40]
   1d624:	cmp	x1, #0x0
   1d628:	ccmp	x19, x1, #0x0, ne  // ne = any
   1d62c:	b.hi	1d674 <__sanitizer_set_report_fd@@Base+0x63c4>  // b.pmore
   1d630:	ldr	x30, [sp, #16]
   1d634:	ldp	x19, x20, [sp], #48
   1d638:	ret
   1d63c:	bl	1b818 <__sanitizer_set_report_fd@@Base+0x4568>
   1d640:	add	x2, x0, #0x20, lsl #12
   1d644:	ldr	x1, [sp, #40]
   1d648:	cmp	x2, x1
   1d64c:	b.ls	1d630 <__sanitizer_set_report_fd@@Base+0x6380>  // b.plast
   1d650:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1d654:	add	x0, x0, #0x1a0
   1d658:	bl	1e5c0 <OnPrint@@Base+0x310>
   1d65c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1d660:	add	x0, x0, #0x1e0
   1d664:	bl	1e5c0 <OnPrint@@Base+0x310>
   1d668:	ldr	x30, [sp, #16]
   1d66c:	ldp	x19, x20, [sp], #48
   1d670:	ret
   1d674:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d678:	ldr	x0, [x0, #3680]
   1d67c:	ldr	w0, [x0]
   1d680:	cbnz	w0, 1d69c <__sanitizer_set_report_fd@@Base+0x63ec>
   1d684:	mov	x1, x19
   1d688:	mov	x0, x20
   1d68c:	bl	6a50 <pthread_attr_setstacksize@plt>
   1d690:	ldr	x30, [sp, #16]
   1d694:	ldp	x19, x20, [sp], #48
   1d698:	ret
   1d69c:	mov	x2, x19
   1d6a0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1d6a4:	add	x0, x0, #0x170
   1d6a8:	bl	1e5c0 <OnPrint@@Base+0x310>
   1d6ac:	b	1d684 <__sanitizer_set_report_fd@@Base+0x63d4>
   1d6b0:	stp	x19, x20, [sp, #-80]!
   1d6b4:	mov	w20, w4
   1d6b8:	stp	x21, x22, [sp, #16]
   1d6bc:	mov	w22, w2
   1d6c0:	mov	w21, w3
   1d6c4:	stp	x23, x24, [sp, #32]
   1d6c8:	mov	x23, x0
   1d6cc:	mov	x24, x1
   1d6d0:	str	x30, [sp, #48]
   1d6d4:	bl	19ef8 <__sanitizer_set_report_fd@@Base+0x2c48>
   1d6d8:	mov	w19, w0
   1d6dc:	cmp	w0, #0x0
   1d6e0:	b.lt	1d730 <__sanitizer_set_report_fd@@Base+0x6480>  // b.tstop
   1d6e4:	b.eq	1d758 <__sanitizer_set_report_fd@@Base+0x64a8>  // b.none
   1d6e8:	cmn	w22, #0x1
   1d6ec:	b.eq	1d6f8 <__sanitizer_set_report_fd@@Base+0x6448>  // b.none
   1d6f0:	mov	w0, w22
   1d6f4:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   1d6f8:	cmn	w21, #0x1
   1d6fc:	b.eq	1d708 <__sanitizer_set_report_fd@@Base+0x6458>  // b.none
   1d700:	mov	w0, w21
   1d704:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   1d708:	cmn	w20, #0x1
   1d70c:	b.eq	1d718 <__sanitizer_set_report_fd@@Base+0x6468>  // b.none
   1d710:	mov	w0, w20
   1d714:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   1d718:	mov	w0, w19
   1d71c:	ldp	x21, x22, [sp, #16]
   1d720:	ldp	x23, x24, [sp, #32]
   1d724:	ldr	x30, [sp, #48]
   1d728:	ldp	x19, x20, [sp], #80
   1d72c:	ret
   1d730:	add	x1, sp, #0x4c
   1d734:	sxtw	x0, w0
   1d738:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   1d73c:	tst	w0, #0xff
   1d740:	b.eq	1d6e8 <__sanitizer_set_report_fd@@Base+0x6438>  // b.none
   1d744:	ldr	w1, [sp, #76]
   1d748:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1d74c:	add	x0, x0, #0x210
   1d750:	bl	1e648 <OnPrint@@Base+0x398>
   1d754:	b	1d6e8 <__sanitizer_set_report_fd@@Base+0x6438>
   1d758:	cmn	w22, #0x1
   1d75c:	b.eq	1d778 <__sanitizer_set_report_fd@@Base+0x64c8>  // b.none
   1d760:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   1d764:	mov	w1, #0x0                   	// #0
   1d768:	mov	w0, w22
   1d76c:	bl	19970 <__sanitizer_set_report_fd@@Base+0x26c0>
   1d770:	mov	w0, w22
   1d774:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   1d778:	cmn	w21, #0x1
   1d77c:	b.eq	1d79c <__sanitizer_set_report_fd@@Base+0x64ec>  // b.none
   1d780:	mov	w0, #0x1                   	// #1
   1d784:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   1d788:	mov	w1, #0x1                   	// #1
   1d78c:	mov	w0, w21
   1d790:	bl	19970 <__sanitizer_set_report_fd@@Base+0x26c0>
   1d794:	mov	w0, w21
   1d798:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   1d79c:	cmn	w20, #0x1
   1d7a0:	b.eq	1d7c0 <__sanitizer_set_report_fd@@Base+0x6510>  // b.none
   1d7a4:	mov	w0, #0x2                   	// #2
   1d7a8:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   1d7ac:	mov	w1, #0x2                   	// #2
   1d7b0:	mov	w0, w20
   1d7b4:	bl	19970 <__sanitizer_set_report_fd@@Base+0x26c0>
   1d7b8:	mov	w0, w20
   1d7bc:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   1d7c0:	mov	w0, #0x4                   	// #4
   1d7c4:	bl	6c30 <sysconf@plt>
   1d7c8:	mov	x19, x0
   1d7cc:	cmp	w0, #0x2
   1d7d0:	b.le	1d7e8 <__sanitizer_set_report_fd@@Base+0x6538>
   1d7d4:	mov	w0, w19
   1d7d8:	sub	w19, w19, #0x1
   1d7dc:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   1d7e0:	cmp	w19, #0x2
   1d7e4:	b.ne	1d7d4 <__sanitizer_set_report_fd@@Base+0x6524>  // b.any
   1d7e8:	mov	x1, x24
   1d7ec:	mov	x0, x23
   1d7f0:	bl	6710 <execv@plt>
   1d7f4:	mov	w0, #0x1                   	// #1
   1d7f8:	bl	199f0 <__sanitizer_set_report_fd@@Base+0x2740>
   1d7fc:	nop
   1d800:	stp	x19, x30, [sp, #-32]!
   1d804:	mov	w2, #0x1                   	// #1
   1d808:	add	x1, sp, #0x18
   1d80c:	bl	19e70 <__sanitizer_set_report_fd@@Base+0x2bc0>
   1d810:	add	x1, sp, #0x1c
   1d814:	mov	x19, x0
   1d818:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   1d81c:	cmp	x19, #0x0
   1d820:	cset	w19, eq  // eq = none
   1d824:	tst	w0, #0xff
   1d828:	b.ne	1d838 <__sanitizer_set_report_fd@@Base+0x6588>  // b.any
   1d82c:	mov	w0, w19
   1d830:	ldp	x19, x30, [sp], #32
   1d834:	ret
   1d838:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d83c:	mov	w19, #0x0                   	// #0
   1d840:	ldr	x0, [x0, #3680]
   1d844:	ldr	w0, [x0]
   1d848:	cbz	w0, 1d82c <__sanitizer_set_report_fd@@Base+0x657c>
   1d84c:	ldr	w1, [sp, #28]
   1d850:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1d854:	add	x0, x0, #0x238
   1d858:	bl	1e648 <OnPrint@@Base+0x398>
   1d85c:	mov	w0, w19
   1d860:	ldp	x19, x30, [sp], #32
   1d864:	ret
   1d868:	stp	x19, x30, [sp, #-32]!
   1d86c:	mov	w2, #0x0                   	// #0
   1d870:	add	x1, sp, #0x18
   1d874:	bl	19e70 <__sanitizer_set_report_fd@@Base+0x2bc0>
   1d878:	add	x1, sp, #0x1c
   1d87c:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   1d880:	tst	w0, #0xff
   1d884:	b.ne	1d898 <__sanitizer_set_report_fd@@Base+0x65e8>  // b.any
   1d888:	ldr	w19, [sp, #24]
   1d88c:	mov	w0, w19
   1d890:	ldp	x19, x30, [sp], #32
   1d894:	ret
   1d898:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d89c:	mov	w19, #0xffffffff            	// #-1
   1d8a0:	ldr	x0, [x0, #3680]
   1d8a4:	ldr	w0, [x0]
   1d8a8:	cbz	w0, 1d88c <__sanitizer_set_report_fd@@Base+0x65dc>
   1d8ac:	ldr	w1, [sp, #28]
   1d8b0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1d8b4:	add	x0, x0, #0x238
   1d8b8:	bl	1e648 <OnPrint@@Base+0x398>
   1d8bc:	b	1d88c <__sanitizer_set_report_fd@@Base+0x65dc>
   1d8c0:	cmp	w0, #0x1
   1d8c4:	cset	w0, eq  // eq = none
   1d8c8:	ret
   1d8cc:	nop
   1d8d0:	mov	x7, x0
   1d8d4:	cbz	x4, 1d97c <__sanitizer_set_report_fd@@Base+0x66cc>
   1d8d8:	ldrb	w6, [x4]
   1d8dc:	cbz	w6, 1d98c <__sanitizer_set_report_fd@@Base+0x66dc>
   1d8e0:	cbz	w3, 1d998 <__sanitizer_set_report_fd@@Base+0x66e8>
   1d8e4:	mov	w8, #0x0                   	// #0
   1d8e8:	ldr	x5, [x7]
   1d8ec:	b	1d8f8 <__sanitizer_set_report_fd@@Base+0x6648>
   1d8f0:	b.eq	1d920 <__sanitizer_set_report_fd@@Base+0x6670>  // b.none
   1d8f4:	mov	w8, w0
   1d8f8:	cmp	x1, x5
   1d8fc:	b.ls	1d910 <__sanitizer_set_report_fd@@Base+0x6660>  // b.plast
   1d900:	strb	w6, [x5]
   1d904:	ldr	x5, [x7]
   1d908:	add	x5, x5, #0x1
   1d90c:	str	x5, [x7]
   1d910:	ldrb	w6, [x4, #1]!
   1d914:	add	w0, w8, #0x1
   1d918:	cmp	w3, w0
   1d91c:	cbnz	w6, 1d8f0 <__sanitizer_set_report_fd@@Base+0x6640>
   1d920:	mvn	w3, w8
   1d924:	cmp	w2, w3
   1d928:	b.ge	1d978 <__sanitizer_set_report_fd@@Base+0x66c8>  // b.tcont
   1d92c:	ldr	x5, [x7]
   1d930:	mov	w3, w0
   1d934:	mov	w6, #0x20                  	// #32
   1d938:	add	w3, w3, #0x1
   1d93c:	cmp	x1, x5
   1d940:	neg	w4, w3
   1d944:	b.ls	1d958 <__sanitizer_set_report_fd@@Base+0x66a8>  // b.plast
   1d948:	strb	w6, [x5]
   1d94c:	ldr	x5, [x7]
   1d950:	add	x5, x5, #0x1
   1d954:	str	x5, [x7]
   1d958:	cmp	w2, w4
   1d95c:	b.lt	1d938 <__sanitizer_set_report_fd@@Base+0x6688>  // b.tstop
   1d960:	mvn	w1, w0
   1d964:	add	w0, w0, #0x1
   1d968:	cmp	w2, w1
   1d96c:	sub	w2, w1, w2
   1d970:	csel	w2, w2, wzr, le
   1d974:	add	w0, w2, w0
   1d978:	ret
   1d97c:	adrp	x4, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1d980:	mov	w6, #0x3c                  	// #60
   1d984:	add	x4, x4, #0x268
   1d988:	b	1d8e0 <__sanitizer_set_report_fd@@Base+0x6630>
   1d98c:	mov	w3, #0x0                   	// #0
   1d990:	mov	w0, #0x0                   	// #0
   1d994:	b	1d924 <__sanitizer_set_report_fd@@Base+0x6674>
   1d998:	mov	w0, #0x0                   	// #0
   1d99c:	b	1d924 <__sanitizer_set_report_fd@@Base+0x6674>
   1d9a0:	stp	x19, x20, [sp, #-320]!
   1d9a4:	and	w3, w3, #0xff
   1d9a8:	cmp	w3, #0xa
   1d9ac:	cset	w8, ne  // ne = any
   1d9b0:	stp	x21, x22, [sp, #16]
   1d9b4:	cmp	w8, #0x0
   1d9b8:	stp	x23, x24, [sp, #32]
   1d9bc:	ccmp	w3, #0x10, #0x4, ne  // ne = any
   1d9c0:	stp	x25, x26, [sp, #48]
   1d9c4:	str	x30, [sp, #64]
   1d9c8:	b.ne	1dbdc <__sanitizer_set_report_fd@@Base+0x692c>  // b.any
   1d9cc:	and	w24, w6, #0xff
   1d9d0:	cmp	w8, #0x0
   1d9d4:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   1d9d8:	b.ne	1dc00 <__sanitizer_set_report_fd@@Base+0x6950>  // b.any
   1d9dc:	cmp	x2, #0x0
   1d9e0:	ccmp	w24, #0x0, #0x4, eq  // eq = none
   1d9e4:	b.ne	1dc10 <__sanitizer_set_report_fd@@Base+0x6960>  // b.any
   1d9e8:	and	w23, w4, #0xff
   1d9ec:	cmp	w23, #0x1d
   1d9f0:	b.hi	1dc20 <__sanitizer_set_report_fd@@Base+0x6970>  // b.pmore
   1d9f4:	cmp	w23, #0x0
   1d9f8:	mov	x19, x0
   1d9fc:	sub	w0, w23, #0x1
   1da00:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   1da04:	and	w0, w0, #0xff
   1da08:	and	w25, w5, #0xff
   1da0c:	csel	w23, w0, w23, ne  // ne = any
   1da10:	cmp	w24, #0x0
   1da14:	mov	x20, x1
   1da18:	and	w26, w7, #0xff
   1da1c:	ccmp	w25, #0x0, #0x4, ne  // ne = any
   1da20:	mov	w21, #0x0                   	// #0
   1da24:	b.ne	1da74 <__sanitizer_set_report_fd@@Base+0x67c4>  // b.any
   1da28:	add	x22, sp, #0x50
   1da2c:	and	x3, x3, #0xff
   1da30:	mov	x9, x22
   1da34:	mov	w8, #0x0                   	// #0
   1da38:	udiv	x10, x2, x3
   1da3c:	mov	w12, w8
   1da40:	cmp	x2, x3
   1da44:	add	w8, w8, #0x1
   1da48:	msub	x11, x10, x3, x2
   1da4c:	mov	x2, x10
   1da50:	str	x11, [x9]
   1da54:	b.cc	1da9c <__sanitizer_set_report_fd@@Base+0x67ec>  // b.lo, b.ul, b.last
   1da58:	add	x9, x9, #0x8
   1da5c:	cmp	w8, #0x1e
   1da60:	b.ne	1da38 <__sanitizer_set_report_fd@@Base+0x6788>  // b.any
   1da64:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1da68:	add	x0, x0, #0x2e8
   1da6c:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1da70:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1da74:	ldr	x8, [x19]
   1da78:	mov	w21, #0x1                   	// #1
   1da7c:	cmp	x1, x8
   1da80:	b.ls	1da28 <__sanitizer_set_report_fd@@Base+0x6778>  // b.plast
   1da84:	mov	w0, #0x2d                  	// #45
   1da88:	strb	w0, [x8]
   1da8c:	ldr	x8, [x19]
   1da90:	add	x8, x8, #0x1
   1da94:	str	x8, [x19]
   1da98:	b	1da28 <__sanitizer_set_report_fd@@Base+0x6778>
   1da9c:	cmp	w8, w23
   1daa0:	sxtw	x0, w12
   1daa4:	b.lt	1dbb8 <__sanitizer_set_report_fd@@Base+0x6908>  // b.tstop
   1daa8:	add	w1, w21, #0x1
   1daac:	mov	w3, #0x20                  	// #32
   1dab0:	add	w12, w1, w12
   1dab4:	mov	w2, #0x30                  	// #48
   1dab8:	b	1dac8 <__sanitizer_set_report_fd@@Base+0x6818>
   1dabc:	add	x1, x22, x0, lsl #3
   1dac0:	sub	x0, x0, #0x1
   1dac4:	ldur	x11, [x1, #-8]
   1dac8:	mov	w5, w0
   1dacc:	cbnz	x11, 1dbec <__sanitizer_set_report_fd@@Base+0x693c>
   1dad0:	ldr	x8, [x19]
   1dad4:	cmp	w0, #0x0
   1dad8:	ccmp	w25, #0x0, #0x0, ne  // ne = any
   1dadc:	csel	w1, w3, w2, eq  // eq = none
   1dae0:	cmp	x20, x8
   1dae4:	b.ls	1daf8 <__sanitizer_set_report_fd@@Base+0x6848>  // b.plast
   1dae8:	strb	w1, [x8]
   1daec:	ldr	x8, [x19]
   1daf0:	add	x8, x8, #0x1
   1daf4:	str	x8, [x19]
   1daf8:	add	w21, w21, #0x1
   1dafc:	cmp	w12, w21
   1db00:	b.ne	1dabc <__sanitizer_set_report_fd@@Base+0x680c>  // b.any
   1db04:	eor	w25, w25, #0x1
   1db08:	mov	w5, #0xffffffff            	// #-1
   1db0c:	tst	w24, w25
   1db10:	b.eq	1db9c <__sanitizer_set_report_fd@@Base+0x68ec>  // b.none
   1db14:	cmp	x20, x8
   1db18:	b.hi	1dc30 <__sanitizer_set_report_fd@@Base+0x6980>  // b.pmore
   1db1c:	add	w21, w21, #0x1
   1db20:	cmn	w5, #0x1
   1db24:	b.eq	1db9c <__sanitizer_set_report_fd@@Base+0x68ec>  // b.none
   1db28:	cmp	w26, #0x0
   1db2c:	sub	w2, w5, #0x1
   1db30:	mov	w4, #0x41                  	// #65
   1db34:	mov	w0, #0x61                  	// #97
   1db38:	csel	w4, w4, w0, ne  // ne = any
   1db3c:	sxtw	x2, w2
   1db40:	ldr	x8, [x19]
   1db44:	sub	w4, w4, #0xa
   1db48:	mov	x6, #0xfffffffffffffffe    	// #-2
   1db4c:	nop
   1db50:	add	x0, x22, x2, lsl #3
   1db54:	ldrb	w3, [x0, #8]
   1db58:	add	w1, w3, #0x30
   1db5c:	add	w0, w3, w4
   1db60:	cmp	w3, #0x9
   1db64:	and	w1, w1, #0xff
   1db68:	and	w0, w0, #0xff
   1db6c:	csel	w0, w0, w1, hi  // hi = pmore
   1db70:	cmp	x20, x8
   1db74:	b.ls	1db88 <__sanitizer_set_report_fd@@Base+0x68d8>  // b.plast
   1db78:	strb	w0, [x8]
   1db7c:	ldr	x8, [x19]
   1db80:	add	x8, x8, #0x1
   1db84:	str	x8, [x19]
   1db88:	sub	x2, x2, #0x1
   1db8c:	cmp	x6, x2
   1db90:	b.ne	1db50 <__sanitizer_set_report_fd@@Base+0x68a0>  // b.any
   1db94:	add	w21, w21, #0x1
   1db98:	add	w21, w5, w21
   1db9c:	mov	w0, w21
   1dba0:	ldp	x21, x22, [sp, #16]
   1dba4:	ldp	x23, x24, [sp, #32]
   1dba8:	ldp	x25, x26, [sp, #48]
   1dbac:	ldr	x30, [sp, #64]
   1dbb0:	ldp	x19, x20, [sp], #320
   1dbb4:	ret
   1dbb8:	sub	w2, w23, w8
   1dbbc:	add	x0, x22, w8, sxtw #3
   1dbc0:	mov	w1, #0x0                   	// #0
   1dbc4:	sbfiz	x2, x2, #3, #32
   1dbc8:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   1dbcc:	sub	w12, w23, #0x1
   1dbd0:	sxtw	x0, w12
   1dbd4:	ldr	x11, [x22, x0, lsl #3]
   1dbd8:	b	1daa8 <__sanitizer_set_report_fd@@Base+0x67f8>
   1dbdc:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1dbe0:	add	x0, x0, #0x270
   1dbe4:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1dbe8:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1dbec:	eor	w25, w25, #0x1
   1dbf0:	tst	w24, w25
   1dbf4:	b.eq	1db20 <__sanitizer_set_report_fd@@Base+0x6870>  // b.none
   1dbf8:	ldr	x8, [x19]
   1dbfc:	b	1db14 <__sanitizer_set_report_fd@@Base+0x6864>
   1dc00:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1dc04:	add	x0, x0, #0x290
   1dc08:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1dc0c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1dc10:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1dc14:	add	x0, x0, #0x2a8
   1dc18:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1dc1c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1dc20:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1dc24:	add	x0, x0, #0x2c8
   1dc28:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1dc2c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1dc30:	mov	w0, #0x2d                  	// #45
   1dc34:	strb	w0, [x8]
   1dc38:	ldr	x8, [x19]
   1dc3c:	add	x8, x8, #0x1
   1dc40:	str	x8, [x19]
   1dc44:	b	1db1c <__sanitizer_set_report_fd@@Base+0x686c>
   1dc48:	stp	x19, x20, [sp, #-112]!
   1dc4c:	stp	x23, x24, [sp, #32]
   1dc50:	stp	x27, x28, [sp, #64]
   1dc54:	str	x30, [sp, #80]
   1dc58:	str	x0, [sp, #104]
   1dc5c:	cbz	x2, 1e1b8 <__sanitizer_set_report_fd@@Base+0x6f08>
   1dc60:	cmp	w1, #0x0
   1dc64:	b.le	1e1d0 <__sanitizer_set_report_fd@@Base+0x6f20>
   1dc68:	ldrb	w4, [x2]
   1dc6c:	sxtw	x19, w1
   1dc70:	sub	x28, x19, #0x1
   1dc74:	mov	x20, x0
   1dc78:	add	x28, x0, x28
   1dc7c:	cbz	w4, 1e280 <__sanitizer_set_report_fd@@Base+0x6fd0>
   1dc80:	add	x27, sp, #0x68
   1dc84:	mov	w24, #0x0                   	// #0
   1dc88:	stp	x21, x22, [sp, #16]
   1dc8c:	adrp	x21, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1dc90:	add	x21, x21, #0x3f8
   1dc94:	stp	x25, x26, [sp, #48]
   1dc98:	ldr	w26, [x3, #24]
   1dc9c:	ldp	x25, x22, [x3]
   1dca0:	b	1dcd8 <__sanitizer_set_report_fd@@Base+0x6a28>
   1dca4:	ldr	x0, [sp, #104]
   1dca8:	cmp	x28, x0
   1dcac:	b.ls	1dcc0 <__sanitizer_set_report_fd@@Base+0x6a10>  // b.plast
   1dcb0:	strb	w4, [x0]
   1dcb4:	ldr	x0, [sp, #104]
   1dcb8:	add	x0, x0, #0x1
   1dcbc:	str	x0, [sp, #104]
   1dcc0:	mov	x0, x23
   1dcc4:	add	w24, w24, #0x1
   1dcc8:	mov	x23, x2
   1dccc:	mov	x2, x0
   1dcd0:	ldrb	w4, [x23, #1]
   1dcd4:	cbz	w4, 1de78 <__sanitizer_set_report_fd@@Base+0x6bc8>
   1dcd8:	cmp	w4, #0x25
   1dcdc:	add	x23, x2, #0x1
   1dce0:	b.ne	1dca4 <__sanitizer_set_report_fd@@Base+0x69f4>  // b.any
   1dce4:	ldrb	w1, [x2, #1]
   1dce8:	cmp	w1, #0x2d
   1dcec:	mov	w4, w1
   1dcf0:	b.ne	1dcfc <__sanitizer_set_report_fd@@Base+0x6a4c>  // b.any
   1dcf4:	ldrb	w4, [x2, #2]
   1dcf8:	add	x23, x2, #0x2
   1dcfc:	sub	w0, w4, #0x30
   1dd00:	mov	w8, #0x0                   	// #0
   1dd04:	and	w0, w0, #0xff
   1dd08:	cmp	w0, #0x9
   1dd0c:	cset	w6, ls  // ls = plast
   1dd10:	cmp	w4, #0x30
   1dd14:	cset	w5, eq  // eq = none
   1dd18:	cmp	w0, #0x9
   1dd1c:	b.ls	1dd88 <__sanitizer_set_report_fd@@Base+0x6ad8>  // b.plast
   1dd20:	cmp	w4, #0x2e
   1dd24:	mov	w7, #0x1                   	// #1
   1dd28:	mov	w3, #0xffffffff            	// #-1
   1dd2c:	b.eq	1ddcc <__sanitizer_set_report_fd@@Base+0x6b1c>  // b.none
   1dd30:	cmp	w4, #0x7a
   1dd34:	cinc	x23, x23, eq  // eq = none
   1dd38:	cset	w2, eq  // eq = none
   1dd3c:	ldrb	w4, [x23]
   1dd40:	b.eq	1dd4c <__sanitizer_set_report_fd@@Base+0x6a9c>  // b.none
   1dd44:	cmp	w4, #0x6c
   1dd48:	b.eq	1dde8 <__sanitizer_set_report_fd@@Base+0x6b38>  // b.none
   1dd4c:	cmp	w1, #0x2d
   1dd50:	orr	w6, w6, w2
   1dd54:	ccmp	w7, #0x0, #0x4, ne  // ne = any
   1dd58:	mov	w9, #0x0                   	// #0
   1dd5c:	b.ne	1de18 <__sanitizer_set_report_fd@@Base+0x6b68>  // b.any
   1dd60:	cmp	w4, #0x73
   1dd64:	b.eq	1e018 <__sanitizer_set_report_fd@@Base+0x6d68>  // b.none
   1dd68:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1dd6c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1dd70:	add	x2, x2, #0x320
   1dd74:	add	x0, x0, #0x360
   1dd78:	mov	x4, #0x0                   	// #0
   1dd7c:	mov	x3, #0x0                   	// #0
   1dd80:	mov	w1, #0xa9                  	// #169
   1dd84:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1dd88:	add	w8, w8, w8, lsl #2
   1dd8c:	add	w8, w4, w8, lsl #1
   1dd90:	ldrb	w4, [x23, #1]!
   1dd94:	sub	w8, w8, #0x30
   1dd98:	sub	w2, w4, #0x30
   1dd9c:	and	w2, w2, #0xff
   1dda0:	cmp	w2, #0x9
   1dda4:	b.hi	1dd20 <__sanitizer_set_report_fd@@Base+0x6a70>  // b.pmore
   1dda8:	add	w8, w8, w8, lsl #2
   1ddac:	add	w8, w4, w8, lsl #1
   1ddb0:	ldrb	w4, [x23, #1]!
   1ddb4:	sub	w8, w8, #0x30
   1ddb8:	sub	w2, w4, #0x30
   1ddbc:	and	w2, w2, #0xff
   1ddc0:	cmp	w2, #0x9
   1ddc4:	b.ls	1dd88 <__sanitizer_set_report_fd@@Base+0x6ad8>  // b.plast
   1ddc8:	b	1dd20 <__sanitizer_set_report_fd@@Base+0x6a70>
   1ddcc:	ldrb	w2, [x23, #1]
   1ddd0:	cmp	w2, #0x2a
   1ddd4:	b.eq	1e0d8 <__sanitizer_set_report_fd@@Base+0x6e28>  // b.none
   1ddd8:	ldrb	w4, [x23]
   1dddc:	mov	w2, #0x0                   	// #0
   1dde0:	cmp	w4, #0x6c
   1dde4:	b.ne	1dd4c <__sanitizer_set_report_fd@@Base+0x6a9c>  // b.any
   1dde8:	ldrb	w9, [x23, #1]
   1ddec:	cmp	w9, #0x6c
   1ddf0:	b.ne	1dd4c <__sanitizer_set_report_fd@@Base+0x6a9c>  // b.any
   1ddf4:	cmp	w1, #0x2d
   1ddf8:	mov	w2, #0x1                   	// #1
   1ddfc:	ldrb	w4, [x23, #2]
   1de00:	mov	w6, w2
   1de04:	add	x23, x23, #0x2
   1de08:	mov	w9, w2
   1de0c:	ccmp	w7, #0x0, #0x4, ne  // ne = any
   1de10:	b.eq	1dd60 <__sanitizer_set_report_fd@@Base+0x6ab0>  // b.none
   1de14:	nop
   1de18:	cmp	w4, #0x64
   1de1c:	b.eq	1dfd0 <__sanitizer_set_report_fd@@Base+0x6d20>  // b.none
   1de20:	b.hi	1deb4 <__sanitizer_set_report_fd@@Base+0x6c04>  // b.pmore
   1de24:	cmp	w4, #0x58
   1de28:	b.eq	1df94 <__sanitizer_set_report_fd@@Base+0x6ce4>  // b.none
   1de2c:	cmp	w4, #0x63
   1de30:	b.ne	1df2c <__sanitizer_set_report_fd@@Base+0x6c7c>  // b.any
   1de34:	cbnz	w6, 1df68 <__sanitizer_set_report_fd@@Base+0x6cb8>
   1de38:	tbnz	w26, #31, 1e0b8 <__sanitizer_set_report_fd@@Base+0x6e08>
   1de3c:	add	x0, x25, #0xb
   1de40:	mov	x1, x25
   1de44:	and	x25, x0, #0xfffffffffffffff8
   1de48:	ldr	x0, [sp, #104]
   1de4c:	cmp	x28, x0
   1de50:	b.ls	1de68 <__sanitizer_set_report_fd@@Base+0x6bb8>  // b.plast
   1de54:	ldr	w1, [x1]
   1de58:	strb	w1, [x0]
   1de5c:	ldr	x0, [sp, #104]
   1de60:	add	x0, x0, #0x1
   1de64:	str	x0, [sp, #104]
   1de68:	add	w24, w24, #0x1
   1de6c:	add	x2, x23, #0x1
   1de70:	ldrb	w4, [x23, #1]
   1de74:	cbnz	w4, 1dcd8 <__sanitizer_set_report_fd@@Base+0x6a28>
   1de78:	ldp	x21, x22, [sp, #16]
   1de7c:	ldp	x25, x26, [sp, #48]
   1de80:	ldr	x0, [sp, #104]
   1de84:	cmp	x28, x0
   1de88:	b.cc	1e288 <__sanitizer_set_report_fd@@Base+0x6fd8>  // b.lo, b.ul, b.last
   1de8c:	add	x19, x20, x19
   1de90:	cmp	x0, x19
   1de94:	b.cs	1de9c <__sanitizer_set_report_fd@@Base+0x6bec>  // b.hs, b.nlast
   1de98:	strb	wzr, [x0]
   1de9c:	mov	w0, w24
   1dea0:	ldp	x23, x24, [sp, #32]
   1dea4:	ldp	x27, x28, [sp, #64]
   1dea8:	ldr	x30, [sp, #80]
   1deac:	ldp	x19, x20, [sp], #112
   1deb0:	ret
   1deb4:	cmp	w4, #0x70
   1deb8:	b.ne	1df60 <__sanitizer_set_report_fd@@Base+0x6cb0>  // b.any
   1debc:	cbnz	w6, 1df68 <__sanitizer_set_report_fd@@Base+0x6cb8>
   1dec0:	tbnz	w26, #31, 1e098 <__sanitizer_set_report_fd@@Base+0x6de8>
   1dec4:	add	x1, x25, #0xf
   1dec8:	mov	x0, x25
   1decc:	and	x25, x1, #0xfffffffffffffff8
   1ded0:	ldr	x9, [x0]
   1ded4:	mov	x4, x21
   1ded8:	mov	x1, x28
   1dedc:	mov	w3, #0xffffffff            	// #-1
   1dee0:	mov	w2, #0x0                   	// #0
   1dee4:	mov	x0, x27
   1dee8:	bl	1d8d0 <__sanitizer_set_report_fd@@Base+0x6620>
   1deec:	mov	w8, w0
   1def0:	mov	x2, x9
   1def4:	mov	x1, x28
   1def8:	mov	x0, x27
   1defc:	mov	w7, #0x0                   	// #0
   1df00:	mov	w6, #0x0                   	// #0
   1df04:	mov	w5, #0x1                   	// #1
   1df08:	mov	w4, #0xc                   	// #12
   1df0c:	mov	w3, #0x10                  	// #16
   1df10:	str	w8, [sp, #100]
   1df14:	bl	1d9a0 <__sanitizer_set_report_fd@@Base+0x66f0>
   1df18:	ldr	w8, [sp, #100]
   1df1c:	add	x2, x23, #0x1
   1df20:	add	w8, w8, w0
   1df24:	add	w24, w24, w8
   1df28:	b	1dcd0 <__sanitizer_set_report_fd@@Base+0x6a20>
   1df2c:	cmp	w4, #0x25
   1df30:	b.ne	1df68 <__sanitizer_set_report_fd@@Base+0x6cb8>  // b.any
   1df34:	cbnz	w6, 1df68 <__sanitizer_set_report_fd@@Base+0x6cb8>
   1df38:	ldr	x0, [sp, #104]
   1df3c:	cmp	x28, x0
   1df40:	b.ls	1de68 <__sanitizer_set_report_fd@@Base+0x6bb8>  // b.plast
   1df44:	strb	w4, [x0]
   1df48:	add	w24, w24, #0x1
   1df4c:	add	x2, x23, #0x1
   1df50:	ldr	x0, [sp, #104]
   1df54:	add	x0, x0, #0x1
   1df58:	str	x0, [sp, #104]
   1df5c:	b	1de70 <__sanitizer_set_report_fd@@Base+0x6bc0>
   1df60:	cmp	w4, #0x6f
   1df64:	b.hi	1df78 <__sanitizer_set_report_fd@@Base+0x6cc8>  // b.pmore
   1df68:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1df6c:	add	x0, x0, #0x3a0
   1df70:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1df74:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1df78:	cmp	w4, #0x78
   1df7c:	b.eq	1df94 <__sanitizer_set_report_fd@@Base+0x6ce4>  // b.none
   1df80:	b.hi	1df68 <__sanitizer_set_report_fd@@Base+0x6cb8>  // b.pmore
   1df84:	cmp	w4, #0x73
   1df88:	b.eq	1e018 <__sanitizer_set_report_fd@@Base+0x6d68>  // b.none
   1df8c:	cmp	w4, #0x75
   1df90:	b.ne	1df68 <__sanitizer_set_report_fd@@Base+0x6cb8>  // b.any
   1df94:	cbz	w9, 1e07c <__sanitizer_set_report_fd@@Base+0x6dcc>
   1df98:	tbnz	w26, #31, 1e198 <__sanitizer_set_report_fd@@Base+0x6ee8>
   1df9c:	add	x1, x25, #0xf
   1dfa0:	mov	x0, x25
   1dfa4:	and	x25, x1, #0xfffffffffffffff8
   1dfa8:	ldr	x2, [x0]
   1dfac:	cmp	w4, #0x58
   1dfb0:	cset	w7, eq  // eq = none
   1dfb4:	cmp	w4, #0x75
   1dfb8:	mov	w3, #0xa                   	// #10
   1dfbc:	mov	w0, #0x10                  	// #16
   1dfc0:	mov	w4, w8
   1dfc4:	csel	w3, w3, w0, eq  // eq = none
   1dfc8:	mov	w6, #0x0                   	// #0
   1dfcc:	b	1e000 <__sanitizer_set_report_fd@@Base+0x6d50>
   1dfd0:	cbz	w9, 1e060 <__sanitizer_set_report_fd@@Base+0x6db0>
   1dfd4:	tbnz	w26, #31, 1e178 <__sanitizer_set_report_fd@@Base+0x6ec8>
   1dfd8:	add	x1, x25, #0xf
   1dfdc:	mov	x0, x25
   1dfe0:	and	x25, x1, #0xfffffffffffffff8
   1dfe4:	ldr	x6, [x0]
   1dfe8:	cmp	x6, #0x0
   1dfec:	cneg	x2, x6, lt  // lt = tstop
   1dff0:	mov	w4, w8
   1dff4:	lsr	x6, x6, #63
   1dff8:	mov	w7, #0x0                   	// #0
   1dffc:	mov	w3, #0xa                   	// #10
   1e000:	mov	x1, x28
   1e004:	mov	x0, x27
   1e008:	bl	1d9a0 <__sanitizer_set_report_fd@@Base+0x66f0>
   1e00c:	add	w24, w24, w0
   1e010:	add	x2, x23, #0x1
   1e014:	b	1dcd0 <__sanitizer_set_report_fd@@Base+0x6a20>
   1e018:	cbnz	w2, 1df68 <__sanitizer_set_report_fd@@Base+0x6cb8>
   1e01c:	cmp	w1, #0x2d
   1e020:	ccmp	w0, #0x9, #0x2, ne  // ne = any
   1e024:	b.ls	1e118 <__sanitizer_set_report_fd@@Base+0x6e68>  // b.plast
   1e028:	cmp	w1, #0x2d
   1e02c:	cneg	w8, w8, eq  // eq = none
   1e030:	tbnz	w26, #31, 1e138 <__sanitizer_set_report_fd@@Base+0x6e88>
   1e034:	add	x1, x25, #0xf
   1e038:	mov	x0, x25
   1e03c:	and	x25, x1, #0xfffffffffffffff8
   1e040:	ldr	x4, [x0]
   1e044:	mov	w2, w8
   1e048:	mov	x1, x28
   1e04c:	mov	x0, x27
   1e050:	bl	1d8d0 <__sanitizer_set_report_fd@@Base+0x6620>
   1e054:	add	w24, w24, w0
   1e058:	add	x2, x23, #0x1
   1e05c:	b	1dcd0 <__sanitizer_set_report_fd@@Base+0x6a20>
   1e060:	cbnz	w2, 1dfd4 <__sanitizer_set_report_fd@@Base+0x6d24>
   1e064:	tbnz	w26, #31, 1e20c <__sanitizer_set_report_fd@@Base+0x6f5c>
   1e068:	mov	x0, x25
   1e06c:	add	x1, x25, #0xb
   1e070:	and	x25, x1, #0xfffffffffffffff8
   1e074:	ldrsw	x6, [x0]
   1e078:	b	1dfe8 <__sanitizer_set_report_fd@@Base+0x6d38>
   1e07c:	cbnz	w2, 1df98 <__sanitizer_set_report_fd@@Base+0x6ce8>
   1e080:	tbnz	w26, #31, 1e1e8 <__sanitizer_set_report_fd@@Base+0x6f38>
   1e084:	mov	x0, x25
   1e088:	add	x1, x25, #0xb
   1e08c:	and	x25, x1, #0xfffffffffffffff8
   1e090:	ldr	w2, [x0]
   1e094:	b	1dfac <__sanitizer_set_report_fd@@Base+0x6cfc>
   1e098:	add	w1, w26, #0x8
   1e09c:	cmp	w1, #0x0
   1e0a0:	b.le	1e100 <__sanitizer_set_report_fd@@Base+0x6e50>
   1e0a4:	add	x2, x25, #0xf
   1e0a8:	mov	x0, x25
   1e0ac:	mov	w26, w1
   1e0b0:	and	x25, x2, #0xfffffffffffffff8
   1e0b4:	b	1ded0 <__sanitizer_set_report_fd@@Base+0x6c20>
   1e0b8:	add	w0, w26, #0x8
   1e0bc:	cmp	w0, #0x0
   1e0c0:	b.le	1e10c <__sanitizer_set_report_fd@@Base+0x6e5c>
   1e0c4:	add	x2, x25, #0xb
   1e0c8:	mov	x1, x25
   1e0cc:	mov	w26, w0
   1e0d0:	and	x25, x2, #0xfffffffffffffff8
   1e0d4:	b	1de48 <__sanitizer_set_report_fd@@Base+0x6b98>
   1e0d8:	add	x2, x23, #0x2
   1e0dc:	tbnz	w26, #31, 1e158 <__sanitizer_set_report_fd@@Base+0x6ea8>
   1e0e0:	add	x4, x25, #0xb
   1e0e4:	mov	x3, x25
   1e0e8:	and	x25, x4, #0xfffffffffffffff8
   1e0ec:	ldr	w3, [x3]
   1e0f0:	ldrb	w4, [x23, #2]
   1e0f4:	mov	x23, x2
   1e0f8:	lsr	w7, w3, #31
   1e0fc:	b	1dd30 <__sanitizer_set_report_fd@@Base+0x6a80>
   1e100:	add	x0, x22, w26, sxtw
   1e104:	mov	w26, w1
   1e108:	b	1ded0 <__sanitizer_set_report_fd@@Base+0x6c20>
   1e10c:	add	x1, x22, w26, sxtw
   1e110:	mov	w26, w0
   1e114:	b	1de48 <__sanitizer_set_report_fd@@Base+0x6b98>
   1e118:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1e11c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1e120:	add	x2, x2, #0x400
   1e124:	add	x0, x0, #0x360
   1e128:	mov	x4, #0x0                   	// #0
   1e12c:	mov	x3, #0x0                   	// #0
   1e130:	mov	w1, #0xc6                  	// #198
   1e134:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1e138:	add	w1, w26, #0x8
   1e13c:	cmp	w1, #0x0
   1e140:	b.le	1e230 <__sanitizer_set_report_fd@@Base+0x6f80>
   1e144:	add	x2, x25, #0xf
   1e148:	mov	x0, x25
   1e14c:	mov	w26, w1
   1e150:	and	x25, x2, #0xfffffffffffffff8
   1e154:	b	1e040 <__sanitizer_set_report_fd@@Base+0x6d90>
   1e158:	add	w4, w26, #0x8
   1e15c:	cmp	w4, #0x0
   1e160:	b.le	1e23c <__sanitizer_set_report_fd@@Base+0x6f8c>
   1e164:	add	x7, x25, #0xb
   1e168:	mov	x3, x25
   1e16c:	mov	w26, w4
   1e170:	and	x25, x7, #0xfffffffffffffff8
   1e174:	b	1e0ec <__sanitizer_set_report_fd@@Base+0x6e3c>
   1e178:	add	w1, w26, #0x8
   1e17c:	cmp	w1, #0x0
   1e180:	b.le	1e254 <__sanitizer_set_report_fd@@Base+0x6fa4>
   1e184:	add	x2, x25, #0xf
   1e188:	mov	x0, x25
   1e18c:	mov	w26, w1
   1e190:	and	x25, x2, #0xfffffffffffffff8
   1e194:	b	1dfe4 <__sanitizer_set_report_fd@@Base+0x6d34>
   1e198:	add	w1, w26, #0x8
   1e19c:	cmp	w1, #0x0
   1e1a0:	b.le	1e248 <__sanitizer_set_report_fd@@Base+0x6f98>
   1e1a4:	add	x2, x25, #0xf
   1e1a8:	mov	x0, x25
   1e1ac:	mov	w26, w1
   1e1b0:	and	x25, x2, #0xfffffffffffffff8
   1e1b4:	b	1dfa8 <__sanitizer_set_report_fd@@Base+0x6cf8>
   1e1b8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1e1bc:	add	x0, x0, #0x308
   1e1c0:	stp	x21, x22, [sp, #16]
   1e1c4:	stp	x25, x26, [sp, #48]
   1e1c8:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1e1cc:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1e1d0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1e1d4:	add	x0, x0, #0x310
   1e1d8:	stp	x21, x22, [sp, #16]
   1e1dc:	stp	x25, x26, [sp, #48]
   1e1e0:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1e1e4:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1e1e8:	add	w1, w26, #0x8
   1e1ec:	cmp	w1, #0x0
   1e1f0:	b.le	1e260 <__sanitizer_set_report_fd@@Base+0x6fb0>
   1e1f4:	mov	x0, x25
   1e1f8:	add	x2, x25, #0xb
   1e1fc:	and	x25, x2, #0xfffffffffffffff8
   1e200:	mov	w26, w1
   1e204:	ldr	w2, [x0]
   1e208:	b	1dfac <__sanitizer_set_report_fd@@Base+0x6cfc>
   1e20c:	add	w1, w26, #0x8
   1e210:	cmp	w1, #0x0
   1e214:	b.le	1e270 <__sanitizer_set_report_fd@@Base+0x6fc0>
   1e218:	mov	x0, x25
   1e21c:	add	x2, x25, #0xb
   1e220:	mov	w26, w1
   1e224:	and	x25, x2, #0xfffffffffffffff8
   1e228:	ldrsw	x6, [x0]
   1e22c:	b	1dfe8 <__sanitizer_set_report_fd@@Base+0x6d38>
   1e230:	add	x0, x22, w26, sxtw
   1e234:	mov	w26, w1
   1e238:	b	1e040 <__sanitizer_set_report_fd@@Base+0x6d90>
   1e23c:	add	x3, x22, w26, sxtw
   1e240:	mov	w26, w4
   1e244:	b	1e0ec <__sanitizer_set_report_fd@@Base+0x6e3c>
   1e248:	add	x0, x22, w26, sxtw
   1e24c:	mov	w26, w1
   1e250:	b	1dfa8 <__sanitizer_set_report_fd@@Base+0x6cf8>
   1e254:	add	x0, x22, w26, sxtw
   1e258:	mov	w26, w1
   1e25c:	b	1dfe4 <__sanitizer_set_report_fd@@Base+0x6d34>
   1e260:	add	x0, x22, w26, sxtw
   1e264:	mov	w26, w1
   1e268:	ldr	w2, [x0]
   1e26c:	b	1dfac <__sanitizer_set_report_fd@@Base+0x6cfc>
   1e270:	add	x0, x22, w26, sxtw
   1e274:	mov	w26, w1
   1e278:	ldrsw	x6, [x0]
   1e27c:	b	1dfe8 <__sanitizer_set_report_fd@@Base+0x6d38>
   1e280:	mov	w24, #0x0                   	// #0
   1e284:	b	1de84 <__sanitizer_set_report_fd@@Base+0x6bd4>
   1e288:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1e28c:	add	x0, x0, #0x430
   1e290:	stp	x21, x22, [sp, #16]
   1e294:	stp	x25, x26, [sp, #48]
   1e298:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1e29c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1e2a0:	adrp	x1, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1e2a4:	str	x0, [x1, #3208]
   1e2a8:	ret
   1e2ac:	nop

000000000001e2b0 <OnPrint@@Base>:
   1e2b0:	ret
   1e2b4:	nop
   1e2b8:	sub	sp, sp, #0x100
   1e2bc:	mov	w9, #0xffffffd8            	// #-40
   1e2c0:	add	x10, sp, #0xd0
   1e2c4:	add	x11, sp, #0x100
   1e2c8:	mov	w8, #0xffffff80            	// #-128
   1e2cc:	stp	x11, x11, [sp, #48]
   1e2d0:	str	x10, [sp, #64]
   1e2d4:	stp	w9, w8, [sp, #72]
   1e2d8:	ldp	x10, x11, [sp, #48]
   1e2dc:	str	x30, [sp]
   1e2e0:	ldp	x8, x9, [sp, #64]
   1e2e4:	stp	x10, x11, [sp, #16]
   1e2e8:	stp	x8, x9, [sp, #32]
   1e2ec:	str	q0, [sp, #80]
   1e2f0:	str	q1, [sp, #96]
   1e2f4:	str	q2, [sp, #112]
   1e2f8:	str	q3, [sp, #128]
   1e2fc:	str	q4, [sp, #144]
   1e300:	str	q5, [sp, #160]
   1e304:	str	q6, [sp, #176]
   1e308:	str	q7, [sp, #192]
   1e30c:	stp	x3, x4, [sp, #216]
   1e310:	add	x3, sp, #0x10
   1e314:	stp	x5, x6, [sp, #232]
   1e318:	str	x7, [sp, #248]
   1e31c:	bl	1dc48 <__sanitizer_set_report_fd@@Base+0x6998>
   1e320:	ldr	x30, [sp]
   1e324:	add	sp, sp, #0x100
   1e328:	ret
   1e32c:	nop
   1e330:	stp	x19, x20, [sp, #-176]!
   1e334:	and	w0, w0, #0xff
   1e338:	mov	x19, x1
   1e33c:	stp	x23, x24, [sp, #32]
   1e340:	adrp	x23, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e344:	adrp	x24, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1e348:	stp	x27, x28, [sp, #64]
   1e34c:	mov	x27, x3
   1e350:	add	x24, x24, #0x478
   1e354:	ldr	x23, [x23, #4040]
   1e358:	stp	x21, x22, [sp, #16]
   1e35c:	mov	x21, x1
   1e360:	mov	x22, x2
   1e364:	stp	x25, x26, [sp, #48]
   1e368:	add	x25, sp, #0x70
   1e36c:	str	w0, [sp, #104]
   1e370:	mov	w26, #0x0                   	// #0
   1e374:	ldp	x2, x3, [x3]
   1e378:	mov	w20, #0x190                 	// #400
   1e37c:	ldp	x0, x1, [x27, #16]
   1e380:	str	x30, [sp, #80]
   1e384:	stp	x2, x3, [sp, #144]
   1e388:	stp	x0, x1, [sp, #160]
   1e38c:	ldr	w0, [sp, #104]
   1e390:	cbz	w0, 1e3f0 <OnPrint@@Base+0x140>
   1e394:	bl	19e88 <__sanitizer_set_report_fd@@Base+0x2bd8>
   1e398:	mov	x28, x0
   1e39c:	bl	13c30 <__sancov_default_options@@Base+0x3038>
   1e3a0:	cmp	x0, #0x0
   1e3a4:	ldrb	w2, [x23, #48]
   1e3a8:	cset	w6, ne  // ne = any
   1e3ac:	mov	x3, x0
   1e3b0:	sxtw	x1, w20
   1e3b4:	mov	x0, x19
   1e3b8:	tst	w6, w2
   1e3bc:	mov	w5, #0x0                   	// #0
   1e3c0:	b.ne	1e50c <OnPrint@@Base+0x25c>  // b.any
   1e3c4:	mov	w3, w28
   1e3c8:	mov	x2, x24
   1e3cc:	str	w5, [sp, #108]
   1e3d0:	bl	1e2b8 <OnPrint@@Base+0x8>
   1e3d4:	ldr	w5, [sp, #108]
   1e3d8:	add	w28, w5, w0
   1e3dc:	cmp	w20, w28
   1e3e0:	b.le	1e45c <OnPrint@@Base+0x1ac>
   1e3e4:	add	x0, x19, w28, sxtw
   1e3e8:	sub	w1, w20, w28
   1e3ec:	b	1e3fc <OnPrint@@Base+0x14c>
   1e3f0:	mov	w1, w20
   1e3f4:	mov	x0, x19
   1e3f8:	mov	w28, #0x0                   	// #0
   1e3fc:	ldp	x6, x7, [x27]
   1e400:	mov	x3, x25
   1e404:	ldp	x8, x9, [x27, #16]
   1e408:	mov	x2, x22
   1e40c:	stp	x6, x7, [x25]
   1e410:	stp	x8, x9, [x25, #16]
   1e414:	bl	1dc48 <__sanitizer_set_report_fd@@Base+0x6998>
   1e418:	add	w0, w28, w0
   1e41c:	cmp	w20, w0
   1e420:	b.gt	1e4a8 <OnPrint@@Base+0x1f8>
   1e424:	cbnz	w26, 1e49c <OnPrint@@Base+0x1ec>
   1e428:	ldp	x2, x3, [sp, #160]
   1e42c:	stp	x2, x3, [x27, #16]
   1e430:	mov	w26, #0x1                   	// #1
   1e434:	ldp	x0, x1, [sp, #144]
   1e438:	stp	x0, x1, [x27]
   1e43c:	mov	w2, #0x0                   	// #0
   1e440:	mov	w20, #0x4000                	// #16384
   1e444:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1e448:	mov	x0, #0x4000                	// #16384
   1e44c:	add	x1, x1, #0x448
   1e450:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1e454:	mov	x19, x0
   1e458:	b	1e38c <OnPrint@@Base+0xdc>
   1e45c:	cbz	w26, 1e428 <OnPrint@@Base+0x178>
   1e460:	mov	w0, #0x3fff                	// #16383
   1e464:	cmp	w28, w0
   1e468:	b.gt	1e534 <OnPrint@@Base+0x284>
   1e46c:	ldp	x6, x7, [x27]
   1e470:	mov	x2, x22
   1e474:	ldp	x4, x5, [x27, #16]
   1e478:	add	x3, sp, #0x70
   1e47c:	sub	w1, w20, w28
   1e480:	add	x0, x19, w28, sxtw
   1e484:	stp	x6, x7, [sp, #112]
   1e488:	stp	x4, x5, [sp, #128]
   1e48c:	bl	1dc48 <__sanitizer_set_report_fd@@Base+0x6998>
   1e490:	add	w0, w28, w0
   1e494:	cmp	w20, w0
   1e498:	b.gt	1e4a8 <OnPrint@@Base+0x1f8>
   1e49c:	mov	w1, #0x3fff                	// #16383
   1e4a0:	cmp	w0, w1
   1e4a4:	b.gt	1e534 <OnPrint@@Base+0x284>
   1e4a8:	mov	x0, x19
   1e4ac:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1e4b0:	mov	x0, x19
   1e4b4:	bl	13728 <__sancov_default_options@@Base+0x2b30>
   1e4b8:	mov	x0, x19
   1e4bc:	bl	6680 <OnPrint@plt>
   1e4c0:	adrp	x0, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1e4c4:	ldr	x1, [x0, #3208]
   1e4c8:	cbz	x1, 1e4d4 <OnPrint@@Base+0x224>
   1e4cc:	mov	x0, x19
   1e4d0:	blr	x1
   1e4d4:	mov	x0, x19
   1e4d8:	bl	1bd20 <__sanitizer_set_report_fd@@Base+0x4a70>
   1e4dc:	cmp	x19, x21
   1e4e0:	b.eq	1e4f0 <OnPrint@@Base+0x240>  // b.none
   1e4e4:	sxtw	x1, w20
   1e4e8:	mov	x0, x19
   1e4ec:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1e4f0:	ldp	x21, x22, [sp, #16]
   1e4f4:	ldp	x23, x24, [sp, #32]
   1e4f8:	ldp	x25, x26, [sp, #48]
   1e4fc:	ldp	x27, x28, [sp, #64]
   1e500:	ldr	x30, [sp, #80]
   1e504:	ldp	x19, x20, [sp], #176
   1e508:	ret
   1e50c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1e510:	add	x2, x2, #0x450
   1e514:	bl	1e2b8 <OnPrint@@Base+0x8>
   1e518:	mov	w5, w0
   1e51c:	cmp	w20, w0
   1e520:	b.le	1e544 <OnPrint@@Base+0x294>
   1e524:	sub	w1, w20, w0
   1e528:	add	x0, x19, w0, sxtw
   1e52c:	sxtw	x1, w1
   1e530:	b	1e3c4 <OnPrint@@Base+0x114>
   1e534:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1e538:	add	x0, x0, #0x458
   1e53c:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1e540:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1e544:	cbz	w26, 1e428 <OnPrint@@Base+0x178>
   1e548:	mov	w0, #0x3fff                	// #16383
   1e54c:	cmp	w5, w0
   1e550:	b.gt	1e534 <OnPrint@@Base+0x284>
   1e554:	sub	w1, w20, w5
   1e558:	mov	w3, w28
   1e55c:	add	x0, x19, w5, sxtw
   1e560:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1e564:	sxtw	x1, w1
   1e568:	add	x2, x2, #0x478
   1e56c:	str	w5, [sp, #104]
   1e570:	bl	1e2b8 <OnPrint@@Base+0x8>
   1e574:	ldr	w5, [sp, #104]
   1e578:	add	w28, w5, w0
   1e57c:	cmp	w20, w28
   1e580:	b.le	1e460 <OnPrint@@Base+0x1b0>
   1e584:	b	1e46c <OnPrint@@Base+0x1bc>
   1e588:	mov	x4, x2
   1e58c:	sub	sp, sp, #0x1c0
   1e590:	mov	x2, x1
   1e594:	add	x3, sp, #0x10
   1e598:	add	x1, sp, #0x30
   1e59c:	ldp	x6, x7, [x4]
   1e5a0:	stp	x6, x7, [sp, #16]
   1e5a4:	ldp	x4, x5, [x4, #16]
   1e5a8:	str	x30, [sp]
   1e5ac:	stp	x4, x5, [sp, #32]
   1e5b0:	bl	1e330 <OnPrint@@Base+0x80>
   1e5b4:	ldr	x30, [sp]
   1e5b8:	add	sp, sp, #0x1c0
   1e5bc:	ret
   1e5c0:	sub	sp, sp, #0x110
   1e5c4:	mov	w9, #0xffffffc8            	// #-56
   1e5c8:	add	x11, sp, #0xd0
   1e5cc:	add	x10, sp, #0x110
   1e5d0:	mov	w8, #0xffffff80            	// #-128
   1e5d4:	stp	x10, x10, [sp, #48]
   1e5d8:	mov	x10, x0
   1e5dc:	mov	w0, #0x0                   	// #0
   1e5e0:	str	x11, [sp, #64]
   1e5e4:	stp	w9, w8, [sp, #72]
   1e5e8:	ldp	x12, x13, [sp, #48]
   1e5ec:	str	x30, [sp]
   1e5f0:	ldp	x8, x9, [sp, #64]
   1e5f4:	stp	x12, x13, [sp, #16]
   1e5f8:	stp	x8, x9, [sp, #32]
   1e5fc:	str	q0, [sp, #80]
   1e600:	str	q1, [sp, #96]
   1e604:	str	q2, [sp, #112]
   1e608:	str	q3, [sp, #128]
   1e60c:	str	q4, [sp, #144]
   1e610:	str	q5, [sp, #160]
   1e614:	str	q6, [sp, #176]
   1e618:	str	q7, [sp, #192]
   1e61c:	stp	x1, x2, [sp, #216]
   1e620:	add	x2, sp, #0x10
   1e624:	mov	x1, x10
   1e628:	stp	x3, x4, [sp, #232]
   1e62c:	stp	x5, x6, [sp, #248]
   1e630:	str	x7, [sp, #264]
   1e634:	bl	1e588 <OnPrint@@Base+0x2d8>
   1e638:	ldr	x30, [sp]
   1e63c:	add	sp, sp, #0x110
   1e640:	ret
   1e644:	nop
   1e648:	sub	sp, sp, #0x110
   1e64c:	mov	w9, #0xffffffc8            	// #-56
   1e650:	add	x11, sp, #0xd0
   1e654:	add	x10, sp, #0x110
   1e658:	mov	w8, #0xffffff80            	// #-128
   1e65c:	stp	x10, x10, [sp, #48]
   1e660:	mov	x10, x0
   1e664:	mov	w0, #0x1                   	// #1
   1e668:	str	x11, [sp, #64]
   1e66c:	stp	w9, w8, [sp, #72]
   1e670:	ldp	x12, x13, [sp, #48]
   1e674:	str	x30, [sp]
   1e678:	ldp	x8, x9, [sp, #64]
   1e67c:	stp	x12, x13, [sp, #16]
   1e680:	stp	x8, x9, [sp, #32]
   1e684:	str	q0, [sp, #80]
   1e688:	str	q1, [sp, #96]
   1e68c:	str	q2, [sp, #112]
   1e690:	str	q3, [sp, #128]
   1e694:	str	q4, [sp, #144]
   1e698:	str	q5, [sp, #160]
   1e69c:	str	q6, [sp, #176]
   1e6a0:	str	q7, [sp, #192]
   1e6a4:	stp	x1, x2, [sp, #216]
   1e6a8:	add	x2, sp, #0x10
   1e6ac:	mov	x1, x10
   1e6b0:	stp	x3, x4, [sp, #232]
   1e6b4:	stp	x5, x6, [sp, #248]
   1e6b8:	str	x7, [sp, #264]
   1e6bc:	bl	1e588 <OnPrint@@Base+0x2d8>
   1e6c0:	ldr	x30, [sp]
   1e6c4:	add	sp, sp, #0x110
   1e6c8:	ret
   1e6cc:	nop
   1e6d0:	stp	x19, x30, [sp, #-256]!
   1e6d4:	mov	x19, x0
   1e6d8:	str	q0, [sp, #80]
   1e6dc:	str	q1, [sp, #96]
   1e6e0:	ldr	x8, [x0, #16]
   1e6e4:	str	q2, [sp, #112]
   1e6e8:	ldr	x0, [x0, #24]
   1e6ec:	str	q3, [sp, #128]
   1e6f0:	str	q4, [sp, #144]
   1e6f4:	cmp	x0, x8
   1e6f8:	str	q5, [sp, #160]
   1e6fc:	str	q6, [sp, #176]
   1e700:	str	q7, [sp, #192]
   1e704:	stp	x2, x3, [sp, #208]
   1e708:	stp	x4, x5, [sp, #224]
   1e70c:	stp	x6, x7, [sp, #240]
   1e710:	b.cs	1e784 <OnPrint@@Base+0x4d4>  // b.hs, b.nlast
   1e714:	mov	w4, #0xffffff80            	// #-128
   1e718:	mov	w3, #0xffffffd0            	// #-48
   1e71c:	stp	w3, w4, [sp, #72]
   1e720:	add	x5, sp, #0xd0
   1e724:	ldr	x4, [x19]
   1e728:	add	x2, sp, #0x100
   1e72c:	stp	x2, x2, [sp, #48]
   1e730:	mov	x2, x1
   1e734:	sub	w1, w8, w0
   1e738:	str	x5, [sp, #64]
   1e73c:	add	x0, x4, x0
   1e740:	ldp	x6, x7, [sp, #48]
   1e744:	add	x3, sp, #0x10
   1e748:	ldp	x4, x5, [sp, #64]
   1e74c:	stp	x6, x7, [sp, #16]
   1e750:	stp	x4, x5, [sp, #32]
   1e754:	bl	1dc48 <__sanitizer_set_report_fd@@Base+0x6998>
   1e758:	ldr	x1, [x19]
   1e75c:	ldr	x0, [x19, #24]
   1e760:	add	x0, x1, x0
   1e764:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   1e768:	ldp	x4, x3, [x19, #16]
   1e76c:	add	x3, x0, x3
   1e770:	str	x3, [x19, #24]
   1e774:	cmp	x3, x4
   1e778:	b.cs	1e7a4 <OnPrint@@Base+0x4f4>  // b.hs, b.nlast
   1e77c:	ldp	x19, x30, [sp], #256
   1e780:	ret
   1e784:	mov	x3, x0
   1e788:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1e78c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1e790:	mov	x4, x8
   1e794:	add	x2, x2, #0x480
   1e798:	add	x0, x0, #0x360
   1e79c:	mov	w1, #0x15c                 	// #348
   1e7a0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1e7a4:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1e7a8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1e7ac:	add	x2, x2, #0x480
   1e7b0:	add	x0, x0, #0x360
   1e7b4:	mov	w1, #0x162                 	// #354
   1e7b8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1e7bc:	nop
   1e7c0:	and	w0, w0, #0xff
   1e7c4:	sub	w1, w0, #0x30
   1e7c8:	and	w2, w1, #0xff
   1e7cc:	cmp	w2, #0x9
   1e7d0:	b.ls	1e804 <OnPrint@@Base+0x554>  // b.plast
   1e7d4:	sub	w1, w0, #0x61
   1e7d8:	and	w1, w1, #0xff
   1e7dc:	cmp	w1, #0x5
   1e7e0:	b.ls	1e7fc <OnPrint@@Base+0x54c>  // b.plast
   1e7e4:	sub	w1, w0, #0x41
   1e7e8:	sub	w0, w0, #0x37
   1e7ec:	and	w1, w1, #0xff
   1e7f0:	cmp	w1, #0x6
   1e7f4:	csinv	w0, w0, wzr, cc  // cc = lo, ul, last
   1e7f8:	ret
   1e7fc:	sub	w0, w0, #0x57
   1e800:	ret
   1e804:	mov	w0, w1
   1e808:	ret
   1e80c:	nop
   1e810:	sxtw	x7, w1
   1e814:	mov	x6, x0
   1e818:	mov	x5, x7
   1e81c:	mov	x4, #0x0                   	// #0
   1e820:	str	x30, [sp, #-16]!
   1e824:	ldr	x3, [x0]
   1e828:	b	1e838 <OnPrint@@Base+0x588>
   1e82c:	sxtw	x0, w0
   1e830:	str	x3, [x6]
   1e834:	madd	x4, x7, x4, x0
   1e838:	ldrb	w0, [x3], #1
   1e83c:	bl	1e7c0 <OnPrint@@Base+0x510>
   1e840:	cmp	w5, w0
   1e844:	b.hi	1e82c <OnPrint@@Base+0x57c>  // b.pmore
   1e848:	mov	x0, x4
   1e84c:	ldr	x30, [sp], #16
   1e850:	ret
   1e854:	nop
   1e858:	str	x30, [sp, #-16]!
   1e85c:	bl	1e7c0 <OnPrint@@Base+0x510>
   1e860:	cmp	w0, #0x9
   1e864:	cset	w0, ls  // ls = plast
   1e868:	ldr	x30, [sp], #16
   1e86c:	ret
   1e870:	mov	w1, #0xa                   	// #10
   1e874:	b	1e810 <OnPrint@@Base+0x560>
   1e878:	str	x30, [sp, #-16]!
   1e87c:	bl	1e7c0 <OnPrint@@Base+0x510>
   1e880:	cmp	w0, #0xf
   1e884:	cset	w0, ls  // ls = plast
   1e888:	ldr	x30, [sp], #16
   1e88c:	ret
   1e890:	mov	w1, #0x10                  	// #16
   1e894:	b	1e810 <OnPrint@@Base+0x560>
   1e898:	mov	x2, x0
   1e89c:	mov	x0, x1
   1e8a0:	ldr	x1, [x2, #72]
   1e8a4:	cbnz	x1, 1e8c4 <OnPrint@@Base+0x614>
   1e8a8:	ldr	x1, [x2]
   1e8ac:	mov	x5, #0x0                   	// #0
   1e8b0:	ldr	x3, [x2, #40]
   1e8b4:	ldr	x2, [x2, #8]
   1e8b8:	ubfx	w4, w3, #1, #1
   1e8bc:	ubfx	w3, w3, #2, #1
   1e8c0:	b	138e0 <__sancov_default_options@@Base+0x2ce8>
   1e8c4:	str	x30, [sp, #-16]!
   1e8c8:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1e8cc:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1e8d0:	add	x2, x2, #0x4a0
   1e8d4:	add	x0, x0, #0x4b8
   1e8d8:	mov	x4, #0x0                   	// #0
   1e8dc:	mov	x3, #0x0                   	// #0
   1e8e0:	mov	w1, #0x43                  	// #67
   1e8e4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1e8e8:	adrp	x2, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1e8ec:	mov	x1, x0
   1e8f0:	ldr	x0, [x0]
   1e8f4:	ldr	x2, [x2, #3216]
   1e8f8:	cmp	x0, x2
   1e8fc:	b.eq	1e908 <OnPrint@@Base+0x658>  // b.none
   1e900:	ldr	x1, [x1, #8]
   1e904:	b	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1e908:	ret
   1e90c:	nop
   1e910:	ldr	x1, [x0]
   1e914:	str	x1, [x0, #24]
   1e918:	ret
   1e91c:	nop
   1e920:	stp	x19, x30, [sp, #-48]!
   1e924:	add	x0, sp, #0x18
   1e928:	bl	1efd8 <OnPrint@@Base+0xd28>
   1e92c:	ldr	x0, [sp, #32]
   1e930:	cbnz	x0, 1e93c <OnPrint@@Base+0x68c>
   1e934:	ldp	x19, x30, [sp], #48
   1e938:	ret
   1e93c:	adrp	x19, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1e940:	add	x0, x19, #0xc90
   1e944:	add	x0, x0, #0x18
   1e948:	mov	w2, #0x1                   	// #1
   1e94c:	ldxrb	w1, [x0]
   1e950:	stxrb	w3, w2, [x0]
   1e954:	cbnz	w3, 1e94c <OnPrint@@Base+0x69c>
   1e958:	dmb	ish
   1e95c:	tst	w1, #0xff
   1e960:	b.eq	1e968 <OnPrint@@Base+0x6b8>  // b.none
   1e964:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   1e968:	add	x0, x19, #0xc90
   1e96c:	ldr	x1, [x0, #8]
   1e970:	cbnz	x1, 1e998 <OnPrint@@Base+0x6e8>
   1e974:	add	x19, x19, #0xc90
   1e978:	ldp	x2, x3, [sp, #24]
   1e97c:	ldr	x0, [sp, #40]
   1e980:	stp	x2, x3, [x19]
   1e984:	str	x0, [x19, #16]
   1e988:	dmb	ish
   1e98c:	strb	wzr, [x19, #24]
   1e990:	ldp	x19, x30, [sp], #48
   1e994:	ret
   1e998:	ldr	x0, [x19, #3216]
   1e99c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1e9a0:	b	1e974 <OnPrint@@Base+0x6c4>
   1e9a4:	nop
   1e9a8:	stp	x19, x20, [sp, #-32]!
   1e9ac:	adrp	x19, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1e9b0:	add	x1, x19, #0xc90
   1e9b4:	mov	x20, x0
   1e9b8:	add	x0, x1, #0x18
   1e9bc:	mov	w2, #0x1                   	// #1
   1e9c0:	str	x30, [sp, #16]
   1e9c4:	ldxrb	w1, [x0]
   1e9c8:	stxrb	w3, w2, [x0]
   1e9cc:	cbnz	w3, 1e9c4 <OnPrint@@Base+0x714>
   1e9d0:	dmb	ish
   1e9d4:	tst	w1, #0xff
   1e9d8:	b.eq	1e9e0 <OnPrint@@Base+0x730>  // b.none
   1e9dc:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   1e9e0:	ldr	x1, [x19, #3216]
   1e9e4:	add	x0, x19, #0xc90
   1e9e8:	cbz	x1, 1e9fc <OnPrint@@Base+0x74c>
   1e9ec:	ldp	x2, x3, [x0]
   1e9f0:	stp	x2, x3, [x20]
   1e9f4:	ldr	x0, [x0, #16]
   1e9f8:	str	x0, [x20, #16]
   1e9fc:	dmb	ish
   1ea00:	add	x19, x19, #0xc90
   1ea04:	strb	wzr, [x19, #24]
   1ea08:	ldr	x30, [sp, #16]
   1ea0c:	ldp	x19, x20, [sp], #32
   1ea10:	ret
   1ea14:	nop
   1ea18:	stp	x19, x30, [sp, #-16]!
   1ea1c:	tst	w1, #0xff
   1ea20:	mov	x19, x0
   1ea24:	b.ne	1ea4c <OnPrint@@Base+0x79c>  // b.any
   1ea28:	bl	1efd8 <OnPrint@@Base+0xd28>
   1ea2c:	ldr	x0, [x19, #8]
   1ea30:	cbz	x0, 1ea70 <OnPrint@@Base+0x7c0>
   1ea34:	ldr	x0, [x19, #16]
   1ea38:	cbz	x0, 1ea90 <OnPrint@@Base+0x7e0>
   1ea3c:	ldr	x0, [x19]
   1ea40:	str	x0, [x19, #24]
   1ea44:	ldp	x19, x30, [sp], #16
   1ea48:	ret
   1ea4c:	bl	1e920 <OnPrint@@Base+0x670>
   1ea50:	mov	x0, x19
   1ea54:	bl	1efd8 <OnPrint@@Base+0xd28>
   1ea58:	ldr	x0, [x19, #8]
   1ea5c:	cbnz	x0, 1ea34 <OnPrint@@Base+0x784>
   1ea60:	mov	x0, x19
   1ea64:	bl	1e9a8 <OnPrint@@Base+0x6f8>
   1ea68:	ldr	x0, [x19, #8]
   1ea6c:	cbnz	x0, 1ea34 <OnPrint@@Base+0x784>
   1ea70:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1ea74:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1ea78:	add	x2, x2, #0x500
   1ea7c:	add	x0, x0, #0x4b8
   1ea80:	mov	x4, #0x0                   	// #0
   1ea84:	mov	x3, #0x0                   	// #0
   1ea88:	mov	w1, #0x51                  	// #81
   1ea8c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1ea90:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1ea94:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1ea98:	add	x2, x2, #0x530
   1ea9c:	add	x0, x0, #0x4b8
   1eaa0:	mov	x4, #0x0                   	// #0
   1eaa4:	mov	x3, #0x0                   	// #0
   1eaa8:	mov	w1, #0x52                  	// #82
   1eaac:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1eab0:	stp	x19, x20, [sp, #-272]!
   1eab4:	mov	x19, x1
   1eab8:	stp	x21, x22, [sp, #16]
   1eabc:	mov	x21, x0
   1eac0:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1eac4:	stp	x23, x24, [sp, #32]
   1eac8:	ldr	x20, [x0, #4000]
   1eacc:	stp	x25, x26, [sp, #48]
   1ead0:	stp	x27, x28, [sp, #64]
   1ead4:	ldr	x0, [x21]
   1ead8:	str	x30, [sp, #80]
   1eadc:	str	x0, [x21, #24]
   1eae0:	ldr	x0, [x20]
   1eae4:	cbz	x0, 1ed20 <OnPrint@@Base+0xa70>
   1eae8:	sub	x20, x0, #0x1
   1eaec:	ands	x20, x20, x0
   1eaf0:	b.ne	1eda4 <OnPrint@@Base+0xaf4>  // b.any
   1eaf4:	add	x25, x0, #0xfff
   1eaf8:	neg	x0, x0
   1eafc:	and	x25, x25, x0
   1eb00:	mov	w2, #0x0                   	// #0
   1eb04:	mov	x0, x25
   1eb08:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1eb0c:	add	x1, x1, #0x258
   1eb10:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1eb14:	mov	x2, #0x0                   	// #0
   1eb18:	mov	x1, #0x0                   	// #0
   1eb1c:	mov	x24, x0
   1eb20:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1eb24:	mov	x1, #0x0                   	// #0
   1eb28:	mov	x0, #0x0                   	// #0
   1eb2c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1eb30:	cmp	x25, #0xfff
   1eb34:	b.ls	1ed2c <OnPrint@@Base+0xa7c>  // b.plast
   1eb38:	mov	x2, #0x1000                	// #4096
   1eb3c:	mov	w1, #0x0                   	// #0
   1eb40:	mov	x0, x24
   1eb44:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   1eb48:	strb	wzr, [x24]
   1eb4c:	mov	x0, #0x1000                	// #4096
   1eb50:	add	x22, sp, #0x78
   1eb54:	add	x23, sp, #0xc0
   1eb58:	mov	x1, x23
   1eb5c:	add	x27, x22, #0x1c
   1eb60:	stp	x24, x0, [sp, #216]
   1eb64:	mov	x0, x21
   1eb68:	str	xzr, [sp, #264]
   1eb6c:	bl	1f018 <OnPrint@@Base+0xd68>
   1eb70:	tst	w0, #0xff
   1eb74:	b.eq	1ec3c <OnPrint@@Base+0x98c>  // b.none
   1eb78:	ldr	x28, [sp, #216]
   1eb7c:	ldrb	w0, [x28]
   1eb80:	cbz	w0, 1ec24 <OnPrint@@Base+0x974>
   1eb84:	ldr	x3, [sp, #192]
   1eb88:	cmp	x20, #0x0
   1eb8c:	ldr	x0, [sp, #208]
   1eb90:	csel	x3, x3, xzr, ne  // ne = any
   1eb94:	mov	x2, #0x10                  	// #16
   1eb98:	mov	w1, #0x0                   	// #0
   1eb9c:	sub	x26, x3, x0
   1eba0:	mov	x0, x27
   1eba4:	stp	xzr, xzr, [sp, #120]
   1eba8:	str	xzr, [sp, #136]
   1ebac:	str	wzr, [sp, #144]
   1ebb0:	strb	wzr, [sp, #164]
   1ebb4:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   1ebb8:	mov	x2, x26
   1ebbc:	mov	x1, x28
   1ebc0:	mov	x0, x22
   1ebc4:	stp	xzr, xzr, [sp, #168]
   1ebc8:	str	xzr, [sp, #184]
   1ebcc:	bl	13848 <__sancov_default_options@@Base+0x2c50>
   1ebd0:	mov	x0, x23
   1ebd4:	mov	x1, x22
   1ebd8:	bl	1e898 <OnPrint@@Base+0x5e8>
   1ebdc:	ldp	x4, x3, [x19, #8]
   1ebe0:	mov	x0, #0xe38f                	// #58255
   1ebe4:	movk	x0, #0x8e38, lsl #16
   1ebe8:	movk	x0, #0x38e3, lsl #32
   1ebec:	movk	x0, #0xe38e, lsl #48
   1ebf0:	umulh	x4, x4, x0
   1ebf4:	lsr	x4, x4, #6
   1ebf8:	cmp	x3, x4
   1ebfc:	b.hi	1edb4 <OnPrint@@Base+0xb04>  // b.pmore
   1ec00:	add	x1, x3, #0x1
   1ec04:	b.eq	1ec64 <OnPrint@@Base+0x9b4>  // b.none
   1ec08:	ldr	x5, [x19]
   1ec0c:	add	x3, x3, x3, lsl #3
   1ec10:	str	x1, [x19, #16]
   1ec14:	mov	x2, #0x48                  	// #72
   1ec18:	add	x0, x5, x3, lsl #3
   1ec1c:	mov	x1, x22
   1ec20:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1ec24:	mov	x1, x23
   1ec28:	mov	x0, x21
   1ec2c:	add	x20, x20, #0x1
   1ec30:	bl	1f018 <OnPrint@@Base+0xd68>
   1ec34:	tst	w0, #0xff
   1ec38:	b.ne	1eb78 <OnPrint@@Base+0x8c8>  // b.any
   1ec3c:	mov	x1, x25
   1ec40:	mov	x0, x24
   1ec44:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1ec48:	ldp	x21, x22, [sp, #16]
   1ec4c:	ldp	x23, x24, [sp, #32]
   1ec50:	ldp	x25, x26, [sp, #48]
   1ec54:	ldp	x27, x28, [sp, #64]
   1ec58:	ldr	x30, [sp, #80]
   1ec5c:	ldp	x19, x20, [sp], #272
   1ec60:	ret
   1ec64:	tst	x1, x3
   1ec68:	b.eq	1eca4 <OnPrint@@Base+0x9f4>  // b.none
   1ec6c:	clz	x2, x1
   1ec70:	mov	w0, #0x3f                  	// #63
   1ec74:	sub	w0, w0, w2
   1ec78:	mov	x2, #0x1                   	// #1
   1ec7c:	add	w4, w0, #0x1
   1ec80:	lsl	x4, x2, x4
   1ec84:	cmp	x1, x4
   1ec88:	b.cs	1edcc <OnPrint@@Base+0xb1c>  // b.hs, b.nlast
   1ec8c:	lsl	x0, x2, x0
   1ec90:	cmp	x1, x0
   1ec94:	b.ls	1ee0c <OnPrint@@Base+0xb5c>  // b.plast
   1ec98:	cmp	x3, x4
   1ec9c:	b.hi	1edf4 <OnPrint@@Base+0xb44>  // b.pmore
   1eca0:	mov	x1, x4
   1eca4:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1eca8:	add	x1, x1, x1, lsl #3
   1ecac:	ldr	x2, [x0, #4000]
   1ecb0:	lsl	x1, x1, #3
   1ecb4:	ldr	x0, [x2]
   1ecb8:	cbz	x0, 1ed90 <OnPrint@@Base+0xae0>
   1ecbc:	sub	x4, x0, #0x1
   1ecc0:	tst	x0, x4
   1ecc4:	b.ne	1eda4 <OnPrint@@Base+0xaf4>  // b.any
   1ecc8:	add	x1, x1, x4
   1eccc:	neg	x0, x0
   1ecd0:	and	x4, x1, x0
   1ecd4:	mov	w2, #0x0                   	// #0
   1ecd8:	mov	x0, x4
   1ecdc:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1ece0:	add	x1, x1, #0x258
   1ece4:	str	x4, [sp, #104]
   1ece8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1ecec:	str	x0, [sp, #96]
   1ecf0:	ldr	x2, [x19, #16]
   1ecf4:	ldr	x1, [x19]
   1ecf8:	add	x2, x2, x2, lsl #3
   1ecfc:	lsl	x2, x2, #3
   1ed00:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1ed04:	ldp	x0, x1, [x19]
   1ed08:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1ed0c:	ldr	x3, [x19, #16]
   1ed10:	ldp	x5, x4, [sp, #96]
   1ed14:	add	x1, x3, #0x1
   1ed18:	stp	x5, x4, [x19]
   1ed1c:	b	1ec0c <OnPrint@@Base+0x95c>
   1ed20:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1ed24:	str	x0, [x20]
   1ed28:	b	1eae8 <OnPrint@@Base+0x838>
   1ed2c:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ed30:	ldr	x22, [x0, #4000]
   1ed34:	ldr	x0, [x22]
   1ed38:	cbz	x0, 1ede8 <OnPrint@@Base+0xb38>
   1ed3c:	sub	x1, x0, #0x1
   1ed40:	tst	x1, x0
   1ed44:	b.ne	1eda4 <OnPrint@@Base+0xaf4>  // b.any
   1ed48:	add	x22, x0, #0xfff
   1ed4c:	neg	x0, x0
   1ed50:	and	x22, x22, x0
   1ed54:	mov	w2, #0x0                   	// #0
   1ed58:	mov	x0, x22
   1ed5c:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1ed60:	add	x1, x1, #0x258
   1ed64:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1ed68:	mov	x2, #0x0                   	// #0
   1ed6c:	mov	x23, x0
   1ed70:	mov	x1, x24
   1ed74:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1ed78:	mov	x1, x25
   1ed7c:	mov	x0, x24
   1ed80:	mov	x25, x22
   1ed84:	mov	x24, x23
   1ed88:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1ed8c:	b	1eb38 <OnPrint@@Base+0x888>
   1ed90:	stp	x1, x2, [sp, #96]
   1ed94:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1ed98:	ldp	x1, x2, [sp, #96]
   1ed9c:	str	x0, [x2]
   1eda0:	b	1ecbc <OnPrint@@Base+0xa0c>
   1eda4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1eda8:	add	x0, x0, #0x240
   1edac:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1edb0:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1edb4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1edb8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1edbc:	add	x2, x2, #0x1b8
   1edc0:	add	x0, x0, #0xf8
   1edc4:	mov	w1, #0x1be                 	// #446
   1edc8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1edcc:	mov	x3, x1
   1edd0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1edd4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1edd8:	add	x2, x2, #0x1d8
   1eddc:	add	x0, x0, #0xf8
   1ede0:	mov	w1, #0x17b                 	// #379
   1ede4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1ede8:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1edec:	str	x0, [x22]
   1edf0:	b	1ed3c <OnPrint@@Base+0xa8c>
   1edf4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1edf8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1edfc:	add	x2, x2, #0x220
   1ee00:	add	x0, x0, #0xf8
   1ee04:	mov	w1, #0x1fd                 	// #509
   1ee08:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1ee0c:	mov	x4, x0
   1ee10:	mov	x3, x1
   1ee14:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1ee18:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1ee1c:	add	x2, x2, #0x200
   1ee20:	add	x0, x0, #0xf8
   1ee24:	mov	w1, #0x17c                 	// #380
   1ee28:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1ee2c:	nop
   1ee30:	stp	x19, x20, [sp, #-96]!
   1ee34:	mov	x5, #0x0                   	// #0
   1ee38:	mov	x4, #0x4000000             	// #67108864
   1ee3c:	add	x3, sp, #0x50
   1ee40:	stp	x21, x22, [sp, #16]
   1ee44:	mov	x22, x0
   1ee48:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1ee4c:	add	x0, x0, #0x558
   1ee50:	stp	x23, x24, [sp, #32]
   1ee54:	mov	x23, x1
   1ee58:	mov	x24, x2
   1ee5c:	add	x1, sp, #0x40
   1ee60:	add	x2, sp, #0x48
   1ee64:	str	x30, [sp, #56]
   1ee68:	stp	xzr, xzr, [sp, #64]
   1ee6c:	str	xzr, [sp, #80]
   1ee70:	bl	16b30 <__sanitizer_cov_dump@@Base+0x2078>
   1ee74:	tst	w0, #0xff
   1ee78:	b.eq	1ef18 <OnPrint@@Base+0xc68>  // b.none
   1ee7c:	ldr	x3, [sp, #64]
   1ee80:	str	x3, [sp, #88]
   1ee84:	ldr	x0, [sp, #80]
   1ee88:	add	x0, x3, x0
   1ee8c:	cmp	x3, x0
   1ee90:	b.cs	1efcc <OnPrint@@Base+0xd1c>  // b.hs, b.nlast
   1ee94:	adrp	x21, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1ee98:	add	x21, x21, #0x570
   1ee9c:	str	x25, [sp, #48]
   1eea0:	add	x25, sp, #0x58
   1eea4:	mov	w19, #0x0                   	// #0
   1eea8:	mov	x20, #0x0                   	// #0
   1eeac:	nop
   1eeb0:	ldrb	w0, [x3]
   1eeb4:	bl	1e7c0 <OnPrint@@Base+0x510>
   1eeb8:	cmp	w0, #0xf
   1eebc:	b.ls	1ef74 <OnPrint@@Base+0xcc4>  // b.plast
   1eec0:	mov	x0, x3
   1eec4:	mov	x1, x21
   1eec8:	mov	x2, #0x4                   	// #4
   1eecc:	bl	18b48 <__sanitizer_set_report_fd@@Base+0x1898>
   1eed0:	cbz	w0, 1ef2c <OnPrint@@Base+0xc7c>
   1eed4:	ldr	x4, [sp, #88]
   1eed8:	add	x4, x4, #0x1
   1eedc:	nop
   1eee0:	mov	x3, x4
   1eee4:	str	x3, [sp, #88]
   1eee8:	add	x4, x4, #0x1
   1eeec:	ldurb	w0, [x3, #-1]
   1eef0:	cmp	w0, #0xa
   1eef4:	b.ne	1eee0 <OnPrint@@Base+0xc30>  // b.any
   1eef8:	ldr	x0, [sp, #64]
   1eefc:	ldr	x1, [sp, #80]
   1ef00:	add	x1, x0, x1
   1ef04:	cmp	x3, x1
   1ef08:	b.cc	1eeb0 <OnPrint@@Base+0xc00>  // b.lo, b.ul, b.last
   1ef0c:	ldr	x25, [sp, #48]
   1ef10:	ldr	x1, [sp, #72]
   1ef14:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1ef18:	ldp	x21, x22, [sp, #16]
   1ef1c:	ldp	x23, x24, [sp, #32]
   1ef20:	ldr	x30, [sp, #56]
   1ef24:	ldp	x19, x20, [sp], #96
   1ef28:	ret
   1ef2c:	ldr	x3, [sp, #88]
   1ef30:	b	1ef38 <OnPrint@@Base+0xc88>
   1ef34:	str	x3, [sp, #88]
   1ef38:	ldrb	w0, [x3], #1
   1ef3c:	bl	1e7c0 <OnPrint@@Base+0x510>
   1ef40:	cmp	w0, #0x9
   1ef44:	b.hi	1ef34 <OnPrint@@Base+0xc84>  // b.pmore
   1ef48:	mov	w1, #0xa                   	// #10
   1ef4c:	mov	x0, x25
   1ef50:	bl	1e810 <OnPrint@@Base+0x560>
   1ef54:	lsl	x1, x0, #10
   1ef58:	mov	x4, x24
   1ef5c:	mov	x3, x23
   1ef60:	mov	w2, w19
   1ef64:	mov	x0, x20
   1ef68:	blr	x22
   1ef6c:	ldr	x4, [sp, #88]
   1ef70:	b	1eed8 <OnPrint@@Base+0xc28>
   1ef74:	mov	x0, x25
   1ef78:	mov	w1, #0x10                  	// #16
   1ef7c:	bl	1e810 <OnPrint@@Base+0x560>
   1ef80:	mov	x20, x0
   1ef84:	ldr	x4, [sp, #88]
   1ef88:	ldrb	w0, [x4]
   1ef8c:	cmp	w0, #0x2f
   1ef90:	cset	w19, eq  // eq = none
   1ef94:	cmp	w19, #0x0
   1ef98:	ccmp	w0, #0xa, #0x0, eq  // eq = none
   1ef9c:	b.ls	1eed8 <OnPrint@@Base+0xc28>  // b.plast
   1efa0:	add	x0, x4, #0x1
   1efa4:	nop
   1efa8:	str	x0, [sp, #88]
   1efac:	mov	x4, x0
   1efb0:	ldrb	w1, [x0], #1
   1efb4:	cmp	w1, #0x2f
   1efb8:	cset	w19, eq  // eq = none
   1efbc:	cmp	w19, #0x0
   1efc0:	ccmp	w1, #0xa, #0x0, eq  // eq = none
   1efc4:	b.hi	1efa8 <OnPrint@@Base+0xcf8>  // b.pmore
   1efc8:	b	1eed8 <OnPrint@@Base+0xc28>
   1efcc:	mov	x0, x3
   1efd0:	b	1ef10 <OnPrint@@Base+0xc60>
   1efd4:	nop
   1efd8:	stp	x19, x30, [sp, #-16]!
   1efdc:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1efe0:	mov	x19, x0
   1efe4:	add	x3, x19, #0x10
   1efe8:	add	x0, x1, #0x578
   1efec:	add	x2, x19, #0x8
   1eff0:	mov	x1, x19
   1eff4:	mov	x5, #0x0                   	// #0
   1eff8:	mov	x4, #0x4000000             	// #67108864
   1effc:	bl	16b30 <__sanitizer_cov_dump@@Base+0x2078>
   1f000:	tst	w0, #0xff
   1f004:	b.ne	1f010 <OnPrint@@Base+0xd60>  // b.any
   1f008:	stp	xzr, xzr, [x19]
   1f00c:	str	xzr, [x19, #16]
   1f010:	ldp	x19, x30, [sp], #16
   1f014:	ret
   1f018:	stp	x19, x20, [sp, #-64]!
   1f01c:	mov	x19, x0
   1f020:	mov	x20, x1
   1f024:	stp	x21, x22, [sp, #16]
   1f028:	ldr	x22, [x0]
   1f02c:	ldp	x1, x0, [x0, #16]
   1f030:	str	x30, [sp, #56]
   1f034:	add	x22, x22, x1
   1f038:	cmp	x0, x22
   1f03c:	b.cc	1f058 <OnPrint@@Base+0xda8>  // b.lo, b.ul, b.last
   1f040:	mov	w22, #0x0                   	// #0
   1f044:	mov	w0, w22
   1f048:	ldp	x21, x22, [sp, #16]
   1f04c:	ldr	x30, [sp, #56]
   1f050:	ldp	x19, x20, [sp], #64
   1f054:	ret
   1f058:	sub	x2, x22, x0
   1f05c:	mov	w1, #0xa                   	// #10
   1f060:	stp	x23, x24, [sp, #32]
   1f064:	add	x23, x19, #0x18
   1f068:	str	x25, [sp, #48]
   1f06c:	bl	18880 <__sanitizer_set_report_fd@@Base+0x15d0>
   1f070:	mov	x21, x0
   1f074:	mov	x0, x23
   1f078:	cmp	x21, #0x0
   1f07c:	csel	x21, x21, x22, ne  // ne = any
   1f080:	bl	1e890 <OnPrint@@Base+0x5e0>
   1f084:	ldr	x1, [x19, #24]
   1f088:	str	x0, [x20]
   1f08c:	add	x0, x1, #0x1
   1f090:	str	x0, [x19, #24]
   1f094:	ldrb	w22, [x1]
   1f098:	cmp	x22, #0x2d
   1f09c:	b.ne	1f2d0 <OnPrint@@Base+0x1020>  // b.any
   1f0a0:	mov	x0, x23
   1f0a4:	bl	1e890 <OnPrint@@Base+0x5e0>
   1f0a8:	ldr	x2, [x19, #24]
   1f0ac:	str	x0, [x20, #8]
   1f0b0:	add	x0, x2, #0x1
   1f0b4:	str	x0, [x19, #24]
   1f0b8:	ldrb	w3, [x2]
   1f0bc:	cmp	x3, #0x20
   1f0c0:	b.ne	1f2f0 <OnPrint@@Base+0x1040>  // b.any
   1f0c4:	ldrb	w0, [x2, #1]
   1f0c8:	cmp	w0, #0x72
   1f0cc:	ccmp	w0, w22, #0x4, ne  // ne = any
   1f0d0:	b.ne	1f30c <OnPrint@@Base+0x105c>  // b.any
   1f0d4:	str	xzr, [x20, #40]
   1f0d8:	add	x0, x2, #0x2
   1f0dc:	str	x0, [x19, #24]
   1f0e0:	ldrb	w0, [x2, #1]
   1f0e4:	cmp	w0, #0x72
   1f0e8:	b.ne	1f0f4 <OnPrint@@Base+0xe44>  // b.any
   1f0ec:	mov	x0, #0x1                   	// #1
   1f0f0:	str	x0, [x20, #40]
   1f0f4:	ldrb	w0, [x2, #2]
   1f0f8:	mov	w1, #0x2d                  	// #45
   1f0fc:	cmp	w0, #0x77
   1f100:	ccmp	w0, w1, #0x4, ne  // ne = any
   1f104:	b.ne	1f32c <OnPrint@@Base+0x107c>  // b.any
   1f108:	add	x0, x2, #0x3
   1f10c:	str	x0, [x19, #24]
   1f110:	ldrb	w0, [x2, #2]
   1f114:	cmp	w0, #0x77
   1f118:	b.ne	1f128 <OnPrint@@Base+0xe78>  // b.any
   1f11c:	ldr	x0, [x20, #40]
   1f120:	orr	x0, x0, #0x2
   1f124:	str	x0, [x20, #40]
   1f128:	ldrb	w0, [x2, #3]
   1f12c:	mov	w1, #0x78                  	// #120
   1f130:	cmp	w0, #0x2d
   1f134:	ccmp	w0, w1, #0x4, ne  // ne = any
   1f138:	b.ne	1f34c <OnPrint@@Base+0x109c>  // b.any
   1f13c:	add	x0, x2, #0x4
   1f140:	str	x0, [x19, #24]
   1f144:	ldrb	w0, [x2, #3]
   1f148:	cmp	w0, #0x78
   1f14c:	b.eq	1f290 <OnPrint@@Base+0xfe0>  // b.none
   1f150:	ldrb	w0, [x2, #4]
   1f154:	cmp	w0, #0x73
   1f158:	cset	w22, eq  // eq = none
   1f15c:	cmp	w0, #0x70
   1f160:	csinc	w22, w22, wzr, ne  // ne = any
   1f164:	cbz	w22, 1f36c <OnPrint@@Base+0x10bc>
   1f168:	add	x0, x2, #0x5
   1f16c:	str	x0, [x19, #24]
   1f170:	ldrb	w0, [x2, #4]
   1f174:	cmp	w0, #0x73
   1f178:	b.eq	1f2a0 <OnPrint@@Base+0xff0>  // b.none
   1f17c:	add	x0, x2, #0x6
   1f180:	str	x0, [x19, #24]
   1f184:	ldrb	w24, [x2, #5]
   1f188:	cmp	x24, #0x20
   1f18c:	b.ne	1f38c <OnPrint@@Base+0x10dc>  // b.any
   1f190:	mov	x0, x23
   1f194:	bl	1e890 <OnPrint@@Base+0x5e0>
   1f198:	str	x0, [x20, #16]
   1f19c:	ldr	x0, [x19, #24]
   1f1a0:	add	x1, x0, #0x1
   1f1a4:	str	x1, [x19, #24]
   1f1a8:	ldrb	w25, [x0]
   1f1ac:	cmp	x25, #0x20
   1f1b0:	b.ne	1f3ac <OnPrint@@Base+0x10fc>  // b.any
   1f1b4:	mov	x0, x23
   1f1b8:	bl	1e890 <OnPrint@@Base+0x5e0>
   1f1bc:	ldr	x0, [x19, #24]
   1f1c0:	add	x1, x0, #0x1
   1f1c4:	str	x1, [x19, #24]
   1f1c8:	ldrb	w24, [x0]
   1f1cc:	cmp	x24, #0x3a
   1f1d0:	b.ne	1f2b0 <OnPrint@@Base+0x1000>  // b.any
   1f1d4:	mov	x0, x23
   1f1d8:	bl	1e890 <OnPrint@@Base+0x5e0>
   1f1dc:	ldr	x0, [x19, #24]
   1f1e0:	add	x2, x0, #0x1
   1f1e4:	str	x2, [x19, #24]
   1f1e8:	ldrb	w3, [x0]
   1f1ec:	cmp	x3, #0x20
   1f1f0:	b.eq	1f204 <OnPrint@@Base+0xf54>  // b.none
   1f1f4:	b	1f3cc <OnPrint@@Base+0x111c>
   1f1f8:	ldr	x2, [x19, #24]
   1f1fc:	add	x2, x2, #0x1
   1f200:	str	x2, [x19, #24]
   1f204:	ldrb	w0, [x2]
   1f208:	bl	1e858 <OnPrint@@Base+0x5a8>
   1f20c:	tst	w0, #0xff
   1f210:	b.ne	1f1f8 <OnPrint@@Base+0xf48>  // b.any
   1f214:	ldr	x1, [x19, #24]
   1f218:	cmp	x1, x21
   1f21c:	b.cc	1f234 <OnPrint@@Base+0xf84>  // b.lo, b.ul, b.last
   1f220:	b	1f240 <OnPrint@@Base+0xf90>
   1f224:	add	x1, x1, #0x1
   1f228:	str	x1, [x19, #24]
   1f22c:	cmp	x1, x21
   1f230:	b.eq	1f240 <OnPrint@@Base+0xf90>  // b.none
   1f234:	ldrb	w0, [x1]
   1f238:	cmp	w0, #0x20
   1f23c:	b.eq	1f224 <OnPrint@@Base+0xf74>  // b.none
   1f240:	ldr	x0, [x20, #24]
   1f244:	cbz	x0, 1f26c <OnPrint@@Base+0xfbc>
   1f248:	ldr	x23, [x20, #32]
   1f24c:	sub	x3, x21, x1
   1f250:	sub	x23, x23, #0x1
   1f254:	cmp	x23, x3
   1f258:	csel	x23, x23, x3, ls  // ls = plast
   1f25c:	mov	x2, x23
   1f260:	bl	18dd0 <__sanitizer_set_report_fd@@Base+0x1b20>
   1f264:	ldr	x0, [x20, #24]
   1f268:	strb	wzr, [x0, x23]
   1f26c:	add	x21, x21, #0x1
   1f270:	mov	w0, w22
   1f274:	ldp	x23, x24, [sp, #32]
   1f278:	ldr	x25, [sp, #48]
   1f27c:	str	x21, [x19, #24]
   1f280:	ldp	x21, x22, [sp, #16]
   1f284:	ldr	x30, [sp, #56]
   1f288:	ldp	x19, x20, [sp], #64
   1f28c:	ret
   1f290:	ldr	x0, [x20, #40]
   1f294:	orr	x0, x0, #0x4
   1f298:	str	x0, [x20, #40]
   1f29c:	b	1f150 <OnPrint@@Base+0xea0>
   1f2a0:	ldr	x0, [x20, #40]
   1f2a4:	orr	x0, x0, #0x8
   1f2a8:	str	x0, [x20, #40]
   1f2ac:	b	1f17c <OnPrint@@Base+0xecc>
   1f2b0:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f2b4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f2b8:	mov	x3, x24
   1f2bc:	add	x2, x2, #0x6d0
   1f2c0:	add	x0, x0, #0x5a8
   1f2c4:	mov	x4, #0x3a                  	// #58
   1f2c8:	mov	w1, #0x38                  	// #56
   1f2cc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f2d0:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f2d4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f2d8:	mov	x3, x22
   1f2dc:	add	x2, x2, #0x588
   1f2e0:	add	x0, x0, #0x5a8
   1f2e4:	mov	x4, #0x2d                  	// #45
   1f2e8:	mov	w1, #0x28                  	// #40
   1f2ec:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f2f0:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f2f4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f2f8:	add	x2, x2, #0x5f0
   1f2fc:	add	x0, x0, #0x5a8
   1f300:	mov	x4, #0x20                  	// #32
   1f304:	mov	w1, #0x2a                  	// #42
   1f308:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f30c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f310:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f314:	add	x2, x2, #0x610
   1f318:	add	x0, x0, #0x5a8
   1f31c:	mov	x4, #0x0                   	// #0
   1f320:	mov	x3, #0x0                   	// #0
   1f324:	mov	w1, #0x2b                  	// #43
   1f328:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f32c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f330:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f334:	add	x2, x2, #0x640
   1f338:	add	x0, x0, #0x5a8
   1f33c:	mov	x4, #0x0                   	// #0
   1f340:	mov	x3, #0x0                   	// #0
   1f344:	mov	w1, #0x2e                  	// #46
   1f348:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f34c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f350:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f354:	add	x2, x2, #0x670
   1f358:	add	x0, x0, #0x5a8
   1f35c:	mov	x4, #0x0                   	// #0
   1f360:	mov	x3, #0x0                   	// #0
   1f364:	mov	w1, #0x30                  	// #48
   1f368:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f36c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f370:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f374:	add	x2, x2, #0x6a0
   1f378:	add	x0, x0, #0x5a8
   1f37c:	mov	x4, #0x0                   	// #0
   1f380:	mov	x3, #0x0                   	// #0
   1f384:	mov	w1, #0x32                  	// #50
   1f388:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f38c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f390:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f394:	mov	x3, x24
   1f398:	add	x2, x2, #0x5f0
   1f39c:	add	x0, x0, #0x5a8
   1f3a0:	mov	x4, #0x20                  	// #32
   1f3a4:	mov	w1, #0x34                  	// #52
   1f3a8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f3ac:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f3b0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f3b4:	mov	x4, x24
   1f3b8:	mov	x3, x25
   1f3bc:	add	x2, x2, #0x5f0
   1f3c0:	add	x0, x0, #0x5a8
   1f3c4:	mov	w1, #0x36                  	// #54
   1f3c8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f3cc:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f3d0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f3d4:	mov	x4, x25
   1f3d8:	mov	w1, w24
   1f3dc:	add	x2, x2, #0x5f0
   1f3e0:	add	x0, x0, #0x5a8
   1f3e4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f3e8:	ldr	w2, [x0]
   1f3ec:	ldr	w0, [x1]
   1f3f0:	cmp	w2, w0
   1f3f4:	cset	w0, cc  // cc = lo, ul, last
   1f3f8:	ret
   1f3fc:	nop
   1f400:	ldr	x0, [x0]
   1f404:	ldr	w0, [x0, #8]
   1f408:	ret
   1f40c:	nop
   1f410:	ldr	x0, [x0]
   1f414:	ldr	w0, [x0, #12]
   1f418:	and	w0, w0, #0xfffff
   1f41c:	ret
   1f420:	ldr	x0, [x0]
   1f424:	add	x0, x0, #0xc
   1f428:	ldxr	w1, [x0]
   1f42c:	add	w2, w1, #0x1
   1f430:	stlxr	w3, w2, [x0]
   1f434:	cbnz	w3, 1f428 <OnPrint@@Base+0x1178>
   1f438:	mvn	x0, x1
   1f43c:	dmb	ish
   1f440:	tst	x0, #0xfffff
   1f444:	b.eq	1f44c <OnPrint@@Base+0x119c>  // b.none
   1f448:	ret
   1f44c:	str	x30, [sp, #-16]!
   1f450:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f454:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f458:	mov	x4, #0x100000              	// #1048576
   1f45c:	add	x2, x2, #0x6f0
   1f460:	add	x0, x0, #0x720
   1f464:	mov	x3, x4
   1f468:	mov	w1, #0x61                  	// #97
   1f46c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f470:	adrp	x0, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1f474:	add	x0, x0, #0xb0
   1f478:	ret
   1f47c:	nop
   1f480:	mov	w2, w0
   1f484:	cbz	w0, 1f4fc <OnPrint@@Base+0x124c>
   1f488:	str	x30, [sp, #-16]!
   1f48c:	and	x3, x2, #0x7fffffff
   1f490:	mov	w4, w0
   1f494:	cmp	x3, w0, uxtw
   1f498:	b.ne	1f530 <OnPrint@@Base+0x1280>  // b.any
   1f49c:	lsr	w3, w0, #23
   1f4a0:	adrp	x0, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1f4a4:	add	x0, x0, #0xcb0
   1f4a8:	mov	x5, #0xfffff               	// #1048575
   1f4ac:	lsl	x3, x3, #12
   1f4b0:	add	x6, x3, #0x1, lsl #12
   1f4b4:	cmp	x3, x5
   1f4b8:	b.hi	1f548 <OnPrint@@Base+0x1298>  // b.pmore
   1f4bc:	ldr	x1, [x0, x3, lsl #3]
   1f4c0:	ands	x1, x1, #0xfffffffffffffffe
   1f4c4:	b.ne	1f4d4 <OnPrint@@Base+0x1224>  // b.any
   1f4c8:	b	1f514 <OnPrint@@Base+0x1264>
   1f4cc:	ldr	x1, [x1]
   1f4d0:	cbz	x1, 1f514 <OnPrint@@Base+0x1264>
   1f4d4:	ldr	w4, [x1, #8]
   1f4d8:	cmp	w2, w4
   1f4dc:	b.ne	1f4cc <OnPrint@@Base+0x121c>  // b.any
   1f4e0:	ldp	w2, w3, [x1, #16]
   1f4e4:	add	x0, x1, #0x18
   1f4e8:	mov	x1, #0x0                   	// #0
   1f4ec:	bfxil	x1, x2, #0, #32
   1f4f0:	ldr	x30, [sp], #16
   1f4f4:	bfi	x1, x3, #32, #32
   1f4f8:	ret
   1f4fc:	mov	x1, #0x0                   	// #0
   1f500:	mov	w3, #0x0                   	// #0
   1f504:	bfxil	x1, x2, #0, #32
   1f508:	mov	x0, #0x0                   	// #0
   1f50c:	bfi	x1, x3, #32, #32
   1f510:	ret
   1f514:	add	x3, x3, #0x1
   1f518:	cmp	x6, x3
   1f51c:	b.ne	1f4b4 <OnPrint@@Base+0x1204>  // b.any
   1f520:	mov	w3, #0x0                   	// #0
   1f524:	mov	w2, #0x0                   	// #0
   1f528:	mov	x0, #0x0                   	// #0
   1f52c:	b	1f4e8 <OnPrint@@Base+0x1238>
   1f530:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f534:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f538:	add	x2, x2, #0x768
   1f53c:	add	x0, x0, #0x798
   1f540:	mov	w1, #0x8c                  	// #140
   1f544:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f548:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f54c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1f550:	add	x2, x2, #0x7e0
   1f554:	add	x0, x0, #0x798
   1f558:	mov	x4, #0x100000              	// #1048576
   1f55c:	mov	w1, #0x91                  	// #145
   1f560:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f564:	nop
   1f568:	adrp	x3, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1f56c:	add	x3, x3, #0xcb0
   1f570:	mov	w0, #0x0                   	// #0
   1f574:	nop
   1f578:	sxtw	x2, w0
   1f57c:	ldr	x1, [x3, x2, lsl #3]
   1f580:	dmb	ish
   1f584:	and	x1, x1, #0xfffffffffffffffe
   1f588:	str	x1, [x3, x2, lsl #3]
   1f58c:	add	w0, w0, #0x1
   1f590:	cmp	w0, #0x100, lsl #12
   1f594:	b.ne	1f578 <OnPrint@@Base+0x12c8>  // b.any
   1f598:	ret
   1f59c:	nop
   1f5a0:	ldr	x4, [x0, #16]
   1f5a4:	cbnz	x4, 1f5b4 <OnPrint@@Base+0x1304>
   1f5a8:	mov	x0, #0x0                   	// #0
   1f5ac:	mov	x1, #0x0                   	// #0
   1f5b0:	ret
   1f5b4:	mov	x5, x4
   1f5b8:	mov	x2, #0x0                   	// #0
   1f5bc:	str	x30, [sp, #-16]!
   1f5c0:	cmp	x5, x2
   1f5c4:	b.ls	1f5f8 <OnPrint@@Base+0x1348>  // b.plast
   1f5c8:	add	x3, x5, x2
   1f5cc:	ldr	x7, [x0]
   1f5d0:	cmp	x4, x3, lsr #1
   1f5d4:	lsr	x3, x3, #1
   1f5d8:	b.ls	1f634 <OnPrint@@Base+0x1384>  // b.plast
   1f5dc:	lsl	x6, x3, #4
   1f5e0:	ldr	w6, [x7, x6]
   1f5e4:	cmp	w1, w6
   1f5e8:	b.ls	1f62c <OnPrint@@Base+0x137c>  // b.plast
   1f5ec:	add	x2, x3, #0x1
   1f5f0:	cmp	x5, x2
   1f5f4:	b.hi	1f5c8 <OnPrint@@Base+0x1318>  // b.pmore
   1f5f8:	cmp	x4, x2
   1f5fc:	b.cc	1f61c <OnPrint@@Base+0x136c>  // b.lo, b.ul, b.last
   1f600:	ldr	x0, [x0]
   1f604:	b.eq	1f65c <OnPrint@@Base+0x13ac>  // b.none
   1f608:	lsl	x2, x2, #4
   1f60c:	add	x3, x0, x2
   1f610:	ldr	w0, [x0, x2]
   1f614:	cmp	w0, w1
   1f618:	b.eq	1f64c <OnPrint@@Base+0x139c>  // b.none
   1f61c:	mov	x0, #0x0                   	// #0
   1f620:	mov	x1, #0x0                   	// #0
   1f624:	ldr	x30, [sp], #16
   1f628:	ret
   1f62c:	mov	x5, x3
   1f630:	b	1f5c0 <OnPrint@@Base+0x1310>
   1f634:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1f638:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1f63c:	add	x2, x2, #0xe0
   1f640:	add	x0, x0, #0xf8
   1f644:	mov	w1, #0x1ba                 	// #442
   1f648:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f64c:	ldr	x1, [x3, #8]
   1f650:	add	x0, x1, #0x18
   1f654:	ldr	x1, [x1, #16]
   1f658:	b	1f624 <OnPrint@@Base+0x1374>
   1f65c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1f660:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1f664:	add	x2, x2, #0xe0
   1f668:	add	x0, x0, #0xf8
   1f66c:	mov	x3, x4
   1f670:	mov	w1, #0x1b6                 	// #438
   1f674:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f678:	stp	x19, x20, [sp, #-128]!
   1f67c:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f680:	mov	x19, x0
   1f684:	stp	x21, x22, [sp, #16]
   1f688:	ldr	x21, [x20, #4000]
   1f68c:	stp	x23, x24, [sp, #32]
   1f690:	stp	x25, x26, [sp, #48]
   1f694:	stp	x27, x28, [sp, #64]
   1f698:	str	x30, [sp, #80]
   1f69c:	stp	xzr, xzr, [x0]
   1f6a0:	ldr	x0, [x21]
   1f6a4:	str	xzr, [x19, #16]
   1f6a8:	cbz	x0, 1f8dc <OnPrint@@Base+0x162c>
   1f6ac:	sub	x1, x0, #0x1
   1f6b0:	tst	x1, x0
   1f6b4:	b.ne	1f90c <OnPrint@@Base+0x165c>  // b.any
   1f6b8:	add	x21, x0, #0xf
   1f6bc:	neg	x0, x0
   1f6c0:	and	x21, x21, x0
   1f6c4:	mov	w2, #0x0                   	// #0
   1f6c8:	mov	x0, x21
   1f6cc:	adrp	x24, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1f6d0:	add	x1, x24, #0x258
   1f6d4:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1f6d8:	ldr	x1, [x19]
   1f6dc:	mov	x23, x0
   1f6e0:	ldr	x2, [x19, #16]
   1f6e4:	adrp	x22, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1f6e8:	lsl	x2, x2, #4
   1f6ec:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1f6f0:	ldp	x0, x1, [x19]
   1f6f4:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1f6f8:	stp	x23, x21, [x19]
   1f6fc:	add	x0, x22, #0xcb0
   1f700:	add	x0, x0, #0x800, lsl #12
   1f704:	ldr	x4, [x0, #1024]
   1f708:	add	x4, x4, #0x64
   1f70c:	cmp	x4, x21, lsr #4
   1f710:	b.hi	1f85c <OnPrint@@Base+0x15ac>  // b.pmore
   1f714:	ldr	x20, [x20, #4000]
   1f718:	add	x22, x22, #0xcb0
   1f71c:	add	x23, sp, #0x70
   1f720:	mov	w21, #0x0                   	// #0
   1f724:	sxtw	x0, w21
   1f728:	ldr	x5, [x22, x0, lsl #3]
   1f72c:	mov	x25, #0x1                   	// #1
   1f730:	ands	x27, x5, #0xfffffffffffffffe
   1f734:	add	x26, x24, #0x258
   1f738:	b.eq	1f780 <OnPrint@@Base+0x14d0>  // b.none
   1f73c:	ldp	x4, x3, [x19, #8]
   1f740:	ldr	w0, [x27, #8]
   1f744:	str	w0, [sp, #112]
   1f748:	str	x27, [sp, #120]
   1f74c:	lsr	x4, x4, #4
   1f750:	cmp	x3, x4
   1f754:	b.hi	1f8c4 <OnPrint@@Base+0x1614>  // b.pmore
   1f758:	add	x28, x3, #0x1
   1f75c:	b.eq	1f7bc <OnPrint@@Base+0x150c>  // b.none
   1f760:	ldr	x4, [x19]
   1f764:	str	x28, [x19, #16]
   1f768:	add	x0, x4, x3, lsl #4
   1f76c:	mov	x1, x23
   1f770:	mov	x2, #0x10                  	// #16
   1f774:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1f778:	ldr	x27, [x27]
   1f77c:	cbnz	x27, 1f73c <OnPrint@@Base+0x148c>
   1f780:	add	w21, w21, #0x1
   1f784:	cmp	w21, #0x100, lsl #12
   1f788:	b.ne	1f724 <OnPrint@@Base+0x1474>  // b.any
   1f78c:	ldr	x0, [x19]
   1f790:	adrp	x2, 1f000 <OnPrint@@Base+0xd50>
   1f794:	ldr	x1, [x19, #16]
   1f798:	add	x2, x2, #0x3e8
   1f79c:	bl	1f9f0 <OnPrint@@Base+0x1740>
   1f7a0:	ldp	x21, x22, [sp, #16]
   1f7a4:	ldp	x23, x24, [sp, #32]
   1f7a8:	ldp	x25, x26, [sp, #48]
   1f7ac:	ldp	x27, x28, [sp, #64]
   1f7b0:	ldr	x30, [sp, #80]
   1f7b4:	ldp	x19, x20, [sp], #128
   1f7b8:	ret
   1f7bc:	tst	x28, x3
   1f7c0:	b.eq	1f7f8 <OnPrint@@Base+0x1548>  // b.none
   1f7c4:	clz	x0, x28
   1f7c8:	mov	w1, #0x3f                  	// #63
   1f7cc:	sub	w0, w1, w0
   1f7d0:	add	w4, w0, #0x1
   1f7d4:	lsl	x4, x25, x4
   1f7d8:	cmp	x28, x4
   1f7dc:	b.cs	1f928 <OnPrint@@Base+0x1678>  // b.hs, b.nlast
   1f7e0:	lsl	x0, x25, x0
   1f7e4:	cmp	x28, x0
   1f7e8:	b.ls	1f944 <OnPrint@@Base+0x1694>  // b.plast
   1f7ec:	cmp	x3, x4
   1f7f0:	b.hi	1f8e8 <OnPrint@@Base+0x1638>  // b.pmore
   1f7f4:	mov	x28, x4
   1f7f8:	ldr	x0, [x20]
   1f7fc:	lsl	x28, x28, #4
   1f800:	cbz	x0, 1f900 <OnPrint@@Base+0x1650>
   1f804:	sub	x1, x0, #0x1
   1f808:	tst	x0, x1
   1f80c:	b.ne	1f90c <OnPrint@@Base+0x165c>  // b.any
   1f810:	add	x28, x28, x1
   1f814:	neg	x0, x0
   1f818:	and	x28, x28, x0
   1f81c:	mov	x1, x26
   1f820:	mov	x0, x28
   1f824:	mov	w2, #0x0                   	// #0
   1f828:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1f82c:	str	x0, [sp, #104]
   1f830:	ldr	x1, [x19]
   1f834:	ldr	x2, [x19, #16]
   1f838:	lsl	x2, x2, #4
   1f83c:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1f840:	ldp	x0, x1, [x19]
   1f844:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1f848:	ldr	x3, [x19, #16]
   1f84c:	ldr	x4, [sp, #104]
   1f850:	stp	x4, x28, [x19]
   1f854:	add	x28, x3, #0x1
   1f858:	b	1f764 <OnPrint@@Base+0x14b4>
   1f85c:	ldr	x3, [x19, #16]
   1f860:	cmp	x4, x3
   1f864:	b.cc	1f8e8 <OnPrint@@Base+0x1638>  // b.lo, b.ul, b.last
   1f868:	ldr	x23, [x20, #4000]
   1f86c:	lsl	x21, x4, #4
   1f870:	ldr	x0, [x23]
   1f874:	cbz	x0, 1f91c <OnPrint@@Base+0x166c>
   1f878:	sub	x1, x0, #0x1
   1f87c:	tst	x1, x0
   1f880:	b.ne	1f90c <OnPrint@@Base+0x165c>  // b.any
   1f884:	add	x21, x21, x1
   1f888:	neg	x0, x0
   1f88c:	and	x21, x21, x0
   1f890:	add	x1, x24, #0x258
   1f894:	mov	w2, #0x0                   	// #0
   1f898:	mov	x0, x21
   1f89c:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1f8a0:	mov	x23, x0
   1f8a4:	ldr	x1, [x19]
   1f8a8:	ldr	x2, [x19, #16]
   1f8ac:	lsl	x2, x2, #4
   1f8b0:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1f8b4:	ldp	x0, x1, [x19]
   1f8b8:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   1f8bc:	stp	x23, x21, [x19]
   1f8c0:	b	1f714 <OnPrint@@Base+0x1464>
   1f8c4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1f8c8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1f8cc:	add	x2, x2, #0x1b8
   1f8d0:	add	x0, x0, #0xf8
   1f8d4:	mov	w1, #0x1be                 	// #446
   1f8d8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f8dc:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1f8e0:	str	x0, [x21]
   1f8e4:	b	1f6ac <OnPrint@@Base+0x13fc>
   1f8e8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1f8ec:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1f8f0:	add	x2, x2, #0x220
   1f8f4:	add	x0, x0, #0xf8
   1f8f8:	mov	w1, #0x1fd                 	// #509
   1f8fc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f900:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1f904:	str	x0, [x20]
   1f908:	b	1f804 <OnPrint@@Base+0x1554>
   1f90c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1f910:	add	x0, x0, #0x240
   1f914:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   1f918:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   1f91c:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   1f920:	str	x0, [x23]
   1f924:	b	1f878 <OnPrint@@Base+0x15c8>
   1f928:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1f92c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1f930:	mov	x3, x28
   1f934:	add	x2, x2, #0x1d8
   1f938:	add	x0, x0, #0xf8
   1f93c:	mov	w1, #0x17b                 	// #379
   1f940:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f944:	mov	x4, x0
   1f948:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1f94c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   1f950:	mov	x3, x28
   1f954:	add	x2, x2, #0x200
   1f958:	add	x0, x0, #0xf8
   1f95c:	mov	w1, #0x17c                 	// #380
   1f960:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1f964:	nop
   1f968:	stp	x19, x20, [sp, #-32]!
   1f96c:	adrp	x19, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1f970:	add	x19, x19, #0xcb0
   1f974:	add	x20, x19, #0x800, lsl #12
   1f978:	str	x30, [sp, #16]
   1f97c:	nop
   1f980:	mov	x0, x19
   1f984:	add	x19, x19, #0x8
   1f988:	bl	1fc50 <OnPrint@@Base+0x19a0>
   1f98c:	cmp	x19, x20
   1f990:	b.ne	1f980 <OnPrint@@Base+0x16d0>  // b.any
   1f994:	ldr	x30, [sp, #16]
   1f998:	ldp	x19, x20, [sp], #32
   1f99c:	ret
   1f9a0:	str	x30, [sp, #-16]!
   1f9a4:	mov	x2, x1
   1f9a8:	mov	x3, #0x0                   	// #0
   1f9ac:	mov	x1, x0
   1f9b0:	adrp	x0, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1f9b4:	add	x0, x0, #0xcb0
   1f9b8:	bl	1fcb8 <OnPrint@@Base+0x1a08>
   1f9bc:	cbz	x0, 1f9cc <OnPrint@@Base+0x171c>
   1f9c0:	ldr	w0, [x0, #8]
   1f9c4:	ldr	x30, [sp], #16
   1f9c8:	ret
   1f9cc:	mov	w0, #0x0                   	// #0
   1f9d0:	ldr	x30, [sp], #16
   1f9d4:	ret
   1f9d8:	mov	x2, x1
   1f9dc:	mov	x3, #0x0                   	// #0
   1f9e0:	mov	x1, x0
   1f9e4:	adrp	x0, 1b6000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1f9e8:	add	x0, x0, #0xcb0
   1f9ec:	b	1fcb8 <OnPrint@@Base+0x1a08>
   1f9f0:	cmp	x1, #0x1
   1f9f4:	b.ls	1fbc0 <OnPrint@@Base+0x1910>  // b.plast
   1f9f8:	stp	x19, x20, [sp, #-112]!
   1f9fc:	mov	x20, x0
   1fa00:	stp	x23, x24, [sp, #32]
   1fa04:	mov	x23, x2
   1fa08:	stp	x27, x28, [sp, #64]
   1fa0c:	mov	x27, x1
   1fa10:	stp	x21, x22, [sp, #16]
   1fa14:	mov	x22, #0x1                   	// #1
   1fa18:	stp	x25, x26, [sp, #48]
   1fa1c:	str	x30, [sp, #80]
   1fa20:	mov	x19, x22
   1fa24:	nop
   1fa28:	sub	x0, x19, #0x1
   1fa2c:	mov	x21, x19
   1fa30:	lsr	x19, x0, #1
   1fa34:	lsl	x21, x21, #4
   1fa38:	add	x25, x20, x21
   1fa3c:	lsl	x26, x19, #4
   1fa40:	mov	x1, x25
   1fa44:	add	x24, x20, x26
   1fa48:	mov	x0, x24
   1fa4c:	blr	x23
   1fa50:	tst	w0, #0xff
   1fa54:	b.eq	1fa74 <OnPrint@@Base+0x17c4>  // b.none
   1fa58:	ldp	x0, x1, [x24]
   1fa5c:	ldr	w3, [x20, x21]
   1fa60:	ldr	x2, [x25, #8]
   1fa64:	stp	x0, x1, [x25]
   1fa68:	str	w3, [x20, x26]
   1fa6c:	str	x2, [x24, #8]
   1fa70:	cbnz	x19, 1fa28 <OnPrint@@Base+0x1778>
   1fa74:	add	x0, x22, #0x1
   1fa78:	cmp	x27, x0
   1fa7c:	b.eq	1fa88 <OnPrint@@Base+0x17d8>  // b.none
   1fa80:	mov	x22, x0
   1fa84:	b	1fa20 <OnPrint@@Base+0x1770>
   1fa88:	add	x0, x20, x27, lsl #4
   1fa8c:	str	x0, [sp, #104]
   1fa90:	ldr	x4, [sp, #104]
   1fa94:	mov	x21, #0x0                   	// #0
   1fa98:	ldr	w1, [x20]
   1fa9c:	lsl	x19, x21, #1
   1faa0:	ldr	x0, [x20, #8]
   1faa4:	add	x26, x19, #0x1
   1faa8:	ldp	x2, x3, [x4, #-16]
   1faac:	stp	x2, x3, [x20]
   1fab0:	add	x28, x21, #0x1
   1fab4:	stur	w1, [x4, #-16]
   1fab8:	add	x19, x19, #0x2
   1fabc:	stur	x0, [x4, #-8]
   1fac0:	cmp	x26, x22
   1fac4:	b.cs	1fb3c <OnPrint@@Base+0x188c>  // b.hs, b.nlast
   1fac8:	lsl	x24, x26, #4
   1facc:	lsl	x25, x21, #4
   1fad0:	add	x2, x20, x24
   1fad4:	add	x27, x20, x25
   1fad8:	mov	x1, x2
   1fadc:	mov	x0, x27
   1fae0:	str	x2, [sp, #96]
   1fae4:	blr	x23
   1fae8:	tst	w0, #0xff
   1faec:	b.eq	1fb3c <OnPrint@@Base+0x188c>  // b.none
   1faf0:	cmp	x19, x22
   1faf4:	ldr	x2, [sp, #96]
   1faf8:	b.cc	1fbc4 <OnPrint@@Base+0x1914>  // b.lo, b.ul, b.last
   1fafc:	cmp	x26, x21
   1fb00:	b.eq	1fb90 <OnPrint@@Base+0x18e0>  // b.none
   1fb04:	ldp	x0, x1, [x2]
   1fb08:	mov	x19, x26
   1fb0c:	ldr	w5, [x27]
   1fb10:	ldr	x4, [x27, #8]
   1fb14:	stp	x0, x1, [x27]
   1fb18:	str	w5, [x20, x24]
   1fb1c:	str	x4, [x2, #8]
   1fb20:	mov	x21, x19
   1fb24:	add	x28, x21, #0x1
   1fb28:	lsl	x19, x21, #1
   1fb2c:	add	x26, x19, #0x1
   1fb30:	add	x19, x19, #0x2
   1fb34:	cmp	x26, x22
   1fb38:	b.cc	1fac8 <OnPrint@@Base+0x1818>  // b.lo, b.ul, b.last
   1fb3c:	cmp	x19, x22
   1fb40:	b.cs	1fb90 <OnPrint@@Base+0x18e0>  // b.hs, b.nlast
   1fb44:	lsl	x25, x21, #4
   1fb48:	add	x1, x20, x28, lsl #5
   1fb4c:	add	x0, x20, x25
   1fb50:	blr	x23
   1fb54:	tst	w0, #0xff
   1fb58:	b.eq	1fb90 <OnPrint@@Base+0x18e0>  // b.none
   1fb5c:	cmp	x19, x21
   1fb60:	b.eq	1fb90 <OnPrint@@Base+0x18e0>  // b.none
   1fb64:	lsl	x0, x19, #4
   1fb68:	add	x4, x20, x25
   1fb6c:	add	x1, x20, x0
   1fb70:	ldr	w6, [x20, x25]
   1fb74:	cmp	x19, x22
   1fb78:	ldr	x5, [x4, #8]
   1fb7c:	ldp	x2, x3, [x1]
   1fb80:	stp	x2, x3, [x4]
   1fb84:	str	w6, [x20, x0]
   1fb88:	str	x5, [x1, #8]
   1fb8c:	b.cc	1fb20 <OnPrint@@Base+0x1870>  // b.lo, b.ul, b.last
   1fb90:	ldr	x0, [sp, #104]
   1fb94:	subs	x22, x22, #0x1
   1fb98:	sub	x0, x0, #0x10
   1fb9c:	str	x0, [sp, #104]
   1fba0:	b.ne	1fa90 <OnPrint@@Base+0x17e0>  // b.any
   1fba4:	ldp	x21, x22, [sp, #16]
   1fba8:	ldp	x23, x24, [sp, #32]
   1fbac:	ldp	x25, x26, [sp, #48]
   1fbb0:	ldp	x27, x28, [sp, #64]
   1fbb4:	ldr	x30, [sp, #80]
   1fbb8:	ldp	x19, x20, [sp], #112
   1fbbc:	ret
   1fbc0:	ret
   1fbc4:	add	x1, x20, x28, lsl #5
   1fbc8:	mov	x0, x2
   1fbcc:	blr	x23
   1fbd0:	tst	w0, #0xff
   1fbd4:	csel	x19, x19, x26, ne  // ne = any
   1fbd8:	b	1fb5c <OnPrint@@Base+0x18ac>
   1fbdc:	nop
   1fbe0:	cbz	x0, 1fc44 <OnPrint@@Base+0x1994>
   1fbe4:	and	w7, w3, #0xfff00000
   1fbe8:	ldr	w3, [x0, #12]
   1fbec:	and	w3, w3, #0xfff00000
   1fbf0:	cmp	w7, w3
   1fbf4:	b.ne	1fc38 <OnPrint@@Base+0x1988>  // b.any
   1fbf8:	ldr	x3, [x0, #16]
   1fbfc:	cmp	x2, x3
   1fc00:	b.ne	1fc38 <OnPrint@@Base+0x1988>  // b.any
   1fc04:	ldr	w6, [x0, #16]
   1fc08:	cbz	x6, 1fc40 <OnPrint@@Base+0x1990>
   1fc0c:	add	x8, x0, #0x18
   1fc10:	mov	x3, #0x0                   	// #0
   1fc14:	b	1fc20 <OnPrint@@Base+0x1970>
   1fc18:	cmp	x3, x6
   1fc1c:	b.eq	1fc40 <OnPrint@@Base+0x1990>  // b.none
   1fc20:	ldr	x5, [x8, x3, lsl #3]
   1fc24:	ldr	x4, [x1, x3, lsl #3]
   1fc28:	add	x3, x3, #0x1
   1fc2c:	cmp	x5, x4
   1fc30:	b.eq	1fc18 <OnPrint@@Base+0x1968>  // b.none
   1fc34:	nop
   1fc38:	ldr	x0, [x0]
   1fc3c:	cbnz	x0, 1fbe8 <OnPrint@@Base+0x1938>
   1fc40:	ret
   1fc44:	mov	x0, #0x0                   	// #0
   1fc48:	ret
   1fc4c:	nop
   1fc50:	stp	x19, x20, [sp, #-32]!
   1fc54:	mov	x20, x0
   1fc58:	mov	w19, #0x0                   	// #0
   1fc5c:	str	x30, [sp, #16]
   1fc60:	ldr	x0, [x20]
   1fc64:	orr	x1, x0, #0x1
   1fc68:	tbnz	w0, #0, 1fc8c <OnPrint@@Base+0x19dc>
   1fc6c:	ldxr	x2, [x20]
   1fc70:	cmp	x2, x0
   1fc74:	b.ne	1fc80 <OnPrint@@Base+0x19d0>  // b.any
   1fc78:	stlxr	w3, x1, [x20]
   1fc7c:	cbnz	w3, 1fc6c <OnPrint@@Base+0x19bc>
   1fc80:	dmb	ish
   1fc84:	cmp	x0, x2
   1fc88:	b.eq	1fca8 <OnPrint@@Base+0x19f8>  // b.none
   1fc8c:	cmp	w19, #0x9
   1fc90:	b.gt	1fc9c <OnPrint@@Base+0x19ec>
   1fc94:	add	w19, w19, #0x1
   1fc98:	b	1fc60 <OnPrint@@Base+0x19b0>
   1fc9c:	add	w19, w19, #0x1
   1fca0:	bl	199e0 <__sanitizer_set_report_fd@@Base+0x2730>
   1fca4:	b	1fc60 <OnPrint@@Base+0x19b0>
   1fca8:	ldr	x30, [sp, #16]
   1fcac:	ldp	x19, x20, [sp], #32
   1fcb0:	ret
   1fcb4:	nop
   1fcb8:	stp	x19, x20, [sp, #-160]!
   1fcbc:	mov	x20, x1
   1fcc0:	stp	x21, x22, [sp, #16]
   1fcc4:	mov	x22, x2
   1fcc8:	stp	x23, x24, [sp, #32]
   1fccc:	mov	x24, x0
   1fcd0:	mov	x23, x3
   1fcd4:	stp	x25, x26, [sp, #48]
   1fcd8:	mov	w25, w2
   1fcdc:	str	x30, [sp, #80]
   1fce0:	cbz	x3, 1fce8 <OnPrint@@Base+0x1a38>
   1fce4:	strb	wzr, [x3]
   1fce8:	cmp	w25, #0x0
   1fcec:	mov	x0, #0x0                   	// #0
   1fcf0:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   1fcf4:	b.ne	1fd10 <OnPrint@@Base+0x1a60>  // b.any
   1fcf8:	ldp	x21, x22, [sp, #16]
   1fcfc:	ldp	x23, x24, [sp, #32]
   1fd00:	ldp	x25, x26, [sp, #48]
   1fd04:	ldr	x30, [sp, #80]
   1fd08:	ldp	x19, x20, [sp], #160
   1fd0c:	ret
   1fd10:	mov	w4, #0xb28c                	// #45708
   1fd14:	mov	w19, #0xe995                	// #59797
   1fd18:	movk	w4, #0x9747, lsl #16
   1fd1c:	stp	x27, x28, [sp, #64]
   1fd20:	eor	w5, w4, w25, lsl #3
   1fd24:	mov	w27, w25
   1fd28:	mov	x1, #0x0                   	// #0
   1fd2c:	movk	w19, #0x5bd1, lsl #16
   1fd30:	ldr	x4, [x20, x1, lsl #3]
   1fd34:	mul	w5, w5, w19
   1fd38:	add	x1, x1, #0x1
   1fd3c:	cmp	x27, x1
   1fd40:	mul	w4, w19, w4
   1fd44:	eor	w4, w4, w4, lsr #24
   1fd48:	mul	w4, w4, w19
   1fd4c:	eor	w5, w4, w5
   1fd50:	b.hi	1fd30 <OnPrint@@Base+0x1a80>  // b.pmore
   1fd54:	eor	w4, w5, w5, lsr #13
   1fd58:	mul	w19, w4, w19
   1fd5c:	eor	w19, w19, w19, lsr #15
   1fd60:	and	x26, x19, #0xfffff
   1fd64:	add	x21, x24, x26, lsl #3
   1fd68:	ldr	x28, [x24, x26, lsl #3]
   1fd6c:	and	x28, x28, #0xfffffffffffffffe
   1fd70:	bfxil	x22, x25, #0, #32
   1fd74:	mov	x2, x22
   1fd78:	mov	x0, x28
   1fd7c:	mov	w3, w19
   1fd80:	mov	x1, x20
   1fd84:	bl	1fbe0 <OnPrint@@Base+0x1930>
   1fd88:	cbz	x0, 1fda8 <OnPrint@@Base+0x1af8>
   1fd8c:	ldp	x21, x22, [sp, #16]
   1fd90:	ldp	x23, x24, [sp, #32]
   1fd94:	ldp	x25, x26, [sp, #48]
   1fd98:	ldp	x27, x28, [sp, #64]
   1fd9c:	ldr	x30, [sp, #80]
   1fda0:	ldp	x19, x20, [sp], #160
   1fda4:	ret
   1fda8:	mov	x0, x21
   1fdac:	bl	1fc50 <OnPrint@@Base+0x19a0>
   1fdb0:	str	x0, [sp, #104]
   1fdb4:	mov	x21, x0
   1fdb8:	cmp	x28, x0
   1fdbc:	b.eq	1fde4 <OnPrint@@Base+0x1b34>  // b.none
   1fdc0:	mov	w3, w19
   1fdc4:	mov	x1, x20
   1fdc8:	mov	x2, x22
   1fdcc:	bl	1fbe0 <OnPrint@@Base+0x1930>
   1fdd0:	cbz	x0, 1fde4 <OnPrint@@Base+0x1b34>
   1fdd4:	dmb	ish
   1fdd8:	str	x21, [x24, x26, lsl #3]
   1fddc:	ldp	x27, x28, [sp, #64]
   1fde0:	b	1fcf8 <OnPrint@@Base+0x1a48>
   1fde4:	lsr	x6, x26, #12
   1fde8:	add	x0, x6, #0x200, lsl #12
   1fdec:	add	x0, x24, x0, lsl #2
   1fdf0:	ldxr	w3, [x0]
   1fdf4:	add	w1, w3, #0x1
   1fdf8:	stlxr	w2, w1, [x0]
   1fdfc:	cbnz	w2, 1fdf0 <OnPrint@@Base+0x1b40>
   1fe00:	add	x7, x24, #0x800, lsl #12
   1fe04:	mov	w0, #0x7fffff              	// #8388607
   1fe08:	add	w3, w3, #0x1
   1fe0c:	dmb	ish
   1fe10:	cmp	w3, w0
   1fe14:	ldr	x0, [x7, #1024]
   1fe18:	add	x0, x0, #0x1
   1fe1c:	str	x0, [x7, #1024]
   1fe20:	b.hi	1ffd4 <OnPrint@@Base+0x1d24>  // b.pmore
   1fe24:	orr	w6, w3, w6, lsl #23
   1fe28:	cbz	w6, 1fff0 <OnPrint@@Base+0x1d40>
   1fe2c:	adrp	x8, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fe30:	sub	w28, w25, #0x1
   1fe34:	add	x28, x28, #0x4
   1fe38:	ldr	x1, [x8, #3528]
   1fe3c:	lsl	x28, x28, #3
   1fe40:	add	x2, x1, #0x8
   1fe44:	ldr	x21, [x1, #8]
   1fe48:	dmb	ish
   1fe4c:	ldr	x3, [x1, #16]
   1fe50:	dmb	ish
   1fe54:	cbz	x21, 1fedc <OnPrint@@Base+0x1c2c>
   1fe58:	add	x0, x28, x21
   1fe5c:	cmp	x0, x3
   1fe60:	b.hi	1fedc <OnPrint@@Base+0x1c2c>  // b.pmore
   1fe64:	ldxr	x3, [x2]
   1fe68:	cmp	x3, x21
   1fe6c:	b.ne	1fe78 <OnPrint@@Base+0x1bc8>  // b.any
   1fe70:	stlxr	w4, x0, [x2]
   1fe74:	cbnz	w4, 1fe64 <OnPrint@@Base+0x1bb4>
   1fe78:	dmb	ish
   1fe7c:	cmp	x3, x21
   1fe80:	b.ne	1fe44 <OnPrint@@Base+0x1b94>  // b.any
   1fe84:	ldr	x0, [x7, #1032]
   1fe88:	and	w19, w19, #0xfff00000
   1fe8c:	lsr	x22, x22, #32
   1fe90:	lsl	x2, x27, #3
   1fe94:	add	x0, x0, x28
   1fe98:	str	x0, [x7, #1032]
   1fe9c:	str	w6, [x21, #8]
   1fea0:	mov	x1, x20
   1fea4:	str	w19, [x21, #12]
   1fea8:	add	x0, x21, #0x18
   1feac:	stp	w25, w22, [x21, #16]
   1feb0:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   1feb4:	ldr	x0, [sp, #104]
   1feb8:	str	x0, [x21]
   1febc:	dmb	ish
   1fec0:	str	x21, [x24, x26, lsl #3]
   1fec4:	cbz	x23, 1fed0 <OnPrint@@Base+0x1c20>
   1fec8:	mov	w0, #0x1                   	// #1
   1fecc:	strb	w0, [x23]
   1fed0:	mov	x0, x21
   1fed4:	ldp	x27, x28, [sp, #64]
   1fed8:	b	1fcf8 <OnPrint@@Base+0x1a48>
   1fedc:	ldr	x0, [x8, #3528]
   1fee0:	mov	w2, #0x1                   	// #1
   1fee4:	ldxrb	w1, [x0]
   1fee8:	stxrb	w3, w2, [x0]
   1feec:	cbnz	w3, 1fee4 <OnPrint@@Base+0x1c34>
   1fef0:	dmb	ish
   1fef4:	tst	w1, #0xff
   1fef8:	b.eq	1ff14 <OnPrint@@Base+0x1c64>  // b.none
   1fefc:	str	w6, [sp, #112]
   1ff00:	str	x7, [sp, #120]
   1ff04:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   1ff08:	ldr	w6, [sp, #112]
   1ff0c:	adrp	x8, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ff10:	ldr	x7, [sp, #120]
   1ff14:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1ff18:	ldr	x3, [x8, #3528]
   1ff1c:	add	x1, x1, #0x820
   1ff20:	add	x5, x3, #0x8
   1ff24:	nop
   1ff28:	ldr	x21, [x3, #8]
   1ff2c:	dmb	ish
   1ff30:	ldr	x2, [x3, #16]
   1ff34:	dmb	ish
   1ff38:	cbz	x21, 1ff74 <OnPrint@@Base+0x1cc4>
   1ff3c:	add	x0, x28, x21
   1ff40:	cmp	x0, x2
   1ff44:	b.hi	1ff74 <OnPrint@@Base+0x1cc4>  // b.pmore
   1ff48:	ldxr	x2, [x5]
   1ff4c:	cmp	x2, x21
   1ff50:	b.ne	1ff5c <OnPrint@@Base+0x1cac>  // b.any
   1ff54:	stlxr	w4, x0, [x5]
   1ff58:	cbnz	w4, 1ff48 <OnPrint@@Base+0x1c98>
   1ff5c:	dmb	ish
   1ff60:	cmp	x2, x21
   1ff64:	b.ne	1ff28 <OnPrint@@Base+0x1c78>  // b.any
   1ff68:	dmb	ish
   1ff6c:	strb	wzr, [x3]
   1ff70:	b	1fe84 <OnPrint@@Base+0x1bd4>
   1ff74:	ldr	x9, [x8, #3528]
   1ff78:	cmp	x28, #0x10, lsl #12
   1ff7c:	mov	x21, #0x10000               	// #65536
   1ff80:	csel	x21, x28, x21, cs  // cs = hs, nlast
   1ff84:	mov	x0, x21
   1ff88:	mov	w2, #0x0                   	// #0
   1ff8c:	str	xzr, [x9, #8]
   1ff90:	stp	x9, x1, [sp, #112]
   1ff94:	str	w6, [sp, #132]
   1ff98:	stp	x3, x7, [sp, #136]
   1ff9c:	str	x5, [sp, #152]
   1ffa0:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   1ffa4:	dmb	ish
   1ffa8:	add	x21, x21, x0
   1ffac:	ldr	x9, [sp, #112]
   1ffb0:	str	x21, [x9, #16]
   1ffb4:	dmb	ish
   1ffb8:	str	x0, [x9, #8]
   1ffbc:	adrp	x8, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ffc0:	ldr	w6, [sp, #132]
   1ffc4:	ldr	x1, [sp, #120]
   1ffc8:	ldp	x3, x7, [sp, #136]
   1ffcc:	ldr	x5, [sp, #152]
   1ffd0:	b	1ff28 <OnPrint@@Base+0x1c78>
   1ffd4:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1ffd8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1ffdc:	add	x2, x2, #0x7f8
   1ffe0:	add	x0, x0, #0x798
   1ffe4:	mov	x4, #0x800000              	// #8388608
   1ffe8:	mov	w1, #0x77                  	// #119
   1ffec:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   1fff0:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1fff4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   1fff8:	add	x2, x2, #0x810
   1fffc:	add	x0, x0, #0x798
   20000:	mov	x4, #0x0                   	// #0
   20004:	mov	x3, #0x0                   	// #0
   20008:	mov	w1, #0x79                  	// #121
   2000c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   20010:	add	x0, x0, #0x4
   20014:	ret
   20018:	str	x30, [sp, #-16]!
   2001c:	mov	x0, x30
   20020:	ldr	x30, [sp], #16
   20024:	ret
   20028:	stp	x19, x20, [sp, #-32]!
   2002c:	cmp	x3, #0x0
   20030:	stp	x21, x30, [sp, #16]
   20034:	mov	x21, x3
   20038:	cinc	w3, w2, ne  // ne = any
   2003c:	str	w3, [x0, #8]
   20040:	cmp	w3, #0x100
   20044:	b.hi	20078 <OnPrint@@Base+0x1dc8>  // b.pmore
   20048:	mov	x19, x0
   2004c:	mov	x20, x2
   20050:	add	x0, x0, #0x10
   20054:	lsl	x2, x2, #3
   20058:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   2005c:	cbz	x21, 20068 <OnPrint@@Base+0x1db8>
   20060:	add	x20, x20, #0x2
   20064:	str	x21, [x19, x20, lsl #3]
   20068:	ldp	x21, x30, [sp, #16]
   2006c:	str	xzr, [x19, #2064]
   20070:	ldp	x19, x20, [sp], #32
   20074:	ret
   20078:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   2007c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   20080:	mov	w3, w3
   20084:	add	x2, x2, #0x830
   20088:	add	x0, x0, #0x850
   2008c:	mov	x4, #0x100                 	// #256
   20090:	mov	w1, #0x22                  	// #34
   20094:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   20098:	stp	x19, x20, [sp, #-64]!
   2009c:	mov	x19, x0
   200a0:	mov	w20, w5
   200a4:	stp	x23, x24, [sp, #32]
   200a8:	adrp	x23, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   200ac:	mov	x24, x1
   200b0:	ldr	x23, [x23, #4000]
   200b4:	stp	x21, x22, [sp, #16]
   200b8:	mov	x22, x2
   200bc:	stp	x25, x30, [sp, #48]
   200c0:	mov	x21, x3
   200c4:	mov	x25, x4
   200c8:	ldr	x0, [x23]
   200cc:	cbz	x0, 20178 <OnPrint@@Base+0x1ec8>
   200d0:	cmp	w20, #0x1
   200d4:	mov	w3, w20
   200d8:	b.ls	2018c <OnPrint@@Base+0x1edc>  // b.plast
   200dc:	mov	w1, #0x1                   	// #1
   200e0:	str	w1, [x19, #8]
   200e4:	str	x24, [x19, #16]
   200e8:	cmp	x21, #0xfff
   200ec:	b.ls	20164 <OnPrint@@Base+0x1eb4>  // b.plast
   200f0:	cmp	x22, x25
   200f4:	b.ls	20164 <OnPrint@@Base+0x1eb4>  // b.plast
   200f8:	sub	x21, x21, #0x10
   200fc:	cmp	x22, x21
   20100:	b.cs	20164 <OnPrint@@Base+0x1eb4>  // b.hs, b.nlast
   20104:	tst	x22, #0x7
   20108:	b.ne	20164 <OnPrint@@Base+0x1eb4>  // b.any
   2010c:	mov	x2, x22
   20110:	ldr	x3, [x2, #8]
   20114:	cmp	x0, x3
   20118:	b.hi	20164 <OnPrint@@Base+0x1eb4>  // b.pmore
   2011c:	cmp	x24, x3
   20120:	b.eq	20134 <OnPrint@@Base+0x1e84>  // b.none
   20124:	add	x4, x19, w1, uxtw #3
   20128:	add	w1, w1, #0x1
   2012c:	str	w1, [x19, #8]
   20130:	str	x3, [x4, #16]
   20134:	ldr	x2, [x2]
   20138:	cmp	x2, x22
   2013c:	b.ls	20164 <OnPrint@@Base+0x1eb4>  // b.plast
   20140:	cmp	x2, x21
   20144:	b.cs	20164 <OnPrint@@Base+0x1eb4>  // b.hs, b.nlast
   20148:	tst	x2, #0x7
   2014c:	b.ne	20164 <OnPrint@@Base+0x1eb4>  // b.any
   20150:	ldr	w1, [x19, #8]
   20154:	cmp	w1, w20
   20158:	b.cs	20164 <OnPrint@@Base+0x1eb4>  // b.hs, b.nlast
   2015c:	mov	x22, x2
   20160:	b	20110 <OnPrint@@Base+0x1e60>
   20164:	ldp	x21, x22, [sp, #16]
   20168:	ldp	x23, x24, [sp, #32]
   2016c:	ldp	x25, x30, [sp, #48]
   20170:	ldp	x19, x20, [sp], #64
   20174:	ret
   20178:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   2017c:	str	x0, [x23]
   20180:	cmp	w20, #0x1
   20184:	mov	w3, w20
   20188:	b.hi	200dc <OnPrint@@Base+0x1e2c>  // b.pmore
   2018c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   20190:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   20194:	add	x2, x2, #0x898
   20198:	add	x0, x0, #0x850
   2019c:	mov	x4, #0x2                   	// #2
   201a0:	mov	w1, #0x47                  	// #71
   201a4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   201a8:	ldr	w2, [x0, #8]
   201ac:	cmp	x1, w2, uxtw
   201b0:	b.cs	201dc <OnPrint@@Base+0x1f2c>  // b.hs, b.nlast
   201b4:	sub	w2, w2, w1
   201b8:	str	w2, [x0, #8]
   201bc:	cbz	w2, 201d8 <OnPrint@@Base+0x1f28>
   201c0:	add	x0, x0, #0x10
   201c4:	add	x2, x0, w2, uxtw #3
   201c8:	ldr	x4, [x0, x1, lsl #3]
   201cc:	str	x4, [x0], #8
   201d0:	cmp	x0, x2
   201d4:	b.ne	201c8 <OnPrint@@Base+0x1f18>  // b.any
   201d8:	ret
   201dc:	str	x30, [sp, #-16]!
   201e0:	mov	w4, w2
   201e4:	mov	x3, x1
   201e8:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   201ec:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   201f0:	add	x2, x2, #0x8b0
   201f4:	add	x0, x0, #0x850
   201f8:	mov	w1, #0x78                  	// #120
   201fc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   20200:	ldr	w7, [x0, #8]
   20204:	cmp	x7, #0x1
   20208:	b.ls	20254 <OnPrint@@Base+0x1fa4>  // b.plast
   2020c:	mov	x4, #0x1                   	// #1
   20210:	ldr	x5, [x0]
   20214:	mov	x0, #0x0                   	// #0
   20218:	ldr	x2, [x5, x4, lsl #3]
   2021c:	ldr	x3, [x5, x0, lsl #3]
   20220:	cmp	x2, x1
   20224:	sub	x6, x1, x2
   20228:	sub	x2, x2, x1
   2022c:	csel	x2, x2, x6, cs  // cs = hs, nlast
   20230:	sub	x6, x1, x3
   20234:	subs	x3, x3, x1
   20238:	csel	x3, x3, x6, cs  // cs = hs, nlast
   2023c:	cmp	x3, x2
   20240:	csel	x0, x0, x4, ls  // ls = plast
   20244:	add	x4, x4, #0x1
   20248:	cmp	x4, x7
   2024c:	b.ne	20218 <OnPrint@@Base+0x1f68>  // b.any
   20250:	ret
   20254:	mov	x0, #0x0                   	// #0
   20258:	ret
   2025c:	nop
   20260:	stp	x19, x20, [sp, #-176]!
   20264:	stp	x21, x22, [sp, #16]
   20268:	mov	x21, x0
   2026c:	ldr	x0, [x0]
   20270:	str	x30, [sp, #80]
   20274:	cbz	x0, 202d4 <OnPrint@@Base+0x2024>
   20278:	ldr	w0, [x21, #8]
   2027c:	cbz	w0, 202d4 <OnPrint@@Base+0x2024>
   20280:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20284:	stp	x23, x24, [sp, #32]
   20288:	ldr	x22, [x20, #4000]
   2028c:	stp	x25, x26, [sp, #48]
   20290:	stp	x27, x28, [sp, #64]
   20294:	ldr	x0, [x22]
   20298:	cbz	x0, 202f0 <OnPrint@@Base+0x2040>
   2029c:	stp	xzr, xzr, [sp, #112]
   202a0:	cmp	xzr, x0, lsl #1
   202a4:	lsl	x19, x0, #1
   202a8:	str	xzr, [sp, #128]
   202ac:	b.ne	2031c <OnPrint@@Base+0x206c>  // b.any
   202b0:	stp	xzr, xzr, [sp, #128]
   202b4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   202b8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   202bc:	add	x2, x2, #0xe0
   202c0:	add	x0, x0, #0xf8
   202c4:	mov	x4, #0x0                   	// #0
   202c8:	mov	x3, #0x0                   	// #0
   202cc:	mov	w1, #0x1b6                 	// #438
   202d0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   202d4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   202d8:	add	x0, x0, #0x8c8
   202dc:	bl	1e5c0 <OnPrint@@Base+0x310>
   202e0:	ldp	x21, x22, [sp, #16]
   202e4:	ldr	x30, [sp, #80]
   202e8:	ldp	x19, x20, [sp], #176
   202ec:	ret
   202f0:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   202f4:	str	x0, [x22]
   202f8:	stp	xzr, xzr, [sp, #112]
   202fc:	mov	x19, x0
   20300:	cmp	xzr, x0, lsl #1
   20304:	str	xzr, [sp, #128]
   20308:	lsl	x1, x0, #1
   2030c:	b.eq	202b0 <OnPrint@@Base+0x2000>  // b.none
   20310:	cbnz	x0, 206b4 <OnPrint@@Base+0x2404>
   20314:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   20318:	str	x0, [x22]
   2031c:	sub	x1, x0, #0x1
   20320:	tst	x0, x1
   20324:	b.ne	20688 <OnPrint@@Base+0x23d8>  // b.any
   20328:	add	x1, x19, x1
   2032c:	neg	x0, x0
   20330:	and	x23, x1, x0
   20334:	mov	w2, #0x0                   	// #0
   20338:	mov	x0, x23
   2033c:	adrp	x24, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   20340:	add	x1, x24, #0x258
   20344:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   20348:	ldr	x1, [sp, #112]
   2034c:	mov	x22, x0
   20350:	ldr	x2, [sp, #128]
   20354:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   20358:	ldp	x0, x1, [sp, #112]
   2035c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   20360:	stp	x22, x23, [sp, #112]
   20364:	ldr	x2, [sp, #128]
   20368:	cmp	x19, x2
   2036c:	b.ls	206ac <OnPrint@@Base+0x23fc>  // b.plast
   20370:	cmp	x19, x23
   20374:	b.hi	2056c <OnPrint@@Base+0x22bc>  // b.pmore
   20378:	add	x0, x22, x2
   2037c:	mov	w1, #0x0                   	// #0
   20380:	sub	x2, x19, x2
   20384:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   20388:	stp	x19, xzr, [sp, #128]
   2038c:	ldr	x22, [sp, #112]
   20390:	cbz	x19, 202b4 <OnPrint@@Base+0x2004>
   20394:	ldr	x23, [x20, #4000]
   20398:	strb	wzr, [x22]
   2039c:	ldr	x19, [x23]
   203a0:	cbz	x19, 20520 <OnPrint@@Base+0x2270>
   203a4:	stp	xzr, xzr, [sp, #144]
   203a8:	str	xzr, [sp, #160]
   203ac:	sub	x23, x19, #0x1
   203b0:	ands	x23, x23, x19
   203b4:	b.ne	20688 <OnPrint@@Base+0x23d8>  // b.any
   203b8:	lsl	x0, x19, #1
   203bc:	neg	x25, x19
   203c0:	sub	x0, x0, #0x1
   203c4:	add	x1, x24, #0x258
   203c8:	and	x25, x0, x25
   203cc:	mov	w2, #0x0                   	// #0
   203d0:	mov	x0, x25
   203d4:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   203d8:	ldr	x1, [sp, #144]
   203dc:	mov	x22, x0
   203e0:	ldr	x2, [sp, #160]
   203e4:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   203e8:	ldp	x0, x1, [sp, #144]
   203ec:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   203f0:	stp	x22, x25, [sp, #144]
   203f4:	ldr	x2, [sp, #160]
   203f8:	cmp	x19, x2
   203fc:	b.ls	206bc <OnPrint@@Base+0x240c>  // b.plast
   20400:	cmp	x19, x25
   20404:	b.hi	205e4 <OnPrint@@Base+0x2334>  // b.pmore
   20408:	add	x0, x22, x2
   2040c:	mov	w1, #0x0                   	// #0
   20410:	sub	x2, x19, x2
   20414:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   20418:	ldr	x22, [sp, #144]
   2041c:	stp	x19, xzr, [sp, #160]
   20420:	adrp	x26, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20424:	strb	wzr, [x22]
   20428:	ldr	x1, [x26, #4040]
   2042c:	str	xzr, [sp, #96]
   20430:	ldr	w0, [x21, #8]
   20434:	ldr	w27, [x1, #184]
   20438:	cbz	w0, 20654 <OnPrint@@Base+0x23a4>
   2043c:	adrp	x24, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   20440:	add	x28, sp, #0x70
   20444:	add	x24, x24, #0x5c8
   20448:	ldr	x0, [x21]
   2044c:	ldr	x1, [sp, #96]
   20450:	ldr	x19, [x0, x1, lsl #3]
   20454:	cbz	x19, 20654 <OnPrint@@Base+0x23a4>
   20458:	bl	24d68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
   2045c:	sub	x1, x19, #0x4
   20460:	bl	25298 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46b8>
   20464:	str	x0, [sp, #104]
   20468:	cbz	x0, 205c4 <OnPrint@@Base+0x2314>
   2046c:	ldr	x0, [sp, #128]
   20470:	adrp	x22, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   20474:	mov	x19, x23
   20478:	add	x22, x22, #0x78
   2047c:	ldr	x25, [sp, #104]
   20480:	ldr	x2, [sp, #112]
   20484:	cbz	x0, 202b4 <OnPrint@@Base+0x2004>
   20488:	ldr	x1, [x26, #4040]
   2048c:	strb	wzr, [x2]
   20490:	mov	x6, x24
   20494:	mov	w2, w19
   20498:	add	x3, x25, #0x8
   2049c:	mov	x0, x28
   204a0:	ldrb	w4, [x1, #181]
   204a4:	add	x20, x19, #0x1
   204a8:	ldr	x5, [x1, #24]
   204ac:	str	xzr, [sp, #136]
   204b0:	ldr	x1, [x1, #192]
   204b4:	bl	21f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1380>
   204b8:	ldr	x1, [sp, #112]
   204bc:	mov	x0, x22
   204c0:	bl	1e5c0 <OnPrint@@Base+0x310>
   204c4:	add	w1, w27, w23
   204c8:	sub	w0, w1, w19
   204cc:	sub	w19, w1, w20
   204d0:	cmp	w0, #0x0
   204d4:	b.le	204f0 <OnPrint@@Base+0x2240>
   204d8:	ldr	x0, [sp, #168]
   204dc:	cbnz	x0, 2050c <OnPrint@@Base+0x225c>
   204e0:	ldr	x1, [x25, #40]
   204e4:	cbz	x1, 204f0 <OnPrint@@Base+0x2240>
   204e8:	add	x0, sp, #0x90
   204ec:	bl	1e6d0 <OnPrint@@Base+0x420>
   204f0:	ldr	x25, [x25]
   204f4:	cbz	x25, 20540 <OnPrint@@Base+0x2290>
   204f8:	ldr	x0, [sp, #128]
   204fc:	mov	x19, x20
   20500:	ldr	x2, [sp, #112]
   20504:	cbnz	x0, 20488 <OnPrint@@Base+0x21d8>
   20508:	b	202b4 <OnPrint@@Base+0x2004>
   2050c:	add	x0, sp, #0x90
   20510:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   20514:	add	x1, x1, #0x948
   20518:	bl	1e6d0 <OnPrint@@Base+0x420>
   2051c:	b	204e0 <OnPrint@@Base+0x2230>
   20520:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   20524:	str	x0, [x23]
   20528:	stp	xzr, xzr, [sp, #144]
   2052c:	mov	x19, x0
   20530:	str	xzr, [sp, #160]
   20534:	cbnz	x0, 203ac <OnPrint@@Base+0x20fc>
   20538:	str	xzr, [sp, #168]
   2053c:	b	202b4 <OnPrint@@Base+0x2004>
   20540:	ldr	x0, [sp, #104]
   20544:	bl	24180 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35a0>
   20548:	ldr	x1, [sp, #96]
   2054c:	ldr	w0, [x21, #8]
   20550:	add	x1, x1, #0x1
   20554:	str	x1, [sp, #96]
   20558:	cmp	x0, x1
   2055c:	b.ls	20654 <OnPrint@@Base+0x23a4>  // b.plast
   20560:	mov	x23, x20
   20564:	mov	w27, w19
   20568:	b	20448 <OnPrint@@Base+0x2198>
   2056c:	ldr	x22, [x20, #4000]
   20570:	ldr	x0, [x22]
   20574:	cbz	x0, 2063c <OnPrint@@Base+0x238c>
   20578:	sub	x1, x0, #0x1
   2057c:	tst	x1, x0
   20580:	b.ne	20688 <OnPrint@@Base+0x23d8>  // b.any
   20584:	add	x1, x19, x1
   20588:	neg	x0, x0
   2058c:	and	x23, x1, x0
   20590:	mov	w2, #0x0                   	// #0
   20594:	add	x1, x24, #0x258
   20598:	mov	x0, x23
   2059c:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   205a0:	mov	x22, x0
   205a4:	ldr	x1, [sp, #112]
   205a8:	ldr	x2, [sp, #128]
   205ac:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   205b0:	ldp	x0, x1, [sp, #112]
   205b4:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   205b8:	stp	x22, x23, [sp, #112]
   205bc:	ldr	x2, [sp, #128]
   205c0:	b	20378 <OnPrint@@Base+0x20c8>
   205c4:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   205c8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   205cc:	add	x2, x2, #0x8e0
   205d0:	add	x0, x0, #0x8f8
   205d4:	mov	x4, #0x0                   	// #0
   205d8:	mov	x3, #0x0                   	// #0
   205dc:	mov	w1, #0x22                  	// #34
   205e0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   205e4:	ldr	x20, [x20, #4000]
   205e8:	ldr	x0, [x20]
   205ec:	cbz	x0, 20648 <OnPrint@@Base+0x2398>
   205f0:	sub	x1, x0, #0x1
   205f4:	tst	x1, x0
   205f8:	b.ne	20688 <OnPrint@@Base+0x23d8>  // b.any
   205fc:	add	x1, x19, x1
   20600:	neg	x0, x0
   20604:	and	x20, x1, x0
   20608:	mov	w2, #0x0                   	// #0
   2060c:	add	x1, x24, #0x258
   20610:	mov	x0, x20
   20614:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   20618:	mov	x22, x0
   2061c:	ldr	x1, [sp, #144]
   20620:	ldr	x2, [sp, #160]
   20624:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   20628:	ldp	x0, x1, [sp, #144]
   2062c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   20630:	stp	x22, x20, [sp, #144]
   20634:	ldr	x2, [sp, #160]
   20638:	b	20408 <OnPrint@@Base+0x2158>
   2063c:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   20640:	str	x0, [x22]
   20644:	b	20578 <OnPrint@@Base+0x22c8>
   20648:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   2064c:	str	x0, [x20]
   20650:	b	205f0 <OnPrint@@Base+0x2340>
   20654:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   20658:	add	x0, x0, #0xc70
   2065c:	bl	1e5c0 <OnPrint@@Base+0x310>
   20660:	ldr	x0, [sp, #168]
   20664:	cbnz	x0, 20698 <OnPrint@@Base+0x23e8>
   20668:	ldp	x0, x1, [sp, #144]
   2066c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   20670:	ldp	x0, x1, [sp, #112]
   20674:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   20678:	ldp	x23, x24, [sp, #32]
   2067c:	ldp	x25, x26, [sp, #48]
   20680:	ldp	x27, x28, [sp, #64]
   20684:	b	202e0 <OnPrint@@Base+0x2030>
   20688:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   2068c:	add	x0, x0, #0x240
   20690:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   20694:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   20698:	ldr	x1, [sp, #144]
   2069c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   206a0:	add	x0, x0, #0x950
   206a4:	bl	1e5c0 <OnPrint@@Base+0x310>
   206a8:	b	20668 <OnPrint@@Base+0x23b8>
   206ac:	stp	x19, xzr, [sp, #128]
   206b0:	b	20394 <OnPrint@@Base+0x20e4>
   206b4:	mov	x19, x1
   206b8:	b	2031c <OnPrint@@Base+0x206c>
   206bc:	stp	x19, xzr, [sp, #160]
   206c0:	b	20420 <OnPrint@@Base+0x2170>
   206c4:	nop
   206c8:	mov	w8, w1
   206cc:	and	w7, w7, #0xff
   206d0:	mov	x1, x2
   206d4:	mov	x9, x0
   206d8:	mov	x2, x3
   206dc:	mov	x3, x5
   206e0:	cbnz	w8, 206f0 <OnPrint@@Base+0x2440>
   206e4:	str	wzr, [x0, #8]
   206e8:	str	xzr, [x0, #2064]
   206ec:	ret
   206f0:	str	x2, [x0, #2064]
   206f4:	cmp	w8, #0x1
   206f8:	b.eq	2071c <OnPrint@@Base+0x246c>  // b.none
   206fc:	cbnz	w7, 20710 <OnPrint@@Base+0x2460>
   20700:	cbz	x4, 20728 <OnPrint@@Base+0x2478>
   20704:	mov	w3, w8
   20708:	mov	x2, x4
   2070c:	b	28438 <__sanitizer_set_death_callback@@Base+0x1630>
   20710:	mov	w5, w8
   20714:	mov	x4, x6
   20718:	b	20098 <OnPrint@@Base+0x1de8>
   2071c:	str	w8, [x9, #8]
   20720:	str	x1, [x9, #16]
   20724:	ret
   20728:	mov	w2, w8
   2072c:	b	28398 <__sanitizer_set_death_callback@@Base+0x1590>

0000000000020730 <__sanitizer_symbolize_pc@@Base>:
   20730:	cbnz	x3, 20738 <__sanitizer_symbolize_pc@@Base+0x8>
   20734:	ret
   20738:	stp	x19, x20, [sp, #-112]!
   2073c:	mov	x19, x2
   20740:	mov	x20, x3
   20744:	stp	x21, x22, [sp, #16]
   20748:	mov	x21, x0
   2074c:	stp	x23, x24, [sp, #32]
   20750:	mov	x23, x1
   20754:	str	x30, [sp, #72]
   20758:	bl	24d68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
   2075c:	sub	x1, x21, #0x4
   20760:	bl	25298 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46b8>
   20764:	mov	x21, x0
   20768:	cbz	x0, 20994 <__sanitizer_symbolize_pc@@Base+0x264>
   2076c:	stp	x25, x26, [sp, #48]
   20770:	adrp	x26, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20774:	ldr	x24, [x26, #4000]
   20778:	ldr	x22, [x24]
   2077c:	str	x27, [sp, #64]
   20780:	cbz	x22, 208d0 <__sanitizer_symbolize_pc@@Base+0x1a0>
   20784:	stp	xzr, xzr, [sp, #80]
   20788:	str	xzr, [sp, #96]
   2078c:	sub	x0, x22, #0x1
   20790:	tst	x0, x22
   20794:	b.ne	20984 <__sanitizer_symbolize_pc@@Base+0x254>  // b.any
   20798:	lsl	x0, x22, #1
   2079c:	neg	x25, x22
   207a0:	sub	x0, x0, #0x1
   207a4:	mov	w2, #0x0                   	// #0
   207a8:	and	x25, x0, x25
   207ac:	adrp	x27, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   207b0:	mov	x0, x25
   207b4:	add	x1, x27, #0x258
   207b8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   207bc:	mov	x24, x0
   207c0:	ldr	x1, [sp, #80]
   207c4:	ldr	x2, [sp, #96]
   207c8:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   207cc:	ldp	x0, x1, [sp, #80]
   207d0:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   207d4:	stp	x24, x25, [sp, #80]
   207d8:	ldr	x2, [sp, #96]
   207dc:	cmp	x22, x2
   207e0:	b.ls	209d4 <__sanitizer_symbolize_pc@@Base+0x2a4>  // b.plast
   207e4:	cmp	x22, x25
   207e8:	b.hi	20920 <__sanitizer_symbolize_pc@@Base+0x1f0>  // b.pmore
   207ec:	add	x0, x24, x2
   207f0:	mov	w1, #0x0                   	// #0
   207f4:	sub	x2, x22, x2
   207f8:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   207fc:	ldr	x24, [sp, #80]
   20800:	stp	x22, xzr, [sp, #96]
   20804:	sub	x20, x20, #0x1
   20808:	strb	wzr, [x24]
   2080c:	add	x20, x19, x20
   20810:	cmp	x19, x20
   20814:	b.cs	208f0 <__sanitizer_symbolize_pc@@Base+0x1c0>  // b.hs, b.nlast
   20818:	adrp	x25, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2081c:	adrp	x26, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   20820:	add	x27, sp, #0x50
   20824:	add	x26, x26, #0x5c8
   20828:	ldr	x25, [x25, #4040]
   2082c:	mov	w22, #0x0                   	// #0
   20830:	b	208a4 <__sanitizer_symbolize_pc@@Base+0x174>
   20834:	strb	wzr, [x1]
   20838:	mov	x0, x27
   2083c:	mov	x6, x26
   20840:	add	x3, x21, #0x8
   20844:	ldrb	w4, [x25, #181]
   20848:	mov	w2, w22
   2084c:	ldr	x5, [x25, #24]
   20850:	mov	x1, x23
   20854:	str	xzr, [sp, #104]
   20858:	bl	21f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1380>
   2085c:	ldr	x0, [sp, #104]
   20860:	cbz	x0, 20890 <__sanitizer_symbolize_pc@@Base+0x160>
   20864:	ldr	x1, [sp, #80]
   20868:	sub	x24, x20, x19
   2086c:	sub	x24, x24, #0x1
   20870:	mov	x0, x19
   20874:	mov	x2, x24
   20878:	bl	18dd0 <__sanitizer_set_report_fd@@Base+0x1b20>
   2087c:	ldr	x2, [sp, #104]
   20880:	cmp	x2, x24
   20884:	csel	x2, x2, x24, ls  // ls = plast
   20888:	add	x19, x19, x2
   2088c:	strb	wzr, [x19], #1
   20890:	ldr	x21, [x21]
   20894:	add	w22, w22, #0x1
   20898:	cmp	x21, #0x0
   2089c:	ccmp	x19, x20, #0x2, ne  // ne = any
   208a0:	b.cs	208f0 <__sanitizer_symbolize_pc@@Base+0x1c0>  // b.hs, b.nlast
   208a4:	ldr	x0, [sp, #96]
   208a8:	ldr	x1, [sp, #80]
   208ac:	cbnz	x0, 20834 <__sanitizer_symbolize_pc@@Base+0x104>
   208b0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   208b4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   208b8:	add	x2, x2, #0xe0
   208bc:	add	x0, x0, #0xf8
   208c0:	mov	x4, #0x0                   	// #0
   208c4:	mov	x3, #0x0                   	// #0
   208c8:	mov	w1, #0x1b6                 	// #438
   208cc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   208d0:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   208d4:	str	x0, [x24]
   208d8:	stp	xzr, xzr, [sp, #80]
   208dc:	mov	x22, x0
   208e0:	str	xzr, [sp, #96]
   208e4:	cbnz	x0, 2078c <__sanitizer_symbolize_pc@@Base+0x5c>
   208e8:	str	xzr, [sp, #104]
   208ec:	b	208b0 <__sanitizer_symbolize_pc@@Base+0x180>
   208f0:	cmp	x19, x20
   208f4:	b.hi	209b4 <__sanitizer_symbolize_pc@@Base+0x284>  // b.pmore
   208f8:	ldp	x0, x1, [sp, #80]
   208fc:	strb	wzr, [x19]
   20900:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   20904:	ldp	x25, x26, [sp, #48]
   20908:	ldr	x27, [sp, #64]
   2090c:	ldp	x21, x22, [sp, #16]
   20910:	ldp	x23, x24, [sp, #32]
   20914:	ldr	x30, [sp, #72]
   20918:	ldp	x19, x20, [sp], #112
   2091c:	ret
   20920:	ldr	x26, [x26, #4000]
   20924:	ldr	x0, [x26]
   20928:	cbz	x0, 20978 <__sanitizer_symbolize_pc@@Base+0x248>
   2092c:	sub	x1, x0, #0x1
   20930:	tst	x0, x1
   20934:	b.ne	20984 <__sanitizer_symbolize_pc@@Base+0x254>  // b.any
   20938:	add	x1, x22, x1
   2093c:	neg	x0, x0
   20940:	and	x25, x1, x0
   20944:	mov	w2, #0x0                   	// #0
   20948:	add	x1, x27, #0x258
   2094c:	mov	x0, x25
   20950:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   20954:	mov	x24, x0
   20958:	ldr	x1, [sp, #80]
   2095c:	ldr	x2, [sp, #96]
   20960:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   20964:	ldp	x0, x1, [sp, #80]
   20968:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   2096c:	stp	x24, x25, [sp, #80]
   20970:	ldr	x2, [sp, #96]
   20974:	b	207ec <__sanitizer_symbolize_pc@@Base+0xbc>
   20978:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   2097c:	str	x0, [x26]
   20980:	b	2092c <__sanitizer_symbolize_pc@@Base+0x1fc>
   20984:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   20988:	add	x0, x0, #0x240
   2098c:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   20990:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   20994:	mov	x0, x19
   20998:	add	x19, x19, x20
   2099c:	mov	x2, x20
   209a0:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   209a4:	add	x1, x1, #0x968
   209a8:	bl	18dd0 <__sanitizer_set_report_fd@@Base+0x1b20>
   209ac:	sturb	wzr, [x19, #-1]
   209b0:	b	2090c <__sanitizer_symbolize_pc@@Base+0x1dc>
   209b4:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   209b8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   209bc:	add	x2, x2, #0x980
   209c0:	add	x0, x0, #0x8f8
   209c4:	mov	x4, #0x0                   	// #0
   209c8:	mov	x3, #0x0                   	// #0
   209cc:	mov	w1, #0x84                  	// #132
   209d0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   209d4:	stp	x22, xzr, [sp, #96]
   209d8:	b	20804 <__sanitizer_symbolize_pc@@Base+0xd4>
   209dc:	nop

00000000000209e0 <__sanitizer_symbolize_global@@Base>:
   209e0:	cbnz	x3, 209e8 <__sanitizer_symbolize_global@@Base+0x8>
   209e4:	ret
   209e8:	stp	x19, x20, [sp, #-176]!
   209ec:	mov	x20, x0
   209f0:	mov	x19, x3
   209f4:	stp	x21, x22, [sp, #16]
   209f8:	mov	x22, x1
   209fc:	mov	x21, x2
   20a00:	stp	x23, x24, [sp, #32]
   20a04:	add	x23, sp, #0x70
   20a08:	mov	x0, x23
   20a0c:	str	x30, [sp, #72]
   20a10:	strb	wzr, [x2]
   20a14:	bl	241b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35d0>
   20a18:	bl	24d68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
   20a1c:	mov	x2, x23
   20a20:	mov	x1, x20
   20a24:	bl	25368 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4788>
   20a28:	tst	w0, #0xff
   20a2c:	b.eq	20b10 <__sanitizer_symbolize_global@@Base+0x130>  // b.none
   20a30:	stp	x25, x26, [sp, #48]
   20a34:	adrp	x26, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20a38:	ldr	x24, [x26, #4000]
   20a3c:	ldr	x20, [x24]
   20a40:	str	x27, [sp, #64]
   20a44:	cbz	x20, 20b24 <__sanitizer_symbolize_global@@Base+0x144>
   20a48:	stp	xzr, xzr, [sp, #80]
   20a4c:	str	xzr, [sp, #96]
   20a50:	sub	x0, x20, #0x1
   20a54:	tst	x0, x20
   20a58:	b.ne	20bc4 <__sanitizer_symbolize_global@@Base+0x1e4>  // b.any
   20a5c:	lsl	x0, x20, #1
   20a60:	neg	x25, x20
   20a64:	sub	x0, x0, #0x1
   20a68:	mov	w2, #0x0                   	// #0
   20a6c:	and	x25, x0, x25
   20a70:	adrp	x27, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   20a74:	mov	x0, x25
   20a78:	add	x1, x27, #0x258
   20a7c:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   20a80:	mov	x24, x0
   20a84:	ldr	x1, [sp, #80]
   20a88:	ldr	x2, [sp, #96]
   20a8c:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   20a90:	ldp	x0, x1, [sp, #80]
   20a94:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   20a98:	stp	x24, x25, [sp, #80]
   20a9c:	ldr	x2, [sp, #96]
   20aa0:	cmp	x20, x2
   20aa4:	b.ls	20bd4 <__sanitizer_symbolize_global@@Base+0x1f4>  // b.plast
   20aa8:	cmp	x20, x25
   20aac:	b.hi	20b60 <__sanitizer_symbolize_global@@Base+0x180>  // b.pmore
   20ab0:	add	x0, x24, x2
   20ab4:	mov	w1, #0x0                   	// #0
   20ab8:	sub	x2, x20, x2
   20abc:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   20ac0:	ldr	x24, [sp, #80]
   20ac4:	stp	x20, xzr, [sp, #96]
   20ac8:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20acc:	strb	wzr, [x24]
   20ad0:	mov	x2, x23
   20ad4:	ldr	x3, [x3, #4040]
   20ad8:	mov	x1, x22
   20adc:	add	x0, sp, #0x50
   20ae0:	ldr	x3, [x3, #24]
   20ae4:	bl	21bc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xfe8>
   20ae8:	ldr	x1, [sp, #80]
   20aec:	mov	x2, x19
   20af0:	mov	x0, x21
   20af4:	bl	18dd0 <__sanitizer_set_report_fd@@Base+0x1b20>
   20af8:	ldp	x0, x1, [sp, #80]
   20afc:	add	x2, x21, x19
   20b00:	sturb	wzr, [x2, #-1]
   20b04:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   20b08:	ldp	x25, x26, [sp, #48]
   20b0c:	ldr	x27, [sp, #64]
   20b10:	ldp	x21, x22, [sp, #16]
   20b14:	ldp	x23, x24, [sp, #32]
   20b18:	ldr	x30, [sp, #72]
   20b1c:	ldp	x19, x20, [sp], #176
   20b20:	ret
   20b24:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   20b28:	str	x0, [x24]
   20b2c:	stp	xzr, xzr, [sp, #80]
   20b30:	mov	x20, x0
   20b34:	str	xzr, [sp, #96]
   20b38:	cbnz	x0, 20a50 <__sanitizer_symbolize_global@@Base+0x70>
   20b3c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   20b40:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   20b44:	add	x2, x2, #0xe0
   20b48:	add	x0, x0, #0xf8
   20b4c:	mov	x4, #0x0                   	// #0
   20b50:	mov	x3, #0x0                   	// #0
   20b54:	mov	w1, #0x1b6                 	// #438
   20b58:	str	xzr, [sp, #104]
   20b5c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   20b60:	ldr	x26, [x26, #4000]
   20b64:	ldr	x0, [x26]
   20b68:	cbz	x0, 20bb8 <__sanitizer_symbolize_global@@Base+0x1d8>
   20b6c:	sub	x1, x0, #0x1
   20b70:	tst	x0, x1
   20b74:	b.ne	20bc4 <__sanitizer_symbolize_global@@Base+0x1e4>  // b.any
   20b78:	add	x1, x20, x1
   20b7c:	neg	x0, x0
   20b80:	and	x25, x1, x0
   20b84:	mov	w2, #0x0                   	// #0
   20b88:	add	x1, x27, #0x258
   20b8c:	mov	x0, x25
   20b90:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   20b94:	mov	x24, x0
   20b98:	ldr	x1, [sp, #80]
   20b9c:	ldr	x2, [sp, #96]
   20ba0:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   20ba4:	ldp	x0, x1, [sp, #80]
   20ba8:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   20bac:	stp	x24, x25, [sp, #80]
   20bb0:	ldr	x2, [sp, #96]
   20bb4:	b	20ab0 <__sanitizer_symbolize_global@@Base+0xd0>
   20bb8:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   20bbc:	str	x0, [x26]
   20bc0:	b	20b6c <__sanitizer_symbolize_global@@Base+0x18c>
   20bc4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   20bc8:	add	x0, x0, #0x240
   20bcc:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   20bd0:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   20bd4:	stp	x20, xzr, [sp, #96]
   20bd8:	b	20ac8 <__sanitizer_symbolize_global@@Base+0xe8>
   20bdc:	nop

0000000000020be0 <__sanitizer_get_module_and_offset_for_pc@@Base>:
   20be0:	stp	x19, x20, [sp, #-64]!
   20be4:	mov	x19, x1
   20be8:	mov	x20, x2
   20bec:	stp	x21, x22, [sp, #16]
   20bf0:	mov	x21, x0
   20bf4:	mov	x22, x3
   20bf8:	str	x30, [sp, #32]
   20bfc:	str	xzr, [sp, #56]
   20c00:	bl	24d68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
   20c04:	mov	x1, x21
   20c08:	mov	x3, x22
   20c0c:	add	x2, sp, #0x38
   20c10:	mov	w21, #0x0                   	// #0
   20c14:	bl	251f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4618>
   20c18:	tst	w0, #0xff
   20c1c:	b.eq	20c30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50>  // b.none
   20c20:	cmp	x19, #0x0
   20c24:	mov	w21, #0x1                   	// #1
   20c28:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   20c2c:	b.ne	20c44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64>  // b.any
   20c30:	mov	w0, w21
   20c34:	ldp	x21, x22, [sp, #16]
   20c38:	ldr	x30, [sp, #32]
   20c3c:	ldp	x19, x20, [sp], #64
   20c40:	ret
   20c44:	ldr	x1, [sp, #56]
   20c48:	mov	x0, x19
   20c4c:	add	x19, x19, x20
   20c50:	mov	x2, x20
   20c54:	bl	18dd0 <__sanitizer_set_report_fd@@Base+0x1b20>
   20c58:	sturb	wzr, [x19, #-1]
   20c5c:	mov	w0, w21
   20c60:	ldp	x21, x22, [sp, #16]
   20c64:	ldr	x30, [sp, #32]
   20c68:	ldp	x19, x20, [sp], #64
   20c6c:	ret
   20c70:	stp	x19, x20, [sp, #-96]!
   20c74:	stp	x23, x24, [sp, #32]
   20c78:	adrp	x24, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20c7c:	mov	x23, x0
   20c80:	ldr	x19, [x24, #4000]
   20c84:	stp	x21, x22, [sp, #16]
   20c88:	mov	x22, x1
   20c8c:	stp	x25, x30, [sp, #48]
   20c90:	mov	x21, x2
   20c94:	ldr	x3, [x19]
   20c98:	stp	xzr, xzr, [sp, #64]
   20c9c:	str	xzr, [sp, #80]
   20ca0:	cbz	x3, 20d94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b4>
   20ca4:	sub	x0, x3, #0x1
   20ca8:	tst	x0, x3
   20cac:	b.ne	20dfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x21c>  // b.any
   20cb0:	add	x20, x3, #0x3ff
   20cb4:	neg	x3, x3
   20cb8:	and	x20, x20, x3
   20cbc:	mov	w2, #0x0                   	// #0
   20cc0:	mov	x0, x20
   20cc4:	adrp	x25, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   20cc8:	add	x1, x25, #0x258
   20ccc:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   20cd0:	ldr	x1, [sp, #64]
   20cd4:	mov	x19, x0
   20cd8:	ldr	x2, [sp, #80]
   20cdc:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   20ce0:	ldp	x0, x1, [sp, #64]
   20ce4:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   20ce8:	stp	x19, x20, [sp, #64]
   20cec:	ldr	x2, [sp, #80]
   20cf0:	cmp	x2, #0x3ff
   20cf4:	b.hi	20d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x138>  // b.pmore
   20cf8:	cmp	x20, #0x3ff
   20cfc:	b.ls	20da4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c4>  // b.plast
   20d00:	mov	x3, #0x400                 	// #1024
   20d04:	add	x0, x19, x2
   20d08:	mov	w1, #0x0                   	// #0
   20d0c:	sub	x2, x3, x2
   20d10:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   20d14:	ldr	x19, [sp, #64]
   20d18:	mov	x0, #0x400                 	// #1024
   20d1c:	stp	x0, xzr, [sp, #80]
   20d20:	add	x0, sp, #0x40
   20d24:	mov	x2, x23
   20d28:	strb	wzr, [x19]
   20d2c:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   20d30:	mov	x19, x0
   20d34:	add	x1, x1, #0xac8
   20d38:	bl	1e6d0 <OnPrint@@Base+0x420>
   20d3c:	adrp	x4, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20d40:	mov	x3, x22
   20d44:	mov	w2, #0x0                   	// #0
   20d48:	mov	x0, x19
   20d4c:	ldr	x4, [x4, #4040]
   20d50:	adrp	x6, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   20d54:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   20d58:	add	x6, x6, #0x5c8
   20d5c:	add	x1, x1, #0x9a0
   20d60:	ldr	x5, [x4, #24]
   20d64:	ldrb	w4, [x4, #181]
   20d68:	bl	21f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1380>
   20d6c:	ldr	x0, [sp, #64]
   20d70:	mov	x1, x21
   20d74:	bl	13de0 <__sanitizer_report_error_summary@@Base+0x10>
   20d78:	ldp	x0, x1, [sp, #64]
   20d7c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   20d80:	ldp	x21, x22, [sp, #16]
   20d84:	ldp	x23, x24, [sp, #32]
   20d88:	ldp	x25, x30, [sp, #48]
   20d8c:	ldp	x19, x20, [sp], #96
   20d90:	ret
   20d94:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   20d98:	mov	x3, x0
   20d9c:	str	x0, [x19]
   20da0:	b	20ca4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc4>
   20da4:	ldr	x24, [x24, #4000]
   20da8:	ldr	x0, [x24]
   20dac:	cbz	x0, 20e0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x22c>
   20db0:	sub	x1, x0, #0x1
   20db4:	tst	x1, x0
   20db8:	b.ne	20dfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x21c>  // b.any
   20dbc:	add	x20, x0, #0x3ff
   20dc0:	neg	x0, x0
   20dc4:	and	x20, x20, x0
   20dc8:	add	x1, x25, #0x258
   20dcc:	mov	w2, #0x0                   	// #0
   20dd0:	mov	x0, x20
   20dd4:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   20dd8:	mov	x19, x0
   20ddc:	ldr	x1, [sp, #64]
   20de0:	ldr	x2, [sp, #80]
   20de4:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   20de8:	ldp	x0, x1, [sp, #64]
   20dec:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   20df0:	stp	x19, x20, [sp, #64]
   20df4:	ldr	x2, [sp, #80]
   20df8:	b	20d00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x120>
   20dfc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   20e00:	add	x0, x0, #0x240
   20e04:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   20e08:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   20e0c:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   20e10:	str	x0, [x24]
   20e14:	b	20db0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d0>
   20e18:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20e1c:	ldr	x3, [x3, #4040]
   20e20:	ldrb	w3, [x3, #60]
   20e24:	cbnz	w3, 20e2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x24c>
   20e28:	ret
   20e2c:	b	20c70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90>
   20e30:	stp	x19, x20, [sp, #-32]!
   20e34:	mov	x19, x0
   20e38:	mov	w1, #0x1                   	// #1
   20e3c:	ldr	x20, [x0]
   20e40:	str	x30, [sp, #16]
   20e44:	ldxrb	w0, [x20]
   20e48:	stxrb	w2, w1, [x20]
   20e4c:	cbnz	w2, 20e44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x264>
   20e50:	dmb	ish
   20e54:	tst	w0, #0xff
   20e58:	b.eq	20e64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x284>  // b.none
   20e5c:	mov	x0, x20
   20e60:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   20e64:	mov	x0, x19
   20e68:	bl	16858 <__sanitizer_cov_dump@@Base+0x1da0>
   20e6c:	ldr	w0, [x19, #8]
   20e70:	bl	1ce98 <__sanitizer_set_report_fd@@Base+0x5be8>
   20e74:	dmb	ish
   20e78:	strb	wzr, [x20]
   20e7c:	ldr	x30, [sp, #16]
   20e80:	ldp	x19, x20, [sp], #32
   20e84:	ret
   20e88:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20e8c:	stp	x19, x30, [sp, #-16]!
   20e90:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   20e94:	ldr	x0, [x0, #4040]
   20e98:	add	x1, x1, #0x9a8
   20e9c:	ldr	x19, [x0, #112]
   20ea0:	mov	x0, x19
   20ea4:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   20ea8:	mov	w1, #0x1                   	// #1
   20eac:	cbnz	w0, 20ebc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dc>
   20eb0:	mov	w0, w1
   20eb4:	ldp	x19, x30, [sp], #16
   20eb8:	ret
   20ebc:	mov	x0, x19
   20ec0:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   20ec4:	add	x1, x1, #0xc50
   20ec8:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   20ecc:	mov	w1, #0x0                   	// #0
   20ed0:	cbnz	w0, 20eb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d0>
   20ed4:	ldp	x19, x30, [sp], #16
   20ed8:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20edc:	ldr	x0, [x0, #3816]
   20ee0:	b	20e30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x250>
   20ee4:	nop
   20ee8:	stp	x19, x20, [sp, #-48]!
   20eec:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20ef0:	ldr	x19, [x19, #4040]
   20ef4:	stp	x21, x22, [sp, #16]
   20ef8:	mov	x21, x2
   20efc:	ldrb	w2, [x19, #60]
   20f00:	str	x30, [sp, #32]
   20f04:	cbz	w2, 20f70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x390>
   20f08:	ldr	w2, [x1, #8]
   20f0c:	cbz	w2, 20f5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x37c>
   20f10:	mov	x20, x0
   20f14:	ldr	x0, [x1]
   20f18:	ldr	x22, [x0]
   20f1c:	bl	24d68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
   20f20:	sub	x22, x22, #0x4
   20f24:	mov	x1, x22
   20f28:	bl	25298 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46b8>
   20f2c:	ldrb	w1, [x19, #60]
   20f30:	mov	x19, x0
   20f34:	cbz	w1, 20f48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x368>
   20f38:	mov	x2, x21
   20f3c:	mov	x0, x20
   20f40:	add	x1, x19, #0x8
   20f44:	bl	20c70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90>
   20f48:	mov	x0, x19
   20f4c:	ldp	x21, x22, [sp, #16]
   20f50:	ldr	x30, [sp, #32]
   20f54:	ldp	x19, x20, [sp], #48
   20f58:	b	24180 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35a0>
   20f5c:	ldp	x21, x22, [sp, #16]
   20f60:	mov	x1, #0x0                   	// #0
   20f64:	ldr	x30, [sp, #32]
   20f68:	ldp	x19, x20, [sp], #48
   20f6c:	b	13de0 <__sanitizer_report_error_summary@@Base+0x10>
   20f70:	ldp	x21, x22, [sp, #16]
   20f74:	ldr	x30, [sp, #32]
   20f78:	ldp	x19, x20, [sp], #48
   20f7c:	ret
   20f80:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20f84:	stp	x19, x30, [sp, #-16]!
   20f88:	ldr	x0, [x0, #4008]
   20f8c:	ldr	x19, [x0]
   20f90:	mov	x0, x19
   20f94:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   20f98:	mov	x1, x0
   20f9c:	mov	x0, x19
   20fa0:	bl	16818 <__sanitizer_cov_dump@@Base+0x1d60>
   20fa4:	ldp	x19, x30, [sp], #16
   20fa8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   20fac:	mov	x1, #0xe                   	// #14
   20fb0:	add	x0, x0, #0xbd0
   20fb4:	b	16818 <__sanitizer_cov_dump@@Base+0x1d60>
   20fb8:	stp	x19, x20, [sp, #-240]!
   20fbc:	mov	w20, w1
   20fc0:	mov	x19, x0
   20fc4:	stp	x21, x22, [sp, #16]
   20fc8:	mov	x21, x2
   20fcc:	mov	x22, x3
   20fd0:	stp	x23, x24, [sp, #32]
   20fd4:	stp	x25, x26, [sp, #48]
   20fd8:	stp	x27, x28, [sp, #64]
   20fdc:	str	x30, [sp, #80]
   20fe0:	bl	1d020 <__sanitizer_set_report_fd@@Base+0x5d70>
   20fe4:	tst	w0, #0xff
   20fe8:	b.eq	2111c <__sanitizer_get_module_and_offset_for_pc@@Base+0x53c>  // b.none
   20fec:	bl	20e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a8>
   20ff0:	tst	w0, #0xff
   20ff4:	b.ne	214d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8f4>  // b.any
   20ff8:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   20ffc:	add	x23, x1, #0x5c8
   21000:	mov	x1, x23
   21004:	adrp	x24, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   21008:	add	x0, x24, #0x948
   2100c:	bl	1e5c0 <OnPrint@@Base+0x310>
   21010:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21014:	adrp	x25, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21018:	ldp	x3, x4, [x19, #16]
   2101c:	add	x2, x25, #0xbd0
   21020:	ldr	x0, [x0, #4008]
   21024:	mov	w7, w20
   21028:	ldp	x6, x5, [x19, #32]
   2102c:	add	x2, x2, #0x10
   21030:	ldr	x1, [x0]
   21034:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21038:	add	x0, x0, #0xb08
   2103c:	bl	1e648 <OnPrint@@Base+0x398>
   21040:	mov	x1, x23
   21044:	adrp	x23, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21048:	add	x0, x24, #0x948
   2104c:	bl	1e5c0 <OnPrint@@Base+0x310>
   21050:	ldr	x20, [x23, #4000]
   21054:	ldr	x0, [x20]
   21058:	cbz	x0, 21538 <__sanitizer_get_module_and_offset_for_pc@@Base+0x958>
   2105c:	sub	x1, x0, #0x1
   21060:	tst	x1, x0
   21064:	b.ne	2161c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa3c>  // b.any
   21068:	add	x24, x0, #0x817
   2106c:	neg	x0, x0
   21070:	and	x24, x24, x0
   21074:	mov	w2, #0x0                   	// #0
   21078:	mov	x0, x24
   2107c:	adrp	x28, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   21080:	add	x1, x28, #0x258
   21084:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   21088:	mov	x2, #0x0                   	// #0
   2108c:	mov	x1, #0x0                   	// #0
   21090:	mov	x20, x0
   21094:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   21098:	mov	x1, #0x0                   	// #0
   2109c:	mov	x0, #0x0                   	// #0
   210a0:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   210a4:	cmp	x24, #0x817
   210a8:	b.ls	216c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xae4>  // b.plast
   210ac:	mov	x0, x20
   210b0:	mov	x2, #0x818                 	// #2072
   210b4:	mov	w1, #0x0                   	// #0
   210b8:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   210bc:	mov	x1, x22
   210c0:	mov	x2, x20
   210c4:	add	x0, x20, #0x10
   210c8:	stp	x0, xzr, [x20]
   210cc:	mov	x0, x19
   210d0:	str	xzr, [x20, #2064]
   210d4:	blr	x21
   210d8:	mov	x0, x20
   210dc:	bl	20260 <OnPrint@@Base+0x1fb0>
   210e0:	mov	x2, #0x0                   	// #0
   210e4:	add	x0, x25, #0xbd0
   210e8:	mov	x1, x20
   210ec:	add	x0, x0, #0x10
   210f0:	bl	20ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x308>
   210f4:	mov	x1, x24
   210f8:	mov	x0, x20
   210fc:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   21100:	ldp	x21, x22, [sp, #16]
   21104:	ldp	x23, x24, [sp, #32]
   21108:	ldp	x25, x26, [sp, #48]
   2110c:	ldp	x27, x28, [sp, #64]
   21110:	ldr	x30, [sp, #80]
   21114:	ldp	x19, x20, [sp], #240
   21118:	ret
   2111c:	bl	20e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a8>
   21120:	tst	w0, #0xff
   21124:	b.ne	21440 <__sanitizer_get_module_and_offset_for_pc@@Base+0x860>  // b.any
   21128:	adrp	x23, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2112c:	add	x23, x23, #0x5c8
   21130:	mov	x1, x23
   21134:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21138:	mov	x25, x0
   2113c:	adrp	x24, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   21140:	add	x0, x24, #0x948
   21144:	str	x25, [sp, #112]
   21148:	bl	1e5c0 <OnPrint@@Base+0x310>
   2114c:	mov	x0, x19
   21150:	bl	1ca88 <__sanitizer_set_report_fd@@Base+0x57d8>
   21154:	ldr	x1, [x25, #4008]
   21158:	mov	w7, w20
   2115c:	ldp	x3, x4, [x19, #16]
   21160:	mov	x2, x0
   21164:	ldp	x6, x5, [x19, #32]
   21168:	mov	x26, x0
   2116c:	ldr	x1, [x1]
   21170:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21174:	add	x0, x0, #0xb40
   21178:	bl	1e648 <OnPrint@@Base+0x398>
   2117c:	mov	x1, x23
   21180:	adrp	x23, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21184:	add	x0, x24, #0x948
   21188:	bl	1e5c0 <OnPrint@@Base+0x310>
   2118c:	ldr	x20, [x23, #4000]
   21190:	ldr	x25, [x19, #24]
   21194:	ldr	x0, [x20]
   21198:	cbz	x0, 214b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8d4>
   2119c:	cmp	x25, x0
   211a0:	b.cc	214c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8e4>  // b.lo, b.ul, b.last
   211a4:	ldrb	w0, [x19, #48]
   211a8:	cbz	w0, 21200 <__sanitizer_get_module_and_offset_for_pc@@Base+0x620>
   211ac:	ldr	w0, [x19, #52]
   211b0:	cmp	w0, #0x2
   211b4:	b.eq	215d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9f0>  // b.none
   211b8:	cmp	w0, #0x1
   211bc:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   211c0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   211c4:	add	x1, x1, #0x9b8
   211c8:	add	x0, x0, #0x9c0
   211cc:	csel	x1, x1, x0, eq  // eq = none
   211d0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   211d4:	add	x0, x0, #0xa00
   211d8:	bl	1e648 <OnPrint@@Base+0x398>
   211dc:	ldr	x20, [x23, #4000]
   211e0:	ldr	x25, [x19, #16]
   211e4:	ldr	x0, [x20]
   211e8:	cbz	x0, 2162c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa4c>
   211ec:	cmp	x25, x0
   211f0:	b.cs	21200 <__sanitizer_get_module_and_offset_for_pc@@Base+0x620>  // b.hs, b.nlast
   211f4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   211f8:	add	x0, x0, #0xa30
   211fc:	bl	1e648 <OnPrint@@Base+0x398>
   21200:	add	x28, sp, #0x80
   21204:	adrp	x27, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21208:	add	x25, sp, #0xa0
   2120c:	add	x27, x27, #0xa58
   21210:	mov	x0, x28
   21214:	mov	w1, #0x1                   	// #1
   21218:	ldr	x20, [x19, #24]
   2121c:	bl	1ea18 <OnPrint@@Base+0x768>
   21220:	stp	xzr, xzr, [sp, #184]
   21224:	str	xzr, [sp, #232]
   21228:	mov	x1, x25
   2122c:	mov	x0, x28
   21230:	bl	1f018 <OnPrint@@Base+0xd68>
   21234:	tst	w0, #0xff
   21238:	b.eq	21278 <__sanitizer_get_module_and_offset_for_pc@@Base+0x698>  // b.none
   2123c:	ldr	x0, [sp, #160]
   21240:	cmp	x20, x0
   21244:	b.cc	21228 <__sanitizer_get_module_and_offset_for_pc@@Base+0x648>  // b.lo, b.ul, b.last
   21248:	ldr	x0, [sp, #168]
   2124c:	cmp	x20, x0
   21250:	b.cs	21228 <__sanitizer_get_module_and_offset_for_pc@@Base+0x648>  // b.hs, b.nlast
   21254:	ldr	x0, [sp, #200]
   21258:	tbnz	w0, #2, 21228 <__sanitizer_get_module_and_offset_for_pc@@Base+0x648>
   2125c:	mov	x0, x27
   21260:	bl	1e648 <OnPrint@@Base+0x398>
   21264:	mov	x1, x25
   21268:	mov	x0, x28
   2126c:	bl	1f018 <OnPrint@@Base+0xd68>
   21270:	tst	w0, #0xff
   21274:	b.ne	2123c <__sanitizer_get_module_and_offset_for_pc@@Base+0x65c>  // b.any
   21278:	mov	x0, x28
   2127c:	bl	1e8e8 <OnPrint@@Base+0x638>
   21280:	ldr	x20, [x23, #4000]
   21284:	ldr	x0, [x20]
   21288:	cbz	x0, 21610 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa30>
   2128c:	sub	x1, x0, #0x1
   21290:	tst	x1, x0
   21294:	b.ne	2161c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa3c>  // b.any
   21298:	add	x27, x0, #0x817
   2129c:	neg	x0, x0
   212a0:	and	x27, x27, x0
   212a4:	mov	w2, #0x0                   	// #0
   212a8:	mov	x0, x27
   212ac:	adrp	x28, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   212b0:	add	x1, x28, #0x258
   212b4:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   212b8:	mov	x2, #0x0                   	// #0
   212bc:	mov	x1, #0x0                   	// #0
   212c0:	mov	x20, x0
   212c4:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   212c8:	mov	x1, #0x0                   	// #0
   212cc:	mov	x0, #0x0                   	// #0
   212d0:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   212d4:	cmp	x27, #0x817
   212d8:	b.ls	2165c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa7c>  // b.plast
   212dc:	mov	x2, #0x818                 	// #2072
   212e0:	mov	w1, #0x0                   	// #0
   212e4:	mov	x0, x20
   212e8:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   212ec:	mov	x1, x22
   212f0:	mov	x2, x20
   212f4:	add	x0, x20, #0x10
   212f8:	stp	x0, xzr, [x20]
   212fc:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21300:	str	xzr, [x20, #2064]
   21304:	mov	x0, x19
   21308:	blr	x21
   2130c:	mov	x0, x20
   21310:	bl	20260 <OnPrint@@Base+0x1fb0>
   21314:	ldr	x0, [x22, #4040]
   21318:	ldrb	w0, [x0, #232]
   2131c:	cbz	w0, 21568 <__sanitizer_get_module_and_offset_for_pc@@Base+0x988>
   21320:	ldr	x1, [x23, #4000]
   21324:	ldr	x21, [x19, #24]
   21328:	ldr	x0, [x1]
   2132c:	cbz	x0, 215dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x9fc>
   21330:	cmp	x21, x0
   21334:	b.cc	21568 <__sanitizer_get_module_and_offset_for_pc@@Base+0x988>  // b.lo, b.ul, b.last
   21338:	stp	xzr, xzr, [sp, #160]
   2133c:	str	xzr, [sp, #176]
   21340:	sub	x1, x0, #0x1
   21344:	tst	x1, x0
   21348:	b.ne	2161c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa3c>  // b.any
   2134c:	add	x4, x0, #0x3ff
   21350:	neg	x0, x0
   21354:	and	x4, x4, x0
   21358:	add	x1, x28, #0x258
   2135c:	mov	x0, x4
   21360:	mov	w2, #0x0                   	// #0
   21364:	str	x4, [sp, #120]
   21368:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   2136c:	str	x0, [sp, #104]
   21370:	ldr	x1, [sp, #160]
   21374:	ldr	x2, [sp, #176]
   21378:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   2137c:	ldp	x0, x1, [sp, #160]
   21380:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   21384:	ldr	x3, [sp, #104]
   21388:	ldr	x4, [sp, #120]
   2138c:	stp	x3, x4, [sp, #160]
   21390:	ldr	x2, [sp, #176]
   21394:	cmp	x2, #0x3ff
   21398:	b.ls	21638 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa58>  // b.plast
   2139c:	mov	x0, #0x400                 	// #1024
   213a0:	stp	x0, xzr, [sp, #176]
   213a4:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   213a8:	strb	wzr, [x3]
   213ac:	add	x1, x1, #0xa98
   213b0:	mov	x0, x25
   213b4:	bl	1e6d0 <OnPrint@@Base+0x420>
   213b8:	mov	x0, x21
   213bc:	mov	x1, #0x10                  	// #16
   213c0:	bl	1d0b8 <__sanitizer_set_report_fd@@Base+0x5e08>
   213c4:	tst	w0, #0xff
   213c8:	b.eq	21720 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb40>  // b.none
   213cc:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   213d0:	add	x0, x0, #0x9c8
   213d4:	adrp	x23, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   213d8:	add	x23, x23, #0x5c8
   213dc:	str	x0, [sp, #120]
   213e0:	add	x0, x21, #0x10
   213e4:	str	x0, [sp, #104]
   213e8:	b	2141c <__sanitizer_get_module_and_offset_for_pc@@Base+0x83c>
   213ec:	ldr	x3, [sp, #120]
   213f0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   213f4:	add	x6, x0, #0x938
   213f8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   213fc:	mov	x2, x23
   21400:	add	x1, x0, #0xac0
   21404:	mov	x0, x25
   21408:	bl	1e6d0 <OnPrint@@Base+0x420>
   2140c:	add	x21, x21, #0x1
   21410:	ldr	x0, [sp, #104]
   21414:	cmp	x0, x21
   21418:	b.eq	21544 <__sanitizer_get_module_and_offset_for_pc@@Base+0x964>  // b.none
   2141c:	ldrb	w28, [x21]
   21420:	bl	20e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a8>
   21424:	tst	w0, #0xff
   21428:	and	w5, w28, #0xf
   2142c:	asr	w4, w28, #4
   21430:	b.ne	213ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x80c>  // b.any
   21434:	mov	x3, x23
   21438:	mov	x6, x23
   2143c:	b	213f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x818>
   21440:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   21444:	add	x1, x1, #0x28
   21448:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2144c:	mov	x23, x0
   21450:	adrp	x24, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   21454:	add	x0, x24, #0x948
   21458:	str	x23, [sp, #112]
   2145c:	bl	1e5c0 <OnPrint@@Base+0x310>
   21460:	mov	x0, x19
   21464:	bl	1ca88 <__sanitizer_set_report_fd@@Base+0x57d8>
   21468:	ldr	x1, [x23, #4008]
   2146c:	mov	w7, w20
   21470:	ldp	x3, x4, [x19, #16]
   21474:	mov	x2, x0
   21478:	ldp	x6, x5, [x19, #32]
   2147c:	adrp	x23, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21480:	ldr	x1, [x1]
   21484:	mov	x26, x0
   21488:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   2148c:	add	x0, x0, #0xb40
   21490:	bl	1e648 <OnPrint@@Base+0x398>
   21494:	add	x0, x24, #0x948
   21498:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   2149c:	add	x1, x1, #0x938
   214a0:	bl	1e5c0 <OnPrint@@Base+0x310>
   214a4:	ldr	x20, [x23, #4000]
   214a8:	ldr	x25, [x19, #24]
   214ac:	ldr	x0, [x20]
   214b0:	cbnz	x0, 2119c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bc>
   214b4:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   214b8:	str	x0, [x20]
   214bc:	cmp	x25, x0
   214c0:	b.cs	211a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c4>  // b.hs, b.nlast
   214c4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   214c8:	add	x0, x0, #0x9d8
   214cc:	bl	1e648 <OnPrint@@Base+0x398>
   214d0:	b	211a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c4>
   214d4:	adrp	x24, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   214d8:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   214dc:	add	x0, x24, #0x948
   214e0:	add	x1, x1, #0x28
   214e4:	bl	1e5c0 <OnPrint@@Base+0x310>
   214e8:	adrp	x25, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   214ec:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   214f0:	add	x2, x25, #0xbd0
   214f4:	ldp	x3, x4, [x19, #16]
   214f8:	mov	w7, w20
   214fc:	ldr	x0, [x0, #4008]
   21500:	add	x2, x2, #0x10
   21504:	ldp	x6, x5, [x19, #32]
   21508:	adrp	x23, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2150c:	ldr	x1, [x0]
   21510:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21514:	add	x0, x0, #0xb08
   21518:	bl	1e648 <OnPrint@@Base+0x398>
   2151c:	add	x0, x24, #0x948
   21520:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   21524:	add	x1, x1, #0x938
   21528:	bl	1e5c0 <OnPrint@@Base+0x310>
   2152c:	ldr	x20, [x23, #4000]
   21530:	ldr	x0, [x20]
   21534:	cbnz	x0, 2105c <__sanitizer_get_module_and_offset_for_pc@@Base+0x47c>
   21538:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   2153c:	str	x0, [x20]
   21540:	b	2105c <__sanitizer_get_module_and_offset_for_pc@@Base+0x47c>
   21544:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21548:	mov	x0, x25
   2154c:	add	x1, x1, #0xc70
   21550:	bl	1e6d0 <OnPrint@@Base+0x420>
   21554:	ldr	x1, [sp, #160]
   21558:	add	x0, x24, #0x948
   2155c:	bl	1e648 <OnPrint@@Base+0x398>
   21560:	ldp	x0, x1, [sp, #160]
   21564:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   21568:	ldr	x22, [x22, #4040]
   2156c:	ldrb	w0, [x22, #233]
   21570:	cbnz	w0, 215c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9e4>
   21574:	ldr	x0, [sp, #112]
   21578:	ldr	x1, [x0, #4008]
   2157c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21580:	add	x0, x0, #0xae0
   21584:	ldr	x1, [x1]
   21588:	bl	1e5c0 <OnPrint@@Base+0x310>
   2158c:	mov	x2, #0x0                   	// #0
   21590:	mov	x0, x26
   21594:	mov	x1, x20
   21598:	bl	20ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x308>
   2159c:	mov	x1, x27
   215a0:	mov	x0, x20
   215a4:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   215a8:	ldp	x21, x22, [sp, #16]
   215ac:	ldp	x23, x24, [sp, #32]
   215b0:	ldp	x25, x26, [sp, #48]
   215b4:	ldp	x27, x28, [sp, #64]
   215b8:	ldr	x30, [sp, #80]
   215bc:	ldp	x19, x20, [sp], #240
   215c0:	ret
   215c4:	ldr	x0, [x19, #8]
   215c8:	bl	1af20 <__sanitizer_set_report_fd@@Base+0x3c70>
   215cc:	b	21574 <__sanitizer_get_module_and_offset_for_pc@@Base+0x994>
   215d0:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   215d4:	add	x1, x1, #0x9b0
   215d8:	b	211d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f0>
   215dc:	str	x1, [sp, #104]
   215e0:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   215e4:	ldr	x1, [sp, #104]
   215e8:	cmp	x21, x0
   215ec:	str	x0, [x1]
   215f0:	b.cc	21568 <__sanitizer_get_module_and_offset_for_pc@@Base+0x988>  // b.lo, b.ul, b.last
   215f4:	stp	xzr, xzr, [sp, #160]
   215f8:	str	xzr, [sp, #176]
   215fc:	cbnz	x0, 21340 <__sanitizer_get_module_and_offset_for_pc@@Base+0x760>
   21600:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   21604:	ldr	x1, [sp, #104]
   21608:	str	x0, [x1]
   2160c:	b	21340 <__sanitizer_get_module_and_offset_for_pc@@Base+0x760>
   21610:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   21614:	str	x0, [x20]
   21618:	b	2128c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ac>
   2161c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   21620:	add	x0, x0, #0x240
   21624:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   21628:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   2162c:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   21630:	str	x0, [x20]
   21634:	b	211ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x60c>
   21638:	cmp	x4, #0x3ff
   2163c:	b.ls	21754 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb74>  // b.plast
   21640:	add	x0, x3, x2
   21644:	mov	x3, #0x400                 	// #1024
   21648:	mov	w1, #0x0                   	// #0
   2164c:	sub	x2, x3, x2
   21650:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   21654:	ldr	x3, [sp, #160]
   21658:	b	2139c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7bc>
   2165c:	ldr	x1, [x23, #4000]
   21660:	ldr	x0, [x1]
   21664:	cbz	x0, 21734 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb54>
   21668:	sub	x1, x0, #0x1
   2166c:	tst	x1, x0
   21670:	b.ne	2161c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa3c>  // b.any
   21674:	add	x3, x0, #0x817
   21678:	neg	x0, x0
   2167c:	and	x3, x3, x0
   21680:	add	x1, x28, #0x258
   21684:	mov	x0, x3
   21688:	mov	w2, #0x0                   	// #0
   2168c:	str	x3, [sp, #120]
   21690:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   21694:	str	x0, [sp, #104]
   21698:	mov	x1, x20
   2169c:	mov	x2, #0x0                   	// #0
   216a0:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   216a4:	ldr	x4, [sp, #104]
   216a8:	mov	x1, x27
   216ac:	ldr	x3, [sp, #120]
   216b0:	mov	x0, x20
   216b4:	mov	x20, x4
   216b8:	mov	x27, x3
   216bc:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   216c0:	b	212dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fc>
   216c4:	ldr	x23, [x23, #4000]
   216c8:	ldr	x0, [x23]
   216cc:	cbz	x0, 21748 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb68>
   216d0:	sub	x1, x0, #0x1
   216d4:	tst	x1, x0
   216d8:	b.ne	2161c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa3c>  // b.any
   216dc:	add	x23, x0, #0x817
   216e0:	neg	x0, x0
   216e4:	and	x23, x23, x0
   216e8:	add	x1, x28, #0x258
   216ec:	mov	x0, x23
   216f0:	mov	w2, #0x0                   	// #0
   216f4:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   216f8:	mov	x26, x0
   216fc:	mov	x2, #0x0                   	// #0
   21700:	mov	x1, x20
   21704:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   21708:	mov	x1, x24
   2170c:	mov	x0, x20
   21710:	mov	x24, x23
   21714:	mov	x20, x26
   21718:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   2171c:	b	210ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cc>
   21720:	mov	x0, x25
   21724:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21728:	add	x1, x1, #0xad0
   2172c:	bl	1e6d0 <OnPrint@@Base+0x420>
   21730:	b	21554 <__sanitizer_get_module_and_offset_for_pc@@Base+0x974>
   21734:	str	x1, [sp, #104]
   21738:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   2173c:	ldr	x1, [sp, #104]
   21740:	str	x0, [x1]
   21744:	b	21668 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa88>
   21748:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   2174c:	str	x0, [x23]
   21750:	b	216d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xaf0>
   21754:	ldr	x23, [x23, #4000]
   21758:	ldr	x0, [x23]
   2175c:	cbz	x0, 217b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbd0>
   21760:	sub	x1, x0, #0x1
   21764:	tst	x1, x0
   21768:	b.ne	2161c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa3c>  // b.any
   2176c:	add	x23, x0, #0x3ff
   21770:	neg	x0, x0
   21774:	and	x23, x23, x0
   21778:	add	x1, x28, #0x258
   2177c:	mov	w2, #0x0                   	// #0
   21780:	mov	x0, x23
   21784:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   21788:	str	x0, [sp, #104]
   2178c:	ldr	x1, [sp, #160]
   21790:	ldr	x2, [sp, #176]
   21794:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   21798:	ldp	x0, x1, [sp, #160]
   2179c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   217a0:	ldr	x3, [sp, #104]
   217a4:	stp	x3, x23, [sp, #160]
   217a8:	ldr	x2, [sp, #176]
   217ac:	b	21640 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa60>
   217b0:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   217b4:	str	x0, [x23]
   217b8:	b	21760 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb80>
   217bc:	nop
   217c0:	stp	x19, x20, [sp, #-32]!
   217c4:	adrp	x19, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   217c8:	add	x19, x19, #0xc0
   217cc:	str	x30, [sp, #16]
   217d0:	bl	1cc68 <__sanitizer_set_report_fd@@Base+0x59b8>
   217d4:	mov	x20, x0
   217d8:	ldxr	x1, [x19]
   217dc:	cbnz	x1, 217e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc08>
   217e0:	stlxr	w0, x20, [x19]
   217e4:	cbnz	w0, 217d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbf8>
   217e8:	dmb	ish
   217ec:	cbz	x1, 21808 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc28>
   217f0:	cmp	x20, x1
   217f4:	b.eq	21840 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc60>  // b.none
   217f8:	bl	199e0 <__sanitizer_set_report_fd@@Base+0x2730>
   217fc:	ldxr	x1, [x19]
   21800:	cbz	x1, 217e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc00>
   21804:	b	217e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc08>
   21808:	add	x0, x19, #0x8
   2180c:	mov	w2, #0x1                   	// #1
   21810:	ldxrb	w1, [x0]
   21814:	stxrb	w3, w2, [x0]
   21818:	cbnz	w3, 21810 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc30>
   2181c:	dmb	ish
   21820:	tst	w1, #0xff
   21824:	b.eq	21834 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc54>  // b.none
   21828:	ldr	x30, [sp, #16]
   2182c:	ldp	x19, x20, [sp], #32
   21830:	b	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   21834:	ldr	x30, [sp, #16]
   21838:	ldp	x19, x20, [sp], #32
   2183c:	ret
   21840:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21844:	ldr	x0, [x0, #4008]
   21848:	ldr	x19, [x0]
   2184c:	mov	x0, x19
   21850:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   21854:	mov	x1, x0
   21858:	mov	x0, x19
   2185c:	bl	16818 <__sanitizer_cov_dump@@Base+0x1d60>
   21860:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21864:	add	x0, x0, #0xbd0
   21868:	add	x0, x0, #0x20
   2186c:	mov	x1, #0x2b                  	// #43
   21870:	bl	16818 <__sanitizer_cov_dump@@Base+0x1d60>
   21874:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21878:	ldr	x0, [x0, #4040]
   2187c:	ldr	w0, [x0, #216]
   21880:	bl	199f0 <__sanitizer_set_report_fd@@Base+0x2740>
   21884:	nop
   21888:	and	w0, w0, #0x6
   2188c:	cmp	w0, #0x6
   21890:	b.eq	21898 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcb8>  // b.none
   21894:	ret
   21898:	stp	x29, x30, [sp, #-96]!
   2189c:	mov	x29, sp
   218a0:	add	x0, x29, #0x48
   218a4:	stp	x23, x24, [sp, #48]
   218a8:	adrp	x23, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   218ac:	stp	x19, x20, [sp, #16]
   218b0:	mov	x20, x30
   218b4:	stp	x21, x22, [sp, #32]
   218b8:	bl	217c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbe0>
   218bc:	bl	20e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a8>
   218c0:	ldr	x19, [x23, #4000]
   218c4:	and	w22, w0, #0xff
   218c8:	ldr	x0, [x19]
   218cc:	cbz	x0, 21a50 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe70>
   218d0:	sub	x1, x0, #0x1
   218d4:	tst	x1, x0
   218d8:	b.ne	21ab8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xed8>  // b.any
   218dc:	add	x21, x0, #0x817
   218e0:	neg	x0, x0
   218e4:	and	x21, x21, x0
   218e8:	mov	w2, #0x0                   	// #0
   218ec:	mov	x0, x21
   218f0:	adrp	x24, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   218f4:	add	x1, x24, #0x258
   218f8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   218fc:	mov	x2, #0x0                   	// #0
   21900:	mov	x1, #0x0                   	// #0
   21904:	mov	x19, x0
   21908:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   2190c:	mov	x1, #0x0                   	// #0
   21910:	mov	x0, #0x0                   	// #0
   21914:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   21918:	cmp	x21, #0x817
   2191c:	b.ls	21a5c <__sanitizer_get_module_and_offset_for_pc@@Base+0xe7c>  // b.plast
   21920:	mov	w1, #0x0                   	// #0
   21924:	mov	x0, x19
   21928:	mov	x2, #0x818                 	// #2072
   2192c:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   21930:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21934:	add	x1, x19, #0x10
   21938:	str	xzr, [x19, #2064]
   2193c:	mov	x24, x29
   21940:	ldr	x0, [x0, #4040]
   21944:	ldrb	w23, [x0, #33]
   21948:	stp	x1, xzr, [x19]
   2194c:	stp	xzr, xzr, [x29, #80]
   21950:	cbnz	w23, 21a3c <__sanitizer_get_module_and_offset_for_pc@@Base+0xe5c>
   21954:	ldp	x5, x6, [x29, #80]
   21958:	mov	w7, w23
   2195c:	mov	x3, x24
   21960:	mov	x2, x20
   21964:	mov	x0, x19
   21968:	mov	x4, #0x0                   	// #0
   2196c:	mov	w1, #0x100                 	// #256
   21970:	bl	206c8 <OnPrint@@Base+0x2418>
   21974:	cbnz	w22, 21a04 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe24>
   21978:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2197c:	add	x20, x1, #0x5c8
   21980:	mov	x1, x20
   21984:	adrp	x22, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   21988:	add	x0, x22, #0x948
   2198c:	bl	1e5c0 <OnPrint@@Base+0x310>
   21990:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21994:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21998:	add	x0, x0, #0xb90
   2199c:	ldr	x1, [x1, #4008]
   219a0:	ldr	x1, [x1]
   219a4:	bl	1e648 <OnPrint@@Base+0x398>
   219a8:	mov	x1, x20
   219ac:	add	x0, x22, #0x948
   219b0:	bl	1e5c0 <OnPrint@@Base+0x310>
   219b4:	mov	x0, x19
   219b8:	bl	20260 <OnPrint@@Base+0x1fb0>
   219bc:	mov	x2, #0x0                   	// #0
   219c0:	mov	x1, x19
   219c4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   219c8:	add	x0, x0, #0xb80
   219cc:	bl	20ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x308>
   219d0:	mov	x1, x21
   219d4:	mov	x0, x19
   219d8:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   219dc:	dmb	ish
   219e0:	adrp	x0, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   219e4:	add	x1, x0, #0xc0
   219e8:	strb	wzr, [x1, #8]
   219ec:	str	xzr, [x0, #192]
   219f0:	ldp	x19, x20, [sp, #16]
   219f4:	ldp	x21, x22, [sp, #32]
   219f8:	ldp	x23, x24, [sp, #48]
   219fc:	ldp	x29, x30, [sp], #96
   21a00:	ret
   21a04:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   21a08:	adrp	x22, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   21a0c:	add	x1, x1, #0x28
   21a10:	add	x0, x22, #0x948
   21a14:	bl	1e5c0 <OnPrint@@Base+0x310>
   21a18:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21a1c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21a20:	add	x0, x0, #0xb90
   21a24:	ldr	x1, [x1, #4008]
   21a28:	ldr	x1, [x1]
   21a2c:	bl	1e648 <OnPrint@@Base+0x398>
   21a30:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   21a34:	add	x1, x1, #0x938
   21a38:	b	219ac <__sanitizer_get_module_and_offset_for_pc@@Base+0xdcc>
   21a3c:	add	x2, x29, #0x58
   21a40:	add	x1, x29, #0x50
   21a44:	mov	w0, #0x0                   	// #0
   21a48:	bl	1b480 <__sanitizer_set_report_fd@@Base+0x41d0>
   21a4c:	b	21954 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd74>
   21a50:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   21a54:	str	x0, [x19]
   21a58:	b	218d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcf0>
   21a5c:	ldr	x23, [x23, #4000]
   21a60:	ldr	x0, [x23]
   21a64:	cbz	x0, 21ac8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xee8>
   21a68:	sub	x1, x0, #0x1
   21a6c:	tst	x1, x0
   21a70:	b.ne	21ab8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xed8>  // b.any
   21a74:	add	x23, x0, #0x817
   21a78:	neg	x0, x0
   21a7c:	and	x23, x23, x0
   21a80:	add	x1, x24, #0x258
   21a84:	mov	x0, x23
   21a88:	mov	w2, #0x0                   	// #0
   21a8c:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   21a90:	mov	x24, x0
   21a94:	mov	x2, #0x0                   	// #0
   21a98:	mov	x1, x19
   21a9c:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   21aa0:	mov	x1, x21
   21aa4:	mov	x0, x19
   21aa8:	mov	x21, x23
   21aac:	mov	x19, x24
   21ab0:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   21ab4:	b	21920 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd40>
   21ab8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   21abc:	add	x0, x0, #0x240
   21ac0:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   21ac4:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   21ac8:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   21acc:	str	x0, [x23]
   21ad0:	b	21a68 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe88>
   21ad4:	nop
   21ad8:	stp	x19, x20, [sp, #-128]!
   21adc:	mov	w20, w2
   21ae0:	stp	x21, x22, [sp, #16]
   21ae4:	mov	x22, x4
   21ae8:	mov	x21, x3
   21aec:	stp	x23, x24, [sp, #32]
   21af0:	mov	x23, x1
   21af4:	mov	x24, x0
   21af8:	str	x30, [sp, #48]
   21afc:	bl	20f80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a0>
   21b00:	add	x19, sp, #0x48
   21b04:	add	x0, sp, #0x40
   21b08:	bl	217c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbe0>
   21b0c:	stp	x24, x23, [sp, #72]
   21b10:	mov	x0, x19
   21b14:	bl	1ca50 <__sanitizer_set_report_fd@@Base+0x57a0>
   21b18:	mov	x1, x0
   21b1c:	mov	x0, x19
   21b20:	str	x1, [sp, #88]
   21b24:	bl	1ca60 <__sanitizer_set_report_fd@@Base+0x57b0>
   21b28:	mov	w1, w0
   21b2c:	mov	x0, x19
   21b30:	strb	w1, [sp, #120]
   21b34:	bl	1aed8 <__sanitizer_set_report_fd@@Base+0x3c28>
   21b38:	mov	w1, w0
   21b3c:	mov	x0, x19
   21b40:	str	w1, [sp, #124]
   21b44:	bl	1af28 <__sanitizer_set_report_fd@@Base+0x3c78>
   21b48:	mov	x3, x22
   21b4c:	mov	x2, x21
   21b50:	mov	w1, w20
   21b54:	mov	x0, x19
   21b58:	bl	20fb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d8>
   21b5c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21b60:	add	x0, x0, #0xbc0
   21b64:	bl	1e648 <OnPrint@@Base+0x398>
   21b68:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   21b6c:	nop
   21b70:	dmb	ish
   21b74:	adrp	x0, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   21b78:	add	x1, x0, #0xc0
   21b7c:	strb	wzr, [x1, #8]
   21b80:	str	xzr, [x0, #192]
   21b84:	ret
   21b88:	adrp	x0, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   21b8c:	add	x0, x0, #0xc0
   21b90:	ldrb	w3, [x0, #8]
   21b94:	and	x3, x3, #0xff
   21b98:	cmp	x3, #0x1
   21b9c:	b.ne	21ba4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xfc4>  // b.any
   21ba0:	ret
   21ba4:	str	x30, [sp, #-16]!
   21ba8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   21bac:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0x1028>
   21bb0:	add	x2, x2, #0x468
   21bb4:	add	x0, x0, #0x4a0
   21bb8:	mov	x4, #0x1                   	// #1
   21bbc:	mov	w1, #0x2a                  	// #42
   21bc0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   21bc4:	nop
   21bc8:	stp	x19, x20, [sp, #-80]!
   21bcc:	stp	x21, x22, [sp, #16]
   21bd0:	mov	x22, x2
   21bd4:	str	x30, [sp, #64]
   21bd8:	ldrb	w2, [x1]
   21bdc:	cbz	w2, 21c78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1098>
   21be0:	mov	x19, x1
   21be4:	mov	x21, x0
   21be8:	stp	x23, x24, [sp, #32]
   21bec:	adrp	x23, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   21bf0:	mov	x24, x3
   21bf4:	add	x23, x23, #0x948
   21bf8:	stp	x25, x26, [sp, #48]
   21bfc:	adrp	x25, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21c00:	adrp	x26, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21c04:	add	x25, x25, #0xc30
   21c08:	b	21c24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1044>
   21c0c:	add	x19, x19, #0x2
   21c10:	add	x1, x26, #0xc28
   21c14:	mov	x0, x21
   21c18:	bl	1e6d0 <OnPrint@@Base+0x420>
   21c1c:	ldrb	w2, [x20, #1]
   21c20:	cbz	w2, 21c70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1090>
   21c24:	cmp	w2, #0x25
   21c28:	add	x20, x19, #0x1
   21c2c:	b.ne	21cb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10d4>  // b.any
   21c30:	ldrb	w2, [x19, #1]
   21c34:	cmp	w2, #0x6c
   21c38:	b.eq	21cd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10f4>  // b.none
   21c3c:	b.hi	21c88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a8>  // b.pmore
   21c40:	cmp	w2, #0x25
   21c44:	b.eq	21c0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x102c>  // b.none
   21c48:	cmp	w2, #0x67
   21c4c:	b.ne	21cec <__sanitizer_get_module_and_offset_for_pc@@Base+0x110c>  // b.any
   21c50:	ldr	x2, [x22, #40]
   21c54:	mov	x1, x23
   21c58:	mov	x0, x21
   21c5c:	add	x19, x19, #0x2
   21c60:	bl	1e6d0 <OnPrint@@Base+0x420>
   21c64:	ldrb	w2, [x20, #1]
   21c68:	cbnz	w2, 21c24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1044>
   21c6c:	nop
   21c70:	ldp	x23, x24, [sp, #32]
   21c74:	ldp	x25, x26, [sp, #48]
   21c78:	ldp	x21, x22, [sp, #16]
   21c7c:	ldr	x30, [sp, #64]
   21c80:	ldp	x19, x20, [sp], #80
   21c84:	ret
   21c88:	cmp	w2, #0x73
   21c8c:	b.ne	21cec <__sanitizer_get_module_and_offset_for_pc@@Base+0x110c>  // b.any
   21c90:	ldr	x0, [x22, #24]
   21c94:	mov	x1, x24
   21c98:	add	x19, x19, #0x2
   21c9c:	bl	13680 <__sancov_default_options@@Base+0x2a88>
   21ca0:	mov	x2, x0
   21ca4:	mov	x1, x23
   21ca8:	mov	x0, x21
   21cac:	bl	1e6d0 <OnPrint@@Base+0x420>
   21cb0:	b	21c1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x103c>
   21cb4:	mov	x0, x21
   21cb8:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21cbc:	add	x1, x1, #0xc20
   21cc0:	bl	1e6d0 <OnPrint@@Base+0x420>
   21cc4:	mov	x0, x20
   21cc8:	mov	x20, x19
   21ccc:	mov	x19, x0
   21cd0:	b	21c1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x103c>
   21cd4:	ldr	x2, [x22, #32]
   21cd8:	add	x19, x19, #0x2
   21cdc:	mov	x1, x25
   21ce0:	mov	x0, x21
   21ce4:	bl	1e6d0 <OnPrint@@Base+0x420>
   21ce8:	b	21c1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x103c>
   21cec:	mov	w1, w2
   21cf0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21cf4:	add	x0, x0, #0xc38
   21cf8:	bl	1e648 <OnPrint@@Base+0x398>
   21cfc:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   21d00:	stp	x19, x20, [sp, #-48]!
   21d04:	cmp	w2, #0x0
   21d08:	and	w4, w4, #0xff
   21d0c:	stp	x21, x22, [sp, #16]
   21d10:	mov	x20, x0
   21d14:	mov	w19, w2
   21d18:	str	x30, [sp, #32]
   21d1c:	mov	x0, x1
   21d20:	mov	w21, w3
   21d24:	ccmp	w4, #0x0, #0x4, gt
   21d28:	mov	x1, x5
   21d2c:	b.ne	21d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x11bc>  // b.any
   21d30:	bl	13680 <__sancov_default_options@@Base+0x2a88>
   21d34:	mov	x2, x0
   21d38:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   21d3c:	mov	x0, x20
   21d40:	add	x1, x1, #0x948
   21d44:	bl	1e6d0 <OnPrint@@Base+0x420>
   21d48:	cmp	w19, #0x0
   21d4c:	b.gt	21d60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1180>
   21d50:	ldp	x21, x22, [sp, #16]
   21d54:	ldr	x30, [sp, #32]
   21d58:	ldp	x19, x20, [sp], #48
   21d5c:	ret
   21d60:	adrp	x22, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21d64:	add	x22, x22, #0xc88
   21d68:	mov	w2, w19
   21d6c:	mov	x1, x22
   21d70:	mov	x0, x20
   21d74:	bl	1e6d0 <OnPrint@@Base+0x420>
   21d78:	cmp	w21, #0x0
   21d7c:	b.le	21d50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1170>
   21d80:	mov	w2, w21
   21d84:	mov	x1, x22
   21d88:	mov	x0, x20
   21d8c:	ldp	x21, x22, [sp, #16]
   21d90:	ldr	x30, [sp, #32]
   21d94:	ldp	x19, x20, [sp], #48
   21d98:	b	1e6d0 <OnPrint@@Base+0x420>
   21d9c:	bl	13680 <__sancov_default_options@@Base+0x2a88>
   21da0:	mov	x2, x0
   21da4:	mov	w3, w19
   21da8:	mov	x0, x20
   21dac:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21db0:	add	x1, x1, #0xc78
   21db4:	bl	1e6d0 <OnPrint@@Base+0x420>
   21db8:	cmp	w21, #0x0
   21dbc:	b.gt	21ddc <__sanitizer_get_module_and_offset_for_pc@@Base+0x11fc>
   21dc0:	mov	x0, x20
   21dc4:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   21dc8:	ldp	x21, x22, [sp, #16]
   21dcc:	add	x1, x1, #0x1f8
   21dd0:	ldr	x30, [sp, #32]
   21dd4:	ldp	x19, x20, [sp], #48
   21dd8:	b	1e6d0 <OnPrint@@Base+0x420>
   21ddc:	mov	w2, w21
   21de0:	mov	x0, x20
   21de4:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21de8:	add	x1, x1, #0xc80
   21dec:	bl	1e6d0 <OnPrint@@Base+0x420>
   21df0:	mov	x0, x20
   21df4:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   21df8:	ldp	x21, x22, [sp, #16]
   21dfc:	add	x1, x1, #0x1f8
   21e00:	ldr	x30, [sp, #32]
   21e04:	ldp	x19, x20, [sp], #48
   21e08:	b	1e6d0 <OnPrint@@Base+0x420>
   21e0c:	nop
   21e10:	stp	x19, x20, [sp, #-32]!
   21e14:	mov	x20, x0
   21e18:	mov	w19, w3
   21e1c:	mov	x0, x1
   21e20:	mov	x1, x4
   21e24:	stp	x21, x30, [sp, #16]
   21e28:	mov	x21, x2
   21e2c:	bl	13680 <__sancov_default_options@@Base+0x2a88>
   21e30:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21e34:	mov	x2, x0
   21e38:	add	x1, x1, #0xcd0
   21e3c:	mov	x0, x20
   21e40:	bl	1e6d0 <OnPrint@@Base+0x420>
   21e44:	cbnz	w19, 21e64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1284>
   21e48:	mov	x2, x21
   21e4c:	mov	x0, x20
   21e50:	ldp	x21, x30, [sp, #16]
   21e54:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21e58:	ldp	x19, x20, [sp], #32
   21e5c:	add	x1, x1, #0xd08
   21e60:	b	1e6d0 <OnPrint@@Base+0x420>
   21e64:	cmp	w19, #0x5
   21e68:	b.eq	21f34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1354>  // b.none
   21e6c:	b.hi	21eb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12d4>  // b.pmore
   21e70:	cmp	w19, #0x3
   21e74:	b.eq	21f28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1348>  // b.none
   21e78:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21e7c:	cmp	w19, #0x4
   21e80:	add	x2, x1, #0xcb8
   21e84:	b.ne	21ee0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1300>  // b.any
   21e88:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21e8c:	mov	x0, x20
   21e90:	add	x1, x1, #0xd00
   21e94:	bl	1e6d0 <OnPrint@@Base+0x420>
   21e98:	mov	x2, x21
   21e9c:	mov	x0, x20
   21ea0:	ldp	x21, x30, [sp, #16]
   21ea4:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21ea8:	ldp	x19, x20, [sp], #32
   21eac:	add	x1, x1, #0xd08
   21eb0:	b	1e6d0 <OnPrint@@Base+0x420>
   21eb4:	cmp	w19, #0x7
   21eb8:	b.eq	21f1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x133c>  // b.none
   21ebc:	cmp	w19, #0x8
   21ec0:	b.ne	21efc <__sanitizer_get_module_and_offset_for_pc@@Base+0x131c>  // b.any
   21ec4:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21ec8:	mov	x0, x20
   21ecc:	add	x2, x1, #0xcc0
   21ed0:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21ed4:	add	x1, x1, #0xd00
   21ed8:	bl	1e6d0 <OnPrint@@Base+0x420>
   21edc:	b	21e98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12b8>
   21ee0:	cmp	w19, #0x1
   21ee4:	b.eq	21f10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1330>  // b.none
   21ee8:	cmp	w19, #0x2
   21eec:	b.ne	21f40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1360>  // b.any
   21ef0:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21ef4:	add	x2, x1, #0xc98
   21ef8:	b	21e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12a8>
   21efc:	cmp	w19, #0x6
   21f00:	b.ne	21f40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1360>  // b.any
   21f04:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21f08:	add	x2, x1, #0xcc8
   21f0c:	b	21e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12a8>
   21f10:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21f14:	add	x2, x1, #0xca0
   21f18:	b	21e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12a8>
   21f1c:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21f20:	add	x2, x1, #0xc90
   21f24:	b	21e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12a8>
   21f28:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21f2c:	add	x2, x1, #0xcb0
   21f30:	b	21e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12a8>
   21f34:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21f38:	add	x2, x1, #0xca8
   21f3c:	b	21e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12a8>
   21f40:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21f44:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   21f48:	add	x2, x2, #0xcd8
   21f4c:	add	x0, x0, #0xf8
   21f50:	mov	x4, #0x0                   	// #0
   21f54:	mov	x3, #0x0                   	// #0
   21f58:	mov	w1, #0x2a9                 	// #681
   21f5c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   21f60:	stp	x19, x20, [sp, #-112]!
   21f64:	mov	x19, x1
   21f68:	mov	x20, x0
   21f6c:	mov	x0, x1
   21f70:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   21f74:	add	x1, x1, #0xc58
   21f78:	stp	x21, x22, [sp, #16]
   21f7c:	mov	x21, x3
   21f80:	mov	x22, x6
   21f84:	stp	x23, x24, [sp, #32]
   21f88:	mov	x23, x5
   21f8c:	stp	x25, x26, [sp, #48]
   21f90:	mov	w26, w2
   21f94:	stp	x27, x28, [sp, #64]
   21f98:	and	w27, w4, #0xff
   21f9c:	str	x30, [sp, #80]
   21fa0:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   21fa4:	cbz	w0, 222d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16f0>
   21fa8:	ldrb	w2, [x19]
   21fac:	cbz	w2, 22080 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14a0>
   21fb0:	adrp	x25, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21fb4:	adrp	x24, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   21fb8:	add	x25, x25, #0xc30
   21fbc:	add	x24, x24, #0xd18
   21fc0:	b	22050 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1470>
   21fc4:	ldrb	w2, [x19, #1]
   21fc8:	cmp	w2, #0x6c
   21fcc:	b.eq	222b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16d8>  // b.none
   21fd0:	b.hi	220f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1518>  // b.pmore
   21fd4:	cmp	w2, #0x4d
   21fd8:	b.eq	22280 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16a0>  // b.none
   21fdc:	b.ls	220c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14e4>  // b.plast
   21fe0:	cmp	w2, #0x63
   21fe4:	b.eq	22268 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1688>  // b.none
   21fe8:	cmp	w2, #0x66
   21fec:	b.ne	2209c <__sanitizer_get_module_and_offset_for_pc@@Base+0x14bc>  // b.any
   21ff0:	ldr	x3, [x21, #32]
   21ff4:	cbz	x3, 22030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1450>
   21ff8:	cbz	x22, 22030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1450>
   21ffc:	mov	x0, x22
   22000:	str	x3, [sp, #96]
   22004:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   22008:	mov	x2, x0
   2200c:	ldr	x3, [sp, #96]
   22010:	mov	x1, x22
   22014:	stp	x2, x3, [sp, #96]
   22018:	mov	x0, x3
   2201c:	bl	18b48 <__sanitizer_set_report_fd@@Base+0x1898>
   22020:	cmp	w0, #0x0
   22024:	ldp	x2, x3, [sp, #96]
   22028:	add	x2, x3, x2
   2202c:	csel	x3, x2, x3, eq  // eq = none
   22030:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   22034:	mov	x2, x3
   22038:	add	x19, x19, #0x2
   2203c:	mov	x0, x20
   22040:	add	x1, x1, #0x948
   22044:	bl	1e6d0 <OnPrint@@Base+0x420>
   22048:	ldrb	w2, [x28, #1]
   2204c:	cbz	w2, 22080 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14a0>
   22050:	cmp	w2, #0x25
   22054:	add	x28, x19, #0x1
   22058:	b.eq	21fc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13e4>  // b.none
   2205c:	mov	x0, x20
   22060:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   22064:	add	x1, x1, #0xc20
   22068:	bl	1e6d0 <OnPrint@@Base+0x420>
   2206c:	mov	x0, x28
   22070:	mov	x28, x19
   22074:	mov	x19, x0
   22078:	ldrb	w2, [x28, #1]
   2207c:	cbnz	w2, 22050 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1470>
   22080:	ldp	x21, x22, [sp, #16]
   22084:	ldp	x23, x24, [sp, #32]
   22088:	ldp	x25, x26, [sp, #48]
   2208c:	ldp	x27, x28, [sp, #64]
   22090:	ldr	x30, [sp, #80]
   22094:	ldp	x19, x20, [sp], #112
   22098:	ret
   2209c:	cmp	w2, #0x53
   220a0:	b.ne	22328 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1748>  // b.any
   220a4:	ldp	w2, w3, [x21, #56]
   220a8:	add	x19, x19, #0x2
   220ac:	ldr	x1, [x21, #48]
   220b0:	mov	x5, x23
   220b4:	mov	w4, w27
   220b8:	mov	x0, x20
   220bc:	bl	21d00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1120>
   220c0:	b	22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   220c4:	cmp	w2, #0x46
   220c8:	b.eq	221d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15f0>  // b.none
   220cc:	cmp	w2, #0x4c
   220d0:	b.ne	2212c <__sanitizer_get_module_and_offset_for_pc@@Base+0x154c>  // b.any
   220d4:	ldr	x1, [x21, #48]
   220d8:	add	x19, x19, #0x2
   220dc:	cbz	x1, 222e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1700>
   220e0:	ldp	w2, w3, [x21, #56]
   220e4:	mov	x5, x23
   220e8:	mov	w4, w27
   220ec:	mov	x0, x20
   220f0:	bl	21d00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1120>
   220f4:	b	22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   220f8:	cmp	w2, #0x70
   220fc:	b.eq	22250 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1670>  // b.none
   22100:	b.ls	2217c <__sanitizer_get_module_and_offset_for_pc@@Base+0x159c>  // b.plast
   22104:	cmp	w2, #0x71
   22108:	b.ne	2214c <__sanitizer_get_module_and_offset_for_pc@@Base+0x156c>  // b.any
   2210c:	ldr	x2, [x21, #40]
   22110:	add	x19, x19, #0x2
   22114:	mov	x1, x24
   22118:	mov	x0, x20
   2211c:	cmn	x2, #0x1
   22120:	csel	x2, x2, xzr, ne  // ne = any
   22124:	bl	1e6d0 <OnPrint@@Base+0x420>
   22128:	b	22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   2212c:	cmp	w2, #0x25
   22130:	b.ne	22328 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1748>  // b.any
   22134:	add	x19, x19, #0x2
   22138:	mov	x0, x20
   2213c:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   22140:	add	x1, x1, #0xc28
   22144:	bl	1e6d0 <OnPrint@@Base+0x420>
   22148:	b	22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   2214c:	cmp	w2, #0x73
   22150:	b.ne	22328 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1748>  // b.any
   22154:	ldr	x0, [x21, #48]
   22158:	mov	x1, x23
   2215c:	bl	13680 <__sancov_default_options@@Base+0x2a88>
   22160:	add	x19, x19, #0x2
   22164:	mov	x2, x0
   22168:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   2216c:	mov	x0, x20
   22170:	add	x1, x1, #0x948
   22174:	bl	1e6d0 <OnPrint@@Base+0x420>
   22178:	b	22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   2217c:	cmp	w2, #0x6e
   22180:	b.eq	221b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15d4>  // b.none
   22184:	cmp	w2, #0x6f
   22188:	b.ne	221a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15c4>  // b.any
   2218c:	ldr	x2, [x21, #16]
   22190:	add	x19, x19, #0x2
   22194:	mov	x1, x24
   22198:	mov	x0, x20
   2219c:	bl	1e6d0 <OnPrint@@Base+0x420>
   221a0:	b	22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   221a4:	cmp	w2, #0x6d
   221a8:	b.ne	22328 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1748>  // b.any
   221ac:	ldr	x0, [x21, #8]
   221b0:	b	22158 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1578>
   221b4:	add	x19, x19, #0x2
   221b8:	mov	w2, w26
   221bc:	mov	x0, x20
   221c0:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   221c4:	add	x1, x1, #0xd10
   221c8:	bl	1e6d0 <OnPrint@@Base+0x420>
   221cc:	b	22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   221d0:	ldr	x3, [x21, #32]
   221d4:	add	x19, x19, #0x2
   221d8:	cbz	x3, 22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   221dc:	cbz	x22, 22214 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1634>
   221e0:	mov	x0, x22
   221e4:	str	x3, [sp, #96]
   221e8:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   221ec:	mov	x2, x0
   221f0:	ldr	x3, [sp, #96]
   221f4:	mov	x1, x22
   221f8:	stp	x2, x3, [sp, #96]
   221fc:	mov	x0, x3
   22200:	bl	18b48 <__sanitizer_set_report_fd@@Base+0x1898>
   22204:	cmp	w0, #0x0
   22208:	ldp	x2, x3, [sp, #96]
   2220c:	add	x2, x3, x2
   22210:	csel	x3, x2, x3, eq  // eq = none
   22214:	mov	x0, x20
   22218:	mov	x2, x3
   2221c:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   22220:	add	x1, x1, #0xd20
   22224:	bl	1e6d0 <OnPrint@@Base+0x420>
   22228:	ldr	x0, [x21, #48]
   2222c:	cbnz	x0, 22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   22230:	ldr	x2, [x21, #40]
   22234:	cmn	x2, #0x1
   22238:	b.eq	22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>  // b.none
   2223c:	mov	x0, x20
   22240:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   22244:	add	x1, x1, #0xd28
   22248:	bl	1e6d0 <OnPrint@@Base+0x420>
   2224c:	b	22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   22250:	ldr	x2, [x21]
   22254:	add	x19, x19, #0x2
   22258:	mov	x1, x24
   2225c:	mov	x0, x20
   22260:	bl	1e6d0 <OnPrint@@Base+0x420>
   22264:	b	22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   22268:	ldr	w2, [x21, #60]
   2226c:	add	x19, x19, #0x2
   22270:	mov	x1, x25
   22274:	mov	x0, x20
   22278:	bl	1e6d0 <OnPrint@@Base+0x420>
   2227c:	b	22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   22280:	ldr	x2, [x21]
   22284:	add	x19, x19, #0x2
   22288:	tbnz	x2, #60, 22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   2228c:	ldr	x0, [x21, #8]
   22290:	cbz	x0, 22300 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1720>
   22294:	bl	13700 <__sancov_default_options@@Base+0x2b08>
   22298:	mov	x1, x0
   2229c:	ldr	w3, [x21, #24]
   222a0:	mov	x0, x20
   222a4:	ldr	x2, [x21, #16]
   222a8:	adrp	x4, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   222ac:	add	x4, x4, #0x5c8
   222b0:	bl	21e10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1230>
   222b4:	b	22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   222b8:	ldr	w2, [x21, #56]
   222bc:	add	x19, x19, #0x2
   222c0:	mov	x1, x25
   222c4:	mov	x0, x20
   222c8:	bl	1e6d0 <OnPrint@@Base+0x420>
   222cc:	b	22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   222d0:	adrp	x19, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   222d4:	mov	w2, #0x20                  	// #32
   222d8:	add	x19, x19, #0xd50
   222dc:	b	21fb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13d0>
   222e0:	ldr	x1, [x21, #8]
   222e4:	cbz	x1, 22314 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1734>
   222e8:	ldr	w3, [x21, #24]
   222ec:	mov	x4, x23
   222f0:	ldr	x2, [x21, #16]
   222f4:	mov	x0, x20
   222f8:	bl	21e10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1230>
   222fc:	b	22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   22300:	mov	x0, x20
   22304:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   22308:	add	x1, x1, #0xd48
   2230c:	bl	1e6d0 <OnPrint@@Base+0x420>
   22310:	b	22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   22314:	mov	x0, x20
   22318:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   2231c:	add	x1, x1, #0xd30
   22320:	bl	1e6d0 <OnPrint@@Base+0x420>
   22324:	b	22048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1468>
   22328:	mov	w1, w2
   2232c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   22330:	add	x0, x0, #0xc38
   22334:	bl	1e648 <OnPrint@@Base+0x398>
   22338:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   2233c:	nop
   22340:	ldr	x0, [x0, #24]
   22344:	ret
   22348:	mov	x0, #0x22                  	// #34
   2234c:	ret
   22350:	ldr	x4, [x0, #24]
   22354:	cmp	x1, x4
   22358:	b.cs	22368 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1788>  // b.hs, b.nlast
   2235c:	ldr	x0, [x0, #8]
   22360:	ldr	x0, [x0, x1, lsl #3]
   22364:	ret
   22368:	str	x30, [sp, #-16]!
   2236c:	mov	x3, x1
   22370:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   22374:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   22378:	add	x2, x2, #0xd68
   2237c:	add	x0, x0, #0xd90
   22380:	mov	w1, #0x202                 	// #514
   22384:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   22388:	stp	x19, x20, [sp, #-352]!
   2238c:	mov	x20, x2
   22390:	adrp	x4, 22000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1420>
   22394:	ldr	x2, [x0]
   22398:	stp	x21, x22, [sp, #16]
   2239c:	add	x4, x4, #0x350
   223a0:	stp	x23, x30, [sp, #32]
   223a4:	mov	x21, x3
   223a8:	ldr	x2, [x2, #24]
   223ac:	cmp	x2, x4
   223b0:	b.ne	22444 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1864>  // b.any
   223b4:	bl	22350 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   223b8:	mov	x19, x0
   223bc:	add	x3, sp, #0x40
   223c0:	mov	x2, #0x1                   	// #1
   223c4:	mov	w1, w19
   223c8:	add	x22, sp, #0x50
   223cc:	mov	x23, #0x110                 	// #272
   223d0:	mov	w0, #0x4204                	// #16900
   223d4:	stp	x22, x23, [sp, #64]
   223d8:	bl	19e58 <__sanitizer_set_report_fd@@Base+0x2ba8>
   223dc:	add	x1, sp, #0x3c
   223e0:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   223e4:	tst	w0, #0xff
   223e8:	b.eq	22418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1838>  // b.none
   223ec:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   223f0:	ldr	w2, [sp, #60]
   223f4:	ldr	x0, [x0, #3680]
   223f8:	ldr	w0, [x0]
   223fc:	cbnz	w0, 22450 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1870>
   22400:	cmp	w2, #0x3
   22404:	csetm	w0, eq  // eq = none
   22408:	ldp	x21, x22, [sp, #16]
   2240c:	ldp	x23, x30, [sp, #32]
   22410:	ldp	x19, x20, [sp], #352
   22414:	ret
   22418:	ldr	x0, [sp, #328]
   2241c:	str	x0, [x21]
   22420:	mov	x2, x23
   22424:	mov	x1, x22
   22428:	mov	x0, x20
   2242c:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   22430:	mov	w0, #0x1                   	// #1
   22434:	ldp	x21, x22, [sp, #16]
   22438:	ldp	x23, x30, [sp, #32]
   2243c:	ldp	x19, x20, [sp], #352
   22440:	ret
   22444:	blr	x2
   22448:	mov	x19, x0
   2244c:	b	223bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x17dc>
   22450:	mov	w1, w19
   22454:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   22458:	add	x0, x0, #0xde8
   2245c:	bl	1e648 <OnPrint@@Base+0x398>
   22460:	ldr	w2, [sp, #60]
   22464:	b	22400 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1820>
   22468:	stp	x19, x20, [sp, #-96]!
   2246c:	mov	x19, x1
   22470:	mov	x20, x0
   22474:	ldr	x1, [x0, #32]
   22478:	stp	x21, x22, [sp, #16]
   2247c:	str	x30, [sp, #64]
   22480:	cbz	x1, 224c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18e0>
   22484:	mov	x2, #0x0                   	// #0
   22488:	ldr	x4, [x0, #16]
   2248c:	b	2249c <__sanitizer_get_module_and_offset_for_pc@@Base+0x18bc>
   22490:	add	x2, x2, #0x1
   22494:	cmp	x2, x1
   22498:	b.eq	224c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18e0>  // b.none
   2249c:	ldr	x3, [x4, x2, lsl #3]
   224a0:	cmp	x19, x3
   224a4:	b.ne	22490 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18b0>  // b.any
   224a8:	mov	w21, #0x0                   	// #0
   224ac:	mov	w0, w21
   224b0:	ldp	x21, x22, [sp, #16]
   224b4:	ldr	x30, [sp, #64]
   224b8:	ldp	x19, x20, [sp], #96
   224bc:	ret
   224c0:	mov	x3, #0x0                   	// #0
   224c4:	mov	x2, #0x0                   	// #0
   224c8:	mov	w1, w19
   224cc:	mov	w0, #0x10                  	// #16
   224d0:	stp	x23, x24, [sp, #32]
   224d4:	bl	19e58 <__sanitizer_set_report_fd@@Base+0x2ba8>
   224d8:	add	x1, sp, #0x50
   224dc:	mov	w23, w19
   224e0:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   224e4:	ands	w21, w0, #0xff
   224e8:	b.ne	225e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a04>  // b.any
   224ec:	stp	x25, x26, [sp, #48]
   224f0:	adrp	x25, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   224f4:	ldr	x0, [x25, #3680]
   224f8:	ldr	w0, [x0]
   224fc:	sxtw	x0, w0
   22500:	cmp	x0, #0x1
   22504:	b.hi	22610 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a30>  // b.pmore
   22508:	add	x24, sp, #0x54
   2250c:	add	x22, sp, #0x58
   22510:	mov	w2, #0x40000000            	// #1073741824
   22514:	mov	x1, x24
   22518:	mov	w0, w23
   2251c:	bl	19e70 <__sanitizer_set_report_fd@@Base+0x2bc0>
   22520:	mov	x1, x22
   22524:	mov	x26, x0
   22528:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   2252c:	tst	w0, #0xff
   22530:	b.eq	22540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1960>  // b.none
   22534:	ldr	w0, [sp, #88]
   22538:	cmp	w0, #0x4
   2253c:	b.eq	22510 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1930>  // b.none
   22540:	mov	x0, x26
   22544:	mov	x1, x22
   22548:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   2254c:	tst	w0, #0xff
   22550:	b.ne	2270c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b2c>  // b.any
   22554:	ldr	w3, [sp, #84]
   22558:	and	w0, w3, #0xff
   2255c:	cmp	w0, #0x7f
   22560:	b.ne	22588 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19a8>  // b.any
   22564:	ubfx	x3, x3, #8, #8
   22568:	cmp	w3, #0x13
   2256c:	b.eq	22588 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19a8>  // b.none
   22570:	and	x3, x3, #0xff
   22574:	mov	w1, w23
   22578:	mov	x2, #0x0                   	// #0
   2257c:	mov	w0, #0x7                   	// #7
   22580:	bl	19e58 <__sanitizer_set_report_fd@@Base+0x2ba8>
   22584:	b	22510 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1930>
   22588:	ldr	x4, [x20, #24]
   2258c:	str	x19, [sp, #88]
   22590:	ldr	x3, [x20, #32]
   22594:	add	x21, x20, #0x10
   22598:	lsr	x4, x4, #3
   2259c:	cmp	x3, x4
   225a0:	b.hi	226f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b14>  // b.pmore
   225a4:	add	x19, x3, #0x1
   225a8:	b.eq	22624 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a44>  // b.none
   225ac:	ldr	x23, [x20, #16]
   225b0:	str	x19, [x21, #16]
   225b4:	mov	x1, x22
   225b8:	add	x0, x23, x3, lsl #3
   225bc:	mov	x2, #0x8                   	// #8
   225c0:	mov	w21, #0x1                   	// #1
   225c4:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   225c8:	mov	w0, w21
   225cc:	ldp	x21, x22, [sp, #16]
   225d0:	ldp	x23, x24, [sp, #32]
   225d4:	ldp	x25, x26, [sp, #48]
   225d8:	ldr	x30, [sp, #64]
   225dc:	ldp	x19, x20, [sp], #96
   225e0:	ret
   225e4:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   225e8:	mov	w21, #0x0                   	// #0
   225ec:	ldr	x0, [x0, #3680]
   225f0:	ldr	w0, [x0]
   225f4:	cbnz	w0, 226d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1af8>
   225f8:	mov	w0, w21
   225fc:	ldp	x21, x22, [sp, #16]
   22600:	ldp	x23, x24, [sp, #32]
   22604:	ldr	x30, [sp, #64]
   22608:	ldp	x19, x20, [sp], #96
   2260c:	ret
   22610:	mov	x1, x19
   22614:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   22618:	add	x0, x0, #0xe50
   2261c:	bl	1e648 <OnPrint@@Base+0x398>
   22620:	b	22508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1928>
   22624:	tst	x3, x19
   22628:	b.eq	22664 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a84>  // b.none
   2262c:	clz	x2, x19
   22630:	mov	w1, #0x3f                  	// #63
   22634:	sub	w2, w1, w2
   22638:	mov	x1, #0x1                   	// #1
   2263c:	add	w4, w2, #0x1
   22640:	lsl	x4, x1, x4
   22644:	cmp	x4, x19
   22648:	b.ls	227a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bc4>  // b.plast
   2264c:	lsl	x1, x1, x2
   22650:	cmp	x1, x19
   22654:	b.cs	22784 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ba4>  // b.hs, b.nlast
   22658:	cmp	x3, x4
   2265c:	b.hi	2275c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b7c>  // b.pmore
   22660:	mov	x19, x4
   22664:	adrp	x23, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22668:	lsl	x19, x19, #3
   2266c:	ldr	x23, [x23, #4000]
   22670:	ldr	x0, [x23]
   22674:	cbz	x0, 22738 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b58>
   22678:	sub	x1, x0, #0x1
   2267c:	tst	x1, x0
   22680:	b.ne	22774 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b94>  // b.any
   22684:	add	x19, x19, x1
   22688:	neg	x0, x0
   2268c:	and	x19, x19, x0
   22690:	mov	w2, #0x0                   	// #0
   22694:	mov	x0, x19
   22698:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   2269c:	add	x1, x1, #0x258
   226a0:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   226a4:	ldr	x1, [x20, #16]
   226a8:	mov	x23, x0
   226ac:	ldr	x2, [x21, #16]
   226b0:	lsl	x2, x2, #3
   226b4:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   226b8:	ldr	x1, [x21, #8]
   226bc:	ldr	x0, [x20, #16]
   226c0:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   226c4:	ldr	x3, [x21, #16]
   226c8:	str	x23, [x20, #16]
   226cc:	str	x19, [x21, #8]
   226d0:	add	x19, x3, #0x1
   226d4:	b	225b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19d0>
   226d8:	ldr	w2, [sp, #80]
   226dc:	mov	x1, x19
   226e0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   226e4:	add	x0, x0, #0xe20
   226e8:	bl	1e648 <OnPrint@@Base+0x398>
   226ec:	ldp	x23, x24, [sp, #32]
   226f0:	b	224ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x18cc>
   226f4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   226f8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   226fc:	add	x2, x2, #0x1b8
   22700:	add	x0, x0, #0xf8
   22704:	mov	w1, #0x1be                 	// #446
   22708:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2270c:	ldr	x25, [x25, #3680]
   22710:	ldr	w0, [x25]
   22714:	cbnz	w0, 22744 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b64>
   22718:	mov	w1, w19
   2271c:	mov	x3, #0x0                   	// #0
   22720:	mov	x2, #0x0                   	// #0
   22724:	mov	w0, #0x11                  	// #17
   22728:	bl	19e58 <__sanitizer_set_report_fd@@Base+0x2ba8>
   2272c:	ldp	x23, x24, [sp, #32]
   22730:	ldp	x25, x26, [sp, #48]
   22734:	b	224ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x18cc>
   22738:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   2273c:	str	x0, [x23]
   22740:	b	22678 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a98>
   22744:	ldr	w2, [sp, #88]
   22748:	mov	x1, x19
   2274c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   22750:	add	x0, x0, #0xe70
   22754:	bl	1e648 <OnPrint@@Base+0x398>
   22758:	b	22718 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b38>
   2275c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   22760:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   22764:	add	x2, x2, #0x220
   22768:	add	x0, x0, #0xf8
   2276c:	mov	w1, #0x1fd                 	// #509
   22770:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   22774:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   22778:	add	x0, x0, #0x240
   2277c:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   22780:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   22784:	mov	x4, x1
   22788:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   2278c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   22790:	mov	x3, x19
   22794:	add	x2, x2, #0x200
   22798:	add	x0, x0, #0xf8
   2279c:	mov	w1, #0x17c                 	// #380
   227a0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   227a4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   227a8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   227ac:	mov	x3, x19
   227b0:	add	x2, x2, #0x1d8
   227b4:	add	x0, x0, #0xf8
   227b8:	mov	w1, #0x17b                 	// #379
   227bc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   227c0:	stp	x19, x20, [sp, #-96]!
   227c4:	stp	x21, x22, [sp, #16]
   227c8:	mov	x21, x0
   227cc:	ldr	x0, [x0, #32]
   227d0:	str	x30, [sp, #64]
   227d4:	cbz	x0, 228a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cc0>
   227d8:	mov	x20, #0x0                   	// #0
   227dc:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   227e0:	stp	x23, x24, [sp, #32]
   227e4:	add	x24, x21, #0x8
   227e8:	add	x23, sp, #0x5c
   227ec:	stp	x25, x26, [sp, #48]
   227f0:	adrp	x26, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   227f4:	adrp	x25, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   227f8:	add	x26, x26, #0xec8
   227fc:	add	x25, x25, #0xea8
   22800:	b	22834 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c54>
   22804:	ldr	x2, [x22, #3680]
   22808:	mov	w1, w19
   2280c:	mov	x0, x25
   22810:	ldr	w2, [x2]
   22814:	sxtw	x2, w2
   22818:	cmp	x2, #0x1
   2281c:	b.ls	22824 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c44>  // b.plast
   22820:	bl	1e648 <OnPrint@@Base+0x398>
   22824:	ldr	x1, [x21, #32]
   22828:	add	x20, x20, #0x1
   2282c:	cmp	x1, x20
   22830:	b.ls	22898 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cb8>  // b.plast
   22834:	mov	x1, x20
   22838:	mov	x0, x24
   2283c:	bl	22350 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   22840:	mov	x19, x0
   22844:	mov	x3, #0x0                   	// #0
   22848:	mov	x2, #0x0                   	// #0
   2284c:	mov	w1, w19
   22850:	mov	w0, #0x11                  	// #17
   22854:	bl	19e58 <__sanitizer_set_report_fd@@Base+0x2ba8>
   22858:	mov	x1, x23
   2285c:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   22860:	tst	w0, #0xff
   22864:	b.eq	22804 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c24>  // b.none
   22868:	ldr	x0, [x22, #3680]
   2286c:	ldr	w0, [x0]
   22870:	cbz	w0, 22824 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c44>
   22874:	ldr	w2, [sp, #92]
   22878:	mov	w1, w19
   2287c:	mov	x0, x26
   22880:	add	x20, x20, #0x1
   22884:	bl	1e648 <OnPrint@@Base+0x398>
   22888:	ldr	x1, [x21, #32]
   2288c:	cmp	x1, x20
   22890:	b.hi	22834 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c54>  // b.pmore
   22894:	nop
   22898:	ldp	x23, x24, [sp, #32]
   2289c:	ldp	x25, x26, [sp, #48]
   228a0:	ldp	x21, x22, [sp, #16]
   228a4:	ldr	x30, [sp, #64]
   228a8:	ldp	x19, x20, [sp], #96
   228ac:	ret
   228b0:	stp	x19, x20, [sp, #-32]!
   228b4:	mov	x20, x0
   228b8:	stp	x21, x30, [sp, #16]
   228bc:	add	x21, x0, #0x8
   228c0:	ldr	x0, [x0, #32]
   228c4:	cbz	x0, 22900 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d20>
   228c8:	mov	x19, #0x0                   	// #0
   228cc:	nop
   228d0:	mov	x1, x19
   228d4:	mov	x0, x21
   228d8:	bl	22350 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   228dc:	mov	w1, w0
   228e0:	mov	x3, #0x0                   	// #0
   228e4:	mov	x2, #0x0                   	// #0
   228e8:	mov	w0, #0x8                   	// #8
   228ec:	bl	19e58 <__sanitizer_set_report_fd@@Base+0x2ba8>
   228f0:	ldr	x1, [x20, #32]
   228f4:	add	x19, x19, #0x1
   228f8:	cmp	x1, x19
   228fc:	b.hi	228d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cf0>  // b.pmore
   22900:	ldp	x21, x30, [sp, #16]
   22904:	ldp	x19, x20, [sp], #32
   22908:	ret
   2290c:	nop
   22910:	stp	x19, x20, [sp, #-96]!
   22914:	mov	w20, w0
   22918:	add	x19, sp, #0x28
   2291c:	stp	x21, x30, [sp, #16]
   22920:	mov	x0, x19
   22924:	stp	x1, x2, [sp, #40]
   22928:	bl	1ca50 <__sanitizer_set_report_fd@@Base+0x57a0>
   2292c:	mov	x1, x0
   22930:	mov	x0, x19
   22934:	str	x1, [sp, #56]
   22938:	adrp	x21, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2293c:	bl	1ca60 <__sanitizer_set_report_fd@@Base+0x57b0>
   22940:	mov	w1, w0
   22944:	mov	x0, x19
   22948:	strb	w1, [sp, #88]
   2294c:	bl	1aed8 <__sanitizer_set_report_fd@@Base+0x3c28>
   22950:	mov	w1, w0
   22954:	mov	x0, x19
   22958:	str	w1, [sp, #92]
   2295c:	bl	1af28 <__sanitizer_set_report_fd@@Base+0x3c78>
   22960:	ldp	x2, x3, [sp, #56]
   22964:	mov	w1, w20
   22968:	ldr	x4, [sp, #72]
   2296c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   22970:	add	x0, x0, #0xef8
   22974:	bl	1e5c0 <OnPrint@@Base+0x310>
   22978:	ldr	x19, [x21, #208]
   2297c:	cbz	x19, 229b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1dd4>
   22980:	mov	x0, x19
   22984:	cmp	w20, #0x6
   22988:	b.eq	229c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1de4>  // b.none
   2298c:	bl	227c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1be0>
   22990:	adrp	x0, 22000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1420>
   22994:	add	x0, x0, #0x9e0
   22998:	bl	26ca0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60c0>
   2299c:	tst	w0, #0xff
   229a0:	b.eq	229cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1dec>  // b.none
   229a4:	ldr	x0, [x19]
   229a8:	mov	x1, #0x1                   	// #1
   229ac:	str	xzr, [x21, #208]
   229b0:	str	x1, [x0, #104]
   229b4:	cmp	w20, #0x6
   229b8:	cset	w0, ne  // ne = any
   229bc:	add	w0, w0, #0x1
   229c0:	bl	199f0 <__sanitizer_set_report_fd@@Base+0x2740>
   229c4:	bl	228b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cd0>
   229c8:	b	22990 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1db0>
   229cc:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   229d0:	add	x0, x0, #0xf30
   229d4:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   229d8:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   229dc:	nop
   229e0:	stp	x19, x20, [sp, #-32]!
   229e4:	adrp	x19, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   229e8:	ldr	x20, [x19, #208]
   229ec:	str	x30, [sp, #16]
   229f0:	cbz	x20, 22a0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e2c>
   229f4:	bl	19e88 <__sanitizer_set_report_fd@@Base+0x2bd8>
   229f8:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   229fc:	ldr	x1, [x1, #3560]
   22a00:	ldr	x1, [x1]
   22a04:	cmp	x0, x1
   22a08:	b.eq	22a18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e38>  // b.none
   22a0c:	ldr	x30, [sp, #16]
   22a10:	ldp	x19, x20, [sp], #32
   22a14:	ret
   22a18:	mov	x0, x20
   22a1c:	bl	228b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cd0>
   22a20:	str	xzr, [x19, #208]
   22a24:	ldr	x30, [sp, #16]
   22a28:	ldp	x19, x20, [sp], #32
   22a2c:	ret
   22a30:	stp	x19, x20, [sp, #-128]!
   22a34:	stp	x21, x22, [sp, #16]
   22a38:	mov	x21, x0
   22a3c:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22a40:	stp	x23, x24, [sp, #32]
   22a44:	add	x23, sp, #0x60
   22a48:	ldr	w1, [x21, #40]
   22a4c:	mov	x0, x23
   22a50:	stp	x25, x30, [sp, #48]
   22a54:	bl	1a0d0 <__sanitizer_set_report_fd@@Base+0x2e20>
   22a58:	stp	xzr, xzr, [sp, #72]
   22a5c:	ldr	x19, [x22, #4000]
   22a60:	str	xzr, [sp, #88]
   22a64:	ldr	x0, [x19]
   22a68:	cbz	x0, 22c1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x203c>
   22a6c:	sub	x1, x0, #0x1
   22a70:	tst	x1, x0
   22a74:	b.ne	22c28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2048>  // b.any
   22a78:	add	x19, x0, #0x7
   22a7c:	neg	x0, x0
   22a80:	and	x19, x19, x0
   22a84:	mov	w2, #0x0                   	// #0
   22a88:	mov	x0, x19
   22a8c:	adrp	x24, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   22a90:	add	x1, x24, #0x258
   22a94:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   22a98:	ldr	x1, [sp, #72]
   22a9c:	mov	x20, x0
   22aa0:	ldr	x2, [sp, #88]
   22aa4:	lsl	x2, x2, #3
   22aa8:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   22aac:	ldp	x0, x1, [sp, #72]
   22ab0:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   22ab4:	stp	x20, x19, [sp, #72]
   22ab8:	cmp	x19, #0x3ff
   22abc:	b.ls	22bb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fd8>  // b.plast
   22ac0:	add	x25, sp, #0x48
   22ac4:	mov	w24, #0x0                   	// #0
   22ac8:	mov	x1, x25
   22acc:	mov	x0, x23
   22ad0:	bl	1a4e0 <__sanitizer_set_report_fd@@Base+0x3230>
   22ad4:	cbz	w0, 22b7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f9c>
   22ad8:	cmp	w0, #0x1
   22adc:	b.ne	22b44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f64>  // b.any
   22ae0:	ldr	x19, [sp, #72]
   22ae4:	mov	w20, w0
   22ae8:	ldr	x22, [sp, #88]
   22aec:	add	x22, x19, x22, lsl #3
   22af0:	cmp	x22, x19
   22af4:	b.eq	22b14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f34>  // b.none
   22af8:	ldr	x1, [x19], #8
   22afc:	mov	x0, x21
   22b00:	bl	22468 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1888>
   22b04:	ands	w0, w0, #0xff
   22b08:	csel	w20, w20, w0, eq  // eq = none
   22b0c:	cmp	x22, x19
   22b10:	b.ne	22af8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f18>  // b.any
   22b14:	add	w24, w24, #0x1
   22b18:	eor	w20, w20, #0x1
   22b1c:	cmp	w24, #0x1d
   22b20:	cset	w0, gt
   22b24:	orr	w20, w0, w20
   22b28:	tst	w20, #0xff
   22b2c:	b.eq	22ac8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ee8>  // b.none
   22b30:	ldr	x19, [sp, #72]
   22b34:	ldr	x0, [x21, #32]
   22b38:	cmp	x0, #0x0
   22b3c:	cset	w20, ne  // ne = any
   22b40:	b	22b8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fac>
   22b44:	ldr	x19, [sp, #72]
   22b48:	ldr	x22, [sp, #88]
   22b4c:	add	x22, x19, x22, lsl #3
   22b50:	cmp	x19, x22
   22b54:	b.eq	22b34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f54>  // b.none
   22b58:	ldr	x1, [x19], #8
   22b5c:	mov	x0, x21
   22b60:	mov	w20, #0x0                   	// #0
   22b64:	bl	22468 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1888>
   22b68:	ands	w0, w0, #0xff
   22b6c:	csel	w20, w20, w0, eq  // eq = none
   22b70:	cmp	x22, x19
   22b74:	b.ne	22af8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f18>  // b.any
   22b78:	b	22b14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f34>
   22b7c:	mov	x0, x21
   22b80:	bl	227c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1be0>
   22b84:	ldr	x19, [sp, #72]
   22b88:	mov	w20, #0x0                   	// #0
   22b8c:	ldr	x1, [sp, #80]
   22b90:	mov	x0, x19
   22b94:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   22b98:	mov	x0, x23
   22b9c:	bl	1a940 <__sanitizer_set_report_fd@@Base+0x3690>
   22ba0:	mov	w0, w20
   22ba4:	ldp	x21, x22, [sp, #16]
   22ba8:	ldp	x23, x24, [sp, #32]
   22bac:	ldp	x25, x30, [sp, #48]
   22bb0:	ldp	x19, x20, [sp], #128
   22bb4:	ret
   22bb8:	ldr	x3, [sp, #88]
   22bbc:	cmp	x3, #0x80
   22bc0:	b.hi	22c44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2064>  // b.pmore
   22bc4:	ldr	x22, [x22, #4000]
   22bc8:	ldr	x0, [x22]
   22bcc:	cbz	x0, 22c38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2058>
   22bd0:	sub	x1, x0, #0x1
   22bd4:	tst	x1, x0
   22bd8:	b.ne	22c28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2048>  // b.any
   22bdc:	add	x19, x0, #0x3ff
   22be0:	neg	x0, x0
   22be4:	and	x19, x19, x0
   22be8:	add	x1, x24, #0x258
   22bec:	mov	w2, #0x0                   	// #0
   22bf0:	mov	x0, x19
   22bf4:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   22bf8:	mov	x20, x0
   22bfc:	ldr	x1, [sp, #72]
   22c00:	ldr	x2, [sp, #88]
   22c04:	lsl	x2, x2, #3
   22c08:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   22c0c:	ldp	x0, x1, [sp, #72]
   22c10:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   22c14:	stp	x20, x19, [sp, #72]
   22c18:	b	22ac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ee0>
   22c1c:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   22c20:	str	x0, [x19]
   22c24:	b	22a6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e8c>
   22c28:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   22c2c:	add	x0, x0, #0x240
   22c30:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   22c34:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   22c38:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   22c3c:	str	x0, [x22]
   22c40:	b	22bd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ff0>
   22c44:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   22c48:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   22c4c:	add	x2, x2, #0x220
   22c50:	add	x0, x0, #0xf8
   22c54:	mov	x4, #0x80                  	// #128
   22c58:	mov	w1, #0x1fd                 	// #509
   22c5c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   22c60:	stp	x19, x20, [sp, #-320]!
   22c64:	mov	x1, #0x9                   	// #9
   22c68:	mov	x4, #0x0                   	// #0
   22c6c:	mov	x3, #0x0                   	// #0
   22c70:	mov	x2, #0x0                   	// #0
   22c74:	stp	x21, x22, [sp, #16]
   22c78:	mov	x21, x0
   22c7c:	mov	w0, #0x1                   	// #1
   22c80:	stp	x23, x24, [sp, #32]
   22c84:	stp	x25, x26, [sp, #48]
   22c88:	stp	x27, x28, [sp, #64]
   22c8c:	str	x30, [sp, #80]
   22c90:	bl	19ed8 <__sanitizer_set_report_fd@@Base+0x2c28>
   22c94:	bl	19e98 <__sanitizer_set_report_fd@@Base+0x2be8>
   22c98:	ldr	x1, [x21, #112]
   22c9c:	cmp	x0, x1
   22ca0:	b.ne	2305c <__sanitizer_get_module_and_offset_for_pc@@Base+0x247c>  // b.any
   22ca4:	add	x19, x21, #0x10
   22ca8:	adrp	x27, 22000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1420>
   22cac:	mov	x0, x19
   22cb0:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   22cb4:	mov	x0, x19
   22cb8:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   22cbc:	add	x0, x27, #0x9e0
   22cc0:	bl	26c60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6080>
   22cc4:	tst	w0, #0xff
   22cc8:	b.eq	22fa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23c8>  // b.none
   22ccc:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22cd0:	bl	19e98 <__sanitizer_set_report_fd@@Base+0x2be8>
   22cd4:	adrp	x1, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   22cd8:	add	x1, x1, #0xcb8
   22cdc:	ldr	x20, [x22, #4000]
   22ce0:	stp	x21, x1, [sp, #120]
   22ce4:	mov	x19, x0
   22ce8:	stp	xzr, xzr, [sp, #136]
   22cec:	ldr	x1, [x20]
   22cf0:	str	xzr, [sp, #152]
   22cf4:	cbz	x1, 22ed0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22f0>
   22cf8:	sub	x0, x1, #0x1
   22cfc:	tst	x0, x1
   22d00:	b.ne	22f98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23b8>  // b.any
   22d04:	add	x20, x1, #0x7
   22d08:	neg	x1, x1
   22d0c:	and	x20, x20, x1
   22d10:	mov	w2, #0x0                   	// #0
   22d14:	mov	x0, x20
   22d18:	adrp	x23, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   22d1c:	add	x1, x23, #0x258
   22d20:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   22d24:	ldr	x1, [sp, #136]
   22d28:	mov	x24, x0
   22d2c:	ldr	x2, [sp, #152]
   22d30:	lsl	x2, x2, #3
   22d34:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   22d38:	ldp	x0, x1, [sp, #136]
   22d3c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   22d40:	stp	x24, x20, [sp, #136]
   22d44:	lsr	x1, x20, #3
   22d48:	cmp	x1, #0x3ff
   22d4c:	b.ls	22efc <__sanitizer_get_module_and_offset_for_pc@@Base+0x231c>  // b.plast
   22d50:	ldr	x20, [x22, #4000]
   22d54:	adrp	x0, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   22d58:	add	x28, sp, #0x78
   22d5c:	str	w19, [sp, #160]
   22d60:	str	x28, [x0, #208]
   22d64:	ldr	x0, [x20]
   22d68:	cbz	x0, 22f7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x239c>
   22d6c:	sub	x19, x0, #0x1
   22d70:	ands	x19, x19, x0
   22d74:	b.ne	22f98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23b8>  // b.any
   22d78:	neg	x20, x0
   22d7c:	mov	x24, #0x1fff                	// #8191
   22d80:	add	x0, x0, x24
   22d84:	add	x1, x23, #0x258
   22d88:	and	x20, x0, x20
   22d8c:	mov	w2, #0x0                   	// #0
   22d90:	mov	x0, x20
   22d94:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   22d98:	mov	x2, #0x0                   	// #0
   22d9c:	mov	x1, #0x0                   	// #0
   22da0:	mov	x26, x0
   22da4:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   22da8:	mov	x1, #0x0                   	// #0
   22dac:	mov	x0, #0x0                   	// #0
   22db0:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   22db4:	cmp	x20, x24
   22db8:	b.ls	22fb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23d8>  // b.plast
   22dbc:	add	x23, sp, #0x60
   22dc0:	mov	x2, #0x2000                	// #8192
   22dc4:	mov	w1, #0x0                   	// #0
   22dc8:	mov	x0, x26
   22dcc:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   22dd0:	mov	w25, #0x4                   	// #4
   22dd4:	mov	x0, x23
   22dd8:	mov	x2, #0x18                  	// #24
   22ddc:	mov	w1, #0x0                   	// #0
   22de0:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   22de4:	mov	x2, #0x2000                	// #8192
   22de8:	mov	x0, x23
   22dec:	adrp	x24, 22000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1420>
   22df0:	adrp	x23, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   22df4:	add	x22, sp, #0xa8
   22df8:	add	x24, x24, #0x910
   22dfc:	add	x23, x23, #0x78
   22e00:	mov	x1, #0x0                   	// #0
   22e04:	movk	w25, #0x800, lsl #16
   22e08:	str	x26, [sp, #96]
   22e0c:	str	x2, [sp, #112]
   22e10:	bl	19ee8 <__sanitizer_set_report_fd@@Base+0x2c38>
   22e14:	nop
   22e18:	mov	x2, #0x98                  	// #152
   22e1c:	mov	w1, #0x0                   	// #0
   22e20:	mov	x0, x22
   22e24:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   22e28:	ldr	w0, [x23, x19, lsl #2]
   22e2c:	mov	x1, x22
   22e30:	add	x19, x19, #0x1
   22e34:	mov	x2, #0x0                   	// #0
   22e38:	str	x24, [sp, #168]
   22e3c:	str	w25, [sp, #304]
   22e40:	bl	19f10 <__sanitizer_set_report_fd@@Base+0x2c60>
   22e44:	cmp	x19, #0x7
   22e48:	b.ne	22e18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2238>  // b.any
   22e4c:	mov	x0, x28
   22e50:	bl	22a30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e50>
   22e54:	tst	w0, #0xff
   22e58:	b.ne	22ee0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2300>  // b.any
   22e5c:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22e60:	mov	w19, #0x3                   	// #3
   22e64:	ldr	x0, [x0, #3680]
   22e68:	ldr	w0, [x0]
   22e6c:	cbnz	w0, 22f88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23a8>
   22e70:	add	x0, x27, #0x9e0
   22e74:	bl	26ca0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60c0>
   22e78:	tst	w0, #0xff
   22e7c:	b.eq	23030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2450>  // b.none
   22e80:	mov	x0, #0x1                   	// #1
   22e84:	str	x0, [x21, #104]
   22e88:	adrp	x0, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   22e8c:	mov	x1, x20
   22e90:	str	xzr, [x0, #208]
   22e94:	mov	x0, x26
   22e98:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   22e9c:	adrp	x1, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   22ea0:	add	x2, x1, #0xcb8
   22ea4:	ldp	x0, x1, [sp, #136]
   22ea8:	str	x2, [sp, #128]
   22eac:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   22eb0:	mov	w0, w19
   22eb4:	ldp	x21, x22, [sp, #16]
   22eb8:	ldp	x23, x24, [sp, #32]
   22ebc:	ldp	x25, x26, [sp, #48]
   22ec0:	ldp	x27, x28, [sp, #64]
   22ec4:	ldr	x30, [sp, #80]
   22ec8:	ldp	x19, x20, [sp], #320
   22ecc:	ret
   22ed0:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   22ed4:	mov	x1, x0
   22ed8:	str	x0, [x20]
   22edc:	b	22cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2118>
   22ee0:	ldp	x2, x1, [x21]
   22ee4:	add	x0, x28, #0x8
   22ee8:	mov	w19, #0x0                   	// #0
   22eec:	blr	x2
   22ef0:	mov	x0, x28
   22ef4:	bl	227c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1be0>
   22ef8:	b	22e70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2290>
   22efc:	ldr	x3, [sp, #152]
   22f00:	cmp	x3, #0x400
   22f04:	b.hi	23040 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2460>  // b.pmore
   22f08:	ldr	x20, [x22, #4000]
   22f0c:	ldr	x0, [x20]
   22f10:	cbz	x0, 23018 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2438>
   22f14:	sub	x1, x0, #0x1
   22f18:	tst	x1, x0
   22f1c:	b.ne	22f98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23b8>  // b.any
   22f20:	mov	x2, #0x1fff                	// #8191
   22f24:	add	x20, x0, x2
   22f28:	neg	x0, x0
   22f2c:	add	x1, x23, #0x258
   22f30:	and	x20, x20, x0
   22f34:	mov	w2, #0x0                   	// #0
   22f38:	mov	x0, x20
   22f3c:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   22f40:	ldr	x1, [sp, #136]
   22f44:	mov	x24, x0
   22f48:	ldr	x2, [sp, #152]
   22f4c:	add	x28, sp, #0x78
   22f50:	lsl	x2, x2, #3
   22f54:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   22f58:	ldp	x0, x1, [sp, #136]
   22f5c:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   22f60:	stp	x24, x20, [sp, #136]
   22f64:	adrp	x0, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   22f68:	ldr	x20, [x22, #4000]
   22f6c:	str	x28, [x0, #208]
   22f70:	str	w19, [sp, #160]
   22f74:	ldr	x0, [x20]
   22f78:	cbnz	x0, 22d6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x218c>
   22f7c:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   22f80:	str	x0, [x20]
   22f84:	b	22d6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x218c>
   22f88:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   22f8c:	add	x0, x0, #0xf88
   22f90:	bl	1e648 <OnPrint@@Base+0x398>
   22f94:	b	22e70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2290>
   22f98:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   22f9c:	add	x0, x0, #0x240
   22fa0:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   22fa4:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   22fa8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   22fac:	add	x0, x0, #0xf60
   22fb0:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   22fb4:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   22fb8:	ldr	x22, [x22, #4000]
   22fbc:	ldr	x0, [x22]
   22fc0:	cbz	x0, 23024 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2444>
   22fc4:	sub	x1, x0, #0x1
   22fc8:	tst	x1, x0
   22fcc:	b.ne	22f98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23b8>  // b.any
   22fd0:	mov	x1, #0x1fff                	// #8191
   22fd4:	add	x22, x0, x1
   22fd8:	neg	x0, x0
   22fdc:	add	x1, x23, #0x258
   22fe0:	and	x22, x22, x0
   22fe4:	mov	w2, #0x0                   	// #0
   22fe8:	mov	x0, x22
   22fec:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   22ff0:	mov	x2, #0x0                   	// #0
   22ff4:	mov	x23, x0
   22ff8:	mov	x1, x26
   22ffc:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   23000:	mov	x1, x20
   23004:	mov	x0, x26
   23008:	mov	x20, x22
   2300c:	mov	x26, x23
   23010:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   23014:	b	22dbc <__sanitizer_get_module_and_offset_for_pc@@Base+0x21dc>
   23018:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   2301c:	str	x0, [x20]
   23020:	b	22f14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2334>
   23024:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   23028:	str	x0, [x22]
   2302c:	b	22fc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23e4>
   23030:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   23034:	add	x0, x0, #0xf30
   23038:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   2303c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   23040:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23044:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23048:	add	x2, x2, #0x220
   2304c:	add	x0, x0, #0xf8
   23050:	mov	x4, #0x400                 	// #1024
   23054:	mov	w1, #0x1fd                 	// #509
   23058:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2305c:	mov	w0, #0x4                   	// #4
   23060:	bl	199f0 <__sanitizer_set_report_fd@@Base+0x2740>
   23064:	nop
   23068:	stp	x19, x20, [sp, #-208]!
   2306c:	mov	x4, #0x0                   	// #0
   23070:	mov	x20, x0
   23074:	mov	x19, x1
   23078:	mov	x3, #0x0                   	// #0
   2307c:	mov	x2, #0x0                   	// #0
   23080:	mov	x1, #0x0                   	// #0
   23084:	mov	w0, #0x3                   	// #3
   23088:	stp	x21, x22, [sp, #16]
   2308c:	stp	x23, x24, [sp, #32]
   23090:	stp	x25, x26, [sp, #48]
   23094:	str	x30, [sp, #64]
   23098:	bl	19ed8 <__sanitizer_set_report_fd@@Base+0x2c28>
   2309c:	mov	x22, x0
   230a0:	cbz	w0, 2320c <__sanitizer_get_module_and_offset_for_pc@@Base+0x262c>
   230a4:	add	x24, sp, #0x58
   230a8:	add	x0, x24, #0x10
   230ac:	bl	19d10 <__sanitizer_set_report_fd@@Base+0x2a60>
   230b0:	stp	x20, x19, [sp, #88]
   230b4:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   230b8:	bl	19e88 <__sanitizer_set_report_fd@@Base+0x2bd8>
   230bc:	str	xzr, [sp, #192]
   230c0:	ldr	x20, [x20, #4000]
   230c4:	str	x0, [sp, #200]
   230c8:	ldr	x19, [x20]
   230cc:	cbz	x19, 231fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x261c>
   230d0:	mov	w2, #0x0                   	// #0
   230d4:	add	x25, x19, #0x200, lsl #12
   230d8:	mov	x0, x25
   230dc:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   230e0:	add	x1, x1, #0xfa8
   230e4:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   230e8:	mov	x1, x19
   230ec:	mov	x23, x0
   230f0:	bl	1c2e0 <__sanitizer_set_report_fd@@Base+0x5030>
   230f4:	tst	w0, #0xff
   230f8:	b.eq	23328 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2748>  // b.none
   230fc:	add	x0, x24, #0x10
   23100:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   23104:	adrp	x1, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   23108:	add	x1, x1, #0xd0
   2310c:	add	x0, x1, #0x8
   23110:	mov	x26, x1
   23114:	mov	x20, x0
   23118:	adrp	x21, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2311c:	bl	1a018 <__sanitizer_set_report_fd@@Base+0x2d68>
   23120:	add	x21, x21, #0x78
   23124:	mov	w1, #0x6                   	// #6
   23128:	mov	x19, #0x0                   	// #0
   2312c:	b	23134 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2554>
   23130:	ldr	w1, [x21, x19, lsl #2]
   23134:	add	x19, x19, #0x1
   23138:	mov	x0, x20
   2313c:	bl	1a038 <__sanitizer_set_report_fd@@Base+0x2d88>
   23140:	cmp	x19, #0x7
   23144:	b.ne	23130 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2550>  // b.any
   23148:	add	x26, x26, #0x88
   2314c:	mov	x1, x20
   23150:	mov	x2, x26
   23154:	mov	w0, #0x0                   	// #0
   23158:	bl	1a000 <__sanitizer_set_report_fd@@Base+0x2d50>
   2315c:	sxtw	x3, w0
   23160:	cbnz	w0, 23348 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2768>
   23164:	mov	x3, x24
   23168:	mov	w2, #0x700                 	// #1792
   2316c:	mov	x6, #0x0                   	// #0
   23170:	mov	x5, #0x0                   	// #0
   23174:	mov	x4, #0x0                   	// #0
   23178:	add	x1, x23, x25
   2317c:	movk	w2, #0x80, lsl #16
   23180:	adrp	x0, 22000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1420>
   23184:	add	x0, x0, #0xc60
   23188:	bl	1acd8 <__sanitizer_set_report_fd@@Base+0x3a28>
   2318c:	mov	x2, #0x0                   	// #0
   23190:	mov	x19, x0
   23194:	mov	x1, x26
   23198:	add	x20, sp, #0x54
   2319c:	mov	w0, #0x2                   	// #2
   231a0:	bl	1a000 <__sanitizer_set_report_fd@@Base+0x2d50>
   231a4:	mov	x0, x19
   231a8:	mov	x1, x20
   231ac:	str	wzr, [sp, #84]
   231b0:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   231b4:	tst	w0, #0xff
   231b8:	b.eq	23258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2678>  // b.none
   231bc:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   231c0:	ldr	x0, [x0, #3680]
   231c4:	ldr	w0, [x0]
   231c8:	cbnz	w0, 23304 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2724>
   231cc:	add	x0, x24, #0x10
   231d0:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   231d4:	mov	x1, x25
   231d8:	mov	x0, x23
   231dc:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   231e0:	cbz	w22, 23228 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2648>
   231e4:	ldp	x21, x22, [sp, #16]
   231e8:	ldp	x23, x24, [sp, #32]
   231ec:	ldp	x25, x26, [sp, #48]
   231f0:	ldr	x30, [sp, #64]
   231f4:	ldp	x19, x20, [sp], #208
   231f8:	ret
   231fc:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   23200:	mov	x19, x0
   23204:	str	x0, [x20]
   23208:	b	230d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24f0>
   2320c:	mov	x4, #0x0                   	// #0
   23210:	mov	x3, #0x0                   	// #0
   23214:	mov	x2, #0x0                   	// #0
   23218:	mov	x1, #0x1                   	// #1
   2321c:	mov	w0, #0x4                   	// #4
   23220:	bl	19ed8 <__sanitizer_set_report_fd@@Base+0x2c28>
   23224:	b	230a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24c4>
   23228:	mov	x4, #0x0                   	// #0
   2322c:	mov	x3, #0x0                   	// #0
   23230:	mov	x2, #0x0                   	// #0
   23234:	mov	x1, #0x0                   	// #0
   23238:	mov	w0, #0x4                   	// #4
   2323c:	bl	19ed8 <__sanitizer_set_report_fd@@Base+0x2c28>
   23240:	ldp	x21, x22, [sp, #16]
   23244:	ldp	x23, x24, [sp, #32]
   23248:	ldp	x25, x26, [sp, #48]
   2324c:	ldr	x30, [sp, #64]
   23250:	ldp	x19, x20, [sp], #208
   23254:	ret
   23258:	adrp	x26, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2325c:	adrp	x21, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23260:	ldr	x0, [x26, #3560]
   23264:	str	x19, [x0]
   23268:	bl	19e88 <__sanitizer_set_report_fd@@Base+0x2bd8>
   2326c:	ldr	x5, [x21, #3544]
   23270:	mov	x6, x0
   23274:	mov	x1, x19
   23278:	mov	x4, #0x0                   	// #0
   2327c:	mov	x3, #0x0                   	// #0
   23280:	mov	x2, #0x0                   	// #0
   23284:	mov	w0, #0x6d61                	// #28001
   23288:	str	x6, [x5]
   2328c:	movk	w0, #0x5961, lsl #16
   23290:	bl	19ed8 <__sanitizer_set_report_fd@@Base+0x2c28>
   23294:	add	x0, x24, #0x10
   23298:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   2329c:	ldr	x0, [sp, #192]
   232a0:	cbnz	x0, 232b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26d4>
   232a4:	nop
   232a8:	bl	6ad0 <sched_yield@plt>
   232ac:	ldr	x0, [sp, #192]
   232b0:	cbz	x0, 232a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26c8>
   232b4:	mov	w2, #0x40000000            	// #1073741824
   232b8:	mov	x1, #0x0                   	// #0
   232bc:	mov	w0, w19
   232c0:	bl	19e70 <__sanitizer_set_report_fd@@Base+0x2bc0>
   232c4:	mov	x1, x20
   232c8:	bl	197d8 <__sanitizer_set_report_fd@@Base+0x2528>
   232cc:	tst	w0, #0xff
   232d0:	b.eq	232f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2710>  // b.none
   232d4:	ldr	w1, [sp, #84]
   232d8:	cmp	w1, #0x4
   232dc:	b.eq	232b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26d4>  // b.none
   232e0:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   232e4:	ldr	x0, [x0, #3680]
   232e8:	ldr	w0, [x0]
   232ec:	cbnz	w0, 23318 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2738>
   232f0:	ldr	x26, [x26, #3560]
   232f4:	ldr	x21, [x21, #3544]
   232f8:	str	xzr, [x26]
   232fc:	str	xzr, [x21]
   23300:	b	231d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25f4>
   23304:	ldr	w1, [sp, #84]
   23308:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2330c:	add	x0, x0, #0x10
   23310:	bl	1e648 <OnPrint@@Base+0x398>
   23314:	b	231cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x25ec>
   23318:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2331c:	add	x0, x0, #0x40
   23320:	bl	1e648 <OnPrint@@Base+0x398>
   23324:	b	232f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2710>
   23328:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   2332c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   23330:	add	x2, x2, #0xfc0
   23334:	add	x0, x0, #0xd90
   23338:	mov	x4, #0x0                   	// #0
   2333c:	mov	x3, #0x0                   	// #0
   23340:	mov	w1, #0x152                 	// #338
   23344:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23348:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2334c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   23350:	add	x2, x2, #0x0
   23354:	add	x0, x0, #0xd90
   23358:	mov	x4, #0x0                   	// #0
   2335c:	mov	w1, #0x1ac                 	// #428
   23360:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23364:	nop
   23368:	ldr	x3, [x0, #24]
   2336c:	cbz	x3, 2339c <__sanitizer_get_module_and_offset_for_pc@@Base+0x27bc>
   23370:	ldr	x4, [x0, #8]
   23374:	mov	x0, #0x0                   	// #0
   23378:	b	23384 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27a4>
   2337c:	cmp	x0, x3
   23380:	b.eq	2339c <__sanitizer_get_module_and_offset_for_pc@@Base+0x27bc>  // b.none
   23384:	ldr	x2, [x4, x0, lsl #3]
   23388:	add	x0, x0, #0x1
   2338c:	cmp	x2, x1
   23390:	b.ne	2337c <__sanitizer_get_module_and_offset_for_pc@@Base+0x279c>  // b.any
   23394:	mov	w0, #0x1                   	// #1
   23398:	ret
   2339c:	mov	w0, #0x0                   	// #0
   233a0:	ret
   233a4:	nop
   233a8:	stp	x19, x20, [sp, #-64]!
   233ac:	stp	x21, x22, [sp, #16]
   233b0:	add	x21, x0, #0x8
   233b4:	ldr	x4, [x0, #16]
   233b8:	str	x1, [sp, #56]
   233bc:	ldr	x3, [x21, #16]
   233c0:	str	x30, [sp, #32]
   233c4:	lsr	x4, x4, #3
   233c8:	cmp	x3, x4
   233cc:	b.hi	234b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x28d8>  // b.pmore
   233d0:	mov	x19, x0
   233d4:	add	x20, x3, #0x1
   233d8:	b.eq	23404 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2824>  // b.none
   233dc:	ldr	x22, [x0, #8]
   233e0:	str	x20, [x21, #16]
   233e4:	add	x0, x22, x3, lsl #3
   233e8:	add	x1, sp, #0x38
   233ec:	mov	x2, #0x8                   	// #8
   233f0:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   233f4:	ldp	x21, x22, [sp, #16]
   233f8:	ldr	x30, [sp, #32]
   233fc:	ldp	x19, x20, [sp], #64
   23400:	ret
   23404:	tst	x3, x20
   23408:	b.eq	23444 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2864>  // b.none
   2340c:	clz	x4, x20
   23410:	mov	w0, #0x3f                  	// #63
   23414:	sub	w0, w0, w4
   23418:	mov	x2, #0x1                   	// #1
   2341c:	add	w4, w0, #0x1
   23420:	lsl	x4, x2, x4
   23424:	cmp	x4, x20
   23428:	b.ls	23504 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2924>  // b.plast
   2342c:	lsl	x0, x2, x0
   23430:	cmp	x20, x0
   23434:	b.ls	23520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2940>  // b.plast
   23438:	cmp	x3, x4
   2343c:	b.hi	234dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x28fc>  // b.pmore
   23440:	mov	x20, x4
   23444:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23448:	lsl	x20, x20, #3
   2344c:	ldr	x22, [x22, #4000]
   23450:	ldr	x0, [x22]
   23454:	cbz	x0, 234d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x28f0>
   23458:	sub	x1, x0, #0x1
   2345c:	tst	x0, x1
   23460:	b.ne	234f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2914>  // b.any
   23464:	add	x20, x20, x1
   23468:	neg	x0, x0
   2346c:	and	x20, x20, x0
   23470:	mov	w2, #0x0                   	// #0
   23474:	mov	x0, x20
   23478:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   2347c:	add	x1, x1, #0x258
   23480:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   23484:	ldr	x1, [x19, #8]
   23488:	mov	x22, x0
   2348c:	ldr	x2, [x21, #16]
   23490:	lsl	x2, x2, #3
   23494:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   23498:	ldr	x0, [x19, #8]
   2349c:	ldr	x1, [x21, #8]
   234a0:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   234a4:	ldr	x3, [x21, #16]
   234a8:	str	x22, [x19, #8]
   234ac:	str	x20, [x21, #8]
   234b0:	add	x20, x3, #0x1
   234b4:	b	233e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2800>
   234b8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   234bc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   234c0:	add	x2, x2, #0x1b8
   234c4:	add	x0, x0, #0xf8
   234c8:	mov	w1, #0x1be                 	// #446
   234cc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   234d0:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   234d4:	str	x0, [x22]
   234d8:	b	23458 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2878>
   234dc:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   234e0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   234e4:	add	x2, x2, #0x220
   234e8:	add	x0, x0, #0xf8
   234ec:	mov	w1, #0x1fd                 	// #509
   234f0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   234f4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   234f8:	add	x0, x0, #0x240
   234fc:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   23500:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   23504:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23508:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   2350c:	mov	x3, x20
   23510:	add	x2, x2, #0x1d8
   23514:	add	x0, x0, #0xf8
   23518:	mov	w1, #0x17b                 	// #379
   2351c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23520:	mov	x4, x0
   23524:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23528:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   2352c:	mov	x3, x20
   23530:	add	x2, x2, #0x200
   23534:	add	x0, x0, #0xf8
   23538:	mov	w1, #0x17c                 	// #380
   2353c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23540:	stp	x19, x20, [sp, #-48]!
   23544:	add	x20, x0, #0x10
   23548:	mov	x19, x0
   2354c:	stp	x21, x22, [sp, #16]
   23550:	adrp	x21, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23554:	ldr	x21, [x21, #4000]
   23558:	str	x30, [sp, #32]
   2355c:	str	x1, [x0]
   23560:	str	w2, [x0, #8]
   23564:	ldr	x0, [x21]
   23568:	stp	xzr, xzr, [x20, #8]
   2356c:	str	xzr, [x19, #16]
   23570:	cbz	x0, 235f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a14>
   23574:	sub	x1, x0, #0x1
   23578:	tst	x1, x0
   2357c:	b.ne	23600 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a20>  // b.any
   23580:	add	x21, x0, #0x1f
   23584:	neg	x0, x0
   23588:	and	x21, x21, x0
   2358c:	mov	w2, #0x0                   	// #0
   23590:	mov	x0, x21
   23594:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23598:	add	x1, x1, #0x258
   2359c:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   235a0:	ldr	x1, [x19, #16]
   235a4:	mov	x22, x0
   235a8:	ldr	x2, [x20, #16]
   235ac:	lsl	x2, x2, #5
   235b0:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   235b4:	ldr	x1, [x20, #8]
   235b8:	ldr	x0, [x19, #16]
   235bc:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   235c0:	str	x22, [x19, #16]
   235c4:	ldrsw	x2, [x19, #8]
   235c8:	mov	w0, #0x1                   	// #1
   235cc:	str	x21, [x20, #8]
   235d0:	strb	w0, [x19, #72]
   235d4:	cmp	x2, #0x20
   235d8:	b.hi	23610 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a30>  // b.pmore
   235dc:	add	x0, x19, #0x28
   235e0:	mov	w1, #0x0                   	// #0
   235e4:	ldp	x21, x22, [sp, #16]
   235e8:	ldr	x30, [sp, #32]
   235ec:	ldp	x19, x20, [sp], #48
   235f0:	b	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   235f4:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   235f8:	str	x0, [x21]
   235fc:	b	23574 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2994>
   23600:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23604:	add	x0, x0, #0x240
   23608:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   2360c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   23610:	mov	x3, x2
   23614:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   23618:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2361c:	add	x0, x0, #0xd0
   23620:	add	x2, x2, #0x98
   23624:	mov	x4, #0x20                  	// #32
   23628:	mov	w1, #0x1c                  	// #28
   2362c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23630:	stp	x19, x20, [sp, #-112]!
   23634:	mov	x20, x0
   23638:	ldrb	w0, [x0, #72]
   2363c:	str	x30, [sp, #72]
   23640:	cbz	w0, 23904 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d24>
   23644:	mov	x19, x1
   23648:	cbz	x1, 237fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c1c>
   2364c:	stp	x21, x22, [sp, #16]
   23650:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23654:	add	x21, sp, #0x50
   23658:	ldr	x22, [x22, #4000]
   2365c:	stp	x23, x24, [sp, #32]
   23660:	adrp	x23, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23664:	add	x23, x23, #0x258
   23668:	stp	x25, x26, [sp, #48]
   2366c:	str	x27, [sp, #64]
   23670:	ldrb	w0, [x19]
   23674:	cmp	w0, #0x20
   23678:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   2367c:	b.ne	23690 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ab0>  // b.any
   23680:	ldrb	w0, [x19, #1]!
   23684:	cmp	w0, #0x20
   23688:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   2368c:	b.eq	23680 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2aa0>  // b.none
   23690:	mov	x0, x19
   23694:	mov	w1, #0xa                   	// #10
   23698:	bl	18b88 <__sanitizer_set_report_fd@@Base+0x18d8>
   2369c:	mov	x26, x0
   236a0:	cbz	x0, 2381c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c3c>
   236a4:	cmp	x19, x26
   236a8:	b.eq	236b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ad8>  // b.none
   236ac:	ldrb	w6, [x19]
   236b0:	cmp	w6, #0x23
   236b4:	b.ne	236c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ae8>  // b.any
   236b8:	ldrb	w0, [x26]
   236bc:	cbz	w0, 237ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c0c>
   236c0:	add	x19, x26, #0x1
   236c4:	b	23670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a90>
   236c8:	mov	x24, x26
   236cc:	nop
   236d0:	ldurb	w1, [x24, #-1]
   236d4:	cmp	w1, #0x20
   236d8:	and	w1, w1, #0xfffffffb
   236dc:	ccmp	w1, #0x9, #0x4, ne  // ne = any
   236e0:	b.ne	236f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b10>  // b.any
   236e4:	sub	x24, x24, #0x1
   236e8:	cmp	x19, x24
   236ec:	b.ne	236d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2af0>  // b.any
   236f0:	ldr	w7, [x20, #8]
   236f4:	cmp	w7, #0x0
   236f8:	b.le	238fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d1c>
   236fc:	ldr	x8, [x20]
   23700:	mov	x5, #0x0                   	// #0
   23704:	nop
   23708:	ldr	x2, [x8, x5, lsl #3]
   2370c:	mov	w0, w5
   23710:	mov	w25, w5
   23714:	mov	x3, x19
   23718:	ldrb	w1, [x2]
   2371c:	cmp	w1, w6
   23720:	b.ne	23738 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b58>  // b.any
   23724:	nop
   23728:	ldrb	w1, [x2, #1]!
   2372c:	ldrb	w4, [x3, #1]!
   23730:	cmp	w4, w1
   23734:	b.eq	23728 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b48>  // b.none
   23738:	cbz	w1, 23808 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c28>
   2373c:	add	x5, x5, #0x1
   23740:	add	w25, w0, #0x1
   23744:	cmp	w7, w5
   23748:	b.gt	23708 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b28>
   2374c:	cmp	w7, w25
   23750:	b.eq	23994 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2db4>  // b.none
   23754:	mov	x27, x20
   23758:	mov	x2, #0x20                  	// #32
   2375c:	mov	w1, #0x0                   	// #0
   23760:	mov	x0, x21
   23764:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   23768:	sxtw	x25, w25
   2376c:	ldr	x3, [x27], #16
   23770:	sub	x24, x24, x19
   23774:	mov	x2, #0x0                   	// #0
   23778:	mov	x1, #0x0                   	// #0
   2377c:	add	x0, x24, #0x1
   23780:	ldr	x3, [x3, x25, lsl #3]
   23784:	str	x3, [sp, #80]
   23788:	bl	11038 <__sancov_default_options@@Base+0x440>
   2378c:	str	x0, [sp, #88]
   23790:	mov	x1, x19
   23794:	mov	x2, x24
   23798:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   2379c:	ldr	x0, [sp, #88]
   237a0:	strb	wzr, [x0, x24]
   237a4:	ldr	x4, [x20, #24]
   237a8:	ldr	x0, [x27, #16]
   237ac:	lsr	x4, x4, #5
   237b0:	cmp	x0, x4
   237b4:	b.hi	238d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cf4>  // b.pmore
   237b8:	add	x3, x0, #0x1
   237bc:	b.eq	2382c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c4c>  // b.none
   237c0:	ldr	x24, [x20, #16]
   237c4:	add	x25, x20, x25
   237c8:	str	x3, [x27, #16]
   237cc:	add	x0, x24, x0, lsl #5
   237d0:	mov	x1, x21
   237d4:	mov	x2, #0x20                  	// #32
   237d8:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   237dc:	mov	w0, #0x1                   	// #1
   237e0:	strb	w0, [x25, #40]
   237e4:	ldrb	w0, [x26]
   237e8:	cbnz	w0, 236c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ae0>
   237ec:	ldp	x21, x22, [sp, #16]
   237f0:	ldp	x23, x24, [sp, #32]
   237f4:	ldp	x25, x26, [sp, #48]
   237f8:	ldr	x27, [sp, #64]
   237fc:	ldr	x30, [sp, #72]
   23800:	ldp	x19, x20, [sp], #112
   23804:	ret
   23808:	ldrb	w1, [x3]
   2380c:	cmp	w1, #0x3a
   23810:	b.ne	2373c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b5c>  // b.any
   23814:	add	x19, x3, #0x1
   23818:	b	2374c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b6c>
   2381c:	mov	x0, x19
   23820:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   23824:	add	x26, x19, x0
   23828:	b	236a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ac4>
   2382c:	tst	x0, x3
   23830:	b.eq	2386c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c8c>  // b.none
   23834:	clz	x2, x3
   23838:	mov	w1, #0x3f                  	// #63
   2383c:	sub	w2, w1, w2
   23840:	mov	x1, #0x1                   	// #1
   23844:	add	w4, w2, #0x1
   23848:	lsl	x4, x1, x4
   2384c:	cmp	x4, x3
   23850:	b.ls	23960 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d80>  // b.plast
   23854:	lsl	x1, x1, x2
   23858:	cmp	x1, x3
   2385c:	b.cs	23978 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d98>  // b.hs, b.nlast
   23860:	cmp	x0, x4
   23864:	b.hi	23934 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d54>  // b.pmore
   23868:	mov	x3, x4
   2386c:	ldr	x0, [x22]
   23870:	lsl	x19, x3, #5
   23874:	cbz	x0, 238f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d10>
   23878:	sub	x1, x0, #0x1
   2387c:	tst	x1, x0
   23880:	b.ne	23950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d70>  // b.any
   23884:	add	x19, x19, x1
   23888:	neg	x0, x0
   2388c:	and	x19, x19, x0
   23890:	mov	x1, x23
   23894:	mov	w2, #0x0                   	// #0
   23898:	mov	x0, x19
   2389c:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   238a0:	mov	x24, x0
   238a4:	ldr	x1, [x20, #16]
   238a8:	ldr	x2, [x27, #16]
   238ac:	lsl	x2, x2, #5
   238b0:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   238b4:	ldr	x1, [x27, #8]
   238b8:	ldr	x0, [x20, #16]
   238bc:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   238c0:	ldr	x0, [x27, #16]
   238c4:	str	x24, [x20, #16]
   238c8:	str	x19, [x27, #8]
   238cc:	add	x3, x0, #0x1
   238d0:	b	237c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2be4>
   238d4:	mov	x3, x0
   238d8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   238dc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   238e0:	add	x2, x2, #0x1b8
   238e4:	add	x0, x0, #0xf8
   238e8:	mov	w1, #0x1be                 	// #446
   238ec:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   238f0:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   238f4:	str	x0, [x22]
   238f8:	b	23878 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c98>
   238fc:	mov	w25, #0x0                   	// #0
   23900:	b	2374c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b6c>
   23904:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   23908:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2390c:	add	x2, x2, #0x118
   23910:	add	x0, x0, #0xd0
   23914:	mov	x4, #0x0                   	// #0
   23918:	mov	x3, #0x0                   	// #0
   2391c:	mov	w1, #0x6a                  	// #106
   23920:	stp	x21, x22, [sp, #16]
   23924:	stp	x23, x24, [sp, #32]
   23928:	stp	x25, x26, [sp, #48]
   2392c:	str	x27, [sp, #64]
   23930:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23934:	mov	x3, x0
   23938:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   2393c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23940:	add	x2, x2, #0x220
   23944:	add	x0, x0, #0xf8
   23948:	mov	w1, #0x1fd                 	// #509
   2394c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23950:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23954:	add	x0, x0, #0x240
   23958:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   2395c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   23960:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23964:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23968:	add	x2, x2, #0x1d8
   2396c:	add	x0, x0, #0xf8
   23970:	mov	w1, #0x17b                 	// #379
   23974:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23978:	mov	x4, x1
   2397c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23980:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23984:	add	x2, x2, #0x200
   23988:	add	x0, x0, #0xf8
   2398c:	mov	w1, #0x17c                 	// #380
   23990:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23994:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23998:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2399c:	add	x0, x0, #0x130
   239a0:	ldr	x1, [x1, #4008]
   239a4:	ldr	x1, [x1]
   239a8:	bl	1e5c0 <OnPrint@@Base+0x310>
   239ac:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   239b0:	stp	x19, x20, [sp, #-112]!
   239b4:	mov	x19, x1
   239b8:	str	x30, [sp, #64]
   239bc:	ldrb	w1, [x1]
   239c0:	cbnz	w1, 239d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2df0>
   239c4:	ldr	x30, [sp, #64]
   239c8:	ldp	x19, x20, [sp], #112
   239cc:	ret
   239d0:	stp	x21, x22, [sp, #16]
   239d4:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   239d8:	mov	x21, x0
   239dc:	ldr	x20, [x22, #4000]
   239e0:	stp	x23, x24, [sp, #32]
   239e4:	ldr	x2, [x20]
   239e8:	cbz	x2, 23ae0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f00>
   239ec:	sub	x0, x2, #0x1
   239f0:	tst	x0, x2
   239f4:	b.ne	23bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3018>  // b.any
   239f8:	add	x24, x2, #0xfff
   239fc:	neg	x2, x2
   23a00:	and	x24, x24, x2
   23a04:	adrp	x23, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23a08:	mov	w2, #0x0                   	// #0
   23a0c:	add	x1, x23, #0x258
   23a10:	mov	x0, x24
   23a14:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   23a18:	mov	x2, #0x0                   	// #0
   23a1c:	mov	x1, #0x0                   	// #0
   23a20:	mov	x20, x0
   23a24:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   23a28:	mov	x1, #0x0                   	// #0
   23a2c:	mov	x0, #0x0                   	// #0
   23a30:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   23a34:	cmp	x24, #0xfff
   23a38:	b.ls	23b94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fb4>  // b.plast
   23a3c:	mov	x2, #0x1000                	// #4096
   23a40:	mov	w1, #0x0                   	// #0
   23a44:	mov	x0, x20
   23a48:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   23a4c:	strb	wzr, [x20]
   23a50:	mov	x0, x19
   23a54:	bl	19a50 <__sanitizer_set_report_fd@@Base+0x27a0>
   23a58:	tst	w0, #0xff
   23a5c:	b.eq	23af0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f10>  // b.none
   23a60:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23a64:	ldr	x0, [x0, #3680]
   23a68:	ldr	w0, [x0]
   23a6c:	cbnz	w0, 23ac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ee0>
   23a70:	add	x3, sp, #0x68
   23a74:	add	x2, sp, #0x60
   23a78:	add	x1, sp, #0x58
   23a7c:	mov	x0, x19
   23a80:	mov	x5, #0x0                   	// #0
   23a84:	mov	x4, #0x4000000             	// #67108864
   23a88:	bl	16b30 <__sanitizer_cov_dump@@Base+0x2078>
   23a8c:	tst	w0, #0xff
   23a90:	b.eq	23cd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30f0>  // b.none
   23a94:	ldr	x1, [sp, #88]
   23a98:	mov	x0, x21
   23a9c:	bl	23630 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a50>
   23aa0:	mov	x1, x24
   23aa4:	mov	x0, x20
   23aa8:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   23aac:	ldp	x21, x22, [sp, #16]
   23ab0:	ldp	x23, x24, [sp, #32]
   23ab4:	ldr	x30, [sp, #64]
   23ab8:	ldp	x19, x20, [sp], #112
   23abc:	ret
   23ac0:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23ac4:	mov	x2, x19
   23ac8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   23acc:	add	x0, x0, #0x158
   23ad0:	ldr	x1, [x1, #4008]
   23ad4:	ldr	x1, [x1]
   23ad8:	bl	1e5c0 <OnPrint@@Base+0x310>
   23adc:	b	23a70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e90>
   23ae0:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   23ae4:	mov	x2, x0
   23ae8:	str	x0, [x20]
   23aec:	b	239ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e0c>
   23af0:	mov	x0, x19
   23af4:	bl	1c7e0 <__sanitizer_set_report_fd@@Base+0x5530>
   23af8:	tst	w0, #0xff
   23afc:	b.ne	23a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e80>  // b.any
   23b00:	stp	x25, x26, [sp, #48]
   23b04:	ldr	x25, [x22, #4000]
   23b08:	ldr	x0, [x25]
   23b0c:	cbz	x0, 23c18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3038>
   23b10:	sub	x1, x0, #0x1
   23b14:	tst	x1, x0
   23b18:	b.ne	23bfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x301c>  // b.any
   23b1c:	add	x26, x0, #0xfff
   23b20:	neg	x0, x0
   23b24:	and	x26, x26, x0
   23b28:	add	x1, x23, #0x258
   23b2c:	mov	w2, #0x0                   	// #0
   23b30:	mov	x0, x26
   23b34:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   23b38:	mov	x25, x0
   23b3c:	mov	x2, #0x0                   	// #0
   23b40:	mov	x1, #0x0                   	// #0
   23b44:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   23b48:	mov	x1, #0x0                   	// #0
   23b4c:	mov	x0, #0x0                   	// #0
   23b50:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   23b54:	cmp	x26, #0xfff
   23b58:	b.ls	23c68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3088>  // b.plast
   23b5c:	mov	w1, #0x0                   	// #0
   23b60:	mov	x0, x25
   23b64:	mov	x2, #0x1000                	// #4096
   23b68:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   23b6c:	strb	wzr, [x25]
   23b70:	mov	x0, x25
   23b74:	mov	x1, #0x1000                	// #4096
   23b78:	bl	13c60 <__sancov_default_options@@Base+0x3068>
   23b7c:	cbnz	x0, 23c24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3044>
   23b80:	mov	x1, x26
   23b84:	mov	x0, x25
   23b88:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   23b8c:	ldp	x25, x26, [sp, #48]
   23b90:	b	23a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e80>
   23b94:	stp	x25, x26, [sp, #48]
   23b98:	ldr	x25, [x22, #4000]
   23b9c:	ldr	x0, [x25]
   23ba0:	cbz	x0, 23c0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x302c>
   23ba4:	sub	x1, x0, #0x1
   23ba8:	tst	x1, x0
   23bac:	b.ne	23bfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x301c>  // b.any
   23bb0:	add	x25, x0, #0xfff
   23bb4:	neg	x0, x0
   23bb8:	and	x25, x25, x0
   23bbc:	add	x1, x23, #0x258
   23bc0:	mov	x0, x25
   23bc4:	mov	w2, #0x0                   	// #0
   23bc8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   23bcc:	mov	x26, x0
   23bd0:	mov	x2, #0x0                   	// #0
   23bd4:	mov	x1, x20
   23bd8:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   23bdc:	mov	x1, x24
   23be0:	mov	x0, x20
   23be4:	mov	x24, x25
   23be8:	mov	x20, x26
   23bec:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   23bf0:	ldp	x25, x26, [sp, #48]
   23bf4:	b	23a3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e5c>
   23bf8:	stp	x25, x26, [sp, #48]
   23bfc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23c00:	add	x0, x0, #0x240
   23c04:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   23c08:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   23c0c:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   23c10:	str	x0, [x25]
   23c14:	b	23ba4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fc4>
   23c18:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   23c1c:	str	x0, [x25]
   23c20:	b	23b10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f30>
   23c24:	mov	x0, x25
   23c28:	bl	13700 <__sancov_default_options@@Base+0x2b08>
   23c2c:	sub	x2, x0, x25
   23c30:	mov	x22, #0xfff                 	// #4095
   23c34:	cmp	x2, x22
   23c38:	mov	x1, x25
   23c3c:	csel	x2, x2, x22, ls  // ls = plast
   23c40:	mov	x0, x20
   23c44:	bl	18ce8 <__sanitizer_set_report_fd@@Base+0x1a38>
   23c48:	mov	x0, x20
   23c4c:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   23c50:	mov	x1, x19
   23c54:	sub	x2, x22, x0
   23c58:	mov	x19, x20
   23c5c:	mov	x0, x20
   23c60:	bl	18ce8 <__sanitizer_set_report_fd@@Base+0x1a38>
   23c64:	b	23b80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fa0>
   23c68:	ldr	x22, [x22, #4000]
   23c6c:	ldr	x0, [x22]
   23c70:	cbz	x0, 23cc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30e4>
   23c74:	sub	x1, x0, #0x1
   23c78:	tst	x1, x0
   23c7c:	b.ne	23bfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x301c>  // b.any
   23c80:	add	x22, x0, #0xfff
   23c84:	neg	x0, x0
   23c88:	and	x22, x22, x0
   23c8c:	add	x1, x23, #0x258
   23c90:	mov	x0, x22
   23c94:	mov	w2, #0x0                   	// #0
   23c98:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   23c9c:	mov	x23, x0
   23ca0:	mov	x2, #0x0                   	// #0
   23ca4:	mov	x1, x25
   23ca8:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   23cac:	mov	x1, x26
   23cb0:	mov	x0, x25
   23cb4:	mov	x26, x22
   23cb8:	mov	x25, x23
   23cbc:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   23cc0:	b	23b5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f7c>
   23cc4:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   23cc8:	str	x0, [x22]
   23ccc:	b	23c74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3094>
   23cd0:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23cd4:	mov	x2, x19
   23cd8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   23cdc:	add	x0, x0, #0x180
   23ce0:	ldr	x1, [x1, #4008]
   23ce4:	stp	x25, x26, [sp, #48]
   23ce8:	ldr	x1, [x1]
   23cec:	bl	1e5c0 <OnPrint@@Base+0x310>
   23cf0:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   23cf4:	nop
   23cf8:	ldr	x0, [x0, #32]
   23cfc:	ret
   23d00:	stp	x19, x20, [sp, #-48]!
   23d04:	mov	x20, x0
   23d08:	ldr	w0, [x0, #8]
   23d0c:	str	x30, [sp, #32]
   23d10:	cmp	w0, #0x0
   23d14:	b.le	23d6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x318c>
   23d18:	mov	x19, #0x0                   	// #0
   23d1c:	stp	x21, x22, [sp, #16]
   23d20:	mov	x21, x1
   23d24:	b	23d34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3154>
   23d28:	ldr	w0, [x20, #8]
   23d2c:	cmp	w0, w19
   23d30:	b.le	23d68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3188>
   23d34:	ldr	x2, [x20]
   23d38:	mov	w22, w19
   23d3c:	mov	x0, x21
   23d40:	ldr	x1, [x2, x19, lsl #3]
   23d44:	add	x19, x19, #0x1
   23d48:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   23d4c:	cbnz	w0, 23d28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3148>
   23d50:	add	x20, x20, w22, sxtw
   23d54:	ldp	x21, x22, [sp, #16]
   23d58:	ldrb	w0, [x20, #40]
   23d5c:	ldr	x30, [sp, #32]
   23d60:	ldp	x19, x20, [sp], #48
   23d64:	ret
   23d68:	ldp	x21, x22, [sp, #16]
   23d6c:	mov	w0, #0x0                   	// #0
   23d70:	ldr	x30, [sp, #32]
   23d74:	ldp	x19, x20, [sp], #48
   23d78:	ret
   23d7c:	nop
   23d80:	stp	x19, x20, [sp, #-64]!
   23d84:	mov	x20, x0
   23d88:	stp	x21, x22, [sp, #16]
   23d8c:	mov	x21, x2
   23d90:	mov	x22, x1
   23d94:	stp	x23, x24, [sp, #32]
   23d98:	mov	x1, x2
   23d9c:	mov	x23, x3
   23da0:	str	x30, [sp, #48]
   23da4:	strb	wzr, [x0, #72]
   23da8:	bl	23d00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3120>
   23dac:	tst	w0, #0xff
   23db0:	b.eq	23e1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x323c>  // b.none
   23db4:	ldr	x0, [x20, #32]
   23db8:	cbz	x0, 23e1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x323c>
   23dbc:	mov	x19, #0x0                   	// #0
   23dc0:	b	23dd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31f0>
   23dc4:	ldr	x0, [x20, #32]
   23dc8:	cmp	x19, x0
   23dcc:	b.cs	23e1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x323c>  // b.hs, b.nlast
   23dd0:	ldr	x5, [x20, #16]
   23dd4:	lsl	x4, x19, #5
   23dd8:	mov	x1, x21
   23ddc:	add	x19, x19, #0x1
   23de0:	add	x24, x5, x4
   23de4:	ldr	x0, [x5, x4]
   23de8:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   23dec:	cbnz	w0, 23dc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31e4>
   23df0:	ldr	x0, [x24, #8]
   23df4:	mov	x1, x22
   23df8:	bl	13a80 <__sancov_default_options@@Base+0x2e88>
   23dfc:	ands	w0, w0, #0xff
   23e00:	b.eq	23dc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31e4>  // b.none
   23e04:	str	x24, [x23]
   23e08:	ldp	x21, x22, [sp, #16]
   23e0c:	ldp	x23, x24, [sp, #32]
   23e10:	ldr	x30, [sp, #48]
   23e14:	ldp	x19, x20, [sp], #64
   23e18:	ret
   23e1c:	mov	w0, #0x0                   	// #0
   23e20:	ldp	x21, x22, [sp, #16]
   23e24:	ldp	x23, x24, [sp, #32]
   23e28:	ldr	x30, [sp, #48]
   23e2c:	ldp	x19, x20, [sp], #64
   23e30:	ret
   23e34:	nop
   23e38:	ldr	x4, [x0, #32]
   23e3c:	cmp	x1, x4
   23e40:	b.cs	23e50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3270>  // b.hs, b.nlast
   23e44:	ldr	x0, [x0, #16]
   23e48:	add	x0, x0, x1, lsl #5
   23e4c:	ret
   23e50:	str	x30, [sp, #-16]!
   23e54:	mov	x3, x1
   23e58:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   23e5c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   23e60:	add	x2, x2, #0x1b0
   23e64:	add	x0, x0, #0xd0
   23e68:	mov	w1, #0x9e                  	// #158
   23e6c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23e70:	stp	x19, x20, [sp, #-96]!
   23e74:	stp	x21, x22, [sp, #16]
   23e78:	mov	x21, x1
   23e7c:	ldr	x1, [x0, #32]
   23e80:	str	x30, [sp, #64]
   23e84:	cbz	x1, 23f18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3338>
   23e88:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23e8c:	mov	x20, x0
   23e90:	mov	x19, #0x0                   	// #0
   23e94:	stp	x23, x24, [sp, #32]
   23e98:	adrp	x23, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23e9c:	ldr	x22, [x22, #4000]
   23ea0:	add	x23, x23, #0x258
   23ea4:	stp	x25, x26, [sp, #48]
   23ea8:	add	x26, sp, #0x58
   23eac:	b	23ebc <__sanitizer_get_module_and_offset_for_pc@@Base+0x32dc>
   23eb0:	add	x19, x19, #0x1
   23eb4:	cmp	x19, x1
   23eb8:	b.cs	23f10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3330>  // b.hs, b.nlast
   23ebc:	ldr	x2, [x20, #16]
   23ec0:	add	x2, x2, x19, lsl #5
   23ec4:	ldr	w0, [x2, #16]
   23ec8:	cbz	w0, 23eb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32d0>
   23ecc:	ldp	x4, x3, [x21, #8]
   23ed0:	str	x2, [sp, #88]
   23ed4:	lsr	x4, x4, #3
   23ed8:	cmp	x3, x4
   23edc:	b.hi	23fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33f4>  // b.pmore
   23ee0:	add	x24, x3, #0x1
   23ee4:	b.eq	23f28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3348>  // b.none
   23ee8:	ldr	x25, [x21]
   23eec:	str	x24, [x21, #16]
   23ef0:	mov	x1, x26
   23ef4:	add	x0, x25, x3, lsl #3
   23ef8:	mov	x2, #0x8                   	// #8
   23efc:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   23f00:	ldr	x1, [x20, #32]
   23f04:	add	x19, x19, #0x1
   23f08:	cmp	x19, x1
   23f0c:	b.cc	23ebc <__sanitizer_get_module_and_offset_for_pc@@Base+0x32dc>  // b.lo, b.ul, b.last
   23f10:	ldp	x23, x24, [sp, #32]
   23f14:	ldp	x25, x26, [sp, #48]
   23f18:	ldp	x21, x22, [sp, #16]
   23f1c:	ldr	x30, [sp, #64]
   23f20:	ldp	x19, x20, [sp], #96
   23f24:	ret
   23f28:	tst	x3, x24
   23f2c:	b.eq	23f68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3388>  // b.none
   23f30:	clz	x2, x24
   23f34:	mov	w0, #0x3f                  	// #63
   23f38:	sub	w0, w0, w2
   23f3c:	mov	x2, #0x1                   	// #1
   23f40:	add	w4, w0, #0x1
   23f44:	lsl	x4, x2, x4
   23f48:	cmp	x24, x4
   23f4c:	b.cs	23ffc <__sanitizer_get_module_and_offset_for_pc@@Base+0x341c>  // b.hs, b.nlast
   23f50:	lsl	x0, x2, x0
   23f54:	cmp	x24, x0
   23f58:	b.ls	24030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3450>  // b.plast
   23f5c:	cmp	x3, x4
   23f60:	b.hi	24018 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3438>  // b.pmore
   23f64:	mov	x24, x4
   23f68:	ldr	x0, [x22]
   23f6c:	lsl	x24, x24, #3
   23f70:	cbz	x0, 23fc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33e8>
   23f74:	sub	x1, x0, #0x1
   23f78:	tst	x0, x1
   23f7c:	b.ne	23fec <__sanitizer_get_module_and_offset_for_pc@@Base+0x340c>  // b.any
   23f80:	add	x24, x24, x1
   23f84:	neg	x0, x0
   23f88:	and	x24, x24, x0
   23f8c:	mov	x1, x23
   23f90:	mov	x0, x24
   23f94:	mov	w2, #0x0                   	// #0
   23f98:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   23f9c:	mov	x25, x0
   23fa0:	ldr	x1, [x21]
   23fa4:	ldr	x2, [x21, #16]
   23fa8:	lsl	x2, x2, #3
   23fac:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   23fb0:	ldp	x0, x1, [x21]
   23fb4:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   23fb8:	stp	x25, x24, [x21]
   23fbc:	ldr	x3, [x21, #16]
   23fc0:	add	x24, x3, #0x1
   23fc4:	b	23eec <__sanitizer_get_module_and_offset_for_pc@@Base+0x330c>
   23fc8:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   23fcc:	str	x0, [x22]
   23fd0:	b	23f74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3394>
   23fd4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23fd8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23fdc:	add	x2, x2, #0x1b8
   23fe0:	add	x0, x0, #0xf8
   23fe4:	mov	w1, #0x1be                 	// #446
   23fe8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   23fec:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   23ff0:	add	x0, x0, #0x240
   23ff4:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   23ff8:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   23ffc:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   24000:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   24004:	mov	x3, x24
   24008:	add	x2, x2, #0x1d8
   2400c:	add	x0, x0, #0xf8
   24010:	mov	w1, #0x17b                 	// #379
   24014:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   24018:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   2401c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   24020:	add	x2, x2, #0x220
   24024:	add	x0, x0, #0xf8
   24028:	mov	w1, #0x1fd                 	// #509
   2402c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   24030:	mov	x4, x0
   24034:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   24038:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   2403c:	mov	x3, x24
   24040:	add	x2, x2, #0x200
   24044:	add	x0, x0, #0xf8
   24048:	mov	w1, #0x17c                 	// #380
   2404c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   24050:	stp	x19, x30, [sp, #-16]!
   24054:	mov	x19, x0
   24058:	mov	x2, #0x40                  	// #64
   2405c:	mov	w1, #0x0                   	// #0
   24060:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   24064:	mov	x0, #0xffffffffffffffff    	// #-1
   24068:	str	x0, [x19, #40]
   2406c:	ldp	x19, x30, [sp], #16
   24070:	ret
   24074:	nop
   24078:	stp	x19, x30, [sp, #-16]!
   2407c:	mov	x19, x0
   24080:	mov	x1, #0x0                   	// #0
   24084:	ldr	x0, [x0, #8]
   24088:	bl	11290 <__sancov_default_options@@Base+0x698>
   2408c:	ldr	x0, [x19, #32]
   24090:	mov	x1, #0x0                   	// #0
   24094:	bl	11290 <__sancov_default_options@@Base+0x698>
   24098:	ldr	x0, [x19, #48]
   2409c:	mov	x1, #0x0                   	// #0
   240a0:	bl	11290 <__sancov_default_options@@Base+0x698>
   240a4:	mov	x0, x19
   240a8:	mov	x2, #0x40                  	// #64
   240ac:	mov	w1, #0x0                   	// #0
   240b0:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   240b4:	mov	x0, #0xffffffffffffffff    	// #-1
   240b8:	str	x0, [x19, #40]
   240bc:	ldp	x19, x30, [sp], #16
   240c0:	ret
   240c4:	nop
   240c8:	stp	x19, x20, [sp, #-32]!
   240cc:	mov	x19, x0
   240d0:	mov	w20, w3
   240d4:	mov	x0, x1
   240d8:	stp	x21, x30, [sp, #16]
   240dc:	mov	x21, x2
   240e0:	bl	18a68 <__sanitizer_set_report_fd@@Base+0x17b8>
   240e4:	stp	x0, x21, [x19, #8]
   240e8:	str	w20, [x19, #24]
   240ec:	ldp	x21, x30, [sp, #16]
   240f0:	ldp	x19, x20, [sp], #32
   240f4:	ret
   240f8:	stp	x19, x30, [sp, #-16]!
   240fc:	mov	x19, x0
   24100:	mov	x2, #0x40                  	// #64
   24104:	mov	w1, #0x0                   	// #0
   24108:	str	xzr, [x19], #8
   2410c:	mov	x0, x19
   24110:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   24114:	mov	x0, #0xffffffffffffffff    	// #-1
   24118:	str	x0, [x19, #40]
   2411c:	ldp	x19, x30, [sp], #16
   24120:	ret
   24124:	nop
   24128:	stp	x19, x20, [sp, #-32]!
   2412c:	mov	x2, #0x0                   	// #0
   24130:	mov	x1, #0x0                   	// #0
   24134:	stp	x21, x30, [sp, #16]
   24138:	mov	x21, x0
   2413c:	mov	x0, #0x48                  	// #72
   24140:	bl	11038 <__sancov_default_options@@Base+0x440>
   24144:	mov	x20, x0
   24148:	mov	x19, x0
   2414c:	mov	x2, #0x40                  	// #64
   24150:	mov	w1, #0x0                   	// #0
   24154:	str	xzr, [x20], #8
   24158:	mov	x0, x20
   2415c:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   24160:	mov	x0, #0xffffffffffffffff    	// #-1
   24164:	str	x0, [x20, #40]
   24168:	str	x21, [x19, #8]
   2416c:	mov	x0, x19
   24170:	ldp	x21, x30, [sp, #16]
   24174:	ldp	x19, x20, [sp], #32
   24178:	ret
   2417c:	nop
   24180:	stp	x19, x30, [sp, #-16]!
   24184:	mov	x19, x0
   24188:	add	x0, x0, #0x8
   2418c:	bl	24078 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3498>
   24190:	ldr	x0, [x19]
   24194:	cbz	x0, 2419c <__sanitizer_get_module_and_offset_for_pc@@Base+0x35bc>
   24198:	bl	24180 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35a0>
   2419c:	mov	x0, x19
   241a0:	mov	x1, #0x0                   	// #0
   241a4:	ldp	x19, x30, [sp], #16
   241a8:	b	11290 <__sancov_default_options@@Base+0x698>
   241ac:	nop
   241b0:	mov	x2, #0x40                  	// #64
   241b4:	mov	w1, #0x0                   	// #0
   241b8:	b	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   241bc:	nop
   241c0:	stp	x19, x30, [sp, #-16]!
   241c4:	mov	x19, x0
   241c8:	mov	x1, #0x0                   	// #0
   241cc:	ldr	x0, [x0]
   241d0:	bl	11290 <__sancov_default_options@@Base+0x698>
   241d4:	ldr	x0, [x19, #24]
   241d8:	mov	x1, #0x0                   	// #0
   241dc:	bl	11290 <__sancov_default_options@@Base+0x698>
   241e0:	ldr	x0, [x19, #40]
   241e4:	mov	x1, #0x0                   	// #0
   241e8:	bl	11290 <__sancov_default_options@@Base+0x698>
   241ec:	mov	x0, x19
   241f0:	mov	x2, #0x40                  	// #64
   241f4:	ldp	x19, x30, [sp], #16
   241f8:	mov	w1, #0x0                   	// #0
   241fc:	b	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   24200:	strb	wzr, [x0, #104]
   24204:	ret
   24208:	ldr	x3, [x0, #224]
   2420c:	cbz	x3, 24234 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3654>
   24210:	str	x30, [sp, #-16]!
   24214:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   24218:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2421c:	add	x2, x2, #0x1d8
   24220:	add	x0, x0, #0x208
   24224:	mov	x4, #0x0                   	// #0
   24228:	mov	x3, #0x0                   	// #0
   2422c:	mov	w1, #0x4e                  	// #78
   24230:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   24234:	ldr	x3, [x0, #232]
   24238:	cbnz	x3, 24210 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3630>
   2423c:	stp	x1, x2, [x0, #224]
   24240:	ret
   24244:	nop
   24248:	stp	x19, x20, [sp, #-48]!
   2424c:	mov	x20, x0
   24250:	ldr	x0, [x0, #32]
   24254:	stp	x21, x22, [sp, #16]
   24258:	mov	x21, x1
   2425c:	str	x30, [sp, #32]
   24260:	bl	19e28 <__sanitizer_set_report_fd@@Base+0x2b78>
   24264:	ldr	x0, [x20, #24]
   24268:	cbz	x0, 24278 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3698>
   2426c:	mov	x1, x21
   24270:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   24274:	cbz	w0, 24318 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3738>
   24278:	ldr	x0, [x20, #16]
   2427c:	mov	x19, #0x0                   	// #0
   24280:	cbnz	x0, 24298 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36b8>
   24284:	b	242d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36f8>
   24288:	ldr	x0, [x20, #16]
   2428c:	add	x19, x19, #0x1
   24290:	cmp	x19, x0
   24294:	b.cs	242d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36f8>  // b.hs, b.nlast
   24298:	ldr	x0, [x20]
   2429c:	mov	x1, x21
   242a0:	lsl	x22, x19, #3
   242a4:	ldr	x0, [x0, x19, lsl #3]
   242a8:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   242ac:	cbnz	w0, 24288 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36a8>
   242b0:	ldr	x4, [x20, #16]
   242b4:	ldr	x0, [x20]
   242b8:	cmp	x4, x19
   242bc:	b.ls	2440c <__sanitizer_get_module_and_offset_for_pc@@Base+0x382c>  // b.plast
   242c0:	ldr	x0, [x0, x22]
   242c4:	str	x0, [x20, #24]
   242c8:	ldp	x21, x22, [sp, #16]
   242cc:	ldr	x30, [sp, #32]
   242d0:	ldp	x19, x20, [sp], #48
   242d4:	ret
   242d8:	mov	x0, x21
   242dc:	bl	18a68 <__sanitizer_set_report_fd@@Base+0x17b8>
   242e0:	ldp	x4, x3, [x20, #8]
   242e4:	mov	x19, x20
   242e8:	str	x0, [x19, #24]!
   242ec:	lsr	x4, x4, #3
   242f0:	cmp	x3, x4
   242f4:	b.hi	243f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3814>  // b.pmore
   242f8:	add	x21, x3, #0x1
   242fc:	b.eq	2432c <__sanitizer_get_module_and_offset_for_pc@@Base+0x374c>  // b.none
   24300:	ldr	x22, [x20]
   24304:	str	x21, [x20, #16]
   24308:	mov	x1, x19
   2430c:	add	x0, x22, x3, lsl #3
   24310:	mov	x2, #0x8                   	// #8
   24314:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   24318:	ldp	x21, x22, [sp, #16]
   2431c:	ldr	x0, [x20, #24]
   24320:	ldr	x30, [sp, #32]
   24324:	ldp	x19, x20, [sp], #48
   24328:	ret
   2432c:	tst	x3, x21
   24330:	b.eq	2436c <__sanitizer_get_module_and_offset_for_pc@@Base+0x378c>  // b.none
   24334:	clz	x2, x21
   24338:	mov	w1, #0x3f                  	// #63
   2433c:	sub	w1, w1, w2
   24340:	mov	x2, #0x1                   	// #1
   24344:	add	w4, w1, #0x1
   24348:	lsl	x4, x2, x4
   2434c:	cmp	x4, x21
   24350:	b.ls	243d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37f8>  // b.plast
   24354:	lsl	x1, x2, x1
   24358:	cmp	x1, x21
   2435c:	b.cs	2445c <__sanitizer_get_module_and_offset_for_pc@@Base+0x387c>  // b.hs, b.nlast
   24360:	cmp	x3, x4
   24364:	b.hi	24434 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3854>  // b.pmore
   24368:	mov	x21, x4
   2436c:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   24370:	lsl	x21, x21, #3
   24374:	ldr	x22, [x22, #4000]
   24378:	ldr	x0, [x22]
   2437c:	cbz	x0, 24428 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3848>
   24380:	sub	x1, x0, #0x1
   24384:	tst	x1, x0
   24388:	b.ne	2444c <__sanitizer_get_module_and_offset_for_pc@@Base+0x386c>  // b.any
   2438c:	add	x21, x21, x1
   24390:	neg	x0, x0
   24394:	and	x21, x21, x0
   24398:	mov	w2, #0x0                   	// #0
   2439c:	mov	x0, x21
   243a0:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   243a4:	add	x1, x1, #0x258
   243a8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   243ac:	ldr	x1, [x20]
   243b0:	mov	x22, x0
   243b4:	ldr	x2, [x20, #16]
   243b8:	lsl	x2, x2, #3
   243bc:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   243c0:	ldp	x0, x1, [x20]
   243c4:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   243c8:	stp	x22, x21, [x20]
   243cc:	ldr	x3, [x20, #16]
   243d0:	add	x21, x3, #0x1
   243d4:	b	24304 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3724>
   243d8:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   243dc:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   243e0:	mov	x3, x21
   243e4:	add	x2, x2, #0x1d8
   243e8:	add	x0, x0, #0xf8
   243ec:	mov	w1, #0x17b                 	// #379
   243f0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   243f4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   243f8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   243fc:	add	x2, x2, #0x1b8
   24400:	add	x0, x0, #0xf8
   24404:	mov	w1, #0x1be                 	// #446
   24408:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2440c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   24410:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   24414:	mov	x3, x19
   24418:	add	x2, x2, #0xe0
   2441c:	add	x0, x0, #0xf8
   24420:	mov	w1, #0x1b6                 	// #438
   24424:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   24428:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   2442c:	str	x0, [x22]
   24430:	b	24380 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37a0>
   24434:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   24438:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   2443c:	add	x2, x2, #0x220
   24440:	add	x0, x0, #0xf8
   24444:	mov	w1, #0x1fd                 	// #509
   24448:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2444c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   24450:	add	x0, x0, #0x240
   24454:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   24458:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   2445c:	mov	x4, x1
   24460:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   24464:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   24468:	mov	x3, x21
   2446c:	add	x2, x2, #0x200
   24470:	add	x0, x0, #0xf8
   24474:	mov	w1, #0x17c                 	// #380
   24478:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2447c:	nop
   24480:	stp	x19, x20, [sp, #-64]!
   24484:	mov	x19, x0
   24488:	stp	x23, x24, [sp, #32]
   2448c:	adrp	x23, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   24490:	ldr	x20, [x23, #4000]
   24494:	stp	x21, x22, [sp, #16]
   24498:	mov	x21, x1
   2449c:	stp	x25, x30, [sp, #48]
   244a0:	stp	xzr, xzr, [x0]
   244a4:	ldr	x0, [x20]
   244a8:	str	xzr, [x19, #16]
   244ac:	cbz	x0, 245b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x39d4>
   244b0:	sub	x1, x0, #0x1
   244b4:	tst	x1, x0
   244b8:	b.ne	245c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x39e0>  // b.any
   244bc:	add	x20, x0, #0x7
   244c0:	neg	x0, x0
   244c4:	and	x20, x20, x0
   244c8:	mov	w2, #0x0                   	// #0
   244cc:	mov	x0, x20
   244d0:	adrp	x25, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   244d4:	add	x1, x25, #0x258
   244d8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   244dc:	ldr	x1, [x19]
   244e0:	mov	x22, x0
   244e4:	ldr	x2, [x19, #16]
   244e8:	add	x24, x19, #0x70
   244ec:	lsl	x2, x2, #3
   244f0:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   244f4:	ldp	x0, x1, [x19]
   244f8:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   244fc:	stp	x22, x20, [x19]
   24500:	lsr	x0, x20, #3
   24504:	stp	xzr, x24, [x19, #24]
   24508:	cmp	x0, #0x3e7
   2450c:	b.ls	2454c <__sanitizer_get_module_and_offset_for_pc@@Base+0x396c>  // b.plast
   24510:	strb	wzr, [x19, #64]
   24514:	mov	x0, x24
   24518:	strb	wzr, [x19, #96]
   2451c:	strb	wzr, [x19, #104]
   24520:	bl	19d10 <__sanitizer_set_report_fd@@Base+0x2a60>
   24524:	ldp	x0, x1, [x21]
   24528:	stp	x0, x1, [x19, #200]
   2452c:	ldr	x0, [x21, #16]
   24530:	ldp	x21, x22, [sp, #16]
   24534:	ldp	x23, x24, [sp, #32]
   24538:	ldp	x25, x30, [sp, #48]
   2453c:	stp	x0, xzr, [x19, #216]
   24540:	str	xzr, [x19, #232]
   24544:	ldp	x19, x20, [sp], #64
   24548:	ret
   2454c:	ldr	x3, [x19, #16]
   24550:	cmp	x3, #0x3e8
   24554:	b.hi	245dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x39fc>  // b.pmore
   24558:	ldr	x23, [x23, #4000]
   2455c:	ldr	x0, [x23]
   24560:	cbz	x0, 245d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x39f0>
   24564:	sub	x1, x0, #0x1
   24568:	tst	x1, x0
   2456c:	b.ne	245c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x39e0>  // b.any
   24570:	mov	x1, #0x1f3f                	// #7999
   24574:	add	x20, x0, x1
   24578:	neg	x0, x0
   2457c:	add	x1, x25, #0x258
   24580:	and	x20, x20, x0
   24584:	mov	w2, #0x0                   	// #0
   24588:	mov	x0, x20
   2458c:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   24590:	ldr	x1, [x19]
   24594:	mov	x22, x0
   24598:	ldr	x2, [x19, #16]
   2459c:	lsl	x2, x2, #3
   245a0:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   245a4:	ldp	x0, x1, [x19]
   245a8:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   245ac:	stp	x22, x20, [x19]
   245b0:	b	24510 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3930>
   245b4:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   245b8:	str	x0, [x20]
   245bc:	b	244b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38d0>
   245c0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   245c4:	add	x0, x0, #0x240
   245c8:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   245cc:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   245d0:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   245d4:	str	x0, [x23]
   245d8:	b	24564 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3984>
   245dc:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   245e0:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   245e4:	add	x2, x2, #0x220
   245e8:	add	x0, x0, #0xf8
   245ec:	mov	x4, #0x3e8                 	// #1000
   245f0:	mov	w1, #0x1fd                 	// #509
   245f4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   245f8:	str	x1, [x0]
   245fc:	ldr	x0, [x1, #224]
   24600:	cbz	x0, 2460c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a2c>
   24604:	mov	x16, x0
   24608:	br	x16
   2460c:	ret
   24610:	ldr	x0, [x0]
   24614:	ldr	x0, [x0, #232]
   24618:	cbz	x0, 24624 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a44>
   2461c:	mov	x16, x0
   24620:	br	x16
   24624:	ret
   24628:	ret
   2462c:	nop
   24630:	stp	x19, x20, [sp, #-80]!
   24634:	mov	x20, x0
   24638:	mov	x5, x2
   2463c:	ldr	x0, [x0, #16]
   24640:	adrp	x19, 24000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3420>
   24644:	add	x19, x19, #0x628
   24648:	stp	x21, x22, [sp, #16]
   2464c:	add	x22, sp, #0x38
   24650:	mov	x3, x19
   24654:	mov	x21, x1
   24658:	mov	x4, x22
   2465c:	adrp	x2, 24000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3420>
   24660:	add	x2, x2, #0x870
   24664:	str	x30, [sp, #32]
   24668:	stp	x5, x5, [sp, #56]
   2466c:	str	xzr, [sp, #72]
   24670:	bl	6700 <__asan_backtrace_pcinfo@plt>
   24674:	ldr	x0, [sp, #72]
   24678:	cbz	x0, 24690 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ab0>
   2467c:	mov	w0, #0x1                   	// #1
   24680:	ldp	x21, x22, [sp, #16]
   24684:	ldr	x30, [sp, #32]
   24688:	ldp	x19, x20, [sp], #80
   2468c:	ret
   24690:	ldr	x0, [x20, #16]
   24694:	mov	x4, x22
   24698:	mov	x3, x19
   2469c:	mov	x1, x21
   246a0:	adrp	x2, 24000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3420>
   246a4:	add	x2, x2, #0x9f0
   246a8:	bl	6850 <__asan_backtrace_syminfo@plt>
   246ac:	ldr	x0, [sp, #72]
   246b0:	ldp	x21, x22, [sp, #16]
   246b4:	cmp	x0, #0x0
   246b8:	cset	w0, ne  // ne = any
   246bc:	ldr	x30, [sp, #32]
   246c0:	ldp	x19, x20, [sp], #80
   246c4:	ret
   246c8:	ldr	x0, [x0, #16]
   246cc:	str	x30, [sp, #-16]!
   246d0:	mov	x4, x2
   246d4:	adrp	x3, 24000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3420>
   246d8:	adrp	x2, 24000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3420>
   246dc:	add	x3, x3, #0x628
   246e0:	add	x2, x2, #0x9a8
   246e4:	bl	6850 <__asan_backtrace_syminfo@plt>
   246e8:	mov	w0, #0x1                   	// #1
   246ec:	ldr	x30, [sp], #16
   246f0:	ret
   246f4:	nop
   246f8:	stp	x19, x20, [sp, #-48]!
   246fc:	mov	x19, x2
   24700:	mov	x20, x1
   24704:	add	x2, x1, #0x1
   24708:	stp	x21, x22, [sp, #16]
   2470c:	mov	x21, x0
   24710:	ldp	x3, x1, [x19, #8]
   24714:	str	x30, [sp, #32]
   24718:	add	x0, x2, x3
   2471c:	cmp	x1, x0
   24720:	b.cc	24760 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b80>  // b.lo, b.ul, b.last
   24724:	ldr	x22, [x19]
   24728:	mov	x1, x21
   2472c:	add	x0, x22, x3
   24730:	mov	x2, x20
   24734:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   24738:	ldp	x0, x1, [x19]
   2473c:	add	x0, x0, x20
   24740:	strb	wzr, [x0, x1]
   24744:	ldr	x1, [x19, #8]
   24748:	ldp	x21, x22, [sp, #16]
   2474c:	add	x20, x1, x20
   24750:	ldr	x30, [sp, #32]
   24754:	str	x20, [x19, #8]
   24758:	ldp	x19, x20, [sp], #48
   2475c:	ret
   24760:	cmp	x0, x1, lsl #1
   24764:	lsl	x1, x1, #1
   24768:	b.hi	247ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bcc>  // b.pmore
   2476c:	mov	x0, x1
   24770:	str	x1, [x19, #16]
   24774:	mov	x1, #0x0                   	// #0
   24778:	mov	x2, #0x0                   	// #0
   2477c:	bl	11038 <__sancov_default_options@@Base+0x440>
   24780:	mov	x22, x0
   24784:	ldr	x1, [x19]
   24788:	cbz	x1, 247a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bc0>
   2478c:	ldr	x2, [x19, #8]
   24790:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   24794:	ldr	x0, [x19]
   24798:	mov	x1, #0x0                   	// #0
   2479c:	bl	11290 <__sancov_default_options@@Base+0x698>
   247a0:	str	x22, [x19]
   247a4:	ldr	x3, [x19, #8]
   247a8:	b	24728 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b48>
   247ac:	str	x0, [x19, #16]
   247b0:	b	24774 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b94>
   247b4:	nop
   247b8:	stp	x19, x20, [sp, #-64]!
   247bc:	adrp	x2, 24000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3420>
   247c0:	mov	x20, x0
   247c4:	add	x3, sp, #0x28
   247c8:	add	x2, x2, #0x6f8
   247cc:	stp	x21, x30, [sp, #16]
   247d0:	and	w21, w1, #0xff
   247d4:	mov	w1, #0x3                   	// #3
   247d8:	stp	xzr, xzr, [sp, #40]
   247dc:	str	xzr, [sp, #56]
   247e0:	bl	6d00 <__asan_cplus_demangle_v3_callback@plt>
   247e4:	cbz	w0, 24810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c30>
   247e8:	ldp	x19, x0, [sp, #40]
   247ec:	ldr	x1, [sp, #56]
   247f0:	add	x0, x0, #0x40
   247f4:	cmp	x0, x1
   247f8:	b.ls	24844 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c64>  // b.plast
   247fc:	cbz	x19, 24820 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c40>
   24800:	mov	x0, x19
   24804:	ldp	x21, x30, [sp, #16]
   24808:	ldp	x19, x20, [sp], #64
   2480c:	ret
   24810:	ldr	x0, [sp, #40]
   24814:	cbz	x0, 24820 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c40>
   24818:	mov	x1, #0x0                   	// #0
   2481c:	bl	11290 <__sancov_default_options@@Base+0x698>
   24820:	mov	x19, #0x0                   	// #0
   24824:	cbz	w21, 24800 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c20>
   24828:	mov	x0, x20
   2482c:	bl	18a68 <__sanitizer_set_report_fd@@Base+0x17b8>
   24830:	mov	x19, x0
   24834:	mov	x0, x19
   24838:	ldp	x21, x30, [sp, #16]
   2483c:	ldp	x19, x20, [sp], #64
   24840:	ret
   24844:	mov	x0, x19
   24848:	bl	18a68 <__sanitizer_set_report_fd@@Base+0x17b8>
   2484c:	mov	x19, x0
   24850:	mov	x1, #0x0                   	// #0
   24854:	ldr	x0, [sp, #40]
   24858:	bl	11290 <__sancov_default_options@@Base+0x698>
   2485c:	b	247fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c1c>
   24860:	mov	x0, x1
   24864:	mov	w1, #0x0                   	// #0
   24868:	b	247b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bd8>
   2486c:	nop
   24870:	cbz	x4, 24910 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d30>
   24874:	stp	x19, x20, [sp, #-64]!
   24878:	mov	x19, x0
   2487c:	stp	x21, x22, [sp, #16]
   24880:	mov	x21, x1
   24884:	ldr	x1, [x0, #8]
   24888:	stp	x23, x24, [sp, #32]
   2488c:	str	x30, [sp, #48]
   24890:	cbz	x1, 24918 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d38>
   24894:	ldr	x0, [x0, #16]
   24898:	mov	x22, x2
   2489c:	mov	w23, w3
   248a0:	mov	x20, x4
   248a4:	cbnz	x0, 24938 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d58>
   248a8:	ldr	x0, [x19]
   248ac:	ldr	x4, [x0, #8]
   248b0:	cmp	x21, x4
   248b4:	b.ne	2496c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d8c>  // b.any
   248b8:	ldr	x4, [x1, #8]
   248bc:	cmp	x21, x4
   248c0:	b.ne	24988 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3da8>  // b.any
   248c4:	add	x21, x1, #0x8
   248c8:	mov	x0, x20
   248cc:	mov	w1, #0x1                   	// #1
   248d0:	bl	247b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bd8>
   248d4:	str	x0, [x21, #32]
   248d8:	cbz	x22, 248e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d08>
   248dc:	mov	x0, x22
   248e0:	bl	18a68 <__sanitizer_set_report_fd@@Base+0x17b8>
   248e4:	str	x0, [x21, #48]
   248e8:	ldr	x0, [x19, #16]
   248ec:	ldr	x30, [sp, #48]
   248f0:	str	w23, [x21, #56]
   248f4:	add	x0, x0, #0x1
   248f8:	ldp	x21, x22, [sp, #16]
   248fc:	ldp	x23, x24, [sp, #32]
   24900:	str	x0, [x19, #16]
   24904:	mov	w0, #0x0                   	// #0
   24908:	ldp	x19, x20, [sp], #64
   2490c:	ret
   24910:	mov	w0, #0x0                   	// #0
   24914:	ret
   24918:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2491c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   24920:	add	x2, x2, #0x250
   24924:	add	x0, x0, #0x260
   24928:	mov	x4, #0x0                   	// #0
   2492c:	mov	x3, #0x0                   	// #0
   24930:	mov	w1, #0x5c                  	// #92
   24934:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   24938:	mov	x0, x21
   2493c:	bl	24128 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3548>
   24940:	ldr	x3, [x19]
   24944:	mov	x24, x0
   24948:	add	x0, x0, #0x8
   2494c:	ldp	x1, x2, [x3, #16]
   24950:	ldr	w3, [x3, #32]
   24954:	bl	240c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34e8>
   24958:	ldr	x1, [x19, #8]
   2495c:	str	x24, [x1]
   24960:	mov	x1, x24
   24964:	str	x24, [x19, #8]
   24968:	b	248a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cc8>
   2496c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   24970:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   24974:	mov	x3, x21
   24978:	add	x2, x2, #0x2b0
   2497c:	add	x0, x0, #0x260
   24980:	mov	w1, #0x65                  	// #101
   24984:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   24988:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2498c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   24990:	mov	x3, x21
   24994:	add	x2, x2, #0x2d8
   24998:	add	x0, x0, #0x260
   2499c:	mov	w1, #0x66                  	// #102
   249a0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   249a4:	nop
   249a8:	cmp	x2, #0x0
   249ac:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   249b0:	b.ne	249b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd8>  // b.any
   249b4:	ret
   249b8:	stp	x19, x20, [sp, #-32]!
   249bc:	mov	x20, x0
   249c0:	mov	x19, x3
   249c4:	mov	x0, x2
   249c8:	mov	w1, #0x1                   	// #1
   249cc:	stp	x21, x30, [sp, #16]
   249d0:	mov	x21, x4
   249d4:	bl	247b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bd8>
   249d8:	stp	x0, x19, [x20, #40]
   249dc:	str	x21, [x20, #56]
   249e0:	ldp	x21, x30, [sp, #16]
   249e4:	ldp	x19, x20, [sp], #32
   249e8:	ret
   249ec:	nop
   249f0:	cbz	x2, 24a64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e84>
   249f4:	stp	x19, x20, [sp, #-48]!
   249f8:	mov	x19, x0
   249fc:	stp	x21, x22, [sp, #16]
   24a00:	ldr	x22, [x0, #8]
   24a04:	str	x30, [sp, #40]
   24a08:	cbz	x22, 24a68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e88>
   24a0c:	ldr	x0, [x0, #16]
   24a10:	mov	x21, x1
   24a14:	mov	x20, x2
   24a18:	cbnz	x0, 24a8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3eac>
   24a1c:	ldr	x0, [x19]
   24a20:	ldr	x4, [x0, #8]
   24a24:	cmp	x21, x4
   24a28:	b.ne	24ac8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ee8>  // b.any
   24a2c:	ldr	x4, [x22, #8]
   24a30:	cmp	x21, x4
   24a34:	b.ne	24ae8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f08>  // b.any
   24a38:	mov	x0, x20
   24a3c:	mov	w1, #0x1                   	// #1
   24a40:	bl	247b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bd8>
   24a44:	ldr	x1, [x19, #16]
   24a48:	ldr	x30, [sp, #40]
   24a4c:	str	x0, [x22, #40]
   24a50:	add	x1, x1, #0x1
   24a54:	ldp	x21, x22, [sp, #16]
   24a58:	str	x1, [x19, #16]
   24a5c:	ldp	x19, x20, [sp], #48
   24a60:	ret
   24a64:	ret
   24a68:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   24a6c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   24a70:	add	x2, x2, #0x250
   24a74:	add	x0, x0, #0x260
   24a78:	mov	x4, #0x0                   	// #0
   24a7c:	mov	x3, #0x0                   	// #0
   24a80:	mov	w1, #0x5c                  	// #92
   24a84:	str	x23, [sp, #32]
   24a88:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   24a8c:	mov	x0, x1
   24a90:	str	x23, [sp, #32]
   24a94:	bl	24128 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3548>
   24a98:	mov	x23, x0
   24a9c:	ldr	x3, [x19]
   24aa0:	add	x0, x0, #0x8
   24aa4:	ldp	x1, x2, [x3, #16]
   24aa8:	ldr	w3, [x3, #32]
   24aac:	bl	240c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34e8>
   24ab0:	ldr	x22, [x19, #8]
   24ab4:	str	x23, [x22]
   24ab8:	mov	x22, x23
   24abc:	ldr	x23, [sp, #32]
   24ac0:	str	x22, [x19, #8]
   24ac4:	b	24a1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e3c>
   24ac8:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   24acc:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   24ad0:	mov	x3, x21
   24ad4:	add	x2, x2, #0x2b0
   24ad8:	add	x0, x0, #0x260
   24adc:	mov	w1, #0x65                  	// #101
   24ae0:	str	x23, [sp, #32]
   24ae4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   24ae8:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   24aec:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   24af0:	mov	x3, x21
   24af4:	add	x2, x2, #0x2d8
   24af8:	add	x0, x0, #0x260
   24afc:	mov	w1, #0x66                  	// #102
   24b00:	str	x23, [sp, #32]
   24b04:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   24b08:	stp	x19, x20, [sp, #-32]!
   24b0c:	adrp	x2, 24000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3420>
   24b10:	mov	x20, x0
   24b14:	add	x2, x2, #0x628
   24b18:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   24b1c:	mov	x3, #0x0                   	// #0
   24b20:	add	x0, x0, #0x508
   24b24:	mov	w1, #0x0                   	// #0
   24b28:	str	x30, [sp, #16]
   24b2c:	bl	69c0 <__asan_backtrace_create_state@plt>
   24b30:	cbz	x0, 24b60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f80>
   24b34:	mov	x19, x0
   24b38:	mov	x1, #0x18                  	// #24
   24b3c:	mov	x0, x20
   24b40:	bl	10e80 <__sancov_default_options@@Base+0x288>
   24b44:	adrp	x1, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   24b48:	add	x1, x1, #0xce8
   24b4c:	stp	x1, xzr, [x0]
   24b50:	str	x19, [x0, #16]
   24b54:	ldr	x30, [sp, #16]
   24b58:	ldp	x19, x20, [sp], #32
   24b5c:	ret
   24b60:	mov	x0, #0x0                   	// #0
   24b64:	ldr	x30, [sp, #16]
   24b68:	ldp	x19, x20, [sp], #32
   24b6c:	ret
   24b70:	ret
   24b74:	nop
   24b78:	stp	x19, x20, [sp, #-48]!
   24b7c:	stp	x21, x22, [sp, #16]
   24b80:	mov	x21, x0
   24b84:	ldr	x0, [x0, #16]
   24b88:	str	x30, [sp, #32]
   24b8c:	cbz	x0, 24bf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4010>
   24b90:	mov	x22, x1
   24b94:	mov	x19, #0x0                   	// #0
   24b98:	mov	x20, #0x0                   	// #0
   24b9c:	b	24bb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fd4>
   24ba0:	ldr	x0, [x21, #16]
   24ba4:	add	x20, x20, #0x1
   24ba8:	add	x19, x19, #0x48
   24bac:	cmp	x20, x0
   24bb0:	b.cs	24bf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4010>  // b.hs, b.nlast
   24bb4:	ldr	x0, [x21]
   24bb8:	mov	x1, x22
   24bbc:	add	x0, x0, x19
   24bc0:	bl	139a8 <__sancov_default_options@@Base+0x2db0>
   24bc4:	tst	w0, #0xff
   24bc8:	b.eq	24ba0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fc0>  // b.none
   24bcc:	ldr	x4, [x21, #16]
   24bd0:	cmp	x4, x20
   24bd4:	b.ls	24c04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4024>  // b.plast
   24bd8:	ldr	x0, [x21]
   24bdc:	ldp	x21, x22, [sp, #16]
   24be0:	add	x0, x0, x19
   24be4:	ldr	x30, [sp, #32]
   24be8:	ldp	x19, x20, [sp], #48
   24bec:	ret
   24bf0:	mov	x0, #0x0                   	// #0
   24bf4:	ldp	x21, x22, [sp, #16]
   24bf8:	ldr	x30, [sp, #32]
   24bfc:	ldp	x19, x20, [sp], #48
   24c00:	ret
   24c04:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   24c08:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   24c0c:	mov	x3, x20
   24c10:	add	x2, x2, #0x3b0
   24c14:	add	x0, x0, #0xf8
   24c18:	mov	w1, #0x2f9                 	// #761
   24c1c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   24c20:	stp	x19, x20, [sp, #-96]!
   24c24:	mov	x19, #0x0                   	// #0
   24c28:	stp	x21, x22, [sp, #16]
   24c2c:	mov	x22, x0
   24c30:	mov	x21, x1
   24c34:	stp	x23, x24, [sp, #32]
   24c38:	adrp	x24, 25000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4420>
   24c3c:	mov	x23, x2
   24c40:	add	x24, x24, #0xc70
   24c44:	stp	x25, x26, [sp, #48]
   24c48:	sub	x26, x2, #0x1
   24c4c:	add	x25, sp, #0x58
   24c50:	str	x30, [sp, #64]
   24c54:	b	24c78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4098>
   24c58:	cmp	x19, #0x1
   24c5c:	b.ls	24c6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x408c>  // b.plast
   24c60:	ldurb	w0, [x1, #-1]
   24c64:	cmp	w0, #0xa
   24c68:	b.eq	24cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4118>  // b.none
   24c6c:	add	x0, x19, #0x1
   24c70:	cmp	x23, x0
   24c74:	b.eq	24d40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4160>  // b.none
   24c78:	ldr	w0, [x22, #16]
   24c7c:	mov	x3, x25
   24c80:	sub	x2, x26, x19
   24c84:	add	x1, x21, x19
   24c88:	mov	x4, #0x0                   	// #0
   24c8c:	str	xzr, [sp, #88]
   24c90:	bl	1c378 <__sanitizer_set_report_fd@@Base+0x50c8>
   24c94:	ands	w20, w0, #0xff
   24c98:	b.eq	24d10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4130>  // b.none
   24c9c:	ldr	x3, [sp, #88]
   24ca0:	add	x19, x19, x3
   24ca4:	add	x1, x21, x19
   24ca8:	cbz	x3, 24d10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4130>
   24cac:	ldr	x0, [x22]
   24cb0:	ldr	x3, [x0]
   24cb4:	cmp	x3, x24
   24cb8:	b.eq	24c58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4078>  // b.none
   24cbc:	mov	x2, x19
   24cc0:	mov	x1, x21
   24cc4:	mov	x0, x22
   24cc8:	blr	x3
   24ccc:	tst	w0, #0xff
   24cd0:	b.eq	24c6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x408c>  // b.none
   24cd4:	add	x21, x21, x19
   24cd8:	strb	wzr, [x21]
   24cdc:	mov	w0, w20
   24ce0:	ldp	x21, x22, [sp, #16]
   24ce4:	ldp	x23, x24, [sp, #32]
   24ce8:	ldp	x25, x26, [sp, #48]
   24cec:	ldr	x30, [sp, #64]
   24cf0:	ldp	x19, x20, [sp], #96
   24cf4:	ret
   24cf8:	ldurb	w0, [x1, #-2]
   24cfc:	cmp	w0, #0xa
   24d00:	b.ne	24c6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x408c>  // b.any
   24d04:	mov	x21, x1
   24d08:	strb	wzr, [x21]
   24d0c:	b	24cdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x40fc>
   24d10:	ldr	w1, [x22, #16]
   24d14:	mov	w20, #0x0                   	// #0
   24d18:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   24d1c:	add	x0, x0, #0x3d0
   24d20:	bl	1e648 <OnPrint@@Base+0x398>
   24d24:	mov	w0, w20
   24d28:	ldp	x21, x22, [sp, #16]
   24d2c:	ldp	x23, x24, [sp, #32]
   24d30:	ldp	x25, x26, [sp, #48]
   24d34:	ldr	x30, [sp, #64]
   24d38:	ldp	x19, x20, [sp], #96
   24d3c:	ret
   24d40:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   24d44:	add	x0, x0, #0x400
   24d48:	bl	1e648 <OnPrint@@Base+0x398>
   24d4c:	strb	wzr, [x21]
   24d50:	b	24cdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x40fc>
   24d54:	nop
   24d58:	cbz	x2, 24d60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4180>
   24d5c:	b	24c20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4040>
   24d60:	mov	w0, #0x1                   	// #1
   24d64:	ret
   24d68:	stp	x19, x20, [sp, #-32]!
   24d6c:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   24d70:	mov	w2, #0x1                   	// #1
   24d74:	ldr	x0, [x19, #3832]
   24d78:	str	x30, [sp, #16]
   24d7c:	ldxrb	w1, [x0]
   24d80:	stxrb	w3, w2, [x0]
   24d84:	cbnz	w3, 24d7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x419c>
   24d88:	dmb	ish
   24d8c:	tst	w1, #0xff
   24d90:	b.eq	24d98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41b8>  // b.none
   24d94:	bl	d818 <__sanitizer_get_allocated_size@@Base+0x1ce8>
   24d98:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   24d9c:	ldr	x20, [x20, #3744]
   24da0:	ldr	x0, [x20]
   24da4:	cbz	x0, 24dc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41e0>
   24da8:	dmb	ish
   24dac:	ldr	x19, [x19, #3832]
   24db0:	strb	wzr, [x19]
   24db4:	ldr	x30, [sp, #16]
   24db8:	ldp	x19, x20, [sp], #32
   24dbc:	ret
   24dc0:	bl	26178 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5598>
   24dc4:	str	x0, [x20]
   24dc8:	cbnz	x0, 24da8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41c8>
   24dcc:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   24dd0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   24dd4:	add	x2, x2, #0x428
   24dd8:	add	x0, x0, #0x440
   24ddc:	mov	x4, #0x0                   	// #0
   24de0:	mov	x3, #0x0                   	// #0
   24de4:	mov	w1, #0x17                  	// #23
   24de8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   24dec:	nop
   24df0:	stp	x19, x20, [sp, #-32]!
   24df4:	mov	x20, x0
   24df8:	stp	x21, x30, [sp, #16]
   24dfc:	mov	x21, x2
   24e00:	bl	18a10 <__sanitizer_set_report_fd@@Base+0x1760>
   24e04:	mov	x2, #0x0                   	// #0
   24e08:	mov	x19, x0
   24e0c:	mov	x1, #0x0                   	// #0
   24e10:	add	x0, x0, #0x1
   24e14:	bl	11038 <__sancov_default_options@@Base+0x440>
   24e18:	str	x0, [x21]
   24e1c:	mov	x2, x19
   24e20:	mov	x1, x20
   24e24:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   24e28:	ldr	x1, [x21]
   24e2c:	add	x0, x20, x19
   24e30:	strb	wzr, [x1, x19]
   24e34:	ldrb	w1, [x20, x19]
   24e38:	ldp	x21, x30, [sp, #16]
   24e3c:	cmp	w1, #0x0
   24e40:	cinc	x0, x0, ne  // ne = any
   24e44:	ldp	x19, x20, [sp], #32
   24e48:	ret
   24e4c:	nop
   24e50:	stp	x19, x20, [sp, #-48]!
   24e54:	mov	x20, x2
   24e58:	add	x2, sp, #0x28
   24e5c:	str	x30, [sp, #16]
   24e60:	bl	24df0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4210>
   24e64:	mov	x19, x0
   24e68:	ldr	x0, [sp, #40]
   24e6c:	cbz	x0, 24e7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x429c>
   24e70:	bl	19028 <__sanitizer_set_report_fd@@Base+0x1d78>
   24e74:	str	w0, [x20]
   24e78:	ldr	x0, [sp, #40]
   24e7c:	mov	x1, #0x0                   	// #0
   24e80:	bl	11290 <__sancov_default_options@@Base+0x698>
   24e84:	mov	x0, x19
   24e88:	ldr	x30, [sp, #16]
   24e8c:	ldp	x19, x20, [sp], #48
   24e90:	ret
   24e94:	nop
   24e98:	stp	x19, x20, [sp, #-48]!
   24e9c:	mov	x20, x2
   24ea0:	add	x2, sp, #0x28
   24ea4:	str	x30, [sp, #16]
   24ea8:	bl	24df0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4210>
   24eac:	mov	x19, x0
   24eb0:	ldr	x0, [sp, #40]
   24eb4:	cbz	x0, 24ec4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42e4>
   24eb8:	bl	19028 <__sanitizer_set_report_fd@@Base+0x1d78>
   24ebc:	str	x0, [x20]
   24ec0:	ldr	x0, [sp, #40]
   24ec4:	mov	x1, #0x0                   	// #0
   24ec8:	bl	11290 <__sancov_default_options@@Base+0x698>
   24ecc:	mov	x0, x19
   24ed0:	ldr	x30, [sp, #16]
   24ed4:	ldp	x19, x20, [sp], #48
   24ed8:	ret
   24edc:	nop
   24ee0:	stp	x19, x20, [sp, #-48]!
   24ee4:	mov	x20, x0
   24ee8:	stp	x21, x22, [sp, #16]
   24eec:	mov	x21, x2
   24ef0:	stp	x23, x30, [sp, #32]
   24ef4:	mov	x23, x1
   24ef8:	bl	18e60 <__sanitizer_set_report_fd@@Base+0x1bb0>
   24efc:	cbz	x0, 24f6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x438c>
   24f00:	mov	x19, x0
   24f04:	sub	x22, x0, x20
   24f08:	mov	x2, #0x0                   	// #0
   24f0c:	mov	x1, #0x0                   	// #0
   24f10:	add	x0, x22, #0x1
   24f14:	bl	11038 <__sancov_default_options@@Base+0x440>
   24f18:	str	x0, [x21]
   24f1c:	mov	x1, x20
   24f20:	mov	x2, x22
   24f24:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   24f28:	ldr	x0, [x21]
   24f2c:	strb	wzr, [x0, x22]
   24f30:	ldrb	w0, [x19]
   24f34:	cbnz	w0, 24f4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x436c>
   24f38:	mov	x0, x19
   24f3c:	ldp	x21, x22, [sp, #16]
   24f40:	ldp	x23, x30, [sp, #32]
   24f44:	ldp	x19, x20, [sp], #48
   24f48:	ret
   24f4c:	mov	x0, x23
   24f50:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   24f54:	add	x19, x19, x0
   24f58:	mov	x0, x19
   24f5c:	ldp	x21, x22, [sp, #16]
   24f60:	ldp	x23, x30, [sp, #32]
   24f64:	ldp	x19, x20, [sp], #48
   24f68:	ret
   24f6c:	mov	x0, x20
   24f70:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   24f74:	mov	x22, x0
   24f78:	add	x19, x20, x0
   24f7c:	b	24f08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4328>
   24f80:	stp	x19, x20, [sp, #-64]!
   24f84:	stp	x21, x22, [sp, #16]
   24f88:	mov	x21, x0
   24f8c:	stp	x23, x30, [sp, #32]
   24f90:	add	x23, x0, #0x70
   24f94:	mov	x0, x23
   24f98:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   24f9c:	ldr	x19, [x21, #208]
   24fa0:	cbz	x19, 24ff8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4418>
   24fa4:	adrp	x22, 24000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3420>
   24fa8:	add	x20, sp, #0x38
   24fac:	add	x22, x22, #0xb70
   24fb0:	b	24fc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43e4>
   24fb4:	mov	x0, x20
   24fb8:	bl	24610 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a30>
   24fbc:	ldr	x19, [x19, #8]
   24fc0:	cbz	x19, 24ff8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4418>
   24fc4:	mov	x1, x21
   24fc8:	mov	x0, x20
   24fcc:	bl	245f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a18>
   24fd0:	ldr	x1, [x19]
   24fd4:	ldr	x1, [x1, #16]
   24fd8:	cmp	x1, x22
   24fdc:	b.eq	24fb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43d4>  // b.none
   24fe0:	mov	x0, x19
   24fe4:	blr	x1
   24fe8:	mov	x0, x20
   24fec:	bl	24610 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a30>
   24ff0:	ldr	x19, [x19, #8]
   24ff4:	cbnz	x19, 24fc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43e4>
   24ff8:	mov	x0, x23
   24ffc:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   25000:	ldp	x21, x22, [sp, #16]
   25004:	ldp	x23, x30, [sp, #32]
   25008:	ldp	x19, x20, [sp], #64
   2500c:	ret
   25010:	stp	x19, x20, [sp, #-80]!
   25014:	stp	x21, x22, [sp, #16]
   25018:	mov	x21, x0
   2501c:	stp	x25, x30, [sp, #48]
   25020:	add	x25, x0, #0x70
   25024:	mov	x0, x25
   25028:	stp	x23, x24, [sp, #32]
   2502c:	mov	x24, x1
   25030:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   25034:	ldr	x19, [x21, #208]
   25038:	cbz	x19, 250b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44d4>
   2503c:	adrp	x22, 25000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4420>
   25040:	add	x20, sp, #0x48
   25044:	add	x22, x22, #0xc68
   25048:	b	2505c <__sanitizer_get_module_and_offset_for_pc@@Base+0x447c>
   2504c:	mov	x0, x20
   25050:	bl	24610 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a30>
   25054:	ldr	x19, [x19, #8]
   25058:	cbz	x19, 250b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44d4>
   2505c:	mov	x1, x21
   25060:	mov	x0, x20
   25064:	bl	245f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a18>
   25068:	ldr	x2, [x19]
   2506c:	ldr	x2, [x2, #24]
   25070:	cmp	x2, x22
   25074:	b.eq	2504c <__sanitizer_get_module_and_offset_for_pc@@Base+0x446c>  // b.none
   25078:	mov	x1, x24
   2507c:	mov	x0, x19
   25080:	blr	x2
   25084:	mov	x23, x0
   25088:	cbz	x0, 2504c <__sanitizer_get_module_and_offset_for_pc@@Base+0x446c>
   2508c:	mov	x0, x20
   25090:	bl	24610 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a30>
   25094:	mov	x0, x25
   25098:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   2509c:	mov	x0, x23
   250a0:	ldp	x21, x22, [sp, #16]
   250a4:	ldp	x23, x24, [sp, #32]
   250a8:	ldp	x25, x30, [sp, #48]
   250ac:	ldp	x19, x20, [sp], #80
   250b0:	ret
   250b4:	mov	x1, x24
   250b8:	mov	x0, x21
   250bc:	bl	26170 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5590>
   250c0:	mov	x23, x0
   250c4:	mov	x0, x25
   250c8:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   250cc:	mov	x0, x23
   250d0:	ldp	x21, x22, [sp, #16]
   250d4:	ldp	x23, x24, [sp, #32]
   250d8:	ldp	x25, x30, [sp, #48]
   250dc:	ldp	x19, x20, [sp], #80
   250e0:	ret
   250e4:	nop
   250e8:	stp	x19, x30, [sp, #-16]!
   250ec:	mov	x19, x0
   250f0:	add	x0, x0, #0x28
   250f4:	bl	1b928 <__sanitizer_set_report_fd@@Base+0x4678>
   250f8:	add	x0, x19, #0x48
   250fc:	bl	1ba38 <__sanitizer_set_report_fd@@Base+0x4788>
   25100:	ldr	x0, [x19, #56]
   25104:	cbz	x0, 25118 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4538>
   25108:	mov	w0, #0x1                   	// #1
   2510c:	strb	w0, [x19, #104]
   25110:	ldp	x19, x30, [sp], #16
   25114:	ret
   25118:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2511c:	add	x0, x0, #0x490
   25120:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   25124:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   25128:	stp	x19, x20, [sp, #-32]!
   2512c:	mov	x19, x0
   25130:	mov	x20, x1
   25134:	ldrb	w2, [x0, #104]
   25138:	stp	x21, x30, [sp, #16]
   2513c:	add	x21, x0, #0x28
   25140:	cbz	w2, 25160 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4580>
   25144:	mov	x0, x21
   25148:	bl	24b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f98>
   2514c:	cbz	x0, 2515c <__sanitizer_get_module_and_offset_for_pc@@Base+0x457c>
   25150:	ldp	x21, x30, [sp, #16]
   25154:	ldp	x19, x20, [sp], #32
   25158:	ret
   2515c:	mov	x0, x19
   25160:	bl	250e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4508>
   25164:	mov	x1, x20
   25168:	mov	x0, x21
   2516c:	bl	24b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f98>
   25170:	cbnz	x0, 25150 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4570>
   25174:	ldr	x0, [x19, #88]
   25178:	cbz	x0, 25150 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4570>
   2517c:	mov	x1, x20
   25180:	add	x0, x19, #0x48
   25184:	ldp	x21, x30, [sp, #16]
   25188:	ldp	x19, x20, [sp], #32
   2518c:	b	24b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f98>
   25190:	stp	x19, x20, [sp, #-48]!
   25194:	mov	x20, x4
   25198:	mov	x19, x1
   2519c:	stp	x21, x22, [sp, #16]
   251a0:	mov	x22, x2
   251a4:	mov	x21, x3
   251a8:	str	x30, [sp, #32]
   251ac:	bl	25128 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4548>
   251b0:	cbz	x0, 251e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4604>
   251b4:	mov	x5, x0
   251b8:	mov	w0, #0x1                   	// #1
   251bc:	ldr	x30, [sp, #32]
   251c0:	ldp	x2, x1, [x5]
   251c4:	str	x2, [x22]
   251c8:	sub	x1, x19, x1
   251cc:	str	x1, [x21]
   251d0:	ldr	w1, [x5, #24]
   251d4:	str	w1, [x20]
   251d8:	ldp	x21, x22, [sp, #16]
   251dc:	ldp	x19, x20, [sp], #48
   251e0:	ret
   251e4:	mov	w0, #0x0                   	// #0
   251e8:	ldp	x21, x22, [sp, #16]
   251ec:	ldr	x30, [sp, #32]
   251f0:	ldp	x19, x20, [sp], #48
   251f4:	ret
   251f8:	stp	x19, x20, [sp, #-64]!
   251fc:	mov	x20, x0
   25200:	mov	x19, x1
   25204:	stp	x21, x22, [sp, #16]
   25208:	add	x22, x0, #0x70
   2520c:	mov	x0, x22
   25210:	mov	x21, x2
   25214:	stp	x23, x24, [sp, #32]
   25218:	mov	x23, x3
   2521c:	str	x30, [sp, #48]
   25220:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   25224:	mov	x1, x19
   25228:	mov	x0, x20
   2522c:	bl	25128 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4548>
   25230:	cbz	x0, 25274 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4694>
   25234:	ldp	x1, x2, [x0]
   25238:	mov	w24, #0x1                   	// #1
   2523c:	sub	x19, x19, x2
   25240:	str	x19, [x23]
   25244:	cbz	x21, 25254 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4674>
   25248:	mov	x0, x20
   2524c:	bl	24248 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3668>
   25250:	str	x0, [x21]
   25254:	mov	x0, x22
   25258:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   2525c:	mov	w0, w24
   25260:	ldp	x21, x22, [sp, #16]
   25264:	ldp	x23, x24, [sp, #32]
   25268:	ldr	x30, [sp, #48]
   2526c:	ldp	x19, x20, [sp], #64
   25270:	ret
   25274:	mov	x0, x22
   25278:	mov	w24, #0x0                   	// #0
   2527c:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   25280:	mov	w0, w24
   25284:	ldp	x21, x22, [sp, #16]
   25288:	ldp	x23, x24, [sp, #32]
   2528c:	ldr	x30, [sp, #48]
   25290:	ldp	x19, x20, [sp], #64
   25294:	ret
   25298:	stp	x19, x20, [sp, #-80]!
   2529c:	mov	x20, x0
   252a0:	stp	x23, x24, [sp, #32]
   252a4:	add	x24, x0, #0x70
   252a8:	mov	x0, x24
   252ac:	stp	x21, x22, [sp, #16]
   252b0:	mov	x21, x1
   252b4:	str	x30, [sp, #48]
   252b8:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   252bc:	mov	x0, x21
   252c0:	bl	24128 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3548>
   252c4:	mov	x1, x21
   252c8:	mov	x23, x0
   252cc:	mov	x0, x20
   252d0:	bl	25128 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4548>
   252d4:	cbz	x0, 25344 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4764>
   252d8:	mov	x2, x0
   252dc:	add	x0, x23, #0x8
   252e0:	ldr	w3, [x2, #24]
   252e4:	ldp	x1, x2, [x2]
   252e8:	sub	x2, x21, x2
   252ec:	bl	240c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34e8>
   252f0:	ldr	x19, [x20, #208]
   252f4:	cbz	x19, 25344 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4764>
   252f8:	add	x22, sp, #0x48
   252fc:	b	2530c <__sanitizer_get_module_and_offset_for_pc@@Base+0x472c>
   25300:	bl	24610 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a30>
   25304:	ldr	x19, [x19, #8]
   25308:	cbz	x19, 25344 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4764>
   2530c:	mov	x1, x20
   25310:	mov	x0, x22
   25314:	bl	245f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a18>
   25318:	ldr	x3, [x19]
   2531c:	mov	x1, x21
   25320:	mov	x2, x23
   25324:	mov	x0, x19
   25328:	ldr	x3, [x3]
   2532c:	blr	x3
   25330:	mov	w1, w0
   25334:	tst	w1, #0xff
   25338:	mov	x0, x22
   2533c:	b.eq	25300 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4720>  // b.none
   25340:	bl	24610 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a30>
   25344:	mov	x0, x24
   25348:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   2534c:	mov	x0, x23
   25350:	ldp	x21, x22, [sp, #16]
   25354:	ldp	x23, x24, [sp, #32]
   25358:	ldr	x30, [sp, #48]
   2535c:	ldp	x19, x20, [sp], #80
   25360:	ret
   25364:	nop
   25368:	stp	x19, x20, [sp, #-96]!
   2536c:	stp	x25, x26, [sp, #48]
   25370:	add	x25, x0, #0x70
   25374:	stp	x21, x22, [sp, #16]
   25378:	mov	x22, x0
   2537c:	mov	x21, x2
   25380:	mov	x0, x25
   25384:	stp	x23, x24, [sp, #32]
   25388:	mov	x24, x1
   2538c:	str	x30, [sp, #64]
   25390:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   25394:	mov	x1, x24
   25398:	mov	x0, x22
   2539c:	bl	25128 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4548>
   253a0:	cbz	x0, 2544c <__sanitizer_get_module_and_offset_for_pc@@Base+0x486c>
   253a4:	mov	x1, x0
   253a8:	mov	x0, x21
   253ac:	add	x23, sp, #0x58
   253b0:	ldp	x19, x20, [x1]
   253b4:	ldr	w26, [x1, #24]
   253b8:	bl	241c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35e0>
   253bc:	mov	x0, x19
   253c0:	bl	18a68 <__sanitizer_set_report_fd@@Base+0x17b8>
   253c4:	ldr	x19, [x22, #208]
   253c8:	sub	x20, x24, x20
   253cc:	stp	x0, x20, [x21]
   253d0:	str	w26, [x21, #16]
   253d4:	cbnz	x19, 253e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4808>
   253d8:	b	25444 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4864>
   253dc:	bl	24610 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a30>
   253e0:	ldr	x19, [x19, #8]
   253e4:	cbz	x19, 25444 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4864>
   253e8:	mov	x1, x22
   253ec:	mov	x0, x23
   253f0:	bl	245f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a18>
   253f4:	ldr	x3, [x19]
   253f8:	mov	x2, x21
   253fc:	mov	x1, x24
   25400:	mov	x0, x19
   25404:	ldr	x3, [x3, #8]
   25408:	blr	x3
   2540c:	mov	w20, w0
   25410:	ands	w20, w20, #0xff
   25414:	mov	x0, x23
   25418:	b.eq	253dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x47fc>  // b.none
   2541c:	bl	24610 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a30>
   25420:	mov	x0, x25
   25424:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   25428:	mov	w0, w20
   2542c:	ldp	x21, x22, [sp, #16]
   25430:	ldp	x23, x24, [sp, #32]
   25434:	ldp	x25, x26, [sp, #48]
   25438:	ldr	x30, [sp, #64]
   2543c:	ldp	x19, x20, [sp], #96
   25440:	ret
   25444:	mov	w20, #0x1                   	// #1
   25448:	b	25420 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4840>
   2544c:	mov	w20, #0x0                   	// #0
   25450:	b	25420 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4840>
   25454:	nop
   25458:	stp	x19, x20, [sp, #-128]!
   2545c:	mov	w19, #0x1                   	// #1
   25460:	stp	x21, x22, [sp, #16]
   25464:	mov	x21, x0
   25468:	mov	x0, x21
   2546c:	stp	x25, x26, [sp, #48]
   25470:	add	x25, sp, #0x70
   25474:	mov	x22, x1
   25478:	mov	x2, x25
   2547c:	stp	x23, x24, [sp, #32]
   25480:	adrp	x24, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   25484:	stp	x27, x28, [sp, #64]
   25488:	add	x26, sp, #0x78
   2548c:	adrp	x27, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25490:	str	x30, [sp, #80]
   25494:	add	x27, x27, #0x5c8
   25498:	str	x1, [sp, #104]
   2549c:	add	x1, x24, #0xc70
   254a0:	str	xzr, [sp, #112]
   254a4:	bl	24df0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4210>
   254a8:	ldr	x1, [sp, #112]
   254ac:	mov	x21, x0
   254b0:	cbz	x1, 255cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x49ec>
   254b4:	ldrb	w0, [x1]
   254b8:	cbz	w0, 25678 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a98>
   254bc:	mov	x23, x22
   254c0:	add	x20, x22, #0x8
   254c4:	cbz	w19, 25614 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a34>
   254c8:	str	x1, [x20, #32]
   254cc:	mov	x0, x21
   254d0:	add	x1, x24, #0xc70
   254d4:	mov	x2, x26
   254d8:	str	xzr, [sp, #120]
   254dc:	bl	24df0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4210>
   254e0:	ldr	x1, [sp, #120]
   254e4:	mov	x21, x0
   254e8:	cbz	x1, 25658 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a78>
   254ec:	mov	x0, x1
   254f0:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   254f4:	cbz	x0, 25578 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4998>
   254f8:	sub	x19, x0, #0x1
   254fc:	mov	w28, #0x2                   	// #2
   25500:	ldr	x0, [sp, #120]
   25504:	add	x19, x0, x19
   25508:	ldrb	w1, [x19]
   2550c:	cmp	x0, x19
   25510:	b.cc	25524 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4944>  // b.lo, b.ul, b.last
   25514:	b	25530 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4950>
   25518:	ldrb	w1, [x19, #-1]!
   2551c:	cmp	x0, x19
   25520:	b.eq	25530 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4950>  // b.none
   25524:	sub	w2, w1, #0x30
   25528:	cmp	w2, #0x9
   2552c:	b.ls	25518 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4938>  // b.plast
   25530:	cmp	w1, #0x3a
   25534:	b.ne	2556c <__sanitizer_get_module_and_offset_for_pc@@Base+0x498c>  // b.any
   25538:	ldrb	w1, [x19, #1]
   2553c:	sub	w1, w1, #0x30
   25540:	cmp	w1, #0x9
   25544:	b.hi	2556c <__sanitizer_get_module_and_offset_for_pc@@Base+0x498c>  // b.pmore
   25548:	ldr	w1, [x20, #56]
   2554c:	add	x0, x19, #0x1
   25550:	str	w1, [x20, #60]
   25554:	bl	19028 <__sanitizer_set_report_fd@@Base+0x1d78>
   25558:	str	w0, [x20, #56]
   2555c:	strb	wzr, [x19]
   25560:	cmp	w28, #0x1
   25564:	b.ne	25604 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a24>  // b.any
   25568:	ldr	x0, [sp, #120]
   2556c:	add	x2, x23, #0x38
   25570:	mov	x1, x27
   25574:	bl	24df0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4210>
   25578:	ldr	x0, [sp, #120]
   2557c:	mov	x1, #0x0                   	// #0
   25580:	adrp	x19, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25584:	bl	11290 <__sancov_default_options@@Base+0x698>
   25588:	ldr	x0, [x20, #32]
   2558c:	add	x1, x19, #0x4e8
   25590:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   25594:	cbz	w0, 25644 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a64>
   25598:	ldr	x0, [x20, #48]
   2559c:	add	x1, x19, #0x4e8
   255a0:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   255a4:	cbz	w0, 255ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a0c>
   255a8:	mov	w19, #0x0                   	// #0
   255ac:	mov	x0, x21
   255b0:	add	x1, x24, #0xc70
   255b4:	mov	x2, x25
   255b8:	str	xzr, [sp, #112]
   255bc:	bl	24df0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4210>
   255c0:	mov	x21, x0
   255c4:	ldr	x1, [sp, #112]
   255c8:	cbnz	x1, 254b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48d4>
   255cc:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   255d0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   255d4:	add	x2, x2, #0x4a8
   255d8:	add	x0, x0, #0x440
   255dc:	mov	x4, #0x0                   	// #0
   255e0:	mov	x3, #0x0                   	// #0
   255e4:	mov	w1, #0x12c                 	// #300
   255e8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   255ec:	ldr	x0, [x20, #48]
   255f0:	mov	x1, #0x0                   	// #0
   255f4:	mov	w19, #0x0                   	// #0
   255f8:	bl	11290 <__sancov_default_options@@Base+0x698>
   255fc:	str	xzr, [x20, #48]
   25600:	b	255ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x49cc>
   25604:	sub	x19, x19, #0x1
   25608:	mov	w28, #0x1                   	// #1
   2560c:	ldr	x0, [sp, #120]
   25610:	b	25508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4928>
   25614:	ldr	x0, [x22, #8]
   25618:	bl	24128 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3548>
   2561c:	add	x20, x0, #0x8
   25620:	ldp	x1, x2, [x22, #16]
   25624:	mov	x23, x0
   25628:	ldr	w3, [x22, #32]
   2562c:	mov	x0, x20
   25630:	bl	240c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34e8>
   25634:	ldp	x0, x1, [sp, #104]
   25638:	str	x23, [x0]
   2563c:	str	x23, [sp, #104]
   25640:	b	254c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48e8>
   25644:	ldr	x0, [x20, #32]
   25648:	mov	x1, #0x0                   	// #0
   2564c:	bl	11290 <__sancov_default_options@@Base+0x698>
   25650:	str	xzr, [x20, #32]
   25654:	b	25598 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49b8>
   25658:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2565c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25660:	add	x2, x2, #0x4c8
   25664:	add	x0, x0, #0x440
   25668:	mov	x4, #0x0                   	// #0
   2566c:	mov	x3, #0x0                   	// #0
   25670:	mov	w1, #0x10d                 	// #269
   25674:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   25678:	mov	x0, x1
   2567c:	mov	x1, #0x0                   	// #0
   25680:	bl	11290 <__sancov_default_options@@Base+0x698>
   25684:	ldp	x21, x22, [sp, #16]
   25688:	ldp	x23, x24, [sp, #32]
   2568c:	ldp	x25, x26, [sp, #48]
   25690:	ldp	x27, x28, [sp, #64]
   25694:	ldr	x30, [sp, #80]
   25698:	ldp	x19, x20, [sp], #128
   2569c:	ret
   256a0:	stp	x19, x20, [sp, #-32]!
   256a4:	adrp	x20, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   256a8:	add	x20, x20, #0xc70
   256ac:	mov	x19, x1
   256b0:	add	x2, x1, #0x28
   256b4:	mov	x1, x20
   256b8:	str	x30, [sp, #16]
   256bc:	bl	24df0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4210>
   256c0:	add	x2, x19, #0x30
   256c4:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x3028>
   256c8:	add	x1, x1, #0xa70
   256cc:	bl	24e98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42b8>
   256d0:	add	x2, x19, #0x38
   256d4:	mov	x1, x20
   256d8:	ldr	x30, [sp, #16]
   256dc:	ldp	x19, x20, [sp], #32
   256e0:	b	24e98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42b8>
   256e4:	nop
   256e8:	add	x4, x0, #0x4, lsl #12
   256ec:	str	x30, [sp, #-16]!
   256f0:	adrp	x3, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   256f4:	mov	x5, #0xffffffffffffffff    	// #-1
   256f8:	add	x3, x3, #0xd70
   256fc:	stp	x3, x1, [x0]
   25700:	str	x5, [x0, #16]
   25704:	str	xzr, [x0, #16408]
   25708:	strh	wzr, [x4, #32]
   2570c:	strb	w2, [x4, #34]
   25710:	cbz	x1, 25724 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b44>
   25714:	ldrb	w0, [x1]
   25718:	cbz	w0, 25744 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b64>
   2571c:	ldr	x30, [sp], #16
   25720:	ret
   25724:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25728:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2572c:	add	x2, x2, #0x4f0
   25730:	add	x0, x0, #0x440
   25734:	mov	x4, #0x0                   	// #0
   25738:	mov	x3, #0x0                   	// #0
   2573c:	mov	w1, #0x18f                 	// #399
   25740:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   25744:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25748:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2574c:	add	x2, x2, #0x508
   25750:	add	x0, x0, #0x440
   25754:	mov	x4, #0x0                   	// #0
   25758:	mov	x3, #0x0                   	// #0
   2575c:	mov	w1, #0x190                 	// #400
   25760:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   25764:	nop
   25768:	stp	x19, x20, [sp, #-32]!
   2576c:	mov	x19, x0
   25770:	adrp	x3, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   25774:	add	x3, x3, #0xd40
   25778:	stp	x21, x30, [sp, #16]
   2577c:	mov	x0, x2
   25780:	stp	x3, xzr, [x19]
   25784:	mov	x21, x1
   25788:	mov	x1, #0x4028                	// #16424
   2578c:	bl	10e80 <__sancov_default_options@@Base+0x288>
   25790:	mov	x20, x0
   25794:	mov	x1, x21
   25798:	mov	w2, #0x0                   	// #0
   2579c:	bl	256e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b08>
   257a0:	adrp	x0, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   257a4:	add	x0, x0, #0xd18
   257a8:	ldp	x21, x30, [sp, #16]
   257ac:	str	x0, [x20]
   257b0:	str	x20, [x19, #16]
   257b4:	ldp	x19, x20, [sp], #32
   257b8:	ret
   257bc:	nop
   257c0:	stp	x19, x30, [sp, #-16]!
   257c4:	mov	x19, x0
   257c8:	ldr	w0, [x0, #16]
   257cc:	cmn	w0, #0x1
   257d0:	b.eq	257d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bf8>  // b.none
   257d4:	bl	1c370 <__sanitizer_set_report_fd@@Base+0x50c0>
   257d8:	ldr	w0, [x19, #20]
   257dc:	cmn	w0, #0x1
   257e0:	b.eq	257e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c08>  // b.none
   257e4:	bl	1c370 <__sanitizer_set_report_fd@@Base+0x50c0>
   257e8:	mov	x0, x19
   257ec:	ldp	x19, x30, [sp], #16
   257f0:	b	25e90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52b0>
   257f4:	nop
   257f8:	cbnz	x2, 25804 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c24>
   257fc:	mov	w0, #0x1                   	// #1
   25800:	ret
   25804:	stp	x19, x20, [sp, #-48]!
   25808:	mov	x20, x0
   2580c:	mov	x19, x2
   25810:	ldr	w0, [x0, #20]
   25814:	add	x3, sp, #0x28
   25818:	mov	x4, #0x0                   	// #0
   2581c:	str	x30, [sp, #16]
   25820:	str	xzr, [sp, #40]
   25824:	bl	1c3c8 <__sanitizer_set_report_fd@@Base+0x5118>
   25828:	tst	w0, #0xff
   2582c:	b.eq	2584c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c6c>  // b.none
   25830:	ldr	x0, [sp, #40]
   25834:	cmp	x0, x19
   25838:	b.ne	2584c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c6c>  // b.any
   2583c:	mov	w0, #0x1                   	// #1
   25840:	ldr	x30, [sp, #16]
   25844:	ldp	x19, x20, [sp], #48
   25848:	ret
   2584c:	ldr	w1, [x20, #20]
   25850:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25854:	add	x0, x0, #0x528
   25858:	bl	1e648 <OnPrint@@Base+0x398>
   2585c:	mov	w0, #0x0                   	// #0
   25860:	ldr	x30, [sp, #16]
   25864:	ldp	x19, x20, [sp], #48
   25868:	ret
   2586c:	nop
   25870:	stp	x19, x20, [sp, #-32]!
   25874:	mov	x19, x0
   25878:	ldr	w0, [x0, #16]
   2587c:	str	x30, [sp, #16]
   25880:	cmn	w0, #0x1
   25884:	b.eq	258fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d1c>  // b.none
   25888:	ldr	w0, [x19, #20]
   2588c:	cmn	w0, #0x1
   25890:	b.eq	258fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d1c>  // b.none
   25894:	mov	x20, x1
   25898:	mov	x0, x1
   2589c:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   258a0:	mov	x2, x0
   258a4:	mov	x1, x20
   258a8:	mov	x0, x19
   258ac:	bl	257f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c18>
   258b0:	tst	w0, #0xff
   258b4:	b.eq	258fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d1c>  // b.none
   258b8:	mov	x20, x19
   258bc:	adrp	x0, 24000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3420>
   258c0:	add	x0, x0, #0xd58
   258c4:	mov	x2, #0x4000                	// #16384
   258c8:	ldr	x1, [x20], #24
   258cc:	ldr	x3, [x1, #16]
   258d0:	mov	x1, x20
   258d4:	cmp	x3, x0
   258d8:	mov	x0, x19
   258dc:	b.ne	25910 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d30>  // b.any
   258e0:	bl	24c20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4040>
   258e4:	and	w0, w0, #0xff
   258e8:	cbz	w0, 258fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d1c>
   258ec:	mov	x0, x20
   258f0:	ldr	x30, [sp, #16]
   258f4:	ldp	x19, x20, [sp], #32
   258f8:	ret
   258fc:	mov	x20, #0x0                   	// #0
   25900:	mov	x0, x20
   25904:	ldr	x30, [sp, #16]
   25908:	ldp	x19, x20, [sp], #32
   2590c:	ret
   25910:	blr	x3
   25914:	and	w0, w0, #0xff
   25918:	b	258e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d08>
   2591c:	nop
   25920:	stp	x19, x20, [sp, #-48]!
   25924:	mov	x19, x0
   25928:	stp	x21, x22, [sp, #16]
   2592c:	add	x22, x0, #0x4, lsl #12
   25930:	ldrb	w0, [x22, #32]
   25934:	str	x30, [sp, #40]
   25938:	cbnz	w0, 259bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ddc>
   2593c:	mov	x20, x1
   25940:	str	x23, [sp, #32]
   25944:	ldr	x23, [x19, #8]
   25948:	bl	13c30 <__sancov_default_options@@Base+0x3038>
   2594c:	mov	x21, x0
   25950:	cbz	x0, 259a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dc0>
   25954:	mov	x0, x23
   25958:	bl	13700 <__sancov_default_options@@Base+0x2b08>
   2595c:	mov	x1, x0
   25960:	cbz	x0, 259a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dc0>
   25964:	mov	x0, x21
   25968:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   2596c:	cbnz	w0, 259a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dc0>
   25970:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25974:	add	x0, x0, #0x558
   25978:	bl	1e648 <OnPrint@@Base+0x398>
   2597c:	mov	w0, #0x1                   	// #1
   25980:	strb	w0, [x22, #32]
   25984:	mov	x2, #0x0                   	// #0
   25988:	mov	x0, x2
   2598c:	ldp	x21, x22, [sp, #16]
   25990:	ldr	x23, [sp, #32]
   25994:	ldr	x30, [sp, #40]
   25998:	ldp	x19, x20, [sp], #48
   2599c:	ret
   259a0:	ldr	x0, [x19, #16408]
   259a4:	cmp	x0, #0x4
   259a8:	b.ls	259ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e0c>  // b.plast
   259ac:	nop
   259b0:	ldrb	w0, [x22, #32]
   259b4:	cbz	w0, 25a1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e3c>
   259b8:	ldr	x23, [sp, #32]
   259bc:	mov	x2, #0x0                   	// #0
   259c0:	mov	x0, x2
   259c4:	ldp	x21, x22, [sp, #16]
   259c8:	ldr	x30, [sp, #40]
   259cc:	ldp	x19, x20, [sp], #48
   259d0:	ret
   259d4:	bl	257c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4be0>
   259d8:	ldr	x0, [x19, #16408]
   259dc:	add	x0, x0, #0x1
   259e0:	str	x0, [x19, #16408]
   259e4:	cmp	x0, #0x4
   259e8:	b.hi	259b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dd0>  // b.pmore
   259ec:	mov	x1, x20
   259f0:	mov	x0, x19
   259f4:	bl	25870 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c90>
   259f8:	mov	x2, x0
   259fc:	mov	x0, x19
   25a00:	cbz	x2, 259d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4df4>
   25a04:	mov	x0, x2
   25a08:	ldp	x21, x22, [sp, #16]
   25a0c:	ldr	x23, [sp, #32]
   25a10:	ldr	x30, [sp, #40]
   25a14:	ldp	x19, x20, [sp], #48
   25a18:	ret
   25a1c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25a20:	add	x0, x0, #0x590
   25a24:	b	25978 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d98>
   25a28:	stp	x19, x20, [sp, #-32]!
   25a2c:	mov	w7, w4
   25a30:	mov	x4, x2
   25a34:	str	x30, [sp, #16]
   25a38:	cbz	x2, 25b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f98>
   25a3c:	and	w1, w1, #0xff
   25a40:	mov	x5, x3
   25a44:	cmp	w1, #0x0
   25a48:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25a4c:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25a50:	add	x3, x3, #0x5c8
   25a54:	add	x1, x1, #0x5d0
   25a58:	mov	x19, x0
   25a5c:	add	x20, x0, #0x18
   25a60:	csel	x3, x1, x3, ne  // ne = any
   25a64:	cbz	w7, 25acc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eec>
   25a68:	cmp	w7, #0x5
   25a6c:	b.eq	25b94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fb4>  // b.none
   25a70:	b.hi	25b1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f3c>  // b.pmore
   25a74:	cmp	w7, #0x3
   25a78:	b.eq	25b6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f8c>  // b.none
   25a7c:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   25a80:	cmp	w7, #0x4
   25a84:	add	x1, x1, #0xcb8
   25a88:	b.ne	25b08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f28>  // b.any
   25a8c:	nop
   25a90:	mov	x6, x5
   25a94:	mov	x0, x20
   25a98:	mov	x5, x1
   25a9c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25aa0:	mov	x1, #0x4000                	// #16384
   25aa4:	add	x2, x2, #0x628
   25aa8:	bl	1e2b8 <OnPrint@@Base+0x8>
   25aac:	mov	w1, #0x3fff                	// #16383
   25ab0:	cmp	w0, w1
   25ab4:	b.gt	25aec <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f0c>
   25ab8:	mov	x1, x20
   25abc:	ldr	x0, [x19, #16]
   25ac0:	ldr	x30, [sp, #16]
   25ac4:	ldp	x19, x20, [sp], #32
   25ac8:	b	25920 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d40>
   25acc:	mov	x1, #0x4000                	// #16384
   25ad0:	mov	x0, x20
   25ad4:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25ad8:	add	x2, x2, #0x5f0
   25adc:	bl	1e2b8 <OnPrint@@Base+0x8>
   25ae0:	mov	w1, #0x3fff                	// #16383
   25ae4:	cmp	w0, w1
   25ae8:	b.le	25ab8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ed8>
   25aec:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25af0:	add	x0, x0, #0x600
   25af4:	bl	1e648 <OnPrint@@Base+0x398>
   25af8:	mov	x0, #0x0                   	// #0
   25afc:	ldr	x30, [sp, #16]
   25b00:	ldp	x19, x20, [sp], #32
   25b04:	ret
   25b08:	cmp	w7, #0x1
   25b0c:	b.ne	25b38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f58>  // b.any
   25b10:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   25b14:	add	x1, x1, #0xca0
   25b18:	b	25a90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb0>
   25b1c:	cmp	w7, #0x7
   25b20:	b.eq	25b60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f80>  // b.none
   25b24:	cmp	w7, #0x8
   25b28:	b.ne	25b4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f6c>  // b.any
   25b2c:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   25b30:	add	x1, x1, #0xcc0
   25b34:	b	25a90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb0>
   25b38:	cmp	w7, #0x2
   25b3c:	b.ne	25ba0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fc0>  // b.any
   25b40:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   25b44:	add	x1, x1, #0xc98
   25b48:	b	25a90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb0>
   25b4c:	cmp	w7, #0x6
   25b50:	b.ne	25ba0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fc0>  // b.any
   25b54:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   25b58:	add	x1, x1, #0xcc8
   25b5c:	b	25a90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb0>
   25b60:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   25b64:	add	x1, x1, #0xc90
   25b68:	b	25a90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb0>
   25b6c:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   25b70:	add	x1, x1, #0xcb0
   25b74:	b	25a90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb0>
   25b78:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25b7c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25b80:	add	x2, x2, #0x5d8
   25b84:	add	x0, x0, #0x440
   25b88:	mov	x3, #0x0                   	// #0
   25b8c:	mov	w1, #0x173                 	// #371
   25b90:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   25b94:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   25b98:	add	x1, x1, #0xca8
   25b9c:	b	25a90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb0>
   25ba0:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   25ba4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   25ba8:	add	x2, x2, #0xcd8
   25bac:	add	x0, x0, #0xf8
   25bb0:	mov	x4, #0x0                   	// #0
   25bb4:	mov	x3, #0x0                   	// #0
   25bb8:	mov	w1, #0x2a9                 	// #681
   25bbc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   25bc0:	stp	x19, x30, [sp, #-16]!
   25bc4:	mov	x19, x2
   25bc8:	mov	w1, #0x0                   	// #0
   25bcc:	ldr	w4, [x2, #32]
   25bd0:	ldr	x2, [x2, #16]
   25bd4:	ldr	x3, [x19, #24]
   25bd8:	bl	25a28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e48>
   25bdc:	cbnz	x0, 25bec <__sanitizer_get_module_and_offset_for_pc@@Base+0x500c>
   25be0:	mov	w0, #0x0                   	// #0
   25be4:	ldp	x19, x30, [sp], #16
   25be8:	ret
   25bec:	mov	x1, x19
   25bf0:	bl	25458 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4878>
   25bf4:	mov	w0, #0x1                   	// #1
   25bf8:	ldp	x19, x30, [sp], #16
   25bfc:	ret
   25c00:	stp	x19, x20, [sp, #-32]!
   25c04:	mov	x19, x2
   25c08:	mov	x20, x1
   25c0c:	ldr	w4, [x2, #16]
   25c10:	mov	w1, #0x1                   	// #1
   25c14:	ldr	x2, [x2]
   25c18:	ldr	x3, [x19, #8]
   25c1c:	str	x30, [sp, #16]
   25c20:	bl	25a28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e48>
   25c24:	cbnz	x0, 25c38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5058>
   25c28:	mov	w0, #0x0                   	// #0
   25c2c:	ldr	x30, [sp, #16]
   25c30:	ldp	x19, x20, [sp], #32
   25c34:	ret
   25c38:	mov	x1, x19
   25c3c:	bl	256a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ac0>
   25c40:	ldr	x1, [x19, #48]
   25c44:	mov	w0, #0x1                   	// #1
   25c48:	ldr	x2, [x19, #8]
   25c4c:	add	x1, x20, x1
   25c50:	ldr	x30, [sp, #16]
   25c54:	sub	x1, x1, x2
   25c58:	str	x1, [x19, #48]
   25c5c:	ldp	x19, x20, [sp], #32
   25c60:	ret
   25c64:	nop
   25c68:	mov	x0, #0x0                   	// #0
   25c6c:	ret
   25c70:	cmp	x2, #0x1
   25c74:	mov	w0, #0x0                   	// #0
   25c78:	b.ls	25c8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x50ac>  // b.plast
   25c7c:	add	x1, x1, x2
   25c80:	ldurb	w2, [x1, #-1]
   25c84:	cmp	w2, #0xa
   25c88:	b.eq	25c90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50b0>  // b.none
   25c8c:	ret
   25c90:	ldurb	w0, [x1, #-2]
   25c94:	cmp	w0, #0xa
   25c98:	cset	w0, eq  // eq = none
   25c9c:	ret
   25ca0:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25ca4:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25ca8:	adrp	x4, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25cac:	add	x4, x4, #0x328
   25cb0:	ldr	x5, [x3, #4040]
   25cb4:	add	x3, x0, #0x310
   25cb8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25cbc:	add	x0, x0, #0x300
   25cc0:	ldrb	w5, [x5, #180]
   25cc4:	stp	x4, xzr, [x2, #16]
   25cc8:	cmp	w5, #0x0
   25ccc:	csel	x0, x0, x3, ne  // ne = any
   25cd0:	stp	x1, x0, [x2]
   25cd4:	ret
   25cd8:	str	x30, [sp, #-16]!
   25cdc:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25ce0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25ce4:	add	x2, x2, #0x340
   25ce8:	add	x0, x0, #0x360
   25cec:	mov	x4, #0x0                   	// #0
   25cf0:	mov	x3, #0x0                   	// #0
   25cf4:	mov	w1, #0x4e                  	// #78
   25cf8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   25cfc:	nop
   25d00:	str	x30, [sp, #-16]!
   25d04:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25d08:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25d0c:	add	x2, x2, #0x340
   25d10:	add	x0, x0, #0x360
   25d14:	mov	x4, #0x0                   	// #0
   25d18:	mov	x3, #0x0                   	// #0
   25d1c:	mov	w1, #0x57                  	// #87
   25d20:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   25d24:	nop
   25d28:	cmp	x2, #0x8
   25d2c:	b.hi	25d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5158>  // b.pmore
   25d30:	mov	w0, #0x0                   	// #0
   25d34:	ret
   25d38:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25d3c:	str	x30, [sp, #-16]!
   25d40:	sub	x2, x2, #0x8
   25d44:	add	x0, x1, x2
   25d48:	add	x1, x3, #0xa78
   25d4c:	mov	x2, #0x8                   	// #8
   25d50:	bl	188e8 <__sanitizer_set_report_fd@@Base+0x1638>
   25d54:	cmp	w0, #0x0
   25d58:	cset	w0, eq  // eq = none
   25d5c:	ldr	x30, [sp], #16
   25d60:	ret
   25d64:	nop
   25d68:	adrp	x1, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   25d6c:	stp	x19, x20, [sp, #-32]!
   25d70:	ldr	x20, [x1, #504]
   25d74:	str	x30, [sp, #16]
   25d78:	cbz	x20, 25da8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51c8>
   25d7c:	mov	x19, x0
   25d80:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   25d84:	mov	x16, x20
   25d88:	mov	x1, x0
   25d8c:	mov	x0, x19
   25d90:	mov	w4, #0x0                   	// #0
   25d94:	ldr	x30, [sp, #16]
   25d98:	mov	x3, #0x0                   	// #0
   25d9c:	ldp	x19, x20, [sp], #32
   25da0:	mov	x2, #0x0                   	// #0
   25da4:	br	x16
   25da8:	mov	x0, #0x0                   	// #0
   25dac:	ldr	x30, [sp, #16]
   25db0:	ldp	x19, x20, [sp], #32
   25db4:	ret
   25db8:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25dbc:	stp	x19, x30, [sp, #-16]!
   25dc0:	mov	x19, x0
   25dc4:	ldr	x1, [x1, #3664]
   25dc8:	cbz	x1, 25de8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5208>
   25dcc:	mov	x3, #0x0                   	// #0
   25dd0:	mov	x2, #0x0                   	// #0
   25dd4:	mov	x1, #0x0                   	// #0
   25dd8:	bl	6930 <__cxa_demangle@plt>
   25ddc:	cbz	x0, 25de8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5208>
   25de0:	ldp	x19, x30, [sp], #16
   25de4:	ret
   25de8:	mov	x0, x19
   25dec:	ldp	x19, x30, [sp], #16
   25df0:	ret
   25df4:	nop
   25df8:	cbz	x0, 25e18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5238>
   25dfc:	ldrb	w2, [x0]
   25e00:	cmp	w2, #0x5f
   25e04:	b.ne	25e18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5238>  // b.any
   25e08:	ldrb	w1, [x0, #1]
   25e0c:	cmp	w1, #0x54
   25e10:	b.ne	25e18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5238>  // b.any
   25e14:	b	25d68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5188>
   25e18:	mov	x0, #0x0                   	// #0
   25e1c:	ret
   25e20:	cbz	x0, 25e84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52a4>
   25e24:	stp	x19, x30, [sp, #-16]!
   25e28:	mov	x19, x0
   25e2c:	ldrb	w1, [x0]
   25e30:	cmp	w1, #0x5f
   25e34:	b.ne	25e54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5274>  // b.any
   25e38:	ldrb	w1, [x0, #1]
   25e3c:	cmp	w1, #0x54
   25e40:	b.ne	25e54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5274>  // b.any
   25e44:	bl	25d68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5188>
   25e48:	cbz	x0, 25e54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5274>
   25e4c:	ldp	x19, x30, [sp], #16
   25e50:	ret
   25e54:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25e58:	ldr	x0, [x0, #3664]
   25e5c:	cbz	x0, 25e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5298>
   25e60:	mov	x0, x19
   25e64:	mov	x3, #0x0                   	// #0
   25e68:	mov	x2, #0x0                   	// #0
   25e6c:	mov	x1, #0x0                   	// #0
   25e70:	bl	6930 <__cxa_demangle@plt>
   25e74:	cbnz	x0, 25e4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x526c>
   25e78:	mov	x0, x19
   25e7c:	ldp	x19, x30, [sp], #16
   25e80:	ret
   25e84:	mov	x0, #0x0                   	// #0
   25e88:	ret
   25e8c:	nop
   25e90:	stp	x19, x20, [sp, #-128]!
   25e94:	mov	x19, x0
   25e98:	ldr	x0, [x0, #8]
   25e9c:	stp	x21, x22, [sp, #16]
   25ea0:	str	x30, [sp, #56]
   25ea4:	bl	19a50 <__sanitizer_set_report_fd@@Base+0x27a0>
   25ea8:	ands	w21, w0, #0xff
   25eac:	b.ne	25ed0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52f0>  // b.any
   25eb0:	add	x19, x19, #0x4, lsl #12
   25eb4:	ldrb	w0, [x19, #33]
   25eb8:	cbz	w0, 25f70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5390>
   25ebc:	mov	w0, w21
   25ec0:	ldp	x21, x22, [sp, #16]
   25ec4:	ldr	x30, [sp, #56]
   25ec8:	ldp	x19, x20, [sp], #128
   25ecc:	ret
   25ed0:	mov	x2, #0x8                   	// #8
   25ed4:	mov	w1, #0x0                   	// #0
   25ed8:	add	x0, sp, #0x40
   25edc:	stp	x23, x24, [sp, #32]
   25ee0:	add	x23, sp, #0x50
   25ee4:	str	x25, [sp, #48]
   25ee8:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   25eec:	mov	x24, x23
   25ef0:	mov	x20, x23
   25ef4:	add	x0, sp, #0x48
   25ef8:	mov	x22, #0x0                   	// #0
   25efc:	mov	w21, #0x0                   	// #0
   25f00:	mov	x2, #0x8                   	// #8
   25f04:	mov	w1, #0x0                   	// #0
   25f08:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   25f0c:	mov	x0, x20
   25f10:	bl	6720 <pipe@plt>
   25f14:	cmn	w0, #0x1
   25f18:	b.eq	25f98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53b8>  // b.none
   25f1c:	ldr	w0, [x20]
   25f20:	cmp	w0, #0x2
   25f24:	b.le	25f3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x535c>
   25f28:	ldr	w0, [x20, #4]
   25f2c:	cmp	w0, #0x2
   25f30:	b.le	25f3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x535c>
   25f34:	cbnz	x22, 26008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5428>
   25f38:	mov	x22, x20
   25f3c:	add	w21, w21, #0x1
   25f40:	add	x20, x20, #0x8
   25f44:	cmp	w21, #0x5
   25f48:	b.ne	25f0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x532c>  // b.any
   25f4c:	cbnz	x22, 25fe8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5408>
   25f50:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25f54:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25f58:	add	x2, x2, #0x720
   25f5c:	add	x0, x0, #0x690
   25f60:	mov	x4, #0x0                   	// #0
   25f64:	mov	x3, #0x0                   	// #0
   25f68:	mov	w1, #0x87                  	// #135
   25f6c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   25f70:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25f74:	add	x0, x0, #0x6f0
   25f78:	bl	1e648 <OnPrint@@Base+0x398>
   25f7c:	mov	w0, #0x1                   	// #1
   25f80:	strb	w0, [x19, #33]
   25f84:	mov	w0, w21
   25f88:	ldp	x21, x22, [sp, #16]
   25f8c:	ldr	x30, [sp, #56]
   25f90:	ldp	x19, x20, [sp], #128
   25f94:	ret
   25f98:	cbz	w21, 25fc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53e0>
   25f9c:	mov	w19, #0x0                   	// #0
   25fa0:	ldr	w0, [x24]
   25fa4:	add	w19, w19, #0x1
   25fa8:	add	x24, x24, #0x8
   25fac:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   25fb0:	ldur	w0, [x24, #-4]
   25fb4:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   25fb8:	cmp	w19, w21
   25fbc:	b.ne	25fa0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53c0>  // b.any
   25fc0:	bl	6ac0 <__errno_location@plt>
   25fc4:	mov	x1, x0
   25fc8:	mov	w21, #0x0                   	// #0
   25fcc:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25fd0:	add	x0, x0, #0x748
   25fd4:	ldr	w1, [x1]
   25fd8:	bl	1e648 <OnPrint@@Base+0x398>
   25fdc:	ldp	x23, x24, [sp, #32]
   25fe0:	ldr	x25, [sp, #48]
   25fe4:	b	25ebc <__sanitizer_get_module_and_offset_for_pc@@Base+0x52dc>
   25fe8:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25fec:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   25ff0:	add	x2, x2, #0x730
   25ff4:	add	x0, x0, #0x690
   25ff8:	mov	x4, #0x0                   	// #0
   25ffc:	mov	x3, #0x0                   	// #0
   26000:	mov	w1, #0x88                  	// #136
   26004:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   26008:	cbz	w21, 26038 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5458>
   2600c:	mov	w25, #0x0                   	// #0
   26010:	cmp	x24, x22
   26014:	b.eq	26028 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5448>  // b.none
   26018:	ldr	w0, [x24]
   2601c:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   26020:	ldr	w0, [x24, #4]
   26024:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   26028:	add	w25, w25, #0x1
   2602c:	add	x24, x24, #0x8
   26030:	cmp	w25, w21
   26034:	b.ne	26010 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5430>  // b.any
   26038:	add	x0, x19, #0x4, lsl #12
   2603c:	ldr	w2, [x20]
   26040:	ldr	x1, [x22]
   26044:	ldrb	w21, [x0, #34]
   26048:	ldr	x0, [x20]
   2604c:	stp	x1, x0, [sp, #64]
   26050:	ldr	w3, [x22, #4]
   26054:	cbnz	w21, 26150 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5570>
   26058:	ldp	x4, x0, [x19]
   2605c:	adrp	x1, 26000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5420>
   26060:	add	x1, x1, #0x760
   26064:	ldr	x4, [x4, #8]
   26068:	cmp	x4, x1
   2606c:	b.ne	260e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5500>  // b.any
   26070:	ldr	x4, [x19, #16424]
   26074:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26078:	add	x1, x1, #0x640
   2607c:	stp	x0, x1, [sp, #80]
   26080:	stp	x4, xzr, [sp, #96]
   26084:	mov	x1, x23
   26088:	mov	w4, #0xffffffff            	// #-1
   2608c:	bl	1d6b0 <__sanitizer_set_report_fd@@Base+0x6400>
   26090:	mov	w20, w0
   26094:	cmp	w0, #0x0
   26098:	b.lt	26114 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5534>  // b.tstop
   2609c:	ldr	w1, [sp, #64]
   260a0:	ldr	w0, [sp, #76]
   260a4:	stp	w1, w0, [x19, #16]
   260a8:	b.eq	26130 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5550>  // b.none
   260ac:	mov	w0, #0xa                   	// #10
   260b0:	bl	1ce40 <__sanitizer_set_report_fd@@Base+0x5b90>
   260b4:	mov	w0, w20
   260b8:	bl	1d800 <__sanitizer_set_report_fd@@Base+0x6550>
   260bc:	ands	w21, w0, #0xff
   260c0:	b.eq	260fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x551c>  // b.none
   260c4:	mov	w0, w21
   260c8:	ldp	x21, x22, [sp, #16]
   260cc:	ldp	x23, x24, [sp, #32]
   260d0:	ldr	x25, [sp, #48]
   260d4:	ldr	x30, [sp, #56]
   260d8:	ldp	x19, x20, [sp], #128
   260dc:	ret
   260e0:	mov	x1, x0
   260e4:	mov	x2, x23
   260e8:	mov	x0, x19
   260ec:	blr	x4
   260f0:	ldp	w3, w2, [sp, #68]
   260f4:	ldr	x0, [x19, #8]
   260f8:	b	26084 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54a4>
   260fc:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26100:	add	x0, x0, #0x7a8
   26104:	bl	1e648 <OnPrint@@Base+0x398>
   26108:	ldp	x23, x24, [sp, #32]
   2610c:	ldr	x25, [sp, #48]
   26110:	b	25ebc <__sanitizer_get_module_and_offset_for_pc@@Base+0x52dc>
   26114:	ldr	w0, [sp, #64]
   26118:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   2611c:	ldr	w0, [sp, #76]
   26120:	bl	19838 <__sanitizer_set_report_fd@@Base+0x2588>
   26124:	ldp	x23, x24, [sp, #32]
   26128:	ldr	x25, [sp, #48]
   2612c:	b	25ebc <__sanitizer_get_module_and_offset_for_pc@@Base+0x52dc>
   26130:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26134:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26138:	add	x2, x2, #0x798
   2613c:	add	x0, x0, #0x690
   26140:	mov	x4, #0x0                   	// #0
   26144:	mov	x3, #0x0                   	// #0
   26148:	mov	w1, #0xef                  	// #239
   2614c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   26150:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26154:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26158:	add	x2, x2, #0x340
   2615c:	add	x0, x0, #0x690
   26160:	mov	x4, #0x0                   	// #0
   26164:	mov	x3, #0x0                   	// #0
   26168:	mov	w1, #0xde                  	// #222
   2616c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   26170:	mov	x0, x1
   26174:	b	25e20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5240>
   26178:	stp	x19, x20, [sp, #-128]!
   2617c:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26180:	ldr	x0, [x20, #4040]
   26184:	stp	x21, x22, [sp, #16]
   26188:	ldrb	w0, [x0]
   2618c:	str	x30, [sp, #56]
   26190:	cbnz	w0, 26218 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5638>
   26194:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26198:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2619c:	ldr	x0, [x0, #3680]
   261a0:	ldr	w0, [x0]
   261a4:	sxtw	x0, w0
   261a8:	cmp	x0, #0x1
   261ac:	b.hi	261fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x561c>  // b.pmore
   261b0:	mov	x19, #0x0                   	// #0
   261b4:	mov	x2, #0x0                   	// #0
   261b8:	ldr	x0, [x22, #3808]
   261bc:	mov	x1, #0xf0                  	// #240
   261c0:	stp	x2, x19, [sp, #104]
   261c4:	str	x19, [sp, #120]
   261c8:	bl	10e80 <__sancov_default_options@@Base+0x288>
   261cc:	ldp	x4, x5, [sp, #104]
   261d0:	add	x1, sp, #0x40
   261d4:	ldr	x2, [sp, #120]
   261d8:	mov	x19, x0
   261dc:	stp	x4, x5, [sp, #64]
   261e0:	str	x2, [sp, #80]
   261e4:	bl	24480 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38a0>
   261e8:	mov	x0, x19
   261ec:	ldp	x21, x22, [sp, #16]
   261f0:	ldr	x30, [sp, #56]
   261f4:	ldp	x19, x20, [sp], #128
   261f8:	ret
   261fc:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26200:	add	x0, x0, #0x7e8
   26204:	bl	1e648 <OnPrint@@Base+0x398>
   26208:	mov	x19, #0x0                   	// #0
   2620c:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26210:	mov	x2, #0x0                   	// #0
   26214:	b	261b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55d8>
   26218:	bl	10fd0 <__sancov_default_options@@Base+0x3d8>
   2621c:	tst	w0, #0xff
   26220:	b.eq	26274 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5694>  // b.none
   26224:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26228:	ldr	x0, [x0, #3680]
   2622c:	ldr	w0, [x0]
   26230:	sxtw	x0, w0
   26234:	cmp	x0, #0x1
   26238:	b.hi	262d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56f8>  // b.pmore
   2623c:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26240:	ldr	x0, [x22, #3808]
   26244:	bl	24b08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f28>
   26248:	mov	x19, x0
   2624c:	cbz	x0, 262f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5718>
   26250:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26254:	ldr	x0, [x0, #3680]
   26258:	ldr	w0, [x0]
   2625c:	sxtw	x0, w0
   26260:	cmp	x0, #0x1
   26264:	b.hi	262e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5708>  // b.pmore
   26268:	mov	x2, #0x1                   	// #1
   2626c:	str	xzr, [x19, #8]
   26270:	b	261b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55d8>
   26274:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26278:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2627c:	ldr	x1, [x1, #3568]
   26280:	ldr	x0, [x0, #3672]
   26284:	cmp	x1, #0x0
   26288:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   2628c:	b.eq	2623c <__sanitizer_get_module_and_offset_for_pc@@Base+0x565c>  // b.none
   26290:	adrp	x22, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26294:	mov	x1, #0x4010                	// #16400
   26298:	ldr	x0, [x22, #3808]
   2629c:	bl	10e80 <__sancov_default_options@@Base+0x288>
   262a0:	mov	x19, x0
   262a4:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   262a8:	adrp	x0, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   262ac:	add	x0, x0, #0xdf0
   262b0:	ldr	x1, [x1, #3680]
   262b4:	stp	x0, xzr, [x19]
   262b8:	ldr	w0, [x1]
   262bc:	sxtw	x0, w0
   262c0:	cmp	x0, #0x1
   262c4:	b.ls	26268 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5688>  // b.plast
   262c8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   262cc:	add	x0, x0, #0x838
   262d0:	bl	1e648 <OnPrint@@Base+0x398>
   262d4:	b	26268 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5688>
   262d8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   262dc:	add	x0, x0, #0x808
   262e0:	bl	1e648 <OnPrint@@Base+0x398>
   262e4:	b	2623c <__sanitizer_get_module_and_offset_for_pc@@Base+0x565c>
   262e8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   262ec:	add	x0, x0, #0x858
   262f0:	bl	1e648 <OnPrint@@Base+0x398>
   262f4:	b	26268 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5688>
   262f8:	ldr	x0, [x20, #4040]
   262fc:	stp	x23, x24, [sp, #32]
   26300:	ldr	x23, [x0, #8]
   26304:	cbz	x23, 26394 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57b4>
   26308:	mov	x0, x23
   2630c:	bl	13700 <__sancov_default_options@@Base+0x2b08>
   26310:	ldrb	w1, [x23]
   26314:	mov	x21, x0
   26318:	cbz	w1, 26514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5934>
   2631c:	adrp	x19, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26320:	add	x19, x19, #0x8a8
   26324:	mov	x1, x19
   26328:	mov	x0, x21
   2632c:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   26330:	cbnz	w0, 263a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57c0>
   26334:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26338:	ldr	x0, [x0, #3680]
   2633c:	ldr	w0, [x0]
   26340:	sxtw	x0, w0
   26344:	cmp	x0, #0x1
   26348:	b.hi	26380 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57a0>  // b.pmore
   2634c:	ldr	x20, [x22, #3808]
   26350:	mov	x1, #0x4018                	// #16408
   26354:	mov	x0, x20
   26358:	bl	10e80 <__sancov_default_options@@Base+0x288>
   2635c:	mov	x2, x20
   26360:	mov	x1, x23
   26364:	mov	x19, x0
   26368:	bl	25768 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b88>
   2636c:	cbz	x19, 2650c <__sanitizer_get_module_and_offset_for_pc@@Base+0x592c>
   26370:	mov	x2, #0x1                   	// #1
   26374:	ldp	x23, x24, [sp, #32]
   26378:	str	xzr, [x19, #8]
   2637c:	b	261b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55d8>
   26380:	mov	x1, x23
   26384:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26388:	add	x0, x0, #0x8b8
   2638c:	bl	1e648 <OnPrint@@Base+0x398>
   26390:	b	2634c <__sanitizer_get_module_and_offset_for_pc@@Base+0x576c>
   26394:	adrp	x21, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26398:	add	x21, x21, #0x5c8
   2639c:	b	2631c <__sanitizer_get_module_and_offset_for_pc@@Base+0x573c>
   263a0:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   263a4:	mov	x0, x21
   263a8:	add	x1, x1, #0x8f0
   263ac:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   263b0:	cbz	w0, 26720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b40>
   263b4:	adrp	x24, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   263b8:	add	x24, x24, #0x930
   263bc:	mov	x0, x21
   263c0:	mov	x1, x24
   263c4:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   263c8:	cbnz	w0, 26544 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5964>
   263cc:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   263d0:	ldr	x0, [x0, #3680]
   263d4:	ldr	w0, [x0]
   263d8:	str	x25, [sp, #48]
   263dc:	sxtw	x0, w0
   263e0:	cmp	x0, #0x1
   263e4:	b.ls	263f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5818>  // b.plast
   263e8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   263ec:	mov	x1, x23
   263f0:	add	x0, x0, #0x940
   263f4:	bl	1e648 <OnPrint@@Base+0x398>
   263f8:	ldr	x21, [x22, #3808]
   263fc:	adrp	x24, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26400:	mov	x1, #0x38                  	// #56
   26404:	mov	x0, x21
   26408:	bl	10e80 <__sancov_default_options@@Base+0x288>
   2640c:	ldr	x25, [x24, #4000]
   26410:	mov	x19, x0
   26414:	add	x20, x0, #0x20
   26418:	adrp	x1, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   2641c:	add	x1, x1, #0xdc0
   26420:	stp	x23, x21, [x19, #16]
   26424:	ldr	x0, [x25]
   26428:	stp	x1, xzr, [x19]
   2642c:	stp	xzr, xzr, [x20, #8]
   26430:	str	xzr, [x19, #32]
   26434:	cbz	x0, 266ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5acc>
   26438:	sub	x1, x0, #0x1
   2643c:	tst	x1, x0
   26440:	b.ne	266b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ad8>  // b.any
   26444:	add	x21, x0, #0x7
   26448:	neg	x0, x0
   2644c:	and	x21, x21, x0
   26450:	mov	w2, #0x0                   	// #0
   26454:	mov	x0, x21
   26458:	adrp	x25, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   2645c:	add	x1, x25, #0x258
   26460:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   26464:	ldr	x2, [x20, #16]
   26468:	mov	x23, x0
   2646c:	ldr	x1, [x19, #32]
   26470:	lsl	x2, x2, #3
   26474:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   26478:	ldr	x1, [x20, #8]
   2647c:	ldr	x0, [x19, #32]
   26480:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   26484:	str	x23, [x19, #32]
   26488:	str	x21, [x20, #8]
   2648c:	cmp	x21, #0x7f
   26490:	b.ls	2649c <__sanitizer_get_module_and_offset_for_pc@@Base+0x58bc>  // b.plast
   26494:	ldr	x25, [sp, #48]
   26498:	b	26370 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5790>
   2649c:	ldr	x3, [x20, #16]
   264a0:	cmp	x3, #0x10
   264a4:	b.hi	266e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b00>  // b.pmore
   264a8:	ldr	x24, [x24, #4000]
   264ac:	ldr	x0, [x24]
   264b0:	cbz	x0, 266c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ae8>
   264b4:	sub	x1, x0, #0x1
   264b8:	tst	x1, x0
   264bc:	b.ne	266b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ad8>  // b.any
   264c0:	add	x21, x0, #0x7f
   264c4:	neg	x0, x0
   264c8:	and	x21, x21, x0
   264cc:	add	x1, x25, #0x258
   264d0:	mov	w2, #0x0                   	// #0
   264d4:	mov	x0, x21
   264d8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   264dc:	mov	x23, x0
   264e0:	ldr	x2, [x20, #16]
   264e4:	ldr	x1, [x19, #32]
   264e8:	lsl	x2, x2, #3
   264ec:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   264f0:	ldr	x1, [x20, #8]
   264f4:	ldr	x0, [x19, #32]
   264f8:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   264fc:	ldr	x25, [sp, #48]
   26500:	str	x23, [x19, #32]
   26504:	str	x21, [x20, #8]
   26508:	b	26370 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5790>
   2650c:	ldp	x23, x24, [sp, #32]
   26510:	b	261b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55d0>
   26514:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26518:	ldr	x0, [x0, #3680]
   2651c:	ldr	w0, [x0]
   26520:	sxtw	x0, w0
   26524:	cmp	x0, #0x1
   26528:	b.ls	2650c <__sanitizer_get_module_and_offset_for_pc@@Base+0x592c>  // b.plast
   2652c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26530:	add	x0, x0, #0x878
   26534:	bl	1e648 <OnPrint@@Base+0x398>
   26538:	mov	x2, #0x0                   	// #0
   2653c:	ldp	x23, x24, [sp, #32]
   26540:	b	261b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55d8>
   26544:	cbnz	x23, 26708 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b28>
   26548:	mov	x0, x19
   2654c:	bl	17028 <__sanitizer_cov_dump@@Base+0x2570>
   26550:	mov	x21, x0
   26554:	cbz	x0, 265a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59c4>
   26558:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2655c:	ldr	x0, [x0, #3680]
   26560:	ldr	w0, [x0]
   26564:	sxtw	x0, w0
   26568:	cmp	x0, #0x1
   2656c:	b.ls	26580 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59a0>  // b.plast
   26570:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26574:	mov	x1, x21
   26578:	add	x0, x0, #0xa08
   2657c:	bl	1e648 <OnPrint@@Base+0x398>
   26580:	ldr	x20, [x22, #3808]
   26584:	mov	x1, #0x4018                	// #16408
   26588:	mov	x0, x20
   2658c:	bl	10e80 <__sancov_default_options@@Base+0x288>
   26590:	mov	x2, x20
   26594:	mov	x1, x21
   26598:	mov	x19, x0
   2659c:	bl	25768 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b88>
   265a0:	b	2636c <__sanitizer_get_module_and_offset_for_pc@@Base+0x578c>
   265a4:	ldr	x20, [x20, #4040]
   265a8:	ldrb	w0, [x20, #16]
   265ac:	cbz	w0, 2650c <__sanitizer_get_module_and_offset_for_pc@@Base+0x592c>
   265b0:	mov	x0, x24
   265b4:	bl	17028 <__sanitizer_cov_dump@@Base+0x2570>
   265b8:	mov	x21, x0
   265bc:	cbz	x0, 2650c <__sanitizer_get_module_and_offset_for_pc@@Base+0x592c>
   265c0:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   265c4:	ldr	x0, [x0, #3680]
   265c8:	ldr	w0, [x0]
   265cc:	str	x25, [sp, #48]
   265d0:	sxtw	x0, w0
   265d4:	cmp	x0, #0x1
   265d8:	b.ls	265ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a0c>  // b.plast
   265dc:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   265e0:	mov	x1, x21
   265e4:	add	x0, x0, #0xa30
   265e8:	bl	1e648 <OnPrint@@Base+0x398>
   265ec:	ldr	x23, [x22, #3808]
   265f0:	adrp	x24, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   265f4:	mov	x1, #0x38                  	// #56
   265f8:	mov	x0, x23
   265fc:	bl	10e80 <__sancov_default_options@@Base+0x288>
   26600:	ldr	x25, [x24, #4000]
   26604:	mov	x19, x0
   26608:	add	x20, x0, #0x20
   2660c:	adrp	x1, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   26610:	add	x1, x1, #0xdc0
   26614:	stp	x21, x23, [x19, #16]
   26618:	ldr	x0, [x25]
   2661c:	stp	x1, xzr, [x19]
   26620:	stp	xzr, xzr, [x20, #8]
   26624:	str	xzr, [x19, #32]
   26628:	cbz	x0, 266d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5af4>
   2662c:	sub	x1, x0, #0x1
   26630:	tst	x1, x0
   26634:	b.ne	266b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ad8>  // b.any
   26638:	add	x21, x0, #0x7
   2663c:	neg	x0, x0
   26640:	and	x21, x21, x0
   26644:	mov	w2, #0x0                   	// #0
   26648:	mov	x0, x21
   2664c:	adrp	x25, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   26650:	add	x1, x25, #0x258
   26654:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   26658:	ldr	x2, [x20, #16]
   2665c:	mov	x23, x0
   26660:	ldr	x1, [x19, #32]
   26664:	lsl	x2, x2, #3
   26668:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   2666c:	ldr	x1, [x20, #8]
   26670:	ldr	x0, [x19, #32]
   26674:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   26678:	str	x23, [x19, #32]
   2667c:	str	x21, [x20, #8]
   26680:	cmp	x21, #0x7f
   26684:	b.hi	26494 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58b4>  // b.pmore
   26688:	ldr	x3, [x20, #16]
   2668c:	cmp	x3, #0x10
   26690:	b.hi	266e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b00>  // b.pmore
   26694:	ldr	x21, [x24, #4000]
   26698:	ldr	x0, [x21]
   2669c:	cbz	x0, 266fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b1c>
   266a0:	ldr	x24, [x24, #4000]
   266a4:	ldr	x0, [x24]
   266a8:	b	264b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58d4>
   266ac:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   266b0:	str	x0, [x25]
   266b4:	b	26438 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5858>
   266b8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   266bc:	add	x0, x0, #0x240
   266c0:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   266c4:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   266c8:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   266cc:	str	x0, [x24]
   266d0:	b	264b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58d4>
   266d4:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   266d8:	str	x0, [x25]
   266dc:	b	2662c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a4c>
   266e0:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   266e4:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   266e8:	add	x2, x2, #0x220
   266ec:	add	x0, x0, #0xf8
   266f0:	mov	x4, #0x10                  	// #16
   266f4:	mov	w1, #0x1fd                 	// #509
   266f8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   266fc:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   26700:	str	x0, [x21]
   26704:	b	266a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ac0>
   26708:	mov	x1, x23
   2670c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26710:	add	x0, x0, #0x970
   26714:	str	x25, [sp, #48]
   26718:	bl	1e648 <OnPrint@@Base+0x398>
   2671c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   26720:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26724:	add	x0, x0, #0x8f8
   26728:	str	x25, [sp, #48]
   2672c:	bl	1e648 <OnPrint@@Base+0x398>
   26730:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   26734:	nop
   26738:	str	x30, [sp, #-16]!
   2673c:	bl	24d68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
   26740:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26744:	mov	x0, #0x0                   	// #0
   26748:	add	x1, x1, #0xa50
   2674c:	bl	6830 <dlsym@plt>
   26750:	ldr	x30, [sp], #16
   26754:	adrp	x1, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   26758:	str	x0, [x1, #504]
   2675c:	b	68a0 <dlerror@plt>
   26760:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26764:	add	x3, x3, #0x640
   26768:	stp	x1, x3, [x2]
   2676c:	ldr	x0, [x0, #16424]
   26770:	stp	x0, xzr, [x2, #16]
   26774:	ret
   26778:	mov	w0, #0x0                   	// #0
   2677c:	ret
   26780:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26784:	ldr	x0, [x0, #3728]
   26788:	cbz	x0, 26790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bb0>
   2678c:	b	69b0 <__sanitizer_symbolize_flush@plt>
   26790:	ret
   26794:	nop
   26798:	stp	x19, x20, [sp, #-48]!
   2679c:	mov	x19, x2
   267a0:	mov	w3, #0x4000                	// #16384
   267a4:	stp	x21, x22, [sp, #16]
   267a8:	add	x22, x0, #0x10
   267ac:	mov	x21, x1
   267b0:	ldp	x0, x1, [x19]
   267b4:	mov	x2, x22
   267b8:	str	x30, [sp, #32]
   267bc:	bl	6880 <__sanitizer_symbolize_data@plt>
   267c0:	mov	w20, w0
   267c4:	tst	w0, #0xff
   267c8:	b.ne	267e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c00>  // b.any
   267cc:	mov	w0, w20
   267d0:	ldp	x21, x22, [sp, #16]
   267d4:	ldr	x30, [sp, #32]
   267d8:	ldp	x19, x20, [sp], #48
   267dc:	ret
   267e0:	mov	x0, x22
   267e4:	mov	x1, x19
   267e8:	bl	256a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ac0>
   267ec:	ldr	x1, [x19, #48]
   267f0:	ldr	x0, [x19, #8]
   267f4:	add	x1, x21, x1
   267f8:	ldp	x21, x22, [sp, #16]
   267fc:	sub	x1, x1, x0
   26800:	str	x1, [x19, #48]
   26804:	mov	w0, w20
   26808:	ldr	x30, [sp, #32]
   2680c:	ldp	x19, x20, [sp], #48
   26810:	ret
   26814:	nop
   26818:	stp	x19, x20, [sp, #-32]!
   2681c:	mov	x19, x2
   26820:	mov	w3, #0x4000                	// #16384
   26824:	stp	x21, x30, [sp, #16]
   26828:	add	x21, x0, #0x10
   2682c:	mov	x2, x21
   26830:	ldp	x0, x1, [x19, #16]
   26834:	bl	6940 <__sanitizer_symbolize_code@plt>
   26838:	mov	w20, w0
   2683c:	tst	w0, #0xff
   26840:	b.ne	26854 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c74>  // b.any
   26844:	mov	w0, w20
   26848:	ldp	x21, x30, [sp, #16]
   2684c:	ldp	x19, x20, [sp], #32
   26850:	ret
   26854:	mov	x1, x19
   26858:	mov	x0, x21
   2685c:	bl	25458 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4878>
   26860:	mov	w0, w20
   26864:	ldp	x21, x30, [sp, #16]
   26868:	ldp	x19, x20, [sp], #32
   2686c:	ret
   26870:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26874:	stp	x19, x20, [sp, #-32]!
   26878:	mov	x20, x1
   2687c:	ldr	x0, [x0, #3512]
   26880:	str	x30, [sp, #24]
   26884:	cbz	x0, 268f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d10>
   26888:	str	x21, [sp, #16]
   2688c:	mov	x21, #0x400                 	// #1024
   26890:	mov	x2, #0x0                   	// #0
   26894:	mov	x1, #0x0                   	// #0
   26898:	mov	x0, x21
   2689c:	bl	11038 <__sancov_default_options@@Base+0x440>
   268a0:	mov	x19, x0
   268a4:	mov	w2, w21
   268a8:	mov	x0, x20
   268ac:	mov	x1, x19
   268b0:	bl	67b0 <__sanitizer_symbolize_demangle@plt>
   268b4:	cmp	x21, w0, sxtw
   268b8:	sxtw	x0, w0
   268bc:	b.cc	268d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cf4>  // b.lo, b.ul, b.last
   268c0:	mov	x0, x19
   268c4:	ldr	x21, [sp, #16]
   268c8:	ldr	x30, [sp, #24]
   268cc:	ldp	x19, x20, [sp], #32
   268d0:	ret
   268d4:	add	x21, x0, #0x1
   268d8:	mov	x1, #0x0                   	// #0
   268dc:	mov	x0, x19
   268e0:	bl	11290 <__sancov_default_options@@Base+0x698>
   268e4:	cmp	x21, #0x20, lsl #12
   268e8:	b.ls	26890 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cb0>  // b.plast
   268ec:	ldr	x21, [sp, #16]
   268f0:	mov	x19, x20
   268f4:	mov	x0, x19
   268f8:	ldr	x30, [sp, #24]
   268fc:	ldp	x19, x20, [sp], #32
   26900:	ret
   26904:	nop
   26908:	stp	x19, x20, [sp, #-144]!
   2690c:	mov	x19, x0
   26910:	mov	x20, #0x0                   	// #0
   26914:	ldr	x0, [x0, #48]
   26918:	stp	x21, x22, [sp, #16]
   2691c:	mov	x22, x2
   26920:	stp	x23, x24, [sp, #32]
   26924:	stp	x25, x30, [sp, #48]
   26928:	str	xzr, [sp, #72]
   2692c:	ldp	x21, x23, [x2, #16]
   26930:	cbnz	x0, 26948 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d68>
   26934:	b	269f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e14>
   26938:	ldr	x0, [x19, #48]
   2693c:	add	x20, x20, #0x1
   26940:	cmp	x0, x20
   26944:	b.ls	269ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e0c>  // b.plast
   26948:	ldr	x1, [x19, #32]
   2694c:	mov	x0, x21
   26950:	lsl	x24, x20, #3
   26954:	ldr	x1, [x1, x20, lsl #3]
   26958:	ldr	x1, [x1, #16424]
   2695c:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   26960:	cbnz	w0, 26938 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d58>
   26964:	ldr	x4, [x19, #48]
   26968:	ldr	x0, [x19, #32]
   2696c:	cmp	x4, x20
   26970:	b.ls	26a88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ea8>  // b.plast
   26974:	ldr	x1, [x0, x24]
   26978:	str	x1, [sp, #72]
   2697c:	cbz	x1, 269f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e14>
   26980:	ldr	x1, [x1, #16424]
   26984:	mov	x0, x21
   26988:	bl	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   2698c:	sxtw	x4, w0
   26990:	cbnz	w0, 26a6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e8c>
   26994:	add	x19, sp, #0x50
   26998:	mov	x3, x23
   2699c:	mov	x4, #0xffffffffffffffff    	// #-1
   269a0:	mov	x1, #0x40                  	// #64
   269a4:	mov	x0, x19
   269a8:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   269ac:	add	x2, x2, #0x6e0
   269b0:	bl	1e2b8 <OnPrint@@Base+0x8>
   269b4:	ldr	x0, [sp, #72]
   269b8:	mov	x1, x19
   269bc:	bl	25920 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d40>
   269c0:	mov	w1, #0x0                   	// #0
   269c4:	cbz	x0, 269d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5df4>
   269c8:	mov	x1, x22
   269cc:	bl	25458 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4878>
   269d0:	mov	w1, #0x1                   	// #1
   269d4:	mov	w0, w1
   269d8:	ldp	x21, x22, [sp, #16]
   269dc:	ldp	x23, x24, [sp, #32]
   269e0:	ldp	x25, x30, [sp, #48]
   269e4:	ldp	x19, x20, [sp], #144
   269e8:	ret
   269ec:	ldr	x1, [sp, #72]
   269f0:	cbnz	x1, 26980 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5da0>
   269f4:	ldr	x0, [x19, #24]
   269f8:	mov	x1, #0x4030                	// #16432
   269fc:	add	x24, x19, #0x20
   26a00:	bl	10e80 <__sancov_default_options@@Base+0x288>
   26a04:	mov	x20, x0
   26a08:	ldr	x1, [x19, #16]
   26a0c:	mov	w2, #0x0                   	// #0
   26a10:	bl	256e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b08>
   26a14:	adrp	x0, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   26a18:	add	x0, x0, #0xd98
   26a1c:	str	x0, [x20]
   26a20:	mov	x0, x21
   26a24:	bl	18a68 <__sanitizer_set_report_fd@@Base+0x17b8>
   26a28:	str	x20, [sp, #72]
   26a2c:	ldr	x4, [x19, #40]
   26a30:	ldr	x3, [x24, #16]
   26a34:	str	x0, [x20, #16424]
   26a38:	lsr	x4, x4, #3
   26a3c:	cmp	x3, x4
   26a40:	b.hi	26b58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f78>  // b.pmore
   26a44:	add	x20, x3, #0x1
   26a48:	b.eq	26aa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ec4>  // b.none
   26a4c:	ldr	x25, [x19, #32]
   26a50:	str	x20, [x24, #16]
   26a54:	add	x1, sp, #0x48
   26a58:	add	x0, x25, x3, lsl #3
   26a5c:	mov	x2, #0x8                   	// #8
   26a60:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   26a64:	ldr	x1, [sp, #72]
   26a68:	b	26980 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5da0>
   26a6c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26a70:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26a74:	add	x2, x2, #0x648
   26a78:	add	x0, x0, #0x690
   26a7c:	mov	x3, #0x0                   	// #0
   26a80:	mov	w1, #0x15c                 	// #348
   26a84:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   26a88:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   26a8c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   26a90:	mov	x3, x20
   26a94:	add	x2, x2, #0xe0
   26a98:	add	x0, x0, #0xf8
   26a9c:	mov	w1, #0x1b6                 	// #438
   26aa0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   26aa4:	tst	x3, x20
   26aa8:	b.eq	26ae4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f04>  // b.none
   26aac:	clz	x2, x20
   26ab0:	mov	w0, #0x3f                  	// #63
   26ab4:	sub	w0, w0, w2
   26ab8:	mov	x2, #0x1                   	// #1
   26abc:	add	w4, w0, #0x1
   26ac0:	lsl	x4, x2, x4
   26ac4:	cmp	x4, x20
   26ac8:	b.ls	26ba4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5fc4>  // b.plast
   26acc:	lsl	x0, x2, x0
   26ad0:	cmp	x0, x20
   26ad4:	b.cs	26bc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5fe0>  // b.hs, b.nlast
   26ad8:	cmp	x3, x4
   26adc:	b.hi	26b7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f9c>  // b.pmore
   26ae0:	mov	x20, x4
   26ae4:	adrp	x25, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26ae8:	lsl	x20, x20, #3
   26aec:	ldr	x25, [x25, #4000]
   26af0:	ldr	x0, [x25]
   26af4:	cbz	x0, 26b70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f90>
   26af8:	sub	x1, x0, #0x1
   26afc:	tst	x0, x1
   26b00:	b.ne	26b94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5fb4>  // b.any
   26b04:	add	x20, x20, x1
   26b08:	neg	x0, x0
   26b0c:	and	x20, x20, x0
   26b10:	mov	w2, #0x0                   	// #0
   26b14:	mov	x0, x20
   26b18:	adrp	x1, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   26b1c:	add	x1, x1, #0x258
   26b20:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   26b24:	ldr	x2, [x24, #16]
   26b28:	mov	x25, x0
   26b2c:	ldr	x1, [x19, #32]
   26b30:	lsl	x2, x2, #3
   26b34:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   26b38:	ldr	x1, [x24, #8]
   26b3c:	ldr	x0, [x19, #32]
   26b40:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   26b44:	ldr	x3, [x24, #16]
   26b48:	str	x25, [x19, #32]
   26b4c:	str	x20, [x24, #8]
   26b50:	add	x20, x3, #0x1
   26b54:	b	26a50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e70>
   26b58:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   26b5c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   26b60:	add	x2, x2, #0x1b8
   26b64:	add	x0, x0, #0xf8
   26b68:	mov	w1, #0x1be                 	// #446
   26b6c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   26b70:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   26b74:	str	x0, [x25]
   26b78:	b	26af8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f18>
   26b7c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   26b80:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   26b84:	add	x2, x2, #0x220
   26b88:	add	x0, x0, #0xf8
   26b8c:	mov	w1, #0x1fd                 	// #509
   26b90:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   26b94:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   26b98:	add	x0, x0, #0x240
   26b9c:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   26ba0:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   26ba4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   26ba8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   26bac:	mov	x3, x20
   26bb0:	add	x2, x2, #0x1d8
   26bb4:	add	x0, x0, #0xf8
   26bb8:	mov	w1, #0x17b                 	// #379
   26bbc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   26bc0:	mov	x4, x0
   26bc4:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   26bc8:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   26bcc:	mov	x3, x20
   26bd0:	add	x2, x2, #0x200
   26bd4:	add	x0, x0, #0xf8
   26bd8:	mov	w1, #0x17c                 	// #380
   26bdc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   26be0:	stp	x19, x20, [sp, #-32]!
   26be4:	mov	x20, x1
   26be8:	str	x30, [sp, #16]
   26bec:	bl	24d58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4178>
   26bf0:	mov	w19, w0
   26bf4:	tst	w0, #0xff
   26bf8:	b.eq	26c04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6024>  // b.none
   26bfc:	ldrb	w0, [x20]
   26c00:	cbnz	w0, 26c14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6034>
   26c04:	mov	w0, w19
   26c08:	ldr	x30, [sp, #16]
   26c0c:	ldp	x19, x20, [sp], #32
   26c10:	ret
   26c14:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26c18:	add	x0, x20, #0x1
   26c1c:	add	x1, x1, #0xa78
   26c20:	bl	18e60 <__sanitizer_set_report_fd@@Base+0x1bb0>
   26c24:	cbz	x0, 26c3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x605c>
   26c28:	strb	wzr, [x0]
   26c2c:	mov	w0, w19
   26c30:	ldr	x30, [sp, #16]
   26c34:	ldp	x19, x20, [sp], #32
   26c38:	ret
   26c3c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26c40:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26c44:	add	x2, x2, #0xa60
   26c48:	add	x0, x0, #0x690
   26c4c:	mov	x4, #0x0                   	// #0
   26c50:	mov	x3, #0x0                   	// #0
   26c54:	mov	w1, #0x11e                 	// #286
   26c58:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   26c5c:	nop
   26c60:	adrp	x3, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   26c64:	add	x3, x3, #0x200
   26c68:	mov	x1, #0x0                   	// #0
   26c6c:	ldr	x2, [x3, x1, lsl #3]
   26c70:	mov	w4, w1
   26c74:	add	x1, x1, #0x1
   26c78:	cmp	x1, #0x5
   26c7c:	cbz	x2, 26c90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60b0>
   26c80:	b.ne	26c6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x608c>  // b.any
   26c84:	mov	w1, #0x0                   	// #0
   26c88:	mov	w0, w1
   26c8c:	ret
   26c90:	mov	w1, #0x1                   	// #1
   26c94:	str	x0, [x3, w4, sxtw #3]
   26c98:	mov	w0, w1
   26c9c:	ret
   26ca0:	stp	x19, x30, [sp, #-16]!
   26ca4:	adrp	x19, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   26ca8:	add	x19, x19, #0x200
   26cac:	mov	x2, #0x0                   	// #0
   26cb0:	ldr	x3, [x19, x2, lsl #3]
   26cb4:	mov	w4, w2
   26cb8:	add	w1, w2, #0x1
   26cbc:	add	x2, x2, #0x1
   26cc0:	cmp	x3, x0
   26cc4:	b.eq	26cdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x60fc>  // b.none
   26cc8:	cmp	x2, #0x5
   26ccc:	b.ne	26cb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60d0>  // b.any
   26cd0:	mov	w0, #0x0                   	// #0
   26cd4:	ldp	x19, x30, [sp], #16
   26cd8:	ret
   26cdc:	mov	w2, #0x4                   	// #4
   26ce0:	sub	w2, w2, w4
   26ce4:	add	x1, x19, w1, sxtw #3
   26ce8:	add	x0, x19, w4, sxtw #3
   26cec:	sbfiz	x2, x2, #3, #32
   26cf0:	bl	18948 <__sanitizer_set_report_fd@@Base+0x1698>
   26cf4:	mov	w0, #0x1                   	// #1
   26cf8:	str	xzr, [x19, #32]
   26cfc:	ldp	x19, x30, [sp], #16
   26d00:	ret
   26d04:	nop
   26d08:	adrp	x1, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   26d0c:	str	x0, [x1, #552]
   26d10:	ret
   26d14:	nop
   26d18:	stp	x19, x20, [sp, #-32]!
   26d1c:	adrp	x20, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   26d20:	add	x0, x20, #0x200
   26d24:	ldr	x0, [x0, #40]
   26d28:	str	x30, [sp, #16]
   26d2c:	cbz	x0, 26d34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6154>
   26d30:	blr	x0
   26d34:	add	x20, x20, #0x200
   26d38:	mov	x19, #0x4                   	// #4
   26d3c:	ldr	x0, [x20, x19, lsl #3]
   26d40:	cbz	x0, 26d48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6168>
   26d44:	blr	x0
   26d48:	sub	x19, x19, #0x1
   26d4c:	cmn	x19, #0x1
   26d50:	b.ne	26d3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x615c>  // b.any
   26d54:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26d58:	ldr	x0, [x0, #4040]
   26d5c:	ldrb	w1, [x0, #220]
   26d60:	cbz	w1, 26d68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6188>
   26d64:	bl	1ce50 <__sanitizer_set_report_fd@@Base+0x5ba0>
   26d68:	ldr	w0, [x0, #216]
   26d6c:	bl	199f0 <__sanitizer_set_report_fd@@Base+0x2740>
   26d70:	adrp	x1, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   26d74:	str	x0, [x1, #560]
   26d78:	ret
   26d7c:	nop
   26d80:	stp	x19, x20, [sp, #-48]!
   26d84:	adrp	x6, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   26d88:	add	x6, x6, #0x200
   26d8c:	add	x5, x6, #0x38
   26d90:	mov	x19, x0
   26d94:	mov	w20, w1
   26d98:	stp	x21, x22, [sp, #16]
   26d9c:	mov	x21, x2
   26da0:	mov	x22, x3
   26da4:	stp	x23, x30, [sp, #32]
   26da8:	mov	x23, x4
   26dac:	ldxr	w7, [x5]
   26db0:	add	w8, w7, #0x1
   26db4:	stlxr	w9, w8, [x5]
   26db8:	cbnz	w9, 26dac <__sanitizer_get_module_and_offset_for_pc@@Base+0x61cc>
   26dbc:	dmb	ish
   26dc0:	cmp	w7, #0xa
   26dc4:	b.hi	26df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6218>  // b.pmore
   26dc8:	ldr	x5, [x6, #48]
   26dcc:	cbz	x5, 26dd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61f4>
   26dd0:	blr	x5
   26dd4:	mov	x5, x23
   26dd8:	mov	x4, x22
   26ddc:	mov	x3, x21
   26de0:	mov	w2, w20
   26de4:	mov	x1, x19
   26de8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26dec:	add	x0, x0, #0xa88
   26df0:	bl	1e648 <OnPrint@@Base+0x398>
   26df4:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   26df8:	mov	w0, #0x2                   	// #2
   26dfc:	bl	1ce38 <__sanitizer_set_report_fd@@Base+0x5b88>
   26e00:	brk	#0x3e8
   26e04:	nop

0000000000026e08 <__sanitizer_set_death_callback@@Base>:
   26e08:	adrp	x1, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   26e0c:	str	x0, [x1, #552]
   26e10:	ret
   26e14:	nop
   26e18:	ldr	x2, [x0, #32]
   26e1c:	cmp	x1, x2
   26e20:	b.eq	26e2c <__sanitizer_set_death_callback@@Base+0x24>  // b.none
   26e24:	mov	w0, #0x0                   	// #0
   26e28:	ret
   26e2c:	ldr	w0, [x0, #112]
   26e30:	tst	w0, #0xfffffffb
   26e34:	cset	w0, ne  // ne = any
   26e38:	ret
   26e3c:	nop
   26e40:	adrp	x2, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   26e44:	add	x2, x2, #0xe20
   26e48:	str	x2, [x0]
   26e4c:	str	w1, [x0, #8]
   26e50:	str	xzr, [x0, #16]
   26e54:	str	wzr, [x0, #24]
   26e58:	stp	xzr, xzr, [x0, #32]
   26e5c:	strb	wzr, [x0, #48]
   26e60:	str	wzr, [x0, #112]
   26e64:	strh	wzr, [x0, #116]
   26e68:	str	wzr, [x0, #120]
   26e6c:	str	xzr, [x0, #128]
   26e70:	dmb	ish
   26e74:	str	wzr, [x0, #136]
   26e78:	ret
   26e7c:	nop
   26e80:	str	x30, [sp, #-16]!
   26e84:	adrp	x1, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   26e88:	add	x1, x1, #0xe20
   26e8c:	str	x1, [x0]
   26e90:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26e94:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   26e98:	add	x0, x3, #0xab8
   26e9c:	add	x2, x2, #0x870
   26ea0:	mov	x4, #0x0                   	// #0
   26ea4:	mov	x3, #0x0                   	// #0
   26ea8:	mov	w1, #0x1b                  	// #27
   26eac:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   26eb0:	strb	wzr, [x0, #48]
   26eb4:	cbz	x1, 26ed8 <__sanitizer_set_death_callback@@Base+0xd0>
   26eb8:	stp	x19, x30, [sp, #-16]!
   26ebc:	mov	x19, x0
   26ec0:	mov	x2, #0x40                  	// #64
   26ec4:	add	x0, x0, #0x30
   26ec8:	bl	18dd0 <__sanitizer_set_report_fd@@Base+0x1b20>
   26ecc:	strb	wzr, [x19, #111]
   26ed0:	ldp	x19, x30, [sp], #16
   26ed4:	ret
   26ed8:	ret
   26edc:	nop
   26ee0:	ldr	w2, [x0, #112]
   26ee4:	sub	w2, w2, #0x2
   26ee8:	cmp	w2, #0x1
   26eec:	b.hi	26f20 <__sanitizer_set_death_callback@@Base+0x118>  // b.pmore
   26ef0:	ldr	x3, [x0]
   26ef4:	adrp	x2, 10000 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x70>
   26ef8:	add	x1, x2, #0xbd0
   26efc:	mov	w4, #0x4                   	// #4
   26f00:	str	xzr, [x0, #40]
   26f04:	ldr	x2, [x3]
   26f08:	str	w4, [x0, #112]
   26f0c:	cmp	x2, x1
   26f10:	b.ne	26f18 <__sanitizer_set_death_callback@@Base+0x110>  // b.any
   26f14:	ret
   26f18:	mov	x16, x2
   26f1c:	br	x16
   26f20:	str	x30, [sp, #-16]!
   26f24:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26f28:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26f2c:	add	x2, x2, #0xb00
   26f30:	add	x0, x0, #0xab8
   26f34:	mov	x4, #0x0                   	// #0
   26f38:	mov	x3, #0x0                   	// #0
   26f3c:	mov	w1, #0x27                  	// #39
   26f40:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   26f44:	nop
   26f48:	dmb	ish
   26f4c:	mov	w1, #0x1                   	// #1
   26f50:	str	w1, [x0, #136]
   26f54:	ret
   26f58:	ldr	w0, [x0, #136]
   26f5c:	dmb	ish
   26f60:	cmp	w0, #0x0
   26f64:	cset	w0, ne  // ne = any
   26f68:	ret
   26f6c:	nop
   26f70:	ldrb	w3, [x0, #116]
   26f74:	str	x30, [sp, #-16]!
   26f78:	cbnz	w3, 26fc0 <__sanitizer_set_death_callback@@Base+0x1b8>
   26f7c:	ldr	w4, [x0, #112]
   26f80:	cmp	x4, #0x3
   26f84:	b.ne	26fe0 <__sanitizer_set_death_callback@@Base+0x1d8>  // b.any
   26f88:	ldr	x4, [x0]
   26f8c:	adrp	x3, 10000 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x70>
   26f90:	add	x2, x3, #0xbd8
   26f94:	mov	w5, #0x4                   	// #4
   26f98:	str	xzr, [x0, #40]
   26f9c:	ldr	x3, [x4, #8]
   26fa0:	str	w5, [x0, #112]
   26fa4:	cmp	x3, x2
   26fa8:	b.ne	26fb4 <__sanitizer_set_death_callback@@Base+0x1ac>  // b.any
   26fac:	ldr	x30, [sp], #16
   26fb0:	ret
   26fb4:	ldr	x30, [sp], #16
   26fb8:	mov	x16, x3
   26fbc:	br	x16
   26fc0:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26fc4:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26fc8:	add	x2, x2, #0xb50
   26fcc:	add	x0, x0, #0xab8
   26fd0:	mov	x4, #0x1                   	// #1
   26fd4:	mov	x3, #0x0                   	// #0
   26fd8:	mov	w1, #0x38                  	// #56
   26fdc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   26fe0:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26fe4:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   26fe8:	add	x2, x2, #0xb70
   26fec:	add	x0, x0, #0xab8
   26ff0:	mov	x3, #0x3                   	// #3
   26ff4:	mov	w1, #0x39                  	// #57
   26ff8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   26ffc:	nop
   27000:	ldrb	w1, [x0, #116]
   27004:	cbz	w1, 27030 <__sanitizer_set_death_callback@@Base+0x228>
   27008:	ldr	w1, [x0, #112]
   2700c:	cmp	w1, #0x1
   27010:	b.eq	27030 <__sanitizer_set_death_callback@@Base+0x228>  // b.none
   27014:	ldr	x2, [x0]
   27018:	adrp	x1, 27000 <__sanitizer_set_death_callback@@Base+0x1f8>
   2701c:	add	x1, x1, #0xd88
   27020:	ldr	x2, [x2, #16]
   27024:	cmp	x2, x1
   27028:	b.ne	27050 <__sanitizer_set_death_callback@@Base+0x248>  // b.any
   2702c:	ret
   27030:	ldr	x2, [x0]
   27034:	mov	w1, #0x3                   	// #3
   27038:	str	w1, [x0, #112]
   2703c:	adrp	x1, 27000 <__sanitizer_set_death_callback@@Base+0x1f8>
   27040:	add	x1, x1, #0xd88
   27044:	ldr	x2, [x2, #16]
   27048:	cmp	x2, x1
   2704c:	b.eq	2702c <__sanitizer_set_death_callback@@Base+0x224>  // b.none
   27050:	mov	x16, x2
   27054:	br	x16
   27058:	ldr	x6, [x0]
   2705c:	strb	w2, [x0, #117]
   27060:	mov	w7, #0x2                   	// #2
   27064:	adrp	x5, 27000 <__sanitizer_set_death_callback@@Base+0x1f8>
   27068:	add	x5, x5, #0xd90
   2706c:	ldr	x2, [x6, #24]
   27070:	str	x1, [x0, #32]
   27074:	str	w7, [x0, #112]
   27078:	cmp	x2, x5
   2707c:	b.ne	27084 <__sanitizer_set_death_callback@@Base+0x27c>  // b.any
   27080:	ret
   27084:	mov	x1, x3
   27088:	mov	x16, x2
   2708c:	br	x16
   27090:	ldr	w6, [x0, #8]
   27094:	mov	w7, #0x1                   	// #1
   27098:	str	x2, [x0, #16]
   2709c:	str	x1, [x0, #40]
   270a0:	str	w7, [x0, #112]
   270a4:	strb	w3, [x0, #116]
   270a8:	cbz	w6, 270b0 <__sanitizer_set_death_callback@@Base+0x2a8>
   270ac:	str	w4, [x0, #120]
   270b0:	ldr	x1, [x0]
   270b4:	adrp	x2, 10000 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x70>
   270b8:	add	x2, x2, #0xbe0
   270bc:	ldr	x3, [x1, #32]
   270c0:	cmp	x3, x2
   270c4:	b.ne	270cc <__sanitizer_set_death_callback@@Base+0x2c4>  // b.any
   270c8:	ret
   270cc:	mov	x1, x5
   270d0:	mov	x16, x3
   270d4:	br	x16
   270d8:	strb	wzr, [x0, #48]
   270dc:	str	wzr, [x0, #112]
   270e0:	dmb	ish
   270e4:	str	wzr, [x0, #136]
   270e8:	ldr	x2, [x0]
   270ec:	adrp	x1, 10000 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x70>
   270f0:	add	x1, x1, #0xbe8
   270f4:	ldr	x2, [x2, #40]
   270f8:	cmp	x2, x1
   270fc:	b.ne	27104 <__sanitizer_set_death_callback@@Base+0x2fc>  // b.any
   27100:	ret
   27104:	mov	x16, x2
   27108:	br	x16
   2710c:	nop
   27110:	stp	x19, x20, [sp, #-32]!
   27114:	add	x3, x0, #0xa0
   27118:	mov	x19, x0
   2711c:	ldr	x2, [x0, #160]
   27120:	str	x30, [sp, #16]
   27124:	str	xzr, [x1, #128]
   27128:	cbnz	x2, 27154 <__sanitizer_set_death_callback@@Base+0x34c>
   2712c:	mov	x0, #0x1                   	// #1
   27130:	stp	x1, x1, [x3, #8]
   27134:	mov	x2, x0
   27138:	str	x0, [x19, #160]
   2713c:	ldr	w0, [x19, #12]
   27140:	cmp	x2, x0
   27144:	b.hi	27174 <__sanitizer_set_death_callback@@Base+0x36c>  // b.pmore
   27148:	ldr	x30, [sp, #16]
   2714c:	ldp	x19, x20, [sp], #32
   27150:	ret
   27154:	ldr	x0, [x3, #16]
   27158:	add	x2, x2, #0x1
   2715c:	str	x1, [x0, #128]
   27160:	str	x1, [x3, #16]
   27164:	ldr	w0, [x19, #12]
   27168:	str	x2, [x19, #160]
   2716c:	cmp	x2, x0
   27170:	b.ls	27148 <__sanitizer_set_death_callback@@Base+0x340>  // b.plast
   27174:	ldr	x20, [x19, #168]
   27178:	ldr	x0, [x20, #128]
   2717c:	str	x0, [x3, #8]
   27180:	cbz	x0, 27204 <__sanitizer_set_death_callback@@Base+0x3fc>
   27184:	ldr	w3, [x20, #112]
   27188:	sub	x2, x2, #0x1
   2718c:	str	x2, [x19, #160]
   27190:	cmp	x3, #0x4
   27194:	b.ne	2720c <__sanitizer_set_death_callback@@Base+0x404>  // b.any
   27198:	mov	x0, x20
   2719c:	bl	270d8 <__sanitizer_set_death_callback@@Base+0x2d0>
   271a0:	ldr	w0, [x20, #24]
   271a4:	add	w0, w0, #0x1
   271a8:	str	w0, [x20, #24]
   271ac:	ldr	w1, [x19, #16]
   271b0:	cmp	w1, #0x0
   271b4:	ccmp	w0, w1, #0x0, ne  // ne = any
   271b8:	b.cs	27148 <__sanitizer_set_death_callback@@Base+0x340>  // b.hs, b.nlast
   271bc:	ldr	x0, [x19, #184]
   271c0:	cbnz	x0, 271e0 <__sanitizer_set_death_callback@@Base+0x3d8>
   271c4:	str	xzr, [x20, #128]
   271c8:	mov	x1, #0x1                   	// #1
   271cc:	stp	x1, x20, [x19, #184]
   271d0:	str	x20, [x19, #200]
   271d4:	ldr	x30, [sp, #16]
   271d8:	ldp	x19, x20, [sp], #32
   271dc:	ret
   271e0:	str	xzr, [x20, #128]
   271e4:	add	x0, x0, #0x1
   271e8:	ldr	x30, [sp, #16]
   271ec:	ldr	x2, [x19, #200]
   271f0:	str	x20, [x2, #128]
   271f4:	str	x0, [x19, #184]
   271f8:	str	x20, [x19, #200]
   271fc:	ldp	x19, x20, [sp], #32
   27200:	ret
   27204:	str	xzr, [x3, #16]
   27208:	b	27184 <__sanitizer_set_death_callback@@Base+0x37c>
   2720c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27210:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27214:	add	x2, x2, #0xb98
   27218:	add	x0, x0, #0xab8
   2721c:	mov	x4, #0x4                   	// #4
   27220:	mov	w1, #0x143                 	// #323
   27224:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   27228:	stp	x19, x30, [sp, #-16]!
   2722c:	mov	x19, x0
   27230:	add	x0, x0, #0x18
   27234:	str	x1, [x19]
   27238:	stp	w2, w3, [x19, #8]
   2723c:	str	w4, [x19, #16]
   27240:	bl	19d10 <__sanitizer_set_report_fd@@Base+0x2a60>
   27244:	str	wzr, [x19, #112]
   27248:	ldr	w0, [x19, #8]
   2724c:	mov	w2, #0x0                   	// #0
   27250:	stp	xzr, xzr, [x19, #120]
   27254:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27258:	add	x1, x1, #0xbc8
   2725c:	stp	xzr, xzr, [x19, #136]
   27260:	lsl	x0, x0, #3
   27264:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   27268:	stp	x0, xzr, [x19, #152]
   2726c:	stp	xzr, xzr, [x19, #168]
   27270:	stp	xzr, xzr, [x19, #184]
   27274:	str	xzr, [x19, #200]
   27278:	ldp	x19, x30, [sp], #16
   2727c:	ret
   27280:	stp	x19, x20, [sp, #-48]!
   27284:	mov	x19, x0
   27288:	mov	x20, x3
   2728c:	stp	x23, x30, [sp, #32]
   27290:	add	x23, x0, #0x18
   27294:	mov	x0, x23
   27298:	stp	x21, x22, [sp, #16]
   2729c:	mov	x22, x1
   272a0:	mov	x21, x2
   272a4:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   272a8:	cbz	x22, 272b4 <__sanitizer_set_death_callback@@Base+0x4ac>
   272ac:	ldr	w0, [x19, #112]
   272b0:	str	x0, [x22]
   272b4:	cbz	x21, 272c0 <__sanitizer_set_death_callback@@Base+0x4b8>
   272b8:	ldr	x0, [x19, #144]
   272bc:	str	x0, [x21]
   272c0:	cbz	x20, 272cc <__sanitizer_set_death_callback@@Base+0x4c4>
   272c4:	ldr	x0, [x19, #128]
   272c8:	str	x0, [x20]
   272cc:	mov	x0, x23
   272d0:	ldp	x21, x22, [sp, #16]
   272d4:	ldp	x23, x30, [sp, #32]
   272d8:	ldp	x19, x20, [sp], #48
   272dc:	b	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   272e0:	stp	x19, x20, [sp, #-32]!
   272e4:	mov	x19, x0
   272e8:	add	x20, x0, #0x18
   272ec:	mov	x0, x20
   272f0:	str	x30, [sp, #16]
   272f4:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   272f8:	ldr	x19, [x19, #136]
   272fc:	mov	x0, x20
   27300:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   27304:	mov	x0, x19
   27308:	ldr	x30, [sp, #16]
   2730c:	ldp	x19, x20, [sp], #32
   27310:	ret
   27314:	nop
   27318:	stp	x19, x20, [sp, #-64]!
   2731c:	mov	x19, x0
   27320:	stp	x25, x30, [sp, #48]
   27324:	add	x25, x0, #0x18
   27328:	mov	x0, x25
   2732c:	stp	x21, x22, [sp, #16]
   27330:	mov	x21, x1
   27334:	mov	w22, w3
   27338:	stp	x23, x24, [sp, #32]
   2733c:	mov	x23, x4
   27340:	and	w24, w2, #0xff
   27344:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   27348:	ldr	x1, [x19, #184]
   2734c:	cbz	x1, 27418 <__sanitizer_set_death_callback@@Base+0x610>
   27350:	ldr	x0, [x19, #192]
   27354:	ldr	x2, [x0, #128]
   27358:	str	x2, [x19, #192]
   2735c:	cbz	x2, 2746c <__sanitizer_set_death_callback@@Base+0x664>
   27360:	ldr	w20, [x0, #8]
   27364:	sub	x1, x1, #0x1
   27368:	str	x1, [x19, #184]
   2736c:	mov	w3, w20
   27370:	mov	x1, #0xffffffff            	// #4294967295
   27374:	cmp	x3, x1
   27378:	b.eq	2749c <__sanitizer_set_death_callback@@Base+0x694>  // b.none
   2737c:	ldr	w4, [x19, #8]
   27380:	cmp	x3, x4
   27384:	b.cs	274b8 <__sanitizer_set_death_callback@@Base+0x6b0>  // b.hs, b.nlast
   27388:	ldr	w3, [x0, #112]
   2738c:	cbnz	x3, 274d0 <__sanitizer_set_death_callback@@Base+0x6c8>
   27390:	ldp	x2, x1, [x19, #128]
   27394:	add	x3, x2, #0x1
   27398:	str	x3, [x19, #128]
   2739c:	cmp	x3, x1
   273a0:	b.ls	273b4 <__sanitizer_set_death_callback@@Base+0x5ac>  // b.plast
   273a4:	add	x4, x1, #0x1
   273a8:	str	x4, [x19, #136]
   273ac:	cmp	x2, x1
   273b0:	b.ne	274ec <__sanitizer_set_death_callback@@Base+0x6e4>  // b.any
   273b4:	ldr	x1, [x19, #120]
   273b8:	mov	w3, #0x1                   	// #1
   273bc:	ldr	w2, [x0, #8]
   273c0:	add	x4, x1, #0x1
   273c4:	str	x4, [x19, #120]
   273c8:	str	x1, [x0, #16]
   273cc:	str	x21, [x0, #40]
   273d0:	str	w3, [x0, #112]
   273d4:	strb	w24, [x0, #116]
   273d8:	cbz	w2, 273e0 <__sanitizer_set_death_callback@@Base+0x5d8>
   273dc:	str	w22, [x0, #120]
   273e0:	ldr	x2, [x0]
   273e4:	adrp	x1, 10000 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x70>
   273e8:	add	x1, x1, #0xbe0
   273ec:	ldr	x2, [x2, #32]
   273f0:	cmp	x2, x1
   273f4:	b.ne	27474 <__sanitizer_set_death_callback@@Base+0x66c>  // b.any
   273f8:	mov	x0, x25
   273fc:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   27400:	mov	w0, w20
   27404:	ldp	x21, x22, [sp, #16]
   27408:	ldp	x23, x24, [sp, #32]
   2740c:	ldp	x25, x30, [sp, #48]
   27410:	ldp	x19, x20, [sp], #64
   27414:	ret
   27418:	ldr	w2, [x19, #8]
   2741c:	ldr	w20, [x19, #112]
   27420:	cmp	w20, w2
   27424:	b.cs	27504 <__sanitizer_set_death_callback@@Base+0x6fc>  // b.hs, b.nlast
   27428:	ldr	x1, [x19]
   2742c:	add	w0, w20, #0x1
   27430:	str	w0, [x19, #112]
   27434:	mov	w0, w20
   27438:	blr	x1
   2743c:	ldr	x1, [x19, #152]
   27440:	mov	w3, w20
   27444:	str	x0, [x1, x3, lsl #3]
   27448:	cbnz	x0, 27370 <__sanitizer_set_death_callback@@Base+0x568>
   2744c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27450:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27454:	add	x2, x2, #0xc08
   27458:	add	x0, x0, #0xab8
   2745c:	mov	x4, #0x0                   	// #0
   27460:	mov	x3, #0x0                   	// #0
   27464:	mov	w1, #0x9c                  	// #156
   27468:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2746c:	str	xzr, [x19, #200]
   27470:	b	27360 <__sanitizer_set_death_callback@@Base+0x558>
   27474:	mov	x1, x23
   27478:	blr	x2
   2747c:	mov	x0, x25
   27480:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   27484:	mov	w0, w20
   27488:	ldp	x21, x22, [sp, #16]
   2748c:	ldp	x23, x24, [sp, #32]
   27490:	ldp	x25, x30, [sp, #48]
   27494:	ldp	x19, x20, [sp], #64
   27498:	ret
   2749c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   274a0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   274a4:	add	x2, x2, #0xc20
   274a8:	add	x0, x0, #0xab8
   274ac:	mov	x4, x3
   274b0:	mov	w1, #0x9d                  	// #157
   274b4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   274b8:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   274bc:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   274c0:	add	x2, x2, #0xc40
   274c4:	add	x0, x0, #0xab8
   274c8:	mov	w1, #0x9e                  	// #158
   274cc:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   274d0:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   274d4:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   274d8:	add	x2, x2, #0xc60
   274dc:	add	x0, x0, #0xab8
   274e0:	mov	x4, #0x0                   	// #0
   274e4:	mov	w1, #0x9f                  	// #159
   274e8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   274ec:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   274f0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   274f4:	add	x2, x2, #0xc90
   274f8:	add	x0, x0, #0xab8
   274fc:	mov	w1, #0xa3                  	// #163
   27500:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   27504:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27508:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2750c:	add	x0, x0, #0xbd8
   27510:	ldr	x1, [x1, #4008]
   27514:	ldr	x1, [x1]
   27518:	bl	1e648 <OnPrint@@Base+0x398>
   2751c:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   27520:	stp	x19, x20, [sp, #-48]!
   27524:	mov	x20, x0
   27528:	add	x0, x0, #0x18
   2752c:	stp	x21, x22, [sp, #16]
   27530:	mov	x22, x1
   27534:	mov	x21, x2
   27538:	str	x30, [sp, #32]
   2753c:	bl	19e28 <__sanitizer_set_report_fd@@Base+0x2b78>
   27540:	ldr	w3, [x20, #112]
   27544:	cbz	w3, 27574 <__sanitizer_set_death_callback@@Base+0x76c>
   27548:	mov	w19, #0x0                   	// #0
   2754c:	nop
   27550:	ldr	x0, [x20, #152]
   27554:	mov	x1, x21
   27558:	ldr	x0, [x0, w19, uxtw #3]
   2755c:	add	w19, w19, #0x1
   27560:	cbz	x0, 2756c <__sanitizer_set_death_callback@@Base+0x764>
   27564:	blr	x22
   27568:	ldr	w3, [x20, #112]
   2756c:	cmp	w3, w19
   27570:	b.hi	27550 <__sanitizer_set_death_callback@@Base+0x748>  // b.pmore
   27574:	ldp	x21, x22, [sp, #16]
   27578:	ldr	x30, [sp, #32]
   2757c:	ldp	x19, x20, [sp], #48
   27580:	ret
   27584:	nop
   27588:	stp	x19, x20, [sp, #-64]!
   2758c:	stp	x21, x22, [sp, #16]
   27590:	mov	x21, x0
   27594:	mov	x22, x2
   27598:	stp	x23, x24, [sp, #32]
   2759c:	add	x24, x0, #0x18
   275a0:	mov	x23, x1
   275a4:	mov	x0, x24
   275a8:	str	x30, [sp, #48]
   275ac:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   275b0:	ldr	w3, [x21, #112]
   275b4:	cbz	w3, 275f0 <__sanitizer_set_death_callback@@Base+0x7e8>
   275b8:	mov	w19, #0x0                   	// #0
   275bc:	nop
   275c0:	ldr	x0, [x21, #152]
   275c4:	mov	x1, x22
   275c8:	ldr	x20, [x0, w19, uxtw #3]
   275cc:	mov	x0, x20
   275d0:	cbz	x20, 275e4 <__sanitizer_set_death_callback@@Base+0x7dc>
   275d4:	blr	x23
   275d8:	tst	w0, #0xff
   275dc:	b.ne	27614 <__sanitizer_set_death_callback@@Base+0x80c>  // b.any
   275e0:	ldr	w3, [x21, #112]
   275e4:	add	w19, w19, #0x1
   275e8:	cmp	w3, w19
   275ec:	b.hi	275c0 <__sanitizer_set_death_callback@@Base+0x7b8>  // b.pmore
   275f0:	mov	x0, x24
   275f4:	mov	w19, #0xffffffff            	// #-1
   275f8:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   275fc:	mov	w0, w19
   27600:	ldp	x21, x22, [sp, #16]
   27604:	ldp	x23, x24, [sp, #32]
   27608:	ldr	x30, [sp, #48]
   2760c:	ldp	x19, x20, [sp], #64
   27610:	ret
   27614:	ldr	w19, [x20, #8]
   27618:	mov	x0, x24
   2761c:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   27620:	mov	w0, w19
   27624:	ldp	x21, x22, [sp, #16]
   27628:	ldp	x23, x24, [sp, #32]
   2762c:	ldr	x30, [sp, #48]
   27630:	ldp	x19, x20, [sp], #64
   27634:	ret
   27638:	stp	x19, x20, [sp, #-48]!
   2763c:	stp	x21, x22, [sp, #16]
   27640:	mov	x21, x0
   27644:	mov	x22, x2
   27648:	add	x0, x0, #0x18
   2764c:	stp	x23, x30, [sp, #32]
   27650:	mov	x23, x1
   27654:	bl	19e28 <__sanitizer_set_report_fd@@Base+0x2b78>
   27658:	ldr	w3, [x21, #112]
   2765c:	cbz	w3, 27698 <__sanitizer_set_death_callback@@Base+0x890>
   27660:	mov	w19, #0x0                   	// #0
   27664:	nop
   27668:	ldr	x0, [x21, #152]
   2766c:	mov	x1, x22
   27670:	ldr	x20, [x0, w19, uxtw #3]
   27674:	mov	x0, x20
   27678:	cbz	x20, 2768c <__sanitizer_set_death_callback@@Base+0x884>
   2767c:	blr	x23
   27680:	tst	w0, #0xff
   27684:	b.ne	2769c <__sanitizer_set_death_callback@@Base+0x894>  // b.any
   27688:	ldr	w3, [x21, #112]
   2768c:	add	w19, w19, #0x1
   27690:	cmp	w3, w19
   27694:	b.hi	27668 <__sanitizer_set_death_callback@@Base+0x860>  // b.pmore
   27698:	mov	x20, #0x0                   	// #0
   2769c:	mov	x0, x20
   276a0:	ldp	x21, x22, [sp, #16]
   276a4:	ldp	x23, x30, [sp, #32]
   276a8:	ldp	x19, x20, [sp], #48
   276ac:	ret
   276b0:	mov	x2, x1
   276b4:	adrp	x3, 26000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5420>
   276b8:	add	x1, x3, #0xe18
   276bc:	b	27638 <__sanitizer_set_death_callback@@Base+0x830>
   276c0:	stp	x19, x20, [sp, #-48]!
   276c4:	mov	x19, x0
   276c8:	mov	w20, w1
   276cc:	stp	x21, x22, [sp, #16]
   276d0:	add	x22, x0, #0x18
   276d4:	mov	x21, x2
   276d8:	mov	x0, x22
   276dc:	str	x30, [sp, #32]
   276e0:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   276e4:	ldr	w4, [x19, #112]
   276e8:	mov	w3, w20
   276ec:	cmp	x4, w20, uxtw
   276f0:	b.ls	2773c <__sanitizer_set_death_callback@@Base+0x934>  // b.plast
   276f4:	ldr	x0, [x19, #152]
   276f8:	ldr	x19, [x0, x3, lsl #3]
   276fc:	cbz	x19, 27754 <__sanitizer_set_death_callback@@Base+0x94c>
   27700:	ldr	w4, [x19, #112]
   27704:	cmp	x4, #0x2
   27708:	b.ne	27774 <__sanitizer_set_death_callback@@Base+0x96c>  // b.any
   2770c:	strb	wzr, [x19, #48]
   27710:	cbz	x21, 27728 <__sanitizer_set_death_callback@@Base+0x920>
   27714:	mov	x1, x21
   27718:	add	x0, x19, #0x30
   2771c:	mov	x2, #0x40                  	// #64
   27720:	bl	18dd0 <__sanitizer_set_report_fd@@Base+0x1b20>
   27724:	strb	wzr, [x19, #111]
   27728:	mov	x0, x22
   2772c:	ldp	x21, x22, [sp, #16]
   27730:	ldr	x30, [sp, #32]
   27734:	ldp	x19, x20, [sp], #48
   27738:	b	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   2773c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27740:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27744:	add	x2, x2, #0xcc0
   27748:	add	x0, x0, #0xab8
   2774c:	mov	w1, #0xd7                  	// #215
   27750:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   27754:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27758:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2775c:	add	x2, x2, #0xc08
   27760:	add	x0, x0, #0xab8
   27764:	mov	x4, #0x0                   	// #0
   27768:	mov	x3, #0x0                   	// #0
   2776c:	mov	w1, #0xd9                  	// #217
   27770:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   27774:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27778:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2777c:	add	x2, x2, #0xce0
   27780:	add	x0, x0, #0xab8
   27784:	mov	x3, #0x2                   	// #2
   27788:	mov	w1, #0xda                  	// #218
   2778c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   27790:	stp	x19, x20, [sp, #-48]!
   27794:	mov	x19, x0
   27798:	mov	x20, x1
   2779c:	stp	x21, x22, [sp, #16]
   277a0:	add	x22, x0, #0x18
   277a4:	mov	x21, x2
   277a8:	mov	x0, x22
   277ac:	str	x30, [sp, #32]
   277b0:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   277b4:	ldr	w4, [x19, #112]
   277b8:	cbz	w4, 2780c <__sanitizer_set_death_callback@@Base+0xa04>
   277bc:	mov	x0, #0x0                   	// #0
   277c0:	ldr	x5, [x19, #152]
   277c4:	b	277d0 <__sanitizer_set_death_callback@@Base+0x9c8>
   277c8:	cmp	w4, w0
   277cc:	b.ls	2780c <__sanitizer_set_death_callback@@Base+0xa04>  // b.plast
   277d0:	ldr	x19, [x5, x0, lsl #3]
   277d4:	add	x0, x0, #0x1
   277d8:	cbz	x19, 277c8 <__sanitizer_set_death_callback@@Base+0x9c0>
   277dc:	ldr	x3, [x19, #40]
   277e0:	cmp	x3, x20
   277e4:	b.ne	277c8 <__sanitizer_set_death_callback@@Base+0x9c0>  // b.any
   277e8:	ldr	w1, [x19, #112]
   277ec:	cbz	w1, 277c8 <__sanitizer_set_death_callback@@Base+0x9c0>
   277f0:	strb	wzr, [x19, #48]
   277f4:	cbz	x21, 2780c <__sanitizer_set_death_callback@@Base+0xa04>
   277f8:	mov	x1, x21
   277fc:	add	x0, x19, #0x30
   27800:	mov	x2, #0x40                  	// #64
   27804:	bl	18dd0 <__sanitizer_set_report_fd@@Base+0x1b20>
   27808:	strb	wzr, [x19, #111]
   2780c:	mov	x0, x22
   27810:	ldp	x21, x22, [sp, #16]
   27814:	ldr	x30, [sp, #32]
   27818:	ldp	x19, x20, [sp], #48
   2781c:	b	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   27820:	stp	x19, x20, [sp, #-48]!
   27824:	mov	x19, x0
   27828:	mov	w20, w1
   2782c:	stp	x21, x22, [sp, #16]
   27830:	add	x21, x0, #0x18
   27834:	mov	x22, x2
   27838:	mov	x0, x21
   2783c:	str	x30, [sp, #32]
   27840:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   27844:	ldr	w4, [x19, #112]
   27848:	mov	w3, w20
   2784c:	cmp	x4, w20, uxtw
   27850:	b.ls	27904 <__sanitizer_set_death_callback@@Base+0xafc>  // b.plast
   27854:	ldr	x0, [x19, #152]
   27858:	ldr	x20, [x0, x3, lsl #3]
   2785c:	cbz	x20, 2791c <__sanitizer_set_death_callback@@Base+0xb14>
   27860:	ldr	w1, [x20, #112]
   27864:	cbz	w1, 278a4 <__sanitizer_set_death_callback@@Base+0xa9c>
   27868:	ldr	x2, [x20]
   2786c:	adrp	x0, 10000 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x70>
   27870:	add	x0, x0, #0xbf0
   27874:	ldr	x2, [x2, #48]
   27878:	cmp	x2, x0
   2787c:	b.ne	278f0 <__sanitizer_set_death_callback@@Base+0xae8>  // b.any
   27880:	cmp	w1, #0x3
   27884:	b.eq	278d0 <__sanitizer_set_death_callback@@Base+0xac8>  // b.none
   27888:	mov	w0, #0x1                   	// #1
   2788c:	strb	w0, [x20, #116]
   27890:	mov	x0, x21
   27894:	ldp	x21, x22, [sp, #16]
   27898:	ldr	x30, [sp, #32]
   2789c:	ldp	x19, x20, [sp], #48
   278a0:	b	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   278a4:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   278a8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   278ac:	add	x0, x0, #0xd28
   278b0:	ldr	x1, [x1, #4008]
   278b4:	ldr	x1, [x1]
   278b8:	bl	1e648 <OnPrint@@Base+0x398>
   278bc:	mov	x0, x21
   278c0:	ldp	x21, x22, [sp, #16]
   278c4:	ldr	x30, [sp, #32]
   278c8:	ldp	x19, x20, [sp], #48
   278cc:	b	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   278d0:	mov	x0, x20
   278d4:	bl	26ee0 <__sanitizer_set_death_callback@@Base+0xd8>
   278d8:	ldr	w0, [x20, #8]
   278dc:	cbz	w0, 27890 <__sanitizer_set_death_callback@@Base+0xa88>
   278e0:	mov	x1, x20
   278e4:	mov	x0, x19
   278e8:	bl	27110 <__sanitizer_set_death_callback@@Base+0x308>
   278ec:	b	27890 <__sanitizer_set_death_callback@@Base+0xa88>
   278f0:	mov	x1, x22
   278f4:	mov	x0, x20
   278f8:	blr	x2
   278fc:	ldr	w1, [x20, #112]
   27900:	b	27880 <__sanitizer_set_death_callback@@Base+0xa78>
   27904:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27908:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2790c:	add	x2, x2, #0xcc0
   27910:	add	x0, x0, #0xab8
   27914:	mov	w1, #0xed                  	// #237
   27918:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2791c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27920:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27924:	add	x2, x2, #0xc08
   27928:	add	x0, x0, #0xab8
   2792c:	mov	x4, #0x0                   	// #0
   27930:	mov	x3, #0x0                   	// #0
   27934:	mov	w1, #0xef                  	// #239
   27938:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2793c:	nop
   27940:	stp	x19, x20, [sp, #-64]!
   27944:	mov	x20, x0
   27948:	stp	x21, x22, [sp, #16]
   2794c:	add	x22, x0, #0x18
   27950:	ubfiz	x21, x1, #3, #32
   27954:	mov	x0, x22
   27958:	stp	x23, x24, [sp, #32]
   2795c:	mov	w23, w1
   27960:	mov	x24, x2
   27964:	str	x30, [sp, #48]
   27968:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   2796c:	ldr	w4, [x20, #112]
   27970:	cmp	x23, x4
   27974:	b.cs	279b8 <__sanitizer_set_death_callback@@Base+0xbb0>  // b.hs, b.nlast
   27978:	ldr	x0, [x20, #152]
   2797c:	ldr	x19, [x0, x21]
   27980:	cbz	x19, 27a0c <__sanitizer_set_death_callback@@Base+0xc04>
   27984:	ldr	w0, [x19, #112]
   27988:	cbz	w0, 27a2c <__sanitizer_set_death_callback@@Base+0xc24>
   2798c:	ldr	w0, [x19, #136]
   27990:	dmb	ish
   27994:	cbnz	w0, 279d4 <__sanitizer_set_death_callback@@Base+0xbcc>
   27998:	mov	x0, x22
   2799c:	bl	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   279a0:	bl	199e0 <__sanitizer_set_report_fd@@Base+0x2730>
   279a4:	mov	x0, x22
   279a8:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   279ac:	ldr	w4, [x20, #112]
   279b0:	cmp	x23, x4
   279b4:	b.cc	27978 <__sanitizer_set_death_callback@@Base+0xb70>  // b.lo, b.ul, b.last
   279b8:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   279bc:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   279c0:	mov	x3, x23
   279c4:	add	x2, x2, #0xcc0
   279c8:	add	x0, x0, #0xab8
   279cc:	mov	w1, #0x102                 	// #258
   279d0:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   279d4:	mov	x0, x19
   279d8:	mov	x1, x24
   279dc:	bl	26f70 <__sanitizer_set_death_callback@@Base+0x168>
   279e0:	ldr	w0, [x19, #8]
   279e4:	cbz	w0, 279f4 <__sanitizer_set_death_callback@@Base+0xbec>
   279e8:	mov	x1, x19
   279ec:	mov	x0, x20
   279f0:	bl	27110 <__sanitizer_set_death_callback@@Base+0x308>
   279f4:	mov	x0, x22
   279f8:	ldp	x21, x22, [sp, #16]
   279fc:	ldp	x23, x24, [sp, #32]
   27a00:	ldr	x30, [sp, #48]
   27a04:	ldp	x19, x20, [sp], #64
   27a08:	b	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   27a0c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27a10:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27a14:	add	x2, x2, #0xc08
   27a18:	add	x0, x0, #0xab8
   27a1c:	mov	x4, #0x0                   	// #0
   27a20:	mov	x3, #0x0                   	// #0
   27a24:	mov	w1, #0x104                 	// #260
   27a28:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   27a2c:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27a30:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27a34:	add	x0, x0, #0xd50
   27a38:	ldr	x1, [x1, #4008]
   27a3c:	ldr	x1, [x1]
   27a40:	bl	1e648 <OnPrint@@Base+0x398>
   27a44:	b	279f4 <__sanitizer_set_death_callback@@Base+0xbec>
   27a48:	stp	x19, x20, [sp, #-48]!
   27a4c:	mov	x19, x0
   27a50:	mov	w20, w1
   27a54:	stp	x21, x22, [sp, #16]
   27a58:	add	x22, x0, #0x18
   27a5c:	mov	x0, x22
   27a60:	str	x30, [sp, #32]
   27a64:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   27a68:	ldr	x0, [x19, #128]
   27a6c:	cbz	x0, 27b64 <__sanitizer_set_death_callback@@Base+0xd5c>
   27a70:	ldr	w4, [x19, #112]
   27a74:	sub	x0, x0, #0x1
   27a78:	str	x0, [x19, #128]
   27a7c:	mov	w3, w20
   27a80:	cmp	x4, w20, uxtw
   27a84:	b.ls	27b84 <__sanitizer_set_death_callback@@Base+0xd7c>  // b.plast
   27a88:	ldr	x0, [x19, #152]
   27a8c:	ldr	x20, [x0, x3, lsl #3]
   27a90:	cbz	x20, 27b9c <__sanitizer_set_death_callback@@Base+0xd94>
   27a94:	ldr	w3, [x20, #112]
   27a98:	cmp	w3, #0x2
   27a9c:	b.eq	27af8 <__sanitizer_set_death_callback@@Base+0xcf0>  // b.none
   27aa0:	cmp	w3, #0x1
   27aa4:	mov	w21, w3
   27aa8:	b.ne	27bbc <__sanitizer_set_death_callback@@Base+0xdb4>  // b.any
   27aac:	ldr	x1, [x20]
   27ab0:	mov	w0, #0x3                   	// #3
   27ab4:	ldr	x1, [x1, #16]
   27ab8:	str	w0, [x20, #112]
   27abc:	adrp	x0, 27000 <__sanitizer_set_death_callback@@Base+0x1f8>
   27ac0:	add	x0, x0, #0xd88
   27ac4:	cmp	x1, x0
   27ac8:	b.eq	27b28 <__sanitizer_set_death_callback@@Base+0xd20>  // b.none
   27acc:	mov	x0, x20
   27ad0:	blr	x1
   27ad4:	cbnz	w21, 27b28 <__sanitizer_set_death_callback@@Base+0xd20>
   27ad8:	dmb	ish
   27adc:	mov	w0, #0x1                   	// #1
   27ae0:	str	w0, [x20, #136]
   27ae4:	mov	x0, x22
   27ae8:	ldp	x21, x22, [sp, #16]
   27aec:	ldr	x30, [sp, #32]
   27af0:	ldp	x19, x20, [sp], #48
   27af4:	b	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   27af8:	ldr	x0, [x19, #144]
   27afc:	cbz	x0, 27bdc <__sanitizer_set_death_callback@@Base+0xdd4>
   27b00:	ldrb	w21, [x20, #116]
   27b04:	sub	x0, x0, #0x1
   27b08:	str	x0, [x19, #144]
   27b0c:	cbz	w21, 27bfc <__sanitizer_set_death_callback@@Base+0xdf4>
   27b10:	ldr	x1, [x20]
   27b14:	adrp	x0, 27000 <__sanitizer_set_death_callback@@Base+0x1f8>
   27b18:	add	x0, x0, #0xd88
   27b1c:	ldr	x1, [x1, #16]
   27b20:	cmp	x1, x0
   27b24:	b.ne	27acc <__sanitizer_set_death_callback@@Base+0xcc4>  // b.any
   27b28:	mov	x0, x20
   27b2c:	bl	26ee0 <__sanitizer_set_death_callback@@Base+0xd8>
   27b30:	ldr	w0, [x20, #8]
   27b34:	cbz	w0, 27ad8 <__sanitizer_set_death_callback@@Base+0xcd0>
   27b38:	mov	x0, x19
   27b3c:	mov	x1, x20
   27b40:	bl	27110 <__sanitizer_set_death_callback@@Base+0x308>
   27b44:	dmb	ish
   27b48:	mov	w0, #0x1                   	// #1
   27b4c:	str	w0, [x20, #136]
   27b50:	mov	x0, x22
   27b54:	ldp	x21, x22, [sp, #16]
   27b58:	ldr	x30, [sp, #32]
   27b5c:	ldp	x19, x20, [sp], #48
   27b60:	b	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   27b64:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27b68:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27b6c:	add	x2, x2, #0xd78
   27b70:	add	x0, x0, #0xab8
   27b74:	mov	x4, #0x0                   	// #0
   27b78:	mov	x3, #0x0                   	// #0
   27b7c:	mov	w1, #0x11a                 	// #282
   27b80:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   27b84:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27b88:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27b8c:	add	x2, x2, #0xcc0
   27b90:	add	x0, x0, #0xab8
   27b94:	mov	w1, #0x11c                 	// #284
   27b98:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   27b9c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27ba0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27ba4:	add	x2, x2, #0xc08
   27ba8:	add	x0, x0, #0xab8
   27bac:	mov	x4, #0x0                   	// #0
   27bb0:	mov	x3, #0x0                   	// #0
   27bb4:	mov	w1, #0x11e                 	// #286
   27bb8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   27bbc:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27bc0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27bc4:	mov	x3, x21
   27bc8:	add	x2, x2, #0xdb8
   27bcc:	add	x0, x0, #0xab8
   27bd0:	mov	x4, #0x1                   	// #1
   27bd4:	mov	w1, #0x125                 	// #293
   27bd8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   27bdc:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27be0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27be4:	add	x2, x2, #0xd98
   27be8:	add	x0, x0, #0xab8
   27bec:	mov	x4, #0x0                   	// #0
   27bf0:	mov	x3, #0x0                   	// #0
   27bf4:	mov	w1, #0x121                 	// #289
   27bf8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   27bfc:	ldr	x1, [x20]
   27c00:	mov	w0, #0x3                   	// #3
   27c04:	ldr	x1, [x1, #16]
   27c08:	str	w0, [x20, #112]
   27c0c:	adrp	x0, 27000 <__sanitizer_set_death_callback@@Base+0x1f8>
   27c10:	add	x0, x0, #0xd88
   27c14:	cmp	x1, x0
   27c18:	b.eq	27ad8 <__sanitizer_set_death_callback@@Base+0xcd0>  // b.none
   27c1c:	b	27acc <__sanitizer_set_death_callback@@Base+0xcc4>
   27c20:	stp	x19, x20, [sp, #-64]!
   27c24:	mov	x19, x0
   27c28:	mov	w20, w1
   27c2c:	stp	x23, x24, [sp, #32]
   27c30:	add	x24, x0, #0x18
   27c34:	and	w23, w3, #0xff
   27c38:	mov	x0, x24
   27c3c:	stp	x21, x22, [sp, #16]
   27c40:	mov	x22, x4
   27c44:	mov	x21, x2
   27c48:	str	x30, [sp, #48]
   27c4c:	bl	19d20 <__sanitizer_set_report_fd@@Base+0x2a70>
   27c50:	ldr	x0, [x19, #144]
   27c54:	mov	w3, w20
   27c58:	ldr	w4, [x19, #112]
   27c5c:	add	x0, x0, #0x1
   27c60:	str	x0, [x19, #144]
   27c64:	cmp	x4, w20, uxtw
   27c68:	b.ls	27ce4 <__sanitizer_set_death_callback@@Base+0xedc>  // b.plast
   27c6c:	ldr	x0, [x19, #152]
   27c70:	ldr	x0, [x0, x3, lsl #3]
   27c74:	cbz	x0, 27cfc <__sanitizer_set_death_callback@@Base+0xef4>
   27c78:	ldr	w4, [x0, #112]
   27c7c:	cmp	x4, #0x1
   27c80:	b.ne	27d1c <__sanitizer_set_death_callback@@Base+0xf14>  // b.any
   27c84:	ldr	x2, [x0]
   27c88:	mov	w3, #0x2                   	// #2
   27c8c:	adrp	x1, 27000 <__sanitizer_set_death_callback@@Base+0x1f8>
   27c90:	add	x1, x1, #0xd90
   27c94:	ldr	x2, [x2, #24]
   27c98:	str	x21, [x0, #32]
   27c9c:	str	w3, [x0, #112]
   27ca0:	strb	w23, [x0, #117]
   27ca4:	cmp	x2, x1
   27ca8:	b.ne	27cc4 <__sanitizer_set_death_callback@@Base+0xebc>  // b.any
   27cac:	mov	x0, x24
   27cb0:	ldp	x21, x22, [sp, #16]
   27cb4:	ldp	x23, x24, [sp, #32]
   27cb8:	ldr	x30, [sp, #48]
   27cbc:	ldp	x19, x20, [sp], #64
   27cc0:	b	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   27cc4:	mov	x1, x22
   27cc8:	blr	x2
   27ccc:	mov	x0, x24
   27cd0:	ldp	x21, x22, [sp, #16]
   27cd4:	ldp	x23, x24, [sp, #32]
   27cd8:	ldr	x30, [sp, #48]
   27cdc:	ldp	x19, x20, [sp], #64
   27ce0:	b	19db8 <__sanitizer_set_report_fd@@Base+0x2b08>
   27ce4:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27ce8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27cec:	add	x2, x2, #0xcc0
   27cf0:	add	x0, x0, #0xab8
   27cf4:	mov	w1, #0x134                 	// #308
   27cf8:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   27cfc:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27d00:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27d04:	add	x2, x2, #0xc08
   27d08:	add	x0, x0, #0xab8
   27d0c:	mov	x4, #0x0                   	// #0
   27d10:	mov	x3, #0x0                   	// #0
   27d14:	mov	w1, #0x136                 	// #310
   27d18:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   27d1c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27d20:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27d24:	add	x2, x2, #0xde8
   27d28:	add	x0, x0, #0xab8
   27d2c:	mov	x3, #0x1                   	// #1
   27d30:	mov	w1, #0x137                 	// #311
   27d34:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   27d38:	ldr	w2, [x1, #8]
   27d3c:	cbz	w2, 27d44 <__sanitizer_set_death_callback@@Base+0xf3c>
   27d40:	b	27110 <__sanitizer_set_death_callback@@Base+0x308>
   27d44:	ret
   27d48:	ldr	x2, [x0, #184]
   27d4c:	mov	x1, x0
   27d50:	mov	x0, #0x0                   	// #0
   27d54:	cbz	x2, 27d70 <__sanitizer_set_death_callback@@Base+0xf68>
   27d58:	ldr	x0, [x1, #192]
   27d5c:	ldr	x3, [x0, #128]
   27d60:	str	x3, [x1, #192]
   27d64:	cbz	x3, 27d74 <__sanitizer_set_death_callback@@Base+0xf6c>
   27d68:	sub	x2, x2, #0x1
   27d6c:	str	x2, [x1, #184]
   27d70:	ret
   27d74:	sub	x2, x2, #0x1
   27d78:	str	x2, [x1, #184]
   27d7c:	str	xzr, [x1, #200]
   27d80:	b	27d70 <__sanitizer_set_death_callback@@Base+0xf68>
   27d84:	nop
   27d88:	ret
   27d8c:	nop
   27d90:	ret
   27d94:	nop
   27d98:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27d9c:	ldr	x0, [x0, #4040]
   27da0:	ldrb	w0, [x0, #121]
   27da4:	cbz	w0, 27e7c <__sanitizer_set_death_callback@@Base+0x1074>
   27da8:	stp	x19, x20, [sp, #-48]!
   27dac:	mrs	x19, tpidr_el0
   27db0:	adrp	x20, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27db4:	ldr	x20, [x20, #3408]
   27db8:	stp	x21, x22, [sp, #16]
   27dbc:	adrp	x21, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27dc0:	add	x1, x19, x20
   27dc4:	ldr	x0, [x21, #3680]
   27dc8:	ldr	x22, [x19, x20]
   27dcc:	ldr	w0, [x0]
   27dd0:	str	x30, [sp, #32]
   27dd4:	sxtw	x0, w0
   27dd8:	cmp	x0, #0x1
   27ddc:	b.hi	27e54 <__sanitizer_set_death_callback@@Base+0x104c>  // b.pmore
   27de0:	mov	x0, #0xffffffffffffffff    	// #-1
   27de4:	str	x0, [x19, x20]
   27de8:	add	x19, x19, x20
   27dec:	cbz	x22, 27e44 <__sanitizer_set_death_callback@@Base+0x103c>
   27df0:	ldr	x21, [x21, #3680]
   27df4:	ldr	x19, [x19, #8]
   27df8:	ldr	w0, [x21]
   27dfc:	sxtw	x0, w0
   27e00:	cmp	x0, #0x1
   27e04:	b.ls	27e1c <__sanitizer_set_death_callback@@Base+0x1014>  // b.plast
   27e08:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27e0c:	mov	x2, x22
   27e10:	add	x0, x0, #0xe40
   27e14:	mov	x1, x19
   27e18:	bl	1e648 <OnPrint@@Base+0x398>
   27e1c:	mov	x0, x19
   27e20:	lsl	x1, x22, #4
   27e24:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   27e28:	adrp	x0, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   27e2c:	add	x0, x0, #0x240
   27e30:	ldxr	x1, [x0]
   27e34:	sub	x1, x1, #0x1
   27e38:	stlxr	w2, x1, [x0]
   27e3c:	cbnz	w2, 27e30 <__sanitizer_set_death_callback@@Base+0x1028>
   27e40:	dmb	ish
   27e44:	ldp	x21, x22, [sp, #16]
   27e48:	ldr	x30, [sp, #32]
   27e4c:	ldp	x19, x20, [sp], #48
   27e50:	ret
   27e54:	mov	x2, x22
   27e58:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27e5c:	add	x0, x0, #0xe18
   27e60:	bl	1e648 <OnPrint@@Base+0x398>
   27e64:	ldr	x22, [x19, x20]
   27e68:	mov	x0, #0xffffffffffffffff    	// #-1
   27e6c:	str	x0, [x19, x20]
   27e70:	add	x19, x19, x20
   27e74:	cbnz	x22, 27df0 <__sanitizer_set_death_callback@@Base+0xfe8>
   27e78:	b	27e44 <__sanitizer_set_death_callback@@Base+0x103c>
   27e7c:	ret
   27e80:	adrp	x5, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27e84:	stp	x19, x20, [sp, #-144]!
   27e88:	mov	x20, x0
   27e8c:	ldr	x5, [x5, #4040]
   27e90:	ldrb	w0, [x5, #121]
   27e94:	str	x30, [sp, #80]
   27e98:	cbz	w0, 28084 <__sanitizer_set_death_callback@@Base+0x127c>
   27e9c:	adrp	x19, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27ea0:	ldr	x19, [x19, #3408]
   27ea4:	stp	x23, x24, [sp, #32]
   27ea8:	mrs	x24, tpidr_el0
   27eac:	stp	x27, x28, [sp, #64]
   27eb0:	mov	x28, x1
   27eb4:	add	x1, x24, x19
   27eb8:	ldr	x5, [x24, x19]
   27ebc:	cmn	x5, #0x1
   27ec0:	b.eq	28104 <__sanitizer_set_death_callback@@Base+0x12fc>  // b.none
   27ec4:	stp	x21, x22, [sp, #16]
   27ec8:	mov	x23, x3
   27ecc:	mov	x22, x2
   27ed0:	ldr	x21, [x20]
   27ed4:	stp	x25, x26, [sp, #48]
   27ed8:	add	x3, x21, #0x1
   27edc:	cmp	x5, x3
   27ee0:	b.cc	27fbc <__sanitizer_set_death_callback@@Base+0x11b4>  // b.lo, b.ul, b.last
   27ee4:	ldr	x26, [x1, #8]
   27ee8:	lsl	x21, x21, #4
   27eec:	ldr	x26, [x26, x21]
   27ef0:	cbnz	x26, 28074 <__sanitizer_set_death_callback@@Base+0x126c>
   27ef4:	adrp	x25, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27ef8:	ldr	x3, [x20, #8]
   27efc:	ldr	x0, [x25, #3680]
   27f00:	sub	x5, x28, x3
   27f04:	str	x5, [sp, #136]
   27f08:	ldr	w0, [x0]
   27f0c:	sxtw	x0, w0
   27f10:	cmp	x0, #0x1
   27f14:	b.ls	27f40 <__sanitizer_set_death_callback@@Base+0x1138>  // b.plast
   27f18:	adrp	x0, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   27f1c:	mov	x4, x28
   27f20:	ldr	x2, [x20]
   27f24:	mov	x1, x20
   27f28:	ldr	x7, [x0, #576]
   27f2c:	add	x6, sp, #0x88
   27f30:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27f34:	add	x0, x0, #0xf08
   27f38:	bl	1e648 <OnPrint@@Base+0x398>
   27f3c:	ldr	x5, [sp, #136]
   27f40:	add	x1, x24, x19
   27f44:	ldr	x0, [x1, #24]
   27f48:	cmp	x0, x5
   27f4c:	b.eq	280d0 <__sanitizer_set_death_callback@@Base+0x12c8>  // b.none
   27f50:	cmp	x23, x5
   27f54:	ccmp	x22, x5, #0x2, hi  // hi = pmore
   27f58:	b.ls	2812c <__sanitizer_set_death_callback@@Base+0x1324>  // b.plast
   27f5c:	and	x0, x5, #0xfff
   27f60:	cmp	x0, #0x10
   27f64:	ldr	x0, [x25, #3680]
   27f68:	b.eq	2809c <__sanitizer_set_death_callback@@Base+0x1294>  // b.none
   27f6c:	ldr	w0, [x0]
   27f70:	sxtw	x0, w0
   27f74:	cmp	x0, #0x1
   27f78:	b.ls	27f8c <__sanitizer_set_death_callback@@Base+0x1184>  // b.plast
   27f7c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   27f80:	add	x0, x0, #0xfe8
   27f84:	bl	1e648 <OnPrint@@Base+0x398>
   27f88:	ldr	x5, [sp, #136]
   27f8c:	add	x19, x24, x19
   27f90:	ldp	x23, x24, [sp, #32]
   27f94:	ldr	x1, [x19, #8]
   27f98:	ldp	x27, x28, [sp, #64]
   27f9c:	add	x0, x1, x21
   27fa0:	str	x5, [x1, x21]
   27fa4:	ldp	x21, x22, [sp, #16]
   27fa8:	str	x26, [x0, #8]
   27fac:	ldp	x25, x26, [sp, #48]
   27fb0:	ldr	x30, [sp, #80]
   27fb4:	ldp	x19, x20, [sp], #144
   27fb8:	ret
   27fbc:	tst	x3, x21
   27fc0:	b.eq	28094 <__sanitizer_set_death_callback@@Base+0x128c>  // b.none
   27fc4:	clz	x1, x3
   27fc8:	mov	w4, #0x3f                  	// #63
   27fcc:	sub	w4, w4, w1
   27fd0:	mov	x1, #0x1                   	// #1
   27fd4:	add	w27, w4, #0x1
   27fd8:	lsl	x27, x1, x27
   27fdc:	cmp	x3, x27
   27fe0:	b.cs	28210 <__sanitizer_set_death_callback@@Base+0x1408>  // b.hs, b.nlast
   27fe4:	lsl	x4, x1, x4
   27fe8:	cmp	x3, x4
   27fec:	b.ls	2822c <__sanitizer_set_death_callback@@Base+0x1424>  // b.plast
   27ff0:	cmp	x27, #0x100
   27ff4:	mov	x4, #0x100                 	// #256
   27ff8:	csel	x27, x27, x4, cs  // cs = hs, nlast
   27ffc:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   28000:	mov	w2, #0x0                   	// #0
   28004:	add	x1, x1, #0xe68
   28008:	lsl	x0, x27, #4
   2800c:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   28010:	adrp	x4, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   28014:	mov	x26, x0
   28018:	add	x0, x4, #0x240
   2801c:	ldxr	x2, [x0]
   28020:	add	x1, x2, #0x1
   28024:	stlxr	w3, x1, [x0]
   28028:	cbnz	w3, 2801c <__sanitizer_set_death_callback@@Base+0x1214>
   2802c:	adrp	x25, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   28030:	dmb	ish
   28034:	ldr	x0, [x25, #3680]
   28038:	ldr	w0, [x0]
   2803c:	sxtw	x0, w0
   28040:	cmp	x0, #0x1
   28044:	b.hi	28110 <__sanitizer_set_death_callback@@Base+0x1308>  // b.pmore
   28048:	mov	x0, #0xfffff               	// #1048575
   2804c:	cmp	x2, x0
   28050:	b.hi	281f0 <__sanitizer_set_death_callback@@Base+0x13e8>  // b.pmore
   28054:	ldr	x3, [x24, x19]
   28058:	add	x5, x24, x19
   2805c:	cbnz	x3, 28158 <__sanitizer_set_death_callback@@Base+0x1350>
   28060:	lsl	x21, x21, #4
   28064:	str	x26, [x5, #8]
   28068:	str	x27, [x24, x19]
   2806c:	ldr	x26, [x26, x21]
   28070:	cbz	x26, 27ef4 <__sanitizer_set_death_callback@@Base+0x10ec>
   28074:	ldp	x21, x22, [sp, #16]
   28078:	ldp	x23, x24, [sp, #32]
   2807c:	ldp	x25, x26, [sp, #48]
   28080:	ldp	x27, x28, [sp, #64]
   28084:	mov	x0, #0x0                   	// #0
   28088:	ldr	x30, [sp, #80]
   2808c:	ldp	x19, x20, [sp], #144
   28090:	ret
   28094:	mov	x27, x3
   28098:	b	27ff0 <__sanitizer_set_death_callback@@Base+0x11e8>
   2809c:	ldr	w0, [x0]
   280a0:	ldp	x26, x5, [x5, #-16]
   280a4:	str	x5, [sp, #136]
   280a8:	sxtw	x0, w0
   280ac:	cmp	x0, #0x1
   280b0:	b.ls	27f8c <__sanitizer_set_death_callback@@Base+0x1184>  // b.plast
   280b4:	mov	x1, x5
   280b8:	mov	x2, x26
   280bc:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   280c0:	add	x0, x0, #0xfb0
   280c4:	bl	1e648 <OnPrint@@Base+0x398>
   280c8:	ldr	x5, [sp, #136]
   280cc:	b	27f8c <__sanitizer_set_death_callback@@Base+0x1184>
   280d0:	ldr	x0, [x25, #3680]
   280d4:	ldr	x26, [x1, #16]
   280d8:	ldr	w0, [x0]
   280dc:	sxtw	x0, w0
   280e0:	cmp	x0, #0x1
   280e4:	b.ls	27f8c <__sanitizer_set_death_callback@@Base+0x1184>  // b.plast
   280e8:	mov	x1, x5
   280ec:	mov	x2, x26
   280f0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   280f4:	add	x0, x0, #0xf58
   280f8:	bl	1e648 <OnPrint@@Base+0x398>
   280fc:	ldr	x5, [sp, #136]
   28100:	b	27f8c <__sanitizer_set_death_callback@@Base+0x1184>
   28104:	ldp	x23, x24, [sp, #32]
   28108:	ldp	x27, x28, [sp, #64]
   2810c:	b	28084 <__sanitizer_set_death_callback@@Base+0x127c>
   28110:	add	x1, x24, x19
   28114:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   28118:	add	x0, x0, #0xe78
   2811c:	str	x2, [sp, #96]
   28120:	bl	1e648 <OnPrint@@Base+0x398>
   28124:	ldr	x2, [sp, #96]
   28128:	b	28048 <__sanitizer_set_death_callback@@Base+0x1240>
   2812c:	ldr	x0, [x25, #3680]
   28130:	ldr	w0, [x0]
   28134:	sxtw	x0, w0
   28138:	cmp	x0, #0x1
   2813c:	b.ls	27f8c <__sanitizer_set_death_callback@@Base+0x1184>  // b.plast
   28140:	mov	x1, x5
   28144:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   28148:	add	x0, x0, #0xf90
   2814c:	bl	1e648 <OnPrint@@Base+0x398>
   28150:	ldr	x5, [sp, #136]
   28154:	b	27f8c <__sanitizer_set_death_callback@@Base+0x1184>
   28158:	ldr	x6, [x5, #8]
   2815c:	lsl	x7, x3, #4
   28160:	mov	x2, x7
   28164:	mov	x0, x26
   28168:	mov	x1, x6
   2816c:	stp	x6, x7, [sp, #96]
   28170:	stp	x5, x3, [sp, #112]
   28174:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   28178:	ldr	x0, [x25, #3680]
   2817c:	str	x27, [x24, x19]
   28180:	ldr	x5, [sp, #112]
   28184:	ldr	w0, [x0]
   28188:	ldp	x6, x7, [sp, #96]
   2818c:	str	x26, [x5, #8]
   28190:	sxtw	x0, w0
   28194:	cmp	x0, #0x1
   28198:	b.hi	281d0 <__sanitizer_set_death_callback@@Base+0x13c8>  // b.pmore
   2819c:	mov	x1, x7
   281a0:	mov	x0, x6
   281a4:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   281a8:	adrp	x4, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   281ac:	add	x4, x4, #0x240
   281b0:	ldxr	x0, [x4]
   281b4:	sub	x0, x0, #0x1
   281b8:	stlxr	w1, x0, [x4]
   281bc:	cbnz	w1, 281b0 <__sanitizer_set_death_callback@@Base+0x13a8>
   281c0:	add	x0, x24, x19
   281c4:	dmb	ish
   281c8:	ldr	x26, [x0, #8]
   281cc:	b	27ee8 <__sanitizer_set_death_callback@@Base+0x10e0>
   281d0:	ldr	x3, [sp, #120]
   281d4:	mov	x1, x6
   281d8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   281dc:	add	x0, x0, #0xe40
   281e0:	mov	x2, x3
   281e4:	bl	1e648 <OnPrint@@Base+0x398>
   281e8:	ldp	x6, x7, [sp, #96]
   281ec:	b	2819c <__sanitizer_set_death_callback@@Base+0x1394>
   281f0:	mov	x3, x2
   281f4:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   281f8:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   281fc:	add	x0, x0, #0xec0
   28200:	add	x2, x2, #0xea0
   28204:	mov	x4, #0x100000              	// #1048576
   28208:	mov	w1, #0x3c                  	// #60
   2820c:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   28210:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   28214:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   28218:	mov	x4, x27
   2821c:	add	x2, x2, #0x1d8
   28220:	add	x0, x0, #0xf8
   28224:	mov	w1, #0x17b                 	// #379
   28228:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2822c:	adrp	x2, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   28230:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   28234:	add	x2, x2, #0x200
   28238:	add	x0, x0, #0xf8
   2823c:	mov	w1, #0x17c                 	// #380
   28240:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   28244:	nop
   28248:	adrp	x3, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2824c:	stp	x19, x20, [sp, #-32]!
   28250:	mov	x19, x0
   28254:	ldr	x3, [x3, #4040]
   28258:	ldrb	w0, [x3, #121]
   2825c:	str	x30, [sp, #16]
   28260:	cbz	w0, 28294 <__sanitizer_set_death_callback@@Base+0x148c>
   28264:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   28268:	mov	x20, x1
   2826c:	ldr	x0, [x0, #3680]
   28270:	ldr	w0, [x0]
   28274:	sxtw	x0, w0
   28278:	cmp	x0, #0x1
   2827c:	b.hi	282a0 <__sanitizer_set_death_callback@@Base+0x1498>  // b.pmore
   28280:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   28284:	ldr	x0, [x0, #3408]
   28288:	mrs	x1, tpidr_el0
   2828c:	add	x0, x1, x0
   28290:	stp	x20, x19, [x0, #16]
   28294:	ldr	x30, [sp, #16]
   28298:	ldp	x19, x20, [sp], #32
   2829c:	ret
   282a0:	mov	x2, x1
   282a4:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   282a8:	mov	x1, x19
   282ac:	add	x0, x0, #0x18
   282b0:	bl	1e648 <OnPrint@@Base+0x398>
   282b4:	b	28280 <__sanitizer_set_death_callback@@Base+0x1478>
   282b8:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   282bc:	ldr	x0, [x0, #3408]
   282c0:	mrs	x1, tpidr_el0
   282c4:	add	x0, x1, x0
   282c8:	ret
   282cc:	nop
   282d0:	ldr	x0, [x0]
   282d4:	cmn	x0, #0x1
   282d8:	cset	w0, eq  // eq = none
   282dc:	ret
   282e0:	stp	x19, x20, [sp, #-32]!
   282e4:	mov	x19, x1
   282e8:	ldr	w4, [x1, #8]
   282ec:	ldr	x1, [x1]
   282f0:	stp	x21, x30, [sp, #16]
   282f4:	ldr	w3, [x1, #8]
   282f8:	cmp	x3, x4
   282fc:	b.cs	28374 <__sanitizer_set_death_callback@@Base+0x156c>  // b.hs, b.nlast
   28300:	adrp	x21, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   28304:	bl	6a60 <_Unwind_GetIP@plt>
   28308:	mov	x20, x0
   2830c:	ldr	x21, [x21, #4000]
   28310:	ldr	x0, [x21]
   28314:	cbz	x0, 28354 <__sanitizer_set_death_callback@@Base+0x154c>
   28318:	cmp	x0, x20
   2831c:	b.hi	28364 <__sanitizer_set_death_callback@@Base+0x155c>  // b.pmore
   28320:	ldr	x1, [x19]
   28324:	ldr	w3, [x19, #8]
   28328:	ldr	w0, [x1, #8]
   2832c:	add	w2, w0, #0x1
   28330:	str	w2, [x1, #8]
   28334:	add	x0, x1, w0, uxtw #3
   28338:	cmp	w2, w3
   2833c:	str	x20, [x0, #16]
   28340:	b.eq	28364 <__sanitizer_set_death_callback@@Base+0x155c>  // b.none
   28344:	mov	w0, #0x0                   	// #0
   28348:	ldp	x21, x30, [sp, #16]
   2834c:	ldp	x19, x20, [sp], #32
   28350:	ret
   28354:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   28358:	str	x0, [x21]
   2835c:	cmp	x0, x20
   28360:	b.ls	28320 <__sanitizer_set_death_callback@@Base+0x1518>  // b.plast
   28364:	mov	w0, #0x4                   	// #4
   28368:	ldp	x21, x30, [sp, #16]
   2836c:	ldp	x19, x20, [sp], #32
   28370:	ret
   28374:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   28378:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2837c:	add	x2, x2, #0x38
   28380:	add	x0, x0, #0x68
   28384:	mov	w1, #0x6d                  	// #109
   28388:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2838c:	nop
   28390:	b	6a60 <_Unwind_GetIP@plt>
   28394:	nop
   28398:	stp	x19, x20, [sp, #-48]!
   2839c:	cmp	w2, #0x1
   283a0:	str	x30, [sp, #16]
   283a4:	b.ls	28414 <__sanitizer_set_death_callback@@Base+0x160c>  // b.plast
   283a8:	mov	x19, x0
   283ac:	add	w2, w2, #0x1
   283b0:	cmp	w2, #0x100
   283b4:	mov	x20, x1
   283b8:	mov	w1, #0x100                 	// #256
   283bc:	csel	w2, w2, w1, ls  // ls = plast
   283c0:	str	wzr, [x19, #8]
   283c4:	add	x1, sp, #0x20
   283c8:	adrp	x0, 28000 <__sanitizer_set_death_callback@@Base+0x11f8>
   283cc:	add	x0, x0, #0x2e0
   283d0:	str	x19, [sp, #32]
   283d4:	str	w2, [sp, #40]
   283d8:	bl	6650 <_Unwind_Backtrace@plt>
   283dc:	mov	x1, x20
   283e0:	mov	x0, x19
   283e4:	bl	20200 <OnPrint@@Base+0x1f50>
   283e8:	mov	x1, x0
   283ec:	cbnz	x0, 283fc <__sanitizer_set_death_callback@@Base+0x15f4>
   283f0:	ldr	w0, [x19, #8]
   283f4:	cmp	w0, #0x1
   283f8:	cset	x1, hi  // hi = pmore
   283fc:	mov	x0, x19
   28400:	bl	201a8 <OnPrint@@Base+0x1ef8>
   28404:	ldr	x30, [sp, #16]
   28408:	str	x20, [x19, #16]
   2840c:	ldp	x19, x20, [sp], #48
   28410:	ret
   28414:	mov	w3, w2
   28418:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2841c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   28420:	add	x0, x0, #0x68
   28424:	add	x2, x2, #0x898
   28428:	mov	x4, #0x2                   	// #2
   2842c:	mov	w1, #0x7a                  	// #122
   28430:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   28434:	nop
   28438:	stp	x19, x20, [sp, #-96]!
   2843c:	cmp	w3, #0x1
   28440:	stp	x23, x24, [sp, #32]
   28444:	mov	w24, w3
   28448:	str	x30, [sp, #80]
   2844c:	b.ls	28608 <__sanitizer_set_death_callback@@Base+0x1800>  // b.plast
   28450:	stp	x25, x26, [sp, #48]
   28454:	adrp	x25, 9b7000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   28458:	mov	x19, x2
   2845c:	ldr	x2, [x25, #584]
   28460:	add	x4, x25, #0x248
   28464:	cbz	x2, 28634 <__sanitizer_set_death_callback@@Base+0x182c>
   28468:	stp	x21, x22, [sp, #16]
   2846c:	mov	x21, x0
   28470:	ldr	x0, [x4, #8]
   28474:	stp	x27, x28, [sp, #64]
   28478:	blr	x0
   2847c:	mov	x23, x0
   28480:	cbz	x0, 2864c <__sanitizer_set_death_callback@@Base+0x1844>
   28484:	adrp	x26, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   28488:	ldr	x20, [x26, #4000]
   2848c:	ldr	x3, [x20]
   28490:	cbz	x3, 28598 <__sanitizer_set_death_callback@@Base+0x1790>
   28494:	sub	x0, x3, #0x1
   28498:	tst	x0, x3
   2849c:	b.ne	2866c <__sanitizer_set_death_callback@@Base+0x1864>  // b.any
   284a0:	neg	x20, x3
   284a4:	mov	x27, #0x17ff                	// #6143
   284a8:	add	x3, x3, x27
   284ac:	mov	w2, #0x0                   	// #0
   284b0:	and	x20, x3, x20
   284b4:	adrp	x28, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   284b8:	mov	x0, x20
   284bc:	add	x1, x28, #0x258
   284c0:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   284c4:	mov	x22, x0
   284c8:	mov	x2, #0x0                   	// #0
   284cc:	mov	x1, #0x0                   	// #0
   284d0:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   284d4:	mov	x1, #0x0                   	// #0
   284d8:	mov	x0, #0x0                   	// #0
   284dc:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   284e0:	cmp	x20, x27
   284e4:	b.ls	285a8 <__sanitizer_set_death_callback@@Base+0x17a0>  // b.plast
   284e8:	mov	x2, #0x1800                	// #6144
   284ec:	mov	w1, #0x0                   	// #0
   284f0:	mov	x0, x22
   284f4:	bl	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   284f8:	ldr	x6, [x25, #584]
   284fc:	add	x25, x25, #0x248
   28500:	mov	x1, x19
   28504:	mov	x5, x24
   28508:	mov	x3, x22
   2850c:	mov	x2, x23
   28510:	mov	x4, #0x0                   	// #0
   28514:	mov	x0, #0x0                   	// #0
   28518:	blr	x6
   2851c:	mov	x19, x0
   28520:	ldr	x1, [x25, #16]
   28524:	mov	x0, x23
   28528:	blr	x1
   2852c:	tbnz	x19, #63, 28574 <__sanitizer_set_death_callback@@Base+0x176c>
   28530:	cmp	x19, #0x100
   28534:	b.gt	28688 <__sanitizer_set_death_callback@@Base+0x1880>
   28538:	str	wzr, [x21, #8]
   2853c:	cbz	x19, 28574 <__sanitizer_set_death_callback@@Base+0x176c>
   28540:	mov	x3, x22
   28544:	add	x0, x21, #0x10
   28548:	mov	x1, #0x0                   	// #0
   2854c:	nop
   28550:	ldr	x2, [x3], #24
   28554:	add	x2, x2, #0x2
   28558:	str	x2, [x0, x1, lsl #3]
   2855c:	add	x1, x1, #0x1
   28560:	cmp	x19, x1
   28564:	b.gt	28550 <__sanitizer_set_death_callback@@Base+0x1748>
   28568:	cmp	x19, #0x0
   2856c:	csinc	w19, w19, wzr, gt
   28570:	str	w19, [x21, #8]
   28574:	mov	x1, x20
   28578:	mov	x0, x22
   2857c:	ldp	x21, x22, [sp, #16]
   28580:	ldp	x23, x24, [sp, #32]
   28584:	ldp	x25, x26, [sp, #48]
   28588:	ldp	x27, x28, [sp, #64]
   2858c:	ldr	x30, [sp, #80]
   28590:	ldp	x19, x20, [sp], #96
   28594:	b	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   28598:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   2859c:	mov	x3, x0
   285a0:	str	x0, [x20]
   285a4:	b	28494 <__sanitizer_set_death_callback@@Base+0x168c>
   285a8:	ldr	x26, [x26, #4000]
   285ac:	ldr	x0, [x26]
   285b0:	cbz	x0, 2867c <__sanitizer_set_death_callback@@Base+0x1874>
   285b4:	sub	x1, x0, #0x1
   285b8:	tst	x1, x0
   285bc:	b.ne	2866c <__sanitizer_set_death_callback@@Base+0x1864>  // b.any
   285c0:	mov	x1, #0x17ff                	// #6143
   285c4:	add	x26, x0, x1
   285c8:	neg	x0, x0
   285cc:	add	x1, x28, #0x258
   285d0:	and	x26, x26, x0
   285d4:	mov	w2, #0x0                   	// #0
   285d8:	mov	x0, x26
   285dc:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x4b30>
   285e0:	mov	x2, #0x0                   	// #0
   285e4:	mov	x27, x0
   285e8:	mov	x1, x22
   285ec:	bl	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   285f0:	mov	x1, x20
   285f4:	mov	x0, x22
   285f8:	mov	x20, x26
   285fc:	mov	x22, x27
   28600:	bl	1beb0 <__sanitizer_set_report_fd@@Base+0x4c00>
   28604:	b	284e8 <__sanitizer_set_death_callback@@Base+0x16e0>
   28608:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   2860c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   28610:	mov	x3, x24
   28614:	add	x2, x2, #0x898
   28618:	add	x0, x0, #0x68
   2861c:	mov	x4, #0x2                   	// #2
   28620:	mov	w1, #0x94                  	// #148
   28624:	stp	x21, x22, [sp, #16]
   28628:	stp	x25, x26, [sp, #48]
   2862c:	stp	x27, x28, [sp, #64]
   28630:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   28634:	ldp	x23, x24, [sp, #32]
   28638:	mov	w2, w3
   2863c:	ldp	x25, x26, [sp, #48]
   28640:	ldr	x30, [sp, #80]
   28644:	ldp	x19, x20, [sp], #96
   28648:	b	28398 <__sanitizer_set_death_callback@@Base+0x1590>
   2864c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   28650:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   28654:	add	x2, x2, #0xb8
   28658:	add	x0, x0, #0x68
   2865c:	mov	x4, #0x0                   	// #0
   28660:	mov	x3, #0x0                   	// #0
   28664:	mov	w1, #0x9b                  	// #155
   28668:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   2866c:	adrp	x0, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   28670:	add	x0, x0, #0x240
   28674:	bl	16830 <__sanitizer_cov_dump@@Base+0x1d78>
   28678:	bl	26d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   2867c:	bl	1a990 <__sanitizer_set_report_fd@@Base+0x36e0>
   28680:	str	x0, [x26]
   28684:	b	285b4 <__sanitizer_set_death_callback@@Base+0x17ac>
   28688:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2868c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   28690:	mov	x3, x19
   28694:	add	x2, x2, #0xc8
   28698:	add	x0, x0, #0x68
   2869c:	mov	x4, #0x100                 	// #256
   286a0:	mov	w1, #0xa3                  	// #163
   286a4:	bl	26d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61a0>
   286a8:	stp	x19, x20, [sp, #-48]!
   286ac:	mov	x19, x1
   286b0:	mov	x20, x0
   286b4:	mov	x1, x0
   286b8:	mov	x0, #0xffffffffffffffff    	// #-1
   286bc:	stp	x21, x22, [sp, #16]
   286c0:	mov	x22, x2
   286c4:	mov	x21, x3
   286c8:	str	x30, [sp, #32]
   286cc:	bl	6830 <dlsym@plt>
   286d0:	str	x0, [x19]
   286d4:	cbz	x0, 286f0 <__sanitizer_set_death_callback@@Base+0x18e8>
   286d8:	cmp	x22, x21
   286dc:	cset	w0, eq  // eq = none
   286e0:	ldp	x21, x22, [sp, #16]
   286e4:	ldr	x30, [sp, #32]
   286e8:	ldp	x19, x20, [sp], #48
   286ec:	ret
   286f0:	mov	x1, x20
   286f4:	bl	6830 <dlsym@plt>
   286f8:	str	x0, [x19]
   286fc:	cmp	x22, x21
   28700:	cset	w0, eq  // eq = none
   28704:	ldp	x21, x22, [sp, #16]
   28708:	ldr	x30, [sp, #32]
   2870c:	ldp	x19, x20, [sp], #48
   28710:	ret
   28714:	nop
   28718:	mov	x2, x1
   2871c:	mov	x1, x0
   28720:	mov	x0, #0xffffffffffffffff    	// #-1
   28724:	b	6790 <dlvsym@plt>
   28728:	ldr	x2, [x0]
   2872c:	mov	w3, #0xffffffff            	// #-1
   28730:	ldr	x1, [x1]
   28734:	cmp	x2, x1
   28738:	cset	w0, hi  // hi = pmore
   2873c:	csel	w0, w0, w3, cs  // cs = hs, nlast
   28740:	ret
   28744:	nop
   28748:	stp	x29, x30, [sp, #-48]!
   2874c:	mov	x29, sp
   28750:	stp	x21, x22, [sp, #32]
   28754:	ldp	x22, x21, [x2]
   28758:	stp	x19, x20, [sp, #16]
   2875c:	mov	x19, x2
   28760:	ldr	x6, [x5, #24]
   28764:	mov	x2, x3
   28768:	mov	x20, x5
   2876c:	mov	x3, x4
   28770:	add	x22, x1, x22
   28774:	add	x21, x1, x21
   28778:	cbz	x6, 287a8 <__sanitizer_set_death_callback@@Base+0x19a0>
   2877c:	add	x6, x6, x6, lsl #1
   28780:	ldr	x1, [x5]
   28784:	lsl	x6, x6, #3
   28788:	sub	x6, x6, #0x18
   2878c:	add	x6, x1, x6
   28790:	ldr	x1, [x6, #8]
   28794:	cmp	x22, x1
   28798:	b.eq	287f0 <__sanitizer_set_death_callback@@Base+0x19e8>  // b.none
   2879c:	add	x4, x1, #0x1
   287a0:	cmp	x22, x4
   287a4:	b.eq	287f0 <__sanitizer_set_death_callback@@Base+0x19e8>  // b.none
   287a8:	mov	x1, #0x18                  	// #24
   287ac:	mov	x4, x20
   287b0:	bl	6840 <__asan_backtrace_vector_grow@plt>
   287b4:	mov	x1, x0
   287b8:	cbz	x0, 28814 <__sanitizer_set_death_callback@@Base+0x1a0c>
   287bc:	stp	x22, x21, [x19]
   287c0:	mov	w0, #0x1                   	// #1
   287c4:	ldr	x2, [x20, #24]
   287c8:	ldp	x4, x5, [x19]
   287cc:	stp	x4, x5, [x1]
   287d0:	add	x2, x2, #0x1
   287d4:	ldr	x3, [x19, #16]
   287d8:	str	x3, [x1, #16]
   287dc:	str	x2, [x20, #24]
   287e0:	ldp	x19, x20, [sp, #16]
   287e4:	ldp	x21, x22, [sp, #32]
   287e8:	ldp	x29, x30, [sp], #48
   287ec:	ret
   287f0:	ldr	x4, [x6, #16]
   287f4:	ldr	x5, [x19, #16]
   287f8:	cmp	x5, x4
   287fc:	b.ne	287a8 <__sanitizer_set_death_callback@@Base+0x19a0>  // b.any
   28800:	cmp	x21, x1
   28804:	mov	w0, #0x1                   	// #1
   28808:	b.ls	287e0 <__sanitizer_set_death_callback@@Base+0x19d8>  // b.plast
   2880c:	str	x21, [x6, #8]
   28810:	b	287e0 <__sanitizer_set_death_callback@@Base+0x19d8>
   28814:	mov	w0, #0x0                   	// #0
   28818:	ldp	x19, x20, [sp, #16]
   2881c:	ldp	x21, x22, [sp, #32]
   28820:	ldp	x29, x30, [sp], #48
   28824:	ret
   28828:	stp	x29, x30, [sp, #-240]!
   2882c:	mov	x3, x1
   28830:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   28834:	mov	x29, sp
   28838:	stp	x19, x20, [sp, #16]
   2883c:	mov	x19, x0
   28840:	add	x20, sp, #0x28
   28844:	mov	x0, x20
   28848:	add	x2, x2, #0xf0
   2884c:	ldp	x4, x5, [x19]
   28850:	mov	x1, #0xc8                  	// #200
   28854:	ldr	x6, [x19, #16]
   28858:	sub	w5, w6, w5
   2885c:	bl	6a20 <snprintf@plt>
   28860:	ldp	x3, x0, [x19, #40]
   28864:	mov	x1, x20
   28868:	mov	w2, #0x0                   	// #0
   2886c:	blr	x3
   28870:	ldp	x19, x20, [sp, #16]
   28874:	ldp	x29, x30, [sp], #240
   28878:	ret
   2887c:	nop
   28880:	stp	x29, x30, [sp, #-48]!
   28884:	mov	x29, sp
   28888:	stp	x19, x20, [sp, #16]
   2888c:	mov	x20, x2
   28890:	mov	x19, x1
   28894:	ldr	x2, [x1, #32]
   28898:	stp	x21, x22, [sp, #32]
   2889c:	mov	x21, x3
   288a0:	mov	x22, x0
   288a4:	cbnz	x2, 288cc <__sanitizer_set_death_callback@@Base+0x1ac4>
   288a8:	mov	x4, x21
   288ac:	mov	x3, x20
   288b0:	mov	x0, x22
   288b4:	ldp	x21, x22, [sp, #32]
   288b8:	ldp	x2, x1, [x19, #48]
   288bc:	ldp	x19, x20, [sp, #16]
   288c0:	ldp	x29, x30, [sp], #48
   288c4:	lsl	x2, x2, #3
   288c8:	b	6bc0 <__asan_backtrace_free@plt>
   288cc:	ldr	x1, [x1, #40]
   288d0:	mov	x4, x3
   288d4:	lsl	x2, x2, #3
   288d8:	mov	x3, x20
   288dc:	bl	6bc0 <__asan_backtrace_free@plt>
   288e0:	b	288a8 <__sanitizer_set_death_callback@@Base+0x1aa0>
   288e4:	nop
   288e8:	mov	x2, x0
   288ec:	ldr	x0, [x1]
   288f0:	ldr	x3, [x2]
   288f4:	cmp	x3, x0
   288f8:	b.cc	2893c <__sanitizer_set_death_callback@@Base+0x1b34>  // b.lo, b.ul, b.last
   288fc:	mov	w0, #0x1                   	// #1
   28900:	b.hi	28938 <__sanitizer_set_death_callback@@Base+0x1b30>  // b.pmore
   28904:	ldr	x3, [x1, #8]
   28908:	ldr	x4, [x2, #8]
   2890c:	cmp	x4, x3
   28910:	b.cc	28938 <__sanitizer_set_death_callback@@Base+0x1b30>  // b.lo, b.ul, b.last
   28914:	mov	w0, #0xffffffff            	// #-1
   28918:	b.hi	28938 <__sanitizer_set_death_callback@@Base+0x1b30>  // b.pmore
   2891c:	ldr	x1, [x1, #16]
   28920:	ldr	x2, [x2, #16]
   28924:	ldr	x1, [x1, #56]
   28928:	ldr	x2, [x2, #56]
   2892c:	cmp	x2, x1
   28930:	cset	w3, gt
   28934:	csel	w0, w3, w0, ge  // ge = tcont
   28938:	ret
   2893c:	mov	w0, #0xffffffff            	// #-1
   28940:	ret
   28944:	nop
   28948:	mov	x2, x0
   2894c:	ldr	x0, [x1]
   28950:	ldr	x3, [x2]
   28954:	cmp	x3, x0
   28958:	b.cc	28980 <__sanitizer_set_death_callback@@Base+0x1b78>  // b.lo, b.ul, b.last
   2895c:	mov	w0, #0x1                   	// #1
   28960:	b.hi	2897c <__sanitizer_set_death_callback@@Base+0x1b74>  // b.pmore
   28964:	ldr	w1, [x1, #20]
   28968:	mov	w3, #0xffffffff            	// #-1
   2896c:	ldr	w2, [x2, #20]
   28970:	cmp	w2, w1
   28974:	cset	w0, gt
   28978:	csel	w0, w0, w3, ge  // ge = tcont
   2897c:	ret
   28980:	mov	w0, #0xffffffff            	// #-1
   28984:	ret
   28988:	cbz	x2, 28ae0 <__sanitizer_set_death_callback@@Base+0x1cd8>
   2898c:	stp	x29, x30, [sp, #-64]!
   28990:	mov	x10, x2
   28994:	mov	x29, sp
   28998:	stp	x19, x20, [sp, #16]
   2899c:	mov	x20, x6
   289a0:	mov	x19, x0
   289a4:	stp	x21, x22, [sp, #32]
   289a8:	mov	x21, x3
   289ac:	mov	x22, x4
   289b0:	stp	x23, x24, [sp, #48]
   289b4:	mov	x23, x5
   289b8:	mov	x0, #0x0                   	// #0
   289bc:	add	x7, x10, x0
   289c0:	cmp	x10, x0
   289c4:	and	x8, x7, #0xfffffffffffffffe
   289c8:	b.ls	28ac8 <__sanitizer_set_death_callback@@Base+0x1cc0>  // b.plast
   289cc:	lsr	x7, x7, #1
   289d0:	add	x8, x8, x7
   289d4:	lsl	x9, x8, #3
   289d8:	ldr	x3, [x1, x8, lsl #3]
   289dc:	add	x8, x1, x9
   289e0:	cmp	x3, x19
   289e4:	b.hi	28ab4 <__sanitizer_set_death_callback@@Base+0x1cac>  // b.pmore
   289e8:	ldr	x3, [x8, #8]
   289ec:	add	x0, x7, #0x1
   289f0:	cmp	x19, x3
   289f4:	b.cs	289bc <__sanitizer_set_death_callback@@Base+0x1bb4>  // b.hs, b.nlast
   289f8:	asr	x9, x9, #3
   289fc:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   28a00:	movk	x0, #0xaaab
   28a04:	mov	x3, x0
   28a08:	mul	x9, x9, x0
   28a0c:	add	x9, x9, #0x1
   28a10:	cmp	x2, x9
   28a14:	b.hi	28a44 <__sanitizer_set_death_callback@@Base+0x1c3c>  // b.pmore
   28a18:	b	28a50 <__sanitizer_set_death_callback@@Base+0x1c48>
   28a1c:	ldr	x0, [x8, #32]
   28a20:	cmp	x19, x0
   28a24:	b.cs	28a50 <__sanitizer_set_death_callback@@Base+0x1c48>  // b.hs, b.nlast
   28a28:	add	x8, x8, #0x18
   28a2c:	sub	x7, x8, x1
   28a30:	asr	x7, x7, #3
   28a34:	mul	x7, x7, x3
   28a38:	add	x7, x7, #0x1
   28a3c:	cmp	x7, x2
   28a40:	b.cs	28a50 <__sanitizer_set_death_callback@@Base+0x1c48>  // b.hs, b.nlast
   28a44:	ldr	x0, [x8, #24]
   28a48:	cmp	x19, x0
   28a4c:	b.cs	28a1c <__sanitizer_set_death_callback@@Base+0x1c14>  // b.hs, b.nlast
   28a50:	ldr	x24, [x8, #16]
   28a54:	mov	x6, x20
   28a58:	mov	x5, x23
   28a5c:	mov	x4, x22
   28a60:	mov	x3, x21
   28a64:	mov	x0, x19
   28a68:	ldp	x1, x2, [x24, #24]
   28a6c:	bl	28988 <__sanitizer_set_death_callback@@Base+0x1b80>
   28a70:	cbnz	w0, 28aa0 <__sanitizer_set_death_callback@@Base+0x1c98>
   28a74:	ldr	w3, [x20]
   28a78:	mov	x1, x19
   28a7c:	ldr	x2, [x23]
   28a80:	mov	x0, x22
   28a84:	ldr	x4, [x24]
   28a88:	blr	x21
   28a8c:	cbnz	w0, 28aa0 <__sanitizer_set_death_callback@@Base+0x1c98>
   28a90:	ldr	x1, [x24, #8]
   28a94:	str	x1, [x23]
   28a98:	ldr	w1, [x24, #16]
   28a9c:	str	w1, [x20]
   28aa0:	ldp	x19, x20, [sp, #16]
   28aa4:	ldp	x21, x22, [sp, #32]
   28aa8:	ldp	x23, x24, [sp, #48]
   28aac:	ldp	x29, x30, [sp], #64
   28ab0:	ret
   28ab4:	mov	x10, x7
   28ab8:	add	x7, x10, x0
   28abc:	cmp	x10, x0
   28ac0:	and	x8, x7, #0xfffffffffffffffe
   28ac4:	b.hi	289cc <__sanitizer_set_death_callback@@Base+0x1bc4>  // b.pmore
   28ac8:	mov	w0, #0x0                   	// #0
   28acc:	ldp	x19, x20, [sp, #16]
   28ad0:	ldp	x21, x22, [sp, #32]
   28ad4:	ldp	x23, x24, [sp, #48]
   28ad8:	ldp	x29, x30, [sp], #64
   28adc:	ret
   28ae0:	mov	w0, #0x0                   	// #0
   28ae4:	ret
   28ae8:	stp	x29, x30, [sp, #-96]!
   28aec:	mov	x29, sp
   28af0:	stp	x21, x22, [sp, #32]
   28af4:	mov	x21, x0
   28af8:	mov	x22, x1
   28afc:	ldr	x0, [x0]
   28b00:	stp	x19, x20, [sp, #16]
   28b04:	mov	x19, x2
   28b08:	str	x23, [sp, #48]
   28b0c:	sub	x2, x2, #0x1
   28b10:	mov	x20, x3
   28b14:	cmp	x2, x0
   28b18:	mov	x23, x4
   28b1c:	b.cs	28b3c <__sanitizer_set_death_callback@@Base+0x1d34>  // b.hs, b.nlast
   28b20:	lsl	x2, x19, #5
   28b24:	ldr	x1, [x1]
   28b28:	sub	x2, x2, #0x20
   28b2c:	add	x0, x1, x2
   28b30:	ldr	x1, [x1, x2]
   28b34:	cmp	x19, x1
   28b38:	b.eq	28b84 <__sanitizer_set_death_callback@@Base+0x1d7c>  // b.none
   28b3c:	add	x0, sp, #0x40
   28b40:	mov	x2, #0x20                  	// #32
   28b44:	mov	w1, #0x0                   	// #0
   28b48:	bl	6860 <__asan_internal_memset@plt>
   28b4c:	ldr	x7, [x21]
   28b50:	mov	x6, #0x0                   	// #0
   28b54:	ldr	x8, [x22]
   28b58:	str	x19, [sp, #64]
   28b5c:	add	x1, x7, x6
   28b60:	cmp	x7, x6
   28b64:	b.ls	28ba8 <__sanitizer_set_death_callback@@Base+0x1da0>  // b.plast
   28b68:	lsr	x1, x1, #1
   28b6c:	lsl	x5, x1, #5
   28b70:	add	x0, x8, x5
   28b74:	ldr	x5, [x8, x5]
   28b78:	cmp	x19, x5
   28b7c:	b.cc	28bd4 <__sanitizer_set_death_callback@@Base+0x1dcc>  // b.lo, b.ul, b.last
   28b80:	b.hi	28b98 <__sanitizer_set_death_callback@@Base+0x1d90>  // b.pmore
   28b84:	ldp	x19, x20, [sp, #16]
   28b88:	ldp	x21, x22, [sp, #32]
   28b8c:	ldr	x23, [sp, #48]
   28b90:	ldp	x29, x30, [sp], #96
   28b94:	ret
   28b98:	add	x6, x1, #0x1
   28b9c:	add	x1, x7, x6
   28ba0:	cmp	x7, x6
   28ba4:	b.hi	28b68 <__sanitizer_set_death_callback@@Base+0x1d60>  // b.pmore
   28ba8:	mov	x0, x23
   28bac:	mov	w2, #0x0                   	// #0
   28bb0:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   28bb4:	add	x1, x1, #0x100
   28bb8:	blr	x20
   28bbc:	mov	x0, #0x0                   	// #0
   28bc0:	ldp	x19, x20, [sp, #16]
   28bc4:	ldp	x21, x22, [sp, #32]
   28bc8:	ldr	x23, [sp, #48]
   28bcc:	ldp	x29, x30, [sp], #96
   28bd0:	ret
   28bd4:	mov	x7, x1
   28bd8:	b	28b5c <__sanitizer_set_death_callback@@Base+0x1d54>
   28bdc:	nop
   28be0:	stp	x29, x30, [sp, #-64]!
   28be4:	mov	x29, sp
   28be8:	ldr	x8, [x7, #24]
   28bec:	stp	x19, x20, [sp, #16]
   28bf0:	mov	x20, x2
   28bf4:	stp	x21, x22, [sp, #32]
   28bf8:	mov	x19, x7
   28bfc:	mov	x22, x1
   28c00:	str	x23, [sp, #48]
   28c04:	mov	w21, w4
   28c08:	mov	x23, x3
   28c0c:	mov	x2, x5
   28c10:	mov	x3, x6
   28c14:	cbz	x8, 28c38 <__sanitizer_set_death_callback@@Base+0x1e30>
   28c18:	add	x8, x8, x8, lsl #1
   28c1c:	ldr	x1, [x7]
   28c20:	lsl	x8, x8, #3
   28c24:	sub	x8, x8, #0x18
   28c28:	add	x4, x1, x8
   28c2c:	ldr	x1, [x1, x8]
   28c30:	cmp	x1, x20
   28c34:	b.eq	28c84 <__sanitizer_set_death_callback@@Base+0x1e7c>  // b.none
   28c38:	mov	x4, x19
   28c3c:	mov	x1, #0x18                  	// #24
   28c40:	bl	6840 <__asan_backtrace_vector_grow@plt>
   28c44:	mov	x5, x0
   28c48:	cbz	x0, 28ca4 <__sanitizer_set_death_callback@@Base+0x1e9c>
   28c4c:	ldr	x2, [x22]
   28c50:	mov	w4, #0x1                   	// #1
   28c54:	ldr	x1, [x19, #24]
   28c58:	add	x20, x2, x20
   28c5c:	stp	x20, x23, [x5]
   28c60:	add	x0, x1, #0x1
   28c64:	stp	w21, w1, [x5, #16]
   28c68:	str	x0, [x19, #24]
   28c6c:	mov	w0, w4
   28c70:	ldp	x19, x20, [sp, #16]
   28c74:	ldp	x21, x22, [sp, #32]
   28c78:	ldr	x23, [sp, #48]
   28c7c:	ldp	x29, x30, [sp], #64
   28c80:	ret
   28c84:	ldr	x1, [x4, #8]
   28c88:	cmp	x1, x23
   28c8c:	b.ne	28c38 <__sanitizer_set_death_callback@@Base+0x1e30>  // b.any
   28c90:	ldr	w1, [x4, #16]
   28c94:	mov	w4, #0x1                   	// #1
   28c98:	cmp	w1, w21
   28c9c:	b.ne	28c38 <__sanitizer_set_death_callback@@Base+0x1e30>  // b.any
   28ca0:	b	28c6c <__sanitizer_set_death_callback@@Base+0x1e64>
   28ca4:	mov	w4, #0x0                   	// #0
   28ca8:	mov	w0, w4
   28cac:	ldp	x19, x20, [sp, #16]
   28cb0:	ldp	x21, x22, [sp, #32]
   28cb4:	ldr	x23, [sp, #48]
   28cb8:	ldp	x29, x30, [sp], #64
   28cbc:	ret
   28cc0:	stp	x29, x30, [sp, #-48]!
   28cc4:	mov	x29, sp
   28cc8:	ldr	x8, [x7, #24]
   28ccc:	stp	x19, x20, [sp, #16]
   28cd0:	add	x20, x3, x1
   28cd4:	stp	x21, x22, [sp, #32]
   28cd8:	mov	x19, x7
   28cdc:	mov	x22, x2
   28ce0:	add	x21, x4, x1
   28ce4:	mov	x2, x5
   28ce8:	mov	x3, x6
   28cec:	cbz	x8, 28d1c <__sanitizer_set_death_callback@@Base+0x1f14>
   28cf0:	add	x8, x8, x8, lsl #1
   28cf4:	ldr	x1, [x7]
   28cf8:	lsl	x8, x8, #3
   28cfc:	sub	x8, x8, #0x18
   28d00:	add	x8, x1, x8
   28d04:	ldr	x1, [x8, #8]
   28d08:	cmp	x20, x1
   28d0c:	b.eq	28d58 <__sanitizer_set_death_callback@@Base+0x1f50>  // b.none
   28d10:	add	x4, x1, #0x1
   28d14:	cmp	x20, x4
   28d18:	b.eq	28d58 <__sanitizer_set_death_callback@@Base+0x1f50>  // b.none
   28d1c:	mov	x1, #0x18                  	// #24
   28d20:	mov	x4, x19
   28d24:	bl	6840 <__asan_backtrace_vector_grow@plt>
   28d28:	mov	x1, x0
   28d2c:	cbz	x0, 28d78 <__sanitizer_set_death_callback@@Base+0x1f70>
   28d30:	ldr	x3, [x19, #24]
   28d34:	stp	x20, x21, [x1]
   28d38:	mov	w0, #0x1                   	// #1
   28d3c:	str	x22, [x1, #16]
   28d40:	add	x1, x3, #0x1
   28d44:	str	x1, [x19, #24]
   28d48:	ldp	x19, x20, [sp, #16]
   28d4c:	ldp	x21, x22, [sp, #32]
   28d50:	ldp	x29, x30, [sp], #48
   28d54:	ret
   28d58:	ldr	x4, [x8, #16]
   28d5c:	cmp	x4, x22
   28d60:	b.ne	28d1c <__sanitizer_set_death_callback@@Base+0x1f14>  // b.any
   28d64:	cmp	x21, x1
   28d68:	mov	w0, #0x1                   	// #1
   28d6c:	b.ls	28d48 <__sanitizer_set_death_callback@@Base+0x1f40>  // b.plast
   28d70:	str	x21, [x8, #8]
   28d74:	b	28d48 <__sanitizer_set_death_callback@@Base+0x1f40>
   28d78:	mov	w0, #0x0                   	// #0
   28d7c:	ldp	x19, x20, [sp, #16]
   28d80:	ldp	x21, x22, [sp, #32]
   28d84:	ldp	x29, x30, [sp], #48
   28d88:	ret
   28d8c:	nop
   28d90:	ldr	w1, [x0, #56]
   28d94:	cbz	w1, 28da0 <__sanitizer_set_death_callback@@Base+0x1f98>
   28d98:	mov	w0, #0x0                   	// #0
   28d9c:	ret
   28da0:	stp	x29, x30, [sp, #-32]!
   28da4:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   28da8:	add	x1, x1, #0x120
   28dac:	mov	x29, sp
   28db0:	str	x19, [sp, #16]
   28db4:	mov	x19, x0
   28db8:	bl	28828 <__sanitizer_set_death_callback@@Base+0x1a20>
   28dbc:	mov	w0, #0x1                   	// #1
   28dc0:	str	w0, [x19, #56]
   28dc4:	mov	w0, #0x0                   	// #0
   28dc8:	ldr	x19, [sp, #16]
   28dcc:	ldp	x29, x30, [sp], #32
   28dd0:	ret
   28dd4:	nop
   28dd8:	stp	x29, x30, [sp, #-32]!
   28ddc:	mov	x29, sp
   28de0:	stp	x19, x20, [sp, #16]
   28de4:	mov	x19, x0
   28de8:	ldp	x20, x1, [x0, #16]
   28dec:	cmp	x1, #0x3
   28df0:	b.hi	28e24 <__sanitizer_set_death_callback@@Base+0x201c>  // b.pmore
   28df4:	bl	28d90 <__sanitizer_set_death_callback@@Base+0x1f88>
   28df8:	mov	w1, w0
   28dfc:	mov	w0, #0x0                   	// #0
   28e00:	cbz	w1, 28e18 <__sanitizer_set_death_callback@@Base+0x2010>
   28e04:	ldr	w0, [x20]
   28e08:	ldr	w2, [x19, #32]
   28e0c:	rev	w1, w0
   28e10:	cmp	w2, #0x0
   28e14:	csel	w0, w1, w0, ne  // ne = any
   28e18:	ldp	x19, x20, [sp, #16]
   28e1c:	ldp	x29, x30, [sp], #32
   28e20:	ret
   28e24:	sub	x1, x1, #0x4
   28e28:	add	x0, x20, #0x4
   28e2c:	stp	x0, x1, [x19, #16]
   28e30:	b	28e04 <__sanitizer_set_death_callback@@Base+0x1ffc>
   28e34:	nop
   28e38:	stp	x29, x30, [sp, #-32]!
   28e3c:	mov	x29, sp
   28e40:	stp	x19, x20, [sp, #16]
   28e44:	mov	x19, x0
   28e48:	ldp	x20, x1, [x0, #16]
   28e4c:	cmp	x1, #0x7
   28e50:	b.hi	28e84 <__sanitizer_set_death_callback@@Base+0x207c>  // b.pmore
   28e54:	bl	28d90 <__sanitizer_set_death_callback@@Base+0x1f88>
   28e58:	mov	w1, w0
   28e5c:	mov	x0, #0x0                   	// #0
   28e60:	cbz	w1, 28e78 <__sanitizer_set_death_callback@@Base+0x2070>
   28e64:	ldr	x0, [x20]
   28e68:	ldr	w2, [x19, #32]
   28e6c:	rev	x1, x0
   28e70:	cmp	w2, #0x0
   28e74:	csel	x0, x1, x0, ne  // ne = any
   28e78:	ldp	x19, x20, [sp, #16]
   28e7c:	ldp	x29, x30, [sp], #32
   28e80:	ret
   28e84:	sub	x1, x1, #0x8
   28e88:	add	x0, x20, #0x8
   28e8c:	stp	x0, x1, [x19, #16]
   28e90:	b	28e64 <__sanitizer_set_death_callback@@Base+0x205c>
   28e94:	nop
   28e98:	stp	x29, x30, [sp, #-32]!
   28e9c:	mov	x29, sp
   28ea0:	stp	x19, x20, [sp, #16]
   28ea4:	mov	x19, x0
   28ea8:	ldp	x20, x1, [x0, #16]
   28eac:	cmp	x1, #0x1
   28eb0:	b.hi	28eec <__sanitizer_set_death_callback@@Base+0x20e4>  // b.pmore
   28eb4:	bl	28d90 <__sanitizer_set_death_callback@@Base+0x1f88>
   28eb8:	mov	w1, #0x0                   	// #0
   28ebc:	cbz	w0, 28edc <__sanitizer_set_death_callback@@Base+0x20d4>
   28ec0:	ldrb	w2, [x20, #1]
   28ec4:	ldrb	w1, [x20]
   28ec8:	ldr	w3, [x19, #32]
   28ecc:	orr	w0, w2, w1, lsl #8
   28ed0:	cmp	w3, #0x0
   28ed4:	orr	w1, w1, w2, lsl #8
   28ed8:	csel	w1, w1, w0, eq  // eq = none
   28edc:	mov	w0, w1
   28ee0:	ldp	x19, x20, [sp, #16]
   28ee4:	ldp	x29, x30, [sp], #32
   28ee8:	ret
   28eec:	sub	x1, x1, #0x2
   28ef0:	add	x0, x20, #0x2
   28ef4:	stp	x0, x1, [x19, #16]
   28ef8:	b	28ec0 <__sanitizer_set_death_callback@@Base+0x20b8>
   28efc:	nop
   28f00:	stp	x29, x30, [sp, #-32]!
   28f04:	mov	x29, sp
   28f08:	ldr	x2, [x0, #24]
   28f0c:	str	x19, [sp, #16]
   28f10:	ldr	x19, [x0, #16]
   28f14:	cbnz	x2, 28f38 <__sanitizer_set_death_callback@@Base+0x2130>
   28f18:	bl	28d90 <__sanitizer_set_death_callback@@Base+0x1f88>
   28f1c:	mov	w1, #0x0                   	// #0
   28f20:	cbz	w0, 28f28 <__sanitizer_set_death_callback@@Base+0x2120>
   28f24:	ldrb	w1, [x19]
   28f28:	mov	w0, w1
   28f2c:	ldr	x19, [sp, #16]
   28f30:	ldp	x29, x30, [sp], #32
   28f34:	ret
   28f38:	mov	x1, x0
   28f3c:	sub	x2, x2, #0x1
   28f40:	add	x0, x19, #0x1
   28f44:	stp	x0, x2, [x1, #16]
   28f48:	b	28f24 <__sanitizer_set_death_callback@@Base+0x211c>
   28f4c:	nop
   28f50:	stp	x29, x30, [sp, #-16]!
   28f54:	cmp	w1, #0x4
   28f58:	mov	x29, sp
   28f5c:	b.eq	28f98 <__sanitizer_set_death_callback@@Base+0x2190>  // b.none
   28f60:	mov	x2, x0
   28f64:	b.gt	28f88 <__sanitizer_set_death_callback@@Base+0x2180>
   28f68:	cmp	w1, #0x1
   28f6c:	b.eq	28fa8 <__sanitizer_set_death_callback@@Base+0x21a0>  // b.none
   28f70:	cmp	w1, #0x2
   28f74:	b.ne	28fb8 <__sanitizer_set_death_callback@@Base+0x21b0>  // b.any
   28f78:	bl	28e98 <__sanitizer_set_death_callback@@Base+0x2090>
   28f7c:	and	x0, x0, #0xffff
   28f80:	ldp	x29, x30, [sp], #16
   28f84:	ret
   28f88:	cmp	w1, #0x8
   28f8c:	b.ne	28fb8 <__sanitizer_set_death_callback@@Base+0x21b0>  // b.any
   28f90:	ldp	x29, x30, [sp], #16
   28f94:	b	28e38 <__sanitizer_set_death_callback@@Base+0x2030>
   28f98:	bl	28dd8 <__sanitizer_set_death_callback@@Base+0x1fd0>
   28f9c:	mov	w0, w0
   28fa0:	ldp	x29, x30, [sp], #16
   28fa4:	ret
   28fa8:	bl	28f00 <__sanitizer_set_death_callback@@Base+0x20f8>
   28fac:	and	x0, x0, #0xff
   28fb0:	ldp	x29, x30, [sp], #16
   28fb4:	ret
   28fb8:	mov	x0, x2
   28fbc:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   28fc0:	add	x1, x1, #0x130
   28fc4:	bl	28828 <__sanitizer_set_death_callback@@Base+0x1a20>
   28fc8:	mov	x0, #0x0                   	// #0
   28fcc:	ldp	x29, x30, [sp], #16
   28fd0:	ret
   28fd4:	nop
   28fd8:	stp	x29, x30, [sp, #-64]!
   28fdc:	mov	x29, sp
   28fe0:	stp	x19, x20, [sp, #16]
   28fe4:	mov	x19, x0
   28fe8:	mov	w20, #0x0                   	// #0
   28fec:	stp	x21, x22, [sp, #32]
   28ff0:	mov	x22, #0x0                   	// #0
   28ff4:	stp	x23, x24, [sp, #48]
   28ff8:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   28ffc:	mov	w23, #0x0                   	// #0
   29000:	add	x24, x24, #0x150
   29004:	b	2901c <__sanitizer_set_death_callback@@Base+0x2214>
   29008:	and	x0, x21, #0x7f
   2900c:	lsl	x0, x0, x20
   29010:	orr	x22, x22, x0
   29014:	add	w20, w20, #0x7
   29018:	tbz	w21, #7, 29058 <__sanitizer_set_death_callback@@Base+0x2250>
   2901c:	ldp	x21, x1, [x19, #16]
   29020:	mov	x0, x19
   29024:	cbnz	x1, 29070 <__sanitizer_set_death_callback@@Base+0x2268>
   29028:	bl	28d90 <__sanitizer_set_death_callback@@Base+0x1f88>
   2902c:	cbz	w0, 29080 <__sanitizer_set_death_callback@@Base+0x2278>
   29030:	ldrb	w21, [x21]
   29034:	cmp	w20, #0x3f
   29038:	b.ls	29008 <__sanitizer_set_death_callback@@Base+0x2200>  // b.plast
   2903c:	cbnz	w23, 29014 <__sanitizer_set_death_callback@@Base+0x220c>
   29040:	mov	x1, x24
   29044:	mov	x0, x19
   29048:	add	w20, w20, #0x7
   2904c:	mov	w23, #0x1                   	// #1
   29050:	bl	28828 <__sanitizer_set_death_callback@@Base+0x1a20>
   29054:	tbnz	w21, #7, 2901c <__sanitizer_set_death_callback@@Base+0x2214>
   29058:	mov	x0, x22
   2905c:	ldp	x19, x20, [sp, #16]
   29060:	ldp	x21, x22, [sp, #32]
   29064:	ldp	x23, x24, [sp, #48]
   29068:	ldp	x29, x30, [sp], #64
   2906c:	ret
   29070:	sub	x1, x1, #0x1
   29074:	add	x0, x21, #0x1
   29078:	stp	x0, x1, [x19, #16]
   2907c:	b	29030 <__sanitizer_set_death_callback@@Base+0x2228>
   29080:	mov	x22, #0x0                   	// #0
   29084:	mov	x0, x22
   29088:	ldp	x19, x20, [sp, #16]
   2908c:	ldp	x21, x22, [sp, #32]
   29090:	ldp	x23, x24, [sp, #48]
   29094:	ldp	x29, x30, [sp], #64
   29098:	ret
   2909c:	nop
   290a0:	stp	x29, x30, [sp, #-64]!
   290a4:	mov	x29, sp
   290a8:	stp	x19, x20, [sp, #16]
   290ac:	mov	x19, x0
   290b0:	mov	w20, #0x0                   	// #0
   290b4:	stp	x21, x22, [sp, #32]
   290b8:	mov	x22, #0x0                   	// #0
   290bc:	stp	x23, x24, [sp, #48]
   290c0:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   290c4:	mov	w23, #0x0                   	// #0
   290c8:	add	x24, x24, #0x170
   290cc:	b	290e4 <__sanitizer_set_death_callback@@Base+0x22dc>
   290d0:	and	x1, x21, #0x7f
   290d4:	lsl	x1, x1, x20
   290d8:	orr	x22, x22, x1
   290dc:	add	w20, w20, #0x7
   290e0:	tbz	w21, #7, 29120 <__sanitizer_set_death_callback@@Base+0x2318>
   290e4:	ldp	x21, x1, [x19, #16]
   290e8:	mov	x0, x19
   290ec:	cbnz	x1, 29150 <__sanitizer_set_death_callback@@Base+0x2348>
   290f0:	bl	28d90 <__sanitizer_set_death_callback@@Base+0x1f88>
   290f4:	cbz	w0, 29160 <__sanitizer_set_death_callback@@Base+0x2358>
   290f8:	ldrb	w21, [x21]
   290fc:	cmp	w20, #0x3f
   29100:	b.ls	290d0 <__sanitizer_set_death_callback@@Base+0x22c8>  // b.plast
   29104:	cbnz	w23, 290dc <__sanitizer_set_death_callback@@Base+0x22d4>
   29108:	mov	x1, x24
   2910c:	mov	x0, x19
   29110:	add	w20, w20, #0x7
   29114:	mov	w23, #0x1                   	// #1
   29118:	bl	28828 <__sanitizer_set_death_callback@@Base+0x1a20>
   2911c:	tbnz	w21, #7, 290e4 <__sanitizer_set_death_callback@@Base+0x22dc>
   29120:	and	w21, w21, #0x40
   29124:	cmp	w20, #0x3f
   29128:	mov	x0, #0xffffffffffffffff    	// #-1
   2912c:	ccmp	w21, #0x0, #0x4, ls  // ls = plast
   29130:	lsl	x0, x0, x20
   29134:	orr	x0, x22, x0
   29138:	csel	x0, x0, x22, ne  // ne = any
   2913c:	ldp	x19, x20, [sp, #16]
   29140:	ldp	x21, x22, [sp, #32]
   29144:	ldp	x23, x24, [sp, #48]
   29148:	ldp	x29, x30, [sp], #64
   2914c:	ret
   29150:	sub	x1, x1, #0x1
   29154:	add	x0, x21, #0x1
   29158:	stp	x0, x1, [x19, #16]
   2915c:	b	290f8 <__sanitizer_set_death_callback@@Base+0x22f0>
   29160:	mov	x0, #0x0                   	// #0
   29164:	ldp	x19, x20, [sp, #16]
   29168:	ldp	x21, x22, [sp, #32]
   2916c:	ldp	x23, x24, [sp, #48]
   29170:	ldp	x29, x30, [sp], #64
   29174:	ret
   29178:	stp	x29, x30, [sp, #-32]!
   2917c:	mov	x29, sp
   29180:	stp	x19, x20, [sp, #16]
   29184:	mov	x19, x0
   29188:	ldp	x20, x1, [x0, #16]
   2918c:	mov	x0, x20
   29190:	bl	6b50 <__asan_internal_strnlen@plt>
   29194:	ldr	x1, [x19, #24]
   29198:	add	x0, x0, #0x1
   2919c:	cmp	x0, x1
   291a0:	b.ls	291c4 <__sanitizer_set_death_callback@@Base+0x23bc>  // b.plast
   291a4:	mov	x0, x19
   291a8:	bl	28d90 <__sanitizer_set_death_callback@@Base+0x1f88>
   291ac:	cmp	w0, #0x0
   291b0:	csel	x20, x20, xzr, ne  // ne = any
   291b4:	mov	x0, x20
   291b8:	ldp	x19, x20, [sp, #16]
   291bc:	ldp	x29, x30, [sp], #32
   291c0:	ret
   291c4:	ldr	x2, [x19, #16]
   291c8:	sub	x1, x1, x0
   291cc:	add	x0, x2, x0
   291d0:	stp	x0, x1, [x19, #16]
   291d4:	mov	x0, x20
   291d8:	ldp	x19, x20, [sp, #16]
   291dc:	ldp	x29, x30, [sp], #32
   291e0:	ret
   291e4:	nop
   291e8:	stp	x29, x30, [sp, #-96]!
   291ec:	mov	x29, sp
   291f0:	stp	x27, x28, [sp, #80]
   291f4:	mov	x27, x1
   291f8:	ldr	x28, [sp, #96]
   291fc:	stp	x19, x20, [sp, #16]
   29200:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   29204:	mov	w19, w0
   29208:	add	x20, x20, #0x430
   2920c:	stp	x21, x22, [sp, #32]
   29210:	mov	w21, w2
   29214:	mov	x22, x7
   29218:	stp	x23, x24, [sp, #48]
   2921c:	mov	w24, w4
   29220:	mov	x23, x5
   29224:	stp	x25, x26, [sp, #64]
   29228:	mov	w25, w3
   2922c:	mov	x26, x6
   29230:	mov	x0, x28
   29234:	mov	x2, #0x10                  	// #16
   29238:	mov	w1, #0x0                   	// #0
   2923c:	bl	6860 <__asan_internal_memset@plt>
   29240:	cmp	w19, #0x20
   29244:	b.hi	29268 <__sanitizer_set_death_callback@@Base+0x2460>  // b.pmore
   29248:	cbz	w19, 294f0 <__sanitizer_set_death_callback@@Base+0x26e8>
   2924c:	sub	w19, w19, #0x1
   29250:	cmp	w19, #0x1f
   29254:	b.hi	294f0 <__sanitizer_set_death_callback@@Base+0x26e8>  // b.pmore
   29258:	ldrh	w0, [x20, w19, uxtw #1]
   2925c:	adr	x1, 29268 <__sanitizer_set_death_callback@@Base+0x2460>
   29260:	add	x0, x1, w0, sxth #2
   29264:	br	x0
   29268:	mov	w0, #0x1f20                	// #7968
   2926c:	cmp	w19, w0
   29270:	b.eq	295f0 <__sanitizer_set_death_callback@@Base+0x27e8>  // b.none
   29274:	b.ls	292c0 <__sanitizer_set_death_callback@@Base+0x24b8>  // b.plast
   29278:	mov	w0, #0x1f21                	// #7969
   2927c:	cmp	w19, w0
   29280:	b.ne	294f0 <__sanitizer_set_death_callback@@Base+0x26e8>  // b.any
   29284:	mov	x0, x27
   29288:	cbz	w21, 295e4 <__sanitizer_set_death_callback@@Base+0x27dc>
   2928c:	bl	28e38 <__sanitizer_set_death_callback@@Base+0x2030>
   29290:	mov	x1, x0
   29294:	cbz	x22, 29638 <__sanitizer_set_death_callback@@Base+0x2830>
   29298:	ldr	x0, [x22, #112]
   2929c:	cmp	x0, x1
   292a0:	b.ls	2965c <__sanitizer_set_death_callback@@Base+0x2854>  // b.plast
   292a4:	ldr	x2, [x22, #104]
   292a8:	mov	w3, #0x4                   	// #4
   292ac:	mov	w0, #0x1                   	// #1
   292b0:	str	w3, [x28]
   292b4:	add	x1, x2, x1
   292b8:	str	x1, [x28, #8]
   292bc:	b	29324 <__sanitizer_set_death_callback@@Base+0x251c>
   292c0:	mov	w0, #0xffffe0ff            	// #-7937
   292c4:	add	w19, w19, w0
   292c8:	cmp	w19, #0x1
   292cc:	mov	w0, #0x8                   	// #8
   292d0:	b.hi	294f0 <__sanitizer_set_death_callback@@Base+0x26e8>  // b.pmore
   292d4:	str	w0, [x28]
   292d8:	mov	x0, x27
   292dc:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   292e0:	mov	x1, x0
   292e4:	str	x1, [x28, #8]
   292e8:	mov	w0, #0x1                   	// #1
   292ec:	ldp	x19, x20, [sp, #16]
   292f0:	ldp	x21, x22, [sp, #32]
   292f4:	ldp	x23, x24, [sp, #48]
   292f8:	ldp	x25, x26, [sp, #64]
   292fc:	ldp	x27, x28, [sp, #80]
   29300:	ldp	x29, x30, [sp], #96
   29304:	ret
   29308:	mov	w0, #0x2                   	// #2
   2930c:	str	w0, [x28]
   29310:	mov	x0, x27
   29314:	bl	28f00 <__sanitizer_set_death_callback@@Base+0x20f8>
   29318:	and	x1, x0, #0xff
   2931c:	mov	w0, #0x1                   	// #1
   29320:	str	x1, [x28, #8]
   29324:	ldp	x19, x20, [sp, #16]
   29328:	ldp	x21, x22, [sp, #32]
   2932c:	ldp	x23, x24, [sp, #48]
   29330:	ldp	x25, x26, [sp, #64]
   29334:	ldp	x27, x28, [sp, #80]
   29338:	ldp	x29, x30, [sp], #96
   2933c:	ret
   29340:	mov	w0, #0x3                   	// #3
   29344:	str	w0, [x28]
   29348:	mov	x0, x27
   2934c:	bl	290a0 <__sanitizer_set_death_callback@@Base+0x2298>
   29350:	mov	x1, x0
   29354:	mov	w0, #0x1                   	// #1
   29358:	str	x1, [x28, #8]
   2935c:	b	29324 <__sanitizer_set_death_callback@@Base+0x251c>
   29360:	mov	w0, #0xa                   	// #10
   29364:	str	w0, [x28]
   29368:	mov	x0, x27
   2936c:	bl	28f00 <__sanitizer_set_death_callback@@Base+0x20f8>
   29370:	and	x2, x0, #0xff
   29374:	ldr	x1, [x27, #24]
   29378:	cmp	x1, w0, uxtb
   2937c:	b.cs	29470 <__sanitizer_set_death_callback@@Base+0x2668>  // b.hs, b.nlast
   29380:	mov	x0, x27
   29384:	ldp	x19, x20, [sp, #16]
   29388:	ldp	x21, x22, [sp, #32]
   2938c:	ldp	x23, x24, [sp, #48]
   29390:	ldp	x25, x26, [sp, #64]
   29394:	ldp	x27, x28, [sp, #80]
   29398:	ldp	x29, x30, [sp], #96
   2939c:	b	28d90 <__sanitizer_set_death_callback@@Base+0x1f88>
   293a0:	mov	w0, #0xa                   	// #10
   293a4:	str	w0, [x28]
   293a8:	mov	x0, x27
   293ac:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   293b0:	mov	x1, x0
   293b4:	ldr	x2, [x27, #24]
   293b8:	cmp	x0, x2
   293bc:	b.hi	29380 <__sanitizer_set_death_callback@@Base+0x2578>  // b.pmore
   293c0:	ldr	x3, [x27, #16]
   293c4:	sub	x2, x2, x0
   293c8:	mov	w0, #0x1                   	// #1
   293cc:	add	x1, x3, x1
   293d0:	stp	x1, x2, [x27, #16]
   293d4:	b	29324 <__sanitizer_set_death_callback@@Base+0x251c>
   293d8:	mov	w0, #0x2                   	// #2
   293dc:	str	w0, [x28]
   293e0:	mov	x0, x27
   293e4:	bl	28e38 <__sanitizer_set_death_callback@@Base+0x2030>
   293e8:	mov	x1, x0
   293ec:	str	x1, [x28, #8]
   293f0:	mov	w0, #0x1                   	// #1
   293f4:	ldp	x19, x20, [sp, #16]
   293f8:	ldp	x21, x22, [sp, #32]
   293fc:	ldp	x23, x24, [sp, #48]
   29400:	ldp	x25, x26, [sp, #64]
   29404:	ldp	x27, x28, [sp, #80]
   29408:	ldp	x29, x30, [sp], #96
   2940c:	ret
   29410:	mov	w0, #0x2                   	// #2
   29414:	str	w0, [x28]
   29418:	mov	x0, x27
   2941c:	bl	28dd8 <__sanitizer_set_death_callback@@Base+0x1fd0>
   29420:	mov	w1, w0
   29424:	mov	w0, #0x1                   	// #1
   29428:	str	x1, [x28, #8]
   2942c:	b	29324 <__sanitizer_set_death_callback@@Base+0x251c>
   29430:	mov	w0, #0x2                   	// #2
   29434:	str	w0, [x28]
   29438:	mov	x0, x27
   2943c:	bl	28e98 <__sanitizer_set_death_callback@@Base+0x2090>
   29440:	and	x1, x0, #0xffff
   29444:	mov	w0, #0x1                   	// #1
   29448:	str	x1, [x28, #8]
   2944c:	b	29324 <__sanitizer_set_death_callback@@Base+0x251c>
   29450:	mov	w0, #0xa                   	// #10
   29454:	str	w0, [x28]
   29458:	mov	x0, x27
   2945c:	bl	28dd8 <__sanitizer_set_death_callback@@Base+0x1fd0>
   29460:	mov	w2, w0
   29464:	ldr	x1, [x27, #24]
   29468:	cmp	x1, w0, uxtw
   2946c:	b.cc	29380 <__sanitizer_set_death_callback@@Base+0x2578>  // b.lo, b.ul, b.last
   29470:	ldr	x3, [x27, #16]
   29474:	sub	x1, x1, x2
   29478:	mov	w0, #0x1                   	// #1
   2947c:	add	x2, x3, x2
   29480:	stp	x2, x1, [x27, #16]
   29484:	b	29324 <__sanitizer_set_death_callback@@Base+0x251c>
   29488:	mov	w0, #0x4                   	// #4
   2948c:	str	w0, [x28]
   29490:	mov	x0, x27
   29494:	bl	29178 <__sanitizer_set_death_callback@@Base+0x2370>
   29498:	cmp	x0, #0x0
   2949c:	str	x0, [x28, #8]
   294a0:	cset	w0, ne  // ne = any
   294a4:	b	29324 <__sanitizer_set_death_callback@@Base+0x251c>
   294a8:	mov	w0, #0xa                   	// #10
   294ac:	str	w0, [x28]
   294b0:	mov	x0, x27
   294b4:	bl	28e98 <__sanitizer_set_death_callback@@Base+0x2090>
   294b8:	and	x2, x0, #0xffff
   294bc:	ldr	x1, [x27, #24]
   294c0:	cmp	x1, w0, uxth
   294c4:	b.cc	29380 <__sanitizer_set_death_callback@@Base+0x2578>  // b.lo, b.ul, b.last
   294c8:	b	29470 <__sanitizer_set_death_callback@@Base+0x2668>
   294cc:	mov	w19, #0x1                   	// #1
   294d0:	str	w19, [x28]
   294d4:	mov	w1, w24
   294d8:	mov	x0, x27
   294dc:	bl	28f50 <__sanitizer_set_death_callback@@Base+0x2148>
   294e0:	mov	x1, x0
   294e4:	mov	w0, w19
   294e8:	str	x1, [x28, #8]
   294ec:	b	29324 <__sanitizer_set_death_callback@@Base+0x251c>
   294f0:	mov	x0, x27
   294f4:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   294f8:	add	x1, x1, #0x1e0
   294fc:	bl	28828 <__sanitizer_set_death_callback@@Base+0x1a20>
   29500:	mov	w0, #0x0                   	// #0
   29504:	b	29324 <__sanitizer_set_death_callback@@Base+0x251c>
   29508:	mov	w0, #0x9                   	// #9
   2950c:	b	293dc <__sanitizer_set_death_callback@@Base+0x25d4>
   29510:	mov	x1, #0x1                   	// #1
   29514:	mov	w2, #0x2                   	// #2
   29518:	mov	w0, w1
   2951c:	str	w2, [x28]
   29520:	str	x1, [x28, #8]
   29524:	b	29324 <__sanitizer_set_death_callback@@Base+0x251c>
   29528:	mov	w0, #0xb                   	// #11
   2952c:	b	293a4 <__sanitizer_set_death_callback@@Base+0x259c>
   29530:	mov	w0, #0x8                   	// #8
   29534:	str	w0, [x28]
   29538:	mov	x0, x27
   2953c:	cbz	w21, 29614 <__sanitizer_set_death_callback@@Base+0x280c>
   29540:	bl	28e38 <__sanitizer_set_death_callback@@Base+0x2030>
   29544:	mov	x1, x0
   29548:	b	292e4 <__sanitizer_set_death_callback@@Base+0x24dc>
   2954c:	mov	x0, x27
   29550:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   29554:	mov	w19, w0
   29558:	b	29230 <__sanitizer_set_death_callback@@Base+0x2428>
   2955c:	mov	w0, #0x5                   	// #5
   29560:	b	292d4 <__sanitizer_set_death_callback@@Base+0x24cc>
   29564:	mov	w0, #0x5                   	// #5
   29568:	b	293dc <__sanitizer_set_death_callback@@Base+0x25d4>
   2956c:	mov	w0, #0x5                   	// #5
   29570:	b	29414 <__sanitizer_set_death_callback@@Base+0x260c>
   29574:	mov	w0, #0x5                   	// #5
   29578:	b	29434 <__sanitizer_set_death_callback@@Base+0x262c>
   2957c:	mov	w0, #0x5                   	// #5
   29580:	b	2930c <__sanitizer_set_death_callback@@Base+0x2504>
   29584:	mov	w0, #0x6                   	// #6
   29588:	str	w0, [x28]
   2958c:	cmp	w25, #0x2
   29590:	b.ne	29538 <__sanitizer_set_death_callback@@Base+0x2730>  // b.any
   29594:	mov	w1, w24
   29598:	mov	x0, x27
   2959c:	bl	28f50 <__sanitizer_set_death_callback@@Base+0x2148>
   295a0:	mov	x1, x0
   295a4:	mov	w0, #0x1                   	// #1
   295a8:	str	x1, [x28, #8]
   295ac:	b	29324 <__sanitizer_set_death_callback@@Base+0x251c>
   295b0:	mov	w0, #0x2                   	// #2
   295b4:	b	292d4 <__sanitizer_set_death_callback@@Base+0x24cc>
   295b8:	mov	x0, x27
   295bc:	cbz	w21, 2962c <__sanitizer_set_death_callback@@Base+0x2824>
   295c0:	bl	28e38 <__sanitizer_set_death_callback@@Base+0x2030>
   295c4:	cmp	x0, x26
   295c8:	b.cs	29644 <__sanitizer_set_death_callback@@Base+0x283c>  // b.hs, b.nlast
   295cc:	add	x23, x23, x0
   295d0:	mov	w1, #0x4                   	// #4
   295d4:	mov	w0, #0x1                   	// #1
   295d8:	str	w1, [x28]
   295dc:	str	x23, [x28, #8]
   295e0:	b	29324 <__sanitizer_set_death_callback@@Base+0x251c>
   295e4:	bl	28dd8 <__sanitizer_set_death_callback@@Base+0x1fd0>
   295e8:	mov	w1, w0
   295ec:	b	29294 <__sanitizer_set_death_callback@@Base+0x248c>
   295f0:	mov	x0, x27
   295f4:	cbz	w21, 29620 <__sanitizer_set_death_callback@@Base+0x2818>
   295f8:	bl	28e38 <__sanitizer_set_death_callback@@Base+0x2030>
   295fc:	str	x0, [x28, #8]
   29600:	cbz	x22, 29638 <__sanitizer_set_death_callback@@Base+0x2830>
   29604:	mov	w1, #0x7                   	// #7
   29608:	mov	w0, #0x1                   	// #1
   2960c:	str	w1, [x28]
   29610:	b	29324 <__sanitizer_set_death_callback@@Base+0x251c>
   29614:	bl	28dd8 <__sanitizer_set_death_callback@@Base+0x1fd0>
   29618:	mov	w1, w0
   2961c:	b	292e4 <__sanitizer_set_death_callback@@Base+0x24dc>
   29620:	bl	28dd8 <__sanitizer_set_death_callback@@Base+0x1fd0>
   29624:	mov	w0, w0
   29628:	b	295fc <__sanitizer_set_death_callback@@Base+0x27f4>
   2962c:	bl	28dd8 <__sanitizer_set_death_callback@@Base+0x1fd0>
   29630:	mov	w0, w0
   29634:	b	295c4 <__sanitizer_set_death_callback@@Base+0x27bc>
   29638:	mov	w0, #0x1                   	// #1
   2963c:	str	wzr, [x28]
   29640:	b	29324 <__sanitizer_set_death_callback@@Base+0x251c>
   29644:	mov	x0, x27
   29648:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2964c:	add	x1, x1, #0x198
   29650:	bl	28828 <__sanitizer_set_death_callback@@Base+0x1a20>
   29654:	mov	w0, #0x0                   	// #0
   29658:	b	29324 <__sanitizer_set_death_callback@@Base+0x251c>
   2965c:	mov	x0, x27
   29660:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   29664:	add	x1, x1, #0x1b8
   29668:	bl	28828 <__sanitizer_set_death_callback@@Base+0x1a20>
   2966c:	mov	w0, #0x0                   	// #0
   29670:	b	29324 <__sanitizer_set_death_callback@@Base+0x251c>
   29674:	nop
   29678:	sub	sp, sp, #0x170
   2967c:	stp	x29, x30, [sp, #48]
   29680:	add	x29, sp, #0x30
   29684:	stp	x25, x26, [sp, #112]
   29688:	ldr	x25, [sp, #368]
   2968c:	stp	x27, x28, [sp, #128]
   29690:	add	x28, sp, #0x130
   29694:	ldr	x26, [sp, #392]
   29698:	mov	x27, x4
   2969c:	stp	x19, x20, [sp, #64]
   296a0:	mov	x19, x2
   296a4:	mov	x20, x3
   296a8:	stp	x23, x24, [sp, #96]
   296ac:	mov	x24, x26
   296b0:	mov	x26, x25
   296b4:	mov	x25, x28
   296b8:	stp	x21, x22, [sp, #80]
   296bc:	stp	x0, x1, [sp, #192]
   296c0:	str	x6, [sp, #208]
   296c4:	str	x5, [sp, #224]
   296c8:	str	w7, [sp, #236]
   296cc:	add	x0, sp, #0xf0
   296d0:	str	x0, [sp, #216]
   296d4:	ldr	x0, [x19, #24]
   296d8:	cbz	x0, 29990 <__sanitizer_set_death_callback@@Base+0x2b88>
   296dc:	mov	x0, x19
   296e0:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   296e4:	mov	x2, x0
   296e8:	cbz	x0, 29990 <__sanitizer_set_death_callback@@Base+0x2b88>
   296ec:	ldp	x3, x4, [sp, #376]
   296f0:	add	x1, x24, #0x60
   296f4:	add	x0, x24, #0x58
   296f8:	bl	28ae8 <__sanitizer_set_death_callback@@Base+0x1ce0>
   296fc:	mov	x28, x0
   29700:	cbz	x0, 298c8 <__sanitizer_set_death_callback@@Base+0x2ac0>
   29704:	ldr	x0, [sp, #408]
   29708:	cbz	x0, 29718 <__sanitizer_set_death_callback@@Base+0x2910>
   2970c:	ldr	x1, [sp, #408]
   29710:	ldr	w0, [x28, #8]
   29714:	str	w0, [x1]
   29718:	ldr	x0, [x28, #16]
   2971c:	cbz	x0, 2987c <__sanitizer_set_death_callback@@Base+0x2a74>
   29720:	mov	x23, #0x0                   	// #0
   29724:	mov	x21, #0x0                   	// #0
   29728:	str	wzr, [sp, #152]
   2972c:	str	wzr, [sp, #160]
   29730:	stp	xzr, xzr, [sp, #168]
   29734:	str	wzr, [sp, #184]
   29738:	str	wzr, [sp, #232]
   2973c:	ldr	x2, [x28, #24]
   29740:	b	29778 <__sanitizer_set_death_callback@@Base+0x2970>
   29744:	cmp	w0, #0x10
   29748:	b.eq	29918 <__sanitizer_set_death_callback@@Base+0x2b10>  // b.none
   2974c:	cmp	w0, #0x11
   29750:	b.ne	298ec <__sanitizer_set_death_callback@@Base+0x2ae4>  // b.any
   29754:	ldr	w0, [sp, #304]
   29758:	cmp	w0, #0x1
   2975c:	b.ne	29768 <__sanitizer_set_death_callback@@Base+0x2960>  // b.any
   29760:	ldr	x21, [sp, #312]
   29764:	str	w0, [sp, #184]
   29768:	ldr	x0, [x28, #16]
   2976c:	add	x23, x23, #0x1
   29770:	cmp	x0, x23
   29774:	b.ls	29800 <__sanitizer_set_death_callback@@Base+0x29f8>  // b.plast
   29778:	lsl	x22, x23, #3
   2977c:	ldr	w4, [x24, #48]
   29780:	add	x0, x2, x22
   29784:	mov	x7, x26
   29788:	ldp	w3, w2, [x24, #40]
   2978c:	mov	x6, x27
   29790:	ldr	w0, [x0, #4]
   29794:	mov	x5, x20
   29798:	str	x25, [sp]
   2979c:	mov	x1, x19
   297a0:	bl	291e8 <__sanitizer_set_death_callback@@Base+0x23e0>
   297a4:	cbz	w0, 298cc <__sanitizer_set_death_callback@@Base+0x2ac4>
   297a8:	ldr	x2, [x28, #24]
   297ac:	ldr	w0, [x2, x22]
   297b0:	cmp	w0, #0x12
   297b4:	b.eq	29964 <__sanitizer_set_death_callback@@Base+0x2b5c>  // b.none
   297b8:	b.ls	29744 <__sanitizer_set_death_callback@@Base+0x293c>  // b.plast
   297bc:	cmp	w0, #0x1b
   297c0:	b.eq	29940 <__sanitizer_set_death_callback@@Base+0x2b38>  // b.none
   297c4:	cmp	w0, #0x55
   297c8:	b.ne	29768 <__sanitizer_set_death_callback@@Base+0x2960>  // b.any
   297cc:	ldr	w0, [sp, #304]
   297d0:	cmp	w0, #0x2
   297d4:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   297d8:	b.ne	29768 <__sanitizer_set_death_callback@@Base+0x2960>  // b.any
   297dc:	mov	w0, #0x1                   	// #1
   297e0:	str	w0, [sp, #152]
   297e4:	ldr	x0, [sp, #312]
   297e8:	str	x0, [sp, #176]
   297ec:	ldr	x0, [x28, #16]
   297f0:	add	x23, x23, #0x1
   297f4:	cmp	x0, x23
   297f8:	b.hi	29778 <__sanitizer_set_death_callback@@Base+0x2970>  // b.pmore
   297fc:	nop
   29800:	ldr	w0, [x28, #8]
   29804:	cmp	w0, #0x2e
   29808:	ccmp	w0, #0x11, #0x4, ne  // ne = any
   2980c:	b.ne	2987c <__sanitizer_set_death_callback@@Base+0x2a74>  // b.any
   29810:	ldr	w0, [sp, #152]
   29814:	cbnz	w0, 29998 <__sanitizer_set_death_callback@@Base+0x2b90>
   29818:	ldr	w1, [sp, #160]
   2981c:	ldr	w0, [sp, #184]
   29820:	tst	w0, w1
   29824:	b.eq	2987c <__sanitizer_set_death_callback@@Base+0x2a74>  // b.none
   29828:	ldr	x1, [sp, #168]
   2982c:	str	x24, [sp, #320]
   29830:	ldr	w0, [sp, #232]
   29834:	ldr	x8, [sp, #216]
   29838:	cmp	w0, #0x0
   2983c:	add	x0, x1, x21
   29840:	csel	x0, x0, x1, ne  // ne = any
   29844:	stp	x21, x0, [sp, #304]
   29848:	mov	x2, x8
   2984c:	ldp	x6, x7, [x25]
   29850:	ldp	x3, x4, [sp, #376]
   29854:	ldr	x0, [sp, #192]
   29858:	ldr	x1, [sp, #200]
   2985c:	ldr	x5, [sp, #400]
   29860:	stp	x6, x7, [x8]
   29864:	str	x24, [x8, #16]
   29868:	bl	28748 <__sanitizer_set_death_callback@@Base+0x1940>
   2986c:	cbz	w0, 298cc <__sanitizer_set_death_callback@@Base+0x2ac4>
   29870:	ldr	w0, [x28, #8]
   29874:	cmp	w0, #0x11
   29878:	b.eq	29990 <__sanitizer_set_death_callback@@Base+0x2b88>  // b.none
   2987c:	ldr	w0, [x28, #12]
   29880:	cbz	w0, 296d4 <__sanitizer_set_death_callback@@Base+0x28cc>
   29884:	ldr	x0, [sp, #376]
   29888:	stp	x26, x0, [sp]
   2988c:	ldr	w7, [sp, #236]
   29890:	ldp	x1, x6, [sp, #200]
   29894:	str	x24, [sp, #24]
   29898:	ldr	x0, [sp, #384]
   2989c:	str	x0, [sp, #16]
   298a0:	ldr	x0, [sp, #400]
   298a4:	str	x0, [sp, #32]
   298a8:	ldr	x0, [sp, #192]
   298ac:	str	xzr, [sp, #40]
   298b0:	ldr	x5, [sp, #224]
   298b4:	mov	x4, x27
   298b8:	mov	x3, x20
   298bc:	mov	x2, x19
   298c0:	bl	29678 <__sanitizer_set_death_callback@@Base+0x2870>
   298c4:	cbnz	w0, 296cc <__sanitizer_set_death_callback@@Base+0x28c4>
   298c8:	mov	w0, #0x0                   	// #0
   298cc:	ldp	x29, x30, [sp, #48]
   298d0:	ldp	x19, x20, [sp, #64]
   298d4:	ldp	x21, x22, [sp, #80]
   298d8:	ldp	x23, x24, [sp, #96]
   298dc:	ldp	x25, x26, [sp, #112]
   298e0:	ldp	x27, x28, [sp, #128]
   298e4:	add	sp, sp, #0x170
   298e8:	ret
   298ec:	cmp	w0, #0x3
   298f0:	b.ne	29768 <__sanitizer_set_death_callback@@Base+0x2960>  // b.any
   298f4:	ldr	w0, [x28, #8]
   298f8:	cmp	w0, #0x11
   298fc:	b.ne	29768 <__sanitizer_set_death_callback@@Base+0x2960>  // b.any
   29900:	ldr	w0, [sp, #304]
   29904:	cmp	w0, #0x4
   29908:	b.ne	29768 <__sanitizer_set_death_callback@@Base+0x2960>  // b.any
   2990c:	ldr	x0, [sp, #312]
   29910:	str	x0, [x24, #64]
   29914:	b	29768 <__sanitizer_set_death_callback@@Base+0x2960>
   29918:	ldr	w0, [x28, #8]
   2991c:	cmp	w0, #0x11
   29920:	b.ne	29768 <__sanitizer_set_death_callback@@Base+0x2960>  // b.any
   29924:	ldr	w0, [sp, #304]
   29928:	cmp	w0, #0x2
   2992c:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   29930:	b.ne	29768 <__sanitizer_set_death_callback@@Base+0x2960>  // b.any
   29934:	ldr	x0, [sp, #312]
   29938:	str	x0, [x24, #56]
   2993c:	b	29768 <__sanitizer_set_death_callback@@Base+0x2960>
   29940:	ldr	w0, [x28, #8]
   29944:	cmp	w0, #0x11
   29948:	b.ne	29768 <__sanitizer_set_death_callback@@Base+0x2960>  // b.any
   2994c:	ldr	w0, [sp, #304]
   29950:	cmp	w0, #0x4
   29954:	b.ne	29768 <__sanitizer_set_death_callback@@Base+0x2960>  // b.any
   29958:	ldr	x0, [sp, #312]
   2995c:	str	x0, [x24, #72]
   29960:	b	29768 <__sanitizer_set_death_callback@@Base+0x2960>
   29964:	ldr	w0, [sp, #304]
   29968:	cmp	w0, #0x1
   2996c:	b.eq	29980 <__sanitizer_set_death_callback@@Base+0x2b78>  // b.none
   29970:	cmp	w0, #0x2
   29974:	b.ne	29768 <__sanitizer_set_death_callback@@Base+0x2960>  // b.any
   29978:	mov	w0, #0x1                   	// #1
   2997c:	str	w0, [sp, #232]
   29980:	str	w0, [sp, #160]
   29984:	ldr	x0, [sp, #312]
   29988:	str	x0, [sp, #168]
   2998c:	b	29768 <__sanitizer_set_death_callback@@Base+0x2960>
   29990:	mov	w0, #0x1                   	// #1
   29994:	b	298cc <__sanitizer_set_death_callback@@Base+0x2ac4>
   29998:	ldr	x0, [sp, #176]
   2999c:	ldr	x1, [sp, #208]
   299a0:	cmp	x0, x1
   299a4:	b.cs	29ae0 <__sanitizer_set_death_callback@@Base+0x2cd8>  // b.hs, b.nlast
   299a8:	ldr	x3, [sp, #176]
   299ac:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   299b0:	ldr	x4, [sp, #208]
   299b4:	add	x0, x0, #0x218
   299b8:	ldr	x2, [sp, #224]
   299bc:	stp	x0, x2, [sp, #304]
   299c0:	ldr	w0, [sp, #236]
   299c4:	sub	x23, x4, x3
   299c8:	str	w0, [sp, #336]
   299cc:	ldr	x0, [sp, #376]
   299d0:	add	x1, x2, x3
   299d4:	stp	x20, x27, [sp, #168]
   299d8:	mov	x22, #0xffff                	// #65535
   299dc:	stp	x1, x23, [sp, #320]
   299e0:	str	x0, [sp, #344]
   299e4:	ldp	x20, x23, [sp, #192]
   299e8:	stp	x28, x19, [sp, #152]
   299ec:	ldr	x0, [sp, #384]
   299f0:	str	x26, [sp, #184]
   299f4:	ldr	x19, [sp, #216]
   299f8:	mov	x28, x0
   299fc:	ldr	x27, [sp, #376]
   29a00:	str	x0, [sp, #352]
   29a04:	str	wzr, [sp, #360]
   29a08:	ldr	w1, [x24, #48]
   29a0c:	mov	x0, x25
   29a10:	bl	28f50 <__sanitizer_set_death_callback@@Base+0x2148>
   29a14:	mov	x26, x0
   29a18:	ldr	w1, [x24, #48]
   29a1c:	mov	x0, x25
   29a20:	bl	28f50 <__sanitizer_set_death_callback@@Base+0x2148>
   29a24:	orr	x1, x26, x0
   29a28:	cbz	x1, 29afc <__sanitizer_set_death_callback@@Base+0x2cf4>
   29a2c:	ldr	w1, [x24, #48]
   29a30:	cmp	w1, #0x4
   29a34:	b.eq	29ad0 <__sanitizer_set_death_callback@@Base+0x2cc8>  // b.none
   29a38:	b.gt	29a6c <__sanitizer_set_death_callback@@Base+0x2c64>
   29a3c:	cmp	w1, #0x1
   29a40:	b.eq	29ac4 <__sanitizer_set_death_callback@@Base+0x2cbc>  // b.none
   29a44:	cmp	w1, #0x2
   29a48:	b.ne	29a80 <__sanitizer_set_death_callback@@Base+0x2c78>  // b.any
   29a4c:	cmp	x26, x22
   29a50:	cset	w1, eq  // eq = none
   29a54:	cbz	w1, 29a80 <__sanitizer_set_death_callback@@Base+0x2c78>
   29a58:	mov	x21, x0
   29a5c:	ldr	w0, [sp, #360]
   29a60:	cbz	w0, 29a08 <__sanitizer_set_death_callback@@Base+0x2c00>
   29a64:	mov	w0, #0x0                   	// #0
   29a68:	b	298cc <__sanitizer_set_death_callback@@Base+0x2ac4>
   29a6c:	cmp	w1, #0x8
   29a70:	b.ne	29a80 <__sanitizer_set_death_callback@@Base+0x2c78>  // b.any
   29a74:	cmn	x26, #0x1
   29a78:	cset	w1, eq  // eq = none
   29a7c:	cbnz	w1, 29a58 <__sanitizer_set_death_callback@@Base+0x2c50>
   29a80:	add	x0, x21, x0
   29a84:	add	x2, x21, x26
   29a88:	stp	x2, x0, [sp, #280]
   29a8c:	add	x0, sp, #0x200
   29a90:	mov	x4, x28
   29a94:	ldr	x5, [sp, #400]
   29a98:	str	x24, [sp, #296]
   29a9c:	ldp	x0, x1, [x0, #-232]
   29aa0:	stp	x0, x1, [x19]
   29aa4:	mov	x3, x27
   29aa8:	str	x24, [x19, #16]
   29aac:	mov	x2, x19
   29ab0:	mov	x1, x23
   29ab4:	mov	x0, x20
   29ab8:	bl	28748 <__sanitizer_set_death_callback@@Base+0x1940>
   29abc:	cbnz	w0, 29a5c <__sanitizer_set_death_callback@@Base+0x2c54>
   29ac0:	b	298cc <__sanitizer_set_death_callback@@Base+0x2ac4>
   29ac4:	cmp	x26, #0xff
   29ac8:	cset	w1, eq  // eq = none
   29acc:	b	29a54 <__sanitizer_set_death_callback@@Base+0x2c4c>
   29ad0:	mov	x1, #0xffffffff            	// #4294967295
   29ad4:	cmp	x26, x1
   29ad8:	cset	w1, eq  // eq = none
   29adc:	b	29a54 <__sanitizer_set_death_callback@@Base+0x2c4c>
   29ae0:	ldp	x3, x0, [sp, #376]
   29ae4:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   29ae8:	mov	w2, #0x0                   	// #0
   29aec:	add	x1, x1, #0x1f8
   29af0:	blr	x3
   29af4:	mov	w0, #0x0                   	// #0
   29af8:	b	298cc <__sanitizer_set_death_callback@@Base+0x2ac4>
   29afc:	ldr	w0, [sp, #360]
   29b00:	ldp	x28, x19, [sp, #152]
   29b04:	ldp	x20, x27, [sp, #168]
   29b08:	ldr	x26, [sp, #184]
   29b0c:	cbz	w0, 29870 <__sanitizer_set_death_callback@@Base+0x2a68>
   29b10:	mov	w0, #0x0                   	// #0
   29b14:	b	298cc <__sanitizer_set_death_callback@@Base+0x2ac4>
   29b18:	ldr	w2, [x2]
   29b1c:	mov	x6, x3
   29b20:	mov	x7, x0
   29b24:	mov	x3, x4
   29b28:	cmp	w2, #0x6
   29b2c:	mov	x4, x5
   29b30:	b.eq	29b98 <__sanitizer_set_death_callback@@Base+0x2d90>  // b.none
   29b34:	cmp	w2, #0x2
   29b38:	ccmp	w2, #0x5, #0x4, ne  // ne = any
   29b3c:	b.eq	29bf0 <__sanitizer_set_death_callback@@Base+0x2de8>  // b.none
   29b40:	cmp	w2, #0x7
   29b44:	b.ne	29b90 <__sanitizer_set_death_callback@@Base+0x2d88>  // b.any
   29b48:	ldr	x0, [x0, #8]
   29b4c:	mov	x5, #0x0                   	// #0
   29b50:	ldr	x2, [x6]
   29b54:	ldp	x9, x7, [x0, #40]
   29b58:	add	x6, x7, x5
   29b5c:	cmp	x7, x5
   29b60:	b.ls	29b90 <__sanitizer_set_death_callback@@Base+0x2d88>  // b.plast
   29b64:	lsr	x6, x6, #1
   29b68:	ldr	x1, [x9, x6, lsl #3]
   29b6c:	ldr	x8, [x1, #24]
   29b70:	cmp	x2, x8
   29b74:	b.cc	29be8 <__sanitizer_set_death_callback@@Base+0x2de0>  // b.lo, b.ul, b.last
   29b78:	ldr	x10, [x1, #32]
   29b7c:	add	x5, x6, #0x1
   29b80:	cmp	x2, x10
   29b84:	b.cs	29b58 <__sanitizer_set_death_callback@@Base+0x2d50>  // b.hs, b.nlast
   29b88:	sub	x2, x2, x8
   29b8c:	b	29bf8 <__sanitizer_set_death_callback@@Base+0x2df0>
   29b90:	mov	x0, #0x0                   	// #0
   29b94:	ret
   29b98:	ldp	x9, x5, [x7, #40]
   29b9c:	mov	x0, #0x0                   	// #0
   29ba0:	ldr	x2, [x6]
   29ba4:	add	x6, x5, x0
   29ba8:	cmp	x5, x0
   29bac:	b.ls	29b90 <__sanitizer_set_death_callback@@Base+0x2d88>  // b.plast
   29bb0:	lsr	x6, x6, #1
   29bb4:	ldr	x1, [x9, x6, lsl #3]
   29bb8:	ldr	x8, [x1, #24]
   29bbc:	cmp	x2, x8
   29bc0:	b.cc	29be0 <__sanitizer_set_death_callback@@Base+0x2dd8>  // b.lo, b.ul, b.last
   29bc4:	ldr	x10, [x1, #32]
   29bc8:	add	x0, x6, #0x1
   29bcc:	cmp	x2, x10
   29bd0:	b.cs	29ba4 <__sanitizer_set_death_callback@@Base+0x2d9c>  // b.hs, b.nlast
   29bd4:	sub	x2, x2, x8
   29bd8:	mov	x0, x7
   29bdc:	b	29bf8 <__sanitizer_set_death_callback@@Base+0x2df0>
   29be0:	mov	x5, x6
   29be4:	b	29ba4 <__sanitizer_set_death_callback@@Base+0x2d9c>
   29be8:	mov	x7, x6
   29bec:	b	29b58 <__sanitizer_set_death_callback@@Base+0x2d50>
   29bf0:	ldr	x2, [x6]
   29bf4:	b	29bf8 <__sanitizer_set_death_callback@@Base+0x2df0>
   29bf8:	sub	sp, sp, #0xd0
   29bfc:	stp	x29, x30, [sp, #16]
   29c00:	add	x29, sp, #0x10
   29c04:	stp	x27, x28, [sp, #96]
   29c08:	mov	x27, x0
   29c0c:	ldr	x0, [x1, #16]
   29c10:	stp	x21, x22, [sp, #48]
   29c14:	stp	x25, x26, [sp, #80]
   29c18:	cmp	x0, x2
   29c1c:	mov	x25, x4
   29c20:	str	x3, [sp, #112]
   29c24:	b.hi	29dc8 <__sanitizer_set_death_callback@@Base+0x2fc0>  // b.pmore
   29c28:	stp	x19, x20, [sp, #32]
   29c2c:	mov	x19, x1
   29c30:	sub	x4, x2, x0
   29c34:	ldr	x1, [x1, #8]
   29c38:	cmp	x4, x1
   29c3c:	b.cs	29dc4 <__sanitizer_set_death_callback@@Base+0x2fbc>  // b.hs, b.nlast
   29c40:	ldr	x3, [x19]
   29c44:	add	x0, x0, x1
   29c48:	sub	x1, x0, x2
   29c4c:	ldr	w5, [x27, #120]
   29c50:	add	x2, x3, x4
   29c54:	stp	x2, x1, [sp, #160]
   29c58:	adrp	x3, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   29c5c:	ldr	x6, [x27, #56]
   29c60:	add	x3, x3, #0x258
   29c64:	ldr	x1, [sp, #112]
   29c68:	add	x21, sp, #0x90
   29c6c:	mov	x0, x21
   29c70:	stp	x3, x6, [sp, #144]
   29c74:	str	w5, [sp, #176]
   29c78:	str	x1, [sp, #184]
   29c7c:	str	x25, [sp, #192]
   29c80:	str	wzr, [sp, #200]
   29c84:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   29c88:	mov	x2, x0
   29c8c:	cbz	x0, 29e14 <__sanitizer_set_death_callback@@Base+0x300c>
   29c90:	ldr	x3, [sp, #112]
   29c94:	mov	x4, x25
   29c98:	add	x1, x19, #0x60
   29c9c:	add	x0, x19, #0x58
   29ca0:	bl	28ae8 <__sanitizer_set_death_callback@@Base+0x1ce0>
   29ca4:	mov	x26, x0
   29ca8:	cbz	x0, 29e58 <__sanitizer_set_death_callback@@Base+0x3050>
   29cac:	ldr	x0, [x0, #16]
   29cb0:	cbz	x0, 29e58 <__sanitizer_set_death_callback@@Base+0x3050>
   29cb4:	add	x20, sp, #0x80
   29cb8:	mov	x28, #0x0                   	// #0
   29cbc:	add	x0, x20, #0x8
   29cc0:	mov	x22, #0x0                   	// #0
   29cc4:	stp	x23, x24, [sp, #64]
   29cc8:	mov	w23, #0x2007                	// #8199
   29ccc:	str	x0, [sp, #120]
   29cd0:	b	29cf0 <__sanitizer_set_death_callback@@Base+0x2ee8>
   29cd4:	cmp	w2, #0x3
   29cd8:	b.ne	29ce0 <__sanitizer_set_death_callback@@Base+0x2ed8>  // b.any
   29cdc:	cbz	x22, 29e00 <__sanitizer_set_death_callback@@Base+0x2ff8>
   29ce0:	ldr	x0, [x26, #16]
   29ce4:	add	x28, x28, #0x1
   29ce8:	cmp	x0, x28
   29cec:	b.ls	29da0 <__sanitizer_set_death_callback@@Base+0x2f98>  // b.plast
   29cf0:	ldr	x8, [x26, #24]
   29cf4:	lsl	x24, x28, #3
   29cf8:	ldp	x5, x6, [x27, #104]
   29cfc:	add	x8, x8, x24
   29d00:	ldp	w3, w2, [x19, #40]
   29d04:	mov	x1, x21
   29d08:	ldr	w4, [x19, #48]
   29d0c:	ldr	w0, [x8, #4]
   29d10:	ldr	x7, [x27, #8]
   29d14:	str	x20, [sp]
   29d18:	bl	291e8 <__sanitizer_set_death_callback@@Base+0x23e0>
   29d1c:	cbz	w0, 29e48 <__sanitizer_set_death_callback@@Base+0x3040>
   29d20:	ldr	x0, [x26, #24]
   29d24:	add	x1, x0, x24
   29d28:	ldr	w2, [x0, x24]
   29d2c:	cmp	w2, #0x47
   29d30:	b.eq	29d64 <__sanitizer_set_death_callback@@Base+0x2f5c>  // b.none
   29d34:	b.ls	29cd4 <__sanitizer_set_death_callback@@Base+0x2ecc>  // b.plast
   29d38:	cmp	w2, #0x6e
   29d3c:	b.eq	29d48 <__sanitizer_set_death_callback@@Base+0x2f40>  // b.none
   29d40:	cmp	w2, w23
   29d44:	b.ne	29ce0 <__sanitizer_set_death_callback@@Base+0x2ed8>  // b.any
   29d48:	ldr	w0, [sp, #128]
   29d4c:	cmp	w0, #0x4
   29d50:	b.ne	29ce0 <__sanitizer_set_death_callback@@Base+0x2ed8>  // b.any
   29d54:	ldp	x19, x20, [sp, #32]
   29d58:	ldp	x23, x24, [sp, #64]
   29d5c:	ldr	x22, [sp, #136]
   29d60:	b	29de4 <__sanitizer_set_death_callback@@Base+0x2fdc>
   29d64:	ldr	w0, [x1, #4]
   29d68:	cmp	w0, #0x20
   29d6c:	b.eq	29ce0 <__sanitizer_set_death_callback@@Base+0x2ed8>  // b.none
   29d70:	ldp	x4, x3, [sp, #112]
   29d74:	mov	x5, x25
   29d78:	mov	x2, x20
   29d7c:	mov	x1, x19
   29d80:	mov	x0, x27
   29d84:	add	x28, x28, #0x1
   29d88:	bl	29b18 <__sanitizer_set_death_callback@@Base+0x2d10>
   29d8c:	cmp	x0, #0x0
   29d90:	csel	x22, x22, x0, eq  // eq = none
   29d94:	ldr	x0, [x26, #16]
   29d98:	cmp	x0, x28
   29d9c:	b.hi	29cf0 <__sanitizer_set_death_callback@@Base+0x2ee8>  // b.pmore
   29da0:	ldp	x19, x20, [sp, #32]
   29da4:	ldp	x23, x24, [sp, #64]
   29da8:	mov	x0, x22
   29dac:	ldp	x29, x30, [sp, #16]
   29db0:	ldp	x21, x22, [sp, #48]
   29db4:	ldp	x25, x26, [sp, #80]
   29db8:	ldp	x27, x28, [sp, #96]
   29dbc:	add	sp, sp, #0xd0
   29dc0:	ret
   29dc4:	ldp	x19, x20, [sp, #32]
   29dc8:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   29dcc:	ldr	x3, [sp, #112]
   29dd0:	mov	x0, x25
   29dd4:	add	x1, x1, #0x228
   29dd8:	mov	w2, #0x0                   	// #0
   29ddc:	mov	x22, #0x0                   	// #0
   29de0:	blr	x3
   29de4:	mov	x0, x22
   29de8:	ldp	x29, x30, [sp, #16]
   29dec:	ldp	x21, x22, [sp, #48]
   29df0:	ldp	x25, x26, [sp, #80]
   29df4:	ldp	x27, x28, [sp, #96]
   29df8:	add	sp, sp, #0xd0
   29dfc:	ret
   29e00:	ldr	w0, [sp, #128]
   29e04:	ldr	x22, [sp, #136]
   29e08:	cmp	w0, #0x4
   29e0c:	csel	x22, x22, xzr, eq  // eq = none
   29e10:	b	29ce0 <__sanitizer_set_death_callback@@Base+0x2ed8>
   29e14:	mov	x0, x21
   29e18:	mov	x22, #0x0                   	// #0
   29e1c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   29e20:	add	x1, x1, #0x268
   29e24:	bl	28828 <__sanitizer_set_death_callback@@Base+0x1a20>
   29e28:	mov	x0, x22
   29e2c:	ldp	x29, x30, [sp, #16]
   29e30:	ldp	x19, x20, [sp, #32]
   29e34:	ldp	x21, x22, [sp, #48]
   29e38:	ldp	x25, x26, [sp, #80]
   29e3c:	ldp	x27, x28, [sp, #96]
   29e40:	add	sp, sp, #0xd0
   29e44:	ret
   29e48:	mov	x22, #0x0                   	// #0
   29e4c:	ldp	x19, x20, [sp, #32]
   29e50:	ldp	x23, x24, [sp, #64]
   29e54:	b	29da8 <__sanitizer_set_death_callback@@Base+0x2fa0>
   29e58:	mov	x22, #0x0                   	// #0
   29e5c:	ldp	x19, x20, [sp, #32]
   29e60:	b	29de4 <__sanitizer_set_death_callback@@Base+0x2fdc>
   29e64:	nop
   29e68:	sub	sp, sp, #0x130
   29e6c:	stp	x29, x30, [sp, #16]
   29e70:	add	x29, sp, #0x10
   29e74:	stp	x25, x26, [sp, #80]
   29e78:	mov	x25, x4
   29e7c:	ldr	x4, [x4, #24]
   29e80:	str	x6, [sp, #128]
   29e84:	stp	x0, x3, [sp, #176]
   29e88:	str	x5, [sp, #216]
   29e8c:	cbz	x4, 2a0e0 <__sanitizer_set_death_callback@@Base+0x32d8>
   29e90:	mov	x26, x7
   29e94:	stp	x23, x24, [sp, #64]
   29e98:	add	x24, sp, #0xf0
   29e9c:	stp	x27, x28, [sp, #96]
   29ea0:	mov	x27, x2
   29ea4:	mov	x28, x1
   29ea8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   29eac:	add	x1, x24, #0x8
   29eb0:	add	x0, x0, #0x5c8
   29eb4:	stp	x19, x20, [sp, #32]
   29eb8:	stp	x21, x22, [sp, #48]
   29ebc:	stp	x1, x0, [sp, #224]
   29ec0:	mov	x0, x25
   29ec4:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   29ec8:	mov	x2, x0
   29ecc:	cbz	x0, 2a0d0 <__sanitizer_set_death_callback@@Base+0x32c8>
   29ed0:	ldr	x3, [sp, #128]
   29ed4:	mov	x4, x26
   29ed8:	add	x1, x27, #0x60
   29edc:	add	x0, x27, #0x58
   29ee0:	bl	28ae8 <__sanitizer_set_death_callback@@Base+0x1ce0>
   29ee4:	mov	x23, x0
   29ee8:	cbz	x0, 2a178 <__sanitizer_set_death_callback@@Base+0x3370>
   29eec:	ldr	w0, [x0, #8]
   29ef0:	cmp	w0, #0x2e
   29ef4:	ccmp	w0, #0x3, #0x4, ne  // ne = any
   29ef8:	b.eq	2a2ac <__sanitizer_set_death_callback@@Base+0x34a4>  // b.none
   29efc:	cmp	w0, #0x1d
   29f00:	b.eq	2a328 <__sanitizer_set_death_callback@@Base+0x3520>  // b.none
   29f04:	ldr	x0, [sp, #304]
   29f08:	mov	w19, #0x0                   	// #0
   29f0c:	str	xzr, [sp, #120]
   29f10:	str	x0, [sp, #208]
   29f14:	ldr	x0, [x23, #16]
   29f18:	str	x0, [sp, #136]
   29f1c:	cbz	x0, 2a490 <__sanitizer_set_death_callback@@Base+0x3688>
   29f20:	mov	x21, x27
   29f24:	mov	x22, #0x0                   	// #0
   29f28:	mov	w20, #0x2007                	// #8199
   29f2c:	str	xzr, [sp, #136]
   29f30:	str	wzr, [sp, #144]
   29f34:	str	wzr, [sp, #152]
   29f38:	str	wzr, [sp, #164]
   29f3c:	str	xzr, [sp, #168]
   29f40:	str	xzr, [sp, #192]
   29f44:	stp	wzr, wzr, [sp, #200]
   29f48:	ldr	x0, [x23, #24]
   29f4c:	lsl	x27, x22, #3
   29f50:	ldp	x5, x6, [x28, #104]
   29f54:	add	x0, x0, x27
   29f58:	ldp	w3, w2, [x21, #40]
   29f5c:	mov	x1, x25
   29f60:	ldr	w4, [x21, #48]
   29f64:	ldr	w0, [x0, #4]
   29f68:	ldr	x7, [x28, #8]
   29f6c:	str	x24, [sp]
   29f70:	bl	291e8 <__sanitizer_set_death_callback@@Base+0x23e0>
   29f74:	cbz	w0, 2a178 <__sanitizer_set_death_callback@@Base+0x3370>
   29f78:	ldr	w0, [x23, #8]
   29f7c:	cmp	w0, #0x11
   29f80:	b.eq	2a0e8 <__sanitizer_set_death_callback@@Base+0x32e0>  // b.none
   29f84:	cbz	w19, 29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>
   29f88:	ldr	x0, [x23, #24]
   29f8c:	add	x1, x0, x27
   29f90:	ldr	w0, [x0, x27]
   29f94:	cmp	w0, #0x55
   29f98:	b.eq	2a248 <__sanitizer_set_death_callback@@Base+0x3440>  // b.none
   29f9c:	b.hi	2a1c4 <__sanitizer_set_death_callback@@Base+0x33bc>  // b.pmore
   29fa0:	cmp	w0, #0x12
   29fa4:	b.eq	2a284 <__sanitizer_set_death_callback@@Base+0x347c>  // b.none
   29fa8:	b.ls	2a19c <__sanitizer_set_death_callback@@Base+0x3394>  // b.plast
   29fac:	cmp	w0, #0x31
   29fb0:	b.eq	29fbc <__sanitizer_set_death_callback@@Base+0x31b4>  // b.none
   29fb4:	cmp	w0, #0x47
   29fb8:	b.ne	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>  // b.any
   29fbc:	ldr	w0, [sp, #144]
   29fc0:	cbz	w0, 2a2ec <__sanitizer_set_death_callback@@Base+0x34e4>
   29fc4:	nop
   29fc8:	ldr	x0, [x23, #16]
   29fcc:	add	x22, x22, #0x1
   29fd0:	cmp	x0, x22
   29fd4:	b.hi	29f48 <__sanitizer_set_death_callback@@Base+0x3140>  // b.pmore
   29fd8:	mov	x27, x21
   29fdc:	cbz	w19, 2a134 <__sanitizer_set_death_callback@@Base+0x332c>
   29fe0:	ldr	x0, [sp, #120]
   29fe4:	ldr	x0, [x0]
   29fe8:	cbz	x0, 2a120 <__sanitizer_set_death_callback@@Base+0x3318>
   29fec:	ldr	w0, [sp, #152]
   29ff0:	cbnz	w0, 2a364 <__sanitizer_set_death_callback@@Base+0x355c>
   29ff4:	ldr	w1, [sp, #164]
   29ff8:	ldr	w0, [sp, #200]
   29ffc:	tst	w0, w1
   2a000:	b.eq	2a120 <__sanitizer_set_death_callback@@Base+0x3318>  // b.none
   2a004:	ldr	w0, [sp, #204]
   2a008:	mov	x6, x26
   2a00c:	ldr	x3, [sp, #192]
   2a010:	cmp	w0, #0x0
   2a014:	ldr	x0, [sp, #136]
   2a018:	ldp	x2, x5, [sp, #120]
   2a01c:	add	x4, x0, x3
   2a020:	csel	x4, x4, x0, ne  // ne = any
   2a024:	ldr	x1, [x28, #16]
   2a028:	ldr	x0, [sp, #176]
   2a02c:	ldr	x7, [sp, #208]
   2a030:	bl	28cc0 <__sanitizer_set_death_callback@@Base+0x1eb8>
   2a034:	cbz	w0, 2a178 <__sanitizer_set_death_callback@@Base+0x3370>
   2a038:	ldr	w0, [x23, #12]
   2a03c:	cbz	w0, 2a0c8 <__sanitizer_set_death_callback@@Base+0x32c0>
   2a040:	mov	x2, #0x20                  	// #32
   2a044:	mov	w1, #0x0                   	// #0
   2a048:	mov	x0, x24
   2a04c:	bl	6860 <__asan_internal_memset@plt>
   2a050:	ldr	x0, [sp, #304]
   2a054:	stp	x0, x24, [sp]
   2a058:	mov	x7, x26
   2a05c:	ldr	x6, [sp, #128]
   2a060:	mov	x4, x25
   2a064:	ldr	x0, [sp, #176]
   2a068:	mov	x2, x27
   2a06c:	ldr	x3, [sp, #184]
   2a070:	mov	x1, x28
   2a074:	ldr	x5, [sp, #216]
   2a078:	bl	29e68 <__sanitizer_set_death_callback@@Base+0x3060>
   2a07c:	cbz	w0, 2a178 <__sanitizer_set_death_callback@@Base+0x3370>
   2a080:	ldr	x0, [sp, #264]
   2a084:	cbz	x0, 2a0c8 <__sanitizer_set_death_callback@@Base+0x32c0>
   2a088:	ldr	x2, [sp, #128]
   2a08c:	mov	x3, x26
   2a090:	ldr	x0, [sp, #176]
   2a094:	mov	x1, x24
   2a098:	bl	6910 <__asan_backtrace_vector_release@plt>
   2a09c:	cbz	w0, 2a178 <__sanitizer_set_death_callback@@Base+0x3370>
   2a0a0:	ldr	x1, [sp, #264]
   2a0a4:	adrp	x3, 2b000 <__sanitizer_set_death_callback@@Base+0x41f8>
   2a0a8:	ldr	x19, [sp, #240]
   2a0ac:	add	x3, x3, #0x6a0
   2a0b0:	mov	x2, #0x18                  	// #24
   2a0b4:	mov	x0, x19
   2a0b8:	bl	66b0 <__asan_backtrace_qsort@plt>
   2a0bc:	ldr	x1, [sp, #120]
   2a0c0:	ldr	x0, [sp, #264]
   2a0c4:	stp	x19, x0, [x1, #24]
   2a0c8:	ldr	x0, [x25, #24]
   2a0cc:	cbnz	x0, 29ec0 <__sanitizer_set_death_callback@@Base+0x30b8>
   2a0d0:	ldp	x19, x20, [sp, #32]
   2a0d4:	ldp	x21, x22, [sp, #48]
   2a0d8:	ldp	x23, x24, [sp, #64]
   2a0dc:	ldp	x27, x28, [sp, #96]
   2a0e0:	mov	w0, #0x1                   	// #1
   2a0e4:	b	2a18c <__sanitizer_set_death_callback@@Base+0x3384>
   2a0e8:	ldr	x0, [x23, #24]
   2a0ec:	ldr	w0, [x0, x27]
   2a0f0:	cmp	w0, #0x11
   2a0f4:	b.ne	29f84 <__sanitizer_set_death_callback@@Base+0x317c>  // b.any
   2a0f8:	ldr	w0, [sp, #240]
   2a0fc:	cmp	w0, #0x1
   2a100:	b.ne	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>  // b.any
   2a104:	ldr	x0, [sp, #248]
   2a108:	str	x0, [sp, #184]
   2a10c:	cbz	w19, 29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>
   2a110:	str	x0, [sp, #192]
   2a114:	mov	w0, #0x1                   	// #1
   2a118:	str	w0, [sp, #200]
   2a11c:	b	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>
   2a120:	ldp	x1, x3, [sp, #120]
   2a124:	mov	x4, x26
   2a128:	ldr	x0, [sp, #176]
   2a12c:	mov	x2, #0x28                  	// #40
   2a130:	bl	6bc0 <__asan_backtrace_free@plt>
   2a134:	ldr	w0, [x23, #12]
   2a138:	cbz	w0, 2a0c8 <__sanitizer_set_death_callback@@Base+0x32c0>
   2a13c:	ldr	x0, [sp, #304]
   2a140:	str	x0, [sp]
   2a144:	ldr	x0, [sp, #312]
   2a148:	str	x0, [sp, #8]
   2a14c:	ldr	x6, [sp, #128]
   2a150:	mov	x7, x26
   2a154:	ldr	x0, [sp, #176]
   2a158:	mov	x4, x25
   2a15c:	ldr	x3, [sp, #184]
   2a160:	mov	x2, x27
   2a164:	ldr	x5, [sp, #216]
   2a168:	mov	x1, x28
   2a16c:	bl	29e68 <__sanitizer_set_death_callback@@Base+0x3060>
   2a170:	cbnz	w0, 2a0c8 <__sanitizer_set_death_callback@@Base+0x32c0>
   2a174:	nop
   2a178:	ldp	x19, x20, [sp, #32]
   2a17c:	mov	w0, #0x0                   	// #0
   2a180:	ldp	x21, x22, [sp, #48]
   2a184:	ldp	x23, x24, [sp, #64]
   2a188:	ldp	x27, x28, [sp, #96]
   2a18c:	ldp	x29, x30, [sp, #16]
   2a190:	ldp	x25, x26, [sp, #80]
   2a194:	add	sp, sp, #0x130
   2a198:	ret
   2a19c:	cmp	w0, #0x3
   2a1a0:	b.ne	2a22c <__sanitizer_set_death_callback@@Base+0x3424>  // b.any
   2a1a4:	ldr	x0, [sp, #120]
   2a1a8:	ldr	x0, [x0]
   2a1ac:	cbnz	x0, 29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>
   2a1b0:	ldr	w0, [sp, #240]
   2a1b4:	cmp	w0, #0x4
   2a1b8:	b.ne	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>  // b.any
   2a1bc:	ldr	x0, [sp, #248]
   2a1c0:	b	2a31c <__sanitizer_set_death_callback@@Base+0x3514>
   2a1c4:	cmp	w0, #0x59
   2a1c8:	b.eq	2a268 <__sanitizer_set_death_callback@@Base+0x3460>  // b.none
   2a1cc:	b.ls	2a200 <__sanitizer_set_death_callback@@Base+0x33f8>  // b.plast
   2a1d0:	cmp	w0, #0x6e
   2a1d4:	b.eq	2a1e0 <__sanitizer_set_death_callback@@Base+0x33d8>  // b.none
   2a1d8:	cmp	w0, w20
   2a1dc:	b.ne	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>  // b.any
   2a1e0:	ldr	w0, [sp, #240]
   2a1e4:	cmp	w0, #0x4
   2a1e8:	b.ne	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>  // b.any
   2a1ec:	ldr	x1, [sp, #120]
   2a1f0:	str	w19, [sp, #144]
   2a1f4:	ldr	x0, [sp, #248]
   2a1f8:	str	x0, [x1]
   2a1fc:	b	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>
   2a200:	cmp	w0, #0x58
   2a204:	b.ne	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>  // b.any
   2a208:	ldr	w0, [sp, #240]
   2a20c:	cmp	w0, #0x2
   2a210:	b.ne	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>  // b.any
   2a214:	ldr	x0, [sp, #248]
   2a218:	cbnz	x0, 2a334 <__sanitizer_set_death_callback@@Base+0x352c>
   2a21c:	ldr	x0, [sp, #120]
   2a220:	ldr	x1, [sp, #232]
   2a224:	str	x1, [x0, #8]
   2a228:	b	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>
   2a22c:	cmp	w0, #0x11
   2a230:	b.ne	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>  // b.any
   2a234:	ldr	w0, [sp, #240]
   2a238:	cmp	w0, #0x1
   2a23c:	b.ne	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>  // b.any
   2a240:	ldr	x0, [sp, #248]
   2a244:	b	2a110 <__sanitizer_set_death_callback@@Base+0x3308>
   2a248:	ldr	w0, [sp, #240]
   2a24c:	cmp	w0, #0x2
   2a250:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   2a254:	b.ne	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>  // b.any
   2a258:	ldr	x0, [sp, #248]
   2a25c:	str	w19, [sp, #152]
   2a260:	str	x0, [sp, #168]
   2a264:	b	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>
   2a268:	ldr	w0, [sp, #240]
   2a26c:	cmp	w0, #0x2
   2a270:	b.ne	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>  // b.any
   2a274:	ldr	x1, [sp, #120]
   2a278:	ldr	x0, [sp, #248]
   2a27c:	str	w0, [x1, #16]
   2a280:	b	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>
   2a284:	ldr	w0, [sp, #240]
   2a288:	cmp	w0, #0x1
   2a28c:	b.eq	2a29c <__sanitizer_set_death_callback@@Base+0x3494>  // b.none
   2a290:	cmp	w0, #0x2
   2a294:	b.ne	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>  // b.any
   2a298:	str	w19, [sp, #204]
   2a29c:	ldr	x0, [sp, #248]
   2a2a0:	str	x0, [sp, #136]
   2a2a4:	str	w19, [sp, #164]
   2a2a8:	b	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>
   2a2ac:	cmp	w0, #0x1d
   2a2b0:	ldp	x0, x1, [sp, #304]
   2a2b4:	csel	x0, x0, x1, ne  // ne = any
   2a2b8:	str	x0, [sp, #208]
   2a2bc:	ldr	x2, [sp, #128]
   2a2c0:	mov	x3, x26
   2a2c4:	ldr	x0, [sp, #176]
   2a2c8:	mov	x1, #0x28                  	// #40
   2a2cc:	bl	68c0 <__asan_backtrace_alloc@plt>
   2a2d0:	str	x0, [sp, #120]
   2a2d4:	cbz	x0, 2a178 <__sanitizer_set_death_callback@@Base+0x3370>
   2a2d8:	mov	x2, #0x28                  	// #40
   2a2dc:	mov	w1, #0x0                   	// #0
   2a2e0:	mov	w19, #0x1                   	// #1
   2a2e4:	bl	6860 <__asan_internal_memset@plt>
   2a2e8:	b	29f14 <__sanitizer_set_death_callback@@Base+0x310c>
   2a2ec:	ldr	w0, [x1, #4]
   2a2f0:	cmp	w0, #0x20
   2a2f4:	b.eq	2a4c8 <__sanitizer_set_death_callback@@Base+0x36c0>  // b.none
   2a2f8:	ldr	x4, [sp, #128]
   2a2fc:	mov	x5, x26
   2a300:	ldr	x3, [sp, #224]
   2a304:	mov	x2, x24
   2a308:	mov	x1, x21
   2a30c:	mov	x0, x28
   2a310:	bl	29b18 <__sanitizer_set_death_callback@@Base+0x2d10>
   2a314:	str	wzr, [sp, #144]
   2a318:	cbz	x0, 29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>
   2a31c:	ldr	x1, [sp, #120]
   2a320:	str	x0, [x1]
   2a324:	b	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>
   2a328:	ldr	x0, [sp, #312]
   2a32c:	str	x0, [sp, #208]
   2a330:	b	2a2bc <__sanitizer_set_death_callback@@Base+0x34b4>
   2a334:	ldr	x1, [sp, #216]
   2a338:	sub	x2, x0, #0x1
   2a33c:	ldr	x1, [x1, #48]
   2a340:	cmp	x2, x1
   2a344:	b.cs	2a4e4 <__sanitizer_set_death_callback@@Base+0x36dc>  // b.hs, b.nlast
   2a348:	ldr	x1, [sp, #216]
   2a34c:	ldr	x1, [x1, #56]
   2a350:	add	x0, x1, x0, lsl #3
   2a354:	ldr	x1, [sp, #120]
   2a358:	ldur	x0, [x0, #-8]
   2a35c:	str	x0, [x1, #8]
   2a360:	b	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>
   2a364:	ldr	x0, [x28, #96]
   2a368:	ldr	x1, [sp, #168]
   2a36c:	cmp	x0, x1
   2a370:	b.ls	2a4ac <__sanitizer_set_death_callback@@Base+0x36a4>  // b.plast
   2a374:	ldr	x3, [x28, #88]
   2a378:	stp	x28, x23, [sp, #136]
   2a37c:	ldr	w4, [x28, #120]
   2a380:	ldr	x5, [sp, #168]
   2a384:	str	x25, [sp, #152]
   2a388:	ldr	x25, [sp, #176]
   2a38c:	sub	x1, x0, x5
   2a390:	add	x0, x3, x5
   2a394:	stp	x0, x1, [sp, #256]
   2a398:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2a39c:	ldr	x0, [sp, #128]
   2a3a0:	add	x2, x2, #0x218
   2a3a4:	ldr	x19, [sp, #184]
   2a3a8:	mov	x28, x0
   2a3ac:	ldr	x23, [sp, #208]
   2a3b0:	mov	x21, #0xffffffff            	// #4294967295
   2a3b4:	mov	x20, #0xffff                	// #65535
   2a3b8:	stp	x2, x3, [sp, #240]
   2a3bc:	str	w4, [sp, #272]
   2a3c0:	str	x0, [sp, #280]
   2a3c4:	str	x26, [sp, #288]
   2a3c8:	str	wzr, [sp, #296]
   2a3cc:	nop
   2a3d0:	ldr	w1, [x27, #48]
   2a3d4:	mov	x0, x24
   2a3d8:	bl	28f50 <__sanitizer_set_death_callback@@Base+0x2148>
   2a3dc:	mov	x22, x0
   2a3e0:	ldr	w1, [x27, #48]
   2a3e4:	mov	x0, x24
   2a3e8:	bl	28f50 <__sanitizer_set_death_callback@@Base+0x2148>
   2a3ec:	orr	x1, x22, x0
   2a3f0:	cbz	x1, 2a4d0 <__sanitizer_set_death_callback@@Base+0x36c8>
   2a3f4:	ldr	w1, [x27, #48]
   2a3f8:	cmp	w1, #0x4
   2a3fc:	b.eq	2a478 <__sanitizer_set_death_callback@@Base+0x3670>  // b.none
   2a400:	b.gt	2a430 <__sanitizer_set_death_callback@@Base+0x3628>
   2a404:	cmp	w1, #0x1
   2a408:	b.eq	2a484 <__sanitizer_set_death_callback@@Base+0x367c>  // b.none
   2a40c:	cmp	w1, #0x2
   2a410:	b.ne	2a448 <__sanitizer_set_death_callback@@Base+0x3640>  // b.any
   2a414:	cmp	x22, x20
   2a418:	cset	w1, eq  // eq = none
   2a41c:	cbz	w1, 2a448 <__sanitizer_set_death_callback@@Base+0x3640>
   2a420:	mov	x19, x0
   2a424:	ldr	w0, [sp, #296]
   2a428:	cbz	w0, 2a3d0 <__sanitizer_set_death_callback@@Base+0x35c8>
   2a42c:	b	2a178 <__sanitizer_set_death_callback@@Base+0x3370>
   2a430:	cmp	w1, #0x8
   2a434:	b.ne	2a448 <__sanitizer_set_death_callback@@Base+0x3640>  // b.any
   2a438:	cmn	x22, #0x1
   2a43c:	cset	w1, eq  // eq = none
   2a440:	cbnz	w1, 2a420 <__sanitizer_set_death_callback@@Base+0x3618>
   2a444:	nop
   2a448:	ldr	x1, [sp, #136]
   2a44c:	add	x4, x0, x19
   2a450:	ldr	x2, [sp, #120]
   2a454:	add	x3, x22, x19
   2a458:	ldr	x1, [x1, #16]
   2a45c:	mov	x7, x23
   2a460:	mov	x6, x26
   2a464:	mov	x5, x28
   2a468:	mov	x0, x25
   2a46c:	bl	28cc0 <__sanitizer_set_death_callback@@Base+0x1eb8>
   2a470:	cbnz	w0, 2a424 <__sanitizer_set_death_callback@@Base+0x361c>
   2a474:	b	2a178 <__sanitizer_set_death_callback@@Base+0x3370>
   2a478:	cmp	x22, x21
   2a47c:	cset	w1, eq  // eq = none
   2a480:	b	2a41c <__sanitizer_set_death_callback@@Base+0x3614>
   2a484:	cmp	x22, #0xff
   2a488:	cset	w1, eq  // eq = none
   2a48c:	b	2a41c <__sanitizer_set_death_callback@@Base+0x3614>
   2a490:	str	wzr, [sp, #152]
   2a494:	str	wzr, [sp, #164]
   2a498:	str	xzr, [sp, #168]
   2a49c:	str	xzr, [sp, #192]
   2a4a0:	stp	wzr, wzr, [sp, #200]
   2a4a4:	cbz	w19, 2a134 <__sanitizer_set_death_callback@@Base+0x332c>
   2a4a8:	b	29fe0 <__sanitizer_set_death_callback@@Base+0x31d8>
   2a4ac:	ldr	x3, [sp, #128]
   2a4b0:	mov	x0, x26
   2a4b4:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2a4b8:	mov	w2, #0x0                   	// #0
   2a4bc:	add	x1, x1, #0x2d0
   2a4c0:	blr	x3
   2a4c4:	b	2a178 <__sanitizer_set_death_callback@@Base+0x3370>
   2a4c8:	str	wzr, [sp, #144]
   2a4cc:	b	29fc8 <__sanitizer_set_death_callback@@Base+0x31c0>
   2a4d0:	ldr	w0, [sp, #296]
   2a4d4:	ldp	x28, x23, [sp, #136]
   2a4d8:	ldr	x25, [sp, #152]
   2a4dc:	cbz	w0, 2a038 <__sanitizer_set_death_callback@@Base+0x3230>
   2a4e0:	b	2a178 <__sanitizer_set_death_callback@@Base+0x3370>
   2a4e4:	mov	x0, x25
   2a4e8:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2a4ec:	add	x1, x1, #0x298
   2a4f0:	bl	28828 <__sanitizer_set_death_callback@@Base+0x1a20>
   2a4f4:	b	2a178 <__sanitizer_set_death_callback@@Base+0x3370>
   2a4f8:	sub	sp, sp, #0x1d0
   2a4fc:	mov	x7, x6
   2a500:	stp	x29, x30, [sp, #16]
   2a504:	add	x29, sp, #0x10
   2a508:	stp	x23, x24, [sp, #64]
   2a50c:	mov	x23, x1
   2a510:	mov	w1, #0x1                   	// #1
   2a514:	stp	x3, x6, [sp, #112]
   2a518:	ldr	x6, [x23, #32]
   2a51c:	str	w1, [x7]
   2a520:	str	x4, [sp, #128]
   2a524:	cbz	x6, 2a7c4 <__sanitizer_set_death_callback@@Base+0x39bc>
   2a528:	ldr	x4, [x23, #24]
   2a52c:	stp	x19, x20, [sp, #32]
   2a530:	mov	x20, x0
   2a534:	stp	x21, x22, [sp, #48]
   2a538:	mov	x22, x5
   2a53c:	mov	x21, x2
   2a540:	mov	x5, x6
   2a544:	mov	x3, #0x0                   	// #0
   2a548:	stp	x25, x26, [sp, #80]
   2a54c:	add	x0, x5, x3
   2a550:	cmp	x5, x3
   2a554:	and	x1, x0, #0xfffffffffffffffe
   2a558:	b.ls	2a7b8 <__sanitizer_set_death_callback@@Base+0x39b0>  // b.plast
   2a55c:	lsr	x0, x0, #1
   2a560:	add	x1, x1, x0
   2a564:	lsl	x2, x1, #3
   2a568:	ldr	x1, [x4, x1, lsl #3]
   2a56c:	add	x24, x4, x2
   2a570:	cmp	x1, x21
   2a574:	b.hi	2a7a4 <__sanitizer_set_death_callback@@Base+0x399c>  // b.pmore
   2a578:	ldr	x1, [x24, #8]
   2a57c:	add	x3, x0, #0x1
   2a580:	cmp	x1, x21
   2a584:	b.ls	2a54c <__sanitizer_set_death_callback@@Base+0x3744>  // b.plast
   2a588:	asr	x2, x2, #3
   2a58c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   2a590:	movk	x0, #0xaaab
   2a594:	mov	x1, x0
   2a598:	mul	x2, x2, x0
   2a59c:	add	x2, x2, #0x1
   2a5a0:	cmp	x6, x2
   2a5a4:	b.hi	2a5d4 <__sanitizer_set_death_callback@@Base+0x37cc>  // b.pmore
   2a5a8:	b	2a5e0 <__sanitizer_set_death_callback@@Base+0x37d8>
   2a5ac:	ldr	x0, [x24, #32]
   2a5b0:	cmp	x0, x21
   2a5b4:	b.ls	2a5e0 <__sanitizer_set_death_callback@@Base+0x37d8>  // b.plast
   2a5b8:	add	x24, x24, #0x18
   2a5bc:	sub	x0, x24, x4
   2a5c0:	asr	x0, x0, #3
   2a5c4:	mul	x0, x0, x1
   2a5c8:	add	x0, x0, #0x1
   2a5cc:	cmp	x6, x0
   2a5d0:	b.ls	2a5e0 <__sanitizer_set_death_callback@@Base+0x37d8>  // b.plast
   2a5d4:	ldr	x0, [x24, #24]
   2a5d8:	cmp	x0, x21
   2a5dc:	b.ls	2a5ac <__sanitizer_set_death_callback@@Base+0x37a4>  // b.plast
   2a5e0:	ldr	x26, [x24, #16]
   2a5e4:	cmp	x4, x24
   2a5e8:	ldr	w1, [x20, #8]
   2a5ec:	ldr	x19, [x26, #104]
   2a5f0:	b.cc	2a618 <__sanitizer_set_death_callback@@Base+0x3810>  // b.lo, b.ul, b.last
   2a5f4:	b	2a648 <__sanitizer_set_death_callback@@Base+0x3840>
   2a5f8:	cmn	x19, #0x1
   2a5fc:	b.ne	2a648 <__sanitizer_set_death_callback@@Base+0x3840>  // b.any
   2a600:	ldur	x26, [x24, #-8]
   2a604:	sub	x24, x24, #0x18
   2a608:	ldr	x0, [x23, #24]
   2a60c:	ldr	x19, [x26, #104]
   2a610:	cmp	x0, x24
   2a614:	b.cs	2a648 <__sanitizer_set_death_callback@@Base+0x3840>  // b.hs, b.nlast
   2a618:	ldur	x0, [x24, #-24]
   2a61c:	cmp	x0, x21
   2a620:	b.hi	2a648 <__sanitizer_set_death_callback@@Base+0x3840>  // b.pmore
   2a624:	ldur	x0, [x24, #-16]
   2a628:	cmp	x0, x21
   2a62c:	b.ls	2a648 <__sanitizer_set_death_callback@@Base+0x3840>  // b.plast
   2a630:	cbz	w1, 2a5f8 <__sanitizer_set_death_callback@@Base+0x37f0>
   2a634:	add	x0, x26, #0x68
   2a638:	ldar	x19, [x0]
   2a63c:	ldr	w1, [x20, #8]
   2a640:	cmn	x19, #0x1
   2a644:	b.eq	2a600 <__sanitizer_set_death_callback@@Base+0x37f8>  // b.none
   2a648:	cbnz	w1, 2a840 <__sanitizer_set_death_callback@@Base+0x3a38>
   2a64c:	cbz	x19, 2a84c <__sanitizer_set_death_callback@@Base+0x3a44>
   2a650:	cmn	x19, #0x1
   2a654:	b.eq	2a920 <__sanitizer_set_death_callback@@Base+0x3b18>  // b.none
   2a658:	ldr	x7, [x24, #16]
   2a65c:	mov	x2, #0x0                   	// #0
   2a660:	ldr	x3, [x7, #112]
   2a664:	add	x0, x2, x3
   2a668:	cmp	x2, x3
   2a66c:	and	x1, x0, #0xfffffffffffffffe
   2a670:	b.cs	2a7f4 <__sanitizer_set_death_callback@@Base+0x39ec>  // b.hs, b.nlast
   2a674:	lsr	x0, x0, #1
   2a678:	add	x1, x1, x0
   2a67c:	add	x4, x19, x1, lsl #3
   2a680:	ldr	x1, [x19, x1, lsl #3]
   2a684:	cmp	x1, x21
   2a688:	b.hi	2a7e0 <__sanitizer_set_death_callback@@Base+0x39d8>  // b.pmore
   2a68c:	ldr	x1, [x4, #24]
   2a690:	add	x2, x0, #0x1
   2a694:	cmp	x1, x21
   2a698:	b.ls	2a664 <__sanitizer_set_death_callback@@Base+0x385c>  // b.plast
   2a69c:	ldr	x6, [x7, #128]
   2a6a0:	ldr	w10, [x4, #16]
   2a6a4:	ldr	x8, [x4, #8]
   2a6a8:	cbz	x6, 2a828 <__sanitizer_set_death_callback@@Base+0x3a20>
   2a6ac:	ldr	x4, [x7, #120]
   2a6b0:	mov	x5, x6
   2a6b4:	mov	x3, #0x0                   	// #0
   2a6b8:	add	x0, x5, x3
   2a6bc:	cmp	x5, x3
   2a6c0:	and	x1, x0, #0xfffffffffffffffe
   2a6c4:	b.ls	2a828 <__sanitizer_set_death_callback@@Base+0x3a20>  // b.plast
   2a6c8:	lsr	x0, x0, #1
   2a6cc:	add	x1, x1, x0
   2a6d0:	lsl	x2, x1, #3
   2a6d4:	ldr	x7, [x4, x1, lsl #3]
   2a6d8:	add	x1, x4, x2
   2a6dc:	cmp	x7, x21
   2a6e0:	b.hi	2a814 <__sanitizer_set_death_callback@@Base+0x3a0c>  // b.pmore
   2a6e4:	ldr	x7, [x1, #8]
   2a6e8:	add	x3, x0, #0x1
   2a6ec:	cmp	x7, x21
   2a6f0:	b.ls	2a6b8 <__sanitizer_set_death_callback@@Base+0x38b0>  // b.plast
   2a6f4:	asr	x0, x2, #3
   2a6f8:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   2a6fc:	movk	x2, #0xaaab
   2a700:	mov	x3, x2
   2a704:	mul	x0, x0, x2
   2a708:	add	x0, x0, #0x1
   2a70c:	cmp	x6, x0
   2a710:	b.hi	2a740 <__sanitizer_set_death_callback@@Base+0x3938>  // b.pmore
   2a714:	b	2a74c <__sanitizer_set_death_callback@@Base+0x3944>
   2a718:	ldr	x0, [x1, #32]
   2a71c:	cmp	x0, x21
   2a720:	b.ls	2a74c <__sanitizer_set_death_callback@@Base+0x3944>  // b.plast
   2a724:	add	x1, x1, #0x18
   2a728:	sub	x0, x1, x4
   2a72c:	asr	x0, x0, #3
   2a730:	mul	x0, x0, x3
   2a734:	add	x0, x0, #0x1
   2a738:	cmp	x6, x0
   2a73c:	b.ls	2a74c <__sanitizer_set_death_callback@@Base+0x3944>  // b.plast
   2a740:	ldr	x0, [x1, #24]
   2a744:	cmp	x0, x21
   2a748:	b.ls	2a718 <__sanitizer_set_death_callback@@Base+0x3910>  // b.plast
   2a74c:	ldr	x19, [x1, #16]
   2a750:	add	x6, sp, #0x150
   2a754:	ldr	x20, [sp, #112]
   2a758:	add	x5, sp, #0x190
   2a75c:	ldp	x1, x2, [x19, #24]
   2a760:	mov	x4, x22
   2a764:	mov	x0, x21
   2a768:	mov	x3, x20
   2a76c:	str	w10, [sp, #336]
   2a770:	str	x8, [sp, #400]
   2a774:	bl	28988 <__sanitizer_set_death_callback@@Base+0x1b80>
   2a778:	cbnz	w0, 2aa70 <__sanitizer_set_death_callback@@Base+0x3c68>
   2a77c:	ldr	w3, [sp, #336]
   2a780:	mov	x1, x21
   2a784:	ldr	x4, [x19]
   2a788:	mov	x0, x22
   2a78c:	ldr	x2, [sp, #400]
   2a790:	blr	x20
   2a794:	ldp	x19, x20, [sp, #32]
   2a798:	ldp	x21, x22, [sp, #48]
   2a79c:	ldp	x25, x26, [sp, #80]
   2a7a0:	b	2a7d0 <__sanitizer_set_death_callback@@Base+0x39c8>
   2a7a4:	mov	x5, x0
   2a7a8:	add	x0, x5, x3
   2a7ac:	cmp	x5, x3
   2a7b0:	and	x1, x0, #0xfffffffffffffffe
   2a7b4:	b.hi	2a55c <__sanitizer_set_death_callback@@Base+0x3754>  // b.pmore
   2a7b8:	ldp	x19, x20, [sp, #32]
   2a7bc:	ldp	x21, x22, [sp, #48]
   2a7c0:	ldp	x25, x26, [sp, #80]
   2a7c4:	mov	w0, #0x0                   	// #0
   2a7c8:	ldr	x1, [sp, #120]
   2a7cc:	str	wzr, [x1]
   2a7d0:	ldp	x29, x30, [sp, #16]
   2a7d4:	ldp	x23, x24, [sp, #64]
   2a7d8:	add	sp, sp, #0x1d0
   2a7dc:	ret
   2a7e0:	mov	x3, x0
   2a7e4:	add	x0, x2, x3
   2a7e8:	cmp	x2, x3
   2a7ec:	and	x1, x0, #0xfffffffffffffffe
   2a7f0:	b.cc	2a674 <__sanitizer_set_death_callback@@Base+0x386c>  // b.lo, b.ul, b.last
   2a7f4:	ldr	x19, [x7, #80]
   2a7f8:	cbz	x19, 2a958 <__sanitizer_set_death_callback@@Base+0x3b50>
   2a7fc:	mov	x2, x19
   2a800:	mov	x1, x21
   2a804:	mov	x0, x22
   2a808:	mov	x4, #0x0                   	// #0
   2a80c:	mov	w3, #0x0                   	// #0
   2a810:	b	2a934 <__sanitizer_set_death_callback@@Base+0x3b2c>
   2a814:	mov	x5, x0
   2a818:	add	x0, x5, x3
   2a81c:	cmp	x5, x3
   2a820:	and	x1, x0, #0xfffffffffffffffe
   2a824:	b.hi	2a6c8 <__sanitizer_set_death_callback@@Base+0x38c0>  // b.pmore
   2a828:	mov	w3, w10
   2a82c:	mov	x2, x8
   2a830:	mov	x1, x21
   2a834:	mov	x0, x22
   2a838:	mov	x4, #0x0                   	// #0
   2a83c:	b	2a934 <__sanitizer_set_death_callback@@Base+0x3b2c>
   2a840:	add	x0, x26, #0x68
   2a844:	ldar	x19, [x0]
   2a848:	cbnz	x19, 2a650 <__sanitizer_set_death_callback@@Base+0x3848>
   2a84c:	add	x3, sp, #0x110
   2a850:	add	x0, sp, #0xf0
   2a854:	ldr	x19, [x24, #16]
   2a858:	mov	x25, x3
   2a85c:	mov	x2, #0x18                  	// #24
   2a860:	mov	w1, #0x0                   	// #0
   2a864:	stp	x27, x28, [sp, #96]
   2a868:	stp	x3, x0, [sp, #136]
   2a86c:	str	x19, [sp, #160]
   2a870:	bl	6860 <__asan_internal_memset@plt>
   2a874:	mov	w1, #0x0                   	// #0
   2a878:	mov	x0, x25
   2a87c:	mov	x2, #0x40                  	// #64
   2a880:	str	xzr, [sp, #264]
   2a884:	bl	6860 <__asan_internal_memset@plt>
   2a888:	ldr	x0, [x19, #56]
   2a88c:	ldr	x1, [x23, #80]
   2a890:	cmp	x0, x1
   2a894:	b.cc	2a9ec <__sanitizer_set_death_callback@@Base+0x3be4>  // b.lo, b.ul, b.last
   2a898:	ldr	x3, [sp, #128]
   2a89c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2a8a0:	mov	x0, x22
   2a8a4:	add	x1, x1, #0x2f8
   2a8a8:	mov	w2, #0x0                   	// #0
   2a8ac:	blr	x3
   2a8b0:	ldp	x5, x4, [sp, #248]
   2a8b4:	mov	x3, x22
   2a8b8:	ldr	x1, [sp, #144]
   2a8bc:	mov	x0, x20
   2a8c0:	ldr	x19, [sp, #128]
   2a8c4:	mov	x25, #0x0                   	// #0
   2a8c8:	add	x4, x4, x5
   2a8cc:	stp	xzr, x4, [sp, #248]
   2a8d0:	mov	x2, x19
   2a8d4:	mov	x28, #0x0                   	// #0
   2a8d8:	mov	x27, #0x0                   	// #0
   2a8dc:	bl	6910 <__asan_backtrace_vector_release@plt>
   2a8e0:	ldr	x1, [sp, #136]
   2a8e4:	mov	x2, x19
   2a8e8:	mov	x3, x22
   2a8ec:	mov	x0, x20
   2a8f0:	mov	x19, #0xffffffffffffffff    	// #-1
   2a8f4:	bl	28880 <__sanitizer_set_death_callback@@Base+0x1a78>
   2a8f8:	mov	w1, #0x0                   	// #0
   2a8fc:	ldr	w0, [x20, #8]
   2a900:	cbnz	w0, 2aa80 <__sanitizer_set_death_callback@@Base+0x3c78>
   2a904:	stp	x19, x28, [x26, #104]
   2a908:	stp	x25, x27, [x26, #120]
   2a90c:	cmn	x19, #0x1
   2a910:	b.eq	2aaa4 <__sanitizer_set_death_callback@@Base+0x3c9c>  // b.none
   2a914:	ldp	x27, x28, [sp, #96]
   2a918:	b	2a658 <__sanitizer_set_death_callback@@Base+0x3850>
   2a91c:	ldp	x27, x28, [sp, #96]
   2a920:	mov	x1, x21
   2a924:	mov	x0, x22
   2a928:	mov	x4, #0x0                   	// #0
   2a92c:	mov	w3, #0x0                   	// #0
   2a930:	mov	x2, #0x0                   	// #0
   2a934:	ldr	x5, [sp, #112]
   2a938:	blr	x5
   2a93c:	ldp	x29, x30, [sp, #16]
   2a940:	ldp	x19, x20, [sp, #32]
   2a944:	ldp	x21, x22, [sp, #48]
   2a948:	ldp	x23, x24, [sp, #64]
   2a94c:	ldp	x25, x26, [sp, #80]
   2a950:	add	sp, sp, #0x1d0
   2a954:	ret
   2a958:	ldr	x19, [x7, #64]
   2a95c:	cbz	x19, 2a9e4 <__sanitizer_set_death_callback@@Base+0x3bdc>
   2a960:	ldrb	w0, [x19]
   2a964:	cmp	w0, #0x2f
   2a968:	b.eq	2a9e4 <__sanitizer_set_death_callback@@Base+0x3bdc>  // b.none
   2a96c:	ldr	x0, [x7, #72]
   2a970:	cbz	x0, 2a9e4 <__sanitizer_set_death_callback@@Base+0x3bdc>
   2a974:	mov	x0, x19
   2a978:	bl	67e0 <__asan_internal_strlen@plt>
   2a97c:	ldr	x1, [x24, #16]
   2a980:	mov	x25, x0
   2a984:	ldr	x26, [x1, #72]
   2a988:	mov	x0, x26
   2a98c:	bl	67e0 <__asan_internal_strlen@plt>
   2a990:	ldr	x2, [sp, #128]
   2a994:	mov	x23, x0
   2a998:	add	x1, x25, x23
   2a99c:	mov	x0, x20
   2a9a0:	mov	x3, x22
   2a9a4:	add	x1, x1, #0x2
   2a9a8:	bl	68c0 <__asan_backtrace_alloc@plt>
   2a9ac:	mov	x20, x0
   2a9b0:	cbz	x0, 2a7b8 <__sanitizer_set_death_callback@@Base+0x39b0>
   2a9b4:	mov	x1, x26
   2a9b8:	mov	x2, x23
   2a9bc:	bl	67d0 <__asan_internal_memcpy@plt>
   2a9c0:	mov	w3, #0x2f                  	// #47
   2a9c4:	strb	w3, [x20, x23]
   2a9c8:	add	x0, x23, #0x1
   2a9cc:	mov	x1, x19
   2a9d0:	add	x2, x25, #0x1
   2a9d4:	add	x0, x20, x0
   2a9d8:	bl	67d0 <__asan_internal_memcpy@plt>
   2a9dc:	mov	x19, x20
   2a9e0:	ldr	x7, [x24, #16]
   2a9e4:	str	x19, [x7, #80]
   2a9e8:	b	2a7fc <__sanitizer_set_death_callback@@Base+0x39f4>
   2a9ec:	ldr	x4, [x23, #72]
   2a9f0:	sub	x2, x1, x0
   2a9f4:	ldr	w5, [x23, #120]
   2a9f8:	adrp	x3, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2a9fc:	add	x1, x4, x0
   2aa00:	stp	x1, x2, [sp, #352]
   2aa04:	add	x3, x3, #0x318
   2aa08:	ldr	x1, [sp, #128]
   2aa0c:	add	x25, sp, #0x150
   2aa10:	mov	x0, x25
   2aa14:	stp	x3, x4, [sp, #336]
   2aa18:	str	w5, [sp, #368]
   2aa1c:	str	x1, [sp, #376]
   2aa20:	str	x22, [sp, #384]
   2aa24:	str	wzr, [sp, #392]
   2aa28:	bl	28dd8 <__sanitizer_set_death_callback@@Base+0x1fd0>
   2aa2c:	mov	x1, #0xffffffff            	// #4294967295
   2aa30:	mov	w2, w0
   2aa34:	cmp	x1, w0, uxtw
   2aa38:	mov	x0, x25
   2aa3c:	b.eq	2ae6c <__sanitizer_set_death_callback@@Base+0x4064>  // b.none
   2aa40:	str	x2, [sp, #360]
   2aa44:	bl	28e98 <__sanitizer_set_death_callback@@Base+0x2090>
   2aa48:	and	w0, w0, #0xffff
   2aa4c:	str	w0, [sp, #272]
   2aa50:	sub	w0, w0, #0x2
   2aa54:	cmp	w0, #0x2
   2aa58:	b.ls	2aad8 <__sanitizer_set_death_callback@@Base+0x3cd0>  // b.plast
   2aa5c:	mov	x0, x25
   2aa60:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2aa64:	add	x1, x1, #0x328
   2aa68:	bl	28828 <__sanitizer_set_death_callback@@Base+0x1a20>
   2aa6c:	b	2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2aa70:	ldp	x19, x20, [sp, #32]
   2aa74:	ldp	x21, x22, [sp, #48]
   2aa78:	ldp	x25, x26, [sp, #80]
   2aa7c:	b	2a7d0 <__sanitizer_set_death_callback@@Base+0x39c8>
   2aa80:	add	x0, x26, #0x70
   2aa84:	stlr	x28, [x0]
   2aa88:	add	x0, x26, #0x78
   2aa8c:	stlr	x25, [x0]
   2aa90:	add	x0, x26, #0x80
   2aa94:	stlr	x27, [x0]
   2aa98:	add	x11, x26, #0x68
   2aa9c:	stlr	x19, [x11]
   2aaa0:	b	2a90c <__sanitizer_set_death_callback@@Base+0x3b04>
   2aaa4:	cbz	w1, 2a91c <__sanitizer_set_death_callback@@Base+0x3b14>
   2aaa8:	ldp	x3, x6, [sp, #112]
   2aaac:	mov	x5, x22
   2aab0:	ldr	x4, [sp, #128]
   2aab4:	mov	x2, x21
   2aab8:	mov	x0, x20
   2aabc:	mov	x1, x23
   2aac0:	bl	2a4f8 <__sanitizer_set_death_callback@@Base+0x36f0>
   2aac4:	ldp	x19, x20, [sp, #32]
   2aac8:	ldp	x21, x22, [sp, #48]
   2aacc:	ldp	x25, x26, [sp, #80]
   2aad0:	ldp	x27, x28, [sp, #96]
   2aad4:	b	2a7d0 <__sanitizer_set_death_callback@@Base+0x39c8>
   2aad8:	mov	x0, x25
   2aadc:	bl	28dd8 <__sanitizer_set_death_callback@@Base+0x1fd0>
   2aae0:	mov	w0, w0
   2aae4:	ldp	x2, x3, [sp, #352]
   2aae8:	stp	x2, x3, [sp, #416]
   2aaec:	ldp	x2, x3, [sp, #336]
   2aaf0:	stp	x2, x3, [sp, #400]
   2aaf4:	ldp	x2, x3, [sp, #368]
   2aaf8:	stp	x2, x3, [sp, #432]
   2aafc:	ldr	x1, [sp, #360]
   2ab00:	str	x0, [sp, #424]
   2ab04:	ldp	x2, x3, [sp, #384]
   2ab08:	stp	x2, x3, [sp, #448]
   2ab0c:	cmp	x0, x1
   2ab10:	b.ls	2ae44 <__sanitizer_set_death_callback@@Base+0x403c>  // b.plast
   2ab14:	mov	x0, x25
   2ab18:	bl	28d90 <__sanitizer_set_death_callback@@Base+0x1f88>
   2ab1c:	cbz	w0, 2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2ab20:	add	x0, sp, #0x190
   2ab24:	str	x0, [sp, #152]
   2ab28:	bl	28f00 <__sanitizer_set_death_callback@@Base+0x20f8>
   2ab2c:	and	w0, w0, #0xff
   2ab30:	ldr	w1, [sp, #272]
   2ab34:	str	w0, [sp, #276]
   2ab38:	cmp	w1, #0x3
   2ab3c:	b.gt	2ae58 <__sanitizer_set_death_callback@@Base+0x4050>
   2ab40:	mov	w0, #0x1                   	// #1
   2ab44:	str	w0, [sp, #280]
   2ab48:	ldr	x0, [sp, #152]
   2ab4c:	bl	28f00 <__sanitizer_set_death_callback@@Base+0x20f8>
   2ab50:	ldp	x19, x0, [sp, #416]
   2ab54:	cbnz	x0, 2aea0 <__sanitizer_set_death_callback@@Base+0x4098>
   2ab58:	ldr	x0, [sp, #152]
   2ab5c:	bl	28d90 <__sanitizer_set_death_callback@@Base+0x1f88>
   2ab60:	mov	w1, w0
   2ab64:	cbz	w0, 2ab78 <__sanitizer_set_death_callback@@Base+0x3d70>
   2ab68:	ldrb	w1, [x19]
   2ab6c:	eor	w1, w1, #0xffffff80
   2ab70:	sub	w1, w1, #0x80
   2ab74:	sxtb	w1, w1
   2ab78:	ldr	x19, [sp, #152]
   2ab7c:	str	w1, [sp, #284]
   2ab80:	mov	x0, x19
   2ab84:	bl	28f00 <__sanitizer_set_death_callback@@Base+0x20f8>
   2ab88:	and	w1, w0, #0xff
   2ab8c:	mov	x0, x19
   2ab90:	str	w1, [sp, #288]
   2ab94:	bl	28f00 <__sanitizer_set_death_callback@@Base+0x20f8>
   2ab98:	and	w1, w0, #0xff
   2ab9c:	ldp	x19, x0, [sp, #416]
   2aba0:	str	w1, [sp, #292]
   2aba4:	str	x19, [sp, #296]
   2aba8:	sub	w1, w1, #0x1
   2abac:	cmp	x1, x0
   2abb0:	b.ls	2aeb0 <__sanitizer_set_death_callback@@Base+0x40a8>  // b.plast
   2abb4:	ldr	x0, [sp, #152]
   2abb8:	bl	28d90 <__sanitizer_set_death_callback@@Base+0x1f88>
   2abbc:	cbz	w0, 2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2abc0:	ldp	x19, x0, [sp, #416]
   2abc4:	str	xzr, [sp, #304]
   2abc8:	add	x27, x19, x0
   2abcc:	cmp	x27, x19
   2abd0:	b.hi	2abf8 <__sanitizer_set_death_callback@@Base+0x3df0>  // b.pmore
   2abd4:	b	2b51c <__sanitizer_set_death_callback@@Base+0x4714>
   2abd8:	bl	6b50 <__asan_internal_strnlen@plt>
   2abdc:	add	x0, x0, #0x1
   2abe0:	ldr	x1, [sp, #304]
   2abe4:	add	x19, x19, x0
   2abe8:	cmp	x27, x19
   2abec:	add	x1, x1, #0x1
   2abf0:	str	x1, [sp, #304]
   2abf4:	b.ls	2ac0c <__sanitizer_set_death_callback@@Base+0x3e04>  // b.plast
   2abf8:	ldrb	w2, [x19]
   2abfc:	sub	x1, x27, x19
   2ac00:	mov	x0, x19
   2ac04:	cbnz	w2, 2abd8 <__sanitizer_set_death_callback@@Base+0x3dd0>
   2ac08:	ldr	x1, [sp, #304]
   2ac0c:	str	xzr, [sp, #312]
   2ac10:	cbnz	x1, 2aec0 <__sanitizer_set_death_callback@@Base+0x40b8>
   2ac14:	ldr	x0, [sp, #416]
   2ac18:	mov	x19, #0x0                   	// #0
   2ac1c:	ldrb	w1, [x0]
   2ac20:	cbz	w1, 2ac5c <__sanitizer_set_death_callback@@Base+0x3e54>
   2ac24:	ldr	x27, [sp, #152]
   2ac28:	mov	x0, x27
   2ac2c:	ldr	w1, [sp, #456]
   2ac30:	cbnz	w1, 2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2ac34:	ldr	x28, [sp, #312]
   2ac38:	bl	29178 <__sanitizer_set_death_callback@@Base+0x2370>
   2ac3c:	ldr	x1, [sp, #312]
   2ac40:	str	x0, [x28, x19]
   2ac44:	ldr	x0, [x1, x19]
   2ac48:	add	x19, x19, #0x8
   2ac4c:	cbz	x0, 2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2ac50:	ldr	x0, [sp, #416]
   2ac54:	ldrb	w1, [x0]
   2ac58:	cbnz	w1, 2ac28 <__sanitizer_set_death_callback@@Base+0x3e20>
   2ac5c:	ldr	x19, [sp, #424]
   2ac60:	cbnz	x19, 2af08 <__sanitizer_set_death_callback@@Base+0x4100>
   2ac64:	ldr	x0, [sp, #152]
   2ac68:	bl	28d90 <__sanitizer_set_death_callback@@Base+0x1f88>
   2ac6c:	cbz	w0, 2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2ac70:	ldp	x27, x19, [sp, #416]
   2ac74:	str	xzr, [sp, #320]
   2ac78:	add	x19, x27, x19
   2ac7c:	mov	x1, #0x0                   	// #0
   2ac80:	cmp	x19, x27
   2ac84:	b.ls	2ad1c <__sanitizer_set_death_callback@@Base+0x3f14>  // b.plast
   2ac88:	ldrb	w0, [x27]
   2ac8c:	cbz	w0, 2af00 <__sanitizer_set_death_callback@@Base+0x40f8>
   2ac90:	sub	x1, x19, x27
   2ac94:	mov	x0, x27
   2ac98:	bl	6b50 <__asan_internal_strnlen@plt>
   2ac9c:	add	x1, x0, #0x1
   2aca0:	add	x2, x27, x1
   2aca4:	ldrsb	w1, [x27, x1]
   2aca8:	tbz	w1, #31, 2aeec <__sanitizer_set_death_callback@@Base+0x40e4>
   2acac:	add	x27, x27, x0
   2acb0:	mov	x0, #0x1                   	// #1
   2acb4:	nop
   2acb8:	add	x0, x0, #0x1
   2acbc:	ldrsb	w1, [x27, x0]
   2acc0:	tbnz	w1, #31, 2acb8 <__sanitizer_set_death_callback@@Base+0x3eb0>
   2acc4:	ldrsb	w1, [x2, x0]
   2acc8:	add	x0, x2, x0
   2accc:	tbz	w1, #31, 2aee4 <__sanitizer_set_death_callback@@Base+0x40dc>
   2acd0:	sub	x2, x0, #0x1
   2acd4:	mov	x27, #0x1                   	// #1
   2acd8:	add	x27, x27, #0x1
   2acdc:	ldrsb	w1, [x2, x27]
   2ace0:	tbnz	w1, #31, 2acd8 <__sanitizer_set_death_callback@@Base+0x3ed0>
   2ace4:	ldrsb	w1, [x0, x27]
   2ace8:	add	x0, x0, x27
   2acec:	tbz	w1, #31, 2aedc <__sanitizer_set_death_callback@@Base+0x40d4>
   2acf0:	sub	x2, x0, #0x1
   2acf4:	mov	x27, #0x1                   	// #1
   2acf8:	add	x27, x27, #0x1
   2acfc:	ldrsb	w1, [x2, x27]
   2ad00:	tbnz	w1, #31, 2acf8 <__sanitizer_set_death_callback@@Base+0x3ef0>
   2ad04:	ldr	x1, [sp, #320]
   2ad08:	add	x27, x0, x27
   2ad0c:	cmp	x19, x27
   2ad10:	add	x1, x1, #0x1
   2ad14:	str	x1, [sp, #320]
   2ad18:	b.hi	2ac88 <__sanitizer_set_death_callback@@Base+0x3e80>  // b.pmore
   2ad1c:	ldp	x2, x3, [sp, #376]
   2ad20:	lsl	x1, x1, #3
   2ad24:	mov	x0, x20
   2ad28:	bl	68c0 <__asan_backtrace_alloc@plt>
   2ad2c:	str	x0, [sp, #328]
   2ad30:	cbz	x0, 2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2ad34:	ldr	x0, [sp, #416]
   2ad38:	mov	x1, #0x0                   	// #0
   2ad3c:	ldrb	w0, [x0]
   2ad40:	cbz	w0, 2af20 <__sanitizer_set_death_callback@@Base+0x4118>
   2ad44:	mov	x27, x1
   2ad48:	stp	x24, x23, [sp, #168]
   2ad4c:	stp	x21, x22, [sp, #184]
   2ad50:	ldr	x19, [sp, #152]
   2ad54:	b	2adfc <__sanitizer_set_death_callback@@Base+0x3ff4>
   2ad58:	cbz	x0, 2ae34 <__sanitizer_set_death_callback@@Base+0x402c>
   2ad5c:	ldr	x1, [sp, #304]
   2ad60:	sub	x2, x0, #0x1
   2ad64:	cmp	x2, x1
   2ad68:	b.cs	2b544 <__sanitizer_set_death_callback@@Base+0x473c>  // b.hs, b.nlast
   2ad6c:	ldr	x1, [sp, #312]
   2ad70:	add	x0, x1, x0, lsl #3
   2ad74:	ldur	x23, [x0, #-8]
   2ad78:	mov	x0, x23
   2ad7c:	bl	67e0 <__asan_internal_strlen@plt>
   2ad80:	mov	x24, x0
   2ad84:	mov	x0, x22
   2ad88:	bl	67e0 <__asan_internal_strlen@plt>
   2ad8c:	ldp	x2, x3, [sp, #376]
   2ad90:	mov	x28, x0
   2ad94:	add	x1, x24, x28
   2ad98:	mov	x0, x20
   2ad9c:	add	x1, x1, #0x2
   2ada0:	bl	68c0 <__asan_backtrace_alloc@plt>
   2ada4:	mov	x21, x0
   2ada8:	cbz	x0, 2aef4 <__sanitizer_set_death_callback@@Base+0x40ec>
   2adac:	mov	x1, x23
   2adb0:	mov	x2, x24
   2adb4:	bl	67d0 <__asan_internal_memcpy@plt>
   2adb8:	mov	w3, #0x2f                  	// #47
   2adbc:	strb	w3, [x21, x24]
   2adc0:	add	x0, x24, #0x1
   2adc4:	add	x2, x28, #0x1
   2adc8:	add	x0, x21, x0
   2adcc:	mov	x1, x22
   2add0:	bl	67d0 <__asan_internal_memcpy@plt>
   2add4:	ldr	x0, [sp, #328]
   2add8:	str	x21, [x0, x27]
   2addc:	mov	x0, x19
   2ade0:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2ade4:	mov	x0, x19
   2ade8:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2adec:	ldr	x0, [sp, #416]
   2adf0:	add	x27, x27, #0x8
   2adf4:	ldrb	w0, [x0]
   2adf8:	cbz	w0, 2af18 <__sanitizer_set_death_callback@@Base+0x4110>
   2adfc:	ldr	w0, [sp, #456]
   2ae00:	cbnz	w0, 2aef4 <__sanitizer_set_death_callback@@Base+0x40ec>
   2ae04:	mov	x0, x19
   2ae08:	bl	29178 <__sanitizer_set_death_callback@@Base+0x2370>
   2ae0c:	mov	x22, x0
   2ae10:	cbz	x0, 2aef4 <__sanitizer_set_death_callback@@Base+0x40ec>
   2ae14:	mov	x0, x19
   2ae18:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2ae1c:	ldrb	w1, [x22]
   2ae20:	cmp	w1, #0x2f
   2ae24:	b.ne	2ad58 <__sanitizer_set_death_callback@@Base+0x3f50>  // b.any
   2ae28:	ldr	x0, [sp, #328]
   2ae2c:	str	x22, [x0, x27]
   2ae30:	b	2addc <__sanitizer_set_death_callback@@Base+0x3fd4>
   2ae34:	ldr	x0, [sp, #160]
   2ae38:	ldr	x23, [x0, #72]
   2ae3c:	cbnz	x23, 2ad78 <__sanitizer_set_death_callback@@Base+0x3f70>
   2ae40:	b	2ae28 <__sanitizer_set_death_callback@@Base+0x4020>
   2ae44:	ldr	x2, [sp, #352]
   2ae48:	sub	x1, x1, x0
   2ae4c:	add	x0, x2, x0
   2ae50:	stp	x0, x1, [sp, #352]
   2ae54:	b	2ab20 <__sanitizer_set_death_callback@@Base+0x3d18>
   2ae58:	ldr	x0, [sp, #152]
   2ae5c:	bl	28f00 <__sanitizer_set_death_callback@@Base+0x20f8>
   2ae60:	and	w0, w0, #0xff
   2ae64:	str	w0, [sp, #280]
   2ae68:	b	2ab48 <__sanitizer_set_death_callback@@Base+0x3d40>
   2ae6c:	bl	28e38 <__sanitizer_set_death_callback@@Base+0x2030>
   2ae70:	mov	x1, x0
   2ae74:	mov	x0, x25
   2ae78:	str	x1, [sp, #360]
   2ae7c:	bl	28e98 <__sanitizer_set_death_callback@@Base+0x2090>
   2ae80:	and	w0, w0, #0xffff
   2ae84:	str	w0, [sp, #272]
   2ae88:	sub	w0, w0, #0x2
   2ae8c:	cmp	w0, #0x2
   2ae90:	b.hi	2aa5c <__sanitizer_set_death_callback@@Base+0x3c54>  // b.pmore
   2ae94:	mov	x0, x25
   2ae98:	bl	28e38 <__sanitizer_set_death_callback@@Base+0x2030>
   2ae9c:	b	2aae4 <__sanitizer_set_death_callback@@Base+0x3cdc>
   2aea0:	sub	x0, x0, #0x1
   2aea4:	add	x1, x19, #0x1
   2aea8:	stp	x1, x0, [sp, #416]
   2aeac:	b	2ab68 <__sanitizer_set_death_callback@@Base+0x3d60>
   2aeb0:	add	x19, x19, x1
   2aeb4:	sub	x0, x0, x1
   2aeb8:	stp	x19, x0, [sp, #416]
   2aebc:	b	2abc4 <__sanitizer_set_death_callback@@Base+0x3dbc>
   2aec0:	ldp	x2, x3, [sp, #376]
   2aec4:	lsl	x1, x1, #3
   2aec8:	mov	x0, x20
   2aecc:	bl	68c0 <__asan_backtrace_alloc@plt>
   2aed0:	str	x0, [sp, #312]
   2aed4:	cbnz	x0, 2ac14 <__sanitizer_set_death_callback@@Base+0x3e0c>
   2aed8:	b	2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2aedc:	mov	x27, #0x1                   	// #1
   2aee0:	b	2ad04 <__sanitizer_set_death_callback@@Base+0x3efc>
   2aee4:	mov	x27, #0x1                   	// #1
   2aee8:	b	2ace4 <__sanitizer_set_death_callback@@Base+0x3edc>
   2aeec:	mov	x0, #0x1                   	// #1
   2aef0:	b	2acc4 <__sanitizer_set_death_callback@@Base+0x3ebc>
   2aef4:	ldp	x24, x23, [sp, #168]
   2aef8:	ldp	x21, x22, [sp, #184]
   2aefc:	b	2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2af00:	ldr	x1, [sp, #320]
   2af04:	b	2ad1c <__sanitizer_set_death_callback@@Base+0x3f14>
   2af08:	add	x27, x0, #0x1
   2af0c:	sub	x19, x19, #0x1
   2af10:	stp	x27, x19, [sp, #416]
   2af14:	b	2ac74 <__sanitizer_set_death_callback@@Base+0x3e6c>
   2af18:	ldp	x24, x23, [sp, #168]
   2af1c:	ldp	x21, x22, [sp, #184]
   2af20:	ldr	w0, [sp, #456]
   2af24:	cbnz	w0, 2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2af28:	ldr	x0, [sp, #320]
   2af2c:	cbz	x0, 2b4ec <__sanitizer_set_death_callback@@Base+0x46e4>
   2af30:	ldr	x0, [sp, #328]
   2af34:	ldr	x0, [x0]
   2af38:	str	x0, [sp, #168]
   2af3c:	ldr	x0, [sp, #360]
   2af40:	cbz	x0, 2afe0 <__sanitizer_set_death_callback@@Base+0x41d8>
   2af44:	ldr	x1, [sp, #168]
   2af48:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2af4c:	add	x0, x0, #0x5c8
   2af50:	stp	x23, x21, [sp, #192]
   2af54:	mov	w2, #0x1                   	// #1
   2af58:	str	x0, [sp, #224]
   2af5c:	add	x0, x23, #0x10
   2af60:	ldr	x23, [sp, #144]
   2af64:	mov	w21, w2
   2af68:	stp	x24, x26, [sp, #176]
   2af6c:	mov	x24, x0
   2af70:	mov	x27, #0x0                   	// #0
   2af74:	str	x22, [sp, #208]
   2af78:	mov	x22, x1
   2af7c:	mov	w19, #0x0                   	// #0
   2af80:	mov	x0, x25
   2af84:	bl	28f00 <__sanitizer_set_death_callback@@Base+0x20f8>
   2af88:	ldr	w2, [sp, #292]
   2af8c:	and	w1, w0, #0xff
   2af90:	cmp	w2, w0, uxtb
   2af94:	b.ls	2b1b4 <__sanitizer_set_death_callback@@Base+0x43ac>  // b.plast
   2af98:	cbz	w1, 2b214 <__sanitizer_set_death_callback@@Base+0x440c>
   2af9c:	cmp	w1, #0x5
   2afa0:	b.eq	2b15c <__sanitizer_set_death_callback@@Base+0x4354>  // b.none
   2afa4:	b.hi	2b140 <__sanitizer_set_death_callback@@Base+0x4338>  // b.pmore
   2afa8:	cmp	w1, #0x3
   2afac:	b.eq	2b388 <__sanitizer_set_death_callback@@Base+0x4580>  // b.none
   2afb0:	cmp	w1, #0x4
   2afb4:	b.ne	2b100 <__sanitizer_set_death_callback@@Base+0x42f8>  // b.any
   2afb8:	mov	x0, x25
   2afbc:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2afc0:	cbnz	x0, 2b48c <__sanitizer_set_death_callback@@Base+0x4684>
   2afc4:	ldr	x22, [sp, #224]
   2afc8:	ldr	x1, [sp, #360]
   2afcc:	nop
   2afd0:	cbnz	x1, 2af80 <__sanitizer_set_death_callback@@Base+0x4178>
   2afd4:	ldp	x24, x26, [sp, #176]
   2afd8:	ldp	x23, x21, [sp, #192]
   2afdc:	ldr	x22, [sp, #208]
   2afe0:	ldr	w0, [sp, #392]
   2afe4:	cbnz	w0, 2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2afe8:	ldr	x0, [sp, #264]
   2afec:	cbz	x0, 2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2aff0:	ldr	x19, [sp, #128]
   2aff4:	mov	x3, x22
   2aff8:	ldr	x27, [sp, #144]
   2affc:	mov	x0, x20
   2b000:	mov	x2, x19
   2b004:	mov	x1, #0x18                  	// #24
   2b008:	mov	x4, x27
   2b00c:	bl	6840 <__asan_backtrace_vector_grow@plt>
   2b010:	cbz	x0, 2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2b014:	mov	x1, #0xffffffffffffffff    	// #-1
   2b018:	stp	x1, xzr, [x0]
   2b01c:	mov	x3, x22
   2b020:	str	xzr, [x0, #16]
   2b024:	mov	x2, x19
   2b028:	mov	x1, x27
   2b02c:	mov	x0, x20
   2b030:	bl	6910 <__asan_backtrace_vector_release@plt>
   2b034:	cbz	w0, 2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2b038:	ldr	x0, [sp, #240]
   2b03c:	adrp	x3, 28000 <__sanitizer_set_death_callback@@Base+0x11f8>
   2b040:	ldr	x1, [sp, #264]
   2b044:	add	x3, x3, #0x948
   2b048:	mov	x2, #0x18                  	// #24
   2b04c:	str	x0, [sp, #144]
   2b050:	bl	66b0 <__asan_backtrace_qsort@plt>
   2b054:	ldr	w0, [x20, #8]
   2b058:	ldr	x28, [sp, #264]
   2b05c:	cbz	w0, 2b47c <__sanitizer_set_death_callback@@Base+0x4674>
   2b060:	mov	x0, x25
   2b064:	mov	x19, x25
   2b068:	mov	x2, #0x20                  	// #32
   2b06c:	mov	w1, #0x0                   	// #0
   2b070:	str	xzr, [sp, #176]
   2b074:	ldr	x27, [x24, #16]
   2b078:	bl	6860 <__asan_internal_memset@plt>
   2b07c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2b080:	add	x1, x1, #0x258
   2b084:	ldr	x3, [x23, #56]
   2b088:	stp	x24, x21, [sp, #160]
   2b08c:	mov	x24, x22
   2b090:	ldp	x2, x0, [x27]
   2b094:	stp	x1, x3, [sp, #400]
   2b098:	ldr	w1, [x23, #120]
   2b09c:	str	w1, [sp, #432]
   2b0a0:	ldr	x1, [sp, #128]
   2b0a4:	str	x22, [sp, #448]
   2b0a8:	mov	x22, x19
   2b0ac:	str	x25, [sp, #184]
   2b0b0:	ldr	x19, [sp, #136]
   2b0b4:	mov	x25, x1
   2b0b8:	ldr	x21, [sp, #152]
   2b0bc:	stp	x2, x0, [sp, #416]
   2b0c0:	str	x1, [sp, #440]
   2b0c4:	str	wzr, [sp, #456]
   2b0c8:	cbz	x0, 2b3f0 <__sanitizer_set_death_callback@@Base+0x45e8>
   2b0cc:	stp	x22, x22, [sp]
   2b0d0:	mov	x7, x24
   2b0d4:	mov	x6, x25
   2b0d8:	mov	x5, x19
   2b0dc:	mov	x4, x21
   2b0e0:	mov	x2, x27
   2b0e4:	mov	x1, x23
   2b0e8:	mov	x0, x20
   2b0ec:	mov	x3, #0x0                   	// #0
   2b0f0:	bl	29e68 <__sanitizer_set_death_callback@@Base+0x3060>
   2b0f4:	cbz	w0, 2b468 <__sanitizer_set_death_callback@@Base+0x4660>
   2b0f8:	ldr	x0, [sp, #424]
   2b0fc:	b	2b0c8 <__sanitizer_set_death_callback@@Base+0x42c0>
   2b100:	cmp	w1, #0x1
   2b104:	b.eq	2b3c8 <__sanitizer_set_death_callback@@Base+0x45c0>  // b.none
   2b108:	cmp	w1, #0x2
   2b10c:	b.ne	2b39c <__sanitizer_set_death_callback@@Base+0x4594>  // b.any
   2b110:	mov	x0, x25
   2b114:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2b118:	ldr	w2, [sp, #276]
   2b11c:	add	x19, x0, w19, uxtw
   2b120:	ldr	w3, [sp, #280]
   2b124:	ldr	x1, [sp, #360]
   2b128:	mul	x0, x2, x19
   2b12c:	udiv	x2, x19, x3
   2b130:	udiv	x0, x0, x3
   2b134:	msub	w19, w2, w3, w19
   2b138:	add	x27, x27, x0
   2b13c:	b	2afd0 <__sanitizer_set_death_callback@@Base+0x41c8>
   2b140:	cmp	w1, #0x9
   2b144:	b.eq	2b370 <__sanitizer_set_death_callback@@Base+0x4568>  // b.none
   2b148:	b.ls	2b16c <__sanitizer_set_death_callback@@Base+0x4364>  // b.plast
   2b14c:	cmp	w1, #0xb
   2b150:	b.ls	2b288 <__sanitizer_set_death_callback@@Base+0x4480>  // b.plast
   2b154:	cmp	w1, #0xc
   2b158:	b.ne	2b39c <__sanitizer_set_death_callback@@Base+0x4594>  // b.any
   2b15c:	mov	x0, x25
   2b160:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2b164:	ldr	x1, [sp, #360]
   2b168:	b	2afd0 <__sanitizer_set_death_callback@@Base+0x41c8>
   2b16c:	cmp	w1, #0x7
   2b170:	b.ls	2b288 <__sanitizer_set_death_callback@@Base+0x4480>  // b.plast
   2b174:	cmp	w1, #0x8
   2b178:	b.ne	2b39c <__sanitizer_set_death_callback@@Base+0x4594>  // b.any
   2b17c:	ldr	w0, [sp, #288]
   2b180:	mov	w1, #0xff                  	// #255
   2b184:	sub	w2, w1, w2
   2b188:	ldr	w3, [sp, #276]
   2b18c:	ldr	w4, [sp, #280]
   2b190:	ldr	x1, [sp, #360]
   2b194:	udiv	w0, w2, w0
   2b198:	add	w19, w0, w19
   2b19c:	udiv	w2, w19, w4
   2b1a0:	mul	w0, w19, w3
   2b1a4:	udiv	w0, w0, w4
   2b1a8:	msub	w19, w2, w4, w19
   2b1ac:	add	x27, x27, x0
   2b1b0:	b	2afd0 <__sanitizer_set_death_callback@@Base+0x41c8>
   2b1b4:	add	x4, sp, #0x11c
   2b1b8:	sub	w2, w1, w2
   2b1bc:	mov	x7, x23
   2b1c0:	mov	x1, x24
   2b1c4:	mov	x3, x22
   2b1c8:	mov	x0, x20
   2b1cc:	ldp	w10, w6, [x4]
   2b1d0:	ldp	w8, w9, [x4, #-8]
   2b1d4:	udiv	w4, w2, w6
   2b1d8:	add	w19, w4, w19
   2b1dc:	msub	w2, w4, w6, w2
   2b1e0:	ldp	x5, x6, [sp, #376]
   2b1e4:	add	w2, w2, w10
   2b1e8:	mul	w8, w19, w8
   2b1ec:	add	w21, w21, w2
   2b1f0:	udiv	w10, w19, w9
   2b1f4:	mov	w4, w21
   2b1f8:	udiv	w2, w8, w9
   2b1fc:	msub	w19, w10, w9, w19
   2b200:	add	x27, x27, x2
   2b204:	mov	x2, x27
   2b208:	bl	28be0 <__sanitizer_set_death_callback@@Base+0x1dd8>
   2b20c:	ldr	x1, [sp, #360]
   2b210:	b	2afd0 <__sanitizer_set_death_callback@@Base+0x41c8>
   2b214:	mov	x0, x25
   2b218:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2b21c:	mov	x26, x0
   2b220:	mov	x0, x25
   2b224:	bl	28f00 <__sanitizer_set_death_callback@@Base+0x20f8>
   2b228:	and	w0, w0, #0xff
   2b22c:	cmp	w0, #0x3
   2b230:	b.eq	2b2b8 <__sanitizer_set_death_callback@@Base+0x44b0>  // b.none
   2b234:	b.hi	2b264 <__sanitizer_set_death_callback@@Base+0x445c>  // b.pmore
   2b238:	cmp	w0, #0x1
   2b23c:	b.eq	2b2a0 <__sanitizer_set_death_callback@@Base+0x4498>  // b.none
   2b240:	cmp	w0, #0x2
   2b244:	b.ne	2b26c <__sanitizer_set_death_callback@@Base+0x4464>  // b.any
   2b248:	ldr	x0, [sp, #160]
   2b24c:	ldr	w1, [x0, #48]
   2b250:	mov	x0, x25
   2b254:	bl	28f50 <__sanitizer_set_death_callback@@Base+0x2148>
   2b258:	mov	x27, x0
   2b25c:	ldr	x1, [sp, #360]
   2b260:	b	2afd0 <__sanitizer_set_death_callback@@Base+0x41c8>
   2b264:	cmp	w0, #0x4
   2b268:	b.eq	2b15c <__sanitizer_set_death_callback@@Base+0x4354>  // b.none
   2b26c:	ldr	x1, [sp, #360]
   2b270:	sub	x26, x26, #0x1
   2b274:	cmp	x26, x1
   2b278:	b.ls	2b4b0 <__sanitizer_set_death_callback@@Base+0x46a8>  // b.plast
   2b27c:	mov	x0, x25
   2b280:	bl	28d90 <__sanitizer_set_death_callback@@Base+0x1f88>
   2b284:	cbz	w0, 2b290 <__sanitizer_set_death_callback@@Base+0x4488>
   2b288:	ldr	x1, [sp, #360]
   2b28c:	b	2afd0 <__sanitizer_set_death_callback@@Base+0x41c8>
   2b290:	ldp	x24, x26, [sp, #176]
   2b294:	ldp	x23, x21, [sp, #192]
   2b298:	ldr	x22, [sp, #208]
   2b29c:	b	2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2b2a0:	mov	w21, w0
   2b2a4:	mov	w19, #0x0                   	// #0
   2b2a8:	mov	x27, #0x0                   	// #0
   2b2ac:	ldr	x22, [sp, #168]
   2b2b0:	ldr	x1, [sp, #360]
   2b2b4:	b	2afd0 <__sanitizer_set_death_callback@@Base+0x41c8>
   2b2b8:	mov	x0, x25
   2b2bc:	bl	29178 <__sanitizer_set_death_callback@@Base+0x2370>
   2b2c0:	mov	x28, x0
   2b2c4:	cbz	x0, 2b290 <__sanitizer_set_death_callback@@Base+0x4488>
   2b2c8:	mov	x0, x25
   2b2cc:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2b2d0:	mov	x22, x0
   2b2d4:	mov	x0, x25
   2b2d8:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2b2dc:	mov	x0, x25
   2b2e0:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2b2e4:	ldrb	w0, [x28]
   2b2e8:	cmp	w0, #0x2f
   2b2ec:	b.eq	2b4c4 <__sanitizer_set_death_callback@@Base+0x46bc>  // b.none
   2b2f0:	cbnz	w22, 2b4d0 <__sanitizer_set_death_callback@@Base+0x46c8>
   2b2f4:	ldr	x0, [sp, #160]
   2b2f8:	ldr	x5, [x0, #72]
   2b2fc:	mov	x0, x5
   2b300:	str	x5, [sp, #232]
   2b304:	bl	67e0 <__asan_internal_strlen@plt>
   2b308:	mov	x26, x0
   2b30c:	mov	x0, x28
   2b310:	bl	67e0 <__asan_internal_strlen@plt>
   2b314:	mov	x1, x0
   2b318:	ldp	x2, x3, [sp, #376]
   2b31c:	str	x1, [sp, #216]
   2b320:	add	x1, x26, x1
   2b324:	mov	x0, x20
   2b328:	add	x1, x1, #0x2
   2b32c:	bl	68c0 <__asan_backtrace_alloc@plt>
   2b330:	mov	x22, x0
   2b334:	cbz	x0, 2b290 <__sanitizer_set_death_callback@@Base+0x4488>
   2b338:	ldr	x5, [sp, #232]
   2b33c:	mov	x2, x26
   2b340:	mov	x1, x5
   2b344:	bl	67d0 <__asan_internal_memcpy@plt>
   2b348:	ldr	x1, [sp, #216]
   2b34c:	mov	w0, #0x2f                  	// #47
   2b350:	strb	w0, [x22, x26]
   2b354:	add	x0, x26, #0x1
   2b358:	add	x2, x1, #0x1
   2b35c:	add	x0, x22, x0
   2b360:	mov	x1, x28
   2b364:	bl	67d0 <__asan_internal_memcpy@plt>
   2b368:	ldr	x1, [sp, #360]
   2b36c:	b	2afd0 <__sanitizer_set_death_callback@@Base+0x41c8>
   2b370:	mov	x0, x25
   2b374:	bl	28e98 <__sanitizer_set_death_callback@@Base+0x2090>
   2b378:	mov	w19, #0x0                   	// #0
   2b37c:	add	x27, x27, w0, uxth
   2b380:	ldr	x1, [sp, #360]
   2b384:	b	2afd0 <__sanitizer_set_death_callback@@Base+0x41c8>
   2b388:	mov	x0, x25
   2b38c:	bl	290a0 <__sanitizer_set_death_callback@@Base+0x2298>
   2b390:	add	w21, w21, w0
   2b394:	ldr	x1, [sp, #360]
   2b398:	b	2afd0 <__sanitizer_set_death_callback@@Base+0x41c8>
   2b39c:	ldr	x0, [sp, #296]
   2b3a0:	sub	w1, w1, #0x1
   2b3a4:	ldrb	w26, [x0, w1, uxtw]
   2b3a8:	cbz	w26, 2b288 <__sanitizer_set_death_callback@@Base+0x4480>
   2b3ac:	nop
   2b3b0:	mov	x0, x25
   2b3b4:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2b3b8:	subs	w26, w26, #0x1
   2b3bc:	b.ne	2b3b0 <__sanitizer_set_death_callback@@Base+0x45a8>  // b.any
   2b3c0:	ldr	x1, [sp, #360]
   2b3c4:	b	2afd0 <__sanitizer_set_death_callback@@Base+0x41c8>
   2b3c8:	ldp	x5, x6, [sp, #376]
   2b3cc:	mov	x1, x24
   2b3d0:	mov	x7, x23
   2b3d4:	mov	w4, w21
   2b3d8:	mov	x3, x22
   2b3dc:	mov	x2, x27
   2b3e0:	mov	x0, x20
   2b3e4:	bl	28be0 <__sanitizer_set_death_callback@@Base+0x1dd8>
   2b3e8:	ldr	x1, [sp, #360]
   2b3ec:	b	2afd0 <__sanitizer_set_death_callback@@Base+0x41c8>
   2b3f0:	mov	x19, x22
   2b3f4:	mov	x22, x24
   2b3f8:	ldp	x24, x21, [sp, #160]
   2b3fc:	ldr	x27, [x19, #24]
   2b400:	ldr	x25, [sp, #184]
   2b404:	cbz	x27, 2b470 <__sanitizer_set_death_callback@@Base+0x4668>
   2b408:	ldr	x0, [sp, #176]
   2b40c:	cbz	x0, 2b4fc <__sanitizer_set_death_callback@@Base+0x46f4>
   2b410:	ldr	x2, [sp, #128]
   2b414:	mov	x3, x22
   2b418:	ldr	x19, [sp, #176]
   2b41c:	mov	x0, x20
   2b420:	mov	x1, x19
   2b424:	bl	6c80 <__asan_backtrace_vector_finish@plt>
   2b428:	mov	x25, x0
   2b42c:	cbz	x0, 2b470 <__sanitizer_set_death_callback@@Base+0x4668>
   2b430:	str	xzr, [x19, #24]
   2b434:	adrp	x3, 2b000 <__sanitizer_set_death_callback@@Base+0x41f8>
   2b438:	mov	x1, x27
   2b43c:	add	x3, x3, #0x6a0
   2b440:	mov	x0, x25
   2b444:	mov	x2, #0x18                  	// #24
   2b448:	bl	66b0 <__asan_backtrace_qsort@plt>
   2b44c:	ldp	x2, x1, [sp, #128]
   2b450:	mov	x3, x22
   2b454:	mov	x0, x20
   2b458:	bl	28880 <__sanitizer_set_death_callback@@Base+0x1a78>
   2b45c:	mov	w1, #0x1                   	// #1
   2b460:	ldr	x19, [sp, #144]
   2b464:	b	2a8fc <__sanitizer_set_death_callback@@Base+0x3af4>
   2b468:	mov	x22, x24
   2b46c:	ldp	x24, x21, [sp, #160]
   2b470:	mov	x25, #0x0                   	// #0
   2b474:	mov	x27, #0x0                   	// #0
   2b478:	b	2b44c <__sanitizer_set_death_callback@@Base+0x4644>
   2b47c:	add	x19, x23, #0x80
   2b480:	str	x19, [sp, #176]
   2b484:	ldr	x27, [x24, #16]
   2b488:	b	2b07c <__sanitizer_set_death_callback@@Base+0x4274>
   2b48c:	ldr	x1, [sp, #320]
   2b490:	sub	x2, x0, #0x1
   2b494:	cmp	x2, x1
   2b498:	b.cs	2b524 <__sanitizer_set_death_callback@@Base+0x471c>  // b.hs, b.nlast
   2b49c:	ldr	x2, [sp, #328]
   2b4a0:	ldr	x1, [sp, #360]
   2b4a4:	add	x0, x2, x0, lsl #3
   2b4a8:	ldur	x22, [x0, #-8]
   2b4ac:	b	2afd0 <__sanitizer_set_death_callback@@Base+0x41c8>
   2b4b0:	ldr	x0, [sp, #352]
   2b4b4:	sub	x1, x1, x26
   2b4b8:	add	x26, x0, x26
   2b4bc:	stp	x26, x1, [sp, #352]
   2b4c0:	b	2afd0 <__sanitizer_set_death_callback@@Base+0x41c8>
   2b4c4:	mov	x22, x28
   2b4c8:	ldr	x1, [sp, #360]
   2b4cc:	b	2afd0 <__sanitizer_set_death_callback@@Base+0x41c8>
   2b4d0:	ldr	x0, [sp, #304]
   2b4d4:	sub	w22, w22, #0x1
   2b4d8:	cmp	x22, x0
   2b4dc:	b.cs	2b560 <__sanitizer_set_death_callback@@Base+0x4758>  // b.hs, b.nlast
   2b4e0:	ldr	x0, [sp, #312]
   2b4e4:	ldr	x5, [x0, x22, lsl #3]
   2b4e8:	b	2b2fc <__sanitizer_set_death_callback@@Base+0x44f4>
   2b4ec:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   2b4f0:	add	x0, x0, #0x5c8
   2b4f4:	str	x0, [sp, #168]
   2b4f8:	b	2af3c <__sanitizer_set_death_callback@@Base+0x4134>
   2b4fc:	ldr	x2, [sp, #128]
   2b500:	mov	x1, x25
   2b504:	mov	x3, x22
   2b508:	mov	x0, x20
   2b50c:	bl	6910 <__asan_backtrace_vector_release@plt>
   2b510:	cbz	w0, 2b470 <__sanitizer_set_death_callback@@Base+0x4668>
   2b514:	ldr	x25, [x19]
   2b518:	b	2b434 <__sanitizer_set_death_callback@@Base+0x462c>
   2b51c:	str	xzr, [sp, #312]
   2b520:	b	2ac14 <__sanitizer_set_death_callback@@Base+0x3e0c>
   2b524:	mov	x0, x25
   2b528:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2b52c:	add	x1, x1, #0x3b0
   2b530:	ldp	x24, x26, [sp, #176]
   2b534:	ldp	x23, x21, [sp, #192]
   2b538:	ldr	x22, [sp, #208]
   2b53c:	bl	28828 <__sanitizer_set_death_callback@@Base+0x1a20>
   2b540:	b	2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2b544:	mov	x0, x25
   2b548:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2b54c:	add	x1, x1, #0x348
   2b550:	ldp	x24, x23, [sp, #168]
   2b554:	ldp	x21, x22, [sp, #184]
   2b558:	bl	28828 <__sanitizer_set_death_callback@@Base+0x1a20>
   2b55c:	b	2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2b560:	mov	x0, x25
   2b564:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2b568:	add	x1, x1, #0x380
   2b56c:	ldp	x24, x26, [sp, #176]
   2b570:	ldp	x23, x21, [sp, #192]
   2b574:	ldr	x22, [sp, #208]
   2b578:	bl	28828 <__sanitizer_set_death_callback@@Base+0x1a20>
   2b57c:	b	2a8b0 <__sanitizer_set_death_callback@@Base+0x3aa8>
   2b580:	stp	x29, x30, [sp, #-96]!
   2b584:	mov	x29, sp
   2b588:	stp	x23, x24, [sp, #48]
   2b58c:	mov	x24, x0
   2b590:	ldr	w0, [x0, #8]
   2b594:	stp	x19, x20, [sp, #16]
   2b598:	mov	x23, x3
   2b59c:	mov	x20, x2
   2b5a0:	stp	x21, x22, [sp, #32]
   2b5a4:	mov	x22, x1
   2b5a8:	mov	x21, x4
   2b5ac:	cbnz	w0, 2b610 <__sanitizer_set_death_callback@@Base+0x4808>
   2b5b0:	ldr	x19, [x24, #32]
   2b5b4:	cbz	x19, 2b658 <__sanitizer_set_death_callback@@Base+0x4850>
   2b5b8:	str	x25, [sp, #64]
   2b5bc:	add	x25, sp, #0x5c
   2b5c0:	b	2b5d4 <__sanitizer_set_death_callback@@Base+0x47cc>
   2b5c4:	ldr	w0, [sp, #92]
   2b5c8:	cbnz	w0, 2b684 <__sanitizer_set_death_callback@@Base+0x487c>
   2b5cc:	ldr	x19, [x19]
   2b5d0:	cbz	x19, 2b654 <__sanitizer_set_death_callback@@Base+0x484c>
   2b5d4:	mov	x6, x25
   2b5d8:	mov	x5, x21
   2b5dc:	mov	x4, x23
   2b5e0:	mov	x3, x20
   2b5e4:	mov	x2, x22
   2b5e8:	mov	x1, x19
   2b5ec:	mov	x0, x24
   2b5f0:	bl	2a4f8 <__sanitizer_set_death_callback@@Base+0x36f0>
   2b5f4:	cbz	w0, 2b5c4 <__sanitizer_set_death_callback@@Base+0x47bc>
   2b5f8:	ldp	x19, x20, [sp, #16]
   2b5fc:	ldp	x21, x22, [sp, #32]
   2b600:	ldp	x23, x24, [sp, #48]
   2b604:	ldr	x25, [sp, #64]
   2b608:	ldp	x29, x30, [sp], #96
   2b60c:	ret
   2b610:	add	x19, x24, #0x20
   2b614:	str	x25, [sp, #64]
   2b618:	add	x25, sp, #0x5c
   2b61c:	b	2b630 <__sanitizer_set_death_callback@@Base+0x4828>
   2b620:	bl	2a4f8 <__sanitizer_set_death_callback@@Base+0x36f0>
   2b624:	cbnz	w0, 2b5f8 <__sanitizer_set_death_callback@@Base+0x47f0>
   2b628:	ldr	w0, [sp, #92]
   2b62c:	cbnz	w0, 2b684 <__sanitizer_set_death_callback@@Base+0x487c>
   2b630:	ldar	x19, [x19]
   2b634:	mov	x6, x25
   2b638:	mov	x5, x21
   2b63c:	mov	x4, x23
   2b640:	mov	x3, x20
   2b644:	mov	x2, x22
   2b648:	mov	x1, x19
   2b64c:	mov	x0, x24
   2b650:	cbnz	x19, 2b620 <__sanitizer_set_death_callback@@Base+0x4818>
   2b654:	ldr	x25, [sp, #64]
   2b658:	mov	x1, x22
   2b65c:	mov	x0, x21
   2b660:	mov	x4, #0x0                   	// #0
   2b664:	mov	w3, #0x0                   	// #0
   2b668:	mov	x2, #0x0                   	// #0
   2b66c:	blr	x20
   2b670:	ldp	x19, x20, [sp, #16]
   2b674:	ldp	x21, x22, [sp, #32]
   2b678:	ldp	x23, x24, [sp, #48]
   2b67c:	ldp	x29, x30, [sp], #96
   2b680:	ret
   2b684:	mov	w0, #0x0                   	// #0
   2b688:	ldp	x19, x20, [sp, #16]
   2b68c:	ldp	x21, x22, [sp, #32]
   2b690:	ldp	x23, x24, [sp, #48]
   2b694:	ldr	x25, [sp, #64]
   2b698:	ldp	x29, x30, [sp], #96
   2b69c:	ret
   2b6a0:	ldr	x3, [x0]
   2b6a4:	ldr	x2, [x1]
   2b6a8:	cmp	x3, x2
   2b6ac:	b.cc	2b6e4 <__sanitizer_set_death_callback@@Base+0x48dc>  // b.lo, b.ul, b.last
   2b6b0:	b.hi	2b6dc <__sanitizer_set_death_callback@@Base+0x48d4>  // b.pmore
   2b6b4:	ldr	x3, [x0, #8]
   2b6b8:	ldr	x2, [x1, #8]
   2b6bc:	cmp	x3, x2
   2b6c0:	b.cc	2b6dc <__sanitizer_set_death_callback@@Base+0x48d4>  // b.lo, b.ul, b.last
   2b6c4:	b.hi	2b6e4 <__sanitizer_set_death_callback@@Base+0x48dc>  // b.pmore
   2b6c8:	ldr	x0, [x0, #16]
   2b6cc:	ldr	x1, [x1, #16]
   2b6d0:	ldr	x0, [x0]
   2b6d4:	ldr	x1, [x1]
   2b6d8:	b	6b30 <__asan_internal_strcmp@plt>
   2b6dc:	mov	w0, #0x1                   	// #1
   2b6e0:	ret
   2b6e4:	mov	w0, #0xffffffff            	// #-1
   2b6e8:	ret
   2b6ec:	nop
   2b6f0:	stp	x29, x30, [sp, #-64]!
   2b6f4:	mov	x29, sp
   2b6f8:	stp	x19, x20, [sp, #16]
   2b6fc:	mov	x20, x2
   2b700:	ldr	x2, [x1]
   2b704:	stp	x21, x22, [sp, #32]
   2b708:	mov	x21, x1
   2b70c:	stp	x23, x24, [sp, #48]
   2b710:	mov	x22, x0
   2b714:	mov	x23, x3
   2b718:	mov	x24, x4
   2b71c:	cbz	x2, 2b75c <__sanitizer_set_death_callback@@Base+0x4954>
   2b720:	mov	x19, #0x0                   	// #0
   2b724:	nop
   2b728:	ldr	x5, [x20]
   2b72c:	mov	x4, x24
   2b730:	mov	x3, x23
   2b734:	mov	x0, x22
   2b738:	add	x5, x5, x19, lsl #5
   2b73c:	add	x19, x19, #0x1
   2b740:	ldp	x2, x1, [x5, #16]
   2b744:	lsl	x2, x2, #3
   2b748:	bl	6bc0 <__asan_backtrace_free@plt>
   2b74c:	ldr	x5, [x21]
   2b750:	cmp	x19, x5
   2b754:	b.cc	2b728 <__sanitizer_set_death_callback@@Base+0x4920>  // b.lo, b.ul, b.last
   2b758:	lsl	x2, x5, #5
   2b75c:	ldr	x1, [x20]
   2b760:	mov	x4, x24
   2b764:	mov	x3, x23
   2b768:	mov	x0, x22
   2b76c:	bl	6bc0 <__asan_backtrace_free@plt>
   2b770:	ldp	x23, x24, [sp, #48]
   2b774:	str	xzr, [x21]
   2b778:	ldp	x21, x22, [sp, #32]
   2b77c:	str	xzr, [x20]
   2b780:	ldp	x19, x20, [sp, #16]
   2b784:	ldp	x29, x30, [sp], #64
   2b788:	ret
   2b78c:	nop

000000000002b790 <__asan_backtrace_dwarf_add@@Base>:
   2b790:	sub	sp, sp, #0x2a0
   2b794:	add	x8, sp, #0x160
   2b798:	stp	x29, x30, [sp, #48]
   2b79c:	add	x29, sp, #0x30
   2b7a0:	stp	x4, x5, [sp, #272]
   2b7a4:	add	x4, sp, #0x148
   2b7a8:	stp	x19, x20, [sp, #64]
   2b7ac:	mov	x19, x2
   2b7b0:	add	x20, sp, #0x180
   2b7b4:	stp	x21, x22, [sp, #80]
   2b7b8:	mov	x22, x3
   2b7bc:	mov	x21, x4
   2b7c0:	stp	x23, x24, [sp, #96]
   2b7c4:	stp	x25, x26, [sp, #112]
   2b7c8:	stp	x27, x28, [sp, #128]
   2b7cc:	mov	x27, x0
   2b7d0:	mov	x0, x8
   2b7d4:	str	x7, [sp, #160]
   2b7d8:	stp	x8, x1, [sp, #192]
   2b7dc:	mov	w1, #0x0                   	// #0
   2b7e0:	str	x4, [sp, #208]
   2b7e4:	str	x6, [sp, #224]
   2b7e8:	stp	x2, x3, [sp, #256]
   2b7ec:	mov	x2, #0x18                  	// #24
   2b7f0:	str	x20, [sp, #288]
   2b7f4:	ldr	x23, [sp, #720]
   2b7f8:	ldr	x26, [sp, #728]
   2b7fc:	bl	6860 <__asan_internal_memset@plt>
   2b800:	mov	x2, #0x18                  	// #24
   2b804:	mov	w1, #0x0                   	// #0
   2b808:	mov	x0, x20
   2b80c:	bl	6860 <__asan_internal_memset@plt>
   2b810:	adrp	x3, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2b814:	add	x3, x3, #0x258
   2b818:	stp	xzr, x3, [sp, #408]
   2b81c:	mov	x0, x21
   2b820:	ldr	w3, [sp, #704]
   2b824:	mov	x2, #0x18                  	// #24
   2b828:	mov	w1, #0x0                   	// #0
   2b82c:	str	xzr, [sp, #376]
   2b830:	stp	x19, x19, [sp, #424]
   2b834:	str	x22, [sp, #440]
   2b838:	str	w3, [sp, #448]
   2b83c:	stp	x23, x26, [sp, #456]
   2b840:	str	wzr, [sp, #472]
   2b844:	bl	6860 <__asan_internal_memset@plt>
   2b848:	ldr	x0, [sp, #440]
   2b84c:	str	x0, [sp, #152]
   2b850:	cbz	x0, 2bfe8 <__asan_backtrace_dwarf_add@@Base+0x858>
   2b854:	add	x22, sp, #0x1a0
   2b858:	add	x25, sp, #0x1e0
   2b85c:	add	x28, sp, #0x260
   2b860:	mov	x24, x27
   2b864:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2b868:	add	x0, x0, #0x420
   2b86c:	str	xzr, [sp, #152]
   2b870:	str	xzr, [sp, #168]
   2b874:	str	x0, [sp, #232]
   2b878:	ldr	w0, [sp, #472]
   2b87c:	str	w0, [sp, #184]
   2b880:	cbnz	w0, 2bc08 <__asan_backtrace_dwarf_add@@Base+0x478>
   2b884:	ldr	x1, [sp, #432]
   2b888:	mov	x0, x22
   2b88c:	str	x1, [sp, #176]
   2b890:	bl	28dd8 <__sanitizer_set_death_callback@@Base+0x1fd0>
   2b894:	mov	w27, w0
   2b898:	mov	x1, #0xffffffff            	// #4294967295
   2b89c:	cmp	x1, w0, uxtw
   2b8a0:	b.eq	2bf70 <__asan_backtrace_dwarf_add@@Base+0x7e0>  // b.none
   2b8a4:	ldp	x2, x3, [x22]
   2b8a8:	stp	x2, x3, [x25]
   2b8ac:	ldp	x0, x1, [x22, #16]
   2b8b0:	stp	x0, x1, [x25, #16]
   2b8b4:	ldp	x2, x3, [x22, #32]
   2b8b8:	stp	x2, x3, [x25, #32]
   2b8bc:	ldp	x2, x3, [x22, #48]
   2b8c0:	stp	x2, x3, [x25, #48]
   2b8c4:	ldr	x0, [sp, #440]
   2b8c8:	str	x27, [sp, #504]
   2b8cc:	cmp	x0, x27
   2b8d0:	b.cs	2bc58 <__asan_backtrace_dwarf_add@@Base+0x4c8>  // b.hs, b.nlast
   2b8d4:	mov	x0, x22
   2b8d8:	bl	28d90 <__sanitizer_set_death_callback@@Base+0x1f88>
   2b8dc:	cbz	w0, 2bc08 <__asan_backtrace_dwarf_add@@Base+0x478>
   2b8e0:	mov	x0, x25
   2b8e4:	bl	28e98 <__sanitizer_set_death_callback@@Base+0x2090>
   2b8e8:	and	w0, w0, #0xffff
   2b8ec:	str	w0, [sp, #188]
   2b8f0:	sub	w0, w0, #0x2
   2b8f4:	cmp	w0, #0x2
   2b8f8:	b.hi	2bc88 <__asan_backtrace_dwarf_add@@Base+0x4f8>  // b.pmore
   2b8fc:	ldr	x4, [sp, #208]
   2b900:	mov	x3, x26
   2b904:	mov	x2, x23
   2b908:	mov	x0, x24
   2b90c:	mov	x1, #0x8                   	// #8
   2b910:	bl	6840 <__asan_backtrace_vector_grow@plt>
   2b914:	mov	x20, x0
   2b918:	cbz	x0, 2bc08 <__asan_backtrace_dwarf_add@@Base+0x478>
   2b91c:	mov	x3, x26
   2b920:	mov	x2, x23
   2b924:	mov	x0, x24
   2b928:	mov	x1, #0x88                  	// #136
   2b92c:	bl	68c0 <__asan_backtrace_alloc@plt>
   2b930:	mov	x19, x0
   2b934:	cbz	x0, 2bc08 <__asan_backtrace_dwarf_add@@Base+0x478>
   2b938:	ldr	x1, [sp, #152]
   2b93c:	str	x19, [x20]
   2b940:	add	x0, x0, #0x58
   2b944:	mov	x2, #0x10                  	// #16
   2b948:	add	x1, x1, #0x1
   2b94c:	str	x1, [sp, #152]
   2b950:	mov	w1, #0x0                   	// #0
   2b954:	str	x0, [sp, #240]
   2b958:	bl	6860 <__asan_internal_memset@plt>
   2b95c:	ldr	w0, [sp, #184]
   2b960:	cbz	w0, 2bc20 <__asan_backtrace_dwarf_add@@Base+0x490>
   2b964:	mov	x0, x25
   2b968:	bl	28e38 <__sanitizer_set_death_callback@@Base+0x2030>
   2b96c:	ldr	x1, [sp, #160]
   2b970:	stp	xzr, xzr, [x19, #88]
   2b974:	cmp	x1, x0
   2b978:	b.ls	2bc3c <__asan_backtrace_dwarf_add@@Base+0x4ac>  // b.plast
   2b97c:	ldr	x3, [sp, #160]
   2b980:	add	x4, sp, #0x220
   2b984:	ldr	x2, [sp, #224]
   2b988:	str	x23, [sp, #584]
   2b98c:	str	x26, [sp, #592]
   2b990:	add	x20, sp, #0x220
   2b994:	add	x1, x2, x0
   2b998:	sub	x0, x3, x0
   2b99c:	stp	x1, x0, [x4, #16]
   2b9a0:	mov	x21, #0x0                   	// #0
   2b9a4:	ldr	w0, [sp, #704]
   2b9a8:	str	w0, [sp, #576]
   2b9ac:	add	x0, sp, #0x200
   2b9b0:	ldr	x3, [sp, #232]
   2b9b4:	stp	x3, x2, [x4]
   2b9b8:	ldp	x0, x1, [x0, #48]
   2b9bc:	stp	x0, x1, [x28, #16]
   2b9c0:	add	x0, sp, #0x200
   2b9c4:	str	wzr, [sp, #600]
   2b9c8:	ldp	x0, x1, [x0, #32]
   2b9cc:	stp	x0, x1, [x28]
   2b9d0:	add	x0, sp, #0x200
   2b9d4:	ldp	x0, x1, [x0, #64]
   2b9d8:	stp	x0, x1, [x28, #32]
   2b9dc:	add	x0, sp, #0x200
   2b9e0:	ldp	x0, x1, [x0, #80]
   2b9e4:	stp	x0, x1, [x28, #48]
   2b9e8:	mov	x0, x28
   2b9ec:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2b9f0:	cbz	x0, 2ba40 <__asan_backtrace_dwarf_add@@Base+0x2b0>
   2b9f4:	nop
   2b9f8:	ldr	w0, [sp, #664]
   2b9fc:	cbnz	w0, 2bc08 <__asan_backtrace_dwarf_add@@Base+0x478>
   2ba00:	mov	x0, x28
   2ba04:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2ba08:	add	x21, x21, #0x1
   2ba0c:	mov	x0, x28
   2ba10:	bl	28f00 <__sanitizer_set_death_callback@@Base+0x20f8>
   2ba14:	b	2ba20 <__asan_backtrace_dwarf_add@@Base+0x290>
   2ba18:	mov	x0, x28
   2ba1c:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2ba20:	mov	x0, x28
   2ba24:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2ba28:	cbnz	x0, 2ba18 <__asan_backtrace_dwarf_add@@Base+0x288>
   2ba2c:	mov	x0, x28
   2ba30:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2ba34:	mov	x0, x28
   2ba38:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2ba3c:	cbnz	x0, 2b9f8 <__asan_backtrace_dwarf_add@@Base+0x268>
   2ba40:	ldr	w0, [sp, #664]
   2ba44:	cbnz	w0, 2bc08 <__asan_backtrace_dwarf_add@@Base+0x478>
   2ba48:	cbz	x21, 2bcc8 <__asan_backtrace_dwarf_add@@Base+0x538>
   2ba4c:	lsl	x1, x21, #5
   2ba50:	mov	x3, x26
   2ba54:	mov	x2, x23
   2ba58:	mov	x0, x24
   2ba5c:	str	x1, [sp, #216]
   2ba60:	bl	68c0 <__asan_backtrace_alloc@plt>
   2ba64:	str	x0, [x19, #96]
   2ba68:	cbz	x0, 2bc08 <__asan_backtrace_dwarf_add@@Base+0x478>
   2ba6c:	ldr	x1, [sp, #216]
   2ba70:	str	x21, [x19, #88]
   2ba74:	mov	x2, x1
   2ba78:	mov	w1, #0x0                   	// #0
   2ba7c:	bl	6860 <__asan_internal_memset@plt>
   2ba80:	ldr	w0, [sp, #600]
   2ba84:	cbnz	w0, 2bfe0 <__asan_backtrace_dwarf_add@@Base+0x850>
   2ba88:	mov	x0, #0x0                   	// #0
   2ba8c:	stp	x27, x22, [sp, #296]
   2ba90:	mov	x22, x0
   2ba94:	str	x25, [sp, #312]
   2ba98:	mov	x25, x20
   2ba9c:	str	x24, [sp, #248]
   2baa0:	str	x23, [sp, #720]
   2baa4:	str	x26, [sp, #728]
   2baa8:	mov	x0, x25
   2baac:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2bab0:	mov	x21, x0
   2bab4:	cbz	x0, 2bca0 <__asan_backtrace_dwarf_add@@Base+0x510>
   2bab8:	mov	x0, x25
   2babc:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2bac0:	mov	x20, x0
   2bac4:	mov	x0, x25
   2bac8:	bl	28f00 <__sanitizer_set_death_callback@@Base+0x20f8>
   2bacc:	mov	x24, #0x0                   	// #0
   2bad0:	ldp	x2, x3, [x25]
   2bad4:	stp	x2, x3, [x28]
   2bad8:	and	w27, w0, #0xff
   2badc:	ldp	x2, x3, [x25, #16]
   2bae0:	stp	x2, x3, [x28, #16]
   2bae4:	ldp	x2, x3, [x25, #32]
   2bae8:	stp	x2, x3, [x28, #32]
   2baec:	ldp	x2, x3, [x25, #48]
   2baf0:	stp	x2, x3, [x28, #48]
   2baf4:	b	2bb04 <__asan_backtrace_dwarf_add@@Base+0x374>
   2baf8:	add	x24, x24, #0x1
   2bafc:	mov	x0, x28
   2bb00:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2bb04:	mov	x0, x28
   2bb08:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2bb0c:	cbnz	x0, 2baf8 <__asan_backtrace_dwarf_add@@Base+0x368>
   2bb10:	cbnz	x24, 2bef0 <__asan_backtrace_dwarf_add@@Base+0x760>
   2bb14:	mov	x23, #0x0                   	// #0
   2bb18:	mov	x0, x25
   2bb1c:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2bb20:	mov	x0, x25
   2bb24:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2bb28:	ldr	x3, [x19, #96]
   2bb2c:	ldr	w5, [sp, #600]
   2bb30:	add	x0, x3, x22
   2bb34:	str	x21, [x3, x22]
   2bb38:	add	x22, x22, #0x20
   2bb3c:	stp	w20, w27, [x0, #8]
   2bb40:	stp	x24, x23, [x0, #16]
   2bb44:	cbz	w5, 2baa8 <__asan_backtrace_dwarf_add@@Base+0x318>
   2bb48:	ldr	x27, [sp, #248]
   2bb4c:	ldr	x23, [sp, #720]
   2bb50:	ldr	x26, [sp, #728]
   2bb54:	mov	x0, x27
   2bb58:	ldr	x1, [sp, #240]
   2bb5c:	add	x2, x19, #0x60
   2bb60:	mov	x4, x26
   2bb64:	mov	x3, x23
   2bb68:	bl	2b6f0 <__sanitizer_set_death_callback@@Base+0x48e8>
   2bb6c:	ldr	x0, [sp, #152]
   2bb70:	cbz	x0, 2bbdc <__asan_backtrace_dwarf_add@@Base+0x44c>
   2bb74:	ldr	x20, [sp, #328]
   2bb78:	add	x19, x20, x0, lsl #3
   2bb7c:	nop
   2bb80:	ldr	x1, [x20]
   2bb84:	mov	x4, x26
   2bb88:	mov	x3, x23
   2bb8c:	mov	x0, x27
   2bb90:	add	x2, x1, #0x60
   2bb94:	add	x1, x1, #0x58
   2bb98:	bl	2b6f0 <__sanitizer_set_death_callback@@Base+0x48e8>
   2bb9c:	ldr	x1, [x20], #8
   2bba0:	mov	x4, x26
   2bba4:	mov	x3, x23
   2bba8:	mov	x0, x27
   2bbac:	mov	x2, #0x88                  	// #136
   2bbb0:	bl	6bc0 <__asan_backtrace_free@plt>
   2bbb4:	cmp	x19, x20
   2bbb8:	b.ne	2bb80 <__asan_backtrace_dwarf_add@@Base+0x3f0>  // b.any
   2bbbc:	ldp	x5, x4, [sp, #336]
   2bbc0:	mov	x3, x26
   2bbc4:	ldr	x1, [sp, #208]
   2bbc8:	mov	x2, x23
   2bbcc:	mov	x0, x27
   2bbd0:	add	x4, x4, x5
   2bbd4:	stp	xzr, x4, [sp, #336]
   2bbd8:	bl	6910 <__asan_backtrace_vector_release@plt>
   2bbdc:	ldr	x0, [sp, #376]
   2bbe0:	cbnz	x0, 2bf88 <__asan_backtrace_dwarf_add@@Base+0x7f8>
   2bbe4:	mov	w0, #0x0                   	// #0
   2bbe8:	ldp	x29, x30, [sp, #48]
   2bbec:	ldp	x19, x20, [sp, #64]
   2bbf0:	ldp	x21, x22, [sp, #80]
   2bbf4:	ldp	x23, x24, [sp, #96]
   2bbf8:	ldp	x25, x26, [sp, #112]
   2bbfc:	ldp	x27, x28, [sp, #128]
   2bc00:	add	sp, sp, #0x2a0
   2bc04:	ret
   2bc08:	mov	x27, x24
   2bc0c:	ldr	x0, [sp, #152]
   2bc10:	cbnz	x0, 2bb74 <__asan_backtrace_dwarf_add@@Base+0x3e4>
   2bc14:	ldr	x0, [sp, #376]
   2bc18:	cbz	x0, 2bbe4 <__asan_backtrace_dwarf_add@@Base+0x454>
   2bc1c:	b	2bf88 <__asan_backtrace_dwarf_add@@Base+0x7f8>
   2bc20:	mov	x0, x25
   2bc24:	bl	28dd8 <__sanitizer_set_death_callback@@Base+0x1fd0>
   2bc28:	ldr	x1, [sp, #160]
   2bc2c:	stp	xzr, xzr, [x19, #88]
   2bc30:	mov	w0, w0
   2bc34:	cmp	x1, x0
   2bc38:	b.hi	2b97c <__asan_backtrace_dwarf_add@@Base+0x1ec>  // b.pmore
   2bc3c:	mov	x27, x24
   2bc40:	mov	x0, x26
   2bc44:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2bc48:	mov	w2, #0x0                   	// #0
   2bc4c:	add	x1, x1, #0x400
   2bc50:	blr	x23
   2bc54:	b	2bc0c <__asan_backtrace_dwarf_add@@Base+0x47c>
   2bc58:	ldr	x1, [sp, #432]
   2bc5c:	sub	x0, x0, x27
   2bc60:	str	x0, [sp, #440]
   2bc64:	add	x0, x1, x27
   2bc68:	str	x0, [sp, #432]
   2bc6c:	mov	x0, x25
   2bc70:	bl	28e98 <__sanitizer_set_death_callback@@Base+0x2090>
   2bc74:	and	w0, w0, #0xffff
   2bc78:	str	w0, [sp, #188]
   2bc7c:	sub	w0, w0, #0x2
   2bc80:	cmp	w0, #0x2
   2bc84:	b.ls	2b8fc <__asan_backtrace_dwarf_add@@Base+0x16c>  // b.plast
   2bc88:	mov	x27, x24
   2bc8c:	mov	x0, x25
   2bc90:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2bc94:	add	x1, x1, #0x3e0
   2bc98:	bl	28828 <__sanitizer_set_death_callback@@Base+0x1a20>
   2bc9c:	b	2bc0c <__asan_backtrace_dwarf_add@@Base+0x47c>
   2bca0:	ldp	x1, x0, [x19, #88]
   2bca4:	adrp	x3, 28000 <__sanitizer_set_death_callback@@Base+0x11f8>
   2bca8:	mov	x2, #0x20                  	// #32
   2bcac:	add	x3, x3, #0x728
   2bcb0:	ldr	x24, [sp, #248]
   2bcb4:	ldp	x27, x22, [sp, #296]
   2bcb8:	ldr	x25, [sp, #312]
   2bcbc:	ldr	x23, [sp, #720]
   2bcc0:	ldr	x26, [sp, #728]
   2bcc4:	bl	66b0 <__asan_backtrace_qsort@plt>
   2bcc8:	mov	x0, x25
   2bccc:	bl	28f00 <__sanitizer_set_death_callback@@Base+0x20f8>
   2bcd0:	ldr	w8, [sp, #184]
   2bcd4:	mov	x1, #0xc                   	// #12
   2bcd8:	ldr	x2, [sp, #712]
   2bcdc:	cmp	w8, #0x0
   2bce0:	ldp	x3, x4, [sp, #496]
   2bce4:	stp	x2, x23, [sp]
   2bce8:	mov	x2, #0x4                   	// #4
   2bcec:	csel	x1, x1, x2, ne  // ne = any
   2bcf0:	stp	x26, x19, [sp, #16]
   2bcf4:	add	x1, x1, x27
   2bcf8:	ldr	x2, [sp, #192]
   2bcfc:	str	x2, [sp, #32]
   2bd00:	ldr	x2, [sp, #176]
   2bd04:	str	x28, [sp, #40]
   2bd08:	ldr	w7, [sp, #704]
   2bd0c:	and	w0, w0, #0xff
   2bd10:	sub	x2, x3, x2
   2bd14:	str	x2, [x19, #16]
   2bd18:	ldr	x2, [sp, #168]
   2bd1c:	stp	x3, x4, [x19]
   2bd20:	add	x1, x2, x1
   2bd24:	stp	x2, x1, [x19, #24]
   2bd28:	mov	x2, x25
   2bd2c:	str	x1, [sp, #168]
   2bd30:	ldr	w1, [sp, #188]
   2bd34:	str	w1, [x19, #40]
   2bd38:	ldr	x1, [sp, #200]
   2bd3c:	stp	w8, w0, [x19, #44]
   2bd40:	ldr	x5, [sp, #672]
   2bd44:	stp	xzr, xzr, [x19, #56]
   2bd48:	mov	x0, x24
   2bd4c:	ldr	x6, [sp, #680]
   2bd50:	str	xzr, [x19, #72]
   2bd54:	ldr	x3, [sp, #688]
   2bd58:	ldr	x4, [sp, #696]
   2bd5c:	str	xzr, [x19, #80]
   2bd60:	stp	xzr, xzr, [x19, #104]
   2bd64:	stp	xzr, xzr, [x19, #120]
   2bd68:	bl	29678 <__sanitizer_set_death_callback@@Base+0x2870>
   2bd6c:	cbz	w0, 2bc08 <__asan_backtrace_dwarf_add@@Base+0x478>
   2bd70:	ldr	w0, [sp, #536]
   2bd74:	cbnz	w0, 2bc08 <__asan_backtrace_dwarf_add@@Base+0x478>
   2bd78:	ldr	x0, [sp, #440]
   2bd7c:	cbnz	x0, 2b878 <__asan_backtrace_dwarf_add@@Base+0xe8>
   2bd80:	ldr	w0, [sp, #472]
   2bd84:	mov	x27, x24
   2bd88:	cbnz	w0, 2bc0c <__asan_backtrace_dwarf_add@@Base+0x47c>
   2bd8c:	add	x0, sp, #0x200
   2bd90:	ldr	x1, [sp, #192]
   2bd94:	ldp	x2, x3, [x0, #-184]
   2bd98:	stp	x2, x3, [sp, #384]
   2bd9c:	ldr	x0, [sp, #344]
   2bda0:	str	x0, [sp, #400]
   2bda4:	ldr	x0, [sp, #152]
   2bda8:	mov	x3, x26
   2bdac:	mov	x2, x23
   2bdb0:	str	x0, [sp, #408]
   2bdb4:	mov	x0, x27
   2bdb8:	bl	6910 <__asan_backtrace_vector_release@plt>
   2bdbc:	cbz	w0, 2bbe4 <__asan_backtrace_dwarf_add@@Base+0x454>
   2bdc0:	ldr	x1, [sp, #288]
   2bdc4:	mov	x3, x26
   2bdc8:	mov	x2, x23
   2bdcc:	mov	x0, x27
   2bdd0:	bl	6910 <__asan_backtrace_vector_release@plt>
   2bdd4:	cbz	w0, 2bbe4 <__asan_backtrace_dwarf_add@@Base+0x454>
   2bdd8:	ldp	x20, x24, [sp, #376]
   2bddc:	mov	x2, #0x18                  	// #24
   2bde0:	ldr	x21, [sp, #352]
   2bde4:	adrp	x3, 28000 <__sanitizer_set_death_callback@@Base+0x11f8>
   2bde8:	add	x3, x3, #0x8e8
   2bdec:	mov	x0, x21
   2bdf0:	mov	x1, x20
   2bdf4:	ldr	x22, [sp, #408]
   2bdf8:	bl	66b0 <__asan_backtrace_qsort@plt>
   2bdfc:	mov	x3, x26
   2be00:	mov	x2, x23
   2be04:	mov	x0, x27
   2be08:	mov	x1, #0xa0                  	// #160
   2be0c:	bl	68c0 <__asan_backtrace_alloc@plt>
   2be10:	mov	x19, x0
   2be14:	cbz	x0, 2bbe4 <__asan_backtrace_dwarf_add@@Base+0x454>
   2be18:	ldr	x3, [sp, #712]
   2be1c:	stp	xzr, x3, [x19]
   2be20:	add	x0, x0, #0x80
   2be24:	ldr	x3, [sp, #200]
   2be28:	str	x3, [x19, #16]
   2be2c:	ldr	x3, [sp, #256]
   2be30:	str	x3, [x19, #56]
   2be34:	ldr	x3, [sp, #264]
   2be38:	str	x3, [x19, #64]
   2be3c:	ldr	x3, [sp, #272]
   2be40:	str	x3, [x19, #72]
   2be44:	ldr	x3, [sp, #280]
   2be48:	str	x3, [x19, #80]
   2be4c:	ldr	x3, [sp, #672]
   2be50:	str	x3, [x19, #88]
   2be54:	ldr	x3, [sp, #680]
   2be58:	str	x3, [x19, #96]
   2be5c:	ldr	x3, [sp, #688]
   2be60:	str	x3, [x19, #104]
   2be64:	ldr	x3, [sp, #696]
   2be68:	str	x3, [x19, #112]
   2be6c:	ldr	w3, [sp, #704]
   2be70:	mov	x2, #0x20                  	// #32
   2be74:	stp	x21, x20, [x19, #24]
   2be78:	mov	w1, #0x0                   	// #0
   2be7c:	stp	x24, x22, [x19, #40]
   2be80:	str	w3, [x19, #120]
   2be84:	bl	6860 <__asan_internal_memset@plt>
   2be88:	ldr	x0, [sp, #744]
   2be8c:	cbz	x0, 2be94 <__asan_backtrace_dwarf_add@@Base+0x704>
   2be90:	str	x19, [x0]
   2be94:	ldr	w0, [x27, #8]
   2be98:	add	x2, x27, #0x20
   2be9c:	cbnz	w0, 2bfc8 <__asan_backtrace_dwarf_add@@Base+0x838>
   2bea0:	ldr	x0, [x27, #32]
   2bea4:	cbz	x0, 2beb8 <__asan_backtrace_dwarf_add@@Base+0x728>
   2bea8:	mov	x1, x0
   2beac:	ldr	x0, [x0]
   2beb0:	cbnz	x0, 2bea8 <__asan_backtrace_dwarf_add@@Base+0x718>
   2beb4:	mov	x2, x1
   2beb8:	str	x19, [x2]
   2bebc:	ldr	x2, [sp, #736]
   2bec0:	adrp	x1, 2b000 <__sanitizer_set_death_callback@@Base+0x41f8>
   2bec4:	add	x1, x1, #0x580
   2bec8:	mov	w0, #0x1                   	// #1
   2becc:	ldp	x29, x30, [sp, #48]
   2bed0:	str	x1, [x2]
   2bed4:	ldp	x19, x20, [sp, #64]
   2bed8:	ldp	x21, x22, [sp, #80]
   2bedc:	ldp	x23, x24, [sp, #96]
   2bee0:	ldp	x25, x26, [sp, #112]
   2bee4:	ldp	x27, x28, [sp, #128]
   2bee8:	add	sp, sp, #0x2a0
   2beec:	ret
   2bef0:	ldr	x0, [sp, #248]
   2bef4:	lsl	x1, x24, #3
   2bef8:	ldr	x2, [sp, #720]
   2befc:	ldr	x3, [sp, #728]
   2bf00:	bl	68c0 <__asan_backtrace_alloc@plt>
   2bf04:	mov	x23, x0
   2bf08:	cbz	x0, 2bb48 <__asan_backtrace_dwarf_add@@Base+0x3b8>
   2bf0c:	mov	x0, x25
   2bf10:	mov	x24, #0x0                   	// #0
   2bf14:	mov	x25, x24
   2bf18:	mov	x24, x22
   2bf1c:	mov	x22, x20
   2bf20:	mov	x20, x0
   2bf24:	str	x19, [sp, #216]
   2bf28:	mov	x19, x23
   2bf2c:	b	2bf3c <__asan_backtrace_dwarf_add@@Base+0x7ac>
   2bf30:	add	x25, x25, #0x1
   2bf34:	stp	w26, w0, [x19]
   2bf38:	add	x19, x19, #0x8
   2bf3c:	mov	x0, x20
   2bf40:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2bf44:	mov	x26, x0
   2bf48:	mov	x0, x20
   2bf4c:	bl	28fd8 <__sanitizer_set_death_callback@@Base+0x21d0>
   2bf50:	cbnz	x26, 2bf30 <__asan_backtrace_dwarf_add@@Base+0x7a0>
   2bf54:	mov	x0, x20
   2bf58:	mov	x20, x22
   2bf5c:	mov	x22, x24
   2bf60:	mov	x24, x25
   2bf64:	mov	x25, x0
   2bf68:	ldr	x19, [sp, #216]
   2bf6c:	b	2bb28 <__asan_backtrace_dwarf_add@@Base+0x398>
   2bf70:	mov	x0, x22
   2bf74:	bl	28e38 <__sanitizer_set_death_callback@@Base+0x2030>
   2bf78:	mov	w1, #0x1                   	// #1
   2bf7c:	mov	x27, x0
   2bf80:	str	w1, [sp, #184]
   2bf84:	b	2b8a4 <__asan_backtrace_dwarf_add@@Base+0x114>
   2bf88:	ldp	x5, x4, [sp, #360]
   2bf8c:	mov	x3, x26
   2bf90:	ldr	x1, [sp, #192]
   2bf94:	mov	x2, x23
   2bf98:	mov	x0, x27
   2bf9c:	add	x4, x4, x5
   2bfa0:	stp	xzr, x4, [sp, #360]
   2bfa4:	bl	6910 <__asan_backtrace_vector_release@plt>
   2bfa8:	b	2bbe4 <__asan_backtrace_dwarf_add@@Base+0x454>
   2bfac:	ldxr	x0, [x1]
   2bfb0:	cbnz	x0, 2bfbc <__asan_backtrace_dwarf_add@@Base+0x82c>
   2bfb4:	stlxr	w3, x19, [x1]
   2bfb8:	cbnz	w3, 2bfac <__asan_backtrace_dwarf_add@@Base+0x81c>
   2bfbc:	dmb	ish
   2bfc0:	cmp	x0, #0x0
   2bfc4:	b.eq	2bebc <__asan_backtrace_dwarf_add@@Base+0x72c>  // b.none
   2bfc8:	mov	x1, x2
   2bfcc:	b	2bfd4 <__asan_backtrace_dwarf_add@@Base+0x844>
   2bfd0:	mov	x1, x0
   2bfd4:	ldar	x0, [x1]
   2bfd8:	cbnz	x0, 2bfd0 <__asan_backtrace_dwarf_add@@Base+0x840>
   2bfdc:	b	2bfac <__asan_backtrace_dwarf_add@@Base+0x81c>
   2bfe0:	mov	x27, x24
   2bfe4:	b	2bb54 <__asan_backtrace_dwarf_add@@Base+0x3c4>
   2bfe8:	ldr	w0, [sp, #472]
   2bfec:	cbz	w0, 2bd8c <__asan_backtrace_dwarf_add@@Base+0x5fc>
   2bff0:	b	2bbdc <__asan_backtrace_dwarf_add@@Base+0x44c>
   2bff4:	nop
   2bff8:	stp	x29, x30, [sp, #-160]!
   2bffc:	mov	x29, sp
   2c000:	stp	x19, x20, [sp, #16]
   2c004:	mov	x20, x0
   2c008:	ldr	w0, [x0, #8]
   2c00c:	stp	x21, x22, [sp, #32]
   2c010:	mov	x22, x1
   2c014:	stp	x23, x24, [sp, #48]
   2c018:	mov	x23, x2
   2c01c:	cbnz	w0, 2c078 <__asan_backtrace_dwarf_add@@Base+0x8e8>
   2c020:	ldr	w0, [x20, #56]
   2c024:	cbnz	w0, 2c04c <__asan_backtrace_dwarf_add@@Base+0x8bc>
   2c028:	ldr	x1, [x20, #24]
   2c02c:	str	x1, [sp, #88]
   2c030:	mov	w0, #0x1                   	// #1
   2c034:	cbz	x1, 2c0a0 <__asan_backtrace_dwarf_add@@Base+0x910>
   2c038:	ldp	x19, x20, [sp, #16]
   2c03c:	ldp	x21, x22, [sp, #32]
   2c040:	ldp	x23, x24, [sp, #48]
   2c044:	ldp	x29, x30, [sp], #160
   2c048:	ret
   2c04c:	mov	x0, x23
   2c050:	mov	w2, #0xffffffff            	// #-1
   2c054:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2c058:	add	x1, x1, #0x488
   2c05c:	blr	x22
   2c060:	mov	w0, #0x0                   	// #0
   2c064:	ldp	x19, x20, [sp, #16]
   2c068:	ldp	x21, x22, [sp, #32]
   2c06c:	ldp	x23, x24, [sp, #48]
   2c070:	ldp	x29, x30, [sp], #160
   2c074:	ret
   2c078:	add	x0, x20, #0x38
   2c07c:	ldar	w0, [x0]
   2c080:	cbnz	w0, 2c04c <__asan_backtrace_dwarf_add@@Base+0x8bc>
   2c084:	ldr	w0, [x20, #8]
   2c088:	cbz	w0, 2c028 <__asan_backtrace_dwarf_add@@Base+0x898>
   2c08c:	add	x0, x20, #0x18
   2c090:	ldar	x1, [x0]
   2c094:	str	x1, [sp, #88]
   2c098:	mov	w0, #0x1                   	// #1
   2c09c:	cbnz	x1, 2c038 <__asan_backtrace_dwarf_add@@Base+0x8a8>
   2c0a0:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2c0a4:	add	x24, x24, #0x4b0
   2c0a8:	stp	x25, x26, [sp, #64]
   2c0ac:	adrp	x25, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2c0b0:	add	x26, sp, #0x54
   2c0b4:	add	x25, x25, #0x470
   2c0b8:	mov	w19, #0x0                   	// #0
   2c0bc:	cmp	w19, #0x3
   2c0c0:	b.eq	2c1b8 <__asan_backtrace_dwarf_add@@Base+0xa28>  // b.none
   2c0c4:	cmp	w19, #0x4
   2c0c8:	b.eq	2c194 <__asan_backtrace_dwarf_add@@Base+0xa04>  // b.none
   2c0cc:	cmp	w19, #0x1
   2c0d0:	b.eq	2c150 <__asan_backtrace_dwarf_add@@Base+0x9c0>  // b.none
   2c0d4:	cmp	w19, #0x2
   2c0d8:	b.ne	2c148 <__asan_backtrace_dwarf_add@@Base+0x9b8>  // b.any
   2c0dc:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x5028>
   2c0e0:	add	x21, x21, #0x508
   2c0e4:	mov	x3, x26
   2c0e8:	mov	x2, x23
   2c0ec:	mov	x1, x22
   2c0f0:	mov	x0, x21
   2c0f4:	bl	6d40 <__asan_backtrace_open@plt>
   2c0f8:	tbnz	w0, #31, 2c188 <__asan_backtrace_dwarf_add@@Base+0x9f8>
   2c0fc:	mov	w2, w0
   2c100:	mov	x4, x23
   2c104:	mov	x3, x22
   2c108:	mov	x1, x21
   2c10c:	add	x5, sp, #0x58
   2c110:	mov	x0, x20
   2c114:	bl	6c00 <__asan_backtrace_initialize@plt>
   2c118:	cbz	w0, 2c170 <__asan_backtrace_dwarf_add@@Base+0x9e0>
   2c11c:	ldr	w0, [x20, #8]
   2c120:	ldr	x1, [sp, #88]
   2c124:	cbnz	w0, 2c1c0 <__asan_backtrace_dwarf_add@@Base+0xa30>
   2c128:	ldp	x25, x26, [sp, #64]
   2c12c:	str	x1, [x20, #24]
   2c130:	mov	w0, #0x1                   	// #1
   2c134:	ldp	x19, x20, [sp, #16]
   2c138:	ldp	x21, x22, [sp, #32]
   2c13c:	ldp	x23, x24, [sp, #48]
   2c140:	ldp	x29, x30, [sp], #160
   2c144:	ret
   2c148:	ldr	x21, [x20]
   2c14c:	cbnz	x21, 2c0e4 <__asan_backtrace_dwarf_add@@Base+0x954>
   2c150:	add	w19, w19, #0x1
   2c154:	cmp	w19, #0x5
   2c158:	b.ne	2c0bc <__asan_backtrace_dwarf_add@@Base+0x92c>  // b.any
   2c15c:	ldr	x1, [x20]
   2c160:	mov	x0, x23
   2c164:	cbz	x1, 2c1d4 <__asan_backtrace_dwarf_add@@Base+0xa44>
   2c168:	mov	w2, #0x2                   	// #2
   2c16c:	blr	x22
   2c170:	ldr	w0, [x20, #8]
   2c174:	cbnz	w0, 2c1e8 <__asan_backtrace_dwarf_add@@Base+0xa58>
   2c178:	mov	w1, #0x1                   	// #1
   2c17c:	ldp	x25, x26, [sp, #64]
   2c180:	str	w1, [x20, #56]
   2c184:	b	2c038 <__asan_backtrace_dwarf_add@@Base+0x8a8>
   2c188:	ldr	w0, [sp, #84]
   2c18c:	cbnz	w0, 2c150 <__asan_backtrace_dwarf_add@@Base+0x9c0>
   2c190:	b	2c170 <__asan_backtrace_dwarf_add@@Base+0x9e0>
   2c194:	bl	6990 <getpid@plt>
   2c198:	sxtw	x3, w0
   2c19c:	add	x1, sp, #0x60
   2c1a0:	mov	x2, x24
   2c1a4:	mov	x21, x1
   2c1a8:	mov	x0, x1
   2c1ac:	mov	x1, #0x40                  	// #64
   2c1b0:	bl	6a20 <snprintf@plt>
   2c1b4:	b	2c0e4 <__asan_backtrace_dwarf_add@@Base+0x954>
   2c1b8:	mov	x21, x25
   2c1bc:	b	2c0e4 <__asan_backtrace_dwarf_add@@Base+0x954>
   2c1c0:	add	x20, x20, #0x18
   2c1c4:	stlr	x1, [x20]
   2c1c8:	mov	w0, #0x1                   	// #1
   2c1cc:	ldp	x25, x26, [sp, #64]
   2c1d0:	b	2c038 <__asan_backtrace_dwarf_add@@Base+0x8a8>
   2c1d4:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2c1d8:	mov	w2, #0x0                   	// #0
   2c1dc:	add	x1, x1, #0x4c8
   2c1e0:	blr	x22
   2c1e4:	b	2c170 <__asan_backtrace_dwarf_add@@Base+0x9e0>
   2c1e8:	mov	w0, #0x1                   	// #1
   2c1ec:	add	x20, x20, #0x38
   2c1f0:	stlr	w0, [x20]
   2c1f4:	ldp	x25, x26, [sp, #64]
   2c1f8:	mov	w0, #0x0                   	// #0
   2c1fc:	b	2c038 <__asan_backtrace_dwarf_add@@Base+0x8a8>

000000000002c200 <__asan_backtrace_pcinfo@@Base>:
   2c200:	stp	x29, x30, [sp, #-64]!
   2c204:	mov	x29, sp
   2c208:	stp	x19, x20, [sp, #16]
   2c20c:	mov	x20, x3
   2c210:	mov	x19, x0
   2c214:	stp	x21, x22, [sp, #32]
   2c218:	mov	x22, x1
   2c21c:	mov	x21, x4
   2c220:	mov	x1, x3
   2c224:	str	x23, [sp, #48]
   2c228:	mov	x23, x2
   2c22c:	mov	x2, x4
   2c230:	bl	2bff8 <__asan_backtrace_dwarf_add@@Base+0x868>
   2c234:	cbz	w0, 2c270 <__asan_backtrace_pcinfo@@Base+0x70>
   2c238:	ldr	w0, [x19, #56]
   2c23c:	cbnz	w0, 2c270 <__asan_backtrace_pcinfo@@Base+0x70>
   2c240:	mov	x4, x21
   2c244:	mov	x3, x20
   2c248:	mov	x2, x23
   2c24c:	mov	x1, x22
   2c250:	mov	x0, x19
   2c254:	ldr	x5, [x19, #24]
   2c258:	ldp	x19, x20, [sp, #16]
   2c25c:	mov	x16, x5
   2c260:	ldp	x21, x22, [sp, #32]
   2c264:	ldr	x23, [sp, #48]
   2c268:	ldp	x29, x30, [sp], #64
   2c26c:	br	x16
   2c270:	mov	w0, #0x0                   	// #0
   2c274:	ldp	x19, x20, [sp, #16]
   2c278:	ldp	x21, x22, [sp, #32]
   2c27c:	ldr	x23, [sp, #48]
   2c280:	ldp	x29, x30, [sp], #64
   2c284:	ret

000000000002c288 <__asan_backtrace_syminfo@@Base>:
   2c288:	stp	x29, x30, [sp, #-64]!
   2c28c:	mov	x29, sp
   2c290:	stp	x19, x20, [sp, #16]
   2c294:	mov	x20, x3
   2c298:	mov	x19, x0
   2c29c:	stp	x21, x22, [sp, #32]
   2c2a0:	mov	x22, x2
   2c2a4:	mov	x21, x4
   2c2a8:	mov	x2, x4
   2c2ac:	str	x23, [sp, #48]
   2c2b0:	mov	x23, x1
   2c2b4:	mov	x1, x3
   2c2b8:	bl	2bff8 <__asan_backtrace_dwarf_add@@Base+0x868>
   2c2bc:	cbz	w0, 2c2ec <__asan_backtrace_syminfo@@Base+0x64>
   2c2c0:	ldr	w1, [x19, #56]
   2c2c4:	mov	w0, #0x0                   	// #0
   2c2c8:	cbnz	w1, 2c2ec <__asan_backtrace_syminfo@@Base+0x64>
   2c2cc:	ldr	x5, [x19, #40]
   2c2d0:	mov	x0, x19
   2c2d4:	mov	x4, x21
   2c2d8:	mov	x3, x20
   2c2dc:	mov	x2, x22
   2c2e0:	mov	x1, x23
   2c2e4:	blr	x5
   2c2e8:	mov	w0, #0x1                   	// #1
   2c2ec:	ldp	x19, x20, [sp, #16]
   2c2f0:	ldp	x21, x22, [sp, #32]
   2c2f4:	ldr	x23, [sp, #48]
   2c2f8:	ldp	x29, x30, [sp], #64
   2c2fc:	ret

000000000002c300 <__asan_backtrace_open@@Base>:
   2c300:	stp	x29, x30, [sp, #-64]!
   2c304:	mov	x29, sp
   2c308:	stp	x19, x20, [sp, #16]
   2c30c:	stp	x21, x22, [sp, #32]
   2c310:	mov	x22, x2
   2c314:	mov	x21, x0
   2c318:	str	x23, [sp, #48]
   2c31c:	mov	x23, x1
   2c320:	cbz	x3, 2c364 <__asan_backtrace_open@@Base+0x64>
   2c324:	str	wzr, [x3]
   2c328:	mov	x20, x3
   2c32c:	mov	w1, #0x80000               	// #524288
   2c330:	bl	67f0 <open@plt>
   2c334:	mov	w19, w0
   2c338:	tbnz	w0, #31, 2c390 <__asan_backtrace_open@@Base+0x90>
   2c33c:	mov	w0, w19
   2c340:	mov	w2, #0x1                   	// #1
   2c344:	mov	w1, #0x2                   	// #2
   2c348:	bl	6cd0 <fcntl@plt>
   2c34c:	mov	w0, w19
   2c350:	ldp	x19, x20, [sp, #16]
   2c354:	ldp	x21, x22, [sp, #32]
   2c358:	ldr	x23, [sp, #48]
   2c35c:	ldp	x29, x30, [sp], #64
   2c360:	ret
   2c364:	mov	w1, #0x80000               	// #524288
   2c368:	bl	67f0 <open@plt>
   2c36c:	mov	w19, w0
   2c370:	tbz	w0, #31, 2c33c <__asan_backtrace_open@@Base+0x3c>
   2c374:	bl	6ac0 <__errno_location@plt>
   2c378:	ldr	w2, [x0]
   2c37c:	mov	x1, x21
   2c380:	mov	x0, x22
   2c384:	mov	w19, #0xffffffff            	// #-1
   2c388:	blr	x23
   2c38c:	b	2c34c <__asan_backtrace_open@@Base+0x4c>
   2c390:	bl	6ac0 <__errno_location@plt>
   2c394:	ldr	w1, [x0]
   2c398:	cmp	w1, #0x2
   2c39c:	b.ne	2c378 <__asan_backtrace_open@@Base+0x78>  // b.any
   2c3a0:	mov	w0, #0x1                   	// #1
   2c3a4:	mov	w19, #0xffffffff            	// #-1
   2c3a8:	str	w0, [x20]
   2c3ac:	b	2c34c <__asan_backtrace_open@@Base+0x4c>

000000000002c3b0 <__asan_backtrace_close@@Base>:
   2c3b0:	stp	x29, x30, [sp, #-32]!
   2c3b4:	mov	x29, sp
   2c3b8:	stp	x19, x20, [sp, #16]
   2c3bc:	mov	x19, x1
   2c3c0:	mov	x20, x2
   2c3c4:	bl	6b60 <close@plt>
   2c3c8:	tbnz	w0, #31, 2c3dc <__asan_backtrace_close@@Base+0x2c>
   2c3cc:	mov	w0, #0x1                   	// #1
   2c3d0:	ldp	x19, x20, [sp, #16]
   2c3d4:	ldp	x29, x30, [sp], #32
   2c3d8:	ret
   2c3dc:	bl	6ac0 <__errno_location@plt>
   2c3e0:	mov	x2, x0
   2c3e4:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2c3e8:	mov	x0, x20
   2c3ec:	add	x1, x1, #0x4f8
   2c3f0:	ldr	w2, [x2]
   2c3f4:	blr	x19
   2c3f8:	mov	w0, #0x0                   	// #0
   2c3fc:	ldp	x19, x20, [sp, #16]
   2c400:	ldp	x29, x30, [sp], #32
   2c404:	ret

000000000002c408 <__asan_backtrace_qsort@@Base>:
   2c408:	cmp	x1, #0x1
   2c40c:	b.ls	2c588 <__asan_backtrace_qsort@@Base+0x180>  // b.plast
   2c410:	stp	x29, x30, [sp, #-80]!
   2c414:	mov	x29, sp
   2c418:	stp	x19, x20, [sp, #16]
   2c41c:	mov	x20, x2
   2c420:	stp	x21, x22, [sp, #32]
   2c424:	mov	x21, x0
   2c428:	stp	x23, x24, [sp, #48]
   2c42c:	mov	x23, x1
   2c430:	mov	x24, x3
   2c434:	str	x25, [sp, #64]
   2c438:	lsr	x0, x23, #1
   2c43c:	mov	x4, #0x0                   	// #0
   2c440:	madd	x0, x0, x20, x21
   2c444:	cbz	x20, 2c464 <__asan_backtrace_qsort@@Base+0x5c>
   2c448:	ldrb	w2, [x0, x4]
   2c44c:	ldrb	w1, [x21, x4]
   2c450:	strb	w2, [x21, x4]
   2c454:	strb	w1, [x0, x4]
   2c458:	add	x4, x4, #0x1
   2c45c:	cmp	x20, x4
   2c460:	b.ne	2c448 <__asan_backtrace_qsort@@Base+0x40>  // b.any
   2c464:	add	x19, x21, x20
   2c468:	mov	x25, #0x0                   	// #0
   2c46c:	mov	x22, #0x1                   	// #1
   2c470:	b	2c484 <__asan_backtrace_qsort@@Base+0x7c>
   2c474:	add	x22, x22, #0x1
   2c478:	add	x19, x19, x20
   2c47c:	cmp	x22, x23
   2c480:	b.cs	2c4f0 <__asan_backtrace_qsort@@Base+0xe8>  // b.hs, b.nlast
   2c484:	mov	x1, x19
   2c488:	mov	x0, x21
   2c48c:	blr	x24
   2c490:	cmp	w0, #0x0
   2c494:	add	x3, x25, #0x1
   2c498:	mov	x5, x3
   2c49c:	b.le	2c474 <__asan_backtrace_qsort@@Base+0x6c>
   2c4a0:	add	x3, x25, #0x2
   2c4a4:	cmp	x5, x22
   2c4a8:	mov	x25, x22
   2c4ac:	b.eq	2c474 <__asan_backtrace_qsort@@Base+0x6c>  // b.none
   2c4b0:	madd	x0, x20, x5, x21
   2c4b4:	cbz	x20, 2c4dc <__asan_backtrace_qsort@@Base+0xd4>
   2c4b8:	mov	x4, #0x0                   	// #0
   2c4bc:	nop
   2c4c0:	ldrb	w1, [x19, x4]
   2c4c4:	ldrb	w2, [x0, x4]
   2c4c8:	strb	w1, [x0, x4]
   2c4cc:	strb	w2, [x19, x4]
   2c4d0:	add	x4, x4, #0x1
   2c4d4:	cmp	x20, x4
   2c4d8:	b.ne	2c4c0 <__asan_backtrace_qsort@@Base+0xb8>  // b.any
   2c4dc:	add	x22, x22, #0x1
   2c4e0:	mov	x25, x5
   2c4e4:	add	x19, x19, x20
   2c4e8:	cmp	x22, x23
   2c4ec:	b.cc	2c484 <__asan_backtrace_qsort@@Base+0x7c>  // b.lo, b.ul, b.last
   2c4f0:	cbnz	x25, 2c55c <__asan_backtrace_qsort@@Base+0x154>
   2c4f4:	sub	x0, x23, #0x1
   2c4f8:	cmp	x23, x25, lsl #1
   2c4fc:	madd	x3, x20, x3, x21
   2c500:	sub	x23, x0, x25
   2c504:	b.ls	2c540 <__asan_backtrace_qsort@@Base+0x138>  // b.plast
   2c508:	mov	x0, x21
   2c50c:	mov	x1, x25
   2c510:	mov	x21, x3
   2c514:	mov	x2, x20
   2c518:	mov	x3, x24
   2c51c:	bl	2c408 <__asan_backtrace_qsort@@Base>
   2c520:	cmp	x23, #0x1
   2c524:	b.hi	2c438 <__asan_backtrace_qsort@@Base+0x30>  // b.pmore
   2c528:	ldp	x19, x20, [sp, #16]
   2c52c:	ldp	x21, x22, [sp, #32]
   2c530:	ldp	x23, x24, [sp, #48]
   2c534:	ldr	x25, [sp, #64]
   2c538:	ldp	x29, x30, [sp], #80
   2c53c:	ret
   2c540:	mov	x1, x23
   2c544:	mov	x0, x3
   2c548:	mov	x23, x25
   2c54c:	mov	x3, x24
   2c550:	mov	x2, x20
   2c554:	bl	2c408 <__asan_backtrace_qsort@@Base>
   2c558:	b	2c520 <__asan_backtrace_qsort@@Base+0x118>
   2c55c:	madd	x1, x25, x20, x21
   2c560:	cbz	x20, 2c4f4 <__asan_backtrace_qsort@@Base+0xec>
   2c564:	mov	x0, #0x0                   	// #0
   2c568:	ldrb	w4, [x1, x0]
   2c56c:	ldrb	w2, [x21, x0]
   2c570:	strb	w4, [x21, x0]
   2c574:	strb	w2, [x1, x0]
   2c578:	add	x0, x0, #0x1
   2c57c:	cmp	x20, x0
   2c580:	b.ne	2c568 <__asan_backtrace_qsort@@Base+0x160>  // b.any
   2c584:	b	2c4f4 <__asan_backtrace_qsort@@Base+0xec>
   2c588:	ret
   2c58c:	nop

000000000002c590 <__asan_backtrace_create_state@@Base>:
   2c590:	stp	x29, x30, [sp, #-144]!
   2c594:	mov	x29, sp
   2c598:	stp	x19, x20, [sp, #16]
   2c59c:	add	x19, sp, #0x48
   2c5a0:	mov	w20, w1
   2c5a4:	mov	w1, #0x0                   	// #0
   2c5a8:	stp	x21, x22, [sp, #32]
   2c5ac:	mov	x21, x2
   2c5b0:	mov	x22, x3
   2c5b4:	mov	x2, #0x48                  	// #72
   2c5b8:	str	x23, [sp, #48]
   2c5bc:	mov	x23, x0
   2c5c0:	mov	x0, x19
   2c5c4:	bl	6860 <__asan_internal_memset@plt>
   2c5c8:	mov	x3, x22
   2c5cc:	mov	x2, x21
   2c5d0:	mov	x0, x19
   2c5d4:	mov	x1, #0x48                  	// #72
   2c5d8:	str	x23, [sp, #72]
   2c5dc:	str	w20, [sp, #80]
   2c5e0:	bl	68c0 <__asan_backtrace_alloc@plt>
   2c5e4:	cbz	x0, 2c610 <__asan_backtrace_create_state@@Base+0x80>
   2c5e8:	ldp	x2, x3, [sp, #72]
   2c5ec:	stp	x2, x3, [x0]
   2c5f0:	ldp	x2, x3, [sp, #88]
   2c5f4:	stp	x2, x3, [x0, #16]
   2c5f8:	ldp	x2, x3, [sp, #104]
   2c5fc:	stp	x2, x3, [x0, #32]
   2c600:	ldp	x2, x3, [sp, #120]
   2c604:	stp	x2, x3, [x0, #48]
   2c608:	ldr	x1, [sp, #136]
   2c60c:	str	x1, [x0, #64]
   2c610:	ldp	x19, x20, [sp, #16]
   2c614:	ldp	x21, x22, [sp, #32]
   2c618:	ldr	x23, [sp, #48]
   2c61c:	ldp	x29, x30, [sp], #144
   2c620:	ret
   2c624:	nop
   2c628:	sub	w5, w1, #0x1
   2c62c:	mov	x4, x0
   2c630:	cmp	w5, #0x4f
   2c634:	b.ls	2c640 <__asan_backtrace_create_state@@Base+0xb0>  // b.plast
   2c638:	mov	x0, #0x0                   	// #0
   2c63c:	ret
   2c640:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2c644:	add	x0, x0, #0x500
   2c648:	ldrb	w0, [x0, w5, uxtw]
   2c64c:	adr	x5, 2c658 <__asan_backtrace_create_state@@Base+0xc8>
   2c650:	add	x0, x5, w0, sxtb #2
   2c654:	br	x0
   2c658:	cbz	x3, 2c638 <__asan_backtrace_create_state@@Base+0xa8>
   2c65c:	ldp	w0, w5, [x4, #40]
   2c660:	cmp	w0, w5
   2c664:	b.ge	2c638 <__asan_backtrace_create_state@@Base+0xa8>  // b.tcont
   2c668:	mov	w5, #0x18                  	// #24
   2c66c:	add	w7, w0, #0x1
   2c670:	ldr	x6, [x4, #32]
   2c674:	smull	x5, w0, w5
   2c678:	add	x0, x6, x5
   2c67c:	str	wzr, [x0, #4]
   2c680:	str	w7, [x4, #40]
   2c684:	str	w1, [x6, x5]
   2c688:	stp	x2, x3, [x0, #8]
   2c68c:	ret
   2c690:	cbnz	x2, 2c65c <__asan_backtrace_create_state@@Base+0xcc>
   2c694:	mov	x0, #0x0                   	// #0
   2c698:	b	2c63c <__asan_backtrace_create_state@@Base+0xac>
   2c69c:	cmp	x2, #0x0
   2c6a0:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   2c6a4:	b.ne	2c65c <__asan_backtrace_create_state@@Base+0xcc>  // b.any
   2c6a8:	mov	x0, #0x0                   	// #0
   2c6ac:	b	2c63c <__asan_backtrace_create_state@@Base+0xac>
   2c6b0:	ldr	x3, [x0, #24]
   2c6b4:	mov	x2, x1
   2c6b8:	mov	w4, #0x4f                  	// #79
   2c6bc:	ldrb	w1, [x3]
   2c6c0:	cmp	w1, #0x52
   2c6c4:	ccmp	w1, w4, #0x4, ne  // ne = any
   2c6c8:	b.ne	2c6f4 <__asan_backtrace_create_state@@Base+0x164>  // b.any
   2c6cc:	ldr	w5, [x0, #72]
   2c6d0:	cmp	w1, #0x52
   2c6d4:	mov	w1, #0x20                  	// #32
   2c6d8:	add	w4, w5, #0x3
   2c6dc:	b.eq	2c6fc <__asan_backtrace_create_state@@Base+0x16c>  // b.none
   2c6e0:	add	x3, x3, #0x1
   2c6e4:	str	x3, [x0, #24]
   2c6e8:	str	w4, [x0, #72]
   2c6ec:	mov	x3, #0x0                   	// #0
   2c6f0:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   2c6f4:	mov	x0, x2
   2c6f8:	ret
   2c6fc:	add	w4, w5, #0x2
   2c700:	add	x3, x3, #0x1
   2c704:	str	x3, [x0, #24]
   2c708:	mov	w1, #0x1f                  	// #31
   2c70c:	str	w4, [x0, #72]
   2c710:	mov	x3, #0x0                   	// #0
   2c714:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   2c718:	cbz	x1, 2c7f8 <__asan_backtrace_create_state@@Base+0x268>
   2c71c:	stp	x29, x30, [sp, #-32]!
   2c720:	mov	x29, sp
   2c724:	stp	x19, x20, [sp, #16]
   2c728:	mov	x20, x0
   2c72c:	mov	x19, x1
   2c730:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2c734:	add	x0, x0, #0x550
   2c738:	ldr	w1, [x19]
   2c73c:	sub	w1, w1, #0x1
   2c740:	cmp	w1, #0x4f
   2c744:	b.ls	2c754 <__asan_backtrace_create_state@@Base+0x1c4>  // b.plast
   2c748:	ldp	x19, x20, [sp, #16]
   2c74c:	ldp	x29, x30, [sp], #32
   2c750:	ret
   2c754:	ldrb	w1, [x0, w1, uxtw]
   2c758:	adr	x2, 2c764 <__asan_backtrace_create_state@@Base+0x1d4>
   2c75c:	add	x1, x2, w1, sxtb #2
   2c760:	br	x1
   2c764:	ldr	x0, [x19, #8]
   2c768:	ldr	w0, [x0]
   2c76c:	cmp	w0, #0x5
   2c770:	b.ne	2c780 <__asan_backtrace_create_state@@Base+0x1f0>  // b.any
   2c774:	ldr	w0, [x20, #348]
   2c778:	add	w0, w0, #0x1
   2c77c:	str	w0, [x20, #348]
   2c780:	ldr	w0, [x20, #308]
   2c784:	cmp	w0, #0x800
   2c788:	b.gt	2c748 <__asan_backtrace_create_state@@Base+0x1b8>
   2c78c:	ldr	x1, [x19, #8]
   2c790:	add	w0, w0, #0x1
   2c794:	str	w0, [x20, #308]
   2c798:	mov	x0, x20
   2c79c:	bl	2c718 <__asan_backtrace_create_state@@Base+0x188>
   2c7a0:	ldr	x1, [x19, #16]
   2c7a4:	mov	x0, x20
   2c7a8:	bl	2c718 <__asan_backtrace_create_state@@Base+0x188>
   2c7ac:	ldr	w0, [x20, #308]
   2c7b0:	sub	w0, w0, #0x1
   2c7b4:	str	w0, [x20, #308]
   2c7b8:	ldp	x19, x20, [sp, #16]
   2c7bc:	ldp	x29, x30, [sp], #32
   2c7c0:	ret
   2c7c4:	ldr	x19, [x19, #8]
   2c7c8:	cbnz	x19, 2c738 <__asan_backtrace_create_state@@Base+0x1a8>
   2c7cc:	b	2c748 <__asan_backtrace_create_state@@Base+0x1b8>
   2c7d0:	ldr	x19, [x19, #16]
   2c7d4:	cbnz	x19, 2c738 <__asan_backtrace_create_state@@Base+0x1a8>
   2c7d8:	b	2c748 <__asan_backtrace_create_state@@Base+0x1b8>
   2c7dc:	ldr	w0, [x20, #364]
   2c7e0:	add	w0, w0, #0x1
   2c7e4:	str	w0, [x20, #364]
   2c7e8:	ldr	w0, [x20, #308]
   2c7ec:	cmp	w0, #0x800
   2c7f0:	b.gt	2c748 <__asan_backtrace_create_state@@Base+0x1b8>
   2c7f4:	b	2c78c <__asan_backtrace_create_state@@Base+0x1fc>
   2c7f8:	ret
   2c7fc:	nop
   2c800:	cbz	x2, 2c8a0 <__asan_backtrace_create_state@@Base+0x310>
   2c804:	stp	x29, x30, [sp, #-48]!
   2c808:	mov	x29, sp
   2c80c:	stp	x19, x20, [sp, #16]
   2c810:	mov	x20, x1
   2c814:	mov	x19, x0
   2c818:	stp	x21, x22, [sp, #32]
   2c81c:	add	x22, x1, x2
   2c820:	ldr	x1, [x0, #256]
   2c824:	b	2c848 <__asan_backtrace_create_state@@Base+0x2b8>
   2c828:	mov	x0, x1
   2c82c:	add	x1, x1, #0x1
   2c830:	str	x1, [x19, #256]
   2c834:	add	x20, x20, #0x1
   2c838:	cmp	x20, x22
   2c83c:	strb	w21, [x19, x0]
   2c840:	strb	w21, [x19, #264]
   2c844:	b.eq	2c890 <__asan_backtrace_create_state@@Base+0x300>  // b.none
   2c848:	ldrb	w21, [x20]
   2c84c:	cmp	x1, #0xff
   2c850:	b.ne	2c828 <__asan_backtrace_create_state@@Base+0x298>  // b.any
   2c854:	ldp	x3, x2, [x19, #272]
   2c858:	strb	wzr, [x19, #255]
   2c85c:	mov	x0, x19
   2c860:	add	x20, x20, #0x1
   2c864:	blr	x3
   2c868:	ldr	x2, [x19, #320]
   2c86c:	mov	x0, #0x0                   	// #0
   2c870:	mov	x1, #0x1                   	// #1
   2c874:	str	x1, [x19, #256]
   2c878:	add	x2, x2, x1
   2c87c:	str	x2, [x19, #320]
   2c880:	strb	w21, [x19, x0]
   2c884:	cmp	x20, x22
   2c888:	strb	w21, [x19, #264]
   2c88c:	b.ne	2c848 <__asan_backtrace_create_state@@Base+0x2b8>  // b.any
   2c890:	ldp	x19, x20, [sp, #16]
   2c894:	ldp	x21, x22, [sp, #32]
   2c898:	ldp	x29, x30, [sp], #48
   2c89c:	ret
   2c8a0:	ret
   2c8a4:	nop
   2c8a8:	ldr	x3, [x0]
   2c8ac:	mov	x6, x0
   2c8b0:	ldrb	w4, [x3]
   2c8b4:	cmp	w4, #0x6e
   2c8b8:	b.eq	2c944 <__asan_backtrace_create_state@@Base+0x3b4>  // b.none
   2c8bc:	sub	w0, w4, #0x30
   2c8c0:	and	w0, w0, #0xff
   2c8c4:	cmp	w0, #0x9
   2c8c8:	b.hi	2c96c <__asan_backtrace_create_state@@Base+0x3dc>  // b.pmore
   2c8cc:	mov	w9, #0x0                   	// #0
   2c8d0:	mov	w8, #0xcccd                	// #52429
   2c8d4:	add	x3, x3, #0x1
   2c8d8:	mov	w0, #0x0                   	// #0
   2c8dc:	mov	w7, #0x7fffffff            	// #2147483647
   2c8e0:	movk	w8, #0xcccc, lsl #16
   2c8e4:	b	2c8f8 <__asan_backtrace_create_state@@Base+0x368>
   2c8e8:	umull	x1, w1, w8
   2c8ec:	lsr	x1, x1, #35
   2c8f0:	cmp	w1, w0
   2c8f4:	b.lt	2c93c <__asan_backtrace_create_state@@Base+0x3ac>  // b.tstop
   2c8f8:	str	x3, [x6]
   2c8fc:	add	w0, w0, w0, lsl #2
   2c900:	add	x3, x3, #0x1
   2c904:	ldurb	w1, [x3, #-1]
   2c908:	add	w5, w4, w0, lsl #1
   2c90c:	sub	w0, w5, #0x30
   2c910:	sub	w2, w1, #0x30
   2c914:	mov	w4, w1
   2c918:	sub	w1, w7, w2
   2c91c:	and	w2, w2, #0xff
   2c920:	cmp	w2, #0x9
   2c924:	b.ls	2c8e8 <__asan_backtrace_create_state@@Base+0x358>  // b.plast
   2c928:	cmp	w9, #0x0
   2c92c:	mov	w1, #0x30                  	// #48
   2c930:	sub	w5, w1, w5
   2c934:	csel	w0, w5, w0, ne  // ne = any
   2c938:	ret
   2c93c:	mov	w0, #0xffffffff            	// #-1
   2c940:	ret
   2c944:	add	x1, x3, #0x1
   2c948:	str	x1, [x0]
   2c94c:	ldrb	w4, [x3, #1]
   2c950:	sub	w0, w4, #0x30
   2c954:	and	w0, w0, #0xff
   2c958:	cmp	w0, #0x9
   2c95c:	b.hi	2c96c <__asan_backtrace_create_state@@Base+0x3dc>  // b.pmore
   2c960:	mov	x3, x1
   2c964:	mov	w9, #0x1                   	// #1
   2c968:	b	2c8d0 <__asan_backtrace_create_state@@Base+0x340>
   2c96c:	mov	w0, #0x0                   	// #0
   2c970:	ret
   2c974:	nop
   2c978:	mov	x1, x0
   2c97c:	ldr	w0, [x0, #40]
   2c980:	ldr	w2, [x1, #44]
   2c984:	cmp	w0, w2
   2c988:	b.ge	2c9d4 <__asan_backtrace_create_state@@Base+0x444>  // b.tcont
   2c98c:	stp	x29, x30, [sp, #-16]!
   2c990:	mov	w2, #0x18                  	// #24
   2c994:	add	w5, w0, #0x1
   2c998:	mov	x29, sp
   2c99c:	ldr	x3, [x1, #32]
   2c9a0:	smull	x2, w0, w2
   2c9a4:	mov	w4, #0x42                  	// #66
   2c9a8:	add	x0, x1, #0x18
   2c9ac:	add	x10, x3, x2
   2c9b0:	str	wzr, [x10, #4]
   2c9b4:	str	w5, [x1, #40]
   2c9b8:	str	w4, [x3, x2]
   2c9bc:	bl	2c8a8 <__asan_backtrace_create_state@@Base+0x318>
   2c9c0:	sxtw	x0, w0
   2c9c4:	str	x0, [x10, #8]
   2c9c8:	mov	x0, x10
   2c9cc:	ldp	x29, x30, [sp], #16
   2c9d0:	ret
   2c9d4:	mov	x10, #0x0                   	// #0
   2c9d8:	mov	x0, x10
   2c9dc:	ret
   2c9e0:	ldr	x1, [x0, #24]
   2c9e4:	mov	x10, x0
   2c9e8:	ldrb	w0, [x1]
   2c9ec:	cmp	w0, #0x5f
   2c9f0:	b.eq	2ca34 <__asan_backtrace_create_state@@Base+0x4a4>  // b.none
   2c9f4:	cmp	w0, #0x6e
   2c9f8:	b.eq	2ca4c <__asan_backtrace_create_state@@Base+0x4bc>  // b.none
   2c9fc:	stp	x29, x30, [sp, #-16]!
   2ca00:	add	x0, x10, #0x18
   2ca04:	mov	x29, sp
   2ca08:	bl	2c8a8 <__asan_backtrace_create_state@@Base+0x318>
   2ca0c:	adds	w0, w0, #0x1
   2ca10:	b.mi	2ca44 <__asan_backtrace_create_state@@Base+0x4b4>  // b.first
   2ca14:	ldr	x1, [x10, #24]
   2ca18:	ldrb	w2, [x1]
   2ca1c:	cmp	w2, #0x5f
   2ca20:	b.ne	2ca44 <__asan_backtrace_create_state@@Base+0x4b4>  // b.any
   2ca24:	add	x1, x1, #0x1
   2ca28:	str	x1, [x10, #24]
   2ca2c:	ldp	x29, x30, [sp], #16
   2ca30:	ret
   2ca34:	add	x1, x1, #0x1
   2ca38:	mov	w0, #0x0                   	// #0
   2ca3c:	str	x1, [x10, #24]
   2ca40:	ret
   2ca44:	mov	w0, #0xffffffff            	// #-1
   2ca48:	b	2ca2c <__asan_backtrace_create_state@@Base+0x49c>
   2ca4c:	mov	w0, #0xffffffff            	// #-1
   2ca50:	ret
   2ca54:	nop
   2ca58:	ldr	x1, [x0, #24]
   2ca5c:	ldrb	w2, [x1]
   2ca60:	cmp	w2, #0x54
   2ca64:	b.ne	2cad0 <__asan_backtrace_create_state@@Base+0x540>  // b.any
   2ca68:	stp	x29, x30, [sp, #-16]!
   2ca6c:	add	x1, x1, #0x1
   2ca70:	mov	x11, x0
   2ca74:	mov	x29, sp
   2ca78:	str	x1, [x0, #24]
   2ca7c:	bl	2c9e0 <__asan_backtrace_create_state@@Base+0x450>
   2ca80:	tbnz	w0, #31, 2cac4 <__asan_backtrace_create_state@@Base+0x534>
   2ca84:	ldp	w1, w2, [x11, #40]
   2ca88:	cmp	w1, w2
   2ca8c:	b.ge	2cac4 <__asan_backtrace_create_state@@Base+0x534>  // b.tcont
   2ca90:	mov	w2, #0x18                  	// #24
   2ca94:	add	w5, w1, #0x1
   2ca98:	ldr	x3, [x11, #32]
   2ca9c:	smull	x2, w1, w2
   2caa0:	sxtw	x1, w0
   2caa4:	mov	w4, #0x5                   	// #5
   2caa8:	add	x0, x3, x2
   2caac:	str	wzr, [x0, #4]
   2cab0:	str	w5, [x11, #40]
   2cab4:	str	w4, [x3, x2]
   2cab8:	str	x1, [x0, #8]
   2cabc:	ldp	x29, x30, [sp], #16
   2cac0:	ret
   2cac4:	mov	x0, #0x0                   	// #0
   2cac8:	ldp	x29, x30, [sp], #16
   2cacc:	ret
   2cad0:	mov	x0, #0x0                   	// #0
   2cad4:	ret
   2cad8:	mov	x10, x0
   2cadc:	cbnz	w1, 2caf8 <__asan_backtrace_create_state@@Base+0x568>
   2cae0:	ldr	x0, [x0, #24]
   2cae4:	ldrb	w1, [x0]
   2cae8:	cbz	w1, 2cb38 <__asan_backtrace_create_state@@Base+0x5a8>
   2caec:	add	x1, x0, #0x1
   2caf0:	str	x1, [x10, #24]
   2caf4:	ldrb	w1, [x0]
   2caf8:	stp	x29, x30, [sp, #-16]!
   2cafc:	cmp	w1, #0x68
   2cb00:	mov	x29, sp
   2cb04:	b.eq	2cb74 <__asan_backtrace_create_state@@Base+0x5e4>  // b.none
   2cb08:	cmp	w1, #0x76
   2cb0c:	b.ne	2cb2c <__asan_backtrace_create_state@@Base+0x59c>  // b.any
   2cb10:	add	x11, x10, #0x18
   2cb14:	mov	x0, x11
   2cb18:	bl	2c8a8 <__asan_backtrace_create_state@@Base+0x318>
   2cb1c:	ldr	x0, [x10, #24]
   2cb20:	ldrb	w1, [x0]
   2cb24:	cmp	w1, #0x5f
   2cb28:	b.eq	2cb40 <__asan_backtrace_create_state@@Base+0x5b0>  // b.none
   2cb2c:	mov	w0, #0x0                   	// #0
   2cb30:	ldp	x29, x30, [sp], #16
   2cb34:	ret
   2cb38:	mov	w0, #0x0                   	// #0
   2cb3c:	ret
   2cb40:	add	x0, x0, #0x1
   2cb44:	str	x0, [x10, #24]
   2cb48:	mov	x0, x11
   2cb4c:	bl	2c8a8 <__asan_backtrace_create_state@@Base+0x318>
   2cb50:	ldr	x0, [x10, #24]
   2cb54:	ldrb	w1, [x0]
   2cb58:	cmp	w1, #0x5f
   2cb5c:	b.ne	2cb2c <__asan_backtrace_create_state@@Base+0x59c>  // b.any
   2cb60:	add	x1, x0, #0x1
   2cb64:	str	x1, [x10, #24]
   2cb68:	mov	w0, #0x1                   	// #1
   2cb6c:	ldp	x29, x30, [sp], #16
   2cb70:	ret
   2cb74:	add	x0, x10, #0x18
   2cb78:	bl	2c8a8 <__asan_backtrace_create_state@@Base+0x318>
   2cb7c:	b	2cb50 <__asan_backtrace_create_state@@Base+0x5c0>
   2cb80:	mov	x2, x0
   2cb84:	mov	w3, #0x56                  	// #86
   2cb88:	mov	w0, #0x4b                  	// #75
   2cb8c:	ldrb	w1, [x2]
   2cb90:	cmp	w1, #0x72
   2cb94:	ccmp	w1, w3, #0x4, ne  // ne = any
   2cb98:	ccmp	w1, w0, #0x4, ne  // ne = any
   2cb9c:	mov	w0, #0x1                   	// #1
   2cba0:	b.eq	2cbb0 <__asan_backtrace_create_state@@Base+0x620>  // b.none
   2cba4:	cmp	w1, #0x44
   2cba8:	mov	w0, #0x0                   	// #0
   2cbac:	b.eq	2cbb4 <__asan_backtrace_create_state@@Base+0x624>  // b.none
   2cbb0:	ret
   2cbb4:	ldrb	w0, [x2, #1]
   2cbb8:	and	w1, w0, #0xffffffdf
   2cbbc:	sub	w0, w0, #0x77
   2cbc0:	cmp	w1, #0x4f
   2cbc4:	and	w0, w0, #0xff
   2cbc8:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   2cbcc:	cset	w0, ls  // ls = plast
   2cbd0:	ret
   2cbd4:	nop
   2cbd8:	ldr	x1, [x0, #24]
   2cbdc:	mov	x10, x0
   2cbe0:	ldrb	w0, [x1]
   2cbe4:	cmp	w0, #0x5f
   2cbe8:	b.eq	2cbf4 <__asan_backtrace_create_state@@Base+0x664>  // b.none
   2cbec:	mov	w0, #0x1                   	// #1
   2cbf0:	ret
   2cbf4:	stp	x29, x30, [sp, #-16]!
   2cbf8:	add	x0, x1, #0x1
   2cbfc:	mov	x29, sp
   2cc00:	str	x0, [x10, #24]
   2cc04:	ldrb	w0, [x1, #1]
   2cc08:	cmp	w0, #0x5f
   2cc0c:	b.eq	2cc30 <__asan_backtrace_create_state@@Base+0x6a0>  // b.none
   2cc10:	add	x0, x10, #0x18
   2cc14:	bl	2c8a8 <__asan_backtrace_create_state@@Base+0x318>
   2cc18:	mov	w1, w0
   2cc1c:	mov	w0, #0x0                   	// #0
   2cc20:	tbnz	w1, #31, 2cc28 <__asan_backtrace_create_state@@Base+0x698>
   2cc24:	mov	w0, #0x1                   	// #1
   2cc28:	ldp	x29, x30, [sp], #16
   2cc2c:	ret
   2cc30:	mov	x0, x10
   2cc34:	add	x1, x1, #0x2
   2cc38:	str	x1, [x0, #24]!
   2cc3c:	bl	2c8a8 <__asan_backtrace_create_state@@Base+0x318>
   2cc40:	tbnz	w0, #31, 2cc70 <__asan_backtrace_create_state@@Base+0x6e0>
   2cc44:	cmp	w0, #0x9
   2cc48:	b.le	2cc24 <__asan_backtrace_create_state@@Base+0x694>
   2cc4c:	ldr	x1, [x10, #24]
   2cc50:	mov	w0, #0x0                   	// #0
   2cc54:	ldrb	w2, [x1]
   2cc58:	cmp	w2, #0x5f
   2cc5c:	b.ne	2cc28 <__asan_backtrace_create_state@@Base+0x698>  // b.any
   2cc60:	add	x1, x1, #0x1
   2cc64:	mov	w0, #0x1                   	// #1
   2cc68:	str	x1, [x10, #24]
   2cc6c:	b	2cc28 <__asan_backtrace_create_state@@Base+0x698>
   2cc70:	mov	w0, #0x0                   	// #0
   2cc74:	b	2cc28 <__asan_backtrace_create_state@@Base+0x698>
   2cc78:	cbnz	x0, 2cc94 <__asan_backtrace_create_state@@Base+0x704>
   2cc7c:	b	2cca0 <__asan_backtrace_create_state@@Base+0x710>
   2cc80:	cmp	w1, #0x0
   2cc84:	b.le	2cca8 <__asan_backtrace_create_state@@Base+0x718>
   2cc88:	ldr	x0, [x0, #16]
   2cc8c:	sub	w1, w1, #0x1
   2cc90:	cbz	x0, 2cca4 <__asan_backtrace_create_state@@Base+0x714>
   2cc94:	ldr	w2, [x0]
   2cc98:	cmp	w2, #0x2f
   2cc9c:	b.eq	2cc80 <__asan_backtrace_create_state@@Base+0x6f0>  // b.none
   2cca0:	mov	x0, #0x0                   	// #0
   2cca4:	ret
   2cca8:	b.ne	2cca0 <__asan_backtrace_create_state@@Base+0x710>  // b.any
   2ccac:	ldr	x0, [x0, #8]
   2ccb0:	ret
   2ccb4:	nop
   2ccb8:	mov	x2, x0
   2ccbc:	ldr	x0, [x0, #288]
   2ccc0:	cbz	x0, 2ccd8 <__asan_backtrace_create_state@@Base+0x748>
   2ccc4:	ldr	x1, [x1]
   2ccc8:	ldr	x0, [x0, #8]
   2cccc:	ldr	x0, [x0, #16]
   2ccd0:	tbnz	w1, #31, 2cce0 <__asan_backtrace_create_state@@Base+0x750>
   2ccd4:	b	2cc78 <__asan_backtrace_create_state@@Base+0x6e8>
   2ccd8:	mov	w1, #0x1                   	// #1
   2ccdc:	str	w1, [x2, #304]
   2cce0:	ret
   2cce4:	nop
   2cce8:	cbz	x1, 2cdbc <__asan_backtrace_create_state@@Base+0x82c>
   2ccec:	stp	x29, x30, [sp, #-48]!
   2ccf0:	mov	x29, sp
   2ccf4:	stp	x21, x22, [sp, #32]
   2ccf8:	mov	x21, #0x8001                	// #32769
   2ccfc:	movk	x21, #0x410, lsl #16
   2cd00:	movk	x21, #0xc600, lsl #32
   2cd04:	stp	x19, x20, [sp, #16]
   2cd08:	mov	x20, x0
   2cd0c:	mov	x19, x1
   2cd10:	mov	x22, #0x1                   	// #1
   2cd14:	movk	x21, #0x19, lsl #48
   2cd18:	ldr	w2, [x19]
   2cd1c:	cmp	w2, #0x8
   2cd20:	b.eq	2cd38 <__asan_backtrace_create_state@@Base+0x7a8>  // b.none
   2cd24:	b.hi	2cd8c <__asan_backtrace_create_state@@Base+0x7fc>  // b.pmore
   2cd28:	cmp	w2, #0x6
   2cd2c:	b.eq	2cd40 <__asan_backtrace_create_state@@Base+0x7b0>  // b.none
   2cd30:	cmp	w2, #0x7
   2cd34:	b.ne	2cd54 <__asan_backtrace_create_state@@Base+0x7c4>  // b.any
   2cd38:	ldr	x19, [x19, #16]
   2cd3c:	cbnz	x19, 2cd18 <__asan_backtrace_create_state@@Base+0x788>
   2cd40:	mov	x0, #0x0                   	// #0
   2cd44:	ldp	x19, x20, [sp, #16]
   2cd48:	ldp	x21, x22, [sp, #32]
   2cd4c:	ldp	x29, x30, [sp], #48
   2cd50:	ret
   2cd54:	cbz	w2, 2cd40 <__asan_backtrace_create_state@@Base+0x7b0>
   2cd58:	cmp	w2, #0x5
   2cd5c:	b.ne	2cda8 <__asan_backtrace_create_state@@Base+0x818>  // b.any
   2cd60:	add	x1, x19, #0x8
   2cd64:	mov	x0, x20
   2cd68:	bl	2ccb8 <__asan_backtrace_create_state@@Base+0x728>
   2cd6c:	cbz	x0, 2cd40 <__asan_backtrace_create_state@@Base+0x7b0>
   2cd70:	ldr	w1, [x0]
   2cd74:	cmp	w1, #0x2f
   2cd78:	b.ne	2cd40 <__asan_backtrace_create_state@@Base+0x7b0>  // b.any
   2cd7c:	ldp	x19, x20, [sp, #16]
   2cd80:	ldp	x21, x22, [sp, #32]
   2cd84:	ldp	x29, x30, [sp], #48
   2cd88:	ret
   2cd8c:	sub	w2, w2, #0x18
   2cd90:	cmp	w2, #0x34
   2cd94:	b.hi	2cda8 <__asan_backtrace_create_state@@Base+0x818>  // b.pmore
   2cd98:	lsl	x2, x22, x2
   2cd9c:	tst	x2, x21
   2cda0:	b.ne	2cd40 <__asan_backtrace_create_state@@Base+0x7b0>  // b.any
   2cda4:	tbnz	w2, #27, 2cd38 <__asan_backtrace_create_state@@Base+0x7a8>
   2cda8:	ldr	x1, [x19, #8]
   2cdac:	mov	x0, x20
   2cdb0:	bl	2cce8 <__asan_backtrace_create_state@@Base+0x758>
   2cdb4:	cbz	x0, 2cd38 <__asan_backtrace_create_state@@Base+0x7a8>
   2cdb8:	b	2cd44 <__asan_backtrace_create_state@@Base+0x7b4>
   2cdbc:	mov	x0, #0x0                   	// #0
   2cdc0:	ret
   2cdc4:	nop
   2cdc8:	stp	x29, x30, [sp, #-48]!
   2cdcc:	mov	x29, sp
   2cdd0:	stp	x19, x20, [sp, #16]
   2cdd4:	mov	x19, x2
   2cdd8:	add	x2, x1, #0x1
   2cddc:	stp	x21, x22, [sp, #32]
   2cde0:	mov	x21, x1
   2cde4:	mov	x22, x0
   2cde8:	ldp	x1, x20, [x19, #8]
   2cdec:	add	x1, x2, x1
   2cdf0:	ldr	w2, [x19, #24]
   2cdf4:	cmp	x1, x20
   2cdf8:	b.hi	2ce3c <__asan_backtrace_create_state@@Base+0x8ac>  // b.pmore
   2cdfc:	cbnz	w2, 2ce2c <__asan_backtrace_create_state@@Base+0x89c>
   2ce00:	ldp	x3, x0, [x19]
   2ce04:	mov	x1, x22
   2ce08:	mov	x2, x21
   2ce0c:	add	x0, x3, x0
   2ce10:	bl	67d0 <__asan_internal_memcpy@plt>
   2ce14:	ldp	x0, x1, [x19]
   2ce18:	add	x0, x0, x21
   2ce1c:	strb	wzr, [x0, x1]
   2ce20:	ldr	x1, [x19, #8]
   2ce24:	add	x1, x1, x21
   2ce28:	str	x1, [x19, #8]
   2ce2c:	ldp	x19, x20, [sp, #16]
   2ce30:	ldp	x21, x22, [sp, #32]
   2ce34:	ldp	x29, x30, [sp], #48
   2ce38:	ret
   2ce3c:	cbnz	w2, 2ce2c <__asan_backtrace_create_state@@Base+0x89c>
   2ce40:	cbz	x20, 2ce78 <__asan_backtrace_create_state@@Base+0x8e8>
   2ce44:	nop
   2ce48:	lsl	x20, x20, #1
   2ce4c:	cmp	x1, x20
   2ce50:	b.hi	2ce48 <__asan_backtrace_create_state@@Base+0x8b8>  // b.pmore
   2ce54:	ldr	x0, [x19]
   2ce58:	mov	x1, x20
   2ce5c:	bl	6c40 <realloc@plt>
   2ce60:	cbz	x0, 2ce88 <__asan_backtrace_create_state@@Base+0x8f8>
   2ce64:	ldr	w2, [x19, #24]
   2ce68:	str	x0, [x19]
   2ce6c:	str	x20, [x19, #16]
   2ce70:	cbz	w2, 2ce00 <__asan_backtrace_create_state@@Base+0x870>
   2ce74:	b	2ce2c <__asan_backtrace_create_state@@Base+0x89c>
   2ce78:	cmp	x1, #0x2
   2ce7c:	mov	x20, #0x2                   	// #2
   2ce80:	b.hi	2ce48 <__asan_backtrace_create_state@@Base+0x8b8>  // b.pmore
   2ce84:	b	2ce54 <__asan_backtrace_create_state@@Base+0x8c4>
   2ce88:	ldr	x0, [x19]
   2ce8c:	bl	66f0 <free@plt>
   2ce90:	stp	xzr, xzr, [x19]
   2ce94:	mov	w0, #0x1                   	// #1
   2ce98:	str	xzr, [x19, #16]
   2ce9c:	str	w0, [x19, #24]
   2cea0:	b	2ce2c <__asan_backtrace_create_state@@Base+0x89c>
   2cea4:	nop
   2cea8:	stp	x29, x30, [sp, #-80]!
   2ceac:	mov	w2, w1
   2ceb0:	adrp	x3, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   2ceb4:	mov	x29, sp
   2ceb8:	add	x1, x3, #0xc30
   2cebc:	stp	x19, x20, [sp, #16]
   2cec0:	add	x20, sp, #0x30
   2cec4:	mov	x19, x0
   2cec8:	mov	x0, x20
   2cecc:	bl	6900 <sprintf@plt>
   2ced0:	mov	x0, x20
   2ced4:	bl	67e0 <__asan_internal_strlen@plt>
   2ced8:	cbz	x0, 2cf58 <__asan_backtrace_create_state@@Base+0x9c8>
   2cedc:	stp	x21, x22, [sp, #32]
   2cee0:	add	x21, x20, x0
   2cee4:	ldr	x1, [x19, #256]
   2cee8:	b	2cf0c <__asan_backtrace_create_state@@Base+0x97c>
   2ceec:	mov	x2, x1
   2cef0:	add	x1, x1, #0x1
   2cef4:	str	x1, [x19, #256]
   2cef8:	add	x20, x20, #0x1
   2cefc:	cmp	x21, x20
   2cf00:	strb	w22, [x19, x2]
   2cf04:	strb	w22, [x19, #264]
   2cf08:	b.eq	2cf54 <__asan_backtrace_create_state@@Base+0x9c4>  // b.none
   2cf0c:	ldrb	w22, [x20]
   2cf10:	cmp	x1, #0xff
   2cf14:	b.ne	2ceec <__asan_backtrace_create_state@@Base+0x95c>  // b.any
   2cf18:	ldp	x3, x2, [x19, #272]
   2cf1c:	strb	wzr, [x19, #255]
   2cf20:	mov	x0, x19
   2cf24:	add	x20, x20, #0x1
   2cf28:	blr	x3
   2cf2c:	ldr	x0, [x19, #320]
   2cf30:	mov	x2, #0x0                   	// #0
   2cf34:	mov	x1, #0x1                   	// #1
   2cf38:	str	x1, [x19, #256]
   2cf3c:	add	x0, x0, x1
   2cf40:	str	x0, [x19, #320]
   2cf44:	strb	w22, [x19, x2]
   2cf48:	cmp	x21, x20
   2cf4c:	strb	w22, [x19, #264]
   2cf50:	b.ne	2cf0c <__asan_backtrace_create_state@@Base+0x97c>  // b.any
   2cf54:	ldp	x21, x22, [sp, #32]
   2cf58:	ldp	x19, x20, [sp, #16]
   2cf5c:	ldp	x29, x30, [sp], #80
   2cf60:	ret
   2cf64:	nop
   2cf68:	stp	x29, x30, [sp, #-240]!
   2cf6c:	mov	x29, sp
   2cf70:	stp	x19, x20, [sp, #16]
   2cf74:	mov	x19, x0
   2cf78:	cbz	x2, 2d000 <__asan_backtrace_create_state@@Base+0xa70>
   2cf7c:	stp	x21, x22, [sp, #32]
   2cf80:	ldr	w22, [x0, #304]
   2cf84:	cbnz	w22, 2cfc8 <__asan_backtrace_create_state@@Base+0xa38>
   2cf88:	ldr	w0, [x2]
   2cf8c:	mov	x20, x2
   2cf90:	cmp	w0, #0x50
   2cf94:	b.ls	2cfa8 <__asan_backtrace_create_state@@Base+0xa18>  // b.plast
   2cf98:	mov	w0, #0x1                   	// #1
   2cf9c:	ldp	x21, x22, [sp, #32]
   2cfa0:	str	w0, [x19, #304]
   2cfa4:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2cfa8:	mov	w21, w1
   2cfac:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2cfb0:	add	x1, x1, #0x5a0
   2cfb4:	stp	x23, x24, [sp, #48]
   2cfb8:	ldrh	w1, [x1, w0, uxtw #1]
   2cfbc:	adr	x2, 2cfc8 <__asan_backtrace_create_state@@Base+0xa38>
   2cfc0:	add	x1, x2, w1, sxth #2
   2cfc4:	br	x1
   2cfc8:	ldp	x21, x22, [sp, #32]
   2cfcc:	ldp	x19, x20, [sp, #16]
   2cfd0:	ldp	x29, x30, [sp], #240
   2cfd4:	ret
   2cfd8:	ldr	x0, [x20, #16]
   2cfdc:	ldr	w1, [x0]
   2cfe0:	cmp	w1, #0x3b
   2cfe4:	b.ne	2cff8 <__asan_backtrace_create_state@@Base+0xa68>  // b.any
   2cfe8:	ldr	x0, [x0, #16]
   2cfec:	ldr	w0, [x0]
   2cff0:	cmp	w0, #0x3c
   2cff4:	b.eq	305c0 <__asan_backtrace_create_state@@Base+0x4030>  // b.none
   2cff8:	ldp	x21, x22, [sp, #32]
   2cffc:	ldp	x23, x24, [sp, #48]
   2d000:	mov	w0, #0x1                   	// #1
   2d004:	str	w0, [x19, #304]
   2d008:	ldp	x19, x20, [sp, #16]
   2d00c:	ldp	x29, x30, [sp], #240
   2d010:	ret
   2d014:	ldp	x1, x2, [x19, #288]
   2d018:	add	x0, sp, #0x70
   2d01c:	stp	x2, x20, [sp, #112]
   2d020:	str	wzr, [sp, #128]
   2d024:	str	x1, [sp, #136]
   2d028:	str	x0, [x19, #296]
   2d02c:	ldr	x2, [x20, #8]
   2d030:	mov	x0, x19
   2d034:	mov	w1, w21
   2d038:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2d03c:	ldr	w0, [sp, #128]
   2d040:	cbz	w0, 2f630 <__asan_backtrace_create_state@@Base+0x30a0>
   2d044:	ldr	x0, [sp, #112]
   2d048:	str	x0, [x19, #296]
   2d04c:	cbz	w22, 2ee08 <__asan_backtrace_create_state@@Base+0x2878>
   2d050:	ldp	x21, x22, [sp, #32]
   2d054:	str	x23, [x19, #288]
   2d058:	ldp	x23, x24, [sp, #48]
   2d05c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2d060:	ldr	x4, [x19, #296]
   2d064:	cbz	x4, 2d1a0 <__asan_backtrace_create_state@@Base+0xc10>
   2d068:	mov	x1, x4
   2d06c:	nop
   2d070:	ldr	w2, [x1, #16]
   2d074:	cbnz	w2, 2d094 <__asan_backtrace_create_state@@Base+0xb04>
   2d078:	ldr	x2, [x1, #8]
   2d07c:	ldr	w2, [x2]
   2d080:	sub	w3, w2, #0x19
   2d084:	cmp	w3, #0x2
   2d088:	b.hi	30084 <__asan_backtrace_create_state@@Base+0x3af4>  // b.pmore
   2d08c:	cmp	w0, w2
   2d090:	b.eq	3008c <__asan_backtrace_create_state@@Base+0x3afc>  // b.none
   2d094:	ldr	x1, [x1]
   2d098:	cbnz	x1, 2d070 <__asan_backtrace_create_state@@Base+0xae0>
   2d09c:	b	2d1a0 <__asan_backtrace_create_state@@Base+0xc10>
   2d0a0:	ldp	x23, x24, [sp, #48]
   2d0a4:	b	2cf98 <__asan_backtrace_create_state@@Base+0xa08>
   2d0a8:	ldr	x2, [x20, #8]
   2d0ac:	mov	w22, #0x0                   	// #0
   2d0b0:	ldr	w1, [x2]
   2d0b4:	cmp	w1, #0x27
   2d0b8:	b.eq	2fbe4 <__asan_backtrace_create_state@@Base+0x3654>  // b.none
   2d0bc:	ldr	x1, [x19, #256]
   2d0c0:	add	x0, x1, #0x1
   2d0c4:	cmp	x1, #0xff
   2d0c8:	b.ne	2d0f4 <__asan_backtrace_create_state@@Base+0xb64>  // b.any
   2d0cc:	ldp	x3, x2, [x19, #272]
   2d0d0:	strb	wzr, [x19, #255]
   2d0d4:	mov	x0, x19
   2d0d8:	blr	x3
   2d0dc:	ldr	x3, [x19, #320]
   2d0e0:	mov	x0, #0x1                   	// #1
   2d0e4:	mov	x1, #0x0                   	// #0
   2d0e8:	add	x3, x3, x0
   2d0ec:	ldr	x2, [x20, #8]
   2d0f0:	str	x3, [x19, #320]
   2d0f4:	str	x0, [x19, #256]
   2d0f8:	mov	w0, #0x28                  	// #40
   2d0fc:	strb	w0, [x19, x1]
   2d100:	mov	w1, w21
   2d104:	strb	w0, [x19, #264]
   2d108:	mov	x0, x19
   2d10c:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2d110:	ldr	x1, [x19, #256]
   2d114:	cmp	x1, #0xff
   2d118:	b.eq	2ff08 <__asan_backtrace_create_state@@Base+0x3978>  // b.none
   2d11c:	add	x3, x1, #0x1
   2d120:	str	x3, [x19, #256]
   2d124:	mov	w0, #0x29                  	// #41
   2d128:	strb	w0, [x19, x1]
   2d12c:	strb	w0, [x19, #264]
   2d130:	ldr	w0, [x20]
   2d134:	cmp	w0, #0x3e
   2d138:	b.eq	300c4 <__asan_backtrace_create_state@@Base+0x3b34>  // b.none
   2d13c:	cmp	w22, #0x8
   2d140:	b.eq	2fe6c <__asan_backtrace_create_state@@Base+0x38dc>  // b.none
   2d144:	ldr	x2, [x20, #16]
   2d148:	mov	w1, w21
   2d14c:	mov	x0, x19
   2d150:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2d154:	ldp	x21, x22, [sp, #32]
   2d158:	ldp	x23, x24, [sp, #48]
   2d15c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2d160:	ldr	w2, [x19, #312]
   2d164:	ldr	x0, [x20, #8]
   2d168:	ldr	w1, [x0]
   2d16c:	cbnz	w2, 2d17c <__asan_backtrace_create_state@@Base+0xbec>
   2d170:	cmp	w1, #0x5
   2d174:	mov	w22, #0x0                   	// #0
   2d178:	b.eq	30670 <__asan_backtrace_create_state@@Base+0x40e0>  // b.none
   2d17c:	cmp	w1, #0x23
   2d180:	ldr	x4, [x19, #296]
   2d184:	b.eq	2f6f4 <__asan_backtrace_create_state@@Base+0x3164>  // b.none
   2d188:	ldr	w2, [x20]
   2d18c:	cmp	w2, w1
   2d190:	b.eq	2f6f4 <__asan_backtrace_create_state@@Base+0x3164>  // b.none
   2d194:	cmp	w1, #0x24
   2d198:	b.eq	2ede4 <__asan_backtrace_create_state@@Base+0x2854>  // b.none
   2d19c:	nop
   2d1a0:	ldr	x1, [x19, #288]
   2d1a4:	add	x0, sp, #0x70
   2d1a8:	stp	x4, x20, [sp, #112]
   2d1ac:	str	wzr, [sp, #128]
   2d1b0:	str	x1, [sp, #136]
   2d1b4:	str	x0, [x19, #296]
   2d1b8:	b	2d02c <__asan_backtrace_create_state@@Base+0xa9c>
   2d1bc:	ldr	x2, [x20, #8]
   2d1c0:	mov	w1, w21
   2d1c4:	mov	x0, x19
   2d1c8:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2d1cc:	tbz	w21, #2, 2fdf0 <__asan_backtrace_create_state@@Base+0x3860>
   2d1d0:	ldr	x1, [x19, #256]
   2d1d4:	add	x0, x1, #0x1
   2d1d8:	cmp	x1, #0xff
   2d1dc:	b.ne	2d204 <__asan_backtrace_create_state@@Base+0xc74>  // b.any
   2d1e0:	ldp	x3, x2, [x19, #272]
   2d1e4:	strb	wzr, [x19, #255]
   2d1e8:	mov	x0, x19
   2d1ec:	blr	x3
   2d1f0:	ldr	x2, [x19, #320]
   2d1f4:	mov	x0, #0x1                   	// #1
   2d1f8:	mov	x1, #0x0                   	// #0
   2d1fc:	add	x2, x2, x0
   2d200:	str	x2, [x19, #320]
   2d204:	str	x0, [x19, #256]
   2d208:	mov	w0, #0x2e                  	// #46
   2d20c:	strb	w0, [x19, x1]
   2d210:	strb	w0, [x19, #264]
   2d214:	ldr	x23, [x20, #16]
   2d218:	ldr	w0, [x23]
   2d21c:	cmp	w0, #0x47
   2d220:	b.eq	301f4 <__asan_backtrace_create_state@@Base+0x3c64>  // b.none
   2d224:	mov	x2, x23
   2d228:	mov	w1, w21
   2d22c:	mov	x0, x19
   2d230:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2d234:	ldp	x21, x22, [sp, #32]
   2d238:	ldp	x23, x24, [sp, #48]
   2d23c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2d240:	ldp	x3, x4, [x19, #288]
   2d244:	add	x0, sp, #0x70
   2d248:	ldr	x2, [x20, #16]
   2d24c:	str	x0, [x19, #296]
   2d250:	mov	w1, w21
   2d254:	mov	x0, x19
   2d258:	stp	x4, x20, [sp, #112]
   2d25c:	str	wzr, [sp, #128]
   2d260:	str	x3, [sp, #136]
   2d264:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2d268:	ldr	w0, [sp, #128]
   2d26c:	cbz	w0, 2fddc <__asan_backtrace_create_state@@Base+0x384c>
   2d270:	ldr	x0, [sp, #112]
   2d274:	ldp	x21, x22, [sp, #32]
   2d278:	ldp	x23, x24, [sp, #48]
   2d27c:	str	x0, [x19, #296]
   2d280:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2d284:	ldr	x2, [x20, #8]
   2d288:	cbz	x2, 2d298 <__asan_backtrace_create_state@@Base+0xd08>
   2d28c:	mov	w1, w21
   2d290:	mov	x0, x19
   2d294:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2d298:	ldr	x0, [x20, #16]
   2d29c:	cbz	x0, 3006c <__asan_backtrace_create_state@@Base+0x3adc>
   2d2a0:	ldr	x1, [x19, #256]
   2d2a4:	stp	x25, x26, [sp, #64]
   2d2a8:	cmp	x1, #0xfd
   2d2ac:	b.ls	2d2d0 <__asan_backtrace_create_state@@Base+0xd40>  // b.plast
   2d2b0:	strb	wzr, [x19, x1]
   2d2b4:	mov	x0, x19
   2d2b8:	ldp	x3, x2, [x19, #272]
   2d2bc:	blr	x3
   2d2c0:	str	xzr, [x19, #256]
   2d2c4:	ldr	x0, [x19, #320]
   2d2c8:	add	x0, x0, #0x1
   2d2cc:	str	x0, [x19, #320]
   2d2d0:	adrp	x25, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d2d4:	add	x25, x25, #0x990
   2d2d8:	mov	x0, x25
   2d2dc:	bl	67e0 <__asan_internal_strlen@plt>
   2d2e0:	ldr	x22, [x19, #256]
   2d2e4:	cbz	x0, 2f67c <__asan_backtrace_create_state@@Base+0x30ec>
   2d2e8:	adrp	x23, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d2ec:	add	x25, x0, x25
   2d2f0:	add	x23, x23, #0x991
   2d2f4:	mov	w24, #0x2c                  	// #44
   2d2f8:	b	2d31c <__asan_backtrace_create_state@@Base+0xd8c>
   2d2fc:	mov	x0, x22
   2d300:	add	x22, x22, #0x1
   2d304:	str	x22, [x19, #256]
   2d308:	cmp	x25, x23
   2d30c:	strb	w24, [x19, x0]
   2d310:	strb	w24, [x19, #264]
   2d314:	b.eq	2f67c <__asan_backtrace_create_state@@Base+0x30ec>  // b.none
   2d318:	ldrb	w24, [x23], #1
   2d31c:	cmp	x22, #0xff
   2d320:	b.ne	2d2fc <__asan_backtrace_create_state@@Base+0xd6c>  // b.any
   2d324:	ldp	x3, x2, [x19, #272]
   2d328:	strb	wzr, [x19, #255]
   2d32c:	mov	x1, x22
   2d330:	mov	x0, x19
   2d334:	mov	x22, #0x1                   	// #1
   2d338:	blr	x3
   2d33c:	ldr	x1, [x19, #320]
   2d340:	mov	x0, #0x0                   	// #0
   2d344:	add	x1, x1, x22
   2d348:	str	x1, [x19, #320]
   2d34c:	b	2d304 <__asan_backtrace_create_state@@Base+0xd74>
   2d350:	ldr	x2, [x20, #16]
   2d354:	mov	w1, w21
   2d358:	mov	x0, x19
   2d35c:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2d360:	ldp	x21, x22, [sp, #32]
   2d364:	ldp	x23, x24, [sp, #48]
   2d368:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2d36c:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d370:	add	x24, x24, #0xa68
   2d374:	mov	x0, x24
   2d378:	bl	67e0 <__asan_internal_strlen@plt>
   2d37c:	cbz	x0, 2f2f0 <__asan_backtrace_create_state@@Base+0x2d60>
   2d380:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d384:	add	x24, x0, x24
   2d388:	add	x22, x22, #0xa69
   2d38c:	mov	w23, #0x67                  	// #103
   2d390:	ldr	x1, [x19, #256]
   2d394:	b	2d3b8 <__asan_backtrace_create_state@@Base+0xe28>
   2d398:	mov	x0, x1
   2d39c:	add	x1, x1, #0x1
   2d3a0:	str	x1, [x19, #256]
   2d3a4:	cmp	x22, x24
   2d3a8:	strb	w23, [x19, x0]
   2d3ac:	strb	w23, [x19, #264]
   2d3b0:	b.eq	2f2f0 <__asan_backtrace_create_state@@Base+0x2d60>  // b.none
   2d3b4:	ldrb	w23, [x22], #1
   2d3b8:	cmp	x1, #0xff
   2d3bc:	b.ne	2d398 <__asan_backtrace_create_state@@Base+0xe08>  // b.any
   2d3c0:	ldp	x3, x2, [x19, #272]
   2d3c4:	strb	wzr, [x19, #255]
   2d3c8:	mov	x0, x19
   2d3cc:	blr	x3
   2d3d0:	ldr	x2, [x19, #320]
   2d3d4:	mov	x1, #0x1                   	// #1
   2d3d8:	mov	x0, #0x0                   	// #0
   2d3dc:	add	x2, x2, x1
   2d3e0:	str	x2, [x19, #320]
   2d3e4:	b	2d3a0 <__asan_backtrace_create_state@@Base+0xe10>
   2d3e8:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d3ec:	add	x24, x24, #0xa88
   2d3f0:	mov	x0, x24
   2d3f4:	bl	67e0 <__asan_internal_strlen@plt>
   2d3f8:	cbz	x0, 2f178 <__asan_backtrace_create_state@@Base+0x2be8>
   2d3fc:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d400:	add	x24, x0, x24
   2d404:	add	x22, x22, #0xa89
   2d408:	mov	w23, #0x7b                  	// #123
   2d40c:	ldr	x1, [x19, #256]
   2d410:	b	2d434 <__asan_backtrace_create_state@@Base+0xea4>
   2d414:	mov	x0, x1
   2d418:	add	x1, x1, #0x1
   2d41c:	str	x1, [x19, #256]
   2d420:	cmp	x24, x22
   2d424:	strb	w23, [x19, x0]
   2d428:	strb	w23, [x19, #264]
   2d42c:	b.eq	2f178 <__asan_backtrace_create_state@@Base+0x2be8>  // b.none
   2d430:	ldrb	w23, [x22], #1
   2d434:	cmp	x1, #0xff
   2d438:	b.ne	2d414 <__asan_backtrace_create_state@@Base+0xe84>  // b.any
   2d43c:	ldp	x3, x2, [x19, #272]
   2d440:	strb	wzr, [x19, #255]
   2d444:	mov	x0, x19
   2d448:	blr	x3
   2d44c:	ldr	x2, [x19, #320]
   2d450:	mov	x1, #0x1                   	// #1
   2d454:	mov	x0, #0x0                   	// #0
   2d458:	add	x2, x2, x1
   2d45c:	str	x2, [x19, #320]
   2d460:	b	2d41c <__asan_backtrace_create_state@@Base+0xe8c>
   2d464:	adrp	x23, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d468:	add	x23, x23, #0xaa0
   2d46c:	mov	x0, x23
   2d470:	bl	67e0 <__asan_internal_strlen@plt>
   2d474:	cbz	x0, 2f0a4 <__asan_backtrace_create_state@@Base+0x2b14>
   2d478:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d47c:	add	x23, x0, x23
   2d480:	add	x21, x21, #0xaa1
   2d484:	mov	w22, #0x7b                  	// #123
   2d488:	ldr	x1, [x19, #256]
   2d48c:	b	2d4b0 <__asan_backtrace_create_state@@Base+0xf20>
   2d490:	mov	x0, x1
   2d494:	add	x1, x1, #0x1
   2d498:	str	x1, [x19, #256]
   2d49c:	cmp	x21, x23
   2d4a0:	strb	w22, [x19, x0]
   2d4a4:	strb	w22, [x19, #264]
   2d4a8:	b.eq	2f0a4 <__asan_backtrace_create_state@@Base+0x2b14>  // b.none
   2d4ac:	ldrb	w22, [x21], #1
   2d4b0:	cmp	x1, #0xff
   2d4b4:	b.ne	2d490 <__asan_backtrace_create_state@@Base+0xf00>  // b.any
   2d4b8:	ldp	x3, x2, [x19, #272]
   2d4bc:	strb	wzr, [x19, #255]
   2d4c0:	mov	x0, x19
   2d4c4:	blr	x3
   2d4c8:	ldr	x2, [x19, #320]
   2d4cc:	mov	x1, #0x1                   	// #1
   2d4d0:	mov	x0, #0x0                   	// #0
   2d4d4:	add	x2, x2, x1
   2d4d8:	str	x2, [x19, #320]
   2d4dc:	b	2d498 <__asan_backtrace_create_state@@Base+0xf08>
   2d4e0:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d4e4:	add	x24, x24, #0x940
   2d4e8:	mov	x0, x24
   2d4ec:	bl	67e0 <__asan_internal_strlen@plt>
   2d4f0:	cbz	x0, 2f088 <__asan_backtrace_create_state@@Base+0x2af8>
   2d4f4:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d4f8:	add	x24, x0, x24
   2d4fc:	add	x22, x22, #0x941
   2d500:	mov	w23, #0x74                  	// #116
   2d504:	ldr	x1, [x19, #256]
   2d508:	b	2d52c <__asan_backtrace_create_state@@Base+0xf9c>
   2d50c:	mov	x0, x1
   2d510:	add	x1, x1, #0x1
   2d514:	str	x1, [x19, #256]
   2d518:	cmp	x24, x22
   2d51c:	strb	w23, [x19, x0]
   2d520:	strb	w23, [x19, #264]
   2d524:	b.eq	2f088 <__asan_backtrace_create_state@@Base+0x2af8>  // b.none
   2d528:	ldrb	w23, [x22], #1
   2d52c:	cmp	x1, #0xff
   2d530:	b.ne	2d50c <__asan_backtrace_create_state@@Base+0xf7c>  // b.any
   2d534:	ldp	x3, x2, [x19, #272]
   2d538:	strb	wzr, [x19, #255]
   2d53c:	mov	x0, x19
   2d540:	blr	x3
   2d544:	ldr	x2, [x19, #320]
   2d548:	mov	x1, #0x1                   	// #1
   2d54c:	mov	x0, #0x0                   	// #0
   2d550:	add	x2, x2, x1
   2d554:	str	x2, [x19, #320]
   2d558:	b	2d514 <__asan_backtrace_create_state@@Base+0xf84>
   2d55c:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d560:	add	x24, x24, #0x7b8
   2d564:	mov	x0, x24
   2d568:	bl	67e0 <__asan_internal_strlen@plt>
   2d56c:	cbz	x0, 2f06c <__asan_backtrace_create_state@@Base+0x2adc>
   2d570:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d574:	add	x24, x0, x24
   2d578:	add	x22, x22, #0x7b9
   2d57c:	mov	w23, #0x74                  	// #116
   2d580:	ldr	x1, [x19, #256]
   2d584:	b	2d5a8 <__asan_backtrace_create_state@@Base+0x1018>
   2d588:	mov	x0, x1
   2d58c:	add	x1, x1, #0x1
   2d590:	str	x1, [x19, #256]
   2d594:	cmp	x24, x22
   2d598:	strb	w23, [x19, x0]
   2d59c:	strb	w23, [x19, #264]
   2d5a0:	b.eq	2f06c <__asan_backtrace_create_state@@Base+0x2adc>  // b.none
   2d5a4:	ldrb	w23, [x22], #1
   2d5a8:	cmp	x1, #0xff
   2d5ac:	b.ne	2d588 <__asan_backtrace_create_state@@Base+0xff8>  // b.any
   2d5b0:	ldp	x3, x2, [x19, #272]
   2d5b4:	strb	wzr, [x19, #255]
   2d5b8:	mov	x0, x19
   2d5bc:	blr	x3
   2d5c0:	ldr	x2, [x19, #320]
   2d5c4:	mov	x1, #0x1                   	// #1
   2d5c8:	mov	x0, #0x0                   	// #0
   2d5cc:	add	x2, x2, x1
   2d5d0:	str	x2, [x19, #320]
   2d5d4:	b	2d590 <__asan_backtrace_create_state@@Base+0x1000>
   2d5d8:	ldp	x2, x20, [x20, #8]
   2d5dc:	cbz	x2, 2d5ec <__asan_backtrace_create_state@@Base+0x105c>
   2d5e0:	mov	w1, w21
   2d5e4:	mov	x0, x19
   2d5e8:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2d5ec:	ldr	x1, [x19, #256]
   2d5f0:	add	x0, x1, #0x1
   2d5f4:	cmp	x1, #0xff
   2d5f8:	b.ne	2d620 <__asan_backtrace_create_state@@Base+0x1090>  // b.any
   2d5fc:	ldp	x3, x2, [x19, #272]
   2d600:	strb	wzr, [x19, #255]
   2d604:	mov	x0, x19
   2d608:	blr	x3
   2d60c:	ldr	x2, [x19, #320]
   2d610:	mov	x0, #0x1                   	// #1
   2d614:	mov	x1, #0x0                   	// #0
   2d618:	add	x2, x2, x0
   2d61c:	str	x2, [x19, #320]
   2d620:	str	x0, [x19, #256]
   2d624:	mov	w0, #0x7b                  	// #123
   2d628:	strb	w0, [x19, x1]
   2d62c:	mov	x2, x20
   2d630:	strb	w0, [x19, #264]
   2d634:	mov	w1, w21
   2d638:	mov	x0, x19
   2d63c:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2d640:	ldr	x1, [x19, #256]
   2d644:	add	x0, x1, #0x1
   2d648:	cmp	x1, #0xff
   2d64c:	b.ne	2d674 <__asan_backtrace_create_state@@Base+0x10e4>  // b.any
   2d650:	ldp	x3, x2, [x19, #272]
   2d654:	strb	wzr, [x19, #255]
   2d658:	mov	x0, x19
   2d65c:	blr	x3
   2d660:	ldr	x2, [x19, #320]
   2d664:	mov	x0, #0x1                   	// #1
   2d668:	mov	x1, #0x0                   	// #0
   2d66c:	add	x2, x2, x0
   2d670:	str	x2, [x19, #320]
   2d674:	str	x0, [x19, #256]
   2d678:	mov	w0, #0x7d                  	// #125
   2d67c:	strb	w0, [x19, x1]
   2d680:	strb	w0, [x19, #264]
   2d684:	ldp	x21, x22, [sp, #32]
   2d688:	ldp	x23, x24, [sp, #48]
   2d68c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2d690:	ldr	x24, [x20, #8]
   2d694:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d698:	add	x22, x22, #0x998
   2d69c:	mov	x0, x22
   2d6a0:	ldr	w23, [x24, #16]
   2d6a4:	bl	67e0 <__asan_internal_strlen@plt>
   2d6a8:	cbz	x0, 2ef8c <__asan_backtrace_create_state@@Base+0x29fc>
   2d6ac:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d6b0:	add	x22, x0, x22
   2d6b4:	add	x20, x20, #0x999
   2d6b8:	mov	w21, #0x6f                  	// #111
   2d6bc:	ldr	x1, [x19, #256]
   2d6c0:	b	2d6e4 <__asan_backtrace_create_state@@Base+0x1154>
   2d6c4:	mov	x0, x1
   2d6c8:	add	x1, x1, #0x1
   2d6cc:	str	x1, [x19, #256]
   2d6d0:	cmp	x22, x20
   2d6d4:	strb	w21, [x19, x0]
   2d6d8:	strb	w21, [x19, #264]
   2d6dc:	b.eq	2ef8c <__asan_backtrace_create_state@@Base+0x29fc>  // b.none
   2d6e0:	ldrb	w21, [x20], #1
   2d6e4:	cmp	x1, #0xff
   2d6e8:	b.ne	2d6c4 <__asan_backtrace_create_state@@Base+0x1134>  // b.any
   2d6ec:	ldp	x3, x2, [x19, #272]
   2d6f0:	strb	wzr, [x19, #255]
   2d6f4:	mov	x0, x19
   2d6f8:	blr	x3
   2d6fc:	ldr	x2, [x19, #320]
   2d700:	mov	x1, #0x1                   	// #1
   2d704:	mov	x0, #0x0                   	// #0
   2d708:	add	x2, x2, x1
   2d70c:	str	x2, [x19, #320]
   2d710:	b	2d6cc <__asan_backtrace_create_state@@Base+0x113c>
   2d714:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d718:	add	x24, x24, #0x9a8
   2d71c:	mov	x0, x24
   2d720:	bl	67e0 <__asan_internal_strlen@plt>
   2d724:	cbz	x0, 2ee74 <__asan_backtrace_create_state@@Base+0x28e4>
   2d728:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d72c:	add	x24, x0, x24
   2d730:	add	x22, x22, #0x9a9
   2d734:	mov	w23, #0x6f                  	// #111
   2d738:	ldr	x1, [x19, #256]
   2d73c:	b	2d760 <__asan_backtrace_create_state@@Base+0x11d0>
   2d740:	mov	x0, x1
   2d744:	add	x1, x1, #0x1
   2d748:	str	x1, [x19, #256]
   2d74c:	cmp	x22, x24
   2d750:	strb	w23, [x19, x0]
   2d754:	strb	w23, [x19, #264]
   2d758:	b.eq	2ee74 <__asan_backtrace_create_state@@Base+0x28e4>  // b.none
   2d75c:	ldrb	w23, [x22], #1
   2d760:	cmp	x1, #0xff
   2d764:	b.ne	2d740 <__asan_backtrace_create_state@@Base+0x11b0>  // b.any
   2d768:	ldp	x3, x2, [x19, #272]
   2d76c:	strb	wzr, [x19, #255]
   2d770:	mov	x0, x19
   2d774:	blr	x3
   2d778:	ldr	x2, [x19, #320]
   2d77c:	mov	x1, #0x1                   	// #1
   2d780:	mov	x0, #0x0                   	// #0
   2d784:	add	x2, x2, x1
   2d788:	str	x2, [x19, #320]
   2d78c:	b	2d748 <__asan_backtrace_create_state@@Base+0x11b8>
   2d790:	ldr	x2, [x20, #8]
   2d794:	mov	w1, w21
   2d798:	mov	x0, x19
   2d79c:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d7a0:	add	x24, x24, #0xab0
   2d7a4:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2d7a8:	mov	x0, x24
   2d7ac:	bl	67e0 <__asan_internal_strlen@plt>
   2d7b0:	cbz	x0, 2ee14 <__asan_backtrace_create_state@@Base+0x2884>
   2d7b4:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d7b8:	add	x24, x0, x24
   2d7bc:	add	x22, x22, #0xab1
   2d7c0:	mov	w23, #0x20                  	// #32
   2d7c4:	ldr	x1, [x19, #256]
   2d7c8:	b	2d7ec <__asan_backtrace_create_state@@Base+0x125c>
   2d7cc:	mov	x0, x1
   2d7d0:	add	x1, x1, #0x1
   2d7d4:	str	x1, [x19, #256]
   2d7d8:	cmp	x24, x22
   2d7dc:	strb	w23, [x19, x0]
   2d7e0:	strb	w23, [x19, #264]
   2d7e4:	b.eq	2ee14 <__asan_backtrace_create_state@@Base+0x2884>  // b.none
   2d7e8:	ldrb	w23, [x22], #1
   2d7ec:	cmp	x1, #0xff
   2d7f0:	b.ne	2d7cc <__asan_backtrace_create_state@@Base+0x123c>  // b.any
   2d7f4:	ldp	x3, x2, [x19, #272]
   2d7f8:	strb	wzr, [x19, #255]
   2d7fc:	mov	x0, x19
   2d800:	blr	x3
   2d804:	ldr	x2, [x19, #320]
   2d808:	mov	x1, #0x1                   	// #1
   2d80c:	mov	x0, #0x0                   	// #0
   2d810:	add	x2, x2, x1
   2d814:	str	x2, [x19, #320]
   2d818:	b	2d7d4 <__asan_backtrace_create_state@@Base+0x1244>
   2d81c:	ldr	x2, [x20, #8]
   2d820:	mov	w1, w21
   2d824:	mov	x0, x19
   2d828:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2d82c:	ldp	x21, x22, [sp, #32]
   2d830:	ldp	x23, x24, [sp, #48]
   2d834:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2d838:	and	w22, w21, #0xffffff9f
   2d83c:	ldr	x3, [x19, #296]
   2d840:	tbnz	w21, #5, 2ffdc <__asan_backtrace_create_state@@Base+0x3a4c>
   2d844:	ldr	x2, [x20, #8]
   2d848:	cbz	x2, 2d850 <__asan_backtrace_create_state@@Base+0x12c0>
   2d84c:	tbz	w21, #6, 30424 <__asan_backtrace_create_state@@Base+0x3e94>
   2d850:	mov	w1, w22
   2d854:	add	x2, x20, #0x10
   2d858:	mov	x0, x19
   2d85c:	bl	318d0 <__asan_backtrace_create_state@@Base+0x5340>
   2d860:	ldp	x21, x22, [sp, #32]
   2d864:	ldp	x23, x24, [sp, #48]
   2d868:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2d86c:	ldr	x23, [x20, #8]
   2d870:	cbnz	x23, 2f784 <__asan_backtrace_create_state@@Base+0x31f4>
   2d874:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d878:	add	x22, x22, #0xa38
   2d87c:	mov	x0, x22
   2d880:	bl	67e0 <__asan_internal_strlen@plt>
   2d884:	cbz	x0, 30b40 <__asan_backtrace_create_state@@Base+0x45b0>
   2d888:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d88c:	add	x22, x0, x22
   2d890:	add	x20, x20, #0xa39
   2d894:	mov	w21, #0x74                  	// #116
   2d898:	ldr	x1, [x19, #256]
   2d89c:	b	2d8c0 <__asan_backtrace_create_state@@Base+0x1330>
   2d8a0:	mov	x0, x1
   2d8a4:	add	x1, x1, #0x1
   2d8a8:	str	x1, [x19, #256]
   2d8ac:	cmp	x22, x20
   2d8b0:	strb	w21, [x19, x0]
   2d8b4:	strb	w21, [x19, #264]
   2d8b8:	b.eq	2fbb4 <__asan_backtrace_create_state@@Base+0x3624>  // b.none
   2d8bc:	ldrb	w21, [x20], #1
   2d8c0:	cmp	x1, #0xff
   2d8c4:	b.ne	2d8a0 <__asan_backtrace_create_state@@Base+0x1310>  // b.any
   2d8c8:	ldp	x3, x2, [x19, #272]
   2d8cc:	strb	wzr, [x19, #255]
   2d8d0:	mov	x0, x19
   2d8d4:	blr	x3
   2d8d8:	ldr	x2, [x19, #320]
   2d8dc:	mov	x1, #0x1                   	// #1
   2d8e0:	mov	x0, #0x0                   	// #0
   2d8e4:	add	x2, x2, x1
   2d8e8:	str	x2, [x19, #320]
   2d8ec:	b	2d8a8 <__asan_backtrace_create_state@@Base+0x1318>
   2d8f0:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d8f4:	add	x24, x24, #0x928
   2d8f8:	mov	x0, x24
   2d8fc:	bl	67e0 <__asan_internal_strlen@plt>
   2d900:	cbz	x0, 2ee90 <__asan_backtrace_create_state@@Base+0x2900>
   2d904:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2d908:	add	x24, x0, x24
   2d90c:	add	x22, x22, #0x929
   2d910:	mov	w23, #0x68                  	// #104
   2d914:	ldr	x1, [x19, #256]
   2d918:	b	2d93c <__asan_backtrace_create_state@@Base+0x13ac>
   2d91c:	mov	x0, x1
   2d920:	add	x1, x1, #0x1
   2d924:	str	x1, [x19, #256]
   2d928:	cmp	x22, x24
   2d92c:	strb	w23, [x19, x0]
   2d930:	strb	w23, [x19, #264]
   2d934:	b.eq	2ee90 <__asan_backtrace_create_state@@Base+0x2900>  // b.none
   2d938:	ldrb	w23, [x22], #1
   2d93c:	cmp	x1, #0xff
   2d940:	b.ne	2d91c <__asan_backtrace_create_state@@Base+0x138c>  // b.any
   2d944:	ldp	x3, x2, [x19, #272]
   2d948:	strb	wzr, [x19, #255]
   2d94c:	mov	x0, x19
   2d950:	blr	x3
   2d954:	ldr	x2, [x19, #320]
   2d958:	mov	x1, #0x1                   	// #1
   2d95c:	mov	x0, #0x0                   	// #0
   2d960:	add	x2, x2, x1
   2d964:	str	x2, [x19, #320]
   2d968:	b	2d924 <__asan_backtrace_create_state@@Base+0x1394>
   2d96c:	ldrsw	x22, [x20, #16]
   2d970:	ldr	x20, [x20, #8]
   2d974:	cbz	x22, 308c8 <__asan_backtrace_create_state@@Base+0x4338>
   2d978:	add	x22, x20, x22
   2d97c:	ldr	x1, [x19, #256]
   2d980:	b	2d9a4 <__asan_backtrace_create_state@@Base+0x1414>
   2d984:	mov	x0, x1
   2d988:	add	x1, x1, #0x1
   2d98c:	str	x1, [x19, #256]
   2d990:	add	x20, x20, #0x1
   2d994:	strb	w21, [x19, x0]
   2d998:	cmp	x20, x22
   2d99c:	strb	w21, [x19, #264]
   2d9a0:	b.eq	2f644 <__asan_backtrace_create_state@@Base+0x30b4>  // b.none
   2d9a4:	ldrb	w21, [x20]
   2d9a8:	cmp	x1, #0xff
   2d9ac:	b.ne	2d984 <__asan_backtrace_create_state@@Base+0x13f4>  // b.any
   2d9b0:	ldp	x3, x2, [x19, #272]
   2d9b4:	strb	wzr, [x19, #255]
   2d9b8:	mov	x0, x19
   2d9bc:	blr	x3
   2d9c0:	ldr	x2, [x19, #320]
   2d9c4:	mov	x1, #0x1                   	// #1
   2d9c8:	mov	x0, #0x0                   	// #0
   2d9cc:	add	x2, x2, x1
   2d9d0:	str	x2, [x19, #320]
   2d9d4:	b	2d98c <__asan_backtrace_create_state@@Base+0x13fc>
   2d9d8:	ldp	x1, x5, [x19, #288]
   2d9dc:	add	x23, sp, #0x70
   2d9e0:	stp	x5, x20, [sp, #112]
   2d9e4:	mov	w22, #0x1                   	// #1
   2d9e8:	mov	w6, w22
   2d9ec:	str	wzr, [sp, #128]
   2d9f0:	str	x1, [sp, #136]
   2d9f4:	str	x23, [x19, #296]
   2d9f8:	mov	x24, x5
   2d9fc:	mov	x0, x5
   2da00:	mov	x5, x23
   2da04:	cbnz	x24, 2da50 <__asan_backtrace_create_state@@Base+0x14c0>
   2da08:	b	30cb0 <__asan_backtrace_create_state@@Base+0x4720>
   2da0c:	ldr	w1, [x0, #16]
   2da10:	cbnz	w1, 2da48 <__asan_backtrace_create_state@@Base+0x14b8>
   2da14:	cmp	w22, #0x3
   2da18:	b.hi	30410 <__asan_backtrace_create_state@@Base+0x3e80>  // b.pmore
   2da1c:	ubfiz	x1, x22, #5, #32
   2da20:	add	w22, w22, #0x1
   2da24:	add	x4, x23, x1
   2da28:	ldp	x2, x3, [x0]
   2da2c:	stp	x2, x3, [x4]
   2da30:	ldp	x2, x3, [x0, #16]
   2da34:	stp	x2, x3, [x4, #16]
   2da38:	str	x5, [x23, x1]
   2da3c:	mov	x5, x4
   2da40:	str	x4, [x19, #296]
   2da44:	str	w6, [x0, #16]
   2da48:	ldr	x0, [x0]
   2da4c:	cbz	x0, 2da64 <__asan_backtrace_create_state@@Base+0x14d4>
   2da50:	ldr	x1, [x0, #8]
   2da54:	ldr	w1, [x1]
   2da58:	sub	w1, w1, #0x19
   2da5c:	cmp	w1, #0x2
   2da60:	b.ls	2da0c <__asan_backtrace_create_state@@Base+0x147c>  // b.plast
   2da64:	ldr	x2, [x20, #16]
   2da68:	mov	x0, x19
   2da6c:	mov	w1, w21
   2da70:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2da74:	str	x24, [x19, #296]
   2da78:	ldr	w0, [sp, #128]
   2da7c:	cbnz	w0, 30078 <__asan_backtrace_create_state@@Base+0x3ae8>
   2da80:	ubfiz	x0, x22, #5, #32
   2da84:	cmp	w22, #0x1
   2da88:	add	x23, x23, x0
   2da8c:	b.eq	2dab0 <__asan_backtrace_create_state@@Base+0x1520>  // b.none
   2da90:	ldur	x2, [x23, #-24]
   2da94:	sub	w22, w22, #0x1
   2da98:	mov	w1, w21
   2da9c:	mov	x0, x19
   2daa0:	sub	x23, x23, #0x20
   2daa4:	bl	31038 <__asan_backtrace_create_state@@Base+0x4aa8>
   2daa8:	cmp	w22, #0x1
   2daac:	b.ne	2da90 <__asan_backtrace_create_state@@Base+0x1500>  // b.any
   2dab0:	ldr	x3, [x19, #296]
   2dab4:	mov	w1, w21
   2dab8:	add	x2, x20, #0x8
   2dabc:	mov	x0, x19
   2dac0:	bl	31f90 <__asan_backtrace_create_state@@Base+0x5a00>
   2dac4:	ldp	x21, x22, [sp, #32]
   2dac8:	ldp	x23, x24, [sp, #48]
   2dacc:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2dad0:	ldrsh	w0, [x20, #18]
   2dad4:	cbnz	w0, 2ff60 <__asan_backtrace_create_state@@Base+0x39d0>
   2dad8:	ldr	x2, [x20, #8]
   2dadc:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2dae0:	ldr	x0, [x0, #3736]
   2dae4:	ldr	x1, [x2, #8]
   2dae8:	add	x0, x0, #0x100
   2daec:	cmp	x1, x0
   2daf0:	b.eq	2db44 <__asan_backtrace_create_state@@Base+0x15b4>  // b.none
   2daf4:	mov	w1, w21
   2daf8:	mov	x0, x19
   2dafc:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2db00:	ldr	x1, [x19, #256]
   2db04:	add	x0, x1, #0x1
   2db08:	cmp	x1, #0xff
   2db0c:	b.ne	2db34 <__asan_backtrace_create_state@@Base+0x15a4>  // b.any
   2db10:	ldp	x3, x2, [x19, #272]
   2db14:	strb	wzr, [x19, #255]
   2db18:	mov	x0, x19
   2db1c:	blr	x3
   2db20:	ldr	x2, [x19, #320]
   2db24:	mov	x0, #0x1                   	// #1
   2db28:	mov	x1, #0x0                   	// #0
   2db2c:	add	x2, x2, x0
   2db30:	str	x2, [x19, #320]
   2db34:	str	x0, [x19, #256]
   2db38:	mov	w0, #0x20                  	// #32
   2db3c:	strb	w0, [x19, x1]
   2db40:	strb	w0, [x19, #264]
   2db44:	ldrsh	w0, [x20, #16]
   2db48:	cbz	w0, 2fa24 <__asan_backtrace_create_state@@Base+0x3494>
   2db4c:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2db50:	add	x22, x22, #0x980
   2db54:	mov	x0, x22
   2db58:	bl	67e0 <__asan_internal_strlen@plt>
   2db5c:	cbz	x0, 30b34 <__asan_backtrace_create_state@@Base+0x45a4>
   2db60:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2db64:	add	x22, x0, x22
   2db68:	add	x20, x20, #0x981
   2db6c:	mov	w21, #0x5f                  	// #95
   2db70:	ldr	x1, [x19, #256]
   2db74:	b	2db98 <__asan_backtrace_create_state@@Base+0x1608>
   2db78:	mov	x0, x1
   2db7c:	add	x1, x1, #0x1
   2db80:	str	x1, [x19, #256]
   2db84:	cmp	x22, x20
   2db88:	strb	w21, [x19, x0]
   2db8c:	strb	w21, [x19, #264]
   2db90:	b.eq	2fbd8 <__asan_backtrace_create_state@@Base+0x3648>  // b.none
   2db94:	ldrb	w21, [x20], #1
   2db98:	cmp	x1, #0xff
   2db9c:	b.ne	2db78 <__asan_backtrace_create_state@@Base+0x15e8>  // b.any
   2dba0:	ldp	x3, x2, [x19, #272]
   2dba4:	strb	wzr, [x19, #255]
   2dba8:	mov	x0, x19
   2dbac:	blr	x3
   2dbb0:	ldr	x2, [x19, #320]
   2dbb4:	mov	x1, #0x1                   	// #1
   2dbb8:	mov	x0, #0x0                   	// #0
   2dbbc:	add	x2, x2, x1
   2dbc0:	str	x2, [x19, #320]
   2dbc4:	b	2db80 <__asan_backtrace_create_state@@Base+0x15f0>
   2dbc8:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2dbcc:	add	x24, x24, #0x860
   2dbd0:	mov	x0, x24
   2dbd4:	bl	67e0 <__asan_internal_strlen@plt>
   2dbd8:	cbz	x0, 2f4e0 <__asan_backtrace_create_state@@Base+0x2f50>
   2dbdc:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2dbe0:	add	x24, x0, x24
   2dbe4:	add	x22, x22, #0x861
   2dbe8:	mov	w23, #0x6e                  	// #110
   2dbec:	ldr	x1, [x19, #256]
   2dbf0:	b	2dc14 <__asan_backtrace_create_state@@Base+0x1684>
   2dbf4:	mov	x0, x1
   2dbf8:	add	x1, x1, #0x1
   2dbfc:	str	x1, [x19, #256]
   2dc00:	cmp	x24, x22
   2dc04:	strb	w23, [x19, x0]
   2dc08:	strb	w23, [x19, #264]
   2dc0c:	b.eq	2f4e0 <__asan_backtrace_create_state@@Base+0x2f50>  // b.none
   2dc10:	ldrb	w23, [x22], #1
   2dc14:	cmp	x1, #0xff
   2dc18:	b.ne	2dbf4 <__asan_backtrace_create_state@@Base+0x1664>  // b.any
   2dc1c:	ldp	x3, x2, [x19, #272]
   2dc20:	strb	wzr, [x19, #255]
   2dc24:	mov	x0, x19
   2dc28:	blr	x3
   2dc2c:	ldr	x2, [x19, #320]
   2dc30:	mov	x1, #0x1                   	// #1
   2dc34:	mov	x0, #0x0                   	// #0
   2dc38:	add	x2, x2, x1
   2dc3c:	str	x2, [x19, #320]
   2dc40:	b	2dbfc <__asan_backtrace_create_state@@Base+0x166c>
   2dc44:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2dc48:	add	x24, x24, #0x878
   2dc4c:	mov	x0, x24
   2dc50:	bl	67e0 <__asan_internal_strlen@plt>
   2dc54:	cbz	x0, 2f4c4 <__asan_backtrace_create_state@@Base+0x2f34>
   2dc58:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2dc5c:	add	x24, x0, x24
   2dc60:	add	x22, x22, #0x879
   2dc64:	mov	w23, #0x76                  	// #118
   2dc68:	ldr	x1, [x19, #256]
   2dc6c:	b	2dc90 <__asan_backtrace_create_state@@Base+0x1700>
   2dc70:	mov	x0, x1
   2dc74:	add	x1, x1, #0x1
   2dc78:	str	x1, [x19, #256]
   2dc7c:	cmp	x24, x22
   2dc80:	strb	w23, [x19, x0]
   2dc84:	strb	w23, [x19, #264]
   2dc88:	b.eq	2f4c4 <__asan_backtrace_create_state@@Base+0x2f34>  // b.none
   2dc8c:	ldrb	w23, [x22], #1
   2dc90:	cmp	x1, #0xff
   2dc94:	b.ne	2dc70 <__asan_backtrace_create_state@@Base+0x16e0>  // b.any
   2dc98:	ldp	x3, x2, [x19, #272]
   2dc9c:	strb	wzr, [x19, #255]
   2dca0:	mov	x0, x19
   2dca4:	blr	x3
   2dca8:	ldr	x2, [x19, #320]
   2dcac:	mov	x1, #0x1                   	// #1
   2dcb0:	mov	x0, #0x0                   	// #0
   2dcb4:	add	x2, x2, x1
   2dcb8:	str	x2, [x19, #320]
   2dcbc:	b	2dc78 <__asan_backtrace_create_state@@Base+0x16e8>
   2dcc0:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2dcc4:	add	x24, x24, #0x890
   2dcc8:	mov	x0, x24
   2dccc:	bl	67e0 <__asan_internal_strlen@plt>
   2dcd0:	cbz	x0, 2f4a8 <__asan_backtrace_create_state@@Base+0x2f18>
   2dcd4:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2dcd8:	add	x24, x0, x24
   2dcdc:	add	x22, x22, #0x891
   2dce0:	mov	w23, #0x63                  	// #99
   2dce4:	ldr	x1, [x19, #256]
   2dce8:	b	2dd0c <__asan_backtrace_create_state@@Base+0x177c>
   2dcec:	mov	x0, x1
   2dcf0:	add	x1, x1, #0x1
   2dcf4:	str	x1, [x19, #256]
   2dcf8:	cmp	x24, x22
   2dcfc:	strb	w23, [x19, x0]
   2dd00:	strb	w23, [x19, #264]
   2dd04:	b.eq	2f4a8 <__asan_backtrace_create_state@@Base+0x2f18>  // b.none
   2dd08:	ldrb	w23, [x22], #1
   2dd0c:	cmp	x1, #0xff
   2dd10:	b.ne	2dcec <__asan_backtrace_create_state@@Base+0x175c>  // b.any
   2dd14:	ldp	x3, x2, [x19, #272]
   2dd18:	strb	wzr, [x19, #255]
   2dd1c:	mov	x0, x19
   2dd20:	blr	x3
   2dd24:	ldr	x2, [x19, #320]
   2dd28:	mov	x1, #0x1                   	// #1
   2dd2c:	mov	x0, #0x0                   	// #0
   2dd30:	add	x2, x2, x1
   2dd34:	str	x2, [x19, #320]
   2dd38:	b	2dcf4 <__asan_backtrace_create_state@@Base+0x1764>
   2dd3c:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2dd40:	add	x24, x24, #0x8b0
   2dd44:	mov	x0, x24
   2dd48:	bl	67e0 <__asan_internal_strlen@plt>
   2dd4c:	cbz	x0, 2f48c <__asan_backtrace_create_state@@Base+0x2efc>
   2dd50:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2dd54:	add	x24, x0, x24
   2dd58:	add	x22, x22, #0x8b1
   2dd5c:	mov	w23, #0x6a                  	// #106
   2dd60:	ldr	x1, [x19, #256]
   2dd64:	b	2dd88 <__asan_backtrace_create_state@@Base+0x17f8>
   2dd68:	mov	x0, x1
   2dd6c:	add	x1, x1, #0x1
   2dd70:	str	x1, [x19, #256]
   2dd74:	cmp	x24, x22
   2dd78:	strb	w23, [x19, x0]
   2dd7c:	strb	w23, [x19, #264]
   2dd80:	b.eq	2f48c <__asan_backtrace_create_state@@Base+0x2efc>  // b.none
   2dd84:	ldrb	w23, [x22], #1
   2dd88:	cmp	x1, #0xff
   2dd8c:	b.ne	2dd68 <__asan_backtrace_create_state@@Base+0x17d8>  // b.any
   2dd90:	ldp	x3, x2, [x19, #272]
   2dd94:	strb	wzr, [x19, #255]
   2dd98:	mov	x0, x19
   2dd9c:	blr	x3
   2dda0:	ldr	x2, [x19, #320]
   2dda4:	mov	x1, #0x1                   	// #1
   2dda8:	mov	x0, #0x0                   	// #0
   2ddac:	add	x2, x2, x1
   2ddb0:	str	x2, [x19, #320]
   2ddb4:	b	2dd70 <__asan_backtrace_create_state@@Base+0x17e0>
   2ddb8:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2ddbc:	add	x24, x24, #0x8c0
   2ddc0:	mov	x0, x24
   2ddc4:	bl	67e0 <__asan_internal_strlen@plt>
   2ddc8:	cbz	x0, 2f470 <__asan_backtrace_create_state@@Base+0x2ee0>
   2ddcc:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2ddd0:	add	x24, x0, x24
   2ddd4:	add	x22, x22, #0x8c1
   2ddd8:	mov	w23, #0x67                  	// #103
   2dddc:	ldr	x1, [x19, #256]
   2dde0:	b	2de04 <__asan_backtrace_create_state@@Base+0x1874>
   2dde4:	mov	x0, x1
   2dde8:	add	x1, x1, #0x1
   2ddec:	str	x1, [x19, #256]
   2ddf0:	cmp	x24, x22
   2ddf4:	strb	w23, [x19, x0]
   2ddf8:	strb	w23, [x19, #264]
   2ddfc:	b.eq	2f470 <__asan_backtrace_create_state@@Base+0x2ee0>  // b.none
   2de00:	ldrb	w23, [x22], #1
   2de04:	cmp	x1, #0xff
   2de08:	b.ne	2dde4 <__asan_backtrace_create_state@@Base+0x1854>  // b.any
   2de0c:	ldp	x3, x2, [x19, #272]
   2de10:	strb	wzr, [x19, #255]
   2de14:	mov	x0, x19
   2de18:	blr	x3
   2de1c:	ldr	x2, [x19, #320]
   2de20:	mov	x1, #0x1                   	// #1
   2de24:	mov	x0, #0x0                   	// #0
   2de28:	add	x2, x2, x1
   2de2c:	str	x2, [x19, #320]
   2de30:	b	2ddec <__asan_backtrace_create_state@@Base+0x185c>
   2de34:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2de38:	add	x24, x24, #0x8d8
   2de3c:	mov	x0, x24
   2de40:	bl	67e0 <__asan_internal_strlen@plt>
   2de44:	cbz	x0, 2f454 <__asan_backtrace_create_state@@Base+0x2ec4>
   2de48:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2de4c:	add	x24, x0, x24
   2de50:	add	x22, x22, #0x8d9
   2de54:	mov	w23, #0x54                  	// #84
   2de58:	ldr	x1, [x19, #256]
   2de5c:	b	2de80 <__asan_backtrace_create_state@@Base+0x18f0>
   2de60:	mov	x0, x1
   2de64:	add	x1, x1, #0x1
   2de68:	str	x1, [x19, #256]
   2de6c:	cmp	x24, x22
   2de70:	strb	w23, [x19, x0]
   2de74:	strb	w23, [x19, #264]
   2de78:	b.eq	2f454 <__asan_backtrace_create_state@@Base+0x2ec4>  // b.none
   2de7c:	ldrb	w23, [x22], #1
   2de80:	cmp	x1, #0xff
   2de84:	b.ne	2de60 <__asan_backtrace_create_state@@Base+0x18d0>  // b.any
   2de88:	ldp	x3, x2, [x19, #272]
   2de8c:	strb	wzr, [x19, #255]
   2de90:	mov	x0, x19
   2de94:	blr	x3
   2de98:	ldr	x2, [x19, #320]
   2de9c:	mov	x1, #0x1                   	// #1
   2dea0:	mov	x0, #0x0                   	// #0
   2dea4:	add	x2, x2, x1
   2dea8:	str	x2, [x19, #320]
   2deac:	b	2de68 <__asan_backtrace_create_state@@Base+0x18d8>
   2deb0:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2deb4:	add	x24, x24, #0x8f0
   2deb8:	mov	x0, x24
   2debc:	bl	67e0 <__asan_internal_strlen@plt>
   2dec0:	cbz	x0, 2ef54 <__asan_backtrace_create_state@@Base+0x29c4>
   2dec4:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2dec8:	add	x24, x0, x24
   2decc:	add	x22, x22, #0x8f1
   2ded0:	mov	w23, #0x54                  	// #84
   2ded4:	ldr	x1, [x19, #256]
   2ded8:	b	2defc <__asan_backtrace_create_state@@Base+0x196c>
   2dedc:	mov	x0, x1
   2dee0:	add	x1, x1, #0x1
   2dee4:	str	x1, [x19, #256]
   2dee8:	cmp	x24, x22
   2deec:	strb	w23, [x19, x0]
   2def0:	strb	w23, [x19, #264]
   2def4:	b.eq	2ef54 <__asan_backtrace_create_state@@Base+0x29c4>  // b.none
   2def8:	ldrb	w23, [x22], #1
   2defc:	cmp	x1, #0xff
   2df00:	b.ne	2dedc <__asan_backtrace_create_state@@Base+0x194c>  // b.any
   2df04:	ldp	x3, x2, [x19, #272]
   2df08:	strb	wzr, [x19, #255]
   2df0c:	mov	x0, x19
   2df10:	blr	x3
   2df14:	ldr	x2, [x19, #320]
   2df18:	mov	x1, #0x1                   	// #1
   2df1c:	mov	x0, #0x0                   	// #0
   2df20:	add	x2, x2, x1
   2df24:	str	x2, [x19, #320]
   2df28:	b	2dee4 <__asan_backtrace_create_state@@Base+0x1954>
   2df2c:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2df30:	add	x24, x24, #0x910
   2df34:	mov	x0, x24
   2df38:	bl	67e0 <__asan_internal_strlen@plt>
   2df3c:	cbz	x0, 2eeac <__asan_backtrace_create_state@@Base+0x291c>
   2df40:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2df44:	add	x24, x0, x24
   2df48:	add	x22, x22, #0x911
   2df4c:	mov	w23, #0x72                  	// #114
   2df50:	ldr	x1, [x19, #256]
   2df54:	b	2df78 <__asan_backtrace_create_state@@Base+0x19e8>
   2df58:	mov	x0, x1
   2df5c:	add	x1, x1, #0x1
   2df60:	str	x1, [x19, #256]
   2df64:	cmp	x24, x22
   2df68:	strb	w23, [x19, x0]
   2df6c:	strb	w23, [x19, #264]
   2df70:	b.eq	2eeac <__asan_backtrace_create_state@@Base+0x291c>  // b.none
   2df74:	ldrb	w23, [x22], #1
   2df78:	cmp	x1, #0xff
   2df7c:	b.ne	2df58 <__asan_backtrace_create_state@@Base+0x19c8>  // b.any
   2df80:	ldp	x3, x2, [x19, #272]
   2df84:	strb	wzr, [x19, #255]
   2df88:	mov	x0, x19
   2df8c:	blr	x3
   2df90:	ldr	x2, [x19, #320]
   2df94:	mov	x1, #0x1                   	// #1
   2df98:	mov	x0, #0x0                   	// #0
   2df9c:	add	x2, x2, x1
   2dfa0:	str	x2, [x19, #320]
   2dfa4:	b	2df60 <__asan_backtrace_create_state@@Base+0x19d0>
   2dfa8:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2dfac:	add	x24, x24, #0x958
   2dfb0:	mov	x0, x24
   2dfb4:	bl	67e0 <__asan_internal_strlen@plt>
   2dfb8:	cbz	x0, 2ef70 <__asan_backtrace_create_state@@Base+0x29e0>
   2dfbc:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2dfc0:	add	x24, x0, x24
   2dfc4:	add	x22, x22, #0x959
   2dfc8:	mov	w23, #0x6e                  	// #110
   2dfcc:	ldr	x1, [x19, #256]
   2dfd0:	b	2dff4 <__asan_backtrace_create_state@@Base+0x1a64>
   2dfd4:	mov	x0, x1
   2dfd8:	add	x1, x1, #0x1
   2dfdc:	str	x1, [x19, #256]
   2dfe0:	cmp	x22, x24
   2dfe4:	strb	w23, [x19, x0]
   2dfe8:	strb	w23, [x19, #264]
   2dfec:	b.eq	2ef70 <__asan_backtrace_create_state@@Base+0x29e0>  // b.none
   2dff0:	ldrb	w23, [x22], #1
   2dff4:	cmp	x1, #0xff
   2dff8:	b.ne	2dfd4 <__asan_backtrace_create_state@@Base+0x1a44>  // b.any
   2dffc:	ldp	x3, x2, [x19, #272]
   2e000:	strb	wzr, [x19, #255]
   2e004:	mov	x0, x19
   2e008:	blr	x3
   2e00c:	ldr	x2, [x19, #320]
   2e010:	mov	x1, #0x1                   	// #1
   2e014:	mov	x0, #0x0                   	// #0
   2e018:	add	x2, x2, x1
   2e01c:	str	x2, [x19, #320]
   2e020:	b	2dfdc <__asan_backtrace_create_state@@Base+0x1a4c>
   2e024:	ldr	x1, [x20, #8]
   2e028:	mov	x0, x19
   2e02c:	mov	w23, #0x0                   	// #0
   2e030:	bl	2cce8 <__asan_backtrace_create_state@@Base+0x758>
   2e034:	cbz	x0, 30944 <__asan_backtrace_create_state@@Base+0x43b4>
   2e038:	stp	x25, x26, [sp, #64]
   2e03c:	nop
   2e040:	ldr	w1, [x0]
   2e044:	cmp	w1, #0x2f
   2e048:	b.ne	2f6e4 <__asan_backtrace_create_state@@Base+0x3154>  // b.any
   2e04c:	ldr	x1, [x0, #8]
   2e050:	cbz	x1, 2f6e4 <__asan_backtrace_create_state@@Base+0x3154>
   2e054:	ldr	x0, [x0, #16]
   2e058:	add	w23, w23, #0x1
   2e05c:	cbnz	x0, 2e040 <__asan_backtrace_create_state@@Base+0x1ab0>
   2e060:	ldr	x25, [x20, #8]
   2e064:	stp	x27, x28, [sp, #80]
   2e068:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e06c:	sub	w26, w23, #0x1
   2e070:	add	x24, x24, #0x990
   2e074:	b	2e084 <__asan_backtrace_create_state@@Base+0x1af4>
   2e078:	add	w22, w22, #0x1
   2e07c:	cmp	w22, w23
   2e080:	b.ge	2f668 <__asan_backtrace_create_state@@Base+0x30d8>  // b.tcont
   2e084:	str	w22, [x19, #316]
   2e088:	mov	x2, x25
   2e08c:	mov	w1, w21
   2e090:	mov	x0, x19
   2e094:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2e098:	cmp	w26, w22
   2e09c:	b.le	2e078 <__asan_backtrace_create_state@@Base+0x1ae8>
   2e0a0:	mov	x0, x24
   2e0a4:	bl	67e0 <__asan_internal_strlen@plt>
   2e0a8:	cbz	x0, 2e078 <__asan_backtrace_create_state@@Base+0x1ae8>
   2e0ac:	add	x27, x0, x24
   2e0b0:	mov	w20, #0x2c                  	// #44
   2e0b4:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e0b8:	add	x28, x0, #0x991
   2e0bc:	ldr	x1, [x19, #256]
   2e0c0:	b	2e0e4 <__asan_backtrace_create_state@@Base+0x1b54>
   2e0c4:	mov	x0, x1
   2e0c8:	add	x1, x1, #0x1
   2e0cc:	str	x1, [x19, #256]
   2e0d0:	cmp	x27, x28
   2e0d4:	strb	w20, [x19, x0]
   2e0d8:	strb	w20, [x19, #264]
   2e0dc:	b.eq	2e078 <__asan_backtrace_create_state@@Base+0x1ae8>  // b.none
   2e0e0:	ldrb	w20, [x28], #1
   2e0e4:	cmp	x1, #0xff
   2e0e8:	b.ne	2e0c4 <__asan_backtrace_create_state@@Base+0x1b34>  // b.any
   2e0ec:	ldp	x4, x2, [x19, #272]
   2e0f0:	strb	wzr, [x19, #255]
   2e0f4:	mov	x0, x19
   2e0f8:	blr	x4
   2e0fc:	ldr	x2, [x19, #320]
   2e100:	mov	x1, #0x1                   	// #1
   2e104:	mov	x0, #0x0                   	// #0
   2e108:	add	x2, x2, x1
   2e10c:	str	x2, [x19, #320]
   2e110:	b	2e0cc <__asan_backtrace_create_state@@Base+0x1b3c>
   2e114:	ldr	x2, [x20, #8]
   2e118:	mov	w1, w21
   2e11c:	mov	x0, x19
   2e120:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e124:	add	x24, x24, #0x778
   2e128:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2e12c:	mov	x0, x24
   2e130:	bl	67e0 <__asan_internal_strlen@plt>
   2e134:	cbz	x0, 2f388 <__asan_backtrace_create_state@@Base+0x2df8>
   2e138:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e13c:	add	x24, x0, x24
   2e140:	add	x22, x22, #0x779
   2e144:	mov	w23, #0x5b                  	// #91
   2e148:	ldr	x1, [x19, #256]
   2e14c:	b	2e170 <__asan_backtrace_create_state@@Base+0x1be0>
   2e150:	mov	x0, x1
   2e154:	add	x1, x1, #0x1
   2e158:	str	x1, [x19, #256]
   2e15c:	cmp	x24, x22
   2e160:	strb	w23, [x19, x0]
   2e164:	strb	w23, [x19, #264]
   2e168:	b.eq	2f388 <__asan_backtrace_create_state@@Base+0x2df8>  // b.none
   2e16c:	ldrb	w23, [x22], #1
   2e170:	cmp	x1, #0xff
   2e174:	b.ne	2e150 <__asan_backtrace_create_state@@Base+0x1bc0>  // b.any
   2e178:	ldp	x3, x2, [x19, #272]
   2e17c:	strb	wzr, [x19, #255]
   2e180:	mov	x0, x19
   2e184:	blr	x3
   2e188:	ldr	x2, [x19, #320]
   2e18c:	mov	x1, #0x1                   	// #1
   2e190:	mov	x0, #0x0                   	// #0
   2e194:	add	x2, x2, x1
   2e198:	str	x2, [x19, #320]
   2e19c:	b	2e158 <__asan_backtrace_create_state@@Base+0x1bc8>
   2e1a0:	ldr	x0, [x20, #16]
   2e1a4:	ldr	w0, [x0]
   2e1a8:	cmp	w0, #0x39
   2e1ac:	b.ne	2cff8 <__asan_backtrace_create_state@@Base+0xa68>  // b.any
   2e1b0:	ldr	x2, [x20, #8]
   2e1b4:	ldr	x0, [x2, #8]
   2e1b8:	ldr	x0, [x0]
   2e1bc:	ldrb	w1, [x0, #1]
   2e1c0:	cmp	w1, #0x63
   2e1c4:	b.eq	304c0 <__asan_backtrace_create_state@@Base+0x3f30>  // b.none
   2e1c8:	add	x3, x20, #0x10
   2e1cc:	mov	w1, w21
   2e1d0:	mov	x0, x19
   2e1d4:	bl	32408 <__asan_backtrace_create_state@@Base+0x5e78>
   2e1d8:	cbnz	w0, 307ac <__asan_backtrace_create_state@@Base+0x421c>
   2e1dc:	ldr	x0, [x20, #8]
   2e1e0:	ldr	w1, [x0]
   2e1e4:	cmp	w1, #0x32
   2e1e8:	b.eq	309ec <__asan_backtrace_create_state@@Base+0x445c>  // b.none
   2e1ec:	ldr	x0, [x0, #8]
   2e1f0:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e1f4:	add	x1, x22, #0x9d8
   2e1f8:	ldr	x0, [x0]
   2e1fc:	bl	6b30 <__asan_internal_strcmp@plt>
   2e200:	cbnz	w0, 309e4 <__asan_backtrace_create_state@@Base+0x4454>
   2e204:	ldr	x0, [x20, #16]
   2e208:	ldr	x1, [x0, #8]
   2e20c:	ldr	w2, [x1]
   2e210:	cmp	w2, #0x3
   2e214:	b.eq	30afc <__asan_backtrace_create_state@@Base+0x456c>  // b.none
   2e218:	ldr	x2, [x0, #8]
   2e21c:	mov	w1, w21
   2e220:	mov	x0, x19
   2e224:	bl	32310 <__asan_backtrace_create_state@@Base+0x5d80>
   2e228:	ldr	x0, [x20, #8]
   2e22c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e230:	add	x1, x1, #0x9e0
   2e234:	ldr	x0, [x0, #8]
   2e238:	ldr	x0, [x0]
   2e23c:	bl	6b30 <__asan_internal_strcmp@plt>
   2e240:	cbnz	w0, 30980 <__asan_backtrace_create_state@@Base+0x43f0>
   2e244:	ldr	x1, [x19, #256]
   2e248:	cmp	x1, #0xff
   2e24c:	b.ne	2e274 <__asan_backtrace_create_state@@Base+0x1ce4>  // b.any
   2e250:	ldp	x3, x2, [x19, #272]
   2e254:	strb	wzr, [x19, #255]
   2e258:	mov	x0, x19
   2e25c:	blr	x3
   2e260:	str	xzr, [x19, #256]
   2e264:	ldr	x0, [x19, #320]
   2e268:	mov	x1, #0x0                   	// #0
   2e26c:	add	x0, x0, #0x1
   2e270:	str	x0, [x19, #320]
   2e274:	add	x0, x1, #0x1
   2e278:	str	x0, [x19, #256]
   2e27c:	mov	w0, #0x5b                  	// #91
   2e280:	strb	w0, [x19, x1]
   2e284:	strb	w0, [x19, #264]
   2e288:	mov	w1, w21
   2e28c:	mov	x0, x19
   2e290:	ldr	x2, [x20, #16]
   2e294:	ldr	x2, [x2, #16]
   2e298:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2e29c:	ldr	x1, [x19, #256]
   2e2a0:	cmp	x1, #0xff
   2e2a4:	b.ne	2e2cc <__asan_backtrace_create_state@@Base+0x1d3c>  // b.any
   2e2a8:	ldp	x3, x2, [x19, #272]
   2e2ac:	strb	wzr, [x19, #255]
   2e2b0:	mov	x0, x19
   2e2b4:	blr	x3
   2e2b8:	str	xzr, [x19, #256]
   2e2bc:	ldr	x0, [x19, #320]
   2e2c0:	mov	x1, #0x0                   	// #0
   2e2c4:	add	x0, x0, #0x1
   2e2c8:	str	x0, [x19, #320]
   2e2cc:	add	x0, x1, #0x1
   2e2d0:	str	x0, [x19, #256]
   2e2d4:	mov	w0, #0x5d                  	// #93
   2e2d8:	strb	w0, [x19, x1]
   2e2dc:	strb	w0, [x19, #264]
   2e2e0:	ldr	x0, [x20, #8]
   2e2e4:	ldr	w1, [x0]
   2e2e8:	cmp	w1, #0x32
   2e2ec:	b.eq	309c8 <__asan_backtrace_create_state@@Base+0x4438>  // b.none
   2e2f0:	ldp	x21, x22, [sp, #32]
   2e2f4:	ldp	x23, x24, [sp, #48]
   2e2f8:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2e2fc:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e300:	add	x24, x24, #0xa18
   2e304:	mov	x0, x24
   2e308:	bl	67e0 <__asan_internal_strlen@plt>
   2e30c:	cbz	x0, 2f614 <__asan_backtrace_create_state@@Base+0x3084>
   2e310:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e314:	add	x24, x0, x24
   2e318:	add	x22, x22, #0xa19
   2e31c:	mov	w23, #0x6a                  	// #106
   2e320:	ldr	x1, [x19, #256]
   2e324:	b	2e348 <__asan_backtrace_create_state@@Base+0x1db8>
   2e328:	mov	x0, x1
   2e32c:	add	x1, x1, #0x1
   2e330:	str	x1, [x19, #256]
   2e334:	cmp	x24, x22
   2e338:	strb	w23, [x19, x0]
   2e33c:	strb	w23, [x19, #264]
   2e340:	b.eq	2f614 <__asan_backtrace_create_state@@Base+0x3084>  // b.none
   2e344:	ldrb	w23, [x22], #1
   2e348:	cmp	x1, #0xff
   2e34c:	b.ne	2e328 <__asan_backtrace_create_state@@Base+0x1d98>  // b.any
   2e350:	ldp	x3, x2, [x19, #272]
   2e354:	strb	wzr, [x19, #255]
   2e358:	mov	x0, x19
   2e35c:	blr	x3
   2e360:	ldr	x2, [x19, #320]
   2e364:	mov	x1, #0x1                   	// #1
   2e368:	mov	x0, #0x0                   	// #0
   2e36c:	add	x2, x2, x1
   2e370:	str	x2, [x19, #320]
   2e374:	b	2e330 <__asan_backtrace_create_state@@Base+0x1da0>
   2e378:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e37c:	add	x24, x24, #0x7e8
   2e380:	mov	x0, x24
   2e384:	bl	67e0 <__asan_internal_strlen@plt>
   2e388:	cbz	x0, 2f5f8 <__asan_backtrace_create_state@@Base+0x3068>
   2e38c:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e390:	add	x24, x0, x24
   2e394:	add	x22, x22, #0x7e9
   2e398:	mov	w23, #0x56                  	// #86
   2e39c:	ldr	x1, [x19, #256]
   2e3a0:	b	2e3c4 <__asan_backtrace_create_state@@Base+0x1e34>
   2e3a4:	mov	x0, x1
   2e3a8:	add	x1, x1, #0x1
   2e3ac:	str	x1, [x19, #256]
   2e3b0:	cmp	x24, x22
   2e3b4:	strb	w23, [x19, x0]
   2e3b8:	strb	w23, [x19, #264]
   2e3bc:	b.eq	2f5f8 <__asan_backtrace_create_state@@Base+0x3068>  // b.none
   2e3c0:	ldrb	w23, [x22], #1
   2e3c4:	cmp	x1, #0xff
   2e3c8:	b.ne	2e3a4 <__asan_backtrace_create_state@@Base+0x1e14>  // b.any
   2e3cc:	ldp	x3, x2, [x19, #272]
   2e3d0:	strb	wzr, [x19, #255]
   2e3d4:	mov	x0, x19
   2e3d8:	blr	x3
   2e3dc:	ldr	x2, [x19, #320]
   2e3e0:	mov	x1, #0x1                   	// #1
   2e3e4:	mov	x0, #0x0                   	// #0
   2e3e8:	add	x2, x2, x1
   2e3ec:	str	x2, [x19, #320]
   2e3f0:	b	2e3ac <__asan_backtrace_create_state@@Base+0x1e1c>
   2e3f4:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e3f8:	add	x24, x24, #0x7f8
   2e3fc:	mov	x0, x24
   2e400:	bl	67e0 <__asan_internal_strlen@plt>
   2e404:	cbz	x0, 2f550 <__asan_backtrace_create_state@@Base+0x2fc0>
   2e408:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e40c:	add	x24, x0, x24
   2e410:	add	x22, x22, #0x7f9
   2e414:	mov	w23, #0x63                  	// #99
   2e418:	ldr	x1, [x19, #256]
   2e41c:	b	2e440 <__asan_backtrace_create_state@@Base+0x1eb0>
   2e420:	mov	x0, x1
   2e424:	add	x1, x1, #0x1
   2e428:	str	x1, [x19, #256]
   2e42c:	cmp	x24, x22
   2e430:	strb	w23, [x19, x0]
   2e434:	strb	w23, [x19, #264]
   2e438:	b.eq	2f550 <__asan_backtrace_create_state@@Base+0x2fc0>  // b.none
   2e43c:	ldrb	w23, [x22], #1
   2e440:	cmp	x1, #0xff
   2e444:	b.ne	2e420 <__asan_backtrace_create_state@@Base+0x1e90>  // b.any
   2e448:	ldp	x3, x2, [x19, #272]
   2e44c:	strb	wzr, [x19, #255]
   2e450:	mov	x0, x19
   2e454:	blr	x3
   2e458:	ldr	x2, [x19, #320]
   2e45c:	mov	x1, #0x1                   	// #1
   2e460:	mov	x0, #0x0                   	// #0
   2e464:	add	x2, x2, x1
   2e468:	str	x2, [x19, #320]
   2e46c:	b	2e428 <__asan_backtrace_create_state@@Base+0x1e98>
   2e470:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e474:	add	x24, x24, #0x820
   2e478:	mov	x0, x24
   2e47c:	bl	67e0 <__asan_internal_strlen@plt>
   2e480:	cbz	x0, 2f518 <__asan_backtrace_create_state@@Base+0x2f88>
   2e484:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e488:	add	x24, x0, x24
   2e48c:	add	x22, x22, #0x821
   2e490:	mov	w23, #0x74                  	// #116
   2e494:	ldr	x1, [x19, #256]
   2e498:	b	2e4bc <__asan_backtrace_create_state@@Base+0x1f2c>
   2e49c:	mov	x0, x1
   2e4a0:	add	x1, x1, #0x1
   2e4a4:	str	x1, [x19, #256]
   2e4a8:	cmp	x24, x22
   2e4ac:	strb	w23, [x19, x0]
   2e4b0:	strb	w23, [x19, #264]
   2e4b4:	b.eq	2f518 <__asan_backtrace_create_state@@Base+0x2f88>  // b.none
   2e4b8:	ldrb	w23, [x22], #1
   2e4bc:	cmp	x1, #0xff
   2e4c0:	b.ne	2e49c <__asan_backtrace_create_state@@Base+0x1f0c>  // b.any
   2e4c4:	ldp	x3, x2, [x19, #272]
   2e4c8:	strb	wzr, [x19, #255]
   2e4cc:	mov	x0, x19
   2e4d0:	blr	x3
   2e4d4:	ldr	x2, [x19, #320]
   2e4d8:	mov	x1, #0x1                   	// #1
   2e4dc:	mov	x0, #0x0                   	// #0
   2e4e0:	add	x2, x2, x1
   2e4e4:	str	x2, [x19, #320]
   2e4e8:	b	2e4a4 <__asan_backtrace_create_state@@Base+0x1f14>
   2e4ec:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e4f0:	add	x24, x24, #0x830
   2e4f4:	mov	x0, x24
   2e4f8:	bl	67e0 <__asan_internal_strlen@plt>
   2e4fc:	cbz	x0, 2f4fc <__asan_backtrace_create_state@@Base+0x2f6c>
   2e500:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e504:	add	x24, x0, x24
   2e508:	add	x22, x22, #0x831
   2e50c:	mov	w23, #0x74                  	// #116
   2e510:	ldr	x1, [x19, #256]
   2e514:	b	2e538 <__asan_backtrace_create_state@@Base+0x1fa8>
   2e518:	mov	x0, x1
   2e51c:	add	x1, x1, #0x1
   2e520:	str	x1, [x19, #256]
   2e524:	cmp	x24, x22
   2e528:	strb	w23, [x19, x0]
   2e52c:	strb	w23, [x19, #264]
   2e530:	b.eq	2f4fc <__asan_backtrace_create_state@@Base+0x2f6c>  // b.none
   2e534:	ldrb	w23, [x22], #1
   2e538:	cmp	x1, #0xff
   2e53c:	b.ne	2e518 <__asan_backtrace_create_state@@Base+0x1f88>  // b.any
   2e540:	ldp	x3, x2, [x19, #272]
   2e544:	strb	wzr, [x19, #255]
   2e548:	mov	x0, x19
   2e54c:	blr	x3
   2e550:	ldr	x2, [x19, #320]
   2e554:	mov	x1, #0x1                   	// #1
   2e558:	mov	x0, #0x0                   	// #0
   2e55c:	add	x2, x2, x1
   2e560:	str	x2, [x19, #320]
   2e564:	b	2e520 <__asan_backtrace_create_state@@Base+0x1f90>
   2e568:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e56c:	add	x24, x24, #0x848
   2e570:	mov	x0, x24
   2e574:	bl	67e0 <__asan_internal_strlen@plt>
   2e578:	cbz	x0, 2f534 <__asan_backtrace_create_state@@Base+0x2fa4>
   2e57c:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e580:	add	x24, x0, x24
   2e584:	add	x22, x22, #0x849
   2e588:	mov	w23, #0x74                  	// #116
   2e58c:	ldr	x1, [x19, #256]
   2e590:	b	2e5b4 <__asan_backtrace_create_state@@Base+0x2024>
   2e594:	mov	x0, x1
   2e598:	add	x1, x1, #0x1
   2e59c:	str	x1, [x19, #256]
   2e5a0:	cmp	x24, x22
   2e5a4:	strb	w23, [x19, x0]
   2e5a8:	strb	w23, [x19, #264]
   2e5ac:	b.eq	2f534 <__asan_backtrace_create_state@@Base+0x2fa4>  // b.none
   2e5b0:	ldrb	w23, [x22], #1
   2e5b4:	cmp	x1, #0xff
   2e5b8:	b.ne	2e594 <__asan_backtrace_create_state@@Base+0x2004>  // b.any
   2e5bc:	ldp	x3, x2, [x19, #272]
   2e5c0:	strb	wzr, [x19, #255]
   2e5c4:	mov	x0, x19
   2e5c8:	blr	x3
   2e5cc:	ldr	x2, [x19, #320]
   2e5d0:	mov	x1, #0x1                   	// #1
   2e5d4:	mov	x0, #0x0                   	// #0
   2e5d8:	add	x2, x2, x1
   2e5dc:	str	x2, [x19, #320]
   2e5e0:	b	2e59c <__asan_backtrace_create_state@@Base+0x200c>
   2e5e4:	stp	x25, x26, [sp, #64]
   2e5e8:	ldr	x25, [x20, #8]
   2e5ec:	ldr	x22, [x19, #296]
   2e5f0:	str	xzr, [x19, #296]
   2e5f4:	cbz	x25, 304a8 <__asan_backtrace_create_state@@Base+0x3f18>
   2e5f8:	add	x23, sp, #0x70
   2e5fc:	mov	x2, #0x1f                  	// #31
   2e600:	ldr	x6, [x19, #288]
   2e604:	mov	x3, x23
   2e608:	mov	x0, #0x0                   	// #0
   2e60c:	mov	w24, #0x0                   	// #0
   2e610:	mov	x1, #0x1                   	// #1
   2e614:	movk	x2, #0x1a, lsl #48
   2e618:	str	wzr, [x3, #16]
   2e61c:	add	w24, w24, #0x1
   2e620:	str	x0, [x3]
   2e624:	mov	x4, x3
   2e628:	ldr	w5, [x25]
   2e62c:	str	x25, [x3, #8]
   2e630:	str	x6, [x3, #24]
   2e634:	sub	w0, w5, #0x1c
   2e638:	cmp	w0, #0x34
   2e63c:	b.hi	2e64c <__asan_backtrace_create_state@@Base+0x20bc>  // b.pmore
   2e640:	lsl	x0, x1, x0
   2e644:	tst	x0, x2
   2e648:	b.ne	2f6c8 <__asan_backtrace_create_state@@Base+0x3138>  // b.any
   2e64c:	str	x3, [x19, #296]
   2e650:	cmp	w5, #0x2
   2e654:	b.eq	30388 <__asan_backtrace_create_state@@Base+0x3df8>  // b.none
   2e658:	cmp	w5, #0x4
   2e65c:	b.ne	2e66c <__asan_backtrace_create_state@@Base+0x20dc>  // b.any
   2e660:	add	x0, sp, #0x60
   2e664:	stp	x6, x25, [sp, #96]
   2e668:	str	x0, [x19, #288]
   2e66c:	ldr	x2, [x20, #16]
   2e670:	mov	x0, x19
   2e674:	mov	w1, w21
   2e678:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2e67c:	ldr	w0, [x25]
   2e680:	cmp	w0, #0x4
   2e684:	b.ne	2e690 <__asan_backtrace_create_state@@Base+0x2100>  // b.any
   2e688:	ldr	x0, [sp, #96]
   2e68c:	str	x0, [x19, #288]
   2e690:	sub	w20, w24, #0x1
   2e694:	mov	w24, #0x20                  	// #32
   2e698:	ubfiz	x0, x20, #5, #32
   2e69c:	add	x23, x23, x0
   2e6a0:	b	2e6a8 <__asan_backtrace_create_state@@Base+0x2118>
   2e6a4:	sub	w20, w20, #0x1
   2e6a8:	ldr	w0, [x23, #16]
   2e6ac:	cbnz	w0, 2e704 <__asan_backtrace_create_state@@Base+0x2174>
   2e6b0:	ldr	x0, [x19, #256]
   2e6b4:	add	x1, x0, #0x1
   2e6b8:	cmp	x0, #0xff
   2e6bc:	b.ne	2e6e8 <__asan_backtrace_create_state@@Base+0x2158>  // b.any
   2e6c0:	ldp	x3, x2, [x19, #272]
   2e6c4:	strb	wzr, [x19, #255]
   2e6c8:	mov	x1, x0
   2e6cc:	mov	x0, x19
   2e6d0:	blr	x3
   2e6d4:	ldr	x2, [x19, #320]
   2e6d8:	mov	x1, #0x1                   	// #1
   2e6dc:	mov	x0, #0x0                   	// #0
   2e6e0:	add	x2, x2, x1
   2e6e4:	str	x2, [x19, #320]
   2e6e8:	str	x1, [x19, #256]
   2e6ec:	mov	w1, w21
   2e6f0:	ldr	x2, [x23, #8]
   2e6f4:	strb	w24, [x19, x0]
   2e6f8:	strb	w24, [x19, #264]
   2e6fc:	mov	x0, x19
   2e700:	bl	31038 <__asan_backtrace_create_state@@Base+0x4aa8>
   2e704:	sub	x23, x23, #0x20
   2e708:	cbnz	w20, 2e6a4 <__asan_backtrace_create_state@@Base+0x2114>
   2e70c:	ldp	x23, x24, [sp, #48]
   2e710:	ldp	x25, x26, [sp, #64]
   2e714:	str	x22, [x19, #296]
   2e718:	ldp	x21, x22, [sp, #32]
   2e71c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2e720:	ldr	x22, [x20, #8]
   2e724:	ldr	x24, [x19, #296]
   2e728:	str	xzr, [x19, #296]
   2e72c:	ldr	x23, [x19, #368]
   2e730:	str	x20, [x19, #368]
   2e734:	tbz	w21, #2, 2e74c <__asan_backtrace_create_state@@Base+0x21bc>
   2e738:	ldr	w0, [x22]
   2e73c:	cbnz	w0, 2e74c <__asan_backtrace_create_state@@Base+0x21bc>
   2e740:	ldr	w0, [x22, #16]
   2e744:	cmp	w0, #0x6
   2e748:	b.eq	30a98 <__asan_backtrace_create_state@@Base+0x4508>  // b.none
   2e74c:	mov	x0, x19
   2e750:	mov	x2, x22
   2e754:	mov	w1, w21
   2e758:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2e75c:	ldrb	w0, [x19, #264]
   2e760:	cmp	w0, #0x3c
   2e764:	b.eq	30030 <__asan_backtrace_create_state@@Base+0x3aa0>  // b.none
   2e768:	ldr	x1, [x19, #256]
   2e76c:	cmp	x1, #0xff
   2e770:	b.eq	2edbc <__asan_backtrace_create_state@@Base+0x282c>  // b.none
   2e774:	add	x0, x1, #0x1
   2e778:	str	x0, [x19, #256]
   2e77c:	mov	w0, #0x3c                  	// #60
   2e780:	strb	w0, [x19, x1]
   2e784:	mov	w1, w21
   2e788:	strb	w0, [x19, #264]
   2e78c:	mov	x0, x19
   2e790:	ldr	x2, [x20, #16]
   2e794:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2e798:	ldrb	w0, [x19, #264]
   2e79c:	cmp	w0, #0x3e
   2e7a0:	b.eq	3000c <__asan_backtrace_create_state@@Base+0x3a7c>  // b.none
   2e7a4:	ldr	x1, [x19, #256]
   2e7a8:	cmp	x1, #0xff
   2e7ac:	b.eq	2ed94 <__asan_backtrace_create_state@@Base+0x2804>  // b.none
   2e7b0:	add	x0, x1, #0x1
   2e7b4:	str	x0, [x19, #256]
   2e7b8:	mov	w0, #0x3e                  	// #62
   2e7bc:	strb	w0, [x19, x1]
   2e7c0:	strb	w0, [x19, #264]
   2e7c4:	ldp	x21, x22, [sp, #32]
   2e7c8:	str	x24, [x19, #296]
   2e7cc:	str	x23, [x19, #368]
   2e7d0:	ldp	x23, x24, [sp, #48]
   2e7d4:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2e7d8:	ldr	w0, [x19, #312]
   2e7dc:	cbz	w0, 2faa0 <__asan_backtrace_create_state@@Base+0x3510>
   2e7e0:	adrp	x23, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e7e4:	add	x23, x23, #0x7b0
   2e7e8:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e7ec:	add	x23, x23, #0x5
   2e7f0:	add	x21, x21, #0x7b1
   2e7f4:	mov	w22, #0x61                  	// #97
   2e7f8:	ldr	x1, [x19, #256]
   2e7fc:	b	2e820 <__asan_backtrace_create_state@@Base+0x2290>
   2e800:	mov	x0, x1
   2e804:	add	x1, x1, #0x1
   2e808:	str	x1, [x19, #256]
   2e80c:	cmp	x23, x21
   2e810:	strb	w22, [x19, x0]
   2e814:	strb	w22, [x19, #264]
   2e818:	b.eq	2f6fc <__asan_backtrace_create_state@@Base+0x316c>  // b.none
   2e81c:	ldrb	w22, [x21], #1
   2e820:	cmp	x1, #0xff
   2e824:	b.ne	2e800 <__asan_backtrace_create_state@@Base+0x2270>  // b.any
   2e828:	ldp	x3, x2, [x19, #272]
   2e82c:	strb	wzr, [x19, #255]
   2e830:	mov	x0, x19
   2e834:	blr	x3
   2e838:	ldr	x2, [x19, #320]
   2e83c:	mov	x1, #0x1                   	// #1
   2e840:	mov	x0, #0x0                   	// #0
   2e844:	add	x2, x2, x1
   2e848:	str	x2, [x19, #320]
   2e84c:	b	2e808 <__asan_backtrace_create_state@@Base+0x2278>
   2e850:	ldr	x1, [x19, #256]
   2e854:	add	x0, x1, #0x1
   2e858:	cmp	x1, #0xff
   2e85c:	b.ne	2e884 <__asan_backtrace_create_state@@Base+0x22f4>  // b.any
   2e860:	ldp	x3, x2, [x19, #272]
   2e864:	strb	wzr, [x19, #255]
   2e868:	mov	x0, x19
   2e86c:	blr	x3
   2e870:	ldr	x2, [x19, #320]
   2e874:	mov	x0, #0x1                   	// #1
   2e878:	mov	x1, #0x0                   	// #0
   2e87c:	add	x2, x2, x0
   2e880:	str	x2, [x19, #320]
   2e884:	str	x0, [x19, #256]
   2e888:	mov	w0, #0x7e                  	// #126
   2e88c:	strb	w0, [x19, x1]
   2e890:	mov	w1, w21
   2e894:	strb	w0, [x19, #264]
   2e898:	mov	x0, x19
   2e89c:	ldr	x2, [x20, #16]
   2e8a0:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2e8a4:	ldp	x21, x22, [sp, #32]
   2e8a8:	ldp	x23, x24, [sp, #48]
   2e8ac:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2e8b0:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e8b4:	add	x24, x24, #0x7d8
   2e8b8:	mov	x0, x24
   2e8bc:	bl	67e0 <__asan_internal_strlen@plt>
   2e8c0:	cbz	x0, 2f438 <__asan_backtrace_create_state@@Base+0x2ea8>
   2e8c4:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2e8c8:	add	x24, x0, x24
   2e8cc:	add	x22, x22, #0x7d9
   2e8d0:	mov	w23, #0x76                  	// #118
   2e8d4:	ldr	x1, [x19, #256]
   2e8d8:	b	2e8fc <__asan_backtrace_create_state@@Base+0x236c>
   2e8dc:	mov	x0, x1
   2e8e0:	add	x1, x1, #0x1
   2e8e4:	str	x1, [x19, #256]
   2e8e8:	cmp	x24, x22
   2e8ec:	strb	w23, [x19, x0]
   2e8f0:	strb	w23, [x19, #264]
   2e8f4:	b.eq	2f438 <__asan_backtrace_create_state@@Base+0x2ea8>  // b.none
   2e8f8:	ldrb	w23, [x22], #1
   2e8fc:	cmp	x1, #0xff
   2e900:	b.ne	2e8dc <__asan_backtrace_create_state@@Base+0x234c>  // b.any
   2e904:	ldp	x3, x2, [x19, #272]
   2e908:	strb	wzr, [x19, #255]
   2e90c:	mov	x0, x19
   2e910:	blr	x3
   2e914:	ldr	x2, [x19, #320]
   2e918:	mov	x1, #0x1                   	// #1
   2e91c:	mov	x0, #0x0                   	// #0
   2e920:	add	x2, x2, x1
   2e924:	str	x2, [x19, #320]
   2e928:	b	2e8e4 <__asan_backtrace_create_state@@Base+0x2354>
   2e92c:	ldrsw	x22, [x20, #16]
   2e930:	ldr	x20, [x20, #8]
   2e934:	tbnz	w21, #2, 2f93c <__asan_backtrace_create_state@@Base+0x33ac>
   2e938:	cbz	x22, 30b70 <__asan_backtrace_create_state@@Base+0x45e0>
   2e93c:	add	x22, x20, x22
   2e940:	ldr	x1, [x19, #256]
   2e944:	b	2e968 <__asan_backtrace_create_state@@Base+0x23d8>
   2e948:	mov	x0, x1
   2e94c:	add	x1, x1, #0x1
   2e950:	str	x1, [x19, #256]
   2e954:	add	x20, x20, #0x1
   2e958:	strb	w21, [x19, x0]
   2e95c:	cmp	x20, x22
   2e960:	strb	w21, [x19, #264]
   2e964:	b.eq	2fba8 <__asan_backtrace_create_state@@Base+0x3618>  // b.none
   2e968:	ldrb	w21, [x20]
   2e96c:	cmp	x1, #0xff
   2e970:	b.ne	2e948 <__asan_backtrace_create_state@@Base+0x23b8>  // b.any
   2e974:	ldp	x3, x2, [x19, #272]
   2e978:	strb	wzr, [x19, #255]
   2e97c:	mov	x0, x19
   2e980:	blr	x3
   2e984:	ldr	x2, [x19, #320]
   2e988:	mov	x1, #0x1                   	// #1
   2e98c:	mov	x0, #0x0                   	// #0
   2e990:	add	x2, x2, x1
   2e994:	str	x2, [x19, #320]
   2e998:	b	2e950 <__asan_backtrace_create_state@@Base+0x23c0>
   2e99c:	ldr	x0, [x20, #8]
   2e9a0:	tbnz	w21, #2, 2f8d0 <__asan_backtrace_create_state@@Base+0x3340>
   2e9a4:	ldrsw	x22, [x0, #8]
   2e9a8:	ldr	x20, [x0]
   2e9ac:	cbz	x22, 30b64 <__asan_backtrace_create_state@@Base+0x45d4>
   2e9b0:	add	x22, x20, x22
   2e9b4:	ldr	x1, [x19, #256]
   2e9b8:	b	2e9dc <__asan_backtrace_create_state@@Base+0x244c>
   2e9bc:	mov	x0, x1
   2e9c0:	add	x1, x1, #0x1
   2e9c4:	str	x1, [x19, #256]
   2e9c8:	add	x20, x20, #0x1
   2e9cc:	strb	w21, [x19, x0]
   2e9d0:	cmp	x22, x20
   2e9d4:	strb	w21, [x19, #264]
   2e9d8:	b.eq	2fbc0 <__asan_backtrace_create_state@@Base+0x3630>  // b.none
   2e9dc:	ldrb	w21, [x20]
   2e9e0:	cmp	x1, #0xff
   2e9e4:	b.ne	2e9bc <__asan_backtrace_create_state@@Base+0x242c>  // b.any
   2e9e8:	ldp	x3, x2, [x19, #272]
   2e9ec:	strb	wzr, [x19, #255]
   2e9f0:	mov	x0, x19
   2e9f4:	blr	x3
   2e9f8:	ldr	x2, [x19, #320]
   2e9fc:	mov	x1, #0x1                   	// #1
   2ea00:	mov	x0, #0x0                   	// #0
   2ea04:	add	x2, x2, x1
   2ea08:	str	x2, [x19, #320]
   2ea0c:	b	2e9c4 <__asan_backtrace_create_state@@Base+0x2434>
   2ea10:	ldr	x2, [x20, #8]
   2ea14:	mov	w1, w21
   2ea18:	mov	x0, x19
   2ea1c:	bl	32258 <__asan_backtrace_create_state@@Base+0x5cc8>
   2ea20:	ldp	x21, x22, [sp, #32]
   2ea24:	ldp	x23, x24, [sp, #48]
   2ea28:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2ea2c:	ldp	x23, x20, [x20, #8]
   2ea30:	mov	x22, #0x0                   	// #0
   2ea34:	ldr	w0, [x23]
   2ea38:	cmp	w0, #0x32
   2ea3c:	b.eq	300f4 <__asan_backtrace_create_state@@Base+0x3b64>  // b.none
   2ea40:	cmp	w0, #0x34
   2ea44:	b.eq	2fb00 <__asan_backtrace_create_state@@Base+0x3570>  // b.none
   2ea48:	mov	x2, x23
   2ea4c:	mov	w1, w21
   2ea50:	mov	x0, x19
   2ea54:	bl	32258 <__asan_backtrace_create_state@@Base+0x5cc8>
   2ea58:	cbz	x22, 2f6ac <__asan_backtrace_create_state@@Base+0x311c>
   2ea5c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2ea60:	mov	x0, x22
   2ea64:	add	x1, x1, #0x9c8
   2ea68:	bl	6b30 <__asan_internal_strcmp@plt>
   2ea6c:	cbz	w0, 30714 <__asan_backtrace_create_state@@Base+0x4184>
   2ea70:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2ea74:	mov	x0, x22
   2ea78:	add	x1, x1, #0xf78
   2ea7c:	bl	6b30 <__asan_internal_strcmp@plt>
   2ea80:	cbnz	w0, 2f6ac <__asan_backtrace_create_state@@Base+0x311c>
   2ea84:	ldr	x1, [x19, #256]
   2ea88:	cmp	x1, #0xff
   2ea8c:	b.ne	2eab0 <__asan_backtrace_create_state@@Base+0x2520>  // b.any
   2ea90:	ldp	x3, x2, [x19, #272]
   2ea94:	strb	wzr, [x19, #255]
   2ea98:	mov	x0, x19
   2ea9c:	blr	x3
   2eaa0:	ldr	x0, [x19, #320]
   2eaa4:	mov	x1, #0x0                   	// #0
   2eaa8:	add	x0, x0, #0x1
   2eaac:	str	x0, [x19, #320]
   2eab0:	add	x0, x1, #0x1
   2eab4:	str	x0, [x19, #256]
   2eab8:	mov	w0, #0x28                  	// #40
   2eabc:	strb	w0, [x19, x1]
   2eac0:	strb	w0, [x19, #264]
   2eac4:	mov	w1, w21
   2eac8:	mov	x2, x20
   2eacc:	mov	x0, x19
   2ead0:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2ead4:	ldr	x1, [x19, #256]
   2ead8:	cmp	x1, #0xff
   2eadc:	b.ne	2eb00 <__asan_backtrace_create_state@@Base+0x2570>  // b.any
   2eae0:	ldp	x3, x2, [x19, #272]
   2eae4:	strb	wzr, [x19, #255]
   2eae8:	mov	x0, x19
   2eaec:	blr	x3
   2eaf0:	ldr	x0, [x19, #320]
   2eaf4:	mov	x1, #0x0                   	// #0
   2eaf8:	add	x0, x0, #0x1
   2eafc:	str	x0, [x19, #320]
   2eb00:	add	x0, x1, #0x1
   2eb04:	str	x0, [x19, #256]
   2eb08:	mov	w0, #0x29                  	// #41
   2eb0c:	strb	w0, [x19, x1]
   2eb10:	strb	w0, [x19, #264]
   2eb14:	ldp	x21, x22, [sp, #32]
   2eb18:	ldp	x23, x24, [sp, #48]
   2eb1c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2eb20:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2eb24:	add	x24, x24, #0x9a8
   2eb28:	mov	x0, x24
   2eb2c:	bl	67e0 <__asan_internal_strlen@plt>
   2eb30:	cbz	x0, 2f3e8 <__asan_backtrace_create_state@@Base+0x2e58>
   2eb34:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2eb38:	add	x24, x0, x24
   2eb3c:	add	x22, x22, #0x9a9
   2eb40:	mov	w23, #0x6f                  	// #111
   2eb44:	ldr	x1, [x19, #256]
   2eb48:	b	2eb6c <__asan_backtrace_create_state@@Base+0x25dc>
   2eb4c:	mov	x0, x1
   2eb50:	add	x1, x1, #0x1
   2eb54:	str	x1, [x19, #256]
   2eb58:	cmp	x24, x22
   2eb5c:	strb	w23, [x19, x0]
   2eb60:	strb	w23, [x19, #264]
   2eb64:	b.eq	2f3e8 <__asan_backtrace_create_state@@Base+0x2e58>  // b.none
   2eb68:	ldrb	w23, [x22], #1
   2eb6c:	cmp	x1, #0xff
   2eb70:	b.ne	2eb4c <__asan_backtrace_create_state@@Base+0x25bc>  // b.any
   2eb74:	ldp	x3, x2, [x19, #272]
   2eb78:	strb	wzr, [x19, #255]
   2eb7c:	mov	x0, x19
   2eb80:	blr	x3
   2eb84:	ldr	x2, [x19, #320]
   2eb88:	mov	x1, #0x1                   	// #1
   2eb8c:	mov	x0, #0x0                   	// #0
   2eb90:	add	x2, x2, x1
   2eb94:	str	x2, [x19, #320]
   2eb98:	b	2eb54 <__asan_backtrace_create_state@@Base+0x25c4>
   2eb9c:	ldr	x1, [x19, #256]
   2eba0:	ldrb	w20, [x20, #8]
   2eba4:	add	x0, x1, #0x1
   2eba8:	cmp	x1, #0xff
   2ebac:	b.ne	2ebd4 <__asan_backtrace_create_state@@Base+0x2644>  // b.any
   2ebb0:	ldp	x3, x2, [x19, #272]
   2ebb4:	strb	wzr, [x19, #255]
   2ebb8:	mov	x0, x19
   2ebbc:	blr	x3
   2ebc0:	ldr	x2, [x19, #320]
   2ebc4:	mov	x0, #0x1                   	// #1
   2ebc8:	mov	x1, #0x0                   	// #0
   2ebcc:	add	x2, x2, x0
   2ebd0:	str	x2, [x19, #320]
   2ebd4:	str	x0, [x19, #256]
   2ebd8:	strb	w20, [x19, x1]
   2ebdc:	strb	w20, [x19, #264]
   2ebe0:	ldp	x21, x22, [sp, #32]
   2ebe4:	ldp	x23, x24, [sp, #48]
   2ebe8:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2ebec:	ldr	w2, [x20, #8]
   2ebf0:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   2ebf4:	add	x1, x1, #0xc30
   2ebf8:	add	x20, sp, #0x70
   2ebfc:	mov	x0, x20
   2ec00:	bl	6900 <sprintf@plt>
   2ec04:	mov	x0, x20
   2ec08:	bl	67e0 <__asan_internal_strlen@plt>
   2ec0c:	cbz	x0, 308d4 <__asan_backtrace_create_state@@Base+0x4344>
   2ec10:	add	x22, x20, x0
   2ec14:	ldr	x1, [x19, #256]
   2ec18:	b	2ec3c <__asan_backtrace_create_state@@Base+0x26ac>
   2ec1c:	mov	x0, x1
   2ec20:	add	x1, x1, #0x1
   2ec24:	str	x1, [x19, #256]
   2ec28:	add	x20, x20, #0x1
   2ec2c:	strb	w21, [x19, x0]
   2ec30:	cmp	x22, x20
   2ec34:	strb	w21, [x19, #264]
   2ec38:	b.eq	2f650 <__asan_backtrace_create_state@@Base+0x30c0>  // b.none
   2ec3c:	ldrb	w21, [x20]
   2ec40:	cmp	x1, #0xff
   2ec44:	b.ne	2ec1c <__asan_backtrace_create_state@@Base+0x268c>  // b.any
   2ec48:	ldp	x3, x2, [x19, #272]
   2ec4c:	strb	wzr, [x19, #255]
   2ec50:	mov	x0, x19
   2ec54:	blr	x3
   2ec58:	ldr	x2, [x19, #320]
   2ec5c:	mov	x1, #0x1                   	// #1
   2ec60:	mov	x0, #0x0                   	// #0
   2ec64:	add	x2, x2, x1
   2ec68:	str	x2, [x19, #320]
   2ec6c:	b	2ec24 <__asan_backtrace_create_state@@Base+0x2694>
   2ec70:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2ec74:	add	x24, x24, #0xa28
   2ec78:	mov	x0, x24
   2ec7c:	bl	67e0 <__asan_internal_strlen@plt>
   2ec80:	cbz	x0, 2f328 <__asan_backtrace_create_state@@Base+0x2d98>
   2ec84:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2ec88:	add	x24, x0, x24
   2ec8c:	add	x22, x22, #0xa29
   2ec90:	mov	w23, #0x64                  	// #100
   2ec94:	ldr	x1, [x19, #256]
   2ec98:	b	2ecbc <__asan_backtrace_create_state@@Base+0x272c>
   2ec9c:	mov	x0, x1
   2eca0:	add	x1, x1, #0x1
   2eca4:	str	x1, [x19, #256]
   2eca8:	cmp	x24, x22
   2ecac:	strb	w23, [x19, x0]
   2ecb0:	strb	w23, [x19, #264]
   2ecb4:	b.eq	2f328 <__asan_backtrace_create_state@@Base+0x2d98>  // b.none
   2ecb8:	ldrb	w23, [x22], #1
   2ecbc:	cmp	x1, #0xff
   2ecc0:	b.ne	2ec9c <__asan_backtrace_create_state@@Base+0x270c>  // b.any
   2ecc4:	ldp	x3, x2, [x19, #272]
   2ecc8:	strb	wzr, [x19, #255]
   2eccc:	mov	x0, x19
   2ecd0:	blr	x3
   2ecd4:	ldr	x2, [x19, #320]
   2ecd8:	mov	x1, #0x1                   	// #1
   2ecdc:	mov	x0, #0x0                   	// #0
   2ece0:	add	x2, x2, x1
   2ece4:	str	x2, [x19, #320]
   2ece8:	b	2eca4 <__asan_backtrace_create_state@@Base+0x2714>
   2ecec:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2ecf0:	add	x24, x24, #0xa48
   2ecf4:	mov	x0, x24
   2ecf8:	bl	67e0 <__asan_internal_strlen@plt>
   2ecfc:	cbz	x0, 2f30c <__asan_backtrace_create_state@@Base+0x2d7c>
   2ed00:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2ed04:	add	x24, x0, x24
   2ed08:	add	x22, x22, #0xa49
   2ed0c:	mov	w23, #0x67                  	// #103
   2ed10:	ldr	x1, [x19, #256]
   2ed14:	b	2ed38 <__asan_backtrace_create_state@@Base+0x27a8>
   2ed18:	mov	x0, x1
   2ed1c:	add	x1, x1, #0x1
   2ed20:	str	x1, [x19, #256]
   2ed24:	cmp	x24, x22
   2ed28:	strb	w23, [x19, x0]
   2ed2c:	strb	w23, [x19, #264]
   2ed30:	b.eq	2f30c <__asan_backtrace_create_state@@Base+0x2d7c>  // b.none
   2ed34:	ldrb	w23, [x22], #1
   2ed38:	cmp	x1, #0xff
   2ed3c:	b.ne	2ed18 <__asan_backtrace_create_state@@Base+0x2788>  // b.any
   2ed40:	ldp	x3, x2, [x19, #272]
   2ed44:	strb	wzr, [x19, #255]
   2ed48:	mov	x0, x19
   2ed4c:	blr	x3
   2ed50:	ldr	x2, [x19, #320]
   2ed54:	mov	x1, #0x1                   	// #1
   2ed58:	mov	x0, #0x0                   	// #0
   2ed5c:	add	x2, x2, x1
   2ed60:	str	x2, [x19, #320]
   2ed64:	b	2ed20 <__asan_backtrace_create_state@@Base+0x2790>
   2ed68:	ldr	x2, [x20, #8]
   2ed6c:	mov	w1, w21
   2ed70:	mov	x0, x19
   2ed74:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2ed78:	ldr	x2, [x20, #16]
   2ed7c:	mov	w1, w21
   2ed80:	mov	x0, x19
   2ed84:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2ed88:	ldp	x21, x22, [sp, #32]
   2ed8c:	ldp	x23, x24, [sp, #48]
   2ed90:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2ed94:	ldp	x3, x2, [x19, #272]
   2ed98:	strb	wzr, [x19, #255]
   2ed9c:	mov	x0, x19
   2eda0:	blr	x3
   2eda4:	ldr	x2, [x19, #320]
   2eda8:	mov	x0, #0x1                   	// #1
   2edac:	mov	x1, #0x0                   	// #0
   2edb0:	add	x2, x2, x0
   2edb4:	str	x2, [x19, #320]
   2edb8:	b	2e7b4 <__asan_backtrace_create_state@@Base+0x2224>
   2edbc:	ldp	x3, x2, [x19, #272]
   2edc0:	strb	wzr, [x19, #255]
   2edc4:	mov	x0, x19
   2edc8:	blr	x3
   2edcc:	ldr	x2, [x19, #320]
   2edd0:	mov	x0, #0x1                   	// #1
   2edd4:	mov	x1, #0x0                   	// #0
   2edd8:	add	x2, x2, x0
   2eddc:	str	x2, [x19, #320]
   2ede0:	b	2e778 <__asan_backtrace_create_state@@Base+0x21e8>
   2ede4:	ldr	x2, [x0, #8]
   2ede8:	add	x0, sp, #0x70
   2edec:	ldr	x1, [x19, #288]
   2edf0:	stp	x4, x20, [sp, #112]
   2edf4:	str	wzr, [sp, #128]
   2edf8:	str	x1, [sp, #136]
   2edfc:	str	x0, [x19, #296]
   2ee00:	cbnz	x2, 2d030 <__asan_backtrace_create_state@@Base+0xaa0>
   2ee04:	b	2d02c <__asan_backtrace_create_state@@Base+0xa9c>
   2ee08:	ldp	x21, x22, [sp, #32]
   2ee0c:	ldp	x23, x24, [sp, #48]
   2ee10:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2ee14:	ldr	x2, [x20, #16]
   2ee18:	mov	w1, w21
   2ee1c:	mov	x0, x19
   2ee20:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2ee24:	ldr	x1, [x19, #256]
   2ee28:	add	x0, x1, #0x1
   2ee2c:	cmp	x1, #0xff
   2ee30:	b.ne	2ee58 <__asan_backtrace_create_state@@Base+0x28c8>  // b.any
   2ee34:	ldp	x3, x2, [x19, #272]
   2ee38:	strb	wzr, [x19, #255]
   2ee3c:	mov	x0, x19
   2ee40:	blr	x3
   2ee44:	ldr	x2, [x19, #320]
   2ee48:	mov	x0, #0x1                   	// #1
   2ee4c:	mov	x1, #0x0                   	// #0
   2ee50:	add	x2, x2, x0
   2ee54:	str	x2, [x19, #320]
   2ee58:	str	x0, [x19, #256]
   2ee5c:	mov	w0, #0x5d                  	// #93
   2ee60:	strb	w0, [x19, x1]
   2ee64:	strb	w0, [x19, #264]
   2ee68:	ldp	x21, x22, [sp, #32]
   2ee6c:	ldp	x23, x24, [sp, #48]
   2ee70:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2ee74:	ldr	x2, [x20, #16]
   2ee78:	mov	w1, w21
   2ee7c:	mov	x0, x19
   2ee80:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2ee84:	ldp	x21, x22, [sp, #32]
   2ee88:	ldp	x23, x24, [sp, #48]
   2ee8c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2ee90:	ldr	x2, [x20, #8]
   2ee94:	mov	w1, w21
   2ee98:	mov	x0, x19
   2ee9c:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2eea0:	ldp	x21, x22, [sp, #32]
   2eea4:	ldp	x23, x24, [sp, #48]
   2eea8:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2eeac:	ldr	x2, [x20, #16]
   2eeb0:	mov	w1, w21
   2eeb4:	mov	x0, x19
   2eeb8:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2eebc:	add	x24, x24, #0x828
   2eec0:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2eec4:	mov	x0, x24
   2eec8:	bl	67e0 <__asan_internal_strlen@plt>
   2eecc:	cbz	x0, 2ef38 <__asan_backtrace_create_state@@Base+0x29a8>
   2eed0:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2eed4:	add	x24, x0, x24
   2eed8:	add	x22, x22, #0x829
   2eedc:	mov	w23, #0x20                  	// #32
   2eee0:	ldr	x1, [x19, #256]
   2eee4:	b	2ef08 <__asan_backtrace_create_state@@Base+0x2978>
   2eee8:	mov	x0, x1
   2eeec:	add	x1, x1, #0x1
   2eef0:	str	x1, [x19, #256]
   2eef4:	cmp	x24, x22
   2eef8:	strb	w23, [x19, x0]
   2eefc:	strb	w23, [x19, #264]
   2ef00:	b.eq	2ef38 <__asan_backtrace_create_state@@Base+0x29a8>  // b.none
   2ef04:	ldrb	w23, [x22], #1
   2ef08:	cmp	x1, #0xff
   2ef0c:	b.ne	2eee8 <__asan_backtrace_create_state@@Base+0x2958>  // b.any
   2ef10:	ldp	x3, x2, [x19, #272]
   2ef14:	strb	wzr, [x19, #255]
   2ef18:	mov	x0, x19
   2ef1c:	blr	x3
   2ef20:	ldr	x2, [x19, #320]
   2ef24:	mov	x1, #0x1                   	// #1
   2ef28:	mov	x0, #0x0                   	// #0
   2ef2c:	add	x2, x2, x1
   2ef30:	str	x2, [x19, #320]
   2ef34:	b	2eef0 <__asan_backtrace_create_state@@Base+0x2960>
   2ef38:	ldr	x2, [x20, #8]
   2ef3c:	mov	w1, w21
   2ef40:	mov	x0, x19
   2ef44:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2ef48:	ldp	x21, x22, [sp, #32]
   2ef4c:	ldp	x23, x24, [sp, #48]
   2ef50:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2ef54:	ldr	x2, [x20, #8]
   2ef58:	mov	w1, w21
   2ef5c:	mov	x0, x19
   2ef60:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2ef64:	ldp	x21, x22, [sp, #32]
   2ef68:	ldp	x23, x24, [sp, #48]
   2ef6c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2ef70:	ldr	x2, [x20, #8]
   2ef74:	mov	w1, w21
   2ef78:	mov	x0, x19
   2ef7c:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2ef80:	ldp	x21, x22, [sp, #32]
   2ef84:	ldp	x23, x24, [sp, #48]
   2ef88:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2ef8c:	ldr	x20, [x24, #8]
   2ef90:	ldrb	w0, [x20]
   2ef94:	sub	w0, w0, #0x61
   2ef98:	and	w0, w0, #0xff
   2ef9c:	cmp	w0, #0x19
   2efa0:	b.hi	2efec <__asan_backtrace_create_state@@Base+0x2a5c>  // b.pmore
   2efa4:	ldr	x1, [x19, #256]
   2efa8:	add	x0, x1, #0x1
   2efac:	cmp	x1, #0xff
   2efb0:	b.ne	2efdc <__asan_backtrace_create_state@@Base+0x2a4c>  // b.any
   2efb4:	ldp	x3, x2, [x19, #272]
   2efb8:	strb	wzr, [x19, #255]
   2efbc:	mov	x0, x19
   2efc0:	blr	x3
   2efc4:	ldr	x2, [x19, #320]
   2efc8:	mov	x0, #0x1                   	// #1
   2efcc:	mov	x1, #0x0                   	// #0
   2efd0:	add	x2, x2, x0
   2efd4:	ldr	x20, [x24, #8]
   2efd8:	str	x2, [x19, #320]
   2efdc:	str	x0, [x19, #256]
   2efe0:	mov	w0, #0x20                  	// #32
   2efe4:	strb	w0, [x19, x1]
   2efe8:	strb	w0, [x19, #264]
   2efec:	sxtw	x22, w23
   2eff0:	sub	w0, w23, #0x1
   2eff4:	add	x1, x20, x22
   2eff8:	sxtw	x0, w0
   2effc:	ldurb	w1, [x1, #-1]
   2f000:	cmp	w1, #0x20
   2f004:	csel	x22, x22, x0, ne  // ne = any
   2f008:	cbz	x22, 30830 <__asan_backtrace_create_state@@Base+0x42a0>
   2f00c:	add	x22, x20, x22
   2f010:	ldr	x1, [x19, #256]
   2f014:	b	2f038 <__asan_backtrace_create_state@@Base+0x2aa8>
   2f018:	mov	x0, x1
   2f01c:	add	x1, x1, #0x1
   2f020:	str	x1, [x19, #256]
   2f024:	add	x20, x20, #0x1
   2f028:	strb	w21, [x19, x0]
   2f02c:	cmp	x20, x22
   2f030:	strb	w21, [x19, #264]
   2f034:	b.eq	2f65c <__asan_backtrace_create_state@@Base+0x30cc>  // b.none
   2f038:	ldrb	w21, [x20]
   2f03c:	cmp	x1, #0xff
   2f040:	b.ne	2f018 <__asan_backtrace_create_state@@Base+0x2a88>  // b.any
   2f044:	ldp	x3, x2, [x19, #272]
   2f048:	strb	wzr, [x19, #255]
   2f04c:	mov	x0, x19
   2f050:	blr	x3
   2f054:	ldr	x2, [x19, #320]
   2f058:	mov	x1, #0x1                   	// #1
   2f05c:	mov	x0, #0x0                   	// #0
   2f060:	add	x2, x2, x1
   2f064:	str	x2, [x19, #320]
   2f068:	b	2f020 <__asan_backtrace_create_state@@Base+0x2a90>
   2f06c:	ldr	x2, [x20, #8]
   2f070:	mov	w1, w21
   2f074:	mov	x0, x19
   2f078:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f07c:	ldp	x21, x22, [sp, #32]
   2f080:	ldp	x23, x24, [sp, #48]
   2f084:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f088:	ldr	x2, [x20, #8]
   2f08c:	mov	w1, w21
   2f090:	mov	x0, x19
   2f094:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f098:	ldp	x21, x22, [sp, #32]
   2f09c:	ldp	x23, x24, [sp, #48]
   2f0a0:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f0a4:	ldr	x2, [x20, #8]
   2f0a8:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   2f0ac:	add	x1, x1, #0xc30
   2f0b0:	add	x20, sp, #0x70
   2f0b4:	add	w2, w2, #0x1
   2f0b8:	mov	x0, x20
   2f0bc:	bl	6900 <sprintf@plt>
   2f0c0:	mov	x0, x20
   2f0c4:	bl	67e0 <__asan_internal_strlen@plt>
   2f0c8:	ldr	x1, [x19, #256]
   2f0cc:	cbz	x0, 2f12c <__asan_backtrace_create_state@@Base+0x2b9c>
   2f0d0:	add	x22, x20, x0
   2f0d4:	b	2f0f8 <__asan_backtrace_create_state@@Base+0x2b68>
   2f0d8:	mov	x0, x1
   2f0dc:	add	x1, x1, #0x1
   2f0e0:	str	x1, [x19, #256]
   2f0e4:	add	x20, x20, #0x1
   2f0e8:	strb	w21, [x19, x0]
   2f0ec:	cmp	x20, x22
   2f0f0:	strb	w21, [x19, #264]
   2f0f4:	b.eq	2f12c <__asan_backtrace_create_state@@Base+0x2b9c>  // b.none
   2f0f8:	ldrb	w21, [x20]
   2f0fc:	cmp	x1, #0xff
   2f100:	b.ne	2f0d8 <__asan_backtrace_create_state@@Base+0x2b48>  // b.any
   2f104:	ldp	x3, x2, [x19, #272]
   2f108:	strb	wzr, [x19, #255]
   2f10c:	mov	x0, x19
   2f110:	blr	x3
   2f114:	ldr	x2, [x19, #320]
   2f118:	mov	x1, #0x1                   	// #1
   2f11c:	mov	x0, #0x0                   	// #0
   2f120:	add	x2, x2, x1
   2f124:	str	x2, [x19, #320]
   2f128:	b	2f0e0 <__asan_backtrace_create_state@@Base+0x2b50>
   2f12c:	add	x0, x1, #0x1
   2f130:	cmp	x1, #0xff
   2f134:	b.ne	2f15c <__asan_backtrace_create_state@@Base+0x2bcc>  // b.any
   2f138:	ldp	x3, x2, [x19, #272]
   2f13c:	strb	wzr, [x19, #255]
   2f140:	mov	x0, x19
   2f144:	blr	x3
   2f148:	ldr	x2, [x19, #320]
   2f14c:	mov	x0, #0x1                   	// #1
   2f150:	mov	x1, #0x0                   	// #0
   2f154:	add	x2, x2, x0
   2f158:	str	x2, [x19, #320]
   2f15c:	str	x0, [x19, #256]
   2f160:	mov	w0, #0x7d                  	// #125
   2f164:	strb	w0, [x19, x1]
   2f168:	strb	w0, [x19, #264]
   2f16c:	ldp	x21, x22, [sp, #32]
   2f170:	ldp	x23, x24, [sp, #48]
   2f174:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f178:	ldr	w3, [x19, #312]
   2f17c:	mov	x0, x19
   2f180:	ldr	x2, [x20, #8]
   2f184:	add	w3, w3, #0x1
   2f188:	str	w3, [x19, #312]
   2f18c:	mov	w1, w21
   2f190:	adrp	x23, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2f194:	add	x23, x23, #0xa98
   2f198:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f19c:	ldr	w0, [x19, #312]
   2f1a0:	sub	w0, w0, #0x1
   2f1a4:	str	w0, [x19, #312]
   2f1a8:	mov	x0, x23
   2f1ac:	bl	67e0 <__asan_internal_strlen@plt>
   2f1b0:	cbz	x0, 2f21c <__asan_backtrace_create_state@@Base+0x2c8c>
   2f1b4:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2f1b8:	add	x23, x0, x23
   2f1bc:	add	x21, x21, #0xa99
   2f1c0:	mov	w22, #0x29                  	// #41
   2f1c4:	ldr	x1, [x19, #256]
   2f1c8:	b	2f1ec <__asan_backtrace_create_state@@Base+0x2c5c>
   2f1cc:	mov	x0, x1
   2f1d0:	add	x1, x1, #0x1
   2f1d4:	str	x1, [x19, #256]
   2f1d8:	cmp	x21, x23
   2f1dc:	strb	w22, [x19, x0]
   2f1e0:	strb	w22, [x19, #264]
   2f1e4:	b.eq	2f21c <__asan_backtrace_create_state@@Base+0x2c8c>  // b.none
   2f1e8:	ldrb	w22, [x21], #1
   2f1ec:	cmp	x1, #0xff
   2f1f0:	b.ne	2f1cc <__asan_backtrace_create_state@@Base+0x2c3c>  // b.any
   2f1f4:	ldp	x3, x2, [x19, #272]
   2f1f8:	strb	wzr, [x19, #255]
   2f1fc:	mov	x0, x19
   2f200:	blr	x3
   2f204:	ldr	x2, [x19, #320]
   2f208:	mov	x1, #0x1                   	// #1
   2f20c:	mov	x0, #0x0                   	// #0
   2f210:	add	x2, x2, x1
   2f214:	str	x2, [x19, #320]
   2f218:	b	2f1d4 <__asan_backtrace_create_state@@Base+0x2c44>
   2f21c:	ldr	w2, [x20, #16]
   2f220:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   2f224:	add	x1, x1, #0xc30
   2f228:	add	x20, sp, #0x70
   2f22c:	add	w2, w2, #0x1
   2f230:	mov	x0, x20
   2f234:	bl	6900 <sprintf@plt>
   2f238:	mov	x0, x20
   2f23c:	bl	67e0 <__asan_internal_strlen@plt>
   2f240:	ldr	x1, [x19, #256]
   2f244:	cbz	x0, 2f2a4 <__asan_backtrace_create_state@@Base+0x2d14>
   2f248:	add	x22, x20, x0
   2f24c:	b	2f270 <__asan_backtrace_create_state@@Base+0x2ce0>
   2f250:	mov	x0, x1
   2f254:	add	x1, x1, #0x1
   2f258:	str	x1, [x19, #256]
   2f25c:	add	x20, x20, #0x1
   2f260:	strb	w21, [x19, x0]
   2f264:	cmp	x22, x20
   2f268:	strb	w21, [x19, #264]
   2f26c:	b.eq	2f2a4 <__asan_backtrace_create_state@@Base+0x2d14>  // b.none
   2f270:	ldrb	w21, [x20]
   2f274:	cmp	x1, #0xff
   2f278:	b.ne	2f250 <__asan_backtrace_create_state@@Base+0x2cc0>  // b.any
   2f27c:	ldp	x3, x2, [x19, #272]
   2f280:	strb	wzr, [x19, #255]
   2f284:	mov	x0, x19
   2f288:	blr	x3
   2f28c:	ldr	x2, [x19, #320]
   2f290:	mov	x1, #0x1                   	// #1
   2f294:	mov	x0, #0x0                   	// #0
   2f298:	add	x2, x2, x1
   2f29c:	str	x2, [x19, #320]
   2f2a0:	b	2f258 <__asan_backtrace_create_state@@Base+0x2cc8>
   2f2a4:	add	x0, x1, #0x1
   2f2a8:	cmp	x1, #0xff
   2f2ac:	b.ne	2f2d4 <__asan_backtrace_create_state@@Base+0x2d44>  // b.any
   2f2b0:	ldp	x3, x2, [x19, #272]
   2f2b4:	strb	wzr, [x19, #255]
   2f2b8:	mov	x0, x19
   2f2bc:	blr	x3
   2f2c0:	ldr	x2, [x19, #320]
   2f2c4:	mov	x0, #0x1                   	// #1
   2f2c8:	mov	x1, #0x0                   	// #0
   2f2cc:	add	x2, x2, x0
   2f2d0:	str	x2, [x19, #320]
   2f2d4:	str	x0, [x19, #256]
   2f2d8:	mov	w0, #0x7d                  	// #125
   2f2dc:	strb	w0, [x19, x1]
   2f2e0:	strb	w0, [x19, #264]
   2f2e4:	ldp	x21, x22, [sp, #32]
   2f2e8:	ldp	x23, x24, [sp, #48]
   2f2ec:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f2f0:	ldr	x2, [x20, #8]
   2f2f4:	mov	w1, w21
   2f2f8:	mov	x0, x19
   2f2fc:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f300:	ldp	x21, x22, [sp, #32]
   2f304:	ldp	x23, x24, [sp, #48]
   2f308:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f30c:	ldr	x2, [x20, #8]
   2f310:	mov	w1, w21
   2f314:	mov	x0, x19
   2f318:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f31c:	ldp	x21, x22, [sp, #32]
   2f320:	ldp	x23, x24, [sp, #48]
   2f324:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f328:	ldr	x2, [x20, #8]
   2f32c:	mov	w1, w21
   2f330:	mov	x0, x19
   2f334:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f338:	ldr	x1, [x19, #256]
   2f33c:	add	x0, x1, #0x1
   2f340:	cmp	x1, #0xff
   2f344:	b.ne	2f36c <__asan_backtrace_create_state@@Base+0x2ddc>  // b.any
   2f348:	ldp	x3, x2, [x19, #272]
   2f34c:	strb	wzr, [x19, #255]
   2f350:	mov	x0, x19
   2f354:	blr	x3
   2f358:	ldr	x2, [x19, #320]
   2f35c:	mov	x0, #0x1                   	// #1
   2f360:	mov	x1, #0x0                   	// #0
   2f364:	add	x2, x2, x0
   2f368:	str	x2, [x19, #320]
   2f36c:	str	x0, [x19, #256]
   2f370:	mov	w0, #0x29                  	// #41
   2f374:	strb	w0, [x19, x1]
   2f378:	strb	w0, [x19, #264]
   2f37c:	ldp	x21, x22, [sp, #32]
   2f380:	ldp	x23, x24, [sp, #48]
   2f384:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f388:	ldr	x2, [x20, #16]
   2f38c:	mov	w1, w21
   2f390:	mov	x0, x19
   2f394:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f398:	ldr	x1, [x19, #256]
   2f39c:	add	x0, x1, #0x1
   2f3a0:	cmp	x1, #0xff
   2f3a4:	b.ne	2f3cc <__asan_backtrace_create_state@@Base+0x2e3c>  // b.any
   2f3a8:	ldp	x3, x2, [x19, #272]
   2f3ac:	strb	wzr, [x19, #255]
   2f3b0:	mov	x0, x19
   2f3b4:	blr	x3
   2f3b8:	ldr	x2, [x19, #320]
   2f3bc:	mov	x0, #0x1                   	// #1
   2f3c0:	mov	x1, #0x0                   	// #0
   2f3c4:	add	x2, x2, x0
   2f3c8:	str	x2, [x19, #320]
   2f3cc:	str	x0, [x19, #256]
   2f3d0:	mov	w0, #0x5d                  	// #93
   2f3d4:	strb	w0, [x19, x1]
   2f3d8:	strb	w0, [x19, #264]
   2f3dc:	ldp	x21, x22, [sp, #32]
   2f3e0:	ldp	x23, x24, [sp, #48]
   2f3e4:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f3e8:	ldr	x1, [x19, #368]
   2f3ec:	cbz	x1, 2f400 <__asan_backtrace_create_state@@Base+0x2e70>
   2f3f0:	ldr	x2, [x19, #288]
   2f3f4:	add	x0, sp, #0x70
   2f3f8:	stp	x2, x1, [sp, #112]
   2f3fc:	str	x0, [x19, #288]
   2f400:	ldr	x2, [x20, #8]
   2f404:	ldr	w0, [x2]
   2f408:	cmp	w0, #0x4
   2f40c:	b.eq	2fcf0 <__asan_backtrace_create_state@@Base+0x3760>  // b.none
   2f410:	mov	x0, x19
   2f414:	mov	w1, w21
   2f418:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f41c:	ldr	x0, [x19, #368]
   2f420:	cbz	x0, 3037c <__asan_backtrace_create_state@@Base+0x3dec>
   2f424:	ldr	x0, [sp, #112]
   2f428:	ldp	x21, x22, [sp, #32]
   2f42c:	ldp	x23, x24, [sp, #48]
   2f430:	str	x0, [x19, #288]
   2f434:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f438:	ldr	x2, [x20, #8]
   2f43c:	mov	w1, w21
   2f440:	mov	x0, x19
   2f444:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f448:	ldp	x21, x22, [sp, #32]
   2f44c:	ldp	x23, x24, [sp, #48]
   2f450:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f454:	ldr	x2, [x20, #8]
   2f458:	mov	w1, w21
   2f45c:	mov	x0, x19
   2f460:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f464:	ldp	x21, x22, [sp, #32]
   2f468:	ldp	x23, x24, [sp, #48]
   2f46c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f470:	ldr	x2, [x20, #8]
   2f474:	mov	w1, w21
   2f478:	mov	x0, x19
   2f47c:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f480:	ldp	x21, x22, [sp, #32]
   2f484:	ldp	x23, x24, [sp, #48]
   2f488:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f48c:	ldr	x2, [x20, #8]
   2f490:	mov	w1, w21
   2f494:	mov	x0, x19
   2f498:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f49c:	ldp	x21, x22, [sp, #32]
   2f4a0:	ldp	x23, x24, [sp, #48]
   2f4a4:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f4a8:	ldr	x2, [x20, #8]
   2f4ac:	mov	w1, w21
   2f4b0:	mov	x0, x19
   2f4b4:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f4b8:	ldp	x21, x22, [sp, #32]
   2f4bc:	ldp	x23, x24, [sp, #48]
   2f4c0:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f4c4:	ldr	x2, [x20, #8]
   2f4c8:	mov	w1, w21
   2f4cc:	mov	x0, x19
   2f4d0:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f4d4:	ldp	x21, x22, [sp, #32]
   2f4d8:	ldp	x23, x24, [sp, #48]
   2f4dc:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f4e0:	ldr	x2, [x20, #8]
   2f4e4:	mov	w1, w21
   2f4e8:	mov	x0, x19
   2f4ec:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f4f0:	ldp	x21, x22, [sp, #32]
   2f4f4:	ldp	x23, x24, [sp, #48]
   2f4f8:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f4fc:	ldr	x2, [x20, #8]
   2f500:	mov	w1, w21
   2f504:	mov	x0, x19
   2f508:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f50c:	ldp	x21, x22, [sp, #32]
   2f510:	ldp	x23, x24, [sp, #48]
   2f514:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f518:	ldr	x2, [x20, #8]
   2f51c:	mov	w1, w21
   2f520:	mov	x0, x19
   2f524:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f528:	ldp	x21, x22, [sp, #32]
   2f52c:	ldp	x23, x24, [sp, #48]
   2f530:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f534:	ldr	x2, [x20, #8]
   2f538:	mov	w1, w21
   2f53c:	mov	x0, x19
   2f540:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f544:	ldp	x21, x22, [sp, #32]
   2f548:	ldp	x23, x24, [sp, #48]
   2f54c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f550:	ldr	x2, [x20, #8]
   2f554:	mov	w1, w21
   2f558:	mov	x0, x19
   2f55c:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2f560:	add	x24, x24, #0x818
   2f564:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f568:	mov	x0, x24
   2f56c:	bl	67e0 <__asan_internal_strlen@plt>
   2f570:	cbz	x0, 2f5dc <__asan_backtrace_create_state@@Base+0x304c>
   2f574:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2f578:	add	x24, x0, x24
   2f57c:	add	x22, x22, #0x819
   2f580:	mov	w23, #0x2d                  	// #45
   2f584:	ldr	x1, [x19, #256]
   2f588:	b	2f5ac <__asan_backtrace_create_state@@Base+0x301c>
   2f58c:	mov	x0, x1
   2f590:	add	x1, x1, #0x1
   2f594:	str	x1, [x19, #256]
   2f598:	cmp	x24, x22
   2f59c:	strb	w23, [x19, x0]
   2f5a0:	strb	w23, [x19, #264]
   2f5a4:	b.eq	2f5dc <__asan_backtrace_create_state@@Base+0x304c>  // b.none
   2f5a8:	ldrb	w23, [x22], #1
   2f5ac:	cmp	x1, #0xff
   2f5b0:	b.ne	2f58c <__asan_backtrace_create_state@@Base+0x2ffc>  // b.any
   2f5b4:	ldp	x3, x2, [x19, #272]
   2f5b8:	strb	wzr, [x19, #255]
   2f5bc:	mov	x0, x19
   2f5c0:	blr	x3
   2f5c4:	ldr	x2, [x19, #320]
   2f5c8:	mov	x1, #0x1                   	// #1
   2f5cc:	mov	x0, #0x0                   	// #0
   2f5d0:	add	x2, x2, x1
   2f5d4:	str	x2, [x19, #320]
   2f5d8:	b	2f594 <__asan_backtrace_create_state@@Base+0x3004>
   2f5dc:	ldr	x2, [x20, #16]
   2f5e0:	mov	w1, w21
   2f5e4:	mov	x0, x19
   2f5e8:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f5ec:	ldp	x21, x22, [sp, #32]
   2f5f0:	ldp	x23, x24, [sp, #48]
   2f5f4:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f5f8:	ldr	x2, [x20, #8]
   2f5fc:	mov	w1, w21
   2f600:	mov	x0, x19
   2f604:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f608:	ldp	x21, x22, [sp, #32]
   2f60c:	ldp	x23, x24, [sp, #48]
   2f610:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f614:	ldr	x2, [x20, #8]
   2f618:	mov	w1, w21
   2f61c:	mov	x0, x19
   2f620:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f624:	ldp	x21, x22, [sp, #32]
   2f628:	ldp	x23, x24, [sp, #48]
   2f62c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f630:	mov	x2, x20
   2f634:	mov	w1, w21
   2f638:	mov	x0, x19
   2f63c:	bl	31038 <__asan_backtrace_create_state@@Base+0x4aa8>
   2f640:	b	2d044 <__asan_backtrace_create_state@@Base+0xab4>
   2f644:	ldp	x21, x22, [sp, #32]
   2f648:	ldp	x23, x24, [sp, #48]
   2f64c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f650:	ldp	x21, x22, [sp, #32]
   2f654:	ldp	x23, x24, [sp, #48]
   2f658:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f65c:	ldp	x21, x22, [sp, #32]
   2f660:	ldp	x23, x24, [sp, #48]
   2f664:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f668:	ldp	x21, x22, [sp, #32]
   2f66c:	ldp	x23, x24, [sp, #48]
   2f670:	ldp	x25, x26, [sp, #64]
   2f674:	ldp	x27, x28, [sp, #80]
   2f678:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f67c:	ldr	x2, [x20, #16]
   2f680:	mov	x0, x19
   2f684:	mov	w1, w21
   2f688:	ldr	x20, [x19, #320]
   2f68c:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2f690:	ldr	x0, [x19, #320]
   2f694:	cmp	x0, x20
   2f698:	b.eq	300a8 <__asan_backtrace_create_state@@Base+0x3b18>  // b.none
   2f69c:	ldp	x21, x22, [sp, #32]
   2f6a0:	ldp	x23, x24, [sp, #48]
   2f6a4:	ldp	x25, x26, [sp, #64]
   2f6a8:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f6ac:	mov	w1, w21
   2f6b0:	mov	x2, x20
   2f6b4:	mov	x0, x19
   2f6b8:	bl	32310 <__asan_backtrace_create_state@@Base+0x5d80>
   2f6bc:	ldp	x21, x22, [sp, #32]
   2f6c0:	ldp	x23, x24, [sp, #48]
   2f6c4:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f6c8:	ldr	x25, [x25, #8]
   2f6cc:	cbz	x25, 304a4 <__asan_backtrace_create_state@@Base+0x3f14>
   2f6d0:	add	x3, x3, #0x20
   2f6d4:	cmp	w24, #0x4
   2f6d8:	b.eq	30054 <__asan_backtrace_create_state@@Base+0x3ac4>  // b.none
   2f6dc:	mov	x0, x4
   2f6e0:	b	2e618 <__asan_backtrace_create_state@@Base+0x2088>
   2f6e4:	ldr	x25, [x20, #8]
   2f6e8:	cbz	w23, 308e0 <__asan_backtrace_create_state@@Base+0x4350>
   2f6ec:	stp	x27, x28, [sp, #80]
   2f6f0:	b	2e068 <__asan_backtrace_create_state@@Base+0x1ad8>
   2f6f4:	mov	x20, x0
   2f6f8:	b	2d1a0 <__asan_backtrace_create_state@@Base+0xc10>
   2f6fc:	ldr	x2, [x20, #8]
   2f700:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   2f704:	add	x1, x1, #0xc30
   2f708:	add	x20, sp, #0x70
   2f70c:	add	w2, w2, #0x1
   2f710:	mov	x0, x20
   2f714:	bl	6900 <sprintf@plt>
   2f718:	mov	x0, x20
   2f71c:	bl	67e0 <__asan_internal_strlen@plt>
   2f720:	cbz	x0, 30af0 <__asan_backtrace_create_state@@Base+0x4560>
   2f724:	add	x22, x20, x0
   2f728:	ldr	x1, [x19, #256]
   2f72c:	b	2f750 <__asan_backtrace_create_state@@Base+0x31c0>
   2f730:	mov	x0, x1
   2f734:	add	x1, x1, #0x1
   2f738:	str	x1, [x19, #256]
   2f73c:	add	x20, x20, #0x1
   2f740:	strb	w21, [x19, x0]
   2f744:	cmp	x22, x20
   2f748:	strb	w21, [x19, #264]
   2f74c:	b.eq	2fb9c <__asan_backtrace_create_state@@Base+0x360c>  // b.none
   2f750:	ldrb	w21, [x20]
   2f754:	cmp	x1, #0xff
   2f758:	b.ne	2f730 <__asan_backtrace_create_state@@Base+0x31a0>  // b.any
   2f75c:	ldp	x3, x2, [x19, #272]
   2f760:	strb	wzr, [x19, #255]
   2f764:	mov	x0, x19
   2f768:	blr	x3
   2f76c:	ldr	x2, [x19, #320]
   2f770:	mov	x1, #0x1                   	// #1
   2f774:	mov	x0, #0x0                   	// #0
   2f778:	add	x2, x2, x1
   2f77c:	str	x2, [x19, #320]
   2f780:	b	2f738 <__asan_backtrace_create_state@@Base+0x31a8>
   2f784:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2f788:	add	x22, x22, #0xa40
   2f78c:	mov	x0, x22
   2f790:	bl	67e0 <__asan_internal_strlen@plt>
   2f794:	cbz	x0, 2f800 <__asan_backtrace_create_state@@Base+0x3270>
   2f798:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2f79c:	add	x22, x0, x22
   2f7a0:	add	x20, x20, #0xa41
   2f7a4:	mov	w21, #0x7b                  	// #123
   2f7a8:	ldr	x1, [x19, #256]
   2f7ac:	b	2f7d0 <__asan_backtrace_create_state@@Base+0x3240>
   2f7b0:	mov	x0, x1
   2f7b4:	add	x1, x1, #0x1
   2f7b8:	str	x1, [x19, #256]
   2f7bc:	cmp	x22, x20
   2f7c0:	strb	w21, [x19, x0]
   2f7c4:	strb	w21, [x19, #264]
   2f7c8:	b.eq	2f800 <__asan_backtrace_create_state@@Base+0x3270>  // b.none
   2f7cc:	ldrb	w21, [x20], #1
   2f7d0:	cmp	x1, #0xff
   2f7d4:	b.ne	2f7b0 <__asan_backtrace_create_state@@Base+0x3220>  // b.any
   2f7d8:	ldp	x3, x2, [x19, #272]
   2f7dc:	strb	wzr, [x19, #255]
   2f7e0:	mov	x0, x19
   2f7e4:	blr	x3
   2f7e8:	ldr	x2, [x19, #320]
   2f7ec:	mov	x1, #0x1                   	// #1
   2f7f0:	mov	x0, #0x0                   	// #0
   2f7f4:	add	x2, x2, x1
   2f7f8:	str	x2, [x19, #320]
   2f7fc:	b	2f7b8 <__asan_backtrace_create_state@@Base+0x3228>
   2f800:	mov	w2, w23
   2f804:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   2f808:	add	x1, x1, #0xc30
   2f80c:	add	x20, sp, #0x70
   2f810:	mov	x0, x20
   2f814:	bl	6900 <sprintf@plt>
   2f818:	mov	x0, x20
   2f81c:	bl	67e0 <__asan_internal_strlen@plt>
   2f820:	ldr	x1, [x19, #256]
   2f824:	cbz	x0, 2f884 <__asan_backtrace_create_state@@Base+0x32f4>
   2f828:	add	x22, x20, x0
   2f82c:	b	2f850 <__asan_backtrace_create_state@@Base+0x32c0>
   2f830:	mov	x0, x1
   2f834:	add	x1, x1, #0x1
   2f838:	str	x1, [x19, #256]
   2f83c:	add	x20, x20, #0x1
   2f840:	strb	w21, [x19, x0]
   2f844:	cmp	x22, x20
   2f848:	strb	w21, [x19, #264]
   2f84c:	b.eq	2f884 <__asan_backtrace_create_state@@Base+0x32f4>  // b.none
   2f850:	ldrb	w21, [x20]
   2f854:	cmp	x1, #0xff
   2f858:	b.ne	2f830 <__asan_backtrace_create_state@@Base+0x32a0>  // b.any
   2f85c:	ldp	x3, x2, [x19, #272]
   2f860:	strb	wzr, [x19, #255]
   2f864:	mov	x0, x19
   2f868:	blr	x3
   2f86c:	ldr	x2, [x19, #320]
   2f870:	mov	x1, #0x1                   	// #1
   2f874:	mov	x0, #0x0                   	// #0
   2f878:	add	x2, x2, x1
   2f87c:	str	x2, [x19, #320]
   2f880:	b	2f838 <__asan_backtrace_create_state@@Base+0x32a8>
   2f884:	add	x0, x1, #0x1
   2f888:	cmp	x1, #0xff
   2f88c:	b.ne	2f8b4 <__asan_backtrace_create_state@@Base+0x3324>  // b.any
   2f890:	ldp	x3, x2, [x19, #272]
   2f894:	strb	wzr, [x19, #255]
   2f898:	mov	x0, x19
   2f89c:	blr	x3
   2f8a0:	ldr	x2, [x19, #320]
   2f8a4:	mov	x0, #0x1                   	// #1
   2f8a8:	mov	x1, #0x0                   	// #0
   2f8ac:	add	x2, x2, x0
   2f8b0:	str	x2, [x19, #320]
   2f8b4:	str	x0, [x19, #256]
   2f8b8:	mov	w0, #0x7d                  	// #125
   2f8bc:	strb	w0, [x19, x1]
   2f8c0:	strb	w0, [x19, #264]
   2f8c4:	ldp	x21, x22, [sp, #32]
   2f8c8:	ldp	x23, x24, [sp, #48]
   2f8cc:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2f8d0:	ldrsw	x22, [x0, #24]
   2f8d4:	ldr	x20, [x0, #16]
   2f8d8:	cbz	x22, 30b4c <__asan_backtrace_create_state@@Base+0x45bc>
   2f8dc:	add	x22, x20, x22
   2f8e0:	ldr	x1, [x19, #256]
   2f8e4:	b	2f908 <__asan_backtrace_create_state@@Base+0x3378>
   2f8e8:	mov	x0, x1
   2f8ec:	add	x1, x1, #0x1
   2f8f0:	str	x1, [x19, #256]
   2f8f4:	add	x20, x20, #0x1
   2f8f8:	strb	w21, [x19, x0]
   2f8fc:	cmp	x22, x20
   2f900:	strb	w21, [x19, #264]
   2f904:	b.eq	2fbcc <__asan_backtrace_create_state@@Base+0x363c>  // b.none
   2f908:	ldrb	w21, [x20]
   2f90c:	cmp	x1, #0xff
   2f910:	b.ne	2f8e8 <__asan_backtrace_create_state@@Base+0x3358>  // b.any
   2f914:	ldp	x3, x2, [x19, #272]
   2f918:	strb	wzr, [x19, #255]
   2f91c:	mov	x0, x19
   2f920:	blr	x3
   2f924:	ldr	x2, [x19, #320]
   2f928:	mov	x1, #0x1                   	// #1
   2f92c:	mov	x0, #0x0                   	// #0
   2f930:	add	x2, x2, x1
   2f934:	str	x2, [x19, #320]
   2f938:	b	2f8f0 <__asan_backtrace_create_state@@Base+0x3360>
   2f93c:	add	x21, x20, x22
   2f940:	cmp	x21, x20
   2f944:	b.ls	30ae4 <__asan_backtrace_create_state@@Base+0x4554>  // b.plast
   2f948:	mov	w23, #0x5f                  	// #95
   2f94c:	b	2f99c <__asan_backtrace_create_state@@Base+0x340c>
   2f950:	ldr	x1, [x19, #256]
   2f954:	add	x0, x1, #0x1
   2f958:	cmp	x1, #0xff
   2f95c:	b.ne	2f984 <__asan_backtrace_create_state@@Base+0x33f4>  // b.any
   2f960:	ldp	x3, x2, [x19, #272]
   2f964:	strb	wzr, [x19, #255]
   2f968:	mov	x0, x19
   2f96c:	blr	x3
   2f970:	ldr	x2, [x19, #320]
   2f974:	mov	x0, #0x1                   	// #1
   2f978:	mov	x1, #0x0                   	// #0
   2f97c:	add	x2, x2, x0
   2f980:	str	x2, [x19, #320]
   2f984:	str	x0, [x19, #256]
   2f988:	strb	w22, [x19, x1]
   2f98c:	strb	w22, [x19, #264]
   2f990:	add	x20, x20, #0x1
   2f994:	cmp	x21, x20
   2f998:	b.ls	2fae8 <__asan_backtrace_create_state@@Base+0x3558>  // b.plast
   2f99c:	sub	x0, x21, x20
   2f9a0:	ldrb	w22, [x20]
   2f9a4:	cmp	x0, #0x3
   2f9a8:	b.le	2f950 <__asan_backtrace_create_state@@Base+0x33c0>
   2f9ac:	cmp	w22, #0x5f
   2f9b0:	b.ne	2f950 <__asan_backtrace_create_state@@Base+0x33c0>  // b.any
   2f9b4:	ldrb	w0, [x20, #1]
   2f9b8:	cmp	w0, #0x5f
   2f9bc:	b.ne	2f950 <__asan_backtrace_create_state@@Base+0x33c0>  // b.any
   2f9c0:	ldrb	w0, [x20, #2]
   2f9c4:	cmp	w0, #0x55
   2f9c8:	b.ne	2f950 <__asan_backtrace_create_state@@Base+0x33c0>  // b.any
   2f9cc:	add	x24, x20, #0x3
   2f9d0:	cmp	x21, x24
   2f9d4:	b.ls	2f950 <__asan_backtrace_create_state@@Base+0x33c0>  // b.plast
   2f9d8:	mov	x2, #0x0                   	// #0
   2f9dc:	b	2f9f8 <__asan_backtrace_create_state@@Base+0x3468>
   2f9e0:	mov	w0, w1
   2f9e4:	sxtw	x0, w0
   2f9e8:	add	x24, x24, #0x1
   2f9ec:	add	x2, x0, x2, lsl #4
   2f9f0:	cmp	x21, x24
   2f9f4:	b.eq	2f950 <__asan_backtrace_create_state@@Base+0x33c0>  // b.none
   2f9f8:	ldrb	w0, [x24]
   2f9fc:	sub	w1, w0, #0x30
   2fa00:	and	w3, w1, #0xff
   2fa04:	cmp	w3, #0x9
   2fa08:	b.ls	2f9e0 <__asan_backtrace_create_state@@Base+0x3450>  // b.plast
   2fa0c:	sub	w1, w0, #0x41
   2fa10:	and	w1, w1, #0xff
   2fa14:	cmp	w1, #0x5
   2fa18:	b.hi	30794 <__asan_backtrace_create_state@@Base+0x4204>  // b.pmore
   2fa1c:	sub	w0, w0, #0x37
   2fa20:	b	2f9e4 <__asan_backtrace_create_state@@Base+0x3454>
   2fa24:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2fa28:	add	x22, x22, #0x988
   2fa2c:	mov	x0, x22
   2fa30:	bl	67e0 <__asan_internal_strlen@plt>
   2fa34:	cbz	x0, 30b28 <__asan_backtrace_create_state@@Base+0x4598>
   2fa38:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2fa3c:	add	x22, x0, x22
   2fa40:	add	x20, x20, #0x989
   2fa44:	mov	w21, #0x5f                  	// #95
   2fa48:	ldr	x1, [x19, #256]
   2fa4c:	b	2fa70 <__asan_backtrace_create_state@@Base+0x34e0>
   2fa50:	mov	x0, x1
   2fa54:	add	x1, x1, #0x1
   2fa58:	str	x1, [x19, #256]
   2fa5c:	cmp	x22, x20
   2fa60:	strb	w21, [x19, x0]
   2fa64:	strb	w21, [x19, #264]
   2fa68:	b.eq	2faf4 <__asan_backtrace_create_state@@Base+0x3564>  // b.none
   2fa6c:	ldrb	w21, [x20], #1
   2fa70:	cmp	x1, #0xff
   2fa74:	b.ne	2fa50 <__asan_backtrace_create_state@@Base+0x34c0>  // b.any
   2fa78:	ldp	x3, x2, [x19, #272]
   2fa7c:	strb	wzr, [x19, #255]
   2fa80:	mov	x0, x19
   2fa84:	blr	x3
   2fa88:	ldr	x2, [x19, #320]
   2fa8c:	mov	x1, #0x1                   	// #1
   2fa90:	mov	x0, #0x0                   	// #0
   2fa94:	add	x2, x2, x1
   2fa98:	str	x2, [x19, #320]
   2fa9c:	b	2fa58 <__asan_backtrace_create_state@@Base+0x34c8>
   2faa0:	add	x1, x20, #0x8
   2faa4:	mov	x0, x19
   2faa8:	bl	2ccb8 <__asan_backtrace_create_state@@Base+0x728>
   2faac:	mov	x2, x0
   2fab0:	cbz	x0, 2cff8 <__asan_backtrace_create_state@@Base+0xa68>
   2fab4:	ldr	w1, [x0]
   2fab8:	cmp	w1, #0x2f
   2fabc:	b.eq	307b8 <__asan_backtrace_create_state@@Base+0x4228>  // b.none
   2fac0:	ldr	x20, [x19, #288]
   2fac4:	mov	w1, w21
   2fac8:	mov	x0, x19
   2facc:	ldr	x3, [x20]
   2fad0:	str	x3, [x19, #288]
   2fad4:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2fad8:	ldp	x21, x22, [sp, #32]
   2fadc:	ldp	x23, x24, [sp, #48]
   2fae0:	str	x20, [x19, #288]
   2fae4:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2fae8:	ldp	x21, x22, [sp, #32]
   2faec:	ldp	x23, x24, [sp, #48]
   2faf0:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2faf4:	ldp	x21, x22, [sp, #32]
   2faf8:	ldp	x23, x24, [sp, #48]
   2fafc:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2fb00:	ldr	x1, [x19, #256]
   2fb04:	add	x0, x1, #0x1
   2fb08:	cmp	x1, #0xff
   2fb0c:	b.ne	2fb34 <__asan_backtrace_create_state@@Base+0x35a4>  // b.any
   2fb10:	ldp	x3, x2, [x19, #272]
   2fb14:	strb	wzr, [x19, #255]
   2fb18:	mov	x0, x19
   2fb1c:	blr	x3
   2fb20:	ldr	x2, [x19, #320]
   2fb24:	mov	x0, #0x1                   	// #1
   2fb28:	mov	x1, #0x0                   	// #0
   2fb2c:	add	x2, x2, x0
   2fb30:	str	x2, [x19, #320]
   2fb34:	str	x0, [x19, #256]
   2fb38:	mov	w0, #0x28                  	// #40
   2fb3c:	strb	w0, [x19, x1]
   2fb40:	mov	w1, w21
   2fb44:	strb	w0, [x19, #264]
   2fb48:	mov	x0, x19
   2fb4c:	ldr	x2, [x23, #8]
   2fb50:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2fb54:	ldr	x1, [x19, #256]
   2fb58:	add	x0, x1, #0x1
   2fb5c:	cmp	x1, #0xff
   2fb60:	b.ne	2fb88 <__asan_backtrace_create_state@@Base+0x35f8>  // b.any
   2fb64:	ldp	x3, x2, [x19, #272]
   2fb68:	strb	wzr, [x19, #255]
   2fb6c:	mov	x0, x19
   2fb70:	blr	x3
   2fb74:	ldr	x2, [x19, #320]
   2fb78:	mov	x0, #0x1                   	// #1
   2fb7c:	mov	x1, #0x0                   	// #0
   2fb80:	add	x2, x2, x0
   2fb84:	str	x2, [x19, #320]
   2fb88:	str	x0, [x19, #256]
   2fb8c:	mov	w0, #0x29                  	// #41
   2fb90:	strb	w0, [x19, x1]
   2fb94:	strb	w0, [x19, #264]
   2fb98:	b	2ea58 <__asan_backtrace_create_state@@Base+0x24c8>
   2fb9c:	ldp	x21, x22, [sp, #32]
   2fba0:	ldp	x23, x24, [sp, #48]
   2fba4:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2fba8:	ldp	x21, x22, [sp, #32]
   2fbac:	ldp	x23, x24, [sp, #48]
   2fbb0:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2fbb4:	ldp	x21, x22, [sp, #32]
   2fbb8:	ldp	x23, x24, [sp, #48]
   2fbbc:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2fbc0:	ldp	x21, x22, [sp, #32]
   2fbc4:	ldp	x23, x24, [sp, #48]
   2fbc8:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2fbcc:	ldp	x21, x22, [sp, #32]
   2fbd0:	ldp	x23, x24, [sp, #48]
   2fbd4:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2fbd8:	ldp	x21, x22, [sp, #32]
   2fbdc:	ldp	x23, x24, [sp, #48]
   2fbe0:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2fbe4:	ldr	x1, [x2, #8]
   2fbe8:	ldr	w22, [x1, #28]
   2fbec:	cmp	w22, #0x6
   2fbf0:	b.hi	2fc88 <__asan_backtrace_create_state@@Base+0x36f8>  // b.pmore
   2fbf4:	cbz	w22, 2d0bc <__asan_backtrace_create_state@@Base+0xb2c>
   2fbf8:	ldr	x1, [x20, #16]
   2fbfc:	ldr	w1, [x1]
   2fc00:	cbnz	w1, 2d0bc <__asan_backtrace_create_state@@Base+0xb2c>
   2fc04:	cmp	w0, #0x3e
   2fc08:	b.eq	30f20 <__asan_backtrace_create_state@@Base+0x4990>  // b.none
   2fc0c:	ldr	x2, [x20, #16]
   2fc10:	mov	w1, w21
   2fc14:	mov	x0, x19
   2fc18:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2fc1c:	cmp	w22, #0x4
   2fc20:	b.eq	30ef4 <__asan_backtrace_create_state@@Base+0x4964>  // b.none
   2fc24:	b.hi	30cd8 <__asan_backtrace_create_state@@Base+0x4748>  // b.pmore
   2fc28:	cmp	w22, #0x2
   2fc2c:	b.eq	30ea4 <__asan_backtrace_create_state@@Base+0x4914>  // b.none
   2fc30:	cmp	w22, #0x3
   2fc34:	b.ne	30f68 <__asan_backtrace_create_state@@Base+0x49d8>  // b.any
   2fc38:	ldr	x1, [x19, #256]
   2fc3c:	cmp	x1, #0xff
   2fc40:	b.ne	2fc68 <__asan_backtrace_create_state@@Base+0x36d8>  // b.any
   2fc44:	ldp	x3, x2, [x19, #272]
   2fc48:	strb	wzr, [x19, #255]
   2fc4c:	mov	x0, x19
   2fc50:	blr	x3
   2fc54:	str	xzr, [x19, #256]
   2fc58:	ldr	x0, [x19, #320]
   2fc5c:	mov	x1, #0x0                   	// #0
   2fc60:	add	x0, x0, #0x1
   2fc64:	str	x0, [x19, #320]
   2fc68:	add	x0, x1, #0x1
   2fc6c:	str	x0, [x19, #256]
   2fc70:	mov	w0, #0x6c                  	// #108
   2fc74:	strb	w0, [x19, x1]
   2fc78:	strb	w0, [x19, #264]
   2fc7c:	ldp	x21, x22, [sp, #32]
   2fc80:	ldp	x23, x24, [sp, #48]
   2fc84:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2fc88:	cmp	w22, #0x7
   2fc8c:	b.ne	2d0bc <__asan_backtrace_create_state@@Base+0xb2c>  // b.any
   2fc90:	ldr	x1, [x20, #16]
   2fc94:	ldr	w3, [x1]
   2fc98:	cbnz	w3, 2d0bc <__asan_backtrace_create_state@@Base+0xb2c>
   2fc9c:	ldr	w3, [x1, #16]
   2fca0:	cmp	w0, #0x3d
   2fca4:	ccmp	w3, #0x1, #0x0, eq  // eq = none
   2fca8:	b.ne	2d0bc <__asan_backtrace_create_state@@Base+0xb2c>  // b.any
   2fcac:	ldr	x0, [x1, #8]
   2fcb0:	ldrb	w0, [x0]
   2fcb4:	cmp	w0, #0x30
   2fcb8:	b.eq	30f74 <__asan_backtrace_create_state@@Base+0x49e4>  // b.none
   2fcbc:	cmp	w0, #0x31
   2fcc0:	b.ne	2d0bc <__asan_backtrace_create_state@@Base+0xb2c>  // b.any
   2fcc4:	adrp	x20, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   2fcc8:	add	x20, x20, #0xa8
   2fccc:	mov	x0, x20
   2fcd0:	bl	67e0 <__asan_internal_strlen@plt>
   2fcd4:	mov	x1, x20
   2fcd8:	mov	x2, x0
   2fcdc:	mov	x0, x19
   2fce0:	bl	2c800 <__asan_backtrace_create_state@@Base+0x270>
   2fce4:	ldp	x21, x22, [sp, #32]
   2fce8:	ldp	x23, x24, [sp, #48]
   2fcec:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2fcf0:	ldr	x2, [x2, #8]
   2fcf4:	mov	x0, x19
   2fcf8:	mov	w1, w21
   2fcfc:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2fd00:	ldr	x0, [x19, #368]
   2fd04:	cbz	x0, 2fd10 <__asan_backtrace_create_state@@Base+0x3780>
   2fd08:	ldr	x0, [sp, #112]
   2fd0c:	str	x0, [x19, #288]
   2fd10:	ldr	x1, [x19, #256]
   2fd14:	ldrb	w2, [x19, #264]
   2fd18:	mov	x0, x1
   2fd1c:	cmp	w2, #0x3c
   2fd20:	b.eq	30884 <__asan_backtrace_create_state@@Base+0x42f4>  // b.none
   2fd24:	add	x1, x0, #0x1
   2fd28:	cmp	x0, #0xff
   2fd2c:	b.ne	2fd58 <__asan_backtrace_create_state@@Base+0x37c8>  // b.any
   2fd30:	ldp	x3, x2, [x19, #272]
   2fd34:	strb	wzr, [x19, #255]
   2fd38:	mov	x1, x0
   2fd3c:	mov	x0, x19
   2fd40:	blr	x3
   2fd44:	ldr	x2, [x19, #320]
   2fd48:	mov	x1, #0x1                   	// #1
   2fd4c:	mov	x0, #0x0                   	// #0
   2fd50:	add	x2, x2, x1
   2fd54:	str	x2, [x19, #320]
   2fd58:	str	x1, [x19, #256]
   2fd5c:	mov	w2, #0x3c                  	// #60
   2fd60:	strb	w2, [x19, x0]
   2fd64:	mov	w1, w21
   2fd68:	strb	w2, [x19, #264]
   2fd6c:	mov	x0, x19
   2fd70:	ldr	x2, [x20, #8]
   2fd74:	ldr	x2, [x2, #16]
   2fd78:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2fd7c:	ldrb	w0, [x19, #264]
   2fd80:	cmp	w0, #0x3e
   2fd84:	b.eq	3083c <__asan_backtrace_create_state@@Base+0x42ac>  // b.none
   2fd88:	ldr	x0, [x19, #256]
   2fd8c:	add	x1, x0, #0x1
   2fd90:	cmp	x0, #0xff
   2fd94:	b.ne	2fdc0 <__asan_backtrace_create_state@@Base+0x3830>  // b.any
   2fd98:	ldp	x3, x2, [x19, #272]
   2fd9c:	strb	wzr, [x19, #255]
   2fda0:	mov	x1, x0
   2fda4:	mov	x0, x19
   2fda8:	blr	x3
   2fdac:	ldr	x2, [x19, #320]
   2fdb0:	mov	x1, #0x1                   	// #1
   2fdb4:	mov	x0, #0x0                   	// #0
   2fdb8:	add	x2, x2, x1
   2fdbc:	str	x2, [x19, #320]
   2fdc0:	str	x1, [x19, #256]
   2fdc4:	mov	w1, #0x3e                  	// #62
   2fdc8:	strb	w1, [x19, x0]
   2fdcc:	strb	w1, [x19, #264]
   2fdd0:	ldp	x21, x22, [sp, #32]
   2fdd4:	ldp	x23, x24, [sp, #48]
   2fdd8:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2fddc:	mov	x2, x20
   2fde0:	mov	w1, w21
   2fde4:	mov	x0, x19
   2fde8:	bl	31038 <__asan_backtrace_create_state@@Base+0x4aa8>
   2fdec:	b	2d270 <__asan_backtrace_create_state@@Base+0xce0>
   2fdf0:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2fdf4:	add	x22, x22, #0x780
   2fdf8:	mov	x0, x22
   2fdfc:	bl	67e0 <__asan_internal_strlen@plt>
   2fe00:	cbz	x0, 2d214 <__asan_backtrace_create_state@@Base+0xc84>
   2fe04:	add	x24, x0, x22
   2fe08:	mov	w23, #0x3a                  	// #58
   2fe0c:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2fe10:	add	x22, x22, #0x781
   2fe14:	ldr	x1, [x19, #256]
   2fe18:	b	2fe3c <__asan_backtrace_create_state@@Base+0x38ac>
   2fe1c:	mov	x0, x1
   2fe20:	add	x1, x1, #0x1
   2fe24:	str	x1, [x19, #256]
   2fe28:	cmp	x22, x24
   2fe2c:	strb	w23, [x19, x0]
   2fe30:	strb	w23, [x19, #264]
   2fe34:	b.eq	2d214 <__asan_backtrace_create_state@@Base+0xc84>  // b.none
   2fe38:	ldrb	w23, [x22], #1
   2fe3c:	cmp	x1, #0xff
   2fe40:	b.ne	2fe1c <__asan_backtrace_create_state@@Base+0x388c>  // b.any
   2fe44:	ldp	x3, x2, [x19, #272]
   2fe48:	strb	wzr, [x19, #255]
   2fe4c:	mov	x0, x19
   2fe50:	blr	x3
   2fe54:	ldr	x2, [x19, #320]
   2fe58:	mov	x1, #0x1                   	// #1
   2fe5c:	mov	x0, #0x0                   	// #0
   2fe60:	add	x2, x2, x1
   2fe64:	str	x2, [x19, #320]
   2fe68:	b	2fe24 <__asan_backtrace_create_state@@Base+0x3894>
   2fe6c:	ldr	x1, [x19, #256]
   2fe70:	cmp	x1, #0xff
   2fe74:	b.ne	2fe98 <__asan_backtrace_create_state@@Base+0x3908>  // b.any
   2fe78:	ldp	x3, x2, [x19, #272]
   2fe7c:	strb	wzr, [x19, #255]
   2fe80:	mov	x0, x19
   2fe84:	blr	x3
   2fe88:	ldr	x0, [x19, #320]
   2fe8c:	mov	x1, #0x0                   	// #0
   2fe90:	add	x0, x0, #0x1
   2fe94:	str	x0, [x19, #320]
   2fe98:	add	x0, x1, #0x1
   2fe9c:	str	x0, [x19, #256]
   2fea0:	mov	w0, #0x5b                  	// #91
   2fea4:	strb	w0, [x19, x1]
   2fea8:	strb	w0, [x19, #264]
   2feac:	mov	w1, w21
   2feb0:	mov	x0, x19
   2feb4:	ldr	x2, [x20, #16]
   2feb8:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   2febc:	ldr	x1, [x19, #256]
   2fec0:	cmp	x1, #0xff
   2fec4:	b.ne	2fee8 <__asan_backtrace_create_state@@Base+0x3958>  // b.any
   2fec8:	ldp	x3, x2, [x19, #272]
   2fecc:	strb	wzr, [x19, #255]
   2fed0:	mov	x0, x19
   2fed4:	blr	x3
   2fed8:	ldr	x0, [x19, #320]
   2fedc:	mov	x1, #0x0                   	// #0
   2fee0:	add	x0, x0, #0x1
   2fee4:	str	x0, [x19, #320]
   2fee8:	add	x0, x1, #0x1
   2feec:	str	x0, [x19, #256]
   2fef0:	mov	w0, #0x5d                  	// #93
   2fef4:	strb	w0, [x19, x1]
   2fef8:	strb	w0, [x19, #264]
   2fefc:	ldp	x21, x22, [sp, #32]
   2ff00:	ldp	x23, x24, [sp, #48]
   2ff04:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   2ff08:	ldp	x3, x2, [x19, #272]
   2ff0c:	strb	wzr, [x19, #255]
   2ff10:	mov	x0, x19
   2ff14:	blr	x3
   2ff18:	ldr	x0, [x19, #320]
   2ff1c:	mov	w1, #0x29                  	// #41
   2ff20:	strb	w1, [x19]
   2ff24:	strb	w1, [x19, #264]
   2ff28:	mov	x1, #0x1                   	// #1
   2ff2c:	add	x0, x0, x1
   2ff30:	str	x1, [x19, #256]
   2ff34:	str	x0, [x19, #320]
   2ff38:	ldr	w0, [x20]
   2ff3c:	cmp	w0, #0x3e
   2ff40:	b.ne	2d13c <__asan_backtrace_create_state@@Base+0xbac>  // b.any
   2ff44:	ldr	x1, [x19, #256]
   2ff48:	mov	w0, #0x2d                  	// #45
   2ff4c:	add	x2, x1, #0x1
   2ff50:	str	x2, [x19, #256]
   2ff54:	strb	w0, [x19, x1]
   2ff58:	strb	w0, [x19, #264]
   2ff5c:	b	2d13c <__asan_backtrace_create_state@@Base+0xbac>
   2ff60:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2ff64:	add	x22, x22, #0x978
   2ff68:	mov	x0, x22
   2ff6c:	bl	67e0 <__asan_internal_strlen@plt>
   2ff70:	cbz	x0, 2dad8 <__asan_backtrace_create_state@@Base+0x1548>
   2ff74:	add	x24, x0, x22
   2ff78:	mov	w23, #0x5f                  	// #95
   2ff7c:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   2ff80:	add	x22, x22, #0x979
   2ff84:	ldr	x1, [x19, #256]
   2ff88:	b	2ffac <__asan_backtrace_create_state@@Base+0x3a1c>
   2ff8c:	mov	x0, x1
   2ff90:	add	x1, x1, #0x1
   2ff94:	str	x1, [x19, #256]
   2ff98:	cmp	x24, x22
   2ff9c:	strb	w23, [x19, x0]
   2ffa0:	strb	w23, [x19, #264]
   2ffa4:	b.eq	2dad8 <__asan_backtrace_create_state@@Base+0x1548>  // b.none
   2ffa8:	ldrb	w23, [x22], #1
   2ffac:	cmp	x1, #0xff
   2ffb0:	b.ne	2ff8c <__asan_backtrace_create_state@@Base+0x39fc>  // b.any
   2ffb4:	ldp	x3, x2, [x19, #272]
   2ffb8:	strb	wzr, [x19, #255]
   2ffbc:	mov	x0, x19
   2ffc0:	blr	x3
   2ffc4:	ldr	x2, [x19, #320]
   2ffc8:	mov	x1, #0x1                   	// #1
   2ffcc:	mov	x0, #0x0                   	// #0
   2ffd0:	add	x2, x2, x1
   2ffd4:	str	x2, [x19, #320]
   2ffd8:	b	2ff94 <__asan_backtrace_create_state@@Base+0x3a04>
   2ffdc:	add	x2, x20, #0x10
   2ffe0:	mov	w1, w22
   2ffe4:	mov	x0, x19
   2ffe8:	bl	318d0 <__asan_backtrace_create_state@@Base+0x5340>
   2ffec:	ldr	x2, [x20, #8]
   2fff0:	cbz	x2, 30938 <__asan_backtrace_create_state@@Base+0x43a8>
   2fff4:	mov	w1, w22
   2fff8:	mov	x0, x19
   2fffc:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   30000:	ldp	x21, x22, [sp, #32]
   30004:	ldp	x23, x24, [sp, #48]
   30008:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   3000c:	ldr	x0, [x19, #256]
   30010:	cmp	x0, #0xff
   30014:	b.eq	307d0 <__asan_backtrace_create_state@@Base+0x4240>  // b.none
   30018:	add	x1, x0, #0x1
   3001c:	str	x1, [x19, #256]
   30020:	mov	w2, #0x20                  	// #32
   30024:	strb	w2, [x19, x0]
   30028:	strb	w2, [x19, #264]
   3002c:	b	2e7a8 <__asan_backtrace_create_state@@Base+0x2218>
   30030:	ldr	x0, [x19, #256]
   30034:	cmp	x0, #0xff
   30038:	b.eq	30800 <__asan_backtrace_create_state@@Base+0x4270>  // b.none
   3003c:	add	x1, x0, #0x1
   30040:	str	x1, [x19, #256]
   30044:	mov	w2, #0x20                  	// #32
   30048:	strb	w2, [x19, x0]
   3004c:	strb	w2, [x19, #264]
   30050:	b	2e76c <__asan_backtrace_create_state@@Base+0x21dc>
   30054:	ldp	x21, x22, [sp, #32]
   30058:	ldp	x23, x24, [sp, #48]
   3005c:	ldp	x25, x26, [sp, #64]
   30060:	str	x4, [x19, #296]
   30064:	str	w1, [x19, #304]
   30068:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   3006c:	ldp	x21, x22, [sp, #32]
   30070:	ldp	x23, x24, [sp, #48]
   30074:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30078:	ldp	x21, x22, [sp, #32]
   3007c:	ldp	x23, x24, [sp, #48]
   30080:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30084:	mov	w22, #0x0                   	// #0
   30088:	b	2d1a0 <__asan_backtrace_create_state@@Base+0xc10>
   3008c:	ldr	x2, [x20, #8]
   30090:	mov	w1, w21
   30094:	mov	x0, x19
   30098:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   3009c:	ldp	x21, x22, [sp, #32]
   300a0:	ldp	x23, x24, [sp, #48]
   300a4:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   300a8:	ldr	x0, [x19, #256]
   300ac:	cmp	x0, x22
   300b0:	b.eq	309b0 <__asan_backtrace_create_state@@Base+0x4420>  // b.none
   300b4:	ldp	x21, x22, [sp, #32]
   300b8:	ldp	x23, x24, [sp, #48]
   300bc:	ldp	x25, x26, [sp, #64]
   300c0:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   300c4:	cmp	x3, #0xff
   300c8:	b.ne	2ff44 <__asan_backtrace_create_state@@Base+0x39b4>  // b.any
   300cc:	ldp	x4, x2, [x19, #272]
   300d0:	strb	wzr, [x19, #255]
   300d4:	mov	x0, x19
   300d8:	mov	x1, x3
   300dc:	blr	x4
   300e0:	str	xzr, [x19, #256]
   300e4:	ldr	x0, [x19, #320]
   300e8:	add	x0, x0, #0x1
   300ec:	str	x0, [x19, #320]
   300f0:	b	2ff44 <__asan_backtrace_create_state@@Base+0x39b4>
   300f4:	ldr	x0, [x23, #8]
   300f8:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   300fc:	add	x1, x1, #0x9b8
   30100:	ldr	x22, [x0]
   30104:	mov	x0, x22
   30108:	bl	6b30 <__asan_internal_strcmp@plt>
   3010c:	cbz	w0, 308f0 <__asan_backtrace_create_state@@Base+0x4360>
   30110:	ldr	w0, [x20]
   30114:	cmp	w0, #0x39
   30118:	b.eq	301c8 <__asan_backtrace_create_state@@Base+0x3c38>  // b.none
   3011c:	cbz	x22, 3014c <__asan_backtrace_create_state@@Base+0x3bbc>
   30120:	mov	x0, x22
   30124:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   30128:	add	x1, x1, #0x9c0
   3012c:	bl	6b30 <__asan_internal_strcmp@plt>
   30130:	mov	w3, w0
   30134:	cbz	w0, 30d6c <__asan_backtrace_create_state@@Base+0x47dc>
   30138:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   3013c:	mov	x0, x22
   30140:	add	x1, x1, #0xac0
   30144:	bl	6b30 <__asan_internal_strcmp@plt>
   30148:	cbz	w0, 30154 <__asan_backtrace_create_state@@Base+0x3bc4>
   3014c:	ldr	w0, [x23]
   30150:	b	2ea40 <__asan_backtrace_create_state@@Base+0x24b0>
   30154:	mov	w3, #0x0                   	// #0
   30158:	b	30168 <__asan_backtrace_create_state@@Base+0x3bd8>
   3015c:	add	w3, w3, #0x1
   30160:	ldr	x20, [x20, #16]
   30164:	cbz	x20, 30920 <__asan_backtrace_create_state@@Base+0x4390>
   30168:	ldr	w0, [x20]
   3016c:	cmp	w0, #0x2f
   30170:	b.ne	30920 <__asan_backtrace_create_state@@Base+0x4390>  // b.any
   30174:	ldr	x0, [x20, #8]
   30178:	cbz	x0, 30920 <__asan_backtrace_create_state@@Base+0x4390>
   3017c:	ldr	w1, [x0]
   30180:	cmp	w1, #0x4b
   30184:	b.ne	3015c <__asan_backtrace_create_state@@Base+0x3bcc>  // b.any
   30188:	ldr	x1, [x0, #8]
   3018c:	mov	x0, x19
   30190:	bl	2cce8 <__asan_backtrace_create_state@@Base+0x758>
   30194:	mov	w1, #0x0                   	// #0
   30198:	cbnz	x0, 301b4 <__asan_backtrace_create_state@@Base+0x3c24>
   3019c:	b	301c0 <__asan_backtrace_create_state@@Base+0x3c30>
   301a0:	ldr	x2, [x0, #8]
   301a4:	cbz	x2, 301c0 <__asan_backtrace_create_state@@Base+0x3c30>
   301a8:	ldr	x0, [x0, #16]
   301ac:	add	w1, w1, #0x1
   301b0:	cbz	x0, 301c0 <__asan_backtrace_create_state@@Base+0x3c30>
   301b4:	ldr	w2, [x0]
   301b8:	cmp	w2, #0x2f
   301bc:	b.eq	301a0 <__asan_backtrace_create_state@@Base+0x3c10>  // b.none
   301c0:	add	w3, w3, w1
   301c4:	b	30160 <__asan_backtrace_create_state@@Base+0x3bd0>
   301c8:	ldr	x2, [x20, #8]
   301cc:	mov	w1, w21
   301d0:	mov	x0, x19
   301d4:	bl	32310 <__asan_backtrace_create_state@@Base+0x5d80>
   301d8:	mov	x2, x23
   301dc:	mov	w1, w21
   301e0:	mov	x0, x19
   301e4:	bl	32258 <__asan_backtrace_create_state@@Base+0x5cc8>
   301e8:	ldp	x21, x22, [sp, #32]
   301ec:	ldp	x23, x24, [sp, #48]
   301f0:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   301f4:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   301f8:	add	x20, x20, #0x788
   301fc:	mov	x0, x20
   30200:	bl	67e0 <__asan_internal_strlen@plt>
   30204:	cbz	x0, 30270 <__asan_backtrace_create_state@@Base+0x3ce0>
   30208:	add	x24, x0, x20
   3020c:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   30210:	mov	w20, #0x7b                  	// #123
   30214:	add	x22, x22, #0x789
   30218:	ldr	x1, [x19, #256]
   3021c:	b	30240 <__asan_backtrace_create_state@@Base+0x3cb0>
   30220:	mov	x0, x1
   30224:	add	x1, x1, #0x1
   30228:	str	x1, [x19, #256]
   3022c:	cmp	x24, x22
   30230:	strb	w20, [x19, x0]
   30234:	strb	w20, [x19, #264]
   30238:	b.eq	30270 <__asan_backtrace_create_state@@Base+0x3ce0>  // b.none
   3023c:	ldrb	w20, [x22], #1
   30240:	cmp	x1, #0xff
   30244:	b.ne	30220 <__asan_backtrace_create_state@@Base+0x3c90>  // b.any
   30248:	ldp	x3, x2, [x19, #272]
   3024c:	strb	wzr, [x19, #255]
   30250:	mov	x0, x19
   30254:	blr	x3
   30258:	ldr	x2, [x19, #320]
   3025c:	mov	x1, #0x1                   	// #1
   30260:	mov	x0, #0x0                   	// #0
   30264:	add	x2, x2, x1
   30268:	str	x2, [x19, #320]
   3026c:	b	30228 <__asan_backtrace_create_state@@Base+0x3c98>
   30270:	ldr	w2, [x23, #16]
   30274:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   30278:	add	x1, x1, #0xc30
   3027c:	add	x20, sp, #0x70
   30280:	add	w2, w2, #0x1
   30284:	mov	x0, x20
   30288:	bl	6900 <sprintf@plt>
   3028c:	mov	x0, x20
   30290:	bl	67e0 <__asan_internal_strlen@plt>
   30294:	cbz	x0, 302f8 <__asan_backtrace_create_state@@Base+0x3d68>
   30298:	add	x24, x20, x0
   3029c:	ldr	x1, [x19, #256]
   302a0:	b	302c4 <__asan_backtrace_create_state@@Base+0x3d34>
   302a4:	mov	x0, x1
   302a8:	add	x1, x1, #0x1
   302ac:	str	x1, [x19, #256]
   302b0:	add	x20, x20, #0x1
   302b4:	strb	w22, [x19, x0]
   302b8:	cmp	x24, x20
   302bc:	strb	w22, [x19, #264]
   302c0:	b.eq	302f8 <__asan_backtrace_create_state@@Base+0x3d68>  // b.none
   302c4:	ldrb	w22, [x20]
   302c8:	cmp	x1, #0xff
   302cc:	b.ne	302a4 <__asan_backtrace_create_state@@Base+0x3d14>  // b.any
   302d0:	ldp	x3, x2, [x19, #272]
   302d4:	strb	wzr, [x19, #255]
   302d8:	mov	x0, x19
   302dc:	blr	x3
   302e0:	ldr	x2, [x19, #320]
   302e4:	mov	x1, #0x1                   	// #1
   302e8:	mov	x0, #0x0                   	// #0
   302ec:	add	x2, x2, x1
   302f0:	str	x2, [x19, #320]
   302f4:	b	302ac <__asan_backtrace_create_state@@Base+0x3d1c>
   302f8:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   302fc:	add	x20, x20, #0x798
   30300:	mov	x0, x20
   30304:	bl	67e0 <__asan_internal_strlen@plt>
   30308:	cbz	x0, 30374 <__asan_backtrace_create_state@@Base+0x3de4>
   3030c:	add	x24, x0, x20
   30310:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   30314:	mov	w20, #0x7d                  	// #125
   30318:	add	x22, x22, #0x799
   3031c:	ldr	x1, [x19, #256]
   30320:	b	30344 <__asan_backtrace_create_state@@Base+0x3db4>
   30324:	mov	x0, x1
   30328:	add	x1, x1, #0x1
   3032c:	str	x1, [x19, #256]
   30330:	cmp	x24, x22
   30334:	strb	w20, [x19, x0]
   30338:	strb	w20, [x19, #264]
   3033c:	b.eq	30374 <__asan_backtrace_create_state@@Base+0x3de4>  // b.none
   30340:	ldrb	w20, [x22], #1
   30344:	cmp	x1, #0xff
   30348:	b.ne	30324 <__asan_backtrace_create_state@@Base+0x3d94>  // b.any
   3034c:	ldp	x3, x2, [x19, #272]
   30350:	strb	wzr, [x19, #255]
   30354:	mov	x0, x19
   30358:	blr	x3
   3035c:	ldr	x2, [x19, #320]
   30360:	mov	x1, #0x1                   	// #1
   30364:	mov	x0, #0x0                   	// #0
   30368:	add	x2, x2, x1
   3036c:	str	x2, [x19, #320]
   30370:	b	3032c <__asan_backtrace_create_state@@Base+0x3d9c>
   30374:	ldr	x23, [x23, #8]
   30378:	b	2d224 <__asan_backtrace_create_state@@Base+0xc94>
   3037c:	ldp	x21, x22, [sp, #32]
   30380:	ldp	x23, x24, [sp, #48]
   30384:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30388:	ldr	x25, [x25, #16]
   3038c:	ldr	w5, [x25]
   30390:	cmp	w5, #0x47
   30394:	b.eq	30a88 <__asan_backtrace_create_state@@Base+0x44f8>  // b.none
   30398:	ubfiz	x3, x24, #5, #32
   3039c:	sub	w0, w5, #0x1c
   303a0:	mov	x1, #0x1f                  	// #31
   303a4:	add	x3, x23, x3
   303a8:	cmp	w0, #0x34
   303ac:	mov	x2, #0x1                   	// #1
   303b0:	movk	x1, #0x1a, lsl #48
   303b4:	b.hi	2e658 <__asan_backtrace_create_state@@Base+0x20c8>  // b.pmore
   303b8:	lsl	x0, x2, x0
   303bc:	tst	x0, x1
   303c0:	b.eq	2e658 <__asan_backtrace_create_state@@Base+0x20c8>  // b.none
   303c4:	cmp	w24, #0x4
   303c8:	b.eq	304a8 <__asan_backtrace_create_state@@Base+0x3f18>  // b.none
   303cc:	ldp	x8, x9, [x3, #-32]
   303d0:	stur	x25, [x3, #-24]
   303d4:	ldp	x4, x5, [x3, #-16]
   303d8:	stur	wzr, [x3, #-16]
   303dc:	stp	x8, x9, [x3]
   303e0:	sub	x0, x3, #0x20
   303e4:	add	w24, w24, #0x1
   303e8:	ldr	x25, [x25, #8]
   303ec:	stp	x4, x5, [x3, #16]
   303f0:	ldr	w5, [x25]
   303f4:	stp	x6, x0, [x3, #-8]
   303f8:	sub	w0, w5, #0x1c
   303fc:	str	x3, [x19, #296]
   30400:	cmp	w0, #0x34
   30404:	add	x3, x3, #0x20
   30408:	b.ls	303b8 <__asan_backtrace_create_state@@Base+0x3e28>  // b.plast
   3040c:	b	2e658 <__asan_backtrace_create_state@@Base+0x20c8>
   30410:	mov	w0, #0x1                   	// #1
   30414:	ldp	x21, x22, [sp, #32]
   30418:	ldp	x23, x24, [sp, #48]
   3041c:	str	w0, [x19, #304]
   30420:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30424:	ldr	x4, [x19, #288]
   30428:	add	x0, sp, #0x70
   3042c:	str	x0, [x19, #296]
   30430:	mov	w1, w22
   30434:	mov	x0, x19
   30438:	stp	x3, x20, [sp, #112]
   3043c:	str	wzr, [sp, #128]
   30440:	str	x4, [sp, #136]
   30444:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   30448:	ldr	w0, [sp, #128]
   3044c:	ldr	x1, [sp, #112]
   30450:	str	x1, [x19, #296]
   30454:	cbnz	w0, 30b58 <__asan_backtrace_create_state@@Base+0x45c8>
   30458:	ldr	x1, [x19, #256]
   3045c:	cmp	x1, #0xff
   30460:	b.ne	30488 <__asan_backtrace_create_state@@Base+0x3ef8>  // b.any
   30464:	ldp	x3, x2, [x19, #272]
   30468:	strb	wzr, [x19, #255]
   3046c:	mov	x0, x19
   30470:	blr	x3
   30474:	str	xzr, [x19, #256]
   30478:	ldr	x0, [x19, #320]
   3047c:	mov	x1, #0x0                   	// #0
   30480:	add	x0, x0, #0x1
   30484:	str	x0, [x19, #320]
   30488:	add	x0, x1, #0x1
   3048c:	str	x0, [x19, #256]
   30490:	mov	w0, #0x20                  	// #32
   30494:	strb	w0, [x19, x1]
   30498:	strb	w0, [x19, #264]
   3049c:	ldr	x3, [x19, #296]
   304a0:	b	2d850 <__asan_backtrace_create_state@@Base+0x12c0>
   304a4:	str	x3, [x19, #296]
   304a8:	mov	w0, #0x1                   	// #1
   304ac:	ldp	x21, x22, [sp, #32]
   304b0:	ldp	x23, x24, [sp, #48]
   304b4:	ldp	x25, x26, [sp, #64]
   304b8:	str	w0, [x19, #304]
   304bc:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   304c0:	ldrb	w0, [x0]
   304c4:	sub	w1, w0, #0x72
   304c8:	sub	w0, w0, #0x63
   304cc:	and	w1, w1, #0xff
   304d0:	and	w0, w0, #0xff
   304d4:	cmp	w1, #0x1
   304d8:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
   304dc:	b.hi	2e1c8 <__asan_backtrace_create_state@@Base+0x1c38>  // b.pmore
   304e0:	mov	w1, w21
   304e4:	mov	x0, x19
   304e8:	bl	32258 <__asan_backtrace_create_state@@Base+0x5cc8>
   304ec:	ldr	x1, [x19, #256]
   304f0:	cmp	x1, #0xff
   304f4:	b.ne	3051c <__asan_backtrace_create_state@@Base+0x3f8c>  // b.any
   304f8:	ldp	x3, x2, [x19, #272]
   304fc:	strb	wzr, [x19, #255]
   30500:	mov	x0, x19
   30504:	blr	x3
   30508:	str	xzr, [x19, #256]
   3050c:	ldr	x0, [x19, #320]
   30510:	mov	x1, #0x0                   	// #0
   30514:	add	x0, x0, #0x1
   30518:	str	x0, [x19, #320]
   3051c:	add	x0, x1, #0x1
   30520:	str	x0, [x19, #256]
   30524:	mov	w0, #0x3c                  	// #60
   30528:	strb	w0, [x19, x1]
   3052c:	strb	w0, [x19, #264]
   30530:	mov	w1, w21
   30534:	mov	x0, x19
   30538:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   3053c:	ldr	x2, [x20, #16]
   30540:	add	x22, x22, #0x9d0
   30544:	ldr	x2, [x2, #8]
   30548:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   3054c:	mov	x0, x22
   30550:	bl	67e0 <__asan_internal_strlen@plt>
   30554:	cbz	x0, 30730 <__asan_backtrace_create_state@@Base+0x41a0>
   30558:	add	x24, x0, x22
   3055c:	mov	w23, #0x3e                  	// #62
   30560:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   30564:	add	x22, x22, #0x9d1
   30568:	ldr	x1, [x19, #256]
   3056c:	b	30590 <__asan_backtrace_create_state@@Base+0x4000>
   30570:	mov	x0, x1
   30574:	add	x1, x1, #0x1
   30578:	str	x1, [x19, #256]
   3057c:	cmp	x22, x24
   30580:	strb	w23, [x19, x0]
   30584:	strb	w23, [x19, #264]
   30588:	b.eq	30730 <__asan_backtrace_create_state@@Base+0x41a0>  // b.none
   3058c:	ldrb	w23, [x22], #1
   30590:	cmp	x1, #0xff
   30594:	b.ne	30570 <__asan_backtrace_create_state@@Base+0x3fe0>  // b.any
   30598:	ldp	x3, x2, [x19, #272]
   3059c:	strb	wzr, [x19, #255]
   305a0:	mov	x0, x19
   305a4:	blr	x3
   305a8:	ldr	x2, [x19, #320]
   305ac:	mov	x1, #0x1                   	// #1
   305b0:	mov	x0, #0x0                   	// #0
   305b4:	add	x2, x2, x1
   305b8:	str	x2, [x19, #320]
   305bc:	b	30578 <__asan_backtrace_create_state@@Base+0x3fe8>
   305c0:	ldr	x2, [x20, #8]
   305c4:	add	x3, x20, #0x10
   305c8:	mov	w1, w21
   305cc:	mov	x0, x19
   305d0:	bl	32408 <__asan_backtrace_create_state@@Base+0x5e78>
   305d4:	cbnz	w0, 30a58 <__asan_backtrace_create_state@@Base+0x44c8>
   305d8:	stp	x25, x26, [sp, #64]
   305dc:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   305e0:	add	x1, x1, #0x9e8
   305e4:	ldp	x25, x3, [x20, #8]
   305e8:	ldr	x0, [x25, #8]
   305ec:	ldp	x23, x2, [x3, #8]
   305f0:	ldr	x0, [x0]
   305f4:	ldp	x24, x22, [x2, #8]
   305f8:	bl	6b30 <__asan_internal_strcmp@plt>
   305fc:	cbnz	w0, 30b7c <__asan_backtrace_create_state@@Base+0x45ec>
   30600:	mov	x2, x23
   30604:	mov	w1, w21
   30608:	mov	x0, x19
   3060c:	bl	32310 <__asan_backtrace_create_state@@Base+0x5d80>
   30610:	mov	x2, x25
   30614:	mov	w1, w21
   30618:	mov	x0, x19
   3061c:	bl	32258 <__asan_backtrace_create_state@@Base+0x5cc8>
   30620:	mov	x2, x24
   30624:	mov	w1, w21
   30628:	mov	x0, x19
   3062c:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   30630:	bl	32310 <__asan_backtrace_create_state@@Base+0x5d80>
   30634:	add	x20, x20, #0x9f0
   30638:	mov	x0, x20
   3063c:	bl	67e0 <__asan_internal_strlen@plt>
   30640:	mov	x1, x20
   30644:	mov	x2, x0
   30648:	mov	x0, x19
   3064c:	bl	2c800 <__asan_backtrace_create_state@@Base+0x270>
   30650:	mov	x2, x22
   30654:	mov	w1, w21
   30658:	mov	x0, x19
   3065c:	bl	32310 <__asan_backtrace_create_state@@Base+0x5d80>
   30660:	ldp	x21, x22, [sp, #32]
   30664:	ldp	x23, x24, [sp, #48]
   30668:	ldp	x25, x26, [sp, #64]
   3066c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30670:	ldr	w4, [x19, #344]
   30674:	ldr	x5, [x19, #336]
   30678:	cmp	w4, #0x0
   3067c:	b.le	30c2c <__asan_backtrace_create_state@@Base+0x469c>
   30680:	sub	w3, w4, #0x1
   30684:	add	x1, x5, #0x10
   30688:	mov	x2, x5
   3068c:	add	x3, x1, w3, uxtw #4
   30690:	b	306a0 <__asan_backtrace_create_state@@Base+0x4110>
   30694:	add	x2, x2, #0x10
   30698:	cmp	x3, x2
   3069c:	b.eq	30c2c <__asan_backtrace_create_state@@Base+0x469c>  // b.none
   306a0:	ldr	x1, [x2]
   306a4:	cmp	x0, x1
   306a8:	b.ne	30694 <__asan_backtrace_create_state@@Base+0x4104>  // b.any
   306ac:	ldr	x4, [x19, #328]
   306b0:	mov	x1, x4
   306b4:	cbnz	x4, 306d0 <__asan_backtrace_create_state@@Base+0x4140>
   306b8:	b	30a64 <__asan_backtrace_create_state@@Base+0x44d4>
   306bc:	cmp	x4, x1
   306c0:	ccmp	x3, x20, #0x0, ne  // ne = any
   306c4:	b.eq	306dc <__asan_backtrace_create_state@@Base+0x414c>  // b.none
   306c8:	ldr	x1, [x1, #8]
   306cc:	cbz	x1, 30a64 <__asan_backtrace_create_state@@Base+0x44d4>
   306d0:	ldr	x3, [x1]
   306d4:	cmp	x3, x0
   306d8:	b.ne	306bc <__asan_backtrace_create_state@@Base+0x412c>  // b.any
   306dc:	add	x1, x0, #0x8
   306e0:	mov	x0, x19
   306e4:	bl	2ccb8 <__asan_backtrace_create_state@@Base+0x728>
   306e8:	cbz	x0, 2cff8 <__asan_backtrace_create_state@@Base+0xa68>
   306ec:	mov	w22, #0x0                   	// #0
   306f0:	ldr	w1, [x0]
   306f4:	cmp	w1, #0x2f
   306f8:	b.ne	2d17c <__asan_backtrace_create_state@@Base+0xbec>  // b.any
   306fc:	ldr	w1, [x19, #316]
   30700:	tbnz	w1, #31, 30e90 <__asan_backtrace_create_state@@Base+0x4900>
   30704:	bl	2cc78 <__asan_backtrace_create_state@@Base+0x6e8>
   30708:	cbz	x0, 30df8 <__asan_backtrace_create_state@@Base+0x4868>
   3070c:	ldr	w1, [x0]
   30710:	b	2d17c <__asan_backtrace_create_state@@Base+0xbec>
   30714:	mov	w1, w21
   30718:	mov	x2, x20
   3071c:	mov	x0, x19
   30720:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   30724:	ldp	x21, x22, [sp, #32]
   30728:	ldp	x23, x24, [sp, #48]
   3072c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30730:	ldr	x2, [x20, #16]
   30734:	mov	w1, w21
   30738:	mov	x0, x19
   3073c:	ldr	x2, [x2, #16]
   30740:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   30744:	ldr	x1, [x19, #256]
   30748:	cmp	x1, #0xff
   3074c:	b.ne	30774 <__asan_backtrace_create_state@@Base+0x41e4>  // b.any
   30750:	ldp	x3, x2, [x19, #272]
   30754:	strb	wzr, [x19, #255]
   30758:	mov	x0, x19
   3075c:	blr	x3
   30760:	str	xzr, [x19, #256]
   30764:	ldr	x0, [x19, #320]
   30768:	mov	x1, #0x0                   	// #0
   3076c:	add	x0, x0, #0x1
   30770:	str	x0, [x19, #320]
   30774:	add	x0, x1, #0x1
   30778:	str	x0, [x19, #256]
   3077c:	mov	w0, #0x29                  	// #41
   30780:	strb	w0, [x19, x1]
   30784:	strb	w0, [x19, #264]
   30788:	ldp	x21, x22, [sp, #32]
   3078c:	ldp	x23, x24, [sp, #48]
   30790:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30794:	sub	w1, w0, #0x61
   30798:	and	w1, w1, #0xff
   3079c:	cmp	w1, #0x5
   307a0:	b.hi	30d0c <__asan_backtrace_create_state@@Base+0x477c>  // b.pmore
   307a4:	sub	w0, w0, #0x57
   307a8:	b	2f9e4 <__asan_backtrace_create_state@@Base+0x3454>
   307ac:	ldp	x21, x22, [sp, #32]
   307b0:	ldp	x23, x24, [sp, #48]
   307b4:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   307b8:	ldr	w1, [x19, #316]
   307bc:	tbnz	w1, #31, 2fac0 <__asan_backtrace_create_state@@Base+0x3530>
   307c0:	bl	2cc78 <__asan_backtrace_create_state@@Base+0x6e8>
   307c4:	mov	x2, x0
   307c8:	cbnz	x0, 2fac0 <__asan_backtrace_create_state@@Base+0x3530>
   307cc:	b	2cff8 <__asan_backtrace_create_state@@Base+0xa68>
   307d0:	ldp	x3, x2, [x19, #272]
   307d4:	strb	wzr, [x19, #255]
   307d8:	mov	x1, x0
   307dc:	mov	x0, x19
   307e0:	blr	x3
   307e4:	ldr	x0, [x19, #320]
   307e8:	mov	w2, #0x20                  	// #32
   307ec:	mov	x1, #0x1                   	// #1
   307f0:	strb	w2, [x19]
   307f4:	add	x0, x0, x1
   307f8:	str	x0, [x19, #320]
   307fc:	b	2e7b0 <__asan_backtrace_create_state@@Base+0x2220>
   30800:	ldp	x3, x2, [x19, #272]
   30804:	strb	wzr, [x19, #255]
   30808:	mov	x1, x0
   3080c:	mov	x0, x19
   30810:	blr	x3
   30814:	ldr	x0, [x19, #320]
   30818:	mov	w2, #0x20                  	// #32
   3081c:	mov	x1, #0x1                   	// #1
   30820:	strb	w2, [x19]
   30824:	add	x0, x0, x1
   30828:	str	x0, [x19, #320]
   3082c:	b	2e774 <__asan_backtrace_create_state@@Base+0x21e4>
   30830:	ldp	x21, x22, [sp, #32]
   30834:	ldp	x23, x24, [sp, #48]
   30838:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   3083c:	ldr	x1, [x19, #256]
   30840:	cmp	x1, #0xff
   30844:	b.ne	3086c <__asan_backtrace_create_state@@Base+0x42dc>  // b.any
   30848:	ldp	x3, x2, [x19, #272]
   3084c:	strb	wzr, [x19, #255]
   30850:	mov	x0, x19
   30854:	blr	x3
   30858:	str	xzr, [x19, #256]
   3085c:	ldr	x0, [x19, #320]
   30860:	mov	x1, #0x0                   	// #0
   30864:	add	x0, x0, #0x1
   30868:	str	x0, [x19, #320]
   3086c:	add	x0, x1, #0x1
   30870:	str	x0, [x19, #256]
   30874:	mov	w2, #0x20                  	// #32
   30878:	strb	w2, [x19, x1]
   3087c:	strb	w2, [x19, #264]
   30880:	b	2fd8c <__asan_backtrace_create_state@@Base+0x37fc>
   30884:	cmp	x1, #0xff
   30888:	b.ne	308b0 <__asan_backtrace_create_state@@Base+0x4320>  // b.any
   3088c:	ldp	x3, x2, [x19, #272]
   30890:	strb	wzr, [x19, #255]
   30894:	mov	x0, x19
   30898:	blr	x3
   3089c:	str	xzr, [x19, #256]
   308a0:	ldr	x0, [x19, #320]
   308a4:	mov	x1, #0x0                   	// #0
   308a8:	add	x0, x0, #0x1
   308ac:	str	x0, [x19, #320]
   308b0:	add	x0, x1, #0x1
   308b4:	str	x0, [x19, #256]
   308b8:	mov	w2, #0x20                  	// #32
   308bc:	strb	w2, [x19, x1]
   308c0:	strb	w2, [x19, #264]
   308c4:	b	2fd24 <__asan_backtrace_create_state@@Base+0x3794>
   308c8:	ldp	x21, x22, [sp, #32]
   308cc:	ldp	x23, x24, [sp, #48]
   308d0:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   308d4:	ldp	x21, x22, [sp, #32]
   308d8:	ldp	x23, x24, [sp, #48]
   308dc:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   308e0:	ldp	x21, x22, [sp, #32]
   308e4:	ldp	x23, x24, [sp, #48]
   308e8:	ldp	x25, x26, [sp, #64]
   308ec:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   308f0:	ldr	w0, [x20]
   308f4:	cmp	w0, #0x3
   308f8:	b.ne	30114 <__asan_backtrace_create_state@@Base+0x3b84>  // b.any
   308fc:	ldr	x0, [x20, #8]
   30900:	ldr	w1, [x0]
   30904:	cmp	w1, #0x1
   30908:	b.ne	3011c <__asan_backtrace_create_state@@Base+0x3b8c>  // b.any
   3090c:	ldr	x1, [x20, #16]
   30910:	ldr	w1, [x1]
   30914:	cmp	w1, #0x29
   30918:	csel	x20, x20, x0, ne  // ne = any
   3091c:	b	3011c <__asan_backtrace_create_state@@Base+0x3b8c>
   30920:	mov	w1, w3
   30924:	mov	x0, x19
   30928:	bl	2cea8 <__asan_backtrace_create_state@@Base+0x918>
   3092c:	ldp	x21, x22, [sp, #32]
   30930:	ldp	x23, x24, [sp, #48]
   30934:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30938:	ldp	x21, x22, [sp, #32]
   3093c:	ldp	x23, x24, [sp, #48]
   30940:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30944:	ldr	x2, [x20, #8]
   30948:	mov	w1, w21
   3094c:	mov	x0, x19
   30950:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   30954:	add	x20, x20, #0x4f8
   30958:	bl	32310 <__asan_backtrace_create_state@@Base+0x5d80>
   3095c:	mov	x0, x20
   30960:	bl	67e0 <__asan_internal_strlen@plt>
   30964:	mov	x1, x20
   30968:	mov	x2, x0
   3096c:	mov	x0, x19
   30970:	bl	2c800 <__asan_backtrace_create_state@@Base+0x270>
   30974:	ldp	x21, x22, [sp, #32]
   30978:	ldp	x23, x24, [sp, #48]
   3097c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30980:	ldr	x0, [x20, #8]
   30984:	add	x1, x22, #0x9d8
   30988:	ldr	x0, [x0, #8]
   3098c:	ldr	x0, [x0]
   30990:	bl	6b30 <__asan_internal_strcmp@plt>
   30994:	cbnz	w0, 30db8 <__asan_backtrace_create_state@@Base+0x4828>
   30998:	ldr	x2, [x20, #16]
   3099c:	mov	w1, w21
   309a0:	mov	x0, x19
   309a4:	ldr	x2, [x2, #16]
   309a8:	bl	32310 <__asan_backtrace_create_state@@Base+0x5d80>
   309ac:	b	2e2e0 <__asan_backtrace_create_state@@Base+0x1d50>
   309b0:	sub	x22, x22, #0x2
   309b4:	ldp	x23, x24, [sp, #48]
   309b8:	ldp	x25, x26, [sp, #64]
   309bc:	str	x22, [x19, #256]
   309c0:	ldp	x21, x22, [sp, #32]
   309c4:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   309c8:	ldr	x0, [x0, #8]
   309cc:	ldr	w1, [x0, #16]
   309d0:	cmp	w1, #0x1
   309d4:	b.eq	30ddc <__asan_backtrace_create_state@@Base+0x484c>  // b.none
   309d8:	ldp	x21, x22, [sp, #32]
   309dc:	ldp	x23, x24, [sp, #48]
   309e0:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   309e4:	ldr	x0, [x20, #16]
   309e8:	b	2e218 <__asan_backtrace_create_state@@Base+0x1c88>
   309ec:	ldr	x1, [x0, #8]
   309f0:	ldr	w2, [x1, #16]
   309f4:	cmp	w2, #0x1
   309f8:	b.ne	2e1ec <__asan_backtrace_create_state@@Base+0x1c5c>  // b.any
   309fc:	ldr	x1, [x1, #8]
   30a00:	ldrb	w1, [x1]
   30a04:	cmp	w1, #0x3e
   30a08:	b.ne	2e1ec <__asan_backtrace_create_state@@Base+0x1c5c>  // b.any
   30a0c:	ldr	x1, [x19, #256]
   30a10:	cmp	x1, #0xff
   30a14:	b.ne	30a3c <__asan_backtrace_create_state@@Base+0x44ac>  // b.any
   30a18:	ldp	x3, x2, [x19, #272]
   30a1c:	strb	wzr, [x19, #255]
   30a20:	mov	x0, x19
   30a24:	blr	x3
   30a28:	str	xzr, [x19, #256]
   30a2c:	ldr	x0, [x19, #320]
   30a30:	mov	x1, #0x0                   	// #0
   30a34:	add	x0, x0, #0x1
   30a38:	str	x0, [x19, #320]
   30a3c:	add	x0, x1, #0x1
   30a40:	str	x0, [x19, #256]
   30a44:	mov	w0, #0x28                  	// #40
   30a48:	strb	w0, [x19, x1]
   30a4c:	strb	w0, [x19, #264]
   30a50:	ldr	x0, [x20, #8]
   30a54:	b	2e1ec <__asan_backtrace_create_state@@Base+0x1c5c>
   30a58:	ldp	x21, x22, [sp, #32]
   30a5c:	ldp	x23, x24, [sp, #48]
   30a60:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30a64:	ldr	x2, [x2, #8]
   30a68:	add	x1, x0, #0x8
   30a6c:	ldr	x23, [x19, #288]
   30a70:	str	x2, [x19, #288]
   30a74:	mov	x0, x19
   30a78:	bl	2ccb8 <__asan_backtrace_create_state@@Base+0x728>
   30a7c:	cbz	x0, 30dfc <__asan_backtrace_create_state@@Base+0x486c>
   30a80:	mov	w22, #0x1                   	// #1
   30a84:	b	306f0 <__asan_backtrace_create_state@@Base+0x4160>
   30a88:	ldr	x25, [x25, #8]
   30a8c:	cbz	x25, 304a8 <__asan_backtrace_create_state@@Base+0x3f18>
   30a90:	ldr	w5, [x25]
   30a94:	b	30398 <__asan_backtrace_create_state@@Base+0x3e08>
   30a98:	ldr	x0, [x22, #8]
   30a9c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   30aa0:	mov	x2, #0x6                   	// #6
   30aa4:	add	x1, x1, #0x7a0
   30aa8:	bl	6b70 <__asan_internal_strncmp@plt>
   30aac:	cbnz	w0, 2e74c <__asan_backtrace_create_state@@Base+0x21bc>
   30ab0:	ldr	x2, [x20, #16]
   30ab4:	mov	w1, w21
   30ab8:	mov	x0, x19
   30abc:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   30ac0:	add	x20, x20, #0x7a8
   30ac4:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   30ac8:	mov	x0, x20
   30acc:	bl	67e0 <__asan_internal_strlen@plt>
   30ad0:	mov	x1, x20
   30ad4:	mov	x2, x0
   30ad8:	mov	x0, x19
   30adc:	bl	2c800 <__asan_backtrace_create_state@@Base+0x270>
   30ae0:	b	2e7c4 <__asan_backtrace_create_state@@Base+0x2234>
   30ae4:	ldp	x21, x22, [sp, #32]
   30ae8:	ldp	x23, x24, [sp, #48]
   30aec:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30af0:	ldp	x21, x22, [sp, #32]
   30af4:	ldp	x23, x24, [sp, #48]
   30af8:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30afc:	ldr	x0, [x1, #16]
   30b00:	ldr	w0, [x0]
   30b04:	cmp	w0, #0x29
   30b08:	b.eq	30b14 <__asan_backtrace_create_state@@Base+0x4584>  // b.none
   30b0c:	mov	w0, #0x1                   	// #1
   30b10:	str	w0, [x19, #304]
   30b14:	ldr	x2, [x1, #8]
   30b18:	mov	x0, x19
   30b1c:	mov	w1, w21
   30b20:	bl	32310 <__asan_backtrace_create_state@@Base+0x5d80>
   30b24:	b	2e228 <__asan_backtrace_create_state@@Base+0x1c98>
   30b28:	ldp	x21, x22, [sp, #32]
   30b2c:	ldp	x23, x24, [sp, #48]
   30b30:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30b34:	ldp	x21, x22, [sp, #32]
   30b38:	ldp	x23, x24, [sp, #48]
   30b3c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30b40:	ldp	x21, x22, [sp, #32]
   30b44:	ldp	x23, x24, [sp, #48]
   30b48:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30b4c:	ldp	x21, x22, [sp, #32]
   30b50:	ldp	x23, x24, [sp, #48]
   30b54:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30b58:	ldp	x21, x22, [sp, #32]
   30b5c:	ldp	x23, x24, [sp, #48]
   30b60:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30b64:	ldp	x21, x22, [sp, #32]
   30b68:	ldp	x23, x24, [sp, #48]
   30b6c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30b70:	ldp	x21, x22, [sp, #32]
   30b74:	ldp	x23, x24, [sp, #48]
   30b78:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30b7c:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   30b80:	add	x20, x20, #0x9f8
   30b84:	mov	x0, x20
   30b88:	bl	67e0 <__asan_internal_strlen@plt>
   30b8c:	mov	x1, x20
   30b90:	mov	x2, x0
   30b94:	mov	x0, x19
   30b98:	bl	2c800 <__asan_backtrace_create_state@@Base+0x270>
   30b9c:	ldr	x0, [x23, #8]
   30ba0:	cbz	x0, 30bf8 <__asan_backtrace_create_state@@Base+0x4668>
   30ba4:	mov	w1, w21
   30ba8:	mov	x2, x23
   30bac:	mov	x0, x19
   30bb0:	bl	32310 <__asan_backtrace_create_state@@Base+0x5d80>
   30bb4:	ldr	x1, [x19, #256]
   30bb8:	cmp	x1, #0xff
   30bbc:	b.ne	30be4 <__asan_backtrace_create_state@@Base+0x4654>  // b.any
   30bc0:	ldp	x3, x2, [x19, #272]
   30bc4:	strb	wzr, [x19, #255]
   30bc8:	mov	x0, x19
   30bcc:	blr	x3
   30bd0:	str	xzr, [x19, #256]
   30bd4:	ldr	x0, [x19, #320]
   30bd8:	mov	x1, #0x0                   	// #0
   30bdc:	add	x0, x0, #0x1
   30be0:	str	x0, [x19, #320]
   30be4:	add	x0, x1, #0x1
   30be8:	str	x0, [x19, #256]
   30bec:	mov	w0, #0x20                  	// #32
   30bf0:	strb	w0, [x19, x1]
   30bf4:	strb	w0, [x19, #264]
   30bf8:	mov	x2, x24
   30bfc:	mov	w1, w21
   30c00:	mov	x0, x19
   30c04:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   30c08:	cbz	x22, 30dcc <__asan_backtrace_create_state@@Base+0x483c>
   30c0c:	mov	x2, x22
   30c10:	mov	w1, w21
   30c14:	mov	x0, x19
   30c18:	bl	32310 <__asan_backtrace_create_state@@Base+0x5d80>
   30c1c:	ldp	x21, x22, [sp, #32]
   30c20:	ldp	x23, x24, [sp, #48]
   30c24:	ldp	x25, x26, [sp, #64]
   30c28:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30c2c:	ldr	w1, [x19, #348]
   30c30:	cmp	w4, w1
   30c34:	b.ge	30c9c <__asan_backtrace_create_state@@Base+0x470c>  // b.tcont
   30c38:	sbfiz	x1, x4, #4, #32
   30c3c:	add	w2, w4, #0x1
   30c40:	ldr	x3, [x19, #288]
   30c44:	str	w2, [x19, #344]
   30c48:	str	x0, [x5, x1]
   30c4c:	add	x1, x5, w4, sxtw #4
   30c50:	add	x1, x1, #0x8
   30c54:	cbz	x3, 30e88 <__asan_backtrace_create_state@@Base+0x48f8>
   30c58:	ldr	w2, [x19, #360]
   30c5c:	ldr	w6, [x19, #364]
   30c60:	sbfiz	x5, x2, #4, #32
   30c64:	b	30c94 <__asan_backtrace_create_state@@Base+0x4704>
   30c68:	ldr	x4, [x19, #352]
   30c6c:	add	w2, w2, #0x1
   30c70:	ldr	x7, [x3, #8]
   30c74:	add	x4, x4, x5
   30c78:	str	w2, [x19, #360]
   30c7c:	add	x5, x5, #0x10
   30c80:	str	x7, [x4, #8]
   30c84:	str	x4, [x1]
   30c88:	mov	x1, x4
   30c8c:	ldr	x3, [x3]
   30c90:	cbz	x3, 30e88 <__asan_backtrace_create_state@@Base+0x48f8>
   30c94:	cmp	w6, w2
   30c98:	b.gt	30c68 <__asan_backtrace_create_state@@Base+0x46d8>
   30c9c:	mov	w0, #0x1                   	// #1
   30ca0:	ldp	x21, x22, [sp, #32]
   30ca4:	ldp	x23, x24, [sp, #48]
   30ca8:	str	w0, [x19, #304]
   30cac:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30cb0:	ldr	x2, [x20, #16]
   30cb4:	mov	x0, x19
   30cb8:	mov	w1, w21
   30cbc:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   30cc0:	str	xzr, [x19, #296]
   30cc4:	ldr	w0, [sp, #128]
   30cc8:	cbz	w0, 2dab0 <__asan_backtrace_create_state@@Base+0x1520>
   30ccc:	ldp	x21, x22, [sp, #32]
   30cd0:	ldp	x23, x24, [sp, #48]
   30cd4:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30cd8:	cmp	w22, #0x5
   30cdc:	b.eq	30e0c <__asan_backtrace_create_state@@Base+0x487c>  // b.none
   30ce0:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   30ce4:	add	x20, x20, #0xa10
   30ce8:	mov	x0, x20
   30cec:	bl	67e0 <__asan_internal_strlen@plt>
   30cf0:	mov	x1, x20
   30cf4:	mov	x2, x0
   30cf8:	mov	x0, x19
   30cfc:	bl	2c800 <__asan_backtrace_create_state@@Base+0x270>
   30d00:	ldp	x21, x22, [sp, #32]
   30d04:	ldp	x23, x24, [sp, #48]
   30d08:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30d0c:	cmp	x24, x21
   30d10:	b.cs	2f950 <__asan_backtrace_create_state@@Base+0x33c0>  // b.hs, b.nlast
   30d14:	cmp	x2, #0xff
   30d18:	ccmp	w0, w23, #0x0, ls  // ls = plast
   30d1c:	b.ne	2f950 <__asan_backtrace_create_state@@Base+0x33c0>  // b.any
   30d20:	ldr	x1, [x19, #256]
   30d24:	and	w22, w2, #0xff
   30d28:	cmp	x1, #0xff
   30d2c:	b.ne	30d54 <__asan_backtrace_create_state@@Base+0x47c4>  // b.any
   30d30:	ldp	x3, x2, [x19, #272]
   30d34:	strb	wzr, [x19, #255]
   30d38:	mov	x0, x19
   30d3c:	blr	x3
   30d40:	str	xzr, [x19, #256]
   30d44:	ldr	x0, [x19, #320]
   30d48:	mov	x1, #0x0                   	// #0
   30d4c:	add	x0, x0, #0x1
   30d50:	str	x0, [x19, #320]
   30d54:	add	x0, x1, #0x1
   30d58:	str	x0, [x19, #256]
   30d5c:	strb	w22, [x19, x1]
   30d60:	mov	x20, x24
   30d64:	strb	w22, [x19, #264]
   30d68:	b	2f990 <__asan_backtrace_create_state@@Base+0x3400>
   30d6c:	mov	x1, x20
   30d70:	mov	x0, x19
   30d74:	bl	2cce8 <__asan_backtrace_create_state@@Base+0x758>
   30d78:	cbnz	x0, 30d94 <__asan_backtrace_create_state@@Base+0x4804>
   30d7c:	b	30da0 <__asan_backtrace_create_state@@Base+0x4810>
   30d80:	ldr	x1, [x0, #8]
   30d84:	cbz	x1, 30da0 <__asan_backtrace_create_state@@Base+0x4810>
   30d88:	ldr	x0, [x0, #16]
   30d8c:	add	w3, w3, #0x1
   30d90:	cbz	x0, 30da0 <__asan_backtrace_create_state@@Base+0x4810>
   30d94:	ldr	w1, [x0]
   30d98:	cmp	w1, #0x2f
   30d9c:	b.eq	30d80 <__asan_backtrace_create_state@@Base+0x47f0>  // b.none
   30da0:	mov	w1, w3
   30da4:	mov	x0, x19
   30da8:	bl	2cea8 <__asan_backtrace_create_state@@Base+0x918>
   30dac:	ldp	x21, x22, [sp, #32]
   30db0:	ldp	x23, x24, [sp, #48]
   30db4:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30db8:	ldr	x2, [x20, #8]
   30dbc:	mov	w1, w21
   30dc0:	mov	x0, x19
   30dc4:	bl	32258 <__asan_backtrace_create_state@@Base+0x5cc8>
   30dc8:	b	30998 <__asan_backtrace_create_state@@Base+0x4408>
   30dcc:	ldp	x21, x22, [sp, #32]
   30dd0:	ldp	x23, x24, [sp, #48]
   30dd4:	ldp	x25, x26, [sp, #64]
   30dd8:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30ddc:	ldr	x0, [x0, #8]
   30de0:	ldrb	w0, [x0]
   30de4:	cmp	w0, #0x3e
   30de8:	b.eq	30e38 <__asan_backtrace_create_state@@Base+0x48a8>  // b.none
   30dec:	ldp	x21, x22, [sp, #32]
   30df0:	ldp	x23, x24, [sp, #48]
   30df4:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30df8:	cbz	w22, 2cff8 <__asan_backtrace_create_state@@Base+0xa68>
   30dfc:	ldp	x21, x22, [sp, #32]
   30e00:	str	x23, [x19, #288]
   30e04:	ldp	x23, x24, [sp, #48]
   30e08:	b	2d000 <__asan_backtrace_create_state@@Base+0xa70>
   30e0c:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   30e10:	add	x20, x20, #0xa08
   30e14:	mov	x0, x20
   30e18:	bl	67e0 <__asan_internal_strlen@plt>
   30e1c:	mov	x1, x20
   30e20:	mov	x2, x0
   30e24:	mov	x0, x19
   30e28:	bl	2c800 <__asan_backtrace_create_state@@Base+0x270>
   30e2c:	ldp	x21, x22, [sp, #32]
   30e30:	ldp	x23, x24, [sp, #48]
   30e34:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30e38:	ldr	x1, [x19, #256]
   30e3c:	cmp	x1, #0xff
   30e40:	b.ne	30e68 <__asan_backtrace_create_state@@Base+0x48d8>  // b.any
   30e44:	ldp	x3, x2, [x19, #272]
   30e48:	strb	wzr, [x19, #255]
   30e4c:	mov	x0, x19
   30e50:	blr	x3
   30e54:	str	xzr, [x19, #256]
   30e58:	ldr	x0, [x19, #320]
   30e5c:	mov	x1, #0x0                   	// #0
   30e60:	add	x0, x0, #0x1
   30e64:	str	x0, [x19, #320]
   30e68:	add	x0, x1, #0x1
   30e6c:	str	x0, [x19, #256]
   30e70:	mov	w0, #0x29                  	// #41
   30e74:	strb	w0, [x19, x1]
   30e78:	strb	w0, [x19, #264]
   30e7c:	ldp	x21, x22, [sp, #32]
   30e80:	ldp	x23, x24, [sp, #48]
   30e84:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30e88:	str	xzr, [x1]
   30e8c:	b	306dc <__asan_backtrace_create_state@@Base+0x414c>
   30e90:	ldr	w1, [x20]
   30e94:	ldr	x4, [x19, #296]
   30e98:	cmp	w1, #0x2f
   30e9c:	csel	x20, x20, x0, ne  // ne = any
   30ea0:	b	2d1a0 <__asan_backtrace_create_state@@Base+0xc10>
   30ea4:	ldr	x1, [x19, #256]
   30ea8:	cmp	x1, #0xff
   30eac:	b.ne	30ed4 <__asan_backtrace_create_state@@Base+0x4944>  // b.any
   30eb0:	ldp	x3, x2, [x19, #272]
   30eb4:	strb	wzr, [x19, #255]
   30eb8:	mov	x0, x19
   30ebc:	blr	x3
   30ec0:	str	xzr, [x19, #256]
   30ec4:	ldr	x0, [x19, #320]
   30ec8:	mov	x1, #0x0                   	// #0
   30ecc:	add	x0, x0, #0x1
   30ed0:	str	x0, [x19, #320]
   30ed4:	add	x0, x1, #0x1
   30ed8:	str	x0, [x19, #256]
   30edc:	mov	w0, #0x75                  	// #117
   30ee0:	strb	w0, [x19, x1]
   30ee4:	strb	w0, [x19, #264]
   30ee8:	ldp	x21, x22, [sp, #32]
   30eec:	ldp	x23, x24, [sp, #48]
   30ef0:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30ef4:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   30ef8:	add	x20, x20, #0xa00
   30efc:	mov	x0, x20
   30f00:	bl	67e0 <__asan_internal_strlen@plt>
   30f04:	mov	x1, x20
   30f08:	mov	x2, x0
   30f0c:	mov	x0, x19
   30f10:	bl	2c800 <__asan_backtrace_create_state@@Base+0x270>
   30f14:	ldp	x21, x22, [sp, #32]
   30f18:	ldp	x23, x24, [sp, #48]
   30f1c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30f20:	ldr	x1, [x19, #256]
   30f24:	cmp	x1, #0xff
   30f28:	b.ne	30f50 <__asan_backtrace_create_state@@Base+0x49c0>  // b.any
   30f2c:	ldp	x3, x2, [x19, #272]
   30f30:	strb	wzr, [x19, #255]
   30f34:	mov	x0, x19
   30f38:	blr	x3
   30f3c:	str	xzr, [x19, #256]
   30f40:	ldr	x0, [x19, #320]
   30f44:	mov	x1, #0x0                   	// #0
   30f48:	add	x0, x0, #0x1
   30f4c:	str	x0, [x19, #320]
   30f50:	add	x0, x1, #0x1
   30f54:	str	x0, [x19, #256]
   30f58:	mov	w0, #0x2d                  	// #45
   30f5c:	strb	w0, [x19, x1]
   30f60:	strb	w0, [x19, #264]
   30f64:	b	2fc0c <__asan_backtrace_create_state@@Base+0x367c>
   30f68:	ldp	x21, x22, [sp, #32]
   30f6c:	ldp	x23, x24, [sp, #48]
   30f70:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30f74:	adrp	x20, 3a000 <__asan_backtrace_vector_release@@Base+0x28>
   30f78:	add	x20, x20, #0x90
   30f7c:	mov	x0, x20
   30f80:	bl	67e0 <__asan_internal_strlen@plt>
   30f84:	mov	x1, x20
   30f88:	mov	x2, x0
   30f8c:	mov	x0, x19
   30f90:	bl	2c800 <__asan_backtrace_create_state@@Base+0x270>
   30f94:	ldp	x21, x22, [sp, #32]
   30f98:	ldp	x23, x24, [sp, #48]
   30f9c:	b	2cfcc <__asan_backtrace_create_state@@Base+0xa3c>
   30fa0:	stp	x29, x30, [sp, #-48]!
   30fa4:	mov	x29, sp
   30fa8:	stp	x19, x20, [sp, #16]
   30fac:	mov	x20, x0
   30fb0:	cbz	x2, 31020 <__asan_backtrace_create_state@@Base+0x4a90>
   30fb4:	ldr	w3, [x2, #4]
   30fb8:	mov	x19, x2
   30fbc:	cmp	w3, #0x1
   30fc0:	b.gt	31020 <__asan_backtrace_create_state@@Base+0x4a90>
   30fc4:	ldr	w4, [x0, #308]
   30fc8:	cmp	w4, #0x400
   30fcc:	b.gt	31020 <__asan_backtrace_create_state@@Base+0x4a90>
   30fd0:	add	w3, w3, #0x1
   30fd4:	add	w4, w4, #0x1
   30fd8:	str	w3, [x2, #4]
   30fdc:	add	x3, sp, #0x20
   30fe0:	str	w4, [x0, #308]
   30fe4:	ldr	x4, [x0, #328]
   30fe8:	str	x3, [x0, #328]
   30fec:	stp	x2, x4, [sp, #32]
   30ff0:	bl	2cf68 <__asan_backtrace_create_state@@Base+0x9d8>
   30ff4:	ldr	w1, [x19, #4]
   30ff8:	ldr	x0, [sp, #40]
   30ffc:	str	x0, [x20, #328]
   31000:	ldr	w0, [x20, #308]
   31004:	sub	w1, w1, #0x1
   31008:	str	w1, [x19, #4]
   3100c:	sub	w0, w0, #0x1
   31010:	str	w0, [x20, #308]
   31014:	ldp	x19, x20, [sp, #16]
   31018:	ldp	x29, x30, [sp], #48
   3101c:	ret
   31020:	mov	w0, #0x1                   	// #1
   31024:	str	w0, [x20, #304]
   31028:	ldp	x19, x20, [sp, #16]
   3102c:	ldp	x29, x30, [sp], #48
   31030:	ret
   31034:	nop
   31038:	stp	x29, x30, [sp, #-64]!
   3103c:	mov	x29, sp
   31040:	stp	x19, x20, [sp, #16]
   31044:	mov	x19, x0
   31048:	ldr	w0, [x2]
   3104c:	stp	x21, x22, [sp, #32]
   31050:	mov	x20, x2
   31054:	sub	w0, w0, #0x3
   31058:	mov	w21, w1
   3105c:	cmp	w0, #0x4d
   31060:	b.ls	31080 <__asan_backtrace_create_state@@Base+0x4af0>  // b.plast
   31064:	mov	x2, x20
   31068:	mov	w1, w21
   3106c:	mov	x0, x19
   31070:	ldp	x19, x20, [sp, #16]
   31074:	ldp	x21, x22, [sp, #32]
   31078:	ldp	x29, x30, [sp], #64
   3107c:	b	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   31080:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   31084:	add	x1, x1, #0x644
   31088:	ldrh	w0, [x1, w0, uxtw #1]
   3108c:	adr	x1, 31098 <__asan_backtrace_create_state@@Base+0x4b08>
   31090:	add	x0, x1, w0, sxth #2
   31094:	br	x0
   31098:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   3109c:	add	x22, x22, #0xac8
   310a0:	mov	x0, x22
   310a4:	bl	67e0 <__asan_internal_strlen@plt>
   310a8:	cbz	x0, 31254 <__asan_backtrace_create_state@@Base+0x4cc4>
   310ac:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   310b0:	add	x22, x0, x22
   310b4:	add	x20, x20, #0xac9
   310b8:	mov	w21, #0x20                  	// #32
   310bc:	ldr	x1, [x19, #256]
   310c0:	b	310e4 <__asan_backtrace_create_state@@Base+0x4b54>
   310c4:	mov	x0, x1
   310c8:	add	x1, x1, #0x1
   310cc:	str	x1, [x19, #256]
   310d0:	cmp	x20, x22
   310d4:	strb	w21, [x19, x0]
   310d8:	strb	w21, [x19, #264]
   310dc:	b.eq	31254 <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   310e0:	ldrb	w21, [x20], #1
   310e4:	cmp	x1, #0xff
   310e8:	b.ne	310c4 <__asan_backtrace_create_state@@Base+0x4b34>  // b.any
   310ec:	ldp	x3, x2, [x19, #272]
   310f0:	strb	wzr, [x19, #255]
   310f4:	mov	x0, x19
   310f8:	blr	x3
   310fc:	ldr	x2, [x19, #320]
   31100:	mov	x1, #0x1                   	// #1
   31104:	mov	x0, #0x0                   	// #0
   31108:	add	x2, x2, x1
   3110c:	str	x2, [x19, #320]
   31110:	b	310cc <__asan_backtrace_create_state@@Base+0x4b3c>
   31114:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   31118:	add	x22, x22, #0xad8
   3111c:	mov	x0, x22
   31120:	bl	67e0 <__asan_internal_strlen@plt>
   31124:	cbz	x0, 31254 <__asan_backtrace_create_state@@Base+0x4cc4>
   31128:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   3112c:	add	x22, x0, x22
   31130:	add	x20, x20, #0xad9
   31134:	mov	w21, #0x20                  	// #32
   31138:	ldr	x1, [x19, #256]
   3113c:	b	31160 <__asan_backtrace_create_state@@Base+0x4bd0>
   31140:	mov	x0, x1
   31144:	add	x1, x1, #0x1
   31148:	str	x1, [x19, #256]
   3114c:	cmp	x20, x22
   31150:	strb	w21, [x19, x0]
   31154:	strb	w21, [x19, #264]
   31158:	b.eq	31254 <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   3115c:	ldrb	w21, [x20], #1
   31160:	cmp	x1, #0xff
   31164:	b.ne	31140 <__asan_backtrace_create_state@@Base+0x4bb0>  // b.any
   31168:	ldp	x3, x2, [x19, #272]
   3116c:	strb	wzr, [x19, #255]
   31170:	mov	x0, x19
   31174:	blr	x3
   31178:	ldr	x2, [x19, #320]
   3117c:	mov	x1, #0x1                   	// #1
   31180:	mov	x0, #0x0                   	// #0
   31184:	add	x2, x2, x1
   31188:	str	x2, [x19, #320]
   3118c:	b	31148 <__asan_backtrace_create_state@@Base+0x4bb8>
   31190:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   31194:	add	x22, x22, #0xae8
   31198:	mov	x0, x22
   3119c:	bl	67e0 <__asan_internal_strlen@plt>
   311a0:	cbz	x0, 31254 <__asan_backtrace_create_state@@Base+0x4cc4>
   311a4:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   311a8:	add	x22, x0, x22
   311ac:	add	x20, x20, #0xae9
   311b0:	mov	w21, #0x20                  	// #32
   311b4:	ldr	x1, [x19, #256]
   311b8:	b	311dc <__asan_backtrace_create_state@@Base+0x4c4c>
   311bc:	mov	x0, x1
   311c0:	add	x1, x1, #0x1
   311c4:	str	x1, [x19, #256]
   311c8:	cmp	x22, x20
   311cc:	strb	w21, [x19, x0]
   311d0:	strb	w21, [x19, #264]
   311d4:	b.eq	31254 <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   311d8:	ldrb	w21, [x20], #1
   311dc:	cmp	x1, #0xff
   311e0:	b.ne	311bc <__asan_backtrace_create_state@@Base+0x4c2c>  // b.any
   311e4:	ldp	x3, x2, [x19, #272]
   311e8:	strb	wzr, [x19, #255]
   311ec:	mov	x0, x19
   311f0:	blr	x3
   311f4:	ldr	x2, [x19, #320]
   311f8:	mov	x1, #0x1                   	// #1
   311fc:	mov	x0, #0x0                   	// #0
   31200:	add	x2, x2, x1
   31204:	str	x2, [x19, #320]
   31208:	b	311c4 <__asan_backtrace_create_state@@Base+0x4c34>
   3120c:	tbnz	w21, #2, 31254 <__asan_backtrace_create_state@@Base+0x4cc4>
   31210:	ldr	x1, [x19, #256]
   31214:	add	x0, x1, #0x1
   31218:	cmp	x1, #0xff
   3121c:	b.ne	31244 <__asan_backtrace_create_state@@Base+0x4cb4>  // b.any
   31220:	ldp	x3, x2, [x19, #272]
   31224:	strb	wzr, [x19, #255]
   31228:	mov	x0, x19
   3122c:	blr	x3
   31230:	ldr	x2, [x19, #320]
   31234:	mov	x0, #0x1                   	// #1
   31238:	mov	x1, #0x0                   	// #0
   3123c:	add	x2, x2, x0
   31240:	str	x2, [x19, #320]
   31244:	str	x0, [x19, #256]
   31248:	mov	w0, #0x2a                  	// #42
   3124c:	strb	w0, [x19, x1]
   31250:	strb	w0, [x19, #264]
   31254:	ldp	x19, x20, [sp, #16]
   31258:	ldp	x21, x22, [sp, #32]
   3125c:	ldp	x29, x30, [sp], #64
   31260:	ret
   31264:	ldr	x1, [x19, #256]
   31268:	add	x0, x1, #0x1
   3126c:	cmp	x1, #0xff
   31270:	b.ne	31298 <__asan_backtrace_create_state@@Base+0x4d08>  // b.any
   31274:	ldp	x3, x2, [x19, #272]
   31278:	strb	wzr, [x19, #255]
   3127c:	mov	x0, x19
   31280:	blr	x3
   31284:	ldr	x2, [x19, #320]
   31288:	mov	x0, #0x1                   	// #1
   3128c:	mov	x1, #0x0                   	// #0
   31290:	add	x2, x2, x0
   31294:	str	x2, [x19, #320]
   31298:	str	x0, [x19, #256]
   3129c:	mov	w0, #0x20                  	// #32
   312a0:	strb	w0, [x19, x1]
   312a4:	strb	w0, [x19, #264]
   312a8:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   312ac:	add	x22, x22, #0xb20
   312b0:	mov	x0, x22
   312b4:	bl	67e0 <__asan_internal_strlen@plt>
   312b8:	cbz	x0, 31254 <__asan_backtrace_create_state@@Base+0x4cc4>
   312bc:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   312c0:	add	x22, x0, x22
   312c4:	add	x20, x20, #0xb21
   312c8:	mov	w21, #0x26                  	// #38
   312cc:	ldr	x1, [x19, #256]
   312d0:	b	312f4 <__asan_backtrace_create_state@@Base+0x4d64>
   312d4:	mov	x2, x1
   312d8:	add	x1, x1, #0x1
   312dc:	str	x1, [x19, #256]
   312e0:	cmp	x20, x22
   312e4:	strb	w21, [x19, x2]
   312e8:	strb	w21, [x19, #264]
   312ec:	b.eq	31254 <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   312f0:	ldrb	w21, [x20], #1
   312f4:	cmp	x1, #0xff
   312f8:	b.ne	312d4 <__asan_backtrace_create_state@@Base+0x4d44>  // b.any
   312fc:	ldp	x3, x2, [x19, #272]
   31300:	strb	wzr, [x19, #255]
   31304:	mov	x0, x19
   31308:	blr	x3
   3130c:	ldr	x0, [x19, #320]
   31310:	mov	x1, #0x1                   	// #1
   31314:	mov	x2, #0x0                   	// #0
   31318:	add	x0, x0, x1
   3131c:	str	x0, [x19, #320]
   31320:	b	312dc <__asan_backtrace_create_state@@Base+0x4d4c>
   31324:	ldr	x0, [x19, #256]
   31328:	cmp	x0, #0xff
   3132c:	b.eq	31898 <__asan_backtrace_create_state@@Base+0x5308>  // b.none
   31330:	add	x1, x0, #0x1
   31334:	str	x1, [x19, #256]
   31338:	mov	w2, #0x20                  	// #32
   3133c:	strb	w2, [x19, x0]
   31340:	strb	w2, [x19, #264]
   31344:	b	31760 <__asan_backtrace_create_state@@Base+0x51d0>
   31348:	ldr	x1, [x19, #256]
   3134c:	add	x0, x1, #0x1
   31350:	cmp	x1, #0xff
   31354:	b.eq	31870 <__asan_backtrace_create_state@@Base+0x52e0>  // b.none
   31358:	str	x0, [x19, #256]
   3135c:	mov	w0, #0x20                  	// #32
   31360:	strb	w0, [x19, x1]
   31364:	mov	w1, w21
   31368:	strb	w0, [x19, #264]
   3136c:	mov	x0, x19
   31370:	ldr	x2, [x20, #16]
   31374:	ldp	x19, x20, [sp, #16]
   31378:	ldp	x21, x22, [sp, #32]
   3137c:	ldp	x29, x30, [sp], #64
   31380:	b	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   31384:	ldrb	w0, [x19, #264]
   31388:	cmp	w0, #0x28
   3138c:	b.eq	313d4 <__asan_backtrace_create_state@@Base+0x4e44>  // b.none
   31390:	ldr	x1, [x19, #256]
   31394:	add	x0, x1, #0x1
   31398:	cmp	x1, #0xff
   3139c:	b.ne	313c4 <__asan_backtrace_create_state@@Base+0x4e34>  // b.any
   313a0:	ldp	x3, x2, [x19, #272]
   313a4:	strb	wzr, [x19, #255]
   313a8:	mov	x0, x19
   313ac:	blr	x3
   313b0:	ldr	x2, [x19, #320]
   313b4:	mov	x0, #0x1                   	// #1
   313b8:	mov	x1, #0x0                   	// #0
   313bc:	add	x2, x2, x0
   313c0:	str	x2, [x19, #320]
   313c4:	str	x0, [x19, #256]
   313c8:	mov	w0, #0x20                  	// #32
   313cc:	strb	w0, [x19, x1]
   313d0:	strb	w0, [x19, #264]
   313d4:	ldr	x2, [x20, #8]
   313d8:	mov	w1, w21
   313dc:	mov	x0, x19
   313e0:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   313e4:	add	x22, x22, #0xb48
   313e8:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   313ec:	mov	x0, x22
   313f0:	bl	67e0 <__asan_internal_strlen@plt>
   313f4:	cbz	x0, 31254 <__asan_backtrace_create_state@@Base+0x4cc4>
   313f8:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   313fc:	add	x22, x0, x22
   31400:	add	x20, x20, #0xb49
   31404:	mov	w21, #0x3a                  	// #58
   31408:	ldr	x1, [x19, #256]
   3140c:	b	31430 <__asan_backtrace_create_state@@Base+0x4ea0>
   31410:	mov	x0, x1
   31414:	add	x1, x1, #0x1
   31418:	str	x1, [x19, #256]
   3141c:	cmp	x20, x22
   31420:	strb	w21, [x19, x0]
   31424:	strb	w21, [x19, #264]
   31428:	b.eq	31254 <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   3142c:	ldrb	w21, [x20], #1
   31430:	cmp	x1, #0xff
   31434:	b.ne	31410 <__asan_backtrace_create_state@@Base+0x4e80>  // b.any
   31438:	ldp	x3, x2, [x19, #272]
   3143c:	strb	wzr, [x19, #255]
   31440:	mov	x0, x19
   31444:	blr	x3
   31448:	ldr	x2, [x19, #320]
   3144c:	mov	x1, #0x1                   	// #1
   31450:	mov	x0, #0x0                   	// #0
   31454:	add	x2, x2, x1
   31458:	str	x2, [x19, #320]
   3145c:	b	31418 <__asan_backtrace_create_state@@Base+0x4e88>
   31460:	stp	x23, x24, [sp, #48]
   31464:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   31468:	add	x24, x24, #0xb50
   3146c:	mov	x0, x24
   31470:	bl	67e0 <__asan_internal_strlen@plt>
   31474:	cbz	x0, 31840 <__asan_backtrace_create_state@@Base+0x52b0>
   31478:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   3147c:	add	x24, x0, x24
   31480:	add	x22, x22, #0xb51
   31484:	mov	w23, #0x20                  	// #32
   31488:	ldr	x1, [x19, #256]
   3148c:	b	314b0 <__asan_backtrace_create_state@@Base+0x4f20>
   31490:	mov	x0, x1
   31494:	add	x1, x1, #0x1
   31498:	str	x1, [x19, #256]
   3149c:	cmp	x22, x24
   314a0:	strb	w23, [x19, x0]
   314a4:	strb	w23, [x19, #264]
   314a8:	b.eq	31840 <__asan_backtrace_create_state@@Base+0x52b0>  // b.none
   314ac:	ldrb	w23, [x22], #1
   314b0:	cmp	x1, #0xff
   314b4:	b.ne	31490 <__asan_backtrace_create_state@@Base+0x4f00>  // b.any
   314b8:	ldp	x3, x2, [x19, #272]
   314bc:	strb	wzr, [x19, #255]
   314c0:	mov	x0, x19
   314c4:	blr	x3
   314c8:	ldr	x2, [x19, #320]
   314cc:	mov	x1, #0x1                   	// #1
   314d0:	mov	x0, #0x0                   	// #0
   314d4:	add	x2, x2, x1
   314d8:	str	x2, [x19, #320]
   314dc:	b	31498 <__asan_backtrace_create_state@@Base+0x4f08>
   314e0:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   314e4:	add	x22, x22, #0xaf0
   314e8:	mov	x0, x22
   314ec:	bl	67e0 <__asan_internal_strlen@plt>
   314f0:	cbz	x0, 31254 <__asan_backtrace_create_state@@Base+0x4cc4>
   314f4:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   314f8:	add	x22, x0, x22
   314fc:	add	x20, x20, #0xaf1
   31500:	mov	w21, #0x20                  	// #32
   31504:	ldr	x1, [x19, #256]
   31508:	b	3152c <__asan_backtrace_create_state@@Base+0x4f9c>
   3150c:	mov	x0, x1
   31510:	add	x1, x1, #0x1
   31514:	str	x1, [x19, #256]
   31518:	cmp	x22, x20
   3151c:	strb	w21, [x19, x0]
   31520:	strb	w21, [x19, #264]
   31524:	b.eq	31254 <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   31528:	ldrb	w21, [x20], #1
   3152c:	cmp	x1, #0xff
   31530:	b.ne	3150c <__asan_backtrace_create_state@@Base+0x4f7c>  // b.any
   31534:	ldp	x3, x2, [x19, #272]
   31538:	strb	wzr, [x19, #255]
   3153c:	mov	x0, x19
   31540:	blr	x3
   31544:	ldr	x2, [x19, #320]
   31548:	mov	x1, #0x1                   	// #1
   3154c:	mov	x0, #0x0                   	// #0
   31550:	add	x2, x2, x1
   31554:	str	x2, [x19, #320]
   31558:	b	31514 <__asan_backtrace_create_state@@Base+0x4f84>
   3155c:	stp	x23, x24, [sp, #48]
   31560:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   31564:	add	x24, x24, #0xb08
   31568:	mov	x0, x24
   3156c:	bl	67e0 <__asan_internal_strlen@plt>
   31570:	cbz	x0, 3178c <__asan_backtrace_create_state@@Base+0x51fc>
   31574:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   31578:	add	x24, x0, x24
   3157c:	add	x22, x22, #0xb09
   31580:	mov	w23, #0x20                  	// #32
   31584:	ldr	x1, [x19, #256]
   31588:	b	315ac <__asan_backtrace_create_state@@Base+0x501c>
   3158c:	mov	x0, x1
   31590:	add	x1, x1, #0x1
   31594:	str	x1, [x19, #256]
   31598:	cmp	x22, x24
   3159c:	strb	w23, [x19, x0]
   315a0:	strb	w23, [x19, #264]
   315a4:	b.eq	3178c <__asan_backtrace_create_state@@Base+0x51fc>  // b.none
   315a8:	ldrb	w23, [x22], #1
   315ac:	cmp	x1, #0xff
   315b0:	b.ne	3158c <__asan_backtrace_create_state@@Base+0x4ffc>  // b.any
   315b4:	ldp	x3, x2, [x19, #272]
   315b8:	strb	wzr, [x19, #255]
   315bc:	mov	x0, x19
   315c0:	blr	x3
   315c4:	ldr	x2, [x19, #320]
   315c8:	mov	x1, #0x1                   	// #1
   315cc:	mov	x0, #0x0                   	// #0
   315d0:	add	x2, x2, x1
   315d4:	str	x2, [x19, #320]
   315d8:	b	31594 <__asan_backtrace_create_state@@Base+0x5004>
   315dc:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   315e0:	add	x22, x22, #0xb28
   315e4:	mov	x0, x22
   315e8:	bl	67e0 <__asan_internal_strlen@plt>
   315ec:	cbz	x0, 31254 <__asan_backtrace_create_state@@Base+0x4cc4>
   315f0:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   315f4:	add	x22, x0, x22
   315f8:	add	x20, x20, #0xb29
   315fc:	mov	w21, #0x63                  	// #99
   31600:	ldr	x1, [x19, #256]
   31604:	b	31628 <__asan_backtrace_create_state@@Base+0x5098>
   31608:	mov	x0, x1
   3160c:	add	x1, x1, #0x1
   31610:	str	x1, [x19, #256]
   31614:	cmp	x22, x20
   31618:	strb	w21, [x19, x0]
   3161c:	strb	w21, [x19, #264]
   31620:	b.eq	31254 <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   31624:	ldrb	w21, [x20], #1
   31628:	cmp	x1, #0xff
   3162c:	b.ne	31608 <__asan_backtrace_create_state@@Base+0x5078>  // b.any
   31630:	ldp	x3, x2, [x19, #272]
   31634:	strb	wzr, [x19, #255]
   31638:	mov	x0, x19
   3163c:	blr	x3
   31640:	ldr	x2, [x19, #320]
   31644:	mov	x1, #0x1                   	// #1
   31648:	mov	x0, #0x0                   	// #0
   3164c:	add	x2, x2, x1
   31650:	str	x2, [x19, #320]
   31654:	b	31610 <__asan_backtrace_create_state@@Base+0x5080>
   31658:	ldr	x2, [x2, #8]
   3165c:	b	31068 <__asan_backtrace_create_state@@Base+0x4ad8>
   31660:	stp	x23, x24, [sp, #48]
   31664:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   31668:	add	x24, x24, #0xb18
   3166c:	mov	x0, x24
   31670:	bl	67e0 <__asan_internal_strlen@plt>
   31674:	cbz	x0, 3178c <__asan_backtrace_create_state@@Base+0x51fc>
   31678:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   3167c:	add	x24, x0, x24
   31680:	add	x22, x22, #0xb19
   31684:	mov	w23, #0x20                  	// #32
   31688:	ldr	x1, [x19, #256]
   3168c:	b	316b0 <__asan_backtrace_create_state@@Base+0x5120>
   31690:	mov	x0, x1
   31694:	add	x1, x1, #0x1
   31698:	str	x1, [x19, #256]
   3169c:	cmp	x24, x22
   316a0:	strb	w23, [x19, x0]
   316a4:	strb	w23, [x19, #264]
   316a8:	b.eq	3178c <__asan_backtrace_create_state@@Base+0x51fc>  // b.none
   316ac:	ldrb	w23, [x22], #1
   316b0:	cmp	x1, #0xff
   316b4:	b.ne	31690 <__asan_backtrace_create_state@@Base+0x5100>  // b.any
   316b8:	ldp	x3, x2, [x19, #272]
   316bc:	strb	wzr, [x19, #255]
   316c0:	mov	x0, x19
   316c4:	blr	x3
   316c8:	ldr	x2, [x19, #320]
   316cc:	mov	x1, #0x1                   	// #1
   316d0:	mov	x0, #0x0                   	// #0
   316d4:	add	x2, x2, x1
   316d8:	str	x2, [x19, #320]
   316dc:	b	31698 <__asan_backtrace_create_state@@Base+0x5108>
   316e0:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   316e4:	add	x22, x22, #0xb38
   316e8:	mov	x0, x22
   316ec:	bl	67e0 <__asan_internal_strlen@plt>
   316f0:	cbz	x0, 31254 <__asan_backtrace_create_state@@Base+0x4cc4>
   316f4:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   316f8:	add	x22, x0, x22
   316fc:	add	x20, x20, #0xb39
   31700:	mov	w21, #0x69                  	// #105
   31704:	ldr	x1, [x19, #256]
   31708:	b	3172c <__asan_backtrace_create_state@@Base+0x519c>
   3170c:	mov	x0, x1
   31710:	add	x1, x1, #0x1
   31714:	str	x1, [x19, #256]
   31718:	cmp	x22, x20
   3171c:	strb	w21, [x19, x0]
   31720:	strb	w21, [x19, #264]
   31724:	b.eq	31254 <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   31728:	ldrb	w21, [x20], #1
   3172c:	cmp	x1, #0xff
   31730:	b.ne	3170c <__asan_backtrace_create_state@@Base+0x517c>  // b.any
   31734:	ldp	x3, x2, [x19, #272]
   31738:	strb	wzr, [x19, #255]
   3173c:	mov	x0, x19
   31740:	blr	x3
   31744:	ldr	x2, [x19, #320]
   31748:	mov	x1, #0x1                   	// #1
   3174c:	mov	x0, #0x0                   	// #0
   31750:	add	x2, x2, x1
   31754:	str	x2, [x19, #320]
   31758:	b	31714 <__asan_backtrace_create_state@@Base+0x5184>
   3175c:	ldr	x1, [x19, #256]
   31760:	cmp	x1, #0xff
   31764:	b.eq	31848 <__asan_backtrace_create_state@@Base+0x52b8>  // b.none
   31768:	add	x0, x1, #0x1
   3176c:	str	x0, [x19, #256]
   31770:	mov	w0, #0x26                  	// #38
   31774:	strb	w0, [x19, x1]
   31778:	strb	w0, [x19, #264]
   3177c:	ldp	x19, x20, [sp, #16]
   31780:	ldp	x21, x22, [sp, #32]
   31784:	ldp	x29, x30, [sp], #64
   31788:	ret
   3178c:	ldr	x2, [x20, #16]
   31790:	cbz	x2, 318c8 <__asan_backtrace_create_state@@Base+0x5338>
   31794:	ldr	x1, [x19, #256]
   31798:	add	x0, x1, #0x1
   3179c:	cmp	x1, #0xff
   317a0:	b.ne	317cc <__asan_backtrace_create_state@@Base+0x523c>  // b.any
   317a4:	ldp	x3, x2, [x19, #272]
   317a8:	strb	wzr, [x19, #255]
   317ac:	mov	x0, x19
   317b0:	blr	x3
   317b4:	ldr	x3, [x19, #320]
   317b8:	mov	x0, #0x1                   	// #1
   317bc:	mov	x1, #0x0                   	// #0
   317c0:	add	x3, x3, x0
   317c4:	ldr	x2, [x20, #16]
   317c8:	str	x3, [x19, #320]
   317cc:	str	x0, [x19, #256]
   317d0:	mov	w0, #0x28                  	// #40
   317d4:	strb	w0, [x19, x1]
   317d8:	strb	w0, [x19, #264]
   317dc:	mov	w1, w21
   317e0:	mov	x0, x19
   317e4:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   317e8:	ldr	x1, [x19, #256]
   317ec:	add	x0, x1, #0x1
   317f0:	cmp	x1, #0xff
   317f4:	b.ne	3181c <__asan_backtrace_create_state@@Base+0x528c>  // b.any
   317f8:	ldp	x3, x2, [x19, #272]
   317fc:	strb	wzr, [x19, #255]
   31800:	mov	x0, x19
   31804:	blr	x3
   31808:	ldr	x2, [x19, #320]
   3180c:	mov	x0, #0x1                   	// #1
   31810:	mov	x1, #0x0                   	// #0
   31814:	add	x2, x2, x0
   31818:	str	x2, [x19, #320]
   3181c:	str	x0, [x19, #256]
   31820:	mov	w0, #0x29                  	// #41
   31824:	strb	w0, [x19, x1]
   31828:	strb	w0, [x19, #264]
   3182c:	ldp	x19, x20, [sp, #16]
   31830:	ldp	x21, x22, [sp, #32]
   31834:	ldp	x23, x24, [sp, #48]
   31838:	ldp	x29, x30, [sp], #64
   3183c:	ret
   31840:	ldr	x2, [x20, #8]
   31844:	b	317dc <__asan_backtrace_create_state@@Base+0x524c>
   31848:	ldp	x3, x2, [x19, #272]
   3184c:	strb	wzr, [x19, #255]
   31850:	mov	x0, x19
   31854:	blr	x3
   31858:	ldr	x2, [x19, #320]
   3185c:	mov	x0, #0x1                   	// #1
   31860:	mov	x1, #0x0                   	// #0
   31864:	add	x2, x2, x0
   31868:	str	x2, [x19, #320]
   3186c:	b	3176c <__asan_backtrace_create_state@@Base+0x51dc>
   31870:	ldp	x3, x2, [x19, #272]
   31874:	strb	wzr, [x19, #255]
   31878:	mov	x0, x19
   3187c:	blr	x3
   31880:	ldr	x2, [x19, #320]
   31884:	mov	x0, #0x1                   	// #1
   31888:	mov	x1, #0x0                   	// #0
   3188c:	add	x2, x2, x0
   31890:	str	x2, [x19, #320]
   31894:	b	31358 <__asan_backtrace_create_state@@Base+0x4dc8>
   31898:	ldp	x3, x2, [x19, #272]
   3189c:	strb	wzr, [x19, #255]
   318a0:	mov	x1, x0
   318a4:	mov	x0, x19
   318a8:	blr	x3
   318ac:	ldr	x0, [x19, #320]
   318b0:	mov	w2, #0x20                  	// #32
   318b4:	mov	x1, #0x1                   	// #1
   318b8:	strb	w2, [x19]
   318bc:	add	x0, x0, x1
   318c0:	str	x0, [x19, #320]
   318c4:	b	31768 <__asan_backtrace_create_state@@Base+0x51d8>
   318c8:	ldp	x23, x24, [sp, #48]
   318cc:	b	31254 <__asan_backtrace_create_state@@Base+0x4cc4>
   318d0:	stp	x29, x30, [sp, #-64]!
   318d4:	mov	x29, sp
   318d8:	stp	x19, x20, [sp, #16]
   318dc:	mov	x19, x0
   318e0:	mov	x20, x3
   318e4:	stp	x21, x22, [sp, #32]
   318e8:	mov	x21, x2
   318ec:	stp	x23, x24, [sp, #48]
   318f0:	mov	w23, w1
   318f4:	cbz	x3, 31938 <__asan_backtrace_create_state@@Base+0x53a8>
   318f8:	mov	x2, #0xe000000             	// #234881024
   318fc:	mov	x4, #0x1                   	// #1
   31900:	movk	x2, #0x862, lsl #32
   31904:	ldr	w0, [x3, #16]
   31908:	cbnz	w0, 31938 <__asan_backtrace_create_state@@Base+0x53a8>
   3190c:	ldr	x0, [x3, #8]
   31910:	ldr	w0, [x0]
   31914:	cmp	w0, #0x2b
   31918:	b.hi	31930 <__asan_backtrace_create_state@@Base+0x53a0>  // b.pmore
   3191c:	lsl	x0, x4, x0
   31920:	tst	x0, x2
   31924:	b.ne	31a00 <__asan_backtrace_create_state@@Base+0x5470>  // b.any
   31928:	tst	x0, #0x1c00000000
   3192c:	b.ne	31acc <__asan_backtrace_create_state@@Base+0x553c>  // b.any
   31930:	ldr	x3, [x3]
   31934:	cbnz	x3, 31904 <__asan_backtrace_create_state@@Base+0x5374>
   31938:	ldr	x22, [x19, #296]
   3193c:	str	xzr, [x19, #296]
   31940:	mov	w1, w23
   31944:	mov	x2, x20
   31948:	mov	x0, x19
   3194c:	mov	w3, #0x0                   	// #0
   31950:	bl	31b80 <__asan_backtrace_create_state@@Base+0x55f0>
   31954:	ldr	x1, [x19, #256]
   31958:	cmp	x1, #0xff
   3195c:	b.eq	31a90 <__asan_backtrace_create_state@@Base+0x5500>  // b.none
   31960:	add	x0, x1, #0x1
   31964:	str	x0, [x19, #256]
   31968:	mov	w2, #0x28                  	// #40
   3196c:	strb	w2, [x19, x1]
   31970:	strb	w2, [x19, #264]
   31974:	ldr	x2, [x21]
   31978:	cbz	x2, 3198c <__asan_backtrace_create_state@@Base+0x53fc>
   3197c:	mov	x0, x19
   31980:	mov	w1, w23
   31984:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   31988:	ldr	x0, [x19, #256]
   3198c:	cmp	x0, #0xff
   31990:	b.eq	319d4 <__asan_backtrace_create_state@@Base+0x5444>  // b.none
   31994:	add	x1, x0, #0x1
   31998:	str	x1, [x19, #256]
   3199c:	mov	w3, #0x29                  	// #41
   319a0:	strb	w3, [x19, x0]
   319a4:	mov	x2, x20
   319a8:	strb	w3, [x19, #264]
   319ac:	mov	w1, w23
   319b0:	mov	x0, x19
   319b4:	mov	w3, #0x1                   	// #1
   319b8:	bl	31b80 <__asan_backtrace_create_state@@Base+0x55f0>
   319bc:	ldp	x23, x24, [sp, #48]
   319c0:	str	x22, [x19, #296]
   319c4:	ldp	x19, x20, [sp, #16]
   319c8:	ldp	x21, x22, [sp, #32]
   319cc:	ldp	x29, x30, [sp], #64
   319d0:	ret
   319d4:	ldp	x3, x2, [x19, #272]
   319d8:	strb	wzr, [x19, #255]
   319dc:	mov	x1, x0
   319e0:	mov	x0, x19
   319e4:	blr	x3
   319e8:	ldr	x2, [x19, #320]
   319ec:	mov	x1, #0x1                   	// #1
   319f0:	mov	x0, #0x0                   	// #0
   319f4:	add	x2, x2, x1
   319f8:	str	x2, [x19, #320]
   319fc:	b	31998 <__asan_backtrace_create_state@@Base+0x5408>
   31a00:	ldrb	w0, [x19, #264]
   31a04:	ldr	x1, [x19, #256]
   31a08:	cmp	w0, #0x20
   31a0c:	b.eq	31a30 <__asan_backtrace_create_state@@Base+0x54a0>  // b.none
   31a10:	cmp	x1, #0xff
   31a14:	b.eq	31b10 <__asan_backtrace_create_state@@Base+0x5580>  // b.none
   31a18:	add	x2, x1, #0x1
   31a1c:	str	x2, [x19, #256]
   31a20:	mov	w0, #0x20                  	// #32
   31a24:	strb	w0, [x19, x1]
   31a28:	mov	x1, x2
   31a2c:	strb	w0, [x19, #264]
   31a30:	cmp	x1, #0xff
   31a34:	b.eq	31ae8 <__asan_backtrace_create_state@@Base+0x5558>  // b.none
   31a38:	add	x0, x1, #0x1
   31a3c:	str	x0, [x19, #256]
   31a40:	mov	w24, #0x28                  	// #40
   31a44:	strb	w24, [x19, x1]
   31a48:	mov	x0, x19
   31a4c:	strb	w24, [x19, #264]
   31a50:	mov	x2, x20
   31a54:	ldr	x22, [x19, #296]
   31a58:	str	xzr, [x19, #296]
   31a5c:	mov	w1, w23
   31a60:	mov	w3, #0x0                   	// #0
   31a64:	bl	31b80 <__asan_backtrace_create_state@@Base+0x55f0>
   31a68:	ldr	x0, [x19, #256]
   31a6c:	cmp	x0, #0xff
   31a70:	b.eq	31b3c <__asan_backtrace_create_state@@Base+0x55ac>  // b.none
   31a74:	add	x1, x0, #0x1
   31a78:	str	x1, [x19, #256]
   31a7c:	mov	w2, #0x29                  	// #41
   31a80:	strb	w2, [x19, x0]
   31a84:	strb	w2, [x19, #264]
   31a88:	cmp	x1, #0xff
   31a8c:	b.ne	31960 <__asan_backtrace_create_state@@Base+0x53d0>  // b.any
   31a90:	ldp	x3, x2, [x19, #272]
   31a94:	strb	wzr, [x19, #255]
   31a98:	mov	x0, x19
   31a9c:	blr	x3
   31aa0:	mov	w1, #0x28                  	// #40
   31aa4:	strb	w1, [x19]
   31aa8:	strb	w1, [x19, #264]
   31aac:	mov	x0, #0x1                   	// #1
   31ab0:	ldr	x1, [x19, #320]
   31ab4:	ldr	x2, [x21]
   31ab8:	add	x1, x1, x0
   31abc:	str	x0, [x19, #256]
   31ac0:	str	x1, [x19, #320]
   31ac4:	cbnz	x2, 3197c <__asan_backtrace_create_state@@Base+0x53ec>
   31ac8:	b	31994 <__asan_backtrace_create_state@@Base+0x5404>
   31acc:	ldrb	w0, [x19, #264]
   31ad0:	ldr	x1, [x19, #256]
   31ad4:	and	w2, w0, #0xfffffffd
   31ad8:	cmp	w2, #0x28
   31adc:	b.ne	31a08 <__asan_backtrace_create_state@@Base+0x5478>  // b.any
   31ae0:	cmp	x1, #0xff
   31ae4:	b.ne	31a38 <__asan_backtrace_create_state@@Base+0x54a8>  // b.any
   31ae8:	ldp	x3, x2, [x19, #272]
   31aec:	strb	wzr, [x19, #255]
   31af0:	mov	x0, x19
   31af4:	blr	x3
   31af8:	ldr	x2, [x19, #320]
   31afc:	mov	x0, #0x1                   	// #1
   31b00:	mov	x1, #0x0                   	// #0
   31b04:	add	x2, x2, x0
   31b08:	str	x2, [x19, #320]
   31b0c:	b	31a3c <__asan_backtrace_create_state@@Base+0x54ac>
   31b10:	ldp	x3, x2, [x19, #272]
   31b14:	strb	wzr, [x19, #255]
   31b18:	mov	x0, x19
   31b1c:	blr	x3
   31b20:	ldr	x0, [x19, #320]
   31b24:	mov	w2, #0x20                  	// #32
   31b28:	mov	x1, #0x1                   	// #1
   31b2c:	strb	w2, [x19]
   31b30:	add	x0, x0, x1
   31b34:	str	x0, [x19, #320]
   31b38:	b	31a38 <__asan_backtrace_create_state@@Base+0x54a8>
   31b3c:	ldp	x3, x2, [x19, #272]
   31b40:	strb	wzr, [x19, #255]
   31b44:	mov	x1, x0
   31b48:	mov	x0, x19
   31b4c:	blr	x3
   31b50:	strb	w24, [x19, #264]
   31b54:	mov	w0, #0x2829                	// #10281
   31b58:	strh	w0, [x19]
   31b5c:	ldr	x1, [x19, #320]
   31b60:	mov	x0, #0x2                   	// #2
   31b64:	ldr	x2, [x21]
   31b68:	add	x1, x1, #0x1
   31b6c:	str	x0, [x19, #256]
   31b70:	str	x1, [x19, #320]
   31b74:	cbnz	x2, 3197c <__asan_backtrace_create_state@@Base+0x53ec>
   31b78:	b	31994 <__asan_backtrace_create_state@@Base+0x5404>
   31b7c:	nop
   31b80:	cbz	x2, 31dfc <__asan_backtrace_create_state@@Base+0x586c>
   31b84:	stp	x29, x30, [sp, #-112]!
   31b88:	mov	x29, sp
   31b8c:	stp	x23, x24, [sp, #48]
   31b90:	mov	x24, #0x1f                  	// #31
   31b94:	movk	x24, #0x1a, lsl #48
   31b98:	stp	x19, x20, [sp, #16]
   31b9c:	mov	w20, w1
   31ba0:	mov	x19, x2
   31ba4:	stp	x21, x22, [sp, #32]
   31ba8:	mov	w21, w3
   31bac:	mov	w22, #0x1                   	// #1
   31bb0:	stp	x25, x26, [sp, #64]
   31bb4:	mov	x26, x0
   31bb8:	mov	x25, #0x1                   	// #1
   31bbc:	b	31c00 <__asan_backtrace_create_state@@Base+0x5670>
   31bc0:	ldr	x1, [x19, #24]
   31bc4:	cmp	w5, #0x29
   31bc8:	ldr	x23, [x26, #288]
   31bcc:	str	w22, [x19, #16]
   31bd0:	str	x1, [x26, #288]
   31bd4:	b.eq	31c4c <__asan_backtrace_create_state@@Base+0x56bc>  // b.none
   31bd8:	cmp	w5, #0x2a
   31bdc:	b.eq	31c7c <__asan_backtrace_create_state@@Base+0x56ec>  // b.none
   31be0:	cmp	w5, #0x2
   31be4:	b.eq	31cac <__asan_backtrace_create_state@@Base+0x571c>  // b.none
   31be8:	mov	w1, w20
   31bec:	mov	x0, x26
   31bf0:	bl	31038 <__asan_backtrace_create_state@@Base+0x4aa8>
   31bf4:	str	x23, [x26, #288]
   31bf8:	ldr	x19, [x19]
   31bfc:	cbz	x19, 31c64 <__asan_backtrace_create_state@@Base+0x56d4>
   31c00:	ldr	w2, [x26, #304]
   31c04:	cbnz	w2, 31c64 <__asan_backtrace_create_state@@Base+0x56d4>
   31c08:	ldr	w2, [x19, #16]
   31c0c:	cbnz	w2, 31bf8 <__asan_backtrace_create_state@@Base+0x5668>
   31c10:	ldr	x2, [x19, #8]
   31c14:	ldr	w5, [x2]
   31c18:	cbnz	w21, 31bc0 <__asan_backtrace_create_state@@Base+0x5630>
   31c1c:	sub	w4, w5, #0x1c
   31c20:	cmp	w4, #0x34
   31c24:	b.hi	31bc0 <__asan_backtrace_create_state@@Base+0x5630>  // b.pmore
   31c28:	lsl	x4, x25, x4
   31c2c:	tst	x4, x24
   31c30:	b.ne	31bf8 <__asan_backtrace_create_state@@Base+0x5668>  // b.any
   31c34:	ldr	x1, [x19, #24]
   31c38:	cmp	w5, #0x29
   31c3c:	ldr	x23, [x26, #288]
   31c40:	str	w22, [x19, #16]
   31c44:	str	x1, [x26, #288]
   31c48:	b.ne	31bd8 <__asan_backtrace_create_state@@Base+0x5648>  // b.any
   31c4c:	ldr	x3, [x19]
   31c50:	add	x2, x2, #0x10
   31c54:	mov	w1, w20
   31c58:	mov	x0, x26
   31c5c:	bl	318d0 <__asan_backtrace_create_state@@Base+0x5340>
   31c60:	str	x23, [x26, #288]
   31c64:	ldp	x19, x20, [sp, #16]
   31c68:	ldp	x21, x22, [sp, #32]
   31c6c:	ldp	x23, x24, [sp, #48]
   31c70:	ldp	x25, x26, [sp, #64]
   31c74:	ldp	x29, x30, [sp], #112
   31c78:	ret
   31c7c:	ldr	x3, [x19]
   31c80:	mov	w1, w20
   31c84:	mov	x0, x26
   31c88:	add	x2, x2, #0x8
   31c8c:	bl	31f90 <__asan_backtrace_create_state@@Base+0x5a00>
   31c90:	str	x23, [x26, #288]
   31c94:	ldp	x19, x20, [sp, #16]
   31c98:	ldp	x21, x22, [sp, #32]
   31c9c:	ldp	x23, x24, [sp, #48]
   31ca0:	ldp	x25, x26, [sp, #64]
   31ca4:	ldp	x29, x30, [sp], #112
   31ca8:	ret
   31cac:	ldr	x2, [x2, #8]
   31cb0:	mov	w1, w20
   31cb4:	ldr	x21, [x26, #296]
   31cb8:	str	xzr, [x26, #296]
   31cbc:	mov	x0, x26
   31cc0:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   31cc4:	str	x21, [x26, #296]
   31cc8:	tbz	w20, #2, 31d80 <__asan_backtrace_create_state@@Base+0x57f0>
   31ccc:	ldr	x1, [x26, #256]
   31cd0:	add	x0, x1, #0x1
   31cd4:	cmp	x1, #0xff
   31cd8:	b.ne	31d00 <__asan_backtrace_create_state@@Base+0x5770>  // b.any
   31cdc:	ldp	x3, x2, [x26, #272]
   31ce0:	strb	wzr, [x26, #255]
   31ce4:	mov	x0, x26
   31ce8:	blr	x3
   31cec:	ldr	x2, [x26, #320]
   31cf0:	mov	x0, #0x1                   	// #1
   31cf4:	mov	x1, #0x0                   	// #0
   31cf8:	add	x2, x2, x0
   31cfc:	str	x2, [x26, #320]
   31d00:	str	x0, [x26, #256]
   31d04:	mov	w0, #0x2e                  	// #46
   31d08:	strb	w0, [x26, x1]
   31d0c:	strb	w0, [x26, #264]
   31d10:	ldr	x0, [x19, #8]
   31d14:	ldr	x21, [x0, #16]
   31d18:	ldr	w2, [x21]
   31d1c:	cmp	w2, #0x47
   31d20:	b.eq	31e00 <__asan_backtrace_create_state@@Base+0x5870>  // b.none
   31d24:	mov	x1, #0x1f                  	// #31
   31d28:	mov	x3, #0x1                   	// #1
   31d2c:	movk	x1, #0x1a, lsl #48
   31d30:	sub	w2, w2, #0x1c
   31d34:	cmp	w2, #0x34
   31d38:	b.hi	31d48 <__asan_backtrace_create_state@@Base+0x57b8>  // b.pmore
   31d3c:	lsl	x2, x3, x2
   31d40:	tst	x2, x1
   31d44:	b.ne	31d74 <__asan_backtrace_create_state@@Base+0x57e4>  // b.any
   31d48:	mov	x2, x21
   31d4c:	mov	w1, w20
   31d50:	mov	x0, x26
   31d54:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   31d58:	str	x23, [x26, #288]
   31d5c:	ldp	x19, x20, [sp, #16]
   31d60:	ldp	x21, x22, [sp, #32]
   31d64:	ldp	x23, x24, [sp, #48]
   31d68:	ldp	x25, x26, [sp, #64]
   31d6c:	ldp	x29, x30, [sp], #112
   31d70:	ret
   31d74:	ldr	x21, [x21, #8]
   31d78:	ldr	w2, [x21]
   31d7c:	b	31d30 <__asan_backtrace_create_state@@Base+0x57a0>
   31d80:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   31d84:	add	x21, x21, #0x780
   31d88:	mov	x0, x21
   31d8c:	bl	67e0 <__asan_internal_strlen@plt>
   31d90:	cbz	x0, 31d10 <__asan_backtrace_create_state@@Base+0x5780>
   31d94:	add	x24, x0, x21
   31d98:	mov	w22, #0x3a                  	// #58
   31d9c:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   31da0:	add	x21, x21, #0x781
   31da4:	ldr	x1, [x26, #256]
   31da8:	b	31dcc <__asan_backtrace_create_state@@Base+0x583c>
   31dac:	mov	x0, x1
   31db0:	add	x1, x1, #0x1
   31db4:	str	x1, [x26, #256]
   31db8:	cmp	x21, x24
   31dbc:	strb	w22, [x26, x0]
   31dc0:	strb	w22, [x26, #264]
   31dc4:	b.eq	31d10 <__asan_backtrace_create_state@@Base+0x5780>  // b.none
   31dc8:	ldrb	w22, [x21], #1
   31dcc:	cmp	x1, #0xff
   31dd0:	b.ne	31dac <__asan_backtrace_create_state@@Base+0x581c>  // b.any
   31dd4:	ldp	x3, x2, [x26, #272]
   31dd8:	strb	wzr, [x26, #255]
   31ddc:	mov	x0, x26
   31de0:	blr	x3
   31de4:	ldr	x2, [x26, #320]
   31de8:	mov	x1, #0x1                   	// #1
   31dec:	mov	x0, #0x0                   	// #0
   31df0:	add	x2, x2, x1
   31df4:	str	x2, [x26, #320]
   31df8:	b	31db4 <__asan_backtrace_create_state@@Base+0x5824>
   31dfc:	ret
   31e00:	adrp	x19, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   31e04:	add	x19, x19, #0x788
   31e08:	mov	x0, x19
   31e0c:	bl	67e0 <__asan_internal_strlen@plt>
   31e10:	cbz	x0, 31e7c <__asan_backtrace_create_state@@Base+0x58ec>
   31e14:	add	x24, x0, x19
   31e18:	mov	w22, #0x7b                  	// #123
   31e1c:	adrp	x19, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   31e20:	add	x19, x19, #0x789
   31e24:	ldr	x1, [x26, #256]
   31e28:	b	31e4c <__asan_backtrace_create_state@@Base+0x58bc>
   31e2c:	mov	x0, x1
   31e30:	add	x1, x1, #0x1
   31e34:	str	x1, [x26, #256]
   31e38:	cmp	x24, x19
   31e3c:	strb	w22, [x26, x0]
   31e40:	strb	w22, [x26, #264]
   31e44:	b.eq	31e7c <__asan_backtrace_create_state@@Base+0x58ec>  // b.none
   31e48:	ldrb	w22, [x19], #1
   31e4c:	cmp	x1, #0xff
   31e50:	b.ne	31e2c <__asan_backtrace_create_state@@Base+0x589c>  // b.any
   31e54:	ldp	x3, x2, [x26, #272]
   31e58:	strb	wzr, [x26, #255]
   31e5c:	mov	x0, x26
   31e60:	blr	x3
   31e64:	ldr	x2, [x26, #320]
   31e68:	mov	x1, #0x1                   	// #1
   31e6c:	mov	x0, #0x0                   	// #0
   31e70:	add	x2, x2, x1
   31e74:	str	x2, [x26, #320]
   31e78:	b	31e34 <__asan_backtrace_create_state@@Base+0x58a4>
   31e7c:	ldr	w2, [x21, #16]
   31e80:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x6028>
   31e84:	add	x1, x1, #0xc30
   31e88:	add	x19, sp, #0x50
   31e8c:	add	w2, w2, #0x1
   31e90:	mov	x0, x19
   31e94:	bl	6900 <sprintf@plt>
   31e98:	mov	x0, x19
   31e9c:	bl	67e0 <__asan_internal_strlen@plt>
   31ea0:	cbz	x0, 31f04 <__asan_backtrace_create_state@@Base+0x5974>
   31ea4:	add	x24, x19, x0
   31ea8:	ldr	x1, [x26, #256]
   31eac:	b	31ed0 <__asan_backtrace_create_state@@Base+0x5940>
   31eb0:	mov	x0, x1
   31eb4:	add	x1, x1, #0x1
   31eb8:	str	x1, [x26, #256]
   31ebc:	add	x19, x19, #0x1
   31ec0:	strb	w22, [x26, x0]
   31ec4:	cmp	x24, x19
   31ec8:	strb	w22, [x26, #264]
   31ecc:	b.eq	31f04 <__asan_backtrace_create_state@@Base+0x5974>  // b.none
   31ed0:	ldrb	w22, [x19]
   31ed4:	cmp	x1, #0xff
   31ed8:	b.ne	31eb0 <__asan_backtrace_create_state@@Base+0x5920>  // b.any
   31edc:	ldp	x3, x2, [x26, #272]
   31ee0:	strb	wzr, [x26, #255]
   31ee4:	mov	x0, x26
   31ee8:	blr	x3
   31eec:	ldr	x2, [x26, #320]
   31ef0:	mov	x1, #0x1                   	// #1
   31ef4:	mov	x0, #0x0                   	// #0
   31ef8:	add	x2, x2, x1
   31efc:	str	x2, [x26, #320]
   31f00:	b	31eb8 <__asan_backtrace_create_state@@Base+0x5928>
   31f04:	adrp	x19, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   31f08:	add	x19, x19, #0x798
   31f0c:	mov	x0, x19
   31f10:	bl	67e0 <__asan_internal_strlen@plt>
   31f14:	cbz	x0, 31f80 <__asan_backtrace_create_state@@Base+0x59f0>
   31f18:	add	x24, x0, x19
   31f1c:	mov	w22, #0x7d                  	// #125
   31f20:	adrp	x19, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   31f24:	add	x19, x19, #0x799
   31f28:	ldr	x1, [x26, #256]
   31f2c:	b	31f50 <__asan_backtrace_create_state@@Base+0x59c0>
   31f30:	mov	x0, x1
   31f34:	add	x1, x1, #0x1
   31f38:	str	x1, [x26, #256]
   31f3c:	cmp	x24, x19
   31f40:	strb	w22, [x26, x0]
   31f44:	strb	w22, [x26, #264]
   31f48:	b.eq	31f80 <__asan_backtrace_create_state@@Base+0x59f0>  // b.none
   31f4c:	ldrb	w22, [x19], #1
   31f50:	cmp	x1, #0xff
   31f54:	b.ne	31f30 <__asan_backtrace_create_state@@Base+0x59a0>  // b.any
   31f58:	ldp	x3, x2, [x26, #272]
   31f5c:	strb	wzr, [x26, #255]
   31f60:	mov	x0, x26
   31f64:	blr	x3
   31f68:	ldr	x2, [x26, #320]
   31f6c:	mov	x1, #0x1                   	// #1
   31f70:	mov	x0, #0x0                   	// #0
   31f74:	add	x2, x2, x1
   31f78:	str	x2, [x26, #320]
   31f7c:	b	31f38 <__asan_backtrace_create_state@@Base+0x59a8>
   31f80:	ldr	x21, [x21, #8]
   31f84:	ldr	w2, [x21]
   31f88:	b	31d24 <__asan_backtrace_create_state@@Base+0x5794>
   31f8c:	nop
   31f90:	stp	x29, x30, [sp, #-80]!
   31f94:	mov	x29, sp
   31f98:	stp	x19, x20, [sp, #16]
   31f9c:	mov	x19, x0
   31fa0:	mov	x20, x3
   31fa4:	stp	x21, x22, [sp, #32]
   31fa8:	mov	x0, x3
   31fac:	mov	w21, w1
   31fb0:	mov	x22, x2
   31fb4:	cbz	x3, 31fdc <__asan_backtrace_create_state@@Base+0x5a4c>
   31fb8:	ldr	w4, [x0, #16]
   31fbc:	cbz	w4, 320e0 <__asan_backtrace_create_state@@Base+0x5b50>
   31fc0:	ldr	x0, [x0]
   31fc4:	cbnz	x0, 31fb8 <__asan_backtrace_create_state@@Base+0x5a28>
   31fc8:	mov	x2, x20
   31fcc:	mov	w1, w21
   31fd0:	mov	x0, x19
   31fd4:	mov	w3, #0x0                   	// #0
   31fd8:	bl	31b80 <__asan_backtrace_create_state@@Base+0x55f0>
   31fdc:	ldr	x0, [x19, #256]
   31fe0:	cmp	x0, #0xff
   31fe4:	b.eq	3210c <__asan_backtrace_create_state@@Base+0x5b7c>  // b.none
   31fe8:	add	x1, x0, #0x1
   31fec:	str	x1, [x19, #256]
   31ff0:	mov	w2, #0x20                  	// #32
   31ff4:	strb	w2, [x19, x0]
   31ff8:	strb	w2, [x19, #264]
   31ffc:	cmp	x1, #0xff
   32000:	b.eq	320a4 <__asan_backtrace_create_state@@Base+0x5b14>  // b.none
   32004:	add	x0, x1, #0x1
   32008:	str	x0, [x19, #256]
   3200c:	mov	w2, #0x5b                  	// #91
   32010:	strb	w2, [x19, x1]
   32014:	strb	w2, [x19, #264]
   32018:	ldr	x2, [x22]
   3201c:	cbz	x2, 32030 <__asan_backtrace_create_state@@Base+0x5aa0>
   32020:	mov	x0, x19
   32024:	mov	w1, w21
   32028:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   3202c:	ldr	x0, [x19, #256]
   32030:	cmp	x0, #0xff
   32034:	b.eq	3205c <__asan_backtrace_create_state@@Base+0x5acc>  // b.none
   32038:	add	x1, x0, #0x1
   3203c:	str	x1, [x19, #256]
   32040:	mov	w1, #0x5d                  	// #93
   32044:	strb	w1, [x19, x0]
   32048:	strb	w1, [x19, #264]
   3204c:	ldp	x19, x20, [sp, #16]
   32050:	ldp	x21, x22, [sp, #32]
   32054:	ldp	x29, x30, [sp], #80
   32058:	ret
   3205c:	ldp	x3, x2, [x19, #272]
   32060:	strb	wzr, [x19, #255]
   32064:	mov	x1, x0
   32068:	mov	x0, x19
   3206c:	blr	x3
   32070:	ldr	x2, [x19, #320]
   32074:	mov	x0, #0x0                   	// #0
   32078:	mov	x1, #0x1                   	// #1
   3207c:	str	x1, [x19, #256]
   32080:	add	x2, x2, x1
   32084:	str	x2, [x19, #320]
   32088:	mov	w1, #0x5d                  	// #93
   3208c:	strb	w1, [x19, x0]
   32090:	strb	w1, [x19, #264]
   32094:	ldp	x19, x20, [sp, #16]
   32098:	ldp	x21, x22, [sp, #32]
   3209c:	ldp	x29, x30, [sp], #80
   320a0:	ret
   320a4:	ldp	x3, x2, [x19, #272]
   320a8:	strb	wzr, [x19, #255]
   320ac:	mov	x0, x19
   320b0:	blr	x3
   320b4:	mov	w1, #0x5b                  	// #91
   320b8:	strb	w1, [x19]
   320bc:	strb	w1, [x19, #264]
   320c0:	mov	x0, #0x1                   	// #1
   320c4:	ldr	x1, [x19, #320]
   320c8:	ldr	x2, [x22]
   320cc:	add	x1, x1, x0
   320d0:	str	x0, [x19, #256]
   320d4:	str	x1, [x19, #320]
   320d8:	cbnz	x2, 32020 <__asan_backtrace_create_state@@Base+0x5a90>
   320dc:	b	32038 <__asan_backtrace_create_state@@Base+0x5aa8>
   320e0:	ldr	x0, [x0, #8]
   320e4:	ldr	w0, [x0]
   320e8:	cmp	w0, #0x2a
   320ec:	b.ne	32150 <__asan_backtrace_create_state@@Base+0x5bc0>  // b.any
   320f0:	mov	w1, w21
   320f4:	mov	x2, x20
   320f8:	mov	x0, x19
   320fc:	mov	w3, #0x0                   	// #0
   32100:	bl	31b80 <__asan_backtrace_create_state@@Base+0x55f0>
   32104:	ldr	x1, [x19, #256]
   32108:	b	31ffc <__asan_backtrace_create_state@@Base+0x5a6c>
   3210c:	ldp	x3, x2, [x19, #272]
   32110:	strb	wzr, [x19, #255]
   32114:	mov	x1, x0
   32118:	mov	x0, x19
   3211c:	blr	x3
   32120:	mov	w1, #0x5b20                	// #23328
   32124:	mov	w0, #0x5b                  	// #91
   32128:	strh	w1, [x19]
   3212c:	strb	w0, [x19, #264]
   32130:	mov	x0, #0x2                   	// #2
   32134:	ldr	x1, [x19, #320]
   32138:	ldr	x2, [x22]
   3213c:	add	x1, x1, #0x1
   32140:	str	x0, [x19, #256]
   32144:	str	x1, [x19, #320]
   32148:	cbnz	x2, 32020 <__asan_backtrace_create_state@@Base+0x5a90>
   3214c:	b	32038 <__asan_backtrace_create_state@@Base+0x5aa8>
   32150:	str	x25, [sp, #64]
   32154:	adrp	x25, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   32158:	add	x25, x25, #0xa30
   3215c:	mov	x0, x25
   32160:	bl	67e0 <__asan_internal_strlen@plt>
   32164:	cbz	x0, 321e8 <__asan_backtrace_create_state@@Base+0x5c58>
   32168:	add	x25, x0, x25
   3216c:	stp	x23, x24, [sp, #48]
   32170:	adrp	x23, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   32174:	mov	w24, #0x20                  	// #32
   32178:	add	x23, x23, #0xa31
   3217c:	ldr	x1, [x19, #256]
   32180:	b	321a4 <__asan_backtrace_create_state@@Base+0x5c14>
   32184:	mov	x0, x1
   32188:	add	x1, x1, #0x1
   3218c:	str	x1, [x19, #256]
   32190:	cmp	x25, x23
   32194:	strb	w24, [x19, x0]
   32198:	strb	w24, [x19, #264]
   3219c:	b.eq	321e4 <__asan_backtrace_create_state@@Base+0x5c54>  // b.none
   321a0:	ldrb	w24, [x23], #1
   321a4:	cmp	x1, #0xff
   321a8:	b.ne	32184 <__asan_backtrace_create_state@@Base+0x5bf4>  // b.any
   321ac:	ldp	x3, x2, [x19, #272]
   321b0:	strb	wzr, [x19, #255]
   321b4:	mov	x0, x19
   321b8:	blr	x3
   321bc:	ldr	x2, [x19, #320]
   321c0:	mov	x0, #0x0                   	// #0
   321c4:	mov	x1, #0x1                   	// #1
   321c8:	str	x1, [x19, #256]
   321cc:	add	x2, x2, x1
   321d0:	str	x2, [x19, #320]
   321d4:	strb	w24, [x19, x0]
   321d8:	cmp	x25, x23
   321dc:	strb	w24, [x19, #264]
   321e0:	b.ne	321a0 <__asan_backtrace_create_state@@Base+0x5c10>  // b.any
   321e4:	ldp	x23, x24, [sp, #48]
   321e8:	mov	w1, w21
   321ec:	mov	x2, x20
   321f0:	mov	x0, x19
   321f4:	mov	w3, #0x0                   	// #0
   321f8:	bl	31b80 <__asan_backtrace_create_state@@Base+0x55f0>
   321fc:	ldr	x1, [x19, #256]
   32200:	cmp	x1, #0xff
   32204:	b.eq	32224 <__asan_backtrace_create_state@@Base+0x5c94>  // b.none
   32208:	add	x0, x1, #0x1
   3220c:	str	x0, [x19, #256]
   32210:	mov	w2, #0x29                  	// #41
   32214:	strb	w2, [x19, x1]
   32218:	strb	w2, [x19, #264]
   3221c:	ldr	x25, [sp, #64]
   32220:	b	31fe0 <__asan_backtrace_create_state@@Base+0x5a50>
   32224:	ldp	x3, x2, [x19, #272]
   32228:	strb	wzr, [x19, #255]
   3222c:	mov	x0, x19
   32230:	blr	x3
   32234:	ldr	x1, [x19, #320]
   32238:	mov	w2, #0x29                  	// #41
   3223c:	strb	w2, [x19]
   32240:	mov	x0, #0x1                   	// #1
   32244:	add	x1, x1, x0
   32248:	ldr	x25, [sp, #64]
   3224c:	str	x1, [x19, #320]
   32250:	b	31fe8 <__asan_backtrace_create_state@@Base+0x5a58>
   32254:	nop
   32258:	ldr	w4, [x2]
   3225c:	cmp	w4, #0x32
   32260:	b.eq	32268 <__asan_backtrace_create_state@@Base+0x5cd8>  // b.none
   32264:	b	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   32268:	stp	x29, x30, [sp, #-48]!
   3226c:	mov	x29, sp
   32270:	stp	x19, x20, [sp, #16]
   32274:	mov	x19, x0
   32278:	ldr	x0, [x2, #8]
   3227c:	stp	x21, x22, [sp, #32]
   32280:	ldrsw	x22, [x0, #16]
   32284:	ldr	x20, [x0, #8]
   32288:	cbz	x22, 32300 <__asan_backtrace_create_state@@Base+0x5d70>
   3228c:	add	x22, x20, x22
   32290:	ldr	x1, [x19, #256]
   32294:	b	322b8 <__asan_backtrace_create_state@@Base+0x5d28>
   32298:	mov	x2, x1
   3229c:	add	x1, x1, #0x1
   322a0:	str	x1, [x19, #256]
   322a4:	add	x20, x20, #0x1
   322a8:	cmp	x20, x22
   322ac:	strb	w21, [x19, x2]
   322b0:	strb	w21, [x19, #264]
   322b4:	b.eq	32300 <__asan_backtrace_create_state@@Base+0x5d70>  // b.none
   322b8:	ldrb	w21, [x20]
   322bc:	cmp	x1, #0xff
   322c0:	b.ne	32298 <__asan_backtrace_create_state@@Base+0x5d08>  // b.any
   322c4:	ldp	x3, x2, [x19, #272]
   322c8:	strb	wzr, [x19, #255]
   322cc:	mov	x0, x19
   322d0:	add	x20, x20, #0x1
   322d4:	blr	x3
   322d8:	ldr	x0, [x19, #320]
   322dc:	mov	x2, #0x0                   	// #0
   322e0:	mov	x1, #0x1                   	// #1
   322e4:	str	x1, [x19, #256]
   322e8:	add	x0, x0, x1
   322ec:	str	x0, [x19, #320]
   322f0:	strb	w21, [x19, x2]
   322f4:	cmp	x20, x22
   322f8:	strb	w21, [x19, #264]
   322fc:	b.ne	322b8 <__asan_backtrace_create_state@@Base+0x5d28>  // b.any
   32300:	ldp	x19, x20, [sp, #16]
   32304:	ldp	x21, x22, [sp, #32]
   32308:	ldp	x29, x30, [sp], #48
   3230c:	ret
   32310:	stp	x29, x30, [sp, #-48]!
   32314:	mov	x29, sp
   32318:	str	x21, [sp, #32]
   3231c:	mov	w21, w1
   32320:	ldr	w1, [x2]
   32324:	stp	x19, x20, [sp, #16]
   32328:	mov	x20, x2
   3232c:	cmp	w1, #0x31
   32330:	mov	x19, x0
   32334:	ccmp	w1, #0x1, #0x0, ne  // ne = any
   32338:	b.ls	323c8 <__asan_backtrace_create_state@@Base+0x5e38>  // b.plast
   3233c:	cmp	w1, #0x6
   32340:	b.eq	323c8 <__asan_backtrace_create_state@@Base+0x5e38>  // b.none
   32344:	ldr	x1, [x0, #256]
   32348:	cmp	x1, #0xff
   3234c:	b.eq	323e4 <__asan_backtrace_create_state@@Base+0x5e54>  // b.none
   32350:	add	x0, x1, #0x1
   32354:	str	x0, [x19, #256]
   32358:	mov	w0, #0x28                  	// #40
   3235c:	strb	w0, [x19, x1]
   32360:	mov	x2, x20
   32364:	strb	w0, [x19, #264]
   32368:	mov	w1, w21
   3236c:	mov	x0, x19
   32370:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   32374:	ldr	x1, [x19, #256]
   32378:	add	x0, x1, #0x1
   3237c:	cmp	x1, #0xff
   32380:	b.ne	323a8 <__asan_backtrace_create_state@@Base+0x5e18>  // b.any
   32384:	ldp	x3, x2, [x19, #272]
   32388:	strb	wzr, [x19, #255]
   3238c:	mov	x0, x19
   32390:	blr	x3
   32394:	ldr	x2, [x19, #320]
   32398:	mov	x0, #0x1                   	// #1
   3239c:	mov	x1, #0x0                   	// #0
   323a0:	add	x2, x2, x0
   323a4:	str	x2, [x19, #320]
   323a8:	str	x0, [x19, #256]
   323ac:	mov	w0, #0x29                  	// #41
   323b0:	strb	w0, [x19, x1]
   323b4:	strb	w0, [x19, #264]
   323b8:	ldp	x19, x20, [sp, #16]
   323bc:	ldr	x21, [sp, #32]
   323c0:	ldp	x29, x30, [sp], #48
   323c4:	ret
   323c8:	mov	x2, x20
   323cc:	mov	w1, w21
   323d0:	mov	x0, x19
   323d4:	ldp	x19, x20, [sp, #16]
   323d8:	ldr	x21, [sp, #32]
   323dc:	ldp	x29, x30, [sp], #48
   323e0:	b	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   323e4:	ldp	x3, x2, [x0, #272]
   323e8:	strb	wzr, [x0, #255]
   323ec:	blr	x3
   323f0:	ldr	x2, [x19, #320]
   323f4:	mov	x0, #0x1                   	// #1
   323f8:	mov	x1, #0x0                   	// #0
   323fc:	add	x2, x2, x0
   32400:	str	x2, [x19, #320]
   32404:	b	32354 <__asan_backtrace_create_state@@Base+0x5dc4>
   32408:	stp	x29, x30, [sp, #-80]!
   3240c:	mov	x29, sp
   32410:	stp	x19, x20, [sp, #16]
   32414:	mov	x19, x0
   32418:	mov	w20, w1
   3241c:	ldr	x0, [x2, #8]
   32420:	ldr	x0, [x0]
   32424:	ldrb	w1, [x0]
   32428:	cmp	w1, #0x66
   3242c:	b.ne	325d0 <__asan_backtrace_create_state@@Base+0x6040>  // b.any
   32430:	ldr	x1, [x3]
   32434:	stp	x23, x24, [sp, #48]
   32438:	stp	x25, x26, [sp, #64]
   3243c:	mov	x25, #0x0                   	// #0
   32440:	ldp	x23, x26, [x1, #8]
   32444:	stp	x21, x22, [sp, #32]
   32448:	ldr	w1, [x26]
   3244c:	cmp	w1, #0x3c
   32450:	b.eq	326a4 <__asan_backtrace_create_state@@Base+0x6114>  // b.none
   32454:	ldr	w22, [x19, #316]
   32458:	mov	w1, #0xffffffff            	// #-1
   3245c:	str	w1, [x19, #316]
   32460:	ldrb	w0, [x0, #1]
   32464:	cmp	w0, #0x6c
   32468:	b.eq	326c4 <__asan_backtrace_create_state@@Base+0x6134>  // b.none
   3246c:	b.hi	325e0 <__asan_backtrace_create_state@@Base+0x6050>  // b.pmore
   32470:	cmp	w0, #0x4c
   32474:	b.eq	32480 <__asan_backtrace_create_state@@Base+0x5ef0>  // b.none
   32478:	cmp	w0, #0x52
   3247c:	b.ne	325b0 <__asan_backtrace_create_state@@Base+0x6020>  // b.any
   32480:	ldr	x1, [x19, #256]
   32484:	add	x0, x1, #0x1
   32488:	cmp	x1, #0xff
   3248c:	b.eq	32790 <__asan_backtrace_create_state@@Base+0x6200>  // b.none
   32490:	str	x0, [x19, #256]
   32494:	mov	w0, #0x28                  	// #40
   32498:	strb	w0, [x19, x1]
   3249c:	mov	x2, x26
   324a0:	strb	w0, [x19, #264]
   324a4:	mov	w1, w20
   324a8:	mov	x0, x19
   324ac:	adrp	x26, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   324b0:	bl	32310 <__asan_backtrace_create_state@@Base+0x5d80>
   324b4:	add	x26, x26, #0x4f8
   324b8:	mov	x2, x23
   324bc:	mov	w1, w20
   324c0:	mov	x0, x19
   324c4:	bl	32258 <__asan_backtrace_create_state@@Base+0x5cc8>
   324c8:	mov	x0, x26
   324cc:	bl	67e0 <__asan_internal_strlen@plt>
   324d0:	cbz	x0, 3254c <__asan_backtrace_create_state@@Base+0x5fbc>
   324d4:	adrp	x21, 3e000 <__asan_backtrace_vector_release@@Base+0x4028>
   324d8:	add	x26, x0, x26
   324dc:	add	x21, x21, #0x4f9
   324e0:	mov	w24, #0x2e                  	// #46
   324e4:	ldr	x1, [x19, #256]
   324e8:	b	3250c <__asan_backtrace_create_state@@Base+0x5f7c>
   324ec:	mov	x2, x1
   324f0:	add	x1, x1, #0x1
   324f4:	str	x1, [x19, #256]
   324f8:	cmp	x21, x26
   324fc:	strb	w24, [x19, x2]
   32500:	strb	w24, [x19, #264]
   32504:	b.eq	3254c <__asan_backtrace_create_state@@Base+0x5fbc>  // b.none
   32508:	ldrb	w24, [x21], #1
   3250c:	cmp	x1, #0xff
   32510:	b.ne	324ec <__asan_backtrace_create_state@@Base+0x5f5c>  // b.any
   32514:	ldp	x3, x2, [x19, #272]
   32518:	strb	wzr, [x19, #255]
   3251c:	mov	x0, x19
   32520:	blr	x3
   32524:	ldr	x0, [x19, #320]
   32528:	mov	x2, #0x0                   	// #0
   3252c:	mov	x1, #0x1                   	// #1
   32530:	str	x1, [x19, #256]
   32534:	add	x0, x0, x1
   32538:	str	x0, [x19, #320]
   3253c:	strb	w24, [x19, x2]
   32540:	cmp	x21, x26
   32544:	strb	w24, [x19, #264]
   32548:	b.ne	32508 <__asan_backtrace_create_state@@Base+0x5f78>  // b.any
   3254c:	mov	x2, x23
   32550:	mov	w1, w20
   32554:	mov	x0, x19
   32558:	bl	32258 <__asan_backtrace_create_state@@Base+0x5cc8>
   3255c:	mov	x2, x25
   32560:	mov	w1, w20
   32564:	mov	x0, x19
   32568:	bl	32310 <__asan_backtrace_create_state@@Base+0x5d80>
   3256c:	ldr	x1, [x19, #256]
   32570:	add	x0, x1, #0x1
   32574:	cmp	x1, #0xff
   32578:	b.ne	325a0 <__asan_backtrace_create_state@@Base+0x6010>  // b.any
   3257c:	ldp	x3, x2, [x19, #272]
   32580:	strb	wzr, [x19, #255]
   32584:	mov	x0, x19
   32588:	blr	x3
   3258c:	ldr	x2, [x19, #320]
   32590:	mov	x0, #0x1                   	// #1
   32594:	mov	x1, #0x0                   	// #0
   32598:	add	x2, x2, x0
   3259c:	str	x2, [x19, #320]
   325a0:	str	x0, [x19, #256]
   325a4:	mov	w0, #0x29                  	// #41
   325a8:	strb	w0, [x19, x1]
   325ac:	strb	w0, [x19, #264]
   325b0:	ldp	x23, x24, [sp, #48]
   325b4:	mov	w0, #0x1                   	// #1
   325b8:	ldp	x25, x26, [sp, #64]
   325bc:	str	w22, [x19, #316]
   325c0:	ldp	x19, x20, [sp, #16]
   325c4:	ldp	x21, x22, [sp, #32]
   325c8:	ldp	x29, x30, [sp], #80
   325cc:	ret
   325d0:	mov	w0, #0x0                   	// #0
   325d4:	ldp	x19, x20, [sp, #16]
   325d8:	ldp	x29, x30, [sp], #80
   325dc:	ret
   325e0:	cmp	w0, #0x72
   325e4:	b.ne	325b0 <__asan_backtrace_create_state@@Base+0x6020>  // b.any
   325e8:	ldr	x1, [x19, #256]
   325ec:	add	x0, x1, #0x1
   325f0:	cmp	x1, #0xff
   325f4:	b.eq	32768 <__asan_backtrace_create_state@@Base+0x61d8>  // b.none
   325f8:	str	x0, [x19, #256]
   325fc:	mov	w0, #0x28                  	// #40
   32600:	strb	w0, [x19, x1]
   32604:	mov	x2, x26
   32608:	strb	w0, [x19, #264]
   3260c:	mov	w1, w20
   32610:	mov	x0, x19
   32614:	bl	32310 <__asan_backtrace_create_state@@Base+0x5d80>
   32618:	mov	x2, x23
   3261c:	mov	w1, w20
   32620:	mov	x0, x19
   32624:	adrp	x23, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   32628:	bl	32258 <__asan_backtrace_create_state@@Base+0x5cc8>
   3262c:	add	x23, x23, #0xb68
   32630:	mov	x0, x23
   32634:	bl	67e0 <__asan_internal_strlen@plt>
   32638:	cbz	x0, 325b0 <__asan_backtrace_create_state@@Base+0x6020>
   3263c:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   32640:	add	x23, x0, x23
   32644:	add	x20, x20, #0xb69
   32648:	mov	w21, #0x2e                  	// #46
   3264c:	ldr	x1, [x19, #256]
   32650:	b	32674 <__asan_backtrace_create_state@@Base+0x60e4>
   32654:	mov	x2, x1
   32658:	add	x1, x1, #0x1
   3265c:	str	x1, [x19, #256]
   32660:	cmp	x23, x20
   32664:	strb	w21, [x19, x2]
   32668:	strb	w21, [x19, #264]
   3266c:	b.eq	325b0 <__asan_backtrace_create_state@@Base+0x6020>  // b.none
   32670:	ldrb	w21, [x20], #1
   32674:	cmp	x1, #0xff
   32678:	b.ne	32654 <__asan_backtrace_create_state@@Base+0x60c4>  // b.any
   3267c:	ldp	x3, x2, [x19, #272]
   32680:	strb	wzr, [x19, #255]
   32684:	mov	x0, x19
   32688:	blr	x3
   3268c:	ldr	x0, [x19, #320]
   32690:	mov	x1, #0x1                   	// #1
   32694:	mov	x2, #0x0                   	// #0
   32698:	add	x0, x0, x1
   3269c:	str	x0, [x19, #320]
   326a0:	b	3265c <__asan_backtrace_create_state@@Base+0x60cc>
   326a4:	ldr	w22, [x19, #316]
   326a8:	mov	w1, #0xffffffff            	// #-1
   326ac:	ldr	x25, [x26, #16]
   326b0:	ldr	x26, [x26, #8]
   326b4:	str	w1, [x19, #316]
   326b8:	ldrb	w0, [x0, #1]
   326bc:	cmp	w0, #0x6c
   326c0:	b.ne	3246c <__asan_backtrace_create_state@@Base+0x5edc>  // b.any
   326c4:	adrp	x25, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   326c8:	add	x25, x25, #0xb60
   326cc:	mov	x0, x25
   326d0:	bl	67e0 <__asan_internal_strlen@plt>
   326d4:	cbz	x0, 32750 <__asan_backtrace_create_state@@Base+0x61c0>
   326d8:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   326dc:	add	x25, x0, x25
   326e0:	add	x21, x21, #0xb61
   326e4:	mov	w24, #0x28                  	// #40
   326e8:	ldr	x1, [x19, #256]
   326ec:	b	32710 <__asan_backtrace_create_state@@Base+0x6180>
   326f0:	mov	x2, x1
   326f4:	add	x1, x1, #0x1
   326f8:	str	x1, [x19, #256]
   326fc:	cmp	x25, x21
   32700:	strb	w24, [x19, x2]
   32704:	strb	w24, [x19, #264]
   32708:	b.eq	32750 <__asan_backtrace_create_state@@Base+0x61c0>  // b.none
   3270c:	ldrb	w24, [x21], #1
   32710:	cmp	x1, #0xff
   32714:	b.ne	326f0 <__asan_backtrace_create_state@@Base+0x6160>  // b.any
   32718:	ldp	x3, x2, [x19, #272]
   3271c:	strb	wzr, [x19, #255]
   32720:	mov	x0, x19
   32724:	blr	x3
   32728:	ldr	x0, [x19, #320]
   3272c:	mov	x2, #0x0                   	// #0
   32730:	mov	x1, #0x1                   	// #1
   32734:	str	x1, [x19, #256]
   32738:	add	x0, x0, x1
   3273c:	str	x0, [x19, #320]
   32740:	strb	w24, [x19, x2]
   32744:	cmp	x25, x21
   32748:	strb	w24, [x19, #264]
   3274c:	b.ne	3270c <__asan_backtrace_create_state@@Base+0x617c>  // b.any
   32750:	mov	x2, x23
   32754:	mov	w1, w20
   32758:	mov	x0, x19
   3275c:	bl	32258 <__asan_backtrace_create_state@@Base+0x5cc8>
   32760:	mov	x2, x26
   32764:	b	32560 <__asan_backtrace_create_state@@Base+0x5fd0>
   32768:	ldp	x3, x2, [x19, #272]
   3276c:	strb	wzr, [x19, #255]
   32770:	mov	x0, x19
   32774:	blr	x3
   32778:	ldr	x2, [x19, #320]
   3277c:	mov	x0, #0x1                   	// #1
   32780:	mov	x1, #0x0                   	// #0
   32784:	add	x2, x2, x0
   32788:	str	x2, [x19, #320]
   3278c:	b	325f8 <__asan_backtrace_create_state@@Base+0x6068>
   32790:	ldp	x3, x2, [x19, #272]
   32794:	strb	wzr, [x19, #255]
   32798:	mov	x0, x19
   3279c:	blr	x3
   327a0:	ldr	x2, [x19, #320]
   327a4:	mov	x0, #0x1                   	// #1
   327a8:	mov	x1, #0x0                   	// #0
   327ac:	add	x2, x2, x0
   327b0:	str	x2, [x19, #320]
   327b4:	b	32490 <__asan_backtrace_create_state@@Base+0x5f00>

00000000000327b8 <__asan_cplus_demangle_fill_name@@Base>:
   327b8:	cmp	x1, #0x0
   327bc:	mov	x3, x0
   327c0:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   327c4:	ccmp	x0, #0x0, #0x4, gt
   327c8:	mov	w0, #0x0                   	// #0
   327cc:	b.ne	327d4 <__asan_cplus_demangle_fill_name@@Base+0x1c>  // b.any
   327d0:	ret
   327d4:	mov	w0, #0x1                   	// #1
   327d8:	stp	xzr, x1, [x3]
   327dc:	str	w2, [x3, #16]
   327e0:	ret
   327e4:	nop
   327e8:	stp	x29, x30, [sp, #-32]!
   327ec:	mov	x29, sp
   327f0:	ldr	w3, [x0, #44]
   327f4:	str	x19, [sp, #16]
   327f8:	ldr	w19, [x0, #40]
   327fc:	cmp	w19, w3
   32800:	b.ge	32838 <__asan_cplus_demangle_fill_name@@Base+0x80>  // b.tcont
   32804:	ldr	x4, [x0, #32]
   32808:	mov	w5, #0x18                  	// #24
   3280c:	add	w3, w19, #0x1
   32810:	smaddl	x19, w19, w5, x4
   32814:	str	wzr, [x19, #4]
   32818:	str	w3, [x0, #40]
   3281c:	mov	x0, x19
   32820:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   32824:	cmp	w0, #0x0
   32828:	csel	x0, x19, xzr, ne  // ne = any
   3282c:	ldr	x19, [sp, #16]
   32830:	ldp	x29, x30, [sp], #32
   32834:	ret
   32838:	mov	x19, #0x0                   	// #0
   3283c:	mov	x0, x19
   32840:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   32844:	cmp	w0, #0x0
   32848:	csel	x0, x19, xzr, ne  // ne = any
   3284c:	ldr	x19, [sp, #16]
   32850:	ldp	x29, x30, [sp], #32
   32854:	ret
   32858:	stp	x29, x30, [sp, #-48]!
   3285c:	mov	x29, sp
   32860:	stp	x19, x20, [sp, #16]
   32864:	mov	x19, x0
   32868:	add	x0, x0, #0x18
   3286c:	bl	2c8a8 <__asan_backtrace_create_state@@Base+0x318>
   32870:	cmp	w0, #0x0
   32874:	b.le	32948 <__asan_cplus_demangle_fill_name@@Base+0x190>
   32878:	mov	w20, w0
   3287c:	sxtw	x1, w0
   32880:	ldr	x0, [x19, #8]
   32884:	str	x21, [sp, #32]
   32888:	ldr	x21, [x19, #24]
   3288c:	sub	x0, x0, x21
   32890:	cmp	x0, w20, sxtw
   32894:	b.lt	3296c <__asan_cplus_demangle_fill_name@@Base+0x1b4>  // b.tstop
   32898:	ldr	w0, [x19, #16]
   3289c:	add	x1, x21, x1
   328a0:	str	x1, [x19, #24]
   328a4:	tbz	w0, #2, 328b4 <__asan_cplus_demangle_fill_name@@Base+0xfc>
   328a8:	ldrb	w0, [x21, w20, sxtw]
   328ac:	cmp	w0, #0x24
   328b0:	b.eq	32958 <__asan_cplus_demangle_fill_name@@Base+0x1a0>  // b.none
   328b4:	cmp	w20, #0x9
   328b8:	b.gt	328e0 <__asan_cplus_demangle_fill_name@@Base+0x128>
   328bc:	mov	w2, w20
   328c0:	mov	x1, x21
   328c4:	mov	x0, x19
   328c8:	bl	327e8 <__asan_cplus_demangle_fill_name@@Base+0x30>
   328cc:	ldr	x21, [sp, #32]
   328d0:	str	x0, [x19, #64]
   328d4:	ldp	x19, x20, [sp, #16]
   328d8:	ldp	x29, x30, [sp], #48
   328dc:	ret
   328e0:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   328e4:	mov	x0, x21
   328e8:	add	x1, x1, #0xb70
   328ec:	mov	x2, #0x8                   	// #8
   328f0:	bl	6c20 <__asan_internal_memcmp@plt>
   328f4:	cbnz	w0, 328bc <__asan_cplus_demangle_fill_name@@Base+0x104>
   328f8:	ldrb	w0, [x21, #8]
   328fc:	mov	w2, #0x5f                  	// #95
   32900:	mov	w1, #0x24                  	// #36
   32904:	cmp	w0, #0x2e
   32908:	ccmp	w0, w2, #0x4, ne  // ne = any
   3290c:	ccmp	w0, w1, #0x4, ne  // ne = any
   32910:	b.ne	328bc <__asan_cplus_demangle_fill_name@@Base+0x104>  // b.any
   32914:	ldrb	w0, [x21, #9]
   32918:	cmp	w0, #0x4e
   3291c:	b.ne	328bc <__asan_cplus_demangle_fill_name@@Base+0x104>  // b.any
   32920:	ldr	w3, [x19, #72]
   32924:	mov	x0, x19
   32928:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   3292c:	mov	w2, #0x15                  	// #21
   32930:	add	w3, w3, #0x16
   32934:	add	x1, x1, #0xb80
   32938:	sub	w20, w3, w20
   3293c:	str	w20, [x19, #72]
   32940:	bl	327e8 <__asan_cplus_demangle_fill_name@@Base+0x30>
   32944:	b	328cc <__asan_cplus_demangle_fill_name@@Base+0x114>
   32948:	mov	x0, #0x0                   	// #0
   3294c:	ldp	x19, x20, [sp, #16]
   32950:	ldp	x29, x30, [sp], #48
   32954:	ret
   32958:	add	x1, x1, #0x1
   3295c:	str	x1, [x19, #24]
   32960:	cmp	w20, #0x9
   32964:	b.le	328bc <__asan_cplus_demangle_fill_name@@Base+0x104>
   32968:	b	328e0 <__asan_cplus_demangle_fill_name@@Base+0x128>
   3296c:	mov	x0, #0x0                   	// #0
   32970:	b	328cc <__asan_cplus_demangle_fill_name@@Base+0x114>
   32974:	nop
   32978:	stp	x29, x30, [sp, #-48]!
   3297c:	mov	x29, sp
   32980:	ldr	x3, [x0, #24]
   32984:	stp	x19, x20, [sp, #16]
   32988:	mov	x19, x0
   3298c:	str	x21, [sp, #32]
   32990:	mov	x20, x1
   32994:	ldr	x21, [x0, #64]
   32998:	ldrb	w0, [x3]
   3299c:	cmp	w0, #0x42
   329a0:	b.ne	329e0 <__asan_cplus_demangle_fill_name@@Base+0x228>  // b.any
   329a4:	nop
   329a8:	add	x3, x3, #0x1
   329ac:	str	x3, [x19, #24]
   329b0:	mov	x0, x19
   329b4:	bl	32858 <__asan_cplus_demangle_fill_name@@Base+0xa0>
   329b8:	mov	x3, x0
   329bc:	mov	x2, x20
   329c0:	mov	x0, x19
   329c4:	mov	w1, #0x4c                  	// #76
   329c8:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   329cc:	ldr	x3, [x19, #24]
   329d0:	mov	x20, x0
   329d4:	ldrb	w0, [x3]
   329d8:	cmp	w0, #0x42
   329dc:	b.eq	329a8 <__asan_cplus_demangle_fill_name@@Base+0x1f0>  // b.none
   329e0:	str	x21, [x19, #64]
   329e4:	mov	x0, x20
   329e8:	ldp	x19, x20, [sp, #16]
   329ec:	ldr	x21, [sp, #32]
   329f0:	ldp	x29, x30, [sp], #48
   329f4:	ret
   329f8:	stp	x29, x30, [sp, #-32]!
   329fc:	mov	x29, sp
   32a00:	str	x19, [sp, #16]
   32a04:	mov	x19, x0
   32a08:	ldr	x0, [x0, #24]
   32a0c:	ldrb	w2, [x0]
   32a10:	cmp	w2, #0x53
   32a14:	b.ne	32a88 <__asan_cplus_demangle_fill_name@@Base+0x2d0>  // b.any
   32a18:	add	x2, x0, #0x1
   32a1c:	str	x2, [x19, #24]
   32a20:	ldrb	w2, [x0, #1]
   32a24:	cbnz	w2, 32a98 <__asan_cplus_demangle_fill_name@@Base+0x2e0>
   32a28:	ldr	w0, [x19, #16]
   32a2c:	and	w1, w1, #0x1
   32a30:	ands	w3, w0, #0x8
   32a34:	ubfx	x4, x0, #3, #1
   32a38:	csel	w1, w1, wzr, eq  // eq = none
   32a3c:	cbz	w1, 32a58 <__asan_cplus_demangle_fill_name@@Base+0x2a0>
   32a40:	ldr	x0, [x19, #24]
   32a44:	ldrb	w0, [x0]
   32a48:	sub	w0, w0, #0x43
   32a4c:	and	w0, w0, #0xff
   32a50:	cmp	w0, #0x1
   32a54:	csinc	w4, w4, wzr, hi  // hi = pmore
   32a58:	adrp	x0, 5e000 <__asan_backtrace_vector_release@@Base+0x24028>
   32a5c:	add	x0, x0, #0xe58
   32a60:	add	x3, x0, #0x188
   32a64:	mov	w1, #0x74                  	// #116
   32a68:	b	32a70 <__asan_cplus_demangle_fill_name@@Base+0x2b8>
   32a6c:	ldrb	w1, [x0]
   32a70:	cmp	w1, w2
   32a74:	b.eq	32b74 <__asan_cplus_demangle_fill_name@@Base+0x3bc>  // b.none
   32a78:	add	x0, x0, #0x38
   32a7c:	cmp	x0, x3
   32a80:	b.ne	32a6c <__asan_cplus_demangle_fill_name@@Base+0x2b4>  // b.any
   32a84:	nop
   32a88:	mov	x0, #0x0                   	// #0
   32a8c:	ldr	x19, [sp, #16]
   32a90:	ldp	x29, x30, [sp], #32
   32a94:	ret
   32a98:	add	x2, x0, #0x2
   32a9c:	str	x2, [x19, #24]
   32aa0:	ldrb	w2, [x0, #1]
   32aa4:	sub	w5, w2, #0x30
   32aa8:	cmp	w2, #0x5f
   32aac:	and	w0, w5, #0xff
   32ab0:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   32ab4:	b.hi	32ae4 <__asan_cplus_demangle_fill_name@@Base+0x32c>  // b.pmore
   32ab8:	cmp	w2, #0x5f
   32abc:	mov	w1, #0x0                   	// #0
   32ac0:	b.ne	32af8 <__asan_cplus_demangle_fill_name@@Base+0x340>  // b.any
   32ac4:	ldr	w0, [x19, #56]
   32ac8:	cmp	w0, w1
   32acc:	b.ls	32a88 <__asan_cplus_demangle_fill_name@@Base+0x2d0>  // b.plast
   32ad0:	ldr	x0, [x19, #48]
   32ad4:	ldr	x19, [sp, #16]
   32ad8:	ldp	x29, x30, [sp], #32
   32adc:	ldr	x0, [x0, w1, uxtw #3]
   32ae0:	ret
   32ae4:	sub	w0, w2, #0x41
   32ae8:	and	w0, w0, #0xff
   32aec:	cmp	w0, #0x19
   32af0:	b.hi	32a28 <__asan_cplus_demangle_fill_name@@Base+0x270>  // b.pmore
   32af4:	nop
   32af8:	mov	w3, #0x0                   	// #0
   32afc:	nop
   32b00:	add	w1, w3, w3, lsl #3
   32b04:	sub	w6, w2, #0x41
   32b08:	mov	w4, w1
   32b0c:	and	w5, w5, #0xff
   32b10:	add	w1, w2, w1, lsl #2
   32b14:	and	w6, w6, #0xff
   32b18:	sub	w1, w1, #0x37
   32b1c:	add	w2, w2, w4, lsl #2
   32b20:	cmp	w5, #0x9
   32b24:	b.hi	32b68 <__asan_cplus_demangle_fill_name@@Base+0x3b0>  // b.pmore
   32b28:	sub	w1, w2, #0x30
   32b2c:	cmp	w3, w1
   32b30:	b.hi	32a88 <__asan_cplus_demangle_fill_name@@Base+0x2d0>  // b.pmore
   32b34:	ldr	x4, [x19, #24]
   32b38:	mov	w3, w1
   32b3c:	add	x0, x4, #0x1
   32b40:	ldrb	w2, [x4]
   32b44:	cbz	w2, 32b58 <__asan_cplus_demangle_fill_name@@Base+0x3a0>
   32b48:	str	x0, [x19, #24]
   32b4c:	ldrb	w2, [x4]
   32b50:	cmp	w2, #0x5f
   32b54:	b.eq	32b60 <__asan_cplus_demangle_fill_name@@Base+0x3a8>  // b.none
   32b58:	sub	w5, w2, #0x30
   32b5c:	b	32b00 <__asan_cplus_demangle_fill_name@@Base+0x348>
   32b60:	add	w1, w1, #0x1
   32b64:	b	32ac4 <__asan_cplus_demangle_fill_name@@Base+0x30c>
   32b68:	cmp	w6, #0x19
   32b6c:	b.ls	32b2c <__asan_cplus_demangle_fill_name@@Base+0x374>  // b.plast
   32b70:	b	32a88 <__asan_cplus_demangle_fill_name@@Base+0x2d0>
   32b74:	ldr	x5, [x0, #40]
   32b78:	ldp	w1, w3, [x19, #40]
   32b7c:	cbz	x5, 32bb8 <__asan_cplus_demangle_fill_name@@Base+0x400>
   32b80:	ldr	w9, [x0, #48]
   32b84:	cmp	w3, w1
   32b88:	b.le	32c54 <__asan_cplus_demangle_fill_name@@Base+0x49c>
   32b8c:	mov	w8, #0x18                  	// #24
   32b90:	ldr	x7, [x19, #32]
   32b94:	smull	x6, w1, w8
   32b98:	add	w1, w1, #0x1
   32b9c:	add	x2, x7, x6
   32ba0:	str	wzr, [x2, #4]
   32ba4:	str	w1, [x19, #40]
   32ba8:	str	w8, [x7, x6]
   32bac:	str	x5, [x2, #8]
   32bb0:	str	w9, [x2, #16]
   32bb4:	str	x2, [x19, #64]
   32bb8:	cbz	w4, 32c40 <__asan_cplus_demangle_fill_name@@Base+0x488>
   32bbc:	ldr	w2, [x0, #32]
   32bc0:	ldr	x5, [x0, #24]
   32bc4:	cmp	w1, w3
   32bc8:	ldr	w0, [x19, #72]
   32bcc:	add	w0, w0, w2
   32bd0:	str	w0, [x19, #72]
   32bd4:	b.ge	32c4c <__asan_cplus_demangle_fill_name@@Base+0x494>  // b.tcont
   32bd8:	mov	w4, #0x18                  	// #24
   32bdc:	add	w6, w1, #0x1
   32be0:	ldr	x3, [x19, #32]
   32be4:	smull	x1, w1, w4
   32be8:	add	x0, x3, x1
   32bec:	str	wzr, [x0, #4]
   32bf0:	str	w6, [x19, #40]
   32bf4:	str	w4, [x3, x1]
   32bf8:	str	x5, [x0, #8]
   32bfc:	str	w2, [x0, #16]
   32c00:	ldr	x1, [x19, #24]
   32c04:	ldrb	w1, [x1]
   32c08:	cmp	w1, #0x42
   32c0c:	b.ne	32a8c <__asan_cplus_demangle_fill_name@@Base+0x2d4>  // b.any
   32c10:	mov	x1, x0
   32c14:	mov	x0, x19
   32c18:	bl	32978 <__asan_cplus_demangle_fill_name@@Base+0x1c0>
   32c1c:	cbz	x0, 32a88 <__asan_cplus_demangle_fill_name@@Base+0x2d0>
   32c20:	ldp	w1, w2, [x19, #56]
   32c24:	cmp	w1, w2
   32c28:	b.ge	32a88 <__asan_cplus_demangle_fill_name@@Base+0x2d0>  // b.tcont
   32c2c:	ldr	x3, [x19, #48]
   32c30:	add	w2, w1, #0x1
   32c34:	str	x0, [x3, w1, sxtw #3]
   32c38:	str	w2, [x19, #56]
   32c3c:	b	32a8c <__asan_cplus_demangle_fill_name@@Base+0x2d4>
   32c40:	ldr	w2, [x0, #16]
   32c44:	ldr	x5, [x0, #8]
   32c48:	b	32bc4 <__asan_cplus_demangle_fill_name@@Base+0x40c>
   32c4c:	mov	x0, #0x0                   	// #0
   32c50:	b	32c00 <__asan_cplus_demangle_fill_name@@Base+0x448>
   32c54:	mov	x2, #0x0                   	// #0
   32c58:	str	x2, [x19, #64]
   32c5c:	b	32bb8 <__asan_cplus_demangle_fill_name@@Base+0x400>

0000000000032c60 <__asan_cplus_demangle_fill_extended_operator@@Base>:
   32c60:	cmp	w1, #0x0
   32c64:	mov	x3, x0
   32c68:	ccmp	x2, #0x0, #0x4, ge  // ge = tcont
   32c6c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   32c70:	mov	w0, #0x0                   	// #0
   32c74:	b.eq	32c8c <__asan_cplus_demangle_fill_extended_operator@@Base+0x2c>  // b.none
   32c78:	mov	x4, #0x33                  	// #51
   32c7c:	mov	w0, #0x1                   	// #1
   32c80:	str	x4, [x3]
   32c84:	str	w1, [x3, #8]
   32c88:	str	x2, [x3, #16]
   32c8c:	ret

0000000000032c90 <__asan_cplus_demangle_fill_ctor@@Base>:
   32c90:	cmp	x0, #0x0
   32c94:	mov	x3, x0
   32c98:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   32c9c:	mov	w0, #0x0                   	// #0
   32ca0:	b.eq	32cc8 <__asan_cplus_demangle_fill_ctor@@Base+0x38>  // b.none
   32ca4:	sub	w4, w1, #0x1
   32ca8:	mov	w0, #0x0                   	// #0
   32cac:	cmp	w4, #0x4
   32cb0:	b.hi	32cc8 <__asan_cplus_demangle_fill_ctor@@Base+0x38>  // b.pmore
   32cb4:	mov	x4, #0x7                   	// #7
   32cb8:	mov	w0, #0x1                   	// #1
   32cbc:	str	x4, [x3]
   32cc0:	str	w1, [x3, #8]
   32cc4:	str	x2, [x3, #16]
   32cc8:	ret
   32ccc:	nop

0000000000032cd0 <__asan_cplus_demangle_fill_dtor@@Base>:
   32cd0:	cmp	x0, #0x0
   32cd4:	mov	x3, x0
   32cd8:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   32cdc:	mov	w0, #0x0                   	// #0
   32ce0:	b.eq	32d08 <__asan_cplus_demangle_fill_dtor@@Base+0x38>  // b.none
   32ce4:	sub	w4, w1, #0x1
   32ce8:	mov	w0, #0x0                   	// #0
   32cec:	cmp	w4, #0x4
   32cf0:	b.hi	32d08 <__asan_cplus_demangle_fill_dtor@@Base+0x38>  // b.pmore
   32cf4:	mov	x4, #0x8                   	// #8
   32cf8:	mov	w0, #0x1                   	// #1
   32cfc:	str	x4, [x3]
   32d00:	str	w1, [x3, #8]
   32d04:	str	x2, [x3, #16]
   32d08:	ret
   32d0c:	nop

0000000000032d10 <__asan_cplus_demangle_type@@Base>:
   32d10:	stp	x29, x30, [sp, #-80]!
   32d14:	mov	x29, sp
   32d18:	ldr	x5, [x0, #24]
   32d1c:	stp	x19, x20, [sp, #16]
   32d20:	mov	x19, x0
   32d24:	mov	x0, x5
   32d28:	bl	2cb80 <__asan_backtrace_create_state@@Base+0x5f0>
   32d2c:	cbnz	w0, 32d6c <__asan_cplus_demangle_type@@Base+0x5c>
   32d30:	ldrb	w1, [x5]
   32d34:	sub	w0, w1, #0x30
   32d38:	cmp	w0, #0x4a
   32d3c:	b.ls	32d54 <__asan_cplus_demangle_type@@Base+0x44>  // b.plast
   32d40:	mov	x20, #0x0                   	// #0
   32d44:	mov	x0, x20
   32d48:	ldp	x19, x20, [sp, #16]
   32d4c:	ldp	x29, x30, [sp], #80
   32d50:	ret
   32d54:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   32d58:	add	x2, x2, #0x6e0
   32d5c:	ldrh	w0, [x2, w0, uxtw #1]
   32d60:	adr	x2, 32d6c <__asan_cplus_demangle_type@@Base+0x5c>
   32d64:	add	x0, x2, w0, sxth #2
   32d68:	br	x0
   32d6c:	add	x1, sp, #0x48
   32d70:	mov	x0, x19
   32d74:	mov	w2, #0x0                   	// #0
   32d78:	stp	x21, x22, [sp, #32]
   32d7c:	bl	350a0 <__asan_cplus_demangle_type@@Base+0x2390>
   32d80:	mov	x21, x0
   32d84:	cbz	x0, 32e18 <__asan_cplus_demangle_type@@Base+0x108>
   32d88:	ldr	x0, [x19, #24]
   32d8c:	ldrb	w0, [x0]
   32d90:	cmp	w0, #0x46
   32d94:	mov	x0, x19
   32d98:	b.eq	32e0c <__asan_cplus_demangle_type@@Base+0xfc>  // b.none
   32d9c:	bl	32d10 <__asan_cplus_demangle_type@@Base>
   32da0:	str	x0, [x21]
   32da4:	cbz	x0, 32e18 <__asan_cplus_demangle_type@@Base+0x108>
   32da8:	ldr	w1, [x0]
   32dac:	ldr	x20, [sp, #72]
   32db0:	sub	w1, w1, #0x1f
   32db4:	cmp	w1, #0x1
   32db8:	b.ls	32df0 <__asan_cplus_demangle_type@@Base+0xe0>  // b.plast
   32dbc:	cbz	x20, 32e18 <__asan_cplus_demangle_type@@Base+0x108>
   32dc0:	ldp	w0, w1, [x19, #56]
   32dc4:	cmp	w0, w1
   32dc8:	b.ge	32e18 <__asan_cplus_demangle_type@@Base+0x108>  // b.tcont
   32dcc:	ldr	x2, [x19, #48]
   32dd0:	add	w1, w0, #0x1
   32dd4:	ldp	x21, x22, [sp, #32]
   32dd8:	str	x20, [x2, w0, sxtw #3]
   32ddc:	mov	x0, x20
   32de0:	str	w1, [x19, #56]
   32de4:	ldp	x19, x20, [sp, #16]
   32de8:	ldp	x29, x30, [sp], #80
   32dec:	ret
   32df0:	ldr	x1, [x0, #8]
   32df4:	str	x20, [x0, #8]
   32df8:	ldr	x0, [x21]
   32dfc:	str	x0, [sp, #72]
   32e00:	str	x1, [x21]
   32e04:	ldr	x20, [sp, #72]
   32e08:	b	32dbc <__asan_cplus_demangle_type@@Base+0xac>
   32e0c:	bl	34068 <__asan_cplus_demangle_type@@Base+0x1358>
   32e10:	str	x0, [x21]
   32e14:	b	32da4 <__asan_cplus_demangle_type@@Base+0x94>
   32e18:	ldp	x21, x22, [sp, #32]
   32e1c:	b	32d40 <__asan_cplus_demangle_type@@Base+0x30>
   32e20:	adrp	x2, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   32e24:	sub	w1, w1, #0x61
   32e28:	ldp	w0, w4, [x19, #40]
   32e2c:	sbfiz	x1, x1, #5, #32
   32e30:	ldr	x2, [x2, #3736]
   32e34:	cmp	w0, w4
   32e38:	add	x1, x1, x2
   32e3c:	b.ge	3382c <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   32e40:	mov	w2, #0x18                  	// #24
   32e44:	add	w7, w0, #0x1
   32e48:	ldr	x4, [x19, #32]
   32e4c:	smull	x0, w0, w2
   32e50:	ldr	w8, [x1, #8]
   32e54:	mov	w6, #0x27                  	// #39
   32e58:	add	x20, x4, x0
   32e5c:	ldr	w2, [x19, #72]
   32e60:	add	x3, x5, #0x1
   32e64:	add	w2, w2, w8
   32e68:	str	wzr, [x20, #4]
   32e6c:	str	w7, [x19, #40]
   32e70:	str	w6, [x4, x0]
   32e74:	str	x1, [x20, #8]
   32e78:	str	x3, [x19, #24]
   32e7c:	str	w2, [x19, #72]
   32e80:	b	32d44 <__asan_cplus_demangle_type@@Base+0x34>
   32e84:	mov	x0, x19
   32e88:	bl	354d0 <__asan_cplus_demangle_type@@Base+0x27c0>
   32e8c:	mov	x20, x0
   32e90:	str	x0, [sp, #72]
   32e94:	nop
   32e98:	cbz	x20, 32d40 <__asan_cplus_demangle_type@@Base+0x30>
   32e9c:	ldp	w0, w1, [x19, #56]
   32ea0:	cmp	w0, w1
   32ea4:	b.ge	32d40 <__asan_cplus_demangle_type@@Base+0x30>  // b.tcont
   32ea8:	ldr	x2, [x19, #48]
   32eac:	add	w1, w0, #0x1
   32eb0:	str	x20, [x2, w0, sxtw #3]
   32eb4:	str	w1, [x19, #56]
   32eb8:	ldr	x20, [sp, #72]
   32ebc:	mov	x0, x20
   32ec0:	ldp	x19, x20, [sp, #16]
   32ec4:	ldp	x29, x30, [sp], #80
   32ec8:	ret
   32ecc:	mov	x0, x19
   32ed0:	bl	34068 <__asan_cplus_demangle_type@@Base+0x1358>
   32ed4:	mov	x20, x0
   32ed8:	str	x0, [sp, #72]
   32edc:	b	32e98 <__asan_cplus_demangle_type@@Base+0x188>
   32ee0:	add	x0, x5, #0x1
   32ee4:	str	x0, [x19, #24]
   32ee8:	mov	x0, x19
   32eec:	bl	32d10 <__asan_cplus_demangle_type@@Base>
   32ef0:	mov	x2, x0
   32ef4:	mov	x3, #0x0                   	// #0
   32ef8:	mov	x0, x19
   32efc:	mov	w1, #0x26                  	// #38
   32f00:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   32f04:	mov	x20, x0
   32f08:	str	x0, [sp, #72]
   32f0c:	b	32e98 <__asan_cplus_demangle_type@@Base+0x188>
   32f10:	add	x0, x5, #0x1
   32f14:	str	x0, [x19, #24]
   32f18:	mov	x0, x19
   32f1c:	bl	32d10 <__asan_cplus_demangle_type@@Base>
   32f20:	mov	x2, x0
   32f24:	mov	x3, #0x0                   	// #0
   32f28:	mov	x0, x19
   32f2c:	mov	w1, #0x24                  	// #36
   32f30:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   32f34:	mov	x20, x0
   32f38:	str	x0, [sp, #72]
   32f3c:	b	32e98 <__asan_cplus_demangle_type@@Base+0x188>
   32f40:	add	x0, x5, #0x1
   32f44:	str	x0, [x19, #24]
   32f48:	mov	x0, x19
   32f4c:	bl	32d10 <__asan_cplus_demangle_type@@Base>
   32f50:	mov	x2, x0
   32f54:	mov	x3, #0x0                   	// #0
   32f58:	mov	x0, x19
   32f5c:	mov	w1, #0x25                  	// #37
   32f60:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   32f64:	mov	x20, x0
   32f68:	str	x0, [sp, #72]
   32f6c:	b	32e98 <__asan_cplus_demangle_type@@Base+0x188>
   32f70:	add	x0, x5, #0x1
   32f74:	str	x0, [x19, #24]
   32f78:	ldrb	w0, [x5, #1]
   32f7c:	cbz	w0, 32d40 <__asan_cplus_demangle_type@@Base+0x30>
   32f80:	add	x0, x5, #0x2
   32f84:	str	x0, [x19, #24]
   32f88:	ldrb	w0, [x5, #1]
   32f8c:	cmp	w0, #0x68
   32f90:	b.eq	33654 <__asan_cplus_demangle_type@@Base+0x944>  // b.none
   32f94:	b.hi	33294 <__asan_cplus_demangle_type@@Base+0x584>  // b.pmore
   32f98:	cmp	w0, #0x63
   32f9c:	b.eq	33638 <__asan_cplus_demangle_type@@Base+0x928>  // b.none
   32fa0:	b.ls	33268 <__asan_cplus_demangle_type@@Base+0x558>  // b.plast
   32fa4:	cmp	w0, #0x65
   32fa8:	b.eq	336f4 <__asan_cplus_demangle_type@@Base+0x9e4>  // b.none
   32fac:	cmp	w0, #0x66
   32fb0:	b.ne	334b0 <__asan_cplus_demangle_type@@Base+0x7a0>  // b.any
   32fb4:	ldp	w0, w1, [x19, #40]
   32fb8:	cmp	w0, w1
   32fbc:	b.ge	3382c <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   32fc0:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   32fc4:	mov	w2, #0x18                  	// #24
   32fc8:	ldr	x4, [x19, #32]
   32fcc:	smull	x2, w0, w2
   32fd0:	ldr	x1, [x1, #3736]
   32fd4:	add	w0, w0, #0x1
   32fd8:	ldr	w3, [x19, #72]
   32fdc:	add	x20, x4, x2
   32fe0:	add	x1, x1, #0x340
   32fe4:	mov	w5, #0x27                  	// #39
   32fe8:	str	wzr, [x20, #4]
   32fec:	str	w0, [x19, #40]
   32ff0:	add	w0, w3, #0x9
   32ff4:	str	w5, [x4, x2]
   32ff8:	str	x1, [x20, #8]
   32ffc:	str	w0, [x19, #72]
   33000:	b	32d44 <__asan_cplus_demangle_type@@Base+0x34>
   33004:	add	x0, x5, #0x1
   33008:	str	x0, [x19, #24]
   3300c:	mov	x0, x19
   33010:	bl	32858 <__asan_cplus_demangle_fill_name@@Base+0xa0>
   33014:	str	x0, [sp, #72]
   33018:	ldr	x1, [x19, #24]
   3301c:	mov	x20, x0
   33020:	ldrb	w0, [x1]
   33024:	cmp	w0, #0x49
   33028:	b.eq	33570 <__asan_cplus_demangle_type@@Base+0x860>  // b.none
   3302c:	mov	x0, x19
   33030:	bl	32d10 <__asan_cplus_demangle_type@@Base>
   33034:	ldr	x3, [sp, #72]
   33038:	mov	x2, x0
   3303c:	mov	w1, #0x21                  	// #33
   33040:	mov	x0, x19
   33044:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   33048:	mov	x20, x0
   3304c:	str	x0, [sp, #72]
   33050:	b	32e98 <__asan_cplus_demangle_type@@Base+0x188>
   33054:	add	x0, x5, #0x1
   33058:	str	x0, [x19, #24]
   3305c:	mov	x0, x19
   33060:	bl	32d10 <__asan_cplus_demangle_type@@Base>
   33064:	mov	x2, x0
   33068:	mov	x3, #0x0                   	// #0
   3306c:	mov	x0, x19
   33070:	mov	w1, #0x22                  	// #34
   33074:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   33078:	mov	x20, x0
   3307c:	str	x0, [sp, #72]
   33080:	b	32e98 <__asan_cplus_demangle_type@@Base+0x188>
   33084:	ldrb	w0, [x5, #1]
   33088:	sub	w1, w0, #0x30
   3308c:	cmp	w0, #0x5f
   33090:	and	w1, w1, #0xff
   33094:	ccmp	w1, #0x9, #0x0, ne  // ne = any
   33098:	b.ls	330ac <__asan_cplus_demangle_type@@Base+0x39c>  // b.plast
   3309c:	sub	w0, w0, #0x41
   330a0:	and	w0, w0, #0xff
   330a4:	cmp	w0, #0x19
   330a8:	b.hi	3354c <__asan_cplus_demangle_type@@Base+0x83c>  // b.pmore
   330ac:	mov	w1, #0x0                   	// #0
   330b0:	mov	x0, x19
   330b4:	bl	329f8 <__asan_cplus_demangle_fill_name@@Base+0x240>
   330b8:	str	x0, [sp, #72]
   330bc:	ldr	x1, [x19, #24]
   330c0:	mov	x20, x0
   330c4:	ldrb	w0, [x1]
   330c8:	cmp	w0, #0x49
   330cc:	b.ne	32d44 <__asan_cplus_demangle_type@@Base+0x34>  // b.any
   330d0:	mov	x0, x19
   330d4:	bl	354a0 <__asan_cplus_demangle_type@@Base+0x2790>
   330d8:	mov	x2, x20
   330dc:	mov	x3, x0
   330e0:	mov	w1, #0x4                   	// #4
   330e4:	mov	x0, x19
   330e8:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   330ec:	mov	x20, x0
   330f0:	str	x0, [sp, #72]
   330f4:	b	32e98 <__asan_cplus_demangle_type@@Base+0x188>
   330f8:	mov	x0, x19
   330fc:	stp	x21, x22, [sp, #32]
   33100:	bl	2ca58 <__asan_backtrace_create_state@@Base+0x4c8>
   33104:	ldr	x21, [x19, #24]
   33108:	str	x0, [sp, #72]
   3310c:	mov	x20, x0
   33110:	ldrb	w0, [x21]
   33114:	cmp	w0, #0x49
   33118:	b.eq	334f0 <__asan_cplus_demangle_type@@Base+0x7e0>  // b.none
   3311c:	ldp	x21, x22, [sp, #32]
   33120:	b	32e98 <__asan_cplus_demangle_type@@Base+0x188>
   33124:	add	x0, x5, #0x1
   33128:	str	x0, [x19, #24]
   3312c:	mov	x0, x19
   33130:	bl	32858 <__asan_cplus_demangle_fill_name@@Base+0xa0>
   33134:	mov	x2, x0
   33138:	mov	x3, #0x0                   	// #0
   3313c:	mov	x0, x19
   33140:	mov	w1, #0x28                  	// #40
   33144:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   33148:	mov	x20, x0
   3314c:	str	x0, [sp, #72]
   33150:	b	32e98 <__asan_cplus_demangle_type@@Base+0x188>
   33154:	add	x0, x5, #0x1
   33158:	str	x0, [x19, #24]
   3315c:	mov	x0, x19
   33160:	bl	32d10 <__asan_cplus_demangle_type@@Base>
   33164:	mov	x2, x0
   33168:	mov	x3, #0x0                   	// #0
   3316c:	mov	x0, x19
   33170:	mov	w1, #0x23                  	// #35
   33174:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   33178:	mov	x20, x0
   3317c:	str	x0, [sp, #72]
   33180:	b	32e98 <__asan_cplus_demangle_type@@Base+0x188>
   33184:	add	x1, x5, #0x1
   33188:	str	x1, [x19, #24]
   3318c:	ldrb	w0, [x5, #1]
   33190:	cmp	w0, #0x5f
   33194:	b.eq	33544 <__asan_cplus_demangle_type@@Base+0x834>  // b.none
   33198:	sub	w0, w0, #0x30
   3319c:	and	w0, w0, #0xff
   331a0:	cmp	w0, #0x9
   331a4:	b.hi	33594 <__asan_cplus_demangle_type@@Base+0x884>  // b.pmore
   331a8:	add	x3, x5, #0x2
   331ac:	nop
   331b0:	mov	x2, x3
   331b4:	str	x3, [x19, #24]
   331b8:	add	x3, x3, #0x1
   331bc:	ldrb	w0, [x2]
   331c0:	sub	w0, w0, #0x30
   331c4:	and	w0, w0, #0xff
   331c8:	cmp	w0, #0x9
   331cc:	b.ls	331b0 <__asan_cplus_demangle_type@@Base+0x4a0>  // b.plast
   331d0:	sub	w2, w2, w1
   331d4:	mov	x0, x19
   331d8:	bl	327e8 <__asan_cplus_demangle_fill_name@@Base+0x30>
   331dc:	mov	x20, x0
   331e0:	cbz	x0, 32d40 <__asan_cplus_demangle_type@@Base+0x30>
   331e4:	ldr	x1, [x19, #24]
   331e8:	ldrb	w0, [x1]
   331ec:	cmp	w0, #0x5f
   331f0:	b.ne	32d40 <__asan_cplus_demangle_type@@Base+0x30>  // b.any
   331f4:	add	x1, x1, #0x1
   331f8:	str	x1, [x19, #24]
   331fc:	mov	x0, x19
   33200:	bl	6750 <__asan_cplus_demangle_type@plt>
   33204:	mov	x3, x0
   33208:	mov	x2, x20
   3320c:	mov	x0, x19
   33210:	mov	w1, #0x2a                  	// #42
   33214:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   33218:	mov	x20, x0
   3321c:	str	x0, [sp, #72]
   33220:	b	32e98 <__asan_cplus_demangle_type@@Base+0x188>
   33224:	add	x0, x5, #0x1
   33228:	str	x0, [x19, #24]
   3322c:	mov	x0, x19
   33230:	bl	6750 <__asan_cplus_demangle_type@plt>
   33234:	mov	x20, x0
   33238:	cbz	x0, 32d40 <__asan_cplus_demangle_type@@Base+0x30>
   3323c:	mov	x0, x19
   33240:	bl	6750 <__asan_cplus_demangle_type@plt>
   33244:	mov	x3, x0
   33248:	cbz	x0, 32d40 <__asan_cplus_demangle_type@@Base+0x30>
   3324c:	mov	x2, x20
   33250:	mov	x0, x19
   33254:	mov	w1, #0x2b                  	// #43
   33258:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   3325c:	mov	x20, x0
   33260:	str	x0, [sp, #72]
   33264:	b	32e98 <__asan_cplus_demangle_type@@Base+0x188>
   33268:	cmp	w0, #0x54
   3326c:	b.eq	33314 <__asan_cplus_demangle_type@@Base+0x604>  // b.none
   33270:	cmp	w0, #0x61
   33274:	b.ne	333a8 <__asan_cplus_demangle_type@@Base+0x698>  // b.any
   33278:	mov	x0, x19
   3327c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x2028>
   33280:	mov	w2, #0x4                   	// #4
   33284:	add	x1, x1, #0xc50
   33288:	bl	327e8 <__asan_cplus_demangle_fill_name@@Base+0x30>
   3328c:	mov	x20, x0
   33290:	b	32d44 <__asan_cplus_demangle_type@@Base+0x34>
   33294:	cmp	w0, #0x73
   33298:	b.eq	33600 <__asan_cplus_demangle_type@@Base+0x8f0>  // b.none
   3329c:	b.ls	33370 <__asan_cplus_demangle_type@@Base+0x660>  // b.plast
   332a0:	cmp	w0, #0x75
   332a4:	b.eq	33744 <__asan_cplus_demangle_type@@Base+0xa34>  // b.none
   332a8:	cmp	w0, #0x76
   332ac:	b.ne	3330c <__asan_cplus_demangle_type@@Base+0x5fc>  // b.any
   332b0:	ldrb	w0, [x5, #2]
   332b4:	cmp	w0, #0x5f
   332b8:	b.eq	337dc <__asan_cplus_demangle_type@@Base+0xacc>  // b.none
   332bc:	mov	x0, x19
   332c0:	bl	2c978 <__asan_backtrace_create_state@@Base+0x3e8>
   332c4:	mov	x20, x0
   332c8:	cbz	x20, 32d40 <__asan_cplus_demangle_type@@Base+0x30>
   332cc:	ldr	x0, [x19, #24]
   332d0:	ldrb	w1, [x0]
   332d4:	cmp	w1, #0x5f
   332d8:	b.ne	32d40 <__asan_cplus_demangle_type@@Base+0x30>  // b.any
   332dc:	add	x0, x0, #0x1
   332e0:	str	x0, [x19, #24]
   332e4:	mov	x0, x19
   332e8:	bl	6750 <__asan_cplus_demangle_type@plt>
   332ec:	mov	x3, x0
   332f0:	mov	x2, x20
   332f4:	mov	x0, x19
   332f8:	mov	w1, #0x2d                  	// #45
   332fc:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   33300:	mov	x20, x0
   33304:	str	x0, [sp, #72]
   33308:	b	32e98 <__asan_cplus_demangle_type@@Base+0x188>
   3330c:	cmp	w0, #0x74
   33310:	b.ne	32d40 <__asan_cplus_demangle_type@@Base+0x30>  // b.any
   33314:	ldr	w20, [x19, #76]
   33318:	mov	w0, #0x1                   	// #1
   3331c:	str	w0, [x19, #76]
   33320:	mov	x0, x19
   33324:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   33328:	str	w20, [x19, #76]
   3332c:	mov	x2, x0
   33330:	mov	x3, #0x0                   	// #0
   33334:	mov	x0, x19
   33338:	mov	w1, #0x43                  	// #67
   3333c:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   33340:	str	x0, [sp, #72]
   33344:	mov	x20, x0
   33348:	cbz	x0, 32d40 <__asan_cplus_demangle_type@@Base+0x30>
   3334c:	ldr	x0, [x19, #24]
   33350:	ldrb	w1, [x0]
   33354:	cbz	w1, 32d40 <__asan_cplus_demangle_type@@Base+0x30>
   33358:	add	x1, x0, #0x1
   3335c:	str	x1, [x19, #24]
   33360:	ldrb	w0, [x0]
   33364:	cmp	w0, #0x45
   33368:	b.ne	32d40 <__asan_cplus_demangle_type@@Base+0x30>  // b.any
   3336c:	b	32e9c <__asan_cplus_demangle_type@@Base+0x18c>
   33370:	cmp	w0, #0x6e
   33374:	b.eq	336a4 <__asan_cplus_demangle_type@@Base+0x994>  // b.none
   33378:	cmp	w0, #0x70
   3337c:	b.ne	33458 <__asan_cplus_demangle_type@@Base+0x748>  // b.any
   33380:	mov	x0, x19
   33384:	bl	32d10 <__asan_cplus_demangle_type@@Base>
   33388:	mov	x3, #0x0                   	// #0
   3338c:	mov	x2, x0
   33390:	mov	w1, #0x4b                  	// #75
   33394:	mov	x0, x19
   33398:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   3339c:	mov	x20, x0
   333a0:	str	x0, [sp, #72]
   333a4:	b	32e98 <__asan_cplus_demangle_type@@Base+0x188>
   333a8:	cmp	w0, #0x46
   333ac:	b.ne	32d40 <__asan_cplus_demangle_type@@Base+0x30>  // b.any
   333b0:	ldp	w0, w1, [x19, #40]
   333b4:	cmp	w0, w1
   333b8:	b.ge	33818 <__asan_cplus_demangle_type@@Base+0xb08>  // b.tcont
   333bc:	mov	w2, #0x18                  	// #24
   333c0:	add	w3, w0, #0x1
   333c4:	ldr	x1, [x19, #32]
   333c8:	smull	x0, w0, w2
   333cc:	mov	w2, #0x2c                  	// #44
   333d0:	add	x20, x1, x0
   333d4:	str	wzr, [x20, #4]
   333d8:	str	w3, [x19, #40]
   333dc:	str	x20, [sp, #72]
   333e0:	str	w2, [x1, x0]
   333e4:	ldrb	w0, [x5, #2]
   333e8:	sub	w0, w0, #0x30
   333ec:	and	w0, w0, #0xff
   333f0:	cmp	w0, #0x9
   333f4:	cset	w1, ls  // ls = plast
   333f8:	strh	w1, [x20, #16]
   333fc:	b.hi	3340c <__asan_cplus_demangle_type@@Base+0x6fc>  // b.pmore
   33400:	add	x0, x19, #0x18
   33404:	bl	2c8a8 <__asan_backtrace_create_state@@Base+0x318>
   33408:	ldr	x20, [sp, #72]
   3340c:	mov	x0, x19
   33410:	bl	32d10 <__asan_cplus_demangle_type@@Base>
   33414:	str	x0, [x20, #8]
   33418:	ldr	x1, [sp, #72]
   3341c:	ldr	x0, [x1, #8]
   33420:	cbz	x0, 32d40 <__asan_cplus_demangle_type@@Base+0x30>
   33424:	add	x0, x19, #0x18
   33428:	bl	2c8a8 <__asan_backtrace_create_state@@Base+0x318>
   3342c:	ldr	x1, [x19, #24]
   33430:	ldrb	w0, [x1]
   33434:	cbz	w0, 33444 <__asan_cplus_demangle_type@@Base+0x734>
   33438:	add	x0, x1, #0x1
   3343c:	str	x0, [x19, #24]
   33440:	ldrb	w0, [x1]
   33444:	ldr	x20, [sp, #72]
   33448:	cmp	w0, #0x73
   3344c:	cset	w0, eq  // eq = none
   33450:	strh	w0, [x20, #18]
   33454:	b	32d44 <__asan_cplus_demangle_type@@Base+0x34>
   33458:	cmp	w0, #0x69
   3345c:	b.ne	32d40 <__asan_cplus_demangle_type@@Base+0x30>  // b.any
   33460:	ldp	w0, w1, [x19, #40]
   33464:	cmp	w0, w1
   33468:	b.ge	3382c <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   3346c:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   33470:	mov	w2, #0x18                  	// #24
   33474:	ldr	x4, [x19, #32]
   33478:	smull	x2, w0, w2
   3347c:	ldr	x1, [x1, #3736]
   33480:	add	w0, w0, #0x1
   33484:	ldr	w3, [x19, #72]
   33488:	add	x20, x4, x2
   3348c:	add	x1, x1, #0x400
   33490:	mov	w5, #0x27                  	// #39
   33494:	str	wzr, [x20, #4]
   33498:	str	w0, [x19, #40]
   3349c:	add	w0, w3, #0x8
   334a0:	str	w5, [x4, x2]
   334a4:	str	x1, [x20, #8]
   334a8:	str	w0, [x19, #72]
   334ac:	b	32d44 <__asan_cplus_demangle_type@@Base+0x34>
   334b0:	cmp	w0, #0x64
   334b4:	b.ne	32d40 <__asan_cplus_demangle_type@@Base+0x30>  // b.any
   334b8:	ldp	w0, w1, [x19, #40]
   334bc:	cmp	w0, w1
   334c0:	b.ge	3382c <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   334c4:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   334c8:	mov	w2, #0x18                  	// #24
   334cc:	ldr	x4, [x19, #32]
   334d0:	smull	x2, w0, w2
   334d4:	ldr	x1, [x1, #3736]
   334d8:	add	w0, w0, #0x1
   334dc:	ldr	w3, [x19, #72]
   334e0:	add	x20, x4, x2
   334e4:	add	x1, x1, #0x360
   334e8:	mov	w5, #0x27                  	// #39
   334ec:	b	32fe8 <__asan_cplus_demangle_type@@Base+0x2d8>
   334f0:	ldr	w0, [x19, #80]
   334f4:	cbnz	w0, 335b8 <__asan_cplus_demangle_type@@Base+0x8a8>
   334f8:	cbz	x20, 32e18 <__asan_cplus_demangle_type@@Base+0x108>
   334fc:	ldp	w1, w0, [x19, #56]
   33500:	cmp	w1, w0
   33504:	b.ge	32e18 <__asan_cplus_demangle_type@@Base+0x108>  // b.tcont
   33508:	ldr	x3, [x19, #48]
   3350c:	add	w2, w1, #0x1
   33510:	mov	x0, x19
   33514:	str	x20, [x3, w1, sxtw #3]
   33518:	str	w2, [x19, #56]
   3351c:	bl	354a0 <__asan_cplus_demangle_type@@Base+0x2790>
   33520:	mov	x3, x0
   33524:	mov	x2, x20
   33528:	mov	x0, x19
   3352c:	mov	w1, #0x4                   	// #4
   33530:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   33534:	mov	x20, x0
   33538:	str	x0, [sp, #72]
   3353c:	ldp	x21, x22, [sp, #32]
   33540:	b	32e98 <__asan_cplus_demangle_type@@Base+0x188>
   33544:	mov	x20, #0x0                   	// #0
   33548:	b	331f4 <__asan_cplus_demangle_type@@Base+0x4e4>
   3354c:	mov	x0, x19
   33550:	bl	354d0 <__asan_cplus_demangle_type@@Base+0x27c0>
   33554:	str	x0, [sp, #72]
   33558:	mov	x20, x0
   3355c:	cbz	x0, 32d40 <__asan_cplus_demangle_type@@Base+0x30>
   33560:	ldr	w0, [x0]
   33564:	cmp	w0, #0x18
   33568:	b.ne	32e9c <__asan_cplus_demangle_type@@Base+0x18c>  // b.any
   3356c:	b	32d44 <__asan_cplus_demangle_type@@Base+0x34>
   33570:	mov	x0, x19
   33574:	bl	354a0 <__asan_cplus_demangle_type@@Base+0x2790>
   33578:	mov	x2, x20
   3357c:	mov	x3, x0
   33580:	mov	w1, #0x4                   	// #4
   33584:	mov	x0, x19
   33588:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   3358c:	str	x0, [sp, #72]
   33590:	b	3302c <__asan_cplus_demangle_type@@Base+0x31c>
   33594:	ldr	w20, [x19, #76]
   33598:	mov	w0, #0x1                   	// #1
   3359c:	str	w0, [x19, #76]
   335a0:	mov	x0, x19
   335a4:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   335a8:	str	w20, [x19, #76]
   335ac:	mov	x20, x0
   335b0:	cbnz	x0, 331e4 <__asan_cplus_demangle_type@@Base+0x4d4>
   335b4:	b	32d40 <__asan_cplus_demangle_type@@Base+0x30>
   335b8:	ldr	w22, [x19, #56]
   335bc:	mov	x0, x19
   335c0:	ldr	w20, [x19, #72]
   335c4:	str	x23, [sp, #48]
   335c8:	ldr	w23, [x19, #40]
   335cc:	bl	354a0 <__asan_cplus_demangle_type@@Base+0x2790>
   335d0:	ldr	x1, [x19, #24]
   335d4:	ldrb	w1, [x1]
   335d8:	cmp	w1, #0x49
   335dc:	b.eq	33794 <__asan_cplus_demangle_type@@Base+0xa84>  // b.none
   335e0:	str	x21, [x19, #24]
   335e4:	str	w23, [x19, #40]
   335e8:	str	w22, [x19, #56]
   335ec:	str	w20, [x19, #72]
   335f0:	ldp	x21, x22, [sp, #32]
   335f4:	ldr	x23, [sp, #48]
   335f8:	ldr	x20, [sp, #72]
   335fc:	b	32e98 <__asan_cplus_demangle_type@@Base+0x188>
   33600:	ldp	w0, w1, [x19, #40]
   33604:	cmp	w0, w1
   33608:	b.ge	3382c <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   3360c:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   33610:	mov	w2, #0x18                  	// #24
   33614:	ldr	x4, [x19, #32]
   33618:	smull	x2, w0, w2
   3361c:	ldr	x1, [x1, #3736]
   33620:	add	w0, w0, #0x1
   33624:	ldr	w3, [x19, #72]
   33628:	add	x20, x4, x2
   3362c:	add	x1, x1, #0x3e0
   33630:	mov	w5, #0x27                  	// #39
   33634:	b	33494 <__asan_cplus_demangle_type@@Base+0x784>
   33638:	mov	x0, x19
   3363c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   33640:	mov	w2, #0xe                   	// #14
   33644:	add	x1, x1, #0xb98
   33648:	bl	327e8 <__asan_cplus_demangle_fill_name@@Base+0x30>
   3364c:	mov	x20, x0
   33650:	b	32d44 <__asan_cplus_demangle_type@@Base+0x34>
   33654:	ldp	w0, w1, [x19, #40]
   33658:	cmp	w0, w1
   3365c:	b.ge	3382c <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   33660:	mov	w2, #0x18                  	// #24
   33664:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   33668:	ldr	x4, [x19, #32]
   3366c:	smull	x2, w0, w2
   33670:	ldr	w3, [x19, #72]
   33674:	add	w0, w0, #0x1
   33678:	add	x20, x4, x2
   3367c:	mov	w5, #0x27                  	// #39
   33680:	ldr	x1, [x1, #3736]
   33684:	str	wzr, [x20, #4]
   33688:	str	w0, [x19, #40]
   3368c:	add	x1, x1, #0x3a0
   33690:	str	w5, [x4, x2]
   33694:	add	w0, w3, #0x4
   33698:	str	x1, [x20, #8]
   3369c:	str	w0, [x19, #72]
   336a0:	b	32d44 <__asan_cplus_demangle_type@@Base+0x34>
   336a4:	ldp	w0, w1, [x19, #40]
   336a8:	cmp	w0, w1
   336ac:	b.ge	3382c <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   336b0:	mov	w2, #0x18                  	// #24
   336b4:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   336b8:	ldr	x4, [x19, #32]
   336bc:	smull	x2, w0, w2
   336c0:	ldr	w3, [x19, #72]
   336c4:	add	w0, w0, #0x1
   336c8:	add	x20, x4, x2
   336cc:	mov	w5, #0x27                  	// #39
   336d0:	ldr	x1, [x1, #3736]
   336d4:	str	wzr, [x20, #4]
   336d8:	str	w0, [x19, #40]
   336dc:	add	x1, x1, #0x420
   336e0:	str	w5, [x4, x2]
   336e4:	add	w0, w3, #0x11
   336e8:	str	x1, [x20, #8]
   336ec:	str	w0, [x19, #72]
   336f0:	b	32d44 <__asan_cplus_demangle_type@@Base+0x34>
   336f4:	ldp	w0, w1, [x19, #40]
   336f8:	cmp	w0, w1
   336fc:	b.ge	3382c <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   33700:	mov	w2, #0x18                  	// #24
   33704:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   33708:	ldr	x4, [x19, #32]
   3370c:	smull	x2, w0, w2
   33710:	ldr	w3, [x19, #72]
   33714:	add	w0, w0, #0x1
   33718:	add	x20, x4, x2
   3371c:	mov	w5, #0x27                  	// #39
   33720:	ldr	x1, [x1, #3736]
   33724:	str	wzr, [x20, #4]
   33728:	str	w0, [x19, #40]
   3372c:	add	x1, x1, #0x380
   33730:	str	w5, [x4, x2]
   33734:	add	w0, w3, #0xa
   33738:	str	x1, [x20, #8]
   3373c:	str	w0, [x19, #72]
   33740:	b	32d44 <__asan_cplus_demangle_type@@Base+0x34>
   33744:	ldp	w0, w1, [x19, #40]
   33748:	cmp	w0, w1
   3374c:	b.ge	3382c <__asan_cplus_demangle_type@@Base+0xb1c>  // b.tcont
   33750:	mov	w2, #0x18                  	// #24
   33754:	adrp	x1, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   33758:	ldr	x4, [x19, #32]
   3375c:	smull	x2, w0, w2
   33760:	ldr	w3, [x19, #72]
   33764:	add	w0, w0, #0x1
   33768:	add	x20, x4, x2
   3376c:	mov	w5, #0x27                  	// #39
   33770:	ldr	x1, [x1, #3736]
   33774:	str	wzr, [x20, #4]
   33778:	str	w0, [x19, #40]
   3377c:	add	x1, x1, #0x3c0
   33780:	str	w5, [x4, x2]
   33784:	add	w0, w3, #0x7
   33788:	str	x1, [x20, #8]
   3378c:	str	w0, [x19, #72]
   33790:	b	32d44 <__asan_cplus_demangle_type@@Base+0x34>
   33794:	ldr	x2, [sp, #72]
   33798:	cbz	x2, 3380c <__asan_cplus_demangle_type@@Base+0xafc>
   3379c:	ldp	w4, w1, [x19, #56]
   337a0:	cmp	w4, w1
   337a4:	b.ge	3380c <__asan_cplus_demangle_type@@Base+0xafc>  // b.tcont
   337a8:	ldr	x6, [x19, #48]
   337ac:	add	w5, w4, #0x1
   337b0:	mov	x3, x0
   337b4:	mov	w1, #0x4                   	// #4
   337b8:	mov	x0, x19
   337bc:	str	x2, [x6, w4, sxtw #3]
   337c0:	str	w5, [x19, #56]
   337c4:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   337c8:	mov	x20, x0
   337cc:	str	x0, [sp, #72]
   337d0:	ldp	x21, x22, [sp, #32]
   337d4:	ldr	x23, [sp, #48]
   337d8:	b	32e98 <__asan_cplus_demangle_type@@Base+0x188>
   337dc:	stp	x21, x22, [sp, #32]
   337e0:	add	x0, x5, #0x3
   337e4:	ldr	w21, [x19, #76]
   337e8:	mov	w1, #0x1                   	// #1
   337ec:	str	x0, [x19, #24]
   337f0:	str	w1, [x19, #76]
   337f4:	mov	x0, x19
   337f8:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   337fc:	mov	x20, x0
   33800:	str	w21, [x19, #76]
   33804:	ldp	x21, x22, [sp, #32]
   33808:	b	332c8 <__asan_cplus_demangle_type@@Base+0x5b8>
   3380c:	ldp	x21, x22, [sp, #32]
   33810:	ldr	x23, [sp, #48]
   33814:	b	32d40 <__asan_cplus_demangle_type@@Base+0x30>
   33818:	mov	x0, #0x0                   	// #0
   3381c:	stp	x21, x22, [sp, #32]
   33820:	str	x23, [sp, #48]
   33824:	str	wzr, [x0]
   33828:	brk	#0x3e8
   3382c:	mov	x0, #0x0                   	// #0
   33830:	str	xzr, [sp, #72]
   33834:	stp	x21, x22, [sp, #32]
   33838:	str	x23, [sp, #48]
   3383c:	ldr	x0, [x0, #8]
   33840:	brk	#0x3e8
   33844:	nop
   33848:	stp	x29, x30, [sp, #-64]!
   3384c:	mov	x29, sp
   33850:	stp	x19, x20, [sp, #16]
   33854:	mov	x19, x0
   33858:	mov	w0, #0x2e                  	// #46
   3385c:	str	xzr, [sp, #56]
   33860:	ldr	x2, [x19, #24]
   33864:	ldrb	w1, [x2]
   33868:	cmp	w1, #0x45
   3386c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   33870:	ccmp	w1, w0, #0x4, ne  // ne = any
   33874:	b.eq	33908 <__asan_cplus_demangle_type@@Base+0xbf8>  // b.none
   33878:	add	x20, sp, #0x38
   3387c:	stp	x21, x22, [sp, #32]
   33880:	mov	w22, w0
   33884:	mov	w21, #0x4f                  	// #79
   33888:	cmp	w1, #0x52
   3388c:	mov	x0, x19
   33890:	ccmp	w1, w21, #0x4, ne  // ne = any
   33894:	b.ne	338a4 <__asan_cplus_demangle_type@@Base+0xb94>  // b.any
   33898:	ldrb	w1, [x2, #1]
   3389c:	cmp	w1, #0x45
   338a0:	b.eq	338e4 <__asan_cplus_demangle_type@@Base+0xbd4>  // b.none
   338a4:	bl	6750 <__asan_cplus_demangle_type@plt>
   338a8:	mov	x2, x0
   338ac:	mov	x3, #0x0                   	// #0
   338b0:	mov	x0, x19
   338b4:	mov	w1, #0x2e                  	// #46
   338b8:	cbz	x2, 33904 <__asan_cplus_demangle_type@@Base+0xbf4>
   338bc:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   338c0:	str	x0, [x20]
   338c4:	add	x20, x0, #0x10
   338c8:	cbz	x0, 33904 <__asan_cplus_demangle_type@@Base+0xbf4>
   338cc:	ldr	x2, [x19, #24]
   338d0:	ldrb	w1, [x2]
   338d4:	cmp	w1, #0x45
   338d8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   338dc:	ccmp	w1, w22, #0x4, ne  // ne = any
   338e0:	b.ne	33888 <__asan_cplus_demangle_type@@Base+0xb78>  // b.any
   338e4:	ldr	x0, [sp, #56]
   338e8:	cbz	x0, 33904 <__asan_cplus_demangle_type@@Base+0xbf4>
   338ec:	ldr	x1, [x0, #16]
   338f0:	cbz	x1, 33918 <__asan_cplus_demangle_type@@Base+0xc08>
   338f4:	ldp	x21, x22, [sp, #32]
   338f8:	ldp	x19, x20, [sp, #16]
   338fc:	ldp	x29, x30, [sp], #64
   33900:	ret
   33904:	ldp	x21, x22, [sp, #32]
   33908:	mov	x0, #0x0                   	// #0
   3390c:	ldp	x19, x20, [sp, #16]
   33910:	ldp	x29, x30, [sp], #64
   33914:	ret
   33918:	ldr	x1, [x0, #8]
   3391c:	ldr	w2, [x1]
   33920:	cmp	w2, #0x27
   33924:	b.ne	338f4 <__asan_cplus_demangle_type@@Base+0xbe4>  // b.any
   33928:	ldr	x1, [x1, #8]
   3392c:	ldr	w2, [x1, #28]
   33930:	cmp	w2, #0x9
   33934:	b.ne	338f4 <__asan_cplus_demangle_type@@Base+0xbe4>  // b.any
   33938:	ldr	w2, [x1, #8]
   3393c:	ldr	w1, [x19, #72]
   33940:	ldp	x21, x22, [sp, #32]
   33944:	sub	w1, w1, w2
   33948:	str	w1, [x19, #72]
   3394c:	str	xzr, [x0, #8]
   33950:	b	338f8 <__asan_cplus_demangle_type@@Base+0xbe8>
   33954:	nop
   33958:	stp	x29, x30, [sp, #-48]!
   3395c:	mov	x29, sp
   33960:	ldr	x1, [x0, #24]
   33964:	stp	x19, x20, [sp, #16]
   33968:	mov	x19, x0
   3396c:	ldrb	w10, [x1]
   33970:	cbz	w10, 33a3c <__asan_cplus_demangle_type@@Base+0xd2c>
   33974:	add	x2, x1, #0x1
   33978:	str	x2, [x0, #24]
   3397c:	ldrb	w10, [x1, #1]
   33980:	ldrb	w8, [x1]
   33984:	cbnz	w10, 33a44 <__asan_cplus_demangle_type@@Base+0xd34>
   33988:	adrp	x5, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   3398c:	mov	w4, #0x43                  	// #67
   33990:	mov	w2, #0x0                   	// #0
   33994:	mov	w7, #0x18                  	// #24
   33998:	ldr	x5, [x5, #3760]
   3399c:	nop
   339a0:	sub	w1, w4, w2
   339a4:	add	w1, w1, w1, lsr #31
   339a8:	add	w1, w2, w1, asr #1
   339ac:	smull	x3, w1, w7
   339b0:	add	x9, x3, x5
   339b4:	ldr	x3, [x3, x5]
   339b8:	ldrb	w6, [x3]
   339bc:	cmp	w6, w8
   339c0:	b.eq	339e8 <__asan_cplus_demangle_type@@Base+0xcd8>  // b.none
   339c4:	b.ls	33a34 <__asan_cplus_demangle_type@@Base+0xd24>  // b.plast
   339c8:	mov	w4, w1
   339cc:	cmp	w2, w4
   339d0:	b.ne	339a0 <__asan_cplus_demangle_type@@Base+0xc90>  // b.any
   339d4:	mov	x20, #0x0                   	// #0
   339d8:	mov	x0, x20
   339dc:	ldp	x19, x20, [sp, #16]
   339e0:	ldp	x29, x30, [sp], #48
   339e4:	ret
   339e8:	ldrb	w3, [x3, #1]
   339ec:	cmp	w3, w10
   339f0:	b.ne	339c4 <__asan_cplus_demangle_type@@Base+0xcb4>  // b.any
   339f4:	ldp	w0, w1, [x19, #40]
   339f8:	cmp	w0, w1
   339fc:	b.ge	339d4 <__asan_cplus_demangle_type@@Base+0xcc4>  // b.tcont
   33a00:	ldr	x1, [x19, #32]
   33a04:	smull	x7, w0, w7
   33a08:	add	w0, w0, #0x1
   33a0c:	mov	w2, #0x32                  	// #50
   33a10:	add	x20, x1, x7
   33a14:	str	wzr, [x20, #4]
   33a18:	str	w0, [x19, #40]
   33a1c:	mov	x0, x20
   33a20:	str	w2, [x1, x7]
   33a24:	str	x9, [x20, #8]
   33a28:	ldp	x19, x20, [sp, #16]
   33a2c:	ldp	x29, x30, [sp], #48
   33a30:	ret
   33a34:	add	w2, w1, #0x1
   33a38:	b	339cc <__asan_cplus_demangle_type@@Base+0xcbc>
   33a3c:	mov	w8, #0x0                   	// #0
   33a40:	b	33988 <__asan_cplus_demangle_type@@Base+0xc78>
   33a44:	str	x21, [sp, #32]
   33a48:	add	x2, x1, #0x2
   33a4c:	str	x2, [x0, #24]
   33a50:	cmp	w8, #0x76
   33a54:	ldrb	w10, [x1, #1]
   33a58:	b.ne	33a74 <__asan_cplus_demangle_type@@Base+0xd64>  // b.any
   33a5c:	sub	w21, w10, #0x30
   33a60:	and	w1, w21, #0xff
   33a64:	cmp	w1, #0x9
   33a68:	b.ls	33ad0 <__asan_cplus_demangle_type@@Base+0xdc0>  // b.plast
   33a6c:	ldr	x21, [sp, #32]
   33a70:	b	33988 <__asan_cplus_demangle_type@@Base+0xc78>
   33a74:	cmp	w10, #0x76
   33a78:	mov	w1, #0x63                  	// #99
   33a7c:	ccmp	w8, w1, #0x0, eq  // eq = none
   33a80:	b.ne	33a6c <__asan_cplus_demangle_type@@Base+0xd5c>  // b.any
   33a84:	ldp	w1, w21, [x0, #76]
   33a88:	cmp	w1, #0x0
   33a8c:	cset	w1, eq  // eq = none
   33a90:	str	w1, [x0, #80]
   33a94:	bl	6750 <__asan_cplus_demangle_type@plt>
   33a98:	mov	x2, x0
   33a9c:	ldr	w1, [x19, #80]
   33aa0:	mov	x3, #0x0                   	// #0
   33aa4:	cbz	w1, 33b14 <__asan_cplus_demangle_type@@Base+0xe04>
   33aa8:	mov	x0, x19
   33aac:	mov	w1, #0x35                  	// #53
   33ab0:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   33ab4:	mov	x20, x0
   33ab8:	str	w21, [x19, #80]
   33abc:	mov	x0, x20
   33ac0:	ldp	x19, x20, [sp, #16]
   33ac4:	ldr	x21, [sp, #32]
   33ac8:	ldp	x29, x30, [sp], #48
   33acc:	ret
   33ad0:	bl	32858 <__asan_cplus_demangle_fill_name@@Base+0xa0>
   33ad4:	mov	x2, x0
   33ad8:	ldp	w20, w0, [x19, #40]
   33adc:	cmp	w20, w0
   33ae0:	b.ge	33b28 <__asan_cplus_demangle_type@@Base+0xe18>  // b.tcont
   33ae4:	ldr	x1, [x19, #32]
   33ae8:	mov	w3, #0x18                  	// #24
   33aec:	add	w0, w20, #0x1
   33af0:	smaddl	x20, w20, w3, x1
   33af4:	str	wzr, [x20, #4]
   33af8:	str	w0, [x19, #40]
   33afc:	mov	w1, w21
   33b00:	mov	x0, x20
   33b04:	bl	6b20 <__asan_cplus_demangle_fill_extended_operator@plt>
   33b08:	ldr	x21, [sp, #32]
   33b0c:	cbnz	w0, 339d8 <__asan_cplus_demangle_type@@Base+0xcc8>
   33b10:	b	339d4 <__asan_cplus_demangle_type@@Base+0xcc4>
   33b14:	mov	x0, x19
   33b18:	mov	w1, #0x34                  	// #52
   33b1c:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   33b20:	mov	x20, x0
   33b24:	b	33ab8 <__asan_cplus_demangle_type@@Base+0xda8>
   33b28:	mov	x20, #0x0                   	// #0
   33b2c:	b	33afc <__asan_cplus_demangle_type@@Base+0xdec>
   33b30:	stp	x29, x30, [sp, #-48]!
   33b34:	mov	x29, sp
   33b38:	ldr	x4, [x0, #24]
   33b3c:	stp	x19, x20, [sp, #16]
   33b40:	mov	x19, x0
   33b44:	ldrb	w3, [x4]
   33b48:	sub	w1, w3, #0x30
   33b4c:	and	w1, w1, #0xff
   33b50:	cmp	w1, #0x9
   33b54:	b.ls	33c64 <__asan_cplus_demangle_type@@Base+0xf54>  // b.plast
   33b58:	sub	w1, w3, #0x61
   33b5c:	and	w1, w1, #0xff
   33b60:	cmp	w1, #0x19
   33b64:	b.hi	33bac <__asan_cplus_demangle_type@@Base+0xe9c>  // b.pmore
   33b68:	cmp	w3, #0x6f
   33b6c:	b.eq	33cc4 <__asan_cplus_demangle_type@@Base+0xfb4>  // b.none
   33b70:	mov	x0, x19
   33b74:	bl	33958 <__asan_cplus_demangle_type@@Base+0xc48>
   33b78:	mov	x20, x0
   33b7c:	cbz	x0, 33b8c <__asan_cplus_demangle_type@@Base+0xe7c>
   33b80:	ldr	w0, [x0]
   33b84:	cmp	w0, #0x32
   33b88:	b.eq	33d68 <__asan_cplus_demangle_type@@Base+0x1058>  // b.none
   33b8c:	ldr	x0, [x19, #24]
   33b90:	ldrb	w1, [x0]
   33b94:	cmp	w1, #0x42
   33b98:	b.eq	33c7c <__asan_cplus_demangle_type@@Base+0xf6c>  // b.none
   33b9c:	mov	x0, x20
   33ba0:	ldp	x19, x20, [sp, #16]
   33ba4:	ldp	x29, x30, [sp], #48
   33ba8:	ret
   33bac:	sub	w1, w3, #0x43
   33bb0:	and	w1, w1, #0xff
   33bb4:	cmp	w1, #0x1
   33bb8:	b.ls	33cdc <__asan_cplus_demangle_type@@Base+0xfcc>  // b.plast
   33bbc:	cmp	w3, #0x4c
   33bc0:	b.eq	33c90 <__asan_cplus_demangle_type@@Base+0xf80>  // b.none
   33bc4:	cmp	w3, #0x55
   33bc8:	b.ne	33cb0 <__asan_cplus_demangle_type@@Base+0xfa0>  // b.any
   33bcc:	ldrb	w1, [x4, #1]
   33bd0:	cmp	w1, #0x6c
   33bd4:	b.eq	33df0 <__asan_cplus_demangle_type@@Base+0x10e0>  // b.none
   33bd8:	cmp	w1, #0x74
   33bdc:	b.ne	33cb0 <__asan_cplus_demangle_type@@Base+0xfa0>  // b.any
   33be0:	add	x1, x4, #0x1
   33be4:	str	x1, [x0, #24]
   33be8:	mov	x20, #0x0                   	// #0
   33bec:	ldrb	w1, [x4, #1]
   33bf0:	cmp	w1, #0x74
   33bf4:	b.ne	33b94 <__asan_cplus_demangle_type@@Base+0xe84>  // b.any
   33bf8:	add	x4, x4, #0x2
   33bfc:	str	x4, [x0, #24]
   33c00:	bl	2c9e0 <__asan_backtrace_create_state@@Base+0x450>
   33c04:	tbnz	w0, #31, 33b8c <__asan_cplus_demangle_type@@Base+0xe7c>
   33c08:	ldp	w1, w2, [x19, #40]
   33c0c:	cmp	w1, w2
   33c10:	b.ge	33d58 <__asan_cplus_demangle_type@@Base+0x1048>  // b.tcont
   33c14:	ldp	x7, x3, [x19, #24]
   33c18:	mov	w2, #0x18                  	// #24
   33c1c:	add	w6, w1, #0x1
   33c20:	mov	w4, #0x48                  	// #72
   33c24:	smull	x1, w1, w2
   33c28:	sxtw	x0, w0
   33c2c:	ldp	w2, w5, [x19, #56]
   33c30:	add	x20, x3, x1
   33c34:	cmp	w2, w5
   33c38:	str	wzr, [x20, #4]
   33c3c:	str	w6, [x19, #40]
   33c40:	str	w4, [x3, x1]
   33c44:	str	x0, [x20, #8]
   33c48:	b.ge	33f8c <__asan_cplus_demangle_type@@Base+0x127c>  // b.tcont
   33c4c:	ldr	x1, [x19, #48]
   33c50:	add	w0, w2, #0x1
   33c54:	str	x20, [x1, w2, sxtw #3]
   33c58:	str	w0, [x19, #56]
   33c5c:	ldrb	w1, [x7]
   33c60:	b	33b94 <__asan_cplus_demangle_type@@Base+0xe84>
   33c64:	bl	32858 <__asan_cplus_demangle_fill_name@@Base+0xa0>
   33c68:	mov	x20, x0
   33c6c:	ldr	x1, [x19, #24]
   33c70:	ldrb	w1, [x1]
   33c74:	cmp	w1, #0x42
   33c78:	b.ne	33b9c <__asan_cplus_demangle_type@@Base+0xe8c>  // b.any
   33c7c:	mov	x1, x20
   33c80:	mov	x0, x19
   33c84:	ldp	x19, x20, [sp, #16]
   33c88:	ldp	x29, x30, [sp], #48
   33c8c:	b	32978 <__asan_cplus_demangle_fill_name@@Base+0x1c0>
   33c90:	add	x4, x4, #0x1
   33c94:	str	x4, [x0, #24]
   33c98:	bl	32858 <__asan_cplus_demangle_fill_name@@Base+0xa0>
   33c9c:	mov	x20, x0
   33ca0:	cbz	x0, 33cb0 <__asan_cplus_demangle_type@@Base+0xfa0>
   33ca4:	mov	x0, x19
   33ca8:	bl	2cbd8 <__asan_backtrace_create_state@@Base+0x648>
   33cac:	cbnz	w0, 33b8c <__asan_cplus_demangle_type@@Base+0xe7c>
   33cb0:	mov	x20, #0x0                   	// #0
   33cb4:	mov	x0, x20
   33cb8:	ldp	x19, x20, [sp, #16]
   33cbc:	ldp	x29, x30, [sp], #48
   33cc0:	ret
   33cc4:	ldrb	w0, [x4, #1]
   33cc8:	cmp	w0, #0x6e
   33ccc:	b.ne	33b70 <__asan_cplus_demangle_type@@Base+0xe60>  // b.any
   33cd0:	add	x4, x4, #0x2
   33cd4:	str	x4, [x19, #24]
   33cd8:	b	33b70 <__asan_cplus_demangle_type@@Base+0xe60>
   33cdc:	ldr	x2, [x0, #64]
   33ce0:	cbz	x2, 33cf4 <__asan_cplus_demangle_type@@Base+0xfe4>
   33ce4:	ldr	w0, [x2]
   33ce8:	cbz	w0, 33dc0 <__asan_cplus_demangle_type@@Base+0x10b0>
   33cec:	cmp	w0, #0x18
   33cf0:	b.eq	33dc0 <__asan_cplus_demangle_type@@Base+0x10b0>  // b.none
   33cf4:	cmp	w3, #0x43
   33cf8:	b.eq	33ea0 <__asan_cplus_demangle_type@@Base+0x1190>  // b.none
   33cfc:	ldrb	w0, [x4, #1]
   33d00:	cmp	w0, #0x32
   33d04:	b.eq	33f84 <__asan_cplus_demangle_type@@Base+0x1274>  // b.none
   33d08:	b.hi	33f10 <__asan_cplus_demangle_type@@Base+0x1200>  // b.pmore
   33d0c:	cmp	w0, #0x30
   33d10:	b.eq	33f30 <__asan_cplus_demangle_type@@Base+0x1220>  // b.none
   33d14:	cmp	w0, #0x31
   33d18:	mov	w1, #0x2                   	// #2
   33d1c:	b.ne	33f24 <__asan_cplus_demangle_type@@Base+0x1214>  // b.any
   33d20:	ldp	w20, w0, [x19, #40]
   33d24:	add	x4, x4, #0x2
   33d28:	str	x4, [x19, #24]
   33d2c:	cmp	w20, w0
   33d30:	b.ge	33f98 <__asan_cplus_demangle_type@@Base+0x1288>  // b.tcont
   33d34:	ldr	x3, [x19, #32]
   33d38:	mov	w4, #0x18                  	// #24
   33d3c:	add	w0, w20, #0x1
   33d40:	smaddl	x20, w20, w4, x3
   33d44:	str	wzr, [x20, #4]
   33d48:	str	w0, [x19, #40]
   33d4c:	mov	x0, x20
   33d50:	bl	6d20 <__asan_cplus_demangle_fill_dtor@plt>
   33d54:	cbnz	w0, 33b8c <__asan_cplus_demangle_type@@Base+0xe7c>
   33d58:	ldr	x0, [x19, #24]
   33d5c:	mov	x20, #0x0                   	// #0
   33d60:	ldrb	w1, [x0]
   33d64:	b	33b94 <__asan_cplus_demangle_type@@Base+0xe84>
   33d68:	ldr	x3, [x20, #8]
   33d6c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   33d70:	ldr	w2, [x19, #72]
   33d74:	add	x1, x1, #0xba8
   33d78:	ldr	x0, [x3]
   33d7c:	add	w2, w2, #0x7
   33d80:	ldr	w3, [x3, #16]
   33d84:	add	w2, w2, w3
   33d88:	str	w2, [x19, #72]
   33d8c:	bl	6b30 <__asan_internal_strcmp@plt>
   33d90:	cbnz	w0, 33b8c <__asan_cplus_demangle_type@@Base+0xe7c>
   33d94:	mov	x0, x19
   33d98:	bl	32858 <__asan_cplus_demangle_fill_name@@Base+0xa0>
   33d9c:	mov	x2, x20
   33da0:	mov	x3, x0
   33da4:	mov	w1, #0x37                  	// #55
   33da8:	mov	x0, x19
   33dac:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   33db0:	mov	x20, x0
   33db4:	ldr	x1, [x19, #24]
   33db8:	ldrb	w1, [x1]
   33dbc:	b	33b94 <__asan_cplus_demangle_type@@Base+0xe84>
   33dc0:	ldr	w1, [x2, #16]
   33dc4:	ldr	w0, [x19, #72]
   33dc8:	add	w0, w0, w1
   33dcc:	str	w0, [x19, #72]
   33dd0:	ldrb	w1, [x4]
   33dd4:	cmp	w1, #0x43
   33dd8:	mov	w3, w1
   33ddc:	b.eq	33ea0 <__asan_cplus_demangle_type@@Base+0x1190>  // b.none
   33de0:	cmp	w1, #0x44
   33de4:	b.eq	33cfc <__asan_cplus_demangle_type@@Base+0xfec>  // b.none
   33de8:	mov	x20, #0x0                   	// #0
   33dec:	b	33b94 <__asan_cplus_demangle_type@@Base+0xe84>
   33df0:	add	x1, x4, #0x1
   33df4:	str	x1, [x0, #24]
   33df8:	mov	x20, #0x0                   	// #0
   33dfc:	ldrb	w1, [x4, #1]
   33e00:	cmp	w1, #0x6c
   33e04:	b.ne	33b94 <__asan_cplus_demangle_type@@Base+0xe84>  // b.any
   33e08:	add	x4, x4, #0x2
   33e0c:	str	x4, [x0, #24]
   33e10:	bl	33848 <__asan_cplus_demangle_type@@Base+0xb38>
   33e14:	mov	x11, x0
   33e18:	ldr	x0, [x19, #24]
   33e1c:	ldrb	w1, [x0]
   33e20:	cbz	x11, 33b94 <__asan_cplus_demangle_type@@Base+0xe84>
   33e24:	cmp	w1, #0x45
   33e28:	b.ne	33b94 <__asan_cplus_demangle_type@@Base+0xe84>  // b.any
   33e2c:	add	x0, x0, #0x1
   33e30:	str	x0, [x19, #24]
   33e34:	mov	x0, x19
   33e38:	bl	2c9e0 <__asan_backtrace_create_state@@Base+0x450>
   33e3c:	tbnz	w0, #31, 33d58 <__asan_cplus_demangle_type@@Base+0x1048>
   33e40:	ldp	w1, w2, [x19, #40]
   33e44:	ldr	x4, [x19, #24]
   33e48:	cmp	w1, w2
   33e4c:	b.ge	33fa0 <__asan_cplus_demangle_type@@Base+0x1290>  // b.tcont
   33e50:	mov	w2, #0x18                  	// #24
   33e54:	add	w6, w1, #0x1
   33e58:	ldr	x3, [x19, #32]
   33e5c:	smull	x1, w1, w2
   33e60:	ldp	w2, w7, [x19, #56]
   33e64:	add	x20, x3, x1
   33e68:	mov	w5, #0x46                  	// #70
   33e6c:	cmp	w2, w7
   33e70:	str	wzr, [x20, #4]
   33e74:	str	w6, [x19, #40]
   33e78:	str	w5, [x3, x1]
   33e7c:	str	x11, [x20, #8]
   33e80:	str	w0, [x20, #16]
   33e84:	b.ge	33fa0 <__asan_cplus_demangle_type@@Base+0x1290>  // b.tcont
   33e88:	ldr	x1, [x19, #48]
   33e8c:	add	w0, w2, #0x1
   33e90:	str	x20, [x1, w2, sxtw #3]
   33e94:	str	w0, [x19, #56]
   33e98:	ldrb	w1, [x4]
   33e9c:	b	33b94 <__asan_cplus_demangle_type@@Base+0xe84>
   33ea0:	str	x21, [sp, #32]
   33ea4:	ldrb	w0, [x4, #1]
   33ea8:	cmp	w0, #0x49
   33eac:	b.eq	33f40 <__asan_cplus_demangle_type@@Base+0x1230>  // b.none
   33eb0:	sub	w1, w0, #0x31
   33eb4:	and	w1, w1, #0xff
   33eb8:	cmp	w1, #0x4
   33ebc:	b.hi	33f78 <__asan_cplus_demangle_type@@Base+0x1268>  // b.pmore
   33ec0:	sub	w21, w0, #0x30
   33ec4:	add	x4, x4, #0x2
   33ec8:	str	x4, [x19, #24]
   33ecc:	ldp	w20, w0, [x19, #40]
   33ed0:	cmp	w20, w0
   33ed4:	b.ge	33fc0 <__asan_cplus_demangle_type@@Base+0x12b0>  // b.tcont
   33ed8:	ldr	x1, [x19, #32]
   33edc:	mov	w3, #0x18                  	// #24
   33ee0:	add	w0, w20, #0x1
   33ee4:	smaddl	x20, w20, w3, x1
   33ee8:	str	wzr, [x20, #4]
   33eec:	str	w0, [x19, #40]
   33ef0:	mov	w1, w21
   33ef4:	mov	x0, x20
   33ef8:	bl	6b90 <__asan_cplus_demangle_fill_ctor@plt>
   33efc:	cbz	w0, 33fac <__asan_cplus_demangle_type@@Base+0x129c>
   33f00:	ldr	x0, [x19, #24]
   33f04:	ldr	x21, [sp, #32]
   33f08:	ldrb	w1, [x0]
   33f0c:	b	33b94 <__asan_cplus_demangle_type@@Base+0xe84>
   33f10:	cmp	w0, #0x34
   33f14:	b.eq	33f38 <__asan_cplus_demangle_type@@Base+0x1228>  // b.none
   33f18:	cmp	w0, #0x35
   33f1c:	mov	w1, #0x5                   	// #5
   33f20:	b.eq	33d20 <__asan_cplus_demangle_type@@Base+0x1010>  // b.none
   33f24:	mov	w1, w3
   33f28:	mov	x20, #0x0                   	// #0
   33f2c:	b	33b94 <__asan_cplus_demangle_type@@Base+0xe84>
   33f30:	mov	w1, #0x1                   	// #1
   33f34:	b	33d20 <__asan_cplus_demangle_type@@Base+0x1010>
   33f38:	mov	w1, #0x4                   	// #4
   33f3c:	b	33d20 <__asan_cplus_demangle_type@@Base+0x1010>
   33f40:	add	x0, x4, #0x1
   33f44:	str	x0, [x19, #24]
   33f48:	ldrb	w0, [x4, #2]
   33f4c:	sub	w1, w0, #0x31
   33f50:	and	w1, w1, #0xff
   33f54:	cmp	w1, #0x4
   33f58:	b.hi	33fc8 <__asan_cplus_demangle_type@@Base+0x12b8>  // b.pmore
   33f5c:	add	x4, x4, #0x3
   33f60:	str	x4, [x19, #24]
   33f64:	sub	w21, w0, #0x30
   33f68:	mov	x0, x19
   33f6c:	bl	6750 <__asan_cplus_demangle_type@plt>
   33f70:	ldr	x2, [x19, #64]
   33f74:	b	33ecc <__asan_cplus_demangle_type@@Base+0x11bc>
   33f78:	mov	x20, #0x0                   	// #0
   33f7c:	ldr	x21, [sp, #32]
   33f80:	b	33cb4 <__asan_cplus_demangle_type@@Base+0xfa4>
   33f84:	mov	w1, #0x3                   	// #3
   33f88:	b	33d20 <__asan_cplus_demangle_type@@Base+0x1010>
   33f8c:	ldrb	w1, [x7]
   33f90:	mov	x20, #0x0                   	// #0
   33f94:	b	33b94 <__asan_cplus_demangle_type@@Base+0xe84>
   33f98:	mov	x20, #0x0                   	// #0
   33f9c:	b	33d4c <__asan_cplus_demangle_type@@Base+0x103c>
   33fa0:	ldrb	w1, [x4]
   33fa4:	mov	x20, #0x0                   	// #0
   33fa8:	b	33b94 <__asan_cplus_demangle_type@@Base+0xe84>
   33fac:	ldr	x0, [x19, #24]
   33fb0:	mov	x20, #0x0                   	// #0
   33fb4:	ldr	x21, [sp, #32]
   33fb8:	ldrb	w1, [x0]
   33fbc:	b	33b94 <__asan_cplus_demangle_type@@Base+0xe84>
   33fc0:	mov	x20, #0x0                   	// #0
   33fc4:	b	33ef0 <__asan_cplus_demangle_type@@Base+0x11e0>
   33fc8:	ldrb	w1, [x4, #1]
   33fcc:	mov	x20, #0x0                   	// #0
   33fd0:	ldr	x21, [sp, #32]
   33fd4:	b	33b94 <__asan_cplus_demangle_type@@Base+0xe84>
   33fd8:	stp	x29, x30, [sp, #-32]!
   33fdc:	mov	x29, sp
   33fe0:	stp	x19, x20, [sp, #16]
   33fe4:	mov	x19, x0
   33fe8:	ldr	x0, [x0, #24]
   33fec:	ldrb	w2, [x0]
   33ff0:	cmp	w2, #0x4a
   33ff4:	b.eq	34058 <__asan_cplus_demangle_type@@Base+0x1348>  // b.none
   33ff8:	cbz	w1, 34034 <__asan_cplus_demangle_type@@Base+0x1324>
   33ffc:	mov	x0, x19
   34000:	bl	6750 <__asan_cplus_demangle_type@plt>
   34004:	mov	x20, x0
   34008:	cbz	x0, 34048 <__asan_cplus_demangle_type@@Base+0x1338>
   3400c:	mov	x0, x19
   34010:	bl	33848 <__asan_cplus_demangle_type@@Base+0xb38>
   34014:	mov	x3, x0
   34018:	cbz	x0, 34048 <__asan_cplus_demangle_type@@Base+0x1338>
   3401c:	mov	x2, x20
   34020:	mov	x0, x19
   34024:	ldp	x19, x20, [sp, #16]
   34028:	mov	w1, #0x29                  	// #41
   3402c:	ldp	x29, x30, [sp], #32
   34030:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34034:	mov	x0, x19
   34038:	mov	x20, #0x0                   	// #0
   3403c:	bl	33848 <__asan_cplus_demangle_type@@Base+0xb38>
   34040:	mov	x3, x0
   34044:	cbnz	x0, 3401c <__asan_cplus_demangle_type@@Base+0x130c>
   34048:	mov	x0, #0x0                   	// #0
   3404c:	ldp	x19, x20, [sp, #16]
   34050:	ldp	x29, x30, [sp], #32
   34054:	ret
   34058:	add	x0, x0, #0x1
   3405c:	str	x0, [x19, #24]
   34060:	b	33ffc <__asan_cplus_demangle_type@@Base+0x12ec>
   34064:	nop
   34068:	stp	x29, x30, [sp, #-32]!
   3406c:	mov	x29, sp
   34070:	str	x19, [sp, #16]
   34074:	mov	x19, x0
   34078:	ldr	w0, [x0, #16]
   3407c:	tbnz	w0, #18, 340b8 <__asan_cplus_demangle_type@@Base+0x13a8>
   34080:	ldr	w1, [x19, #84]
   34084:	cmp	w1, #0x800
   34088:	b.hi	340c8 <__asan_cplus_demangle_type@@Base+0x13b8>  // b.pmore
   3408c:	ldr	x2, [x19, #24]
   34090:	add	w0, w1, #0x1
   34094:	str	w0, [x19, #84]
   34098:	mov	x0, #0x0                   	// #0
   3409c:	ldrb	w3, [x2]
   340a0:	cmp	w3, #0x46
   340a4:	b.eq	340d8 <__asan_cplus_demangle_type@@Base+0x13c8>  // b.none
   340a8:	str	w1, [x19, #84]
   340ac:	ldr	x19, [sp, #16]
   340b0:	ldp	x29, x30, [sp], #32
   340b4:	ret
   340b8:	ldr	x2, [x19, #24]
   340bc:	ldrb	w0, [x2]
   340c0:	cmp	w0, #0x46
   340c4:	b.eq	340d8 <__asan_cplus_demangle_type@@Base+0x13c8>  // b.none
   340c8:	mov	x0, #0x0                   	// #0
   340cc:	ldr	x19, [sp, #16]
   340d0:	ldp	x29, x30, [sp], #32
   340d4:	ret
   340d8:	add	x4, x2, #0x1
   340dc:	str	x4, [x19, #24]
   340e0:	add	x3, x2, #0x2
   340e4:	mov	w1, #0x1                   	// #1
   340e8:	ldrb	w2, [x2, #1]
   340ec:	mov	x0, x19
   340f0:	cmp	w2, #0x59
   340f4:	csel	x2, x3, x4, eq  // eq = none
   340f8:	str	x2, [x19, #24]
   340fc:	bl	33fd8 <__asan_cplus_demangle_type@@Base+0x12c8>
   34100:	mov	x1, x0
   34104:	mov	x0, x19
   34108:	bl	2c6b0 <__asan_backtrace_create_state@@Base+0x120>
   3410c:	ldr	x1, [x19, #24]
   34110:	ldrb	w2, [x1]
   34114:	cmp	w2, #0x45
   34118:	b.eq	34138 <__asan_cplus_demangle_type@@Base+0x1428>  // b.none
   3411c:	mov	x0, #0x0                   	// #0
   34120:	ldr	w1, [x19, #16]
   34124:	tbnz	w1, #18, 340cc <__asan_cplus_demangle_type@@Base+0x13bc>
   34128:	ldr	w1, [x19, #84]
   3412c:	sub	w1, w1, #0x1
   34130:	str	w1, [x19, #84]
   34134:	b	340ac <__asan_cplus_demangle_type@@Base+0x139c>
   34138:	add	x1, x1, #0x1
   3413c:	str	x1, [x19, #24]
   34140:	b	34120 <__asan_cplus_demangle_type@@Base+0x1410>
   34144:	nop
   34148:	stp	x29, x30, [sp, #-112]!
   3414c:	mov	x29, sp
   34150:	ldr	x2, [x0, #24]
   34154:	stp	x19, x20, [sp, #16]
   34158:	mov	x19, x0
   3415c:	str	xzr, [sp, #104]
   34160:	ldrb	w3, [x2]
   34164:	cmp	w3, w1, uxtb
   34168:	b.eq	347e4 <__asan_cplus_demangle_type@@Base+0x1ad4>  // b.none
   3416c:	stp	x21, x22, [sp, #32]
   34170:	add	x21, sp, #0x68
   34174:	mov	w22, #0x1                   	// #1
   34178:	stp	x23, x24, [sp, #48]
   3417c:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   34180:	and	w23, w1, #0xff
   34184:	add	x24, x24, #0xac0
   34188:	stp	x25, x26, [sp, #64]
   3418c:	adrp	x25, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   34190:	add	x25, x25, #0x9d8
   34194:	stp	x27, x28, [sp, #80]
   34198:	ldr	w26, [x19, #76]
   3419c:	str	w22, [x19, #76]
   341a0:	ldrb	w0, [x2]
   341a4:	cmp	w0, #0x4c
   341a8:	b.eq	3434c <__asan_cplus_demangle_type@@Base+0x163c>  // b.none
   341ac:	cmp	w0, #0x54
   341b0:	b.eq	343dc <__asan_cplus_demangle_type@@Base+0x16cc>  // b.none
   341b4:	cmp	w0, #0x73
   341b8:	b.eq	3430c <__asan_cplus_demangle_type@@Base+0x15fc>  // b.none
   341bc:	cmp	w0, #0x66
   341c0:	b.ne	34224 <__asan_cplus_demangle_type@@Base+0x1514>  // b.any
   341c4:	ldrb	w0, [x2, #1]
   341c8:	cmp	w0, #0x70
   341cc:	b.eq	343ec <__asan_cplus_demangle_type@@Base+0x16dc>  // b.none
   341d0:	mov	x0, x19
   341d4:	bl	33958 <__asan_cplus_demangle_type@@Base+0xc48>
   341d8:	mov	x20, x0
   341dc:	cbz	x0, 34200 <__asan_cplus_demangle_type@@Base+0x14f0>
   341e0:	ldr	w0, [x0]
   341e4:	cmp	w0, #0x32
   341e8:	b.eq	344d8 <__asan_cplus_demangle_type@@Base+0x17c8>  // b.none
   341ec:	cmp	w0, #0x33
   341f0:	b.eq	3456c <__asan_cplus_demangle_type@@Base+0x185c>  // b.none
   341f4:	cmp	w0, #0x34
   341f8:	b.eq	346dc <__asan_cplus_demangle_type@@Base+0x19cc>  // b.none
   341fc:	mov	x20, #0x0                   	// #0
   34200:	str	w26, [x19, #76]
   34204:	mov	x0, x20
   34208:	ldp	x19, x20, [sp, #16]
   3420c:	ldp	x21, x22, [sp, #32]
   34210:	ldp	x23, x24, [sp, #48]
   34214:	ldp	x25, x26, [sp, #64]
   34218:	ldp	x27, x28, [sp, #80]
   3421c:	ldp	x29, x30, [sp], #112
   34220:	ret
   34224:	sub	w1, w0, #0x30
   34228:	and	w1, w1, #0xff
   3422c:	cmp	w1, #0x9
   34230:	b.hi	3435c <__asan_cplus_demangle_type@@Base+0x164c>  // b.pmore
   34234:	mov	x0, x19
   34238:	bl	33b30 <__asan_cplus_demangle_type@@Base+0xe20>
   3423c:	mov	x20, x0
   34240:	cbz	x0, 34200 <__asan_cplus_demangle_type@@Base+0x14f0>
   34244:	ldr	x0, [x19, #24]
   34248:	ldrb	w1, [x0]
   3424c:	cmp	w1, #0x49
   34250:	b.eq	342b4 <__asan_cplus_demangle_type@@Base+0x15a4>  // b.none
   34254:	str	w26, [x19, #76]
   34258:	mov	x2, x20
   3425c:	mov	x0, x19
   34260:	mov	x3, #0x0                   	// #0
   34264:	mov	w1, #0x2e                  	// #46
   34268:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   3426c:	str	x0, [x21]
   34270:	cbz	x0, 342e8 <__asan_cplus_demangle_type@@Base+0x15d8>
   34274:	ldr	x2, [x19, #24]
   34278:	add	x21, x0, #0x10
   3427c:	ldrb	w0, [x2]
   34280:	cmp	w0, w23
   34284:	b.ne	34198 <__asan_cplus_demangle_type@@Base+0x1488>  // b.any
   34288:	ldr	x20, [sp, #104]
   3428c:	add	x2, x2, #0x1
   34290:	str	x2, [x19, #24]
   34294:	mov	x0, x20
   34298:	ldp	x19, x20, [sp, #16]
   3429c:	ldp	x21, x22, [sp, #32]
   342a0:	ldp	x23, x24, [sp, #48]
   342a4:	ldp	x25, x26, [sp, #64]
   342a8:	ldp	x27, x28, [sp, #80]
   342ac:	ldp	x29, x30, [sp], #112
   342b0:	ret
   342b4:	add	x0, x0, #0x1
   342b8:	str	x0, [x19, #24]
   342bc:	mov	x0, x19
   342c0:	bl	353d8 <__asan_cplus_demangle_type@@Base+0x26c8>
   342c4:	mov	x3, x0
   342c8:	mov	x2, x20
   342cc:	mov	x0, x19
   342d0:	mov	w1, #0x4                   	// #4
   342d4:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   342d8:	mov	x20, x0
   342dc:	nop
   342e0:	str	w26, [x19, #76]
   342e4:	cbnz	x20, 34258 <__asan_cplus_demangle_type@@Base+0x1548>
   342e8:	mov	x20, #0x0                   	// #0
   342ec:	mov	x0, x20
   342f0:	ldp	x19, x20, [sp, #16]
   342f4:	ldp	x21, x22, [sp, #32]
   342f8:	ldp	x23, x24, [sp, #48]
   342fc:	ldp	x25, x26, [sp, #64]
   34300:	ldp	x27, x28, [sp, #80]
   34304:	ldp	x29, x30, [sp], #112
   34308:	ret
   3430c:	ldrb	w0, [x2, #1]
   34310:	cmp	w0, #0x72
   34314:	b.eq	34464 <__asan_cplus_demangle_type@@Base+0x1754>  // b.none
   34318:	cmp	w0, #0x70
   3431c:	b.ne	341d0 <__asan_cplus_demangle_type@@Base+0x14c0>  // b.any
   34320:	add	x2, x2, #0x2
   34324:	str	x2, [x19, #24]
   34328:	mov	x0, x19
   3432c:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   34330:	mov	x2, x0
   34334:	mov	x3, #0x0                   	// #0
   34338:	mov	x0, x19
   3433c:	mov	w1, #0x4b                  	// #75
   34340:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34344:	mov	x20, x0
   34348:	b	342e0 <__asan_cplus_demangle_type@@Base+0x15d0>
   3434c:	mov	x0, x19
   34350:	bl	363a0 <__asan_cplus_demangle_mangled_name@@Base+0x1a8>
   34354:	mov	x20, x0
   34358:	b	342e0 <__asan_cplus_demangle_type@@Base+0x15d0>
   3435c:	cmp	w0, #0x6f
   34360:	b.ne	3437c <__asan_cplus_demangle_type@@Base+0x166c>  // b.any
   34364:	ldrb	w0, [x2, #1]
   34368:	cmp	w0, #0x6e
   3436c:	b.ne	341d0 <__asan_cplus_demangle_type@@Base+0x14c0>  // b.any
   34370:	add	x2, x2, #0x2
   34374:	str	x2, [x19, #24]
   34378:	b	34234 <__asan_cplus_demangle_type@@Base+0x1524>
   3437c:	cmp	w0, #0x69
   34380:	mov	w1, #0x74                  	// #116
   34384:	ccmp	w0, w1, #0x4, ne  // ne = any
   34388:	b.ne	341d0 <__asan_cplus_demangle_type@@Base+0x14c0>  // b.any
   3438c:	ldrb	w1, [x2, #1]
   34390:	cmp	w1, #0x6c
   34394:	b.ne	341d0 <__asan_cplus_demangle_type@@Base+0x14c0>  // b.any
   34398:	add	x1, x2, #0x2
   3439c:	str	x1, [x19, #24]
   343a0:	cmp	w0, #0x74
   343a4:	mov	x20, #0x0                   	// #0
   343a8:	b.eq	34708 <__asan_cplus_demangle_type@@Base+0x19f8>  // b.none
   343ac:	ldrb	w0, [x1, #1]
   343b0:	cbz	w0, 341fc <__asan_cplus_demangle_type@@Base+0x14ec>
   343b4:	mov	w1, #0x45                  	// #69
   343b8:	mov	x0, x19
   343bc:	bl	34148 <__asan_cplus_demangle_type@@Base+0x1438>
   343c0:	mov	x3, x0
   343c4:	mov	x2, x20
   343c8:	mov	x0, x19
   343cc:	mov	w1, #0x31                  	// #49
   343d0:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   343d4:	mov	x20, x0
   343d8:	b	342e0 <__asan_cplus_demangle_type@@Base+0x15d0>
   343dc:	mov	x0, x19
   343e0:	bl	2ca58 <__asan_backtrace_create_state@@Base+0x4c8>
   343e4:	mov	x20, x0
   343e8:	b	342e0 <__asan_cplus_demangle_type@@Base+0x15d0>
   343ec:	add	x0, x2, #0x2
   343f0:	str	x0, [x19, #24]
   343f4:	ldrb	w0, [x2, #2]
   343f8:	cmp	w0, #0x54
   343fc:	b.eq	34454 <__asan_cplus_demangle_type@@Base+0x1744>  // b.none
   34400:	mov	x0, x19
   34404:	bl	2c9e0 <__asan_backtrace_create_state@@Base+0x450>
   34408:	mvn	x1, x0
   3440c:	tst	x1, #0x7fffffff
   34410:	b.eq	341fc <__asan_cplus_demangle_type@@Base+0x14ec>  // b.none
   34414:	add	w0, w0, #0x1
   34418:	ldp	w1, w2, [x19, #40]
   3441c:	cmp	w1, w2
   34420:	b.ge	341fc <__asan_cplus_demangle_type@@Base+0x14ec>  // b.tcont
   34424:	mov	w3, #0x18                  	// #24
   34428:	add	w4, w1, #0x1
   3442c:	ldr	x2, [x19, #32]
   34430:	smull	x1, w1, w3
   34434:	mov	w3, #0x6                   	// #6
   34438:	sxtw	x0, w0
   3443c:	add	x20, x2, x1
   34440:	str	wzr, [x20, #4]
   34444:	str	w4, [x19, #40]
   34448:	str	w3, [x2, x1]
   3444c:	str	x0, [x20, #8]
   34450:	b	34254 <__asan_cplus_demangle_type@@Base+0x1544>
   34454:	add	x2, x2, #0x3
   34458:	mov	w0, #0x0                   	// #0
   3445c:	str	x2, [x19, #24]
   34460:	b	34418 <__asan_cplus_demangle_type@@Base+0x1708>
   34464:	add	x2, x2, #0x2
   34468:	str	x2, [x19, #24]
   3446c:	mov	x0, x19
   34470:	bl	6750 <__asan_cplus_demangle_type@plt>
   34474:	mov	x20, x0
   34478:	mov	x0, x19
   3447c:	bl	33b30 <__asan_cplus_demangle_type@@Base+0xe20>
   34480:	ldr	x1, [x19, #24]
   34484:	mov	x27, x0
   34488:	mov	x3, x27
   3448c:	ldrb	w0, [x1]
   34490:	cmp	w0, #0x49
   34494:	b.ne	344c0 <__asan_cplus_demangle_type@@Base+0x17b0>  // b.any
   34498:	add	x1, x1, #0x1
   3449c:	str	x1, [x19, #24]
   344a0:	mov	x0, x19
   344a4:	bl	353d8 <__asan_cplus_demangle_type@@Base+0x26c8>
   344a8:	mov	x3, x0
   344ac:	mov	x2, x27
   344b0:	mov	x0, x19
   344b4:	mov	w1, #0x4                   	// #4
   344b8:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   344bc:	mov	x3, x0
   344c0:	mov	x2, x20
   344c4:	mov	x0, x19
   344c8:	mov	w1, #0x1                   	// #1
   344cc:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   344d0:	mov	x20, x0
   344d4:	b	342e0 <__asan_cplus_demangle_type@@Base+0x15d0>
   344d8:	ldr	x3, [x20, #8]
   344dc:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   344e0:	ldr	w0, [x19, #72]
   344e4:	add	x1, x1, #0xf78
   344e8:	ldr	w2, [x3, #16]
   344ec:	ldr	x28, [x3]
   344f0:	sub	w2, w2, #0x2
   344f4:	add	w0, w0, w2
   344f8:	str	w0, [x19, #72]
   344fc:	mov	x0, x28
   34500:	bl	6b30 <__asan_internal_strcmp@plt>
   34504:	cbz	w0, 34804 <__asan_cplus_demangle_type@@Base+0x1af4>
   34508:	ldr	w1, [x20]
   3450c:	cmp	w1, #0x33
   34510:	b.eq	34570 <__asan_cplus_demangle_type@@Base+0x1860>  // b.none
   34514:	cmp	w1, #0x34
   34518:	b.eq	34724 <__asan_cplus_demangle_type@@Base+0x1a14>  // b.none
   3451c:	cmp	w1, #0x32
   34520:	b.ne	341fc <__asan_cplus_demangle_type@@Base+0x14ec>  // b.any
   34524:	ldr	x0, [x20, #8]
   34528:	ldr	w0, [x0, #20]
   3452c:	cmp	w0, #0x2
   34530:	b.eq	34580 <__asan_cplus_demangle_type@@Base+0x1870>  // b.none
   34534:	b.gt	34600 <__asan_cplus_demangle_type@@Base+0x18f0>
   34538:	cbz	w0, 347b8 <__asan_cplus_demangle_type@@Base+0x1aa8>
   3453c:	cmp	w0, #0x1
   34540:	b.ne	341fc <__asan_cplus_demangle_type@@Base+0x14ec>  // b.any
   34544:	cbnz	x28, 34788 <__asan_cplus_demangle_type@@Base+0x1a78>
   34548:	mov	x0, x19
   3454c:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   34550:	mov	x3, x0
   34554:	mov	x2, x20
   34558:	mov	x0, x19
   3455c:	mov	w1, #0x37                  	// #55
   34560:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34564:	mov	x20, x0
   34568:	b	342e0 <__asan_cplus_demangle_type@@Base+0x15d0>
   3456c:	mov	x28, #0x0                   	// #0
   34570:	ldr	w0, [x20, #8]
   34574:	mov	w1, #0x33                  	// #51
   34578:	cmp	w0, #0x2
   3457c:	b.ne	34534 <__asan_cplus_demangle_type@@Base+0x1824>  // b.any
   34580:	cbz	x28, 341fc <__asan_cplus_demangle_type@@Base+0x14ec>
   34584:	ldr	x0, [x20, #8]
   34588:	ldr	x0, [x0]
   3458c:	ldrb	w1, [x0, #1]
   34590:	cmp	w1, #0x63
   34594:	b.eq	348b4 <__asan_cplus_demangle_type@@Base+0x1ba4>  // b.none
   34598:	ldrb	w0, [x28]
   3459c:	cmp	w0, #0x66
   345a0:	b.eq	34914 <__asan_cplus_demangle_type@@Base+0x1c04>  // b.none
   345a4:	mov	x0, x19
   345a8:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   345ac:	mov	x27, x0
   345b0:	mov	x1, x25
   345b4:	mov	x0, x28
   345b8:	bl	6b30 <__asan_internal_strcmp@plt>
   345bc:	cbnz	w0, 34814 <__asan_cplus_demangle_type@@Base+0x1b04>
   345c0:	mov	x0, x19
   345c4:	mov	w1, #0x45                  	// #69
   345c8:	bl	34148 <__asan_cplus_demangle_type@@Base+0x1438>
   345cc:	mov	x28, x0
   345d0:	mov	x3, x28
   345d4:	mov	x2, x27
   345d8:	mov	w1, #0x39                  	// #57
   345dc:	mov	x0, x19
   345e0:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   345e4:	mov	x3, x0
   345e8:	mov	x2, x20
   345ec:	mov	x0, x19
   345f0:	mov	w1, #0x38                  	// #56
   345f4:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   345f8:	mov	x20, x0
   345fc:	b	342e0 <__asan_cplus_demangle_type@@Base+0x15d0>
   34600:	cmp	w0, #0x3
   34604:	b.ne	341fc <__asan_cplus_demangle_type@@Base+0x14ec>  // b.any
   34608:	cbz	x28, 341fc <__asan_cplus_demangle_type@@Base+0x14ec>
   3460c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   34610:	mov	x0, x28
   34614:	add	x1, x1, #0x9e8
   34618:	bl	6b30 <__asan_internal_strcmp@plt>
   3461c:	cbz	w0, 348e4 <__asan_cplus_demangle_type@@Base+0x1bd4>
   34620:	ldrb	w0, [x28]
   34624:	cmp	w0, #0x66
   34628:	b.eq	34924 <__asan_cplus_demangle_type@@Base+0x1c14>  // b.none
   3462c:	cmp	w0, #0x6e
   34630:	b.ne	341fc <__asan_cplus_demangle_type@@Base+0x14ec>  // b.any
   34634:	ldrb	w0, [x28, #1]
   34638:	mov	w1, #0x61                  	// #97
   3463c:	cmp	w0, #0x77
   34640:	ccmp	w0, w1, #0x4, ne  // ne = any
   34644:	b.ne	341fc <__asan_cplus_demangle_type@@Base+0x14ec>  // b.any
   34648:	mov	w1, #0x5f                  	// #95
   3464c:	mov	x0, x19
   34650:	bl	34148 <__asan_cplus_demangle_type@@Base+0x1438>
   34654:	mov	x27, x0
   34658:	mov	x0, x19
   3465c:	bl	6750 <__asan_cplus_demangle_type@plt>
   34660:	ldr	x1, [x19, #24]
   34664:	mov	x28, x0
   34668:	ldrb	w0, [x1]
   3466c:	cmp	w0, #0x45
   34670:	b.eq	34958 <__asan_cplus_demangle_type@@Base+0x1c48>  // b.none
   34674:	cmp	w0, #0x70
   34678:	b.eq	34930 <__asan_cplus_demangle_type@@Base+0x1c20>  // b.none
   3467c:	cmp	w0, #0x69
   34680:	b.ne	341fc <__asan_cplus_demangle_type@@Base+0x14ec>  // b.any
   34684:	ldrb	w0, [x1, #1]
   34688:	cmp	w0, #0x6c
   3468c:	b.ne	341fc <__asan_cplus_demangle_type@@Base+0x14ec>  // b.any
   34690:	mov	x0, x19
   34694:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   34698:	mov	x3, x0
   3469c:	mov	x2, x28
   346a0:	mov	w1, #0x3c                  	// #60
   346a4:	mov	x0, x19
   346a8:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   346ac:	mov	x2, x27
   346b0:	mov	x3, x0
   346b4:	mov	w1, #0x3b                  	// #59
   346b8:	mov	x0, x19
   346bc:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   346c0:	mov	x3, x0
   346c4:	mov	x2, x20
   346c8:	mov	x0, x19
   346cc:	mov	w1, #0x3a                  	// #58
   346d0:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   346d4:	mov	x20, x0
   346d8:	b	342e0 <__asan_cplus_demangle_type@@Base+0x15d0>
   346dc:	ldr	x0, [x19, #24]
   346e0:	ldrb	w1, [x0]
   346e4:	cmp	w1, #0x5f
   346e8:	b.ne	34548 <__asan_cplus_demangle_type@@Base+0x1838>  // b.any
   346ec:	add	x0, x0, #0x1
   346f0:	str	x0, [x19, #24]
   346f4:	mov	w1, #0x45                  	// #69
   346f8:	mov	x0, x19
   346fc:	bl	34148 <__asan_cplus_demangle_type@@Base+0x1438>
   34700:	mov	x3, x0
   34704:	b	34554 <__asan_cplus_demangle_type@@Base+0x1844>
   34708:	mov	x0, x19
   3470c:	bl	6750 <__asan_cplus_demangle_type@plt>
   34710:	ldr	x1, [x19, #24]
   34714:	mov	x20, x0
   34718:	ldrb	w0, [x1, #1]
   3471c:	cbnz	w0, 343b4 <__asan_cplus_demangle_type@@Base+0x16a4>
   34720:	b	341fc <__asan_cplus_demangle_type@@Base+0x14ec>
   34724:	cbz	x28, 346dc <__asan_cplus_demangle_type@@Base+0x19cc>
   34728:	ldrb	w0, [x28]
   3472c:	mov	w2, #0x6d                  	// #109
   34730:	cmp	w0, #0x70
   34734:	ccmp	w0, w2, #0x4, ne  // ne = any
   34738:	b.eq	347a0 <__asan_cplus_demangle_type@@Base+0x1a90>  // b.none
   3473c:	ldr	x0, [x19, #24]
   34740:	ldrb	w1, [x0]
   34744:	cmp	w1, #0x5f
   34748:	b.eq	346ec <__asan_cplus_demangle_type@@Base+0x19dc>  // b.none
   3474c:	mov	w27, #0x0                   	// #0
   34750:	mov	x0, x28
   34754:	mov	x1, x24
   34758:	bl	6b30 <__asan_internal_strcmp@plt>
   3475c:	cbz	w0, 347d4 <__asan_cplus_demangle_type@@Base+0x1ac4>
   34760:	mov	x0, x19
   34764:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   34768:	mov	x3, x0
   3476c:	cbz	w27, 34554 <__asan_cplus_demangle_type@@Base+0x1844>
   34770:	mov	x2, x3
   34774:	mov	x0, x19
   34778:	mov	w1, #0x39                  	// #57
   3477c:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34780:	mov	x3, x0
   34784:	b	34554 <__asan_cplus_demangle_type@@Base+0x1844>
   34788:	ldrb	w0, [x28]
   3478c:	mov	w2, #0x6d                  	// #109
   34790:	cmp	w0, #0x70
   34794:	ccmp	w0, w2, #0x4, ne  // ne = any
   34798:	b.ne	3474c <__asan_cplus_demangle_type@@Base+0x1a3c>  // b.any
   3479c:	nop
   347a0:	ldrb	w2, [x28, #1]
   347a4:	cmp	w2, w0
   347a8:	b.eq	34894 <__asan_cplus_demangle_type@@Base+0x1b84>  // b.none
   347ac:	cmp	w1, #0x34
   347b0:	b.ne	3474c <__asan_cplus_demangle_type@@Base+0x1a3c>  // b.any
   347b4:	b	3473c <__asan_cplus_demangle_type@@Base+0x1a2c>
   347b8:	mov	x2, x20
   347bc:	mov	x0, x19
   347c0:	mov	x3, #0x0                   	// #0
   347c4:	mov	w1, #0x36                  	// #54
   347c8:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   347cc:	mov	x20, x0
   347d0:	b	342e0 <__asan_cplus_demangle_type@@Base+0x15d0>
   347d4:	mov	x0, x19
   347d8:	bl	353d8 <__asan_cplus_demangle_type@@Base+0x26c8>
   347dc:	mov	x3, x0
   347e0:	b	3476c <__asan_cplus_demangle_type@@Base+0x1a5c>
   347e4:	add	x2, x2, #0x1
   347e8:	str	x2, [x0, #24]
   347ec:	ldp	x19, x20, [sp, #16]
   347f0:	mov	x3, #0x0                   	// #0
   347f4:	ldp	x29, x30, [sp], #112
   347f8:	mov	w1, #0x2e                  	// #46
   347fc:	mov	x2, #0x0                   	// #0
   34800:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34804:	mov	x0, x19
   34808:	bl	6750 <__asan_cplus_demangle_type@plt>
   3480c:	mov	x3, x0
   34810:	b	34554 <__asan_cplus_demangle_type@@Base+0x1844>
   34814:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   34818:	mov	x0, x28
   3481c:	add	x1, x1, #0xbb0
   34820:	bl	6b30 <__asan_internal_strcmp@plt>
   34824:	cbz	w0, 3484c <__asan_cplus_demangle_type@@Base+0x1b3c>
   34828:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   3482c:	mov	x0, x28
   34830:	add	x1, x1, #0xbb8
   34834:	bl	6b30 <__asan_internal_strcmp@plt>
   34838:	cbz	w0, 3484c <__asan_cplus_demangle_type@@Base+0x1b3c>
   3483c:	mov	x0, x19
   34840:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   34844:	mov	x28, x0
   34848:	b	345d0 <__asan_cplus_demangle_type@@Base+0x18c0>
   3484c:	mov	x0, x19
   34850:	bl	33b30 <__asan_cplus_demangle_type@@Base+0xe20>
   34854:	ldr	x1, [x19, #24]
   34858:	mov	x28, x0
   3485c:	ldrb	w0, [x1]
   34860:	cmp	w0, #0x49
   34864:	b.ne	345d0 <__asan_cplus_demangle_type@@Base+0x18c0>  // b.any
   34868:	add	x1, x1, #0x1
   3486c:	str	x1, [x19, #24]
   34870:	mov	x0, x19
   34874:	bl	353d8 <__asan_cplus_demangle_type@@Base+0x26c8>
   34878:	mov	x3, x0
   3487c:	mov	x2, x28
   34880:	mov	x0, x19
   34884:	mov	w1, #0x4                   	// #4
   34888:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   3488c:	mov	x28, x0
   34890:	b	345d0 <__asan_cplus_demangle_type@@Base+0x18c0>
   34894:	ldr	x0, [x19, #24]
   34898:	mov	w27, #0x1                   	// #1
   3489c:	ldrb	w2, [x0]
   348a0:	cmp	w2, #0x5f
   348a4:	b.ne	34750 <__asan_cplus_demangle_type@@Base+0x1a40>  // b.any
   348a8:	add	x0, x0, #0x1
   348ac:	str	x0, [x19, #24]
   348b0:	b	347ac <__asan_cplus_demangle_type@@Base+0x1a9c>
   348b4:	ldrb	w0, [x0]
   348b8:	sub	w1, w0, #0x63
   348bc:	sub	w0, w0, #0x72
   348c0:	and	w1, w1, #0xff
   348c4:	and	w0, w0, #0xff
   348c8:	cmp	w1, #0x1
   348cc:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
   348d0:	b.hi	34598 <__asan_cplus_demangle_type@@Base+0x1888>  // b.pmore
   348d4:	mov	x0, x19
   348d8:	bl	6750 <__asan_cplus_demangle_type@plt>
   348dc:	mov	x27, x0
   348e0:	b	345b0 <__asan_cplus_demangle_type@@Base+0x18a0>
   348e4:	mov	x0, x19
   348e8:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   348ec:	mov	x27, x0
   348f0:	mov	x0, x19
   348f4:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   348f8:	mov	x28, x0
   348fc:	mov	x0, x19
   34900:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   34904:	mov	x3, x0
   34908:	cbnz	x0, 3469c <__asan_cplus_demangle_type@@Base+0x198c>
   3490c:	mov	x20, #0x0                   	// #0
   34910:	b	34200 <__asan_cplus_demangle_type@@Base+0x14f0>
   34914:	mov	x0, x19
   34918:	bl	33958 <__asan_cplus_demangle_type@@Base+0xc48>
   3491c:	mov	x27, x0
   34920:	b	345b0 <__asan_cplus_demangle_type@@Base+0x18a0>
   34924:	mov	x0, x19
   34928:	bl	33958 <__asan_cplus_demangle_type@@Base+0xc48>
   3492c:	b	348ec <__asan_cplus_demangle_type@@Base+0x1bdc>
   34930:	ldrb	w0, [x1, #1]
   34934:	cmp	w0, #0x69
   34938:	b.ne	341fc <__asan_cplus_demangle_type@@Base+0x14ec>  // b.any
   3493c:	add	x1, x1, #0x2
   34940:	str	x1, [x19, #24]
   34944:	mov	x0, x19
   34948:	mov	w1, #0x45                  	// #69
   3494c:	bl	34148 <__asan_cplus_demangle_type@@Base+0x1438>
   34950:	mov	x3, x0
   34954:	b	3469c <__asan_cplus_demangle_type@@Base+0x198c>
   34958:	add	x1, x1, #0x1
   3495c:	mov	x3, #0x0                   	// #0
   34960:	str	x1, [x19, #24]
   34964:	b	3469c <__asan_cplus_demangle_type@@Base+0x198c>
   34968:	ldr	x2, [x0, #24]
   3496c:	ldrb	w1, [x2]
   34970:	cmp	w1, #0x4c
   34974:	b.eq	34b80 <__asan_cplus_demangle_type@@Base+0x1e70>  // b.none
   34978:	cmp	w1, #0x54
   3497c:	b.eq	34c04 <__asan_cplus_demangle_type@@Base+0x1ef4>  // b.none
   34980:	stp	x29, x30, [sp, #-48]!
   34984:	cmp	w1, #0x73
   34988:	mov	x29, sp
   3498c:	stp	x19, x20, [sp, #16]
   34990:	mov	x19, x0
   34994:	b.eq	34a34 <__asan_cplus_demangle_type@@Base+0x1d24>  // b.none
   34998:	cmp	w1, #0x66
   3499c:	b.eq	349e0 <__asan_cplus_demangle_type@@Base+0x1cd0>  // b.none
   349a0:	sub	w3, w1, #0x30
   349a4:	and	w3, w3, #0xff
   349a8:	cmp	w3, #0x9
   349ac:	b.hi	34b84 <__asan_cplus_demangle_type@@Base+0x1e74>  // b.pmore
   349b0:	mov	x0, x19
   349b4:	bl	33b30 <__asan_cplus_demangle_type@@Base+0xe20>
   349b8:	mov	x20, x0
   349bc:	cbz	x0, 34b6c <__asan_cplus_demangle_type@@Base+0x1e5c>
   349c0:	ldr	x0, [x19, #24]
   349c4:	ldrb	w1, [x0]
   349c8:	cmp	w1, #0x49
   349cc:	b.eq	34c08 <__asan_cplus_demangle_type@@Base+0x1ef8>  // b.none
   349d0:	mov	x0, x20
   349d4:	ldp	x19, x20, [sp, #16]
   349d8:	ldp	x29, x30, [sp], #48
   349dc:	ret
   349e0:	ldrb	w1, [x2, #1]
   349e4:	cmp	w1, #0x70
   349e8:	b.eq	34a70 <__asan_cplus_demangle_type@@Base+0x1d60>  // b.none
   349ec:	mov	x0, x19
   349f0:	bl	33958 <__asan_cplus_demangle_type@@Base+0xc48>
   349f4:	mov	x20, x0
   349f8:	cbz	x0, 34b6c <__asan_cplus_demangle_type@@Base+0x1e5c>
   349fc:	ldr	w0, [x0]
   34a00:	stp	x21, x22, [sp, #32]
   34a04:	cmp	w0, #0x32
   34a08:	b.eq	34cc0 <__asan_cplus_demangle_type@@Base+0x1fb0>  // b.none
   34a0c:	cmp	w0, #0x33
   34a10:	b.eq	34da8 <__asan_cplus_demangle_type@@Base+0x2098>  // b.none
   34a14:	cmp	w0, #0x34
   34a18:	b.eq	34e30 <__asan_cplus_demangle_type@@Base+0x2120>  // b.none
   34a1c:	mov	x20, #0x0                   	// #0
   34a20:	mov	x0, x20
   34a24:	ldp	x19, x20, [sp, #16]
   34a28:	ldp	x21, x22, [sp, #32]
   34a2c:	ldp	x29, x30, [sp], #48
   34a30:	ret
   34a34:	ldrb	w1, [x2, #1]
   34a38:	cmp	w1, #0x72
   34a3c:	b.eq	34c34 <__asan_cplus_demangle_type@@Base+0x1f24>  // b.none
   34a40:	cmp	w1, #0x70
   34a44:	b.ne	349ec <__asan_cplus_demangle_type@@Base+0x1cdc>  // b.any
   34a48:	add	x2, x2, #0x2
   34a4c:	str	x2, [x0, #24]
   34a50:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   34a54:	mov	x2, x0
   34a58:	mov	x0, x19
   34a5c:	mov	x3, #0x0                   	// #0
   34a60:	ldp	x19, x20, [sp, #16]
   34a64:	mov	w1, #0x4b                  	// #75
   34a68:	ldp	x29, x30, [sp], #48
   34a6c:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34a70:	add	x1, x2, #0x2
   34a74:	str	x1, [x0, #24]
   34a78:	ldrb	w1, [x2, #2]
   34a7c:	cmp	w1, #0x54
   34a80:	b.eq	34db8 <__asan_cplus_demangle_type@@Base+0x20a8>  // b.none
   34a84:	bl	2c9e0 <__asan_backtrace_create_state@@Base+0x450>
   34a88:	mvn	x1, x0
   34a8c:	add	w0, w0, #0x1
   34a90:	tst	x1, #0x7fffffff
   34a94:	b.eq	34b6c <__asan_cplus_demangle_type@@Base+0x1e5c>  // b.none
   34a98:	ldp	w1, w2, [x19, #40]
   34a9c:	cmp	w1, w2
   34aa0:	b.ge	34b6c <__asan_cplus_demangle_type@@Base+0x1e5c>  // b.tcont
   34aa4:	mov	w3, #0x18                  	// #24
   34aa8:	add	w4, w1, #0x1
   34aac:	ldr	x2, [x19, #32]
   34ab0:	smull	x1, w1, w3
   34ab4:	mov	w3, #0x6                   	// #6
   34ab8:	sxtw	x0, w0
   34abc:	add	x20, x2, x1
   34ac0:	str	wzr, [x20, #4]
   34ac4:	str	w4, [x19, #40]
   34ac8:	str	w3, [x2, x1]
   34acc:	str	x0, [x20, #8]
   34ad0:	b	349d0 <__asan_cplus_demangle_type@@Base+0x1cc0>
   34ad4:	cmp	w0, #0x3
   34ad8:	b.ne	34a1c <__asan_cplus_demangle_type@@Base+0x1d0c>  // b.any
   34adc:	cbz	x21, 34b68 <__asan_cplus_demangle_type@@Base+0x1e58>
   34ae0:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   34ae4:	mov	x0, x21
   34ae8:	add	x1, x1, #0x9e8
   34aec:	bl	6b30 <__asan_internal_strcmp@plt>
   34af0:	cbz	w0, 35010 <__asan_cplus_demangle_type@@Base+0x2300>
   34af4:	ldrb	w0, [x21]
   34af8:	cmp	w0, #0x66
   34afc:	b.eq	3504c <__asan_cplus_demangle_type@@Base+0x233c>  // b.none
   34b00:	cmp	w0, #0x6e
   34b04:	b.ne	34b68 <__asan_cplus_demangle_type@@Base+0x1e58>  // b.any
   34b08:	ldrb	w0, [x21, #1]
   34b0c:	mov	w1, #0x61                  	// #97
   34b10:	cmp	w0, #0x77
   34b14:	ccmp	w0, w1, #0x4, ne  // ne = any
   34b18:	b.ne	34b68 <__asan_cplus_demangle_type@@Base+0x1e58>  // b.any
   34b1c:	mov	w1, #0x5f                  	// #95
   34b20:	mov	x0, x19
   34b24:	bl	34148 <__asan_cplus_demangle_type@@Base+0x1438>
   34b28:	mov	x21, x0
   34b2c:	mov	x0, x19
   34b30:	bl	6750 <__asan_cplus_demangle_type@plt>
   34b34:	ldr	x1, [x19, #24]
   34b38:	mov	x22, x0
   34b3c:	ldrb	w0, [x1]
   34b40:	cmp	w0, #0x45
   34b44:	b.eq	35090 <__asan_cplus_demangle_type@@Base+0x2380>  // b.none
   34b48:	cmp	w0, #0x70
   34b4c:	b.eq	35068 <__asan_cplus_demangle_type@@Base+0x2358>  // b.none
   34b50:	cmp	w0, #0x69
   34b54:	b.ne	34b68 <__asan_cplus_demangle_type@@Base+0x1e58>  // b.any
   34b58:	ldrb	w0, [x1, #1]
   34b5c:	cmp	w0, #0x6c
   34b60:	b.eq	34d58 <__asan_cplus_demangle_type@@Base+0x2048>  // b.none
   34b64:	nop
   34b68:	ldp	x21, x22, [sp, #32]
   34b6c:	mov	x20, #0x0                   	// #0
   34b70:	mov	x0, x20
   34b74:	ldp	x19, x20, [sp, #16]
   34b78:	ldp	x29, x30, [sp], #48
   34b7c:	ret
   34b80:	b	363a0 <__asan_cplus_demangle_mangled_name@@Base+0x1a8>
   34b84:	cmp	w1, #0x6f
   34b88:	b.ne	34ba4 <__asan_cplus_demangle_type@@Base+0x1e94>  // b.any
   34b8c:	ldrb	w0, [x2, #1]
   34b90:	cmp	w0, #0x6e
   34b94:	b.ne	349ec <__asan_cplus_demangle_type@@Base+0x1cdc>  // b.any
   34b98:	add	x2, x2, #0x2
   34b9c:	str	x2, [x19, #24]
   34ba0:	b	349b0 <__asan_cplus_demangle_type@@Base+0x1ca0>
   34ba4:	cmp	w1, #0x69
   34ba8:	mov	w3, #0x74                  	// #116
   34bac:	ccmp	w1, w3, #0x4, ne  // ne = any
   34bb0:	b.ne	349ec <__asan_cplus_demangle_type@@Base+0x1cdc>  // b.any
   34bb4:	ldrb	w3, [x2, #1]
   34bb8:	cmp	w3, #0x6c
   34bbc:	b.ne	349ec <__asan_cplus_demangle_type@@Base+0x1cdc>  // b.any
   34bc0:	add	x3, x2, #0x2
   34bc4:	str	x3, [x0, #24]
   34bc8:	cmp	w1, #0x74
   34bcc:	mov	x20, #0x0                   	// #0
   34bd0:	b.eq	34cb0 <__asan_cplus_demangle_type@@Base+0x1fa0>  // b.none
   34bd4:	ldrb	w0, [x3, #1]
   34bd8:	cbz	w0, 34b6c <__asan_cplus_demangle_type@@Base+0x1e5c>
   34bdc:	mov	x0, x19
   34be0:	mov	w1, #0x45                  	// #69
   34be4:	bl	34148 <__asan_cplus_demangle_type@@Base+0x1438>
   34be8:	mov	x3, x0
   34bec:	mov	x2, x20
   34bf0:	mov	x0, x19
   34bf4:	ldp	x19, x20, [sp, #16]
   34bf8:	mov	w1, #0x31                  	// #49
   34bfc:	ldp	x29, x30, [sp], #48
   34c00:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34c04:	b	2ca58 <__asan_backtrace_create_state@@Base+0x4c8>
   34c08:	add	x0, x0, #0x1
   34c0c:	str	x0, [x19, #24]
   34c10:	mov	x0, x19
   34c14:	bl	353d8 <__asan_cplus_demangle_type@@Base+0x26c8>
   34c18:	mov	x3, x0
   34c1c:	mov	x2, x20
   34c20:	mov	x0, x19
   34c24:	ldp	x19, x20, [sp, #16]
   34c28:	mov	w1, #0x4                   	// #4
   34c2c:	ldp	x29, x30, [sp], #48
   34c30:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34c34:	add	x2, x2, #0x2
   34c38:	stp	x21, x22, [sp, #32]
   34c3c:	str	x2, [x0, #24]
   34c40:	bl	6750 <__asan_cplus_demangle_type@plt>
   34c44:	mov	x20, x0
   34c48:	mov	x0, x19
   34c4c:	bl	33b30 <__asan_cplus_demangle_type@@Base+0xe20>
   34c50:	ldr	x1, [x19, #24]
   34c54:	mov	x21, x0
   34c58:	mov	x3, x21
   34c5c:	ldrb	w0, [x1]
   34c60:	cmp	w0, #0x49
   34c64:	b.eq	34c84 <__asan_cplus_demangle_type@@Base+0x1f74>  // b.none
   34c68:	mov	x2, x20
   34c6c:	mov	x0, x19
   34c70:	ldp	x19, x20, [sp, #16]
   34c74:	mov	w1, #0x1                   	// #1
   34c78:	ldp	x21, x22, [sp, #32]
   34c7c:	ldp	x29, x30, [sp], #48
   34c80:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34c84:	add	x1, x1, #0x1
   34c88:	str	x1, [x19, #24]
   34c8c:	mov	x0, x19
   34c90:	bl	353d8 <__asan_cplus_demangle_type@@Base+0x26c8>
   34c94:	mov	x3, x0
   34c98:	mov	x2, x21
   34c9c:	mov	x0, x19
   34ca0:	mov	w1, #0x4                   	// #4
   34ca4:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34ca8:	mov	x3, x0
   34cac:	b	34c68 <__asan_cplus_demangle_type@@Base+0x1f58>
   34cb0:	bl	6750 <__asan_cplus_demangle_type@plt>
   34cb4:	mov	x20, x0
   34cb8:	ldr	x3, [x19, #24]
   34cbc:	b	34bd4 <__asan_cplus_demangle_type@@Base+0x1ec4>
   34cc0:	ldr	x3, [x20, #8]
   34cc4:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   34cc8:	ldr	w0, [x19, #72]
   34ccc:	add	x1, x1, #0xf78
   34cd0:	ldr	w2, [x3, #16]
   34cd4:	ldr	x21, [x3]
   34cd8:	sub	w2, w2, #0x2
   34cdc:	add	w0, w0, w2
   34ce0:	str	w0, [x19, #72]
   34ce4:	mov	x0, x21
   34ce8:	bl	6b30 <__asan_internal_strcmp@plt>
   34cec:	cbz	w0, 34f40 <__asan_cplus_demangle_type@@Base+0x2230>
   34cf0:	ldr	w1, [x20]
   34cf4:	cmp	w1, #0x33
   34cf8:	b.eq	34dac <__asan_cplus_demangle_type@@Base+0x209c>  // b.none
   34cfc:	cmp	w1, #0x34
   34d00:	b.eq	34dc8 <__asan_cplus_demangle_type@@Base+0x20b8>  // b.none
   34d04:	cmp	w1, #0x32
   34d08:	b.ne	34a1c <__asan_cplus_demangle_type@@Base+0x1d0c>  // b.any
   34d0c:	ldr	x0, [x20, #8]
   34d10:	ldr	w0, [x0, #20]
   34d14:	cmp	w0, #0x2
   34d18:	b.eq	34e88 <__asan_cplus_demangle_type@@Base+0x2178>  // b.none
   34d1c:	b.gt	34ad4 <__asan_cplus_demangle_type@@Base+0x1dc4>
   34d20:	cbz	w0, 34f10 <__asan_cplus_demangle_type@@Base+0x2200>
   34d24:	cmp	w0, #0x1
   34d28:	b.ne	34a1c <__asan_cplus_demangle_type@@Base+0x1d0c>  // b.any
   34d2c:	cbnz	x21, 34e5c <__asan_cplus_demangle_type@@Base+0x214c>
   34d30:	mov	x0, x19
   34d34:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   34d38:	mov	x3, x0
   34d3c:	mov	x2, x20
   34d40:	mov	x0, x19
   34d44:	ldp	x19, x20, [sp, #16]
   34d48:	mov	w1, #0x37                  	// #55
   34d4c:	ldp	x21, x22, [sp, #32]
   34d50:	ldp	x29, x30, [sp], #48
   34d54:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34d58:	mov	x0, x19
   34d5c:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   34d60:	mov	x3, x0
   34d64:	mov	x2, x22
   34d68:	mov	x0, x19
   34d6c:	mov	w1, #0x3c                  	// #60
   34d70:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34d74:	mov	x2, x21
   34d78:	mov	x3, x0
   34d7c:	mov	w1, #0x3b                  	// #59
   34d80:	mov	x0, x19
   34d84:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34d88:	mov	x3, x0
   34d8c:	mov	x2, x20
   34d90:	mov	x0, x19
   34d94:	ldp	x19, x20, [sp, #16]
   34d98:	mov	w1, #0x3a                  	// #58
   34d9c:	ldp	x21, x22, [sp, #32]
   34da0:	ldp	x29, x30, [sp], #48
   34da4:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34da8:	mov	x21, #0x0                   	// #0
   34dac:	ldr	w0, [x20, #8]
   34db0:	mov	w1, #0x33                  	// #51
   34db4:	b	34d14 <__asan_cplus_demangle_type@@Base+0x2004>
   34db8:	add	x2, x2, #0x3
   34dbc:	mov	w0, #0x0                   	// #0
   34dc0:	str	x2, [x19, #24]
   34dc4:	b	34a98 <__asan_cplus_demangle_type@@Base+0x1d88>
   34dc8:	cbz	x21, 34e30 <__asan_cplus_demangle_type@@Base+0x2120>
   34dcc:	ldrb	w0, [x21]
   34dd0:	mov	w2, #0x6d                  	// #109
   34dd4:	cmp	w0, #0x70
   34dd8:	ccmp	w0, w2, #0x4, ne  // ne = any
   34ddc:	b.eq	34e70 <__asan_cplus_demangle_type@@Base+0x2160>  // b.none
   34de0:	ldr	x0, [x19, #24]
   34de4:	ldrb	w1, [x0]
   34de8:	cmp	w1, #0x5f
   34dec:	b.eq	34e40 <__asan_cplus_demangle_type@@Base+0x2130>  // b.none
   34df0:	mov	w22, #0x0                   	// #0
   34df4:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   34df8:	mov	x0, x21
   34dfc:	add	x1, x1, #0xac0
   34e00:	bl	6b30 <__asan_internal_strcmp@plt>
   34e04:	cbz	w0, 34f30 <__asan_cplus_demangle_type@@Base+0x2220>
   34e08:	mov	x0, x19
   34e0c:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   34e10:	mov	x3, x0
   34e14:	cbz	w22, 34d3c <__asan_cplus_demangle_type@@Base+0x202c>
   34e18:	mov	x2, x3
   34e1c:	mov	x0, x19
   34e20:	mov	w1, #0x39                  	// #57
   34e24:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34e28:	mov	x3, x0
   34e2c:	b	34d3c <__asan_cplus_demangle_type@@Base+0x202c>
   34e30:	ldr	x0, [x19, #24]
   34e34:	ldrb	w1, [x0]
   34e38:	cmp	w1, #0x5f
   34e3c:	b.ne	34d30 <__asan_cplus_demangle_type@@Base+0x2020>  // b.any
   34e40:	add	x0, x0, #0x1
   34e44:	str	x0, [x19, #24]
   34e48:	mov	w1, #0x45                  	// #69
   34e4c:	mov	x0, x19
   34e50:	bl	34148 <__asan_cplus_demangle_type@@Base+0x1438>
   34e54:	mov	x3, x0
   34e58:	b	34d3c <__asan_cplus_demangle_type@@Base+0x202c>
   34e5c:	ldrb	w0, [x21]
   34e60:	mov	w2, #0x6d                  	// #109
   34e64:	cmp	w0, #0x70
   34e68:	ccmp	w0, w2, #0x4, ne  // ne = any
   34e6c:	b.ne	34df0 <__asan_cplus_demangle_type@@Base+0x20e0>  // b.any
   34e70:	ldrb	w2, [x21, #1]
   34e74:	cmp	w2, w0
   34e78:	b.eq	34fc0 <__asan_cplus_demangle_type@@Base+0x22b0>  // b.none
   34e7c:	cmp	w1, #0x34
   34e80:	b.ne	34df0 <__asan_cplus_demangle_type@@Base+0x20e0>  // b.any
   34e84:	b	34de0 <__asan_cplus_demangle_type@@Base+0x20d0>
   34e88:	cbz	x21, 34b68 <__asan_cplus_demangle_type@@Base+0x1e58>
   34e8c:	ldr	x0, [x20, #8]
   34e90:	ldr	x0, [x0]
   34e94:	ldrb	w1, [x0, #1]
   34e98:	cmp	w1, #0x63
   34e9c:	b.eq	34fe0 <__asan_cplus_demangle_type@@Base+0x22d0>  // b.none
   34ea0:	ldrb	w0, [x21]
   34ea4:	cmp	w0, #0x66
   34ea8:	b.eq	3503c <__asan_cplus_demangle_type@@Base+0x232c>  // b.none
   34eac:	mov	x0, x19
   34eb0:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   34eb4:	mov	x22, x0
   34eb8:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   34ebc:	mov	x0, x21
   34ec0:	add	x1, x1, #0x9d8
   34ec4:	bl	6b30 <__asan_internal_strcmp@plt>
   34ec8:	cbnz	w0, 34f50 <__asan_cplus_demangle_type@@Base+0x2240>
   34ecc:	mov	x0, x19
   34ed0:	mov	w1, #0x45                  	// #69
   34ed4:	bl	34148 <__asan_cplus_demangle_type@@Base+0x1438>
   34ed8:	mov	x21, x0
   34edc:	mov	x3, x21
   34ee0:	mov	x2, x22
   34ee4:	mov	x0, x19
   34ee8:	mov	w1, #0x39                  	// #57
   34eec:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34ef0:	mov	x3, x0
   34ef4:	mov	x2, x20
   34ef8:	mov	x0, x19
   34efc:	ldp	x19, x20, [sp, #16]
   34f00:	mov	w1, #0x38                  	// #56
   34f04:	ldp	x21, x22, [sp, #32]
   34f08:	ldp	x29, x30, [sp], #48
   34f0c:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34f10:	mov	x2, x20
   34f14:	mov	x0, x19
   34f18:	ldp	x19, x20, [sp, #16]
   34f1c:	mov	x3, #0x0                   	// #0
   34f20:	ldp	x21, x22, [sp, #32]
   34f24:	mov	w1, #0x36                  	// #54
   34f28:	ldp	x29, x30, [sp], #48
   34f2c:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34f30:	mov	x0, x19
   34f34:	bl	353d8 <__asan_cplus_demangle_type@@Base+0x26c8>
   34f38:	mov	x3, x0
   34f3c:	b	34e14 <__asan_cplus_demangle_type@@Base+0x2104>
   34f40:	mov	x0, x19
   34f44:	bl	6750 <__asan_cplus_demangle_type@plt>
   34f48:	mov	x3, x0
   34f4c:	b	34d3c <__asan_cplus_demangle_type@@Base+0x202c>
   34f50:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   34f54:	mov	x0, x21
   34f58:	add	x1, x1, #0xbb0
   34f5c:	bl	6b30 <__asan_internal_strcmp@plt>
   34f60:	cbz	w0, 34f78 <__asan_cplus_demangle_type@@Base+0x2268>
   34f64:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   34f68:	mov	x0, x21
   34f6c:	add	x1, x1, #0xbb8
   34f70:	bl	6b30 <__asan_internal_strcmp@plt>
   34f74:	cbnz	w0, 35058 <__asan_cplus_demangle_type@@Base+0x2348>
   34f78:	mov	x0, x19
   34f7c:	bl	33b30 <__asan_cplus_demangle_type@@Base+0xe20>
   34f80:	ldr	x1, [x19, #24]
   34f84:	mov	x21, x0
   34f88:	ldrb	w0, [x1]
   34f8c:	cmp	w0, #0x49
   34f90:	b.ne	34edc <__asan_cplus_demangle_type@@Base+0x21cc>  // b.any
   34f94:	add	x1, x1, #0x1
   34f98:	str	x1, [x19, #24]
   34f9c:	mov	x0, x19
   34fa0:	bl	353d8 <__asan_cplus_demangle_type@@Base+0x26c8>
   34fa4:	mov	x3, x0
   34fa8:	mov	x2, x21
   34fac:	mov	x0, x19
   34fb0:	mov	w1, #0x4                   	// #4
   34fb4:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   34fb8:	mov	x21, x0
   34fbc:	b	34edc <__asan_cplus_demangle_type@@Base+0x21cc>
   34fc0:	ldr	x0, [x19, #24]
   34fc4:	mov	w22, #0x1                   	// #1
   34fc8:	ldrb	w2, [x0]
   34fcc:	cmp	w2, #0x5f
   34fd0:	b.ne	34df4 <__asan_cplus_demangle_type@@Base+0x20e4>  // b.any
   34fd4:	add	x0, x0, #0x1
   34fd8:	str	x0, [x19, #24]
   34fdc:	b	34e7c <__asan_cplus_demangle_type@@Base+0x216c>
   34fe0:	ldrb	w0, [x0]
   34fe4:	sub	w1, w0, #0x63
   34fe8:	sub	w0, w0, #0x72
   34fec:	and	w1, w1, #0xff
   34ff0:	and	w0, w0, #0xff
   34ff4:	cmp	w1, #0x1
   34ff8:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
   34ffc:	b.hi	34ea0 <__asan_cplus_demangle_type@@Base+0x2190>  // b.pmore
   35000:	mov	x0, x19
   35004:	bl	6750 <__asan_cplus_demangle_type@plt>
   35008:	mov	x22, x0
   3500c:	b	34eb8 <__asan_cplus_demangle_type@@Base+0x21a8>
   35010:	mov	x0, x19
   35014:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   35018:	mov	x21, x0
   3501c:	mov	x0, x19
   35020:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   35024:	mov	x22, x0
   35028:	mov	x0, x19
   3502c:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   35030:	mov	x3, x0
   35034:	cbnz	x0, 34d64 <__asan_cplus_demangle_type@@Base+0x2054>
   35038:	b	34b68 <__asan_cplus_demangle_type@@Base+0x1e58>
   3503c:	mov	x0, x19
   35040:	bl	33958 <__asan_cplus_demangle_type@@Base+0xc48>
   35044:	mov	x22, x0
   35048:	b	34eb8 <__asan_cplus_demangle_type@@Base+0x21a8>
   3504c:	mov	x0, x19
   35050:	bl	33958 <__asan_cplus_demangle_type@@Base+0xc48>
   35054:	b	35018 <__asan_cplus_demangle_type@@Base+0x2308>
   35058:	mov	x0, x19
   3505c:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   35060:	mov	x21, x0
   35064:	b	34edc <__asan_cplus_demangle_type@@Base+0x21cc>
   35068:	ldrb	w0, [x1, #1]
   3506c:	cmp	w0, #0x69
   35070:	b.ne	34b68 <__asan_cplus_demangle_type@@Base+0x1e58>  // b.any
   35074:	add	x1, x1, #0x2
   35078:	str	x1, [x19, #24]
   3507c:	mov	x0, x19
   35080:	mov	w1, #0x45                  	// #69
   35084:	bl	34148 <__asan_cplus_demangle_type@@Base+0x1438>
   35088:	mov	x3, x0
   3508c:	b	34d64 <__asan_cplus_demangle_type@@Base+0x2054>
   35090:	add	x1, x1, #0x1
   35094:	mov	x3, #0x0                   	// #0
   35098:	str	x1, [x19, #24]
   3509c:	b	34d64 <__asan_cplus_demangle_type@@Base+0x2054>
   350a0:	stp	x29, x30, [sp, #-96]!
   350a4:	cmp	w2, #0x0
   350a8:	mov	x29, sp
   350ac:	stp	x19, x20, [sp, #16]
   350b0:	mov	x19, x0
   350b4:	mov	w0, #0x1b                  	// #27
   350b8:	stp	x21, x22, [sp, #32]
   350bc:	mov	x20, x1
   350c0:	mov	w22, #0x1c                  	// #28
   350c4:	ldr	x4, [x19, #24]
   350c8:	stp	x23, x24, [sp, #48]
   350cc:	mov	w23, #0x1d                  	// #29
   350d0:	stp	x25, x26, [sp, #64]
   350d4:	mov	w25, #0x1e                  	// #30
   350d8:	csel	w25, w25, w0, ne  // ne = any
   350dc:	ldrb	w5, [x4]
   350e0:	mov	w0, #0x1a                  	// #26
   350e4:	csel	w23, w23, w0, ne  // ne = any
   350e8:	mov	w0, #0x19                  	// #25
   350ec:	mov	w24, w2
   350f0:	csel	w22, w22, w0, ne  // ne = any
   350f4:	mov	x21, x1
   350f8:	mov	x0, x4
   350fc:	mov	w26, #0x1                   	// #1
   35100:	bl	2cb80 <__asan_backtrace_create_state@@Base+0x5f0>
   35104:	cbz	w0, 35220 <__asan_cplus_demangle_type@@Base+0x2510>
   35108:	add	x0, x4, #0x1
   3510c:	str	x0, [x19, #24]
   35110:	cmp	w5, #0x72
   35114:	b.eq	351e0 <__asan_cplus_demangle_type@@Base+0x24d0>  // b.none
   35118:	cmp	w5, #0x56
   3511c:	b.eq	35280 <__asan_cplus_demangle_type@@Base+0x2570>  // b.none
   35120:	cmp	w5, #0x4b
   35124:	b.eq	35298 <__asan_cplus_demangle_type@@Base+0x2588>  // b.none
   35128:	ldrb	w0, [x4, #1]
   3512c:	cbz	w0, 351c0 <__asan_cplus_demangle_type@@Base+0x24b0>
   35130:	add	x0, x4, #0x2
   35134:	str	x0, [x19, #24]
   35138:	ldrb	w0, [x4, #1]
   3513c:	cmp	w0, #0x78
   35140:	b.eq	352b0 <__asan_cplus_demangle_type@@Base+0x25a0>  // b.none
   35144:	and	w1, w0, #0xffffffdf
   35148:	cmp	w1, #0x4f
   3514c:	and	w1, w1, #0xff
   35150:	b.ne	352c8 <__asan_cplus_demangle_type@@Base+0x25b8>  // b.any
   35154:	ldr	w2, [x19, #72]
   35158:	cmp	w0, #0x4f
   3515c:	add	w0, w2, #0x9
   35160:	str	w0, [x19, #72]
   35164:	b.ne	3530c <__asan_cplus_demangle_type@@Base+0x25fc>  // b.any
   35168:	str	x27, [sp, #80]
   3516c:	mov	x0, x19
   35170:	ldr	w27, [x19, #76]
   35174:	str	w26, [x19, #76]
   35178:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   3517c:	str	w27, [x19, #76]
   35180:	mov	x3, x0
   35184:	cbz	x0, 35324 <__asan_cplus_demangle_type@@Base+0x2614>
   35188:	ldr	x0, [x19, #24]
   3518c:	ldrb	w1, [x0]
   35190:	cmp	w1, #0x45
   35194:	b.ne	35324 <__asan_cplus_demangle_type@@Base+0x2614>  // b.any
   35198:	add	x0, x0, #0x1
   3519c:	mov	w1, #0x4f                  	// #79
   351a0:	ldr	x27, [sp, #80]
   351a4:	str	x0, [x19, #24]
   351a8:	mov	x2, #0x0                   	// #0
   351ac:	mov	x0, x19
   351b0:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   351b4:	str	x0, [x20]
   351b8:	cbnz	x0, 35208 <__asan_cplus_demangle_type@@Base+0x24f8>
   351bc:	nop
   351c0:	mov	x20, #0x0                   	// #0
   351c4:	mov	x0, x20
   351c8:	ldp	x19, x20, [sp, #16]
   351cc:	ldp	x21, x22, [sp, #32]
   351d0:	ldp	x23, x24, [sp, #48]
   351d4:	ldp	x25, x26, [sp, #64]
   351d8:	ldp	x29, x30, [sp], #96
   351dc:	ret
   351e0:	ldr	w0, [x19, #72]
   351e4:	mov	w1, w22
   351e8:	mov	x3, #0x0                   	// #0
   351ec:	add	w0, w0, #0x9
   351f0:	str	w0, [x19, #72]
   351f4:	mov	x0, x19
   351f8:	mov	x2, #0x0                   	// #0
   351fc:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   35200:	str	x0, [x20]
   35204:	cbz	x0, 351c0 <__asan_cplus_demangle_type@@Base+0x24b0>
   35208:	ldr	x4, [x19, #24]
   3520c:	add	x20, x0, #0x8
   35210:	mov	x0, x4
   35214:	ldrb	w5, [x4]
   35218:	bl	2cb80 <__asan_backtrace_create_state@@Base+0x5f0>
   3521c:	cbnz	w0, 35108 <__asan_cplus_demangle_type@@Base+0x23f8>
   35220:	cmp	w5, #0x46
   35224:	eor	w24, w24, #0x1
   35228:	cset	w0, eq  // eq = none
   3522c:	tst	w24, w0
   35230:	b.eq	351c4 <__asan_cplus_demangle_type@@Base+0x24b4>  // b.none
   35234:	cmp	x20, x21
   35238:	b.eq	351c4 <__asan_cplus_demangle_type@@Base+0x24b4>  // b.none
   3523c:	mov	w3, #0x1d                  	// #29
   35240:	mov	w2, #0x1e                  	// #30
   35244:	mov	w1, #0x1c                  	// #28
   35248:	b	35260 <__asan_cplus_demangle_type@@Base+0x2550>
   3524c:	cmp	w0, #0x19
   35250:	b.eq	3531c <__asan_cplus_demangle_type@@Base+0x260c>  // b.none
   35254:	add	x21, x21, #0x8
   35258:	cmp	x20, x21
   3525c:	b.eq	351c4 <__asan_cplus_demangle_type@@Base+0x24b4>  // b.none
   35260:	ldr	x21, [x21]
   35264:	ldr	w0, [x21]
   35268:	cmp	w0, #0x1a
   3526c:	b.eq	35314 <__asan_cplus_demangle_type@@Base+0x2604>  // b.none
   35270:	cmp	w0, #0x1b
   35274:	b.ne	3524c <__asan_cplus_demangle_type@@Base+0x253c>  // b.any
   35278:	str	w2, [x21]
   3527c:	b	35254 <__asan_cplus_demangle_type@@Base+0x2544>
   35280:	ldr	w0, [x19, #72]
   35284:	mov	w1, w23
   35288:	mov	x3, #0x0                   	// #0
   3528c:	add	w0, w0, #0x9
   35290:	str	w0, [x19, #72]
   35294:	b	351f4 <__asan_cplus_demangle_type@@Base+0x24e4>
   35298:	ldr	w0, [x19, #72]
   3529c:	mov	w1, w25
   352a0:	mov	x3, #0x0                   	// #0
   352a4:	add	w0, w0, #0x6
   352a8:	str	w0, [x19, #72]
   352ac:	b	351f4 <__asan_cplus_demangle_type@@Base+0x24e4>
   352b0:	ldr	w0, [x19, #72]
   352b4:	mov	x3, #0x0                   	// #0
   352b8:	mov	w1, #0x4d                  	// #77
   352bc:	add	w0, w0, #0x11
   352c0:	str	w0, [x19, #72]
   352c4:	b	351f4 <__asan_cplus_demangle_type@@Base+0x24e4>
   352c8:	cmp	w0, #0x77
   352cc:	b.ne	351c0 <__asan_cplus_demangle_type@@Base+0x24b0>  // b.any
   352d0:	ldr	w1, [x19, #72]
   352d4:	mov	x0, x19
   352d8:	add	w1, w1, #0x6
   352dc:	str	w1, [x19, #72]
   352e0:	bl	33848 <__asan_cplus_demangle_type@@Base+0xb38>
   352e4:	mov	x3, x0
   352e8:	cbz	x0, 351c0 <__asan_cplus_demangle_type@@Base+0x24b0>
   352ec:	ldr	x0, [x19, #24]
   352f0:	ldrb	w1, [x0]
   352f4:	cmp	w1, #0x45
   352f8:	b.ne	351c0 <__asan_cplus_demangle_type@@Base+0x24b0>  // b.any
   352fc:	add	x0, x0, #0x1
   35300:	mov	w1, #0x50                  	// #80
   35304:	str	x0, [x19, #24]
   35308:	b	351f4 <__asan_cplus_demangle_type@@Base+0x24e4>
   3530c:	mov	x3, #0x0                   	// #0
   35310:	b	351f4 <__asan_cplus_demangle_type@@Base+0x24e4>
   35314:	str	w3, [x21]
   35318:	b	35254 <__asan_cplus_demangle_type@@Base+0x2544>
   3531c:	str	w1, [x21]
   35320:	b	35254 <__asan_cplus_demangle_type@@Base+0x2544>
   35324:	ldr	x27, [sp, #80]
   35328:	b	351c0 <__asan_cplus_demangle_type@@Base+0x24b0>
   3532c:	nop
   35330:	ldr	x2, [x0, #24]
   35334:	ldrb	w1, [x2]
   35338:	cmp	w1, #0x4c
   3533c:	b.eq	353c8 <__asan_cplus_demangle_type@@Base+0x26b8>  // b.none
   35340:	stp	x29, x30, [sp, #-32]!
   35344:	mov	x29, sp
   35348:	stp	x19, x20, [sp, #16]
   3534c:	mov	x19, x0
   35350:	b.hi	35370 <__asan_cplus_demangle_type@@Base+0x2660>  // b.pmore
   35354:	sub	w1, w1, #0x49
   35358:	and	w1, w1, #0xff
   3535c:	cmp	w1, #0x1
   35360:	b.hi	353b8 <__asan_cplus_demangle_type@@Base+0x26a8>  // b.pmore
   35364:	ldp	x19, x20, [sp, #16]
   35368:	ldp	x29, x30, [sp], #32
   3536c:	b	354a0 <__asan_cplus_demangle_type@@Base+0x2790>
   35370:	cmp	w1, #0x58
   35374:	b.ne	353b8 <__asan_cplus_demangle_type@@Base+0x26a8>  // b.any
   35378:	add	x2, x2, #0x1
   3537c:	ldr	w20, [x0, #76]
   35380:	mov	w1, #0x1                   	// #1
   35384:	str	x2, [x0, #24]
   35388:	str	w1, [x0, #76]
   3538c:	bl	34968 <__asan_cplus_demangle_type@@Base+0x1c58>
   35390:	str	w20, [x19, #76]
   35394:	ldr	x1, [x19, #24]
   35398:	ldrb	w2, [x1]
   3539c:	cmp	w2, #0x45
   353a0:	b.ne	353cc <__asan_cplus_demangle_type@@Base+0x26bc>  // b.any
   353a4:	add	x1, x1, #0x1
   353a8:	str	x1, [x19, #24]
   353ac:	ldp	x19, x20, [sp, #16]
   353b0:	ldp	x29, x30, [sp], #32
   353b4:	ret
   353b8:	mov	x0, x19
   353bc:	ldp	x19, x20, [sp, #16]
   353c0:	ldp	x29, x30, [sp], #32
   353c4:	b	6750 <__asan_cplus_demangle_type@plt>
   353c8:	b	363a0 <__asan_cplus_demangle_mangled_name@@Base+0x1a8>
   353cc:	mov	x0, #0x0                   	// #0
   353d0:	b	353ac <__asan_cplus_demangle_type@@Base+0x269c>
   353d4:	nop
   353d8:	stp	x29, x30, [sp, #-64]!
   353dc:	mov	x29, sp
   353e0:	ldr	x1, [x0, #24]
   353e4:	stp	x19, x20, [sp, #16]
   353e8:	mov	x19, x0
   353ec:	str	x21, [sp, #32]
   353f0:	ldr	x21, [x0, #64]
   353f4:	ldrb	w2, [x1]
   353f8:	cmp	w2, #0x45
   353fc:	b.eq	3547c <__asan_cplus_demangle_type@@Base+0x276c>  // b.none
   35400:	add	x20, sp, #0x38
   35404:	str	xzr, [sp, #56]
   35408:	b	3542c <__asan_cplus_demangle_type@@Base+0x271c>
   3540c:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   35410:	str	x0, [x20]
   35414:	add	x20, x0, #0x10
   35418:	cbz	x0, 35448 <__asan_cplus_demangle_type@@Base+0x2738>
   3541c:	ldr	x1, [x19, #24]
   35420:	ldrb	w0, [x1]
   35424:	cmp	w0, #0x45
   35428:	b.eq	3545c <__asan_cplus_demangle_type@@Base+0x274c>  // b.none
   3542c:	mov	x0, x19
   35430:	bl	35330 <__asan_cplus_demangle_type@@Base+0x2620>
   35434:	mov	x3, #0x0                   	// #0
   35438:	mov	x2, x0
   3543c:	mov	w1, #0x2f                  	// #47
   35440:	mov	x0, x19
   35444:	cbnz	x2, 3540c <__asan_cplus_demangle_type@@Base+0x26fc>
   35448:	mov	x0, #0x0                   	// #0
   3544c:	ldp	x19, x20, [sp, #16]
   35450:	ldr	x21, [sp, #32]
   35454:	ldp	x29, x30, [sp], #64
   35458:	ret
   3545c:	add	x1, x1, #0x1
   35460:	str	x1, [x19, #24]
   35464:	str	x21, [x19, #64]
   35468:	ldp	x19, x20, [sp, #16]
   3546c:	ldr	x21, [sp, #32]
   35470:	ldr	x0, [sp, #56]
   35474:	ldp	x29, x30, [sp], #64
   35478:	ret
   3547c:	add	x1, x1, #0x1
   35480:	mov	x3, #0x0                   	// #0
   35484:	ldr	x21, [sp, #32]
   35488:	str	x1, [x0, #24]
   3548c:	ldp	x19, x20, [sp, #16]
   35490:	mov	x2, #0x0                   	// #0
   35494:	ldp	x29, x30, [sp], #64
   35498:	mov	w1, #0x2f                  	// #47
   3549c:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   354a0:	ldr	x3, [x0, #24]
   354a4:	ldrb	w1, [x3]
   354a8:	sub	w1, w1, #0x49
   354ac:	and	w1, w1, #0xff
   354b0:	cmp	w1, #0x1
   354b4:	b.hi	354c4 <__asan_cplus_demangle_type@@Base+0x27b4>  // b.pmore
   354b8:	add	x3, x3, #0x1
   354bc:	str	x3, [x0, #24]
   354c0:	b	353d8 <__asan_cplus_demangle_type@@Base+0x26c8>
   354c4:	mov	x0, #0x0                   	// #0
   354c8:	ret
   354cc:	nop
   354d0:	stp	x29, x30, [sp, #-112]!
   354d4:	mov	x29, sp
   354d8:	ldr	x2, [x0, #24]
   354dc:	stp	x19, x20, [sp, #16]
   354e0:	ldrb	w1, [x2]
   354e4:	cmp	w1, #0x55
   354e8:	b.eq	356a8 <__asan_cplus_demangle_type@@Base+0x2998>  // b.none
   354ec:	mov	x19, x0
   354f0:	b.hi	3553c <__asan_cplus_demangle_type@@Base+0x282c>  // b.pmore
   354f4:	cmp	w1, #0x4e
   354f8:	b.eq	35718 <__asan_cplus_demangle_type@@Base+0x2a08>  // b.none
   354fc:	cmp	w1, #0x53
   35500:	b.ne	356c0 <__asan_cplus_demangle_type@@Base+0x29b0>  // b.any
   35504:	ldrb	w1, [x2, #1]
   35508:	cmp	w1, #0x74
   3550c:	b.eq	355cc <__asan_cplus_demangle_type@@Base+0x28bc>  // b.none
   35510:	mov	w1, #0x0                   	// #0
   35514:	bl	329f8 <__asan_cplus_demangle_fill_name@@Base+0x240>
   35518:	ldr	x1, [x19, #24]
   3551c:	mov	x20, x0
   35520:	ldrb	w0, [x1]
   35524:	cmp	w0, #0x49
   35528:	b.eq	35660 <__asan_cplus_demangle_type@@Base+0x2950>  // b.none
   3552c:	mov	x0, x20
   35530:	ldp	x19, x20, [sp, #16]
   35534:	ldp	x29, x30, [sp], #112
   35538:	ret
   3553c:	cmp	w1, #0x5a
   35540:	b.ne	356c0 <__asan_cplus_demangle_type@@Base+0x29b0>  // b.any
   35544:	add	x2, x2, #0x1
   35548:	str	x2, [x0, #24]
   3554c:	mov	w1, #0x0                   	// #0
   35550:	bl	35a38 <__asan_cplus_demangle_type@@Base+0x2d28>
   35554:	mov	x20, x0
   35558:	cbz	x0, 356a0 <__asan_cplus_demangle_type@@Base+0x2990>
   3555c:	ldr	x0, [x19, #24]
   35560:	ldrb	w1, [x0]
   35564:	cmp	w1, #0x45
   35568:	b.ne	356a0 <__asan_cplus_demangle_type@@Base+0x2990>  // b.any
   3556c:	add	x1, x0, #0x1
   35570:	str	x1, [x19, #24]
   35574:	ldrb	w1, [x0, #1]
   35578:	cmp	w1, #0x73
   3557c:	b.eq	359cc <__asan_cplus_demangle_type@@Base+0x2cbc>  // b.none
   35580:	cmp	w1, #0x64
   35584:	b.eq	358a4 <__asan_cplus_demangle_type@@Base+0x2b94>  // b.none
   35588:	mov	x0, x19
   3558c:	bl	354d0 <__asan_cplus_demangle_type@@Base+0x27c0>
   35590:	mov	x3, x0
   35594:	cbz	x0, 355a8 <__asan_cplus_demangle_type@@Base+0x2898>
   35598:	ldr	w0, [x0]
   3559c:	sub	w0, w0, #0x46
   355a0:	tst	w0, #0xfffffffd
   355a4:	b.ne	359fc <__asan_cplus_demangle_type@@Base+0x2cec>  // b.any
   355a8:	ldr	w0, [x20]
   355ac:	cmp	w0, #0x3
   355b0:	b.eq	35994 <__asan_cplus_demangle_type@@Base+0x2c84>  // b.none
   355b4:	mov	x2, x20
   355b8:	mov	x0, x19
   355bc:	mov	w1, #0x2                   	// #2
   355c0:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   355c4:	mov	x20, x0
   355c8:	b	3552c <__asan_cplus_demangle_type@@Base+0x281c>
   355cc:	add	x2, x2, #0x2
   355d0:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   355d4:	add	x1, x1, #0xbd0
   355d8:	str	x2, [x0, #24]
   355dc:	mov	w2, #0x3                   	// #3
   355e0:	bl	327e8 <__asan_cplus_demangle_fill_name@@Base+0x30>
   355e4:	mov	x20, x0
   355e8:	mov	x0, x19
   355ec:	bl	33b30 <__asan_cplus_demangle_type@@Base+0xe20>
   355f0:	mov	x2, x20
   355f4:	mov	x3, x0
   355f8:	mov	w1, #0x1                   	// #1
   355fc:	mov	x0, x19
   35600:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   35604:	mov	x20, x0
   35608:	ldr	w0, [x19, #72]
   3560c:	ldr	x1, [x19, #24]
   35610:	add	w0, w0, #0x3
   35614:	str	w0, [x19, #72]
   35618:	ldrb	w0, [x1]
   3561c:	cmp	w0, #0x49
   35620:	b.ne	3552c <__asan_cplus_demangle_type@@Base+0x281c>  // b.any
   35624:	cbz	x20, 356a0 <__asan_cplus_demangle_type@@Base+0x2990>
   35628:	ldp	w0, w2, [x19, #56]
   3562c:	cmp	w0, w2
   35630:	b.ge	356a0 <__asan_cplus_demangle_type@@Base+0x2990>  // b.tcont
   35634:	ldr	x4, [x19, #48]
   35638:	add	w2, w0, #0x1
   3563c:	mov	x3, #0x0                   	// #0
   35640:	str	x20, [x4, w0, sxtw #3]
   35644:	str	w2, [x19, #56]
   35648:	ldrb	w0, [x1]
   3564c:	sub	w0, w0, #0x49
   35650:	and	w0, w0, #0xff
   35654:	cmp	w0, #0x1
   35658:	b.hi	35674 <__asan_cplus_demangle_type@@Base+0x2964>  // b.pmore
   3565c:	nop
   35660:	add	x1, x1, #0x1
   35664:	str	x1, [x19, #24]
   35668:	mov	x0, x19
   3566c:	bl	353d8 <__asan_cplus_demangle_type@@Base+0x26c8>
   35670:	mov	x3, x0
   35674:	mov	x2, x20
   35678:	mov	x0, x19
   3567c:	mov	w1, #0x4                   	// #4
   35680:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   35684:	mov	x20, x0
   35688:	b	3552c <__asan_cplus_demangle_type@@Base+0x281c>
   3568c:	mov	x0, x19
   35690:	bl	2cbd8 <__asan_backtrace_create_state@@Base+0x648>
   35694:	cbnz	w0, 358e0 <__asan_cplus_demangle_type@@Base+0x2bd0>
   35698:	ldp	x21, x22, [sp, #32]
   3569c:	nop
   356a0:	mov	x20, #0x0                   	// #0
   356a4:	b	3552c <__asan_cplus_demangle_type@@Base+0x281c>
   356a8:	bl	33b30 <__asan_cplus_demangle_type@@Base+0xe20>
   356ac:	mov	x20, x0
   356b0:	mov	x0, x20
   356b4:	ldp	x19, x20, [sp, #16]
   356b8:	ldp	x29, x30, [sp], #112
   356bc:	ret
   356c0:	mov	x0, x19
   356c4:	bl	33b30 <__asan_cplus_demangle_type@@Base+0xe20>
   356c8:	ldr	x1, [x19, #24]
   356cc:	mov	x20, x0
   356d0:	ldrb	w0, [x1]
   356d4:	cmp	w0, #0x49
   356d8:	b.ne	3552c <__asan_cplus_demangle_type@@Base+0x281c>  // b.any
   356dc:	cbz	x20, 356a0 <__asan_cplus_demangle_type@@Base+0x2990>
   356e0:	ldp	w2, w0, [x19, #56]
   356e4:	cmp	w2, w0
   356e8:	b.ge	356a0 <__asan_cplus_demangle_type@@Base+0x2990>  // b.tcont
   356ec:	ldr	x4, [x19, #48]
   356f0:	add	w0, w2, #0x1
   356f4:	mov	x3, #0x0                   	// #0
   356f8:	str	x20, [x4, w2, sxtw #3]
   356fc:	str	w0, [x19, #56]
   35700:	ldrb	w2, [x1]
   35704:	sub	w2, w2, #0x49
   35708:	and	w2, w2, #0xff
   3570c:	cmp	w2, #0x1
   35710:	b.ls	35660 <__asan_cplus_demangle_type@@Base+0x2950>  // b.plast
   35714:	b	35674 <__asan_cplus_demangle_type@@Base+0x2964>
   35718:	stp	x21, x22, [sp, #32]
   3571c:	add	x2, x2, #0x1
   35720:	add	x1, sp, #0x68
   35724:	str	x2, [x0, #24]
   35728:	mov	w2, #0x1                   	// #1
   3572c:	bl	350a0 <__asan_cplus_demangle_type@@Base+0x2390>
   35730:	mov	x22, x0
   35734:	cbz	x0, 35988 <__asan_cplus_demangle_type@@Base+0x2c78>
   35738:	mov	x1, #0x0                   	// #0
   3573c:	mov	x0, x19
   35740:	stp	x23, x24, [sp, #48]
   35744:	bl	2c6b0 <__asan_backtrace_create_state@@Base+0x120>
   35748:	mov	x23, x0
   3574c:	ldr	x1, [x19, #24]
   35750:	ldrb	w20, [x1]
   35754:	cbz	w20, 3580c <__asan_cplus_demangle_type@@Base+0x2afc>
   35758:	mov	x21, #0x0                   	// #0
   3575c:	mov	w24, #0x4c                  	// #76
   35760:	stp	x25, x26, [sp, #64]
   35764:	mov	w25, #0x55                  	// #85
   35768:	cmp	w20, #0x44
   3576c:	b.eq	35820 <__asan_cplus_demangle_type@@Base+0x2b10>  // b.none
   35770:	sub	w2, w20, #0x30
   35774:	sub	w0, w20, #0x61
   35778:	and	w2, w2, #0xff
   3577c:	and	w0, w0, #0xff
   35780:	cmp	w2, #0x9
   35784:	mov	x26, x21
   35788:	ccmp	w0, #0x19, #0x0, hi  // hi = pmore
   3578c:	b.ls	357a0 <__asan_cplus_demangle_type@@Base+0x2a90>  // b.plast
   35790:	cmp	w20, #0x43
   35794:	ccmp	w20, w25, #0x4, ne  // ne = any
   35798:	ccmp	w20, w24, #0x4, ne  // ne = any
   3579c:	b.ne	3586c <__asan_cplus_demangle_type@@Base+0x2b5c>  // b.any
   357a0:	mov	x0, x19
   357a4:	bl	33b30 <__asan_cplus_demangle_type@@Base+0xe20>
   357a8:	mov	x21, x0
   357ac:	cbz	x26, 357c8 <__asan_cplus_demangle_type@@Base+0x2ab8>
   357b0:	mov	w1, #0x1                   	// #1
   357b4:	mov	x3, x21
   357b8:	mov	x2, x26
   357bc:	mov	x0, x19
   357c0:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   357c4:	mov	x21, x0
   357c8:	cmp	w20, #0x53
   357cc:	ldr	x1, [x19, #24]
   357d0:	b.eq	35800 <__asan_cplus_demangle_type@@Base+0x2af0>  // b.none
   357d4:	ldrb	w20, [x1]
   357d8:	cmp	w20, #0x45
   357dc:	b.eq	35854 <__asan_cplus_demangle_type@@Base+0x2b44>  // b.none
   357e0:	cbz	x21, 35808 <__asan_cplus_demangle_type@@Base+0x2af8>
   357e4:	ldp	w0, w2, [x19, #56]
   357e8:	cmp	w0, w2
   357ec:	b.ge	35808 <__asan_cplus_demangle_type@@Base+0x2af8>  // b.tcont
   357f0:	ldr	x3, [x19, #48]
   357f4:	add	w2, w0, #0x1
   357f8:	str	x21, [x3, w0, sxtw #3]
   357fc:	str	w2, [x19, #56]
   35800:	ldrb	w20, [x1]
   35804:	cbnz	w20, 35768 <__asan_cplus_demangle_type@@Base+0x2a58>
   35808:	ldp	x25, x26, [sp, #64]
   3580c:	mov	x20, #0x0                   	// #0
   35810:	ldp	x23, x24, [sp, #48]
   35814:	str	xzr, [x22]
   35818:	ldp	x21, x22, [sp, #32]
   3581c:	b	3552c <__asan_cplus_demangle_type@@Base+0x281c>
   35820:	ldrb	w0, [x1, #1]
   35824:	and	w0, w0, #0xffffffdf
   35828:	and	w0, w0, #0xff
   3582c:	cmp	w0, #0x54
   35830:	mov	x0, x19
   35834:	b.ne	3585c <__asan_cplus_demangle_type@@Base+0x2b4c>  // b.any
   35838:	mov	x26, x21
   3583c:	bl	6750 <__asan_cplus_demangle_type@plt>
   35840:	mov	x21, x0
   35844:	mov	w1, #0x1                   	// #1
   35848:	cbnz	x26, 357b4 <__asan_cplus_demangle_type@@Base+0x2aa4>
   3584c:	ldr	x1, [x19, #24]
   35850:	b	357d4 <__asan_cplus_demangle_type@@Base+0x2ac4>
   35854:	mov	x26, x21
   35858:	b	35790 <__asan_cplus_demangle_type@@Base+0x2a80>
   3585c:	mov	x26, x21
   35860:	bl	33b30 <__asan_cplus_demangle_type@@Base+0xe20>
   35864:	mov	x21, x0
   35868:	b	35844 <__asan_cplus_demangle_type@@Base+0x2b34>
   3586c:	cmp	w20, #0x53
   35870:	b.eq	35920 <__asan_cplus_demangle_type@@Base+0x2c10>  // b.none
   35874:	cmp	w20, #0x49
   35878:	b.eq	359ac <__asan_cplus_demangle_type@@Base+0x2c9c>  // b.none
   3587c:	cmp	w20, #0x54
   35880:	b.eq	35a18 <__asan_cplus_demangle_type@@Base+0x2d08>  // b.none
   35884:	cmp	w20, #0x45
   35888:	b.eq	3593c <__asan_cplus_demangle_type@@Base+0x2c2c>  // b.none
   3588c:	cmp	w20, #0x4d
   35890:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   35894:	b.eq	35808 <__asan_cplus_demangle_type@@Base+0x2af8>  // b.none
   35898:	add	x1, x1, #0x1
   3589c:	str	x1, [x19, #24]
   358a0:	b	35800 <__asan_cplus_demangle_type@@Base+0x2af0>
   358a4:	stp	x21, x22, [sp, #32]
   358a8:	add	x0, x0, #0x2
   358ac:	str	x0, [x19, #24]
   358b0:	mov	x0, x19
   358b4:	bl	2c9e0 <__asan_backtrace_create_state@@Base+0x450>
   358b8:	mov	w21, w0
   358bc:	tbnz	w0, #31, 35698 <__asan_cplus_demangle_type@@Base+0x2988>
   358c0:	mov	x0, x19
   358c4:	bl	354d0 <__asan_cplus_demangle_type@@Base+0x27c0>
   358c8:	mov	x11, x0
   358cc:	cbz	x0, 358e0 <__asan_cplus_demangle_type@@Base+0x2bd0>
   358d0:	ldr	w0, [x0]
   358d4:	sub	w0, w0, #0x46
   358d8:	tst	w0, #0xfffffffd
   358dc:	b.ne	3568c <__asan_cplus_demangle_type@@Base+0x297c>  // b.any
   358e0:	ldp	w1, w0, [x19, #40]
   358e4:	cmp	w1, w0
   358e8:	b.ge	35a28 <__asan_cplus_demangle_type@@Base+0x2d18>  // b.tcont
   358ec:	mov	w2, #0x18                  	// #24
   358f0:	add	w4, w1, #0x1
   358f4:	ldr	x0, [x19, #32]
   358f8:	smull	x1, w1, w2
   358fc:	mov	w2, #0x47                  	// #71
   35900:	add	x3, x0, x1
   35904:	str	wzr, [x3, #4]
   35908:	str	w4, [x19, #40]
   3590c:	str	w2, [x0, x1]
   35910:	str	x11, [x3, #8]
   35914:	str	w21, [x3, #16]
   35918:	ldp	x21, x22, [sp, #32]
   3591c:	b	355a8 <__asan_cplus_demangle_type@@Base+0x2898>
   35920:	mov	x0, x19
   35924:	mov	w1, #0x1                   	// #1
   35928:	bl	329f8 <__asan_cplus_demangle_fill_name@@Base+0x240>
   3592c:	mov	x21, x0
   35930:	cbnz	x26, 357b0 <__asan_cplus_demangle_type@@Base+0x2aa0>
   35934:	ldr	x1, [x19, #24]
   35938:	b	35800 <__asan_cplus_demangle_type@@Base+0x2af0>
   3593c:	str	x21, [x22]
   35940:	cbz	x21, 35980 <__asan_cplus_demangle_type@@Base+0x2c70>
   35944:	cbz	x23, 35954 <__asan_cplus_demangle_type@@Base+0x2c44>
   35948:	ldr	x0, [sp, #104]
   3594c:	str	x0, [x23, #8]
   35950:	str	x23, [sp, #104]
   35954:	ldr	x0, [x19, #24]
   35958:	ldrb	w1, [x0]
   3595c:	cmp	w1, #0x45
   35960:	b.ne	35980 <__asan_cplus_demangle_type@@Base+0x2c70>  // b.any
   35964:	add	x0, x0, #0x1
   35968:	ldp	x21, x22, [sp, #32]
   3596c:	ldp	x23, x24, [sp, #48]
   35970:	ldp	x25, x26, [sp, #64]
   35974:	str	x0, [x19, #24]
   35978:	ldr	x20, [sp, #104]
   3597c:	b	3552c <__asan_cplus_demangle_type@@Base+0x281c>
   35980:	ldp	x23, x24, [sp, #48]
   35984:	ldp	x25, x26, [sp, #64]
   35988:	mov	x20, #0x0                   	// #0
   3598c:	ldp	x21, x22, [sp, #32]
   35990:	b	3552c <__asan_cplus_demangle_type@@Base+0x281c>
   35994:	ldr	x0, [x20, #16]
   35998:	ldr	w1, [x0]
   3599c:	cmp	w1, #0x29
   359a0:	b.ne	355b4 <__asan_cplus_demangle_type@@Base+0x28a4>  // b.any
   359a4:	str	xzr, [x0, #8]
   359a8:	b	355b4 <__asan_cplus_demangle_type@@Base+0x28a4>
   359ac:	cbz	x21, 35808 <__asan_cplus_demangle_type@@Base+0x2af8>
   359b0:	add	x1, x1, #0x1
   359b4:	str	x1, [x19, #24]
   359b8:	mov	x0, x19
   359bc:	bl	353d8 <__asan_cplus_demangle_type@@Base+0x26c8>
   359c0:	mov	x21, x0
   359c4:	mov	w1, #0x4                   	// #4
   359c8:	b	357b4 <__asan_cplus_demangle_type@@Base+0x2aa4>
   359cc:	add	x0, x0, #0x2
   359d0:	str	x0, [x19, #24]
   359d4:	mov	x0, x19
   359d8:	bl	2cbd8 <__asan_backtrace_create_state@@Base+0x648>
   359dc:	cbz	w0, 356a0 <__asan_cplus_demangle_type@@Base+0x2990>
   359e0:	mov	x0, x19
   359e4:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   359e8:	mov	w2, #0xe                   	// #14
   359ec:	add	x1, x1, #0xbc0
   359f0:	bl	327e8 <__asan_cplus_demangle_fill_name@@Base+0x30>
   359f4:	mov	x3, x0
   359f8:	b	355a8 <__asan_cplus_demangle_type@@Base+0x2898>
   359fc:	mov	x0, x19
   35a00:	str	x3, [sp, #88]
   35a04:	bl	2cbd8 <__asan_backtrace_create_state@@Base+0x648>
   35a08:	ldr	x3, [sp, #88]
   35a0c:	cbnz	w0, 355a8 <__asan_cplus_demangle_type@@Base+0x2898>
   35a10:	mov	x20, #0x0                   	// #0
   35a14:	b	3552c <__asan_cplus_demangle_type@@Base+0x281c>
   35a18:	mov	x0, x19
   35a1c:	bl	2ca58 <__asan_backtrace_create_state@@Base+0x4c8>
   35a20:	mov	x21, x0
   35a24:	b	35844 <__asan_cplus_demangle_type@@Base+0x2b34>
   35a28:	mov	x3, #0x0                   	// #0
   35a2c:	ldp	x21, x22, [sp, #32]
   35a30:	b	355a8 <__asan_cplus_demangle_type@@Base+0x2898>
   35a34:	nop
   35a38:	stp	x29, x30, [sp, #-80]!
   35a3c:	mov	w3, #0x54                  	// #84
   35a40:	mov	x29, sp
   35a44:	ldr	x2, [x0, #24]
   35a48:	stp	x19, x20, [sp, #16]
   35a4c:	mov	x19, x0
   35a50:	stp	x21, x22, [sp, #32]
   35a54:	mov	w21, w1
   35a58:	ldrb	w1, [x2]
   35a5c:	cmp	w1, #0x47
   35a60:	ccmp	w1, w3, #0x4, ne  // ne = any
   35a64:	b.ne	35af0 <__asan_cplus_demangle_type@@Base+0x2de0>  // b.any
   35a68:	ldr	w3, [x0, #72]
   35a6c:	add	w1, w3, #0x14
   35a70:	str	w1, [x0, #72]
   35a74:	ldrb	w1, [x2]
   35a78:	cmp	w1, #0x54
   35a7c:	b.eq	35c88 <__asan_cplus_demangle_type@@Base+0x2f78>  // b.none
   35a80:	cmp	w1, #0x47
   35a84:	b.ne	35c70 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   35a88:	add	x1, x2, #0x1
   35a8c:	str	x1, [x0, #24]
   35a90:	ldrb	w1, [x2, #1]
   35a94:	cbz	w1, 35c70 <__asan_cplus_demangle_type@@Base+0x2f60>
   35a98:	add	x1, x2, #0x2
   35a9c:	str	x1, [x0, #24]
   35aa0:	ldrb	w1, [x2, #1]
   35aa4:	cmp	w1, #0x54
   35aa8:	b.eq	35fec <__asan_cplus_demangle_type@@Base+0x32dc>  // b.none
   35aac:	b.hi	35be4 <__asan_cplus_demangle_type@@Base+0x2ed4>  // b.pmore
   35ab0:	cmp	w1, #0x41
   35ab4:	b.eq	35fc4 <__asan_cplus_demangle_type@@Base+0x32b4>  // b.none
   35ab8:	cmp	w1, #0x52
   35abc:	b.ne	35c70 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   35ac0:	bl	354d0 <__asan_cplus_demangle_type@@Base+0x27c0>
   35ac4:	mov	x11, x0
   35ac8:	mov	x0, x19
   35acc:	bl	2c978 <__asan_backtrace_create_state@@Base+0x3e8>
   35ad0:	mov	x3, x0
   35ad4:	mov	x0, x19
   35ad8:	mov	x2, x11
   35adc:	ldp	x19, x20, [sp, #16]
   35ae0:	mov	w1, #0x16                  	// #22
   35ae4:	ldp	x21, x22, [sp, #32]
   35ae8:	ldp	x29, x30, [sp], #80
   35aec:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   35af0:	bl	354d0 <__asan_cplus_demangle_type@@Base+0x27c0>
   35af4:	mov	x20, x0
   35af8:	cbz	x0, 35c70 <__asan_cplus_demangle_type@@Base+0x2f60>
   35afc:	cbz	w21, 35b4c <__asan_cplus_demangle_type@@Base+0x2e3c>
   35b00:	ldr	w0, [x19, #16]
   35b04:	tbnz	w0, #0, 35b4c <__asan_cplus_demangle_type@@Base+0x2e3c>
   35b08:	mov	x1, #0x1f                  	// #31
   35b0c:	mov	x2, #0x1                   	// #1
   35b10:	movk	x1, #0x1a, lsl #48
   35b14:	ldr	w3, [x20]
   35b18:	sub	w0, w3, #0x1c
   35b1c:	cmp	w0, #0x34
   35b20:	b.hi	35b30 <__asan_cplus_demangle_type@@Base+0x2e20>  // b.pmore
   35b24:	lsl	x0, x2, x0
   35b28:	tst	x0, x1
   35b2c:	b.ne	35e28 <__asan_cplus_demangle_type@@Base+0x3118>  // b.any
   35b30:	cmp	w3, #0x2
   35b34:	b.eq	35e30 <__asan_cplus_demangle_type@@Base+0x3120>  // b.none
   35b38:	mov	x0, x20
   35b3c:	ldp	x19, x20, [sp, #16]
   35b40:	ldp	x21, x22, [sp, #32]
   35b44:	ldp	x29, x30, [sp], #80
   35b48:	ret
   35b4c:	ldr	x0, [x19, #24]
   35b50:	ldrb	w0, [x0]
   35b54:	cmp	w0, #0x45
   35b58:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   35b5c:	b.eq	35b38 <__asan_cplus_demangle_type@@Base+0x2e28>  // b.none
   35b60:	mov	x1, #0x1f                  	// #31
   35b64:	mov	x4, x20
   35b68:	mov	x2, #0x1                   	// #1
   35b6c:	movk	x1, #0x1a, lsl #48
   35b70:	ldr	w3, [x4]
   35b74:	cmp	w3, #0x4
   35b78:	b.eq	35e78 <__asan_cplus_demangle_type@@Base+0x3168>  // b.none
   35b7c:	sub	w0, w3, #0x1c
   35b80:	b.hi	35cf0 <__asan_cplus_demangle_type@@Base+0x2fe0>  // b.pmore
   35b84:	cmp	w3, #0x2
   35b88:	b.ne	35b94 <__asan_cplus_demangle_type@@Base+0x2e84>  // b.any
   35b8c:	ldr	x4, [x4, #16]
   35b90:	cbnz	x4, 35b70 <__asan_cplus_demangle_type@@Base+0x2e60>
   35b94:	mov	w1, #0x0                   	// #0
   35b98:	mov	x0, x19
   35b9c:	bl	33fd8 <__asan_cplus_demangle_type@@Base+0x12c8>
   35ba0:	mov	x3, x0
   35ba4:	cbz	x0, 35c70 <__asan_cplus_demangle_type@@Base+0x2f60>
   35ba8:	cbnz	w21, 35bc8 <__asan_cplus_demangle_type@@Base+0x2eb8>
   35bac:	ldr	w0, [x20]
   35bb0:	cmp	w0, #0x2
   35bb4:	b.ne	35bc8 <__asan_cplus_demangle_type@@Base+0x2eb8>  // b.any
   35bb8:	ldr	w0, [x3]
   35bbc:	cmp	w0, #0x29
   35bc0:	b.ne	35bc8 <__asan_cplus_demangle_type@@Base+0x2eb8>  // b.any
   35bc4:	str	xzr, [x3, #8]
   35bc8:	mov	x2, x20
   35bcc:	mov	x0, x19
   35bd0:	ldp	x19, x20, [sp, #16]
   35bd4:	mov	w1, #0x3                   	// #3
   35bd8:	ldp	x21, x22, [sp, #32]
   35bdc:	ldp	x29, x30, [sp], #80
   35be0:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   35be4:	cmp	w1, #0x56
   35be8:	b.eq	35fa0 <__asan_cplus_demangle_type@@Base+0x3290>  // b.none
   35bec:	cmp	w1, #0x72
   35bf0:	b.ne	35c70 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   35bf4:	add	x0, x0, #0x18
   35bf8:	bl	2c8a8 <__asan_backtrace_create_state@@Base+0x318>
   35bfc:	cmp	w0, #0x1
   35c00:	b.le	35c70 <__asan_cplus_demangle_type@@Base+0x2f60>
   35c04:	ldr	x1, [x19, #24]
   35c08:	ldrb	w2, [x1]
   35c0c:	cbz	w2, 35c70 <__asan_cplus_demangle_type@@Base+0x2f60>
   35c10:	add	x8, x1, #0x1
   35c14:	str	x8, [x19, #24]
   35c18:	ldrb	w1, [x1]
   35c1c:	cmp	w1, #0x5f
   35c20:	b.ne	35c70 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   35c24:	sub	w21, w0, #0x1
   35c28:	mov	w22, #0x41                  	// #65
   35c2c:	stp	x23, x24, [sp, #48]
   35c30:	mov	w23, #0x18                  	// #24
   35c34:	str	x25, [sp, #64]
   35c38:	mov	x25, #0x0                   	// #0
   35c3c:	ldrb	w0, [x8]
   35c40:	cbz	w0, 35c68 <__asan_cplus_demangle_type@@Base+0x2f58>
   35c44:	cmp	w0, #0x24
   35c48:	b.ne	35f48 <__asan_cplus_demangle_type@@Base+0x3238>  // b.any
   35c4c:	ldrb	w0, [x8, #1]
   35c50:	cmp	w0, #0x53
   35c54:	b.eq	3603c <__asan_cplus_demangle_type@@Base+0x332c>  // b.none
   35c58:	cmp	w0, #0x5f
   35c5c:	b.eq	35ebc <__asan_cplus_demangle_type@@Base+0x31ac>  // b.none
   35c60:	cmp	w0, #0x24
   35c64:	b.eq	35ec0 <__asan_cplus_demangle_type@@Base+0x31b0>  // b.none
   35c68:	ldp	x23, x24, [sp, #48]
   35c6c:	ldr	x25, [sp, #64]
   35c70:	mov	x20, #0x0                   	// #0
   35c74:	mov	x0, x20
   35c78:	ldp	x19, x20, [sp, #16]
   35c7c:	ldp	x21, x22, [sp, #32]
   35c80:	ldp	x29, x30, [sp], #80
   35c84:	ret
   35c88:	add	x1, x2, #0x1
   35c8c:	str	x1, [x0, #24]
   35c90:	ldrb	w1, [x2, #1]
   35c94:	cbz	w1, 35c70 <__asan_cplus_demangle_type@@Base+0x2f60>
   35c98:	add	x1, x2, #0x2
   35c9c:	str	x1, [x0, #24]
   35ca0:	ldrb	w1, [x2, #1]
   35ca4:	cmp	w1, #0x53
   35ca8:	b.eq	36194 <__asan_cplus_demangle_type@@Base+0x3484>  // b.none
   35cac:	b.hi	35d70 <__asan_cplus_demangle_type@@Base+0x3060>  // b.pmore
   35cb0:	cmp	w1, #0x48
   35cb4:	b.eq	36170 <__asan_cplus_demangle_type@@Base+0x3460>  // b.none
   35cb8:	b.hi	35d3c <__asan_cplus_demangle_type@@Base+0x302c>  // b.pmore
   35cbc:	cmp	w1, #0x43
   35cc0:	b.eq	36110 <__asan_cplus_demangle_type@@Base+0x3400>  // b.none
   35cc4:	cmp	w1, #0x46
   35cc8:	b.ne	35d10 <__asan_cplus_demangle_type@@Base+0x3000>  // b.any
   35ccc:	bl	6750 <__asan_cplus_demangle_type@plt>
   35cd0:	mov	x2, x0
   35cd4:	mov	x0, x19
   35cd8:	mov	x3, #0x0                   	// #0
   35cdc:	ldp	x19, x20, [sp, #16]
   35ce0:	mov	w1, #0xe                   	// #14
   35ce4:	ldp	x21, x22, [sp, #32]
   35ce8:	ldp	x29, x30, [sp], #80
   35cec:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   35cf0:	cmp	w0, #0x34
   35cf4:	b.hi	35b94 <__asan_cplus_demangle_type@@Base+0x2e84>  // b.pmore
   35cf8:	lsl	x0, x2, x0
   35cfc:	tst	x0, x1
   35d00:	b.eq	35b94 <__asan_cplus_demangle_type@@Base+0x2e84>  // b.none
   35d04:	ldr	x4, [x4, #8]
   35d08:	cbnz	x4, 35b70 <__asan_cplus_demangle_type@@Base+0x2e60>
   35d0c:	b	35b94 <__asan_cplus_demangle_type@@Base+0x2e84>
   35d10:	cmp	w1, #0x41
   35d14:	b.ne	35c70 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   35d18:	bl	35330 <__asan_cplus_demangle_type@@Base+0x2620>
   35d1c:	mov	x2, x0
   35d20:	mov	x0, x19
   35d24:	mov	x3, #0x0                   	// #0
   35d28:	ldp	x19, x20, [sp, #16]
   35d2c:	mov	w1, #0x30                  	// #48
   35d30:	ldp	x21, x22, [sp, #32]
   35d34:	ldp	x29, x30, [sp], #80
   35d38:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   35d3c:	cmp	w1, #0x49
   35d40:	b.eq	3608c <__asan_cplus_demangle_type@@Base+0x337c>  // b.none
   35d44:	cmp	w1, #0x4a
   35d48:	b.ne	35c70 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   35d4c:	bl	6750 <__asan_cplus_demangle_type@plt>
   35d50:	mov	x2, x0
   35d54:	mov	x0, x19
   35d58:	mov	x3, #0x0                   	// #0
   35d5c:	ldp	x19, x20, [sp, #16]
   35d60:	mov	w1, #0x12                  	// #18
   35d64:	ldp	x21, x22, [sp, #32]
   35d68:	ldp	x29, x30, [sp], #80
   35d6c:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   35d70:	cmp	w1, #0x63
   35d74:	b.eq	36044 <__asan_cplus_demangle_type@@Base+0x3334>  // b.none
   35d78:	b.hi	35db0 <__asan_cplus_demangle_type@@Base+0x30a0>  // b.pmore
   35d7c:	cmp	w1, #0x56
   35d80:	b.eq	360e4 <__asan_cplus_demangle_type@@Base+0x33d4>  // b.none
   35d84:	cmp	w1, #0x57
   35d88:	b.ne	35df4 <__asan_cplus_demangle_type@@Base+0x30e4>  // b.any
   35d8c:	bl	354d0 <__asan_cplus_demangle_type@@Base+0x27c0>
   35d90:	mov	x2, x0
   35d94:	mov	x0, x19
   35d98:	mov	x3, #0x0                   	// #0
   35d9c:	ldp	x19, x20, [sp, #16]
   35da0:	mov	w1, #0x15                  	// #21
   35da4:	ldp	x21, x22, [sp, #32]
   35da8:	ldp	x29, x30, [sp], #80
   35dac:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   35db0:	cmp	w1, #0x68
   35db4:	b.eq	360b0 <__asan_cplus_demangle_type@@Base+0x33a0>  // b.none
   35db8:	cmp	w1, #0x76
   35dbc:	b.ne	35c70 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   35dc0:	bl	2cad8 <__asan_backtrace_create_state@@Base+0x548>
   35dc4:	cbz	w0, 35c70 <__asan_cplus_demangle_type@@Base+0x2f60>
   35dc8:	mov	x0, x19
   35dcc:	mov	w1, #0x0                   	// #0
   35dd0:	bl	35a38 <__asan_cplus_demangle_type@@Base+0x2d28>
   35dd4:	mov	x2, x0
   35dd8:	mov	x0, x19
   35ddc:	mov	x3, #0x0                   	// #0
   35de0:	ldp	x19, x20, [sp, #16]
   35de4:	mov	w1, #0x10                  	// #16
   35de8:	ldp	x21, x22, [sp, #32]
   35dec:	ldp	x29, x30, [sp], #80
   35df0:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   35df4:	cmp	w1, #0x54
   35df8:	b.ne	35c70 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   35dfc:	add	w3, w3, #0xa
   35e00:	str	w3, [x0, #72]
   35e04:	bl	6750 <__asan_cplus_demangle_type@plt>
   35e08:	mov	x2, x0
   35e0c:	mov	x0, x19
   35e10:	mov	x3, #0x0                   	// #0
   35e14:	ldp	x19, x20, [sp, #16]
   35e18:	mov	w1, #0xa                   	// #10
   35e1c:	ldp	x21, x22, [sp, #32]
   35e20:	ldp	x29, x30, [sp], #80
   35e24:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   35e28:	ldr	x20, [x20, #8]
   35e2c:	b	35b14 <__asan_cplus_demangle_type@@Base+0x2e04>
   35e30:	ldr	x3, [x20, #16]
   35e34:	mov	x1, #0x1f                  	// #31
   35e38:	mov	x2, #0x1                   	// #1
   35e3c:	movk	x1, #0x1a, lsl #48
   35e40:	ldr	w0, [x3]
   35e44:	sub	w0, w0, #0x1c
   35e48:	cmp	w0, #0x34
   35e4c:	b.hi	35b38 <__asan_cplus_demangle_type@@Base+0x2e28>  // b.pmore
   35e50:	lsl	x0, x2, x0
   35e54:	tst	x0, x1
   35e58:	b.eq	35b38 <__asan_cplus_demangle_type@@Base+0x2e28>  // b.none
   35e5c:	ldr	x3, [x3, #8]
   35e60:	str	x3, [x20, #16]
   35e64:	ldr	w0, [x3]
   35e68:	sub	w0, w0, #0x1c
   35e6c:	cmp	w0, #0x34
   35e70:	b.ls	35e50 <__asan_cplus_demangle_type@@Base+0x3140>  // b.plast
   35e74:	b	35b38 <__asan_cplus_demangle_type@@Base+0x2e28>
   35e78:	ldr	x1, [x4, #8]
   35e7c:	cbz	x1, 35ea8 <__asan_cplus_demangle_type@@Base+0x3198>
   35e80:	ldr	w0, [x1]
   35e84:	sub	w2, w0, #0x1
   35e88:	cmp	w0, #0x8
   35e8c:	b.hi	35eb0 <__asan_cplus_demangle_type@@Base+0x31a0>  // b.pmore
   35e90:	cmp	w0, #0x6
   35e94:	b.hi	35b94 <__asan_cplus_demangle_type@@Base+0x2e84>  // b.pmore
   35e98:	cmp	w2, #0x1
   35e9c:	b.hi	35ea8 <__asan_cplus_demangle_type@@Base+0x3198>  // b.pmore
   35ea0:	ldr	x1, [x1, #16]
   35ea4:	cbnz	x1, 35e80 <__asan_cplus_demangle_type@@Base+0x3170>
   35ea8:	mov	w1, #0x1                   	// #1
   35eac:	b	35b98 <__asan_cplus_demangle_type@@Base+0x2e88>
   35eb0:	cmp	w0, #0x35
   35eb4:	cset	w1, ne  // ne = any
   35eb8:	b	35b98 <__asan_cplus_demangle_type@@Base+0x2e88>
   35ebc:	mov	w0, #0x2e                  	// #46
   35ec0:	ldp	w1, w2, [x19, #40]
   35ec4:	ldr	x8, [x19, #24]
   35ec8:	cmp	w1, w2
   35ecc:	add	x8, x8, #0x2
   35ed0:	b.ge	361b8 <__asan_cplus_demangle_type@@Base+0x34a8>  // b.tcont
   35ed4:	ldr	x4, [x19, #32]
   35ed8:	smull	x2, w1, w23
   35edc:	add	w1, w1, #0x1
   35ee0:	sub	w21, w21, #0x2
   35ee4:	add	x3, x4, x2
   35ee8:	str	wzr, [x3, #4]
   35eec:	str	w1, [x19, #40]
   35ef0:	str	w22, [x4, x2]
   35ef4:	str	w0, [x3, #8]
   35ef8:	str	x8, [x19, #24]
   35efc:	cbz	x25, 36034 <__asan_cplus_demangle_type@@Base+0x3324>
   35f00:	mov	x2, x25
   35f04:	mov	x0, x19
   35f08:	mov	w1, #0x40                  	// #64
   35f0c:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   35f10:	mov	x25, x0
   35f14:	cbz	x0, 35c68 <__asan_cplus_demangle_type@@Base+0x2f58>
   35f18:	cmp	w21, #0x0
   35f1c:	b.gt	35c3c <__asan_cplus_demangle_type@@Base+0x2f2c>
   35f20:	mov	x2, x25
   35f24:	mov	x0, x19
   35f28:	ldp	x19, x20, [sp, #16]
   35f2c:	mov	x3, #0x0                   	// #0
   35f30:	ldp	x21, x22, [sp, #32]
   35f34:	mov	w1, #0x3f                  	// #63
   35f38:	ldp	x23, x24, [sp, #48]
   35f3c:	ldr	x25, [sp, #64]
   35f40:	ldp	x29, x30, [sp], #80
   35f44:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   35f48:	mov	x20, #0x1                   	// #1
   35f4c:	b	35f54 <__asan_cplus_demangle_type@@Base+0x3244>
   35f50:	mov	x20, x3
   35f54:	cmp	w21, w20
   35f58:	mov	w24, w20
   35f5c:	b.le	35f74 <__asan_cplus_demangle_type@@Base+0x3264>
   35f60:	ldrb	w1, [x8, x20]
   35f64:	add	x3, x20, #0x1
   35f68:	cmp	w1, #0x24
   35f6c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   35f70:	b.ne	35f50 <__asan_cplus_demangle_type@@Base+0x3240>  // b.any
   35f74:	mov	x1, x8
   35f78:	mov	w2, w24
   35f7c:	mov	x0, x19
   35f80:	bl	327e8 <__asan_cplus_demangle_fill_name@@Base+0x30>
   35f84:	ldr	x8, [x19, #24]
   35f88:	sub	w21, w21, w24
   35f8c:	mov	x3, x0
   35f90:	add	x8, x8, x20
   35f94:	str	x8, [x19, #24]
   35f98:	cbnz	x0, 35efc <__asan_cplus_demangle_type@@Base+0x31ec>
   35f9c:	b	35c68 <__asan_cplus_demangle_type@@Base+0x2f58>
   35fa0:	bl	354d0 <__asan_cplus_demangle_type@@Base+0x27c0>
   35fa4:	mov	x2, x0
   35fa8:	mov	x0, x19
   35fac:	mov	x3, #0x0                   	// #0
   35fb0:	ldp	x19, x20, [sp, #16]
   35fb4:	mov	w1, #0x13                  	// #19
   35fb8:	ldp	x21, x22, [sp, #32]
   35fbc:	ldp	x29, x30, [sp], #80
   35fc0:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   35fc4:	mov	w1, #0x0                   	// #0
   35fc8:	bl	35a38 <__asan_cplus_demangle_type@@Base+0x2d28>
   35fcc:	mov	x2, x0
   35fd0:	mov	x0, x19
   35fd4:	ldp	x19, x20, [sp, #16]
   35fd8:	mov	x3, #0x0                   	// #0
   35fdc:	ldp	x21, x22, [sp, #32]
   35fe0:	mov	w1, #0x17                  	// #23
   35fe4:	ldp	x29, x30, [sp], #80
   35fe8:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   35fec:	ldrb	w1, [x2, #2]
   35ff0:	cbz	w1, 36008 <__asan_cplus_demangle_type@@Base+0x32f8>
   35ff4:	add	x1, x2, #0x3
   35ff8:	str	x1, [x0, #24]
   35ffc:	ldrb	w1, [x2, #2]
   36000:	cmp	w1, #0x6e
   36004:	b.eq	361cc <__asan_cplus_demangle_type@@Base+0x34bc>  // b.none
   36008:	mov	x0, x19
   3600c:	mov	w1, #0x0                   	// #0
   36010:	bl	35a38 <__asan_cplus_demangle_type@@Base+0x2d28>
   36014:	mov	x2, x0
   36018:	mov	x0, x19
   3601c:	mov	x3, #0x0                   	// #0
   36020:	ldp	x19, x20, [sp, #16]
   36024:	mov	w1, #0x49                  	// #73
   36028:	ldp	x21, x22, [sp, #32]
   3602c:	ldp	x29, x30, [sp], #80
   36030:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   36034:	mov	x25, x3
   36038:	b	35f18 <__asan_cplus_demangle_type@@Base+0x3208>
   3603c:	mov	w0, #0x2f                  	// #47
   36040:	b	35ec0 <__asan_cplus_demangle_type@@Base+0x31b0>
   36044:	mov	w1, #0x0                   	// #0
   36048:	bl	2cad8 <__asan_backtrace_create_state@@Base+0x548>
   3604c:	cbz	w0, 35c70 <__asan_cplus_demangle_type@@Base+0x2f60>
   36050:	mov	x0, x19
   36054:	mov	w1, #0x0                   	// #0
   36058:	bl	2cad8 <__asan_backtrace_create_state@@Base+0x548>
   3605c:	cbz	w0, 35c70 <__asan_cplus_demangle_type@@Base+0x2f60>
   36060:	mov	x0, x19
   36064:	mov	w1, #0x0                   	// #0
   36068:	bl	35a38 <__asan_cplus_demangle_type@@Base+0x2d28>
   3606c:	mov	x2, x0
   36070:	mov	x0, x19
   36074:	mov	x3, #0x0                   	// #0
   36078:	ldp	x19, x20, [sp, #16]
   3607c:	mov	w1, #0x11                  	// #17
   36080:	ldp	x21, x22, [sp, #32]
   36084:	ldp	x29, x30, [sp], #80
   36088:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   3608c:	bl	6750 <__asan_cplus_demangle_type@plt>
   36090:	mov	x2, x0
   36094:	mov	x0, x19
   36098:	mov	x3, #0x0                   	// #0
   3609c:	ldp	x19, x20, [sp, #16]
   360a0:	mov	w1, #0xc                   	// #12
   360a4:	ldp	x21, x22, [sp, #32]
   360a8:	ldp	x29, x30, [sp], #80
   360ac:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   360b0:	bl	2cad8 <__asan_backtrace_create_state@@Base+0x548>
   360b4:	cbz	w0, 35c70 <__asan_cplus_demangle_type@@Base+0x2f60>
   360b8:	mov	x0, x19
   360bc:	mov	w1, #0x0                   	// #0
   360c0:	bl	35a38 <__asan_cplus_demangle_type@@Base+0x2d28>
   360c4:	mov	x2, x0
   360c8:	mov	x0, x19
   360cc:	mov	x3, #0x0                   	// #0
   360d0:	ldp	x19, x20, [sp, #16]
   360d4:	mov	w1, #0xf                   	// #15
   360d8:	ldp	x21, x22, [sp, #32]
   360dc:	ldp	x29, x30, [sp], #80
   360e0:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   360e4:	add	w3, w3, #0xf
   360e8:	str	w3, [x0, #72]
   360ec:	bl	6750 <__asan_cplus_demangle_type@plt>
   360f0:	mov	x2, x0
   360f4:	mov	x0, x19
   360f8:	mov	x3, #0x0                   	// #0
   360fc:	ldp	x19, x20, [sp, #16]
   36100:	mov	w1, #0x9                   	// #9
   36104:	ldp	x21, x22, [sp, #32]
   36108:	ldp	x29, x30, [sp], #80
   3610c:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   36110:	bl	6750 <__asan_cplus_demangle_type@plt>
   36114:	mov	x20, x0
   36118:	add	x0, x19, #0x18
   3611c:	bl	2c8a8 <__asan_backtrace_create_state@@Base+0x318>
   36120:	tbnz	w0, #31, 35c70 <__asan_cplus_demangle_type@@Base+0x2f60>
   36124:	ldr	x0, [x19, #24]
   36128:	ldrb	w1, [x0]
   3612c:	cmp	w1, #0x5f
   36130:	b.ne	35c70 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   36134:	add	x0, x0, #0x1
   36138:	str	x0, [x19, #24]
   3613c:	mov	x0, x19
   36140:	bl	6750 <__asan_cplus_demangle_type@plt>
   36144:	mov	x2, x0
   36148:	ldr	w1, [x19, #72]
   3614c:	mov	x3, x20
   36150:	ldp	x21, x22, [sp, #32]
   36154:	add	w1, w1, #0x5
   36158:	str	w1, [x19, #72]
   3615c:	mov	x0, x19
   36160:	ldp	x19, x20, [sp, #16]
   36164:	mov	w1, #0xb                   	// #11
   36168:	ldp	x29, x30, [sp], #80
   3616c:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   36170:	bl	354d0 <__asan_cplus_demangle_type@@Base+0x27c0>
   36174:	mov	x2, x0
   36178:	mov	x0, x19
   3617c:	mov	x3, #0x0                   	// #0
   36180:	ldp	x19, x20, [sp, #16]
   36184:	mov	w1, #0x14                  	// #20
   36188:	ldp	x21, x22, [sp, #32]
   3618c:	ldp	x29, x30, [sp], #80
   36190:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   36194:	bl	6750 <__asan_cplus_demangle_type@plt>
   36198:	mov	x2, x0
   3619c:	mov	x0, x19
   361a0:	mov	x3, #0x0                   	// #0
   361a4:	ldp	x19, x20, [sp, #16]
   361a8:	mov	w1, #0xd                   	// #13
   361ac:	ldp	x21, x22, [sp, #32]
   361b0:	ldp	x29, x30, [sp], #80
   361b4:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   361b8:	mov	x20, #0x0                   	// #0
   361bc:	ldp	x23, x24, [sp, #48]
   361c0:	ldr	x25, [sp, #64]
   361c4:	str	x8, [x19, #24]
   361c8:	b	35b38 <__asan_cplus_demangle_type@@Base+0x2e28>
   361cc:	mov	w1, #0x0                   	// #0
   361d0:	bl	35a38 <__asan_cplus_demangle_type@@Base+0x2d28>
   361d4:	mov	x2, x0
   361d8:	mov	x0, x19
   361dc:	ldp	x19, x20, [sp, #16]
   361e0:	mov	x3, #0x0                   	// #0
   361e4:	ldp	x21, x22, [sp, #32]
   361e8:	mov	w1, #0x4a                  	// #74
   361ec:	ldp	x29, x30, [sp], #80
   361f0:	b	2c628 <__asan_backtrace_create_state@@Base+0x98>
   361f4:	nop

00000000000361f8 <__asan_cplus_demangle_mangled_name@@Base>:
   361f8:	stp	x29, x30, [sp, #-48]!
   361fc:	mov	x29, sp
   36200:	ldr	x2, [x0, #24]
   36204:	stp	x19, x20, [sp, #16]
   36208:	mov	x19, x0
   3620c:	str	x21, [sp, #32]
   36210:	mov	w21, w1
   36214:	ldrb	w3, [x2]
   36218:	cmp	w3, #0x5f
   3621c:	b.eq	3625c <__asan_cplus_demangle_mangled_name@@Base+0x64>  // b.none
   36220:	cbnz	w1, 3622c <__asan_cplus_demangle_mangled_name@@Base+0x34>
   36224:	cmp	w3, #0x5a
   36228:	b.eq	36244 <__asan_cplus_demangle_mangled_name@@Base+0x4c>  // b.none
   3622c:	mov	x20, #0x0                   	// #0
   36230:	mov	x0, x20
   36234:	ldp	x19, x20, [sp, #16]
   36238:	ldr	x21, [sp, #32]
   3623c:	ldp	x29, x30, [sp], #48
   36240:	ret
   36244:	add	x2, x2, #0x1
   36248:	ldr	x21, [sp, #32]
   3624c:	str	x2, [x19, #24]
   36250:	ldp	x19, x20, [sp, #16]
   36254:	ldp	x29, x30, [sp], #48
   36258:	b	35a38 <__asan_cplus_demangle_type@@Base+0x2d28>
   3625c:	add	x3, x2, #0x1
   36260:	str	x3, [x0, #24]
   36264:	ldrb	w3, [x2, #1]
   36268:	cmp	w3, #0x5a
   3626c:	b.ne	3622c <__asan_cplus_demangle_mangled_name@@Base+0x34>  // b.any
   36270:	add	x2, x2, #0x2
   36274:	str	x2, [x0, #24]
   36278:	bl	35a38 <__asan_cplus_demangle_type@@Base+0x2d28>
   3627c:	mov	x20, x0
   36280:	cbz	w21, 36230 <__asan_cplus_demangle_mangled_name@@Base+0x38>
   36284:	ldr	w0, [x19, #16]
   36288:	tbz	w0, #0, 36230 <__asan_cplus_demangle_mangled_name@@Base+0x38>
   3628c:	ldr	x1, [x19, #24]
   36290:	ldrb	w0, [x1]
   36294:	cmp	w0, #0x2e
   36298:	b.ne	36230 <__asan_cplus_demangle_mangled_name@@Base+0x38>  // b.any
   3629c:	ldrb	w2, [x1, #1]
   362a0:	sub	w0, w2, #0x61
   362a4:	cmp	w2, #0x5f
   362a8:	and	w0, w0, #0xff
   362ac:	ccmp	w0, #0x19, #0x0, ne  // ne = any
   362b0:	b.ls	36374 <__asan_cplus_demangle_mangled_name@@Base+0x17c>  // b.plast
   362b4:	nop
   362b8:	sub	w2, w2, #0x30
   362bc:	and	w2, w2, #0xff
   362c0:	cmp	w2, #0x9
   362c4:	b.hi	36230 <__asan_cplus_demangle_mangled_name@@Base+0x38>  // b.pmore
   362c8:	ldrb	w0, [x1]
   362cc:	mov	x2, x1
   362d0:	cmp	w0, #0x2e
   362d4:	b.ne	36324 <__asan_cplus_demangle_mangled_name@@Base+0x12c>  // b.any
   362d8:	ldrb	w3, [x2, #1]
   362dc:	sub	w3, w3, #0x30
   362e0:	and	w3, w3, #0xff
   362e4:	cmp	w3, #0x9
   362e8:	b.hi	36324 <__asan_cplus_demangle_mangled_name@@Base+0x12c>  // b.pmore
   362ec:	ldrb	w0, [x2, #2]
   362f0:	add	x2, x2, #0x2
   362f4:	sub	w3, w0, #0x30
   362f8:	and	w3, w3, #0xff
   362fc:	cmp	w3, #0x9
   36300:	b.hi	362d0 <__asan_cplus_demangle_mangled_name@@Base+0xd8>  // b.pmore
   36304:	nop
   36308:	ldrb	w0, [x2, #1]!
   3630c:	sub	w3, w0, #0x30
   36310:	and	w3, w3, #0xff
   36314:	cmp	w3, #0x9
   36318:	b.ls	36308 <__asan_cplus_demangle_mangled_name@@Base+0x110>  // b.plast
   3631c:	cmp	w0, #0x2e
   36320:	b.eq	362d8 <__asan_cplus_demangle_mangled_name@@Base+0xe0>  // b.none
   36324:	str	x2, [x19, #24]
   36328:	mov	x0, x19
   3632c:	sub	w2, w2, w1
   36330:	bl	327e8 <__asan_cplus_demangle_fill_name@@Base+0x30>
   36334:	mov	x3, x0
   36338:	mov	x2, x20
   3633c:	mov	w1, #0x4e                  	// #78
   36340:	mov	x0, x19
   36344:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   36348:	ldr	x1, [x19, #24]
   3634c:	mov	x20, x0
   36350:	ldrb	w0, [x1]
   36354:	cmp	w0, #0x2e
   36358:	b.ne	36230 <__asan_cplus_demangle_mangled_name@@Base+0x38>  // b.any
   3635c:	ldrb	w2, [x1, #1]
   36360:	sub	w0, w2, #0x61
   36364:	cmp	w2, #0x5f
   36368:	and	w0, w0, #0xff
   3636c:	ccmp	w0, #0x19, #0x0, ne  // ne = any
   36370:	b.hi	362b8 <__asan_cplus_demangle_mangled_name@@Base+0xc0>  // b.pmore
   36374:	ldrb	w0, [x1, #2]
   36378:	add	x2, x1, #0x2
   3637c:	b	36384 <__asan_cplus_demangle_mangled_name@@Base+0x18c>
   36380:	ldrb	w0, [x2, #1]!
   36384:	sub	w3, w0, #0x61
   36388:	cmp	w0, #0x5f
   3638c:	and	w3, w3, #0xff
   36390:	ccmp	w3, #0x19, #0x0, ne  // ne = any
   36394:	b.ls	36380 <__asan_cplus_demangle_mangled_name@@Base+0x188>  // b.plast
   36398:	b	362d0 <__asan_cplus_demangle_mangled_name@@Base+0xd8>
   3639c:	nop
   363a0:	ldr	x1, [x0, #24]
   363a4:	ldrb	w2, [x1]
   363a8:	cmp	w2, #0x4c
   363ac:	b.ne	36488 <__asan_cplus_demangle_mangled_name@@Base+0x290>  // b.any
   363b0:	stp	x29, x30, [sp, #-48]!
   363b4:	add	x2, x1, #0x1
   363b8:	mov	x29, sp
   363bc:	stp	x19, x20, [sp, #16]
   363c0:	mov	x19, x0
   363c4:	str	x2, [x0, #24]
   363c8:	mov	w2, #0x5a                  	// #90
   363cc:	ldrb	w1, [x1, #1]
   363d0:	cmp	w1, #0x5f
   363d4:	ccmp	w1, w2, #0x4, ne  // ne = any
   363d8:	b.ne	36408 <__asan_cplus_demangle_mangled_name@@Base+0x210>  // b.any
   363dc:	mov	w1, #0x0                   	// #0
   363e0:	bl	6ca0 <__asan_cplus_demangle_mangled_name@plt>
   363e4:	ldr	x1, [x19, #24]
   363e8:	ldrb	w2, [x1]
   363ec:	cmp	w2, #0x45
   363f0:	b.ne	36478 <__asan_cplus_demangle_mangled_name@@Base+0x280>  // b.any
   363f4:	add	x1, x1, #0x1
   363f8:	str	x1, [x19, #24]
   363fc:	ldp	x19, x20, [sp, #16]
   36400:	ldp	x29, x30, [sp], #48
   36404:	ret
   36408:	bl	6750 <__asan_cplus_demangle_type@plt>
   3640c:	mov	x20, x0
   36410:	cbz	x0, 36478 <__asan_cplus_demangle_mangled_name@@Base+0x280>
   36414:	ldr	w0, [x0]
   36418:	str	x21, [sp, #32]
   3641c:	cmp	w0, #0x27
   36420:	b.eq	364b8 <__asan_cplus_demangle_mangled_name@@Base+0x2c0>  // b.none
   36424:	ldr	x1, [x19, #24]
   36428:	mov	w21, #0x3d                  	// #61
   3642c:	ldrb	w4, [x1]
   36430:	cmp	w4, #0x6e
   36434:	b.ne	3644c <__asan_cplus_demangle_mangled_name@@Base+0x254>  // b.any
   36438:	add	x0, x1, #0x1
   3643c:	str	x0, [x19, #24]
   36440:	mov	w21, #0x3e                  	// #62
   36444:	ldrb	w4, [x1, #1]
   36448:	mov	x1, x0
   3644c:	cmp	w4, #0x45
   36450:	b.eq	364d8 <__asan_cplus_demangle_mangled_name@@Base+0x2e0>  // b.none
   36454:	add	x3, x1, #0x1
   36458:	b	3646c <__asan_cplus_demangle_mangled_name@@Base+0x274>
   3645c:	str	x3, [x19, #24]
   36460:	ldrb	w4, [x3], #1
   36464:	cmp	w4, #0x45
   36468:	b.eq	36490 <__asan_cplus_demangle_mangled_name@@Base+0x298>  // b.none
   3646c:	mov	x2, x3
   36470:	cbnz	w4, 3645c <__asan_cplus_demangle_mangled_name@@Base+0x264>
   36474:	ldr	x21, [sp, #32]
   36478:	mov	x0, #0x0                   	// #0
   3647c:	ldp	x19, x20, [sp, #16]
   36480:	ldp	x29, x30, [sp], #48
   36484:	ret
   36488:	mov	x0, #0x0                   	// #0
   3648c:	ret
   36490:	sub	w2, w2, w1
   36494:	mov	x0, x19
   36498:	bl	327e8 <__asan_cplus_demangle_fill_name@@Base+0x30>
   3649c:	mov	w1, w21
   364a0:	mov	x3, x0
   364a4:	mov	x2, x20
   364a8:	mov	x0, x19
   364ac:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   364b0:	ldr	x21, [sp, #32]
   364b4:	b	363e4 <__asan_cplus_demangle_mangled_name@@Base+0x1ec>
   364b8:	ldr	x0, [x20, #8]
   364bc:	ldr	w1, [x0, #28]
   364c0:	cbz	w1, 36424 <__asan_cplus_demangle_mangled_name@@Base+0x22c>
   364c4:	ldr	w1, [x0, #8]
   364c8:	ldr	w0, [x19, #72]
   364cc:	sub	w0, w0, w1
   364d0:	str	w0, [x19, #72]
   364d4:	b	36424 <__asan_cplus_demangle_mangled_name@@Base+0x22c>
   364d8:	mov	w2, #0x0                   	// #0
   364dc:	b	36494 <__asan_cplus_demangle_mangled_name@@Base+0x29c>

00000000000364e0 <__asan_cplus_demangle_print_callback@@Base>:
   364e0:	stp	x29, x30, [sp, #-416]!
   364e4:	mov	w4, w0
   364e8:	mov	x5, x1
   364ec:	mov	x29, sp
   364f0:	stp	x19, x20, [sp, #16]
   364f4:	add	x19, x29, #0x28
   364f8:	mov	x0, x19
   364fc:	str	xzr, [x29, #296]
   36500:	strb	wzr, [x29, #304]
   36504:	stp	x2, x3, [x29, #312]
   36508:	stp	xzr, xzr, [x29, #328]
   3650c:	stp	xzr, xzr, [x29, #344]
   36510:	stp	xzr, xzr, [x29, #360]
   36514:	stp	xzr, xzr, [x29, #376]
   36518:	stp	xzr, xzr, [x29, #392]
   3651c:	bl	2c718 <__asan_backtrace_create_state@@Base+0x188>
   36520:	ldr	w0, [x29, #348]
   36524:	cmp	w0, #0x7ff
   36528:	b.gt	36530 <__asan_cplus_demangle_print_callback@@Base+0x50>
   3652c:	str	wzr, [x29, #348]
   36530:	ldr	w7, [x29, #404]
   36534:	mov	w6, #0x1                   	// #1
   36538:	ldr	w3, [x29, #388]
   3653c:	mov	x2, x5
   36540:	mov	x20, sp
   36544:	mov	w1, w4
   36548:	cmp	w3, #0x0
   3654c:	mov	x0, x19
   36550:	csel	w5, w3, w6, gt
   36554:	str	xzr, [x29, #408]
   36558:	mul	w3, w3, w7
   3655c:	str	w3, [x29, #404]
   36560:	sub	sp, sp, w5, sxtw #4
   36564:	cmp	w3, #0x0
   36568:	mov	x4, sp
   3656c:	csel	w3, w3, w6, gt
   36570:	str	x4, [x29, #376]
   36574:	sub	sp, sp, w3, sxtw #4
   36578:	mov	x3, sp
   3657c:	str	x3, [x29, #392]
   36580:	bl	30fa0 <__asan_backtrace_create_state@@Base+0x4a10>
   36584:	mov	sp, x20
   36588:	ldr	x1, [x29, #296]
   3658c:	mov	x0, x19
   36590:	ldp	x3, x2, [x29, #312]
   36594:	strb	wzr, [x19, x1]
   36598:	blr	x3
   3659c:	ldr	w0, [x29, #344]
   365a0:	mov	sp, x29
   365a4:	cmp	w0, #0x0
   365a8:	cset	w0, eq  // eq = none
   365ac:	ldp	x19, x20, [sp, #16]
   365b0:	ldp	x29, x30, [sp], #416
   365b4:	ret

00000000000365b8 <__asan_cplus_demangle_print@@Base>:
   365b8:	stp	x29, x30, [sp, #-96]!
   365bc:	mov	x29, sp
   365c0:	stp	x19, x20, [sp, #16]
   365c4:	mov	w19, w0
   365c8:	str	x21, [sp, #32]
   365cc:	mov	x21, x3
   365d0:	stp	xzr, xzr, [sp, #64]
   365d4:	str	xzr, [sp, #80]
   365d8:	str	wzr, [sp, #88]
   365dc:	cbnz	w2, 36620 <__asan_cplus_demangle_print@@Base+0x68>
   365e0:	adrp	x2, 2c000 <__asan_backtrace_dwarf_add@@Base+0x870>
   365e4:	mov	w0, w19
   365e8:	add	x3, sp, #0x40
   365ec:	add	x2, x2, #0xdc8
   365f0:	bl	6a00 <__asan_cplus_demangle_print_callback@plt>
   365f4:	cbz	w0, 3665c <__asan_cplus_demangle_print@@Base+0xa4>
   365f8:	ldr	w2, [sp, #88]
   365fc:	ldr	x1, [sp, #80]
   36600:	cmp	w2, #0x0
   36604:	ldr	x0, [sp, #64]
   36608:	csinc	x1, x1, xzr, eq  // eq = none
   3660c:	str	x1, [x21]
   36610:	ldp	x19, x20, [sp, #16]
   36614:	ldr	x21, [sp, #32]
   36618:	ldp	x29, x30, [sp], #96
   3661c:	ret
   36620:	sxtw	x0, w2
   36624:	mov	x20, #0x2                   	// #2
   36628:	cmp	x0, #0x2
   3662c:	b.ls	3663c <__asan_cplus_demangle_print@@Base+0x84>  // b.plast
   36630:	lsl	x20, x20, #1
   36634:	cmp	x0, x20
   36638:	b.hi	36630 <__asan_cplus_demangle_print@@Base+0x78>  // b.pmore
   3663c:	mov	x0, x20
   36640:	str	x1, [sp, #56]
   36644:	bl	6a30 <malloc@plt>
   36648:	ldr	x1, [sp, #56]
   3664c:	cbz	x0, 36670 <__asan_cplus_demangle_print@@Base+0xb8>
   36650:	str	x0, [sp, #64]
   36654:	str	x20, [sp, #80]
   36658:	b	365e0 <__asan_cplus_demangle_print@@Base+0x28>
   3665c:	ldr	x0, [sp, #64]
   36660:	bl	66f0 <free@plt>
   36664:	str	xzr, [x21]
   36668:	mov	x0, #0x0                   	// #0
   3666c:	b	36610 <__asan_cplus_demangle_print@@Base+0x58>
   36670:	mov	w0, #0x1                   	// #1
   36674:	str	w0, [sp, #88]
   36678:	b	365e0 <__asan_cplus_demangle_print@@Base+0x28>
   3667c:	nop

0000000000036680 <__asan_cplus_demangle_init_info@@Base>:
   36680:	lsl	w4, w2, #1
   36684:	add	x5, x0, x2
   36688:	stp	x0, x5, [x3]
   3668c:	str	w1, [x3, #16]
   36690:	str	x0, [x3, #24]
   36694:	stp	wzr, w4, [x3, #40]
   36698:	stp	wzr, w2, [x3, #56]
   3669c:	stp	xzr, xzr, [x3, #64]
   366a0:	str	xzr, [x3, #80]
   366a4:	ret
   366a8:	stp	x29, x30, [sp, #-176]!
   366ac:	mov	x29, sp
   366b0:	stp	x19, x20, [sp, #16]
   366b4:	mov	x19, x0
   366b8:	mov	w20, w1
   366bc:	stp	x21, x22, [sp, #32]
   366c0:	mov	x21, x2
   366c4:	mov	x22, x3
   366c8:	stp	x23, x24, [sp, #48]
   366cc:	str	x25, [sp, #64]
   366d0:	ldrb	w0, [x0]
   366d4:	cmp	w0, #0x5f
   366d8:	b.ne	366e8 <__asan_cplus_demangle_init_info@@Base+0x68>  // b.any
   366dc:	ldrb	w0, [x19, #1]
   366e0:	cmp	w0, #0x5a
   366e4:	b.eq	368c4 <__asan_cplus_demangle_init_info@@Base+0x244>  // b.none
   366e8:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   366ec:	mov	x0, x19
   366f0:	add	x1, x1, #0xb70
   366f4:	mov	x2, #0x8                   	// #8
   366f8:	bl	6b70 <__asan_internal_strncmp@plt>
   366fc:	cbnz	w0, 36730 <__asan_cplus_demangle_init_info@@Base+0xb0>
   36700:	ldrb	w0, [x19, #8]
   36704:	mov	w2, #0x5f                  	// #95
   36708:	mov	w1, #0x24                  	// #36
   3670c:	cmp	w0, #0x2e
   36710:	ccmp	w0, w2, #0x4, ne  // ne = any
   36714:	ccmp	w0, w1, #0x4, ne  // ne = any
   36718:	b.ne	36730 <__asan_cplus_demangle_init_info@@Base+0xb0>  // b.any
   3671c:	ldrb	w0, [x19, #9]
   36720:	mov	w1, #0x49                  	// #73
   36724:	cmp	w0, #0x44
   36728:	ccmp	w0, w1, #0x4, ne  // ne = any
   3672c:	b.eq	368cc <__asan_cplus_demangle_init_info@@Base+0x24c>  // b.none
   36730:	mov	w24, #0x0                   	// #0
   36734:	tbz	w20, #4, 368a4 <__asan_cplus_demangle_init_info@@Base+0x224>
   36738:	mov	x0, x19
   3673c:	add	x23, x29, #0x58
   36740:	bl	67e0 <__asan_internal_strlen@plt>
   36744:	mov	x2, x0
   36748:	mov	x3, x23
   3674c:	mov	x0, x19
   36750:	mov	w1, w20
   36754:	bl	66a0 <__asan_cplus_demangle_init_info@plt>
   36758:	ldr	w0, [x29, #132]
   3675c:	tbnz	w20, #18, 36768 <__asan_cplus_demangle_init_info@@Base+0xe8>
   36760:	cmp	w0, #0x800
   36764:	b.hi	368a4 <__asan_cplus_demangle_init_info@@Base+0x224>  // b.pmore
   36768:	mov	w2, #0x18                  	// #24
   3676c:	ldrsw	x1, [x29, #148]
   36770:	mov	x25, sp
   36774:	cmp	w24, #0x1
   36778:	smull	x0, w0, w2
   3677c:	lsl	x1, x1, #3
   36780:	add	x0, x0, #0xf
   36784:	add	x1, x1, #0xf
   36788:	and	x0, x0, #0xfffffffffffffff0
   3678c:	and	x1, x1, #0xfffffffffffffff0
   36790:	sub	sp, sp, x0
   36794:	mov	x0, sp
   36798:	sub	sp, sp, x1
   3679c:	mov	x1, sp
   367a0:	str	x0, [x29, #120]
   367a4:	str	x1, [x29, #136]
   367a8:	b.eq	36860 <__asan_cplus_demangle_init_info@@Base+0x1e0>  // b.none
   367ac:	sub	w0, w24, #0x2
   367b0:	cmp	w0, #0x1
   367b4:	b.hi	36894 <__asan_cplus_demangle_init_info@@Base+0x214>  // b.pmore
   367b8:	ldr	x0, [x29, #112]
   367bc:	cmp	w24, #0x2
   367c0:	cset	w2, ne  // ne = any
   367c4:	add	x24, x0, #0xb
   367c8:	str	x24, [x29, #112]
   367cc:	add	w19, w2, #0x44
   367d0:	ldrb	w1, [x0, #11]
   367d4:	cmp	w1, #0x5f
   367d8:	b.ne	367e8 <__asan_cplus_demangle_init_info@@Base+0x168>  // b.any
   367dc:	ldrb	w1, [x0, #12]
   367e0:	cmp	w1, #0x5a
   367e4:	b.eq	368e8 <__asan_cplus_demangle_init_info@@Base+0x268>  // b.none
   367e8:	mov	x0, x24
   367ec:	bl	67e0 <__asan_internal_strlen@plt>
   367f0:	mov	w2, w0
   367f4:	mov	x1, x24
   367f8:	mov	x0, x23
   367fc:	bl	327e8 <__asan_cplus_demangle_fill_name@@Base+0x30>
   36800:	mov	x2, x0
   36804:	mov	w1, w19
   36808:	mov	x3, #0x0                   	// #0
   3680c:	mov	x0, x23
   36810:	bl	2c628 <__asan_backtrace_create_state@@Base+0x98>
   36814:	mov	x19, x0
   36818:	ldr	x0, [x29, #112]
   3681c:	bl	67e0 <__asan_internal_strlen@plt>
   36820:	ldr	x1, [x29, #112]
   36824:	add	x1, x1, x0
   36828:	str	x1, [x29, #112]
   3682c:	tbz	w20, #0, 36874 <__asan_cplus_demangle_init_info@@Base+0x1f4>
   36830:	ldr	x1, [x29, #112]
   36834:	mov	w0, #0x0                   	// #0
   36838:	ldrb	w1, [x1]
   3683c:	cbz	w1, 36874 <__asan_cplus_demangle_init_info@@Base+0x1f4>
   36840:	mov	sp, x25
   36844:	mov	sp, x29
   36848:	ldp	x19, x20, [sp, #16]
   3684c:	ldp	x21, x22, [sp, #32]
   36850:	ldp	x23, x24, [sp, #48]
   36854:	ldr	x25, [sp, #64]
   36858:	ldp	x29, x30, [sp], #176
   3685c:	ret
   36860:	mov	w1, w24
   36864:	mov	x0, x23
   36868:	bl	6ca0 <__asan_cplus_demangle_mangled_name@plt>
   3686c:	mov	x19, x0
   36870:	tbnz	w20, #0, 36830 <__asan_cplus_demangle_init_info@@Base+0x1b0>
   36874:	mov	w0, #0x0                   	// #0
   36878:	cbz	x19, 36840 <__asan_cplus_demangle_init_info@@Base+0x1c0>
   3687c:	mov	x3, x22
   36880:	mov	x2, x21
   36884:	mov	x1, x19
   36888:	mov	w0, w20
   3688c:	bl	6a00 <__asan_cplus_demangle_print_callback@plt>
   36890:	b	36840 <__asan_cplus_demangle_init_info@@Base+0x1c0>
   36894:	mov	x0, x23
   36898:	bl	6750 <__asan_cplus_demangle_type@plt>
   3689c:	mov	x19, x0
   368a0:	b	3682c <__asan_cplus_demangle_init_info@@Base+0x1ac>
   368a4:	mov	sp, x29
   368a8:	mov	w0, #0x0                   	// #0
   368ac:	ldp	x19, x20, [sp, #16]
   368b0:	ldp	x21, x22, [sp, #32]
   368b4:	ldp	x23, x24, [sp, #48]
   368b8:	ldr	x25, [sp, #64]
   368bc:	ldp	x29, x30, [sp], #176
   368c0:	ret
   368c4:	mov	w24, #0x1                   	// #1
   368c8:	b	36738 <__asan_cplus_demangle_init_info@@Base+0xb8>
   368cc:	ldrb	w1, [x19, #10]
   368d0:	cmp	w1, w2
   368d4:	b.ne	36730 <__asan_cplus_demangle_init_info@@Base+0xb0>  // b.any
   368d8:	cmp	w0, #0x49
   368dc:	cset	w24, ne  // ne = any
   368e0:	add	w24, w24, #0x2
   368e4:	b	36738 <__asan_cplus_demangle_init_info@@Base+0xb8>
   368e8:	add	x2, x0, #0xd
   368ec:	mov	w1, #0x0                   	// #0
   368f0:	mov	x0, x23
   368f4:	str	x2, [x29, #112]
   368f8:	bl	35a38 <__asan_cplus_demangle_type@@Base+0x2d28>
   368fc:	mov	x2, x0
   36900:	b	36804 <__asan_cplus_demangle_init_info@@Base+0x184>
   36904:	nop
   36908:	stp	x29, x30, [sp, #-64]!
   3690c:	adrp	x3, 2c000 <__asan_backtrace_dwarf_add@@Base+0x870>
   36910:	mov	x29, sp
   36914:	str	x19, [sp, #16]
   36918:	mov	x19, x2
   3691c:	add	x2, x3, #0xdc8
   36920:	add	x3, sp, #0x20
   36924:	stp	xzr, xzr, [sp, #32]
   36928:	str	xzr, [sp, #48]
   3692c:	str	wzr, [sp, #56]
   36930:	bl	366a8 <__asan_cplus_demangle_init_info@@Base+0x28>
   36934:	cbz	w0, 3695c <__asan_cplus_demangle_init_info@@Base+0x2dc>
   36938:	ldr	w2, [sp, #56]
   3693c:	ldr	x1, [sp, #48]
   36940:	cmp	w2, #0x0
   36944:	ldr	x0, [sp, #32]
   36948:	csinc	x1, x1, xzr, eq  // eq = none
   3694c:	str	x1, [x19]
   36950:	ldr	x19, [sp, #16]
   36954:	ldp	x29, x30, [sp], #64
   36958:	ret
   3695c:	ldr	x0, [sp, #32]
   36960:	bl	66f0 <free@plt>
   36964:	str	xzr, [x19]
   36968:	mov	x0, #0x0                   	// #0
   3696c:	b	36950 <__asan_cplus_demangle_init_info@@Base+0x2d0>
   36970:	stp	x29, x30, [sp, #-144]!
   36974:	mov	x29, sp
   36978:	stp	x19, x20, [sp, #16]
   3697c:	mov	x20, x2
   36980:	add	x19, x29, #0x38
   36984:	stp	x21, x22, [sp, #32]
   36988:	mov	x21, x1
   3698c:	mov	x22, x0
   36990:	str	wzr, [x1]
   36994:	str	wzr, [x2]
   36998:	bl	67e0 <__asan_internal_strlen@plt>
   3699c:	mov	x2, x0
   369a0:	mov	w1, #0x4000                	// #16384
   369a4:	mov	x0, x22
   369a8:	mov	x3, x19
   369ac:	bl	66a0 <__asan_cplus_demangle_init_info@plt>
   369b0:	ldr	w5, [x29, #100]
   369b4:	mov	w2, #0x18                  	// #24
   369b8:	ldrsw	x4, [x29, #116]
   369bc:	mov	x0, x19
   369c0:	mov	w1, #0x1                   	// #1
   369c4:	smull	x5, w5, w2
   369c8:	lsl	x4, x4, #3
   369cc:	add	x4, x4, #0xf
   369d0:	add	x5, x5, #0xf
   369d4:	and	x4, x4, #0xfffffffffffffff0
   369d8:	and	x5, x5, #0xfffffffffffffff0
   369dc:	sub	sp, sp, x5
   369e0:	mov	x2, sp
   369e4:	sub	sp, sp, x4
   369e8:	str	x2, [x29, #88]
   369ec:	mov	x2, sp
   369f0:	str	x2, [x29, #104]
   369f4:	bl	6ca0 <__asan_cplus_demangle_mangled_name@plt>
   369f8:	cbz	x0, 36a1c <__asan_cplus_demangle_init_info@@Base+0x39c>
   369fc:	ldr	w3, [x0]
   36a00:	cmp	w3, #0x7
   36a04:	b.eq	36a50 <__asan_cplus_demangle_init_info@@Base+0x3d0>  // b.none
   36a08:	b.hi	36a70 <__asan_cplus_demangle_init_info@@Base+0x3f0>  // b.pmore
   36a0c:	sub	w1, w3, #0x3
   36a10:	cmp	w3, #0x2
   36a14:	b.hi	36a34 <__asan_cplus_demangle_init_info@@Base+0x3b4>  // b.pmore
   36a18:	cbnz	w3, 36a98 <__asan_cplus_demangle_init_info@@Base+0x418>
   36a1c:	mov	w0, #0x0                   	// #0
   36a20:	mov	sp, x29
   36a24:	ldp	x19, x20, [sp, #16]
   36a28:	ldp	x21, x22, [sp, #32]
   36a2c:	ldp	x29, x30, [sp], #144
   36a30:	ret
   36a34:	cmp	w1, #0x1
   36a38:	b.hi	36a1c <__asan_cplus_demangle_init_info@@Base+0x39c>  // b.pmore
   36a3c:	ldr	x0, [x0, #8]
   36a40:	cbz	x0, 36a20 <__asan_cplus_demangle_init_info@@Base+0x3a0>
   36a44:	ldr	w3, [x0]
   36a48:	cmp	w3, #0x7
   36a4c:	b.ne	36a08 <__asan_cplus_demangle_init_info@@Base+0x388>  // b.any
   36a50:	ldr	w1, [x0, #8]
   36a54:	mov	w0, #0x1                   	// #1
   36a58:	str	w1, [x21]
   36a5c:	mov	sp, x29
   36a60:	ldp	x19, x20, [sp, #16]
   36a64:	ldp	x21, x22, [sp, #32]
   36a68:	ldp	x29, x30, [sp], #144
   36a6c:	ret
   36a70:	cmp	w3, #0x8
   36a74:	b.ne	36a1c <__asan_cplus_demangle_init_info@@Base+0x39c>  // b.any
   36a78:	ldr	w1, [x0, #8]
   36a7c:	mov	w0, #0x1                   	// #1
   36a80:	str	w1, [x20]
   36a84:	mov	sp, x29
   36a88:	ldp	x19, x20, [sp, #16]
   36a8c:	ldp	x21, x22, [sp, #32]
   36a90:	ldp	x29, x30, [sp], #144
   36a94:	ret
   36a98:	ldr	x0, [x0, #16]
   36a9c:	cbnz	x0, 36a44 <__asan_cplus_demangle_init_info@@Base+0x3c4>
   36aa0:	b	36a20 <__asan_cplus_demangle_init_info@@Base+0x3a0>
   36aa4:	nop

0000000000036aa8 <__asan_cplus_demangle_v3@@Base>:
   36aa8:	stp	x29, x30, [sp, #-32]!
   36aac:	mov	x29, sp
   36ab0:	add	x2, sp, #0x18
   36ab4:	bl	36908 <__asan_cplus_demangle_init_info@@Base+0x288>
   36ab8:	ldp	x29, x30, [sp], #32
   36abc:	ret

0000000000036ac0 <__asan_cplus_demangle_v3_callback@@Base>:
   36ac0:	b	366a8 <__asan_cplus_demangle_init_info@@Base+0x28>
   36ac4:	nop

0000000000036ac8 <__asan_java_demangle_v3@@Base>:
   36ac8:	stp	x29, x30, [sp, #-32]!
   36acc:	mov	w1, #0x25                  	// #37
   36ad0:	mov	x29, sp
   36ad4:	add	x2, sp, #0x18
   36ad8:	bl	36908 <__asan_cplus_demangle_init_info@@Base+0x288>
   36adc:	ldp	x29, x30, [sp], #32
   36ae0:	ret
   36ae4:	nop

0000000000036ae8 <__asan_java_demangle_v3_callback@@Base>:
   36ae8:	mov	x3, x2
   36aec:	mov	x2, x1
   36af0:	mov	w1, #0x25                  	// #37
   36af4:	b	366a8 <__asan_cplus_demangle_init_info@@Base+0x28>

0000000000036af8 <__asan_is_gnu_v3_mangled_ctor@@Base>:
   36af8:	stp	x29, x30, [sp, #-32]!
   36afc:	mov	x29, sp
   36b00:	add	x2, sp, #0x1c
   36b04:	add	x1, sp, #0x18
   36b08:	bl	36970 <__asan_cplus_demangle_init_info@@Base+0x2f0>
   36b0c:	cmp	w0, #0x0
   36b10:	ldr	w1, [sp, #24]
   36b14:	ldp	x29, x30, [sp], #32
   36b18:	csel	w0, w1, wzr, ne  // ne = any
   36b1c:	ret

0000000000036b20 <__asan_is_gnu_v3_mangled_dtor@@Base>:
   36b20:	stp	x29, x30, [sp, #-32]!
   36b24:	mov	x29, sp
   36b28:	add	x2, sp, #0x1c
   36b2c:	add	x1, sp, #0x18
   36b30:	bl	36970 <__asan_cplus_demangle_init_info@@Base+0x2f0>
   36b34:	cmp	w0, #0x0
   36b38:	ldr	w1, [sp, #28]
   36b3c:	ldp	x29, x30, [sp], #32
   36b40:	csel	w0, w1, wzr, ne  // ne = any
   36b44:	ret

0000000000036b48 <__asan_internal_memcpy@@Base>:
   36b48:	b	18928 <__sanitizer_set_report_fd@@Base+0x1678>
   36b4c:	nop

0000000000036b50 <__asan_internal_memset@@Base>:
   36b50:	b	189a0 <__sanitizer_set_report_fd@@Base+0x16f0>
   36b54:	nop

0000000000036b58 <__asan_internal_memcmp@@Base>:
   36b58:	b	188e8 <__sanitizer_set_report_fd@@Base+0x1638>
   36b5c:	nop

0000000000036b60 <__asan_internal_strcmp@@Base>:
   36b60:	b	18b00 <__sanitizer_set_report_fd@@Base+0x1850>
   36b64:	nop

0000000000036b68 <__asan_internal_strncmp@@Base>:
   36b68:	b	18b48 <__sanitizer_set_report_fd@@Base+0x1898>
   36b6c:	nop

0000000000036b70 <__asan_internal_strlen@@Base>:
   36b70:	b	18c30 <__sanitizer_set_report_fd@@Base+0x1980>
   36b74:	nop

0000000000036b78 <__asan_internal_strnlen@@Base>:
   36b78:	b	18e38 <__sanitizer_set_report_fd@@Base+0x1b88>
   36b7c:	nop
   36b80:	stp	x29, x30, [sp, #-16]!
   36b84:	mov	x0, x4
   36b88:	mov	w2, #0xffffffff            	// #-1
   36b8c:	mov	x29, sp
   36b90:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   36b94:	add	x1, x1, #0x258
   36b98:	blr	x3
   36b9c:	mov	w0, #0x0                   	// #0
   36ba0:	ldp	x29, x30, [sp], #16
   36ba4:	ret
   36ba8:	mov	x0, x4
   36bac:	mov	x16, x3
   36bb0:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   36bb4:	mov	w2, #0xffffffff            	// #-1
   36bb8:	add	x1, x1, #0x278
   36bbc:	br	x16
   36bc0:	ldr	x2, [x0, #8]
   36bc4:	mov	w3, #0xffffffff            	// #-1
   36bc8:	ldr	x1, [x1, #8]
   36bcc:	cmp	x2, x1
   36bd0:	cset	w0, hi  // hi = pmore
   36bd4:	csel	w0, w0, w3, cs  // cs = hs, nlast
   36bd8:	ret
   36bdc:	nop
   36be0:	stp	x29, x30, [sp, #-176]!
   36be4:	mov	x29, sp
   36be8:	stp	x19, x20, [sp, #16]
   36bec:	add	x19, sp, #0x50
   36bf0:	mov	x20, x0
   36bf4:	mov	x0, x19
   36bf8:	stp	x21, x22, [sp, #32]
   36bfc:	mov	x21, x1
   36c00:	mov	x22, x3
   36c04:	mov	w1, #0x0                   	// #0
   36c08:	stp	x23, x24, [sp, #48]
   36c0c:	add	x23, x2, #0x1, lsl #12
   36c10:	mov	x2, #0x20                  	// #32
   36c14:	bl	6860 <__asan_internal_memset@plt>
   36c18:	add	x0, sp, #0x90
   36c1c:	add	x2, sp, #0x70
   36c20:	mov	x5, #0x0                   	// #0
   36c24:	b	36c44 <__asan_internal_strnlen@@Base+0xcc>
   36c28:	add	w6, w6, #0x1
   36c2c:	strh	w8, [x2, x7]
   36c30:	strh	w8, [x0, x7]
   36c34:	add	x5, x5, #0x1
   36c38:	strh	w6, [x19, x4, lsl #1]
   36c3c:	cmp	x21, x5
   36c40:	b.eq	36c8c <__asan_internal_strnlen@@Base+0x114>  // b.none
   36c44:	ldrb	w4, [x20, x5]
   36c48:	and	w8, w5, #0xffff
   36c4c:	cmp	w4, #0xf
   36c50:	b.hi	36d80 <__asan_internal_strnlen@@Base+0x208>  // b.pmore
   36c54:	sbfiz	x7, x4, #1, #32
   36c58:	ldrh	w6, [x19, x7]
   36c5c:	cbz	w6, 36c28 <__asan_internal_strnlen@@Base+0xb0>
   36c60:	ldrh	w1, [x0, x7]
   36c64:	strh	w8, [x23, x1, lsl #1]
   36c68:	ldrb	w4, [x20, x5]
   36c6c:	add	x5, x5, #0x1
   36c70:	cmp	x21, x5
   36c74:	lsl	x1, x4, #1
   36c78:	ldrh	w6, [x19, x1]
   36c7c:	strh	w8, [x0, x1]
   36c80:	add	w6, w6, #0x1
   36c84:	strh	w6, [x19, x4, lsl #1]
   36c88:	b.ne	36c44 <__asan_internal_strnlen@@Base+0xcc>  // b.any
   36c8c:	mov	w1, #0x0                   	// #0
   36c90:	mov	x0, x22
   36c94:	mov	x2, #0x800                 	// #2048
   36c98:	bl	6860 <__asan_internal_memset@plt>
   36c9c:	add	x11, sp, #0x70
   36ca0:	mov	x4, #0x0                   	// #0
   36ca4:	mov	w1, #0x0                   	// #0
   36ca8:	mov	w9, #0x1                   	// #1
   36cac:	lsl	x2, x4, #1
   36cb0:	add	x0, x19, x2
   36cb4:	ldrh	w0, [x0, #2]
   36cb8:	cbnz	w0, 36d98 <__asan_internal_strnlen@@Base+0x220>
   36cbc:	add	x4, x4, #0x1
   36cc0:	cmp	x4, #0x8
   36cc4:	b.ne	36cac <__asan_internal_strnlen@@Base+0x134>  // b.any
   36cc8:	mov	x7, x19
   36ccc:	add	x10, sp, #0x40
   36cd0:	mov	x2, #0x9                   	// #9
   36cd4:	mov	w8, #0x1                   	// #1
   36cd8:	b	36cec <__asan_internal_strnlen@@Base+0x174>
   36cdc:	add	x2, x2, #0x1
   36ce0:	add	x7, x7, #0x2
   36ce4:	cmp	x2, #0x10
   36ce8:	b.eq	36e58 <__asan_internal_strnlen@@Base+0x2e0>  // b.none
   36cec:	ldrh	w6, [x7, #18]
   36cf0:	cbz	w6, 36cdc <__asan_internal_strnlen@@Base+0x164>
   36cf4:	add	x0, x10, x2, lsl #1
   36cf8:	sub	w9, w2, #0x1
   36cfc:	mov	w5, #0x0                   	// #0
   36d00:	mov	x3, #0x0                   	// #0
   36d04:	sturh	w1, [x0, #-18]
   36d08:	b	36d1c <__asan_internal_strnlen@@Base+0x1a4>
   36d0c:	add	w3, w5, #0x1
   36d10:	mov	x5, x3
   36d14:	cmp	x2, w3, uxtw
   36d18:	b.ls	36d78 <__asan_internal_strnlen@@Base+0x200>  // b.plast
   36d1c:	lsr	w0, w6, w5
   36d20:	tbz	w0, #0, 36d0c <__asan_internal_strnlen@@Base+0x194>
   36d24:	sub	w0, w9, w5
   36d28:	subs	x3, x2, x3
   36d2c:	lsl	w0, w8, w0
   36d30:	b.eq	36d60 <__asan_internal_strnlen@@Base+0x1e8>  // b.none
   36d34:	tst	w1, w0
   36d38:	b.eq	36dfc <__asan_internal_strnlen@@Base+0x284>  // b.none
   36d3c:	mov	w4, #0x0                   	// #0
   36d40:	b	36d4c <__asan_internal_strnlen@@Base+0x1d4>
   36d44:	tst	w1, w0
   36d48:	b.eq	36dfc <__asan_internal_strnlen@@Base+0x284>  // b.none
   36d4c:	add	w4, w4, #0x1
   36d50:	bic	w1, w1, w0
   36d54:	lsr	w0, w0, #1
   36d58:	cmp	x3, w4, uxtw
   36d5c:	b.hi	36d44 <__asan_internal_strnlen@@Base+0x1cc>  // b.pmore
   36d60:	lsl	w0, w8, w5
   36d64:	bic	w6, w6, w0
   36d68:	add	w3, w5, #0x1
   36d6c:	mov	x5, x3
   36d70:	cmp	x2, w3, uxtw
   36d74:	b.hi	36d1c <__asan_internal_strnlen@@Base+0x1a4>  // b.pmore
   36d78:	cbz	w6, 36cdc <__asan_internal_strnlen@@Base+0x164>
   36d7c:	nop
   36d80:	mov	w0, #0x0                   	// #0
   36d84:	ldp	x19, x20, [sp, #16]
   36d88:	ldp	x21, x22, [sp, #32]
   36d8c:	ldp	x23, x24, [sp, #48]
   36d90:	ldp	x29, x30, [sp], #176
   36d94:	ret
   36d98:	add	w3, w4, #0x1
   36d9c:	lsl	w3, w9, w3
   36da0:	cmp	w3, w0
   36da4:	b.cc	36d80 <__asan_internal_strnlen@@Base+0x208>  // b.lo, b.ul, b.last
   36da8:	add	x2, x2, x11
   36dac:	and	x5, x0, #0xffff
   36db0:	ldrh	w7, [x2, #2]
   36db4:	tst	w7, #0xfe00
   36db8:	b.ne	36d80 <__asan_internal_strnlen@@Base+0x208>  // b.any
   36dbc:	sxtw	x3, w3
   36dc0:	ubfiz	w12, w4, #9, #7
   36dc4:	lsl	w8, w9, w4
   36dc8:	mov	x10, #0x0                   	// #0
   36dcc:	cmp	w1, #0xff
   36dd0:	orr	w6, w12, w7
   36dd4:	mov	w0, w1
   36dd8:	b.ls	36df0 <__asan_internal_strnlen@@Base+0x278>  // b.plast
   36ddc:	b	36e0c <__asan_internal_strnlen@@Base+0x294>
   36de0:	strh	w6, [x22, x0, lsl #1]
   36de4:	add	x0, x0, x3
   36de8:	cmp	x0, #0xff
   36dec:	b.hi	36e0c <__asan_internal_strnlen@@Base+0x294>  // b.pmore
   36df0:	ldrh	w2, [x22, x0, lsl #1]
   36df4:	cbz	w2, 36de0 <__asan_internal_strnlen@@Base+0x268>
   36df8:	b	36d80 <__asan_internal_strnlen@@Base+0x208>
   36dfc:	add	w1, w1, w0
   36e00:	lsl	w0, w8, w5
   36e04:	bic	w6, w6, w0
   36e08:	b	36d68 <__asan_internal_strnlen@@Base+0x1f0>
   36e0c:	add	x10, x10, #0x1
   36e10:	cmp	x10, x5
   36e14:	b.cs	36e20 <__asan_internal_strnlen@@Base+0x2a8>  // b.hs, b.nlast
   36e18:	ubfiz	x7, x7, #1, #16
   36e1c:	ldrh	w7, [x23, x7]
   36e20:	mov	w0, w8
   36e24:	tst	w8, w1
   36e28:	b.eq	36e8c <__asan_internal_strnlen@@Base+0x314>  // b.none
   36e2c:	nop
   36e30:	lsr	w0, w0, #1
   36e34:	tst	w0, w1
   36e38:	b.ne	36e30 <__asan_internal_strnlen@@Base+0x2b8>  // b.any
   36e3c:	cbnz	w0, 36e8c <__asan_internal_strnlen@@Base+0x314>
   36e40:	mov	w1, #0x0                   	// #0
   36e44:	cmp	x10, x5
   36e48:	b.eq	36cbc <__asan_internal_strnlen@@Base+0x144>  // b.none
   36e4c:	tst	w7, #0xfe00
   36e50:	b.eq	36dcc <__asan_internal_strnlen@@Base+0x254>  // b.none
   36e54:	b	36d80 <__asan_internal_strnlen@@Base+0x208>
   36e58:	add	x18, sp, #0x70
   36e5c:	add	x17, sp, #0x40
   36e60:	mov	x5, #0x7                   	// #7
   36e64:	mov	x10, #0x0                   	// #0
   36e68:	mov	w8, #0x1                   	// #1
   36e6c:	lsl	x0, x5, #1
   36e70:	add	x1, x19, x0
   36e74:	ldrh	w7, [x1, #16]
   36e78:	cbnz	w7, 36e9c <__asan_internal_strnlen@@Base+0x324>
   36e7c:	subs	x5, x5, #0x1
   36e80:	b.ne	36e6c <__asan_internal_strnlen@@Base+0x2f4>  // b.any
   36e84:	mov	w0, #0x1                   	// #1
   36e88:	b	36d84 <__asan_internal_strnlen@@Base+0x20c>
   36e8c:	sub	w2, w0, #0x1
   36e90:	and	w1, w2, w1
   36e94:	add	w1, w0, w1
   36e98:	b	36e44 <__asan_internal_strnlen@@Base+0x2cc>
   36e9c:	add	x1, x0, x18
   36ea0:	add	x0, x0, x17
   36ea4:	ubfiz	w12, w5, #9, #7
   36ea8:	lsl	w4, w8, w5
   36eac:	add	w11, w12, #0x1, lsl #12
   36eb0:	add	w9, w5, #0x7
   36eb4:	ldrh	w14, [x1, #16]
   36eb8:	sxtw	x21, w4
   36ebc:	ldurh	w6, [x0, #-2]
   36ec0:	and	x7, x7, #0xffff
   36ec4:	and	w11, w11, #0xffff
   36ec8:	mov	w4, w4
   36ecc:	mov	w20, w5
   36ed0:	lsl	w9, w8, w9
   36ed4:	mov	x16, #0x0                   	// #0
   36ed8:	mov	x13, #0x0                   	// #0
   36edc:	mov	x24, #0x100                 	// #256
   36ee0:	mov	x15, #0x0                   	// #0
   36ee4:	mov	w2, w16
   36ee8:	cmp	x24, w6, uxtb
   36eec:	and	x1, x6, #0xff
   36ef0:	b.eq	36f24 <__asan_internal_strnlen@@Base+0x3ac>  // b.none
   36ef4:	lsl	x2, x1, #1
   36ef8:	ldrh	w0, [x22, x2]
   36efc:	cbnz	w0, 36fa0 <__asan_internal_strnlen@@Base+0x428>
   36f00:	tst	x10, #0xfffffffffffffe00
   36f04:	b.ne	36d80 <__asan_internal_strnlen@@Base+0x208>  // b.any
   36f08:	add	w0, w11, w10
   36f0c:	mov	x13, x10
   36f10:	mov	x24, x1
   36f14:	add	x10, x10, x21
   36f18:	mov	x16, x5
   36f1c:	strh	w0, [x22, x2]
   36f20:	mov	w2, w20
   36f24:	lsr	w0, w6, #8
   36f28:	add	x1, x22, x13, lsl #1
   36f2c:	lsl	w2, w8, w2
   36f30:	add	x1, x1, #0x200
   36f34:	cmp	x2, x0
   36f38:	orr	w30, w12, w14
   36f3c:	b.hi	36f54 <__asan_internal_strnlen@@Base+0x3dc>  // b.pmore
   36f40:	b	36f60 <__asan_internal_strnlen@@Base+0x3e8>
   36f44:	strh	w30, [x1, x0, lsl #1]
   36f48:	add	x0, x0, x4
   36f4c:	cmp	x2, x0
   36f50:	b.ls	36f60 <__asan_internal_strnlen@@Base+0x3e8>  // b.plast
   36f54:	ldrh	w3, [x1, x0, lsl #1]
   36f58:	cbz	w3, 36f44 <__asan_internal_strnlen@@Base+0x3cc>
   36f5c:	b	36d80 <__asan_internal_strnlen@@Base+0x208>
   36f60:	add	x15, x15, #0x1
   36f64:	cmp	x7, x15
   36f68:	b.ls	36f74 <__asan_internal_strnlen@@Base+0x3fc>  // b.plast
   36f6c:	ubfiz	x14, x14, #1, #16
   36f70:	ldrh	w14, [x23, x14]
   36f74:	mov	w0, w9
   36f78:	tst	w9, w6
   36f7c:	b.eq	36fc0 <__asan_internal_strnlen@@Base+0x448>  // b.none
   36f80:	lsr	w0, w0, #1
   36f84:	tst	w0, w6
   36f88:	b.ne	36f80 <__asan_internal_strnlen@@Base+0x408>  // b.any
   36f8c:	cbnz	w0, 36fc0 <__asan_internal_strnlen@@Base+0x448>
   36f90:	mov	w6, #0x0                   	// #0
   36f94:	cmp	x7, x15
   36f98:	b.ne	36ee4 <__asan_internal_strnlen@@Base+0x36c>  // b.any
   36f9c:	b	36e7c <__asan_internal_strnlen@@Base+0x304>
   36fa0:	tbz	w0, #12, 36d80 <__asan_internal_strnlen@@Base+0x208>
   36fa4:	ubfx	x16, x0, #9, #3
   36fa8:	and	x13, x0, #0x1ff
   36fac:	cmp	x16, x5
   36fb0:	mov	x2, x16
   36fb4:	b.cc	36d80 <__asan_internal_strnlen@@Base+0x208>  // b.lo, b.ul, b.last
   36fb8:	mov	x24, x1
   36fbc:	b	36f24 <__asan_internal_strnlen@@Base+0x3ac>
   36fc0:	sub	w1, w0, #0x1
   36fc4:	and	w6, w1, w6
   36fc8:	add	w6, w0, w6
   36fcc:	b	36f94 <__asan_internal_strnlen@@Base+0x41c>
   36fd0:	mov	x10, x0
   36fd4:	mov	x11, x2
   36fd8:	mov	x0, x4
   36fdc:	ldr	w2, [x10, #8]
   36fe0:	cbnz	w2, 37068 <__asan_internal_strnlen@@Base+0x4f0>
   36fe4:	ldr	x2, [x10, #48]
   36fe8:	cbz	x2, 3704c <__asan_internal_strnlen@@Base+0x4d4>
   36fec:	nop
   36ff0:	ldp	x9, x8, [x2, #8]
   36ff4:	mov	x7, #0x0                   	// #0
   36ff8:	add	x3, x8, x7
   36ffc:	cmp	x8, x7
   37000:	and	x5, x3, #0xfffffffffffffffe
   37004:	b.ls	37044 <__asan_internal_strnlen@@Base+0x4cc>  // b.plast
   37008:	lsr	x3, x3, #1
   3700c:	add	x5, x5, x3
   37010:	add	x5, x9, x5, lsl #3
   37014:	ldr	x6, [x5, #8]
   37018:	cmp	x6, x1
   3701c:	b.hi	37060 <__asan_internal_strnlen@@Base+0x4e8>  // b.pmore
   37020:	ldr	x4, [x5, #16]
   37024:	add	x7, x3, #0x1
   37028:	add	x3, x6, x4
   3702c:	cmp	x3, x1
   37030:	b.ls	36ff8 <__asan_internal_strnlen@@Base+0x480>  // b.plast
   37034:	ldr	x2, [x5]
   37038:	mov	x3, x6
   3703c:	mov	x16, x11
   37040:	br	x16
   37044:	ldr	x2, [x2]
   37048:	cbnz	x2, 36ff0 <__asan_internal_strnlen@@Base+0x478>
   3704c:	mov	x16, x11
   37050:	mov	x4, #0x0                   	// #0
   37054:	mov	x3, #0x0                   	// #0
   37058:	mov	x2, #0x0                   	// #0
   3705c:	br	x16
   37060:	mov	x8, x3
   37064:	b	36ff8 <__asan_internal_strnlen@@Base+0x480>
   37068:	add	x10, x10, #0x30
   3706c:	nop
   37070:	ldar	x10, [x10]
   37074:	cbz	x10, 3704c <__asan_internal_strnlen@@Base+0x4d4>
   37078:	ldp	x9, x8, [x10, #8]
   3707c:	mov	x7, #0x0                   	// #0
   37080:	add	x3, x8, x7
   37084:	cmp	x8, x7
   37088:	and	x5, x3, #0xfffffffffffffffe
   3708c:	b.ls	37070 <__asan_internal_strnlen@@Base+0x4f8>  // b.plast
   37090:	lsr	x3, x3, #1
   37094:	add	x5, x5, x3
   37098:	add	x5, x9, x5, lsl #3
   3709c:	ldr	x6, [x5, #8]
   370a0:	cmp	x6, x1
   370a4:	b.hi	370cc <__asan_internal_strnlen@@Base+0x554>  // b.pmore
   370a8:	ldr	x4, [x5, #16]
   370ac:	add	x7, x3, #0x1
   370b0:	add	x3, x6, x4
   370b4:	cmp	x3, x1
   370b8:	b.ls	37080 <__asan_internal_strnlen@@Base+0x508>  // b.plast
   370bc:	ldr	x2, [x5]
   370c0:	mov	x3, x6
   370c4:	mov	x16, x11
   370c8:	br	x16
   370cc:	mov	x8, x3
   370d0:	b	37080 <__asan_internal_strnlen@@Base+0x508>
   370d4:	nop
   370d8:	stp	x29, x30, [sp, #-144]!
   370dc:	mov	x29, sp
   370e0:	stp	x27, x28, [sp, #80]
   370e4:	add	x28, x2, x4
   370e8:	mov	x27, x5
   370ec:	stp	x19, x20, [sp, #16]
   370f0:	mov	x20, x6
   370f4:	stp	x21, x22, [sp, #32]
   370f8:	mov	x22, x2
   370fc:	mov	x21, x7
   37100:	stp	x23, x24, [sp, #48]
   37104:	mov	x23, x0
   37108:	mov	x0, x5
   3710c:	stp	x25, x26, [sp, #64]
   37110:	mov	x25, x4
   37114:	stp	x3, x1, [sp, #112]
   37118:	bl	67e0 <__asan_internal_strlen@plt>
   3711c:	mov	x24, x0
   37120:	add	x0, x28, x0
   37124:	mov	x3, x21
   37128:	add	x26, x0, #0x1
   3712c:	mov	x2, x20
   37130:	mov	x1, x26
   37134:	str	x0, [sp, #104]
   37138:	mov	x0, x23
   3713c:	bl	68c0 <__asan_backtrace_alloc@plt>
   37140:	cbz	x0, 371d0 <__asan_internal_strnlen@@Base+0x658>
   37144:	ldr	x8, [sp, #120]
   37148:	mov	x19, x0
   3714c:	mov	x2, x22
   37150:	mov	x1, x8
   37154:	bl	67d0 <__asan_internal_memcpy@plt>
   37158:	ldr	x1, [sp, #112]
   3715c:	mov	x2, x25
   37160:	add	x0, x19, x22
   37164:	bl	67d0 <__asan_internal_memcpy@plt>
   37168:	mov	x2, x24
   3716c:	mov	x1, x27
   37170:	add	x0, x19, x28
   37174:	bl	67d0 <__asan_internal_memcpy@plt>
   37178:	ldr	x0, [sp, #104]
   3717c:	add	x3, sp, #0x8c
   37180:	mov	x2, x21
   37184:	mov	x1, x20
   37188:	strb	wzr, [x19, x0]
   3718c:	mov	x0, x19
   37190:	bl	6d40 <__asan_backtrace_open@plt>
   37194:	mov	w22, w0
   37198:	mov	x4, x21
   3719c:	mov	x3, x20
   371a0:	mov	x2, x26
   371a4:	mov	x1, x19
   371a8:	mov	x0, x23
   371ac:	bl	6bc0 <__asan_backtrace_free@plt>
   371b0:	mov	w0, w22
   371b4:	ldp	x19, x20, [sp, #16]
   371b8:	ldp	x21, x22, [sp, #32]
   371bc:	ldp	x23, x24, [sp, #48]
   371c0:	ldp	x25, x26, [sp, #64]
   371c4:	ldp	x27, x28, [sp, #80]
   371c8:	ldp	x29, x30, [sp], #144
   371cc:	ret
   371d0:	mov	w22, #0xffffffff            	// #-1
   371d4:	b	371b0 <__asan_internal_strnlen@@Base+0x638>
   371d8:	stp	x29, x30, [sp, #-256]!
   371dc:	mov	x29, sp
   371e0:	stp	x19, x20, [sp, #16]
   371e4:	mov	x20, x0
   371e8:	mov	x19, x1
   371ec:	stp	x21, x22, [sp, #32]
   371f0:	mov	x21, x3
   371f4:	mov	x22, x4
   371f8:	stp	x27, x28, [sp, #80]
   371fc:	add	x27, sp, #0x80
   37200:	stp	x23, x24, [sp, #48]
   37204:	mov	x24, #0x0                   	// #0
   37208:	stp	x25, x26, [sp, #64]
   3720c:	mov	x25, #0x0                   	// #0
   37210:	str	x2, [sp, #104]
   37214:	mov	x2, x27
   37218:	mov	x1, x19
   3721c:	mov	w0, #0x0                   	// #0
   37220:	bl	6bd0 <__lxstat@plt>
   37224:	tbnz	w0, #31, 372b0 <__asan_internal_strnlen@@Base+0x738>
   37228:	ldr	w0, [sp, #144]
   3722c:	and	w0, w0, #0xf000
   37230:	cmp	w0, #0xa, lsl #12
   37234:	b.ne	372b0 <__asan_internal_strnlen@@Base+0x738>  // b.any
   37238:	mov	x28, #0x80                  	// #128
   3723c:	b	37264 <__asan_internal_strnlen@@Base+0x6ec>
   37240:	cmp	x1, x0
   37244:	b.hi	37324 <__asan_internal_strnlen@@Base+0x7ac>  // b.pmore
   37248:	mov	x2, x28
   3724c:	mov	x1, x26
   37250:	mov	x4, x22
   37254:	mov	x3, x21
   37258:	mov	x0, x20
   3725c:	lsl	x28, x28, #1
   37260:	bl	6bc0 <__asan_backtrace_free@plt>
   37264:	mov	x2, x21
   37268:	mov	x3, x22
   3726c:	mov	x1, x28
   37270:	mov	x0, x20
   37274:	bl	68c0 <__asan_backtrace_alloc@plt>
   37278:	mov	x26, x0
   3727c:	mov	x2, x28
   37280:	mov	x0, x19
   37284:	cbz	x26, 372b0 <__asan_internal_strnlen@@Base+0x738>
   37288:	mov	x1, x26
   3728c:	bl	66c0 <readlink@plt>
   37290:	sub	x1, x28, #0x1
   37294:	tbz	x0, #63, 37240 <__asan_internal_strnlen@@Base+0x6c8>
   37298:	mov	x2, x28
   3729c:	mov	x1, x26
   372a0:	mov	x4, x22
   372a4:	mov	x3, x21
   372a8:	mov	x0, x20
   372ac:	bl	6bc0 <__asan_backtrace_free@plt>
   372b0:	mov	x0, x19
   372b4:	mov	w1, #0x2f                  	// #47
   372b8:	bl	6ab0 <strrchr@plt>
   372bc:	cbz	x0, 374c0 <__asan_internal_strnlen@@Base+0x948>
   372c0:	add	x0, x0, #0x1
   372c4:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   372c8:	sub	x27, x0, x19
   372cc:	ldr	x5, [sp, #104]
   372d0:	add	x3, x3, #0x5c8
   372d4:	mov	x7, x22
   372d8:	mov	x6, x21
   372dc:	mov	x2, x27
   372e0:	mov	x1, x19
   372e4:	mov	x0, x20
   372e8:	mov	x4, #0x0                   	// #0
   372ec:	bl	370d8 <__asan_internal_strnlen@@Base+0x560>
   372f0:	mov	w23, w0
   372f4:	tbnz	w0, #31, 37404 <__asan_internal_strnlen@@Base+0x88c>
   372f8:	cmp	x24, #0x0
   372fc:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   37300:	b.ne	37488 <__asan_internal_strnlen@@Base+0x910>  // b.any
   37304:	mov	w0, w23
   37308:	ldp	x19, x20, [sp, #16]
   3730c:	ldp	x21, x22, [sp, #32]
   37310:	ldp	x23, x24, [sp, #48]
   37314:	ldp	x25, x26, [sp, #64]
   37318:	ldp	x27, x28, [sp, #80]
   3731c:	ldp	x29, x30, [sp], #256
   37320:	ret
   37324:	strb	wzr, [x26, x0]
   37328:	ldrb	w0, [x26]
   3732c:	cmp	w0, #0x2f
   37330:	b.eq	373d8 <__asan_internal_strnlen@@Base+0x860>  // b.none
   37334:	mov	x0, x19
   37338:	mov	w1, #0x2f                  	// #47
   3733c:	bl	6ab0 <strrchr@plt>
   37340:	cbz	x0, 373d8 <__asan_internal_strnlen@@Base+0x860>
   37344:	add	x23, x0, #0x1
   37348:	mov	x0, x26
   3734c:	sub	x23, x23, x19
   37350:	bl	67e0 <__asan_internal_strlen@plt>
   37354:	add	x1, x23, #0x1
   37358:	mov	x3, x22
   3735c:	add	x0, x1, x0
   37360:	mov	x2, x21
   37364:	mov	x1, x0
   37368:	str	x0, [sp, #112]
   3736c:	mov	x0, x20
   37370:	bl	68c0 <__asan_backtrace_alloc@plt>
   37374:	str	x0, [sp, #120]
   37378:	cbz	x0, 374d0 <__asan_internal_strnlen@@Base+0x958>
   3737c:	mov	x2, x23
   37380:	mov	x1, x19
   37384:	bl	67d0 <__asan_internal_memcpy@plt>
   37388:	ldr	x3, [sp, #120]
   3738c:	mov	x0, x26
   37390:	add	x23, x3, x23
   37394:	bl	67e0 <__asan_internal_strlen@plt>
   37398:	mov	x2, x0
   3739c:	mov	x1, x26
   373a0:	mov	x0, x23
   373a4:	bl	67d0 <__asan_internal_memcpy@plt>
   373a8:	mov	x0, x26
   373ac:	bl	67e0 <__asan_internal_strlen@plt>
   373b0:	mov	x7, x0
   373b4:	mov	x2, x28
   373b8:	mov	x1, x26
   373bc:	ldp	x28, x3, [sp, #112]
   373c0:	strb	wzr, [x23, x7]
   373c4:	mov	x4, x22
   373c8:	mov	x0, x20
   373cc:	mov	x26, x3
   373d0:	mov	x3, x21
   373d4:	bl	6bc0 <__asan_backtrace_free@plt>
   373d8:	cbz	x24, 373f4 <__asan_internal_strnlen@@Base+0x87c>
   373dc:	mov	x2, x25
   373e0:	mov	x1, x24
   373e4:	mov	x4, x22
   373e8:	mov	x3, x21
   373ec:	mov	x0, x20
   373f0:	bl	6bc0 <__asan_backtrace_free@plt>
   373f4:	mov	x24, x26
   373f8:	mov	x25, x28
   373fc:	mov	x19, x26
   37400:	b	37214 <__asan_internal_strnlen@@Base+0x69c>
   37404:	adrp	x23, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   37408:	add	x23, x23, #0x2a0
   3740c:	mov	x0, x23
   37410:	bl	67e0 <__asan_internal_strlen@plt>
   37414:	ldr	x5, [sp, #104]
   37418:	mov	x4, x0
   3741c:	mov	x3, x23
   37420:	mov	x7, x22
   37424:	mov	x6, x21
   37428:	mov	x2, x27
   3742c:	mov	x1, x19
   37430:	mov	x0, x20
   37434:	bl	370d8 <__asan_internal_strnlen@@Base+0x560>
   37438:	mov	w23, w0
   3743c:	tbz	w0, #31, 372f8 <__asan_internal_strnlen@@Base+0x780>
   37440:	adrp	x23, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   37444:	add	x23, x23, #0x2a8
   37448:	mov	x0, x23
   3744c:	bl	67e0 <__asan_internal_strlen@plt>
   37450:	ldr	x5, [sp, #104]
   37454:	mov	x2, x0
   37458:	mov	x1, x23
   3745c:	mov	x7, x22
   37460:	mov	x6, x21
   37464:	mov	x4, x27
   37468:	mov	x3, x19
   3746c:	mov	x0, x20
   37470:	bl	370d8 <__asan_internal_strnlen@@Base+0x560>
   37474:	cmp	w0, #0x0
   37478:	csinv	w23, w0, wzr, ge  // ge = tcont
   3747c:	cmp	x24, #0x0
   37480:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   37484:	b.eq	37304 <__asan_internal_strnlen@@Base+0x78c>  // b.none
   37488:	mov	x4, x22
   3748c:	mov	x3, x21
   37490:	mov	x2, x25
   37494:	mov	x1, x24
   37498:	mov	x0, x20
   3749c:	bl	6bc0 <__asan_backtrace_free@plt>
   374a0:	mov	w0, w23
   374a4:	ldp	x19, x20, [sp, #16]
   374a8:	ldp	x21, x22, [sp, #32]
   374ac:	ldp	x23, x24, [sp, #48]
   374b0:	ldp	x25, x26, [sp, #64]
   374b4:	ldp	x27, x28, [sp, #80]
   374b8:	ldp	x29, x30, [sp], #256
   374bc:	ret
   374c0:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   374c4:	mov	x27, #0x0                   	// #0
   374c8:	add	x19, x3, #0x5c8
   374cc:	b	372cc <__asan_internal_strnlen@@Base+0x754>
   374d0:	mov	w23, #0xffffffff            	// #-1
   374d4:	b	372f8 <__asan_internal_strnlen@@Base+0x780>
   374d8:	stp	x29, x30, [sp, #-224]!
   374dc:	cmp	x1, #0x4
   374e0:	mov	x29, sp
   374e4:	stp	x19, x20, [sp, #16]
   374e8:	mov	x19, x3
   374ec:	stp	x21, x22, [sp, #32]
   374f0:	add	x21, x0, x1
   374f4:	mov	x22, x1
   374f8:	stp	x23, x24, [sp, #48]
   374fc:	mov	x23, x0
   37500:	add	x0, x3, x4
   37504:	str	x0, [sp, #104]
   37508:	mov	x24, x4
   3750c:	b.le	37fc8 <__asan_internal_strnlen@@Base+0x1450>
   37510:	adrp	x20, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   37514:	mov	x13, x2
   37518:	add	x0, x20, #0x4b8
   3751c:	mov	x5, x23
   37520:	mov	x20, x3
   37524:	str	x0, [sp, #112]
   37528:	add	x0, x0, #0x200
   3752c:	str	x0, [sp, #120]
   37530:	ldrb	w0, [x5]
   37534:	and	w1, w0, #0xf
   37538:	cmp	w1, #0x8
   3753c:	b.ne	379c4 <__asan_internal_strnlen@@Base+0xe4c>  // b.any
   37540:	cmp	w0, #0x7f
   37544:	b.hi	379c4 <__asan_internal_strnlen@@Base+0xe4c>  // b.pmore
   37548:	ldrb	w1, [x5, #1]
   3754c:	ldrh	w0, [x5]
   37550:	rev16	w0, w0
   37554:	tbnz	w1, #5, 379c4 <__asan_internal_strnlen@@Base+0xe4c>
   37558:	mov	x1, #0x4211                	// #16913
   3755c:	and	x0, x0, #0xffff
   37560:	movk	x1, #0x2108, lsl #16
   37564:	movk	x1, #0x1084, lsl #32
   37568:	movk	x1, #0x842, lsl #48
   3756c:	umulh	x2, x0, x1
   37570:	sub	x1, x0, x2
   37574:	add	x1, x2, x1, lsr #1
   37578:	lsr	x1, x1, #4
   3757c:	lsl	x2, x1, #5
   37580:	sub	x1, x2, x1
   37584:	cmp	x0, x1
   37588:	b.ne	379c4 <__asan_internal_strnlen@@Base+0xe4c>  // b.any
   3758c:	add	x5, x5, #0x2
   37590:	ands	x10, x5, #0x3
   37594:	b.eq	37f1c <__asan_internal_strnlen@@Base+0x13a4>  // b.none
   37598:	mov	x10, #0x0                   	// #0
   3759c:	mov	w3, #0x0                   	// #0
   375a0:	ldrb	w0, [x5], #1
   375a4:	lsl	x0, x0, x3
   375a8:	tst	x5, #0x3
   375ac:	orr	x10, x10, x0
   375b0:	add	w3, w3, #0x8
   375b4:	b.ne	375a0 <__asan_internal_strnlen@@Base+0xa28>  // b.any
   375b8:	cmp	w3, #0xe
   375bc:	b.hi	375e0 <__asan_internal_strnlen@@Base+0xa68>  // b.pmore
   375c0:	sub	x0, x21, x5
   375c4:	cmp	x0, #0x3
   375c8:	b.le	379c4 <__asan_internal_strnlen@@Base+0xe4c>
   375cc:	ldr	w0, [x5], #4
   375d0:	lsl	x0, x0, x3
   375d4:	add	w3, w3, #0x20
   375d8:	prfm	pldl1strm, [x5]
   375dc:	orr	x10, x10, x0
   375e0:	ubfx	w0, w10, #1, #2
   375e4:	sub	w7, w3, #0x3
   375e8:	cmp	w0, #0x3
   375ec:	b.eq	379c4 <__asan_internal_strnlen@@Base+0xe4c>  // b.none
   375f0:	cbz	w0, 37a50 <__asan_internal_strnlen@@Base+0xed8>
   375f4:	stp	x25, x26, [sp, #64]
   375f8:	cmp	w0, #0x1
   375fc:	lsr	x6, x10, #3
   37600:	stp	x27, x28, [sp, #80]
   37604:	b.eq	37bdc <__asan_internal_strnlen@@Base+0x1064>  // b.none
   37608:	cmp	w7, #0xe
   3760c:	b.hi	37630 <__asan_internal_strnlen@@Base+0xab8>  // b.pmore
   37610:	sub	x0, x21, x5
   37614:	cmp	x0, #0x3
   37618:	b.le	379dc <__asan_internal_strnlen@@Base+0xe64>
   3761c:	ldr	w0, [x5], #4
   37620:	lsl	x0, x0, x7
   37624:	add	w7, w3, #0x1d
   37628:	prfm	pldl1strm, [x5]
   3762c:	orr	x6, x6, x0
   37630:	and	w25, w6, #0x1f
   37634:	ubfx	w26, w6, #5, #5
   37638:	add	w25, w25, #0x101
   3763c:	sub	w3, w7, #0xe
   37640:	str	w3, [sp, #128]
   37644:	add	w26, w26, #0x1
   37648:	stp	x10, x5, [sp, #136]
   3764c:	cmp	w25, #0x11e
   37650:	ubfx	w27, w6, #10, #4
   37654:	str	x13, [sp, #152]
   37658:	ccmp	w26, #0x1e, #0x2, ls  // ls = plast
   3765c:	str	w7, [sp, #168]
   37660:	add	w27, w27, #0x4
   37664:	lsr	x28, x6, #14
   37668:	b.hi	379dc <__asan_internal_strnlen@@Base+0xe64>  // b.pmore
   3766c:	add	x14, sp, #0xc8
   37670:	mov	x2, #0x13                  	// #19
   37674:	mov	x0, x14
   37678:	mov	w1, #0x0                   	// #0
   3767c:	str	x14, [sp, #160]
   37680:	bl	6860 <__asan_internal_memset@plt>
   37684:	ldr	w3, [sp, #128]
   37688:	ldp	x10, x5, [sp, #136]
   3768c:	cmp	w3, #0xe
   37690:	ldp	x13, x14, [sp, #152]
   37694:	b.hi	376bc <__asan_internal_strnlen@@Base+0xb44>  // b.pmore
   37698:	sub	x0, x21, x5
   3769c:	cmp	x0, #0x3
   376a0:	b.le	379dc <__asan_internal_strnlen@@Base+0xe64>
   376a4:	ldr	w0, [x5], #4
   376a8:	ldr	w7, [sp, #168]
   376ac:	lsl	x0, x0, x3
   376b0:	add	w3, w7, #0x12
   376b4:	prfm	pldl1strm, [x5]
   376b8:	orr	x28, x28, x0
   376bc:	and	w0, w28, #0x7
   376c0:	strb	w0, [sp, #216]
   376c4:	ubfx	w0, w28, #3, #3
   376c8:	strb	w0, [sp, #217]
   376cc:	ubfx	w0, w28, #6, #3
   376d0:	strb	w0, [sp, #218]
   376d4:	ubfx	w0, w28, #9, #3
   376d8:	strb	w0, [sp, #200]
   376dc:	sub	w7, w3, #0xc
   376e0:	cmp	w27, #0x4
   376e4:	lsr	x6, x28, #12
   376e8:	b.eq	37898 <__asan_internal_strnlen@@Base+0xd20>  // b.none
   376ec:	and	w6, w6, #0x7
   376f0:	strb	w6, [sp, #208]
   376f4:	cmp	w27, #0x5
   376f8:	lsr	x6, x28, #15
   376fc:	sub	w7, w3, #0xf
   37700:	b.eq	37898 <__asan_internal_strnlen@@Base+0xd20>  // b.none
   37704:	cmp	w7, #0xe
   37708:	b.hi	3772c <__asan_internal_strnlen@@Base+0xbb4>  // b.pmore
   3770c:	sub	x0, x21, x5
   37710:	cmp	x0, #0x3
   37714:	b.le	379dc <__asan_internal_strnlen@@Base+0xe64>
   37718:	ldr	w0, [x5], #4
   3771c:	lsl	x0, x0, x7
   37720:	add	w7, w3, #0x11
   37724:	prfm	pldl1strm, [x5]
   37728:	orr	x6, x6, x0
   3772c:	and	w0, w6, #0x7
   37730:	strb	w0, [sp, #207]
   37734:	cmp	w27, #0x6
   37738:	lsr	x0, x6, #3
   3773c:	b.eq	37f3c <__asan_internal_strnlen@@Base+0x13c4>  // b.none
   37740:	and	w0, w0, #0x7
   37744:	strb	w0, [sp, #209]
   37748:	cmp	w27, #0x7
   3774c:	lsr	x0, x6, #6
   37750:	b.eq	37f50 <__asan_internal_strnlen@@Base+0x13d8>  // b.none
   37754:	and	w0, w0, #0x7
   37758:	strb	w0, [sp, #206]
   3775c:	cmp	w27, #0x8
   37760:	lsr	x0, x6, #9
   37764:	b.eq	37f30 <__asan_internal_strnlen@@Base+0x13b8>  // b.none
   37768:	and	w0, w0, #0x7
   3776c:	strb	w0, [sp, #210]
   37770:	cmp	w27, #0x9
   37774:	lsr	x0, x6, #12
   37778:	b.eq	37f24 <__asan_internal_strnlen@@Base+0x13ac>  // b.none
   3777c:	and	w0, w0, #0x7
   37780:	strb	w0, [sp, #205]
   37784:	lsr	x6, x6, #15
   37788:	cmp	w27, #0xa
   3778c:	sub	w0, w7, #0xf
   37790:	b.eq	38268 <__asan_internal_strnlen@@Base+0x16f0>  // b.none
   37794:	cmp	w0, #0xe
   37798:	b.hi	377bc <__asan_internal_strnlen@@Base+0xc44>  // b.pmore
   3779c:	sub	x1, x21, x5
   377a0:	cmp	x1, #0x3
   377a4:	b.le	379dc <__asan_internal_strnlen@@Base+0xe64>
   377a8:	ldr	w1, [x5], #4
   377ac:	lsl	x1, x1, x0
   377b0:	add	w0, w7, #0x11
   377b4:	prfm	pldl1strm, [x5]
   377b8:	orr	x6, x6, x1
   377bc:	and	w1, w6, #0x7
   377c0:	strb	w1, [sp, #211]
   377c4:	cmp	w27, #0xb
   377c8:	lsr	x1, x6, #3
   377cc:	b.eq	38270 <__asan_internal_strnlen@@Base+0x16f8>  // b.none
   377d0:	and	w1, w1, #0x7
   377d4:	strb	w1, [sp, #204]
   377d8:	cmp	w27, #0xc
   377dc:	lsr	x1, x6, #6
   377e0:	b.eq	38290 <__asan_internal_strnlen@@Base+0x1718>  // b.none
   377e4:	and	w1, w1, #0x7
   377e8:	strb	w1, [sp, #212]
   377ec:	cmp	w27, #0xd
   377f0:	lsr	x1, x6, #9
   377f4:	b.eq	3829c <__asan_internal_strnlen@@Base+0x1724>  // b.none
   377f8:	and	w1, w1, #0x7
   377fc:	strb	w1, [sp, #203]
   37800:	cmp	w27, #0xe
   37804:	lsr	x1, x6, #12
   37808:	b.eq	382b0 <__asan_internal_strnlen@@Base+0x1738>  // b.none
   3780c:	and	w1, w1, #0x7
   37810:	strb	w1, [sp, #213]
   37814:	lsr	x6, x6, #15
   37818:	cmp	w27, #0xf
   3781c:	sub	w7, w0, #0xf
   37820:	b.eq	37898 <__asan_internal_strnlen@@Base+0xd20>  // b.none
   37824:	cmp	w7, #0xe
   37828:	b.hi	3784c <__asan_internal_strnlen@@Base+0xcd4>  // b.pmore
   3782c:	sub	x1, x21, x5
   37830:	cmp	x1, #0x3
   37834:	b.le	379dc <__asan_internal_strnlen@@Base+0xe64>
   37838:	ldr	w1, [x5], #4
   3783c:	lsl	x1, x1, x7
   37840:	add	w7, w0, #0x11
   37844:	prfm	pldl1strm, [x5]
   37848:	orr	x6, x6, x1
   3784c:	and	w0, w6, #0x7
   37850:	strb	w0, [sp, #202]
   37854:	cmp	w27, #0x10
   37858:	lsr	x0, x6, #3
   3785c:	b.eq	37f3c <__asan_internal_strnlen@@Base+0x13c4>  // b.none
   37860:	and	w0, w0, #0x7
   37864:	strb	w0, [sp, #214]
   37868:	cmp	w27, #0x11
   3786c:	lsr	x0, x6, #6
   37870:	b.eq	37f50 <__asan_internal_strnlen@@Base+0x13d8>  // b.none
   37874:	and	w0, w0, #0x7
   37878:	strb	w0, [sp, #201]
   3787c:	cmp	w27, #0x12
   37880:	lsr	x0, x6, #9
   37884:	b.eq	37f30 <__asan_internal_strnlen@@Base+0x13b8>  // b.none
   37888:	lsr	x6, x6, #12
   3788c:	sub	w7, w7, #0xc
   37890:	and	w0, w0, #0x7
   37894:	strb	w0, [sp, #215]
   37898:	mov	x0, x14
   3789c:	mov	x3, x13
   378a0:	mov	x2, x13
   378a4:	mov	x1, #0x13                  	// #19
   378a8:	stp	x13, x10, [sp, #128]
   378ac:	str	x5, [sp, #144]
   378b0:	str	w7, [sp, #152]
   378b4:	str	x6, [sp, #160]
   378b8:	bl	36be0 <__asan_internal_strnlen@@Base+0x68>
   378bc:	cbz	w0, 379dc <__asan_internal_strnlen@@Base+0xe64>
   378c0:	ldp	x13, x10, [sp, #128]
   378c4:	add	x3, x25, x26
   378c8:	mov	x1, #0x1278                	// #4728
   378cc:	ldr	w7, [sp, #152]
   378d0:	ldr	x5, [sp, #144]
   378d4:	ldr	x6, [sp, #160]
   378d8:	add	x28, x13, x1
   378dc:	add	x3, x28, x3
   378e0:	cmp	x28, x3
   378e4:	b.cs	37f5c <__asan_internal_strnlen@@Base+0x13e4>  // b.hs, b.nlast
   378e8:	mov	x27, x28
   378ec:	b	37900 <__asan_internal_strnlen@@Base+0xd88>
   378f0:	sub	w7, w7, #0x1
   378f4:	strb	w0, [x27], #1
   378f8:	cmp	x3, x27
   378fc:	b.ls	37f5c <__asan_internal_strnlen@@Base+0x13e4>  // b.plast
   37900:	cmp	w7, #0xe
   37904:	b.hi	37928 <__asan_internal_strnlen@@Base+0xdb0>  // b.pmore
   37908:	sub	x0, x21, x5
   3790c:	cmp	x0, #0x3
   37910:	b.le	379dc <__asan_internal_strnlen@@Base+0xe64>
   37914:	ldr	w0, [x5], #4
   37918:	lsl	x0, x0, x7
   3791c:	add	w7, w7, #0x20
   37920:	prfm	pldl1strm, [x5]
   37924:	orr	x6, x6, x0
   37928:	and	x0, x6, #0xff
   3792c:	ldrh	w0, [x13, x0, lsl #1]
   37930:	tbnz	w0, #12, 379dc <__asan_internal_strnlen@@Base+0xe64>
   37934:	ubfx	x1, x0, #9, #3
   37938:	tst	w0, #0x1f0
   3793c:	add	w2, w1, #0x1
   37940:	sub	w7, w7, w1
   37944:	and	w0, w0, #0x1ff
   37948:	lsr	x6, x6, x2
   3794c:	b.eq	378f0 <__asan_internal_strnlen@@Base+0xd78>  // b.none
   37950:	cmp	w0, #0x10
   37954:	b.eq	379fc <__asan_internal_strnlen@@Base+0xe84>  // b.none
   37958:	cmp	w0, #0x11
   3795c:	b.eq	37b38 <__asan_internal_strnlen@@Base+0xfc0>  // b.none
   37960:	stp	x10, x5, [sp, #128]
   37964:	cmp	w0, #0x12
   37968:	str	x13, [sp, #144]
   3796c:	b.ne	379dc <__asan_internal_strnlen@@Base+0xe64>  // b.any
   37970:	and	w2, w6, #0x7f
   37974:	sub	w7, w7, #0x8
   37978:	lsr	x6, x6, #7
   3797c:	str	x6, [sp, #152]
   37980:	str	w7, [sp, #160]
   37984:	sub	x0, x3, x27
   37988:	str	x3, [sp, #168]
   3798c:	add	w2, w2, #0xb
   37990:	cmp	w2, w0
   37994:	b.hi	379dc <__asan_internal_strnlen@@Base+0xe64>  // b.pmore
   37998:	mov	x0, x27
   3799c:	mov	w1, #0x0                   	// #0
   379a0:	add	x27, x27, x2
   379a4:	bl	6860 <__asan_internal_memset@plt>
   379a8:	ldr	w7, [sp, #160]
   379ac:	ldp	x10, x5, [sp, #128]
   379b0:	ldp	x13, x6, [sp, #144]
   379b4:	ldr	x3, [sp, #168]
   379b8:	b	378f8 <__asan_internal_strnlen@@Base+0xd80>
   379bc:	ldp	x25, x26, [sp, #64]
   379c0:	ldp	x27, x28, [sp, #80]
   379c4:	mov	w0, #0x0                   	// #0
   379c8:	ldp	x19, x20, [sp, #16]
   379cc:	ldp	x21, x22, [sp, #32]
   379d0:	ldp	x23, x24, [sp, #48]
   379d4:	ldp	x29, x30, [sp], #224
   379d8:	ret
   379dc:	mov	w0, #0x0                   	// #0
   379e0:	ldp	x19, x20, [sp, #16]
   379e4:	ldp	x21, x22, [sp, #32]
   379e8:	ldp	x23, x24, [sp, #48]
   379ec:	ldp	x25, x26, [sp, #64]
   379f0:	ldp	x27, x28, [sp, #80]
   379f4:	ldp	x29, x30, [sp], #224
   379f8:	ret
   379fc:	cmp	x28, x27
   37a00:	b.eq	379dc <__asan_internal_strnlen@@Base+0xe64>  // b.none
   37a04:	and	w0, w6, #0x3
   37a08:	sub	x1, x3, x27
   37a0c:	add	w0, w0, #0x3
   37a10:	sub	w7, w7, #0x3
   37a14:	lsr	x6, x6, #2
   37a18:	cmp	w0, w1
   37a1c:	b.hi	379dc <__asan_internal_strnlen@@Base+0xe64>  // b.pmore
   37a20:	ldurb	w1, [x27, #-1]
   37a24:	cmp	w0, #0x5
   37a28:	b.eq	37b1c <__asan_internal_strnlen@@Base+0xfa4>  // b.none
   37a2c:	cmp	w0, #0x6
   37a30:	b.eq	37b18 <__asan_internal_strnlen@@Base+0xfa0>  // b.none
   37a34:	cmp	w0, #0x4
   37a38:	b.eq	37b20 <__asan_internal_strnlen@@Base+0xfa8>  // b.none
   37a3c:	add	x27, x27, #0x3
   37a40:	sturb	w1, [x27, #-3]
   37a44:	sturb	w1, [x27, #-2]
   37a48:	sturb	w1, [x27, #-1]
   37a4c:	b	378f8 <__asan_internal_strnlen@@Base+0xd80>
   37a50:	sub	w3, w3, #0xc
   37a54:	stp	x10, x13, [sp, #128]
   37a58:	lsr	w3, w3, #3
   37a5c:	mvn	x2, x3
   37a60:	add	x6, x5, x2
   37a64:	sub	x0, x21, x6
   37a68:	cmp	x0, #0x3
   37a6c:	b.le	379c4 <__asan_internal_strnlen@@Base+0xe4c>
   37a70:	ldrb	w7, [x6, #3]
   37a74:	sub	x3, x5, x3
   37a78:	ldrb	w0, [x6, #2]
   37a7c:	add	x1, x3, #0x3
   37a80:	ldrb	w2, [x5, x2]
   37a84:	ldrb	w3, [x6, #1]
   37a88:	bfi	w0, w7, #8, #24
   37a8c:	mvn	w0, w0
   37a90:	bfi	w2, w3, #8, #24
   37a94:	cmp	w2, w0, uxth
   37a98:	b.ne	379c4 <__asan_internal_strnlen@@Base+0xe4c>  // b.any
   37a9c:	sub	x0, x21, x1
   37aa0:	cmp	w2, w0
   37aa4:	b.hi	379c4 <__asan_internal_strnlen@@Base+0xe4c>  // b.pmore
   37aa8:	ldr	x0, [sp, #104]
   37aac:	sub	x0, x0, x20
   37ab0:	cmp	w2, w0
   37ab4:	b.hi	379c4 <__asan_internal_strnlen@@Base+0xe4c>  // b.pmore
   37ab8:	stp	x25, x26, [sp, #64]
   37abc:	and	x25, x2, #0xffff
   37ac0:	add	x5, x1, x25
   37ac4:	mov	x0, x20
   37ac8:	mov	x2, x25
   37acc:	str	x5, [sp, #144]
   37ad0:	add	x20, x20, x25
   37ad4:	bl	67d0 <__asan_internal_memcpy@plt>
   37ad8:	ldr	x5, [sp, #144]
   37adc:	ldp	x10, x13, [sp, #128]
   37ae0:	ands	x6, x5, #0x3
   37ae4:	b.eq	382a8 <__asan_internal_strnlen@@Base+0x1730>  // b.none
   37ae8:	mov	x6, #0x0                   	// #0
   37aec:	mov	w3, #0x0                   	// #0
   37af0:	ldrb	w0, [x5], #1
   37af4:	lsl	x0, x0, x3
   37af8:	tst	x5, #0x3
   37afc:	orr	x6, x6, x0
   37b00:	add	w3, w3, #0x8
   37b04:	b.ne	37af0 <__asan_internal_strnlen@@Base+0xf78>  // b.any
   37b08:	tbnz	w10, #0, 3827c <__asan_internal_strnlen@@Base+0x1704>
   37b0c:	mov	x10, x6
   37b10:	ldp	x25, x26, [sp, #64]
   37b14:	b	375b8 <__asan_internal_strnlen@@Base+0xa40>
   37b18:	strb	w1, [x27], #1
   37b1c:	strb	w1, [x27], #1
   37b20:	strb	w1, [x27], #1
   37b24:	add	x27, x27, #0x3
   37b28:	sturb	w1, [x27, #-3]
   37b2c:	sturb	w1, [x27, #-2]
   37b30:	sturb	w1, [x27, #-1]
   37b34:	b	378f8 <__asan_internal_strnlen@@Base+0xd80>
   37b38:	and	w0, w6, #0x7
   37b3c:	sub	x1, x3, x27
   37b40:	add	w0, w0, #0x3
   37b44:	sub	w7, w7, #0x4
   37b48:	lsr	x6, x6, #3
   37b4c:	cmp	w0, w1
   37b50:	b.hi	379dc <__asan_internal_strnlen@@Base+0xe64>  // b.pmore
   37b54:	cmp	w0, #0x7
   37b58:	b.eq	37bc0 <__asan_internal_strnlen@@Base+0x1048>  // b.none
   37b5c:	b.hi	37ba4 <__asan_internal_strnlen@@Base+0x102c>  // b.pmore
   37b60:	cmp	w0, #0x5
   37b64:	b.eq	37b78 <__asan_internal_strnlen@@Base+0x1000>  // b.none
   37b68:	cmp	w0, #0x6
   37b6c:	b.ne	37b94 <__asan_internal_strnlen@@Base+0x101c>  // b.any
   37b70:	strb	wzr, [x27], #1
   37b74:	nop
   37b78:	strb	wzr, [x27], #1
   37b7c:	mov	x0, x27
   37b80:	strb	wzr, [x0], #1
   37b84:	mov	x27, x0
   37b88:	strh	wzr, [x27], #3
   37b8c:	strb	wzr, [x0, #2]
   37b90:	b	378f8 <__asan_internal_strnlen@@Base+0xd80>
   37b94:	cmp	w0, #0x4
   37b98:	b.eq	37b7c <__asan_internal_strnlen@@Base+0x1004>  // b.none
   37b9c:	mov	x0, x27
   37ba0:	b	37b84 <__asan_internal_strnlen@@Base+0x100c>
   37ba4:	cmp	w0, #0x9
   37ba8:	b.eq	37bb8 <__asan_internal_strnlen@@Base+0x1040>  // b.none
   37bac:	cmp	w0, #0xa
   37bb0:	b.ne	37bcc <__asan_internal_strnlen@@Base+0x1054>  // b.any
   37bb4:	strb	wzr, [x27], #1
   37bb8:	strb	wzr, [x27], #1
   37bbc:	strb	wzr, [x27], #1
   37bc0:	strb	wzr, [x27], #1
   37bc4:	strb	wzr, [x27], #1
   37bc8:	b	37b78 <__asan_internal_strnlen@@Base+0x1000>
   37bcc:	cmp	w0, #0x8
   37bd0:	b.ne	37b9c <__asan_internal_strnlen@@Base+0x1024>  // b.any
   37bd4:	strb	wzr, [x27], #1
   37bd8:	b	37bc0 <__asan_internal_strnlen@@Base+0x1048>
   37bdc:	ldp	x0, x25, [sp, #112]
   37be0:	str	x0, [sp, #176]
   37be4:	cmp	w7, #0xe
   37be8:	b.hi	37c0c <__asan_internal_strnlen@@Base+0x1094>  // b.pmore
   37bec:	sub	x0, x21, x5
   37bf0:	cmp	x0, #0x3
   37bf4:	b.le	379bc <__asan_internal_strnlen@@Base+0xe44>
   37bf8:	ldr	w0, [x5], #4
   37bfc:	lsl	x0, x0, x7
   37c00:	add	w7, w7, #0x20
   37c04:	prfm	pldl1strm, [x5]
   37c08:	orr	x6, x6, x0
   37c0c:	and	x0, x6, #0xff
   37c10:	ldrh	w1, [x25, x0, lsl #1]
   37c14:	and	w3, w1, #0x1ff
   37c18:	ubfx	x0, x1, #9, #3
   37c1c:	tbnz	w1, #12, 37c60 <__asan_internal_strnlen@@Base+0x10e8>
   37c20:	add	w1, w0, #0x1
   37c24:	sub	w7, w7, #0x1
   37c28:	sub	w7, w7, w0
   37c2c:	cmp	w3, #0xff
   37c30:	lsr	x6, x6, x1
   37c34:	b.hi	37c9c <__asan_internal_strnlen@@Base+0x1124>  // b.pmore
   37c38:	ldr	x0, [sp, #104]
   37c3c:	cmp	x0, x20
   37c40:	b.eq	379bc <__asan_internal_strnlen@@Base+0xe44>  // b.none
   37c44:	mov	x11, x20
   37c48:	cmp	w7, #0xe
   37c4c:	strb	w3, [x11], #1
   37c50:	prfm	pstl1keep, [x11]
   37c54:	mov	x20, x11
   37c58:	b.ls	37bec <__asan_internal_strnlen@@Base+0x1074>  // b.plast
   37c5c:	b	37c0c <__asan_internal_strnlen@@Base+0x1094>
   37c60:	mov	w1, #0x1                   	// #1
   37c64:	add	w3, w3, #0x100
   37c68:	lsl	w0, w1, w0
   37c6c:	sub	w0, w0, #0x1
   37c70:	and	x0, x0, x6, lsr #8
   37c74:	sub	w7, w7, #0x8
   37c78:	add	x3, x0, w3, sxtw
   37c7c:	ldrh	w0, [x25, x3, lsl #1]
   37c80:	and	w3, w0, #0x1ff
   37c84:	ubfx	x0, x0, #9, #3
   37c88:	cmp	w3, #0xff
   37c8c:	add	w1, w0, #0x8
   37c90:	sub	w7, w7, w0
   37c94:	lsr	x6, x6, x1
   37c98:	b.ls	37c38 <__asan_internal_strnlen@@Base+0x10c0>  // b.plast
   37c9c:	cmp	w3, #0x100
   37ca0:	b.eq	382bc <__asan_internal_strnlen@@Base+0x1744>  // b.none
   37ca4:	cmp	w3, #0x108
   37ca8:	b.hi	37d4c <__asan_internal_strnlen@@Base+0x11d4>  // b.pmore
   37cac:	sub	w28, w3, #0xfe
   37cb0:	cmp	w7, #0xe
   37cb4:	b.hi	37cd8 <__asan_internal_strnlen@@Base+0x1160>  // b.pmore
   37cb8:	sub	x0, x21, x5
   37cbc:	cmp	x0, #0x3
   37cc0:	b.le	379bc <__asan_internal_strnlen@@Base+0xe44>
   37cc4:	ldr	w0, [x5], #4
   37cc8:	lsl	x0, x0, x7
   37ccc:	add	w7, w7, #0x20
   37cd0:	prfm	pldl1strm, [x5]
   37cd4:	orr	x6, x6, x0
   37cd8:	ldr	x1, [sp, #176]
   37cdc:	and	x0, x6, #0xff
   37ce0:	ldrh	w1, [x1, x0, lsl #1]
   37ce4:	and	w14, w1, #0x1ff
   37ce8:	ubfx	x0, x1, #9, #3
   37cec:	tbnz	w1, #12, 37dc4 <__asan_internal_strnlen@@Base+0x124c>
   37cf0:	add	w1, w0, #0x1
   37cf4:	sub	w7, w7, #0x1
   37cf8:	sub	w7, w7, w0
   37cfc:	lsr	x6, x6, x1
   37d00:	cbnz	w14, 37e00 <__asan_internal_strnlen@@Base+0x1288>
   37d04:	stp	x10, x5, [sp, #128]
   37d08:	cmp	x19, x20
   37d0c:	str	w7, [sp, #144]
   37d10:	stp	x6, x13, [sp, #152]
   37d14:	b.eq	379bc <__asan_internal_strnlen@@Base+0xe44>  // b.none
   37d18:	ldr	x0, [sp, #104]
   37d1c:	sub	x0, x0, x20
   37d20:	cmp	w28, w0
   37d24:	b.hi	379bc <__asan_internal_strnlen@@Base+0xe44>  // b.pmore
   37d28:	ldurb	w1, [x20, #-1]
   37d2c:	mov	w2, w28
   37d30:	mov	x0, x20
   37d34:	add	x20, x20, x2
   37d38:	bl	6860 <__asan_internal_memset@plt>
   37d3c:	ldr	w7, [sp, #144]
   37d40:	ldp	x10, x5, [sp, #128]
   37d44:	ldp	x6, x13, [sp, #152]
   37d48:	b	37be4 <__asan_internal_strnlen@@Base+0x106c>
   37d4c:	cmp	w3, #0x11d
   37d50:	b.eq	37f48 <__asan_internal_strnlen@@Base+0x13d0>  // b.none
   37d54:	b.hi	379bc <__asan_internal_strnlen@@Base+0xe44>  // b.pmore
   37d58:	cmp	w7, #0xe
   37d5c:	b.hi	37d80 <__asan_internal_strnlen@@Base+0x1208>  // b.pmore
   37d60:	sub	x0, x21, x5
   37d64:	cmp	x0, #0x3
   37d68:	b.le	379bc <__asan_internal_strnlen@@Base+0xe44>
   37d6c:	ldr	w0, [x5], #4
   37d70:	lsl	x0, x0, x7
   37d74:	add	w7, w7, #0x20
   37d78:	prfm	pldl1strm, [x5]
   37d7c:	orr	x6, x6, x0
   37d80:	sub	w3, w3, #0x109
   37d84:	mov	w2, #0x1                   	// #1
   37d88:	and	w0, w3, #0x3
   37d8c:	lsr	w3, w3, #2
   37d90:	add	w1, w3, #0x1
   37d94:	lsl	w3, w2, w3
   37d98:	mov	w2, #0xffffffff            	// #-1
   37d9c:	sub	w3, w3, #0x1
   37da0:	lsl	w2, w2, w1
   37da4:	bic	w2, w6, w2
   37da8:	lsl	w0, w0, w1
   37dac:	add	w2, w2, w3, lsl #3
   37db0:	add	w3, w0, #0xb
   37db4:	sub	w7, w7, w1
   37db8:	add	w28, w2, w3
   37dbc:	lsr	x6, x6, x1
   37dc0:	b	37cb0 <__asan_internal_strnlen@@Base+0x1138>
   37dc4:	mov	w1, #0x1                   	// #1
   37dc8:	add	w14, w14, #0x100
   37dcc:	lsl	w0, w1, w0
   37dd0:	sub	w0, w0, #0x1
   37dd4:	and	x0, x0, x6, lsr #8
   37dd8:	sub	w7, w7, #0x8
   37ddc:	add	x14, x0, w14, sxtw
   37de0:	ldr	x0, [sp, #176]
   37de4:	ldrh	w0, [x0, x14, lsl #1]
   37de8:	and	w14, w0, #0x1ff
   37dec:	ubfx	x0, x0, #9, #3
   37df0:	add	w1, w0, #0x8
   37df4:	sub	w7, w7, w0
   37df8:	lsr	x6, x6, x1
   37dfc:	cbz	w14, 37d04 <__asan_internal_strnlen@@Base+0x118c>
   37e00:	cmp	w14, #0x1d
   37e04:	b.hi	379bc <__asan_internal_strnlen@@Base+0xe44>  // b.pmore
   37e08:	add	w27, w14, #0x1
   37e0c:	cmp	w14, #0x3
   37e10:	b.ls	37e7c <__asan_internal_strnlen@@Base+0x1304>  // b.plast
   37e14:	cmp	w7, #0xe
   37e18:	b.hi	37e3c <__asan_internal_strnlen@@Base+0x12c4>  // b.pmore
   37e1c:	sub	x0, x21, x5
   37e20:	cmp	x0, #0x3
   37e24:	b.le	379bc <__asan_internal_strnlen@@Base+0xe44>
   37e28:	ldr	w0, [x5], #4
   37e2c:	lsl	x0, x0, x7
   37e30:	add	w7, w7, #0x20
   37e34:	prfm	pldl1strm, [x5]
   37e38:	orr	x6, x6, x0
   37e3c:	sub	w14, w14, #0x4
   37e40:	mov	w2, #0x1                   	// #1
   37e44:	and	w0, w14, #0x1
   37e48:	lsr	w14, w14, #1
   37e4c:	add	w1, w14, #0x1
   37e50:	lsl	w14, w2, w14
   37e54:	mov	w2, #0xffffffff            	// #-1
   37e58:	sub	w14, w14, #0x1
   37e5c:	lsl	w2, w2, w1
   37e60:	bic	w2, w6, w2
   37e64:	lsl	w0, w0, w1
   37e68:	add	w14, w2, w14, lsl #2
   37e6c:	add	w0, w0, #0x5
   37e70:	sub	w7, w7, w1
   37e74:	add	w27, w14, w0
   37e78:	lsr	x6, x6, x1
   37e7c:	sub	x0, x20, x19
   37e80:	cmp	w27, w0
   37e84:	b.hi	379bc <__asan_internal_strnlen@@Base+0xe44>  // b.pmore
   37e88:	ldr	x0, [sp, #104]
   37e8c:	sub	x0, x0, x20
   37e90:	cmp	w28, w0
   37e94:	b.hi	379bc <__asan_internal_strnlen@@Base+0xe44>  // b.pmore
   37e98:	mov	w26, w27
   37e9c:	cmp	w28, w27
   37ea0:	neg	x0, x26
   37ea4:	str	x0, [sp, #184]
   37ea8:	b.hi	37ed0 <__asan_internal_strnlen@@Base+0x1358>  // b.pmore
   37eac:	mov	w2, w28
   37eb0:	add	x1, x20, x0
   37eb4:	mov	x0, x20
   37eb8:	add	x20, x20, x2
   37ebc:	stp	x10, x5, [sp, #128]
   37ec0:	str	w7, [sp, #144]
   37ec4:	stp	x6, x13, [sp, #152]
   37ec8:	bl	67d0 <__asan_internal_memcpy@plt>
   37ecc:	b	37d3c <__asan_internal_strnlen@@Base+0x11c4>
   37ed0:	cmp	w27, w28
   37ed4:	str	x5, [sp, #144]
   37ed8:	ldr	x0, [sp, #184]
   37edc:	csel	w2, w27, w28, ls  // ls = plast
   37ee0:	csel	w26, w27, w28, ls  // ls = plast
   37ee4:	stp	x2, x10, [sp, #128]
   37ee8:	add	x1, x20, x0
   37eec:	mov	x0, x20
   37ef0:	str	w7, [sp, #152]
   37ef4:	stp	x6, x13, [sp, #160]
   37ef8:	bl	67d0 <__asan_internal_memcpy@plt>
   37efc:	ldr	w7, [sp, #152]
   37f00:	ldp	x2, x10, [sp, #128]
   37f04:	subs	w28, w28, w26
   37f08:	ldr	x5, [sp, #144]
   37f0c:	ldp	x6, x13, [sp, #160]
   37f10:	add	x20, x20, x2
   37f14:	b.ne	37ed0 <__asan_internal_strnlen@@Base+0x1358>  // b.any
   37f18:	b	37be4 <__asan_internal_strnlen@@Base+0x106c>
   37f1c:	mov	w3, #0x0                   	// #0
   37f20:	b	375b8 <__asan_internal_strnlen@@Base+0xa40>
   37f24:	sub	w7, w7, #0xc
   37f28:	mov	x6, x0
   37f2c:	b	37898 <__asan_internal_strnlen@@Base+0xd20>
   37f30:	sub	w7, w7, #0x9
   37f34:	mov	x6, x0
   37f38:	b	37898 <__asan_internal_strnlen@@Base+0xd20>
   37f3c:	sub	w7, w7, #0x3
   37f40:	mov	x6, x0
   37f44:	b	37898 <__asan_internal_strnlen@@Base+0xd20>
   37f48:	mov	w28, #0x102                 	// #258
   37f4c:	b	37cb0 <__asan_internal_strnlen@@Base+0x1138>
   37f50:	sub	w7, w7, #0x6
   37f54:	mov	x6, x0
   37f58:	b	37898 <__asan_internal_strnlen@@Base+0xd20>
   37f5c:	add	x0, x13, #0x1, lsl #12
   37f60:	stp	x10, x5, [sp, #128]
   37f64:	str	w7, [sp, #144]
   37f68:	ldrb	w0, [x0, #888]
   37f6c:	str	x6, [sp, #152]
   37f70:	cbz	w0, 379dc <__asan_internal_strnlen@@Base+0xe64>
   37f74:	mov	x3, x13
   37f78:	mov	x2, x13
   37f7c:	mov	x1, x25
   37f80:	mov	x0, x28
   37f84:	str	x13, [sp, #160]
   37f88:	bl	36be0 <__asan_internal_strnlen@@Base+0x68>
   37f8c:	cbz	w0, 379dc <__asan_internal_strnlen@@Base+0xe64>
   37f90:	ldr	x13, [sp, #160]
   37f94:	mov	x1, x26
   37f98:	add	x0, x13, #0x800
   37f9c:	mov	x2, x13
   37fa0:	mov	x3, x0
   37fa4:	add	x0, x28, x25
   37fa8:	str	x3, [sp, #176]
   37fac:	bl	36be0 <__asan_internal_strnlen@@Base+0x68>
   37fb0:	cbz	w0, 379dc <__asan_internal_strnlen@@Base+0xe64>
   37fb4:	ldp	x6, x13, [sp, #152]
   37fb8:	ldr	w7, [sp, #144]
   37fbc:	ldp	x10, x5, [sp, #128]
   37fc0:	mov	x25, x13
   37fc4:	b	37be4 <__asan_internal_strnlen@@Base+0x106c>
   37fc8:	mov	x20, x3
   37fcc:	ldr	x0, [sp, #104]
   37fd0:	cmp	x0, x20
   37fd4:	b.ne	379c4 <__asan_internal_strnlen@@Base+0xe4c>  // b.any
   37fd8:	sub	x9, x22, #0x4
   37fdc:	mov	w7, #0x0                   	// #0
   37fe0:	add	x8, x23, x9
   37fe4:	ldrb	w0, [x8], #1
   37fe8:	cmp	x21, x8
   37fec:	orr	w7, w0, w7, lsl #8
   37ff0:	b.ne	37fe4 <__asan_internal_strnlen@@Base+0x146c>  // b.any
   37ff4:	mov	x11, #0x15af                	// #5551
   37ff8:	mov	w5, #0x0                   	// #0
   37ffc:	cmp	x24, x11
   38000:	mov	w3, #0x1                   	// #1
   38004:	b.ls	38110 <__asan_internal_strnlen@@Base+0x1598>  // b.plast
   38008:	mov	w13, #0x8071                	// #32881
   3800c:	mov	x14, #0x15b0                	// #5552
   38010:	movk	w13, #0x8007, lsl #16
   38014:	mov	w12, #0xfff1                	// #65521
   38018:	mov	x0, #0x15b0                	// #5552
   3801c:	add	x15, x19, x0
   38020:	ldrb	w2, [x19]
   38024:	add	x19, x19, #0x10
   38028:	ldurb	w1, [x19, #-15]
   3802c:	ldurb	w0, [x19, #-14]
   38030:	add	w3, w2, w3
   38034:	add	w1, w1, w3
   38038:	ldurb	w2, [x19, #-13]
   3803c:	add	w0, w0, w1
   38040:	ldurb	w10, [x19, #-12]
   38044:	ldurb	w22, [x19, #-11]
   38048:	add	w2, w2, w0
   3804c:	add	w10, w10, w2
   38050:	ldurb	w9, [x19, #-10]
   38054:	ldurb	w21, [x19, #-9]
   38058:	add	w22, w22, w10
   3805c:	ldurb	w17, [x19, #-8]
   38060:	add	w9, w9, w22
   38064:	ldurb	w18, [x19, #-7]
   38068:	add	w21, w21, w9
   3806c:	ldurb	w20, [x19, #-6]
   38070:	add	w17, w17, w21
   38074:	ldurb	w16, [x19, #-5]
   38078:	add	w18, w18, w17
   3807c:	ldurb	w8, [x19, #-4]
   38080:	add	w3, w3, w1
   38084:	ldurb	w6, [x19, #-2]
   38088:	add	w2, w0, w2
   3808c:	ldurb	w1, [x19, #-3]
   38090:	add	w20, w20, w18
   38094:	add	w2, w2, w3
   38098:	add	w16, w16, w20
   3809c:	add	w3, w10, w22
   380a0:	add	w9, w9, w21
   380a4:	add	w2, w2, w3
   380a8:	add	w8, w8, w16
   380ac:	add	w2, w2, w9
   380b0:	ldurb	w3, [x19, #-1]
   380b4:	add	w9, w1, w8
   380b8:	add	w0, w17, w18
   380bc:	add	w6, w6, w9
   380c0:	add	w0, w2, w0
   380c4:	add	w10, w20, w16
   380c8:	add	w8, w8, w9
   380cc:	add	w0, w0, w10
   380d0:	add	w3, w3, w6
   380d4:	add	w0, w0, w8
   380d8:	add	w6, w6, w3
   380dc:	add	w0, w0, w6
   380e0:	cmp	x19, x15
   380e4:	add	w5, w5, w0
   380e8:	b.ne	38020 <__asan_internal_strnlen@@Base+0x14a8>  // b.any
   380ec:	umull	x1, w3, w13
   380f0:	sub	x24, x24, x14
   380f4:	umull	x0, w5, w13
   380f8:	cmp	x24, x11
   380fc:	lsr	x1, x1, #47
   38100:	lsr	x0, x0, #47
   38104:	msub	w3, w1, w12, w3
   38108:	msub	w5, w0, w12, w5
   3810c:	b.hi	38018 <__asan_internal_strnlen@@Base+0x14a0>  // b.pmore
   38110:	cmp	x24, #0xf
   38114:	b.ls	381f8 <__asan_internal_strnlen@@Base+0x1680>  // b.plast
   38118:	sub	x13, x24, #0x10
   3811c:	and	x13, x13, #0xfffffffffffffff0
   38120:	add	x13, x13, #0x10
   38124:	add	x13, x19, x13
   38128:	ldrb	w1, [x19]
   3812c:	add	x19, x19, #0x10
   38130:	ldurb	w2, [x19, #-15]
   38134:	ldurb	w0, [x19, #-14]
   38138:	add	w3, w1, w3
   3813c:	add	w2, w2, w3
   38140:	ldurb	w1, [x19, #-13]
   38144:	add	w0, w0, w2
   38148:	ldurb	w12, [x19, #-12]
   3814c:	ldurb	w17, [x19, #-11]
   38150:	add	w1, w1, w0
   38154:	ldurb	w11, [x19, #-10]
   38158:	add	w12, w12, w1
   3815c:	ldurb	w16, [x19, #-9]
   38160:	add	w17, w17, w12
   38164:	ldurb	w10, [x19, #-8]
   38168:	add	w11, w11, w17
   3816c:	ldurb	w15, [x19, #-7]
   38170:	add	w16, w16, w11
   38174:	ldurb	w9, [x19, #-6]
   38178:	add	w10, w10, w16
   3817c:	ldurb	w14, [x19, #-5]
   38180:	add	w15, w15, w10
   38184:	ldurb	w8, [x19, #-4]
   38188:	add	w3, w3, w2
   3818c:	ldurb	w6, [x19, #-2]
   38190:	add	w1, w0, w1
   38194:	ldurb	w2, [x19, #-3]
   38198:	add	w9, w9, w15
   3819c:	add	w1, w1, w3
   381a0:	add	w14, w14, w9
   381a4:	add	w12, w12, w17
   381a8:	add	w0, w11, w16
   381ac:	add	w8, w8, w14
   381b0:	add	w1, w1, w12
   381b4:	add	w1, w1, w0
   381b8:	add	w11, w2, w8
   381bc:	ldurb	w3, [x19, #-1]
   381c0:	add	w0, w10, w15
   381c4:	add	w6, w6, w11
   381c8:	add	w0, w1, w0
   381cc:	add	w9, w9, w14
   381d0:	add	w8, w8, w11
   381d4:	add	w0, w0, w9
   381d8:	add	w3, w3, w6
   381dc:	add	w0, w0, w8
   381e0:	add	w6, w6, w3
   381e4:	add	w0, w0, w6
   381e8:	cmp	x19, x13
   381ec:	add	w5, w5, w0
   381f0:	b.ne	38128 <__asan_internal_strnlen@@Base+0x15b0>  // b.any
   381f4:	and	x24, x24, #0xf
   381f8:	cbz	x24, 38224 <__asan_internal_strnlen@@Base+0x16ac>
   381fc:	mov	w0, #0x1                   	// #1
   38200:	sub	w0, w0, w19
   38204:	nop
   38208:	ldrb	w1, [x19]
   3820c:	add	w2, w0, w19
   38210:	cmp	x2, x24
   38214:	add	x19, x19, #0x1
   38218:	add	w3, w3, w1
   3821c:	add	w5, w5, w3
   38220:	b.cc	38208 <__asan_internal_strnlen@@Base+0x1690>  // b.lo, b.ul, b.last
   38224:	mov	w0, #0x8071                	// #32881
   38228:	mov	w2, #0xfff1                	// #65521
   3822c:	movk	w0, #0x8007, lsl #16
   38230:	ldp	x19, x20, [sp, #16]
   38234:	umull	x1, w5, w0
   38238:	umull	x0, w3, w0
   3823c:	ldp	x21, x22, [sp, #32]
   38240:	lsr	x1, x1, #47
   38244:	lsr	x0, x0, #47
   38248:	ldp	x23, x24, [sp, #48]
   3824c:	msub	w5, w1, w2, w5
   38250:	msub	w3, w0, w2, w3
   38254:	ldp	x29, x30, [sp], #224
   38258:	add	w3, w3, w5, lsl #16
   3825c:	cmp	w3, w7
   38260:	cset	w0, eq  // eq = none
   38264:	ret
   38268:	mov	w7, w0
   3826c:	b	37898 <__asan_internal_strnlen@@Base+0xd20>
   38270:	sub	w7, w0, #0x3
   38274:	mov	x6, x1
   38278:	b	37898 <__asan_internal_strnlen@@Base+0xd20>
   3827c:	sub	x0, x21, x5
   38280:	cmp	x0, #0x4
   38284:	ldp	x25, x26, [sp, #64]
   38288:	b.gt	37530 <__asan_internal_strnlen@@Base+0x9b8>
   3828c:	b	37fcc <__asan_internal_strnlen@@Base+0x1454>
   38290:	sub	w7, w0, #0x6
   38294:	mov	x6, x1
   38298:	b	37898 <__asan_internal_strnlen@@Base+0xd20>
   3829c:	sub	w7, w0, #0x9
   382a0:	mov	x6, x1
   382a4:	b	37898 <__asan_internal_strnlen@@Base+0xd20>
   382a8:	mov	w3, #0x0                   	// #0
   382ac:	b	37b08 <__asan_internal_strnlen@@Base+0xf90>
   382b0:	sub	w7, w0, #0xc
   382b4:	mov	x6, x1
   382b8:	b	37898 <__asan_internal_strnlen@@Base+0xd20>
   382bc:	mov	w3, w7
   382c0:	ldp	x27, x28, [sp, #80]
   382c4:	b	37b08 <__asan_internal_strnlen@@Base+0xf90>
   382c8:	stp	x29, x30, [sp, #-80]!
   382cc:	add	x8, x1, #0x4
   382d0:	mov	x29, sp
   382d4:	stp	x19, x20, [sp, #16]
   382d8:	add	x20, x1, #0xc
   382dc:	mov	x19, #0x0                   	// #0
   382e0:	stp	x21, x22, [sp, #32]
   382e4:	mov	x22, x6
   382e8:	stp	x23, x24, [sp, #48]
   382ec:	mov	x24, x2
   382f0:	mov	x23, x7
   382f4:	mov	x2, x4
   382f8:	str	x25, [sp, #64]
   382fc:	mov	x25, x3
   38300:	mov	x3, x5
   38304:	nop
   38308:	ldrb	w1, [x8], #1
   3830c:	cmp	x20, x8
   38310:	orr	x19, x1, x19, lsl #8
   38314:	b.ne	38308 <__asan_internal_strnlen@@Base+0x1790>  // b.any
   38318:	ldr	x21, [x22]
   3831c:	cbz	x21, 38370 <__asan_internal_strnlen@@Base+0x17f8>
   38320:	ldr	x1, [x23]
   38324:	cmp	x19, x1
   38328:	b.hi	38370 <__asan_internal_strnlen@@Base+0x17f8>  // b.pmore
   3832c:	sub	x1, x24, #0xc
   38330:	mov	x2, x25
   38334:	mov	x0, x20
   38338:	mov	x4, x19
   3833c:	mov	x3, x21
   38340:	bl	374d8 <__asan_internal_strnlen@@Base+0x960>
   38344:	mov	w1, w0
   38348:	mov	w0, #0x1                   	// #1
   3834c:	cbz	w1, 38358 <__asan_internal_strnlen@@Base+0x17e0>
   38350:	str	x21, [x22]
   38354:	str	x19, [x23]
   38358:	ldp	x19, x20, [sp, #16]
   3835c:	ldp	x21, x22, [sp, #32]
   38360:	ldp	x23, x24, [sp, #48]
   38364:	ldr	x25, [sp, #64]
   38368:	ldp	x29, x30, [sp], #80
   3836c:	ret
   38370:	mov	x1, x19
   38374:	bl	68c0 <__asan_backtrace_alloc@plt>
   38378:	mov	x21, x0
   3837c:	cbnz	x0, 3832c <__asan_internal_strnlen@@Base+0x17b4>
   38380:	mov	w0, #0x0                   	// #0
   38384:	b	38358 <__asan_internal_strnlen@@Base+0x17e0>
   38388:	sub	sp, sp, #0x4a0
   3838c:	stp	x29, x30, [sp, #80]
   38390:	add	x29, sp, #0x50
   38394:	stp	x21, x22, [sp, #112]
   38398:	mov	x21, x0
   3839c:	ldr	w0, [sp, #1208]
   383a0:	stp	x19, x20, [sp, #96]
   383a4:	mov	w22, w2
   383a8:	mov	x19, x4
   383ac:	stp	x23, x24, [sp, #128]
   383b0:	mov	x20, x5
   383b4:	mov	x23, x7
   383b8:	stp	x25, x26, [sp, #144]
   383bc:	stp	x27, x28, [sp, #160]
   383c0:	mov	x28, x1
   383c4:	stp	x3, x6, [sp, #176]
   383c8:	cbnz	w0, 383d8 <__asan_internal_strnlen@@Base+0x1860>
   383cc:	ldr	x0, [sp, #1184]
   383d0:	str	wzr, [x7]
   383d4:	str	wzr, [x0]
   383d8:	add	x24, sp, #0x198
   383dc:	mov	x5, x20
   383e0:	mov	x6, x24
   383e4:	mov	x4, x19
   383e8:	mov	w1, w22
   383ec:	mov	x0, x21
   383f0:	mov	x3, #0x40                  	// #64
   383f4:	mov	x2, #0x0                   	// #0
   383f8:	bl	6ae0 <__asan_backtrace_get_view@plt>
   383fc:	cbnz	w0, 38464 <__asan_internal_strnlen@@Base+0x18ec>
   38400:	mov	w24, #0x0                   	// #0
   38404:	mov	x25, #0x0                   	// #0
   38408:	cbnz	w24, 384bc <__asan_internal_strnlen@@Base+0x1944>
   3840c:	cbz	x25, 38424 <__asan_internal_strnlen@@Base+0x18ac>
   38410:	add	x1, x25, #0x18
   38414:	mov	x0, x21
   38418:	mov	x3, x20
   3841c:	mov	x2, x19
   38420:	bl	6760 <__asan_backtrace_release_view@plt>
   38424:	cmn	w22, #0x1
   38428:	mov	w23, #0x0                   	// #0
   3842c:	b.eq	38440 <__asan_internal_strnlen@@Base+0x18c8>  // b.none
   38430:	mov	x2, x20
   38434:	mov	x1, x19
   38438:	mov	w0, w22
   3843c:	bl	6c90 <__asan_backtrace_close@plt>
   38440:	mov	w0, w23
   38444:	ldp	x29, x30, [sp, #80]
   38448:	ldp	x19, x20, [sp, #96]
   3844c:	ldp	x21, x22, [sp, #112]
   38450:	ldp	x23, x24, [sp, #128]
   38454:	ldp	x25, x26, [sp, #144]
   38458:	ldp	x27, x28, [sp, #160]
   3845c:	add	sp, sp, #0x4a0
   38460:	ret
   38464:	ldr	x1, [sp, #408]
   38468:	mov	x2, #0x40                  	// #64
   3846c:	add	x0, sp, #0x2a0
   38470:	bl	67d0 <__asan_internal_memcpy@plt>
   38474:	mov	x1, x24
   38478:	mov	x0, x21
   3847c:	mov	x3, x20
   38480:	mov	x2, x19
   38484:	bl	6760 <__asan_backtrace_release_view@plt>
   38488:	ldr	w1, [sp, #672]
   3848c:	mov	w0, #0x457f                	// #17791
   38490:	movk	w0, #0x464c, lsl #16
   38494:	cmp	w1, w0
   38498:	b.eq	384d4 <__asan_internal_strnlen@@Base+0x195c>  // b.none
   3849c:	mov	x0, x20
   384a0:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   384a4:	mov	w2, #0x0                   	// #0
   384a8:	add	x1, x1, #0x2b8
   384ac:	mov	w24, #0x0                   	// #0
   384b0:	mov	x25, #0x0                   	// #0
   384b4:	blr	x19
   384b8:	b	38408 <__asan_internal_strnlen@@Base+0x1890>
   384bc:	mov	x3, x20
   384c0:	mov	x2, x19
   384c4:	add	x1, sp, #0x2e0
   384c8:	mov	x0, x21
   384cc:	bl	6760 <__asan_backtrace_release_view@plt>
   384d0:	b	3840c <__asan_internal_strnlen@@Base+0x1894>
   384d4:	ldrb	w0, [sp, #678]
   384d8:	cmp	w0, #0x1
   384dc:	b.ne	3850c <__asan_internal_strnlen@@Base+0x1994>  // b.any
   384e0:	ldrb	w0, [sp, #676]
   384e4:	cmp	w0, #0x2
   384e8:	b.eq	3852c <__asan_internal_strnlen@@Base+0x19b4>  // b.none
   384ec:	mov	x0, x20
   384f0:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   384f4:	mov	w2, #0x0                   	// #0
   384f8:	add	x1, x1, #0x308
   384fc:	mov	w24, #0x0                   	// #0
   38500:	mov	x25, #0x0                   	// #0
   38504:	blr	x19
   38508:	b	38408 <__asan_internal_strnlen@@Base+0x1890>
   3850c:	mov	x0, x20
   38510:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   38514:	mov	w2, #0x0                   	// #0
   38518:	add	x1, x1, #0x2d8
   3851c:	mov	w24, #0x0                   	// #0
   38520:	mov	x25, #0x0                   	// #0
   38524:	blr	x19
   38528:	b	38408 <__asan_internal_strnlen@@Base+0x1890>
   3852c:	ldrb	w0, [sp, #677]
   38530:	sub	w0, w0, #0x1
   38534:	and	w0, w0, #0xff
   38538:	cmp	w0, #0x1
   3853c:	b.hi	3862c <__asan_internal_strnlen@@Base+0x1ab4>  // b.pmore
   38540:	ldr	w0, [sp, #1200]
   38544:	cbz	w0, 38554 <__asan_internal_strnlen@@Base+0x19dc>
   38548:	ldrh	w0, [sp, #688]
   3854c:	cmp	w0, #0x3
   38550:	b.eq	39600 <__asan_internal_strnlen@@Base+0x2a88>  // b.none
   38554:	ldrh	w0, [sp, #732]
   38558:	mov	w27, #0xffff                	// #65535
   3855c:	ldrh	w25, [sp, #734]
   38560:	ldr	x26, [sp, #712]
   38564:	cmp	w0, #0x0
   38568:	str	w0, [sp, #232]
   3856c:	ccmp	w25, w27, #0x4, ne  // ne = any
   38570:	ccmp	x26, #0x0, #0x4, eq  // eq = none
   38574:	b.ne	38ac0 <__asan_internal_strnlen@@Base+0x1f48>  // b.any
   38578:	ldr	w24, [sp, #232]
   3857c:	add	x0, sp, #0x1b0
   38580:	mov	x6, x0
   38584:	add	x2, x26, #0x40
   38588:	sub	w3, w24, #0x1
   3858c:	mov	x5, x20
   38590:	mov	x4, x19
   38594:	mov	w1, w22
   38598:	lsl	x3, x3, #6
   3859c:	str	x0, [sp, #216]
   385a0:	mov	x0, x21
   385a4:	bl	6ae0 <__asan_backtrace_get_view@plt>
   385a8:	cbz	w0, 38400 <__asan_internal_strnlen@@Base+0x1888>
   385ac:	ldr	x0, [sp, #432]
   385b0:	sub	w3, w25, #0x1
   385b4:	add	x1, sp, #0x1c8
   385b8:	mov	x5, x20
   385bc:	mov	x6, x1
   385c0:	mov	x4, x19
   385c4:	add	x3, x0, x3, lsl #6
   385c8:	str	x1, [sp, #224]
   385cc:	mov	w1, w22
   385d0:	str	x0, [sp, #296]
   385d4:	mov	x0, x21
   385d8:	ldp	x2, x3, [x3, #24]
   385dc:	str	x3, [sp, #208]
   385e0:	bl	6ae0 <__asan_backtrace_get_view@plt>
   385e4:	cbnz	w0, 3864c <__asan_internal_strnlen@@Base+0x1ad4>
   385e8:	ldr	x1, [sp, #216]
   385ec:	mov	x3, x20
   385f0:	mov	x2, x19
   385f4:	mov	x0, x21
   385f8:	mov	w24, #0x0                   	// #0
   385fc:	mov	x25, #0x0                   	// #0
   38600:	bl	6760 <__asan_backtrace_release_view@plt>
   38604:	str	wzr, [sp, #200]
   38608:	ldr	w0, [sp, #200]
   3860c:	cbz	w0, 38408 <__asan_internal_strnlen@@Base+0x1890>
   38610:	mov	x3, x20
   38614:	mov	x2, x19
   38618:	add	x1, sp, #0x210
   3861c:	mov	x0, x21
   38620:	bl	6760 <__asan_backtrace_release_view@plt>
   38624:	cbz	w24, 3840c <__asan_internal_strnlen@@Base+0x1894>
   38628:	b	384bc <__asan_internal_strnlen@@Base+0x1944>
   3862c:	mov	x0, x20
   38630:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   38634:	mov	w2, #0x0                   	// #0
   38638:	add	x1, x1, #0x330
   3863c:	mov	w24, #0x0                   	// #0
   38640:	mov	x25, #0x0                   	// #0
   38644:	blr	x19
   38648:	b	38408 <__asan_internal_strnlen@@Base+0x1890>
   3864c:	ldr	x3, [sp, #456]
   38650:	add	x0, sp, #0x360
   38654:	mov	x2, #0x140                 	// #320
   38658:	mov	w1, #0x0                   	// #0
   3865c:	str	x0, [sp, #240]
   38660:	str	x3, [sp, #256]
   38664:	bl	6860 <__asan_internal_memset@plt>
   38668:	cmp	w24, #0x1
   3866c:	b.ls	39608 <__asan_internal_strnlen@@Base+0x2a90>  // b.plast
   38670:	add	x0, sp, #0x270
   38674:	mov	x25, #0x0                   	// #0
   38678:	mov	x1, x0
   3867c:	adrp	x0, 5f000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   38680:	add	x0, x0, #0xa80
   38684:	stp	x28, x23, [sp, #344]
   38688:	ldr	w23, [sp, #1208]
   3868c:	str	x1, [sp, #360]
   38690:	add	x1, x1, #0x18
   38694:	ldr	x28, [sp, #208]
   38698:	mov	w2, #0x0                   	// #0
   3869c:	ldr	x27, [sp, #296]
   386a0:	stp	x19, x20, [sp, #272]
   386a4:	mov	x20, x0
   386a8:	stp	x25, xzr, [sp, #304]
   386ac:	mov	w25, w2
   386b0:	mov	w26, #0x0                   	// #0
   386b4:	str	x1, [sp, #368]
   386b8:	mov	w1, #0x1                   	// #1
   386bc:	ldr	x24, [sp, #256]
   386c0:	str	x21, [sp, #256]
   386c4:	mov	w21, w1
   386c8:	str	wzr, [sp, #192]
   386cc:	str	wzr, [sp, #200]
   386d0:	str	wzr, [sp, #248]
   386d4:	str	w22, [sp, #264]
   386d8:	str	xzr, [sp, #288]
   386dc:	str	wzr, [sp, #320]
   386e0:	str	wzr, [sp, #324]
   386e4:	stp	xzr, xzr, [sp, #328]
   386e8:	str	wzr, [sp, #376]
   386ec:	nop
   386f0:	ldr	w0, [x27, #4]
   386f4:	cmp	w0, #0x2
   386f8:	b.eq	38950 <__asan_internal_strnlen@@Base+0x1dd8>  // b.none
   386fc:	cmp	w0, #0xb
   38700:	csel	w25, w25, w21, ne  // ne = any
   38704:	ldr	w19, [x27]
   38708:	cmp	x19, x28
   3870c:	b.cs	38b30 <__asan_internal_strnlen@@Base+0x1fb8>  // b.hs, b.nlast
   38710:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x8028>
   38714:	add	x19, x24, x19
   38718:	add	x1, x1, #0x258
   3871c:	mov	x22, #0x0                   	// #0
   38720:	b	38728 <__asan_internal_strnlen@@Base+0x1bb0>
   38724:	ldr	x1, [x20, x22, lsl #3]
   38728:	mov	x0, x19
   3872c:	bl	6b30 <__asan_internal_strcmp@plt>
   38730:	mov	w1, w22
   38734:	add	x22, x22, #0x1
   38738:	cbz	w0, 38920 <__asan_internal_strnlen@@Base+0x1da8>
   3873c:	cmp	x22, #0xa
   38740:	b.ne	38724 <__asan_internal_strnlen@@Base+0x1bac>  // b.any
   38744:	ldr	x0, [sp, #1216]
   38748:	eor	w22, w23, #0x1
   3874c:	and	w22, w22, #0x1
   38750:	cmp	x0, #0x0
   38754:	ccmp	w22, #0x0, #0x0, eq  // eq = none
   38758:	b.eq	38788 <__asan_internal_strnlen@@Base+0x1c10>  // b.none
   3875c:	ldr	w0, [sp, #200]
   38760:	cbz	w0, 38a34 <__asan_internal_strnlen@@Base+0x1ebc>
   38764:	ldr	w0, [sp, #192]
   38768:	orr	w0, w23, w0
   3876c:	cbnz	w0, 38788 <__asan_internal_strnlen@@Base+0x1c10>
   38770:	mov	x0, x19
   38774:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   38778:	add	x1, x1, #0x398
   3877c:	bl	6b30 <__asan_internal_strcmp@plt>
   38780:	str	wzr, [sp, #192]
   38784:	cbz	w0, 3889c <__asan_internal_strnlen@@Base+0x1d24>
   38788:	cbz	w26, 389c4 <__asan_internal_strnlen@@Base+0x1e4c>
   3878c:	ldrh	w0, [sp, #690]
   38790:	cmp	w0, #0x15
   38794:	b.eq	38958 <__asan_internal_strnlen@@Base+0x1de0>  // b.none
   38798:	ldr	w0, [sp, #232]
   3879c:	add	w21, w21, #0x1
   387a0:	add	x27, x27, #0x40
   387a4:	cmp	w0, w21
   387a8:	b.ne	386f0 <__asan_internal_strnlen@@Base+0x1b78>  // b.any
   387ac:	ldr	w0, [sp, #248]
   387b0:	mov	w2, w22
   387b4:	str	w26, [sp, #208]
   387b8:	cmp	w0, #0x0
   387bc:	ldr	w22, [sp, #264]
   387c0:	csel	w0, w0, w25, ne  // ne = any
   387c4:	cmp	w0, #0x0
   387c8:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   387cc:	ldr	x21, [sp, #256]
   387d0:	ldp	x19, x20, [sp, #272]
   387d4:	ldr	x25, [sp, #304]
   387d8:	ldp	x28, x23, [sp, #344]
   387dc:	b.eq	38cd0 <__asan_internal_strnlen@@Base+0x2158>  // b.none
   387e0:	sub	w27, w0, #0x1
   387e4:	ldr	x0, [sp, #296]
   387e8:	add	x27, x0, x27, lsl #6
   387ec:	ldr	w0, [sp, #232]
   387f0:	ldr	w7, [x27, #40]
   387f4:	cmp	w0, w7
   387f8:	b.hi	38be4 <__asan_internal_strnlen@@Base+0x206c>  // b.pmore
   387fc:	mov	x0, x20
   38800:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   38804:	mov	w2, #0x0                   	// #0
   38808:	add	x1, x1, #0x3c8
   3880c:	mov	w24, #0x0                   	// #0
   38810:	blr	x19
   38814:	str	wzr, [sp, #232]
   38818:	ldr	x1, [sp, #216]
   3881c:	mov	x3, x20
   38820:	mov	x2, x19
   38824:	mov	x0, x21
   38828:	bl	6760 <__asan_backtrace_release_view@plt>
   3882c:	ldr	x1, [sp, #224]
   38830:	mov	x0, x21
   38834:	mov	x3, x20
   38838:	mov	x2, x19
   3883c:	bl	6760 <__asan_backtrace_release_view@plt>
   38840:	ldr	w0, [sp, #232]
   38844:	cbz	w0, 3885c <__asan_internal_strnlen@@Base+0x1ce4>
   38848:	mov	x3, x20
   3884c:	mov	x2, x19
   38850:	add	x1, sp, #0x1e0
   38854:	mov	x0, x21
   38858:	bl	6760 <__asan_backtrace_release_view@plt>
   3885c:	cbnz	w24, 38904 <__asan_internal_strnlen@@Base+0x1d8c>
   38860:	ldr	w0, [sp, #192]
   38864:	cbz	w0, 3887c <__asan_internal_strnlen@@Base+0x1d04>
   38868:	mov	x3, x20
   3886c:	mov	x2, x19
   38870:	add	x1, sp, #0x228
   38874:	mov	x0, x21
   38878:	bl	6760 <__asan_backtrace_release_view@plt>
   3887c:	ldr	w0, [sp, #208]
   38880:	cbz	w0, 38608 <__asan_internal_strnlen@@Base+0x1a90>
   38884:	mov	x3, x20
   38888:	mov	x2, x19
   3888c:	add	x1, sp, #0x240
   38890:	mov	x0, x21
   38894:	bl	6760 <__asan_backtrace_release_view@plt>
   38898:	b	38608 <__asan_internal_strnlen@@Base+0x1a90>
   3889c:	ldp	x2, x3, [x27, #24]
   388a0:	add	x6, sp, #0x228
   388a4:	ldp	x4, x5, [sp, #272]
   388a8:	ldr	w1, [sp, #264]
   388ac:	ldr	x0, [sp, #256]
   388b0:	bl	6ae0 <__asan_backtrace_get_view@plt>
   388b4:	mov	w7, w0
   388b8:	cbz	w0, 390f8 <__asan_internal_strnlen@@Base+0x2580>
   388bc:	ldr	x1, [x27, #32]
   388c0:	mov	w0, #0x1                   	// #1
   388c4:	ldr	x2, [sp, #552]
   388c8:	str	w0, [sp, #192]
   388cc:	str	x2, [sp, #208]
   388d0:	mov	x0, x2
   388d4:	bl	6b50 <__asan_internal_strnlen@plt>
   388d8:	add	x0, x0, #0x3
   388dc:	ldr	x1, [x27, #32]
   388e0:	and	x0, x0, #0xfffffffffffffffc
   388e4:	add	x3, x0, #0x4
   388e8:	cmp	x3, x1
   388ec:	b.hi	38788 <__asan_internal_strnlen@@Base+0x1c10>  // b.pmore
   388f0:	ldr	x2, [sp, #208]
   388f4:	str	x2, [sp, #328]
   388f8:	ldr	w0, [x2, x0]
   388fc:	str	w0, [sp, #320]
   38900:	b	38788 <__asan_internal_strnlen@@Base+0x1c10>
   38904:	mov	w24, #0x0                   	// #0
   38908:	mov	x3, x20
   3890c:	mov	x2, x19
   38910:	add	x1, sp, #0x1f8
   38914:	mov	x0, x21
   38918:	bl	6760 <__asan_backtrace_release_view@plt>
   3891c:	b	38860 <__asan_internal_strnlen@@Base+0x1ce8>
   38920:	ldr	x4, [sp, #240]
   38924:	sbfiz	x1, x1, #5, #32
   38928:	ldr	x3, [x27, #24]
   3892c:	add	x0, sp, #0x368
   38930:	str	x3, [x4, x1]
   38934:	add	x2, sp, #0x378
   38938:	ldr	x3, [x27, #32]
   3893c:	str	x3, [x0, x1]
   38940:	ldr	x0, [x27, #8]
   38944:	ubfx	w0, w0, #11, #1
   38948:	str	w0, [x2, x1]
   3894c:	b	38744 <__asan_internal_strnlen@@Base+0x1bcc>
   38950:	str	w21, [sp, #248]
   38954:	b	38704 <__asan_internal_strnlen@@Base+0x1b8c>
   38958:	ldr	w0, [sp, #720]
   3895c:	tbnz	w0, #1, 38798 <__asan_internal_strnlen@@Base+0x1c20>
   38960:	ldr	w0, [x27, #4]
   38964:	cmp	w0, #0x1
   38968:	b.ne	38798 <__asan_internal_strnlen@@Base+0x1c20>  // b.any
   3896c:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   38970:	mov	x0, x19
   38974:	add	x1, x1, #0x3c0
   38978:	bl	6b30 <__asan_internal_strcmp@plt>
   3897c:	cbnz	w0, 38798 <__asan_internal_strnlen@@Base+0x1c20>
   38980:	ldp	x2, x3, [x27, #24]
   38984:	ldp	x4, x5, [sp, #272]
   38988:	ldr	w1, [sp, #264]
   3898c:	ldr	x0, [sp, #256]
   38990:	ldr	x6, [sp, #368]
   38994:	bl	6ae0 <__asan_backtrace_get_view@plt>
   38998:	mov	w7, w0
   3899c:	cbz	w0, 390f8 <__asan_internal_strnlen@@Base+0x2580>
   389a0:	ldr	x0, [x27, #16]
   389a4:	str	x0, [sp, #624]
   389a8:	ldr	x0, [sp, #360]
   389ac:	str	x0, [sp, #304]
   389b0:	ldr	x0, [x27, #32]
   389b4:	str	x0, [sp, #640]
   389b8:	ldr	x0, [sp, #648]
   389bc:	str	x0, [sp, #632]
   389c0:	b	38798 <__asan_internal_strnlen@@Base+0x1c20>
   389c4:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   389c8:	mov	x0, x19
   389cc:	add	x1, x1, #0x3a8
   389d0:	bl	6b30 <__asan_internal_strcmp@plt>
   389d4:	cbnz	w0, 3878c <__asan_internal_strnlen@@Base+0x1c14>
   389d8:	ldp	x2, x3, [x27, #24]
   389dc:	add	x6, sp, #0x240
   389e0:	ldp	x4, x5, [sp, #272]
   389e4:	ldr	w1, [sp, #264]
   389e8:	ldr	x0, [sp, #256]
   389ec:	bl	6ae0 <__asan_backtrace_get_view@plt>
   389f0:	mov	w7, w0
   389f4:	cbz	w0, 390f8 <__asan_internal_strnlen@@Base+0x2580>
   389f8:	ldr	x1, [x27, #32]
   389fc:	mov	w26, #0x1                   	// #1
   38a00:	ldr	x0, [sp, #576]
   38a04:	str	x0, [sp, #288]
   38a08:	bl	6b50 <__asan_internal_strnlen@plt>
   38a0c:	ldr	x1, [x27, #32]
   38a10:	cmp	x1, x0
   38a14:	b.ls	3878c <__asan_internal_strnlen@@Base+0x1c14>  // b.plast
   38a18:	add	x0, x0, #0x1
   38a1c:	sub	w2, w1, w0
   38a20:	str	w2, [sp, #324]
   38a24:	ldr	x1, [sp, #288]
   38a28:	add	x0, x1, x0
   38a2c:	str	x0, [sp, #312]
   38a30:	b	3878c <__asan_internal_strnlen@@Base+0x1c14>
   38a34:	mov	x0, x19
   38a38:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   38a3c:	add	x1, x1, #0x378
   38a40:	bl	6b30 <__asan_internal_strcmp@plt>
   38a44:	mov	w7, w0
   38a48:	cbnz	w0, 38764 <__asan_internal_strnlen@@Base+0x1bec>
   38a4c:	ldp	x2, x3, [x27, #24]
   38a50:	add	x6, sp, #0x210
   38a54:	ldp	x4, x5, [sp, #272]
   38a58:	str	w7, [sp, #208]
   38a5c:	ldr	w1, [sp, #264]
   38a60:	ldr	x0, [sp, #256]
   38a64:	bl	6ae0 <__asan_backtrace_get_view@plt>
   38a68:	cbz	w0, 39340 <__asan_internal_strnlen@@Base+0x27c8>
   38a6c:	ldr	x3, [sp, #528]
   38a70:	ldr	w7, [sp, #208]
   38a74:	ldr	w0, [x3, #8]
   38a78:	cmp	w0, #0x3
   38a7c:	b.eq	38b78 <__asan_internal_strnlen@@Base+0x2000>  // b.none
   38a80:	ldr	w0, [sp, #1224]
   38a84:	cbz	w0, 38ab4 <__asan_internal_strnlen@@Base+0x1f3c>
   38a88:	ldr	w0, [sp, #376]
   38a8c:	ldr	w1, [sp, #1224]
   38a90:	cmp	w0, w1
   38a94:	b.ne	39688 <__asan_internal_strnlen@@Base+0x2b10>  // b.any
   38a98:	mov	w2, w0
   38a9c:	str	w7, [sp, #200]
   38aa0:	ldr	x0, [sp, #336]
   38aa4:	ldr	x1, [sp, #1216]
   38aa8:	bl	6c20 <__asan_internal_memcmp@plt>
   38aac:	ldr	w7, [sp, #200]
   38ab0:	cbnz	w0, 39688 <__asan_internal_strnlen@@Base+0x2b10>
   38ab4:	mov	w0, #0x1                   	// #1
   38ab8:	str	w0, [sp, #200]
   38abc:	b	38764 <__asan_internal_strnlen@@Base+0x1bec>
   38ac0:	add	x0, sp, #0x360
   38ac4:	mov	x5, x20
   38ac8:	mov	x6, x0
   38acc:	mov	x4, x19
   38ad0:	mov	x2, x26
   38ad4:	mov	w1, w22
   38ad8:	mov	x3, #0x8                   	// #8
   38adc:	str	x0, [sp, #240]
   38ae0:	mov	x0, x21
   38ae4:	bl	6ae0 <__asan_backtrace_get_view@plt>
   38ae8:	mov	w24, w0
   38aec:	cbz	w0, 38404 <__asan_internal_strnlen@@Base+0x188c>
   38af0:	ldr	w1, [sp, #232]
   38af4:	ldr	x0, [sp, #864]
   38af8:	cbz	w1, 38b64 <__asan_internal_strnlen@@Base+0x1fec>
   38afc:	ldr	w25, [x0, #40]
   38b00:	mov	w1, #0xffff                	// #65535
   38b04:	ldr	w0, [sp, #232]
   38b08:	cmp	w0, w25
   38b0c:	sub	w0, w25, #0x100
   38b10:	ccmp	w25, w1, #0x0, ls  // ls = plast
   38b14:	csel	w25, w0, w25, hi  // hi = pmore
   38b18:	ldr	x1, [sp, #240]
   38b1c:	mov	x3, x20
   38b20:	mov	x2, x19
   38b24:	mov	x0, x21
   38b28:	bl	6760 <__asan_backtrace_release_view@plt>
   38b2c:	b	38578 <__asan_internal_strnlen@@Base+0x1a00>
   38b30:	ldp	x19, x20, [sp, #272]
   38b34:	str	w26, [sp, #208]
   38b38:	ldr	w22, [sp, #264]
   38b3c:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   38b40:	mov	w2, #0x0                   	// #0
   38b44:	add	x1, x1, #0x358
   38b48:	mov	w24, #0x0                   	// #0
   38b4c:	ldr	x21, [sp, #256]
   38b50:	mov	x0, x20
   38b54:	ldr	x25, [sp, #304]
   38b58:	blr	x19
   38b5c:	str	wzr, [sp, #232]
   38b60:	b	38818 <__asan_internal_strnlen@@Base+0x1ca0>
   38b64:	ldr	w1, [x0, #32]
   38b68:	cmp	w25, w27
   38b6c:	str	w1, [sp, #232]
   38b70:	b.ne	38b18 <__asan_internal_strnlen@@Base+0x1fa0>  // b.any
   38b74:	b	38afc <__asan_internal_strnlen@@Base+0x1f84>
   38b78:	ldr	w0, [x3]
   38b7c:	cmp	w0, #0x4
   38b80:	b.ne	38a80 <__asan_internal_strnlen@@Base+0x1f08>  // b.any
   38b84:	add	x4, x3, #0xc
   38b88:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   38b8c:	mov	x0, x4
   38b90:	add	x1, x1, #0x390
   38b94:	mov	x2, #0x4                   	// #4
   38b98:	stp	x4, x3, [sp, #200]
   38b9c:	str	w7, [sp, #380]
   38ba0:	bl	6b70 <__asan_internal_strncmp@plt>
   38ba4:	ldr	w7, [sp, #380]
   38ba8:	cbnz	w0, 38a80 <__asan_internal_strnlen@@Base+0x1f08>
   38bac:	ldr	x3, [sp, #208]
   38bb0:	ldp	w0, w2, [x3]
   38bb4:	ldr	x3, [x27, #32]
   38bb8:	add	w0, w0, #0x3
   38bbc:	and	w0, w0, #0xfffffffc
   38bc0:	add	w1, w2, #0xc
   38bc4:	add	w1, w1, w0
   38bc8:	cmp	x3, x1
   38bcc:	b.hi	38a80 <__asan_internal_strnlen@@Base+0x1f08>  // b.pmore
   38bd0:	ldr	x4, [sp, #200]
   38bd4:	str	w2, [sp, #376]
   38bd8:	add	x0, x4, w0, uxtw
   38bdc:	str	x0, [sp, #336]
   38be0:	b	38a80 <__asan_internal_strnlen@@Base+0x1f08>
   38be4:	ldp	x2, x3, [x27, #24]
   38be8:	add	x26, sp, #0x1e0
   38bec:	mov	x6, x26
   38bf0:	mov	x5, x20
   38bf4:	mov	x4, x19
   38bf8:	mov	w1, w22
   38bfc:	mov	x0, x21
   38c00:	str	w7, [sp, #248]
   38c04:	mov	w24, #0x0                   	// #0
   38c08:	bl	6ae0 <__asan_backtrace_get_view@plt>
   38c0c:	str	w0, [sp, #232]
   38c10:	cbz	w0, 38818 <__asan_internal_strnlen@@Base+0x1ca0>
   38c14:	ldr	w7, [sp, #248]
   38c18:	add	x6, sp, #0x1f8
   38c1c:	ldr	x0, [sp, #296]
   38c20:	sub	w7, w7, #0x1
   38c24:	mov	x5, x20
   38c28:	mov	x4, x19
   38c2c:	mov	w1, w22
   38c30:	add	x7, x0, x7, lsl #6
   38c34:	mov	x0, x21
   38c38:	str	x7, [sp, #232]
   38c3c:	ldp	x2, x3, [x7, #24]
   38c40:	bl	6ae0 <__asan_backtrace_get_view@plt>
   38c44:	mov	w24, w0
   38c48:	cbz	w0, 391f0 <__asan_internal_strnlen@@Base+0x2678>
   38c4c:	mov	x3, x20
   38c50:	mov	x2, x19
   38c54:	mov	x0, x21
   38c58:	mov	x1, #0x18                  	// #24
   38c5c:	bl	68c0 <__asan_backtrace_alloc@plt>
   38c60:	mov	x24, x0
   38c64:	cbz	x0, 396f8 <__asan_internal_strnlen@@Base+0x2b80>
   38c68:	ldr	x5, [x27, #32]
   38c6c:	mov	x0, #0x18                  	// #24
   38c70:	ldr	x7, [sp, #232]
   38c74:	cmp	x5, #0x17
   38c78:	udiv	x5, x5, x0
   38c7c:	ldr	x8, [sp, #480]
   38c80:	ldr	x7, [x7, #32]
   38c84:	ldr	x13, [sp, #504]
   38c88:	b.ls	396d4 <__asan_internal_strnlen@@Base+0x2b5c>  // b.plast
   38c8c:	mov	x1, x8
   38c90:	mov	x2, #0x0                   	// #0
   38c94:	mov	x4, #0x0                   	// #0
   38c98:	b	38ca8 <__asan_internal_strnlen@@Base+0x2130>
   38c9c:	add	x1, x1, #0x18
   38ca0:	cmp	x5, x2
   38ca4:	b.ls	391fc <__asan_internal_strnlen@@Base+0x2684>  // b.plast
   38ca8:	ldrb	w0, [x1, #4]
   38cac:	add	x2, x2, #0x1
   38cb0:	and	w0, w0, #0xf
   38cb4:	sub	w0, w0, #0x1
   38cb8:	cmp	w0, #0x1
   38cbc:	b.hi	38c9c <__asan_internal_strnlen@@Base+0x2124>  // b.pmore
   38cc0:	ldrh	w0, [x1, #6]
   38cc4:	cbz	w0, 38c9c <__asan_internal_strnlen@@Base+0x2124>
   38cc8:	add	x4, x4, #0x1
   38ccc:	b	38c9c <__asan_internal_strnlen@@Base+0x2124>
   38cd0:	str	wzr, [sp, #232]
   38cd4:	ldr	x1, [sp, #216]
   38cd8:	mov	x3, x20
   38cdc:	mov	x2, x19
   38ce0:	mov	x0, x21
   38ce4:	bl	6760 <__asan_backtrace_release_view@plt>
   38ce8:	ldr	x1, [sp, #224]
   38cec:	mov	x0, x21
   38cf0:	mov	x3, x20
   38cf4:	mov	x2, x19
   38cf8:	bl	6760 <__asan_backtrace_release_view@plt>
   38cfc:	ldr	x0, [sp, #336]
   38d00:	cbz	x0, 38dd4 <__asan_internal_strnlen@@Base+0x225c>
   38d04:	adrp	x4, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   38d08:	add	x4, x4, #0x420
   38d0c:	mov	x0, x4
   38d10:	str	x4, [sp, #248]
   38d14:	bl	67e0 <__asan_internal_strlen@plt>
   38d18:	ldr	w27, [sp, #376]
   38d1c:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   38d20:	mov	x24, x0
   38d24:	add	x0, x1, #0x440
   38d28:	bl	67e0 <__asan_internal_strlen@plt>
   38d2c:	mov	x2, x0
   38d30:	add	x1, x27, #0x1
   38d34:	add	x26, x24, x0
   38d38:	mov	x3, x20
   38d3c:	mov	x0, x21
   38d40:	add	x1, x26, x1, lsl #1
   38d44:	stp	x2, x1, [sp, #216]
   38d48:	mov	x2, x19
   38d4c:	bl	68c0 <__asan_backtrace_alloc@plt>
   38d50:	mov	x26, x0
   38d54:	cbz	x0, 38dd4 <__asan_internal_strnlen@@Base+0x225c>
   38d58:	ldr	x4, [sp, #248]
   38d5c:	mov	x2, x24
   38d60:	add	x24, x0, x24
   38d64:	mov	x1, x4
   38d68:	bl	67d0 <__asan_internal_memcpy@plt>
   38d6c:	cbz	x27, 39088 <__asan_internal_strnlen@@Base+0x2510>
   38d70:	mov	x2, #0x0                   	// #0
   38d74:	mov	w7, #0x2f                  	// #47
   38d78:	ldr	x5, [sp, #336]
   38d7c:	b	38d90 <__asan_internal_strnlen@@Base+0x2218>
   38d80:	add	x24, x24, #0x2
   38d84:	add	x2, x2, #0x1
   38d88:	cmp	x27, x2
   38d8c:	b.eq	39088 <__asan_internal_strnlen@@Base+0x2510>  // b.none
   38d90:	ldrb	w0, [x5, x2]
   38d94:	and	w1, w0, #0xf
   38d98:	lsr	w0, w0, #4
   38d9c:	add	w3, w1, #0x30
   38da0:	cmp	w0, #0x9
   38da4:	add	w4, w0, #0x30
   38da8:	add	w0, w0, #0x57
   38dac:	csel	w0, w0, w4, hi  // hi = pmore
   38db0:	cmp	w1, #0x9
   38db4:	add	w1, w1, #0x57
   38db8:	strb	w0, [x24]
   38dbc:	csel	w0, w1, w3, hi  // hi = pmore
   38dc0:	strb	w0, [x24, #1]
   38dc4:	cbnz	x2, 38d80 <__asan_internal_strnlen@@Base+0x2208>
   38dc8:	add	x24, x24, #0x3
   38dcc:	sturb	w7, [x24, #-1]
   38dd0:	b	38d84 <__asan_internal_strnlen@@Base+0x220c>
   38dd4:	ldr	w0, [sp, #200]
   38dd8:	cbnz	w0, 38e9c <__asan_internal_strnlen@@Base+0x2324>
   38ddc:	cbz	x25, 38df4 <__asan_internal_strnlen@@Base+0x227c>
   38de0:	add	x1, x25, #0x18
   38de4:	mov	x3, x20
   38de8:	mov	x2, x19
   38dec:	mov	x0, x21
   38df0:	bl	6760 <__asan_backtrace_release_view@plt>
   38df4:	ldr	x0, [sp, #328]
   38df8:	cbz	x0, 38f60 <__asan_internal_strnlen@@Base+0x23e8>
   38dfc:	mov	x2, x0
   38e00:	mov	x4, x20
   38e04:	mov	x3, x19
   38e08:	mov	x1, x28
   38e0c:	mov	x0, x21
   38e10:	bl	371d8 <__asan_internal_strnlen@@Base+0x660>
   38e14:	mov	w24, w0
   38e18:	tbnz	w0, #31, 38f60 <__asan_internal_strnlen@@Base+0x23e8>
   38e1c:	ldr	w0, [sp, #320]
   38e20:	cbnz	w0, 38eb4 <__asan_internal_strnlen@@Base+0x233c>
   38e24:	mov	x3, x20
   38e28:	mov	x2, x19
   38e2c:	add	x1, sp, #0x228
   38e30:	mov	x0, x21
   38e34:	bl	6760 <__asan_backtrace_release_view@plt>
   38e38:	ldr	w0, [sp, #208]
   38e3c:	cbnz	w0, 39384 <__asan_internal_strnlen@@Base+0x280c>
   38e40:	ldp	x3, x6, [sp, #176]
   38e44:	mov	w0, #0x1                   	// #1
   38e48:	ldr	x1, [sp, #1184]
   38e4c:	stp	x1, xzr, [sp]
   38e50:	mov	x7, x23
   38e54:	str	wzr, [sp, #16]
   38e58:	mov	w2, w24
   38e5c:	str	w0, [sp, #24]
   38e60:	mov	x5, x20
   38e64:	str	xzr, [sp, #32]
   38e68:	mov	x4, x19
   38e6c:	str	wzr, [sp, #40]
   38e70:	mov	x0, x21
   38e74:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x7028>
   38e78:	add	x1, x1, #0x5c8
   38e7c:	bl	38388 <__asan_internal_strnlen@@Base+0x1810>
   38e80:	mov	w23, w0
   38e84:	mov	x2, x20
   38e88:	mov	x1, x19
   38e8c:	tbz	w0, #31, 38438 <__asan_internal_strnlen@@Base+0x18c0>
   38e90:	mov	w0, w24
   38e94:	bl	6c90 <__asan_backtrace_close@plt>
   38e98:	b	38440 <__asan_internal_strnlen@@Base+0x18c8>
   38e9c:	mov	x3, x20
   38ea0:	mov	x2, x19
   38ea4:	add	x1, sp, #0x210
   38ea8:	mov	x0, x21
   38eac:	bl	6760 <__asan_backtrace_release_view@plt>
   38eb0:	b	38ddc <__asan_internal_strnlen@@Base+0x2264>
   38eb4:	add	x2, sp, #0x2e0
   38eb8:	mov	w1, w24
   38ebc:	mov	w0, #0x0                   	// #0
   38ec0:	bl	6660 <__fxstat@plt>
   38ec4:	tbnz	w0, #31, 39364 <__asan_internal_strnlen@@Base+0x27ec>
   38ec8:	ldr	x3, [sp, #784]
   38ecc:	add	x26, sp, #0x258
   38ed0:	mov	x6, x26
   38ed4:	mov	x5, x20
   38ed8:	mov	x4, x19
   38edc:	mov	w1, w24
   38ee0:	mov	x0, x21
   38ee4:	mov	x2, #0x0                   	// #0
   38ee8:	bl	6ae0 <__asan_backtrace_get_view@plt>
   38eec:	cbz	w0, 38f50 <__asan_internal_strnlen@@Base+0x23d8>
   38ef0:	ldr	x2, [sp, #600]
   38ef4:	adrp	x0, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   38ef8:	ldr	x3, [sp, #784]
   38efc:	add	x0, x0, #0x4b8
   38f00:	add	x0, x0, #0x4e0
   38f04:	mov	w25, #0xffffffff            	// #-1
   38f08:	add	x3, x2, x3
   38f0c:	b	38f24 <__asan_internal_strnlen@@Base+0x23ac>
   38f10:	ldrb	w1, [x2], #1
   38f14:	eor	w1, w1, w25
   38f18:	and	x1, x1, #0xff
   38f1c:	ldr	w1, [x0, x1, lsl #2]
   38f20:	eor	w25, w1, w25, lsr #8
   38f24:	cmp	x3, x2
   38f28:	b.hi	38f10 <__asan_internal_strnlen@@Base+0x2398>  // b.pmore
   38f2c:	mov	x0, x21
   38f30:	mov	x1, x26
   38f34:	mov	x3, x20
   38f38:	mov	x2, x19
   38f3c:	bl	6760 <__asan_backtrace_release_view@plt>
   38f40:	mvn	w25, w25
   38f44:	ldr	w0, [sp, #320]
   38f48:	cmp	w25, w0
   38f4c:	b.eq	38e24 <__asan_internal_strnlen@@Base+0x22ac>  // b.none
   38f50:	mov	w0, w24
   38f54:	mov	x2, x20
   38f58:	mov	x1, x19
   38f5c:	bl	6c90 <__asan_backtrace_close@plt>
   38f60:	ldr	w0, [sp, #192]
   38f64:	cbnz	w0, 391d0 <__asan_internal_strnlen@@Base+0x2658>
   38f68:	ldr	x0, [sp, #288]
   38f6c:	str	xzr, [sp, #392]
   38f70:	cbz	x0, 39118 <__asan_internal_strnlen@@Base+0x25a0>
   38f74:	mov	x2, x0
   38f78:	mov	x4, x20
   38f7c:	mov	x3, x19
   38f80:	mov	x1, x28
   38f84:	mov	x0, x21
   38f88:	bl	371d8 <__asan_internal_strnlen@@Base+0x660>
   38f8c:	mov	w24, w0
   38f90:	tbnz	w0, #31, 39118 <__asan_internal_strnlen@@Base+0x25a0>
   38f94:	mov	w8, #0x1                   	// #1
   38f98:	str	w8, [sp, #24]
   38f9c:	ldp	x3, x6, [sp, #176]
   38fa0:	mov	x7, x23
   38fa4:	ldr	x8, [sp, #312]
   38fa8:	str	x8, [sp, #32]
   38fac:	ldr	w8, [sp, #324]
   38fb0:	add	x0, sp, #0x188
   38fb4:	ldr	x1, [sp, #1184]
   38fb8:	mov	x5, x20
   38fbc:	mov	x4, x19
   38fc0:	stp	x1, x0, [sp]
   38fc4:	mov	w2, w24
   38fc8:	str	wzr, [sp, #16]
   38fcc:	mov	x1, x28
   38fd0:	str	w8, [sp, #40]
   38fd4:	mov	x0, x21
   38fd8:	bl	38388 <__asan_internal_strnlen@@Base+0x1810>
   38fdc:	mov	w23, w0
   38fe0:	mov	x3, x20
   38fe4:	mov	x2, x19
   38fe8:	add	x1, sp, #0x240
   38fec:	mov	x0, x21
   38ff0:	bl	6760 <__asan_backtrace_release_view@plt>
   38ff4:	tbnz	w23, #31, 396b0 <__asan_internal_strnlen@@Base+0x2b38>
   38ff8:	ldr	x0, [sp, #240]
   38ffc:	add	x4, sp, #0x4a0
   39000:	mov	x3, #0x0                   	// #0
   39004:	mov	x25, #0x0                   	// #0
   39008:	mov	x23, x0
   3900c:	b	39030 <__asan_internal_strnlen@@Base+0x24b8>
   39010:	cmp	x1, x25
   39014:	csel	x25, x25, x1, ge  // ge = tcont
   39018:	add	x1, x1, x2
   3901c:	cmp	x3, x1
   39020:	csel	x3, x3, x1, ge  // ge = tcont
   39024:	add	x0, x0, #0x20
   39028:	cmp	x4, x0
   3902c:	b.eq	39048 <__asan_internal_strnlen@@Base+0x24d0>  // b.none
   39030:	ldr	x2, [x0, #8]
   39034:	cbz	x2, 39024 <__asan_internal_strnlen@@Base+0x24ac>
   39038:	ldr	x1, [x0]
   3903c:	cbnz	x25, 39010 <__asan_internal_strnlen@@Base+0x2498>
   39040:	mov	x25, x1
   39044:	b	39018 <__asan_internal_strnlen@@Base+0x24a0>
   39048:	cmp	x25, #0x0
   3904c:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   39050:	b.ne	39138 <__asan_internal_strnlen@@Base+0x25c0>  // b.any
   39054:	mov	x2, x20
   39058:	mov	x1, x19
   3905c:	mov	w0, w22
   39060:	bl	6c90 <__asan_backtrace_close@plt>
   39064:	mov	w24, w0
   39068:	cbnz	w0, 391e8 <__asan_internal_strnlen@@Base+0x2670>
   3906c:	ldr	w0, [sp, #232]
   39070:	cbz	w0, 38404 <__asan_internal_strnlen@@Base+0x188c>
   39074:	mov	x25, #0x0                   	// #0
   39078:	str	wzr, [sp, #192]
   3907c:	str	wzr, [sp, #200]
   39080:	str	wzr, [sp, #208]
   39084:	b	38908 <__asan_internal_strnlen@@Base+0x1d90>
   39088:	ldr	x27, [sp, #216]
   3908c:	adrp	x0, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   39090:	add	x1, x0, #0x440
   39094:	mov	x0, x24
   39098:	mov	x2, x27
   3909c:	bl	67d0 <__asan_internal_memcpy@plt>
   390a0:	strb	wzr, [x24, x27]
   390a4:	add	x3, sp, #0x2e0
   390a8:	mov	x2, x20
   390ac:	mov	x1, x19
   390b0:	mov	x0, x26
   390b4:	bl	6d40 <__asan_backtrace_open@plt>
   390b8:	ldr	x2, [sp, #224]
   390bc:	mov	w24, w0
   390c0:	mov	x1, x26
   390c4:	mov	x4, x20
   390c8:	mov	x3, x19
   390cc:	mov	x0, x21
   390d0:	bl	6bc0 <__asan_backtrace_free@plt>
   390d4:	tbnz	w24, #31, 38dd4 <__asan_internal_strnlen@@Base+0x225c>
   390d8:	mov	x0, x21
   390dc:	mov	x3, x20
   390e0:	mov	x2, x19
   390e4:	add	x1, sp, #0x210
   390e8:	bl	6760 <__asan_backtrace_release_view@plt>
   390ec:	ldr	w0, [sp, #192]
   390f0:	cbz	w0, 38e38 <__asan_internal_strnlen@@Base+0x22c0>
   390f4:	b	38e24 <__asan_internal_strnlen@@Base+0x22ac>
   390f8:	ldr	w22, [sp, #264]
   390fc:	mov	w24, #0x0                   	// #0
   39100:	str	w26, [sp, #208]
   39104:	str	w7, [sp, #232]
   39108:	ldr	x21, [sp, #256]
   3910c:	ldp	x19, x20, [sp, #272]
   39110:	ldr	x25, [sp, #304]
   39114:	b	38818 <__asan_internal_strnlen@@Base+0x1ca0>
   39118:	ldr	w0, [sp, #208]
   3911c:	cbz	w0, 38ff8 <__asan_internal_strnlen@@Base+0x2480>
   39120:	mov	x3, x20
   39124:	mov	x2, x19
   39128:	add	x1, sp, #0x240
   3912c:	mov	x0, x21
   39130:	bl	6760 <__asan_backtrace_release_view@plt>
   39134:	b	38ff8 <__asan_internal_strnlen@@Base+0x2480>
   39138:	add	x0, sp, #0x2e0
   3913c:	sub	x3, x3, x25
   39140:	mov	x6, x0
   39144:	mov	x5, x20
   39148:	mov	x4, x19
   3914c:	mov	x2, x25
   39150:	mov	w1, w22
   39154:	str	x0, [sp, #192]
   39158:	mov	x0, x21
   3915c:	bl	6ae0 <__asan_backtrace_get_view@plt>
   39160:	mov	w24, w0
   39164:	cbz	w0, 3906c <__asan_internal_strnlen@@Base+0x24f4>
   39168:	mov	x2, x20
   3916c:	mov	x1, x19
   39170:	mov	w0, w22
   39174:	bl	6c90 <__asan_backtrace_close@plt>
   39178:	cbz	w0, 396bc <__asan_internal_strnlen@@Base+0x2b44>
   3917c:	mov	w22, #0x0                   	// #0
   39180:	mov	w1, #0x0                   	// #0
   39184:	ldr	x0, [sp, #240]
   39188:	ldr	x3, [sp, #736]
   3918c:	b	391a4 <__asan_internal_strnlen@@Base+0x262c>
   39190:	str	xzr, [x0, #16]
   39194:	cmp	w2, #0xa
   39198:	b.eq	393f4 <__asan_internal_strnlen@@Base+0x287c>  // b.none
   3919c:	add	x0, x0, #0x20
   391a0:	mov	w1, w2
   391a4:	ldr	x4, [x0, #8]
   391a8:	add	w2, w1, #0x1
   391ac:	cmp	w1, #0x4
   391b0:	cbz	x4, 39190 <__asan_internal_strnlen@@Base+0x2618>
   391b4:	ldr	x1, [x0]
   391b8:	sub	x1, x1, x25
   391bc:	add	x1, x3, x1
   391c0:	str	x1, [x0, #16]
   391c4:	b.hi	39194 <__asan_internal_strnlen@@Base+0x261c>  // b.pmore
   391c8:	add	w22, w22, #0x1
   391cc:	b	3919c <__asan_internal_strnlen@@Base+0x2624>
   391d0:	mov	x3, x20
   391d4:	mov	x2, x19
   391d8:	add	x1, sp, #0x228
   391dc:	mov	x0, x21
   391e0:	bl	6760 <__asan_backtrace_release_view@plt>
   391e4:	b	38f68 <__asan_internal_strnlen@@Base+0x23f0>
   391e8:	mov	w23, #0x1                   	// #1
   391ec:	b	38440 <__asan_internal_strnlen@@Base+0x18c8>
   391f0:	mov	w0, #0x1                   	// #1
   391f4:	str	w0, [sp, #232]
   391f8:	b	38818 <__asan_internal_strnlen@@Base+0x1ca0>
   391fc:	mov	x9, #0x18                  	// #24
   39200:	mov	x3, x20
   39204:	mov	x2, x19
   39208:	mov	x0, x21
   3920c:	mul	x6, x4, x9
   39210:	stp	x4, x13, [sp, #248]
   39214:	mov	x1, x6
   39218:	str	x6, [sp, #232]
   3921c:	stp	x7, x5, [sp, #264]
   39220:	str	x8, [sp, #280]
   39224:	bl	68c0 <__asan_backtrace_alloc@plt>
   39228:	mov	x27, x0
   3922c:	cbz	x0, 393d0 <__asan_internal_strnlen@@Base+0x2858>
   39230:	ldp	x4, x13, [sp, #248]
   39234:	mov	x9, #0x18                  	// #24
   39238:	ldp	x7, x5, [sp, #264]
   3923c:	mov	x1, #0x0                   	// #0
   39240:	ldr	x6, [sp, #232]
   39244:	mov	w3, #0x0                   	// #0
   39248:	ldr	x8, [sp, #280]
   3924c:	add	x1, x1, #0x1
   39250:	ldrb	w0, [x8, #4]
   39254:	and	w0, w0, #0xf
   39258:	sub	w0, w0, #0x1
   3925c:	cmp	w0, #0x1
   39260:	b.hi	392d0 <__asan_internal_strnlen@@Base+0x2758>  // b.pmore
   39264:	ldrh	w2, [x8, #6]
   39268:	umull	x0, w3, w9
   3926c:	add	x10, x27, x0
   39270:	cbz	w2, 392d0 <__asan_internal_strnlen@@Base+0x2758>
   39274:	ldr	w2, [x8]
   39278:	add	w3, w3, #0x1
   3927c:	add	x11, x13, x2
   39280:	cmp	x7, x2
   39284:	b.ls	3939c <__asan_internal_strnlen@@Base+0x2824>  // b.plast
   39288:	str	x11, [x27, x0]
   3928c:	ldr	x0, [x8, #8]
   39290:	cbz	x25, 392bc <__asan_internal_strnlen@@Base+0x2744>
   39294:	ldr	x2, [x25]
   39298:	cmp	x2, x0
   3929c:	b.hi	392bc <__asan_internal_strnlen@@Base+0x2744>  // b.pmore
   392a0:	ldr	x12, [x25, #16]
   392a4:	sub	x11, x0, x2
   392a8:	add	x2, x2, x12
   392ac:	cmp	x2, x0
   392b0:	b.ls	392bc <__asan_internal_strnlen@@Base+0x2744>  // b.plast
   392b4:	ldr	x0, [x25, #8]
   392b8:	ldr	x0, [x0, x11]
   392bc:	ldr	x2, [sp, #176]
   392c0:	add	x0, x2, x0
   392c4:	str	x0, [x10, #8]
   392c8:	ldr	x0, [x8, #16]
   392cc:	str	x0, [x10, #16]
   392d0:	add	x8, x8, #0x18
   392d4:	cmp	x5, x1
   392d8:	b.hi	3924c <__asan_internal_strnlen@@Base+0x26d4>  // b.pmore
   392dc:	mov	x1, x4
   392e0:	mov	x0, x27
   392e4:	mov	x2, #0x18                  	// #24
   392e8:	adrp	x3, 36000 <__asan_cplus_demangle_type@@Base+0x32f0>
   392ec:	add	x3, x3, #0xbc0
   392f0:	str	x4, [sp, #232]
   392f4:	bl	66b0 <__asan_backtrace_qsort@plt>
   392f8:	stp	xzr, x27, [x24]
   392fc:	mov	x1, x26
   39300:	ldr	x4, [sp, #232]
   39304:	str	x4, [x24, #16]
   39308:	mov	x0, x21
   3930c:	mov	x3, x20
   39310:	mov	x2, x19
   39314:	bl	6760 <__asan_backtrace_release_view@plt>
   39318:	mov	w0, #0x1                   	// #1
   3931c:	str	w0, [x23]
   39320:	add	x1, x21, #0x30
   39324:	ldr	w0, [x21, #8]
   39328:	cbnz	w0, 3964c <__asan_internal_strnlen@@Base+0x2ad4>
   3932c:	ldr	x0, [x21, #48]
   39330:	cbz	x0, 396c4 <__asan_internal_strnlen@@Base+0x2b4c>
   39334:	mov	x1, x0
   39338:	ldr	x0, [x0]
   3933c:	b	39330 <__asan_internal_strnlen@@Base+0x27b8>
   39340:	mov	w24, w0
   39344:	ldr	w0, [sp, #200]
   39348:	ldr	w22, [sp, #264]
   3934c:	str	w26, [sp, #208]
   39350:	str	w0, [sp, #232]
   39354:	ldr	x21, [sp, #256]
   39358:	ldp	x19, x20, [sp, #272]
   3935c:	ldr	x25, [sp, #304]
   39360:	b	38818 <__asan_internal_strnlen@@Base+0x1ca0>
   39364:	bl	6ac0 <__errno_location@plt>
   39368:	mov	x2, x0
   3936c:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   39370:	mov	x0, x20
   39374:	add	x1, x1, #0x448
   39378:	ldr	w2, [x2]
   3937c:	blr	x19
   39380:	b	38f50 <__asan_internal_strnlen@@Base+0x23d8>
   39384:	mov	x3, x20
   39388:	mov	x2, x19
   3938c:	add	x1, sp, #0x240
   39390:	mov	x0, x21
   39394:	bl	6760 <__asan_backtrace_release_view@plt>
   39398:	b	38e40 <__asan_internal_strnlen@@Base+0x22c8>
   3939c:	str	x6, [sp, #176]
   393a0:	mov	x0, x20
   393a4:	mov	w2, #0x0                   	// #0
   393a8:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   393ac:	add	x1, x1, #0x3f8
   393b0:	blr	x19
   393b4:	ldr	x6, [sp, #176]
   393b8:	mov	x4, x20
   393bc:	mov	x3, x19
   393c0:	mov	x1, x27
   393c4:	mov	x0, x21
   393c8:	mov	x2, x6
   393cc:	bl	6bc0 <__asan_backtrace_free@plt>
   393d0:	mov	x1, x24
   393d4:	mov	x4, x20
   393d8:	mov	x3, x19
   393dc:	mov	x0, x21
   393e0:	mov	x2, #0x18                  	// #24
   393e4:	mov	w24, #0x1                   	// #1
   393e8:	bl	6bc0 <__asan_backtrace_free@plt>
   393ec:	str	w24, [sp, #232]
   393f0:	b	38818 <__asan_internal_strnlen@@Base+0x1ca0>
   393f4:	ldr	x27, [sp, #240]
   393f8:	adrp	x25, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   393fc:	add	x28, sp, #0x258
   39400:	add	x25, x25, #0x450
   39404:	add	x0, sp, #0x190
   39408:	mov	w24, #0x5                   	// #5
   3940c:	mov	x26, #0x0                   	// #0
   39410:	str	x0, [sp, #200]
   39414:	ldr	x0, [x27, #8]
   39418:	cbnz	x0, 39494 <__asan_internal_strnlen@@Base+0x291c>
   3941c:	ldr	x3, [x27, #168]
   39420:	cbz	x3, 39494 <__asan_internal_strnlen@@Base+0x291c>
   39424:	cbz	x26, 39728 <__asan_internal_strnlen@@Base+0x2bb0>
   39428:	str	xzr, [sp, #400]
   3942c:	mov	x1, x25
   39430:	str	xzr, [sp, #600]
   39434:	cmp	x3, #0xb
   39438:	mov	x2, #0x4                   	// #4
   3943c:	b.ls	39480 <__asan_internal_strnlen@@Base+0x2908>  // b.plast
   39440:	ldr	x4, [x27, #176]
   39444:	stp	x4, x3, [sp, #208]
   39448:	mov	x0, x4
   3944c:	bl	6c20 <__asan_internal_memcmp@plt>
   39450:	cbnz	w0, 39480 <__asan_internal_strnlen@@Base+0x2908>
   39454:	ldp	x6, x4, [sp, #200]
   39458:	mov	x7, x28
   3945c:	ldr	x3, [sp, #216]
   39460:	mov	x5, x20
   39464:	mov	x0, x21
   39468:	mov	x2, x3
   3946c:	mov	x3, x26
   39470:	mov	x1, x4
   39474:	mov	x4, x19
   39478:	bl	382c8 <__asan_internal_strnlen@@Base+0x1750>
   3947c:	cbz	w0, 3974c <__asan_internal_strnlen@@Base+0x2bd4>
   39480:	ldr	x0, [sp, #400]
   39484:	str	x0, [x27, #16]
   39488:	ldr	x0, [sp, #600]
   3948c:	str	x0, [x27, #8]
   39490:	str	wzr, [x27, #24]
   39494:	add	x27, x27, #0x20
   39498:	subs	w24, w24, #0x1
   3949c:	b.ne	39414 <__asan_internal_strnlen@@Base+0x289c>  // b.any
   394a0:	mov	w25, #0x5                   	// #5
   394a4:	ldr	x28, [x23, #8]
   394a8:	cbz	x28, 394e4 <__asan_internal_strnlen@@Base+0x296c>
   394ac:	ldr	w0, [x23, #24]
   394b0:	cbz	w0, 394e4 <__asan_internal_strnlen@@Base+0x296c>
   394b4:	cbz	x26, 39598 <__asan_internal_strnlen@@Base+0x2a20>
   394b8:	cmp	x28, #0x17
   394bc:	b.ls	394d0 <__asan_internal_strnlen@@Base+0x2958>  // b.plast
   394c0:	ldr	x27, [x23, #16]
   394c4:	ldr	w4, [x27]
   394c8:	cmp	w4, #0x1
   394cc:	b.eq	395bc <__asan_internal_strnlen@@Base+0x2a44>  // b.none
   394d0:	mov	x0, #0x0                   	// #0
   394d4:	mov	x24, #0x0                   	// #0
   394d8:	sub	w22, w22, #0x1
   394dc:	stp	x0, x24, [x23, #8]
   394e0:	str	wzr, [x23, #24]
   394e4:	add	x23, x23, #0x20
   394e8:	subs	w25, w25, #0x1
   394ec:	b.ne	394a4 <__asan_internal_strnlen@@Base+0x292c>  // b.any
   394f0:	cbz	x26, 3950c <__asan_internal_strnlen@@Base+0x2994>
   394f4:	mov	x1, x26
   394f8:	mov	x4, x20
   394fc:	mov	x3, x19
   39500:	mov	x0, x21
   39504:	mov	x2, #0x13b4                	// #5044
   39508:	bl	6bc0 <__asan_backtrace_free@plt>
   3950c:	cbz	w22, 3970c <__asan_internal_strnlen@@Base+0x2b94>
   39510:	mov	w24, #0x1                   	// #1
   39514:	ldrb	w0, [sp, #677]
   39518:	add	x6, sp, #0x368
   3951c:	ldr	x1, [sp, #176]
   39520:	cmp	w0, #0x2
   39524:	cset	w0, eq  // eq = none
   39528:	ldp	x3, x2, [x6]
   3952c:	ldp	x5, x4, [x6, #32]
   39530:	str	w0, [sp, #32]
   39534:	ldr	x0, [sp, #184]
   39538:	str	x0, [sp, #64]
   3953c:	ldr	x0, [sp, #392]
   39540:	str	x0, [sp, #40]
   39544:	ldr	x0, [sp, #968]
   39548:	str	x0, [sp, #8]
   3954c:	ldr	x0, [sp, #976]
   39550:	str	x0, [sp]
   39554:	ldr	x7, [sp, #936]
   39558:	stp	x19, x20, [sp, #48]
   3955c:	ldr	x6, [sp, #944]
   39560:	ldr	x0, [sp, #1000]
   39564:	str	x0, [sp, #24]
   39568:	ldr	x0, [sp, #1008]
   3956c:	str	x0, [sp, #16]
   39570:	ldr	x0, [sp, #1192]
   39574:	str	x0, [sp, #72]
   39578:	mov	x0, x21
   3957c:	bl	6770 <__asan_backtrace_dwarf_add@plt>
   39580:	cbz	w0, 39704 <__asan_internal_strnlen@@Base+0x2b8c>
   39584:	ldr	x1, [sp, #1184]
   39588:	mov	w0, #0x1                   	// #1
   3958c:	mov	w23, w0
   39590:	str	w0, [x1]
   39594:	b	38440 <__asan_internal_strnlen@@Base+0x18c8>
   39598:	mov	x3, x20
   3959c:	mov	x2, x19
   395a0:	mov	x0, x21
   395a4:	mov	x1, #0x13b4                	// #5044
   395a8:	bl	68c0 <__asan_backtrace_alloc@plt>
   395ac:	mov	x26, x0
   395b0:	cbz	x0, 3974c <__asan_internal_strnlen@@Base+0x2bd4>
   395b4:	ldr	x28, [x23, #8]
   395b8:	b	394b8 <__asan_internal_strnlen@@Base+0x2940>
   395bc:	ldr	x1, [x27, #8]
   395c0:	mov	x3, x20
   395c4:	mov	x2, x19
   395c8:	mov	x0, x21
   395cc:	str	w4, [sp, #200]
   395d0:	bl	68c0 <__asan_backtrace_alloc@plt>
   395d4:	mov	x24, x0
   395d8:	cbz	x0, 3974c <__asan_internal_strnlen@@Base+0x2bd4>
   395dc:	ldr	x4, [x27, #8]
   395e0:	mov	x3, x0
   395e4:	sub	x1, x28, #0x18
   395e8:	mov	x2, x26
   395ec:	add	x0, x27, #0x18
   395f0:	bl	374d8 <__asan_internal_strnlen@@Base+0x960>
   395f4:	cbz	w0, 394d0 <__asan_internal_strnlen@@Base+0x2958>
   395f8:	ldr	x0, [x27, #8]
   395fc:	b	394d8 <__asan_internal_strnlen@@Base+0x2960>
   39600:	mov	w23, #0xffffffff            	// #-1
   39604:	b	38440 <__asan_internal_strnlen@@Base+0x18c8>
   39608:	ldr	x1, [sp, #216]
   3960c:	mov	x3, x20
   39610:	mov	x2, x19
   39614:	mov	x0, x21
   39618:	str	xzr, [sp, #288]
   3961c:	bl	6760 <__asan_backtrace_release_view@plt>
   39620:	str	wzr, [sp, #324]
   39624:	ldr	x1, [sp, #224]
   39628:	mov	x3, x20
   3962c:	mov	x2, x19
   39630:	mov	x0, x21
   39634:	bl	6760 <__asan_backtrace_release_view@plt>
   39638:	str	wzr, [sp, #192]
   3963c:	str	wzr, [sp, #208]
   39640:	str	wzr, [sp, #232]
   39644:	str	xzr, [sp, #312]
   39648:	b	38f60 <__asan_internal_strnlen@@Base+0x23e8>
   3964c:	mov	x0, x1
   39650:	b	39658 <__asan_internal_strnlen@@Base+0x2ae0>
   39654:	mov	x0, x2
   39658:	ldar	x2, [x0]
   3965c:	cbnz	x2, 39654 <__asan_internal_strnlen@@Base+0x2adc>
   39660:	ldxr	x2, [x0]
   39664:	cbnz	x2, 39670 <__asan_internal_strnlen@@Base+0x2af8>
   39668:	stlxr	w3, x24, [x0]
   3966c:	cbnz	w3, 39660 <__asan_internal_strnlen@@Base+0x2ae8>
   39670:	dmb	ish
   39674:	cmp	x2, #0x0
   39678:	b.ne	3964c <__asan_internal_strnlen@@Base+0x2ad4>  // b.any
   3967c:	mov	w0, #0x1                   	// #1
   39680:	str	w0, [sp, #232]
   39684:	b	38cd4 <__asan_internal_strnlen@@Base+0x215c>
   39688:	mov	w0, #0x1                   	// #1
   3968c:	ldr	w22, [sp, #264]
   39690:	mov	w24, #0x0                   	// #0
   39694:	str	w0, [sp, #200]
   39698:	str	w26, [sp, #208]
   3969c:	str	w7, [sp, #232]
   396a0:	ldr	x21, [sp, #256]
   396a4:	ldp	x19, x20, [sp, #272]
   396a8:	ldr	x25, [sp, #304]
   396ac:	b	38818 <__asan_internal_strnlen@@Base+0x1ca0>
   396b0:	mov	x2, x20
   396b4:	mov	x1, x19
   396b8:	b	38e90 <__asan_internal_strnlen@@Base+0x2318>
   396bc:	mov	w24, #0x1                   	// #1
   396c0:	b	3906c <__asan_internal_strnlen@@Base+0x24f4>
   396c4:	mov	w0, #0x1                   	// #1
   396c8:	str	x24, [x1]
   396cc:	str	w0, [sp, #232]
   396d0:	b	38cd4 <__asan_internal_strnlen@@Base+0x215c>
   396d4:	mov	x3, x20
   396d8:	mov	x2, x19
   396dc:	mov	x0, x21
   396e0:	mov	x1, #0x0                   	// #0
   396e4:	bl	68c0 <__asan_backtrace_alloc@plt>
   396e8:	mov	x27, x0
   396ec:	cbz	x0, 393d0 <__asan_internal_strnlen@@Base+0x2858>
   396f0:	mov	x4, #0x0                   	// #0
   396f4:	b	392dc <__asan_internal_strnlen@@Base+0x2764>
   396f8:	mov	w24, #0x1                   	// #1
   396fc:	str	w24, [sp, #232]
   39700:	b	38818 <__asan_internal_strnlen@@Base+0x1ca0>
   39704:	mov	w22, #0xffffffff            	// #-1
   39708:	b	3906c <__asan_internal_strnlen@@Base+0x24f4>
   3970c:	ldr	x1, [sp, #192]
   39710:	mov	x3, x20
   39714:	mov	x2, x19
   39718:	mov	x0, x21
   3971c:	mov	w24, #0x0                   	// #0
   39720:	bl	6760 <__asan_backtrace_release_view@plt>
   39724:	b	39514 <__asan_internal_strnlen@@Base+0x299c>
   39728:	mov	x3, x20
   3972c:	mov	x2, x19
   39730:	mov	x0, x21
   39734:	mov	x1, #0x13b4                	// #5044
   39738:	bl	68c0 <__asan_backtrace_alloc@plt>
   3973c:	mov	x26, x0
   39740:	cbz	x0, 3974c <__asan_internal_strnlen@@Base+0x2bd4>
   39744:	ldr	x3, [x27, #168]
   39748:	b	39428 <__asan_internal_strnlen@@Base+0x28b0>
   3974c:	mov	w24, #0x1                   	// #1
   39750:	mov	w22, #0xffffffff            	// #-1
   39754:	b	3906c <__asan_internal_strnlen@@Base+0x24f4>
   39758:	sub	sp, sp, #0x70
   3975c:	stp	x29, x30, [sp, #48]
   39760:	add	x29, sp, #0x30
   39764:	ldr	w6, [x2, #56]
   39768:	str	x21, [sp, #80]
   3976c:	ldr	x21, [x0, #8]
   39770:	stp	x19, x20, [sp, #64]
   39774:	cmn	w6, #0x1
   39778:	mov	x20, x0
   3977c:	mov	x19, x2
   39780:	cbz	x21, 3978c <__asan_internal_strnlen@@Base+0x2c14>
   39784:	ldrb	w0, [x21]
   39788:	cbnz	w0, 39818 <__asan_internal_strnlen@@Base+0x2ca0>
   3978c:	b.eq	39800 <__asan_internal_strnlen@@Base+0x2c88>  // b.none
   39790:	ldr	x21, [x19, #48]
   39794:	mov	w0, #0xffffffff            	// #-1
   39798:	str	w0, [x19, #56]
   3979c:	add	x1, sp, #0x64
   397a0:	mov	w2, w6
   397a4:	ldr	x0, [x19]
   397a8:	add	x6, sp, #0x68
   397ac:	ldr	x3, [x20]
   397b0:	str	x1, [sp]
   397b4:	mov	x1, x21
   397b8:	ldr	x4, [x19, #8]
   397bc:	str	xzr, [sp, #8]
   397c0:	ldr	x5, [x19, #16]
   397c4:	str	wzr, [sp, #16]
   397c8:	ldr	x7, [x19, #32]
   397cc:	str	wzr, [sp, #24]
   397d0:	str	xzr, [sp, #32]
   397d4:	str	wzr, [sp, #40]
   397d8:	bl	38388 <__asan_internal_strnlen@@Base+0x1810>
   397dc:	cbz	w0, 39800 <__asan_internal_strnlen@@Base+0x2c88>
   397e0:	ldr	w0, [sp, #100]
   397e4:	cbz	w0, 39800 <__asan_internal_strnlen@@Base+0x2c88>
   397e8:	ldr	x1, [x19, #40]
   397ec:	mov	w2, #0x1                   	// #1
   397f0:	ldr	x0, [x19, #24]
   397f4:	str	w2, [x1]
   397f8:	ldr	x1, [sp, #104]
   397fc:	str	x1, [x0]
   39800:	mov	w0, #0x0                   	// #0
   39804:	ldp	x29, x30, [sp, #48]
   39808:	ldp	x19, x20, [sp, #64]
   3980c:	ldr	x21, [sp, #80]
   39810:	add	sp, sp, #0x70
   39814:	ret
   39818:	ldp	x1, x2, [x2, #8]
   3981c:	b.ne	39838 <__asan_internal_strnlen@@Base+0x2cc0>  // b.any
   39820:	add	x3, sp, #0x60
   39824:	mov	x0, x21
   39828:	bl	6d40 <__asan_backtrace_open@plt>
   3982c:	mov	w6, w0
   39830:	tbz	w0, #31, 3979c <__asan_internal_strnlen@@Base+0x2c24>
   39834:	b	39800 <__asan_internal_strnlen@@Base+0x2c88>
   39838:	mov	w0, w6
   3983c:	bl	6c90 <__asan_backtrace_close@plt>
   39840:	ldp	x1, x2, [x19, #8]
   39844:	mov	w0, #0xffffffff            	// #-1
   39848:	ldr	x21, [x20, #8]
   3984c:	str	w0, [x19, #56]
   39850:	add	x3, sp, #0x60
   39854:	mov	x0, x21
   39858:	bl	6d40 <__asan_backtrace_open@plt>
   3985c:	mov	w6, w0
   39860:	tbz	w0, #31, 3979c <__asan_internal_strnlen@@Base+0x2c24>
   39864:	b	39800 <__asan_internal_strnlen@@Base+0x2c88>

0000000000039868 <__asan_backtrace_uncompress_zdebug@@Base>:
   39868:	stp	x29, x30, [sp, #-80]!
   3986c:	mov	x29, sp
   39870:	stp	x19, x20, [sp, #16]
   39874:	mov	x20, x3
   39878:	mov	x3, x4
   3987c:	stp	x21, x22, [sp, #32]
   39880:	mov	x21, x4
   39884:	mov	x22, x0
   39888:	stp	x23, x24, [sp, #48]
   3988c:	mov	x23, x2
   39890:	mov	x24, x5
   39894:	mov	x2, x20
   39898:	stp	x25, x26, [sp, #64]
   3989c:	mov	x26, x1
   398a0:	mov	x25, x6
   398a4:	mov	x1, #0x13b4                	// #5044
   398a8:	bl	68c0 <__asan_backtrace_alloc@plt>
   398ac:	cbz	x0, 39940 <__asan_backtrace_uncompress_zdebug@@Base+0xd8>
   398b0:	str	xzr, [x24]
   398b4:	mov	x19, x0
   398b8:	str	xzr, [x25]
   398bc:	cmp	x23, #0xb
   398c0:	b.hi	398fc <__asan_backtrace_uncompress_zdebug@@Base+0x94>  // b.pmore
   398c4:	mov	w23, #0x1                   	// #1
   398c8:	mov	x4, x21
   398cc:	mov	x3, x20
   398d0:	mov	x1, x19
   398d4:	mov	x0, x22
   398d8:	mov	x2, #0x13b4                	// #5044
   398dc:	bl	6bc0 <__asan_backtrace_free@plt>
   398e0:	mov	w0, w23
   398e4:	ldp	x19, x20, [sp, #16]
   398e8:	ldp	x21, x22, [sp, #32]
   398ec:	ldp	x23, x24, [sp, #48]
   398f0:	ldp	x25, x26, [sp, #64]
   398f4:	ldp	x29, x30, [sp], #80
   398f8:	ret
   398fc:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   39900:	mov	x0, x26
   39904:	add	x1, x1, #0x450
   39908:	mov	x2, #0x4                   	// #4
   3990c:	bl	6c20 <__asan_internal_memcmp@plt>
   39910:	cbnz	w0, 398c4 <__asan_backtrace_uncompress_zdebug@@Base+0x5c>
   39914:	mov	x2, x23
   39918:	mov	x7, x25
   3991c:	mov	x6, x24
   39920:	mov	x1, x26
   39924:	mov	x5, x21
   39928:	mov	x4, x20
   3992c:	mov	x3, x19
   39930:	mov	x0, x22
   39934:	bl	382c8 <__asan_internal_strnlen@@Base+0x1750>
   39938:	mov	w23, w0
   3993c:	b	398c8 <__asan_backtrace_uncompress_zdebug@@Base+0x60>
   39940:	mov	w23, #0x0                   	// #0
   39944:	b	398e0 <__asan_backtrace_uncompress_zdebug@@Base+0x78>

0000000000039948 <__asan_backtrace_initialize@@Base>:
   39948:	sub	sp, sp, #0xe0
   3994c:	mov	w6, #0x1                   	// #1
   39950:	stp	x29, x30, [sp, #48]
   39954:	add	x29, sp, #0x30
   39958:	stp	x23, x24, [sp, #96]
   3995c:	adrp	x24, 36000 <__asan_cplus_demangle_type@@Base+0x32f0>
   39960:	add	x8, x24, #0xb80
   39964:	str	w6, [sp, #16]
   39968:	mov	x23, x5
   3996c:	str	wzr, [sp, #24]
   39970:	mov	x5, x4
   39974:	str	xzr, [sp, #32]
   39978:	str	wzr, [sp, #40]
   3997c:	stp	x27, x28, [sp, #128]
   39980:	add	x28, sp, #0x94
   39984:	add	x27, sp, #0x98
   39988:	stp	x28, xzr, [sp]
   3998c:	mov	x6, x27
   39990:	stp	x25, x26, [sp, #112]
   39994:	add	x26, sp, #0x90
   39998:	mov	x25, x1
   3999c:	mov	x7, x26
   399a0:	stp	x19, x20, [sp, #64]
   399a4:	mov	x19, x0
   399a8:	mov	w20, w2
   399ac:	stp	x21, x22, [sp, #80]
   399b0:	mov	x22, x3
   399b4:	mov	x21, x4
   399b8:	mov	x4, x3
   399bc:	mov	x3, #0x0                   	// #0
   399c0:	str	x8, [sp, #152]
   399c4:	bl	38388 <__asan_internal_strnlen@@Base+0x1810>
   399c8:	cbz	w0, 39a34 <__asan_backtrace_initialize@@Base+0xec>
   399cc:	cmp	w0, #0x0
   399d0:	add	x1, sp, #0xa0
   399d4:	csinv	w20, w20, wzr, lt  // lt = tstop
   399d8:	adrp	x0, 39000 <__asan_internal_strnlen@@Base+0x2488>
   399dc:	add	x0, x0, #0x758
   399e0:	stp	x19, x22, [sp, #160]
   399e4:	stp	x21, x27, [sp, #176]
   399e8:	stp	x26, x28, [sp, #192]
   399ec:	str	x25, [sp, #208]
   399f0:	str	w20, [sp, #216]
   399f4:	bl	6950 <dl_iterate_phdr@plt>
   399f8:	ldr	w0, [x19, #8]
   399fc:	cbnz	w0, 39a54 <__asan_backtrace_initialize@@Base+0x10c>
   39a00:	ldr	w0, [sp, #144]
   39a04:	cbnz	w0, 39a84 <__asan_backtrace_initialize@@Base+0x13c>
   39a08:	ldr	x0, [x19, #40]
   39a0c:	cbz	x0, 39ab4 <__asan_backtrace_initialize@@Base+0x16c>
   39a10:	ldr	x0, [x19, #24]
   39a14:	str	x0, [x23]
   39a18:	cmp	x0, #0x0
   39a1c:	add	x24, x24, #0xb80
   39a20:	ccmp	x0, x24, #0x4, ne  // ne = any
   39a24:	mov	w0, #0x1                   	// #1
   39a28:	b.ne	39a34 <__asan_backtrace_initialize@@Base+0xec>  // b.any
   39a2c:	ldr	x1, [sp, #152]
   39a30:	str	x1, [x23]
   39a34:	ldp	x29, x30, [sp, #48]
   39a38:	ldp	x19, x20, [sp, #64]
   39a3c:	ldp	x21, x22, [sp, #80]
   39a40:	ldp	x23, x24, [sp, #96]
   39a44:	ldp	x25, x26, [sp, #112]
   39a48:	ldp	x27, x28, [sp, #128]
   39a4c:	add	sp, sp, #0xe0
   39a50:	ret
   39a54:	ldr	w1, [sp, #144]
   39a58:	add	x0, x19, #0x28
   39a5c:	cbz	w1, 39a94 <__asan_backtrace_initialize@@Base+0x14c>
   39a60:	adrp	x1, 36000 <__asan_cplus_demangle_type@@Base+0x32f0>
   39a64:	add	x1, x1, #0xfd0
   39a68:	stlr	x1, [x0]
   39a6c:	ldr	w0, [x19, #8]
   39a70:	cbz	w0, 39a10 <__asan_backtrace_initialize@@Base+0xc8>
   39a74:	add	x19, x19, #0x18
   39a78:	ldar	x0, [x19]
   39a7c:	str	x0, [x23]
   39a80:	b	39a18 <__asan_backtrace_initialize@@Base+0xd0>
   39a84:	adrp	x0, 36000 <__asan_cplus_demangle_type@@Base+0x32f0>
   39a88:	add	x0, x0, #0xfd0
   39a8c:	str	x0, [x19, #40]
   39a90:	b	39a10 <__asan_backtrace_initialize@@Base+0xc8>
   39a94:	adrp	x1, 36000 <__asan_cplus_demangle_type@@Base+0x32f0>
   39a98:	add	x1, x1, #0xba8
   39a9c:	ldxr	x2, [x0]
   39aa0:	cbnz	x2, 39aac <__asan_backtrace_initialize@@Base+0x164>
   39aa4:	stlxr	w3, x1, [x0]
   39aa8:	cbnz	w3, 39a9c <__asan_backtrace_initialize@@Base+0x154>
   39aac:	dmb	ish
   39ab0:	b	39a6c <__asan_backtrace_initialize@@Base+0x124>
   39ab4:	adrp	x0, 36000 <__asan_cplus_demangle_type@@Base+0x32f0>
   39ab8:	add	x0, x0, #0xba8
   39abc:	str	x0, [x19, #40]
   39ac0:	b	39a10 <__asan_backtrace_initialize@@Base+0xc8>
   39ac4:	nop

0000000000039ac8 <__asan_backtrace_get_view@@Base>:
   39ac8:	stp	x29, x30, [sp, #-64]!
   39acc:	mov	x29, sp
   39ad0:	stp	x19, x20, [sp, #16]
   39ad4:	mov	x19, x3
   39ad8:	mov	x20, x4
   39adc:	stp	x21, x22, [sp, #32]
   39ae0:	mov	x22, x2
   39ae4:	mov	x21, x5
   39ae8:	stp	x23, x24, [sp, #48]
   39aec:	mov	w24, w1
   39af0:	mov	x23, x6
   39af4:	bl	6c70 <getpagesize@plt>
   39af8:	sxtw	x7, w0
   39afc:	sub	x8, x19, #0x1
   39b00:	neg	x1, x7
   39b04:	mov	w4, w24
   39b08:	mov	w3, #0x2                   	// #2
   39b0c:	udiv	x19, x22, x7
   39b10:	mov	w2, #0x1                   	// #1
   39b14:	mov	x0, #0x0                   	// #0
   39b18:	msub	w19, w19, w7, w22
   39b1c:	add	x7, x7, x19
   39b20:	sub	x5, x22, x19
   39b24:	add	x7, x8, x7
   39b28:	and	x22, x1, x7
   39b2c:	mov	x1, x22
   39b30:	bl	69d0 <mmap@plt>
   39b34:	cmn	x0, #0x1
   39b38:	b.eq	39b64 <__asan_backtrace_get_view@@Base+0x9c>  // b.none
   39b3c:	mov	x2, x0
   39b40:	add	x19, x0, x19
   39b44:	stp	x19, x2, [x23]
   39b48:	mov	w0, #0x1                   	// #1
   39b4c:	str	x22, [x23, #16]
   39b50:	ldp	x19, x20, [sp, #16]
   39b54:	ldp	x21, x22, [sp, #32]
   39b58:	ldp	x23, x24, [sp, #48]
   39b5c:	ldp	x29, x30, [sp], #64
   39b60:	ret
   39b64:	bl	6ac0 <__errno_location@plt>
   39b68:	mov	x2, x0
   39b6c:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   39b70:	mov	x0, x21
   39b74:	add	x1, x1, #0xd98
   39b78:	ldr	w2, [x2]
   39b7c:	blr	x20
   39b80:	mov	w0, #0x0                   	// #0
   39b84:	ldp	x19, x20, [sp, #16]
   39b88:	ldp	x21, x22, [sp, #32]
   39b8c:	ldp	x23, x24, [sp, #48]
   39b90:	ldp	x29, x30, [sp], #64
   39b94:	ret

0000000000039b98 <__asan_backtrace_release_view@@Base>:
   39b98:	stp	x29, x30, [sp, #-32]!
   39b9c:	mov	x29, sp
   39ba0:	ldp	x0, x1, [x1, #8]
   39ba4:	stp	x19, x20, [sp, #16]
   39ba8:	mov	x19, x2
   39bac:	mov	x20, x3
   39bb0:	bl	69f0 <munmap@plt>
   39bb4:	tbnz	w0, #31, 39bc4 <__asan_backtrace_release_view@@Base+0x2c>
   39bb8:	ldp	x19, x20, [sp, #16]
   39bbc:	ldp	x29, x30, [sp], #32
   39bc0:	ret
   39bc4:	bl	6ac0 <__errno_location@plt>
   39bc8:	mov	x2, x0
   39bcc:	mov	x16, x19
   39bd0:	mov	x0, x20
   39bd4:	ldp	x19, x20, [sp, #16]
   39bd8:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   39bdc:	ldp	x29, x30, [sp], #32
   39be0:	add	x1, x1, #0xda0
   39be4:	ldr	w2, [x2]
   39be8:	br	x16
   39bec:	nop
   39bf0:	ldr	x9, [x0, #64]
   39bf4:	add	x4, x0, #0x40
   39bf8:	mov	x5, #0x0                   	// #0
   39bfc:	mov	x3, x9
   39c00:	cbnz	x9, 39c1c <__asan_backtrace_release_view@@Base+0x84>
   39c04:	b	39c50 <__asan_backtrace_release_view@@Base+0xb8>
   39c08:	ldr	x7, [x4]
   39c0c:	ldr	x8, [x3, #8]
   39c10:	ldr	x7, [x7, #8]
   39c14:	cmp	x8, x7
   39c18:	csel	x4, x4, x6, cs  // cs = hs, nlast
   39c1c:	mov	x6, x3
   39c20:	add	x5, x5, #0x1
   39c24:	ldr	x3, [x3]
   39c28:	cbnz	x3, 39c08 <__asan_backtrace_release_view@@Base+0x70>
   39c2c:	cmp	x5, #0xf
   39c30:	b.ls	39c50 <__asan_backtrace_release_view@@Base+0xb8>  // b.plast
   39c34:	ldr	x3, [x4]
   39c38:	ldr	x5, [x3, #8]
   39c3c:	cmp	x5, x2
   39c40:	b.cs	39c58 <__asan_backtrace_release_view@@Base+0xc0>  // b.hs, b.nlast
   39c44:	ldr	x3, [x3]
   39c48:	str	x3, [x4]
   39c4c:	ldr	x9, [x0, #64]
   39c50:	stp	x9, x2, [x1]
   39c54:	str	x1, [x0, #64]
   39c58:	ret
   39c5c:	nop

0000000000039c60 <__asan_backtrace_free@@Base>:
   39c60:	stp	x29, x30, [sp, #-48]!
   39c64:	mov	x29, sp
   39c68:	stp	x19, x20, [sp, #16]
   39c6c:	mov	x19, x0
   39c70:	mov	x20, x2
   39c74:	str	x21, [sp, #32]
   39c78:	mov	x0, #0xffff                	// #65535
   39c7c:	mov	x21, x1
   39c80:	cmp	x2, x0
   39c84:	b.hi	39ca8 <__asan_backtrace_free@@Base+0x48>  // b.pmore
   39c88:	ldr	w0, [x19, #8]
   39c8c:	cbnz	w0, 39cc8 <__asan_backtrace_free@@Base+0x68>
   39c90:	cmp	x2, #0xf
   39c94:	b.hi	39d10 <__asan_backtrace_free@@Base+0xb0>  // b.pmore
   39c98:	ldp	x19, x20, [sp, #16]
   39c9c:	ldr	x21, [sp, #32]
   39ca0:	ldp	x29, x30, [sp], #48
   39ca4:	ret
   39ca8:	bl	6c70 <getpagesize@plt>
   39cac:	sxtw	x0, w0
   39cb0:	orr	x1, x21, x20
   39cb4:	sub	x0, x0, #0x1
   39cb8:	tst	x0, x1
   39cbc:	b.eq	39d24 <__asan_backtrace_free@@Base+0xc4>  // b.none
   39cc0:	ldr	w0, [x19, #8]
   39cc4:	cbz	w0, 39d10 <__asan_backtrace_free@@Base+0xb0>
   39cc8:	add	x0, x19, #0x3c
   39ccc:	mov	w2, #0x1                   	// #1
   39cd0:	ldxr	w1, [x0]
   39cd4:	stxr	w3, w2, [x0]
   39cd8:	cbnz	w3, 39cd0 <__asan_backtrace_free@@Base+0x70>
   39cdc:	dmb	ish
   39ce0:	cbnz	w1, 39c98 <__asan_backtrace_free@@Base+0x38>
   39ce4:	cmp	x20, #0xf
   39ce8:	b.hi	39d10 <__asan_backtrace_free@@Base+0xb0>  // b.pmore
   39cec:	nop
   39cf0:	ldr	w0, [x19, #8]
   39cf4:	cbz	w0, 39c98 <__asan_backtrace_free@@Base+0x38>
   39cf8:	add	x19, x19, #0x3c
   39cfc:	stlr	wzr, [x19]
   39d00:	ldp	x19, x20, [sp, #16]
   39d04:	ldr	x21, [sp, #32]
   39d08:	ldp	x29, x30, [sp], #48
   39d0c:	ret
   39d10:	mov	x2, x20
   39d14:	mov	x1, x21
   39d18:	mov	x0, x19
   39d1c:	bl	39bf0 <__asan_backtrace_release_view@@Base+0x58>
   39d20:	b	39cf0 <__asan_backtrace_free@@Base+0x90>
   39d24:	mov	x1, x20
   39d28:	mov	x0, x21
   39d2c:	bl	69f0 <munmap@plt>
   39d30:	cbnz	w0, 39cc0 <__asan_backtrace_free@@Base+0x60>
   39d34:	b	39c98 <__asan_backtrace_free@@Base+0x38>

0000000000039d38 <__asan_backtrace_alloc@@Base>:
   39d38:	stp	x29, x30, [sp, #-64]!
   39d3c:	mov	x29, sp
   39d40:	stp	x19, x20, [sp, #16]
   39d44:	mov	x20, x1
   39d48:	ldr	w1, [x0, #8]
   39d4c:	stp	x21, x22, [sp, #32]
   39d50:	mov	x22, x3
   39d54:	stp	x23, x24, [sp, #48]
   39d58:	mov	x23, x0
   39d5c:	mov	x24, x2
   39d60:	cbnz	w1, 39dd0 <__asan_backtrace_alloc@@Base+0x98>
   39d64:	ldr	x4, [x0, #64]
   39d68:	add	x6, x0, #0x40
   39d6c:	cbnz	x4, 39d7c <__asan_backtrace_alloc@@Base+0x44>
   39d70:	b	39e08 <__asan_backtrace_alloc@@Base+0xd0>
   39d74:	mov	x6, x19
   39d78:	cbz	x4, 39df8 <__asan_backtrace_alloc@@Base+0xc0>
   39d7c:	ldr	x5, [x4, #8]
   39d80:	mov	x19, x4
   39d84:	ldr	x4, [x4]
   39d88:	cmp	x5, x20
   39d8c:	b.cc	39d74 <__asan_backtrace_alloc@@Base+0x3c>  // b.lo, b.ul, b.last
   39d90:	add	x1, x20, #0x7
   39d94:	str	x4, [x6]
   39d98:	and	x1, x1, #0xfffffffffffffff8
   39d9c:	cmp	x5, x1
   39da0:	b.ls	39db0 <__asan_backtrace_alloc@@Base+0x78>  // b.plast
   39da4:	sub	x2, x5, x1
   39da8:	cmp	x2, #0xf
   39dac:	b.hi	39e74 <__asan_backtrace_alloc@@Base+0x13c>  // b.pmore
   39db0:	ldr	w0, [x23, #8]
   39db4:	cbnz	w0, 39eac <__asan_backtrace_alloc@@Base+0x174>
   39db8:	mov	x0, x19
   39dbc:	ldp	x19, x20, [sp, #16]
   39dc0:	ldp	x21, x22, [sp, #32]
   39dc4:	ldp	x23, x24, [sp, #48]
   39dc8:	ldp	x29, x30, [sp], #64
   39dcc:	ret
   39dd0:	add	x0, x0, #0x3c
   39dd4:	mov	w2, #0x1                   	// #1
   39dd8:	ldxr	w1, [x0]
   39ddc:	stxr	w3, w2, [x0]
   39de0:	cbnz	w3, 39dd8 <__asan_backtrace_alloc@@Base+0xa0>
   39de4:	dmb	ish
   39de8:	cbnz	w1, 39e08 <__asan_backtrace_alloc@@Base+0xd0>
   39dec:	ldr	x4, [x23, #64]
   39df0:	add	x6, x23, #0x40
   39df4:	cbnz	x4, 39d7c <__asan_backtrace_alloc@@Base+0x44>
   39df8:	ldr	w0, [x23, #8]
   39dfc:	cbz	w0, 39e08 <__asan_backtrace_alloc@@Base+0xd0>
   39e00:	add	x0, x23, #0x3c
   39e04:	stlr	wzr, [x0]
   39e08:	bl	6c70 <getpagesize@plt>
   39e0c:	sub	x21, x20, #0x1
   39e10:	sxtw	x1, w0
   39e14:	mov	x5, #0x0                   	// #0
   39e18:	add	x21, x21, x1
   39e1c:	neg	x1, x1
   39e20:	and	x21, x21, x1
   39e24:	mov	w4, #0xffffffff            	// #-1
   39e28:	mov	x1, x21
   39e2c:	mov	w3, #0x22                  	// #34
   39e30:	mov	w2, #0x3                   	// #3
   39e34:	mov	x0, #0x0                   	// #0
   39e38:	bl	69d0 <mmap@plt>
   39e3c:	mov	x19, x0
   39e40:	cmn	x0, #0x1
   39e44:	b.eq	39e84 <__asan_backtrace_alloc@@Base+0x14c>  // b.none
   39e48:	add	x1, x20, #0x7
   39e4c:	and	x1, x1, #0xfffffffffffffff8
   39e50:	cmp	x21, x1
   39e54:	b.ls	39db8 <__asan_backtrace_alloc@@Base+0x80>  // b.plast
   39e58:	sub	x2, x21, x1
   39e5c:	mov	x4, x22
   39e60:	add	x1, x0, x1
   39e64:	mov	x3, x24
   39e68:	mov	x0, x23
   39e6c:	bl	6bc0 <__asan_backtrace_free@plt>
   39e70:	b	39db8 <__asan_backtrace_alloc@@Base+0x80>
   39e74:	add	x1, x19, x1
   39e78:	mov	x0, x23
   39e7c:	bl	39bf0 <__asan_backtrace_release_view@@Base+0x58>
   39e80:	b	39db0 <__asan_backtrace_alloc@@Base+0x78>
   39e84:	mov	x19, #0x0                   	// #0
   39e88:	cbz	x24, 39db8 <__asan_backtrace_alloc@@Base+0x80>
   39e8c:	bl	6ac0 <__errno_location@plt>
   39e90:	mov	x2, x0
   39e94:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x9028>
   39e98:	mov	x0, x22
   39e9c:	add	x1, x1, #0xd98
   39ea0:	ldr	w2, [x2]
   39ea4:	blr	x24
   39ea8:	b	39db8 <__asan_backtrace_alloc@@Base+0x80>
   39eac:	add	x0, x23, #0x3c
   39eb0:	stlr	wzr, [x0]
   39eb4:	b	39db8 <__asan_backtrace_alloc@@Base+0x80>

0000000000039eb8 <__asan_backtrace_vector_grow@@Base>:
   39eb8:	stp	x29, x30, [sp, #-80]!
   39ebc:	mov	x29, sp
   39ec0:	ldp	x6, x5, [x4, #8]
   39ec4:	stp	x19, x20, [sp, #16]
   39ec8:	mov	x19, x4
   39ecc:	stp	x21, x22, [sp, #32]
   39ed0:	mov	x21, x1
   39ed4:	add	x20, x1, x6
   39ed8:	cmp	x5, x1
   39edc:	b.cc	39f04 <__asan_backtrace_vector_grow@@Base+0x4c>  // b.lo, b.ul, b.last
   39ee0:	ldr	x22, [x4]
   39ee4:	add	x22, x22, x6
   39ee8:	sub	x5, x5, x21
   39eec:	stp	x20, x5, [x19, #8]
   39ef0:	mov	x0, x22
   39ef4:	ldp	x19, x20, [sp, #16]
   39ef8:	ldp	x21, x22, [sp, #32]
   39efc:	ldp	x29, x30, [sp], #80
   39f00:	ret
   39f04:	stp	x23, x24, [sp, #48]
   39f08:	mov	x23, x0
   39f0c:	mov	x24, x2
   39f10:	str	x25, [sp, #64]
   39f14:	mov	x25, x3
   39f18:	cbnz	x6, 39f84 <__asan_backtrace_vector_grow@@Base+0xcc>
   39f1c:	lsl	x20, x20, #4
   39f20:	mov	x3, x25
   39f24:	mov	x2, x24
   39f28:	mov	x1, x20
   39f2c:	mov	x0, x23
   39f30:	bl	68c0 <__asan_backtrace_alloc@plt>
   39f34:	mov	x22, x0
   39f38:	cbz	x0, 39fb8 <__asan_backtrace_vector_grow@@Base+0x100>
   39f3c:	ldp	x1, x6, [x19]
   39f40:	cbz	x1, 39f6c <__asan_backtrace_vector_grow@@Base+0xb4>
   39f44:	mov	x2, x6
   39f48:	bl	67d0 <__asan_internal_memcpy@plt>
   39f4c:	ldp	x1, x5, [x19]
   39f50:	mov	x4, x25
   39f54:	ldr	x2, [x19, #16]
   39f58:	mov	x3, x24
   39f5c:	mov	x0, x23
   39f60:	add	x2, x5, x2
   39f64:	bl	6bc0 <__asan_backtrace_free@plt>
   39f68:	ldr	x6, [x19, #8]
   39f6c:	sub	x5, x20, x6
   39f70:	add	x20, x21, x6
   39f74:	ldp	x23, x24, [sp, #48]
   39f78:	ldr	x25, [sp, #64]
   39f7c:	str	x22, [x19]
   39f80:	b	39ee4 <__asan_backtrace_vector_grow@@Base+0x2c>
   39f84:	bl	6c70 <getpagesize@plt>
   39f88:	cmp	x20, w0, sxtw
   39f8c:	lsl	x6, x20, #1
   39f90:	sxtw	x5, w0
   39f94:	b.cs	39fa4 <__asan_backtrace_vector_grow@@Base+0xec>  // b.hs, b.nlast
   39f98:	cmp	x5, x6
   39f9c:	csel	x20, x5, x6, ls  // ls = plast
   39fa0:	b	39f20 <__asan_backtrace_vector_grow@@Base+0x68>
   39fa4:	sub	x20, x6, #0x1
   39fa8:	neg	x0, x5
   39fac:	add	x20, x20, x5
   39fb0:	and	x20, x20, x0
   39fb4:	b	39f20 <__asan_backtrace_vector_grow@@Base+0x68>
   39fb8:	ldp	x23, x24, [sp, #48]
   39fbc:	ldr	x25, [sp, #64]
   39fc0:	b	39ef0 <__asan_backtrace_vector_grow@@Base+0x38>
   39fc4:	nop

0000000000039fc8 <__asan_backtrace_vector_finish@@Base>:
   39fc8:	ldp	x0, x2, [x1]
   39fcc:	add	x2, x0, x2
   39fd0:	stp	x2, xzr, [x1]
   39fd4:	ret

0000000000039fd8 <__asan_backtrace_vector_release@@Base>:
   39fd8:	stp	x29, x30, [sp, #-32]!
   39fdc:	mov	x4, x3
   39fe0:	mov	x3, x2
   39fe4:	mov	x29, sp
   39fe8:	ldp	x2, x6, [x1, #8]
   39fec:	str	x19, [sp, #16]
   39ff0:	mov	x19, x1
   39ff4:	ldr	x5, [x19]
   39ff8:	add	x1, x2, #0x7
   39ffc:	and	x1, x1, #0xfffffffffffffff8
   3a000:	add	x2, x2, x6
   3a004:	sub	x2, x2, x1
   3a008:	add	x1, x5, x1
   3a00c:	bl	6bc0 <__asan_backtrace_free@plt>
   3a010:	str	xzr, [x19, #16]
   3a014:	ldr	x0, [x19, #8]
   3a018:	cbnz	x0, 3a020 <__asan_backtrace_vector_release@@Base+0x48>
   3a01c:	str	xzr, [x19]
   3a020:	mov	w0, #0x1                   	// #1
   3a024:	ldr	x19, [sp, #16]
   3a028:	ldp	x29, x30, [sp], #32
   3a02c:	ret
   3a030:	adrp	x2, 60000 <_Unwind_Backtrace@GCC_3.3>
   3a034:	mov	x1, #0x0                   	// #0
   3a038:	ldr	x2, [x2, #928]
   3a03c:	b	6a10 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000003a040 <.fini>:
   3a040:	stp	x29, x30, [sp, #-16]!
   3a044:	mov	x29, sp
   3a048:	ldp	x29, x30, [sp], #16
   3a04c:	ret
