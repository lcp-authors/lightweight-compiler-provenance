
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//JOHAB.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000007e0 <.init>:
 7e0:	stp	x29, x30, [sp, #-16]!
 7e4:	mov	x29, sp
 7e8:	bl	890 <__assert_fail@plt+0x10>
 7ec:	ldp	x29, x30, [sp], #16
 7f0:	ret

Disassembly of section .plt:

0000000000000800 <__cxa_finalize@plt-0x20>:
 800:	stp	x16, x30, [sp, #-16]!
 804:	adrp	x16, 13000 <gconv@@Base+0x12568>
 808:	ldr	x17, [x16, #4088]
 80c:	add	x16, x16, #0xff8
 810:	br	x17
 814:	nop
 818:	nop
 81c:	nop

0000000000000820 <__cxa_finalize@plt>:
 820:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 824:	ldr	x17, [x16]
 828:	add	x16, x16, #0x0
 82c:	br	x17

0000000000000830 <__gconv_transliterate@plt>:
 830:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 834:	ldr	x17, [x16, #8]
 838:	add	x16, x16, #0x8
 83c:	br	x17

0000000000000840 <__stack_chk_fail@plt>:
 840:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 844:	ldr	x17, [x16, #16]
 848:	add	x16, x16, #0x10
 84c:	br	x17

0000000000000850 <__gmon_start__@plt>:
 850:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 854:	ldr	x17, [x16, #24]
 858:	add	x16, x16, #0x18
 85c:	br	x17

0000000000000860 <strcmp@plt>:
 860:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 864:	ldr	x17, [x16, #32]
 868:	add	x16, x16, #0x20
 86c:	br	x17

0000000000000870 <_dl_mcount_wrapper_check@plt>:
 870:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 874:	ldr	x17, [x16, #40]
 878:	add	x16, x16, #0x28
 87c:	br	x17

0000000000000880 <__assert_fail@plt>:
 880:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 884:	ldr	x17, [x16, #48]
 888:	add	x16, x16, #0x30
 88c:	br	x17

Disassembly of section .text:

0000000000000890 <gconv_init@@Base-0x178>:
     890:	adrp	x0, 13000 <gconv@@Base+0x12568>
     894:	ldr	x0, [x0, #4040]
     898:	cbz	x0, 8a0 <__assert_fail@plt+0x20>
     89c:	b	850 <__gmon_start__@plt>
     8a0:	ret
     8a4:	nop
     8a8:	adrp	x0, 14000 <gconv@@Base+0x13568>
     8ac:	add	x0, x0, #0x40
     8b0:	adrp	x1, 14000 <gconv@@Base+0x13568>
     8b4:	add	x1, x1, #0x40
     8b8:	cmp	x1, x0
     8bc:	b.eq	8d4 <__assert_fail@plt+0x54>  // b.none
     8c0:	adrp	x1, 13000 <gconv@@Base+0x12568>
     8c4:	ldr	x1, [x1, #3992]
     8c8:	cbz	x1, 8d4 <__assert_fail@plt+0x54>
     8cc:	mov	x16, x1
     8d0:	br	x16
     8d4:	ret
     8d8:	adrp	x0, 14000 <gconv@@Base+0x13568>
     8dc:	add	x0, x0, #0x40
     8e0:	adrp	x1, 14000 <gconv@@Base+0x13568>
     8e4:	add	x1, x1, #0x40
     8e8:	sub	x1, x1, x0
     8ec:	lsr	x2, x1, #63
     8f0:	add	x1, x2, x1, asr #3
     8f4:	cmp	xzr, x1, asr #1
     8f8:	asr	x1, x1, #1
     8fc:	b.eq	914 <__assert_fail@plt+0x94>  // b.none
     900:	adrp	x2, 13000 <gconv@@Base+0x12568>
     904:	ldr	x2, [x2, #4064]
     908:	cbz	x2, 914 <__assert_fail@plt+0x94>
     90c:	mov	x16, x2
     910:	br	x16
     914:	ret
     918:	stp	x29, x30, [sp, #-32]!
     91c:	mov	x29, sp
     920:	str	x19, [sp, #16]
     924:	adrp	x19, 14000 <gconv@@Base+0x13568>
     928:	ldrb	w0, [x19, #64]
     92c:	cbnz	w0, 954 <__assert_fail@plt+0xd4>
     930:	adrp	x0, 13000 <gconv@@Base+0x12568>
     934:	ldr	x0, [x0, #4000]
     938:	cbz	x0, 948 <__assert_fail@plt+0xc8>
     93c:	adrp	x0, 14000 <gconv@@Base+0x13568>
     940:	ldr	x0, [x0, #56]
     944:	bl	820 <__cxa_finalize@plt>
     948:	bl	8a8 <__assert_fail@plt+0x28>
     94c:	mov	w0, #0x1                   	// #1
     950:	strb	w0, [x19, #64]
     954:	ldr	x19, [sp, #16]
     958:	ldp	x29, x30, [sp], #32
     95c:	ret
     960:	b	8d8 <__assert_fail@plt+0x58>
     964:	nop
     968:	tst	w1, #0x80
     96c:	mov	w0, #0xffffffff            	// #-1
     970:	and	w1, w1, #0xff
     974:	b.ne	984 <__assert_fail@plt+0x104>  // b.any
     978:	cmp	w1, #0x5c
     97c:	mov	w0, #0x20a9                	// #8361
     980:	csel	w0, w1, w0, ne  // ne = any
     984:	ret
     988:	add	x3, x1, x1, lsl #1
     98c:	mov	x4, #0xdefe                	// #57086
     990:	cmp	x0, x4
     994:	mov	x0, #0xffffffffffff60a4    	// #-40796
     998:	lsl	x3, x3, #4
     99c:	mov	x4, #0xffffffffffff5b80    	// #-42112
     9a0:	sub	x3, x3, x1
     9a4:	add	x5, x2, x0
     9a8:	add	x4, x2, x4
     9ac:	lsl	x3, x3, #2
     9b0:	b.hi	9dc <__assert_fail@plt+0x15c>  // b.pmore
     9b4:	cmp	x2, #0x90
     9b8:	adrp	x0, 13000 <gconv@@Base+0x12568>
     9bc:	mov	x2, #0x31                  	// #49
     9c0:	mov	x1, #0x43                  	// #67
     9c4:	csel	x1, x1, x2, hi  // hi = pmore
     9c8:	ldr	x0, [x0, #4056]
     9cc:	sub	x3, x3, x1
     9d0:	add	x3, x3, x5
     9d4:	ldrh	w0, [x0, x3, lsl #1]
     9d8:	ret
     9dc:	cmp	x2, #0x90
     9e0:	adrp	x0, 13000 <gconv@@Base+0x12568>
     9e4:	mov	x2, #0x31                  	// #49
     9e8:	mov	x1, #0x43                  	// #67
     9ec:	csel	x1, x1, x2, hi  // hi = pmore
     9f0:	ldr	x0, [x0, #4008]
     9f4:	sub	x3, x3, x1
     9f8:	add	x3, x3, x4
     9fc:	ldrh	w0, [x0, x3, lsl #1]
     a00:	ret
     a04:	nop

0000000000000a08 <gconv_init@@Base>:
     a08:	stp	x29, x30, [sp, #-32]!
     a0c:	mov	x29, sp
     a10:	stp	x19, x20, [sp, #16]
     a14:	mov	x19, x0
     a18:	adrp	x20, 2000 <gconv@@Base+0x1568>
     a1c:	ldr	x0, [x0, #24]
     a20:	add	x20, x20, #0x7e0
     a24:	mov	x1, x20
     a28:	bl	860 <strcmp@plt>
     a2c:	cbnz	w0, a64 <gconv_init@@Base+0x5c>
     a30:	mov	x2, #0x1                   	// #1
     a34:	adrp	x0, 0 <__cxa_finalize@plt-0x820>
     a38:	movk	x2, #0x2, lsl #32
     a3c:	add	x0, x0, #0x968
     a40:	mov	x1, #0x400000004           	// #17179869188
     a44:	str	x0, [x19, #48]
     a48:	stp	x2, x1, [x19, #72]
     a4c:	str	xzr, [x19, #96]
     a50:	mov	w0, #0x0                   	// #0
     a54:	str	wzr, [x19, #88]
     a58:	ldp	x19, x20, [sp, #16]
     a5c:	ldp	x29, x30, [sp], #32
     a60:	ret
     a64:	ldr	x0, [x19, #32]
     a68:	mov	x1, x20
     a6c:	bl	860 <strcmp@plt>
     a70:	cbnz	w0, a90 <gconv_init@@Base+0x88>
     a74:	mov	x1, #0x1                   	// #1
     a78:	mov	x0, #0xffffffffffffffff    	// #-1
     a7c:	mov	x2, #0x400000004           	// #17179869188
     a80:	movk	x1, #0x2, lsl #32
     a84:	stp	x2, x1, [x19, #72]
     a88:	str	x0, [x19, #96]
     a8c:	b	a50 <gconv_init@@Base+0x48>
     a90:	mov	w0, #0x1                   	// #1
     a94:	b	a58 <gconv_init@@Base+0x50>

0000000000000a98 <gconv@@Base>:
     a98:	stp	x29, x30, [sp, #-240]!
     a9c:	mov	x15, x0
     aa0:	mov	x18, x2
     aa4:	mov	x29, sp
     aa8:	stp	x21, x22, [sp, #32]
     aac:	mov	x21, x1
     ab0:	adrp	x1, 13000 <gconv@@Base+0x12568>
     ab4:	stp	x19, x20, [sp, #16]
     ab8:	mov	x14, x4
     abc:	ldr	w19, [x21, #16]
     ac0:	ldr	x1, [x1, #4048]
     ac4:	stp	x25, x26, [sp, #64]
     ac8:	mov	x20, x3
     acc:	ldr	x0, [x1]
     ad0:	str	x0, [sp, #232]
     ad4:	mov	x0, #0x0                   	// #0
     ad8:	add	x1, x15, #0x68
     adc:	add	x0, x21, #0x30
     ae0:	stp	x27, x28, [sp, #80]
     ae4:	mov	w27, w19
     ae8:	str	xzr, [sp, #104]
     aec:	str	w7, [sp, #124]
     af0:	stp	x5, x1, [sp, #128]
     af4:	str	x0, [sp, #144]
     af8:	tbnz	w19, #0, b20 <gconv@@Base+0x88>
     afc:	ldr	x0, [x15, #104]
     b00:	ldr	x1, [x15, #144]
     b04:	str	x1, [sp, #104]
     b08:	cbz	x0, b20 <gconv@@Base+0x88>
     b0c:	adrp	x0, 13000 <gconv@@Base+0x12568>
     b10:	ldr	x0, [x0, #4024]
     b14:	ldr	x0, [x0]
     b18:	eor	x0, x1, x0
     b1c:	str	x0, [sp, #104]
     b20:	cbnz	w6, 165c <gconv@@Base+0xbc4>
     b24:	ldr	x2, [sp, #128]
     b28:	cmp	x14, #0x0
     b2c:	csel	x1, x21, x14, eq  // eq = none
     b30:	add	x0, sp, #0xc0
     b34:	cmp	x2, #0x0
     b38:	stp	x23, x24, [sp, #48]
     b3c:	csel	x0, x0, xzr, ne  // ne = any
     b40:	ldr	x24, [x1]
     b44:	str	x0, [sp, #152]
     b48:	ldr	w0, [sp, #124]
     b4c:	str	xzr, [sp, #192]
     b50:	ldr	x22, [x18]
     b54:	ldr	x23, [x21, #8]
     b58:	cbnz	w0, fbc <gconv@@Base+0x524>
     b5c:	adrp	x25, 2000 <gconv@@Base+0x1568>
     b60:	add	x25, x25, #0x980
     b64:	add	x0, x25, #0x368
     b68:	mov	x26, x25
     b6c:	mov	x25, x23
     b70:	mov	x23, x15
     b74:	str	x0, [sp, #160]
     b78:	add	x0, sp, #0xd8
     b7c:	str	x0, [sp, #168]
     b80:	mov	w12, w27
     b84:	ldr	x0, [x23, #96]
     b88:	str	x14, [sp, #112]
     b8c:	mov	x27, x22
     b90:	mov	x22, x24
     b94:	mov	x24, x18
     b98:	ldr	x28, [sp, #104]
     b9c:	cbz	x0, c9c <gconv@@Base+0x204>
     ba0:	stp	x27, x22, [sp, #208]
     ba4:	cmp	x20, x27
     ba8:	b.eq	178c <gconv@@Base+0xcf4>  // b.none
     bac:	adrp	x7, 13000 <gconv@@Base+0x12568>
     bb0:	mov	x19, x22
     bb4:	mov	x0, x27
     bb8:	mov	w11, #0x4                   	// #4
     bbc:	ldr	x7, [x7, #4016]
     bc0:	add	x2, x0, #0x4
     bc4:	cmp	x20, x2
     bc8:	b.cc	eec <gconv@@Base+0x454>  // b.lo, b.ul, b.last
     bcc:	cmp	x25, x19
     bd0:	b.ls	e68 <gconv@@Base+0x3d0>  // b.plast
     bd4:	ldr	w0, [x0]
     bd8:	mov	w2, #0x5c                  	// #92
     bdc:	cmp	w0, #0x7f
     be0:	ccmp	w0, w2, #0x4, ls  // ls = plast
     be4:	b.eq	d60 <gconv@@Base+0x2c8>  // b.none
     be8:	add	x1, x19, #0x1
     bec:	str	x1, [sp, #216]
     bf0:	strb	w0, [x19]
     bf4:	ldr	x19, [sp, #216]
     bf8:	ldr	x0, [sp, #208]
     bfc:	add	x0, x0, #0x4
     c00:	str	x0, [sp, #208]
     c04:	cmp	x20, x0
     c08:	b.ne	bc0 <gconv@@Base+0x128>  // b.any
     c0c:	nop
     c10:	str	x0, [x24]
     c14:	ldr	x0, [sp, #112]
     c18:	cbnz	x0, d20 <gconv@@Base+0x288>
     c1c:	ldp	w1, w0, [x21, #16]
     c20:	add	w0, w0, #0x1
     c24:	str	w0, [x21, #20]
     c28:	tbnz	w1, #0, 1150 <gconv@@Base+0x6b8>
     c2c:	cmp	x22, x19
     c30:	b.cs	11dc <gconv@@Base+0x744>  // b.hs, b.nlast
     c34:	ldr	x1, [x21]
     c38:	mov	x0, x28
     c3c:	str	w11, [sp, #104]
     c40:	str	x1, [sp, #200]
     c44:	bl	870 <_dl_mcount_wrapper_check@plt>
     c48:	ldp	x5, x0, [sp, #128]
     c4c:	mov	x3, x19
     c50:	ldr	w7, [sp, #124]
     c54:	add	x2, sp, #0xc8
     c58:	ldr	x1, [sp, #144]
     c5c:	mov	w6, #0x0                   	// #0
     c60:	mov	x4, #0x0                   	// #0
     c64:	blr	x28
     c68:	mov	w7, w0
     c6c:	ldr	w11, [sp, #104]
     c70:	cmp	w0, #0x4
     c74:	b.eq	ef8 <gconv@@Base+0x460>  // b.none
     c78:	ldr	x13, [sp, #200]
     c7c:	cmp	x13, x19
     c80:	b.ne	10cc <gconv@@Base+0x634>  // b.any
     c84:	cbnz	w7, 1724 <gconv@@Base+0xc8c>
     c88:	ldr	x0, [x23, #96]
     c8c:	ldr	w12, [x21, #16]
     c90:	ldr	x22, [x21]
     c94:	ldr	x27, [x24]
     c98:	cbnz	x0, ba0 <gconv@@Base+0x108>
     c9c:	cmp	x20, x27
     ca0:	b.eq	1be4 <gconv@@Base+0x114c>  // b.none
     ca4:	add	x7, x22, #0x4
     ca8:	cmp	x25, x7
     cac:	b.cc	14a0 <gconv@@Base+0xa08>  // b.lo, b.ul, b.last
     cb0:	and	w12, w12, #0x2
     cb4:	mov	x6, x27
     cb8:	mov	x19, x22
     cbc:	add	x10, x26, #0x80
     cc0:	add	x18, x26, #0x100
     cc4:	add	x15, x26, #0x1d0
     cc8:	add	x9, x26, #0x180
     ccc:	mov	w11, #0x4                   	// #4
     cd0:	mov	w14, #0xdf                  	// #223
     cd4:	mov	w8, #0xac00                	// #44032
     cd8:	mov	w13, #0x20a9                	// #8361
     cdc:	ldrb	w1, [x6]
     ce0:	cmp	w1, #0x7f
     ce4:	b.hi	e74 <gconv@@Base+0x3dc>  // b.pmore
     ce8:	cmp	w1, #0x5c
     cec:	add	x6, x6, #0x1
     cf0:	csel	w1, w1, w13, ne  // ne = any
     cf4:	str	w1, [x19]
     cf8:	mov	x19, x7
     cfc:	cmp	x20, x6
     d00:	b.eq	d14 <gconv@@Base+0x27c>  // b.none
     d04:	add	x7, x19, #0x4
     d08:	cmp	x25, x7
     d0c:	b.cs	cdc <gconv@@Base+0x244>  // b.hs, b.nlast
     d10:	mov	w11, #0x5                   	// #5
     d14:	str	x6, [x24]
     d18:	ldr	x0, [sp, #112]
     d1c:	cbz	x0, c1c <gconv@@Base+0x184>
     d20:	mov	w26, w11
     d24:	ldp	x23, x24, [sp, #48]
     d28:	str	x19, [x0]
     d2c:	adrp	x0, 13000 <gconv@@Base+0x12568>
     d30:	ldr	x0, [x0, #4048]
     d34:	ldr	x1, [sp, #232]
     d38:	ldr	x0, [x0]
     d3c:	eor	x0, x1, x0
     d40:	cbnz	x0, 268c <gconv@@Base+0x1bf4>
     d44:	mov	w0, w26
     d48:	ldp	x19, x20, [sp, #16]
     d4c:	ldp	x21, x22, [sp, #32]
     d50:	ldp	x25, x26, [sp, #64]
     d54:	ldp	x27, x28, [sp, #80]
     d58:	ldp	x29, x30, [sp], #240
     d5c:	ret
     d60:	mov	w3, #0xffff5400            	// #-44032
     d64:	add	w3, w0, w3
     d68:	mov	w1, #0x2ba3                	// #11171
     d6c:	cmp	w3, w1
     d70:	b.hi	e10 <gconv@@Base+0x378>  // b.pmore
     d74:	add	x0, x19, #0x2
     d78:	cmp	x25, x0
     d7c:	b.cc	e68 <gconv@@Base+0x3d0>  // b.lo, b.ul, b.last
     d80:	lsr	w0, w3, #2
     d84:	mov	w4, #0x4925                	// #18725
     d88:	movk	w4, #0x2492, lsl #16
     d8c:	mov	w2, #0x5c4d                	// #23629
     d90:	mov	w1, #0xc31                 	// #3121
     d94:	movk	w2, #0xdee9, lsl #16
     d98:	umull	x0, w0, w4
     d9c:	movk	w1, #0x30c3, lsl #16
     da0:	umull	x2, w3, w2
     da4:	add	x5, x26, #0x2a8
     da8:	mov	w6, #0x15                  	// #21
     dac:	add	x4, x26, #0x250
     db0:	lsr	x0, x0, #32
     db4:	lsr	x2, x2, #41
     db8:	smull	x1, w0, w1
     dbc:	ldr	w5, [x5, x2, lsl #2]
     dc0:	lsl	w2, w0, #3
     dc4:	sub	w2, w2, w0
     dc8:	lsr	x1, x1, #34
     dcc:	sub	w3, w3, w2, lsl #2
     dd0:	add	x2, x26, #0x2f8
     dd4:	msub	w0, w1, w6, w0
     dd8:	add	x6, x19, #0x1
     ddc:	ldr	w2, [x2, x3, lsl #2]
     de0:	str	x6, [sp, #216]
     de4:	ldr	w0, [x4, x0, lsl #2]
     de8:	add	w0, w0, w5
     dec:	add	w0, w0, w2
     df0:	lsr	w1, w0, #8
     df4:	strb	w1, [x19]
     df8:	ldr	x1, [sp, #216]
     dfc:	add	x2, x1, #0x1
     e00:	str	x2, [sp, #216]
     e04:	strb	w0, [x1]
     e08:	ldr	x19, [sp, #216]
     e0c:	b	bf8 <gconv@@Base+0x160>
     e10:	mov	w1, #0xffffcecf            	// #-12593
     e14:	add	w1, w0, w1
     e18:	cmp	w1, #0x32
     e1c:	b.hi	eac <gconv@@Base+0x414>  // b.pmore
     e20:	ldr	x2, [sp, #160]
     e24:	add	x0, x19, #0x2
     e28:	cmp	x25, x0
     e2c:	ldrh	w1, [x2, w1, uxtw #1]
     e30:	b.cc	e68 <gconv@@Base+0x3d0>  // b.lo, b.ul, b.last
     e34:	add	x0, x19, #0x1
     e38:	str	x0, [sp, #216]
     e3c:	lsr	w0, w1, #8
     e40:	strb	w0, [x19]
     e44:	ldr	x0, [sp, #216]
     e48:	add	x2, x0, #0x1
     e4c:	str	x2, [sp, #216]
     e50:	strb	w1, [x0]
     e54:	ldr	x19, [sp, #216]
     e58:	b	bf8 <gconv@@Base+0x160>
     e5c:	sub	x0, x25, x19
     e60:	cmp	x0, #0x1
     e64:	b.hi	1594 <gconv@@Base+0xafc>  // b.pmore
     e68:	mov	w11, #0x5                   	// #5
     e6c:	ldr	x0, [sp, #208]
     e70:	b	c10 <gconv@@Base+0x178>
     e74:	add	w0, w1, #0x7c
     e78:	and	w0, w0, #0xff
     e7c:	cmp	w0, #0x75
     e80:	ccmp	w1, w14, #0x4, ls  // ls = plast
     e84:	b.ne	f08 <gconv@@Base+0x470>  // b.any
     e88:	ldr	x1, [sp, #152]
     e8c:	cbz	x1, fb0 <gconv@@Base+0x518>
     e90:	cbz	w12, fb0 <gconv@@Base+0x518>
     e94:	ldr	x0, [x1]
     e98:	add	x6, x6, #0x1
     e9c:	mov	w11, #0x6                   	// #6
     ea0:	add	x0, x0, #0x1
     ea4:	str	x0, [x1]
     ea8:	b	cfc <gconv@@Base+0x264>
     eac:	mov	w18, #0xffff0700            	// #-63744
     eb0:	add	w3, w0, w18
     eb4:	cmp	w3, #0x10b
     eb8:	mov	w30, #0xffffb200            	// #-19968
     ebc:	add	w1, w0, w30
     ec0:	mov	w3, #0x51a5                	// #20901
     ec4:	ccmp	w1, w3, #0x0, hi  // hi = pmore
     ec8:	b.ls	11e4 <gconv@@Base+0x74c>  // b.plast
     ecc:	mov	w1, #0x20a9                	// #8361
     ed0:	cmp	w0, w1
     ed4:	b.ne	1188 <gconv@@Base+0x6f0>  // b.any
     ed8:	add	x0, x19, #0x1
     edc:	str	x0, [sp, #216]
     ee0:	strb	w2, [x19]
     ee4:	ldr	x19, [sp, #216]
     ee8:	b	bf8 <gconv@@Base+0x160>
     eec:	mov	w11, #0x7                   	// #7
     ef0:	ldr	x0, [sp, #208]
     ef4:	b	c10 <gconv@@Base+0x178>
     ef8:	mov	w7, w11
     efc:	cmp	w11, #0x5
     f00:	b.ne	c84 <gconv@@Base+0x1ec>  // b.any
     f04:	b	c88 <gconv@@Base+0x1f0>
     f08:	sub	w0, w1, #0xd4
     f0c:	cmp	w0, #0x4
     f10:	b.ls	e88 <gconv@@Base+0x3f0>  // b.plast
     f14:	add	x5, x6, #0x1
     f18:	cmp	x20, x5
     f1c:	b.ls	1718 <gconv@@Base+0xc80>  // b.plast
     f20:	ldrb	w2, [x6, #1]
     f24:	cmp	w1, #0xd3
     f28:	add	w0, w2, w1, lsl #8
     f2c:	b.hi	1730 <gconv@@Base+0xc98>  // b.pmore
     f30:	ubfx	x1, x0, #10, #5
     f34:	and	x3, x0, #0x1f
     f38:	ubfx	x0, x0, #5, #5
     f3c:	ldr	w16, [x26, x1, lsl #2]
     f40:	ldr	w0, [x10, x0, lsl #2]
     f44:	ldr	w3, [x18, x3, lsl #2]
     f48:	sxtw	x1, w16
     f4c:	cmn	w0, #0x1
     f50:	ccmn	x1, #0x1, #0x4, ne  // ne = any
     f54:	sxtw	x2, w0
     f58:	sxtw	x4, w3
     f5c:	ccmn	x4, #0x1, #0x4, ne  // ne = any
     f60:	b.eq	1298 <gconv@@Base+0x800>  // b.none
     f64:	cmp	x1, #0x0
     f68:	cset	w17, gt
     f6c:	cmp	x2, #0x0
     f70:	cset	w30, gt
     f74:	cmp	w17, #0x0
     f78:	ccmp	w30, #0x0, #0x4, ne  // ne = any
     f7c:	b.eq	1268 <gconv@@Base+0x7d0>  // b.none
     f80:	sub	x1, x1, #0x1
     f84:	sub	x2, x2, #0x1
     f88:	add	w3, w3, w8
     f8c:	add	x0, x1, x1, lsl #2
     f90:	add	x0, x1, x0, lsl #2
     f94:	add	x0, x0, x2
     f98:	lsl	w1, w0, #3
     f9c:	sub	w0, w1, w0
     fa0:	add	w1, w3, w0, lsl #2
     fa4:	cbz	w1, 187c <gconv@@Base+0xde4>
     fa8:	add	x6, x6, #0x2
     fac:	b	cf4 <gconv@@Base+0x25c>
     fb0:	mov	w11, #0x6                   	// #6
     fb4:	str	x6, [x24]
     fb8:	b	d18 <gconv@@Base+0x280>
     fbc:	ldr	x7, [x21, #32]
     fc0:	ldr	w6, [x7]
     fc4:	ands	w0, w6, #0x7
     fc8:	b.eq	b5c <gconv@@Base+0xc4>  // b.none
     fcc:	cbnz	x14, 26d8 <gconv@@Base+0x1c40>
     fd0:	ldr	x1, [x15, #96]
     fd4:	mov	w8, w0
     fd8:	cbz	x1, 12bc <gconv@@Base+0x824>
     fdc:	stp	x22, x24, [sp, #208]
     fe0:	cmp	w0, #0x4
     fe4:	b.hi	267c <gconv@@Base+0x1be4>  // b.pmore
     fe8:	mov	w25, w0
     fec:	cbz	w0, 1b98 <gconv@@Base+0x1100>
     ff0:	add	x28, sp, #0xe0
     ff4:	add	x4, x7, #0x3
     ff8:	mov	x0, #0x1                   	// #1
     ffc:	add	x1, x28, x0
    1000:	ldrb	w3, [x4, x0]
    1004:	cmp	x0, x25
    1008:	add	x0, x0, #0x1
    100c:	sturb	w3, [x1, #-1]
    1010:	b.ne	ffc <gconv@@Base+0x564>  // b.any
    1014:	mov	x0, #0x4                   	// #4
    1018:	sub	x0, x0, x25
    101c:	add	x0, x22, x0
    1020:	cmp	x20, x0
    1024:	b.cc	1c48 <gconv@@Base+0x11b0>  // b.lo, b.ul, b.last
    1028:	add	x0, x22, #0x1
    102c:	add	x28, sp, #0xe0
    1030:	cmp	x24, x23
    1034:	b.cs	1870 <gconv@@Base+0xdd8>  // b.hs, b.nlast
    1038:	add	x25, x25, #0x1
    103c:	str	x0, [sp, #208]
    1040:	add	x4, x28, x25
    1044:	cmp	x25, #0x3
    1048:	ldurb	w1, [x0, #-1]
    104c:	ccmp	x20, x0, #0x0, ls  // ls = plast
    1050:	add	x0, x0, #0x1
    1054:	sturb	w1, [x4, #-1]
    1058:	b.hi	1038 <gconv@@Base+0x5a0>  // b.pmore
    105c:	ldr	w0, [sp, #224]
    1060:	mov	w1, #0x5c                  	// #92
    1064:	str	x28, [sp, #208]
    1068:	cmp	w0, #0x7f
    106c:	ccmp	w0, w1, #0x4, ls  // ls = plast
    1070:	b.eq	180c <gconv@@Base+0xd74>  // b.none
    1074:	add	x1, x24, #0x1
    1078:	str	x1, [sp, #216]
    107c:	strb	w0, [x24]
    1080:	ldr	x0, [sp, #208]
    1084:	add	x0, x0, #0x4
    1088:	str	x0, [sp, #208]
    108c:	cmp	x0, x28
    1090:	b.eq	1bfc <gconv@@Base+0x1164>  // b.none
    1094:	ldr	w1, [x7]
    1098:	sub	x0, x0, x28
    109c:	and	x2, x1, #0x7
    10a0:	cmp	x0, x2
    10a4:	b.le	26b8 <gconv@@Base+0x1c20>
    10a8:	ldr	x22, [x18]
    10ac:	sub	x0, x0, x2
    10b0:	ldr	w27, [x21, #16]
    10b4:	and	w1, w1, #0xfffffff8
    10b8:	add	x22, x22, x0
    10bc:	str	x22, [x18]
    10c0:	ldr	x24, [sp, #216]
    10c4:	str	w1, [x7]
    10c8:	b	b5c <gconv@@Base+0xc4>
    10cc:	ldr	w19, [x21, #16]
    10d0:	str	x27, [x24]
    10d4:	ldr	x0, [x23, #96]
    10d8:	cbz	x0, 1354 <gconv@@Base+0x8bc>
    10dc:	stp	x27, x22, [sp, #208]
    10e0:	cmp	x20, x27
    10e4:	b.eq	20d4 <gconv@@Base+0x163c>  // b.none
    10e8:	adrp	x11, 13000 <gconv@@Base+0x12568>
    10ec:	mov	x6, x22
    10f0:	mov	x2, #0x4                   	// #4
    10f4:	ldr	x11, [x11, #4016]
    10f8:	add	x0, x27, #0x4
    10fc:	cmp	x20, x0
    1100:	b.cc	17dc <gconv@@Base+0xd44>  // b.lo, b.ul, b.last
    1104:	cmp	x13, x6
    1108:	b.ls	16f0 <gconv@@Base+0xc58>  // b.plast
    110c:	ldr	w0, [x27]
    1110:	mov	w1, #0x5c                  	// #92
    1114:	cmp	w0, #0x7f
    1118:	ccmp	w0, w1, #0x4, ls  // ls = plast
    111c:	b.eq	13f0 <gconv@@Base+0x958>  // b.none
    1120:	add	x1, x6, #0x1
    1124:	str	x1, [sp, #216]
    1128:	strb	w0, [x6]
    112c:	ldr	x6, [sp, #216]
    1130:	ldr	x27, [sp, #208]
    1134:	add	x27, x27, #0x4
    1138:	str	x27, [sp, #208]
    113c:	cmp	x20, x27
    1140:	b.ne	10f8 <gconv@@Base+0x660>  // b.any
    1144:	str	x20, [x24]
    1148:	ldr	x13, [sp, #200]
    114c:	b	13dc <gconv@@Base+0x944>
    1150:	ldr	x2, [sp, #128]
    1154:	mov	w26, w11
    1158:	ldr	x1, [sp, #192]
    115c:	mov	x18, x24
    1160:	ldr	x0, [x2]
    1164:	str	x19, [x21]
    1168:	add	x0, x0, x1
    116c:	str	x0, [x2]
    1170:	ldr	w0, [sp, #124]
    1174:	cmp	w0, #0x0
    1178:	ccmp	w26, #0x7, #0x0, ne  // ne = any
    117c:	b.eq	1a94 <gconv@@Base+0xffc>  // b.none
    1180:	ldp	x23, x24, [sp, #48]
    1184:	b	d2c <gconv@@Base+0x294>
    1188:	mov	w4, #0x0                   	// #0
    118c:	mov	w3, #0x3dc                 	// #988
    1190:	b	11a0 <gconv@@Base+0x708>
    1194:	sub	w3, w2, #0x1
    1198:	cmp	w3, w4
    119c:	b.lt	11cc <gconv@@Base+0x734>  // b.tstop
    11a0:	add	w2, w4, w3
    11a4:	asr	w2, w2, #1
    11a8:	sbfiz	x1, x2, #2, #32
    11ac:	add	x5, x7, x1
    11b0:	ldrh	w1, [x7, x1]
    11b4:	cmp	w0, w1
    11b8:	b.cc	1194 <gconv@@Base+0x6fc>  // b.lo, b.ul, b.last
    11bc:	b.ls	14b4 <gconv@@Base+0xa1c>  // b.plast
    11c0:	add	w4, w2, #0x1
    11c4:	cmp	w3, w4
    11c8:	b.ge	11a0 <gconv@@Base+0x708>  // b.tcont
    11cc:	mov	w1, #0x1c00                	// #7168
    11d0:	cmp	w1, w0, lsr #7
    11d4:	b.eq	bf8 <gconv@@Base+0x160>  // b.none
    11d8:	b	163c <gconv@@Base+0xba4>
    11dc:	mov	w7, w11
    11e0:	b	c84 <gconv@@Base+0x1ec>
    11e4:	adrp	x5, 13000 <gconv@@Base+0x12568>
    11e8:	mov	w4, #0x0                   	// #0
    11ec:	mov	w3, #0x1317                	// #4887
    11f0:	ldr	x5, [x5, #4032]
    11f4:	b	1204 <gconv@@Base+0x76c>
    11f8:	sub	w3, w1, #0x1
    11fc:	cmp	w3, w4
    1200:	b.lt	1230 <gconv@@Base+0x798>  // b.tstop
    1204:	add	w1, w4, w3
    1208:	asr	w1, w1, #1
    120c:	sbfiz	x2, x1, #2, #32
    1210:	add	x6, x5, x2
    1214:	ldrh	w2, [x5, x2]
    1218:	cmp	w0, w2
    121c:	b.cc	11f8 <gconv@@Base+0x760>  // b.lo, b.ul, b.last
    1220:	b.ls	e5c <gconv@@Base+0x3c4>  // b.plast
    1224:	add	w4, w1, #0x1
    1228:	cmp	w3, w4
    122c:	b.ge	1204 <gconv@@Base+0x76c>  // b.tcont
    1230:	ldr	x0, [sp, #152]
    1234:	cbz	x0, 1fb8 <gconv@@Base+0x1520>
    1238:	ldr	w0, [x21, #16]
    123c:	tbnz	w0, #3, 1b34 <gconv@@Base+0x109c>
    1240:	ldr	x0, [sp, #208]
    1244:	tbz	w12, #1, 1654 <gconv@@Base+0xbbc>
    1248:	ldr	x2, [sp, #152]
    124c:	add	x0, x0, #0x4
    1250:	mov	w11, #0x6                   	// #6
    1254:	str	x0, [sp, #208]
    1258:	ldr	x1, [x2]
    125c:	add	x1, x1, #0x1
    1260:	str	x1, [x2]
    1264:	b	c04 <gconv@@Base+0x16c>
    1268:	cmp	x2, #0x0
    126c:	ccmp	w17, #0x0, #0x4, eq  // eq = none
    1270:	b.eq	1288 <gconv@@Base+0x7f0>  // b.none
    1274:	cbnz	x4, 1298 <gconv@@Base+0x800>
    1278:	sub	x1, x1, #0x1
    127c:	ldr	w1, [x9, x1, lsl #2]
    1280:	cbnz	w1, fa8 <gconv@@Base+0x510>
    1284:	b	187c <gconv@@Base+0xde4>
    1288:	cmp	x1, #0x0
    128c:	ccmp	w30, #0x0, #0x4, eq  // eq = none
    1290:	b.eq	16ac <gconv@@Base+0xc14>  // b.none
    1294:	cbz	x4, 18a0 <gconv@@Base+0xe08>
    1298:	ldr	x1, [sp, #152]
    129c:	cbz	x1, fb0 <gconv@@Base+0x518>
    12a0:	cbz	w12, fb0 <gconv@@Base+0x518>
    12a4:	ldr	x0, [x1]
    12a8:	mov	x6, x5
    12ac:	mov	w11, #0x6                   	// #6
    12b0:	add	x0, x0, #0x1
    12b4:	str	x0, [x1]
    12b8:	b	d04 <gconv@@Base+0x26c>
    12bc:	cmp	w0, #0x4
    12c0:	b.hi	2614 <gconv@@Base+0x1b7c>  // b.pmore
    12c4:	add	x9, x24, #0x4
    12c8:	cbz	w0, 1a14 <gconv@@Base+0xf7c>
    12cc:	ldrb	w1, [x7, #4]
    12d0:	tst	w6, #0x6
    12d4:	strb	w1, [sp, #224]
    12d8:	mov	x1, #0x1                   	// #1
    12dc:	b.eq	12ec <gconv@@Base+0x854>  // b.none
    12e0:	ldrb	w2, [x7, #5]
    12e4:	mov	x1, #0x2                   	// #2
    12e8:	strb	w2, [sp, #225]
    12ec:	cmp	x23, x9
    12f0:	b.cc	1870 <gconv@@Base+0xdd8>  // b.lo, b.ul, b.last
    12f4:	add	x28, sp, #0xe0
    12f8:	ldrb	w3, [x22]
    12fc:	add	x2, x1, #0x1
    1300:	strb	w3, [x28, x1]
    1304:	ldrb	w1, [sp, #224]
    1308:	cmp	w1, #0x7f
    130c:	b.hi	1ba4 <gconv@@Base+0x110c>  // b.pmore
    1310:	cmp	w1, #0x5c
    1314:	mov	x0, #0x1                   	// #1
    1318:	b.ne	1320 <gconv@@Base+0x888>  // b.any
    131c:	mov	w1, #0x20a9                	// #8361
    1320:	str	w1, [x24]
    1324:	mov	x24, x9
    1328:	ldr	w6, [x7]
    132c:	and	w8, w6, #0x7
    1330:	cmp	x8, x0
    1334:	b.ge	27b0 <gconv@@Base+0x1d18>  // b.tcont
    1338:	sub	x8, x0, x8
    133c:	ldr	w27, [x21, #16]
    1340:	add	x22, x22, x8
    1344:	str	x22, [x18]
    1348:	and	w6, w6, #0xfffffff8
    134c:	str	w6, [x7]
    1350:	b	b5c <gconv@@Base+0xc4>
    1354:	cmp	x20, x27
    1358:	b.eq	20d4 <gconv@@Base+0x163c>  // b.none
    135c:	add	x11, x22, #0x4
    1360:	mov	x6, x22
    1364:	cmp	x13, x11
    1368:	mov	w8, #0x4                   	// #4
    136c:	b.cc	1f4c <gconv@@Base+0x14b4>  // b.lo, b.ul, b.last
    1370:	add	x10, x26, #0x100
    1374:	and	w12, w19, #0x2
    1378:	add	x19, x26, #0x1d0
    137c:	add	x15, x26, #0x80
    1380:	mov	x3, x19
    1384:	mov	x19, x10
    1388:	mov	w10, w8
    138c:	add	x0, x26, #0x180
    1390:	ldr	x8, [sp, #152]
    1394:	mov	w14, #0xdf                  	// #223
    1398:	mov	w9, #0x20a9                	// #8361
    139c:	str	x0, [sp, #104]
    13a0:	ldrb	w1, [x27]
    13a4:	cmp	w1, #0x7f
    13a8:	b.hi	16cc <gconv@@Base+0xc34>  // b.pmore
    13ac:	cmp	w1, #0x5c
    13b0:	add	x27, x27, #0x1
    13b4:	csel	w1, w1, w9, ne  // ne = any
    13b8:	str	w1, [x6]
    13bc:	mov	x6, x11
    13c0:	cmp	x20, x27
    13c4:	b.eq	217c <gconv@@Base+0x16e4>  // b.none
    13c8:	add	x11, x6, #0x4
    13cc:	cmp	x13, x11
    13d0:	b.cs	13a0 <gconv@@Base+0x908>  // b.hs, b.nlast
    13d4:	mov	x2, #0x5                   	// #5
    13d8:	str	x27, [x24]
    13dc:	cmp	x6, x13
    13e0:	b.ne	1d14 <gconv@@Base+0x127c>  // b.any
    13e4:	cmp	x2, #0x5
    13e8:	b.eq	1700 <gconv@@Base+0xc68>  // b.none
    13ec:	b	17ec <gconv@@Base+0xd54>
    13f0:	mov	w9, #0xffff5400            	// #-44032
    13f4:	add	w3, w0, w9
    13f8:	mov	w4, #0x2ba3                	// #11171
    13fc:	cmp	w3, w4
    1400:	b.hi	1548 <gconv@@Base+0xab0>  // b.pmore
    1404:	add	x0, x6, #0x2
    1408:	cmp	x13, x0
    140c:	b.cc	16f0 <gconv@@Base+0xc58>  // b.lo, b.ul, b.last
    1410:	lsr	w0, w3, #2
    1414:	mov	w5, #0x4925                	// #18725
    1418:	movk	w5, #0x2492, lsl #16
    141c:	mov	w4, #0x5c4d                	// #23629
    1420:	mov	w1, #0xc31                 	// #3121
    1424:	movk	w4, #0xdee9, lsl #16
    1428:	umull	x0, w0, w5
    142c:	movk	w1, #0x30c3, lsl #16
    1430:	umull	x4, w3, w4
    1434:	add	x9, x26, #0x2a8
    1438:	mov	w8, #0x15                  	// #21
    143c:	add	x5, x26, #0x250
    1440:	lsr	x0, x0, #32
    1444:	lsr	x4, x4, #41
    1448:	smull	x1, w0, w1
    144c:	ldr	w9, [x9, x4, lsl #2]
    1450:	lsl	w4, w0, #3
    1454:	sub	w4, w4, w0
    1458:	lsr	x1, x1, #34
    145c:	sub	w3, w3, w4, lsl #2
    1460:	add	x4, x26, #0x2f8
    1464:	msub	w0, w1, w8, w0
    1468:	add	x8, x6, #0x1
    146c:	ldr	w3, [x4, x3, lsl #2]
    1470:	str	x8, [sp, #216]
    1474:	ldr	w0, [x5, x0, lsl #2]
    1478:	add	w0, w0, w9
    147c:	add	w0, w0, w3
    1480:	lsr	w1, w0, #8
    1484:	strb	w1, [x6]
    1488:	ldr	x1, [sp, #216]
    148c:	add	x3, x1, #0x1
    1490:	str	x3, [sp, #216]
    1494:	strb	w0, [x1]
    1498:	ldr	x6, [sp, #216]
    149c:	b	1130 <gconv@@Base+0x698>
    14a0:	mov	x6, x27
    14a4:	mov	x19, x22
    14a8:	mov	w11, #0x5                   	// #5
    14ac:	str	x6, [x24]
    14b0:	b	d18 <gconv@@Base+0x280>
    14b4:	sub	x0, x25, x19
    14b8:	cmp	x0, #0x1
    14bc:	b.ls	e68 <gconv@@Base+0x3d0>  // b.plast
    14c0:	ldrb	w1, [x5, #2]
    14c4:	ldrb	w0, [x5, #3]
    14c8:	strb	w1, [x19]
    14cc:	strb	w0, [x19, #1]
    14d0:	ldr	x2, [sp, #216]
    14d4:	ldrb	w3, [x2]
    14d8:	cmp	w3, #0x22
    14dc:	b.eq	1630 <gconv@@Base+0xb98>  // b.none
    14e0:	ldrb	w0, [x2, #1]
    14e4:	cmp	w3, #0x49
    14e8:	add	w1, w3, #0x176
    14ec:	b.ls	1540 <gconv@@Base+0xaa8>  // b.plast
    14f0:	add	w4, w0, #0x5e
    14f4:	tst	x1, #0x1
    14f8:	and	w4, w4, #0xff
    14fc:	mov	w3, #0x10                  	// #16
    1500:	csel	w0, w4, w0, ne  // ne = any
    1504:	strb	w0, [x2, #1]
    1508:	mov	w2, #0x22                  	// #34
    150c:	lsr	w1, w1, #1
    1510:	ldr	x4, [sp, #216]
    1514:	ldrb	w0, [x4, #1]
    1518:	cmp	w0, #0x6f
    151c:	csel	w2, w3, w2, cc  // cc = lo, ul, last
    1520:	add	w0, w0, w2
    1524:	strb	w0, [x4, #1]
    1528:	ldr	x0, [sp, #216]
    152c:	strb	w1, [x0]
    1530:	ldr	x19, [sp, #216]
    1534:	add	x19, x19, #0x2
    1538:	str	x19, [sp, #216]
    153c:	b	bf8 <gconv@@Base+0x160>
    1540:	add	w1, w3, #0x191
    1544:	b	14f0 <gconv@@Base+0xa58>
    1548:	mov	w8, #0xffffcecf            	// #-12593
    154c:	add	w3, w0, w8
    1550:	cmp	w3, #0x32
    1554:	b.hi	179c <gconv@@Base+0xd04>  // b.pmore
    1558:	ldr	x1, [sp, #160]
    155c:	add	x0, x6, #0x2
    1560:	cmp	x13, x0
    1564:	ldrh	w1, [x1, w3, uxtw #1]
    1568:	b.cc	16f0 <gconv@@Base+0xc58>  // b.lo, b.ul, b.last
    156c:	add	x0, x6, #0x1
    1570:	str	x0, [sp, #216]
    1574:	lsr	w0, w1, #8
    1578:	strb	w0, [x6]
    157c:	ldr	x0, [sp, #216]
    1580:	add	x3, x0, #0x1
    1584:	str	x3, [sp, #216]
    1588:	strb	w1, [x0]
    158c:	ldr	x6, [sp, #216]
    1590:	b	1130 <gconv@@Base+0x698>
    1594:	ldrb	w2, [x6, #2]
    1598:	mov	w8, #0x5e                  	// #94
    159c:	ldrb	w1, [x6, #3]
    15a0:	mov	w0, #0x415d                	// #16733
    15a4:	strb	w2, [x19]
    15a8:	movk	w0, #0xae4c, lsl #16
    15ac:	strb	w1, [x19, #1]
    15b0:	mov	w5, #0xbc                  	// #188
    15b4:	mov	w2, #0x43                  	// #67
    15b8:	mov	w4, #0x31                  	// #49
    15bc:	ldr	x3, [sp, #216]
    15c0:	ldrb	w1, [x3]
    15c4:	sub	w1, w1, #0x4a
    15c8:	strb	w1, [x3]
    15cc:	ldr	x3, [sp, #216]
    15d0:	ldrb	w1, [x3, #1]
    15d4:	sub	w1, w1, #0x21
    15d8:	strb	w1, [x3, #1]
    15dc:	ldr	x3, [sp, #216]
    15e0:	ldrb	w6, [x3, #1]
    15e4:	ldrb	w1, [x3]
    15e8:	madd	w1, w1, w8, w6
    15ec:	umull	x0, w1, w0
    15f0:	lsr	x0, x0, #39
    15f4:	sub	w6, w0, #0x20
    15f8:	strb	w6, [x3]
    15fc:	ldr	x3, [sp, #216]
    1600:	msub	w0, w0, w5, w1
    1604:	strb	w0, [x3, #1]
    1608:	ldr	x3, [sp, #216]
    160c:	ldrb	w0, [x3, #1]
    1610:	cmp	w0, #0x4d
    1614:	csel	w1, w2, w4, hi  // hi = pmore
    1618:	add	w0, w0, w1
    161c:	strb	w0, [x3, #1]
    1620:	ldr	x19, [sp, #216]
    1624:	add	x19, x19, #0x2
    1628:	str	x19, [sp, #216]
    162c:	b	bf8 <gconv@@Base+0x160>
    1630:	ldrb	w0, [x2, #1]
    1634:	cmp	w0, #0x68
    1638:	b.ls	1540 <gconv@@Base+0xaa8>  // b.plast
    163c:	ldr	x0, [sp, #152]
    1640:	cbz	x0, 23ac <gconv@@Base+0x1914>
    1644:	ldr	w0, [x21, #16]
    1648:	tbnz	w0, #3, 1a48 <gconv@@Base+0xfb0>
    164c:	ldp	x0, x19, [sp, #208]
    1650:	tbnz	w12, #1, 1248 <gconv@@Base+0x7b0>
    1654:	mov	w11, #0x6                   	// #6
    1658:	b	c10 <gconv@@Base+0x178>
    165c:	cbnz	x14, 2694 <gconv@@Base+0x1bfc>
    1660:	ldr	x0, [x21, #32]
    1664:	mov	w26, #0x0                   	// #0
    1668:	str	xzr, [x0]
    166c:	ldr	w0, [x21, #16]
    1670:	tbnz	w0, #0, d2c <gconv@@Base+0x294>
    1674:	ldr	x19, [sp, #104]
    1678:	str	w6, [sp, #112]
    167c:	mov	x0, x19
    1680:	bl	870 <_dl_mcount_wrapper_check@plt>
    1684:	ldp	x5, x0, [sp, #128]
    1688:	mov	x4, #0x0                   	// #0
    168c:	ldr	w6, [sp, #112]
    1690:	mov	x3, #0x0                   	// #0
    1694:	ldr	w7, [sp, #124]
    1698:	mov	x2, #0x0                   	// #0
    169c:	ldr	x1, [sp, #144]
    16a0:	blr	x19
    16a4:	mov	w26, w0
    16a8:	b	d2c <gconv@@Base+0x294>
    16ac:	orr	w0, w16, w0
    16b0:	cmp	w0, #0x0
    16b4:	ccmp	x4, #0x0, #0x4, eq  // eq = none
    16b8:	b.le	1298 <gconv@@Base+0x800>
    16bc:	sub	x4, x4, #0x1
    16c0:	ldr	w1, [x15, x4, lsl #2]
    16c4:	cbnz	w1, fa8 <gconv@@Base+0x510>
    16c8:	b	187c <gconv@@Base+0xde4>
    16cc:	add	w0, w1, #0x7c
    16d0:	and	w0, w0, #0xff
    16d4:	cmp	w0, #0x75
    16d8:	ccmp	w1, w14, #0x4, ls  // ls = plast
    16dc:	b.ne	18b0 <gconv@@Base+0xe18>  // b.any
    16e0:	cbz	x8, 16e8 <gconv@@Base+0xc50>
    16e4:	cbnz	w12, 19fc <gconv@@Base+0xf64>
    16e8:	mov	x2, #0x6                   	// #6
    16ec:	b	13d8 <gconv@@Base+0x940>
    16f0:	ldp	x0, x1, [sp, #200]
    16f4:	str	x1, [x24]
    16f8:	cmp	x0, x6
    16fc:	b.ne	1d14 <gconv@@Base+0x127c>  // b.any
    1700:	cmp	x22, x6
    1704:	b.ne	c84 <gconv@@Base+0x1ec>  // b.any
    1708:	ldr	w0, [x21, #20]
    170c:	sub	w0, w0, #0x1
    1710:	str	w0, [x21, #20]
    1714:	b	c84 <gconv@@Base+0x1ec>
    1718:	mov	w11, #0x7                   	// #7
    171c:	str	x6, [x24]
    1720:	b	d18 <gconv@@Base+0x280>
    1724:	mov	x18, x24
    1728:	mov	w26, w7
    172c:	b	1170 <gconv@@Base+0x6d8>
    1730:	cmp	w2, #0x30
    1734:	b.ls	1298 <gconv@@Base+0x800>  // b.plast
    1738:	sub	w3, w2, #0x7f
    173c:	cmp	w3, #0x11
    1740:	b.ls	1298 <gconv@@Base+0x800>  // b.plast
    1744:	cmp	w2, #0xff
    1748:	b.eq	1298 <gconv@@Base+0x800>  // b.none
    174c:	cmp	w1, #0xd9
    1750:	mov	w3, #0xe8                  	// #232
    1754:	ccmp	w2, w3, #0x0, eq  // eq = none
    1758:	b.hi	1298 <gconv@@Base+0x800>  // b.pmore
    175c:	cmp	w1, #0xda
    1760:	b.eq	208c <gconv@@Base+0x15f4>  // b.none
    1764:	cmp	w2, #0xf1
    1768:	mov	w3, #0xde                  	// #222
    176c:	ccmp	w1, w3, #0x0, hi  // hi = pmore
    1770:	b.eq	1298 <gconv@@Base+0x800>  // b.none
    1774:	and	x1, x1, #0xff
    1778:	and	x2, x2, #0xff
    177c:	bl	988 <__assert_fail@plt+0x108>
    1780:	mov	w1, w0
    1784:	cbnz	w1, fa8 <gconv@@Base+0x510>
    1788:	b	187c <gconv@@Base+0xde4>
    178c:	mov	x19, x22
    1790:	mov	x0, x20
    1794:	mov	w11, #0x4                   	// #4
    1798:	b	c10 <gconv@@Base+0x178>
    179c:	mov	w3, #0xffff0700            	// #-63744
    17a0:	add	w4, w0, w3
    17a4:	cmp	w4, #0x10b
    17a8:	mov	w5, #0xffffb200            	// #-19968
    17ac:	add	w3, w0, w5
    17b0:	mov	w4, #0x51a5                	// #20901
    17b4:	ccmp	w3, w4, #0x0, hi  // hi = pmore
    17b8:	b.ls	1aec <gconv@@Base+0x1054>  // b.plast
    17bc:	mov	w3, #0x20a9                	// #8361
    17c0:	cmp	w0, w3
    17c4:	b.ne	1c08 <gconv@@Base+0x1170>  // b.any
    17c8:	add	x0, x6, #0x1
    17cc:	str	x0, [sp, #216]
    17d0:	strb	w1, [x6]
    17d4:	ldr	x6, [sp, #216]
    17d8:	b	1130 <gconv@@Base+0x698>
    17dc:	ldp	x0, x1, [sp, #200]
    17e0:	str	x1, [x24]
    17e4:	cmp	x0, x6
    17e8:	b.ne	1d14 <gconv@@Base+0x127c>  // b.any
    17ec:	adrp	x3, 2000 <gconv@@Base+0x1568>
    17f0:	adrp	x1, 2000 <gconv@@Base+0x1568>
    17f4:	adrp	x0, 2000 <gconv@@Base+0x1568>
    17f8:	add	x3, x3, #0x978
    17fc:	add	x1, x1, #0x7e8
    1800:	add	x0, x0, #0x918
    1804:	mov	w2, #0x2eb                 	// #747
    1808:	bl	880 <__assert_fail@plt>
    180c:	mov	w9, #0xffff5400            	// #-44032
    1810:	add	w2, w0, w9
    1814:	mov	w3, #0x2ba3                	// #11171
    1818:	cmp	w2, w3
    181c:	b.ls	195c <gconv@@Base+0xec4>  // b.plast
    1820:	mov	w8, #0xffffcecf            	// #-12593
    1824:	add	w2, w0, w8
    1828:	cmp	w2, #0x32
    182c:	b.hi	1c84 <gconv@@Base+0x11ec>  // b.pmore
    1830:	adrp	x0, 2000 <gconv@@Base+0x1568>
    1834:	add	x0, x0, #0x980
    1838:	add	x0, x0, #0x368
    183c:	add	x1, x24, #0x2
    1840:	cmp	x23, x1
    1844:	ldrh	w1, [x0, w2, uxtw #1]
    1848:	b.cc	1870 <gconv@@Base+0xdd8>  // b.lo, b.ul, b.last
    184c:	add	x0, x24, #0x1
    1850:	str	x0, [sp, #216]
    1854:	lsr	w0, w1, #8
    1858:	strb	w0, [x24]
    185c:	ldr	x0, [sp, #216]
    1860:	add	x2, x0, #0x1
    1864:	str	x2, [sp, #216]
    1868:	strb	w1, [x0]
    186c:	b	1080 <gconv@@Base+0x5e8>
    1870:	mov	w26, #0x5                   	// #5
    1874:	ldp	x23, x24, [sp, #48]
    1878:	b	d2c <gconv@@Base+0x294>
    187c:	ldr	x1, [sp, #152]
    1880:	cbz	x1, fb0 <gconv@@Base+0x518>
    1884:	cbz	w12, fb0 <gconv@@Base+0x518>
    1888:	ldr	x0, [x1]
    188c:	add	x6, x6, #0x2
    1890:	mov	w11, #0x6                   	// #6
    1894:	add	x0, x0, #0x1
    1898:	str	x0, [x1]
    189c:	b	cfc <gconv@@Base+0x264>
    18a0:	mov	w4, #0x314e                	// #12622
    18a4:	add	x6, x6, #0x2
    18a8:	add	w1, w0, w4
    18ac:	b	cf4 <gconv@@Base+0x25c>
    18b0:	sub	w0, w1, #0xd4
    18b4:	cmp	w0, #0x4
    18b8:	b.ls	16e0 <gconv@@Base+0xc48>  // b.plast
    18bc:	add	x17, x27, #0x1
    18c0:	cmp	x20, x17
    18c4:	b.ls	20e0 <gconv@@Base+0x1648>  // b.plast
    18c8:	ldrb	w2, [x27, #1]
    18cc:	cmp	w1, #0xd3
    18d0:	add	w0, w2, w1, lsl #8
    18d4:	b.hi	20e8 <gconv@@Base+0x1650>  // b.pmore
    18d8:	ubfx	x2, x0, #5, #5
    18dc:	and	x4, x0, #0x1f
    18e0:	ubfx	x1, x0, #10, #5
    18e4:	ldr	w0, [x15, x2, lsl #2]
    18e8:	ldr	w16, [x19, x4, lsl #2]
    18ec:	ldr	w4, [x26, x1, lsl #2]
    18f0:	sxtw	x5, w0
    18f4:	cmn	w4, #0x1
    18f8:	sxtw	x2, w16
    18fc:	ccmn	x5, #0x1, #0x4, ne  // ne = any
    1900:	sxtw	x1, w4
    1904:	ccmn	x2, #0x1, #0x4, ne  // ne = any
    1908:	b.eq	1e38 <gconv@@Base+0x13a0>  // b.none
    190c:	cmp	x1, #0x0
    1910:	cset	w30, gt
    1914:	cmp	x5, #0x0
    1918:	cset	w18, gt
    191c:	cmp	w30, #0x0
    1920:	ccmp	w18, #0x0, #0x4, ne  // ne = any
    1924:	b.eq	1e08 <gconv@@Base+0x1370>  // b.none
    1928:	sub	x1, x1, #0x1
    192c:	sub	x5, x5, #0x1
    1930:	mov	w17, #0xac00                	// #44032
    1934:	add	w16, w16, w17
    1938:	add	x0, x1, x1, lsl #2
    193c:	add	x0, x1, x0, lsl #2
    1940:	add	x0, x0, x5
    1944:	lsl	w1, w0, #3
    1948:	sub	w0, w1, w0
    194c:	add	w1, w16, w0, lsl #2
    1950:	cbz	w1, 1b78 <gconv@@Base+0x10e0>
    1954:	add	x27, x27, #0x2
    1958:	b	13b8 <gconv@@Base+0x920>
    195c:	add	x0, x24, #0x2
    1960:	cmp	x23, x0
    1964:	b.cc	1870 <gconv@@Base+0xdd8>  // b.lo, b.ul, b.last
    1968:	lsr	w0, w2, #2
    196c:	mov	w5, #0x4925                	// #18725
    1970:	movk	w5, #0x2492, lsl #16
    1974:	mov	w3, #0x5c4d                	// #23629
    1978:	mov	w1, #0xc31                 	// #3121
    197c:	movk	w3, #0xdee9, lsl #16
    1980:	umull	x0, w0, w5
    1984:	movk	w1, #0x30c3, lsl #16
    1988:	umull	x3, w2, w3
    198c:	adrp	x4, 2000 <gconv@@Base+0x1568>
    1990:	add	x4, x4, #0x980
    1994:	mov	w6, #0x15                  	// #21
    1998:	lsr	x0, x0, #32
    199c:	add	x8, x4, #0x2a8
    19a0:	lsr	x3, x3, #41
    19a4:	add	x5, x4, #0x250
    19a8:	add	x4, x4, #0x2f8
    19ac:	smull	x1, w0, w1
    19b0:	ldr	w8, [x8, x3, lsl #2]
    19b4:	lsl	w3, w0, #3
    19b8:	sub	w3, w3, w0
    19bc:	lsr	x1, x1, #34
    19c0:	sub	w2, w2, w3, lsl #2
    19c4:	add	x3, x24, #0x1
    19c8:	str	x3, [sp, #216]
    19cc:	msub	w0, w1, w6, w0
    19d0:	ldr	w1, [x4, x2, lsl #2]
    19d4:	ldr	w0, [x5, x0, lsl #2]
    19d8:	add	w0, w0, w8
    19dc:	add	w0, w0, w1
    19e0:	lsr	w1, w0, #8
    19e4:	strb	w1, [x24]
    19e8:	ldr	x1, [sp, #216]
    19ec:	add	x2, x1, #0x1
    19f0:	str	x2, [sp, #216]
    19f4:	strb	w0, [x1]
    19f8:	b	1080 <gconv@@Base+0x5e8>
    19fc:	ldr	x0, [x8]
    1a00:	add	x27, x27, #0x1
    1a04:	mov	w10, #0x6                   	// #6
    1a08:	add	x0, x0, #0x1
    1a0c:	str	x0, [x8]
    1a10:	b	13c0 <gconv@@Base+0x928>
    1a14:	cmp	x23, x9
    1a18:	b.cc	1870 <gconv@@Base+0xdd8>  // b.lo, b.ul, b.last
    1a1c:	mov	x3, x22
    1a20:	add	x28, sp, #0xe0
    1a24:	mov	x1, #0x0                   	// #0
    1a28:	ldrb	w4, [x3], #1
    1a2c:	add	x2, x1, #0x1
    1a30:	strb	w4, [x28, x1]
    1a34:	cmp	x2, #0x1
    1a38:	ccmp	x20, x3, #0x0, ls  // ls = plast
    1a3c:	mov	x1, #0x1                   	// #1
    1a40:	b.hi	1a28 <gconv@@Base+0xf90>  // b.pmore
    1a44:	b	1304 <gconv@@Base+0x86c>
    1a48:	ldr	x2, [x24]
    1a4c:	mov	x4, x20
    1a50:	ldr	x6, [sp, #152]
    1a54:	add	x3, sp, #0xd0
    1a58:	ldr	x5, [sp, #168]
    1a5c:	mov	x1, x21
    1a60:	mov	x0, x23
    1a64:	str	w12, [sp, #104]
    1a68:	str	x7, [sp, #176]
    1a6c:	bl	830 <__gconv_transliterate@plt>
    1a70:	mov	w11, w0
    1a74:	ldr	w12, [sp, #104]
    1a78:	cmp	w0, #0x6
    1a7c:	ldr	x7, [sp, #176]
    1a80:	b.eq	164c <gconv@@Base+0xbb4>  // b.none
    1a84:	cmp	w11, #0x5
    1a88:	ldp	x0, x19, [sp, #208]
    1a8c:	b.ne	c04 <gconv@@Base+0x16c>  // b.any
    1a90:	b	c10 <gconv@@Base+0x178>
    1a94:	ldr	x0, [x18]
    1a98:	sub	x3, x20, x0
    1a9c:	cmp	x3, #0x3
    1aa0:	b.gt	277c <gconv@@Base+0x1ce4>
    1aa4:	ldr	x4, [x21, #32]
    1aa8:	cmp	x0, x20
    1aac:	add	x0, x0, #0x1
    1ab0:	add	x1, x4, #0x4
    1ab4:	b.cs	20cc <gconv@@Base+0x1634>  // b.hs, b.nlast
    1ab8:	str	x0, [x18]
    1abc:	cmp	x20, x0
    1ac0:	add	x0, x0, #0x1
    1ac4:	ldurb	w2, [x0, #-2]
    1ac8:	strb	w2, [x1], #1
    1acc:	b.ne	1ab8 <gconv@@Base+0x1020>  // b.any
    1ad0:	mov	w1, w3
    1ad4:	ldr	w0, [x4]
    1ad8:	ldp	x23, x24, [sp, #48]
    1adc:	and	w0, w0, #0xfffffff8
    1ae0:	orr	w0, w0, w1
    1ae4:	str	w0, [x4]
    1ae8:	b	d2c <gconv@@Base+0x294>
    1aec:	adrp	x8, 13000 <gconv@@Base+0x12568>
    1af0:	mov	w5, #0x0                   	// #0
    1af4:	mov	w4, #0x1317                	// #4887
    1af8:	ldr	x8, [x8, #4032]
    1afc:	b	1b0c <gconv@@Base+0x1074>
    1b00:	sub	w4, w1, #0x1
    1b04:	cmp	w4, w5
    1b08:	b.lt	1cec <gconv@@Base+0x1254>  // b.tstop
    1b0c:	add	w1, w5, w4
    1b10:	asr	w1, w1, #1
    1b14:	sbfiz	x3, x1, #2, #32
    1b18:	add	x9, x8, x3
    1b1c:	ldrh	w3, [x8, x3]
    1b20:	cmp	w0, w3
    1b24:	b.cc	1b00 <gconv@@Base+0x1068>  // b.lo, b.ul, b.last
    1b28:	b.ls	1fc4 <gconv@@Base+0x152c>  // b.plast
    1b2c:	add	w5, w1, #0x1
    1b30:	b	1b04 <gconv@@Base+0x106c>
    1b34:	ldr	x2, [x24]
    1b38:	mov	x4, x20
    1b3c:	ldr	x6, [sp, #152]
    1b40:	add	x3, sp, #0xd0
    1b44:	ldr	x5, [sp, #168]
    1b48:	mov	x1, x21
    1b4c:	mov	x0, x23
    1b50:	str	w12, [sp, #104]
    1b54:	str	x7, [sp, #176]
    1b58:	bl	830 <__gconv_transliterate@plt>
    1b5c:	mov	w11, w0
    1b60:	ldr	w12, [sp, #104]
    1b64:	cmp	w0, #0x6
    1b68:	ldr	x7, [sp, #176]
    1b6c:	b.ne	1a84 <gconv@@Base+0xfec>  // b.any
    1b70:	ldr	x19, [sp, #216]
    1b74:	b	1240 <gconv@@Base+0x7a8>
    1b78:	cbz	x8, 16e8 <gconv@@Base+0xc50>
    1b7c:	cbz	w12, 16e8 <gconv@@Base+0xc50>
    1b80:	ldr	x0, [x8]
    1b84:	add	x27, x27, #0x2
    1b88:	mov	w10, #0x6                   	// #6
    1b8c:	add	x0, x0, #0x1
    1b90:	str	x0, [x8]
    1b94:	b	13c0 <gconv@@Base+0x928>
    1b98:	mov	x0, #0x4                   	// #4
    1b9c:	mov	x25, #0x0                   	// #0
    1ba0:	b	101c <gconv@@Base+0x584>
    1ba4:	add	w3, w1, #0x7c
    1ba8:	mov	w4, #0xdf                  	// #223
    1bac:	and	w3, w3, #0xff
    1bb0:	cmp	w3, #0x75
    1bb4:	ccmp	w1, w4, #0x4, ls  // ls = plast
    1bb8:	b.ne	1d34 <gconv@@Base+0x129c>  // b.any
    1bbc:	ldr	x0, [sp, #152]
    1bc0:	mov	w26, #0x6                   	// #6
    1bc4:	cbz	x0, 1180 <gconv@@Base+0x6e8>
    1bc8:	tbz	w19, #1, 1180 <gconv@@Base+0x6e8>
    1bcc:	mov	x2, x0
    1bd0:	mov	x0, #0x1                   	// #1
    1bd4:	ldr	x1, [x2]
    1bd8:	add	x1, x1, x0
    1bdc:	str	x1, [x2]
    1be0:	b	1330 <gconv@@Base+0x898>
    1be4:	mov	x6, x20
    1be8:	mov	x19, x22
    1bec:	mov	w11, #0x4                   	// #4
    1bf0:	str	x6, [x24]
    1bf4:	b	d18 <gconv@@Base+0x280>
    1bf8:	cbnz	w26, 1180 <gconv@@Base+0x6e8>
    1bfc:	ldr	w27, [x21, #16]
    1c00:	ldr	x22, [x18]
    1c04:	b	b5c <gconv@@Base+0xc4>
    1c08:	mov	w5, #0x0                   	// #0
    1c0c:	mov	w4, #0x3dc                 	// #988
    1c10:	b	1c20 <gconv@@Base+0x1188>
    1c14:	sub	w4, w1, #0x1
    1c18:	cmp	w4, w5
    1c1c:	b.lt	239c <gconv@@Base+0x1904>  // b.tstop
    1c20:	add	w1, w5, w4
    1c24:	asr	w1, w1, #1
    1c28:	sbfiz	x3, x1, #2, #32
    1c2c:	add	x8, x11, x3
    1c30:	ldrh	w3, [x11, x3]
    1c34:	cmp	w0, w3
    1c38:	b.cc	1c14 <gconv@@Base+0x117c>  // b.lo, b.ul, b.last
    1c3c:	b.ls	1eac <gconv@@Base+0x1414>  // b.plast
    1c40:	add	w5, w1, #0x1
    1c44:	b	1c18 <gconv@@Base+0x1180>
    1c48:	str	x20, [x18]
    1c4c:	cmp	x22, x20
    1c50:	b.cs	1c78 <gconv@@Base+0x11e0>  // b.hs, b.nlast
    1c54:	add	x22, x22, #0x1
    1c58:	add	x7, x7, x25
    1c5c:	str	x22, [sp, #208]
    1c60:	cmp	x20, x22
    1c64:	add	x7, x7, #0x1
    1c68:	add	x22, x22, #0x1
    1c6c:	ldurb	w0, [x22, #-2]
    1c70:	strb	w0, [x7, #3]
    1c74:	b.ne	1c5c <gconv@@Base+0x11c4>  // b.any
    1c78:	mov	w26, #0x7                   	// #7
    1c7c:	ldp	x23, x24, [sp, #48]
    1c80:	b	d2c <gconv@@Base+0x294>
    1c84:	mov	w5, #0xffff0700            	// #-63744
    1c88:	add	w3, w0, w5
    1c8c:	cmp	w3, #0x10b
    1c90:	mov	w6, #0xffffb200            	// #-19968
    1c94:	add	w2, w0, w6
    1c98:	mov	w3, #0x51a5                	// #20901
    1c9c:	ccmp	w2, w3, #0x0, hi  // hi = pmore
    1ca0:	b.hi	1e58 <gconv@@Base+0x13c0>  // b.pmore
    1ca4:	adrp	x6, 13000 <gconv@@Base+0x12568>
    1ca8:	mov	w5, #0x0                   	// #0
    1cac:	mov	w3, #0x1317                	// #4887
    1cb0:	ldr	x6, [x6, #4032]
    1cb4:	b	1cc4 <gconv@@Base+0x122c>
    1cb8:	sub	w3, w1, #0x1
    1cbc:	cmp	w3, w5
    1cc0:	b.lt	209c <gconv@@Base+0x1604>  // b.tstop
    1cc4:	add	w1, w5, w3
    1cc8:	asr	w1, w1, #1
    1ccc:	sbfiz	x2, x1, #2, #32
    1cd0:	add	x8, x6, x2
    1cd4:	ldrh	w2, [x6, x2]
    1cd8:	cmp	w0, w2
    1cdc:	b.cc	1cb8 <gconv@@Base+0x1220>  // b.lo, b.ul, b.last
    1ce0:	b.ls	2184 <gconv@@Base+0x16ec>  // b.plast
    1ce4:	add	w5, w1, #0x1
    1ce8:	b	1cbc <gconv@@Base+0x1224>
    1cec:	ldr	x0, [sp, #152]
    1cf0:	cbz	x0, 26f8 <gconv@@Base+0x1c60>
    1cf4:	ldr	w0, [x21, #16]
    1cf8:	tbnz	w0, #3, 2634 <gconv@@Base+0x1b9c>
    1cfc:	ldp	x27, x6, [sp, #208]
    1d00:	tbnz	w19, #1, 237c <gconv@@Base+0x18e4>
    1d04:	ldr	x0, [sp, #200]
    1d08:	str	x27, [x24]
    1d0c:	cmp	x6, x0
    1d10:	b.eq	17ec <gconv@@Base+0xd54>  // b.none
    1d14:	adrp	x3, 2000 <gconv@@Base+0x1568>
    1d18:	adrp	x1, 2000 <gconv@@Base+0x1568>
    1d1c:	adrp	x0, 2000 <gconv@@Base+0x1568>
    1d20:	add	x3, x3, #0x978
    1d24:	add	x1, x1, #0x7e8
    1d28:	add	x0, x0, #0x900
    1d2c:	mov	w2, #0x2ea                 	// #746
    1d30:	bl	880 <__assert_fail@plt>
    1d34:	sub	w3, w1, #0xd4
    1d38:	cmp	w3, #0x4
    1d3c:	b.ls	1bbc <gconv@@Base+0x1124>  // b.plast
    1d40:	add	x3, x28, x2
    1d44:	add	x4, x28, #0x1
    1d48:	cmp	x3, x4
    1d4c:	b.ls	229c <gconv@@Base+0x1804>  // b.plast
    1d50:	ldrb	w2, [sp, #225]
    1d54:	cmp	w1, #0xd3
    1d58:	add	w0, w2, w1, lsl #8
    1d5c:	b.hi	222c <gconv@@Base+0x1794>  // b.pmore
    1d60:	adrp	x5, 2000 <gconv@@Base+0x1568>
    1d64:	add	x10, x5, #0x980
    1d68:	ubfx	x4, x0, #5, #5
    1d6c:	add	x1, x10, #0x80
    1d70:	and	x3, x0, #0x1f
    1d74:	add	x2, x10, #0x100
    1d78:	ubfx	x0, x0, #10, #5
    1d7c:	ldr	w1, [x1, x4, lsl #2]
    1d80:	ldr	w11, [x2, x3, lsl #2]
    1d84:	ldr	w4, [x10, x0, lsl #2]
    1d88:	sxtw	x3, w1
    1d8c:	cmn	w4, #0x1
    1d90:	sxtw	x2, w11
    1d94:	ccmn	x3, #0x1, #0x4, ne  // ne = any
    1d98:	sxtw	x0, w4
    1d9c:	ccmn	x2, #0x1, #0x4, ne  // ne = any
    1da0:	b.eq	1bbc <gconv@@Base+0x1124>  // b.none
    1da4:	cmp	x0, #0x0
    1da8:	cset	w13, gt
    1dac:	cmp	x3, #0x0
    1db0:	cset	w12, gt
    1db4:	cmp	w13, #0x0
    1db8:	ccmp	w12, #0x0, #0x4, ne  // ne = any
    1dbc:	b.eq	214c <gconv@@Base+0x16b4>  // b.none
    1dc0:	sub	x0, x0, #0x1
    1dc4:	sub	x3, x3, #0x1
    1dc8:	mov	w12, #0xac00                	// #44032
    1dcc:	add	w11, w11, w12
    1dd0:	add	x1, x0, x0, lsl #2
    1dd4:	add	x0, x0, x1, lsl #2
    1dd8:	add	x0, x0, x3
    1ddc:	lsl	w1, w0, #3
    1de0:	sub	w0, w1, w0
    1de4:	add	w1, w11, w0, lsl #2
    1de8:	mov	x0, #0x2                   	// #2
    1dec:	cbnz	w1, 1320 <gconv@@Base+0x888>
    1df0:	ldr	x1, [sp, #152]
    1df4:	cbz	x1, 1dfc <gconv@@Base+0x1364>
    1df8:	tbnz	w19, #1, 279c <gconv@@Base+0x1d04>
    1dfc:	mov	w26, #0x6                   	// #6
    1e00:	ldp	x23, x24, [sp, #48]
    1e04:	b	d2c <gconv@@Base+0x294>
    1e08:	cmp	x5, #0x0
    1e0c:	ccmp	w30, #0x0, #0x4, eq  // eq = none
    1e10:	b.eq	1f98 <gconv@@Base+0x1500>  // b.none
    1e14:	cbnz	x2, 1e38 <gconv@@Base+0x13a0>
    1e18:	ldr	x0, [sp, #104]
    1e1c:	sub	x1, x1, #0x1
    1e20:	ldr	w1, [x0, x1, lsl #2]
    1e24:	cbnz	w1, 1954 <gconv@@Base+0xebc>
    1e28:	b	1b78 <gconv@@Base+0x10e0>
    1e2c:	sub	w4, w2, #0xa1
    1e30:	cmp	w4, #0x32
    1e34:	b.hi	212c <gconv@@Base+0x1694>  // b.pmore
    1e38:	cbz	x8, 16e8 <gconv@@Base+0xc50>
    1e3c:	cbz	w12, 16e8 <gconv@@Base+0xc50>
    1e40:	ldr	x0, [x8]
    1e44:	mov	x27, x17
    1e48:	mov	w10, #0x6                   	// #6
    1e4c:	add	x0, x0, #0x1
    1e50:	str	x0, [x8]
    1e54:	b	13c8 <gconv@@Base+0x930>
    1e58:	mov	w2, #0x20a9                	// #8361
    1e5c:	cmp	w0, w2
    1e60:	b.eq	216c <gconv@@Base+0x16d4>  // b.none
    1e64:	adrp	x3, 13000 <gconv@@Base+0x12568>
    1e68:	mov	w6, #0x0                   	// #0
    1e6c:	mov	w5, #0x3dc                 	// #988
    1e70:	ldr	x3, [x3, #4016]
    1e74:	b	1e84 <gconv@@Base+0x13ec>
    1e78:	sub	w5, w1, #0x1
    1e7c:	cmp	w6, w5
    1e80:	b.gt	270c <gconv@@Base+0x1c74>
    1e84:	add	w1, w6, w5
    1e88:	asr	w1, w1, #1
    1e8c:	sbfiz	x2, x1, #2, #32
    1e90:	add	x8, x3, x2
    1e94:	ldrh	w2, [x3, x2]
    1e98:	cmp	w0, w2
    1e9c:	b.cc	1e78 <gconv@@Base+0x13e0>  // b.lo, b.ul, b.last
    1ea0:	b.ls	23b8 <gconv@@Base+0x1920>  // b.plast
    1ea4:	add	w6, w1, #0x1
    1ea8:	b	1e7c <gconv@@Base+0x13e4>
    1eac:	sub	x0, x13, x6
    1eb0:	cmp	x0, #0x1
    1eb4:	b.hi	1ecc <gconv@@Base+0x1434>  // b.pmore
    1eb8:	ldp	x0, x1, [sp, #200]
    1ebc:	str	x1, [x24]
    1ec0:	cmp	x6, x0
    1ec4:	b.eq	1700 <gconv@@Base+0xc68>  // b.none
    1ec8:	b	1d14 <gconv@@Base+0x127c>
    1ecc:	ldrb	w1, [x8, #2]
    1ed0:	ldrb	w0, [x8, #3]
    1ed4:	strb	w1, [x6]
    1ed8:	strb	w0, [x6, #1]
    1edc:	ldr	x3, [sp, #216]
    1ee0:	ldrb	w4, [x3]
    1ee4:	cmp	w4, #0x22
    1ee8:	b.eq	1f60 <gconv@@Base+0x14c8>  // b.none
    1eec:	ldrb	w0, [x3, #1]
    1ef0:	cmp	w4, #0x49
    1ef4:	add	w1, w4, #0x176
    1ef8:	b.ls	1f58 <gconv@@Base+0x14c0>  // b.plast
    1efc:	add	w5, w0, #0x5e
    1f00:	tst	x1, #0x1
    1f04:	and	w5, w5, #0xff
    1f08:	mov	w4, #0x10                  	// #16
    1f0c:	csel	w0, w5, w0, ne  // ne = any
    1f10:	strb	w0, [x3, #1]
    1f14:	mov	w3, #0x22                  	// #34
    1f18:	lsr	w1, w1, #1
    1f1c:	ldr	x5, [sp, #216]
    1f20:	ldrb	w0, [x5, #1]
    1f24:	cmp	w0, #0x6f
    1f28:	csel	w3, w4, w3, cc  // cc = lo, ul, last
    1f2c:	add	w0, w0, w3
    1f30:	strb	w0, [x5, #1]
    1f34:	ldr	x0, [sp, #216]
    1f38:	strb	w1, [x0]
    1f3c:	ldr	x6, [sp, #216]
    1f40:	add	x6, x6, #0x2
    1f44:	str	x6, [sp, #216]
    1f48:	b	1130 <gconv@@Base+0x698>
    1f4c:	cmp	x13, x22
    1f50:	b.eq	1708 <gconv@@Base+0xc70>  // b.none
    1f54:	b	1d14 <gconv@@Base+0x127c>
    1f58:	add	w1, w4, #0x191
    1f5c:	b	1efc <gconv@@Base+0x1464>
    1f60:	ldrb	w0, [x3, #1]
    1f64:	cmp	w0, #0x68
    1f68:	b.ls	1f58 <gconv@@Base+0x14c0>  // b.plast
    1f6c:	ldr	x0, [sp, #152]
    1f70:	cbz	x0, 249c <gconv@@Base+0x1a04>
    1f74:	ldr	w0, [x21, #16]
    1f78:	tbnz	w0, #3, 22ec <gconv@@Base+0x1854>
    1f7c:	ldp	x27, x6, [sp, #208]
    1f80:	tbnz	w19, #1, 237c <gconv@@Base+0x18e4>
    1f84:	ldr	x0, [sp, #200]
    1f88:	str	x27, [x24]
    1f8c:	cmp	x0, x6
    1f90:	b.eq	17ec <gconv@@Base+0xd54>  // b.none
    1f94:	b	1d14 <gconv@@Base+0x127c>
    1f98:	cmp	x1, #0x0
    1f9c:	ccmp	w18, #0x0, #0x4, eq  // eq = none
    1fa0:	b.eq	206c <gconv@@Base+0x15d4>  // b.none
    1fa4:	cbnz	x2, 1e38 <gconv@@Base+0x13a0>
    1fa8:	mov	w16, #0x314e                	// #12622
    1fac:	add	x27, x27, #0x2
    1fb0:	add	w1, w0, w16
    1fb4:	b	13b8 <gconv@@Base+0x920>
    1fb8:	mov	w11, #0x6                   	// #6
    1fbc:	ldr	x0, [sp, #208]
    1fc0:	b	c10 <gconv@@Base+0x178>
    1fc4:	sub	x0, x13, x6
    1fc8:	cmp	x0, #0x1
    1fcc:	b.ls	16f0 <gconv@@Base+0xc58>  // b.plast
    1fd0:	ldrb	w3, [x9, #2]
    1fd4:	mov	w10, #0x5e                  	// #94
    1fd8:	ldrb	w1, [x9, #3]
    1fdc:	mov	w0, #0x415d                	// #16733
    1fe0:	strb	w3, [x6]
    1fe4:	movk	w0, #0xae4c, lsl #16
    1fe8:	strb	w1, [x6, #1]
    1fec:	mov	w6, #0xbc                  	// #188
    1ff0:	mov	w3, #0x43                  	// #67
    1ff4:	mov	w5, #0x31                  	// #49
    1ff8:	ldr	x4, [sp, #216]
    1ffc:	ldrb	w1, [x4]
    2000:	sub	w1, w1, #0x4a
    2004:	strb	w1, [x4]
    2008:	ldr	x4, [sp, #216]
    200c:	ldrb	w1, [x4, #1]
    2010:	sub	w1, w1, #0x21
    2014:	strb	w1, [x4, #1]
    2018:	ldr	x4, [sp, #216]
    201c:	ldrb	w8, [x4, #1]
    2020:	ldrb	w1, [x4]
    2024:	madd	w1, w1, w10, w8
    2028:	umull	x0, w1, w0
    202c:	lsr	x0, x0, #39
    2030:	sub	w8, w0, #0x20
    2034:	strb	w8, [x4]
    2038:	ldr	x4, [sp, #216]
    203c:	msub	w0, w0, w6, w1
    2040:	strb	w0, [x4, #1]
    2044:	ldr	x4, [sp, #216]
    2048:	ldrb	w0, [x4, #1]
    204c:	cmp	w0, #0x4d
    2050:	csel	w1, w3, w5, hi  // hi = pmore
    2054:	add	w0, w0, w1
    2058:	strb	w0, [x4, #1]
    205c:	ldr	x6, [sp, #216]
    2060:	add	x6, x6, #0x2
    2064:	str	x6, [sp, #216]
    2068:	b	1130 <gconv@@Base+0x698>
    206c:	orr	w0, w4, w0
    2070:	cmp	w0, #0x0
    2074:	ccmp	x2, #0x0, #0x4, eq  // eq = none
    2078:	b.le	1e38 <gconv@@Base+0x13a0>
    207c:	sub	x2, x2, #0x1
    2080:	ldr	w1, [x3, x2, lsl #2]
    2084:	cbnz	w1, 1954 <gconv@@Base+0xebc>
    2088:	b	1b78 <gconv@@Base+0x10e0>
    208c:	sub	w3, w2, #0xa1
    2090:	cmp	w3, #0x32
    2094:	b.ls	1298 <gconv@@Base+0x800>  // b.plast
    2098:	b	1774 <gconv@@Base+0xcdc>
    209c:	ldr	x0, [sp, #152]
    20a0:	cbz	x0, 1dfc <gconv@@Base+0x1364>
    20a4:	tbnz	w19, #3, 2724 <gconv@@Base+0x1c8c>
    20a8:	tbz	w19, #1, 1dfc <gconv@@Base+0x1364>
    20ac:	ldr	x0, [sp, #208]
    20b0:	add	x0, x0, #0x4
    20b4:	ldr	x2, [sp, #152]
    20b8:	str	x0, [sp, #208]
    20bc:	ldr	x1, [x2]
    20c0:	add	x1, x1, #0x1
    20c4:	str	x1, [x2]
    20c8:	b	2490 <gconv@@Base+0x19f8>
    20cc:	mov	w1, #0x0                   	// #0
    20d0:	b	1ad4 <gconv@@Base+0x103c>
    20d4:	cmp	x13, x22
    20d8:	b.eq	17ec <gconv@@Base+0xd54>  // b.none
    20dc:	b	1d14 <gconv@@Base+0x127c>
    20e0:	mov	x2, #0x7                   	// #7
    20e4:	b	13d8 <gconv@@Base+0x940>
    20e8:	cmp	w2, #0x30
    20ec:	b.ls	1e38 <gconv@@Base+0x13a0>  // b.plast
    20f0:	sub	w4, w2, #0x7f
    20f4:	cmp	w4, #0x11
    20f8:	b.ls	1e38 <gconv@@Base+0x13a0>  // b.plast
    20fc:	cmp	w2, #0xff
    2100:	b.eq	1e38 <gconv@@Base+0x13a0>  // b.none
    2104:	cmp	w2, #0xe8
    2108:	mov	w4, #0xd9                  	// #217
    210c:	ccmp	w1, w4, #0x0, hi  // hi = pmore
    2110:	b.eq	1e38 <gconv@@Base+0x13a0>  // b.none
    2114:	cmp	w1, #0xda
    2118:	b.eq	1e2c <gconv@@Base+0x1394>  // b.none
    211c:	cmp	w2, #0xf1
    2120:	mov	w4, #0xde                  	// #222
    2124:	ccmp	w1, w4, #0x0, hi  // hi = pmore
    2128:	b.eq	1e38 <gconv@@Base+0x13a0>  // b.none
    212c:	and	x1, x1, #0xff
    2130:	and	x2, x2, #0xff
    2134:	str	x3, [sp, #176]
    2138:	bl	988 <__assert_fail@plt+0x108>
    213c:	mov	w1, w0
    2140:	ldr	x3, [sp, #176]
    2144:	cbnz	w1, 1954 <gconv@@Base+0xebc>
    2148:	b	1b78 <gconv@@Base+0x10e0>
    214c:	cmp	x3, #0x0
    2150:	ccmp	w13, #0x0, #0x4, eq  // eq = none
    2154:	b.eq	235c <gconv@@Base+0x18c4>  // b.none
    2158:	cbz	x2, 2350 <gconv@@Base+0x18b8>
    215c:	ldr	x0, [sp, #152]
    2160:	cbz	x0, 1dfc <gconv@@Base+0x1364>
    2164:	tbz	w19, #1, 1dfc <gconv@@Base+0x1364>
    2168:	b	1bcc <gconv@@Base+0x1134>
    216c:	add	x0, x24, #0x1
    2170:	str	x0, [sp, #216]
    2174:	strb	w1, [x24]
    2178:	b	1080 <gconv@@Base+0x5e8>
    217c:	sxtw	x2, w10
    2180:	b	13d8 <gconv@@Base+0x940>
    2184:	sub	x0, x23, x24
    2188:	cmp	x0, #0x1
    218c:	b.ls	1870 <gconv@@Base+0xdd8>  // b.plast
    2190:	ldrb	w2, [x8, #2]
    2194:	mov	w6, #0x5e                  	// #94
    2198:	ldrb	w1, [x8, #3]
    219c:	mov	w0, #0x415d                	// #16733
    21a0:	strb	w2, [x24]
    21a4:	movk	w0, #0xae4c, lsl #16
    21a8:	strb	w1, [x24, #1]
    21ac:	mov	w4, #0xbc                  	// #188
    21b0:	mov	w2, #0x43                  	// #67
    21b4:	mov	w5, #0x31                  	// #49
    21b8:	ldr	x3, [sp, #216]
    21bc:	ldrb	w1, [x3]
    21c0:	sub	w1, w1, #0x4a
    21c4:	strb	w1, [x3]
    21c8:	ldr	x3, [sp, #216]
    21cc:	ldrb	w1, [x3, #1]
    21d0:	sub	w1, w1, #0x21
    21d4:	strb	w1, [x3, #1]
    21d8:	ldr	x3, [sp, #216]
    21dc:	ldrb	w8, [x3, #1]
    21e0:	ldrb	w1, [x3]
    21e4:	madd	w1, w1, w6, w8
    21e8:	umull	x0, w1, w0
    21ec:	lsr	x0, x0, #39
    21f0:	sub	w6, w0, #0x20
    21f4:	strb	w6, [x3]
    21f8:	ldr	x3, [sp, #216]
    21fc:	msub	w0, w0, w4, w1
    2200:	strb	w0, [x3, #1]
    2204:	ldr	x3, [sp, #216]
    2208:	ldrb	w0, [x3, #1]
    220c:	cmp	w0, #0x4d
    2210:	csel	w1, w2, w5, hi  // hi = pmore
    2214:	add	w0, w0, w1
    2218:	strb	w0, [x3, #1]
    221c:	ldr	x0, [sp, #216]
    2220:	add	x0, x0, #0x2
    2224:	str	x0, [sp, #216]
    2228:	b	1080 <gconv@@Base+0x5e8>
    222c:	cmp	w2, #0x30
    2230:	b.ls	215c <gconv@@Base+0x16c4>  // b.plast
    2234:	sub	w3, w2, #0x7f
    2238:	cmp	w3, #0x11
    223c:	b.ls	215c <gconv@@Base+0x16c4>  // b.plast
    2240:	cmp	w2, #0xff
    2244:	b.eq	215c <gconv@@Base+0x16c4>  // b.none
    2248:	cmp	w1, #0xd9
    224c:	mov	w3, #0xe8                  	// #232
    2250:	ccmp	w2, w3, #0x0, eq  // eq = none
    2254:	b.hi	215c <gconv@@Base+0x16c4>  // b.pmore
    2258:	cmp	w1, #0xda
    225c:	b.eq	27c0 <gconv@@Base+0x1d28>  // b.none
    2260:	cmp	w1, #0xde
    2264:	mov	w3, #0xf1                  	// #241
    2268:	ccmp	w2, w3, #0x0, eq  // eq = none
    226c:	b.hi	215c <gconv@@Base+0x16c4>  // b.pmore
    2270:	and	x1, x1, #0xff
    2274:	and	x2, x2, #0xff
    2278:	str	x7, [sp, #112]
    227c:	stp	x15, x18, [sp, #160]
    2280:	str	x14, [sp, #176]
    2284:	bl	988 <__assert_fail@plt+0x108>
    2288:	mov	w1, w0
    228c:	ldr	x7, [sp, #112]
    2290:	ldp	x15, x18, [sp, #160]
    2294:	ldr	x14, [sp, #176]
    2298:	b	1de8 <gconv@@Base+0x1350>
    229c:	add	x4, x28, #0x2
    22a0:	cmp	x3, x4
    22a4:	b.eq	24f4 <gconv@@Base+0x1a5c>  // b.none
    22a8:	mov	w0, w0
    22ac:	and	w6, w6, #0xfffffff8
    22b0:	sub	x0, x2, x0
    22b4:	add	x22, x22, x0
    22b8:	str	x22, [x18]
    22bc:	cmp	x2, w6, sxtw
    22c0:	b.le	24d4 <gconv@@Base+0x1a3c>
    22c4:	cmp	x2, #0x4
    22c8:	b.hi	24b4 <gconv@@Base+0x1a1c>  // b.pmore
    22cc:	orr	w6, w6, w2
    22d0:	str	w6, [x7]
    22d4:	cmp	x3, x28
    22d8:	mov	w26, #0x7                   	// #7
    22dc:	b.ls	1180 <gconv@@Base+0x6e8>  // b.plast
    22e0:	strb	w1, [x7, #4]
    22e4:	ldp	x23, x24, [sp, #48]
    22e8:	b	d2c <gconv@@Base+0x294>
    22ec:	ldr	x2, [x24]
    22f0:	mov	x4, x20
    22f4:	ldr	x6, [sp, #152]
    22f8:	add	x3, sp, #0xd0
    22fc:	ldr	x5, [sp, #168]
    2300:	mov	x1, x21
    2304:	mov	x0, x23
    2308:	str	x13, [sp, #104]
    230c:	str	w7, [sp, #176]
    2310:	str	x11, [sp, #184]
    2314:	bl	830 <__gconv_transliterate@plt>
    2318:	sxtw	x2, w0
    231c:	ldr	w7, [sp, #176]
    2320:	cmp	w2, #0x6
    2324:	ldr	x13, [sp, #104]
    2328:	ldr	x11, [sp, #184]
    232c:	b.eq	1f7c <gconv@@Base+0x14e4>  // b.none
    2330:	cmp	w2, #0x5
    2334:	ldp	x27, x6, [sp, #208]
    2338:	b.ne	113c <gconv@@Base+0x6a4>  // b.any
    233c:	ldr	x0, [sp, #200]
    2340:	str	x27, [x24]
    2344:	cmp	x0, x6
    2348:	b.eq	1700 <gconv@@Base+0xc68>  // b.none
    234c:	b	1d14 <gconv@@Base+0x127c>
    2350:	add	x0, x10, x0, lsl #2
    2354:	ldr	w1, [x0, #380]
    2358:	b	1de8 <gconv@@Base+0x1350>
    235c:	cmp	x0, #0x0
    2360:	ccmp	w12, #0x0, #0x4, eq  // eq = none
    2364:	b.eq	2444 <gconv@@Base+0x19ac>  // b.none
    2368:	cbnz	x2, 215c <gconv@@Base+0x16c4>
    236c:	mov	w10, #0x314e                	// #12622
    2370:	mov	x0, #0x2                   	// #2
    2374:	add	w1, w1, w10
    2378:	b	1320 <gconv@@Base+0x888>
    237c:	ldr	x1, [sp, #152]
    2380:	add	x27, x27, #0x4
    2384:	mov	x2, #0x6                   	// #6
    2388:	str	x27, [sp, #208]
    238c:	ldr	x0, [x1]
    2390:	add	x0, x0, #0x1
    2394:	str	x0, [x1]
    2398:	b	113c <gconv@@Base+0x6a4>
    239c:	mov	w1, #0x1c00                	// #7168
    23a0:	cmp	w1, w0, lsr #7
    23a4:	b.eq	1130 <gconv@@Base+0x698>  // b.none
    23a8:	b	1f6c <gconv@@Base+0x14d4>
    23ac:	mov	w11, #0x6                   	// #6
    23b0:	ldp	x0, x19, [sp, #208]
    23b4:	b	c10 <gconv@@Base+0x178>
    23b8:	sub	x0, x23, x24
    23bc:	cmp	x0, #0x1
    23c0:	b.ls	1870 <gconv@@Base+0xdd8>  // b.plast
    23c4:	ldrb	w1, [x8, #2]
    23c8:	ldrb	w0, [x8, #3]
    23cc:	strb	w1, [x24]
    23d0:	strb	w0, [x24, #1]
    23d4:	ldr	x1, [sp, #216]
    23d8:	ldrb	w0, [x1]
    23dc:	cmp	w0, #0x22
    23e0:	b.eq	246c <gconv@@Base+0x19d4>  // b.none
    23e4:	ldrb	w3, [x1, #1]
    23e8:	cmp	w0, #0x49
    23ec:	b.ls	2464 <gconv@@Base+0x19cc>  // b.plast
    23f0:	add	w0, w0, #0x176
    23f4:	add	w2, w3, #0x5e
    23f8:	tst	x0, #0x1
    23fc:	and	w2, w2, #0xff
    2400:	mov	w4, #0x10                  	// #16
    2404:	csel	w2, w2, w3, ne  // ne = any
    2408:	strb	w2, [x1, #1]
    240c:	mov	w2, #0x22                  	// #34
    2410:	lsr	w0, w0, #1
    2414:	ldr	x3, [sp, #216]
    2418:	ldrb	w1, [x3, #1]
    241c:	cmp	w1, #0x6f
    2420:	csel	w2, w4, w2, cc  // cc = lo, ul, last
    2424:	add	w1, w1, w2
    2428:	strb	w1, [x3, #1]
    242c:	ldr	x1, [sp, #216]
    2430:	strb	w0, [x1]
    2434:	ldr	x0, [sp, #216]
    2438:	add	x0, x0, #0x2
    243c:	str	x0, [sp, #216]
    2440:	b	1080 <gconv@@Base+0x5e8>
    2444:	orr	w4, w4, w1
    2448:	cmp	w4, #0x0
    244c:	ccmp	x2, #0x0, #0x4, eq  // eq = none
    2450:	b.le	215c <gconv@@Base+0x16c4>
    2454:	add	x5, x5, #0x980
    2458:	add	x2, x5, x2, lsl #2
    245c:	ldr	w1, [x2, #460]
    2460:	b	1de8 <gconv@@Base+0x1350>
    2464:	add	w0, w0, #0x191
    2468:	b	23f4 <gconv@@Base+0x195c>
    246c:	ldrb	w3, [x1, #1]
    2470:	cmp	w3, #0x68
    2474:	b.ls	2464 <gconv@@Base+0x19cc>  // b.plast
    2478:	ldr	x0, [sp, #152]
    247c:	cbz	x0, 2514 <gconv@@Base+0x1a7c>
    2480:	ldr	w19, [x21, #16]
    2484:	tbnz	w19, #3, 2524 <gconv@@Base+0x1a8c>
    2488:	ldr	x0, [sp, #208]
    248c:	tbnz	w27, #1, 20b0 <gconv@@Base+0x1618>
    2490:	cmp	x0, x28
    2494:	b.ne	1094 <gconv@@Base+0x5fc>  // b.any
    2498:	b	1dfc <gconv@@Base+0x1364>
    249c:	ldp	x1, x0, [sp, #200]
    24a0:	str	x0, [x24]
    24a4:	ldr	x0, [sp, #216]
    24a8:	cmp	x1, x0
    24ac:	b.eq	17ec <gconv@@Base+0xd54>  // b.none
    24b0:	b	1d14 <gconv@@Base+0x127c>
    24b4:	adrp	x3, 2000 <gconv@@Base+0x1568>
    24b8:	add	x3, x3, #0x960
    24bc:	adrp	x1, 2000 <gconv@@Base+0x1568>
    24c0:	adrp	x0, 2000 <gconv@@Base+0x1568>
    24c4:	add	x1, x1, #0x818
    24c8:	add	x0, x0, #0x8d0
    24cc:	mov	w2, #0x1e6                 	// #486
    24d0:	bl	880 <__assert_fail@plt>
    24d4:	adrp	x3, 2000 <gconv@@Base+0x1568>
    24d8:	add	x3, x3, #0x960
    24dc:	adrp	x1, 2000 <gconv@@Base+0x1568>
    24e0:	adrp	x0, 2000 <gconv@@Base+0x1568>
    24e4:	add	x1, x1, #0x818
    24e8:	add	x0, x0, #0x8a8
    24ec:	mov	w2, #0x1e5                 	// #485
    24f0:	bl	880 <__assert_fail@plt>
    24f4:	adrp	x3, 2000 <gconv@@Base+0x1568>
    24f8:	add	x3, x3, #0x960
    24fc:	adrp	x1, 2000 <gconv@@Base+0x1568>
    2500:	adrp	x0, 2000 <gconv@@Base+0x1568>
    2504:	add	x1, x1, #0x818
    2508:	add	x0, x0, #0x880
    250c:	mov	w2, #0x1db                 	// #475
    2510:	bl	880 <__assert_fail@plt>
    2514:	ldr	x0, [sp, #208]
    2518:	cmp	x0, x28
    251c:	b.ne	1094 <gconv@@Base+0x5fc>  // b.any
    2520:	b	1dfc <gconv@@Base+0x1364>
    2524:	ldr	x2, [x18]
    2528:	mov	x0, x15
    252c:	ldr	x6, [sp, #152]
    2530:	add	x5, sp, #0xd8
    2534:	add	x3, sp, #0xd0
    2538:	mov	x1, x21
    253c:	str	x15, [sp, #112]
    2540:	stp	x4, x18, [sp, #160]
    2544:	stp	x7, x14, [sp, #176]
    2548:	bl	830 <__gconv_transliterate@plt>
    254c:	mov	w26, w0
    2550:	cmp	w0, #0x6
    2554:	ldr	x15, [sp, #112]
    2558:	ldp	x4, x18, [sp, #160]
    255c:	ldp	x7, x14, [sp, #176]
    2560:	b.eq	2488 <gconv@@Base+0x19f0>  // b.none
    2564:	ldr	x0, [sp, #208]
    2568:	cmp	x0, x28
    256c:	b.ne	1094 <gconv@@Base+0x5fc>  // b.any
    2570:	cmp	w26, #0x7
    2574:	b.ne	1bf8 <gconv@@Base+0x1160>  // b.any
    2578:	add	x0, x28, #0x4
    257c:	cmp	x4, x0
    2580:	b.eq	2604 <gconv@@Base+0x1b6c>  // b.none
    2584:	ldr	w0, [x7]
    2588:	ldr	x1, [x18]
    258c:	and	x2, x0, #0x7
    2590:	sub	x2, x25, x2
    2594:	and	w0, w0, #0xfffffff8
    2598:	add	x1, x1, x2
    259c:	str	x1, [x18]
    25a0:	cmp	x25, w0, sxtw
    25a4:	b.le	25f4 <gconv@@Base+0x1b5c>
    25a8:	cmp	x25, #0x4
    25ac:	b.hi	25e4 <gconv@@Base+0x1b4c>  // b.pmore
    25b0:	orr	w0, w0, w25
    25b4:	str	w0, [x7]
    25b8:	cmp	x4, x28
    25bc:	b.ls	1c78 <gconv@@Base+0x11e0>  // b.plast
    25c0:	add	x28, x28, #0x1
    25c4:	add	x7, x7, #0x4
    25c8:	str	x28, [sp, #208]
    25cc:	cmp	x4, x28
    25d0:	add	x28, x28, #0x1
    25d4:	ldurb	w0, [x28, #-2]
    25d8:	strb	w0, [x7], #1
    25dc:	b.ne	25c8 <gconv@@Base+0x1b30>  // b.any
    25e0:	b	1c78 <gconv@@Base+0x11e0>
    25e4:	adrp	x3, 2000 <gconv@@Base+0x1568>
    25e8:	adrp	x1, 2000 <gconv@@Base+0x1568>
    25ec:	add	x3, x3, #0x950
    25f0:	b	24c0 <gconv@@Base+0x1a28>
    25f4:	adrp	x3, 2000 <gconv@@Base+0x1568>
    25f8:	adrp	x1, 2000 <gconv@@Base+0x1568>
    25fc:	add	x3, x3, #0x950
    2600:	b	24e0 <gconv@@Base+0x1a48>
    2604:	adrp	x3, 2000 <gconv@@Base+0x1568>
    2608:	adrp	x1, 2000 <gconv@@Base+0x1568>
    260c:	add	x3, x3, #0x950
    2610:	b	2500 <gconv@@Base+0x1a68>
    2614:	adrp	x3, 2000 <gconv@@Base+0x1568>
    2618:	add	x3, x3, #0x960
    261c:	adrp	x1, 2000 <gconv@@Base+0x1568>
    2620:	adrp	x0, 2000 <gconv@@Base+0x1568>
    2624:	add	x1, x1, #0x818
    2628:	add	x0, x0, #0x828
    262c:	mov	w2, #0x18b                 	// #395
    2630:	bl	880 <__assert_fail@plt>
    2634:	ldr	x2, [x24]
    2638:	mov	x4, x20
    263c:	ldr	x6, [sp, #152]
    2640:	add	x3, sp, #0xd0
    2644:	ldr	x5, [sp, #168]
    2648:	mov	x1, x21
    264c:	mov	x0, x23
    2650:	str	x13, [sp, #104]
    2654:	str	w7, [sp, #176]
    2658:	str	x11, [sp, #184]
    265c:	bl	830 <__gconv_transliterate@plt>
    2660:	sxtw	x2, w0
    2664:	ldr	w7, [sp, #176]
    2668:	cmp	w2, #0x6
    266c:	ldr	x13, [sp, #104]
    2670:	ldr	x11, [sp, #184]
    2674:	b.ne	2330 <gconv@@Base+0x1898>  // b.any
    2678:	b	1cfc <gconv@@Base+0x1264>
    267c:	adrp	x3, 2000 <gconv@@Base+0x1568>
    2680:	adrp	x1, 2000 <gconv@@Base+0x1568>
    2684:	add	x3, x3, #0x950
    2688:	b	2620 <gconv@@Base+0x1b88>
    268c:	stp	x23, x24, [sp, #48]
    2690:	bl	840 <__stack_chk_fail@plt>
    2694:	adrp	x3, 2000 <gconv@@Base+0x1568>
    2698:	adrp	x1, 2000 <gconv@@Base+0x1568>
    269c:	adrp	x0, 2000 <gconv@@Base+0x1568>
    26a0:	add	x3, x3, #0x978
    26a4:	add	x1, x1, #0x7e8
    26a8:	add	x0, x0, #0x800
    26ac:	mov	w2, #0x1a4                 	// #420
    26b0:	stp	x23, x24, [sp, #48]
    26b4:	bl	880 <__assert_fail@plt>
    26b8:	adrp	x3, 2000 <gconv@@Base+0x1568>
    26bc:	add	x3, x3, #0x950
    26c0:	adrp	x1, 2000 <gconv@@Base+0x1568>
    26c4:	adrp	x0, 2000 <gconv@@Base+0x1568>
    26c8:	add	x1, x1, #0x818
    26cc:	add	x0, x0, #0x858
    26d0:	mov	w2, #0x1c9                 	// #457
    26d4:	bl	880 <__assert_fail@plt>
    26d8:	adrp	x3, 2000 <gconv@@Base+0x1568>
    26dc:	adrp	x1, 2000 <gconv@@Base+0x1568>
    26e0:	adrp	x0, 2000 <gconv@@Base+0x1568>
    26e4:	add	x3, x3, #0x978
    26e8:	add	x1, x1, #0x7e8
    26ec:	add	x0, x0, #0x800
    26f0:	mov	w2, #0x234                 	// #564
    26f4:	bl	880 <__assert_fail@plt>
    26f8:	ldp	x0, x1, [sp, #200]
    26fc:	str	x1, [x24]
    2700:	cmp	x6, x0
    2704:	b.eq	17ec <gconv@@Base+0xd54>  // b.none
    2708:	b	1d14 <gconv@@Base+0x127c>
    270c:	mov	w1, #0x1c00                	// #7168
    2710:	cmp	w1, w0, lsr #7
    2714:	b.ne	2770 <gconv@@Base+0x1cd8>  // b.any
    2718:	add	x0, x28, #0x4
    271c:	str	x0, [sp, #208]
    2720:	b	1094 <gconv@@Base+0x5fc>
    2724:	mov	x6, x0
    2728:	mov	x2, x22
    272c:	mov	x0, x15
    2730:	add	x5, sp, #0xd8
    2734:	add	x3, sp, #0xd0
    2738:	mov	x1, x21
    273c:	str	x15, [sp, #112]
    2740:	stp	x4, x7, [sp, #160]
    2744:	stp	x18, x14, [sp, #176]
    2748:	bl	830 <__gconv_transliterate@plt>
    274c:	mov	w26, w0
    2750:	cmp	w0, #0x6
    2754:	ldr	x15, [sp, #112]
    2758:	ldp	x4, x7, [sp, #160]
    275c:	ldp	x18, x14, [sp, #176]
    2760:	b.ne	2564 <gconv@@Base+0x1acc>  // b.any
    2764:	tbnz	w19, #1, 20ac <gconv@@Base+0x1614>
    2768:	ldr	x0, [sp, #208]
    276c:	b	2490 <gconv@@Base+0x19f8>
    2770:	ldr	x0, [sp, #152]
    2774:	cbnz	x0, 2484 <gconv@@Base+0x19ec>
    2778:	b	1dfc <gconv@@Base+0x1364>
    277c:	adrp	x3, 2000 <gconv@@Base+0x1568>
    2780:	adrp	x1, 2000 <gconv@@Base+0x1568>
    2784:	adrp	x0, 2000 <gconv@@Base+0x1568>
    2788:	add	x3, x3, #0x978
    278c:	add	x1, x1, #0x7e8
    2790:	add	x0, x0, #0x938
    2794:	mov	w2, #0x31e                 	// #798
    2798:	bl	880 <__assert_fail@plt>
    279c:	mov	x2, x1
    27a0:	ldr	x1, [x1]
    27a4:	add	x1, x1, #0x1
    27a8:	str	x1, [x2]
    27ac:	b	1330 <gconv@@Base+0x898>
    27b0:	adrp	x3, 2000 <gconv@@Base+0x1568>
    27b4:	adrp	x1, 2000 <gconv@@Base+0x1568>
    27b8:	add	x3, x3, #0x960
    27bc:	b	26c4 <gconv@@Base+0x1c2c>
    27c0:	sub	w3, w2, #0xa1
    27c4:	cmp	w3, #0x32
    27c8:	b.ls	215c <gconv@@Base+0x16c4>  // b.plast
    27cc:	b	2270 <gconv@@Base+0x17d8>

Disassembly of section .fini:

00000000000027d0 <.fini>:
    27d0:	stp	x29, x30, [sp, #-16]!
    27d4:	mov	x29, sp
    27d8:	ldp	x29, x30, [sp], #16
    27dc:	ret
