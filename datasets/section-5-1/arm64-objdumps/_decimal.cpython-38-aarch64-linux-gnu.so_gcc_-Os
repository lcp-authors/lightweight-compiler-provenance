
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_decimal.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000064b0 <.init>:
    64b0:	stp	x29, x30, [sp, #-16]!
    64b4:	mov	x29, sp
    64b8:	bl	6b40 <PyFloat_FromString@plt+0x10>
    64bc:	ldp	x29, x30, [sp], #16
    64c0:	ret

Disassembly of section .plt:

00000000000064d0 <memcpy@plt-0x20>:
    64d0:	stp	x16, x30, [sp, #-16]!
    64d4:	adrp	x16, 42000 <PyInit__decimal@@Base+0x31078>
    64d8:	ldr	x17, [x16, #4088]
    64dc:	add	x16, x16, #0xff8
    64e0:	br	x17
    64e4:	nop
    64e8:	nop
    64ec:	nop

00000000000064f0 <memcpy@plt>:
    64f0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    64f4:	ldr	x17, [x16]
    64f8:	add	x16, x16, #0x0
    64fc:	br	x17

0000000000006500 <PyUnicode_FromFormat@plt>:
    6500:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6504:	ldr	x17, [x16, #8]
    6508:	add	x16, x16, #0x8
    650c:	br	x17

0000000000006510 <memmove@plt>:
    6510:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6514:	ldr	x17, [x16, #16]
    6518:	add	x16, x16, #0x10
    651c:	br	x17

0000000000006520 <PyList_New@plt>:
    6520:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6524:	ldr	x17, [x16, #24]
    6528:	add	x16, x16, #0x18
    652c:	br	x17

0000000000006530 <_PyUnicode_Ready@plt>:
    6530:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6534:	ldr	x17, [x16, #32]
    6538:	add	x16, x16, #0x20
    653c:	br	x17

0000000000006540 <PyDict_SetItemString@plt>:
    6540:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6544:	ldr	x17, [x16, #40]
    6548:	add	x16, x16, #0x28
    654c:	br	x17

0000000000006550 <strlen@plt>:
    6550:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6554:	ldr	x17, [x16, #48]
    6558:	add	x16, x16, #0x30
    655c:	br	x17

0000000000006560 <PyDict_Size@plt>:
    6560:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6564:	ldr	x17, [x16, #56]
    6568:	add	x16, x16, #0x38
    656c:	br	x17

0000000000006570 <fputs@plt>:
    6570:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6574:	ldr	x17, [x16, #64]
    6578:	add	x16, x16, #0x40
    657c:	br	x17

0000000000006580 <mbstowcs@plt>:
    6580:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6584:	ldr	x17, [x16, #72]
    6588:	add	x16, x16, #0x48
    658c:	br	x17

0000000000006590 <PyModule_AddIntConstant@plt>:
    6590:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6594:	ldr	x17, [x16, #80]
    6598:	add	x16, x16, #0x50
    659c:	br	x17

00000000000065a0 <raise@plt>:
    65a0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    65a4:	ldr	x17, [x16, #88]
    65a8:	add	x16, x16, #0x58
    65ac:	br	x17

00000000000065b0 <PyArg_ParseTupleAndKeywords@plt>:
    65b0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    65b4:	ldr	x17, [x16, #96]
    65b8:	add	x16, x16, #0x60
    65bc:	br	x17

00000000000065c0 <PyList_AsTuple@plt>:
    65c0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    65c4:	ldr	x17, [x16, #104]
    65c8:	add	x16, x16, #0x68
    65cc:	br	x17

00000000000065d0 <strtoll@plt>:
    65d0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    65d4:	ldr	x17, [x16, #112]
    65d8:	add	x16, x16, #0x70
    65dc:	br	x17

00000000000065e0 <PyObject_CallMethod@plt>:
    65e0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    65e4:	ldr	x17, [x16, #120]
    65e8:	add	x16, x16, #0x78
    65ec:	br	x17

00000000000065f0 <PyMem_Free@plt>:
    65f0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    65f4:	ldr	x17, [x16, #128]
    65f8:	add	x16, x16, #0x80
    65fc:	br	x17

0000000000006600 <PyUnicode_FromWideChar@plt>:
    6600:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6604:	ldr	x17, [x16, #136]
    6608:	add	x16, x16, #0x88
    660c:	br	x17

0000000000006610 <PyObject_GetAttrString@plt>:
    6610:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6614:	ldr	x17, [x16, #144]
    6618:	add	x16, x16, #0x90
    661c:	br	x17

0000000000006620 <__cxa_finalize@plt>:
    6620:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6624:	ldr	x17, [x16, #152]
    6628:	add	x16, x16, #0x98
    662c:	br	x17

0000000000006630 <_PyLong_New@plt>:
    6630:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6634:	ldr	x17, [x16, #160]
    6638:	add	x16, x16, #0xa0
    663c:	br	x17

0000000000006640 <fputc@plt>:
    6640:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6644:	ldr	x17, [x16, #168]
    6648:	add	x16, x16, #0xa8
    664c:	br	x17

0000000000006650 <PyUnicode_AsUTF8String@plt>:
    6650:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6654:	ldr	x17, [x16, #176]
    6658:	add	x16, x16, #0xb0
    665c:	br	x17

0000000000006660 <_Py_Dealloc@plt>:
    6660:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6664:	ldr	x17, [x16, #184]
    6668:	add	x16, x16, #0xb8
    666c:	br	x17

0000000000006670 <PyErr_NoMemory@plt>:
    6670:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6674:	ldr	x17, [x16, #192]
    6678:	add	x16, x16, #0xc0
    667c:	br	x17

0000000000006680 <PyErr_SetObject@plt>:
    6680:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6684:	ldr	x17, [x16, #200]
    6688:	add	x16, x16, #0xc8
    668c:	br	x17

0000000000006690 <__ctype_tolower_loc@plt>:
    6690:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6694:	ldr	x17, [x16, #208]
    6698:	add	x16, x16, #0xd0
    669c:	br	x17

00000000000066a0 <snprintf@plt>:
    66a0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    66a4:	ldr	x17, [x16, #216]
    66a8:	add	x16, x16, #0xd8
    66ac:	br	x17

00000000000066b0 <log10@plt>:
    66b0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    66b4:	ldr	x17, [x16, #224]
    66b8:	add	x16, x16, #0xe0
    66bc:	br	x17

00000000000066c0 <localeconv@plt>:
    66c0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    66c4:	ldr	x17, [x16, #232]
    66c8:	add	x16, x16, #0xe8
    66cc:	br	x17

00000000000066d0 <malloc@plt>:
    66d0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    66d4:	ldr	x17, [x16, #240]
    66d8:	add	x16, x16, #0xf0
    66dc:	br	x17

00000000000066e0 <PyErr_SetString@plt>:
    66e0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    66e4:	ldr	x17, [x16, #248]
    66e8:	add	x16, x16, #0xf8
    66ec:	br	x17

00000000000066f0 <PyObject_IsInstance@plt>:
    66f0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    66f4:	ldr	x17, [x16, #256]
    66f8:	add	x16, x16, #0x100
    66fc:	br	x17

0000000000006700 <strcat@plt>:
    6700:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6704:	ldr	x17, [x16, #264]
    6708:	add	x16, x16, #0x108
    670c:	br	x17

0000000000006710 <memset@plt>:
    6710:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6714:	ldr	x17, [x16, #272]
    6718:	add	x16, x16, #0x110
    671c:	br	x17

0000000000006720 <PyContextVar_Set@plt>:
    6720:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6724:	ldr	x17, [x16, #280]
    6728:	add	x16, x16, #0x118
    672c:	br	x17

0000000000006730 <PyObject_Free@plt>:
    6730:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6734:	ldr	x17, [x16, #288]
    6738:	add	x16, x16, #0x120
    673c:	br	x17

0000000000006740 <PyLong_FromSsize_t@plt>:
    6740:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6744:	ldr	x17, [x16, #296]
    6748:	add	x16, x16, #0x128
    674c:	br	x17

0000000000006750 <PyFloat_FromDouble@plt>:
    6750:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6754:	ldr	x17, [x16, #304]
    6758:	add	x16, x16, #0x130
    675c:	br	x17

0000000000006760 <PyType_Ready@plt>:
    6760:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6764:	ldr	x17, [x16, #312]
    6768:	add	x16, x16, #0x138
    676c:	br	x17

0000000000006770 <calloc@plt>:
    6770:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6774:	ldr	x17, [x16, #320]
    6778:	add	x16, x16, #0x140
    677c:	br	x17

0000000000006780 <PyLong_FromLong@plt>:
    6780:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6784:	ldr	x17, [x16, #328]
    6788:	add	x16, x16, #0x148
    678c:	br	x17

0000000000006790 <PyLong_AsSsize_t@plt>:
    6790:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6794:	ldr	x17, [x16, #336]
    6798:	add	x16, x16, #0x150
    679c:	br	x17

00000000000067a0 <_PyLong_GCD@plt>:
    67a0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    67a4:	ldr	x17, [x16, #344]
    67a8:	add	x16, x16, #0x158
    67ac:	br	x17

00000000000067b0 <PyErr_NewException@plt>:
    67b0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    67b4:	ldr	x17, [x16, #352]
    67b8:	add	x16, x16, #0x160
    67bc:	br	x17

00000000000067c0 <realloc@plt>:
    67c0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    67c4:	ldr	x17, [x16, #360]
    67c8:	add	x16, x16, #0x168
    67cc:	br	x17

00000000000067d0 <PyErr_Clear@plt>:
    67d0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    67d4:	ldr	x17, [x16, #368]
    67d8:	add	x16, x16, #0x170
    67dc:	br	x17

00000000000067e0 <PyContextVar_Get@plt>:
    67e0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    67e4:	ldr	x17, [x16, #376]
    67e8:	add	x16, x16, #0x178
    67ec:	br	x17

00000000000067f0 <PyBool_FromLong@plt>:
    67f0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    67f4:	ldr	x17, [x16, #384]
    67f8:	add	x16, x16, #0x180
    67fc:	br	x17

0000000000006800 <PyContextVar_New@plt>:
    6800:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6804:	ldr	x17, [x16, #392]
    6808:	add	x16, x16, #0x188
    680c:	br	x17

0000000000006810 <PyList_Append@plt>:
    6810:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6814:	ldr	x17, [x16, #400]
    6818:	add	x16, x16, #0x190
    681c:	br	x17

0000000000006820 <__gmon_start__@plt>:
    6820:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6824:	ldr	x17, [x16, #408]
    6828:	add	x16, x16, #0x198
    682c:	br	x17

0000000000006830 <PyObject_CallFunction@plt>:
    6830:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6834:	ldr	x17, [x16, #416]
    6838:	add	x16, x16, #0x1a0
    683c:	br	x17

0000000000006840 <PyTuple_New@plt>:
    6840:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6844:	ldr	x17, [x16, #424]
    6848:	add	x16, x16, #0x1a8
    684c:	br	x17

0000000000006850 <PyObject_GenericGetAttr@plt>:
    6850:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6854:	ldr	x17, [x16, #432]
    6858:	add	x16, x16, #0x1b0
    685c:	br	x17

0000000000006860 <abort@plt>:
    6860:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6864:	ldr	x17, [x16, #440]
    6868:	add	x16, x16, #0x1b8
    686c:	br	x17

0000000000006870 <Py_BuildValue@plt>:
    6870:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6874:	ldr	x17, [x16, #448]
    6878:	add	x16, x16, #0x1c0
    687c:	br	x17

0000000000006880 <PyErr_Occurred@plt>:
    6880:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6884:	ldr	x17, [x16, #456]
    6888:	add	x16, x16, #0x1c8
    688c:	br	x17

0000000000006890 <PyModule_Create2@plt>:
    6890:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6894:	ldr	x17, [x16, #464]
    6898:	add	x16, x16, #0x1d0
    689c:	br	x17

00000000000068a0 <_PyUnicode_IsWhitespace@plt>:
    68a0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    68a4:	ldr	x17, [x16, #472]
    68a8:	add	x16, x16, #0x1d8
    68ac:	br	x17

00000000000068b0 <puts@plt>:
    68b0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    68b4:	ldr	x17, [x16, #480]
    68b8:	add	x16, x16, #0x1e0
    68bc:	br	x17

00000000000068c0 <PyLong_AsLong@plt>:
    68c0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    68c4:	ldr	x17, [x16, #488]
    68c8:	add	x16, x16, #0x1e8
    68cc:	br	x17

00000000000068d0 <PyImport_ImportModule@plt>:
    68d0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    68d4:	ldr	x17, [x16, #496]
    68d8:	add	x16, x16, #0x1f0
    68dc:	br	x17

00000000000068e0 <PyObject_CallObject@plt>:
    68e0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    68e4:	ldr	x17, [x16, #504]
    68e8:	add	x16, x16, #0x1f8
    68ec:	br	x17

00000000000068f0 <PyObject_CallFunctionObjArgs@plt>:
    68f0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    68f4:	ldr	x17, [x16, #512]
    68f8:	add	x16, x16, #0x200
    68fc:	br	x17

0000000000006900 <strcmp@plt>:
    6900:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6904:	ldr	x17, [x16, #520]
    6908:	add	x16, x16, #0x208
    690c:	br	x17

0000000000006910 <PyDict_GetItemString@plt>:
    6910:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6914:	ldr	x17, [x16, #528]
    6918:	add	x16, x16, #0x210
    691c:	br	x17

0000000000006920 <__ctype_b_loc@plt>:
    6920:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6924:	ldr	x17, [x16, #536]
    6928:	add	x16, x16, #0x218
    692c:	br	x17

0000000000006930 <PyUnicode_CompareWithASCIIString@plt>:
    6930:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6934:	ldr	x17, [x16, #544]
    6938:	add	x16, x16, #0x220
    693c:	br	x17

0000000000006940 <PyUnicode_DecodeUTF8@plt>:
    6940:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6944:	ldr	x17, [x16, #552]
    6948:	add	x16, x16, #0x228
    694c:	br	x17

0000000000006950 <_PyUnicode_ToDecimalDigit@plt>:
    6950:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6954:	ldr	x17, [x16, #560]
    6958:	add	x16, x16, #0x230
    695c:	br	x17

0000000000006960 <PyFloat_AsDouble@plt>:
    6960:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6964:	ldr	x17, [x16, #568]
    6968:	add	x16, x16, #0x238
    696c:	br	x17

0000000000006970 <PyObject_IsTrue@plt>:
    6970:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6974:	ldr	x17, [x16, #576]
    6978:	add	x16, x16, #0x240
    697c:	br	x17

0000000000006980 <PyArg_ParseTuple@plt>:
    6980:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6984:	ldr	x17, [x16, #584]
    6988:	add	x16, x16, #0x248
    698c:	br	x17

0000000000006990 <free@plt>:
    6990:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6994:	ldr	x17, [x16, #592]
    6998:	add	x16, x16, #0x250
    699c:	br	x17

00000000000069a0 <PyUnicode_Compare@plt>:
    69a0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    69a4:	ldr	x17, [x16, #600]
    69a8:	add	x16, x16, #0x258
    69ac:	br	x17

00000000000069b0 <PyList_Size@plt>:
    69b0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    69b4:	ldr	x17, [x16, #608]
    69b8:	add	x16, x16, #0x260
    69bc:	br	x17

00000000000069c0 <PyDict_New@plt>:
    69c0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    69c4:	ldr	x17, [x16, #616]
    69c8:	add	x16, x16, #0x268
    69cc:	br	x17

00000000000069d0 <PyLong_FromUnsignedLong@plt>:
    69d0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    69d4:	ldr	x17, [x16, #624]
    69d8:	add	x16, x16, #0x270
    69dc:	br	x17

00000000000069e0 <strcpy@plt>:
    69e0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    69e4:	ldr	x17, [x16, #632]
    69e8:	add	x16, x16, #0x278
    69ec:	br	x17

00000000000069f0 <_PyObject_New@plt>:
    69f0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    69f4:	ldr	x17, [x16, #640]
    69f8:	add	x16, x16, #0x280
    69fc:	br	x17

0000000000006a00 <PyUnicode_FromString@plt>:
    6a00:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6a04:	ldr	x17, [x16, #648]
    6a08:	add	x16, x16, #0x288
    6a0c:	br	x17

0000000000006a10 <PyModule_AddStringConstant@plt>:
    6a10:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6a14:	ldr	x17, [x16, #656]
    6a18:	add	x16, x16, #0x290
    6a1c:	br	x17

0000000000006a20 <PyUnicode_InternFromString@plt>:
    6a20:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6a24:	ldr	x17, [x16, #664]
    6a28:	add	x16, x16, #0x298
    6a2c:	br	x17

0000000000006a30 <PyModule_AddObject@plt>:
    6a30:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6a34:	ldr	x17, [x16, #672]
    6a38:	add	x16, x16, #0x2a0
    6a3c:	br	x17

0000000000006a40 <PyDict_SetItem@plt>:
    6a40:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6a44:	ldr	x17, [x16, #680]
    6a48:	add	x16, x16, #0x2a8
    6a4c:	br	x17

0000000000006a50 <PyObject_GenericSetAttr@plt>:
    6a50:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6a54:	ldr	x17, [x16, #688]
    6a58:	add	x16, x16, #0x2b0
    6a5c:	br	x17

0000000000006a60 <PyType_IsSubtype@plt>:
    6a60:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6a64:	ldr	x17, [x16, #696]
    6a68:	add	x16, x16, #0x2b8
    6a6c:	br	x17

0000000000006a70 <PyUnicode_AsUTF8AndSize@plt>:
    6a70:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6a74:	ldr	x17, [x16, #704]
    6a78:	add	x16, x16, #0x2c0
    6a7c:	br	x17

0000000000006a80 <PyTuple_Size@plt>:
    6a80:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6a84:	ldr	x17, [x16, #712]
    6a88:	add	x16, x16, #0x2c8
    6a8c:	br	x17

0000000000006a90 <PyComplex_AsCComplex@plt>:
    6a90:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6a94:	ldr	x17, [x16, #720]
    6a98:	add	x16, x16, #0x2d0
    6a9c:	br	x17

0000000000006aa0 <PyComplex_FromDoubles@plt>:
    6aa0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6aa4:	ldr	x17, [x16, #728]
    6aa8:	add	x16, x16, #0x2d8
    6aac:	br	x17

0000000000006ab0 <PyErr_Format@plt>:
    6ab0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6ab4:	ldr	x17, [x16, #736]
    6ab8:	add	x16, x16, #0x2e0
    6abc:	br	x17

0000000000006ac0 <__errno_location@plt>:
    6ac0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6ac4:	ldr	x17, [x16, #744]
    6ac8:	add	x16, x16, #0x2e8
    6acc:	br	x17

0000000000006ad0 <PyList_GetItem@plt>:
    6ad0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6ad4:	ldr	x17, [x16, #752]
    6ad8:	add	x16, x16, #0x2f0
    6adc:	br	x17

0000000000006ae0 <PyMem_Malloc@plt>:
    6ae0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6ae4:	ldr	x17, [x16, #760]
    6ae8:	add	x16, x16, #0x2f8
    6aec:	br	x17

0000000000006af0 <PyUnicode_New@plt>:
    6af0:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6af4:	ldr	x17, [x16, #768]
    6af8:	add	x16, x16, #0x300
    6afc:	br	x17

0000000000006b00 <PyTuple_Pack@plt>:
    6b00:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6b04:	ldr	x17, [x16, #776]
    6b08:	add	x16, x16, #0x308
    6b0c:	br	x17

0000000000006b10 <fprintf@plt>:
    6b10:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6b14:	ldr	x17, [x16, #784]
    6b18:	add	x16, x16, #0x310
    6b1c:	br	x17

0000000000006b20 <PyDict_GetItemWithError@plt>:
    6b20:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6b24:	ldr	x17, [x16, #792]
    6b28:	add	x16, x16, #0x318
    6b2c:	br	x17

0000000000006b30 <PyFloat_FromString@plt>:
    6b30:	adrp	x16, 43000 <memcpy@GLIBC_2.17>
    6b34:	ldr	x17, [x16, #800]
    6b38:	add	x16, x16, #0x320
    6b3c:	br	x17

Disassembly of section .text:

0000000000006b40 <PyInit__decimal@@Base-0xa448>:
    6b40:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    6b44:	ldr	x0, [x0, #3984]
    6b48:	cbz	x0, 6b50 <PyFloat_FromString@plt+0x20>
    6b4c:	b	6820 <__gmon_start__@plt>
    6b50:	ret
    6b54:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
    6b58:	add	x0, x0, #0x6c8
    6b5c:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
    6b60:	add	x1, x1, #0x6c8
    6b64:	cmp	x1, x0
    6b68:	b.eq	6b80 <PyFloat_FromString@plt+0x50>  // b.none
    6b6c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x31078>
    6b70:	ldr	x1, [x1, #3856]
    6b74:	cbz	x1, 6b80 <PyFloat_FromString@plt+0x50>
    6b78:	mov	x16, x1
    6b7c:	br	x16
    6b80:	ret
    6b84:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
    6b88:	add	x0, x0, #0x6c8
    6b8c:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
    6b90:	add	x1, x1, #0x6c8
    6b94:	sub	x1, x1, x0
    6b98:	mov	x2, #0x2                   	// #2
    6b9c:	asr	x1, x1, #3
    6ba0:	sdiv	x1, x1, x2
    6ba4:	cbz	x1, 6bbc <PyFloat_FromString@plt+0x8c>
    6ba8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x31078>
    6bac:	ldr	x2, [x2, #4056]
    6bb0:	cbz	x2, 6bbc <PyFloat_FromString@plt+0x8c>
    6bb4:	mov	x16, x2
    6bb8:	br	x16
    6bbc:	ret
    6bc0:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
    6bc4:	ldrb	w1, [x0, #1736]
    6bc8:	cbnz	w1, 6c0c <PyFloat_FromString@plt+0xdc>
    6bcc:	stp	x29, x30, [sp, #-32]!
    6bd0:	mov	x29, sp
    6bd4:	str	x19, [sp, #16]
    6bd8:	mov	x19, x0
    6bdc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    6be0:	ldr	x0, [x0, #3896]
    6be4:	cbz	x0, 6bf4 <PyFloat_FromString@plt+0xc4>
    6be8:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    6bec:	ldr	x0, [x0, #808]
    6bf0:	bl	6620 <__cxa_finalize@plt>
    6bf4:	bl	6b54 <PyFloat_FromString@plt+0x24>
    6bf8:	mov	w0, #0x1                   	// #1
    6bfc:	strb	w0, [x19, #1736]
    6c00:	ldr	x19, [sp, #16]
    6c04:	ldp	x29, x30, [sp], #32
    6c08:	ret
    6c0c:	ret
    6c10:	b	6b84 <PyFloat_FromString@plt+0x54>
    6c14:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    6c18:	ldr	x0, [x0, #4024]
    6c1c:	ldr	x1, [x0]
    6c20:	add	x1, x1, #0x1
    6c24:	str	x1, [x0]
    6c28:	ret
    6c2c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    6c30:	ldr	x0, [x0, #3976]
    6c34:	ldr	x1, [x0]
    6c38:	add	x1, x1, #0x1
    6c3c:	str	x1, [x0]
    6c40:	ret
    6c44:	ret
    6c48:	str	xzr, [x0, #16]
    6c4c:	mov	w0, #0x0                   	// #0
    6c50:	ret
    6c54:	mov	x0, #0x9                   	// #9
    6c58:	ret
    6c5c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    6c60:	ldr	x0, [x0, #3872]
    6c64:	ldr	x1, [x0, #216]
    6c68:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
    6c6c:	ldr	x0, [x0, #1744]
    6c70:	mov	x16, x1
    6c74:	br	x16
    6c78:	str	wzr, [x0, #40]
    6c7c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    6c80:	ldr	x0, [x0, #4008]
    6c84:	ldr	x1, [x0]
    6c88:	add	x1, x1, #0x1
    6c8c:	str	x1, [x0]
    6c90:	ret
    6c94:	str	wzr, [x0, #44]
    6c98:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    6c9c:	ldr	x0, [x0, #4008]
    6ca0:	ldr	x1, [x0]
    6ca4:	add	x1, x1, #0x1
    6ca8:	str	x1, [x0]
    6cac:	ret
    6cb0:	ldr	x2, [x0]
    6cb4:	add	x2, x2, #0x1
    6cb8:	str	x2, [x0]
    6cbc:	ret
    6cc0:	stp	x29, x30, [sp, #-32]!
    6cc4:	mov	x1, #0x0                   	// #0
    6cc8:	mov	x29, sp
    6ccc:	str	x19, [sp, #16]
    6cd0:	mov	x19, x0
    6cd4:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    6cd8:	add	x0, x0, #0x330
    6cdc:	bl	68e0 <PyObject_CallObject@plt>
    6ce0:	cbz	x0, 6d08 <PyFloat_FromString@plt+0x1d8>
    6ce4:	ldp	x4, x5, [x19, #16]
    6ce8:	stp	x4, x5, [x0, #16]
    6cec:	ldp	x4, x5, [x19, #32]
    6cf0:	stp	x4, x5, [x0, #32]
    6cf4:	ldp	x2, x3, [x19, #48]
    6cf8:	stp	x2, x3, [x0, #48]
    6cfc:	ldr	w1, [x19, #80]
    6d00:	str	wzr, [x0, #48]
    6d04:	str	w1, [x0, #80]
    6d08:	ldr	x19, [sp, #16]
    6d0c:	ldp	x29, x30, [sp], #32
    6d10:	ret
    6d14:	stp	x29, x30, [sp, #-16]!
    6d18:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    6d1c:	add	x1, x1, #0x330
    6d20:	mov	x29, sp
    6d24:	add	x1, x1, #0x1a0
    6d28:	cmp	x0, x1
    6d2c:	b.ne	6d68 <PyFloat_FromString@plt+0x238>  // b.any
    6d30:	bl	69f0 <_PyObject_New@plt>
    6d34:	cbz	x0, 6d60 <PyFloat_FromString@plt+0x230>
    6d38:	mov	x1, #0xffffffffffffffff    	// #-1
    6d3c:	str	x1, [x0, #16]
    6d40:	mov	w1, #0x30                  	// #48
    6d44:	strb	w1, [x0, #24]
    6d48:	mov	x1, #0x4                   	// #4
    6d4c:	stp	xzr, xzr, [x0, #32]
    6d50:	str	xzr, [x0, #48]
    6d54:	str	x1, [x0, #56]
    6d58:	add	x1, x0, #0x48
    6d5c:	str	x1, [x0, #64]
    6d60:	ldp	x29, x30, [sp], #16
    6d64:	ret
    6d68:	ldr	x2, [x0, #304]
    6d6c:	mov	x1, #0x0                   	// #0
    6d70:	blr	x2
    6d74:	b	6d34 <PyFloat_FromString@plt+0x204>
    6d78:	sub	sp, sp, #0x100
    6d7c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    6d80:	adrp	x3, 24000 <PyInit__decimal@@Base+0x13078>
    6d84:	adrp	x4, 24000 <PyInit__decimal@@Base+0x13078>
    6d88:	add	x1, x1, #0x9b0
    6d8c:	add	x6, sp, #0x70
    6d90:	add	x3, x3, #0x625
    6d94:	add	x4, x4, #0x620
    6d98:	add	x7, sp, #0xb8
    6d9c:	mov	x2, #0x0                   	// #0
    6da0:	stp	x29, x30, [sp, #96]
    6da4:	add	x29, sp, #0x60
    6da8:	ldr	x5, [x1]
    6dac:	cbnz	x5, 6e30 <PyFloat_FromString@plt+0x300>
    6db0:	ldr	x0, [sp, #248]
    6db4:	str	x0, [sp, #80]
    6db8:	ldr	x0, [sp, #176]
    6dbc:	str	x0, [sp, #72]
    6dc0:	ldr	x0, [sp, #240]
    6dc4:	str	x0, [sp, #64]
    6dc8:	ldr	x0, [sp, #168]
    6dcc:	str	x0, [sp, #56]
    6dd0:	ldr	x0, [sp, #232]
    6dd4:	str	x0, [sp, #48]
    6dd8:	ldr	x0, [sp, #160]
    6ddc:	str	x0, [sp, #40]
    6de0:	ldr	x0, [sp, #224]
    6de4:	str	x0, [sp, #32]
    6de8:	ldp	x1, x3, [sp, #112]
    6dec:	ldp	x5, x7, [sp, #128]
    6df0:	ldr	x0, [sp, #152]
    6df4:	str	x0, [sp, #24]
    6df8:	ldp	x2, x4, [sp, #184]
    6dfc:	ldr	x0, [sp, #216]
    6e00:	str	x0, [sp, #16]
    6e04:	ldr	x0, [sp, #144]
    6e08:	str	x0, [sp, #8]
    6e0c:	ldr	x6, [sp, #200]
    6e10:	ldr	x0, [sp, #208]
    6e14:	str	x0, [sp]
    6e18:	adrp	x0, 24000 <PyInit__decimal@@Base+0x13078>
    6e1c:	add	x0, x0, #0x62b
    6e20:	bl	6500 <PyUnicode_FromFormat@plt>
    6e24:	ldp	x29, x30, [sp, #96]
    6e28:	add	sp, sp, #0x100
    6e2c:	ret
    6e30:	ldr	x5, [x1, #8]
    6e34:	str	x5, [x2, x6]
    6e38:	ldr	x5, [x0, #16]
    6e3c:	add	x1, x1, #0x20
    6e40:	ldr	w8, [x5]
    6e44:	ldur	w5, [x1, #-16]
    6e48:	tst	w8, w5
    6e4c:	csel	x5, x4, x3, ne  // ne = any
    6e50:	str	x5, [x2, x7]
    6e54:	add	x2, x2, #0x8
    6e58:	b	6da8 <PyFloat_FromString@plt+0x278>
    6e5c:	stp	x29, x30, [sp, #-16]!
    6e60:	add	x0, x0, #0x10
    6e64:	mov	x29, sp
    6e68:	bl	129f4 <PyInit__decimal@@Base+0x1a6c>
    6e6c:	sxtw	x0, w0
    6e70:	ldp	x29, x30, [sp], #16
    6e74:	b	6740 <PyLong_FromSsize_t@plt>
    6e78:	ldrsw	x0, [x0, #80]
    6e7c:	b	6780 <PyLong_FromLong@plt>
    6e80:	stp	x29, x30, [sp, #-16]!
    6e84:	add	x0, x0, #0x10
    6e88:	mov	x29, sp
    6e8c:	bl	129dc <PyInit__decimal@@Base+0x1a54>
    6e90:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
    6e94:	add	x1, x1, #0x6d0
    6e98:	add	x1, x1, #0x8
    6e9c:	ldr	x0, [x1, w0, sxtw #3]
    6ea0:	ldr	x1, [x0]
    6ea4:	add	x1, x1, #0x1
    6ea8:	str	x1, [x0]
    6eac:	ldp	x29, x30, [sp], #16
    6eb0:	ret
    6eb4:	stp	x29, x30, [sp, #-16]!
    6eb8:	add	x0, x0, #0x10
    6ebc:	mov	x29, sp
    6ec0:	bl	129d4 <PyInit__decimal@@Base+0x1a4c>
    6ec4:	ldp	x29, x30, [sp], #16
    6ec8:	b	6740 <PyLong_FromSsize_t@plt>
    6ecc:	stp	x29, x30, [sp, #-16]!
    6ed0:	add	x0, x0, #0x10
    6ed4:	mov	x29, sp
    6ed8:	bl	129cc <PyInit__decimal@@Base+0x1a44>
    6edc:	ldp	x29, x30, [sp], #16
    6ee0:	b	6740 <PyLong_FromSsize_t@plt>
    6ee4:	stp	x29, x30, [sp, #-16]!
    6ee8:	add	x0, x0, #0x10
    6eec:	mov	x29, sp
    6ef0:	bl	129c4 <PyInit__decimal@@Base+0x1a3c>
    6ef4:	ldp	x29, x30, [sp], #16
    6ef8:	b	6740 <PyLong_FromSsize_t@plt>
    6efc:	stp	x29, x30, [sp, #-32]!
    6f00:	mov	x29, sp
    6f04:	str	x19, [sp, #16]
    6f08:	mov	x19, x0
    6f0c:	add	x0, x0, #0x18
    6f10:	bl	17b68 <PyInit__decimal@@Base+0x6be0>
    6f14:	ldr	x0, [x19, #8]
    6f18:	ldr	x1, [x0, #320]
    6f1c:	mov	x0, x19
    6f20:	ldr	x19, [sp, #16]
    6f24:	mov	x16, x1
    6f28:	ldp	x29, x30, [sp], #32
    6f2c:	br	x16
    6f30:	stp	x29, x30, [sp, #-16]!
    6f34:	add	x0, x0, #0x18
    6f38:	mov	x29, sp
    6f3c:	bl	1798c <PyInit__decimal@@Base+0x6a04>
    6f40:	cbz	w0, 6f4c <PyFloat_FromString@plt+0x41c>
    6f44:	ldp	x29, x30, [sp], #16
    6f48:	b	6c14 <PyFloat_FromString@plt+0xe4>
    6f4c:	ldp	x29, x30, [sp], #16
    6f50:	b	6c2c <PyFloat_FromString@plt+0xfc>
    6f54:	cmp	w0, #0x1
    6f58:	b.ne	6f78 <PyFloat_FromString@plt+0x448>  // b.any
    6f5c:	ldrb	w0, [x1, x2]
    6f60:	cmp	w0, #0x7f
    6f64:	b.hi	6f90 <PyFloat_FromString@plt+0x460>  // b.pmore
    6f68:	adrp	x1, 42000 <PyInit__decimal@@Base+0x31078>
    6f6c:	ldr	x1, [x1, #3880]
    6f70:	ldrb	w0, [x1, w0, uxtw]
    6f74:	ret
    6f78:	cmp	w0, #0x2
    6f7c:	b.ne	6f88 <PyFloat_FromString@plt+0x458>  // b.any
    6f80:	ldrh	w0, [x1, x2, lsl #1]
    6f84:	b	6f60 <PyFloat_FromString@plt+0x430>
    6f88:	ldr	w0, [x1, x2, lsl #2]
    6f8c:	b	6f60 <PyFloat_FromString@plt+0x430>
    6f90:	b	68a0 <_PyUnicode_IsWhitespace@plt>
    6f94:	stp	x29, x30, [sp, #-96]!
    6f98:	mov	x29, sp
    6f9c:	stp	x25, x26, [sp, #64]
    6fa0:	mov	w25, w1
    6fa4:	ldrsb	w1, [x0, #32]
    6fa8:	stp	x19, x20, [sp, #16]
    6fac:	mov	x19, x0
    6fb0:	stp	x21, x22, [sp, #32]
    6fb4:	stp	x23, x24, [sp, #48]
    6fb8:	mov	w24, w2
    6fbc:	stp	x27, x28, [sp, #80]
    6fc0:	tbz	w1, #31, 6fdc <PyFloat_FromString@plt+0x4ac>
    6fc4:	ldrb	w1, [x19, #32]
    6fc8:	ldrb	w23, [x19, #32]
    6fcc:	ubfx	x23, x23, #2, #3
    6fd0:	tbnz	w1, #5, 6ff0 <PyFloat_FromString@plt+0x4c0>
    6fd4:	ldr	x20, [x19, #72]
    6fd8:	b	7000 <PyFloat_FromString@plt+0x4d0>
    6fdc:	bl	6530 <_PyUnicode_Ready@plt>
    6fe0:	cmn	w0, #0x1
    6fe4:	b.ne	6fc4 <PyFloat_FromString@plt+0x494>  // b.any
    6fe8:	mov	x21, #0x0                   	// #0
    6fec:	b	7018 <PyFloat_FromString@plt+0x4e8>
    6ff0:	add	x0, x19, #0x30
    6ff4:	add	x20, x19, #0x48
    6ff8:	tst	x1, #0x40
    6ffc:	csel	x20, x20, x0, eq  // eq = none
    7000:	ldr	x22, [x19, #16]
    7004:	add	x0, x22, #0x1
    7008:	bl	6ae0 <PyMem_Malloc@plt>
    700c:	mov	x21, x0
    7010:	cbnz	x0, 7038 <PyFloat_FromString@plt+0x508>
    7014:	bl	6670 <PyErr_NoMemory@plt>
    7018:	mov	x0, x21
    701c:	ldp	x19, x20, [sp, #16]
    7020:	ldp	x21, x22, [sp, #32]
    7024:	ldp	x23, x24, [sp, #48]
    7028:	ldp	x25, x26, [sp, #64]
    702c:	ldp	x27, x28, [sp, #80]
    7030:	ldp	x29, x30, [sp], #96
    7034:	ret
    7038:	cbz	w25, 7148 <PyFloat_FromString@plt+0x618>
    703c:	cmp	x22, #0x0
    7040:	b.le	70a0 <PyFloat_FromString@plt+0x570>
    7044:	sub	x19, x22, #0x1
    7048:	mov	x1, x20
    704c:	mov	x2, x19
    7050:	mov	w0, w23
    7054:	bl	6f54 <PyFloat_FromString@plt+0x424>
    7058:	cbnz	w0, 708c <PyFloat_FromString@plt+0x55c>
    705c:	mov	x27, #0x0                   	// #0
    7060:	mov	x2, x27
    7064:	mov	x1, x20
    7068:	mov	w0, w23
    706c:	bl	6f54 <PyFloat_FromString@plt+0x424>
    7070:	cbnz	w0, 7094 <PyFloat_FromString@plt+0x564>
    7074:	adrp	x25, 42000 <PyInit__decimal@@Base+0x31078>
    7078:	mov	x19, x21
    707c:	and	w24, w24, #0x1
    7080:	mov	w26, #0x20                  	// #32
    7084:	ldr	x25, [x25, #3880]
    7088:	b	70d4 <PyFloat_FromString@plt+0x5a4>
    708c:	mov	x22, x19
    7090:	b	703c <PyFloat_FromString@plt+0x50c>
    7094:	add	x27, x27, #0x1
    7098:	cmp	x22, x27
    709c:	b.gt	7060 <PyFloat_FromString@plt+0x530>
    70a0:	mov	x19, x21
    70a4:	b	70dc <PyFloat_FromString@plt+0x5ac>
    70a8:	cmp	w23, #0x1
    70ac:	b.ne	70e4 <PyFloat_FromString@plt+0x5b4>  // b.any
    70b0:	ldrb	w28, [x20, x27]
    70b4:	cmp	w28, #0x5f
    70b8:	csel	w0, w24, wzr, eq  // eq = none
    70bc:	cbnz	w0, 70d0 <PyFloat_FromString@plt+0x5a0>
    70c0:	sub	w0, w28, #0x1
    70c4:	cmp	w0, #0x7e
    70c8:	b.hi	70fc <PyFloat_FromString@plt+0x5cc>  // b.pmore
    70cc:	strb	w28, [x19], #1
    70d0:	add	x27, x27, #0x1
    70d4:	cmp	x27, x22
    70d8:	b.lt	70a8 <PyFloat_FromString@plt+0x578>  // b.tstop
    70dc:	strb	wzr, [x19]
    70e0:	b	7018 <PyFloat_FromString@plt+0x4e8>
    70e4:	cmp	w23, #0x2
    70e8:	b.ne	70f4 <PyFloat_FromString@plt+0x5c4>  // b.any
    70ec:	ldrh	w28, [x20, x27, lsl #1]
    70f0:	b	70b4 <PyFloat_FromString@plt+0x584>
    70f4:	ldr	w28, [x20, x27, lsl #2]
    70f8:	b	70b4 <PyFloat_FromString@plt+0x584>
    70fc:	cmp	w28, #0x7f
    7100:	b.hi	711c <PyFloat_FromString@plt+0x5ec>  // b.pmore
    7104:	ldrb	w0, [x25]
    7108:	cmp	w0, #0x0
    710c:	cset	w0, ne  // ne = any
    7110:	cbz	w0, 7128 <PyFloat_FromString@plt+0x5f8>
    7114:	strb	w26, [x19], #1
    7118:	b	70d0 <PyFloat_FromString@plt+0x5a0>
    711c:	mov	w0, w28
    7120:	bl	68a0 <_PyUnicode_IsWhitespace@plt>
    7124:	b	7108 <PyFloat_FromString@plt+0x5d8>
    7128:	mov	w0, w28
    712c:	bl	6950 <_PyUnicode_ToDecimalDigit@plt>
    7130:	tbz	w0, #31, 713c <PyFloat_FromString@plt+0x60c>
    7134:	strb	wzr, [x21]
    7138:	b	7018 <PyFloat_FromString@plt+0x4e8>
    713c:	add	w0, w0, #0x30
    7140:	strb	w0, [x19], #1
    7144:	b	70d0 <PyFloat_FromString@plt+0x5a0>
    7148:	mov	x27, #0x0                   	// #0
    714c:	b	7074 <PyFloat_FromString@plt+0x544>
    7150:	mov	x4, x1
    7154:	mov	x1, x2
    7158:	ldr	x2, [x0, #8]
    715c:	ldr	x2, [x2, #168]
    7160:	tbz	w2, #26, 717c <PyFloat_FromString@plt+0x64c>
    7164:	mov	x3, x0
    7168:	ldr	x0, [x0]
    716c:	add	x0, x0, #0x1
    7170:	str	x0, [x3]
    7174:	mov	x0, x3
    7178:	ret
    717c:	tbz	w2, #25, 7184 <PyFloat_FromString@plt+0x654>
    7180:	b	65c0 <PyList_AsTuple@plt>
    7184:	stp	x29, x30, [sp, #-16]!
    7188:	mov	x0, x4
    718c:	mov	x29, sp
    7190:	bl	66e0 <PyErr_SetString@plt>
    7194:	mov	x3, #0x0                   	// #0
    7198:	mov	x0, x3
    719c:	ldp	x29, x30, [sp], #16
    71a0:	ret
    71a4:	stp	x29, x30, [sp, #-48]!
    71a8:	mov	x29, sp
    71ac:	stp	x19, x20, [sp, #16]
    71b0:	mov	x20, x1
    71b4:	mov	w1, #0x7f                  	// #127
    71b8:	str	x21, [sp, #32]
    71bc:	mov	x21, x0
    71c0:	mov	x0, x20
    71c4:	bl	6af0 <PyUnicode_New@plt>
    71c8:	mov	x19, x0
    71cc:	cbz	x0, 71f4 <PyFloat_FromString@plt+0x6c4>
    71d0:	ldrb	w2, [x0, #32]
    71d4:	tbz	w2, #5, 7208 <PyFloat_FromString@plt+0x6d8>
    71d8:	add	x1, x0, #0x30
    71dc:	tst	x2, #0x40
    71e0:	add	x0, x0, #0x48
    71e4:	csel	x0, x0, x1, eq  // eq = none
    71e8:	mov	x2, x20
    71ec:	mov	x1, x21
    71f0:	bl	64f0 <memcpy@plt>
    71f4:	mov	x0, x19
    71f8:	ldp	x19, x20, [sp, #16]
    71fc:	ldr	x21, [sp, #32]
    7200:	ldp	x29, x30, [sp], #48
    7204:	ret
    7208:	ldr	x0, [x0, #72]
    720c:	b	71e8 <PyFloat_FromString@plt+0x6b8>
    7210:	stp	x29, x30, [sp, #-16]!
    7214:	add	x0, x0, #0x18
    7218:	mov	x29, sp
    721c:	bl	179e4 <PyInit__decimal@@Base+0x6a5c>
    7220:	cbz	w0, 722c <PyFloat_FromString@plt+0x6fc>
    7224:	ldp	x29, x30, [sp], #16
    7228:	b	6c14 <PyFloat_FromString@plt+0xe4>
    722c:	ldp	x29, x30, [sp], #16
    7230:	b	6c2c <PyFloat_FromString@plt+0xfc>
    7234:	stp	x29, x30, [sp, #-16]!
    7238:	add	x0, x0, #0x18
    723c:	mov	x29, sp
    7240:	bl	179e4 <PyInit__decimal@@Base+0x6a5c>
    7244:	cmp	w0, #0x0
    7248:	cset	w0, eq  // eq = none
    724c:	ldp	x29, x30, [sp], #16
    7250:	ret
    7254:	stp	x29, x30, [sp, #-16]!
    7258:	add	x0, x0, #0x18
    725c:	mov	x29, sp
    7260:	bl	179cc <PyInit__decimal@@Base+0x6a44>
    7264:	cbz	w0, 7270 <PyFloat_FromString@plt+0x740>
    7268:	ldp	x29, x30, [sp], #16
    726c:	b	6c14 <PyFloat_FromString@plt+0xe4>
    7270:	ldp	x29, x30, [sp], #16
    7274:	b	6c2c <PyFloat_FromString@plt+0xfc>
    7278:	stp	x29, x30, [sp, #-16]!
    727c:	add	x0, x0, #0x18
    7280:	mov	x29, sp
    7284:	bl	179c0 <PyInit__decimal@@Base+0x6a38>
    7288:	cbz	w0, 7294 <PyFloat_FromString@plt+0x764>
    728c:	ldp	x29, x30, [sp], #16
    7290:	b	6c14 <PyFloat_FromString@plt+0xe4>
    7294:	ldp	x29, x30, [sp], #16
    7298:	b	6c2c <PyFloat_FromString@plt+0xfc>
    729c:	stp	x29, x30, [sp, #-16]!
    72a0:	add	x0, x0, #0x18
    72a4:	mov	x29, sp
    72a8:	bl	179b4 <PyInit__decimal@@Base+0x6a2c>
    72ac:	cbz	w0, 72b8 <PyFloat_FromString@plt+0x788>
    72b0:	ldp	x29, x30, [sp], #16
    72b4:	b	6c14 <PyFloat_FromString@plt+0xe4>
    72b8:	ldp	x29, x30, [sp], #16
    72bc:	b	6c2c <PyFloat_FromString@plt+0xfc>
    72c0:	stp	x29, x30, [sp, #-16]!
    72c4:	add	x0, x0, #0x18
    72c8:	mov	x29, sp
    72cc:	bl	17980 <PyInit__decimal@@Base+0x69f8>
    72d0:	cbz	w0, 72dc <PyFloat_FromString@plt+0x7ac>
    72d4:	ldp	x29, x30, [sp], #16
    72d8:	b	6c14 <PyFloat_FromString@plt+0xe4>
    72dc:	ldp	x29, x30, [sp], #16
    72e0:	b	6c2c <PyFloat_FromString@plt+0xfc>
    72e4:	stp	x29, x30, [sp, #-16]!
    72e8:	add	x0, x0, #0x18
    72ec:	mov	x29, sp
    72f0:	bl	17970 <PyInit__decimal@@Base+0x69e8>
    72f4:	cbz	w0, 7300 <PyFloat_FromString@plt+0x7d0>
    72f8:	ldp	x29, x30, [sp], #16
    72fc:	b	6c14 <PyFloat_FromString@plt+0xe4>
    7300:	ldp	x29, x30, [sp], #16
    7304:	b	6c2c <PyFloat_FromString@plt+0xfc>
    7308:	stp	x29, x30, [sp, #-16]!
    730c:	add	x0, x0, #0x18
    7310:	mov	x29, sp
    7314:	bl	17968 <PyInit__decimal@@Base+0x69e0>
    7318:	cbz	w0, 7324 <PyFloat_FromString@plt+0x7f4>
    731c:	ldp	x29, x30, [sp], #16
    7320:	b	6c14 <PyFloat_FromString@plt+0xe4>
    7324:	ldp	x29, x30, [sp], #16
    7328:	b	6c2c <PyFloat_FromString@plt+0xfc>
    732c:	stp	x29, x30, [sp, #-16]!
    7330:	add	x0, x0, #0x10
    7334:	mov	x29, sp
    7338:	bl	17674 <PyInit__decimal@@Base+0x66ec>
    733c:	ldp	x29, x30, [sp], #16
    7340:	b	6740 <PyLong_FromSsize_t@plt>
    7344:	stp	x29, x30, [sp, #-16]!
    7348:	add	x0, x0, #0x10
    734c:	mov	x29, sp
    7350:	bl	17660 <PyInit__decimal@@Base+0x66d8>
    7354:	ldp	x29, x30, [sp], #16
    7358:	b	6740 <PyLong_FromSsize_t@plt>
    735c:	stp	x29, x30, [sp, #-32]!
    7360:	mov	x29, sp
    7364:	stp	x19, x20, [sp, #16]
    7368:	mov	x19, x0
    736c:	ldr	x0, [x0, #8]
    7370:	ldr	x20, [x0, #32]
    7374:	add	x0, x19, #0x18
    7378:	bl	17b18 <PyInit__decimal@@Base+0x6b90>
    737c:	cbz	w0, 7388 <PyFloat_FromString@plt+0x858>
    7380:	ldr	x0, [x19, #56]
    7384:	add	x20, x20, x0, lsl #3
    7388:	mov	x0, x20
    738c:	ldp	x19, x20, [sp, #16]
    7390:	ldp	x29, x30, [sp], #32
    7394:	b	6740 <PyLong_FromSsize_t@plt>
    7398:	stp	x29, x30, [sp, #-32]!
    739c:	mov	x29, sp
    73a0:	str	x19, [sp, #16]
    73a4:	add	x19, x0, #0x18
    73a8:	mov	x0, x19
    73ac:	bl	179d8 <PyInit__decimal@@Base+0x6a50>
    73b0:	cbnz	w0, 73c8 <PyFloat_FromString@plt+0x898>
    73b4:	mov	x0, x19
    73b8:	bl	17650 <PyInit__decimal@@Base+0x66c8>
    73bc:	ldr	x19, [sp, #16]
    73c0:	ldp	x29, x30, [sp], #32
    73c4:	b	6740 <PyLong_FromSsize_t@plt>
    73c8:	mov	x0, #0x0                   	// #0
    73cc:	b	73bc <PyFloat_FromString@plt+0x88c>
    73d0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    73d4:	add	x1, x1, #0x9b0
    73d8:	ldr	x2, [x1]
    73dc:	cbnz	x2, 740c <PyFloat_FromString@plt+0x8dc>
    73e0:	stp	x29, x30, [sp, #-16]!
    73e4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    73e8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    73ec:	mov	x29, sp
    73f0:	ldr	x0, [x0, #3968]
    73f4:	add	x1, x1, #0x6c5
    73f8:	ldr	x0, [x0]
    73fc:	bl	66e0 <PyErr_SetString@plt>
    7400:	mov	w0, #0x8000                	// #32768
    7404:	ldp	x29, x30, [sp], #16
    7408:	ret
    740c:	ldr	x2, [x1, #24]
    7410:	cmp	x2, x0
    7414:	b.ne	7420 <PyFloat_FromString@plt+0x8f0>  // b.any
    7418:	ldr	w0, [x1, #16]
    741c:	ret
    7420:	add	x1, x1, #0x20
    7424:	b	73d8 <PyFloat_FromString@plt+0x8a8>
    7428:	stp	x29, x30, [sp, #-32]!
    742c:	mov	x29, sp
    7430:	str	x19, [sp, #16]
    7434:	mov	x19, x0
    7438:	mov	x0, x1
    743c:	bl	73d0 <PyFloat_FromString@plt+0x8a0>
    7440:	tst	w0, #0x18000
    7444:	b.ne	7470 <PyFloat_FromString@plt+0x940>  // b.any
    7448:	ldr	x1, [x19, #16]
    744c:	ldr	w1, [x1]
    7450:	tst	w0, w1
    7454:	b.eq	7464 <PyFloat_FromString@plt+0x934>  // b.none
    7458:	ldr	x19, [sp, #16]
    745c:	ldp	x29, x30, [sp], #32
    7460:	b	6c14 <PyFloat_FromString@plt+0xe4>
    7464:	ldr	x19, [sp, #16]
    7468:	ldp	x29, x30, [sp], #32
    746c:	b	6c2c <PyFloat_FromString@plt+0xfc>
    7470:	mov	x0, #0x0                   	// #0
    7474:	ldr	x19, [sp, #16]
    7478:	ldp	x29, x30, [sp], #32
    747c:	ret
    7480:	stp	x29, x30, [sp, #-48]!
    7484:	mov	x29, sp
    7488:	stp	x19, x20, [sp, #16]
    748c:	mov	x19, #0x0                   	// #0
    7490:	mov	w20, #0x0                   	// #0
    7494:	stp	x21, x22, [sp, #32]
    7498:	mov	x22, x0
    749c:	bl	69b0 <PyList_Size@plt>
    74a0:	mov	x21, x0
    74a4:	cmp	x19, x21
    74a8:	b.lt	74c0 <PyFloat_FromString@plt+0x990>  // b.tstop
    74ac:	mov	w0, w20
    74b0:	ldp	x19, x20, [sp, #16]
    74b4:	ldp	x21, x22, [sp, #32]
    74b8:	ldp	x29, x30, [sp], #48
    74bc:	ret
    74c0:	mov	x1, x19
    74c4:	mov	x0, x22
    74c8:	bl	6ad0 <PyList_GetItem@plt>
    74cc:	bl	73d0 <PyFloat_FromString@plt+0x8a0>
    74d0:	tst	w0, #0x18000
    74d4:	b.ne	74b0 <PyFloat_FromString@plt+0x980>  // b.any
    74d8:	orr	w20, w20, w0
    74dc:	add	x19, x19, #0x1
    74e0:	b	74a4 <PyFloat_FromString@plt+0x974>
    74e4:	stp	x29, x30, [sp, #-32]!
    74e8:	adrp	x2, 43000 <PyInit__decimal@@Base+0x32078>
    74ec:	add	x2, x2, #0x330
    74f0:	mov	x29, sp
    74f4:	ldr	x0, [x1, #8]
    74f8:	str	x19, [sp, #16]
    74fc:	mov	x19, x1
    7500:	add	x1, x2, #0x1a0
    7504:	cmp	x0, x1
    7508:	b.eq	7514 <PyFloat_FromString@plt+0x9e4>  // b.none
    750c:	bl	6a60 <PyType_IsSubtype@plt>
    7510:	cbz	w0, 7538 <PyFloat_FromString@plt+0xa08>
    7514:	add	x0, x19, #0x18
    7518:	bl	17968 <PyInit__decimal@@Base+0x69e0>
    751c:	cbz	w0, 752c <PyFloat_FromString@plt+0x9fc>
    7520:	ldr	x19, [sp, #16]
    7524:	ldp	x29, x30, [sp], #32
    7528:	b	6c14 <PyFloat_FromString@plt+0xe4>
    752c:	ldr	x19, [sp, #16]
    7530:	ldp	x29, x30, [sp], #32
    7534:	b	6c2c <PyFloat_FromString@plt+0xfc>
    7538:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    753c:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    7540:	add	x1, x1, #0x759
    7544:	ldr	x0, [x0, #3936]
    7548:	ldr	x0, [x0]
    754c:	bl	66e0 <PyErr_SetString@plt>
    7550:	mov	x0, #0x0                   	// #0
    7554:	ldr	x19, [sp, #16]
    7558:	ldp	x29, x30, [sp], #32
    755c:	ret
    7560:	stp	x29, x30, [sp, #-48]!
    7564:	mov	x29, sp
    7568:	ldr	x1, [x0, #8]
    756c:	stp	x19, x20, [sp, #16]
    7570:	ldr	x1, [x1, #168]
    7574:	str	x21, [sp, #32]
    7578:	tbnz	w1, #29, 75ac <PyFloat_FromString@plt+0xa7c>
    757c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    7580:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    7584:	add	x1, x1, #0x774
    7588:	ldr	x0, [x0, #3936]
    758c:	mov	w19, #0x8000                	// #32768
    7590:	ldr	x0, [x0]
    7594:	bl	66e0 <PyErr_SetString@plt>
    7598:	mov	w0, w19
    759c:	ldp	x19, x20, [sp, #16]
    75a0:	ldr	x21, [sp, #32]
    75a4:	ldp	x29, x30, [sp], #48
    75a8:	ret
    75ac:	mov	x21, x0
    75b0:	bl	6560 <PyDict_Size@plt>
    75b4:	cmp	x0, #0x9
    75b8:	b.eq	7614 <PyFloat_FromString@plt+0xae4>  // b.none
    75bc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    75c0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    75c4:	add	x1, x1, #0x793
    75c8:	ldr	x0, [x0, #3968]
    75cc:	b	758c <PyFloat_FromString@plt+0xa5c>
    75d0:	bl	6970 <PyObject_IsTrue@plt>
    75d4:	tbnz	w0, #31, 760c <PyFloat_FromString@plt+0xadc>
    75d8:	cmp	w0, #0x1
    75dc:	b.ne	75e8 <PyFloat_FromString@plt+0xab8>  // b.any
    75e0:	ldr	w0, [x20, #16]
    75e4:	orr	w19, w19, w0
    75e8:	add	x20, x20, #0x20
    75ec:	ldr	x0, [x20]
    75f0:	cbz	x0, 7598 <PyFloat_FromString@plt+0xa68>
    75f4:	ldr	x1, [x20, #24]
    75f8:	mov	x0, x21
    75fc:	bl	6b20 <PyDict_GetItemWithError@plt>
    7600:	cbnz	x0, 75d0 <PyFloat_FromString@plt+0xaa0>
    7604:	bl	6880 <PyErr_Occurred@plt>
    7608:	cbz	x0, 75bc <PyFloat_FromString@plt+0xa8c>
    760c:	mov	w19, #0x10000               	// #65536
    7610:	b	7598 <PyFloat_FromString@plt+0xa68>
    7614:	adrp	x20, 43000 <PyInit__decimal@@Base+0x32078>
    7618:	mov	w19, #0x0                   	// #0
    761c:	add	x20, x20, #0x9b0
    7620:	b	75ec <PyFloat_FromString@plt+0xabc>
    7624:	stp	x29, x30, [sp, #-32]!
    7628:	mov	x29, sp
    762c:	stp	x19, x20, [sp, #16]
    7630:	mov	x20, x0
    7634:	mov	x0, x1
    7638:	sub	w1, w2, #0x2
    763c:	cmp	w1, #0x1
    7640:	b.hi	76cc <PyFloat_FromString@plt+0xb9c>  // b.pmore
    7644:	mov	w19, w2
    7648:	adrp	x2, 45000 <PyInit__decimal@@Base+0x34078>
    764c:	ldr	x1, [x0, #8]
    7650:	ldr	x2, [x2, #1816]
    7654:	cmp	x1, x2
    7658:	b.ne	76b0 <PyFloat_FromString@plt+0xb80>  // b.any
    765c:	ldr	x0, [x0, #16]
    7660:	ldr	x1, [x20, #16]
    7664:	ldr	w0, [x0]
    7668:	ldr	w1, [x1]
    766c:	cmp	w1, w0
    7670:	cset	w1, eq  // eq = none
    7674:	cmp	w19, #0x3
    7678:	cset	w0, eq  // eq = none
    767c:	cmp	w1, w0
    7680:	b.eq	76a4 <PyFloat_FromString@plt+0xb74>  // b.none
    7684:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    7688:	ldr	x0, [x0, #4024]
    768c:	ldr	x1, [x0]
    7690:	add	x1, x1, #0x1
    7694:	str	x1, [x0]
    7698:	ldp	x19, x20, [sp, #16]
    769c:	ldp	x29, x30, [sp], #32
    76a0:	ret
    76a4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    76a8:	ldr	x0, [x0, #3976]
    76ac:	b	768c <PyFloat_FromString@plt+0xb5c>
    76b0:	ldr	x1, [x1, #168]
    76b4:	tbz	w1, #29, 76cc <PyFloat_FromString@plt+0xb9c>
    76b8:	bl	7560 <PyFloat_FromString@plt+0xa30>
    76bc:	tst	w0, #0x18000
    76c0:	b.eq	76d8 <PyFloat_FromString@plt+0xba8>  // b.none
    76c4:	tbz	w0, #15, 76e4 <PyFloat_FromString@plt+0xbb4>
    76c8:	bl	67d0 <PyErr_Clear@plt>
    76cc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    76d0:	ldr	x0, [x0, #3912]
    76d4:	b	768c <PyFloat_FromString@plt+0xb5c>
    76d8:	ldr	x1, [x20, #16]
    76dc:	ldr	w1, [x1]
    76e0:	b	766c <PyFloat_FromString@plt+0xb3c>
    76e4:	mov	x0, #0x0                   	// #0
    76e8:	b	7698 <PyFloat_FromString@plt+0xb68>
    76ec:	stp	x29, x30, [sp, #-48]!
    76f0:	mov	x29, sp
    76f4:	stp	x21, x22, [sp, #32]
    76f8:	mov	x21, x0
    76fc:	ldr	x0, [x0, #8]
    7700:	stp	x19, x20, [sp, #16]
    7704:	ldr	x0, [x0, #168]
    7708:	tbz	w0, #28, 7764 <PyFloat_FromString@plt+0xc34>
    770c:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
    7710:	add	x2, x1, #0x6d0
    7714:	add	x2, x2, #0x8
    7718:	mov	x0, #0x0                   	// #0
    771c:	ldr	x3, [x2, x0, lsl #3]
    7720:	mov	w22, w0
    7724:	cmp	x3, x21
    7728:	b.eq	7780 <PyFloat_FromString@plt+0xc50>  // b.none
    772c:	add	x0, x0, #0x1
    7730:	cmp	x0, #0x8
    7734:	b.ne	771c <PyFloat_FromString@plt+0xbec>  // b.any
    7738:	add	x19, x1, #0x6d0
    773c:	mov	x20, #0x0                   	// #0
    7740:	add	x19, x19, #0x8
    7744:	ldr	x1, [x19, x20, lsl #3]
    7748:	mov	w22, w20
    774c:	mov	x0, x21
    7750:	bl	69a0 <PyUnicode_Compare@plt>
    7754:	cbz	w0, 7780 <PyFloat_FromString@plt+0xc50>
    7758:	add	x20, x20, #0x1
    775c:	cmp	x20, #0x8
    7760:	b.ne	7744 <PyFloat_FromString@plt+0xc14>  // b.any
    7764:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    7768:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    776c:	mov	w22, #0xffffffff            	// #-1
    7770:	add	x1, x1, #0x7a7
    7774:	ldr	x0, [x0, #3936]
    7778:	ldr	x0, [x0]
    777c:	bl	66e0 <PyErr_SetString@plt>
    7780:	mov	w0, w22
    7784:	ldp	x19, x20, [sp, #16]
    7788:	ldp	x21, x22, [sp, #32]
    778c:	ldp	x29, x30, [sp], #48
    7790:	ret
    7794:	stp	x29, x30, [sp, #-32]!
    7798:	mov	x29, sp
    779c:	stp	x19, x20, [sp, #16]
    77a0:	mov	x20, x0
    77a4:	mov	x0, x1
    77a8:	bl	6790 <PyLong_AsSsize_t@plt>
    77ac:	mov	x19, x0
    77b0:	cmn	x0, #0x1
    77b4:	b.ne	77d0 <PyFloat_FromString@plt+0xca0>  // b.any
    77b8:	bl	6880 <PyErr_Occurred@plt>
    77bc:	cbz	x0, 77e8 <PyFloat_FromString@plt+0xcb8>
    77c0:	mov	w0, #0xffffffff            	// #-1
    77c4:	ldp	x19, x20, [sp, #16]
    77c8:	ldp	x29, x30, [sp], #32
    77cc:	ret
    77d0:	mov	x0, #0x80000000            	// #2147483648
    77d4:	add	x0, x19, x0
    77d8:	mov	x1, #0xffffffff            	// #4294967295
    77dc:	cmp	x0, x1
    77e0:	mov	x0, #0x7fffffff            	// #2147483647
    77e4:	csel	x19, x19, x0, ls  // ls = plast
    77e8:	mov	w1, w19
    77ec:	add	x0, x20, #0x10
    77f0:	bl	12ae0 <PyInit__decimal@@Base+0x1b58>
    77f4:	cbnz	w0, 7814 <PyFloat_FromString@plt+0xce4>
    77f8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    77fc:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    7800:	add	x1, x1, #0x83e
    7804:	ldr	x0, [x0, #3928]
    7808:	ldr	x0, [x0]
    780c:	bl	66e0 <PyErr_SetString@plt>
    7810:	b	77c0 <PyFloat_FromString@plt+0xc90>
    7814:	mov	w0, #0x0                   	// #0
    7818:	b	77c4 <PyFloat_FromString@plt+0xc94>
    781c:	stp	x29, x30, [sp, #-32]!
    7820:	mov	x29, sp
    7824:	stp	x19, x20, [sp, #16]
    7828:	mov	x20, x0
    782c:	mov	x19, x1
    7830:	ldr	x0, [x1, #8]
    7834:	ldr	x0, [x0, #168]
    7838:	tbz	w0, #28, 7888 <PyFloat_FromString@plt+0xd58>
    783c:	adrp	x1, 25000 <PyInit__decimal@@Base+0x14078>
    7840:	mov	x0, x19
    7844:	add	x1, x1, #0x3a5
    7848:	bl	6930 <PyUnicode_CompareWithASCIIString@plt>
    784c:	cbnz	w0, 786c <PyFloat_FromString@plt+0xd3c>
    7850:	ldr	x0, [x20, #64]
    7854:	ldr	x1, [x0]
    7858:	ldp	x19, x20, [sp, #16]
    785c:	add	x1, x1, #0x1
    7860:	str	x1, [x0]
    7864:	ldp	x29, x30, [sp], #32
    7868:	ret
    786c:	adrp	x1, 25000 <PyInit__decimal@@Base+0x14078>
    7870:	mov	x0, x19
    7874:	add	x1, x1, #0x399
    7878:	bl	6930 <PyUnicode_CompareWithASCIIString@plt>
    787c:	cbnz	w0, 7888 <PyFloat_FromString@plt+0xd58>
    7880:	ldr	x0, [x20, #72]
    7884:	b	7854 <PyFloat_FromString@plt+0xd24>
    7888:	mov	x1, x19
    788c:	mov	x0, x20
    7890:	ldp	x19, x20, [sp, #16]
    7894:	ldp	x29, x30, [sp], #32
    7898:	b	6850 <PyObject_GenericGetAttr@plt>
    789c:	stp	x29, x30, [sp, #-32]!
    78a0:	mov	x29, sp
    78a4:	stp	x19, x20, [sp, #16]
    78a8:	mov	x20, x1
    78ac:	cbnz	x0, 7904 <PyFloat_FromString@plt+0xdd4>
    78b0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    78b4:	mov	x2, x20
    78b8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    78bc:	add	x1, x1, #0x860
    78c0:	ldr	x0, [x0, #3920]
    78c4:	ldr	x0, [x0]
    78c8:	bl	6ab0 <PyErr_Format@plt>
    78cc:	mov	x0, #0x0                   	// #0
    78d0:	b	78f8 <PyFloat_FromString@plt+0xdc8>
    78d4:	add	x19, x19, #0x20
    78d8:	ldr	x1, [x19]
    78dc:	cbz	x1, 78b0 <PyFloat_FromString@plt+0xd80>
    78e0:	mov	x0, x20
    78e4:	bl	6900 <strcmp@plt>
    78e8:	cbnz	w0, 78d4 <PyFloat_FromString@plt+0xda4>
    78ec:	ldr	w0, [x19, #16]
    78f0:	tbz	w0, #2, 78b0 <PyFloat_FromString@plt+0xd80>
    78f4:	ldr	x0, [x19, #8]
    78f8:	ldp	x19, x20, [sp, #16]
    78fc:	ldp	x29, x30, [sp], #32
    7900:	ret
    7904:	mov	x19, x0
    7908:	b	78d8 <PyFloat_FromString@plt+0xda8>
    790c:	ldr	x1, [x0]
    7910:	sub	x1, x1, #0x1
    7914:	str	x1, [x0]
    7918:	cbnz	x1, 7920 <PyFloat_FromString@plt+0xdf0>
    791c:	b	6660 <_Py_Dealloc@plt>
    7920:	ret
    7924:	stp	x29, x30, [sp, #-48]!
    7928:	mov	x1, #0x0                   	// #0
    792c:	mov	x29, sp
    7930:	stp	x19, x20, [sp, #16]
    7934:	adrp	x20, 45000 <PyInit__decimal@@Base+0x34078>
    7938:	add	x20, x20, #0x6d0
    793c:	add	x2, sp, #0x28
    7940:	ldr	x0, [x20, #80]
    7944:	bl	67e0 <PyContextVar_Get@plt>
    7948:	tbz	w0, #31, 7960 <PyFloat_FromString@plt+0xe30>
    794c:	mov	x19, #0x0                   	// #0
    7950:	mov	x0, x19
    7954:	ldp	x19, x20, [sp, #16]
    7958:	ldp	x29, x30, [sp], #48
    795c:	ret
    7960:	ldr	x19, [sp, #40]
    7964:	cbnz	x19, 7950 <PyFloat_FromString@plt+0xe20>
    7968:	ldr	x0, [x20, #88]
    796c:	mov	x1, #0x0                   	// #0
    7970:	bl	6cc0 <PyFloat_FromString@plt+0x190>
    7974:	mov	x19, x0
    7978:	cbz	x0, 794c <PyFloat_FromString@plt+0xe1c>
    797c:	mov	x1, x0
    7980:	str	wzr, [x19, #44]
    7984:	ldr	x0, [x20, #80]
    7988:	bl	6720 <PyContextVar_Set@plt>
    798c:	cbnz	x0, 799c <PyFloat_FromString@plt+0xe6c>
    7990:	mov	x0, x19
    7994:	bl	790c <PyFloat_FromString@plt+0xddc>
    7998:	b	794c <PyFloat_FromString@plt+0xe1c>
    799c:	bl	790c <PyFloat_FromString@plt+0xddc>
    79a0:	b	7950 <PyFloat_FromString@plt+0xe20>
    79a4:	b	7924 <PyFloat_FromString@plt+0xdf4>
    79a8:	stp	x29, x30, [sp, #-64]!
    79ac:	mov	x29, sp
    79b0:	stp	x19, x20, [sp, #16]
    79b4:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    79b8:	mov	x20, x1
    79bc:	ldr	x19, [x19, #4008]
    79c0:	stp	x21, x22, [sp, #32]
    79c4:	mov	x22, x2
    79c8:	str	x19, [sp, #56]
    79cc:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    79d0:	cbnz	x0, 79ec <PyFloat_FromString@plt+0xebc>
    79d4:	mov	x19, #0x0                   	// #0
    79d8:	mov	x0, x19
    79dc:	ldp	x19, x20, [sp, #16]
    79e0:	ldp	x21, x22, [sp, #32]
    79e4:	ldp	x29, x30, [sp], #64
    79e8:	ret
    79ec:	mov	x21, x0
    79f0:	bl	790c <PyFloat_FromString@plt+0xddc>
    79f4:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    79f8:	add	x3, x3, #0x9b0
    79fc:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    7a00:	add	x4, sp, #0x38
    7a04:	add	x3, x3, #0x140
    7a08:	add	x2, x2, #0xdca
    7a0c:	mov	x1, x22
    7a10:	mov	x0, x20
    7a14:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    7a18:	cbz	w0, 79d4 <PyFloat_FromString@plt+0xea4>
    7a1c:	ldr	x0, [sp, #56]
    7a20:	cmp	x0, x19
    7a24:	adrp	x19, 43000 <PyInit__decimal@@Base+0x32078>
    7a28:	b.ne	7a6c <PyFloat_FromString@plt+0xf3c>  // b.any
    7a2c:	str	x21, [sp, #56]
    7a30:	add	x0, x19, #0x330
    7a34:	add	x0, x0, #0x340
    7a38:	bl	69f0 <_PyObject_New@plt>
    7a3c:	mov	x20, x0
    7a40:	cbz	x0, 79d4 <PyFloat_FromString@plt+0xea4>
    7a44:	ldr	x0, [sp, #56]
    7a48:	mov	x1, #0x0                   	// #0
    7a4c:	bl	6cc0 <PyFloat_FromString@plt+0x190>
    7a50:	str	x0, [x20, #16]
    7a54:	mov	x19, x0
    7a58:	cbnz	x0, 7aa0 <PyFloat_FromString@plt+0xf70>
    7a5c:	str	xzr, [x20, #24]
    7a60:	mov	x0, x20
    7a64:	bl	790c <PyFloat_FromString@plt+0xddc>
    7a68:	b	79d8 <PyFloat_FromString@plt+0xea8>
    7a6c:	ldr	x0, [x0, #8]
    7a70:	add	x1, x19, #0x330
    7a74:	cmp	x0, x1
    7a78:	b.eq	7a30 <PyFloat_FromString@plt+0xf00>  // b.none
    7a7c:	bl	6a60 <PyType_IsSubtype@plt>
    7a80:	cbnz	w0, 7a30 <PyFloat_FromString@plt+0xf00>
    7a84:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    7a88:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    7a8c:	add	x1, x1, #0x889
    7a90:	ldr	x0, [x0, #3936]
    7a94:	ldr	x0, [x0]
    7a98:	bl	66e0 <PyErr_SetString@plt>
    7a9c:	b	79d4 <PyFloat_FromString@plt+0xea4>
    7aa0:	ldr	x0, [x21]
    7aa4:	str	x21, [x20, #24]
    7aa8:	mov	x19, x20
    7aac:	add	x0, x0, #0x1
    7ab0:	str	x0, [x21]
    7ab4:	b	79d8 <PyFloat_FromString@plt+0xea8>
    7ab8:	stp	x29, x30, [sp, #-32]!
    7abc:	mov	x29, sp
    7ac0:	ldr	x0, [x1, #8]
    7ac4:	stp	x19, x20, [sp, #16]
    7ac8:	mov	x19, x1
    7acc:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    7ad0:	add	x1, x1, #0x330
    7ad4:	cmp	x0, x1
    7ad8:	b.eq	7b0c <PyFloat_FromString@plt+0xfdc>  // b.none
    7adc:	bl	6a60 <PyType_IsSubtype@plt>
    7ae0:	cbnz	w0, 7b0c <PyFloat_FromString@plt+0xfdc>
    7ae4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    7ae8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    7aec:	add	x1, x1, #0x892
    7af0:	ldr	x0, [x0, #3936]
    7af4:	ldr	x0, [x0]
    7af8:	bl	66e0 <PyErr_SetString@plt>
    7afc:	mov	x0, #0x0                   	// #0
    7b00:	ldp	x19, x20, [sp, #16]
    7b04:	ldp	x29, x30, [sp], #32
    7b08:	ret
    7b0c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
    7b10:	add	x1, x0, #0x6d0
    7b14:	mov	x20, x0
    7b18:	ldr	x2, [x1, #88]
    7b1c:	cmp	x2, x19
    7b20:	b.eq	7b3c <PyFloat_FromString@plt+0x100c>  // b.none
    7b24:	ldr	x0, [x1, #96]
    7b28:	cmp	x0, x19
    7b2c:	b.eq	7b3c <PyFloat_FromString@plt+0x100c>  // b.none
    7b30:	ldr	x0, [x1, #104]
    7b34:	cmp	x0, x19
    7b38:	b.ne	7b94 <PyFloat_FromString@plt+0x1064>  // b.any
    7b3c:	mov	x0, x19
    7b40:	mov	x1, #0x0                   	// #0
    7b44:	bl	6cc0 <PyFloat_FromString@plt+0x190>
    7b48:	mov	x19, x0
    7b4c:	cbz	x0, 7afc <PyFloat_FromString@plt+0xfcc>
    7b50:	str	wzr, [x0, #44]
    7b54:	add	x0, x20, #0x6d0
    7b58:	mov	x1, x19
    7b5c:	ldr	x0, [x0, #80]
    7b60:	bl	6720 <PyContextVar_Set@plt>
    7b64:	mov	x20, x0
    7b68:	mov	x0, x19
    7b6c:	bl	790c <PyFloat_FromString@plt+0xddc>
    7b70:	cbz	x20, 7afc <PyFloat_FromString@plt+0xfcc>
    7b74:	mov	x0, x20
    7b78:	bl	790c <PyFloat_FromString@plt+0xddc>
    7b7c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    7b80:	ldr	x0, [x0, #4008]
    7b84:	ldr	x1, [x0]
    7b88:	add	x1, x1, #0x1
    7b8c:	str	x1, [x0]
    7b90:	b	7b00 <PyFloat_FromString@plt+0xfd0>
    7b94:	ldr	x0, [x19]
    7b98:	add	x0, x0, #0x1
    7b9c:	str	x0, [x19]
    7ba0:	b	7b54 <PyFloat_FromString@plt+0x1024>
    7ba4:	stp	x29, x30, [sp, #-64]!
    7ba8:	mov	x29, sp
    7bac:	ldr	x0, [x0, #16]
    7bb0:	stp	x19, x20, [sp, #16]
    7bb4:	stp	x21, x22, [sp, #32]
    7bb8:	str	x23, [sp, #48]
    7bbc:	ldr	w23, [x0]
    7bc0:	bl	69c0 <PyDict_New@plt>
    7bc4:	mov	x19, x0
    7bc8:	cbz	x0, 7c14 <PyFloat_FromString@plt+0x10e4>
    7bcc:	adrp	x21, 42000 <PyInit__decimal@@Base+0x31078>
    7bd0:	adrp	x22, 42000 <PyInit__decimal@@Base+0x31078>
    7bd4:	adrp	x20, 43000 <PyInit__decimal@@Base+0x32078>
    7bd8:	add	x20, x20, #0x9b0
    7bdc:	ldr	x21, [x21, #3976]
    7be0:	ldr	x22, [x22, #4024]
    7be4:	ldr	x0, [x20]
    7be8:	cbz	x0, 7c14 <PyFloat_FromString@plt+0x10e4>
    7bec:	ldr	w0, [x20, #16]
    7bf0:	ldr	x1, [x20, #24]
    7bf4:	tst	w23, w0
    7bf8:	csel	x2, x22, x21, ne  // ne = any
    7bfc:	mov	x0, x19
    7c00:	bl	6a40 <PyDict_SetItem@plt>
    7c04:	tbz	w0, #31, 7c2c <PyFloat_FromString@plt+0x10fc>
    7c08:	mov	x0, x19
    7c0c:	mov	x19, #0x0                   	// #0
    7c10:	bl	790c <PyFloat_FromString@plt+0xddc>
    7c14:	mov	x0, x19
    7c18:	ldp	x19, x20, [sp, #16]
    7c1c:	ldp	x21, x22, [sp, #32]
    7c20:	ldr	x23, [sp, #48]
    7c24:	ldp	x29, x30, [sp], #64
    7c28:	ret
    7c2c:	add	x20, x20, #0x20
    7c30:	b	7be4 <PyFloat_FromString@plt+0x10b4>
    7c34:	stp	x29, x30, [sp, #-16]!
    7c38:	mov	x29, sp
    7c3c:	ldr	x1, [x0, #24]
    7c40:	mov	x0, #0x0                   	// #0
    7c44:	bl	7ab8 <PyFloat_FromString@plt+0xf88>
    7c48:	cbz	x0, 7c70 <PyFloat_FromString@plt+0x1140>
    7c4c:	bl	790c <PyFloat_FromString@plt+0xddc>
    7c50:	adrp	x1, 42000 <PyInit__decimal@@Base+0x31078>
    7c54:	ldr	x1, [x1, #4008]
    7c58:	ldr	x0, [x1]
    7c5c:	add	x0, x0, #0x1
    7c60:	str	x0, [x1]
    7c64:	mov	x0, x1
    7c68:	ldp	x29, x30, [sp], #16
    7c6c:	ret
    7c70:	mov	x1, x0
    7c74:	b	7c64 <PyFloat_FromString@plt+0x1134>
    7c78:	stp	x29, x30, [sp, #-32]!
    7c7c:	mov	x29, sp
    7c80:	ldr	x1, [x0, #16]
    7c84:	str	x19, [sp, #16]
    7c88:	mov	x19, x0
    7c8c:	mov	x0, #0x0                   	// #0
    7c90:	bl	7ab8 <PyFloat_FromString@plt+0xf88>
    7c94:	cbz	x0, 7cbc <PyFloat_FromString@plt+0x118c>
    7c98:	bl	790c <PyFloat_FromString@plt+0xddc>
    7c9c:	ldr	x1, [x19, #16]
    7ca0:	ldr	x0, [x1]
    7ca4:	add	x0, x0, #0x1
    7ca8:	str	x0, [x1]
    7cac:	mov	x0, x1
    7cb0:	ldr	x19, [sp, #16]
    7cb4:	ldp	x29, x30, [sp], #32
    7cb8:	ret
    7cbc:	mov	x1, x0
    7cc0:	b	7cac <PyFloat_FromString@plt+0x117c>
    7cc4:	cbz	x0, 7ccc <PyFloat_FromString@plt+0x119c>
    7cc8:	b	790c <PyFloat_FromString@plt+0xddc>
    7ccc:	ret
    7cd0:	stp	x29, x30, [sp, #-32]!
    7cd4:	mov	x29, sp
    7cd8:	str	x19, [sp, #16]
    7cdc:	mov	x19, x0
    7ce0:	ldr	x0, [x0, #16]
    7ce4:	bl	7cc4 <PyFloat_FromString@plt+0x1194>
    7ce8:	ldr	x0, [x19, #24]
    7cec:	bl	7cc4 <PyFloat_FromString@plt+0x1194>
    7cf0:	mov	x0, x19
    7cf4:	ldr	x19, [sp, #16]
    7cf8:	ldp	x29, x30, [sp], #32
    7cfc:	b	6730 <PyObject_Free@plt>
    7d00:	stp	x29, x30, [sp, #-112]!
    7d04:	mov	x29, sp
    7d08:	stp	x19, x20, [sp, #16]
    7d0c:	mov	x19, x0
    7d10:	stp	x21, x22, [sp, #32]
    7d14:	stp	x23, x24, [sp, #48]
    7d18:	stp	x25, x26, [sp, #64]
    7d1c:	stp	x27, x28, [sp, #80]
    7d20:	bl	6a80 <PyTuple_Size@plt>
    7d24:	cmp	x0, #0x3
    7d28:	b.eq	7d50 <PyFloat_FromString@plt+0x1220>  // b.none
    7d2c:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    7d30:	add	x1, x1, #0x8ad
    7d34:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    7d38:	ldr	x0, [x0, #3928]
    7d3c:	ldr	x0, [x0]
    7d40:	bl	66e0 <PyErr_SetString@plt>
    7d44:	mov	x20, #0x0                   	// #0
    7d48:	mov	x21, #0x0                   	// #0
    7d4c:	b	7e24 <PyFloat_FromString@plt+0x12f4>
    7d50:	ldr	x0, [x19, #24]
    7d54:	ldr	x1, [x0, #8]
    7d58:	ldr	x1, [x1, #168]
    7d5c:	tbnz	w1, #24, 7d6c <PyFloat_FromString@plt+0x123c>
    7d60:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    7d64:	add	x1, x1, #0x8d5
    7d68:	b	7d34 <PyFloat_FromString@plt+0x1204>
    7d6c:	bl	68c0 <PyLong_AsLong@plt>
    7d70:	cmn	x0, #0x1
    7d74:	b.ne	7d84 <PyFloat_FromString@plt+0x1254>  // b.any
    7d78:	bl	6880 <PyErr_Occurred@plt>
    7d7c:	cbnz	x0, 7d44 <PyFloat_FromString@plt+0x1214>
    7d80:	b	7d60 <PyFloat_FromString@plt+0x1230>
    7d84:	cmp	x0, #0x1
    7d88:	b.hi	7d60 <PyFloat_FromString@plt+0x1230>  // b.pmore
    7d8c:	ldr	x20, [x19, #40]
    7d90:	cmp	x0, #0x0
    7d94:	mov	w1, #0x2b                  	// #43
    7d98:	mov	w0, #0x2d                  	// #45
    7d9c:	csel	w0, w0, w1, ne  // ne = any
    7da0:	strb	w0, [sp, #104]
    7da4:	ldr	x0, [x20, #8]
    7da8:	strb	wzr, [sp, #105]
    7dac:	ldr	x0, [x0, #168]
    7db0:	tbz	w0, #28, 7e9c <PyFloat_FromString@plt+0x136c>
    7db4:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
    7db8:	mov	x0, x20
    7dbc:	add	x1, x1, #0xeb5
    7dc0:	bl	6930 <PyUnicode_CompareWithASCIIString@plt>
    7dc4:	cbnz	w0, 7e40 <PyFloat_FromString@plt+0x1310>
    7dc8:	mov	w22, #0x1                   	// #1
    7dcc:	add	x0, sp, #0x68
    7dd0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    7dd4:	add	x1, x1, #0x903
    7dd8:	bl	6700 <strcat@plt>
    7ddc:	mov	x24, #0x0                   	// #0
    7de0:	adrp	x23, 42000 <PyInit__decimal@@Base+0x31078>
    7de4:	adrp	x26, 24000 <PyInit__decimal@@Base+0x13078>
    7de8:	add	x2, x26, #0x966
    7dec:	ldr	x0, [x23, #3928]
    7df0:	ldr	x1, [x0]
    7df4:	ldr	x0, [x19, #32]
    7df8:	bl	7150 <PyFloat_FromString@plt+0x620>
    7dfc:	mov	x21, x0
    7e00:	cbz	x0, 7d44 <PyFloat_FromString@plt+0x1214>
    7e04:	bl	6a80 <PyTuple_Size@plt>
    7e08:	add	x27, x0, #0x19
    7e0c:	mov	x25, x0
    7e10:	mov	x0, x27
    7e14:	bl	6ae0 <PyMem_Malloc@plt>
    7e18:	mov	x20, x0
    7e1c:	cbnz	x0, 7ed0 <PyFloat_FromString@plt+0x13a0>
    7e20:	bl	6670 <PyErr_NoMemory@plt>
    7e24:	mov	x0, x21
    7e28:	bl	7cc4 <PyFloat_FromString@plt+0x1194>
    7e2c:	cbz	x20, 7f5c <PyFloat_FromString@plt+0x142c>
    7e30:	mov	x0, x20
    7e34:	mov	x20, #0x0                   	// #0
    7e38:	bl	65f0 <PyMem_Free@plt>
    7e3c:	b	7f5c <PyFloat_FromString@plt+0x142c>
    7e40:	mov	x0, x20
    7e44:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    7e48:	add	x1, x1, #0xb5a
    7e4c:	bl	6930 <PyUnicode_CompareWithASCIIString@plt>
    7e50:	mov	w22, w0
    7e54:	cbnz	w0, 7e6c <PyFloat_FromString@plt+0x133c>
    7e58:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    7e5c:	add	x1, x1, #0x908
    7e60:	add	x0, sp, #0x68
    7e64:	bl	6700 <strcat@plt>
    7e68:	b	7ddc <PyFloat_FromString@plt+0x12ac>
    7e6c:	mov	x0, x20
    7e70:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
    7e74:	add	x1, x1, #0xeb1
    7e78:	bl	6930 <PyUnicode_CompareWithASCIIString@plt>
    7e7c:	mov	w22, w0
    7e80:	cbnz	w0, 7e90 <PyFloat_FromString@plt+0x1360>
    7e84:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    7e88:	add	x1, x1, #0x907
    7e8c:	b	7e60 <PyFloat_FromString@plt+0x1330>
    7e90:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    7e94:	add	x1, x1, #0x90c
    7e98:	b	7d34 <PyFloat_FromString@plt+0x1204>
    7e9c:	tbnz	w0, #24, 7eac <PyFloat_FromString@plt+0x137c>
    7ea0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    7ea4:	add	x1, x1, #0x94a
    7ea8:	b	7d34 <PyFloat_FromString@plt+0x1204>
    7eac:	mov	x0, x20
    7eb0:	bl	6790 <PyLong_AsSsize_t@plt>
    7eb4:	mov	x24, x0
    7eb8:	cmn	x0, #0x1
    7ebc:	b.ne	7ec8 <PyFloat_FromString@plt+0x1398>  // b.any
    7ec0:	bl	6880 <PyErr_Occurred@plt>
    7ec4:	cbnz	x0, 7d44 <PyFloat_FromString@plt+0x1214>
    7ec8:	mov	w22, #0x0                   	// #0
    7ecc:	b	7de0 <PyFloat_FromString@plt+0x12b0>
    7ed0:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    7ed4:	add	x3, sp, #0x68
    7ed8:	add	x2, x2, #0x886
    7edc:	mov	x1, x27
    7ee0:	bl	66a0 <snprintf@plt>
    7ee4:	tbnz	w0, #31, 7ef4 <PyFloat_FromString@plt+0x13c4>
    7ee8:	sxtw	x19, w0
    7eec:	cmp	x27, w0, sxtw
    7ef0:	b.gt	7f10 <PyFloat_FromString@plt+0x13e0>
    7ef4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    7ef8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    7efc:	add	x1, x1, #0x98c
    7f00:	ldr	x0, [x0, #3920]
    7f04:	ldr	x0, [x0]
    7f08:	bl	66e0 <PyErr_SetString@plt>
    7f0c:	b	7e24 <PyFloat_FromString@plt+0x12f4>
    7f10:	add	x19, x20, x19
    7f14:	cbnz	x25, 7fd4 <PyFloat_FromString@plt+0x14a4>
    7f18:	ldrb	w0, [sp, #105]
    7f1c:	cbnz	w0, 7f28 <PyFloat_FromString@plt+0x13f8>
    7f20:	mov	w0, #0x30                  	// #48
    7f24:	strb	w0, [x19], #1
    7f28:	strb	wzr, [x19]
    7f2c:	ldrb	w0, [sp, #105]
    7f30:	cbnz	w0, 7f54 <PyFloat_FromString@plt+0x1424>
    7f34:	mov	x0, x19
    7f38:	mov	w1, #0x45                  	// #69
    7f3c:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    7f40:	mov	x3, x24
    7f44:	add	x2, x2, #0x9b2
    7f48:	strb	w1, [x0], #1
    7f4c:	mov	x1, #0x15                  	// #21
    7f50:	bl	66a0 <snprintf@plt>
    7f54:	mov	x0, x21
    7f58:	bl	7cc4 <PyFloat_FromString@plt+0x1194>
    7f5c:	mov	x0, x20
    7f60:	ldp	x19, x20, [sp, #16]
    7f64:	ldp	x21, x22, [sp, #32]
    7f68:	ldp	x23, x24, [sp, #48]
    7f6c:	ldp	x25, x26, [sp, #64]
    7f70:	ldp	x27, x28, [sp, #80]
    7f74:	ldp	x29, x30, [sp], #112
    7f78:	ret
    7f7c:	bl	68c0 <PyLong_AsLong@plt>
    7f80:	cmn	x0, #0x1
    7f84:	b.ne	7f94 <PyFloat_FromString@plt+0x1464>  // b.any
    7f88:	bl	6880 <PyErr_Occurred@plt>
    7f8c:	cbz	x0, 7fc4 <PyFloat_FromString@plt+0x1494>
    7f90:	b	7e24 <PyFloat_FromString@plt+0x12f4>
    7f94:	cmp	x0, #0x9
    7f98:	b.hi	7fc4 <PyFloat_FromString@plt+0x1494>  // b.pmore
    7f9c:	cbnz	w22, 7fa8 <PyFloat_FromString@plt+0x1478>
    7fa0:	add	w0, w0, #0x30
    7fa4:	strb	w0, [x19], #1
    7fa8:	add	x27, x27, #0x1
    7fac:	cmp	x27, x25
    7fb0:	b.ge	7f28 <PyFloat_FromString@plt+0x13f8>  // b.tcont
    7fb4:	ldr	x0, [x28, x27, lsl #3]
    7fb8:	ldr	x1, [x0, #8]
    7fbc:	ldr	x1, [x1, #168]
    7fc0:	tbnz	w1, #24, 7f7c <PyFloat_FromString@plt+0x144c>
    7fc4:	ldr	x23, [x23, #3928]
    7fc8:	add	x1, x26, #0x966
    7fcc:	ldr	x0, [x23]
    7fd0:	b	7f08 <PyFloat_FromString@plt+0x13d8>
    7fd4:	add	x28, x21, #0x18
    7fd8:	mov	x27, #0x0                   	// #0
    7fdc:	b	7fac <PyFloat_FromString@plt+0x147c>
    7fe0:	stp	x29, x30, [sp, #-32]!
    7fe4:	mov	x29, sp
    7fe8:	str	x19, [sp, #16]
    7fec:	mov	x19, x0
    7ff0:	ldr	x0, [x0, #64]
    7ff4:	bl	7cc4 <PyFloat_FromString@plt+0x1194>
    7ff8:	ldr	x0, [x19, #72]
    7ffc:	bl	7cc4 <PyFloat_FromString@plt+0x1194>
    8000:	ldr	x0, [x19, #8]
    8004:	ldr	x1, [x0, #320]
    8008:	mov	x0, x19
    800c:	ldr	x19, [sp, #16]
    8010:	mov	x16, x1
    8014:	ldp	x29, x30, [sp], #32
    8018:	br	x16
    801c:	stp	x29, x30, [sp, #-96]!
    8020:	mov	x29, sp
    8024:	stp	x19, x20, [sp, #16]
    8028:	add	x20, x0, #0x18
    802c:	mov	x19, x0
    8030:	mov	x0, x20
    8034:	stp	x21, x22, [sp, #32]
    8038:	stp	x23, x24, [sp, #48]
    803c:	stp	x25, x26, [sp, #64]
    8040:	str	x27, [sp, #80]
    8044:	bl	192b0 <PyInit__decimal@@Base+0x8328>
    8048:	cbnz	x0, 8098 <PyFloat_FromString@plt+0x1568>
    804c:	mov	x20, #0x0                   	// #0
    8050:	mov	x21, #0x0                   	// #0
    8054:	mov	x24, #0x0                   	// #0
    8058:	mov	x19, #0x0                   	// #0
    805c:	bl	6670 <PyErr_NoMemory@plt>
    8060:	mov	x0, x24
    8064:	bl	7cc4 <PyFloat_FromString@plt+0x1194>
    8068:	mov	x0, x21
    806c:	bl	7cc4 <PyFloat_FromString@plt+0x1194>
    8070:	mov	x0, x20
    8074:	bl	7cc4 <PyFloat_FromString@plt+0x1194>
    8078:	mov	x0, x19
    807c:	ldp	x19, x20, [sp, #16]
    8080:	ldp	x21, x22, [sp, #32]
    8084:	ldp	x23, x24, [sp, #48]
    8088:	ldp	x25, x26, [sp, #64]
    808c:	ldr	x27, [sp, #80]
    8090:	ldp	x29, x30, [sp], #96
    8094:	ret
    8098:	mov	x23, x0
    809c:	mov	x0, x20
    80a0:	bl	17ad0 <PyInit__decimal@@Base+0x6b48>
    80a4:	and	x0, x0, #0xff
    80a8:	bl	69d0 <PyLong_FromUnsignedLong@plt>
    80ac:	mov	x24, x0
    80b0:	cbz	x0, 8214 <PyFloat_FromString@plt+0x16e4>
    80b4:	mov	x0, x23
    80b8:	bl	17980 <PyInit__decimal@@Base+0x69f8>
    80bc:	cbz	w0, 80f8 <PyFloat_FromString@plt+0x15c8>
    80c0:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
    80c4:	add	x0, x0, #0xeb5
    80c8:	bl	6a00 <PyUnicode_FromString@plt>
    80cc:	mov	x20, x0
    80d0:	cbz	x0, 8220 <PyFloat_FromString@plt+0x16f0>
    80d4:	adrp	x0, 24000 <PyInit__decimal@@Base+0x13078>
    80d8:	mov	w1, #0x0                   	// #0
    80dc:	add	x0, x0, #0x9b6
    80e0:	bl	6870 <Py_BuildValue@plt>
    80e4:	mov	x19, x0
    80e8:	mov	x22, #0x0                   	// #0
    80ec:	cbnz	x0, 81a0 <PyFloat_FromString@plt+0x1670>
    80f0:	mov	x21, #0x0                   	// #0
    80f4:	b	81c4 <PyFloat_FromString@plt+0x1694>
    80f8:	mov	x0, x23
    80fc:	bl	1798c <PyInit__decimal@@Base+0x6a04>
    8100:	cbz	w0, 816c <PyFloat_FromString@plt+0x163c>
    8104:	mov	x0, x23
    8108:	bl	179b4 <PyInit__decimal@@Base+0x6a2c>
    810c:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
    8110:	cmp	w0, #0x0
    8114:	add	x1, x1, #0xeb1
    8118:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    811c:	add	x0, x2, #0xb5a
    8120:	csel	x0, x0, x1, ne  // ne = any
    8124:	bl	6a00 <PyUnicode_FromString@plt>
    8128:	mov	x20, x0
    812c:	cbz	x0, 8220 <PyFloat_FromString@plt+0x16f0>
    8130:	ldr	x0, [x23, #24]
    8134:	cmp	x0, #0x0
    8138:	b.le	8208 <PyFloat_FromString@plt+0x16d8>
    813c:	str	xzr, [x23, #8]
    8140:	mov	x0, x23
    8144:	bl	18468 <PyInit__decimal@@Base+0x74e0>
    8148:	mov	x0, x23
    814c:	mov	w1, #0x1                   	// #1
    8150:	bl	14df8 <PyInit__decimal@@Base+0x3e70>
    8154:	mov	x22, x0
    8158:	cbnz	x0, 8178 <PyFloat_FromString@plt+0x1648>
    815c:	bl	6670 <PyErr_NoMemory@plt>
    8160:	mov	x21, #0x0                   	// #0
    8164:	mov	x19, #0x0                   	// #0
    8168:	b	81c4 <PyFloat_FromString@plt+0x1694>
    816c:	ldr	x0, [x19, #32]
    8170:	bl	6740 <PyLong_FromSsize_t@plt>
    8174:	b	8128 <PyFloat_FromString@plt+0x15f8>
    8178:	bl	6550 <strlen@plt>
    817c:	mov	x26, x0
    8180:	bl	6840 <PyTuple_New@plt>
    8184:	mov	x21, x0
    8188:	cbz	x0, 8164 <PyFloat_FromString@plt+0x1634>
    818c:	add	x27, x0, #0x18
    8190:	mov	x25, #0x0                   	// #0
    8194:	cmp	x25, x26
    8198:	b.lt	81e4 <PyFloat_FromString@plt+0x16b4>  // b.tstop
    819c:	mov	x19, x21
    81a0:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
    81a4:	mov	x2, x19
    81a8:	mov	x3, x20
    81ac:	mov	x1, x24
    81b0:	ldr	x0, [x0, #1856]
    81b4:	mov	x21, x19
    81b8:	mov	x4, #0x0                   	// #0
    81bc:	bl	68f0 <PyObject_CallFunctionObjArgs@plt>
    81c0:	mov	x19, x0
    81c4:	mov	x0, x23
    81c8:	bl	17b68 <PyInit__decimal@@Base+0x6be0>
    81cc:	cbz	x22, 8060 <PyFloat_FromString@plt+0x1530>
    81d0:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
    81d4:	ldr	x1, [x0, #1720]
    81d8:	mov	x0, x22
    81dc:	blr	x1
    81e0:	b	8060 <PyFloat_FromString@plt+0x1530>
    81e4:	ldrb	w0, [x22, x25]
    81e8:	sub	w0, w0, #0x30
    81ec:	sxtw	x0, w0
    81f0:	bl	6780 <PyLong_FromLong@plt>
    81f4:	mov	x19, x0
    81f8:	cbz	x0, 81c4 <PyFloat_FromString@plt+0x1694>
    81fc:	str	x0, [x27, x25, lsl #3]
    8200:	add	x25, x25, #0x1
    8204:	b	8194 <PyFloat_FromString@plt+0x1664>
    8208:	mov	x0, #0x0                   	// #0
    820c:	bl	6840 <PyTuple_New@plt>
    8210:	b	80e4 <PyFloat_FromString@plt+0x15b4>
    8214:	mov	x22, #0x0                   	// #0
    8218:	mov	x20, #0x0                   	// #0
    821c:	b	8160 <PyFloat_FromString@plt+0x1630>
    8220:	mov	x22, #0x0                   	// #0
    8224:	b	8160 <PyFloat_FromString@plt+0x1630>
    8228:	stp	x29, x30, [sp, #-32]!
    822c:	adrp	x2, 43000 <PyInit__decimal@@Base+0x32078>
    8230:	add	x2, x2, #0x330
    8234:	mov	x29, sp
    8238:	stp	x19, x20, [sp, #16]
    823c:	cmp	x0, x2
    8240:	b.ne	828c <PyFloat_FromString@plt+0x175c>  // b.any
    8244:	bl	69f0 <_PyObject_New@plt>
    8248:	mov	x19, x0
    824c:	cbz	x0, 827c <PyFloat_FromString@plt+0x174c>
    8250:	adrp	x20, 45000 <PyInit__decimal@@Base+0x34078>
    8254:	add	x20, x20, #0x6d0
    8258:	mov	x1, #0x0                   	// #0
    825c:	ldr	x0, [x20, #72]
    8260:	bl	68e0 <PyObject_CallObject@plt>
    8264:	str	x0, [x19, #64]
    8268:	cbnz	x0, 829c <PyFloat_FromString@plt+0x176c>
    826c:	str	xzr, [x19, #72]
    8270:	mov	x0, x19
    8274:	mov	x19, #0x0                   	// #0
    8278:	bl	790c <PyFloat_FromString@plt+0xddc>
    827c:	mov	x0, x19
    8280:	ldp	x19, x20, [sp, #16]
    8284:	ldp	x29, x30, [sp], #32
    8288:	ret
    828c:	ldr	x2, [x0, #304]
    8290:	mov	x1, #0x0                   	// #0
    8294:	blr	x2
    8298:	b	8248 <PyFloat_FromString@plt+0x1718>
    829c:	ldr	x0, [x20, #72]
    82a0:	mov	x1, #0x0                   	// #0
    82a4:	bl	68e0 <PyObject_CallObject@plt>
    82a8:	str	x0, [x19, #72]
    82ac:	cbz	x0, 8270 <PyFloat_FromString@plt+0x1740>
    82b0:	ldr	x1, [x20, #88]
    82b4:	add	x2, x19, #0x10
    82b8:	cbz	x1, 82f8 <PyFloat_FromString@plt+0x17c8>
    82bc:	ldp	x4, x5, [x1, #16]
    82c0:	stp	x4, x5, [x19, #16]
    82c4:	ldp	x4, x5, [x1, #32]
    82c8:	stp	x4, x5, [x2, #16]
    82cc:	ldp	x4, x5, [x1, #48]
    82d0:	stp	x4, x5, [x2, #32]
    82d4:	add	x2, x19, #0x28
    82d8:	ldr	x1, [x19, #64]
    82dc:	str	x2, [x1, #16]
    82e0:	add	x1, x19, #0x2c
    82e4:	str	x1, [x0, #16]
    82e8:	mov	w0, #0x1                   	// #1
    82ec:	str	w0, [x19, #80]
    82f0:	str	xzr, [x19, #88]
    82f4:	b	827c <PyFloat_FromString@plt+0x174c>
    82f8:	adrp	x1, 25000 <PyInit__decimal@@Base+0x14078>
    82fc:	add	x1, x1, #0x5e8
    8300:	ldp	x4, x5, [x1]
    8304:	stp	x4, x5, [x19, #16]
    8308:	ldp	x4, x5, [x1, #16]
    830c:	stp	x4, x5, [x2, #16]
    8310:	ldp	x4, x5, [x1, #32]
    8314:	b	82d0 <PyFloat_FromString@plt+0x17a0>
    8318:	stp	x29, x30, [sp, #-48]!
    831c:	mov	x29, sp
    8320:	stp	x19, x20, [sp, #16]
    8324:	str	x21, [sp, #32]
    8328:	mov	w21, w0
    832c:	mov	x0, #0x0                   	// #0
    8330:	bl	6520 <PyList_New@plt>
    8334:	mov	x19, x0
    8338:	cbz	x0, 8374 <PyFloat_FromString@plt+0x1844>
    833c:	adrp	x20, 43000 <PyInit__decimal@@Base+0x32078>
    8340:	add	x20, x20, #0x9b0
    8344:	ldr	x0, [x20]
    8348:	cbz	x0, 8374 <PyFloat_FromString@plt+0x1844>
    834c:	ldr	w0, [x20, #16]
    8350:	tst	w21, w0
    8354:	b.eq	8388 <PyFloat_FromString@plt+0x1858>  // b.none
    8358:	ldr	x1, [x20, #24]
    835c:	mov	x0, x19
    8360:	bl	6810 <PyList_Append@plt>
    8364:	tbz	w0, #31, 8388 <PyFloat_FromString@plt+0x1858>
    8368:	mov	x0, x19
    836c:	mov	x19, #0x0                   	// #0
    8370:	bl	790c <PyFloat_FromString@plt+0xddc>
    8374:	mov	x0, x19
    8378:	ldp	x19, x20, [sp, #16]
    837c:	ldr	x21, [sp, #32]
    8380:	ldp	x29, x30, [sp], #48
    8384:	ret
    8388:	add	x20, x20, #0x20
    838c:	b	8344 <PyFloat_FromString@plt+0x1814>
    8390:	sub	sp, sp, #0x40
    8394:	stp	x29, x30, [sp, #16]
    8398:	add	x29, sp, #0x10
    839c:	stp	x21, x22, [sp, #48]
    83a0:	add	x21, x0, #0x10
    83a4:	stp	x19, x20, [sp, #32]
    83a8:	mov	x20, x0
    83ac:	ldr	w0, [x21, #28]
    83b0:	bl	8318 <PyFloat_FromString@plt+0x17e8>
    83b4:	mov	x19, x0
    83b8:	cbz	x0, 83d8 <PyFloat_FromString@plt+0x18a8>
    83bc:	ldr	w0, [x21, #24]
    83c0:	bl	8318 <PyFloat_FromString@plt+0x17e8>
    83c4:	mov	x22, x0
    83c8:	cbnz	x0, 83f0 <PyFloat_FromString@plt+0x18c0>
    83cc:	mov	x0, x19
    83d0:	mov	x19, #0x0                   	// #0
    83d4:	bl	790c <PyFloat_FromString@plt+0xddc>
    83d8:	mov	x0, x19
    83dc:	ldp	x29, x30, [sp, #16]
    83e0:	ldp	x19, x20, [sp, #32]
    83e4:	ldp	x21, x22, [sp, #48]
    83e8:	add	sp, sp, #0x40
    83ec:	ret
    83f0:	ldrsw	x1, [x21, #36]
    83f4:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
    83f8:	add	x0, x0, #0x558
    83fc:	stp	x19, x22, [sp]
    8400:	ldp	x5, x4, [x21, #8]
    8404:	ldr	x3, [x0, x1, lsl #3]
    8408:	adrp	x0, 24000 <PyInit__decimal@@Base+0x13078>
    840c:	ldp	x1, x2, [x20, #8]
    8410:	add	x0, x0, #0x9ba
    8414:	ldr	w6, [x20, #80]
    8418:	ldr	w7, [x21, #40]
    841c:	bl	6870 <Py_BuildValue@plt>
    8420:	mov	x20, x0
    8424:	mov	x0, x19
    8428:	bl	790c <PyFloat_FromString@plt+0xddc>
    842c:	mov	x0, x22
    8430:	mov	x19, x20
    8434:	bl	790c <PyFloat_FromString@plt+0xddc>
    8438:	b	83d8 <PyFloat_FromString@plt+0x18a8>
    843c:	stp	x29, x30, [sp, #-48]!
    8440:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    8444:	add	x3, x3, #0x9b0
    8448:	mov	x29, sp
    844c:	stp	x19, x20, [sp, #16]
    8450:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    8454:	mov	x20, x0
    8458:	ldr	x19, [x19, #4008]
    845c:	mov	x0, x1
    8460:	add	x4, sp, #0x20
    8464:	mov	x1, x2
    8468:	add	x3, x3, #0x150
    846c:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    8470:	add	x2, x2, #0xdca
    8474:	str	x19, [sp, #32]
    8478:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    847c:	cbnz	w0, 8494 <PyFloat_FromString@plt+0x1964>
    8480:	mov	x19, #0x0                   	// #0
    8484:	mov	x0, x19
    8488:	ldp	x19, x20, [sp, #16]
    848c:	ldp	x29, x30, [sp], #48
    8490:	ret
    8494:	ldr	x0, [sp, #32]
    8498:	cmp	x0, x19
    849c:	b.ne	84d4 <PyFloat_FromString@plt+0x19a4>  // b.any
    84a0:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    84a4:	str	x0, [sp, #32]
    84a8:	cbz	x0, 8480 <PyFloat_FromString@plt+0x1950>
    84ac:	bl	790c <PyFloat_FromString@plt+0xddc>
    84b0:	ldr	x0, [sp, #32]
    84b4:	add	x1, x20, #0x18
    84b8:	ldr	w2, [x0, #80]
    84bc:	add	x0, sp, #0x28
    84c0:	bl	14e6c <PyInit__decimal@@Base+0x3ee4>
    84c4:	mov	x1, x0
    84c8:	tbz	x0, #63, 850c <PyFloat_FromString@plt+0x19dc>
    84cc:	bl	6670 <PyErr_NoMemory@plt>
    84d0:	b	8480 <PyFloat_FromString@plt+0x1950>
    84d4:	ldr	x0, [x0, #8]
    84d8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    84dc:	add	x1, x1, #0x330
    84e0:	cmp	x0, x1
    84e4:	b.eq	84b0 <PyFloat_FromString@plt+0x1980>  // b.none
    84e8:	bl	6a60 <PyType_IsSubtype@plt>
    84ec:	cbnz	w0, 84b0 <PyFloat_FromString@plt+0x1980>
    84f0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    84f4:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    84f8:	add	x1, x1, #0x889
    84fc:	ldr	x0, [x0, #3936]
    8500:	ldr	x0, [x0]
    8504:	bl	66e0 <PyErr_SetString@plt>
    8508:	b	8480 <PyFloat_FromString@plt+0x1950>
    850c:	ldr	x0, [sp, #40]
    8510:	bl	71a4 <PyFloat_FromString@plt+0x674>
    8514:	mov	x19, x0
    8518:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
    851c:	ldr	x1, [x0, #1720]
    8520:	ldr	x0, [sp, #40]
    8524:	blr	x1
    8528:	b	8484 <PyFloat_FromString@plt+0x1954>
    852c:	stp	x29, x30, [sp, #-48]!
    8530:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    8534:	add	x3, x3, #0x9b0
    8538:	mov	x29, sp
    853c:	stp	x19, x20, [sp, #16]
    8540:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    8544:	mov	x20, x0
    8548:	ldr	x19, [x19, #4008]
    854c:	mov	x0, x1
    8550:	add	x4, sp, #0x28
    8554:	mov	x1, x2
    8558:	add	x3, x3, #0x160
    855c:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    8560:	add	x2, x2, #0xdca
    8564:	str	x19, [sp, #40]
    8568:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    856c:	cbnz	w0, 8580 <PyFloat_FromString@plt+0x1a50>
    8570:	mov	x0, #0x0                   	// #0
    8574:	ldp	x19, x20, [sp, #16]
    8578:	ldp	x29, x30, [sp], #48
    857c:	ret
    8580:	ldr	x0, [sp, #40]
    8584:	cmp	x0, x19
    8588:	b.ne	85b4 <PyFloat_FromString@plt+0x1a84>  // b.any
    858c:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    8590:	str	x0, [sp, #40]
    8594:	cbz	x0, 8570 <PyFloat_FromString@plt+0x1a40>
    8598:	bl	790c <PyFloat_FromString@plt+0xddc>
    859c:	ldr	x1, [sp, #40]
    85a0:	add	x0, x20, #0x18
    85a4:	add	x1, x1, #0x10
    85a8:	bl	1aa80 <PyInit__decimal@@Base+0x9af8>
    85ac:	bl	6a00 <PyUnicode_FromString@plt>
    85b0:	b	8574 <PyFloat_FromString@plt+0x1a44>
    85b4:	ldr	x0, [x0, #8]
    85b8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    85bc:	add	x1, x1, #0x330
    85c0:	cmp	x0, x1
    85c4:	b.eq	859c <PyFloat_FromString@plt+0x1a6c>  // b.none
    85c8:	bl	6a60 <PyType_IsSubtype@plt>
    85cc:	cbnz	w0, 859c <PyFloat_FromString@plt+0x1a6c>
    85d0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    85d4:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    85d8:	add	x1, x1, #0x889
    85dc:	ldr	x0, [x0, #3936]
    85e0:	ldr	x0, [x0]
    85e4:	bl	66e0 <PyErr_SetString@plt>
    85e8:	b	8570 <PyFloat_FromString@plt+0x1a40>
    85ec:	stp	x29, x30, [sp, #-48]!
    85f0:	mov	x29, sp
    85f4:	stp	x19, x20, [sp, #16]
    85f8:	mov	x20, x0
    85fc:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    8600:	add	x0, x0, #0x330
    8604:	str	wzr, [sp, #44]
    8608:	add	x0, x0, #0x1a0
    860c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    8610:	mov	x19, x0
    8614:	cbz	x0, 8640 <PyFloat_FromString@plt+0x1b10>
    8618:	add	x2, sp, #0x2c
    861c:	add	x1, x20, #0x18
    8620:	add	x0, x0, #0x18
    8624:	bl	19350 <PyInit__decimal@@Base+0x83c8>
    8628:	ldr	w0, [sp, #44]
    862c:	tbz	w0, #9, 8640 <PyFloat_FromString@plt+0x1b10>
    8630:	mov	x0, x19
    8634:	mov	x19, #0x0                   	// #0
    8638:	bl	790c <PyFloat_FromString@plt+0xddc>
    863c:	bl	6670 <PyErr_NoMemory@plt>
    8640:	mov	x0, x19
    8644:	ldp	x19, x20, [sp, #16]
    8648:	ldp	x29, x30, [sp], #48
    864c:	ret
    8650:	stp	x29, x30, [sp, #-48]!
    8654:	mov	x29, sp
    8658:	stp	x19, x20, [sp, #16]
    865c:	mov	x20, x0
    8660:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    8664:	add	x0, x0, #0x330
    8668:	str	wzr, [sp, #44]
    866c:	add	x0, x0, #0x1a0
    8670:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    8674:	mov	x19, x0
    8678:	cbz	x0, 86a4 <PyFloat_FromString@plt+0x1b74>
    867c:	add	x2, sp, #0x2c
    8680:	add	x1, x20, #0x18
    8684:	add	x0, x0, #0x18
    8688:	bl	1931c <PyInit__decimal@@Base+0x8394>
    868c:	ldr	w0, [sp, #44]
    8690:	tbz	w0, #9, 86a4 <PyFloat_FromString@plt+0x1b74>
    8694:	mov	x0, x19
    8698:	mov	x19, #0x0                   	// #0
    869c:	bl	790c <PyFloat_FromString@plt+0xddc>
    86a0:	bl	6670 <PyErr_NoMemory@plt>
    86a4:	mov	x0, x19
    86a8:	ldp	x19, x20, [sp, #16]
    86ac:	ldp	x29, x30, [sp], #48
    86b0:	ret
    86b4:	stp	x29, x30, [sp, #-48]!
    86b8:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    86bc:	add	x3, x3, #0x9b0
    86c0:	mov	x29, sp
    86c4:	stp	x19, x20, [sp, #16]
    86c8:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    86cc:	mov	x20, x0
    86d0:	ldr	x19, [x19, #4008]
    86d4:	mov	x0, x1
    86d8:	add	x4, sp, #0x28
    86dc:	mov	x1, x2
    86e0:	add	x3, x3, #0x170
    86e4:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    86e8:	add	x2, x2, #0xdca
    86ec:	str	x19, [sp, #40]
    86f0:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    86f4:	cbnz	w0, 8708 <PyFloat_FromString@plt+0x1bd8>
    86f8:	mov	x0, #0x0                   	// #0
    86fc:	ldp	x19, x20, [sp, #16]
    8700:	ldp	x29, x30, [sp], #48
    8704:	ret
    8708:	ldr	x0, [sp, #40]
    870c:	cmp	x0, x19
    8710:	b.ne	8740 <PyFloat_FromString@plt+0x1c10>  // b.any
    8714:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    8718:	str	x0, [sp, #40]
    871c:	cbz	x0, 86f8 <PyFloat_FromString@plt+0x1bc8>
    8720:	bl	790c <PyFloat_FromString@plt+0xddc>
    8724:	ldr	x1, [sp, #40]
    8728:	add	x0, x20, #0x18
    872c:	add	x1, x1, #0x10
    8730:	bl	17a74 <PyInit__decimal@@Base+0x6aec>
    8734:	cbz	w0, 8778 <PyFloat_FromString@plt+0x1c48>
    8738:	bl	6c14 <PyFloat_FromString@plt+0xe4>
    873c:	b	86fc <PyFloat_FromString@plt+0x1bcc>
    8740:	ldr	x0, [x0, #8]
    8744:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    8748:	add	x1, x1, #0x330
    874c:	cmp	x0, x1
    8750:	b.eq	8724 <PyFloat_FromString@plt+0x1bf4>  // b.none
    8754:	bl	6a60 <PyType_IsSubtype@plt>
    8758:	cbnz	w0, 8724 <PyFloat_FromString@plt+0x1bf4>
    875c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    8760:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    8764:	add	x1, x1, #0x889
    8768:	ldr	x0, [x0, #3936]
    876c:	ldr	x0, [x0]
    8770:	bl	66e0 <PyErr_SetString@plt>
    8774:	b	86f8 <PyFloat_FromString@plt+0x1bc8>
    8778:	bl	6c2c <PyFloat_FromString@plt+0xfc>
    877c:	b	86fc <PyFloat_FromString@plt+0x1bcc>
    8780:	stp	x29, x30, [sp, #-48]!
    8784:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    8788:	add	x3, x3, #0x9b0
    878c:	mov	x29, sp
    8790:	stp	x19, x20, [sp, #16]
    8794:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    8798:	mov	x20, x0
    879c:	ldr	x19, [x19, #4008]
    87a0:	mov	x0, x1
    87a4:	add	x4, sp, #0x28
    87a8:	mov	x1, x2
    87ac:	add	x3, x3, #0x180
    87b0:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    87b4:	add	x2, x2, #0xdca
    87b8:	str	x19, [sp, #40]
    87bc:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    87c0:	cbnz	w0, 87d4 <PyFloat_FromString@plt+0x1ca4>
    87c4:	mov	x0, #0x0                   	// #0
    87c8:	ldp	x19, x20, [sp, #16]
    87cc:	ldp	x29, x30, [sp], #48
    87d0:	ret
    87d4:	ldr	x0, [sp, #40]
    87d8:	cmp	x0, x19
    87dc:	b.ne	880c <PyFloat_FromString@plt+0x1cdc>  // b.any
    87e0:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    87e4:	str	x0, [sp, #40]
    87e8:	cbz	x0, 87c4 <PyFloat_FromString@plt+0x1c94>
    87ec:	bl	790c <PyFloat_FromString@plt+0xddc>
    87f0:	ldr	x1, [sp, #40]
    87f4:	add	x0, x20, #0x18
    87f8:	add	x1, x1, #0x10
    87fc:	bl	17a30 <PyInit__decimal@@Base+0x6aa8>
    8800:	cbz	w0, 8844 <PyFloat_FromString@plt+0x1d14>
    8804:	bl	6c14 <PyFloat_FromString@plt+0xe4>
    8808:	b	87c8 <PyFloat_FromString@plt+0x1c98>
    880c:	ldr	x0, [x0, #8]
    8810:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    8814:	add	x1, x1, #0x330
    8818:	cmp	x0, x1
    881c:	b.eq	87f0 <PyFloat_FromString@plt+0x1cc0>  // b.none
    8820:	bl	6a60 <PyType_IsSubtype@plt>
    8824:	cbnz	w0, 87f0 <PyFloat_FromString@plt+0x1cc0>
    8828:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    882c:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    8830:	add	x1, x1, #0x889
    8834:	ldr	x0, [x0, #3936]
    8838:	ldr	x0, [x0]
    883c:	bl	66e0 <PyErr_SetString@plt>
    8840:	b	87c4 <PyFloat_FromString@plt+0x1c94>
    8844:	bl	6c2c <PyFloat_FromString@plt+0xfc>
    8848:	b	87c8 <PyFloat_FromString@plt+0x1c98>
    884c:	stp	x29, x30, [sp, #-48]!
    8850:	mov	x29, sp
    8854:	stp	x19, x20, [sp, #16]
    8858:	mov	x20, x0
    885c:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    8860:	mov	x19, x0
    8864:	cbz	x0, 888c <PyFloat_FromString@plt+0x1d5c>
    8868:	bl	790c <PyFloat_FromString@plt+0xddc>
    886c:	ldr	w2, [x19, #80]
    8870:	add	x1, x20, #0x18
    8874:	add	x0, sp, #0x28
    8878:	bl	14e58 <PyInit__decimal@@Base+0x3ed0>
    887c:	mov	x1, x0
    8880:	tbz	x0, #63, 889c <PyFloat_FromString@plt+0x1d6c>
    8884:	mov	x19, #0x0                   	// #0
    8888:	bl	6670 <PyErr_NoMemory@plt>
    888c:	mov	x0, x19
    8890:	ldp	x19, x20, [sp, #16]
    8894:	ldp	x29, x30, [sp], #48
    8898:	ret
    889c:	ldr	x0, [sp, #40]
    88a0:	bl	71a4 <PyFloat_FromString@plt+0x674>
    88a4:	mov	x19, x0
    88a8:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
    88ac:	ldr	x1, [x0, #1720]
    88b0:	ldr	x0, [sp, #40]
    88b4:	blr	x1
    88b8:	b	888c <PyFloat_FromString@plt+0x1d5c>
    88bc:	stp	x29, x30, [sp, #-32]!
    88c0:	mov	x29, sp
    88c4:	stp	x19, x20, [sp, #16]
    88c8:	mov	x20, x0
    88cc:	bl	884c <PyFloat_FromString@plt+0x1d1c>
    88d0:	mov	x19, x0
    88d4:	cbz	x0, 88fc <PyFloat_FromString@plt+0x1dcc>
    88d8:	ldr	x1, [x20, #8]
    88dc:	mov	x2, x0
    88e0:	adrp	x0, 24000 <PyInit__decimal@@Base+0x13078>
    88e4:	add	x0, x0, #0x9c6
    88e8:	bl	6870 <Py_BuildValue@plt>
    88ec:	mov	x20, x0
    88f0:	mov	x0, x19
    88f4:	mov	x19, x20
    88f8:	bl	790c <PyFloat_FromString@plt+0xddc>
    88fc:	mov	x0, x19
    8900:	ldp	x19, x20, [sp, #16]
    8904:	ldp	x29, x30, [sp], #32
    8908:	ret
    890c:	stp	x29, x30, [sp, #-304]!
    8910:	mov	x29, sp
    8914:	stp	x23, x24, [sp, #48]
    8918:	ldr	x23, [x0, #16]
    891c:	stp	x19, x20, [sp, #16]
    8920:	stp	x21, x22, [sp, #32]
    8924:	cmn	x23, #0x1
    8928:	mov	x22, x0
    892c:	stp	x25, x26, [sp, #64]
    8930:	b.ne	89e4 <PyFloat_FromString@plt+0x1eb4>  // b.any
    8934:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
    8938:	mov	x2, #0x13                  	// #19
    893c:	add	x3, sp, #0x58
    8940:	str	x0, [sp, #88]
    8944:	mov	x0, #0x1                   	// #1
    8948:	mov	w1, #0xffffff90            	// #-112
    894c:	stp	xzr, x2, [sp, #120]
    8950:	stp	x0, x0, [sp, #136]
    8954:	str	x3, [sp, #152]
    8958:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
    895c:	stp	xzr, x2, [sp, #168]
    8960:	add	x2, sp, #0x60
    8964:	movk	x3, #0x1ccc, lsl #48
    8968:	stp	x0, x0, [sp, #184]
    896c:	stp	x0, x0, [sp, #232]
    8970:	add	x0, sp, #0x68
    8974:	strb	w1, [sp, #112]
    8978:	strb	w1, [sp, #160]
    897c:	str	x2, [sp, #200]
    8980:	mov	x2, #0xa                   	// #10
    8984:	strb	w1, [sp, #208]
    8988:	mov	x1, #0x2                   	// #2
    898c:	str	wzr, [sp, #84]
    8990:	str	x3, [sp, #96]
    8994:	str	x2, [sp, #104]
    8998:	stp	xzr, x1, [sp, #216]
    899c:	str	x0, [sp, #248]
    89a0:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    89a4:	cbz	x0, 89e0 <PyFloat_FromString@plt+0x1eb0>
    89a8:	add	x25, x22, #0x18
    89ac:	bl	790c <PyFloat_FromString@plt+0xddc>
    89b0:	mov	x0, x25
    89b4:	bl	179d8 <PyInit__decimal@@Base+0x6a50>
    89b8:	cbz	w0, 8a24 <PyFloat_FromString@plt+0x1ef4>
    89bc:	mov	x0, x25
    89c0:	bl	179cc <PyInit__decimal@@Base+0x6a44>
    89c4:	cbz	w0, 8a00 <PyFloat_FromString@plt+0x1ed0>
    89c8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    89cc:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    89d0:	add	x1, x1, #0x9cb
    89d4:	ldr	x0, [x0, #3936]
    89d8:	ldr	x0, [x0]
    89dc:	bl	66e0 <PyErr_SetString@plt>
    89e0:	str	x23, [x22, #16]
    89e4:	ldr	x0, [x22, #16]
    89e8:	ldp	x19, x20, [sp, #16]
    89ec:	ldp	x21, x22, [sp, #32]
    89f0:	ldp	x23, x24, [sp, #48]
    89f4:	ldp	x25, x26, [sp, #64]
    89f8:	ldp	x29, x30, [sp], #304
    89fc:	ret
    8a00:	mov	x0, x25
    8a04:	bl	1798c <PyInit__decimal@@Base+0x6a04>
    8a08:	cbnz	w0, 8b98 <PyFloat_FromString@plt+0x2068>
    8a0c:	mov	x0, x25
    8a10:	bl	17adc <PyInit__decimal@@Base+0x6b54>
    8a14:	mov	w1, #0xcb2f                	// #52015
    8a18:	movk	w1, #0x4, lsl #16
    8a1c:	smull	x23, w0, w1
    8a20:	b	89e0 <PyFloat_FromString@plt+0x1eb0>
    8a24:	add	x24, sp, #0x100
    8a28:	mov	x0, x24
    8a2c:	bl	12880 <PyInit__decimal@@Base+0x18f8>
    8a30:	bl	15e0c <PyInit__decimal@@Base+0x4e84>
    8a34:	mov	x20, x0
    8a38:	cbz	x0, 8b88 <PyFloat_FromString@plt+0x2058>
    8a3c:	bl	15e0c <PyInit__decimal@@Base+0x4e84>
    8a40:	mov	x19, x0
    8a44:	cbz	x0, 8b88 <PyFloat_FromString@plt+0x2058>
    8a48:	ldr	x1, [x22, #32]
    8a4c:	add	x21, sp, #0x54
    8a50:	add	x26, sp, #0x70
    8a54:	mov	x3, x21
    8a58:	mov	x2, x24
    8a5c:	tbnz	x1, #63, 8b60 <PyFloat_FromString@plt+0x2030>
    8a60:	bl	1a0d8 <PyInit__decimal@@Base+0x9150>
    8a64:	mov	x5, x21
    8a68:	mov	x4, x24
    8a6c:	mov	x3, x26
    8a70:	mov	x2, x19
    8a74:	add	x1, sp, #0xd0
    8a78:	mov	x0, x20
    8a7c:	bl	21740 <PyInit__decimal@@Base+0x107b8>
    8a80:	mov	x2, x21
    8a84:	mov	x1, x25
    8a88:	mov	x0, x19
    8a8c:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
    8a90:	cbz	w0, 8b8c <PyFloat_FromString@plt+0x205c>
    8a94:	str	xzr, [x19, #8]
    8a98:	mov	x0, x19
    8a9c:	bl	183ec <PyInit__decimal@@Base+0x7464>
    8aa0:	mov	x0, #0x14                  	// #20
    8aa4:	mov	x4, x21
    8aa8:	movk	x0, #0xa764, lsl #16
    8aac:	mov	x3, x24
    8ab0:	movk	x0, #0xb6b3, lsl #32
    8ab4:	mov	x2, x20
    8ab8:	movk	x0, #0xde0, lsl #48
    8abc:	stp	x0, x0, [sp, #256]
    8ac0:	mov	x0, #0xffec                	// #65516
    8ac4:	movk	x0, #0x589b, lsl #16
    8ac8:	mov	x1, x19
    8acc:	movk	x0, #0x494c, lsl #32
    8ad0:	movk	x0, #0xf21f, lsl #48
    8ad4:	str	x0, [sp, #272]
    8ad8:	mov	x0, x19
    8adc:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
    8ae0:	mov	x4, x21
    8ae4:	mov	x3, x24
    8ae8:	mov	x2, x26
    8aec:	mov	x1, x19
    8af0:	mov	x0, x19
    8af4:	bl	215d8 <PyInit__decimal@@Base+0x10650>
    8af8:	mov	x1, x21
    8afc:	mov	x0, x19
    8b00:	bl	18a68 <PyInit__decimal@@Base+0x7ae0>
    8b04:	mov	x21, x0
    8b08:	mov	x0, x25
    8b0c:	bl	179a4 <PyInit__decimal@@Base+0x6a1c>
    8b10:	cbnz	w0, 8b18 <PyFloat_FromString@plt+0x1fe8>
    8b14:	neg	x21, x21
    8b18:	cmn	x21, #0x1
    8b1c:	b.ne	8b24 <PyFloat_FromString@plt+0x1ff4>  // b.any
    8b20:	mov	x21, #0xfffffffffffffffe    	// #-2
    8b24:	ldr	w0, [sp, #84]
    8b28:	cbz	w0, 8b80 <PyFloat_FromString@plt+0x2050>
    8b2c:	tbnz	w0, #9, 8b8c <PyFloat_FromString@plt+0x205c>
    8b30:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    8b34:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    8b38:	add	x1, x1, #0x9ed
    8b3c:	ldr	x0, [x0, #3920]
    8b40:	ldr	x0, [x0]
    8b44:	bl	66e0 <PyErr_SetString@plt>
    8b48:	mov	x0, x20
    8b4c:	bl	17b68 <PyInit__decimal@@Base+0x6be0>
    8b50:	cbz	x19, 89e0 <PyFloat_FromString@plt+0x1eb0>
    8b54:	mov	x0, x19
    8b58:	bl	17b68 <PyInit__decimal@@Base+0x6be0>
    8b5c:	b	89e0 <PyFloat_FromString@plt+0x1eb0>
    8b60:	neg	x1, x1
    8b64:	bl	1a0d8 <PyInit__decimal@@Base+0x9150>
    8b68:	mov	x5, x21
    8b6c:	mov	x4, x24
    8b70:	mov	x3, x26
    8b74:	mov	x2, x19
    8b78:	add	x1, sp, #0xa0
    8b7c:	b	8a78 <PyFloat_FromString@plt+0x1f48>
    8b80:	mov	x23, x21
    8b84:	b	8b48 <PyFloat_FromString@plt+0x2018>
    8b88:	mov	x19, #0x0                   	// #0
    8b8c:	bl	6670 <PyErr_NoMemory@plt>
    8b90:	cbz	x20, 8b50 <PyFloat_FromString@plt+0x2020>
    8b94:	b	8b48 <PyFloat_FromString@plt+0x2018>
    8b98:	mov	x23, #0x0                   	// #0
    8b9c:	b	89e0 <PyFloat_FromString@plt+0x1eb0>
    8ba0:	stp	x29, x30, [sp, #-32]!
    8ba4:	mov	x29, sp
    8ba8:	stp	x19, x20, [sp, #16]
    8bac:	mov	x20, x0
    8bb0:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    8bb4:	mov	x19, x0
    8bb8:	cbz	x0, 8bd8 <PyFloat_FromString@plt+0x20a8>
    8bbc:	bl	790c <PyFloat_FromString@plt+0xddc>
    8bc0:	ldr	w1, [x19, #80]
    8bc4:	add	x0, x20, #0x18
    8bc8:	bl	14df8 <PyInit__decimal@@Base+0x3e70>
    8bcc:	mov	x19, x0
    8bd0:	cbnz	x0, 8be8 <PyFloat_FromString@plt+0x20b8>
    8bd4:	bl	6670 <PyErr_NoMemory@plt>
    8bd8:	mov	x0, x19
    8bdc:	ldp	x19, x20, [sp, #16]
    8be0:	ldp	x29, x30, [sp], #32
    8be4:	ret
    8be8:	mov	x1, x0
    8bec:	adrp	x0, 24000 <PyInit__decimal@@Base+0x13078>
    8bf0:	add	x0, x0, #0xa15
    8bf4:	bl	6500 <PyUnicode_FromFormat@plt>
    8bf8:	mov	x20, x0
    8bfc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
    8c00:	ldr	x1, [x0, #1720]
    8c04:	mov	x0, x19
    8c08:	mov	x19, x20
    8c0c:	blr	x1
    8c10:	b	8bd8 <PyFloat_FromString@plt+0x20a8>
    8c14:	stp	x29, x30, [sp, #-48]!
    8c18:	mov	x1, x0
    8c1c:	mov	x2, #0x2                   	// #2
    8c20:	mov	x29, sp
    8c24:	stp	x19, x20, [sp, #16]
    8c28:	add	x19, sp, #0x28
    8c2c:	mov	x0, x19
    8c30:	bl	6580 <mbstowcs@plt>
    8c34:	cmp	x0, #0x1
    8c38:	b.eq	8c68 <PyFloat_FromString@plt+0x2138>  // b.none
    8c3c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    8c40:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    8c44:	mov	x19, #0x0                   	// #0
    8c48:	add	x1, x1, #0xa23
    8c4c:	ldr	x0, [x0, #3928]
    8c50:	ldr	x0, [x0]
    8c54:	bl	66e0 <PyErr_SetString@plt>
    8c58:	mov	x0, x19
    8c5c:	ldp	x19, x20, [sp, #16]
    8c60:	ldp	x29, x30, [sp], #48
    8c64:	ret
    8c68:	mov	x1, x0
    8c6c:	mov	x0, x19
    8c70:	bl	6600 <PyUnicode_FromWideChar@plt>
    8c74:	mov	x19, x0
    8c78:	cbz	x0, 8c58 <PyFloat_FromString@plt+0x2128>
    8c7c:	bl	6650 <PyUnicode_AsUTF8String@plt>
    8c80:	mov	x20, x0
    8c84:	mov	x0, x19
    8c88:	mov	x19, x20
    8c8c:	bl	790c <PyFloat_FromString@plt+0xddc>
    8c90:	b	8c58 <PyFloat_FromString@plt+0x2128>
    8c94:	stp	x29, x30, [sp, #-176]!
    8c98:	mov	x29, sp
    8c9c:	stp	x19, x20, [sp, #16]
    8ca0:	mov	x19, x1
    8ca4:	stp	x21, x22, [sp, #32]
    8ca8:	stp	x23, x24, [sp, #48]
    8cac:	stp	x25, x26, [sp, #64]
    8cb0:	mov	x26, x0
    8cb4:	str	x27, [sp, #80]
    8cb8:	str	wzr, [sp, #100]
    8cbc:	str	xzr, [sp, #104]
    8cc0:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    8cc4:	cbnz	x0, 8cd0 <PyFloat_FromString@plt+0x21a0>
    8cc8:	mov	x19, #0x0                   	// #0
    8ccc:	b	8d3c <PyFloat_FromString@plt+0x220c>
    8cd0:	mov	x25, x0
    8cd4:	bl	790c <PyFloat_FromString@plt+0xddc>
    8cd8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    8cdc:	add	x3, sp, #0x68
    8ce0:	add	x2, sp, #0x70
    8ce4:	add	x1, x1, #0xdc9
    8ce8:	mov	x0, x19
    8cec:	bl	6980 <PyArg_ParseTuple@plt>
    8cf0:	cbz	w0, 8cc8 <PyFloat_FromString@plt+0x2198>
    8cf4:	ldr	x0, [sp, #112]
    8cf8:	ldr	x1, [x0, #8]
    8cfc:	ldr	x1, [x1, #168]
    8d00:	tbz	w1, #28, 8dfc <PyFloat_FromString@plt+0x22cc>
    8d04:	add	x1, sp, #0x78
    8d08:	bl	6a70 <PyUnicode_AsUTF8AndSize@plt>
    8d0c:	mov	x23, x0
    8d10:	cbz	x0, 8cc8 <PyFloat_FromString@plt+0x2198>
    8d14:	ldr	x20, [sp, #120]
    8d18:	cmp	x20, #0x0
    8d1c:	b.le	8e18 <PyFloat_FromString@plt+0x22e8>
    8d20:	ldrb	w0, [x0]
    8d24:	cbnz	w0, 8e18 <PyFloat_FromString@plt+0x22e8>
    8d28:	add	x0, x20, #0x1
    8d2c:	bl	6ae0 <PyMem_Malloc@plt>
    8d30:	mov	x19, x0
    8d34:	cbnz	x0, 8d5c <PyFloat_FromString@plt+0x222c>
    8d38:	bl	6670 <PyErr_NoMemory@plt>
    8d3c:	mov	x0, x19
    8d40:	ldp	x19, x20, [sp, #16]
    8d44:	ldp	x21, x22, [sp, #32]
    8d48:	ldp	x23, x24, [sp, #48]
    8d4c:	ldp	x25, x26, [sp, #64]
    8d50:	ldr	x27, [sp, #80]
    8d54:	ldp	x29, x30, [sp], #176
    8d58:	ret
    8d5c:	mov	x1, x23
    8d60:	mov	x2, x20
    8d64:	mov	x23, x19
    8d68:	bl	64f0 <memcpy@plt>
    8d6c:	strb	wzr, [x19, x20]
    8d70:	mov	w0, #0x5f                  	// #95
    8d74:	mov	w24, #0x1                   	// #1
    8d78:	strb	w0, [x19]
    8d7c:	ldr	w2, [x25, #80]
    8d80:	add	x27, sp, #0x80
    8d84:	mov	x1, x23
    8d88:	mov	x0, x27
    8d8c:	bl	14ec8 <PyInit__decimal@@Base+0x3f40>
    8d90:	cbnz	w0, 8e20 <PyFloat_FromString@plt+0x22f0>
    8d94:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    8d98:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    8d9c:	add	x1, x1, #0xa86
    8da0:	ldr	x0, [x0, #3928]
    8da4:	ldr	x0, [x0]
    8da8:	bl	66e0 <PyErr_SetString@plt>
    8dac:	mov	x25, #0x0                   	// #0
    8db0:	mov	x21, #0x0                   	// #0
    8db4:	mov	x22, #0x0                   	// #0
    8db8:	mov	x20, #0x0                   	// #0
    8dbc:	mov	x19, #0x0                   	// #0
    8dc0:	mov	x0, x21
    8dc4:	bl	7cc4 <PyFloat_FromString@plt+0x1194>
    8dc8:	mov	x0, x22
    8dcc:	bl	7cc4 <PyFloat_FromString@plt+0x1194>
    8dd0:	mov	x0, x20
    8dd4:	bl	7cc4 <PyFloat_FromString@plt+0x1194>
    8dd8:	cbz	w24, 8de4 <PyFloat_FromString@plt+0x22b4>
    8ddc:	mov	x0, x23
    8de0:	bl	65f0 <PyMem_Free@plt>
    8de4:	cbz	x25, 8d3c <PyFloat_FromString@plt+0x220c>
    8de8:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
    8dec:	ldr	x1, [x0, #1720]
    8df0:	mov	x0, x25
    8df4:	blr	x1
    8df8:	b	8d3c <PyFloat_FromString@plt+0x220c>
    8dfc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    8e00:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    8e04:	add	x1, x1, #0xa6f
    8e08:	ldr	x0, [x0, #3936]
    8e0c:	ldr	x0, [x0]
    8e10:	bl	66e0 <PyErr_SetString@plt>
    8e14:	b	8cc8 <PyFloat_FromString@plt+0x2198>
    8e18:	mov	w24, #0x0                   	// #0
    8e1c:	b	8d7c <PyFloat_FromString@plt+0x224c>
    8e20:	cbz	w24, 8e2c <PyFloat_FromString@plt+0x22fc>
    8e24:	mov	w0, #0xff                  	// #255
    8e28:	sturh	w0, [sp, #147]
    8e2c:	ldr	x21, [sp, #104]
    8e30:	cbz	x21, 8f0c <PyFloat_FromString@plt+0x23dc>
    8e34:	ldr	x0, [x21, #8]
    8e38:	ldr	x0, [x0, #168]
    8e3c:	tbnz	w0, #29, 8e54 <PyFloat_FromString@plt+0x2324>
    8e40:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    8e44:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    8e48:	add	x1, x1, #0xa9c
    8e4c:	ldr	x0, [x0, #3936]
    8e50:	b	8da4 <PyFloat_FromString@plt+0x2274>
    8e54:	mov	x0, x21
    8e58:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    8e5c:	add	x1, x1, #0xabd
    8e60:	bl	6910 <PyDict_GetItemString@plt>
    8e64:	mov	x20, x0
    8e68:	cbz	x0, 8e80 <PyFloat_FromString@plt+0x2350>
    8e6c:	bl	6650 <PyUnicode_AsUTF8String@plt>
    8e70:	mov	x20, x0
    8e74:	cbz	x0, 8dac <PyFloat_FromString@plt+0x227c>
    8e78:	add	x0, x0, #0x20
    8e7c:	str	x0, [sp, #152]
    8e80:	ldr	x0, [sp, #104]
    8e84:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    8e88:	add	x1, x1, #0xacb
    8e8c:	bl	6910 <PyDict_GetItemString@plt>
    8e90:	mov	x22, x0
    8e94:	cbz	x0, 8eb0 <PyFloat_FromString@plt+0x2380>
    8e98:	bl	6650 <PyUnicode_AsUTF8String@plt>
    8e9c:	mov	x19, x0
    8ea0:	cbz	x0, 902c <PyFloat_FromString@plt+0x24fc>
    8ea4:	mov	x22, x19
    8ea8:	add	x0, x0, #0x20
    8eac:	str	x0, [sp, #160]
    8eb0:	ldr	x0, [sp, #104]
    8eb4:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    8eb8:	add	x1, x1, #0xad9
    8ebc:	bl	6910 <PyDict_GetItemString@plt>
    8ec0:	mov	x21, x0
    8ec4:	cbz	x0, 8ee0 <PyFloat_FromString@plt+0x23b0>
    8ec8:	bl	6650 <PyUnicode_AsUTF8String@plt>
    8ecc:	mov	x19, x0
    8ed0:	cbz	x0, 9020 <PyFloat_FromString@plt+0x24f0>
    8ed4:	mov	x21, x19
    8ed8:	add	x0, x0, #0x20
    8edc:	str	x0, [sp, #168]
    8ee0:	mov	x0, x27
    8ee4:	bl	14e80 <PyInit__decimal@@Base+0x3ef8>
    8ee8:	tbz	w0, #31, 8f80 <PyFloat_FromString@plt+0x2450>
    8eec:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    8ef0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    8ef4:	mov	x25, #0x0                   	// #0
    8ef8:	add	x1, x1, #0xae2
    8efc:	ldr	x0, [x0, #3928]
    8f00:	ldr	x0, [x0]
    8f04:	bl	66e0 <PyErr_SetString@plt>
    8f08:	b	8dbc <PyFloat_FromString@plt+0x228c>
    8f0c:	ldr	x19, [sp, #152]
    8f10:	mov	x0, x19
    8f14:	bl	6550 <strlen@plt>
    8f18:	cmp	x0, #0x1
    8f1c:	b.hi	8f2c <PyFloat_FromString@plt+0x23fc>  // b.pmore
    8f20:	b.ne	8fac <PyFloat_FromString@plt+0x247c>  // b.any
    8f24:	ldrb	w0, [x19]
    8f28:	tbz	w0, #7, 8fac <PyFloat_FromString@plt+0x247c>
    8f2c:	mov	x0, x19
    8f30:	bl	8c14 <PyFloat_FromString@plt+0x20e4>
    8f34:	mov	x20, x0
    8f38:	cbz	x0, 8dac <PyFloat_FromString@plt+0x227c>
    8f3c:	add	x0, x0, #0x20
    8f40:	str	x0, [sp, #152]
    8f44:	ldr	x19, [sp, #160]
    8f48:	mov	x0, x19
    8f4c:	bl	6550 <strlen@plt>
    8f50:	cmp	x0, #0x1
    8f54:	b.hi	8f64 <PyFloat_FromString@plt+0x2434>  // b.pmore
    8f58:	b.ne	8fb4 <PyFloat_FromString@plt+0x2484>  // b.any
    8f5c:	ldrb	w0, [x19]
    8f60:	tbz	w0, #7, 8fb4 <PyFloat_FromString@plt+0x2484>
    8f64:	mov	x0, x19
    8f68:	bl	8c14 <PyFloat_FromString@plt+0x20e4>
    8f6c:	mov	x19, x0
    8f70:	cbz	x0, 902c <PyFloat_FromString@plt+0x24fc>
    8f74:	mov	x22, x19
    8f78:	add	x0, x0, #0x20
    8f7c:	str	x0, [sp, #160]
    8f80:	add	x2, x25, #0x10
    8f84:	add	x3, sp, #0x64
    8f88:	mov	x1, x27
    8f8c:	add	x0, x26, #0x18
    8f90:	bl	152a8 <PyInit__decimal@@Base+0x4320>
    8f94:	mov	x25, x0
    8f98:	cbnz	x0, 8fd8 <PyFloat_FromString@plt+0x24a8>
    8f9c:	ldr	w0, [sp, #100]
    8fa0:	tbz	w0, #9, 8fbc <PyFloat_FromString@plt+0x248c>
    8fa4:	bl	6670 <PyErr_NoMemory@plt>
    8fa8:	b	8dbc <PyFloat_FromString@plt+0x228c>
    8fac:	mov	x20, #0x0                   	// #0
    8fb0:	b	8f44 <PyFloat_FromString@plt+0x2414>
    8fb4:	mov	x22, #0x0                   	// #0
    8fb8:	b	8f80 <PyFloat_FromString@plt+0x2450>
    8fbc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    8fc0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    8fc4:	add	x1, x1, #0xaf8
    8fc8:	ldr	x0, [x0, #3928]
    8fcc:	ldr	x0, [x0]
    8fd0:	bl	66e0 <PyErr_SetString@plt>
    8fd4:	b	8dbc <PyFloat_FromString@plt+0x228c>
    8fd8:	bl	6550 <strlen@plt>
    8fdc:	str	x0, [sp, #120]
    8fe0:	cbnz	w24, 9018 <PyFloat_FromString@plt+0x24e8>
    8fe4:	ldr	x1, [sp, #120]
    8fe8:	mov	x0, x25
    8fec:	mov	x2, #0x0                   	// #0
    8ff0:	bl	6940 <PyUnicode_DecodeUTF8@plt>
    8ff4:	mov	x19, x0
    8ff8:	b	8dc0 <PyFloat_FromString@plt+0x2290>
    8ffc:	cmp	w1, #0xff
    9000:	b.ne	9008 <PyFloat_FromString@plt+0x24d8>  // b.any
    9004:	strb	wzr, [x0]
    9008:	add	x0, x0, #0x1
    900c:	ldrb	w1, [x0]
    9010:	cbnz	w1, 8ffc <PyFloat_FromString@plt+0x24cc>
    9014:	b	8fe4 <PyFloat_FromString@plt+0x24b4>
    9018:	mov	x0, x25
    901c:	b	900c <PyFloat_FromString@plt+0x24dc>
    9020:	mov	x25, #0x0                   	// #0
    9024:	mov	x21, #0x0                   	// #0
    9028:	b	8dc0 <PyFloat_FromString@plt+0x2290>
    902c:	mov	x25, #0x0                   	// #0
    9030:	mov	x21, #0x0                   	// #0
    9034:	mov	x22, #0x0                   	// #0
    9038:	b	8dc0 <PyFloat_FromString@plt+0x2290>
    903c:	stp	x29, x30, [sp, #-32]!
    9040:	mov	x29, sp
    9044:	stp	x19, x20, [sp, #16]
    9048:	add	x20, x0, #0x18
    904c:	mov	x19, x0
    9050:	mov	x0, x20
    9054:	bl	1798c <PyInit__decimal@@Base+0x6a04>
    9058:	cbz	w0, 90d8 <PyFloat_FromString@plt+0x25a8>
    905c:	mov	x0, x20
    9060:	bl	179cc <PyInit__decimal@@Base+0x6a44>
    9064:	cbz	w0, 9094 <PyFloat_FromString@plt+0x2564>
    9068:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    906c:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    9070:	mov	x19, #0x0                   	// #0
    9074:	add	x1, x1, #0xb31
    9078:	ldr	x0, [x0, #3928]
    907c:	ldr	x0, [x0]
    9080:	bl	66e0 <PyErr_SetString@plt>
    9084:	mov	x0, x19
    9088:	ldp	x19, x20, [sp, #16]
    908c:	ldp	x29, x30, [sp], #32
    9090:	ret
    9094:	mov	x0, x20
    9098:	bl	17998 <PyInit__decimal@@Base+0x6a10>
    909c:	cbz	w0, 90cc <PyFloat_FromString@plt+0x259c>
    90a0:	adrp	x0, 24000 <PyInit__decimal@@Base+0x13078>
    90a4:	add	x0, x0, #0xb57
    90a8:	bl	6a00 <PyUnicode_FromString@plt>
    90ac:	mov	x19, x0
    90b0:	cbz	x0, 9084 <PyFloat_FromString@plt+0x2554>
    90b4:	bl	6b30 <PyFloat_FromString@plt>
    90b8:	mov	x20, x0
    90bc:	mov	x0, x19
    90c0:	mov	x19, x20
    90c4:	bl	790c <PyFloat_FromString@plt+0xddc>
    90c8:	b	9084 <PyFloat_FromString@plt+0x2554>
    90cc:	adrp	x0, 24000 <PyInit__decimal@@Base+0x13078>
    90d0:	add	x0, x0, #0xb58
    90d4:	b	90a8 <PyFloat_FromString@plt+0x2578>
    90d8:	mov	x0, x19
    90dc:	bl	884c <PyFloat_FromString@plt+0x1d1c>
    90e0:	b	90ac <PyFloat_FromString@plt+0x257c>
    90e4:	stp	x29, x30, [sp, #-32]!
    90e8:	mov	x29, sp
    90ec:	str	x19, [sp, #16]
    90f0:	str	d8, [sp, #24]
    90f4:	bl	903c <PyFloat_FromString@plt+0x250c>
    90f8:	cbz	x0, 913c <PyFloat_FromString@plt+0x260c>
    90fc:	mov	x19, x0
    9100:	bl	6960 <PyFloat_AsDouble@plt>
    9104:	fmov	d8, d0
    9108:	mov	x0, x19
    910c:	bl	790c <PyFloat_FromString@plt+0xddc>
    9110:	fmov	d0, #-1.000000000000000000e+00
    9114:	fcmp	d8, d0
    9118:	b.eq	9134 <PyFloat_FromString@plt+0x2604>  // b.none
    911c:	fmov	d0, d8
    9120:	ldr	d8, [sp, #24]
    9124:	ldr	x19, [sp, #16]
    9128:	movi	d1, #0x0
    912c:	ldp	x29, x30, [sp], #32
    9130:	b	6aa0 <PyComplex_FromDoubles@plt>
    9134:	bl	6880 <PyErr_Occurred@plt>
    9138:	cbz	x0, 911c <PyFloat_FromString@plt+0x25ec>
    913c:	mov	x0, #0x0                   	// #0
    9140:	ldr	d8, [sp, #24]
    9144:	ldr	x19, [sp, #16]
    9148:	ldp	x29, x30, [sp], #32
    914c:	ret
    9150:	ldr	x2, [x0]
    9154:	add	x2, x2, #0x1
    9158:	str	x2, [x0]
    915c:	ret
    9160:	ldr	x2, [x0]
    9164:	add	x2, x2, #0x1
    9168:	str	x2, [x0]
    916c:	ret
    9170:	ldr	x2, [x0]
    9174:	add	x2, x2, #0x1
    9178:	str	x2, [x0]
    917c:	ret
    9180:	stp	x29, x30, [sp, #-32]!
    9184:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    9188:	add	x0, x0, #0x330
    918c:	mov	x29, sp
    9190:	add	x0, x0, #0x1a0
    9194:	stp	x19, x20, [sp, #16]
    9198:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    919c:	mov	x19, x0
    91a0:	cbz	x0, 91d0 <PyFloat_FromString@plt+0x26a0>
    91a4:	add	x20, x0, #0x18
    91a8:	mov	w1, #0x0                   	// #0
    91ac:	ldr	x0, [x0, #64]
    91b0:	str	xzr, [x0]
    91b4:	mov	x0, #0x1                   	// #1
    91b8:	str	x0, [x19, #48]
    91bc:	mov	x0, x20
    91c0:	bl	18478 <PyInit__decimal@@Base+0x74f0>
    91c4:	str	xzr, [x19, #32]
    91c8:	mov	x0, x20
    91cc:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
    91d0:	mov	x0, x19
    91d4:	ldp	x19, x20, [sp, #16]
    91d8:	ldp	x29, x30, [sp], #32
    91dc:	ret
    91e0:	stp	x29, x30, [sp, #-32]!
    91e4:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    91e8:	add	x0, x0, #0x330
    91ec:	mov	x29, sp
    91f0:	add	x0, x0, #0x1a0
    91f4:	stp	x19, x20, [sp, #16]
    91f8:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    91fc:	mov	x19, x0
    9200:	cbz	x0, 9234 <PyFloat_FromString@plt+0x2704>
    9204:	add	x20, x0, #0x18
    9208:	mov	x1, #0xa                   	// #10
    920c:	ldr	x0, [x0, #64]
    9210:	str	x1, [x0]
    9214:	mov	x0, #0x1                   	// #1
    9218:	str	x0, [x19, #48]
    921c:	mov	w1, #0x0                   	// #0
    9220:	mov	x0, x20
    9224:	bl	18478 <PyInit__decimal@@Base+0x74f0>
    9228:	str	xzr, [x19, #32]
    922c:	mov	x0, x20
    9230:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
    9234:	mov	x0, x19
    9238:	ldp	x19, x20, [sp, #16]
    923c:	ldp	x29, x30, [sp], #32
    9240:	ret
    9244:	b	91e0 <PyFloat_FromString@plt+0x26b0>
    9248:	stp	x29, x30, [sp, #-48]!
    924c:	mov	x29, sp
    9250:	stp	x19, x20, [sp, #16]
    9254:	str	x21, [sp, #32]
    9258:	cbnz	x2, 9288 <PyFloat_FromString@plt+0x2758>
    925c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    9260:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    9264:	add	x1, x1, #0xb5c
    9268:	ldr	x0, [x0, #3928]
    926c:	ldr	x0, [x0]
    9270:	bl	66e0 <PyErr_SetString@plt>
    9274:	mov	w0, #0xffffffff            	// #-1
    9278:	ldp	x19, x20, [sp, #16]
    927c:	ldr	x21, [sp, #32]
    9280:	ldp	x29, x30, [sp], #48
    9284:	ret
    9288:	mov	x21, x0
    928c:	mov	x20, x2
    9290:	mov	x0, x1
    9294:	bl	73d0 <PyFloat_FromString@plt+0x8a0>
    9298:	mov	w19, w0
    929c:	tst	w0, #0x18000
    92a0:	b.ne	9274 <PyFloat_FromString@plt+0x2744>  // b.any
    92a4:	mov	x0, x20
    92a8:	bl	6970 <PyObject_IsTrue@plt>
    92ac:	tbnz	w0, #31, 9274 <PyFloat_FromString@plt+0x2744>
    92b0:	ldr	x1, [x21, #16]
    92b4:	cmp	w0, #0x1
    92b8:	ldr	w2, [x1]
    92bc:	b.ne	92d0 <PyFloat_FromString@plt+0x27a0>  // b.any
    92c0:	orr	w19, w19, w2
    92c4:	mov	w0, #0x0                   	// #0
    92c8:	str	w19, [x1]
    92cc:	b	9278 <PyFloat_FromString@plt+0x2748>
    92d0:	bic	w19, w2, w19
    92d4:	b	92c4 <PyFloat_FromString@plt+0x2794>
    92d8:	stp	x29, x30, [sp, #-32]!
    92dc:	mov	x29, sp
    92e0:	stp	x19, x20, [sp, #16]
    92e4:	mov	x20, x0
    92e8:	mov	x0, x1
    92ec:	bl	6790 <PyLong_AsSsize_t@plt>
    92f0:	mov	x19, x0
    92f4:	cmn	x0, #0x1
    92f8:	b.ne	932c <PyFloat_FromString@plt+0x27fc>  // b.any
    92fc:	bl	6880 <PyErr_Occurred@plt>
    9300:	cbnz	x0, 9340 <PyFloat_FromString@plt+0x2810>
    9304:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    9308:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    930c:	add	x1, x1, #0xb7a
    9310:	ldr	x0, [x0, #3928]
    9314:	ldr	x0, [x0]
    9318:	bl	66e0 <PyErr_SetString@plt>
    931c:	mov	w0, #0xffffffff            	// #-1
    9320:	ldp	x19, x20, [sp, #16]
    9324:	ldp	x29, x30, [sp], #32
    9328:	ret
    932c:	cmp	x0, #0x1
    9330:	b.hi	9304 <PyFloat_FromString@plt+0x27d4>  // b.pmore
    9334:	mov	w0, #0x0                   	// #0
    9338:	str	w19, [x20, #80]
    933c:	b	9320 <PyFloat_FromString@plt+0x27f0>
    9340:	mov	w0, w19
    9344:	b	9320 <PyFloat_FromString@plt+0x27f0>
    9348:	stp	x29, x30, [sp, #-32]!
    934c:	mov	x29, sp
    9350:	stp	x19, x20, [sp, #16]
    9354:	mov	x20, x0
    9358:	mov	x0, x1
    935c:	bl	6790 <PyLong_AsSsize_t@plt>
    9360:	mov	x19, x0
    9364:	cmn	x0, #0x1
    9368:	b.eq	938c <PyFloat_FromString@plt+0x285c>  // b.none
    936c:	mov	x1, x19
    9370:	add	x0, x20, #0x10
    9374:	bl	12a04 <PyInit__decimal@@Base+0x1a7c>
    9378:	cbz	w0, 939c <PyFloat_FromString@plt+0x286c>
    937c:	mov	w0, #0x0                   	// #0
    9380:	ldp	x19, x20, [sp, #16]
    9384:	ldp	x29, x30, [sp], #32
    9388:	ret
    938c:	bl	6880 <PyErr_Occurred@plt>
    9390:	cbz	x0, 936c <PyFloat_FromString@plt+0x283c>
    9394:	mov	w0, w19
    9398:	b	9380 <PyFloat_FromString@plt+0x2850>
    939c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    93a0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    93a4:	add	x1, x1, #0xb9f
    93a8:	ldr	x0, [x0, #3928]
    93ac:	ldr	x0, [x0]
    93b0:	bl	66e0 <PyErr_SetString@plt>
    93b4:	mov	w0, #0xffffffff            	// #-1
    93b8:	b	9380 <PyFloat_FromString@plt+0x2850>
    93bc:	stp	x29, x30, [sp, #-32]!
    93c0:	mov	x29, sp
    93c4:	str	x19, [sp, #16]
    93c8:	mov	x19, x0
    93cc:	mov	x0, x1
    93d0:	bl	76ec <PyFloat_FromString@plt+0xbbc>
    93d4:	cmn	w0, #0x1
    93d8:	b.eq	9408 <PyFloat_FromString@plt+0x28d8>  // b.none
    93dc:	mov	w1, w0
    93e0:	add	x0, x19, #0x10
    93e4:	bl	12a84 <PyInit__decimal@@Base+0x1afc>
    93e8:	cbnz	w0, 9414 <PyFloat_FromString@plt+0x28e4>
    93ec:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    93f0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    93f4:	add	x1, x1, #0xbc5
    93f8:	ldr	x0, [x0, #3920]
    93fc:	ldr	x0, [x0]
    9400:	bl	66e0 <PyErr_SetString@plt>
    9404:	mov	w0, #0xffffffff            	// #-1
    9408:	ldr	x19, [sp, #16]
    940c:	ldp	x29, x30, [sp], #32
    9410:	ret
    9414:	mov	w0, #0x0                   	// #0
    9418:	b	9408 <PyFloat_FromString@plt+0x28d8>
    941c:	stp	x29, x30, [sp, #-32]!
    9420:	mov	x29, sp
    9424:	stp	x19, x20, [sp, #16]
    9428:	mov	x20, x0
    942c:	mov	x0, x1
    9430:	bl	6790 <PyLong_AsSsize_t@plt>
    9434:	mov	x19, x0
    9438:	cmn	x0, #0x1
    943c:	b.eq	9460 <PyFloat_FromString@plt+0x2930>  // b.none
    9440:	mov	x1, x19
    9444:	add	x0, x20, #0x10
    9448:	bl	12a58 <PyInit__decimal@@Base+0x1ad0>
    944c:	cbz	w0, 9470 <PyFloat_FromString@plt+0x2940>
    9450:	mov	w0, #0x0                   	// #0
    9454:	ldp	x19, x20, [sp, #16]
    9458:	ldp	x29, x30, [sp], #32
    945c:	ret
    9460:	bl	6880 <PyErr_Occurred@plt>
    9464:	cbz	x0, 9440 <PyFloat_FromString@plt+0x2910>
    9468:	mov	w0, w19
    946c:	b	9454 <PyFloat_FromString@plt+0x2924>
    9470:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    9474:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    9478:	add	x1, x1, #0xbe8
    947c:	ldr	x0, [x0, #3928]
    9480:	ldr	x0, [x0]
    9484:	bl	66e0 <PyErr_SetString@plt>
    9488:	mov	w0, #0xffffffff            	// #-1
    948c:	b	9454 <PyFloat_FromString@plt+0x2924>
    9490:	stp	x29, x30, [sp, #-32]!
    9494:	mov	x29, sp
    9498:	stp	x19, x20, [sp, #16]
    949c:	mov	x20, x0
    94a0:	mov	x0, x1
    94a4:	bl	6790 <PyLong_AsSsize_t@plt>
    94a8:	mov	x19, x0
    94ac:	cmn	x0, #0x1
    94b0:	b.eq	94d4 <PyFloat_FromString@plt+0x29a4>  // b.none
    94b4:	mov	x1, x19
    94b8:	add	x0, x20, #0x10
    94bc:	bl	12a30 <PyInit__decimal@@Base+0x1aa8>
    94c0:	cbz	w0, 94e4 <PyFloat_FromString@plt+0x29b4>
    94c4:	mov	w0, #0x0                   	// #0
    94c8:	ldp	x19, x20, [sp, #16]
    94cc:	ldp	x29, x30, [sp], #32
    94d0:	ret
    94d4:	bl	6880 <PyErr_Occurred@plt>
    94d8:	cbz	x0, 94b4 <PyFloat_FromString@plt+0x2984>
    94dc:	mov	w0, w19
    94e0:	b	94c8 <PyFloat_FromString@plt+0x2998>
    94e4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    94e8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    94ec:	add	x1, x1, #0xc0e
    94f0:	ldr	x0, [x0, #3928]
    94f4:	ldr	x0, [x0]
    94f8:	bl	66e0 <PyErr_SetString@plt>
    94fc:	mov	w0, #0xffffffff            	// #-1
    9500:	b	94c8 <PyFloat_FromString@plt+0x2998>
    9504:	stp	x29, x30, [sp, #-32]!
    9508:	mov	x29, sp
    950c:	ldr	x2, [x1, #8]
    9510:	str	x19, [sp, #16]
    9514:	mov	x19, x0
    9518:	mov	x0, x1
    951c:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
    9520:	ldr	x1, [x1, #1816]
    9524:	cmp	x2, x1
    9528:	b.ne	955c <PyFloat_FromString@plt+0x2a2c>  // b.any
    952c:	ldr	x0, [x0, #16]
    9530:	ldr	w1, [x0]
    9534:	add	x0, x19, #0x10
    9538:	bl	12aa0 <PyInit__decimal@@Base+0x1b18>
    953c:	cbnz	w0, 957c <PyFloat_FromString@plt+0x2a4c>
    9540:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    9544:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    9548:	add	x1, x1, #0xc34
    954c:	ldr	x0, [x0, #3920]
    9550:	ldr	x0, [x0]
    9554:	bl	66e0 <PyErr_SetString@plt>
    9558:	b	956c <PyFloat_FromString@plt+0x2a3c>
    955c:	bl	7560 <PyFloat_FromString@plt+0xa30>
    9560:	mov	w1, w0
    9564:	tst	w0, #0x18000
    9568:	b.eq	9534 <PyFloat_FromString@plt+0x2a04>  // b.none
    956c:	mov	w0, #0xffffffff            	// #-1
    9570:	ldr	x19, [sp, #16]
    9574:	ldp	x29, x30, [sp], #32
    9578:	ret
    957c:	mov	w0, #0x0                   	// #0
    9580:	b	9570 <PyFloat_FromString@plt+0x2a40>
    9584:	stp	x29, x30, [sp, #-32]!
    9588:	mov	x29, sp
    958c:	ldr	x2, [x1, #8]
    9590:	str	x19, [sp, #16]
    9594:	mov	x19, x0
    9598:	mov	x0, x1
    959c:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
    95a0:	ldr	x1, [x1, #1816]
    95a4:	cmp	x2, x1
    95a8:	b.ne	95dc <PyFloat_FromString@plt+0x2aac>  // b.any
    95ac:	ldr	x0, [x0, #16]
    95b0:	ldr	w1, [x0]
    95b4:	add	x0, x19, #0x10
    95b8:	bl	12ac0 <PyInit__decimal@@Base+0x1b38>
    95bc:	cbnz	w0, 95fc <PyFloat_FromString@plt+0x2acc>
    95c0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    95c4:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    95c8:	add	x1, x1, #0xc5c
    95cc:	ldr	x0, [x0, #3920]
    95d0:	ldr	x0, [x0]
    95d4:	bl	66e0 <PyErr_SetString@plt>
    95d8:	b	95ec <PyFloat_FromString@plt+0x2abc>
    95dc:	bl	7560 <PyFloat_FromString@plt+0xa30>
    95e0:	mov	w1, w0
    95e4:	tst	w0, #0x18000
    95e8:	b.eq	95b4 <PyFloat_FromString@plt+0x2a84>  // b.none
    95ec:	mov	w0, #0xffffffff            	// #-1
    95f0:	ldr	x19, [sp, #16]
    95f4:	ldp	x29, x30, [sp], #32
    95f8:	ret
    95fc:	mov	w0, #0x0                   	// #0
    9600:	b	95f0 <PyFloat_FromString@plt+0x2ac0>
    9604:	stp	x29, x30, [sp, #-48]!
    9608:	mov	x29, sp
    960c:	stp	x19, x20, [sp, #16]
    9610:	str	x21, [sp, #32]
    9614:	cbz	x2, 96a4 <PyFloat_FromString@plt+0x2b74>
    9618:	mov	x21, x0
    961c:	mov	x19, x1
    9620:	ldr	x0, [x1, #8]
    9624:	mov	x20, x2
    9628:	ldr	x0, [x0, #168]
    962c:	tbz	w0, #28, 9688 <PyFloat_FromString@plt+0x2b58>
    9630:	adrp	x1, 25000 <PyInit__decimal@@Base+0x14078>
    9634:	mov	x0, x19
    9638:	add	x1, x1, #0x3a5
    963c:	bl	6930 <PyUnicode_CompareWithASCIIString@plt>
    9640:	cbnz	w0, 965c <PyFloat_FromString@plt+0x2b2c>
    9644:	mov	x1, x20
    9648:	mov	x0, x21
    964c:	ldp	x19, x20, [sp, #16]
    9650:	ldr	x21, [sp, #32]
    9654:	ldp	x29, x30, [sp], #48
    9658:	b	9504 <PyFloat_FromString@plt+0x29d4>
    965c:	adrp	x1, 25000 <PyInit__decimal@@Base+0x14078>
    9660:	mov	x0, x19
    9664:	add	x1, x1, #0x399
    9668:	bl	6930 <PyUnicode_CompareWithASCIIString@plt>
    966c:	cbnz	w0, 9688 <PyFloat_FromString@plt+0x2b58>
    9670:	mov	x1, x20
    9674:	mov	x0, x21
    9678:	ldp	x19, x20, [sp, #16]
    967c:	ldr	x21, [sp, #32]
    9680:	ldp	x29, x30, [sp], #48
    9684:	b	9584 <PyFloat_FromString@plt+0x2a54>
    9688:	mov	x2, x20
    968c:	mov	x1, x19
    9690:	mov	x0, x21
    9694:	ldp	x19, x20, [sp, #16]
    9698:	ldr	x21, [sp, #32]
    969c:	ldp	x29, x30, [sp], #48
    96a0:	b	6a50 <PyObject_GenericSetAttr@plt>
    96a4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    96a8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    96ac:	add	x1, x1, #0xc85
    96b0:	ldr	x0, [x0, #4048]
    96b4:	ldr	x0, [x0]
    96b8:	bl	66e0 <PyErr_SetString@plt>
    96bc:	mov	w0, #0xffffffff            	// #-1
    96c0:	ldp	x19, x20, [sp, #16]
    96c4:	ldr	x21, [sp, #32]
    96c8:	ldp	x29, x30, [sp], #48
    96cc:	ret
    96d0:	stp	x29, x30, [sp, #-64]!
    96d4:	mov	x29, sp
    96d8:	stp	x21, x22, [sp, #32]
    96dc:	ldp	w22, w2, [x0, #40]
    96e0:	stp	x19, x20, [sp, #16]
    96e4:	str	x23, [sp, #48]
    96e8:	orr	w2, w2, w1
    96ec:	str	w2, [x0, #44]
    96f0:	orr	w0, w22, #0x200
    96f4:	tst	w0, w1
    96f8:	b.eq	97f8 <PyFloat_FromString@plt+0x2cc8>  // b.none
    96fc:	tbz	w1, #9, 971c <PyFloat_FromString@plt+0x2bec>
    9700:	bl	6670 <PyErr_NoMemory@plt>
    9704:	mov	w0, #0x1                   	// #1
    9708:	ldp	x19, x20, [sp, #16]
    970c:	ldp	x21, x22, [sp, #32]
    9710:	ldr	x23, [sp, #48]
    9714:	ldp	x29, x30, [sp], #64
    9718:	ret
    971c:	adrp	x19, 43000 <PyInit__decimal@@Base+0x32078>
    9720:	and	w22, w22, w1
    9724:	add	x0, x19, #0x9b0
    9728:	ldr	x1, [x0]
    972c:	cbnz	x1, 974c <PyFloat_FromString@plt+0x2c1c>
    9730:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    9734:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    9738:	add	x1, x1, #0xcaa
    973c:	ldr	x0, [x0, #3920]
    9740:	ldr	x0, [x0]
    9744:	bl	66e0 <PyErr_SetString@plt>
    9748:	b	9704 <PyFloat_FromString@plt+0x2bd4>
    974c:	ldr	w1, [x0, #16]
    9750:	tst	w22, w1
    9754:	b.eq	97a0 <PyFloat_FromString@plt+0x2c70>  // b.none
    9758:	ldr	x23, [x0, #24]
    975c:	cbz	x23, 9704 <PyFloat_FromString@plt+0x2bd4>
    9760:	mov	x0, #0x0                   	// #0
    9764:	bl	6520 <PyList_New@plt>
    9768:	mov	x20, x0
    976c:	cbz	x0, 9704 <PyFloat_FromString@plt+0x2bd4>
    9770:	add	x21, x19, #0x9b0
    9774:	add	x21, x21, #0x190
    9778:	ldr	x0, [x21]
    977c:	cbnz	x0, 97a8 <PyFloat_FromString@plt+0x2c78>
    9780:	add	x19, x19, #0x9b0
    9784:	ldr	x0, [x19, #32]
    9788:	add	x19, x19, #0x20
    978c:	cbnz	x0, 97d8 <PyFloat_FromString@plt+0x2ca8>
    9790:	mov	x1, x20
    9794:	mov	x0, x23
    9798:	bl	6680 <PyErr_SetObject@plt>
    979c:	b	97cc <PyFloat_FromString@plt+0x2c9c>
    97a0:	add	x0, x0, #0x20
    97a4:	b	9728 <PyFloat_FromString@plt+0x2bf8>
    97a8:	ldr	w0, [x21, #16]
    97ac:	tst	w22, w0
    97b0:	b.ne	97bc <PyFloat_FromString@plt+0x2c8c>  // b.any
    97b4:	add	x21, x21, #0x20
    97b8:	b	9778 <PyFloat_FromString@plt+0x2c48>
    97bc:	ldr	x1, [x21, #24]
    97c0:	mov	x0, x20
    97c4:	bl	6810 <PyList_Append@plt>
    97c8:	tbz	w0, #31, 97b4 <PyFloat_FromString@plt+0x2c84>
    97cc:	mov	x0, x20
    97d0:	bl	790c <PyFloat_FromString@plt+0xddc>
    97d4:	b	9704 <PyFloat_FromString@plt+0x2bd4>
    97d8:	ldr	w0, [x19, #16]
    97dc:	tst	w22, w0
    97e0:	b.eq	9784 <PyFloat_FromString@plt+0x2c54>  // b.none
    97e4:	ldr	x1, [x19, #24]
    97e8:	mov	x0, x20
    97ec:	bl	6810 <PyList_Append@plt>
    97f0:	tbz	w0, #31, 9784 <PyFloat_FromString@plt+0x2c54>
    97f4:	b	97cc <PyFloat_FromString@plt+0x2c9c>
    97f8:	mov	w0, #0x0                   	// #0
    97fc:	b	9708 <PyFloat_FromString@plt+0x2bd8>
    9800:	stp	x29, x30, [sp, #-128]!
    9804:	mov	x29, sp
    9808:	stp	x19, x20, [sp, #16]
    980c:	add	x20, x0, #0x18
    9810:	mov	x19, x1
    9814:	mov	x0, x20
    9818:	stp	x21, x22, [sp, #32]
    981c:	mov	w22, w2
    9820:	stp	x23, x24, [sp, #48]
    9824:	str	wzr, [sp, #68]
    9828:	bl	179d8 <PyInit__decimal@@Base+0x6a50>
    982c:	cbz	w0, 9884 <PyFloat_FromString@plt+0x2d54>
    9830:	mov	x0, x20
    9834:	bl	1798c <PyInit__decimal@@Base+0x6a04>
    9838:	cbz	w0, 9870 <PyFloat_FromString@plt+0x2d40>
    983c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    9840:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    9844:	add	x1, x1, #0xccf
    9848:	ldr	x0, [x0, #3928]
    984c:	ldr	x0, [x0]
    9850:	bl	66e0 <PyErr_SetString@plt>
    9854:	mov	x20, #0x0                   	// #0
    9858:	mov	x0, x20
    985c:	ldp	x19, x20, [sp, #16]
    9860:	ldp	x21, x22, [sp, #32]
    9864:	ldp	x23, x24, [sp, #48]
    9868:	ldp	x29, x30, [sp], #128
    986c:	ret
    9870:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    9874:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    9878:	add	x1, x1, #0xced
    987c:	ldr	x0, [x0, #3992]
    9880:	b	984c <PyFloat_FromString@plt+0x2d1c>
    9884:	bl	15e0c <PyInit__decimal@@Base+0x4e84>
    9888:	mov	x21, x0
    988c:	cbnz	x0, 9898 <PyFloat_FromString@plt+0x2d68>
    9890:	bl	6670 <PyErr_NoMemory@plt>
    9894:	b	9854 <PyFloat_FromString@plt+0x2d24>
    9898:	ldp	x2, x3, [x19, #16]
    989c:	stp	x2, x3, [sp, #80]
    98a0:	mov	x1, x20
    98a4:	ldp	x2, x3, [x19, #32]
    98a8:	stp	x2, x3, [sp, #96]
    98ac:	ldp	x2, x3, [x19, #48]
    98b0:	stp	x2, x3, [sp, #112]
    98b4:	str	w22, [sp, #116]
    98b8:	add	x22, sp, #0x44
    98bc:	add	x2, sp, #0x50
    98c0:	mov	x3, x22
    98c4:	bl	1df4c <PyInit__decimal@@Base+0xcfc4>
    98c8:	ldr	w1, [sp, #68]
    98cc:	mov	x0, x19
    98d0:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    98d4:	cbz	w0, 98e4 <PyFloat_FromString@plt+0x2db4>
    98d8:	mov	x0, x21
    98dc:	bl	17b68 <PyInit__decimal@@Base+0x6be0>
    98e0:	b	9854 <PyFloat_FromString@plt+0x2d24>
    98e4:	mov	x4, x22
    98e8:	mov	x3, x21
    98ec:	add	x0, sp, #0x48
    98f0:	mov	w2, #0x40000000            	// #1073741824
    98f4:	mov	x1, #0x0                   	// #0
    98f8:	str	wzr, [sp, #68]
    98fc:	str	xzr, [sp, #72]
    9900:	bl	22b70 <PyInit__decimal@@Base+0x11be8>
    9904:	mov	x19, x0
    9908:	cmn	x0, #0x1
    990c:	b.ne	9918 <PyFloat_FromString@plt+0x2de8>  // b.any
    9910:	bl	6670 <PyErr_NoMemory@plt>
    9914:	b	98d8 <PyFloat_FromString@plt+0x2da8>
    9918:	bl	6630 <_PyLong_New@plt>
    991c:	adrp	x24, 45000 <PyInit__decimal@@Base+0x34078>
    9920:	mov	x20, x0
    9924:	cbnz	x0, 9940 <PyFloat_FromString@plt+0x2e10>
    9928:	ldr	x1, [x24, #1720]
    992c:	ldr	x0, [sp, #72]
    9930:	blr	x1
    9934:	mov	x0, x21
    9938:	bl	17b68 <PyInit__decimal@@Base+0x6be0>
    993c:	b	9858 <PyFloat_FromString@plt+0x2d28>
    9940:	ldr	x23, [sp, #72]
    9944:	add	x22, x0, #0x18
    9948:	lsl	x2, x19, #2
    994c:	mov	x0, x22
    9950:	mov	x1, x23
    9954:	bl	64f0 <memcpy@plt>
    9958:	ldr	x1, [x24, #1720]
    995c:	mov	x0, x23
    9960:	blr	x1
    9964:	cmp	x19, #0x0
    9968:	b.le	9978 <PyFloat_FromString@plt+0x2e48>
    996c:	sub	x0, x19, #0x1
    9970:	ldr	w1, [x22, x0, lsl #2]
    9974:	cbz	w1, 99a0 <PyFloat_FromString@plt+0x2e70>
    9978:	str	x19, [x20, #16]
    997c:	mov	x0, x21
    9980:	bl	17998 <PyInit__decimal@@Base+0x6a10>
    9984:	cbz	w0, 9934 <PyFloat_FromString@plt+0x2e04>
    9988:	mov	x0, x21
    998c:	bl	179e4 <PyInit__decimal@@Base+0x6a5c>
    9990:	cbnz	w0, 9934 <PyFloat_FromString@plt+0x2e04>
    9994:	neg	x19, x19
    9998:	str	x19, [x20, #16]
    999c:	b	9934 <PyFloat_FromString@plt+0x2e04>
    99a0:	mov	x19, x0
    99a4:	b	9964 <PyFloat_FromString@plt+0x2e34>
    99a8:	stp	x29, x30, [sp, #-32]!
    99ac:	mov	x29, sp
    99b0:	stp	x19, x20, [sp, #16]
    99b4:	mov	x20, x0
    99b8:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    99bc:	cbz	x0, 99e0 <PyFloat_FromString@plt+0x2eb0>
    99c0:	mov	x19, x0
    99c4:	bl	790c <PyFloat_FromString@plt+0xddc>
    99c8:	mov	x1, x19
    99cc:	mov	x0, x20
    99d0:	ldp	x19, x20, [sp, #16]
    99d4:	mov	w2, #0x1                   	// #1
    99d8:	ldp	x29, x30, [sp], #32
    99dc:	b	9800 <PyFloat_FromString@plt+0x2cd0>
    99e0:	ldp	x19, x20, [sp, #16]
    99e4:	ldp	x29, x30, [sp], #32
    99e8:	ret
    99ec:	stp	x29, x30, [sp, #-32]!
    99f0:	mov	x29, sp
    99f4:	stp	x19, x20, [sp, #16]
    99f8:	mov	x20, x0
    99fc:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    9a00:	cbz	x0, 9a24 <PyFloat_FromString@plt+0x2ef4>
    9a04:	mov	x19, x0
    9a08:	bl	790c <PyFloat_FromString@plt+0xddc>
    9a0c:	mov	x1, x19
    9a10:	mov	x0, x20
    9a14:	ldp	x19, x20, [sp, #16]
    9a18:	mov	w2, #0x3                   	// #3
    9a1c:	ldp	x29, x30, [sp], #32
    9a20:	b	9800 <PyFloat_FromString@plt+0x2cd0>
    9a24:	ldp	x19, x20, [sp, #16]
    9a28:	ldp	x29, x30, [sp], #32
    9a2c:	ret
    9a30:	stp	x29, x30, [sp, #-32]!
    9a34:	mov	x29, sp
    9a38:	stp	x19, x20, [sp, #16]
    9a3c:	mov	x20, x0
    9a40:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    9a44:	cbz	x0, 9a68 <PyFloat_FromString@plt+0x2f38>
    9a48:	mov	x19, x0
    9a4c:	bl	790c <PyFloat_FromString@plt+0xddc>
    9a50:	mov	x1, x19
    9a54:	mov	x0, x20
    9a58:	ldp	x19, x20, [sp, #16]
    9a5c:	mov	w2, #0x2                   	// #2
    9a60:	ldp	x29, x30, [sp], #32
    9a64:	b	9800 <PyFloat_FromString@plt+0x2cd0>
    9a68:	ldp	x19, x20, [sp, #16]
    9a6c:	ldp	x29, x30, [sp], #32
    9a70:	ret
    9a74:	stp	x29, x30, [sp, #-80]!
    9a78:	mov	x29, sp
    9a7c:	stp	x19, x20, [sp, #16]
    9a80:	add	x20, x0, #0x18
    9a84:	mov	x0, x20
    9a88:	stp	x21, x22, [sp, #32]
    9a8c:	stp	x23, x24, [sp, #48]
    9a90:	str	wzr, [sp, #76]
    9a94:	bl	179d8 <PyInit__decimal@@Base+0x6a50>
    9a98:	cbz	w0, 9af0 <PyFloat_FromString@plt+0x2fc0>
    9a9c:	mov	x0, x20
    9aa0:	bl	1798c <PyInit__decimal@@Base+0x6a04>
    9aa4:	cbz	w0, 9adc <PyFloat_FromString@plt+0x2fac>
    9aa8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    9aac:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    9ab0:	add	x1, x1, #0xd10
    9ab4:	ldr	x0, [x0, #3928]
    9ab8:	ldr	x0, [x0]
    9abc:	bl	66e0 <PyErr_SetString@plt>
    9ac0:	mov	x19, #0x0                   	// #0
    9ac4:	mov	x0, x19
    9ac8:	ldp	x19, x20, [sp, #16]
    9acc:	ldp	x21, x22, [sp, #32]
    9ad0:	ldp	x23, x24, [sp, #48]
    9ad4:	ldp	x29, x30, [sp], #80
    9ad8:	ret
    9adc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    9ae0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    9ae4:	add	x1, x1, #0xd34
    9ae8:	ldr	x0, [x0, #3992]
    9aec:	b	9ab8 <PyFloat_FromString@plt+0x2f88>
    9af0:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    9af4:	mov	x21, x0
    9af8:	cbz	x0, 9ac0 <PyFloat_FromString@plt+0x2f90>
    9afc:	bl	790c <PyFloat_FromString@plt+0xddc>
    9b00:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    9b04:	add	x0, x0, #0x330
    9b08:	add	x0, x0, #0x1a0
    9b0c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    9b10:	mov	x19, x0
    9b14:	cbz	x0, 9ac0 <PyFloat_FromString@plt+0x2f90>
    9b18:	add	x22, x0, #0x18
    9b1c:	add	x2, sp, #0x4c
    9b20:	mov	x1, x20
    9b24:	mov	x0, x22
    9b28:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
    9b2c:	cbnz	w0, 9b40 <PyFloat_FromString@plt+0x3010>
    9b30:	mov	x0, x19
    9b34:	bl	790c <PyFloat_FromString@plt+0xddc>
    9b38:	bl	6670 <PyErr_NoMemory@plt>
    9b3c:	b	9ac0 <PyFloat_FromString@plt+0x2f90>
    9b40:	mov	x0, x22
    9b44:	bl	179e4 <PyInit__decimal@@Base+0x6a5c>
    9b48:	cbnz	w0, 9c0c <PyFloat_FromString@plt+0x30dc>
    9b4c:	ldr	x23, [x19, #32]
    9b50:	mov	x1, x21
    9b54:	str	xzr, [x19, #32]
    9b58:	mov	w2, #0x3                   	// #3
    9b5c:	mov	x0, x19
    9b60:	bl	9800 <PyFloat_FromString@plt+0x2cd0>
    9b64:	mov	x22, x0
    9b68:	mov	x0, x19
    9b6c:	bl	790c <PyFloat_FromString@plt+0xddc>
    9b70:	cbz	x22, 9cac <PyFloat_FromString@plt+0x317c>
    9b74:	cmp	x23, #0x0
    9b78:	cneg	x0, x23, lt  // lt = tstop
    9b7c:	bl	6740 <PyLong_FromSsize_t@plt>
    9b80:	mov	x20, x0
    9b84:	cbz	x0, 9cec <PyFloat_FromString@plt+0x31bc>
    9b88:	mov	x0, #0xa                   	// #10
    9b8c:	bl	6780 <PyLong_FromLong@plt>
    9b90:	mov	x19, x0
    9b94:	cbz	x0, 9cbc <PyFloat_FromString@plt+0x318c>
    9b98:	adrp	x24, 45000 <PyInit__decimal@@Base+0x34078>
    9b9c:	add	x24, x24, #0x6d0
    9ba0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x31078>
    9ba4:	mov	x1, x20
    9ba8:	ldr	x2, [x2, #4008]
    9bac:	ldr	x3, [x24, #120]
    9bb0:	blr	x3
    9bb4:	mov	x21, x0
    9bb8:	mov	x0, x20
    9bbc:	bl	790c <PyFloat_FromString@plt+0xddc>
    9bc0:	mov	x0, x19
    9bc4:	bl	790c <PyFloat_FromString@plt+0xddc>
    9bc8:	cbz	x21, 9cc4 <PyFloat_FromString@plt+0x3194>
    9bcc:	tbnz	x23, #63, 9c14 <PyFloat_FromString@plt+0x30e4>
    9bd0:	ldr	x2, [x24, #128]
    9bd4:	mov	x1, x21
    9bd8:	mov	x0, x22
    9bdc:	blr	x2
    9be0:	mov	x19, x0
    9be4:	mov	x0, x22
    9be8:	bl	790c <PyFloat_FromString@plt+0xddc>
    9bec:	cbz	x19, 9ccc <PyFloat_FromString@plt+0x319c>
    9bf0:	mov	x0, #0x1                   	// #1
    9bf4:	bl	6780 <PyLong_FromLong@plt>
    9bf8:	mov	x20, x0
    9bfc:	cbnz	x0, 9c78 <PyFloat_FromString@plt+0x3148>
    9c00:	mov	x22, x19
    9c04:	mov	x19, #0x0                   	// #0
    9c08:	b	9c90 <PyFloat_FromString@plt+0x3160>
    9c0c:	mov	x23, #0x0                   	// #0
    9c10:	b	9b50 <PyFloat_FromString@plt+0x3020>
    9c14:	mov	x1, x21
    9c18:	mov	x0, x22
    9c1c:	bl	67a0 <_PyLong_GCD@plt>
    9c20:	mov	x23, x0
    9c24:	cbz	x0, 9cd8 <PyFloat_FromString@plt+0x31a8>
    9c28:	ldr	x2, [x24, #136]
    9c2c:	mov	x1, x0
    9c30:	mov	x0, x22
    9c34:	blr	x2
    9c38:	mov	x19, x0
    9c3c:	mov	x0, x22
    9c40:	bl	790c <PyFloat_FromString@plt+0xddc>
    9c44:	ldr	x2, [x24, #136]
    9c48:	mov	x1, x23
    9c4c:	mov	x0, x21
    9c50:	blr	x2
    9c54:	mov	x20, x0
    9c58:	mov	x0, x21
    9c5c:	bl	790c <PyFloat_FromString@plt+0xddc>
    9c60:	mov	x0, x23
    9c64:	bl	790c <PyFloat_FromString@plt+0xddc>
    9c68:	cmp	x19, #0x0
    9c6c:	ccmp	x20, #0x0, #0x4, ne  // ne = any
    9c70:	b.eq	9ce8 <PyFloat_FromString@plt+0x31b8>  // b.none
    9c74:	mov	x21, #0x0                   	// #0
    9c78:	mov	x1, x19
    9c7c:	mov	x2, x20
    9c80:	mov	x22, x19
    9c84:	mov	x0, #0x2                   	// #2
    9c88:	bl	6b00 <PyTuple_Pack@plt>
    9c8c:	mov	x19, x0
    9c90:	mov	x0, x21
    9c94:	bl	7cc4 <PyFloat_FromString@plt+0x1194>
    9c98:	mov	x0, x20
    9c9c:	bl	7cc4 <PyFloat_FromString@plt+0x1194>
    9ca0:	mov	x0, x22
    9ca4:	bl	7cc4 <PyFloat_FromString@plt+0x1194>
    9ca8:	b	9ac4 <PyFloat_FromString@plt+0x2f94>
    9cac:	mov	x19, #0x0                   	// #0
    9cb0:	mov	x21, #0x0                   	// #0
    9cb4:	mov	x20, #0x0                   	// #0
    9cb8:	b	9c90 <PyFloat_FromString@plt+0x3160>
    9cbc:	mov	x21, x20
    9cc0:	b	9cb4 <PyFloat_FromString@plt+0x3184>
    9cc4:	mov	x19, #0x0                   	// #0
    9cc8:	b	9cb4 <PyFloat_FromString@plt+0x3184>
    9ccc:	mov	x20, #0x0                   	// #0
    9cd0:	mov	x22, #0x0                   	// #0
    9cd4:	b	9c90 <PyFloat_FromString@plt+0x3160>
    9cd8:	mov	x20, x21
    9cdc:	mov	x19, #0x0                   	// #0
    9ce0:	mov	x21, #0x0                   	// #0
    9ce4:	b	9c90 <PyFloat_FromString@plt+0x3160>
    9ce8:	mov	x22, x19
    9cec:	mov	x19, #0x0                   	// #0
    9cf0:	b	9ce0 <PyFloat_FromString@plt+0x31b0>
    9cf4:	stp	x29, x30, [sp, #-32]!
    9cf8:	mov	x29, sp
    9cfc:	stp	x19, x20, [sp, #16]
    9d00:	mov	x20, x0
    9d04:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    9d08:	cbz	x0, 9d2c <PyFloat_FromString@plt+0x31fc>
    9d0c:	mov	x19, x0
    9d10:	bl	790c <PyFloat_FromString@plt+0xddc>
    9d14:	mov	x1, x19
    9d18:	mov	x0, x20
    9d1c:	ldp	x19, x20, [sp, #16]
    9d20:	mov	w2, #0x1                   	// #1
    9d24:	ldp	x29, x30, [sp], #32
    9d28:	b	9800 <PyFloat_FromString@plt+0x2cd0>
    9d2c:	ldp	x19, x20, [sp, #16]
    9d30:	ldp	x29, x30, [sp], #32
    9d34:	ret
    9d38:	stp	x29, x30, [sp, #-80]!
    9d3c:	mov	x29, sp
    9d40:	stp	x21, x22, [sp, #32]
    9d44:	mov	x21, x0
    9d48:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    9d4c:	add	x0, x0, #0x330
    9d50:	stp	x19, x20, [sp, #16]
    9d54:	add	x0, x0, #0x1a0
    9d58:	mov	x20, x1
    9d5c:	str	x23, [sp, #48]
    9d60:	str	wzr, [sp, #76]
    9d64:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    9d68:	mov	x19, x0
    9d6c:	cbz	x0, 9dc8 <PyFloat_FromString@plt+0x3298>
    9d70:	add	x22, x0, #0x18
    9d74:	add	x23, sp, #0x4c
    9d78:	add	x1, x21, #0x18
    9d7c:	mov	x2, x23
    9d80:	mov	x0, x22
    9d84:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
    9d88:	ldr	w1, [sp, #76]
    9d8c:	mov	x0, x20
    9d90:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    9d94:	cbz	w0, 9da8 <PyFloat_FromString@plt+0x3278>
    9d98:	mov	x0, x19
    9d9c:	mov	x19, #0x0                   	// #0
    9da0:	bl	790c <PyFloat_FromString@plt+0xddc>
    9da4:	b	9dc8 <PyFloat_FromString@plt+0x3298>
    9da8:	add	x1, x20, #0x10
    9dac:	mov	x0, x22
    9db0:	mov	x2, x23
    9db4:	bl	19f98 <PyInit__decimal@@Base+0x9010>
    9db8:	ldr	w1, [sp, #76]
    9dbc:	mov	x0, x20
    9dc0:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    9dc4:	cbnz	w0, 9d98 <PyFloat_FromString@plt+0x3268>
    9dc8:	mov	x0, x19
    9dcc:	ldp	x19, x20, [sp, #16]
    9dd0:	ldp	x21, x22, [sp, #32]
    9dd4:	ldr	x23, [sp, #48]
    9dd8:	ldp	x29, x30, [sp], #80
    9ddc:	ret
    9de0:	stp	x29, x30, [sp, #-128]!
    9de4:	mov	x29, sp
    9de8:	stp	x19, x20, [sp, #16]
    9dec:	mov	x20, x2
    9df0:	stp	x21, x22, [sp, #32]
    9df4:	mov	x21, x1
    9df8:	stp	x23, x24, [sp, #48]
    9dfc:	str	wzr, [sp, #76]
    9e00:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    9e04:	mov	x19, x0
    9e08:	cbz	x0, 9e7c <PyFloat_FromString@plt+0x334c>
    9e0c:	add	x24, sp, #0x50
    9e10:	add	x22, x19, #0x18
    9e14:	mov	x0, x24
    9e18:	add	x23, sp, #0x4c
    9e1c:	bl	12880 <PyInit__decimal@@Base+0x18f8>
    9e20:	mov	x1, x21
    9e24:	mov	x0, x22
    9e28:	mov	x3, x23
    9e2c:	mov	x2, x24
    9e30:	bl	14978 <PyInit__decimal@@Base+0x39f0>
    9e34:	ldr	w1, [sp, #76]
    9e38:	mov	w0, #0x1041                	// #4161
    9e3c:	tst	w1, w0
    9e40:	b.eq	9e54 <PyFloat_FromString@plt+0x3324>  // b.none
    9e44:	mov	x2, x23
    9e48:	mov	x0, x22
    9e4c:	mov	w1, #0x100                 	// #256
    9e50:	bl	18904 <PyInit__decimal@@Base+0x797c>
    9e54:	ldr	w1, [sp, #76]
    9e58:	mov	w0, #0x3be                 	// #958
    9e5c:	and	w1, w1, w0
    9e60:	mov	x0, x20
    9e64:	str	w1, [sp, #76]
    9e68:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    9e6c:	cbz	w0, 9e7c <PyFloat_FromString@plt+0x334c>
    9e70:	mov	x0, x19
    9e74:	mov	x19, #0x0                   	// #0
    9e78:	bl	790c <PyFloat_FromString@plt+0xddc>
    9e7c:	mov	x0, x19
    9e80:	ldp	x19, x20, [sp, #16]
    9e84:	ldp	x21, x22, [sp, #32]
    9e88:	ldp	x23, x24, [sp, #48]
    9e8c:	ldp	x29, x30, [sp], #128
    9e90:	ret
    9e94:	stp	x29, x30, [sp, #-128]!
    9e98:	mov	x29, sp
    9e9c:	stp	x19, x20, [sp, #16]
    9ea0:	mov	x19, x1
    9ea4:	stp	x21, x22, [sp, #32]
    9ea8:	mov	x22, x0
    9eac:	str	wzr, [sp, #60]
    9eb0:	str	xzr, [sp, #64]
    9eb4:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    9eb8:	cbnz	x0, 9ed4 <PyFloat_FromString@plt+0x33a4>
    9ebc:	mov	x19, #0x0                   	// #0
    9ec0:	mov	x0, x19
    9ec4:	ldp	x19, x20, [sp, #16]
    9ec8:	ldp	x21, x22, [sp, #32]
    9ecc:	ldp	x29, x30, [sp], #128
    9ed0:	ret
    9ed4:	mov	x21, x0
    9ed8:	bl	790c <PyFloat_FromString@plt+0xddc>
    9edc:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    9ee0:	add	x2, sp, #0x40
    9ee4:	add	x1, x1, #0xdca
    9ee8:	mov	x0, x19
    9eec:	bl	6980 <PyArg_ParseTuple@plt>
    9ef0:	cbz	w0, 9ebc <PyFloat_FromString@plt+0x338c>
    9ef4:	ldr	x0, [sp, #64]
    9ef8:	cbz	x0, 9fc0 <PyFloat_FromString@plt+0x3490>
    9efc:	mov	x1, #0x1                   	// #1
    9f00:	str	x1, [sp, #72]
    9f04:	stp	xzr, x1, [sp, #88]
    9f08:	mov	w2, #0xffffff90            	// #-112
    9f0c:	stp	x1, x1, [sp, #104]
    9f10:	add	x1, sp, #0x48
    9f14:	str	x1, [sp, #120]
    9f18:	ldr	x1, [x0, #8]
    9f1c:	strb	w2, [sp, #80]
    9f20:	ldr	x1, [x1, #168]
    9f24:	tbnz	w1, #24, 9f44 <PyFloat_FromString@plt+0x3414>
    9f28:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    9f2c:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    9f30:	add	x1, x1, #0xd5d
    9f34:	ldr	x0, [x0, #3936]
    9f38:	ldr	x0, [x0]
    9f3c:	bl	66e0 <PyErr_SetString@plt>
    9f40:	b	9ebc <PyFloat_FromString@plt+0x338c>
    9f44:	bl	6790 <PyLong_AsSsize_t@plt>
    9f48:	mov	x20, x0
    9f4c:	cmn	x0, #0x1
    9f50:	b.eq	9fb4 <PyFloat_FromString@plt+0x3484>  // b.none
    9f54:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    9f58:	add	x0, x0, #0x330
    9f5c:	add	x0, x0, #0x1a0
    9f60:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    9f64:	mov	x19, x0
    9f68:	cbz	x0, 9ebc <PyFloat_FromString@plt+0x338c>
    9f6c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    9f70:	cmp	x20, x0
    9f74:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    9f78:	add	x1, x22, #0x18
    9f7c:	csneg	x20, x0, x20, eq  // eq = none
    9f80:	add	x4, sp, #0x3c
    9f84:	add	x0, x19, #0x18
    9f88:	add	x3, x21, #0x10
    9f8c:	add	x2, sp, #0x50
    9f90:	str	x20, [sp, #88]
    9f94:	bl	1db3c <PyInit__decimal@@Base+0xcbb4>
    9f98:	ldr	w1, [sp, #60]
    9f9c:	mov	x0, x21
    9fa0:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    9fa4:	cbz	w0, 9ec0 <PyFloat_FromString@plt+0x3390>
    9fa8:	mov	x0, x19
    9fac:	bl	790c <PyFloat_FromString@plt+0xddc>
    9fb0:	b	9ebc <PyFloat_FromString@plt+0x338c>
    9fb4:	bl	6880 <PyErr_Occurred@plt>
    9fb8:	cbnz	x0, 9ebc <PyFloat_FromString@plt+0x338c>
    9fbc:	b	9f54 <PyFloat_FromString@plt+0x3424>
    9fc0:	mov	x1, x21
    9fc4:	mov	x0, x22
    9fc8:	mov	w2, #0x6                   	// #6
    9fcc:	bl	9800 <PyFloat_FromString@plt+0x2cd0>
    9fd0:	mov	x19, x0
    9fd4:	b	9ec0 <PyFloat_FromString@plt+0x3390>
    9fd8:	stp	x29, x30, [sp, #-48]!
    9fdc:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    9fe0:	add	x3, x3, #0x9b0
    9fe4:	mov	x29, sp
    9fe8:	stp	x19, x20, [sp, #16]
    9fec:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    9ff0:	mov	x20, x0
    9ff4:	ldr	x19, [x19, #4008]
    9ff8:	mov	x0, x1
    9ffc:	add	x4, sp, #0x28
    a000:	mov	x1, x2
    a004:	add	x3, x3, #0x250
    a008:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    a00c:	add	x2, x2, #0xdca
    a010:	str	wzr, [sp, #36]
    a014:	str	x19, [sp, #40]
    a018:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    a01c:	cbnz	w0, a034 <PyFloat_FromString@plt+0x3504>
    a020:	mov	x19, #0x0                   	// #0
    a024:	mov	x0, x19
    a028:	ldp	x19, x20, [sp, #16]
    a02c:	ldp	x29, x30, [sp], #48
    a030:	ret
    a034:	ldr	x0, [sp, #40]
    a038:	cmp	x0, x19
    a03c:	b.ne	a09c <PyFloat_FromString@plt+0x356c>  // b.any
    a040:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    a044:	str	x0, [sp, #40]
    a048:	cbz	x0, a020 <PyFloat_FromString@plt+0x34f0>
    a04c:	bl	790c <PyFloat_FromString@plt+0xddc>
    a050:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    a054:	add	x0, x0, #0x330
    a058:	add	x0, x0, #0x1a0
    a05c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    a060:	mov	x19, x0
    a064:	cbz	x0, a020 <PyFloat_FromString@plt+0x34f0>
    a068:	ldr	x2, [sp, #40]
    a06c:	add	x1, x20, #0x18
    a070:	add	x0, x0, #0x18
    a074:	add	x3, sp, #0x24
    a078:	add	x2, x2, #0x10
    a07c:	bl	1ab68 <PyInit__decimal@@Base+0x9be0>
    a080:	ldr	w1, [sp, #36]
    a084:	ldr	x0, [sp, #40]
    a088:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    a08c:	cbz	w0, a024 <PyFloat_FromString@plt+0x34f4>
    a090:	mov	x0, x19
    a094:	bl	790c <PyFloat_FromString@plt+0xddc>
    a098:	b	a020 <PyFloat_FromString@plt+0x34f0>
    a09c:	ldr	x0, [x0, #8]
    a0a0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    a0a4:	add	x1, x1, #0x330
    a0a8:	cmp	x0, x1
    a0ac:	b.eq	a050 <PyFloat_FromString@plt+0x3520>  // b.none
    a0b0:	bl	6a60 <PyType_IsSubtype@plt>
    a0b4:	cbnz	w0, a050 <PyFloat_FromString@plt+0x3520>
    a0b8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    a0bc:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    a0c0:	add	x1, x1, #0x889
    a0c4:	ldr	x0, [x0, #3936]
    a0c8:	ldr	x0, [x0]
    a0cc:	bl	66e0 <PyErr_SetString@plt>
    a0d0:	b	a020 <PyFloat_FromString@plt+0x34f0>
    a0d4:	stp	x29, x30, [sp, #-48]!
    a0d8:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    a0dc:	add	x3, x3, #0x9b0
    a0e0:	mov	x29, sp
    a0e4:	stp	x19, x20, [sp, #16]
    a0e8:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    a0ec:	mov	x20, x0
    a0f0:	ldr	x19, [x19, #4008]
    a0f4:	mov	x0, x1
    a0f8:	add	x4, sp, #0x28
    a0fc:	mov	x1, x2
    a100:	add	x3, x3, #0x260
    a104:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    a108:	add	x2, x2, #0xdca
    a10c:	str	wzr, [sp, #36]
    a110:	str	x19, [sp, #40]
    a114:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    a118:	cbnz	w0, a130 <PyFloat_FromString@plt+0x3600>
    a11c:	mov	x19, #0x0                   	// #0
    a120:	mov	x0, x19
    a124:	ldp	x19, x20, [sp, #16]
    a128:	ldp	x29, x30, [sp], #48
    a12c:	ret
    a130:	ldr	x0, [sp, #40]
    a134:	cmp	x0, x19
    a138:	b.ne	a198 <PyFloat_FromString@plt+0x3668>  // b.any
    a13c:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    a140:	str	x0, [sp, #40]
    a144:	cbz	x0, a11c <PyFloat_FromString@plt+0x35ec>
    a148:	bl	790c <PyFloat_FromString@plt+0xddc>
    a14c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    a150:	add	x0, x0, #0x330
    a154:	add	x0, x0, #0x1a0
    a158:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    a15c:	mov	x19, x0
    a160:	cbz	x0, a11c <PyFloat_FromString@plt+0x35ec>
    a164:	ldr	x2, [sp, #40]
    a168:	add	x1, x20, #0x18
    a16c:	add	x0, x0, #0x18
    a170:	add	x3, sp, #0x24
    a174:	add	x2, x2, #0x10
    a178:	bl	1ad50 <PyInit__decimal@@Base+0x9dc8>
    a17c:	ldr	w1, [sp, #36]
    a180:	ldr	x0, [sp, #40]
    a184:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    a188:	cbz	w0, a120 <PyFloat_FromString@plt+0x35f0>
    a18c:	mov	x0, x19
    a190:	bl	790c <PyFloat_FromString@plt+0xddc>
    a194:	b	a11c <PyFloat_FromString@plt+0x35ec>
    a198:	ldr	x0, [x0, #8]
    a19c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    a1a0:	add	x1, x1, #0x330
    a1a4:	cmp	x0, x1
    a1a8:	b.eq	a14c <PyFloat_FromString@plt+0x361c>  // b.none
    a1ac:	bl	6a60 <PyType_IsSubtype@plt>
    a1b0:	cbnz	w0, a14c <PyFloat_FromString@plt+0x361c>
    a1b4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    a1b8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    a1bc:	add	x1, x1, #0x889
    a1c0:	ldr	x0, [x0, #3936]
    a1c4:	ldr	x0, [x0]
    a1c8:	bl	66e0 <PyErr_SetString@plt>
    a1cc:	b	a11c <PyFloat_FromString@plt+0x35ec>
    a1d0:	stp	x29, x30, [sp, #-48]!
    a1d4:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    a1d8:	add	x3, x3, #0x9b0
    a1dc:	mov	x29, sp
    a1e0:	stp	x19, x20, [sp, #16]
    a1e4:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    a1e8:	mov	x20, x0
    a1ec:	ldr	x19, [x19, #4008]
    a1f0:	mov	x0, x1
    a1f4:	add	x4, sp, #0x28
    a1f8:	mov	x1, x2
    a1fc:	add	x3, x3, #0x270
    a200:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    a204:	add	x2, x2, #0xdca
    a208:	str	wzr, [sp, #36]
    a20c:	str	x19, [sp, #40]
    a210:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    a214:	cbnz	w0, a22c <PyFloat_FromString@plt+0x36fc>
    a218:	mov	x19, #0x0                   	// #0
    a21c:	mov	x0, x19
    a220:	ldp	x19, x20, [sp, #16]
    a224:	ldp	x29, x30, [sp], #48
    a228:	ret
    a22c:	ldr	x0, [sp, #40]
    a230:	cmp	x0, x19
    a234:	b.ne	a294 <PyFloat_FromString@plt+0x3764>  // b.any
    a238:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    a23c:	str	x0, [sp, #40]
    a240:	cbz	x0, a218 <PyFloat_FromString@plt+0x36e8>
    a244:	bl	790c <PyFloat_FromString@plt+0xddc>
    a248:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    a24c:	add	x0, x0, #0x330
    a250:	add	x0, x0, #0x1a0
    a254:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    a258:	mov	x19, x0
    a25c:	cbz	x0, a218 <PyFloat_FromString@plt+0x36e8>
    a260:	ldr	x2, [sp, #40]
    a264:	add	x1, x20, #0x18
    a268:	add	x0, x0, #0x18
    a26c:	add	x3, sp, #0x24
    a270:	add	x2, x2, #0x10
    a274:	bl	2246c <PyInit__decimal@@Base+0x114e4>
    a278:	ldr	w1, [sp, #36]
    a27c:	ldr	x0, [sp, #40]
    a280:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    a284:	cbz	w0, a21c <PyFloat_FromString@plt+0x36ec>
    a288:	mov	x0, x19
    a28c:	bl	790c <PyFloat_FromString@plt+0xddc>
    a290:	b	a218 <PyFloat_FromString@plt+0x36e8>
    a294:	ldr	x0, [x0, #8]
    a298:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    a29c:	add	x1, x1, #0x330
    a2a0:	cmp	x0, x1
    a2a4:	b.eq	a248 <PyFloat_FromString@plt+0x3718>  // b.none
    a2a8:	bl	6a60 <PyType_IsSubtype@plt>
    a2ac:	cbnz	w0, a248 <PyFloat_FromString@plt+0x3718>
    a2b0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    a2b4:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    a2b8:	add	x1, x1, #0x889
    a2bc:	ldr	x0, [x0, #3936]
    a2c0:	ldr	x0, [x0]
    a2c4:	bl	66e0 <PyErr_SetString@plt>
    a2c8:	b	a218 <PyFloat_FromString@plt+0x36e8>
    a2cc:	stp	x29, x30, [sp, #-48]!
    a2d0:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    a2d4:	add	x3, x3, #0x9b0
    a2d8:	mov	x29, sp
    a2dc:	stp	x19, x20, [sp, #16]
    a2e0:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    a2e4:	mov	x20, x0
    a2e8:	ldr	x19, [x19, #4008]
    a2ec:	mov	x0, x1
    a2f0:	add	x4, sp, #0x28
    a2f4:	mov	x1, x2
    a2f8:	add	x3, x3, #0x280
    a2fc:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    a300:	add	x2, x2, #0xdca
    a304:	str	wzr, [sp, #36]
    a308:	str	x19, [sp, #40]
    a30c:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    a310:	cbnz	w0, a328 <PyFloat_FromString@plt+0x37f8>
    a314:	mov	x19, #0x0                   	// #0
    a318:	mov	x0, x19
    a31c:	ldp	x19, x20, [sp, #16]
    a320:	ldp	x29, x30, [sp], #48
    a324:	ret
    a328:	ldr	x0, [sp, #40]
    a32c:	cmp	x0, x19
    a330:	b.ne	a390 <PyFloat_FromString@plt+0x3860>  // b.any
    a334:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    a338:	str	x0, [sp, #40]
    a33c:	cbz	x0, a314 <PyFloat_FromString@plt+0x37e4>
    a340:	bl	790c <PyFloat_FromString@plt+0xddc>
    a344:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    a348:	add	x0, x0, #0x330
    a34c:	add	x0, x0, #0x1a0
    a350:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    a354:	mov	x19, x0
    a358:	cbz	x0, a314 <PyFloat_FromString@plt+0x37e4>
    a35c:	ldr	x2, [sp, #40]
    a360:	add	x1, x20, #0x18
    a364:	add	x0, x0, #0x18
    a368:	add	x3, sp, #0x24
    a36c:	add	x2, x2, #0x10
    a370:	bl	1dda8 <PyInit__decimal@@Base+0xce20>
    a374:	ldr	w1, [sp, #36]
    a378:	ldr	x0, [sp, #40]
    a37c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    a380:	cbz	w0, a318 <PyFloat_FromString@plt+0x37e8>
    a384:	mov	x0, x19
    a388:	bl	790c <PyFloat_FromString@plt+0xddc>
    a38c:	b	a314 <PyFloat_FromString@plt+0x37e4>
    a390:	ldr	x0, [x0, #8]
    a394:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    a398:	add	x1, x1, #0x330
    a39c:	cmp	x0, x1
    a3a0:	b.eq	a344 <PyFloat_FromString@plt+0x3814>  // b.none
    a3a4:	bl	6a60 <PyType_IsSubtype@plt>
    a3a8:	cbnz	w0, a344 <PyFloat_FromString@plt+0x3814>
    a3ac:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    a3b0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    a3b4:	add	x1, x1, #0x889
    a3b8:	ldr	x0, [x0, #3936]
    a3bc:	ldr	x0, [x0]
    a3c0:	bl	66e0 <PyErr_SetString@plt>
    a3c4:	b	a314 <PyFloat_FromString@plt+0x37e4>
    a3c8:	stp	x29, x30, [sp, #-48]!
    a3cc:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    a3d0:	add	x3, x3, #0x9b0
    a3d4:	mov	x29, sp
    a3d8:	stp	x19, x20, [sp, #16]
    a3dc:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    a3e0:	mov	x20, x0
    a3e4:	ldr	x19, [x19, #4008]
    a3e8:	mov	x0, x1
    a3ec:	add	x4, sp, #0x28
    a3f0:	mov	x1, x2
    a3f4:	add	x3, x3, #0x290
    a3f8:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    a3fc:	add	x2, x2, #0xdca
    a400:	str	wzr, [sp, #36]
    a404:	str	x19, [sp, #40]
    a408:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    a40c:	cbnz	w0, a424 <PyFloat_FromString@plt+0x38f4>
    a410:	mov	x19, #0x0                   	// #0
    a414:	mov	x0, x19
    a418:	ldp	x19, x20, [sp, #16]
    a41c:	ldp	x29, x30, [sp], #48
    a420:	ret
    a424:	ldr	x0, [sp, #40]
    a428:	cmp	x0, x19
    a42c:	b.ne	a48c <PyFloat_FromString@plt+0x395c>  // b.any
    a430:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    a434:	str	x0, [sp, #40]
    a438:	cbz	x0, a410 <PyFloat_FromString@plt+0x38e0>
    a43c:	bl	790c <PyFloat_FromString@plt+0xddc>
    a440:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    a444:	add	x0, x0, #0x330
    a448:	add	x0, x0, #0x1a0
    a44c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    a450:	mov	x19, x0
    a454:	cbz	x0, a410 <PyFloat_FromString@plt+0x38e0>
    a458:	ldr	x2, [sp, #40]
    a45c:	add	x1, x20, #0x18
    a460:	add	x0, x0, #0x18
    a464:	add	x3, sp, #0x24
    a468:	add	x2, x2, #0x10
    a46c:	bl	1d8d4 <PyInit__decimal@@Base+0xc94c>
    a470:	ldr	w1, [sp, #36]
    a474:	ldr	x0, [sp, #40]
    a478:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    a47c:	cbz	w0, a414 <PyFloat_FromString@plt+0x38e4>
    a480:	mov	x0, x19
    a484:	bl	790c <PyFloat_FromString@plt+0xddc>
    a488:	b	a410 <PyFloat_FromString@plt+0x38e0>
    a48c:	ldr	x0, [x0, #8]
    a490:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    a494:	add	x1, x1, #0x330
    a498:	cmp	x0, x1
    a49c:	b.eq	a440 <PyFloat_FromString@plt+0x3910>  // b.none
    a4a0:	bl	6a60 <PyType_IsSubtype@plt>
    a4a4:	cbnz	w0, a440 <PyFloat_FromString@plt+0x3910>
    a4a8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    a4ac:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    a4b0:	add	x1, x1, #0x889
    a4b4:	ldr	x0, [x0, #3936]
    a4b8:	ldr	x0, [x0]
    a4bc:	bl	66e0 <PyErr_SetString@plt>
    a4c0:	b	a410 <PyFloat_FromString@plt+0x38e0>
    a4c4:	stp	x29, x30, [sp, #-48]!
    a4c8:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    a4cc:	add	x3, x3, #0x9b0
    a4d0:	mov	x29, sp
    a4d4:	stp	x19, x20, [sp, #16]
    a4d8:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    a4dc:	mov	x20, x0
    a4e0:	ldr	x19, [x19, #4008]
    a4e4:	mov	x0, x1
    a4e8:	add	x4, sp, #0x28
    a4ec:	mov	x1, x2
    a4f0:	add	x3, x3, #0x2a0
    a4f4:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    a4f8:	add	x2, x2, #0xdca
    a4fc:	str	wzr, [sp, #36]
    a500:	str	x19, [sp, #40]
    a504:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    a508:	cbnz	w0, a520 <PyFloat_FromString@plt+0x39f0>
    a50c:	mov	x19, #0x0                   	// #0
    a510:	mov	x0, x19
    a514:	ldp	x19, x20, [sp, #16]
    a518:	ldp	x29, x30, [sp], #48
    a51c:	ret
    a520:	ldr	x0, [sp, #40]
    a524:	cmp	x0, x19
    a528:	b.ne	a588 <PyFloat_FromString@plt+0x3a58>  // b.any
    a52c:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    a530:	str	x0, [sp, #40]
    a534:	cbz	x0, a50c <PyFloat_FromString@plt+0x39dc>
    a538:	bl	790c <PyFloat_FromString@plt+0xddc>
    a53c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    a540:	add	x0, x0, #0x330
    a544:	add	x0, x0, #0x1a0
    a548:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    a54c:	mov	x19, x0
    a550:	cbz	x0, a50c <PyFloat_FromString@plt+0x39dc>
    a554:	ldr	x2, [sp, #40]
    a558:	add	x1, x20, #0x18
    a55c:	add	x0, x0, #0x18
    a560:	add	x3, sp, #0x24
    a564:	add	x2, x2, #0x10
    a568:	bl	1d774 <PyInit__decimal@@Base+0xc7ec>
    a56c:	ldr	w1, [sp, #36]
    a570:	ldr	x0, [sp, #40]
    a574:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    a578:	cbz	w0, a510 <PyFloat_FromString@plt+0x39e0>
    a57c:	mov	x0, x19
    a580:	bl	790c <PyFloat_FromString@plt+0xddc>
    a584:	b	a50c <PyFloat_FromString@plt+0x39dc>
    a588:	ldr	x0, [x0, #8]
    a58c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    a590:	add	x1, x1, #0x330
    a594:	cmp	x0, x1
    a598:	b.eq	a53c <PyFloat_FromString@plt+0x3a0c>  // b.none
    a59c:	bl	6a60 <PyType_IsSubtype@plt>
    a5a0:	cbnz	w0, a53c <PyFloat_FromString@plt+0x3a0c>
    a5a4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    a5a8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    a5ac:	add	x1, x1, #0x889
    a5b0:	ldr	x0, [x0, #3936]
    a5b4:	ldr	x0, [x0]
    a5b8:	bl	66e0 <PyErr_SetString@plt>
    a5bc:	b	a50c <PyFloat_FromString@plt+0x39dc>
    a5c0:	stp	x29, x30, [sp, #-48]!
    a5c4:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    a5c8:	add	x3, x3, #0x9b0
    a5cc:	mov	x29, sp
    a5d0:	stp	x19, x20, [sp, #16]
    a5d4:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    a5d8:	mov	x20, x0
    a5dc:	ldr	x19, [x19, #4008]
    a5e0:	mov	x0, x1
    a5e4:	add	x4, sp, #0x28
    a5e8:	mov	x1, x2
    a5ec:	add	x3, x3, #0x2b0
    a5f0:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    a5f4:	add	x2, x2, #0xdca
    a5f8:	str	wzr, [sp, #36]
    a5fc:	str	x19, [sp, #40]
    a600:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    a604:	cbnz	w0, a61c <PyFloat_FromString@plt+0x3aec>
    a608:	mov	x19, #0x0                   	// #0
    a60c:	mov	x0, x19
    a610:	ldp	x19, x20, [sp, #16]
    a614:	ldp	x29, x30, [sp], #48
    a618:	ret
    a61c:	ldr	x0, [sp, #40]
    a620:	cmp	x0, x19
    a624:	b.ne	a684 <PyFloat_FromString@plt+0x3b54>  // b.any
    a628:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    a62c:	str	x0, [sp, #40]
    a630:	cbz	x0, a608 <PyFloat_FromString@plt+0x3ad8>
    a634:	bl	790c <PyFloat_FromString@plt+0xddc>
    a638:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    a63c:	add	x0, x0, #0x330
    a640:	add	x0, x0, #0x1a0
    a644:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    a648:	mov	x19, x0
    a64c:	cbz	x0, a608 <PyFloat_FromString@plt+0x3ad8>
    a650:	ldr	x2, [sp, #40]
    a654:	add	x1, x20, #0x18
    a658:	add	x0, x0, #0x18
    a65c:	add	x3, sp, #0x24
    a660:	add	x2, x2, #0x10
    a664:	bl	2006c <PyInit__decimal@@Base+0xf0e4>
    a668:	ldr	w1, [sp, #36]
    a66c:	ldr	x0, [sp, #40]
    a670:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    a674:	cbz	w0, a60c <PyFloat_FromString@plt+0x3adc>
    a678:	mov	x0, x19
    a67c:	bl	790c <PyFloat_FromString@plt+0xddc>
    a680:	b	a608 <PyFloat_FromString@plt+0x3ad8>
    a684:	ldr	x0, [x0, #8]
    a688:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    a68c:	add	x1, x1, #0x330
    a690:	cmp	x0, x1
    a694:	b.eq	a638 <PyFloat_FromString@plt+0x3b08>  // b.none
    a698:	bl	6a60 <PyType_IsSubtype@plt>
    a69c:	cbnz	w0, a638 <PyFloat_FromString@plt+0x3b08>
    a6a0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    a6a4:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    a6a8:	add	x1, x1, #0x889
    a6ac:	ldr	x0, [x0, #3936]
    a6b0:	ldr	x0, [x0]
    a6b4:	bl	66e0 <PyErr_SetString@plt>
    a6b8:	b	a608 <PyFloat_FromString@plt+0x3ad8>
    a6bc:	stp	x29, x30, [sp, #-48]!
    a6c0:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    a6c4:	add	x3, x3, #0x9b0
    a6c8:	mov	x29, sp
    a6cc:	stp	x19, x20, [sp, #16]
    a6d0:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    a6d4:	mov	x20, x0
    a6d8:	ldr	x19, [x19, #4008]
    a6dc:	mov	x0, x1
    a6e0:	add	x4, sp, #0x28
    a6e4:	mov	x1, x2
    a6e8:	add	x3, x3, #0x2c0
    a6ec:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    a6f0:	add	x2, x2, #0xdca
    a6f4:	str	wzr, [sp, #36]
    a6f8:	str	x19, [sp, #40]
    a6fc:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    a700:	cbnz	w0, a718 <PyFloat_FromString@plt+0x3be8>
    a704:	mov	x19, #0x0                   	// #0
    a708:	mov	x0, x19
    a70c:	ldp	x19, x20, [sp, #16]
    a710:	ldp	x29, x30, [sp], #48
    a714:	ret
    a718:	ldr	x0, [sp, #40]
    a71c:	cmp	x0, x19
    a720:	b.ne	a780 <PyFloat_FromString@plt+0x3c50>  // b.any
    a724:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    a728:	str	x0, [sp, #40]
    a72c:	cbz	x0, a704 <PyFloat_FromString@plt+0x3bd4>
    a730:	bl	790c <PyFloat_FromString@plt+0xddc>
    a734:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    a738:	add	x0, x0, #0x330
    a73c:	add	x0, x0, #0x1a0
    a740:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    a744:	mov	x19, x0
    a748:	cbz	x0, a704 <PyFloat_FromString@plt+0x3bd4>
    a74c:	ldr	x2, [sp, #40]
    a750:	add	x1, x20, #0x18
    a754:	add	x0, x0, #0x18
    a758:	add	x3, sp, #0x24
    a75c:	add	x2, x2, #0x10
    a760:	bl	1fa34 <PyInit__decimal@@Base+0xeaac>
    a764:	ldr	w1, [sp, #36]
    a768:	ldr	x0, [sp, #40]
    a76c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    a770:	cbz	w0, a708 <PyFloat_FromString@plt+0x3bd8>
    a774:	mov	x0, x19
    a778:	bl	790c <PyFloat_FromString@plt+0xddc>
    a77c:	b	a704 <PyFloat_FromString@plt+0x3bd4>
    a780:	ldr	x0, [x0, #8]
    a784:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    a788:	add	x1, x1, #0x330
    a78c:	cmp	x0, x1
    a790:	b.eq	a734 <PyFloat_FromString@plt+0x3c04>  // b.none
    a794:	bl	6a60 <PyType_IsSubtype@plt>
    a798:	cbnz	w0, a734 <PyFloat_FromString@plt+0x3c04>
    a79c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    a7a0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    a7a4:	add	x1, x1, #0x889
    a7a8:	ldr	x0, [x0, #3936]
    a7ac:	ldr	x0, [x0]
    a7b0:	bl	66e0 <PyErr_SetString@plt>
    a7b4:	b	a704 <PyFloat_FromString@plt+0x3bd4>
    a7b8:	stp	x29, x30, [sp, #-48]!
    a7bc:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    a7c0:	add	x3, x3, #0x9b0
    a7c4:	mov	x29, sp
    a7c8:	stp	x19, x20, [sp, #16]
    a7cc:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    a7d0:	mov	x20, x0
    a7d4:	ldr	x19, [x19, #4008]
    a7d8:	mov	x0, x1
    a7dc:	add	x4, sp, #0x28
    a7e0:	mov	x1, x2
    a7e4:	add	x3, x3, #0x2d0
    a7e8:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    a7ec:	add	x2, x2, #0xdca
    a7f0:	str	wzr, [sp, #36]
    a7f4:	str	x19, [sp, #40]
    a7f8:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    a7fc:	cbnz	w0, a814 <PyFloat_FromString@plt+0x3ce4>
    a800:	mov	x19, #0x0                   	// #0
    a804:	mov	x0, x19
    a808:	ldp	x19, x20, [sp, #16]
    a80c:	ldp	x29, x30, [sp], #48
    a810:	ret
    a814:	ldr	x0, [sp, #40]
    a818:	cmp	x0, x19
    a81c:	b.ne	a87c <PyFloat_FromString@plt+0x3d4c>  // b.any
    a820:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    a824:	str	x0, [sp, #40]
    a828:	cbz	x0, a800 <PyFloat_FromString@plt+0x3cd0>
    a82c:	bl	790c <PyFloat_FromString@plt+0xddc>
    a830:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    a834:	add	x0, x0, #0x330
    a838:	add	x0, x0, #0x1a0
    a83c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    a840:	mov	x19, x0
    a844:	cbz	x0, a800 <PyFloat_FromString@plt+0x3cd0>
    a848:	ldr	x2, [sp, #40]
    a84c:	add	x1, x20, #0x18
    a850:	add	x0, x0, #0x18
    a854:	add	x3, sp, #0x24
    a858:	add	x2, x2, #0x10
    a85c:	bl	1ef74 <PyInit__decimal@@Base+0xdfec>
    a860:	ldr	w1, [sp, #36]
    a864:	ldr	x0, [sp, #40]
    a868:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    a86c:	cbz	w0, a804 <PyFloat_FromString@plt+0x3cd4>
    a870:	mov	x0, x19
    a874:	bl	790c <PyFloat_FromString@plt+0xddc>
    a878:	b	a800 <PyFloat_FromString@plt+0x3cd0>
    a87c:	ldr	x0, [x0, #8]
    a880:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    a884:	add	x1, x1, #0x330
    a888:	cmp	x0, x1
    a88c:	b.eq	a830 <PyFloat_FromString@plt+0x3d00>  // b.none
    a890:	bl	6a60 <PyType_IsSubtype@plt>
    a894:	cbnz	w0, a830 <PyFloat_FromString@plt+0x3d00>
    a898:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    a89c:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    a8a0:	add	x1, x1, #0x889
    a8a4:	ldr	x0, [x0, #3936]
    a8a8:	ldr	x0, [x0]
    a8ac:	bl	66e0 <PyErr_SetString@plt>
    a8b0:	b	a800 <PyFloat_FromString@plt+0x3cd0>
    a8b4:	stp	x29, x30, [sp, #-64]!
    a8b8:	mov	x29, sp
    a8bc:	stp	x19, x20, [sp, #16]
    a8c0:	str	x21, [sp, #32]
    a8c4:	mov	x21, x0
    a8c8:	str	wzr, [sp, #60]
    a8cc:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    a8d0:	cbnz	x0, a8ec <PyFloat_FromString@plt+0x3dbc>
    a8d4:	mov	x19, #0x0                   	// #0
    a8d8:	mov	x0, x19
    a8dc:	ldp	x19, x20, [sp, #16]
    a8e0:	ldr	x21, [sp, #32]
    a8e4:	ldp	x29, x30, [sp], #64
    a8e8:	ret
    a8ec:	mov	x20, x0
    a8f0:	bl	790c <PyFloat_FromString@plt+0xddc>
    a8f4:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    a8f8:	add	x0, x0, #0x330
    a8fc:	add	x0, x0, #0x1a0
    a900:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    a904:	mov	x19, x0
    a908:	cbz	x0, a8d4 <PyFloat_FromString@plt+0x3da4>
    a90c:	add	x1, x21, #0x18
    a910:	add	x0, x0, #0x18
    a914:	add	x3, sp, #0x3c
    a918:	add	x2, x20, #0x10
    a91c:	bl	1d6e8 <PyInit__decimal@@Base+0xc760>
    a920:	ldr	w1, [sp, #60]
    a924:	mov	x0, x20
    a928:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    a92c:	cbz	w0, a8d8 <PyFloat_FromString@plt+0x3da8>
    a930:	mov	x0, x19
    a934:	bl	790c <PyFloat_FromString@plt+0xddc>
    a938:	b	a8d4 <PyFloat_FromString@plt+0x3da4>
    a93c:	stp	x29, x30, [sp, #-64]!
    a940:	mov	x29, sp
    a944:	stp	x19, x20, [sp, #16]
    a948:	str	x21, [sp, #32]
    a94c:	mov	x21, x0
    a950:	str	wzr, [sp, #60]
    a954:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    a958:	cbnz	x0, a974 <PyFloat_FromString@plt+0x3e44>
    a95c:	mov	x19, #0x0                   	// #0
    a960:	mov	x0, x19
    a964:	ldp	x19, x20, [sp, #16]
    a968:	ldr	x21, [sp, #32]
    a96c:	ldp	x29, x30, [sp], #64
    a970:	ret
    a974:	mov	x20, x0
    a978:	bl	790c <PyFloat_FromString@plt+0xddc>
    a97c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    a980:	add	x0, x0, #0x330
    a984:	add	x0, x0, #0x1a0
    a988:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    a98c:	mov	x19, x0
    a990:	cbz	x0, a95c <PyFloat_FromString@plt+0x3e2c>
    a994:	add	x1, x21, #0x18
    a998:	add	x0, x0, #0x18
    a99c:	add	x3, sp, #0x3c
    a9a0:	add	x2, x20, #0x10
    a9a4:	bl	1d634 <PyInit__decimal@@Base+0xc6ac>
    a9a8:	ldr	w1, [sp, #60]
    a9ac:	mov	x0, x20
    a9b0:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    a9b4:	cbz	w0, a960 <PyFloat_FromString@plt+0x3e30>
    a9b8:	mov	x0, x19
    a9bc:	bl	790c <PyFloat_FromString@plt+0xddc>
    a9c0:	b	a95c <PyFloat_FromString@plt+0x3e2c>
    a9c4:	stp	x29, x30, [sp, #-64]!
    a9c8:	mov	x29, sp
    a9cc:	stp	x19, x20, [sp, #16]
    a9d0:	str	x21, [sp, #32]
    a9d4:	mov	x21, x0
    a9d8:	str	wzr, [sp, #60]
    a9dc:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    a9e0:	cbnz	x0, a9fc <PyFloat_FromString@plt+0x3ecc>
    a9e4:	mov	x19, #0x0                   	// #0
    a9e8:	mov	x0, x19
    a9ec:	ldp	x19, x20, [sp, #16]
    a9f0:	ldr	x21, [sp, #32]
    a9f4:	ldp	x29, x30, [sp], #64
    a9f8:	ret
    a9fc:	mov	x20, x0
    aa00:	bl	790c <PyFloat_FromString@plt+0xddc>
    aa04:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    aa08:	add	x0, x0, #0x330
    aa0c:	add	x0, x0, #0x1a0
    aa10:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    aa14:	mov	x19, x0
    aa18:	cbz	x0, a9e4 <PyFloat_FromString@plt+0x3eb4>
    aa1c:	add	x1, x21, #0x18
    aa20:	add	x0, x0, #0x18
    aa24:	add	x3, sp, #0x3c
    aa28:	add	x2, x20, #0x10
    aa2c:	bl	1d580 <PyInit__decimal@@Base+0xc5f8>
    aa30:	ldr	w1, [sp, #60]
    aa34:	mov	x0, x20
    aa38:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    aa3c:	cbz	w0, a9e8 <PyFloat_FromString@plt+0x3eb8>
    aa40:	mov	x0, x19
    aa44:	bl	790c <PyFloat_FromString@plt+0xddc>
    aa48:	b	a9e4 <PyFloat_FromString@plt+0x3eb4>
    aa4c:	stp	x29, x30, [sp, #-64]!
    aa50:	mov	x29, sp
    aa54:	str	x21, [sp, #32]
    aa58:	mov	x21, x0
    aa5c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    aa60:	add	x0, x0, #0x330
    aa64:	add	x0, x0, #0x1a0
    aa68:	stp	x19, x20, [sp, #16]
    aa6c:	mov	x20, x1
    aa70:	str	wzr, [sp, #60]
    aa74:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    aa78:	mov	x19, x0
    aa7c:	cbz	x0, aab0 <PyFloat_FromString@plt+0x3f80>
    aa80:	mov	x1, x21
    aa84:	add	x0, x0, #0x18
    aa88:	add	x3, sp, #0x3c
    aa8c:	add	x2, x20, #0x10
    aa90:	bl	14978 <PyInit__decimal@@Base+0x39f0>
    aa94:	ldr	w1, [sp, #60]
    aa98:	mov	x0, x20
    aa9c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    aaa0:	cbz	w0, aab0 <PyFloat_FromString@plt+0x3f80>
    aaa4:	mov	x0, x19
    aaa8:	mov	x19, #0x0                   	// #0
    aaac:	bl	790c <PyFloat_FromString@plt+0xddc>
    aab0:	mov	x0, x19
    aab4:	ldp	x19, x20, [sp, #16]
    aab8:	ldr	x21, [sp, #32]
    aabc:	ldp	x29, x30, [sp], #64
    aac0:	ret
    aac4:	stp	x29, x30, [sp, #-64]!
    aac8:	mov	x29, sp
    aacc:	stp	x19, x20, [sp, #16]
    aad0:	stp	x21, x22, [sp, #32]
    aad4:	mov	x21, x1
    aad8:	mov	x22, x2
    aadc:	str	x23, [sp, #48]
    aae0:	mov	x23, x3
    aae4:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    aae8:	mov	x19, x0
    aaec:	cbz	x0, ab28 <PyFloat_FromString@plt+0x3ff8>
    aaf0:	ldr	x7, [x21, #16]
    aaf4:	add	x20, x0, #0x18
    aaf8:	cmp	x7, #0x0
    aafc:	cbnz	x7, ab40 <PyFloat_FromString@plt+0x4010>
    ab00:	ldr	x0, [x0, #64]
    ab04:	mov	w1, #0x0                   	// #0
    ab08:	str	xzr, [x0]
    ab0c:	mov	x0, #0x1                   	// #1
    ab10:	str	x0, [x19, #48]
    ab14:	mov	x0, x20
    ab18:	bl	18478 <PyInit__decimal@@Base+0x74f0>
    ab1c:	str	xzr, [x19, #32]
    ab20:	mov	x0, x20
    ab24:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
    ab28:	mov	x0, x19
    ab2c:	ldp	x19, x20, [sp, #16]
    ab30:	ldp	x21, x22, [sp, #32]
    ab34:	ldr	x23, [sp, #48]
    ab38:	ldp	x29, x30, [sp], #64
    ab3c:	ret
    ab40:	b.ge	ab8c <PyFloat_FromString@plt+0x405c>  // b.tcont
    ab44:	neg	x7, x7
    ab48:	mov	w1, #0x1                   	// #1
    ab4c:	cmp	x7, #0x1
    ab50:	b.ne	ab94 <PyFloat_FromString@plt+0x4064>  // b.any
    ab54:	ldr	x0, [x19, #64]
    ab58:	ldr	w2, [x21, #24]
    ab5c:	str	x2, [x0]
    ab60:	mov	x0, x20
    ab64:	str	x7, [x19, #48]
    ab68:	bl	18478 <PyInit__decimal@@Base+0x74f0>
    ab6c:	str	xzr, [x19, #32]
    ab70:	mov	x0, x20
    ab74:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
    ab78:	mov	x2, x23
    ab7c:	mov	x1, x22
    ab80:	mov	x0, x20
    ab84:	bl	19f98 <PyInit__decimal@@Base+0x9010>
    ab88:	b	ab28 <PyFloat_FromString@plt+0x3ff8>
    ab8c:	mov	w1, #0x0                   	// #0
    ab90:	b	ab4c <PyFloat_FromString@plt+0x401c>
    ab94:	mov	w3, w1
    ab98:	mov	x6, x23
    ab9c:	mov	x5, x22
    aba0:	mov	x2, x7
    aba4:	add	x1, x21, #0x18
    aba8:	mov	x0, x20
    abac:	mov	w4, #0x40000000            	// #1073741824
    abb0:	bl	230c4 <PyInit__decimal@@Base+0x1213c>
    abb4:	b	ab28 <PyFloat_FromString@plt+0x3ff8>
    abb8:	stp	x29, x30, [sp, #-128]!
    abbc:	mov	x29, sp
    abc0:	stp	x21, x22, [sp, #32]
    abc4:	mov	x21, x0
    abc8:	ldr	x0, [x1, #8]
    abcc:	stp	x19, x20, [sp, #16]
    abd0:	str	wzr, [sp, #76]
    abd4:	ldr	x0, [x0, #168]
    abd8:	str	x23, [sp, #48]
    abdc:	tbnz	w0, #24, ac14 <PyFloat_FromString@plt+0x40e4>
    abe0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    abe4:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    abe8:	add	x1, x1, #0xd7d
    abec:	ldr	x0, [x0, #3936]
    abf0:	ldr	x0, [x0]
    abf4:	bl	66e0 <PyErr_SetString@plt>
    abf8:	mov	x19, #0x0                   	// #0
    abfc:	mov	x0, x19
    ac00:	ldp	x19, x20, [sp, #16]
    ac04:	ldp	x21, x22, [sp, #32]
    ac08:	ldr	x23, [sp, #48]
    ac0c:	ldp	x29, x30, [sp], #128
    ac10:	ret
    ac14:	add	x23, sp, #0x50
    ac18:	mov	x19, x1
    ac1c:	mov	x20, x2
    ac20:	mov	x0, x23
    ac24:	add	x22, sp, #0x4c
    ac28:	bl	12880 <PyInit__decimal@@Base+0x18f8>
    ac2c:	mov	x1, x19
    ac30:	mov	x3, x22
    ac34:	mov	x2, x23
    ac38:	mov	x0, x21
    ac3c:	bl	aac4 <PyFloat_FromString@plt+0x3f94>
    ac40:	mov	x19, x0
    ac44:	cbz	x0, abfc <PyFloat_FromString@plt+0x40cc>
    ac48:	ldr	w1, [sp, #76]
    ac4c:	mov	w0, #0x1041                	// #4161
    ac50:	tst	w1, w0
    ac54:	b.eq	ac68 <PyFloat_FromString@plt+0x4138>  // b.none
    ac58:	mov	x2, x22
    ac5c:	add	x0, x19, #0x18
    ac60:	mov	w1, #0x100                 	// #256
    ac64:	bl	18904 <PyInit__decimal@@Base+0x797c>
    ac68:	ldr	w1, [sp, #76]
    ac6c:	mov	w0, #0x3be                 	// #958
    ac70:	and	w1, w1, w0
    ac74:	mov	x0, x20
    ac78:	str	w1, [sp, #76]
    ac7c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    ac80:	cbz	w0, abfc <PyFloat_FromString@plt+0x40cc>
    ac84:	mov	x0, x19
    ac88:	bl	790c <PyFloat_FromString@plt+0xddc>
    ac8c:	b	abf8 <PyFloat_FromString@plt+0x40c8>
    ac90:	stp	x29, x30, [sp, #-64]!
    ac94:	mov	x29, sp
    ac98:	stp	x23, x24, [sp, #48]
    ac9c:	mov	w23, w0
    aca0:	ldr	x0, [x2, #8]
    aca4:	stp	x19, x20, [sp, #16]
    aca8:	adrp	x20, 43000 <PyInit__decimal@@Base+0x32078>
    acac:	add	x20, x20, #0x330
    acb0:	stp	x21, x22, [sp, #32]
    acb4:	add	x20, x20, #0x1a0
    acb8:	mov	x22, x1
    acbc:	mov	x19, x2
    acc0:	cmp	x0, x20
    acc4:	b.ne	acf4 <PyFloat_FromString@plt+0x41c4>  // b.any
    acc8:	ldr	x0, [x19]
    accc:	str	x19, [x22]
    acd0:	mov	w21, #0x1                   	// #1
    acd4:	add	x0, x0, #0x1
    acd8:	str	x0, [x19]
    acdc:	mov	w0, w21
    ace0:	ldp	x19, x20, [sp, #16]
    ace4:	ldp	x21, x22, [sp, #32]
    ace8:	ldp	x23, x24, [sp, #48]
    acec:	ldp	x29, x30, [sp], #64
    acf0:	ret
    acf4:	mov	x24, x3
    acf8:	mov	x1, x20
    acfc:	bl	6a60 <PyType_IsSubtype@plt>
    ad00:	mov	w21, w0
    ad04:	cbnz	w0, acc8 <PyFloat_FromString@plt+0x4198>
    ad08:	ldr	x0, [x19, #8]
    ad0c:	ldr	x1, [x0, #168]
    ad10:	tbz	w1, #24, ad34 <PyFloat_FromString@plt+0x4204>
    ad14:	mov	x2, x24
    ad18:	mov	x1, x19
    ad1c:	mov	x0, x20
    ad20:	bl	abb8 <PyFloat_FromString@plt+0x4088>
    ad24:	cmp	x0, #0x0
    ad28:	str	x0, [x22]
    ad2c:	cset	w21, ne  // ne = any
    ad30:	b	acdc <PyFloat_FromString@plt+0x41ac>
    ad34:	cbz	w23, ad58 <PyFloat_FromString@plt+0x4228>
    ad38:	ldr	x2, [x0, #24]
    ad3c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    ad40:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    ad44:	add	x1, x1, #0xd99
    ad48:	ldr	x0, [x0, #3936]
    ad4c:	ldr	x0, [x0]
    ad50:	bl	6ab0 <PyErr_Format@plt>
    ad54:	b	acdc <PyFloat_FromString@plt+0x41ac>
    ad58:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    ad5c:	ldr	x0, [x0, #3912]
    ad60:	ldr	x1, [x0]
    ad64:	add	x1, x1, #0x1
    ad68:	str	x1, [x0]
    ad6c:	str	x0, [x22]
    ad70:	b	acdc <PyFloat_FromString@plt+0x41ac>
    ad74:	stp	x29, x30, [sp, #-32]!
    ad78:	mov	x3, x0
    ad7c:	mov	x2, x1
    ad80:	mov	x29, sp
    ad84:	add	x1, sp, #0x18
    ad88:	mov	w0, #0x1                   	// #1
    ad8c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    ad90:	cmp	w0, #0x0
    ad94:	ldr	x0, [sp, #24]
    ad98:	ldp	x29, x30, [sp], #32
    ad9c:	csel	x0, x0, xzr, ne  // ne = any
    ada0:	ret
    ada4:	stp	x29, x30, [sp, #-80]!
    ada8:	mov	x29, sp
    adac:	add	x3, sp, #0x38
    adb0:	add	x2, sp, #0x30
    adb4:	stp	x19, x20, [sp, #16]
    adb8:	mov	x20, x0
    adbc:	mov	x0, x1
    adc0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    adc4:	add	x1, x1, #0xe7e
    adc8:	str	wzr, [sp, #44]
    adcc:	bl	6980 <PyArg_ParseTuple@plt>
    add0:	cbnz	w0, addc <PyFloat_FromString@plt+0x42ac>
    add4:	mov	x19, #0x0                   	// #0
    add8:	b	ae40 <PyFloat_FromString@plt+0x4310>
    addc:	ldr	x2, [sp, #48]
    ade0:	mov	x3, x20
    ade4:	add	x1, sp, #0x40
    ade8:	mov	w0, #0x1                   	// #1
    adec:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    adf0:	cbz	w0, add4 <PyFloat_FromString@plt+0x42a4>
    adf4:	ldr	x2, [sp, #56]
    adf8:	mov	x3, x20
    adfc:	add	x1, sp, #0x48
    ae00:	mov	w0, #0x1                   	// #1
    ae04:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    ae08:	cbnz	w0, ae18 <PyFloat_FromString@plt+0x42e8>
    ae0c:	ldr	x0, [sp, #64]
    ae10:	bl	790c <PyFloat_FromString@plt+0xddc>
    ae14:	b	add4 <PyFloat_FromString@plt+0x42a4>
    ae18:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    ae1c:	add	x0, x0, #0x330
    ae20:	add	x0, x0, #0x1a0
    ae24:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    ae28:	mov	x19, x0
    ae2c:	cbnz	x0, ae50 <PyFloat_FromString@plt+0x4320>
    ae30:	ldr	x0, [sp, #64]
    ae34:	bl	790c <PyFloat_FromString@plt+0xddc>
    ae38:	ldr	x0, [sp, #72]
    ae3c:	bl	790c <PyFloat_FromString@plt+0xddc>
    ae40:	mov	x0, x19
    ae44:	ldp	x19, x20, [sp, #16]
    ae48:	ldp	x29, x30, [sp], #80
    ae4c:	ret
    ae50:	ldp	x1, x2, [sp, #64]
    ae54:	add	x4, sp, #0x2c
    ae58:	add	x3, x20, #0x10
    ae5c:	add	x0, x0, #0x18
    ae60:	add	x1, x1, #0x18
    ae64:	add	x2, x2, #0x18
    ae68:	bl	1b700 <PyInit__decimal@@Base+0xa778>
    ae6c:	ldr	x0, [sp, #64]
    ae70:	bl	790c <PyFloat_FromString@plt+0xddc>
    ae74:	ldr	x0, [sp, #72]
    ae78:	bl	790c <PyFloat_FromString@plt+0xddc>
    ae7c:	ldr	w1, [sp, #44]
    ae80:	mov	x0, x20
    ae84:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    ae88:	cbz	w0, ae40 <PyFloat_FromString@plt+0x4310>
    ae8c:	mov	x0, x19
    ae90:	b	ae10 <PyFloat_FromString@plt+0x42e0>
    ae94:	stp	x29, x30, [sp, #-80]!
    ae98:	mov	x29, sp
    ae9c:	add	x3, sp, #0x38
    aea0:	add	x2, sp, #0x30
    aea4:	stp	x19, x20, [sp, #16]
    aea8:	mov	x20, x0
    aeac:	mov	x0, x1
    aeb0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    aeb4:	add	x1, x1, #0xe7e
    aeb8:	str	wzr, [sp, #44]
    aebc:	bl	6980 <PyArg_ParseTuple@plt>
    aec0:	cbnz	w0, aecc <PyFloat_FromString@plt+0x439c>
    aec4:	mov	x19, #0x0                   	// #0
    aec8:	b	af30 <PyFloat_FromString@plt+0x4400>
    aecc:	ldr	x2, [sp, #48]
    aed0:	mov	x3, x20
    aed4:	add	x1, sp, #0x40
    aed8:	mov	w0, #0x1                   	// #1
    aedc:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    aee0:	cbz	w0, aec4 <PyFloat_FromString@plt+0x4394>
    aee4:	ldr	x2, [sp, #56]
    aee8:	mov	x3, x20
    aeec:	add	x1, sp, #0x48
    aef0:	mov	w0, #0x1                   	// #1
    aef4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    aef8:	cbnz	w0, af08 <PyFloat_FromString@plt+0x43d8>
    aefc:	ldr	x0, [sp, #64]
    af00:	bl	790c <PyFloat_FromString@plt+0xddc>
    af04:	b	aec4 <PyFloat_FromString@plt+0x4394>
    af08:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    af0c:	add	x0, x0, #0x330
    af10:	add	x0, x0, #0x1a0
    af14:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    af18:	mov	x19, x0
    af1c:	cbnz	x0, af40 <PyFloat_FromString@plt+0x4410>
    af20:	ldr	x0, [sp, #64]
    af24:	bl	790c <PyFloat_FromString@plt+0xddc>
    af28:	ldr	x0, [sp, #72]
    af2c:	bl	790c <PyFloat_FromString@plt+0xddc>
    af30:	mov	x0, x19
    af34:	ldp	x19, x20, [sp, #16]
    af38:	ldp	x29, x30, [sp], #80
    af3c:	ret
    af40:	ldp	x1, x2, [sp, #64]
    af44:	add	x4, sp, #0x2c
    af48:	add	x3, x20, #0x10
    af4c:	add	x0, x0, #0x18
    af50:	add	x1, x1, #0x18
    af54:	add	x2, x2, #0x18
    af58:	bl	1b4a8 <PyInit__decimal@@Base+0xa520>
    af5c:	ldr	x0, [sp, #64]
    af60:	bl	790c <PyFloat_FromString@plt+0xddc>
    af64:	ldr	x0, [sp, #72]
    af68:	bl	790c <PyFloat_FromString@plt+0xddc>
    af6c:	ldr	w1, [sp, #44]
    af70:	mov	x0, x20
    af74:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    af78:	cbz	w0, af30 <PyFloat_FromString@plt+0x4400>
    af7c:	mov	x0, x19
    af80:	b	af00 <PyFloat_FromString@plt+0x43d0>
    af84:	stp	x29, x30, [sp, #-64]!
    af88:	mov	x29, sp
    af8c:	add	x3, sp, #0x28
    af90:	add	x2, sp, #0x20
    af94:	str	x19, [sp, #16]
    af98:	mov	x19, x0
    af9c:	mov	x0, x1
    afa0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    afa4:	add	x1, x1, #0xe7e
    afa8:	bl	6980 <PyArg_ParseTuple@plt>
    afac:	cbnz	w0, afc4 <PyFloat_FromString@plt+0x4494>
    afb0:	mov	x19, #0x0                   	// #0
    afb4:	mov	x0, x19
    afb8:	ldr	x19, [sp, #16]
    afbc:	ldp	x29, x30, [sp], #64
    afc0:	ret
    afc4:	ldr	x2, [sp, #32]
    afc8:	mov	x3, x19
    afcc:	add	x1, sp, #0x30
    afd0:	mov	w0, #0x1                   	// #1
    afd4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    afd8:	cbz	w0, afb0 <PyFloat_FromString@plt+0x4480>
    afdc:	ldr	x2, [sp, #40]
    afe0:	mov	x3, x19
    afe4:	add	x1, sp, #0x38
    afe8:	mov	w0, #0x1                   	// #1
    afec:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    aff0:	cbnz	w0, b000 <PyFloat_FromString@plt+0x44d0>
    aff4:	ldr	x0, [sp, #48]
    aff8:	bl	790c <PyFloat_FromString@plt+0xddc>
    affc:	b	afb0 <PyFloat_FromString@plt+0x4480>
    b000:	ldp	x0, x1, [sp, #48]
    b004:	add	x1, x1, #0x18
    b008:	add	x0, x0, #0x18
    b00c:	bl	2230c <PyInit__decimal@@Base+0x11384>
    b010:	cbz	w0, b030 <PyFloat_FromString@plt+0x4500>
    b014:	bl	6c14 <PyFloat_FromString@plt+0xe4>
    b018:	mov	x19, x0
    b01c:	ldr	x0, [sp, #48]
    b020:	bl	790c <PyFloat_FromString@plt+0xddc>
    b024:	ldr	x0, [sp, #56]
    b028:	bl	790c <PyFloat_FromString@plt+0xddc>
    b02c:	b	afb4 <PyFloat_FromString@plt+0x4484>
    b030:	bl	6c2c <PyFloat_FromString@plt+0xfc>
    b034:	b	b018 <PyFloat_FromString@plt+0x44e8>
    b038:	stp	x29, x30, [sp, #-80]!
    b03c:	mov	x29, sp
    b040:	add	x3, sp, #0x38
    b044:	add	x2, sp, #0x30
    b048:	stp	x19, x20, [sp, #16]
    b04c:	mov	x20, x0
    b050:	mov	x0, x1
    b054:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    b058:	add	x1, x1, #0xe7e
    b05c:	str	wzr, [sp, #44]
    b060:	bl	6980 <PyArg_ParseTuple@plt>
    b064:	cbnz	w0, b070 <PyFloat_FromString@plt+0x4540>
    b068:	mov	x19, #0x0                   	// #0
    b06c:	b	b0d4 <PyFloat_FromString@plt+0x45a4>
    b070:	ldr	x2, [sp, #48]
    b074:	mov	x3, x20
    b078:	add	x1, sp, #0x40
    b07c:	mov	w0, #0x1                   	// #1
    b080:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b084:	cbz	w0, b068 <PyFloat_FromString@plt+0x4538>
    b088:	ldr	x2, [sp, #56]
    b08c:	mov	x3, x20
    b090:	add	x1, sp, #0x48
    b094:	mov	w0, #0x1                   	// #1
    b098:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b09c:	cbnz	w0, b0ac <PyFloat_FromString@plt+0x457c>
    b0a0:	ldr	x0, [sp, #64]
    b0a4:	bl	790c <PyFloat_FromString@plt+0xddc>
    b0a8:	b	b068 <PyFloat_FromString@plt+0x4538>
    b0ac:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    b0b0:	add	x0, x0, #0x330
    b0b4:	add	x0, x0, #0x1a0
    b0b8:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    b0bc:	mov	x19, x0
    b0c0:	cbnz	x0, b0e4 <PyFloat_FromString@plt+0x45b4>
    b0c4:	ldr	x0, [sp, #64]
    b0c8:	bl	790c <PyFloat_FromString@plt+0xddc>
    b0cc:	ldr	x0, [sp, #72]
    b0d0:	bl	790c <PyFloat_FromString@plt+0xddc>
    b0d4:	mov	x0, x19
    b0d8:	ldp	x19, x20, [sp, #16]
    b0dc:	ldp	x29, x30, [sp], #80
    b0e0:	ret
    b0e4:	ldp	x1, x2, [sp, #64]
    b0e8:	add	x4, sp, #0x2c
    b0ec:	add	x3, x20, #0x10
    b0f0:	add	x0, x0, #0x18
    b0f4:	add	x1, x1, #0x18
    b0f8:	add	x2, x2, #0x18
    b0fc:	bl	1b20c <PyInit__decimal@@Base+0xa284>
    b100:	ldr	x0, [sp, #64]
    b104:	bl	790c <PyFloat_FromString@plt+0xddc>
    b108:	ldr	x0, [sp, #72]
    b10c:	bl	790c <PyFloat_FromString@plt+0xddc>
    b110:	ldr	w1, [sp, #44]
    b114:	mov	x0, x20
    b118:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    b11c:	cbz	w0, b0d4 <PyFloat_FromString@plt+0x45a4>
    b120:	mov	x0, x19
    b124:	b	b0a4 <PyFloat_FromString@plt+0x4574>
    b128:	stp	x29, x30, [sp, #-80]!
    b12c:	mov	x29, sp
    b130:	add	x3, sp, #0x38
    b134:	add	x2, sp, #0x30
    b138:	stp	x19, x20, [sp, #16]
    b13c:	mov	x20, x0
    b140:	mov	x0, x1
    b144:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    b148:	add	x1, x1, #0xe7e
    b14c:	str	wzr, [sp, #44]
    b150:	bl	6980 <PyArg_ParseTuple@plt>
    b154:	cbnz	w0, b160 <PyFloat_FromString@plt+0x4630>
    b158:	mov	x19, #0x0                   	// #0
    b15c:	b	b1c4 <PyFloat_FromString@plt+0x4694>
    b160:	ldr	x2, [sp, #48]
    b164:	mov	x3, x20
    b168:	add	x1, sp, #0x40
    b16c:	mov	w0, #0x1                   	// #1
    b170:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b174:	cbz	w0, b158 <PyFloat_FromString@plt+0x4628>
    b178:	ldr	x2, [sp, #56]
    b17c:	mov	x3, x20
    b180:	add	x1, sp, #0x48
    b184:	mov	w0, #0x1                   	// #1
    b188:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b18c:	cbnz	w0, b19c <PyFloat_FromString@plt+0x466c>
    b190:	ldr	x0, [sp, #64]
    b194:	bl	790c <PyFloat_FromString@plt+0xddc>
    b198:	b	b158 <PyFloat_FromString@plt+0x4628>
    b19c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    b1a0:	add	x0, x0, #0x330
    b1a4:	add	x0, x0, #0x1a0
    b1a8:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    b1ac:	mov	x19, x0
    b1b0:	cbnz	x0, b1d4 <PyFloat_FromString@plt+0x46a4>
    b1b4:	ldr	x0, [sp, #64]
    b1b8:	bl	790c <PyFloat_FromString@plt+0xddc>
    b1bc:	ldr	x0, [sp, #72]
    b1c0:	bl	790c <PyFloat_FromString@plt+0xddc>
    b1c4:	mov	x0, x19
    b1c8:	ldp	x19, x20, [sp, #16]
    b1cc:	ldp	x29, x30, [sp], #80
    b1d0:	ret
    b1d4:	ldp	x1, x2, [sp, #64]
    b1d8:	add	x4, sp, #0x2c
    b1dc:	add	x3, x20, #0x10
    b1e0:	add	x0, x0, #0x18
    b1e4:	add	x1, x1, #0x18
    b1e8:	add	x2, x2, #0x18
    b1ec:	bl	1b83c <PyInit__decimal@@Base+0xa8b4>
    b1f0:	ldr	x0, [sp, #64]
    b1f4:	bl	790c <PyFloat_FromString@plt+0xddc>
    b1f8:	ldr	x0, [sp, #72]
    b1fc:	bl	790c <PyFloat_FromString@plt+0xddc>
    b200:	ldr	w1, [sp, #44]
    b204:	mov	x0, x20
    b208:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    b20c:	cbz	w0, b1c4 <PyFloat_FromString@plt+0x4694>
    b210:	mov	x0, x19
    b214:	b	b194 <PyFloat_FromString@plt+0x4664>
    b218:	stp	x29, x30, [sp, #-80]!
    b21c:	mov	x29, sp
    b220:	add	x3, sp, #0x38
    b224:	add	x2, sp, #0x30
    b228:	stp	x19, x20, [sp, #16]
    b22c:	mov	x20, x0
    b230:	mov	x0, x1
    b234:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    b238:	add	x1, x1, #0xe7e
    b23c:	str	wzr, [sp, #44]
    b240:	bl	6980 <PyArg_ParseTuple@plt>
    b244:	cbnz	w0, b250 <PyFloat_FromString@plt+0x4720>
    b248:	mov	x19, #0x0                   	// #0
    b24c:	b	b2b4 <PyFloat_FromString@plt+0x4784>
    b250:	ldr	x2, [sp, #48]
    b254:	mov	x3, x20
    b258:	add	x1, sp, #0x40
    b25c:	mov	w0, #0x1                   	// #1
    b260:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b264:	cbz	w0, b248 <PyFloat_FromString@plt+0x4718>
    b268:	ldr	x2, [sp, #56]
    b26c:	mov	x3, x20
    b270:	add	x1, sp, #0x48
    b274:	mov	w0, #0x1                   	// #1
    b278:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b27c:	cbnz	w0, b28c <PyFloat_FromString@plt+0x475c>
    b280:	ldr	x0, [sp, #64]
    b284:	bl	790c <PyFloat_FromString@plt+0xddc>
    b288:	b	b248 <PyFloat_FromString@plt+0x4718>
    b28c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    b290:	add	x0, x0, #0x330
    b294:	add	x0, x0, #0x1a0
    b298:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    b29c:	mov	x19, x0
    b2a0:	cbnz	x0, b2c4 <PyFloat_FromString@plt+0x4794>
    b2a4:	ldr	x0, [sp, #64]
    b2a8:	bl	790c <PyFloat_FromString@plt+0xddc>
    b2ac:	ldr	x0, [sp, #72]
    b2b0:	bl	790c <PyFloat_FromString@plt+0xddc>
    b2b4:	mov	x0, x19
    b2b8:	ldp	x19, x20, [sp, #16]
    b2bc:	ldp	x29, x30, [sp], #80
    b2c0:	ret
    b2c4:	ldp	x1, x2, [sp, #64]
    b2c8:	add	x4, sp, #0x2c
    b2cc:	add	x3, x20, #0x10
    b2d0:	add	x0, x0, #0x18
    b2d4:	add	x1, x1, #0x18
    b2d8:	add	x2, x2, #0x18
    b2dc:	bl	1ade4 <PyInit__decimal@@Base+0x9e5c>
    b2e0:	ldr	x0, [sp, #64]
    b2e4:	bl	790c <PyFloat_FromString@plt+0xddc>
    b2e8:	ldr	x0, [sp, #72]
    b2ec:	bl	790c <PyFloat_FromString@plt+0xddc>
    b2f0:	ldr	w1, [sp, #44]
    b2f4:	mov	x0, x20
    b2f8:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    b2fc:	cbz	w0, b2b4 <PyFloat_FromString@plt+0x4784>
    b300:	mov	x0, x19
    b304:	b	b284 <PyFloat_FromString@plt+0x4754>
    b308:	stp	x29, x30, [sp, #-80]!
    b30c:	mov	x29, sp
    b310:	add	x3, sp, #0x38
    b314:	add	x2, sp, #0x30
    b318:	stp	x19, x20, [sp, #16]
    b31c:	mov	x20, x0
    b320:	mov	x0, x1
    b324:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    b328:	add	x1, x1, #0xe7e
    b32c:	str	wzr, [sp, #44]
    b330:	bl	6980 <PyArg_ParseTuple@plt>
    b334:	cbnz	w0, b340 <PyFloat_FromString@plt+0x4810>
    b338:	mov	x19, #0x0                   	// #0
    b33c:	b	b3a4 <PyFloat_FromString@plt+0x4874>
    b340:	ldr	x2, [sp, #48]
    b344:	mov	x3, x20
    b348:	add	x1, sp, #0x40
    b34c:	mov	w0, #0x1                   	// #1
    b350:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b354:	cbz	w0, b338 <PyFloat_FromString@plt+0x4808>
    b358:	ldr	x2, [sp, #56]
    b35c:	mov	x3, x20
    b360:	add	x1, sp, #0x48
    b364:	mov	w0, #0x1                   	// #1
    b368:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b36c:	cbnz	w0, b37c <PyFloat_FromString@plt+0x484c>
    b370:	ldr	x0, [sp, #64]
    b374:	bl	790c <PyFloat_FromString@plt+0xddc>
    b378:	b	b338 <PyFloat_FromString@plt+0x4808>
    b37c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    b380:	add	x0, x0, #0x330
    b384:	add	x0, x0, #0x1a0
    b388:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    b38c:	mov	x19, x0
    b390:	cbnz	x0, b3b4 <PyFloat_FromString@plt+0x4884>
    b394:	ldr	x0, [sp, #64]
    b398:	bl	790c <PyFloat_FromString@plt+0xddc>
    b39c:	ldr	x0, [sp, #72]
    b3a0:	bl	790c <PyFloat_FromString@plt+0xddc>
    b3a4:	mov	x0, x19
    b3a8:	ldp	x19, x20, [sp, #16]
    b3ac:	ldp	x29, x30, [sp], #80
    b3b0:	ret
    b3b4:	ldp	x1, x2, [sp, #64]
    b3b8:	add	x4, sp, #0x2c
    b3bc:	add	x3, x20, #0x10
    b3c0:	add	x0, x0, #0x18
    b3c4:	add	x1, x1, #0x18
    b3c8:	add	x2, x2, #0x18
    b3cc:	bl	1a66c <PyInit__decimal@@Base+0x96e4>
    b3d0:	ldr	x0, [sp, #64]
    b3d4:	bl	790c <PyFloat_FromString@plt+0xddc>
    b3d8:	ldr	x0, [sp, #72]
    b3dc:	bl	790c <PyFloat_FromString@plt+0xddc>
    b3e0:	ldr	w1, [sp, #44]
    b3e4:	mov	x0, x20
    b3e8:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    b3ec:	cbz	w0, b3a4 <PyFloat_FromString@plt+0x4874>
    b3f0:	mov	x0, x19
    b3f4:	b	b374 <PyFloat_FromString@plt+0x4844>
    b3f8:	stp	x29, x30, [sp, #-80]!
    b3fc:	mov	x29, sp
    b400:	add	x3, sp, #0x38
    b404:	add	x2, sp, #0x30
    b408:	stp	x19, x20, [sp, #16]
    b40c:	mov	x20, x0
    b410:	mov	x0, x1
    b414:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    b418:	add	x1, x1, #0xe7e
    b41c:	str	wzr, [sp, #44]
    b420:	bl	6980 <PyArg_ParseTuple@plt>
    b424:	cbnz	w0, b430 <PyFloat_FromString@plt+0x4900>
    b428:	mov	x19, #0x0                   	// #0
    b42c:	b	b494 <PyFloat_FromString@plt+0x4964>
    b430:	ldr	x2, [sp, #48]
    b434:	mov	x3, x20
    b438:	add	x1, sp, #0x40
    b43c:	mov	w0, #0x1                   	// #1
    b440:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b444:	cbz	w0, b428 <PyFloat_FromString@plt+0x48f8>
    b448:	ldr	x2, [sp, #56]
    b44c:	mov	x3, x20
    b450:	add	x1, sp, #0x48
    b454:	mov	w0, #0x1                   	// #1
    b458:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b45c:	cbnz	w0, b46c <PyFloat_FromString@plt+0x493c>
    b460:	ldr	x0, [sp, #64]
    b464:	bl	790c <PyFloat_FromString@plt+0xddc>
    b468:	b	b428 <PyFloat_FromString@plt+0x48f8>
    b46c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    b470:	add	x0, x0, #0x330
    b474:	add	x0, x0, #0x1a0
    b478:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    b47c:	mov	x19, x0
    b480:	cbnz	x0, b4a4 <PyFloat_FromString@plt+0x4974>
    b484:	ldr	x0, [sp, #64]
    b488:	bl	790c <PyFloat_FromString@plt+0xddc>
    b48c:	ldr	x0, [sp, #72]
    b490:	bl	790c <PyFloat_FromString@plt+0xddc>
    b494:	mov	x0, x19
    b498:	ldp	x19, x20, [sp, #16]
    b49c:	ldp	x29, x30, [sp], #80
    b4a0:	ret
    b4a4:	ldp	x1, x2, [sp, #64]
    b4a8:	add	x3, sp, #0x2c
    b4ac:	add	x0, x0, #0x18
    b4b0:	add	x1, x1, #0x18
    b4b4:	add	x2, x2, #0x18
    b4b8:	bl	19384 <PyInit__decimal@@Base+0x83fc>
    b4bc:	ldr	x0, [sp, #64]
    b4c0:	bl	790c <PyFloat_FromString@plt+0xddc>
    b4c4:	ldr	x0, [sp, #72]
    b4c8:	bl	790c <PyFloat_FromString@plt+0xddc>
    b4cc:	ldr	w1, [sp, #44]
    b4d0:	mov	x0, x20
    b4d4:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    b4d8:	cbz	w0, b494 <PyFloat_FromString@plt+0x4964>
    b4dc:	mov	x0, x19
    b4e0:	b	b464 <PyFloat_FromString@plt+0x4934>
    b4e4:	stp	x29, x30, [sp, #-64]!
    b4e8:	mov	x29, sp
    b4ec:	add	x3, sp, #0x28
    b4f0:	add	x2, sp, #0x20
    b4f4:	str	x19, [sp, #16]
    b4f8:	mov	x19, x0
    b4fc:	mov	x0, x1
    b500:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    b504:	add	x1, x1, #0xe7e
    b508:	bl	6980 <PyArg_ParseTuple@plt>
    b50c:	cbnz	w0, b524 <PyFloat_FromString@plt+0x49f4>
    b510:	mov	x19, #0x0                   	// #0
    b514:	mov	x0, x19
    b518:	ldr	x19, [sp, #16]
    b51c:	ldp	x29, x30, [sp], #64
    b520:	ret
    b524:	ldr	x2, [sp, #32]
    b528:	mov	x3, x19
    b52c:	add	x1, sp, #0x30
    b530:	mov	w0, #0x1                   	// #1
    b534:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b538:	cbz	w0, b510 <PyFloat_FromString@plt+0x49e0>
    b53c:	ldr	x2, [sp, #40]
    b540:	mov	x3, x19
    b544:	add	x1, sp, #0x38
    b548:	mov	w0, #0x1                   	// #1
    b54c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b550:	cbnz	w0, b560 <PyFloat_FromString@plt+0x4a30>
    b554:	ldr	x0, [sp, #48]
    b558:	bl	790c <PyFloat_FromString@plt+0xddc>
    b55c:	b	b510 <PyFloat_FromString@plt+0x49e0>
    b560:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    b564:	add	x0, x0, #0x330
    b568:	add	x0, x0, #0x1a0
    b56c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    b570:	mov	x19, x0
    b574:	cbnz	x0, b58c <PyFloat_FromString@plt+0x4a5c>
    b578:	ldr	x0, [sp, #48]
    b57c:	bl	790c <PyFloat_FromString@plt+0xddc>
    b580:	ldr	x0, [sp, #56]
    b584:	bl	790c <PyFloat_FromString@plt+0xddc>
    b588:	b	b514 <PyFloat_FromString@plt+0x49e4>
    b58c:	ldp	x1, x2, [sp, #48]
    b590:	add	x0, x0, #0x18
    b594:	add	x2, x2, #0x18
    b598:	add	x1, x1, #0x18
    b59c:	bl	196d0 <PyInit__decimal@@Base+0x8748>
    b5a0:	b	b578 <PyFloat_FromString@plt+0x4a48>
    b5a4:	stp	x29, x30, [sp, #-64]!
    b5a8:	mov	x29, sp
    b5ac:	add	x3, sp, #0x28
    b5b0:	add	x2, sp, #0x20
    b5b4:	str	x19, [sp, #16]
    b5b8:	mov	x19, x0
    b5bc:	mov	x0, x1
    b5c0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    b5c4:	add	x1, x1, #0xe7e
    b5c8:	bl	6980 <PyArg_ParseTuple@plt>
    b5cc:	cbnz	w0, b5e4 <PyFloat_FromString@plt+0x4ab4>
    b5d0:	mov	x19, #0x0                   	// #0
    b5d4:	mov	x0, x19
    b5d8:	ldr	x19, [sp, #16]
    b5dc:	ldp	x29, x30, [sp], #64
    b5e0:	ret
    b5e4:	ldr	x2, [sp, #32]
    b5e8:	mov	x3, x19
    b5ec:	add	x1, sp, #0x30
    b5f0:	mov	w0, #0x1                   	// #1
    b5f4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b5f8:	cbz	w0, b5d0 <PyFloat_FromString@plt+0x4aa0>
    b5fc:	ldr	x2, [sp, #40]
    b600:	mov	x3, x19
    b604:	add	x1, sp, #0x38
    b608:	mov	w0, #0x1                   	// #1
    b60c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b610:	cbnz	w0, b620 <PyFloat_FromString@plt+0x4af0>
    b614:	ldr	x0, [sp, #48]
    b618:	bl	790c <PyFloat_FromString@plt+0xddc>
    b61c:	b	b5d0 <PyFloat_FromString@plt+0x4aa0>
    b620:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    b624:	add	x0, x0, #0x330
    b628:	add	x0, x0, #0x1a0
    b62c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    b630:	mov	x19, x0
    b634:	cbnz	x0, b64c <PyFloat_FromString@plt+0x4b1c>
    b638:	ldr	x0, [sp, #48]
    b63c:	bl	790c <PyFloat_FromString@plt+0xddc>
    b640:	ldr	x0, [sp, #56]
    b644:	bl	790c <PyFloat_FromString@plt+0xddc>
    b648:	b	b5d4 <PyFloat_FromString@plt+0x4aa4>
    b64c:	ldp	x1, x2, [sp, #48]
    b650:	add	x0, x0, #0x18
    b654:	add	x2, x2, #0x18
    b658:	add	x1, x1, #0x18
    b65c:	bl	19634 <PyInit__decimal@@Base+0x86ac>
    b660:	b	b638 <PyFloat_FromString@plt+0x4b08>
    b664:	stp	x29, x30, [sp, #-48]!
    b668:	mov	x3, x0
    b66c:	mov	x2, x1
    b670:	mov	x29, sp
    b674:	add	x1, sp, #0x20
    b678:	str	x19, [sp, #16]
    b67c:	mov	x19, x0
    b680:	mov	w0, #0x1                   	// #1
    b684:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b688:	cbz	w0, b6b4 <PyFloat_FromString@plt+0x4b84>
    b68c:	ldr	w2, [x19, #80]
    b690:	add	x0, sp, #0x28
    b694:	ldr	x1, [sp, #32]
    b698:	add	x1, x1, #0x18
    b69c:	bl	14e6c <PyInit__decimal@@Base+0x3ee4>
    b6a0:	mov	x19, x0
    b6a4:	ldr	x0, [sp, #32]
    b6a8:	bl	790c <PyFloat_FromString@plt+0xddc>
    b6ac:	tbz	x19, #63, b6bc <PyFloat_FromString@plt+0x4b8c>
    b6b0:	bl	6670 <PyErr_NoMemory@plt>
    b6b4:	mov	x19, #0x0                   	// #0
    b6b8:	b	b6dc <PyFloat_FromString@plt+0x4bac>
    b6bc:	ldr	x0, [sp, #40]
    b6c0:	mov	x1, x19
    b6c4:	bl	71a4 <PyFloat_FromString@plt+0x674>
    b6c8:	mov	x19, x0
    b6cc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
    b6d0:	ldr	x1, [x0, #1720]
    b6d4:	ldr	x0, [sp, #40]
    b6d8:	blr	x1
    b6dc:	mov	x0, x19
    b6e0:	ldr	x19, [sp, #16]
    b6e4:	ldp	x29, x30, [sp], #48
    b6e8:	ret
    b6ec:	stp	x29, x30, [sp, #-48]!
    b6f0:	mov	x3, x0
    b6f4:	mov	x2, x1
    b6f8:	mov	x29, sp
    b6fc:	add	x1, sp, #0x20
    b700:	str	x19, [sp, #16]
    b704:	mov	x19, x0
    b708:	mov	w0, #0x1                   	// #1
    b70c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b710:	cbz	w0, b73c <PyFloat_FromString@plt+0x4c0c>
    b714:	ldr	w2, [x19, #80]
    b718:	add	x0, sp, #0x28
    b71c:	ldr	x1, [sp, #32]
    b720:	add	x1, x1, #0x18
    b724:	bl	14e58 <PyInit__decimal@@Base+0x3ed0>
    b728:	mov	x19, x0
    b72c:	ldr	x0, [sp, #32]
    b730:	bl	790c <PyFloat_FromString@plt+0xddc>
    b734:	tbz	x19, #63, b744 <PyFloat_FromString@plt+0x4c14>
    b738:	bl	6670 <PyErr_NoMemory@plt>
    b73c:	mov	x19, #0x0                   	// #0
    b740:	b	b764 <PyFloat_FromString@plt+0x4c34>
    b744:	ldr	x0, [sp, #40]
    b748:	mov	x1, x19
    b74c:	bl	71a4 <PyFloat_FromString@plt+0x674>
    b750:	mov	x19, x0
    b754:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
    b758:	ldr	x1, [x0, #1720]
    b75c:	ldr	x0, [sp, #40]
    b760:	blr	x1
    b764:	mov	x0, x19
    b768:	ldr	x19, [sp, #16]
    b76c:	ldp	x29, x30, [sp], #48
    b770:	ret
    b774:	stp	x29, x30, [sp, #-48]!
    b778:	mov	x3, x0
    b77c:	mov	x2, x1
    b780:	mov	x29, sp
    b784:	add	x1, sp, #0x28
    b788:	str	x19, [sp, #16]
    b78c:	mov	x19, x0
    b790:	mov	w0, #0x1                   	// #1
    b794:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b798:	cbz	w0, b7cc <PyFloat_FromString@plt+0x4c9c>
    b79c:	ldr	x0, [sp, #40]
    b7a0:	add	x1, x19, #0x10
    b7a4:	add	x0, x0, #0x18
    b7a8:	bl	1aa80 <PyInit__decimal@@Base+0x9af8>
    b7ac:	mov	x19, x0
    b7b0:	ldr	x0, [sp, #40]
    b7b4:	bl	790c <PyFloat_FromString@plt+0xddc>
    b7b8:	mov	x0, x19
    b7bc:	bl	6a00 <PyUnicode_FromString@plt>
    b7c0:	ldr	x19, [sp, #16]
    b7c4:	ldp	x29, x30, [sp], #48
    b7c8:	ret
    b7cc:	mov	x0, #0x0                   	// #0
    b7d0:	b	b7c0 <PyFloat_FromString@plt+0x4c90>
    b7d4:	stp	x29, x30, [sp, #-48]!
    b7d8:	mov	x3, x0
    b7dc:	mov	x2, x1
    b7e0:	mov	x29, sp
    b7e4:	add	x1, sp, #0x28
    b7e8:	stp	x19, x20, [sp, #16]
    b7ec:	mov	x20, x0
    b7f0:	mov	w0, #0x1                   	// #1
    b7f4:	str	wzr, [sp, #36]
    b7f8:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b7fc:	cbz	w0, b868 <PyFloat_FromString@plt+0x4d38>
    b800:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    b804:	add	x0, x0, #0x330
    b808:	add	x0, x0, #0x1a0
    b80c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    b810:	mov	x19, x0
    b814:	cbnz	x0, b830 <PyFloat_FromString@plt+0x4d00>
    b818:	ldr	x0, [sp, #40]
    b81c:	bl	790c <PyFloat_FromString@plt+0xddc>
    b820:	mov	x0, x19
    b824:	ldp	x19, x20, [sp, #16]
    b828:	ldp	x29, x30, [sp], #48
    b82c:	ret
    b830:	ldr	x1, [sp, #40]
    b834:	add	x3, sp, #0x24
    b838:	add	x2, x20, #0x10
    b83c:	add	x0, x0, #0x18
    b840:	add	x1, x1, #0x18
    b844:	bl	1ab68 <PyInit__decimal@@Base+0x9be0>
    b848:	ldr	x0, [sp, #40]
    b84c:	bl	790c <PyFloat_FromString@plt+0xddc>
    b850:	ldr	w1, [sp, #36]
    b854:	mov	x0, x20
    b858:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    b85c:	cbz	w0, b820 <PyFloat_FromString@plt+0x4cf0>
    b860:	mov	x0, x19
    b864:	bl	790c <PyFloat_FromString@plt+0xddc>
    b868:	mov	x19, #0x0                   	// #0
    b86c:	b	b820 <PyFloat_FromString@plt+0x4cf0>
    b870:	stp	x29, x30, [sp, #-48]!
    b874:	mov	x3, x0
    b878:	mov	x2, x1
    b87c:	mov	x29, sp
    b880:	add	x1, sp, #0x28
    b884:	stp	x19, x20, [sp, #16]
    b888:	mov	x20, x0
    b88c:	mov	w0, #0x1                   	// #1
    b890:	str	wzr, [sp, #36]
    b894:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b898:	cbz	w0, b904 <PyFloat_FromString@plt+0x4dd4>
    b89c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    b8a0:	add	x0, x0, #0x330
    b8a4:	add	x0, x0, #0x1a0
    b8a8:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    b8ac:	mov	x19, x0
    b8b0:	cbnz	x0, b8cc <PyFloat_FromString@plt+0x4d9c>
    b8b4:	ldr	x0, [sp, #40]
    b8b8:	bl	790c <PyFloat_FromString@plt+0xddc>
    b8bc:	mov	x0, x19
    b8c0:	ldp	x19, x20, [sp, #16]
    b8c4:	ldp	x29, x30, [sp], #48
    b8c8:	ret
    b8cc:	ldr	x1, [sp, #40]
    b8d0:	add	x3, sp, #0x24
    b8d4:	add	x2, x20, #0x10
    b8d8:	add	x0, x0, #0x18
    b8dc:	add	x1, x1, #0x18
    b8e0:	bl	1ad50 <PyInit__decimal@@Base+0x9dc8>
    b8e4:	ldr	x0, [sp, #40]
    b8e8:	bl	790c <PyFloat_FromString@plt+0xddc>
    b8ec:	ldr	w1, [sp, #36]
    b8f0:	mov	x0, x20
    b8f4:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    b8f8:	cbz	w0, b8bc <PyFloat_FromString@plt+0x4d8c>
    b8fc:	mov	x0, x19
    b900:	bl	790c <PyFloat_FromString@plt+0xddc>
    b904:	mov	x19, #0x0                   	// #0
    b908:	b	b8bc <PyFloat_FromString@plt+0x4d8c>
    b90c:	stp	x29, x30, [sp, #-48]!
    b910:	mov	x3, x0
    b914:	mov	x2, x1
    b918:	mov	x29, sp
    b91c:	add	x1, sp, #0x28
    b920:	stp	x19, x20, [sp, #16]
    b924:	mov	x20, x0
    b928:	mov	w0, #0x1                   	// #1
    b92c:	str	wzr, [sp, #36]
    b930:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b934:	cbz	w0, b99c <PyFloat_FromString@plt+0x4e6c>
    b938:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    b93c:	add	x0, x0, #0x330
    b940:	add	x0, x0, #0x1a0
    b944:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    b948:	mov	x19, x0
    b94c:	cbnz	x0, b968 <PyFloat_FromString@plt+0x4e38>
    b950:	ldr	x0, [sp, #40]
    b954:	bl	790c <PyFloat_FromString@plt+0xddc>
    b958:	mov	x0, x19
    b95c:	ldp	x19, x20, [sp, #16]
    b960:	ldp	x29, x30, [sp], #48
    b964:	ret
    b968:	ldr	x1, [sp, #40]
    b96c:	add	x2, sp, #0x24
    b970:	add	x0, x0, #0x18
    b974:	add	x1, x1, #0x18
    b978:	bl	19350 <PyInit__decimal@@Base+0x83c8>
    b97c:	ldr	x0, [sp, #40]
    b980:	bl	790c <PyFloat_FromString@plt+0xddc>
    b984:	ldr	w1, [sp, #36]
    b988:	mov	x0, x20
    b98c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    b990:	cbz	w0, b958 <PyFloat_FromString@plt+0x4e28>
    b994:	mov	x0, x19
    b998:	bl	790c <PyFloat_FromString@plt+0xddc>
    b99c:	mov	x19, #0x0                   	// #0
    b9a0:	b	b958 <PyFloat_FromString@plt+0x4e28>
    b9a4:	stp	x29, x30, [sp, #-48]!
    b9a8:	mov	x3, x0
    b9ac:	mov	x2, x1
    b9b0:	mov	x29, sp
    b9b4:	add	x1, sp, #0x28
    b9b8:	stp	x19, x20, [sp, #16]
    b9bc:	mov	x20, x0
    b9c0:	mov	w0, #0x1                   	// #1
    b9c4:	str	wzr, [sp, #36]
    b9c8:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    b9cc:	cbz	w0, ba34 <PyFloat_FromString@plt+0x4f04>
    b9d0:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    b9d4:	add	x0, x0, #0x330
    b9d8:	add	x0, x0, #0x1a0
    b9dc:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    b9e0:	mov	x19, x0
    b9e4:	cbnz	x0, ba00 <PyFloat_FromString@plt+0x4ed0>
    b9e8:	ldr	x0, [sp, #40]
    b9ec:	bl	790c <PyFloat_FromString@plt+0xddc>
    b9f0:	mov	x0, x19
    b9f4:	ldp	x19, x20, [sp, #16]
    b9f8:	ldp	x29, x30, [sp], #48
    b9fc:	ret
    ba00:	ldr	x1, [sp, #40]
    ba04:	add	x2, sp, #0x24
    ba08:	add	x0, x0, #0x18
    ba0c:	add	x1, x1, #0x18
    ba10:	bl	1931c <PyInit__decimal@@Base+0x8394>
    ba14:	ldr	x0, [sp, #40]
    ba18:	bl	790c <PyFloat_FromString@plt+0xddc>
    ba1c:	ldr	w1, [sp, #36]
    ba20:	mov	x0, x20
    ba24:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    ba28:	cbz	w0, b9f0 <PyFloat_FromString@plt+0x4ec0>
    ba2c:	mov	x0, x19
    ba30:	bl	790c <PyFloat_FromString@plt+0xddc>
    ba34:	mov	x19, #0x0                   	// #0
    ba38:	b	b9f0 <PyFloat_FromString@plt+0x4ec0>
    ba3c:	stp	x29, x30, [sp, #-48]!
    ba40:	mov	x3, x0
    ba44:	mov	x2, x1
    ba48:	mov	x29, sp
    ba4c:	add	x1, sp, #0x28
    ba50:	str	x19, [sp, #16]
    ba54:	mov	x19, x0
    ba58:	mov	w0, #0x1                   	// #1
    ba5c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    ba60:	cbz	w0, ba8c <PyFloat_FromString@plt+0x4f5c>
    ba64:	ldr	x0, [sp, #40]
    ba68:	mov	x1, x19
    ba6c:	bl	9d38 <PyFloat_FromString@plt+0x3208>
    ba70:	mov	x19, x0
    ba74:	ldr	x0, [sp, #40]
    ba78:	bl	790c <PyFloat_FromString@plt+0xddc>
    ba7c:	mov	x0, x19
    ba80:	ldr	x19, [sp, #16]
    ba84:	ldp	x29, x30, [sp], #48
    ba88:	ret
    ba8c:	mov	x19, #0x0                   	// #0
    ba90:	b	ba7c <PyFloat_FromString@plt+0x4f4c>
    ba94:	stp	x29, x30, [sp, #-48]!
    ba98:	mov	x3, x0
    ba9c:	mov	x2, x1
    baa0:	mov	x29, sp
    baa4:	add	x1, sp, #0x28
    baa8:	mov	w0, #0x1                   	// #1
    baac:	str	x19, [sp, #16]
    bab0:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    bab4:	cbz	w0, baf0 <PyFloat_FromString@plt+0x4fc0>
    bab8:	ldr	x0, [sp, #40]
    babc:	add	x0, x0, #0x18
    bac0:	bl	179e4 <PyInit__decimal@@Base+0x6a5c>
    bac4:	cbz	w0, bae8 <PyFloat_FromString@plt+0x4fb8>
    bac8:	bl	6c14 <PyFloat_FromString@plt+0xe4>
    bacc:	mov	x19, x0
    bad0:	ldr	x0, [sp, #40]
    bad4:	bl	790c <PyFloat_FromString@plt+0xddc>
    bad8:	mov	x0, x19
    badc:	ldr	x19, [sp, #16]
    bae0:	ldp	x29, x30, [sp], #48
    bae4:	ret
    bae8:	bl	6c2c <PyFloat_FromString@plt+0xfc>
    baec:	b	bacc <PyFloat_FromString@plt+0x4f9c>
    baf0:	mov	x19, #0x0                   	// #0
    baf4:	b	bad8 <PyFloat_FromString@plt+0x4fa8>
    baf8:	stp	x29, x30, [sp, #-48]!
    bafc:	mov	x3, x0
    bb00:	mov	x2, x1
    bb04:	mov	x29, sp
    bb08:	add	x1, sp, #0x28
    bb0c:	str	x19, [sp, #16]
    bb10:	mov	x19, x0
    bb14:	mov	w0, #0x1                   	// #1
    bb18:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    bb1c:	cbz	w0, bb5c <PyFloat_FromString@plt+0x502c>
    bb20:	ldr	x0, [sp, #40]
    bb24:	add	x1, x19, #0x10
    bb28:	add	x0, x0, #0x18
    bb2c:	bl	17a74 <PyInit__decimal@@Base+0x6aec>
    bb30:	cbz	w0, bb54 <PyFloat_FromString@plt+0x5024>
    bb34:	bl	6c14 <PyFloat_FromString@plt+0xe4>
    bb38:	mov	x19, x0
    bb3c:	ldr	x0, [sp, #40]
    bb40:	bl	790c <PyFloat_FromString@plt+0xddc>
    bb44:	mov	x0, x19
    bb48:	ldr	x19, [sp, #16]
    bb4c:	ldp	x29, x30, [sp], #48
    bb50:	ret
    bb54:	bl	6c2c <PyFloat_FromString@plt+0xfc>
    bb58:	b	bb38 <PyFloat_FromString@plt+0x5008>
    bb5c:	mov	x19, #0x0                   	// #0
    bb60:	b	bb44 <PyFloat_FromString@plt+0x5014>
    bb64:	stp	x29, x30, [sp, #-48]!
    bb68:	mov	x3, x0
    bb6c:	mov	x2, x1
    bb70:	mov	x29, sp
    bb74:	add	x1, sp, #0x28
    bb78:	mov	w0, #0x1                   	// #1
    bb7c:	str	x19, [sp, #16]
    bb80:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    bb84:	cbz	w0, bbc0 <PyFloat_FromString@plt+0x5090>
    bb88:	ldr	x0, [sp, #40]
    bb8c:	add	x0, x0, #0x18
    bb90:	bl	179cc <PyInit__decimal@@Base+0x6a44>
    bb94:	cbz	w0, bbb8 <PyFloat_FromString@plt+0x5088>
    bb98:	bl	6c14 <PyFloat_FromString@plt+0xe4>
    bb9c:	mov	x19, x0
    bba0:	ldr	x0, [sp, #40]
    bba4:	bl	790c <PyFloat_FromString@plt+0xddc>
    bba8:	mov	x0, x19
    bbac:	ldr	x19, [sp, #16]
    bbb0:	ldp	x29, x30, [sp], #48
    bbb4:	ret
    bbb8:	bl	6c2c <PyFloat_FromString@plt+0xfc>
    bbbc:	b	bb9c <PyFloat_FromString@plt+0x506c>
    bbc0:	mov	x19, #0x0                   	// #0
    bbc4:	b	bba8 <PyFloat_FromString@plt+0x5078>
    bbc8:	stp	x29, x30, [sp, #-48]!
    bbcc:	mov	x3, x0
    bbd0:	mov	x2, x1
    bbd4:	mov	x29, sp
    bbd8:	add	x1, sp, #0x28
    bbdc:	mov	w0, #0x1                   	// #1
    bbe0:	str	x19, [sp, #16]
    bbe4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    bbe8:	cbz	w0, bc24 <PyFloat_FromString@plt+0x50f4>
    bbec:	ldr	x0, [sp, #40]
    bbf0:	add	x0, x0, #0x18
    bbf4:	bl	179c0 <PyInit__decimal@@Base+0x6a38>
    bbf8:	cbz	w0, bc1c <PyFloat_FromString@plt+0x50ec>
    bbfc:	bl	6c14 <PyFloat_FromString@plt+0xe4>
    bc00:	mov	x19, x0
    bc04:	ldr	x0, [sp, #40]
    bc08:	bl	790c <PyFloat_FromString@plt+0xddc>
    bc0c:	mov	x0, x19
    bc10:	ldr	x19, [sp, #16]
    bc14:	ldp	x29, x30, [sp], #48
    bc18:	ret
    bc1c:	bl	6c2c <PyFloat_FromString@plt+0xfc>
    bc20:	b	bc00 <PyFloat_FromString@plt+0x50d0>
    bc24:	mov	x19, #0x0                   	// #0
    bc28:	b	bc0c <PyFloat_FromString@plt+0x50dc>
    bc2c:	stp	x29, x30, [sp, #-48]!
    bc30:	mov	x3, x0
    bc34:	mov	x2, x1
    bc38:	mov	x29, sp
    bc3c:	add	x1, sp, #0x28
    bc40:	mov	w0, #0x1                   	// #1
    bc44:	str	x19, [sp, #16]
    bc48:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    bc4c:	cbz	w0, bc88 <PyFloat_FromString@plt+0x5158>
    bc50:	ldr	x0, [sp, #40]
    bc54:	add	x0, x0, #0x18
    bc58:	bl	179b4 <PyInit__decimal@@Base+0x6a2c>
    bc5c:	cbz	w0, bc80 <PyFloat_FromString@plt+0x5150>
    bc60:	bl	6c14 <PyFloat_FromString@plt+0xe4>
    bc64:	mov	x19, x0
    bc68:	ldr	x0, [sp, #40]
    bc6c:	bl	790c <PyFloat_FromString@plt+0xddc>
    bc70:	mov	x0, x19
    bc74:	ldr	x19, [sp, #16]
    bc78:	ldp	x29, x30, [sp], #48
    bc7c:	ret
    bc80:	bl	6c2c <PyFloat_FromString@plt+0xfc>
    bc84:	b	bc64 <PyFloat_FromString@plt+0x5134>
    bc88:	mov	x19, #0x0                   	// #0
    bc8c:	b	bc70 <PyFloat_FromString@plt+0x5140>
    bc90:	stp	x29, x30, [sp, #-48]!
    bc94:	mov	x3, x0
    bc98:	mov	x2, x1
    bc9c:	mov	x29, sp
    bca0:	add	x1, sp, #0x28
    bca4:	str	x19, [sp, #16]
    bca8:	mov	x19, x0
    bcac:	mov	w0, #0x1                   	// #1
    bcb0:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    bcb4:	cbz	w0, bcf4 <PyFloat_FromString@plt+0x51c4>
    bcb8:	ldr	x0, [sp, #40]
    bcbc:	add	x1, x19, #0x10
    bcc0:	add	x0, x0, #0x18
    bcc4:	bl	17a30 <PyInit__decimal@@Base+0x6aa8>
    bcc8:	cbz	w0, bcec <PyFloat_FromString@plt+0x51bc>
    bccc:	bl	6c14 <PyFloat_FromString@plt+0xe4>
    bcd0:	mov	x19, x0
    bcd4:	ldr	x0, [sp, #40]
    bcd8:	bl	790c <PyFloat_FromString@plt+0xddc>
    bcdc:	mov	x0, x19
    bce0:	ldr	x19, [sp, #16]
    bce4:	ldp	x29, x30, [sp], #48
    bce8:	ret
    bcec:	bl	6c2c <PyFloat_FromString@plt+0xfc>
    bcf0:	b	bcd0 <PyFloat_FromString@plt+0x51a0>
    bcf4:	mov	x19, #0x0                   	// #0
    bcf8:	b	bcdc <PyFloat_FromString@plt+0x51ac>
    bcfc:	stp	x29, x30, [sp, #-48]!
    bd00:	mov	x3, x0
    bd04:	mov	x2, x1
    bd08:	mov	x29, sp
    bd0c:	add	x1, sp, #0x28
    bd10:	mov	w0, #0x1                   	// #1
    bd14:	str	x19, [sp, #16]
    bd18:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    bd1c:	cbz	w0, bd58 <PyFloat_FromString@plt+0x5228>
    bd20:	ldr	x0, [sp, #40]
    bd24:	add	x0, x0, #0x18
    bd28:	bl	1798c <PyInit__decimal@@Base+0x6a04>
    bd2c:	cbz	w0, bd50 <PyFloat_FromString@plt+0x5220>
    bd30:	bl	6c14 <PyFloat_FromString@plt+0xe4>
    bd34:	mov	x19, x0
    bd38:	ldr	x0, [sp, #40]
    bd3c:	bl	790c <PyFloat_FromString@plt+0xddc>
    bd40:	mov	x0, x19
    bd44:	ldr	x19, [sp, #16]
    bd48:	ldp	x29, x30, [sp], #48
    bd4c:	ret
    bd50:	bl	6c2c <PyFloat_FromString@plt+0xfc>
    bd54:	b	bd34 <PyFloat_FromString@plt+0x5204>
    bd58:	mov	x19, #0x0                   	// #0
    bd5c:	b	bd40 <PyFloat_FromString@plt+0x5210>
    bd60:	stp	x29, x30, [sp, #-48]!
    bd64:	mov	x3, x0
    bd68:	mov	x2, x1
    bd6c:	mov	x29, sp
    bd70:	add	x1, sp, #0x28
    bd74:	mov	w0, #0x1                   	// #1
    bd78:	str	x19, [sp, #16]
    bd7c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    bd80:	cbz	w0, bdbc <PyFloat_FromString@plt+0x528c>
    bd84:	ldr	x0, [sp, #40]
    bd88:	add	x0, x0, #0x18
    bd8c:	bl	17980 <PyInit__decimal@@Base+0x69f8>
    bd90:	cbz	w0, bdb4 <PyFloat_FromString@plt+0x5284>
    bd94:	bl	6c14 <PyFloat_FromString@plt+0xe4>
    bd98:	mov	x19, x0
    bd9c:	ldr	x0, [sp, #40]
    bda0:	bl	790c <PyFloat_FromString@plt+0xddc>
    bda4:	mov	x0, x19
    bda8:	ldr	x19, [sp, #16]
    bdac:	ldp	x29, x30, [sp], #48
    bdb0:	ret
    bdb4:	bl	6c2c <PyFloat_FromString@plt+0xfc>
    bdb8:	b	bd98 <PyFloat_FromString@plt+0x5268>
    bdbc:	mov	x19, #0x0                   	// #0
    bdc0:	b	bda4 <PyFloat_FromString@plt+0x5274>
    bdc4:	stp	x29, x30, [sp, #-48]!
    bdc8:	mov	x3, x0
    bdcc:	mov	x2, x1
    bdd0:	mov	x29, sp
    bdd4:	add	x1, sp, #0x28
    bdd8:	mov	w0, #0x1                   	// #1
    bddc:	str	x19, [sp, #16]
    bde0:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    bde4:	cbz	w0, be20 <PyFloat_FromString@plt+0x52f0>
    bde8:	ldr	x0, [sp, #40]
    bdec:	add	x0, x0, #0x18
    bdf0:	bl	17970 <PyInit__decimal@@Base+0x69e8>
    bdf4:	cbz	w0, be18 <PyFloat_FromString@plt+0x52e8>
    bdf8:	bl	6c14 <PyFloat_FromString@plt+0xe4>
    bdfc:	mov	x19, x0
    be00:	ldr	x0, [sp, #40]
    be04:	bl	790c <PyFloat_FromString@plt+0xddc>
    be08:	mov	x0, x19
    be0c:	ldr	x19, [sp, #16]
    be10:	ldp	x29, x30, [sp], #48
    be14:	ret
    be18:	bl	6c2c <PyFloat_FromString@plt+0xfc>
    be1c:	b	bdfc <PyFloat_FromString@plt+0x52cc>
    be20:	mov	x19, #0x0                   	// #0
    be24:	b	be08 <PyFloat_FromString@plt+0x52d8>
    be28:	stp	x29, x30, [sp, #-96]!
    be2c:	mov	x29, sp
    be30:	add	x4, sp, #0x40
    be34:	add	x3, sp, #0x38
    be38:	add	x2, sp, #0x30
    be3c:	stp	x19, x20, [sp, #16]
    be40:	mov	x20, x0
    be44:	mov	x0, x1
    be48:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    be4c:	add	x1, x1, #0xe7d
    be50:	str	wzr, [sp, #44]
    be54:	bl	6980 <PyArg_ParseTuple@plt>
    be58:	cbnz	w0, be64 <PyFloat_FromString@plt+0x5334>
    be5c:	mov	x19, #0x0                   	// #0
    be60:	b	bef8 <PyFloat_FromString@plt+0x53c8>
    be64:	ldr	x2, [sp, #48]
    be68:	mov	x3, x20
    be6c:	add	x1, sp, #0x48
    be70:	mov	w0, #0x1                   	// #1
    be74:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    be78:	cbz	w0, be5c <PyFloat_FromString@plt+0x532c>
    be7c:	ldr	x2, [sp, #56]
    be80:	mov	x3, x20
    be84:	add	x1, sp, #0x50
    be88:	mov	w0, #0x1                   	// #1
    be8c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    be90:	cbnz	w0, bea0 <PyFloat_FromString@plt+0x5370>
    be94:	ldr	x0, [sp, #72]
    be98:	bl	790c <PyFloat_FromString@plt+0xddc>
    be9c:	b	be5c <PyFloat_FromString@plt+0x532c>
    bea0:	ldr	x2, [sp, #64]
    bea4:	mov	x3, x20
    bea8:	add	x1, sp, #0x58
    beac:	mov	w0, #0x1                   	// #1
    beb0:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    beb4:	cbnz	w0, bec8 <PyFloat_FromString@plt+0x5398>
    beb8:	ldr	x0, [sp, #72]
    bebc:	bl	790c <PyFloat_FromString@plt+0xddc>
    bec0:	ldr	x0, [sp, #80]
    bec4:	b	be98 <PyFloat_FromString@plt+0x5368>
    bec8:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    becc:	add	x0, x0, #0x330
    bed0:	add	x0, x0, #0x1a0
    bed4:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    bed8:	mov	x19, x0
    bedc:	cbnz	x0, bf08 <PyFloat_FromString@plt+0x53d8>
    bee0:	ldr	x0, [sp, #72]
    bee4:	bl	790c <PyFloat_FromString@plt+0xddc>
    bee8:	ldr	x0, [sp, #80]
    beec:	bl	790c <PyFloat_FromString@plt+0xddc>
    bef0:	ldr	x0, [sp, #88]
    bef4:	bl	790c <PyFloat_FromString@plt+0xddc>
    bef8:	mov	x0, x19
    befc:	ldp	x19, x20, [sp, #16]
    bf00:	ldp	x29, x30, [sp], #96
    bf04:	ret
    bf08:	ldp	x1, x2, [sp, #72]
    bf0c:	add	x5, sp, #0x2c
    bf10:	ldr	x3, [sp, #88]
    bf14:	add	x4, x20, #0x10
    bf18:	add	x0, x0, #0x18
    bf1c:	add	x3, x3, #0x18
    bf20:	add	x1, x1, #0x18
    bf24:	add	x2, x2, #0x18
    bf28:	bl	1c38c <PyInit__decimal@@Base+0xb404>
    bf2c:	ldr	x0, [sp, #72]
    bf30:	bl	790c <PyFloat_FromString@plt+0xddc>
    bf34:	ldr	x0, [sp, #80]
    bf38:	bl	790c <PyFloat_FromString@plt+0xddc>
    bf3c:	ldr	x0, [sp, #88]
    bf40:	bl	790c <PyFloat_FromString@plt+0xddc>
    bf44:	ldr	w1, [sp, #44]
    bf48:	mov	x0, x20
    bf4c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    bf50:	cbz	w0, bef8 <PyFloat_FromString@plt+0x53c8>
    bf54:	mov	x0, x19
    bf58:	b	be98 <PyFloat_FromString@plt+0x5368>
    bf5c:	stp	x29, x30, [sp, #-96]!
    bf60:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    bf64:	add	x3, x3, #0x9b0
    bf68:	mov	x29, sp
    bf6c:	stp	x19, x20, [sp, #16]
    bf70:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    bf74:	mov	x20, x0
    bf78:	ldr	x19, [x19, #4008]
    bf7c:	mov	x0, x1
    bf80:	add	x6, sp, #0x40
    bf84:	mov	x1, x2
    bf88:	add	x5, sp, #0x38
    bf8c:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    bf90:	add	x4, sp, #0x30
    bf94:	add	x3, x3, #0x2e0
    bf98:	add	x2, x2, #0xdc8
    bf9c:	str	wzr, [sp, #44]
    bfa0:	str	x19, [sp, #64]
    bfa4:	str	xzr, [sp, #88]
    bfa8:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    bfac:	cbnz	w0, bfb8 <PyFloat_FromString@plt+0x5488>
    bfb0:	mov	x19, #0x0                   	// #0
    bfb4:	b	c028 <PyFloat_FromString@plt+0x54f8>
    bfb8:	ldr	x2, [sp, #48]
    bfbc:	mov	x3, x20
    bfc0:	add	x1, sp, #0x48
    bfc4:	mov	w0, #0x1                   	// #1
    bfc8:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    bfcc:	cbz	w0, bfb0 <PyFloat_FromString@plt+0x5480>
    bfd0:	ldr	x2, [sp, #56]
    bfd4:	mov	x3, x20
    bfd8:	add	x1, sp, #0x50
    bfdc:	mov	w0, #0x1                   	// #1
    bfe0:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    bfe4:	cbnz	w0, bff4 <PyFloat_FromString@plt+0x54c4>
    bfe8:	ldr	x0, [sp, #72]
    bfec:	bl	790c <PyFloat_FromString@plt+0xddc>
    bff0:	b	bfb0 <PyFloat_FromString@plt+0x5480>
    bff4:	ldr	x2, [sp, #64]
    bff8:	cmp	x2, x19
    bffc:	b.eq	c038 <PyFloat_FromString@plt+0x5508>  // b.none
    c000:	mov	x3, x20
    c004:	add	x1, sp, #0x58
    c008:	mov	w0, #0x1                   	// #1
    c00c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c010:	cbnz	w0, c038 <PyFloat_FromString@plt+0x5508>
    c014:	ldr	x0, [sp, #72]
    c018:	bl	790c <PyFloat_FromString@plt+0xddc>
    c01c:	ldr	x0, [sp, #80]
    c020:	bl	790c <PyFloat_FromString@plt+0xddc>
    c024:	ldr	x19, [sp, #88]
    c028:	mov	x0, x19
    c02c:	ldp	x19, x20, [sp, #16]
    c030:	ldp	x29, x30, [sp], #96
    c034:	ret
    c038:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    c03c:	add	x0, x0, #0x330
    c040:	add	x0, x0, #0x1a0
    c044:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    c048:	mov	x19, x0
    c04c:	cbnz	x0, c06c <PyFloat_FromString@plt+0x553c>
    c050:	ldr	x0, [sp, #72]
    c054:	bl	790c <PyFloat_FromString@plt+0xddc>
    c058:	ldr	x0, [sp, #80]
    c05c:	bl	790c <PyFloat_FromString@plt+0xddc>
    c060:	ldr	x0, [sp, #88]
    c064:	bl	7cc4 <PyFloat_FromString@plt+0x1194>
    c068:	b	c028 <PyFloat_FromString@plt+0x54f8>
    c06c:	ldp	x1, x2, [sp, #72]
    c070:	add	x0, x0, #0x18
    c074:	ldr	x6, [sp, #88]
    c078:	add	x3, x20, #0x10
    c07c:	add	x4, sp, #0x2c
    c080:	add	x1, x1, #0x18
    c084:	add	x2, x2, #0x18
    c088:	cbnz	x6, c0b8 <PyFloat_FromString@plt+0x5588>
    c08c:	bl	2113c <PyInit__decimal@@Base+0x101b4>
    c090:	ldr	x0, [sp, #72]
    c094:	bl	790c <PyFloat_FromString@plt+0xddc>
    c098:	ldr	x0, [sp, #80]
    c09c:	bl	790c <PyFloat_FromString@plt+0xddc>
    c0a0:	ldr	w1, [sp, #44]
    c0a4:	mov	x0, x20
    c0a8:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    c0ac:	cbz	w0, c028 <PyFloat_FromString@plt+0x54f8>
    c0b0:	mov	x0, x19
    c0b4:	b	bfec <PyFloat_FromString@plt+0x54bc>
    c0b8:	mov	x5, x4
    c0bc:	mov	x4, x3
    c0c0:	add	x3, x6, #0x18
    c0c4:	bl	21740 <PyInit__decimal@@Base+0x107b8>
    c0c8:	ldr	x0, [sp, #88]
    c0cc:	bl	790c <PyFloat_FromString@plt+0xddc>
    c0d0:	b	c090 <PyFloat_FromString@plt+0x5560>
    c0d4:	stp	x29, x30, [sp, #-80]!
    c0d8:	mov	x29, sp
    c0dc:	add	x3, sp, #0x38
    c0e0:	add	x2, sp, #0x30
    c0e4:	stp	x19, x20, [sp, #16]
    c0e8:	mov	x20, x0
    c0ec:	mov	x0, x1
    c0f0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    c0f4:	add	x1, x1, #0xe7e
    c0f8:	str	wzr, [sp, #44]
    c0fc:	bl	6980 <PyArg_ParseTuple@plt>
    c100:	cbnz	w0, c10c <PyFloat_FromString@plt+0x55dc>
    c104:	mov	x19, #0x0                   	// #0
    c108:	b	c170 <PyFloat_FromString@plt+0x5640>
    c10c:	ldr	x2, [sp, #48]
    c110:	mov	x3, x20
    c114:	add	x1, sp, #0x40
    c118:	mov	w0, #0x1                   	// #1
    c11c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c120:	cbz	w0, c104 <PyFloat_FromString@plt+0x55d4>
    c124:	ldr	x2, [sp, #56]
    c128:	mov	x3, x20
    c12c:	add	x1, sp, #0x48
    c130:	mov	w0, #0x1                   	// #1
    c134:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c138:	cbnz	w0, c148 <PyFloat_FromString@plt+0x5618>
    c13c:	ldr	x0, [sp, #64]
    c140:	bl	790c <PyFloat_FromString@plt+0xddc>
    c144:	b	c104 <PyFloat_FromString@plt+0x55d4>
    c148:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    c14c:	add	x0, x0, #0x330
    c150:	add	x0, x0, #0x1a0
    c154:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    c158:	mov	x19, x0
    c15c:	cbnz	x0, c180 <PyFloat_FromString@plt+0x5650>
    c160:	ldr	x0, [sp, #64]
    c164:	bl	790c <PyFloat_FromString@plt+0xddc>
    c168:	ldr	x0, [sp, #72]
    c16c:	bl	790c <PyFloat_FromString@plt+0xddc>
    c170:	mov	x0, x19
    c174:	ldp	x19, x20, [sp, #16]
    c178:	ldp	x29, x30, [sp], #80
    c17c:	ret
    c180:	ldp	x1, x2, [sp, #64]
    c184:	add	x4, sp, #0x2c
    c188:	add	x3, x20, #0x10
    c18c:	add	x0, x0, #0x18
    c190:	add	x1, x1, #0x18
    c194:	add	x2, x2, #0x18
    c198:	bl	1bd98 <PyInit__decimal@@Base+0xae10>
    c19c:	ldr	x0, [sp, #64]
    c1a0:	bl	790c <PyFloat_FromString@plt+0xddc>
    c1a4:	ldr	x0, [sp, #72]
    c1a8:	bl	790c <PyFloat_FromString@plt+0xddc>
    c1ac:	ldr	w1, [sp, #44]
    c1b0:	mov	x0, x20
    c1b4:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    c1b8:	cbz	w0, c170 <PyFloat_FromString@plt+0x5640>
    c1bc:	mov	x0, x19
    c1c0:	b	c140 <PyFloat_FromString@plt+0x5610>
    c1c4:	stp	x29, x30, [sp, #-80]!
    c1c8:	mov	x29, sp
    c1cc:	add	x3, sp, #0x38
    c1d0:	add	x2, sp, #0x30
    c1d4:	stp	x19, x20, [sp, #16]
    c1d8:	mov	x20, x0
    c1dc:	mov	x0, x1
    c1e0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    c1e4:	add	x1, x1, #0xe7e
    c1e8:	str	wzr, [sp, #44]
    c1ec:	bl	6980 <PyArg_ParseTuple@plt>
    c1f0:	cbnz	w0, c1fc <PyFloat_FromString@plt+0x56cc>
    c1f4:	mov	x19, #0x0                   	// #0
    c1f8:	b	c260 <PyFloat_FromString@plt+0x5730>
    c1fc:	ldr	x2, [sp, #48]
    c200:	mov	x3, x20
    c204:	add	x1, sp, #0x40
    c208:	mov	w0, #0x1                   	// #1
    c20c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c210:	cbz	w0, c1f4 <PyFloat_FromString@plt+0x56c4>
    c214:	ldr	x2, [sp, #56]
    c218:	mov	x3, x20
    c21c:	add	x1, sp, #0x48
    c220:	mov	w0, #0x1                   	// #1
    c224:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c228:	cbnz	w0, c238 <PyFloat_FromString@plt+0x5708>
    c22c:	ldr	x0, [sp, #64]
    c230:	bl	790c <PyFloat_FromString@plt+0xddc>
    c234:	b	c1f4 <PyFloat_FromString@plt+0x56c4>
    c238:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    c23c:	add	x0, x0, #0x330
    c240:	add	x0, x0, #0x1a0
    c244:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    c248:	mov	x19, x0
    c24c:	cbnz	x0, c270 <PyFloat_FromString@plt+0x5740>
    c250:	ldr	x0, [sp, #64]
    c254:	bl	790c <PyFloat_FromString@plt+0xddc>
    c258:	ldr	x0, [sp, #72]
    c25c:	bl	790c <PyFloat_FromString@plt+0xddc>
    c260:	mov	x0, x19
    c264:	ldp	x19, x20, [sp, #16]
    c268:	ldp	x29, x30, [sp], #80
    c26c:	ret
    c270:	ldp	x1, x2, [sp, #64]
    c274:	add	x4, sp, #0x2c
    c278:	add	x3, x20, #0x10
    c27c:	add	x0, x0, #0x18
    c280:	add	x1, x1, #0x18
    c284:	add	x2, x2, #0x18
    c288:	bl	21de4 <PyInit__decimal@@Base+0x10e5c>
    c28c:	ldr	x0, [sp, #64]
    c290:	bl	790c <PyFloat_FromString@plt+0xddc>
    c294:	ldr	x0, [sp, #72]
    c298:	bl	790c <PyFloat_FromString@plt+0xddc>
    c29c:	ldr	w1, [sp, #44]
    c2a0:	mov	x0, x20
    c2a4:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    c2a8:	cbz	w0, c260 <PyFloat_FromString@plt+0x5730>
    c2ac:	mov	x0, x19
    c2b0:	b	c230 <PyFloat_FromString@plt+0x5700>
    c2b4:	stp	x29, x30, [sp, #-80]!
    c2b8:	mov	x29, sp
    c2bc:	add	x3, sp, #0x38
    c2c0:	add	x2, sp, #0x30
    c2c4:	stp	x19, x20, [sp, #16]
    c2c8:	mov	x20, x0
    c2cc:	mov	x0, x1
    c2d0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    c2d4:	add	x1, x1, #0xe7e
    c2d8:	str	wzr, [sp, #44]
    c2dc:	bl	6980 <PyArg_ParseTuple@plt>
    c2e0:	cbnz	w0, c2ec <PyFloat_FromString@plt+0x57bc>
    c2e4:	mov	x19, #0x0                   	// #0
    c2e8:	b	c350 <PyFloat_FromString@plt+0x5820>
    c2ec:	ldr	x2, [sp, #48]
    c2f0:	mov	x3, x20
    c2f4:	add	x1, sp, #0x40
    c2f8:	mov	w0, #0x1                   	// #1
    c2fc:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c300:	cbz	w0, c2e4 <PyFloat_FromString@plt+0x57b4>
    c304:	ldr	x2, [sp, #56]
    c308:	mov	x3, x20
    c30c:	add	x1, sp, #0x48
    c310:	mov	w0, #0x1                   	// #1
    c314:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c318:	cbnz	w0, c328 <PyFloat_FromString@plt+0x57f8>
    c31c:	ldr	x0, [sp, #64]
    c320:	bl	790c <PyFloat_FromString@plt+0xddc>
    c324:	b	c2e4 <PyFloat_FromString@plt+0x57b4>
    c328:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    c32c:	add	x0, x0, #0x330
    c330:	add	x0, x0, #0x1a0
    c334:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    c338:	mov	x19, x0
    c33c:	cbnz	x0, c360 <PyFloat_FromString@plt+0x5830>
    c340:	ldr	x0, [sp, #64]
    c344:	bl	790c <PyFloat_FromString@plt+0xddc>
    c348:	ldr	x0, [sp, #72]
    c34c:	bl	790c <PyFloat_FromString@plt+0xddc>
    c350:	mov	x0, x19
    c354:	ldp	x19, x20, [sp, #16]
    c358:	ldp	x29, x30, [sp], #80
    c35c:	ret
    c360:	ldp	x1, x2, [sp, #64]
    c364:	add	x4, sp, #0x2c
    c368:	add	x3, x20, #0x10
    c36c:	add	x0, x0, #0x18
    c370:	add	x1, x1, #0x18
    c374:	add	x2, x2, #0x18
    c378:	bl	215d8 <PyInit__decimal@@Base+0x10650>
    c37c:	ldr	x0, [sp, #64]
    c380:	bl	790c <PyFloat_FromString@plt+0xddc>
    c384:	ldr	x0, [sp, #72]
    c388:	bl	790c <PyFloat_FromString@plt+0xddc>
    c38c:	ldr	w1, [sp, #44]
    c390:	mov	x0, x20
    c394:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    c398:	cbz	w0, c350 <PyFloat_FromString@plt+0x5820>
    c39c:	mov	x0, x19
    c3a0:	b	c320 <PyFloat_FromString@plt+0x57f0>
    c3a4:	stp	x29, x30, [sp, #-80]!
    c3a8:	mov	x29, sp
    c3ac:	add	x3, sp, #0x38
    c3b0:	add	x2, sp, #0x30
    c3b4:	stp	x19, x20, [sp, #16]
    c3b8:	mov	x20, x0
    c3bc:	mov	x0, x1
    c3c0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    c3c4:	add	x1, x1, #0xe7e
    c3c8:	str	wzr, [sp, #44]
    c3cc:	bl	6980 <PyArg_ParseTuple@plt>
    c3d0:	cbnz	w0, c3dc <PyFloat_FromString@plt+0x58ac>
    c3d4:	mov	x19, #0x0                   	// #0
    c3d8:	b	c440 <PyFloat_FromString@plt+0x5910>
    c3dc:	ldr	x2, [sp, #48]
    c3e0:	mov	x3, x20
    c3e4:	add	x1, sp, #0x40
    c3e8:	mov	w0, #0x1                   	// #1
    c3ec:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c3f0:	cbz	w0, c3d4 <PyFloat_FromString@plt+0x58a4>
    c3f4:	ldr	x2, [sp, #56]
    c3f8:	mov	x3, x20
    c3fc:	add	x1, sp, #0x48
    c400:	mov	w0, #0x1                   	// #1
    c404:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c408:	cbnz	w0, c418 <PyFloat_FromString@plt+0x58e8>
    c40c:	ldr	x0, [sp, #64]
    c410:	bl	790c <PyFloat_FromString@plt+0xddc>
    c414:	b	c3d4 <PyFloat_FromString@plt+0x58a4>
    c418:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    c41c:	add	x0, x0, #0x330
    c420:	add	x0, x0, #0x1a0
    c424:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    c428:	mov	x19, x0
    c42c:	cbnz	x0, c450 <PyFloat_FromString@plt+0x5920>
    c430:	ldr	x0, [sp, #64]
    c434:	bl	790c <PyFloat_FromString@plt+0xddc>
    c438:	ldr	x0, [sp, #72]
    c43c:	bl	790c <PyFloat_FromString@plt+0xddc>
    c440:	mov	x0, x19
    c444:	ldp	x19, x20, [sp, #16]
    c448:	ldp	x29, x30, [sp], #80
    c44c:	ret
    c450:	ldp	x1, x2, [sp, #64]
    c454:	add	x4, sp, #0x2c
    c458:	add	x3, x20, #0x10
    c45c:	add	x0, x0, #0x18
    c460:	add	x1, x1, #0x18
    c464:	add	x2, x2, #0x18
    c468:	bl	1db3c <PyInit__decimal@@Base+0xcbb4>
    c46c:	ldr	x0, [sp, #64]
    c470:	bl	790c <PyFloat_FromString@plt+0xddc>
    c474:	ldr	x0, [sp, #72]
    c478:	bl	790c <PyFloat_FromString@plt+0xddc>
    c47c:	ldr	w1, [sp, #44]
    c480:	mov	x0, x20
    c484:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    c488:	cbz	w0, c440 <PyFloat_FromString@plt+0x5910>
    c48c:	mov	x0, x19
    c490:	b	c410 <PyFloat_FromString@plt+0x58e0>
    c494:	stp	x29, x30, [sp, #-80]!
    c498:	mov	x29, sp
    c49c:	add	x3, sp, #0x38
    c4a0:	add	x2, sp, #0x30
    c4a4:	stp	x19, x20, [sp, #16]
    c4a8:	mov	x20, x0
    c4ac:	mov	x0, x1
    c4b0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    c4b4:	add	x1, x1, #0xe7e
    c4b8:	str	wzr, [sp, #44]
    c4bc:	bl	6980 <PyArg_ParseTuple@plt>
    c4c0:	cbnz	w0, c4cc <PyFloat_FromString@plt+0x599c>
    c4c4:	mov	x19, #0x0                   	// #0
    c4c8:	b	c530 <PyFloat_FromString@plt+0x5a00>
    c4cc:	ldr	x2, [sp, #48]
    c4d0:	mov	x3, x20
    c4d4:	add	x1, sp, #0x40
    c4d8:	mov	w0, #0x1                   	// #1
    c4dc:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c4e0:	cbz	w0, c4c4 <PyFloat_FromString@plt+0x5994>
    c4e4:	ldr	x2, [sp, #56]
    c4e8:	mov	x3, x20
    c4ec:	add	x1, sp, #0x48
    c4f0:	mov	w0, #0x1                   	// #1
    c4f4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c4f8:	cbnz	w0, c508 <PyFloat_FromString@plt+0x59d8>
    c4fc:	ldr	x0, [sp, #64]
    c500:	bl	790c <PyFloat_FromString@plt+0xddc>
    c504:	b	c4c4 <PyFloat_FromString@plt+0x5994>
    c508:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    c50c:	add	x0, x0, #0x330
    c510:	add	x0, x0, #0x1a0
    c514:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    c518:	mov	x19, x0
    c51c:	cbnz	x0, c540 <PyFloat_FromString@plt+0x5a10>
    c520:	ldr	x0, [sp, #64]
    c524:	bl	790c <PyFloat_FromString@plt+0xddc>
    c528:	ldr	x0, [sp, #72]
    c52c:	bl	790c <PyFloat_FromString@plt+0xddc>
    c530:	mov	x0, x19
    c534:	ldp	x19, x20, [sp, #16]
    c538:	ldp	x29, x30, [sp], #80
    c53c:	ret
    c540:	ldp	x1, x2, [sp, #64]
    c544:	add	x4, sp, #0x2c
    c548:	add	x3, x20, #0x10
    c54c:	add	x0, x0, #0x18
    c550:	add	x1, x1, #0x18
    c554:	add	x2, x2, #0x18
    c558:	bl	1da40 <PyInit__decimal@@Base+0xcab8>
    c55c:	ldr	x0, [sp, #64]
    c560:	bl	790c <PyFloat_FromString@plt+0xddc>
    c564:	ldr	x0, [sp, #72]
    c568:	bl	790c <PyFloat_FromString@plt+0xddc>
    c56c:	ldr	w1, [sp, #44]
    c570:	mov	x0, x20
    c574:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    c578:	cbz	w0, c530 <PyFloat_FromString@plt+0x5a00>
    c57c:	mov	x0, x19
    c580:	b	c500 <PyFloat_FromString@plt+0x59d0>
    c584:	stp	x29, x30, [sp, #-80]!
    c588:	mov	x29, sp
    c58c:	add	x3, sp, #0x38
    c590:	add	x2, sp, #0x30
    c594:	stp	x19, x20, [sp, #16]
    c598:	mov	x20, x0
    c59c:	mov	x0, x1
    c5a0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    c5a4:	add	x1, x1, #0xe7e
    c5a8:	str	wzr, [sp, #44]
    c5ac:	bl	6980 <PyArg_ParseTuple@plt>
    c5b0:	cbnz	w0, c5bc <PyFloat_FromString@plt+0x5a8c>
    c5b4:	mov	x19, #0x0                   	// #0
    c5b8:	b	c620 <PyFloat_FromString@plt+0x5af0>
    c5bc:	ldr	x2, [sp, #48]
    c5c0:	mov	x3, x20
    c5c4:	add	x1, sp, #0x40
    c5c8:	mov	w0, #0x1                   	// #1
    c5cc:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c5d0:	cbz	w0, c5b4 <PyFloat_FromString@plt+0x5a84>
    c5d4:	ldr	x2, [sp, #56]
    c5d8:	mov	x3, x20
    c5dc:	add	x1, sp, #0x48
    c5e0:	mov	w0, #0x1                   	// #1
    c5e4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c5e8:	cbnz	w0, c5f8 <PyFloat_FromString@plt+0x5ac8>
    c5ec:	ldr	x0, [sp, #64]
    c5f0:	bl	790c <PyFloat_FromString@plt+0xddc>
    c5f4:	b	c5b4 <PyFloat_FromString@plt+0x5a84>
    c5f8:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    c5fc:	add	x0, x0, #0x330
    c600:	add	x0, x0, #0x1a0
    c604:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    c608:	mov	x19, x0
    c60c:	cbnz	x0, c630 <PyFloat_FromString@plt+0x5b00>
    c610:	ldr	x0, [sp, #64]
    c614:	bl	790c <PyFloat_FromString@plt+0xddc>
    c618:	ldr	x0, [sp, #72]
    c61c:	bl	790c <PyFloat_FromString@plt+0xddc>
    c620:	mov	x0, x19
    c624:	ldp	x19, x20, [sp, #16]
    c628:	ldp	x29, x30, [sp], #80
    c62c:	ret
    c630:	ldp	x1, x2, [sp, #64]
    c634:	add	x4, sp, #0x2c
    c638:	add	x3, x20, #0x10
    c63c:	add	x0, x0, #0x18
    c640:	add	x1, x1, #0x18
    c644:	add	x2, x2, #0x18
    c648:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
    c64c:	ldr	x0, [sp, #64]
    c650:	bl	790c <PyFloat_FromString@plt+0xddc>
    c654:	ldr	x0, [sp, #72]
    c658:	bl	790c <PyFloat_FromString@plt+0xddc>
    c65c:	ldr	w1, [sp, #44]
    c660:	mov	x0, x20
    c664:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    c668:	cbz	w0, c620 <PyFloat_FromString@plt+0x5af0>
    c66c:	mov	x0, x19
    c670:	b	c5f0 <PyFloat_FromString@plt+0x5ac0>
    c674:	stp	x29, x30, [sp, #-80]!
    c678:	mov	x29, sp
    c67c:	add	x3, sp, #0x38
    c680:	add	x2, sp, #0x30
    c684:	stp	x19, x20, [sp, #16]
    c688:	mov	x20, x0
    c68c:	mov	x0, x1
    c690:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    c694:	add	x1, x1, #0xe7e
    c698:	str	wzr, [sp, #44]
    c69c:	bl	6980 <PyArg_ParseTuple@plt>
    c6a0:	cbnz	w0, c6ac <PyFloat_FromString@plt+0x5b7c>
    c6a4:	mov	x19, #0x0                   	// #0
    c6a8:	b	c710 <PyFloat_FromString@plt+0x5be0>
    c6ac:	ldr	x2, [sp, #48]
    c6b0:	mov	x3, x20
    c6b4:	add	x1, sp, #0x40
    c6b8:	mov	w0, #0x1                   	// #1
    c6bc:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c6c0:	cbz	w0, c6a4 <PyFloat_FromString@plt+0x5b74>
    c6c4:	ldr	x2, [sp, #56]
    c6c8:	mov	x3, x20
    c6cc:	add	x1, sp, #0x48
    c6d0:	mov	w0, #0x1                   	// #1
    c6d4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c6d8:	cbnz	w0, c6e8 <PyFloat_FromString@plt+0x5bb8>
    c6dc:	ldr	x0, [sp, #64]
    c6e0:	bl	790c <PyFloat_FromString@plt+0xddc>
    c6e4:	b	c6a4 <PyFloat_FromString@plt+0x5b74>
    c6e8:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    c6ec:	add	x0, x0, #0x330
    c6f0:	add	x0, x0, #0x1a0
    c6f4:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    c6f8:	mov	x19, x0
    c6fc:	cbnz	x0, c720 <PyFloat_FromString@plt+0x5bf0>
    c700:	ldr	x0, [sp, #64]
    c704:	bl	790c <PyFloat_FromString@plt+0xddc>
    c708:	ldr	x0, [sp, #72]
    c70c:	bl	790c <PyFloat_FromString@plt+0xddc>
    c710:	mov	x0, x19
    c714:	ldp	x19, x20, [sp, #16]
    c718:	ldp	x29, x30, [sp], #80
    c71c:	ret
    c720:	ldp	x1, x2, [sp, #64]
    c724:	add	x4, sp, #0x2c
    c728:	add	x3, x20, #0x10
    c72c:	add	x0, x0, #0x18
    c730:	add	x1, x1, #0x18
    c734:	add	x2, x2, #0x18
    c738:	bl	1c714 <PyInit__decimal@@Base+0xb78c>
    c73c:	ldr	x0, [sp, #64]
    c740:	bl	790c <PyFloat_FromString@plt+0xddc>
    c744:	ldr	x0, [sp, #72]
    c748:	bl	790c <PyFloat_FromString@plt+0xddc>
    c74c:	ldr	w1, [sp, #44]
    c750:	mov	x0, x20
    c754:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    c758:	cbz	w0, c710 <PyFloat_FromString@plt+0x5be0>
    c75c:	mov	x0, x19
    c760:	b	c6e0 <PyFloat_FromString@plt+0x5bb0>
    c764:	stp	x29, x30, [sp, #-80]!
    c768:	mov	x29, sp
    c76c:	add	x3, sp, #0x38
    c770:	add	x2, sp, #0x30
    c774:	stp	x19, x20, [sp, #16]
    c778:	mov	x20, x0
    c77c:	mov	x0, x1
    c780:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    c784:	add	x1, x1, #0xe7e
    c788:	str	wzr, [sp, #44]
    c78c:	bl	6980 <PyArg_ParseTuple@plt>
    c790:	cbnz	w0, c79c <PyFloat_FromString@plt+0x5c6c>
    c794:	mov	x19, #0x0                   	// #0
    c798:	b	c800 <PyFloat_FromString@plt+0x5cd0>
    c79c:	ldr	x2, [sp, #48]
    c7a0:	mov	x3, x20
    c7a4:	add	x1, sp, #0x40
    c7a8:	mov	w0, #0x1                   	// #1
    c7ac:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c7b0:	cbz	w0, c794 <PyFloat_FromString@plt+0x5c64>
    c7b4:	ldr	x2, [sp, #56]
    c7b8:	mov	x3, x20
    c7bc:	add	x1, sp, #0x48
    c7c0:	mov	w0, #0x1                   	// #1
    c7c4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c7c8:	cbnz	w0, c7d8 <PyFloat_FromString@plt+0x5ca8>
    c7cc:	ldr	x0, [sp, #64]
    c7d0:	bl	790c <PyFloat_FromString@plt+0xddc>
    c7d4:	b	c794 <PyFloat_FromString@plt+0x5c64>
    c7d8:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    c7dc:	add	x0, x0, #0x330
    c7e0:	add	x0, x0, #0x1a0
    c7e4:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    c7e8:	mov	x19, x0
    c7ec:	cbnz	x0, c810 <PyFloat_FromString@plt+0x5ce0>
    c7f0:	ldr	x0, [sp, #64]
    c7f4:	bl	790c <PyFloat_FromString@plt+0xddc>
    c7f8:	ldr	x0, [sp, #72]
    c7fc:	bl	790c <PyFloat_FromString@plt+0xddc>
    c800:	mov	x0, x19
    c804:	ldp	x19, x20, [sp, #16]
    c808:	ldp	x29, x30, [sp], #80
    c80c:	ret
    c810:	ldp	x1, x2, [sp, #64]
    c814:	add	x4, sp, #0x2c
    c818:	add	x3, x20, #0x10
    c81c:	add	x0, x0, #0x18
    c820:	add	x1, x1, #0x18
    c824:	add	x2, x2, #0x18
    c828:	bl	1c63c <PyInit__decimal@@Base+0xb6b4>
    c82c:	ldr	x0, [sp, #64]
    c830:	bl	790c <PyFloat_FromString@plt+0xddc>
    c834:	ldr	x0, [sp, #72]
    c838:	bl	790c <PyFloat_FromString@plt+0xddc>
    c83c:	ldr	w1, [sp, #44]
    c840:	mov	x0, x20
    c844:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    c848:	cbz	w0, c800 <PyFloat_FromString@plt+0x5cd0>
    c84c:	mov	x0, x19
    c850:	b	c7d0 <PyFloat_FromString@plt+0x5ca0>
    c854:	stp	x29, x30, [sp, #-80]!
    c858:	mov	x29, sp
    c85c:	add	x3, sp, #0x38
    c860:	add	x2, sp, #0x30
    c864:	stp	x19, x20, [sp, #16]
    c868:	mov	x20, x0
    c86c:	mov	x0, x1
    c870:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    c874:	add	x1, x1, #0xe7e
    c878:	str	wzr, [sp, #44]
    c87c:	bl	6980 <PyArg_ParseTuple@plt>
    c880:	cbnz	w0, c88c <PyFloat_FromString@plt+0x5d5c>
    c884:	mov	x19, #0x0                   	// #0
    c888:	b	c8f0 <PyFloat_FromString@plt+0x5dc0>
    c88c:	ldr	x2, [sp, #48]
    c890:	mov	x3, x20
    c894:	add	x1, sp, #0x40
    c898:	mov	w0, #0x1                   	// #1
    c89c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c8a0:	cbz	w0, c884 <PyFloat_FromString@plt+0x5d54>
    c8a4:	ldr	x2, [sp, #56]
    c8a8:	mov	x3, x20
    c8ac:	add	x1, sp, #0x48
    c8b0:	mov	w0, #0x1                   	// #1
    c8b4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c8b8:	cbnz	w0, c8c8 <PyFloat_FromString@plt+0x5d98>
    c8bc:	ldr	x0, [sp, #64]
    c8c0:	bl	790c <PyFloat_FromString@plt+0xddc>
    c8c4:	b	c884 <PyFloat_FromString@plt+0x5d54>
    c8c8:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    c8cc:	add	x0, x0, #0x330
    c8d0:	add	x0, x0, #0x1a0
    c8d4:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    c8d8:	mov	x19, x0
    c8dc:	cbnz	x0, c900 <PyFloat_FromString@plt+0x5dd0>
    c8e0:	ldr	x0, [sp, #64]
    c8e4:	bl	790c <PyFloat_FromString@plt+0xddc>
    c8e8:	ldr	x0, [sp, #72]
    c8ec:	bl	790c <PyFloat_FromString@plt+0xddc>
    c8f0:	mov	x0, x19
    c8f4:	ldp	x19, x20, [sp, #16]
    c8f8:	ldp	x29, x30, [sp], #80
    c8fc:	ret
    c900:	ldp	x1, x2, [sp, #64]
    c904:	add	x4, sp, #0x2c
    c908:	add	x3, x20, #0x10
    c90c:	add	x0, x0, #0x18
    c910:	add	x1, x1, #0x18
    c914:	add	x2, x2, #0x18
    c918:	bl	1c564 <PyInit__decimal@@Base+0xb5dc>
    c91c:	ldr	x0, [sp, #64]
    c920:	bl	790c <PyFloat_FromString@plt+0xddc>
    c924:	ldr	x0, [sp, #72]
    c928:	bl	790c <PyFloat_FromString@plt+0xddc>
    c92c:	ldr	w1, [sp, #44]
    c930:	mov	x0, x20
    c934:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    c938:	cbz	w0, c8f0 <PyFloat_FromString@plt+0x5dc0>
    c93c:	mov	x0, x19
    c940:	b	c8c0 <PyFloat_FromString@plt+0x5d90>
    c944:	stp	x29, x30, [sp, #-80]!
    c948:	mov	x29, sp
    c94c:	add	x3, sp, #0x38
    c950:	add	x2, sp, #0x30
    c954:	stp	x19, x20, [sp, #16]
    c958:	mov	x20, x0
    c95c:	mov	x0, x1
    c960:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    c964:	add	x1, x1, #0xe7e
    c968:	str	wzr, [sp, #44]
    c96c:	bl	6980 <PyArg_ParseTuple@plt>
    c970:	cbnz	w0, c97c <PyFloat_FromString@plt+0x5e4c>
    c974:	mov	x19, #0x0                   	// #0
    c978:	b	c9e0 <PyFloat_FromString@plt+0x5eb0>
    c97c:	ldr	x2, [sp, #48]
    c980:	mov	x3, x20
    c984:	add	x1, sp, #0x40
    c988:	mov	w0, #0x1                   	// #1
    c98c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c990:	cbz	w0, c974 <PyFloat_FromString@plt+0x5e44>
    c994:	ldr	x2, [sp, #56]
    c998:	mov	x3, x20
    c99c:	add	x1, sp, #0x48
    c9a0:	mov	w0, #0x1                   	// #1
    c9a4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    c9a8:	cbnz	w0, c9b8 <PyFloat_FromString@plt+0x5e88>
    c9ac:	ldr	x0, [sp, #64]
    c9b0:	bl	790c <PyFloat_FromString@plt+0xddc>
    c9b4:	b	c974 <PyFloat_FromString@plt+0x5e44>
    c9b8:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    c9bc:	add	x0, x0, #0x330
    c9c0:	add	x0, x0, #0x1a0
    c9c4:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    c9c8:	mov	x19, x0
    c9cc:	cbnz	x0, c9f0 <PyFloat_FromString@plt+0x5ec0>
    c9d0:	ldr	x0, [sp, #64]
    c9d4:	bl	790c <PyFloat_FromString@plt+0xddc>
    c9d8:	ldr	x0, [sp, #72]
    c9dc:	bl	790c <PyFloat_FromString@plt+0xddc>
    c9e0:	mov	x0, x19
    c9e4:	ldp	x19, x20, [sp, #16]
    c9e8:	ldp	x29, x30, [sp], #80
    c9ec:	ret
    c9f0:	ldp	x1, x2, [sp, #64]
    c9f4:	add	x4, sp, #0x2c
    c9f8:	add	x3, x20, #0x10
    c9fc:	add	x0, x0, #0x18
    ca00:	add	x1, x1, #0x18
    ca04:	add	x2, x2, #0x18
    ca08:	bl	1c48c <PyInit__decimal@@Base+0xb504>
    ca0c:	ldr	x0, [sp, #64]
    ca10:	bl	790c <PyFloat_FromString@plt+0xddc>
    ca14:	ldr	x0, [sp, #72]
    ca18:	bl	790c <PyFloat_FromString@plt+0xddc>
    ca1c:	ldr	w1, [sp, #44]
    ca20:	mov	x0, x20
    ca24:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    ca28:	cbz	w0, c9e0 <PyFloat_FromString@plt+0x5eb0>
    ca2c:	mov	x0, x19
    ca30:	b	c9b0 <PyFloat_FromString@plt+0x5e80>
    ca34:	stp	x29, x30, [sp, #-96]!
    ca38:	mov	x29, sp
    ca3c:	add	x3, sp, #0x48
    ca40:	add	x2, sp, #0x40
    ca44:	stp	x19, x20, [sp, #16]
    ca48:	str	x21, [sp, #32]
    ca4c:	mov	x21, x0
    ca50:	mov	x0, x1
    ca54:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    ca58:	add	x1, x1, #0xe7e
    ca5c:	str	wzr, [sp, #60]
    ca60:	bl	6980 <PyArg_ParseTuple@plt>
    ca64:	cbnz	w0, ca70 <PyFloat_FromString@plt+0x5f40>
    ca68:	mov	x19, #0x0                   	// #0
    ca6c:	b	cad8 <PyFloat_FromString@plt+0x5fa8>
    ca70:	ldr	x2, [sp, #64]
    ca74:	mov	x3, x21
    ca78:	add	x1, sp, #0x50
    ca7c:	mov	w0, #0x1                   	// #1
    ca80:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    ca84:	cbz	w0, ca68 <PyFloat_FromString@plt+0x5f38>
    ca88:	ldr	x2, [sp, #72]
    ca8c:	mov	x3, x21
    ca90:	add	x1, sp, #0x58
    ca94:	mov	w0, #0x1                   	// #1
    ca98:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    ca9c:	cbnz	w0, caac <PyFloat_FromString@plt+0x5f7c>
    caa0:	ldr	x0, [sp, #80]
    caa4:	bl	790c <PyFloat_FromString@plt+0xddc>
    caa8:	b	ca68 <PyFloat_FromString@plt+0x5f38>
    caac:	adrp	x20, 43000 <PyInit__decimal@@Base+0x32078>
    cab0:	add	x20, x20, #0x330
    cab4:	add	x20, x20, #0x1a0
    cab8:	mov	x0, x20
    cabc:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    cac0:	mov	x19, x0
    cac4:	cbnz	x0, caec <PyFloat_FromString@plt+0x5fbc>
    cac8:	ldr	x0, [sp, #80]
    cacc:	bl	790c <PyFloat_FromString@plt+0xddc>
    cad0:	ldr	x0, [sp, #88]
    cad4:	bl	790c <PyFloat_FromString@plt+0xddc>
    cad8:	mov	x0, x19
    cadc:	ldp	x19, x20, [sp, #16]
    cae0:	ldr	x21, [sp, #32]
    cae4:	ldp	x29, x30, [sp], #96
    cae8:	ret
    caec:	mov	x0, x20
    caf0:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    caf4:	mov	x20, x0
    caf8:	cbnz	x0, cb14 <PyFloat_FromString@plt+0x5fe4>
    cafc:	ldr	x0, [sp, #80]
    cb00:	bl	790c <PyFloat_FromString@plt+0xddc>
    cb04:	ldr	x0, [sp, #88]
    cb08:	bl	790c <PyFloat_FromString@plt+0xddc>
    cb0c:	mov	x0, x19
    cb10:	b	caa4 <PyFloat_FromString@plt+0x5f74>
    cb14:	ldp	x2, x3, [sp, #80]
    cb18:	add	x1, x0, #0x18
    cb1c:	add	x5, sp, #0x3c
    cb20:	add	x4, x21, #0x10
    cb24:	add	x0, x19, #0x18
    cb28:	add	x3, x3, #0x18
    cb2c:	add	x2, x2, #0x18
    cb30:	bl	20a44 <PyInit__decimal@@Base+0xfabc>
    cb34:	ldr	x0, [sp, #80]
    cb38:	bl	790c <PyFloat_FromString@plt+0xddc>
    cb3c:	ldr	x0, [sp, #88]
    cb40:	bl	790c <PyFloat_FromString@plt+0xddc>
    cb44:	ldr	w1, [sp, #60]
    cb48:	mov	x0, x21
    cb4c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    cb50:	cbz	w0, cb5c <PyFloat_FromString@plt+0x602c>
    cb54:	mov	x0, x20
    cb58:	b	cb08 <PyFloat_FromString@plt+0x5fd8>
    cb5c:	mov	x1, x19
    cb60:	mov	x2, x20
    cb64:	adrp	x0, 24000 <PyInit__decimal@@Base+0x13078>
    cb68:	add	x0, x0, #0xdcd
    cb6c:	bl	6870 <Py_BuildValue@plt>
    cb70:	mov	x21, x0
    cb74:	mov	x0, x20
    cb78:	bl	790c <PyFloat_FromString@plt+0xddc>
    cb7c:	mov	x0, x19
    cb80:	mov	x19, x21
    cb84:	bl	790c <PyFloat_FromString@plt+0xddc>
    cb88:	b	cad8 <PyFloat_FromString@plt+0x5fa8>
    cb8c:	stp	x29, x30, [sp, #-80]!
    cb90:	mov	x29, sp
    cb94:	add	x3, sp, #0x38
    cb98:	add	x2, sp, #0x30
    cb9c:	stp	x19, x20, [sp, #16]
    cba0:	mov	x20, x0
    cba4:	mov	x0, x1
    cba8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    cbac:	add	x1, x1, #0xe7e
    cbb0:	str	wzr, [sp, #44]
    cbb4:	bl	6980 <PyArg_ParseTuple@plt>
    cbb8:	cbnz	w0, cbc4 <PyFloat_FromString@plt+0x6094>
    cbbc:	mov	x19, #0x0                   	// #0
    cbc0:	b	cc28 <PyFloat_FromString@plt+0x60f8>
    cbc4:	ldr	x2, [sp, #48]
    cbc8:	mov	x3, x20
    cbcc:	add	x1, sp, #0x40
    cbd0:	mov	w0, #0x1                   	// #1
    cbd4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    cbd8:	cbz	w0, cbbc <PyFloat_FromString@plt+0x608c>
    cbdc:	ldr	x2, [sp, #56]
    cbe0:	mov	x3, x20
    cbe4:	add	x1, sp, #0x48
    cbe8:	mov	w0, #0x1                   	// #1
    cbec:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    cbf0:	cbnz	w0, cc00 <PyFloat_FromString@plt+0x60d0>
    cbf4:	ldr	x0, [sp, #64]
    cbf8:	bl	790c <PyFloat_FromString@plt+0xddc>
    cbfc:	b	cbbc <PyFloat_FromString@plt+0x608c>
    cc00:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    cc04:	add	x0, x0, #0x330
    cc08:	add	x0, x0, #0x1a0
    cc0c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    cc10:	mov	x19, x0
    cc14:	cbnz	x0, cc38 <PyFloat_FromString@plt+0x6108>
    cc18:	ldr	x0, [sp, #64]
    cc1c:	bl	790c <PyFloat_FromString@plt+0xddc>
    cc20:	ldr	x0, [sp, #72]
    cc24:	bl	790c <PyFloat_FromString@plt+0xddc>
    cc28:	mov	x0, x19
    cc2c:	ldp	x19, x20, [sp, #16]
    cc30:	ldp	x29, x30, [sp], #80
    cc34:	ret
    cc38:	ldp	x1, x2, [sp, #64]
    cc3c:	add	x4, sp, #0x2c
    cc40:	add	x3, x20, #0x10
    cc44:	add	x0, x0, #0x18
    cc48:	add	x1, x1, #0x18
    cc4c:	add	x2, x2, #0x18
    cc50:	bl	20c54 <PyInit__decimal@@Base+0xfccc>
    cc54:	ldr	x0, [sp, #64]
    cc58:	bl	790c <PyFloat_FromString@plt+0xddc>
    cc5c:	ldr	x0, [sp, #72]
    cc60:	bl	790c <PyFloat_FromString@plt+0xddc>
    cc64:	ldr	w1, [sp, #44]
    cc68:	mov	x0, x20
    cc6c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    cc70:	cbz	w0, cc28 <PyFloat_FromString@plt+0x60f8>
    cc74:	mov	x0, x19
    cc78:	b	cbf8 <PyFloat_FromString@plt+0x60c8>
    cc7c:	stp	x29, x30, [sp, #-80]!
    cc80:	mov	x29, sp
    cc84:	add	x3, sp, #0x38
    cc88:	add	x2, sp, #0x30
    cc8c:	stp	x19, x20, [sp, #16]
    cc90:	mov	x20, x0
    cc94:	mov	x0, x1
    cc98:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    cc9c:	add	x1, x1, #0xe7e
    cca0:	str	wzr, [sp, #44]
    cca4:	bl	6980 <PyArg_ParseTuple@plt>
    cca8:	cbnz	w0, ccb4 <PyFloat_FromString@plt+0x6184>
    ccac:	mov	x19, #0x0                   	// #0
    ccb0:	b	cd18 <PyFloat_FromString@plt+0x61e8>
    ccb4:	ldr	x2, [sp, #48]
    ccb8:	mov	x3, x20
    ccbc:	add	x1, sp, #0x40
    ccc0:	mov	w0, #0x1                   	// #1
    ccc4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    ccc8:	cbz	w0, ccac <PyFloat_FromString@plt+0x617c>
    cccc:	ldr	x2, [sp, #56]
    ccd0:	mov	x3, x20
    ccd4:	add	x1, sp, #0x48
    ccd8:	mov	w0, #0x1                   	// #1
    ccdc:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    cce0:	cbnz	w0, ccf0 <PyFloat_FromString@plt+0x61c0>
    cce4:	ldr	x0, [sp, #64]
    cce8:	bl	790c <PyFloat_FromString@plt+0xddc>
    ccec:	b	ccac <PyFloat_FromString@plt+0x617c>
    ccf0:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    ccf4:	add	x0, x0, #0x330
    ccf8:	add	x0, x0, #0x1a0
    ccfc:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    cd00:	mov	x19, x0
    cd04:	cbnz	x0, cd28 <PyFloat_FromString@plt+0x61f8>
    cd08:	ldr	x0, [sp, #64]
    cd0c:	bl	790c <PyFloat_FromString@plt+0xddc>
    cd10:	ldr	x0, [sp, #72]
    cd14:	bl	790c <PyFloat_FromString@plt+0xddc>
    cd18:	mov	x0, x19
    cd1c:	ldp	x19, x20, [sp, #16]
    cd20:	ldp	x29, x30, [sp], #80
    cd24:	ret
    cd28:	ldp	x1, x2, [sp, #64]
    cd2c:	add	x4, sp, #0x2c
    cd30:	add	x3, x20, #0x10
    cd34:	add	x0, x0, #0x18
    cd38:	add	x1, x1, #0x18
    cd3c:	add	x2, x2, #0x18
    cd40:	bl	1e8c0 <PyInit__decimal@@Base+0xd938>
    cd44:	ldr	x0, [sp, #64]
    cd48:	bl	790c <PyFloat_FromString@plt+0xddc>
    cd4c:	ldr	x0, [sp, #72]
    cd50:	bl	790c <PyFloat_FromString@plt+0xddc>
    cd54:	ldr	w1, [sp, #44]
    cd58:	mov	x0, x20
    cd5c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    cd60:	cbz	w0, cd18 <PyFloat_FromString@plt+0x61e8>
    cd64:	mov	x0, x19
    cd68:	b	cce8 <PyFloat_FromString@plt+0x61b8>
    cd6c:	stp	x29, x30, [sp, #-80]!
    cd70:	mov	x29, sp
    cd74:	add	x3, sp, #0x38
    cd78:	add	x2, sp, #0x30
    cd7c:	stp	x19, x20, [sp, #16]
    cd80:	mov	x20, x0
    cd84:	mov	x0, x1
    cd88:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    cd8c:	add	x1, x1, #0xe7e
    cd90:	str	wzr, [sp, #44]
    cd94:	bl	6980 <PyArg_ParseTuple@plt>
    cd98:	cbnz	w0, cda4 <PyFloat_FromString@plt+0x6274>
    cd9c:	mov	x19, #0x0                   	// #0
    cda0:	b	ce08 <PyFloat_FromString@plt+0x62d8>
    cda4:	ldr	x2, [sp, #48]
    cda8:	mov	x3, x20
    cdac:	add	x1, sp, #0x40
    cdb0:	mov	w0, #0x1                   	// #1
    cdb4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    cdb8:	cbz	w0, cd9c <PyFloat_FromString@plt+0x626c>
    cdbc:	ldr	x2, [sp, #56]
    cdc0:	mov	x3, x20
    cdc4:	add	x1, sp, #0x48
    cdc8:	mov	w0, #0x1                   	// #1
    cdcc:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    cdd0:	cbnz	w0, cde0 <PyFloat_FromString@plt+0x62b0>
    cdd4:	ldr	x0, [sp, #64]
    cdd8:	bl	790c <PyFloat_FromString@plt+0xddc>
    cddc:	b	cd9c <PyFloat_FromString@plt+0x626c>
    cde0:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    cde4:	add	x0, x0, #0x330
    cde8:	add	x0, x0, #0x1a0
    cdec:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    cdf0:	mov	x19, x0
    cdf4:	cbnz	x0, ce18 <PyFloat_FromString@plt+0x62e8>
    cdf8:	ldr	x0, [sp, #64]
    cdfc:	bl	790c <PyFloat_FromString@plt+0xddc>
    ce00:	ldr	x0, [sp, #72]
    ce04:	bl	790c <PyFloat_FromString@plt+0xddc>
    ce08:	mov	x0, x19
    ce0c:	ldp	x19, x20, [sp, #16]
    ce10:	ldp	x29, x30, [sp], #80
    ce14:	ret
    ce18:	ldp	x1, x2, [sp, #64]
    ce1c:	add	x4, sp, #0x2c
    ce20:	add	x3, x20, #0x10
    ce24:	add	x0, x0, #0x18
    ce28:	add	x1, x1, #0x18
    ce2c:	add	x2, x2, #0x18
    ce30:	bl	19490 <PyInit__decimal@@Base+0x8508>
    ce34:	ldr	x0, [sp, #64]
    ce38:	bl	790c <PyFloat_FromString@plt+0xddc>
    ce3c:	ldr	x0, [sp, #72]
    ce40:	bl	790c <PyFloat_FromString@plt+0xddc>
    ce44:	ldr	w1, [sp, #44]
    ce48:	mov	x0, x20
    ce4c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    ce50:	cbz	w0, ce08 <PyFloat_FromString@plt+0x62d8>
    ce54:	mov	x0, x19
    ce58:	b	cdd8 <PyFloat_FromString@plt+0x62a8>
    ce5c:	stp	x29, x30, [sp, #-80]!
    ce60:	mov	x29, sp
    ce64:	add	x3, sp, #0x38
    ce68:	add	x2, sp, #0x30
    ce6c:	stp	x19, x20, [sp, #16]
    ce70:	mov	x20, x0
    ce74:	mov	x0, x1
    ce78:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    ce7c:	add	x1, x1, #0xe7e
    ce80:	str	wzr, [sp, #44]
    ce84:	bl	6980 <PyArg_ParseTuple@plt>
    ce88:	cbnz	w0, ce94 <PyFloat_FromString@plt+0x6364>
    ce8c:	mov	x19, #0x0                   	// #0
    ce90:	b	cef8 <PyFloat_FromString@plt+0x63c8>
    ce94:	ldr	x2, [sp, #48]
    ce98:	mov	x3, x20
    ce9c:	add	x1, sp, #0x40
    cea0:	mov	w0, #0x1                   	// #1
    cea4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    cea8:	cbz	w0, ce8c <PyFloat_FromString@plt+0x635c>
    ceac:	ldr	x2, [sp, #56]
    ceb0:	mov	x3, x20
    ceb4:	add	x1, sp, #0x48
    ceb8:	mov	w0, #0x1                   	// #1
    cebc:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    cec0:	cbnz	w0, ced0 <PyFloat_FromString@plt+0x63a0>
    cec4:	ldr	x0, [sp, #64]
    cec8:	bl	790c <PyFloat_FromString@plt+0xddc>
    cecc:	b	ce8c <PyFloat_FromString@plt+0x635c>
    ced0:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    ced4:	add	x0, x0, #0x330
    ced8:	add	x0, x0, #0x1a0
    cedc:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    cee0:	mov	x19, x0
    cee4:	cbnz	x0, cf08 <PyFloat_FromString@plt+0x63d8>
    cee8:	ldr	x0, [sp, #64]
    ceec:	bl	790c <PyFloat_FromString@plt+0xddc>
    cef0:	ldr	x0, [sp, #72]
    cef4:	bl	790c <PyFloat_FromString@plt+0xddc>
    cef8:	mov	x0, x19
    cefc:	ldp	x19, x20, [sp, #16]
    cf00:	ldp	x29, x30, [sp], #80
    cf04:	ret
    cf08:	ldp	x1, x2, [sp, #64]
    cf0c:	add	x4, sp, #0x2c
    cf10:	add	x3, x20, #0x10
    cf14:	add	x0, x0, #0x18
    cf18:	add	x1, x1, #0x18
    cf1c:	add	x2, x2, #0x18
    cf20:	bl	19404 <PyInit__decimal@@Base+0x847c>
    cf24:	ldr	x0, [sp, #64]
    cf28:	bl	790c <PyFloat_FromString@plt+0xddc>
    cf2c:	ldr	x0, [sp, #72]
    cf30:	bl	790c <PyFloat_FromString@plt+0xddc>
    cf34:	ldr	w1, [sp, #44]
    cf38:	mov	x0, x20
    cf3c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    cf40:	cbz	w0, cef8 <PyFloat_FromString@plt+0x63c8>
    cf44:	mov	x0, x19
    cf48:	b	cec8 <PyFloat_FromString@plt+0x6398>
    cf4c:	stp	x29, x30, [sp, #-80]!
    cf50:	mov	x29, sp
    cf54:	add	x3, sp, #0x38
    cf58:	add	x2, sp, #0x30
    cf5c:	stp	x19, x20, [sp, #16]
    cf60:	mov	x20, x0
    cf64:	mov	x0, x1
    cf68:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    cf6c:	add	x1, x1, #0xe7e
    cf70:	str	wzr, [sp, #44]
    cf74:	bl	6980 <PyArg_ParseTuple@plt>
    cf78:	cbnz	w0, cf84 <PyFloat_FromString@plt+0x6454>
    cf7c:	mov	x19, #0x0                   	// #0
    cf80:	b	cfe8 <PyFloat_FromString@plt+0x64b8>
    cf84:	ldr	x2, [sp, #48]
    cf88:	mov	x3, x20
    cf8c:	add	x1, sp, #0x40
    cf90:	mov	w0, #0x1                   	// #1
    cf94:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    cf98:	cbz	w0, cf7c <PyFloat_FromString@plt+0x644c>
    cf9c:	ldr	x2, [sp, #56]
    cfa0:	mov	x3, x20
    cfa4:	add	x1, sp, #0x48
    cfa8:	mov	w0, #0x1                   	// #1
    cfac:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    cfb0:	cbnz	w0, cfc0 <PyFloat_FromString@plt+0x6490>
    cfb4:	ldr	x0, [sp, #64]
    cfb8:	bl	790c <PyFloat_FromString@plt+0xddc>
    cfbc:	b	cf7c <PyFloat_FromString@plt+0x644c>
    cfc0:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    cfc4:	add	x0, x0, #0x330
    cfc8:	add	x0, x0, #0x1a0
    cfcc:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    cfd0:	mov	x19, x0
    cfd4:	cbnz	x0, cff8 <PyFloat_FromString@plt+0x64c8>
    cfd8:	ldr	x0, [sp, #64]
    cfdc:	bl	790c <PyFloat_FromString@plt+0xddc>
    cfe0:	ldr	x0, [sp, #72]
    cfe4:	bl	790c <PyFloat_FromString@plt+0xddc>
    cfe8:	mov	x0, x19
    cfec:	ldp	x19, x20, [sp, #16]
    cff0:	ldp	x29, x30, [sp], #80
    cff4:	ret
    cff8:	ldp	x1, x2, [sp, #64]
    cffc:	add	x4, sp, #0x2c
    d000:	add	x3, x20, #0x10
    d004:	add	x0, x0, #0x18
    d008:	add	x1, x1, #0x18
    d00c:	add	x2, x2, #0x18
    d010:	bl	1bc74 <PyInit__decimal@@Base+0xacec>
    d014:	ldr	x0, [sp, #64]
    d018:	bl	790c <PyFloat_FromString@plt+0xddc>
    d01c:	ldr	x0, [sp, #72]
    d020:	bl	790c <PyFloat_FromString@plt+0xddc>
    d024:	ldr	w1, [sp, #44]
    d028:	mov	x0, x20
    d02c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    d030:	cbz	w0, cfe8 <PyFloat_FromString@plt+0x64b8>
    d034:	mov	x0, x19
    d038:	b	cfb8 <PyFloat_FromString@plt+0x6488>
    d03c:	stp	x29, x30, [sp, #-48]!
    d040:	mov	x3, x0
    d044:	mov	x2, x1
    d048:	mov	x29, sp
    d04c:	add	x1, sp, #0x28
    d050:	stp	x19, x20, [sp, #16]
    d054:	mov	x20, x0
    d058:	mov	w0, #0x1                   	// #1
    d05c:	str	wzr, [sp, #36]
    d060:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    d064:	cbz	w0, d0d0 <PyFloat_FromString@plt+0x65a0>
    d068:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    d06c:	add	x0, x0, #0x330
    d070:	add	x0, x0, #0x1a0
    d074:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    d078:	mov	x19, x0
    d07c:	cbnz	x0, d098 <PyFloat_FromString@plt+0x6568>
    d080:	ldr	x0, [sp, #40]
    d084:	bl	790c <PyFloat_FromString@plt+0xddc>
    d088:	mov	x0, x19
    d08c:	ldp	x19, x20, [sp, #16]
    d090:	ldp	x29, x30, [sp], #48
    d094:	ret
    d098:	ldr	x1, [sp, #40]
    d09c:	add	x3, sp, #0x24
    d0a0:	add	x2, x20, #0x10
    d0a4:	add	x0, x0, #0x18
    d0a8:	add	x1, x1, #0x18
    d0ac:	bl	2246c <PyInit__decimal@@Base+0x114e4>
    d0b0:	ldr	x0, [sp, #40]
    d0b4:	bl	790c <PyFloat_FromString@plt+0xddc>
    d0b8:	ldr	w1, [sp, #36]
    d0bc:	mov	x0, x20
    d0c0:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    d0c4:	cbz	w0, d088 <PyFloat_FromString@plt+0x6558>
    d0c8:	mov	x0, x19
    d0cc:	bl	790c <PyFloat_FromString@plt+0xddc>
    d0d0:	mov	x19, #0x0                   	// #0
    d0d4:	b	d088 <PyFloat_FromString@plt+0x6558>
    d0d8:	stp	x29, x30, [sp, #-48]!
    d0dc:	mov	x3, x0
    d0e0:	mov	x2, x1
    d0e4:	mov	x29, sp
    d0e8:	add	x1, sp, #0x28
    d0ec:	stp	x19, x20, [sp, #16]
    d0f0:	mov	x20, x0
    d0f4:	mov	w0, #0x1                   	// #1
    d0f8:	str	wzr, [sp, #36]
    d0fc:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    d100:	cbz	w0, d16c <PyFloat_FromString@plt+0x663c>
    d104:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    d108:	add	x0, x0, #0x330
    d10c:	add	x0, x0, #0x1a0
    d110:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    d114:	mov	x19, x0
    d118:	cbnz	x0, d134 <PyFloat_FromString@plt+0x6604>
    d11c:	ldr	x0, [sp, #40]
    d120:	bl	790c <PyFloat_FromString@plt+0xddc>
    d124:	mov	x0, x19
    d128:	ldp	x19, x20, [sp, #16]
    d12c:	ldp	x29, x30, [sp], #48
    d130:	ret
    d134:	ldr	x1, [sp, #40]
    d138:	add	x3, sp, #0x24
    d13c:	add	x2, x20, #0x10
    d140:	add	x0, x0, #0x18
    d144:	add	x1, x1, #0x18
    d148:	bl	1df34 <PyInit__decimal@@Base+0xcfac>
    d14c:	ldr	x0, [sp, #40]
    d150:	bl	790c <PyFloat_FromString@plt+0xddc>
    d154:	ldr	w1, [sp, #36]
    d158:	mov	x0, x20
    d15c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    d160:	cbz	w0, d124 <PyFloat_FromString@plt+0x65f4>
    d164:	mov	x0, x19
    d168:	bl	790c <PyFloat_FromString@plt+0xddc>
    d16c:	mov	x19, #0x0                   	// #0
    d170:	b	d124 <PyFloat_FromString@plt+0x65f4>
    d174:	stp	x29, x30, [sp, #-48]!
    d178:	mov	x3, x0
    d17c:	mov	x2, x1
    d180:	mov	x29, sp
    d184:	add	x1, sp, #0x28
    d188:	stp	x19, x20, [sp, #16]
    d18c:	mov	x20, x0
    d190:	mov	w0, #0x1                   	// #1
    d194:	str	wzr, [sp, #36]
    d198:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    d19c:	cbz	w0, d208 <PyFloat_FromString@plt+0x66d8>
    d1a0:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    d1a4:	add	x0, x0, #0x330
    d1a8:	add	x0, x0, #0x1a0
    d1ac:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    d1b0:	mov	x19, x0
    d1b4:	cbnz	x0, d1d0 <PyFloat_FromString@plt+0x66a0>
    d1b8:	ldr	x0, [sp, #40]
    d1bc:	bl	790c <PyFloat_FromString@plt+0xddc>
    d1c0:	mov	x0, x19
    d1c4:	ldp	x19, x20, [sp, #16]
    d1c8:	ldp	x29, x30, [sp], #48
    d1cc:	ret
    d1d0:	ldr	x1, [sp, #40]
    d1d4:	add	x3, sp, #0x24
    d1d8:	add	x2, x20, #0x10
    d1dc:	add	x0, x0, #0x18
    d1e0:	add	x1, x1, #0x18
    d1e4:	bl	1df4c <PyInit__decimal@@Base+0xcfc4>
    d1e8:	ldr	x0, [sp, #40]
    d1ec:	bl	790c <PyFloat_FromString@plt+0xddc>
    d1f0:	ldr	w1, [sp, #36]
    d1f4:	mov	x0, x20
    d1f8:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    d1fc:	cbz	w0, d1c0 <PyFloat_FromString@plt+0x6690>
    d200:	mov	x0, x19
    d204:	bl	790c <PyFloat_FromString@plt+0xddc>
    d208:	mov	x19, #0x0                   	// #0
    d20c:	b	d1c0 <PyFloat_FromString@plt+0x6690>
    d210:	stp	x29, x30, [sp, #-48]!
    d214:	mov	x3, x0
    d218:	mov	x2, x1
    d21c:	mov	x29, sp
    d220:	add	x1, sp, #0x28
    d224:	stp	x19, x20, [sp, #16]
    d228:	mov	x20, x0
    d22c:	mov	w0, #0x1                   	// #1
    d230:	str	wzr, [sp, #36]
    d234:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    d238:	cbz	w0, d2a4 <PyFloat_FromString@plt+0x6774>
    d23c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    d240:	add	x0, x0, #0x330
    d244:	add	x0, x0, #0x1a0
    d248:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    d24c:	mov	x19, x0
    d250:	cbnz	x0, d26c <PyFloat_FromString@plt+0x673c>
    d254:	ldr	x0, [sp, #40]
    d258:	bl	790c <PyFloat_FromString@plt+0xddc>
    d25c:	mov	x0, x19
    d260:	ldp	x19, x20, [sp, #16]
    d264:	ldp	x29, x30, [sp], #48
    d268:	ret
    d26c:	ldr	x1, [sp, #40]
    d270:	add	x3, sp, #0x24
    d274:	add	x2, x20, #0x10
    d278:	add	x0, x0, #0x18
    d27c:	add	x1, x1, #0x18
    d280:	bl	1d634 <PyInit__decimal@@Base+0xc6ac>
    d284:	ldr	x0, [sp, #40]
    d288:	bl	790c <PyFloat_FromString@plt+0xddc>
    d28c:	ldr	w1, [sp, #36]
    d290:	mov	x0, x20
    d294:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    d298:	cbz	w0, d25c <PyFloat_FromString@plt+0x672c>
    d29c:	mov	x0, x19
    d2a0:	bl	790c <PyFloat_FromString@plt+0xddc>
    d2a4:	mov	x19, #0x0                   	// #0
    d2a8:	b	d25c <PyFloat_FromString@plt+0x672c>
    d2ac:	stp	x29, x30, [sp, #-48]!
    d2b0:	mov	x3, x0
    d2b4:	mov	x2, x1
    d2b8:	mov	x29, sp
    d2bc:	add	x1, sp, #0x28
    d2c0:	stp	x19, x20, [sp, #16]
    d2c4:	mov	x20, x0
    d2c8:	mov	w0, #0x1                   	// #1
    d2cc:	str	wzr, [sp, #36]
    d2d0:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    d2d4:	cbz	w0, d340 <PyFloat_FromString@plt+0x6810>
    d2d8:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    d2dc:	add	x0, x0, #0x330
    d2e0:	add	x0, x0, #0x1a0
    d2e4:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    d2e8:	mov	x19, x0
    d2ec:	cbnz	x0, d308 <PyFloat_FromString@plt+0x67d8>
    d2f0:	ldr	x0, [sp, #40]
    d2f4:	bl	790c <PyFloat_FromString@plt+0xddc>
    d2f8:	mov	x0, x19
    d2fc:	ldp	x19, x20, [sp, #16]
    d300:	ldp	x29, x30, [sp], #48
    d304:	ret
    d308:	ldr	x1, [sp, #40]
    d30c:	add	x3, sp, #0x24
    d310:	add	x2, x20, #0x10
    d314:	add	x0, x0, #0x18
    d318:	add	x1, x1, #0x18
    d31c:	bl	1dda8 <PyInit__decimal@@Base+0xce20>
    d320:	ldr	x0, [sp, #40]
    d324:	bl	790c <PyFloat_FromString@plt+0xddc>
    d328:	ldr	w1, [sp, #36]
    d32c:	mov	x0, x20
    d330:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    d334:	cbz	w0, d2f8 <PyFloat_FromString@plt+0x67c8>
    d338:	mov	x0, x19
    d33c:	bl	790c <PyFloat_FromString@plt+0xddc>
    d340:	mov	x19, #0x0                   	// #0
    d344:	b	d2f8 <PyFloat_FromString@plt+0x67c8>
    d348:	stp	x29, x30, [sp, #-48]!
    d34c:	mov	x3, x0
    d350:	mov	x2, x1
    d354:	mov	x29, sp
    d358:	add	x1, sp, #0x28
    d35c:	stp	x19, x20, [sp, #16]
    d360:	mov	x20, x0
    d364:	mov	w0, #0x1                   	// #1
    d368:	str	wzr, [sp, #36]
    d36c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    d370:	cbz	w0, d3dc <PyFloat_FromString@plt+0x68ac>
    d374:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    d378:	add	x0, x0, #0x330
    d37c:	add	x0, x0, #0x1a0
    d380:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    d384:	mov	x19, x0
    d388:	cbnz	x0, d3a4 <PyFloat_FromString@plt+0x6874>
    d38c:	ldr	x0, [sp, #40]
    d390:	bl	790c <PyFloat_FromString@plt+0xddc>
    d394:	mov	x0, x19
    d398:	ldp	x19, x20, [sp, #16]
    d39c:	ldp	x29, x30, [sp], #48
    d3a0:	ret
    d3a4:	ldr	x1, [sp, #40]
    d3a8:	add	x3, sp, #0x24
    d3ac:	add	x2, x20, #0x10
    d3b0:	add	x0, x0, #0x18
    d3b4:	add	x1, x1, #0x18
    d3b8:	bl	1d8d4 <PyInit__decimal@@Base+0xc94c>
    d3bc:	ldr	x0, [sp, #40]
    d3c0:	bl	790c <PyFloat_FromString@plt+0xddc>
    d3c4:	ldr	w1, [sp, #36]
    d3c8:	mov	x0, x20
    d3cc:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    d3d0:	cbz	w0, d394 <PyFloat_FromString@plt+0x6864>
    d3d4:	mov	x0, x19
    d3d8:	bl	790c <PyFloat_FromString@plt+0xddc>
    d3dc:	mov	x19, #0x0                   	// #0
    d3e0:	b	d394 <PyFloat_FromString@plt+0x6864>
    d3e4:	stp	x29, x30, [sp, #-48]!
    d3e8:	mov	x3, x0
    d3ec:	mov	x2, x1
    d3f0:	mov	x29, sp
    d3f4:	add	x1, sp, #0x28
    d3f8:	stp	x19, x20, [sp, #16]
    d3fc:	mov	x20, x0
    d400:	mov	w0, #0x1                   	// #1
    d404:	str	wzr, [sp, #36]
    d408:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    d40c:	cbz	w0, d478 <PyFloat_FromString@plt+0x6948>
    d410:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    d414:	add	x0, x0, #0x330
    d418:	add	x0, x0, #0x1a0
    d41c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    d420:	mov	x19, x0
    d424:	cbnz	x0, d440 <PyFloat_FromString@plt+0x6910>
    d428:	ldr	x0, [sp, #40]
    d42c:	bl	790c <PyFloat_FromString@plt+0xddc>
    d430:	mov	x0, x19
    d434:	ldp	x19, x20, [sp, #16]
    d438:	ldp	x29, x30, [sp], #48
    d43c:	ret
    d440:	ldr	x1, [sp, #40]
    d444:	add	x3, sp, #0x24
    d448:	add	x2, x20, #0x10
    d44c:	add	x0, x0, #0x18
    d450:	add	x1, x1, #0x18
    d454:	bl	1d774 <PyInit__decimal@@Base+0xc7ec>
    d458:	ldr	x0, [sp, #40]
    d45c:	bl	790c <PyFloat_FromString@plt+0xddc>
    d460:	ldr	w1, [sp, #36]
    d464:	mov	x0, x20
    d468:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    d46c:	cbz	w0, d430 <PyFloat_FromString@plt+0x6900>
    d470:	mov	x0, x19
    d474:	bl	790c <PyFloat_FromString@plt+0xddc>
    d478:	mov	x19, #0x0                   	// #0
    d47c:	b	d430 <PyFloat_FromString@plt+0x6900>
    d480:	stp	x29, x30, [sp, #-48]!
    d484:	mov	x3, x0
    d488:	mov	x2, x1
    d48c:	mov	x29, sp
    d490:	add	x1, sp, #0x28
    d494:	stp	x19, x20, [sp, #16]
    d498:	mov	x20, x0
    d49c:	mov	w0, #0x1                   	// #1
    d4a0:	str	wzr, [sp, #36]
    d4a4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    d4a8:	cbz	w0, d514 <PyFloat_FromString@plt+0x69e4>
    d4ac:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    d4b0:	add	x0, x0, #0x330
    d4b4:	add	x0, x0, #0x1a0
    d4b8:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    d4bc:	mov	x19, x0
    d4c0:	cbnz	x0, d4dc <PyFloat_FromString@plt+0x69ac>
    d4c4:	ldr	x0, [sp, #40]
    d4c8:	bl	790c <PyFloat_FromString@plt+0xddc>
    d4cc:	mov	x0, x19
    d4d0:	ldp	x19, x20, [sp, #16]
    d4d4:	ldp	x29, x30, [sp], #48
    d4d8:	ret
    d4dc:	ldr	x1, [sp, #40]
    d4e0:	add	x3, sp, #0x24
    d4e4:	add	x2, x20, #0x10
    d4e8:	add	x0, x0, #0x18
    d4ec:	add	x1, x1, #0x18
    d4f0:	bl	1d580 <PyInit__decimal@@Base+0xc5f8>
    d4f4:	ldr	x0, [sp, #40]
    d4f8:	bl	790c <PyFloat_FromString@plt+0xddc>
    d4fc:	ldr	w1, [sp, #36]
    d500:	mov	x0, x20
    d504:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    d508:	cbz	w0, d4cc <PyFloat_FromString@plt+0x699c>
    d50c:	mov	x0, x19
    d510:	bl	790c <PyFloat_FromString@plt+0xddc>
    d514:	mov	x19, #0x0                   	// #0
    d518:	b	d4cc <PyFloat_FromString@plt+0x699c>
    d51c:	stp	x29, x30, [sp, #-48]!
    d520:	mov	x3, x0
    d524:	mov	x2, x1
    d528:	mov	x29, sp
    d52c:	add	x1, sp, #0x28
    d530:	stp	x19, x20, [sp, #16]
    d534:	mov	x20, x0
    d538:	mov	w0, #0x1                   	// #1
    d53c:	str	wzr, [sp, #36]
    d540:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    d544:	cbz	w0, d5b0 <PyFloat_FromString@plt+0x6a80>
    d548:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    d54c:	add	x0, x0, #0x330
    d550:	add	x0, x0, #0x1a0
    d554:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    d558:	mov	x19, x0
    d55c:	cbnz	x0, d578 <PyFloat_FromString@plt+0x6a48>
    d560:	ldr	x0, [sp, #40]
    d564:	bl	790c <PyFloat_FromString@plt+0xddc>
    d568:	mov	x0, x19
    d56c:	ldp	x19, x20, [sp, #16]
    d570:	ldp	x29, x30, [sp], #48
    d574:	ret
    d578:	ldr	x1, [sp, #40]
    d57c:	add	x3, sp, #0x24
    d580:	add	x2, x20, #0x10
    d584:	add	x0, x0, #0x18
    d588:	add	x1, x1, #0x18
    d58c:	bl	2006c <PyInit__decimal@@Base+0xf0e4>
    d590:	ldr	x0, [sp, #40]
    d594:	bl	790c <PyFloat_FromString@plt+0xddc>
    d598:	ldr	w1, [sp, #36]
    d59c:	mov	x0, x20
    d5a0:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    d5a4:	cbz	w0, d568 <PyFloat_FromString@plt+0x6a38>
    d5a8:	mov	x0, x19
    d5ac:	bl	790c <PyFloat_FromString@plt+0xddc>
    d5b0:	mov	x19, #0x0                   	// #0
    d5b4:	b	d568 <PyFloat_FromString@plt+0x6a38>
    d5b8:	stp	x29, x30, [sp, #-48]!
    d5bc:	mov	x3, x0
    d5c0:	mov	x2, x1
    d5c4:	mov	x29, sp
    d5c8:	add	x1, sp, #0x28
    d5cc:	stp	x19, x20, [sp, #16]
    d5d0:	mov	x20, x0
    d5d4:	mov	w0, #0x1                   	// #1
    d5d8:	str	wzr, [sp, #36]
    d5dc:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    d5e0:	cbz	w0, d64c <PyFloat_FromString@plt+0x6b1c>
    d5e4:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    d5e8:	add	x0, x0, #0x330
    d5ec:	add	x0, x0, #0x1a0
    d5f0:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    d5f4:	mov	x19, x0
    d5f8:	cbnz	x0, d614 <PyFloat_FromString@plt+0x6ae4>
    d5fc:	ldr	x0, [sp, #40]
    d600:	bl	790c <PyFloat_FromString@plt+0xddc>
    d604:	mov	x0, x19
    d608:	ldp	x19, x20, [sp, #16]
    d60c:	ldp	x29, x30, [sp], #48
    d610:	ret
    d614:	ldr	x1, [sp, #40]
    d618:	add	x3, sp, #0x24
    d61c:	add	x2, x20, #0x10
    d620:	add	x0, x0, #0x18
    d624:	add	x1, x1, #0x18
    d628:	bl	1fa34 <PyInit__decimal@@Base+0xeaac>
    d62c:	ldr	x0, [sp, #40]
    d630:	bl	790c <PyFloat_FromString@plt+0xddc>
    d634:	ldr	w1, [sp, #36]
    d638:	mov	x0, x20
    d63c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    d640:	cbz	w0, d604 <PyFloat_FromString@plt+0x6ad4>
    d644:	mov	x0, x19
    d648:	bl	790c <PyFloat_FromString@plt+0xddc>
    d64c:	mov	x19, #0x0                   	// #0
    d650:	b	d604 <PyFloat_FromString@plt+0x6ad4>
    d654:	stp	x29, x30, [sp, #-48]!
    d658:	mov	x3, x0
    d65c:	mov	x2, x1
    d660:	mov	x29, sp
    d664:	add	x1, sp, #0x28
    d668:	stp	x19, x20, [sp, #16]
    d66c:	mov	x20, x0
    d670:	mov	w0, #0x1                   	// #1
    d674:	str	wzr, [sp, #36]
    d678:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    d67c:	cbz	w0, d6e8 <PyFloat_FromString@plt+0x6bb8>
    d680:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    d684:	add	x0, x0, #0x330
    d688:	add	x0, x0, #0x1a0
    d68c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    d690:	mov	x19, x0
    d694:	cbnz	x0, d6b0 <PyFloat_FromString@plt+0x6b80>
    d698:	ldr	x0, [sp, #40]
    d69c:	bl	790c <PyFloat_FromString@plt+0xddc>
    d6a0:	mov	x0, x19
    d6a4:	ldp	x19, x20, [sp, #16]
    d6a8:	ldp	x29, x30, [sp], #48
    d6ac:	ret
    d6b0:	ldr	x1, [sp, #40]
    d6b4:	add	x3, sp, #0x24
    d6b8:	add	x2, x20, #0x10
    d6bc:	add	x0, x0, #0x18
    d6c0:	add	x1, x1, #0x18
    d6c4:	bl	1ef74 <PyInit__decimal@@Base+0xdfec>
    d6c8:	ldr	x0, [sp, #40]
    d6cc:	bl	790c <PyFloat_FromString@plt+0xddc>
    d6d0:	ldr	w1, [sp, #36]
    d6d4:	mov	x0, x20
    d6d8:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    d6dc:	cbz	w0, d6a0 <PyFloat_FromString@plt+0x6b70>
    d6e0:	mov	x0, x19
    d6e4:	bl	790c <PyFloat_FromString@plt+0xddc>
    d6e8:	mov	x19, #0x0                   	// #0
    d6ec:	b	d6a0 <PyFloat_FromString@plt+0x6b70>
    d6f0:	stp	x29, x30, [sp, #-48]!
    d6f4:	mov	x3, x0
    d6f8:	mov	x2, x1
    d6fc:	mov	x29, sp
    d700:	add	x1, sp, #0x28
    d704:	stp	x19, x20, [sp, #16]
    d708:	mov	x20, x0
    d70c:	mov	w0, #0x1                   	// #1
    d710:	str	wzr, [sp, #36]
    d714:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    d718:	cbz	w0, d784 <PyFloat_FromString@plt+0x6c54>
    d71c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    d720:	add	x0, x0, #0x330
    d724:	add	x0, x0, #0x1a0
    d728:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    d72c:	mov	x19, x0
    d730:	cbnz	x0, d74c <PyFloat_FromString@plt+0x6c1c>
    d734:	ldr	x0, [sp, #40]
    d738:	bl	790c <PyFloat_FromString@plt+0xddc>
    d73c:	mov	x0, x19
    d740:	ldp	x19, x20, [sp, #16]
    d744:	ldp	x29, x30, [sp], #48
    d748:	ret
    d74c:	ldr	x1, [sp, #40]
    d750:	add	x3, sp, #0x24
    d754:	add	x2, x20, #0x10
    d758:	add	x0, x0, #0x18
    d75c:	add	x1, x1, #0x18
    d760:	bl	1d6e8 <PyInit__decimal@@Base+0xc760>
    d764:	ldr	x0, [sp, #40]
    d768:	bl	790c <PyFloat_FromString@plt+0xddc>
    d76c:	ldr	w1, [sp, #36]
    d770:	mov	x0, x20
    d774:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    d778:	cbz	w0, d73c <PyFloat_FromString@plt+0x6c0c>
    d77c:	mov	x0, x19
    d780:	bl	790c <PyFloat_FromString@plt+0xddc>
    d784:	mov	x19, #0x0                   	// #0
    d788:	b	d73c <PyFloat_FromString@plt+0x6c0c>
    d78c:	stp	x29, x30, [sp, #-80]!
    d790:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    d794:	add	x3, x3, #0x9b0
    d798:	mov	x29, sp
    d79c:	stp	x19, x20, [sp, #16]
    d7a0:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    d7a4:	mov	x20, x0
    d7a8:	ldr	x19, [x19, #4008]
    d7ac:	mov	x0, x1
    d7b0:	add	x5, sp, #0x48
    d7b4:	mov	x1, x2
    d7b8:	add	x4, sp, #0x30
    d7bc:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    d7c0:	add	x3, x3, #0x300
    d7c4:	add	x2, x2, #0xdc9
    d7c8:	str	wzr, [sp, #44]
    d7cc:	str	x19, [sp, #72]
    d7d0:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    d7d4:	cbnz	w0, d7e0 <PyFloat_FromString@plt+0x6cb0>
    d7d8:	mov	x19, #0x0                   	// #0
    d7dc:	b	d898 <PyFloat_FromString@plt+0x6d68>
    d7e0:	ldr	x0, [sp, #72]
    d7e4:	cmp	x0, x19
    d7e8:	b.ne	d838 <PyFloat_FromString@plt+0x6d08>  // b.any
    d7ec:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    d7f0:	str	x0, [sp, #72]
    d7f4:	cbz	x0, d7d8 <PyFloat_FromString@plt+0x6ca8>
    d7f8:	bl	790c <PyFloat_FromString@plt+0xddc>
    d7fc:	ldr	x3, [sp, #72]
    d800:	mov	x2, x20
    d804:	add	x1, sp, #0x38
    d808:	mov	w0, #0x1                   	// #1
    d80c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    d810:	cbz	w0, d7d8 <PyFloat_FromString@plt+0x6ca8>
    d814:	ldr	x2, [sp, #48]
    d818:	add	x1, sp, #0x40
    d81c:	ldr	x3, [sp, #72]
    d820:	mov	w0, #0x1                   	// #1
    d824:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    d828:	cbnz	w0, d870 <PyFloat_FromString@plt+0x6d40>
    d82c:	ldr	x0, [sp, #56]
    d830:	bl	790c <PyFloat_FromString@plt+0xddc>
    d834:	b	d7d8 <PyFloat_FromString@plt+0x6ca8>
    d838:	ldr	x0, [x0, #8]
    d83c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    d840:	add	x1, x1, #0x330
    d844:	cmp	x0, x1
    d848:	b.eq	d7fc <PyFloat_FromString@plt+0x6ccc>  // b.none
    d84c:	bl	6a60 <PyType_IsSubtype@plt>
    d850:	cbnz	w0, d7fc <PyFloat_FromString@plt+0x6ccc>
    d854:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    d858:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    d85c:	add	x1, x1, #0x889
    d860:	ldr	x0, [x0, #3936]
    d864:	ldr	x0, [x0]
    d868:	bl	66e0 <PyErr_SetString@plt>
    d86c:	b	d7d8 <PyFloat_FromString@plt+0x6ca8>
    d870:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    d874:	add	x0, x0, #0x330
    d878:	add	x0, x0, #0x1a0
    d87c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    d880:	mov	x19, x0
    d884:	cbnz	x0, d8a8 <PyFloat_FromString@plt+0x6d78>
    d888:	ldr	x0, [sp, #56]
    d88c:	bl	790c <PyFloat_FromString@plt+0xddc>
    d890:	ldr	x0, [sp, #64]
    d894:	bl	790c <PyFloat_FromString@plt+0xddc>
    d898:	mov	x0, x19
    d89c:	ldp	x19, x20, [sp, #16]
    d8a0:	ldp	x29, x30, [sp], #80
    d8a4:	ret
    d8a8:	ldp	x1, x2, [sp, #56]
    d8ac:	add	x4, sp, #0x2c
    d8b0:	ldr	x3, [sp, #72]
    d8b4:	add	x0, x0, #0x18
    d8b8:	add	x3, x3, #0x10
    d8bc:	add	x1, x1, #0x18
    d8c0:	add	x2, x2, #0x18
    d8c4:	bl	1b700 <PyInit__decimal@@Base+0xa778>
    d8c8:	ldr	x0, [sp, #56]
    d8cc:	bl	790c <PyFloat_FromString@plt+0xddc>
    d8d0:	ldr	x0, [sp, #64]
    d8d4:	bl	790c <PyFloat_FromString@plt+0xddc>
    d8d8:	ldr	w1, [sp, #44]
    d8dc:	ldr	x0, [sp, #72]
    d8e0:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    d8e4:	cbz	w0, d898 <PyFloat_FromString@plt+0x6d68>
    d8e8:	mov	x0, x19
    d8ec:	b	d830 <PyFloat_FromString@plt+0x6d00>
    d8f0:	stp	x29, x30, [sp, #-80]!
    d8f4:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    d8f8:	add	x3, x3, #0x9b0
    d8fc:	mov	x29, sp
    d900:	stp	x19, x20, [sp, #16]
    d904:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    d908:	mov	x20, x0
    d90c:	ldr	x19, [x19, #4008]
    d910:	mov	x0, x1
    d914:	add	x5, sp, #0x48
    d918:	mov	x1, x2
    d91c:	add	x4, sp, #0x30
    d920:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    d924:	add	x3, x3, #0x318
    d928:	add	x2, x2, #0xdc9
    d92c:	str	wzr, [sp, #44]
    d930:	str	x19, [sp, #72]
    d934:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    d938:	cbnz	w0, d944 <PyFloat_FromString@plt+0x6e14>
    d93c:	mov	x19, #0x0                   	// #0
    d940:	b	d9fc <PyFloat_FromString@plt+0x6ecc>
    d944:	ldr	x0, [sp, #72]
    d948:	cmp	x0, x19
    d94c:	b.ne	d99c <PyFloat_FromString@plt+0x6e6c>  // b.any
    d950:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    d954:	str	x0, [sp, #72]
    d958:	cbz	x0, d93c <PyFloat_FromString@plt+0x6e0c>
    d95c:	bl	790c <PyFloat_FromString@plt+0xddc>
    d960:	ldr	x3, [sp, #72]
    d964:	mov	x2, x20
    d968:	add	x1, sp, #0x38
    d96c:	mov	w0, #0x1                   	// #1
    d970:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    d974:	cbz	w0, d93c <PyFloat_FromString@plt+0x6e0c>
    d978:	ldr	x2, [sp, #48]
    d97c:	add	x1, sp, #0x40
    d980:	ldr	x3, [sp, #72]
    d984:	mov	w0, #0x1                   	// #1
    d988:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    d98c:	cbnz	w0, d9d4 <PyFloat_FromString@plt+0x6ea4>
    d990:	ldr	x0, [sp, #56]
    d994:	bl	790c <PyFloat_FromString@plt+0xddc>
    d998:	b	d93c <PyFloat_FromString@plt+0x6e0c>
    d99c:	ldr	x0, [x0, #8]
    d9a0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    d9a4:	add	x1, x1, #0x330
    d9a8:	cmp	x0, x1
    d9ac:	b.eq	d960 <PyFloat_FromString@plt+0x6e30>  // b.none
    d9b0:	bl	6a60 <PyType_IsSubtype@plt>
    d9b4:	cbnz	w0, d960 <PyFloat_FromString@plt+0x6e30>
    d9b8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    d9bc:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    d9c0:	add	x1, x1, #0x889
    d9c4:	ldr	x0, [x0, #3936]
    d9c8:	ldr	x0, [x0]
    d9cc:	bl	66e0 <PyErr_SetString@plt>
    d9d0:	b	d93c <PyFloat_FromString@plt+0x6e0c>
    d9d4:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    d9d8:	add	x0, x0, #0x330
    d9dc:	add	x0, x0, #0x1a0
    d9e0:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    d9e4:	mov	x19, x0
    d9e8:	cbnz	x0, da0c <PyFloat_FromString@plt+0x6edc>
    d9ec:	ldr	x0, [sp, #56]
    d9f0:	bl	790c <PyFloat_FromString@plt+0xddc>
    d9f4:	ldr	x0, [sp, #64]
    d9f8:	bl	790c <PyFloat_FromString@plt+0xddc>
    d9fc:	mov	x0, x19
    da00:	ldp	x19, x20, [sp, #16]
    da04:	ldp	x29, x30, [sp], #80
    da08:	ret
    da0c:	ldp	x1, x2, [sp, #56]
    da10:	add	x4, sp, #0x2c
    da14:	ldr	x3, [sp, #72]
    da18:	add	x0, x0, #0x18
    da1c:	add	x3, x3, #0x10
    da20:	add	x1, x1, #0x18
    da24:	add	x2, x2, #0x18
    da28:	bl	1b4a8 <PyInit__decimal@@Base+0xa520>
    da2c:	ldr	x0, [sp, #56]
    da30:	bl	790c <PyFloat_FromString@plt+0xddc>
    da34:	ldr	x0, [sp, #64]
    da38:	bl	790c <PyFloat_FromString@plt+0xddc>
    da3c:	ldr	w1, [sp, #44]
    da40:	ldr	x0, [sp, #72]
    da44:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    da48:	cbz	w0, d9fc <PyFloat_FromString@plt+0x6ecc>
    da4c:	mov	x0, x19
    da50:	b	d994 <PyFloat_FromString@plt+0x6e64>
    da54:	stp	x29, x30, [sp, #-80]!
    da58:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    da5c:	add	x3, x3, #0x9b0
    da60:	mov	x29, sp
    da64:	stp	x19, x20, [sp, #16]
    da68:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    da6c:	mov	x20, x0
    da70:	ldr	x19, [x19, #4008]
    da74:	mov	x0, x1
    da78:	add	x5, sp, #0x48
    da7c:	mov	x1, x2
    da80:	add	x4, sp, #0x30
    da84:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    da88:	add	x3, x3, #0x330
    da8c:	add	x2, x2, #0xdc9
    da90:	str	wzr, [sp, #44]
    da94:	str	x19, [sp, #72]
    da98:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    da9c:	cbnz	w0, daa8 <PyFloat_FromString@plt+0x6f78>
    daa0:	mov	x19, #0x0                   	// #0
    daa4:	b	db60 <PyFloat_FromString@plt+0x7030>
    daa8:	ldr	x0, [sp, #72]
    daac:	cmp	x0, x19
    dab0:	b.ne	db00 <PyFloat_FromString@plt+0x6fd0>  // b.any
    dab4:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    dab8:	str	x0, [sp, #72]
    dabc:	cbz	x0, daa0 <PyFloat_FromString@plt+0x6f70>
    dac0:	bl	790c <PyFloat_FromString@plt+0xddc>
    dac4:	ldr	x3, [sp, #72]
    dac8:	mov	x2, x20
    dacc:	add	x1, sp, #0x38
    dad0:	mov	w0, #0x1                   	// #1
    dad4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    dad8:	cbz	w0, daa0 <PyFloat_FromString@plt+0x6f70>
    dadc:	ldr	x2, [sp, #48]
    dae0:	add	x1, sp, #0x40
    dae4:	ldr	x3, [sp, #72]
    dae8:	mov	w0, #0x1                   	// #1
    daec:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    daf0:	cbnz	w0, db38 <PyFloat_FromString@plt+0x7008>
    daf4:	ldr	x0, [sp, #56]
    daf8:	bl	790c <PyFloat_FromString@plt+0xddc>
    dafc:	b	daa0 <PyFloat_FromString@plt+0x6f70>
    db00:	ldr	x0, [x0, #8]
    db04:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    db08:	add	x1, x1, #0x330
    db0c:	cmp	x0, x1
    db10:	b.eq	dac4 <PyFloat_FromString@plt+0x6f94>  // b.none
    db14:	bl	6a60 <PyType_IsSubtype@plt>
    db18:	cbnz	w0, dac4 <PyFloat_FromString@plt+0x6f94>
    db1c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    db20:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    db24:	add	x1, x1, #0x889
    db28:	ldr	x0, [x0, #3936]
    db2c:	ldr	x0, [x0]
    db30:	bl	66e0 <PyErr_SetString@plt>
    db34:	b	daa0 <PyFloat_FromString@plt+0x6f70>
    db38:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    db3c:	add	x0, x0, #0x330
    db40:	add	x0, x0, #0x1a0
    db44:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    db48:	mov	x19, x0
    db4c:	cbnz	x0, db70 <PyFloat_FromString@plt+0x7040>
    db50:	ldr	x0, [sp, #56]
    db54:	bl	790c <PyFloat_FromString@plt+0xddc>
    db58:	ldr	x0, [sp, #64]
    db5c:	bl	790c <PyFloat_FromString@plt+0xddc>
    db60:	mov	x0, x19
    db64:	ldp	x19, x20, [sp, #16]
    db68:	ldp	x29, x30, [sp], #80
    db6c:	ret
    db70:	ldp	x1, x2, [sp, #56]
    db74:	add	x4, sp, #0x2c
    db78:	ldr	x3, [sp, #72]
    db7c:	add	x0, x0, #0x18
    db80:	add	x3, x3, #0x10
    db84:	add	x1, x1, #0x18
    db88:	add	x2, x2, #0x18
    db8c:	bl	1b20c <PyInit__decimal@@Base+0xa284>
    db90:	ldr	x0, [sp, #56]
    db94:	bl	790c <PyFloat_FromString@plt+0xddc>
    db98:	ldr	x0, [sp, #64]
    db9c:	bl	790c <PyFloat_FromString@plt+0xddc>
    dba0:	ldr	w1, [sp, #44]
    dba4:	ldr	x0, [sp, #72]
    dba8:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    dbac:	cbz	w0, db60 <PyFloat_FromString@plt+0x7030>
    dbb0:	mov	x0, x19
    dbb4:	b	daf8 <PyFloat_FromString@plt+0x6fc8>
    dbb8:	stp	x29, x30, [sp, #-80]!
    dbbc:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    dbc0:	add	x3, x3, #0x9b0
    dbc4:	mov	x29, sp
    dbc8:	stp	x19, x20, [sp, #16]
    dbcc:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    dbd0:	mov	x20, x0
    dbd4:	ldr	x19, [x19, #4008]
    dbd8:	mov	x0, x1
    dbdc:	add	x5, sp, #0x48
    dbe0:	mov	x1, x2
    dbe4:	add	x4, sp, #0x30
    dbe8:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    dbec:	add	x3, x3, #0x348
    dbf0:	add	x2, x2, #0xdc9
    dbf4:	str	wzr, [sp, #44]
    dbf8:	str	x19, [sp, #72]
    dbfc:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    dc00:	cbnz	w0, dc0c <PyFloat_FromString@plt+0x70dc>
    dc04:	mov	x19, #0x0                   	// #0
    dc08:	b	dcc4 <PyFloat_FromString@plt+0x7194>
    dc0c:	ldr	x0, [sp, #72]
    dc10:	cmp	x0, x19
    dc14:	b.ne	dc64 <PyFloat_FromString@plt+0x7134>  // b.any
    dc18:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    dc1c:	str	x0, [sp, #72]
    dc20:	cbz	x0, dc04 <PyFloat_FromString@plt+0x70d4>
    dc24:	bl	790c <PyFloat_FromString@plt+0xddc>
    dc28:	ldr	x3, [sp, #72]
    dc2c:	mov	x2, x20
    dc30:	add	x1, sp, #0x38
    dc34:	mov	w0, #0x1                   	// #1
    dc38:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    dc3c:	cbz	w0, dc04 <PyFloat_FromString@plt+0x70d4>
    dc40:	ldr	x2, [sp, #48]
    dc44:	add	x1, sp, #0x40
    dc48:	ldr	x3, [sp, #72]
    dc4c:	mov	w0, #0x1                   	// #1
    dc50:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    dc54:	cbnz	w0, dc9c <PyFloat_FromString@plt+0x716c>
    dc58:	ldr	x0, [sp, #56]
    dc5c:	bl	790c <PyFloat_FromString@plt+0xddc>
    dc60:	b	dc04 <PyFloat_FromString@plt+0x70d4>
    dc64:	ldr	x0, [x0, #8]
    dc68:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    dc6c:	add	x1, x1, #0x330
    dc70:	cmp	x0, x1
    dc74:	b.eq	dc28 <PyFloat_FromString@plt+0x70f8>  // b.none
    dc78:	bl	6a60 <PyType_IsSubtype@plt>
    dc7c:	cbnz	w0, dc28 <PyFloat_FromString@plt+0x70f8>
    dc80:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    dc84:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    dc88:	add	x1, x1, #0x889
    dc8c:	ldr	x0, [x0, #3936]
    dc90:	ldr	x0, [x0]
    dc94:	bl	66e0 <PyErr_SetString@plt>
    dc98:	b	dc04 <PyFloat_FromString@plt+0x70d4>
    dc9c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    dca0:	add	x0, x0, #0x330
    dca4:	add	x0, x0, #0x1a0
    dca8:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    dcac:	mov	x19, x0
    dcb0:	cbnz	x0, dcd4 <PyFloat_FromString@plt+0x71a4>
    dcb4:	ldr	x0, [sp, #56]
    dcb8:	bl	790c <PyFloat_FromString@plt+0xddc>
    dcbc:	ldr	x0, [sp, #64]
    dcc0:	bl	790c <PyFloat_FromString@plt+0xddc>
    dcc4:	mov	x0, x19
    dcc8:	ldp	x19, x20, [sp, #16]
    dccc:	ldp	x29, x30, [sp], #80
    dcd0:	ret
    dcd4:	ldp	x1, x2, [sp, #56]
    dcd8:	add	x4, sp, #0x2c
    dcdc:	ldr	x3, [sp, #72]
    dce0:	add	x0, x0, #0x18
    dce4:	add	x3, x3, #0x10
    dce8:	add	x1, x1, #0x18
    dcec:	add	x2, x2, #0x18
    dcf0:	bl	1b83c <PyInit__decimal@@Base+0xa8b4>
    dcf4:	ldr	x0, [sp, #56]
    dcf8:	bl	790c <PyFloat_FromString@plt+0xddc>
    dcfc:	ldr	x0, [sp, #64]
    dd00:	bl	790c <PyFloat_FromString@plt+0xddc>
    dd04:	ldr	w1, [sp, #44]
    dd08:	ldr	x0, [sp, #72]
    dd0c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    dd10:	cbz	w0, dcc4 <PyFloat_FromString@plt+0x7194>
    dd14:	mov	x0, x19
    dd18:	b	dc5c <PyFloat_FromString@plt+0x712c>
    dd1c:	stp	x29, x30, [sp, #-80]!
    dd20:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    dd24:	add	x3, x3, #0x9b0
    dd28:	mov	x29, sp
    dd2c:	stp	x19, x20, [sp, #16]
    dd30:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    dd34:	mov	x20, x0
    dd38:	ldr	x19, [x19, #4008]
    dd3c:	mov	x0, x1
    dd40:	add	x5, sp, #0x48
    dd44:	mov	x1, x2
    dd48:	add	x4, sp, #0x30
    dd4c:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    dd50:	add	x3, x3, #0x360
    dd54:	add	x2, x2, #0xdc9
    dd58:	str	wzr, [sp, #44]
    dd5c:	str	x19, [sp, #72]
    dd60:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    dd64:	cbnz	w0, dd70 <PyFloat_FromString@plt+0x7240>
    dd68:	mov	x19, #0x0                   	// #0
    dd6c:	b	de28 <PyFloat_FromString@plt+0x72f8>
    dd70:	ldr	x0, [sp, #72]
    dd74:	cmp	x0, x19
    dd78:	b.ne	ddc8 <PyFloat_FromString@plt+0x7298>  // b.any
    dd7c:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    dd80:	str	x0, [sp, #72]
    dd84:	cbz	x0, dd68 <PyFloat_FromString@plt+0x7238>
    dd88:	bl	790c <PyFloat_FromString@plt+0xddc>
    dd8c:	ldr	x3, [sp, #72]
    dd90:	mov	x2, x20
    dd94:	add	x1, sp, #0x38
    dd98:	mov	w0, #0x1                   	// #1
    dd9c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    dda0:	cbz	w0, dd68 <PyFloat_FromString@plt+0x7238>
    dda4:	ldr	x2, [sp, #48]
    dda8:	add	x1, sp, #0x40
    ddac:	ldr	x3, [sp, #72]
    ddb0:	mov	w0, #0x1                   	// #1
    ddb4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    ddb8:	cbnz	w0, de00 <PyFloat_FromString@plt+0x72d0>
    ddbc:	ldr	x0, [sp, #56]
    ddc0:	bl	790c <PyFloat_FromString@plt+0xddc>
    ddc4:	b	dd68 <PyFloat_FromString@plt+0x7238>
    ddc8:	ldr	x0, [x0, #8]
    ddcc:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    ddd0:	add	x1, x1, #0x330
    ddd4:	cmp	x0, x1
    ddd8:	b.eq	dd8c <PyFloat_FromString@plt+0x725c>  // b.none
    dddc:	bl	6a60 <PyType_IsSubtype@plt>
    dde0:	cbnz	w0, dd8c <PyFloat_FromString@plt+0x725c>
    dde4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    dde8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    ddec:	add	x1, x1, #0x889
    ddf0:	ldr	x0, [x0, #3936]
    ddf4:	ldr	x0, [x0]
    ddf8:	bl	66e0 <PyErr_SetString@plt>
    ddfc:	b	dd68 <PyFloat_FromString@plt+0x7238>
    de00:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    de04:	add	x0, x0, #0x330
    de08:	add	x0, x0, #0x1a0
    de0c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    de10:	mov	x19, x0
    de14:	cbnz	x0, de38 <PyFloat_FromString@plt+0x7308>
    de18:	ldr	x0, [sp, #56]
    de1c:	bl	790c <PyFloat_FromString@plt+0xddc>
    de20:	ldr	x0, [sp, #64]
    de24:	bl	790c <PyFloat_FromString@plt+0xddc>
    de28:	mov	x0, x19
    de2c:	ldp	x19, x20, [sp, #16]
    de30:	ldp	x29, x30, [sp], #80
    de34:	ret
    de38:	ldp	x1, x2, [sp, #56]
    de3c:	add	x4, sp, #0x2c
    de40:	ldr	x3, [sp, #72]
    de44:	add	x0, x0, #0x18
    de48:	add	x3, x3, #0x10
    de4c:	add	x1, x1, #0x18
    de50:	add	x2, x2, #0x18
    de54:	bl	1ade4 <PyInit__decimal@@Base+0x9e5c>
    de58:	ldr	x0, [sp, #56]
    de5c:	bl	790c <PyFloat_FromString@plt+0xddc>
    de60:	ldr	x0, [sp, #64]
    de64:	bl	790c <PyFloat_FromString@plt+0xddc>
    de68:	ldr	w1, [sp, #44]
    de6c:	ldr	x0, [sp, #72]
    de70:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    de74:	cbz	w0, de28 <PyFloat_FromString@plt+0x72f8>
    de78:	mov	x0, x19
    de7c:	b	ddc0 <PyFloat_FromString@plt+0x7290>
    de80:	stp	x29, x30, [sp, #-80]!
    de84:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    de88:	add	x3, x3, #0x9b0
    de8c:	mov	x29, sp
    de90:	stp	x19, x20, [sp, #16]
    de94:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    de98:	mov	x20, x0
    de9c:	ldr	x19, [x19, #4008]
    dea0:	mov	x0, x1
    dea4:	add	x5, sp, #0x48
    dea8:	mov	x1, x2
    deac:	add	x4, sp, #0x30
    deb0:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    deb4:	add	x3, x3, #0x378
    deb8:	add	x2, x2, #0xdc9
    debc:	str	wzr, [sp, #44]
    dec0:	str	x19, [sp, #72]
    dec4:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    dec8:	cbnz	w0, ded4 <PyFloat_FromString@plt+0x73a4>
    decc:	mov	x19, #0x0                   	// #0
    ded0:	b	df8c <PyFloat_FromString@plt+0x745c>
    ded4:	ldr	x0, [sp, #72]
    ded8:	cmp	x0, x19
    dedc:	b.ne	df2c <PyFloat_FromString@plt+0x73fc>  // b.any
    dee0:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    dee4:	str	x0, [sp, #72]
    dee8:	cbz	x0, decc <PyFloat_FromString@plt+0x739c>
    deec:	bl	790c <PyFloat_FromString@plt+0xddc>
    def0:	ldr	x3, [sp, #72]
    def4:	mov	x2, x20
    def8:	add	x1, sp, #0x38
    defc:	mov	w0, #0x1                   	// #1
    df00:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    df04:	cbz	w0, decc <PyFloat_FromString@plt+0x739c>
    df08:	ldr	x2, [sp, #48]
    df0c:	add	x1, sp, #0x40
    df10:	ldr	x3, [sp, #72]
    df14:	mov	w0, #0x1                   	// #1
    df18:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    df1c:	cbnz	w0, df64 <PyFloat_FromString@plt+0x7434>
    df20:	ldr	x0, [sp, #56]
    df24:	bl	790c <PyFloat_FromString@plt+0xddc>
    df28:	b	decc <PyFloat_FromString@plt+0x739c>
    df2c:	ldr	x0, [x0, #8]
    df30:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    df34:	add	x1, x1, #0x330
    df38:	cmp	x0, x1
    df3c:	b.eq	def0 <PyFloat_FromString@plt+0x73c0>  // b.none
    df40:	bl	6a60 <PyType_IsSubtype@plt>
    df44:	cbnz	w0, def0 <PyFloat_FromString@plt+0x73c0>
    df48:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    df4c:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    df50:	add	x1, x1, #0x889
    df54:	ldr	x0, [x0, #3936]
    df58:	ldr	x0, [x0]
    df5c:	bl	66e0 <PyErr_SetString@plt>
    df60:	b	decc <PyFloat_FromString@plt+0x739c>
    df64:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    df68:	add	x0, x0, #0x330
    df6c:	add	x0, x0, #0x1a0
    df70:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    df74:	mov	x19, x0
    df78:	cbnz	x0, df9c <PyFloat_FromString@plt+0x746c>
    df7c:	ldr	x0, [sp, #56]
    df80:	bl	790c <PyFloat_FromString@plt+0xddc>
    df84:	ldr	x0, [sp, #64]
    df88:	bl	790c <PyFloat_FromString@plt+0xddc>
    df8c:	mov	x0, x19
    df90:	ldp	x19, x20, [sp, #16]
    df94:	ldp	x29, x30, [sp], #80
    df98:	ret
    df9c:	ldp	x1, x2, [sp, #56]
    dfa0:	add	x4, sp, #0x2c
    dfa4:	ldr	x3, [sp, #72]
    dfa8:	add	x0, x0, #0x18
    dfac:	add	x3, x3, #0x10
    dfb0:	add	x1, x1, #0x18
    dfb4:	add	x2, x2, #0x18
    dfb8:	bl	1a66c <PyInit__decimal@@Base+0x96e4>
    dfbc:	ldr	x0, [sp, #56]
    dfc0:	bl	790c <PyFloat_FromString@plt+0xddc>
    dfc4:	ldr	x0, [sp, #64]
    dfc8:	bl	790c <PyFloat_FromString@plt+0xddc>
    dfcc:	ldr	w1, [sp, #44]
    dfd0:	ldr	x0, [sp, #72]
    dfd4:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    dfd8:	cbz	w0, df8c <PyFloat_FromString@plt+0x745c>
    dfdc:	mov	x0, x19
    dfe0:	b	df24 <PyFloat_FromString@plt+0x73f4>
    dfe4:	stp	x29, x30, [sp, #-64]!
    dfe8:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    dfec:	add	x3, x3, #0x9b0
    dff0:	mov	x29, sp
    dff4:	stp	x19, x20, [sp, #16]
    dff8:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    dffc:	mov	x20, x0
    e000:	ldr	x19, [x19, #4008]
    e004:	mov	x0, x1
    e008:	add	x5, sp, #0x38
    e00c:	mov	x1, x2
    e010:	add	x4, sp, #0x20
    e014:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    e018:	add	x3, x3, #0x390
    e01c:	add	x2, x2, #0xdc9
    e020:	str	x19, [sp, #56]
    e024:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    e028:	cbnz	w0, e040 <PyFloat_FromString@plt+0x7510>
    e02c:	mov	x19, #0x0                   	// #0
    e030:	mov	x0, x19
    e034:	ldp	x19, x20, [sp, #16]
    e038:	ldp	x29, x30, [sp], #64
    e03c:	ret
    e040:	ldr	x0, [sp, #56]
    e044:	cmp	x0, x19
    e048:	b.ne	e098 <PyFloat_FromString@plt+0x7568>  // b.any
    e04c:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    e050:	str	x0, [sp, #56]
    e054:	cbz	x0, e02c <PyFloat_FromString@plt+0x74fc>
    e058:	bl	790c <PyFloat_FromString@plt+0xddc>
    e05c:	ldr	x3, [sp, #56]
    e060:	mov	x2, x20
    e064:	add	x1, sp, #0x28
    e068:	mov	w0, #0x1                   	// #1
    e06c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    e070:	cbz	w0, e02c <PyFloat_FromString@plt+0x74fc>
    e074:	ldr	x2, [sp, #32]
    e078:	add	x1, sp, #0x30
    e07c:	ldr	x3, [sp, #56]
    e080:	mov	w0, #0x1                   	// #1
    e084:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    e088:	cbnz	w0, e0d0 <PyFloat_FromString@plt+0x75a0>
    e08c:	ldr	x0, [sp, #40]
    e090:	bl	790c <PyFloat_FromString@plt+0xddc>
    e094:	b	e02c <PyFloat_FromString@plt+0x74fc>
    e098:	ldr	x0, [x0, #8]
    e09c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    e0a0:	add	x1, x1, #0x330
    e0a4:	cmp	x0, x1
    e0a8:	b.eq	e05c <PyFloat_FromString@plt+0x752c>  // b.none
    e0ac:	bl	6a60 <PyType_IsSubtype@plt>
    e0b0:	cbnz	w0, e05c <PyFloat_FromString@plt+0x752c>
    e0b4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    e0b8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    e0bc:	add	x1, x1, #0x889
    e0c0:	ldr	x0, [x0, #3936]
    e0c4:	ldr	x0, [x0]
    e0c8:	bl	66e0 <PyErr_SetString@plt>
    e0cc:	b	e02c <PyFloat_FromString@plt+0x74fc>
    e0d0:	ldp	x0, x1, [sp, #40]
    e0d4:	add	x1, x1, #0x18
    e0d8:	add	x0, x0, #0x18
    e0dc:	bl	2230c <PyInit__decimal@@Base+0x11384>
    e0e0:	cbz	w0, e100 <PyFloat_FromString@plt+0x75d0>
    e0e4:	bl	6c14 <PyFloat_FromString@plt+0xe4>
    e0e8:	mov	x19, x0
    e0ec:	ldr	x0, [sp, #40]
    e0f0:	bl	790c <PyFloat_FromString@plt+0xddc>
    e0f4:	ldr	x0, [sp, #48]
    e0f8:	bl	790c <PyFloat_FromString@plt+0xddc>
    e0fc:	b	e030 <PyFloat_FromString@plt+0x7500>
    e100:	bl	6c2c <PyFloat_FromString@plt+0xfc>
    e104:	b	e0e8 <PyFloat_FromString@plt+0x75b8>
    e108:	stp	x29, x30, [sp, #-80]!
    e10c:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    e110:	add	x3, x3, #0x9b0
    e114:	mov	x29, sp
    e118:	stp	x19, x20, [sp, #16]
    e11c:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    e120:	mov	x20, x0
    e124:	ldr	x19, [x19, #4008]
    e128:	mov	x0, x1
    e12c:	add	x5, sp, #0x48
    e130:	mov	x1, x2
    e134:	add	x4, sp, #0x30
    e138:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    e13c:	add	x3, x3, #0x3a8
    e140:	add	x2, x2, #0xdc9
    e144:	str	wzr, [sp, #44]
    e148:	str	x19, [sp, #72]
    e14c:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    e150:	cbnz	w0, e15c <PyFloat_FromString@plt+0x762c>
    e154:	mov	x19, #0x0                   	// #0
    e158:	b	e214 <PyFloat_FromString@plt+0x76e4>
    e15c:	ldr	x0, [sp, #72]
    e160:	cmp	x0, x19
    e164:	b.ne	e1b4 <PyFloat_FromString@plt+0x7684>  // b.any
    e168:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    e16c:	str	x0, [sp, #72]
    e170:	cbz	x0, e154 <PyFloat_FromString@plt+0x7624>
    e174:	bl	790c <PyFloat_FromString@plt+0xddc>
    e178:	ldr	x3, [sp, #72]
    e17c:	mov	x2, x20
    e180:	add	x1, sp, #0x38
    e184:	mov	w0, #0x1                   	// #1
    e188:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    e18c:	cbz	w0, e154 <PyFloat_FromString@plt+0x7624>
    e190:	ldr	x2, [sp, #48]
    e194:	add	x1, sp, #0x40
    e198:	ldr	x3, [sp, #72]
    e19c:	mov	w0, #0x1                   	// #1
    e1a0:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    e1a4:	cbnz	w0, e1ec <PyFloat_FromString@plt+0x76bc>
    e1a8:	ldr	x0, [sp, #56]
    e1ac:	bl	790c <PyFloat_FromString@plt+0xddc>
    e1b0:	b	e154 <PyFloat_FromString@plt+0x7624>
    e1b4:	ldr	x0, [x0, #8]
    e1b8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    e1bc:	add	x1, x1, #0x330
    e1c0:	cmp	x0, x1
    e1c4:	b.eq	e178 <PyFloat_FromString@plt+0x7648>  // b.none
    e1c8:	bl	6a60 <PyType_IsSubtype@plt>
    e1cc:	cbnz	w0, e178 <PyFloat_FromString@plt+0x7648>
    e1d0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    e1d4:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    e1d8:	add	x1, x1, #0x889
    e1dc:	ldr	x0, [x0, #3936]
    e1e0:	ldr	x0, [x0]
    e1e4:	bl	66e0 <PyErr_SetString@plt>
    e1e8:	b	e154 <PyFloat_FromString@plt+0x7624>
    e1ec:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    e1f0:	add	x0, x0, #0x330
    e1f4:	add	x0, x0, #0x1a0
    e1f8:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    e1fc:	mov	x19, x0
    e200:	cbnz	x0, e224 <PyFloat_FromString@plt+0x76f4>
    e204:	ldr	x0, [sp, #56]
    e208:	bl	790c <PyFloat_FromString@plt+0xddc>
    e20c:	ldr	x0, [sp, #64]
    e210:	bl	790c <PyFloat_FromString@plt+0xddc>
    e214:	mov	x0, x19
    e218:	ldp	x19, x20, [sp, #16]
    e21c:	ldp	x29, x30, [sp], #80
    e220:	ret
    e224:	ldp	x1, x2, [sp, #56]
    e228:	add	x3, sp, #0x2c
    e22c:	add	x0, x0, #0x18
    e230:	add	x1, x1, #0x18
    e234:	add	x2, x2, #0x18
    e238:	bl	19384 <PyInit__decimal@@Base+0x83fc>
    e23c:	ldr	x0, [sp, #56]
    e240:	bl	790c <PyFloat_FromString@plt+0xddc>
    e244:	ldr	x0, [sp, #64]
    e248:	bl	790c <PyFloat_FromString@plt+0xddc>
    e24c:	ldr	w1, [sp, #44]
    e250:	ldr	x0, [sp, #72]
    e254:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    e258:	cbz	w0, e214 <PyFloat_FromString@plt+0x76e4>
    e25c:	mov	x0, x19
    e260:	b	e1ac <PyFloat_FromString@plt+0x767c>
    e264:	stp	x29, x30, [sp, #-64]!
    e268:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    e26c:	add	x3, x3, #0x9b0
    e270:	mov	x29, sp
    e274:	stp	x19, x20, [sp, #16]
    e278:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    e27c:	mov	x20, x0
    e280:	ldr	x19, [x19, #4008]
    e284:	mov	x0, x1
    e288:	add	x5, sp, #0x20
    e28c:	mov	x1, x2
    e290:	add	x4, sp, #0x28
    e294:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    e298:	add	x3, x3, #0x3c0
    e29c:	add	x2, x2, #0xdc9
    e2a0:	str	x19, [sp, #32]
    e2a4:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    e2a8:	cbnz	w0, e2c0 <PyFloat_FromString@plt+0x7790>
    e2ac:	mov	x19, #0x0                   	// #0
    e2b0:	mov	x0, x19
    e2b4:	ldp	x19, x20, [sp, #16]
    e2b8:	ldp	x29, x30, [sp], #64
    e2bc:	ret
    e2c0:	ldr	x0, [sp, #32]
    e2c4:	cmp	x0, x19
    e2c8:	b.ne	e314 <PyFloat_FromString@plt+0x77e4>  // b.any
    e2cc:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    e2d0:	str	x0, [sp, #32]
    e2d4:	cbz	x0, e2ac <PyFloat_FromString@plt+0x777c>
    e2d8:	bl	790c <PyFloat_FromString@plt+0xddc>
    e2dc:	ldr	x3, [sp, #32]
    e2e0:	mov	x2, x20
    e2e4:	add	x1, sp, #0x30
    e2e8:	mov	w0, #0x1                   	// #1
    e2ec:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    e2f0:	cbz	w0, e2ac <PyFloat_FromString@plt+0x777c>
    e2f4:	ldp	x3, x2, [sp, #32]
    e2f8:	add	x1, sp, #0x38
    e2fc:	mov	w0, #0x1                   	// #1
    e300:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    e304:	cbnz	w0, e34c <PyFloat_FromString@plt+0x781c>
    e308:	ldr	x0, [sp, #48]
    e30c:	bl	790c <PyFloat_FromString@plt+0xddc>
    e310:	b	e2ac <PyFloat_FromString@plt+0x777c>
    e314:	ldr	x0, [x0, #8]
    e318:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    e31c:	add	x1, x1, #0x330
    e320:	cmp	x0, x1
    e324:	b.eq	e2dc <PyFloat_FromString@plt+0x77ac>  // b.none
    e328:	bl	6a60 <PyType_IsSubtype@plt>
    e32c:	cbnz	w0, e2dc <PyFloat_FromString@plt+0x77ac>
    e330:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    e334:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    e338:	add	x1, x1, #0x889
    e33c:	ldr	x0, [x0, #3936]
    e340:	ldr	x0, [x0]
    e344:	bl	66e0 <PyErr_SetString@plt>
    e348:	b	e2ac <PyFloat_FromString@plt+0x777c>
    e34c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    e350:	add	x0, x0, #0x330
    e354:	add	x0, x0, #0x1a0
    e358:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    e35c:	mov	x19, x0
    e360:	cbnz	x0, e378 <PyFloat_FromString@plt+0x7848>
    e364:	ldr	x0, [sp, #48]
    e368:	bl	790c <PyFloat_FromString@plt+0xddc>
    e36c:	ldr	x0, [sp, #56]
    e370:	bl	790c <PyFloat_FromString@plt+0xddc>
    e374:	b	e2b0 <PyFloat_FromString@plt+0x7780>
    e378:	ldp	x1, x2, [sp, #48]
    e37c:	add	x0, x0, #0x18
    e380:	add	x2, x2, #0x18
    e384:	add	x1, x1, #0x18
    e388:	bl	196d0 <PyInit__decimal@@Base+0x8748>
    e38c:	b	e364 <PyFloat_FromString@plt+0x7834>
    e390:	stp	x29, x30, [sp, #-64]!
    e394:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    e398:	add	x3, x3, #0x9b0
    e39c:	mov	x29, sp
    e3a0:	stp	x19, x20, [sp, #16]
    e3a4:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    e3a8:	mov	x20, x0
    e3ac:	ldr	x19, [x19, #4008]
    e3b0:	mov	x0, x1
    e3b4:	add	x5, sp, #0x20
    e3b8:	mov	x1, x2
    e3bc:	add	x4, sp, #0x28
    e3c0:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    e3c4:	add	x3, x3, #0x3d8
    e3c8:	add	x2, x2, #0xdc9
    e3cc:	str	x19, [sp, #32]
    e3d0:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    e3d4:	cbnz	w0, e3ec <PyFloat_FromString@plt+0x78bc>
    e3d8:	mov	x19, #0x0                   	// #0
    e3dc:	mov	x0, x19
    e3e0:	ldp	x19, x20, [sp, #16]
    e3e4:	ldp	x29, x30, [sp], #64
    e3e8:	ret
    e3ec:	ldr	x0, [sp, #32]
    e3f0:	cmp	x0, x19
    e3f4:	b.ne	e440 <PyFloat_FromString@plt+0x7910>  // b.any
    e3f8:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    e3fc:	str	x0, [sp, #32]
    e400:	cbz	x0, e3d8 <PyFloat_FromString@plt+0x78a8>
    e404:	bl	790c <PyFloat_FromString@plt+0xddc>
    e408:	ldr	x3, [sp, #32]
    e40c:	mov	x2, x20
    e410:	add	x1, sp, #0x30
    e414:	mov	w0, #0x1                   	// #1
    e418:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    e41c:	cbz	w0, e3d8 <PyFloat_FromString@plt+0x78a8>
    e420:	ldp	x3, x2, [sp, #32]
    e424:	add	x1, sp, #0x38
    e428:	mov	w0, #0x1                   	// #1
    e42c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    e430:	cbnz	w0, e478 <PyFloat_FromString@plt+0x7948>
    e434:	ldr	x0, [sp, #48]
    e438:	bl	790c <PyFloat_FromString@plt+0xddc>
    e43c:	b	e3d8 <PyFloat_FromString@plt+0x78a8>
    e440:	ldr	x0, [x0, #8]
    e444:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    e448:	add	x1, x1, #0x330
    e44c:	cmp	x0, x1
    e450:	b.eq	e408 <PyFloat_FromString@plt+0x78d8>  // b.none
    e454:	bl	6a60 <PyType_IsSubtype@plt>
    e458:	cbnz	w0, e408 <PyFloat_FromString@plt+0x78d8>
    e45c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    e460:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    e464:	add	x1, x1, #0x889
    e468:	ldr	x0, [x0, #3936]
    e46c:	ldr	x0, [x0]
    e470:	bl	66e0 <PyErr_SetString@plt>
    e474:	b	e3d8 <PyFloat_FromString@plt+0x78a8>
    e478:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    e47c:	add	x0, x0, #0x330
    e480:	add	x0, x0, #0x1a0
    e484:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    e488:	mov	x19, x0
    e48c:	cbnz	x0, e4a4 <PyFloat_FromString@plt+0x7974>
    e490:	ldr	x0, [sp, #48]
    e494:	bl	790c <PyFloat_FromString@plt+0xddc>
    e498:	ldr	x0, [sp, #56]
    e49c:	bl	790c <PyFloat_FromString@plt+0xddc>
    e4a0:	b	e3dc <PyFloat_FromString@plt+0x78ac>
    e4a4:	ldp	x1, x2, [sp, #48]
    e4a8:	add	x0, x0, #0x18
    e4ac:	add	x2, x2, #0x18
    e4b0:	add	x1, x1, #0x18
    e4b4:	bl	19634 <PyInit__decimal@@Base+0x86ac>
    e4b8:	b	e490 <PyFloat_FromString@plt+0x7960>
    e4bc:	stp	x29, x30, [sp, #-96]!
    e4c0:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    e4c4:	add	x3, x3, #0x9b0
    e4c8:	mov	x29, sp
    e4cc:	stp	x19, x20, [sp, #16]
    e4d0:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    e4d4:	mov	x20, x0
    e4d8:	ldr	x19, [x19, #4008]
    e4dc:	mov	x0, x1
    e4e0:	add	x6, sp, #0x58
    e4e4:	mov	x1, x2
    e4e8:	add	x5, sp, #0x38
    e4ec:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    e4f0:	add	x4, sp, #0x30
    e4f4:	add	x3, x3, #0x3f0
    e4f8:	add	x2, x2, #0xdc8
    e4fc:	str	wzr, [sp, #44]
    e500:	str	x19, [sp, #88]
    e504:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    e508:	cbnz	w0, e514 <PyFloat_FromString@plt+0x79e4>
    e50c:	mov	x19, #0x0                   	// #0
    e510:	b	e5fc <PyFloat_FromString@plt+0x7acc>
    e514:	ldr	x0, [sp, #88]
    e518:	cmp	x0, x19
    e51c:	b.ne	e56c <PyFloat_FromString@plt+0x7a3c>  // b.any
    e520:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    e524:	str	x0, [sp, #88]
    e528:	cbz	x0, e50c <PyFloat_FromString@plt+0x79dc>
    e52c:	bl	790c <PyFloat_FromString@plt+0xddc>
    e530:	ldr	x3, [sp, #88]
    e534:	mov	x2, x20
    e538:	add	x1, sp, #0x40
    e53c:	mov	w0, #0x1                   	// #1
    e540:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    e544:	cbz	w0, e50c <PyFloat_FromString@plt+0x79dc>
    e548:	ldr	x2, [sp, #48]
    e54c:	add	x1, sp, #0x48
    e550:	ldr	x3, [sp, #88]
    e554:	mov	w0, #0x1                   	// #1
    e558:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    e55c:	cbnz	w0, e5a4 <PyFloat_FromString@plt+0x7a74>
    e560:	ldr	x0, [sp, #64]
    e564:	bl	790c <PyFloat_FromString@plt+0xddc>
    e568:	b	e50c <PyFloat_FromString@plt+0x79dc>
    e56c:	ldr	x0, [x0, #8]
    e570:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    e574:	add	x1, x1, #0x330
    e578:	cmp	x0, x1
    e57c:	b.eq	e530 <PyFloat_FromString@plt+0x7a00>  // b.none
    e580:	bl	6a60 <PyType_IsSubtype@plt>
    e584:	cbnz	w0, e530 <PyFloat_FromString@plt+0x7a00>
    e588:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    e58c:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    e590:	add	x1, x1, #0x889
    e594:	ldr	x0, [x0, #3936]
    e598:	ldr	x0, [x0]
    e59c:	bl	66e0 <PyErr_SetString@plt>
    e5a0:	b	e50c <PyFloat_FromString@plt+0x79dc>
    e5a4:	ldr	x2, [sp, #56]
    e5a8:	add	x1, sp, #0x50
    e5ac:	ldr	x3, [sp, #88]
    e5b0:	mov	w0, #0x1                   	// #1
    e5b4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    e5b8:	cbnz	w0, e5cc <PyFloat_FromString@plt+0x7a9c>
    e5bc:	ldr	x0, [sp, #64]
    e5c0:	bl	790c <PyFloat_FromString@plt+0xddc>
    e5c4:	ldr	x0, [sp, #72]
    e5c8:	b	e564 <PyFloat_FromString@plt+0x7a34>
    e5cc:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    e5d0:	add	x0, x0, #0x330
    e5d4:	add	x0, x0, #0x1a0
    e5d8:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    e5dc:	mov	x19, x0
    e5e0:	cbnz	x0, e60c <PyFloat_FromString@plt+0x7adc>
    e5e4:	ldr	x0, [sp, #64]
    e5e8:	bl	790c <PyFloat_FromString@plt+0xddc>
    e5ec:	ldr	x0, [sp, #72]
    e5f0:	bl	790c <PyFloat_FromString@plt+0xddc>
    e5f4:	ldr	x0, [sp, #80]
    e5f8:	bl	790c <PyFloat_FromString@plt+0xddc>
    e5fc:	mov	x0, x19
    e600:	ldp	x19, x20, [sp, #16]
    e604:	ldp	x29, x30, [sp], #96
    e608:	ret
    e60c:	ldp	x1, x2, [sp, #64]
    e610:	add	x5, sp, #0x2c
    e614:	ldp	x3, x4, [sp, #80]
    e618:	add	x0, x0, #0x18
    e61c:	add	x1, x1, #0x18
    e620:	add	x2, x2, #0x18
    e624:	add	x4, x4, #0x10
    e628:	add	x3, x3, #0x18
    e62c:	bl	1c38c <PyInit__decimal@@Base+0xb404>
    e630:	ldr	x0, [sp, #64]
    e634:	bl	790c <PyFloat_FromString@plt+0xddc>
    e638:	ldr	x0, [sp, #72]
    e63c:	bl	790c <PyFloat_FromString@plt+0xddc>
    e640:	ldr	x0, [sp, #80]
    e644:	bl	790c <PyFloat_FromString@plt+0xddc>
    e648:	ldr	w1, [sp, #44]
    e64c:	ldr	x0, [sp, #88]
    e650:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    e654:	cbz	w0, e5fc <PyFloat_FromString@plt+0x7acc>
    e658:	mov	x0, x19
    e65c:	b	e564 <PyFloat_FromString@plt+0x7a34>
    e660:	stp	x29, x30, [sp, #-80]!
    e664:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    e668:	add	x3, x3, #0x9b0
    e66c:	mov	x29, sp
    e670:	stp	x19, x20, [sp, #16]
    e674:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    e678:	mov	x20, x0
    e67c:	ldr	x19, [x19, #4008]
    e680:	mov	x0, x1
    e684:	add	x5, sp, #0x48
    e688:	mov	x1, x2
    e68c:	add	x4, sp, #0x30
    e690:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    e694:	add	x3, x3, #0x410
    e698:	add	x2, x2, #0xdc9
    e69c:	str	wzr, [sp, #44]
    e6a0:	str	x19, [sp, #72]
    e6a4:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    e6a8:	cbnz	w0, e6b4 <PyFloat_FromString@plt+0x7b84>
    e6ac:	mov	x19, #0x0                   	// #0
    e6b0:	b	e76c <PyFloat_FromString@plt+0x7c3c>
    e6b4:	ldr	x0, [sp, #72]
    e6b8:	cmp	x0, x19
    e6bc:	b.ne	e70c <PyFloat_FromString@plt+0x7bdc>  // b.any
    e6c0:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    e6c4:	str	x0, [sp, #72]
    e6c8:	cbz	x0, e6ac <PyFloat_FromString@plt+0x7b7c>
    e6cc:	bl	790c <PyFloat_FromString@plt+0xddc>
    e6d0:	ldr	x3, [sp, #72]
    e6d4:	mov	x2, x20
    e6d8:	add	x1, sp, #0x38
    e6dc:	mov	w0, #0x1                   	// #1
    e6e0:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    e6e4:	cbz	w0, e6ac <PyFloat_FromString@plt+0x7b7c>
    e6e8:	ldr	x2, [sp, #48]
    e6ec:	add	x1, sp, #0x40
    e6f0:	ldr	x3, [sp, #72]
    e6f4:	mov	w0, #0x1                   	// #1
    e6f8:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    e6fc:	cbnz	w0, e744 <PyFloat_FromString@plt+0x7c14>
    e700:	ldr	x0, [sp, #56]
    e704:	bl	790c <PyFloat_FromString@plt+0xddc>
    e708:	b	e6ac <PyFloat_FromString@plt+0x7b7c>
    e70c:	ldr	x0, [x0, #8]
    e710:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    e714:	add	x1, x1, #0x330
    e718:	cmp	x0, x1
    e71c:	b.eq	e6d0 <PyFloat_FromString@plt+0x7ba0>  // b.none
    e720:	bl	6a60 <PyType_IsSubtype@plt>
    e724:	cbnz	w0, e6d0 <PyFloat_FromString@plt+0x7ba0>
    e728:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    e72c:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    e730:	add	x1, x1, #0x889
    e734:	ldr	x0, [x0, #3936]
    e738:	ldr	x0, [x0]
    e73c:	bl	66e0 <PyErr_SetString@plt>
    e740:	b	e6ac <PyFloat_FromString@plt+0x7b7c>
    e744:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    e748:	add	x0, x0, #0x330
    e74c:	add	x0, x0, #0x1a0
    e750:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    e754:	mov	x19, x0
    e758:	cbnz	x0, e77c <PyFloat_FromString@plt+0x7c4c>
    e75c:	ldr	x0, [sp, #56]
    e760:	bl	790c <PyFloat_FromString@plt+0xddc>
    e764:	ldr	x0, [sp, #64]
    e768:	bl	790c <PyFloat_FromString@plt+0xddc>
    e76c:	mov	x0, x19
    e770:	ldp	x19, x20, [sp, #16]
    e774:	ldp	x29, x30, [sp], #80
    e778:	ret
    e77c:	ldp	x1, x2, [sp, #56]
    e780:	add	x4, sp, #0x2c
    e784:	ldr	x3, [sp, #72]
    e788:	add	x0, x0, #0x18
    e78c:	add	x3, x3, #0x10
    e790:	add	x1, x1, #0x18
    e794:	add	x2, x2, #0x18
    e798:	bl	21de4 <PyInit__decimal@@Base+0x10e5c>
    e79c:	ldr	x0, [sp, #56]
    e7a0:	bl	790c <PyFloat_FromString@plt+0xddc>
    e7a4:	ldr	x0, [sp, #64]
    e7a8:	bl	790c <PyFloat_FromString@plt+0xddc>
    e7ac:	ldr	w1, [sp, #44]
    e7b0:	ldr	x0, [sp, #72]
    e7b4:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    e7b8:	cbz	w0, e76c <PyFloat_FromString@plt+0x7c3c>
    e7bc:	mov	x0, x19
    e7c0:	b	e704 <PyFloat_FromString@plt+0x7bd4>
    e7c4:	stp	x29, x30, [sp, #-144]!
    e7c8:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    e7cc:	add	x3, x3, #0x9b0
    e7d0:	mov	x29, sp
    e7d4:	stp	x19, x20, [sp, #16]
    e7d8:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    e7dc:	mov	x20, x0
    e7e0:	str	x21, [sp, #32]
    e7e4:	mov	x0, x1
    e7e8:	ldr	x21, [x19, #4008]
    e7ec:	mov	x1, x2
    e7f0:	add	x6, sp, #0x40
    e7f4:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    e7f8:	add	x5, sp, #0x38
    e7fc:	add	x4, sp, #0x48
    e800:	add	x3, x3, #0x428
    e804:	add	x2, x2, #0xdd2
    e808:	str	wzr, [sp, #52]
    e80c:	stp	x21, x21, [sp, #56]
    e810:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    e814:	cbnz	w0, e820 <PyFloat_FromString@plt+0x7cf0>
    e818:	mov	x19, #0x0                   	// #0
    e81c:	b	e930 <PyFloat_FromString@plt+0x7e00>
    e820:	ldr	x0, [sp, #64]
    e824:	cmp	x0, x21
    e828:	b.ne	e898 <PyFloat_FromString@plt+0x7d68>  // b.any
    e82c:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    e830:	str	x0, [sp, #64]
    e834:	cbz	x0, e818 <PyFloat_FromString@plt+0x7ce8>
    e838:	bl	790c <PyFloat_FromString@plt+0xddc>
    e83c:	ldr	x1, [sp, #64]
    e840:	add	x21, sp, #0x60
    e844:	ldr	x19, [x19, #4008]
    e848:	ldp	x2, x3, [x1, #16]
    e84c:	stp	x2, x3, [sp, #96]
    e850:	ldp	x2, x3, [x1, #32]
    e854:	stp	x2, x3, [sp, #112]
    e858:	ldp	x0, x1, [x1, #48]
    e85c:	stp	x0, x1, [sp, #128]
    e860:	ldr	x0, [sp, #56]
    e864:	cmp	x0, x19
    e868:	b.eq	e8d0 <PyFloat_FromString@plt+0x7da0>  // b.none
    e86c:	bl	76ec <PyFloat_FromString@plt+0xbbc>
    e870:	mov	w1, w0
    e874:	tbnz	w0, #31, e818 <PyFloat_FromString@plt+0x7ce8>
    e878:	mov	x0, x21
    e87c:	bl	12a84 <PyInit__decimal@@Base+0x1afc>
    e880:	cbnz	w0, e8d0 <PyFloat_FromString@plt+0x7da0>
    e884:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    e888:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    e88c:	add	x1, x1, #0xdd7
    e890:	ldr	x0, [x0, #3920]
    e894:	b	e8c4 <PyFloat_FromString@plt+0x7d94>
    e898:	ldr	x0, [x0, #8]
    e89c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    e8a0:	add	x1, x1, #0x330
    e8a4:	cmp	x0, x1
    e8a8:	b.eq	e83c <PyFloat_FromString@plt+0x7d0c>  // b.none
    e8ac:	bl	6a60 <PyType_IsSubtype@plt>
    e8b0:	cbnz	w0, e83c <PyFloat_FromString@plt+0x7d0c>
    e8b4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    e8b8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    e8bc:	add	x1, x1, #0x889
    e8c0:	ldr	x0, [x0, #3936]
    e8c4:	ldr	x0, [x0]
    e8c8:	bl	66e0 <PyErr_SetString@plt>
    e8cc:	b	e818 <PyFloat_FromString@plt+0x7ce8>
    e8d0:	ldr	x3, [sp, #64]
    e8d4:	mov	x2, x20
    e8d8:	add	x1, sp, #0x50
    e8dc:	mov	w0, #0x1                   	// #1
    e8e0:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    e8e4:	cbz	w0, e818 <PyFloat_FromString@plt+0x7ce8>
    e8e8:	ldp	x3, x2, [sp, #64]
    e8ec:	add	x1, sp, #0x58
    e8f0:	mov	w0, #0x1                   	// #1
    e8f4:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    e8f8:	cbnz	w0, e908 <PyFloat_FromString@plt+0x7dd8>
    e8fc:	ldr	x0, [sp, #80]
    e900:	bl	790c <PyFloat_FromString@plt+0xddc>
    e904:	b	e818 <PyFloat_FromString@plt+0x7ce8>
    e908:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    e90c:	add	x0, x0, #0x330
    e910:	add	x0, x0, #0x1a0
    e914:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    e918:	mov	x19, x0
    e91c:	cbnz	x0, e944 <PyFloat_FromString@plt+0x7e14>
    e920:	ldr	x0, [sp, #80]
    e924:	bl	790c <PyFloat_FromString@plt+0xddc>
    e928:	ldr	x0, [sp, #88]
    e92c:	bl	790c <PyFloat_FromString@plt+0xddc>
    e930:	mov	x0, x19
    e934:	ldp	x19, x20, [sp, #16]
    e938:	ldr	x21, [sp, #32]
    e93c:	ldp	x29, x30, [sp], #144
    e940:	ret
    e944:	ldp	x1, x2, [sp, #80]
    e948:	add	x4, sp, #0x34
    e94c:	mov	x3, x21
    e950:	add	x0, x0, #0x18
    e954:	add	x1, x1, #0x18
    e958:	add	x2, x2, #0x18
    e95c:	bl	1db3c <PyInit__decimal@@Base+0xcbb4>
    e960:	ldr	x0, [sp, #80]
    e964:	bl	790c <PyFloat_FromString@plt+0xddc>
    e968:	ldr	x0, [sp, #88]
    e96c:	bl	790c <PyFloat_FromString@plt+0xddc>
    e970:	ldr	w1, [sp, #52]
    e974:	ldr	x0, [sp, #64]
    e978:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    e97c:	cbz	w0, e930 <PyFloat_FromString@plt+0x7e00>
    e980:	mov	x0, x19
    e984:	b	e900 <PyFloat_FromString@plt+0x7dd0>
    e988:	stp	x29, x30, [sp, #-80]!
    e98c:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    e990:	add	x3, x3, #0x9b0
    e994:	mov	x29, sp
    e998:	stp	x19, x20, [sp, #16]
    e99c:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    e9a0:	mov	x20, x0
    e9a4:	ldr	x19, [x19, #4008]
    e9a8:	mov	x0, x1
    e9ac:	add	x5, sp, #0x48
    e9b0:	mov	x1, x2
    e9b4:	add	x4, sp, #0x30
    e9b8:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    e9bc:	add	x3, x3, #0x448
    e9c0:	add	x2, x2, #0xdc9
    e9c4:	str	wzr, [sp, #44]
    e9c8:	str	x19, [sp, #72]
    e9cc:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    e9d0:	cbnz	w0, e9dc <PyFloat_FromString@plt+0x7eac>
    e9d4:	mov	x19, #0x0                   	// #0
    e9d8:	b	ea94 <PyFloat_FromString@plt+0x7f64>
    e9dc:	ldr	x0, [sp, #72]
    e9e0:	cmp	x0, x19
    e9e4:	b.ne	ea34 <PyFloat_FromString@plt+0x7f04>  // b.any
    e9e8:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    e9ec:	str	x0, [sp, #72]
    e9f0:	cbz	x0, e9d4 <PyFloat_FromString@plt+0x7ea4>
    e9f4:	bl	790c <PyFloat_FromString@plt+0xddc>
    e9f8:	ldr	x3, [sp, #72]
    e9fc:	mov	x2, x20
    ea00:	add	x1, sp, #0x38
    ea04:	mov	w0, #0x1                   	// #1
    ea08:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    ea0c:	cbz	w0, e9d4 <PyFloat_FromString@plt+0x7ea4>
    ea10:	ldr	x2, [sp, #48]
    ea14:	add	x1, sp, #0x40
    ea18:	ldr	x3, [sp, #72]
    ea1c:	mov	w0, #0x1                   	// #1
    ea20:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    ea24:	cbnz	w0, ea6c <PyFloat_FromString@plt+0x7f3c>
    ea28:	ldr	x0, [sp, #56]
    ea2c:	bl	790c <PyFloat_FromString@plt+0xddc>
    ea30:	b	e9d4 <PyFloat_FromString@plt+0x7ea4>
    ea34:	ldr	x0, [x0, #8]
    ea38:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    ea3c:	add	x1, x1, #0x330
    ea40:	cmp	x0, x1
    ea44:	b.eq	e9f8 <PyFloat_FromString@plt+0x7ec8>  // b.none
    ea48:	bl	6a60 <PyType_IsSubtype@plt>
    ea4c:	cbnz	w0, e9f8 <PyFloat_FromString@plt+0x7ec8>
    ea50:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    ea54:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    ea58:	add	x1, x1, #0x889
    ea5c:	ldr	x0, [x0, #3936]
    ea60:	ldr	x0, [x0]
    ea64:	bl	66e0 <PyErr_SetString@plt>
    ea68:	b	e9d4 <PyFloat_FromString@plt+0x7ea4>
    ea6c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    ea70:	add	x0, x0, #0x330
    ea74:	add	x0, x0, #0x1a0
    ea78:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    ea7c:	mov	x19, x0
    ea80:	cbnz	x0, eaa4 <PyFloat_FromString@plt+0x7f74>
    ea84:	ldr	x0, [sp, #56]
    ea88:	bl	790c <PyFloat_FromString@plt+0xddc>
    ea8c:	ldr	x0, [sp, #64]
    ea90:	bl	790c <PyFloat_FromString@plt+0xddc>
    ea94:	mov	x0, x19
    ea98:	ldp	x19, x20, [sp, #16]
    ea9c:	ldp	x29, x30, [sp], #80
    eaa0:	ret
    eaa4:	ldp	x1, x2, [sp, #56]
    eaa8:	add	x4, sp, #0x2c
    eaac:	ldr	x3, [sp, #72]
    eab0:	add	x0, x0, #0x18
    eab4:	add	x3, x3, #0x10
    eab8:	add	x1, x1, #0x18
    eabc:	add	x2, x2, #0x18
    eac0:	bl	1da40 <PyInit__decimal@@Base+0xcab8>
    eac4:	ldr	x0, [sp, #56]
    eac8:	bl	790c <PyFloat_FromString@plt+0xddc>
    eacc:	ldr	x0, [sp, #64]
    ead0:	bl	790c <PyFloat_FromString@plt+0xddc>
    ead4:	ldr	w1, [sp, #44]
    ead8:	ldr	x0, [sp, #72]
    eadc:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    eae0:	cbz	w0, ea94 <PyFloat_FromString@plt+0x7f64>
    eae4:	mov	x0, x19
    eae8:	b	ea2c <PyFloat_FromString@plt+0x7efc>
    eaec:	stp	x29, x30, [sp, #-80]!
    eaf0:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    eaf4:	add	x3, x3, #0x9b0
    eaf8:	mov	x29, sp
    eafc:	stp	x19, x20, [sp, #16]
    eb00:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    eb04:	mov	x20, x0
    eb08:	ldr	x19, [x19, #4008]
    eb0c:	mov	x0, x1
    eb10:	add	x5, sp, #0x48
    eb14:	mov	x1, x2
    eb18:	add	x4, sp, #0x30
    eb1c:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    eb20:	add	x3, x3, #0x460
    eb24:	add	x2, x2, #0xdc9
    eb28:	str	wzr, [sp, #44]
    eb2c:	str	x19, [sp, #72]
    eb30:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    eb34:	cbnz	w0, eb40 <PyFloat_FromString@plt+0x8010>
    eb38:	mov	x19, #0x0                   	// #0
    eb3c:	b	ebf8 <PyFloat_FromString@plt+0x80c8>
    eb40:	ldr	x0, [sp, #72]
    eb44:	cmp	x0, x19
    eb48:	b.ne	eb98 <PyFloat_FromString@plt+0x8068>  // b.any
    eb4c:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    eb50:	str	x0, [sp, #72]
    eb54:	cbz	x0, eb38 <PyFloat_FromString@plt+0x8008>
    eb58:	bl	790c <PyFloat_FromString@plt+0xddc>
    eb5c:	ldr	x3, [sp, #72]
    eb60:	mov	x2, x20
    eb64:	add	x1, sp, #0x38
    eb68:	mov	w0, #0x1                   	// #1
    eb6c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    eb70:	cbz	w0, eb38 <PyFloat_FromString@plt+0x8008>
    eb74:	ldr	x2, [sp, #48]
    eb78:	add	x1, sp, #0x40
    eb7c:	ldr	x3, [sp, #72]
    eb80:	mov	w0, #0x1                   	// #1
    eb84:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    eb88:	cbnz	w0, ebd0 <PyFloat_FromString@plt+0x80a0>
    eb8c:	ldr	x0, [sp, #56]
    eb90:	bl	790c <PyFloat_FromString@plt+0xddc>
    eb94:	b	eb38 <PyFloat_FromString@plt+0x8008>
    eb98:	ldr	x0, [x0, #8]
    eb9c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    eba0:	add	x1, x1, #0x330
    eba4:	cmp	x0, x1
    eba8:	b.eq	eb5c <PyFloat_FromString@plt+0x802c>  // b.none
    ebac:	bl	6a60 <PyType_IsSubtype@plt>
    ebb0:	cbnz	w0, eb5c <PyFloat_FromString@plt+0x802c>
    ebb4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    ebb8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    ebbc:	add	x1, x1, #0x889
    ebc0:	ldr	x0, [x0, #3936]
    ebc4:	ldr	x0, [x0]
    ebc8:	bl	66e0 <PyErr_SetString@plt>
    ebcc:	b	eb38 <PyFloat_FromString@plt+0x8008>
    ebd0:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    ebd4:	add	x0, x0, #0x330
    ebd8:	add	x0, x0, #0x1a0
    ebdc:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    ebe0:	mov	x19, x0
    ebe4:	cbnz	x0, ec08 <PyFloat_FromString@plt+0x80d8>
    ebe8:	ldr	x0, [sp, #56]
    ebec:	bl	790c <PyFloat_FromString@plt+0xddc>
    ebf0:	ldr	x0, [sp, #64]
    ebf4:	bl	790c <PyFloat_FromString@plt+0xddc>
    ebf8:	mov	x0, x19
    ebfc:	ldp	x19, x20, [sp, #16]
    ec00:	ldp	x29, x30, [sp], #80
    ec04:	ret
    ec08:	ldp	x1, x2, [sp, #56]
    ec0c:	add	x4, sp, #0x2c
    ec10:	ldr	x3, [sp, #72]
    ec14:	add	x0, x0, #0x18
    ec18:	add	x3, x3, #0x10
    ec1c:	add	x1, x1, #0x18
    ec20:	add	x2, x2, #0x18
    ec24:	bl	1c714 <PyInit__decimal@@Base+0xb78c>
    ec28:	ldr	x0, [sp, #56]
    ec2c:	bl	790c <PyFloat_FromString@plt+0xddc>
    ec30:	ldr	x0, [sp, #64]
    ec34:	bl	790c <PyFloat_FromString@plt+0xddc>
    ec38:	ldr	w1, [sp, #44]
    ec3c:	ldr	x0, [sp, #72]
    ec40:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    ec44:	cbz	w0, ebf8 <PyFloat_FromString@plt+0x80c8>
    ec48:	mov	x0, x19
    ec4c:	b	eb90 <PyFloat_FromString@plt+0x8060>
    ec50:	stp	x29, x30, [sp, #-80]!
    ec54:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    ec58:	add	x3, x3, #0x9b0
    ec5c:	mov	x29, sp
    ec60:	stp	x19, x20, [sp, #16]
    ec64:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    ec68:	mov	x20, x0
    ec6c:	ldr	x19, [x19, #4008]
    ec70:	mov	x0, x1
    ec74:	add	x5, sp, #0x48
    ec78:	mov	x1, x2
    ec7c:	add	x4, sp, #0x30
    ec80:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    ec84:	add	x3, x3, #0x478
    ec88:	add	x2, x2, #0xdc9
    ec8c:	str	wzr, [sp, #44]
    ec90:	str	x19, [sp, #72]
    ec94:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    ec98:	cbnz	w0, eca4 <PyFloat_FromString@plt+0x8174>
    ec9c:	mov	x19, #0x0                   	// #0
    eca0:	b	ed5c <PyFloat_FromString@plt+0x822c>
    eca4:	ldr	x0, [sp, #72]
    eca8:	cmp	x0, x19
    ecac:	b.ne	ecfc <PyFloat_FromString@plt+0x81cc>  // b.any
    ecb0:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    ecb4:	str	x0, [sp, #72]
    ecb8:	cbz	x0, ec9c <PyFloat_FromString@plt+0x816c>
    ecbc:	bl	790c <PyFloat_FromString@plt+0xddc>
    ecc0:	ldr	x3, [sp, #72]
    ecc4:	mov	x2, x20
    ecc8:	add	x1, sp, #0x38
    eccc:	mov	w0, #0x1                   	// #1
    ecd0:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    ecd4:	cbz	w0, ec9c <PyFloat_FromString@plt+0x816c>
    ecd8:	ldr	x2, [sp, #48]
    ecdc:	add	x1, sp, #0x40
    ece0:	ldr	x3, [sp, #72]
    ece4:	mov	w0, #0x1                   	// #1
    ece8:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    ecec:	cbnz	w0, ed34 <PyFloat_FromString@plt+0x8204>
    ecf0:	ldr	x0, [sp, #56]
    ecf4:	bl	790c <PyFloat_FromString@plt+0xddc>
    ecf8:	b	ec9c <PyFloat_FromString@plt+0x816c>
    ecfc:	ldr	x0, [x0, #8]
    ed00:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    ed04:	add	x1, x1, #0x330
    ed08:	cmp	x0, x1
    ed0c:	b.eq	ecc0 <PyFloat_FromString@plt+0x8190>  // b.none
    ed10:	bl	6a60 <PyType_IsSubtype@plt>
    ed14:	cbnz	w0, ecc0 <PyFloat_FromString@plt+0x8190>
    ed18:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    ed1c:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    ed20:	add	x1, x1, #0x889
    ed24:	ldr	x0, [x0, #3936]
    ed28:	ldr	x0, [x0]
    ed2c:	bl	66e0 <PyErr_SetString@plt>
    ed30:	b	ec9c <PyFloat_FromString@plt+0x816c>
    ed34:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    ed38:	add	x0, x0, #0x330
    ed3c:	add	x0, x0, #0x1a0
    ed40:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    ed44:	mov	x19, x0
    ed48:	cbnz	x0, ed6c <PyFloat_FromString@plt+0x823c>
    ed4c:	ldr	x0, [sp, #56]
    ed50:	bl	790c <PyFloat_FromString@plt+0xddc>
    ed54:	ldr	x0, [sp, #64]
    ed58:	bl	790c <PyFloat_FromString@plt+0xddc>
    ed5c:	mov	x0, x19
    ed60:	ldp	x19, x20, [sp, #16]
    ed64:	ldp	x29, x30, [sp], #80
    ed68:	ret
    ed6c:	ldp	x1, x2, [sp, #56]
    ed70:	add	x4, sp, #0x2c
    ed74:	ldr	x3, [sp, #72]
    ed78:	add	x0, x0, #0x18
    ed7c:	add	x3, x3, #0x10
    ed80:	add	x1, x1, #0x18
    ed84:	add	x2, x2, #0x18
    ed88:	bl	1c63c <PyInit__decimal@@Base+0xb6b4>
    ed8c:	ldr	x0, [sp, #56]
    ed90:	bl	790c <PyFloat_FromString@plt+0xddc>
    ed94:	ldr	x0, [sp, #64]
    ed98:	bl	790c <PyFloat_FromString@plt+0xddc>
    ed9c:	ldr	w1, [sp, #44]
    eda0:	ldr	x0, [sp, #72]
    eda4:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    eda8:	cbz	w0, ed5c <PyFloat_FromString@plt+0x822c>
    edac:	mov	x0, x19
    edb0:	b	ecf4 <PyFloat_FromString@plt+0x81c4>
    edb4:	stp	x29, x30, [sp, #-80]!
    edb8:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    edbc:	add	x3, x3, #0x9b0
    edc0:	mov	x29, sp
    edc4:	stp	x19, x20, [sp, #16]
    edc8:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    edcc:	mov	x20, x0
    edd0:	ldr	x19, [x19, #4008]
    edd4:	mov	x0, x1
    edd8:	add	x5, sp, #0x48
    eddc:	mov	x1, x2
    ede0:	add	x4, sp, #0x30
    ede4:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    ede8:	add	x3, x3, #0x490
    edec:	add	x2, x2, #0xdc9
    edf0:	str	wzr, [sp, #44]
    edf4:	str	x19, [sp, #72]
    edf8:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    edfc:	cbnz	w0, ee08 <PyFloat_FromString@plt+0x82d8>
    ee00:	mov	x19, #0x0                   	// #0
    ee04:	b	eec0 <PyFloat_FromString@plt+0x8390>
    ee08:	ldr	x0, [sp, #72]
    ee0c:	cmp	x0, x19
    ee10:	b.ne	ee60 <PyFloat_FromString@plt+0x8330>  // b.any
    ee14:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    ee18:	str	x0, [sp, #72]
    ee1c:	cbz	x0, ee00 <PyFloat_FromString@plt+0x82d0>
    ee20:	bl	790c <PyFloat_FromString@plt+0xddc>
    ee24:	ldr	x3, [sp, #72]
    ee28:	mov	x2, x20
    ee2c:	add	x1, sp, #0x38
    ee30:	mov	w0, #0x1                   	// #1
    ee34:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    ee38:	cbz	w0, ee00 <PyFloat_FromString@plt+0x82d0>
    ee3c:	ldr	x2, [sp, #48]
    ee40:	add	x1, sp, #0x40
    ee44:	ldr	x3, [sp, #72]
    ee48:	mov	w0, #0x1                   	// #1
    ee4c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    ee50:	cbnz	w0, ee98 <PyFloat_FromString@plt+0x8368>
    ee54:	ldr	x0, [sp, #56]
    ee58:	bl	790c <PyFloat_FromString@plt+0xddc>
    ee5c:	b	ee00 <PyFloat_FromString@plt+0x82d0>
    ee60:	ldr	x0, [x0, #8]
    ee64:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    ee68:	add	x1, x1, #0x330
    ee6c:	cmp	x0, x1
    ee70:	b.eq	ee24 <PyFloat_FromString@plt+0x82f4>  // b.none
    ee74:	bl	6a60 <PyType_IsSubtype@plt>
    ee78:	cbnz	w0, ee24 <PyFloat_FromString@plt+0x82f4>
    ee7c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    ee80:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    ee84:	add	x1, x1, #0x889
    ee88:	ldr	x0, [x0, #3936]
    ee8c:	ldr	x0, [x0]
    ee90:	bl	66e0 <PyErr_SetString@plt>
    ee94:	b	ee00 <PyFloat_FromString@plt+0x82d0>
    ee98:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    ee9c:	add	x0, x0, #0x330
    eea0:	add	x0, x0, #0x1a0
    eea4:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    eea8:	mov	x19, x0
    eeac:	cbnz	x0, eed0 <PyFloat_FromString@plt+0x83a0>
    eeb0:	ldr	x0, [sp, #56]
    eeb4:	bl	790c <PyFloat_FromString@plt+0xddc>
    eeb8:	ldr	x0, [sp, #64]
    eebc:	bl	790c <PyFloat_FromString@plt+0xddc>
    eec0:	mov	x0, x19
    eec4:	ldp	x19, x20, [sp, #16]
    eec8:	ldp	x29, x30, [sp], #80
    eecc:	ret
    eed0:	ldp	x1, x2, [sp, #56]
    eed4:	add	x4, sp, #0x2c
    eed8:	ldr	x3, [sp, #72]
    eedc:	add	x0, x0, #0x18
    eee0:	add	x3, x3, #0x10
    eee4:	add	x1, x1, #0x18
    eee8:	add	x2, x2, #0x18
    eeec:	bl	1c564 <PyInit__decimal@@Base+0xb5dc>
    eef0:	ldr	x0, [sp, #56]
    eef4:	bl	790c <PyFloat_FromString@plt+0xddc>
    eef8:	ldr	x0, [sp, #64]
    eefc:	bl	790c <PyFloat_FromString@plt+0xddc>
    ef00:	ldr	w1, [sp, #44]
    ef04:	ldr	x0, [sp, #72]
    ef08:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    ef0c:	cbz	w0, eec0 <PyFloat_FromString@plt+0x8390>
    ef10:	mov	x0, x19
    ef14:	b	ee58 <PyFloat_FromString@plt+0x8328>
    ef18:	stp	x29, x30, [sp, #-80]!
    ef1c:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    ef20:	add	x3, x3, #0x9b0
    ef24:	mov	x29, sp
    ef28:	stp	x19, x20, [sp, #16]
    ef2c:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    ef30:	mov	x20, x0
    ef34:	ldr	x19, [x19, #4008]
    ef38:	mov	x0, x1
    ef3c:	add	x5, sp, #0x48
    ef40:	mov	x1, x2
    ef44:	add	x4, sp, #0x30
    ef48:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    ef4c:	add	x3, x3, #0x4a8
    ef50:	add	x2, x2, #0xdc9
    ef54:	str	wzr, [sp, #44]
    ef58:	str	x19, [sp, #72]
    ef5c:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    ef60:	cbnz	w0, ef6c <PyFloat_FromString@plt+0x843c>
    ef64:	mov	x19, #0x0                   	// #0
    ef68:	b	f024 <PyFloat_FromString@plt+0x84f4>
    ef6c:	ldr	x0, [sp, #72]
    ef70:	cmp	x0, x19
    ef74:	b.ne	efc4 <PyFloat_FromString@plt+0x8494>  // b.any
    ef78:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    ef7c:	str	x0, [sp, #72]
    ef80:	cbz	x0, ef64 <PyFloat_FromString@plt+0x8434>
    ef84:	bl	790c <PyFloat_FromString@plt+0xddc>
    ef88:	ldr	x3, [sp, #72]
    ef8c:	mov	x2, x20
    ef90:	add	x1, sp, #0x38
    ef94:	mov	w0, #0x1                   	// #1
    ef98:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    ef9c:	cbz	w0, ef64 <PyFloat_FromString@plt+0x8434>
    efa0:	ldr	x2, [sp, #48]
    efa4:	add	x1, sp, #0x40
    efa8:	ldr	x3, [sp, #72]
    efac:	mov	w0, #0x1                   	// #1
    efb0:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    efb4:	cbnz	w0, effc <PyFloat_FromString@plt+0x84cc>
    efb8:	ldr	x0, [sp, #56]
    efbc:	bl	790c <PyFloat_FromString@plt+0xddc>
    efc0:	b	ef64 <PyFloat_FromString@plt+0x8434>
    efc4:	ldr	x0, [x0, #8]
    efc8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    efcc:	add	x1, x1, #0x330
    efd0:	cmp	x0, x1
    efd4:	b.eq	ef88 <PyFloat_FromString@plt+0x8458>  // b.none
    efd8:	bl	6a60 <PyType_IsSubtype@plt>
    efdc:	cbnz	w0, ef88 <PyFloat_FromString@plt+0x8458>
    efe0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    efe4:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    efe8:	add	x1, x1, #0x889
    efec:	ldr	x0, [x0, #3936]
    eff0:	ldr	x0, [x0]
    eff4:	bl	66e0 <PyErr_SetString@plt>
    eff8:	b	ef64 <PyFloat_FromString@plt+0x8434>
    effc:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    f000:	add	x0, x0, #0x330
    f004:	add	x0, x0, #0x1a0
    f008:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    f00c:	mov	x19, x0
    f010:	cbnz	x0, f034 <PyFloat_FromString@plt+0x8504>
    f014:	ldr	x0, [sp, #56]
    f018:	bl	790c <PyFloat_FromString@plt+0xddc>
    f01c:	ldr	x0, [sp, #64]
    f020:	bl	790c <PyFloat_FromString@plt+0xddc>
    f024:	mov	x0, x19
    f028:	ldp	x19, x20, [sp, #16]
    f02c:	ldp	x29, x30, [sp], #80
    f030:	ret
    f034:	ldp	x1, x2, [sp, #56]
    f038:	add	x4, sp, #0x2c
    f03c:	ldr	x3, [sp, #72]
    f040:	add	x0, x0, #0x18
    f044:	add	x3, x3, #0x10
    f048:	add	x1, x1, #0x18
    f04c:	add	x2, x2, #0x18
    f050:	bl	1c48c <PyInit__decimal@@Base+0xb504>
    f054:	ldr	x0, [sp, #56]
    f058:	bl	790c <PyFloat_FromString@plt+0xddc>
    f05c:	ldr	x0, [sp, #64]
    f060:	bl	790c <PyFloat_FromString@plt+0xddc>
    f064:	ldr	w1, [sp, #44]
    f068:	ldr	x0, [sp, #72]
    f06c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    f070:	cbz	w0, f024 <PyFloat_FromString@plt+0x84f4>
    f074:	mov	x0, x19
    f078:	b	efbc <PyFloat_FromString@plt+0x848c>
    f07c:	stp	x29, x30, [sp, #-80]!
    f080:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    f084:	add	x3, x3, #0x9b0
    f088:	mov	x29, sp
    f08c:	stp	x19, x20, [sp, #16]
    f090:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    f094:	mov	x20, x0
    f098:	ldr	x19, [x19, #4008]
    f09c:	mov	x0, x1
    f0a0:	add	x5, sp, #0x48
    f0a4:	mov	x1, x2
    f0a8:	add	x4, sp, #0x30
    f0ac:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    f0b0:	add	x3, x3, #0x4c0
    f0b4:	add	x2, x2, #0xdc9
    f0b8:	str	wzr, [sp, #44]
    f0bc:	str	x19, [sp, #72]
    f0c0:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    f0c4:	cbnz	w0, f0d0 <PyFloat_FromString@plt+0x85a0>
    f0c8:	mov	x19, #0x0                   	// #0
    f0cc:	b	f188 <PyFloat_FromString@plt+0x8658>
    f0d0:	ldr	x0, [sp, #72]
    f0d4:	cmp	x0, x19
    f0d8:	b.ne	f128 <PyFloat_FromString@plt+0x85f8>  // b.any
    f0dc:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    f0e0:	str	x0, [sp, #72]
    f0e4:	cbz	x0, f0c8 <PyFloat_FromString@plt+0x8598>
    f0e8:	bl	790c <PyFloat_FromString@plt+0xddc>
    f0ec:	ldr	x3, [sp, #72]
    f0f0:	mov	x2, x20
    f0f4:	add	x1, sp, #0x38
    f0f8:	mov	w0, #0x1                   	// #1
    f0fc:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    f100:	cbz	w0, f0c8 <PyFloat_FromString@plt+0x8598>
    f104:	ldr	x2, [sp, #48]
    f108:	add	x1, sp, #0x40
    f10c:	ldr	x3, [sp, #72]
    f110:	mov	w0, #0x1                   	// #1
    f114:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    f118:	cbnz	w0, f160 <PyFloat_FromString@plt+0x8630>
    f11c:	ldr	x0, [sp, #56]
    f120:	bl	790c <PyFloat_FromString@plt+0xddc>
    f124:	b	f0c8 <PyFloat_FromString@plt+0x8598>
    f128:	ldr	x0, [x0, #8]
    f12c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    f130:	add	x1, x1, #0x330
    f134:	cmp	x0, x1
    f138:	b.eq	f0ec <PyFloat_FromString@plt+0x85bc>  // b.none
    f13c:	bl	6a60 <PyType_IsSubtype@plt>
    f140:	cbnz	w0, f0ec <PyFloat_FromString@plt+0x85bc>
    f144:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    f148:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    f14c:	add	x1, x1, #0x889
    f150:	ldr	x0, [x0, #3936]
    f154:	ldr	x0, [x0]
    f158:	bl	66e0 <PyErr_SetString@plt>
    f15c:	b	f0c8 <PyFloat_FromString@plt+0x8598>
    f160:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    f164:	add	x0, x0, #0x330
    f168:	add	x0, x0, #0x1a0
    f16c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    f170:	mov	x19, x0
    f174:	cbnz	x0, f198 <PyFloat_FromString@plt+0x8668>
    f178:	ldr	x0, [sp, #56]
    f17c:	bl	790c <PyFloat_FromString@plt+0xddc>
    f180:	ldr	x0, [sp, #64]
    f184:	bl	790c <PyFloat_FromString@plt+0xddc>
    f188:	mov	x0, x19
    f18c:	ldp	x19, x20, [sp, #16]
    f190:	ldp	x29, x30, [sp], #80
    f194:	ret
    f198:	ldp	x1, x2, [sp, #56]
    f19c:	add	x4, sp, #0x2c
    f1a0:	ldr	x3, [sp, #72]
    f1a4:	add	x0, x0, #0x18
    f1a8:	add	x3, x3, #0x10
    f1ac:	add	x1, x1, #0x18
    f1b0:	add	x2, x2, #0x18
    f1b4:	bl	19490 <PyInit__decimal@@Base+0x8508>
    f1b8:	ldr	x0, [sp, #56]
    f1bc:	bl	790c <PyFloat_FromString@plt+0xddc>
    f1c0:	ldr	x0, [sp, #64]
    f1c4:	bl	790c <PyFloat_FromString@plt+0xddc>
    f1c8:	ldr	w1, [sp, #44]
    f1cc:	ldr	x0, [sp, #72]
    f1d0:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    f1d4:	cbz	w0, f188 <PyFloat_FromString@plt+0x8658>
    f1d8:	mov	x0, x19
    f1dc:	b	f120 <PyFloat_FromString@plt+0x85f0>
    f1e0:	stp	x29, x30, [sp, #-80]!
    f1e4:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    f1e8:	add	x3, x3, #0x9b0
    f1ec:	mov	x29, sp
    f1f0:	stp	x19, x20, [sp, #16]
    f1f4:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
    f1f8:	mov	x20, x0
    f1fc:	ldr	x19, [x19, #4008]
    f200:	mov	x0, x1
    f204:	add	x5, sp, #0x48
    f208:	mov	x1, x2
    f20c:	add	x4, sp, #0x30
    f210:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
    f214:	add	x3, x3, #0x4d8
    f218:	add	x2, x2, #0xdc9
    f21c:	str	wzr, [sp, #44]
    f220:	str	x19, [sp, #72]
    f224:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
    f228:	cbnz	w0, f234 <PyFloat_FromString@plt+0x8704>
    f22c:	mov	x19, #0x0                   	// #0
    f230:	b	f2ec <PyFloat_FromString@plt+0x87bc>
    f234:	ldr	x0, [sp, #72]
    f238:	cmp	x0, x19
    f23c:	b.ne	f28c <PyFloat_FromString@plt+0x875c>  // b.any
    f240:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    f244:	str	x0, [sp, #72]
    f248:	cbz	x0, f22c <PyFloat_FromString@plt+0x86fc>
    f24c:	bl	790c <PyFloat_FromString@plt+0xddc>
    f250:	ldr	x3, [sp, #72]
    f254:	mov	x2, x20
    f258:	add	x1, sp, #0x38
    f25c:	mov	w0, #0x1                   	// #1
    f260:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    f264:	cbz	w0, f22c <PyFloat_FromString@plt+0x86fc>
    f268:	ldr	x2, [sp, #48]
    f26c:	add	x1, sp, #0x40
    f270:	ldr	x3, [sp, #72]
    f274:	mov	w0, #0x1                   	// #1
    f278:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    f27c:	cbnz	w0, f2c4 <PyFloat_FromString@plt+0x8794>
    f280:	ldr	x0, [sp, #56]
    f284:	bl	790c <PyFloat_FromString@plt+0xddc>
    f288:	b	f22c <PyFloat_FromString@plt+0x86fc>
    f28c:	ldr	x0, [x0, #8]
    f290:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
    f294:	add	x1, x1, #0x330
    f298:	cmp	x0, x1
    f29c:	b.eq	f250 <PyFloat_FromString@plt+0x8720>  // b.none
    f2a0:	bl	6a60 <PyType_IsSubtype@plt>
    f2a4:	cbnz	w0, f250 <PyFloat_FromString@plt+0x8720>
    f2a8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    f2ac:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    f2b0:	add	x1, x1, #0x889
    f2b4:	ldr	x0, [x0, #3936]
    f2b8:	ldr	x0, [x0]
    f2bc:	bl	66e0 <PyErr_SetString@plt>
    f2c0:	b	f22c <PyFloat_FromString@plt+0x86fc>
    f2c4:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    f2c8:	add	x0, x0, #0x330
    f2cc:	add	x0, x0, #0x1a0
    f2d0:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    f2d4:	mov	x19, x0
    f2d8:	cbnz	x0, f2fc <PyFloat_FromString@plt+0x87cc>
    f2dc:	ldr	x0, [sp, #56]
    f2e0:	bl	790c <PyFloat_FromString@plt+0xddc>
    f2e4:	ldr	x0, [sp, #64]
    f2e8:	bl	790c <PyFloat_FromString@plt+0xddc>
    f2ec:	mov	x0, x19
    f2f0:	ldp	x19, x20, [sp, #16]
    f2f4:	ldp	x29, x30, [sp], #80
    f2f8:	ret
    f2fc:	ldp	x1, x2, [sp, #56]
    f300:	add	x4, sp, #0x2c
    f304:	ldr	x3, [sp, #72]
    f308:	add	x0, x0, #0x18
    f30c:	add	x3, x3, #0x10
    f310:	add	x1, x1, #0x18
    f314:	add	x2, x2, #0x18
    f318:	bl	19404 <PyInit__decimal@@Base+0x847c>
    f31c:	ldr	x0, [sp, #56]
    f320:	bl	790c <PyFloat_FromString@plt+0xddc>
    f324:	ldr	x0, [sp, #64]
    f328:	bl	790c <PyFloat_FromString@plt+0xddc>
    f32c:	ldr	w1, [sp, #44]
    f330:	ldr	x0, [sp, #72]
    f334:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    f338:	cbz	w0, f2ec <PyFloat_FromString@plt+0x87bc>
    f33c:	mov	x0, x19
    f340:	b	f284 <PyFloat_FromString@plt+0x8754>
    f344:	stp	x29, x30, [sp, #-80]!
    f348:	mov	x29, sp
    f34c:	stp	x19, x20, [sp, #16]
    f350:	mov	x19, x1
    f354:	str	x21, [sp, #32]
    f358:	mov	x21, x0
    f35c:	str	wzr, [sp, #60]
    f360:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    f364:	cbz	x0, f438 <PyFloat_FromString@plt+0x8908>
    f368:	mov	x20, x0
    f36c:	bl	790c <PyFloat_FromString@plt+0xddc>
    f370:	mov	x3, x20
    f374:	mov	x2, x21
    f378:	add	x1, sp, #0x40
    f37c:	mov	w0, #0x0                   	// #0
    f380:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    f384:	cbnz	w0, f3a0 <PyFloat_FromString@plt+0x8870>
    f388:	ldr	x19, [sp, #64]
    f38c:	mov	x0, x19
    f390:	ldp	x19, x20, [sp, #16]
    f394:	ldr	x21, [sp, #32]
    f398:	ldp	x29, x30, [sp], #80
    f39c:	ret
    f3a0:	mov	x3, x20
    f3a4:	mov	x2, x19
    f3a8:	add	x1, sp, #0x48
    f3ac:	mov	w0, #0x0                   	// #0
    f3b0:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    f3b4:	cbnz	w0, f3c8 <PyFloat_FromString@plt+0x8898>
    f3b8:	ldr	x0, [sp, #64]
    f3bc:	bl	790c <PyFloat_FromString@plt+0xddc>
    f3c0:	ldr	x19, [sp, #72]
    f3c4:	b	f38c <PyFloat_FromString@plt+0x885c>
    f3c8:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    f3cc:	add	x0, x0, #0x330
    f3d0:	add	x0, x0, #0x1a0
    f3d4:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    f3d8:	mov	x19, x0
    f3dc:	cbnz	x0, f3f4 <PyFloat_FromString@plt+0x88c4>
    f3e0:	ldr	x0, [sp, #64]
    f3e4:	bl	790c <PyFloat_FromString@plt+0xddc>
    f3e8:	ldr	x0, [sp, #72]
    f3ec:	bl	790c <PyFloat_FromString@plt+0xddc>
    f3f0:	b	f38c <PyFloat_FromString@plt+0x885c>
    f3f4:	ldp	x1, x2, [sp, #64]
    f3f8:	add	x4, sp, #0x3c
    f3fc:	add	x3, x20, #0x10
    f400:	add	x0, x0, #0x18
    f404:	add	x1, x1, #0x18
    f408:	add	x2, x2, #0x18
    f40c:	bl	1e8c0 <PyInit__decimal@@Base+0xd938>
    f410:	ldr	x0, [sp, #64]
    f414:	bl	790c <PyFloat_FromString@plt+0xddc>
    f418:	ldr	x0, [sp, #72]
    f41c:	bl	790c <PyFloat_FromString@plt+0xddc>
    f420:	ldr	w1, [sp, #60]
    f424:	mov	x0, x20
    f428:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    f42c:	cbz	w0, f38c <PyFloat_FromString@plt+0x885c>
    f430:	mov	x0, x19
    f434:	bl	790c <PyFloat_FromString@plt+0xddc>
    f438:	mov	x19, #0x0                   	// #0
    f43c:	b	f38c <PyFloat_FromString@plt+0x885c>
    f440:	stp	x29, x30, [sp, #-80]!
    f444:	mov	x29, sp
    f448:	stp	x19, x20, [sp, #16]
    f44c:	mov	x19, x1
    f450:	str	x21, [sp, #32]
    f454:	mov	x21, x0
    f458:	str	wzr, [sp, #60]
    f45c:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    f460:	cbz	x0, f534 <PyFloat_FromString@plt+0x8a04>
    f464:	mov	x20, x0
    f468:	bl	790c <PyFloat_FromString@plt+0xddc>
    f46c:	mov	x3, x20
    f470:	mov	x2, x21
    f474:	add	x1, sp, #0x40
    f478:	mov	w0, #0x0                   	// #0
    f47c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    f480:	cbnz	w0, f49c <PyFloat_FromString@plt+0x896c>
    f484:	ldr	x19, [sp, #64]
    f488:	mov	x0, x19
    f48c:	ldp	x19, x20, [sp, #16]
    f490:	ldr	x21, [sp, #32]
    f494:	ldp	x29, x30, [sp], #80
    f498:	ret
    f49c:	mov	x3, x20
    f4a0:	mov	x2, x19
    f4a4:	add	x1, sp, #0x48
    f4a8:	mov	w0, #0x0                   	// #0
    f4ac:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    f4b0:	cbnz	w0, f4c4 <PyFloat_FromString@plt+0x8994>
    f4b4:	ldr	x0, [sp, #64]
    f4b8:	bl	790c <PyFloat_FromString@plt+0xddc>
    f4bc:	ldr	x19, [sp, #72]
    f4c0:	b	f488 <PyFloat_FromString@plt+0x8958>
    f4c4:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    f4c8:	add	x0, x0, #0x330
    f4cc:	add	x0, x0, #0x1a0
    f4d0:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    f4d4:	mov	x19, x0
    f4d8:	cbnz	x0, f4f0 <PyFloat_FromString@plt+0x89c0>
    f4dc:	ldr	x0, [sp, #64]
    f4e0:	bl	790c <PyFloat_FromString@plt+0xddc>
    f4e4:	ldr	x0, [sp, #72]
    f4e8:	bl	790c <PyFloat_FromString@plt+0xddc>
    f4ec:	b	f488 <PyFloat_FromString@plt+0x8958>
    f4f0:	ldp	x1, x2, [sp, #64]
    f4f4:	add	x4, sp, #0x3c
    f4f8:	add	x3, x20, #0x10
    f4fc:	add	x0, x0, #0x18
    f500:	add	x1, x1, #0x18
    f504:	add	x2, x2, #0x18
    f508:	bl	20c54 <PyInit__decimal@@Base+0xfccc>
    f50c:	ldr	x0, [sp, #64]
    f510:	bl	790c <PyFloat_FromString@plt+0xddc>
    f514:	ldr	x0, [sp, #72]
    f518:	bl	790c <PyFloat_FromString@plt+0xddc>
    f51c:	ldr	w1, [sp, #60]
    f520:	mov	x0, x20
    f524:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    f528:	cbz	w0, f488 <PyFloat_FromString@plt+0x8958>
    f52c:	mov	x0, x19
    f530:	bl	790c <PyFloat_FromString@plt+0xddc>
    f534:	mov	x19, #0x0                   	// #0
    f538:	b	f488 <PyFloat_FromString@plt+0x8958>
    f53c:	stp	x29, x30, [sp, #-80]!
    f540:	mov	x29, sp
    f544:	stp	x19, x20, [sp, #16]
    f548:	mov	x19, x2
    f54c:	stp	x21, x22, [sp, #32]
    f550:	mov	x22, x0
    f554:	mov	x21, x1
    f558:	str	wzr, [sp, #52]
    f55c:	str	xzr, [sp, #72]
    f560:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    f564:	cbz	x0, f688 <PyFloat_FromString@plt+0x8b58>
    f568:	mov	x20, x0
    f56c:	bl	790c <PyFloat_FromString@plt+0xddc>
    f570:	mov	x3, x20
    f574:	mov	x2, x22
    f578:	add	x1, sp, #0x38
    f57c:	mov	w0, #0x0                   	// #0
    f580:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    f584:	cbnz	w0, f5a0 <PyFloat_FromString@plt+0x8a70>
    f588:	ldr	x19, [sp, #56]
    f58c:	mov	x0, x19
    f590:	ldp	x19, x20, [sp, #16]
    f594:	ldp	x21, x22, [sp, #32]
    f598:	ldp	x29, x30, [sp], #80
    f59c:	ret
    f5a0:	mov	x3, x20
    f5a4:	mov	x2, x21
    f5a8:	add	x1, sp, #0x40
    f5ac:	mov	w0, #0x0                   	// #0
    f5b0:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    f5b4:	cbnz	w0, f5c8 <PyFloat_FromString@plt+0x8a98>
    f5b8:	ldr	x0, [sp, #56]
    f5bc:	bl	790c <PyFloat_FromString@plt+0xddc>
    f5c0:	ldr	x19, [sp, #64]
    f5c4:	b	f58c <PyFloat_FromString@plt+0x8a5c>
    f5c8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    f5cc:	ldr	x0, [x0, #4008]
    f5d0:	cmp	x19, x0
    f5d4:	b.eq	f608 <PyFloat_FromString@plt+0x8ad8>  // b.none
    f5d8:	mov	x3, x20
    f5dc:	mov	x2, x19
    f5e0:	add	x1, sp, #0x48
    f5e4:	mov	w0, #0x0                   	// #0
    f5e8:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    f5ec:	cbnz	w0, f608 <PyFloat_FromString@plt+0x8ad8>
    f5f0:	ldr	x0, [sp, #56]
    f5f4:	bl	790c <PyFloat_FromString@plt+0xddc>
    f5f8:	ldr	x0, [sp, #64]
    f5fc:	bl	790c <PyFloat_FromString@plt+0xddc>
    f600:	ldr	x19, [sp, #72]
    f604:	b	f58c <PyFloat_FromString@plt+0x8a5c>
    f608:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    f60c:	add	x0, x0, #0x330
    f610:	add	x0, x0, #0x1a0
    f614:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    f618:	mov	x19, x0
    f61c:	cbnz	x0, f63c <PyFloat_FromString@plt+0x8b0c>
    f620:	ldr	x0, [sp, #56]
    f624:	bl	790c <PyFloat_FromString@plt+0xddc>
    f628:	ldr	x0, [sp, #64]
    f62c:	bl	790c <PyFloat_FromString@plt+0xddc>
    f630:	ldr	x0, [sp, #72]
    f634:	bl	7cc4 <PyFloat_FromString@plt+0x1194>
    f638:	b	f58c <PyFloat_FromString@plt+0x8a5c>
    f63c:	ldp	x1, x2, [sp, #56]
    f640:	add	x0, x0, #0x18
    f644:	ldr	x6, [sp, #72]
    f648:	add	x3, x20, #0x10
    f64c:	add	x4, sp, #0x34
    f650:	add	x1, x1, #0x18
    f654:	add	x2, x2, #0x18
    f658:	cbnz	x6, f690 <PyFloat_FromString@plt+0x8b60>
    f65c:	bl	2113c <PyInit__decimal@@Base+0x101b4>
    f660:	ldr	x0, [sp, #56]
    f664:	bl	790c <PyFloat_FromString@plt+0xddc>
    f668:	ldr	x0, [sp, #64]
    f66c:	bl	790c <PyFloat_FromString@plt+0xddc>
    f670:	ldr	w1, [sp, #52]
    f674:	mov	x0, x20
    f678:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    f67c:	cbz	w0, f58c <PyFloat_FromString@plt+0x8a5c>
    f680:	mov	x0, x19
    f684:	bl	790c <PyFloat_FromString@plt+0xddc>
    f688:	mov	x19, #0x0                   	// #0
    f68c:	b	f58c <PyFloat_FromString@plt+0x8a5c>
    f690:	mov	x5, x4
    f694:	mov	x4, x3
    f698:	add	x3, x6, #0x18
    f69c:	bl	21740 <PyInit__decimal@@Base+0x107b8>
    f6a0:	ldr	x0, [sp, #72]
    f6a4:	bl	790c <PyFloat_FromString@plt+0xddc>
    f6a8:	b	f660 <PyFloat_FromString@plt+0x8b30>
    f6ac:	stp	x29, x30, [sp, #-80]!
    f6b0:	mov	x29, sp
    f6b4:	stp	x19, x20, [sp, #16]
    f6b8:	mov	x20, x1
    f6bc:	str	x21, [sp, #32]
    f6c0:	mov	x21, x0
    f6c4:	str	wzr, [sp, #60]
    f6c8:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    f6cc:	mov	x19, x0
    f6d0:	cbz	x0, f6f4 <PyFloat_FromString@plt+0x8bc4>
    f6d4:	bl	790c <PyFloat_FromString@plt+0xddc>
    f6d8:	mov	x3, x19
    f6dc:	mov	x2, x21
    f6e0:	add	x1, sp, #0x40
    f6e4:	mov	w0, #0x0                   	// #0
    f6e8:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    f6ec:	cbnz	w0, f708 <PyFloat_FromString@plt+0x8bd8>
    f6f0:	ldr	x19, [sp, #64]
    f6f4:	mov	x0, x19
    f6f8:	ldp	x19, x20, [sp, #16]
    f6fc:	ldr	x21, [sp, #32]
    f700:	ldp	x29, x30, [sp], #80
    f704:	ret
    f708:	mov	x3, x19
    f70c:	mov	x2, x20
    f710:	add	x1, sp, #0x48
    f714:	mov	w0, #0x0                   	// #0
    f718:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    f71c:	cbnz	w0, f730 <PyFloat_FromString@plt+0x8c00>
    f720:	ldr	x0, [sp, #64]
    f724:	bl	790c <PyFloat_FromString@plt+0xddc>
    f728:	ldr	x19, [sp, #72]
    f72c:	b	f6f4 <PyFloat_FromString@plt+0x8bc4>
    f730:	adrp	x21, 43000 <PyInit__decimal@@Base+0x32078>
    f734:	add	x21, x21, #0x330
    f738:	add	x21, x21, #0x1a0
    f73c:	mov	x0, x21
    f740:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    f744:	mov	x20, x0
    f748:	cbnz	x0, f764 <PyFloat_FromString@plt+0x8c34>
    f74c:	ldr	x0, [sp, #64]
    f750:	bl	790c <PyFloat_FromString@plt+0xddc>
    f754:	ldr	x0, [sp, #72]
    f758:	mov	x19, #0x0                   	// #0
    f75c:	bl	790c <PyFloat_FromString@plt+0xddc>
    f760:	b	f6f4 <PyFloat_FromString@plt+0x8bc4>
    f764:	mov	x0, x21
    f768:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    f76c:	mov	x21, x0
    f770:	cbnz	x0, f78c <PyFloat_FromString@plt+0x8c5c>
    f774:	ldr	x0, [sp, #64]
    f778:	bl	790c <PyFloat_FromString@plt+0xddc>
    f77c:	ldr	x0, [sp, #72]
    f780:	bl	790c <PyFloat_FromString@plt+0xddc>
    f784:	mov	x0, x20
    f788:	b	f758 <PyFloat_FromString@plt+0x8c28>
    f78c:	ldp	x2, x3, [sp, #64]
    f790:	add	x1, x0, #0x18
    f794:	add	x5, sp, #0x3c
    f798:	add	x4, x19, #0x10
    f79c:	add	x0, x20, #0x18
    f7a0:	add	x3, x3, #0x18
    f7a4:	add	x2, x2, #0x18
    f7a8:	bl	20a44 <PyInit__decimal@@Base+0xfabc>
    f7ac:	ldr	x0, [sp, #64]
    f7b0:	bl	790c <PyFloat_FromString@plt+0xddc>
    f7b4:	ldr	x0, [sp, #72]
    f7b8:	bl	790c <PyFloat_FromString@plt+0xddc>
    f7bc:	ldr	w1, [sp, #60]
    f7c0:	mov	x0, x19
    f7c4:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    f7c8:	cbz	w0, f7d4 <PyFloat_FromString@plt+0x8ca4>
    f7cc:	mov	x0, x21
    f7d0:	b	f780 <PyFloat_FromString@plt+0x8c50>
    f7d4:	mov	x2, x21
    f7d8:	mov	x1, x20
    f7dc:	adrp	x0, 24000 <PyInit__decimal@@Base+0x13078>
    f7e0:	add	x0, x0, #0xdcd
    f7e4:	bl	6870 <Py_BuildValue@plt>
    f7e8:	mov	x19, x0
    f7ec:	mov	x0, x21
    f7f0:	bl	790c <PyFloat_FromString@plt+0xddc>
    f7f4:	mov	x0, x20
    f7f8:	bl	790c <PyFloat_FromString@plt+0xddc>
    f7fc:	b	f6f4 <PyFloat_FromString@plt+0x8bc4>
    f800:	stp	x29, x30, [sp, #-80]!
    f804:	mov	x29, sp
    f808:	stp	x19, x20, [sp, #16]
    f80c:	mov	x19, x1
    f810:	str	x21, [sp, #32]
    f814:	mov	x21, x0
    f818:	str	wzr, [sp, #60]
    f81c:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    f820:	cbz	x0, f8f4 <PyFloat_FromString@plt+0x8dc4>
    f824:	mov	x20, x0
    f828:	bl	790c <PyFloat_FromString@plt+0xddc>
    f82c:	mov	x3, x20
    f830:	mov	x2, x21
    f834:	add	x1, sp, #0x40
    f838:	mov	w0, #0x0                   	// #0
    f83c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    f840:	cbnz	w0, f85c <PyFloat_FromString@plt+0x8d2c>
    f844:	ldr	x19, [sp, #64]
    f848:	mov	x0, x19
    f84c:	ldp	x19, x20, [sp, #16]
    f850:	ldr	x21, [sp, #32]
    f854:	ldp	x29, x30, [sp], #80
    f858:	ret
    f85c:	mov	x3, x20
    f860:	mov	x2, x19
    f864:	add	x1, sp, #0x48
    f868:	mov	w0, #0x0                   	// #0
    f86c:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    f870:	cbnz	w0, f884 <PyFloat_FromString@plt+0x8d54>
    f874:	ldr	x0, [sp, #64]
    f878:	bl	790c <PyFloat_FromString@plt+0xddc>
    f87c:	ldr	x19, [sp, #72]
    f880:	b	f848 <PyFloat_FromString@plt+0x8d18>
    f884:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    f888:	add	x0, x0, #0x330
    f88c:	add	x0, x0, #0x1a0
    f890:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    f894:	mov	x19, x0
    f898:	cbnz	x0, f8b0 <PyFloat_FromString@plt+0x8d80>
    f89c:	ldr	x0, [sp, #64]
    f8a0:	bl	790c <PyFloat_FromString@plt+0xddc>
    f8a4:	ldr	x0, [sp, #72]
    f8a8:	bl	790c <PyFloat_FromString@plt+0xddc>
    f8ac:	b	f848 <PyFloat_FromString@plt+0x8d18>
    f8b0:	ldp	x1, x2, [sp, #64]
    f8b4:	add	x4, sp, #0x3c
    f8b8:	add	x3, x20, #0x10
    f8bc:	add	x0, x0, #0x18
    f8c0:	add	x1, x1, #0x18
    f8c4:	add	x2, x2, #0x18
    f8c8:	bl	215d8 <PyInit__decimal@@Base+0x10650>
    f8cc:	ldr	x0, [sp, #64]
    f8d0:	bl	790c <PyFloat_FromString@plt+0xddc>
    f8d4:	ldr	x0, [sp, #72]
    f8d8:	bl	790c <PyFloat_FromString@plt+0xddc>
    f8dc:	ldr	w1, [sp, #60]
    f8e0:	mov	x0, x20
    f8e4:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    f8e8:	cbz	w0, f848 <PyFloat_FromString@plt+0x8d18>
    f8ec:	mov	x0, x19
    f8f0:	bl	790c <PyFloat_FromString@plt+0xddc>
    f8f4:	mov	x19, #0x0                   	// #0
    f8f8:	b	f848 <PyFloat_FromString@plt+0x8d18>
    f8fc:	stp	x29, x30, [sp, #-80]!
    f900:	mov	x29, sp
    f904:	stp	x19, x20, [sp, #16]
    f908:	mov	x19, x1
    f90c:	str	x21, [sp, #32]
    f910:	mov	x21, x0
    f914:	str	wzr, [sp, #60]
    f918:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    f91c:	cbz	x0, f9f0 <PyFloat_FromString@plt+0x8ec0>
    f920:	mov	x20, x0
    f924:	bl	790c <PyFloat_FromString@plt+0xddc>
    f928:	mov	x3, x20
    f92c:	mov	x2, x21
    f930:	add	x1, sp, #0x40
    f934:	mov	w0, #0x0                   	// #0
    f938:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    f93c:	cbnz	w0, f958 <PyFloat_FromString@plt+0x8e28>
    f940:	ldr	x19, [sp, #64]
    f944:	mov	x0, x19
    f948:	ldp	x19, x20, [sp, #16]
    f94c:	ldr	x21, [sp, #32]
    f950:	ldp	x29, x30, [sp], #80
    f954:	ret
    f958:	mov	x3, x20
    f95c:	mov	x2, x19
    f960:	add	x1, sp, #0x48
    f964:	mov	w0, #0x0                   	// #0
    f968:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    f96c:	cbnz	w0, f980 <PyFloat_FromString@plt+0x8e50>
    f970:	ldr	x0, [sp, #64]
    f974:	bl	790c <PyFloat_FromString@plt+0xddc>
    f978:	ldr	x19, [sp, #72]
    f97c:	b	f944 <PyFloat_FromString@plt+0x8e14>
    f980:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    f984:	add	x0, x0, #0x330
    f988:	add	x0, x0, #0x1a0
    f98c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    f990:	mov	x19, x0
    f994:	cbnz	x0, f9ac <PyFloat_FromString@plt+0x8e7c>
    f998:	ldr	x0, [sp, #64]
    f99c:	bl	790c <PyFloat_FromString@plt+0xddc>
    f9a0:	ldr	x0, [sp, #72]
    f9a4:	bl	790c <PyFloat_FromString@plt+0xddc>
    f9a8:	b	f944 <PyFloat_FromString@plt+0x8e14>
    f9ac:	ldp	x1, x2, [sp, #64]
    f9b0:	add	x4, sp, #0x3c
    f9b4:	add	x3, x20, #0x10
    f9b8:	add	x0, x0, #0x18
    f9bc:	add	x1, x1, #0x18
    f9c0:	add	x2, x2, #0x18
    f9c4:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
    f9c8:	ldr	x0, [sp, #64]
    f9cc:	bl	790c <PyFloat_FromString@plt+0xddc>
    f9d0:	ldr	x0, [sp, #72]
    f9d4:	bl	790c <PyFloat_FromString@plt+0xddc>
    f9d8:	ldr	w1, [sp, #60]
    f9dc:	mov	x0, x20
    f9e0:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    f9e4:	cbz	w0, f944 <PyFloat_FromString@plt+0x8e14>
    f9e8:	mov	x0, x19
    f9ec:	bl	790c <PyFloat_FromString@plt+0xddc>
    f9f0:	mov	x19, #0x0                   	// #0
    f9f4:	b	f944 <PyFloat_FromString@plt+0x8e14>
    f9f8:	stp	x29, x30, [sp, #-80]!
    f9fc:	mov	x29, sp
    fa00:	stp	x19, x20, [sp, #16]
    fa04:	mov	x19, x1
    fa08:	str	x21, [sp, #32]
    fa0c:	mov	x21, x0
    fa10:	str	wzr, [sp, #60]
    fa14:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    fa18:	cbz	x0, faec <PyFloat_FromString@plt+0x8fbc>
    fa1c:	mov	x20, x0
    fa20:	bl	790c <PyFloat_FromString@plt+0xddc>
    fa24:	mov	x3, x20
    fa28:	mov	x2, x21
    fa2c:	add	x1, sp, #0x40
    fa30:	mov	w0, #0x0                   	// #0
    fa34:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    fa38:	cbnz	w0, fa54 <PyFloat_FromString@plt+0x8f24>
    fa3c:	ldr	x19, [sp, #64]
    fa40:	mov	x0, x19
    fa44:	ldp	x19, x20, [sp, #16]
    fa48:	ldr	x21, [sp, #32]
    fa4c:	ldp	x29, x30, [sp], #80
    fa50:	ret
    fa54:	mov	x3, x20
    fa58:	mov	x2, x19
    fa5c:	add	x1, sp, #0x48
    fa60:	mov	w0, #0x0                   	// #0
    fa64:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    fa68:	cbnz	w0, fa7c <PyFloat_FromString@plt+0x8f4c>
    fa6c:	ldr	x0, [sp, #64]
    fa70:	bl	790c <PyFloat_FromString@plt+0xddc>
    fa74:	ldr	x19, [sp, #72]
    fa78:	b	fa40 <PyFloat_FromString@plt+0x8f10>
    fa7c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    fa80:	add	x0, x0, #0x330
    fa84:	add	x0, x0, #0x1a0
    fa88:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    fa8c:	mov	x19, x0
    fa90:	cbnz	x0, faa8 <PyFloat_FromString@plt+0x8f78>
    fa94:	ldr	x0, [sp, #64]
    fa98:	bl	790c <PyFloat_FromString@plt+0xddc>
    fa9c:	ldr	x0, [sp, #72]
    faa0:	bl	790c <PyFloat_FromString@plt+0xddc>
    faa4:	b	fa40 <PyFloat_FromString@plt+0x8f10>
    faa8:	ldp	x1, x2, [sp, #64]
    faac:	add	x4, sp, #0x3c
    fab0:	add	x3, x20, #0x10
    fab4:	add	x0, x0, #0x18
    fab8:	add	x1, x1, #0x18
    fabc:	add	x2, x2, #0x18
    fac0:	bl	1bd98 <PyInit__decimal@@Base+0xae10>
    fac4:	ldr	x0, [sp, #64]
    fac8:	bl	790c <PyFloat_FromString@plt+0xddc>
    facc:	ldr	x0, [sp, #72]
    fad0:	bl	790c <PyFloat_FromString@plt+0xddc>
    fad4:	ldr	w1, [sp, #60]
    fad8:	mov	x0, x20
    fadc:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    fae0:	cbz	w0, fa40 <PyFloat_FromString@plt+0x8f10>
    fae4:	mov	x0, x19
    fae8:	bl	790c <PyFloat_FromString@plt+0xddc>
    faec:	mov	x19, #0x0                   	// #0
    faf0:	b	fa40 <PyFloat_FromString@plt+0x8f10>
    faf4:	stp	x29, x30, [sp, #-80]!
    faf8:	mov	x29, sp
    fafc:	stp	x19, x20, [sp, #16]
    fb00:	mov	x19, x1
    fb04:	str	x21, [sp, #32]
    fb08:	mov	x21, x0
    fb0c:	str	wzr, [sp, #60]
    fb10:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    fb14:	cbz	x0, fbe8 <PyFloat_FromString@plt+0x90b8>
    fb18:	mov	x20, x0
    fb1c:	bl	790c <PyFloat_FromString@plt+0xddc>
    fb20:	mov	x3, x20
    fb24:	mov	x2, x21
    fb28:	add	x1, sp, #0x40
    fb2c:	mov	w0, #0x0                   	// #0
    fb30:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    fb34:	cbnz	w0, fb50 <PyFloat_FromString@plt+0x9020>
    fb38:	ldr	x19, [sp, #64]
    fb3c:	mov	x0, x19
    fb40:	ldp	x19, x20, [sp, #16]
    fb44:	ldr	x21, [sp, #32]
    fb48:	ldp	x29, x30, [sp], #80
    fb4c:	ret
    fb50:	mov	x3, x20
    fb54:	mov	x2, x19
    fb58:	add	x1, sp, #0x48
    fb5c:	mov	w0, #0x0                   	// #0
    fb60:	bl	ac90 <PyFloat_FromString@plt+0x4160>
    fb64:	cbnz	w0, fb78 <PyFloat_FromString@plt+0x9048>
    fb68:	ldr	x0, [sp, #64]
    fb6c:	bl	790c <PyFloat_FromString@plt+0xddc>
    fb70:	ldr	x19, [sp, #72]
    fb74:	b	fb3c <PyFloat_FromString@plt+0x900c>
    fb78:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    fb7c:	add	x0, x0, #0x330
    fb80:	add	x0, x0, #0x1a0
    fb84:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    fb88:	mov	x19, x0
    fb8c:	cbnz	x0, fba4 <PyFloat_FromString@plt+0x9074>
    fb90:	ldr	x0, [sp, #64]
    fb94:	bl	790c <PyFloat_FromString@plt+0xddc>
    fb98:	ldr	x0, [sp, #72]
    fb9c:	bl	790c <PyFloat_FromString@plt+0xddc>
    fba0:	b	fb3c <PyFloat_FromString@plt+0x900c>
    fba4:	ldp	x1, x2, [sp, #64]
    fba8:	add	x4, sp, #0x3c
    fbac:	add	x3, x20, #0x10
    fbb0:	add	x0, x0, #0x18
    fbb4:	add	x1, x1, #0x18
    fbb8:	add	x2, x2, #0x18
    fbbc:	bl	1bc74 <PyInit__decimal@@Base+0xacec>
    fbc0:	ldr	x0, [sp, #64]
    fbc4:	bl	790c <PyFloat_FromString@plt+0xddc>
    fbc8:	ldr	x0, [sp, #72]
    fbcc:	bl	790c <PyFloat_FromString@plt+0xddc>
    fbd0:	ldr	w1, [sp, #60]
    fbd4:	mov	x0, x20
    fbd8:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    fbdc:	cbz	w0, fb3c <PyFloat_FromString@plt+0x900c>
    fbe0:	mov	x0, x19
    fbe4:	bl	790c <PyFloat_FromString@plt+0xddc>
    fbe8:	mov	x19, #0x0                   	// #0
    fbec:	b	fb3c <PyFloat_FromString@plt+0x900c>
    fbf0:	stp	x29, x30, [sp, #-160]!
    fbf4:	mov	x29, sp
    fbf8:	ldr	x3, [x1, #8]
    fbfc:	stp	x19, x20, [sp, #16]
    fc00:	stp	x21, x22, [sp, #32]
    fc04:	ldr	x4, [x3, #168]
    fc08:	stp	x23, x24, [sp, #48]
    fc0c:	stp	x25, x26, [sp, #64]
    fc10:	str	x27, [sp, #80]
    fc14:	str	wzr, [sp, #108]
    fc18:	str	d8, [sp, #88]
    fc1c:	tbz	w4, #24, fc4c <PyFloat_FromString@plt+0x911c>
    fc20:	bl	abb8 <PyFloat_FromString@plt+0x4088>
    fc24:	mov	x19, x0
    fc28:	mov	x0, x19
    fc2c:	ldr	d8, [sp, #88]
    fc30:	ldp	x19, x20, [sp, #16]
    fc34:	ldp	x21, x22, [sp, #32]
    fc38:	ldp	x23, x24, [sp, #48]
    fc3c:	ldp	x25, x26, [sp, #64]
    fc40:	ldr	x27, [sp, #80]
    fc44:	ldp	x29, x30, [sp], #160
    fc48:	ret
    fc4c:	mov	x20, x1
    fc50:	adrp	x1, 42000 <PyInit__decimal@@Base+0x31078>
    fc54:	mov	x21, x0
    fc58:	mov	x23, x2
    fc5c:	ldr	x1, [x1, #3864]
    fc60:	cmp	x3, x1
    fc64:	b.eq	fc94 <PyFloat_FromString@plt+0x9164>  // b.none
    fc68:	mov	x0, x3
    fc6c:	bl	6a60 <PyType_IsSubtype@plt>
    fc70:	cbnz	w0, fc94 <PyFloat_FromString@plt+0x9164>
    fc74:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
    fc78:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
    fc7c:	add	x1, x1, #0xdfb
    fc80:	ldr	x0, [x0, #3936]
    fc84:	ldr	x0, [x0]
    fc88:	bl	66e0 <PyErr_SetString@plt>
    fc8c:	mov	x19, #0x0                   	// #0
    fc90:	b	fc28 <PyFloat_FromString@plt+0x90f8>
    fc94:	mov	x0, x20
    fc98:	bl	6960 <PyFloat_AsDouble@plt>
    fc9c:	fmov	d8, d0
    fca0:	fmov	d0, #-1.000000000000000000e+00
    fca4:	fcmp	d8, d0
    fca8:	b.eq	fcf8 <PyFloat_FromString@plt+0x91c8>  // b.none
    fcac:	fmov	d1, #1.000000000000000000e+00
    fcb0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    fcb4:	fmov	d0, x0
    fcb8:	bsl	v0.8b, v8.8b, v1.8b
    fcbc:	fcmp	d0, d1
    fcc0:	cset	w22, ne  // ne = any
    fcc4:	fcmp	d8, d8
    fcc8:	b.vc	fd04 <PyFloat_FromString@plt+0x91d4>
    fccc:	mov	x0, x21
    fcd0:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
    fcd4:	mov	x19, x0
    fcd8:	cbz	x0, fc8c <PyFloat_FromString@plt+0x915c>
    fcdc:	fcmp	d8, d8
    fce0:	add	x0, x0, #0x18
    fce4:	b.vc	fd74 <PyFloat_FromString@plt+0x9244>
    fce8:	mov	w2, #0x4                   	// #4
    fcec:	mov	w1, #0x0                   	// #0
    fcf0:	bl	18878 <PyInit__decimal@@Base+0x78f0>
    fcf4:	b	fc28 <PyFloat_FromString@plt+0x90f8>
    fcf8:	bl	6880 <PyErr_Occurred@plt>
    fcfc:	cbz	x0, fcac <PyFloat_FromString@plt+0x917c>
    fd00:	b	fc8c <PyFloat_FromString@plt+0x915c>
    fd04:	fabs	d1, d8
    fd08:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    fd0c:	fmov	d0, x0
    fd10:	fcmp	d1, d0
    fd14:	b.gt	fccc <PyFloat_FromString@plt+0x919c>
    fd18:	adrp	x19, 45000 <PyInit__decimal@@Base+0x34078>
    fd1c:	add	x19, x19, #0x6d0
    fd20:	mov	x0, x20
    fd24:	ldr	x1, [x19, #144]
    fd28:	blr	x1
    fd2c:	mov	x24, x0
    fd30:	cbz	x0, fc8c <PyFloat_FromString@plt+0x915c>
    fd34:	ldr	x2, [x19, #152]
    fd38:	mov	x1, #0x0                   	// #0
    fd3c:	blr	x2
    fd40:	mov	x20, x0
    fd44:	mov	x0, x24
    fd48:	bl	790c <PyFloat_FromString@plt+0xddc>
    fd4c:	cbz	x20, fc8c <PyFloat_FromString@plt+0x915c>
    fd50:	ldp	x25, x0, [x20, #24]
    fd54:	mov	x1, #0x0                   	// #0
    fd58:	ldr	x2, [x19, #160]
    fd5c:	blr	x2
    fd60:	mov	x19, x0
    fd64:	cbnz	x0, fd80 <PyFloat_FromString@plt+0x9250>
    fd68:	mov	x0, x20
    fd6c:	bl	790c <PyFloat_FromString@plt+0xddc>
    fd70:	b	fc28 <PyFloat_FromString@plt+0x90f8>
    fd74:	mov	w1, w22
    fd78:	mov	w2, #0x2                   	// #2
    fd7c:	b	fcf0 <PyFloat_FromString@plt+0x91c0>
    fd80:	bl	6790 <PyLong_AsSsize_t@plt>
    fd84:	mov	x24, x0
    fd88:	mov	x0, x19
    fd8c:	bl	790c <PyFloat_FromString@plt+0xddc>
    fd90:	cmn	x24, #0x1
    fd94:	b.ne	fdac <PyFloat_FromString@plt+0x927c>  // b.any
    fd98:	bl	6880 <PyErr_Occurred@plt>
    fd9c:	cbz	x0, fdac <PyFloat_FromString@plt+0x927c>
    fda0:	mov	x0, x20
    fda4:	bl	790c <PyFloat_FromString@plt+0xddc>
    fda8:	b	fc8c <PyFloat_FromString@plt+0x915c>
    fdac:	mov	x2, x23
    fdb0:	mov	x1, x25
    fdb4:	mov	x0, x21
    fdb8:	bl	abb8 <PyFloat_FromString@plt+0x4088>
    fdbc:	mov	x19, x0
    fdc0:	mov	x0, x20
    fdc4:	bl	790c <PyFloat_FromString@plt+0xddc>
    fdc8:	cbz	x19, fc8c <PyFloat_FromString@plt+0x915c>
    fdcc:	bl	15e0c <PyInit__decimal@@Base+0x4e84>
    fdd0:	mov	x20, x0
    fdd4:	cbnz	x0, fde8 <PyFloat_FromString@plt+0x92b8>
    fdd8:	mov	x0, x19
    fddc:	bl	790c <PyFloat_FromString@plt+0xddc>
    fde0:	bl	6670 <PyErr_NoMemory@plt>
    fde4:	b	fc8c <PyFloat_FromString@plt+0x915c>
    fde8:	bl	15e0c <PyInit__decimal@@Base+0x4e84>
    fdec:	mov	x21, x0
    fdf0:	cbnz	x0, fe00 <PyFloat_FromString@plt+0x92d0>
    fdf4:	mov	x0, x20
    fdf8:	bl	17b68 <PyInit__decimal@@Base+0x6be0>
    fdfc:	b	fdd8 <PyFloat_FromString@plt+0x92a8>
    fe00:	add	x25, sp, #0x70
    fe04:	add	x26, sp, #0x6c
    fe08:	mov	x0, x25
    fe0c:	bl	12880 <PyInit__decimal@@Base+0x18f8>
    fe10:	mov	x3, x26
    fe14:	mov	x2, x25
    fe18:	mov	x0, x20
    fe1c:	mov	x1, #0x5                   	// #5
    fe20:	bl	1a20c <PyInit__decimal@@Base+0x9284>
    fe24:	mov	x3, x26
    fe28:	mov	x2, x25
    fe2c:	sub	x1, x24, #0x1
    fe30:	mov	x0, x21
    fe34:	bl	1a134 <PyInit__decimal@@Base+0x91ac>
    fe38:	mov	x1, x20
    fe3c:	mov	x0, x20
    fe40:	mov	x4, x26
    fe44:	mov	x3, x25
    fe48:	mov	x2, x21
    fe4c:	bl	2113c <PyInit__decimal@@Base+0x101b4>
    fe50:	ldr	w1, [sp, #108]
    fe54:	mov	x0, x23
    fe58:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    fe5c:	cbz	w0, fe78 <PyFloat_FromString@plt+0x9348>
    fe60:	mov	x0, x20
    fe64:	bl	17b68 <PyInit__decimal@@Base+0x6be0>
    fe68:	mov	x0, x21
    fe6c:	bl	17b68 <PyInit__decimal@@Base+0x6be0>
    fe70:	mov	x0, x19
    fe74:	b	fda4 <PyFloat_FromString@plt+0x9274>
    fe78:	add	x27, x19, #0x18
    fe7c:	mov	x4, x26
    fe80:	mov	x1, x27
    fe84:	mov	x3, x25
    fe88:	mov	x2, x20
    fe8c:	mov	x0, x27
    fe90:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
    fe94:	mov	x0, x20
    fe98:	bl	17b68 <PyInit__decimal@@Base+0x6be0>
    fe9c:	mov	x0, x21
    fea0:	bl	17b68 <PyInit__decimal@@Base+0x6be0>
    fea4:	ldr	w1, [sp, #108]
    fea8:	mov	x0, x23
    feac:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    feb0:	cbnz	w0, fe70 <PyFloat_FromString@plt+0x9340>
    feb4:	mov	x0, x27
    feb8:	mov	w1, w22
    febc:	bl	18378 <PyInit__decimal@@Base+0x73f0>
    fec0:	mov	x0, #0x1                   	// #1
    fec4:	sub	x24, x0, x24
    fec8:	str	x24, [x19, #32]
    fecc:	b	fc28 <PyFloat_FromString@plt+0x90f8>
    fed0:	stp	x29, x30, [sp, #-48]!
    fed4:	mov	x29, sp
    fed8:	stp	x19, x20, [sp, #16]
    fedc:	stp	x21, x22, [sp, #32]
    fee0:	mov	x21, x0
    fee4:	mov	x22, x1
    fee8:	bl	7924 <PyFloat_FromString@plt+0xdf4>
    feec:	cbnz	x0, ff08 <PyFloat_FromString@plt+0x93d8>
    fef0:	mov	x19, #0x0                   	// #0
    fef4:	mov	x0, x19
    fef8:	ldp	x19, x20, [sp, #16]
    fefc:	ldp	x21, x22, [sp, #32]
    ff00:	ldp	x29, x30, [sp], #48
    ff04:	ret
    ff08:	adrp	x20, 43000 <PyInit__decimal@@Base+0x32078>
    ff0c:	add	x20, x20, #0x330
    ff10:	mov	x19, x0
    ff14:	add	x20, x20, #0x1a0
    ff18:	bl	790c <PyFloat_FromString@plt+0xddc>
    ff1c:	mov	x2, x19
    ff20:	mov	x1, x22
    ff24:	mov	x0, x20
    ff28:	bl	fbf0 <PyFloat_FromString@plt+0x90c0>
    ff2c:	cmp	x21, x20
    ff30:	mov	x19, x0
    ff34:	b.eq	fef4 <PyFloat_FromString@plt+0x93c4>  // b.none
    ff38:	cbz	x0, fef0 <PyFloat_FromString@plt+0x93c0>
    ff3c:	mov	x1, x0
    ff40:	mov	x2, #0x0                   	// #0
    ff44:	mov	x0, x21
    ff48:	bl	68f0 <PyObject_CallFunctionObjArgs@plt>
    ff4c:	mov	x20, x0
    ff50:	mov	x0, x19
    ff54:	mov	x19, x20
    ff58:	bl	790c <PyFloat_FromString@plt+0xddc>
    ff5c:	b	fef4 <PyFloat_FromString@plt+0x93c4>
    ff60:	stp	x29, x30, [sp, #-48]!
    ff64:	mov	x2, x1
    ff68:	mov	x29, sp
    ff6c:	stp	x19, x20, [sp, #16]
    ff70:	mov	x20, x1
    ff74:	mov	x1, x0
    ff78:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
    ff7c:	add	x0, x0, #0x330
    ff80:	add	x0, x0, #0x1a0
    ff84:	str	wzr, [sp, #44]
    ff88:	bl	fbf0 <PyFloat_FromString@plt+0x90c0>
    ff8c:	mov	x19, x0
    ff90:	cbz	x0, ffc0 <PyFloat_FromString@plt+0x9490>
    ff94:	add	x1, x20, #0x10
    ff98:	add	x0, x0, #0x18
    ff9c:	add	x2, sp, #0x2c
    ffa0:	bl	19f98 <PyInit__decimal@@Base+0x9010>
    ffa4:	ldr	w1, [sp, #44]
    ffa8:	mov	x0, x20
    ffac:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
    ffb0:	cbz	w0, ffc0 <PyFloat_FromString@plt+0x9490>
    ffb4:	mov	x0, x19
    ffb8:	mov	x19, #0x0                   	// #0
    ffbc:	bl	790c <PyFloat_FromString@plt+0xddc>
    ffc0:	mov	x0, x19
    ffc4:	ldp	x19, x20, [sp, #16]
    ffc8:	ldp	x29, x30, [sp], #48
    ffcc:	ret
    ffd0:	mov	x2, x0
    ffd4:	mov	x0, x1
    ffd8:	mov	x1, x2
    ffdc:	b	ff60 <PyFloat_FromString@plt+0x9430>
    ffe0:	stp	x29, x30, [sp, #-128]!
    ffe4:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
    ffe8:	add	x3, x3, #0x9b0
    ffec:	mov	x29, sp
    fff0:	stp	x19, x20, [sp, #16]
    fff4:	adrp	x20, 42000 <PyInit__decimal@@Base+0x31078>
    fff8:	mov	x19, x0
    fffc:	ldr	x20, [x20, #4008]
   10000:	mov	x0, x1
   10004:	add	x5, sp, #0x48
   10008:	mov	x1, x2
   1000c:	add	x4, sp, #0x40
   10010:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
   10014:	add	x3, x3, #0x4f0
   10018:	add	x2, x2, #0xdd3
   1001c:	stp	x21, x22, [sp, #32]
   10020:	stp	xzr, x20, [sp, #64]
   10024:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
   10028:	cbnz	w0, 10034 <PyFloat_FromString@plt+0x9504>
   1002c:	mov	x19, #0x0                   	// #0
   10030:	b	1012c <PyFloat_FromString@plt+0x95fc>
   10034:	ldr	x0, [sp, #72]
   10038:	cmp	x0, x20
   1003c:	b.ne	100a8 <PyFloat_FromString@plt+0x9578>  // b.any
   10040:	bl	7924 <PyFloat_FromString@plt+0xdf4>
   10044:	str	x0, [sp, #72]
   10048:	cbz	x0, 1002c <PyFloat_FromString@plt+0x94fc>
   1004c:	bl	790c <PyFloat_FromString@plt+0xddc>
   10050:	ldp	x20, x22, [sp, #64]
   10054:	cbnz	x20, 100e0 <PyFloat_FromString@plt+0x95b0>
   10058:	mov	x0, x19
   1005c:	str	wzr, [sp, #60]
   10060:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
   10064:	mov	x19, x0
   10068:	cbz	x0, 1012c <PyFloat_FromString@plt+0x95fc>
   1006c:	add	x20, sp, #0x50
   10070:	mov	x0, x20
   10074:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   10078:	mov	x1, #0x0                   	// #0
   1007c:	add	x3, sp, #0x3c
   10080:	mov	x2, x20
   10084:	add	x0, x19, #0x18
   10088:	bl	1a134 <PyInit__decimal@@Base+0x91ac>
   1008c:	ldr	w1, [sp, #60]
   10090:	mov	x0, x22
   10094:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
   10098:	cbz	w0, 1012c <PyFloat_FromString@plt+0x95fc>
   1009c:	mov	x0, x19
   100a0:	bl	790c <PyFloat_FromString@plt+0xddc>
   100a4:	b	1002c <PyFloat_FromString@plt+0x94fc>
   100a8:	ldr	x0, [x0, #8]
   100ac:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
   100b0:	add	x1, x1, #0x330
   100b4:	cmp	x0, x1
   100b8:	b.eq	10050 <PyFloat_FromString@plt+0x9520>  // b.none
   100bc:	bl	6a60 <PyType_IsSubtype@plt>
   100c0:	cbnz	w0, 10050 <PyFloat_FromString@plt+0x9520>
   100c4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   100c8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   100cc:	add	x1, x1, #0x889
   100d0:	ldr	x0, [x0, #3936]
   100d4:	ldr	x0, [x0]
   100d8:	bl	66e0 <PyErr_SetString@plt>
   100dc:	b	1002c <PyFloat_FromString@plt+0x94fc>
   100e0:	ldr	x0, [x20, #8]
   100e4:	adrp	x2, 43000 <PyInit__decimal@@Base+0x32078>
   100e8:	add	x1, x2, #0x330
   100ec:	mov	x21, x2
   100f0:	add	x1, x1, #0x1a0
   100f4:	cmp	x0, x1
   100f8:	b.ne	10140 <PyFloat_FromString@plt+0x9610>  // b.any
   100fc:	add	x2, x21, #0x330
   10100:	str	wzr, [sp, #80]
   10104:	add	x2, x2, #0x1a0
   10108:	cmp	x19, x2
   1010c:	b.ne	1018c <PyFloat_FromString@plt+0x965c>  // b.any
   10110:	ldr	x0, [x20, #8]
   10114:	cmp	x0, x19
   10118:	b.ne	1018c <PyFloat_FromString@plt+0x965c>  // b.any
   1011c:	ldr	x0, [x20]
   10120:	mov	x19, x20
   10124:	add	x0, x0, #0x1
   10128:	str	x0, [x20]
   1012c:	mov	x0, x19
   10130:	ldp	x19, x20, [sp, #16]
   10134:	ldp	x21, x22, [sp, #32]
   10138:	ldp	x29, x30, [sp], #128
   1013c:	ret
   10140:	bl	6a60 <PyType_IsSubtype@plt>
   10144:	cbnz	w0, 100fc <PyFloat_FromString@plt+0x95cc>
   10148:	ldr	x0, [x20, #8]
   1014c:	ldr	x1, [x0, #168]
   10150:	tbz	w1, #28, 101b4 <PyFloat_FromString@plt+0x9684>
   10154:	mov	x0, x20
   10158:	mov	w2, #0x1                   	// #1
   1015c:	mov	w1, w2
   10160:	bl	6f94 <PyFloat_FromString@plt+0x464>
   10164:	mov	x20, x0
   10168:	cbz	x20, 1002c <PyFloat_FromString@plt+0x94fc>
   1016c:	mov	x2, x22
   10170:	mov	x1, x20
   10174:	mov	x0, x19
   10178:	bl	9de0 <PyFloat_FromString@plt+0x32b0>
   1017c:	mov	x19, x0
   10180:	mov	x0, x20
   10184:	bl	65f0 <PyMem_Free@plt>
   10188:	b	1012c <PyFloat_FromString@plt+0x95fc>
   1018c:	mov	x0, x19
   10190:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
   10194:	mov	x19, x0
   10198:	cbz	x0, 1012c <PyFloat_FromString@plt+0x95fc>
   1019c:	add	x1, x20, #0x18
   101a0:	add	x2, sp, #0x50
   101a4:	add	x0, x0, #0x18
   101a8:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   101ac:	ldr	w1, [sp, #80]
   101b0:	b	10090 <PyFloat_FromString@plt+0x9560>
   101b4:	tbz	w1, #24, 101d0 <PyFloat_FromString@plt+0x96a0>
   101b8:	mov	x2, x22
   101bc:	mov	x1, x20
   101c0:	mov	x0, x19
   101c4:	bl	abb8 <PyFloat_FromString@plt+0x4088>
   101c8:	mov	x19, x0
   101cc:	b	1012c <PyFloat_FromString@plt+0x95fc>
   101d0:	tst	x1, #0x6000000
   101d4:	b.eq	10210 <PyFloat_FromString@plt+0x96e0>  // b.none
   101d8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   101dc:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
   101e0:	add	x2, x2, #0xe19
   101e4:	ldr	x0, [x0, #3936]
   101e8:	ldr	x1, [x0]
   101ec:	mov	x0, x20
   101f0:	bl	7150 <PyFloat_FromString@plt+0x620>
   101f4:	mov	x21, x0
   101f8:	cbz	x0, 1002c <PyFloat_FromString@plt+0x94fc>
   101fc:	bl	7d00 <PyFloat_FromString@plt+0x11d0>
   10200:	mov	x20, x0
   10204:	mov	x0, x21
   10208:	bl	790c <PyFloat_FromString@plt+0xddc>
   1020c:	b	10168 <PyFloat_FromString@plt+0x9638>
   10210:	adrp	x1, 42000 <PyInit__decimal@@Base+0x31078>
   10214:	ldr	x1, [x1, #3864]
   10218:	cmp	x0, x1
   1021c:	b.ne	10244 <PyFloat_FromString@plt+0x9714>  // b.any
   10220:	mov	x0, x22
   10224:	mov	w1, #0x400                 	// #1024
   10228:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
   1022c:	cbnz	w0, 1002c <PyFloat_FromString@plt+0x94fc>
   10230:	mov	x2, x22
   10234:	mov	x1, x20
   10238:	mov	x0, x19
   1023c:	bl	fbf0 <PyFloat_FromString@plt+0x90c0>
   10240:	b	101c8 <PyFloat_FromString@plt+0x9698>
   10244:	bl	6a60 <PyType_IsSubtype@plt>
   10248:	cbnz	w0, 10220 <PyFloat_FromString@plt+0x96f0>
   1024c:	ldr	x0, [x20, #8]
   10250:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   10254:	add	x1, x1, #0xd99
   10258:	ldr	x2, [x0, #24]
   1025c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   10260:	ldr	x0, [x0, #3936]
   10264:	ldr	x0, [x0]
   10268:	bl	6ab0 <PyErr_Format@plt>
   1026c:	b	1002c <PyFloat_FromString@plt+0x94fc>
   10270:	stp	x29, x30, [sp, #-176]!
   10274:	mov	x29, sp
   10278:	stp	x19, x20, [sp, #16]
   1027c:	stp	x21, x22, [sp, #32]
   10280:	mov	x21, x1
   10284:	stp	x23, x24, [sp, #48]
   10288:	mov	w23, w2
   1028c:	stp	x25, x26, [sp, #64]
   10290:	mov	x25, x0
   10294:	str	x27, [sp, #80]
   10298:	stp	d8, d9, [sp, #96]
   1029c:	str	wzr, [sp, #120]
   102a0:	bl	7924 <PyFloat_FromString@plt+0xdf4>
   102a4:	cbnz	x0, 102b0 <PyFloat_FromString@plt+0x9780>
   102a8:	mov	x0, #0x0                   	// #0
   102ac:	b	105b0 <PyFloat_FromString@plt+0x9a80>
   102b0:	mov	x22, x0
   102b4:	bl	790c <PyFloat_FromString@plt+0xddc>
   102b8:	ldr	x0, [x21, #8]
   102bc:	adrp	x20, 43000 <PyInit__decimal@@Base+0x32078>
   102c0:	add	x19, x20, #0x330
   102c4:	add	x19, x19, #0x1a0
   102c8:	cmp	x0, x19
   102cc:	b.ne	102f8 <PyFloat_FromString@plt+0x97c8>  // b.any
   102d0:	ldr	x0, [x21]
   102d4:	mov	x19, x21
   102d8:	add	x0, x0, #0x1
   102dc:	str	x0, [x21]
   102e0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   102e4:	ldr	x0, [x0, #3912]
   102e8:	cmp	x19, x0
   102ec:	b.eq	105a8 <PyFloat_FromString@plt+0x9a78>  // b.none
   102f0:	mov	x21, x25
   102f4:	b	105f0 <PyFloat_FromString@plt+0x9ac0>
   102f8:	mov	x1, x19
   102fc:	bl	6a60 <PyType_IsSubtype@plt>
   10300:	cbnz	w0, 102d0 <PyFloat_FromString@plt+0x97a0>
   10304:	ldr	x0, [x21, #8]
   10308:	ldr	x1, [x0, #168]
   1030c:	tbz	w1, #24, 1032c <PyFloat_FromString@plt+0x97fc>
   10310:	mov	x2, x22
   10314:	mov	x1, x21
   10318:	mov	x0, x19
   1031c:	bl	abb8 <PyFloat_FromString@plt+0x4088>
   10320:	mov	x19, x0
   10324:	cbz	x19, 102a8 <PyFloat_FromString@plt+0x9778>
   10328:	b	102e0 <PyFloat_FromString@plt+0x97b0>
   1032c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x31078>
   10330:	ldr	x1, [x1, #3864]
   10334:	cmp	x0, x1
   10338:	b.ne	1036c <PyFloat_FromString@plt+0x983c>  // b.any
   1033c:	sub	w0, w23, #0x2
   10340:	cmp	w0, #0x1
   10344:	b.hi	10400 <PyFloat_FromString@plt+0x98d0>  // b.pmore
   10348:	ldr	w0, [x22, #44]
   1034c:	mov	x2, x22
   10350:	mov	x1, x21
   10354:	orr	w0, w0, #0x400
   10358:	str	w0, [x22, #44]
   1035c:	add	x0, x20, #0x330
   10360:	add	x0, x0, #0x1a0
   10364:	bl	fbf0 <PyFloat_FromString@plt+0x90c0>
   10368:	b	10320 <PyFloat_FromString@plt+0x97f0>
   1036c:	bl	6a60 <PyType_IsSubtype@plt>
   10370:	cbnz	w0, 1033c <PyFloat_FromString@plt+0x980c>
   10374:	adrp	x1, 42000 <PyInit__decimal@@Base+0x31078>
   10378:	ldr	x0, [x21, #8]
   1037c:	ldr	x1, [x1, #3952]
   10380:	cmp	x0, x1
   10384:	b.ne	10414 <PyFloat_FromString@plt+0x98e4>  // b.any
   10388:	sub	w0, w23, #0x2
   1038c:	cmp	w0, #0x1
   10390:	b.hi	1041c <PyFloat_FromString@plt+0x98ec>  // b.pmore
   10394:	mov	x0, x21
   10398:	bl	6a90 <PyComplex_AsCComplex@plt>
   1039c:	fmov	d8, d0
   103a0:	fmov	d0, #-1.000000000000000000e+00
   103a4:	fmov	d9, d1
   103a8:	fcmp	d8, d0
   103ac:	b.ne	103b8 <PyFloat_FromString@plt+0x9888>  // b.any
   103b0:	bl	6880 <PyErr_Occurred@plt>
   103b4:	cbnz	x0, 102a8 <PyFloat_FromString@plt+0x9778>
   103b8:	fcmp	d9, #0.0
   103bc:	b.ne	104ec <PyFloat_FromString@plt+0x99bc>  // b.any
   103c0:	fmov	d0, d8
   103c4:	bl	6750 <PyFloat_FromDouble@plt>
   103c8:	mov	x21, x0
   103cc:	cbz	x0, 102a8 <PyFloat_FromString@plt+0x9778>
   103d0:	mov	x1, x0
   103d4:	ldr	w0, [x22, #44]
   103d8:	mov	x2, x22
   103dc:	orr	w0, w0, #0x400
   103e0:	str	w0, [x22, #44]
   103e4:	add	x0, x20, #0x330
   103e8:	add	x0, x0, #0x1a0
   103ec:	bl	fbf0 <PyFloat_FromString@plt+0x90c0>
   103f0:	mov	x19, x0
   103f4:	mov	x0, x21
   103f8:	bl	790c <PyFloat_FromString@plt+0xddc>
   103fc:	b	10324 <PyFloat_FromString@plt+0x97f4>
   10400:	mov	x0, x22
   10404:	mov	w1, #0x400                 	// #1024
   10408:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
   1040c:	cbnz	w0, 102a8 <PyFloat_FromString@plt+0x9778>
   10410:	b	10348 <PyFloat_FromString@plt+0x9818>
   10414:	bl	6a60 <PyType_IsSubtype@plt>
   10418:	cbnz	w0, 10388 <PyFloat_FromString@plt+0x9858>
   1041c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   10420:	ldr	x1, [x0, #1912]
   10424:	mov	x0, x21
   10428:	bl	66f0 <PyObject_IsInstance@plt>
   1042c:	cmp	w0, #0x0
   10430:	b.lt	102a8 <PyFloat_FromString@plt+0x9778>  // b.tstop
   10434:	b.eq	105d0 <PyFloat_FromString@plt+0x9aa0>  // b.none
   10438:	mov	x0, x21
   1043c:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   10440:	add	x1, x1, #0xe3a
   10444:	bl	6610 <PyObject_GetAttrString@plt>
   10448:	mov	x24, x0
   1044c:	cbz	x0, 102a8 <PyFloat_FromString@plt+0x9778>
   10450:	mov	x1, x0
   10454:	add	x20, x20, #0x330
   10458:	mov	x2, x22
   1045c:	add	x20, x20, #0x1a0
   10460:	mov	x0, x20
   10464:	bl	abb8 <PyFloat_FromString@plt+0x4088>
   10468:	mov	x19, x0
   1046c:	mov	x0, x24
   10470:	bl	790c <PyFloat_FromString@plt+0xddc>
   10474:	cbz	x19, 102a8 <PyFloat_FromString@plt+0x9778>
   10478:	add	x24, x25, #0x18
   1047c:	mov	x0, x24
   10480:	bl	179d8 <PyInit__decimal@@Base+0x6a50>
   10484:	cbnz	w0, 102e0 <PyFloat_FromString@plt+0x97b0>
   10488:	mov	x0, x21
   1048c:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   10490:	add	x1, x1, #0xe44
   10494:	str	wzr, [sp, #124]
   10498:	bl	6610 <PyObject_GetAttrString@plt>
   1049c:	mov	x21, x0
   104a0:	cbz	x0, 104e0 <PyFloat_FromString@plt+0x99b0>
   104a4:	mov	x1, x0
   104a8:	mov	x2, x22
   104ac:	mov	x0, x20
   104b0:	bl	abb8 <PyFloat_FromString@plt+0x4088>
   104b4:	mov	x26, x0
   104b8:	mov	x0, x21
   104bc:	bl	790c <PyFloat_FromString@plt+0xddc>
   104c0:	cbz	x26, 104e0 <PyFloat_FromString@plt+0x99b0>
   104c4:	mov	x0, x24
   104c8:	bl	192b0 <PyInit__decimal@@Base+0x8328>
   104cc:	mov	x24, x0
   104d0:	cbnz	x0, 10508 <PyFloat_FromString@plt+0x99d8>
   104d4:	mov	x0, x26
   104d8:	bl	790c <PyFloat_FromString@plt+0xddc>
   104dc:	bl	6670 <PyErr_NoMemory@plt>
   104e0:	mov	x0, x19
   104e4:	bl	790c <PyFloat_FromString@plt+0xddc>
   104e8:	b	102a8 <PyFloat_FromString@plt+0x9778>
   104ec:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   104f0:	ldr	x0, [x0, #3912]
   104f4:	mov	x19, x0
   104f8:	ldr	x1, [x0]
   104fc:	add	x1, x1, #0x1
   10500:	str	x1, [x0]
   10504:	b	102e0 <PyFloat_FromString@plt+0x97b0>
   10508:	mov	x0, x20
   1050c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
   10510:	mov	x21, x0
   10514:	cbnz	x0, 1052c <PyFloat_FromString@plt+0x99fc>
   10518:	mov	x0, x26
   1051c:	bl	790c <PyFloat_FromString@plt+0xddc>
   10520:	mov	x0, x24
   10524:	bl	17b68 <PyInit__decimal@@Base+0x6be0>
   10528:	b	104e0 <PyFloat_FromString@plt+0x99b0>
   1052c:	add	x20, sp, #0x80
   10530:	mov	x0, x20
   10534:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   10538:	ldr	x27, [x24, #8]
   1053c:	str	xzr, [x24, #8]
   10540:	add	x4, sp, #0x7c
   10544:	mov	x3, x20
   10548:	add	x2, x26, #0x18
   1054c:	mov	x1, x24
   10550:	add	x0, x21, #0x18
   10554:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
   10558:	str	x27, [x21, #32]
   1055c:	mov	x0, x26
   10560:	bl	790c <PyFloat_FromString@plt+0xddc>
   10564:	mov	x0, x24
   10568:	bl	17b68 <PyInit__decimal@@Base+0x6be0>
   1056c:	ldr	w0, [sp, #124]
   10570:	cbz	w0, 10598 <PyFloat_FromString@plt+0x9a68>
   10574:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   10578:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   1057c:	add	x1, x1, #0xe50
   10580:	ldr	x0, [x0, #3928]
   10584:	ldr	x0, [x0]
   10588:	bl	66e0 <PyErr_SetString@plt>
   1058c:	mov	x0, x21
   10590:	bl	790c <PyFloat_FromString@plt+0xddc>
   10594:	b	104e0 <PyFloat_FromString@plt+0x99b0>
   10598:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   1059c:	ldr	x0, [x0, #3912]
   105a0:	cmp	x19, x0
   105a4:	b.ne	105e8 <PyFloat_FromString@plt+0x9ab8>  // b.any
   105a8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   105ac:	ldr	x0, [x0, #3912]
   105b0:	ldp	x19, x20, [sp, #16]
   105b4:	ldp	x21, x22, [sp, #32]
   105b8:	ldp	x23, x24, [sp, #48]
   105bc:	ldp	x25, x26, [sp, #64]
   105c0:	ldr	x27, [sp, #80]
   105c4:	ldp	d8, d9, [sp, #96]
   105c8:	ldp	x29, x30, [sp], #176
   105cc:	ret
   105d0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   105d4:	ldr	x0, [x0, #3912]
   105d8:	ldr	x1, [x0]
   105dc:	add	x1, x1, #0x1
   105e0:	str	x1, [x0]
   105e4:	b	105b0 <PyFloat_FromString@plt+0x9a80>
   105e8:	cmp	x25, x21
   105ec:	b.ne	105fc <PyFloat_FromString@plt+0x9acc>  // b.any
   105f0:	ldr	x0, [x25]
   105f4:	add	x0, x0, #0x1
   105f8:	str	x0, [x25]
   105fc:	add	x20, x21, #0x18
   10600:	add	x26, x19, #0x18
   10604:	mov	x0, x20
   10608:	bl	179cc <PyInit__decimal@@Base+0x6a44>
   1060c:	mov	w24, w0
   10610:	mov	x0, x26
   10614:	bl	179cc <PyInit__decimal@@Base+0x6a44>
   10618:	mov	w25, w0
   1061c:	add	x2, sp, #0x78
   10620:	mov	x1, x26
   10624:	mov	x0, x20
   10628:	bl	193c0 <PyInit__decimal@@Base+0x8438>
   1062c:	mov	w20, w0
   10630:	mov	x0, x21
   10634:	bl	790c <PyFloat_FromString@plt+0xddc>
   10638:	mov	x0, x19
   1063c:	bl	790c <PyFloat_FromString@plt+0xddc>
   10640:	mov	w0, #0x7fffffff            	// #2147483647
   10644:	cmp	w20, w0
   10648:	b.ne	1068c <PyFloat_FromString@plt+0x9b5c>  // b.any
   1064c:	orr	w24, w24, w25
   10650:	cbnz	w24, 10670 <PyFloat_FromString@plt+0x9b40>
   10654:	sub	w0, w23, #0x2
   10658:	cmp	w0, #0x1
   1065c:	b.hi	10670 <PyFloat_FromString@plt+0x9b40>  // b.pmore
   10660:	cmp	w23, #0x3
   10664:	b.ne	10684 <PyFloat_FromString@plt+0x9b54>  // b.any
   10668:	bl	6c14 <PyFloat_FromString@plt+0xe4>
   1066c:	b	105b0 <PyFloat_FromString@plt+0x9a80>
   10670:	ldr	w1, [sp, #120]
   10674:	mov	x0, x22
   10678:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
   1067c:	cbz	w0, 10660 <PyFloat_FromString@plt+0x9b30>
   10680:	b	102a8 <PyFloat_FromString@plt+0x9778>
   10684:	bl	6c2c <PyFloat_FromString@plt+0xfc>
   10688:	b	105b0 <PyFloat_FromString@plt+0x9a80>
   1068c:	cmp	w23, #0x5
   10690:	b.hi	106c0 <PyFloat_FromString@plt+0x9b90>  // b.pmore
   10694:	adrp	x0, 25000 <PyInit__decimal@@Base+0x14078>
   10698:	add	x0, x0, #0x5e0
   1069c:	ldrb	w0, [x0, w23, uxtw]
   106a0:	adr	x1, 106ac <PyFloat_FromString@plt+0x9b7c>
   106a4:	add	x0, x1, w0, sxtb #2
   106a8:	br	x0
   106ac:	cmp	w20, #0x0
   106b0:	cset	w20, eq  // eq = none
   106b4:	b	106c0 <PyFloat_FromString@plt+0x9b90>
   106b8:	cmp	w20, #0x0
   106bc:	cset	w20, ne  // ne = any
   106c0:	sxtw	x0, w20
   106c4:	bl	67f0 <PyBool_FromLong@plt>
   106c8:	b	105b0 <PyFloat_FromString@plt+0x9a80>
   106cc:	cmp	w20, #0x0
   106d0:	cset	w20, le
   106d4:	b	106c0 <PyFloat_FromString@plt+0x9b90>
   106d8:	mvn	w20, w20
   106dc:	lsr	w20, w20, #31
   106e0:	b	106c0 <PyFloat_FromString@plt+0x9b90>
   106e4:	cmn	w20, #0x1
   106e8:	b	106b0 <PyFloat_FromString@plt+0x9b80>
   106ec:	cmp	w20, #0x1
   106f0:	b	106b0 <PyFloat_FromString@plt+0x9b80>
   106f4:	stp	x29, x30, [sp, #-64]!
   106f8:	mov	x29, sp
   106fc:	add	x2, sp, #0x38
   10700:	stp	x19, x20, [sp, #16]
   10704:	mov	x20, x0
   10708:	mov	x0, x1
   1070c:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   10710:	add	x1, x1, #0xdca
   10714:	stp	x21, x22, [sp, #32]
   10718:	str	xzr, [sp, #56]
   1071c:	bl	6980 <PyArg_ParseTuple@plt>
   10720:	cbnz	w0, 1072c <PyFloat_FromString@plt+0x9bfc>
   10724:	mov	x19, #0x0                   	// #0
   10728:	b	10848 <PyFloat_FromString@plt+0x9d18>
   1072c:	ldr	x19, [sp, #56]
   10730:	adrp	x21, 43000 <PyInit__decimal@@Base+0x32078>
   10734:	cbnz	x19, 10780 <PyFloat_FromString@plt+0x9c50>
   10738:	add	x0, x21, #0x330
   1073c:	str	wzr, [sp, #52]
   10740:	add	x0, x0, #0x1a0
   10744:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
   10748:	mov	x19, x0
   1074c:	cbz	x0, 10848 <PyFloat_FromString@plt+0x9d18>
   10750:	add	x3, sp, #0x34
   10754:	add	x2, x20, #0x10
   10758:	add	x0, x0, #0x18
   1075c:	mov	x1, #0x0                   	// #0
   10760:	bl	1a134 <PyInit__decimal@@Base+0x91ac>
   10764:	ldr	w1, [sp, #52]
   10768:	mov	x0, x20
   1076c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
   10770:	cbz	w0, 10848 <PyFloat_FromString@plt+0x9d18>
   10774:	mov	x0, x19
   10778:	bl	790c <PyFloat_FromString@plt+0xddc>
   1077c:	b	10724 <PyFloat_FromString@plt+0x9bf4>
   10780:	ldr	x0, [x19, #8]
   10784:	add	x22, x21, #0x330
   10788:	add	x22, x22, #0x1a0
   1078c:	cmp	x0, x22
   10790:	b.ne	107b4 <PyFloat_FromString@plt+0x9c84>  // b.any
   10794:	add	x0, x19, #0x18
   10798:	bl	1798c <PyInit__decimal@@Base+0x6a04>
   1079c:	cbnz	w0, 107fc <PyFloat_FromString@plt+0x9ccc>
   107a0:	mov	x1, x20
   107a4:	mov	x0, x19
   107a8:	bl	9d38 <PyFloat_FromString@plt+0x3208>
   107ac:	mov	x19, x0
   107b0:	b	10848 <PyFloat_FromString@plt+0x9d18>
   107b4:	mov	x1, x22
   107b8:	bl	6a60 <PyType_IsSubtype@plt>
   107bc:	cbnz	w0, 10794 <PyFloat_FromString@plt+0x9c64>
   107c0:	ldr	x0, [x19, #8]
   107c4:	ldr	x1, [x0, #168]
   107c8:	tbz	w1, #28, 1085c <PyFloat_FromString@plt+0x9d2c>
   107cc:	mov	x0, x19
   107d0:	mov	w2, #0x0                   	// #0
   107d4:	mov	w1, #0x0                   	// #0
   107d8:	bl	6f94 <PyFloat_FromString@plt+0x464>
   107dc:	mov	x21, x0
   107e0:	cbz	x0, 10724 <PyFloat_FromString@plt+0x9bf4>
   107e4:	mov	x1, x20
   107e8:	bl	aa4c <PyFloat_FromString@plt+0x3f1c>
   107ec:	mov	x19, x0
   107f0:	mov	x0, x21
   107f4:	bl	65f0 <PyMem_Free@plt>
   107f8:	b	10848 <PyFloat_FromString@plt+0x9d18>
   107fc:	ldr	x0, [x20, #16]
   10800:	ldrsw	x1, [x20, #56]
   10804:	sub	x0, x0, x1
   10808:	ldr	x1, [x19, #40]
   1080c:	cmp	x1, x0
   10810:	b.le	107a0 <PyFloat_FromString@plt+0x9c70>
   10814:	mov	x0, x20
   10818:	mov	w1, #0x2                   	// #2
   1081c:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
   10820:	cbnz	w0, 10724 <PyFloat_FromString@plt+0x9bf4>
   10824:	add	x0, x21, #0x330
   10828:	add	x0, x0, #0x1a0
   1082c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
   10830:	mov	x19, x0
   10834:	cbz	x0, 10848 <PyFloat_FromString@plt+0x9d18>
   10838:	add	x0, x0, #0x18
   1083c:	mov	w2, #0x4                   	// #4
   10840:	mov	w1, #0x0                   	// #0
   10844:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   10848:	mov	x0, x19
   1084c:	ldp	x19, x20, [sp, #16]
   10850:	ldp	x21, x22, [sp, #32]
   10854:	ldp	x29, x30, [sp], #64
   10858:	ret
   1085c:	tbz	w1, #24, 10884 <PyFloat_FromString@plt+0x9d54>
   10860:	mov	x1, x19
   10864:	add	x3, sp, #0x34
   10868:	add	x2, x20, #0x10
   1086c:	mov	x0, x22
   10870:	str	wzr, [sp, #52]
   10874:	bl	aac4 <PyFloat_FromString@plt+0x3f94>
   10878:	mov	x19, x0
   1087c:	cbnz	x0, 10764 <PyFloat_FromString@plt+0x9c34>
   10880:	b	10848 <PyFloat_FromString@plt+0x9d18>
   10884:	tst	x1, #0x6000000
   10888:	b.eq	108d0 <PyFloat_FromString@plt+0x9da0>  // b.none
   1088c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   10890:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
   10894:	add	x2, x2, #0xe19
   10898:	ldr	x0, [x0, #3936]
   1089c:	ldr	x1, [x0]
   108a0:	mov	x0, x19
   108a4:	bl	7150 <PyFloat_FromString@plt+0x620>
   108a8:	mov	x19, x0
   108ac:	cbz	x0, 10724 <PyFloat_FromString@plt+0x9bf4>
   108b0:	bl	7d00 <PyFloat_FromString@plt+0x11d0>
   108b4:	mov	x21, x0
   108b8:	mov	x0, x19
   108bc:	bl	790c <PyFloat_FromString@plt+0xddc>
   108c0:	cbz	x21, 10724 <PyFloat_FromString@plt+0x9bf4>
   108c4:	mov	x1, x20
   108c8:	mov	x0, x21
   108cc:	b	107e8 <PyFloat_FromString@plt+0x9cb8>
   108d0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x31078>
   108d4:	ldr	x1, [x1, #3864]
   108d8:	cmp	x0, x1
   108dc:	b.ne	10900 <PyFloat_FromString@plt+0x9dd0>  // b.any
   108e0:	mov	x0, x20
   108e4:	mov	w1, #0x400                 	// #1024
   108e8:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
   108ec:	cbnz	w0, 10724 <PyFloat_FromString@plt+0x9bf4>
   108f0:	mov	x1, x20
   108f4:	mov	x0, x19
   108f8:	bl	ff60 <PyFloat_FromString@plt+0x9430>
   108fc:	b	107ac <PyFloat_FromString@plt+0x9c7c>
   10900:	bl	6a60 <PyType_IsSubtype@plt>
   10904:	cbnz	w0, 108e0 <PyFloat_FromString@plt+0x9db0>
   10908:	ldr	x0, [x19, #8]
   1090c:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   10910:	add	x1, x1, #0xd99
   10914:	ldr	x2, [x0, #24]
   10918:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   1091c:	ldr	x0, [x0, #3936]
   10920:	ldr	x0, [x0]
   10924:	bl	6ab0 <PyErr_Format@plt>
   10928:	b	10724 <PyFloat_FromString@plt+0x9bf4>
   1092c:	sub	sp, sp, #0x90
   10930:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
   10934:	add	x3, x3, #0x9b0
   10938:	add	x7, sp, #0x68
   1093c:	add	x6, sp, #0x60
   10940:	add	x5, sp, #0x58
   10944:	stp	x29, x30, [sp, #32]
   10948:	add	x29, sp, #0x20
   1094c:	add	x4, sp, #0x50
   10950:	add	x3, x3, #0x508
   10954:	stp	x19, x20, [sp, #48]
   10958:	mov	x19, x0
   1095c:	mov	x0, x1
   10960:	mov	x1, x2
   10964:	add	x2, sp, #0x88
   10968:	str	x2, [sp, #24]
   1096c:	add	x2, sp, #0x80
   10970:	adrp	x20, 42000 <PyInit__decimal@@Base+0x31078>
   10974:	str	x2, [sp, #16]
   10978:	add	x2, sp, #0x78
   1097c:	str	x2, [sp, #8]
   10980:	add	x2, sp, #0x70
   10984:	str	x2, [sp]
   10988:	str	x21, [sp, #64]
   1098c:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
   10990:	ldr	x21, [x20, #4008]
   10994:	add	x2, x2, #0xe77
   10998:	stp	x21, x21, [sp, #80]
   1099c:	stp	x21, x21, [sp, #96]
   109a0:	stp	x21, x21, [sp, #112]
   109a4:	stp	x21, x21, [sp, #128]
   109a8:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
   109ac:	cbnz	w0, 109b8 <PyFloat_FromString@plt+0x9e88>
   109b0:	mov	w0, #0xffffffff            	// #-1
   109b4:	b	10a38 <PyFloat_FromString@plt+0x9f08>
   109b8:	ldr	x1, [sp, #80]
   109bc:	cmp	x1, x21
   109c0:	b.ne	10a4c <PyFloat_FromString@plt+0x9f1c>  // b.any
   109c4:	ldr	x0, [x20, #4008]
   109c8:	ldr	x1, [sp, #88]
   109cc:	cmp	x1, x0
   109d0:	b.ne	10a60 <PyFloat_FromString@plt+0x9f30>  // b.any
   109d4:	ldr	x0, [x20, #4008]
   109d8:	ldr	x1, [sp, #96]
   109dc:	cmp	x1, x0
   109e0:	b.ne	10a74 <PyFloat_FromString@plt+0x9f44>  // b.any
   109e4:	ldr	x0, [x20, #4008]
   109e8:	ldr	x1, [sp, #104]
   109ec:	cmp	x1, x0
   109f0:	b.ne	10a88 <PyFloat_FromString@plt+0x9f58>  // b.any
   109f4:	ldr	x0, [x20, #4008]
   109f8:	ldr	x1, [sp, #112]
   109fc:	cmp	x1, x0
   10a00:	b.ne	10a9c <PyFloat_FromString@plt+0x9f6c>  // b.any
   10a04:	ldr	x0, [x20, #4008]
   10a08:	ldr	x1, [sp, #120]
   10a0c:	cmp	x1, x0
   10a10:	b.ne	10ab0 <PyFloat_FromString@plt+0x9f80>  // b.any
   10a14:	ldr	x1, [x20, #4008]
   10a18:	ldr	x0, [sp, #136]
   10a1c:	cmp	x0, x1
   10a20:	b.ne	10ac4 <PyFloat_FromString@plt+0x9f94>  // b.any
   10a24:	ldr	x20, [x20, #4008]
   10a28:	ldr	x0, [sp, #128]
   10a2c:	cmp	x0, x20
   10a30:	b.ne	10b1c <PyFloat_FromString@plt+0x9fec>  // b.any
   10a34:	mov	w0, #0x0                   	// #0
   10a38:	ldp	x29, x30, [sp, #32]
   10a3c:	ldp	x19, x20, [sp, #48]
   10a40:	ldr	x21, [sp, #64]
   10a44:	add	sp, sp, #0x90
   10a48:	ret
   10a4c:	mov	x0, x19
   10a50:	mov	x2, #0x0                   	// #0
   10a54:	bl	9348 <PyFloat_FromString@plt+0x2818>
   10a58:	tbz	w0, #31, 109c4 <PyFloat_FromString@plt+0x9e94>
   10a5c:	b	109b0 <PyFloat_FromString@plt+0x9e80>
   10a60:	mov	x0, x19
   10a64:	mov	x2, #0x0                   	// #0
   10a68:	bl	93bc <PyFloat_FromString@plt+0x288c>
   10a6c:	tbz	w0, #31, 109d4 <PyFloat_FromString@plt+0x9ea4>
   10a70:	b	109b0 <PyFloat_FromString@plt+0x9e80>
   10a74:	mov	x0, x19
   10a78:	mov	x2, #0x0                   	// #0
   10a7c:	bl	941c <PyFloat_FromString@plt+0x28ec>
   10a80:	tbz	w0, #31, 109e4 <PyFloat_FromString@plt+0x9eb4>
   10a84:	b	109b0 <PyFloat_FromString@plt+0x9e80>
   10a88:	mov	x0, x19
   10a8c:	mov	x2, #0x0                   	// #0
   10a90:	bl	9490 <PyFloat_FromString@plt+0x2960>
   10a94:	tbz	w0, #31, 109f4 <PyFloat_FromString@plt+0x9ec4>
   10a98:	b	109b0 <PyFloat_FromString@plt+0x9e80>
   10a9c:	mov	x0, x19
   10aa0:	mov	x2, #0x0                   	// #0
   10aa4:	bl	92d8 <PyFloat_FromString@plt+0x27a8>
   10aa8:	tbz	w0, #31, 10a04 <PyFloat_FromString@plt+0x9ed4>
   10aac:	b	109b0 <PyFloat_FromString@plt+0x9e80>
   10ab0:	mov	x0, x19
   10ab4:	mov	x2, #0x0                   	// #0
   10ab8:	bl	7794 <PyFloat_FromString@plt+0xc64>
   10abc:	tbz	w0, #31, 10a14 <PyFloat_FromString@plt+0x9ee4>
   10ac0:	b	109b0 <PyFloat_FromString@plt+0x9e80>
   10ac4:	ldr	x1, [x0, #8]
   10ac8:	ldr	x1, [x1, #168]
   10acc:	tbz	w1, #25, 10b08 <PyFloat_FromString@plt+0x9fd8>
   10ad0:	bl	7480 <PyFloat_FromString@plt+0x950>
   10ad4:	mov	w1, w0
   10ad8:	tst	w0, #0x18000
   10adc:	b.ne	109b0 <PyFloat_FromString@plt+0x9e80>  // b.any
   10ae0:	add	x0, x19, #0x10
   10ae4:	bl	12aa0 <PyInit__decimal@@Base+0x1b18>
   10ae8:	cbnz	w0, 10a24 <PyFloat_FromString@plt+0x9ef4>
   10aec:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   10af0:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   10af4:	add	x1, x1, #0xe81
   10af8:	ldr	x0, [x0, #3920]
   10afc:	ldr	x0, [x0]
   10b00:	bl	66e0 <PyErr_SetString@plt>
   10b04:	b	109b0 <PyFloat_FromString@plt+0x9e80>
   10b08:	mov	x1, x0
   10b0c:	mov	x0, x19
   10b10:	bl	9504 <PyFloat_FromString@plt+0x29d4>
   10b14:	tbnz	w0, #31, 10a38 <PyFloat_FromString@plt+0x9f08>
   10b18:	b	10a24 <PyFloat_FromString@plt+0x9ef4>
   10b1c:	ldr	x1, [x0, #8]
   10b20:	ldr	x1, [x1, #168]
   10b24:	tbz	w1, #25, 10b64 <PyFloat_FromString@plt+0xa034>
   10b28:	bl	7480 <PyFloat_FromString@plt+0x950>
   10b2c:	mov	w1, w0
   10b30:	tst	w0, #0x18000
   10b34:	b.ne	10b5c <PyFloat_FromString@plt+0xa02c>  // b.any
   10b38:	add	x0, x19, #0x10
   10b3c:	bl	12ac0 <PyInit__decimal@@Base+0x1b38>
   10b40:	cbnz	w0, 10b7c <PyFloat_FromString@plt+0xa04c>
   10b44:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   10b48:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   10b4c:	add	x1, x1, #0xea9
   10b50:	ldr	x0, [x0, #3920]
   10b54:	ldr	x0, [x0]
   10b58:	bl	66e0 <PyErr_SetString@plt>
   10b5c:	mov	w0, #0xffffffff            	// #-1
   10b60:	b	10b70 <PyFloat_FromString@plt+0xa040>
   10b64:	mov	x1, x0
   10b68:	mov	x0, x19
   10b6c:	bl	9584 <PyFloat_FromString@plt+0x2a54>
   10b70:	cmp	w0, #0x0
   10b74:	csel	w0, w0, wzr, le
   10b78:	b	10a38 <PyFloat_FromString@plt+0x9f08>
   10b7c:	mov	w0, #0x0                   	// #0
   10b80:	b	10b70 <PyFloat_FromString@plt+0xa040>
   10b84:	sub	sp, sp, #0x150
   10b88:	mov	w1, #0x79                  	// #121
   10b8c:	stp	x29, x30, [sp, #16]
   10b90:	add	x29, sp, #0x10
   10b94:	stp	x19, x20, [sp, #32]
   10b98:	adrp	x20, 43000 <PyInit__decimal@@Base+0x32078>
   10b9c:	add	x20, x20, #0x9b0
   10ba0:	ldr	w2, [x0, #44]
   10ba4:	add	x20, x20, #0x550
   10ba8:	stp	x21, x22, [sp, #48]
   10bac:	add	x22, sp, #0x50
   10bb0:	add	x19, x0, #0x10
   10bb4:	mov	x21, x0
   10bb8:	mov	x3, x20
   10bbc:	mov	x0, x22
   10bc0:	str	x23, [sp, #64]
   10bc4:	bl	15abc <PyInit__decimal@@Base+0x4b34>
   10bc8:	cmp	w0, #0x78
   10bcc:	b.ls	10c04 <PyFloat_FromString@plt+0xa0d4>  // b.plast
   10bd0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   10bd4:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   10bd8:	add	x1, x1, #0xed2
   10bdc:	ldr	x0, [x0, #3920]
   10be0:	ldr	x0, [x0]
   10be4:	bl	66e0 <PyErr_SetString@plt>
   10be8:	mov	x0, #0x0                   	// #0
   10bec:	ldp	x29, x30, [sp, #16]
   10bf0:	ldp	x19, x20, [sp, #32]
   10bf4:	ldp	x21, x22, [sp, #48]
   10bf8:	ldr	x23, [sp, #64]
   10bfc:	add	sp, sp, #0x150
   10c00:	ret
   10c04:	ldr	w2, [x19, #24]
   10c08:	add	x23, sp, #0xd0
   10c0c:	mov	x3, x20
   10c10:	mov	x0, x23
   10c14:	mov	w1, #0x79                  	// #121
   10c18:	bl	15abc <PyInit__decimal@@Base+0x4b34>
   10c1c:	cmp	w0, #0x78
   10c20:	b.hi	10bd0 <PyFloat_FromString@plt+0xa0a0>  // b.pmore
   10c24:	ldrsw	x1, [x19, #36]
   10c28:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   10c2c:	ldr	w5, [x21, #80]
   10c30:	add	x0, x0, #0x558
   10c34:	str	x23, [sp]
   10c38:	mov	x7, x22
   10c3c:	ldp	x4, x3, [x19, #8]
   10c40:	ldr	w6, [x19, #40]
   10c44:	ldr	x2, [x0, x1, lsl #3]
   10c48:	adrp	x0, 24000 <PyInit__decimal@@Base+0x13078>
   10c4c:	ldr	x1, [x21, #16]
   10c50:	add	x0, x0, #0xef1
   10c54:	bl	6500 <PyUnicode_FromFormat@plt>
   10c58:	b	10bec <PyFloat_FromString@plt+0xa0bc>
   10c5c:	stp	x29, x30, [sp, #-32]!
   10c60:	mov	x29, sp
   10c64:	ldr	x0, [x1, #8]
   10c68:	str	x19, [sp, #16]
   10c6c:	mov	x19, x1
   10c70:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
   10c74:	add	x1, x1, #0x330
   10c78:	add	x1, x1, #0x1a0
   10c7c:	cmp	x0, x1
   10c80:	b.eq	10cb8 <PyFloat_FromString@plt+0xa188>  // b.none
   10c84:	bl	6a60 <PyType_IsSubtype@plt>
   10c88:	cbnz	w0, 10cb8 <PyFloat_FromString@plt+0xa188>
   10c8c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   10c90:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   10c94:	mov	x19, #0x0                   	// #0
   10c98:	add	x1, x1, #0x759
   10c9c:	ldr	x0, [x0, #3936]
   10ca0:	ldr	x0, [x0]
   10ca4:	bl	66e0 <PyErr_SetString@plt>
   10ca8:	mov	x0, x19
   10cac:	ldr	x19, [sp, #16]
   10cb0:	ldp	x29, x30, [sp], #32
   10cb4:	ret
   10cb8:	ldr	x0, [x19]
   10cbc:	add	x0, x0, #0x1
   10cc0:	str	x0, [x19]
   10cc4:	b	10ca8 <PyFloat_FromString@plt+0xa178>
   10cc8:	stp	x29, x30, [sp, #-128]!
   10ccc:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
   10cd0:	add	x3, x3, #0x9b0
   10cd4:	mov	x29, sp
   10cd8:	stp	x19, x20, [sp, #16]
   10cdc:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
   10ce0:	mov	x20, x0
   10ce4:	str	x21, [sp, #32]
   10ce8:	mov	x0, x1
   10cec:	ldr	x21, [x19, #4008]
   10cf0:	mov	x1, x2
   10cf4:	add	x5, sp, #0x48
   10cf8:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
   10cfc:	add	x4, sp, #0x40
   10d00:	add	x3, x3, #0x5c8
   10d04:	add	x2, x2, #0xdd3
   10d08:	str	wzr, [sp, #60]
   10d0c:	stp	x21, x21, [sp, #64]
   10d10:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
   10d14:	cbnz	w0, 10d30 <PyFloat_FromString@plt+0xa200>
   10d18:	mov	x19, #0x0                   	// #0
   10d1c:	mov	x0, x19
   10d20:	ldp	x19, x20, [sp, #16]
   10d24:	ldr	x21, [sp, #32]
   10d28:	ldp	x29, x30, [sp], #128
   10d2c:	ret
   10d30:	ldr	x0, [sp, #72]
   10d34:	cmp	x0, x21
   10d38:	b.ne	10da8 <PyFloat_FromString@plt+0xa278>  // b.any
   10d3c:	bl	7924 <PyFloat_FromString@plt+0xdf4>
   10d40:	str	x0, [sp, #72]
   10d44:	cbz	x0, 10d18 <PyFloat_FromString@plt+0xa1e8>
   10d48:	bl	790c <PyFloat_FromString@plt+0xddc>
   10d4c:	ldr	x1, [sp, #72]
   10d50:	add	x21, sp, #0x50
   10d54:	ldr	x19, [x19, #4008]
   10d58:	ldp	x2, x3, [x1, #16]
   10d5c:	stp	x2, x3, [sp, #80]
   10d60:	ldp	x2, x3, [x1, #32]
   10d64:	stp	x2, x3, [sp, #96]
   10d68:	ldp	x0, x1, [x1, #48]
   10d6c:	stp	x0, x1, [sp, #112]
   10d70:	ldr	x0, [sp, #64]
   10d74:	cmp	x0, x19
   10d78:	b.eq	10de0 <PyFloat_FromString@plt+0xa2b0>  // b.none
   10d7c:	bl	76ec <PyFloat_FromString@plt+0xbbc>
   10d80:	mov	w1, w0
   10d84:	tbnz	w0, #31, 10d18 <PyFloat_FromString@plt+0xa1e8>
   10d88:	mov	x0, x21
   10d8c:	bl	12a84 <PyInit__decimal@@Base+0x1afc>
   10d90:	cbnz	w0, 10de0 <PyFloat_FromString@plt+0xa2b0>
   10d94:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   10d98:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   10d9c:	add	x1, x1, #0xf4f
   10da0:	ldr	x0, [x0, #3920]
   10da4:	b	10dd4 <PyFloat_FromString@plt+0xa2a4>
   10da8:	ldr	x0, [x0, #8]
   10dac:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
   10db0:	add	x1, x1, #0x330
   10db4:	cmp	x0, x1
   10db8:	b.eq	10d4c <PyFloat_FromString@plt+0xa21c>  // b.none
   10dbc:	bl	6a60 <PyType_IsSubtype@plt>
   10dc0:	cbnz	w0, 10d4c <PyFloat_FromString@plt+0xa21c>
   10dc4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   10dc8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   10dcc:	add	x1, x1, #0x889
   10dd0:	ldr	x0, [x0, #3936]
   10dd4:	ldr	x0, [x0]
   10dd8:	bl	66e0 <PyErr_SetString@plt>
   10ddc:	b	10d18 <PyFloat_FromString@plt+0xa1e8>
   10de0:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
   10de4:	add	x0, x0, #0x330
   10de8:	add	x0, x0, #0x1a0
   10dec:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
   10df0:	mov	x19, x0
   10df4:	cbz	x0, 10d18 <PyFloat_FromString@plt+0xa1e8>
   10df8:	add	x1, x20, #0x18
   10dfc:	add	x0, x0, #0x18
   10e00:	add	x3, sp, #0x3c
   10e04:	mov	x2, x21
   10e08:	bl	1df34 <PyInit__decimal@@Base+0xcfac>
   10e0c:	ldr	w1, [sp, #60]
   10e10:	ldr	x0, [sp, #72]
   10e14:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
   10e18:	cbz	w0, 10d1c <PyFloat_FromString@plt+0xa1ec>
   10e1c:	mov	x0, x19
   10e20:	bl	790c <PyFloat_FromString@plt+0xddc>
   10e24:	b	10d18 <PyFloat_FromString@plt+0xa1e8>
   10e28:	stp	x29, x30, [sp, #-128]!
   10e2c:	adrp	x3, 43000 <PyInit__decimal@@Base+0x32078>
   10e30:	add	x3, x3, #0x9b0
   10e34:	mov	x29, sp
   10e38:	stp	x19, x20, [sp, #16]
   10e3c:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
   10e40:	mov	x20, x0
   10e44:	str	x21, [sp, #32]
   10e48:	mov	x0, x1
   10e4c:	ldr	x21, [x19, #4008]
   10e50:	mov	x1, x2
   10e54:	add	x5, sp, #0x48
   10e58:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
   10e5c:	add	x4, sp, #0x40
   10e60:	add	x3, x3, #0x5e0
   10e64:	add	x2, x2, #0xdd3
   10e68:	str	wzr, [sp, #60]
   10e6c:	stp	x21, x21, [sp, #64]
   10e70:	bl	65b0 <PyArg_ParseTupleAndKeywords@plt>
   10e74:	cbnz	w0, 10e90 <PyFloat_FromString@plt+0xa360>
   10e78:	mov	x19, #0x0                   	// #0
   10e7c:	mov	x0, x19
   10e80:	ldp	x19, x20, [sp, #16]
   10e84:	ldr	x21, [sp, #32]
   10e88:	ldp	x29, x30, [sp], #128
   10e8c:	ret
   10e90:	ldr	x0, [sp, #72]
   10e94:	cmp	x0, x21
   10e98:	b.ne	10f08 <PyFloat_FromString@plt+0xa3d8>  // b.any
   10e9c:	bl	7924 <PyFloat_FromString@plt+0xdf4>
   10ea0:	str	x0, [sp, #72]
   10ea4:	cbz	x0, 10e78 <PyFloat_FromString@plt+0xa348>
   10ea8:	bl	790c <PyFloat_FromString@plt+0xddc>
   10eac:	ldr	x1, [sp, #72]
   10eb0:	add	x21, sp, #0x50
   10eb4:	ldr	x19, [x19, #4008]
   10eb8:	ldp	x2, x3, [x1, #16]
   10ebc:	stp	x2, x3, [sp, #80]
   10ec0:	ldp	x2, x3, [x1, #32]
   10ec4:	stp	x2, x3, [sp, #96]
   10ec8:	ldp	x0, x1, [x1, #48]
   10ecc:	stp	x0, x1, [sp, #112]
   10ed0:	ldr	x0, [sp, #64]
   10ed4:	cmp	x0, x19
   10ed8:	b.eq	10f40 <PyFloat_FromString@plt+0xa410>  // b.none
   10edc:	bl	76ec <PyFloat_FromString@plt+0xbbc>
   10ee0:	mov	w1, w0
   10ee4:	tbnz	w0, #31, 10e78 <PyFloat_FromString@plt+0xa348>
   10ee8:	mov	x0, x21
   10eec:	bl	12a84 <PyInit__decimal@@Base+0x1afc>
   10ef0:	cbnz	w0, 10f40 <PyFloat_FromString@plt+0xa410>
   10ef4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   10ef8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   10efc:	add	x1, x1, #0xf77
   10f00:	ldr	x0, [x0, #3920]
   10f04:	b	10f34 <PyFloat_FromString@plt+0xa404>
   10f08:	ldr	x0, [x0, #8]
   10f0c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x32078>
   10f10:	add	x1, x1, #0x330
   10f14:	cmp	x0, x1
   10f18:	b.eq	10eac <PyFloat_FromString@plt+0xa37c>  // b.none
   10f1c:	bl	6a60 <PyType_IsSubtype@plt>
   10f20:	cbnz	w0, 10eac <PyFloat_FromString@plt+0xa37c>
   10f24:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   10f28:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   10f2c:	add	x1, x1, #0x889
   10f30:	ldr	x0, [x0, #3936]
   10f34:	ldr	x0, [x0]
   10f38:	bl	66e0 <PyErr_SetString@plt>
   10f3c:	b	10e78 <PyFloat_FromString@plt+0xa348>
   10f40:	adrp	x0, 43000 <PyInit__decimal@@Base+0x32078>
   10f44:	add	x0, x0, #0x330
   10f48:	add	x0, x0, #0x1a0
   10f4c:	bl	6d14 <PyFloat_FromString@plt+0x1e4>
   10f50:	mov	x19, x0
   10f54:	cbz	x0, 10e78 <PyFloat_FromString@plt+0xa348>
   10f58:	add	x1, x20, #0x18
   10f5c:	add	x0, x0, #0x18
   10f60:	add	x3, sp, #0x3c
   10f64:	mov	x2, x21
   10f68:	bl	1df4c <PyInit__decimal@@Base+0xcfc4>
   10f6c:	ldr	w1, [sp, #60]
   10f70:	ldr	x0, [sp, #72]
   10f74:	bl	96d0 <PyFloat_FromString@plt+0x2ba0>
   10f78:	cbz	w0, 10e7c <PyFloat_FromString@plt+0xa34c>
   10f7c:	mov	x0, x19
   10f80:	bl	790c <PyFloat_FromString@plt+0xddc>
   10f84:	b	10e78 <PyFloat_FromString@plt+0xa348>

0000000000010f88 <PyInit__decimal@@Base>:
   10f88:	stp	x29, x30, [sp, #-192]!
   10f8c:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
   10f90:	adrp	x0, 6000 <memcpy@plt-0x4f0>
   10f94:	mov	x29, sp
   10f98:	add	x0, x0, #0xc44
   10f9c:	str	x0, [x1, #1440]
   10fa0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   10fa4:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
   10fa8:	stp	x19, x20, [sp, #16]
   10fac:	adrp	x20, 45000 <PyInit__decimal@@Base+0x34078>
   10fb0:	ldr	x0, [x0, #4064]
   10fb4:	str	x0, [x1, #1696]
   10fb8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   10fbc:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
   10fc0:	add	x19, x20, #0x6d0
   10fc4:	stp	x21, x22, [sp, #32]
   10fc8:	ldr	x0, [x0, #3944]
   10fcc:	str	x0, [x1, #1712]
   10fd0:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
   10fd4:	adrp	x0, 15000 <PyInit__decimal@@Base+0x4078>
   10fd8:	add	x0, x0, #0xc7c
   10fdc:	stp	x23, x24, [sp, #48]
   10fe0:	str	x0, [x1, #1704]
   10fe4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   10fe8:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
   10fec:	stp	x25, x26, [sp, #64]
   10ff0:	ldr	x0, [x0, #3888]
   10ff4:	str	x0, [x1, #1720]
   10ff8:	mov	x0, #0x4                   	// #4
   10ffc:	stp	x27, x28, [sp, #80]
   11000:	bl	127b4 <PyInit__decimal@@Base+0x182c>
   11004:	mov	x1, #0x0                   	// #0
   11008:	adrp	x0, 24000 <PyInit__decimal@@Base+0x13078>
   1100c:	add	x0, x0, #0xf9f
   11010:	bl	6800 <PyContextVar_New@plt>
   11014:	str	x0, [x19, #80]
   11018:	cbnz	x0, 11030 <PyInit__decimal@@Base+0xa8>
   1101c:	mov	x21, #0x0                   	// #0
   11020:	mov	x28, #0x0                   	// #0
   11024:	mov	x27, #0x0                   	// #0
   11028:	mov	x19, #0x0                   	// #0
   1102c:	b	117dc <PyInit__decimal@@Base+0x854>
   11030:	adrp	x21, 42000 <PyInit__decimal@@Base+0x31078>
   11034:	ldr	x21, [x21, #4040]
   11038:	ldr	x0, [x21, #96]
   1103c:	ldr	x1, [x0, #16]
   11040:	str	x1, [x19, #128]
   11044:	ldr	x1, [x0, #232]
   11048:	str	x1, [x19, #136]
   1104c:	ldr	x0, [x0, #40]
   11050:	str	x0, [x19, #120]
   11054:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   11058:	ldr	x0, [x0, #3864]
   1105c:	ldr	x1, [x0, #96]
   11060:	ldr	x0, [x0, #232]
   11064:	ldr	x1, [x1, #64]
   11068:	str	x1, [x19, #144]
   1106c:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   11070:	add	x1, x1, #0xfaf
   11074:	bl	789c <PyFloat_FromString@plt+0xd6c>
   11078:	str	x0, [x19, #152]
   1107c:	cbz	x0, 1101c <PyInit__decimal@@Base+0x94>
   11080:	ldr	x0, [x21, #232]
   11084:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   11088:	add	x1, x1, #0xfc0
   1108c:	bl	789c <PyFloat_FromString@plt+0xd6c>
   11090:	str	x0, [x19, #160]
   11094:	cbz	x0, 1101c <PyInit__decimal@@Base+0x94>
   11098:	adrp	x24, 43000 <PyInit__decimal@@Base+0x32078>
   1109c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   110a0:	add	x19, x24, #0x330
   110a4:	ldr	x0, [x0, #4032]
   110a8:	add	x21, x19, #0x1a0
   110ac:	add	x22, x19, #0x340
   110b0:	add	x23, x19, #0x4e0
   110b4:	str	x0, [x19, #256]
   110b8:	str	x0, [x19, #672]
   110bc:	str	x0, [x19, #1088]
   110c0:	str	x0, [x19, #1504]
   110c4:	mov	x0, x21
   110c8:	bl	6760 <PyType_Ready@plt>
   110cc:	tbnz	w0, #31, 1101c <PyInit__decimal@@Base+0x94>
   110d0:	mov	x0, x19
   110d4:	bl	6760 <PyType_Ready@plt>
   110d8:	tbnz	w0, #31, 1101c <PyInit__decimal@@Base+0x94>
   110dc:	mov	x0, x23
   110e0:	bl	6760 <PyType_Ready@plt>
   110e4:	tbnz	w0, #31, 1101c <PyInit__decimal@@Base+0x94>
   110e8:	mov	x0, x22
   110ec:	bl	6760 <PyType_Ready@plt>
   110f0:	tbnz	w0, #31, 1101c <PyInit__decimal@@Base+0x94>
   110f4:	adrp	x23, 24000 <PyInit__decimal@@Base+0x13078>
   110f8:	add	x0, x23, #0xb29
   110fc:	bl	6a00 <PyUnicode_FromString@plt>
   11100:	mov	x28, x0
   11104:	cbz	x0, 1101c <PyInit__decimal@@Base+0x94>
   11108:	mov	x2, x0
   1110c:	adrp	x22, 24000 <PyInit__decimal@@Base+0x13078>
   11110:	ldr	x0, [x19, #680]
   11114:	add	x25, x22, #0xfcb
   11118:	mov	x1, x25
   1111c:	bl	6540 <PyDict_SetItemString@plt>
   11120:	tbnz	w0, #31, 118b8 <PyInit__decimal@@Base+0x930>
   11124:	ldr	x0, [x19, #264]
   11128:	mov	x2, x28
   1112c:	mov	x1, x25
   11130:	bl	6540 <PyDict_SetItemString@plt>
   11134:	tbnz	w0, #31, 118b8 <PyInit__decimal@@Base+0x930>
   11138:	mov	x0, x28
   1113c:	bl	790c <PyFloat_FromString@plt+0xddc>
   11140:	adrp	x0, 24000 <PyInit__decimal@@Base+0x13078>
   11144:	add	x0, x0, #0xfd6
   11148:	bl	68d0 <PyImport_ImportModule@plt>
   1114c:	mov	x19, x0
   11150:	cbz	x0, 1101c <PyInit__decimal@@Base+0x94>
   11154:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   11158:	add	x1, x1, #0xfde
   1115c:	bl	6610 <PyObject_GetAttrString@plt>
   11160:	mov	x21, x0
   11164:	cbz	x0, 118ec <PyInit__decimal@@Base+0x964>
   11168:	add	x3, x24, #0x330
   1116c:	adrp	x2, 24000 <PyInit__decimal@@Base+0x13078>
   11170:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   11174:	add	x3, x3, #0x1a0
   11178:	add	x2, x2, #0x9c7
   1117c:	add	x1, x1, #0xfe5
   11180:	bl	65e0 <PyObject_CallMethod@plt>
   11184:	cbz	x0, 118ec <PyInit__decimal@@Base+0x964>
   11188:	add	x25, x20, #0x6d0
   1118c:	bl	790c <PyFloat_FromString@plt+0xddc>
   11190:	mov	x0, x19
   11194:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   11198:	add	x1, x1, #0xfee
   1119c:	bl	6610 <PyObject_GetAttrString@plt>
   111a0:	str	x0, [x25, #168]
   111a4:	cbz	x0, 118ec <PyInit__decimal@@Base+0x964>
   111a8:	mov	x0, x19
   111ac:	bl	790c <PyFloat_FromString@plt+0xddc>
   111b0:	mov	x0, x21
   111b4:	bl	790c <PyFloat_FromString@plt+0xddc>
   111b8:	adrp	x0, 24000 <PyInit__decimal@@Base+0x13078>
   111bc:	add	x0, x0, #0xff7
   111c0:	bl	68d0 <PyImport_ImportModule@plt>
   111c4:	mov	x27, x0
   111c8:	cbz	x0, 1101c <PyInit__decimal@@Base+0x94>
   111cc:	adrp	x26, 25000 <PyInit__decimal@@Base+0x14078>
   111d0:	adrp	x4, 25000 <PyInit__decimal@@Base+0x14078>
   111d4:	add	x3, x26, #0x18
   111d8:	add	x4, x4, #0x3
   111dc:	adrp	x2, 25000 <PyInit__decimal@@Base+0x14078>
   111e0:	adrp	x1, 25000 <PyInit__decimal@@Base+0x14078>
   111e4:	add	x2, x2, #0x25
   111e8:	add	x1, x1, #0x2a
   111ec:	bl	65e0 <PyObject_CallMethod@plt>
   111f0:	str	x0, [x25, #112]
   111f4:	mov	x19, x0
   111f8:	cbz	x0, 116e0 <PyInit__decimal@@Base+0x758>
   111fc:	add	x0, x23, #0xb29
   11200:	bl	6a00 <PyUnicode_FromString@plt>
   11204:	mov	x28, x0
   11208:	cbz	x0, 118cc <PyInit__decimal@@Base+0x944>
   1120c:	mov	x2, x0
   11210:	add	x1, x22, #0xfcb
   11214:	ldr	x0, [x25, #112]
   11218:	ldr	x0, [x0, #264]
   1121c:	bl	6540 <PyDict_SetItemString@plt>
   11220:	tbnz	w0, #31, 118bc <PyInit__decimal@@Base+0x934>
   11224:	mov	x0, x28
   11228:	bl	790c <PyFloat_FromString@plt+0xddc>
   1122c:	adrp	x0, 25000 <PyInit__decimal@@Base+0x14078>
   11230:	add	x0, x0, #0x35
   11234:	bl	68d0 <PyImport_ImportModule@plt>
   11238:	mov	x28, x0
   1123c:	cbz	x0, 118cc <PyInit__decimal@@Base+0x944>
   11240:	adrp	x1, 25000 <PyInit__decimal@@Base+0x14078>
   11244:	add	x1, x1, #0x45
   11248:	bl	6610 <PyObject_GetAttrString@plt>
   1124c:	mov	x21, x0
   11250:	cbz	x0, 11028 <PyInit__decimal@@Base+0xa0>
   11254:	mov	x4, x0
   11258:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   1125c:	add	x23, x20, #0x6d0
   11260:	add	x25, x24, #0x330
   11264:	ldr	x0, [x0, #4000]
   11268:	add	x3, x25, #0x4e0
   1126c:	adrp	x2, 25000 <PyInit__decimal@@Base+0x14078>
   11270:	adrp	x1, 25000 <PyInit__decimal@@Base+0x14078>
   11274:	add	x2, x2, #0x54
   11278:	add	x1, x1, #0x5f
   1127c:	bl	6830 <PyObject_CallFunction@plt>
   11280:	str	x0, [x23, #72]
   11284:	mov	x19, x0
   11288:	cbz	x0, 117dc <PyInit__decimal@@Base+0x854>
   1128c:	mov	x0, x27
   11290:	bl	790c <PyFloat_FromString@plt+0xddc>
   11294:	mov	x0, x28
   11298:	bl	790c <PyFloat_FromString@plt+0xddc>
   1129c:	mov	x0, x21
   112a0:	adrp	x21, 43000 <PyInit__decimal@@Base+0x32078>
   112a4:	bl	790c <PyFloat_FromString@plt+0xddc>
   112a8:	add	x22, x21, #0x9b0
   112ac:	add	x0, x22, #0x648
   112b0:	mov	w1, #0x3f5                 	// #1013
   112b4:	bl	6890 <PyModule_Create2@plt>
   112b8:	str	x21, [sp, #136]
   112bc:	mov	x19, x0
   112c0:	cbz	x0, 1101c <PyInit__decimal@@Base+0x94>
   112c4:	ldr	x1, [x25, #416]
   112c8:	add	x2, x25, #0x1a0
   112cc:	add	x1, x1, #0x1
   112d0:	str	x1, [x25, #416]
   112d4:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   112d8:	add	x1, x1, #0x76c
   112dc:	bl	6a30 <PyModule_AddObject@plt>
   112e0:	tbnz	w0, #31, 118d4 <PyInit__decimal@@Base+0x94c>
   112e4:	ldr	x0, [x24, #816]
   112e8:	adrp	x1, 25000 <PyInit__decimal@@Base+0x14078>
   112ec:	mov	x2, x25
   112f0:	add	x1, x1, #0x5c4
   112f4:	add	x0, x0, #0x1
   112f8:	str	x0, [x24, #816]
   112fc:	mov	x0, x19
   11300:	bl	6a30 <PyModule_AddObject@plt>
   11304:	tbnz	w0, #31, 118d4 <PyInit__decimal@@Base+0x94c>
   11308:	ldr	x2, [x23, #112]
   1130c:	add	x1, x26, #0x18
   11310:	ldr	x0, [x2]
   11314:	add	x0, x0, #0x1
   11318:	str	x0, [x2]
   1131c:	mov	x0, x19
   11320:	bl	6a30 <PyModule_AddObject@plt>
   11324:	tbnz	w0, #31, 118d4 <PyInit__decimal@@Base+0x94c>
   11328:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   1132c:	mov	x2, #0x0                   	// #0
   11330:	ldr	x0, [x0, #3960]
   11334:	ldr	x1, [x0]
   11338:	adrp	x0, 25000 <PyInit__decimal@@Base+0x14078>
   1133c:	add	x0, x0, #0x67
   11340:	bl	67b0 <PyErr_NewException@plt>
   11344:	str	x0, [x23, #192]
   11348:	mov	x27, x0
   1134c:	cbz	x0, 116e0 <PyInit__decimal@@Base+0x758>
   11350:	mov	x2, x0
   11354:	adrp	x1, 25000 <PyInit__decimal@@Base+0x14078>
   11358:	ldr	x0, [x0]
   1135c:	add	x1, x1, #0x6f
   11360:	add	x0, x0, #0x1
   11364:	str	x0, [x27]
   11368:	mov	x0, x19
   1136c:	bl	6a30 <PyModule_AddObject@plt>
   11370:	tbnz	w0, #31, 118d4 <PyInit__decimal@@Base+0x94c>
   11374:	mov	x0, #0x9                   	// #9
   11378:	bl	6840 <PyTuple_New@plt>
   1137c:	str	x0, [x20, #1744]
   11380:	mov	x27, x0
   11384:	cbz	x0, 116e0 <PyInit__decimal@@Base+0x758>
   11388:	adrp	x26, 42000 <PyInit__decimal@@Base+0x31078>
   1138c:	mov	x24, x22
   11390:	mov	w25, #0x8                   	// #8
   11394:	adrp	x21, 45000 <PyInit__decimal@@Base+0x34078>
   11398:	ldr	x26, [x26, #4016]
   1139c:	ldr	w0, [x22, #272]
   113a0:	cmp	w0, #0x800
   113a4:	b.eq	116f4 <PyInit__decimal@@Base+0x76c>  // b.none
   113a8:	b.hi	113cc <PyInit__decimal@@Base+0x444>  // b.pmore
   113ac:	cmp	w0, #0x4
   113b0:	b.eq	116ec <PyInit__decimal@@Base+0x764>  // b.none
   113b4:	cmp	w0, #0x400
   113b8:	b.eq	113ec <PyInit__decimal@@Base+0x464>  // b.none
   113bc:	ldr	x1, [x23, #192]
   113c0:	mov	x0, #0x1                   	// #1
   113c4:	bl	6b00 <PyTuple_Pack@plt>
   113c8:	b	11404 <PyInit__decimal@@Base+0x47c>
   113cc:	cmp	w0, #0x4, lsl #12
   113d0:	b.ne	113bc <PyInit__decimal@@Base+0x434>  // b.any
   113d4:	ldr	x3, [x24, #184]
   113d8:	mov	x0, #0x3                   	// #3
   113dc:	ldr	x1, [x24, #216]
   113e0:	ldr	x2, [x24, #248]
   113e4:	bl	6b00 <PyTuple_Pack@plt>
   113e8:	b	11404 <PyInit__decimal@@Base+0x47c>
   113ec:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   113f0:	ldr	x0, [x0, #3936]
   113f4:	ldr	x2, [x0]
   113f8:	ldr	x1, [x23, #192]
   113fc:	mov	x0, #0x2                   	// #2
   11400:	bl	6b00 <PyTuple_Pack@plt>
   11404:	mov	x28, x0
   11408:	cbz	x0, 118e4 <PyInit__decimal@@Base+0x95c>
   1140c:	mov	x1, x0
   11410:	mov	x2, #0x0                   	// #0
   11414:	ldr	x0, [x22, #264]
   11418:	bl	67b0 <PyErr_NewException@plt>
   1141c:	str	x0, [x22, #280]
   11420:	mov	x27, x0
   11424:	cbz	x0, 116e0 <PyInit__decimal@@Base+0x758>
   11428:	mov	x0, x28
   1142c:	bl	790c <PyFloat_FromString@plt+0xddc>
   11430:	ldr	x2, [x22, #280]
   11434:	ldr	x1, [x22, #256]
   11438:	ldr	x0, [x2]
   1143c:	add	x0, x0, #0x1
   11440:	str	x0, [x2]
   11444:	mov	x0, x19
   11448:	bl	6a30 <PyModule_AddObject@plt>
   1144c:	tbnz	w0, #31, 118d4 <PyInit__decimal@@Base+0x94c>
   11450:	ldr	x1, [x22, #280]
   11454:	sub	x22, x22, #0x20
   11458:	ldr	x0, [x1]
   1145c:	add	x0, x0, #0x1
   11460:	str	x0, [x1]
   11464:	ldr	x0, [x23]
   11468:	add	x0, x0, w25, sxtw #3
   1146c:	sub	w25, w25, #0x1
   11470:	cmn	w25, #0x1
   11474:	str	x1, [x0, #24]
   11478:	b.ne	1139c <PyInit__decimal@@Base+0x414>  // b.any
   1147c:	ldr	x0, [sp, #136]
   11480:	adrp	x24, 42000 <PyInit__decimal@@Base+0x31078>
   11484:	add	x0, x0, #0x9b0
   11488:	ldr	x24, [x24, #4016]
   1148c:	add	x22, x0, #0x1b0
   11490:	mov	x23, x0
   11494:	ldr	x1, [x0, #24]
   11498:	str	x1, [x0, #424]
   1149c:	ldr	x27, [x22]
   114a0:	cbnz	x27, 11700 <PyInit__decimal@@Base+0x778>
   114a4:	add	x25, x21, #0x6d0
   114a8:	adrp	x26, 43000 <PyInit__decimal@@Base+0x32078>
   114ac:	add	x26, x26, #0x330
   114b0:	mov	x1, #0x0                   	// #0
   114b4:	mov	x0, x26
   114b8:	bl	68e0 <PyObject_CallObject@plt>
   114bc:	str	x0, [x25, #88]
   114c0:	mov	x28, x0
   114c4:	cbz	x0, 118e4 <PyInit__decimal@@Base+0x95c>
   114c8:	mov	x2, x0
   114cc:	adrp	x1, 25000 <PyInit__decimal@@Base+0x14078>
   114d0:	ldr	x0, [x0]
   114d4:	add	x1, x1, #0x80
   114d8:	add	x0, x0, #0x1
   114dc:	str	x0, [x28]
   114e0:	mov	x0, x19
   114e4:	bl	6a30 <PyModule_AddObject@plt>
   114e8:	tbnz	w0, #31, 116e0 <PyInit__decimal@@Base+0x758>
   114ec:	adrp	x2, 42000 <PyInit__decimal@@Base+0x31078>
   114f0:	adrp	x1, 25000 <PyInit__decimal@@Base+0x14078>
   114f4:	add	x1, x1, #0x8f
   114f8:	ldr	x2, [x2, #4024]
   114fc:	ldr	x0, [x2]
   11500:	add	x0, x0, #0x1
   11504:	str	x0, [x2]
   11508:	mov	x0, x19
   1150c:	bl	6a30 <PyModule_AddObject@plt>
   11510:	tbnz	w0, #31, 116e0 <PyInit__decimal@@Base+0x758>
   11514:	mov	x0, x26
   11518:	mov	x1, #0x0                   	// #0
   1151c:	bl	68e0 <PyObject_CallObject@plt>
   11520:	str	x0, [x25, #96]
   11524:	mov	x28, x0
   11528:	cbz	x0, 118e4 <PyInit__decimal@@Base+0x95c>
   1152c:	adrp	x0, 25000 <PyInit__decimal@@Base+0x14078>
   11530:	add	x0, x0, #0x5e8
   11534:	add	x24, sp, #0x90
   11538:	ldp	x2, x3, [x0]
   1153c:	stp	x2, x3, [sp, #96]
   11540:	stp	x2, x3, [sp, #144]
   11544:	ldp	x2, x3, [x0, #16]
   11548:	stp	x2, x3, [sp, #160]
   1154c:	ldp	x22, x23, [x0, #32]
   11550:	mov	x0, #0x9                   	// #9
   11554:	str	x0, [sp, #144]
   11558:	mov	w0, #0x4bbf                	// #19391
   1155c:	str	w0, [sp, #168]
   11560:	mov	w0, #0x4                   	// #4
   11564:	stp	x22, x23, [sp, #176]
   11568:	str	w0, [sp, #180]
   1156c:	ldp	x0, x1, [sp, #144]
   11570:	stp	x0, x1, [x28, #16]
   11574:	ldp	x0, x1, [sp, #160]
   11578:	stp	x0, x1, [x28, #32]
   1157c:	ldp	x0, x1, [sp, #176]
   11580:	stp	x0, x1, [x28, #48]
   11584:	stp	x2, x3, [sp, #112]
   11588:	mov	x2, x28
   1158c:	mov	w0, #0x1                   	// #1
   11590:	str	w0, [x28, #80]
   11594:	adrp	x1, 25000 <PyInit__decimal@@Base+0x14078>
   11598:	ldr	x0, [x28]
   1159c:	add	x1, x1, #0x9c
   115a0:	add	x0, x0, #0x1
   115a4:	str	x0, [x28]
   115a8:	mov	x0, x19
   115ac:	bl	6a30 <PyModule_AddObject@plt>
   115b0:	tbnz	w0, #31, 116e0 <PyInit__decimal@@Base+0x758>
   115b4:	mov	x0, x26
   115b8:	mov	x1, #0x0                   	// #0
   115bc:	bl	68e0 <PyObject_CallObject@plt>
   115c0:	str	x0, [x25, #104]
   115c4:	mov	x28, x0
   115c8:	cbz	x0, 118e4 <PyInit__decimal@@Base+0x95c>
   115cc:	ldp	x0, x1, [sp, #96]
   115d0:	stp	x0, x1, [x24]
   115d4:	mov	x2, x28
   115d8:	ldp	x0, x1, [sp, #112]
   115dc:	stp	x0, x1, [x24, #16]
   115e0:	stp	x22, x23, [x24, #32]
   115e4:	mov	x0, #0x9                   	// #9
   115e8:	str	x0, [sp, #144]
   115ec:	str	wzr, [sp, #168]
   115f0:	stp	x22, x23, [x28, #48]
   115f4:	ldp	x0, x1, [x24]
   115f8:	stp	x0, x1, [x28, #16]
   115fc:	ldp	x0, x1, [x24, #16]
   11600:	stp	x0, x1, [x28, #32]
   11604:	mov	w0, #0x1                   	// #1
   11608:	str	w0, [x28, #80]
   1160c:	ldr	x0, [x28]
   11610:	adrp	x1, 25000 <PyInit__decimal@@Base+0x14078>
   11614:	add	x1, x1, #0xa9
   11618:	add	x0, x0, #0x1
   1161c:	str	x0, [x28]
   11620:	mov	x0, x19
   11624:	bl	6a30 <PyModule_AddObject@plt>
   11628:	tbnz	w0, #31, 116e0 <PyInit__decimal@@Base+0x758>
   1162c:	ldr	x0, [sp, #136]
   11630:	add	x22, x0, #0x9b0
   11634:	add	x22, x22, #0x5f8
   11638:	ldr	x28, [x22]
   1163c:	cbnz	x28, 1177c <PyInit__decimal@@Base+0x7f4>
   11640:	add	x22, x21, #0x6d0
   11644:	add	x22, x22, #0xb0
   11648:	ldr	x27, [x22]
   1164c:	cbnz	x27, 117a8 <PyInit__decimal@@Base+0x820>
   11650:	add	x21, x21, #0x6d0
   11654:	adrp	x22, 45000 <PyInit__decimal@@Base+0x34078>
   11658:	add	x21, x21, #0x8
   1165c:	add	x22, x22, #0x558
   11660:	mov	x23, #0x0                   	// #0
   11664:	ldr	x0, [x22]
   11668:	bl	6a20 <PyUnicode_InternFromString@plt>
   1166c:	str	x0, [x23, x21]
   11670:	mov	x28, x0
   11674:	cbz	x0, 118e4 <PyInit__decimal@@Base+0x95c>
   11678:	mov	x2, x0
   1167c:	ldr	x0, [x0]
   11680:	ldr	x1, [x22]
   11684:	add	x0, x0, #0x1
   11688:	str	x0, [x28]
   1168c:	mov	x0, x19
   11690:	bl	6a30 <PyModule_AddObject@plt>
   11694:	tbnz	w0, #31, 116e0 <PyInit__decimal@@Base+0x758>
   11698:	add	x23, x23, #0x8
   1169c:	add	x22, x22, #0x8
   116a0:	cmp	x23, #0x40
   116a4:	b.ne	11664 <PyInit__decimal@@Base+0x6dc>  // b.any
   116a8:	adrp	x2, 25000 <PyInit__decimal@@Base+0x14078>
   116ac:	adrp	x1, 25000 <PyInit__decimal@@Base+0x14078>
   116b0:	add	x2, x2, #0xb9
   116b4:	add	x1, x1, #0xbe
   116b8:	mov	x0, x19
   116bc:	bl	6a10 <PyModule_AddStringConstant@plt>
   116c0:	tbnz	w0, #31, 116e0 <PyInit__decimal@@Base+0x758>
   116c4:	bl	17500 <PyInit__decimal@@Base+0x6578>
   116c8:	mov	x2, x0
   116cc:	adrp	x1, 25000 <PyInit__decimal@@Base+0x14078>
   116d0:	mov	x0, x19
   116d4:	add	x1, x1, #0xca
   116d8:	bl	6a10 <PyModule_AddStringConstant@plt>
   116dc:	tbz	w0, #31, 11898 <PyInit__decimal@@Base+0x910>
   116e0:	mov	x21, #0x0                   	// #0
   116e4:	mov	x28, #0x0                   	// #0
   116e8:	b	117dc <PyInit__decimal@@Base+0x854>
   116ec:	ldr	x2, [x26]
   116f0:	b	113f8 <PyInit__decimal@@Base+0x470>
   116f4:	ldr	x1, [x24, #216]
   116f8:	ldr	x2, [x24, #248]
   116fc:	b	113fc <PyInit__decimal@@Base+0x474>
   11700:	ldr	w0, [x22, #16]
   11704:	ldr	x1, [x23, #24]
   11708:	cmp	w0, #0x10
   1170c:	b.ne	11770 <PyInit__decimal@@Base+0x7e8>  // b.any
   11710:	ldr	x2, [x24]
   11714:	mov	x0, #0x2                   	// #2
   11718:	bl	6b00 <PyTuple_Pack@plt>
   1171c:	mov	x28, x0
   11720:	cbz	x0, 118e4 <PyInit__decimal@@Base+0x95c>
   11724:	mov	x1, x0
   11728:	mov	x2, #0x0                   	// #0
   1172c:	ldr	x0, [x22, #8]
   11730:	bl	67b0 <PyErr_NewException@plt>
   11734:	str	x0, [x22, #24]
   11738:	mov	x27, x0
   1173c:	cbz	x0, 116e0 <PyInit__decimal@@Base+0x758>
   11740:	mov	x0, x28
   11744:	bl	790c <PyFloat_FromString@plt+0xddc>
   11748:	ldr	x2, [x22, #24]
   1174c:	ldr	x1, [x22]
   11750:	ldr	x0, [x2]
   11754:	add	x0, x0, #0x1
   11758:	str	x0, [x2]
   1175c:	mov	x0, x19
   11760:	bl	6a30 <PyModule_AddObject@plt>
   11764:	tbnz	w0, #31, 118d4 <PyInit__decimal@@Base+0x94c>
   11768:	add	x22, x22, #0x20
   1176c:	b	1149c <PyInit__decimal@@Base+0x514>
   11770:	mov	x0, #0x1                   	// #1
   11774:	bl	6b00 <PyTuple_Pack@plt>
   11778:	b	1171c <PyInit__decimal@@Base+0x794>
   1177c:	ldr	x0, [x22, #8]
   11780:	bl	6740 <PyLong_FromSsize_t@plt>
   11784:	mov	x28, x0
   11788:	cbz	x0, 118e4 <PyInit__decimal@@Base+0x95c>
   1178c:	ldr	x1, [x22]
   11790:	mov	x2, x0
   11794:	mov	x0, x19
   11798:	bl	6a30 <PyModule_AddObject@plt>
   1179c:	tbnz	w0, #31, 118c0 <PyInit__decimal@@Base+0x938>
   117a0:	add	x22, x22, #0x10
   117a4:	b	11638 <PyInit__decimal@@Base+0x6b0>
   117a8:	ldrsw	x2, [x22, #8]
   117ac:	mov	x1, x27
   117b0:	mov	x0, x19
   117b4:	bl	6590 <PyModule_AddIntConstant@plt>
   117b8:	tbnz	w0, #31, 118e4 <PyInit__decimal@@Base+0x95c>
   117bc:	add	x22, x22, #0x10
   117c0:	b	11648 <PyInit__decimal@@Base+0x6c0>
   117c4:	mov	x0, x21
   117c8:	mov	x19, #0x0                   	// #0
   117cc:	mov	x27, #0x0                   	// #0
   117d0:	mov	x28, #0x0                   	// #0
   117d4:	mov	x21, #0x0                   	// #0
   117d8:	bl	790c <PyFloat_FromString@plt+0xddc>
   117dc:	add	x1, x20, #0x6d0
   117e0:	ldr	x0, [x1, #168]
   117e4:	cbz	x0, 117f0 <PyInit__decimal@@Base+0x868>
   117e8:	str	xzr, [x1, #168]
   117ec:	bl	790c <PyFloat_FromString@plt+0xddc>
   117f0:	cbz	x27, 117fc <PyInit__decimal@@Base+0x874>
   117f4:	mov	x0, x27
   117f8:	bl	790c <PyFloat_FromString@plt+0xddc>
   117fc:	cbz	x28, 11808 <PyInit__decimal@@Base+0x880>
   11800:	mov	x0, x28
   11804:	bl	790c <PyFloat_FromString@plt+0xddc>
   11808:	cbz	x21, 11814 <PyInit__decimal@@Base+0x88c>
   1180c:	mov	x0, x21
   11810:	bl	790c <PyFloat_FromString@plt+0xddc>
   11814:	ldr	x0, [x20, #1744]
   11818:	cbz	x0, 11824 <PyInit__decimal@@Base+0x89c>
   1181c:	str	xzr, [x20, #1744]
   11820:	bl	790c <PyFloat_FromString@plt+0xddc>
   11824:	add	x1, x20, #0x6d0
   11828:	ldr	x0, [x1, #112]
   1182c:	cbz	x0, 11838 <PyInit__decimal@@Base+0x8b0>
   11830:	str	xzr, [x1, #112]
   11834:	bl	790c <PyFloat_FromString@plt+0xddc>
   11838:	add	x1, x20, #0x6d0
   1183c:	ldr	x0, [x1, #88]
   11840:	cbz	x0, 1184c <PyInit__decimal@@Base+0x8c4>
   11844:	str	xzr, [x1, #88]
   11848:	bl	790c <PyFloat_FromString@plt+0xddc>
   1184c:	add	x1, x20, #0x6d0
   11850:	ldr	x0, [x1, #96]
   11854:	cbz	x0, 11860 <PyInit__decimal@@Base+0x8d8>
   11858:	str	xzr, [x1, #96]
   1185c:	bl	790c <PyFloat_FromString@plt+0xddc>
   11860:	add	x1, x20, #0x6d0
   11864:	ldr	x0, [x1, #104]
   11868:	cbz	x0, 11874 <PyInit__decimal@@Base+0x8ec>
   1186c:	str	xzr, [x1, #104]
   11870:	bl	790c <PyFloat_FromString@plt+0xddc>
   11874:	add	x20, x20, #0x6d0
   11878:	ldr	x0, [x20, #80]
   1187c:	cbz	x0, 11888 <PyInit__decimal@@Base+0x900>
   11880:	str	xzr, [x20, #80]
   11884:	bl	790c <PyFloat_FromString@plt+0xddc>
   11888:	cbz	x19, 11898 <PyInit__decimal@@Base+0x910>
   1188c:	mov	x0, x19
   11890:	mov	x19, #0x0                   	// #0
   11894:	bl	790c <PyFloat_FromString@plt+0xddc>
   11898:	mov	x0, x19
   1189c:	ldp	x19, x20, [sp, #16]
   118a0:	ldp	x21, x22, [sp, #32]
   118a4:	ldp	x23, x24, [sp, #48]
   118a8:	ldp	x25, x26, [sp, #64]
   118ac:	ldp	x27, x28, [sp, #80]
   118b0:	ldp	x29, x30, [sp], #192
   118b4:	ret
   118b8:	mov	x27, #0x0                   	// #0
   118bc:	mov	x19, #0x0                   	// #0
   118c0:	mov	x0, x28
   118c4:	bl	790c <PyFloat_FromString@plt+0xddc>
   118c8:	b	116e0 <PyInit__decimal@@Base+0x758>
   118cc:	mov	x21, #0x0                   	// #0
   118d0:	b	11028 <PyInit__decimal@@Base+0xa0>
   118d4:	mov	x21, #0x0                   	// #0
   118d8:	mov	x28, #0x0                   	// #0
   118dc:	mov	x27, #0x0                   	// #0
   118e0:	b	117dc <PyInit__decimal@@Base+0x854>
   118e4:	mov	x21, #0x0                   	// #0
   118e8:	b	118dc <PyInit__decimal@@Base+0x954>
   118ec:	mov	x0, x19
   118f0:	bl	790c <PyFloat_FromString@plt+0xddc>
   118f4:	cbnz	x21, 117c4 <PyInit__decimal@@Base+0x83c>
   118f8:	mov	x19, #0x0                   	// #0
   118fc:	mov	x27, #0x0                   	// #0
   11900:	b	116e4 <PyInit__decimal@@Base+0x75c>
   11904:	mov	x6, #0x89e80000            	// #2313682944
   11908:	adrp	x4, 2a000 <PyInit__decimal@@Base+0x19078>
   1190c:	movk	x6, #0x2304, lsl #32
   11910:	add	x7, x2, x3, lsr #63
   11914:	movk	x6, #0x8ac7, lsl #48
   11918:	ldr	x8, [x4, #2784]
   1191c:	and	x5, x6, x3, asr #63
   11920:	add	x5, x5, x3
   11924:	umulh	x4, x7, x8
   11928:	madd	x7, x7, x8, x5
   1192c:	cmp	x7, x5
   11930:	b.cs	11938 <PyInit__decimal@@Base+0x9b0>  // b.hs, b.nlast
   11934:	add	x4, x4, #0x1
   11938:	add	x4, x2, x4
   1193c:	mvn	x4, x4
   11940:	mul	x7, x4, x6
   11944:	umulh	x5, x4, x6
   11948:	adds	x3, x3, x7
   1194c:	mov	x7, #0x76180000            	// #1981284352
   11950:	movk	x7, #0xdcfb, lsl #32
   11954:	movk	x7, #0x7538, lsl #48
   11958:	add	x2, x2, x7
   1195c:	adc	x2, x5, x2
   11960:	sub	x4, x2, x4
   11964:	and	x2, x2, x6
   11968:	str	x4, [x0]
   1196c:	add	x3, x2, x3
   11970:	str	x3, [x1]
   11974:	ret
   11978:	subs	x1, x1, #0x1
   1197c:	b.pl	11988 <PyInit__decimal@@Base+0xa00>  // b.nfrst
   11980:	mov	w0, #0x1                   	// #1
   11984:	ret
   11988:	ldr	x2, [x0, x1, lsl #3]
   1198c:	cbz	x2, 11978 <PyInit__decimal@@Base+0x9f0>
   11990:	mov	w0, #0x0                   	// #0
   11994:	b	11984 <PyInit__decimal@@Base+0x9fc>
   11998:	cmp	x3, #0x9
   1199c:	b.hi	11a78 <PyInit__decimal@@Base+0xaf0>  // b.pmore
   119a0:	cmp	x3, #0x4
   119a4:	b.hi	11a10 <PyInit__decimal@@Base+0xa88>  // b.pmore
   119a8:	sub	x3, x3, #0x1
   119ac:	cmp	x3, #0x3
   119b0:	b.hi	119d4 <PyInit__decimal@@Base+0xa4c>  // b.pmore
   119b4:	cmp	w3, #0x3
   119b8:	b.hi	119d4 <PyInit__decimal@@Base+0xa4c>  // b.pmore
   119bc:	adrp	x4, 2a000 <PyInit__decimal@@Base+0x19078>
   119c0:	add	x4, x4, #0x9cc
   119c4:	ldrb	w3, [x4, w3, uxtw]
   119c8:	adr	x4, 119d4 <PyInit__decimal@@Base+0xa4c>
   119cc:	add	x3, x4, w3, sxtb #2
   119d0:	br	x3
   119d4:	str	x2, [x0]
   119d8:	str	xzr, [x1]
   119dc:	ret
   119e0:	mov	x4, #0xa                   	// #10
   119e4:	udiv	x3, x2, x4
   119e8:	msub	x2, x3, x4, x2
   119ec:	str	x3, [x0]
   119f0:	str	x2, [x1]
   119f4:	b	119dc <PyInit__decimal@@Base+0xa54>
   119f8:	mov	x4, #0x64                  	// #100
   119fc:	b	119e4 <PyInit__decimal@@Base+0xa5c>
   11a00:	mov	x4, #0x3e8                 	// #1000
   11a04:	b	119e4 <PyInit__decimal@@Base+0xa5c>
   11a08:	mov	x4, #0x2710                	// #10000
   11a0c:	b	119e4 <PyInit__decimal@@Base+0xa5c>
   11a10:	sub	x3, x3, #0x6
   11a14:	cmp	x3, #0x3
   11a18:	b.hi	11a3c <PyInit__decimal@@Base+0xab4>  // b.pmore
   11a1c:	cmp	w3, #0x3
   11a20:	b.hi	11a3c <PyInit__decimal@@Base+0xab4>  // b.pmore
   11a24:	adrp	x4, 2a000 <PyInit__decimal@@Base+0x19078>
   11a28:	add	x4, x4, #0x9d0
   11a2c:	ldrb	w3, [x4, w3, uxtw]
   11a30:	adr	x4, 11a3c <PyInit__decimal@@Base+0xab4>
   11a34:	add	x3, x4, w3, sxtb #2
   11a38:	br	x3
   11a3c:	mov	x4, #0x86a0                	// #34464
   11a40:	movk	x4, #0x1, lsl #16
   11a44:	b	119e4 <PyInit__decimal@@Base+0xa5c>
   11a48:	mov	x4, #0x4240                	// #16960
   11a4c:	movk	x4, #0xf, lsl #16
   11a50:	b	119e4 <PyInit__decimal@@Base+0xa5c>
   11a54:	mov	x4, #0x9680                	// #38528
   11a58:	movk	x4, #0x98, lsl #16
   11a5c:	b	119e4 <PyInit__decimal@@Base+0xa5c>
   11a60:	mov	x4, #0xe100                	// #57600
   11a64:	movk	x4, #0x5f5, lsl #16
   11a68:	b	119e4 <PyInit__decimal@@Base+0xa5c>
   11a6c:	mov	x4, #0xca00                	// #51712
   11a70:	movk	x4, #0x3b9a, lsl #16
   11a74:	b	119e4 <PyInit__decimal@@Base+0xa5c>
   11a78:	cmp	x3, #0xe
   11a7c:	b.hi	11afc <PyInit__decimal@@Base+0xb74>  // b.pmore
   11a80:	sub	x3, x3, #0xb
   11a84:	cmp	x3, #0x3
   11a88:	b.hi	11aac <PyInit__decimal@@Base+0xb24>  // b.pmore
   11a8c:	cmp	w3, #0x3
   11a90:	b.hi	11aac <PyInit__decimal@@Base+0xb24>  // b.pmore
   11a94:	adrp	x4, 2a000 <PyInit__decimal@@Base+0x19078>
   11a98:	add	x4, x4, #0x9d4
   11a9c:	ldrb	w3, [x4, w3, uxtw]
   11aa0:	adr	x4, 11aac <PyInit__decimal@@Base+0xb24>
   11aa4:	add	x3, x4, w3, sxtb #2
   11aa8:	br	x3
   11aac:	mov	x4, #0xe400                	// #58368
   11ab0:	movk	x4, #0x540b, lsl #16
   11ab4:	movk	x4, #0x2, lsl #32
   11ab8:	b	119e4 <PyInit__decimal@@Base+0xa5c>
   11abc:	mov	x4, #0xe800                	// #59392
   11ac0:	movk	x4, #0x4876, lsl #16
   11ac4:	movk	x4, #0x17, lsl #32
   11ac8:	b	119e4 <PyInit__decimal@@Base+0xa5c>
   11acc:	mov	x4, #0x1000                	// #4096
   11ad0:	movk	x4, #0xd4a5, lsl #16
   11ad4:	movk	x4, #0xe8, lsl #32
   11ad8:	b	119e4 <PyInit__decimal@@Base+0xa5c>
   11adc:	mov	x4, #0xa000                	// #40960
   11ae0:	movk	x4, #0x4e72, lsl #16
   11ae4:	movk	x4, #0x918, lsl #32
   11ae8:	b	119e4 <PyInit__decimal@@Base+0xa5c>
   11aec:	mov	x4, #0x4000                	// #16384
   11af0:	movk	x4, #0x107a, lsl #16
   11af4:	movk	x4, #0x5af3, lsl #32
   11af8:	b	119e4 <PyInit__decimal@@Base+0xa5c>
   11afc:	cmp	x3, #0x11
   11b00:	b.eq	11b38 <PyInit__decimal@@Base+0xbb0>  // b.none
   11b04:	cmp	x3, #0x12
   11b08:	b.eq	11b48 <PyInit__decimal@@Base+0xbc0>  // b.none
   11b0c:	cmp	x3, #0x10
   11b10:	b.eq	11b28 <PyInit__decimal@@Base+0xba0>  // b.none
   11b14:	mov	x4, #0x8000                	// #32768
   11b18:	movk	x4, #0xa4c6, lsl #16
   11b1c:	movk	x4, #0x8d7e, lsl #32
   11b20:	movk	x4, #0x3, lsl #48
   11b24:	b	119e4 <PyInit__decimal@@Base+0xa5c>
   11b28:	mov	x4, #0x6fc10000            	// #1874919424
   11b2c:	movk	x4, #0x86f2, lsl #32
   11b30:	movk	x4, #0x23, lsl #48
   11b34:	b	119e4 <PyInit__decimal@@Base+0xa5c>
   11b38:	mov	x4, #0x5d8a0000            	// #1569325056
   11b3c:	movk	x4, #0x4578, lsl #32
   11b40:	movk	x4, #0x163, lsl #48
   11b44:	b	119e4 <PyInit__decimal@@Base+0xa5c>
   11b48:	mov	x4, #0xa7640000            	// #2808348672
   11b4c:	movk	x4, #0xb6b3, lsl #32
   11b50:	movk	x4, #0xde0, lsl #48
   11b54:	b	119e4 <PyInit__decimal@@Base+0xa5c>
   11b58:	mov	x9, #0xffffffff89e7ffff    	// #-1981284353
   11b5c:	mov	x10, #0x76180000            	// #1981284352
   11b60:	movk	x9, #0x2304, lsl #32
   11b64:	movk	x10, #0xdcfb, lsl #32
   11b68:	mov	x7, x0
   11b6c:	mov	x6, #0x0                   	// #0
   11b70:	mov	x0, #0x0                   	// #0
   11b74:	movk	x9, #0x8ac7, lsl #48
   11b78:	movk	x10, #0x7538, lsl #48
   11b7c:	cmp	x6, x4
   11b80:	b.ne	11bac <PyInit__decimal@@Base+0xc24>  // b.any
   11b84:	mov	x5, #0x89e80000            	// #2313682944
   11b88:	movk	x5, #0x2304, lsl #32
   11b8c:	movk	x5, #0x8ac7, lsl #48
   11b90:	cmp	x4, x3
   11b94:	cset	w2, cc  // cc = lo, ul, last
   11b98:	tst	w2, w0
   11b9c:	b.ne	11be8 <PyInit__decimal@@Base+0xc60>  // b.any
   11ba0:	cmp	x4, x3
   11ba4:	b.cc	11c08 <PyInit__decimal@@Base+0xc80>  // b.lo, b.ul, b.last
   11ba8:	ret
   11bac:	ldr	x8, [x1, x6, lsl #3]
   11bb0:	ldr	x5, [x2, x6, lsl #3]
   11bb4:	add	x5, x8, x5
   11bb8:	add	x5, x5, x0
   11bbc:	cmp	x8, x5
   11bc0:	cset	w8, hi  // hi = pmore
   11bc4:	cmp	x5, x9
   11bc8:	cset	w0, hi  // hi = pmore
   11bcc:	orr	w8, w8, w0
   11bd0:	and	x0, x8, #0xff
   11bd4:	cbz	w8, 11bdc <PyInit__decimal@@Base+0xc54>
   11bd8:	add	x5, x5, x10
   11bdc:	str	x5, [x7, x6, lsl #3]
   11be0:	add	x6, x6, #0x1
   11be4:	b	11b7c <PyInit__decimal@@Base+0xbf4>
   11be8:	ldr	x2, [x1, x4, lsl #3]
   11bec:	add	x2, x2, #0x1
   11bf0:	cmp	x2, x5
   11bf4:	csel	x2, x2, xzr, ne  // ne = any
   11bf8:	cset	x0, eq  // eq = none
   11bfc:	str	x2, [x7, x4, lsl #3]
   11c00:	add	x4, x4, #0x1
   11c04:	b	11b90 <PyInit__decimal@@Base+0xc08>
   11c08:	ldr	x2, [x1, x4, lsl #3]
   11c0c:	str	x2, [x7, x4, lsl #3]
   11c10:	add	x4, x4, #0x1
   11c14:	b	11ba0 <PyInit__decimal@@Base+0xc18>
   11c18:	cbz	x2, 11c90 <PyInit__decimal@@Base+0xd08>
   11c1c:	mov	x7, #0xffffffff89e7ffff    	// #-1981284353
   11c20:	mov	x8, #0x76180000            	// #1981284352
   11c24:	movk	x7, #0x2304, lsl #32
   11c28:	movk	x8, #0xdcfb, lsl #32
   11c2c:	mov	x4, #0x0                   	// #0
   11c30:	mov	x5, #0x0                   	// #0
   11c34:	movk	x7, #0x8ac7, lsl #48
   11c38:	movk	x8, #0x7538, lsl #48
   11c3c:	ldr	x6, [x0, x4, lsl #3]
   11c40:	ldr	x3, [x1, x4, lsl #3]
   11c44:	add	x3, x6, x3
   11c48:	add	x3, x3, x5
   11c4c:	cmp	x6, x3
   11c50:	cset	w6, hi  // hi = pmore
   11c54:	cmp	x3, x7
   11c58:	cset	w5, hi  // hi = pmore
   11c5c:	orr	w6, w6, w5
   11c60:	and	x5, x6, #0xff
   11c64:	cbz	w6, 11c6c <PyInit__decimal@@Base+0xce4>
   11c68:	add	x3, x3, x8
   11c6c:	str	x3, [x0, x4, lsl #3]
   11c70:	add	x4, x4, #0x1
   11c74:	cmp	x2, x4
   11c78:	b.ne	11c3c <PyInit__decimal@@Base+0xcb4>  // b.any
   11c7c:	add	x0, x0, x2, lsl #3
   11c80:	mov	x2, #0x89e80000            	// #2313682944
   11c84:	movk	x2, #0x2304, lsl #32
   11c88:	movk	x2, #0x8ac7, lsl #48
   11c8c:	cbnz	x5, 11c94 <PyInit__decimal@@Base+0xd0c>
   11c90:	ret
   11c94:	ldr	x1, [x0]
   11c98:	add	x1, x1, #0x1
   11c9c:	cmp	x1, x2
   11ca0:	csel	x1, x1, xzr, ne  // ne = any
   11ca4:	cset	x5, eq  // eq = none
   11ca8:	str	x1, [x0], #8
   11cac:	b	11c8c <PyInit__decimal@@Base+0xd04>
   11cb0:	mov	x4, x0
   11cb4:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   11cb8:	movk	x0, #0x2304, lsl #32
   11cbc:	movk	x0, #0x8ac7, lsl #48
   11cc0:	ldr	x3, [x4]
   11cc4:	adds	x2, x3, x2
   11cc8:	cset	w3, cs  // cs = hs, nlast
   11ccc:	cmp	x2, x0
   11cd0:	cset	w0, hi  // hi = pmore
   11cd4:	orr	w3, w3, w0
   11cd8:	and	x0, x3, #0xff
   11cdc:	cbz	w3, 11cf0 <PyInit__decimal@@Base+0xd68>
   11ce0:	mov	x3, #0x76180000            	// #1981284352
   11ce4:	movk	x3, #0xdcfb, lsl #32
   11ce8:	movk	x3, #0x7538, lsl #48
   11cec:	add	x2, x2, x3
   11cf0:	mov	x5, #0x89e80000            	// #2313682944
   11cf4:	mov	x3, #0x1                   	// #1
   11cf8:	movk	x5, #0x2304, lsl #32
   11cfc:	str	x2, [x4]
   11d00:	movk	x5, #0x8ac7, lsl #48
   11d04:	cmp	x3, x1
   11d08:	cset	w2, cc  // cc = lo, ul, last
   11d0c:	tst	w2, w0
   11d10:	b.ne	11d18 <PyInit__decimal@@Base+0xd90>  // b.any
   11d14:	ret
   11d18:	ldr	x2, [x4, x3, lsl #3]
   11d1c:	add	x2, x2, #0x1
   11d20:	cmp	x2, x5
   11d24:	csel	x2, x2, xzr, ne  // ne = any
   11d28:	cset	x0, eq  // eq = none
   11d2c:	str	x2, [x4, x3, lsl #3]
   11d30:	add	x3, x3, #0x1
   11d34:	b	11d04 <PyInit__decimal@@Base+0xd7c>
   11d38:	mov	x5, #0x89e80000            	// #2313682944
   11d3c:	mov	x4, x0
   11d40:	movk	x5, #0x2304, lsl #32
   11d44:	mov	x3, #0x0                   	// #0
   11d48:	mov	x0, #0x1                   	// #1
   11d4c:	movk	x5, #0x8ac7, lsl #48
   11d50:	cmp	x3, x1
   11d54:	cset	w2, cc  // cc = lo, ul, last
   11d58:	tst	w2, w0
   11d5c:	b.ne	11d64 <PyInit__decimal@@Base+0xddc>  // b.any
   11d60:	ret
   11d64:	ldr	x2, [x4, x3, lsl #3]
   11d68:	add	x2, x2, #0x1
   11d6c:	cmp	x2, x5
   11d70:	csel	x2, x2, xzr, ne  // ne = any
   11d74:	cset	x0, eq  // eq = none
   11d78:	str	x2, [x4, x3, lsl #3]
   11d7c:	add	x3, x3, #0x1
   11d80:	b	11d50 <PyInit__decimal@@Base+0xdc8>
   11d84:	mov	x9, #0x89e80000            	// #2313682944
   11d88:	mov	x7, #0x0                   	// #0
   11d8c:	movk	x9, #0x2304, lsl #32
   11d90:	mov	x6, #0x0                   	// #0
   11d94:	movk	x9, #0x8ac7, lsl #48
   11d98:	cmp	x7, x4
   11d9c:	b.ne	11dc8 <PyInit__decimal@@Base+0xe40>  // b.any
   11da0:	mov	x7, #0xffffffff89e7ffff    	// #-1981284353
   11da4:	movk	x7, #0x2304, lsl #32
   11da8:	movk	x7, #0x8ac7, lsl #48
   11dac:	cmp	x4, x3
   11db0:	cset	w2, cc  // cc = lo, ul, last
   11db4:	tst	w2, w6
   11db8:	b.ne	11df4 <PyInit__decimal@@Base+0xe6c>  // b.any
   11dbc:	cmp	x4, x3
   11dc0:	b.cc	11e14 <PyInit__decimal@@Base+0xe8c>  // b.lo, b.ul, b.last
   11dc4:	ret
   11dc8:	ldr	x8, [x1, x7, lsl #3]
   11dcc:	ldr	x5, [x2, x7, lsl #3]
   11dd0:	sub	x6, x8, x6
   11dd4:	sub	x5, x6, x5
   11dd8:	cmp	x8, x5
   11ddc:	cset	x6, cc  // cc = lo, ul, last
   11de0:	b.cs	11de8 <PyInit__decimal@@Base+0xe60>  // b.hs, b.nlast
   11de4:	add	x5, x5, x9
   11de8:	str	x5, [x0, x7, lsl #3]
   11dec:	add	x7, x7, #0x1
   11df0:	b	11d98 <PyInit__decimal@@Base+0xe10>
   11df4:	ldr	x5, [x1, x4, lsl #3]
   11df8:	cmp	x5, #0x0
   11dfc:	sub	x2, x5, #0x1
   11e00:	csel	x2, x2, x7, ne  // ne = any
   11e04:	cset	x6, eq  // eq = none
   11e08:	str	x2, [x0, x4, lsl #3]
   11e0c:	add	x4, x4, #0x1
   11e10:	b	11dac <PyInit__decimal@@Base+0xe24>
   11e14:	ldr	x2, [x1, x4, lsl #3]
   11e18:	str	x2, [x0, x4, lsl #3]
   11e1c:	add	x4, x4, #0x1
   11e20:	b	11dbc <PyInit__decimal@@Base+0xe34>
   11e24:	cbz	x2, 11e80 <PyInit__decimal@@Base+0xef8>
   11e28:	mov	x7, #0x89e80000            	// #2313682944
   11e2c:	mov	x5, #0x0                   	// #0
   11e30:	movk	x7, #0x2304, lsl #32
   11e34:	mov	x4, #0x0                   	// #0
   11e38:	movk	x7, #0x8ac7, lsl #48
   11e3c:	ldr	x6, [x0, x5, lsl #3]
   11e40:	ldr	x3, [x1, x5, lsl #3]
   11e44:	sub	x4, x6, x4
   11e48:	sub	x3, x4, x3
   11e4c:	cmp	x6, x3
   11e50:	cset	x4, cc  // cc = lo, ul, last
   11e54:	b.cs	11e5c <PyInit__decimal@@Base+0xed4>  // b.hs, b.nlast
   11e58:	add	x3, x3, x7
   11e5c:	str	x3, [x0, x5, lsl #3]
   11e60:	add	x5, x5, #0x1
   11e64:	cmp	x2, x5
   11e68:	b.ne	11e3c <PyInit__decimal@@Base+0xeb4>  // b.any
   11e6c:	mov	x3, #0xffffffff89e7ffff    	// #-1981284353
   11e70:	add	x0, x0, x2, lsl #3
   11e74:	movk	x3, #0x2304, lsl #32
   11e78:	movk	x3, #0x8ac7, lsl #48
   11e7c:	cbnz	x4, 11e84 <PyInit__decimal@@Base+0xefc>
   11e80:	ret
   11e84:	ldr	x2, [x0]
   11e88:	cmp	x2, #0x0
   11e8c:	sub	x1, x2, #0x1
   11e90:	csel	x1, x1, x3, ne  // ne = any
   11e94:	cset	x4, eq  // eq = none
   11e98:	str	x1, [x0], #8
   11e9c:	b	11e7c <PyInit__decimal@@Base+0xef4>
   11ea0:	stp	x29, x30, [sp, #-32]!
   11ea4:	mov	x11, x0
   11ea8:	mov	x13, x1
   11eac:	mov	x29, sp
   11eb0:	mov	x12, x3
   11eb4:	lsl	x10, x2, #3
   11eb8:	add	x0, sp, #0x18
   11ebc:	mov	x9, #0x0                   	// #0
   11ec0:	str	xzr, [sp, #24]
   11ec4:	cmp	x10, x9
   11ec8:	ldr	x3, [sp, #24]
   11ecc:	b.ne	11edc <PyInit__decimal@@Base+0xf54>  // b.any
   11ed0:	str	x3, [x11, x10]
   11ed4:	ldp	x29, x30, [sp], #32
   11ed8:	ret
   11edc:	ldr	x2, [x13, x9]
   11ee0:	mul	x4, x12, x2
   11ee4:	umulh	x2, x12, x2
   11ee8:	adds	x3, x4, x3
   11eec:	cset	x1, cs  // cs = hs, nlast
   11ef0:	add	x2, x2, x1
   11ef4:	add	x1, x11, x9
   11ef8:	bl	11904 <PyInit__decimal@@Base+0x97c>
   11efc:	add	x9, x9, #0x8
   11f00:	b	11ec4 <PyInit__decimal@@Base+0xf3c>
   11f04:	stp	x29, x30, [sp, #-32]!
   11f08:	mov	x11, x0
   11f0c:	add	x10, x0, x3, lsl #3
   11f10:	mov	x12, x1
   11f14:	mov	x14, x2
   11f18:	mov	x13, x4
   11f1c:	add	x18, x1, x3, lsl #3
   11f20:	add	x0, sp, #0x18
   11f24:	mov	x9, #0x0                   	// #0
   11f28:	mov	x29, sp
   11f2c:	cmp	x9, x13
   11f30:	b.ne	11f3c <PyInit__decimal@@Base+0xfb4>  // b.any
   11f34:	ldp	x29, x30, [sp], #32
   11f38:	ret
   11f3c:	add	x1, x11, x9, lsl #3
   11f40:	mov	x15, x12
   11f44:	str	xzr, [sp, #24]
   11f48:	cmp	x15, x18
   11f4c:	ldr	x4, [sp, #24]
   11f50:	b.ne	11f60 <PyInit__decimal@@Base+0xfd8>  // b.any
   11f54:	str	x4, [x10, x9, lsl #3]
   11f58:	add	x9, x9, #0x1
   11f5c:	b	11f2c <PyInit__decimal@@Base+0xfa4>
   11f60:	ldr	x2, [x14, x9, lsl #3]
   11f64:	ldr	x5, [x15], #8
   11f68:	ldr	x3, [x1]
   11f6c:	mul	x6, x5, x2
   11f70:	umulh	x5, x5, x2
   11f74:	adds	x3, x3, x6
   11f78:	cinc	x5, x5, cs  // cs = hs, nlast
   11f7c:	adds	x3, x3, x4
   11f80:	cinc	x2, x5, cs  // cs = hs, nlast
   11f84:	bl	11904 <PyInit__decimal@@Base+0x97c>
   11f88:	add	x1, x1, #0x8
   11f8c:	b	11f48 <PyInit__decimal@@Base+0xfc0>
   11f90:	stp	x29, x30, [sp, #-80]!
   11f94:	mov	x29, sp
   11f98:	str	x25, [sp, #64]
   11f9c:	mov	x25, #0x89e80000            	// #2313682944
   11fa0:	movk	x25, #0x2304, lsl #32
   11fa4:	stp	x19, x20, [sp, #16]
   11fa8:	sub	x20, x2, #0x1
   11fac:	stp	x21, x22, [sp, #32]
   11fb0:	mov	x21, x3
   11fb4:	mov	x22, x0
   11fb8:	stp	x23, x24, [sp, #48]
   11fbc:	mov	x23, x1
   11fc0:	mov	x0, #0x0                   	// #0
   11fc4:	mov	x24, #0x0                   	// #0
   11fc8:	movk	x25, #0x8ac7, lsl #48
   11fcc:	cmn	x20, #0x1
   11fd0:	b.ne	11fec <PyInit__decimal@@Base+0x1064>  // b.any
   11fd4:	ldp	x19, x20, [sp, #16]
   11fd8:	ldp	x21, x22, [sp, #32]
   11fdc:	ldp	x23, x24, [sp, #48]
   11fe0:	ldr	x25, [sp, #64]
   11fe4:	ldp	x29, x30, [sp], #80
   11fe8:	ret
   11fec:	ldr	x5, [x23, x20, lsl #3]
   11ff0:	mul	x19, x0, x25
   11ff4:	umulh	x4, x0, x25
   11ff8:	mov	x2, x21
   11ffc:	adds	x5, x5, x19
   12000:	mov	x3, #0x0                   	// #0
   12004:	cinc	x1, x4, cs  // cs = hs, nlast
   12008:	adds	x19, x24, x5
   1200c:	mov	x0, x19
   12010:	bl	242a0 <PyInit__decimal@@Base+0x13318>
   12014:	str	x0, [x22, x20, lsl #3]
   12018:	msub	x0, x21, x0, x19
   1201c:	sub	x20, x20, #0x1
   12020:	b	11fcc <PyInit__decimal@@Base+0x1044>
   12024:	sub	sp, sp, #0x4b0
   12028:	cmp	x4, x5
   1202c:	stp	x29, x30, [sp]
   12030:	mov	x29, sp
   12034:	stp	x19, x20, [sp, #16]
   12038:	stp	x21, x22, [sp, #32]
   1203c:	stp	x23, x24, [sp, #48]
   12040:	stp	x25, x26, [sp, #64]
   12044:	stp	x27, x28, [sp, #80]
   12048:	stp	x0, x1, [sp, #96]
   1204c:	b.cs	12094 <PyInit__decimal@@Base+0x110c>  // b.hs, b.nlast
   12050:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
   12054:	mov	w3, #0x25c                 	// #604
   12058:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   1205c:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   12060:	ldr	x19, [x19, #3904]
   12064:	add	x2, x2, #0x9d8
   12068:	add	x1, x1, #0xa14
   1206c:	ldr	x0, [x19]
   12070:	bl	6b10 <fprintf@plt>
   12074:	ldr	x1, [x19]
   12078:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   1207c:	add	x0, x0, #0xa23
   12080:	bl	6570 <fputs@plt>
   12084:	ldr	x1, [x19]
   12088:	mov	w0, #0xa                   	// #10
   1208c:	bl	6640 <fputc@plt>
   12090:	bl	6860 <abort@plt>
   12094:	lsl	x0, x5, #3
   12098:	str	x0, [sp, #120]
   1209c:	sub	x25, x0, #0x8
   120a0:	mov	x0, #0x89e80000            	// #2313682944
   120a4:	movk	x0, #0x2304, lsl #32
   120a8:	mov	x27, x2
   120ac:	movk	x0, #0x8ac7, lsl #48
   120b0:	str	x0, [sp, #112]
   120b4:	ldr	x22, [x3, x25]
   120b8:	mov	x26, x3
   120bc:	mov	x28, x4
   120c0:	mov	x19, x5
   120c4:	add	x22, x22, #0x1
   120c8:	sub	x23, x4, x5
   120cc:	cmp	x4, #0x3f
   120d0:	udiv	x22, x0, x22
   120d4:	b.ls	120f4 <PyInit__decimal@@Base+0x116c>  // b.plast
   120d8:	add	x0, x4, #0x1
   120dc:	mov	x1, #0x8                   	// #8
   120e0:	bl	15cd0 <PyInit__decimal@@Base+0x4d48>
   120e4:	mov	x21, x0
   120e8:	cbnz	x0, 120f8 <PyInit__decimal@@Base+0x1170>
   120ec:	mov	w19, #0xffffffff            	// #-1
   120f0:	b	121c4 <PyInit__decimal@@Base+0x123c>
   120f4:	add	x21, sp, #0xb0
   120f8:	cmp	x19, #0x3f
   120fc:	b.ls	12128 <PyInit__decimal@@Base+0x11a0>  // b.plast
   12100:	add	x0, x19, #0x1
   12104:	mov	x1, #0x8                   	// #8
   12108:	bl	15cd0 <PyInit__decimal@@Base+0x4d48>
   1210c:	mov	x20, x0
   12110:	cbnz	x0, 1212c <PyInit__decimal@@Base+0x11a4>
   12114:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   12118:	ldr	x1, [x0, #1720]
   1211c:	mov	x0, x21
   12120:	blr	x1
   12124:	b	120ec <PyInit__decimal@@Base+0x1164>
   12128:	add	x20, sp, #0x2b0
   1212c:	mov	x2, x28
   12130:	mov	x3, x22
   12134:	mov	x1, x27
   12138:	mov	x0, x21
   1213c:	bl	11ea0 <PyInit__decimal@@Base+0xf18>
   12140:	add	x24, x21, x23, lsl #3
   12144:	mov	x1, x26
   12148:	mov	x0, x20
   1214c:	mov	x3, x22
   12150:	mov	x2, x19
   12154:	add	x26, sp, #0xa0
   12158:	bl	11ea0 <PyInit__decimal@@Base+0xf18>
   1215c:	add	x28, x21, x28, lsl #3
   12160:	add	x0, x26, #0x8
   12164:	str	x0, [sp, #136]
   12168:	cmn	x23, #0x1
   1216c:	b.ne	121e8 <PyInit__decimal@@Base+0x1260>  // b.any
   12170:	ldr	x0, [sp, #104]
   12174:	cbz	x0, 12350 <PyInit__decimal@@Base+0x13c8>
   12178:	mov	x2, x19
   1217c:	mov	w19, #0x0                   	// #0
   12180:	mov	x3, x22
   12184:	mov	x1, x21
   12188:	bl	11f90 <PyInit__decimal@@Base+0x1008>
   1218c:	add	x0, sp, #0xb0
   12190:	cmp	x21, x0
   12194:	b.eq	121a8 <PyInit__decimal@@Base+0x1220>  // b.none
   12198:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1219c:	ldr	x1, [x0, #1720]
   121a0:	mov	x0, x21
   121a4:	blr	x1
   121a8:	add	x0, sp, #0x2b0
   121ac:	cmp	x20, x0
   121b0:	b.eq	121c4 <PyInit__decimal@@Base+0x123c>  // b.none
   121b4:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   121b8:	ldr	x1, [x0, #1720]
   121bc:	mov	x0, x20
   121c0:	blr	x1
   121c4:	mov	w0, w19
   121c8:	ldp	x29, x30, [sp]
   121cc:	ldp	x19, x20, [sp, #16]
   121d0:	ldp	x21, x22, [sp, #32]
   121d4:	ldp	x23, x24, [sp, #48]
   121d8:	ldp	x25, x26, [sp, #64]
   121dc:	ldp	x27, x28, [sp, #80]
   121e0:	add	sp, sp, #0x4b0
   121e4:	ret
   121e8:	ldr	x3, [x20, x25]
   121ec:	add	x0, x20, x25
   121f0:	sub	x27, x28, #0x8
   121f4:	mov	x2, #0x2                   	// #2
   121f8:	mov	x1, x27
   121fc:	str	x0, [sp, #128]
   12200:	mov	x0, x26
   12204:	bl	11f90 <PyInit__decimal@@Base+0x1008>
   12208:	mov	x10, x0
   1220c:	ldp	x0, x9, [sp, #160]
   12210:	ldr	x1, [sp, #112]
   12214:	madd	x9, x9, x1, x0
   12218:	ldr	x0, [sp, #120]
   1221c:	add	x11, x20, x0
   12220:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   12224:	movk	x0, #0x2304, lsl #32
   12228:	movk	x0, #0x8ac7, lsl #48
   1222c:	cmp	x9, x0
   12230:	b.ls	122cc <PyInit__decimal@@Base+0x1344>  // b.plast
   12234:	ldr	x0, [sp, #128]
   12238:	sub	x9, x9, #0x1
   1223c:	ldr	x0, [x0]
   12240:	adds	x10, x0, x10
   12244:	b.cc	12308 <PyInit__decimal@@Base+0x1380>  // b.lo, b.ul, b.last
   12248:	add	x11, x19, #0x1
   1224c:	add	x1, sp, #0x98
   12250:	add	x0, sp, #0x90
   12254:	mov	x10, #0x0                   	// #0
   12258:	mov	x3, #0x0                   	// #0
   1225c:	ldr	x2, [x20, x10, lsl #3]
   12260:	mul	x4, x9, x2
   12264:	umulh	x2, x9, x2
   12268:	adds	x3, x4, x3
   1226c:	cinc	x2, x2, cs  // cs = hs, nlast
   12270:	stp	x2, x3, [sp, #144]
   12274:	bl	11904 <PyInit__decimal@@Base+0x97c>
   12278:	ldr	x2, [x24, x10, lsl #3]
   1227c:	ldr	x4, [sp, #152]
   12280:	cmp	x2, x4
   12284:	sub	x2, x2, x4
   12288:	cset	x3, cc  // cc = lo, ul, last
   1228c:	cbz	x3, 12298 <PyInit__decimal@@Base+0x1310>
   12290:	ldr	x4, [sp, #112]
   12294:	add	x2, x2, x4
   12298:	str	x2, [x24, x10, lsl #3]
   1229c:	cmp	x19, x10
   122a0:	ldr	x2, [sp, #144]
   122a4:	add	x3, x3, x2
   122a8:	add	x2, x10, #0x1
   122ac:	b.ne	12320 <PyInit__decimal@@Base+0x1398>  // b.any
   122b0:	cbnz	x3, 12328 <PyInit__decimal@@Base+0x13a0>
   122b4:	ldr	x0, [sp, #96]
   122b8:	str	x9, [x0, x23, lsl #3]
   122bc:	sub	x23, x23, #0x1
   122c0:	sub	x24, x24, #0x8
   122c4:	mov	x28, x27
   122c8:	b	12168 <PyInit__decimal@@Base+0x11e0>
   122cc:	ldur	x3, [x11, #-16]
   122d0:	mov	x1, x26
   122d4:	ldr	x0, [sp, #136]
   122d8:	umulh	x2, x9, x3
   122dc:	mul	x3, x9, x3
   122e0:	bl	11904 <PyInit__decimal@@Base+0x97c>
   122e4:	ldr	x0, [sp, #168]
   122e8:	cmp	x0, x10
   122ec:	b.hi	12234 <PyInit__decimal@@Base+0x12ac>  // b.pmore
   122f0:	b.ne	12248 <PyInit__decimal@@Base+0x12c0>  // b.any
   122f4:	ldur	x0, [x28, #-16]
   122f8:	ldr	x1, [sp, #160]
   122fc:	cmp	x1, x0
   12300:	b.hi	12234 <PyInit__decimal@@Base+0x12ac>  // b.pmore
   12304:	b	12248 <PyInit__decimal@@Base+0x12c0>
   12308:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   1230c:	movk	x0, #0x2304, lsl #32
   12310:	movk	x0, #0x8ac7, lsl #48
   12314:	cmp	x10, x0
   12318:	b.ls	12220 <PyInit__decimal@@Base+0x1298>  // b.plast
   1231c:	b	12248 <PyInit__decimal@@Base+0x12c0>
   12320:	mov	x10, x2
   12324:	b	1225c <PyInit__decimal@@Base+0x12d4>
   12328:	ldr	x0, [sp, #96]
   1232c:	sub	x9, x9, #0x1
   12330:	mov	x4, x19
   12334:	mov	x3, x11
   12338:	mov	x2, x20
   1233c:	mov	x1, x24
   12340:	str	x9, [x0, x23, lsl #3]
   12344:	mov	x0, x24
   12348:	bl	11b58 <PyInit__decimal@@Base+0xbd0>
   1234c:	b	122bc <PyInit__decimal@@Base+0x1334>
   12350:	mov	x1, x19
   12354:	mov	x0, x21
   12358:	bl	11978 <PyInit__decimal@@Base+0x9f0>
   1235c:	cmp	w0, #0x0
   12360:	cset	w19, eq  // eq = none
   12364:	b	1218c <PyInit__decimal@@Base+0x1204>
   12368:	mov	x6, x0
   1236c:	mov	x0, #0x13                  	// #19
   12370:	mov	x5, x3
   12374:	stp	x29, x30, [sp, #-48]!
   12378:	mov	x9, x1
   1237c:	udiv	x10, x4, x0
   12380:	mov	x29, sp
   12384:	msub	x3, x10, x0, x4
   12388:	cbnz	x3, 123a8 <PyInit__decimal@@Base+0x1420>
   1238c:	add	x0, x6, x10, lsl #3
   12390:	sub	x5, x5, #0x1
   12394:	cmn	x5, #0x1
   12398:	b.eq	12408 <PyInit__decimal@@Base+0x1480>  // b.none
   1239c:	ldr	x1, [x9, x5, lsl #3]
   123a0:	str	x1, [x0, x5, lsl #3]
   123a4:	b	12390 <PyInit__decimal@@Base+0x1408>
   123a8:	sub	x11, x5, #0x2
   123ac:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   123b0:	sub	x5, x5, #0x1
   123b4:	add	x1, x1, #0xae8
   123b8:	mov	x12, x2
   123bc:	sub	x8, x2, #0x1
   123c0:	sub	x7, x0, x3
   123c4:	add	x0, sp, #0x28
   123c8:	ldr	x13, [x1, x3, lsl #3]
   123cc:	add	x1, sp, #0x20
   123d0:	ldr	x2, [x9, x5, lsl #3]
   123d4:	mov	x3, x7
   123d8:	bl	11998 <PyInit__decimal@@Base+0xa10>
   123dc:	ldr	x1, [sp, #40]
   123e0:	cbz	x1, 123ec <PyInit__decimal@@Base+0x1464>
   123e4:	str	x1, [x6, x8, lsl #3]
   123e8:	sub	x8, x12, #0x2
   123ec:	add	x8, x6, x8, lsl #3
   123f0:	add	x1, sp, #0x18
   123f4:	cmn	x11, #0x1
   123f8:	b.ne	1241c <PyInit__decimal@@Base+0x1494>  // b.any
   123fc:	ldr	x0, [sp, #32]
   12400:	mul	x0, x0, x13
   12404:	str	x0, [x6, x10, lsl #3]
   12408:	mov	x1, x10
   1240c:	mov	x0, x6
   12410:	bl	17b4c <PyInit__decimal@@Base+0x6bc4>
   12414:	ldp	x29, x30, [sp], #48
   12418:	ret
   1241c:	ldr	x2, [x9, x11, lsl #3]
   12420:	mov	x3, x7
   12424:	bl	11998 <PyInit__decimal@@Base+0xa10>
   12428:	sub	x11, x11, #0x1
   1242c:	ldp	x2, x3, [sp, #32]
   12430:	madd	x2, x13, x2, x3
   12434:	str	x2, [x8], #-8
   12438:	ldr	x2, [sp, #24]
   1243c:	str	x2, [sp, #32]
   12440:	b	123f4 <PyInit__decimal@@Base+0x146c>
   12444:	mov	x10, x0
   12448:	mov	x0, #0x13                  	// #19
   1244c:	stp	x29, x30, [sp, #-64]!
   12450:	mov	x6, x1
   12454:	mov	x8, x2
   12458:	udiv	x7, x3, x0
   1245c:	mov	x29, sp
   12460:	mov	x9, x3
   12464:	stp	xzr, xzr, [sp, #48]
   12468:	msub	x5, x7, x0, x3
   1246c:	cbz	x5, 1255c <PyInit__decimal@@Base+0x15d4>
   12470:	sub	x0, x0, x5
   12474:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   12478:	add	x1, x1, #0xae8
   1247c:	mov	x3, x5
   12480:	ldr	x2, [x6, x7, lsl #3]
   12484:	ldr	x13, [x1, x0, lsl #3]
   12488:	add	x1, sp, #0x38
   1248c:	add	x0, sp, #0x28
   12490:	bl	11998 <PyInit__decimal@@Base+0xa10>
   12494:	sub	x3, x5, #0x1
   12498:	ldr	x2, [sp, #56]
   1249c:	add	x0, sp, #0x30
   124a0:	bl	11998 <PyInit__decimal@@Base+0xa10>
   124a4:	ldr	x0, [sp, #56]
   124a8:	cbnz	x0, 124cc <PyInit__decimal@@Base+0x1544>
   124ac:	cmp	x9, #0x12
   124b0:	b.ls	124cc <PyInit__decimal@@Base+0x1544>  // b.plast
   124b4:	mov	x1, x7
   124b8:	mov	x0, x6
   124bc:	bl	11978 <PyInit__decimal@@Base+0x9f0>
   124c0:	cmp	w0, #0x0
   124c4:	cset	x0, eq  // eq = none
   124c8:	str	x0, [sp, #56]
   124cc:	mov	x1, #0xfffffffffffffff8    	// #-8
   124d0:	add	x12, x7, #0x1
   124d4:	mov	x11, x12
   124d8:	add	x0, sp, #0x20
   124dc:	madd	x1, x7, x1, x1
   124e0:	add	x9, x10, x1
   124e4:	add	x1, sp, #0x18
   124e8:	cmp	x11, x8
   124ec:	b.cc	12530 <PyInit__decimal@@Base+0x15a8>  // b.lo, b.ul, b.last
   124f0:	sub	x0, x8, #0x1
   124f4:	cmp	x8, x12
   124f8:	sub	x7, x0, x7
   124fc:	ldr	x0, [sp, #40]
   12500:	csel	x7, x7, xzr, cs  // cs = hs, nlast
   12504:	cbz	x0, 1250c <PyInit__decimal@@Base+0x1584>
   12508:	str	x0, [x10, x7, lsl #3]
   1250c:	ldr	x0, [sp, #48]
   12510:	cmp	x0, #0x0
   12514:	ccmp	x0, #0x5, #0x4, ne  // ne = any
   12518:	b.ne	12528 <PyInit__decimal@@Base+0x15a0>  // b.any
   1251c:	ldr	x1, [sp, #56]
   12520:	cmp	x1, #0x0
   12524:	cinc	x0, x0, ne  // ne = any
   12528:	ldp	x29, x30, [sp], #64
   1252c:	ret
   12530:	ldr	x2, [x6, x11, lsl #3]
   12534:	mov	x3, x5
   12538:	bl	11998 <PyInit__decimal@@Base+0xa10>
   1253c:	ldr	x2, [sp, #24]
   12540:	ldr	x3, [sp, #40]
   12544:	madd	x2, x13, x2, x3
   12548:	str	x2, [x9, x11, lsl #3]
   1254c:	add	x11, x11, #0x1
   12550:	ldr	x2, [sp, #32]
   12554:	str	x2, [sp, #40]
   12558:	b	124e8 <PyInit__decimal@@Base+0x1560>
   1255c:	cmp	x3, #0x12
   12560:	lsl	x3, x7, #3
   12564:	b.ls	125a8 <PyInit__decimal@@Base+0x1620>  // b.plast
   12568:	add	x0, x1, x3
   1256c:	mov	x1, #0xa7640000            	// #2808348672
   12570:	movk	x1, #0xb6b3, lsl #32
   12574:	movk	x1, #0xde0, lsl #48
   12578:	ldur	x2, [x0, #-8]
   1257c:	udiv	x0, x2, x1
   12580:	str	x0, [sp, #48]
   12584:	msub	x0, x0, x1, x2
   12588:	str	x0, [sp, #56]
   1258c:	cbnz	x0, 125a8 <PyInit__decimal@@Base+0x1620>
   12590:	sub	x1, x7, #0x1
   12594:	mov	x0, x6
   12598:	bl	11978 <PyInit__decimal@@Base+0x9f0>
   1259c:	cmp	w0, #0x0
   125a0:	cset	x0, eq  // eq = none
   125a4:	str	x0, [sp, #56]
   125a8:	add	x6, x6, x3
   125ac:	sub	x7, x8, x7
   125b0:	cmp	x7, x5
   125b4:	b.ls	1250c <PyInit__decimal@@Base+0x1584>  // b.plast
   125b8:	ldr	x0, [x6, x5, lsl #3]
   125bc:	str	x0, [x10, x5, lsl #3]
   125c0:	add	x5, x5, #0x1
   125c4:	b	125b0 <PyInit__decimal@@Base+0x1628>
   125c8:	ldr	x4, [x0]
   125cc:	mov	x5, x0
   125d0:	adds	x2, x4, x2
   125d4:	cset	w4, cs  // cs = hs, nlast
   125d8:	cmp	x2, x3
   125dc:	cset	w0, cs  // cs = hs, nlast
   125e0:	orr	w4, w4, w0
   125e4:	and	x0, x4, #0xff
   125e8:	cbz	w4, 125f0 <PyInit__decimal@@Base+0x1668>
   125ec:	sub	x2, x2, x3
   125f0:	mov	x4, #0x1                   	// #1
   125f4:	str	x2, [x5]
   125f8:	cmp	x4, x1
   125fc:	cset	w2, cc  // cc = lo, ul, last
   12600:	tst	w2, w0
   12604:	b.ne	1260c <PyInit__decimal@@Base+0x1684>  // b.any
   12608:	ret
   1260c:	ldr	x2, [x5, x4, lsl #3]
   12610:	add	x2, x2, #0x1
   12614:	cmp	x3, x2
   12618:	csel	x2, x2, xzr, ne  // ne = any
   1261c:	cset	x0, eq  // eq = none
   12620:	str	x2, [x5, x4, lsl #3]
   12624:	add	x4, x4, #0x1
   12628:	b	125f8 <PyInit__decimal@@Base+0x1670>
   1262c:	stp	x29, x30, [sp, #-32]!
   12630:	mov	x12, x0
   12634:	mov	x13, x1
   12638:	mov	x29, sp
   1263c:	mov	x10, x3
   12640:	lsl	x11, x2, #3
   12644:	add	x14, sp, #0x18
   12648:	mov	x9, #0x0                   	// #0
   1264c:	str	xzr, [sp, #24]
   12650:	cmp	x9, x11
   12654:	ldr	x0, [sp, #24]
   12658:	b.ne	12664 <PyInit__decimal@@Base+0x16dc>  // b.any
   1265c:	ldp	x29, x30, [sp], #32
   12660:	ret
   12664:	ldr	x2, [x13, x9]
   12668:	add	x1, x12, x9
   1266c:	mul	x4, x10, x2
   12670:	umulh	x2, x10, x2
   12674:	adds	x3, x4, x0
   12678:	cset	x0, cs  // cs = hs, nlast
   1267c:	add	x2, x2, x0
   12680:	mov	x0, x14
   12684:	bl	11904 <PyInit__decimal@@Base+0x97c>
   12688:	add	x9, x9, #0x8
   1268c:	b	12650 <PyInit__decimal@@Base+0x16c8>
   12690:	stp	x29, x30, [sp, #-80]!
   12694:	mov	x29, sp
   12698:	stp	x21, x22, [sp, #32]
   1269c:	mov	x21, x3
   126a0:	mov	x22, x4
   126a4:	stp	x23, x24, [sp, #48]
   126a8:	mov	x23, x2
   126ac:	mov	x24, x0
   126b0:	stp	x25, x26, [sp, #64]
   126b4:	mov	x25, x1
   126b8:	mov	x0, #0x0                   	// #0
   126bc:	mov	x26, #0x0                   	// #0
   126c0:	stp	x19, x20, [sp, #16]
   126c4:	mov	x20, #0x0                   	// #0
   126c8:	cmp	x20, x23
   126cc:	b.ne	126e8 <PyInit__decimal@@Base+0x1760>  // b.any
   126d0:	ldp	x19, x20, [sp, #16]
   126d4:	ldp	x21, x22, [sp, #32]
   126d8:	ldp	x23, x24, [sp, #48]
   126dc:	ldp	x25, x26, [sp, #64]
   126e0:	ldp	x29, x30, [sp], #80
   126e4:	ret
   126e8:	ldr	x6, [x25, x20, lsl #3]
   126ec:	mov	x2, x22
   126f0:	mov	x3, #0x0                   	// #0
   126f4:	mul	x5, x21, x6
   126f8:	umulh	x6, x21, x6
   126fc:	adds	x5, x5, x0
   12700:	cinc	x1, x6, cs  // cs = hs, nlast
   12704:	adds	x19, x26, x5
   12708:	mov	x0, x19
   1270c:	bl	242a0 <PyInit__decimal@@Base+0x13318>
   12710:	msub	x19, x22, x0, x19
   12714:	str	x19, [x24, x20, lsl #3]
   12718:	add	x20, x20, #0x1
   1271c:	b	126c8 <PyInit__decimal@@Base+0x1740>
   12720:	stp	x29, x30, [sp, #-80]!
   12724:	mov	x29, sp
   12728:	stp	x19, x20, [sp, #16]
   1272c:	sub	x20, x2, #0x1
   12730:	stp	x21, x22, [sp, #32]
   12734:	mov	x21, x3
   12738:	mov	x22, x4
   1273c:	stp	x23, x24, [sp, #48]
   12740:	mov	x24, x1
   12744:	mov	x23, x0
   12748:	mov	x0, #0x0                   	// #0
   1274c:	str	x25, [sp, #64]
   12750:	mov	x25, #0x0                   	// #0
   12754:	cmn	x20, #0x1
   12758:	b.ne	12774 <PyInit__decimal@@Base+0x17ec>  // b.any
   1275c:	ldp	x19, x20, [sp, #16]
   12760:	ldp	x21, x22, [sp, #32]
   12764:	ldp	x23, x24, [sp, #48]
   12768:	ldr	x25, [sp, #64]
   1276c:	ldp	x29, x30, [sp], #80
   12770:	ret
   12774:	ldr	x6, [x24, x20, lsl #3]
   12778:	mul	x19, x0, x22
   1277c:	umulh	x5, x0, x22
   12780:	mov	x2, x21
   12784:	adds	x6, x6, x19
   12788:	mov	x3, #0x0                   	// #0
   1278c:	cinc	x1, x5, cs  // cs = hs, nlast
   12790:	adds	x19, x25, x6
   12794:	mov	x0, x19
   12798:	bl	242a0 <PyInit__decimal@@Base+0x13318>
   1279c:	str	x0, [x23, x20, lsl #3]
   127a0:	msub	x0, x21, x0, x19
   127a4:	sub	x20, x20, #0x1
   127a8:	b	12754 <PyInit__decimal@@Base+0x17cc>
   127ac:	mov	w0, #0x8                   	// #8
   127b0:	b	65a0 <raise@plt>
   127b4:	stp	x29, x30, [sp, #-32]!
   127b8:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
   127bc:	mov	x29, sp
   127c0:	ldr	w2, [x1, #1944]
   127c4:	str	x19, [sp, #16]
   127c8:	cbz	w2, 12814 <PyInit__decimal@@Base+0x188c>
   127cc:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
   127d0:	mov	w3, #0x36                  	// #54
   127d4:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   127d8:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   127dc:	ldr	x19, [x19, #3904]
   127e0:	add	x2, x2, #0xdd8
   127e4:	add	x1, x1, #0xe12
   127e8:	ldr	x0, [x19]
   127ec:	bl	6b10 <fprintf@plt>
   127f0:	ldr	x1, [x19]
   127f4:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   127f8:	add	x0, x0, #0xe23
   127fc:	bl	6570 <fputs@plt>
   12800:	ldr	x1, [x19]
   12804:	mov	w0, #0xa                   	// #10
   12808:	ldr	x19, [sp, #16]
   1280c:	ldp	x29, x30, [sp], #32
   12810:	b	6640 <fputc@plt>
   12814:	sub	x2, x0, #0x2
   12818:	cmp	x2, #0x3e
   1281c:	b.ls	12864 <PyInit__decimal@@Base+0x18dc>  // b.plast
   12820:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
   12824:	mov	w3, #0x3b                  	// #59
   12828:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   1282c:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   12830:	ldr	x19, [x19, #3904]
   12834:	add	x2, x2, #0xdd8
   12838:	add	x1, x1, #0xa14
   1283c:	ldr	x0, [x19]
   12840:	bl	6b10 <fprintf@plt>
   12844:	ldr	x1, [x19]
   12848:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   1284c:	add	x0, x0, #0xe68
   12850:	bl	6570 <fputs@plt>
   12854:	ldr	x1, [x19]
   12858:	mov	w0, #0xa                   	// #10
   1285c:	bl	6640 <fputc@plt>
   12860:	bl	6860 <abort@plt>
   12864:	adrp	x2, 45000 <PyInit__decimal@@Base+0x34078>
   12868:	ldr	x19, [sp, #16]
   1286c:	str	x0, [x2, #1688]
   12870:	ldp	x29, x30, [sp], #32
   12874:	mov	w0, #0x1                   	// #1
   12878:	str	w0, [x1, #1944]
   1287c:	ret
   12880:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   12884:	movk	x1, #0xb6b3, lsl #32
   12888:	movk	x1, #0xde0, lsl #48
   1288c:	stp	x1, x1, [x0]
   12890:	mov	x1, #0x1                   	// #1
   12894:	movk	x1, #0x589c, lsl #16
   12898:	movk	x1, #0x494c, lsl #32
   1289c:	movk	x1, #0xf21f, lsl #48
   128a0:	str	x1, [x0, #16]
   128a4:	mov	x1, #0x4bbe                	// #19390
   128a8:	str	x1, [x0, #24]
   128ac:	mov	x1, #0x600000000           	// #25769803776
   128b0:	str	x1, [x0, #32]
   128b4:	mov	x1, #0x100000000           	// #4294967296
   128b8:	str	x1, [x0, #40]
   128bc:	ret
   128c0:	mov	x1, #0x26                  	// #38
   128c4:	str	x1, [x0]
   128c8:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   128cc:	movk	x1, #0xb6b3, lsl #32
   128d0:	movk	x1, #0xde0, lsl #48
   128d4:	str	x1, [x0, #8]
   128d8:	mov	x1, #0x1                   	// #1
   128dc:	movk	x1, #0x589c, lsl #16
   128e0:	movk	x1, #0x494c, lsl #32
   128e4:	movk	x1, #0xf21f, lsl #48
   128e8:	str	x1, [x0, #16]
   128ec:	mov	x1, #0x4bbe                	// #19390
   128f0:	str	x1, [x0, #24]
   128f4:	mov	x1, #0x400000000           	// #17179869184
   128f8:	str	x1, [x0, #32]
   128fc:	mov	x1, #0x100000000           	// #4294967296
   12900:	str	x1, [x0, #40]
   12904:	ret
   12908:	mov	x1, #0x9                   	// #9
   1290c:	str	x1, [x0]
   12910:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   12914:	movk	x1, #0xb6b3, lsl #32
   12918:	movk	x1, #0xde0, lsl #48
   1291c:	str	x1, [x0, #8]
   12920:	mov	x1, #0x1                   	// #1
   12924:	movk	x1, #0x589c, lsl #16
   12928:	movk	x1, #0x494c, lsl #32
   1292c:	movk	x1, #0xf21f, lsl #48
   12930:	str	x1, [x0, #16]
   12934:	mov	x1, #0x4bbf                	// #19391
   12938:	str	x1, [x0, #24]
   1293c:	mov	x1, #0x400000000           	// #17179869184
   12940:	str	x1, [x0, #32]
   12944:	mov	x1, #0x100000000           	// #4294967296
   12948:	str	x1, [x0, #40]
   1294c:	ret
   12950:	sub	w2, w1, #0x1
   12954:	cmp	w2, #0x1ff
   12958:	b.hi	129bc <PyInit__decimal@@Base+0x1a34>  // b.pmore
   1295c:	tst	x1, #0x1f
   12960:	b.ne	129bc <PyInit__decimal@@Base+0x1a34>  // b.any
   12964:	mov	w2, #0x20                  	// #32
   12968:	str	xzr, [x0, #24]
   1296c:	sdiv	w2, w1, w2
   12970:	add	w2, w2, w2, lsl #3
   12974:	sub	w2, w2, #0x2
   12978:	sxtw	x2, w2
   1297c:	str	x2, [x0]
   12980:	mov	w2, #0x10                  	// #16
   12984:	sdiv	w1, w1, w2
   12988:	mov	x2, #0x3                   	// #3
   1298c:	add	w1, w1, #0x3
   12990:	lsl	x1, x2, x1
   12994:	mov	x2, #0x1                   	// #1
   12998:	str	x1, [x0, #8]
   1299c:	sub	x1, x2, x1
   129a0:	str	x1, [x0, #16]
   129a4:	mov	x1, #0x600000000           	// #25769803776
   129a8:	str	x1, [x0, #32]
   129ac:	mov	x1, #0x100000001           	// #4294967297
   129b0:	str	x1, [x0, #40]
   129b4:	mov	w0, #0x0                   	// #0
   129b8:	ret
   129bc:	mov	w0, #0xffffffff            	// #-1
   129c0:	b	129b8 <PyInit__decimal@@Base+0x1a30>
   129c4:	ldr	x0, [x0]
   129c8:	ret
   129cc:	ldr	x0, [x0, #8]
   129d0:	ret
   129d4:	ldr	x0, [x0, #16]
   129d8:	ret
   129dc:	ldr	w0, [x0, #36]
   129e0:	ret
   129e4:	ldr	w0, [x0, #24]
   129e8:	ret
   129ec:	ldr	w0, [x0, #28]
   129f0:	ret
   129f4:	ldr	w0, [x0, #40]
   129f8:	ret
   129fc:	ldr	w0, [x0, #44]
   12a00:	ret
   12a04:	mov	x2, #0xffffffffa763ffff    	// #-1486618625
   12a08:	sub	x3, x1, #0x1
   12a0c:	movk	x2, #0xb6b3, lsl #32
   12a10:	movk	x2, #0xde0, lsl #48
   12a14:	cmp	x3, x2
   12a18:	b.cs	12a28 <PyInit__decimal@@Base+0x1aa0>  // b.hs, b.nlast
   12a1c:	str	x1, [x0]
   12a20:	mov	w0, #0x1                   	// #1
   12a24:	ret
   12a28:	mov	w0, #0x0                   	// #0
   12a2c:	b	12a24 <PyInit__decimal@@Base+0x1a9c>
   12a30:	mov	x2, #0xffffffffa763ffff    	// #-1486618625
   12a34:	movk	x2, #0xb6b3, lsl #32
   12a38:	movk	x2, #0xde0, lsl #48
   12a3c:	cmp	x1, x2
   12a40:	b.hi	12a50 <PyInit__decimal@@Base+0x1ac8>  // b.pmore
   12a44:	str	x1, [x0, #8]
   12a48:	mov	w0, #0x1                   	// #1
   12a4c:	ret
   12a50:	mov	w0, #0x0                   	// #0
   12a54:	b	12a4c <PyInit__decimal@@Base+0x1ac4>
   12a58:	mov	x2, #0xffffffffa763ffff    	// #-1486618625
   12a5c:	movk	x2, #0xb6b3, lsl #32
   12a60:	movk	x2, #0xde0, lsl #48
   12a64:	add	x3, x1, x2
   12a68:	cmp	x3, x2
   12a6c:	b.hi	12a7c <PyInit__decimal@@Base+0x1af4>  // b.pmore
   12a70:	str	x1, [x0, #16]
   12a74:	mov	w0, #0x1                   	// #1
   12a78:	ret
   12a7c:	mov	w0, #0x0                   	// #0
   12a80:	b	12a78 <PyInit__decimal@@Base+0x1af0>
   12a84:	cmp	w1, #0x8
   12a88:	b.hi	12a98 <PyInit__decimal@@Base+0x1b10>  // b.pmore
   12a8c:	str	w1, [x0, #36]
   12a90:	mov	w0, #0x1                   	// #1
   12a94:	ret
   12a98:	mov	w0, #0x0                   	// #0
   12a9c:	b	12a94 <PyInit__decimal@@Base+0x1b0c>
   12aa0:	mov	w2, #0x7fff                	// #32767
   12aa4:	cmp	w1, w2
   12aa8:	b.hi	12ab8 <PyInit__decimal@@Base+0x1b30>  // b.pmore
   12aac:	str	w1, [x0, #24]
   12ab0:	mov	w0, #0x1                   	// #1
   12ab4:	ret
   12ab8:	mov	w0, #0x0                   	// #0
   12abc:	b	12ab4 <PyInit__decimal@@Base+0x1b2c>
   12ac0:	mov	w2, #0x7fff                	// #32767
   12ac4:	cmp	w1, w2
   12ac8:	b.hi	12ad8 <PyInit__decimal@@Base+0x1b50>  // b.pmore
   12acc:	str	w1, [x0, #28]
   12ad0:	mov	w0, #0x1                   	// #1
   12ad4:	ret
   12ad8:	mov	w0, #0x0                   	// #0
   12adc:	b	12ad4 <PyInit__decimal@@Base+0x1b4c>
   12ae0:	cmp	w1, #0x1
   12ae4:	b.hi	12af4 <PyInit__decimal@@Base+0x1b6c>  // b.pmore
   12ae8:	str	w1, [x0, #40]
   12aec:	mov	w0, #0x1                   	// #1
   12af0:	ret
   12af4:	mov	w0, #0x0                   	// #0
   12af8:	b	12af0 <PyInit__decimal@@Base+0x1b68>
   12afc:	cmp	w1, #0x1
   12b00:	b.hi	12b10 <PyInit__decimal@@Base+0x1b88>  // b.pmore
   12b04:	str	w1, [x0, #44]
   12b08:	mov	w0, #0x1                   	// #1
   12b0c:	ret
   12b10:	mov	w0, #0x0                   	// #0
   12b14:	b	12b0c <PyInit__decimal@@Base+0x1b84>
   12b18:	ldr	w3, [x0, #28]
   12b1c:	orr	w3, w3, w1
   12b20:	str	w3, [x0, #28]
   12b24:	ldr	w3, [x0, #24]
   12b28:	ands	w1, w1, w3
   12b2c:	b.eq	12b44 <PyInit__decimal@@Base+0x1bbc>  // b.none
   12b30:	str	w1, [x0, #32]
   12b34:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
   12b38:	ldr	x1, [x1, #1440]
   12b3c:	mov	x16, x1
   12b40:	br	x16
   12b44:	ret
   12b48:	mov	x3, x0
   12b4c:	mov	x2, x1
   12b50:	stp	x29, x30, [sp, #-16]!
   12b54:	mov	x29, sp
   12b58:	bl	128c0 <PyInit__decimal@@Base+0x1938>
   12b5c:	sub	x1, x2, #0x1
   12b60:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   12b64:	movk	x0, #0xb6b3, lsl #32
   12b68:	movk	x0, #0xde0, lsl #48
   12b6c:	cmp	x1, x0
   12b70:	b.cc	12b84 <PyInit__decimal@@Base+0x1bfc>  // b.lo, b.ul, b.last
   12b74:	ldp	x29, x30, [sp], #16
   12b78:	mov	x0, x3
   12b7c:	mov	w1, #0x80                  	// #128
   12b80:	b	12b18 <PyInit__decimal@@Base+0x1b90>
   12b84:	add	x0, x2, #0x12
   12b88:	mov	x1, #0x40                  	// #64
   12b8c:	ldp	x29, x30, [sp], #16
   12b90:	str	x2, [x3]
   12b94:	mov	x2, #0x13                  	// #19
   12b98:	sdiv	x0, x0, x2
   12b9c:	lsl	x0, x0, #1
   12ba0:	cmp	x0, #0x40
   12ba4:	csel	x0, x0, x1, le
   12ba8:	mov	x1, #0x2                   	// #2
   12bac:	cmp	x0, #0x2
   12bb0:	csel	x0, x0, x1, ge  // ge = tcont
   12bb4:	b	127b4 <PyInit__decimal@@Base+0x182c>
   12bb8:	mul	x3, x0, x1
   12bbc:	umulh	x0, x0, x1
   12bc0:	subs	x4, x3, x0
   12bc4:	cmp	x3, x0
   12bc8:	cset	x5, cc  // cc = lo, ul, last
   12bcc:	tbz	x2, #32, 12c1c <PyInit__decimal@@Base+0x1c94>
   12bd0:	lsr	x1, x0, #32
   12bd4:	lsl	x0, x0, #32
   12bd8:	adds	x0, x0, x4
   12bdc:	sub	x1, x1, x5
   12be0:	cinc	x1, x1, cs  // cs = hs, nlast
   12be4:	subs	x3, x0, x1
   12be8:	cmp	x0, x1
   12bec:	lsr	x4, x1, #32
   12bf0:	lsl	x1, x1, #32
   12bf4:	sbc	x4, x4, xzr
   12bf8:	adds	x1, x3, x1
   12bfc:	cset	x3, cs  // cs = hs, nlast
   12c00:	mov	x0, x1
   12c04:	add	x4, x4, x3
   12c08:	cbnz	x4, 12c14 <PyInit__decimal@@Base+0x1c8c>
   12c0c:	cmp	x1, x2
   12c10:	b.cc	12c18 <PyInit__decimal@@Base+0x1c90>  // b.lo, b.ul, b.last
   12c14:	sub	x0, x1, x2
   12c18:	ret
   12c1c:	tbz	x2, #34, 12c6c <PyInit__decimal@@Base+0x1ce4>
   12c20:	lsr	x3, x0, #30
   12c24:	lsl	x0, x0, #34
   12c28:	adds	x0, x0, x4
   12c2c:	sub	x3, x3, x5
   12c30:	cinc	x3, x3, cs  // cs = hs, nlast
   12c34:	subs	x4, x0, x3
   12c38:	cmp	x0, x3
   12c3c:	lsr	x1, x3, #30
   12c40:	lsl	x3, x3, #34
   12c44:	sbc	x1, x1, xzr
   12c48:	adds	x3, x4, x3
   12c4c:	cinc	x1, x1, cs  // cs = hs, nlast
   12c50:	subs	x0, x3, x1
   12c54:	lsr	x4, x1, #30
   12c58:	cmp	x3, x1
   12c5c:	sbc	x4, x4, xzr
   12c60:	lsl	x1, x1, #34
   12c64:	adds	x1, x0, x1
   12c68:	b	12bfc <PyInit__decimal@@Base+0x1c74>
   12c6c:	lsr	x3, x0, #24
   12c70:	lsl	x0, x0, #40
   12c74:	adds	x0, x0, x4
   12c78:	sub	x3, x3, x5
   12c7c:	cinc	x3, x3, cs  // cs = hs, nlast
   12c80:	subs	x4, x0, x3
   12c84:	cmp	x0, x3
   12c88:	lsr	x1, x3, #24
   12c8c:	lsl	x3, x3, #40
   12c90:	sbc	x1, x1, xzr
   12c94:	adds	x3, x4, x3
   12c98:	cinc	x1, x1, cs  // cs = hs, nlast
   12c9c:	subs	x0, x3, x1
   12ca0:	lsr	x4, x1, #24
   12ca4:	cmp	x3, x1
   12ca8:	sbc	x4, x4, xzr
   12cac:	lsl	x1, x1, #40
   12cb0:	b	12c64 <PyInit__decimal@@Base+0x1cdc>
   12cb4:	stp	x29, x30, [sp, #-16]!
   12cb8:	mov	x8, x0
   12cbc:	mov	x6, x1
   12cc0:	mov	x29, sp
   12cc4:	ldr	x0, [x0]
   12cc8:	mov	x7, x2
   12ccc:	mov	x1, x7
   12cd0:	mov	x2, x3
   12cd4:	bl	12bb8 <PyInit__decimal@@Base+0x1c30>
   12cd8:	str	x0, [x8]
   12cdc:	mov	x1, x7
   12ce0:	ldr	x0, [x6]
   12ce4:	bl	12bb8 <PyInit__decimal@@Base+0x1c30>
   12ce8:	ldp	x29, x30, [sp], #16
   12cec:	str	x0, [x6]
   12cf0:	ret
   12cf4:	mov	x6, x0
   12cf8:	mov	x7, x1
   12cfc:	mov	x8, #0x1                   	// #1
   12d00:	cbnz	x1, 12d0c <PyInit__decimal@@Base+0x1d84>
   12d04:	mov	x0, x8
   12d08:	ret
   12d0c:	stp	x29, x30, [sp, #-16]!
   12d10:	mov	x29, sp
   12d14:	tbz	w7, #0, 12d28 <PyInit__decimal@@Base+0x1da0>
   12d18:	mov	x0, x8
   12d1c:	mov	x1, x6
   12d20:	bl	12bb8 <PyInit__decimal@@Base+0x1c30>
   12d24:	mov	x8, x0
   12d28:	mov	x1, x6
   12d2c:	mov	x0, x6
   12d30:	bl	12bb8 <PyInit__decimal@@Base+0x1c30>
   12d34:	mov	x6, x0
   12d38:	lsr	x7, x7, #1
   12d3c:	cbnz	x7, 12d14 <PyInit__decimal@@Base+0x1d8c>
   12d40:	mov	x0, x8
   12d44:	ldp	x29, x30, [sp], #16
   12d48:	ret
   12d4c:	stp	x29, x30, [sp, #-112]!
   12d50:	mov	x29, sp
   12d54:	stp	x19, x20, [sp, #16]
   12d58:	mov	x19, x0
   12d5c:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   12d60:	add	x0, x0, #0xdc0
   12d64:	stp	x23, x24, [sp, #48]
   12d68:	mov	w24, w3
   12d6c:	mov	x20, x2
   12d70:	stp	x21, x22, [sp, #32]
   12d74:	ldr	x23, [x0, w24, sxtw #3]
   12d78:	mov	x0, x20
   12d7c:	stp	x25, x26, [sp, #64]
   12d80:	mov	x26, x1
   12d84:	mov	x2, x23
   12d88:	sub	x1, x23, #0x2
   12d8c:	bl	12cf4 <PyInit__decimal@@Base+0x1d6c>
   12d90:	mov	x25, x0
   12d94:	cbz	x20, 12dec <PyInit__decimal@@Base+0x1e64>
   12d98:	sub	x0, x20, #0x1
   12d9c:	tst	x0, x20
   12da0:	b.ne	12dec <PyInit__decimal@@Base+0x1e64>  // b.any
   12da4:	cmp	x20, #0x1, lsl #12
   12da8:	b.hi	12e00 <PyInit__decimal@@Base+0x1e78>  // b.pmore
   12dac:	adrp	x22, 13000 <PyInit__decimal@@Base+0x2078>
   12db0:	adrp	x21, 13000 <PyInit__decimal@@Base+0x2078>
   12db4:	add	x22, x22, #0x860
   12db8:	add	x21, x21, #0x7f8
   12dbc:	mov	w2, w24
   12dc0:	mov	x1, x20
   12dc4:	mov	x0, x19
   12dc8:	blr	x21
   12dcc:	cbnz	w0, 12e14 <PyInit__decimal@@Base+0x1e8c>
   12dd0:	mov	w0, #0x0                   	// #0
   12dd4:	ldp	x19, x20, [sp, #16]
   12dd8:	ldp	x21, x22, [sp, #32]
   12ddc:	ldp	x23, x24, [sp, #48]
   12de0:	ldp	x25, x26, [sp, #64]
   12de4:	ldp	x29, x30, [sp], #112
   12de8:	ret
   12dec:	adrp	x22, 13000 <PyInit__decimal@@Base+0x2078>
   12df0:	adrp	x21, 13000 <PyInit__decimal@@Base+0x2078>
   12df4:	add	x22, x22, #0xc7c
   12df8:	add	x21, x21, #0xaf4
   12dfc:	b	12dbc <PyInit__decimal@@Base+0x1e34>
   12e00:	adrp	x22, 23000 <PyInit__decimal@@Base+0x12078>
   12e04:	adrp	x21, 23000 <PyInit__decimal@@Base+0x12078>
   12e08:	add	x22, x22, #0xa1c
   12e0c:	add	x21, x21, #0x7ec
   12e10:	b	12dbc <PyInit__decimal@@Base+0x1e34>
   12e14:	mov	w2, w24
   12e18:	mov	x1, x20
   12e1c:	mov	x0, x26
   12e20:	blr	x21
   12e24:	cbz	w0, 12dd0 <PyInit__decimal@@Base+0x1e48>
   12e28:	sub	x9, x20, #0x1
   12e2c:	mov	x7, #0x8                   	// #8
   12e30:	mov	x6, #0x0                   	// #0
   12e34:	cmp	x9, x6
   12e38:	b.hi	12e78 <PyInit__decimal@@Base+0x1ef0>  // b.pmore
   12e3c:	mov	w2, w24
   12e40:	mov	x1, x20
   12e44:	mov	x0, x19
   12e48:	blr	x22
   12e4c:	cbz	w0, 12dd0 <PyInit__decimal@@Base+0x1e48>
   12e50:	sub	x20, x20, #0x3
   12e54:	add	x11, sp, #0x58
   12e58:	add	x12, sp, #0x50
   12e5c:	add	x13, sp, #0x68
   12e60:	add	x14, sp, #0x60
   12e64:	mov	x10, #0x0                   	// #0
   12e68:	cmp	x20, x10
   12e6c:	b.hi	12eb4 <PyInit__decimal@@Base+0x1f2c>  // b.pmore
   12e70:	mov	w0, #0x1                   	// #1
   12e74:	b	12dd4 <PyInit__decimal@@Base+0x1e4c>
   12e78:	ldr	x10, [x19, x7]
   12e7c:	mov	x2, x23
   12e80:	ldr	x11, [x26, x7]
   12e84:	ldr	x1, [x26, x6, lsl #3]
   12e88:	ldr	x0, [x19, x6, lsl #3]
   12e8c:	bl	12bb8 <PyInit__decimal@@Base+0x1c30>
   12e90:	mov	x8, x0
   12e94:	mov	x1, x11
   12e98:	mov	x0, x10
   12e9c:	bl	12bb8 <PyInit__decimal@@Base+0x1c30>
   12ea0:	str	x8, [x19, x6, lsl #3]
   12ea4:	add	x6, x6, #0x2
   12ea8:	str	x0, [x19, x7]
   12eac:	add	x7, x7, #0x10
   12eb0:	b	12e34 <PyInit__decimal@@Base+0x1eac>
   12eb4:	ldr	x0, [x19]
   12eb8:	str	x0, [sp, #80]
   12ebc:	ldr	x0, [x19, #8]
   12ec0:	str	x0, [sp, #88]
   12ec4:	ldr	x0, [x19, #16]
   12ec8:	str	x0, [sp, #96]
   12ecc:	ldr	x0, [x19, #24]
   12ed0:	mov	x1, x11
   12ed4:	mov	x3, x23
   12ed8:	mov	x2, x25
   12edc:	str	x0, [sp, #104]
   12ee0:	mov	x0, x12
   12ee4:	bl	12cb4 <PyInit__decimal@@Base+0x1d2c>
   12ee8:	mov	x0, x14
   12eec:	mov	x3, x23
   12ef0:	mov	x2, x25
   12ef4:	mov	x1, x13
   12ef8:	bl	12cb4 <PyInit__decimal@@Base+0x1d2c>
   12efc:	ldr	x0, [sp, #80]
   12f00:	str	x0, [x19]
   12f04:	ldr	x0, [sp, #88]
   12f08:	str	x0, [x19, #8]
   12f0c:	ldr	x0, [sp, #96]
   12f10:	str	x0, [x19, #16]
   12f14:	ldr	x0, [sp, #104]
   12f18:	add	x10, x10, #0x4
   12f1c:	add	x19, x19, #0x20
   12f20:	stur	x0, [x19, #-8]
   12f24:	b	12e68 <PyInit__decimal@@Base+0x1ee0>
   12f28:	stp	x29, x30, [sp, #-96]!
   12f2c:	mov	x29, sp
   12f30:	stp	x19, x20, [sp, #16]
   12f34:	mov	x19, x0
   12f38:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   12f3c:	add	x0, x0, #0xdc0
   12f40:	stp	x23, x24, [sp, #48]
   12f44:	mov	w24, w2
   12f48:	stp	x21, x22, [sp, #32]
   12f4c:	mov	x20, x1
   12f50:	ldr	x22, [x0, w24, sxtw #3]
   12f54:	mov	x0, x20
   12f58:	mov	x2, x22
   12f5c:	sub	x1, x22, #0x2
   12f60:	bl	12cf4 <PyInit__decimal@@Base+0x1d6c>
   12f64:	mov	x23, x0
   12f68:	cbz	x20, 12fbc <PyInit__decimal@@Base+0x2034>
   12f6c:	sub	x0, x20, #0x1
   12f70:	tst	x0, x20
   12f74:	b.ne	12fbc <PyInit__decimal@@Base+0x2034>  // b.any
   12f78:	cmp	x20, #0x1, lsl #12
   12f7c:	b.hi	12fd0 <PyInit__decimal@@Base+0x2048>  // b.pmore
   12f80:	adrp	x21, 13000 <PyInit__decimal@@Base+0x2078>
   12f84:	adrp	x3, 13000 <PyInit__decimal@@Base+0x2078>
   12f88:	add	x21, x21, #0x860
   12f8c:	add	x3, x3, #0x7f8
   12f90:	mov	w2, w24
   12f94:	mov	x1, x20
   12f98:	mov	x0, x19
   12f9c:	blr	x3
   12fa0:	cbnz	w0, 13058 <PyInit__decimal@@Base+0x20d0>
   12fa4:	mov	w0, #0x0                   	// #0
   12fa8:	ldp	x19, x20, [sp, #16]
   12fac:	ldp	x21, x22, [sp, #32]
   12fb0:	ldp	x23, x24, [sp, #48]
   12fb4:	ldp	x29, x30, [sp], #96
   12fb8:	ret
   12fbc:	adrp	x21, 13000 <PyInit__decimal@@Base+0x2078>
   12fc0:	adrp	x3, 13000 <PyInit__decimal@@Base+0x2078>
   12fc4:	add	x21, x21, #0xc7c
   12fc8:	add	x3, x3, #0xaf4
   12fcc:	b	12f90 <PyInit__decimal@@Base+0x2008>
   12fd0:	adrp	x21, 23000 <PyInit__decimal@@Base+0x12078>
   12fd4:	adrp	x3, 23000 <PyInit__decimal@@Base+0x12078>
   12fd8:	add	x21, x21, #0xa1c
   12fdc:	add	x3, x3, #0x7ec
   12fe0:	b	12f90 <PyInit__decimal@@Base+0x2008>
   12fe4:	ldr	x10, [x8, x6, lsl #3]
   12fe8:	mov	x2, x22
   12fec:	ldr	x1, [x19, x6, lsl #3]
   12ff0:	mov	x0, x1
   12ff4:	bl	12bb8 <PyInit__decimal@@Base+0x1c30>
   12ff8:	mov	x7, x0
   12ffc:	mov	x1, x10
   13000:	mov	x0, x10
   13004:	bl	12bb8 <PyInit__decimal@@Base+0x1c30>
   13008:	str	x7, [x19, x6, lsl #3]
   1300c:	str	x0, [x8, x6, lsl #3]
   13010:	add	x6, x6, #0x2
   13014:	cmp	x9, x6
   13018:	b.hi	12fe4 <PyInit__decimal@@Base+0x205c>  // b.pmore
   1301c:	mov	w2, w24
   13020:	mov	x1, x20
   13024:	mov	x0, x19
   13028:	blr	x21
   1302c:	cbz	w0, 12fa4 <PyInit__decimal@@Base+0x201c>
   13030:	sub	x20, x20, #0x3
   13034:	add	x11, sp, #0x48
   13038:	add	x12, sp, #0x40
   1303c:	add	x13, sp, #0x58
   13040:	add	x14, sp, #0x50
   13044:	mov	x10, #0x0                   	// #0
   13048:	cmp	x20, x10
   1304c:	b.hi	13068 <PyInit__decimal@@Base+0x20e0>  // b.pmore
   13050:	mov	w0, #0x1                   	// #1
   13054:	b	12fa8 <PyInit__decimal@@Base+0x2020>
   13058:	sub	x9, x20, #0x1
   1305c:	add	x8, x19, #0x8
   13060:	mov	x6, #0x0                   	// #0
   13064:	b	13014 <PyInit__decimal@@Base+0x208c>
   13068:	ldr	x0, [x19]
   1306c:	str	x0, [sp, #64]
   13070:	ldr	x0, [x19, #8]
   13074:	str	x0, [sp, #72]
   13078:	ldr	x0, [x19, #16]
   1307c:	str	x0, [sp, #80]
   13080:	ldr	x0, [x19, #24]
   13084:	mov	x1, x11
   13088:	mov	x3, x22
   1308c:	mov	x2, x23
   13090:	str	x0, [sp, #88]
   13094:	mov	x0, x12
   13098:	bl	12cb4 <PyInit__decimal@@Base+0x1d2c>
   1309c:	mov	x0, x14
   130a0:	mov	x3, x22
   130a4:	mov	x2, x23
   130a8:	mov	x1, x13
   130ac:	bl	12cb4 <PyInit__decimal@@Base+0x1d2c>
   130b0:	ldr	x0, [sp, #64]
   130b4:	str	x0, [x19]
   130b8:	ldr	x0, [sp, #72]
   130bc:	str	x0, [x19, #8]
   130c0:	ldr	x0, [sp, #80]
   130c4:	str	x0, [x19, #16]
   130c8:	ldr	x0, [sp, #88]
   130cc:	add	x10, x10, #0x4
   130d0:	add	x19, x19, #0x20
   130d4:	stur	x0, [x19, #-8]
   130d8:	b	13048 <PyInit__decimal@@Base+0x20c0>
   130dc:	mul	x3, x0, x1
   130e0:	umulh	x0, x0, x1
   130e4:	subs	x4, x3, x0
   130e8:	cmp	x3, x0
   130ec:	cset	x5, cc  // cc = lo, ul, last
   130f0:	tbz	x2, #32, 13140 <PyInit__decimal@@Base+0x21b8>
   130f4:	lsr	x1, x0, #32
   130f8:	lsl	x0, x0, #32
   130fc:	adds	x0, x0, x4
   13100:	sub	x1, x1, x5
   13104:	cinc	x1, x1, cs  // cs = hs, nlast
   13108:	subs	x3, x0, x1
   1310c:	cmp	x0, x1
   13110:	lsr	x4, x1, #32
   13114:	lsl	x1, x1, #32
   13118:	sbc	x4, x4, xzr
   1311c:	adds	x1, x3, x1
   13120:	cset	x3, cs  // cs = hs, nlast
   13124:	mov	x0, x1
   13128:	add	x4, x4, x3
   1312c:	cbnz	x4, 13138 <PyInit__decimal@@Base+0x21b0>
   13130:	cmp	x1, x2
   13134:	b.cc	1313c <PyInit__decimal@@Base+0x21b4>  // b.lo, b.ul, b.last
   13138:	sub	x0, x1, x2
   1313c:	ret
   13140:	tbz	x2, #34, 13190 <PyInit__decimal@@Base+0x2208>
   13144:	lsr	x3, x0, #30
   13148:	lsl	x0, x0, #34
   1314c:	adds	x0, x0, x4
   13150:	sub	x3, x3, x5
   13154:	cinc	x3, x3, cs  // cs = hs, nlast
   13158:	subs	x4, x0, x3
   1315c:	cmp	x0, x3
   13160:	lsr	x1, x3, #30
   13164:	lsl	x3, x3, #34
   13168:	sbc	x1, x1, xzr
   1316c:	adds	x3, x4, x3
   13170:	cinc	x1, x1, cs  // cs = hs, nlast
   13174:	subs	x0, x3, x1
   13178:	lsr	x4, x1, #30
   1317c:	cmp	x3, x1
   13180:	sbc	x4, x4, xzr
   13184:	lsl	x1, x1, #34
   13188:	adds	x1, x0, x1
   1318c:	b	13120 <PyInit__decimal@@Base+0x2198>
   13190:	lsr	x3, x0, #24
   13194:	lsl	x0, x0, #40
   13198:	adds	x0, x0, x4
   1319c:	sub	x3, x3, x5
   131a0:	cinc	x3, x3, cs  // cs = hs, nlast
   131a4:	subs	x4, x0, x3
   131a8:	cmp	x0, x3
   131ac:	lsr	x1, x3, #24
   131b0:	lsl	x3, x3, #40
   131b4:	sbc	x1, x1, xzr
   131b8:	adds	x3, x4, x3
   131bc:	cinc	x1, x1, cs  // cs = hs, nlast
   131c0:	subs	x0, x3, x1
   131c4:	lsr	x4, x1, #24
   131c8:	cmp	x3, x1
   131cc:	sbc	x4, x4, xzr
   131d0:	lsl	x1, x1, #40
   131d4:	b	13188 <PyInit__decimal@@Base+0x2200>
   131d8:	stp	x29, x30, [sp, #-192]!
   131dc:	mov	x29, sp
   131e0:	stp	x21, x22, [sp, #32]
   131e4:	adrp	x22, 2a000 <PyInit__decimal@@Base+0x19078>
   131e8:	mov	x21, #0x0                   	// #0
   131ec:	stp	x23, x24, [sp, #48]
   131f0:	mov	x23, x0
   131f4:	mov	x24, #0x89e80000            	// #2313682944
   131f8:	ldr	x0, [x22, #3520]
   131fc:	str	x0, [sp, #104]
   13200:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   13204:	movk	x24, #0x2304, lsl #32
   13208:	add	x22, x22, #0xdc0
   1320c:	movk	x24, #0x8ac7, lsl #48
   13210:	ldr	x0, [x0, #3488]
   13214:	str	x0, [sp, #128]
   13218:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   1321c:	stp	x19, x20, [sp, #16]
   13220:	mov	x20, #0x0                   	// #0
   13224:	ldr	x0, [x0, #3480]
   13228:	str	x0, [sp, #136]
   1322c:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   13230:	stp	x25, x26, [sp, #64]
   13234:	mov	x25, #0x0                   	// #0
   13238:	ldr	x0, [x0, #3472]
   1323c:	str	x0, [sp, #112]
   13240:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   13244:	mov	x26, #0x0                   	// #0
   13248:	stp	x27, x28, [sp, #80]
   1324c:	mov	x27, #0x0                   	// #0
   13250:	ldr	x0, [x0, #3464]
   13254:	str	x0, [sp, #120]
   13258:	stp	x1, x2, [sp, #144]
   1325c:	str	x3, [sp, #160]
   13260:	ldr	x0, [sp, #160]
   13264:	cmp	x26, x0
   13268:	b.ne	13288 <PyInit__decimal@@Base+0x2300>  // b.any
   1326c:	ldp	x19, x20, [sp, #16]
   13270:	ldp	x21, x22, [sp, #32]
   13274:	ldp	x23, x24, [sp, #48]
   13278:	ldp	x25, x26, [sp, #64]
   1327c:	ldp	x27, x28, [sp, #80]
   13280:	ldp	x29, x30, [sp], #192
   13284:	ret
   13288:	ldr	x0, [sp, #144]
   1328c:	ldr	x2, [x22, #8]
   13290:	ldr	x1, [x0, x26, lsl #3]
   13294:	ldr	x0, [sp, #152]
   13298:	cmp	x1, x2
   1329c:	ldr	x19, [x23, x26, lsl #3]
   132a0:	ldr	x8, [x0, x26, lsl #3]
   132a4:	b.cc	132ac <PyInit__decimal@@Base+0x2324>  // b.lo, b.ul, b.last
   132a8:	sub	x1, x1, x2
   132ac:	subs	x3, x19, x2
   132b0:	csel	x3, x3, x19, cs  // cs = hs, nlast
   132b4:	subs	x0, x1, x3
   132b8:	b.cs	132c0 <PyInit__decimal@@Base+0x2338>  // b.hs, b.nlast
   132bc:	add	x0, x0, x2
   132c0:	ldr	x1, [sp, #128]
   132c4:	str	x8, [sp, #184]
   132c8:	bl	130dc <PyInit__decimal@@Base+0x2154>
   132cc:	ldr	x1, [sp, #104]
   132d0:	mov	x3, #0x0                   	// #0
   132d4:	ldr	x2, [sp, #104]
   132d8:	mul	x1, x1, x0
   132dc:	umulh	x0, x2, x0
   132e0:	adds	x19, x19, x1
   132e4:	ldr	x2, [x22, #16]
   132e8:	cinc	x28, x0, cs  // cs = hs, nlast
   132ec:	adds	x7, x20, x19
   132f0:	stp	x2, x7, [sp, #168]
   132f4:	mov	x0, x7
   132f8:	udiv	x1, x28, x2
   132fc:	msub	x1, x1, x2, x28
   13300:	bl	242a0 <PyInit__decimal@@Base+0x13318>
   13304:	ldp	x2, x7, [sp, #168]
   13308:	ldr	x8, [sp, #184]
   1330c:	mul	x1, x2, x0
   13310:	sub	x0, x8, x7
   13314:	sub	x7, x7, x1
   13318:	add	x0, x0, x1
   1331c:	cmp	x8, x7
   13320:	b.cs	13328 <PyInit__decimal@@Base+0x23a0>  // b.hs, b.nlast
   13324:	add	x0, x0, x2
   13328:	ldr	x1, [sp, #136]
   1332c:	bl	130dc <PyInit__decimal@@Base+0x2154>
   13330:	ldr	x1, [sp, #112]
   13334:	mul	x3, x1, x0
   13338:	umulh	x2, x1, x0
   1333c:	ldr	x1, [sp, #120]
   13340:	mul	x7, x0, x1
   13344:	umulh	x1, x0, x1
   13348:	adds	x2, x2, x7
   1334c:	adc	x25, x25, x1
   13350:	adds	x19, x19, x3
   13354:	adc	x2, x28, x2
   13358:	adds	x19, x19, x27
   1335c:	cinc	x0, x2, cs  // cs = hs, nlast
   13360:	adds	x21, x21, x0
   13364:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   13368:	cset	x1, cs  // cs = hs, nlast
   1336c:	cmp	x28, x2
   13370:	cinc	x1, x1, hi  // hi = pmore
   13374:	movk	x0, #0x2304, lsl #32
   13378:	add	x1, x1, x25
   1337c:	movk	x0, #0x8ac7, lsl #48
   13380:	cmp	x1, x0
   13384:	b.ls	133ec <PyInit__decimal@@Base+0x2464>  // b.plast
   13388:	cmp	x1, x24
   1338c:	mov	x25, #0x1                   	// #1
   13390:	cset	x0, cs  // cs = hs, nlast
   13394:	msub	x1, x0, x24, x1
   13398:	adds	x27, x20, x21
   1339c:	mov	x2, #0x89e80000            	// #2313682944
   133a0:	movk	x2, #0x2304, lsl #32
   133a4:	mov	x0, x27
   133a8:	movk	x2, #0x8ac7, lsl #48
   133ac:	mov	x3, #0x0                   	// #0
   133b0:	bl	242a0 <PyInit__decimal@@Base+0x13318>
   133b4:	mov	x21, x0
   133b8:	adds	x19, x20, x19
   133bc:	mov	x2, #0x89e80000            	// #2313682944
   133c0:	movk	x2, #0x2304, lsl #32
   133c4:	mov	x0, x19
   133c8:	msub	x1, x21, x24, x27
   133cc:	movk	x2, #0x8ac7, lsl #48
   133d0:	mov	x3, #0x0                   	// #0
   133d4:	bl	242a0 <PyInit__decimal@@Base+0x13318>
   133d8:	msub	x19, x0, x24, x19
   133dc:	mov	x27, x0
   133e0:	str	x19, [x23, x26, lsl #3]
   133e4:	add	x26, x26, #0x1
   133e8:	b	13260 <PyInit__decimal@@Base+0x22d8>
   133ec:	mov	x25, #0x0                   	// #0
   133f0:	b	13398 <PyInit__decimal@@Base+0x2410>
   133f4:	adds	x0, x0, x1
   133f8:	b.cc	13400 <PyInit__decimal@@Base+0x2478>  // b.lo, b.ul, b.last
   133fc:	sub	x0, x0, x2
   13400:	cmp	x0, x2
   13404:	b.cc	1340c <PyInit__decimal@@Base+0x2484>  // b.lo, b.ul, b.last
   13408:	sub	x0, x0, x2
   1340c:	ret
   13410:	mul	x3, x0, x1
   13414:	umulh	x0, x0, x1
   13418:	subs	x4, x3, x0
   1341c:	cmp	x3, x0
   13420:	cset	x5, cc  // cc = lo, ul, last
   13424:	tbz	x2, #32, 13474 <PyInit__decimal@@Base+0x24ec>
   13428:	lsr	x1, x0, #32
   1342c:	lsl	x0, x0, #32
   13430:	adds	x0, x0, x4
   13434:	sub	x1, x1, x5
   13438:	cinc	x1, x1, cs  // cs = hs, nlast
   1343c:	subs	x3, x0, x1
   13440:	cmp	x0, x1
   13444:	lsr	x4, x1, #32
   13448:	lsl	x1, x1, #32
   1344c:	sbc	x4, x4, xzr
   13450:	adds	x1, x3, x1
   13454:	cset	x3, cs  // cs = hs, nlast
   13458:	mov	x0, x1
   1345c:	add	x4, x4, x3
   13460:	cbnz	x4, 1346c <PyInit__decimal@@Base+0x24e4>
   13464:	cmp	x1, x2
   13468:	b.cc	13470 <PyInit__decimal@@Base+0x24e8>  // b.lo, b.ul, b.last
   1346c:	sub	x0, x1, x2
   13470:	ret
   13474:	tbz	x2, #34, 134c4 <PyInit__decimal@@Base+0x253c>
   13478:	lsr	x3, x0, #30
   1347c:	lsl	x0, x0, #34
   13480:	adds	x0, x0, x4
   13484:	sub	x3, x3, x5
   13488:	cinc	x3, x3, cs  // cs = hs, nlast
   1348c:	subs	x4, x0, x3
   13490:	cmp	x0, x3
   13494:	lsr	x1, x3, #30
   13498:	lsl	x3, x3, #34
   1349c:	sbc	x1, x1, xzr
   134a0:	adds	x3, x4, x3
   134a4:	cinc	x1, x1, cs  // cs = hs, nlast
   134a8:	subs	x0, x3, x1
   134ac:	lsr	x4, x1, #30
   134b0:	cmp	x3, x1
   134b4:	sbc	x4, x4, xzr
   134b8:	lsl	x1, x1, #34
   134bc:	adds	x1, x0, x1
   134c0:	b	13454 <PyInit__decimal@@Base+0x24cc>
   134c4:	lsr	x3, x0, #24
   134c8:	lsl	x0, x0, #40
   134cc:	adds	x0, x0, x4
   134d0:	sub	x3, x3, x5
   134d4:	cinc	x3, x3, cs  // cs = hs, nlast
   134d8:	subs	x4, x0, x3
   134dc:	cmp	x0, x3
   134e0:	lsr	x1, x3, #24
   134e4:	lsl	x3, x3, #40
   134e8:	sbc	x1, x1, xzr
   134ec:	adds	x3, x4, x3
   134f0:	cinc	x1, x1, cs  // cs = hs, nlast
   134f4:	subs	x0, x3, x1
   134f8:	lsr	x4, x1, #24
   134fc:	cmp	x3, x1
   13500:	sbc	x4, x4, xzr
   13504:	lsl	x1, x1, #40
   13508:	b	134bc <PyInit__decimal@@Base+0x2534>
   1350c:	mov	x11, x2
   13510:	stp	x29, x30, [sp, #-80]!
   13514:	mov	x8, x1
   13518:	mov	x29, sp
   1351c:	ldrsw	x1, [x11], #24
   13520:	mov	x7, x0
   13524:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   13528:	add	x0, x0, #0xdc0
   1352c:	lsr	x6, x8, #1
   13530:	mov	x13, x2
   13534:	mov	x10, x7
   13538:	mov	x12, #0x0                   	// #0
   1353c:	ldr	x2, [x0, x1, lsl #3]
   13540:	add	x9, x7, x6, lsl #3
   13544:	stp	x19, x20, [sp, #16]
   13548:	stp	x21, x22, [sp, #32]
   1354c:	stp	x23, x24, [sp, #48]
   13550:	str	x25, [sp, #64]
   13554:	cmp	x12, x6
   13558:	b.cc	135e8 <PyInit__decimal@@Base+0x2660>  // b.lo, b.ul, b.last
   1355c:	mov	x12, #0x2                   	// #2
   13560:	cmp	x6, #0x1
   13564:	b.hi	13664 <PyInit__decimal@@Base+0x26dc>  // b.pmore
   13568:	mov	x1, #0x0                   	// #0
   1356c:	mov	x0, #0x0                   	// #0
   13570:	add	x0, x0, #0x1
   13574:	cbnz	w0, 137cc <PyInit__decimal@@Base+0x2844>
   13578:	lsr	x3, x0, #32
   1357c:	mov	w2, #0x3f                  	// #63
   13580:	tst	w3, #0xffff
   13584:	b.eq	137d8 <PyInit__decimal@@Base+0x2850>  // b.none
   13588:	sub	w2, w2, #0x10
   1358c:	tst	w3, #0xff
   13590:	b.eq	137e0 <PyInit__decimal@@Base+0x2858>  // b.none
   13594:	sub	w2, w2, #0x8
   13598:	tst	x3, #0xf
   1359c:	b.eq	137e8 <PyInit__decimal@@Base+0x2860>  // b.none
   135a0:	sub	w2, w2, #0x4
   135a4:	tst	x3, #0x3
   135a8:	b.eq	137f0 <PyInit__decimal@@Base+0x2868>  // b.none
   135ac:	sub	w2, w2, #0x2
   135b0:	and	w3, w3, #0x1
   135b4:	cmp	x8, x0
   135b8:	sub	w2, w2, w3
   135bc:	add	w2, w2, #0x1
   135c0:	lsr	x2, x8, x2
   135c4:	sub	x2, x8, x2
   135c8:	eor	x1, x1, x2
   135cc:	b.hi	137ac <PyInit__decimal@@Base+0x2824>  // b.pmore
   135d0:	ldp	x19, x20, [sp, #16]
   135d4:	ldp	x21, x22, [sp, #32]
   135d8:	ldp	x23, x24, [sp, #48]
   135dc:	ldr	x25, [sp, #64]
   135e0:	ldp	x29, x30, [sp], #80
   135e4:	ret
   135e8:	ldp	x14, x4, [x10]
   135ec:	ldp	x1, x5, [x9]
   135f0:	ldp	x19, x18, [x11]
   135f4:	mov	x0, x14
   135f8:	bl	133f4 <PyInit__decimal@@Base+0x246c>
   135fc:	str	x0, [x10]
   13600:	sub	x3, x14, x1
   13604:	cmp	x1, x14
   13608:	b.ls	13610 <PyInit__decimal@@Base+0x2688>  // b.plast
   1360c:	add	x3, x3, x2
   13610:	mov	x1, x5
   13614:	mov	x0, x4
   13618:	bl	133f4 <PyInit__decimal@@Base+0x246c>
   1361c:	str	x0, [x10, #8]
   13620:	sub	x15, x4, x5
   13624:	cmp	x5, x4
   13628:	b.ls	13630 <PyInit__decimal@@Base+0x26a8>  // b.plast
   1362c:	add	x15, x15, x2
   13630:	mov	x1, x19
   13634:	mov	x0, x3
   13638:	bl	13410 <PyInit__decimal@@Base+0x2488>
   1363c:	mov	x14, x0
   13640:	mov	x1, x18
   13644:	mov	x0, x15
   13648:	bl	13410 <PyInit__decimal@@Base+0x2488>
   1364c:	add	x12, x12, #0x2
   13650:	add	x10, x10, #0x10
   13654:	add	x11, x11, #0x10
   13658:	stp	x14, x0, [x9]
   1365c:	add	x9, x9, #0x10
   13660:	b	13554 <PyInit__decimal@@Base+0x25cc>
   13664:	lsr	x21, x6, #1
   13668:	lsl	x22, x6, #1
   1366c:	lsl	x15, x6, #4
   13670:	add	x14, x7, x6, lsl #3
   13674:	add	x4, x7, x21, lsl #3
   13678:	mov	x3, #0x0                   	// #0
   1367c:	mov	x23, x4
   13680:	cmp	x3, x8
   13684:	b.cc	136a8 <PyInit__decimal@@Base+0x2720>  // b.lo, b.ul, b.last
   13688:	lsl	x25, x12, #3
   1368c:	add	x14, x13, x12, lsl #3
   13690:	mov	x9, #0x1                   	// #1
   13694:	cmp	x9, x21
   13698:	b.ne	13708 <PyInit__decimal@@Base+0x2780>  // b.any
   1369c:	lsl	x12, x12, #1
   136a0:	mov	x6, x9
   136a4:	b	13560 <PyInit__decimal@@Base+0x25d8>
   136a8:	ldr	x11, [x7, x3, lsl #3]
   136ac:	ldr	x1, [x4]
   136b0:	mov	x0, x11
   136b4:	ldr	x9, [x14, x3, lsl #3]
   136b8:	ldr	x10, [x4, x6, lsl #3]
   136bc:	bl	133f4 <PyInit__decimal@@Base+0x246c>
   136c0:	str	x0, [x7, x3, lsl #3]
   136c4:	sub	x5, x11, x1
   136c8:	cmp	x1, x11
   136cc:	b.ls	136d4 <PyInit__decimal@@Base+0x274c>  // b.plast
   136d0:	add	x5, x5, x2
   136d4:	mov	x1, x10
   136d8:	mov	x0, x9
   136dc:	bl	133f4 <PyInit__decimal@@Base+0x246c>
   136e0:	str	x0, [x14, x3, lsl #3]
   136e4:	cmp	x10, x9
   136e8:	sub	x0, x9, x10
   136ec:	b.ls	136f4 <PyInit__decimal@@Base+0x276c>  // b.plast
   136f0:	add	x0, x0, x2
   136f4:	str	x5, [x4]
   136f8:	add	x3, x3, x22
   136fc:	str	x0, [x4, x6, lsl #3]
   13700:	add	x4, x4, x15
   13704:	b	13680 <PyInit__decimal@@Base+0x26f8>
   13708:	ldr	x24, [x14, #24]
   1370c:	add	x11, x23, x9, lsl #3
   13710:	add	x10, x7, x9, lsl #3
   13714:	mov	x18, #0x0                   	// #0
   13718:	cmp	x18, x8
   1371c:	b.cc	1372c <PyInit__decimal@@Base+0x27a4>  // b.lo, b.ul, b.last
   13720:	add	x9, x9, #0x1
   13724:	add	x14, x14, x25
   13728:	b	13694 <PyInit__decimal@@Base+0x270c>
   1372c:	ldr	x1, [x11]
   13730:	ldr	x4, [x10, x6, lsl #3]
   13734:	ldr	x5, [x11, x6, lsl #3]
   13738:	ldr	x19, [x10]
   1373c:	mov	x0, x19
   13740:	bl	133f4 <PyInit__decimal@@Base+0x246c>
   13744:	str	x0, [x10]
   13748:	sub	x3, x19, x1
   1374c:	cmp	x1, x19
   13750:	b.ls	13758 <PyInit__decimal@@Base+0x27d0>  // b.plast
   13754:	add	x3, x3, x2
   13758:	mov	x1, x5
   1375c:	mov	x0, x4
   13760:	bl	133f4 <PyInit__decimal@@Base+0x246c>
   13764:	str	x0, [x10, x6, lsl #3]
   13768:	sub	x20, x4, x5
   1376c:	cmp	x5, x4
   13770:	b.ls	13778 <PyInit__decimal@@Base+0x27f0>  // b.plast
   13774:	add	x20, x20, x2
   13778:	mov	x1, x24
   1377c:	mov	x0, x3
   13780:	bl	13410 <PyInit__decimal@@Base+0x2488>
   13784:	mov	x19, x0
   13788:	mov	x1, x24
   1378c:	mov	x0, x20
   13790:	bl	13410 <PyInit__decimal@@Base+0x2488>
   13794:	str	x19, [x11]
   13798:	add	x18, x18, x22
   1379c:	add	x10, x10, x15
   137a0:	str	x0, [x11, x6, lsl #3]
   137a4:	add	x11, x11, x15
   137a8:	b	13718 <PyInit__decimal@@Base+0x2790>
   137ac:	cmp	x0, x1
   137b0:	b.cs	13570 <PyInit__decimal@@Base+0x25e8>  // b.hs, b.nlast
   137b4:	lsl	x2, x1, #3
   137b8:	ldr	x3, [x7, x0, lsl #3]
   137bc:	ldr	x4, [x7, x2]
   137c0:	str	x4, [x7, x0, lsl #3]
   137c4:	str	x3, [x7, x2]
   137c8:	b	13570 <PyInit__decimal@@Base+0x25e8>
   137cc:	mov	x3, x0
   137d0:	mov	w2, #0x1f                  	// #31
   137d4:	b	13580 <PyInit__decimal@@Base+0x25f8>
   137d8:	lsr	x3, x3, #16
   137dc:	b	1358c <PyInit__decimal@@Base+0x2604>
   137e0:	lsr	x3, x3, #8
   137e4:	b	13598 <PyInit__decimal@@Base+0x2610>
   137e8:	lsr	x3, x3, #4
   137ec:	b	135a4 <PyInit__decimal@@Base+0x261c>
   137f0:	lsr	x3, x3, #2
   137f4:	b	135b0 <PyInit__decimal@@Base+0x2628>
   137f8:	stp	x29, x30, [sp, #-48]!
   137fc:	mov	x29, sp
   13800:	stp	x19, x20, [sp, #16]
   13804:	mov	x20, x1
   13808:	mov	w1, #0xffffffff            	// #-1
   1380c:	str	x21, [sp, #32]
   13810:	mov	x21, x0
   13814:	mov	x0, x20
   13818:	bl	23540 <PyInit__decimal@@Base+0x125b8>
   1381c:	cbz	x0, 13858 <PyInit__decimal@@Base+0x28d0>
   13820:	mov	x2, x0
   13824:	mov	x19, x0
   13828:	mov	x1, x20
   1382c:	mov	x0, x21
   13830:	bl	1350c <PyInit__decimal@@Base+0x2584>
   13834:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   13838:	ldr	x1, [x0, #1720]
   1383c:	mov	x0, x19
   13840:	blr	x1
   13844:	mov	w0, #0x1                   	// #1
   13848:	ldp	x19, x20, [sp, #16]
   1384c:	ldr	x21, [sp, #32]
   13850:	ldp	x29, x30, [sp], #48
   13854:	ret
   13858:	mov	w0, #0x0                   	// #0
   1385c:	b	13848 <PyInit__decimal@@Base+0x28c0>
   13860:	stp	x29, x30, [sp, #-48]!
   13864:	mov	x29, sp
   13868:	stp	x19, x20, [sp, #16]
   1386c:	mov	x20, x1
   13870:	mov	w1, #0x1                   	// #1
   13874:	str	x21, [sp, #32]
   13878:	mov	x21, x0
   1387c:	mov	x0, x20
   13880:	bl	23540 <PyInit__decimal@@Base+0x125b8>
   13884:	cbz	x0, 138c0 <PyInit__decimal@@Base+0x2938>
   13888:	mov	x2, x0
   1388c:	mov	x19, x0
   13890:	mov	x1, x20
   13894:	mov	x0, x21
   13898:	bl	1350c <PyInit__decimal@@Base+0x2584>
   1389c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   138a0:	ldr	x1, [x0, #1720]
   138a4:	mov	x0, x19
   138a8:	blr	x1
   138ac:	mov	w0, #0x1                   	// #1
   138b0:	ldp	x19, x20, [sp, #16]
   138b4:	ldr	x21, [sp, #32]
   138b8:	ldp	x29, x30, [sp], #48
   138bc:	ret
   138c0:	mov	w0, #0x0                   	// #0
   138c4:	b	138b0 <PyInit__decimal@@Base+0x2928>
   138c8:	adds	x0, x0, x1
   138cc:	b.cc	138d4 <PyInit__decimal@@Base+0x294c>  // b.lo, b.ul, b.last
   138d0:	sub	x0, x0, x2
   138d4:	cmp	x0, x2
   138d8:	b.cc	138e0 <PyInit__decimal@@Base+0x2958>  // b.lo, b.ul, b.last
   138dc:	sub	x0, x0, x2
   138e0:	ret
   138e4:	mul	x3, x0, x1
   138e8:	umulh	x0, x0, x1
   138ec:	subs	x4, x3, x0
   138f0:	cmp	x3, x0
   138f4:	cset	x5, cc  // cc = lo, ul, last
   138f8:	tbz	x2, #32, 13948 <PyInit__decimal@@Base+0x29c0>
   138fc:	lsr	x1, x0, #32
   13900:	lsl	x0, x0, #32
   13904:	adds	x0, x0, x4
   13908:	sub	x1, x1, x5
   1390c:	cinc	x1, x1, cs  // cs = hs, nlast
   13910:	subs	x3, x0, x1
   13914:	cmp	x0, x1
   13918:	lsr	x4, x1, #32
   1391c:	lsl	x1, x1, #32
   13920:	sbc	x4, x4, xzr
   13924:	adds	x1, x3, x1
   13928:	cset	x3, cs  // cs = hs, nlast
   1392c:	mov	x0, x1
   13930:	add	x4, x4, x3
   13934:	cbnz	x4, 13940 <PyInit__decimal@@Base+0x29b8>
   13938:	cmp	x1, x2
   1393c:	b.cc	13944 <PyInit__decimal@@Base+0x29bc>  // b.lo, b.ul, b.last
   13940:	sub	x0, x1, x2
   13944:	ret
   13948:	tbz	x2, #34, 13998 <PyInit__decimal@@Base+0x2a10>
   1394c:	lsr	x3, x0, #30
   13950:	lsl	x0, x0, #34
   13954:	adds	x0, x0, x4
   13958:	sub	x3, x3, x5
   1395c:	cinc	x3, x3, cs  // cs = hs, nlast
   13960:	subs	x4, x0, x3
   13964:	cmp	x0, x3
   13968:	lsr	x1, x3, #30
   1396c:	lsl	x3, x3, #34
   13970:	sbc	x1, x1, xzr
   13974:	adds	x3, x4, x3
   13978:	cinc	x1, x1, cs  // cs = hs, nlast
   1397c:	subs	x0, x3, x1
   13980:	lsr	x4, x1, #30
   13984:	cmp	x3, x1
   13988:	sbc	x4, x4, xzr
   1398c:	lsl	x1, x1, #34
   13990:	adds	x1, x0, x1
   13994:	b	13928 <PyInit__decimal@@Base+0x29a0>
   13998:	lsr	x3, x0, #24
   1399c:	lsl	x0, x0, #40
   139a0:	adds	x0, x0, x4
   139a4:	sub	x3, x3, x5
   139a8:	cinc	x3, x3, cs  // cs = hs, nlast
   139ac:	subs	x4, x0, x3
   139b0:	cmp	x0, x3
   139b4:	lsr	x1, x3, #24
   139b8:	lsl	x3, x3, #40
   139bc:	sbc	x1, x1, xzr
   139c0:	adds	x3, x4, x3
   139c4:	cinc	x1, x1, cs  // cs = hs, nlast
   139c8:	subs	x0, x3, x1
   139cc:	lsr	x4, x1, #24
   139d0:	cmp	x3, x1
   139d4:	sbc	x4, x4, xzr
   139d8:	lsl	x1, x1, #40
   139dc:	b	13990 <PyInit__decimal@@Base+0x2a08>
   139e0:	mov	x6, x0
   139e4:	mov	x7, x1
   139e8:	stp	x29, x30, [sp, #-16]!
   139ec:	mov	x8, #0x1                   	// #1
   139f0:	mov	x29, sp
   139f4:	tbz	w7, #0, 13a08 <PyInit__decimal@@Base+0x2a80>
   139f8:	mov	x0, x8
   139fc:	mov	x1, x6
   13a00:	bl	138e4 <PyInit__decimal@@Base+0x295c>
   13a04:	mov	x8, x0
   13a08:	mov	x1, x6
   13a0c:	mov	x0, x6
   13a10:	bl	138e4 <PyInit__decimal@@Base+0x295c>
   13a14:	mov	x6, x0
   13a18:	lsr	x7, x7, #1
   13a1c:	cbnz	x7, 139f4 <PyInit__decimal@@Base+0x2a6c>
   13a20:	mov	x0, x8
   13a24:	ldp	x29, x30, [sp], #16
   13a28:	ret
   13a2c:	stp	x29, x30, [sp, #-16]!
   13a30:	mov	x8, x2
   13a34:	mov	x6, x0
   13a38:	mov	x29, sp
   13a3c:	ldr	x13, [x1]
   13a40:	mov	x7, x1
   13a44:	ldr	x11, [x0]
   13a48:	mov	x9, x3
   13a4c:	mov	x1, x13
   13a50:	mov	x2, x4
   13a54:	mov	x0, x11
   13a58:	bl	138c8 <PyInit__decimal@@Base+0x2940>
   13a5c:	ldr	x12, [x8]
   13a60:	mov	x1, x12
   13a64:	bl	138c8 <PyInit__decimal@@Base+0x2940>
   13a68:	mov	x10, x0
   13a6c:	ldr	x15, [x3, #8]
   13a70:	mov	x0, x13
   13a74:	mov	x1, x15
   13a78:	bl	138e4 <PyInit__decimal@@Base+0x295c>
   13a7c:	mov	x1, x0
   13a80:	mov	x0, x11
   13a84:	bl	138c8 <PyInit__decimal@@Base+0x2940>
   13a88:	ldr	x18, [x9, #16]
   13a8c:	mov	x14, x0
   13a90:	mov	x0, x12
   13a94:	mov	x1, x18
   13a98:	bl	138e4 <PyInit__decimal@@Base+0x295c>
   13a9c:	mov	x1, x0
   13aa0:	mov	x0, x14
   13aa4:	bl	138c8 <PyInit__decimal@@Base+0x2940>
   13aa8:	mov	x9, x0
   13aac:	mov	x1, x18
   13ab0:	mov	x0, x13
   13ab4:	bl	138e4 <PyInit__decimal@@Base+0x295c>
   13ab8:	mov	x1, x0
   13abc:	mov	x0, x11
   13ac0:	bl	138c8 <PyInit__decimal@@Base+0x2940>
   13ac4:	mov	x11, x0
   13ac8:	mov	x1, x15
   13acc:	mov	x0, x12
   13ad0:	bl	138e4 <PyInit__decimal@@Base+0x295c>
   13ad4:	mov	x1, x0
   13ad8:	mov	x0, x11
   13adc:	bl	138c8 <PyInit__decimal@@Base+0x2940>
   13ae0:	ldp	x29, x30, [sp], #16
   13ae4:	str	x0, [x8]
   13ae8:	str	x9, [x7]
   13aec:	str	x10, [x6]
   13af0:	ret
   13af4:	stp	x29, x30, [sp, #-128]!
   13af8:	mov	x29, sp
   13afc:	stp	x19, x20, [sp, #16]
   13b00:	mov	x20, #0x3                   	// #3
   13b04:	mov	x19, x0
   13b08:	udiv	x20, x1, x20
   13b0c:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   13b10:	add	x0, x0, #0xdc0
   13b14:	stp	x21, x22, [sp, #32]
   13b18:	mov	w22, w2
   13b1c:	stp	x23, x24, [sp, #48]
   13b20:	mov	x21, x1
   13b24:	lsl	x23, x20, #3
   13b28:	stp	x25, x26, [sp, #64]
   13b2c:	add	x26, x19, x20, lsl #3
   13b30:	mov	x25, #0x0                   	// #0
   13b34:	stp	x27, x28, [sp, #80]
   13b38:	add	x28, x19, x20, lsl #4
   13b3c:	add	x27, sp, #0x68
   13b40:	mov	w1, #0xffffffff            	// #-1
   13b44:	ldr	x24, [x0, w22, sxtw #3]
   13b48:	mov	x0, x27
   13b4c:	bl	235e0 <PyInit__decimal@@Base+0x12658>
   13b50:	add	x0, x25, x19
   13b54:	add	x2, x28, x25
   13b58:	add	x1, x26, x25
   13b5c:	cmp	x26, x0
   13b60:	b.hi	13bf0 <PyInit__decimal@@Base+0x2c68>  // b.pmore
   13b64:	mov	w2, w22
   13b68:	mov	x0, x21
   13b6c:	mov	w1, #0xffffffff            	// #-1
   13b70:	bl	23504 <PyInit__decimal@@Base+0x1257c>
   13b74:	mov	x11, x20
   13b78:	mov	x12, x0
   13b7c:	sub	x13, x20, #0x1
   13b80:	mov	x10, #0x1                   	// #1
   13b84:	mov	x1, x10
   13b88:	mov	x2, x24
   13b8c:	mov	x0, x12
   13b90:	bl	139e0 <PyInit__decimal@@Base+0x2a58>
   13b94:	mov	x6, x0
   13b98:	mov	x1, x0
   13b9c:	bl	138e4 <PyInit__decimal@@Base+0x295c>
   13ba0:	mov	x9, x0
   13ba4:	add	x7, x19, x11, lsl #3
   13ba8:	mov	x8, #0x1                   	// #1
   13bac:	mov	x14, #0x0                   	// #0
   13bb0:	cmp	x13, x14
   13bb4:	b.hi	13c0c <PyInit__decimal@@Base+0x2c84>  // b.pmore
   13bb8:	add	x11, x11, x20
   13bbc:	cmp	x10, #0x2
   13bc0:	b.ne	13c04 <PyInit__decimal@@Base+0x2c7c>  // b.any
   13bc4:	add	x21, x19, x21, lsl #3
   13bc8:	cmp	x21, x19
   13bcc:	b.hi	13c60 <PyInit__decimal@@Base+0x2cd8>  // b.pmore
   13bd0:	mov	w0, #0x1                   	// #1
   13bd4:	ldp	x19, x20, [sp, #16]
   13bd8:	ldp	x21, x22, [sp, #32]
   13bdc:	ldp	x23, x24, [sp, #48]
   13be0:	ldp	x25, x26, [sp, #64]
   13be4:	ldp	x27, x28, [sp, #80]
   13be8:	ldp	x29, x30, [sp], #128
   13bec:	ret
   13bf0:	mov	x4, x24
   13bf4:	mov	x3, x27
   13bf8:	add	x25, x25, #0x8
   13bfc:	bl	13a2c <PyInit__decimal@@Base+0x2aa4>
   13c00:	b	13b50 <PyInit__decimal@@Base+0x2bc8>
   13c04:	mov	x10, #0x2                   	// #2
   13c08:	b	13b84 <PyInit__decimal@@Base+0x2bfc>
   13c0c:	ldr	x0, [x7]
   13c10:	mov	x1, x8
   13c14:	mov	x2, x24
   13c18:	bl	138e4 <PyInit__decimal@@Base+0x295c>
   13c1c:	mov	x18, x0
   13c20:	ldr	x0, [x7, #8]
   13c24:	mov	x1, x6
   13c28:	bl	138e4 <PyInit__decimal@@Base+0x295c>
   13c2c:	mov	x15, x0
   13c30:	mov	x1, x9
   13c34:	mov	x0, x8
   13c38:	bl	138e4 <PyInit__decimal@@Base+0x295c>
   13c3c:	mov	x8, x0
   13c40:	mov	x1, x9
   13c44:	mov	x0, x6
   13c48:	bl	138e4 <PyInit__decimal@@Base+0x295c>
   13c4c:	mov	x6, x0
   13c50:	add	x14, x14, #0x2
   13c54:	stp	x18, x15, [x7]
   13c58:	add	x7, x7, #0x10
   13c5c:	b	13bb0 <PyInit__decimal@@Base+0x2c28>
   13c60:	mov	w2, w22
   13c64:	mov	x1, x20
   13c68:	mov	x0, x19
   13c6c:	bl	237ec <PyInit__decimal@@Base+0x12864>
   13c70:	cbz	w0, 13bd4 <PyInit__decimal@@Base+0x2c4c>
   13c74:	add	x19, x19, x23
   13c78:	b	13bc8 <PyInit__decimal@@Base+0x2c40>
   13c7c:	stp	x29, x30, [sp, #-112]!
   13c80:	mov	x29, sp
   13c84:	stp	x21, x22, [sp, #32]
   13c88:	mov	x21, #0x3                   	// #3
   13c8c:	mov	w22, w2
   13c90:	udiv	x21, x1, x21
   13c94:	stp	x19, x20, [sp, #16]
   13c98:	mov	x19, x0
   13c9c:	mov	x20, x0
   13ca0:	stp	x23, x24, [sp, #48]
   13ca4:	mov	x24, x1
   13ca8:	lsl	x23, x21, #3
   13cac:	str	x25, [sp, #64]
   13cb0:	add	x25, x0, x1, lsl #3
   13cb4:	cmp	x25, x20
   13cb8:	b.hi	13d74 <PyInit__decimal@@Base+0x2dec>  // b.pmore
   13cbc:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   13cc0:	add	x0, x0, #0xdc0
   13cc4:	mov	w2, w22
   13cc8:	mov	w1, #0x1                   	// #1
   13ccc:	ldr	x20, [x0, w22, sxtw #3]
   13cd0:	mov	x0, x24
   13cd4:	bl	23504 <PyInit__decimal@@Base+0x1257c>
   13cd8:	mov	x12, x0
   13cdc:	mov	x11, x21
   13ce0:	mov	x10, #0x1                   	// #1
   13ce4:	mov	x1, x10
   13ce8:	mov	x2, x20
   13cec:	mov	x0, x12
   13cf0:	bl	139e0 <PyInit__decimal@@Base+0x2a58>
   13cf4:	mov	x6, x0
   13cf8:	mov	x1, x0
   13cfc:	bl	138e4 <PyInit__decimal@@Base+0x295c>
   13d00:	mov	x9, x0
   13d04:	add	x7, x19, x11, lsl #3
   13d08:	mov	x8, #0x1                   	// #1
   13d0c:	mov	x13, #0x0                   	// #0
   13d10:	cmp	x13, x21
   13d14:	b.cc	13d98 <PyInit__decimal@@Base+0x2e10>  // b.lo, b.ul, b.last
   13d18:	add	x11, x11, x21
   13d1c:	cmp	x10, #0x2
   13d20:	b.ne	13d90 <PyInit__decimal@@Base+0x2e08>  // b.any
   13d24:	mov	w2, w22
   13d28:	add	x22, x19, x23
   13d2c:	add	x23, x19, x23, lsl #1
   13d30:	mov	x21, #0x0                   	// #0
   13d34:	add	x24, sp, #0x58
   13d38:	mov	w1, #0x1                   	// #1
   13d3c:	mov	x0, x24
   13d40:	bl	235e0 <PyInit__decimal@@Base+0x12658>
   13d44:	add	x0, x19, x21
   13d48:	add	x2, x23, x21
   13d4c:	add	x1, x22, x21
   13d50:	cmp	x22, x0
   13d54:	b.hi	13dec <PyInit__decimal@@Base+0x2e64>  // b.pmore
   13d58:	mov	w0, #0x1                   	// #1
   13d5c:	ldp	x19, x20, [sp, #16]
   13d60:	ldp	x21, x22, [sp, #32]
   13d64:	ldp	x23, x24, [sp, #48]
   13d68:	ldr	x25, [sp, #64]
   13d6c:	ldp	x29, x30, [sp], #112
   13d70:	ret
   13d74:	mov	w2, w22
   13d78:	mov	x1, x21
   13d7c:	mov	x0, x20
   13d80:	bl	23a1c <PyInit__decimal@@Base+0x12a94>
   13d84:	cbz	w0, 13d5c <PyInit__decimal@@Base+0x2dd4>
   13d88:	add	x20, x20, x23
   13d8c:	b	13cb4 <PyInit__decimal@@Base+0x2d2c>
   13d90:	mov	x10, #0x2                   	// #2
   13d94:	b	13ce4 <PyInit__decimal@@Base+0x2d5c>
   13d98:	ldr	x0, [x7]
   13d9c:	mov	x1, x8
   13da0:	mov	x2, x20
   13da4:	bl	138e4 <PyInit__decimal@@Base+0x295c>
   13da8:	mov	x15, x0
   13dac:	ldr	x0, [x7, #8]
   13db0:	mov	x1, x6
   13db4:	bl	138e4 <PyInit__decimal@@Base+0x295c>
   13db8:	mov	x14, x0
   13dbc:	mov	x1, x9
   13dc0:	mov	x0, x8
   13dc4:	bl	138e4 <PyInit__decimal@@Base+0x295c>
   13dc8:	mov	x8, x0
   13dcc:	mov	x1, x9
   13dd0:	mov	x0, x6
   13dd4:	bl	138e4 <PyInit__decimal@@Base+0x295c>
   13dd8:	mov	x6, x0
   13ddc:	add	x13, x13, #0x2
   13de0:	stp	x15, x14, [x7]
   13de4:	add	x7, x7, #0x10
   13de8:	b	13d10 <PyInit__decimal@@Base+0x2d88>
   13dec:	mov	x4, x20
   13df0:	mov	x3, x24
   13df4:	add	x21, x21, #0x8
   13df8:	bl	13a2c <PyInit__decimal@@Base+0x2aa4>
   13dfc:	b	13d44 <PyInit__decimal@@Base+0x2dbc>
   13e00:	mov	x4, #0x0                   	// #0
   13e04:	ldrb	w5, [x0, x4]
   13e08:	ldrb	w6, [x1, x4]
   13e0c:	cmp	w6, w5
   13e10:	b.eq	13e20 <PyInit__decimal@@Base+0x2e98>  // b.none
   13e14:	ldrb	w6, [x2, x4]
   13e18:	cmp	w6, w5
   13e1c:	b.ne	13e34 <PyInit__decimal@@Base+0x2eac>  // b.any
   13e20:	add	x4, x4, #0x1
   13e24:	cmp	x3, x4
   13e28:	b.ne	13e04 <PyInit__decimal@@Base+0x2e7c>  // b.any
   13e2c:	mov	w0, #0x1                   	// #1
   13e30:	ret
   13e34:	mov	w0, #0x0                   	// #0
   13e38:	b	13e30 <PyInit__decimal@@Base+0x2ea8>
   13e3c:	sub	w2, w2, #0x2
   13e40:	cmp	w2, #0x12
   13e44:	b.hi	1417c <PyInit__decimal@@Base+0x31f4>  // b.pmore
   13e48:	adrp	x4, 2a000 <PyInit__decimal@@Base+0x19078>
   13e4c:	add	x4, x4, #0xe88
   13e50:	ldrh	w2, [x4, w2, uxtw #1]
   13e54:	adr	x4, 13e60 <PyInit__decimal@@Base+0x2ed8>
   13e58:	add	x2, x4, w2, sxth #2
   13e5c:	br	x2
   13e60:	cmp	x0, x3
   13e64:	b.ne	13e70 <PyInit__decimal@@Base+0x2ee8>  // b.any
   13e68:	mov	w2, #0x2e                  	// #46
   13e6c:	strb	w2, [x0], #1
   13e70:	mov	x4, #0x89e80000            	// #2313682944
   13e74:	movk	x4, #0x2304, lsl #32
   13e78:	movk	x4, #0x8ac7, lsl #48
   13e7c:	cmp	x1, x4
   13e80:	cset	x5, cs  // cs = hs, nlast
   13e84:	cset	w2, cs  // cs = hs, nlast
   13e88:	add	w2, w2, #0x30
   13e8c:	strb	w2, [x0], #1
   13e90:	msub	x1, x5, x4, x1
   13e94:	cmp	x0, x3
   13e98:	b.ne	13ea4 <PyInit__decimal@@Base+0x2f1c>  // b.any
   13e9c:	mov	w2, #0x2e                  	// #46
   13ea0:	strb	w2, [x0], #1
   13ea4:	mov	x2, #0xa7640000            	// #2808348672
   13ea8:	movk	x2, #0xb6b3, lsl #32
   13eac:	movk	x2, #0xde0, lsl #48
   13eb0:	udiv	x4, x1, x2
   13eb4:	msub	x1, x4, x2, x1
   13eb8:	add	w5, w4, #0x30
   13ebc:	strb	w5, [x0], #1
   13ec0:	cmp	x0, x3
   13ec4:	b.ne	13ed0 <PyInit__decimal@@Base+0x2f48>  // b.any
   13ec8:	mov	w2, #0x2e                  	// #46
   13ecc:	strb	w2, [x0], #1
   13ed0:	mov	x2, #0x5d8a0000            	// #1569325056
   13ed4:	movk	x2, #0x4578, lsl #32
   13ed8:	movk	x2, #0x163, lsl #48
   13edc:	udiv	x4, x1, x2
   13ee0:	msub	x1, x4, x2, x1
   13ee4:	add	w5, w4, #0x30
   13ee8:	strb	w5, [x0], #1
   13eec:	cmp	x0, x3
   13ef0:	b.ne	13efc <PyInit__decimal@@Base+0x2f74>  // b.any
   13ef4:	mov	w2, #0x2e                  	// #46
   13ef8:	strb	w2, [x0], #1
   13efc:	mov	x2, #0x6fc10000            	// #1874919424
   13f00:	movk	x2, #0x86f2, lsl #32
   13f04:	movk	x2, #0x23, lsl #48
   13f08:	udiv	x4, x1, x2
   13f0c:	msub	x1, x4, x2, x1
   13f10:	add	w5, w4, #0x30
   13f14:	strb	w5, [x0], #1
   13f18:	cmp	x0, x3
   13f1c:	b.ne	13f28 <PyInit__decimal@@Base+0x2fa0>  // b.any
   13f20:	mov	w2, #0x2e                  	// #46
   13f24:	strb	w2, [x0], #1
   13f28:	mov	x2, #0x8000                	// #32768
   13f2c:	movk	x2, #0xa4c6, lsl #16
   13f30:	movk	x2, #0x8d7e, lsl #32
   13f34:	movk	x2, #0x3, lsl #48
   13f38:	udiv	x4, x1, x2
   13f3c:	msub	x1, x4, x2, x1
   13f40:	add	w5, w4, #0x30
   13f44:	strb	w5, [x0], #1
   13f48:	cmp	x0, x3
   13f4c:	b.ne	13f58 <PyInit__decimal@@Base+0x2fd0>  // b.any
   13f50:	mov	w2, #0x2e                  	// #46
   13f54:	strb	w2, [x0], #1
   13f58:	mov	x2, #0x4000                	// #16384
   13f5c:	movk	x2, #0x107a, lsl #16
   13f60:	movk	x2, #0x5af3, lsl #32
   13f64:	udiv	x4, x1, x2
   13f68:	msub	x1, x4, x2, x1
   13f6c:	add	w5, w4, #0x30
   13f70:	strb	w5, [x0], #1
   13f74:	cmp	x0, x3
   13f78:	b.ne	13f84 <PyInit__decimal@@Base+0x2ffc>  // b.any
   13f7c:	mov	w2, #0x2e                  	// #46
   13f80:	strb	w2, [x0], #1
   13f84:	mov	x2, #0xa000                	// #40960
   13f88:	movk	x2, #0x4e72, lsl #16
   13f8c:	movk	x2, #0x918, lsl #32
   13f90:	udiv	x4, x1, x2
   13f94:	msub	x1, x4, x2, x1
   13f98:	add	w5, w4, #0x30
   13f9c:	strb	w5, [x0], #1
   13fa0:	cmp	x0, x3
   13fa4:	b.ne	13fb0 <PyInit__decimal@@Base+0x3028>  // b.any
   13fa8:	mov	w2, #0x2e                  	// #46
   13fac:	strb	w2, [x0], #1
   13fb0:	mov	x2, #0x1000                	// #4096
   13fb4:	movk	x2, #0xd4a5, lsl #16
   13fb8:	movk	x2, #0xe8, lsl #32
   13fbc:	udiv	x4, x1, x2
   13fc0:	msub	x1, x4, x2, x1
   13fc4:	add	w5, w4, #0x30
   13fc8:	strb	w5, [x0], #1
   13fcc:	cmp	x0, x3
   13fd0:	b.ne	13fdc <PyInit__decimal@@Base+0x3054>  // b.any
   13fd4:	mov	w2, #0x2e                  	// #46
   13fd8:	strb	w2, [x0], #1
   13fdc:	mov	x2, #0xe800                	// #59392
   13fe0:	movk	x2, #0x4876, lsl #16
   13fe4:	movk	x2, #0x17, lsl #32
   13fe8:	udiv	x4, x1, x2
   13fec:	msub	x1, x4, x2, x1
   13ff0:	add	w5, w4, #0x30
   13ff4:	strb	w5, [x0], #1
   13ff8:	cmp	x0, x3
   13ffc:	b.ne	14008 <PyInit__decimal@@Base+0x3080>  // b.any
   14000:	mov	w2, #0x2e                  	// #46
   14004:	strb	w2, [x0], #1
   14008:	mov	x2, #0xe400                	// #58368
   1400c:	movk	x2, #0x540b, lsl #16
   14010:	movk	x2, #0x2, lsl #32
   14014:	udiv	x4, x1, x2
   14018:	msub	x1, x4, x2, x1
   1401c:	add	w5, w4, #0x30
   14020:	strb	w5, [x0], #1
   14024:	cmp	x0, x3
   14028:	b.ne	14034 <PyInit__decimal@@Base+0x30ac>  // b.any
   1402c:	mov	w2, #0x2e                  	// #46
   14030:	strb	w2, [x0], #1
   14034:	mov	x2, #0xca00                	// #51712
   14038:	movk	x2, #0x3b9a, lsl #16
   1403c:	udiv	x4, x1, x2
   14040:	msub	x1, x4, x2, x1
   14044:	add	w5, w4, #0x30
   14048:	strb	w5, [x0], #1
   1404c:	cmp	x0, x3
   14050:	b.ne	1405c <PyInit__decimal@@Base+0x30d4>  // b.any
   14054:	mov	w2, #0x2e                  	// #46
   14058:	strb	w2, [x0], #1
   1405c:	mov	x2, #0xe100                	// #57600
   14060:	movk	x2, #0x5f5, lsl #16
   14064:	udiv	x4, x1, x2
   14068:	msub	x1, x4, x2, x1
   1406c:	add	w5, w4, #0x30
   14070:	strb	w5, [x0], #1
   14074:	cmp	x0, x3
   14078:	b.ne	14084 <PyInit__decimal@@Base+0x30fc>  // b.any
   1407c:	mov	w2, #0x2e                  	// #46
   14080:	strb	w2, [x0], #1
   14084:	mov	x2, #0x9680                	// #38528
   14088:	movk	x2, #0x98, lsl #16
   1408c:	udiv	x4, x1, x2
   14090:	msub	x1, x4, x2, x1
   14094:	add	w5, w4, #0x30
   14098:	strb	w5, [x0], #1
   1409c:	cmp	x0, x3
   140a0:	b.ne	140ac <PyInit__decimal@@Base+0x3124>  // b.any
   140a4:	mov	w2, #0x2e                  	// #46
   140a8:	strb	w2, [x0], #1
   140ac:	mov	x2, #0x4240                	// #16960
   140b0:	movk	x2, #0xf, lsl #16
   140b4:	udiv	x4, x1, x2
   140b8:	msub	x1, x4, x2, x1
   140bc:	add	w5, w4, #0x30
   140c0:	strb	w5, [x0], #1
   140c4:	cmp	x0, x3
   140c8:	b.ne	140d4 <PyInit__decimal@@Base+0x314c>  // b.any
   140cc:	mov	w2, #0x2e                  	// #46
   140d0:	strb	w2, [x0], #1
   140d4:	mov	x2, #0x86a0                	// #34464
   140d8:	movk	x2, #0x1, lsl #16
   140dc:	udiv	x4, x1, x2
   140e0:	msub	x1, x4, x2, x1
   140e4:	add	w5, w4, #0x30
   140e8:	strb	w5, [x0], #1
   140ec:	cmp	x0, x3
   140f0:	b.ne	140fc <PyInit__decimal@@Base+0x3174>  // b.any
   140f4:	mov	w2, #0x2e                  	// #46
   140f8:	strb	w2, [x0], #1
   140fc:	mov	x2, #0x2710                	// #10000
   14100:	udiv	x4, x1, x2
   14104:	msub	x1, x4, x2, x1
   14108:	add	w5, w4, #0x30
   1410c:	strb	w5, [x0], #1
   14110:	cmp	x0, x3
   14114:	b.ne	14120 <PyInit__decimal@@Base+0x3198>  // b.any
   14118:	mov	w2, #0x2e                  	// #46
   1411c:	strb	w2, [x0], #1
   14120:	mov	x2, #0x3e8                 	// #1000
   14124:	udiv	x4, x1, x2
   14128:	msub	x1, x4, x2, x1
   1412c:	add	w5, w4, #0x30
   14130:	strb	w5, [x0], #1
   14134:	cmp	x0, x3
   14138:	b.ne	14144 <PyInit__decimal@@Base+0x31bc>  // b.any
   1413c:	mov	w2, #0x2e                  	// #46
   14140:	strb	w2, [x0], #1
   14144:	mov	x2, #0x64                  	// #100
   14148:	udiv	x4, x1, x2
   1414c:	msub	x1, x4, x2, x1
   14150:	add	w5, w4, #0x30
   14154:	strb	w5, [x0], #1
   14158:	cmp	x0, x3
   1415c:	b.ne	14168 <PyInit__decimal@@Base+0x31e0>  // b.any
   14160:	mov	w2, #0x2e                  	// #46
   14164:	strb	w2, [x0], #1
   14168:	mov	x2, #0xa                   	// #10
   1416c:	udiv	x4, x1, x2
   14170:	msub	x1, x4, x2, x1
   14174:	add	w5, w4, #0x30
   14178:	strb	w5, [x0], #1
   1417c:	cmp	x0, x3
   14180:	b.ne	1418c <PyInit__decimal@@Base+0x3204>  // b.any
   14184:	mov	w2, #0x2e                  	// #46
   14188:	strb	w2, [x0], #1
   1418c:	add	w1, w1, #0x30
   14190:	strb	w1, [x0]
   14194:	strb	wzr, [x0, #1]!
   14198:	ret
   1419c:	ldr	x3, [x0]
   141a0:	cmp	x2, #0x0
   141a4:	add	x3, x3, x2
   141a8:	str	x3, [x0]
   141ac:	ldr	x3, [x0, #8]
   141b0:	cinc	x3, x3, ne  // ne = any
   141b4:	str	x3, [x0, #8]
   141b8:	ldr	x3, [x0, #16]
   141bc:	sub	x3, x3, x2
   141c0:	str	x3, [x0, #16]
   141c4:	ldr	x0, [x0, #24]
   141c8:	cbz	x0, 141dc <PyInit__decimal@@Base+0x3254>
   141cc:	add	x0, x0, x3
   141d0:	sub	x2, x2, #0x1
   141d4:	cmn	x2, #0x1
   141d8:	b.ne	141e0 <PyInit__decimal@@Base+0x3258>  // b.any
   141dc:	ret
   141e0:	ldrb	w3, [x1, x2]
   141e4:	strb	w3, [x0, x2]
   141e8:	b	141d0 <PyInit__decimal@@Base+0x3248>
   141ec:	stp	x29, x30, [sp, #-32]!
   141f0:	mov	x29, sp
   141f4:	stp	x19, x20, [sp, #16]
   141f8:	mov	x20, x1
   141fc:	mov	x19, x0
   14200:	ldrb	w0, [x19]
   14204:	cmp	w0, #0x30
   14208:	b.eq	14240 <PyInit__decimal@@Base+0x32b8>  // b.none
   1420c:	bl	6920 <__ctype_b_loc@plt>
   14210:	ldr	x2, [x0]
   14214:	mov	x0, x19
   14218:	ldrb	w1, [x0]
   1421c:	ldrh	w1, [x2, x1, lsl #1]
   14220:	tbnz	w1, #11, 14248 <PyInit__decimal@@Base+0x32c0>
   14224:	str	x0, [x20]
   14228:	ldrb	w0, [x0]
   1422c:	cmp	w0, #0x0
   14230:	csel	x0, x19, xzr, eq  // eq = none
   14234:	ldp	x19, x20, [sp, #16]
   14238:	ldp	x29, x30, [sp], #32
   1423c:	ret
   14240:	add	x19, x19, #0x1
   14244:	b	14200 <PyInit__decimal@@Base+0x3278>
   14248:	add	x0, x0, #0x1
   1424c:	b	14218 <PyInit__decimal@@Base+0x3290>
   14250:	stp	x29, x30, [sp, #-48]!
   14254:	mov	x29, sp
   14258:	stp	x19, x20, [sp, #16]
   1425c:	mov	x19, x1
   14260:	mov	x20, x0
   14264:	mov	x0, x1
   14268:	str	x21, [sp, #32]
   1426c:	bl	17688 <PyInit__decimal@@Base+0x6700>
   14270:	mov	x21, x0
   14274:	bl	1750c <PyInit__decimal@@Base+0x6584>
   14278:	mov	w2, w0
   1427c:	mov	x1, x21
   14280:	mov	x0, x20
   14284:	mov	x3, #0x0                   	// #0
   14288:	bl	13e3c <PyInit__decimal@@Base+0x2eb4>
   1428c:	ldr	x6, [x19, #24]
   14290:	sub	x6, x6, #0x2
   14294:	tbz	x6, #63, 142a8 <PyInit__decimal@@Base+0x3320>
   14298:	ldp	x19, x20, [sp, #16]
   1429c:	ldr	x21, [sp, #32]
   142a0:	ldp	x29, x30, [sp], #48
   142a4:	ret
   142a8:	ldr	x1, [x19, #40]
   142ac:	mov	x3, #0x0                   	// #0
   142b0:	mov	w2, #0x13                  	// #19
   142b4:	ldr	x1, [x1, x6, lsl #3]
   142b8:	bl	13e3c <PyInit__decimal@@Base+0x2eb4>
   142bc:	sub	x6, x6, #0x1
   142c0:	b	14294 <PyInit__decimal@@Base+0x330c>
   142c4:	stp	x29, x30, [sp, #-96]!
   142c8:	mov	x29, sp
   142cc:	stp	x19, x20, [sp, #16]
   142d0:	stp	x21, x22, [sp, #32]
   142d4:	mov	w22, w2
   142d8:	mov	x21, x3
   142dc:	stp	x23, x24, [sp, #48]
   142e0:	mov	x24, x0
   142e4:	mov	x0, x1
   142e8:	stp	x25, x26, [sp, #64]
   142ec:	stp	x27, x28, [sp, #80]
   142f0:	mov	x27, x1
   142f4:	bl	179d8 <PyInit__decimal@@Base+0x6a50>
   142f8:	cbz	w0, 14434 <PyInit__decimal@@Base+0x34ac>
   142fc:	mov	x0, x27
   14300:	bl	1798c <PyInit__decimal@@Base+0x6a04>
   14304:	cbz	w0, 14350 <PyInit__decimal@@Base+0x33c8>
   14308:	ldr	x0, [x27, #24]
   1430c:	cmp	x0, #0x0
   14310:	b.le	14350 <PyInit__decimal@@Base+0x33c8>
   14314:	ldr	x0, [x27, #16]
   14318:	add	x0, x0, #0xb
   1431c:	mov	x1, #0x1                   	// #1
   14320:	bl	15cd0 <PyInit__decimal@@Base+0x4d48>
   14324:	mov	x26, x0
   14328:	cbnz	x0, 14358 <PyInit__decimal@@Base+0x33d0>
   1432c:	mov	x0, #0xffffffffffffffff    	// #-1
   14330:	str	xzr, [x24]
   14334:	ldp	x19, x20, [sp, #16]
   14338:	ldp	x21, x22, [sp, #32]
   1433c:	ldp	x23, x24, [sp, #48]
   14340:	ldp	x25, x26, [sp, #64]
   14344:	ldp	x27, x28, [sp, #80]
   14348:	ldp	x29, x30, [sp], #96
   1434c:	ret
   14350:	mov	x0, #0xb                   	// #11
   14354:	b	1431c <PyInit__decimal@@Base+0x3394>
   14358:	mov	x0, x27
   1435c:	mov	x19, x26
   14360:	bl	17998 <PyInit__decimal@@Base+0x6a10>
   14364:	cbz	w0, 143bc <PyInit__decimal@@Base+0x3434>
   14368:	mov	w0, #0x2d                  	// #45
   1436c:	strb	w0, [x19], #1
   14370:	mov	x0, x27
   14374:	bl	1798c <PyInit__decimal@@Base+0x6a04>
   14378:	cbz	w0, 143ec <PyInit__decimal@@Base+0x3464>
   1437c:	mov	x0, x27
   14380:	bl	179b4 <PyInit__decimal@@Base+0x6a2c>
   14384:	cbz	w0, 143d4 <PyInit__decimal@@Base+0x344c>
   14388:	mov	x0, x19
   1438c:	add	x19, x19, #0x3
   14390:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   14394:	add	x1, x1, #0x908
   14398:	bl	69e0 <strcpy@plt>
   1439c:	ldr	x0, [x27, #24]
   143a0:	cmp	x0, #0x0
   143a4:	b.le	1440c <PyInit__decimal@@Base+0x3484>
   143a8:	mov	x1, x27
   143ac:	mov	x0, x19
   143b0:	bl	14250 <PyInit__decimal@@Base+0x32c8>
   143b4:	mov	x19, x0
   143b8:	b	1440c <PyInit__decimal@@Base+0x3484>
   143bc:	tbz	w22, #6, 143c8 <PyInit__decimal@@Base+0x3440>
   143c0:	mov	w0, #0x20                  	// #32
   143c4:	b	1436c <PyInit__decimal@@Base+0x33e4>
   143c8:	tbz	w22, #7, 14370 <PyInit__decimal@@Base+0x33e8>
   143cc:	mov	w0, #0x2b                  	// #43
   143d0:	b	1436c <PyInit__decimal@@Base+0x33e4>
   143d4:	mov	x0, x19
   143d8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   143dc:	add	x19, x19, #0x4
   143e0:	add	x1, x1, #0x907
   143e4:	bl	69e0 <strcpy@plt>
   143e8:	b	1439c <PyInit__decimal@@Base+0x3414>
   143ec:	mov	x0, x27
   143f0:	bl	17980 <PyInit__decimal@@Base+0x69f8>
   143f4:	cbz	w0, 14430 <PyInit__decimal@@Base+0x34a8>
   143f8:	mov	x0, x19
   143fc:	add	x19, x19, #0x8
   14400:	adrp	x1, 2b000 <PyInit__decimal@@Base+0x1a078>
   14404:	add	x1, x1, #0x936
   14408:	bl	69e0 <strcpy@plt>
   1440c:	tbz	w22, #5, 14420 <PyInit__decimal@@Base+0x3498>
   14410:	mov	x0, x19
   14414:	mov	w1, #0x25                  	// #37
   14418:	strb	w1, [x0], #1
   1441c:	mov	x19, x0
   14420:	strb	wzr, [x19]
   14424:	sub	x0, x19, x26
   14428:	str	x26, [x24]
   1442c:	b	14334 <PyInit__decimal@@Base+0x33ac>
   14430:	bl	6860 <abort@plt>
   14434:	ldp	x0, x23, [x27, #8]
   14438:	and	w25, w22, #0x8
   1443c:	add	x23, x0, x23
   14440:	tbnz	w22, #3, 1448c <PyInit__decimal@@Base+0x3504>
   14444:	tbnz	w22, #4, 1457c <PyInit__decimal@@Base+0x35f4>
   14448:	cmp	x0, #0x0
   1444c:	b.gt	14458 <PyInit__decimal@@Base+0x34d0>
   14450:	cmn	x23, #0x5
   14454:	b.ge	1457c <PyInit__decimal@@Base+0x35f4>  // b.tcont
   14458:	tbz	w22, #2, 1448c <PyInit__decimal@@Base+0x3504>
   1445c:	mov	x0, x27
   14460:	bl	179e4 <PyInit__decimal@@Base+0x6a5c>
   14464:	mov	x4, #0x3                   	// #3
   14468:	cbz	w0, 1455c <PyInit__decimal@@Base+0x35d4>
   1446c:	ldr	x21, [x27, #8]
   14470:	add	x21, x21, #0x2
   14474:	sdiv	x4, x21, x4
   14478:	add	x4, x4, x4, lsl #1
   1447c:	subs	x4, x21, x4
   14480:	b.pl	14488 <PyInit__decimal@@Base+0x3500>  // b.nfrst
   14484:	add	x4, x4, #0x3
   14488:	sub	x21, x4, #0x1
   1448c:	cmp	x21, #0x0
   14490:	ldr	x0, [x27, #16]
   14494:	b.gt	14584 <PyInit__decimal@@Base+0x35fc>
   14498:	add	x0, x0, #0x2
   1449c:	sub	x0, x0, x21
   144a0:	add	x0, x0, #0x1a
   144a4:	mov	x1, #0x1                   	// #1
   144a8:	bl	15cd0 <PyInit__decimal@@Base+0x4d48>
   144ac:	mov	x26, x0
   144b0:	cbz	x0, 1432c <PyInit__decimal@@Base+0x33a4>
   144b4:	mov	x0, x27
   144b8:	mov	x20, x26
   144bc:	bl	17998 <PyInit__decimal@@Base+0x6a10>
   144c0:	cbz	w0, 14590 <PyInit__decimal@@Base+0x3608>
   144c4:	mov	w0, #0x2d                  	// #45
   144c8:	strb	w0, [x20], #1
   144cc:	cmp	x21, #0x0
   144d0:	b.gt	145b4 <PyInit__decimal@@Base+0x362c>
   144d4:	mov	w0, #0x2e30                	// #11824
   144d8:	strh	w0, [x20], #2
   144dc:	neg	x0, x21
   144e0:	mov	x1, #0x0                   	// #0
   144e4:	mov	w2, #0x30                  	// #48
   144e8:	cmp	x0, x1
   144ec:	b.gt	145a8 <PyInit__decimal@@Base+0x3620>
   144f0:	cmp	x0, #0x0
   144f4:	mov	x1, x27
   144f8:	csel	x0, x0, xzr, ge  // ge = tcont
   144fc:	add	x0, x20, x0
   14500:	bl	14250 <PyInit__decimal@@Base+0x32c8>
   14504:	mov	x19, x0
   14508:	cmp	x21, x23
   1450c:	b.ne	14514 <PyInit__decimal@@Base+0x358c>  // b.any
   14510:	cbz	w25, 1440c <PyInit__decimal@@Base+0x3484>
   14514:	tst	x22, #0x1
   14518:	mov	w0, #0x45                  	// #69
   1451c:	mov	w1, #0x65                  	// #101
   14520:	csel	w0, w0, w1, ne  // ne = any
   14524:	strb	w0, [x19]
   14528:	subs	x20, x23, x21
   1452c:	b.pl	14650 <PyInit__decimal@@Base+0x36c8>  // b.nfrst
   14530:	sub	x20, x21, x23
   14534:	mov	w0, #0x2d                  	// #45
   14538:	strb	w0, [x19, #1]
   1453c:	mov	x0, x20
   14540:	bl	1750c <PyInit__decimal@@Base+0x6584>
   14544:	mov	w2, w0
   14548:	mov	x1, x20
   1454c:	add	x0, x19, #0x2
   14550:	mov	x3, #0x0                   	// #0
   14554:	bl	13e3c <PyInit__decimal@@Base+0x2eb4>
   14558:	b	143b4 <PyInit__decimal@@Base+0x342c>
   1455c:	sub	x0, x23, #0x1
   14560:	sdiv	x4, x0, x4
   14564:	add	x4, x4, x4, lsl #1
   14568:	subs	x4, x0, x4
   1456c:	b.pl	14574 <PyInit__decimal@@Base+0x35ec>  // b.nfrst
   14570:	add	x4, x4, #0x3
   14574:	add	x21, x21, x4
   14578:	b	1448c <PyInit__decimal@@Base+0x3504>
   1457c:	mov	x21, x23
   14580:	b	1448c <PyInit__decimal@@Base+0x3504>
   14584:	cmp	x0, x21
   14588:	csel	x0, x0, x21, ge  // ge = tcont
   1458c:	b	144a0 <PyInit__decimal@@Base+0x3518>
   14590:	tbz	w22, #6, 1459c <PyInit__decimal@@Base+0x3614>
   14594:	mov	w0, #0x20                  	// #32
   14598:	b	144c8 <PyInit__decimal@@Base+0x3540>
   1459c:	tbz	w22, #7, 144cc <PyInit__decimal@@Base+0x3544>
   145a0:	mov	w0, #0x2b                  	// #43
   145a4:	b	144c8 <PyInit__decimal@@Base+0x3540>
   145a8:	strb	w2, [x20, x1]
   145ac:	add	x1, x1, #0x1
   145b0:	b	144e8 <PyInit__decimal@@Base+0x3560>
   145b4:	ldr	x0, [x27, #16]
   145b8:	cmp	x0, x21
   145bc:	b.gt	145f4 <PyInit__decimal@@Base+0x366c>
   145c0:	mov	x1, x27
   145c4:	mov	x0, x20
   145c8:	bl	14250 <PyInit__decimal@@Base+0x32c8>
   145cc:	mov	x1, #0x0                   	// #0
   145d0:	mov	w3, #0x30                  	// #48
   145d4:	ldr	x2, [x27, #16]
   145d8:	add	x19, x0, x1
   145dc:	sub	x2, x21, x2
   145e0:	cmp	x2, x1
   145e4:	b.le	14508 <PyInit__decimal@@Base+0x3580>
   145e8:	strb	w3, [x0, x1]
   145ec:	add	x1, x1, #0x1
   145f0:	b	145d4 <PyInit__decimal@@Base+0x364c>
   145f4:	add	x28, x20, x21
   145f8:	mov	x0, x27
   145fc:	bl	17688 <PyInit__decimal@@Base+0x6700>
   14600:	mov	x19, x0
   14604:	bl	1750c <PyInit__decimal@@Base+0x6584>
   14608:	mov	w2, w0
   1460c:	mov	x1, x19
   14610:	mov	x3, x28
   14614:	mov	x0, x20
   14618:	bl	13e3c <PyInit__decimal@@Base+0x2eb4>
   1461c:	ldr	x6, [x27, #24]
   14620:	mov	x19, x0
   14624:	sub	x6, x6, #0x2
   14628:	tbnz	x6, #63, 14508 <PyInit__decimal@@Base+0x3580>
   1462c:	ldr	x0, [x27, #40]
   14630:	mov	x3, x28
   14634:	mov	w2, #0x13                  	// #19
   14638:	ldr	x1, [x0, x6, lsl #3]
   1463c:	mov	x0, x19
   14640:	bl	13e3c <PyInit__decimal@@Base+0x2eb4>
   14644:	mov	x19, x0
   14648:	sub	x6, x6, #0x1
   1464c:	b	14628 <PyInit__decimal@@Base+0x36a0>
   14650:	mov	w0, #0x2b                  	// #43
   14654:	b	14538 <PyInit__decimal@@Base+0x35b0>
   14658:	stp	x29, x30, [sp, #-80]!
   1465c:	cmp	x2, #0x0
   14660:	mov	x29, sp
   14664:	stp	x19, x20, [sp, #16]
   14668:	stp	x21, x22, [sp, #32]
   1466c:	mov	x22, x4
   14670:	stp	x23, x24, [sp, #48]
   14674:	str	x25, [sp, #64]
   14678:	b.gt	1469c <PyInit__decimal@@Base+0x3714>
   1467c:	ldp	x19, x20, [sp, #16]
   14680:	mov	x2, x4
   14684:	ldp	x21, x22, [sp, #32]
   14688:	mov	w1, #0x100                 	// #256
   1468c:	ldp	x23, x24, [sp, #48]
   14690:	ldr	x25, [sp, #64]
   14694:	ldp	x29, x30, [sp], #80
   14698:	b	18904 <PyInit__decimal@@Base+0x797c>
   1469c:	mov	x20, x0
   146a0:	mov	x19, x1
   146a4:	mov	x23, x2
   146a8:	mov	x24, x3
   146ac:	mov	x0, x1
   146b0:	ldp	x21, x25, [x1, #8]
   146b4:	bl	179d8 <PyInit__decimal@@Base+0x6a50>
   146b8:	cbz	w0, 146e0 <PyInit__decimal@@Base+0x3758>
   146bc:	mov	x2, x22
   146c0:	mov	x1, x19
   146c4:	mov	x0, x20
   146c8:	ldp	x19, x20, [sp, #16]
   146cc:	ldp	x21, x22, [sp, #32]
   146d0:	ldp	x23, x24, [sp, #48]
   146d4:	ldr	x25, [sp, #64]
   146d8:	ldp	x29, x30, [sp], #80
   146dc:	b	18b60 <PyInit__decimal@@Base+0x7bd8>
   146e0:	mov	x0, x19
   146e4:	bl	179e4 <PyInit__decimal@@Base+0x6a5c>
   146e8:	cbnz	w0, 146bc <PyInit__decimal@@Base+0x3734>
   146ec:	add	x21, x21, x25
   146f0:	mov	x0, x20
   146f4:	sub	x21, x21, x23
   146f8:	mov	x4, x22
   146fc:	mov	x3, x24
   14700:	mov	x2, x21
   14704:	mov	x1, x19
   14708:	bl	1def8 <PyInit__decimal@@Base+0xcf70>
   1470c:	ldr	x0, [x20, #16]
   14710:	cmp	x0, x23
   14714:	b.le	14744 <PyInit__decimal@@Base+0x37bc>
   14718:	mov	x4, x22
   1471c:	mov	x3, x24
   14720:	add	x2, x21, #0x1
   14724:	mov	x1, x20
   14728:	mov	x0, x20
   1472c:	ldp	x19, x20, [sp, #16]
   14730:	ldp	x21, x22, [sp, #32]
   14734:	ldp	x23, x24, [sp, #48]
   14738:	ldr	x25, [sp, #64]
   1473c:	ldp	x29, x30, [sp], #80
   14740:	b	1def8 <PyInit__decimal@@Base+0xcf70>
   14744:	ldp	x19, x20, [sp, #16]
   14748:	ldp	x21, x22, [sp, #32]
   1474c:	ldp	x23, x24, [sp, #48]
   14750:	ldr	x25, [sp, #64]
   14754:	ldp	x29, x30, [sp], #80
   14758:	ret
   1475c:	ldr	x3, [x0]
   14760:	add	x3, x3, x2
   14764:	str	x3, [x0]
   14768:	ldr	x3, [x0, #8]
   1476c:	add	x3, x3, x2
   14770:	str	x3, [x0, #8]
   14774:	ldr	x3, [x0, #16]
   14778:	sub	x3, x3, x2
   1477c:	str	x3, [x0, #16]
   14780:	ldr	x0, [x0, #24]
   14784:	cbz	x0, 14794 <PyInit__decimal@@Base+0x380c>
   14788:	add	x0, x0, x3
   1478c:	subs	x2, x2, #0x1
   14790:	b.pl	14798 <PyInit__decimal@@Base+0x3810>  // b.nfrst
   14794:	ret
   14798:	ldrb	w3, [x1, x2]
   1479c:	strb	w3, [x0, x2]
   147a0:	b	1478c <PyInit__decimal@@Base+0x3804>
   147a4:	stp	x29, x30, [sp, #-96]!
   147a8:	cmp	x1, #0x0
   147ac:	mov	x29, sp
   147b0:	stp	x19, x20, [sp, #16]
   147b4:	mov	x19, x0
   147b8:	mov	x20, x3
   147bc:	ldr	x0, [x7, #32]
   147c0:	stp	x21, x22, [sp, #32]
   147c4:	mov	x22, x1
   147c8:	mov	x21, x7
   147cc:	stp	x23, x24, [sp, #48]
   147d0:	mov	x24, x2
   147d4:	stp	x25, x26, [sp, #64]
   147d8:	mov	x26, x4
   147dc:	cset	x25, ne  // ne = any
   147e0:	stp	x27, x28, [sp, #80]
   147e4:	mov	x27, x5
   147e8:	mov	x28, x6
   147ec:	bl	6550 <strlen@plt>
   147f0:	mov	x23, x0
   147f4:	ldr	x0, [x19]
   147f8:	stp	xzr, xzr, [x19]
   147fc:	mov	x2, x28
   14800:	str	x0, [x19, #16]
   14804:	mov	x1, x27
   14808:	mov	x0, x19
   1480c:	bl	1475c <PyInit__decimal@@Base+0x37d4>
   14810:	cbz	x26, 1482c <PyInit__decimal@@Base+0x38a4>
   14814:	mov	x0, x26
   14818:	bl	6550 <strlen@plt>
   1481c:	mov	x1, x26
   14820:	mov	x2, x0
   14824:	mov	x0, x19
   14828:	bl	1419c <PyInit__decimal@@Base+0x3214>
   1482c:	ldr	x5, [x21, #40]
   14830:	mov	w6, #0x0                   	// #0
   14834:	mov	w7, #0x30                  	// #48
   14838:	ldrb	w4, [x5]
   1483c:	ldrb	w0, [x5]
   14840:	sub	w0, w0, #0x1
   14844:	and	w0, w0, #0xff
   14848:	cmp	w0, #0xfd
   1484c:	b.hi	148d4 <PyInit__decimal@@Base+0x394c>  // b.pmore
   14850:	cmp	x20, x4
   14854:	csel	x4, x20, x4, le
   14858:	sub	x20, x20, x4
   1485c:	cbz	w6, 148e4 <PyInit__decimal@@Base+0x395c>
   14860:	ldr	x0, [x19]
   14864:	ldr	x1, [x19, #16]
   14868:	add	x0, x0, x4
   1486c:	str	x0, [x19]
   14870:	ldr	x0, [x19, #8]
   14874:	sub	x2, x1, x4
   14878:	ldr	x1, [x19, #24]
   1487c:	add	x0, x0, x4
   14880:	str	x0, [x19, #8]
   14884:	str	x2, [x19, #16]
   14888:	cbz	x1, 1489c <PyInit__decimal@@Base+0x3914>
   1488c:	mov	x0, x4
   14890:	add	x1, x1, x2
   14894:	subs	x0, x0, #0x1
   14898:	b.pl	148dc <PyInit__decimal@@Base+0x3954>  // b.nfrst
   1489c:	cbnz	x20, 148f8 <PyInit__decimal@@Base+0x3970>
   148a0:	ldrb	w0, [x21, #17]
   148a4:	cmp	w0, #0x7a
   148a8:	b.ne	14938 <PyInit__decimal@@Base+0x39b0>  // b.any
   148ac:	ldr	x20, [x19, #8]
   148b0:	add	x3, x25, x20
   148b4:	ldr	x20, [x21]
   148b8:	cmp	x3, x20
   148bc:	b.ge	14938 <PyInit__decimal@@Base+0x39b0>  // b.tcont
   148c0:	ldrb	w2, [x5]
   148c4:	sub	x20, x20, x3
   148c8:	mov	w6, #0x1                   	// #1
   148cc:	sub	x4, x2, x4
   148d0:	b	1483c <PyInit__decimal@@Base+0x38b4>
   148d4:	mov	x4, x20
   148d8:	b	14858 <PyInit__decimal@@Base+0x38d0>
   148dc:	strb	w7, [x1, x0]
   148e0:	b	14894 <PyInit__decimal@@Base+0x390c>
   148e4:	mov	x2, x4
   148e8:	add	x1, x24, x20
   148ec:	mov	x0, x19
   148f0:	bl	1475c <PyInit__decimal@@Base+0x37d4>
   148f4:	b	1489c <PyInit__decimal@@Base+0x3914>
   148f8:	cbz	x23, 1491c <PyInit__decimal@@Base+0x3994>
   148fc:	ldr	x1, [x21, #32]
   14900:	cmp	x20, #0x1
   14904:	cset	x0, gt
   14908:	mov	x2, x23
   1490c:	and	x0, x0, x6
   14910:	sub	x20, x20, x0
   14914:	mov	x0, x19
   14918:	bl	1419c <PyInit__decimal@@Base+0x3214>
   1491c:	ldrb	w0, [x5]
   14920:	cbz	w0, 14930 <PyInit__decimal@@Base+0x39a8>
   14924:	ldrb	w0, [x5, #1]
   14928:	cbz	w0, 14930 <PyInit__decimal@@Base+0x39a8>
   1492c:	add	x5, x5, #0x1
   14930:	ldrb	w4, [x5]
   14934:	b	1483c <PyInit__decimal@@Base+0x38b4>
   14938:	cbz	x22, 1494c <PyInit__decimal@@Base+0x39c4>
   1493c:	mov	x1, x22
   14940:	mov	x0, x19
   14944:	mov	x2, #0x1                   	// #1
   14948:	bl	1475c <PyInit__decimal@@Base+0x37d4>
   1494c:	ldr	x0, [x19, #24]
   14950:	cbz	x0, 1495c <PyInit__decimal@@Base+0x39d4>
   14954:	ldr	x1, [x19]
   14958:	strb	wzr, [x0, x1]
   1495c:	ldp	x19, x20, [sp, #16]
   14960:	ldp	x21, x22, [sp, #32]
   14964:	ldp	x23, x24, [sp, #48]
   14968:	ldp	x25, x26, [sp, #64]
   1496c:	ldp	x27, x28, [sp, #80]
   14970:	ldp	x29, x30, [sp], #96
   14974:	ret
   14978:	stp	x29, x30, [sp, #-112]!
   1497c:	mov	x29, sp
   14980:	stp	x21, x22, [sp, #32]
   14984:	mov	x21, x0
   14988:	mov	x22, x2
   1498c:	stp	x19, x20, [sp, #16]
   14990:	mov	x19, x1
   14994:	mov	w1, #0x0                   	// #0
   14998:	stp	x23, x24, [sp, #48]
   1499c:	mov	x23, x3
   149a0:	stp	x25, x26, [sp, #64]
   149a4:	str	x27, [sp, #80]
   149a8:	bl	18478 <PyInit__decimal@@Base+0x74f0>
   149ac:	str	xzr, [x21, #8]
   149b0:	str	xzr, [x21, #24]
   149b4:	ldrb	w0, [x19]
   149b8:	cmp	w0, #0x2b
   149bc:	b.ne	149cc <PyInit__decimal@@Base+0x3a44>  // b.any
   149c0:	add	x19, x19, #0x1
   149c4:	mov	w7, #0x0                   	// #0
   149c8:	b	149e4 <PyInit__decimal@@Base+0x3a5c>
   149cc:	cmp	w0, #0x2d
   149d0:	b.ne	149c4 <PyInit__decimal@@Base+0x3a3c>  // b.any
   149d4:	mov	x0, x21
   149d8:	add	x19, x19, #0x1
   149dc:	bl	183dc <PyInit__decimal@@Base+0x7454>
   149e0:	mov	w7, #0x1                   	// #1
   149e4:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   149e8:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   149ec:	add	x2, x2, #0xeaf
   149f0:	add	x1, x1, #0xb58
   149f4:	mov	x0, x19
   149f8:	mov	x3, #0x3                   	// #3
   149fc:	bl	13e00 <PyInit__decimal@@Base+0x2e78>
   14a00:	cbz	w0, 14a98 <PyInit__decimal@@Base+0x3b10>
   14a04:	mov	x0, x21
   14a08:	mov	w1, w7
   14a0c:	mov	w2, #0x4                   	// #4
   14a10:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   14a14:	ldrb	w0, [x19, #3]
   14a18:	cbz	w0, 14b34 <PyInit__decimal@@Base+0x3bac>
   14a1c:	add	x1, sp, #0x60
   14a20:	add	x0, x19, #0x3
   14a24:	bl	141ec <PyInit__decimal@@Base+0x3264>
   14a28:	mov	x20, x0
   14a2c:	cbz	x0, 14ccc <PyInit__decimal@@Base+0x3d44>
   14a30:	ldrb	w0, [x0]
   14a34:	cbz	w0, 14b34 <PyInit__decimal@@Base+0x3bac>
   14a38:	ldr	x1, [x22]
   14a3c:	ldr	x0, [sp, #96]
   14a40:	ldrsw	x2, [x22, #40]
   14a44:	sub	x0, x0, x20
   14a48:	sub	x1, x1, x2
   14a4c:	cmp	x1, x0
   14a50:	b.cc	14ccc <PyInit__decimal@@Base+0x3d44>  // b.lo, b.ul, b.last
   14a54:	mov	x24, #0x0                   	// #0
   14a58:	mov	x25, #0x13                  	// #19
   14a5c:	sdiv	x19, x0, x25
   14a60:	msub	x25, x19, x25, x0
   14a64:	cbz	x25, 14a6c <PyInit__decimal@@Base+0x3ae4>
   14a68:	add	x19, x19, #0x1
   14a6c:	cbz	x19, 14ccc <PyInit__decimal@@Base+0x3d44>
   14a70:	mov	x2, x23
   14a74:	mov	x1, x19
   14a78:	mov	x0, x21
   14a7c:	bl	17bc4 <PyInit__decimal@@Base+0x6c3c>
   14a80:	cbnz	w0, 14d3c <PyInit__decimal@@Base+0x3db4>
   14a84:	mov	x2, x23
   14a88:	mov	w1, #0x200                 	// #512
   14a8c:	mov	x0, x21
   14a90:	bl	18904 <PyInit__decimal@@Base+0x797c>
   14a94:	b	14b34 <PyInit__decimal@@Base+0x3bac>
   14a98:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   14a9c:	adrp	x1, 25000 <PyInit__decimal@@Base+0x14078>
   14aa0:	add	x2, x2, #0xeae
   14aa4:	add	x1, x1, #0x2a5
   14aa8:	mov	x0, x19
   14aac:	mov	x3, #0x4                   	// #4
   14ab0:	bl	13e00 <PyInit__decimal@@Base+0x2e78>
   14ab4:	cbz	w0, 14adc <PyInit__decimal@@Base+0x3b54>
   14ab8:	mov	x0, x21
   14abc:	mov	w1, w7
   14ac0:	mov	w2, #0x8                   	// #8
   14ac4:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   14ac8:	ldrb	w0, [x19, #4]
   14acc:	cbz	w0, 14b34 <PyInit__decimal@@Base+0x3bac>
   14ad0:	add	x1, sp, #0x60
   14ad4:	add	x0, x19, #0x4
   14ad8:	b	14a24 <PyInit__decimal@@Base+0x3a9c>
   14adc:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   14ae0:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   14ae4:	add	x2, x2, #0xeb3
   14ae8:	add	x1, x1, #0xeb7
   14aec:	mov	x0, x19
   14af0:	mov	x3, #0x3                   	// #3
   14af4:	bl	13e00 <PyInit__decimal@@Base+0x2e78>
   14af8:	cbz	w0, 14c4c <PyInit__decimal@@Base+0x3cc4>
   14afc:	ldrb	w1, [x19, #3]
   14b00:	add	x0, x19, #0x3
   14b04:	cbz	w1, 14b24 <PyInit__decimal@@Base+0x3b9c>
   14b08:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   14b0c:	adrp	x1, 2b000 <PyInit__decimal@@Base+0x1a078>
   14b10:	add	x2, x2, #0xebb
   14b14:	add	x1, x1, #0x939
   14b18:	mov	x3, #0x6                   	// #6
   14b1c:	bl	13e00 <PyInit__decimal@@Base+0x2e78>
   14b20:	cbz	w0, 14ccc <PyInit__decimal@@Base+0x3d44>
   14b24:	mov	w1, w7
   14b28:	mov	x0, x21
   14b2c:	mov	w2, #0x2                   	// #2
   14b30:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   14b34:	ldp	x19, x20, [sp, #16]
   14b38:	ldp	x21, x22, [sp, #32]
   14b3c:	ldp	x23, x24, [sp, #48]
   14b40:	ldp	x25, x26, [sp, #64]
   14b44:	ldr	x27, [sp, #80]
   14b48:	ldp	x29, x30, [sp], #112
   14b4c:	ret
   14b50:	and	w0, w26, #0xffffffdf
   14b54:	cmp	w0, #0x45
   14b58:	b.eq	14bcc <PyInit__decimal@@Base+0x3c44>  // b.none
   14b5c:	cmp	w26, #0x2e
   14b60:	b.ne	14bec <PyInit__decimal@@Base+0x3c64>  // b.any
   14b64:	cbnz	x24, 14ccc <PyInit__decimal@@Base+0x3d44>
   14b68:	cbnz	x25, 14ccc <PyInit__decimal@@Base+0x3d44>
   14b6c:	mov	x24, x19
   14b70:	add	x19, x19, #0x1
   14b74:	ldrb	w26, [x19]
   14b78:	cbnz	w26, 14b50 <PyInit__decimal@@Base+0x3bc8>
   14b7c:	str	x19, [sp, #96]
   14b80:	cbz	x20, 14ccc <PyInit__decimal@@Base+0x3d44>
   14b84:	cbnz	x25, 14c60 <PyInit__decimal@@Base+0x3cd8>
   14b88:	ldr	x1, [sp, #96]
   14b8c:	mov	x3, #0xffffffffa763ffff    	// #-1486618625
   14b90:	movk	x3, #0xb6b3, lsl #32
   14b94:	sub	x0, x1, x20
   14b98:	movk	x3, #0xde0, lsl #48
   14b9c:	cbnz	x24, 14cd8 <PyInit__decimal@@Base+0x3d50>
   14ba0:	cmp	x0, x3
   14ba4:	b.hi	14ccc <PyInit__decimal@@Base+0x3d44>  // b.pmore
   14ba8:	mov	x2, #0x1                   	// #1
   14bac:	ldr	x1, [x21, #8]
   14bb0:	movk	x2, #0x4ec8, lsl #16
   14bb4:	movk	x2, #0x6d67, lsl #32
   14bb8:	movk	x2, #0x1bc1, lsl #48
   14bbc:	cmp	x1, x2
   14bc0:	b.le	14d2c <PyInit__decimal@@Base+0x3da4>
   14bc4:	str	x2, [x21, #8]
   14bc8:	b	14a58 <PyInit__decimal@@Base+0x3ad0>
   14bcc:	cbnz	x25, 14ccc <PyInit__decimal@@Base+0x3d44>
   14bd0:	ldrb	w0, [x19, #1]
   14bd4:	mov	x25, x19
   14bd8:	cmp	w0, #0x2b
   14bdc:	ccmp	w0, w27, #0x4, ne  // ne = any
   14be0:	b.ne	14b70 <PyInit__decimal@@Base+0x3be8>  // b.any
   14be4:	add	x19, x19, #0x1
   14be8:	b	14b70 <PyInit__decimal@@Base+0x3be8>
   14bec:	bl	6920 <__ctype_b_loc@plt>
   14bf0:	ldr	x0, [x0]
   14bf4:	ubfiz	x1, x26, #1, #8
   14bf8:	ldrh	w1, [x0, x1]
   14bfc:	tbz	w1, #11, 14ccc <PyInit__decimal@@Base+0x3d44>
   14c00:	cbnz	x20, 14b70 <PyInit__decimal@@Base+0x3be8>
   14c04:	cbnz	x25, 14b70 <PyInit__decimal@@Base+0x3be8>
   14c08:	cmp	w26, #0x30
   14c0c:	b.ne	14c44 <PyInit__decimal@@Base+0x3cbc>  // b.any
   14c10:	ldrb	w2, [x19, #1]
   14c14:	ldrb	w1, [x19, #1]
   14c18:	ldrh	w2, [x0, x2, lsl #1]
   14c1c:	tbnz	w2, #11, 14c3c <PyInit__decimal@@Base+0x3cb4>
   14c20:	cmp	w1, #0x2e
   14c24:	b.ne	14c44 <PyInit__decimal@@Base+0x3cbc>  // b.any
   14c28:	ldrb	w1, [x19, #2]
   14c2c:	ldrh	w0, [x0, x1, lsl #1]
   14c30:	tst	x0, #0x800
   14c34:	csel	x20, x19, xzr, eq  // eq = none
   14c38:	b	14b70 <PyInit__decimal@@Base+0x3be8>
   14c3c:	mov	x20, x25
   14c40:	b	14b70 <PyInit__decimal@@Base+0x3be8>
   14c44:	mov	x20, x19
   14c48:	b	14b70 <PyInit__decimal@@Base+0x3be8>
   14c4c:	mov	x25, #0x0                   	// #0
   14c50:	mov	x24, #0x0                   	// #0
   14c54:	mov	x20, #0x0                   	// #0
   14c58:	mov	w27, #0x2d                  	// #45
   14c5c:	b	14b74 <PyInit__decimal@@Base+0x3bec>
   14c60:	str	x25, [sp, #96]
   14c64:	bl	6ac0 <__errno_location@plt>
   14c68:	mov	x19, x0
   14c6c:	add	x1, sp, #0x68
   14c70:	add	x0, x25, #0x1
   14c74:	mov	w2, #0xa                   	// #10
   14c78:	str	wzr, [x19]
   14c7c:	bl	65d0 <strtoll@plt>
   14c80:	ldr	w1, [x19]
   14c84:	cbnz	w1, 14ca4 <PyInit__decimal@@Base+0x3d1c>
   14c88:	ldrb	w1, [x25, #1]
   14c8c:	cbz	w1, 14c9c <PyInit__decimal@@Base+0x3d14>
   14c90:	ldr	x1, [sp, #104]
   14c94:	ldrb	w1, [x1]
   14c98:	cbz	w1, 14ca4 <PyInit__decimal@@Base+0x3d1c>
   14c9c:	mov	w1, #0x16                  	// #22
   14ca0:	str	w1, [x19]
   14ca4:	ldr	w1, [x19]
   14ca8:	str	x0, [x21, #8]
   14cac:	cbz	w1, 14b88 <PyInit__decimal@@Base+0x3c00>
   14cb0:	cmp	w1, #0x22
   14cb4:	b.ne	14ccc <PyInit__decimal@@Base+0x3d44>  // b.any
   14cb8:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   14cbc:	cmp	x0, x1
   14cc0:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   14cc4:	ccmp	x0, x1, #0x4, ne  // ne = any
   14cc8:	b.eq	14b88 <PyInit__decimal@@Base+0x3c00>  // b.none
   14ccc:	mov	x2, x23
   14cd0:	mov	w1, #0x2                   	// #2
   14cd4:	b	14a8c <PyInit__decimal@@Base+0x3b04>
   14cd8:	sub	x1, x1, x24
   14cdc:	cmp	x20, x24
   14ce0:	sub	x4, x1, #0x1
   14ce4:	sbc	x0, x0, xzr
   14ce8:	cmp	x4, x3
   14cec:	b.hi	14ccc <PyInit__decimal@@Base+0x3d44>  // b.pmore
   14cf0:	ldr	x2, [x21, #8]
   14cf4:	mov	x5, #0x7fffffffffffffff    	// #9223372036854775807
   14cf8:	add	x1, x1, x5
   14cfc:	cmp	x2, x1
   14d00:	b.ge	14d20 <PyInit__decimal@@Base+0x3d98>  // b.tcont
   14d04:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   14d08:	str	x1, [x21, #8]
   14d0c:	cmp	x0, x3
   14d10:	b.hi	14ccc <PyInit__decimal@@Base+0x3d44>  // b.pmore
   14d14:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   14d18:	str	x1, [x21, #8]
   14d1c:	b	14a58 <PyInit__decimal@@Base+0x3ad0>
   14d20:	sub	x2, x2, x4
   14d24:	str	x2, [x21, #8]
   14d28:	b	14ba0 <PyInit__decimal@@Base+0x3c18>
   14d2c:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   14d30:	cmp	x1, x2
   14d34:	b.ne	14a58 <PyInit__decimal@@Base+0x3ad0>  // b.any
   14d38:	b	14d14 <PyInit__decimal@@Base+0x3d8c>
   14d3c:	str	x19, [x21, #24]
   14d40:	mov	x1, x19
   14d44:	cmp	x25, #0x0
   14d48:	ldr	x0, [x21, #40]
   14d4c:	b.le	14d94 <PyInit__decimal@@Base+0x3e0c>
   14d50:	sub	x1, x19, #0x1
   14d54:	mov	w3, #0x0                   	// #0
   14d58:	mov	x6, #0xa                   	// #10
   14d5c:	add	x5, x0, x1, lsl #3
   14d60:	str	xzr, [x0, x1, lsl #3]
   14d64:	cmp	x24, x20
   14d68:	b.ne	14d70 <PyInit__decimal@@Base+0x3de8>  // b.any
   14d6c:	add	x20, x24, #0x1
   14d70:	ldrb	w2, [x20], #1
   14d74:	add	w3, w3, #0x1
   14d78:	ldr	x4, [x5]
   14d7c:	sub	w2, w2, #0x30
   14d80:	cmp	w3, w25
   14d84:	sxtw	x2, w2
   14d88:	madd	x2, x4, x6, x2
   14d8c:	str	x2, [x5]
   14d90:	b.lt	14d64 <PyInit__decimal@@Base+0x3ddc>  // b.tstop
   14d94:	mov	x5, #0xa                   	// #10
   14d98:	b	14dd0 <PyInit__decimal@@Base+0x3e48>
   14d9c:	mov	w3, #0x13                  	// #19
   14da0:	str	xzr, [x0, x1, lsl #3]
   14da4:	cmp	x24, x20
   14da8:	b.ne	14db0 <PyInit__decimal@@Base+0x3e28>  // b.any
   14dac:	add	x20, x24, #0x1
   14db0:	ldrb	w2, [x20], #1
   14db4:	subs	w3, w3, #0x1
   14db8:	ldr	x4, [x0, x1, lsl #3]
   14dbc:	sub	w2, w2, #0x30
   14dc0:	sxtw	x2, w2
   14dc4:	madd	x2, x4, x5, x2
   14dc8:	str	x2, [x0, x1, lsl #3]
   14dcc:	b.ne	14da4 <PyInit__decimal@@Base+0x3e1c>  // b.any
   14dd0:	sub	x1, x1, #0x1
   14dd4:	cmn	x1, #0x1
   14dd8:	b.ne	14d9c <PyInit__decimal@@Base+0x3e14>  // b.any
   14ddc:	mov	x0, x21
   14de0:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   14de4:	mov	x2, x23
   14de8:	mov	x1, x22
   14dec:	mov	x0, x21
   14df0:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   14df4:	b	14b34 <PyInit__decimal@@Base+0x3bac>
   14df8:	cmp	w1, #0x0
   14dfc:	stp	x29, x30, [sp, #-32]!
   14e00:	cset	w2, ne  // ne = any
   14e04:	mov	x29, sp
   14e08:	mov	x1, x0
   14e0c:	orr	w2, w2, #0x2
   14e10:	add	x0, sp, #0x18
   14e14:	mov	x3, #0x1                   	// #1
   14e18:	bl	142c4 <PyInit__decimal@@Base+0x333c>
   14e1c:	ldr	x0, [sp, #24]
   14e20:	ldp	x29, x30, [sp], #32
   14e24:	ret
   14e28:	cmp	w1, #0x0
   14e2c:	stp	x29, x30, [sp, #-32]!
   14e30:	cset	w2, ne  // ne = any
   14e34:	mov	x29, sp
   14e38:	mov	x1, x0
   14e3c:	orr	w2, w2, #0x4
   14e40:	add	x0, sp, #0x18
   14e44:	mov	x3, #0x1                   	// #1
   14e48:	bl	142c4 <PyInit__decimal@@Base+0x333c>
   14e4c:	ldr	x0, [sp, #24]
   14e50:	ldp	x29, x30, [sp], #32
   14e54:	ret
   14e58:	cmp	w2, #0x0
   14e5c:	mov	x3, #0x1                   	// #1
   14e60:	cset	w2, ne  // ne = any
   14e64:	orr	w2, w2, #0x2
   14e68:	b	142c4 <PyInit__decimal@@Base+0x333c>
   14e6c:	cmp	w2, #0x0
   14e70:	mov	x3, #0x1                   	// #1
   14e74:	cset	w2, ne  // ne = any
   14e78:	orr	w2, w2, #0x4
   14e7c:	b	142c4 <PyInit__decimal@@Base+0x333c>
   14e80:	stp	x29, x30, [sp, #-32]!
   14e84:	mov	x29, sp
   14e88:	str	x19, [sp, #16]
   14e8c:	mov	x19, x0
   14e90:	ldr	x0, [x0, #24]
   14e94:	bl	6550 <strlen@plt>
   14e98:	sub	x0, x0, #0x1
   14e9c:	cmp	x0, #0x3
   14ea0:	b.hi	14ec0 <PyInit__decimal@@Base+0x3f38>  // b.pmore
   14ea4:	ldr	x0, [x19, #32]
   14ea8:	bl	6550 <strlen@plt>
   14eac:	cmp	x0, #0x4
   14eb0:	csetm	w0, hi  // hi = pmore
   14eb4:	ldr	x19, [sp, #16]
   14eb8:	ldp	x29, x30, [sp], #32
   14ebc:	ret
   14ec0:	mov	w0, #0xffffffff            	// #-1
   14ec4:	b	14eb4 <PyInit__decimal@@Base+0x3f2c>
   14ec8:	stp	x29, x30, [sp, #-64]!
   14ecc:	cmp	w2, #0x0
   14ed0:	mov	w2, #0x67                  	// #103
   14ed4:	mov	x29, sp
   14ed8:	stp	x19, x20, [sp, #16]
   14edc:	mov	x19, x0
   14ee0:	stp	x21, x22, [sp, #32]
   14ee4:	str	xzr, [x0]
   14ee8:	mov	x0, #0xffffffffffffffff    	// #-1
   14eec:	str	x0, [x19, #8]
   14ef0:	mov	w0, #0x47                  	// #71
   14ef4:	csel	w0, w0, w2, ne  // ne = any
   14ef8:	strb	w0, [x19, #16]
   14efc:	mov	w0, #0x2d3e                	// #11582
   14f00:	sturh	w0, [x19, #17]
   14f04:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   14f08:	add	x0, x0, #0xec7
   14f0c:	stp	x0, x0, [x19, #24]
   14f10:	str	x0, [x19, #40]
   14f14:	str	x1, [sp, #56]
   14f18:	ldrb	w2, [x1]
   14f1c:	cbnz	w2, 15074 <PyInit__decimal@@Base+0x40ec>
   14f20:	mov	w0, #0x0                   	// #0
   14f24:	strb	wzr, [x19, #19]
   14f28:	ldrb	w2, [x1]
   14f2c:	cbz	w2, 15194 <PyInit__decimal@@Base+0x420c>
   14f30:	add	x2, x1, w0, sxtw
   14f34:	ldrb	w0, [x1, w0, sxtw]
   14f38:	sub	w3, w0, #0x3c
   14f3c:	and	w3, w3, #0xff
   14f40:	cmp	w3, #0x2
   14f44:	b.ls	14f50 <PyInit__decimal@@Base+0x3fc8>  // b.plast
   14f48:	cmp	w0, #0x5e
   14f4c:	b.ne	15194 <PyInit__decimal@@Base+0x420c>  // b.any
   14f50:	add	x1, x2, #0x1
   14f54:	strb	w0, [x19, #17]
   14f58:	str	x1, [sp, #56]
   14f5c:	mov	w1, #0x1                   	// #1
   14f60:	ldr	x0, [sp, #56]
   14f64:	ldrb	w3, [x0]
   14f68:	cmp	w3, #0x2d
   14f6c:	b.hi	14f8c <PyInit__decimal@@Base+0x4004>  // b.pmore
   14f70:	mov	x2, #0x280100000000        	// #43984760078336
   14f74:	lsr	x2, x2, x3
   14f78:	tbz	w2, #0, 14f8c <PyInit__decimal@@Base+0x4004>
   14f7c:	add	x2, x0, #0x1
   14f80:	str	x2, [sp, #56]
   14f84:	ldrb	w0, [x0]
   14f88:	strb	w0, [x19, #18]
   14f8c:	ldr	x0, [sp, #56]
   14f90:	ldrb	w2, [x0]
   14f94:	cmp	w2, #0x30
   14f98:	b.ne	14fbc <PyInit__decimal@@Base+0x4034>  // b.any
   14f9c:	cbnz	w1, 15180 <PyInit__decimal@@Base+0x41f8>
   14fa0:	mov	w1, #0x7a                  	// #122
   14fa4:	strb	w1, [x19, #17]
   14fa8:	add	x1, x0, #0x1
   14fac:	str	x1, [sp, #56]
   14fb0:	ldrb	w0, [x0]
   14fb4:	strb	w0, [x19, #19]
   14fb8:	strb	wzr, [x19, #20]
   14fbc:	bl	6920 <__ctype_b_loc@plt>
   14fc0:	mov	x20, x0
   14fc4:	ldr	x22, [sp, #56]
   14fc8:	ldr	x1, [x0]
   14fcc:	ldrb	w2, [x22]
   14fd0:	ldrb	w0, [x22]
   14fd4:	ldrh	w1, [x1, x2, lsl #1]
   14fd8:	tbnz	w1, #11, 151c8 <PyInit__decimal@@Base+0x4240>
   14fdc:	ldr	x0, [sp, #56]
   14fe0:	ldrb	w1, [x0]
   14fe4:	cmp	w1, #0x2c
   14fe8:	b.ne	15018 <PyInit__decimal@@Base+0x4090>  // b.any
   14fec:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   14ff0:	add	x1, x1, #0xec1
   14ff4:	str	x1, [x19, #24]
   14ff8:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   14ffc:	add	x1, x1, #0xec3
   15000:	add	x0, x0, #0x1
   15004:	str	x1, [x19, #32]
   15008:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   1500c:	add	x1, x1, #0xec5
   15010:	str	x1, [x19, #40]
   15014:	str	x0, [sp, #56]
   15018:	ldr	x0, [sp, #56]
   1501c:	ldrb	w1, [x0]
   15020:	cmp	w1, #0x2e
   15024:	b.eq	15204 <PyInit__decimal@@Base+0x427c>  // b.none
   15028:	ldr	x1, [sp, #56]
   1502c:	ldrb	w2, [x1]
   15030:	and	w0, w2, #0xffffffdf
   15034:	and	w3, w0, #0xff
   15038:	sub	w0, w0, #0x45
   1503c:	and	w0, w0, #0xff
   15040:	cmp	w0, #0x2
   15044:	b.ls	15050 <PyInit__decimal@@Base+0x40c8>  // b.plast
   15048:	cmp	w2, #0x25
   1504c:	b.ne	15250 <PyInit__decimal@@Base+0x42c8>  // b.any
   15050:	add	x0, x1, #0x1
   15054:	str	x0, [sp, #56]
   15058:	ldrb	w0, [x1]
   1505c:	strb	w0, [x19, #16]
   15060:	ldr	x0, [sp, #56]
   15064:	ldrb	w0, [x0]
   15068:	cmp	w0, #0x0
   1506c:	cset	w0, eq  // eq = none
   15070:	b	15184 <PyInit__decimal@@Base+0x41fc>
   15074:	tbnz	w2, #7, 15088 <PyInit__decimal@@Base+0x4100>
   15078:	mov	w0, #0x1                   	// #1
   1507c:	strb	w2, [x19, #19]
   15080:	strb	wzr, [x19, #20]
   15084:	b	14f28 <PyInit__decimal@@Base+0x3fa0>
   15088:	add	w0, w2, #0x3e
   1508c:	and	w0, w0, #0xff
   15090:	cmp	w0, #0x1d
   15094:	b.ls	150e0 <PyInit__decimal@@Base+0x4158>  // b.plast
   15098:	cmp	w2, #0xe0
   1509c:	b.eq	150ec <PyInit__decimal@@Base+0x4164>  // b.none
   150a0:	cmp	w2, #0xec
   150a4:	b.ls	1513c <PyInit__decimal@@Base+0x41b4>  // b.plast
   150a8:	cmp	w2, #0xed
   150ac:	b.eq	15130 <PyInit__decimal@@Base+0x41a8>  // b.none
   150b0:	cmp	w2, #0xef
   150b4:	b.ls	1513c <PyInit__decimal@@Base+0x41b4>  // b.plast
   150b8:	cmp	w2, #0xf0
   150bc:	b.eq	15144 <PyInit__decimal@@Base+0x41bc>  // b.none
   150c0:	cmp	w2, #0xf3
   150c4:	b.ls	15154 <PyInit__decimal@@Base+0x41cc>  // b.plast
   150c8:	cmp	w2, #0xf4
   150cc:	b.ne	1517c <PyInit__decimal@@Base+0x41f4>  // b.any
   150d0:	mov	w0, #0x4                   	// #4
   150d4:	mov	w3, #0x8f                  	// #143
   150d8:	mov	w4, #0x80                  	// #128
   150dc:	b	150f8 <PyInit__decimal@@Base+0x4170>
   150e0:	mov	w0, #0x2                   	// #2
   150e4:	mov	w3, #0xbf                  	// #191
   150e8:	b	150d8 <PyInit__decimal@@Base+0x4150>
   150ec:	mov	w0, #0x3                   	// #3
   150f0:	mov	w3, #0xbf                  	// #191
   150f4:	mov	w4, #0xa0                  	// #160
   150f8:	strb	w2, [x19, #19]
   150fc:	ldrb	w2, [x1, #1]
   15100:	cmp	w2, w4
   15104:	b.cc	1517c <PyInit__decimal@@Base+0x41f4>  // b.lo, b.ul, b.last
   15108:	cmp	w2, w3
   1510c:	b.hi	1517c <PyInit__decimal@@Base+0x41f4>  // b.pmore
   15110:	add	x5, x19, #0x13
   15114:	add	x6, x19, #0x12
   15118:	strb	w2, [x19, #20]
   1511c:	mov	x2, #0x2                   	// #2
   15120:	cmp	w0, w2
   15124:	b.gt	1515c <PyInit__decimal@@Base+0x41d4>
   15128:	strb	wzr, [x5, w2, sxtw]
   1512c:	b	14f28 <PyInit__decimal@@Base+0x3fa0>
   15130:	mov	w0, #0x3                   	// #3
   15134:	mov	w3, #0x9f                  	// #159
   15138:	b	150d8 <PyInit__decimal@@Base+0x4150>
   1513c:	mov	w0, #0x3                   	// #3
   15140:	b	150e4 <PyInit__decimal@@Base+0x415c>
   15144:	mov	w0, #0x4                   	// #4
   15148:	mov	w3, #0xbf                  	// #191
   1514c:	mov	w4, #0x90                  	// #144
   15150:	b	150f8 <PyInit__decimal@@Base+0x4170>
   15154:	mov	w0, #0x4                   	// #4
   15158:	b	150e4 <PyInit__decimal@@Base+0x415c>
   1515c:	ldrb	w4, [x1, x2]
   15160:	add	x2, x2, #0x1
   15164:	sub	w3, w4, #0x80
   15168:	and	w3, w3, #0xff
   1516c:	cmp	w3, #0x3f
   15170:	b.hi	1517c <PyInit__decimal@@Base+0x41f4>  // b.pmore
   15174:	strb	w4, [x6, x2]
   15178:	b	15120 <PyInit__decimal@@Base+0x4198>
   1517c:	strb	wzr, [x19, #19]
   15180:	mov	w0, #0x0                   	// #0
   15184:	ldp	x19, x20, [sp, #16]
   15188:	ldp	x21, x22, [sp, #32]
   1518c:	ldp	x29, x30, [sp], #64
   15190:	ret
   15194:	mov	w0, #0x20                  	// #32
   15198:	sturh	w0, [x19, #19]
   1519c:	ldrb	w0, [x1]
   151a0:	sub	w2, w0, #0x3c
   151a4:	and	w2, w2, #0xff
   151a8:	cmp	w2, #0x2
   151ac:	b.ls	151b8 <PyInit__decimal@@Base+0x4230>  // b.plast
   151b0:	cmp	w0, #0x5e
   151b4:	b.ne	151c0 <PyInit__decimal@@Base+0x4238>  // b.any
   151b8:	add	x1, x1, #0x1
   151bc:	b	14f54 <PyInit__decimal@@Base+0x3fcc>
   151c0:	mov	w1, #0x0                   	// #0
   151c4:	b	14f60 <PyInit__decimal@@Base+0x3fd8>
   151c8:	cmp	w0, #0x30
   151cc:	b.eq	15180 <PyInit__decimal@@Base+0x41f8>  // b.none
   151d0:	bl	6ac0 <__errno_location@plt>
   151d4:	mov	x21, x0
   151d8:	add	x1, sp, #0x38
   151dc:	mov	x0, x22
   151e0:	mov	w2, #0xa                   	// #10
   151e4:	str	wzr, [x21]
   151e8:	bl	65d0 <strtoll@plt>
   151ec:	str	x0, [x19]
   151f0:	ldr	w0, [x21]
   151f4:	cmp	w0, #0x22
   151f8:	ccmp	w0, #0x16, #0x4, ne  // ne = any
   151fc:	b.ne	14fdc <PyInit__decimal@@Base+0x4054>  // b.any
   15200:	b	15180 <PyInit__decimal@@Base+0x41f8>
   15204:	add	x21, x0, #0x1
   15208:	str	x21, [sp, #56]
   1520c:	ldrb	w1, [x0, #1]
   15210:	ldr	x0, [x20]
   15214:	ldrh	w0, [x0, x1, lsl #1]
   15218:	tbz	w0, #11, 15180 <PyInit__decimal@@Base+0x41f8>
   1521c:	bl	6ac0 <__errno_location@plt>
   15220:	mov	x20, x0
   15224:	add	x1, sp, #0x38
   15228:	mov	x0, x21
   1522c:	mov	w2, #0xa                   	// #10
   15230:	str	wzr, [x20]
   15234:	bl	65d0 <strtoll@plt>
   15238:	str	x0, [x19, #8]
   1523c:	ldr	w0, [x20]
   15240:	cmp	w0, #0x22
   15244:	ccmp	w0, #0x16, #0x4, ne  // ne = any
   15248:	b.ne	15028 <PyInit__decimal@@Base+0x40a0>  // b.any
   1524c:	b	15180 <PyInit__decimal@@Base+0x41f8>
   15250:	cmp	w3, #0x4e
   15254:	b.ne	15060 <PyInit__decimal@@Base+0x40d8>  // b.any
   15258:	ldr	x0, [x19, #32]
   1525c:	ldrb	w0, [x0]
   15260:	cbnz	w0, 15180 <PyInit__decimal@@Base+0x41f8>
   15264:	add	x0, x1, #0x1
   15268:	str	x0, [sp, #56]
   1526c:	ldrb	w0, [x1]
   15270:	mov	w1, #0x67                  	// #103
   15274:	cmp	w0, #0x4e
   15278:	mov	w0, #0x47                  	// #71
   1527c:	csel	w0, w0, w1, eq  // eq = none
   15280:	strb	w0, [x19, #16]
   15284:	bl	66c0 <localeconv@plt>
   15288:	ldr	x1, [x0]
   1528c:	str	x1, [x19, #24]
   15290:	ldp	x1, x0, [x0, #8]
   15294:	stp	x1, x0, [x19, #32]
   15298:	mov	x0, x19
   1529c:	bl	14e80 <PyInit__decimal@@Base+0x3ef8>
   152a0:	tbz	w0, #31, 15060 <PyInit__decimal@@Base+0x40d8>
   152a4:	b	15180 <PyInit__decimal@@Base+0x41f8>
   152a8:	sub	sp, sp, #0x2f0
   152ac:	stp	x29, x30, [sp]
   152b0:	mov	x29, sp
   152b4:	stp	x19, x20, [sp, #16]
   152b8:	mov	x20, x0
   152bc:	mov	w0, #0x30                  	// #48
   152c0:	strb	w0, [sp, #144]
   152c4:	mov	x0, #0x40                  	// #64
   152c8:	stp	xzr, x0, [sp, #168]
   152cc:	add	x0, sp, #0xf0
   152d0:	str	x0, [sp, #184]
   152d4:	ldr	x0, [x1]
   152d8:	stp	x21, x22, [sp, #32]
   152dc:	mov	x21, x3
   152e0:	stp	x23, x24, [sp, #48]
   152e4:	stp	x25, x26, [sp, #64]
   152e8:	mov	x26, #0xffffffffa763ffff    	// #-1486618625
   152ec:	movk	x26, #0xb6b3, lsl #32
   152f0:	stp	x27, x28, [sp, #80]
   152f4:	movk	x26, #0xde0, lsl #48
   152f8:	cmp	x0, x26
   152fc:	stp	xzr, xzr, [sp, #152]
   15300:	ldrb	w23, [x1, #16]
   15304:	b.le	1531c <PyInit__decimal@@Base+0x4394>
   15308:	ldr	w0, [x3]
   1530c:	orr	w0, w0, #0x100
   15310:	str	w0, [x3]
   15314:	mov	x0, #0x0                   	// #0
   15318:	b	15824 <PyInit__decimal@@Base+0x489c>
   1531c:	mov	x19, x1
   15320:	mov	x25, x2
   15324:	bl	6920 <__ctype_b_loc@plt>
   15328:	mov	x24, x0
   1532c:	ubfiz	x0, x23, #1, #8
   15330:	mov	w22, w23
   15334:	ldr	x1, [x24]
   15338:	ldrh	w0, [x1, x0]
   1533c:	tbz	w0, #8, 153e0 <PyInit__decimal@@Base+0x4458>
   15340:	bl	6690 <__ctype_tolower_loc@plt>
   15344:	ldr	x0, [x0]
   15348:	ldr	w23, [x0, x22, lsl #2]
   1534c:	mov	w22, #0x1                   	// #1
   15350:	and	w23, w23, #0xff
   15354:	ldrb	w0, [x19, #18]
   15358:	cmp	w0, #0x20
   1535c:	b.ne	153e8 <PyInit__decimal@@Base+0x4460>  // b.any
   15360:	orr	w22, w22, #0x40
   15364:	mov	x0, x20
   15368:	bl	179d8 <PyInit__decimal@@Base+0x6a50>
   1536c:	cbz	w0, 153f8 <PyInit__decimal@@Base+0x4470>
   15370:	ldrb	w0, [x19, #17]
   15374:	cmp	w0, #0x7a
   15378:	b.ne	153a8 <PyInit__decimal@@Base+0x4420>  // b.any
   1537c:	ldp	x0, x1, [x19]
   15380:	stp	x0, x1, [sp, #192]
   15384:	ldp	x0, x1, [x19, #16]
   15388:	stp	x0, x1, [sp, #208]
   1538c:	ldp	x0, x1, [x19, #32]
   15390:	add	x19, sp, #0xc0
   15394:	stp	x0, x1, [sp, #224]
   15398:	mov	w0, #0x20                  	// #32
   1539c:	sturh	w0, [sp, #211]
   153a0:	mov	w0, #0x3e                  	// #62
   153a4:	strb	w0, [sp, #209]
   153a8:	cmp	w23, #0x25
   153ac:	b.ne	153b4 <PyInit__decimal@@Base+0x442c>  // b.any
   153b0:	orr	w22, w22, #0x20
   153b4:	mov	x3, #0x1                   	// #1
   153b8:	add	x23, sp, #0x70
   153bc:	mov	w2, w22
   153c0:	mov	x1, x20
   153c4:	add	x0, x23, #0x18
   153c8:	bl	142c4 <PyInit__decimal@@Base+0x333c>
   153cc:	stp	x0, x0, [sp, #112]
   153d0:	tbz	x0, #63, 15580 <PyInit__decimal@@Base+0x45f8>
   153d4:	ldr	w0, [x21]
   153d8:	orr	w0, w0, #0x200
   153dc:	b	15444 <PyInit__decimal@@Base+0x44bc>
   153e0:	mov	w22, #0x0                   	// #0
   153e4:	b	15354 <PyInit__decimal@@Base+0x43cc>
   153e8:	cmp	w0, #0x2b
   153ec:	b.ne	15364 <PyInit__decimal@@Base+0x43dc>  // b.any
   153f0:	orr	w22, w22, #0x80
   153f4:	b	15364 <PyInit__decimal@@Base+0x43dc>
   153f8:	str	wzr, [sp, #192]
   153fc:	cmp	w23, #0x66
   15400:	b.eq	15480 <PyInit__decimal@@Base+0x44f8>  // b.none
   15404:	b.hi	15420 <PyInit__decimal@@Base+0x4498>  // b.pmore
   15408:	cmp	w23, #0x25
   1540c:	b.eq	15454 <PyInit__decimal@@Base+0x44cc>  // b.none
   15410:	orr	w22, w22, #0x8
   15414:	cmp	w23, #0x65
   15418:	b.eq	1542c <PyInit__decimal@@Base+0x44a4>  // b.none
   1541c:	bl	6860 <abort@plt>
   15420:	cmp	w23, #0x67
   15424:	b.ne	1541c <PyInit__decimal@@Base+0x4494>  // b.any
   15428:	orr	w22, w22, #0x2
   1542c:	ldr	x2, [x19, #8]
   15430:	tbnz	x2, #63, 15570 <PyInit__decimal@@Base+0x45e8>
   15434:	cmp	x2, x26
   15438:	b.le	1548c <PyInit__decimal@@Base+0x4504>
   1543c:	ldr	w0, [x21]
   15440:	orr	w0, w0, #0x100
   15444:	str	w0, [x21]
   15448:	add	x0, sp, #0x90
   1544c:	bl	17b68 <PyInit__decimal@@Base+0x6be0>
   15450:	b	15314 <PyInit__decimal@@Base+0x438c>
   15454:	add	x23, sp, #0x90
   15458:	orr	w22, w22, #0x20
   1545c:	mov	x2, x21
   15460:	mov	x1, x20
   15464:	mov	x0, x23
   15468:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1546c:	cbz	w0, 15314 <PyInit__decimal@@Base+0x438c>
   15470:	ldr	x0, [sp, #152]
   15474:	mov	x20, x23
   15478:	add	x0, x0, #0x2
   1547c:	str	x0, [sp, #152]
   15480:	orr	w22, w22, #0x10
   15484:	mov	w23, #0x66                  	// #102
   15488:	b	1542c <PyInit__decimal@@Base+0x44a4>
   1548c:	cmp	w23, #0x66
   15490:	b.eq	1551c <PyInit__decimal@@Base+0x4594>  // b.none
   15494:	cmp	w23, #0x67
   15498:	b.ne	154d4 <PyInit__decimal@@Base+0x454c>  // b.any
   1549c:	ldr	x0, [x20, #16]
   154a0:	cmp	x2, #0x0
   154a4:	mov	x23, #0x1                   	// #1
   154a8:	csel	x2, x2, x23, ne  // ne = any
   154ac:	cmp	x0, x2
   154b0:	b.le	154cc <PyInit__decimal@@Base+0x4544>
   154b4:	add	x0, sp, #0x90
   154b8:	add	x4, sp, #0xc0
   154bc:	mov	x3, x25
   154c0:	mov	x1, x20
   154c4:	mov	x20, x0
   154c8:	bl	14658 <PyInit__decimal@@Base+0x36d0>
   154cc:	mov	x3, #0x1                   	// #1
   154d0:	b	154ec <PyInit__decimal@@Base+0x4564>
   154d4:	mov	x0, x20
   154d8:	bl	179e4 <PyInit__decimal@@Base+0x6a5c>
   154dc:	ldr	x2, [x19, #8]
   154e0:	cbz	w0, 15508 <PyInit__decimal@@Base+0x4580>
   154e4:	mov	x3, #0x1                   	// #1
   154e8:	sub	x3, x3, x2
   154ec:	ldr	w0, [sp, #192]
   154f0:	mov	w1, #0x3be                 	// #958
   154f4:	ands	w0, w0, w1
   154f8:	b.eq	153b8 <PyInit__decimal@@Base+0x4430>  // b.none
   154fc:	ldr	w1, [x21]
   15500:	orr	w0, w1, w0
   15504:	b	15444 <PyInit__decimal@@Base+0x44bc>
   15508:	add	x0, sp, #0x90
   1550c:	add	x4, sp, #0xc0
   15510:	mov	x3, x25
   15514:	add	x2, x2, #0x1
   15518:	b	154c0 <PyInit__decimal@@Base+0x4538>
   1551c:	add	x0, sp, #0x90
   15520:	mov	x1, x20
   15524:	add	x4, sp, #0xc0
   15528:	mov	x3, x25
   1552c:	neg	x2, x2
   15530:	mov	x20, x0
   15534:	bl	1debc <PyInit__decimal@@Base+0xcf34>
   15538:	mov	x0, x20
   1553c:	bl	179e4 <PyInit__decimal@@Base+0x6a5c>
   15540:	cbz	w0, 154cc <PyInit__decimal@@Base+0x4544>
   15544:	ldr	x0, [x20, #8]
   15548:	cmp	x0, #0x0
   1554c:	b.le	154cc <PyInit__decimal@@Base+0x4544>
   15550:	add	x0, sp, #0x90
   15554:	mov	x1, x20
   15558:	add	x4, sp, #0xc0
   1555c:	mov	x3, x25
   15560:	mov	x20, x0
   15564:	mov	x2, #0x0                   	// #0
   15568:	bl	1debc <PyInit__decimal@@Base+0xcf34>
   1556c:	b	154cc <PyInit__decimal@@Base+0x4544>
   15570:	cmp	w23, #0x66
   15574:	mov	x3, #0x1                   	// #1
   15578:	b.ne	154ec <PyInit__decimal@@Base+0x4564>  // b.any
   1557c:	b	15538 <PyInit__decimal@@Base+0x45b0>
   15580:	ldr	x0, [x19, #24]
   15584:	ldrb	w0, [x0]
   15588:	cbz	w0, 156f8 <PyInit__decimal@@Base+0x4770>
   1558c:	mov	x0, x20
   15590:	bl	179d8 <PyInit__decimal@@Base+0x6a50>
   15594:	cbnz	w0, 156f8 <PyInit__decimal@@Base+0x4770>
   15598:	mov	x0, #0x23                  	// #35
   1559c:	ldr	x1, [sp, #120]
   155a0:	movk	x0, #0xa764, lsl #16
   155a4:	movk	x0, #0xb6b3, lsl #32
   155a8:	movk	x0, #0xde0, lsl #48
   155ac:	cmp	x1, x0
   155b0:	ldr	x22, [sp, #136]
   155b4:	b.le	155d8 <PyInit__decimal@@Base+0x4650>
   155b8:	ldr	w0, [x21]
   155bc:	orr	w0, w0, #0x100
   155c0:	str	w0, [x21]
   155c4:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   155c8:	ldr	x1, [x0, #1720]
   155cc:	mov	x0, x22
   155d0:	blr	x1
   155d4:	b	15448 <PyInit__decimal@@Base+0x44c0>
   155d8:	ldrb	w1, [x22]
   155dc:	cmp	w1, #0x2d
   155e0:	b.hi	156a8 <PyInit__decimal@@Base+0x4720>  // b.pmore
   155e4:	mov	x0, #0x280100000000        	// #43984760078336
   155e8:	lsr	x0, x0, x1
   155ec:	tbz	w0, #0, 156a8 <PyInit__decimal@@Base+0x4720>
   155f0:	add	x25, x22, #0x1
   155f4:	mov	x26, x22
   155f8:	ldr	x2, [x24]
   155fc:	add	x3, x25, #0x1
   15600:	ldrb	w1, [x3]
   15604:	ldrb	w0, [x3]
   15608:	ldrh	w1, [x2, x1, lsl #1]
   1560c:	tbnz	w1, #11, 156b4 <PyInit__decimal@@Base+0x472c>
   15610:	cmp	w0, #0x2e
   15614:	b.ne	156bc <PyInit__decimal@@Base+0x4734>  // b.any
   15618:	ldr	x24, [x19, #24]
   1561c:	add	x27, x3, #0x1
   15620:	cbnz	x24, 15640 <PyInit__decimal@@Base+0x46b8>
   15624:	ldr	x0, [x19, #32]
   15628:	ldrb	w0, [x0]
   1562c:	cbz	w0, 156f8 <PyInit__decimal@@Base+0x4770>
   15630:	ldr	x0, [x19, #40]
   15634:	ldrb	w0, [x0]
   15638:	cbz	w0, 156f8 <PyInit__decimal@@Base+0x4770>
   1563c:	mov	x24, #0x0                   	// #0
   15640:	ldr	x6, [sp, #112]
   15644:	sub	x28, x27, x22
   15648:	sub	x20, x3, x25
   1564c:	mov	x7, x19
   15650:	sub	x28, x6, x28
   15654:	mov	x5, x27
   15658:	mov	x4, x24
   1565c:	mov	x3, x20
   15660:	mov	x2, x25
   15664:	mov	x1, x26
   15668:	mov	x0, x23
   1566c:	mov	x6, x28
   15670:	str	xzr, [sp, #136]
   15674:	bl	147a4 <PyInit__decimal@@Base+0x381c>
   15678:	ldr	x0, [sp, #112]
   1567c:	mov	x1, #0x1                   	// #1
   15680:	add	x0, x0, x1
   15684:	bl	15cd0 <PyInit__decimal@@Base+0x4d48>
   15688:	str	x0, [sp, #136]
   1568c:	adrp	x8, 45000 <PyInit__decimal@@Base+0x34078>
   15690:	cbnz	x0, 156c4 <PyInit__decimal@@Base+0x473c>
   15694:	ldr	w0, [x21]
   15698:	ldr	x1, [x8, #1720]
   1569c:	orr	w0, w0, #0x200
   156a0:	str	w0, [x21]
   156a4:	b	155cc <PyInit__decimal@@Base+0x4644>
   156a8:	mov	x25, x22
   156ac:	mov	x26, #0x0                   	// #0
   156b0:	b	155f8 <PyInit__decimal@@Base+0x4670>
   156b4:	add	x3, x3, #0x1
   156b8:	b	15600 <PyInit__decimal@@Base+0x4678>
   156bc:	mov	x27, x3
   156c0:	b	15624 <PyInit__decimal@@Base+0x469c>
   156c4:	mov	x1, x26
   156c8:	mov	x0, x23
   156cc:	mov	x7, x19
   156d0:	mov	x6, x28
   156d4:	mov	x5, x27
   156d8:	mov	x4, x24
   156dc:	mov	x3, x20
   156e0:	mov	x2, x25
   156e4:	bl	147a4 <PyInit__decimal@@Base+0x381c>
   156e8:	adrp	x8, 45000 <PyInit__decimal@@Base+0x34078>
   156ec:	mov	x0, x22
   156f0:	ldr	x1, [x8, #1720]
   156f4:	blr	x1
   156f8:	ldr	x20, [x19]
   156fc:	cbz	x20, 15818 <PyInit__decimal@@Base+0x4890>
   15700:	ldr	x22, [sp, #120]
   15704:	cmp	x20, x22
   15708:	b.le	15818 <PyInit__decimal@@Base+0x4890>
   1570c:	sub	x20, x20, x22
   15710:	ldrb	w24, [x19, #17]
   15714:	add	x19, x19, #0x13
   15718:	strb	wzr, [sp, #111]
   1571c:	mov	x0, x19
   15720:	bl	6550 <strlen@plt>
   15724:	mul	x25, x0, x20
   15728:	mov	x23, x0
   1572c:	ldr	x1, [sp, #112]
   15730:	add	x3, sp, #0x6f
   15734:	ldr	x0, [sp, #136]
   15738:	add	x1, x1, #0x1
   1573c:	add	x1, x1, x25
   15740:	mov	x2, #0x1                   	// #1
   15744:	bl	15d18 <PyInit__decimal@@Base+0x4d90>
   15748:	str	x0, [sp, #136]
   1574c:	ldrb	w1, [sp, #111]
   15750:	mov	x22, x0
   15754:	cbz	w1, 15770 <PyInit__decimal@@Base+0x47e8>
   15758:	ldr	w1, [x21]
   1575c:	orr	w1, w1, #0x200
   15760:	str	w1, [x21]
   15764:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
   15768:	ldr	x1, [x1, #1720]
   1576c:	b	155d0 <PyInit__decimal@@Base+0x4648>
   15770:	mov	x27, x20
   15774:	cmp	w24, #0x7a
   15778:	b.eq	15844 <PyInit__decimal@@Base+0x48bc>  // b.none
   1577c:	cmp	w24, #0x3c
   15780:	b.eq	1585c <PyInit__decimal@@Base+0x48d4>  // b.none
   15784:	sub	w0, w24, #0x3d
   15788:	and	w0, w0, #0xff
   1578c:	cmp	w0, #0x1
   15790:	b.hi	1584c <PyInit__decimal@@Base+0x48c4>  // b.pmore
   15794:	mov	x21, x20
   15798:	mov	x27, #0x0                   	// #0
   1579c:	cmp	w24, #0x3d
   157a0:	ldr	x26, [sp, #112]
   157a4:	b.ne	157c8 <PyInit__decimal@@Base+0x4840>  // b.any
   157a8:	ldrb	w1, [x22]
   157ac:	cmp	w1, #0x2d
   157b0:	b.hi	157c8 <PyInit__decimal@@Base+0x4840>  // b.pmore
   157b4:	mov	x0, #0x280100000000        	// #43984760078336
   157b8:	lsr	x0, x0, x1
   157bc:	tbz	w0, #0, 157c8 <PyInit__decimal@@Base+0x4840>
   157c0:	add	x22, x22, #0x1
   157c4:	sub	x26, x26, #0x1
   157c8:	mul	x24, x23, x21
   157cc:	mov	x2, x26
   157d0:	mov	x1, x22
   157d4:	add	x0, x22, x24
   157d8:	bl	6510 <memmove@plt>
   157dc:	mov	x2, #0x0                   	// #0
   157e0:	mov	x1, #0x0                   	// #0
   157e4:	cmp	x21, x1
   157e8:	b.ne	15884 <PyInit__decimal@@Base+0x48fc>  // b.any
   157ec:	add	x2, x24, x26
   157f0:	mov	x1, #0x0                   	// #0
   157f4:	cmp	x1, x27
   157f8:	b.ne	158b0 <PyInit__decimal@@Base+0x4928>  // b.any
   157fc:	ldr	x0, [sp, #112]
   15800:	add	x25, x25, x0
   15804:	ldr	x0, [sp, #120]
   15808:	add	x20, x0, x20
   1580c:	stp	x25, x20, [sp, #112]
   15810:	ldr	x0, [sp, #136]
   15814:	strb	wzr, [x0, x25]
   15818:	add	x0, sp, #0x90
   1581c:	bl	17b68 <PyInit__decimal@@Base+0x6be0>
   15820:	ldr	x0, [sp, #136]
   15824:	ldp	x29, x30, [sp]
   15828:	ldp	x19, x20, [sp, #16]
   1582c:	ldp	x21, x22, [sp, #32]
   15830:	ldp	x23, x24, [sp, #48]
   15834:	ldp	x25, x26, [sp, #64]
   15838:	ldp	x27, x28, [sp, #80]
   1583c:	add	sp, sp, #0x2f0
   15840:	ret
   15844:	mov	w24, #0x3d                  	// #61
   15848:	b	15794 <PyInit__decimal@@Base+0x480c>
   1584c:	mov	x21, #0x2                   	// #2
   15850:	sdiv	x21, x20, x21
   15854:	sub	x27, x20, x21
   15858:	b	1579c <PyInit__decimal@@Base+0x4814>
   1585c:	mov	x21, #0x0                   	// #0
   15860:	b	1579c <PyInit__decimal@@Base+0x4814>
   15864:	ldrb	w4, [x19, x0]
   15868:	strb	w4, [x3, x0]
   1586c:	add	x0, x0, #0x1
   15870:	cmp	x23, x0
   15874:	b.ne	15864 <PyInit__decimal@@Base+0x48dc>  // b.any
   15878:	add	x1, x1, #0x1
   1587c:	add	x2, x2, x23
   15880:	b	157e4 <PyInit__decimal@@Base+0x485c>
   15884:	add	x3, x22, x2
   15888:	mov	x0, #0x0                   	// #0
   1588c:	b	15870 <PyInit__decimal@@Base+0x48e8>
   15890:	ldrb	w4, [x19, x0]
   15894:	strb	w4, [x3, x0]
   15898:	add	x0, x0, #0x1
   1589c:	cmp	x23, x0
   158a0:	b.ne	15890 <PyInit__decimal@@Base+0x4908>  // b.any
   158a4:	add	x1, x1, #0x1
   158a8:	add	x2, x2, x23
   158ac:	b	157f4 <PyInit__decimal@@Base+0x486c>
   158b0:	add	x3, x22, x2
   158b4:	mov	x0, #0x0                   	// #0
   158b8:	b	1589c <PyInit__decimal@@Base+0x4914>
   158bc:	stp	x29, x30, [sp, #-96]!
   158c0:	mov	x29, sp
   158c4:	stp	x21, x22, [sp, #32]
   158c8:	add	x22, sp, #0x30
   158cc:	mov	x21, x2
   158d0:	mov	w2, #0x1                   	// #1
   158d4:	stp	x19, x20, [sp, #16]
   158d8:	mov	x20, x0
   158dc:	mov	x19, x3
   158e0:	mov	x0, x22
   158e4:	bl	14ec8 <PyInit__decimal@@Base+0x3f40>
   158e8:	cbnz	w0, 1590c <PyInit__decimal@@Base+0x4984>
   158ec:	ldr	w0, [x19]
   158f0:	orr	w0, w0, #0x100
   158f4:	str	w0, [x19]
   158f8:	mov	x0, #0x0                   	// #0
   158fc:	ldp	x19, x20, [sp, #16]
   15900:	ldp	x21, x22, [sp, #32]
   15904:	ldp	x29, x30, [sp], #96
   15908:	ret
   1590c:	mov	x3, x19
   15910:	mov	x2, x21
   15914:	mov	x1, x22
   15918:	mov	x0, x20
   1591c:	bl	152a8 <PyInit__decimal@@Base+0x4320>
   15920:	b	158fc <PyInit__decimal@@Base+0x4974>
   15924:	stp	x29, x30, [sp, #-80]!
   15928:	mov	x29, sp
   1592c:	stp	x19, x20, [sp, #16]
   15930:	mov	x19, x0
   15934:	mov	x20, x0
   15938:	stp	x21, x22, [sp, #32]
   1593c:	mov	w21, w1
   15940:	mov	x22, #0x0                   	// #0
   15944:	stp	x23, x24, [sp, #48]
   15948:	adrp	x24, 45000 <PyInit__decimal@@Base+0x34078>
   1594c:	mov	w23, w2
   15950:	add	x24, x24, #0x5a8
   15954:	stp	x25, x26, [sp, #64]
   15958:	adrp	x25, 2a000 <PyInit__decimal@@Base+0x19078>
   1595c:	add	x25, x25, #0xec8
   15960:	mov	w26, #0x1                   	// #1
   15964:	strb	wzr, [x0]
   15968:	lsl	w0, w26, w22
   1596c:	tst	w0, w23
   15970:	b.eq	1599c <PyInit__decimal@@Base+0x4a14>  // b.none
   15974:	ldr	x3, [x24, x22, lsl #3]
   15978:	mov	x2, x25
   1597c:	sxtw	x1, w21
   15980:	mov	x0, x20
   15984:	bl	66a0 <snprintf@plt>
   15988:	cmp	w0, #0x0
   1598c:	ccmp	w0, w21, #0x0, ge  // ge = tcont
   15990:	b.ge	159dc <PyInit__decimal@@Base+0x4a54>  // b.tcont
   15994:	add	x20, x20, w0, sxtw
   15998:	sub	w21, w21, w0
   1599c:	add	x22, x22, #0x1
   159a0:	cmp	x22, #0xf
   159a4:	b.ne	15968 <PyInit__decimal@@Base+0x49e0>  // b.any
   159a8:	cmp	x20, x19
   159ac:	b.eq	159d4 <PyInit__decimal@@Base+0x4a4c>  // b.none
   159b0:	sub	x0, x20, #0x1
   159b4:	sturb	wzr, [x20, #-1]
   159b8:	sub	w0, w0, w19
   159bc:	ldp	x19, x20, [sp, #16]
   159c0:	ldp	x21, x22, [sp, #32]
   159c4:	ldp	x23, x24, [sp, #48]
   159c8:	ldp	x25, x26, [sp, #64]
   159cc:	ldp	x29, x30, [sp], #80
   159d0:	ret
   159d4:	mov	x0, x19
   159d8:	b	159b8 <PyInit__decimal@@Base+0x4a30>
   159dc:	mov	w0, #0xffffffff            	// #-1
   159e0:	b	159bc <PyInit__decimal@@Base+0x4a34>
   159e4:	stp	x29, x30, [sp, #-96]!
   159e8:	mov	x29, sp
   159ec:	stp	x19, x20, [sp, #16]
   159f0:	stp	x21, x22, [sp, #32]
   159f4:	stp	x23, x24, [sp, #48]
   159f8:	mov	x24, x0
   159fc:	stp	x25, x26, [sp, #64]
   15a00:	mov	w25, w2
   15a04:	str	x27, [sp, #80]
   15a08:	cbnz	x3, 15aac <PyInit__decimal@@Base+0x4b24>
   15a0c:	adrp	x21, 45000 <PyInit__decimal@@Base+0x34078>
   15a10:	add	x21, x21, #0x5a8
   15a14:	mov	x19, x24
   15a18:	mov	w0, #0x5b                  	// #91
   15a1c:	adrp	x26, 2a000 <PyInit__decimal@@Base+0x19078>
   15a20:	sub	w20, w1, #0x1
   15a24:	add	x26, x26, #0xecc
   15a28:	mov	x23, #0x0                   	// #0
   15a2c:	strh	w0, [x19], #1
   15a30:	mov	w27, #0x1                   	// #1
   15a34:	mov	x22, x19
   15a38:	lsl	w0, w27, w23
   15a3c:	tst	w0, w25
   15a40:	b.eq	15a6c <PyInit__decimal@@Base+0x4ae4>  // b.none
   15a44:	ldr	x3, [x21, x23, lsl #3]
   15a48:	mov	x2, x26
   15a4c:	sxtw	x1, w20
   15a50:	mov	x0, x22
   15a54:	bl	66a0 <snprintf@plt>
   15a58:	cmp	w0, #0x0
   15a5c:	ccmp	w0, w20, #0x0, ge  // ge = tcont
   15a60:	b.ge	15ab4 <PyInit__decimal@@Base+0x4b2c>  // b.tcont
   15a64:	add	x22, x22, w0, sxtw
   15a68:	sub	w20, w20, w0
   15a6c:	add	x23, x23, #0x1
   15a70:	cmp	x23, #0xf
   15a74:	b.ne	15a38 <PyInit__decimal@@Base+0x4ab0>  // b.any
   15a78:	cmp	x22, x19
   15a7c:	b.eq	15a84 <PyInit__decimal@@Base+0x4afc>  // b.none
   15a80:	sub	x19, x22, #0x2
   15a84:	mov	w0, #0x5d                  	// #93
   15a88:	strh	w0, [x19], #1
   15a8c:	sub	w0, w19, w24
   15a90:	ldp	x19, x20, [sp, #16]
   15a94:	ldp	x21, x22, [sp, #32]
   15a98:	ldp	x23, x24, [sp, #48]
   15a9c:	ldp	x25, x26, [sp, #64]
   15aa0:	ldr	x27, [sp, #80]
   15aa4:	ldp	x29, x30, [sp], #96
   15aa8:	ret
   15aac:	mov	x21, x3
   15ab0:	b	15a14 <PyInit__decimal@@Base+0x4a8c>
   15ab4:	mov	w0, #0xffffffff            	// #-1
   15ab8:	b	15a90 <PyInit__decimal@@Base+0x4b08>
   15abc:	stp	x29, x30, [sp, #-96]!
   15ac0:	mov	x29, sp
   15ac4:	stp	x19, x20, [sp, #16]
   15ac8:	stp	x21, x22, [sp, #32]
   15acc:	stp	x23, x24, [sp, #48]
   15ad0:	mov	x24, x0
   15ad4:	stp	x25, x26, [sp, #64]
   15ad8:	mov	w25, w2
   15adc:	stp	x27, x28, [sp, #80]
   15ae0:	cbnz	x3, 15ba4 <PyInit__decimal@@Base+0x4c1c>
   15ae4:	adrp	x20, 45000 <PyInit__decimal@@Base+0x34078>
   15ae8:	add	x20, x20, #0x5a8
   15aec:	add	x20, x20, #0x78
   15af0:	mov	x19, x24
   15af4:	mov	w0, #0x5b                  	// #91
   15af8:	adrp	x26, 2a000 <PyInit__decimal@@Base+0x19078>
   15afc:	sub	w21, w1, #0x1
   15b00:	add	x26, x26, #0xecc
   15b04:	mov	x23, #0x0                   	// #0
   15b08:	strh	w0, [x19], #1
   15b0c:	mov	w27, #0x0                   	// #0
   15b10:	mov	w28, #0x1                   	// #1
   15b14:	mov	w4, #0x3ba                 	// #954
   15b18:	mov	x22, x19
   15b1c:	lsl	w0, w28, w23
   15b20:	ands	w0, w0, w25
   15b24:	b.eq	15b64 <PyInit__decimal@@Base+0x4bdc>  // b.none
   15b28:	tst	w0, w4
   15b2c:	b.eq	15b38 <PyInit__decimal@@Base+0x4bb0>  // b.none
   15b30:	cbnz	w27, 15b64 <PyInit__decimal@@Base+0x4bdc>
   15b34:	mov	w27, #0x1                   	// #1
   15b38:	ldr	x3, [x20, x23, lsl #3]
   15b3c:	mov	x2, x26
   15b40:	sxtw	x1, w21
   15b44:	mov	x0, x22
   15b48:	bl	66a0 <snprintf@plt>
   15b4c:	cmp	w0, #0x0
   15b50:	ccmp	w0, w21, #0x0, ge  // ge = tcont
   15b54:	b.ge	15bac <PyInit__decimal@@Base+0x4c24>  // b.tcont
   15b58:	add	x22, x22, w0, sxtw
   15b5c:	sub	w21, w21, w0
   15b60:	mov	w4, #0x3ba                 	// #954
   15b64:	add	x23, x23, #0x1
   15b68:	cmp	x23, #0xf
   15b6c:	b.ne	15b1c <PyInit__decimal@@Base+0x4b94>  // b.any
   15b70:	cmp	x22, x19
   15b74:	b.eq	15b7c <PyInit__decimal@@Base+0x4bf4>  // b.none
   15b78:	sub	x19, x22, #0x2
   15b7c:	mov	w0, #0x5d                  	// #93
   15b80:	strh	w0, [x19], #1
   15b84:	sub	w0, w19, w24
   15b88:	ldp	x19, x20, [sp, #16]
   15b8c:	ldp	x21, x22, [sp, #32]
   15b90:	ldp	x23, x24, [sp, #48]
   15b94:	ldp	x25, x26, [sp, #64]
   15b98:	ldp	x27, x28, [sp, #80]
   15b9c:	ldp	x29, x30, [sp], #96
   15ba0:	ret
   15ba4:	mov	x20, x3
   15ba8:	b	15af0 <PyInit__decimal@@Base+0x4b68>
   15bac:	mov	w0, #0xffffffff            	// #-1
   15bb0:	b	15b88 <PyInit__decimal@@Base+0x4c00>
   15bb4:	stp	x29, x30, [sp, #-32]!
   15bb8:	mov	x29, sp
   15bbc:	stp	x19, x20, [sp, #16]
   15bc0:	mov	x20, x0
   15bc4:	mov	x0, x1
   15bc8:	mov	w1, #0x1                   	// #1
   15bcc:	bl	14df8 <PyInit__decimal@@Base+0x3e70>
   15bd0:	cbz	x0, 15c08 <PyInit__decimal@@Base+0x4c80>
   15bd4:	mov	x19, x0
   15bd8:	mov	x2, x0
   15bdc:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   15be0:	mov	x0, x20
   15be4:	add	x1, x1, #0xed1
   15be8:	bl	6b10 <fprintf@plt>
   15bec:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   15bf0:	ldr	x1, [x0, #1720]
   15bf4:	mov	x0, x19
   15bf8:	ldp	x19, x20, [sp, #16]
   15bfc:	mov	x16, x1
   15c00:	ldp	x29, x30, [sp], #32
   15c04:	br	x16
   15c08:	mov	x1, x20
   15c0c:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   15c10:	ldp	x19, x20, [sp, #16]
   15c14:	add	x0, x0, #0xed5
   15c18:	ldp	x29, x30, [sp], #32
   15c1c:	b	6570 <fputs@plt>
   15c20:	stp	x29, x30, [sp, #-32]!
   15c24:	mov	w1, #0x1                   	// #1
   15c28:	mov	x29, sp
   15c2c:	str	x19, [sp, #16]
   15c30:	bl	14df8 <PyInit__decimal@@Base+0x3e70>
   15c34:	cbz	x0, 15c5c <PyInit__decimal@@Base+0x4cd4>
   15c38:	mov	x19, x0
   15c3c:	bl	68b0 <puts@plt>
   15c40:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   15c44:	ldr	x1, [x0, #1720]
   15c48:	mov	x0, x19
   15c4c:	ldr	x19, [sp, #16]
   15c50:	mov	x16, x1
   15c54:	ldp	x29, x30, [sp], #32
   15c58:	br	x16
   15c5c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   15c60:	ldr	x19, [sp, #16]
   15c64:	ldr	x0, [x0, #3904]
   15c68:	ldp	x29, x30, [sp], #32
   15c6c:	ldr	x1, [x0]
   15c70:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   15c74:	add	x0, x0, #0xed5
   15c78:	b	6570 <fputs@plt>
   15c7c:	stp	x29, x30, [sp, #-32]!
   15c80:	mov	x29, sp
   15c84:	stp	x19, x20, [sp, #16]
   15c88:	mul	x20, x0, x1
   15c8c:	umulh	x0, x0, x1
   15c90:	cbnz	x0, 15cc8 <PyInit__decimal@@Base+0x4d40>
   15c94:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   15c98:	ldr	x1, [x0, #1696]
   15c9c:	mov	x0, x20
   15ca0:	blr	x1
   15ca4:	mov	x19, x0
   15ca8:	cbz	x0, 15cb8 <PyInit__decimal@@Base+0x4d30>
   15cac:	mov	x2, x20
   15cb0:	mov	w1, #0x0                   	// #0
   15cb4:	bl	6710 <memset@plt>
   15cb8:	mov	x0, x19
   15cbc:	ldp	x19, x20, [sp, #16]
   15cc0:	ldp	x29, x30, [sp], #32
   15cc4:	ret
   15cc8:	mov	x19, #0x0                   	// #0
   15ccc:	b	15cb8 <PyInit__decimal@@Base+0x4d30>
   15cd0:	mov	x2, x0
   15cd4:	mul	x0, x0, x1
   15cd8:	umulh	x2, x2, x1
   15cdc:	cbnz	x2, 15cf0 <PyInit__decimal@@Base+0x4d68>
   15ce0:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
   15ce4:	ldr	x1, [x1, #1696]
   15ce8:	mov	x16, x1
   15cec:	br	x16
   15cf0:	mov	x0, #0x0                   	// #0
   15cf4:	ret
   15cf8:	umulh	x2, x0, x1
   15cfc:	cbnz	x2, 15d10 <PyInit__decimal@@Base+0x4d88>
   15d00:	adrp	x2, 45000 <PyInit__decimal@@Base+0x34078>
   15d04:	ldr	x2, [x2, #1704]
   15d08:	mov	x16, x2
   15d0c:	br	x16
   15d10:	mov	x0, #0x0                   	// #0
   15d14:	ret
   15d18:	mov	x4, x1
   15d1c:	stp	x29, x30, [sp, #-32]!
   15d20:	mul	x1, x1, x2
   15d24:	mov	x29, sp
   15d28:	umulh	x4, x4, x2
   15d2c:	stp	x19, x20, [sp, #16]
   15d30:	mov	x19, x0
   15d34:	mov	x20, x3
   15d38:	cbz	x4, 15d54 <PyInit__decimal@@Base+0x4dcc>
   15d3c:	mov	w0, #0x1                   	// #1
   15d40:	strb	w0, [x20]
   15d44:	mov	x0, x19
   15d48:	ldp	x19, x20, [sp, #16]
   15d4c:	ldp	x29, x30, [sp], #32
   15d50:	ret
   15d54:	adrp	x2, 45000 <PyInit__decimal@@Base+0x34078>
   15d58:	ldr	x2, [x2, #1712]
   15d5c:	blr	x2
   15d60:	cbnz	x0, 15d48 <PyInit__decimal@@Base+0x4dc0>
   15d64:	b	15d3c <PyInit__decimal@@Base+0x4db4>
   15d68:	mul	x3, x1, x2
   15d6c:	umulh	x1, x1, x2
   15d70:	cbnz	x1, 15d8c <PyInit__decimal@@Base+0x4e04>
   15d74:	adds	x0, x0, x3
   15d78:	b.cs	15d8c <PyInit__decimal@@Base+0x4e04>  // b.hs, b.nlast
   15d7c:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
   15d80:	ldr	x1, [x1, #1696]
   15d84:	mov	x16, x1
   15d88:	br	x16
   15d8c:	mov	x0, #0x0                   	// #0
   15d90:	ret
   15d94:	stp	x29, x30, [sp, #-32]!
   15d98:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
   15d9c:	mov	x29, sp
   15da0:	stp	x19, x20, [sp, #16]
   15da4:	ldr	x20, [x1, #1688]
   15da8:	mov	x1, #0x30                  	// #48
   15dac:	cmp	x20, x0
   15db0:	csel	x20, x20, x0, ge  // ge = tcont
   15db4:	mov	x0, #0x1                   	// #1
   15db8:	bl	15cd0 <PyInit__decimal@@Base+0x4d48>
   15dbc:	mov	x19, x0
   15dc0:	cbz	x0, 15dec <PyInit__decimal@@Base+0x4e64>
   15dc4:	mov	x0, x20
   15dc8:	mov	x1, #0x8                   	// #8
   15dcc:	bl	15cd0 <PyInit__decimal@@Base+0x4d48>
   15dd0:	str	x0, [x19, #40]
   15dd4:	cbnz	x0, 15dfc <PyInit__decimal@@Base+0x4e74>
   15dd8:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   15ddc:	ldr	x1, [x0, #1720]
   15de0:	mov	x0, x19
   15de4:	mov	x19, #0x0                   	// #0
   15de8:	blr	x1
   15dec:	mov	x0, x19
   15df0:	ldp	x19, x20, [sp, #16]
   15df4:	ldp	x29, x30, [sp], #32
   15df8:	ret
   15dfc:	strb	wzr, [x19]
   15e00:	stp	xzr, xzr, [x19, #8]
   15e04:	stp	xzr, x20, [x19, #24]
   15e08:	b	15dec <PyInit__decimal@@Base+0x4e64>
   15e0c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   15e10:	ldr	x0, [x0, #1688]
   15e14:	b	15d94 <PyInit__decimal@@Base+0x4e0c>
   15e18:	stp	x29, x30, [sp, #-32]!
   15e1c:	mov	x29, sp
   15e20:	stp	x19, x20, [sp, #16]
   15e24:	mov	x20, x0
   15e28:	bl	15e0c <PyInit__decimal@@Base+0x4e84>
   15e2c:	mov	x19, x0
   15e30:	cbnz	x0, 15e40 <PyInit__decimal@@Base+0x4eb8>
   15e34:	mov	x0, x20
   15e38:	mov	w1, #0x200                 	// #512
   15e3c:	bl	12b18 <PyInit__decimal@@Base+0x1b90>
   15e40:	mov	x0, x19
   15e44:	ldp	x19, x20, [sp, #16]
   15e48:	ldp	x29, x30, [sp], #32
   15e4c:	ret
   15e50:	stp	x29, x30, [sp, #-48]!
   15e54:	mov	x29, sp
   15e58:	stp	x19, x20, [sp, #16]
   15e5c:	mov	x19, x0
   15e60:	mov	x20, x1
   15e64:	mov	x1, #0x8                   	// #8
   15e68:	stp	x21, x22, [sp, #32]
   15e6c:	mov	x21, x2
   15e70:	ldr	x22, [x0, #40]
   15e74:	mov	x0, x20
   15e78:	bl	15cd0 <PyInit__decimal@@Base+0x4d48>
   15e7c:	str	x0, [x19, #40]
   15e80:	cbnz	x0, 15ec0 <PyInit__decimal@@Base+0x4f38>
   15e84:	str	x22, [x19, #40]
   15e88:	mov	x0, x19
   15e8c:	bl	183b4 <PyInit__decimal@@Base+0x742c>
   15e90:	mov	x0, x19
   15e94:	bl	183ec <PyInit__decimal@@Base+0x7464>
   15e98:	ldr	w0, [x21]
   15e9c:	stp	xzr, xzr, [x19, #8]
   15ea0:	orr	w0, w0, #0x200
   15ea4:	str	xzr, [x19, #24]
   15ea8:	str	w0, [x21]
   15eac:	mov	w0, #0x0                   	// #0
   15eb0:	ldp	x19, x20, [sp, #16]
   15eb4:	ldp	x21, x22, [sp, #32]
   15eb8:	ldp	x29, x30, [sp], #48
   15ebc:	ret
   15ec0:	ldr	x2, [x19, #32]
   15ec4:	mov	x1, x22
   15ec8:	lsl	x2, x2, #3
   15ecc:	bl	64f0 <memcpy@plt>
   15ed0:	str	x20, [x19, #32]
   15ed4:	mov	x0, x19
   15ed8:	bl	1841c <PyInit__decimal@@Base+0x7494>
   15edc:	mov	w0, #0x1                   	// #1
   15ee0:	b	15eb0 <PyInit__decimal@@Base+0x4f28>
   15ee4:	stp	x29, x30, [sp, #-48]!
   15ee8:	mov	x29, sp
   15eec:	stp	x19, x20, [sp, #16]
   15ef0:	mov	x19, x0
   15ef4:	mov	x20, x1
   15ef8:	mov	x1, #0x8                   	// #8
   15efc:	stp	x21, x22, [sp, #32]
   15f00:	mov	x21, x2
   15f04:	ldr	x22, [x0, #40]
   15f08:	mov	x0, x20
   15f0c:	bl	15cf8 <PyInit__decimal@@Base+0x4d70>
   15f10:	str	x0, [x19, #40]
   15f14:	cbnz	x0, 15f54 <PyInit__decimal@@Base+0x4fcc>
   15f18:	str	x22, [x19, #40]
   15f1c:	mov	x0, x19
   15f20:	bl	183b4 <PyInit__decimal@@Base+0x742c>
   15f24:	mov	x0, x19
   15f28:	bl	183ec <PyInit__decimal@@Base+0x7464>
   15f2c:	ldr	w0, [x21]
   15f30:	stp	xzr, xzr, [x19, #8]
   15f34:	orr	w0, w0, #0x200
   15f38:	str	xzr, [x19, #24]
   15f3c:	str	w0, [x21]
   15f40:	mov	w0, #0x0                   	// #0
   15f44:	ldp	x19, x20, [sp, #16]
   15f48:	ldp	x21, x22, [sp, #32]
   15f4c:	ldp	x29, x30, [sp], #48
   15f50:	ret
   15f54:	str	x20, [x19, #32]
   15f58:	mov	x0, x19
   15f5c:	bl	1841c <PyInit__decimal@@Base+0x7494>
   15f60:	mov	w0, #0x1                   	// #1
   15f64:	b	15f44 <PyInit__decimal@@Base+0x4fbc>
   15f68:	stp	x29, x30, [sp, #-64]!
   15f6c:	mov	x29, sp
   15f70:	stp	x19, x20, [sp, #16]
   15f74:	mov	x19, x0
   15f78:	mov	x20, x2
   15f7c:	ldr	x0, [x0, #40]
   15f80:	add	x3, sp, #0x3f
   15f84:	mov	x2, #0x8                   	// #8
   15f88:	str	x21, [sp, #32]
   15f8c:	mov	x21, x1
   15f90:	strb	wzr, [sp, #63]
   15f94:	bl	15d18 <PyInit__decimal@@Base+0x4d90>
   15f98:	str	x0, [x19, #40]
   15f9c:	ldrb	w0, [sp, #63]
   15fa0:	cbnz	w0, 15fb0 <PyInit__decimal@@Base+0x5028>
   15fa4:	str	x21, [x19, #32]
   15fa8:	mov	w0, #0x1                   	// #1
   15fac:	b	15fe4 <PyInit__decimal@@Base+0x505c>
   15fb0:	ldr	x0, [x19, #32]
   15fb4:	cmp	x0, x21
   15fb8:	b.ge	15fa8 <PyInit__decimal@@Base+0x5020>  // b.tcont
   15fbc:	mov	x0, x19
   15fc0:	bl	183b4 <PyInit__decimal@@Base+0x742c>
   15fc4:	mov	x0, x19
   15fc8:	bl	183ec <PyInit__decimal@@Base+0x7464>
   15fcc:	ldr	w0, [x20]
   15fd0:	stp	xzr, xzr, [x19, #8]
   15fd4:	orr	w0, w0, #0x200
   15fd8:	str	xzr, [x19, #24]
   15fdc:	str	w0, [x20]
   15fe0:	mov	w0, #0x0                   	// #0
   15fe4:	ldp	x19, x20, [sp, #16]
   15fe8:	ldr	x21, [sp, #32]
   15fec:	ldp	x29, x30, [sp], #64
   15ff0:	ret
   15ff4:	mov	x6, #0x89e80000            	// #2313682944
   15ff8:	adrp	x4, 2a000 <PyInit__decimal@@Base+0x19078>
   15ffc:	movk	x6, #0x2304, lsl #32
   16000:	add	x7, x2, x3, lsr #63
   16004:	movk	x6, #0x8ac7, lsl #48
   16008:	ldr	x8, [x4, #2784]
   1600c:	and	x5, x6, x3, asr #63
   16010:	add	x5, x5, x3
   16014:	umulh	x4, x7, x8
   16018:	madd	x7, x7, x8, x5
   1601c:	cmp	x7, x5
   16020:	b.cs	16028 <PyInit__decimal@@Base+0x50a0>  // b.hs, b.nlast
   16024:	add	x4, x4, #0x1
   16028:	add	x4, x2, x4
   1602c:	mvn	x4, x4
   16030:	mul	x7, x4, x6
   16034:	umulh	x5, x4, x6
   16038:	adds	x3, x3, x7
   1603c:	mov	x7, #0x76180000            	// #1981284352
   16040:	movk	x7, #0xdcfb, lsl #32
   16044:	movk	x7, #0x7538, lsl #48
   16048:	add	x2, x2, x7
   1604c:	adc	x2, x5, x2
   16050:	sub	x4, x2, x4
   16054:	and	x2, x2, x6
   16058:	str	x4, [x0]
   1605c:	add	x3, x2, x3
   16060:	str	x3, [x1]
   16064:	ret
   16068:	subs	x1, x1, #0x1
   1606c:	b.pl	16078 <PyInit__decimal@@Base+0x50f0>  // b.nfrst
   16070:	mov	w0, #0x1                   	// #1
   16074:	ret
   16078:	ldr	x2, [x0, x1, lsl #3]
   1607c:	cbz	x2, 16068 <PyInit__decimal@@Base+0x50e0>
   16080:	mov	w0, #0x0                   	// #0
   16084:	b	16074 <PyInit__decimal@@Base+0x50ec>
   16088:	lsr	x1, x0, #32
   1608c:	cmp	x1, #0x0
   16090:	csel	x0, x0, x1, eq  // eq = none
   16094:	mov	w1, #0x20                  	// #32
   16098:	csel	w1, wzr, w1, eq  // eq = none
   1609c:	lsr	x2, x0, #16
   160a0:	cmp	xzr, x0, lsr #16
   160a4:	b.eq	160b0 <PyInit__decimal@@Base+0x5128>  // b.none
   160a8:	add	w1, w1, #0x10
   160ac:	mov	x0, x2
   160b0:	lsr	x2, x0, #8
   160b4:	cmp	xzr, x0, lsr #8
   160b8:	b.eq	160c4 <PyInit__decimal@@Base+0x513c>  // b.none
   160bc:	add	w1, w1, #0x8
   160c0:	mov	x0, x2
   160c4:	lsr	x2, x0, #4
   160c8:	cmp	xzr, x0, lsr #4
   160cc:	b.eq	160d8 <PyInit__decimal@@Base+0x5150>  // b.none
   160d0:	add	w1, w1, #0x4
   160d4:	mov	x0, x2
   160d8:	lsr	x2, x0, #2
   160dc:	cmp	xzr, x0, lsr #2
   160e0:	b.eq	160ec <PyInit__decimal@@Base+0x5164>  // b.none
   160e4:	add	w1, w1, #0x2
   160e8:	mov	x0, x2
   160ec:	lsr	x2, x0, #1
   160f0:	cmp	xzr, x0, lsr #1
   160f4:	b.eq	16100 <PyInit__decimal@@Base+0x5178>  // b.none
   160f8:	add	w1, w1, #0x1
   160fc:	mov	x0, x2
   16100:	sub	w1, w1, #0x1
   16104:	add	w0, w1, w0
   16108:	ret
   1610c:	ldr	x6, [x2, #16]
   16110:	mov	x5, #0x13                  	// #19
   16114:	ldr	x9, [x2, #40]
   16118:	str	xzr, [x0]
   1611c:	udiv	x4, x6, x5
   16120:	mov	w8, w3
   16124:	msub	x4, x4, x5, x6
   16128:	ldr	x6, [x2, #24]
   1612c:	cmp	x4, #0x0
   16130:	csel	x4, x4, x5, ne  // ne = any
   16134:	cmp	x4, w3, uxtw
   16138:	add	x6, x9, x6, lsl #3
   1613c:	ldur	x6, [x6, #-8]
   16140:	str	x6, [x1]
   16144:	b.cc	16164 <PyInit__decimal@@Base+0x51dc>  // b.lo, b.ul, b.last
   16148:	sub	x4, x4, x8
   1614c:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   16150:	add	x0, x0, #0xae8
   16154:	ldr	x0, [x0, x4, lsl #3]
   16158:	udiv	x6, x6, x0
   1615c:	str	x6, [x1]
   16160:	ret
   16164:	ldr	x3, [x2, #24]
   16168:	cmp	x3, #0x1
   1616c:	b.le	16160 <PyInit__decimal@@Base+0x51d8>
   16170:	sub	x7, x8, x4
   16174:	adrp	x3, 2a000 <PyInit__decimal@@Base+0x19078>
   16178:	add	x3, x3, #0xae8
   1617c:	sub	x5, x5, x8
   16180:	add	x4, x5, x4
   16184:	ldr	x10, [x3, x7, lsl #3]
   16188:	ldr	x3, [x3, x4, lsl #3]
   1618c:	mul	x7, x6, x10
   16190:	umulh	x6, x6, x10
   16194:	str	x6, [x0]
   16198:	str	x7, [x1]
   1619c:	ldr	x2, [x2, #24]
   161a0:	add	x2, x9, x2, lsl #3
   161a4:	ldur	x2, [x2, #-16]
   161a8:	udiv	x2, x2, x3
   161ac:	adds	x2, x2, x7
   161b0:	str	x2, [x1]
   161b4:	b.cc	16160 <PyInit__decimal@@Base+0x51d8>  // b.lo, b.ul, b.last
   161b8:	ldr	x1, [x0]
   161bc:	add	x1, x1, #0x1
   161c0:	str	x1, [x0]
   161c4:	b	16160 <PyInit__decimal@@Base+0x51d8>
   161c8:	sub	x0, x0, #0x8
   161cc:	cmp	x1, #0x1
   161d0:	b.le	161dc <PyInit__decimal@@Base+0x5254>
   161d4:	ldr	x2, [x0, x1, lsl #3]
   161d8:	cbz	x2, 161e4 <PyInit__decimal@@Base+0x525c>
   161dc:	mov	x0, x1
   161e0:	ret
   161e4:	sub	x1, x1, #0x1
   161e8:	b	161cc <PyInit__decimal@@Base+0x5244>
   161ec:	ldp	x5, x4, [x0, #8]
   161f0:	ldr	x3, [x1, #16]
   161f4:	add	x4, x5, x4
   161f8:	sub	x4, x4, #0x1
   161fc:	cmp	x3, x4
   16200:	b.le	16244 <PyInit__decimal@@Base+0x52bc>
   16204:	ldrb	w4, [x0]
   16208:	tst	w4, #0xe
   1620c:	b.ne	16224 <PyInit__decimal@@Base+0x529c>  // b.any
   16210:	ldr	x4, [x0, #24]
   16214:	ldr	x0, [x0, #40]
   16218:	add	x0, x0, x4, lsl #3
   1621c:	ldur	x0, [x0, #-8]
   16220:	cbz	x0, 16244 <PyInit__decimal@@Base+0x52bc>
   16224:	ldr	x0, [x1]
   16228:	add	x3, x3, #0x1
   1622c:	sub	x3, x3, x0
   16230:	cmp	x5, x3
   16234:	b.ge	16244 <PyInit__decimal@@Base+0x52bc>  // b.tcont
   16238:	ldr	w0, [x2]
   1623c:	orr	w0, w0, #0x4000
   16240:	str	w0, [x2]
   16244:	ret
   16248:	ldr	x3, [x1, #8]
   1624c:	ldrb	w2, [x1]
   16250:	str	x3, [x0, #8]
   16254:	ldr	x3, [x1, #16]
   16258:	str	x3, [x0, #16]
   1625c:	ldr	x3, [x1, #24]
   16260:	str	x3, [x0, #24]
   16264:	ldp	x3, x1, [x1, #32]
   16268:	stp	x3, x1, [x0, #32]
   1626c:	and	w1, w2, #0x1f
   16270:	orr	w1, w1, #0x40
   16274:	strb	w1, [x0]
   16278:	ret
   1627c:	ldrb	w3, [x0]
   16280:	ldrb	w2, [x1]
   16284:	and	w3, w3, #0x1
   16288:	and	w2, w2, #0x1
   1628c:	cmp	w3, w2
   16290:	b.eq	1629c <PyInit__decimal@@Base+0x5314>  // b.none
   16294:	sub	w0, w2, w3
   16298:	ret
   1629c:	ldr	x2, [x0, #8]
   162a0:	mov	w0, #0x1                   	// #1
   162a4:	ldr	x1, [x1, #8]
   162a8:	cmp	x2, x1
   162ac:	mov	w1, #0xfffffffe            	// #-2
   162b0:	cneg	w0, w0, lt  // lt = tstop
   162b4:	mul	w3, w3, w1
   162b8:	madd	w0, w3, w0, w0
   162bc:	b	16298 <PyInit__decimal@@Base+0x5310>
   162c0:	stp	x29, x30, [sp, #-144]!
   162c4:	cmp	x4, #0x10
   162c8:	mov	x29, sp
   162cc:	stp	x19, x20, [sp, #16]
   162d0:	mov	x19, x3
   162d4:	mov	x20, x5
   162d8:	stp	x21, x22, [sp, #32]
   162dc:	mov	x3, x4
   162e0:	stp	x23, x24, [sp, #48]
   162e4:	stp	x25, x26, [sp, #64]
   162e8:	stp	x27, x28, [sp, #80]
   162ec:	b.hi	16310 <PyInit__decimal@@Base+0x5388>  // b.pmore
   162f0:	ldp	x19, x20, [sp, #16]
   162f4:	mov	x4, x5
   162f8:	ldp	x21, x22, [sp, #32]
   162fc:	ldp	x23, x24, [sp, #48]
   16300:	ldp	x25, x26, [sp, #64]
   16304:	ldp	x27, x28, [sp, #80]
   16308:	ldp	x29, x30, [sp], #144
   1630c:	b	11f04 <PyInit__decimal@@Base+0xf7c>
   16310:	add	x22, x4, #0x1
   16314:	mov	x26, x0
   16318:	mov	x27, x1
   1631c:	mov	x23, x2
   16320:	lsr	x21, x22, #1
   16324:	sub	x28, x4, x21
   16328:	cmp	x21, x5
   1632c:	lsl	x24, x21, #3
   16330:	add	x7, x1, x21, lsl #3
   16334:	add	x25, x0, x21, lsl #3
   16338:	b.cc	16420 <PyInit__decimal@@Base+0x5498>  // b.lo, b.ul, b.last
   1633c:	cmp	x5, x28
   16340:	b.ls	163e8 <PyInit__decimal@@Base+0x5460>  // b.plast
   16344:	lsl	x3, x5, #1
   16348:	mov	x0, #0x0                   	// #0
   1634c:	add	x3, x3, #0x1
   16350:	str	xzr, [x19, x0, lsl #3]
   16354:	add	x0, x0, #0x1
   16358:	cmp	x3, x0
   1635c:	b.hi	16350 <PyInit__decimal@@Base+0x53c8>  // b.pmore
   16360:	mov	x5, x28
   16364:	mov	x4, x20
   16368:	add	x3, x19, x3, lsl #3
   1636c:	mov	x2, x7
   16370:	mov	x1, x23
   16374:	mov	x0, x19
   16378:	bl	162c0 <PyInit__decimal@@Base+0x5338>
   1637c:	mov	x0, x25
   16380:	add	x2, x20, x28
   16384:	mov	x1, x19
   16388:	bl	11c18 <PyInit__decimal@@Base+0xc90>
   1638c:	orr	x3, x22, #0x1
   16390:	mov	x0, #0x0                   	// #0
   16394:	str	xzr, [x19, x0, lsl #3]
   16398:	add	x0, x0, #0x1
   1639c:	cmp	x3, x0
   163a0:	b.hi	16394 <PyInit__decimal@@Base+0x540c>  // b.pmore
   163a4:	mov	x5, x20
   163a8:	mov	x4, x21
   163ac:	add	x3, x19, x3, lsl #3
   163b0:	mov	x2, x23
   163b4:	mov	x1, x27
   163b8:	mov	x0, x19
   163bc:	bl	162c0 <PyInit__decimal@@Base+0x5338>
   163c0:	add	x2, x21, x20
   163c4:	mov	x1, x19
   163c8:	mov	x0, x26
   163cc:	ldp	x19, x20, [sp, #16]
   163d0:	ldp	x21, x22, [sp, #32]
   163d4:	ldp	x23, x24, [sp, #48]
   163d8:	ldp	x25, x26, [sp, #64]
   163dc:	ldp	x27, x28, [sp, #80]
   163e0:	ldp	x29, x30, [sp], #144
   163e4:	b	11c18 <PyInit__decimal@@Base+0xc90>
   163e8:	lsl	x3, x28, #1
   163ec:	mov	x0, #0x0                   	// #0
   163f0:	add	x3, x3, #0x1
   163f4:	cmp	x3, x0
   163f8:	b.hi	16414 <PyInit__decimal@@Base+0x548c>  // b.pmore
   163fc:	mov	x5, x20
   16400:	mov	x4, x28
   16404:	add	x3, x19, x3, lsl #3
   16408:	mov	x2, x23
   1640c:	mov	x1, x7
   16410:	b	16374 <PyInit__decimal@@Base+0x53ec>
   16414:	str	xzr, [x19, x0, lsl #3]
   16418:	add	x0, x0, #0x1
   1641c:	b	163f4 <PyInit__decimal@@Base+0x546c>
   16420:	sub	x20, x5, x21
   16424:	mov	x2, x24
   16428:	mov	x0, x19
   1642c:	str	x7, [sp, #104]
   16430:	bl	64f0 <memcpy@plt>
   16434:	str	xzr, [x19, x24]
   16438:	ldr	x7, [sp, #104]
   1643c:	mov	x2, x28
   16440:	mov	x0, x19
   16444:	str	x7, [sp, #136]
   16448:	mov	x1, x7
   1644c:	bl	11c18 <PyInit__decimal@@Base+0xc90>
   16450:	add	x6, x24, #0x8
   16454:	add	x5, x21, #0x1
   16458:	add	x6, x19, x6
   1645c:	mov	x2, x24
   16460:	mov	x1, x23
   16464:	mov	x0, x6
   16468:	str	x5, [sp, #128]
   1646c:	bl	64f0 <memcpy@plt>
   16470:	mov	x6, x0
   16474:	add	x0, x19, x21, lsl #4
   16478:	add	x8, x23, x24
   1647c:	lsl	x3, x21, #4
   16480:	mov	x1, x8
   16484:	mov	x2, x20
   16488:	stp	x6, x8, [sp, #104]
   1648c:	str	xzr, [x0, #8]
   16490:	mov	x0, x6
   16494:	str	x3, [sp, #120]
   16498:	bl	11c18 <PyInit__decimal@@Base+0xc90>
   1649c:	ldp	x3, x5, [sp, #120]
   164a0:	mov	x0, x25
   164a4:	ldr	x6, [sp, #104]
   164a8:	mov	x1, x19
   164ac:	mov	x2, x6
   164b0:	add	x3, x3, #0x10
   164b4:	mov	x4, x5
   164b8:	add	x3, x19, x3
   164bc:	bl	162c0 <PyInit__decimal@@Base+0x5338>
   164c0:	lsl	x3, x28, #1
   164c4:	mov	x0, #0x0                   	// #0
   164c8:	ldr	x8, [sp, #112]
   164cc:	add	x3, x3, #0x1
   164d0:	ldr	x7, [sp, #136]
   164d4:	cmp	x3, x0
   164d8:	b.hi	1658c <PyInit__decimal@@Base+0x5604>  // b.pmore
   164dc:	mov	x5, x20
   164e0:	add	x3, x19, x3, lsl #3
   164e4:	mov	x4, x28
   164e8:	mov	x2, x8
   164ec:	mov	x1, x7
   164f0:	add	x20, x20, x28
   164f4:	mov	x0, x19
   164f8:	bl	162c0 <PyInit__decimal@@Base+0x5338>
   164fc:	mov	x2, x20
   16500:	mov	x1, x19
   16504:	add	x0, x25, x24
   16508:	bl	11c18 <PyInit__decimal@@Base+0xc90>
   1650c:	mov	x2, x20
   16510:	mov	x0, x25
   16514:	mov	x1, x19
   16518:	bl	11e24 <PyInit__decimal@@Base+0xe9c>
   1651c:	and	x20, x22, #0xfffffffffffffffe
   16520:	orr	x3, x22, #0x1
   16524:	mov	x0, #0x0                   	// #0
   16528:	str	xzr, [x19, x0, lsl #3]
   1652c:	add	x0, x0, #0x1
   16530:	cmp	x3, x0
   16534:	b.hi	16528 <PyInit__decimal@@Base+0x55a0>  // b.pmore
   16538:	mov	x5, x21
   1653c:	mov	x4, x21
   16540:	add	x3, x19, x3, lsl #3
   16544:	mov	x2, x23
   16548:	mov	x1, x27
   1654c:	mov	x0, x19
   16550:	bl	162c0 <PyInit__decimal@@Base+0x5338>
   16554:	mov	x2, x20
   16558:	mov	x1, x19
   1655c:	mov	x0, x26
   16560:	bl	11c18 <PyInit__decimal@@Base+0xc90>
   16564:	mov	x2, x20
   16568:	mov	x1, x19
   1656c:	mov	x0, x25
   16570:	ldp	x19, x20, [sp, #16]
   16574:	ldp	x21, x22, [sp, #32]
   16578:	ldp	x23, x24, [sp, #48]
   1657c:	ldp	x25, x26, [sp, #64]
   16580:	ldp	x27, x28, [sp, #80]
   16584:	ldp	x29, x30, [sp], #144
   16588:	b	11e24 <PyInit__decimal@@Base+0xe9c>
   1658c:	str	xzr, [x19, x0, lsl #3]
   16590:	add	x0, x0, #0x1
   16594:	b	164d4 <PyInit__decimal@@Base+0x554c>
   16598:	cmp	x3, #0x9
   1659c:	b.hi	16678 <PyInit__decimal@@Base+0x56f0>  // b.pmore
   165a0:	cmp	x3, #0x4
   165a4:	b.hi	16610 <PyInit__decimal@@Base+0x5688>  // b.pmore
   165a8:	sub	x3, x3, #0x1
   165ac:	cmp	x3, #0x3
   165b0:	b.hi	165d4 <PyInit__decimal@@Base+0x564c>  // b.pmore
   165b4:	cmp	w3, #0x3
   165b8:	b.hi	165d4 <PyInit__decimal@@Base+0x564c>  // b.pmore
   165bc:	adrp	x4, 2a000 <PyInit__decimal@@Base+0x19078>
   165c0:	add	x4, x4, #0xf88
   165c4:	ldrb	w3, [x4, w3, uxtw]
   165c8:	adr	x4, 165d4 <PyInit__decimal@@Base+0x564c>
   165cc:	add	x3, x4, w3, sxtb #2
   165d0:	br	x3
   165d4:	str	x2, [x0]
   165d8:	str	xzr, [x1]
   165dc:	ret
   165e0:	mov	x4, #0xa                   	// #10
   165e4:	udiv	x3, x2, x4
   165e8:	msub	x2, x3, x4, x2
   165ec:	str	x3, [x0]
   165f0:	str	x2, [x1]
   165f4:	b	165dc <PyInit__decimal@@Base+0x5654>
   165f8:	mov	x4, #0x64                  	// #100
   165fc:	b	165e4 <PyInit__decimal@@Base+0x565c>
   16600:	mov	x4, #0x3e8                 	// #1000
   16604:	b	165e4 <PyInit__decimal@@Base+0x565c>
   16608:	mov	x4, #0x2710                	// #10000
   1660c:	b	165e4 <PyInit__decimal@@Base+0x565c>
   16610:	sub	x3, x3, #0x6
   16614:	cmp	x3, #0x3
   16618:	b.hi	1663c <PyInit__decimal@@Base+0x56b4>  // b.pmore
   1661c:	cmp	w3, #0x3
   16620:	b.hi	1663c <PyInit__decimal@@Base+0x56b4>  // b.pmore
   16624:	adrp	x4, 2a000 <PyInit__decimal@@Base+0x19078>
   16628:	add	x4, x4, #0xf8c
   1662c:	ldrb	w3, [x4, w3, uxtw]
   16630:	adr	x4, 1663c <PyInit__decimal@@Base+0x56b4>
   16634:	add	x3, x4, w3, sxtb #2
   16638:	br	x3
   1663c:	mov	x4, #0x86a0                	// #34464
   16640:	movk	x4, #0x1, lsl #16
   16644:	b	165e4 <PyInit__decimal@@Base+0x565c>
   16648:	mov	x4, #0x4240                	// #16960
   1664c:	movk	x4, #0xf, lsl #16
   16650:	b	165e4 <PyInit__decimal@@Base+0x565c>
   16654:	mov	x4, #0x9680                	// #38528
   16658:	movk	x4, #0x98, lsl #16
   1665c:	b	165e4 <PyInit__decimal@@Base+0x565c>
   16660:	mov	x4, #0xe100                	// #57600
   16664:	movk	x4, #0x5f5, lsl #16
   16668:	b	165e4 <PyInit__decimal@@Base+0x565c>
   1666c:	mov	x4, #0xca00                	// #51712
   16670:	movk	x4, #0x3b9a, lsl #16
   16674:	b	165e4 <PyInit__decimal@@Base+0x565c>
   16678:	cmp	x3, #0xe
   1667c:	b.hi	166fc <PyInit__decimal@@Base+0x5774>  // b.pmore
   16680:	sub	x3, x3, #0xb
   16684:	cmp	x3, #0x3
   16688:	b.hi	166ac <PyInit__decimal@@Base+0x5724>  // b.pmore
   1668c:	cmp	w3, #0x3
   16690:	b.hi	166ac <PyInit__decimal@@Base+0x5724>  // b.pmore
   16694:	adrp	x4, 2a000 <PyInit__decimal@@Base+0x19078>
   16698:	add	x4, x4, #0xf90
   1669c:	ldrb	w3, [x4, w3, uxtw]
   166a0:	adr	x4, 166ac <PyInit__decimal@@Base+0x5724>
   166a4:	add	x3, x4, w3, sxtb #2
   166a8:	br	x3
   166ac:	mov	x4, #0xe400                	// #58368
   166b0:	movk	x4, #0x540b, lsl #16
   166b4:	movk	x4, #0x2, lsl #32
   166b8:	b	165e4 <PyInit__decimal@@Base+0x565c>
   166bc:	mov	x4, #0xe800                	// #59392
   166c0:	movk	x4, #0x4876, lsl #16
   166c4:	movk	x4, #0x17, lsl #32
   166c8:	b	165e4 <PyInit__decimal@@Base+0x565c>
   166cc:	mov	x4, #0x1000                	// #4096
   166d0:	movk	x4, #0xd4a5, lsl #16
   166d4:	movk	x4, #0xe8, lsl #32
   166d8:	b	165e4 <PyInit__decimal@@Base+0x565c>
   166dc:	mov	x4, #0xa000                	// #40960
   166e0:	movk	x4, #0x4e72, lsl #16
   166e4:	movk	x4, #0x918, lsl #32
   166e8:	b	165e4 <PyInit__decimal@@Base+0x565c>
   166ec:	mov	x4, #0x4000                	// #16384
   166f0:	movk	x4, #0x107a, lsl #16
   166f4:	movk	x4, #0x5af3, lsl #32
   166f8:	b	165e4 <PyInit__decimal@@Base+0x565c>
   166fc:	sub	x3, x3, #0x10
   16700:	cmp	x3, #0x3
   16704:	b.hi	16728 <PyInit__decimal@@Base+0x57a0>  // b.pmore
   16708:	cmp	w3, #0x3
   1670c:	b.hi	16728 <PyInit__decimal@@Base+0x57a0>  // b.pmore
   16710:	adrp	x4, 2a000 <PyInit__decimal@@Base+0x19078>
   16714:	add	x4, x4, #0xf94
   16718:	ldrb	w3, [x4, w3, uxtw]
   1671c:	adr	x4, 16728 <PyInit__decimal@@Base+0x57a0>
   16720:	add	x3, x4, w3, sxtb #2
   16724:	br	x3
   16728:	mov	x4, #0x8000                	// #32768
   1672c:	movk	x4, #0xa4c6, lsl #16
   16730:	movk	x4, #0x8d7e, lsl #32
   16734:	movk	x4, #0x3, lsl #48
   16738:	b	165e4 <PyInit__decimal@@Base+0x565c>
   1673c:	mov	x4, #0x6fc10000            	// #1874919424
   16740:	movk	x4, #0x86f2, lsl #32
   16744:	movk	x4, #0x23, lsl #48
   16748:	b	165e4 <PyInit__decimal@@Base+0x565c>
   1674c:	mov	x4, #0x5d8a0000            	// #1569325056
   16750:	movk	x4, #0x4578, lsl #32
   16754:	movk	x4, #0x163, lsl #48
   16758:	b	165e4 <PyInit__decimal@@Base+0x565c>
   1675c:	mov	x4, #0xa7640000            	// #2808348672
   16760:	movk	x4, #0xb6b3, lsl #32
   16764:	movk	x4, #0xde0, lsl #48
   16768:	b	165e4 <PyInit__decimal@@Base+0x565c>
   1676c:	mov	x4, #0x89e80000            	// #2313682944
   16770:	movk	x4, #0x2304, lsl #32
   16774:	movk	x4, #0x8ac7, lsl #48
   16778:	cmp	x2, x4
   1677c:	cset	x3, cs  // cs = hs, nlast
   16780:	b	165e8 <PyInit__decimal@@Base+0x5660>
   16784:	mov	x6, x0
   16788:	mov	x0, #0x13                  	// #19
   1678c:	mov	x5, x3
   16790:	stp	x29, x30, [sp, #-48]!
   16794:	mov	x9, x1
   16798:	udiv	x10, x4, x0
   1679c:	mov	x29, sp
   167a0:	msub	x3, x10, x0, x4
   167a4:	cbz	x3, 1689c <PyInit__decimal@@Base+0x5914>
   167a8:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   167ac:	add	x1, x1, #0xae8
   167b0:	mov	x12, x2
   167b4:	sub	x8, x2, #0x1
   167b8:	sub	x7, x0, x3
   167bc:	add	x0, sp, #0x28
   167c0:	ldr	x11, [x1, x3, lsl #3]
   167c4:	sub	x1, x5, #0x1
   167c8:	mov	x3, x7
   167cc:	ldr	x2, [x9, x1, lsl #3]
   167d0:	add	x1, sp, #0x20
   167d4:	bl	16598 <PyInit__decimal@@Base+0x5610>
   167d8:	ldr	x1, [sp, #40]
   167dc:	cbz	x1, 16800 <PyInit__decimal@@Base+0x5878>
   167e0:	ldr	x2, [x6, x8, lsl #3]
   167e4:	cmp	x1, x2
   167e8:	b.eq	167fc <PyInit__decimal@@Base+0x5874>  // b.none
   167ec:	b.hi	16864 <PyInit__decimal@@Base+0x58dc>  // b.pmore
   167f0:	mov	w0, #0x1                   	// #1
   167f4:	ldp	x29, x30, [sp], #48
   167f8:	ret
   167fc:	sub	x8, x12, #0x2
   16800:	sub	x5, x5, #0x2
   16804:	add	x8, x6, x8, lsl #3
   16808:	add	x1, sp, #0x18
   1680c:	cmn	x5, #0x1
   16810:	b.ne	16840 <PyInit__decimal@@Base+0x58b8>  // b.any
   16814:	ldr	x0, [sp, #32]
   16818:	mul	x11, x11, x0
   1681c:	ldr	x0, [x6, x10, lsl #3]
   16820:	cmp	x0, x11
   16824:	b.ne	16860 <PyInit__decimal@@Base+0x58d8>  // b.any
   16828:	mov	x1, x10
   1682c:	mov	x0, x6
   16830:	bl	16068 <PyInit__decimal@@Base+0x50e0>
   16834:	cmp	w0, #0x0
   16838:	cset	w0, eq  // eq = none
   1683c:	b	167f4 <PyInit__decimal@@Base+0x586c>
   16840:	ldr	x2, [x9, x5, lsl #3]
   16844:	mov	x3, x7
   16848:	bl	16598 <PyInit__decimal@@Base+0x5610>
   1684c:	ldp	x2, x3, [sp, #32]
   16850:	madd	x2, x11, x2, x3
   16854:	ldr	x3, [x8], #-8
   16858:	cmp	x3, x2
   1685c:	b.eq	1686c <PyInit__decimal@@Base+0x58e4>  // b.none
   16860:	b.cs	167f0 <PyInit__decimal@@Base+0x5868>  // b.hs, b.nlast
   16864:	mov	w0, #0xffffffff            	// #-1
   16868:	b	167f4 <PyInit__decimal@@Base+0x586c>
   1686c:	ldr	x2, [sp, #24]
   16870:	sub	x5, x5, #0x1
   16874:	str	x2, [sp, #32]
   16878:	b	1680c <PyInit__decimal@@Base+0x5884>
   1687c:	ldr	x2, [x0, x5, lsl #3]
   16880:	ldr	x1, [x9, x5, lsl #3]
   16884:	cmp	x2, x1
   16888:	b.ne	16860 <PyInit__decimal@@Base+0x58d8>  // b.any
   1688c:	sub	x5, x5, #0x1
   16890:	cmn	x5, #0x1
   16894:	b.ne	1687c <PyInit__decimal@@Base+0x58f4>  // b.any
   16898:	b	16828 <PyInit__decimal@@Base+0x58a0>
   1689c:	add	x0, x6, x10, lsl #3
   168a0:	b	1688c <PyInit__decimal@@Base+0x5904>
   168a4:	stp	x29, x30, [sp, #-32]!
   168a8:	mov	x29, sp
   168ac:	stp	xzr, xzr, [sp, #16]
   168b0:	cbz	w2, 16930 <PyInit__decimal@@Base+0x59a8>
   168b4:	mov	x6, x0
   168b8:	adrp	x4, 2a000 <PyInit__decimal@@Base+0x19078>
   168bc:	add	x0, x0, x1, lsl #3
   168c0:	add	x4, x4, #0xae8
   168c4:	mov	w3, w2
   168c8:	mov	x5, x1
   168cc:	ldur	x2, [x0, #-8]
   168d0:	ldr	x0, [x4, #72]
   168d4:	cmp	x2, x0
   168d8:	b.cs	169b8 <PyInit__decimal@@Base+0x5a30>  // b.hs, b.nlast
   168dc:	ldr	x0, [x4, #32]
   168e0:	cmp	x2, x0
   168e4:	b.cs	16978 <PyInit__decimal@@Base+0x59f0>  // b.hs, b.nlast
   168e8:	ldr	x0, [x4, #16]
   168ec:	cmp	x2, x0
   168f0:	b.cs	16964 <PyInit__decimal@@Base+0x59dc>  // b.hs, b.nlast
   168f4:	ldr	x0, [x4, #8]
   168f8:	cmp	x2, x0
   168fc:	mov	w0, #0x2                   	// #2
   16900:	csel	w3, w3, w0, cc  // cc = lo, ul, last
   16904:	sub	w3, w3, #0x1
   16908:	add	x1, sp, #0x18
   1690c:	add	x0, sp, #0x10
   16910:	sxtw	x3, w3
   16914:	bl	16598 <PyInit__decimal@@Base+0x5610>
   16918:	cmp	x5, #0x1
   1691c:	b.le	16940 <PyInit__decimal@@Base+0x59b8>
   16920:	ldr	x0, [sp, #24]
   16924:	cbnz	x0, 16940 <PyInit__decimal@@Base+0x59b8>
   16928:	sub	x1, x5, #0x1
   1692c:	mov	x0, x6
   16930:	bl	16068 <PyInit__decimal@@Base+0x50e0>
   16934:	cmp	w0, #0x0
   16938:	cset	x0, eq  // eq = none
   1693c:	str	x0, [sp, #24]
   16940:	ldr	x0, [sp, #16]
   16944:	cmp	x0, #0x0
   16948:	ccmp	x0, #0x5, #0x4, ne  // ne = any
   1694c:	b.ne	1695c <PyInit__decimal@@Base+0x59d4>  // b.any
   16950:	ldr	x1, [sp, #24]
   16954:	cmp	x1, #0x0
   16958:	cinc	x0, x0, ne  // ne = any
   1695c:	ldp	x29, x30, [sp], #32
   16960:	ret
   16964:	ldr	x0, [x4, #24]
   16968:	cmp	x2, x0
   1696c:	cset	w3, cs  // cs = hs, nlast
   16970:	add	w3, w3, #0x3
   16974:	b	16904 <PyInit__decimal@@Base+0x597c>
   16978:	ldr	x0, [x4, #48]
   1697c:	cmp	x2, x0
   16980:	b.cs	16998 <PyInit__decimal@@Base+0x5a10>  // b.hs, b.nlast
   16984:	ldr	x0, [x4, #40]
   16988:	cmp	x2, x0
   1698c:	cset	w3, cs  // cs = hs, nlast
   16990:	add	w3, w3, #0x5
   16994:	b	16904 <PyInit__decimal@@Base+0x597c>
   16998:	ldr	x0, [x4, #64]
   1699c:	cmp	x2, x0
   169a0:	b.cs	16a58 <PyInit__decimal@@Base+0x5ad0>  // b.hs, b.nlast
   169a4:	ldr	x0, [x4, #56]
   169a8:	cmp	x2, x0
   169ac:	cset	w3, cs  // cs = hs, nlast
   169b0:	add	w3, w3, #0x7
   169b4:	b	16904 <PyInit__decimal@@Base+0x597c>
   169b8:	ldr	x0, [x4, #112]
   169bc:	cmp	x2, x0
   169c0:	b.cs	16a04 <PyInit__decimal@@Base+0x5a7c>  // b.hs, b.nlast
   169c4:	ldr	x0, [x4, #88]
   169c8:	cmp	x2, x0
   169cc:	b.cs	169e4 <PyInit__decimal@@Base+0x5a5c>  // b.hs, b.nlast
   169d0:	ldr	x0, [x4, #80]
   169d4:	cmp	x2, x0
   169d8:	cset	w3, cs  // cs = hs, nlast
   169dc:	add	w3, w3, #0xa
   169e0:	b	16904 <PyInit__decimal@@Base+0x597c>
   169e4:	ldr	x0, [x4, #104]
   169e8:	cmp	x2, x0
   169ec:	b.cs	16a60 <PyInit__decimal@@Base+0x5ad8>  // b.hs, b.nlast
   169f0:	ldr	x0, [x4, #96]
   169f4:	cmp	x2, x0
   169f8:	cset	w3, cs  // cs = hs, nlast
   169fc:	add	w3, w3, #0xc
   16a00:	b	16904 <PyInit__decimal@@Base+0x597c>
   16a04:	ldr	x0, [x4, #144]
   16a08:	cmp	x2, x0
   16a0c:	b.cs	16a44 <PyInit__decimal@@Base+0x5abc>  // b.hs, b.nlast
   16a10:	ldr	x0, [x4, #128]
   16a14:	cmp	x2, x0
   16a18:	b.cs	16a30 <PyInit__decimal@@Base+0x5aa8>  // b.hs, b.nlast
   16a1c:	ldr	x0, [x4, #120]
   16a20:	cmp	x2, x0
   16a24:	cset	w3, cs  // cs = hs, nlast
   16a28:	add	w3, w3, #0xf
   16a2c:	b	16904 <PyInit__decimal@@Base+0x597c>
   16a30:	ldr	x0, [x4, #136]
   16a34:	cmp	x2, x0
   16a38:	cset	w3, cs  // cs = hs, nlast
   16a3c:	add	w3, w3, #0x11
   16a40:	b	16904 <PyInit__decimal@@Base+0x597c>
   16a44:	ldr	x0, [x4, #152]
   16a48:	cmp	x2, x0
   16a4c:	cset	w3, cs  // cs = hs, nlast
   16a50:	add	w3, w3, #0x13
   16a54:	b	16904 <PyInit__decimal@@Base+0x597c>
   16a58:	mov	w3, #0x9                   	// #9
   16a5c:	b	16904 <PyInit__decimal@@Base+0x597c>
   16a60:	mov	w3, #0xe                   	// #14
   16a64:	b	16904 <PyInit__decimal@@Base+0x597c>
   16a68:	ldr	x3, [x0, #8]
   16a6c:	ldr	x5, [x1, #8]
   16a70:	ldr	x2, [x0, #24]
   16a74:	cmp	x3, x5
   16a78:	b.eq	16af4 <PyInit__decimal@@Base+0x5b6c>  // b.none
   16a7c:	sub	x4, x3, x5
   16a80:	cmp	x4, #0x0
   16a84:	ldr	x7, [x1, #24]
   16a88:	ldr	x0, [x0, #40]
   16a8c:	ldr	x6, [x1, #40]
   16a90:	b.le	16abc <PyInit__decimal@@Base+0x5b34>
   16a94:	stp	x29, x30, [sp, #-16]!
   16a98:	mov	x3, x2
   16a9c:	mov	x1, x0
   16aa0:	mov	x29, sp
   16aa4:	mov	x2, x7
   16aa8:	mov	x0, x6
   16aac:	bl	16784 <PyInit__decimal@@Base+0x57fc>
   16ab0:	neg	w0, w0
   16ab4:	ldp	x29, x30, [sp], #16
   16ab8:	ret
   16abc:	sub	x4, x5, x3
   16ac0:	mov	x1, x6
   16ac4:	mov	x3, x7
   16ac8:	b	16784 <PyInit__decimal@@Base+0x57fc>
   16acc:	ldr	x4, [x0, #40]
   16ad0:	lsl	x3, x2, #3
   16ad4:	ldr	x5, [x1, #40]
   16ad8:	ldr	x4, [x4, x3]
   16adc:	ldr	x3, [x5, x3]
   16ae0:	cmp	x4, x3
   16ae4:	b.eq	16af4 <PyInit__decimal@@Base+0x5b6c>  // b.none
   16ae8:	mov	w0, #0x1                   	// #1
   16aec:	cneg	w0, w0, cc  // cc = lo, ul, last
   16af0:	ret
   16af4:	sub	x2, x2, #0x1
   16af8:	tbz	x2, #63, 16acc <PyInit__decimal@@Base+0x5b44>
   16afc:	mov	w0, #0x0                   	// #0
   16b00:	ret
   16b04:	cmp	x0, x1
   16b08:	b.eq	16c20 <PyInit__decimal@@Base+0x5c98>  // b.none
   16b0c:	ldrb	w3, [x0]
   16b10:	mov	x13, x0
   16b14:	ldrb	w2, [x1]
   16b18:	and	w5, w2, #0x2
   16b1c:	tbz	w3, #1, 16b40 <PyInit__decimal@@Base+0x5bb8>
   16b20:	and	w3, w3, #0x1
   16b24:	mov	w1, #0xfffffffe            	// #-2
   16b28:	and	w0, w2, #0x1
   16b2c:	cmp	w5, #0x0
   16b30:	sub	w0, w0, w3
   16b34:	mul	w3, w3, w1
   16b38:	csinc	w0, w0, w3, ne  // ne = any
   16b3c:	ret
   16b40:	cbz	w5, 16b58 <PyInit__decimal@@Base+0x5bd0>
   16b44:	and	w0, w2, #0x1
   16b48:	mov	w2, #0xfffffffe            	// #-2
   16b4c:	mul	w0, w0, w2
   16b50:	mvn	w0, w0
   16b54:	ret
   16b58:	ldr	x5, [x1, #24]
   16b5c:	ldr	x6, [x1, #40]
   16b60:	ldr	x7, [x0, #40]
   16b64:	add	x5, x6, x5, lsl #3
   16b68:	ldur	x6, [x5, #-8]
   16b6c:	ldr	x5, [x0, #24]
   16b70:	add	x5, x7, x5, lsl #3
   16b74:	ldur	x5, [x5, #-8]
   16b78:	cbnz	x5, 16b94 <PyInit__decimal@@Base+0x5c0c>
   16b7c:	and	w0, w2, #0x1
   16b80:	mov	w2, #0xfffffffe            	// #-2
   16b84:	cmp	x6, #0x0
   16b88:	mul	w0, w0, w2
   16b8c:	csinv	w0, wzr, w0, eq  // eq = none
   16b90:	ret
   16b94:	and	w3, w3, #0x1
   16b98:	cbnz	x6, 16bac <PyInit__decimal@@Base+0x5c24>
   16b9c:	mov	w0, #0xfffffffe            	// #-2
   16ba0:	mul	w0, w3, w0
   16ba4:	add	w0, w0, #0x1
   16ba8:	ret
   16bac:	and	w2, w2, #0x1
   16bb0:	cmp	w2, w3
   16bb4:	b.eq	16bc0 <PyInit__decimal@@Base+0x5c38>  // b.none
   16bb8:	sub	w0, w2, w3
   16bbc:	ret
   16bc0:	ldp	x3, x5, [x0, #8]
   16bc4:	add	x3, x3, x5
   16bc8:	ldp	x5, x4, [x1, #8]
   16bcc:	sub	x6, x3, #0x1
   16bd0:	add	x4, x5, x4
   16bd4:	sub	x5, x4, #0x1
   16bd8:	cmp	x4, x3
   16bdc:	b.eq	16bf8 <PyInit__decimal@@Base+0x5c70>  // b.none
   16be0:	mov	w0, #0xfffffffe            	// #-2
   16be4:	cmp	x5, x6
   16be8:	mul	w0, w2, w0
   16bec:	add	w1, w0, #0x1
   16bf0:	csinv	w0, w1, w0, le
   16bf4:	ret
   16bf8:	stp	x29, x30, [sp, #-16]!
   16bfc:	mov	x29, sp
   16c00:	bl	16a68 <PyInit__decimal@@Base+0x5ae0>
   16c04:	ldrb	w1, [x13]
   16c08:	mov	w2, #0xfffffffe            	// #-2
   16c0c:	and	w1, w1, #0x1
   16c10:	ldp	x29, x30, [sp], #16
   16c14:	mul	w1, w1, w2
   16c18:	madd	w0, w1, w0, w0
   16c1c:	ret
   16c20:	mov	w0, #0x0                   	// #0
   16c24:	ret
   16c28:	stp	x29, x30, [sp, #-32]!
   16c2c:	mov	w3, #0x253                 	// #595
   16c30:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   16c34:	mov	x29, sp
   16c38:	str	x19, [sp, #16]
   16c3c:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
   16c40:	add	x2, x2, #0x9d8
   16c44:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   16c48:	ldr	x19, [x19, #3904]
   16c4c:	add	x1, x1, #0xa14
   16c50:	ldr	x0, [x19]
   16c54:	bl	6b10 <fprintf@plt>
   16c58:	ldr	x1, [x19]
   16c5c:	adrp	x0, 2b000 <PyInit__decimal@@Base+0x1a078>
   16c60:	add	x0, x0, #0x8b8
   16c64:	bl	6570 <fputs@plt>
   16c68:	ldr	x1, [x19]
   16c6c:	mov	w0, #0xa                   	// #10
   16c70:	bl	6640 <fputc@plt>
   16c74:	bl	6860 <abort@plt>
   16c78:	stp	x29, x30, [sp, #-112]!
   16c7c:	mov	x29, sp
   16c80:	stp	x19, x20, [sp, #16]
   16c84:	stp	x21, x22, [sp, #32]
   16c88:	stp	x23, x24, [sp, #48]
   16c8c:	stp	x25, x26, [sp, #64]
   16c90:	stp	x27, x28, [sp, #80]
   16c94:	mov	x27, x0
   16c98:	mvn	x0, x3
   16c9c:	str	x4, [sp, #104]
   16ca0:	cmp	x2, x0
   16ca4:	b.ls	16cac <PyInit__decimal@@Base+0x5d24>  // b.plast
   16ca8:	bl	16c28 <PyInit__decimal@@Base+0x5ca0>
   16cac:	ldr	x0, [sp, #104]
   16cb0:	add	x19, x2, x3
   16cb4:	mov	x25, x1
   16cb8:	mov	x20, x2
   16cbc:	mov	x24, x3
   16cc0:	str	x19, [x0]
   16cc4:	mov	x0, x19
   16cc8:	bl	16088 <PyInit__decimal@@Base+0x5100>
   16ccc:	sxtw	x0, w0
   16cd0:	cmp	x19, #0x400
   16cd4:	b.hi	16dbc <PyInit__decimal@@Base+0x5e34>  // b.pmore
   16cd8:	mov	x5, #0x1                   	// #1
   16cdc:	lsl	x5, x5, x0
   16ce0:	cmp	x5, x19
   16ce4:	b.eq	16cec <PyInit__decimal@@Base+0x5d64>  // b.none
   16ce8:	lsl	x19, x5, #1
   16cec:	mov	x0, x19
   16cf0:	mov	x1, #0x8                   	// #8
   16cf4:	bl	15cf8 <PyInit__decimal@@Base+0x4d70>
   16cf8:	mov	x23, x0
   16cfc:	cbz	x0, 16e08 <PyInit__decimal@@Base+0x5e80>
   16d00:	mov	x0, x19
   16d04:	mov	x1, #0x8                   	// #8
   16d08:	bl	15cf8 <PyInit__decimal@@Base+0x4d70>
   16d0c:	mov	x21, x0
   16d10:	cbz	x0, 16f70 <PyInit__decimal@@Base+0x5fe8>
   16d14:	mov	x0, x19
   16d18:	mov	x1, #0x8                   	// #8
   16d1c:	bl	15cf8 <PyInit__decimal@@Base+0x4d70>
   16d20:	mov	x22, x0
   16d24:	cbz	x0, 16da0 <PyInit__decimal@@Base+0x5e18>
   16d28:	lsl	x20, x20, #3
   16d2c:	mov	x1, x27
   16d30:	mov	x2, x20
   16d34:	mov	x0, x23
   16d38:	bl	64f0 <memcpy@plt>
   16d3c:	mov	x2, x20
   16d40:	mov	x1, x27
   16d44:	mov	x0, x21
   16d48:	bl	64f0 <memcpy@plt>
   16d4c:	mov	x2, x20
   16d50:	mov	x1, x27
   16d54:	mov	x0, x22
   16d58:	bl	64f0 <memcpy@plt>
   16d5c:	cmp	x27, x25
   16d60:	b.ne	16e28 <PyInit__decimal@@Base+0x5ea0>  // b.any
   16d64:	mov	x1, x19
   16d68:	mov	x0, x23
   16d6c:	mov	w2, #0x0                   	// #0
   16d70:	bl	12f28 <PyInit__decimal@@Base+0x1fa0>
   16d74:	cbz	w0, 16da0 <PyInit__decimal@@Base+0x5e18>
   16d78:	mov	x1, x19
   16d7c:	mov	x0, x21
   16d80:	mov	w2, #0x1                   	// #1
   16d84:	bl	12f28 <PyInit__decimal@@Base+0x1fa0>
   16d88:	cbz	w0, 16da0 <PyInit__decimal@@Base+0x5e18>
   16d8c:	mov	x1, x19
   16d90:	mov	x0, x22
   16d94:	mov	w2, #0x2                   	// #2
   16d98:	bl	12f28 <PyInit__decimal@@Base+0x1fa0>
   16d9c:	cbnz	w0, 16ef8 <PyInit__decimal@@Base+0x5f70>
   16da0:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   16da4:	ldr	x1, [x0, #1720]
   16da8:	mov	x0, x23
   16dac:	mov	x23, #0x0                   	// #0
   16db0:	blr	x1
   16db4:	cbnz	x21, 16f10 <PyInit__decimal@@Base+0x5f88>
   16db8:	b	16f24 <PyInit__decimal@@Base+0x5f9c>
   16dbc:	mov	x1, #0x100000000           	// #4294967296
   16dc0:	cmp	x19, x1
   16dc4:	b.hi	16df0 <PyInit__decimal@@Base+0x5e68>  // b.pmore
   16dc8:	mov	x5, #0x1                   	// #1
   16dcc:	lsl	x5, x5, x0
   16dd0:	cmp	x5, x19
   16dd4:	b.eq	16cec <PyInit__decimal@@Base+0x5d64>  // b.none
   16dd8:	lsr	x0, x5, #1
   16ddc:	add	x5, x5, x5, lsr #1
   16de0:	cmp	x5, x19
   16de4:	b.cs	16e10 <PyInit__decimal@@Base+0x5e88>  // b.hs, b.nlast
   16de8:	add	x19, x0, x5
   16dec:	b	16cec <PyInit__decimal@@Base+0x5d64>
   16df0:	mov	x0, #0x180000000           	// #6442450944
   16df4:	cmp	x19, x0
   16df8:	b.ls	16e20 <PyInit__decimal@@Base+0x5e98>  // b.plast
   16dfc:	mov	x0, #0x300000000           	// #12884901888
   16e00:	cmp	x19, x0
   16e04:	b.ls	16e20 <PyInit__decimal@@Base+0x5e98>  // b.plast
   16e08:	mov	x21, #0x0                   	// #0
   16e0c:	b	16f38 <PyInit__decimal@@Base+0x5fb0>
   16e10:	cmn	x5, #0x1
   16e14:	b.eq	16e08 <PyInit__decimal@@Base+0x5e80>  // b.none
   16e18:	mov	x19, x5
   16e1c:	b	16cec <PyInit__decimal@@Base+0x5d64>
   16e20:	mov	x19, x0
   16e24:	b	16cec <PyInit__decimal@@Base+0x5d64>
   16e28:	mov	x0, x19
   16e2c:	mov	x1, #0x8                   	// #8
   16e30:	bl	15cf8 <PyInit__decimal@@Base+0x4d70>
   16e34:	mov	x20, x0
   16e38:	cbz	x0, 16da0 <PyInit__decimal@@Base+0x5e18>
   16e3c:	lsl	x26, x24, #3
   16e40:	mov	x1, x25
   16e44:	mov	x2, x26
   16e48:	bl	64f0 <memcpy@plt>
   16e4c:	mov	x2, x19
   16e50:	mov	x1, x20
   16e54:	mov	x0, x23
   16e58:	mov	w3, #0x0                   	// #0
   16e5c:	bl	12d4c <PyInit__decimal@@Base+0x1dc4>
   16e60:	cbnz	w0, 16e78 <PyInit__decimal@@Base+0x5ef0>
   16e64:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   16e68:	ldr	x1, [x0, #1720]
   16e6c:	mov	x0, x20
   16e70:	blr	x1
   16e74:	b	16da0 <PyInit__decimal@@Base+0x5e18>
   16e78:	sub	x24, x19, x24
   16e7c:	add	x28, x20, x26
   16e80:	mov	x27, #0x0                   	// #0
   16e84:	mov	x2, x26
   16e88:	mov	x1, x25
   16e8c:	mov	x0, x20
   16e90:	bl	64f0 <memcpy@plt>
   16e94:	cmp	x24, x27
   16e98:	b.ne	16f58 <PyInit__decimal@@Base+0x5fd0>  // b.any
   16e9c:	mov	x2, x19
   16ea0:	mov	x1, x20
   16ea4:	mov	x0, x21
   16ea8:	mov	w3, #0x1                   	// #1
   16eac:	bl	12d4c <PyInit__decimal@@Base+0x1dc4>
   16eb0:	cbz	w0, 16e64 <PyInit__decimal@@Base+0x5edc>
   16eb4:	mov	x2, x26
   16eb8:	mov	x1, x25
   16ebc:	mov	x0, x20
   16ec0:	bl	64f0 <memcpy@plt>
   16ec4:	mov	x0, #0x0                   	// #0
   16ec8:	cmp	x27, x0
   16ecc:	b.ne	16f64 <PyInit__decimal@@Base+0x5fdc>  // b.any
   16ed0:	mov	x1, x20
   16ed4:	mov	x2, x19
   16ed8:	mov	x0, x22
   16edc:	mov	w3, #0x2                   	// #2
   16ee0:	bl	12d4c <PyInit__decimal@@Base+0x1dc4>
   16ee4:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
   16ee8:	ldr	x1, [x1, #1720]
   16eec:	cbz	w0, 16e6c <PyInit__decimal@@Base+0x5ee4>
   16ef0:	mov	x0, x20
   16ef4:	blr	x1
   16ef8:	ldr	x0, [sp, #104]
   16efc:	mov	x2, x22
   16f00:	mov	x1, x21
   16f04:	ldr	x3, [x0]
   16f08:	mov	x0, x23
   16f0c:	bl	131d8 <PyInit__decimal@@Base+0x2250>
   16f10:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   16f14:	ldr	x1, [x0, #1720]
   16f18:	mov	x0, x21
   16f1c:	mov	x21, x23
   16f20:	blr	x1
   16f24:	cbz	x22, 16f38 <PyInit__decimal@@Base+0x5fb0>
   16f28:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   16f2c:	ldr	x1, [x0, #1720]
   16f30:	mov	x0, x22
   16f34:	blr	x1
   16f38:	mov	x0, x21
   16f3c:	ldp	x19, x20, [sp, #16]
   16f40:	ldp	x21, x22, [sp, #32]
   16f44:	ldp	x23, x24, [sp, #48]
   16f48:	ldp	x25, x26, [sp, #64]
   16f4c:	ldp	x27, x28, [sp, #80]
   16f50:	ldp	x29, x30, [sp], #112
   16f54:	ret
   16f58:	str	xzr, [x28, x27, lsl #3]
   16f5c:	add	x27, x27, #0x1
   16f60:	b	16e94 <PyInit__decimal@@Base+0x5f0c>
   16f64:	str	xzr, [x28, x0, lsl #3]
   16f68:	add	x0, x0, #0x1
   16f6c:	b	16ec8 <PyInit__decimal@@Base+0x5f40>
   16f70:	mov	x22, #0x0                   	// #0
   16f74:	b	16da0 <PyInit__decimal@@Base+0x5e18>
   16f78:	stp	x29, x30, [sp, #-160]!
   16f7c:	mov	x29, sp
   16f80:	stp	x19, x20, [sp, #16]
   16f84:	mov	x20, x5
   16f88:	stp	x21, x22, [sp, #32]
   16f8c:	mov	x21, x4
   16f90:	stp	x23, x24, [sp, #48]
   16f94:	mov	x23, x2
   16f98:	mov	x24, x0
   16f9c:	stp	x25, x26, [sp, #64]
   16fa0:	mov	x2, #0x180000000           	// #6442450944
   16fa4:	mov	x25, x1
   16fa8:	stp	x27, x28, [sp, #80]
   16fac:	cmp	x4, x2
   16fb0:	b.hi	1703c <PyInit__decimal@@Base+0x60b4>  // b.pmore
   16fb4:	cmp	x5, #0xc0
   16fb8:	b.hi	16fd4 <PyInit__decimal@@Base+0x604c>  // b.pmore
   16fbc:	mov	x2, x1
   16fc0:	mov	x3, x5
   16fc4:	mov	x1, x23
   16fc8:	bl	11f04 <PyInit__decimal@@Base+0xf7c>
   16fcc:	mov	w0, #0x1                   	// #1
   16fd0:	b	16ff8 <PyInit__decimal@@Base+0x6070>
   16fd4:	add	x4, sp, #0x98
   16fd8:	mov	x3, x5
   16fdc:	mov	x2, x21
   16fe0:	mov	x1, x23
   16fe4:	mov	x0, x25
   16fe8:	bl	16c78 <PyInit__decimal@@Base+0x5cf0>
   16fec:	mov	x19, x0
   16ff0:	cbnz	x0, 17014 <PyInit__decimal@@Base+0x608c>
   16ff4:	mov	w0, #0x0                   	// #0
   16ff8:	ldp	x19, x20, [sp, #16]
   16ffc:	ldp	x21, x22, [sp, #32]
   17000:	ldp	x23, x24, [sp, #48]
   17004:	ldp	x25, x26, [sp, #64]
   17008:	ldp	x27, x28, [sp, #80]
   1700c:	ldp	x29, x30, [sp], #160
   17010:	ret
   17014:	add	x2, x21, x20
   17018:	mov	x1, x0
   1701c:	mov	x0, x24
   17020:	lsl	x2, x2, #3
   17024:	bl	64f0 <memcpy@plt>
   17028:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1702c:	ldr	x1, [x0, #1720]
   17030:	mov	x0, x19
   17034:	blr	x1
   17038:	b	16fcc <PyInit__decimal@@Base+0x6044>
   1703c:	add	x26, x4, #0x1
   17040:	mov	x19, x3
   17044:	lsr	x22, x26, #1
   17048:	sub	x21, x4, x22
   1704c:	cmp	x22, x5
   17050:	lsl	x27, x22, #3
   17054:	add	x7, x1, x22, lsl #3
   17058:	b.cc	17134 <PyInit__decimal@@Base+0x61ac>  // b.lo, b.ul, b.last
   1705c:	cmp	x5, x21
   17060:	b.ls	170fc <PyInit__decimal@@Base+0x6174>  // b.plast
   17064:	lsl	x3, x5, #1
   17068:	mov	x0, #0x0                   	// #0
   1706c:	add	x3, x3, #0x1
   17070:	str	xzr, [x19, x0, lsl #3]
   17074:	add	x0, x0, #0x1
   17078:	cmp	x3, x0
   1707c:	b.hi	17070 <PyInit__decimal@@Base+0x60e8>  // b.pmore
   17080:	mov	x5, x21
   17084:	mov	x4, x20
   17088:	add	x3, x19, x3, lsl #3
   1708c:	mov	x2, x7
   17090:	mov	x1, x23
   17094:	mov	x0, x19
   17098:	bl	16f78 <PyInit__decimal@@Base+0x5ff0>
   1709c:	cbz	w0, 16ff4 <PyInit__decimal@@Base+0x606c>
   170a0:	add	x0, x24, x27
   170a4:	add	x2, x20, x21
   170a8:	mov	x1, x19
   170ac:	bl	11c18 <PyInit__decimal@@Base+0xc90>
   170b0:	orr	x3, x26, #0x1
   170b4:	mov	x0, #0x0                   	// #0
   170b8:	str	xzr, [x19, x0, lsl #3]
   170bc:	add	x0, x0, #0x1
   170c0:	cmp	x3, x0
   170c4:	b.hi	170b8 <PyInit__decimal@@Base+0x6130>  // b.pmore
   170c8:	mov	x5, x20
   170cc:	mov	x4, x22
   170d0:	add	x3, x19, x3, lsl #3
   170d4:	mov	x2, x23
   170d8:	mov	x1, x25
   170dc:	mov	x0, x19
   170e0:	bl	16f78 <PyInit__decimal@@Base+0x5ff0>
   170e4:	cbz	w0, 16ff4 <PyInit__decimal@@Base+0x606c>
   170e8:	add	x2, x22, x20
   170ec:	mov	x1, x19
   170f0:	mov	x0, x24
   170f4:	bl	11c18 <PyInit__decimal@@Base+0xc90>
   170f8:	b	16fcc <PyInit__decimal@@Base+0x6044>
   170fc:	lsl	x3, x21, #1
   17100:	mov	x0, #0x0                   	// #0
   17104:	add	x3, x3, #0x1
   17108:	cmp	x3, x0
   1710c:	b.hi	17128 <PyInit__decimal@@Base+0x61a0>  // b.pmore
   17110:	mov	x5, x20
   17114:	mov	x4, x21
   17118:	add	x3, x19, x3, lsl #3
   1711c:	mov	x2, x23
   17120:	mov	x1, x7
   17124:	b	17094 <PyInit__decimal@@Base+0x610c>
   17128:	str	xzr, [x19, x0, lsl #3]
   1712c:	add	x0, x0, #0x1
   17130:	b	17108 <PyInit__decimal@@Base+0x6180>
   17134:	mov	x0, x3
   17138:	sub	x20, x5, x22
   1713c:	mov	x2, x27
   17140:	str	x7, [sp, #104]
   17144:	bl	64f0 <memcpy@plt>
   17148:	str	xzr, [x19, x27]
   1714c:	ldr	x7, [sp, #104]
   17150:	mov	x2, x21
   17154:	mov	x0, x19
   17158:	str	x7, [sp, #136]
   1715c:	mov	x1, x7
   17160:	add	x28, x24, x27
   17164:	bl	11c18 <PyInit__decimal@@Base+0xc90>
   17168:	add	x6, x27, #0x8
   1716c:	add	x5, x22, #0x1
   17170:	add	x6, x19, x6
   17174:	mov	x2, x27
   17178:	mov	x1, x23
   1717c:	mov	x0, x6
   17180:	str	x5, [sp, #128]
   17184:	bl	64f0 <memcpy@plt>
   17188:	mov	x6, x0
   1718c:	add	x0, x19, x22, lsl #4
   17190:	lsl	x3, x22, #4
   17194:	add	x8, x23, x27
   17198:	mov	x2, x20
   1719c:	mov	x1, x8
   171a0:	stp	x6, x8, [sp, #104]
   171a4:	str	xzr, [x0, #8]
   171a8:	mov	x0, x6
   171ac:	str	x3, [sp, #120]
   171b0:	bl	11c18 <PyInit__decimal@@Base+0xc90>
   171b4:	ldp	x3, x5, [sp, #120]
   171b8:	mov	x1, x19
   171bc:	ldr	x6, [sp, #104]
   171c0:	mov	x0, x28
   171c4:	mov	x2, x6
   171c8:	add	x3, x3, #0x10
   171cc:	mov	x4, x5
   171d0:	add	x3, x19, x3
   171d4:	bl	16f78 <PyInit__decimal@@Base+0x5ff0>
   171d8:	cbz	w0, 16ff4 <PyInit__decimal@@Base+0x606c>
   171dc:	lsl	x3, x21, #1
   171e0:	mov	x0, #0x0                   	// #0
   171e4:	ldr	x8, [sp, #112]
   171e8:	add	x3, x3, #0x1
   171ec:	ldr	x7, [sp, #136]
   171f0:	cmp	x3, x0
   171f4:	b.hi	1729c <PyInit__decimal@@Base+0x6314>  // b.pmore
   171f8:	mov	x5, x20
   171fc:	mov	x4, x21
   17200:	add	x3, x19, x3, lsl #3
   17204:	mov	x2, x8
   17208:	mov	x1, x7
   1720c:	mov	x0, x19
   17210:	bl	16f78 <PyInit__decimal@@Base+0x5ff0>
   17214:	cbz	w0, 16ff4 <PyInit__decimal@@Base+0x606c>
   17218:	add	x20, x20, x21
   1721c:	mov	x1, x19
   17220:	mov	x2, x20
   17224:	add	x0, x28, x27
   17228:	bl	11c18 <PyInit__decimal@@Base+0xc90>
   1722c:	mov	x2, x20
   17230:	mov	x0, x28
   17234:	mov	x1, x19
   17238:	bl	11e24 <PyInit__decimal@@Base+0xe9c>
   1723c:	and	x20, x26, #0xfffffffffffffffe
   17240:	orr	x3, x26, #0x1
   17244:	mov	x0, #0x0                   	// #0
   17248:	str	xzr, [x19, x0, lsl #3]
   1724c:	add	x0, x0, #0x1
   17250:	cmp	x3, x0
   17254:	b.hi	17248 <PyInit__decimal@@Base+0x62c0>  // b.pmore
   17258:	mov	x5, x22
   1725c:	mov	x4, x22
   17260:	add	x3, x19, x3, lsl #3
   17264:	mov	x2, x23
   17268:	mov	x1, x25
   1726c:	mov	x0, x19
   17270:	bl	16f78 <PyInit__decimal@@Base+0x5ff0>
   17274:	cbz	w0, 16ff4 <PyInit__decimal@@Base+0x606c>
   17278:	mov	x2, x20
   1727c:	mov	x1, x19
   17280:	mov	x0, x24
   17284:	bl	11c18 <PyInit__decimal@@Base+0xc90>
   17288:	mov	x2, x20
   1728c:	mov	x1, x19
   17290:	mov	x0, x28
   17294:	bl	11e24 <PyInit__decimal@@Base+0xe9c>
   17298:	b	16fcc <PyInit__decimal@@Base+0x6044>
   1729c:	str	xzr, [x19, x0, lsl #3]
   172a0:	add	x0, x0, #0x1
   172a4:	b	171f0 <PyInit__decimal@@Base+0x6268>
   172a8:	stp	x29, x30, [sp, #-32]!
   172ac:	mov	w3, #0x26c                 	// #620
   172b0:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   172b4:	mov	x29, sp
   172b8:	str	x19, [sp, #16]
   172bc:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
   172c0:	add	x2, x2, #0x9d8
   172c4:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   172c8:	ldr	x19, [x19, #3904]
   172cc:	add	x1, x1, #0xa14
   172d0:	ldr	x0, [x19]
   172d4:	bl	6b10 <fprintf@plt>
   172d8:	ldr	x1, [x19]
   172dc:	adrp	x0, 2b000 <PyInit__decimal@@Base+0x1a078>
   172e0:	add	x0, x0, #0x8e2
   172e4:	bl	6570 <fputs@plt>
   172e8:	ldr	x1, [x19]
   172ec:	mov	w0, #0xa                   	// #10
   172f0:	bl	6640 <fputc@plt>
   172f4:	bl	6860 <abort@plt>
   172f8:	cmp	x0, x1
   172fc:	b.eq	17388 <PyInit__decimal@@Base+0x6400>  // b.none
   17300:	ldrb	w5, [x0]
   17304:	ldrb	w4, [x1]
   17308:	and	w4, w4, #0x2
   1730c:	tbz	w5, #1, 1731c <PyInit__decimal@@Base+0x6394>
   17310:	cmp	w4, #0x0
   17314:	cset	w0, eq  // eq = none
   17318:	ret
   1731c:	cbnz	w4, 17390 <PyInit__decimal@@Base+0x6408>
   17320:	ldr	x4, [x1, #24]
   17324:	ldr	x5, [x1, #40]
   17328:	ldr	x6, [x0, #40]
   1732c:	add	x4, x5, x4, lsl #3
   17330:	ldur	x5, [x4, #-8]
   17334:	ldr	x4, [x0, #24]
   17338:	add	x4, x6, x4, lsl #3
   1733c:	ldur	x4, [x4, #-8]
   17340:	cbnz	x4, 17350 <PyInit__decimal@@Base+0x63c8>
   17344:	cmp	x5, #0x0
   17348:	csetm	w0, ne  // ne = any
   1734c:	b	17318 <PyInit__decimal@@Base+0x6390>
   17350:	cbz	x5, 17398 <PyInit__decimal@@Base+0x6410>
   17354:	ldp	x4, x3, [x0, #8]
   17358:	add	x4, x4, x3
   1735c:	ldp	x3, x2, [x1, #8]
   17360:	sub	x5, x4, #0x1
   17364:	add	x2, x3, x2
   17368:	sub	x3, x2, #0x1
   1736c:	cmp	x4, x2
   17370:	b.eq	17384 <PyInit__decimal@@Base+0x63fc>  // b.none
   17374:	cmp	x5, x3
   17378:	mov	w0, #0xffffffff            	// #-1
   1737c:	cneg	w0, w0, ge  // ge = tcont
   17380:	b	17318 <PyInit__decimal@@Base+0x6390>
   17384:	b	16a68 <PyInit__decimal@@Base+0x5ae0>
   17388:	mov	w0, #0x0                   	// #0
   1738c:	b	17318 <PyInit__decimal@@Base+0x6390>
   17390:	mov	w0, #0xffffffff            	// #-1
   17394:	b	17318 <PyInit__decimal@@Base+0x6390>
   17398:	mov	w0, #0x1                   	// #1
   1739c:	b	17318 <PyInit__decimal@@Base+0x6390>
   173a0:	cmp	w2, #0x7
   173a4:	b.hi	17448 <PyInit__decimal@@Base+0x64c0>  // b.pmore
   173a8:	adrp	x3, 2a000 <PyInit__decimal@@Base+0x19078>
   173ac:	add	x3, x3, #0xf98
   173b0:	ldrb	w2, [x3, w2, uxtw]
   173b4:	adr	x3, 173c0 <PyInit__decimal@@Base+0x6438>
   173b8:	add	x2, x3, w2, sxtb #2
   173bc:	br	x2
   173c0:	cmp	x1, #0x4
   173c4:	cset	w0, hi  // hi = pmore
   173c8:	b	173e4 <PyInit__decimal@@Base+0x645c>
   173cc:	cmp	x1, #0x5
   173d0:	b.hi	17440 <PyInit__decimal@@Base+0x64b8>  // b.pmore
   173d4:	b.ne	17448 <PyInit__decimal@@Base+0x64c0>  // b.any
   173d8:	ldr	x0, [x0, #40]
   173dc:	ldr	x0, [x0]
   173e0:	and	w0, w0, #0x1
   173e4:	ret
   173e8:	cbz	x1, 17448 <PyInit__decimal@@Base+0x64c0>
   173ec:	ldrb	w0, [x0]
   173f0:	mvn	w0, w0
   173f4:	b	173e0 <PyInit__decimal@@Base+0x6458>
   173f8:	cbz	x1, 17448 <PyInit__decimal@@Base+0x64c0>
   173fc:	ldrb	w0, [x0]
   17400:	b	173e0 <PyInit__decimal@@Base+0x6458>
   17404:	cmp	x1, #0x5
   17408:	b	173c4 <PyInit__decimal@@Base+0x643c>
   1740c:	cmp	x1, #0x0
   17410:	cset	w0, ne  // ne = any
   17414:	b	173e4 <PyInit__decimal@@Base+0x645c>
   17418:	ldr	x0, [x0, #40]
   1741c:	ldr	x2, [x0]
   17420:	cbz	x1, 17448 <PyInit__decimal@@Base+0x64c0>
   17424:	mov	x1, #0xa                   	// #10
   17428:	udiv	x0, x2, x1
   1742c:	msub	x0, x0, x1, x2
   17430:	cmp	w0, #0x0
   17434:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   17438:	cset	w0, eq  // eq = none
   1743c:	b	173e4 <PyInit__decimal@@Base+0x645c>
   17440:	mov	w0, #0x1                   	// #1
   17444:	b	173e4 <PyInit__decimal@@Base+0x645c>
   17448:	mov	w0, #0x0                   	// #0
   1744c:	b	173e4 <PyInit__decimal@@Base+0x645c>
   17450:	stp	x29, x30, [sp, #-16]!
   17454:	mvn	x2, x1
   17458:	cmp	x0, x2
   1745c:	mov	x29, sp
   17460:	b.ls	17468 <PyInit__decimal@@Base+0x64e0>  // b.plast
   17464:	bl	16c28 <PyInit__decimal@@Base+0x5ca0>
   17468:	add	x1, x0, x1
   1746c:	cmn	x1, #0x1
   17470:	b.eq	17464 <PyInit__decimal@@Base+0x64dc>  // b.none
   17474:	add	x0, x0, #0x1
   17478:	mov	x3, #0x3                   	// #3
   1747c:	add	x1, x1, #0x1
   17480:	lsr	x0, x0, #1
   17484:	add	x2, x0, #0x1
   17488:	madd	x0, x0, x3, x3
   1748c:	umulh	x2, x2, x3
   17490:	cbz	x2, 17498 <PyInit__decimal@@Base+0x6510>
   17494:	bl	172a8 <PyInit__decimal@@Base+0x6320>
   17498:	cmp	x1, x0
   1749c:	csel	x0, x1, x0, cs  // cs = hs, nlast
   174a0:	ldp	x29, x30, [sp], #16
   174a4:	ret
   174a8:	stp	x29, x30, [sp, #-32]!
   174ac:	add	x0, x0, #0x1
   174b0:	mov	x29, sp
   174b4:	lsr	x0, x0, #1
   174b8:	add	x0, x0, #0x1
   174bc:	str	x19, [sp, #16]
   174c0:	lsr	x2, x0, #63
   174c4:	cbz	x2, 174cc <PyInit__decimal@@Base+0x6544>
   174c8:	bl	172a8 <PyInit__decimal@@Base+0x6320>
   174cc:	lsl	x19, x0, #1
   174d0:	cmp	x0, x1
   174d4:	b.ls	174f0 <PyInit__decimal@@Base+0x6568>  // b.plast
   174d8:	bl	174a8 <PyInit__decimal@@Base+0x6520>
   174dc:	mov	x2, x0
   174e0:	mvn	x0, x0
   174e4:	cmp	x0, x19
   174e8:	b.cs	174f0 <PyInit__decimal@@Base+0x6568>  // b.hs, b.nlast
   174ec:	bl	16c28 <PyInit__decimal@@Base+0x5ca0>
   174f0:	add	x0, x19, x2
   174f4:	ldr	x19, [sp, #16]
   174f8:	ldp	x29, x30, [sp], #32
   174fc:	ret
   17500:	adrp	x0, 2b000 <PyInit__decimal@@Base+0x1a078>
   17504:	add	x0, x0, #0x90c
   17508:	ret
   1750c:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   17510:	add	x1, x1, #0xae8
   17514:	ldr	x2, [x1, #72]
   17518:	cmp	x2, x0
   1751c:	b.ls	175a0 <PyInit__decimal@@Base+0x6618>  // b.plast
   17520:	ldr	x2, [x1, #32]
   17524:	cmp	x2, x0
   17528:	b.ls	17560 <PyInit__decimal@@Base+0x65d8>  // b.plast
   1752c:	ldr	x2, [x1, #16]
   17530:	cmp	x2, x0
   17534:	b.ls	1754c <PyInit__decimal@@Base+0x65c4>  // b.plast
   17538:	ldr	x1, [x1, #8]
   1753c:	cmp	x1, x0
   17540:	cset	w0, ls  // ls = plast
   17544:	add	w0, w0, #0x1
   17548:	ret
   1754c:	ldr	x1, [x1, #24]
   17550:	cmp	x1, x0
   17554:	cset	w0, ls  // ls = plast
   17558:	add	w0, w0, #0x3
   1755c:	b	17548 <PyInit__decimal@@Base+0x65c0>
   17560:	ldr	x2, [x1, #48]
   17564:	cmp	x2, x0
   17568:	b.ls	17580 <PyInit__decimal@@Base+0x65f8>  // b.plast
   1756c:	ldr	x1, [x1, #40]
   17570:	cmp	x1, x0
   17574:	cset	w0, ls  // ls = plast
   17578:	add	w0, w0, #0x5
   1757c:	b	17548 <PyInit__decimal@@Base+0x65c0>
   17580:	ldr	x2, [x1, #64]
   17584:	cmp	x2, x0
   17588:	b.ls	17640 <PyInit__decimal@@Base+0x66b8>  // b.plast
   1758c:	ldr	x1, [x1, #56]
   17590:	cmp	x1, x0
   17594:	cset	w0, ls  // ls = plast
   17598:	add	w0, w0, #0x7
   1759c:	b	17548 <PyInit__decimal@@Base+0x65c0>
   175a0:	ldr	x2, [x1, #112]
   175a4:	cmp	x2, x0
   175a8:	b.ls	175ec <PyInit__decimal@@Base+0x6664>  // b.plast
   175ac:	ldr	x2, [x1, #88]
   175b0:	cmp	x2, x0
   175b4:	b.ls	175cc <PyInit__decimal@@Base+0x6644>  // b.plast
   175b8:	ldr	x1, [x1, #80]
   175bc:	cmp	x1, x0
   175c0:	cset	w0, ls  // ls = plast
   175c4:	add	w0, w0, #0xa
   175c8:	b	17548 <PyInit__decimal@@Base+0x65c0>
   175cc:	ldr	x2, [x1, #104]
   175d0:	cmp	x2, x0
   175d4:	b.ls	17648 <PyInit__decimal@@Base+0x66c0>  // b.plast
   175d8:	ldr	x1, [x1, #96]
   175dc:	cmp	x1, x0
   175e0:	cset	w0, ls  // ls = plast
   175e4:	add	w0, w0, #0xc
   175e8:	b	17548 <PyInit__decimal@@Base+0x65c0>
   175ec:	ldr	x2, [x1, #144]
   175f0:	cmp	x2, x0
   175f4:	b.ls	1762c <PyInit__decimal@@Base+0x66a4>  // b.plast
   175f8:	ldr	x2, [x1, #128]
   175fc:	cmp	x2, x0
   17600:	b.ls	17618 <PyInit__decimal@@Base+0x6690>  // b.plast
   17604:	ldr	x1, [x1, #120]
   17608:	cmp	x1, x0
   1760c:	cset	w0, ls  // ls = plast
   17610:	add	w0, w0, #0xf
   17614:	b	17548 <PyInit__decimal@@Base+0x65c0>
   17618:	ldr	x1, [x1, #136]
   1761c:	cmp	x1, x0
   17620:	cset	w0, ls  // ls = plast
   17624:	add	w0, w0, #0x11
   17628:	b	17548 <PyInit__decimal@@Base+0x65c0>
   1762c:	ldr	x1, [x1, #152]
   17630:	cmp	x1, x0
   17634:	cset	w0, ls  // ls = plast
   17638:	add	w0, w0, #0x13
   1763c:	b	17548 <PyInit__decimal@@Base+0x65c0>
   17640:	mov	w0, #0x9                   	// #9
   17644:	b	17548 <PyInit__decimal@@Base+0x65c0>
   17648:	mov	w0, #0xe                   	// #14
   1764c:	b	17548 <PyInit__decimal@@Base+0x65c0>
   17650:	ldp	x1, x0, [x0, #8]
   17654:	add	x0, x1, x0
   17658:	sub	x0, x0, #0x1
   1765c:	ret
   17660:	ldr	x1, [x0, #16]
   17664:	ldr	x0, [x0]
   17668:	add	x1, x1, #0x1
   1766c:	sub	x0, x1, x0
   17670:	ret
   17674:	ldr	x1, [x0, #8]
   17678:	ldr	x0, [x0]
   1767c:	add	x1, x1, #0x1
   17680:	sub	x0, x1, x0
   17684:	ret
   17688:	ldr	x1, [x0, #24]
   1768c:	ldr	x0, [x0, #40]
   17690:	add	x0, x0, x1, lsl #3
   17694:	ldur	x0, [x0, #-8]
   17698:	ret
   1769c:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   176a0:	add	x1, x2, #0xae8
   176a4:	ldr	x3, [x1, #72]
   176a8:	cmp	x0, x3
   176ac:	b.cs	17740 <PyInit__decimal@@Base+0x67b8>  // b.hs, b.nlast
   176b0:	ldr	x3, [x1, #32]
   176b4:	cmp	x0, x3
   176b8:	b.cs	17700 <PyInit__decimal@@Base+0x6778>  // b.hs, b.nlast
   176bc:	ldr	x3, [x1, #16]
   176c0:	cmp	x0, x3
   176c4:	b.cs	176ec <PyInit__decimal@@Base+0x6764>  // b.hs, b.nlast
   176c8:	ldr	x1, [x1, #8]
   176cc:	cmp	x0, x1
   176d0:	cset	w1, cs  // cs = hs, nlast
   176d4:	add	w1, w1, #0x1
   176d8:	add	x2, x2, #0xae8
   176dc:	sub	w1, w1, #0x1
   176e0:	ldr	x1, [x2, w1, sxtw #3]
   176e4:	udiv	x0, x0, x1
   176e8:	ret
   176ec:	ldr	x1, [x1, #24]
   176f0:	cmp	x0, x1
   176f4:	cset	w1, cs  // cs = hs, nlast
   176f8:	add	w1, w1, #0x3
   176fc:	b	176d8 <PyInit__decimal@@Base+0x6750>
   17700:	ldr	x3, [x1, #48]
   17704:	cmp	x0, x3
   17708:	b.cs	17720 <PyInit__decimal@@Base+0x6798>  // b.hs, b.nlast
   1770c:	ldr	x1, [x1, #40]
   17710:	cmp	x0, x1
   17714:	cset	w1, cs  // cs = hs, nlast
   17718:	add	w1, w1, #0x5
   1771c:	b	176d8 <PyInit__decimal@@Base+0x6750>
   17720:	ldr	x3, [x1, #64]
   17724:	cmp	x0, x3
   17728:	b.cs	177e0 <PyInit__decimal@@Base+0x6858>  // b.hs, b.nlast
   1772c:	ldr	x1, [x1, #56]
   17730:	cmp	x0, x1
   17734:	cset	w1, cs  // cs = hs, nlast
   17738:	add	w1, w1, #0x7
   1773c:	b	176d8 <PyInit__decimal@@Base+0x6750>
   17740:	ldr	x3, [x1, #112]
   17744:	cmp	x0, x3
   17748:	b.cs	1778c <PyInit__decimal@@Base+0x6804>  // b.hs, b.nlast
   1774c:	ldr	x3, [x1, #88]
   17750:	cmp	x0, x3
   17754:	b.cs	1776c <PyInit__decimal@@Base+0x67e4>  // b.hs, b.nlast
   17758:	ldr	x1, [x1, #80]
   1775c:	cmp	x0, x1
   17760:	cset	w1, cs  // cs = hs, nlast
   17764:	add	w1, w1, #0xa
   17768:	b	176d8 <PyInit__decimal@@Base+0x6750>
   1776c:	ldr	x3, [x1, #104]
   17770:	cmp	x0, x3
   17774:	b.cs	177e8 <PyInit__decimal@@Base+0x6860>  // b.hs, b.nlast
   17778:	ldr	x1, [x1, #96]
   1777c:	cmp	x0, x1
   17780:	cset	w1, cs  // cs = hs, nlast
   17784:	add	w1, w1, #0xc
   17788:	b	176d8 <PyInit__decimal@@Base+0x6750>
   1778c:	ldr	x3, [x1, #144]
   17790:	cmp	x0, x3
   17794:	b.cs	177cc <PyInit__decimal@@Base+0x6844>  // b.hs, b.nlast
   17798:	ldr	x3, [x1, #128]
   1779c:	cmp	x0, x3
   177a0:	b.cs	177b8 <PyInit__decimal@@Base+0x6830>  // b.hs, b.nlast
   177a4:	ldr	x1, [x1, #120]
   177a8:	cmp	x0, x1
   177ac:	cset	w1, cs  // cs = hs, nlast
   177b0:	add	w1, w1, #0xf
   177b4:	b	176d8 <PyInit__decimal@@Base+0x6750>
   177b8:	ldr	x1, [x1, #136]
   177bc:	cmp	x0, x1
   177c0:	cset	w1, cs  // cs = hs, nlast
   177c4:	add	w1, w1, #0x11
   177c8:	b	176d8 <PyInit__decimal@@Base+0x6750>
   177cc:	ldr	x1, [x1, #152]
   177d0:	cmp	x0, x1
   177d4:	cset	w1, cs  // cs = hs, nlast
   177d8:	add	w1, w1, #0x13
   177dc:	b	176d8 <PyInit__decimal@@Base+0x6750>
   177e0:	mov	w1, #0x9                   	// #9
   177e4:	b	176d8 <PyInit__decimal@@Base+0x6750>
   177e8:	mov	w1, #0xe                   	// #14
   177ec:	b	176d8 <PyInit__decimal@@Base+0x6750>
   177f0:	mov	x1, #0xa                   	// #10
   177f4:	udiv	x2, x0, x1
   177f8:	msub	x0, x2, x1, x0
   177fc:	ret
   17800:	mov	x1, #0x13                  	// #19
   17804:	mov	x2, x0
   17808:	sdiv	x0, x0, x1
   1780c:	msub	x1, x0, x1, x2
   17810:	cbz	x1, 17818 <PyInit__decimal@@Base+0x6890>
   17814:	add	x0, x0, #0x1
   17818:	ret
   1781c:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   17820:	add	x1, x1, #0xae8
   17824:	cmp	x0, #0x0
   17828:	cneg	x0, x0, lt  // lt = tstop
   1782c:	ldr	x2, [x1, #72]
   17830:	cmp	x0, x2
   17834:	b.cs	178b8 <PyInit__decimal@@Base+0x6930>  // b.hs, b.nlast
   17838:	ldr	x2, [x1, #32]
   1783c:	cmp	x0, x2
   17840:	b.cs	17878 <PyInit__decimal@@Base+0x68f0>  // b.hs, b.nlast
   17844:	ldr	x2, [x1, #16]
   17848:	cmp	x0, x2
   1784c:	b.cs	17864 <PyInit__decimal@@Base+0x68dc>  // b.hs, b.nlast
   17850:	ldr	x1, [x1, #8]
   17854:	cmp	x0, x1
   17858:	cset	w0, cs  // cs = hs, nlast
   1785c:	add	w0, w0, #0x1
   17860:	ret
   17864:	ldr	x1, [x1, #24]
   17868:	cmp	x0, x1
   1786c:	cset	w0, cs  // cs = hs, nlast
   17870:	add	w0, w0, #0x3
   17874:	b	17860 <PyInit__decimal@@Base+0x68d8>
   17878:	ldr	x2, [x1, #48]
   1787c:	cmp	x0, x2
   17880:	b.cs	17898 <PyInit__decimal@@Base+0x6910>  // b.hs, b.nlast
   17884:	ldr	x1, [x1, #40]
   17888:	cmp	x0, x1
   1788c:	cset	w0, cs  // cs = hs, nlast
   17890:	add	w0, w0, #0x5
   17894:	b	17860 <PyInit__decimal@@Base+0x68d8>
   17898:	ldr	x2, [x1, #64]
   1789c:	cmp	x0, x2
   178a0:	b.cs	17958 <PyInit__decimal@@Base+0x69d0>  // b.hs, b.nlast
   178a4:	ldr	x1, [x1, #56]
   178a8:	cmp	x0, x1
   178ac:	cset	w0, cs  // cs = hs, nlast
   178b0:	add	w0, w0, #0x7
   178b4:	b	17860 <PyInit__decimal@@Base+0x68d8>
   178b8:	ldr	x2, [x1, #112]
   178bc:	cmp	x0, x2
   178c0:	b.cs	17904 <PyInit__decimal@@Base+0x697c>  // b.hs, b.nlast
   178c4:	ldr	x2, [x1, #88]
   178c8:	cmp	x0, x2
   178cc:	b.cs	178e4 <PyInit__decimal@@Base+0x695c>  // b.hs, b.nlast
   178d0:	ldr	x1, [x1, #80]
   178d4:	cmp	x0, x1
   178d8:	cset	w0, cs  // cs = hs, nlast
   178dc:	add	w0, w0, #0xa
   178e0:	b	17860 <PyInit__decimal@@Base+0x68d8>
   178e4:	ldr	x2, [x1, #104]
   178e8:	cmp	x0, x2
   178ec:	b.cs	17960 <PyInit__decimal@@Base+0x69d8>  // b.hs, b.nlast
   178f0:	ldr	x1, [x1, #96]
   178f4:	cmp	x0, x1
   178f8:	cset	w0, cs  // cs = hs, nlast
   178fc:	add	w0, w0, #0xc
   17900:	b	17860 <PyInit__decimal@@Base+0x68d8>
   17904:	ldr	x2, [x1, #144]
   17908:	cmp	x0, x2
   1790c:	b.cs	17944 <PyInit__decimal@@Base+0x69bc>  // b.hs, b.nlast
   17910:	ldr	x2, [x1, #128]
   17914:	cmp	x0, x2
   17918:	b.cs	17930 <PyInit__decimal@@Base+0x69a8>  // b.hs, b.nlast
   1791c:	ldr	x1, [x1, #120]
   17920:	cmp	x0, x1
   17924:	cset	w0, cs  // cs = hs, nlast
   17928:	add	w0, w0, #0xf
   1792c:	b	17860 <PyInit__decimal@@Base+0x68d8>
   17930:	ldr	x1, [x1, #136]
   17934:	cmp	x0, x1
   17938:	cset	w0, cs  // cs = hs, nlast
   1793c:	add	w0, w0, #0x11
   17940:	b	17860 <PyInit__decimal@@Base+0x68d8>
   17944:	ldr	x1, [x1, #152]
   17948:	cmp	x0, x1
   1794c:	cset	w0, cs  // cs = hs, nlast
   17950:	add	w0, w0, #0x13
   17954:	b	17860 <PyInit__decimal@@Base+0x68d8>
   17958:	mov	w0, #0x9                   	// #9
   1795c:	b	17860 <PyInit__decimal@@Base+0x68d8>
   17960:	mov	w0, #0xe                   	// #14
   17964:	b	17860 <PyInit__decimal@@Base+0x68d8>
   17968:	mov	w0, #0x1                   	// #1
   1796c:	ret
   17970:	ldrb	w0, [x0]
   17974:	tst	w0, #0xe
   17978:	cset	w0, eq  // eq = none
   1797c:	ret
   17980:	ldrb	w0, [x0]
   17984:	and	w0, w0, #0x2
   17988:	ret
   1798c:	ldrb	w0, [x0]
   17990:	and	w0, w0, #0xc
   17994:	ret
   17998:	ldrb	w0, [x0]
   1799c:	and	w0, w0, #0x1
   179a0:	ret
   179a4:	ldrb	w0, [x0]
   179a8:	mvn	w0, w0
   179ac:	and	w0, w0, #0x1
   179b0:	ret
   179b4:	ldrb	w0, [x0]
   179b8:	and	w0, w0, #0x4
   179bc:	ret
   179c0:	ldrb	w0, [x0]
   179c4:	and	w0, w0, #0x1
   179c8:	ret
   179cc:	ldrb	w0, [x0]
   179d0:	and	w0, w0, #0x8
   179d4:	ret
   179d8:	ldrb	w0, [x0]
   179dc:	and	w0, w0, #0xe
   179e0:	ret
   179e4:	ldrb	w1, [x0]
   179e8:	tst	w1, #0xe
   179ec:	b.ne	17a0c <PyInit__decimal@@Base+0x6a84>  // b.any
   179f0:	ldr	x1, [x0, #24]
   179f4:	ldr	x0, [x0, #40]
   179f8:	add	x0, x0, x1, lsl #3
   179fc:	ldur	x0, [x0, #-8]
   17a00:	cmp	x0, #0x0
   17a04:	cset	w0, eq  // eq = none
   17a08:	ret
   17a0c:	mov	w0, #0x0                   	// #0
   17a10:	b	17a08 <PyInit__decimal@@Base+0x6a80>
   17a14:	ldr	x1, [x0, #24]
   17a18:	ldr	x0, [x0, #40]
   17a1c:	add	x0, x0, x1, lsl #3
   17a20:	ldur	x0, [x0, #-8]
   17a24:	cmp	x0, #0x0
   17a28:	cset	w0, eq  // eq = none
   17a2c:	ret
   17a30:	ldrb	w2, [x0]
   17a34:	tst	w2, #0xe
   17a38:	b.ne	17a6c <PyInit__decimal@@Base+0x6ae4>  // b.any
   17a3c:	ldr	x2, [x0, #24]
   17a40:	ldr	x3, [x0, #40]
   17a44:	add	x2, x3, x2, lsl #3
   17a48:	ldur	x2, [x2, #-8]
   17a4c:	cbz	x2, 17a6c <PyInit__decimal@@Base+0x6ae4>
   17a50:	ldp	x2, x0, [x0, #8]
   17a54:	ldr	x1, [x1, #16]
   17a58:	add	x0, x2, x0
   17a5c:	sub	x0, x0, #0x1
   17a60:	cmp	x0, x1
   17a64:	cset	w0, ge  // ge = tcont
   17a68:	ret
   17a6c:	mov	w0, #0x0                   	// #0
   17a70:	b	17a68 <PyInit__decimal@@Base+0x6ae0>
   17a74:	ldrb	w2, [x0]
   17a78:	tst	w2, #0xe
   17a7c:	b.ne	17ab0 <PyInit__decimal@@Base+0x6b28>  // b.any
   17a80:	ldr	x2, [x0, #24]
   17a84:	ldr	x3, [x0, #40]
   17a88:	add	x2, x3, x2, lsl #3
   17a8c:	ldur	x2, [x2, #-8]
   17a90:	cbz	x2, 17ab0 <PyInit__decimal@@Base+0x6b28>
   17a94:	ldp	x2, x0, [x0, #8]
   17a98:	ldr	x1, [x1, #16]
   17a9c:	add	x0, x2, x0
   17aa0:	sub	x0, x0, #0x1
   17aa4:	cmp	x0, x1
   17aa8:	cset	w0, lt  // lt = tstop
   17aac:	ret
   17ab0:	mov	w0, #0x0                   	// #0
   17ab4:	b	17aac <PyInit__decimal@@Base+0x6b24>
   17ab8:	and	w0, w0, #0x1
   17abc:	ret
   17ac0:	ldr	x0, [x0, #40]
   17ac4:	ldr	x0, [x0]
   17ac8:	and	w0, w0, #0x1
   17acc:	ret
   17ad0:	ldrb	w0, [x0]
   17ad4:	and	w0, w0, #0x1
   17ad8:	ret
   17adc:	ldrb	w0, [x0]
   17ae0:	mov	w1, #0xfffffffe            	// #-2
   17ae4:	and	w0, w0, #0x1
   17ae8:	mul	w0, w0, w1
   17aec:	add	w0, w0, #0x1
   17af0:	ret
   17af4:	mov	x0, #0xa                   	// #10
   17af8:	ret
   17afc:	ldrb	w0, [x0]
   17b00:	eor	x0, x0, #0x10
   17b04:	ubfx	w0, w0, #4, #1
   17b08:	ret
   17b0c:	ldrb	w0, [x0]
   17b10:	and	w0, w0, #0x10
   17b14:	ret
   17b18:	ldrb	w0, [x0]
   17b1c:	tst	w0, #0xe0
   17b20:	cset	w0, eq  // eq = none
   17b24:	ret
   17b28:	ldrb	w0, [x0]
   17b2c:	and	w0, w0, #0x20
   17b30:	ret
   17b34:	ldrb	w0, [x0]
   17b38:	and	w0, w0, #0x40
   17b3c:	ret
   17b40:	ldrb	w0, [x0]
   17b44:	and	w0, w0, #0x80
   17b48:	ret
   17b4c:	mov	x2, #0x0                   	// #0
   17b50:	cmp	x2, x1
   17b54:	b.ne	17b5c <PyInit__decimal@@Base+0x6bd4>  // b.any
   17b58:	ret
   17b5c:	str	xzr, [x0, x2, lsl #3]
   17b60:	add	x2, x2, #0x1
   17b64:	b	17b50 <PyInit__decimal@@Base+0x6bc8>
   17b68:	stp	x29, x30, [sp, #-32]!
   17b6c:	mov	x29, sp
   17b70:	str	x19, [sp, #16]
   17b74:	mov	x19, x0
   17b78:	ldrb	w0, [x0]
   17b7c:	tst	w0, #0xe0
   17b80:	b.ne	17b94 <PyInit__decimal@@Base+0x6c0c>  // b.any
   17b84:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   17b88:	ldr	x1, [x0, #1720]
   17b8c:	ldr	x0, [x19, #40]
   17b90:	blr	x1
   17b94:	ldrb	w0, [x19]
   17b98:	tbnz	w0, #4, 17bb8 <PyInit__decimal@@Base+0x6c30>
   17b9c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   17ba0:	ldr	x1, [x0, #1720]
   17ba4:	mov	x0, x19
   17ba8:	ldr	x19, [sp, #16]
   17bac:	mov	x16, x1
   17bb0:	ldp	x29, x30, [sp], #32
   17bb4:	br	x16
   17bb8:	ldr	x19, [sp, #16]
   17bbc:	ldp	x29, x30, [sp], #32
   17bc0:	ret
   17bc4:	adrp	x3, 45000 <PyInit__decimal@@Base+0x34078>
   17bc8:	ldr	x3, [x3, #1688]
   17bcc:	cmp	x3, x1
   17bd0:	csel	x1, x3, x1, ge  // ge = tcont
   17bd4:	ldr	x3, [x0, #32]
   17bd8:	cmp	x3, x1
   17bdc:	b.eq	17bf8 <PyInit__decimal@@Base+0x6c70>  // b.none
   17be0:	ldrb	w4, [x0]
   17be4:	tbz	w4, #5, 17bf4 <PyInit__decimal@@Base+0x6c6c>
   17be8:	cmp	x3, x1
   17bec:	b.ge	17bf8 <PyInit__decimal@@Base+0x6c70>  // b.tcont
   17bf0:	b	15e50 <PyInit__decimal@@Base+0x4ec8>
   17bf4:	b	15f68 <PyInit__decimal@@Base+0x4fe0>
   17bf8:	mov	w0, #0x1                   	// #1
   17bfc:	ret
   17c00:	stp	x29, x30, [sp, #-32]!
   17c04:	adrp	x3, 45000 <PyInit__decimal@@Base+0x34078>
   17c08:	mov	x29, sp
   17c0c:	stp	x19, x20, [sp, #16]
   17c10:	mov	x20, x0
   17c14:	ldr	x19, [x3, #1688]
   17c18:	cmp	x19, x1
   17c1c:	csel	x19, x19, x1, ge  // ge = tcont
   17c20:	ldr	x1, [x0, #32]
   17c24:	cmp	x1, x19
   17c28:	b.ne	17c44 <PyInit__decimal@@Base+0x6cbc>  // b.any
   17c2c:	ldr	x1, [x20, #40]
   17c30:	mov	x0, #0x0                   	// #0
   17c34:	cmp	x19, x0
   17c38:	b.ne	17c7c <PyInit__decimal@@Base+0x6cf4>  // b.any
   17c3c:	mov	w0, #0x1                   	// #1
   17c40:	b	17c70 <PyInit__decimal@@Base+0x6ce8>
   17c44:	ldrb	w3, [x0]
   17c48:	tbz	w3, #5, 17c64 <PyInit__decimal@@Base+0x6cdc>
   17c4c:	cmp	x1, x19
   17c50:	b.ge	17c2c <PyInit__decimal@@Base+0x6ca4>  // b.tcont
   17c54:	mov	x1, x19
   17c58:	ldp	x19, x20, [sp, #16]
   17c5c:	ldp	x29, x30, [sp], #32
   17c60:	b	15ee4 <PyInit__decimal@@Base+0x4f5c>
   17c64:	mov	x1, x19
   17c68:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   17c6c:	cbnz	w0, 17c2c <PyInit__decimal@@Base+0x6ca4>
   17c70:	ldp	x19, x20, [sp, #16]
   17c74:	ldp	x29, x30, [sp], #32
   17c78:	ret
   17c7c:	str	xzr, [x1, x0, lsl #3]
   17c80:	add	x0, x0, #0x1
   17c84:	b	17c34 <PyInit__decimal@@Base+0x6cac>
   17c88:	stp	x29, x30, [sp, #-48]!
   17c8c:	mov	x29, sp
   17c90:	stp	x19, x20, [sp, #16]
   17c94:	mov	x19, x0
   17c98:	ldrb	w0, [x0]
   17c9c:	tbnz	w0, #5, 17cdc <PyInit__decimal@@Base+0x6d54>
   17ca0:	adrp	x20, 45000 <PyInit__decimal@@Base+0x34078>
   17ca4:	ldr	x0, [x19, #32]
   17ca8:	ldr	x1, [x20, #1688]
   17cac:	cmp	x0, x1
   17cb0:	b.le	17cdc <PyInit__decimal@@Base+0x6d54>
   17cb4:	ldr	x0, [x19, #40]
   17cb8:	add	x3, sp, #0x2f
   17cbc:	mov	x2, #0x8                   	// #8
   17cc0:	strb	wzr, [sp, #47]
   17cc4:	bl	15d18 <PyInit__decimal@@Base+0x4d90>
   17cc8:	str	x0, [x19, #40]
   17ccc:	ldrb	w0, [sp, #47]
   17cd0:	cbnz	w0, 17cdc <PyInit__decimal@@Base+0x6d54>
   17cd4:	ldr	x0, [x20, #1688]
   17cd8:	str	x0, [x19, #32]
   17cdc:	ldp	x19, x20, [sp, #16]
   17ce0:	ldp	x29, x30, [sp], #48
   17ce4:	ret
   17ce8:	stp	x29, x30, [sp, #-48]!
   17cec:	mov	x29, sp
   17cf0:	stp	x19, x20, [sp, #16]
   17cf4:	mov	x20, x2
   17cf8:	adrp	x2, 45000 <PyInit__decimal@@Base+0x34078>
   17cfc:	str	wzr, [sp, #44]
   17d00:	ldr	x3, [x2, #1688]
   17d04:	ldr	x2, [x0, #32]
   17d08:	cmp	x3, x1
   17d0c:	csel	x1, x3, x1, ge  // ge = tcont
   17d10:	cmp	x1, x2
   17d14:	b.ne	17d2c <PyInit__decimal@@Base+0x6da4>  // b.any
   17d18:	mov	w19, #0x1                   	// #1
   17d1c:	mov	w0, w19
   17d20:	ldp	x19, x20, [sp, #16]
   17d24:	ldp	x29, x30, [sp], #48
   17d28:	ret
   17d2c:	ldrb	w3, [x0]
   17d30:	tbz	w3, #5, 17d5c <PyInit__decimal@@Base+0x6dd4>
   17d34:	cmp	x1, x2
   17d38:	b.le	17d18 <PyInit__decimal@@Base+0x6d90>
   17d3c:	add	x2, sp, #0x2c
   17d40:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   17d44:	mov	w19, w0
   17d48:	cbnz	w0, 17d18 <PyInit__decimal@@Base+0x6d90>
   17d4c:	ldr	w1, [sp, #44]
   17d50:	mov	x0, x20
   17d54:	bl	12b18 <PyInit__decimal@@Base+0x1b90>
   17d58:	b	17d1c <PyInit__decimal@@Base+0x6d94>
   17d5c:	add	x2, sp, #0x2c
   17d60:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   17d64:	b	17d44 <PyInit__decimal@@Base+0x6dbc>
   17d68:	stp	x29, x30, [sp, #-64]!
   17d6c:	mov	x29, sp
   17d70:	str	x21, [sp, #32]
   17d74:	mov	x21, x2
   17d78:	adrp	x2, 45000 <PyInit__decimal@@Base+0x34078>
   17d7c:	stp	x19, x20, [sp, #16]
   17d80:	mov	x20, x0
   17d84:	ldr	x19, [x2, #1688]
   17d88:	str	wzr, [sp, #60]
   17d8c:	cmp	x19, x1
   17d90:	csel	x19, x19, x1, ge  // ge = tcont
   17d94:	ldr	x1, [x0, #32]
   17d98:	cmp	x19, x1
   17d9c:	b.ne	17dbc <PyInit__decimal@@Base+0x6e34>  // b.any
   17da0:	ldr	x1, [x20, #40]
   17da4:	mov	x0, #0x0                   	// #0
   17da8:	cmp	x19, x0
   17dac:	b.eq	17ddc <PyInit__decimal@@Base+0x6e54>  // b.none
   17db0:	str	xzr, [x1, x0, lsl #3]
   17db4:	add	x0, x0, #0x1
   17db8:	b	17da8 <PyInit__decimal@@Base+0x6e20>
   17dbc:	ldrb	w2, [x0]
   17dc0:	tbz	w2, #5, 17df0 <PyInit__decimal@@Base+0x6e68>
   17dc4:	cmp	x19, x1
   17dc8:	b.le	17da0 <PyInit__decimal@@Base+0x6e18>
   17dcc:	add	x2, sp, #0x3c
   17dd0:	mov	x1, x19
   17dd4:	bl	15ee4 <PyInit__decimal@@Base+0x4f5c>
   17dd8:	cbz	w0, 17e00 <PyInit__decimal@@Base+0x6e78>
   17ddc:	mov	w0, #0x1                   	// #1
   17de0:	ldp	x19, x20, [sp, #16]
   17de4:	ldr	x21, [sp, #32]
   17de8:	ldp	x29, x30, [sp], #64
   17dec:	ret
   17df0:	add	x2, sp, #0x3c
   17df4:	mov	x1, x19
   17df8:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   17dfc:	cbnz	w0, 17da0 <PyInit__decimal@@Base+0x6e18>
   17e00:	ldr	w1, [sp, #60]
   17e04:	mov	x0, x21
   17e08:	bl	12b18 <PyInit__decimal@@Base+0x1b90>
   17e0c:	mov	w0, #0x0                   	// #0
   17e10:	b	17de0 <PyInit__decimal@@Base+0x6e58>
   17e14:	ldr	x4, [x0, #24]
   17e18:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   17e1c:	ldr	x1, [x0, #40]
   17e20:	add	x2, x2, #0xae8
   17e24:	add	x1, x1, x4, lsl #3
   17e28:	ldur	x3, [x1, #-8]
   17e2c:	ldr	x1, [x2, #72]
   17e30:	cmp	x1, x3
   17e34:	b.ls	17ecc <PyInit__decimal@@Base+0x6f44>  // b.plast
   17e38:	ldr	x1, [x2, #32]
   17e3c:	cmp	x1, x3
   17e40:	b.ls	17e8c <PyInit__decimal@@Base+0x6f04>  // b.plast
   17e44:	ldr	x1, [x2, #16]
   17e48:	cmp	x1, x3
   17e4c:	b.ls	17e78 <PyInit__decimal@@Base+0x6ef0>  // b.plast
   17e50:	ldr	x1, [x2, #8]
   17e54:	cmp	x1, x3
   17e58:	cset	w1, ls  // ls = plast
   17e5c:	add	w1, w1, #0x1
   17e60:	sub	x4, x4, #0x1
   17e64:	sxtw	x1, w1
   17e68:	mov	x2, #0x13                  	// #19
   17e6c:	madd	x1, x4, x2, x1
   17e70:	str	x1, [x0, #16]
   17e74:	ret
   17e78:	ldr	x1, [x2, #24]
   17e7c:	cmp	x1, x3
   17e80:	cset	w1, ls  // ls = plast
   17e84:	add	w1, w1, #0x3
   17e88:	b	17e60 <PyInit__decimal@@Base+0x6ed8>
   17e8c:	ldr	x1, [x2, #48]
   17e90:	cmp	x1, x3
   17e94:	b.ls	17eac <PyInit__decimal@@Base+0x6f24>  // b.plast
   17e98:	ldr	x1, [x2, #40]
   17e9c:	cmp	x1, x3
   17ea0:	cset	w1, ls  // ls = plast
   17ea4:	add	w1, w1, #0x5
   17ea8:	b	17e60 <PyInit__decimal@@Base+0x6ed8>
   17eac:	ldr	x1, [x2, #64]
   17eb0:	cmp	x1, x3
   17eb4:	b.ls	17f6c <PyInit__decimal@@Base+0x6fe4>  // b.plast
   17eb8:	ldr	x1, [x2, #56]
   17ebc:	cmp	x1, x3
   17ec0:	cset	w1, ls  // ls = plast
   17ec4:	add	w1, w1, #0x7
   17ec8:	b	17e60 <PyInit__decimal@@Base+0x6ed8>
   17ecc:	ldr	x1, [x2, #112]
   17ed0:	cmp	x1, x3
   17ed4:	b.ls	17f18 <PyInit__decimal@@Base+0x6f90>  // b.plast
   17ed8:	ldr	x1, [x2, #88]
   17edc:	cmp	x1, x3
   17ee0:	b.ls	17ef8 <PyInit__decimal@@Base+0x6f70>  // b.plast
   17ee4:	ldr	x1, [x2, #80]
   17ee8:	cmp	x1, x3
   17eec:	cset	w1, ls  // ls = plast
   17ef0:	add	w1, w1, #0xa
   17ef4:	b	17e60 <PyInit__decimal@@Base+0x6ed8>
   17ef8:	ldr	x1, [x2, #104]
   17efc:	cmp	x1, x3
   17f00:	b.ls	17f74 <PyInit__decimal@@Base+0x6fec>  // b.plast
   17f04:	ldr	x1, [x2, #96]
   17f08:	cmp	x1, x3
   17f0c:	cset	w1, ls  // ls = plast
   17f10:	add	w1, w1, #0xc
   17f14:	b	17e60 <PyInit__decimal@@Base+0x6ed8>
   17f18:	ldr	x1, [x2, #144]
   17f1c:	cmp	x1, x3
   17f20:	b.ls	17f58 <PyInit__decimal@@Base+0x6fd0>  // b.plast
   17f24:	ldr	x1, [x2, #128]
   17f28:	cmp	x1, x3
   17f2c:	b.ls	17f44 <PyInit__decimal@@Base+0x6fbc>  // b.plast
   17f30:	ldr	x1, [x2, #120]
   17f34:	cmp	x1, x3
   17f38:	cset	w1, ls  // ls = plast
   17f3c:	add	w1, w1, #0xf
   17f40:	b	17e60 <PyInit__decimal@@Base+0x6ed8>
   17f44:	ldr	x1, [x2, #136]
   17f48:	cmp	x1, x3
   17f4c:	cset	w1, ls  // ls = plast
   17f50:	add	w1, w1, #0x11
   17f54:	b	17e60 <PyInit__decimal@@Base+0x6ed8>
   17f58:	ldr	x1, [x2, #152]
   17f5c:	cmp	x1, x3
   17f60:	cset	w1, ls  // ls = plast
   17f64:	add	w1, w1, #0x13
   17f68:	b	17e60 <PyInit__decimal@@Base+0x6ed8>
   17f6c:	mov	w1, #0x9                   	// #9
   17f70:	b	17e60 <PyInit__decimal@@Base+0x6ed8>
   17f74:	mov	w1, #0xe                   	// #14
   17f78:	b	17e60 <PyInit__decimal@@Base+0x6ed8>
   17f7c:	stp	x29, x30, [sp, #-48]!
   17f80:	mov	x29, sp
   17f84:	stp	x19, x20, [sp, #16]
   17f88:	mov	x19, x0
   17f8c:	ldr	x0, [x0, #24]
   17f90:	cmp	x0, #0x0
   17f94:	b.le	17ffc <PyInit__decimal@@Base+0x7074>
   17f98:	ldr	x0, [x1]
   17f9c:	ldrsw	x2, [x1, #40]
   17fa0:	ldr	x1, [x19, #16]
   17fa4:	sub	x0, x0, x2
   17fa8:	cmp	x1, x0
   17fac:	b.le	17ffc <PyInit__decimal@@Base+0x7074>
   17fb0:	cbnz	x0, 18008 <PyInit__decimal@@Base+0x7080>
   17fb4:	ldrb	w0, [x19]
   17fb8:	tbnz	w0, #5, 17ff8 <PyInit__decimal@@Base+0x7070>
   17fbc:	adrp	x20, 45000 <PyInit__decimal@@Base+0x34078>
   17fc0:	ldr	x0, [x19, #32]
   17fc4:	ldr	x1, [x20, #1688]
   17fc8:	cmp	x0, x1
   17fcc:	b.le	17ff8 <PyInit__decimal@@Base+0x7070>
   17fd0:	ldr	x0, [x19, #40]
   17fd4:	add	x3, sp, #0x2c
   17fd8:	mov	x2, #0x8                   	// #8
   17fdc:	strb	wzr, [sp, #44]
   17fe0:	bl	15d18 <PyInit__decimal@@Base+0x4d90>
   17fe4:	str	x0, [x19, #40]
   17fe8:	ldrb	w0, [sp, #44]
   17fec:	cbnz	w0, 17ff8 <PyInit__decimal@@Base+0x7070>
   17ff0:	ldr	x0, [x20, #1688]
   17ff4:	str	x0, [x19, #32]
   17ff8:	stp	xzr, xzr, [x19, #16]
   17ffc:	ldp	x19, x20, [sp, #16]
   18000:	ldp	x29, x30, [sp], #48
   18004:	ret
   18008:	mov	x2, #0x13                  	// #19
   1800c:	sdiv	x1, x0, x2
   18010:	msub	x2, x1, x2, x0
   18014:	ldr	x0, [x19, #40]
   18018:	cbz	x2, 18044 <PyInit__decimal@@Base+0x70bc>
   1801c:	add	x1, x1, #0x1
   18020:	adrp	x4, 2a000 <PyInit__decimal@@Base+0x19078>
   18024:	add	x4, x4, #0xae8
   18028:	lsl	x3, x1, #3
   1802c:	sub	x3, x3, #0x8
   18030:	ldr	x4, [x4, x2, lsl #3]
   18034:	ldr	x5, [x0, x3]
   18038:	udiv	x2, x5, x4
   1803c:	msub	x2, x2, x4, x5
   18040:	str	x2, [x0, x3]
   18044:	bl	161c8 <PyInit__decimal@@Base+0x5240>
   18048:	mov	x20, x0
   1804c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   18050:	ldr	x1, [x0, #1688]
   18054:	ldr	x0, [x19, #32]
   18058:	cmp	x1, x20
   1805c:	csel	x1, x1, x20, ge  // ge = tcont
   18060:	cmp	x1, x0
   18064:	b.eq	18084 <PyInit__decimal@@Base+0x70fc>  // b.none
   18068:	ldrb	w2, [x19]
   1806c:	tbz	w2, #5, 180a8 <PyInit__decimal@@Base+0x7120>
   18070:	cmp	x1, x0
   18074:	b.le	18084 <PyInit__decimal@@Base+0x70fc>
   18078:	add	x2, sp, #0x2c
   1807c:	mov	x0, x19
   18080:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   18084:	str	x20, [x19, #24]
   18088:	mov	x0, x19
   1808c:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   18090:	ldr	x0, [x19, #24]
   18094:	ldr	x1, [x19, #40]
   18098:	add	x0, x1, x0, lsl #3
   1809c:	ldur	x0, [x0, #-8]
   180a0:	cbz	x0, 17ff8 <PyInit__decimal@@Base+0x7070>
   180a4:	b	17ffc <PyInit__decimal@@Base+0x7074>
   180a8:	add	x2, sp, #0x2c
   180ac:	mov	x0, x19
   180b0:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   180b4:	b	18084 <PyInit__decimal@@Base+0x70fc>
   180b8:	stp	x29, x30, [sp, #-32]!
   180bc:	mov	x29, sp
   180c0:	ldr	w2, [x2, #36]
   180c4:	stp	x19, x20, [sp, #16]
   180c8:	mov	x19, x0
   180cc:	mov	x20, x3
   180d0:	bl	173a0 <PyInit__decimal@@Base+0x6418>
   180d4:	cbz	w0, 18158 <PyInit__decimal@@Base+0x71d0>
   180d8:	ldr	x1, [x19, #24]
   180dc:	ldr	x0, [x19, #40]
   180e0:	bl	11d38 <PyInit__decimal@@Base+0xdb0>
   180e4:	cbz	x0, 18128 <PyInit__decimal@@Base+0x71a0>
   180e8:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   180ec:	ldr	x1, [x19, #24]
   180f0:	ldr	x0, [x0, #1688]
   180f4:	add	x1, x1, #0x1
   180f8:	cmp	x1, x0
   180fc:	csel	x1, x1, x0, ge  // ge = tcont
   18100:	ldr	x0, [x19, #32]
   18104:	cmp	x1, x0
   18108:	b.ne	18138 <PyInit__decimal@@Base+0x71b0>  // b.any
   1810c:	ldr	x1, [x19, #24]
   18110:	mov	x2, #0x1                   	// #1
   18114:	ldr	x0, [x19, #40]
   18118:	str	x2, [x0, x1, lsl #3]
   1811c:	ldr	x0, [x19, #24]
   18120:	add	x0, x0, x2
   18124:	str	x0, [x19, #24]
   18128:	mov	x0, x19
   1812c:	ldp	x19, x20, [sp, #16]
   18130:	ldp	x29, x30, [sp], #32
   18134:	b	17e14 <PyInit__decimal@@Base+0x6e8c>
   18138:	ldrb	w2, [x19]
   1813c:	tbz	w2, #5, 18164 <PyInit__decimal@@Base+0x71dc>
   18140:	cmp	x1, x0
   18144:	b.le	1810c <PyInit__decimal@@Base+0x7184>
   18148:	mov	x2, x20
   1814c:	mov	x0, x19
   18150:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   18154:	cbnz	w0, 1810c <PyInit__decimal@@Base+0x7184>
   18158:	ldp	x19, x20, [sp, #16]
   1815c:	ldp	x29, x30, [sp], #32
   18160:	ret
   18164:	mov	x2, x20
   18168:	mov	x0, x19
   1816c:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   18170:	b	18154 <PyInit__decimal@@Base+0x71cc>
   18174:	ldrb	w5, [x0]
   18178:	ldr	x6, [x0, #40]
   1817c:	and	w5, w5, #0xfffffff0
   18180:	orr	w1, w1, w5
   18184:	mov	x5, #0x89e80000            	// #2313682944
   18188:	movk	x5, #0x2304, lsl #32
   1818c:	strb	w1, [x0]
   18190:	movk	x5, #0x8ac7, lsl #48
   18194:	cmp	x2, x5
   18198:	cset	x1, cs  // cs = hs, nlast
   1819c:	str	x3, [x0, #8]
   181a0:	msub	x2, x1, x5, x2
   181a4:	stp	x2, x1, [x6]
   181a8:	add	x1, x1, #0x1
   181ac:	str	x1, [x0, #24]
   181b0:	b	17e14 <PyInit__decimal@@Base+0x6e8c>
   181b4:	stp	x29, x30, [sp, #-80]!
   181b8:	mov	x29, sp
   181bc:	stp	x19, x20, [sp, #16]
   181c0:	mov	x19, x0
   181c4:	mov	x20, x2
   181c8:	stp	x21, x22, [sp, #32]
   181cc:	and	w22, w1, #0xff
   181d0:	mov	x21, x3
   181d4:	str	x23, [sp, #48]
   181d8:	ldrb	w0, [x0]
   181dc:	tbnz	w0, #5, 1821c <PyInit__decimal@@Base+0x7294>
   181e0:	adrp	x23, 45000 <PyInit__decimal@@Base+0x34078>
   181e4:	ldr	x0, [x19, #32]
   181e8:	ldr	x1, [x23, #1688]
   181ec:	cmp	x0, x1
   181f0:	b.le	1821c <PyInit__decimal@@Base+0x7294>
   181f4:	ldr	x0, [x19, #40]
   181f8:	add	x3, sp, #0x4f
   181fc:	mov	x2, #0x8                   	// #8
   18200:	strb	wzr, [sp, #79]
   18204:	bl	15d18 <PyInit__decimal@@Base+0x4d90>
   18208:	str	x0, [x19, #40]
   1820c:	ldrb	w0, [sp, #79]
   18210:	cbnz	w0, 1821c <PyInit__decimal@@Base+0x7294>
   18214:	ldr	x0, [x23, #1688]
   18218:	str	x0, [x19, #32]
   1821c:	ldrb	w0, [x19]
   18220:	mov	x1, #0x89e80000            	// #2313682944
   18224:	movk	x1, #0x2304, lsl #32
   18228:	str	x21, [x19, #8]
   1822c:	and	w0, w0, #0xfffffff0
   18230:	movk	x1, #0x8ac7, lsl #48
   18234:	cmp	x20, x1
   18238:	orr	w22, w22, w0
   1823c:	cset	x0, cs  // cs = hs, nlast
   18240:	strb	w22, [x19]
   18244:	ldr	x2, [x19, #40]
   18248:	msub	x1, x0, x1, x20
   1824c:	stp	x1, x0, [x2]
   18250:	add	x0, x0, #0x1
   18254:	str	x0, [x19, #24]
   18258:	mov	x0, x19
   1825c:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   18260:	ldp	x19, x20, [sp, #16]
   18264:	ldp	x21, x22, [sp, #32]
   18268:	ldr	x23, [sp, #48]
   1826c:	ldp	x29, x30, [sp], #80
   18270:	ret
   18274:	stp	x29, x30, [sp, #-48]!
   18278:	mov	x29, sp
   1827c:	stp	x19, x20, [sp, #16]
   18280:	mov	x19, x0
   18284:	ldr	x0, [x0, #24]
   18288:	cmp	x0, #0x0
   1828c:	b.le	18328 <PyInit__decimal@@Base+0x73a0>
   18290:	ldr	x0, [x1]
   18294:	ldr	x1, [x19, #16]
   18298:	cmp	x1, x0
   1829c:	b.le	18328 <PyInit__decimal@@Base+0x73a0>
   182a0:	mov	x2, #0x13                  	// #19
   182a4:	sdiv	x1, x0, x2
   182a8:	msub	x2, x1, x2, x0
   182ac:	ldr	x0, [x19, #40]
   182b0:	cbz	x2, 182dc <PyInit__decimal@@Base+0x7354>
   182b4:	add	x1, x1, #0x1
   182b8:	adrp	x4, 2a000 <PyInit__decimal@@Base+0x19078>
   182bc:	add	x4, x4, #0xae8
   182c0:	lsl	x3, x1, #3
   182c4:	sub	x3, x3, #0x8
   182c8:	ldr	x4, [x4, x2, lsl #3]
   182cc:	ldr	x5, [x0, x3]
   182d0:	udiv	x2, x5, x4
   182d4:	msub	x2, x2, x4, x5
   182d8:	str	x2, [x0, x3]
   182dc:	bl	161c8 <PyInit__decimal@@Base+0x5240>
   182e0:	mov	x20, x0
   182e4:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   182e8:	ldr	x1, [x0, #1688]
   182ec:	ldr	x0, [x19, #32]
   182f0:	cmp	x1, x20
   182f4:	csel	x1, x1, x20, ge  // ge = tcont
   182f8:	cmp	x1, x0
   182fc:	b.eq	1831c <PyInit__decimal@@Base+0x7394>  // b.none
   18300:	ldrb	w2, [x19]
   18304:	tbz	w2, #5, 18368 <PyInit__decimal@@Base+0x73e0>
   18308:	cmp	x1, x0
   1830c:	b.le	1831c <PyInit__decimal@@Base+0x7394>
   18310:	add	x2, sp, #0x2c
   18314:	mov	x0, x19
   18318:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   1831c:	str	x20, [x19, #24]
   18320:	mov	x0, x19
   18324:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   18328:	ldrb	w1, [x19]
   1832c:	tst	w1, #0xe
   18330:	b.ne	1835c <PyInit__decimal@@Base+0x73d4>  // b.any
   18334:	ldr	x0, [x19, #24]
   18338:	ldr	x2, [x19, #40]
   1833c:	add	x0, x2, x0, lsl #3
   18340:	ldur	x0, [x0, #-8]
   18344:	cbnz	x0, 1835c <PyInit__decimal@@Base+0x73d4>
   18348:	ldr	x3, [x19, #8]
   1834c:	and	w1, w1, #0x1
   18350:	mov	x0, x19
   18354:	mov	x2, #0x0                   	// #0
   18358:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   1835c:	ldp	x19, x20, [sp, #16]
   18360:	ldp	x29, x30, [sp], #48
   18364:	ret
   18368:	add	x2, sp, #0x2c
   1836c:	mov	x0, x19
   18370:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   18374:	b	1831c <PyInit__decimal@@Base+0x7394>
   18378:	ldrb	w2, [x0]
   1837c:	and	w2, w2, #0xfffffffe
   18380:	orr	w1, w1, w2
   18384:	strb	w1, [x0]
   18388:	ret
   1838c:	ldrb	w2, [x0]
   18390:	ldrb	w1, [x1]
   18394:	bfxil	w2, w1, #0, #1
   18398:	strb	w2, [x0]
   1839c:	ret
   183a0:	ldrb	w1, [x0]
   183a4:	and	w1, w1, #0xfffffff1
   183a8:	orr	w1, w1, #0x2
   183ac:	strb	w1, [x0]
   183b0:	ret
   183b4:	ldrb	w1, [x0]
   183b8:	and	w1, w1, #0xfffffff1
   183bc:	orr	w1, w1, #0x4
   183c0:	strb	w1, [x0]
   183c4:	ret
   183c8:	ldrb	w1, [x0]
   183cc:	and	w1, w1, #0xfffffff1
   183d0:	orr	w1, w1, #0x8
   183d4:	strb	w1, [x0]
   183d8:	ret
   183dc:	ldrb	w1, [x0]
   183e0:	orr	w1, w1, #0x1
   183e4:	strb	w1, [x0]
   183e8:	ret
   183ec:	ldrb	w1, [x0]
   183f0:	and	w1, w1, #0xfffffffe
   183f4:	strb	w1, [x0]
   183f8:	ret
   183fc:	ldrb	w1, [x0]
   18400:	and	w1, w1, #0xffffffef
   18404:	strb	w1, [x0]
   18408:	ret
   1840c:	ldrb	w1, [x0]
   18410:	orr	w1, w1, #0x10
   18414:	strb	w1, [x0]
   18418:	ret
   1841c:	ldrb	w1, [x0]
   18420:	and	w1, w1, #0x1f
   18424:	strb	w1, [x0]
   18428:	ret
   1842c:	ldrb	w1, [x0]
   18430:	and	w1, w1, #0x1f
   18434:	orr	w1, w1, #0x20
   18438:	strb	w1, [x0]
   1843c:	ret
   18440:	ldrb	w1, [x0]
   18444:	and	w1, w1, #0x1f
   18448:	orr	w1, w1, #0x40
   1844c:	strb	w1, [x0]
   18450:	ret
   18454:	ldrb	w1, [x0]
   18458:	and	w1, w1, #0x1f
   1845c:	orr	w1, w1, #0xffffff80
   18460:	strb	w1, [x0]
   18464:	ret
   18468:	ldrb	w1, [x0]
   1846c:	and	w1, w1, #0xfffffff0
   18470:	strb	w1, [x0]
   18474:	ret
   18478:	ldrb	w2, [x0]
   1847c:	and	w2, w2, #0xfffffff0
   18480:	orr	w1, w1, w2
   18484:	strb	w1, [x0]
   18488:	ret
   1848c:	ldrb	w2, [x0]
   18490:	ldrb	w1, [x1]
   18494:	bfxil	w2, w1, #0, #4
   18498:	strb	w2, [x0]
   1849c:	ret
   184a0:	stp	x29, x30, [sp, #-48]!
   184a4:	mov	x29, sp
   184a8:	stp	x19, x20, [sp, #16]
   184ac:	mov	x19, x0
   184b0:	ldrb	w0, [x0]
   184b4:	tbnz	w0, #5, 184f4 <PyInit__decimal@@Base+0x756c>
   184b8:	adrp	x20, 45000 <PyInit__decimal@@Base+0x34078>
   184bc:	ldr	x0, [x19, #32]
   184c0:	ldr	x1, [x20, #1688]
   184c4:	cmp	x0, x1
   184c8:	b.le	184f4 <PyInit__decimal@@Base+0x756c>
   184cc:	ldr	x0, [x19, #40]
   184d0:	add	x3, sp, #0x2f
   184d4:	mov	x2, #0x8                   	// #8
   184d8:	strb	wzr, [sp, #47]
   184dc:	bl	15d18 <PyInit__decimal@@Base+0x4d90>
   184e0:	str	x0, [x19, #40]
   184e4:	ldrb	w0, [sp, #47]
   184e8:	cbnz	w0, 184f4 <PyInit__decimal@@Base+0x756c>
   184ec:	ldr	x0, [x20, #1688]
   184f0:	str	x0, [x19, #32]
   184f4:	mov	x0, #0x1                   	// #1
   184f8:	stp	x0, x0, [x19, #16]
   184fc:	ldr	x0, [x19, #40]
   18500:	ldp	x19, x20, [sp, #16]
   18504:	str	xzr, [x0]
   18508:	ldp	x29, x30, [sp], #48
   1850c:	ret
   18510:	stp	x29, x30, [sp, #-48]!
   18514:	mov	x29, sp
   18518:	stp	x19, x20, [sp, #16]
   1851c:	mov	x19, x0
   18520:	ldr	x0, [x1]
   18524:	stp	x21, x22, [sp, #32]
   18528:	mov	x21, #0x13                  	// #19
   1852c:	mov	x22, x1
   18530:	sdiv	x20, x0, x21
   18534:	msub	x21, x20, x21, x0
   18538:	cbz	x21, 18540 <PyInit__decimal@@Base+0x75b8>
   1853c:	add	x20, x20, #0x1
   18540:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   18544:	ldr	x0, [x0, #1688]
   18548:	cmp	x0, x20
   1854c:	csel	x1, x0, x20, ge  // ge = tcont
   18550:	ldr	x0, [x19, #32]
   18554:	cmp	x1, x0
   18558:	b.ne	18590 <PyInit__decimal@@Base+0x7608>  // b.any
   1855c:	ldr	x0, [x22]
   18560:	stp	x0, x20, [x19, #16]
   18564:	cmp	x21, #0x0
   18568:	sub	x0, x20, #0x1
   1856c:	b.gt	185c8 <PyInit__decimal@@Base+0x7640>
   18570:	mov	x1, #0xffffffff89e7ffff    	// #-1981284353
   18574:	movk	x1, #0x2304, lsl #32
   18578:	movk	x1, #0x8ac7, lsl #48
   1857c:	tbnz	x0, #63, 185ac <PyInit__decimal@@Base+0x7624>
   18580:	ldr	x2, [x19, #40]
   18584:	str	x1, [x2, x0, lsl #3]
   18588:	sub	x0, x0, #0x1
   1858c:	b	1857c <PyInit__decimal@@Base+0x75f4>
   18590:	ldrb	w3, [x19]
   18594:	tbz	w3, #5, 185bc <PyInit__decimal@@Base+0x7634>
   18598:	cmp	x1, x0
   1859c:	b.le	1855c <PyInit__decimal@@Base+0x75d4>
   185a0:	mov	x0, x19
   185a4:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   185a8:	cbnz	w0, 1855c <PyInit__decimal@@Base+0x75d4>
   185ac:	ldp	x19, x20, [sp, #16]
   185b0:	ldp	x21, x22, [sp, #32]
   185b4:	ldp	x29, x30, [sp], #48
   185b8:	ret
   185bc:	mov	x0, x19
   185c0:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   185c4:	b	185a8 <PyInit__decimal@@Base+0x7620>
   185c8:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   185cc:	add	x1, x1, #0xae8
   185d0:	ldr	x2, [x19, #40]
   185d4:	ldr	x1, [x1, x21, lsl #3]
   185d8:	sub	x1, x1, #0x1
   185dc:	str	x1, [x2, x0, lsl #3]
   185e0:	sub	x0, x20, #0x2
   185e4:	b	18570 <PyInit__decimal@@Base+0x75e8>
   185e8:	ldr	x3, [x0, #24]
   185ec:	mov	x1, #0x0                   	// #0
   185f0:	cmp	x3, x1
   185f4:	b.gt	18600 <PyInit__decimal@@Base+0x7678>
   185f8:	mov	x0, #0x0                   	// #0
   185fc:	b	18624 <PyInit__decimal@@Base+0x769c>
   18600:	ldr	x2, [x0, #40]
   18604:	ldr	x2, [x2, x1, lsl #3]
   18608:	cbz	x2, 18634 <PyInit__decimal@@Base+0x76ac>
   1860c:	mov	x0, #0x13                  	// #19
   18610:	mul	x0, x1, x0
   18614:	mov	x1, #0xa                   	// #10
   18618:	udiv	x3, x2, x1
   1861c:	msub	x2, x3, x1, x2
   18620:	cbz	x2, 18628 <PyInit__decimal@@Base+0x76a0>
   18624:	ret
   18628:	mov	x2, x3
   1862c:	add	x0, x0, #0x1
   18630:	b	18618 <PyInit__decimal@@Base+0x7690>
   18634:	add	x1, x1, #0x1
   18638:	b	185f0 <PyInit__decimal@@Base+0x7668>
   1863c:	ldr	x1, [x0, #24]
   18640:	ldr	x2, [x0, #40]
   18644:	add	x1, x2, x1, lsl #3
   18648:	ldur	x1, [x1, #-8]
   1864c:	cbz	x1, 18678 <PyInit__decimal@@Base+0x76f0>
   18650:	mov	x4, x0
   18654:	stp	x29, x30, [sp, #-16]!
   18658:	mov	x29, sp
   1865c:	bl	185e8 <PyInit__decimal@@Base+0x7660>
   18660:	ldr	x1, [x4, #8]
   18664:	ldp	x29, x30, [sp], #16
   18668:	add	x0, x0, x1
   1866c:	mvn	x0, x0
   18670:	lsr	x0, x0, #63
   18674:	ret
   18678:	mov	w0, #0x1                   	// #1
   1867c:	ret
   18680:	stp	x29, x30, [sp, #-144]!
   18684:	mov	x29, sp
   18688:	stp	x21, x22, [sp, #32]
   1868c:	ldp	x5, x22, [x0, #8]
   18690:	stp	x19, x20, [sp, #16]
   18694:	mov	x20, x1
   18698:	str	x23, [sp, #48]
   1869c:	add	x6, x22, x5
   186a0:	cmp	x6, #0x14
   186a4:	b.le	186cc <PyInit__decimal@@Base+0x7744>
   186a8:	ldr	w0, [x20]
   186ac:	orr	w0, w0, #0x100
   186b0:	str	w0, [x20]
   186b4:	mov	x0, #0xffffffffffffffff    	// #-1
   186b8:	ldp	x19, x20, [sp, #16]
   186bc:	ldp	x21, x22, [sp, #32]
   186c0:	ldr	x23, [sp, #48]
   186c4:	ldp	x29, x30, [sp], #144
   186c8:	ret
   186cc:	mov	x19, x0
   186d0:	tbz	x5, #63, 18730 <PyInit__decimal@@Base+0x77a8>
   186d4:	bl	1863c <PyInit__decimal@@Base+0x76b4>
   186d8:	cbz	w0, 186a8 <PyInit__decimal@@Base+0x7720>
   186dc:	ldr	x21, [x19, #24]
   186e0:	mov	w1, #0x30                  	// #48
   186e4:	ldr	x4, [x19, #40]
   186e8:	strb	w1, [sp, #96]
   186ec:	mov	x1, #0x2                   	// #2
   186f0:	add	x0, sp, #0x50
   186f4:	stp	x1, x0, [sp, #128]
   186f8:	add	x23, sp, #0x60
   186fc:	add	x1, x4, x21, lsl #3
   18700:	lsl	x2, x21, #3
   18704:	ldur	x1, [x1, #-8]
   18708:	cbnz	x1, 18780 <PyInit__decimal@@Base+0x77f8>
   1870c:	mov	x1, x4
   18710:	bl	64f0 <memcpy@plt>
   18714:	ldrb	w0, [x19]
   18718:	stp	x22, x21, [sp, #112]
   1871c:	and	w0, w0, #0xf
   18720:	orr	w0, w0, #0x30
   18724:	strb	w0, [sp, #96]
   18728:	mov	x19, x23
   1872c:	str	xzr, [sp, #104]
   18730:	add	x0, sp, #0x48
   18734:	mov	x2, x19
   18738:	add	x1, sp, #0x40
   1873c:	mov	w3, #0x14                  	// #20
   18740:	bl	1610c <PyInit__decimal@@Base+0x5184>
   18744:	ldr	x0, [sp, #72]
   18748:	cbnz	x0, 186a8 <PyInit__decimal@@Base+0x7720>
   1874c:	ldr	x2, [x19, #8]
   18750:	cmp	x2, #0x0
   18754:	b.le	18778 <PyInit__decimal@@Base+0x77f0>
   18758:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   1875c:	add	x1, x1, #0xae8
   18760:	ldr	x0, [sp, #64]
   18764:	ldr	x1, [x1, x2, lsl #3]
   18768:	mul	x2, x0, x1
   1876c:	umulh	x0, x0, x1
   18770:	str	x2, [sp, #64]
   18774:	cbnz	x0, 186a8 <PyInit__decimal@@Base+0x7720>
   18778:	ldr	x0, [sp, #64]
   1877c:	b	186b8 <PyInit__decimal@@Base+0x7730>
   18780:	neg	x3, x5
   18784:	cmp	x22, x3
   18788:	b.gt	187b8 <PyInit__decimal@@Base+0x7830>
   1878c:	cset	w2, eq  // eq = none
   18790:	mov	x1, x21
   18794:	mov	x0, x4
   18798:	bl	168a4 <PyInit__decimal@@Base+0x591c>
   1879c:	mov	x0, x23
   187a0:	bl	184a0 <PyInit__decimal@@Base+0x7518>
   187a4:	ldrb	w0, [sp, #96]
   187a8:	ldrb	w1, [x19]
   187ac:	bfxil	w0, w1, #0, #4
   187b0:	strb	w0, [sp, #96]
   187b4:	b	18728 <PyInit__decimal@@Base+0x77a0>
   187b8:	mov	x1, #0x13                  	// #19
   187bc:	str	x6, [sp, #112]
   187c0:	sdiv	x22, x6, x1
   187c4:	msub	x1, x22, x1, x6
   187c8:	cbz	x1, 187d0 <PyInit__decimal@@Base+0x7848>
   187cc:	add	x22, x22, #0x1
   187d0:	mov	x2, x21
   187d4:	mov	x1, x4
   187d8:	bl	12444 <PyInit__decimal@@Base+0x14bc>
   187dc:	str	x22, [sp, #120]
   187e0:	b	187a4 <PyInit__decimal@@Base+0x781c>
   187e4:	ldrb	w1, [x0]
   187e8:	tst	w1, #0xe
   187ec:	b.ne	187f4 <PyInit__decimal@@Base+0x786c>  // b.any
   187f0:	b	1863c <PyInit__decimal@@Base+0x76b4>
   187f4:	mov	w0, #0x0                   	// #0
   187f8:	ret
   187fc:	ldr	x1, [x0, #24]
   18800:	ldr	x2, [x0, #40]
   18804:	add	x1, x2, x1, lsl #3
   18808:	ldur	x1, [x1, #-8]
   1880c:	cbz	x1, 18854 <PyInit__decimal@@Base+0x78cc>
   18810:	ldr	x0, [x0, #8]
   18814:	cmp	x0, #0x0
   18818:	b.ge	18848 <PyInit__decimal@@Base+0x78c0>  // b.tcont
   1881c:	neg	x0, x0
   18820:	mov	x1, #0x13                  	// #19
   18824:	udiv	x3, x0, x1
   18828:	msub	x1, x3, x1, x0
   1882c:	ldr	x0, [x2, x3, lsl #3]
   18830:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   18834:	add	x2, x2, #0xae8
   18838:	ldr	x1, [x2, x1, lsl #3]
   1883c:	udiv	x0, x0, x1
   18840:	and	w0, w0, #0x1
   18844:	ret
   18848:	b.ne	18854 <PyInit__decimal@@Base+0x78cc>  // b.any
   1884c:	ldr	x0, [x2]
   18850:	b	18840 <PyInit__decimal@@Base+0x78b8>
   18854:	mov	w0, #0x0                   	// #0
   18858:	b	18844 <PyInit__decimal@@Base+0x78bc>
   1885c:	stp	x29, x30, [sp, #-16]!
   18860:	mov	x29, sp
   18864:	bl	187fc <PyInit__decimal@@Base+0x7874>
   18868:	cmp	w0, #0x0
   1886c:	cset	w0, eq  // eq = none
   18870:	ldp	x29, x30, [sp], #16
   18874:	ret
   18878:	stp	x29, x30, [sp, #-64]!
   1887c:	mov	x29, sp
   18880:	stp	x19, x20, [sp, #16]
   18884:	mov	x19, x0
   18888:	and	w20, w1, #0xff
   1888c:	stp	x21, x22, [sp, #32]
   18890:	and	w22, w2, #0xff
   18894:	ldrb	w0, [x0]
   18898:	tbnz	w0, #5, 188d8 <PyInit__decimal@@Base+0x7950>
   1889c:	adrp	x21, 45000 <PyInit__decimal@@Base+0x34078>
   188a0:	ldr	x0, [x19, #32]
   188a4:	ldr	x1, [x21, #1688]
   188a8:	cmp	x0, x1
   188ac:	b.le	188d8 <PyInit__decimal@@Base+0x7950>
   188b0:	ldr	x0, [x19, #40]
   188b4:	add	x3, sp, #0x3f
   188b8:	mov	x2, #0x8                   	// #8
   188bc:	strb	wzr, [sp, #63]
   188c0:	bl	15d18 <PyInit__decimal@@Base+0x4d90>
   188c4:	str	x0, [x19, #40]
   188c8:	ldrb	w0, [sp, #63]
   188cc:	cbnz	w0, 188d8 <PyInit__decimal@@Base+0x7950>
   188d0:	ldr	x0, [x21, #1688]
   188d4:	str	x0, [x19, #32]
   188d8:	ldrb	w0, [x19]
   188dc:	orr	w20, w20, w22
   188e0:	and	w0, w0, #0xfffffff0
   188e4:	orr	w0, w0, w20
   188e8:	strb	w0, [x19]
   188ec:	ldp	x21, x22, [sp, #32]
   188f0:	stp	xzr, xzr, [x19, #8]
   188f4:	str	xzr, [x19, #24]
   188f8:	ldp	x19, x20, [sp, #16]
   188fc:	ldp	x29, x30, [sp], #64
   18900:	ret
   18904:	stp	x29, x30, [sp, #-64]!
   18908:	mov	x29, sp
   1890c:	stp	x19, x20, [sp, #16]
   18910:	mov	x19, x0
   18914:	mov	x20, x2
   18918:	stp	x21, x22, [sp, #32]
   1891c:	mov	w21, w1
   18920:	ldrb	w0, [x0]
   18924:	tbnz	w0, #5, 18964 <PyInit__decimal@@Base+0x79dc>
   18928:	adrp	x22, 45000 <PyInit__decimal@@Base+0x34078>
   1892c:	ldr	x0, [x19, #32]
   18930:	ldr	x1, [x22, #1688]
   18934:	cmp	x0, x1
   18938:	b.le	18964 <PyInit__decimal@@Base+0x79dc>
   1893c:	ldr	x0, [x19, #40]
   18940:	add	x3, sp, #0x3f
   18944:	mov	x2, #0x8                   	// #8
   18948:	strb	wzr, [sp, #63]
   1894c:	bl	15d18 <PyInit__decimal@@Base+0x4d90>
   18950:	str	x0, [x19, #40]
   18954:	ldrb	w0, [sp, #63]
   18958:	cbnz	w0, 18964 <PyInit__decimal@@Base+0x79dc>
   1895c:	ldr	x0, [x22, #1688]
   18960:	str	x0, [x19, #32]
   18964:	ldrb	w0, [x19]
   18968:	and	w0, w0, #0xfffffff0
   1896c:	orr	w0, w0, #0x4
   18970:	strb	w0, [x19]
   18974:	ldr	w0, [x20]
   18978:	orr	w1, w0, w21
   1897c:	ldp	x21, x22, [sp, #32]
   18980:	stp	xzr, xzr, [x19, #8]
   18984:	str	xzr, [x19, #24]
   18988:	str	w1, [x20]
   1898c:	ldp	x19, x20, [sp, #16]
   18990:	ldp	x29, x30, [sp], #64
   18994:	ret
   18998:	mov	x7, x2
   1899c:	mov	x6, x0
   189a0:	and	w5, w1, #0xff
   189a4:	and	w3, w3, #0xff
   189a8:	mov	x2, x4
   189ac:	tst	w1, #0x2
   189b0:	b.eq	189dc <PyInit__decimal@@Base+0x7a54>  // b.none
   189b4:	and	w1, w5, #0x1
   189b8:	cmp	w1, w3
   189bc:	b.eq	189d0 <PyInit__decimal@@Base+0x7a48>  // b.none
   189c0:	ldrb	w3, [x7]
   189c4:	tbz	w3, #1, 189d0 <PyInit__decimal@@Base+0x7a48>
   189c8:	mov	w1, #0x100                 	// #256
   189cc:	b	18904 <PyInit__decimal@@Base+0x797c>
   189d0:	mov	x0, x6
   189d4:	mov	w2, #0x2                   	// #2
   189d8:	b	18878 <PyInit__decimal@@Base+0x78f0>
   189dc:	mov	w1, w3
   189e0:	mov	w2, #0x2                   	// #2
   189e4:	b	189d8 <PyInit__decimal@@Base+0x7a50>
   189e8:	ldrb	w5, [x0]
   189ec:	mov	x3, x1
   189f0:	tst	w5, #0xe
   189f4:	b.eq	18a10 <PyInit__decimal@@Base+0x7a88>  // b.none
   189f8:	ldr	w0, [x3]
   189fc:	mov	x2, #0xffffffffffffffff    	// #-1
   18a00:	orr	w0, w0, #0x100
   18a04:	str	w0, [x3]
   18a08:	mov	x0, x2
   18a0c:	ret
   18a10:	ldr	x4, [x0, #24]
   18a14:	ldr	x2, [x0, #40]
   18a18:	add	x2, x2, x4, lsl #3
   18a1c:	ldur	x2, [x2, #-8]
   18a20:	cbz	x2, 18a08 <PyInit__decimal@@Base+0x7a80>
   18a24:	tbnz	w5, #0, 189f8 <PyInit__decimal@@Base+0x7a70>
   18a28:	b	18680 <PyInit__decimal@@Base+0x76f8>
   18a2c:	ldrb	w4, [x0]
   18a30:	tst	w4, #0xe
   18a34:	b.eq	18a50 <PyInit__decimal@@Base+0x7ac8>  // b.none
   18a38:	ldr	w0, [x1]
   18a3c:	mov	x2, #0xffffffffffffffff    	// #-1
   18a40:	orr	w0, w0, #0x100
   18a44:	str	w0, [x1]
   18a48:	mov	x0, x2
   18a4c:	ret
   18a50:	ldr	x3, [x0, #24]
   18a54:	ldr	x2, [x0, #40]
   18a58:	add	x2, x2, x3, lsl #3
   18a5c:	ldur	x2, [x2, #-8]
   18a60:	cbz	x2, 18a48 <PyInit__decimal@@Base+0x7ac0>
   18a64:	b	18680 <PyInit__decimal@@Base+0x76f8>
   18a68:	stp	x29, x30, [sp, #-32]!
   18a6c:	mov	x29, sp
   18a70:	stp	x19, x20, [sp, #16]
   18a74:	mov	x19, x1
   18a78:	mov	x20, x0
   18a7c:	bl	18a2c <PyInit__decimal@@Base+0x7aa4>
   18a80:	ldr	w1, [x19]
   18a84:	tbnz	w1, #8, 18ac0 <PyInit__decimal@@Base+0x7b38>
   18a88:	ldrb	w2, [x20]
   18a8c:	and	w2, w2, #0x1
   18a90:	tbnz	x0, #63, 18aa8 <PyInit__decimal@@Base+0x7b20>
   18a94:	cbz	w2, 18a9c <PyInit__decimal@@Base+0x7b14>
   18a98:	neg	x0, x0
   18a9c:	ldp	x19, x20, [sp, #16]
   18aa0:	ldp	x29, x30, [sp], #32
   18aa4:	ret
   18aa8:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   18aac:	cmp	x0, x3
   18ab0:	csel	w2, w2, wzr, eq  // eq = none
   18ab4:	cbnz	w2, 18ac8 <PyInit__decimal@@Base+0x7b40>
   18ab8:	orr	w1, w1, #0x100
   18abc:	str	w1, [x19]
   18ac0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   18ac4:	b	18a9c <PyInit__decimal@@Base+0x7b14>
   18ac8:	mov	x0, x3
   18acc:	b	18a9c <PyInit__decimal@@Base+0x7b14>
   18ad0:	b	189e8 <PyInit__decimal@@Base+0x7a60>
   18ad4:	b	18a68 <PyInit__decimal@@Base+0x7ae0>
   18ad8:	stp	x29, x30, [sp, #-32]!
   18adc:	mov	x29, sp
   18ae0:	str	x19, [sp, #16]
   18ae4:	mov	x19, x1
   18ae8:	bl	189e8 <PyInit__decimal@@Base+0x7a60>
   18aec:	ldr	w1, [x19]
   18af0:	tbnz	w1, #8, 18b08 <PyInit__decimal@@Base+0x7b80>
   18af4:	mov	x2, #0xffffffff            	// #4294967295
   18af8:	cmp	x0, x2
   18afc:	b.ls	18b0c <PyInit__decimal@@Base+0x7b84>  // b.plast
   18b00:	orr	w1, w1, #0x100
   18b04:	str	w1, [x19]
   18b08:	mov	w0, #0xffffffff            	// #-1
   18b0c:	ldr	x19, [sp, #16]
   18b10:	ldp	x29, x30, [sp], #32
   18b14:	ret
   18b18:	stp	x29, x30, [sp, #-32]!
   18b1c:	mov	x29, sp
   18b20:	str	x19, [sp, #16]
   18b24:	mov	x19, x1
   18b28:	bl	18a68 <PyInit__decimal@@Base+0x7ae0>
   18b2c:	ldr	w1, [x19]
   18b30:	tbnz	w1, #8, 18b50 <PyInit__decimal@@Base+0x7bc8>
   18b34:	mov	x2, #0x80000000            	// #2147483648
   18b38:	add	x2, x0, x2
   18b3c:	mov	x3, #0xffffffff            	// #4294967295
   18b40:	cmp	x2, x3
   18b44:	b.ls	18b54 <PyInit__decimal@@Base+0x7bcc>  // b.plast
   18b48:	orr	w1, w1, #0x100
   18b4c:	str	w1, [x19]
   18b50:	mov	w0, #0x7fffffff            	// #2147483647
   18b54:	ldr	x19, [sp, #16]
   18b58:	ldp	x29, x30, [sp], #32
   18b5c:	ret
   18b60:	cmp	x0, x1
   18b64:	b.eq	18c0c <PyInit__decimal@@Base+0x7c84>  // b.none
   18b68:	stp	x29, x30, [sp, #-32]!
   18b6c:	mov	x29, sp
   18b70:	stp	x19, x20, [sp, #16]
   18b74:	mov	x20, x1
   18b78:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
   18b7c:	mov	x19, x0
   18b80:	ldr	x3, [x1, #1688]
   18b84:	ldr	x1, [x20, #24]
   18b88:	cmp	x1, x3
   18b8c:	csel	x1, x1, x3, ge  // ge = tcont
   18b90:	ldr	x3, [x0, #32]
   18b94:	cmp	x1, x3
   18b98:	b.ne	18be8 <PyInit__decimal@@Base+0x7c60>  // b.any
   18b9c:	ldrb	w1, [x20]
   18ba0:	ldrb	w0, [x19]
   18ba4:	bfxil	w0, w1, #0, #4
   18ba8:	strb	w0, [x19]
   18bac:	ldr	x0, [x20, #8]
   18bb0:	ldr	x1, [x20, #40]
   18bb4:	str	x0, [x19, #8]
   18bb8:	ldr	x0, [x20, #16]
   18bbc:	str	x0, [x19, #16]
   18bc0:	ldr	x0, [x20, #24]
   18bc4:	str	x0, [x19, #24]
   18bc8:	ldr	x0, [x19, #40]
   18bcc:	ldr	x2, [x20, #24]
   18bd0:	lsl	x2, x2, #3
   18bd4:	bl	64f0 <memcpy@plt>
   18bd8:	mov	w0, #0x1                   	// #1
   18bdc:	ldp	x19, x20, [sp, #16]
   18be0:	ldp	x29, x30, [sp], #32
   18be4:	ret
   18be8:	ldrb	w4, [x0]
   18bec:	tbz	w4, #5, 18c04 <PyInit__decimal@@Base+0x7c7c>
   18bf0:	cmp	x1, x3
   18bf4:	b.le	18b9c <PyInit__decimal@@Base+0x7c14>
   18bf8:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   18bfc:	cbnz	w0, 18b9c <PyInit__decimal@@Base+0x7c14>
   18c00:	b	18bdc <PyInit__decimal@@Base+0x7c54>
   18c04:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   18c08:	b	18bfc <PyInit__decimal@@Base+0x7c74>
   18c0c:	mov	w0, #0x1                   	// #1
   18c10:	ret
   18c14:	ldrb	w4, [x1]
   18c18:	tst	w4, #0xc
   18c1c:	b.eq	18c78 <PyInit__decimal@@Base+0x7cf0>  // b.none
   18c20:	stp	x29, x30, [sp, #-32]!
   18c24:	ubfx	x4, x4, #3, #1
   18c28:	mov	x29, sp
   18c2c:	stp	x19, x20, [sp, #16]
   18c30:	mov	x20, x2
   18c34:	mov	x2, x3
   18c38:	ldr	w3, [x3]
   18c3c:	mov	x19, x0
   18c40:	orr	w4, w3, w4, lsl #8
   18c44:	str	w4, [x2]
   18c48:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   18c4c:	ldrb	w0, [x19]
   18c50:	mov	x1, x20
   18c54:	and	w0, w0, #0xfffffff1
   18c58:	orr	w0, w0, #0x4
   18c5c:	strb	w0, [x19]
   18c60:	mov	x0, x19
   18c64:	bl	17f7c <PyInit__decimal@@Base+0x6ff4>
   18c68:	mov	w0, #0x1                   	// #1
   18c6c:	ldp	x19, x20, [sp, #16]
   18c70:	ldp	x29, x30, [sp], #32
   18c74:	ret
   18c78:	mov	w0, #0x0                   	// #0
   18c7c:	ret
   18c80:	stp	x29, x30, [sp, #-32]!
   18c84:	mov	x29, sp
   18c88:	stp	x19, x20, [sp, #16]
   18c8c:	mov	x19, x0
   18c90:	mov	x0, x1
   18c94:	mov	x1, x2
   18c98:	mov	x20, x3
   18c9c:	mov	x2, x4
   18ca0:	ldrb	w3, [x0]
   18ca4:	ldrb	w4, [x1]
   18ca8:	orr	w5, w3, w4
   18cac:	tst	w5, #0xc
   18cb0:	b.eq	18d1c <PyInit__decimal@@Base+0x7d94>  // b.none
   18cb4:	tbz	w3, #3, 18cfc <PyInit__decimal@@Base+0x7d74>
   18cb8:	ldr	w1, [x2]
   18cbc:	orr	w1, w1, #0x100
   18cc0:	str	w1, [x2]
   18cc4:	mov	x1, x0
   18cc8:	mov	x0, x19
   18ccc:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   18cd0:	ldrb	w0, [x19]
   18cd4:	mov	x1, x20
   18cd8:	and	w0, w0, #0xfffffff1
   18cdc:	orr	w0, w0, #0x4
   18ce0:	strb	w0, [x19]
   18ce4:	mov	x0, x19
   18ce8:	bl	17f7c <PyInit__decimal@@Base+0x6ff4>
   18cec:	mov	w0, #0x1                   	// #1
   18cf0:	ldp	x19, x20, [sp, #16]
   18cf4:	ldp	x29, x30, [sp], #32
   18cf8:	ret
   18cfc:	tbz	w4, #3, 18d10 <PyInit__decimal@@Base+0x7d88>
   18d00:	ldr	w0, [x2]
   18d04:	orr	w0, w0, #0x100
   18d08:	str	w0, [x2]
   18d0c:	b	18cc8 <PyInit__decimal@@Base+0x7d40>
   18d10:	tst	x3, #0x4
   18d14:	csel	x1, x1, x0, eq  // eq = none
   18d18:	b	18cc8 <PyInit__decimal@@Base+0x7d40>
   18d1c:	mov	w0, #0x0                   	// #0
   18d20:	b	18cf0 <PyInit__decimal@@Base+0x7d68>
   18d24:	sub	sp, sp, #0x280
   18d28:	stp	x29, x30, [sp]
   18d2c:	mov	x29, sp
   18d30:	stp	x19, x20, [sp, #16]
   18d34:	mov	x19, x0
   18d38:	stp	x21, x22, [sp, #32]
   18d3c:	mov	x22, x2
   18d40:	stp	x23, x24, [sp, #48]
   18d44:	mov	x23, x1
   18d48:	mov	x24, x4
   18d4c:	stp	x25, x26, [sp, #64]
   18d50:	stp	x27, x28, [sp, #80]
   18d54:	ldrb	w0, [x1]
   18d58:	tst	w0, #0xe
   18d5c:	b.ne	18d6c <PyInit__decimal@@Base+0x7de4>  // b.any
   18d60:	ldrb	w0, [x2]
   18d64:	tst	w0, #0xe
   18d68:	b.eq	18e1c <PyInit__decimal@@Base+0x7e94>  // b.none
   18d6c:	mov	x4, x24
   18d70:	mov	x2, x22
   18d74:	mov	x1, x23
   18d78:	mov	x0, x19
   18d7c:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   18d80:	cbnz	w0, 18dd4 <PyInit__decimal@@Base+0x7e4c>
   18d84:	ldrb	w1, [x23]
   18d88:	tbz	w1, #1, 18df4 <PyInit__decimal@@Base+0x7e6c>
   18d8c:	ldrb	w2, [x22]
   18d90:	tst	w2, #0xe
   18d94:	b.ne	18dc0 <PyInit__decimal@@Base+0x7e38>  // b.any
   18d98:	ldr	x0, [x22, #24]
   18d9c:	ldr	x3, [x22, #40]
   18da0:	add	x0, x3, x0, lsl #3
   18da4:	ldur	x0, [x0, #-8]
   18da8:	cbnz	x0, 18dc0 <PyInit__decimal@@Base+0x7e38>
   18dac:	mov	x2, x24
   18db0:	mov	w1, #0x100                 	// #256
   18db4:	mov	x0, x19
   18db8:	bl	18904 <PyInit__decimal@@Base+0x797c>
   18dbc:	b	18dd4 <PyInit__decimal@@Base+0x7e4c>
   18dc0:	eor	w1, w1, w2
   18dc4:	and	w1, w1, #0x1
   18dc8:	mov	x0, x19
   18dcc:	mov	w2, #0x2                   	// #2
   18dd0:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   18dd4:	ldp	x29, x30, [sp]
   18dd8:	ldp	x19, x20, [sp, #16]
   18ddc:	ldp	x21, x22, [sp, #32]
   18de0:	ldp	x23, x24, [sp, #48]
   18de4:	ldp	x25, x26, [sp, #64]
   18de8:	ldp	x27, x28, [sp, #80]
   18dec:	add	sp, sp, #0x280
   18df0:	ret
   18df4:	tst	w1, #0xe
   18df8:	b.ne	18e10 <PyInit__decimal@@Base+0x7e88>  // b.any
   18dfc:	ldr	x0, [x23, #24]
   18e00:	ldr	x2, [x23, #40]
   18e04:	add	x0, x2, x0, lsl #3
   18e08:	ldur	x0, [x0, #-8]
   18e0c:	cbz	x0, 18dac <PyInit__decimal@@Base+0x7e24>
   18e10:	ldrb	w0, [x22]
   18e14:	eor	w1, w1, w0
   18e18:	b	18dc4 <PyInit__decimal@@Base+0x7e3c>
   18e1c:	ldr	x1, [x2, #24]
   18e20:	ldr	x0, [x23, #24]
   18e24:	cmp	x1, x0
   18e28:	b.le	18ef0 <PyInit__decimal@@Base+0x7f68>
   18e2c:	mov	x26, x23
   18e30:	mov	x25, x2
   18e34:	ldr	x21, [x25, #24]
   18e38:	ldr	x27, [x26, #24]
   18e3c:	cmp	x21, #0x1
   18e40:	add	x0, x21, x27
   18e44:	str	x0, [sp, #120]
   18e48:	b.ne	18efc <PyInit__decimal@@Base+0x7f74>  // b.any
   18e4c:	ldr	x1, [x25, #40]
   18e50:	ldr	x0, [x26, #40]
   18e54:	ldr	x3, [x1]
   18e58:	ldr	x0, [x0]
   18e5c:	ldr	x1, [x19, #40]
   18e60:	umulh	x2, x3, x0
   18e64:	mul	x3, x3, x0
   18e68:	add	x0, x1, #0x8
   18e6c:	bl	15ff4 <PyInit__decimal@@Base+0x506c>
   18e70:	ldrb	w0, [x23]
   18e74:	ldrb	w3, [x22]
   18e78:	eor	w3, w3, w0
   18e7c:	and	w0, w3, #0x1
   18e80:	ldrb	w3, [x19]
   18e84:	and	w3, w3, #0xf0
   18e88:	orr	w3, w3, w0
   18e8c:	strb	w3, [x19]
   18e90:	ldr	x1, [x26, #8]
   18e94:	ldr	x0, [x25, #8]
   18e98:	add	x0, x0, x1
   18e9c:	str	x0, [x19, #8]
   18ea0:	ldr	x0, [x19, #40]
   18ea4:	ldr	x1, [sp, #120]
   18ea8:	bl	161c8 <PyInit__decimal@@Base+0x5240>
   18eac:	str	x0, [x19, #24]
   18eb0:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
   18eb4:	ldr	x1, [x1, #1688]
   18eb8:	cmp	x1, x0
   18ebc:	csel	x1, x1, x0, ge  // ge = tcont
   18ec0:	ldr	x0, [x19, #32]
   18ec4:	cmp	x1, x0
   18ec8:	b.eq	18ee4 <PyInit__decimal@@Base+0x7f5c>  // b.none
   18ecc:	tbz	w3, #5, 19298 <PyInit__decimal@@Base+0x8310>
   18ed0:	cmp	x1, x0
   18ed4:	b.le	18ee4 <PyInit__decimal@@Base+0x7f5c>
   18ed8:	mov	x2, x24
   18edc:	mov	x0, x19
   18ee0:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   18ee4:	mov	x0, x19
   18ee8:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   18eec:	b	18dd4 <PyInit__decimal@@Base+0x7e4c>
   18ef0:	mov	x26, x2
   18ef4:	mov	x25, x23
   18ef8:	b	18e34 <PyInit__decimal@@Base+0x7eac>
   18efc:	cmp	x0, #0x40
   18f00:	b.hi	1908c <PyInit__decimal@@Base+0x8104>  // b.pmore
   18f04:	cmp	x21, #0x2
   18f08:	add	x20, sp, #0x80
   18f0c:	ldr	x10, [x25, #40]
   18f10:	ldr	x9, [x26, #40]
   18f14:	b.ne	19034 <PyInit__decimal@@Base+0x80ac>  // b.any
   18f18:	ldr	x0, [x9]
   18f1c:	add	x12, x20, #0x8
   18f20:	ldr	x3, [x10]
   18f24:	mov	x1, x20
   18f28:	umulh	x2, x3, x0
   18f2c:	mul	x3, x3, x0
   18f30:	mov	x0, x12
   18f34:	bl	15ff4 <PyInit__decimal@@Base+0x506c>
   18f38:	mov	x1, x12
   18f3c:	ldr	x0, [x9]
   18f40:	add	x11, x20, #0x10
   18f44:	ldr	x2, [x10, #8]
   18f48:	mul	x3, x2, x0
   18f4c:	umulh	x2, x2, x0
   18f50:	ldr	x0, [sp, #136]
   18f54:	adds	x3, x3, x0
   18f58:	mov	x0, x11
   18f5c:	cinc	x2, x2, cs  // cs = hs, nlast
   18f60:	bl	15ff4 <PyInit__decimal@@Base+0x506c>
   18f64:	cmp	x27, #0x1
   18f68:	b.eq	18fc0 <PyInit__decimal@@Base+0x8038>  // b.none
   18f6c:	ldr	x2, [x10]
   18f70:	ldr	x0, [x9, #8]
   18f74:	mul	x3, x2, x0
   18f78:	umulh	x2, x2, x0
   18f7c:	ldr	x0, [sp, #136]
   18f80:	adds	x3, x3, x0
   18f84:	add	x0, x20, #0x18
   18f88:	cinc	x2, x2, cs  // cs = hs, nlast
   18f8c:	bl	15ff4 <PyInit__decimal@@Base+0x506c>
   18f90:	ldr	x1, [x9, #8]
   18f94:	ldr	x2, [x10, #8]
   18f98:	mul	x3, x2, x1
   18f9c:	umulh	x2, x2, x1
   18fa0:	ldr	x1, [sp, #144]
   18fa4:	adds	x3, x3, x1
   18fa8:	ldr	x1, [sp, #152]
   18fac:	cinc	x2, x2, cs  // cs = hs, nlast
   18fb0:	adds	x3, x3, x1
   18fb4:	mov	x1, x11
   18fb8:	cinc	x2, x2, cs  // cs = hs, nlast
   18fbc:	bl	15ff4 <PyInit__decimal@@Base+0x506c>
   18fc0:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   18fc4:	ldr	x1, [sp, #120]
   18fc8:	ldr	x0, [x0, #1688]
   18fcc:	cmp	x1, x0
   18fd0:	csel	x1, x1, x0, ge  // ge = tcont
   18fd4:	ldr	x0, [x19, #32]
   18fd8:	cmp	x1, x0
   18fdc:	b.ne	19058 <PyInit__decimal@@Base+0x80d0>  // b.any
   18fe0:	ldr	x2, [x19, #40]
   18fe4:	mov	x0, #0x0                   	// #0
   18fe8:	ldr	x1, [sp, #120]
   18fec:	cmp	x1, x0
   18ff0:	b.ls	18e70 <PyInit__decimal@@Base+0x7ee8>  // b.plast
   18ff4:	ldr	x1, [x20, x0, lsl #3]
   18ff8:	str	x1, [x2, x0, lsl #3]
   18ffc:	add	x0, x0, #0x1
   19000:	b	18fe8 <PyInit__decimal@@Base+0x8060>
   19004:	str	xzr, [x20, x1, lsl #3]
   19008:	add	x1, x1, #0x1
   1900c:	cmp	x0, x1
   19010:	b.ne	19004 <PyInit__decimal@@Base+0x807c>  // b.any
   19014:	cmp	x27, #0x1
   19018:	b.ne	1903c <PyInit__decimal@@Base+0x80b4>  // b.any
   1901c:	ldr	x3, [x9]
   19020:	mov	x2, x21
   19024:	mov	x1, x10
   19028:	mov	x0, x20
   1902c:	bl	11ea0 <PyInit__decimal@@Base+0xf18>
   19030:	b	18fc0 <PyInit__decimal@@Base+0x8038>
   19034:	mov	x1, #0x0                   	// #0
   19038:	b	1900c <PyInit__decimal@@Base+0x8084>
   1903c:	mov	x4, x21
   19040:	mov	x3, x27
   19044:	mov	x2, x10
   19048:	mov	x1, x9
   1904c:	mov	x0, x20
   19050:	bl	11f04 <PyInit__decimal@@Base+0xf7c>
   19054:	b	18fc0 <PyInit__decimal@@Base+0x8038>
   19058:	ldrb	w2, [x19]
   1905c:	tbz	w2, #5, 1907c <PyInit__decimal@@Base+0x80f4>
   19060:	cmp	x1, x0
   19064:	b.le	18fe0 <PyInit__decimal@@Base+0x8058>
   19068:	mov	x2, x24
   1906c:	mov	x0, x19
   19070:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   19074:	cbz	w0, 18dd4 <PyInit__decimal@@Base+0x7e4c>
   19078:	b	18fe0 <PyInit__decimal@@Base+0x8058>
   1907c:	mov	x2, x24
   19080:	mov	x0, x19
   19084:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   19088:	b	19074 <PyInit__decimal@@Base+0x80ec>
   1908c:	cmp	x27, #0x100
   19090:	b.gt	1910c <PyInit__decimal@@Base+0x8184>
   19094:	mov	x1, #0x8                   	// #8
   19098:	bl	15cf8 <PyInit__decimal@@Base+0x4d70>
   1909c:	mov	x20, x0
   190a0:	cbz	x0, 19178 <PyInit__decimal@@Base+0x81f0>
   190a4:	ldr	x3, [x26, #24]
   190a8:	ldr	x2, [x25, #24]
   190ac:	cmp	x3, #0x1
   190b0:	ldr	x5, [x25, #40]
   190b4:	ldr	x1, [x26, #40]
   190b8:	b.ne	190fc <PyInit__decimal@@Base+0x8174>  // b.any
   190bc:	ldr	x3, [x1]
   190c0:	mov	x1, x5
   190c4:	bl	11ea0 <PyInit__decimal@@Base+0xf18>
   190c8:	ldrb	w0, [x19]
   190cc:	tst	w0, #0xe0
   190d0:	b.ne	190e4 <PyInit__decimal@@Base+0x815c>  // b.any
   190d4:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   190d8:	ldr	x1, [x0, #1720]
   190dc:	ldr	x0, [x19, #40]
   190e0:	blr	x1
   190e4:	ldr	x0, [sp, #120]
   190e8:	stp	x0, x20, [x19, #32]
   190ec:	ldrb	w0, [x19]
   190f0:	and	w0, w0, #0x1f
   190f4:	strb	w0, [x19]
   190f8:	b	18e70 <PyInit__decimal@@Base+0x7ee8>
   190fc:	mov	x4, x2
   19100:	mov	x2, x5
   19104:	bl	11f04 <PyInit__decimal@@Base+0xf7c>
   19108:	b	190c8 <PyInit__decimal@@Base+0x8140>
   1910c:	ldr	x1, [x25, #40]
   19110:	str	x1, [sp, #96]
   19114:	cmp	x0, #0x400
   19118:	ldr	x28, [x26, #40]
   1911c:	b.hi	191c0 <PyInit__decimal@@Base+0x8238>  // b.pmore
   19120:	mov	x1, x27
   19124:	mov	x0, x21
   19128:	bl	17450 <PyInit__decimal@@Base+0x64c8>
   1912c:	str	x0, [sp, #120]
   19130:	mov	x1, #0x8                   	// #8
   19134:	bl	15cf8 <PyInit__decimal@@Base+0x4d70>
   19138:	mov	x20, x0
   1913c:	cbz	x0, 19178 <PyInit__decimal@@Base+0x81f0>
   19140:	cmp	x21, #0x10
   19144:	b.ls	19184 <PyInit__decimal@@Base+0x81fc>  // b.plast
   19148:	mov	x0, x21
   1914c:	mov	x1, #0x10                  	// #16
   19150:	bl	174a8 <PyInit__decimal@@Base+0x6520>
   19154:	cbz	x0, 19184 <PyInit__decimal@@Base+0x81fc>
   19158:	mov	x1, #0x8                   	// #8
   1915c:	bl	15cf8 <PyInit__decimal@@Base+0x4d70>
   19160:	mov	x3, x0
   19164:	cbnz	x0, 19188 <PyInit__decimal@@Base+0x8200>
   19168:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1916c:	ldr	x1, [x0, #1720]
   19170:	mov	x0, x20
   19174:	blr	x1
   19178:	mov	x2, x24
   1917c:	mov	w1, #0x200                 	// #512
   19180:	b	18db4 <PyInit__decimal@@Base+0x7e2c>
   19184:	mov	x3, #0x0                   	// #0
   19188:	ldr	x1, [sp, #96]
   1918c:	mov	x5, x27
   19190:	mov	x4, x21
   19194:	mov	x2, x28
   19198:	mov	x0, x20
   1919c:	str	x3, [sp, #104]
   191a0:	bl	162c0 <PyInit__decimal@@Base+0x5338>
   191a4:	ldr	x3, [sp, #104]
   191a8:	cbz	x3, 190c8 <PyInit__decimal@@Base+0x8140>
   191ac:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   191b0:	ldr	x1, [x0, #1720]
   191b4:	mov	x0, x3
   191b8:	blr	x1
   191bc:	b	190c8 <PyInit__decimal@@Base+0x8140>
   191c0:	mov	x1, #0x300000000           	// #12884901888
   191c4:	cmp	x0, x1
   191c8:	b.hi	191f0 <PyInit__decimal@@Base+0x8268>  // b.pmore
   191cc:	ldr	x0, [sp, #96]
   191d0:	add	x4, sp, #0x78
   191d4:	mov	x3, x27
   191d8:	mov	x2, x21
   191dc:	mov	x1, x28
   191e0:	bl	16c78 <PyInit__decimal@@Base+0x5cf0>
   191e4:	mov	x20, x0
   191e8:	cbnz	x20, 190c8 <PyInit__decimal@@Base+0x8140>
   191ec:	b	19178 <PyInit__decimal@@Base+0x81f0>
   191f0:	mov	x1, x27
   191f4:	mov	x0, x21
   191f8:	bl	17450 <PyInit__decimal@@Base+0x64c8>
   191fc:	str	x0, [sp, #120]
   19200:	mov	x1, #0x8                   	// #8
   19204:	bl	15cf8 <PyInit__decimal@@Base+0x4d70>
   19208:	mov	x20, x0
   1920c:	cbz	x0, 19178 <PyInit__decimal@@Base+0x81f0>
   19210:	mov	x1, #0x180000000           	// #6442450944
   19214:	cmp	x21, x1
   19218:	b.ls	19290 <PyInit__decimal@@Base+0x8308>  // b.plast
   1921c:	mov	x0, x21
   19220:	bl	174a8 <PyInit__decimal@@Base+0x6520>
   19224:	cbz	x0, 19290 <PyInit__decimal@@Base+0x8308>
   19228:	mov	x1, #0x8                   	// #8
   1922c:	bl	15cf8 <PyInit__decimal@@Base+0x4d70>
   19230:	mov	x3, x0
   19234:	cbz	x0, 19168 <PyInit__decimal@@Base+0x81e0>
   19238:	ldr	x1, [sp, #96]
   1923c:	mov	x5, x27
   19240:	mov	x4, x21
   19244:	mov	x2, x28
   19248:	mov	x0, x20
   1924c:	str	x3, [sp, #104]
   19250:	bl	16f78 <PyInit__decimal@@Base+0x5ff0>
   19254:	ldr	x3, [sp, #104]
   19258:	cbnz	w0, 192a8 <PyInit__decimal@@Base+0x8320>
   1925c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   19260:	str	x3, [sp, #96]
   19264:	ldr	x1, [x0, #1720]
   19268:	mov	x0, x20
   1926c:	blr	x1
   19270:	ldr	x3, [sp, #96]
   19274:	cbz	x3, 19178 <PyInit__decimal@@Base+0x81f0>
   19278:	mov	x20, #0x0                   	// #0
   1927c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   19280:	ldr	x1, [x0, #1720]
   19284:	mov	x0, x3
   19288:	blr	x1
   1928c:	b	191e8 <PyInit__decimal@@Base+0x8260>
   19290:	mov	x3, #0x0                   	// #0
   19294:	b	19238 <PyInit__decimal@@Base+0x82b0>
   19298:	mov	x2, x24
   1929c:	mov	x0, x19
   192a0:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   192a4:	b	18ee4 <PyInit__decimal@@Base+0x7f5c>
   192a8:	cbz	x3, 190c8 <PyInit__decimal@@Base+0x8140>
   192ac:	b	1927c <PyInit__decimal@@Base+0x82f4>
   192b0:	stp	x29, x30, [sp, #-32]!
   192b4:	mov	x29, sp
   192b8:	stp	x19, x20, [sp, #16]
   192bc:	mov	x20, x0
   192c0:	ldr	x0, [x0, #24]
   192c4:	bl	15d94 <PyInit__decimal@@Base+0x4e0c>
   192c8:	mov	x19, x0
   192cc:	cbz	x0, 1930c <PyInit__decimal@@Base+0x8384>
   192d0:	ldr	x2, [x20, #24]
   192d4:	ldr	x1, [x20, #40]
   192d8:	ldr	x0, [x0, #40]
   192dc:	lsl	x2, x2, #3
   192e0:	bl	64f0 <memcpy@plt>
   192e4:	ldrb	w1, [x20]
   192e8:	ldrb	w0, [x19]
   192ec:	bfxil	w0, w1, #0, #4
   192f0:	strb	w0, [x19]
   192f4:	ldr	x0, [x20, #8]
   192f8:	str	x0, [x19, #8]
   192fc:	ldr	x0, [x20, #16]
   19300:	str	x0, [x19, #16]
   19304:	ldr	x0, [x20, #24]
   19308:	str	x0, [x19, #24]
   1930c:	mov	x0, x19
   19310:	ldp	x19, x20, [sp, #16]
   19314:	ldp	x29, x30, [sp], #32
   19318:	ret
   1931c:	stp	x29, x30, [sp, #-32]!
   19320:	mov	x29, sp
   19324:	str	x19, [sp, #16]
   19328:	mov	x19, x0
   1932c:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   19330:	cbz	w0, 19344 <PyInit__decimal@@Base+0x83bc>
   19334:	ldrb	w0, [x19]
   19338:	and	w0, w0, #0xfffffffe
   1933c:	strb	w0, [x19]
   19340:	mov	w0, #0x1                   	// #1
   19344:	ldr	x19, [sp, #16]
   19348:	ldp	x29, x30, [sp], #32
   1934c:	ret
   19350:	stp	x29, x30, [sp, #-32]!
   19354:	mov	x29, sp
   19358:	str	x19, [sp, #16]
   1935c:	mov	x19, x0
   19360:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   19364:	cbz	w0, 19378 <PyInit__decimal@@Base+0x83f0>
   19368:	ldrb	w0, [x19]
   1936c:	eor	w0, w0, #0x1
   19370:	strb	w0, [x19]
   19374:	mov	w0, #0x1                   	// #1
   19378:	ldr	x19, [sp, #16]
   1937c:	ldp	x29, x30, [sp], #32
   19380:	ret
   19384:	stp	x29, x30, [sp, #-32]!
   19388:	mov	x29, sp
   1938c:	stp	x19, x20, [sp, #16]
   19390:	mov	x19, x0
   19394:	ldrb	w20, [x2]
   19398:	mov	x2, x3
   1939c:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   193a0:	cbz	w0, 193b4 <PyInit__decimal@@Base+0x842c>
   193a4:	ldrb	w0, [x19]
   193a8:	bfxil	w0, w20, #0, #1
   193ac:	strb	w0, [x19]
   193b0:	mov	w0, #0x1                   	// #1
   193b4:	ldp	x19, x20, [sp, #16]
   193b8:	ldp	x29, x30, [sp], #32
   193bc:	ret
   193c0:	ldrb	w3, [x0]
   193c4:	tst	w3, #0xe
   193c8:	b.ne	193d8 <PyInit__decimal@@Base+0x8450>  // b.any
   193cc:	ldrb	w4, [x1]
   193d0:	tst	w4, #0xe
   193d4:	b.eq	193ec <PyInit__decimal@@Base+0x8464>  // b.none
   193d8:	tst	w3, #0xc
   193dc:	b.ne	193f0 <PyInit__decimal@@Base+0x8468>  // b.any
   193e0:	ldrb	w3, [x1]
   193e4:	tst	w3, #0xc
   193e8:	b.ne	193f0 <PyInit__decimal@@Base+0x8468>  // b.any
   193ec:	b	16b04 <PyInit__decimal@@Base+0x5b7c>
   193f0:	ldr	w0, [x2]
   193f4:	orr	w0, w0, #0x100
   193f8:	str	w0, [x2]
   193fc:	mov	w0, #0x7fffffff            	// #2147483647
   19400:	ret
   19404:	stp	x29, x30, [sp, #-48]!
   19408:	mov	x29, sp
   1940c:	stp	x19, x20, [sp, #16]
   19410:	mov	x19, x1
   19414:	mov	x20, x2
   19418:	str	x21, [sp, #32]
   1941c:	mov	x21, x0
   19420:	ldrb	w0, [x1]
   19424:	tst	w0, #0xe
   19428:	b.ne	19474 <PyInit__decimal@@Base+0x84ec>  // b.any
   1942c:	ldrb	w0, [x2]
   19430:	tst	w0, #0xe
   19434:	b.ne	19474 <PyInit__decimal@@Base+0x84ec>  // b.any
   19438:	mov	x1, x20
   1943c:	mov	x0, x19
   19440:	bl	16b04 <PyInit__decimal@@Base+0x5b7c>
   19444:	cmp	w0, #0x0
   19448:	mov	w19, w0
   1944c:	lsr	w1, w0, #31
   19450:	cset	x2, ne  // ne = any
   19454:	mov	x0, x21
   19458:	mov	x3, #0x0                   	// #0
   1945c:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   19460:	mov	w0, w19
   19464:	ldp	x19, x20, [sp, #16]
   19468:	ldr	x21, [sp, #32]
   1946c:	ldp	x29, x30, [sp], #48
   19470:	ret
   19474:	mov	x2, x20
   19478:	mov	x1, x19
   1947c:	mov	x0, x21
   19480:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   19484:	cbz	w0, 19438 <PyInit__decimal@@Base+0x84b0>
   19488:	mov	w19, #0x7fffffff            	// #2147483647
   1948c:	b	19460 <PyInit__decimal@@Base+0x84d8>
   19490:	stp	x29, x30, [sp, #-48]!
   19494:	mov	x29, sp
   19498:	stp	x19, x20, [sp, #16]
   1949c:	mov	x19, x1
   194a0:	mov	x20, x2
   194a4:	stp	x21, x22, [sp, #32]
   194a8:	mov	x22, x0
   194ac:	mov	x21, x4
   194b0:	ldrb	w0, [x1]
   194b4:	tst	w0, #0xe
   194b8:	b.ne	194c8 <PyInit__decimal@@Base+0x8540>  // b.any
   194bc:	ldrb	w0, [x2]
   194c0:	tst	w0, #0xe
   194c4:	b.eq	19504 <PyInit__decimal@@Base+0x857c>  // b.none
   194c8:	mov	x4, x21
   194cc:	mov	x2, x20
   194d0:	mov	x1, x19
   194d4:	mov	x0, x22
   194d8:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   194dc:	cbz	w0, 19504 <PyInit__decimal@@Base+0x857c>
   194e0:	ldr	w0, [x21]
   194e4:	mov	w19, #0x7fffffff            	// #2147483647
   194e8:	orr	w0, w0, #0x100
   194ec:	str	w0, [x21]
   194f0:	mov	w0, w19
   194f4:	ldp	x19, x20, [sp, #16]
   194f8:	ldp	x21, x22, [sp, #32]
   194fc:	ldp	x29, x30, [sp], #48
   19500:	ret
   19504:	mov	x1, x20
   19508:	mov	x0, x19
   1950c:	bl	16b04 <PyInit__decimal@@Base+0x5b7c>
   19510:	cmp	w0, #0x0
   19514:	mov	w19, w0
   19518:	lsr	w1, w0, #31
   1951c:	cset	x2, ne  // ne = any
   19520:	mov	x0, x22
   19524:	mov	x3, #0x0                   	// #0
   19528:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   1952c:	b	194f0 <PyInit__decimal@@Base+0x8568>
   19530:	ldrb	w2, [x0]
   19534:	ldrb	w3, [x1]
   19538:	and	w4, w2, #0x1
   1953c:	and	w5, w3, #0x1
   19540:	cmp	w5, w4
   19544:	b.eq	19550 <PyInit__decimal@@Base+0x85c8>  // b.none
   19548:	sub	w0, w5, w4
   1954c:	ret
   19550:	stp	x29, x30, [sp, #-112]!
   19554:	mov	x13, x0
   19558:	mov	x14, x1
   1955c:	mov	x29, sp
   19560:	and	w4, w3, #0xc
   19564:	tst	w2, #0xc
   19568:	b.eq	1960c <PyInit__decimal@@Base+0x8684>  // b.none
   1956c:	cbnz	w4, 19590 <PyInit__decimal@@Base+0x8608>
   19570:	mov	w0, #0x1                   	// #1
   19574:	ldrb	w1, [x13]
   19578:	mov	w2, #0xfffffffe            	// #-2
   1957c:	ldp	x29, x30, [sp], #112
   19580:	and	w1, w1, #0x1
   19584:	mul	w1, w1, w2
   19588:	madd	w0, w1, w0, w0
   1958c:	ret
   19590:	ubfx	x2, x2, #2, #1
   19594:	ubfx	x0, x3, #2, #1
   19598:	cmp	w2, w0
   1959c:	b.ne	19604 <PyInit__decimal@@Base+0x867c>  // b.any
   195a0:	ldr	x0, [x13, #24]
   195a4:	ldr	x1, [x1, #24]
   195a8:	cmp	x0, #0x0
   195ac:	b.le	195ec <PyInit__decimal@@Base+0x8664>
   195b0:	cmp	x1, #0x0
   195b4:	b.le	195ec <PyInit__decimal@@Base+0x8664>
   195b8:	add	x4, sp, #0x10
   195bc:	mov	x1, x13
   195c0:	mov	x0, x4
   195c4:	bl	16248 <PyInit__decimal@@Base+0x52c0>
   195c8:	mov	x1, x14
   195cc:	add	x0, sp, #0x40
   195d0:	bl	16248 <PyInit__decimal@@Base+0x52c0>
   195d4:	mov	x1, x0
   195d8:	mov	x0, x4
   195dc:	str	xzr, [sp, #24]
   195e0:	str	xzr, [sp, #72]
   195e4:	bl	172f8 <PyInit__decimal@@Base+0x6370>
   195e8:	b	19574 <PyInit__decimal@@Base+0x85ec>
   195ec:	cmp	x0, #0x0
   195f0:	cset	w0, gt
   195f4:	cmp	x1, #0x0
   195f8:	cset	w1, gt
   195fc:	sub	w0, w0, w1
   19600:	b	19574 <PyInit__decimal@@Base+0x85ec>
   19604:	sub	w0, w2, w0
   19608:	b	19574 <PyInit__decimal@@Base+0x85ec>
   1960c:	cbnz	w4, 1962c <PyInit__decimal@@Base+0x86a4>
   19610:	bl	172f8 <PyInit__decimal@@Base+0x6370>
   19614:	cbnz	w0, 19574 <PyInit__decimal@@Base+0x85ec>
   19618:	ldr	x2, [x13, #8]
   1961c:	ldr	x1, [x14, #8]
   19620:	cmp	x2, x1
   19624:	b.eq	19574 <PyInit__decimal@@Base+0x85ec>  // b.none
   19628:	b.ge	19570 <PyInit__decimal@@Base+0x85e8>  // b.tcont
   1962c:	mov	w0, #0xffffffff            	// #-1
   19630:	b	19574 <PyInit__decimal@@Base+0x85ec>
   19634:	stp	x29, x30, [sp, #-32]!
   19638:	mov	x15, x0
   1963c:	mov	x0, x1
   19640:	mov	x29, sp
   19644:	mov	x1, x2
   19648:	str	x19, [sp, #16]
   1964c:	bl	19530 <PyInit__decimal@@Base+0x85a8>
   19650:	cmp	w0, #0x0
   19654:	mov	w19, w0
   19658:	lsr	w1, w0, #31
   1965c:	cset	x2, ne  // ne = any
   19660:	mov	x0, x15
   19664:	mov	x3, #0x0                   	// #0
   19668:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   1966c:	mov	w0, w19
   19670:	ldr	x19, [sp, #16]
   19674:	ldp	x29, x30, [sp], #32
   19678:	ret
   1967c:	stp	x29, x30, [sp, #-112]!
   19680:	mov	x5, x1
   19684:	mov	x1, x0
   19688:	add	x4, sp, #0x10
   1968c:	mov	x29, sp
   19690:	mov	x0, x4
   19694:	bl	16248 <PyInit__decimal@@Base+0x52c0>
   19698:	mov	x1, x5
   1969c:	add	x0, sp, #0x40
   196a0:	bl	16248 <PyInit__decimal@@Base+0x52c0>
   196a4:	ldrb	w1, [sp, #16]
   196a8:	and	w1, w1, #0xfffffffe
   196ac:	strb	w1, [sp, #16]
   196b0:	ldrb	w1, [sp, #64]
   196b4:	and	w1, w1, #0xfffffffe
   196b8:	strb	w1, [sp, #64]
   196bc:	mov	x1, x0
   196c0:	mov	x0, x4
   196c4:	bl	19530 <PyInit__decimal@@Base+0x85a8>
   196c8:	ldp	x29, x30, [sp], #112
   196cc:	ret
   196d0:	stp	x29, x30, [sp, #-32]!
   196d4:	mov	x15, x0
   196d8:	mov	x0, x1
   196dc:	mov	x29, sp
   196e0:	mov	x1, x2
   196e4:	str	x19, [sp, #16]
   196e8:	bl	1967c <PyInit__decimal@@Base+0x86f4>
   196ec:	cmp	w0, #0x0
   196f0:	mov	w19, w0
   196f4:	lsr	w1, w0, #31
   196f8:	cset	x2, ne  // ne = any
   196fc:	mov	x0, x15
   19700:	mov	x3, #0x0                   	// #0
   19704:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   19708:	mov	w0, w19
   1970c:	ldr	x19, [sp, #16]
   19710:	ldp	x29, x30, [sp], #32
   19714:	ret
   19718:	stp	x29, x30, [sp, #-48]!
   1971c:	mov	x29, sp
   19720:	stp	x19, x20, [sp, #16]
   19724:	mov	x19, x0
   19728:	mov	x20, x1
   1972c:	ldr	x0, [x1, #24]
   19730:	stp	x21, x22, [sp, #32]
   19734:	mov	x22, x2
   19738:	ldr	x1, [x1, #40]
   1973c:	mov	x2, x3
   19740:	add	x0, x1, x0, lsl #3
   19744:	ldur	x0, [x0, #-8]
   19748:	cbz	x0, 19750 <PyInit__decimal@@Base+0x87c8>
   1974c:	cbnz	x22, 19768 <PyInit__decimal@@Base+0x87e0>
   19750:	mov	x1, x20
   19754:	mov	x0, x19
   19758:	ldp	x19, x20, [sp, #16]
   1975c:	ldp	x21, x22, [sp, #32]
   19760:	ldp	x29, x30, [sp], #48
   19764:	b	18b60 <PyInit__decimal@@Base+0x7bd8>
   19768:	ldr	x0, [x20, #16]
   1976c:	add	x1, x22, x0
   19770:	mov	x0, #0x13                  	// #19
   19774:	sdiv	x21, x1, x0
   19778:	msub	x0, x21, x0, x1
   1977c:	cbz	x0, 19784 <PyInit__decimal@@Base+0x87fc>
   19780:	add	x21, x21, #0x1
   19784:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   19788:	ldr	x1, [x0, #1688]
   1978c:	ldr	x0, [x19, #32]
   19790:	cmp	x1, x21
   19794:	csel	x1, x1, x21, ge  // ge = tcont
   19798:	cmp	x1, x0
   1979c:	b.ne	197ec <PyInit__decimal@@Base+0x8864>  // b.any
   197a0:	ldr	x3, [x20, #24]
   197a4:	mov	x2, x21
   197a8:	ldr	x0, [x19, #40]
   197ac:	mov	x4, x22
   197b0:	ldr	x1, [x20, #40]
   197b4:	bl	12368 <PyInit__decimal@@Base+0x13e0>
   197b8:	ldrb	w1, [x20]
   197bc:	ldrb	w0, [x19]
   197c0:	bfxil	w0, w1, #0, #4
   197c4:	strb	w0, [x19]
   197c8:	ldp	x0, x2, [x20, #8]
   197cc:	str	x21, [x19, #24]
   197d0:	add	x2, x2, x22
   197d4:	stp	x0, x2, [x19, #8]
   197d8:	mov	w0, #0x1                   	// #1
   197dc:	ldp	x19, x20, [sp, #16]
   197e0:	ldp	x21, x22, [sp, #32]
   197e4:	ldp	x29, x30, [sp], #48
   197e8:	ret
   197ec:	ldrb	w3, [x19]
   197f0:	tbz	w3, #5, 1980c <PyInit__decimal@@Base+0x8884>
   197f4:	cmp	x1, x0
   197f8:	b.le	197a0 <PyInit__decimal@@Base+0x8818>
   197fc:	mov	x0, x19
   19800:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   19804:	cbnz	w0, 197a0 <PyInit__decimal@@Base+0x8818>
   19808:	b	197dc <PyInit__decimal@@Base+0x8854>
   1980c:	mov	x0, x19
   19810:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   19814:	b	19804 <PyInit__decimal@@Base+0x887c>
   19818:	sub	sp, sp, #0x2d0
   1981c:	stp	x29, x30, [sp]
   19820:	mov	x29, sp
   19824:	stp	x19, x20, [sp, #16]
   19828:	mov	x19, x0
   1982c:	mov	w0, #0x30                  	// #48
   19830:	strb	w0, [sp, #112]
   19834:	mov	x0, #0x40                  	// #64
   19838:	stp	xzr, x0, [sp, #136]
   1983c:	add	x0, sp, #0xd0
   19840:	mov	x20, x2
   19844:	str	x0, [sp, #152]
   19848:	mov	w0, #0xffffff90            	// #-112
   1984c:	strb	w0, [sp, #160]
   19850:	add	x0, sp, #0x68
   19854:	stp	x25, x26, [sp, #64]
   19858:	mov	x26, x1
   1985c:	and	w25, w3, #0xff
   19860:	str	x0, [sp, #200]
   19864:	ldr	x1, [x1, #8]
   19868:	stp	x21, x22, [sp, #32]
   1986c:	mov	x22, #0x1                   	// #1
   19870:	ldr	x0, [x2, #8]
   19874:	stp	x23, x24, [sp, #48]
   19878:	mov	x24, x4
   1987c:	stp	x27, x28, [sp, #80]
   19880:	mov	x23, x5
   19884:	cmp	x1, x0
   19888:	str	x22, [sp, #104]
   1988c:	stp	xzr, xzr, [sp, #120]
   19890:	stp	xzr, x22, [sp, #168]
   19894:	stp	x22, x22, [sp, #184]
   19898:	b.eq	199b8 <PyInit__decimal@@Base+0x8a30>  // b.none
   1989c:	b.ge	199ac <PyInit__decimal@@Base+0x8a24>  // b.tcont
   198a0:	mov	x21, x2
   198a4:	mov	x20, x26
   198a8:	ldr	x0, [x21, #24]
   198ac:	ldr	x1, [x21, #40]
   198b0:	add	x0, x1, x0, lsl #3
   198b4:	ldur	x0, [x0, #-8]
   198b8:	cbz	x0, 199c0 <PyInit__decimal@@Base+0x8a38>
   198bc:	ldp	x2, x3, [x21, #8]
   198c0:	ldr	x1, [x24]
   198c4:	mvn	x0, x1
   198c8:	cmp	x3, x1
   198cc:	add	x0, x0, x3
   198d0:	ldp	x1, x3, [x20, #8]
   198d4:	csel	x0, x0, xzr, le
   198d8:	sub	x4, x2, #0x1
   198dc:	add	x0, x0, x4
   198e0:	add	x1, x1, x3
   198e4:	sub	x1, x1, #0x1
   198e8:	cmp	x0, x1
   198ec:	b.le	19928 <PyInit__decimal@@Base+0x89a0>
   198f0:	ldrb	w1, [x20]
   198f4:	mov	w3, #0xffffff90            	// #-112
   198f8:	str	x0, [sp, #168]
   198fc:	and	w1, w1, #0xf
   19900:	orr	w1, w1, w3
   19904:	strb	w1, [sp, #160]
   19908:	ldr	x0, [x20, #24]
   1990c:	ldr	x1, [x20, #40]
   19910:	add	x20, sp, #0xa0
   19914:	add	x0, x1, x0, lsl #3
   19918:	ldur	x0, [x0, #-8]
   1991c:	cmp	x0, #0x0
   19920:	cset	x0, ne  // ne = any
   19924:	str	x0, [sp, #104]
   19928:	ldr	x0, [x20, #8]
   1992c:	add	x27, sp, #0x70
   19930:	mov	x3, x23
   19934:	mov	x1, x21
   19938:	sub	x2, x2, x0
   1993c:	mov	x0, x27
   19940:	bl	19718 <PyInit__decimal@@Base+0x8790>
   19944:	cbnz	w0, 19a84 <PyInit__decimal@@Base+0x8afc>
   19948:	mov	x2, x23
   1994c:	mov	x0, x19
   19950:	mov	w1, #0x200                 	// #512
   19954:	bl	18904 <PyInit__decimal@@Base+0x797c>
   19958:	ldrb	w0, [sp, #112]
   1995c:	tst	w0, #0xe0
   19960:	b.ne	19974 <PyInit__decimal@@Base+0x89ec>  // b.any
   19964:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   19968:	ldr	x1, [x0, #1720]
   1996c:	ldr	x0, [sp, #152]
   19970:	blr	x1
   19974:	ldrb	w0, [sp, #112]
   19978:	tbnz	w0, #4, 1998c <PyInit__decimal@@Base+0x8a04>
   1997c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   19980:	ldr	x1, [x0, #1720]
   19984:	add	x0, sp, #0x70
   19988:	blr	x1
   1998c:	ldp	x29, x30, [sp]
   19990:	ldp	x19, x20, [sp, #16]
   19994:	ldp	x21, x22, [sp, #32]
   19998:	ldp	x23, x24, [sp, #48]
   1999c:	ldp	x25, x26, [sp, #64]
   199a0:	ldp	x27, x28, [sp, #80]
   199a4:	add	sp, sp, #0x2d0
   199a8:	ret
   199ac:	mov	x21, x26
   199b0:	mov	w22, #0x0                   	// #0
   199b4:	b	198a8 <PyInit__decimal@@Base+0x8920>
   199b8:	mov	x21, x26
   199bc:	mov	w22, #0x0                   	// #0
   199c0:	ldr	x0, [x20, #8]
   199c4:	ldr	x1, [x21, #24]
   199c8:	str	x0, [x19, #8]
   199cc:	ldr	x0, [x20, #24]
   199d0:	cmp	x1, x0
   199d4:	b.ge	199e8 <PyInit__decimal@@Base+0x8a60>  // b.tcont
   199d8:	mov	x0, x21
   199dc:	add	w22, w22, #0x1
   199e0:	mov	x21, x20
   199e4:	mov	x20, x0
   199e8:	adrp	x27, 45000 <PyInit__decimal@@Base+0x34078>
   199ec:	ldr	x28, [x21, #24]
   199f0:	ldr	x1, [x27, #1688]
   199f4:	ldr	x0, [x19, #32]
   199f8:	cmp	x1, x28
   199fc:	csel	x1, x1, x28, ge  // ge = tcont
   19a00:	cmp	x1, x0
   19a04:	b.ne	19a8c <PyInit__decimal@@Base+0x8b04>  // b.any
   19a08:	ldrb	w5, [x26]
   19a0c:	ldr	x4, [x20, #24]
   19a10:	and	w5, w5, #0x1
   19a14:	cmp	w25, w5
   19a18:	ldr	x3, [x21, #24]
   19a1c:	ldr	x0, [x19, #40]
   19a20:	ldr	x2, [x20, #40]
   19a24:	ldr	x1, [x21, #40]
   19a28:	b.ne	19af4 <PyInit__decimal@@Base+0x8b6c>  // b.any
   19a2c:	bl	11b58 <PyInit__decimal@@Base+0xbd0>
   19a30:	mov	x20, x0
   19a34:	cbz	x0, 19a64 <PyInit__decimal@@Base+0x8adc>
   19a38:	ldr	x28, [x21, #24]
   19a3c:	ldr	x1, [x27, #1688]
   19a40:	add	x28, x28, #0x1
   19a44:	ldr	x0, [x19, #32]
   19a48:	cmp	x1, x28
   19a4c:	csel	x1, x1, x28, ge  // ge = tcont
   19a50:	cmp	x1, x0
   19a54:	b.ne	19ac0 <PyInit__decimal@@Base+0x8b38>  // b.any
   19a58:	ldr	x0, [x19, #40]
   19a5c:	add	x0, x0, x28, lsl #3
   19a60:	stur	x20, [x0, #-8]
   19a64:	ldrb	w1, [x19]
   19a68:	str	x28, [x19, #24]
   19a6c:	and	w1, w1, #0xfffffff0
   19a70:	orr	w1, w25, w1
   19a74:	strb	w1, [x19]
   19a78:	mov	x0, x19
   19a7c:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   19a80:	b	19958 <PyInit__decimal@@Base+0x89d0>
   19a84:	mov	x21, x27
   19a88:	b	199c0 <PyInit__decimal@@Base+0x8a38>
   19a8c:	ldrb	w2, [x19]
   19a90:	tbz	w2, #5, 19ab0 <PyInit__decimal@@Base+0x8b28>
   19a94:	cmp	x1, x0
   19a98:	b.le	19a08 <PyInit__decimal@@Base+0x8a80>
   19a9c:	mov	x2, x23
   19aa0:	mov	x0, x19
   19aa4:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   19aa8:	cbnz	w0, 19a08 <PyInit__decimal@@Base+0x8a80>
   19aac:	b	19958 <PyInit__decimal@@Base+0x89d0>
   19ab0:	mov	x2, x23
   19ab4:	mov	x0, x19
   19ab8:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   19abc:	b	19aa8 <PyInit__decimal@@Base+0x8b20>
   19ac0:	ldrb	w2, [x19]
   19ac4:	tbz	w2, #5, 19ae4 <PyInit__decimal@@Base+0x8b5c>
   19ac8:	cmp	x1, x0
   19acc:	b.le	19a58 <PyInit__decimal@@Base+0x8ad0>
   19ad0:	mov	x2, x23
   19ad4:	mov	x0, x19
   19ad8:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   19adc:	cbnz	w0, 19a58 <PyInit__decimal@@Base+0x8ad0>
   19ae0:	b	19958 <PyInit__decimal@@Base+0x89d0>
   19ae4:	mov	x2, x23
   19ae8:	mov	x0, x19
   19aec:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   19af0:	b	19adc <PyInit__decimal@@Base+0x8b54>
   19af4:	cmp	x3, x4
   19af8:	b.ne	19b28 <PyInit__decimal@@Base+0x8ba0>  // b.any
   19afc:	sub	x3, x3, #0x1
   19b00:	tbnz	x3, #63, 19b28 <PyInit__decimal@@Base+0x8ba0>
   19b04:	ldr	x5, [x1, x3, lsl #3]
   19b08:	ldr	x4, [x2, x3, lsl #3]
   19b0c:	cmp	x5, x4
   19b10:	b.eq	19afc <PyInit__decimal@@Base+0x8b74>  // b.none
   19b14:	b.cs	19b28 <PyInit__decimal@@Base+0x8ba0>  // b.hs, b.nlast
   19b18:	mov	x1, x21
   19b1c:	add	w22, w22, #0x1
   19b20:	mov	x21, x20
   19b24:	mov	x20, x1
   19b28:	ldr	x4, [x20, #24]
   19b2c:	ldr	x3, [x21, #24]
   19b30:	ldr	x2, [x20, #40]
   19b34:	ldr	x1, [x21, #40]
   19b38:	bl	11d84 <PyInit__decimal@@Base+0xdfc>
   19b3c:	ldr	x1, [x21, #24]
   19b40:	ldr	x0, [x19, #40]
   19b44:	bl	161c8 <PyInit__decimal@@Base+0x5240>
   19b48:	mov	x20, x0
   19b4c:	ldr	x1, [x27, #1688]
   19b50:	cmp	x1, x0
   19b54:	csel	x1, x1, x0, ge  // ge = tcont
   19b58:	ldr	x0, [x19, #32]
   19b5c:	cmp	x1, x0
   19b60:	b.eq	19b80 <PyInit__decimal@@Base+0x8bf8>  // b.none
   19b64:	ldrb	w2, [x19]
   19b68:	tbz	w2, #5, 19bd0 <PyInit__decimal@@Base+0x8c48>
   19b6c:	cmp	x1, x0
   19b70:	b.le	19b80 <PyInit__decimal@@Base+0x8bf8>
   19b74:	mov	x2, x23
   19b78:	mov	x0, x19
   19b7c:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   19b80:	str	x20, [x19, #24]
   19b84:	tbnz	w22, #0, 19b90 <PyInit__decimal@@Base+0x8c08>
   19b88:	ldrb	w1, [x26]
   19b8c:	and	w25, w1, #0x1
   19b90:	ldr	x0, [x19, #40]
   19b94:	ldrb	w1, [x19]
   19b98:	add	x20, x0, x20, lsl #3
   19b9c:	and	w1, w1, #0xf0
   19ba0:	orr	w1, w1, w25
   19ba4:	strb	w1, [x19]
   19ba8:	ldur	x0, [x20, #-8]
   19bac:	cbnz	x0, 19a78 <PyInit__decimal@@Base+0x8af0>
   19bb0:	and	w0, w1, #0xfe
   19bb4:	strb	w0, [x19]
   19bb8:	orr	w1, w0, #0x1
   19bbc:	ldr	w2, [x24, #36]
   19bc0:	cmp	w2, #0x3
   19bc4:	csel	w0, w1, w0, eq  // eq = none
   19bc8:	strb	w0, [x19]
   19bcc:	b	19a78 <PyInit__decimal@@Base+0x8af0>
   19bd0:	mov	x2, x23
   19bd4:	mov	x0, x19
   19bd8:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   19bdc:	b	19b80 <PyInit__decimal@@Base+0x8bf8>
   19be0:	mov	x3, x2
   19be4:	ldrb	w2, [x0]
   19be8:	tst	w2, #0xe
   19bec:	b.ne	19c54 <PyInit__decimal@@Base+0x8ccc>  // b.any
   19bf0:	stp	x29, x30, [sp, #-48]!
   19bf4:	mov	x29, sp
   19bf8:	ldr	x2, [x0, #24]
   19bfc:	stp	x19, x20, [sp, #16]
   19c00:	mov	x19, x0
   19c04:	ldr	x4, [x0, #40]
   19c08:	add	x2, x4, x2, lsl #3
   19c0c:	ldur	x2, [x2, #-8]
   19c10:	str	x21, [sp, #32]
   19c14:	cbz	x2, 19c44 <PyInit__decimal@@Base+0x8cbc>
   19c18:	ldr	x21, [x1]
   19c1c:	ldr	x20, [x0, #16]
   19c20:	cmp	x20, x21
   19c24:	b.ge	19c44 <PyInit__decimal@@Base+0x8cbc>  // b.tcont
   19c28:	sub	x2, x21, x20
   19c2c:	mov	x1, x0
   19c30:	bl	19718 <PyInit__decimal@@Base+0x8790>
   19c34:	ldr	x0, [x19, #8]
   19c38:	add	x20, x20, x0
   19c3c:	sub	x20, x20, x21
   19c40:	str	x20, [x19, #8]
   19c44:	ldp	x19, x20, [sp, #16]
   19c48:	ldr	x21, [sp, #32]
   19c4c:	ldp	x29, x30, [sp], #48
   19c50:	ret
   19c54:	ret
   19c58:	stp	x29, x30, [sp, #-64]!
   19c5c:	mov	x29, sp
   19c60:	stp	x19, x20, [sp, #16]
   19c64:	mov	x19, x0
   19c68:	ldr	x0, [x0, #40]
   19c6c:	str	x21, [sp, #32]
   19c70:	mov	x21, x1
   19c74:	ldr	x1, [x19, #24]
   19c78:	add	x2, x0, x1, lsl #3
   19c7c:	ldur	x20, [x2, #-8]
   19c80:	cbz	x20, 19ca8 <PyInit__decimal@@Base+0x8d20>
   19c84:	cbz	x21, 19d40 <PyInit__decimal@@Base+0x8db8>
   19c88:	ldr	x2, [x19, #16]
   19c8c:	cmp	x2, x21
   19c90:	b.gt	19cbc <PyInit__decimal@@Base+0x8d34>
   19c94:	cset	w2, eq  // eq = none
   19c98:	bl	168a4 <PyInit__decimal@@Base+0x591c>
   19c9c:	mov	x20, x0
   19ca0:	mov	x0, x19
   19ca4:	bl	184a0 <PyInit__decimal@@Base+0x7518>
   19ca8:	mov	x0, x20
   19cac:	ldp	x19, x20, [sp, #16]
   19cb0:	ldr	x21, [sp, #32]
   19cb4:	ldp	x29, x30, [sp], #64
   19cb8:	ret
   19cbc:	mov	x3, x21
   19cc0:	mov	x2, x1
   19cc4:	mov	x1, x0
   19cc8:	bl	12444 <PyInit__decimal@@Base+0x14bc>
   19ccc:	ldr	x1, [x19, #16]
   19cd0:	mov	x3, #0x13                  	// #19
   19cd4:	mov	x20, x0
   19cd8:	sub	x1, x1, x21
   19cdc:	str	x1, [x19, #16]
   19ce0:	sdiv	x21, x1, x3
   19ce4:	msub	x1, x21, x3, x1
   19ce8:	cbz	x1, 19cf0 <PyInit__decimal@@Base+0x8d68>
   19cec:	add	x21, x21, #0x1
   19cf0:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   19cf4:	ldr	x1, [x0, #1688]
   19cf8:	ldr	x0, [x19, #32]
   19cfc:	cmp	x1, x21
   19d00:	csel	x1, x1, x21, ge  // ge = tcont
   19d04:	cmp	x1, x0
   19d08:	b.eq	19d28 <PyInit__decimal@@Base+0x8da0>  // b.none
   19d0c:	ldrb	w2, [x19]
   19d10:	tbz	w2, #5, 19d30 <PyInit__decimal@@Base+0x8da8>
   19d14:	cmp	x1, x0
   19d18:	b.le	19d28 <PyInit__decimal@@Base+0x8da0>
   19d1c:	add	x2, sp, #0x3c
   19d20:	mov	x0, x19
   19d24:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   19d28:	str	x21, [x19, #24]
   19d2c:	b	19ca8 <PyInit__decimal@@Base+0x8d20>
   19d30:	add	x2, sp, #0x3c
   19d34:	mov	x0, x19
   19d38:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   19d3c:	b	19d28 <PyInit__decimal@@Base+0x8da0>
   19d40:	mov	x20, #0x0                   	// #0
   19d44:	b	19ca8 <PyInit__decimal@@Base+0x8d20>
   19d48:	stp	x29, x30, [sp, #-64]!
   19d4c:	mov	x29, sp
   19d50:	stp	x23, x24, [sp, #48]
   19d54:	ldp	x23, x24, [x0, #8]
   19d58:	stp	x19, x20, [sp, #16]
   19d5c:	mov	x20, x2
   19d60:	ldr	x2, [x1, #8]
   19d64:	stp	x21, x22, [sp, #32]
   19d68:	mov	x19, x0
   19d6c:	add	x24, x23, x24
   19d70:	mov	x21, x1
   19d74:	sub	x24, x24, #0x1
   19d78:	cmp	x2, x24
   19d7c:	b.ge	19e60 <PyInit__decimal@@Base+0x8ed8>  // b.tcont
   19d80:	ldr	x0, [x0, #24]
   19d84:	ldr	x1, [x19, #40]
   19d88:	add	x0, x1, x0, lsl #3
   19d8c:	ldur	x0, [x0, #-8]
   19d90:	cbnz	x0, 19dc4 <PyInit__decimal@@Base+0x8e3c>
   19d94:	ldr	w0, [x21, #40]
   19d98:	str	x2, [x19, #8]
   19d9c:	cbz	w0, 19db0 <PyInit__decimal@@Base+0x8e28>
   19da0:	ldr	x0, [x21]
   19da4:	add	x2, x2, #0x1
   19da8:	sub	x2, x2, x0
   19dac:	str	x2, [x19, #8]
   19db0:	mov	x0, x19
   19db4:	bl	184a0 <PyInit__decimal@@Base+0x7518>
   19db8:	ldr	w0, [x20]
   19dbc:	orr	w0, w0, #0x1
   19dc0:	b	19e34 <PyInit__decimal@@Base+0x8eac>
   19dc4:	ldr	w1, [x21, #36]
   19dc8:	cmp	w1, #0x8
   19dcc:	b.hi	19e5c <PyInit__decimal@@Base+0x8ed4>  // b.pmore
   19dd0:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   19dd4:	add	x0, x0, #0xfa0
   19dd8:	ldrb	w0, [x0, w1, uxtw]
   19ddc:	adr	x1, 19de8 <PyInit__decimal@@Base+0x8e60>
   19de0:	add	x0, x1, w0, sxtb #2
   19de4:	br	x0
   19de8:	ldrb	w1, [x19]
   19dec:	mov	w2, #0x2                   	// #2
   19df0:	and	w1, w1, #0x1
   19df4:	mov	x0, x19
   19df8:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   19dfc:	b	19e28 <PyInit__decimal@@Base+0x8ea0>
   19e00:	ldrb	w0, [x19]
   19e04:	tbz	w0, #0, 19e3c <PyInit__decimal@@Base+0x8eb4>
   19e08:	mov	x1, x21
   19e0c:	mov	x0, x19
   19e10:	mov	x2, x20
   19e14:	bl	18510 <PyInit__decimal@@Base+0x7588>
   19e18:	ldp	x1, x0, [x21]
   19e1c:	add	x0, x0, #0x1
   19e20:	sub	x0, x0, x1
   19e24:	str	x0, [x19, #8]
   19e28:	ldr	w0, [x20]
   19e2c:	mov	w1, #0x1840                	// #6208
   19e30:	orr	w0, w0, w1
   19e34:	str	w0, [x20]
   19e38:	b	19f60 <PyInit__decimal@@Base+0x8fd8>
   19e3c:	mov	w2, #0x2                   	// #2
   19e40:	mov	w1, #0x0                   	// #0
   19e44:	b	19df4 <PyInit__decimal@@Base+0x8e6c>
   19e48:	ldrb	w0, [x19]
   19e4c:	tbz	w0, #0, 19e08 <PyInit__decimal@@Base+0x8e80>
   19e50:	mov	w2, #0x2                   	// #2
   19e54:	mov	w1, #0x1                   	// #1
   19e58:	b	19df4 <PyInit__decimal@@Base+0x8e6c>
   19e5c:	bl	6860 <abort@plt>
   19e60:	ldr	w1, [x1, #40]
   19e64:	cbz	w1, 19ed8 <PyInit__decimal@@Base+0x8f50>
   19e68:	ldr	x1, [x21]
   19e6c:	add	x2, x2, #0x1
   19e70:	sub	x22, x2, x1
   19e74:	cmp	x23, x22
   19e78:	b.le	19ed8 <PyInit__decimal@@Base+0x8f50>
   19e7c:	add	x1, x23, x1
   19e80:	mov	x3, x20
   19e84:	sub	x2, x1, x2
   19e88:	mov	x1, x0
   19e8c:	bl	19718 <PyInit__decimal@@Base+0x8790>
   19e90:	cbz	w0, 19f60 <PyInit__decimal@@Base+0x8fd8>
   19e94:	sub	x23, x22, x23
   19e98:	ldr	w0, [x20]
   19e9c:	ldr	x22, [x19, #8]
   19ea0:	orr	w1, w0, #0x1
   19ea4:	ldr	x2, [x19, #40]
   19ea8:	add	x23, x22, x23
   19eac:	str	x23, [x19, #8]
   19eb0:	str	w1, [x20]
   19eb4:	ldr	x1, [x19, #24]
   19eb8:	add	x1, x2, x1, lsl #3
   19ebc:	ldur	x1, [x1, #-8]
   19ec0:	cbz	x1, 19f60 <PyInit__decimal@@Base+0x8fd8>
   19ec4:	ldr	x1, [x21, #16]
   19ec8:	cmp	x1, x24
   19ecc:	b.le	19f60 <PyInit__decimal@@Base+0x8fd8>
   19ed0:	mov	w1, #0x2001                	// #8193
   19ed4:	b	19e30 <PyInit__decimal@@Base+0x8ea8>
   19ed8:	ldr	x22, [x21, #16]
   19edc:	cmp	x22, x24
   19ee0:	b.le	19f60 <PyInit__decimal@@Base+0x8fd8>
   19ee4:	ldr	x0, [x21]
   19ee8:	add	x22, x22, #0x1
   19eec:	ldr	x1, [x19, #40]
   19ef0:	sub	x22, x22, x0
   19ef4:	ldr	x0, [x19, #24]
   19ef8:	add	x0, x1, x0, lsl #3
   19efc:	ldur	x0, [x0, #-8]
   19f00:	cbnz	x0, 19f14 <PyInit__decimal@@Base+0x8f8c>
   19f04:	cmp	x23, x22
   19f08:	b.ge	19f60 <PyInit__decimal@@Base+0x8fd8>  // b.tcont
   19f0c:	str	x22, [x19, #8]
   19f10:	b	19db0 <PyInit__decimal@@Base+0x8e28>
   19f14:	ldr	w0, [x20]
   19f18:	cmp	x23, x22
   19f1c:	orr	w0, w0, #0x2000
   19f20:	str	w0, [x20]
   19f24:	b.ge	19f60 <PyInit__decimal@@Base+0x8fd8>  // b.tcont
   19f28:	sub	x1, x22, x23
   19f2c:	mov	x0, x19
   19f30:	bl	19c58 <PyInit__decimal@@Base+0x8cd0>
   19f34:	str	x22, [x19, #8]
   19f38:	sxtw	x1, w0
   19f3c:	mov	x23, x0
   19f40:	mov	x3, x20
   19f44:	mov	x2, x21
   19f48:	mov	x0, x19
   19f4c:	bl	180b8 <PyInit__decimal@@Base+0x7130>
   19f50:	ldr	w1, [x20]
   19f54:	cbnz	w23, 19f74 <PyInit__decimal@@Base+0x8fec>
   19f58:	orr	w1, w1, #0x1000
   19f5c:	str	w1, [x20]
   19f60:	ldp	x19, x20, [sp, #16]
   19f64:	ldp	x21, x22, [sp, #32]
   19f68:	ldp	x23, x24, [sp, #48]
   19f6c:	ldp	x29, x30, [sp], #64
   19f70:	ret
   19f74:	mov	w0, #0x5040                	// #20544
   19f78:	orr	w1, w1, w0
   19f7c:	ldr	x0, [x19, #24]
   19f80:	str	w1, [x20]
   19f84:	ldr	x1, [x19, #40]
   19f88:	add	x0, x1, x0, lsl #3
   19f8c:	ldur	x0, [x0, #-8]
   19f90:	cbnz	x0, 19f60 <PyInit__decimal@@Base+0x8fd8>
   19f94:	b	19db0 <PyInit__decimal@@Base+0x8e28>
   19f98:	ldrb	w3, [x0]
   19f9c:	tst	w3, #0xe
   19fa0:	b.eq	19fb0 <PyInit__decimal@@Base+0x9028>  // b.none
   19fa4:	tst	w3, #0xc
   19fa8:	b.eq	1a0d4 <PyInit__decimal@@Base+0x914c>  // b.none
   19fac:	b	17f7c <PyInit__decimal@@Base+0x6ff4>
   19fb0:	stp	x29, x30, [sp, #-64]!
   19fb4:	mov	x29, sp
   19fb8:	stp	x19, x20, [sp, #16]
   19fbc:	mov	x19, x0
   19fc0:	mov	x20, x1
   19fc4:	stp	x21, x22, [sp, #32]
   19fc8:	mov	x21, x2
   19fcc:	str	x23, [sp, #48]
   19fd0:	bl	19d48 <PyInit__decimal@@Base+0x8dc0>
   19fd4:	ldrb	w0, [x19]
   19fd8:	tst	w0, #0xe
   19fdc:	b.ne	1a084 <PyInit__decimal@@Base+0x90fc>  // b.any
   19fe0:	ldr	x1, [x20]
   19fe4:	ldr	x22, [x19, #16]
   19fe8:	cmp	x22, x1
   19fec:	b.le	1a084 <PyInit__decimal@@Base+0x90fc>
   19ff0:	sub	x22, x22, x1
   19ff4:	mov	x0, x19
   19ff8:	mov	x1, x22
   19ffc:	bl	19c58 <PyInit__decimal@@Base+0x8cd0>
   1a000:	ldr	x1, [x19, #8]
   1a004:	mov	x23, x0
   1a008:	ldr	w2, [x20, #36]
   1a00c:	mov	x0, x19
   1a010:	add	x1, x1, x22
   1a014:	str	x1, [x19, #8]
   1a018:	mov	x1, x23
   1a01c:	bl	173a0 <PyInit__decimal@@Base+0x6418>
   1a020:	cbz	w0, 1a068 <PyInit__decimal@@Base+0x90e0>
   1a024:	ldr	x1, [x19, #24]
   1a028:	ldr	x0, [x19, #40]
   1a02c:	bl	11d38 <PyInit__decimal@@Base+0xdb0>
   1a030:	cbz	x0, 1a098 <PyInit__decimal@@Base+0x9110>
   1a034:	ldr	x0, [x19, #24]
   1a038:	ldr	x1, [x19, #40]
   1a03c:	add	x0, x1, x0, lsl #3
   1a040:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   1a044:	ldr	x1, [x1, #2936]
   1a048:	stur	x1, [x0, #-8]
   1a04c:	ldr	x0, [x19, #8]
   1a050:	add	x0, x0, #0x1
   1a054:	str	x0, [x19, #8]
   1a058:	mov	x2, x21
   1a05c:	mov	x1, x20
   1a060:	mov	x0, x19
   1a064:	bl	19d48 <PyInit__decimal@@Base+0x8dc0>
   1a068:	ldr	w1, [x21]
   1a06c:	cmp	x23, #0x0
   1a070:	mov	w0, #0x1040                	// #4160
   1a074:	orr	w0, w1, w0
   1a078:	orr	w1, w1, #0x1000
   1a07c:	csel	w1, w1, w0, eq  // eq = none
   1a080:	str	w1, [x21]
   1a084:	ldp	x19, x20, [sp, #16]
   1a088:	ldp	x21, x22, [sp, #32]
   1a08c:	ldr	x23, [sp, #48]
   1a090:	ldp	x29, x30, [sp], #64
   1a094:	ret
   1a098:	mov	x0, x19
   1a09c:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   1a0a0:	ldr	x0, [x20]
   1a0a4:	ldr	x1, [x19, #16]
   1a0a8:	cmp	x1, x0
   1a0ac:	b.le	1a068 <PyInit__decimal@@Base+0x90e0>
   1a0b0:	mov	x0, x19
   1a0b4:	mov	x1, #0x1                   	// #1
   1a0b8:	bl	19c58 <PyInit__decimal@@Base+0x8cd0>
   1a0bc:	ldr	x0, [x19, #8]
   1a0c0:	add	x0, x0, #0x1
   1a0c4:	str	x0, [x19, #8]
   1a0c8:	ldr	x0, [x20]
   1a0cc:	str	x0, [x19, #16]
   1a0d0:	b	1a058 <PyInit__decimal@@Base+0x90d0>
   1a0d4:	ret
   1a0d8:	stp	x29, x30, [sp, #-16]!
   1a0dc:	mov	x4, x1
   1a0e0:	mov	x7, x2
   1a0e4:	mov	x29, sp
   1a0e8:	mov	x8, x3
   1a0ec:	tbz	x1, #63, 1a108 <PyInit__decimal@@Base+0x9180>
   1a0f0:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   1a0f4:	cmp	x4, x1
   1a0f8:	b.eq	1a100 <PyInit__decimal@@Base+0x9178>  // b.none
   1a0fc:	neg	x4, x4
   1a100:	mov	w1, #0x1                   	// #1
   1a104:	b	1a10c <PyInit__decimal@@Base+0x9184>
   1a108:	mov	w1, #0x0                   	// #0
   1a10c:	mov	x2, x4
   1a110:	mov	x3, #0x0                   	// #0
   1a114:	bl	18174 <PyInit__decimal@@Base+0x71ec>
   1a118:	mov	x2, x8
   1a11c:	ldp	x29, x30, [sp], #16
   1a120:	mov	x1, x7
   1a124:	b	19f98 <PyInit__decimal@@Base+0x9010>
   1a128:	sxtw	x1, w1
   1a12c:	b	1a0d8 <PyInit__decimal@@Base+0x9150>
   1a130:	b	1a0d8 <PyInit__decimal@@Base+0x9150>
   1a134:	stp	x29, x30, [sp, #-80]!
   1a138:	mov	x29, sp
   1a13c:	stp	x19, x20, [sp, #16]
   1a140:	mov	x19, x0
   1a144:	mov	x20, x1
   1a148:	stp	x21, x22, [sp, #32]
   1a14c:	mov	x21, x2
   1a150:	mov	x22, x3
   1a154:	str	x23, [sp, #48]
   1a158:	ldrb	w0, [x0]
   1a15c:	tbnz	w0, #5, 1a19c <PyInit__decimal@@Base+0x9214>
   1a160:	adrp	x23, 45000 <PyInit__decimal@@Base+0x34078>
   1a164:	ldr	x0, [x19, #32]
   1a168:	ldr	x1, [x23, #1688]
   1a16c:	cmp	x0, x1
   1a170:	b.le	1a19c <PyInit__decimal@@Base+0x9214>
   1a174:	ldr	x0, [x19, #40]
   1a178:	add	x3, sp, #0x4f
   1a17c:	mov	x2, #0x8                   	// #8
   1a180:	strb	wzr, [sp, #79]
   1a184:	bl	15d18 <PyInit__decimal@@Base+0x4d90>
   1a188:	str	x0, [x19, #40]
   1a18c:	ldrb	w0, [sp, #79]
   1a190:	cbnz	w0, 1a19c <PyInit__decimal@@Base+0x9214>
   1a194:	ldr	x0, [x23, #1688]
   1a198:	str	x0, [x19, #32]
   1a19c:	mov	x3, x22
   1a1a0:	mov	x2, x21
   1a1a4:	mov	x1, x20
   1a1a8:	mov	x0, x19
   1a1ac:	bl	1a0d8 <PyInit__decimal@@Base+0x9150>
   1a1b0:	ldp	x19, x20, [sp, #16]
   1a1b4:	ldp	x21, x22, [sp, #32]
   1a1b8:	ldr	x23, [sp, #48]
   1a1bc:	ldp	x29, x30, [sp], #80
   1a1c0:	ret
   1a1c4:	sxtw	x1, w1
   1a1c8:	b	1a134 <PyInit__decimal@@Base+0x91ac>
   1a1cc:	b	1a134 <PyInit__decimal@@Base+0x91ac>
   1a1d0:	mov	x8, x2
   1a1d4:	mov	x9, x3
   1a1d8:	stp	x29, x30, [sp, #-16]!
   1a1dc:	mov	x2, x1
   1a1e0:	mov	x3, #0x0                   	// #0
   1a1e4:	mov	x29, sp
   1a1e8:	mov	w1, #0x0                   	// #0
   1a1ec:	bl	18174 <PyInit__decimal@@Base+0x71ec>
   1a1f0:	ldp	x29, x30, [sp], #16
   1a1f4:	mov	x2, x9
   1a1f8:	mov	x1, x8
   1a1fc:	b	19f98 <PyInit__decimal@@Base+0x9010>
   1a200:	mov	w1, w1
   1a204:	b	1a1d0 <PyInit__decimal@@Base+0x9248>
   1a208:	b	1a1d0 <PyInit__decimal@@Base+0x9248>
   1a20c:	stp	x29, x30, [sp, #-48]!
   1a210:	mov	x29, sp
   1a214:	stp	x19, x20, [sp, #16]
   1a218:	mov	x19, x0
   1a21c:	mov	x20, x2
   1a220:	mov	x2, x1
   1a224:	mov	w1, #0x0                   	// #0
   1a228:	str	x21, [sp, #32]
   1a22c:	mov	x21, x3
   1a230:	mov	x3, #0x0                   	// #0
   1a234:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   1a238:	mov	x2, x21
   1a23c:	mov	x1, x20
   1a240:	mov	x0, x19
   1a244:	ldp	x19, x20, [sp, #16]
   1a248:	ldr	x21, [sp, #32]
   1a24c:	ldp	x29, x30, [sp], #48
   1a250:	b	19f98 <PyInit__decimal@@Base+0x9010>
   1a254:	mov	w1, w1
   1a258:	b	1a20c <PyInit__decimal@@Base+0x9284>
   1a25c:	b	1a20c <PyInit__decimal@@Base+0x9284>
   1a260:	stp	x29, x30, [sp, #-64]!
   1a264:	mov	x29, sp
   1a268:	stp	x19, x20, [sp, #16]
   1a26c:	mov	x20, x0
   1a270:	mov	x19, x1
   1a274:	ldr	x0, [x1, #40]
   1a278:	stp	x21, x22, [sp, #32]
   1a27c:	mov	x21, x2
   1a280:	ldr	x1, [x1, #24]
   1a284:	stp	x23, x24, [sp, #48]
   1a288:	mov	x23, x3
   1a28c:	add	x2, x0, x1, lsl #3
   1a290:	ldur	x2, [x2, #-8]
   1a294:	cbz	x2, 1a29c <PyInit__decimal@@Base+0x9314>
   1a298:	cbnz	x21, 1a2cc <PyInit__decimal@@Base+0x9344>
   1a29c:	mov	x2, x23
   1a2a0:	mov	x1, x19
   1a2a4:	mov	x0, x20
   1a2a8:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1a2ac:	cmp	w0, #0x0
   1a2b0:	csetm	x21, eq  // eq = none
   1a2b4:	mov	x0, x21
   1a2b8:	ldp	x19, x20, [sp, #16]
   1a2bc:	ldp	x21, x22, [sp, #32]
   1a2c0:	ldp	x23, x24, [sp, #48]
   1a2c4:	ldp	x29, x30, [sp], #64
   1a2c8:	ret
   1a2cc:	ldr	x2, [x19, #16]
   1a2d0:	cmp	x2, x21
   1a2d4:	b.gt	1a308 <PyInit__decimal@@Base+0x9380>
   1a2d8:	cset	w2, eq  // eq = none
   1a2dc:	bl	168a4 <PyInit__decimal@@Base+0x591c>
   1a2e0:	mov	x21, x0
   1a2e4:	mov	x0, x20
   1a2e8:	bl	184a0 <PyInit__decimal@@Base+0x7518>
   1a2ec:	ldrb	w1, [x19]
   1a2f0:	ldrb	w0, [x20]
   1a2f4:	bfxil	w0, w1, #0, #4
   1a2f8:	strb	w0, [x20]
   1a2fc:	ldr	x0, [x19, #8]
   1a300:	str	x0, [x20, #8]
   1a304:	b	1a2b4 <PyInit__decimal@@Base+0x932c>
   1a308:	sub	x2, x2, x21
   1a30c:	mov	x3, #0x13                  	// #19
   1a310:	str	x2, [x20, #16]
   1a314:	sdiv	x22, x2, x3
   1a318:	msub	x2, x22, x3, x2
   1a31c:	cbz	x2, 1a324 <PyInit__decimal@@Base+0x939c>
   1a320:	add	x22, x22, #0x1
   1a324:	cmp	x19, x20
   1a328:	adrp	x24, 45000 <PyInit__decimal@@Base+0x34078>
   1a32c:	b.ne	1a394 <PyInit__decimal@@Base+0x940c>  // b.any
   1a330:	mov	x2, x1
   1a334:	mov	x1, x0
   1a338:	ldr	x0, [x19, #40]
   1a33c:	mov	x3, x21
   1a340:	bl	12444 <PyInit__decimal@@Base+0x14bc>
   1a344:	mov	x21, x0
   1a348:	ldr	x1, [x24, #1688]
   1a34c:	ldr	x0, [x19, #32]
   1a350:	cmp	x1, x22
   1a354:	csel	x1, x1, x22, ge  // ge = tcont
   1a358:	cmp	x1, x0
   1a35c:	b.eq	1a37c <PyInit__decimal@@Base+0x93f4>  // b.none
   1a360:	ldrb	w2, [x19]
   1a364:	tbz	w2, #5, 1a384 <PyInit__decimal@@Base+0x93fc>
   1a368:	cmp	x1, x0
   1a36c:	b.le	1a37c <PyInit__decimal@@Base+0x93f4>
   1a370:	mov	x2, x23
   1a374:	mov	x0, x19
   1a378:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   1a37c:	str	x22, [x20, #24]
   1a380:	b	1a2ec <PyInit__decimal@@Base+0x9364>
   1a384:	mov	x2, x23
   1a388:	mov	x0, x19
   1a38c:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   1a390:	b	1a37c <PyInit__decimal@@Base+0x93f4>
   1a394:	ldr	x1, [x24, #1688]
   1a398:	ldr	x0, [x20, #32]
   1a39c:	cmp	x1, x22
   1a3a0:	csel	x1, x1, x22, ge  // ge = tcont
   1a3a4:	cmp	x1, x0
   1a3a8:	b.ne	1a3c8 <PyInit__decimal@@Base+0x9440>  // b.any
   1a3ac:	ldr	x2, [x19, #24]
   1a3b0:	mov	x3, x21
   1a3b4:	ldr	x1, [x19, #40]
   1a3b8:	ldr	x0, [x20, #40]
   1a3bc:	bl	12444 <PyInit__decimal@@Base+0x14bc>
   1a3c0:	mov	x21, x0
   1a3c4:	b	1a37c <PyInit__decimal@@Base+0x93f4>
   1a3c8:	ldrb	w2, [x20]
   1a3cc:	tbz	w2, #5, 1a3f0 <PyInit__decimal@@Base+0x9468>
   1a3d0:	cmp	x1, x0
   1a3d4:	b.le	1a3ac <PyInit__decimal@@Base+0x9424>
   1a3d8:	mov	x2, x23
   1a3dc:	mov	x0, x20
   1a3e0:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   1a3e4:	cbnz	w0, 1a3ac <PyInit__decimal@@Base+0x9424>
   1a3e8:	mov	x21, #0xffffffffffffffff    	// #-1
   1a3ec:	b	1a2b4 <PyInit__decimal@@Base+0x932c>
   1a3f0:	mov	x2, x23
   1a3f4:	mov	x0, x20
   1a3f8:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   1a3fc:	b	1a3e4 <PyInit__decimal@@Base+0x945c>
   1a400:	stp	x29, x30, [sp, #-64]!
   1a404:	mov	x29, sp
   1a408:	stp	x19, x20, [sp, #16]
   1a40c:	mov	x19, x4
   1a410:	stp	x21, x22, [sp, #32]
   1a414:	str	x23, [sp, #48]
   1a418:	ldrb	w4, [x1]
   1a41c:	tst	w4, #0xe
   1a420:	b.eq	1a43c <PyInit__decimal@@Base+0x94b4>  // b.none
   1a424:	mov	x2, x19
   1a428:	ldp	x19, x20, [sp, #16]
   1a42c:	ldp	x21, x22, [sp, #32]
   1a430:	ldr	x23, [sp, #48]
   1a434:	ldp	x29, x30, [sp], #64
   1a438:	b	18b60 <PyInit__decimal@@Base+0x7bd8>
   1a43c:	mov	x20, x2
   1a440:	mov	x23, x3
   1a444:	ldr	x2, [x1, #24]
   1a448:	ldr	x3, [x1, #40]
   1a44c:	add	x2, x3, x2, lsl #3
   1a450:	ldur	x2, [x2, #-8]
   1a454:	cbnz	x2, 1a474 <PyInit__decimal@@Base+0x94ec>
   1a458:	mov	x3, x20
   1a45c:	and	w1, w4, #0x1
   1a460:	ldp	x19, x20, [sp, #16]
   1a464:	ldp	x21, x22, [sp, #32]
   1a468:	ldr	x23, [sp, #48]
   1a46c:	ldp	x29, x30, [sp], #64
   1a470:	b	181b4 <PyInit__decimal@@Base+0x722c>
   1a474:	ldr	x4, [x1, #8]
   1a478:	mov	x21, x0
   1a47c:	subs	x2, x4, x20
   1a480:	b.mi	1a4fc <PyInit__decimal@@Base+0x9574>  // b.first
   1a484:	ldr	x3, [x1, #16]
   1a488:	mov	x4, #0xa7640000            	// #2808348672
   1a48c:	movk	x4, #0xb6b3, lsl #32
   1a490:	add	x3, x2, x3
   1a494:	movk	x4, #0xde0, lsl #48
   1a498:	cmp	x3, x4
   1a49c:	b.le	1a4bc <PyInit__decimal@@Base+0x9534>
   1a4a0:	mov	x2, x19
   1a4a4:	mov	w1, #0x100                 	// #256
   1a4a8:	ldp	x19, x20, [sp, #16]
   1a4ac:	ldp	x21, x22, [sp, #32]
   1a4b0:	ldr	x23, [sp, #48]
   1a4b4:	ldp	x29, x30, [sp], #64
   1a4b8:	b	18904 <PyInit__decimal@@Base+0x797c>
   1a4bc:	mov	x3, x19
   1a4c0:	bl	19718 <PyInit__decimal@@Base+0x8790>
   1a4c4:	cbz	w0, 1a4e8 <PyInit__decimal@@Base+0x9560>
   1a4c8:	str	x20, [x21, #8]
   1a4cc:	mov	x1, x23
   1a4d0:	mov	x0, x21
   1a4d4:	bl	17a74 <PyInit__decimal@@Base+0x6aec>
   1a4d8:	cbz	w0, 1a4e8 <PyInit__decimal@@Base+0x9560>
   1a4dc:	ldr	w0, [x19]
   1a4e0:	orr	w0, w0, #0x2000
   1a4e4:	str	w0, [x19]
   1a4e8:	ldp	x19, x20, [sp, #16]
   1a4ec:	ldp	x21, x22, [sp, #32]
   1a4f0:	ldr	x23, [sp, #48]
   1a4f4:	ldp	x29, x30, [sp], #64
   1a4f8:	ret
   1a4fc:	mov	x3, x19
   1a500:	sub	x2, x20, x4
   1a504:	bl	1a260 <PyInit__decimal@@Base+0x92d8>
   1a508:	mov	x22, x0
   1a50c:	cmn	x0, #0x1
   1a510:	b.eq	1a4e8 <PyInit__decimal@@Base+0x9560>  // b.none
   1a514:	str	x20, [x21, #8]
   1a518:	mov	x2, x23
   1a51c:	mov	x1, x0
   1a520:	mov	x3, x19
   1a524:	mov	x0, x21
   1a528:	bl	180b8 <PyInit__decimal@@Base+0x7130>
   1a52c:	ldr	w2, [x19]
   1a530:	cmp	x22, #0x0
   1a534:	mov	w0, #0x1040                	// #4160
   1a538:	orr	w0, w2, w0
   1a53c:	orr	w2, w2, #0x1000
   1a540:	csel	w2, w2, w0, eq  // eq = none
   1a544:	str	w2, [x19]
   1a548:	b	1a4cc <PyInit__decimal@@Base+0x9544>
   1a54c:	stp	x29, x30, [sp, #-64]!
   1a550:	mov	x29, sp
   1a554:	stp	x19, x20, [sp, #16]
   1a558:	mov	x19, x2
   1a55c:	mov	x20, x4
   1a560:	stp	x21, x22, [sp, #32]
   1a564:	mov	x21, x1
   1a568:	str	x23, [sp, #48]
   1a56c:	mov	x23, x3
   1a570:	ldrb	w1, [x2]
   1a574:	tst	w1, #0xe
   1a578:	b.eq	1a5b4 <PyInit__decimal@@Base+0x962c>  // b.none
   1a57c:	mov	x3, x4
   1a580:	mov	x2, x23
   1a584:	mov	x1, x19
   1a588:	mov	x0, x21
   1a58c:	bl	18c14 <PyInit__decimal@@Base+0x7c8c>
   1a590:	cbnz	w0, 1a658 <PyInit__decimal@@Base+0x96d0>
   1a594:	mov	x2, x20
   1a598:	mov	x1, x19
   1a59c:	mov	x0, x21
   1a5a0:	ldp	x19, x20, [sp, #16]
   1a5a4:	ldp	x21, x22, [sp, #32]
   1a5a8:	ldr	x23, [sp, #48]
   1a5ac:	ldp	x29, x30, [sp], #64
   1a5b0:	b	18b60 <PyInit__decimal@@Base+0x7bd8>
   1a5b4:	ldr	x2, [x2, #8]
   1a5b8:	tbz	x2, #63, 1a594 <PyInit__decimal@@Base+0x960c>
   1a5bc:	mov	w22, w0
   1a5c0:	ldr	x0, [x19, #24]
   1a5c4:	ldr	x3, [x19, #40]
   1a5c8:	add	x0, x3, x0, lsl #3
   1a5cc:	ldur	x0, [x0, #-8]
   1a5d0:	cbnz	x0, 1a5f8 <PyInit__decimal@@Base+0x9670>
   1a5d4:	mov	x0, x21
   1a5d8:	and	w1, w1, #0x1
   1a5dc:	ldp	x19, x20, [sp, #16]
   1a5e0:	mov	x3, #0x0                   	// #0
   1a5e4:	ldp	x21, x22, [sp, #32]
   1a5e8:	mov	x2, #0x0                   	// #0
   1a5ec:	ldr	x23, [sp, #48]
   1a5f0:	ldp	x29, x30, [sp], #64
   1a5f4:	b	181b4 <PyInit__decimal@@Base+0x722c>
   1a5f8:	mov	x1, x19
   1a5fc:	mov	x3, x4
   1a600:	neg	x2, x2
   1a604:	mov	x0, x21
   1a608:	bl	1a260 <PyInit__decimal@@Base+0x92d8>
   1a60c:	mov	x19, x0
   1a610:	cmn	x0, #0x1
   1a614:	b.eq	1a658 <PyInit__decimal@@Base+0x96d0>  // b.none
   1a618:	str	xzr, [x21, #8]
   1a61c:	cmp	w22, #0x2
   1a620:	b.eq	1a658 <PyInit__decimal@@Base+0x96d0>  // b.none
   1a624:	mov	x1, x0
   1a628:	mov	x3, x20
   1a62c:	mov	x2, x23
   1a630:	mov	x0, x21
   1a634:	bl	180b8 <PyInit__decimal@@Base+0x7130>
   1a638:	cbnz	w22, 1a658 <PyInit__decimal@@Base+0x96d0>
   1a63c:	ldr	w2, [x20]
   1a640:	cmp	x19, #0x0
   1a644:	mov	w0, #0x1040                	// #4160
   1a648:	orr	w0, w2, w0
   1a64c:	orr	w2, w2, #0x1000
   1a650:	csel	w2, w2, w0, eq  // eq = none
   1a654:	str	w2, [x20]
   1a658:	ldp	x19, x20, [sp, #16]
   1a65c:	ldp	x21, x22, [sp, #32]
   1a660:	ldr	x23, [sp, #48]
   1a664:	ldp	x29, x30, [sp], #64
   1a668:	ret
   1a66c:	stp	x29, x30, [sp, #-80]!
   1a670:	mov	x29, sp
   1a674:	stp	x19, x20, [sp, #16]
   1a678:	stp	x21, x22, [sp, #32]
   1a67c:	mov	x21, x0
   1a680:	stp	x23, x24, [sp, #48]
   1a684:	str	x25, [sp, #64]
   1a688:	mov	x25, x4
   1a68c:	ldrb	w0, [x1]
   1a690:	tst	w0, #0xe
   1a694:	b.ne	1a6c8 <PyInit__decimal@@Base+0x9740>  // b.any
   1a698:	mov	x24, x1
   1a69c:	ldrb	w1, [x2]
   1a6a0:	mov	x23, x2
   1a6a4:	orr	w0, w1, w0
   1a6a8:	and	w1, w1, #0xe
   1a6ac:	and	w0, w0, #0x1
   1a6b0:	orr	w0, w0, w1
   1a6b4:	cbnz	w0, 1a6c8 <PyInit__decimal@@Base+0x9740>
   1a6b8:	ldr	x0, [x24, #8]
   1a6bc:	cbnz	x0, 1a6c8 <PyInit__decimal@@Base+0x9740>
   1a6c0:	ldr	x22, [x2, #8]
   1a6c4:	cbz	x22, 1a6ec <PyInit__decimal@@Base+0x9764>
   1a6c8:	mov	x2, x25
   1a6cc:	mov	x0, x21
   1a6d0:	ldp	x19, x20, [sp, #16]
   1a6d4:	mov	w1, #0x100                 	// #256
   1a6d8:	ldp	x21, x22, [sp, #32]
   1a6dc:	ldp	x23, x24, [sp, #48]
   1a6e0:	ldr	x25, [sp, #64]
   1a6e4:	ldp	x29, x30, [sp], #80
   1a6e8:	b	18904 <PyInit__decimal@@Base+0x797c>
   1a6ec:	ldr	x1, [x2, #16]
   1a6f0:	mov	x20, x3
   1a6f4:	ldr	x0, [x24, #16]
   1a6f8:	cmp	x1, x0
   1a6fc:	b.le	1a70c <PyInit__decimal@@Base+0x9784>
   1a700:	mov	x0, x24
   1a704:	mov	x24, x2
   1a708:	mov	x23, x0
   1a70c:	adrp	x19, 45000 <PyInit__decimal@@Base+0x34078>
   1a710:	ldr	x1, [x24, #24]
   1a714:	ldr	x0, [x19, #1688]
   1a718:	cmp	x1, x0
   1a71c:	csel	x1, x1, x0, ge  // ge = tcont
   1a720:	ldr	x0, [x21, #32]
   1a724:	cmp	x1, x0
   1a728:	b.ne	1a884 <PyInit__decimal@@Base+0x98fc>  // b.any
   1a72c:	ldr	x11, [x23, #40]
   1a730:	adrp	x6, 2a000 <PyInit__decimal@@Base+0x19078>
   1a734:	ldr	x7, [x24, #40]
   1a738:	add	x6, x6, #0xae8
   1a73c:	mov	x2, #0xa                   	// #10
   1a740:	ldr	x0, [x23, #24]
   1a744:	lsl	x4, x22, #3
   1a748:	sub	x0, x0, #0x1
   1a74c:	cmp	x0, x22
   1a750:	ldr	x3, [x11, x4]
   1a754:	ldr	x1, [x7, x4]
   1a758:	b.gt	1a8cc <PyInit__decimal@@Base+0x9944>
   1a75c:	adrp	x10, 2a000 <PyInit__decimal@@Base+0x19078>
   1a760:	add	x0, x10, #0xae8
   1a764:	ldr	x2, [x0, #72]
   1a768:	cmp	x2, x3
   1a76c:	b.ls	1a978 <PyInit__decimal@@Base+0x99f0>  // b.plast
   1a770:	ldr	x2, [x0, #32]
   1a774:	cmp	x2, x3
   1a778:	b.ls	1a938 <PyInit__decimal@@Base+0x99b0>  // b.plast
   1a77c:	ldr	x2, [x0, #16]
   1a780:	cmp	x2, x3
   1a784:	b.ls	1a924 <PyInit__decimal@@Base+0x999c>  // b.plast
   1a788:	ldr	x0, [x0, #8]
   1a78c:	cmp	x0, x3
   1a790:	cset	w5, ls  // ls = plast
   1a794:	add	w5, w5, #0x1
   1a798:	add	x10, x10, #0xae8
   1a79c:	mov	x2, #0x0                   	// #0
   1a7a0:	mov	x9, #0x0                   	// #0
   1a7a4:	mov	x6, #0xa                   	// #10
   1a7a8:	udiv	x8, x3, x6
   1a7ac:	udiv	x11, x1, x6
   1a7b0:	msub	x0, x8, x6, x3
   1a7b4:	mov	x3, x8
   1a7b8:	msub	x8, x11, x6, x1
   1a7bc:	cmp	x0, #0x1
   1a7c0:	mov	x1, x11
   1a7c4:	ccmp	x8, #0x1, #0x2, ls  // ls = plast
   1a7c8:	b.hi	1a6c8 <PyInit__decimal@@Base+0x9740>  // b.pmore
   1a7cc:	ands	x0, x0, x8
   1a7d0:	b.eq	1a7d8 <PyInit__decimal@@Base+0x9850>  // b.none
   1a7d4:	ldr	x0, [x10, x2, lsl #3]
   1a7d8:	add	w8, w2, #0x1
   1a7dc:	add	x2, x2, #0x1
   1a7e0:	add	x9, x9, x0
   1a7e4:	cmp	w5, w2
   1a7e8:	b.gt	1a7a8 <PyInit__decimal@@Base+0x9820>
   1a7ec:	ldr	x0, [x21, #40]
   1a7f0:	mov	x2, #0xa                   	// #10
   1a7f4:	str	x9, [x0, x4]
   1a7f8:	cmp	w8, #0x12
   1a7fc:	b.le	1aa28 <PyInit__decimal@@Base+0x9aa0>
   1a800:	ldr	x5, [x24, #24]
   1a804:	add	x22, x22, #0x1
   1a808:	mov	x3, #0xa                   	// #10
   1a80c:	cmp	x5, x22
   1a810:	b.gt	1aa44 <PyInit__decimal@@Base+0x9abc>
   1a814:	ldrb	w3, [x21]
   1a818:	and	w1, w3, #0xfffffff0
   1a81c:	strb	w1, [x21]
   1a820:	ldr	x1, [x23, #24]
   1a824:	str	xzr, [x21, #8]
   1a828:	bl	161c8 <PyInit__decimal@@Base+0x5240>
   1a82c:	str	x0, [x21, #24]
   1a830:	ldr	x1, [x19, #1688]
   1a834:	cmp	x1, x0
   1a838:	csel	x1, x1, x0, ge  // ge = tcont
   1a83c:	ldr	x0, [x21, #32]
   1a840:	cmp	x1, x0
   1a844:	b.eq	1a860 <PyInit__decimal@@Base+0x98d8>  // b.none
   1a848:	tbz	w3, #5, 1aa70 <PyInit__decimal@@Base+0x9ae8>
   1a84c:	cmp	x1, x0
   1a850:	b.le	1a860 <PyInit__decimal@@Base+0x98d8>
   1a854:	mov	x2, x25
   1a858:	mov	x0, x21
   1a85c:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   1a860:	mov	x0, x21
   1a864:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   1a868:	mov	x1, x20
   1a86c:	ldp	x19, x20, [sp, #16]
   1a870:	ldp	x21, x22, [sp, #32]
   1a874:	ldp	x23, x24, [sp, #48]
   1a878:	ldr	x25, [sp, #64]
   1a87c:	ldp	x29, x30, [sp], #80
   1a880:	b	18274 <PyInit__decimal@@Base+0x72ec>
   1a884:	ldrb	w2, [x21]
   1a888:	tbz	w2, #5, 1a8bc <PyInit__decimal@@Base+0x9934>
   1a88c:	cmp	x1, x0
   1a890:	b.le	1a72c <PyInit__decimal@@Base+0x97a4>
   1a894:	mov	x2, x25
   1a898:	mov	x0, x21
   1a89c:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   1a8a0:	cbnz	w0, 1a72c <PyInit__decimal@@Base+0x97a4>
   1a8a4:	ldp	x19, x20, [sp, #16]
   1a8a8:	ldp	x21, x22, [sp, #32]
   1a8ac:	ldp	x23, x24, [sp, #48]
   1a8b0:	ldr	x25, [sp, #64]
   1a8b4:	ldp	x29, x30, [sp], #80
   1a8b8:	ret
   1a8bc:	mov	x2, x25
   1a8c0:	mov	x0, x21
   1a8c4:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   1a8c8:	b	1a8a0 <PyInit__decimal@@Base+0x9918>
   1a8cc:	mov	x5, #0x0                   	// #0
   1a8d0:	mov	x8, #0x0                   	// #0
   1a8d4:	udiv	x9, x3, x2
   1a8d8:	udiv	x10, x1, x2
   1a8dc:	msub	x0, x9, x2, x3
   1a8e0:	mov	x3, x9
   1a8e4:	msub	x9, x10, x2, x1
   1a8e8:	cmp	x0, #0x1
   1a8ec:	mov	x1, x10
   1a8f0:	ccmp	x9, #0x1, #0x2, ls  // ls = plast
   1a8f4:	b.hi	1a6c8 <PyInit__decimal@@Base+0x9740>  // b.pmore
   1a8f8:	ands	x0, x0, x9
   1a8fc:	b.eq	1a904 <PyInit__decimal@@Base+0x997c>  // b.none
   1a900:	ldr	x0, [x6, x5, lsl #3]
   1a904:	add	x5, x5, #0x1
   1a908:	add	x8, x8, x0
   1a90c:	cmp	x5, #0x13
   1a910:	b.ne	1a8d4 <PyInit__decimal@@Base+0x994c>  // b.any
   1a914:	ldr	x0, [x21, #40]
   1a918:	add	x22, x22, #0x1
   1a91c:	str	x8, [x0, x4]
   1a920:	b	1a740 <PyInit__decimal@@Base+0x97b8>
   1a924:	ldr	x0, [x0, #24]
   1a928:	cmp	x0, x3
   1a92c:	cset	w5, ls  // ls = plast
   1a930:	add	w5, w5, #0x3
   1a934:	b	1a798 <PyInit__decimal@@Base+0x9810>
   1a938:	ldr	x2, [x0, #48]
   1a93c:	cmp	x2, x3
   1a940:	b.ls	1a958 <PyInit__decimal@@Base+0x99d0>  // b.plast
   1a944:	ldr	x0, [x0, #40]
   1a948:	cmp	x0, x3
   1a94c:	cset	w5, ls  // ls = plast
   1a950:	add	w5, w5, #0x5
   1a954:	b	1a798 <PyInit__decimal@@Base+0x9810>
   1a958:	ldr	x2, [x0, #64]
   1a95c:	cmp	x2, x3
   1a960:	b.ls	1aa18 <PyInit__decimal@@Base+0x9a90>  // b.plast
   1a964:	ldr	x0, [x0, #56]
   1a968:	cmp	x0, x3
   1a96c:	cset	w5, ls  // ls = plast
   1a970:	add	w5, w5, #0x7
   1a974:	b	1a798 <PyInit__decimal@@Base+0x9810>
   1a978:	ldr	x2, [x0, #112]
   1a97c:	cmp	x2, x3
   1a980:	b.ls	1a9c4 <PyInit__decimal@@Base+0x9a3c>  // b.plast
   1a984:	ldr	x2, [x0, #88]
   1a988:	cmp	x2, x3
   1a98c:	b.ls	1a9a4 <PyInit__decimal@@Base+0x9a1c>  // b.plast
   1a990:	ldr	x0, [x0, #80]
   1a994:	cmp	x0, x3
   1a998:	cset	w5, ls  // ls = plast
   1a99c:	add	w5, w5, #0xa
   1a9a0:	b	1a798 <PyInit__decimal@@Base+0x9810>
   1a9a4:	ldr	x2, [x0, #104]
   1a9a8:	cmp	x2, x3
   1a9ac:	b.ls	1aa20 <PyInit__decimal@@Base+0x9a98>  // b.plast
   1a9b0:	ldr	x0, [x0, #96]
   1a9b4:	cmp	x0, x3
   1a9b8:	cset	w5, ls  // ls = plast
   1a9bc:	add	w5, w5, #0xc
   1a9c0:	b	1a798 <PyInit__decimal@@Base+0x9810>
   1a9c4:	ldr	x2, [x0, #144]
   1a9c8:	cmp	x2, x3
   1a9cc:	b.ls	1aa04 <PyInit__decimal@@Base+0x9a7c>  // b.plast
   1a9d0:	ldr	x2, [x0, #128]
   1a9d4:	cmp	x2, x3
   1a9d8:	b.ls	1a9f0 <PyInit__decimal@@Base+0x9a68>  // b.plast
   1a9dc:	ldr	x0, [x0, #120]
   1a9e0:	cmp	x0, x3
   1a9e4:	cset	w5, ls  // ls = plast
   1a9e8:	add	w5, w5, #0xf
   1a9ec:	b	1a798 <PyInit__decimal@@Base+0x9810>
   1a9f0:	ldr	x0, [x0, #136]
   1a9f4:	cmp	x0, x3
   1a9f8:	cset	w5, ls  // ls = plast
   1a9fc:	add	w5, w5, #0x11
   1aa00:	b	1a798 <PyInit__decimal@@Base+0x9810>
   1aa04:	ldr	x0, [x0, #152]
   1aa08:	cmp	x0, x3
   1aa0c:	cset	w5, ls  // ls = plast
   1aa10:	add	w5, w5, #0x13
   1aa14:	b	1a798 <PyInit__decimal@@Base+0x9810>
   1aa18:	mov	w5, #0x9                   	// #9
   1aa1c:	b	1a798 <PyInit__decimal@@Base+0x9810>
   1aa20:	mov	w5, #0xe                   	// #14
   1aa24:	b	1a798 <PyInit__decimal@@Base+0x9810>
   1aa28:	udiv	x3, x1, x2
   1aa2c:	msub	x4, x3, x2, x1
   1aa30:	mov	x1, x3
   1aa34:	cmp	x4, #0x1
   1aa38:	b.hi	1a6c8 <PyInit__decimal@@Base+0x9740>  // b.pmore
   1aa3c:	add	w8, w8, #0x1
   1aa40:	b	1a7f8 <PyInit__decimal@@Base+0x9870>
   1aa44:	ldr	x2, [x7, x22, lsl #3]
   1aa48:	mov	w1, #0x13                  	// #19
   1aa4c:	udiv	x4, x2, x3
   1aa50:	msub	x6, x4, x3, x2
   1aa54:	mov	x2, x4
   1aa58:	cmp	x6, #0x1
   1aa5c:	b.hi	1a6c8 <PyInit__decimal@@Base+0x9740>  // b.pmore
   1aa60:	subs	w1, w1, #0x1
   1aa64:	b.ne	1aa4c <PyInit__decimal@@Base+0x9ac4>  // b.any
   1aa68:	add	x22, x22, #0x1
   1aa6c:	b	1a80c <PyInit__decimal@@Base+0x9884>
   1aa70:	mov	x2, x25
   1aa74:	mov	x0, x21
   1aa78:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   1aa7c:	b	1a860 <PyInit__decimal@@Base+0x98d8>
   1aa80:	ldrb	w2, [x0]
   1aa84:	tst	w2, #0xc
   1aa88:	b.eq	1aaa8 <PyInit__decimal@@Base+0x9b20>  // b.none
   1aa8c:	tst	x2, #0x4
   1aa90:	adrp	x1, 24000 <PyInit__decimal@@Base+0x13078>
   1aa94:	adrp	x0, 24000 <PyInit__decimal@@Base+0x13078>
   1aa98:	add	x1, x1, #0x907
   1aa9c:	add	x0, x0, #0x908
   1aaa0:	csel	x0, x0, x1, ne  // ne = any
   1aaa4:	ret
   1aaa8:	stp	x29, x30, [sp, #-16]!
   1aaac:	and	w3, w2, #0x2
   1aab0:	mov	x29, sp
   1aab4:	tbnz	w2, #0, 1aafc <PyInit__decimal@@Base+0x9b74>
   1aab8:	cbnz	w3, 1ab38 <PyInit__decimal@@Base+0x9bb0>
   1aabc:	tst	w2, #0xe
   1aac0:	b.ne	1aad8 <PyInit__decimal@@Base+0x9b50>  // b.any
   1aac4:	ldr	x2, [x0, #24]
   1aac8:	ldr	x3, [x0, #40]
   1aacc:	add	x2, x3, x2, lsl #3
   1aad0:	ldur	x2, [x2, #-8]
   1aad4:	cbz	x2, 1ab44 <PyInit__decimal@@Base+0x9bbc>
   1aad8:	bl	17a30 <PyInit__decimal@@Base+0x6aa8>
   1aadc:	cmp	w0, #0x0
   1aae0:	adrp	x2, 2b000 <PyInit__decimal@@Base+0x1a078>
   1aae4:	adrp	x1, 2b000 <PyInit__decimal@@Base+0x1a078>
   1aae8:	add	x2, x2, #0x912
   1aaec:	add	x0, x1, #0x945
   1aaf0:	csel	x0, x0, x2, ne  // ne = any
   1aaf4:	ldp	x29, x30, [sp], #16
   1aaf8:	ret
   1aafc:	cbnz	w3, 1ab50 <PyInit__decimal@@Base+0x9bc8>
   1ab00:	tst	w2, #0xe
   1ab04:	b.ne	1ab1c <PyInit__decimal@@Base+0x9b94>  // b.any
   1ab08:	ldr	x2, [x0, #24]
   1ab0c:	ldr	x3, [x0, #40]
   1ab10:	add	x2, x3, x2, lsl #3
   1ab14:	ldur	x2, [x2, #-8]
   1ab18:	cbz	x2, 1ab5c <PyInit__decimal@@Base+0x9bd4>
   1ab1c:	bl	17a30 <PyInit__decimal@@Base+0x6aa8>
   1ab20:	cmp	w0, #0x0
   1ab24:	adrp	x2, 2b000 <PyInit__decimal@@Base+0x1a078>
   1ab28:	adrp	x1, 2b000 <PyInit__decimal@@Base+0x1a078>
   1ab2c:	add	x2, x2, #0x94d
   1ab30:	add	x0, x1, #0x92d
   1ab34:	b	1aaf0 <PyInit__decimal@@Base+0x9b68>
   1ab38:	adrp	x0, 2b000 <PyInit__decimal@@Base+0x1a078>
   1ab3c:	add	x0, x0, #0x935
   1ab40:	b	1aaf4 <PyInit__decimal@@Base+0x9b6c>
   1ab44:	adrp	x0, 2b000 <PyInit__decimal@@Base+0x1a078>
   1ab48:	add	x0, x0, #0x93f
   1ab4c:	b	1aaf4 <PyInit__decimal@@Base+0x9b6c>
   1ab50:	adrp	x0, 2b000 <PyInit__decimal@@Base+0x1a078>
   1ab54:	add	x0, x0, #0x91d
   1ab58:	b	1aaf4 <PyInit__decimal@@Base+0x9b6c>
   1ab5c:	adrp	x0, 2b000 <PyInit__decimal@@Base+0x1a078>
   1ab60:	add	x0, x0, #0x927
   1ab64:	b	1aaf4 <PyInit__decimal@@Base+0x9b6c>
   1ab68:	stp	x29, x30, [sp, #-80]!
   1ab6c:	mov	x29, sp
   1ab70:	stp	x19, x20, [sp, #16]
   1ab74:	mov	x19, x0
   1ab78:	mov	x20, x3
   1ab7c:	stp	x21, x22, [sp, #32]
   1ab80:	stp	x23, x24, [sp, #48]
   1ab84:	str	x25, [sp, #64]
   1ab88:	ldrb	w0, [x1]
   1ab8c:	tst	x0, #0xf
   1ab90:	b.ne	1aba0 <PyInit__decimal@@Base+0x9c18>  // b.any
   1ab94:	ldr	x22, [x1, #8]
   1ab98:	mov	x23, x1
   1ab9c:	cbz	x22, 1abc4 <PyInit__decimal@@Base+0x9c3c>
   1aba0:	mov	x2, x20
   1aba4:	mov	x0, x19
   1aba8:	ldp	x19, x20, [sp, #16]
   1abac:	mov	w1, #0x100                 	// #256
   1abb0:	ldp	x21, x22, [sp, #32]
   1abb4:	ldp	x23, x24, [sp, #48]
   1abb8:	ldr	x25, [sp, #64]
   1abbc:	ldp	x29, x30, [sp], #80
   1abc0:	b	18904 <PyInit__decimal@@Base+0x797c>
   1abc4:	ldr	x0, [x1, #16]
   1abc8:	mov	x24, x2
   1abcc:	ldr	x1, [x2]
   1abd0:	cmp	x0, x1
   1abd4:	csel	x0, x0, x1, ge  // ge = tcont
   1abd8:	mov	x1, #0x13                  	// #19
   1abdc:	sdiv	x21, x0, x1
   1abe0:	msub	x0, x21, x1, x0
   1abe4:	cbz	x0, 1abec <PyInit__decimal@@Base+0x9c64>
   1abe8:	add	x21, x21, #0x1
   1abec:	adrp	x25, 45000 <PyInit__decimal@@Base+0x34078>
   1abf0:	ldr	x0, [x19, #32]
   1abf4:	ldr	x1, [x25, #1688]
   1abf8:	cmp	x1, x21
   1abfc:	csel	x1, x1, x21, ge  // ge = tcont
   1ac00:	cmp	x1, x0
   1ac04:	b.ne	1ac90 <PyInit__decimal@@Base+0x9d08>  // b.any
   1ac08:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   1ac0c:	add	x2, x2, #0xae8
   1ac10:	mov	x4, #0xa                   	// #10
   1ac14:	cmp	x22, x21
   1ac18:	b.lt	1acd8 <PyInit__decimal@@Base+0x9d50>  // b.tstop
   1ac1c:	ldrb	w3, [x19]
   1ac20:	mov	x1, x21
   1ac24:	str	xzr, [x19, #8]
   1ac28:	and	w0, w3, #0xfffffff0
   1ac2c:	strb	w0, [x19]
   1ac30:	ldr	x0, [x19, #40]
   1ac34:	bl	161c8 <PyInit__decimal@@Base+0x5240>
   1ac38:	str	x0, [x19, #24]
   1ac3c:	ldr	x1, [x25, #1688]
   1ac40:	cmp	x1, x0
   1ac44:	csel	x1, x1, x0, ge  // ge = tcont
   1ac48:	ldr	x0, [x19, #32]
   1ac4c:	cmp	x1, x0
   1ac50:	b.eq	1ac6c <PyInit__decimal@@Base+0x9ce4>  // b.none
   1ac54:	tbz	w3, #5, 1ad40 <PyInit__decimal@@Base+0x9db8>
   1ac58:	cmp	x1, x0
   1ac5c:	b.le	1ac6c <PyInit__decimal@@Base+0x9ce4>
   1ac60:	mov	x2, x20
   1ac64:	mov	x0, x19
   1ac68:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   1ac6c:	mov	x0, x19
   1ac70:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   1ac74:	mov	x1, x24
   1ac78:	ldp	x19, x20, [sp, #16]
   1ac7c:	ldp	x21, x22, [sp, #32]
   1ac80:	ldp	x23, x24, [sp, #48]
   1ac84:	ldr	x25, [sp, #64]
   1ac88:	ldp	x29, x30, [sp], #80
   1ac8c:	b	18274 <PyInit__decimal@@Base+0x72ec>
   1ac90:	ldrb	w2, [x19]
   1ac94:	tbz	w2, #5, 1acc8 <PyInit__decimal@@Base+0x9d40>
   1ac98:	cmp	x1, x0
   1ac9c:	b.le	1ac08 <PyInit__decimal@@Base+0x9c80>
   1aca0:	mov	x2, x20
   1aca4:	mov	x0, x19
   1aca8:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   1acac:	cbnz	w0, 1ac08 <PyInit__decimal@@Base+0x9c80>
   1acb0:	ldp	x19, x20, [sp, #16]
   1acb4:	ldp	x21, x22, [sp, #32]
   1acb8:	ldp	x23, x24, [sp, #48]
   1acbc:	ldr	x25, [sp, #64]
   1acc0:	ldp	x29, x30, [sp], #80
   1acc4:	ret
   1acc8:	mov	x2, x20
   1accc:	mov	x0, x19
   1acd0:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   1acd4:	b	1acac <PyInit__decimal@@Base+0x9d24>
   1acd8:	ldr	x0, [x23, #24]
   1acdc:	cmp	x0, x22
   1ace0:	b.le	1ad30 <PyInit__decimal@@Base+0x9da8>
   1ace4:	ldr	x0, [x23, #40]
   1ace8:	ldr	x1, [x0, x22, lsl #3]
   1acec:	mov	x0, #0x0                   	// #0
   1acf0:	mov	x3, #0x0                   	// #0
   1acf4:	udiv	x6, x1, x4
   1acf8:	msub	x5, x6, x4, x1
   1acfc:	mov	x1, x6
   1ad00:	cmp	x5, #0x1
   1ad04:	b.hi	1aba0 <PyInit__decimal@@Base+0x9c18>  // b.pmore
   1ad08:	cbnz	x5, 1ad38 <PyInit__decimal@@Base+0x9db0>
   1ad0c:	ldr	x5, [x2, x0, lsl #3]
   1ad10:	add	x0, x0, #0x1
   1ad14:	add	x3, x3, x5
   1ad18:	cmp	x0, #0x13
   1ad1c:	b.ne	1acf4 <PyInit__decimal@@Base+0x9d6c>  // b.any
   1ad20:	ldr	x0, [x19, #40]
   1ad24:	str	x3, [x0, x22, lsl #3]
   1ad28:	add	x22, x22, #0x1
   1ad2c:	b	1ac14 <PyInit__decimal@@Base+0x9c8c>
   1ad30:	mov	x1, #0x0                   	// #0
   1ad34:	b	1acec <PyInit__decimal@@Base+0x9d64>
   1ad38:	mov	x5, #0x0                   	// #0
   1ad3c:	b	1ad10 <PyInit__decimal@@Base+0x9d88>
   1ad40:	mov	x2, x20
   1ad44:	mov	x0, x19
   1ad48:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   1ad4c:	b	1ac6c <PyInit__decimal@@Base+0x9ce4>
   1ad50:	stp	x29, x30, [sp, #-32]!
   1ad54:	mov	x29, sp
   1ad58:	stp	x19, x20, [sp, #16]
   1ad5c:	ldrb	w5, [x1]
   1ad60:	tst	w5, #0xe
   1ad64:	b.eq	1ad8c <PyInit__decimal@@Base+0x9e04>  // b.none
   1ad68:	mov	x20, x0
   1ad6c:	bl	18c14 <PyInit__decimal@@Base+0x7c8c>
   1ad70:	cbnz	w0, 1adc0 <PyInit__decimal@@Base+0x9e38>
   1ad74:	mov	x0, x20
   1ad78:	mov	w2, #0x2                   	// #2
   1ad7c:	ldp	x19, x20, [sp, #16]
   1ad80:	mov	w1, #0x0                   	// #0
   1ad84:	ldp	x29, x30, [sp], #32
   1ad88:	b	18878 <PyInit__decimal@@Base+0x78f0>
   1ad8c:	mov	x4, x1
   1ad90:	ldr	x1, [x1, #24]
   1ad94:	ldr	x5, [x4, #40]
   1ad98:	add	x1, x5, x1, lsl #3
   1ad9c:	ldur	x1, [x1, #-8]
   1ada0:	cbnz	x1, 1adcc <PyInit__decimal@@Base+0x9e44>
   1ada4:	mov	x19, x3
   1ada8:	mov	w2, #0x2                   	// #2
   1adac:	mov	w1, #0x1                   	// #1
   1adb0:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   1adb4:	ldr	w0, [x19]
   1adb8:	orr	w0, w0, #0x4
   1adbc:	str	w0, [x19]
   1adc0:	ldp	x19, x20, [sp, #16]
   1adc4:	ldp	x29, x30, [sp], #32
   1adc8:	ret
   1adcc:	ldp	x1, x4, [x4, #8]
   1add0:	ldp	x19, x20, [sp, #16]
   1add4:	ldp	x29, x30, [sp], #32
   1add8:	add	x1, x1, x4
   1addc:	sub	x1, x1, #0x1
   1ade0:	b	1a134 <PyInit__decimal@@Base+0x91ac>
   1ade4:	stp	x29, x30, [sp, #-80]!
   1ade8:	mov	x29, sp
   1adec:	stp	x19, x20, [sp, #16]
   1adf0:	stp	x21, x22, [sp, #32]
   1adf4:	mov	x21, x0
   1adf8:	stp	x23, x24, [sp, #48]
   1adfc:	str	x25, [sp, #64]
   1ae00:	mov	x25, x4
   1ae04:	ldrb	w0, [x1]
   1ae08:	tst	w0, #0xe
   1ae0c:	b.ne	1ae40 <PyInit__decimal@@Base+0x9eb8>  // b.any
   1ae10:	mov	x23, x1
   1ae14:	ldrb	w1, [x2]
   1ae18:	mov	x24, x2
   1ae1c:	orr	w0, w1, w0
   1ae20:	and	w1, w1, #0xe
   1ae24:	and	w0, w0, #0x1
   1ae28:	orr	w0, w0, w1
   1ae2c:	cbnz	w0, 1ae40 <PyInit__decimal@@Base+0x9eb8>
   1ae30:	ldr	x0, [x23, #8]
   1ae34:	cbnz	x0, 1ae40 <PyInit__decimal@@Base+0x9eb8>
   1ae38:	ldr	x22, [x2, #8]
   1ae3c:	cbz	x22, 1ae64 <PyInit__decimal@@Base+0x9edc>
   1ae40:	mov	x2, x25
   1ae44:	mov	x0, x21
   1ae48:	ldp	x19, x20, [sp, #16]
   1ae4c:	mov	w1, #0x100                 	// #256
   1ae50:	ldp	x21, x22, [sp, #32]
   1ae54:	ldp	x23, x24, [sp, #48]
   1ae58:	ldr	x25, [sp, #64]
   1ae5c:	ldp	x29, x30, [sp], #80
   1ae60:	b	18904 <PyInit__decimal@@Base+0x797c>
   1ae64:	ldr	x0, [x23, #16]
   1ae68:	mov	x20, x3
   1ae6c:	ldr	x1, [x2, #16]
   1ae70:	cmp	x1, x0
   1ae74:	b.le	1ae84 <PyInit__decimal@@Base+0x9efc>
   1ae78:	mov	x0, x23
   1ae7c:	mov	x23, x2
   1ae80:	mov	x24, x0
   1ae84:	adrp	x19, 45000 <PyInit__decimal@@Base+0x34078>
   1ae88:	ldr	x1, [x23, #24]
   1ae8c:	ldr	x0, [x19, #1688]
   1ae90:	cmp	x1, x0
   1ae94:	csel	x1, x1, x0, ge  // ge = tcont
   1ae98:	ldr	x0, [x21, #32]
   1ae9c:	cmp	x1, x0
   1aea0:	b.ne	1b000 <PyInit__decimal@@Base+0xa078>  // b.any
   1aea4:	ldr	x6, [x23, #40]
   1aea8:	adrp	x7, 2a000 <PyInit__decimal@@Base+0x19078>
   1aeac:	ldr	x11, [x24, #40]
   1aeb0:	add	x7, x7, #0xae8
   1aeb4:	mov	x2, #0xa                   	// #10
   1aeb8:	ldr	x0, [x24, #24]
   1aebc:	lsl	x4, x22, #3
   1aec0:	sub	x0, x0, #0x1
   1aec4:	cmp	x0, x22
   1aec8:	ldr	x3, [x11, x4]
   1aecc:	ldr	x1, [x6, x4]
   1aed0:	b.gt	1b048 <PyInit__decimal@@Base+0xa0c0>
   1aed4:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   1aed8:	add	x0, x2, #0xae8
   1aedc:	ldr	x5, [x0, #72]
   1aee0:	cmp	x5, x3
   1aee4:	b.ls	1b0f4 <PyInit__decimal@@Base+0xa16c>  // b.plast
   1aee8:	ldr	x5, [x0, #32]
   1aeec:	cmp	x5, x3
   1aef0:	b.ls	1b0b4 <PyInit__decimal@@Base+0xa12c>  // b.plast
   1aef4:	ldr	x5, [x0, #16]
   1aef8:	cmp	x5, x3
   1aefc:	b.ls	1b0a0 <PyInit__decimal@@Base+0xa118>  // b.plast
   1af00:	ldr	x0, [x0, #8]
   1af04:	cmp	x0, x3
   1af08:	cset	w5, ls  // ls = plast
   1af0c:	add	w5, w5, #0x1
   1af10:	add	x12, x2, #0xae8
   1af14:	mov	x8, #0x0                   	// #0
   1af18:	mov	x7, #0x0                   	// #0
   1af1c:	mov	x9, #0xa                   	// #10
   1af20:	udiv	x10, x3, x9
   1af24:	udiv	x11, x1, x9
   1af28:	msub	x0, x10, x9, x3
   1af2c:	mov	x3, x10
   1af30:	msub	x10, x11, x9, x1
   1af34:	cmp	x0, #0x1
   1af38:	mov	x1, x11
   1af3c:	ccmp	x10, #0x1, #0x2, ls  // ls = plast
   1af40:	b.hi	1ae40 <PyInit__decimal@@Base+0x9eb8>  // b.pmore
   1af44:	orr	x0, x0, x10
   1af48:	cbz	x0, 1af50 <PyInit__decimal@@Base+0x9fc8>
   1af4c:	ldr	x0, [x12, x8, lsl #3]
   1af50:	add	x7, x7, x0
   1af54:	add	w0, w8, #0x1
   1af58:	add	x8, x8, #0x1
   1af5c:	cmp	w5, w8
   1af60:	b.gt	1af20 <PyInit__decimal@@Base+0x9f98>
   1af64:	sxtw	x0, w0
   1af68:	add	x2, x2, #0xae8
   1af6c:	mov	x3, #0xa                   	// #10
   1af70:	cmp	w0, #0x12
   1af74:	b.le	1b1a4 <PyInit__decimal@@Base+0xa21c>
   1af78:	ldr	x0, [x21, #40]
   1af7c:	add	x22, x22, #0x1
   1af80:	mov	x3, #0xa                   	// #10
   1af84:	str	x7, [x0, x4]
   1af88:	ldr	x1, [x23, #24]
   1af8c:	cmp	x1, x22
   1af90:	b.gt	1b1c8 <PyInit__decimal@@Base+0xa240>
   1af94:	ldrb	w3, [x21]
   1af98:	str	xzr, [x21, #8]
   1af9c:	and	w2, w3, #0xfffffff0
   1afa0:	strb	w2, [x21]
   1afa4:	bl	161c8 <PyInit__decimal@@Base+0x5240>
   1afa8:	str	x0, [x21, #24]
   1afac:	ldr	x1, [x19, #1688]
   1afb0:	cmp	x1, x0
   1afb4:	csel	x1, x1, x0, ge  // ge = tcont
   1afb8:	ldr	x0, [x21, #32]
   1afbc:	cmp	x1, x0
   1afc0:	b.eq	1afdc <PyInit__decimal@@Base+0xa054>  // b.none
   1afc4:	tbz	w3, #5, 1b1fc <PyInit__decimal@@Base+0xa274>
   1afc8:	cmp	x1, x0
   1afcc:	b.le	1afdc <PyInit__decimal@@Base+0xa054>
   1afd0:	mov	x2, x25
   1afd4:	mov	x0, x21
   1afd8:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   1afdc:	mov	x0, x21
   1afe0:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   1afe4:	mov	x1, x20
   1afe8:	ldp	x19, x20, [sp, #16]
   1afec:	ldp	x21, x22, [sp, #32]
   1aff0:	ldp	x23, x24, [sp, #48]
   1aff4:	ldr	x25, [sp, #64]
   1aff8:	ldp	x29, x30, [sp], #80
   1affc:	b	18274 <PyInit__decimal@@Base+0x72ec>
   1b000:	ldrb	w2, [x21]
   1b004:	tbz	w2, #5, 1b038 <PyInit__decimal@@Base+0xa0b0>
   1b008:	cmp	x1, x0
   1b00c:	b.le	1aea4 <PyInit__decimal@@Base+0x9f1c>
   1b010:	mov	x2, x25
   1b014:	mov	x0, x21
   1b018:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   1b01c:	cbnz	w0, 1aea4 <PyInit__decimal@@Base+0x9f1c>
   1b020:	ldp	x19, x20, [sp, #16]
   1b024:	ldp	x21, x22, [sp, #32]
   1b028:	ldp	x23, x24, [sp, #48]
   1b02c:	ldr	x25, [sp, #64]
   1b030:	ldp	x29, x30, [sp], #80
   1b034:	ret
   1b038:	mov	x2, x25
   1b03c:	mov	x0, x21
   1b040:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   1b044:	b	1b01c <PyInit__decimal@@Base+0xa094>
   1b048:	mov	x5, #0x0                   	// #0
   1b04c:	mov	x8, #0x0                   	// #0
   1b050:	udiv	x9, x3, x2
   1b054:	udiv	x10, x1, x2
   1b058:	msub	x0, x9, x2, x3
   1b05c:	mov	x3, x9
   1b060:	msub	x9, x10, x2, x1
   1b064:	cmp	x0, #0x1
   1b068:	mov	x1, x10
   1b06c:	ccmp	x9, #0x1, #0x2, ls  // ls = plast
   1b070:	b.hi	1ae40 <PyInit__decimal@@Base+0x9eb8>  // b.pmore
   1b074:	orr	x0, x0, x9
   1b078:	cbz	x0, 1b080 <PyInit__decimal@@Base+0xa0f8>
   1b07c:	ldr	x0, [x7, x5, lsl #3]
   1b080:	add	x5, x5, #0x1
   1b084:	add	x8, x8, x0
   1b088:	cmp	x5, #0x13
   1b08c:	b.ne	1b050 <PyInit__decimal@@Base+0xa0c8>  // b.any
   1b090:	ldr	x0, [x21, #40]
   1b094:	add	x22, x22, #0x1
   1b098:	str	x8, [x0, x4]
   1b09c:	b	1aeb8 <PyInit__decimal@@Base+0x9f30>
   1b0a0:	ldr	x0, [x0, #24]
   1b0a4:	cmp	x0, x3
   1b0a8:	cset	w5, ls  // ls = plast
   1b0ac:	add	w5, w5, #0x3
   1b0b0:	b	1af10 <PyInit__decimal@@Base+0x9f88>
   1b0b4:	ldr	x5, [x0, #48]
   1b0b8:	cmp	x5, x3
   1b0bc:	b.ls	1b0d4 <PyInit__decimal@@Base+0xa14c>  // b.plast
   1b0c0:	ldr	x0, [x0, #40]
   1b0c4:	cmp	x0, x3
   1b0c8:	cset	w5, ls  // ls = plast
   1b0cc:	add	w5, w5, #0x5
   1b0d0:	b	1af10 <PyInit__decimal@@Base+0x9f88>
   1b0d4:	ldr	x5, [x0, #64]
   1b0d8:	cmp	x5, x3
   1b0dc:	b.ls	1b194 <PyInit__decimal@@Base+0xa20c>  // b.plast
   1b0e0:	ldr	x0, [x0, #56]
   1b0e4:	cmp	x0, x3
   1b0e8:	cset	w5, ls  // ls = plast
   1b0ec:	add	w5, w5, #0x7
   1b0f0:	b	1af10 <PyInit__decimal@@Base+0x9f88>
   1b0f4:	ldr	x5, [x0, #112]
   1b0f8:	cmp	x5, x3
   1b0fc:	b.ls	1b140 <PyInit__decimal@@Base+0xa1b8>  // b.plast
   1b100:	ldr	x5, [x0, #88]
   1b104:	cmp	x5, x3
   1b108:	b.ls	1b120 <PyInit__decimal@@Base+0xa198>  // b.plast
   1b10c:	ldr	x0, [x0, #80]
   1b110:	cmp	x0, x3
   1b114:	cset	w5, ls  // ls = plast
   1b118:	add	w5, w5, #0xa
   1b11c:	b	1af10 <PyInit__decimal@@Base+0x9f88>
   1b120:	ldr	x5, [x0, #104]
   1b124:	cmp	x5, x3
   1b128:	b.ls	1b19c <PyInit__decimal@@Base+0xa214>  // b.plast
   1b12c:	ldr	x0, [x0, #96]
   1b130:	cmp	x0, x3
   1b134:	cset	w5, ls  // ls = plast
   1b138:	add	w5, w5, #0xc
   1b13c:	b	1af10 <PyInit__decimal@@Base+0x9f88>
   1b140:	ldr	x5, [x0, #144]
   1b144:	cmp	x5, x3
   1b148:	b.ls	1b180 <PyInit__decimal@@Base+0xa1f8>  // b.plast
   1b14c:	ldr	x5, [x0, #128]
   1b150:	cmp	x5, x3
   1b154:	b.ls	1b16c <PyInit__decimal@@Base+0xa1e4>  // b.plast
   1b158:	ldr	x0, [x0, #120]
   1b15c:	cmp	x0, x3
   1b160:	cset	w5, ls  // ls = plast
   1b164:	add	w5, w5, #0xf
   1b168:	b	1af10 <PyInit__decimal@@Base+0x9f88>
   1b16c:	ldr	x0, [x0, #136]
   1b170:	cmp	x0, x3
   1b174:	cset	w5, ls  // ls = plast
   1b178:	add	w5, w5, #0x11
   1b17c:	b	1af10 <PyInit__decimal@@Base+0x9f88>
   1b180:	ldr	x0, [x0, #152]
   1b184:	cmp	x0, x3
   1b188:	cset	w5, ls  // ls = plast
   1b18c:	add	w5, w5, #0x13
   1b190:	b	1af10 <PyInit__decimal@@Base+0x9f88>
   1b194:	mov	w5, #0x9                   	// #9
   1b198:	b	1af10 <PyInit__decimal@@Base+0x9f88>
   1b19c:	mov	w5, #0xe                   	// #14
   1b1a0:	b	1af10 <PyInit__decimal@@Base+0x9f88>
   1b1a4:	udiv	x8, x1, x3
   1b1a8:	msub	x5, x8, x3, x1
   1b1ac:	mov	x1, x8
   1b1b0:	cmp	x5, #0x1
   1b1b4:	b.hi	1ae40 <PyInit__decimal@@Base+0x9eb8>  // b.pmore
   1b1b8:	ldr	x8, [x2, x0, lsl #3]
   1b1bc:	add	x0, x0, #0x1
   1b1c0:	madd	x7, x5, x8, x7
   1b1c4:	b	1af70 <PyInit__decimal@@Base+0x9fe8>
   1b1c8:	ldr	x4, [x6, x22, lsl #3]
   1b1cc:	mov	w1, #0x13                  	// #19
   1b1d0:	mov	x2, x4
   1b1d4:	udiv	x5, x2, x3
   1b1d8:	msub	x7, x5, x3, x2
   1b1dc:	mov	x2, x5
   1b1e0:	cmp	x7, #0x1
   1b1e4:	b.hi	1ae40 <PyInit__decimal@@Base+0x9eb8>  // b.pmore
   1b1e8:	subs	w1, w1, #0x1
   1b1ec:	b.ne	1b1d4 <PyInit__decimal@@Base+0xa24c>  // b.any
   1b1f0:	str	x4, [x0, x22, lsl #3]
   1b1f4:	add	x22, x22, #0x1
   1b1f8:	b	1af88 <PyInit__decimal@@Base+0xa000>
   1b1fc:	mov	x2, x25
   1b200:	mov	x0, x21
   1b204:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   1b208:	b	1afdc <PyInit__decimal@@Base+0xa054>
   1b20c:	sub	sp, sp, #0x6f0
   1b210:	stp	x29, x30, [sp]
   1b214:	mov	x29, sp
   1b218:	stp	x19, x20, [sp, #16]
   1b21c:	mov	x19, x1
   1b220:	mov	w1, #0x30                  	// #48
   1b224:	stp	x21, x22, [sp, #32]
   1b228:	mov	x22, x0
   1b22c:	mov	x0, #0x40                  	// #64
   1b230:	stp	x23, x24, [sp, #48]
   1b234:	mov	x21, x2
   1b238:	add	x2, sp, #0xf0
   1b23c:	str	x25, [sp, #64]
   1b240:	mov	x23, x3
   1b244:	stp	xzr, x0, [sp, #120]
   1b248:	mov	x20, x4
   1b24c:	stp	xzr, x0, [sp, #168]
   1b250:	stp	xzr, x0, [sp, #216]
   1b254:	add	x0, sp, #0x4f0
   1b258:	str	wzr, [sp, #92]
   1b25c:	strb	w1, [sp, #96]
   1b260:	stp	xzr, xzr, [sp, #104]
   1b264:	str	x2, [sp, #136]
   1b268:	add	x2, sp, #0x2f0
   1b26c:	strb	w1, [sp, #144]
   1b270:	stp	xzr, xzr, [sp, #152]
   1b274:	str	x2, [sp, #184]
   1b278:	strb	w1, [sp, #192]
   1b27c:	stp	xzr, xzr, [sp, #200]
   1b280:	str	x0, [sp, #232]
   1b284:	ldrb	w0, [x19]
   1b288:	tst	w0, #0xe
   1b28c:	b.ne	1b2b8 <PyInit__decimal@@Base+0xa330>  // b.any
   1b290:	ldrb	w0, [x21]
   1b294:	tst	w0, #0xe
   1b298:	b.ne	1b2b8 <PyInit__decimal@@Base+0xa330>  // b.any
   1b29c:	ldr	x0, [x21, #8]
   1b2a0:	cbz	x0, 1b2f0 <PyInit__decimal@@Base+0xa368>
   1b2a4:	mov	x2, x20
   1b2a8:	mov	x0, x22
   1b2ac:	mov	w1, #0x100                 	// #256
   1b2b0:	bl	18904 <PyInit__decimal@@Base+0x797c>
   1b2b4:	b	1b2d4 <PyInit__decimal@@Base+0xa34c>
   1b2b8:	mov	x4, x20
   1b2bc:	mov	x3, x23
   1b2c0:	mov	x2, x21
   1b2c4:	mov	x1, x19
   1b2c8:	mov	x0, x22
   1b2cc:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   1b2d0:	cbz	w0, 1b29c <PyInit__decimal@@Base+0xa314>
   1b2d4:	ldp	x29, x30, [sp]
   1b2d8:	ldp	x19, x20, [sp, #16]
   1b2dc:	ldp	x21, x22, [sp, #32]
   1b2e0:	ldp	x23, x24, [sp, #48]
   1b2e4:	ldr	x25, [sp, #64]
   1b2e8:	add	sp, sp, #0x6f0
   1b2ec:	ret
   1b2f0:	ldrb	w0, [x21]
   1b2f4:	tbnz	w0, #1, 1b2a4 <PyInit__decimal@@Base+0xa31c>
   1b2f8:	mov	x0, x21
   1b2fc:	add	x1, sp, #0x5c
   1b300:	bl	18a68 <PyInit__decimal@@Base+0x7ae0>
   1b304:	mov	x21, x0
   1b308:	ldr	w0, [sp, #92]
   1b30c:	tbnz	w0, #8, 1b2a4 <PyInit__decimal@@Base+0xa31c>
   1b310:	ldr	x0, [x23]
   1b314:	cmp	x0, x21
   1b318:	b.lt	1b2a4 <PyInit__decimal@@Base+0xa31c>  // b.tstop
   1b31c:	neg	x1, x0
   1b320:	cmp	x1, x21
   1b324:	b.gt	1b2a4 <PyInit__decimal@@Base+0xa31c>
   1b328:	ldrb	w1, [x19]
   1b32c:	tbz	w1, #1, 1b344 <PyInit__decimal@@Base+0xa3bc>
   1b330:	mov	x2, x20
   1b334:	mov	x1, x19
   1b338:	mov	x0, x22
   1b33c:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1b340:	b	1b2d4 <PyInit__decimal@@Base+0xa34c>
   1b344:	tbnz	x21, #63, 1b420 <PyInit__decimal@@Base+0xa498>
   1b348:	sub	x25, x0, x21
   1b34c:	ldr	x1, [x19, #16]
   1b350:	cmp	x0, x1
   1b354:	b.ge	1b43c <PyInit__decimal@@Base+0xa4b4>  // b.tcont
   1b358:	add	x24, sp, #0x60
   1b35c:	mov	x2, x20
   1b360:	mov	x1, x19
   1b364:	mov	x0, x24
   1b368:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1b36c:	cbnz	w0, 1b42c <PyInit__decimal@@Base+0xa4a4>
   1b370:	mov	x2, x20
   1b374:	mov	x0, x22
   1b378:	mov	w1, #0x200                 	// #512
   1b37c:	bl	18904 <PyInit__decimal@@Base+0x797c>
   1b380:	ldrb	w0, [sp, #96]
   1b384:	tst	w0, #0xe0
   1b388:	b.ne	1b39c <PyInit__decimal@@Base+0xa414>  // b.any
   1b38c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1b390:	ldr	x1, [x0, #1720]
   1b394:	ldr	x0, [sp, #136]
   1b398:	blr	x1
   1b39c:	ldrb	w0, [sp, #96]
   1b3a0:	tbnz	w0, #4, 1b3b4 <PyInit__decimal@@Base+0xa42c>
   1b3a4:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1b3a8:	ldr	x1, [x0, #1720]
   1b3ac:	add	x0, sp, #0x60
   1b3b0:	blr	x1
   1b3b4:	ldrb	w0, [sp, #144]
   1b3b8:	tst	w0, #0xe0
   1b3bc:	b.ne	1b3d0 <PyInit__decimal@@Base+0xa448>  // b.any
   1b3c0:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1b3c4:	ldr	x1, [x0, #1720]
   1b3c8:	ldr	x0, [sp, #184]
   1b3cc:	blr	x1
   1b3d0:	ldrb	w0, [sp, #144]
   1b3d4:	tbnz	w0, #4, 1b3e8 <PyInit__decimal@@Base+0xa460>
   1b3d8:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1b3dc:	ldr	x1, [x0, #1720]
   1b3e0:	add	x0, sp, #0x90
   1b3e4:	blr	x1
   1b3e8:	ldrb	w0, [sp, #192]
   1b3ec:	tst	w0, #0xe0
   1b3f0:	b.ne	1b404 <PyInit__decimal@@Base+0xa47c>  // b.any
   1b3f4:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1b3f8:	ldr	x1, [x0, #1720]
   1b3fc:	ldr	x0, [sp, #232]
   1b400:	blr	x1
   1b404:	ldrb	w0, [sp, #192]
   1b408:	tbnz	w0, #4, 1b2d4 <PyInit__decimal@@Base+0xa34c>
   1b40c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1b410:	ldr	x1, [x0, #1720]
   1b414:	add	x0, sp, #0xc0
   1b418:	blr	x1
   1b41c:	b	1b2d4 <PyInit__decimal@@Base+0xa34c>
   1b420:	neg	x25, x21
   1b424:	add	x21, x0, x21
   1b428:	b	1b34c <PyInit__decimal@@Base+0xa3c4>
   1b42c:	mov	x19, x24
   1b430:	mov	x1, x23
   1b434:	mov	x0, x24
   1b438:	bl	18274 <PyInit__decimal@@Base+0x72ec>
   1b43c:	add	x24, sp, #0x90
   1b440:	mov	x3, x20
   1b444:	mov	x2, x21
   1b448:	mov	x1, x19
   1b44c:	mov	x0, x24
   1b450:	bl	19718 <PyInit__decimal@@Base+0x8790>
   1b454:	cbz	w0, 1b370 <PyInit__decimal@@Base+0xa3e8>
   1b458:	mov	x1, x23
   1b45c:	mov	x0, x24
   1b460:	add	x21, sp, #0xc0
   1b464:	bl	18274 <PyInit__decimal@@Base+0x72ec>
   1b468:	mov	x3, x20
   1b46c:	mov	x2, x25
   1b470:	mov	x1, x19
   1b474:	mov	x0, x21
   1b478:	bl	1a260 <PyInit__decimal@@Base+0x92d8>
   1b47c:	cmn	x0, #0x1
   1b480:	b.eq	1b370 <PyInit__decimal@@Base+0xa3e8>  // b.none
   1b484:	ldrb	w3, [sp, #192]
   1b488:	mov	x5, x20
   1b48c:	mov	x4, x23
   1b490:	mov	x2, x21
   1b494:	and	w3, w3, #0x1
   1b498:	mov	x1, x24
   1b49c:	mov	x0, x22
   1b4a0:	bl	19818 <PyInit__decimal@@Base+0x8890>
   1b4a4:	b	1b380 <PyInit__decimal@@Base+0xa3f8>
   1b4a8:	stp	x29, x30, [sp, #-80]!
   1b4ac:	mov	x29, sp
   1b4b0:	stp	x19, x20, [sp, #16]
   1b4b4:	mov	x20, x0
   1b4b8:	stp	x21, x22, [sp, #32]
   1b4bc:	mov	x21, x1
   1b4c0:	mov	x22, x2
   1b4c4:	stp	x23, x24, [sp, #48]
   1b4c8:	mov	x24, x3
   1b4cc:	mov	x23, x4
   1b4d0:	ldrb	w0, [x1]
   1b4d4:	str	wzr, [sp, #76]
   1b4d8:	tst	w0, #0xe
   1b4dc:	b.ne	1b508 <PyInit__decimal@@Base+0xa580>  // b.any
   1b4e0:	ldrb	w0, [x2]
   1b4e4:	tst	w0, #0xe
   1b4e8:	b.ne	1b508 <PyInit__decimal@@Base+0xa580>  // b.any
   1b4ec:	ldr	x0, [x22, #8]
   1b4f0:	cbz	x0, 1b538 <PyInit__decimal@@Base+0xa5b0>
   1b4f4:	mov	x2, x23
   1b4f8:	mov	x0, x20
   1b4fc:	mov	w1, #0x100                 	// #256
   1b500:	bl	18904 <PyInit__decimal@@Base+0x797c>
   1b504:	b	1b524 <PyInit__decimal@@Base+0xa59c>
   1b508:	mov	x4, x23
   1b50c:	mov	x3, x24
   1b510:	mov	x2, x22
   1b514:	mov	x1, x21
   1b518:	mov	x0, x20
   1b51c:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   1b520:	cbz	w0, 1b4ec <PyInit__decimal@@Base+0xa564>
   1b524:	ldp	x19, x20, [sp, #16]
   1b528:	ldp	x21, x22, [sp, #32]
   1b52c:	ldp	x23, x24, [sp, #48]
   1b530:	ldp	x29, x30, [sp], #80
   1b534:	ret
   1b538:	ldrb	w0, [x22]
   1b53c:	tbnz	w0, #1, 1b4f4 <PyInit__decimal@@Base+0xa56c>
   1b540:	add	x1, sp, #0x4c
   1b544:	mov	x0, x22
   1b548:	bl	18a2c <PyInit__decimal@@Base+0x7aa4>
   1b54c:	ldp	x2, x1, [x24]
   1b550:	add	x1, x1, x2
   1b554:	cmp	x0, x1, lsl #1
   1b558:	b.hi	1b4f4 <PyInit__decimal@@Base+0xa56c>  // b.pmore
   1b55c:	ldr	w1, [sp, #76]
   1b560:	tbnz	w1, #8, 1b4f4 <PyInit__decimal@@Base+0xa56c>
   1b564:	ldrb	w1, [x21]
   1b568:	tbz	w1, #1, 1b580 <PyInit__decimal@@Base+0xa5f8>
   1b56c:	mov	x2, x23
   1b570:	mov	x1, x21
   1b574:	mov	x0, x20
   1b578:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1b57c:	b	1b524 <PyInit__decimal@@Base+0xa59c>
   1b580:	ldrb	w19, [x22]
   1b584:	mov	w1, #0xfffffffe            	// #-2
   1b588:	mov	x2, x23
   1b58c:	and	w19, w19, #0x1
   1b590:	mul	w19, w19, w1
   1b594:	ldr	x1, [x21, #8]
   1b598:	add	w19, w19, #0x1
   1b59c:	sxtw	x19, w19
   1b5a0:	madd	x19, x19, x0, x1
   1b5a4:	mov	x0, #0x1                   	// #1
   1b5a8:	movk	x0, #0x4ec8, lsl #16
   1b5ac:	mov	x1, x21
   1b5b0:	movk	x0, #0x6d67, lsl #32
   1b5b4:	movk	x0, #0x1bc1, lsl #48
   1b5b8:	cmp	x19, x0
   1b5bc:	csel	x19, x19, x0, le
   1b5c0:	mov	x0, x20
   1b5c4:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1b5c8:	mov	x0, #0xffffffff626fffff    	// #-2643460097
   1b5cc:	mov	x2, x23
   1b5d0:	movk	x0, #0x2531, lsl #32
   1b5d4:	mov	x1, x24
   1b5d8:	movk	x0, #0xc87d, lsl #48
   1b5dc:	cmp	x19, x0
   1b5e0:	csel	x19, x19, x0, ge  // ge = tcont
   1b5e4:	str	x19, [x20, #8]
   1b5e8:	mov	x0, x20
   1b5ec:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   1b5f0:	b	1b524 <PyInit__decimal@@Base+0xa59c>
   1b5f4:	stp	x29, x30, [sp, #-64]!
   1b5f8:	mov	x29, sp
   1b5fc:	stp	x19, x20, [sp, #16]
   1b600:	mov	x19, x0
   1b604:	mov	x20, x4
   1b608:	stp	x21, x22, [sp, #32]
   1b60c:	mov	x22, x3
   1b610:	str	x23, [sp, #48]
   1b614:	ldrb	w3, [x1]
   1b618:	tst	w3, #0xe
   1b61c:	b.eq	1b654 <PyInit__decimal@@Base+0xa6cc>  // b.none
   1b620:	mov	x23, x1
   1b624:	mov	x3, x4
   1b628:	mov	x2, x22
   1b62c:	bl	18c14 <PyInit__decimal@@Base+0x7c8c>
   1b630:	cbnz	w0, 1b6ec <PyInit__decimal@@Base+0xa764>
   1b634:	mov	x2, x20
   1b638:	mov	x1, x23
   1b63c:	mov	x0, x19
   1b640:	ldp	x19, x20, [sp, #16]
   1b644:	ldp	x21, x22, [sp, #32]
   1b648:	ldr	x23, [sp, #48]
   1b64c:	ldp	x29, x30, [sp], #64
   1b650:	b	18b60 <PyInit__decimal@@Base+0x7bd8>
   1b654:	mov	x21, x2
   1b658:	ldr	x3, [x22]
   1b65c:	tbnz	x2, #63, 1b68c <PyInit__decimal@@Base+0xa704>
   1b660:	cmp	x2, x3
   1b664:	b.gt	1b6cc <PyInit__decimal@@Base+0xa744>
   1b668:	mov	x3, x4
   1b66c:	bl	19718 <PyInit__decimal@@Base+0x8790>
   1b670:	mov	x1, x22
   1b674:	mov	x0, x19
   1b678:	ldp	x19, x20, [sp, #16]
   1b67c:	ldp	x21, x22, [sp, #32]
   1b680:	ldr	x23, [sp, #48]
   1b684:	ldp	x29, x30, [sp], #64
   1b688:	b	18274 <PyInit__decimal@@Base+0x72ec>
   1b68c:	neg	x3, x3
   1b690:	cmp	x3, x2
   1b694:	b.gt	1b6cc <PyInit__decimal@@Base+0xa744>
   1b698:	mov	x2, x4
   1b69c:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1b6a0:	cbz	w0, 1b6ec <PyInit__decimal@@Base+0xa764>
   1b6a4:	mov	x1, x22
   1b6a8:	mov	x0, x19
   1b6ac:	bl	18274 <PyInit__decimal@@Base+0x72ec>
   1b6b0:	neg	x1, x21
   1b6b4:	mov	x0, x19
   1b6b8:	ldp	x19, x20, [sp, #16]
   1b6bc:	ldp	x21, x22, [sp, #32]
   1b6c0:	ldr	x23, [sp, #48]
   1b6c4:	ldp	x29, x30, [sp], #64
   1b6c8:	b	19c58 <PyInit__decimal@@Base+0x8cd0>
   1b6cc:	mov	x2, x20
   1b6d0:	mov	x0, x19
   1b6d4:	ldp	x19, x20, [sp, #16]
   1b6d8:	mov	w1, #0x100                 	// #256
   1b6dc:	ldp	x21, x22, [sp, #32]
   1b6e0:	ldr	x23, [sp, #48]
   1b6e4:	ldp	x29, x30, [sp], #64
   1b6e8:	b	18904 <PyInit__decimal@@Base+0x797c>
   1b6ec:	ldp	x19, x20, [sp, #16]
   1b6f0:	ldp	x21, x22, [sp, #32]
   1b6f4:	ldr	x23, [sp, #48]
   1b6f8:	ldp	x29, x30, [sp], #64
   1b6fc:	ret
   1b700:	stp	x29, x30, [sp, #-80]!
   1b704:	mov	x29, sp
   1b708:	stp	x19, x20, [sp, #16]
   1b70c:	mov	x19, x0
   1b710:	mov	x20, x1
   1b714:	stp	x21, x22, [sp, #32]
   1b718:	mov	x21, x2
   1b71c:	mov	x22, x4
   1b720:	str	x23, [sp, #48]
   1b724:	mov	x23, x3
   1b728:	str	wzr, [sp, #76]
   1b72c:	ldrb	w0, [x1]
   1b730:	tst	w0, #0xe
   1b734:	b.ne	1b760 <PyInit__decimal@@Base+0xa7d8>  // b.any
   1b738:	ldrb	w0, [x2]
   1b73c:	tst	w0, #0xe
   1b740:	b.ne	1b760 <PyInit__decimal@@Base+0xa7d8>  // b.any
   1b744:	ldr	x0, [x21, #8]
   1b748:	cbz	x0, 1b790 <PyInit__decimal@@Base+0xa808>
   1b74c:	mov	x2, x22
   1b750:	mov	x0, x19
   1b754:	mov	w1, #0x100                 	// #256
   1b758:	bl	18904 <PyInit__decimal@@Base+0x797c>
   1b75c:	b	1b77c <PyInit__decimal@@Base+0xa7f4>
   1b760:	mov	x4, x22
   1b764:	mov	x3, x23
   1b768:	mov	x2, x21
   1b76c:	mov	x1, x20
   1b770:	mov	x0, x19
   1b774:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   1b778:	cbz	w0, 1b744 <PyInit__decimal@@Base+0xa7bc>
   1b77c:	ldp	x19, x20, [sp, #16]
   1b780:	ldp	x21, x22, [sp, #32]
   1b784:	ldr	x23, [sp, #48]
   1b788:	ldp	x29, x30, [sp], #80
   1b78c:	ret
   1b790:	ldrb	w0, [x21]
   1b794:	tbnz	w0, #1, 1b74c <PyInit__decimal@@Base+0xa7c4>
   1b798:	mov	x0, x21
   1b79c:	add	x1, sp, #0x4c
   1b7a0:	bl	18a68 <PyInit__decimal@@Base+0x7ae0>
   1b7a4:	mov	x21, x0
   1b7a8:	ldr	w0, [sp, #76]
   1b7ac:	tbnz	w0, #8, 1b74c <PyInit__decimal@@Base+0xa7c4>
   1b7b0:	ldr	x0, [x23]
   1b7b4:	cmp	x0, x21
   1b7b8:	b.lt	1b74c <PyInit__decimal@@Base+0xa7c4>  // b.tstop
   1b7bc:	neg	x0, x0
   1b7c0:	cmp	x0, x21
   1b7c4:	b.gt	1b74c <PyInit__decimal@@Base+0xa7c4>
   1b7c8:	ldrb	w0, [x20]
   1b7cc:	tbz	w0, #1, 1b7e4 <PyInit__decimal@@Base+0xa85c>
   1b7d0:	mov	x2, x22
   1b7d4:	mov	x1, x20
   1b7d8:	mov	x0, x19
   1b7dc:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1b7e0:	b	1b77c <PyInit__decimal@@Base+0xa7f4>
   1b7e4:	tbnz	x21, #63, 1b80c <PyInit__decimal@@Base+0xa884>
   1b7e8:	mov	x3, x22
   1b7ec:	mov	x2, x21
   1b7f0:	mov	x1, x20
   1b7f4:	mov	x0, x19
   1b7f8:	bl	19718 <PyInit__decimal@@Base+0x8790>
   1b7fc:	mov	x1, x23
   1b800:	mov	x0, x19
   1b804:	bl	18274 <PyInit__decimal@@Base+0x72ec>
   1b808:	b	1b77c <PyInit__decimal@@Base+0xa7f4>
   1b80c:	mov	x2, x22
   1b810:	mov	x1, x20
   1b814:	mov	x0, x19
   1b818:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1b81c:	cbz	w0, 1b77c <PyInit__decimal@@Base+0xa7f4>
   1b820:	mov	x1, x23
   1b824:	mov	x0, x19
   1b828:	bl	18274 <PyInit__decimal@@Base+0x72ec>
   1b82c:	neg	x1, x21
   1b830:	mov	x0, x19
   1b834:	bl	19c58 <PyInit__decimal@@Base+0x8cd0>
   1b838:	b	1b77c <PyInit__decimal@@Base+0xa7f4>
   1b83c:	stp	x29, x30, [sp, #-80]!
   1b840:	mov	x29, sp
   1b844:	stp	x19, x20, [sp, #16]
   1b848:	stp	x21, x22, [sp, #32]
   1b84c:	mov	x21, x0
   1b850:	stp	x23, x24, [sp, #48]
   1b854:	str	x25, [sp, #64]
   1b858:	mov	x25, x4
   1b85c:	ldrb	w0, [x1]
   1b860:	tst	w0, #0xe
   1b864:	b.ne	1b898 <PyInit__decimal@@Base+0xa910>  // b.any
   1b868:	mov	x23, x1
   1b86c:	ldrb	w1, [x2]
   1b870:	mov	x24, x2
   1b874:	orr	w0, w1, w0
   1b878:	and	w1, w1, #0xe
   1b87c:	and	w0, w0, #0x1
   1b880:	orr	w0, w0, w1
   1b884:	cbnz	w0, 1b898 <PyInit__decimal@@Base+0xa910>
   1b888:	ldr	x0, [x23, #8]
   1b88c:	cbnz	x0, 1b898 <PyInit__decimal@@Base+0xa910>
   1b890:	ldr	x22, [x2, #8]
   1b894:	cbz	x22, 1b8bc <PyInit__decimal@@Base+0xa934>
   1b898:	mov	x2, x25
   1b89c:	mov	x0, x21
   1b8a0:	ldp	x19, x20, [sp, #16]
   1b8a4:	mov	w1, #0x100                 	// #256
   1b8a8:	ldp	x21, x22, [sp, #32]
   1b8ac:	ldp	x23, x24, [sp, #48]
   1b8b0:	ldr	x25, [sp, #64]
   1b8b4:	ldp	x29, x30, [sp], #80
   1b8b8:	b	18904 <PyInit__decimal@@Base+0x797c>
   1b8bc:	ldr	x0, [x23, #16]
   1b8c0:	mov	x20, x3
   1b8c4:	ldr	x1, [x2, #16]
   1b8c8:	cmp	x1, x0
   1b8cc:	b.le	1b8dc <PyInit__decimal@@Base+0xa954>
   1b8d0:	mov	x0, x23
   1b8d4:	mov	x23, x2
   1b8d8:	mov	x24, x0
   1b8dc:	adrp	x19, 45000 <PyInit__decimal@@Base+0x34078>
   1b8e0:	ldr	x1, [x23, #24]
   1b8e4:	ldr	x0, [x19, #1688]
   1b8e8:	cmp	x1, x0
   1b8ec:	csel	x1, x1, x0, ge  // ge = tcont
   1b8f0:	ldr	x0, [x21, #32]
   1b8f4:	cmp	x1, x0
   1b8f8:	b.ne	1ba58 <PyInit__decimal@@Base+0xaad0>  // b.any
   1b8fc:	ldr	x9, [x23, #40]
   1b900:	adrp	x4, 2a000 <PyInit__decimal@@Base+0x19078>
   1b904:	ldr	x11, [x24, #40]
   1b908:	add	x4, x4, #0xae8
   1b90c:	mov	x0, #0xa                   	// #10
   1b910:	ldr	x2, [x24, #24]
   1b914:	lsl	x7, x22, #3
   1b918:	sub	x2, x2, #0x1
   1b91c:	cmp	x2, x22
   1b920:	ldr	x3, [x11, x7]
   1b924:	ldr	x1, [x9, x7]
   1b928:	b.gt	1baa0 <PyInit__decimal@@Base+0xab18>
   1b92c:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   1b930:	add	x0, x2, #0xae8
   1b934:	ldr	x4, [x0, #72]
   1b938:	cmp	x4, x3
   1b93c:	b.ls	1bb54 <PyInit__decimal@@Base+0xabcc>  // b.plast
   1b940:	ldr	x4, [x0, #32]
   1b944:	cmp	x4, x3
   1b948:	b.ls	1bb14 <PyInit__decimal@@Base+0xab8c>  // b.plast
   1b94c:	ldr	x4, [x0, #16]
   1b950:	cmp	x4, x3
   1b954:	b.ls	1bb00 <PyInit__decimal@@Base+0xab78>  // b.plast
   1b958:	ldr	x0, [x0, #8]
   1b95c:	cmp	x0, x3
   1b960:	cset	w5, ls  // ls = plast
   1b964:	add	w5, w5, #0x1
   1b968:	add	x12, x2, #0xae8
   1b96c:	mov	x6, #0x0                   	// #0
   1b970:	mov	x4, #0x0                   	// #0
   1b974:	mov	x8, #0xa                   	// #10
   1b978:	udiv	x0, x3, x8
   1b97c:	udiv	x11, x1, x8
   1b980:	msub	x10, x0, x8, x3
   1b984:	mov	x3, x0
   1b988:	msub	x0, x11, x8, x1
   1b98c:	cmp	x10, #0x1
   1b990:	mov	x1, x11
   1b994:	ccmp	x0, #0x1, #0x2, ls  // ls = plast
   1b998:	b.hi	1b898 <PyInit__decimal@@Base+0xa910>  // b.pmore
   1b99c:	cmp	x10, x0
   1b9a0:	b.eq	1bc04 <PyInit__decimal@@Base+0xac7c>  // b.none
   1b9a4:	ldr	x0, [x12, x6, lsl #3]
   1b9a8:	add	x4, x4, x0
   1b9ac:	add	w0, w6, #0x1
   1b9b0:	add	x6, x6, #0x1
   1b9b4:	cmp	w5, w6
   1b9b8:	b.gt	1b978 <PyInit__decimal@@Base+0xa9f0>
   1b9bc:	sxtw	x0, w0
   1b9c0:	add	x2, x2, #0xae8
   1b9c4:	mov	x3, #0xa                   	// #10
   1b9c8:	cmp	w0, #0x12
   1b9cc:	b.le	1bc0c <PyInit__decimal@@Base+0xac84>
   1b9d0:	ldr	x0, [x21, #40]
   1b9d4:	add	x22, x22, #0x1
   1b9d8:	mov	x3, #0xa                   	// #10
   1b9dc:	str	x4, [x0, x7]
   1b9e0:	ldr	x1, [x23, #24]
   1b9e4:	cmp	x1, x22
   1b9e8:	b.gt	1bc30 <PyInit__decimal@@Base+0xaca8>
   1b9ec:	ldrb	w3, [x21]
   1b9f0:	str	xzr, [x21, #8]
   1b9f4:	and	w2, w3, #0xfffffff0
   1b9f8:	strb	w2, [x21]
   1b9fc:	bl	161c8 <PyInit__decimal@@Base+0x5240>
   1ba00:	str	x0, [x21, #24]
   1ba04:	ldr	x1, [x19, #1688]
   1ba08:	cmp	x1, x0
   1ba0c:	csel	x1, x1, x0, ge  // ge = tcont
   1ba10:	ldr	x0, [x21, #32]
   1ba14:	cmp	x1, x0
   1ba18:	b.eq	1ba34 <PyInit__decimal@@Base+0xaaac>  // b.none
   1ba1c:	tbz	w3, #5, 1bc64 <PyInit__decimal@@Base+0xacdc>
   1ba20:	cmp	x1, x0
   1ba24:	b.le	1ba34 <PyInit__decimal@@Base+0xaaac>
   1ba28:	mov	x2, x25
   1ba2c:	mov	x0, x21
   1ba30:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   1ba34:	mov	x0, x21
   1ba38:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   1ba3c:	mov	x1, x20
   1ba40:	ldp	x19, x20, [sp, #16]
   1ba44:	ldp	x21, x22, [sp, #32]
   1ba48:	ldp	x23, x24, [sp, #48]
   1ba4c:	ldr	x25, [sp, #64]
   1ba50:	ldp	x29, x30, [sp], #80
   1ba54:	b	18274 <PyInit__decimal@@Base+0x72ec>
   1ba58:	ldrb	w2, [x21]
   1ba5c:	tbz	w2, #5, 1ba90 <PyInit__decimal@@Base+0xab08>
   1ba60:	cmp	x1, x0
   1ba64:	b.le	1b8fc <PyInit__decimal@@Base+0xa974>
   1ba68:	mov	x2, x25
   1ba6c:	mov	x0, x21
   1ba70:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   1ba74:	cbnz	w0, 1b8fc <PyInit__decimal@@Base+0xa974>
   1ba78:	ldp	x19, x20, [sp, #16]
   1ba7c:	ldp	x21, x22, [sp, #32]
   1ba80:	ldp	x23, x24, [sp, #48]
   1ba84:	ldr	x25, [sp, #64]
   1ba88:	ldp	x29, x30, [sp], #80
   1ba8c:	ret
   1ba90:	mov	x2, x25
   1ba94:	mov	x0, x21
   1ba98:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   1ba9c:	b	1ba74 <PyInit__decimal@@Base+0xaaec>
   1baa0:	mov	x2, #0x0                   	// #0
   1baa4:	mov	x5, #0x0                   	// #0
   1baa8:	udiv	x6, x3, x0
   1baac:	udiv	x10, x1, x0
   1bab0:	msub	x8, x6, x0, x3
   1bab4:	mov	x3, x6
   1bab8:	msub	x6, x10, x0, x1
   1babc:	cmp	x8, #0x1
   1bac0:	mov	x1, x10
   1bac4:	ccmp	x6, #0x1, #0x2, ls  // ls = plast
   1bac8:	b.hi	1b898 <PyInit__decimal@@Base+0xa910>  // b.pmore
   1bacc:	cmp	x8, x6
   1bad0:	b.eq	1baf8 <PyInit__decimal@@Base+0xab70>  // b.none
   1bad4:	ldr	x6, [x4, x2, lsl #3]
   1bad8:	add	x2, x2, #0x1
   1badc:	add	x5, x5, x6
   1bae0:	cmp	x2, #0x13
   1bae4:	b.ne	1baa8 <PyInit__decimal@@Base+0xab20>  // b.any
   1bae8:	ldr	x1, [x21, #40]
   1baec:	add	x22, x22, #0x1
   1baf0:	str	x5, [x1, x7]
   1baf4:	b	1b910 <PyInit__decimal@@Base+0xa988>
   1baf8:	mov	x6, #0x0                   	// #0
   1bafc:	b	1bad8 <PyInit__decimal@@Base+0xab50>
   1bb00:	ldr	x0, [x0, #24]
   1bb04:	cmp	x0, x3
   1bb08:	cset	w5, ls  // ls = plast
   1bb0c:	add	w5, w5, #0x3
   1bb10:	b	1b968 <PyInit__decimal@@Base+0xa9e0>
   1bb14:	ldr	x4, [x0, #48]
   1bb18:	cmp	x4, x3
   1bb1c:	b.ls	1bb34 <PyInit__decimal@@Base+0xabac>  // b.plast
   1bb20:	ldr	x0, [x0, #40]
   1bb24:	cmp	x0, x3
   1bb28:	cset	w5, ls  // ls = plast
   1bb2c:	add	w5, w5, #0x5
   1bb30:	b	1b968 <PyInit__decimal@@Base+0xa9e0>
   1bb34:	ldr	x4, [x0, #64]
   1bb38:	cmp	x4, x3
   1bb3c:	b.ls	1bbf4 <PyInit__decimal@@Base+0xac6c>  // b.plast
   1bb40:	ldr	x0, [x0, #56]
   1bb44:	cmp	x0, x3
   1bb48:	cset	w5, ls  // ls = plast
   1bb4c:	add	w5, w5, #0x7
   1bb50:	b	1b968 <PyInit__decimal@@Base+0xa9e0>
   1bb54:	ldr	x4, [x0, #112]
   1bb58:	cmp	x4, x3
   1bb5c:	b.ls	1bba0 <PyInit__decimal@@Base+0xac18>  // b.plast
   1bb60:	ldr	x4, [x0, #88]
   1bb64:	cmp	x4, x3
   1bb68:	b.ls	1bb80 <PyInit__decimal@@Base+0xabf8>  // b.plast
   1bb6c:	ldr	x0, [x0, #80]
   1bb70:	cmp	x0, x3
   1bb74:	cset	w5, ls  // ls = plast
   1bb78:	add	w5, w5, #0xa
   1bb7c:	b	1b968 <PyInit__decimal@@Base+0xa9e0>
   1bb80:	ldr	x4, [x0, #104]
   1bb84:	cmp	x4, x3
   1bb88:	b.ls	1bbfc <PyInit__decimal@@Base+0xac74>  // b.plast
   1bb8c:	ldr	x0, [x0, #96]
   1bb90:	cmp	x0, x3
   1bb94:	cset	w5, ls  // ls = plast
   1bb98:	add	w5, w5, #0xc
   1bb9c:	b	1b968 <PyInit__decimal@@Base+0xa9e0>
   1bba0:	ldr	x4, [x0, #144]
   1bba4:	cmp	x4, x3
   1bba8:	b.ls	1bbe0 <PyInit__decimal@@Base+0xac58>  // b.plast
   1bbac:	ldr	x4, [x0, #128]
   1bbb0:	cmp	x4, x3
   1bbb4:	b.ls	1bbcc <PyInit__decimal@@Base+0xac44>  // b.plast
   1bbb8:	ldr	x0, [x0, #120]
   1bbbc:	cmp	x0, x3
   1bbc0:	cset	w5, ls  // ls = plast
   1bbc4:	add	w5, w5, #0xf
   1bbc8:	b	1b968 <PyInit__decimal@@Base+0xa9e0>
   1bbcc:	ldr	x0, [x0, #136]
   1bbd0:	cmp	x0, x3
   1bbd4:	cset	w5, ls  // ls = plast
   1bbd8:	add	w5, w5, #0x11
   1bbdc:	b	1b968 <PyInit__decimal@@Base+0xa9e0>
   1bbe0:	ldr	x0, [x0, #152]
   1bbe4:	cmp	x0, x3
   1bbe8:	cset	w5, ls  // ls = plast
   1bbec:	add	w5, w5, #0x13
   1bbf0:	b	1b968 <PyInit__decimal@@Base+0xa9e0>
   1bbf4:	mov	w5, #0x9                   	// #9
   1bbf8:	b	1b968 <PyInit__decimal@@Base+0xa9e0>
   1bbfc:	mov	w5, #0xe                   	// #14
   1bc00:	b	1b968 <PyInit__decimal@@Base+0xa9e0>
   1bc04:	mov	x0, #0x0                   	// #0
   1bc08:	b	1b9a8 <PyInit__decimal@@Base+0xaa20>
   1bc0c:	udiv	x6, x1, x3
   1bc10:	msub	x5, x6, x3, x1
   1bc14:	mov	x1, x6
   1bc18:	cmp	x5, #0x1
   1bc1c:	b.hi	1b898 <PyInit__decimal@@Base+0xa910>  // b.pmore
   1bc20:	ldr	x6, [x2, x0, lsl #3]
   1bc24:	add	x0, x0, #0x1
   1bc28:	madd	x4, x5, x6, x4
   1bc2c:	b	1b9c8 <PyInit__decimal@@Base+0xaa40>
   1bc30:	ldr	x4, [x9, x22, lsl #3]
   1bc34:	mov	w1, #0x13                  	// #19
   1bc38:	mov	x2, x4
   1bc3c:	udiv	x5, x2, x3
   1bc40:	msub	x6, x5, x3, x2
   1bc44:	mov	x2, x5
   1bc48:	cmp	x6, #0x1
   1bc4c:	b.hi	1b898 <PyInit__decimal@@Base+0xa910>  // b.pmore
   1bc50:	subs	w1, w1, #0x1
   1bc54:	b.ne	1bc3c <PyInit__decimal@@Base+0xacb4>  // b.any
   1bc58:	str	x4, [x0, x22, lsl #3]
   1bc5c:	add	x22, x22, #0x1
   1bc60:	b	1b9e0 <PyInit__decimal@@Base+0xaa58>
   1bc64:	mov	x2, x25
   1bc68:	mov	x0, x21
   1bc6c:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   1bc70:	b	1ba34 <PyInit__decimal@@Base+0xaaac>
   1bc74:	stp	x29, x30, [sp, #-64]!
   1bc78:	mov	x29, sp
   1bc7c:	stp	x19, x20, [sp, #16]
   1bc80:	mov	x20, x2
   1bc84:	mov	x19, x4
   1bc88:	stp	x21, x22, [sp, #32]
   1bc8c:	mov	x22, x3
   1bc90:	mov	x21, x0
   1bc94:	str	x23, [sp, #48]
   1bc98:	mov	x23, x1
   1bc9c:	ldrb	w3, [x1]
   1bca0:	tst	w3, #0xe
   1bca4:	b.ne	1bcb4 <PyInit__decimal@@Base+0xad2c>  // b.any
   1bca8:	ldrb	w3, [x2]
   1bcac:	tst	w3, #0xe
   1bcb0:	b.eq	1bcfc <PyInit__decimal@@Base+0xad74>  // b.none
   1bcb4:	mov	x4, x19
   1bcb8:	mov	x3, x22
   1bcbc:	mov	x2, x20
   1bcc0:	mov	x1, x23
   1bcc4:	mov	x0, x21
   1bcc8:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   1bccc:	cbnz	w0, 1bd2c <PyInit__decimal@@Base+0xada4>
   1bcd0:	ldrb	w3, [x20]
   1bcd4:	mov	x4, x19
   1bcd8:	ldrb	w1, [x23]
   1bcdc:	mov	x2, x20
   1bce0:	mov	x0, x21
   1bce4:	and	w3, w3, #0x1
   1bce8:	ldp	x19, x20, [sp, #16]
   1bcec:	ldp	x21, x22, [sp, #32]
   1bcf0:	ldr	x23, [sp, #48]
   1bcf4:	ldp	x29, x30, [sp], #64
   1bcf8:	b	18998 <PyInit__decimal@@Base+0x7a10>
   1bcfc:	mov	x5, x4
   1bd00:	and	w3, w3, #0x1
   1bd04:	mov	x4, x22
   1bd08:	bl	19818 <PyInit__decimal@@Base+0x8890>
   1bd0c:	mov	x2, x19
   1bd10:	mov	x1, x22
   1bd14:	mov	x0, x21
   1bd18:	ldp	x19, x20, [sp, #16]
   1bd1c:	ldp	x21, x22, [sp, #32]
   1bd20:	ldr	x23, [sp, #48]
   1bd24:	ldp	x29, x30, [sp], #64
   1bd28:	b	19f98 <PyInit__decimal@@Base+0x9010>
   1bd2c:	ldp	x19, x20, [sp, #16]
   1bd30:	ldp	x21, x22, [sp, #32]
   1bd34:	ldr	x23, [sp, #48]
   1bd38:	ldp	x29, x30, [sp], #64
   1bd3c:	ret
   1bd40:	stp	x29, x30, [sp, #-48]!
   1bd44:	mov	x29, sp
   1bd48:	stp	x19, x20, [sp, #16]
   1bd4c:	mov	x19, x4
   1bd50:	mov	x20, x0
   1bd54:	add	x4, sp, #0x2c
   1bd58:	str	wzr, [sp, #44]
   1bd5c:	bl	1bc74 <PyInit__decimal@@Base+0xacec>
   1bd60:	ldr	w0, [x19]
   1bd64:	ldr	w1, [sp, #44]
   1bd68:	orr	w0, w0, w1
   1bd6c:	str	w0, [x19]
   1bd70:	mov	w0, #0x1041                	// #4161
   1bd74:	tst	w1, w0
   1bd78:	b.eq	1bd8c <PyInit__decimal@@Base+0xae04>  // b.none
   1bd7c:	mov	x2, x19
   1bd80:	mov	x0, x20
   1bd84:	mov	w1, #0x100                 	// #256
   1bd88:	bl	18904 <PyInit__decimal@@Base+0x797c>
   1bd8c:	ldp	x19, x20, [sp, #16]
   1bd90:	ldp	x29, x30, [sp], #48
   1bd94:	ret
   1bd98:	stp	x29, x30, [sp, #-64]!
   1bd9c:	mov	x29, sp
   1bda0:	stp	x19, x20, [sp, #16]
   1bda4:	mov	x20, x2
   1bda8:	mov	x19, x4
   1bdac:	stp	x21, x22, [sp, #32]
   1bdb0:	mov	x22, x3
   1bdb4:	mov	x21, x0
   1bdb8:	str	x23, [sp, #48]
   1bdbc:	mov	x23, x1
   1bdc0:	ldrb	w3, [x1]
   1bdc4:	tst	w3, #0xe
   1bdc8:	b.ne	1bdd8 <PyInit__decimal@@Base+0xae50>  // b.any
   1bdcc:	ldrb	w3, [x2]
   1bdd0:	tst	w3, #0xe
   1bdd4:	b.eq	1be24 <PyInit__decimal@@Base+0xae9c>  // b.none
   1bdd8:	mov	x4, x19
   1bddc:	mov	x3, x22
   1bde0:	mov	x2, x20
   1bde4:	mov	x1, x23
   1bde8:	mov	x0, x21
   1bdec:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   1bdf0:	cbnz	w0, 1be58 <PyInit__decimal@@Base+0xaed0>
   1bdf4:	ldrb	w3, [x20]
   1bdf8:	mov	x4, x19
   1bdfc:	ldrb	w1, [x23]
   1be00:	mov	x2, x20
   1be04:	mov	x0, x21
   1be08:	mvn	w3, w3
   1be0c:	ldp	x19, x20, [sp, #16]
   1be10:	and	w3, w3, #0x1
   1be14:	ldp	x21, x22, [sp, #32]
   1be18:	ldr	x23, [sp, #48]
   1be1c:	ldp	x29, x30, [sp], #64
   1be20:	b	18998 <PyInit__decimal@@Base+0x7a10>
   1be24:	mvn	w3, w3
   1be28:	mov	x5, x4
   1be2c:	and	w3, w3, #0x1
   1be30:	mov	x4, x22
   1be34:	bl	19818 <PyInit__decimal@@Base+0x8890>
   1be38:	mov	x2, x19
   1be3c:	mov	x1, x22
   1be40:	mov	x0, x21
   1be44:	ldp	x19, x20, [sp, #16]
   1be48:	ldp	x21, x22, [sp, #32]
   1be4c:	ldr	x23, [sp, #48]
   1be50:	ldp	x29, x30, [sp], #64
   1be54:	b	19f98 <PyInit__decimal@@Base+0x9010>
   1be58:	ldp	x19, x20, [sp, #16]
   1be5c:	ldp	x21, x22, [sp, #32]
   1be60:	ldr	x23, [sp, #48]
   1be64:	ldp	x29, x30, [sp], #64
   1be68:	ret
   1be6c:	stp	x29, x30, [sp, #-48]!
   1be70:	mov	x29, sp
   1be74:	stp	x19, x20, [sp, #16]
   1be78:	mov	x19, x4
   1be7c:	mov	x20, x0
   1be80:	add	x4, sp, #0x2c
   1be84:	str	wzr, [sp, #44]
   1be88:	bl	1bd98 <PyInit__decimal@@Base+0xae10>
   1be8c:	ldr	w0, [x19]
   1be90:	ldr	w1, [sp, #44]
   1be94:	orr	w0, w0, w1
   1be98:	str	w0, [x19]
   1be9c:	mov	w0, #0x1041                	// #4161
   1bea0:	tst	w1, w0
   1bea4:	b.eq	1beb8 <PyInit__decimal@@Base+0xaf30>  // b.none
   1bea8:	mov	x2, x19
   1beac:	mov	x0, x20
   1beb0:	mov	w1, #0x100                 	// #256
   1beb4:	bl	18904 <PyInit__decimal@@Base+0x797c>
   1beb8:	ldp	x19, x20, [sp, #16]
   1bebc:	ldp	x29, x30, [sp], #48
   1bec0:	ret
   1bec4:	sub	sp, sp, #0x2a0
   1bec8:	stp	x29, x30, [sp]
   1becc:	mov	x29, sp
   1bed0:	stp	x19, x20, [sp, #16]
   1bed4:	mov	x19, x0
   1bed8:	mov	w0, #0x30                  	// #48
   1bedc:	strb	w0, [sp, #112]
   1bee0:	mov	x0, #0x40                  	// #64
   1bee4:	stp	xzr, x0, [sp, #136]
   1bee8:	add	x0, sp, #0xa0
   1beec:	stp	x21, x22, [sp, #32]
   1bef0:	mov	x22, x1
   1bef4:	str	x0, [sp, #152]
   1bef8:	ldr	x1, [x19, #8]
   1befc:	str	x23, [sp, #48]
   1bf00:	ldr	x0, [x19, #16]
   1bf04:	stp	xzr, xzr, [sp, #120]
   1bf08:	add	x0, x0, x1
   1bf0c:	sub	x20, x0, #0x1
   1bf10:	cmp	x20, #0x0
   1bf14:	b.le	1bf40 <PyInit__decimal@@Base+0xafb8>
   1bf18:	mov	x0, x20
   1bf1c:	bl	1781c <PyInit__decimal@@Base+0x6894>
   1bf20:	sub	w0, w0, #0x1
   1bf24:	sxtw	x0, w0
   1bf28:	ldp	x29, x30, [sp]
   1bf2c:	ldp	x19, x20, [sp, #16]
   1bf30:	ldp	x21, x22, [sp, #32]
   1bf34:	ldr	x23, [sp, #48]
   1bf38:	add	sp, sp, #0x2a0
   1bf3c:	ret
   1bf40:	cmn	x20, #0x1
   1bf44:	b.lt	1bf1c <PyInit__decimal@@Base+0xaf94>  // b.tstop
   1bf48:	add	x23, sp, #0x40
   1bf4c:	add	x21, sp, #0x70
   1bf50:	mov	x0, x23
   1bf54:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1bf58:	mov	x1, x19
   1bf5c:	mov	x4, x22
   1bf60:	mov	x3, x23
   1bf64:	mov	x0, x21
   1bf68:	adrp	x2, 42000 <PyInit__decimal@@Base+0x31078>
   1bf6c:	add	x2, x2, #0xc58
   1bf70:	bl	1bd98 <PyInit__decimal@@Base+0xae10>
   1bf74:	ldrb	w1, [sp, #112]
   1bf78:	tst	w1, #0xe
   1bf7c:	and	w1, w1, #0xffffffe0
   1bf80:	b.eq	1bfb8 <PyInit__decimal@@Base+0xb030>  // b.none
   1bf84:	cbnz	w1, 1bf98 <PyInit__decimal@@Base+0xb010>
   1bf88:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1bf8c:	ldr	x1, [x0, #1720]
   1bf90:	ldr	x0, [sp, #152]
   1bf94:	blr	x1
   1bf98:	ldrb	w0, [sp, #112]
   1bf9c:	tbnz	w0, #4, 1bfb0 <PyInit__decimal@@Base+0xb028>
   1bfa0:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1bfa4:	ldr	x1, [x0, #1720]
   1bfa8:	mov	x0, x21
   1bfac:	blr	x1
   1bfb0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   1bfb4:	b	1bf28 <PyInit__decimal@@Base+0xafa0>
   1bfb8:	ldp	x0, x19, [sp, #120]
   1bfbc:	add	x19, x0, x19
   1bfc0:	cbnz	w1, 1bfd4 <PyInit__decimal@@Base+0xb04c>
   1bfc4:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1bfc8:	ldr	x1, [x0, #1720]
   1bfcc:	ldr	x0, [sp, #152]
   1bfd0:	blr	x1
   1bfd4:	ldrb	w0, [sp, #112]
   1bfd8:	tbnz	w0, #4, 1bfec <PyInit__decimal@@Base+0xb064>
   1bfdc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1bfe0:	ldr	x1, [x0, #1720]
   1bfe4:	mov	x0, x21
   1bfe8:	blr	x1
   1bfec:	cmp	x20, #0x0
   1bff0:	cinc	x0, x19, ne  // ne = any
   1bff4:	sub	x0, x0, #0x3
   1bff8:	b	1bf28 <PyInit__decimal@@Base+0xafa0>
   1bffc:	sub	sp, sp, #0x2b0
   1c000:	stp	x29, x30, [sp]
   1c004:	mov	x29, sp
   1c008:	stp	x21, x22, [sp, #32]
   1c00c:	mov	x21, x0
   1c010:	mov	w0, #0x30                  	// #48
   1c014:	strb	w0, [sp, #128]
   1c018:	mov	x0, #0x40                  	// #64
   1c01c:	str	x25, [sp, #64]
   1c020:	add	x25, sp, #0x50
   1c024:	stp	xzr, x0, [sp, #152]
   1c028:	add	x0, sp, #0xb0
   1c02c:	mov	x22, x1
   1c030:	stp	x19, x20, [sp, #16]
   1c034:	mov	x19, x4
   1c038:	add	x20, sp, #0x80
   1c03c:	stp	x23, x24, [sp, #48]
   1c040:	mov	x24, x2
   1c044:	mov	x23, x3
   1c048:	stp	xzr, xzr, [sp, #136]
   1c04c:	str	x0, [sp, #168]
   1c050:	mov	x0, x25
   1c054:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1c058:	mov	x3, x19
   1c05c:	mov	x2, x25
   1c060:	mov	x1, x24
   1c064:	mov	x0, x20
   1c068:	bl	1a0d8 <PyInit__decimal@@Base+0x9150>
   1c06c:	mov	x0, x21
   1c070:	mov	x4, x19
   1c074:	mov	x3, x23
   1c078:	mov	x2, x20
   1c07c:	mov	x1, x22
   1c080:	bl	1bc74 <PyInit__decimal@@Base+0xacec>
   1c084:	ldrb	w0, [sp, #128]
   1c088:	tst	w0, #0xe0
   1c08c:	b.ne	1c0a0 <PyInit__decimal@@Base+0xb118>  // b.any
   1c090:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1c094:	ldr	x1, [x0, #1720]
   1c098:	ldr	x0, [sp, #168]
   1c09c:	blr	x1
   1c0a0:	ldrb	w0, [sp, #128]
   1c0a4:	tbnz	w0, #4, 1c0b8 <PyInit__decimal@@Base+0xb130>
   1c0a8:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1c0ac:	ldr	x1, [x0, #1720]
   1c0b0:	mov	x0, x20
   1c0b4:	blr	x1
   1c0b8:	ldp	x29, x30, [sp]
   1c0bc:	ldp	x19, x20, [sp, #16]
   1c0c0:	ldp	x21, x22, [sp, #32]
   1c0c4:	ldp	x23, x24, [sp, #48]
   1c0c8:	ldr	x25, [sp, #64]
   1c0cc:	add	sp, sp, #0x2b0
   1c0d0:	ret
   1c0d4:	sub	sp, sp, #0x2b0
   1c0d8:	stp	x29, x30, [sp]
   1c0dc:	mov	x29, sp
   1c0e0:	stp	x21, x22, [sp, #32]
   1c0e4:	mov	x21, x0
   1c0e8:	mov	w0, #0x30                  	// #48
   1c0ec:	strb	w0, [sp, #128]
   1c0f0:	mov	x0, #0x40                  	// #64
   1c0f4:	str	x25, [sp, #64]
   1c0f8:	add	x25, sp, #0x50
   1c0fc:	stp	xzr, x0, [sp, #152]
   1c100:	add	x0, sp, #0xb0
   1c104:	mov	x22, x1
   1c108:	stp	x19, x20, [sp, #16]
   1c10c:	mov	x19, x4
   1c110:	add	x20, sp, #0x80
   1c114:	stp	x23, x24, [sp, #48]
   1c118:	mov	x24, x2
   1c11c:	mov	x23, x3
   1c120:	stp	xzr, xzr, [sp, #136]
   1c124:	str	x0, [sp, #168]
   1c128:	mov	x0, x25
   1c12c:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1c130:	mov	x3, x19
   1c134:	mov	x2, x25
   1c138:	mov	x1, x24
   1c13c:	mov	x0, x20
   1c140:	bl	1a1d0 <PyInit__decimal@@Base+0x9248>
   1c144:	mov	x0, x21
   1c148:	mov	x4, x19
   1c14c:	mov	x3, x23
   1c150:	mov	x2, x20
   1c154:	mov	x1, x22
   1c158:	bl	1bc74 <PyInit__decimal@@Base+0xacec>
   1c15c:	ldrb	w0, [sp, #128]
   1c160:	tst	w0, #0xe0
   1c164:	b.ne	1c178 <PyInit__decimal@@Base+0xb1f0>  // b.any
   1c168:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1c16c:	ldr	x1, [x0, #1720]
   1c170:	ldr	x0, [sp, #168]
   1c174:	blr	x1
   1c178:	ldrb	w0, [sp, #128]
   1c17c:	tbnz	w0, #4, 1c190 <PyInit__decimal@@Base+0xb208>
   1c180:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1c184:	ldr	x1, [x0, #1720]
   1c188:	mov	x0, x20
   1c18c:	blr	x1
   1c190:	ldp	x29, x30, [sp]
   1c194:	ldp	x19, x20, [sp, #16]
   1c198:	ldp	x21, x22, [sp, #32]
   1c19c:	ldp	x23, x24, [sp, #48]
   1c1a0:	ldr	x25, [sp, #64]
   1c1a4:	add	sp, sp, #0x2b0
   1c1a8:	ret
   1c1ac:	sub	sp, sp, #0x2b0
   1c1b0:	stp	x29, x30, [sp]
   1c1b4:	mov	x29, sp
   1c1b8:	stp	x21, x22, [sp, #32]
   1c1bc:	mov	x21, x0
   1c1c0:	mov	w0, #0x30                  	// #48
   1c1c4:	strb	w0, [sp, #128]
   1c1c8:	mov	x0, #0x40                  	// #64
   1c1cc:	str	x25, [sp, #64]
   1c1d0:	add	x25, sp, #0x50
   1c1d4:	stp	xzr, x0, [sp, #152]
   1c1d8:	add	x0, sp, #0xb0
   1c1dc:	mov	x22, x1
   1c1e0:	stp	x19, x20, [sp, #16]
   1c1e4:	mov	x19, x4
   1c1e8:	add	x20, sp, #0x80
   1c1ec:	stp	x23, x24, [sp, #48]
   1c1f0:	mov	x24, x2
   1c1f4:	mov	x23, x3
   1c1f8:	stp	xzr, xzr, [sp, #136]
   1c1fc:	str	x0, [sp, #168]
   1c200:	mov	x0, x25
   1c204:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1c208:	mov	x3, x19
   1c20c:	mov	x2, x25
   1c210:	mov	x1, x24
   1c214:	mov	x0, x20
   1c218:	bl	1a0d8 <PyInit__decimal@@Base+0x9150>
   1c21c:	mov	x0, x21
   1c220:	mov	x4, x19
   1c224:	mov	x3, x23
   1c228:	mov	x2, x20
   1c22c:	mov	x1, x22
   1c230:	bl	1bd98 <PyInit__decimal@@Base+0xae10>
   1c234:	ldrb	w0, [sp, #128]
   1c238:	tst	w0, #0xe0
   1c23c:	b.ne	1c250 <PyInit__decimal@@Base+0xb2c8>  // b.any
   1c240:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1c244:	ldr	x1, [x0, #1720]
   1c248:	ldr	x0, [sp, #168]
   1c24c:	blr	x1
   1c250:	ldrb	w0, [sp, #128]
   1c254:	tbnz	w0, #4, 1c268 <PyInit__decimal@@Base+0xb2e0>
   1c258:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1c25c:	ldr	x1, [x0, #1720]
   1c260:	mov	x0, x20
   1c264:	blr	x1
   1c268:	ldp	x29, x30, [sp]
   1c26c:	ldp	x19, x20, [sp, #16]
   1c270:	ldp	x21, x22, [sp, #32]
   1c274:	ldp	x23, x24, [sp, #48]
   1c278:	ldr	x25, [sp, #64]
   1c27c:	add	sp, sp, #0x2b0
   1c280:	ret
   1c284:	sub	sp, sp, #0x2b0
   1c288:	stp	x29, x30, [sp]
   1c28c:	mov	x29, sp
   1c290:	stp	x21, x22, [sp, #32]
   1c294:	mov	x21, x0
   1c298:	mov	w0, #0x30                  	// #48
   1c29c:	strb	w0, [sp, #128]
   1c2a0:	mov	x0, #0x40                  	// #64
   1c2a4:	str	x25, [sp, #64]
   1c2a8:	add	x25, sp, #0x50
   1c2ac:	stp	xzr, x0, [sp, #152]
   1c2b0:	add	x0, sp, #0xb0
   1c2b4:	mov	x22, x1
   1c2b8:	stp	x19, x20, [sp, #16]
   1c2bc:	mov	x19, x4
   1c2c0:	add	x20, sp, #0x80
   1c2c4:	stp	x23, x24, [sp, #48]
   1c2c8:	mov	x24, x2
   1c2cc:	mov	x23, x3
   1c2d0:	stp	xzr, xzr, [sp, #136]
   1c2d4:	str	x0, [sp, #168]
   1c2d8:	mov	x0, x25
   1c2dc:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1c2e0:	mov	x3, x19
   1c2e4:	mov	x2, x25
   1c2e8:	mov	x1, x24
   1c2ec:	mov	x0, x20
   1c2f0:	bl	1a1d0 <PyInit__decimal@@Base+0x9248>
   1c2f4:	mov	x0, x21
   1c2f8:	mov	x4, x19
   1c2fc:	mov	x3, x23
   1c300:	mov	x2, x20
   1c304:	mov	x1, x22
   1c308:	bl	1bd98 <PyInit__decimal@@Base+0xae10>
   1c30c:	ldrb	w0, [sp, #128]
   1c310:	tst	w0, #0xe0
   1c314:	b.ne	1c328 <PyInit__decimal@@Base+0xb3a0>  // b.any
   1c318:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1c31c:	ldr	x1, [x0, #1720]
   1c320:	ldr	x0, [sp, #168]
   1c324:	blr	x1
   1c328:	ldrb	w0, [sp, #128]
   1c32c:	tbnz	w0, #4, 1c340 <PyInit__decimal@@Base+0xb3b8>
   1c330:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1c334:	ldr	x1, [x0, #1720]
   1c338:	mov	x0, x20
   1c33c:	blr	x1
   1c340:	ldp	x29, x30, [sp]
   1c344:	ldp	x19, x20, [sp, #16]
   1c348:	ldp	x21, x22, [sp, #32]
   1c34c:	ldp	x23, x24, [sp, #48]
   1c350:	ldr	x25, [sp, #64]
   1c354:	add	sp, sp, #0x2b0
   1c358:	ret
   1c35c:	sxtw	x2, w2
   1c360:	b	1bffc <PyInit__decimal@@Base+0xb074>
   1c364:	mov	w2, w2
   1c368:	b	1c0d4 <PyInit__decimal@@Base+0xb14c>
   1c36c:	b	1bffc <PyInit__decimal@@Base+0xb074>
   1c370:	b	1c0d4 <PyInit__decimal@@Base+0xb14c>
   1c374:	sxtw	x2, w2
   1c378:	b	1c1ac <PyInit__decimal@@Base+0xb224>
   1c37c:	mov	w2, w2
   1c380:	b	1c284 <PyInit__decimal@@Base+0xb2fc>
   1c384:	b	1c1ac <PyInit__decimal@@Base+0xb224>
   1c388:	b	1c284 <PyInit__decimal@@Base+0xb2fc>
   1c38c:	stp	x29, x30, [sp, #-96]!
   1c390:	cmp	x0, x3
   1c394:	mov	x29, sp
   1c398:	stp	x19, x20, [sp, #16]
   1c39c:	stp	x21, x22, [sp, #32]
   1c3a0:	mov	x21, x0
   1c3a4:	mov	x22, x5
   1c3a8:	stp	x23, x24, [sp, #48]
   1c3ac:	mov	x24, x1
   1c3b0:	mov	x23, x4
   1c3b4:	stp	x25, x26, [sp, #64]
   1c3b8:	mov	x25, x2
   1c3bc:	str	wzr, [sp, #92]
   1c3c0:	b.ne	1c3fc <PyInit__decimal@@Base+0xb474>  // b.any
   1c3c4:	bl	192b0 <PyInit__decimal@@Base+0x8328>
   1c3c8:	mov	x19, x0
   1c3cc:	mov	x20, x0
   1c3d0:	cbnz	x0, 1c404 <PyInit__decimal@@Base+0xb47c>
   1c3d4:	mov	x2, x22
   1c3d8:	mov	x0, x21
   1c3dc:	mov	w1, #0x200                 	// #512
   1c3e0:	bl	18904 <PyInit__decimal@@Base+0x797c>
   1c3e4:	ldp	x19, x20, [sp, #16]
   1c3e8:	ldp	x21, x22, [sp, #32]
   1c3ec:	ldp	x23, x24, [sp, #48]
   1c3f0:	ldp	x25, x26, [sp, #64]
   1c3f4:	ldp	x29, x30, [sp], #96
   1c3f8:	ret
   1c3fc:	mov	x19, x3
   1c400:	mov	x20, #0x0                   	// #0
   1c404:	add	x26, sp, #0x5c
   1c408:	mov	x0, x21
   1c40c:	mov	x4, x26
   1c410:	mov	x3, x23
   1c414:	mov	x2, x25
   1c418:	mov	x1, x24
   1c41c:	bl	18d24 <PyInit__decimal@@Base+0x7d9c>
   1c420:	ldr	w0, [sp, #92]
   1c424:	tbnz	w0, #8, 1c440 <PyInit__decimal@@Base+0xb4b8>
   1c428:	mov	x4, x26
   1c42c:	mov	x3, x23
   1c430:	mov	x2, x19
   1c434:	mov	x1, x21
   1c438:	mov	x0, x21
   1c43c:	bl	1bc74 <PyInit__decimal@@Base+0xacec>
   1c440:	cbz	x20, 1c478 <PyInit__decimal@@Base+0xb4f0>
   1c444:	ldrb	w0, [x20]
   1c448:	tst	w0, #0xe0
   1c44c:	b.ne	1c460 <PyInit__decimal@@Base+0xb4d8>  // b.any
   1c450:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1c454:	ldr	x1, [x0, #1720]
   1c458:	ldr	x0, [x20, #40]
   1c45c:	blr	x1
   1c460:	ldrb	w0, [x20]
   1c464:	tbnz	w0, #4, 1c478 <PyInit__decimal@@Base+0xb4f0>
   1c468:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1c46c:	ldr	x1, [x0, #1720]
   1c470:	mov	x0, x20
   1c474:	blr	x1
   1c478:	ldr	w0, [x22]
   1c47c:	ldr	w1, [sp, #92]
   1c480:	orr	w0, w0, w1
   1c484:	str	w0, [x22]
   1c488:	b	1c3e4 <PyInit__decimal@@Base+0xb45c>
   1c48c:	stp	x29, x30, [sp, #-64]!
   1c490:	mov	x29, sp
   1c494:	stp	x19, x20, [sp, #16]
   1c498:	mov	x20, x1
   1c49c:	mov	x19, x2
   1c4a0:	stp	x21, x22, [sp, #32]
   1c4a4:	mov	x21, x0
   1c4a8:	mov	x22, x4
   1c4ac:	str	x23, [sp, #48]
   1c4b0:	mov	x23, x3
   1c4b4:	ldrb	w0, [x1]
   1c4b8:	ldrb	w1, [x2]
   1c4bc:	tbz	w0, #2, 1c4f8 <PyInit__decimal@@Base+0xb570>
   1c4c0:	tst	w1, #0xc
   1c4c4:	b.ne	1c4f8 <PyInit__decimal@@Base+0xb570>  // b.any
   1c4c8:	mov	x2, x22
   1c4cc:	mov	x1, x19
   1c4d0:	mov	x0, x21
   1c4d4:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1c4d8:	mov	x2, x22
   1c4dc:	mov	x1, x23
   1c4e0:	mov	x0, x21
   1c4e4:	ldp	x19, x20, [sp, #16]
   1c4e8:	ldp	x21, x22, [sp, #32]
   1c4ec:	ldr	x23, [sp, #48]
   1c4f0:	ldp	x29, x30, [sp], #64
   1c4f4:	b	19f98 <PyInit__decimal@@Base+0x9010>
   1c4f8:	tbz	w1, #2, 1c510 <PyInit__decimal@@Base+0xb588>
   1c4fc:	tst	w0, #0xc
   1c500:	b.ne	1c510 <PyInit__decimal@@Base+0xb588>  // b.any
   1c504:	mov	x2, x22
   1c508:	mov	x1, x20
   1c50c:	b	1c4d0 <PyInit__decimal@@Base+0xb548>
   1c510:	mov	x4, x22
   1c514:	mov	x3, x23
   1c518:	mov	x2, x19
   1c51c:	mov	x1, x20
   1c520:	mov	x0, x21
   1c524:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   1c528:	cbnz	w0, 1c550 <PyInit__decimal@@Base+0xb5c8>
   1c52c:	mov	x1, x19
   1c530:	mov	x0, x20
   1c534:	bl	16b04 <PyInit__decimal@@Base+0x5b7c>
   1c538:	cbnz	w0, 1c548 <PyInit__decimal@@Base+0xb5c0>
   1c53c:	mov	x1, x19
   1c540:	mov	x0, x20
   1c544:	bl	1627c <PyInit__decimal@@Base+0x52f4>
   1c548:	tbz	w0, #31, 1c504 <PyInit__decimal@@Base+0xb57c>
   1c54c:	b	1c4c8 <PyInit__decimal@@Base+0xb540>
   1c550:	ldp	x19, x20, [sp, #16]
   1c554:	ldp	x21, x22, [sp, #32]
   1c558:	ldr	x23, [sp, #48]
   1c55c:	ldp	x29, x30, [sp], #64
   1c560:	ret
   1c564:	stp	x29, x30, [sp, #-64]!
   1c568:	mov	x29, sp
   1c56c:	stp	x19, x20, [sp, #16]
   1c570:	mov	x20, x1
   1c574:	mov	x19, x2
   1c578:	stp	x21, x22, [sp, #32]
   1c57c:	mov	x21, x0
   1c580:	mov	x22, x4
   1c584:	str	x23, [sp, #48]
   1c588:	mov	x23, x3
   1c58c:	ldrb	w0, [x1]
   1c590:	ldrb	w1, [x2]
   1c594:	tbz	w0, #2, 1c5d0 <PyInit__decimal@@Base+0xb648>
   1c598:	tst	w1, #0xc
   1c59c:	b.ne	1c5d0 <PyInit__decimal@@Base+0xb648>  // b.any
   1c5a0:	mov	x2, x22
   1c5a4:	mov	x1, x19
   1c5a8:	mov	x0, x21
   1c5ac:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1c5b0:	mov	x2, x22
   1c5b4:	mov	x1, x23
   1c5b8:	mov	x0, x21
   1c5bc:	ldp	x19, x20, [sp, #16]
   1c5c0:	ldp	x21, x22, [sp, #32]
   1c5c4:	ldr	x23, [sp, #48]
   1c5c8:	ldp	x29, x30, [sp], #64
   1c5cc:	b	19f98 <PyInit__decimal@@Base+0x9010>
   1c5d0:	tbz	w1, #2, 1c5e8 <PyInit__decimal@@Base+0xb660>
   1c5d4:	tst	w0, #0xc
   1c5d8:	b.ne	1c5e8 <PyInit__decimal@@Base+0xb660>  // b.any
   1c5dc:	mov	x2, x22
   1c5e0:	mov	x1, x20
   1c5e4:	b	1c5a8 <PyInit__decimal@@Base+0xb620>
   1c5e8:	mov	x4, x22
   1c5ec:	mov	x3, x23
   1c5f0:	mov	x2, x19
   1c5f4:	mov	x1, x20
   1c5f8:	mov	x0, x21
   1c5fc:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   1c600:	cbnz	w0, 1c628 <PyInit__decimal@@Base+0xb6a0>
   1c604:	mov	x1, x19
   1c608:	mov	x0, x20
   1c60c:	bl	172f8 <PyInit__decimal@@Base+0x6370>
   1c610:	cbnz	w0, 1c620 <PyInit__decimal@@Base+0xb698>
   1c614:	mov	x1, x19
   1c618:	mov	x0, x20
   1c61c:	bl	1627c <PyInit__decimal@@Base+0x52f4>
   1c620:	tbz	w0, #31, 1c5dc <PyInit__decimal@@Base+0xb654>
   1c624:	b	1c5a0 <PyInit__decimal@@Base+0xb618>
   1c628:	ldp	x19, x20, [sp, #16]
   1c62c:	ldp	x21, x22, [sp, #32]
   1c630:	ldr	x23, [sp, #48]
   1c634:	ldp	x29, x30, [sp], #64
   1c638:	ret
   1c63c:	stp	x29, x30, [sp, #-64]!
   1c640:	mov	x29, sp
   1c644:	stp	x19, x20, [sp, #16]
   1c648:	mov	x19, x1
   1c64c:	mov	x20, x2
   1c650:	stp	x21, x22, [sp, #32]
   1c654:	mov	x21, x0
   1c658:	mov	x22, x4
   1c65c:	str	x23, [sp, #48]
   1c660:	mov	x23, x3
   1c664:	ldrb	w0, [x1]
   1c668:	ldrb	w1, [x2]
   1c66c:	tbz	w0, #2, 1c6a8 <PyInit__decimal@@Base+0xb720>
   1c670:	tst	w1, #0xc
   1c674:	b.ne	1c6a8 <PyInit__decimal@@Base+0xb720>  // b.any
   1c678:	mov	x2, x22
   1c67c:	mov	x1, x20
   1c680:	mov	x0, x21
   1c684:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1c688:	mov	x2, x22
   1c68c:	mov	x1, x23
   1c690:	mov	x0, x21
   1c694:	ldp	x19, x20, [sp, #16]
   1c698:	ldp	x21, x22, [sp, #32]
   1c69c:	ldr	x23, [sp, #48]
   1c6a0:	ldp	x29, x30, [sp], #64
   1c6a4:	b	19f98 <PyInit__decimal@@Base+0x9010>
   1c6a8:	tbz	w1, #2, 1c6c0 <PyInit__decimal@@Base+0xb738>
   1c6ac:	tst	w0, #0xc
   1c6b0:	b.ne	1c6c0 <PyInit__decimal@@Base+0xb738>  // b.any
   1c6b4:	mov	x2, x22
   1c6b8:	mov	x1, x19
   1c6bc:	b	1c680 <PyInit__decimal@@Base+0xb6f8>
   1c6c0:	mov	x4, x22
   1c6c4:	mov	x3, x23
   1c6c8:	mov	x2, x20
   1c6cc:	mov	x1, x19
   1c6d0:	mov	x0, x21
   1c6d4:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   1c6d8:	cbnz	w0, 1c700 <PyInit__decimal@@Base+0xb778>
   1c6dc:	mov	x1, x20
   1c6e0:	mov	x0, x19
   1c6e4:	bl	16b04 <PyInit__decimal@@Base+0x5b7c>
   1c6e8:	cbnz	w0, 1c6f8 <PyInit__decimal@@Base+0xb770>
   1c6ec:	mov	x1, x20
   1c6f0:	mov	x0, x19
   1c6f4:	bl	1627c <PyInit__decimal@@Base+0x52f4>
   1c6f8:	tbz	w0, #31, 1c678 <PyInit__decimal@@Base+0xb6f0>
   1c6fc:	b	1c6b4 <PyInit__decimal@@Base+0xb72c>
   1c700:	ldp	x19, x20, [sp, #16]
   1c704:	ldp	x21, x22, [sp, #32]
   1c708:	ldr	x23, [sp, #48]
   1c70c:	ldp	x29, x30, [sp], #64
   1c710:	ret
   1c714:	stp	x29, x30, [sp, #-64]!
   1c718:	mov	x29, sp
   1c71c:	stp	x19, x20, [sp, #16]
   1c720:	mov	x19, x1
   1c724:	mov	x20, x2
   1c728:	stp	x21, x22, [sp, #32]
   1c72c:	mov	x21, x0
   1c730:	mov	x22, x4
   1c734:	str	x23, [sp, #48]
   1c738:	mov	x23, x3
   1c73c:	ldrb	w0, [x1]
   1c740:	ldrb	w1, [x2]
   1c744:	tbz	w0, #2, 1c780 <PyInit__decimal@@Base+0xb7f8>
   1c748:	tst	w1, #0xc
   1c74c:	b.ne	1c780 <PyInit__decimal@@Base+0xb7f8>  // b.any
   1c750:	mov	x2, x22
   1c754:	mov	x1, x20
   1c758:	mov	x0, x21
   1c75c:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1c760:	mov	x2, x22
   1c764:	mov	x1, x23
   1c768:	mov	x0, x21
   1c76c:	ldp	x19, x20, [sp, #16]
   1c770:	ldp	x21, x22, [sp, #32]
   1c774:	ldr	x23, [sp, #48]
   1c778:	ldp	x29, x30, [sp], #64
   1c77c:	b	19f98 <PyInit__decimal@@Base+0x9010>
   1c780:	tbz	w1, #2, 1c798 <PyInit__decimal@@Base+0xb810>
   1c784:	tst	w0, #0xc
   1c788:	b.ne	1c798 <PyInit__decimal@@Base+0xb810>  // b.any
   1c78c:	mov	x2, x22
   1c790:	mov	x1, x19
   1c794:	b	1c758 <PyInit__decimal@@Base+0xb7d0>
   1c798:	mov	x4, x22
   1c79c:	mov	x3, x23
   1c7a0:	mov	x2, x20
   1c7a4:	mov	x1, x19
   1c7a8:	mov	x0, x21
   1c7ac:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   1c7b0:	cbnz	w0, 1c7d8 <PyInit__decimal@@Base+0xb850>
   1c7b4:	mov	x1, x20
   1c7b8:	mov	x0, x19
   1c7bc:	bl	172f8 <PyInit__decimal@@Base+0x6370>
   1c7c0:	cbnz	w0, 1c7d0 <PyInit__decimal@@Base+0xb848>
   1c7c4:	mov	x1, x20
   1c7c8:	mov	x0, x19
   1c7cc:	bl	1627c <PyInit__decimal@@Base+0x52f4>
   1c7d0:	tbz	w0, #31, 1c750 <PyInit__decimal@@Base+0xb7c8>
   1c7d4:	b	1c78c <PyInit__decimal@@Base+0xb804>
   1c7d8:	ldp	x19, x20, [sp, #16]
   1c7dc:	ldp	x21, x22, [sp, #32]
   1c7e0:	ldr	x23, [sp, #48]
   1c7e4:	ldp	x29, x30, [sp], #64
   1c7e8:	ret
   1c7ec:	stp	x29, x30, [sp, #-48]!
   1c7f0:	mov	x29, sp
   1c7f4:	stp	x19, x20, [sp, #16]
   1c7f8:	mov	x20, x3
   1c7fc:	mov	x19, x0
   1c800:	str	x21, [sp, #32]
   1c804:	mov	x21, x4
   1c808:	bl	18d24 <PyInit__decimal@@Base+0x7d9c>
   1c80c:	mov	x2, x21
   1c810:	mov	x1, x20
   1c814:	mov	x0, x19
   1c818:	ldp	x19, x20, [sp, #16]
   1c81c:	ldr	x21, [sp, #32]
   1c820:	ldp	x29, x30, [sp], #48
   1c824:	b	19f98 <PyInit__decimal@@Base+0x9010>
   1c828:	stp	x29, x30, [sp, #-48]!
   1c82c:	mov	x29, sp
   1c830:	stp	x19, x20, [sp, #16]
   1c834:	mov	x19, x4
   1c838:	mov	x20, x0
   1c83c:	add	x4, sp, #0x2c
   1c840:	str	wzr, [sp, #44]
   1c844:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
   1c848:	ldr	w0, [x19]
   1c84c:	ldr	w1, [sp, #44]
   1c850:	orr	w0, w0, w1
   1c854:	str	w0, [x19]
   1c858:	mov	w0, #0x1041                	// #4161
   1c85c:	tst	w1, w0
   1c860:	b.eq	1c874 <PyInit__decimal@@Base+0xb8ec>  // b.none
   1c864:	mov	x2, x19
   1c868:	mov	x0, x20
   1c86c:	mov	w1, #0x100                 	// #256
   1c870:	bl	18904 <PyInit__decimal@@Base+0x797c>
   1c874:	ldp	x19, x20, [sp, #16]
   1c878:	ldp	x29, x30, [sp], #48
   1c87c:	ret
   1c880:	sub	sp, sp, #0x7b0
   1c884:	adrp	x13, 2a000 <PyInit__decimal@@Base+0x19078>
   1c888:	add	x11, x13, #0xae8
   1c88c:	stp	x29, x30, [sp]
   1c890:	mov	x29, sp
   1c894:	stp	x19, x20, [sp, #16]
   1c898:	mov	x19, x3
   1c89c:	mov	w3, #0x13                  	// #19
   1c8a0:	stp	x21, x22, [sp, #32]
   1c8a4:	add	x22, sp, #0xc0
   1c8a8:	stp	x23, x24, [sp, #48]
   1c8ac:	stp	x25, x26, [sp, #64]
   1c8b0:	mov	x25, x0
   1c8b4:	add	x26, sp, #0x90
   1c8b8:	stp	x27, x28, [sp, #80]
   1c8bc:	add	x28, sp, #0xf0
   1c8c0:	ldrb	w0, [x1]
   1c8c4:	str	w0, [sp, #108]
   1c8c8:	ldr	x0, [x1, #8]
   1c8cc:	str	x0, [sp, #112]
   1c8d0:	ldr	x0, [x1, #24]
   1c8d4:	str	x0, [sp, #264]
   1c8d8:	ldr	x0, [x1, #32]
   1c8dc:	str	x0, [sp, #272]
   1c8e0:	ldr	x0, [x1, #40]
   1c8e4:	str	x2, [sp, #96]
   1c8e8:	ldr	x27, [x1, #16]
   1c8ec:	add	x2, sp, #0x1b0
   1c8f0:	mov	w1, #0x30                  	// #48
   1c8f4:	str	x27, [sp, #256]
   1c8f8:	str	x0, [sp, #280]
   1c8fc:	mov	x0, #0x40                  	// #64
   1c900:	strb	w1, [sp, #288]
   1c904:	stp	xzr, xzr, [sp, #296]
   1c908:	str	xzr, [sp, #312]
   1c90c:	str	x0, [sp, #320]
   1c910:	str	x2, [sp, #328]
   1c914:	mov	x2, x28
   1c918:	strb	w1, [sp, #336]
   1c91c:	mov	x1, x22
   1c920:	stp	xzr, x0, [sp, #360]
   1c924:	add	x0, sp, #0x3b0
   1c928:	str	x0, [sp, #376]
   1c92c:	mov	x0, #0x2                   	// #2
   1c930:	str	x0, [sp, #136]
   1c934:	mov	w0, #0xffffff90            	// #-112
   1c938:	strb	w0, [sp, #384]
   1c93c:	mov	x0, #0x1                   	// #1
   1c940:	ldr	x12, [x11, #136]
   1c944:	stp	x0, x0, [sp, #400]
   1c948:	str	x0, [sp, #416]
   1c94c:	add	x0, sp, #0x88
   1c950:	str	x0, [sp, #424]
   1c954:	mov	w0, #0x50                  	// #80
   1c958:	strb	w0, [sp, #240]
   1c95c:	neg	x0, x27
   1c960:	str	x0, [sp, #248]
   1c964:	mov	x0, x26
   1c968:	stp	xzr, xzr, [sp, #344]
   1c96c:	str	xzr, [sp, #392]
   1c970:	str	xzr, [sp, #1456]
   1c974:	str	x12, [sp, #1464]
   1c978:	bl	1610c <PyInit__decimal@@Base+0x5184>
   1c97c:	ldr	x1, [x11, #72]
   1c980:	ldr	x0, [sp, #192]
   1c984:	cmp	x0, x1
   1c988:	b.cs	1cbe8 <PyInit__decimal@@Base+0xbc60>  // b.hs, b.nlast
   1c98c:	ldr	x1, [x11, #32]
   1c990:	cmp	x0, x1
   1c994:	b.cs	1cba8 <PyInit__decimal@@Base+0xbc20>  // b.hs, b.nlast
   1c998:	ldr	x1, [x11, #16]
   1c99c:	cmp	x0, x1
   1c9a0:	b.cs	1cb94 <PyInit__decimal@@Base+0xbc0c>  // b.hs, b.nlast
   1c9a4:	ldr	x1, [x11, #8]
   1c9a8:	cmp	x0, x1
   1c9ac:	cset	w1, cs  // cs = hs, nlast
   1c9b0:	add	w1, w1, #0x1
   1c9b4:	add	x2, x13, #0xae8
   1c9b8:	mov	w3, #0x13                  	// #19
   1c9bc:	sub	w1, w3, w1
   1c9c0:	ldr	x1, [x2, w1, sxtw #3]
   1c9c4:	mul	x0, x1, x0
   1c9c8:	str	x0, [sp, #192]
   1c9cc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1c9d0:	ldr	x1, [x0, #1688]
   1c9d4:	mov	x0, #0x2                   	// #2
   1c9d8:	cmp	x1, #0x2
   1c9dc:	csel	x1, x1, x0, ge  // ge = tcont
   1c9e0:	ldr	x0, [x25, #32]
   1c9e4:	cmp	x1, x0
   1c9e8:	b.eq	1ca08 <PyInit__decimal@@Base+0xba80>  // b.none
   1c9ec:	ldrb	w2, [x25]
   1c9f0:	tbz	w2, #5, 1cc94 <PyInit__decimal@@Base+0xbd0c>
   1c9f4:	cmp	x1, x0
   1c9f8:	b.le	1ca08 <PyInit__decimal@@Base+0xba80>
   1c9fc:	mov	x2, x19
   1ca00:	mov	x0, x25
   1ca04:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   1ca08:	ldr	x0, [x25, #40]
   1ca0c:	add	x23, sp, #0x5b0
   1ca10:	ldr	x3, [sp, #192]
   1ca14:	mov	x2, #0x2                   	// #2
   1ca18:	mov	x1, x23
   1ca1c:	bl	11f90 <PyInit__decimal@@Base+0x1008>
   1ca20:	ldrb	w0, [x25]
   1ca24:	and	w0, w0, #0xfffffff0
   1ca28:	strb	w0, [x25]
   1ca2c:	mov	x0, #0xffffffffffffffef    	// #-17
   1ca30:	str	x0, [x25, #8]
   1ca34:	ldr	x0, [x25, #40]
   1ca38:	ldr	x0, [x0, #8]
   1ca3c:	cmp	x0, #0x0
   1ca40:	cset	x0, ne  // ne = any
   1ca44:	add	x0, x0, #0x1
   1ca48:	str	x0, [x25, #24]
   1ca4c:	mov	x0, x25
   1ca50:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   1ca54:	mov	x0, x26
   1ca58:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1ca5c:	mov	x0, x22
   1ca60:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1ca64:	mov	w0, #0x8                   	// #8
   1ca68:	str	w0, [sp, #180]
   1ca6c:	str	w0, [sp, #228]
   1ca70:	mov	x0, #0x63                  	// #99
   1ca74:	movk	x0, #0xa764, lsl #16
   1ca78:	mov	x2, #0xff9d                	// #65437
   1ca7c:	movk	x0, #0xb6b3, lsl #32
   1ca80:	movk	x2, #0x589b, lsl #16
   1ca84:	movk	x0, #0xde0, lsl #48
   1ca88:	str	x0, [sp, #152]
   1ca8c:	stp	x0, x0, [sp, #192]
   1ca90:	movk	x2, #0x494c, lsl #32
   1ca94:	movk	x2, #0xf21f, lsl #48
   1ca98:	ldr	x0, [sp, #96]
   1ca9c:	str	x2, [sp, #160]
   1caa0:	str	x2, [sp, #208]
   1caa4:	mov	w3, #0x0                   	// #0
   1caa8:	ldr	x0, [x0]
   1caac:	add	x0, x0, #0x2
   1cab0:	cmp	x0, #0x10
   1cab4:	b.le	1caf0 <PyInit__decimal@@Base+0xbb68>
   1cab8:	mov	x1, #0x2                   	// #2
   1cabc:	add	x2, x0, #0x1
   1cac0:	mov	w20, w3
   1cac4:	cmp	x2, #0x21
   1cac8:	add	w3, w3, #0x1
   1cacc:	add	x21, x23, w20, sxtw #3
   1cad0:	sdiv	x0, x2, x1
   1cad4:	str	x0, [x23, w20, sxtw #3]
   1cad8:	b.gt	1cabc <PyInit__decimal@@Base+0xbb34>
   1cadc:	add	x23, sp, #0x120
   1cae0:	add	x24, sp, #0x150
   1cae4:	add	x0, sp, #0x180
   1cae8:	str	x0, [sp, #120]
   1caec:	tbz	w20, #31, 1cca4 <PyInit__decimal@@Base+0xbd1c>
   1caf0:	ldrb	w1, [x25]
   1caf4:	tst	w1, #0xe
   1caf8:	b.eq	1cd60 <PyInit__decimal@@Base+0xbdd8>  // b.none
   1cafc:	ldrb	w0, [sp, #288]
   1cb00:	tst	w0, #0xe0
   1cb04:	b.ne	1cb18 <PyInit__decimal@@Base+0xbb90>  // b.any
   1cb08:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1cb0c:	ldr	x1, [x0, #1720]
   1cb10:	ldr	x0, [sp, #328]
   1cb14:	blr	x1
   1cb18:	ldrb	w0, [sp, #288]
   1cb1c:	tbnz	w0, #4, 1cb30 <PyInit__decimal@@Base+0xbba8>
   1cb20:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1cb24:	ldr	x1, [x0, #1720]
   1cb28:	add	x0, sp, #0x120
   1cb2c:	blr	x1
   1cb30:	ldrb	w0, [sp, #336]
   1cb34:	tst	w0, #0xe0
   1cb38:	b.ne	1cb4c <PyInit__decimal@@Base+0xbbc4>  // b.any
   1cb3c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1cb40:	ldr	x1, [x0, #1720]
   1cb44:	ldr	x0, [sp, #376]
   1cb48:	blr	x1
   1cb4c:	ldrb	w0, [sp, #336]
   1cb50:	tbnz	w0, #4, 1cb64 <PyInit__decimal@@Base+0xbbdc>
   1cb54:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1cb58:	ldr	x1, [x0, #1720]
   1cb5c:	add	x0, sp, #0x150
   1cb60:	blr	x1
   1cb64:	ldr	x1, [sp, #96]
   1cb68:	mov	x2, x19
   1cb6c:	mov	x0, x25
   1cb70:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   1cb74:	ldp	x29, x30, [sp]
   1cb78:	ldp	x19, x20, [sp, #16]
   1cb7c:	ldp	x21, x22, [sp, #32]
   1cb80:	ldp	x23, x24, [sp, #48]
   1cb84:	ldp	x25, x26, [sp, #64]
   1cb88:	ldp	x27, x28, [sp, #80]
   1cb8c:	add	sp, sp, #0x7b0
   1cb90:	ret
   1cb94:	ldr	x1, [x11, #24]
   1cb98:	cmp	x0, x1
   1cb9c:	cset	w1, cs  // cs = hs, nlast
   1cba0:	add	w1, w1, #0x3
   1cba4:	b	1c9b4 <PyInit__decimal@@Base+0xba2c>
   1cba8:	ldr	x1, [x11, #48]
   1cbac:	cmp	x0, x1
   1cbb0:	b.cs	1cbc8 <PyInit__decimal@@Base+0xbc40>  // b.hs, b.nlast
   1cbb4:	ldr	x1, [x11, #40]
   1cbb8:	cmp	x0, x1
   1cbbc:	cset	w1, cs  // cs = hs, nlast
   1cbc0:	add	w1, w1, #0x5
   1cbc4:	b	1c9b4 <PyInit__decimal@@Base+0xba2c>
   1cbc8:	ldr	x1, [x11, #64]
   1cbcc:	cmp	x0, x1
   1cbd0:	b.cs	1cc84 <PyInit__decimal@@Base+0xbcfc>  // b.hs, b.nlast
   1cbd4:	ldr	x1, [x11, #56]
   1cbd8:	cmp	x0, x1
   1cbdc:	cset	w1, cs  // cs = hs, nlast
   1cbe0:	add	w1, w1, #0x7
   1cbe4:	b	1c9b4 <PyInit__decimal@@Base+0xba2c>
   1cbe8:	ldr	x1, [x11, #112]
   1cbec:	cmp	x0, x1
   1cbf0:	b.cs	1cc34 <PyInit__decimal@@Base+0xbcac>  // b.hs, b.nlast
   1cbf4:	ldr	x1, [x11, #88]
   1cbf8:	cmp	x0, x1
   1cbfc:	b.cs	1cc14 <PyInit__decimal@@Base+0xbc8c>  // b.hs, b.nlast
   1cc00:	ldr	x1, [x11, #80]
   1cc04:	cmp	x0, x1
   1cc08:	cset	w1, cs  // cs = hs, nlast
   1cc0c:	add	w1, w1, #0xa
   1cc10:	b	1c9b4 <PyInit__decimal@@Base+0xba2c>
   1cc14:	ldr	x1, [x11, #104]
   1cc18:	cmp	x0, x1
   1cc1c:	b.cs	1cc8c <PyInit__decimal@@Base+0xbd04>  // b.hs, b.nlast
   1cc20:	ldr	x1, [x11, #96]
   1cc24:	cmp	x0, x1
   1cc28:	cset	w1, cs  // cs = hs, nlast
   1cc2c:	add	w1, w1, #0xc
   1cc30:	b	1c9b4 <PyInit__decimal@@Base+0xba2c>
   1cc34:	ldr	x1, [x11, #144]
   1cc38:	cmp	x0, x1
   1cc3c:	b.cs	1cc70 <PyInit__decimal@@Base+0xbce8>  // b.hs, b.nlast
   1cc40:	ldr	x1, [x11, #128]
   1cc44:	cmp	x0, x1
   1cc48:	b.cs	1cc60 <PyInit__decimal@@Base+0xbcd8>  // b.hs, b.nlast
   1cc4c:	ldr	x1, [x11, #120]
   1cc50:	cmp	x0, x1
   1cc54:	cset	w1, cs  // cs = hs, nlast
   1cc58:	add	w1, w1, #0xf
   1cc5c:	b	1c9b4 <PyInit__decimal@@Base+0xba2c>
   1cc60:	cmp	x12, x0
   1cc64:	cset	w1, ls  // ls = plast
   1cc68:	add	w1, w1, #0x11
   1cc6c:	b	1c9b4 <PyInit__decimal@@Base+0xba2c>
   1cc70:	ldr	x1, [x11, #152]
   1cc74:	cmp	x0, x1
   1cc78:	cset	w1, cs  // cs = hs, nlast
   1cc7c:	add	w1, w1, #0x13
   1cc80:	b	1c9b4 <PyInit__decimal@@Base+0xba2c>
   1cc84:	mov	w1, #0x9                   	// #9
   1cc88:	b	1c9b4 <PyInit__decimal@@Base+0xba2c>
   1cc8c:	mov	w1, #0xe                   	// #14
   1cc90:	b	1c9b4 <PyInit__decimal@@Base+0xba2c>
   1cc94:	mov	x2, x19
   1cc98:	mov	x0, x25
   1cc9c:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   1cca0:	b	1ca08 <PyInit__decimal@@Base+0xba80>
   1cca4:	mov	x2, x25
   1cca8:	mov	x0, x23
   1ccac:	mov	x4, x19
   1ccb0:	mov	x3, x22
   1ccb4:	mov	x1, x25
   1ccb8:	bl	1c828 <PyInit__decimal@@Base+0xb8a0>
   1ccbc:	ldr	x0, [x21]
   1ccc0:	ldr	x2, [sp, #256]
   1ccc4:	lsl	x0, x0, #1
   1ccc8:	add	x0, x0, #0x5
   1cccc:	str	x0, [sp, #144]
   1ccd0:	cmp	x0, x2
   1ccd4:	b.ge	1cd4c <PyInit__decimal@@Base+0xbdc4>  // b.tcont
   1ccd8:	sub	x2, x2, x0
   1ccdc:	mov	x3, x19
   1cce0:	mov	x1, x28
   1cce4:	mov	x0, x24
   1cce8:	bl	1a260 <PyInit__decimal@@Base+0x92d8>
   1ccec:	ldr	x0, [sp, #144]
   1ccf0:	mov	x4, x19
   1ccf4:	mov	x3, x26
   1ccf8:	mov	x2, x23
   1ccfc:	mov	x1, x24
   1cd00:	neg	x0, x0
   1cd04:	str	x0, [sp, #344]
   1cd08:	mov	x0, x24
   1cd0c:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
   1cd10:	ldr	x2, [sp, #120]
   1cd14:	mov	x4, x19
   1cd18:	mov	x3, x22
   1cd1c:	mov	x1, x25
   1cd20:	mov	x0, x23
   1cd24:	sub	w20, w20, #0x1
   1cd28:	bl	1c828 <PyInit__decimal@@Base+0xb8a0>
   1cd2c:	sub	x21, x21, #0x8
   1cd30:	mov	x4, x19
   1cd34:	mov	x3, x22
   1cd38:	mov	x2, x24
   1cd3c:	mov	x1, x23
   1cd40:	mov	x0, x25
   1cd44:	bl	1be6c <PyInit__decimal@@Base+0xaee4>
   1cd48:	b	1caec <PyInit__decimal@@Base+0xbb64>
   1cd4c:	mov	x4, x19
   1cd50:	mov	x3, x26
   1cd54:	mov	x2, x23
   1cd58:	mov	x1, x28
   1cd5c:	b	1cd08 <PyInit__decimal@@Base+0xbd80>
   1cd60:	ldr	x0, [sp, #112]
   1cd64:	and	w1, w1, #0xfffffff0
   1cd68:	add	x0, x0, x27
   1cd6c:	ldr	x27, [x25, #8]
   1cd70:	sub	x27, x27, x0
   1cd74:	ldr	w0, [sp, #108]
   1cd78:	str	x27, [x25, #8]
   1cd7c:	and	w0, w0, #0x1
   1cd80:	orr	w0, w0, w1
   1cd84:	strb	w0, [x25]
   1cd88:	b	1cafc <PyInit__decimal@@Base+0xbb74>
   1cd8c:	stp	x29, x30, [sp, #-96]!
   1cd90:	mov	x29, sp
   1cd94:	stp	x19, x20, [sp, #16]
   1cd98:	stp	x21, x22, [sp, #32]
   1cd9c:	stp	x23, x24, [sp, #48]
   1cda0:	stp	x25, x26, [sp, #64]
   1cda4:	and	w25, w3, #0xff
   1cda8:	str	wzr, [sp, #92]
   1cdac:	cbnz	x2, 1cdd8 <PyInit__decimal@@Base+0xbe50>
   1cdb0:	mov	w1, w25
   1cdb4:	mov	x3, #0x0                   	// #0
   1cdb8:	mov	x2, #0x1                   	// #1
   1cdbc:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   1cdc0:	ldp	x19, x20, [sp, #16]
   1cdc4:	ldp	x21, x22, [sp, #32]
   1cdc8:	ldp	x23, x24, [sp, #48]
   1cdcc:	ldp	x25, x26, [sp, #64]
   1cdd0:	ldp	x29, x30, [sp], #96
   1cdd4:	ret
   1cdd8:	mov	x21, x2
   1cddc:	mov	x19, x0
   1cde0:	mov	x24, x1
   1cde4:	mov	x23, x4
   1cde8:	mov	x20, x5
   1cdec:	mov	x2, x5
   1cdf0:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1cdf4:	cbz	w0, 1cdc0 <PyInit__decimal@@Base+0xbe38>
   1cdf8:	mov	x0, x21
   1cdfc:	bl	16088 <PyInit__decimal@@Base+0x5100>
   1ce00:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   1ce04:	add	x1, x1, #0xb88
   1ce08:	add	x26, sp, #0x5c
   1ce0c:	ldr	x22, [x1, w0, sxtw #3]
   1ce10:	lsr	x22, x22, #1
   1ce14:	cbz	x22, 1ce5c <PyInit__decimal@@Base+0xbed4>
   1ce18:	mov	x4, x26
   1ce1c:	mov	x3, x23
   1ce20:	mov	x2, x19
   1ce24:	mov	x1, x19
   1ce28:	mov	x0, x19
   1ce2c:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
   1ce30:	tst	x21, x22
   1ce34:	b.eq	1ce50 <PyInit__decimal@@Base+0xbec8>  // b.none
   1ce38:	mov	x4, x26
   1ce3c:	mov	x3, x23
   1ce40:	mov	x2, x24
   1ce44:	mov	x1, x19
   1ce48:	mov	x0, x19
   1ce4c:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
   1ce50:	ldrb	w0, [x19]
   1ce54:	tst	w0, #0xe
   1ce58:	b.eq	1ce80 <PyInit__decimal@@Base+0xbef8>  // b.none
   1ce5c:	ldr	w0, [x20]
   1ce60:	ldr	w1, [sp, #92]
   1ce64:	orr	w0, w0, w1
   1ce68:	str	w0, [x20]
   1ce6c:	ldrb	w1, [x19]
   1ce70:	and	w1, w1, #0xfffffffe
   1ce74:	orr	w1, w25, w1
   1ce78:	strb	w1, [x19]
   1ce7c:	b	1cdc0 <PyInit__decimal@@Base+0xbe38>
   1ce80:	ldr	x0, [x19, #24]
   1ce84:	ldr	x1, [x19, #40]
   1ce88:	add	x0, x1, x0, lsl #3
   1ce8c:	ldur	x0, [x0, #-8]
   1ce90:	cbnz	x0, 1ce10 <PyInit__decimal@@Base+0xbe88>
   1ce94:	ldr	w0, [sp, #92]
   1ce98:	tbz	w0, #0, 1ce10 <PyInit__decimal@@Base+0xbe88>
   1ce9c:	b	1ce5c <PyInit__decimal@@Base+0xbed4>
   1cea0:	sub	sp, sp, #0x810
   1cea4:	add	x4, sp, #0x210
   1cea8:	stp	x29, x30, [sp]
   1ceac:	mov	x29, sp
   1ceb0:	stp	x19, x20, [sp, #16]
   1ceb4:	mov	x20, #0x2                   	// #2
   1ceb8:	stp	x21, x22, [sp, #32]
   1cebc:	mov	x21, x2
   1cec0:	mov	w2, #0x50                  	// #80
   1cec4:	stp	x23, x24, [sp, #48]
   1cec8:	mov	x23, x1
   1cecc:	mov	x22, x3
   1ced0:	stp	x25, x26, [sp, #64]
   1ced4:	mov	w3, #0x30                  	// #48
   1ced8:	cmp	x23, x0
   1cedc:	stp	x27, x28, [sp, #80]
   1cee0:	mov	x27, x0
   1cee4:	ldrb	w1, [x1]
   1cee8:	str	wzr, [sp, #156]
   1ceec:	and	w1, w1, #0xf
   1cef0:	strb	w3, [sp, #336]
   1cef4:	orr	w1, w1, w2
   1cef8:	strb	w1, [sp, #288]
   1cefc:	ldp	x1, x2, [x23, #8]
   1cf00:	stp	x1, x2, [sp, #296]
   1cf04:	ldr	x2, [x23, #24]
   1cf08:	str	x2, [sp, #312]
   1cf0c:	ldr	x2, [x23, #32]
   1cf10:	and	x1, x1, #0xfffffffffffffffe
   1cf14:	neg	x1, x1
   1cf18:	str	x2, [sp, #320]
   1cf1c:	ldr	x2, [x23, #40]
   1cf20:	str	x2, [sp, #328]
   1cf24:	mov	x2, #0x40                  	// #64
   1cf28:	stp	xzr, xzr, [sp, #344]
   1cf2c:	str	xzr, [sp, #360]
   1cf30:	str	x2, [sp, #368]
   1cf34:	sdiv	x1, x1, x20
   1cf38:	str	x4, [sp, #376]
   1cf3c:	strb	w3, [sp, #384]
   1cf40:	add	x4, sp, #0xa0
   1cf44:	stp	xzr, x2, [sp, #408]
   1cf48:	add	x2, sp, #0x410
   1cf4c:	mov	w3, #0xffffff90            	// #-112
   1cf50:	str	x2, [sp, #424]
   1cf54:	mov	x2, #0x5                   	// #5
   1cf58:	str	x2, [sp, #160]
   1cf5c:	mov	x2, #0xffffffffffffffff    	// #-1
   1cf60:	str	x2, [sp, #440]
   1cf64:	mov	x2, #0x1                   	// #1
   1cf68:	str	x1, [sp, #112]
   1cf6c:	stp	xzr, xzr, [sp, #392]
   1cf70:	strb	w3, [sp, #432]
   1cf74:	stp	x2, x2, [sp, #448]
   1cf78:	str	x2, [sp, #464]
   1cf7c:	str	x4, [sp, #472]
   1cf80:	mov	x4, #0x3                   	// #3
   1cf84:	str	x4, [sp, #168]
   1cf88:	strb	w3, [sp, #480]
   1cf8c:	str	xzr, [sp, #488]
   1cf90:	stp	x2, x2, [sp, #496]
   1cf94:	str	x2, [sp, #512]
   1cf98:	add	x2, sp, #0xa8
   1cf9c:	str	x2, [sp, #520]
   1cfa0:	b.ne	1cfe0 <PyInit__decimal@@Base+0xc058>  // b.any
   1cfa4:	bl	192b0 <PyInit__decimal@@Base+0x8328>
   1cfa8:	mov	x19, x0
   1cfac:	cbnz	x0, 1cfe4 <PyInit__decimal@@Base+0xc05c>
   1cfb0:	mov	x2, x22
   1cfb4:	mov	x0, x23
   1cfb8:	mov	w1, #0x200                 	// #512
   1cfbc:	bl	18904 <PyInit__decimal@@Base+0x797c>
   1cfc0:	ldp	x29, x30, [sp]
   1cfc4:	ldp	x19, x20, [sp, #16]
   1cfc8:	ldp	x21, x22, [sp, #32]
   1cfcc:	ldp	x23, x24, [sp, #48]
   1cfd0:	ldp	x25, x26, [sp, #64]
   1cfd4:	ldp	x27, x28, [sp, #80]
   1cfd8:	add	sp, sp, #0x810
   1cfdc:	ret
   1cfe0:	add	x19, sp, #0x120
   1cfe4:	ldp	x2, x3, [x19, #8]
   1cfe8:	add	x1, sp, #0xb0
   1cfec:	add	x0, sp, #0xb8
   1cff0:	add	x2, x3, x2
   1cff4:	tbz	w2, #0, 1d090 <PyInit__decimal@@Base+0xc108>
   1cff8:	mov	x12, #0x7                   	// #7
   1cffc:	cmp	x3, x12
   1d000:	csel	x11, x3, x12, le
   1d004:	mov	x2, #0x1                   	// #1
   1d008:	sub	x2, x2, x3
   1d00c:	str	x2, [x19, #8]
   1d010:	mov	w3, w11
   1d014:	mov	x2, x19
   1d018:	bl	1610c <PyInit__decimal@@Base+0x5184>
   1d01c:	cmp	w11, #0x6
   1d020:	b.gt	1d040 <PyInit__decimal@@Base+0xc0b8>
   1d024:	sub	w3, w12, w11
   1d028:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   1d02c:	add	x0, x0, #0xae8
   1d030:	ldr	x1, [x0, w3, sxtw #3]
   1d034:	ldr	x0, [sp, #176]
   1d038:	mul	x0, x0, x1
   1d03c:	str	x0, [sp, #176]
   1d040:	ldr	x1, [x19, #8]
   1d044:	mov	x3, #0x3e8                 	// #1000
   1d048:	ldr	x20, [x23, #8]
   1d04c:	ldr	x2, [sp, #176]
   1d050:	sub	x20, x20, x1
   1d054:	mov	x1, #0x2                   	// #2
   1d058:	sdiv	x0, x20, x1
   1d05c:	mov	x1, #0x2710                	// #10000
   1d060:	str	x0, [sp, #104]
   1d064:	add	x0, x3, x1
   1d068:	lsr	x23, x0, #1
   1d06c:	mul	x4, x23, x23
   1d070:	cmp	x2, x4
   1d074:	b.cc	1d0bc <PyInit__decimal@@Base+0xc134>  // b.lo, b.ul, b.last
   1d078:	orr	x0, x0, #0x1
   1d07c:	add	x0, x0, x4
   1d080:	cmp	x2, x0
   1d084:	b.cc	1d0c4 <PyInit__decimal@@Base+0xc13c>  // b.lo, b.ul, b.last
   1d088:	add	x3, x23, #0x1
   1d08c:	b	1d064 <PyInit__decimal@@Base+0xc0dc>
   1d090:	mov	x12, #0x8                   	// #8
   1d094:	cmp	x3, x12
   1d098:	csel	x11, x3, x12, le
   1d09c:	mov	x2, #0x2                   	// #2
   1d0a0:	sub	x2, x2, x3
   1d0a4:	str	x2, [x19, #8]
   1d0a8:	mov	w3, w11
   1d0ac:	mov	x2, x19
   1d0b0:	bl	1610c <PyInit__decimal@@Base+0x5184>
   1d0b4:	cmp	w11, #0x7
   1d0b8:	b	1d020 <PyInit__decimal@@Base+0xc098>
   1d0bc:	sub	x1, x23, #0x1
   1d0c0:	b	1d064 <PyInit__decimal@@Base+0xc0dc>
   1d0c4:	ldrb	w0, [x27]
   1d0c8:	tbnz	w0, #5, 1d108 <PyInit__decimal@@Base+0xc180>
   1d0cc:	adrp	x24, 45000 <PyInit__decimal@@Base+0x34078>
   1d0d0:	ldr	x0, [x27, #32]
   1d0d4:	ldr	x1, [x24, #1688]
   1d0d8:	cmp	x0, x1
   1d0dc:	b.le	1d108 <PyInit__decimal@@Base+0xc180>
   1d0e0:	ldr	x0, [x27, #40]
   1d0e4:	add	x3, sp, #0x610
   1d0e8:	mov	x2, #0x8                   	// #8
   1d0ec:	strb	wzr, [sp, #1552]
   1d0f0:	bl	15d18 <PyInit__decimal@@Base+0x4d90>
   1d0f4:	str	x0, [x27, #40]
   1d0f8:	ldrb	w0, [sp, #1552]
   1d0fc:	cbnz	w0, 1d108 <PyInit__decimal@@Base+0xc180>
   1d100:	ldr	x0, [x24, #1688]
   1d104:	str	x0, [x27, #32]
   1d108:	ldrb	w0, [x27]
   1d10c:	add	x24, sp, #0xf0
   1d110:	ldr	x1, [x27, #40]
   1d114:	and	w0, w0, #0xfffffff0
   1d118:	strb	w0, [x27]
   1d11c:	mov	x0, #0xca00                	// #51712
   1d120:	movk	x0, #0x3b9a, lsl #16
   1d124:	add	x25, sp, #0xc0
   1d128:	udiv	x23, x0, x23
   1d12c:	mov	x0, #0x1                   	// #1
   1d130:	str	x23, [x1]
   1d134:	str	x0, [x27, #24]
   1d138:	mov	x0, #0xfffffffffffffffa    	// #-6
   1d13c:	str	x0, [x27, #8]
   1d140:	mov	x0, x27
   1d144:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   1d148:	mov	x0, x24
   1d14c:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1d150:	mov	x0, x25
   1d154:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1d158:	mov	w0, #0x8                   	// #8
   1d15c:	str	w0, [sp, #228]
   1d160:	ldr	x0, [x21]
   1d164:	mov	w3, #0x0                   	// #0
   1d168:	add	x0, x0, #0x1
   1d16c:	cmp	x0, #0x3
   1d170:	b.le	1d1bc <PyInit__decimal@@Base+0xc234>
   1d174:	add	x2, sp, #0x610
   1d178:	mov	x4, #0x2                   	// #2
   1d17c:	add	x1, x0, #0x3
   1d180:	mov	w21, w3
   1d184:	cmp	x1, #0x7
   1d188:	add	w3, w3, #0x1
   1d18c:	add	x23, x2, w21, sxtw #3
   1d190:	sdiv	x0, x1, x4
   1d194:	str	x0, [x2, w21, sxtw #3]
   1d198:	b.gt	1d17c <PyInit__decimal@@Base+0xc1f4>
   1d19c:	add	x0, sp, #0x1e0
   1d1a0:	add	x28, sp, #0x9c
   1d1a4:	add	x26, sp, #0x150
   1d1a8:	add	x20, sp, #0x180
   1d1ac:	str	x0, [sp, #120]
   1d1b0:	add	x0, sp, #0x1b0
   1d1b4:	str	x0, [sp, #128]
   1d1b8:	tbz	w21, #31, 1d2d8 <PyInit__decimal@@Base+0xc350>
   1d1bc:	ldr	x4, [x27, #8]
   1d1c0:	ldr	x0, [sp, #104]
   1d1c4:	sub	x0, x4, x0
   1d1c8:	str	x0, [x27, #8]
   1d1cc:	mov	x0, x27
   1d1d0:	bl	185e8 <PyInit__decimal@@Base+0x7660>
   1d1d4:	ldr	x1, [sp, #112]
   1d1d8:	sub	x4, x1, x4
   1d1dc:	ldr	x1, [sp, #104]
   1d1e0:	add	x20, x4, x1
   1d1e4:	cmp	x0, x20
   1d1e8:	csel	x20, x0, x20, le
   1d1ec:	cmp	x20, #0x0
   1d1f0:	b.le	1d20c <PyInit__decimal@@Base+0xc284>
   1d1f4:	mov	x1, x20
   1d1f8:	mov	x0, x27
   1d1fc:	bl	19c58 <PyInit__decimal@@Base+0x8cd0>
   1d200:	ldr	x1, [x27, #8]
   1d204:	add	x20, x1, x20
   1d208:	str	x20, [x27, #8]
   1d20c:	ldrb	w0, [sp, #336]
   1d210:	tst	w0, #0xe0
   1d214:	b.ne	1d228 <PyInit__decimal@@Base+0xc2a0>  // b.any
   1d218:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1d21c:	ldr	x1, [x0, #1720]
   1d220:	ldr	x0, [sp, #376]
   1d224:	blr	x1
   1d228:	ldrb	w0, [sp, #336]
   1d22c:	tbnz	w0, #4, 1d240 <PyInit__decimal@@Base+0xc2b8>
   1d230:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1d234:	ldr	x1, [x0, #1720]
   1d238:	add	x0, sp, #0x150
   1d23c:	blr	x1
   1d240:	ldrb	w0, [sp, #384]
   1d244:	tst	w0, #0xe0
   1d248:	b.ne	1d25c <PyInit__decimal@@Base+0xc2d4>  // b.any
   1d24c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1d250:	ldr	x1, [x0, #1720]
   1d254:	ldr	x0, [sp, #424]
   1d258:	blr	x1
   1d25c:	ldrb	w0, [sp, #384]
   1d260:	tbnz	w0, #4, 1d274 <PyInit__decimal@@Base+0xc2ec>
   1d264:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1d268:	ldr	x1, [x0, #1720]
   1d26c:	add	x0, sp, #0x180
   1d270:	blr	x1
   1d274:	add	x0, sp, #0x120
   1d278:	cmp	x19, x0
   1d27c:	b.eq	1d2b4 <PyInit__decimal@@Base+0xc32c>  // b.none
   1d280:	ldrb	w0, [x19]
   1d284:	tst	w0, #0xe0
   1d288:	b.ne	1d29c <PyInit__decimal@@Base+0xc314>  // b.any
   1d28c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1d290:	ldr	x1, [x0, #1720]
   1d294:	ldr	x0, [x19, #40]
   1d298:	blr	x1
   1d29c:	ldrb	w0, [x19]
   1d2a0:	tbnz	w0, #4, 1d2b4 <PyInit__decimal@@Base+0xc32c>
   1d2a4:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1d2a8:	ldr	x1, [x0, #1720]
   1d2ac:	mov	x0, x19
   1d2b0:	blr	x1
   1d2b4:	ldr	w0, [sp, #156]
   1d2b8:	mov	w1, #0x3be                 	// #958
   1d2bc:	and	w0, w0, w1
   1d2c0:	ldr	w1, [x22]
   1d2c4:	orr	w0, w0, w1
   1d2c8:	mov	w1, #0x1040                	// #4160
   1d2cc:	orr	w0, w0, w1
   1d2d0:	str	w0, [x22]
   1d2d4:	b	1cfc0 <PyInit__decimal@@Base+0xc038>
   1d2d8:	ldr	x0, [x23]
   1d2dc:	mov	x2, x27
   1d2e0:	mov	x4, x28
   1d2e4:	mov	x3, x24
   1d2e8:	add	x0, x0, #0x1
   1d2ec:	mov	x1, x27
   1d2f0:	lsl	x0, x0, #1
   1d2f4:	str	x0, [sp, #192]
   1d2f8:	mov	x0, x26
   1d2fc:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
   1d300:	ldr	x2, [x19, #16]
   1d304:	ldr	x0, [sp, #192]
   1d308:	cmp	x2, x0
   1d30c:	b.le	1d3a4 <PyInit__decimal@@Base+0xc41c>
   1d310:	sub	x2, x2, x0
   1d314:	mov	x3, x28
   1d318:	mov	x1, x19
   1d31c:	mov	x0, x20
   1d320:	str	x2, [sp, #136]
   1d324:	bl	1a260 <PyInit__decimal@@Base+0x92d8>
   1d328:	ldr	x2, [sp, #136]
   1d32c:	mov	x4, x28
   1d330:	ldr	x0, [sp, #392]
   1d334:	mov	x3, x25
   1d338:	mov	x1, x20
   1d33c:	add	x2, x0, x2
   1d340:	str	x2, [sp, #392]
   1d344:	mov	x2, x26
   1d348:	mov	x0, x20
   1d34c:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
   1d350:	ldr	x1, [sp, #120]
   1d354:	mov	x4, x28
   1d358:	mov	x3, x24
   1d35c:	mov	x2, x20
   1d360:	mov	x0, x20
   1d364:	sub	w21, w21, #0x1
   1d368:	bl	1bd98 <PyInit__decimal@@Base+0xae10>
   1d36c:	sub	x23, x23, #0x8
   1d370:	mov	x4, x28
   1d374:	mov	x3, x25
   1d378:	mov	x2, x20
   1d37c:	mov	x1, x27
   1d380:	mov	x0, x27
   1d384:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
   1d388:	ldr	x2, [sp, #128]
   1d38c:	mov	x4, x28
   1d390:	mov	x3, x24
   1d394:	mov	x1, x27
   1d398:	mov	x0, x27
   1d39c:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
   1d3a0:	b	1d1b8 <PyInit__decimal@@Base+0xc230>
   1d3a4:	mov	x4, x28
   1d3a8:	mov	x3, x25
   1d3ac:	mov	x2, x26
   1d3b0:	mov	x1, x19
   1d3b4:	b	1d348 <PyInit__decimal@@Base+0xc3c0>
   1d3b8:	sub	sp, sp, #0x2b0
   1d3bc:	stp	x29, x30, [sp]
   1d3c0:	mov	x29, sp
   1d3c4:	stp	x21, x22, [sp, #32]
   1d3c8:	mov	x21, x0
   1d3cc:	mov	w0, #0x30                  	// #48
   1d3d0:	strb	w0, [sp, #128]
   1d3d4:	mov	x0, #0x40                  	// #64
   1d3d8:	str	x25, [sp, #64]
   1d3dc:	add	x25, sp, #0x50
   1d3e0:	stp	xzr, x0, [sp, #152]
   1d3e4:	add	x0, sp, #0xb0
   1d3e8:	mov	x22, x1
   1d3ec:	stp	x19, x20, [sp, #16]
   1d3f0:	mov	x19, x4
   1d3f4:	add	x20, sp, #0x80
   1d3f8:	stp	x23, x24, [sp, #48]
   1d3fc:	mov	x24, x2
   1d400:	mov	x23, x3
   1d404:	stp	xzr, xzr, [sp, #136]
   1d408:	str	x0, [sp, #168]
   1d40c:	mov	x0, x25
   1d410:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1d414:	mov	x3, x19
   1d418:	mov	x2, x25
   1d41c:	mov	x1, x24
   1d420:	mov	x0, x20
   1d424:	bl	1a0d8 <PyInit__decimal@@Base+0x9150>
   1d428:	mov	x0, x21
   1d42c:	mov	x4, x19
   1d430:	mov	x3, x23
   1d434:	mov	x2, x20
   1d438:	mov	x1, x22
   1d43c:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
   1d440:	ldrb	w0, [sp, #128]
   1d444:	tst	w0, #0xe0
   1d448:	b.ne	1d45c <PyInit__decimal@@Base+0xc4d4>  // b.any
   1d44c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1d450:	ldr	x1, [x0, #1720]
   1d454:	ldr	x0, [sp, #168]
   1d458:	blr	x1
   1d45c:	ldrb	w0, [sp, #128]
   1d460:	tbnz	w0, #4, 1d474 <PyInit__decimal@@Base+0xc4ec>
   1d464:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1d468:	ldr	x1, [x0, #1720]
   1d46c:	mov	x0, x20
   1d470:	blr	x1
   1d474:	ldp	x29, x30, [sp]
   1d478:	ldp	x19, x20, [sp, #16]
   1d47c:	ldp	x21, x22, [sp, #32]
   1d480:	ldp	x23, x24, [sp, #48]
   1d484:	ldr	x25, [sp, #64]
   1d488:	add	sp, sp, #0x2b0
   1d48c:	ret
   1d490:	sub	sp, sp, #0x2b0
   1d494:	stp	x29, x30, [sp]
   1d498:	mov	x29, sp
   1d49c:	stp	x21, x22, [sp, #32]
   1d4a0:	mov	x21, x0
   1d4a4:	mov	w0, #0x30                  	// #48
   1d4a8:	strb	w0, [sp, #128]
   1d4ac:	mov	x0, #0x40                  	// #64
   1d4b0:	str	x25, [sp, #64]
   1d4b4:	add	x25, sp, #0x50
   1d4b8:	stp	xzr, x0, [sp, #152]
   1d4bc:	add	x0, sp, #0xb0
   1d4c0:	mov	x22, x1
   1d4c4:	stp	x19, x20, [sp, #16]
   1d4c8:	mov	x19, x4
   1d4cc:	add	x20, sp, #0x80
   1d4d0:	stp	x23, x24, [sp, #48]
   1d4d4:	mov	x24, x2
   1d4d8:	mov	x23, x3
   1d4dc:	stp	xzr, xzr, [sp, #136]
   1d4e0:	str	x0, [sp, #168]
   1d4e4:	mov	x0, x25
   1d4e8:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1d4ec:	mov	x3, x19
   1d4f0:	mov	x2, x25
   1d4f4:	mov	x1, x24
   1d4f8:	mov	x0, x20
   1d4fc:	bl	1a1d0 <PyInit__decimal@@Base+0x9248>
   1d500:	mov	x0, x21
   1d504:	mov	x4, x19
   1d508:	mov	x3, x23
   1d50c:	mov	x2, x20
   1d510:	mov	x1, x22
   1d514:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
   1d518:	ldrb	w0, [sp, #128]
   1d51c:	tst	w0, #0xe0
   1d520:	b.ne	1d534 <PyInit__decimal@@Base+0xc5ac>  // b.any
   1d524:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1d528:	ldr	x1, [x0, #1720]
   1d52c:	ldr	x0, [sp, #168]
   1d530:	blr	x1
   1d534:	ldrb	w0, [sp, #128]
   1d538:	tbnz	w0, #4, 1d54c <PyInit__decimal@@Base+0xc5c4>
   1d53c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1d540:	ldr	x1, [x0, #1720]
   1d544:	mov	x0, x20
   1d548:	blr	x1
   1d54c:	ldp	x29, x30, [sp]
   1d550:	ldp	x19, x20, [sp, #16]
   1d554:	ldp	x21, x22, [sp, #32]
   1d558:	ldp	x23, x24, [sp, #48]
   1d55c:	ldr	x25, [sp, #64]
   1d560:	add	sp, sp, #0x2b0
   1d564:	ret
   1d568:	sxtw	x2, w2
   1d56c:	b	1d3b8 <PyInit__decimal@@Base+0xc430>
   1d570:	mov	w2, w2
   1d574:	b	1d490 <PyInit__decimal@@Base+0xc508>
   1d578:	b	1d3b8 <PyInit__decimal@@Base+0xc430>
   1d57c:	b	1d490 <PyInit__decimal@@Base+0xc508>
   1d580:	stp	x29, x30, [sp, #-48]!
   1d584:	mov	x29, sp
   1d588:	stp	x19, x20, [sp, #16]
   1d58c:	mov	x20, x0
   1d590:	mov	x19, x1
   1d594:	stp	x21, x22, [sp, #32]
   1d598:	mov	x22, x2
   1d59c:	mov	x21, x3
   1d5a0:	ldrb	w4, [x1]
   1d5a4:	tst	w4, #0xe
   1d5a8:	b.ne	1d5d4 <PyInit__decimal@@Base+0xc64c>  // b.any
   1d5ac:	ldr	x0, [x19, #24]
   1d5b0:	ldr	x1, [x19, #40]
   1d5b4:	add	x0, x1, x0, lsl #3
   1d5b8:	ldur	x0, [x0, #-8]
   1d5bc:	cbz	x0, 1d5ec <PyInit__decimal@@Base+0xc664>
   1d5c0:	mov	x2, x21
   1d5c4:	mov	x1, x19
   1d5c8:	mov	x0, x20
   1d5cc:	bl	19350 <PyInit__decimal@@Base+0x83c8>
   1d5d0:	b	1d608 <PyInit__decimal@@Base+0xc680>
   1d5d4:	bl	18c14 <PyInit__decimal@@Base+0x7c8c>
   1d5d8:	cbnz	w0, 1d624 <PyInit__decimal@@Base+0xc69c>
   1d5dc:	ldrb	w0, [x19]
   1d5e0:	tst	w0, #0xe
   1d5e4:	b.ne	1d5c0 <PyInit__decimal@@Base+0xc638>  // b.any
   1d5e8:	b	1d5ac <PyInit__decimal@@Base+0xc624>
   1d5ec:	ldr	w0, [x22, #36]
   1d5f0:	cmp	w0, #0x3
   1d5f4:	b.eq	1d5c0 <PyInit__decimal@@Base+0xc638>  // b.none
   1d5f8:	mov	x2, x21
   1d5fc:	mov	x1, x19
   1d600:	mov	x0, x20
   1d604:	bl	1931c <PyInit__decimal@@Base+0x8394>
   1d608:	mov	x2, x21
   1d60c:	mov	x1, x22
   1d610:	mov	x0, x20
   1d614:	ldp	x19, x20, [sp, #16]
   1d618:	ldp	x21, x22, [sp, #32]
   1d61c:	ldp	x29, x30, [sp], #48
   1d620:	b	19f98 <PyInit__decimal@@Base+0x9010>
   1d624:	ldp	x19, x20, [sp, #16]
   1d628:	ldp	x21, x22, [sp, #32]
   1d62c:	ldp	x29, x30, [sp], #48
   1d630:	ret
   1d634:	stp	x29, x30, [sp, #-48]!
   1d638:	mov	x29, sp
   1d63c:	stp	x19, x20, [sp, #16]
   1d640:	mov	x20, x0
   1d644:	mov	x19, x1
   1d648:	stp	x21, x22, [sp, #32]
   1d64c:	mov	x22, x2
   1d650:	mov	x21, x3
   1d654:	ldrb	w4, [x1]
   1d658:	tst	w4, #0xe
   1d65c:	b.ne	1d688 <PyInit__decimal@@Base+0xc700>  // b.any
   1d660:	ldr	x0, [x19, #24]
   1d664:	ldr	x1, [x19, #40]
   1d668:	add	x0, x1, x0, lsl #3
   1d66c:	ldur	x0, [x0, #-8]
   1d670:	cbz	x0, 1d6a0 <PyInit__decimal@@Base+0xc718>
   1d674:	mov	x2, x21
   1d678:	mov	x1, x19
   1d67c:	mov	x0, x20
   1d680:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1d684:	b	1d6bc <PyInit__decimal@@Base+0xc734>
   1d688:	bl	18c14 <PyInit__decimal@@Base+0x7c8c>
   1d68c:	cbnz	w0, 1d6d8 <PyInit__decimal@@Base+0xc750>
   1d690:	ldrb	w0, [x19]
   1d694:	tst	w0, #0xe
   1d698:	b.ne	1d674 <PyInit__decimal@@Base+0xc6ec>  // b.any
   1d69c:	b	1d660 <PyInit__decimal@@Base+0xc6d8>
   1d6a0:	ldr	w0, [x22, #36]
   1d6a4:	cmp	w0, #0x3
   1d6a8:	b.eq	1d674 <PyInit__decimal@@Base+0xc6ec>  // b.none
   1d6ac:	mov	x2, x21
   1d6b0:	mov	x1, x19
   1d6b4:	mov	x0, x20
   1d6b8:	bl	1931c <PyInit__decimal@@Base+0x8394>
   1d6bc:	mov	x2, x21
   1d6c0:	mov	x1, x22
   1d6c4:	mov	x0, x20
   1d6c8:	ldp	x19, x20, [sp, #16]
   1d6cc:	ldp	x21, x22, [sp, #32]
   1d6d0:	ldp	x29, x30, [sp], #48
   1d6d4:	b	19f98 <PyInit__decimal@@Base+0x9010>
   1d6d8:	ldp	x19, x20, [sp, #16]
   1d6dc:	ldp	x21, x22, [sp, #32]
   1d6e0:	ldp	x29, x30, [sp], #48
   1d6e4:	ret
   1d6e8:	stp	x29, x30, [sp, #-48]!
   1d6ec:	mov	x29, sp
   1d6f0:	stp	x19, x20, [sp, #16]
   1d6f4:	mov	x20, x0
   1d6f8:	mov	x19, x1
   1d6fc:	stp	x21, x22, [sp, #32]
   1d700:	mov	x21, x2
   1d704:	mov	x22, x3
   1d708:	ldrb	w4, [x1]
   1d70c:	tst	w4, #0xe
   1d710:	b.ne	1d73c <PyInit__decimal@@Base+0xc7b4>  // b.any
   1d714:	ldrb	w0, [x19]
   1d718:	tbnz	w0, #0, 1d754 <PyInit__decimal@@Base+0xc7cc>
   1d71c:	mov	x3, x22
   1d720:	mov	x2, x21
   1d724:	mov	x1, x19
   1d728:	mov	x0, x20
   1d72c:	ldp	x19, x20, [sp, #16]
   1d730:	ldp	x21, x22, [sp, #32]
   1d734:	ldp	x29, x30, [sp], #48
   1d738:	b	1d634 <PyInit__decimal@@Base+0xc6ac>
   1d73c:	bl	18c14 <PyInit__decimal@@Base+0x7c8c>
   1d740:	cbz	w0, 1d714 <PyInit__decimal@@Base+0xc78c>
   1d744:	ldp	x19, x20, [sp, #16]
   1d748:	ldp	x21, x22, [sp, #32]
   1d74c:	ldp	x29, x30, [sp], #48
   1d750:	ret
   1d754:	mov	x3, x22
   1d758:	mov	x2, x21
   1d75c:	mov	x1, x19
   1d760:	mov	x0, x20
   1d764:	ldp	x19, x20, [sp, #16]
   1d768:	ldp	x21, x22, [sp, #32]
   1d76c:	ldp	x29, x30, [sp], #48
   1d770:	b	1d580 <PyInit__decimal@@Base+0xc5f8>
   1d774:	stp	x29, x30, [sp, #-176]!
   1d778:	mov	w5, #0xffffff90            	// #-112
   1d77c:	mov	x4, #0x1                   	// #1
   1d780:	mov	x29, sp
   1d784:	strb	w5, [sp, #128]
   1d788:	ldr	x6, [x2]
   1d78c:	stp	x19, x20, [sp, #16]
   1d790:	mov	x19, x0
   1d794:	ldr	x5, [x2, #16]
   1d798:	stp	x21, x22, [sp, #32]
   1d79c:	mov	x20, x3
   1d7a0:	str	x23, [sp, #48]
   1d7a4:	sub	x7, x5, x6
   1d7a8:	str	x4, [sp, #72]
   1d7ac:	mov	x22, x1
   1d7b0:	stp	x7, x4, [sp, #136]
   1d7b4:	mov	x21, x2
   1d7b8:	stp	x4, x4, [sp, #152]
   1d7bc:	add	x4, sp, #0x48
   1d7c0:	str	x4, [sp, #168]
   1d7c4:	ldrb	w4, [x1]
   1d7c8:	tst	w4, #0xe
   1d7cc:	b.eq	1d840 <PyInit__decimal@@Base+0xc8b8>  // b.none
   1d7d0:	bl	18c14 <PyInit__decimal@@Base+0x7c8c>
   1d7d4:	cbnz	w0, 1d7f0 <PyInit__decimal@@Base+0xc868>
   1d7d8:	ldrb	w0, [x22]
   1d7dc:	tbz	w0, #0, 1d804 <PyInit__decimal@@Base+0xc87c>
   1d7e0:	mov	x2, x20
   1d7e4:	mov	x1, x22
   1d7e8:	mov	x0, x19
   1d7ec:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1d7f0:	ldp	x19, x20, [sp, #16]
   1d7f4:	ldp	x21, x22, [sp, #32]
   1d7f8:	ldr	x23, [sp, #48]
   1d7fc:	ldp	x29, x30, [sp], #176
   1d800:	ret
   1d804:	ldrb	w0, [x19]
   1d808:	mov	x2, x20
   1d80c:	mov	x1, x21
   1d810:	and	w0, w0, #0xfffffff0
   1d814:	strb	w0, [x19]
   1d818:	mov	x0, x19
   1d81c:	bl	18510 <PyInit__decimal@@Base+0x7588>
   1d820:	ldrb	w0, [x19]
   1d824:	tst	w0, #0xc
   1d828:	b.ne	1d7f0 <PyInit__decimal@@Base+0xc868>  // b.any
   1d82c:	ldp	x1, x0, [x21]
   1d830:	add	x0, x0, #0x1
   1d834:	sub	x0, x0, x1
   1d838:	str	x0, [x19, #8]
   1d83c:	b	1d7f0 <PyInit__decimal@@Base+0xc868>
   1d840:	ldr	x2, [x2, #8]
   1d844:	stp	x6, x2, [sp, #80]
   1d848:	ldr	x2, [x21, #40]
   1d84c:	str	x2, [sp, #120]
   1d850:	mov	x2, #0x300000000           	// #12884901888
   1d854:	stp	x5, xzr, [sp, #96]
   1d858:	str	x2, [sp, #112]
   1d85c:	mov	x2, x3
   1d860:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1d864:	cbz	w0, 1d7f0 <PyInit__decimal@@Base+0xc868>
   1d868:	add	x21, sp, #0x50
   1d86c:	mov	x0, x19
   1d870:	add	x23, x21, #0x1c
   1d874:	mov	x1, x21
   1d878:	mov	x2, x23
   1d87c:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   1d880:	ldr	w0, [sp, #108]
   1d884:	tst	w0, #0x3fe
   1d888:	b.eq	1d8a4 <PyInit__decimal@@Base+0xc91c>  // b.none
   1d88c:	mov	w1, #0x3be                 	// #958
   1d890:	and	w0, w0, w1
   1d894:	ldr	w1, [x20]
   1d898:	orr	w0, w0, w1
   1d89c:	str	w0, [x20]
   1d8a0:	b	1d7f0 <PyInit__decimal@@Base+0xc868>
   1d8a4:	mov	x1, x22
   1d8a8:	mov	x0, x19
   1d8ac:	mov	x4, x23
   1d8b0:	mov	x3, x21
   1d8b4:	add	x2, sp, #0x80
   1d8b8:	str	wzr, [sp, #108]
   1d8bc:	bl	1bd98 <PyInit__decimal@@Base+0xae10>
   1d8c0:	ldr	w0, [sp, #108]
   1d8c4:	mov	w1, #0x3be                 	// #958
   1d8c8:	and	w1, w0, w1
   1d8cc:	ldr	w0, [x20]
   1d8d0:	b	1d898 <PyInit__decimal@@Base+0xc910>
   1d8d4:	stp	x29, x30, [sp, #-176]!
   1d8d8:	mov	w5, #0xffffff90            	// #-112
   1d8dc:	mov	x4, #0x1                   	// #1
   1d8e0:	mov	x29, sp
   1d8e4:	strb	w5, [sp, #128]
   1d8e8:	ldr	x6, [x2]
   1d8ec:	stp	x19, x20, [sp, #16]
   1d8f0:	mov	x19, x0
   1d8f4:	ldr	x5, [x2, #16]
   1d8f8:	stp	x21, x22, [sp, #32]
   1d8fc:	mov	x20, x3
   1d900:	str	x23, [sp, #48]
   1d904:	sub	x7, x5, x6
   1d908:	str	x4, [sp, #72]
   1d90c:	mov	x22, x1
   1d910:	stp	x7, x4, [sp, #136]
   1d914:	mov	x21, x2
   1d918:	stp	x4, x4, [sp, #152]
   1d91c:	add	x4, sp, #0x48
   1d920:	str	x4, [sp, #168]
   1d924:	ldrb	w4, [x1]
   1d928:	tst	w4, #0xe
   1d92c:	b.eq	1d9ac <PyInit__decimal@@Base+0xca24>  // b.none
   1d930:	bl	18c14 <PyInit__decimal@@Base+0x7c8c>
   1d934:	cbnz	w0, 1d950 <PyInit__decimal@@Base+0xc9c8>
   1d938:	ldrb	w0, [x22]
   1d93c:	tbnz	w0, #0, 1d964 <PyInit__decimal@@Base+0xc9dc>
   1d940:	mov	x2, x20
   1d944:	mov	x1, x22
   1d948:	mov	x0, x19
   1d94c:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1d950:	ldp	x19, x20, [sp, #16]
   1d954:	ldp	x21, x22, [sp, #32]
   1d958:	ldr	x23, [sp, #48]
   1d95c:	ldp	x29, x30, [sp], #176
   1d960:	ret
   1d964:	ldrb	w0, [x19]
   1d968:	mov	x2, x20
   1d96c:	mov	x1, x21
   1d970:	and	w0, w0, #0xfffffff0
   1d974:	strb	w0, [x19]
   1d978:	mov	x0, x19
   1d97c:	bl	18510 <PyInit__decimal@@Base+0x7588>
   1d980:	ldrb	w0, [x19]
   1d984:	tst	w0, #0xc
   1d988:	b.ne	1d950 <PyInit__decimal@@Base+0xc9c8>  // b.any
   1d98c:	and	w0, w0, #0xfffffff0
   1d990:	orr	w0, w0, #0x1
   1d994:	strb	w0, [x19]
   1d998:	ldp	x1, x0, [x21]
   1d99c:	add	x0, x0, #0x1
   1d9a0:	sub	x0, x0, x1
   1d9a4:	str	x0, [x19, #8]
   1d9a8:	b	1d950 <PyInit__decimal@@Base+0xc9c8>
   1d9ac:	ldr	x2, [x2, #8]
   1d9b0:	stp	x6, x2, [sp, #80]
   1d9b4:	ldr	x2, [x21, #40]
   1d9b8:	str	x2, [sp, #120]
   1d9bc:	mov	x2, #0x200000000           	// #8589934592
   1d9c0:	stp	x5, xzr, [sp, #96]
   1d9c4:	str	x2, [sp, #112]
   1d9c8:	mov	x2, x3
   1d9cc:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1d9d0:	cbz	w0, 1d950 <PyInit__decimal@@Base+0xc9c8>
   1d9d4:	add	x21, sp, #0x50
   1d9d8:	mov	x0, x19
   1d9dc:	add	x23, x21, #0x1c
   1d9e0:	mov	x1, x21
   1d9e4:	mov	x2, x23
   1d9e8:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   1d9ec:	ldr	w0, [sp, #108]
   1d9f0:	tst	w0, #0x3fe
   1d9f4:	b.eq	1da10 <PyInit__decimal@@Base+0xca88>  // b.none
   1d9f8:	mov	w1, #0x3be                 	// #958
   1d9fc:	and	w0, w0, w1
   1da00:	ldr	w1, [x20]
   1da04:	orr	w0, w0, w1
   1da08:	str	w0, [x20]
   1da0c:	b	1d950 <PyInit__decimal@@Base+0xc9c8>
   1da10:	mov	x1, x22
   1da14:	mov	x0, x19
   1da18:	mov	x4, x23
   1da1c:	mov	x3, x21
   1da20:	add	x2, sp, #0x80
   1da24:	str	wzr, [sp, #108]
   1da28:	bl	1bc74 <PyInit__decimal@@Base+0xacec>
   1da2c:	ldr	w0, [sp, #108]
   1da30:	mov	w1, #0x3be                 	// #958
   1da34:	and	w1, w0, w1
   1da38:	ldr	w0, [x20]
   1da3c:	b	1da04 <PyInit__decimal@@Base+0xca7c>
   1da40:	stp	x29, x30, [sp, #-64]!
   1da44:	mov	x29, sp
   1da48:	stp	x19, x20, [sp, #16]
   1da4c:	mov	x20, x0
   1da50:	mov	x19, x4
   1da54:	stp	x21, x22, [sp, #32]
   1da58:	mov	x21, x1
   1da5c:	mov	x22, x3
   1da60:	str	x23, [sp, #48]
   1da64:	mov	x23, x2
   1da68:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   1da6c:	cbnz	w0, 1dad4 <PyInit__decimal@@Base+0xcb4c>
   1da70:	mov	x1, x23
   1da74:	mov	x0, x21
   1da78:	bl	16b04 <PyInit__decimal@@Base+0x5b7c>
   1da7c:	cmp	w0, #0x0
   1da80:	mov	x3, x19
   1da84:	cbnz	w0, 1daa8 <PyInit__decimal@@Base+0xcb20>
   1da88:	mov	x2, x23
   1da8c:	mov	x1, x21
   1da90:	mov	x0, x20
   1da94:	ldp	x19, x20, [sp, #16]
   1da98:	ldp	x21, x22, [sp, #32]
   1da9c:	ldr	x23, [sp, #48]
   1daa0:	ldp	x29, x30, [sp], #64
   1daa4:	b	19384 <PyInit__decimal@@Base+0x83fc>
   1daa8:	mov	x2, x22
   1daac:	mov	x1, x21
   1dab0:	mov	x0, x20
   1dab4:	b.ge	1dae8 <PyInit__decimal@@Base+0xcb60>  // b.tcont
   1dab8:	bl	1d8d4 <PyInit__decimal@@Base+0xc94c>
   1dabc:	ldrb	w2, [x20]
   1dac0:	tbz	w2, #1, 1daf0 <PyInit__decimal@@Base+0xcb68>
   1dac4:	ldr	w0, [x19]
   1dac8:	mov	w1, #0x1840                	// #6208
   1dacc:	orr	w0, w0, w1
   1dad0:	str	w0, [x19]
   1dad4:	ldp	x19, x20, [sp, #16]
   1dad8:	ldp	x21, x22, [sp, #32]
   1dadc:	ldr	x23, [sp, #48]
   1dae0:	ldp	x29, x30, [sp], #64
   1dae4:	ret
   1dae8:	bl	1d774 <PyInit__decimal@@Base+0xc7ec>
   1daec:	b	1dabc <PyInit__decimal@@Base+0xcb34>
   1daf0:	ldp	x0, x1, [x20, #8]
   1daf4:	add	x0, x0, x1
   1daf8:	ldr	x1, [x22, #16]
   1dafc:	sub	x0, x0, #0x1
   1db00:	cmp	x1, x0
   1db04:	b.le	1dad4 <PyInit__decimal@@Base+0xcb4c>
   1db08:	ldr	w0, [x19]
   1db0c:	mov	w1, #0x7040                	// #28736
   1db10:	tst	w2, #0xe
   1db14:	orr	w1, w0, w1
   1db18:	str	w1, [x19]
   1db1c:	b.ne	1dad4 <PyInit__decimal@@Base+0xcb4c>  // b.any
   1db20:	ldr	x1, [x20, #24]
   1db24:	ldr	x2, [x20, #40]
   1db28:	add	x1, x2, x1, lsl #3
   1db2c:	ldur	x1, [x1, #-8]
   1db30:	cbnz	x1, 1dad4 <PyInit__decimal@@Base+0xcb4c>
   1db34:	mov	w1, #0x7041                	// #28737
   1db38:	b	1dacc <PyInit__decimal@@Base+0xcb44>
   1db3c:	stp	x29, x30, [sp, #-64]!
   1db40:	mov	x29, sp
   1db44:	stp	x19, x20, [sp, #16]
   1db48:	mov	x19, x0
   1db4c:	mov	x20, x3
   1db50:	stp	x21, x22, [sp, #32]
   1db54:	mov	x21, x4
   1db58:	mov	x22, x1
   1db5c:	str	x23, [sp, #48]
   1db60:	mov	x23, x2
   1db64:	ldrb	w4, [x1]
   1db68:	tst	w4, #0xe
   1db6c:	b.ne	1db7c <PyInit__decimal@@Base+0xcbf4>  // b.any
   1db70:	ldrb	w2, [x2]
   1db74:	tst	w2, #0xe
   1db78:	b.eq	1dbe8 <PyInit__decimal@@Base+0xcc60>  // b.none
   1db7c:	mov	x4, x21
   1db80:	mov	x3, x20
   1db84:	mov	x2, x23
   1db88:	mov	x1, x22
   1db8c:	mov	x0, x19
   1db90:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   1db94:	cbnz	w0, 1dd84 <PyInit__decimal@@Base+0xcdfc>
   1db98:	ldrb	w0, [x22]
   1db9c:	tbz	w0, #1, 1dbc8 <PyInit__decimal@@Base+0xcc40>
   1dba0:	ldrb	w0, [x23]
   1dba4:	tbz	w0, #1, 1dbc8 <PyInit__decimal@@Base+0xcc40>
   1dba8:	mov	x2, x21
   1dbac:	mov	x1, x22
   1dbb0:	mov	x0, x19
   1dbb4:	ldp	x19, x20, [sp, #16]
   1dbb8:	ldp	x21, x22, [sp, #32]
   1dbbc:	ldr	x23, [sp, #48]
   1dbc0:	ldp	x29, x30, [sp], #64
   1dbc4:	b	18b60 <PyInit__decimal@@Base+0x7bd8>
   1dbc8:	mov	x2, x21
   1dbcc:	mov	x0, x19
   1dbd0:	ldp	x19, x20, [sp, #16]
   1dbd4:	mov	w1, #0x100                 	// #256
   1dbd8:	ldp	x21, x22, [sp, #32]
   1dbdc:	ldr	x23, [sp, #48]
   1dbe0:	ldp	x29, x30, [sp], #64
   1dbe4:	b	18904 <PyInit__decimal@@Base+0x797c>
   1dbe8:	ldr	x2, [x3, #8]
   1dbec:	ldr	x23, [x23, #8]
   1dbf0:	cmp	x2, x23
   1dbf4:	b.lt	1dbc8 <PyInit__decimal@@Base+0xcc40>  // b.tstop
   1dbf8:	ldr	x2, [x3, #16]
   1dbfc:	ldr	x5, [x3]
   1dc00:	add	x2, x2, #0x1
   1dc04:	sub	x2, x2, x5
   1dc08:	cmp	x23, x2
   1dc0c:	b.lt	1dbc8 <PyInit__decimal@@Base+0xcc40>  // b.tstop
   1dc10:	ldr	x2, [x1, #24]
   1dc14:	ldr	x3, [x1, #40]
   1dc18:	add	x2, x3, x2, lsl #3
   1dc1c:	ldur	x2, [x2, #-8]
   1dc20:	cbnz	x2, 1dc50 <PyInit__decimal@@Base+0xccc8>
   1dc24:	mov	x3, x23
   1dc28:	and	w1, w4, #0x1
   1dc2c:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   1dc30:	mov	x2, x21
   1dc34:	mov	x1, x20
   1dc38:	mov	x0, x19
   1dc3c:	ldp	x19, x20, [sp, #16]
   1dc40:	ldp	x21, x22, [sp, #32]
   1dc44:	ldr	x23, [sp, #48]
   1dc48:	ldp	x29, x30, [sp], #64
   1dc4c:	b	19f98 <PyInit__decimal@@Base+0x9010>
   1dc50:	ldp	x4, x3, [x1, #8]
   1dc54:	sub	x2, x4, x23
   1dc58:	add	x3, x2, x3
   1dc5c:	cmp	x3, x5
   1dc60:	b.gt	1dbc8 <PyInit__decimal@@Base+0xcc40>
   1dc64:	mov	x3, x21
   1dc68:	tbnz	x2, #63, 1dcbc <PyInit__decimal@@Base+0xcd34>
   1dc6c:	bl	19718 <PyInit__decimal@@Base+0x8790>
   1dc70:	cbz	w0, 1dd84 <PyInit__decimal@@Base+0xcdfc>
   1dc74:	mov	w2, #0x0                   	// #0
   1dc78:	str	x23, [x19, #8]
   1dc7c:	ldp	x0, x1, [x19, #8]
   1dc80:	add	x0, x0, x1
   1dc84:	ldr	x1, [x20, #8]
   1dc88:	sub	x0, x0, #0x1
   1dc8c:	cmp	x1, x0
   1dc90:	b.lt	1dbc8 <PyInit__decimal@@Base+0xcc40>  // b.tstop
   1dc94:	ldr	x1, [x20, #16]
   1dc98:	ldr	x3, [x20]
   1dc9c:	add	x1, x1, #0x1
   1dca0:	sub	x1, x1, x3
   1dca4:	cmp	x0, x1
   1dca8:	b.lt	1dbc8 <PyInit__decimal@@Base+0xcc40>  // b.tstop
   1dcac:	ldr	w0, [x21]
   1dcb0:	orr	w2, w0, w2
   1dcb4:	str	w2, [x21]
   1dcb8:	b	1dc30 <PyInit__decimal@@Base+0xcca8>
   1dcbc:	sub	x2, x23, x4
   1dcc0:	bl	1a260 <PyInit__decimal@@Base+0x92d8>
   1dcc4:	mov	x22, x0
   1dcc8:	cmn	x0, #0x1
   1dccc:	b.eq	1dd84 <PyInit__decimal@@Base+0xcdfc>  // b.none
   1dcd0:	ldr	w2, [x20, #36]
   1dcd4:	mov	x1, x0
   1dcd8:	str	x23, [x19, #8]
   1dcdc:	mov	x0, x19
   1dce0:	bl	173a0 <PyInit__decimal@@Base+0x6418>
   1dce4:	cbz	w0, 1dd50 <PyInit__decimal@@Base+0xcdc8>
   1dce8:	ldr	x1, [x19, #24]
   1dcec:	ldr	x0, [x19, #40]
   1dcf0:	bl	11d38 <PyInit__decimal@@Base+0xdb0>
   1dcf4:	cbz	x0, 1dd38 <PyInit__decimal@@Base+0xcdb0>
   1dcf8:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1dcfc:	ldr	x1, [x19, #24]
   1dd00:	ldr	x0, [x0, #1688]
   1dd04:	add	x1, x1, #0x1
   1dd08:	cmp	x1, x0
   1dd0c:	csel	x1, x1, x0, ge  // ge = tcont
   1dd10:	ldr	x0, [x19, #32]
   1dd14:	cmp	x1, x0
   1dd18:	b.ne	1dd64 <PyInit__decimal@@Base+0xcddc>  // b.any
   1dd1c:	ldr	x1, [x19, #24]
   1dd20:	mov	x2, #0x1                   	// #1
   1dd24:	ldr	x0, [x19, #40]
   1dd28:	str	x2, [x0, x1, lsl #3]
   1dd2c:	ldr	x0, [x19, #24]
   1dd30:	add	x0, x0, x2
   1dd34:	str	x0, [x19, #24]
   1dd38:	mov	x0, x19
   1dd3c:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   1dd40:	ldr	x0, [x20]
   1dd44:	ldr	x1, [x19, #16]
   1dd48:	cmp	x1, x0
   1dd4c:	b.gt	1dbc8 <PyInit__decimal@@Base+0xcc40>
   1dd50:	cmp	x22, #0x0
   1dd54:	mov	w2, #0x1000                	// #4096
   1dd58:	mov	w0, #0x1040                	// #4160
   1dd5c:	csel	w2, w2, w0, eq  // eq = none
   1dd60:	b	1dc7c <PyInit__decimal@@Base+0xccf4>
   1dd64:	ldrb	w2, [x19]
   1dd68:	tbz	w2, #5, 1dd98 <PyInit__decimal@@Base+0xce10>
   1dd6c:	cmp	x1, x0
   1dd70:	b.le	1dd1c <PyInit__decimal@@Base+0xcd94>
   1dd74:	mov	x2, x21
   1dd78:	mov	x0, x19
   1dd7c:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   1dd80:	cbnz	w0, 1dd1c <PyInit__decimal@@Base+0xcd94>
   1dd84:	ldp	x19, x20, [sp, #16]
   1dd88:	ldp	x21, x22, [sp, #32]
   1dd8c:	ldr	x23, [sp, #48]
   1dd90:	ldp	x29, x30, [sp], #64
   1dd94:	ret
   1dd98:	mov	x2, x21
   1dd9c:	mov	x0, x19
   1dda0:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   1dda4:	b	1dd80 <PyInit__decimal@@Base+0xcdf8>
   1dda8:	stp	x29, x30, [sp, #-64]!
   1ddac:	mov	x29, sp
   1ddb0:	stp	x19, x20, [sp, #16]
   1ddb4:	mov	x19, x0
   1ddb8:	mov	x20, x3
   1ddbc:	stp	x21, x22, [sp, #32]
   1ddc0:	str	x23, [sp, #48]
   1ddc4:	ldrb	w23, [x1]
   1ddc8:	tst	w23, #0xe
   1ddcc:	b.eq	1ddfc <PyInit__decimal@@Base+0xce74>  // b.none
   1ddd0:	mov	x22, x1
   1ddd4:	bl	18c14 <PyInit__decimal@@Base+0x7c8c>
   1ddd8:	cbnz	w0, 1dea8 <PyInit__decimal@@Base+0xcf20>
   1dddc:	mov	x2, x20
   1dde0:	mov	x1, x22
   1dde4:	mov	x0, x19
   1dde8:	ldp	x19, x20, [sp, #16]
   1ddec:	ldp	x21, x22, [sp, #32]
   1ddf0:	ldr	x23, [sp, #48]
   1ddf4:	ldp	x29, x30, [sp], #64
   1ddf8:	b	18b60 <PyInit__decimal@@Base+0x7bd8>
   1ddfc:	mov	x21, x2
   1de00:	mov	x2, x3
   1de04:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1de08:	cbz	w0, 1dea8 <PyInit__decimal@@Base+0xcf20>
   1de0c:	mov	x0, x19
   1de10:	mov	x2, x20
   1de14:	mov	x1, x21
   1de18:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   1de1c:	ldrb	w0, [x19]
   1de20:	tst	w0, #0xe
   1de24:	b.ne	1dea8 <PyInit__decimal@@Base+0xcf20>  // b.any
   1de28:	ldr	x0, [x19, #24]
   1de2c:	ldr	x1, [x19, #40]
   1de30:	add	x0, x1, x0, lsl #3
   1de34:	ldur	x0, [x0, #-8]
   1de38:	cbnz	x0, 1de60 <PyInit__decimal@@Base+0xced8>
   1de3c:	and	w1, w23, #0x1
   1de40:	mov	x0, x19
   1de44:	ldp	x19, x20, [sp, #16]
   1de48:	mov	x3, #0x0                   	// #0
   1de4c:	ldp	x21, x22, [sp, #32]
   1de50:	mov	x2, #0x0                   	// #0
   1de54:	ldr	x23, [sp, #48]
   1de58:	ldp	x29, x30, [sp], #64
   1de5c:	b	181b4 <PyInit__decimal@@Base+0x722c>
   1de60:	mov	x0, x19
   1de64:	bl	185e8 <PyInit__decimal@@Base+0x7660>
   1de68:	ldr	w1, [x21, #40]
   1de6c:	ldr	x3, [x21, #8]
   1de70:	cbz	w1, 1de80 <PyInit__decimal@@Base+0xcef8>
   1de74:	ldr	x1, [x21]
   1de78:	add	x3, x3, #0x1
   1de7c:	sub	x3, x3, x1
   1de80:	ldr	x20, [x19, #8]
   1de84:	sub	x3, x3, x20
   1de88:	cmp	x3, x0
   1de8c:	csel	x20, x3, x0, le
   1de90:	mov	x0, x19
   1de94:	mov	x1, x20
   1de98:	bl	19c58 <PyInit__decimal@@Base+0x8cd0>
   1de9c:	ldr	x3, [x19, #8]
   1dea0:	add	x3, x3, x20
   1dea4:	str	x3, [x19, #8]
   1dea8:	ldp	x19, x20, [sp, #16]
   1deac:	ldp	x21, x22, [sp, #32]
   1deb0:	ldr	x23, [sp, #48]
   1deb4:	ldp	x29, x30, [sp], #64
   1deb8:	ret
   1debc:	mov	x6, #0xfffd                	// #65533
   1dec0:	mov	x7, #0xfffd                	// #65533
   1dec4:	movk	x6, #0x4ec7, lsl #16
   1dec8:	movk	x7, #0xf62b, lsl #16
   1decc:	movk	x6, #0x6d67, lsl #32
   1ded0:	movk	x7, #0x241a, lsl #32
   1ded4:	movk	x6, #0x1bc1, lsl #48
   1ded8:	add	x6, x2, x6
   1dedc:	movk	x7, #0x29a2, lsl #48
   1dee0:	cmp	x6, x7
   1dee4:	b.ls	1def4 <PyInit__decimal@@Base+0xcf6c>  // b.plast
   1dee8:	mov	x2, x4
   1deec:	mov	w1, #0x100                 	// #256
   1def0:	b	18904 <PyInit__decimal@@Base+0x797c>
   1def4:	b	1a400 <PyInit__decimal@@Base+0x9478>
   1def8:	mov	x6, #0xfffc                	// #65532
   1defc:	mov	x7, #0xfffc                	// #65532
   1df00:	movk	x6, #0xf62b, lsl #16
   1df04:	movk	x7, #0x9d8f, lsl #16
   1df08:	movk	x6, #0x241a, lsl #32
   1df0c:	movk	x7, #0xdace, lsl #32
   1df10:	movk	x6, #0x29a2, lsl #48
   1df14:	add	x6, x2, x6
   1df18:	movk	x7, #0x3782, lsl #48
   1df1c:	cmp	x6, x7
   1df20:	b.ls	1df30 <PyInit__decimal@@Base+0xcfa8>  // b.plast
   1df24:	mov	x2, x4
   1df28:	mov	w1, #0x100                 	// #256
   1df2c:	b	18904 <PyInit__decimal@@Base+0x797c>
   1df30:	b	1a400 <PyInit__decimal@@Base+0x9478>
   1df34:	mov	x4, x3
   1df38:	mov	x3, x2
   1df3c:	mov	x2, x1
   1df40:	mov	x1, x0
   1df44:	mov	w0, #0x0                   	// #0
   1df48:	b	1a54c <PyInit__decimal@@Base+0x95c4>
   1df4c:	mov	x4, x3
   1df50:	mov	x3, x2
   1df54:	mov	x2, x1
   1df58:	mov	x1, x0
   1df5c:	mov	w0, #0x1                   	// #1
   1df60:	b	1a54c <PyInit__decimal@@Base+0x95c4>
   1df64:	mov	x4, x3
   1df68:	mov	x3, x2
   1df6c:	mov	x2, x1
   1df70:	mov	x1, x0
   1df74:	mov	w0, #0x2                   	// #2
   1df78:	b	1a54c <PyInit__decimal@@Base+0x95c4>
   1df7c:	stp	x29, x30, [sp, #-256]!
   1df80:	mov	x29, sp
   1df84:	stp	x25, x26, [sp, #64]
   1df88:	add	x26, sp, #0xa0
   1df8c:	add	x25, sp, #0xd0
   1df90:	stp	x19, x20, [sp, #16]
   1df94:	mov	x20, x4
   1df98:	stp	x21, x22, [sp, #32]
   1df9c:	mov	x22, x3
   1dfa0:	stp	x23, x24, [sp, #48]
   1dfa4:	mov	x24, x0
   1dfa8:	mov	x23, x1
   1dfac:	mov	x0, x26
   1dfb0:	mov	x1, x2
   1dfb4:	stp	x27, x28, [sp, #80]
   1dfb8:	mov	x27, x2
   1dfbc:	bl	16248 <PyInit__decimal@@Base+0x52c0>
   1dfc0:	mov	x0, x25
   1dfc4:	mov	x1, x22
   1dfc8:	bl	16248 <PyInit__decimal@@Base+0x52c0>
   1dfcc:	str	xzr, [sp, #168]
   1dfd0:	ldrb	w0, [sp, #160]
   1dfd4:	cmp	x24, x27
   1dfd8:	str	xzr, [sp, #216]
   1dfdc:	ccmp	x24, x22, #0x4, ne  // ne = any
   1dfe0:	and	w0, w0, #0xfffffffe
   1dfe4:	strb	w0, [sp, #160]
   1dfe8:	ldrb	w0, [sp, #208]
   1dfec:	and	w0, w0, #0xfffffffe
   1dff0:	strb	w0, [sp, #208]
   1dff4:	b.ne	1e0b8 <PyInit__decimal@@Base+0xd130>  // b.any
   1dff8:	bl	15e0c <PyInit__decimal@@Base+0x4e84>
   1dffc:	mov	x19, x0
   1e000:	cbnz	x0, 1e0bc <PyInit__decimal@@Base+0xd134>
   1e004:	ldr	w0, [x20]
   1e008:	mov	x28, x23
   1e00c:	orr	w0, w0, #0x200
   1e010:	str	w0, [x20]
   1e014:	cmp	x19, #0x0
   1e018:	ccmp	x19, x24, #0x4, ne  // ne = any
   1e01c:	b.eq	1e054 <PyInit__decimal@@Base+0xd0cc>  // b.none
   1e020:	ldrb	w0, [x19]
   1e024:	tst	w0, #0xe0
   1e028:	b.ne	1e03c <PyInit__decimal@@Base+0xd0b4>  // b.any
   1e02c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1e030:	ldr	x1, [x0, #1720]
   1e034:	ldr	x0, [x19, #40]
   1e038:	blr	x1
   1e03c:	ldrb	w0, [x19]
   1e040:	tbnz	w0, #4, 1e054 <PyInit__decimal@@Base+0xd0cc>
   1e044:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1e048:	ldr	x1, [x0, #1720]
   1e04c:	mov	x0, x19
   1e050:	blr	x1
   1e054:	cmp	x28, #0x0
   1e058:	ccmp	x28, x23, #0x4, ne  // ne = any
   1e05c:	b.eq	1e094 <PyInit__decimal@@Base+0xd10c>  // b.none
   1e060:	ldrb	w0, [x28]
   1e064:	tst	w0, #0xe0
   1e068:	b.ne	1e07c <PyInit__decimal@@Base+0xd0f4>  // b.any
   1e06c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1e070:	ldr	x1, [x0, #1720]
   1e074:	ldr	x0, [x28, #40]
   1e078:	blr	x1
   1e07c:	ldrb	w0, [x28]
   1e080:	tbnz	w0, #4, 1e094 <PyInit__decimal@@Base+0xd10c>
   1e084:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1e088:	ldr	x1, [x0, #1720]
   1e08c:	mov	x0, x28
   1e090:	blr	x1
   1e094:	mov	x0, x24
   1e098:	mov	w2, #0x4                   	// #4
   1e09c:	mov	w1, #0x0                   	// #0
   1e0a0:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   1e0a4:	mov	x0, x23
   1e0a8:	mov	w2, #0x4                   	// #4
   1e0ac:	mov	w1, #0x0                   	// #0
   1e0b0:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   1e0b4:	b	1e3b4 <PyInit__decimal@@Base+0xd42c>
   1e0b8:	mov	x19, x24
   1e0bc:	cmp	x23, x27
   1e0c0:	ccmp	x23, x22, #0x4, ne  // ne = any
   1e0c4:	b.ne	1e0e4 <PyInit__decimal@@Base+0xd15c>  // b.any
   1e0c8:	bl	15e0c <PyInit__decimal@@Base+0x4e84>
   1e0cc:	mov	x28, x0
   1e0d0:	cbnz	x0, 1e0e8 <PyInit__decimal@@Base+0xd160>
   1e0d4:	ldr	w0, [x20]
   1e0d8:	orr	w0, w0, #0x200
   1e0dc:	str	w0, [x20]
   1e0e0:	b	1e014 <PyInit__decimal@@Base+0xd08c>
   1e0e4:	mov	x28, x23
   1e0e8:	add	x21, sp, #0x70
   1e0ec:	mov	x0, x21
   1e0f0:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1e0f4:	ldr	x2, [x27, #16]
   1e0f8:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   1e0fc:	ldr	x0, [x22, #16]
   1e100:	movk	x1, #0xb6b3, lsl #32
   1e104:	movk	x1, #0xde0, lsl #48
   1e108:	cmp	x2, x1
   1e10c:	sub	x0, x2, x0
   1e110:	add	x0, x0, #0x4
   1e114:	str	x0, [sp, #112]
   1e118:	b.gt	1e124 <PyInit__decimal@@Base+0xd19c>
   1e11c:	cmp	x0, x1
   1e120:	b.le	1e130 <PyInit__decimal@@Base+0xd1a8>
   1e124:	ldr	w0, [x20]
   1e128:	orr	w0, w0, #0x8
   1e12c:	b	1e0dc <PyInit__decimal@@Base+0xd154>
   1e130:	add	x22, x21, #0x1c
   1e134:	mov	x2, x21
   1e138:	mov	x3, x22
   1e13c:	mov	x1, x25
   1e140:	mov	x0, x28
   1e144:	bl	1c880 <PyInit__decimal@@Base+0xb8f8>
   1e148:	mov	x4, x22
   1e14c:	mov	x1, x26
   1e150:	mov	x3, x21
   1e154:	mov	x2, x28
   1e158:	mov	x0, x19
   1e15c:	bl	18d24 <PyInit__decimal@@Base+0x7d9c>
   1e160:	mov	x3, x22
   1e164:	mov	x2, x21
   1e168:	mov	x1, x19
   1e16c:	mov	x0, x19
   1e170:	bl	1df64 <PyInit__decimal@@Base+0xcfdc>
   1e174:	mov	w27, #0x4                   	// #4
   1e178:	ldr	x0, [sp, #176]
   1e17c:	mov	x4, x22
   1e180:	mov	x3, x21
   1e184:	mov	x2, x19
   1e188:	add	x0, x0, #0x3
   1e18c:	str	x0, [sp, #112]
   1e190:	mov	x0, #0x2                   	// #2
   1e194:	mov	x1, x25
   1e198:	movk	x0, #0xa764, lsl #16
   1e19c:	movk	x0, #0xb6b3, lsl #32
   1e1a0:	movk	x0, #0xde0, lsl #48
   1e1a4:	str	x0, [sp, #120]
   1e1a8:	mov	x0, #0xfffe                	// #65534
   1e1ac:	movk	x0, #0x589b, lsl #16
   1e1b0:	movk	x0, #0x494c, lsl #32
   1e1b4:	movk	x0, #0xf21f, lsl #48
   1e1b8:	str	x0, [sp, #128]
   1e1bc:	mov	x0, x28
   1e1c0:	bl	18d24 <PyInit__decimal@@Base+0x7d9c>
   1e1c4:	mov	x1, x26
   1e1c8:	mov	x0, x28
   1e1cc:	mov	x4, x22
   1e1d0:	mov	x3, x21
   1e1d4:	mov	x2, x28
   1e1d8:	adrp	x26, 42000 <PyInit__decimal@@Base+0x31078>
   1e1dc:	bl	1be6c <PyInit__decimal@@Base+0xaee4>
   1e1e0:	add	x26, x26, #0xc58
   1e1e4:	add	x0, x26, #0x30
   1e1e8:	str	x0, [sp, #96]
   1e1ec:	add	x0, x26, #0x60
   1e1f0:	str	x0, [sp, #104]
   1e1f4:	ldrb	w0, [x19]
   1e1f8:	tst	w0, #0xe
   1e1fc:	b.ne	1e20c <PyInit__decimal@@Base+0xd284>  // b.any
   1e200:	ldrb	w0, [x28]
   1e204:	tst	w0, #0xe
   1e208:	b.eq	1e224 <PyInit__decimal@@Base+0xd29c>  // b.none
   1e20c:	ldr	w0, [sp, #140]
   1e210:	mov	w1, #0x3be                 	// #958
   1e214:	and	w1, w0, w1
   1e218:	ldr	w0, [x20]
   1e21c:	orr	w0, w0, w1
   1e220:	b	1e0dc <PyInit__decimal@@Base+0xd154>
   1e224:	subs	w27, w27, #0x1
   1e228:	b.ne	1e278 <PyInit__decimal@@Base+0xd2f0>  // b.any
   1e22c:	adrp	x21, 42000 <PyInit__decimal@@Base+0x31078>
   1e230:	mov	w3, #0x1d0b                	// #7435
   1e234:	adrp	x2, 2b000 <PyInit__decimal@@Base+0x1a078>
   1e238:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   1e23c:	ldr	x21, [x21, #3904]
   1e240:	add	x2, x2, #0x958
   1e244:	add	x1, x1, #0xe12
   1e248:	ldr	x0, [x21]
   1e24c:	bl	6b10 <fprintf@plt>
   1e250:	ldr	x1, [x21]
   1e254:	adrp	x0, 2b000 <PyInit__decimal@@Base+0x1a078>
   1e258:	add	x0, x0, #0x994
   1e25c:	bl	6570 <fputs@plt>
   1e260:	ldr	x1, [x21]
   1e264:	mov	w0, #0xa                   	// #10
   1e268:	bl	6640 <fputc@plt>
   1e26c:	ldr	w0, [x20]
   1e270:	orr	w0, w0, #0x100
   1e274:	b	1e0dc <PyInit__decimal@@Base+0xd154>
   1e278:	ldr	x0, [sp, #96]
   1e27c:	mov	x1, x28
   1e280:	bl	16b04 <PyInit__decimal@@Base+0x5b7c>
   1e284:	cmp	w0, #0x1
   1e288:	b.ne	1e2c0 <PyInit__decimal@@Base+0xd338>  // b.any
   1e28c:	mov	x4, x22
   1e290:	mov	x3, x21
   1e294:	mov	x2, x25
   1e298:	mov	x1, x28
   1e29c:	mov	x0, x28
   1e2a0:	bl	1bd40 <PyInit__decimal@@Base+0xadb8>
   1e2a4:	ldr	x2, [sp, #104]
   1e2a8:	mov	x4, x22
   1e2ac:	mov	x3, x21
   1e2b0:	mov	x1, x19
   1e2b4:	mov	x0, x19
   1e2b8:	bl	1bd40 <PyInit__decimal@@Base+0xadb8>
   1e2bc:	b	1e1f4 <PyInit__decimal@@Base+0xd26c>
   1e2c0:	mov	x1, x25
   1e2c4:	mov	x0, x28
   1e2c8:	bl	16b04 <PyInit__decimal@@Base+0x5b7c>
   1e2cc:	cmn	w0, #0x1
   1e2d0:	b.eq	1e2fc <PyInit__decimal@@Base+0xd374>  // b.none
   1e2d4:	mov	x4, x22
   1e2d8:	mov	x3, x21
   1e2dc:	mov	x2, x25
   1e2e0:	mov	x1, x28
   1e2e4:	mov	x0, x28
   1e2e8:	bl	1be6c <PyInit__decimal@@Base+0xaee4>
   1e2ec:	mov	x4, x22
   1e2f0:	mov	x3, x21
   1e2f4:	mov	x2, x26
   1e2f8:	b	1e2b0 <PyInit__decimal@@Base+0xd328>
   1e2fc:	cmp	x19, x24
   1e300:	b.eq	1e34c <PyInit__decimal@@Base+0xd3c4>  // b.none
   1e304:	mov	x2, x20
   1e308:	mov	x1, x19
   1e30c:	mov	x0, x24
   1e310:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1e314:	cbz	w0, 1e014 <PyInit__decimal@@Base+0xd08c>
   1e318:	ldrb	w0, [x19]
   1e31c:	tst	w0, #0xe0
   1e320:	b.ne	1e334 <PyInit__decimal@@Base+0xd3ac>  // b.any
   1e324:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1e328:	ldr	x1, [x0, #1720]
   1e32c:	ldr	x0, [x19, #40]
   1e330:	blr	x1
   1e334:	ldrb	w0, [x19]
   1e338:	tbnz	w0, #4, 1e34c <PyInit__decimal@@Base+0xd3c4>
   1e33c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1e340:	ldr	x1, [x0, #1720]
   1e344:	mov	x0, x19
   1e348:	blr	x1
   1e34c:	cmp	x28, x23
   1e350:	b.eq	1e39c <PyInit__decimal@@Base+0xd414>  // b.none
   1e354:	mov	x2, x20
   1e358:	mov	x1, x28
   1e35c:	mov	x0, x23
   1e360:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1e364:	cbz	w0, 1e014 <PyInit__decimal@@Base+0xd08c>
   1e368:	ldrb	w0, [x28]
   1e36c:	tst	w0, #0xe0
   1e370:	b.ne	1e384 <PyInit__decimal@@Base+0xd3fc>  // b.any
   1e374:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1e378:	ldr	x1, [x0, #1720]
   1e37c:	ldr	x0, [x28, #40]
   1e380:	blr	x1
   1e384:	ldrb	w0, [x28]
   1e388:	tbnz	w0, #4, 1e39c <PyInit__decimal@@Base+0xd414>
   1e38c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1e390:	ldr	x1, [x0, #1720]
   1e394:	mov	x0, x28
   1e398:	blr	x1
   1e39c:	ldr	w0, [sp, #140]
   1e3a0:	mov	w1, #0x3be                 	// #958
   1e3a4:	and	w1, w0, w1
   1e3a8:	ldr	w0, [x20]
   1e3ac:	orr	w0, w0, w1
   1e3b0:	str	w0, [x20]
   1e3b4:	ldp	x19, x20, [sp, #16]
   1e3b8:	ldp	x21, x22, [sp, #32]
   1e3bc:	ldp	x23, x24, [sp, #48]
   1e3c0:	ldp	x25, x26, [sp, #64]
   1e3c4:	ldp	x27, x28, [sp, #80]
   1e3c8:	ldp	x29, x30, [sp], #256
   1e3cc:	ret
   1e3d0:	sub	sp, sp, #0x4d0
   1e3d4:	stp	x29, x30, [sp]
   1e3d8:	mov	x29, sp
   1e3dc:	stp	x19, x20, [sp, #16]
   1e3e0:	mov	x19, x1
   1e3e4:	mov	x20, x5
   1e3e8:	stp	x21, x22, [sp, #32]
   1e3ec:	mov	x21, x2
   1e3f0:	stp	x23, x24, [sp, #48]
   1e3f4:	stp	x25, x26, [sp, #64]
   1e3f8:	mov	x25, x4
   1e3fc:	stp	x27, x28, [sp, #80]
   1e400:	mov	x28, x3
   1e404:	str	w0, [sp, #108]
   1e408:	mov	w0, #0x30                  	// #48
   1e40c:	ldrb	w22, [x2]
   1e410:	ldrb	w27, [x3]
   1e414:	strb	w0, [sp, #112]
   1e418:	mov	x0, #0x40                  	// #64
   1e41c:	stp	xzr, xzr, [sp, #120]
   1e420:	str	xzr, [sp, #136]
   1e424:	str	x0, [sp, #144]
   1e428:	add	x0, sp, #0xd0
   1e42c:	str	x0, [sp, #152]
   1e430:	orr	w0, w22, w27
   1e434:	tst	w0, #0xe
   1e438:	b.eq	1e4e4 <PyInit__decimal@@Base+0xd55c>  // b.none
   1e43c:	mov	x4, x5
   1e440:	mov	x3, x25
   1e444:	mov	x2, x28
   1e448:	mov	x1, x21
   1e44c:	mov	x0, x19
   1e450:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   1e454:	cbnz	w0, 1e490 <PyInit__decimal@@Base+0xd508>
   1e458:	ldrb	w1, [x21]
   1e45c:	ldrb	w2, [x28]
   1e460:	tbz	w1, #1, 1e4b0 <PyInit__decimal@@Base+0xd528>
   1e464:	tbz	w2, #1, 1e47c <PyInit__decimal@@Base+0xd4f4>
   1e468:	mov	x2, x20
   1e46c:	mov	w1, #0x100                 	// #256
   1e470:	mov	x0, x19
   1e474:	bl	18904 <PyInit__decimal@@Base+0x797c>
   1e478:	b	1e490 <PyInit__decimal@@Base+0xd508>
   1e47c:	eor	w1, w1, w2
   1e480:	mov	x0, x19
   1e484:	and	w1, w1, #0x1
   1e488:	mov	w2, #0x2                   	// #2
   1e48c:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   1e490:	ldp	x29, x30, [sp]
   1e494:	ldp	x19, x20, [sp, #16]
   1e498:	ldp	x21, x22, [sp, #32]
   1e49c:	ldp	x23, x24, [sp, #48]
   1e4a0:	ldp	x25, x26, [sp, #64]
   1e4a4:	ldp	x27, x28, [sp, #80]
   1e4a8:	add	sp, sp, #0x4d0
   1e4ac:	ret
   1e4b0:	ldr	x0, [x25, #16]
   1e4b4:	eor	w1, w1, w2
   1e4b8:	ldr	x3, [x25]
   1e4bc:	add	x0, x0, #0x1
   1e4c0:	and	w1, w1, #0x1
   1e4c4:	mov	x2, #0x0                   	// #0
   1e4c8:	sub	x3, x0, x3
   1e4cc:	mov	x0, x19
   1e4d0:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   1e4d4:	ldr	w0, [x20]
   1e4d8:	orr	w0, w0, #0x1
   1e4dc:	str	w0, [x20]
   1e4e0:	b	1e490 <PyInit__decimal@@Base+0xd508>
   1e4e4:	ldr	x0, [x2, #24]
   1e4e8:	ldr	x1, [x2, #40]
   1e4ec:	ldr	x2, [x3, #40]
   1e4f0:	add	x0, x1, x0, lsl #3
   1e4f4:	ldur	x1, [x0, #-8]
   1e4f8:	ldr	x0, [x3, #24]
   1e4fc:	add	x0, x2, x0, lsl #3
   1e500:	ldur	x0, [x0, #-8]
   1e504:	cbnz	x0, 1e538 <PyInit__decimal@@Base+0xd5b0>
   1e508:	cbnz	x1, 1e518 <PyInit__decimal@@Base+0xd590>
   1e50c:	mov	x2, x5
   1e510:	mov	w1, #0x10                  	// #16
   1e514:	b	1e470 <PyInit__decimal@@Base+0xd4e8>
   1e518:	eor	w1, w22, w27
   1e51c:	mov	x0, x19
   1e520:	and	w1, w1, #0x1
   1e524:	mov	w2, #0x2                   	// #2
   1e528:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   1e52c:	ldr	w0, [x20]
   1e530:	orr	w0, w0, #0x4
   1e534:	b	1e4dc <PyInit__decimal@@Base+0xd554>
   1e538:	ldr	x26, [x21, #8]
   1e53c:	ldr	x0, [x3, #8]
   1e540:	sub	x26, x26, x0
   1e544:	cbnz	x1, 1e574 <PyInit__decimal@@Base+0xd5ec>
   1e548:	eor	w1, w22, w27
   1e54c:	mov	x3, x26
   1e550:	and	w1, w1, #0x1
   1e554:	mov	x0, x19
   1e558:	mov	x2, #0x0                   	// #0
   1e55c:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   1e560:	mov	x2, x20
   1e564:	mov	x1, x25
   1e568:	mov	x0, x19
   1e56c:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   1e570:	b	1e490 <PyInit__decimal@@Base+0xd508>
   1e574:	ldr	x0, [x4]
   1e578:	ldr	x2, [x3, #16]
   1e57c:	add	x2, x2, x0
   1e580:	ldr	x0, [x21, #16]
   1e584:	sub	x2, x2, x0
   1e588:	add	x23, x2, #0x1
   1e58c:	cmp	x23, #0x0
   1e590:	b.le	1e5f8 <PyInit__decimal@@Base+0xd670>
   1e594:	add	x24, sp, #0x70
   1e598:	mov	x3, x5
   1e59c:	mov	x2, x23
   1e5a0:	mov	x1, x21
   1e5a4:	mov	x0, x24
   1e5a8:	bl	19718 <PyInit__decimal@@Base+0x8790>
   1e5ac:	cbnz	w0, 1e750 <PyInit__decimal@@Base+0xd7c8>
   1e5b0:	mov	x2, x20
   1e5b4:	mov	x0, x19
   1e5b8:	mov	w1, #0x200                 	// #512
   1e5bc:	bl	18904 <PyInit__decimal@@Base+0x797c>
   1e5c0:	ldrb	w0, [sp, #112]
   1e5c4:	tst	w0, #0xe0
   1e5c8:	b.ne	1e5dc <PyInit__decimal@@Base+0xd654>  // b.any
   1e5cc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1e5d0:	ldr	x1, [x0, #1720]
   1e5d4:	ldr	x0, [sp, #152]
   1e5d8:	blr	x1
   1e5dc:	ldrb	w0, [sp, #112]
   1e5e0:	tbnz	w0, #4, 1e560 <PyInit__decimal@@Base+0xd5d8>
   1e5e4:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1e5e8:	ldr	x1, [x0, #1720]
   1e5ec:	add	x0, sp, #0x70
   1e5f0:	blr	x1
   1e5f4:	b	1e560 <PyInit__decimal@@Base+0xd5d8>
   1e5f8:	b.eq	1e61c <PyInit__decimal@@Base+0xd694>  // b.none
   1e5fc:	add	x24, sp, #0x70
   1e600:	mov	x3, x5
   1e604:	mvn	x2, x2
   1e608:	mov	x1, x28
   1e60c:	mov	x0, x24
   1e610:	bl	19718 <PyInit__decimal@@Base+0x8790>
   1e614:	cbz	w0, 1e5b0 <PyInit__decimal@@Base+0xd628>
   1e618:	mov	x28, x24
   1e61c:	ldr	x24, [x21, #24]
   1e620:	cmp	x28, x19
   1e624:	ldr	x0, [x28, #24]
   1e628:	add	x24, x24, #0x1
   1e62c:	ccmp	x21, x19, #0x4, ne  // ne = any
   1e630:	sub	x24, x24, x0
   1e634:	b.ne	1e648 <PyInit__decimal@@Base+0xd6c0>  // b.any
   1e638:	cmp	x28, x19
   1e63c:	b.ne	1e684 <PyInit__decimal@@Base+0xd6fc>  // b.any
   1e640:	cmp	x0, x24
   1e644:	b.ge	1e684 <PyInit__decimal@@Base+0xd6fc>  // b.tcont
   1e648:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1e64c:	ldr	x1, [x0, #1688]
   1e650:	ldr	x0, [x19, #32]
   1e654:	cmp	x1, x24
   1e658:	csel	x1, x1, x24, ge  // ge = tcont
   1e65c:	cmp	x1, x0
   1e660:	b.eq	1e684 <PyInit__decimal@@Base+0xd6fc>  // b.none
   1e664:	ldrb	w2, [x19]
   1e668:	tbz	w2, #5, 1e758 <PyInit__decimal@@Base+0xd7d0>
   1e66c:	cmp	x1, x0
   1e670:	b.le	1e684 <PyInit__decimal@@Base+0xd6fc>
   1e674:	mov	x2, x20
   1e678:	mov	x0, x19
   1e67c:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   1e680:	cbz	w0, 1e5b0 <PyInit__decimal@@Base+0xd628>
   1e684:	ldr	x5, [x28, #24]
   1e688:	cmp	x5, #0x1
   1e68c:	b.ne	1e768 <PyInit__decimal@@Base+0xd7e0>  // b.any
   1e690:	ldr	x0, [x28, #40]
   1e694:	ldr	x2, [x21, #24]
   1e698:	ldr	x3, [x0]
   1e69c:	ldr	x1, [x21, #40]
   1e6a0:	ldr	x0, [x19, #40]
   1e6a4:	bl	11f90 <PyInit__decimal@@Base+0x1008>
   1e6a8:	mov	x21, x0
   1e6ac:	ldr	x0, [x19, #40]
   1e6b0:	mov	x1, x24
   1e6b4:	bl	161c8 <PyInit__decimal@@Base+0x5240>
   1e6b8:	mov	x24, x0
   1e6bc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1e6c0:	ldr	x1, [x0, #1688]
   1e6c4:	ldr	x0, [x19, #32]
   1e6c8:	cmp	x1, x24
   1e6cc:	csel	x1, x1, x24, ge  // ge = tcont
   1e6d0:	cmp	x1, x0
   1e6d4:	b.eq	1e6f4 <PyInit__decimal@@Base+0xd76c>  // b.none
   1e6d8:	ldrb	w2, [x19]
   1e6dc:	tbz	w2, #5, 1e878 <PyInit__decimal@@Base+0xd8f0>
   1e6e0:	cmp	x1, x0
   1e6e4:	b.le	1e6f4 <PyInit__decimal@@Base+0xd76c>
   1e6e8:	mov	x2, x20
   1e6ec:	mov	x0, x19
   1e6f0:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   1e6f4:	eor	w22, w22, w27
   1e6f8:	ldrb	w27, [x19]
   1e6fc:	and	w22, w22, #0x1
   1e700:	str	x24, [x19, #24]
   1e704:	and	w27, w27, #0xfffffff0
   1e708:	sub	x26, x26, x23
   1e70c:	orr	w22, w22, w27
   1e710:	strb	w22, [x19]
   1e714:	mov	x0, x19
   1e718:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   1e71c:	cbz	x21, 1e888 <PyInit__decimal@@Base+0xd900>
   1e720:	ldr	x2, [x19, #40]
   1e724:	mov	x3, #0xa                   	// #10
   1e728:	ldr	x0, [x2]
   1e72c:	udiv	x1, x0, x3
   1e730:	msub	x1, x1, x3, x0
   1e734:	cmp	x1, #0x0
   1e738:	ccmp	x1, #0x5, #0x4, ne  // ne = any
   1e73c:	b.ne	1e748 <PyInit__decimal@@Base+0xd7c0>  // b.any
   1e740:	add	x0, x0, #0x1
   1e744:	str	x0, [x2]
   1e748:	str	x26, [x19, #8]
   1e74c:	b	1e5c0 <PyInit__decimal@@Base+0xd638>
   1e750:	mov	x21, x24
   1e754:	b	1e61c <PyInit__decimal@@Base+0xd694>
   1e758:	mov	x2, x20
   1e75c:	mov	x0, x19
   1e760:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   1e764:	b	1e680 <PyInit__decimal@@Base+0xd6f8>
   1e768:	cmp	x5, #0x400
   1e76c:	b.gt	1e794 <PyInit__decimal@@Base+0xd80c>
   1e770:	ldr	x4, [x21, #24]
   1e774:	mov	x1, #0x0                   	// #0
   1e778:	ldr	x0, [x19, #40]
   1e77c:	ldr	x2, [x21, #40]
   1e780:	ldr	x3, [x28, #40]
   1e784:	bl	12024 <PyInit__decimal@@Base+0x109c>
   1e788:	tbnz	w0, #31, 1e5b0 <PyInit__decimal@@Base+0xd628>
   1e78c:	sxtw	x21, w0
   1e790:	b	1e6ac <PyInit__decimal@@Base+0xd724>
   1e794:	mov	w0, #0x30                  	// #48
   1e798:	strb	w0, [sp, #160]
   1e79c:	mov	x0, #0x40                  	// #64
   1e7a0:	add	x24, sp, #0xa0
   1e7a4:	stp	xzr, x0, [sp, #184]
   1e7a8:	add	x0, sp, #0x2d0
   1e7ac:	mov	x4, x20
   1e7b0:	mov	x3, x28
   1e7b4:	mov	x2, x21
   1e7b8:	mov	x1, x24
   1e7bc:	stp	xzr, xzr, [sp, #168]
   1e7c0:	str	x0, [sp, #200]
   1e7c4:	mov	x0, x19
   1e7c8:	bl	1df7c <PyInit__decimal@@Base+0xcff4>
   1e7cc:	ldrb	w0, [x19]
   1e7d0:	tst	w0, #0xe
   1e7d4:	b.ne	1e7e4 <PyInit__decimal@@Base+0xd85c>  // b.any
   1e7d8:	ldrb	w2, [sp, #160]
   1e7dc:	tst	w2, #0xe
   1e7e0:	b.eq	1e82c <PyInit__decimal@@Base+0xd8a4>  // b.none
   1e7e4:	mov	x0, x19
   1e7e8:	mov	w2, #0x4                   	// #4
   1e7ec:	mov	w1, #0x0                   	// #0
   1e7f0:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   1e7f4:	ldrb	w0, [sp, #160]
   1e7f8:	tst	w0, #0xe0
   1e7fc:	b.ne	1e810 <PyInit__decimal@@Base+0xd888>  // b.any
   1e800:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1e804:	ldr	x1, [x0, #1720]
   1e808:	ldr	x0, [sp, #200]
   1e80c:	blr	x1
   1e810:	ldrb	w0, [sp, #160]
   1e814:	tbnz	w0, #4, 1e5c0 <PyInit__decimal@@Base+0xd638>
   1e818:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1e81c:	ldr	x1, [x0, #1720]
   1e820:	mov	x0, x24
   1e824:	blr	x1
   1e828:	b	1e5c0 <PyInit__decimal@@Base+0xd638>
   1e82c:	ldr	x1, [sp, #184]
   1e830:	ldr	x0, [sp, #200]
   1e834:	add	x1, x0, x1, lsl #3
   1e838:	ldur	x1, [x1, #-8]
   1e83c:	cmp	x1, #0x0
   1e840:	cset	x21, ne  // ne = any
   1e844:	tst	w2, #0xe0
   1e848:	b.ne	1e858 <PyInit__decimal@@Base+0xd8d0>  // b.any
   1e84c:	adrp	x1, 45000 <PyInit__decimal@@Base+0x34078>
   1e850:	ldr	x1, [x1, #1720]
   1e854:	blr	x1
   1e858:	ldrb	w0, [sp, #160]
   1e85c:	tbnz	w0, #4, 1e870 <PyInit__decimal@@Base+0xd8e8>
   1e860:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1e864:	ldr	x1, [x0, #1720]
   1e868:	mov	x0, x24
   1e86c:	blr	x1
   1e870:	ldr	x24, [x19, #24]
   1e874:	b	1e6ac <PyInit__decimal@@Base+0xd724>
   1e878:	mov	x2, x20
   1e87c:	mov	x0, x19
   1e880:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   1e884:	b	1e6f4 <PyInit__decimal@@Base+0xd76c>
   1e888:	cmp	x23, #0x0
   1e88c:	ldr	w1, [sp, #108]
   1e890:	cset	w0, gt
   1e894:	tst	w1, w0
   1e898:	b.eq	1e748 <PyInit__decimal@@Base+0xd7c0>  // b.none
   1e89c:	mov	x0, x19
   1e8a0:	bl	185e8 <PyInit__decimal@@Base+0x7660>
   1e8a4:	cmp	x23, x0
   1e8a8:	csel	x23, x23, x0, le
   1e8ac:	mov	x0, x19
   1e8b0:	mov	x1, x23
   1e8b4:	add	x26, x26, x23
   1e8b8:	bl	19c58 <PyInit__decimal@@Base+0x8cd0>
   1e8bc:	b	1e748 <PyInit__decimal@@Base+0xd7c0>
   1e8c0:	mov	x5, x4
   1e8c4:	mov	x4, x3
   1e8c8:	mov	x3, x2
   1e8cc:	mov	x2, x1
   1e8d0:	mov	x1, x0
   1e8d4:	mov	w0, #0x1                   	// #1
   1e8d8:	b	1e3d0 <PyInit__decimal@@Base+0xd448>
   1e8dc:	sub	sp, sp, #0x2b0
   1e8e0:	stp	x29, x30, [sp]
   1e8e4:	mov	x29, sp
   1e8e8:	stp	x21, x22, [sp, #32]
   1e8ec:	mov	x21, x0
   1e8f0:	mov	w0, #0x30                  	// #48
   1e8f4:	strb	w0, [sp, #128]
   1e8f8:	mov	x0, #0x40                  	// #64
   1e8fc:	str	x25, [sp, #64]
   1e900:	add	x25, sp, #0x50
   1e904:	stp	xzr, x0, [sp, #152]
   1e908:	add	x0, sp, #0xb0
   1e90c:	mov	x22, x1
   1e910:	stp	x19, x20, [sp, #16]
   1e914:	mov	x19, x4
   1e918:	add	x20, sp, #0x80
   1e91c:	stp	x23, x24, [sp, #48]
   1e920:	mov	x24, x2
   1e924:	mov	x23, x3
   1e928:	stp	xzr, xzr, [sp, #136]
   1e92c:	str	x0, [sp, #168]
   1e930:	mov	x0, x25
   1e934:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1e938:	mov	x3, x19
   1e93c:	mov	x2, x25
   1e940:	mov	x1, x24
   1e944:	mov	x0, x20
   1e948:	bl	1a0d8 <PyInit__decimal@@Base+0x9150>
   1e94c:	mov	x0, x21
   1e950:	mov	x4, x19
   1e954:	mov	x3, x23
   1e958:	mov	x2, x20
   1e95c:	mov	x1, x22
   1e960:	bl	1e8c0 <PyInit__decimal@@Base+0xd938>
   1e964:	ldrb	w0, [sp, #128]
   1e968:	tst	w0, #0xe0
   1e96c:	b.ne	1e980 <PyInit__decimal@@Base+0xd9f8>  // b.any
   1e970:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1e974:	ldr	x1, [x0, #1720]
   1e978:	ldr	x0, [sp, #168]
   1e97c:	blr	x1
   1e980:	ldrb	w0, [sp, #128]
   1e984:	tbnz	w0, #4, 1e998 <PyInit__decimal@@Base+0xda10>
   1e988:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1e98c:	ldr	x1, [x0, #1720]
   1e990:	mov	x0, x20
   1e994:	blr	x1
   1e998:	ldp	x29, x30, [sp]
   1e99c:	ldp	x19, x20, [sp, #16]
   1e9a0:	ldp	x21, x22, [sp, #32]
   1e9a4:	ldp	x23, x24, [sp, #48]
   1e9a8:	ldr	x25, [sp, #64]
   1e9ac:	add	sp, sp, #0x2b0
   1e9b0:	ret
   1e9b4:	sxtw	x2, w2
   1e9b8:	b	1e8dc <PyInit__decimal@@Base+0xd954>
   1e9bc:	b	1e8dc <PyInit__decimal@@Base+0xd954>
   1e9c0:	sub	sp, sp, #0x2b0
   1e9c4:	stp	x29, x30, [sp]
   1e9c8:	mov	x29, sp
   1e9cc:	stp	x21, x22, [sp, #32]
   1e9d0:	mov	x21, x0
   1e9d4:	mov	w0, #0x30                  	// #48
   1e9d8:	strb	w0, [sp, #128]
   1e9dc:	mov	x0, #0x40                  	// #64
   1e9e0:	str	x25, [sp, #64]
   1e9e4:	add	x25, sp, #0x50
   1e9e8:	stp	xzr, x0, [sp, #152]
   1e9ec:	add	x0, sp, #0xb0
   1e9f0:	mov	x22, x1
   1e9f4:	stp	x19, x20, [sp, #16]
   1e9f8:	mov	x19, x4
   1e9fc:	add	x20, sp, #0x80
   1ea00:	stp	x23, x24, [sp, #48]
   1ea04:	mov	x24, x2
   1ea08:	mov	x23, x3
   1ea0c:	stp	xzr, xzr, [sp, #136]
   1ea10:	str	x0, [sp, #168]
   1ea14:	mov	x0, x25
   1ea18:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1ea1c:	mov	x3, x19
   1ea20:	mov	x2, x25
   1ea24:	mov	x1, x24
   1ea28:	mov	x0, x20
   1ea2c:	bl	1a1d0 <PyInit__decimal@@Base+0x9248>
   1ea30:	mov	x0, x21
   1ea34:	mov	x4, x19
   1ea38:	mov	x3, x23
   1ea3c:	mov	x2, x20
   1ea40:	mov	x1, x22
   1ea44:	bl	1e8c0 <PyInit__decimal@@Base+0xd938>
   1ea48:	ldrb	w0, [sp, #128]
   1ea4c:	tst	w0, #0xe0
   1ea50:	b.ne	1ea64 <PyInit__decimal@@Base+0xdadc>  // b.any
   1ea54:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1ea58:	ldr	x1, [x0, #1720]
   1ea5c:	ldr	x0, [sp, #168]
   1ea60:	blr	x1
   1ea64:	ldrb	w0, [sp, #128]
   1ea68:	tbnz	w0, #4, 1ea7c <PyInit__decimal@@Base+0xdaf4>
   1ea6c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1ea70:	ldr	x1, [x0, #1720]
   1ea74:	mov	x0, x20
   1ea78:	blr	x1
   1ea7c:	ldp	x29, x30, [sp]
   1ea80:	ldp	x19, x20, [sp, #16]
   1ea84:	ldp	x21, x22, [sp, #32]
   1ea88:	ldp	x23, x24, [sp, #48]
   1ea8c:	ldr	x25, [sp, #64]
   1ea90:	add	sp, sp, #0x2b0
   1ea94:	ret
   1ea98:	mov	w2, w2
   1ea9c:	b	1e9c0 <PyInit__decimal@@Base+0xda38>
   1eaa0:	b	1e9c0 <PyInit__decimal@@Base+0xda38>
   1eaa4:	sub	sp, sp, #0x570
   1eaa8:	mov	x14, #0x1                   	// #1
   1eaac:	mov	w6, #0xffffff90            	// #-112
   1eab0:	stp	x29, x30, [sp]
   1eab4:	mov	x29, sp
   1eab8:	stp	x21, x22, [sp, #32]
   1eabc:	mov	x22, x1
   1eac0:	mov	x1, #0x40                  	// #64
   1eac4:	stp	x19, x20, [sp, #16]
   1eac8:	mov	x20, x3
   1eacc:	add	x3, sp, #0x170
   1ead0:	stp	x25, x26, [sp, #64]
   1ead4:	mov	x25, x2
   1ead8:	mov	w2, #0x30                  	// #48
   1eadc:	stp	xzr, x1, [sp, #152]
   1eae0:	stp	xzr, x1, [sp, #200]
   1eae4:	add	x1, sp, #0x370
   1eae8:	stp	x23, x24, [sp, #48]
   1eaec:	stp	x27, x28, [sp, #80]
   1eaf0:	str	x14, [sp, #112]
   1eaf4:	strb	w2, [sp, #128]
   1eaf8:	stp	xzr, xzr, [sp, #136]
   1eafc:	str	x3, [sp, #168]
   1eb00:	strb	w2, [sp, #176]
   1eb04:	stp	xzr, xzr, [sp, #184]
   1eb08:	str	x1, [sp, #216]
   1eb0c:	add	x1, sp, #0x70
   1eb10:	strb	w6, [sp, #224]
   1eb14:	stp	xzr, x14, [sp, #232]
   1eb18:	stp	x14, x14, [sp, #248]
   1eb1c:	str	x1, [sp, #264]
   1eb20:	ldr	x2, [x22, #40]
   1eb24:	ldr	x3, [x22, #24]
   1eb28:	add	x1, x2, x3, lsl #3
   1eb2c:	ldur	x1, [x1, #-8]
   1eb30:	cbnz	x1, 1eb60 <PyInit__decimal@@Base+0xdbd8>
   1eb34:	mov	x2, x14
   1eb38:	mov	x3, #0x0                   	// #0
   1eb3c:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   1eb40:	ldp	x29, x30, [sp]
   1eb44:	ldp	x19, x20, [sp, #16]
   1eb48:	ldp	x21, x22, [sp, #32]
   1eb4c:	ldp	x23, x24, [sp, #48]
   1eb50:	ldp	x25, x26, [sp, #64]
   1eb54:	ldp	x27, x28, [sp, #80]
   1eb58:	add	sp, sp, #0x570
   1eb5c:	ret
   1eb60:	ldp	x5, x4, [x22, #8]
   1eb64:	ldrb	w1, [x22]
   1eb68:	add	x21, x4, x5
   1eb6c:	cmp	x21, #0x13
   1eb70:	b.le	1ebc0 <PyInit__decimal@@Base+0xdc38>
   1eb74:	tbnz	w1, #0, 1eb98 <PyInit__decimal@@Base+0xdc10>
   1eb78:	mov	w1, #0x0                   	// #0
   1eb7c:	mov	w2, #0x2                   	// #2
   1eb80:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   1eb84:	ldr	w0, [x20]
   1eb88:	mov	w1, #0x1840                	// #6208
   1eb8c:	orr	w0, w0, w1
   1eb90:	str	w0, [x20]
   1eb94:	b	1eb40 <PyInit__decimal@@Base+0xdbb8>
   1eb98:	ldr	x1, [x25, #16]
   1eb9c:	mov	x2, #0x0                   	// #0
   1eba0:	ldr	x3, [x25]
   1eba4:	add	x1, x1, #0x1
   1eba8:	sub	x3, x1, x3
   1ebac:	mov	w1, #0x0                   	// #0
   1ebb0:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   1ebb4:	ldr	w0, [x20]
   1ebb8:	mov	w1, #0x7041                	// #28737
   1ebbc:	b	1eb8c <PyInit__decimal@@Base+0xdc04>
   1ebc0:	mov	x24, x0
   1ebc4:	and	w1, w1, #0xe
   1ebc8:	ldr	x0, [x25]
   1ebcc:	add	x23, sp, #0x140
   1ebd0:	mov	x19, #0x9                   	// #9
   1ebd4:	str	x19, [sp, #120]
   1ebd8:	mvn	x0, x0
   1ebdc:	stp	x0, x14, [sp, #280]
   1ebe0:	add	x0, sp, #0x78
   1ebe4:	str	x0, [sp, #312]
   1ebe8:	ldr	x0, [x22, #32]
   1ebec:	str	x0, [sp, #352]
   1ebf0:	mov	w0, #0x50                  	// #80
   1ebf4:	orr	w1, w1, w0
   1ebf8:	mov	x0, x23
   1ebfc:	strb	w6, [sp, #272]
   1ec00:	stp	x14, x14, [sp, #296]
   1ec04:	strb	w1, [sp, #320]
   1ec08:	add	x1, sp, #0x110
   1ec0c:	stp	x5, x4, [sp, #328]
   1ec10:	str	x3, [sp, #344]
   1ec14:	str	x2, [sp, #360]
   1ec18:	bl	16b04 <PyInit__decimal@@Base+0x5b7c>
   1ec1c:	cmp	w0, #0x0
   1ec20:	b.le	1ed30 <PyInit__decimal@@Base+0xdda8>
   1ec24:	cmp	x21, #0x0
   1ec28:	mov	x0, x23
   1ec2c:	csel	x21, x21, xzr, ge  // ge = tcont
   1ec30:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1ec34:	ldr	x0, [x25]
   1ec38:	mov	x1, #0xa                   	// #10
   1ec3c:	mov	x2, x20
   1ec40:	add	x0, x0, #0x2
   1ec44:	add	x0, x0, x21
   1ec48:	cmp	x0, #0xa
   1ec4c:	csel	x0, x0, x1, ge  // ge = tcont
   1ec50:	str	x0, [sp, #320]
   1ec54:	mov	w0, #0x6                   	// #6
   1ec58:	mov	x1, x22
   1ec5c:	str	w0, [sp, #356]
   1ec60:	mov	x0, x24
   1ec64:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1ec68:	cbz	w0, 1eb40 <PyInit__decimal@@Base+0xdbb8>
   1ec6c:	ldr	x3, [x24, #8]
   1ec70:	mov	x0, #0x10000000000000      	// #4503599627370496
   1ec74:	ldr	x2, [sp, #320]
   1ec78:	sub	x3, x3, x21
   1ec7c:	str	x3, [x24, #8]
   1ec80:	cmp	x2, x0
   1ec84:	b.gt	1ed1c <PyInit__decimal@@Base+0xdd94>
   1ec88:	adrp	x22, 2a000 <PyInit__decimal@@Base+0x19078>
   1ec8c:	add	x0, x22, #0xae8
   1ec90:	str	x22, [sp, #104]
   1ec94:	ldr	x1, [x0, #72]
   1ec98:	cmp	x2, x1
   1ec9c:	b.cs	1eda4 <PyInit__decimal@@Base+0xde1c>  // b.hs, b.nlast
   1eca0:	ldr	x1, [x0, #32]
   1eca4:	cmp	x2, x1
   1eca8:	b.cs	1ed64 <PyInit__decimal@@Base+0xdddc>  // b.hs, b.nlast
   1ecac:	ldr	x1, [x0, #16]
   1ecb0:	cmp	x2, x1
   1ecb4:	b.cs	1ed50 <PyInit__decimal@@Base+0xddc8>  // b.hs, b.nlast
   1ecb8:	ldr	x0, [x0, #8]
   1ecbc:	cmp	x2, x0
   1ecc0:	cset	w1, cs  // cs = hs, nlast
   1ecc4:	add	w1, w1, #0x1
   1ecc8:	adrp	x0, 2b000 <PyInit__decimal@@Base+0x1a078>
   1eccc:	scvtf	d0, x2
   1ecd0:	sub	w1, w1, #0x1
   1ecd4:	mov	x19, #0x3                   	// #3
   1ecd8:	ldr	d1, [x0, #2520]
   1ecdc:	adrp	x0, 2b000 <PyInit__decimal@@Base+0x1a078>
   1ece0:	sxtw	x1, w1
   1ece4:	fmul	d0, d0, d1
   1ece8:	ldr	d1, [x0, #2528]
   1ecec:	ldr	x0, [x24, #16]
   1ecf0:	add	x3, x3, x0
   1ecf4:	fsub	d1, d0, d1
   1ecf8:	sub	x1, x1, x3
   1ecfc:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   1ed00:	scvtf	d0, x1
   1ed04:	fdiv	d0, d1, d0
   1ed08:	fcvtps	x1, d0
   1ed0c:	cmp	x1, #0x3
   1ed10:	csel	x19, x1, x19, ge  // ge = tcont
   1ed14:	cmp	x1, x0
   1ed18:	b.ne	1ee54 <PyInit__decimal@@Base+0xdecc>  // b.any
   1ed1c:	mov	x2, x20
   1ed20:	mov	x0, x24
   1ed24:	mov	w1, #0x100                 	// #256
   1ed28:	bl	18904 <PyInit__decimal@@Base+0x797c>
   1ed2c:	b	1eb40 <PyInit__decimal@@Base+0xdbb8>
   1ed30:	mov	x0, x24
   1ed34:	mov	x2, x14
   1ed38:	mov	x3, #0x0                   	// #0
   1ed3c:	mov	w1, #0x0                   	// #0
   1ed40:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   1ed44:	ldr	w0, [x20]
   1ed48:	mov	w1, #0x1040                	// #4160
   1ed4c:	b	1eb8c <PyInit__decimal@@Base+0xdc04>
   1ed50:	ldr	x0, [x0, #24]
   1ed54:	cmp	x2, x0
   1ed58:	cset	w1, cs  // cs = hs, nlast
   1ed5c:	add	w1, w1, #0x3
   1ed60:	b	1ecc8 <PyInit__decimal@@Base+0xdd40>
   1ed64:	ldr	x1, [x0, #48]
   1ed68:	cmp	x2, x1
   1ed6c:	b.cs	1ed84 <PyInit__decimal@@Base+0xddfc>  // b.hs, b.nlast
   1ed70:	ldr	x0, [x0, #40]
   1ed74:	cmp	x2, x0
   1ed78:	cset	w1, cs  // cs = hs, nlast
   1ed7c:	add	w1, w1, #0x5
   1ed80:	b	1ecc8 <PyInit__decimal@@Base+0xdd40>
   1ed84:	ldr	x1, [x0, #64]
   1ed88:	cmp	x2, x1
   1ed8c:	b.cs	1ee44 <PyInit__decimal@@Base+0xdebc>  // b.hs, b.nlast
   1ed90:	ldr	x0, [x0, #56]
   1ed94:	cmp	x2, x0
   1ed98:	cset	w1, cs  // cs = hs, nlast
   1ed9c:	add	w1, w1, #0x7
   1eda0:	b	1ecc8 <PyInit__decimal@@Base+0xdd40>
   1eda4:	ldr	x1, [x0, #112]
   1eda8:	cmp	x2, x1
   1edac:	b.cs	1edf0 <PyInit__decimal@@Base+0xde68>  // b.hs, b.nlast
   1edb0:	ldr	x1, [x0, #88]
   1edb4:	cmp	x2, x1
   1edb8:	b.cs	1edd0 <PyInit__decimal@@Base+0xde48>  // b.hs, b.nlast
   1edbc:	ldr	x0, [x0, #80]
   1edc0:	cmp	x2, x0
   1edc4:	cset	w1, cs  // cs = hs, nlast
   1edc8:	add	w1, w1, #0xa
   1edcc:	b	1ecc8 <PyInit__decimal@@Base+0xdd40>
   1edd0:	ldr	x1, [x0, #104]
   1edd4:	cmp	x2, x1
   1edd8:	b.cs	1ee4c <PyInit__decimal@@Base+0xdec4>  // b.hs, b.nlast
   1eddc:	ldr	x0, [x0, #96]
   1ede0:	cmp	x2, x0
   1ede4:	cset	w1, cs  // cs = hs, nlast
   1ede8:	add	w1, w1, #0xc
   1edec:	b	1ecc8 <PyInit__decimal@@Base+0xdd40>
   1edf0:	ldr	x1, [x0, #144]
   1edf4:	cmp	x2, x1
   1edf8:	b.cs	1ee30 <PyInit__decimal@@Base+0xdea8>  // b.hs, b.nlast
   1edfc:	ldr	x1, [x0, #128]
   1ee00:	cmp	x2, x1
   1ee04:	b.cs	1ee1c <PyInit__decimal@@Base+0xde94>  // b.hs, b.nlast
   1ee08:	ldr	x0, [x0, #120]
   1ee0c:	cmp	x2, x0
   1ee10:	cset	w1, cs  // cs = hs, nlast
   1ee14:	add	w1, w1, #0xf
   1ee18:	b	1ecc8 <PyInit__decimal@@Base+0xdd40>
   1ee1c:	ldr	x0, [x0, #136]
   1ee20:	cmp	x2, x0
   1ee24:	cset	w1, cs  // cs = hs, nlast
   1ee28:	add	w1, w1, #0x11
   1ee2c:	b	1ecc8 <PyInit__decimal@@Base+0xdd40>
   1ee30:	ldr	x0, [x0, #152]
   1ee34:	cmp	x2, x0
   1ee38:	cset	w1, cs  // cs = hs, nlast
   1ee3c:	add	w1, w1, #0x13
   1ee40:	b	1ecc8 <PyInit__decimal@@Base+0xdd40>
   1ee44:	mov	w1, w19
   1ee48:	b	1ecc8 <PyInit__decimal@@Base+0xdd40>
   1ee4c:	mov	w1, #0xe                   	// #14
   1ee50:	b	1ecc8 <PyInit__decimal@@Base+0xdd40>
   1ee54:	adrp	x27, 42000 <PyInit__decimal@@Base+0x31078>
   1ee58:	sub	x19, x19, #0x1
   1ee5c:	add	x22, sp, #0xe0
   1ee60:	add	x28, x23, #0x1c
   1ee64:	add	x26, sp, #0x80
   1ee68:	add	x27, x27, #0xc58
   1ee6c:	add	x25, sp, #0xb0
   1ee70:	mov	x3, #0x0                   	// #0
   1ee74:	mov	x0, x25
   1ee78:	mov	x2, #0x1                   	// #1
   1ee7c:	mov	w1, #0x0                   	// #0
   1ee80:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   1ee84:	ldr	x0, [sp, #264]
   1ee88:	str	x19, [x0]
   1ee8c:	mov	x0, x22
   1ee90:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   1ee94:	mov	x4, x28
   1ee98:	mov	x3, x23
   1ee9c:	mov	x2, x22
   1eea0:	mov	x1, x24
   1eea4:	mov	x0, x26
   1eea8:	bl	1e8c0 <PyInit__decimal@@Base+0xd938>
   1eeac:	mov	x5, x28
   1eeb0:	mov	x4, x23
   1eeb4:	mov	x3, x27
   1eeb8:	mov	x2, x26
   1eebc:	mov	x1, x25
   1eec0:	mov	x0, x25
   1eec4:	bl	1c38c <PyInit__decimal@@Base+0xb404>
   1eec8:	subs	x19, x19, #0x1
   1eecc:	b.ne	1ee84 <PyInit__decimal@@Base+0xdefc>  // b.any
   1eed0:	ldr	x0, [sp, #104]
   1eed4:	mov	x5, x20
   1eed8:	mov	x4, x23
   1eedc:	mov	x1, x25
   1eee0:	add	x22, x0, #0xae8
   1eee4:	mov	w3, #0x0                   	// #0
   1eee8:	mov	x0, x24
   1eeec:	ldr	x2, [x22, x21, lsl #3]
   1eef0:	bl	1cd8c <PyInit__decimal@@Base+0xbe04>
   1eef4:	ldrb	w0, [sp, #128]
   1eef8:	tst	w0, #0xe0
   1eefc:	b.ne	1ef10 <PyInit__decimal@@Base+0xdf88>  // b.any
   1ef00:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1ef04:	ldr	x1, [x0, #1720]
   1ef08:	ldr	x0, [sp, #168]
   1ef0c:	blr	x1
   1ef10:	ldrb	w0, [sp, #128]
   1ef14:	tbnz	w0, #4, 1ef28 <PyInit__decimal@@Base+0xdfa0>
   1ef18:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1ef1c:	ldr	x1, [x0, #1720]
   1ef20:	mov	x0, x26
   1ef24:	blr	x1
   1ef28:	ldrb	w0, [sp, #176]
   1ef2c:	tst	w0, #0xe0
   1ef30:	b.ne	1ef44 <PyInit__decimal@@Base+0xdfbc>  // b.any
   1ef34:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1ef38:	ldr	x1, [x0, #1720]
   1ef3c:	ldr	x0, [sp, #216]
   1ef40:	blr	x1
   1ef44:	ldrb	w0, [sp, #176]
   1ef48:	tbnz	w0, #4, 1ef5c <PyInit__decimal@@Base+0xdfd4>
   1ef4c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1ef50:	ldr	x1, [x0, #1720]
   1ef54:	mov	x0, x25
   1ef58:	blr	x1
   1ef5c:	ldr	w0, [sp, #348]
   1ef60:	mov	w1, #0x3be                 	// #958
   1ef64:	and	w0, w0, w1
   1ef68:	ldr	w1, [x20]
   1ef6c:	orr	w0, w0, w1
   1ef70:	b	1ed48 <PyInit__decimal@@Base+0xddc0>
   1ef74:	sub	sp, sp, #0x970
   1ef78:	stp	x29, x30, [sp]
   1ef7c:	mov	x29, sp
   1ef80:	stp	x19, x20, [sp, #16]
   1ef84:	mov	x19, x0
   1ef88:	stp	x21, x22, [sp, #32]
   1ef8c:	mov	x22, x1
   1ef90:	stp	x23, x24, [sp, #48]
   1ef94:	stp	x25, x26, [sp, #64]
   1ef98:	stp	x27, x28, [sp, #80]
   1ef9c:	ldrb	w4, [x1]
   1efa0:	tst	w4, #0xe
   1efa4:	b.eq	1f000 <PyInit__decimal@@Base+0xe078>  // b.none
   1efa8:	bl	18c14 <PyInit__decimal@@Base+0x7c8c>
   1efac:	cbnz	w0, 1efe0 <PyInit__decimal@@Base+0xe058>
   1efb0:	ldrb	w0, [x22]
   1efb4:	tbz	w0, #0, 1efd0 <PyInit__decimal@@Base+0xe048>
   1efb8:	mov	x0, x19
   1efbc:	mov	x3, #0x0                   	// #0
   1efc0:	mov	x2, #0x0                   	// #0
   1efc4:	mov	w1, #0x0                   	// #0
   1efc8:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   1efcc:	b	1efe0 <PyInit__decimal@@Base+0xe058>
   1efd0:	mov	x0, x19
   1efd4:	mov	w2, #0x2                   	// #2
   1efd8:	mov	w1, #0x0                   	// #0
   1efdc:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   1efe0:	ldp	x29, x30, [sp]
   1efe4:	ldp	x19, x20, [sp, #16]
   1efe8:	ldp	x21, x22, [sp, #32]
   1efec:	ldp	x23, x24, [sp, #48]
   1eff0:	ldp	x25, x26, [sp, #64]
   1eff4:	ldp	x27, x28, [sp, #80]
   1eff8:	add	sp, sp, #0x970
   1effc:	ret
   1f000:	mov	x23, x2
   1f004:	ldr	x2, [x1, #24]
   1f008:	ldr	x4, [x1, #40]
   1f00c:	add	x2, x4, x2, lsl #3
   1f010:	ldur	x2, [x2, #-8]
   1f014:	cbnz	x2, 1f028 <PyInit__decimal@@Base+0xe0a0>
   1f018:	mov	x3, #0x0                   	// #0
   1f01c:	mov	x2, #0x1                   	// #1
   1f020:	mov	w1, #0x0                   	// #0
   1f024:	b	1efc8 <PyInit__decimal@@Base+0xe040>
   1f028:	ldp	x4, x5, [x23]
   1f02c:	stp	x4, x5, [sp, #128]
   1f030:	mov	w2, #0x6                   	// #6
   1f034:	ldp	x4, x5, [x23, #16]
   1f038:	stp	x4, x5, [sp, #144]
   1f03c:	mov	x20, x3
   1f040:	ldp	x4, x5, [x23, #32]
   1f044:	stp	x4, x5, [sp, #160]
   1f048:	add	x21, sp, #0x80
   1f04c:	str	w2, [sp, #164]
   1f050:	ldr	w2, [x23, #44]
   1f054:	cbz	w2, 1f2d0 <PyInit__decimal@@Base+0xe348>
   1f058:	add	x3, sp, #0x170
   1f05c:	mov	x0, #0x40                  	// #64
   1f060:	str	x3, [sp, #216]
   1f064:	add	x3, sp, #0x370
   1f068:	mov	w2, #0x30                  	// #48
   1f06c:	strb	w2, [sp, #176]
   1f070:	stp	xzr, xzr, [sp, #184]
   1f074:	cmp	x1, x19
   1f078:	stp	xzr, x0, [sp, #200]
   1f07c:	strb	w2, [sp, #224]
   1f080:	stp	xzr, xzr, [sp, #232]
   1f084:	stp	xzr, x0, [sp, #248]
   1f088:	str	x3, [sp, #264]
   1f08c:	add	x3, sp, #0x570
   1f090:	strb	w2, [sp, #272]
   1f094:	stp	xzr, xzr, [sp, #280]
   1f098:	stp	xzr, x0, [sp, #296]
   1f09c:	str	x3, [sp, #312]
   1f0a0:	strb	w2, [sp, #320]
   1f0a4:	stp	xzr, xzr, [sp, #328]
   1f0a8:	stp	xzr, x0, [sp, #344]
   1f0ac:	add	x0, sp, #0x770
   1f0b0:	str	x0, [sp, #360]
   1f0b4:	b.ne	1f0e4 <PyInit__decimal@@Base+0xe15c>  // b.any
   1f0b8:	add	x24, sp, #0x140
   1f0bc:	mov	x2, x20
   1f0c0:	mov	x0, x24
   1f0c4:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1f0c8:	cbnz	w0, 1f0e0 <PyInit__decimal@@Base+0xe158>
   1f0cc:	mov	x2, x20
   1f0d0:	mov	x0, x22
   1f0d4:	mov	w1, #0x200                 	// #512
   1f0d8:	bl	18904 <PyInit__decimal@@Base+0x797c>
   1f0dc:	b	1efe0 <PyInit__decimal@@Base+0xe058>
   1f0e0:	mov	x22, x24
   1f0e4:	ldr	x24, [x23]
   1f0e8:	add	x28, sp, #0x7c
   1f0ec:	add	x25, sp, #0x110
   1f0f0:	add	x26, sp, #0xb0
   1f0f4:	add	x27, sp, #0xe0
   1f0f8:	add	x24, x24, #0x3
   1f0fc:	str	wzr, [sp, #168]
   1f100:	mov	x3, x28
   1f104:	mov	x2, x21
   1f108:	mov	x1, x22
   1f10c:	mov	x0, x19
   1f110:	str	wzr, [sp, #124]
   1f114:	str	x24, [sp, #128]
   1f118:	bl	1eaa4 <PyInit__decimal@@Base+0xdb1c>
   1f11c:	ldr	w0, [x20]
   1f120:	ldr	w1, [sp, #124]
   1f124:	ldp	x3, x2, [x19, #8]
   1f128:	orr	w0, w0, w1
   1f12c:	str	w0, [x20]
   1f130:	ldr	x0, [sp, #128]
   1f134:	tbnz	w1, #14, 1f140 <PyInit__decimal@@Base+0xe1b8>
   1f138:	add	x3, x3, x2
   1f13c:	sub	x3, x3, x0
   1f140:	mov	x0, x25
   1f144:	mov	x2, #0x1                   	// #1
   1f148:	mov	w1, #0x0                   	// #0
   1f14c:	bl	18174 <PyInit__decimal@@Base+0x71ec>
   1f150:	ldr	x0, [x23]
   1f154:	add	x4, x21, #0x1c
   1f158:	mov	x3, x21
   1f15c:	mov	x2, x25
   1f160:	mov	x1, x19
   1f164:	str	x4, [sp, #104]
   1f168:	str	x0, [sp, #128]
   1f16c:	mov	x0, x26
   1f170:	bl	1bc74 <PyInit__decimal@@Base+0xacec>
   1f174:	ldr	x4, [sp, #104]
   1f178:	mov	x0, x27
   1f17c:	mov	x3, x21
   1f180:	mov	x2, x25
   1f184:	mov	x1, x19
   1f188:	bl	1bd98 <PyInit__decimal@@Base+0xae10>
   1f18c:	ldrb	w0, [x19]
   1f190:	tst	w0, #0xe
   1f194:	b.eq	1f28c <PyInit__decimal@@Base+0xe304>  // b.none
   1f198:	ldr	w0, [x23, #40]
   1f19c:	mov	x2, x20
   1f1a0:	mov	x1, x21
   1f1a4:	str	w0, [sp, #168]
   1f1a8:	mov	x0, x19
   1f1ac:	bl	19be0 <PyInit__decimal@@Base+0x8c58>
   1f1b0:	mov	x2, x20
   1f1b4:	mov	x1, x21
   1f1b8:	mov	x0, x19
   1f1bc:	bl	161ec <PyInit__decimal@@Base+0x5264>
   1f1c0:	mov	x0, x19
   1f1c4:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   1f1c8:	ldrb	w0, [sp, #176]
   1f1cc:	tst	w0, #0xe0
   1f1d0:	b.eq	1f2bc <PyInit__decimal@@Base+0xe334>  // b.none
   1f1d4:	ldrb	w0, [sp, #176]
   1f1d8:	tbnz	w0, #4, 1f1ec <PyInit__decimal@@Base+0xe264>
   1f1dc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1f1e0:	ldr	x1, [x0, #1720]
   1f1e4:	mov	x0, x26
   1f1e8:	blr	x1
   1f1ec:	ldrb	w0, [sp, #224]
   1f1f0:	tst	w0, #0xe0
   1f1f4:	b.ne	1f208 <PyInit__decimal@@Base+0xe280>  // b.any
   1f1f8:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1f1fc:	ldr	x1, [x0, #1720]
   1f200:	ldr	x0, [sp, #264]
   1f204:	blr	x1
   1f208:	ldrb	w0, [sp, #224]
   1f20c:	tbnz	w0, #4, 1f220 <PyInit__decimal@@Base+0xe298>
   1f210:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1f214:	ldr	x1, [x0, #1720]
   1f218:	mov	x0, x27
   1f21c:	blr	x1
   1f220:	ldrb	w0, [sp, #272]
   1f224:	tst	w0, #0xe0
   1f228:	b.ne	1f23c <PyInit__decimal@@Base+0xe2b4>  // b.any
   1f22c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1f230:	ldr	x1, [x0, #1720]
   1f234:	ldr	x0, [sp, #312]
   1f238:	blr	x1
   1f23c:	ldrb	w0, [sp, #272]
   1f240:	tbnz	w0, #4, 1f254 <PyInit__decimal@@Base+0xe2cc>
   1f244:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1f248:	ldr	x1, [x0, #1720]
   1f24c:	mov	x0, x25
   1f250:	blr	x1
   1f254:	ldrb	w0, [sp, #320]
   1f258:	tst	w0, #0xe0
   1f25c:	b.ne	1f270 <PyInit__decimal@@Base+0xe2e8>  // b.any
   1f260:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1f264:	ldr	x1, [x0, #1720]
   1f268:	ldr	x0, [sp, #360]
   1f26c:	blr	x1
   1f270:	ldrb	w0, [sp, #320]
   1f274:	tbnz	w0, #4, 1efe0 <PyInit__decimal@@Base+0xe058>
   1f278:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1f27c:	ldr	x1, [x0, #1720]
   1f280:	add	x0, sp, #0x140
   1f284:	blr	x1
   1f288:	b	1efe0 <PyInit__decimal@@Base+0xe058>
   1f28c:	ldr	x0, [x19, #24]
   1f290:	ldr	x1, [x19, #40]
   1f294:	add	x0, x1, x0, lsl #3
   1f298:	ldur	x0, [x0, #-8]
   1f29c:	cbz	x0, 1f198 <PyInit__decimal@@Base+0xe210>
   1f2a0:	mov	x2, x20
   1f2a4:	mov	x1, x27
   1f2a8:	mov	x0, x26
   1f2ac:	bl	193c0 <PyInit__decimal@@Base+0x8438>
   1f2b0:	cbz	w0, 1f198 <PyInit__decimal@@Base+0xe210>
   1f2b4:	add	x24, x24, #0x13
   1f2b8:	b	1f100 <PyInit__decimal@@Base+0xe178>
   1f2bc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1f2c0:	ldr	x1, [x0, #1720]
   1f2c4:	ldr	x0, [sp, #216]
   1f2c8:	blr	x1
   1f2cc:	b	1f1d4 <PyInit__decimal@@Base+0xe24c>
   1f2d0:	mov	x2, x21
   1f2d4:	bl	1eaa4 <PyInit__decimal@@Base+0xdb1c>
   1f2d8:	mov	x2, x20
   1f2dc:	mov	x1, x21
   1f2e0:	mov	x0, x19
   1f2e4:	bl	19be0 <PyInit__decimal@@Base+0x8c58>
   1f2e8:	mov	x0, x19
   1f2ec:	mov	x2, x20
   1f2f0:	mov	x1, x21
   1f2f4:	bl	161ec <PyInit__decimal@@Base+0x5264>
   1f2f8:	mov	x0, x19
   1f2fc:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   1f300:	b	1efe0 <PyInit__decimal@@Base+0xe058>
   1f304:	sub	sp, sp, #0x530
   1f308:	stp	x29, x30, [sp]
   1f30c:	mov	x29, sp
   1f310:	stp	x21, x22, [sp, #32]
   1f314:	mov	x21, x1
   1f318:	mov	w1, #0x30                  	// #48
   1f31c:	strb	w1, [sp, #208]
   1f320:	mov	x1, #0x40                  	// #64
   1f324:	stp	xzr, x1, [sp, #232]
   1f328:	add	x1, sp, #0x130
   1f32c:	mov	x22, #0x1                   	// #1
   1f330:	str	x1, [sp, #248]
   1f334:	mov	x1, #0xa                   	// #10
   1f338:	stp	x19, x20, [sp, #16]
   1f33c:	mov	x20, x2
   1f340:	mov	x2, #0x4c0                 	// #1216
   1f344:	subs	x2, x2, x21
   1f348:	str	x1, [sp, #104]
   1f34c:	mov	w1, #0xffffff90            	// #-112
   1f350:	strb	w1, [sp, #256]
   1f354:	add	x1, sp, #0x68
   1f358:	stp	x23, x24, [sp, #48]
   1f35c:	adrp	x24, 42000 <PyInit__decimal@@Base+0x31078>
   1f360:	str	x1, [sp, #296]
   1f364:	add	x1, x24, #0xc58
   1f368:	csel	x2, x2, xzr, pl  // pl = nfrst
   1f36c:	mov	x19, x0
   1f370:	mov	x3, x20
   1f374:	add	x1, x1, #0x90
   1f378:	mov	x23, #0x2                   	// #2
   1f37c:	stp	x25, x26, [sp, #64]
   1f380:	stp	x27, x28, [sp, #80]
   1f384:	stp	xzr, xzr, [sp, #216]
   1f388:	stp	xzr, x23, [sp, #264]
   1f38c:	stp	x22, x22, [sp, #280]
   1f390:	bl	1a260 <PyInit__decimal@@Base+0x92d8>
   1f394:	cmn	x0, #0x1
   1f398:	b.ne	1f3cc <PyInit__decimal@@Base+0xe444>  // b.any
   1f39c:	mov	x2, x20
   1f3a0:	mov	x0, x19
   1f3a4:	mov	w1, #0x200                 	// #512
   1f3a8:	bl	18904 <PyInit__decimal@@Base+0x797c>
   1f3ac:	ldp	x29, x30, [sp]
   1f3b0:	ldp	x19, x20, [sp, #16]
   1f3b4:	ldp	x21, x22, [sp, #32]
   1f3b8:	ldp	x23, x24, [sp, #48]
   1f3bc:	ldp	x25, x26, [sp, #64]
   1f3c0:	ldp	x27, x28, [sp, #80]
   1f3c4:	add	sp, sp, #0x530
   1f3c8:	ret
   1f3cc:	mov	x26, x0
   1f3d0:	add	x25, sp, #0xa0
   1f3d4:	ldr	x0, [x19, #16]
   1f3d8:	sub	x22, x22, x0
   1f3dc:	str	x22, [x19, #8]
   1f3e0:	mov	x0, x25
   1f3e4:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1f3e8:	cmp	x21, #0x4bf
   1f3ec:	b.gt	1f41c <PyInit__decimal@@Base+0xe494>
   1f3f0:	mov	x1, x26
   1f3f4:	mov	x0, x19
   1f3f8:	mov	x3, x20
   1f3fc:	mov	x2, x25
   1f400:	str	x21, [sp, #160]
   1f404:	bl	180b8 <PyInit__decimal@@Base+0x7130>
   1f408:	ldr	w0, [x20]
   1f40c:	mov	w1, #0x1040                	// #4160
   1f410:	orr	w0, w0, w1
   1f414:	str	w0, [x20]
   1f418:	b	1f3ac <PyInit__decimal@@Base+0xe424>
   1f41c:	add	x28, sp, #0x70
   1f420:	mov	x0, x28
   1f424:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1f428:	ldr	x1, [x19, #8]
   1f42c:	mov	w0, #0x8                   	// #8
   1f430:	str	w0, [sp, #148]
   1f434:	add	x0, x21, #0x2
   1f438:	neg	x1, x1
   1f43c:	mov	w3, #0x0                   	// #0
   1f440:	cmp	x0, x1
   1f444:	b.le	1f47c <PyInit__decimal@@Base+0xe4f4>
   1f448:	add	x2, sp, #0x330
   1f44c:	add	x0, x0, #0x2
   1f450:	mov	w22, w3
   1f454:	add	w3, w3, #0x1
   1f458:	add	x27, x2, w22, sxtw #3
   1f45c:	sdiv	x0, x0, x23
   1f460:	str	x0, [x2, w22, sxtw #3]
   1f464:	cmp	x1, x0
   1f468:	b.lt	1f44c <PyInit__decimal@@Base+0xe4c4>  // b.tstop
   1f46c:	add	x23, sp, #0xd0
   1f470:	add	x26, sp, #0x100
   1f474:	add	x24, x24, #0xc58
   1f478:	tbz	w22, #31, 1f4b8 <PyInit__decimal@@Base+0xe530>
   1f47c:	ldrb	w0, [sp, #208]
   1f480:	tst	w0, #0xe0
   1f484:	b.eq	1f550 <PyInit__decimal@@Base+0xe5c8>  // b.none
   1f488:	ldrb	w0, [sp, #208]
   1f48c:	tbnz	w0, #4, 1f4a0 <PyInit__decimal@@Base+0xe518>
   1f490:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1f494:	ldr	x1, [x0, #1720]
   1f498:	add	x0, sp, #0xd0
   1f49c:	blr	x1
   1f4a0:	mov	x2, x20
   1f4a4:	mov	x1, x25
   1f4a8:	mov	x0, x19
   1f4ac:	str	x21, [sp, #160]
   1f4b0:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   1f4b4:	b	1f3ac <PyInit__decimal@@Base+0xe424>
   1f4b8:	ldr	x0, [x27], #-8
   1f4bc:	mov	x3, x20
   1f4c0:	mov	x2, x28
   1f4c4:	mov	x1, x19
   1f4c8:	lsl	x0, x0, #1
   1f4cc:	add	x0, x0, #0x3
   1f4d0:	str	x0, [sp, #112]
   1f4d4:	ldrb	w0, [x19]
   1f4d8:	eor	w0, w0, #0x1
   1f4dc:	strb	w0, [x19]
   1f4e0:	mov	x0, x23
   1f4e4:	bl	1eaa4 <PyInit__decimal@@Base+0xdb1c>
   1f4e8:	ldrb	w0, [x19]
   1f4ec:	mov	x4, x20
   1f4f0:	mov	x3, x28
   1f4f4:	mov	x2, x23
   1f4f8:	eor	w0, w0, #0x1
   1f4fc:	strb	w0, [x19]
   1f500:	mov	x1, x26
   1f504:	mov	x0, x23
   1f508:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
   1f50c:	mov	x4, x20
   1f510:	mov	x3, x25
   1f514:	mov	x2, x24
   1f518:	mov	x1, x23
   1f51c:	mov	x0, x23
   1f520:	bl	1bd98 <PyInit__decimal@@Base+0xae10>
   1f524:	mov	x0, x19
   1f528:	mov	x4, x20
   1f52c:	mov	x3, x25
   1f530:	mov	x2, x23
   1f534:	mov	x1, x19
   1f538:	bl	1bc74 <PyInit__decimal@@Base+0xacec>
   1f53c:	ldrb	w0, [x19]
   1f540:	tst	w0, #0xe
   1f544:	b.ne	1f47c <PyInit__decimal@@Base+0xe4f4>  // b.any
   1f548:	sub	w22, w22, #0x1
   1f54c:	b	1f478 <PyInit__decimal@@Base+0xe4f0>
   1f550:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1f554:	ldr	x1, [x0, #1720]
   1f558:	ldr	x0, [sp, #248]
   1f55c:	blr	x1
   1f560:	b	1f488 <PyInit__decimal@@Base+0xe500>
   1f564:	sub	sp, sp, #0x980
   1f568:	stp	x29, x30, [sp]
   1f56c:	mov	x29, sp
   1f570:	stp	x19, x20, [sp, #16]
   1f574:	mov	x19, x3
   1f578:	add	x3, sp, #0x180
   1f57c:	str	x3, [sp, #280]
   1f580:	add	x3, sp, #0x380
   1f584:	stp	x27, x28, [sp, #80]
   1f588:	mov	x28, x0
   1f58c:	mov	x0, #0x40                  	// #64
   1f590:	add	x20, sp, #0xf0
   1f594:	stp	x23, x24, [sp, #48]
   1f598:	mov	x24, x2
   1f59c:	mov	w2, #0x30                  	// #48
   1f5a0:	stp	xzr, x0, [sp, #264]
   1f5a4:	stp	xzr, x0, [sp, #312]
   1f5a8:	stp	xzr, x0, [sp, #360]
   1f5ac:	add	x0, sp, #0x580
   1f5b0:	stp	x21, x22, [sp, #32]
   1f5b4:	mov	x22, x1
   1f5b8:	stp	x25, x26, [sp, #64]
   1f5bc:	strb	w2, [sp, #240]
   1f5c0:	stp	xzr, xzr, [sp, #248]
   1f5c4:	strb	w2, [sp, #288]
   1f5c8:	stp	xzr, xzr, [sp, #296]
   1f5cc:	str	x3, [sp, #328]
   1f5d0:	strb	w2, [sp, #336]
   1f5d4:	mov	x2, x19
   1f5d8:	stp	xzr, xzr, [sp, #344]
   1f5dc:	str	x0, [sp, #376]
   1f5e0:	mov	x0, x20
   1f5e4:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1f5e8:	cbnz	w0, 1f6c8 <PyInit__decimal@@Base+0xe740>
   1f5ec:	mov	x2, x19
   1f5f0:	mov	x0, x28
   1f5f4:	mov	w1, #0x200                 	// #512
   1f5f8:	bl	18904 <PyInit__decimal@@Base+0x797c>
   1f5fc:	ldr	w0, [x19]
   1f600:	mov	w1, #0x1040                	// #4160
   1f604:	orr	w0, w0, w1
   1f608:	str	w0, [x19]
   1f60c:	ldrb	w0, [sp, #240]
   1f610:	tst	w0, #0xe0
   1f614:	b.ne	1f628 <PyInit__decimal@@Base+0xe6a0>  // b.any
   1f618:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1f61c:	ldr	x1, [x0, #1720]
   1f620:	ldr	x0, [sp, #280]
   1f624:	blr	x1
   1f628:	ldrb	w0, [sp, #240]
   1f62c:	tbnz	w0, #4, 1f640 <PyInit__decimal@@Base+0xe6b8>
   1f630:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1f634:	ldr	x1, [x0, #1720]
   1f638:	mov	x0, x20
   1f63c:	blr	x1
   1f640:	ldrb	w0, [sp, #288]
   1f644:	tst	w0, #0xe0
   1f648:	b.ne	1f65c <PyInit__decimal@@Base+0xe6d4>  // b.any
   1f64c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1f650:	ldr	x1, [x0, #1720]
   1f654:	ldr	x0, [sp, #328]
   1f658:	blr	x1
   1f65c:	ldrb	w0, [sp, #288]
   1f660:	tbnz	w0, #4, 1f674 <PyInit__decimal@@Base+0xe6ec>
   1f664:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1f668:	ldr	x1, [x0, #1720]
   1f66c:	add	x0, sp, #0x120
   1f670:	blr	x1
   1f674:	ldrb	w0, [sp, #336]
   1f678:	tst	w0, #0xe0
   1f67c:	b.ne	1f690 <PyInit__decimal@@Base+0xe708>  // b.any
   1f680:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1f684:	ldr	x1, [x0, #1720]
   1f688:	ldr	x0, [sp, #376]
   1f68c:	blr	x1
   1f690:	ldrb	w0, [sp, #336]
   1f694:	tbnz	w0, #4, 1f6a8 <PyInit__decimal@@Base+0xe720>
   1f698:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1f69c:	ldr	x1, [x0, #1720]
   1f6a0:	add	x0, sp, #0x150
   1f6a4:	blr	x1
   1f6a8:	ldp	x29, x30, [sp]
   1f6ac:	ldp	x19, x20, [sp, #16]
   1f6b0:	ldp	x21, x22, [sp, #32]
   1f6b4:	ldp	x23, x24, [sp, #48]
   1f6b8:	ldp	x25, x26, [sp, #64]
   1f6bc:	ldp	x27, x28, [sp, #80]
   1f6c0:	add	sp, sp, #0x980
   1f6c4:	ret
   1f6c8:	add	x0, sp, #0x80
   1f6cc:	mov	x2, x20
   1f6d0:	add	x1, sp, #0x88
   1f6d4:	mov	w3, #0x3                   	// #3
   1f6d8:	bl	1610c <PyInit__decimal@@Base+0x5184>
   1f6dc:	ldr	x0, [sp, #136]
   1f6e0:	cmp	x0, #0x9
   1f6e4:	b.hi	1f6f4 <PyInit__decimal@@Base+0xe76c>  // b.pmore
   1f6e8:	mov	x1, #0xa                   	// #10
   1f6ec:	mul	x0, x0, x1
   1f6f0:	str	x0, [sp, #136]
   1f6f4:	ldr	x0, [sp, #136]
   1f6f8:	cmp	x0, #0x63
   1f6fc:	b.hi	1f70c <PyInit__decimal@@Base+0xe784>  // b.pmore
   1f700:	mov	x1, #0xa                   	// #10
   1f704:	mul	x0, x0, x1
   1f708:	str	x0, [sp, #136]
   1f70c:	ldr	x0, [sp, #136]
   1f710:	ldp	x23, x21, [x22, #8]
   1f714:	sub	x0, x0, #0x64
   1f718:	str	x0, [sp, #136]
   1f71c:	ldrb	w0, [x28]
   1f720:	tbnz	w0, #5, 1f760 <PyInit__decimal@@Base+0xe7d8>
   1f724:	adrp	x22, 45000 <PyInit__decimal@@Base+0x34078>
   1f728:	ldr	x0, [x28, #32]
   1f72c:	ldr	x1, [x22, #1688]
   1f730:	cmp	x1, x0
   1f734:	b.ge	1f760 <PyInit__decimal@@Base+0xe7d8>  // b.tcont
   1f738:	ldr	x0, [x28, #40]
   1f73c:	add	x3, sp, #0x780
   1f740:	mov	x2, #0x8                   	// #8
   1f744:	strb	wzr, [sp, #1920]
   1f748:	bl	15d18 <PyInit__decimal@@Base+0x4d90>
   1f74c:	str	x0, [x28, #40]
   1f750:	ldrb	w0, [sp, #1920]
   1f754:	cbnz	w0, 1f760 <PyInit__decimal@@Base+0xe7d8>
   1f758:	ldr	x0, [x22, #1688]
   1f75c:	str	x0, [x28, #32]
   1f760:	ldrb	w0, [x28]
   1f764:	mov	x5, #0x1                   	// #1
   1f768:	ldr	x2, [sp, #136]
   1f76c:	and	w0, w0, #0xfffffff0
   1f770:	strb	w0, [x28]
   1f774:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   1f778:	add	x0, x0, #0xfb0
   1f77c:	add	x23, x21, x23
   1f780:	ldr	x1, [x28, #40]
   1f784:	ldrh	w0, [x0, x2, lsl #1]
   1f788:	str	x0, [x1]
   1f78c:	mov	x0, #0xfffffffffffffffd    	// #-3
   1f790:	str	x0, [x28, #8]
   1f794:	mov	x0, x28
   1f798:	str	x5, [x28, #24]
   1f79c:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   1f7a0:	ldr	x0, [sp, #136]
   1f7a4:	cmp	x0, #0x190
   1f7a8:	b.hi	1f880 <PyInit__decimal@@Base+0xe8f8>  // b.pmore
   1f7ac:	sub	x23, x23, #0x1
   1f7b0:	sub	x21, x5, x21
   1f7b4:	str	x21, [sp, #248]
   1f7b8:	add	x22, sp, #0xc0
   1f7bc:	add	x26, sp, #0x90
   1f7c0:	mov	x0, x22
   1f7c4:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1f7c8:	mov	x0, x26
   1f7cc:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1f7d0:	ldr	x21, [x24]
   1f7d4:	mov	w0, #0x8                   	// #8
   1f7d8:	str	w0, [sp, #180]
   1f7dc:	add	x21, x21, #0x2
   1f7e0:	cbnz	x23, 1f8b0 <PyInit__decimal@@Base+0xe928>
   1f7e4:	ldr	x0, [sp, #136]
   1f7e8:	sub	x0, x0, #0x10
   1f7ec:	cmp	x0, #0x30f
   1f7f0:	b.ls	1f8b0 <PyInit__decimal@@Base+0xe928>  // b.plast
   1f7f4:	adrp	x14, 42000 <PyInit__decimal@@Base+0x31078>
   1f7f8:	add	x14, x14, #0xc58
   1f7fc:	mov	x1, x14
   1f800:	mov	x0, x20
   1f804:	bl	16b04 <PyInit__decimal@@Base+0x5b7c>
   1f808:	mov	w25, w0
   1f80c:	mov	x1, x20
   1f810:	add	x0, sp, #0x150
   1f814:	add	x5, x22, #0x1c
   1f818:	mov	x4, x22
   1f81c:	mov	x2, x14
   1f820:	mov	w3, #0x1                   	// #1
   1f824:	bl	19818 <PyInit__decimal@@Base+0x8890>
   1f828:	ldr	w1, [sp, #220]
   1f82c:	mov	w0, #0x3be                 	// #958
   1f830:	tst	w1, w0
   1f834:	b.ne	1f5ec <PyInit__decimal@@Base+0xe664>  // b.any
   1f838:	tbz	w25, #31, 1f848 <PyInit__decimal@@Base+0xe8c0>
   1f83c:	ldr	x0, [sp, #344]
   1f840:	add	x0, x0, #0x1
   1f844:	str	x0, [sp, #344]
   1f848:	ldp	x4, x1, [sp, #344]
   1f84c:	ldr	x0, [x24]
   1f850:	ldr	x3, [x24, #16]
   1f854:	sub	x3, x3, x0
   1f858:	add	x0, x4, x1
   1f85c:	add	x2, x3, #0x1
   1f860:	sub	x0, x0, #0x1
   1f864:	cmp	x2, x0
   1f868:	b.le	1f898 <PyInit__decimal@@Base+0xe910>
   1f86c:	lsr	w1, w25, #31
   1f870:	mov	x0, x28
   1f874:	mov	x2, #0x1                   	// #1
   1f878:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   1f87c:	b	1f5fc <PyInit__decimal@@Base+0xe674>
   1f880:	ldrb	w0, [x28]
   1f884:	neg	x21, x21
   1f888:	str	x21, [sp, #248]
   1f88c:	orr	w0, w0, #0x1
   1f890:	strb	w0, [x28]
   1f894:	b	1f7b8 <PyInit__decimal@@Base+0xe830>
   1f898:	sub	x0, x4, #0x1
   1f89c:	str	x0, [sp, #344]
   1f8a0:	sub	x1, x1, #0x1
   1f8a4:	adds	x1, x1, x0
   1f8a8:	b.pl	1f8b0 <PyInit__decimal@@Base+0xe928>  // b.nfrst
   1f8ac:	sub	x21, x21, x1
   1f8b0:	cmp	x21, #0x2
   1f8b4:	b.gt	1f900 <PyInit__decimal@@Base+0xe978>
   1f8b8:	mov	x2, x19
   1f8bc:	add	x1, x21, #0x1
   1f8c0:	mov	x0, x20
   1f8c4:	add	x21, sp, #0x150
   1f8c8:	bl	1f304 <PyInit__decimal@@Base+0xe37c>
   1f8cc:	mov	x4, x19
   1f8d0:	mov	x3, x22
   1f8d4:	mov	x2, x23
   1f8d8:	mov	x1, x20
   1f8dc:	mov	x0, x21
   1f8e0:	bl	1d3b8 <PyInit__decimal@@Base+0xc430>
   1f8e4:	mov	x4, x19
   1f8e8:	mov	x3, x22
   1f8ec:	mov	x2, x28
   1f8f0:	mov	x1, x21
   1f8f4:	mov	x0, x28
   1f8f8:	bl	1bc74 <PyInit__decimal@@Base+0xacec>
   1f8fc:	b	1f5fc <PyInit__decimal@@Base+0xe674>
   1f900:	mov	x0, x21
   1f904:	add	x2, sp, #0x780
   1f908:	mov	w3, #0x0                   	// #0
   1f90c:	mov	x4, #0x2                   	// #2
   1f910:	add	x1, x0, #0x2
   1f914:	mov	w24, w3
   1f918:	cmp	x1, #0x5
   1f91c:	add	w3, w3, #0x1
   1f920:	add	x25, x2, w24, sxtw #3
   1f924:	sdiv	x0, x1, x4
   1f928:	str	x0, [x2, w24, sxtw #3]
   1f92c:	b.gt	1f910 <PyInit__decimal@@Base+0xe988>
   1f930:	add	x0, sp, #0x120
   1f934:	add	x27, sp, #0x150
   1f938:	str	x0, [sp, #104]
   1f93c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x31078>
   1f940:	add	x0, x0, #0xc58
   1f944:	str	x0, [sp, #112]
   1f948:	tbnz	w24, #31, 1f8b8 <PyInit__decimal@@Base+0xe930>
   1f94c:	ldr	x0, [x25]
   1f950:	mov	x2, x26
   1f954:	mov	x3, x19
   1f958:	mov	x1, x28
   1f95c:	lsl	x0, x0, #1
   1f960:	add	x0, x0, #0x3
   1f964:	str	x0, [sp, #144]
   1f968:	ldrb	w0, [x28]
   1f96c:	eor	w0, w0, #0x1
   1f970:	strb	w0, [x28]
   1f974:	mov	x0, x27
   1f978:	bl	1eaa4 <PyInit__decimal@@Base+0xdb1c>
   1f97c:	ldrb	w0, [x28]
   1f980:	ldr	x2, [sp, #256]
   1f984:	eor	w0, w0, #0x1
   1f988:	strb	w0, [x28]
   1f98c:	ldr	x0, [sp, #144]
   1f990:	cmp	x2, x0
   1f994:	b.le	1fa20 <PyInit__decimal@@Base+0xea98>
   1f998:	sub	x2, x2, x0
   1f99c:	mov	x3, x19
   1f9a0:	ldr	x0, [sp, #104]
   1f9a4:	mov	x1, x20
   1f9a8:	str	x2, [sp, #120]
   1f9ac:	bl	1a260 <PyInit__decimal@@Base+0x92d8>
   1f9b0:	ldr	x2, [sp, #120]
   1f9b4:	mov	x4, x19
   1f9b8:	ldr	x0, [sp, #296]
   1f9bc:	mov	x3, x26
   1f9c0:	ldr	x1, [sp, #104]
   1f9c4:	add	x2, x0, x2
   1f9c8:	str	x2, [sp, #296]
   1f9cc:	mov	x2, x27
   1f9d0:	mov	x0, x27
   1f9d4:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
   1f9d8:	ldr	x2, [sp, #112]
   1f9dc:	mov	x4, x19
   1f9e0:	mov	x3, x22
   1f9e4:	mov	x1, x27
   1f9e8:	mov	x0, x27
   1f9ec:	sub	x25, x25, #0x8
   1f9f0:	bl	1bd98 <PyInit__decimal@@Base+0xae10>
   1f9f4:	mov	x0, x28
   1f9f8:	mov	x4, x19
   1f9fc:	mov	x3, x22
   1fa00:	mov	x2, x27
   1fa04:	mov	x1, x28
   1fa08:	bl	1bc74 <PyInit__decimal@@Base+0xacec>
   1fa0c:	ldrb	w0, [x28]
   1fa10:	tst	w0, #0xe
   1fa14:	b.ne	1f8b8 <PyInit__decimal@@Base+0xe930>  // b.any
   1fa18:	sub	w24, w24, #0x1
   1fa1c:	b	1f948 <PyInit__decimal@@Base+0xe9c0>
   1fa20:	mov	x4, x19
   1fa24:	mov	x3, x26
   1fa28:	mov	x2, x27
   1fa2c:	mov	x1, x20
   1fa30:	b	1f9d0 <PyInit__decimal@@Base+0xea48>
   1fa34:	sub	sp, sp, #0x950
   1fa38:	stp	x29, x30, [sp]
   1fa3c:	mov	x29, sp
   1fa40:	stp	x19, x20, [sp, #16]
   1fa44:	mov	x19, x0
   1fa48:	mov	x20, x1
   1fa4c:	stp	x21, x22, [sp, #32]
   1fa50:	mov	x21, x3
   1fa54:	stp	x23, x24, [sp, #48]
   1fa58:	stp	x25, x26, [sp, #64]
   1fa5c:	stp	x27, x28, [sp, #80]
   1fa60:	ldrb	w4, [x1]
   1fa64:	tst	w4, #0xe
   1fa68:	b.eq	1faa0 <PyInit__decimal@@Base+0xeb18>  // b.none
   1fa6c:	bl	18c14 <PyInit__decimal@@Base+0x7c8c>
   1fa70:	cbnz	w0, 1fac4 <PyInit__decimal@@Base+0xeb3c>
   1fa74:	ldrb	w0, [x20]
   1fa78:	tbz	w0, #0, 1fa90 <PyInit__decimal@@Base+0xeb08>
   1fa7c:	mov	x2, x21
   1fa80:	mov	x0, x19
   1fa84:	mov	w1, #0x100                 	// #256
   1fa88:	bl	18904 <PyInit__decimal@@Base+0x797c>
   1fa8c:	b	1fac4 <PyInit__decimal@@Base+0xeb3c>
   1fa90:	mov	w2, #0x2                   	// #2
   1fa94:	mov	w1, #0x0                   	// #0
   1fa98:	mov	x0, x19
   1fa9c:	b	1fac0 <PyInit__decimal@@Base+0xeb38>
   1faa0:	mov	x22, x2
   1faa4:	ldr	x1, [x1, #24]
   1faa8:	ldr	x2, [x20, #40]
   1faac:	add	x1, x2, x1, lsl #3
   1fab0:	ldur	x1, [x1, #-8]
   1fab4:	cbnz	x1, 1fae4 <PyInit__decimal@@Base+0xeb5c>
   1fab8:	mov	w2, #0x2                   	// #2
   1fabc:	mov	w1, #0x1                   	// #1
   1fac0:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   1fac4:	ldp	x29, x30, [sp]
   1fac8:	ldp	x19, x20, [sp, #16]
   1facc:	ldp	x21, x22, [sp, #32]
   1fad0:	ldp	x23, x24, [sp, #48]
   1fad4:	ldp	x25, x26, [sp, #64]
   1fad8:	ldp	x27, x28, [sp, #80]
   1fadc:	add	sp, sp, #0x950
   1fae0:	ret
   1fae4:	tbnz	w4, #0, 1fa7c <PyInit__decimal@@Base+0xeaf4>
   1fae8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x31078>
   1faec:	mov	x0, x20
   1faf0:	add	x1, x1, #0xc58
   1faf4:	bl	16b04 <PyInit__decimal@@Base+0x5b7c>
   1faf8:	cbnz	w0, 1fb14 <PyInit__decimal@@Base+0xeb8c>
   1fafc:	mov	x0, x19
   1fb00:	mov	x3, #0x0                   	// #0
   1fb04:	mov	x2, #0x0                   	// #0
   1fb08:	mov	w1, #0x0                   	// #0
   1fb0c:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   1fb10:	b	1fac4 <PyInit__decimal@@Base+0xeb3c>
   1fb14:	ldp	x0, x1, [x20, #8]
   1fb18:	add	x0, x0, x1
   1fb1c:	subs	x3, x0, #0x1
   1fb20:	csneg	x0, x3, x0, pl  // pl = nfrst
   1fb24:	lsl	x0, x0, #1
   1fb28:	bl	1781c <PyInit__decimal@@Base+0x6894>
   1fb2c:	ldr	x1, [x22, #8]
   1fb30:	sub	w0, w0, #0x1
   1fb34:	cmp	x1, w0, sxtw
   1fb38:	b.ge	1fb58 <PyInit__decimal@@Base+0xebd0>  // b.tcont
   1fb3c:	ldr	w0, [x21]
   1fb40:	mov	w1, #0x1840                	// #6208
   1fb44:	mov	w2, #0x2                   	// #2
   1fb48:	orr	w0, w0, w1
   1fb4c:	lsr	x1, x3, #63
   1fb50:	str	w0, [x21]
   1fb54:	b	1fa98 <PyInit__decimal@@Base+0xeb10>
   1fb58:	ldp	x0, x1, [x22]
   1fb5c:	stp	x0, x1, [sp, #96]
   1fb60:	add	x23, sp, #0x60
   1fb64:	ldp	x0, x1, [x22, #16]
   1fb68:	stp	x0, x1, [sp, #112]
   1fb6c:	ldp	x0, x1, [x22, #32]
   1fb70:	stp	x0, x1, [sp, #128]
   1fb74:	mov	w0, #0x6                   	// #6
   1fb78:	str	w0, [sp, #132]
   1fb7c:	ldr	w0, [x22, #44]
   1fb80:	cbz	w0, 1fdd0 <PyInit__decimal@@Base+0xee48>
   1fb84:	add	x2, sp, #0x150
   1fb88:	mov	x0, #0x40                  	// #64
   1fb8c:	str	x2, [sp, #184]
   1fb90:	add	x2, sp, #0x350
   1fb94:	mov	w1, #0x30                  	// #48
   1fb98:	strb	w1, [sp, #144]
   1fb9c:	stp	xzr, xzr, [sp, #152]
   1fba0:	cmp	x20, x19
   1fba4:	stp	xzr, x0, [sp, #168]
   1fba8:	strb	w1, [sp, #192]
   1fbac:	stp	xzr, xzr, [sp, #200]
   1fbb0:	stp	xzr, x0, [sp, #216]
   1fbb4:	str	x2, [sp, #232]
   1fbb8:	add	x2, sp, #0x550
   1fbbc:	strb	w1, [sp, #240]
   1fbc0:	stp	xzr, xzr, [sp, #248]
   1fbc4:	stp	xzr, x0, [sp, #264]
   1fbc8:	str	x2, [sp, #280]
   1fbcc:	strb	w1, [sp, #288]
   1fbd0:	stp	xzr, xzr, [sp, #296]
   1fbd4:	stp	xzr, x0, [sp, #312]
   1fbd8:	add	x0, sp, #0x750
   1fbdc:	str	x0, [sp, #328]
   1fbe0:	b.ne	1fc10 <PyInit__decimal@@Base+0xec88>  // b.any
   1fbe4:	add	x24, sp, #0x120
   1fbe8:	mov	x2, x21
   1fbec:	mov	x1, x20
   1fbf0:	mov	x0, x24
   1fbf4:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1fbf8:	cbnz	w0, 1fc0c <PyInit__decimal@@Base+0xec84>
   1fbfc:	mov	x2, x21
   1fc00:	mov	x0, x20
   1fc04:	mov	w1, #0x200                 	// #512
   1fc08:	b	1fa88 <PyInit__decimal@@Base+0xeb00>
   1fc0c:	mov	x20, x24
   1fc10:	ldr	x24, [x22]
   1fc14:	add	x25, sp, #0xf0
   1fc18:	add	x28, x23, #0x1c
   1fc1c:	add	x26, sp, #0x90
   1fc20:	add	x27, sp, #0xc0
   1fc24:	add	x24, x24, #0x3
   1fc28:	str	wzr, [sp, #136]
   1fc2c:	mov	x3, x21
   1fc30:	mov	x2, x23
   1fc34:	mov	x1, x20
   1fc38:	mov	x0, x19
   1fc3c:	str	x24, [sp, #96]
   1fc40:	bl	1f564 <PyInit__decimal@@Base+0xe5dc>
   1fc44:	ldp	x0, x3, [x19, #8]
   1fc48:	mov	x2, #0x1                   	// #1
   1fc4c:	mov	w1, #0x0                   	// #0
   1fc50:	add	x0, x0, x3
   1fc54:	ldr	x3, [sp, #96]
   1fc58:	sub	x3, x0, x3
   1fc5c:	mov	x0, x25
   1fc60:	bl	18174 <PyInit__decimal@@Base+0x71ec>
   1fc64:	ldr	x0, [x22]
   1fc68:	mov	x4, x28
   1fc6c:	mov	x3, x23
   1fc70:	mov	x2, x25
   1fc74:	mov	x1, x19
   1fc78:	str	x0, [sp, #96]
   1fc7c:	mov	x0, x26
   1fc80:	bl	1bc74 <PyInit__decimal@@Base+0xacec>
   1fc84:	mov	x0, x27
   1fc88:	mov	x4, x28
   1fc8c:	mov	x3, x23
   1fc90:	mov	x2, x25
   1fc94:	mov	x1, x19
   1fc98:	bl	1bd98 <PyInit__decimal@@Base+0xae10>
   1fc9c:	ldrb	w0, [x19]
   1fca0:	tst	w0, #0xe
   1fca4:	b.eq	1fd8c <PyInit__decimal@@Base+0xee04>  // b.none
   1fca8:	ldr	w0, [x22, #40]
   1fcac:	mov	x2, x21
   1fcb0:	mov	x1, x23
   1fcb4:	str	w0, [sp, #136]
   1fcb8:	mov	x0, x19
   1fcbc:	bl	161ec <PyInit__decimal@@Base+0x5264>
   1fcc0:	mov	x0, x19
   1fcc4:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   1fcc8:	ldrb	w0, [sp, #144]
   1fccc:	tst	w0, #0xe0
   1fcd0:	b.eq	1fdbc <PyInit__decimal@@Base+0xee34>  // b.none
   1fcd4:	ldrb	w0, [sp, #144]
   1fcd8:	tbnz	w0, #4, 1fcec <PyInit__decimal@@Base+0xed64>
   1fcdc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1fce0:	ldr	x1, [x0, #1720]
   1fce4:	mov	x0, x26
   1fce8:	blr	x1
   1fcec:	ldrb	w0, [sp, #192]
   1fcf0:	tst	w0, #0xe0
   1fcf4:	b.ne	1fd08 <PyInit__decimal@@Base+0xed80>  // b.any
   1fcf8:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1fcfc:	ldr	x1, [x0, #1720]
   1fd00:	ldr	x0, [sp, #232]
   1fd04:	blr	x1
   1fd08:	ldrb	w0, [sp, #192]
   1fd0c:	tbnz	w0, #4, 1fd20 <PyInit__decimal@@Base+0xed98>
   1fd10:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1fd14:	ldr	x1, [x0, #1720]
   1fd18:	mov	x0, x27
   1fd1c:	blr	x1
   1fd20:	ldrb	w0, [sp, #240]
   1fd24:	tst	w0, #0xe0
   1fd28:	b.ne	1fd3c <PyInit__decimal@@Base+0xedb4>  // b.any
   1fd2c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1fd30:	ldr	x1, [x0, #1720]
   1fd34:	ldr	x0, [sp, #280]
   1fd38:	blr	x1
   1fd3c:	ldrb	w0, [sp, #240]
   1fd40:	tbnz	w0, #4, 1fd54 <PyInit__decimal@@Base+0xedcc>
   1fd44:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1fd48:	ldr	x1, [x0, #1720]
   1fd4c:	mov	x0, x25
   1fd50:	blr	x1
   1fd54:	ldrb	w0, [sp, #288]
   1fd58:	tst	w0, #0xe0
   1fd5c:	b.ne	1fd70 <PyInit__decimal@@Base+0xede8>  // b.any
   1fd60:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1fd64:	ldr	x1, [x0, #1720]
   1fd68:	ldr	x0, [sp, #328]
   1fd6c:	blr	x1
   1fd70:	ldrb	w0, [sp, #288]
   1fd74:	tbnz	w0, #4, 1fac4 <PyInit__decimal@@Base+0xeb3c>
   1fd78:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1fd7c:	ldr	x1, [x0, #1720]
   1fd80:	add	x0, sp, #0x120
   1fd84:	blr	x1
   1fd88:	b	1fac4 <PyInit__decimal@@Base+0xeb3c>
   1fd8c:	ldr	x0, [x19, #24]
   1fd90:	ldr	x1, [x19, #40]
   1fd94:	add	x0, x1, x0, lsl #3
   1fd98:	ldur	x0, [x0, #-8]
   1fd9c:	cbz	x0, 1fca8 <PyInit__decimal@@Base+0xed20>
   1fda0:	mov	x2, x21
   1fda4:	mov	x1, x27
   1fda8:	mov	x0, x26
   1fdac:	bl	193c0 <PyInit__decimal@@Base+0x8438>
   1fdb0:	cbz	w0, 1fca8 <PyInit__decimal@@Base+0xed20>
   1fdb4:	add	x24, x24, #0x13
   1fdb8:	b	1fc2c <PyInit__decimal@@Base+0xeca4>
   1fdbc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1fdc0:	ldr	x1, [x0, #1720]
   1fdc4:	ldr	x0, [sp, #184]
   1fdc8:	blr	x1
   1fdcc:	b	1fcd4 <PyInit__decimal@@Base+0xed4c>
   1fdd0:	mov	x3, x21
   1fdd4:	mov	x2, x23
   1fdd8:	mov	x1, x20
   1fddc:	mov	x0, x19
   1fde0:	bl	1f564 <PyInit__decimal@@Base+0xe5dc>
   1fde4:	mov	x0, x19
   1fde8:	mov	x2, x21
   1fdec:	mov	x1, x23
   1fdf0:	bl	161ec <PyInit__decimal@@Base+0x5264>
   1fdf4:	mov	x0, x19
   1fdf8:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   1fdfc:	b	1fac4 <PyInit__decimal@@Base+0xeb3c>
   1fe00:	sub	sp, sp, #0x2a0
   1fe04:	stp	x29, x30, [sp]
   1fe08:	mov	x29, sp
   1fe0c:	stp	x19, x20, [sp, #16]
   1fe10:	mov	x20, x0
   1fe14:	mov	w0, #0x30                  	// #48
   1fe18:	strb	w0, [sp, #112]
   1fe1c:	mov	x0, #0x40                  	// #64
   1fe20:	stp	x23, x24, [sp, #48]
   1fe24:	add	x24, sp, #0x70
   1fe28:	mov	x23, x3
   1fe2c:	stp	xzr, x0, [sp, #136]
   1fe30:	add	x0, sp, #0xa0
   1fe34:	mov	x19, x4
   1fe38:	stp	x21, x22, [sp, #32]
   1fe3c:	mov	x22, x1
   1fe40:	mov	x1, x2
   1fe44:	mov	x2, x4
   1fe48:	stp	xzr, xzr, [sp, #120]
   1fe4c:	str	x0, [sp, #152]
   1fe50:	mov	x0, x24
   1fe54:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   1fe58:	cbnz	w0, 1fe84 <PyInit__decimal@@Base+0xeefc>
   1fe5c:	mov	x2, x19
   1fe60:	mov	x0, x20
   1fe64:	mov	w1, #0x200                 	// #512
   1fe68:	bl	18904 <PyInit__decimal@@Base+0x797c>
   1fe6c:	ldp	x29, x30, [sp]
   1fe70:	ldp	x19, x20, [sp, #16]
   1fe74:	ldp	x21, x22, [sp, #32]
   1fe78:	ldp	x23, x24, [sp, #48]
   1fe7c:	add	sp, sp, #0x2a0
   1fe80:	ret
   1fe84:	add	x21, sp, #0x40
   1fe88:	mov	x0, x21
   1fe8c:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1fe90:	ldr	x0, [x23]
   1fe94:	mov	x2, x21
   1fe98:	ldr	x1, [x22, #16]
   1fe9c:	cmp	x0, x1
   1fea0:	csel	x0, x0, x1, ge  // ge = tcont
   1fea4:	mov	x1, x22
   1fea8:	add	x0, x0, #0x17
   1feac:	str	x0, [sp, #64]
   1feb0:	mov	w0, #0x6                   	// #6
   1feb4:	str	w0, [sp, #100]
   1feb8:	ldr	w0, [x23, #44]
   1febc:	add	x23, x21, #0x1c
   1fec0:	mov	x3, x23
   1fec4:	str	w0, [sp, #108]
   1fec8:	mov	x0, x20
   1fecc:	bl	1fa34 <PyInit__decimal@@Base+0xeaac>
   1fed0:	mov	x4, x23
   1fed4:	mov	x3, x21
   1fed8:	mov	x2, x24
   1fedc:	mov	x1, x20
   1fee0:	mov	x0, x20
   1fee4:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
   1fee8:	mov	x0, x20
   1feec:	mov	x3, x19
   1fef0:	mov	x2, x21
   1fef4:	mov	x1, x20
   1fef8:	bl	1ef74 <PyInit__decimal@@Base+0xdfec>
   1fefc:	ldrb	w0, [sp, #112]
   1ff00:	tst	w0, #0xe0
   1ff04:	b.ne	1ff18 <PyInit__decimal@@Base+0xef90>  // b.any
   1ff08:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1ff0c:	ldr	x1, [x0, #1720]
   1ff10:	ldr	x0, [sp, #152]
   1ff14:	blr	x1
   1ff18:	ldrb	w0, [sp, #112]
   1ff1c:	tbnz	w0, #4, 1ff30 <PyInit__decimal@@Base+0xefa8>
   1ff20:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   1ff24:	ldr	x1, [x0, #1720]
   1ff28:	mov	x0, x24
   1ff2c:	blr	x1
   1ff30:	ldr	w0, [sp, #92]
   1ff34:	mov	w1, #0x3be                 	// #958
   1ff38:	and	w0, w0, w1
   1ff3c:	ldr	w1, [x19]
   1ff40:	orr	w0, w0, w1
   1ff44:	mov	w1, #0x1040                	// #4160
   1ff48:	orr	w0, w0, w1
   1ff4c:	str	w0, [x19]
   1ff50:	b	1fe6c <PyInit__decimal@@Base+0xeee4>
   1ff54:	sub	sp, sp, #0x2a0
   1ff58:	stp	x29, x30, [sp]
   1ff5c:	mov	x29, sp
   1ff60:	stp	x23, x24, [sp, #48]
   1ff64:	mov	w24, w0
   1ff68:	mov	w0, #0x30                  	// #48
   1ff6c:	stp	x19, x20, [sp, #16]
   1ff70:	mov	x19, x3
   1ff74:	add	x23, sp, #0x40
   1ff78:	strb	w0, [sp, #112]
   1ff7c:	mov	x0, #0x40                  	// #64
   1ff80:	stp	xzr, x0, [sp, #136]
   1ff84:	add	x0, sp, #0xa0
   1ff88:	mov	x20, x4
   1ff8c:	stp	x21, x22, [sp, #32]
   1ff90:	mov	x22, x2
   1ff94:	mov	x21, x1
   1ff98:	stp	xzr, xzr, [sp, #120]
   1ff9c:	str	x0, [sp, #152]
   1ffa0:	mov	x0, x23
   1ffa4:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   1ffa8:	ldr	x0, [x19]
   1ffac:	mov	x1, x22
   1ffb0:	mov	x3, x20
   1ffb4:	mov	x2, x23
   1ffb8:	add	x0, x0, #0x3
   1ffbc:	str	x0, [sp, #64]
   1ffc0:	mov	x0, x21
   1ffc4:	bl	1f564 <PyInit__decimal@@Base+0xe5dc>
   1ffc8:	ldr	x1, [sp, #64]
   1ffcc:	add	x22, sp, #0x70
   1ffd0:	mov	x2, x20
   1ffd4:	mov	x0, x22
   1ffd8:	bl	1f304 <PyInit__decimal@@Base+0xe37c>
   1ffdc:	cmp	w24, #0x1
   1ffe0:	b.ne	20004 <PyInit__decimal@@Base+0xf07c>  // b.any
   1ffe4:	ldp	x0, x1, [x19]
   1ffe8:	stp	x0, x1, [sp, #64]
   1ffec:	ldp	x0, x1, [x19, #16]
   1fff0:	stp	x0, x1, [sp, #80]
   1fff4:	ldp	x0, x1, [x19, #32]
   1fff8:	stp	x0, x1, [sp, #96]
   1fffc:	mov	w0, #0x6                   	// #6
   20000:	str	w0, [sp, #100]
   20004:	mov	w0, #0x0                   	// #0
   20008:	mov	x5, x20
   2000c:	mov	x4, x23
   20010:	mov	x3, x22
   20014:	mov	x2, x21
   20018:	mov	x1, x21
   2001c:	bl	1e3d0 <PyInit__decimal@@Base+0xd448>
   20020:	ldrb	w0, [sp, #112]
   20024:	tst	w0, #0xe0
   20028:	b.ne	2003c <PyInit__decimal@@Base+0xf0b4>  // b.any
   2002c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   20030:	ldr	x1, [x0, #1720]
   20034:	ldr	x0, [sp, #152]
   20038:	blr	x1
   2003c:	ldrb	w0, [sp, #112]
   20040:	tbnz	w0, #4, 20054 <PyInit__decimal@@Base+0xf0cc>
   20044:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   20048:	ldr	x1, [x0, #1720]
   2004c:	mov	x0, x22
   20050:	blr	x1
   20054:	ldp	x29, x30, [sp]
   20058:	ldp	x19, x20, [sp, #16]
   2005c:	ldp	x21, x22, [sp, #32]
   20060:	ldp	x23, x24, [sp, #48]
   20064:	add	sp, sp, #0x2a0
   20068:	ret
   2006c:	sub	sp, sp, #0x950
   20070:	stp	x29, x30, [sp]
   20074:	mov	x29, sp
   20078:	ldp	x4, x5, [x2]
   2007c:	stp	x4, x5, [sp, #96]
   20080:	ldp	x4, x5, [x2, #16]
   20084:	stp	x4, x5, [sp, #112]
   20088:	ldp	x4, x5, [x2, #32]
   2008c:	stp	x19, x20, [sp, #16]
   20090:	mov	x19, x0
   20094:	stp	x21, x22, [sp, #32]
   20098:	mov	x20, x3
   2009c:	mov	x21, x1
   200a0:	stp	x23, x24, [sp, #48]
   200a4:	stp	x25, x26, [sp, #64]
   200a8:	stp	x27, x28, [sp, #80]
   200ac:	stp	x4, x5, [sp, #128]
   200b0:	mov	w4, #0x6                   	// #6
   200b4:	str	w4, [sp, #132]
   200b8:	ldrb	w4, [x1]
   200bc:	tst	w4, #0xe
   200c0:	b.eq	200f8 <PyInit__decimal@@Base+0xf170>  // b.none
   200c4:	bl	18c14 <PyInit__decimal@@Base+0x7c8c>
   200c8:	cbnz	w0, 2011c <PyInit__decimal@@Base+0xf194>
   200cc:	ldrb	w0, [x21]
   200d0:	tbz	w0, #0, 200e8 <PyInit__decimal@@Base+0xf160>
   200d4:	mov	x2, x20
   200d8:	mov	x0, x19
   200dc:	mov	w1, #0x100                 	// #256
   200e0:	bl	18904 <PyInit__decimal@@Base+0x797c>
   200e4:	b	2011c <PyInit__decimal@@Base+0xf194>
   200e8:	mov	w2, #0x2                   	// #2
   200ec:	mov	w1, #0x0                   	// #0
   200f0:	mov	x0, x19
   200f4:	b	20118 <PyInit__decimal@@Base+0xf190>
   200f8:	ldr	x1, [x1, #24]
   200fc:	mov	x22, x2
   20100:	ldr	x8, [x21, #40]
   20104:	add	x2, x8, x1, lsl #3
   20108:	ldur	x5, [x2, #-8]
   2010c:	cbnz	x5, 2013c <PyInit__decimal@@Base+0xf1b4>
   20110:	mov	w2, #0x2                   	// #2
   20114:	mov	w1, #0x1                   	// #1
   20118:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   2011c:	ldp	x29, x30, [sp]
   20120:	ldp	x19, x20, [sp, #16]
   20124:	ldp	x21, x22, [sp, #32]
   20128:	ldp	x23, x24, [sp, #48]
   2012c:	ldp	x25, x26, [sp, #64]
   20130:	ldp	x27, x28, [sp, #80]
   20134:	add	sp, sp, #0x950
   20138:	ret
   2013c:	and	w7, w4, #0x1
   20140:	tbnz	w4, #0, 200d4 <PyInit__decimal@@Base+0xf14c>
   20144:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   20148:	add	x0, x2, #0xae8
   2014c:	ldr	x3, [x0, #72]
   20150:	cmp	x5, x3
   20154:	b.cs	20238 <PyInit__decimal@@Base+0xf2b0>  // b.hs, b.nlast
   20158:	ldr	x3, [x0, #32]
   2015c:	cmp	x5, x3
   20160:	b.cs	201f8 <PyInit__decimal@@Base+0xf270>  // b.hs, b.nlast
   20164:	ldr	x3, [x0, #16]
   20168:	cmp	x5, x3
   2016c:	b.cs	201e4 <PyInit__decimal@@Base+0xf25c>  // b.hs, b.nlast
   20170:	ldr	x0, [x0, #8]
   20174:	cmp	x5, x0
   20178:	cset	w4, cs  // cs = hs, nlast
   2017c:	add	w4, w4, #0x1
   20180:	ldp	x0, x3, [x21, #8]
   20184:	sub	w4, w4, #0x1
   20188:	add	x3, x3, x0
   2018c:	add	x0, x2, #0xae8
   20190:	sub	x6, x3, #0x1
   20194:	ldr	x0, [x0, w4, sxtw #3]
   20198:	cmp	x5, x0
   2019c:	b.ne	202e8 <PyInit__decimal@@Base+0xf360>  // b.any
   201a0:	sub	x1, x1, #0x1
   201a4:	mov	x0, x8
   201a8:	bl	16068 <PyInit__decimal@@Base+0x50e0>
   201ac:	cbz	w0, 202e8 <PyInit__decimal@@Base+0xf360>
   201b0:	tbz	x6, #63, 201bc <PyInit__decimal@@Base+0xf234>
   201b4:	mov	x7, #0x1                   	// #1
   201b8:	sub	x6, x7, x3
   201bc:	mov	x3, #0x0                   	// #0
   201c0:	mov	x2, x6
   201c4:	mov	w1, w7
   201c8:	mov	x0, x19
   201cc:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   201d0:	mov	x2, x20
   201d4:	add	x1, sp, #0x60
   201d8:	mov	x0, x19
   201dc:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   201e0:	b	2011c <PyInit__decimal@@Base+0xf194>
   201e4:	ldr	x0, [x0, #24]
   201e8:	cmp	x5, x0
   201ec:	cset	w4, cs  // cs = hs, nlast
   201f0:	add	w4, w4, #0x3
   201f4:	b	20180 <PyInit__decimal@@Base+0xf1f8>
   201f8:	ldr	x3, [x0, #48]
   201fc:	cmp	x5, x3
   20200:	b.cs	20218 <PyInit__decimal@@Base+0xf290>  // b.hs, b.nlast
   20204:	ldr	x0, [x0, #40]
   20208:	cmp	x5, x0
   2020c:	cset	w4, cs  // cs = hs, nlast
   20210:	add	w4, w4, #0x5
   20214:	b	20180 <PyInit__decimal@@Base+0xf1f8>
   20218:	ldr	x3, [x0, #64]
   2021c:	cmp	x5, x3
   20220:	b.cs	202d8 <PyInit__decimal@@Base+0xf350>  // b.hs, b.nlast
   20224:	ldr	x0, [x0, #56]
   20228:	cmp	x5, x0
   2022c:	cset	w4, cs  // cs = hs, nlast
   20230:	add	w4, w4, #0x7
   20234:	b	20180 <PyInit__decimal@@Base+0xf1f8>
   20238:	ldr	x3, [x0, #112]
   2023c:	cmp	x5, x3
   20240:	b.cs	20284 <PyInit__decimal@@Base+0xf2fc>  // b.hs, b.nlast
   20244:	ldr	x3, [x0, #88]
   20248:	cmp	x5, x3
   2024c:	b.cs	20264 <PyInit__decimal@@Base+0xf2dc>  // b.hs, b.nlast
   20250:	ldr	x0, [x0, #80]
   20254:	cmp	x5, x0
   20258:	cset	w4, cs  // cs = hs, nlast
   2025c:	add	w4, w4, #0xa
   20260:	b	20180 <PyInit__decimal@@Base+0xf1f8>
   20264:	ldr	x3, [x0, #104]
   20268:	cmp	x5, x3
   2026c:	b.cs	202e0 <PyInit__decimal@@Base+0xf358>  // b.hs, b.nlast
   20270:	ldr	x0, [x0, #96]
   20274:	cmp	x5, x0
   20278:	cset	w4, cs  // cs = hs, nlast
   2027c:	add	w4, w4, #0xc
   20280:	b	20180 <PyInit__decimal@@Base+0xf1f8>
   20284:	ldr	x3, [x0, #144]
   20288:	cmp	x5, x3
   2028c:	b.cs	202c4 <PyInit__decimal@@Base+0xf33c>  // b.hs, b.nlast
   20290:	ldr	x3, [x0, #128]
   20294:	cmp	x5, x3
   20298:	b.cs	202b0 <PyInit__decimal@@Base+0xf328>  // b.hs, b.nlast
   2029c:	ldr	x0, [x0, #120]
   202a0:	cmp	x5, x0
   202a4:	cset	w4, cs  // cs = hs, nlast
   202a8:	add	w4, w4, #0xf
   202ac:	b	20180 <PyInit__decimal@@Base+0xf1f8>
   202b0:	ldr	x0, [x0, #136]
   202b4:	cmp	x5, x0
   202b8:	cset	w4, cs  // cs = hs, nlast
   202bc:	add	w4, w4, #0x11
   202c0:	b	20180 <PyInit__decimal@@Base+0xf1f8>
   202c4:	ldr	x0, [x0, #152]
   202c8:	cmp	x5, x0
   202cc:	cset	w4, cs  // cs = hs, nlast
   202d0:	add	w4, w4, #0x13
   202d4:	b	20180 <PyInit__decimal@@Base+0xf1f8>
   202d8:	mov	w4, #0x9                   	// #9
   202dc:	b	20180 <PyInit__decimal@@Base+0xf1f8>
   202e0:	mov	w4, #0xe                   	// #14
   202e4:	b	20180 <PyInit__decimal@@Base+0xf1f8>
   202e8:	cmp	x6, #0x0
   202ec:	csneg	x0, x6, x3, ge  // ge = tcont
   202f0:	bl	1781c <PyInit__decimal@@Base+0x6894>
   202f4:	sub	w0, w0, #0x1
   202f8:	ldr	x1, [x22, #8]
   202fc:	cmp	x1, w0, sxtw
   20300:	b.ge	20320 <PyInit__decimal@@Base+0xf398>  // b.tcont
   20304:	ldr	w0, [x20]
   20308:	mov	w1, #0x1840                	// #6208
   2030c:	mov	w2, #0x2                   	// #2
   20310:	orr	w0, w0, w1
   20314:	lsr	x1, x6, #63
   20318:	str	w0, [x20]
   2031c:	b	200f0 <PyInit__decimal@@Base+0xf168>
   20320:	ldr	w0, [x22, #44]
   20324:	cbz	w0, 2057c <PyInit__decimal@@Base+0xf5f4>
   20328:	add	x2, sp, #0x150
   2032c:	mov	x0, #0x40                  	// #64
   20330:	str	x2, [sp, #184]
   20334:	add	x2, sp, #0x350
   20338:	mov	w1, #0x30                  	// #48
   2033c:	strb	w1, [sp, #144]
   20340:	stp	xzr, xzr, [sp, #152]
   20344:	cmp	x21, x19
   20348:	stp	xzr, x0, [sp, #168]
   2034c:	strb	w1, [sp, #192]
   20350:	stp	xzr, xzr, [sp, #200]
   20354:	stp	xzr, x0, [sp, #216]
   20358:	str	x2, [sp, #232]
   2035c:	add	x2, sp, #0x550
   20360:	strb	w1, [sp, #240]
   20364:	stp	xzr, xzr, [sp, #248]
   20368:	stp	xzr, x0, [sp, #264]
   2036c:	str	x2, [sp, #280]
   20370:	strb	w1, [sp, #288]
   20374:	stp	xzr, xzr, [sp, #296]
   20378:	stp	xzr, x0, [sp, #312]
   2037c:	add	x0, sp, #0x750
   20380:	str	x0, [sp, #328]
   20384:	b.ne	203b4 <PyInit__decimal@@Base+0xf42c>  // b.any
   20388:	add	x23, sp, #0x120
   2038c:	mov	x2, x20
   20390:	mov	x1, x21
   20394:	mov	x0, x23
   20398:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   2039c:	cbnz	w0, 203b0 <PyInit__decimal@@Base+0xf428>
   203a0:	mov	x2, x20
   203a4:	mov	x0, x21
   203a8:	mov	w1, #0x200                 	// #512
   203ac:	b	200e0 <PyInit__decimal@@Base+0xf158>
   203b0:	mov	x21, x23
   203b4:	ldr	x24, [x22]
   203b8:	add	x23, sp, #0x60
   203bc:	add	x25, sp, #0xf0
   203c0:	add	x28, x23, #0x1c
   203c4:	add	x26, sp, #0x90
   203c8:	add	x27, sp, #0xc0
   203cc:	add	x24, x24, #0x3
   203d0:	str	wzr, [sp, #136]
   203d4:	mov	x4, x20
   203d8:	mov	x3, x23
   203dc:	mov	x2, x21
   203e0:	mov	x1, x19
   203e4:	mov	w0, #0x0                   	// #0
   203e8:	str	x24, [sp, #96]
   203ec:	bl	1ff54 <PyInit__decimal@@Base+0xefcc>
   203f0:	ldp	x0, x3, [x19, #8]
   203f4:	mov	x2, #0x1                   	// #1
   203f8:	mov	w1, #0x0                   	// #0
   203fc:	add	x0, x0, x3
   20400:	ldr	x3, [sp, #96]
   20404:	sub	x3, x0, x3
   20408:	mov	x0, x25
   2040c:	bl	18174 <PyInit__decimal@@Base+0x71ec>
   20410:	ldr	x0, [x22]
   20414:	mov	x4, x28
   20418:	mov	x3, x23
   2041c:	mov	x2, x25
   20420:	mov	x1, x19
   20424:	str	x0, [sp, #96]
   20428:	mov	x0, x26
   2042c:	bl	1bc74 <PyInit__decimal@@Base+0xacec>
   20430:	mov	x0, x27
   20434:	mov	x4, x28
   20438:	mov	x3, x23
   2043c:	mov	x2, x25
   20440:	mov	x1, x19
   20444:	bl	1bd98 <PyInit__decimal@@Base+0xae10>
   20448:	ldrb	w0, [x19]
   2044c:	tst	w0, #0xe
   20450:	b.eq	20538 <PyInit__decimal@@Base+0xf5b0>  // b.none
   20454:	ldr	w0, [x22, #40]
   20458:	mov	x2, x20
   2045c:	mov	x1, x23
   20460:	str	w0, [sp, #136]
   20464:	mov	x0, x19
   20468:	bl	161ec <PyInit__decimal@@Base+0x5264>
   2046c:	mov	x0, x19
   20470:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   20474:	ldrb	w0, [sp, #144]
   20478:	tst	w0, #0xe0
   2047c:	b.eq	20568 <PyInit__decimal@@Base+0xf5e0>  // b.none
   20480:	ldrb	w0, [sp, #144]
   20484:	tbnz	w0, #4, 20498 <PyInit__decimal@@Base+0xf510>
   20488:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   2048c:	ldr	x1, [x0, #1720]
   20490:	mov	x0, x26
   20494:	blr	x1
   20498:	ldrb	w0, [sp, #192]
   2049c:	tst	w0, #0xe0
   204a0:	b.ne	204b4 <PyInit__decimal@@Base+0xf52c>  // b.any
   204a4:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   204a8:	ldr	x1, [x0, #1720]
   204ac:	ldr	x0, [sp, #232]
   204b0:	blr	x1
   204b4:	ldrb	w0, [sp, #192]
   204b8:	tbnz	w0, #4, 204cc <PyInit__decimal@@Base+0xf544>
   204bc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   204c0:	ldr	x1, [x0, #1720]
   204c4:	mov	x0, x27
   204c8:	blr	x1
   204cc:	ldrb	w0, [sp, #240]
   204d0:	tst	w0, #0xe0
   204d4:	b.ne	204e8 <PyInit__decimal@@Base+0xf560>  // b.any
   204d8:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   204dc:	ldr	x1, [x0, #1720]
   204e0:	ldr	x0, [sp, #280]
   204e4:	blr	x1
   204e8:	ldrb	w0, [sp, #240]
   204ec:	tbnz	w0, #4, 20500 <PyInit__decimal@@Base+0xf578>
   204f0:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   204f4:	ldr	x1, [x0, #1720]
   204f8:	mov	x0, x25
   204fc:	blr	x1
   20500:	ldrb	w0, [sp, #288]
   20504:	tst	w0, #0xe0
   20508:	b.ne	2051c <PyInit__decimal@@Base+0xf594>  // b.any
   2050c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   20510:	ldr	x1, [x0, #1720]
   20514:	ldr	x0, [sp, #328]
   20518:	blr	x1
   2051c:	ldrb	w0, [sp, #288]
   20520:	tbnz	w0, #4, 2011c <PyInit__decimal@@Base+0xf194>
   20524:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   20528:	ldr	x1, [x0, #1720]
   2052c:	add	x0, sp, #0x120
   20530:	blr	x1
   20534:	b	2011c <PyInit__decimal@@Base+0xf194>
   20538:	ldr	x0, [x19, #24]
   2053c:	ldr	x1, [x19, #40]
   20540:	add	x0, x1, x0, lsl #3
   20544:	ldur	x0, [x0, #-8]
   20548:	cbz	x0, 20454 <PyInit__decimal@@Base+0xf4cc>
   2054c:	mov	x2, x20
   20550:	mov	x1, x27
   20554:	mov	x0, x26
   20558:	bl	193c0 <PyInit__decimal@@Base+0x8438>
   2055c:	cbz	w0, 20454 <PyInit__decimal@@Base+0xf4cc>
   20560:	add	x24, x24, #0x13
   20564:	b	203d4 <PyInit__decimal@@Base+0xf44c>
   20568:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   2056c:	ldr	x1, [x0, #1720]
   20570:	ldr	x0, [sp, #184]
   20574:	blr	x1
   20578:	b	20480 <PyInit__decimal@@Base+0xf4f8>
   2057c:	add	x22, sp, #0x60
   20580:	mov	x4, x20
   20584:	mov	x3, x22
   20588:	mov	x2, x21
   2058c:	mov	x1, x19
   20590:	mov	w0, #0x1                   	// #1
   20594:	bl	1ff54 <PyInit__decimal@@Base+0xefcc>
   20598:	mov	x2, x20
   2059c:	mov	x1, x22
   205a0:	mov	x0, x19
   205a4:	bl	161ec <PyInit__decimal@@Base+0x5264>
   205a8:	b	2011c <PyInit__decimal@@Base+0xf194>
   205ac:	sub	sp, sp, #0x2a0
   205b0:	stp	x29, x30, [sp]
   205b4:	mov	x29, sp
   205b8:	stp	x19, x20, [sp, #16]
   205bc:	mov	x20, x0
   205c0:	mov	w0, #0x30                  	// #48
   205c4:	stp	x21, x22, [sp, #32]
   205c8:	mov	x19, x1
   205cc:	mov	x22, x2
   205d0:	stp	x23, x24, [sp, #48]
   205d4:	mov	x21, x5
   205d8:	stp	x25, x26, [sp, #64]
   205dc:	mov	x26, x3
   205e0:	stp	x27, x28, [sp, #80]
   205e4:	strb	w0, [sp, #112]
   205e8:	mov	x0, #0x40                  	// #64
   205ec:	stp	xzr, x0, [sp, #136]
   205f0:	add	x0, sp, #0xa0
   205f4:	ldrb	w23, [x3]
   205f8:	str	x0, [sp, #152]
   205fc:	ldrb	w0, [x2]
   20600:	str	w0, [sp, #100]
   20604:	eor	w23, w0, w23
   20608:	stp	xzr, xzr, [sp, #120]
   2060c:	and	w23, w23, #0x1
   20610:	ldr	x1, [x3, #8]
   20614:	ldr	x0, [x2, #8]
   20618:	ldr	x3, [x2, #40]
   2061c:	cmp	x0, x1
   20620:	ldr	x2, [x2, #24]
   20624:	csel	x28, x0, x1, le
   20628:	add	x2, x3, x2, lsl #3
   2062c:	ldur	x2, [x2, #-8]
   20630:	cbnz	x2, 20680 <PyInit__decimal@@Base+0xf6f8>
   20634:	mov	x2, x5
   20638:	mov	x1, x22
   2063c:	mov	x0, x19
   20640:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   20644:	cbz	w0, 206cc <PyInit__decimal@@Base+0xf744>
   20648:	str	x28, [x19, #8]
   2064c:	mov	w1, w23
   20650:	mov	x0, x20
   20654:	mov	x3, #0x0                   	// #0
   20658:	mov	x2, #0x0                   	// #0
   2065c:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   20660:	ldp	x29, x30, [sp]
   20664:	ldp	x19, x20, [sp, #16]
   20668:	ldp	x21, x22, [sp, #32]
   2066c:	ldp	x23, x24, [sp, #48]
   20670:	ldp	x25, x26, [sp, #64]
   20674:	ldp	x27, x28, [sp, #80]
   20678:	add	sp, sp, #0x2a0
   2067c:	ret
   20680:	ldr	x2, [x22, #16]
   20684:	ldr	x3, [x26, #16]
   20688:	add	x2, x0, x2
   2068c:	add	x3, x1, x3
   20690:	subs	x2, x2, x3
   20694:	b.pl	206f0 <PyInit__decimal@@Base+0xf768>  // b.nfrst
   20698:	cmp	x0, x1
   2069c:	b.le	206b8 <PyInit__decimal@@Base+0xf730>
   206a0:	sub	x2, x0, x1
   206a4:	mov	x3, x5
   206a8:	mov	x1, x22
   206ac:	mov	x0, x19
   206b0:	bl	19718 <PyInit__decimal@@Base+0x8790>
   206b4:	b	20644 <PyInit__decimal@@Base+0xf6bc>
   206b8:	mov	x2, x5
   206bc:	mov	x1, x22
   206c0:	mov	x0, x19
   206c4:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   206c8:	cbnz	w0, 2064c <PyInit__decimal@@Base+0xf6c4>
   206cc:	mov	x0, x20
   206d0:	mov	w2, #0x4                   	// #4
   206d4:	mov	w1, #0x0                   	// #0
   206d8:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   206dc:	mov	x0, x19
   206e0:	mov	w2, #0x4                   	// #4
   206e4:	mov	w1, #0x0                   	// #0
   206e8:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   206ec:	b	20898 <PyInit__decimal@@Base+0xf910>
   206f0:	ldr	x3, [x4]
   206f4:	mov	x27, x4
   206f8:	cmp	x2, x3
   206fc:	b.le	2070c <PyInit__decimal@@Base+0xf784>
   20700:	ldr	w0, [x21]
   20704:	orr	w0, w0, #0x8
   20708:	b	209e0 <PyInit__decimal@@Base+0xfa58>
   2070c:	cmp	x0, x1
   20710:	b.eq	2073c <PyInit__decimal@@Base+0xf7b4>  // b.none
   20714:	sub	x2, x0, x1
   20718:	mov	x3, x5
   2071c:	cmp	x2, #0x0
   20720:	add	x24, sp, #0x70
   20724:	b.le	208d0 <PyInit__decimal@@Base+0xf948>
   20728:	mov	x1, x22
   2072c:	mov	x0, x24
   20730:	bl	19718 <PyInit__decimal@@Base+0x8790>
   20734:	cbz	w0, 206cc <PyInit__decimal@@Base+0xf744>
   20738:	mov	x22, x24
   2073c:	ldr	x1, [x22, #24]
   20740:	cmp	x20, x22
   20744:	ldr	x0, [x26, #24]
   20748:	add	x24, x1, #0x1
   2074c:	sub	x24, x24, x0
   20750:	b.ne	208ec <PyInit__decimal@@Base+0xf964>  // b.any
   20754:	cmp	x1, x24
   20758:	b.le	208ec <PyInit__decimal@@Base+0xf964>
   2075c:	cmp	x19, x22
   20760:	ldr	x25, [x26, #24]
   20764:	b.ne	2094c <PyInit__decimal@@Base+0xf9c4>  // b.any
   20768:	ldr	x0, [x19, #24]
   2076c:	cmp	x25, x0
   20770:	b.ge	2094c <PyInit__decimal@@Base+0xf9c4>  // b.tcont
   20774:	ldr	x5, [x26, #24]
   20778:	cmp	x5, #0x1
   2077c:	b.ne	209b0 <PyInit__decimal@@Base+0xfa28>  // b.any
   20780:	ldr	x3, [x26, #40]
   20784:	ldr	x2, [x22, #24]
   20788:	ldr	x3, [x3]
   2078c:	cmp	x2, #0x1
   20790:	ldr	x4, [x19, #40]
   20794:	ldr	x0, [x20, #40]
   20798:	ldr	x1, [x22, #40]
   2079c:	b.ne	2099c <PyInit__decimal@@Base+0xfa14>  // b.any
   207a0:	ldr	x2, [x1]
   207a4:	udiv	x1, x2, x3
   207a8:	str	x1, [x0]
   207ac:	msub	x1, x1, x3, x2
   207b0:	str	x1, [x4]
   207b4:	ldr	x0, [x20, #40]
   207b8:	adrp	x22, 45000 <PyInit__decimal@@Base+0x34078>
   207bc:	mov	x1, x24
   207c0:	bl	161c8 <PyInit__decimal@@Base+0x5240>
   207c4:	mov	x24, x0
   207c8:	ldr	x1, [x22, #1688]
   207cc:	cmp	x1, x0
   207d0:	csel	x1, x1, x0, ge  // ge = tcont
   207d4:	ldr	x0, [x20, #32]
   207d8:	cmp	x1, x0
   207dc:	b.eq	207fc <PyInit__decimal@@Base+0xf874>  // b.none
   207e0:	ldrb	w2, [x20]
   207e4:	tbz	w2, #5, 20a24 <PyInit__decimal@@Base+0xfa9c>
   207e8:	cmp	x1, x0
   207ec:	b.le	207fc <PyInit__decimal@@Base+0xf874>
   207f0:	mov	x2, x21
   207f4:	mov	x0, x20
   207f8:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   207fc:	str	x24, [x20, #24]
   20800:	mov	x0, x20
   20804:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   20808:	str	xzr, [x20, #8]
   2080c:	ldrb	w0, [x20]
   20810:	ldr	x1, [x20, #16]
   20814:	and	w0, w0, #0xfffffff0
   20818:	orr	w23, w23, w0
   2081c:	strb	w23, [x20]
   20820:	ldr	x0, [x27]
   20824:	cmp	x1, x0
   20828:	b.gt	20700 <PyInit__decimal@@Base+0xf778>
   2082c:	ldr	x0, [x19, #40]
   20830:	mov	x1, x25
   20834:	bl	161c8 <PyInit__decimal@@Base+0x5240>
   20838:	mov	x20, x0
   2083c:	ldr	x1, [x22, #1688]
   20840:	cmp	x1, x0
   20844:	csel	x1, x1, x0, ge  // ge = tcont
   20848:	ldr	x0, [x19, #32]
   2084c:	cmp	x1, x0
   20850:	b.eq	20870 <PyInit__decimal@@Base+0xf8e8>  // b.none
   20854:	ldrb	w2, [x19]
   20858:	tbz	w2, #5, 20a34 <PyInit__decimal@@Base+0xfaac>
   2085c:	cmp	x1, x0
   20860:	b.le	20870 <PyInit__decimal@@Base+0xf8e8>
   20864:	mov	x2, x21
   20868:	mov	x0, x19
   2086c:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   20870:	str	x20, [x19, #24]
   20874:	mov	x0, x19
   20878:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   2087c:	str	x28, [x19, #8]
   20880:	ldrb	w0, [x19]
   20884:	ldr	w1, [sp, #100]
   20888:	and	w0, w0, #0xfffffff0
   2088c:	and	w26, w1, #0x1
   20890:	orr	w26, w0, w26
   20894:	strb	w26, [x19]
   20898:	ldrb	w0, [sp, #112]
   2089c:	tst	w0, #0xe0
   208a0:	b.ne	208b4 <PyInit__decimal@@Base+0xf92c>  // b.any
   208a4:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   208a8:	ldr	x1, [x0, #1720]
   208ac:	ldr	x0, [sp, #152]
   208b0:	blr	x1
   208b4:	ldrb	w0, [sp, #112]
   208b8:	tbnz	w0, #4, 20660 <PyInit__decimal@@Base+0xf6d8>
   208bc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   208c0:	ldr	x1, [x0, #1720]
   208c4:	add	x0, sp, #0x70
   208c8:	blr	x1
   208cc:	b	20660 <PyInit__decimal@@Base+0xf6d8>
   208d0:	sub	x2, x1, x0
   208d4:	mov	x1, x26
   208d8:	mov	x0, x24
   208dc:	bl	19718 <PyInit__decimal@@Base+0x8790>
   208e0:	cbz	w0, 206cc <PyInit__decimal@@Base+0xf744>
   208e4:	mov	x26, x24
   208e8:	b	2073c <PyInit__decimal@@Base+0xf7b4>
   208ec:	cmp	x20, x26
   208f0:	b.ne	208fc <PyInit__decimal@@Base+0xf974>  // b.any
   208f4:	cmp	x0, x24
   208f8:	b.gt	2075c <PyInit__decimal@@Base+0xf7d4>
   208fc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   20900:	ldr	x1, [x0, #1688]
   20904:	ldr	x0, [x20, #32]
   20908:	cmp	x1, x24
   2090c:	csel	x1, x1, x24, ge  // ge = tcont
   20910:	cmp	x1, x0
   20914:	b.eq	2075c <PyInit__decimal@@Base+0xf7d4>  // b.none
   20918:	ldrb	w2, [x20]
   2091c:	tbz	w2, #5, 2093c <PyInit__decimal@@Base+0xf9b4>
   20920:	cmp	x1, x0
   20924:	b.le	2075c <PyInit__decimal@@Base+0xf7d4>
   20928:	mov	x2, x21
   2092c:	mov	x0, x20
   20930:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   20934:	cbnz	w0, 2075c <PyInit__decimal@@Base+0xf7d4>
   20938:	b	206cc <PyInit__decimal@@Base+0xf744>
   2093c:	mov	x2, x21
   20940:	mov	x0, x20
   20944:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   20948:	b	20934 <PyInit__decimal@@Base+0xf9ac>
   2094c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   20950:	ldr	x1, [x0, #1688]
   20954:	ldr	x0, [x19, #32]
   20958:	cmp	x1, x25
   2095c:	csel	x1, x1, x25, ge  // ge = tcont
   20960:	cmp	x1, x0
   20964:	b.eq	20774 <PyInit__decimal@@Base+0xf7ec>  // b.none
   20968:	ldrb	w2, [x19]
   2096c:	tbz	w2, #5, 2098c <PyInit__decimal@@Base+0xfa04>
   20970:	cmp	x1, x0
   20974:	b.le	20774 <PyInit__decimal@@Base+0xf7ec>
   20978:	mov	x2, x21
   2097c:	mov	x0, x19
   20980:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   20984:	cbnz	w0, 20774 <PyInit__decimal@@Base+0xf7ec>
   20988:	b	206cc <PyInit__decimal@@Base+0xf744>
   2098c:	mov	x2, x21
   20990:	mov	x0, x19
   20994:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   20998:	b	20984 <PyInit__decimal@@Base+0xf9fc>
   2099c:	str	x4, [sp, #104]
   209a0:	bl	11f90 <PyInit__decimal@@Base+0x1008>
   209a4:	ldr	x4, [sp, #104]
   209a8:	str	x0, [x4]
   209ac:	b	207b4 <PyInit__decimal@@Base+0xf82c>
   209b0:	cmp	x5, #0x400
   209b4:	b.gt	209e8 <PyInit__decimal@@Base+0xfa60>
   209b8:	ldr	x4, [x22, #24]
   209bc:	ldr	x1, [x19, #40]
   209c0:	ldr	x0, [x20, #40]
   209c4:	ldr	x2, [x22, #40]
   209c8:	ldr	x3, [x26, #40]
   209cc:	bl	12024 <PyInit__decimal@@Base+0x109c>
   209d0:	cmn	w0, #0x1
   209d4:	b.ne	207b4 <PyInit__decimal@@Base+0xf82c>  // b.any
   209d8:	ldr	w0, [x21]
   209dc:	orr	w0, w0, #0x200
   209e0:	str	w0, [x21]
   209e4:	b	206cc <PyInit__decimal@@Base+0xf744>
   209e8:	mov	x0, x20
   209ec:	mov	x4, x21
   209f0:	mov	x3, x26
   209f4:	mov	x2, x22
   209f8:	mov	x1, x19
   209fc:	bl	1df7c <PyInit__decimal@@Base+0xcff4>
   20a00:	ldrb	w0, [x20]
   20a04:	tst	w0, #0xe
   20a08:	b.ne	206cc <PyInit__decimal@@Base+0xf744>  // b.any
   20a0c:	ldrb	w0, [x19]
   20a10:	tst	w0, #0xe
   20a14:	b.ne	206cc <PyInit__decimal@@Base+0xf744>  // b.any
   20a18:	ldr	x25, [x19, #24]
   20a1c:	ldr	x24, [x20, #24]
   20a20:	b	207b4 <PyInit__decimal@@Base+0xf82c>
   20a24:	mov	x2, x21
   20a28:	mov	x0, x20
   20a2c:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   20a30:	b	207fc <PyInit__decimal@@Base+0xf874>
   20a34:	mov	x2, x21
   20a38:	mov	x0, x19
   20a3c:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   20a40:	b	20870 <PyInit__decimal@@Base+0xf8e8>
   20a44:	stp	x29, x30, [sp, #-80]!
   20a48:	mov	x29, sp
   20a4c:	stp	x19, x20, [sp, #16]
   20a50:	mov	x20, x1
   20a54:	mov	x19, x5
   20a58:	stp	x21, x22, [sp, #32]
   20a5c:	mov	x21, x0
   20a60:	mov	x22, x2
   20a64:	stp	x23, x24, [sp, #48]
   20a68:	mov	x23, x3
   20a6c:	mov	x24, x4
   20a70:	str	x25, [sp, #64]
   20a74:	ldrb	w6, [x2]
   20a78:	ldrb	w7, [x3]
   20a7c:	eor	w25, w6, w7
   20a80:	orr	w6, w6, w7
   20a84:	and	w25, w25, #0x1
   20a88:	tst	w6, #0xe
   20a8c:	b.eq	20ba4 <PyInit__decimal@@Base+0xfc1c>  // b.none
   20a90:	mov	x4, x5
   20a94:	mov	x3, x24
   20a98:	mov	x2, x23
   20a9c:	mov	x1, x22
   20aa0:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   20aa4:	cbz	w0, 20acc <PyInit__decimal@@Base+0xfb44>
   20aa8:	mov	x2, x19
   20aac:	mov	x1, x21
   20ab0:	mov	x0, x20
   20ab4:	ldp	x19, x20, [sp, #16]
   20ab8:	ldp	x21, x22, [sp, #32]
   20abc:	ldp	x23, x24, [sp, #48]
   20ac0:	ldr	x25, [sp, #64]
   20ac4:	ldp	x29, x30, [sp], #80
   20ac8:	b	18b60 <PyInit__decimal@@Base+0x7bd8>
   20acc:	ldrb	w1, [x22]
   20ad0:	ldrb	w0, [x23]
   20ad4:	and	w0, w0, #0x2
   20ad8:	tbz	w1, #1, 20b30 <PyInit__decimal@@Base+0xfba8>
   20adc:	cbz	w0, 20b24 <PyInit__decimal@@Base+0xfb9c>
   20ae0:	mov	w2, #0x4                   	// #4
   20ae4:	mov	w1, #0x0                   	// #0
   20ae8:	mov	x0, x21
   20aec:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   20af0:	mov	x0, x20
   20af4:	mov	w2, #0x4                   	// #4
   20af8:	mov	w1, #0x0                   	// #0
   20afc:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   20b00:	ldr	w0, [x19]
   20b04:	orr	w0, w0, #0x100
   20b08:	str	w0, [x19]
   20b0c:	ldp	x19, x20, [sp, #16]
   20b10:	ldp	x21, x22, [sp, #32]
   20b14:	ldp	x23, x24, [sp, #48]
   20b18:	ldr	x25, [sp, #64]
   20b1c:	ldp	x29, x30, [sp], #80
   20b20:	ret
   20b24:	mov	w1, w25
   20b28:	mov	w2, #0x2                   	// #2
   20b2c:	b	20ae8 <PyInit__decimal@@Base+0xfb60>
   20b30:	cbz	w0, 20ba0 <PyInit__decimal@@Base+0xfc18>
   20b34:	mov	x2, x19
   20b38:	mov	x1, x22
   20b3c:	mov	x0, x20
   20b40:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   20b44:	mov	x2, x19
   20b48:	cbnz	w0, 20b6c <PyInit__decimal@@Base+0xfbe4>
   20b4c:	mov	x0, x21
   20b50:	mov	w1, #0x200                 	// #512
   20b54:	ldp	x19, x20, [sp, #16]
   20b58:	ldp	x21, x22, [sp, #32]
   20b5c:	ldp	x23, x24, [sp, #48]
   20b60:	ldr	x25, [sp, #64]
   20b64:	ldp	x29, x30, [sp], #80
   20b68:	b	18904 <PyInit__decimal@@Base+0x797c>
   20b6c:	mov	x1, x24
   20b70:	mov	x0, x20
   20b74:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   20b78:	mov	w1, w25
   20b7c:	mov	x0, x21
   20b80:	ldp	x19, x20, [sp, #16]
   20b84:	mov	x3, #0x0                   	// #0
   20b88:	ldp	x21, x22, [sp, #32]
   20b8c:	mov	x2, #0x0                   	// #0
   20b90:	ldp	x23, x24, [sp, #48]
   20b94:	ldr	x25, [sp, #64]
   20b98:	ldp	x29, x30, [sp], #80
   20b9c:	b	181b4 <PyInit__decimal@@Base+0x722c>
   20ba0:	bl	6860 <abort@plt>
   20ba4:	ldr	x6, [x3, #24]
   20ba8:	ldr	x7, [x3, #40]
   20bac:	add	x6, x7, x6, lsl #3
   20bb0:	ldur	x6, [x6, #-8]
   20bb4:	cbnz	x6, 20c1c <PyInit__decimal@@Base+0xfc94>
   20bb8:	ldr	x1, [x2, #24]
   20bbc:	ldr	x2, [x2, #40]
   20bc0:	add	x1, x2, x1, lsl #3
   20bc4:	ldur	x1, [x1, #-8]
   20bc8:	cbnz	x1, 20bf0 <PyInit__decimal@@Base+0xfc68>
   20bcc:	mov	w2, #0x4                   	// #4
   20bd0:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   20bd4:	mov	x0, x20
   20bd8:	mov	w2, #0x4                   	// #4
   20bdc:	mov	w1, #0x0                   	// #0
   20be0:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   20be4:	ldr	w0, [x19]
   20be8:	orr	w0, w0, #0x10
   20bec:	b	20b08 <PyInit__decimal@@Base+0xfb80>
   20bf0:	mov	w1, w25
   20bf4:	mov	w2, #0x2                   	// #2
   20bf8:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   20bfc:	mov	x0, x20
   20c00:	mov	w1, #0x0                   	// #0
   20c04:	mov	w2, #0x4                   	// #4
   20c08:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   20c0c:	ldr	w0, [x19]
   20c10:	mov	w1, #0x104                 	// #260
   20c14:	orr	w0, w0, w1
   20c18:	b	20b08 <PyInit__decimal@@Base+0xfb80>
   20c1c:	bl	205ac <PyInit__decimal@@Base+0xf624>
   20c20:	mov	x2, x19
   20c24:	mov	x1, x24
   20c28:	mov	x0, x21
   20c2c:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   20c30:	mov	x2, x19
   20c34:	mov	x1, x24
   20c38:	mov	x0, x20
   20c3c:	ldp	x19, x20, [sp, #16]
   20c40:	ldp	x21, x22, [sp, #32]
   20c44:	ldp	x23, x24, [sp, #48]
   20c48:	ldr	x25, [sp, #64]
   20c4c:	ldp	x29, x30, [sp], #80
   20c50:	b	19f98 <PyInit__decimal@@Base+0x9010>
   20c54:	sub	sp, sp, #0x270
   20c58:	mov	w5, #0x30                  	// #48
   20c5c:	stp	x29, x30, [sp]
   20c60:	mov	x29, sp
   20c64:	stp	x19, x20, [sp, #16]
   20c68:	mov	x20, x1
   20c6c:	mov	x19, x4
   20c70:	stp	x21, x22, [sp, #32]
   20c74:	mov	x22, x0
   20c78:	mov	x21, x2
   20c7c:	stp	x23, x24, [sp, #48]
   20c80:	strb	w5, [sp, #64]
   20c84:	mov	x5, #0x40                  	// #64
   20c88:	stp	xzr, x5, [sp, #88]
   20c8c:	add	x5, sp, #0x70
   20c90:	ldrb	w6, [x2]
   20c94:	str	x5, [sp, #104]
   20c98:	ldrb	w5, [x1]
   20c9c:	stp	xzr, xzr, [sp, #72]
   20ca0:	eor	w23, w5, w6
   20ca4:	orr	w5, w5, w6
   20ca8:	and	w23, w23, #0x1
   20cac:	tst	w5, #0xe
   20cb0:	b.eq	20d2c <PyInit__decimal@@Base+0xfda4>  // b.none
   20cb4:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   20cb8:	cbnz	w0, 20cf4 <PyInit__decimal@@Base+0xfd6c>
   20cbc:	ldrb	w1, [x20]
   20cc0:	ldrb	w0, [x21]
   20cc4:	and	w0, w0, #0x2
   20cc8:	tbz	w1, #1, 20d0c <PyInit__decimal@@Base+0xfd84>
   20ccc:	cbz	w0, 20ce4 <PyInit__decimal@@Base+0xfd5c>
   20cd0:	mov	x2, x19
   20cd4:	mov	x0, x22
   20cd8:	mov	w1, #0x100                 	// #256
   20cdc:	bl	18904 <PyInit__decimal@@Base+0x797c>
   20ce0:	b	20cf4 <PyInit__decimal@@Base+0xfd6c>
   20ce4:	mov	w1, w23
   20ce8:	mov	x0, x22
   20cec:	mov	w2, #0x2                   	// #2
   20cf0:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   20cf4:	ldp	x29, x30, [sp]
   20cf8:	ldp	x19, x20, [sp, #16]
   20cfc:	ldp	x21, x22, [sp, #32]
   20d00:	ldp	x23, x24, [sp, #48]
   20d04:	add	sp, sp, #0x270
   20d08:	ret
   20d0c:	cbz	w0, 20d28 <PyInit__decimal@@Base+0xfda0>
   20d10:	mov	w1, w23
   20d14:	mov	x0, x22
   20d18:	mov	x3, #0x0                   	// #0
   20d1c:	mov	x2, #0x0                   	// #0
   20d20:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   20d24:	b	20cf4 <PyInit__decimal@@Base+0xfd6c>
   20d28:	bl	6860 <abort@plt>
   20d2c:	ldr	x1, [x2, #24]
   20d30:	ldr	x2, [x2, #40]
   20d34:	add	x1, x2, x1, lsl #3
   20d38:	ldur	x1, [x1, #-8]
   20d3c:	cbnz	x1, 20d7c <PyInit__decimal@@Base+0xfdf4>
   20d40:	ldr	x1, [x20, #24]
   20d44:	ldr	x2, [x20, #40]
   20d48:	add	x1, x2, x1, lsl #3
   20d4c:	ldur	x1, [x1, #-8]
   20d50:	cbnz	x1, 20d60 <PyInit__decimal@@Base+0xfdd8>
   20d54:	mov	x2, x4
   20d58:	mov	w1, #0x10                  	// #16
   20d5c:	b	20cdc <PyInit__decimal@@Base+0xfd54>
   20d60:	mov	w1, w23
   20d64:	mov	w2, #0x2                   	// #2
   20d68:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   20d6c:	ldr	w0, [x19]
   20d70:	orr	w0, w0, #0x4
   20d74:	str	w0, [x19]
   20d78:	b	20cf4 <PyInit__decimal@@Base+0xfd6c>
   20d7c:	add	x23, sp, #0x40
   20d80:	mov	x5, x4
   20d84:	mov	x24, x3
   20d88:	mov	x4, x3
   20d8c:	mov	x2, x20
   20d90:	mov	x3, x21
   20d94:	mov	x1, x23
   20d98:	bl	205ac <PyInit__decimal@@Base+0xf624>
   20d9c:	ldrb	w0, [sp, #64]
   20da0:	tst	w0, #0xe0
   20da4:	b.ne	20db8 <PyInit__decimal@@Base+0xfe30>  // b.any
   20da8:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   20dac:	ldr	x1, [x0, #1720]
   20db0:	ldr	x0, [sp, #104]
   20db4:	blr	x1
   20db8:	ldrb	w0, [sp, #64]
   20dbc:	tbnz	w0, #4, 20dd0 <PyInit__decimal@@Base+0xfe48>
   20dc0:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   20dc4:	ldr	x1, [x0, #1720]
   20dc8:	mov	x0, x23
   20dcc:	blr	x1
   20dd0:	mov	x2, x19
   20dd4:	mov	x1, x24
   20dd8:	mov	x0, x22
   20ddc:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   20de0:	b	20cf4 <PyInit__decimal@@Base+0xfd6c>
   20de4:	sub	sp, sp, #0x560
   20de8:	stp	x29, x30, [sp]
   20dec:	mov	x29, sp
   20df0:	stp	x19, x20, [sp, #16]
   20df4:	mov	x19, x0
   20df8:	mov	x0, #0x40                  	// #64
   20dfc:	stp	xzr, x0, [sp, #184]
   20e00:	mov	x20, x5
   20e04:	stp	xzr, x0, [sp, #232]
   20e08:	add	x0, sp, #0x360
   20e0c:	stp	x23, x24, [sp, #48]
   20e10:	mov	x23, x2
   20e14:	and	w24, w3, #0xff
   20e18:	str	x0, [sp, #248]
   20e1c:	mov	w2, #0x30                  	// #48
   20e20:	ldr	x0, [x4, #8]
   20e24:	str	x0, [sp, #120]
   20e28:	ldr	x0, [x4, #16]
   20e2c:	add	x3, sp, #0x160
   20e30:	str	x0, [sp, #128]
   20e34:	ldr	w0, [x4, #44]
   20e38:	stp	x21, x22, [sp, #32]
   20e3c:	mov	x22, x4
   20e40:	add	x21, sp, #0xa0
   20e44:	stp	x25, x26, [sp, #64]
   20e48:	stp	x27, x28, [sp, #80]
   20e4c:	str	w0, [sp, #156]
   20e50:	strb	w2, [sp, #160]
   20e54:	stp	xzr, xzr, [sp, #168]
   20e58:	str	x3, [sp, #200]
   20e5c:	strb	w2, [sp, #208]
   20e60:	stp	xzr, xzr, [sp, #216]
   20e64:	ldr	x2, [x4]
   20e68:	ldp	x3, x0, [x23, #8]
   20e6c:	str	xzr, [sp, #136]
   20e70:	str	wzr, [sp, #152]
   20e74:	add	x0, x0, x3
   20e78:	add	x0, x0, x2
   20e7c:	add	x2, x0, #0x2
   20e80:	str	x2, [sp, #112]
   20e84:	mov	x2, #0x600000000           	// #25769803776
   20e88:	str	x2, [sp, #144]
   20e8c:	ldrb	w2, [x23]
   20e90:	tbz	w2, #0, 20f70 <PyInit__decimal@@Base+0xffe8>
   20e94:	add	x0, x0, #0x3
   20e98:	mov	x2, x1
   20e9c:	mov	x4, x5
   20ea0:	add	x3, sp, #0x70
   20ea4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x31078>
   20ea8:	add	x1, x1, #0xc58
   20eac:	str	x0, [sp, #112]
   20eb0:	mov	x0, x21
   20eb4:	bl	1e8c0 <PyInit__decimal@@Base+0xd938>
   20eb8:	ldr	w1, [x20]
   20ebc:	mov	w0, #0x3be                 	// #958
   20ec0:	tst	w1, w0
   20ec4:	b.eq	20f80 <PyInit__decimal@@Base+0xfff8>  // b.none
   20ec8:	mov	x0, x19
   20ecc:	mov	w2, #0x4                   	// #4
   20ed0:	mov	w1, #0x0                   	// #0
   20ed4:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   20ed8:	ldrb	w0, [sp, #160]
   20edc:	tst	w0, #0xe0
   20ee0:	b.ne	20ef4 <PyInit__decimal@@Base+0xff6c>  // b.any
   20ee4:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   20ee8:	ldr	x1, [x0, #1720]
   20eec:	ldr	x0, [sp, #200]
   20ef0:	blr	x1
   20ef4:	ldrb	w0, [sp, #160]
   20ef8:	tbnz	w0, #4, 20f0c <PyInit__decimal@@Base+0xff84>
   20efc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   20f00:	ldr	x1, [x0, #1720]
   20f04:	mov	x0, x21
   20f08:	blr	x1
   20f0c:	ldrb	w0, [sp, #208]
   20f10:	tst	w0, #0xe0
   20f14:	b.ne	20f28 <PyInit__decimal@@Base+0xffa0>  // b.any
   20f18:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   20f1c:	ldr	x1, [x0, #1720]
   20f20:	ldr	x0, [sp, #248]
   20f24:	blr	x1
   20f28:	ldrb	w0, [sp, #208]
   20f2c:	tbnz	w0, #4, 20f40 <PyInit__decimal@@Base+0xffb8>
   20f30:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   20f34:	ldr	x1, [x0, #1720]
   20f38:	add	x0, sp, #0xd0
   20f3c:	blr	x1
   20f40:	mov	x2, x20
   20f44:	mov	x1, x22
   20f48:	mov	x0, x19
   20f4c:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   20f50:	ldp	x29, x30, [sp]
   20f54:	ldp	x19, x20, [sp, #16]
   20f58:	ldp	x21, x22, [sp, #32]
   20f5c:	ldp	x23, x24, [sp, #48]
   20f60:	ldp	x25, x26, [sp, #64]
   20f64:	ldp	x27, x28, [sp, #80]
   20f68:	add	sp, sp, #0x560
   20f6c:	ret
   20f70:	mov	x2, x5
   20f74:	mov	x0, x21
   20f78:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   20f7c:	cbz	w0, 20ec8 <PyInit__decimal@@Base+0xff40>
   20f80:	add	x25, sp, #0x70
   20f84:	mov	x0, x23
   20f88:	add	x1, x25, #0x1c
   20f8c:	bl	18a2c <PyInit__decimal@@Base+0x7aa4>
   20f90:	mov	x2, x0
   20f94:	ldr	w0, [sp, #140]
   20f98:	tbz	w0, #8, 21120 <PyInit__decimal@@Base+0x10198>
   20f9c:	add	x26, sp, #0xd0
   20fa0:	mov	x2, x20
   20fa4:	mov	x1, x23
   20fa8:	mov	x0, x26
   20fac:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   20fb0:	cbz	w0, 20ec8 <PyInit__decimal@@Base+0xff40>
   20fb4:	mov	x0, #0x2                   	// #2
   20fb8:	str	x0, [sp, #104]
   20fbc:	mov	w0, #0xffffff90            	// #-112
   20fc0:	strb	w0, [sp, #304]
   20fc4:	mov	x0, #0x1                   	// #1
   20fc8:	add	x27, sp, #0x100
   20fcc:	stp	x0, x0, [sp, #320]
   20fd0:	add	x23, sp, #0x64
   20fd4:	add	x28, sp, #0x130
   20fd8:	str	x0, [sp, #336]
   20fdc:	add	x0, sp, #0x68
   20fe0:	str	wzr, [sp, #100]
   20fe4:	str	xzr, [sp, #312]
   20fe8:	str	x0, [sp, #344]
   20fec:	mov	x0, x27
   20ff0:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   20ff4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x31078>
   20ff8:	mov	x2, x20
   20ffc:	add	x1, x1, #0xc58
   21000:	mov	x0, x19
   21004:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   21008:	ldrb	w0, [sp, #208]
   2100c:	tst	w0, #0xe
   21010:	b.ne	21028 <PyInit__decimal@@Base+0x100a0>  // b.any
   21014:	ldr	x0, [sp, #232]
   21018:	ldr	x1, [sp, #248]
   2101c:	add	x0, x1, x0, lsl #3
   21020:	ldur	x0, [x0, #-8]
   21024:	cbz	x0, 210c8 <PyInit__decimal@@Base+0x10140>
   21028:	mov	x0, x26
   2102c:	bl	187fc <PyInit__decimal@@Base+0x7874>
   21030:	cbnz	w0, 21094 <PyInit__decimal@@Base+0x1010c>
   21034:	mov	x4, x23
   21038:	mov	x3, x25
   2103c:	mov	x2, x21
   21040:	mov	x1, x21
   21044:	mov	x0, x21
   21048:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
   2104c:	mov	x1, x26
   21050:	mov	x0, x26
   21054:	mov	x4, x23
   21058:	mov	x3, x27
   2105c:	mov	x2, x28
   21060:	bl	20c54 <PyInit__decimal@@Base+0xfccc>
   21064:	ldrb	w0, [sp, #160]
   21068:	ldrb	w1, [sp, #208]
   2106c:	orr	w0, w0, w1
   21070:	tst	w0, #0xc
   21074:	b.eq	21008 <PyInit__decimal@@Base+0x10080>  // b.none
   21078:	ldr	w1, [sp, #100]
   2107c:	mov	w0, #0x3be                 	// #958
   21080:	mov	x2, x20
   21084:	and	w1, w1, w0
   21088:	mov	x0, x19
   2108c:	bl	18904 <PyInit__decimal@@Base+0x797c>
   21090:	b	210d8 <PyInit__decimal@@Base+0x10150>
   21094:	mov	x1, x19
   21098:	mov	x0, x19
   2109c:	mov	x4, x23
   210a0:	mov	x3, x25
   210a4:	mov	x2, x21
   210a8:	bl	1c7ec <PyInit__decimal@@Base+0xb864>
   210ac:	ldr	w0, [x20]
   210b0:	ldr	w1, [sp, #100]
   210b4:	orr	w0, w0, w1
   210b8:	str	w0, [x20]
   210bc:	ldrb	w0, [x19]
   210c0:	tst	w0, #0xe
   210c4:	b.eq	21104 <PyInit__decimal@@Base+0x1017c>  // b.none
   210c8:	ldrb	w0, [x19]
   210cc:	and	w0, w0, #0xfffffffe
   210d0:	orr	w0, w24, w0
   210d4:	strb	w0, [x19]
   210d8:	ldrb	w0, [x19]
   210dc:	tbz	w0, #1, 20ed8 <PyInit__decimal@@Base+0xff50>
   210e0:	mov	x3, #0x1                   	// #1
   210e4:	mov	w1, w24
   210e8:	movk	x3, #0x4ec8, lsl #16
   210ec:	mov	x0, x19
   210f0:	movk	x3, #0x6d67, lsl #32
   210f4:	mov	x2, #0x1                   	// #1
   210f8:	movk	x3, #0x1bc1, lsl #48
   210fc:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   21100:	b	20ed8 <PyInit__decimal@@Base+0xff50>
   21104:	ldr	x0, [x19, #24]
   21108:	ldr	x2, [x19, #40]
   2110c:	add	x0, x2, x0, lsl #3
   21110:	ldur	x0, [x0, #-8]
   21114:	cbnz	x0, 21034 <PyInit__decimal@@Base+0x100ac>
   21118:	tbz	w1, #0, 21034 <PyInit__decimal@@Base+0x100ac>
   2111c:	b	210c8 <PyInit__decimal@@Base+0x10140>
   21120:	mov	x5, x20
   21124:	mov	x4, x25
   21128:	mov	w3, w24
   2112c:	mov	x1, x21
   21130:	mov	x0, x19
   21134:	bl	1cd8c <PyInit__decimal@@Base+0xbe04>
   21138:	b	210d8 <PyInit__decimal@@Base+0x10150>
   2113c:	stp	x29, x30, [sp, #-144]!
   21140:	mov	x29, sp
   21144:	stp	x19, x20, [sp, #16]
   21148:	mov	x19, x0
   2114c:	mov	x20, x2
   21150:	stp	x21, x22, [sp, #32]
   21154:	mov	x22, x1
   21158:	mov	x21, x4
   2115c:	stp	x23, x24, [sp, #48]
   21160:	mov	x24, x3
   21164:	stp	x25, x26, [sp, #64]
   21168:	str	x27, [sp, #80]
   2116c:	ldrb	w0, [x1]
   21170:	tst	w0, #0xe
   21174:	b.ne	211ec <PyInit__decimal@@Base+0x10264>  // b.any
   21178:	ldrb	w0, [x2]
   2117c:	tst	w0, #0xe
   21180:	b.ne	211ec <PyInit__decimal@@Base+0x10264>  // b.any
   21184:	mov	x0, x20
   21188:	bl	187e4 <PyInit__decimal@@Base+0x785c>
   2118c:	ldrb	w4, [x22]
   21190:	mov	w26, w0
   21194:	cbnz	w0, 21224 <PyInit__decimal@@Base+0x1029c>
   21198:	mov	w23, #0x0                   	// #0
   2119c:	tst	w4, #0xe
   211a0:	b.ne	21264 <PyInit__decimal@@Base+0x102dc>  // b.any
   211a4:	ldr	x0, [x22, #24]
   211a8:	ldr	x1, [x22, #40]
   211ac:	add	x0, x1, x0, lsl #3
   211b0:	ldur	x0, [x0, #-8]
   211b4:	cbnz	x0, 21264 <PyInit__decimal@@Base+0x102dc>
   211b8:	ldrb	w1, [x20]
   211bc:	tst	w1, #0xe
   211c0:	b.ne	2124c <PyInit__decimal@@Base+0x102c4>  // b.any
   211c4:	ldr	x0, [x20, #24]
   211c8:	ldr	x2, [x20, #40]
   211cc:	add	x0, x2, x0, lsl #3
   211d0:	ldur	x0, [x0, #-8]
   211d4:	cbnz	x0, 2124c <PyInit__decimal@@Base+0x102c4>
   211d8:	mov	x2, x21
   211dc:	mov	w1, #0x100                 	// #256
   211e0:	mov	x0, x19
   211e4:	bl	18904 <PyInit__decimal@@Base+0x797c>
   211e8:	b	21208 <PyInit__decimal@@Base+0x10280>
   211ec:	mov	x4, x21
   211f0:	mov	x3, x24
   211f4:	mov	x2, x20
   211f8:	mov	x1, x22
   211fc:	mov	x0, x19
   21200:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   21204:	cbz	w0, 21184 <PyInit__decimal@@Base+0x101fc>
   21208:	ldp	x19, x20, [sp, #16]
   2120c:	ldp	x21, x22, [sp, #32]
   21210:	ldp	x23, x24, [sp, #48]
   21214:	ldp	x25, x26, [sp, #64]
   21218:	ldr	x27, [sp, #80]
   2121c:	ldp	x29, x30, [sp], #144
   21220:	ret
   21224:	tbz	w4, #0, 21244 <PyInit__decimal@@Base+0x102bc>
   21228:	mov	x0, x20
   2122c:	bl	187fc <PyInit__decimal@@Base+0x7874>
   21230:	cmp	w0, #0x0
   21234:	cset	w23, ne  // ne = any
   21238:	and	w23, w23, #0xff
   2123c:	mov	w26, #0x1                   	// #1
   21240:	b	2119c <PyInit__decimal@@Base+0x10214>
   21244:	mov	w23, #0x0                   	// #0
   21248:	b	21238 <PyInit__decimal@@Base+0x102b0>
   2124c:	tbz	w1, #0, 21318 <PyInit__decimal@@Base+0x10390>
   21250:	mov	w1, w23
   21254:	mov	x0, x19
   21258:	mov	w2, #0x2                   	// #2
   2125c:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   21260:	b	21208 <PyInit__decimal@@Base+0x10280>
   21264:	tbz	w4, #0, 21274 <PyInit__decimal@@Base+0x102ec>
   21268:	cbz	w26, 211d8 <PyInit__decimal@@Base+0x10250>
   2126c:	ldrb	w0, [x20]
   21270:	tbnz	w0, #1, 211d8 <PyInit__decimal@@Base+0x10250>
   21274:	ldrb	w0, [x20]
   21278:	tbz	w0, #1, 212dc <PyInit__decimal@@Base+0x10354>
   2127c:	adrp	x14, 42000 <PyInit__decimal@@Base+0x31078>
   21280:	add	x14, x14, #0xc58
   21284:	mov	x1, x14
   21288:	mov	x0, x22
   2128c:	bl	16b04 <PyInit__decimal@@Base+0x5b7c>
   21290:	cbnz	w0, 215bc <PyInit__decimal@@Base+0x10634>
   21294:	ldr	x20, [x24]
   21298:	mov	x1, x14
   2129c:	mov	x3, x21
   212a0:	mov	x0, x19
   212a4:	sub	x2, x20, #0x1
   212a8:	bl	19718 <PyInit__decimal@@Base+0x8790>
   212ac:	mov	x0, #0x1                   	// #1
   212b0:	sub	x0, x0, x20
   212b4:	str	x0, [x19, #8]
   212b8:	mov	w1, #0x1040                	// #4160
   212bc:	ldrb	w0, [x19]
   212c0:	and	w0, w0, #0xfffffff0
   212c4:	orr	w23, w23, w0
   212c8:	strb	w23, [x19]
   212cc:	ldr	w0, [x21]
   212d0:	orr	w0, w1, w0
   212d4:	str	w0, [x21]
   212d8:	b	21208 <PyInit__decimal@@Base+0x10280>
   212dc:	and	w1, w0, #0xe
   212e0:	tbz	w4, #1, 21324 <PyInit__decimal@@Base+0x1039c>
   212e4:	cbnz	w1, 21314 <PyInit__decimal@@Base+0x1038c>
   212e8:	ldr	x1, [x20, #24]
   212ec:	ldr	x2, [x20, #40]
   212f0:	add	x1, x2, x1, lsl #3
   212f4:	ldur	x1, [x1, #-8]
   212f8:	cbnz	x1, 21314 <PyInit__decimal@@Base+0x1038c>
   212fc:	mov	x3, #0x0                   	// #0
   21300:	mov	x2, #0x1                   	// #1
   21304:	mov	w1, w23
   21308:	mov	x0, x19
   2130c:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   21310:	b	21208 <PyInit__decimal@@Base+0x10280>
   21314:	tbz	w0, #0, 21250 <PyInit__decimal@@Base+0x102c8>
   21318:	mov	x3, #0x0                   	// #0
   2131c:	mov	x2, #0x0                   	// #0
   21320:	b	21304 <PyInit__decimal@@Base+0x1037c>
   21324:	cbnz	w1, 2133c <PyInit__decimal@@Base+0x103b4>
   21328:	ldr	x0, [x20, #24]
   2132c:	ldr	x1, [x20, #40]
   21330:	add	x0, x1, x0, lsl #3
   21334:	ldur	x0, [x0, #-8]
   21338:	cbz	x0, 212fc <PyInit__decimal@@Base+0x10374>
   2133c:	adrp	x25, 42000 <PyInit__decimal@@Base+0x31078>
   21340:	mov	x0, x22
   21344:	add	x1, x25, #0xc58
   21348:	str	wzr, [sp, #96]
   2134c:	bl	172f8 <PyInit__decimal@@Base+0x6370>
   21350:	cbnz	w0, 2140c <PyInit__decimal@@Base+0x10484>
   21354:	mov	x0, x20
   21358:	bl	1863c <PyInit__decimal@@Base+0x76b4>
   2135c:	cbz	w0, 21404 <PyInit__decimal@@Base+0x1047c>
   21360:	ldrb	w0, [x20]
   21364:	tbnz	w0, #0, 212fc <PyInit__decimal@@Base+0x10374>
   21368:	ldr	x2, [x22, #8]
   2136c:	add	x26, sp, #0x60
   21370:	mov	x1, x20
   21374:	mov	x0, x19
   21378:	mov	x4, x26
   2137c:	mov	x3, x24
   21380:	neg	x2, x2
   21384:	bl	1d3b8 <PyInit__decimal@@Base+0xc430>
   21388:	ldr	w0, [sp, #96]
   2138c:	mov	w1, #0x3be                 	// #958
   21390:	ands	w0, w0, w1
   21394:	b.eq	213a0 <PyInit__decimal@@Base+0x10418>  // b.none
   21398:	ldr	w1, [x21]
   2139c:	b	212d0 <PyInit__decimal@@Base+0x10348>
   213a0:	mov	x1, x26
   213a4:	mov	x0, x19
   213a8:	bl	18a68 <PyInit__decimal@@Base+0x7ae0>
   213ac:	mov	x20, x0
   213b0:	ldr	x0, [x24]
   213b4:	sub	x0, x0, #0x1
   213b8:	cmp	x20, x0
   213bc:	b.le	213d0 <PyInit__decimal@@Base+0x10448>
   213c0:	ldr	w1, [x21]
   213c4:	mov	x20, x0
   213c8:	orr	w1, w1, #0x1000
   213cc:	str	w1, [x21]
   213d0:	mov	x3, x21
   213d4:	mov	x2, x20
   213d8:	add	x1, x25, #0xc58
   213dc:	mov	x0, x19
   213e0:	bl	19718 <PyInit__decimal@@Base+0x8790>
   213e4:	cbz	w0, 21208 <PyInit__decimal@@Base+0x10280>
   213e8:	ldrb	w0, [x19]
   213ec:	neg	x20, x20
   213f0:	str	x20, [x19, #8]
   213f4:	and	w0, w0, #0xfffffff0
   213f8:	orr	w23, w23, w0
   213fc:	strb	w23, [x19]
   21400:	b	21208 <PyInit__decimal@@Base+0x10280>
   21404:	ldrb	w0, [x22]
   21408:	tbz	w0, #0, 21478 <PyInit__decimal@@Base+0x104f0>
   2140c:	ldr	x1, [x22, #8]
   21410:	str	x1, [sp, #104]
   21414:	ldp	x4, x27, [x20, #8]
   21418:	ldr	x1, [x22, #16]
   2141c:	str	x1, [sp, #112]
   21420:	ldr	x1, [x22, #24]
   21424:	str	x1, [sp, #120]
   21428:	ldrb	w0, [x22]
   2142c:	add	x27, x4, x27
   21430:	ldr	x1, [x22, #32]
   21434:	str	x1, [sp, #128]
   21438:	ldr	x1, [x22, #40]
   2143c:	and	w0, w0, #0xe
   21440:	str	x1, [sp, #136]
   21444:	mov	w1, #0x50                  	// #80
   21448:	orr	w0, w0, w1
   2144c:	mov	x1, x21
   21450:	strb	w0, [sp, #96]
   21454:	add	x0, sp, #0x60
   21458:	bl	1bec4 <PyInit__decimal@@Base+0xaf3c>
   2145c:	sub	x4, x0, #0x1
   21460:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   21464:	cmp	x0, x1
   21468:	b.ne	21494 <PyInit__decimal@@Base+0x1050c>  // b.any
   2146c:	mov	x2, x21
   21470:	mov	w1, #0x200                 	// #512
   21474:	b	211e0 <PyInit__decimal@@Base+0x10258>
   21478:	ldr	x20, [x24]
   2147c:	mov	w1, #0x1040                	// #4160
   21480:	ldr	w0, [x21]
   21484:	sub	x20, x20, #0x1
   21488:	orr	w0, w0, w1
   2148c:	str	w0, [x21]
   21490:	b	213d0 <PyInit__decimal@@Base+0x10448>
   21494:	ldp	x1, x0, [sp, #104]
   21498:	add	x4, x27, x4
   2149c:	add	x1, x1, x0
   214a0:	ldrb	w0, [x20]
   214a4:	sub	x1, x1, #0x1
   214a8:	and	w0, w0, #0x1
   214ac:	lsr	x1, x1, #63
   214b0:	cmp	w0, w1
   214b4:	b.ne	214fc <PyInit__decimal@@Base+0x10574>  // b.any
   214b8:	ldr	x0, [x24, #8]
   214bc:	bl	1781c <PyInit__decimal@@Base+0x6894>
   214c0:	cmp	x4, w0, sxtw
   214c4:	b.le	21518 <PyInit__decimal@@Base+0x10590>
   214c8:	mov	x3, #0x1                   	// #1
   214cc:	movk	x3, #0x4ec8, lsl #16
   214d0:	movk	x3, #0x6d67, lsl #32
   214d4:	movk	x3, #0x1bc1, lsl #48
   214d8:	mov	w1, w23
   214dc:	mov	x2, #0x1                   	// #1
   214e0:	mov	x0, x19
   214e4:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   214e8:	mov	x2, x21
   214ec:	mov	x1, x24
   214f0:	mov	x0, x19
   214f4:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   214f8:	b	21208 <PyInit__decimal@@Base+0x10280>
   214fc:	ldr	x0, [x24]
   21500:	ldr	x3, [x24, #16]
   21504:	sub	x3, x3, x0
   21508:	add	x0, x3, #0x1
   2150c:	bl	1781c <PyInit__decimal@@Base+0x6894>
   21510:	cmp	x4, w0, sxtw
   21514:	b.gt	214d8 <PyInit__decimal@@Base+0x10550>
   21518:	cbz	w26, 2153c <PyInit__decimal@@Base+0x105b4>
   2151c:	mov	x5, x21
   21520:	mov	x4, x24
   21524:	mov	w3, w23
   21528:	mov	x2, x20
   2152c:	mov	x1, x22
   21530:	mov	x0, x19
   21534:	bl	20de4 <PyInit__decimal@@Base+0xfe5c>
   21538:	b	21208 <PyInit__decimal@@Base+0x10280>
   2153c:	mov	x0, x19
   21540:	mov	x4, x21
   21544:	mov	x3, x24
   21548:	mov	x2, x20
   2154c:	mov	x1, x22
   21550:	bl	1fe00 <PyInit__decimal@@Base+0xee78>
   21554:	ldrb	w0, [x19]
   21558:	tst	w0, #0xe
   2155c:	b.ne	21598 <PyInit__decimal@@Base+0x10610>  // b.any
   21560:	add	x25, x25, #0xc58
   21564:	mov	x0, x19
   21568:	mov	x1, x25
   2156c:	bl	16b04 <PyInit__decimal@@Base+0x5b7c>
   21570:	cbnz	w0, 21598 <PyInit__decimal@@Base+0x10610>
   21574:	ldr	x20, [x24]
   21578:	mov	x3, x21
   2157c:	mov	x1, x25
   21580:	mov	x0, x19
   21584:	sub	x2, x20, #0x1
   21588:	bl	19718 <PyInit__decimal@@Base+0x8790>
   2158c:	mov	x0, #0x1                   	// #1
   21590:	sub	x0, x0, x20
   21594:	str	x0, [x19, #8]
   21598:	ldrb	w0, [x19]
   2159c:	tbz	w0, #1, 214e8 <PyInit__decimal@@Base+0x10560>
   215a0:	mov	x3, #0x1                   	// #1
   215a4:	mov	x2, #0x1                   	// #1
   215a8:	movk	x3, #0x4ec8, lsl #16
   215ac:	mov	w1, #0x0                   	// #0
   215b0:	movk	x3, #0x6d67, lsl #32
   215b4:	movk	x3, #0x1bc1, lsl #48
   215b8:	b	214e0 <PyInit__decimal@@Base+0x10558>
   215bc:	ldrb	w1, [x20]
   215c0:	mov	w2, #0xfffffffe            	// #-2
   215c4:	and	w1, w1, #0x1
   215c8:	mul	w1, w1, w2
   215cc:	madd	w0, w1, w0, w0
   215d0:	tbz	w0, #31, 21250 <PyInit__decimal@@Base+0x102c8>
   215d4:	b	21318 <PyInit__decimal@@Base+0x10390>
   215d8:	sub	sp, sp, #0x270
   215dc:	stp	x29, x30, [sp]
   215e0:	mov	x29, sp
   215e4:	stp	x19, x20, [sp, #16]
   215e8:	mov	x20, x1
   215ec:	mov	w1, #0x30                  	// #48
   215f0:	stp	x21, x22, [sp, #32]
   215f4:	mov	x19, x4
   215f8:	mov	x21, x0
   215fc:	stp	x23, x24, [sp, #48]
   21600:	mov	x22, x2
   21604:	mov	x23, x3
   21608:	strb	w1, [sp, #64]
   2160c:	mov	x1, #0x40                  	// #64
   21610:	stp	xzr, x1, [sp, #88]
   21614:	add	x1, sp, #0x70
   21618:	stp	xzr, xzr, [sp, #72]
   2161c:	str	x1, [sp, #104]
   21620:	ldrb	w1, [x20]
   21624:	tst	w1, #0xe
   21628:	b.ne	21638 <PyInit__decimal@@Base+0x106b0>  // b.any
   2162c:	ldrb	w1, [x2]
   21630:	tst	w1, #0xe
   21634:	b.eq	216b4 <PyInit__decimal@@Base+0x1072c>  // b.none
   21638:	mov	x4, x19
   2163c:	mov	x3, x23
   21640:	mov	x2, x22
   21644:	mov	x1, x20
   21648:	mov	x0, x21
   2164c:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   21650:	cbnz	w0, 2166c <PyInit__decimal@@Base+0x106e4>
   21654:	ldrb	w0, [x20]
   21658:	tbz	w0, #1, 21684 <PyInit__decimal@@Base+0x106fc>
   2165c:	mov	x2, x19
   21660:	mov	x0, x21
   21664:	mov	w1, #0x100                 	// #256
   21668:	bl	18904 <PyInit__decimal@@Base+0x797c>
   2166c:	ldp	x29, x30, [sp]
   21670:	ldp	x19, x20, [sp, #16]
   21674:	ldp	x21, x22, [sp, #32]
   21678:	ldp	x23, x24, [sp, #48]
   2167c:	add	sp, sp, #0x270
   21680:	ret
   21684:	ldrb	w0, [x22]
   21688:	tbz	w0, #1, 216b0 <PyInit__decimal@@Base+0x10728>
   2168c:	mov	x2, x19
   21690:	mov	x1, x20
   21694:	mov	x0, x21
   21698:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   2169c:	mov	x2, x19
   216a0:	mov	x1, x23
   216a4:	mov	x0, x21
   216a8:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   216ac:	b	2166c <PyInit__decimal@@Base+0x106e4>
   216b0:	bl	6860 <abort@plt>
   216b4:	ldr	x1, [x2, #24]
   216b8:	ldr	x2, [x2, #40]
   216bc:	add	x1, x2, x1, lsl #3
   216c0:	ldur	x1, [x1, #-8]
   216c4:	cbnz	x1, 216e8 <PyInit__decimal@@Base+0x10760>
   216c8:	ldr	x1, [x20, #24]
   216cc:	ldr	x2, [x20, #40]
   216d0:	add	x1, x2, x1, lsl #3
   216d4:	ldur	x1, [x1, #-8]
   216d8:	cbnz	x1, 2165c <PyInit__decimal@@Base+0x106d4>
   216dc:	mov	x2, x4
   216e0:	mov	w1, #0x10                  	// #16
   216e4:	b	21668 <PyInit__decimal@@Base+0x106e0>
   216e8:	add	x24, sp, #0x40
   216ec:	mov	x5, x4
   216f0:	mov	x1, x0
   216f4:	mov	x4, x3
   216f8:	mov	x0, x24
   216fc:	mov	x3, x22
   21700:	mov	x2, x20
   21704:	bl	205ac <PyInit__decimal@@Base+0xf624>
   21708:	ldrb	w0, [sp, #64]
   2170c:	tst	w0, #0xe0
   21710:	b.ne	21724 <PyInit__decimal@@Base+0x1079c>  // b.any
   21714:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   21718:	ldr	x1, [x0, #1720]
   2171c:	ldr	x0, [sp, #104]
   21720:	blr	x1
   21724:	ldrb	w0, [sp, #64]
   21728:	tbnz	w0, #4, 2169c <PyInit__decimal@@Base+0x10714>
   2172c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   21730:	ldr	x1, [x0, #1720]
   21734:	mov	x0, x24
   21738:	blr	x1
   2173c:	b	2169c <PyInit__decimal@@Base+0x10714>
   21740:	sub	sp, sp, #0xa20
   21744:	stp	x29, x30, [sp]
   21748:	mov	x29, sp
   2174c:	stp	x25, x26, [sp, #64]
   21750:	mov	x26, x2
   21754:	add	x2, sp, #0x220
   21758:	str	x2, [sp, #248]
   2175c:	add	x2, sp, #0x420
   21760:	stp	x19, x20, [sp, #16]
   21764:	mov	x20, x0
   21768:	mov	x0, #0x40                  	// #64
   2176c:	stp	x21, x22, [sp, #32]
   21770:	mov	x19, x5
   21774:	mov	x25, x3
   21778:	stp	x23, x24, [sp, #48]
   2177c:	mov	x24, x1
   21780:	mov	w1, #0x30                  	// #48
   21784:	stp	x27, x28, [sp, #80]
   21788:	mov	x21, x4
   2178c:	strb	w1, [sp, #208]
   21790:	stp	xzr, xzr, [sp, #216]
   21794:	stp	xzr, x0, [sp, #232]
   21798:	strb	w1, [sp, #256]
   2179c:	stp	xzr, xzr, [sp, #264]
   217a0:	stp	xzr, x0, [sp, #280]
   217a4:	str	x2, [sp, #296]
   217a8:	add	x2, sp, #0x620
   217ac:	strb	w1, [sp, #304]
   217b0:	stp	xzr, xzr, [sp, #312]
   217b4:	stp	xzr, x0, [sp, #328]
   217b8:	str	x2, [sp, #344]
   217bc:	strb	w1, [sp, #352]
   217c0:	stp	xzr, xzr, [sp, #360]
   217c4:	ldrb	w5, [x26]
   217c8:	stp	xzr, x0, [sp, #376]
   217cc:	add	x0, sp, #0x820
   217d0:	ldrb	w1, [x3]
   217d4:	str	x0, [sp, #392]
   217d8:	mov	x0, #0x2                   	// #2
   217dc:	str	x0, [sp, #152]
   217e0:	mov	w0, #0xffffff90            	// #-112
   217e4:	strb	w0, [sp, #400]
   217e8:	mov	x0, #0x1                   	// #1
   217ec:	ldrb	w6, [x24]
   217f0:	stp	x0, x0, [sp, #416]
   217f4:	str	x0, [sp, #432]
   217f8:	add	x0, sp, #0x98
   217fc:	str	xzr, [sp, #408]
   21800:	str	x0, [sp, #440]
   21804:	orr	w0, w1, w5
   21808:	orr	w0, w6, w0
   2180c:	tst	w0, #0xe
   21810:	b.eq	218cc <PyInit__decimal@@Base+0x10944>  // b.none
   21814:	tst	w0, #0xc
   21818:	b.ne	2184c <PyInit__decimal@@Base+0x108c4>  // b.any
   2181c:	mov	x2, x19
   21820:	mov	x0, x20
   21824:	mov	w1, #0x100                 	// #256
   21828:	bl	18904 <PyInit__decimal@@Base+0x797c>
   2182c:	ldp	x29, x30, [sp]
   21830:	ldp	x19, x20, [sp, #16]
   21834:	ldp	x21, x22, [sp, #32]
   21838:	ldp	x23, x24, [sp, #48]
   2183c:	ldp	x25, x26, [sp, #64]
   21840:	ldp	x27, x28, [sp, #80]
   21844:	add	sp, sp, #0xa20
   21848:	ret
   2184c:	tbz	w6, #3, 2188c <PyInit__decimal@@Base+0x10904>
   21850:	ldr	w0, [x19]
   21854:	orr	w0, w0, #0x100
   21858:	str	w0, [x19]
   2185c:	mov	x1, x24
   21860:	mov	x2, x19
   21864:	mov	x0, x20
   21868:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   2186c:	ldrb	w0, [x20]
   21870:	mov	x1, x21
   21874:	and	w0, w0, #0xfffffff1
   21878:	orr	w0, w0, #0x4
   2187c:	strb	w0, [x20]
   21880:	mov	x0, x20
   21884:	bl	17f7c <PyInit__decimal@@Base+0x6ff4>
   21888:	b	2182c <PyInit__decimal@@Base+0x108a4>
   2188c:	tbz	w5, #3, 218a4 <PyInit__decimal@@Base+0x1091c>
   21890:	ldr	w0, [x19]
   21894:	mov	x24, x26
   21898:	orr	w0, w0, #0x100
   2189c:	str	w0, [x19]
   218a0:	b	2185c <PyInit__decimal@@Base+0x108d4>
   218a4:	tbz	w1, #3, 218bc <PyInit__decimal@@Base+0x10934>
   218a8:	ldr	w0, [x19]
   218ac:	mov	x24, x3
   218b0:	orr	w0, w0, #0x100
   218b4:	str	w0, [x19]
   218b8:	b	2185c <PyInit__decimal@@Base+0x108d4>
   218bc:	tbnz	w6, #2, 2185c <PyInit__decimal@@Base+0x108d4>
   218c0:	tst	x5, #0x4
   218c4:	csel	x24, x3, x26, eq  // eq = none
   218c8:	b	2185c <PyInit__decimal@@Base+0x108d4>
   218cc:	mov	x0, x24
   218d0:	bl	1863c <PyInit__decimal@@Base+0x76b4>
   218d4:	cbz	w0, 2181c <PyInit__decimal@@Base+0x10894>
   218d8:	mov	x0, x26
   218dc:	bl	1863c <PyInit__decimal@@Base+0x76b4>
   218e0:	cbz	w0, 2181c <PyInit__decimal@@Base+0x10894>
   218e4:	mov	x0, x25
   218e8:	bl	1863c <PyInit__decimal@@Base+0x76b4>
   218ec:	cbz	w0, 2181c <PyInit__decimal@@Base+0x10894>
   218f0:	ldr	x0, [x25, #24]
   218f4:	ldr	x1, [x25, #40]
   218f8:	add	x0, x1, x0, lsl #3
   218fc:	ldur	x0, [x0, #-8]
   21900:	cbz	x0, 2181c <PyInit__decimal@@Base+0x10894>
   21904:	ldp	x1, x0, [x25, #8]
   21908:	add	x0, x0, x1
   2190c:	ldr	x1, [x21]
   21910:	cmp	x0, x1
   21914:	b.gt	2181c <PyInit__decimal@@Base+0x10894>
   21918:	tbz	w6, #0, 21984 <PyInit__decimal@@Base+0x109fc>
   2191c:	mov	x0, x26
   21920:	bl	187fc <PyInit__decimal@@Base+0x7874>
   21924:	cmp	w0, #0x0
   21928:	cset	w23, ne  // ne = any
   2192c:	ldr	x0, [x26, #24]
   21930:	and	w23, w23, #0xff
   21934:	ldr	x1, [x26, #40]
   21938:	add	x0, x1, x0, lsl #3
   2193c:	ldur	x0, [x0, #-8]
   21940:	cbnz	x0, 2198c <PyInit__decimal@@Base+0x10a04>
   21944:	ldr	x0, [x24, #24]
   21948:	ldr	x1, [x24, #40]
   2194c:	add	x0, x1, x0, lsl #3
   21950:	ldur	x0, [x0, #-8]
   21954:	cbz	x0, 2181c <PyInit__decimal@@Base+0x10894>
   21958:	mov	x0, x25
   2195c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x31078>
   21960:	add	x1, x1, #0xc58
   21964:	bl	172f8 <PyInit__decimal@@Base+0x6370>
   21968:	cmp	w0, #0x0
   2196c:	mov	x3, #0x0                   	// #0
   21970:	cset	x2, ne  // ne = any
   21974:	mov	w1, w23
   21978:	mov	x0, x20
   2197c:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   21980:	b	2182c <PyInit__decimal@@Base+0x108a4>
   21984:	mov	w23, #0x0                   	// #0
   21988:	b	2192c <PyInit__decimal@@Base+0x109a4>
   2198c:	tbnz	w5, #0, 2181c <PyInit__decimal@@Base+0x10894>
   21990:	ldr	x0, [x24, #24]
   21994:	ldr	x1, [x24, #40]
   21998:	add	x0, x1, x0, lsl #3
   2199c:	ldur	x0, [x0, #-8]
   219a0:	cbnz	x0, 219b0 <PyInit__decimal@@Base+0x10a28>
   219a4:	mov	x3, #0x0                   	// #0
   219a8:	mov	x2, #0x0                   	// #0
   219ac:	b	21974 <PyInit__decimal@@Base+0x109ec>
   219b0:	add	x21, sp, #0xa0
   219b4:	add	x22, sp, #0x130
   219b8:	mov	x0, x21
   219bc:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   219c0:	mov	x1, x25
   219c4:	mov	x0, x22
   219c8:	add	x4, x21, #0x1c
   219cc:	mov	x3, x21
   219d0:	mov	x2, #0x0                   	// #0
   219d4:	bl	1debc <PyInit__decimal@@Base+0xcf34>
   219d8:	ldr	w1, [sp, #188]
   219dc:	mov	w0, #0x3be                 	// #958
   219e0:	ands	w1, w1, w0
   219e4:	b.eq	21ac8 <PyInit__decimal@@Base+0x10b40>  // b.none
   219e8:	mov	x2, x19
   219ec:	mov	x0, x20
   219f0:	bl	18904 <PyInit__decimal@@Base+0x797c>
   219f4:	ldrb	w0, [sp, #208]
   219f8:	tst	w0, #0xe0
   219fc:	b.ne	21a10 <PyInit__decimal@@Base+0x10a88>  // b.any
   21a00:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   21a04:	ldr	x1, [x0, #1720]
   21a08:	ldr	x0, [sp, #248]
   21a0c:	blr	x1
   21a10:	ldrb	w0, [sp, #208]
   21a14:	tbnz	w0, #4, 21a28 <PyInit__decimal@@Base+0x10aa0>
   21a18:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   21a1c:	ldr	x1, [x0, #1720]
   21a20:	add	x0, sp, #0xd0
   21a24:	blr	x1
   21a28:	ldrb	w0, [sp, #256]
   21a2c:	tst	w0, #0xe0
   21a30:	b.ne	21a44 <PyInit__decimal@@Base+0x10abc>  // b.any
   21a34:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   21a38:	ldr	x1, [x0, #1720]
   21a3c:	ldr	x0, [sp, #296]
   21a40:	blr	x1
   21a44:	ldrb	w0, [sp, #256]
   21a48:	tbnz	w0, #4, 21a5c <PyInit__decimal@@Base+0x10ad4>
   21a4c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   21a50:	ldr	x1, [x0, #1720]
   21a54:	add	x0, sp, #0x100
   21a58:	blr	x1
   21a5c:	ldrb	w0, [sp, #304]
   21a60:	tst	w0, #0xe0
   21a64:	b.ne	21a78 <PyInit__decimal@@Base+0x10af0>  // b.any
   21a68:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   21a6c:	ldr	x1, [x0, #1720]
   21a70:	ldr	x0, [sp, #344]
   21a74:	blr	x1
   21a78:	ldrb	w0, [sp, #304]
   21a7c:	tbnz	w0, #4, 21a90 <PyInit__decimal@@Base+0x10b08>
   21a80:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   21a84:	ldr	x1, [x0, #1720]
   21a88:	mov	x0, x22
   21a8c:	blr	x1
   21a90:	ldrb	w0, [sp, #352]
   21a94:	tst	w0, #0xe0
   21a98:	b.ne	21aac <PyInit__decimal@@Base+0x10b24>  // b.any
   21a9c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   21aa0:	ldr	x1, [x0, #1720]
   21aa4:	ldr	x0, [sp, #392]
   21aa8:	blr	x1
   21aac:	ldrb	w0, [sp, #352]
   21ab0:	tbnz	w0, #4, 2182c <PyInit__decimal@@Base+0x108a4>
   21ab4:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   21ab8:	ldr	x1, [x0, #1720]
   21abc:	add	x0, sp, #0x160
   21ac0:	blr	x1
   21ac4:	b	2182c <PyInit__decimal@@Base+0x108a4>
   21ac8:	ldrb	w0, [sp, #304]
   21acc:	add	x28, sp, #0xd0
   21ad0:	mov	x1, x24
   21ad4:	mov	x3, x19
   21ad8:	and	w0, w0, #0xfffffffe
   21adc:	mov	x2, x21
   21ae0:	str	wzr, [sp, #188]
   21ae4:	add	x24, sp, #0x100
   21ae8:	strb	w0, [sp, #304]
   21aec:	mov	x0, x28
   21af0:	bl	1df4c <PyInit__decimal@@Base+0xcfc4>
   21af4:	adrp	x25, 42000 <PyInit__decimal@@Base+0x31078>
   21af8:	ldrb	w0, [sp, #208]
   21afc:	mov	x1, x26
   21b00:	mov	x3, x19
   21b04:	mov	x2, x21
   21b08:	and	w0, w0, #0xfffffffe
   21b0c:	strb	w0, [sp, #208]
   21b10:	mov	x0, x24
   21b14:	add	x26, x25, #0xc58
   21b18:	ldr	x27, [sp, #216]
   21b1c:	str	xzr, [sp, #216]
   21b20:	bl	1df4c <PyInit__decimal@@Base+0xcfc4>
   21b24:	mov	x4, x19
   21b28:	mov	x3, x21
   21b2c:	ldr	x0, [sp, #264]
   21b30:	mov	x2, x22
   21b34:	mov	x1, x28
   21b38:	str	x0, [sp, #112]
   21b3c:	mov	x0, x28
   21b40:	str	xzr, [sp, #264]
   21b44:	bl	215d8 <PyInit__decimal@@Base+0x10650>
   21b48:	mov	x3, x19
   21b4c:	mov	x2, x27
   21b50:	mov	x1, x26
   21b54:	mov	x0, x20
   21b58:	bl	19718 <PyInit__decimal@@Base+0x8790>
   21b5c:	mov	x4, x19
   21b60:	mov	x3, x21
   21b64:	mov	x2, x22
   21b68:	mov	x1, x20
   21b6c:	mov	x0, x20
   21b70:	bl	215d8 <PyInit__decimal@@Base+0x10650>
   21b74:	mov	x4, x19
   21b78:	mov	x3, x21
   21b7c:	mov	x2, x20
   21b80:	mov	x1, x28
   21b84:	mov	x0, x28
   21b88:	bl	1c828 <PyInit__decimal@@Base+0xb8a0>
   21b8c:	mov	x1, x28
   21b90:	mov	x0, x28
   21b94:	mov	x4, x19
   21b98:	mov	x3, x21
   21b9c:	mov	x2, x22
   21ba0:	bl	215d8 <PyInit__decimal@@Base+0x10650>
   21ba4:	ldrb	w1, [sp, #256]
   21ba8:	ldrb	w0, [sp, #208]
   21bac:	str	x25, [sp, #120]
   21bb0:	orr	w0, w0, w1
   21bb4:	ldrb	w1, [sp, #304]
   21bb8:	orr	w0, w0, w1
   21bbc:	tst	w0, #0xe
   21bc0:	b.ne	21dd0 <PyInit__decimal@@Base+0x10e48>  // b.any
   21bc4:	add	x25, sp, #0x1f0
   21bc8:	str	x26, [sp, #128]
   21bcc:	add	x26, sp, #0x160
   21bd0:	mov	x27, #0x0                   	// #0
   21bd4:	ldr	x0, [sp, #112]
   21bd8:	cmp	x27, x0
   21bdc:	b.lt	21cac <PyInit__decimal@@Base+0x10d24>  // b.tstop
   21be0:	ldrb	w0, [sp, #208]
   21be4:	tst	w0, #0xe
   21be8:	b.ne	21dd0 <PyInit__decimal@@Base+0x10e48>  // b.any
   21bec:	ldr	x0, [sp, #120]
   21bf0:	mov	x2, x19
   21bf4:	add	x25, sp, #0x190
   21bf8:	add	x1, x0, #0xc58
   21bfc:	mov	x0, x20
   21c00:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   21c04:	ldrb	w0, [sp, #256]
   21c08:	tst	w0, #0xe
   21c0c:	b.ne	21dd0 <PyInit__decimal@@Base+0x10e48>  // b.any
   21c10:	ldr	x0, [sp, #280]
   21c14:	ldr	x1, [sp, #296]
   21c18:	add	x0, x1, x0, lsl #3
   21c1c:	ldur	x0, [x0, #-8]
   21c20:	cbz	x0, 21dbc <PyInit__decimal@@Base+0x10e34>
   21c24:	mov	x0, x24
   21c28:	bl	187fc <PyInit__decimal@@Base+0x7874>
   21c2c:	cbz	w0, 21c60 <PyInit__decimal@@Base+0x10cd8>
   21c30:	mov	x4, x19
   21c34:	mov	x3, x21
   21c38:	mov	x2, x28
   21c3c:	mov	x1, x20
   21c40:	mov	x0, x20
   21c44:	bl	1c828 <PyInit__decimal@@Base+0xb8a0>
   21c48:	mov	x4, x19
   21c4c:	mov	x3, x21
   21c50:	mov	x2, x22
   21c54:	mov	x1, x20
   21c58:	mov	x0, x20
   21c5c:	bl	215d8 <PyInit__decimal@@Base+0x10650>
   21c60:	mov	x4, x19
   21c64:	mov	x3, x21
   21c68:	mov	x2, x28
   21c6c:	mov	x1, x28
   21c70:	mov	x0, x28
   21c74:	bl	1c828 <PyInit__decimal@@Base+0xb8a0>
   21c78:	mov	x4, x19
   21c7c:	mov	x3, x21
   21c80:	mov	x2, x22
   21c84:	mov	x1, x28
   21c88:	mov	x0, x28
   21c8c:	bl	215d8 <PyInit__decimal@@Base+0x10650>
   21c90:	mov	x4, x19
   21c94:	mov	x3, x21
   21c98:	mov	x2, x25
   21c9c:	mov	x1, x24
   21ca0:	mov	x0, x24
   21ca4:	bl	20c54 <PyInit__decimal@@Base+0xfccc>
   21ca8:	b	21c04 <PyInit__decimal@@Base+0x10c7c>
   21cac:	mov	x0, x25
   21cb0:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   21cb4:	ldr	x1, [sp, #128]
   21cb8:	mov	x2, x19
   21cbc:	mov	x0, x26
   21cc0:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   21cc4:	mov	w0, #0x4                   	// #4
   21cc8:	mov	x7, #0xa                   	// #10
   21ccc:	str	w0, [sp, #108]
   21cd0:	mov	x4, x19
   21cd4:	mov	x3, x25
   21cd8:	mov	x2, x28
   21cdc:	mov	x1, x28
   21ce0:	mov	x0, x28
   21ce4:	str	x7, [sp, #136]
   21ce8:	bl	1c828 <PyInit__decimal@@Base+0xb8a0>
   21cec:	mov	x0, x28
   21cf0:	mov	x4, x19
   21cf4:	mov	x3, x25
   21cf8:	mov	x2, x22
   21cfc:	mov	x1, x28
   21d00:	bl	215d8 <PyInit__decimal@@Base+0x10650>
   21d04:	ldr	w0, [sp, #108]
   21d08:	ldr	x7, [sp, #136]
   21d0c:	subs	w0, w0, #0x1
   21d10:	str	w0, [sp, #108]
   21d14:	lsr	x7, x7, #1
   21d18:	b.ne	21d60 <PyInit__decimal@@Base+0x10dd8>  // b.any
   21d1c:	ldp	x0, x1, [x28]
   21d20:	add	x27, x27, #0x1
   21d24:	ldp	x12, x13, [x26]
   21d28:	stp	x0, x1, [x26]
   21d2c:	ldp	x0, x1, [x28, #16]
   21d30:	stp	x12, x13, [x28]
   21d34:	ldp	x10, x11, [x26, #16]
   21d38:	stp	x0, x1, [x26, #16]
   21d3c:	ldp	x8, x9, [x26, #32]
   21d40:	stp	x10, x11, [x28, #16]
   21d44:	ldp	x0, x1, [x28, #32]
   21d48:	stp	x0, x1, [x26, #32]
   21d4c:	stp	x8, x9, [x28, #32]
   21d50:	stp	x12, x13, [sp, #448]
   21d54:	stp	x10, x11, [sp, #464]
   21d58:	stp	x8, x9, [sp, #480]
   21d5c:	b	21bd4 <PyInit__decimal@@Base+0x10c4c>
   21d60:	tbz	w7, #0, 21cd0 <PyInit__decimal@@Base+0x10d48>
   21d64:	mov	x4, x19
   21d68:	mov	x3, x25
   21d6c:	mov	x2, x28
   21d70:	mov	x1, x26
   21d74:	mov	x0, x26
   21d78:	str	x7, [sp, #136]
   21d7c:	bl	1c828 <PyInit__decimal@@Base+0xb8a0>
   21d80:	mov	x4, x19
   21d84:	mov	x3, x25
   21d88:	mov	x2, x22
   21d8c:	mov	x1, x26
   21d90:	mov	x0, x26
   21d94:	bl	215d8 <PyInit__decimal@@Base+0x10650>
   21d98:	ldr	x7, [sp, #136]
   21d9c:	b	21cd0 <PyInit__decimal@@Base+0x10d48>
   21da0:	ldrb	w0, [x20]
   21da4:	tst	w0, #0xe
   21da8:	b.ne	21dd0 <PyInit__decimal@@Base+0x10e48>  // b.any
   21dac:	and	w0, w0, #0xfffffffe
   21db0:	orr	w23, w23, w0
   21db4:	strb	w23, [x20]
   21db8:	b	219f4 <PyInit__decimal@@Base+0x10a6c>
   21dbc:	ldrb	w0, [sp, #208]
   21dc0:	ldrb	w1, [sp, #304]
   21dc4:	orr	w0, w0, w1
   21dc8:	tst	w0, #0xe
   21dcc:	b.eq	21da0 <PyInit__decimal@@Base+0x10e18>  // b.none
   21dd0:	mov	x0, x20
   21dd4:	mov	w2, #0x4                   	// #4
   21dd8:	mov	w1, #0x0                   	// #0
   21ddc:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   21de0:	b	219f4 <PyInit__decimal@@Base+0x10a6c>
   21de4:	sub	sp, sp, #0x4f0
   21de8:	stp	x29, x30, [sp]
   21dec:	mov	x29, sp
   21df0:	stp	x23, x24, [sp, #48]
   21df4:	mov	x24, x1
   21df8:	mov	x1, #0x40                  	// #64
   21dfc:	stp	x19, x20, [sp, #16]
   21e00:	mov	x23, x2
   21e04:	mov	x20, x3
   21e08:	stp	x21, x22, [sp, #32]
   21e0c:	mov	w2, #0x30                  	// #48
   21e10:	add	x3, sp, #0xf0
   21e14:	stp	x25, x26, [sp, #64]
   21e18:	mov	x22, x0
   21e1c:	mov	x19, x4
   21e20:	stp	x27, x28, [sp, #80]
   21e24:	stp	xzr, x1, [sp, #168]
   21e28:	stp	xzr, x1, [sp, #216]
   21e2c:	add	x1, sp, #0x2f0
   21e30:	strb	w2, [sp, #144]
   21e34:	stp	xzr, xzr, [sp, #152]
   21e38:	str	x3, [sp, #184]
   21e3c:	strb	w2, [sp, #192]
   21e40:	stp	xzr, xzr, [sp, #200]
   21e44:	str	x1, [sp, #232]
   21e48:	ldrb	w1, [x24]
   21e4c:	tst	w1, #0xe
   21e50:	b.ne	21e60 <PyInit__decimal@@Base+0x10ed8>  // b.any
   21e54:	ldrb	w1, [x23]
   21e58:	tst	w1, #0xe
   21e5c:	b.eq	21ee4 <PyInit__decimal@@Base+0x10f5c>  // b.none
   21e60:	mov	x4, x19
   21e64:	mov	x3, x20
   21e68:	mov	x2, x23
   21e6c:	mov	x1, x24
   21e70:	mov	x0, x22
   21e74:	bl	18c80 <PyInit__decimal@@Base+0x7cf8>
   21e78:	cbnz	w0, 21e94 <PyInit__decimal@@Base+0x10f0c>
   21e7c:	ldrb	w0, [x24]
   21e80:	tbz	w0, #1, 21eb4 <PyInit__decimal@@Base+0x10f2c>
   21e84:	mov	x2, x19
   21e88:	mov	x0, x22
   21e8c:	mov	w1, #0x100                 	// #256
   21e90:	bl	18904 <PyInit__decimal@@Base+0x797c>
   21e94:	ldp	x29, x30, [sp]
   21e98:	ldp	x19, x20, [sp, #16]
   21e9c:	ldp	x21, x22, [sp, #32]
   21ea0:	ldp	x23, x24, [sp, #48]
   21ea4:	ldp	x25, x26, [sp, #64]
   21ea8:	ldp	x27, x28, [sp, #80]
   21eac:	add	sp, sp, #0x4f0
   21eb0:	ret
   21eb4:	ldrb	w0, [x23]
   21eb8:	tbz	w0, #1, 21ee0 <PyInit__decimal@@Base+0x10f58>
   21ebc:	mov	x2, x19
   21ec0:	mov	x1, x24
   21ec4:	mov	x0, x22
   21ec8:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   21ecc:	mov	x2, x19
   21ed0:	mov	x1, x20
   21ed4:	mov	x0, x22
   21ed8:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   21edc:	b	21e94 <PyInit__decimal@@Base+0x10f0c>
   21ee0:	bl	6860 <abort@plt>
   21ee4:	ldr	x1, [x23, #24]
   21ee8:	ldr	x2, [x23, #40]
   21eec:	add	x1, x2, x1, lsl #3
   21ef0:	ldur	x1, [x1, #-8]
   21ef4:	cbnz	x1, 21f18 <PyInit__decimal@@Base+0x10f90>
   21ef8:	ldr	x1, [x24, #24]
   21efc:	ldr	x2, [x24, #40]
   21f00:	add	x1, x2, x1, lsl #3
   21f04:	ldur	x1, [x1, #-8]
   21f08:	cbnz	x1, 21e84 <PyInit__decimal@@Base+0x10efc>
   21f0c:	mov	x2, x4
   21f10:	mov	w1, #0x10                  	// #16
   21f14:	b	21e90 <PyInit__decimal@@Base+0x10f08>
   21f18:	cmp	x23, x0
   21f1c:	b.ne	21f4c <PyInit__decimal@@Base+0x10fc4>  // b.any
   21f20:	add	x21, sp, #0x90
   21f24:	mov	x2, x4
   21f28:	mov	x1, x23
   21f2c:	mov	x0, x21
   21f30:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   21f34:	cbnz	w0, 21f48 <PyInit__decimal@@Base+0x10fc0>
   21f38:	mov	x2, x19
   21f3c:	mov	x0, x23
   21f40:	mov	w1, #0x200                 	// #512
   21f44:	b	21e90 <PyInit__decimal@@Base+0x10f08>
   21f48:	mov	x23, x21
   21f4c:	add	x21, sp, #0xc0
   21f50:	mov	x5, x19
   21f54:	mov	x0, x21
   21f58:	mov	x4, x20
   21f5c:	mov	x3, x23
   21f60:	mov	x2, x24
   21f64:	mov	x1, x22
   21f68:	bl	205ac <PyInit__decimal@@Base+0xf624>
   21f6c:	ldrb	w0, [sp, #192]
   21f70:	tst	w0, #0xc
   21f74:	b.ne	220a8 <PyInit__decimal@@Base+0x11120>  // b.any
   21f78:	ldrb	w0, [x22]
   21f7c:	tst	w0, #0xc
   21f80:	b.ne	220a8 <PyInit__decimal@@Base+0x11120>  // b.any
   21f84:	ldr	x0, [x22, #24]
   21f88:	ldr	x1, [x22, #40]
   21f8c:	add	x0, x1, x0, lsl #3
   21f90:	ldur	x0, [x0, #-8]
   21f94:	cbz	x0, 220a8 <PyInit__decimal@@Base+0x11120>
   21f98:	ldp	x0, x1, [x23, #8]
   21f9c:	ldr	x2, [x22, #16]
   21fa0:	add	x0, x0, x1
   21fa4:	ldr	x1, [x22, #8]
   21fa8:	add	x1, x1, x2
   21fac:	sub	x0, x0, x1
   21fb0:	add	x0, x0, #0x1
   21fb4:	cmp	x0, #0x2
   21fb8:	b.hi	220a8 <PyInit__decimal@@Base+0x11120>  // b.pmore
   21fbc:	ldr	x1, [sp, #216]
   21fc0:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   21fc4:	ldr	x4, [sp, #232]
   21fc8:	add	x3, x2, #0xae8
   21fcc:	add	x0, x4, x1, lsl #3
   21fd0:	ldr	x5, [x3, #72]
   21fd4:	ldur	x0, [x0, #-8]
   21fd8:	cmp	x0, x5
   21fdc:	b.cs	22168 <PyInit__decimal@@Base+0x111e0>  // b.hs, b.nlast
   21fe0:	ldr	x5, [x3, #32]
   21fe4:	cmp	x0, x5
   21fe8:	b.cs	22128 <PyInit__decimal@@Base+0x111a0>  // b.hs, b.nlast
   21fec:	ldr	x5, [x3, #16]
   21ff0:	cmp	x0, x5
   21ff4:	b.cs	22114 <PyInit__decimal@@Base+0x1118c>  // b.hs, b.nlast
   21ff8:	ldr	x3, [x3, #8]
   21ffc:	cmp	x0, x3
   22000:	cset	w5, cs  // cs = hs, nlast
   22004:	add	w5, w5, #0x1
   22008:	add	x2, x2, #0xae8
   2200c:	ldr	x2, [x2, w5, sxtw #3]
   22010:	sub	x2, x2, #0x1
   22014:	cmp	x0, x2
   22018:	b.ne	22224 <PyInit__decimal@@Base+0x1129c>  // b.any
   2201c:	sub	x0, x1, #0x1
   22020:	mov	x1, #0xffffffff89e7ffff    	// #-1981284353
   22024:	movk	x1, #0x2304, lsl #32
   22028:	movk	x1, #0x8ac7, lsl #48
   2202c:	subs	x0, x0, #0x1
   22030:	b.pl	22218 <PyInit__decimal@@Base+0x11290>  // b.nfrst
   22034:	mov	w25, #0x1                   	// #1
   22038:	add	x28, sp, #0x60
   2203c:	mov	x0, x21
   22040:	bl	187fc <PyInit__decimal@@Base+0x7874>
   22044:	mov	w26, w0
   22048:	mov	x0, x28
   2204c:	ldr	x27, [sp, #208]
   22050:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   22054:	ldrb	w0, [x23]
   22058:	add	x5, x28, #0x1c
   2205c:	ldrb	w1, [x24]
   22060:	and	w3, w0, #0x1
   22064:	and	w1, w1, #0x1
   22068:	cmp	w3, w1
   2206c:	b.ne	2222c <PyInit__decimal@@Base+0x112a4>  // b.any
   22070:	mvn	w3, w0
   22074:	mov	x4, x28
   22078:	and	w3, w3, #0x1
   2207c:	mov	x1, x22
   22080:	mov	x0, x21
   22084:	mov	x2, x23
   22088:	bl	19818 <PyInit__decimal@@Base+0x8890>
   2208c:	ldr	w1, [sp, #124]
   22090:	mov	w0, #0x3be                 	// #958
   22094:	ands	w1, w1, w0
   22098:	b.eq	22234 <PyInit__decimal@@Base+0x112ac>  // b.none
   2209c:	mov	x2, x19
   220a0:	mov	x0, x22
   220a4:	bl	18904 <PyInit__decimal@@Base+0x797c>
   220a8:	ldrb	w0, [sp, #144]
   220ac:	tst	w0, #0xe0
   220b0:	b.ne	220c4 <PyInit__decimal@@Base+0x1113c>  // b.any
   220b4:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   220b8:	ldr	x1, [x0, #1720]
   220bc:	ldr	x0, [sp, #184]
   220c0:	blr	x1
   220c4:	ldrb	w0, [sp, #144]
   220c8:	tbnz	w0, #4, 220dc <PyInit__decimal@@Base+0x11154>
   220cc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   220d0:	ldr	x1, [x0, #1720]
   220d4:	add	x0, sp, #0x90
   220d8:	blr	x1
   220dc:	ldrb	w0, [sp, #192]
   220e0:	tst	w0, #0xe0
   220e4:	b.ne	220f8 <PyInit__decimal@@Base+0x11170>  // b.any
   220e8:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   220ec:	ldr	x1, [x0, #1720]
   220f0:	ldr	x0, [sp, #232]
   220f4:	blr	x1
   220f8:	ldrb	w0, [sp, #192]
   220fc:	tbnz	w0, #4, 21ecc <PyInit__decimal@@Base+0x10f44>
   22100:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   22104:	ldr	x1, [x0, #1720]
   22108:	mov	x0, x21
   2210c:	blr	x1
   22110:	b	21ecc <PyInit__decimal@@Base+0x10f44>
   22114:	ldr	x3, [x3, #24]
   22118:	cmp	x0, x3
   2211c:	cset	w5, cs  // cs = hs, nlast
   22120:	add	w5, w5, #0x3
   22124:	b	22008 <PyInit__decimal@@Base+0x11080>
   22128:	ldr	x5, [x3, #48]
   2212c:	cmp	x0, x5
   22130:	b.cs	22148 <PyInit__decimal@@Base+0x111c0>  // b.hs, b.nlast
   22134:	ldr	x3, [x3, #40]
   22138:	cmp	x0, x3
   2213c:	cset	w5, cs  // cs = hs, nlast
   22140:	add	w5, w5, #0x5
   22144:	b	22008 <PyInit__decimal@@Base+0x11080>
   22148:	ldr	x5, [x3, #64]
   2214c:	cmp	x0, x5
   22150:	b.cs	22208 <PyInit__decimal@@Base+0x11280>  // b.hs, b.nlast
   22154:	ldr	x3, [x3, #56]
   22158:	cmp	x0, x3
   2215c:	cset	w5, cs  // cs = hs, nlast
   22160:	add	w5, w5, #0x7
   22164:	b	22008 <PyInit__decimal@@Base+0x11080>
   22168:	ldr	x5, [x3, #112]
   2216c:	cmp	x0, x5
   22170:	b.cs	221b4 <PyInit__decimal@@Base+0x1122c>  // b.hs, b.nlast
   22174:	ldr	x5, [x3, #88]
   22178:	cmp	x0, x5
   2217c:	b.cs	22194 <PyInit__decimal@@Base+0x1120c>  // b.hs, b.nlast
   22180:	ldr	x3, [x3, #80]
   22184:	cmp	x0, x3
   22188:	cset	w5, cs  // cs = hs, nlast
   2218c:	add	w5, w5, #0xa
   22190:	b	22008 <PyInit__decimal@@Base+0x11080>
   22194:	ldr	x5, [x3, #104]
   22198:	cmp	x0, x5
   2219c:	b.cs	22210 <PyInit__decimal@@Base+0x11288>  // b.hs, b.nlast
   221a0:	ldr	x3, [x3, #96]
   221a4:	cmp	x0, x3
   221a8:	cset	w5, cs  // cs = hs, nlast
   221ac:	add	w5, w5, #0xc
   221b0:	b	22008 <PyInit__decimal@@Base+0x11080>
   221b4:	ldr	x5, [x3, #144]
   221b8:	cmp	x0, x5
   221bc:	b.cs	221f4 <PyInit__decimal@@Base+0x1126c>  // b.hs, b.nlast
   221c0:	ldr	x5, [x3, #128]
   221c4:	cmp	x0, x5
   221c8:	b.cs	221e0 <PyInit__decimal@@Base+0x11258>  // b.hs, b.nlast
   221cc:	ldr	x3, [x3, #120]
   221d0:	cmp	x0, x3
   221d4:	cset	w5, cs  // cs = hs, nlast
   221d8:	add	w5, w5, #0xf
   221dc:	b	22008 <PyInit__decimal@@Base+0x11080>
   221e0:	ldr	x3, [x3, #136]
   221e4:	cmp	x0, x3
   221e8:	cset	w5, cs  // cs = hs, nlast
   221ec:	add	w5, w5, #0x11
   221f0:	b	22008 <PyInit__decimal@@Base+0x11080>
   221f4:	ldr	x3, [x3, #152]
   221f8:	cmp	x0, x3
   221fc:	cset	w5, cs  // cs = hs, nlast
   22200:	add	w5, w5, #0x13
   22204:	b	22008 <PyInit__decimal@@Base+0x11080>
   22208:	mov	w5, #0x9                   	// #9
   2220c:	b	22008 <PyInit__decimal@@Base+0x11080>
   22210:	mov	w5, #0xe                   	// #14
   22214:	b	22008 <PyInit__decimal@@Base+0x11080>
   22218:	ldr	x2, [x4, x0, lsl #3]
   2221c:	cmp	x2, x1
   22220:	b.eq	2202c <PyInit__decimal@@Base+0x110a4>  // b.none
   22224:	mov	w25, #0x0                   	// #0
   22228:	b	22038 <PyInit__decimal@@Base+0x110b0>
   2222c:	mov	x4, x28
   22230:	b	2207c <PyInit__decimal@@Base+0x110f4>
   22234:	mov	x1, x22
   22238:	mov	x0, x21
   2223c:	bl	172f8 <PyInit__decimal@@Base+0x6370>
   22240:	cmp	w0, #0x0
   22244:	b.lt	22250 <PyInit__decimal@@Base+0x112c8>  // b.tstop
   22248:	ccmp	w26, #0x0, #0x4, eq  // eq = none
   2224c:	b.eq	220a8 <PyInit__decimal@@Base+0x11120>  // b.none
   22250:	mov	x2, x19
   22254:	cbz	w25, 2226c <PyInit__decimal@@Base+0x112e4>
   22258:	ldr	x0, [x20]
   2225c:	cmp	x0, x27
   22260:	b.ne	2226c <PyInit__decimal@@Base+0x112e4>  // b.any
   22264:	mov	w1, #0x8                   	// #8
   22268:	b	220a0 <PyInit__decimal@@Base+0x11118>
   2226c:	mov	x1, x21
   22270:	mov	x0, x22
   22274:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   22278:	b	220a8 <PyInit__decimal@@Base+0x11120>
   2227c:	stp	x29, x30, [sp, #-64]!
   22280:	mov	x29, sp
   22284:	ldp	x4, x5, [x2]
   22288:	stp	x4, x5, [sp, #16]
   2228c:	ldp	x4, x5, [x2, #16]
   22290:	stp	x4, x5, [sp, #32]
   22294:	ldp	x4, x5, [x2, #32]
   22298:	mov	w2, #0x3                   	// #3
   2229c:	stp	x4, x5, [sp, #48]
   222a0:	mov	x4, x3
   222a4:	add	x3, sp, #0x10
   222a8:	str	w2, [sp, #52]
   222ac:	mov	x2, x1
   222b0:	mov	x1, x0
   222b4:	mov	w0, #0x1                   	// #1
   222b8:	bl	1a54c <PyInit__decimal@@Base+0x95c4>
   222bc:	ldp	x29, x30, [sp], #64
   222c0:	ret
   222c4:	stp	x29, x30, [sp, #-64]!
   222c8:	mov	x29, sp
   222cc:	ldp	x4, x5, [x2]
   222d0:	stp	x4, x5, [sp, #16]
   222d4:	ldp	x4, x5, [x2, #16]
   222d8:	stp	x4, x5, [sp, #32]
   222dc:	ldp	x4, x5, [x2, #32]
   222e0:	mov	w2, #0x2                   	// #2
   222e4:	stp	x4, x5, [sp, #48]
   222e8:	mov	x4, x3
   222ec:	add	x3, sp, #0x10
   222f0:	str	w2, [sp, #52]
   222f4:	mov	x2, x1
   222f8:	mov	x1, x0
   222fc:	mov	w0, #0x1                   	// #1
   22300:	bl	1a54c <PyInit__decimal@@Base+0x95c4>
   22304:	ldp	x29, x30, [sp], #64
   22308:	ret
   2230c:	ldrb	w2, [x0]
   22310:	tst	w2, #0xe
   22314:	b.ne	22324 <PyInit__decimal@@Base+0x1139c>  // b.any
   22318:	ldrb	w3, [x1]
   2231c:	tst	w3, #0xe
   22320:	b.eq	22348 <PyInit__decimal@@Base+0x113c0>  // b.none
   22324:	tst	w2, #0xc
   22328:	b.eq	22338 <PyInit__decimal@@Base+0x113b0>  // b.none
   2232c:	ldrb	w0, [x1]
   22330:	tst	w0, #0xc
   22334:	b.ne	2235c <PyInit__decimal@@Base+0x113d4>  // b.any
   22338:	tbz	w2, #1, 22364 <PyInit__decimal@@Base+0x113dc>
   2233c:	ldrb	w0, [x1]
   22340:	ubfx	x0, x0, #1, #1
   22344:	ret
   22348:	ldr	x2, [x0, #8]
   2234c:	ldr	x0, [x1, #8]
   22350:	cmp	x2, x0
   22354:	cset	w0, eq  // eq = none
   22358:	b	22344 <PyInit__decimal@@Base+0x113bc>
   2235c:	mov	w0, #0x1                   	// #1
   22360:	b	22344 <PyInit__decimal@@Base+0x113bc>
   22364:	mov	w0, #0x0                   	// #0
   22368:	b	22344 <PyInit__decimal@@Base+0x113bc>
   2236c:	stp	x29, x30, [sp, #-96]!
   22370:	mov	x29, sp
   22374:	stp	x19, x20, [sp, #16]
   22378:	mov	x19, x2
   2237c:	mov	x20, x3
   22380:	stp	x21, x22, [sp, #32]
   22384:	mov	x22, x0
   22388:	mov	x21, x1
   2238c:	ldrb	w4, [x1]
   22390:	tst	w4, #0xe
   22394:	b.eq	223f8 <PyInit__decimal@@Base+0x11470>  // b.none
   22398:	bl	18c14 <PyInit__decimal@@Base+0x7c8c>
   2239c:	cbnz	w0, 223b8 <PyInit__decimal@@Base+0x11430>
   223a0:	ldrb	w0, [x21]
   223a4:	tbz	w0, #0, 223c8 <PyInit__decimal@@Base+0x11440>
   223a8:	mov	x2, x20
   223ac:	mov	x0, x22
   223b0:	mov	w1, #0x100                 	// #256
   223b4:	bl	18904 <PyInit__decimal@@Base+0x797c>
   223b8:	ldp	x19, x20, [sp, #16]
   223bc:	ldp	x21, x22, [sp, #32]
   223c0:	ldp	x29, x30, [sp], #96
   223c4:	ret
   223c8:	ldr	x0, [x19, #16]
   223cc:	mov	x2, #0x0                   	// #0
   223d0:	ldr	x3, [x19]
   223d4:	add	x0, x0, #0x1
   223d8:	mov	w1, #0x0                   	// #0
   223dc:	sub	x3, x0, x3
   223e0:	mov	x0, x22
   223e4:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   223e8:	ldr	w0, [x20]
   223ec:	orr	w0, w0, #0x1
   223f0:	str	w0, [x20]
   223f4:	b	223b8 <PyInit__decimal@@Base+0x11430>
   223f8:	ldr	x2, [x1, #24]
   223fc:	and	w4, w4, #0x1
   22400:	ldr	x5, [x1, #40]
   22404:	add	x2, x5, x2, lsl #3
   22408:	ldur	x2, [x2, #-8]
   2240c:	cbnz	x2, 22428 <PyInit__decimal@@Base+0x114a0>
   22410:	mov	w1, w4
   22414:	mov	w2, #0x2                   	// #2
   22418:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   2241c:	ldr	w0, [x20]
   22420:	orr	w0, w0, #0x4
   22424:	b	223f0 <PyInit__decimal@@Base+0x11468>
   22428:	cbnz	w4, 223a8 <PyInit__decimal@@Base+0x11420>
   2242c:	ldp	x2, x4, [x19]
   22430:	add	x2, x2, #0x2
   22434:	stp	x2, x4, [sp, #48]
   22438:	mov	w2, #0x6                   	// #6
   2243c:	ldp	x4, x5, [x19, #16]
   22440:	stp	x4, x5, [sp, #64]
   22444:	ldp	x4, x5, [x19, #32]
   22448:	stp	x4, x5, [sp, #80]
   2244c:	str	w2, [sp, #84]
   22450:	add	x2, sp, #0x30
   22454:	bl	1cea0 <PyInit__decimal@@Base+0xbf18>
   22458:	mov	x2, x20
   2245c:	mov	x1, x19
   22460:	mov	x0, x22
   22464:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   22468:	b	223b8 <PyInit__decimal@@Base+0x11430>
   2246c:	sub	sp, sp, #0x780
   22470:	mov	x4, #0x40                  	// #64
   22474:	add	x6, sp, #0x180
   22478:	mov	w5, #0x30                  	// #48
   2247c:	stp	x29, x30, [sp]
   22480:	mov	x29, sp
   22484:	stp	xzr, x4, [sp, #216]
   22488:	stp	xzr, x4, [sp, #264]
   2248c:	stp	xzr, x4, [sp, #312]
   22490:	add	x4, sp, #0x580
   22494:	stp	x19, x20, [sp, #16]
   22498:	mov	x19, x0
   2249c:	mov	x20, x1
   224a0:	stp	x21, x22, [sp, #32]
   224a4:	mov	x22, #0x2                   	// #2
   224a8:	mov	x21, x3
   224ac:	stp	x23, x24, [sp, #48]
   224b0:	stp	x25, x26, [sp, #64]
   224b4:	stp	x27, x28, [sp, #80]
   224b8:	mov	x27, #0x1                   	// #1
   224bc:	str	x22, [sp, #136]
   224c0:	strb	w5, [sp, #192]
   224c4:	stp	xzr, xzr, [sp, #200]
   224c8:	str	x6, [sp, #232]
   224cc:	add	x6, sp, #0x380
   224d0:	strb	w5, [sp, #240]
   224d4:	stp	xzr, xzr, [sp, #248]
   224d8:	str	x6, [sp, #280]
   224dc:	strb	w5, [sp, #288]
   224e0:	stp	xzr, xzr, [sp, #296]
   224e4:	str	x4, [sp, #328]
   224e8:	mov	w4, #0xffffff90            	// #-112
   224ec:	strb	w4, [sp, #336]
   224f0:	add	x4, sp, #0x88
   224f4:	stp	xzr, x27, [sp, #344]
   224f8:	stp	x27, x27, [sp, #360]
   224fc:	str	x4, [sp, #376]
   22500:	ldrb	w4, [x1]
   22504:	tst	w4, #0xe
   22508:	b.eq	22560 <PyInit__decimal@@Base+0x115d8>  // b.none
   2250c:	bl	18c14 <PyInit__decimal@@Base+0x7c8c>
   22510:	cbnz	w0, 2252c <PyInit__decimal@@Base+0x115a4>
   22514:	ldrb	w0, [x20]
   22518:	tbz	w0, #0, 2254c <PyInit__decimal@@Base+0x115c4>
   2251c:	mov	x2, x21
   22520:	mov	x0, x19
   22524:	mov	w1, #0x100                 	// #256
   22528:	bl	18904 <PyInit__decimal@@Base+0x797c>
   2252c:	ldp	x29, x30, [sp]
   22530:	ldp	x19, x20, [sp, #16]
   22534:	ldp	x21, x22, [sp, #32]
   22538:	ldp	x23, x24, [sp, #48]
   2253c:	ldp	x25, x26, [sp, #64]
   22540:	ldp	x27, x28, [sp, #80]
   22544:	add	sp, sp, #0x780
   22548:	ret
   2254c:	mov	w2, w22
   22550:	mov	x0, x19
   22554:	mov	w1, #0x0                   	// #0
   22558:	bl	18878 <PyInit__decimal@@Base+0x78f0>
   2255c:	b	2252c <PyInit__decimal@@Base+0x115a4>
   22560:	mov	x23, x2
   22564:	and	w1, w4, #0x1
   22568:	ldr	x2, [x20, #24]
   2256c:	ldr	x3, [x20, #40]
   22570:	ldr	x25, [x20, #8]
   22574:	add	x2, x3, x2, lsl #3
   22578:	asr	x25, x25, #1
   2257c:	ldur	x2, [x2, #-8]
   22580:	cbnz	x2, 225a0 <PyInit__decimal@@Base+0x11618>
   22584:	mov	x3, x25
   22588:	bl	181b4 <PyInit__decimal@@Base+0x722c>
   2258c:	mov	x2, x21
   22590:	mov	x1, x23
   22594:	mov	x0, x19
   22598:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   2259c:	b	2252c <PyInit__decimal@@Base+0x115a4>
   225a0:	cbnz	w1, 2251c <PyInit__decimal@@Base+0x11594>
   225a4:	add	x24, sp, #0x90
   225a8:	add	x22, sp, #0xc0
   225ac:	mov	x0, x24
   225b0:	bl	12880 <PyInit__decimal@@Base+0x18f8>
   225b4:	mov	x2, x21
   225b8:	mov	x1, x20
   225bc:	mov	x0, x22
   225c0:	ldr	x26, [x23]
   225c4:	bl	18b60 <PyInit__decimal@@Base+0x7bd8>
   225c8:	cbz	w0, 22868 <PyInit__decimal@@Base+0x118e0>
   225cc:	ldr	x0, [x20, #8]
   225d0:	str	xzr, [sp, #200]
   225d4:	tbz	w0, #0, 226b4 <PyInit__decimal@@Base+0x1172c>
   225d8:	mov	x3, x21
   225dc:	mov	x2, x27
   225e0:	mov	x1, x22
   225e4:	mov	x0, x22
   225e8:	bl	19718 <PyInit__decimal@@Base+0x8790>
   225ec:	cbz	w0, 22868 <PyInit__decimal@@Base+0x118e0>
   225f0:	ldr	x20, [x20, #16]
   225f4:	asr	x20, x20, #1
   225f8:	add	x20, x20, #0x1
   225fc:	add	x27, x26, #0x1
   22600:	subs	x26, x27, x20
   22604:	b.mi	226c4 <PyInit__decimal@@Base+0x1173c>  // b.first
   22608:	mov	x3, x21
   2260c:	lsl	x2, x26, #1
   22610:	mov	x1, x22
   22614:	mov	x0, x22
   22618:	bl	19718 <PyInit__decimal@@Base+0x8790>
   2261c:	cbz	w0, 22868 <PyInit__decimal@@Base+0x118e0>
   22620:	mov	w0, #0x1                   	// #1
   22624:	str	w0, [sp, #100]
   22628:	sub	x0, x20, x27
   2262c:	str	x0, [sp, #104]
   22630:	add	x0, x0, x25
   22634:	adrp	x1, 42000 <PyInit__decimal@@Base+0x31078>
   22638:	mov	x3, x21
   2263c:	mov	x2, x27
   22640:	add	x1, x1, #0xc58
   22644:	str	x0, [sp, #112]
   22648:	mov	x0, x19
   2264c:	bl	19718 <PyInit__decimal@@Base+0x8790>
   22650:	cbz	w0, 22868 <PyInit__decimal@@Base+0x118e0>
   22654:	add	x20, x24, #0x1c
   22658:	add	x27, sp, #0x120
   2265c:	add	x28, sp, #0xf0
   22660:	add	x0, sp, #0x150
   22664:	str	x0, [sp, #120]
   22668:	mov	x1, x27
   2266c:	mov	x0, x28
   22670:	mov	x5, x20
   22674:	mov	x4, x24
   22678:	mov	x3, x19
   2267c:	mov	x2, x22
   22680:	bl	205ac <PyInit__decimal@@Base+0xf624>
   22684:	ldrb	w0, [x19]
   22688:	ldrb	w1, [sp, #240]
   2268c:	orr	w0, w0, w1
   22690:	tst	w0, #0xe
   22694:	b.eq	226e0 <PyInit__decimal@@Base+0x11758>  // b.none
   22698:	ldr	w1, [sp, #172]
   2269c:	mov	w0, #0x3be                 	// #958
   226a0:	mov	x2, x21
   226a4:	and	w1, w1, w0
   226a8:	mov	x0, x19
   226ac:	bl	18904 <PyInit__decimal@@Base+0x797c>
   226b0:	b	22788 <PyInit__decimal@@Base+0x11800>
   226b4:	ldr	x20, [x20, #16]
   226b8:	add	x20, x20, #0x1
   226bc:	asr	x20, x20, #1
   226c0:	b	225fc <PyInit__decimal@@Base+0x11674>
   226c4:	mov	x1, #0xfffffffffffffffe    	// #-2
   226c8:	mov	x0, x22
   226cc:	mul	x1, x26, x1
   226d0:	bl	19c58 <PyInit__decimal@@Base+0x8cd0>
   226d4:	cmp	x0, #0x0
   226d8:	cset	w0, eq  // eq = none
   226dc:	b	22624 <PyInit__decimal@@Base+0x1169c>
   226e0:	mov	x1, x28
   226e4:	mov	x0, x19
   226e8:	bl	16b04 <PyInit__decimal@@Base+0x5b7c>
   226ec:	cmp	w0, #0x0
   226f0:	b.le	22738 <PyInit__decimal@@Base+0x117b0>
   226f4:	mov	x0, x19
   226f8:	mov	x4, x20
   226fc:	mov	x3, x24
   22700:	mov	x2, x28
   22704:	mov	x1, x19
   22708:	bl	1bd40 <PyInit__decimal@@Base+0xadb8>
   2270c:	ldrb	w0, [x19]
   22710:	tst	w0, #0xe
   22714:	b.ne	22698 <PyInit__decimal@@Base+0x11710>  // b.any
   22718:	ldr	x3, [sp, #120]
   2271c:	mov	x5, x20
   22720:	mov	x4, x24
   22724:	mov	x2, x19
   22728:	mov	x1, x27
   2272c:	mov	x0, x19
   22730:	bl	205ac <PyInit__decimal@@Base+0xf624>
   22734:	b	22668 <PyInit__decimal@@Base+0x116e0>
   22738:	ldr	w0, [sp, #100]
   2273c:	cbz	w0, 22874 <PyInit__decimal@@Base+0x118ec>
   22740:	mov	x0, x27
   22744:	mov	x4, x20
   22748:	mov	x3, x24
   2274c:	mov	x2, x19
   22750:	mov	x1, x19
   22754:	bl	1c828 <PyInit__decimal@@Base+0xb8a0>
   22758:	ldrb	w0, [sp, #288]
   2275c:	tst	w0, #0xe
   22760:	b.ne	22698 <PyInit__decimal@@Base+0x11710>  // b.any
   22764:	mov	x1, x22
   22768:	mov	x0, x27
   2276c:	bl	16b04 <PyInit__decimal@@Base+0x5b7c>
   22770:	cbnz	w0, 22874 <PyInit__decimal@@Base+0x118ec>
   22774:	tbnz	x26, #63, 22850 <PyInit__decimal@@Base+0x118c8>
   22778:	mov	x1, x26
   2277c:	mov	x0, x19
   22780:	bl	19c58 <PyInit__decimal@@Base+0x8cd0>
   22784:	str	x25, [x19, #8]
   22788:	ldrb	w0, [sp, #192]
   2278c:	tst	w0, #0xe0
   22790:	b.ne	227a4 <PyInit__decimal@@Base+0x1181c>  // b.any
   22794:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   22798:	ldr	x1, [x0, #1720]
   2279c:	ldr	x0, [sp, #232]
   227a0:	blr	x1
   227a4:	ldrb	w0, [sp, #192]
   227a8:	tbnz	w0, #4, 227bc <PyInit__decimal@@Base+0x11834>
   227ac:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   227b0:	ldr	x1, [x0, #1720]
   227b4:	mov	x0, x22
   227b8:	blr	x1
   227bc:	ldrb	w0, [sp, #240]
   227c0:	tst	w0, #0xe0
   227c4:	b.ne	227d8 <PyInit__decimal@@Base+0x11850>  // b.any
   227c8:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   227cc:	ldr	x1, [x0, #1720]
   227d0:	ldr	x0, [sp, #280]
   227d4:	blr	x1
   227d8:	ldrb	w0, [sp, #240]
   227dc:	tbnz	w0, #4, 227f0 <PyInit__decimal@@Base+0x11868>
   227e0:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   227e4:	ldr	x1, [x0, #1720]
   227e8:	add	x0, sp, #0xf0
   227ec:	blr	x1
   227f0:	ldrb	w0, [sp, #288]
   227f4:	tst	w0, #0xe0
   227f8:	b.ne	2280c <PyInit__decimal@@Base+0x11884>  // b.any
   227fc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   22800:	ldr	x1, [x0, #1720]
   22804:	ldr	x0, [sp, #328]
   22808:	blr	x1
   2280c:	ldrb	w0, [sp, #288]
   22810:	tbnz	w0, #4, 22824 <PyInit__decimal@@Base+0x1189c>
   22814:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   22818:	ldr	x1, [x0, #1720]
   2281c:	add	x0, sp, #0x120
   22820:	blr	x1
   22824:	ldp	x0, x1, [x23]
   22828:	stp	x0, x1, [sp, #144]
   2282c:	mov	x2, x21
   22830:	ldp	x0, x1, [x23, #16]
   22834:	stp	x0, x1, [sp, #160]
   22838:	ldp	x0, x1, [x23, #32]
   2283c:	stp	x0, x1, [sp, #176]
   22840:	mov	x1, x24
   22844:	mov	w0, #0x6                   	// #6
   22848:	str	w0, [sp, #180]
   2284c:	b	22594 <PyInit__decimal@@Base+0x1160c>
   22850:	ldr	x2, [sp, #104]
   22854:	mov	x3, x21
   22858:	mov	x1, x19
   2285c:	mov	x0, x19
   22860:	bl	19718 <PyInit__decimal@@Base+0x8790>
   22864:	cbnz	w0, 22784 <PyInit__decimal@@Base+0x117fc>
   22868:	mov	x2, x21
   2286c:	mov	w1, #0x200                 	// #512
   22870:	b	226a8 <PyInit__decimal@@Base+0x11720>
   22874:	ldr	x2, [x19, #40]
   22878:	mov	x3, #0xa                   	// #10
   2287c:	ldr	x0, [x2]
   22880:	udiv	x1, x0, x3
   22884:	msub	x1, x1, x3, x0
   22888:	cmp	w1, #0x0
   2288c:	ccmp	w1, #0x5, #0x4, ne  // ne = any
   22890:	b.ne	2289c <PyInit__decimal@@Base+0x11914>  // b.any
   22894:	add	x0, x0, #0x1
   22898:	str	x0, [x2]
   2289c:	ldr	x25, [sp, #112]
   228a0:	b	22784 <PyInit__decimal@@Base+0x117fc>
   228a4:	ldrb	w2, [x0]
   228a8:	tst	w2, #0xe
   228ac:	b.ne	228c4 <PyInit__decimal@@Base+0x1193c>  // b.any
   228b0:	ldr	x2, [x0, #24]
   228b4:	ldr	x3, [x0, #40]
   228b8:	add	x2, x3, x2, lsl #3
   228bc:	ldur	x2, [x2, #-8]
   228c0:	cbz	x2, 22930 <PyInit__decimal@@Base+0x119a8>
   228c4:	stp	x29, x30, [sp, #-32]!
   228c8:	mov	x29, sp
   228cc:	str	x19, [sp, #16]
   228d0:	ldr	x19, [x0, #16]
   228d4:	ldr	x0, [x0, #8]
   228d8:	add	x19, x19, x0
   228dc:	mov	x0, #0xbcfe                	// #48382
   228e0:	movk	x0, #0xa84f, lsl #16
   228e4:	movk	x0, #0xa209, lsl #32
   228e8:	movk	x0, #0x9, lsl #48
   228ec:	cmp	x19, x0
   228f0:	b.ls	22904 <PyInit__decimal@@Base+0x1197c>  // b.plast
   228f4:	mov	x0, #0xffffffffffffffff    	// #-1
   228f8:	ldr	x19, [sp, #16]
   228fc:	ldp	x29, x30, [sp], #32
   22900:	ret
   22904:	ucvtf	d0, w1
   22908:	bl	66b0 <log10@plt>
   2290c:	scvtf	d1, x19
   22910:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
   22914:	fdiv	d0, d1, d0
   22918:	fmov	d1, x0
   2291c:	fcmpe	d0, d1
   22920:	b.gt	228f4 <PyInit__decimal@@Base+0x1196c>
   22924:	fcvtzu	x0, d0
   22928:	add	x0, x0, #0x1
   2292c:	b	228f8 <PyInit__decimal@@Base+0x11970>
   22930:	mov	x0, #0x1                   	// #1
   22934:	ret
   22938:	sub	sp, sp, #0x2a0
   2293c:	stp	x29, x30, [sp]
   22940:	mov	x29, sp
   22944:	stp	x21, x22, [sp, #32]
   22948:	mov	x22, x0
   2294c:	mov	w0, #0x30                  	// #48
   22950:	stp	x19, x20, [sp, #16]
   22954:	mov	x21, x4
   22958:	stp	x23, x24, [sp, #48]
   2295c:	stp	x25, x26, [sp, #64]
   22960:	stp	x27, x28, [sp, #80]
   22964:	strb	w0, [sp, #112]
   22968:	mov	x0, #0x40                  	// #64
   2296c:	stp	xzr, x0, [sp, #136]
   22970:	add	x0, sp, #0xa0
   22974:	stp	xzr, xzr, [sp, #120]
   22978:	str	x0, [sp, #152]
   2297c:	ldrb	w0, [x3]
   22980:	tst	w0, #0xe
   22984:	b.ne	229a0 <PyInit__decimal@@Base+0x11a18>  // b.any
   22988:	mov	x19, x1
   2298c:	mov	w23, w2
   22990:	mov	x20, x3
   22994:	mov	x0, x3
   22998:	bl	1863c <PyInit__decimal@@Base+0x76b4>
   2299c:	cbnz	w0, 229d4 <PyInit__decimal@@Base+0x11a4c>
   229a0:	ldr	w0, [x21]
   229a4:	mov	x19, #0xffffffffffffffff    	// #-1
   229a8:	orr	w0, w0, #0x100
   229ac:	str	w0, [x21]
   229b0:	mov	x0, x19
   229b4:	ldp	x29, x30, [sp]
   229b8:	ldp	x19, x20, [sp, #16]
   229bc:	ldp	x21, x22, [sp, #32]
   229c0:	ldp	x23, x24, [sp, #48]
   229c4:	ldp	x25, x26, [sp, #64]
   229c8:	ldp	x27, x28, [sp, #80]
   229cc:	add	sp, sp, #0x2a0
   229d0:	ret
   229d4:	ldr	x0, [x22]
   229d8:	cbnz	x0, 22a48 <PyInit__decimal@@Base+0x11ac0>
   229dc:	mov	w1, w23
   229e0:	mov	x0, x20
   229e4:	bl	228a4 <PyInit__decimal@@Base+0x1191c>
   229e8:	mov	x19, x0
   229ec:	cmn	x0, #0x1
   229f0:	b.ne	22a04 <PyInit__decimal@@Base+0x11a7c>  // b.any
   229f4:	ldr	w0, [x21]
   229f8:	orr	w0, w0, #0x100
   229fc:	str	w0, [x21]
   22a00:	b	229b0 <PyInit__decimal@@Base+0x11a28>
   22a04:	mov	x1, #0x2                   	// #2
   22a08:	bl	15cd0 <PyInit__decimal@@Base+0x4d48>
   22a0c:	str	x0, [x22]
   22a10:	cbz	x0, 22b5c <PyInit__decimal@@Base+0x11bd4>
   22a14:	ldrb	w0, [x20]
   22a18:	mov	w25, #0x1                   	// #1
   22a1c:	tst	w0, #0xe
   22a20:	b.ne	22a50 <PyInit__decimal@@Base+0x11ac8>  // b.any
   22a24:	ldr	x0, [x20, #24]
   22a28:	ldr	x1, [x20, #40]
   22a2c:	add	x0, x1, x0, lsl #3
   22a30:	ldur	x0, [x0, #-8]
   22a34:	cbnz	x0, 22a50 <PyInit__decimal@@Base+0x11ac8>
   22a38:	ldr	x0, [x22]
   22a3c:	mov	x19, #0x1                   	// #1
   22a40:	strh	wzr, [x0]
   22a44:	b	229b0 <PyInit__decimal@@Base+0x11a28>
   22a48:	mov	w25, #0x0                   	// #0
   22a4c:	b	22a24 <PyInit__decimal@@Base+0x11a9c>
   22a50:	ldr	x2, [x20, #8]
   22a54:	add	x0, sp, #0x70
   22a58:	mov	x3, x21
   22a5c:	tbnz	x2, #63, 22b30 <PyInit__decimal@@Base+0x11ba8>
   22a60:	mov	x1, x20
   22a64:	bl	19718 <PyInit__decimal@@Base+0x8790>
   22a68:	cbz	w0, 22b44 <PyInit__decimal@@Base+0x11bbc>
   22a6c:	ldr	x20, [sp, #136]
   22a70:	add	x27, sp, #0x6f
   22a74:	ldr	x24, [sp, #152]
   22a78:	mov	x28, x19
   22a7c:	mov	x19, #0x0                   	// #0
   22a80:	mov	x26, x19
   22a84:	add	x19, x19, #0x1
   22a88:	cmp	x26, x28
   22a8c:	b.cc	22ab8 <PyInit__decimal@@Base+0x11b30>  // b.lo, b.ul, b.last
   22a90:	ldr	x0, [x22]
   22a94:	mov	x3, x27
   22a98:	mov	x1, x19
   22a9c:	mov	x2, #0x2                   	// #2
   22aa0:	strb	wzr, [sp, #111]
   22aa4:	bl	15d18 <PyInit__decimal@@Base+0x4d90>
   22aa8:	str	x0, [x22]
   22aac:	ldrb	w0, [sp, #111]
   22ab0:	cbnz	w0, 22b44 <PyInit__decimal@@Base+0x11bbc>
   22ab4:	mov	x28, x19
   22ab8:	mov	x2, x20
   22abc:	mov	x3, x23
   22ac0:	mov	x1, x24
   22ac4:	mov	x0, x24
   22ac8:	bl	11f90 <PyInit__decimal@@Base+0x1008>
   22acc:	ldr	x1, [x22]
   22ad0:	strh	w0, [x1, x26, lsl #1]
   22ad4:	mov	x1, x20
   22ad8:	mov	x0, x24
   22adc:	bl	161c8 <PyInit__decimal@@Base+0x5240>
   22ae0:	mov	x20, x0
   22ae4:	add	x0, x24, x0, lsl #3
   22ae8:	ldur	x0, [x0, #-8]
   22aec:	cbnz	x0, 22a80 <PyInit__decimal@@Base+0x11af8>
   22af0:	cmn	x19, #0x1
   22af4:	b.eq	22b44 <PyInit__decimal@@Base+0x11bbc>  // b.none
   22af8:	ldrb	w0, [sp, #112]
   22afc:	tst	w0, #0xe0
   22b00:	b.ne	22b14 <PyInit__decimal@@Base+0x11b8c>  // b.any
   22b04:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   22b08:	ldr	x1, [x0, #1720]
   22b0c:	ldr	x0, [sp, #152]
   22b10:	blr	x1
   22b14:	ldrb	w0, [sp, #112]
   22b18:	tbnz	w0, #4, 229b0 <PyInit__decimal@@Base+0x11a28>
   22b1c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   22b20:	ldr	x1, [x0, #1720]
   22b24:	add	x0, sp, #0x70
   22b28:	blr	x1
   22b2c:	b	229b0 <PyInit__decimal@@Base+0x11a28>
   22b30:	neg	x2, x2
   22b34:	mov	x1, x20
   22b38:	bl	1a260 <PyInit__decimal@@Base+0x92d8>
   22b3c:	cmn	x0, #0x1
   22b40:	b.ne	22a6c <PyInit__decimal@@Base+0x11ae4>  // b.any
   22b44:	cbz	w25, 22b5c <PyInit__decimal@@Base+0x11bd4>
   22b48:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   22b4c:	ldr	x1, [x0, #1720]
   22b50:	ldr	x0, [x22]
   22b54:	blr	x1
   22b58:	str	xzr, [x22]
   22b5c:	ldr	w0, [x21]
   22b60:	mov	x19, #0xffffffffffffffff    	// #-1
   22b64:	orr	w0, w0, #0x200
   22b68:	str	w0, [x21]
   22b6c:	b	22af8 <PyInit__decimal@@Base+0x11b70>
   22b70:	sub	sp, sp, #0x2b0
   22b74:	stp	x29, x30, [sp]
   22b78:	mov	x29, sp
   22b7c:	stp	x21, x22, [sp, #32]
   22b80:	mov	x22, x0
   22b84:	mov	w0, #0x30                  	// #48
   22b88:	stp	x19, x20, [sp, #16]
   22b8c:	mov	x21, x4
   22b90:	stp	x23, x24, [sp, #48]
   22b94:	stp	x25, x26, [sp, #64]
   22b98:	stp	x27, x28, [sp, #80]
   22b9c:	strb	w0, [sp, #128]
   22ba0:	mov	x0, #0x40                  	// #64
   22ba4:	stp	xzr, x0, [sp, #152]
   22ba8:	add	x0, sp, #0xb0
   22bac:	stp	xzr, xzr, [sp, #136]
   22bb0:	str	x0, [sp, #168]
   22bb4:	ldrb	w0, [x3]
   22bb8:	tst	w0, #0xe
   22bbc:	b.ne	22bd8 <PyInit__decimal@@Base+0x11c50>  // b.any
   22bc0:	mov	x19, x1
   22bc4:	mov	w23, w2
   22bc8:	mov	x20, x3
   22bcc:	mov	x0, x3
   22bd0:	bl	1863c <PyInit__decimal@@Base+0x76b4>
   22bd4:	cbnz	w0, 22c0c <PyInit__decimal@@Base+0x11c84>
   22bd8:	ldr	w0, [x21]
   22bdc:	mov	x19, #0xffffffffffffffff    	// #-1
   22be0:	orr	w0, w0, #0x100
   22be4:	str	w0, [x21]
   22be8:	mov	x0, x19
   22bec:	ldp	x29, x30, [sp]
   22bf0:	ldp	x19, x20, [sp, #16]
   22bf4:	ldp	x21, x22, [sp, #32]
   22bf8:	ldp	x23, x24, [sp, #48]
   22bfc:	ldp	x25, x26, [sp, #64]
   22c00:	ldp	x27, x28, [sp, #80]
   22c04:	add	sp, sp, #0x2b0
   22c08:	ret
   22c0c:	ldr	x0, [x22]
   22c10:	cbnz	x0, 22c80 <PyInit__decimal@@Base+0x11cf8>
   22c14:	mov	w1, w23
   22c18:	mov	x0, x20
   22c1c:	bl	228a4 <PyInit__decimal@@Base+0x1191c>
   22c20:	mov	x19, x0
   22c24:	cmn	x0, #0x1
   22c28:	b.ne	22c3c <PyInit__decimal@@Base+0x11cb4>  // b.any
   22c2c:	ldr	w0, [x21]
   22c30:	orr	w0, w0, #0x100
   22c34:	str	w0, [x21]
   22c38:	b	22be8 <PyInit__decimal@@Base+0x11c60>
   22c3c:	mov	x1, #0x4                   	// #4
   22c40:	bl	15cd0 <PyInit__decimal@@Base+0x4d48>
   22c44:	str	x0, [x22]
   22c48:	cbz	x0, 22dac <PyInit__decimal@@Base+0x11e24>
   22c4c:	ldrb	w0, [x20]
   22c50:	mov	w25, #0x1                   	// #1
   22c54:	tst	w0, #0xe
   22c58:	b.ne	22c88 <PyInit__decimal@@Base+0x11d00>  // b.any
   22c5c:	ldr	x0, [x20, #24]
   22c60:	ldr	x1, [x20, #40]
   22c64:	add	x0, x1, x0, lsl #3
   22c68:	ldur	x0, [x0, #-8]
   22c6c:	cbnz	x0, 22c88 <PyInit__decimal@@Base+0x11d00>
   22c70:	ldr	x0, [x22]
   22c74:	mov	x19, #0x1                   	// #1
   22c78:	str	wzr, [x0]
   22c7c:	b	22be8 <PyInit__decimal@@Base+0x11c60>
   22c80:	mov	w25, #0x0                   	// #0
   22c84:	b	22c5c <PyInit__decimal@@Base+0x11cd4>
   22c88:	ldr	x2, [x20, #8]
   22c8c:	add	x0, sp, #0x80
   22c90:	mov	x3, x21
   22c94:	tbnz	x2, #63, 22d80 <PyInit__decimal@@Base+0x11df8>
   22c98:	mov	x1, x20
   22c9c:	bl	19718 <PyInit__decimal@@Base+0x8790>
   22ca0:	cbz	w0, 22d94 <PyInit__decimal@@Base+0x11e0c>
   22ca4:	mov	x27, #0x89e80000            	// #2313682944
   22ca8:	add	x26, sp, #0x7f
   22cac:	ldr	x20, [sp, #152]
   22cb0:	movk	x27, #0x2304, lsl #32
   22cb4:	ldr	x24, [sp, #168]
   22cb8:	mov	x5, x19
   22cbc:	movk	x27, #0x8ac7, lsl #48
   22cc0:	mov	x19, #0x0                   	// #0
   22cc4:	mov	x28, x19
   22cc8:	add	x19, x19, #0x1
   22ccc:	cmp	x28, x5
   22cd0:	b.cc	22cfc <PyInit__decimal@@Base+0x11d74>  // b.lo, b.ul, b.last
   22cd4:	ldr	x0, [x22]
   22cd8:	mov	x3, x26
   22cdc:	mov	x1, x19
   22ce0:	mov	x2, #0x4                   	// #4
   22ce4:	strb	wzr, [sp, #127]
   22ce8:	bl	15d18 <PyInit__decimal@@Base+0x4d90>
   22cec:	str	x0, [x22]
   22cf0:	ldrb	w0, [sp, #127]
   22cf4:	cbnz	w0, 22d94 <PyInit__decimal@@Base+0x11e0c>
   22cf8:	mov	x5, x19
   22cfc:	mov	x2, x20
   22d00:	mov	x4, x27
   22d04:	mov	x3, x23
   22d08:	mov	x1, x24
   22d0c:	mov	x0, x24
   22d10:	str	x5, [sp, #104]
   22d14:	bl	12720 <PyInit__decimal@@Base+0x1798>
   22d18:	ldr	x1, [x22]
   22d1c:	str	w0, [x1, x28, lsl #2]
   22d20:	mov	x1, x20
   22d24:	mov	x0, x24
   22d28:	bl	161c8 <PyInit__decimal@@Base+0x5240>
   22d2c:	mov	x20, x0
   22d30:	add	x0, x24, x0, lsl #3
   22d34:	ldr	x5, [sp, #104]
   22d38:	ldur	x0, [x0, #-8]
   22d3c:	cbnz	x0, 22cc4 <PyInit__decimal@@Base+0x11d3c>
   22d40:	cmn	x19, #0x1
   22d44:	b.eq	22d94 <PyInit__decimal@@Base+0x11e0c>  // b.none
   22d48:	ldrb	w0, [sp, #128]
   22d4c:	tst	w0, #0xe0
   22d50:	b.ne	22d64 <PyInit__decimal@@Base+0x11ddc>  // b.any
   22d54:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   22d58:	ldr	x1, [x0, #1720]
   22d5c:	ldr	x0, [sp, #168]
   22d60:	blr	x1
   22d64:	ldrb	w0, [sp, #128]
   22d68:	tbnz	w0, #4, 22be8 <PyInit__decimal@@Base+0x11c60>
   22d6c:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   22d70:	ldr	x1, [x0, #1720]
   22d74:	add	x0, sp, #0x80
   22d78:	blr	x1
   22d7c:	b	22be8 <PyInit__decimal@@Base+0x11c60>
   22d80:	neg	x2, x2
   22d84:	mov	x1, x20
   22d88:	bl	1a260 <PyInit__decimal@@Base+0x92d8>
   22d8c:	cmn	x0, #0x1
   22d90:	b.ne	22ca4 <PyInit__decimal@@Base+0x11d1c>  // b.any
   22d94:	cbz	w25, 22dac <PyInit__decimal@@Base+0x11e24>
   22d98:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   22d9c:	ldr	x1, [x0, #1720]
   22da0:	ldr	x0, [x22]
   22da4:	blr	x1
   22da8:	str	xzr, [x22]
   22dac:	ldr	w0, [x21]
   22db0:	mov	x19, #0xffffffffffffffff    	// #-1
   22db4:	orr	w0, w0, #0x200
   22db8:	str	w0, [x21]
   22dbc:	b	22d48 <PyInit__decimal@@Base+0x11dc0>
   22dc0:	stp	x29, x30, [sp, #-112]!
   22dc4:	mov	x29, sp
   22dc8:	stp	x19, x20, [sp, #16]
   22dcc:	mov	x19, x0
   22dd0:	and	w0, w3, #0xff
   22dd4:	stp	x21, x22, [sp, #32]
   22dd8:	mov	x21, x6
   22ddc:	stp	x23, x24, [sp, #48]
   22de0:	stp	x25, x26, [sp, #64]
   22de4:	stp	x27, x28, [sp, #80]
   22de8:	str	w0, [sp, #100]
   22dec:	mov	x0, #0x20000000000000      	// #9007199254740992
   22df0:	str	x5, [sp, #104]
   22df4:	cmp	x2, x0
   22df8:	b.ls	22e24 <PyInit__decimal@@Base+0x11e9c>  // b.plast
   22dfc:	mov	x2, x21
   22e00:	mov	w1, #0x100                 	// #256
   22e04:	mov	x0, x19
   22e08:	ldp	x19, x20, [sp, #16]
   22e0c:	ldp	x21, x22, [sp, #32]
   22e10:	ldp	x23, x24, [sp, #48]
   22e14:	ldp	x25, x26, [sp, #64]
   22e18:	ldp	x27, x28, [sp, #80]
   22e1c:	ldp	x29, x30, [sp], #112
   22e20:	b	18904 <PyInit__decimal@@Base+0x797c>
   22e24:	mov	w25, w4
   22e28:	mov	x22, x2
   22e2c:	mov	x24, x1
   22e30:	ucvtf	d0, w25
   22e34:	bl	66b0 <log10@plt>
   22e38:	fmov	d1, #1.900000000000000000e+01
   22e3c:	adrp	x0, 2b000 <PyInit__decimal@@Base+0x1a078>
   22e40:	fdiv	d1, d0, d1
   22e44:	scvtf	d0, x22
   22e48:	fmul	d0, d0, d1
   22e4c:	ldr	d1, [x0, #2536]
   22e50:	fcmpe	d0, d1
   22e54:	b.ge	22dfc <PyInit__decimal@@Base+0x11e74>  // b.tcont
   22e58:	fcvtzs	x20, d0
   22e5c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   22e60:	add	x20, x20, #0x1
   22e64:	cmp	x20, x0
   22e68:	b.eq	22dfc <PyInit__decimal@@Base+0x11e74>  // b.none
   22e6c:	mov	x0, x22
   22e70:	mov	x1, #0x8                   	// #8
   22e74:	bl	15cd0 <PyInit__decimal@@Base+0x4d48>
   22e78:	mov	x23, x0
   22e7c:	mov	x0, #0x0                   	// #0
   22e80:	cbnz	x23, 22e9c <PyInit__decimal@@Base+0x11f14>
   22e84:	mov	x2, x21
   22e88:	mov	w1, #0x200                 	// #512
   22e8c:	b	22e04 <PyInit__decimal@@Base+0x11e7c>
   22e90:	ldrh	w1, [x24, x0, lsl #1]
   22e94:	str	x1, [x23, x0, lsl #3]
   22e98:	add	x0, x0, #0x1
   22e9c:	cmp	x0, x22
   22ea0:	b.ne	22e90 <PyInit__decimal@@Base+0x11f08>  // b.any
   22ea4:	adrp	x24, 45000 <PyInit__decimal@@Base+0x34078>
   22ea8:	ldr	x0, [x19, #32]
   22eac:	ldr	x1, [x24, #1688]
   22eb0:	cmp	x1, x20
   22eb4:	csel	x1, x1, x20, ge  // ge = tcont
   22eb8:	cmp	x1, x0
   22ebc:	b.ne	22f58 <PyInit__decimal@@Base+0x11fd0>  // b.any
   22ec0:	sub	x22, x22, #0x1
   22ec4:	mov	x26, #0x1                   	// #1
   22ec8:	ldr	x0, [x19, #40]
   22ecc:	ldr	x1, [x23, x22, lsl #3]
   22ed0:	str	x1, [x0]
   22ed4:	sub	x22, x22, #0x1
   22ed8:	cmn	x22, #0x1
   22edc:	b.ne	22fb4 <PyInit__decimal@@Base+0x1202c>  // b.any
   22ee0:	cmn	x26, #0x1
   22ee4:	b.eq	22f78 <PyInit__decimal@@Base+0x11ff0>  // b.none
   22ee8:	ldrb	w0, [x19]
   22eec:	ldr	w1, [sp, #100]
   22ef0:	and	w0, w0, #0xfffffff0
   22ef4:	str	xzr, [x19, #8]
   22ef8:	orr	w27, w1, w0
   22efc:	strb	w27, [x19]
   22f00:	str	x26, [x19, #24]
   22f04:	mov	x0, x19
   22f08:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   22f0c:	ldr	x0, [x24, #1688]
   22f10:	ldr	x1, [x19, #24]
   22f14:	cmp	x1, x0
   22f18:	csel	x1, x1, x0, ge  // ge = tcont
   22f1c:	ldr	x0, [x19, #32]
   22f20:	cmp	x1, x0
   22f24:	b.eq	22f44 <PyInit__decimal@@Base+0x11fbc>  // b.none
   22f28:	ldrb	w2, [x19]
   22f2c:	tbz	w2, #5, 230b4 <PyInit__decimal@@Base+0x1212c>
   22f30:	cmp	x1, x0
   22f34:	b.le	22f44 <PyInit__decimal@@Base+0x11fbc>
   22f38:	mov	x2, x21
   22f3c:	mov	x0, x19
   22f40:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   22f44:	ldr	x1, [sp, #104]
   22f48:	mov	x2, x21
   22f4c:	mov	x0, x19
   22f50:	bl	19f98 <PyInit__decimal@@Base+0x9010>
   22f54:	b	22f78 <PyInit__decimal@@Base+0x11ff0>
   22f58:	ldrb	w2, [x19]
   22f5c:	tbz	w2, #5, 22fa4 <PyInit__decimal@@Base+0x1201c>
   22f60:	cmp	x1, x0
   22f64:	b.le	22ec0 <PyInit__decimal@@Base+0x11f38>
   22f68:	mov	x2, x21
   22f6c:	mov	x0, x19
   22f70:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   22f74:	cbnz	w0, 22ec0 <PyInit__decimal@@Base+0x11f38>
   22f78:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   22f7c:	ldp	x19, x20, [sp, #16]
   22f80:	ldr	x1, [x0, #1720]
   22f84:	mov	x0, x23
   22f88:	ldp	x21, x22, [sp, #32]
   22f8c:	mov	x16, x1
   22f90:	ldp	x23, x24, [sp, #48]
   22f94:	ldp	x25, x26, [sp, #64]
   22f98:	ldp	x27, x28, [sp, #80]
   22f9c:	ldp	x29, x30, [sp], #112
   22fa0:	br	x16
   22fa4:	mov	x2, x21
   22fa8:	mov	x0, x19
   22fac:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   22fb0:	b	22f74 <PyInit__decimal@@Base+0x11fec>
   22fb4:	ldr	x1, [x19, #40]
   22fb8:	mov	x3, x25
   22fbc:	mov	x2, x26
   22fc0:	mov	x0, x1
   22fc4:	bl	1262c <PyInit__decimal@@Base+0x16a4>
   22fc8:	mov	x28, x0
   22fcc:	cbz	x0, 23024 <PyInit__decimal@@Base+0x1209c>
   22fd0:	add	x27, x26, #0x1
   22fd4:	cmp	x26, x20
   22fd8:	b.lt	23018 <PyInit__decimal@@Base+0x12090>  // b.tstop
   22fdc:	ldr	x1, [x24, #1688]
   22fe0:	ldr	x0, [x19, #32]
   22fe4:	cmp	x1, x27
   22fe8:	csel	x1, x1, x27, ge  // ge = tcont
   22fec:	cmp	x1, x0
   22ff0:	b.eq	23014 <PyInit__decimal@@Base+0x1208c>  // b.none
   22ff4:	ldrb	w2, [x19]
   22ff8:	tbz	w2, #5, 23094 <PyInit__decimal@@Base+0x1210c>
   22ffc:	cmp	x1, x0
   23000:	b.le	23014 <PyInit__decimal@@Base+0x1208c>
   23004:	mov	x2, x21
   23008:	mov	x0, x19
   2300c:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   23010:	cbz	w0, 22f78 <PyInit__decimal@@Base+0x11ff0>
   23014:	mov	x20, x27
   23018:	ldr	x0, [x19, #40]
   2301c:	str	x28, [x0, x26, lsl #3]
   23020:	mov	x26, x27
   23024:	ldr	x2, [x23, x22, lsl #3]
   23028:	mov	x1, x26
   2302c:	ldr	x0, [x19, #40]
   23030:	bl	11cb0 <PyInit__decimal@@Base+0xd28>
   23034:	mov	x28, x0
   23038:	cbz	x0, 22ed4 <PyInit__decimal@@Base+0x11f4c>
   2303c:	add	x27, x26, #0x1
   23040:	cmp	x26, x20
   23044:	b.lt	23084 <PyInit__decimal@@Base+0x120fc>  // b.tstop
   23048:	ldr	x1, [x24, #1688]
   2304c:	ldr	x0, [x19, #32]
   23050:	cmp	x1, x27
   23054:	csel	x1, x1, x27, ge  // ge = tcont
   23058:	cmp	x1, x0
   2305c:	b.eq	23080 <PyInit__decimal@@Base+0x120f8>  // b.none
   23060:	ldrb	w2, [x19]
   23064:	tbz	w2, #5, 230a4 <PyInit__decimal@@Base+0x1211c>
   23068:	cmp	x1, x0
   2306c:	b.le	23080 <PyInit__decimal@@Base+0x120f8>
   23070:	mov	x2, x21
   23074:	mov	x0, x19
   23078:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   2307c:	cbz	w0, 22f78 <PyInit__decimal@@Base+0x11ff0>
   23080:	mov	x20, x27
   23084:	ldr	x0, [x19, #40]
   23088:	str	x28, [x0, x26, lsl #3]
   2308c:	mov	x26, x27
   23090:	b	22ed4 <PyInit__decimal@@Base+0x11f4c>
   23094:	mov	x2, x21
   23098:	mov	x0, x19
   2309c:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   230a0:	b	23010 <PyInit__decimal@@Base+0x12088>
   230a4:	mov	x2, x21
   230a8:	mov	x0, x19
   230ac:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   230b0:	b	2307c <PyInit__decimal@@Base+0x120f4>
   230b4:	mov	x2, x21
   230b8:	mov	x0, x19
   230bc:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   230c0:	b	22f44 <PyInit__decimal@@Base+0x11fbc>
   230c4:	stp	x29, x30, [sp, #-128]!
   230c8:	mov	x29, sp
   230cc:	stp	x19, x20, [sp, #16]
   230d0:	mov	x19, x0
   230d4:	and	w0, w3, #0xff
   230d8:	stp	x21, x22, [sp, #32]
   230dc:	mov	x20, x6
   230e0:	stp	x23, x24, [sp, #48]
   230e4:	stp	x25, x26, [sp, #64]
   230e8:	stp	x27, x28, [sp, #80]
   230ec:	str	w0, [sp, #116]
   230f0:	mov	x0, #0x20000000000000      	// #9007199254740992
   230f4:	str	x5, [sp, #120]
   230f8:	cmp	x2, x0
   230fc:	b.ls	23128 <PyInit__decimal@@Base+0x121a0>  // b.plast
   23100:	mov	x2, x20
   23104:	mov	x0, x19
   23108:	ldp	x19, x20, [sp, #16]
   2310c:	mov	w1, #0x100                 	// #256
   23110:	ldp	x21, x22, [sp, #32]
   23114:	ldp	x23, x24, [sp, #48]
   23118:	ldp	x25, x26, [sp, #64]
   2311c:	ldp	x27, x28, [sp, #80]
   23120:	ldp	x29, x30, [sp], #128
   23124:	b	18904 <PyInit__decimal@@Base+0x797c>
   23128:	ucvtf	d0, w4
   2312c:	mov	x21, x2
   23130:	mov	x24, x1
   23134:	mov	w23, w4
   23138:	bl	66b0 <log10@plt>
   2313c:	fmov	d1, #1.900000000000000000e+01
   23140:	adrp	x0, 2b000 <PyInit__decimal@@Base+0x1a078>
   23144:	fdiv	d1, d0, d1
   23148:	scvtf	d0, x21
   2314c:	fmul	d0, d0, d1
   23150:	ldr	d1, [x0, #2536]
   23154:	fcmpe	d0, d1
   23158:	b.ge	23100 <PyInit__decimal@@Base+0x12178>  // b.tcont
   2315c:	fcvtzs	x5, d0
   23160:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   23164:	add	x27, x5, #0x1
   23168:	cmp	x27, x0
   2316c:	b.eq	23100 <PyInit__decimal@@Base+0x12178>  // b.none
   23170:	adrp	x22, 45000 <PyInit__decimal@@Base+0x34078>
   23174:	ldr	x0, [x19, #32]
   23178:	ldr	x1, [x22, #1688]
   2317c:	cmp	x1, x27
   23180:	csel	x1, x1, x27, ge  // ge = tcont
   23184:	cmp	x1, x0
   23188:	b.ne	2324c <PyInit__decimal@@Base+0x122c4>  // b.any
   2318c:	mov	w0, w23
   23190:	sub	x21, x21, #0x1
   23194:	str	x0, [sp, #104]
   23198:	mov	x28, #0x89e80000            	// #2313682944
   2319c:	ldr	x0, [x19, #40]
   231a0:	movk	x28, #0x2304, lsl #32
   231a4:	ldr	w1, [x24, x21, lsl #2]
   231a8:	mov	x26, #0x1                   	// #1
   231ac:	movk	x28, #0x8ac7, lsl #48
   231b0:	str	x1, [x0]
   231b4:	sub	x21, x21, #0x1
   231b8:	cmn	x21, #0x1
   231bc:	b.ne	23298 <PyInit__decimal@@Base+0x12310>  // b.any
   231c0:	cmn	x26, #0x1
   231c4:	b.eq	2326c <PyInit__decimal@@Base+0x122e4>  // b.none
   231c8:	ldrb	w0, [x19]
   231cc:	ldr	w1, [sp, #116]
   231d0:	and	w0, w0, #0xfffffff0
   231d4:	str	xzr, [x19, #8]
   231d8:	orr	w27, w1, w0
   231dc:	strb	w27, [x19]
   231e0:	str	x26, [x19, #24]
   231e4:	mov	x0, x19
   231e8:	bl	17e14 <PyInit__decimal@@Base+0x6e8c>
   231ec:	ldr	x0, [x22, #1688]
   231f0:	ldr	x1, [x19, #24]
   231f4:	cmp	x1, x0
   231f8:	csel	x1, x1, x0, ge  // ge = tcont
   231fc:	ldr	x0, [x19, #32]
   23200:	cmp	x1, x0
   23204:	b.eq	23224 <PyInit__decimal@@Base+0x1229c>  // b.none
   23208:	ldrb	w2, [x19]
   2320c:	tbz	w2, #5, 233a0 <PyInit__decimal@@Base+0x12418>
   23210:	cmp	x1, x0
   23214:	b.le	23224 <PyInit__decimal@@Base+0x1229c>
   23218:	mov	x2, x20
   2321c:	mov	x0, x19
   23220:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   23224:	mov	x2, x20
   23228:	mov	x0, x19
   2322c:	ldp	x19, x20, [sp, #16]
   23230:	ldp	x21, x22, [sp, #32]
   23234:	ldp	x23, x24, [sp, #48]
   23238:	ldp	x25, x26, [sp, #64]
   2323c:	ldp	x27, x28, [sp, #80]
   23240:	ldr	x1, [sp, #120]
   23244:	ldp	x29, x30, [sp], #128
   23248:	b	19f98 <PyInit__decimal@@Base+0x9010>
   2324c:	ldrb	w2, [x19]
   23250:	tbz	w2, #5, 23288 <PyInit__decimal@@Base+0x12300>
   23254:	cmp	x1, x0
   23258:	b.le	2318c <PyInit__decimal@@Base+0x12204>
   2325c:	mov	x2, x20
   23260:	mov	x0, x19
   23264:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   23268:	cbnz	w0, 2318c <PyInit__decimal@@Base+0x12204>
   2326c:	ldp	x19, x20, [sp, #16]
   23270:	ldp	x21, x22, [sp, #32]
   23274:	ldp	x23, x24, [sp, #48]
   23278:	ldp	x25, x26, [sp, #64]
   2327c:	ldp	x27, x28, [sp, #80]
   23280:	ldp	x29, x30, [sp], #128
   23284:	ret
   23288:	mov	x2, x20
   2328c:	mov	x0, x19
   23290:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   23294:	b	23268 <PyInit__decimal@@Base+0x122e0>
   23298:	ldr	x1, [x19, #40]
   2329c:	mov	x4, x28
   232a0:	ldr	x3, [sp, #104]
   232a4:	mov	x2, x26
   232a8:	mov	x0, x1
   232ac:	bl	12690 <PyInit__decimal@@Base+0x1708>
   232b0:	mov	x25, x0
   232b4:	cbz	x0, 2330c <PyInit__decimal@@Base+0x12384>
   232b8:	add	x23, x26, #0x1
   232bc:	cmp	x26, x27
   232c0:	b.lt	23300 <PyInit__decimal@@Base+0x12378>  // b.tstop
   232c4:	ldr	x1, [x22, #1688]
   232c8:	ldr	x0, [x19, #32]
   232cc:	cmp	x1, x23
   232d0:	csel	x1, x1, x23, ge  // ge = tcont
   232d4:	cmp	x1, x0
   232d8:	b.eq	232fc <PyInit__decimal@@Base+0x12374>  // b.none
   232dc:	ldrb	w2, [x19]
   232e0:	tbz	w2, #5, 23380 <PyInit__decimal@@Base+0x123f8>
   232e4:	cmp	x1, x0
   232e8:	b.le	232fc <PyInit__decimal@@Base+0x12374>
   232ec:	mov	x2, x20
   232f0:	mov	x0, x19
   232f4:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   232f8:	cbz	w0, 2326c <PyInit__decimal@@Base+0x122e4>
   232fc:	mov	x27, x23
   23300:	ldr	x0, [x19, #40]
   23304:	str	x25, [x0, x26, lsl #3]
   23308:	mov	x26, x23
   2330c:	ldr	w2, [x24, x21, lsl #2]
   23310:	mov	x3, x28
   23314:	ldr	x0, [x19, #40]
   23318:	mov	x1, x26
   2331c:	bl	125c8 <PyInit__decimal@@Base+0x1640>
   23320:	mov	x25, x0
   23324:	cbz	x0, 231b4 <PyInit__decimal@@Base+0x1222c>
   23328:	add	x23, x26, #0x1
   2332c:	cmp	x26, x27
   23330:	b.lt	23370 <PyInit__decimal@@Base+0x123e8>  // b.tstop
   23334:	ldr	x1, [x22, #1688]
   23338:	ldr	x0, [x19, #32]
   2333c:	cmp	x1, x23
   23340:	csel	x1, x1, x23, ge  // ge = tcont
   23344:	cmp	x1, x0
   23348:	b.eq	2336c <PyInit__decimal@@Base+0x123e4>  // b.none
   2334c:	ldrb	w2, [x19]
   23350:	tbz	w2, #5, 23390 <PyInit__decimal@@Base+0x12408>
   23354:	cmp	x1, x0
   23358:	b.le	2336c <PyInit__decimal@@Base+0x123e4>
   2335c:	mov	x2, x20
   23360:	mov	x0, x19
   23364:	bl	15e50 <PyInit__decimal@@Base+0x4ec8>
   23368:	cbz	w0, 2326c <PyInit__decimal@@Base+0x122e4>
   2336c:	mov	x27, x23
   23370:	ldr	x0, [x19, #40]
   23374:	str	x25, [x0, x26, lsl #3]
   23378:	mov	x26, x23
   2337c:	b	231b4 <PyInit__decimal@@Base+0x1222c>
   23380:	mov	x2, x20
   23384:	mov	x0, x19
   23388:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   2338c:	b	232f8 <PyInit__decimal@@Base+0x12370>
   23390:	mov	x2, x20
   23394:	mov	x0, x19
   23398:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   2339c:	b	23368 <PyInit__decimal@@Base+0x123e0>
   233a0:	mov	x2, x20
   233a4:	mov	x0, x19
   233a8:	bl	15f68 <PyInit__decimal@@Base+0x4fe0>
   233ac:	b	23224 <PyInit__decimal@@Base+0x1229c>
   233b0:	mul	x3, x0, x1
   233b4:	umulh	x0, x0, x1
   233b8:	subs	x4, x3, x0
   233bc:	cmp	x3, x0
   233c0:	cset	x5, cc  // cc = lo, ul, last
   233c4:	tbz	x2, #32, 23414 <PyInit__decimal@@Base+0x1248c>
   233c8:	lsr	x1, x0, #32
   233cc:	lsl	x0, x0, #32
   233d0:	adds	x0, x0, x4
   233d4:	sub	x1, x1, x5
   233d8:	cinc	x1, x1, cs  // cs = hs, nlast
   233dc:	subs	x3, x0, x1
   233e0:	cmp	x0, x1
   233e4:	lsr	x4, x1, #32
   233e8:	lsl	x1, x1, #32
   233ec:	sbc	x4, x4, xzr
   233f0:	adds	x1, x3, x1
   233f4:	cset	x3, cs  // cs = hs, nlast
   233f8:	mov	x0, x1
   233fc:	add	x4, x4, x3
   23400:	cbnz	x4, 2340c <PyInit__decimal@@Base+0x12484>
   23404:	cmp	x1, x2
   23408:	b.cc	23410 <PyInit__decimal@@Base+0x12488>  // b.lo, b.ul, b.last
   2340c:	sub	x0, x1, x2
   23410:	ret
   23414:	tbz	x2, #34, 23464 <PyInit__decimal@@Base+0x124dc>
   23418:	lsr	x3, x0, #30
   2341c:	lsl	x0, x0, #34
   23420:	adds	x0, x0, x4
   23424:	sub	x3, x3, x5
   23428:	cinc	x3, x3, cs  // cs = hs, nlast
   2342c:	subs	x4, x0, x3
   23430:	cmp	x0, x3
   23434:	lsr	x1, x3, #30
   23438:	lsl	x3, x3, #34
   2343c:	sbc	x1, x1, xzr
   23440:	adds	x3, x4, x3
   23444:	cinc	x1, x1, cs  // cs = hs, nlast
   23448:	subs	x0, x3, x1
   2344c:	lsr	x4, x1, #30
   23450:	cmp	x3, x1
   23454:	sbc	x4, x4, xzr
   23458:	lsl	x1, x1, #34
   2345c:	adds	x1, x0, x1
   23460:	b	233f4 <PyInit__decimal@@Base+0x1246c>
   23464:	lsr	x3, x0, #24
   23468:	lsl	x0, x0, #40
   2346c:	adds	x0, x0, x4
   23470:	sub	x3, x3, x5
   23474:	cinc	x3, x3, cs  // cs = hs, nlast
   23478:	subs	x4, x0, x3
   2347c:	cmp	x0, x3
   23480:	lsr	x1, x3, #24
   23484:	lsl	x3, x3, #40
   23488:	sbc	x1, x1, xzr
   2348c:	adds	x3, x4, x3
   23490:	cinc	x1, x1, cs  // cs = hs, nlast
   23494:	subs	x0, x3, x1
   23498:	lsr	x4, x1, #24
   2349c:	cmp	x3, x1
   234a0:	sbc	x4, x4, xzr
   234a4:	lsl	x1, x1, #40
   234a8:	b	2345c <PyInit__decimal@@Base+0x124d4>
   234ac:	mov	x6, x0
   234b0:	mov	x7, x1
   234b4:	mov	x8, #0x1                   	// #1
   234b8:	cbnz	x1, 234c4 <PyInit__decimal@@Base+0x1253c>
   234bc:	mov	x0, x8
   234c0:	ret
   234c4:	stp	x29, x30, [sp, #-16]!
   234c8:	mov	x29, sp
   234cc:	tbz	w7, #0, 234e0 <PyInit__decimal@@Base+0x12558>
   234d0:	mov	x0, x8
   234d4:	mov	x1, x6
   234d8:	bl	233b0 <PyInit__decimal@@Base+0x12428>
   234dc:	mov	x8, x0
   234e0:	mov	x1, x6
   234e4:	mov	x0, x6
   234e8:	bl	233b0 <PyInit__decimal@@Base+0x12428>
   234ec:	mov	x6, x0
   234f0:	lsr	x7, x7, #1
   234f4:	cbnz	x7, 234cc <PyInit__decimal@@Base+0x12544>
   234f8:	mov	x0, x8
   234fc:	ldp	x29, x30, [sp], #16
   23500:	ret
   23504:	mov	x3, x0
   23508:	sxtw	x0, w2
   2350c:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   23510:	add	x2, x2, #0xdc0
   23514:	adrp	x4, 2a000 <PyInit__decimal@@Base+0x19078>
   23518:	add	x4, x4, #0xda8
   2351c:	mov	w5, w1
   23520:	ldr	x2, [x2, x0, lsl #3]
   23524:	cmn	w5, #0x1
   23528:	ldr	x0, [x4, x0, lsl #3]
   2352c:	sub	x4, x2, #0x1
   23530:	udiv	x1, x4, x3
   23534:	b.ne	2353c <PyInit__decimal@@Base+0x125b4>  // b.any
   23538:	sub	x1, x4, x1
   2353c:	b	234ac <PyInit__decimal@@Base+0x12524>
   23540:	stp	x29, x30, [sp, #-48]!
   23544:	mov	x29, sp
   23548:	stp	x21, x22, [sp, #32]
   2354c:	lsr	x21, x0, #1
   23550:	mov	w22, w1
   23554:	mov	x1, x21
   23558:	stp	x19, x20, [sp, #16]
   2355c:	mov	x20, x0
   23560:	mov	w19, w2
   23564:	mov	x0, #0x18                  	// #24
   23568:	mov	x2, #0x8                   	// #8
   2356c:	bl	15d68 <PyInit__decimal@@Base+0x4de0>
   23570:	mov	x9, x0
   23574:	cbz	x0, 235b4 <PyInit__decimal@@Base+0x1262c>
   23578:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   2357c:	add	x0, x0, #0xdc0
   23580:	mov	w2, w19
   23584:	mov	w1, w22
   23588:	ldr	x10, [x0, w19, sxtw #3]
   2358c:	mov	x0, x20
   23590:	bl	23504 <PyInit__decimal@@Base+0x1257c>
   23594:	add	x8, x9, #0x18
   23598:	mov	x7, x0
   2359c:	mov	x6, #0x0                   	// #0
   235a0:	mov	x0, #0x1                   	// #1
   235a4:	str	w19, [x9]
   235a8:	stp	x10, x7, [x9, #8]
   235ac:	cmp	x6, x21
   235b0:	b.ne	235c8 <PyInit__decimal@@Base+0x12640>  // b.any
   235b4:	mov	x0, x9
   235b8:	ldp	x19, x20, [sp, #16]
   235bc:	ldp	x21, x22, [sp, #32]
   235c0:	ldp	x29, x30, [sp], #48
   235c4:	ret
   235c8:	str	x0, [x8, x6, lsl #3]
   235cc:	mov	x2, x10
   235d0:	mov	x1, x7
   235d4:	bl	233b0 <PyInit__decimal@@Base+0x12428>
   235d8:	add	x6, x6, #0x1
   235dc:	b	235ac <PyInit__decimal@@Base+0x12624>
   235e0:	mov	x9, x0
   235e4:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   235e8:	add	x0, x0, #0xdc0
   235ec:	stp	x29, x30, [sp, #-16]!
   235f0:	mov	x29, sp
   235f4:	ldr	x10, [x0, w2, sxtw #3]
   235f8:	mov	x0, #0x3                   	// #3
   235fc:	bl	23504 <PyInit__decimal@@Base+0x1257c>
   23600:	mov	x2, x10
   23604:	mov	x1, #0x1                   	// #1
   23608:	stp	x1, x0, [x9]
   2360c:	mov	x1, #0x2                   	// #2
   23610:	bl	234ac <PyInit__decimal@@Base+0x12524>
   23614:	ldp	x29, x30, [sp], #16
   23618:	str	x0, [x9, #16]
   2361c:	ret
   23620:	lsr	x1, x0, #32
   23624:	cmp	x1, #0x0
   23628:	csel	x0, x0, x1, eq  // eq = none
   2362c:	mov	w1, #0x20                  	// #32
   23630:	csel	w1, wzr, w1, eq  // eq = none
   23634:	lsr	x2, x0, #16
   23638:	cmp	xzr, x0, lsr #16
   2363c:	b.eq	23648 <PyInit__decimal@@Base+0x126c0>  // b.none
   23640:	add	w1, w1, #0x10
   23644:	mov	x0, x2
   23648:	lsr	x2, x0, #8
   2364c:	cmp	xzr, x0, lsr #8
   23650:	b.eq	2365c <PyInit__decimal@@Base+0x126d4>  // b.none
   23654:	add	w1, w1, #0x8
   23658:	mov	x0, x2
   2365c:	lsr	x2, x0, #4
   23660:	cmp	xzr, x0, lsr #4
   23664:	b.eq	23670 <PyInit__decimal@@Base+0x126e8>  // b.none
   23668:	add	w1, w1, #0x4
   2366c:	mov	x0, x2
   23670:	lsr	x2, x0, #2
   23674:	cmp	xzr, x0, lsr #2
   23678:	b.eq	23684 <PyInit__decimal@@Base+0x126fc>  // b.none
   2367c:	add	w1, w1, #0x2
   23680:	mov	x0, x2
   23684:	lsr	x2, x0, #1
   23688:	cmp	xzr, x0, lsr #1
   2368c:	b.eq	23698 <PyInit__decimal@@Base+0x12710>  // b.none
   23690:	add	w1, w1, #0x1
   23694:	mov	x0, x2
   23698:	sub	w1, w1, #0x1
   2369c:	add	w0, w1, w0
   236a0:	ret
   236a4:	mul	x3, x0, x1
   236a8:	umulh	x0, x0, x1
   236ac:	subs	x4, x3, x0
   236b0:	cmp	x3, x0
   236b4:	cset	x5, cc  // cc = lo, ul, last
   236b8:	tbz	x2, #32, 23708 <PyInit__decimal@@Base+0x12780>
   236bc:	lsr	x1, x0, #32
   236c0:	lsl	x0, x0, #32
   236c4:	adds	x0, x0, x4
   236c8:	sub	x1, x1, x5
   236cc:	cinc	x1, x1, cs  // cs = hs, nlast
   236d0:	subs	x3, x0, x1
   236d4:	cmp	x0, x1
   236d8:	lsr	x4, x1, #32
   236dc:	lsl	x1, x1, #32
   236e0:	sbc	x4, x4, xzr
   236e4:	adds	x1, x3, x1
   236e8:	cset	x3, cs  // cs = hs, nlast
   236ec:	mov	x0, x1
   236f0:	add	x4, x4, x3
   236f4:	cbnz	x4, 23700 <PyInit__decimal@@Base+0x12778>
   236f8:	cmp	x1, x2
   236fc:	b.cc	23704 <PyInit__decimal@@Base+0x1277c>  // b.lo, b.ul, b.last
   23700:	sub	x0, x1, x2
   23704:	ret
   23708:	tbz	x2, #34, 23758 <PyInit__decimal@@Base+0x127d0>
   2370c:	lsr	x3, x0, #30
   23710:	lsl	x0, x0, #34
   23714:	adds	x0, x0, x4
   23718:	sub	x3, x3, x5
   2371c:	cinc	x3, x3, cs  // cs = hs, nlast
   23720:	subs	x4, x0, x3
   23724:	cmp	x0, x3
   23728:	lsr	x1, x3, #30
   2372c:	lsl	x3, x3, #34
   23730:	sbc	x1, x1, xzr
   23734:	adds	x3, x4, x3
   23738:	cinc	x1, x1, cs  // cs = hs, nlast
   2373c:	subs	x0, x3, x1
   23740:	lsr	x4, x1, #30
   23744:	cmp	x3, x1
   23748:	sbc	x4, x4, xzr
   2374c:	lsl	x1, x1, #34
   23750:	adds	x1, x0, x1
   23754:	b	236e8 <PyInit__decimal@@Base+0x12760>
   23758:	lsr	x3, x0, #24
   2375c:	lsl	x0, x0, #40
   23760:	adds	x0, x0, x4
   23764:	sub	x3, x3, x5
   23768:	cinc	x3, x3, cs  // cs = hs, nlast
   2376c:	subs	x4, x0, x3
   23770:	cmp	x0, x3
   23774:	lsr	x1, x3, #24
   23778:	lsl	x3, x3, #40
   2377c:	sbc	x1, x1, xzr
   23780:	adds	x3, x4, x3
   23784:	cinc	x1, x1, cs  // cs = hs, nlast
   23788:	subs	x0, x3, x1
   2378c:	lsr	x4, x1, #24
   23790:	cmp	x3, x1
   23794:	sbc	x4, x4, xzr
   23798:	lsl	x1, x1, #40
   2379c:	b	23750 <PyInit__decimal@@Base+0x127c8>
   237a0:	mov	x6, x0
   237a4:	mov	x7, x1
   237a8:	stp	x29, x30, [sp, #-16]!
   237ac:	mov	x8, #0x1                   	// #1
   237b0:	mov	x29, sp
   237b4:	tbz	w7, #0, 237c8 <PyInit__decimal@@Base+0x12840>
   237b8:	mov	x0, x8
   237bc:	mov	x1, x6
   237c0:	bl	236a4 <PyInit__decimal@@Base+0x1271c>
   237c4:	mov	x8, x0
   237c8:	mov	x1, x6
   237cc:	mov	x0, x6
   237d0:	bl	236a4 <PyInit__decimal@@Base+0x1271c>
   237d4:	mov	x6, x0
   237d8:	lsr	x7, x7, #1
   237dc:	cbnz	x7, 237b4 <PyInit__decimal@@Base+0x1282c>
   237e0:	mov	x0, x8
   237e4:	ldp	x29, x30, [sp], #16
   237e8:	ret
   237ec:	stp	x29, x30, [sp, #-112]!
   237f0:	mov	x29, sp
   237f4:	stp	x19, x20, [sp, #16]
   237f8:	mov	x20, x0
   237fc:	mov	x0, x1
   23800:	stp	x21, x22, [sp, #32]
   23804:	mov	x21, #0x1                   	// #1
   23808:	stp	x23, x24, [sp, #48]
   2380c:	mov	w24, w2
   23810:	stp	x25, x26, [sp, #64]
   23814:	stp	x27, x28, [sp, #80]
   23818:	mov	x28, x1
   2381c:	bl	23620 <PyInit__decimal@@Base+0x12698>
   23820:	sxtw	x23, w0
   23824:	lsr	x23, x23, #1
   23828:	sub	w25, w0, w23
   2382c:	mov	x0, x20
   23830:	lsl	x22, x21, x23
   23834:	mov	x2, x22
   23838:	lsl	x21, x21, x25
   2383c:	mov	x1, x21
   23840:	bl	241d0 <PyInit__decimal@@Base+0x13248>
   23844:	cbnz	w0, 2386c <PyInit__decimal@@Base+0x128e4>
   23848:	mov	w25, #0x0                   	// #0
   2384c:	mov	w0, w25
   23850:	ldp	x19, x20, [sp, #16]
   23854:	ldp	x21, x22, [sp, #32]
   23858:	ldp	x23, x24, [sp, #48]
   2385c:	ldp	x25, x26, [sp, #64]
   23860:	ldp	x27, x28, [sp, #80]
   23864:	ldp	x29, x30, [sp], #112
   23868:	ret
   2386c:	mov	w2, w24
   23870:	mov	x0, x21
   23874:	mov	w1, #0xffffffff            	// #-1
   23878:	bl	23540 <PyInit__decimal@@Base+0x125b8>
   2387c:	mov	x19, x0
   23880:	cbz	x0, 23848 <PyInit__decimal@@Base+0x128c0>
   23884:	mov	x3, #0x8                   	// #8
   23888:	mov	w27, w23
   2388c:	lsl	x3, x3, x25
   23890:	add	x26, x20, x28, lsl #3
   23894:	mov	x25, x20
   23898:	cmp	x26, x25
   2389c:	b.hi	238cc <PyInit__decimal@@Base+0x12944>  // b.pmore
   238a0:	mov	x2, x21
   238a4:	mov	x1, x22
   238a8:	mov	x0, x20
   238ac:	bl	241d0 <PyInit__decimal@@Base+0x13248>
   238b0:	mov	w25, w0
   238b4:	cbnz	w0, 238ec <PyInit__decimal@@Base+0x12964>
   238b8:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   238bc:	ldr	x1, [x0, #1720]
   238c0:	mov	x0, x19
   238c4:	blr	x1
   238c8:	b	2384c <PyInit__decimal@@Base+0x128c4>
   238cc:	mov	x0, x25
   238d0:	mov	x2, x19
   238d4:	mov	x1, x21
   238d8:	str	x3, [sp, #104]
   238dc:	bl	1350c <PyInit__decimal@@Base+0x2584>
   238e0:	ldr	x3, [sp, #104]
   238e4:	add	x25, x25, x3
   238e8:	b	23898 <PyInit__decimal@@Base+0x12910>
   238ec:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   238f0:	add	x0, x0, #0xdc0
   238f4:	mov	w2, w24
   238f8:	mov	w1, #0xffffffff            	// #-1
   238fc:	ldr	x25, [x0, w24, sxtw #3]
   23900:	mov	x0, x28
   23904:	bl	23504 <PyInit__decimal@@Base+0x1257c>
   23908:	mov	x10, x0
   2390c:	mov	x9, #0x1                   	// #1
   23910:	cmp	x9, x21
   23914:	b.cc	23970 <PyInit__decimal@@Base+0x129e8>  // b.lo, b.ul, b.last
   23918:	cmp	x22, x21
   2391c:	b.eq	23948 <PyInit__decimal@@Base+0x129c0>  // b.none
   23920:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   23924:	ldr	x1, [x0, #1720]
   23928:	mov	x0, x19
   2392c:	blr	x1
   23930:	mov	w2, w24
   23934:	mov	x0, x22
   23938:	mov	w1, #0xffffffff            	// #-1
   2393c:	bl	23540 <PyInit__decimal@@Base+0x125b8>
   23940:	mov	x19, x0
   23944:	cbz	x0, 23848 <PyInit__decimal@@Base+0x128c0>
   23948:	mov	x0, #0x8                   	// #8
   2394c:	lsl	x23, x0, x23
   23950:	cmp	x26, x20
   23954:	b.hi	23a04 <PyInit__decimal@@Base+0x12a7c>  // b.pmore
   23958:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   2395c:	mov	w25, #0x1                   	// #1
   23960:	ldr	x1, [x0, #1720]
   23964:	mov	x0, x19
   23968:	blr	x1
   2396c:	b	2384c <PyInit__decimal@@Base+0x128c4>
   23970:	mov	x1, x9
   23974:	mov	x2, x25
   23978:	mov	x0, x10
   2397c:	bl	237a0 <PyInit__decimal@@Base+0x12818>
   23980:	mov	x6, x0
   23984:	mov	x1, x0
   23988:	bl	236a4 <PyInit__decimal@@Base+0x1271c>
   2398c:	lsl	x7, x9, x27
   23990:	mov	x11, x0
   23994:	add	x7, x20, x7, lsl #3
   23998:	mov	x8, #0x1                   	// #1
   2399c:	mov	x12, #0x0                   	// #0
   239a0:	cmp	x12, x22
   239a4:	b.cc	239b0 <PyInit__decimal@@Base+0x12a28>  // b.lo, b.ul, b.last
   239a8:	add	x9, x9, #0x1
   239ac:	b	23910 <PyInit__decimal@@Base+0x12988>
   239b0:	ldr	x0, [x7]
   239b4:	mov	x1, x8
   239b8:	mov	x2, x25
   239bc:	bl	236a4 <PyInit__decimal@@Base+0x1271c>
   239c0:	mov	x14, x0
   239c4:	ldr	x0, [x7, #8]
   239c8:	mov	x1, x6
   239cc:	bl	236a4 <PyInit__decimal@@Base+0x1271c>
   239d0:	mov	x13, x0
   239d4:	mov	x1, x11
   239d8:	mov	x0, x8
   239dc:	bl	236a4 <PyInit__decimal@@Base+0x1271c>
   239e0:	mov	x8, x0
   239e4:	mov	x1, x11
   239e8:	mov	x0, x6
   239ec:	bl	236a4 <PyInit__decimal@@Base+0x1271c>
   239f0:	mov	x6, x0
   239f4:	add	x12, x12, #0x2
   239f8:	stp	x14, x13, [x7]
   239fc:	add	x7, x7, #0x10
   23a00:	b	239a0 <PyInit__decimal@@Base+0x12a18>
   23a04:	mov	x0, x20
   23a08:	mov	x2, x19
   23a0c:	mov	x1, x22
   23a10:	add	x20, x20, x23
   23a14:	bl	1350c <PyInit__decimal@@Base+0x2584>
   23a18:	b	23950 <PyInit__decimal@@Base+0x129c8>
   23a1c:	stp	x29, x30, [sp, #-112]!
   23a20:	mov	x29, sp
   23a24:	stp	x19, x20, [sp, #16]
   23a28:	mov	x20, x0
   23a2c:	mov	x0, x1
   23a30:	stp	x21, x22, [sp, #32]
   23a34:	stp	x23, x24, [sp, #48]
   23a38:	mov	w24, w2
   23a3c:	stp	x25, x26, [sp, #64]
   23a40:	stp	x27, x28, [sp, #80]
   23a44:	mov	x28, x1
   23a48:	bl	23620 <PyInit__decimal@@Base+0x12698>
   23a4c:	sxtw	x25, w0
   23a50:	mov	x1, #0x1                   	// #1
   23a54:	mov	w2, w24
   23a58:	lsr	x25, x25, #1
   23a5c:	sub	w21, w0, w25
   23a60:	lsl	x22, x1, x25
   23a64:	mov	x0, x22
   23a68:	lsl	x23, x1, x21
   23a6c:	bl	23540 <PyInit__decimal@@Base+0x125b8>
   23a70:	cbnz	x0, 23a98 <PyInit__decimal@@Base+0x12b10>
   23a74:	mov	w25, #0x0                   	// #0
   23a78:	mov	w0, w25
   23a7c:	ldp	x19, x20, [sp, #16]
   23a80:	ldp	x21, x22, [sp, #32]
   23a84:	ldp	x23, x24, [sp, #48]
   23a88:	ldp	x25, x26, [sp, #64]
   23a8c:	ldp	x27, x28, [sp, #80]
   23a90:	ldp	x29, x30, [sp], #112
   23a94:	ret
   23a98:	mov	x3, #0x8                   	// #8
   23a9c:	mov	w27, w25
   23aa0:	lsl	x3, x3, x25
   23aa4:	mov	x19, x0
   23aa8:	add	x26, x20, x28, lsl #3
   23aac:	mov	x25, x20
   23ab0:	cmp	x26, x25
   23ab4:	b.hi	23b10 <PyInit__decimal@@Base+0x12b88>  // b.pmore
   23ab8:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   23abc:	add	x0, x0, #0xdc0
   23ac0:	mov	w2, w24
   23ac4:	mov	w1, #0x1                   	// #1
   23ac8:	ldr	x25, [x0, w24, sxtw #3]
   23acc:	mov	x0, x28
   23ad0:	bl	23504 <PyInit__decimal@@Base+0x1257c>
   23ad4:	mov	x10, x0
   23ad8:	mov	x9, #0x1                   	// #1
   23adc:	cmp	x9, x23
   23ae0:	b.cc	23b30 <PyInit__decimal@@Base+0x12ba8>  // b.lo, b.ul, b.last
   23ae4:	mov	x2, x22
   23ae8:	mov	x1, x23
   23aec:	mov	x0, x20
   23af0:	bl	241d0 <PyInit__decimal@@Base+0x13248>
   23af4:	mov	w25, w0
   23af8:	cbnz	w0, 23bc4 <PyInit__decimal@@Base+0x12c3c>
   23afc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   23b00:	ldr	x1, [x0, #1720]
   23b04:	mov	x0, x19
   23b08:	blr	x1
   23b0c:	b	23a78 <PyInit__decimal@@Base+0x12af0>
   23b10:	mov	x0, x25
   23b14:	mov	x2, x19
   23b18:	mov	x1, x22
   23b1c:	str	x3, [sp, #104]
   23b20:	bl	1350c <PyInit__decimal@@Base+0x2584>
   23b24:	ldr	x3, [sp, #104]
   23b28:	add	x25, x25, x3
   23b2c:	b	23ab0 <PyInit__decimal@@Base+0x12b28>
   23b30:	mov	x1, x9
   23b34:	mov	x2, x25
   23b38:	mov	x0, x10
   23b3c:	bl	237a0 <PyInit__decimal@@Base+0x12818>
   23b40:	mov	x6, x0
   23b44:	mov	x1, x0
   23b48:	bl	236a4 <PyInit__decimal@@Base+0x1271c>
   23b4c:	lsl	x7, x9, x27
   23b50:	mov	x11, x0
   23b54:	add	x7, x20, x7, lsl #3
   23b58:	mov	x8, #0x1                   	// #1
   23b5c:	mov	x12, #0x0                   	// #0
   23b60:	cmp	x12, x22
   23b64:	b.cc	23b70 <PyInit__decimal@@Base+0x12be8>  // b.lo, b.ul, b.last
   23b68:	add	x9, x9, #0x1
   23b6c:	b	23adc <PyInit__decimal@@Base+0x12b54>
   23b70:	ldr	x0, [x7]
   23b74:	mov	x1, x8
   23b78:	mov	x2, x25
   23b7c:	bl	236a4 <PyInit__decimal@@Base+0x1271c>
   23b80:	mov	x14, x0
   23b84:	ldr	x0, [x7, #8]
   23b88:	mov	x1, x6
   23b8c:	bl	236a4 <PyInit__decimal@@Base+0x1271c>
   23b90:	mov	x13, x0
   23b94:	mov	x1, x11
   23b98:	mov	x0, x8
   23b9c:	bl	236a4 <PyInit__decimal@@Base+0x1271c>
   23ba0:	mov	x8, x0
   23ba4:	mov	x1, x11
   23ba8:	mov	x0, x6
   23bac:	bl	236a4 <PyInit__decimal@@Base+0x1271c>
   23bb0:	mov	x6, x0
   23bb4:	add	x12, x12, #0x2
   23bb8:	stp	x14, x13, [x7]
   23bbc:	add	x7, x7, #0x10
   23bc0:	b	23b60 <PyInit__decimal@@Base+0x12bd8>
   23bc4:	cmp	x22, x23
   23bc8:	b.eq	23bf4 <PyInit__decimal@@Base+0x12c6c>  // b.none
   23bcc:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   23bd0:	ldr	x1, [x0, #1720]
   23bd4:	mov	x0, x19
   23bd8:	blr	x1
   23bdc:	mov	w2, w24
   23be0:	mov	x0, x23
   23be4:	mov	w1, #0x1                   	// #1
   23be8:	bl	23540 <PyInit__decimal@@Base+0x125b8>
   23bec:	mov	x19, x0
   23bf0:	cbz	x0, 23a74 <PyInit__decimal@@Base+0x12aec>
   23bf4:	mov	x0, #0x8                   	// #8
   23bf8:	mov	x24, x20
   23bfc:	lsl	x21, x0, x21
   23c00:	cmp	x26, x24
   23c04:	b.hi	23c34 <PyInit__decimal@@Base+0x12cac>  // b.pmore
   23c08:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   23c0c:	ldr	x1, [x0, #1720]
   23c10:	mov	x0, x19
   23c14:	blr	x1
   23c18:	mov	x2, x23
   23c1c:	mov	x1, x22
   23c20:	mov	x0, x20
   23c24:	bl	241d0 <PyInit__decimal@@Base+0x13248>
   23c28:	cmp	w0, #0x0
   23c2c:	cset	w25, ne  // ne = any
   23c30:	b	23a78 <PyInit__decimal@@Base+0x12af0>
   23c34:	mov	x0, x24
   23c38:	mov	x2, x19
   23c3c:	mov	x1, x23
   23c40:	add	x24, x24, x21
   23c44:	bl	1350c <PyInit__decimal@@Base+0x2584>
   23c48:	b	23c00 <PyInit__decimal@@Base+0x12c78>
   23c4c:	add	x7, x1, #0x1
   23c50:	mov	x3, #0x0                   	// #0
   23c54:	mov	x2, #0x0                   	// #0
   23c58:	cmp	x2, x1
   23c5c:	b.ne	23c64 <PyInit__decimal@@Base+0x12cdc>  // b.any
   23c60:	ret
   23c64:	add	x2, x2, #0x1
   23c68:	add	x5, x3, #0x1
   23c6c:	add	x4, x1, x3
   23c70:	mov	x6, x2
   23c74:	cmp	x6, x1
   23c78:	b.ne	23c84 <PyInit__decimal@@Base+0x12cfc>  // b.any
   23c7c:	add	x3, x3, x7
   23c80:	b	23c58 <PyInit__decimal@@Base+0x12cd0>
   23c84:	ldr	x9, [x0, x4, lsl #3]
   23c88:	add	x6, x6, #0x1
   23c8c:	ldr	x8, [x0, x5, lsl #3]
   23c90:	str	x9, [x0, x5, lsl #3]
   23c94:	add	x5, x5, #0x1
   23c98:	str	x8, [x0, x4, lsl #3]
   23c9c:	add	x4, x4, x1
   23ca0:	b	23c74 <PyInit__decimal@@Base+0x12cec>
   23ca4:	sub	sp, sp, #0xa0
   23ca8:	sub	sp, sp, #0x40, lsl #12
   23cac:	stp	x29, x30, [sp]
   23cb0:	mov	x29, sp
   23cb4:	stp	x19, x20, [sp, #16]
   23cb8:	mov	x20, x0
   23cbc:	stp	x23, x24, [sp, #48]
   23cc0:	mov	x23, x1
   23cc4:	stp	x21, x22, [sp, #32]
   23cc8:	stp	x25, x26, [sp, #64]
   23ccc:	stp	x27, x28, [sp, #80]
   23cd0:	str	x1, [sp, #104]
   23cd4:	cmp	x23, #0x80
   23cd8:	b.hi	23d34 <PyInit__decimal@@Base+0x12dac>  // b.pmore
   23cdc:	ldr	x0, [sp, #104]
   23ce0:	lsl	x27, x23, #3
   23ce4:	mov	x24, #0x0                   	// #0
   23ce8:	str	x20, [sp, #112]
   23cec:	lsl	x21, x0, #3
   23cf0:	add	x0, x21, #0x8
   23cf4:	mul	x0, x0, x23
   23cf8:	str	x0, [sp, #136]
   23cfc:	mul	x0, x21, x23
   23d00:	str	x0, [sp, #120]
   23d04:	ldr	x0, [sp, #104]
   23d08:	cmp	x24, x0
   23d0c:	b.cc	23d3c <PyInit__decimal@@Base+0x12db4>  // b.lo, b.ul, b.last
   23d10:	ldp	x29, x30, [sp]
   23d14:	ldp	x19, x20, [sp, #16]
   23d18:	ldp	x21, x22, [sp, #32]
   23d1c:	ldp	x23, x24, [sp, #48]
   23d20:	ldp	x25, x26, [sp, #64]
   23d24:	ldp	x27, x28, [sp, #80]
   23d28:	add	sp, sp, #0xa0
   23d2c:	add	sp, sp, #0x40, lsl #12
   23d30:	ret
   23d34:	lsr	x23, x23, #1
   23d38:	b	23cd4 <PyInit__decimal@@Base+0x12d4c>
   23d3c:	mov	x26, x20
   23d40:	mov	x25, x24
   23d44:	ldr	x0, [sp, #112]
   23d48:	add	x4, sp, #0xa0
   23d4c:	mov	x19, x4
   23d50:	mov	x28, #0x0                   	// #0
   23d54:	add	x22, x0, x25, lsl #3
   23d58:	mov	x1, x22
   23d5c:	cmp	x23, x28
   23d60:	b.ne	23d80 <PyInit__decimal@@Base+0x12df8>  // b.any
   23d64:	mov	x1, x23
   23d68:	mov	x0, x19
   23d6c:	bl	23c4c <PyInit__decimal@@Base+0x12cc4>
   23d70:	cmp	x24, x25
   23d74:	b.ne	23e00 <PyInit__decimal@@Base+0x12e78>  // b.any
   23d78:	mov	x28, #0x0                   	// #0
   23d7c:	b	23dc0 <PyInit__decimal@@Base+0x12e38>
   23d80:	mov	x0, x4
   23d84:	mov	x2, x27
   23d88:	str	x1, [sp, #128]
   23d8c:	bl	64f0 <memcpy@plt>
   23d90:	ldr	x1, [sp, #128]
   23d94:	add	x28, x28, #0x1
   23d98:	add	x4, x0, x27
   23d9c:	add	x1, x1, x21
   23da0:	b	23d5c <PyInit__decimal@@Base+0x12dd4>
   23da4:	mov	x1, x19
   23da8:	mov	x0, x22
   23dac:	add	x19, x19, x27
   23db0:	add	x22, x22, x21
   23db4:	add	x28, x28, #0x1
   23db8:	mov	x2, x27
   23dbc:	bl	64f0 <memcpy@plt>
   23dc0:	cmp	x23, x28
   23dc4:	b.ne	23da4 <PyInit__decimal@@Base+0x12e1c>  // b.any
   23dc8:	ldr	x0, [sp, #120]
   23dcc:	add	x25, x25, x23
   23dd0:	add	x26, x26, x0
   23dd4:	ldr	x0, [sp, #104]
   23dd8:	cmp	x0, x25
   23ddc:	b.hi	23d44 <PyInit__decimal@@Base+0x12dbc>  // b.pmore
   23de0:	ldr	x0, [sp, #136]
   23de4:	add	x24, x24, x23
   23de8:	ldr	x1, [sp, #120]
   23dec:	add	x20, x20, x0
   23df0:	ldr	x0, [sp, #112]
   23df4:	add	x0, x0, x1
   23df8:	str	x0, [sp, #112]
   23dfc:	b	23d04 <PyInit__decimal@@Base+0x12d7c>
   23e00:	add	x4, sp, #0x20, lsl #12
   23e04:	mov	x28, x26
   23e08:	mov	x1, x26
   23e0c:	add	x4, x4, #0xa0
   23e10:	mov	x5, #0x0                   	// #0
   23e14:	str	x4, [sp, #128]
   23e18:	cmp	x23, x5
   23e1c:	b.ne	23e68 <PyInit__decimal@@Base+0x12ee0>  // b.any
   23e20:	ldr	x0, [sp, #128]
   23e24:	mov	x1, x23
   23e28:	bl	23c4c <PyInit__decimal@@Base+0x12cc4>
   23e2c:	mov	x4, #0x0                   	// #0
   23e30:	cmp	x23, x4
   23e34:	b.ne	23e8c <PyInit__decimal@@Base+0x12f04>  // b.any
   23e38:	ldr	x19, [sp, #128]
   23e3c:	mov	x28, #0x0                   	// #0
   23e40:	cmp	x23, x28
   23e44:	b.eq	23dc8 <PyInit__decimal@@Base+0x12e40>  // b.none
   23e48:	mov	x1, x19
   23e4c:	mov	x0, x22
   23e50:	mov	x2, x27
   23e54:	add	x19, x19, x27
   23e58:	add	x22, x22, x21
   23e5c:	add	x28, x28, #0x1
   23e60:	bl	64f0 <memcpy@plt>
   23e64:	b	23e40 <PyInit__decimal@@Base+0x12eb8>
   23e68:	mov	x0, x4
   23e6c:	mov	x2, x27
   23e70:	stp	x1, x5, [sp, #144]
   23e74:	bl	64f0 <memcpy@plt>
   23e78:	add	x4, x0, x27
   23e7c:	ldp	x1, x5, [sp, #144]
   23e80:	add	x1, x1, x21
   23e84:	add	x5, x5, #0x1
   23e88:	b	23e18 <PyInit__decimal@@Base+0x12e90>
   23e8c:	mov	x1, x19
   23e90:	mov	x0, x28
   23e94:	mov	x2, x27
   23e98:	str	x4, [sp, #144]
   23e9c:	bl	64f0 <memcpy@plt>
   23ea0:	add	x19, x19, x27
   23ea4:	ldr	x4, [sp, #144]
   23ea8:	add	x28, x28, x21
   23eac:	add	x4, x4, #0x1
   23eb0:	b	23e30 <PyInit__decimal@@Base+0x12ea8>
   23eb4:	sub	sp, sp, #0xd0
   23eb8:	cmp	w3, #0x0
   23ebc:	sub	sp, sp, #0x10, lsl #12
   23ec0:	stp	x29, x30, [sp]
   23ec4:	mov	x29, sp
   23ec8:	stp	x0, x1, [sp, #112]
   23ecc:	lsr	x0, x1, #3
   23ed0:	add	x0, x0, #0x1
   23ed4:	stp	x19, x20, [sp, #16]
   23ed8:	mov	x20, #0x2                   	// #2
   23edc:	mov	x19, x2
   23ee0:	csel	x20, x1, x20, eq  // eq = none
   23ee4:	mov	x1, #0x8                   	// #8
   23ee8:	stp	x21, x22, [sp, #32]
   23eec:	stp	x23, x24, [sp, #48]
   23ef0:	sub	x24, x2, #0x1
   23ef4:	stp	x25, x26, [sp, #64]
   23ef8:	stp	x27, x28, [sp, #80]
   23efc:	bl	15cf8 <PyInit__decimal@@Base+0x4d70>
   23f00:	cbz	x0, 24130 <PyInit__decimal@@Base+0x131a8>
   23f04:	mov	x28, x0
   23f08:	lsr	x0, x19, #1
   23f0c:	mov	x26, x19
   23f10:	str	x0, [sp, #104]
   23f14:	lsl	x0, x19, #1
   23f18:	mov	x21, #0x1                   	// #1
   23f1c:	str	x0, [sp, #152]
   23f20:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   23f24:	add	x0, x0, #0xb88
   23f28:	str	x0, [sp, #176]
   23f2c:	ldr	x0, [sp, #120]
   23f30:	cmp	x21, x0
   23f34:	b.ls	23f70 <PyInit__decimal@@Base+0x12fe8>  // b.plast
   23f38:	adrp	x0, 45000 <PyInit__decimal@@Base+0x34078>
   23f3c:	ldr	x1, [x0, #1720]
   23f40:	mov	x0, x28
   23f44:	blr	x1
   23f48:	mov	w0, #0x1                   	// #1
   23f4c:	ldp	x29, x30, [sp]
   23f50:	ldp	x19, x20, [sp, #16]
   23f54:	ldp	x21, x22, [sp, #32]
   23f58:	ldp	x23, x24, [sp, #48]
   23f5c:	ldp	x25, x26, [sp, #64]
   23f60:	ldp	x27, x28, [sp, #80]
   23f64:	add	sp, sp, #0xd0
   23f68:	add	sp, sp, #0x10, lsl #12
   23f6c:	ret
   23f70:	lsr	x1, x21, #6
   23f74:	and	x2, x21, #0x3f
   23f78:	adrp	x0, 2a000 <PyInit__decimal@@Base+0x19078>
   23f7c:	add	x0, x0, #0xb88
   23f80:	add	x27, x28, x1, lsl #3
   23f84:	ldr	x3, [x28, x1, lsl #3]
   23f88:	ldr	x0, [x0, x2, lsl #3]
   23f8c:	str	x0, [sp, #128]
   23f90:	ands	x3, x0, x3
   23f94:	b.eq	23fa8 <PyInit__decimal@@Base+0x13020>  // b.none
   23f98:	ldr	x0, [sp, #152]
   23f9c:	add	x21, x21, #0x2
   23fa0:	add	x26, x26, x0
   23fa4:	b	23f2c <PyInit__decimal@@Base+0x12fa4>
   23fa8:	mul	x0, x20, x21
   23fac:	lsr	x23, x26, #1
   23fb0:	str	x0, [sp, #136]
   23fb4:	umulh	x0, x20, x21
   23fb8:	str	x0, [sp, #168]
   23fbc:	mov	x1, #0x80d0                	// #32976
   23fc0:	ldr	x0, [sp, #112]
   23fc4:	add	x9, sp, x1
   23fc8:	add	x22, sp, #0xd0
   23fcc:	add	x23, x0, x23, lsl #3
   23fd0:	ldr	x0, [sp, #104]
   23fd4:	cmp	x3, x0
   23fd8:	b.cs	23f98 <PyInit__decimal@@Base+0x13010>  // b.hs, b.nlast
   23fdc:	add	x0, x3, #0x1, lsl #12
   23fe0:	str	x0, [sp, #144]
   23fe4:	ldr	x0, [sp, #104]
   23fe8:	add	x1, x3, #0x1, lsl #12
   23fec:	str	x9, [sp, #184]
   23ff0:	cmp	x0, x1
   23ff4:	sub	x7, x0, x3
   23ff8:	mov	x0, #0x1000                	// #4096
   23ffc:	csel	x7, x7, x0, ls  // ls = plast
   24000:	lsl	x0, x3, #3
   24004:	mov	x1, x23
   24008:	lsl	x25, x7, #3
   2400c:	str	x0, [sp, #160]
   24010:	mov	x2, x25
   24014:	mov	x0, x22
   24018:	bl	64f0 <memcpy@plt>
   2401c:	ldr	x0, [sp, #136]
   24020:	mov	x3, #0x0                   	// #0
   24024:	ldr	x1, [sp, #168]
   24028:	mov	x2, x24
   2402c:	bl	242a0 <PyInit__decimal@@Base+0x13318>
   24030:	ldr	x1, [sp, #136]
   24034:	ldr	x9, [sp, #184]
   24038:	msub	x4, x24, x0, x1
   2403c:	ldr	x0, [sp, #112]
   24040:	mul	x3, x19, x4
   24044:	lsr	x3, x3, #1
   24048:	add	x3, x0, x3, lsl #3
   2404c:	ldr	x0, [sp, #160]
   24050:	cmp	x21, x4
   24054:	add	x3, x3, x0
   24058:	b.ne	240a0 <PyInit__decimal@@Base+0x13118>  // b.any
   2405c:	mov	x1, x22
   24060:	mov	x0, x3
   24064:	mov	x2, x25
   24068:	str	x22, [sp, #160]
   2406c:	str	x9, [sp, #184]
   24070:	bl	64f0 <memcpy@plt>
   24074:	ldr	x0, [x27]
   24078:	add	x23, x23, #0x8, lsl #12
   2407c:	ldr	x1, [sp, #128]
   24080:	ldr	x9, [sp, #184]
   24084:	orr	x0, x0, x1
   24088:	ldr	x1, [sp, #160]
   2408c:	mov	x22, x9
   24090:	str	x0, [x27]
   24094:	mov	x9, x1
   24098:	ldr	x3, [sp, #144]
   2409c:	b	23fd0 <PyInit__decimal@@Base+0x13048>
   240a0:	mov	x1, x3
   240a4:	mov	x0, x9
   240a8:	mov	x2, x25
   240ac:	stp	x3, x9, [sp, #184]
   240b0:	str	x4, [sp, #200]
   240b4:	bl	64f0 <memcpy@plt>
   240b8:	ldr	x3, [sp, #184]
   240bc:	mov	x1, x22
   240c0:	mov	x2, x25
   240c4:	mov	x0, x3
   240c8:	bl	64f0 <memcpy@plt>
   240cc:	ldr	x4, [sp, #200]
   240d0:	ldr	x3, [sp, #176]
   240d4:	and	x2, x4, #0x3f
   240d8:	lsr	x0, x4, #6
   240dc:	mul	x9, x20, x4
   240e0:	str	x9, [sp, #184]
   240e4:	lsl	x0, x0, #3
   240e8:	ldr	x2, [x3, x2, lsl #3]
   240ec:	mov	x3, #0x0                   	// #0
   240f0:	ldr	x1, [x28, x0]
   240f4:	orr	x1, x1, x2
   240f8:	str	x1, [x28, x0]
   240fc:	umulh	x1, x20, x4
   24100:	mov	x0, x9
   24104:	mov	x2, x24
   24108:	bl	242a0 <PyInit__decimal@@Base+0x13318>
   2410c:	ldp	x9, x10, [sp, #184]
   24110:	msub	x4, x24, x0, x9
   24114:	mov	x9, x22
   24118:	ldr	x0, [sp, #112]
   2411c:	mov	x22, x10
   24120:	mul	x3, x19, x4
   24124:	lsr	x3, x3, #1
   24128:	add	x3, x0, x3, lsl #3
   2412c:	b	2404c <PyInit__decimal@@Base+0x130c4>
   24130:	mov	w0, #0x0                   	// #0
   24134:	b	23f4c <PyInit__decimal@@Base+0x12fc4>
   24138:	stp	x29, x30, [sp, #-32]!
   2413c:	mov	w3, #0x26c                 	// #620
   24140:	adrp	x2, 2a000 <PyInit__decimal@@Base+0x19078>
   24144:	mov	x29, sp
   24148:	str	x19, [sp, #16]
   2414c:	adrp	x19, 42000 <PyInit__decimal@@Base+0x31078>
   24150:	add	x2, x2, #0x9d8
   24154:	adrp	x1, 2a000 <PyInit__decimal@@Base+0x19078>
   24158:	ldr	x19, [x19, #3904]
   2415c:	add	x1, x1, #0xa14
   24160:	ldr	x0, [x19]
   24164:	bl	6b10 <fprintf@plt>
   24168:	ldr	x1, [x19]
   2416c:	adrp	x0, 2b000 <PyInit__decimal@@Base+0x1a078>
   24170:	add	x0, x0, #0x8e2
   24174:	bl	6570 <fputs@plt>
   24178:	ldr	x1, [x19]
   2417c:	mov	w0, #0xa                   	// #10
   24180:	bl	6640 <fputc@plt>
   24184:	bl	6860 <abort@plt>
   24188:	lsl	x8, x3, #3
   2418c:	lsl	x7, x2, #3
   24190:	mov	x4, #0x0                   	// #0
   24194:	cmp	x4, x2
   24198:	b.ne	241a0 <PyInit__decimal@@Base+0x13218>  // b.any
   2419c:	ret
   241a0:	add	x6, x0, x4, lsl #3
   241a4:	mov	x5, #0x0                   	// #0
   241a8:	cmp	x5, x3
   241ac:	b.ne	241bc <PyInit__decimal@@Base+0x13234>  // b.any
   241b0:	add	x4, x4, #0x1
   241b4:	add	x1, x1, x8
   241b8:	b	24194 <PyInit__decimal@@Base+0x1320c>
   241bc:	ldr	x9, [x1, x5, lsl #3]
   241c0:	add	x5, x5, #0x1
   241c4:	str	x9, [x6]
   241c8:	add	x6, x6, x7
   241cc:	b	241a8 <PyInit__decimal@@Base+0x13220>
   241d0:	stp	x29, x30, [sp, #-48]!
   241d4:	umulh	x3, x1, x2
   241d8:	mov	x29, sp
   241dc:	stp	x19, x20, [sp, #16]
   241e0:	stp	x21, x22, [sp, #32]
   241e4:	mul	x22, x1, x2
   241e8:	cbz	x3, 241f0 <PyInit__decimal@@Base+0x13268>
   241ec:	bl	24138 <PyInit__decimal@@Base+0x131b0>
   241f0:	mov	x20, x1
   241f4:	mov	x19, x2
   241f8:	cmp	x1, x2
   241fc:	b.ne	24218 <PyInit__decimal@@Base+0x13290>  // b.any
   24200:	bl	23ca4 <PyInit__decimal@@Base+0x12d1c>
   24204:	mov	w0, #0x1                   	// #1
   24208:	ldp	x19, x20, [sp, #16]
   2420c:	ldp	x21, x22, [sp, #32]
   24210:	ldp	x29, x30, [sp], #48
   24214:	ret
   24218:	lsl	x3, x1, #1
   2421c:	tbnz	x1, #63, 241ec <PyInit__decimal@@Base+0x13264>
   24220:	mov	x21, x0
   24224:	cmp	x2, x3
   24228:	b.ne	24254 <PyInit__decimal@@Base+0x132cc>  // b.any
   2422c:	mov	w3, #0x0                   	// #0
   24230:	bl	23eb4 <PyInit__decimal@@Base+0x12f2c>
   24234:	cbz	w0, 24208 <PyInit__decimal@@Base+0x13280>
   24238:	mov	x1, x20
   2423c:	mov	x0, x21
   24240:	bl	23ca4 <PyInit__decimal@@Base+0x12d1c>
   24244:	lsr	x0, x22, #1
   24248:	mov	x1, x20
   2424c:	add	x0, x21, x0, lsl #3
   24250:	b	24200 <PyInit__decimal@@Base+0x13278>
   24254:	lsl	x1, x2, #1
   24258:	tbnz	x2, #63, 241ec <PyInit__decimal@@Base+0x13264>
   2425c:	cmp	x20, x1
   24260:	b.ne	2429c <PyInit__decimal@@Base+0x13314>  // b.any
   24264:	mov	x1, x2
   24268:	bl	23ca4 <PyInit__decimal@@Base+0x12d1c>
   2426c:	lsr	x0, x22, #1
   24270:	mov	x1, x19
   24274:	add	x0, x21, x0, lsl #3
   24278:	bl	23ca4 <PyInit__decimal@@Base+0x12d1c>
   2427c:	mov	x2, x20
   24280:	mov	x1, x19
   24284:	mov	x0, x21
   24288:	mov	w3, #0x1                   	// #1
   2428c:	bl	23eb4 <PyInit__decimal@@Base+0x12f2c>
   24290:	cmp	w0, #0x0
   24294:	cset	w0, ne  // ne = any
   24298:	b	24208 <PyInit__decimal@@Base+0x13280>
   2429c:	bl	6860 <abort@plt>
   242a0:	mov	x4, x1
   242a4:	mov	x8, x0
   242a8:	mov	x5, x2
   242ac:	mov	x1, x3
   242b0:	mov	x9, x0
   242b4:	mov	x6, x4
   242b8:	cbnz	x3, 244cc <PyInit__decimal@@Base+0x13544>
   242bc:	cmp	x2, x4
   242c0:	b.ls	24370 <PyInit__decimal@@Base+0x133e8>  // b.plast
   242c4:	clz	x0, x2
   242c8:	cbz	x0, 242e4 <PyInit__decimal@@Base+0x1335c>
   242cc:	lsl	x5, x2, x0
   242d0:	neg	w2, w0
   242d4:	lsl	x6, x4, x0
   242d8:	lsr	x2, x8, x2
   242dc:	orr	x6, x2, x6
   242e0:	lsl	x9, x8, x0
   242e4:	lsr	x3, x5, #32
   242e8:	and	x7, x5, #0xffffffff
   242ec:	udiv	x4, x6, x3
   242f0:	msub	x6, x4, x3, x6
   242f4:	mul	x8, x7, x4
   242f8:	extr	x2, x6, x9, #32
   242fc:	cmp	x8, x2
   24300:	b.ls	24360 <PyInit__decimal@@Base+0x133d8>  // b.plast
   24304:	sub	x0, x4, #0x1
   24308:	adds	x2, x5, x2
   2430c:	b.cs	24320 <PyInit__decimal@@Base+0x13398>  // b.hs, b.nlast
   24310:	cmp	x8, x2
   24314:	b.ls	24320 <PyInit__decimal@@Base+0x13398>  // b.plast
   24318:	sub	x0, x4, #0x2
   2431c:	add	x2, x2, x5
   24320:	sub	x2, x2, x8
   24324:	and	x9, x9, #0xffffffff
   24328:	udiv	x6, x2, x3
   2432c:	msub	x2, x6, x3, x2
   24330:	mul	x7, x7, x6
   24334:	orr	x2, x9, x2, lsl #32
   24338:	cmp	x7, x2
   2433c:	b.ls	24368 <PyInit__decimal@@Base+0x133e0>  // b.plast
   24340:	sub	x3, x6, #0x1
   24344:	adds	x2, x5, x2
   24348:	b.cs	24358 <PyInit__decimal@@Base+0x133d0>  // b.hs, b.nlast
   2434c:	cmp	x7, x2
   24350:	b.ls	24358 <PyInit__decimal@@Base+0x133d0>  // b.plast
   24354:	sub	x3, x6, #0x2
   24358:	orr	x0, x3, x0, lsl #32
   2435c:	ret
   24360:	mov	x0, x4
   24364:	b	24320 <PyInit__decimal@@Base+0x13398>
   24368:	mov	x3, x6
   2436c:	b	24358 <PyInit__decimal@@Base+0x133d0>
   24370:	cbnz	x2, 2437c <PyInit__decimal@@Base+0x133f4>
   24374:	mov	x0, #0x1                   	// #1
   24378:	udiv	x5, x0, x2
   2437c:	clz	x1, x5
   24380:	cbnz	x1, 24408 <PyInit__decimal@@Base+0x13480>
   24384:	sub	x4, x4, x5
   24388:	mov	x1, #0x1                   	// #1
   2438c:	lsr	x2, x5, #32
   24390:	and	x6, x5, #0xffffffff
   24394:	udiv	x3, x4, x2
   24398:	msub	x4, x3, x2, x4
   2439c:	mul	x7, x6, x3
   243a0:	extr	x4, x4, x9, #32
   243a4:	cmp	x7, x4
   243a8:	b.ls	244bc <PyInit__decimal@@Base+0x13534>  // b.plast
   243ac:	sub	x0, x3, #0x1
   243b0:	adds	x4, x5, x4
   243b4:	b.cs	243c8 <PyInit__decimal@@Base+0x13440>  // b.hs, b.nlast
   243b8:	cmp	x7, x4
   243bc:	b.ls	243c8 <PyInit__decimal@@Base+0x13440>  // b.plast
   243c0:	sub	x0, x3, #0x2
   243c4:	add	x4, x4, x5
   243c8:	sub	x4, x4, x7
   243cc:	and	x9, x9, #0xffffffff
   243d0:	udiv	x3, x4, x2
   243d4:	msub	x4, x3, x2, x4
   243d8:	mul	x2, x6, x3
   243dc:	orr	x4, x9, x4, lsl #32
   243e0:	cmp	x2, x4
   243e4:	b.ls	244c4 <PyInit__decimal@@Base+0x1353c>  // b.plast
   243e8:	sub	x6, x3, #0x1
   243ec:	adds	x5, x5, x4
   243f0:	b.cs	24400 <PyInit__decimal@@Base+0x13478>  // b.hs, b.nlast
   243f4:	cmp	x2, x5
   243f8:	b.ls	24400 <PyInit__decimal@@Base+0x13478>  // b.plast
   243fc:	sub	x6, x3, #0x2
   24400:	orr	x0, x6, x0, lsl #32
   24404:	b	2435c <PyInit__decimal@@Base+0x133d4>
   24408:	mov	x0, #0x40                  	// #64
   2440c:	sub	x0, x0, x1
   24410:	lsl	x5, x5, x1
   24414:	and	x2, x5, #0xffffffff
   24418:	lsr	x3, x4, x0
   2441c:	lsr	x0, x8, x0
   24420:	lsl	x4, x4, x1
   24424:	orr	x4, x0, x4
   24428:	lsr	x0, x5, #32
   2442c:	lsl	x9, x8, x1
   24430:	udiv	x6, x3, x0
   24434:	msub	x3, x6, x0, x3
   24438:	mul	x1, x2, x6
   2443c:	extr	x3, x3, x4, #32
   24440:	cmp	x1, x3
   24444:	b.ls	244ac <PyInit__decimal@@Base+0x13524>  // b.plast
   24448:	sub	x7, x6, #0x1
   2444c:	adds	x3, x5, x3
   24450:	b.cs	24464 <PyInit__decimal@@Base+0x134dc>  // b.hs, b.nlast
   24454:	cmp	x1, x3
   24458:	b.ls	24464 <PyInit__decimal@@Base+0x134dc>  // b.plast
   2445c:	sub	x7, x6, #0x2
   24460:	add	x3, x3, x5
   24464:	sub	x3, x3, x1
   24468:	and	x4, x4, #0xffffffff
   2446c:	udiv	x6, x3, x0
   24470:	msub	x0, x6, x0, x3
   24474:	mul	x2, x2, x6
   24478:	orr	x4, x4, x0, lsl #32
   2447c:	cmp	x2, x4
   24480:	b.ls	244b4 <PyInit__decimal@@Base+0x1352c>  // b.plast
   24484:	sub	x1, x6, #0x1
   24488:	adds	x4, x5, x4
   2448c:	b.cs	244a0 <PyInit__decimal@@Base+0x13518>  // b.hs, b.nlast
   24490:	cmp	x2, x4
   24494:	b.ls	244a0 <PyInit__decimal@@Base+0x13518>  // b.plast
   24498:	sub	x1, x6, #0x2
   2449c:	add	x4, x4, x5
   244a0:	sub	x4, x4, x2
   244a4:	orr	x1, x1, x7, lsl #32
   244a8:	b	2438c <PyInit__decimal@@Base+0x13404>
   244ac:	mov	x7, x6
   244b0:	b	24464 <PyInit__decimal@@Base+0x134dc>
   244b4:	mov	x1, x6
   244b8:	b	244a0 <PyInit__decimal@@Base+0x13518>
   244bc:	mov	x0, x3
   244c0:	b	243c8 <PyInit__decimal@@Base+0x13440>
   244c4:	mov	x6, x3
   244c8:	b	24400 <PyInit__decimal@@Base+0x13478>
   244cc:	cmp	x3, x4
   244d0:	b.hi	24604 <PyInit__decimal@@Base+0x1367c>  // b.pmore
   244d4:	clz	x9, x3
   244d8:	cbnz	x9, 244ec <PyInit__decimal@@Base+0x13564>
   244dc:	ccmp	x2, x0, #0x0, cs  // cs = hs, nlast
   244e0:	cset	x0, ls  // ls = plast
   244e4:	mov	x1, #0x0                   	// #0
   244e8:	b	2435c <PyInit__decimal@@Base+0x133d4>
   244ec:	mov	x5, #0x40                  	// #64
   244f0:	sub	x5, x5, x9
   244f4:	lsl	x3, x3, x9
   244f8:	lsr	x7, x2, x5
   244fc:	orr	x7, x7, x3
   24500:	lsr	x6, x4, x5
   24504:	lsr	x5, x0, x5
   24508:	and	x0, x7, #0xffffffff
   2450c:	lsl	x4, x4, x9
   24510:	orr	x4, x5, x4
   24514:	lsr	x5, x7, #32
   24518:	lsl	x10, x2, x9
   2451c:	udiv	x1, x6, x5
   24520:	msub	x6, x1, x5, x6
   24524:	mul	x2, x0, x1
   24528:	extr	x6, x6, x4, #32
   2452c:	cmp	x2, x6
   24530:	b.ls	245f4 <PyInit__decimal@@Base+0x1366c>  // b.plast
   24534:	sub	x3, x1, #0x1
   24538:	adds	x6, x7, x6
   2453c:	b.cs	24550 <PyInit__decimal@@Base+0x135c8>  // b.hs, b.nlast
   24540:	cmp	x2, x6
   24544:	b.ls	24550 <PyInit__decimal@@Base+0x135c8>  // b.plast
   24548:	sub	x3, x1, #0x2
   2454c:	add	x6, x6, x7
   24550:	sub	x6, x6, x2
   24554:	and	x4, x4, #0xffffffff
   24558:	udiv	x2, x6, x5
   2455c:	msub	x5, x2, x5, x6
   24560:	mul	x0, x0, x2
   24564:	orr	x4, x4, x5, lsl #32
   24568:	cmp	x0, x4
   2456c:	b.ls	245fc <PyInit__decimal@@Base+0x13674>  // b.plast
   24570:	sub	x1, x2, #0x1
   24574:	adds	x4, x7, x4
   24578:	b.cs	2458c <PyInit__decimal@@Base+0x13604>  // b.hs, b.nlast
   2457c:	cmp	x0, x4
   24580:	b.ls	2458c <PyInit__decimal@@Base+0x13604>  // b.plast
   24584:	sub	x1, x2, #0x2
   24588:	add	x4, x4, x7
   2458c:	sub	x4, x4, x0
   24590:	orr	x0, x1, x3, lsl #32
   24594:	mov	w1, w1
   24598:	and	x3, x10, #0xffffffff
   2459c:	lsr	x2, x0, #32
   245a0:	lsr	x5, x10, #32
   245a4:	mul	x6, x1, x3
   245a8:	mul	x3, x2, x3
   245ac:	madd	x1, x1, x5, x3
   245b0:	mul	x2, x2, x5
   245b4:	add	x1, x1, x6, lsr #32
   245b8:	cmp	x3, x1
   245bc:	b.ls	245c8 <PyInit__decimal@@Base+0x13640>  // b.plast
   245c0:	mov	x3, #0x100000000           	// #4294967296
   245c4:	add	x2, x2, x3
   245c8:	add	x2, x2, x1, lsr #32
   245cc:	cmp	x4, x2
   245d0:	b.cc	245ec <PyInit__decimal@@Base+0x13664>  // b.lo, b.ul, b.last
   245d4:	and	x6, x6, #0xffffffff
   245d8:	lsl	x8, x8, x9
   245dc:	add	x1, x6, x1, lsl #32
   245e0:	cmp	x8, x1
   245e4:	ccmp	x4, x2, #0x0, cc  // cc = lo, ul, last
   245e8:	b.ne	244e4 <PyInit__decimal@@Base+0x1355c>  // b.any
   245ec:	sub	x0, x0, #0x1
   245f0:	b	244e4 <PyInit__decimal@@Base+0x1355c>
   245f4:	mov	x3, x1
   245f8:	b	24550 <PyInit__decimal@@Base+0x135c8>
   245fc:	mov	x1, x2
   24600:	b	2458c <PyInit__decimal@@Base+0x13604>
   24604:	mov	x1, #0x0                   	// #0
   24608:	mov	x0, #0x0                   	// #0
   2460c:	b	2435c <PyInit__decimal@@Base+0x133d4>

Disassembly of section .fini:

0000000000024610 <.fini>:
   24610:	stp	x29, x30, [sp, #-16]!
   24614:	mov	x29, sp
   24618:	ldp	x29, x30, [sp], #16
   2461c:	ret
