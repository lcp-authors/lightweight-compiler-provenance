
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//genl_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404d50 <.init>:
  404d50:	stp	x29, x30, [sp, #-16]!
  404d54:	mov	x29, sp
  404d58:	bl	405370 <_start@@Base+0x50>
  404d5c:	ldp	x29, x30, [sp], #16
  404d60:	ret

Disassembly of section .plt:

0000000000404d70 <memcpy@plt-0x20>:
  404d70:	stp	x16, x30, [sp, #-16]!
  404d74:	adrp	x16, 41e000 <_IO_stdin_used@@Base+0x109a0>
  404d78:	ldr	x17, [x16, #4088]
  404d7c:	add	x16, x16, #0xff8
  404d80:	br	x17
  404d84:	nop
  404d88:	nop
  404d8c:	nop

0000000000404d90 <memcpy@plt>:
  404d90:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404d94:	ldr	x17, [x16]
  404d98:	add	x16, x16, #0x0
  404d9c:	br	x17

0000000000404da0 <recvmsg@plt>:
  404da0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404da4:	ldr	x17, [x16, #8]
  404da8:	add	x16, x16, #0x8
  404dac:	br	x17

0000000000404db0 <strtoul@plt>:
  404db0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404db4:	ldr	x17, [x16, #16]
  404db8:	add	x16, x16, #0x10
  404dbc:	br	x17

0000000000404dc0 <strlen@plt>:
  404dc0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404dc4:	ldr	x17, [x16, #24]
  404dc8:	add	x16, x16, #0x18
  404dcc:	br	x17

0000000000404dd0 <exit@plt>:
  404dd0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404dd4:	ldr	x17, [x16, #32]
  404dd8:	add	x16, x16, #0x20
  404ddc:	br	x17

0000000000404de0 <perror@plt>:
  404de0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #40]
  404de8:	add	x16, x16, #0x28
  404dec:	br	x17

0000000000404df0 <__cmsg_nxthdr@plt>:
  404df0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #48]
  404df8:	add	x16, x16, #0x30
  404dfc:	br	x17

0000000000404e00 <strtoll@plt>:
  404e00:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #56]
  404e08:	add	x16, x16, #0x38
  404e0c:	br	x17

0000000000404e10 <strtod@plt>:
  404e10:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e14:	ldr	x17, [x16, #64]
  404e18:	add	x16, x16, #0x40
  404e1c:	br	x17

0000000000404e20 <geteuid@plt>:
  404e20:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e24:	ldr	x17, [x16, #72]
  404e28:	add	x16, x16, #0x48
  404e2c:	br	x17

0000000000404e30 <sethostent@plt>:
  404e30:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e34:	ldr	x17, [x16, #80]
  404e38:	add	x16, x16, #0x50
  404e3c:	br	x17

0000000000404e40 <bind@plt>:
  404e40:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e44:	ldr	x17, [x16, #88]
  404e48:	add	x16, x16, #0x58
  404e4c:	br	x17

0000000000404e50 <ftell@plt>:
  404e50:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e54:	ldr	x17, [x16, #96]
  404e58:	add	x16, x16, #0x60
  404e5c:	br	x17

0000000000404e60 <sprintf@plt>:
  404e60:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e64:	ldr	x17, [x16, #104]
  404e68:	add	x16, x16, #0x68
  404e6c:	br	x17

0000000000404e70 <getuid@plt>:
  404e70:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e74:	ldr	x17, [x16, #112]
  404e78:	add	x16, x16, #0x70
  404e7c:	br	x17

0000000000404e80 <putc@plt>:
  404e80:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e84:	ldr	x17, [x16, #120]
  404e88:	add	x16, x16, #0x78
  404e8c:	br	x17

0000000000404e90 <strftime@plt>:
  404e90:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404e94:	ldr	x17, [x16, #128]
  404e98:	add	x16, x16, #0x80
  404e9c:	br	x17

0000000000404ea0 <fputc@plt>:
  404ea0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ea4:	ldr	x17, [x16, #136]
  404ea8:	add	x16, x16, #0x88
  404eac:	br	x17

0000000000404eb0 <dlopen@plt>:
  404eb0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404eb4:	ldr	x17, [x16, #144]
  404eb8:	add	x16, x16, #0x90
  404ebc:	br	x17

0000000000404ec0 <snprintf@plt>:
  404ec0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ec4:	ldr	x17, [x16, #152]
  404ec8:	add	x16, x16, #0x98
  404ecc:	br	x17

0000000000404ed0 <fileno@plt>:
  404ed0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ed4:	ldr	x17, [x16, #160]
  404ed8:	add	x16, x16, #0xa0
  404edc:	br	x17

0000000000404ee0 <localtime@plt>:
  404ee0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ee4:	ldr	x17, [x16, #168]
  404ee8:	add	x16, x16, #0xa8
  404eec:	br	x17

0000000000404ef0 <fclose@plt>:
  404ef0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ef4:	ldr	x17, [x16, #176]
  404ef8:	add	x16, x16, #0xb0
  404efc:	br	x17

0000000000404f00 <atoi@plt>:
  404f00:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f04:	ldr	x17, [x16, #184]
  404f08:	add	x16, x16, #0xb8
  404f0c:	br	x17

0000000000404f10 <time@plt>:
  404f10:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f14:	ldr	x17, [x16, #192]
  404f18:	add	x16, x16, #0xc0
  404f1c:	br	x17

0000000000404f20 <malloc@plt>:
  404f20:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f24:	ldr	x17, [x16, #200]
  404f28:	add	x16, x16, #0xc8
  404f2c:	br	x17

0000000000404f30 <setsockopt@plt>:
  404f30:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f34:	ldr	x17, [x16, #208]
  404f38:	add	x16, x16, #0xd0
  404f3c:	br	x17

0000000000404f40 <dlsym@plt>:
  404f40:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f44:	ldr	x17, [x16, #216]
  404f48:	add	x16, x16, #0xd8
  404f4c:	br	x17

0000000000404f50 <__isoc99_fscanf@plt>:
  404f50:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f54:	ldr	x17, [x16, #224]
  404f58:	add	x16, x16, #0xe0
  404f5c:	br	x17

0000000000404f60 <__libc_start_main@plt>:
  404f60:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f64:	ldr	x17, [x16, #232]
  404f68:	add	x16, x16, #0xe8
  404f6c:	br	x17

0000000000404f70 <strcat@plt>:
  404f70:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f74:	ldr	x17, [x16, #240]
  404f78:	add	x16, x16, #0xf0
  404f7c:	br	x17

0000000000404f80 <if_indextoname@plt>:
  404f80:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f84:	ldr	x17, [x16, #248]
  404f88:	add	x16, x16, #0xf8
  404f8c:	br	x17

0000000000404f90 <memset@plt>:
  404f90:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404f94:	ldr	x17, [x16, #256]
  404f98:	add	x16, x16, #0x100
  404f9c:	br	x17

0000000000404fa0 <gettimeofday@plt>:
  404fa0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fa4:	ldr	x17, [x16, #264]
  404fa8:	add	x16, x16, #0x108
  404fac:	br	x17

0000000000404fb0 <sendmsg@plt>:
  404fb0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fb4:	ldr	x17, [x16, #272]
  404fb8:	add	x16, x16, #0x110
  404fbc:	br	x17

0000000000404fc0 <calloc@plt>:
  404fc0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fc4:	ldr	x17, [x16, #280]
  404fc8:	add	x16, x16, #0x118
  404fcc:	br	x17

0000000000404fd0 <cap_get_flag@plt>:
  404fd0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fd4:	ldr	x17, [x16, #288]
  404fd8:	add	x16, x16, #0x120
  404fdc:	br	x17

0000000000404fe0 <bcmp@plt>:
  404fe0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404fe4:	ldr	x17, [x16, #296]
  404fe8:	add	x16, x16, #0x128
  404fec:	br	x17

0000000000404ff0 <strcasecmp@plt>:
  404ff0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  404ff4:	ldr	x17, [x16, #304]
  404ff8:	add	x16, x16, #0x130
  404ffc:	br	x17

0000000000405000 <realloc@plt>:
  405000:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405004:	ldr	x17, [x16, #312]
  405008:	add	x16, x16, #0x138
  40500c:	br	x17

0000000000405010 <cap_set_proc@plt>:
  405010:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405014:	ldr	x17, [x16, #320]
  405018:	add	x16, x16, #0x140
  40501c:	br	x17

0000000000405020 <strdup@plt>:
  405020:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405024:	ldr	x17, [x16, #328]
  405028:	add	x16, x16, #0x148
  40502c:	br	x17

0000000000405030 <strerror@plt>:
  405030:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405034:	ldr	x17, [x16, #336]
  405038:	add	x16, x16, #0x150
  40503c:	br	x17

0000000000405040 <close@plt>:
  405040:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405044:	ldr	x17, [x16, #344]
  405048:	add	x16, x16, #0x158
  40504c:	br	x17

0000000000405050 <strrchr@plt>:
  405050:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405054:	ldr	x17, [x16, #352]
  405058:	add	x16, x16, #0x160
  40505c:	br	x17

0000000000405060 <recv@plt>:
  405060:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405064:	ldr	x17, [x16, #360]
  405068:	add	x16, x16, #0x168
  40506c:	br	x17

0000000000405070 <__gmon_start__@plt>:
  405070:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405074:	ldr	x17, [x16, #368]
  405078:	add	x16, x16, #0x170
  40507c:	br	x17

0000000000405080 <abort@plt>:
  405080:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405084:	ldr	x17, [x16, #376]
  405088:	add	x16, x16, #0x178
  40508c:	br	x17

0000000000405090 <feof@plt>:
  405090:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405094:	ldr	x17, [x16, #384]
  405098:	add	x16, x16, #0x180
  40509c:	br	x17

00000000004050a0 <strcmp@plt>:
  4050a0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050a4:	ldr	x17, [x16, #392]
  4050a8:	add	x16, x16, #0x188
  4050ac:	br	x17

00000000004050b0 <__ctype_b_loc@plt>:
  4050b0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050b4:	ldr	x17, [x16, #400]
  4050b8:	add	x16, x16, #0x190
  4050bc:	br	x17

00000000004050c0 <strtol@plt>:
  4050c0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050c4:	ldr	x17, [x16, #408]
  4050c8:	add	x16, x16, #0x198
  4050cc:	br	x17

00000000004050d0 <cap_get_proc@plt>:
  4050d0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050d4:	ldr	x17, [x16, #416]
  4050d8:	add	x16, x16, #0x1a0
  4050dc:	br	x17

00000000004050e0 <fread@plt>:
  4050e0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050e4:	ldr	x17, [x16, #424]
  4050e8:	add	x16, x16, #0x1a8
  4050ec:	br	x17

00000000004050f0 <getline@plt>:
  4050f0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4050f4:	ldr	x17, [x16, #432]
  4050f8:	add	x16, x16, #0x1b0
  4050fc:	br	x17

0000000000405100 <gethostbyaddr@plt>:
  405100:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405104:	ldr	x17, [x16, #440]
  405108:	add	x16, x16, #0x1b8
  40510c:	br	x17

0000000000405110 <free@plt>:
  405110:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405114:	ldr	x17, [x16, #448]
  405118:	add	x16, x16, #0x1c0
  40511c:	br	x17

0000000000405120 <inet_pton@plt>:
  405120:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405124:	ldr	x17, [x16, #456]
  405128:	add	x16, x16, #0x1c8
  40512c:	br	x17

0000000000405130 <send@plt>:
  405130:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405134:	ldr	x17, [x16, #464]
  405138:	add	x16, x16, #0x1d0
  40513c:	br	x17

0000000000405140 <strspn@plt>:
  405140:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405144:	ldr	x17, [x16, #472]
  405148:	add	x16, x16, #0x1d8
  40514c:	br	x17

0000000000405150 <strchr@plt>:
  405150:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405154:	ldr	x17, [x16, #480]
  405158:	add	x16, x16, #0x1e0
  40515c:	br	x17

0000000000405160 <strtoull@plt>:
  405160:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405164:	ldr	x17, [x16, #488]
  405168:	add	x16, x16, #0x1e8
  40516c:	br	x17

0000000000405170 <fwrite@plt>:
  405170:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405174:	ldr	x17, [x16, #496]
  405178:	add	x16, x16, #0x1f0
  40517c:	br	x17

0000000000405180 <socket@plt>:
  405180:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405184:	ldr	x17, [x16, #504]
  405188:	add	x16, x16, #0x1f8
  40518c:	br	x17

0000000000405190 <fflush@plt>:
  405190:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405194:	ldr	x17, [x16, #512]
  405198:	add	x16, x16, #0x200
  40519c:	br	x17

00000000004051a0 <strcpy@plt>:
  4051a0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051a4:	ldr	x17, [x16, #520]
  4051a8:	add	x16, x16, #0x208
  4051ac:	br	x17

00000000004051b0 <fopen64@plt>:
  4051b0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051b4:	ldr	x17, [x16, #528]
  4051b8:	add	x16, x16, #0x210
  4051bc:	br	x17

00000000004051c0 <cap_clear@plt>:
  4051c0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051c4:	ldr	x17, [x16, #536]
  4051c8:	add	x16, x16, #0x218
  4051cc:	br	x17

00000000004051d0 <isatty@plt>:
  4051d0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051d4:	ldr	x17, [x16, #544]
  4051d8:	add	x16, x16, #0x220
  4051dc:	br	x17

00000000004051e0 <sysconf@plt>:
  4051e0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051e4:	ldr	x17, [x16, #552]
  4051e8:	add	x16, x16, #0x228
  4051ec:	br	x17

00000000004051f0 <asctime@plt>:
  4051f0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4051f4:	ldr	x17, [x16, #560]
  4051f8:	add	x16, x16, #0x230
  4051fc:	br	x17

0000000000405200 <cap_free@plt>:
  405200:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405204:	ldr	x17, [x16, #568]
  405208:	add	x16, x16, #0x238
  40520c:	br	x17

0000000000405210 <if_nametoindex@plt>:
  405210:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405214:	ldr	x17, [x16, #576]
  405218:	add	x16, x16, #0x240
  40521c:	br	x17

0000000000405220 <strchrnul@plt>:
  405220:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405224:	ldr	x17, [x16, #584]
  405228:	add	x16, x16, #0x248
  40522c:	br	x17

0000000000405230 <strstr@plt>:
  405230:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405234:	ldr	x17, [x16, #592]
  405238:	add	x16, x16, #0x250
  40523c:	br	x17

0000000000405240 <__isoc99_sscanf@plt>:
  405240:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405244:	ldr	x17, [x16, #600]
  405248:	add	x16, x16, #0x258
  40524c:	br	x17

0000000000405250 <strncpy@plt>:
  405250:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405254:	ldr	x17, [x16, #608]
  405258:	add	x16, x16, #0x260
  40525c:	br	x17

0000000000405260 <strcspn@plt>:
  405260:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405264:	ldr	x17, [x16, #616]
  405268:	add	x16, x16, #0x268
  40526c:	br	x17

0000000000405270 <vfprintf@plt>:
  405270:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405274:	ldr	x17, [x16, #624]
  405278:	add	x16, x16, #0x270
  40527c:	br	x17

0000000000405280 <printf@plt>:
  405280:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405284:	ldr	x17, [x16, #632]
  405288:	add	x16, x16, #0x278
  40528c:	br	x17

0000000000405290 <__assert_fail@plt>:
  405290:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405294:	ldr	x17, [x16, #640]
  405298:	add	x16, x16, #0x280
  40529c:	br	x17

00000000004052a0 <__errno_location@plt>:
  4052a0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4052a4:	ldr	x17, [x16, #648]
  4052a8:	add	x16, x16, #0x288
  4052ac:	br	x17

00000000004052b0 <getenv@plt>:
  4052b0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4052b4:	ldr	x17, [x16, #656]
  4052b8:	add	x16, x16, #0x290
  4052bc:	br	x17

00000000004052c0 <putchar@plt>:
  4052c0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4052c4:	ldr	x17, [x16, #664]
  4052c8:	add	x16, x16, #0x298
  4052cc:	br	x17

00000000004052d0 <getsockname@plt>:
  4052d0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4052d4:	ldr	x17, [x16, #672]
  4052d8:	add	x16, x16, #0x2a0
  4052dc:	br	x17

00000000004052e0 <fprintf@plt>:
  4052e0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4052e4:	ldr	x17, [x16, #680]
  4052e8:	add	x16, x16, #0x2a8
  4052ec:	br	x17

00000000004052f0 <fgets@plt>:
  4052f0:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  4052f4:	ldr	x17, [x16, #688]
  4052f8:	add	x16, x16, #0x2b0
  4052fc:	br	x17

0000000000405300 <inet_ntop@plt>:
  405300:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405304:	ldr	x17, [x16, #696]
  405308:	add	x16, x16, #0x2b8
  40530c:	br	x17

0000000000405310 <ferror@plt>:
  405310:	adrp	x16, 41f000 <memcpy@GLIBC_2.17>
  405314:	ldr	x17, [x16, #704]
  405318:	add	x16, x16, #0x2c0
  40531c:	br	x17

Disassembly of section .text:

0000000000405320 <_start@@Base>:
  405320:	mov	x29, #0x0                   	// #0
  405324:	mov	x30, #0x0                   	// #0
  405328:	mov	x5, x0
  40532c:	ldr	x1, [sp]
  405330:	add	x2, sp, #0x8
  405334:	mov	x6, sp
  405338:	movz	x0, #0x0, lsl #48
  40533c:	movk	x0, #0x0, lsl #32
  405340:	movk	x0, #0x40, lsl #16
  405344:	movk	x0, #0x542c
  405348:	movz	x3, #0x0, lsl #48
  40534c:	movk	x3, #0x0, lsl #32
  405350:	movk	x3, #0x40, lsl #16
  405354:	movk	x3, #0xd5c8
  405358:	movz	x4, #0x0, lsl #48
  40535c:	movk	x4, #0x0, lsl #32
  405360:	movk	x4, #0x40, lsl #16
  405364:	movk	x4, #0xd648
  405368:	bl	404f60 <__libc_start_main@plt>
  40536c:	bl	405080 <abort@plt>
  405370:	adrp	x0, 41e000 <_IO_stdin_used@@Base+0x109a0>
  405374:	ldr	x0, [x0, #4040]
  405378:	cbz	x0, 405380 <_start@@Base+0x60>
  40537c:	b	405070 <__gmon_start__@plt>
  405380:	ret
  405384:	nop
  405388:	adrp	x0, 41f000 <memcpy@GLIBC_2.17>
  40538c:	add	x0, x0, #0x310
  405390:	adrp	x1, 41f000 <memcpy@GLIBC_2.17>
  405394:	add	x1, x1, #0x310
  405398:	cmp	x1, x0
  40539c:	b.eq	4053b4 <_start@@Base+0x94>  // b.none
  4053a0:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  4053a4:	ldr	x1, [x1, #1640]
  4053a8:	cbz	x1, 4053b4 <_start@@Base+0x94>
  4053ac:	mov	x16, x1
  4053b0:	br	x16
  4053b4:	ret
  4053b8:	adrp	x0, 41f000 <memcpy@GLIBC_2.17>
  4053bc:	add	x0, x0, #0x310
  4053c0:	adrp	x1, 41f000 <memcpy@GLIBC_2.17>
  4053c4:	add	x1, x1, #0x310
  4053c8:	sub	x1, x1, x0
  4053cc:	lsr	x2, x1, #63
  4053d0:	add	x1, x2, x1, asr #3
  4053d4:	cmp	xzr, x1, asr #1
  4053d8:	asr	x1, x1, #1
  4053dc:	b.eq	4053f4 <_start@@Base+0xd4>  // b.none
  4053e0:	adrp	x2, 40d000 <rta_addattr8@@Base+0x4>
  4053e4:	ldr	x2, [x2, #1648]
  4053e8:	cbz	x2, 4053f4 <_start@@Base+0xd4>
  4053ec:	mov	x16, x2
  4053f0:	br	x16
  4053f4:	ret
  4053f8:	stp	x29, x30, [sp, #-32]!
  4053fc:	mov	x29, sp
  405400:	str	x19, [sp, #16]
  405404:	adrp	x19, 41f000 <memcpy@GLIBC_2.17>
  405408:	ldrb	w0, [x19, #800]
  40540c:	cbnz	w0, 40541c <_start@@Base+0xfc>
  405410:	bl	405388 <_start@@Base+0x68>
  405414:	mov	w0, #0x1                   	// #1
  405418:	strb	w0, [x19, #800]
  40541c:	ldr	x19, [sp, #16]
  405420:	ldp	x29, x30, [sp], #32
  405424:	ret
  405428:	b	4053b8 <_start@@Base+0x98>

000000000040542c <main@@Base>:
  40542c:	stp	x29, x30, [sp, #-96]!
  405430:	cmp	w0, #0x2
  405434:	str	x27, [sp, #16]
  405438:	stp	x26, x25, [sp, #32]
  40543c:	stp	x24, x23, [sp, #48]
  405440:	stp	x22, x21, [sp, #64]
  405444:	stp	x20, x19, [sp, #80]
  405448:	mov	x29, sp
  40544c:	b.lt	405584 <main@@Base+0x158>  // b.tstop
  405450:	adrp	x21, 40d000 <rta_addattr8@@Base+0x4>
  405454:	adrp	x25, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  405458:	adrp	x22, 40d000 <rta_addattr8@@Base+0x4>
  40545c:	adrp	x23, 40d000 <rta_addattr8@@Base+0x4>
  405460:	adrp	x26, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  405464:	adrp	x24, 40d000 <rta_addattr8@@Base+0x4>
  405468:	adrp	x27, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  40546c:	sub	w20, w0, #0x1
  405470:	add	x19, x1, #0x8
  405474:	add	x21, x21, #0x678
  405478:	add	x25, x25, #0xd84
  40547c:	add	x22, x22, #0x67f
  405480:	add	x23, x23, #0x68b
  405484:	add	x26, x26, #0xd80
  405488:	add	x24, x24, #0x694
  40548c:	add	x27, x27, #0xd88
  405490:	b	4054b4 <main@@Base+0x88>
  405494:	ldr	w9, [x8]
  405498:	add	w10, w20, #0x1
  40549c:	sub	w20, w20, #0x1
  4054a0:	cmp	w10, #0x2
  4054a4:	add	w9, w9, #0x1
  4054a8:	add	x19, x19, #0x8
  4054ac:	str	w9, [x8]
  4054b0:	b.le	405584 <main@@Base+0x158>
  4054b4:	ldr	x0, [x19]
  4054b8:	ldrb	w8, [x0]
  4054bc:	cmp	w8, #0x2d
  4054c0:	b.ne	405550 <main@@Base+0x124>  // b.any
  4054c4:	mov	x1, x21
  4054c8:	bl	40749c <matches@@Base>
  4054cc:	mov	x8, x25
  4054d0:	tbz	w0, #0, 405494 <main@@Base+0x68>
  4054d4:	ldr	x0, [x19]
  4054d8:	mov	x1, x22
  4054dc:	bl	40749c <matches@@Base>
  4054e0:	mov	x8, x25
  4054e4:	tbz	w0, #0, 405494 <main@@Base+0x68>
  4054e8:	ldr	x0, [x19]
  4054ec:	mov	x1, x23
  4054f0:	bl	40749c <matches@@Base>
  4054f4:	mov	x8, x26
  4054f8:	tbz	w0, #0, 405494 <main@@Base+0x68>
  4054fc:	ldr	x0, [x19]
  405500:	mov	x1, x24
  405504:	bl	40749c <matches@@Base>
  405508:	mov	x8, x27
  40550c:	tbz	w0, #0, 405494 <main@@Base+0x68>
  405510:	ldr	x0, [x19]
  405514:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405518:	add	x1, x1, #0x699
  40551c:	bl	40749c <matches@@Base>
  405520:	tbz	w0, #0, 405588 <main@@Base+0x15c>
  405524:	ldr	x0, [x19]
  405528:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  40552c:	add	x1, x1, #0x6bf
  405530:	bl	40749c <matches@@Base>
  405534:	tbz	w0, #0, 405584 <main@@Base+0x158>
  405538:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  40553c:	ldr	x0, [x8, #784]
  405540:	ldr	x2, [x19]
  405544:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405548:	add	x1, x1, #0x6c5
  40554c:	b	4055b8 <main@@Base+0x18c>
  405550:	bl	4055f0 <main@@Base+0x1c4>
  405554:	cbz	x0, 4055a4 <main@@Base+0x178>
  405558:	ldr	x8, [x0, #24]
  40555c:	mov	w1, w20
  405560:	mov	x2, x19
  405564:	blr	x8
  405568:	ldp	x20, x19, [sp, #80]
  40556c:	ldp	x22, x21, [sp, #64]
  405570:	ldp	x24, x23, [sp, #48]
  405574:	ldp	x26, x25, [sp, #32]
  405578:	ldr	x27, [sp, #16]
  40557c:	ldp	x29, x30, [sp], #96
  405580:	ret
  405584:	bl	4055c4 <main@@Base+0x198>
  405588:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  40558c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405590:	add	x0, x0, #0x6a2
  405594:	add	x1, x1, #0x7f2
  405598:	bl	405280 <printf@plt>
  40559c:	mov	w0, wzr
  4055a0:	bl	404dd0 <exit@plt>
  4055a4:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4055a8:	ldr	x0, [x8, #784]
  4055ac:	ldr	x2, [x19]
  4055b0:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  4055b4:	add	x1, x1, #0x6f0
  4055b8:	bl	4052e0 <fprintf@plt>
  4055bc:	mov	w0, #0xffffffff            	// #-1
  4055c0:	bl	404dd0 <exit@plt>
  4055c4:	stp	x29, x30, [sp, #-16]!
  4055c8:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4055cc:	ldr	x3, [x8, #784]
  4055d0:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  4055d4:	add	x0, x0, #0x6fd
  4055d8:	mov	w1, #0x97                  	// #151
  4055dc:	mov	w2, #0x1                   	// #1
  4055e0:	mov	x29, sp
  4055e4:	bl	405170 <fwrite@plt>
  4055e8:	mov	w0, #0xffffffff            	// #-1
  4055ec:	bl	404dd0 <exit@plt>
  4055f0:	sub	sp, sp, #0x140
  4055f4:	stp	x22, x21, [sp, #288]
  4055f8:	adrp	x21, 41f000 <memcpy@GLIBC_2.17>
  4055fc:	stp	x20, x19, [sp, #304]
  405600:	ldr	x20, [x21, #808]
  405604:	mov	x19, x0
  405608:	stp	x29, x30, [sp, #256]
  40560c:	str	x28, [sp, #272]
  405610:	add	x29, sp, #0x100
  405614:	cbz	x20, 405630 <main@@Base+0x204>
  405618:	add	x0, x20, #0x8
  40561c:	mov	x1, x19
  405620:	bl	4050a0 <strcmp@plt>
  405624:	cbz	w0, 4056f0 <main@@Base+0x2c4>
  405628:	ldr	x20, [x20]
  40562c:	cbnz	x20, 405618 <main@@Base+0x1ec>
  405630:	adrp	x2, 40d000 <rta_addattr8@@Base+0x4>
  405634:	add	x2, x2, #0x795
  405638:	mov	x0, sp
  40563c:	mov	w1, #0x100                 	// #256
  405640:	mov	x3, x19
  405644:	bl	404ec0 <snprintf@plt>
  405648:	mov	x0, sp
  40564c:	mov	w1, #0x1                   	// #1
  405650:	bl	404eb0 <dlopen@plt>
  405654:	mov	x20, x0
  405658:	cbnz	x0, 405680 <main@@Base+0x254>
  40565c:	adrp	x22, 41f000 <memcpy@GLIBC_2.17>
  405660:	ldr	x20, [x22, #816]
  405664:	cbnz	x20, 405680 <main@@Base+0x254>
  405668:	mov	w1, #0x1                   	// #1
  40566c:	mov	x0, xzr
  405670:	bl	404eb0 <dlopen@plt>
  405674:	mov	x20, x0
  405678:	str	x0, [x22, #816]
  40567c:	cbz	x0, 4056ac <main@@Base+0x280>
  405680:	adrp	x2, 40d000 <rta_addattr8@@Base+0x4>
  405684:	add	x2, x2, #0x79b
  405688:	mov	x0, sp
  40568c:	mov	w1, #0x100                 	// #256
  405690:	mov	x3, x19
  405694:	bl	404ec0 <snprintf@plt>
  405698:	mov	x1, sp
  40569c:	mov	x0, x20
  4056a0:	bl	404f40 <dlsym@plt>
  4056a4:	mov	x20, x0
  4056a8:	cbnz	x0, 4056e4 <main@@Base+0x2b8>
  4056ac:	mov	w0, #0x1                   	// #1
  4056b0:	mov	w1, #0x28                  	// #40
  4056b4:	bl	404fc0 <calloc@plt>
  4056b8:	mov	x20, x0
  4056bc:	cbz	x0, 4056f0 <main@@Base+0x2c4>
  4056c0:	add	x0, x20, #0x8
  4056c4:	mov	w2, #0xf                   	// #15
  4056c8:	mov	x1, x19
  4056cc:	bl	405250 <strncpy@plt>
  4056d0:	adrp	x8, 405000 <realloc@plt>
  4056d4:	adrp	x9, 405000 <realloc@plt>
  4056d8:	add	x8, x8, #0x70c
  4056dc:	add	x9, x9, #0x74c
  4056e0:	stp	x8, x9, [x20, #24]
  4056e4:	ldr	x8, [x21, #808]
  4056e8:	str	x8, [x20]
  4056ec:	str	x20, [x21, #808]
  4056f0:	mov	x0, x20
  4056f4:	ldp	x20, x19, [sp, #304]
  4056f8:	ldp	x22, x21, [sp, #288]
  4056fc:	ldr	x28, [sp, #272]
  405700:	ldp	x29, x30, [sp, #256]
  405704:	add	sp, sp, #0x140
  405708:	ret
  40570c:	cbnz	w1, 405718 <main@@Base+0x2ec>
  405710:	mov	w0, wzr
  405714:	ret
  405718:	stp	x29, x30, [sp, #-16]!
  40571c:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405720:	ldr	x8, [x8, #784]
  405724:	ldr	x3, [x2]
  405728:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  40572c:	add	x2, x0, #0x8
  405730:	add	x1, x1, #0x7a8
  405734:	mov	x0, x8
  405738:	mov	x29, sp
  40573c:	bl	4052e0 <fprintf@plt>
  405740:	mov	w0, #0xffffffff            	// #-1
  405744:	ldp	x29, x30, [sp], #16
  405748:	ret
  40574c:	stp	x29, x30, [sp, #-16]!
  405750:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  405754:	mov	x3, x1
  405758:	add	x0, x0, #0x7dc
  40575c:	mov	w1, #0x15                  	// #21
  405760:	mov	w2, #0x1                   	// #1
  405764:	mov	x29, sp
  405768:	bl	405170 <fwrite@plt>
  40576c:	mov	w0, wzr
  405770:	ldp	x29, x30, [sp], #16
  405774:	ret
  405778:	stp	x29, x30, [sp, #-32]!
  40577c:	cmp	w1, #0x1
  405780:	stp	x20, x19, [sp, #16]
  405784:	mov	x29, sp
  405788:	b.le	405844 <main@@Base+0x418>
  40578c:	ldr	x0, [x2, #8]
  405790:	mov	w20, w1
  405794:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405798:	add	x1, x1, #0x812
  40579c:	mov	x19, x2
  4057a0:	bl	40749c <matches@@Base>
  4057a4:	tbz	w0, #0, 405814 <main@@Base+0x3e8>
  4057a8:	ldr	x0, [x19, #8]
  4057ac:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  4057b0:	add	x1, x1, #0x81a
  4057b4:	bl	40749c <matches@@Base>
  4057b8:	tbz	w0, #0, 40581c <main@@Base+0x3f0>
  4057bc:	ldr	x0, [x19, #8]
  4057c0:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  4057c4:	add	x1, x1, #0x81e
  4057c8:	bl	40749c <matches@@Base>
  4057cc:	tbz	w0, #0, 405830 <main@@Base+0x404>
  4057d0:	ldr	x0, [x19, #8]
  4057d4:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  4057d8:	add	x1, x1, #0x823
  4057dc:	bl	40749c <matches@@Base>
  4057e0:	tbz	w0, #0, 405830 <main@@Base+0x404>
  4057e4:	ldr	x0, [x19, #8]
  4057e8:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  4057ec:	add	x1, x1, #0x828
  4057f0:	bl	40749c <matches@@Base>
  4057f4:	tbz	w0, #0, 405830 <main@@Base+0x404>
  4057f8:	ldr	x0, [x19, #8]
  4057fc:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405800:	add	x1, x1, #0x6c0
  405804:	bl	40749c <matches@@Base>
  405808:	tbnz	w0, #0, 405870 <main@@Base+0x444>
  40580c:	bl	405ba4 <main@@Base+0x778>
  405810:	b	405860 <main@@Base+0x434>
  405814:	bl	4058ac <main@@Base+0x480>
  405818:	b	405864 <main@@Base+0x438>
  40581c:	sub	w1, w20, #0x2
  405820:	add	x2, x19, #0x10
  405824:	mov	w0, #0x3                   	// #3
  405828:	bl	405918 <main@@Base+0x4ec>
  40582c:	b	405864 <main@@Base+0x438>
  405830:	sub	w1, w20, #0x2
  405834:	add	x2, x19, #0x10
  405838:	mov	w0, wzr
  40583c:	bl	405918 <main@@Base+0x4ec>
  405840:	b	405864 <main@@Base+0x438>
  405844:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405848:	ldr	x3, [x8, #784]
  40584c:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  405850:	add	x0, x0, #0x7f9
  405854:	mov	w1, #0x18                  	// #24
  405858:	mov	w2, #0x1                   	// #1
  40585c:	bl	405170 <fwrite@plt>
  405860:	mov	w0, #0xffffffff            	// #-1
  405864:	ldp	x20, x19, [sp, #16]
  405868:	ldp	x29, x30, [sp], #32
  40586c:	ret
  405870:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405874:	ldr	x0, [x8, #784]
  405878:	ldr	x2, [x19, #8]
  40587c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405880:	add	x1, x1, #0x82c
  405884:	bl	4052e0 <fprintf@plt>
  405888:	b	405860 <main@@Base+0x434>
  40588c:	stp	x29, x30, [sp, #-16]!
  405890:	mov	x2, x1
  405894:	mov	x1, x0
  405898:	mov	x0, xzr
  40589c:	mov	x29, sp
  4058a0:	bl	405bd0 <main@@Base+0x7a4>
  4058a4:	ldp	x29, x30, [sp], #16
  4058a8:	ret
  4058ac:	sub	sp, sp, #0x50
  4058b0:	add	x0, sp, #0x8
  4058b4:	mov	w1, #0x8000                	// #32768
  4058b8:	mov	w2, #0x10                  	// #16
  4058bc:	stp	x29, x30, [sp, #64]
  4058c0:	add	x29, sp, #0x40
  4058c4:	bl	40b410 <rtnl_open_byproto@@Base>
  4058c8:	tbnz	w0, #31, 4058f4 <main@@Base+0x4c8>
  4058cc:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4058d0:	ldr	x2, [x8, #792]
  4058d4:	adrp	x1, 405000 <realloc@plt>
  4058d8:	add	x1, x1, #0xbd0
  4058dc:	add	x0, sp, #0x8
  4058e0:	bl	40c6f0 <rtnl_listen@@Base>
  4058e4:	asr	w0, w0, #31
  4058e8:	ldp	x29, x30, [sp, #64]
  4058ec:	add	sp, sp, #0x50
  4058f0:	ret
  4058f4:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  4058f8:	ldr	x3, [x8, #784]
  4058fc:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  405900:	add	x0, x0, #0x85c
  405904:	mov	w1, #0x22                  	// #34
  405908:	mov	w2, #0x1                   	// #1
  40590c:	bl	405170 <fwrite@plt>
  405910:	mov	w0, #0xffffffff            	// #-1
  405914:	b	4058e8 <main@@Base+0x4bc>
  405918:	stp	x29, x30, [sp, #-48]!
  40591c:	stp	x28, x21, [sp, #16]
  405920:	stp	x20, x19, [sp, #32]
  405924:	mov	x29, sp
  405928:	sub	sp, sp, #0x1, lsl #12
  40592c:	sub	sp, sp, #0x70
  405930:	mov	x20, x2
  405934:	mov	w21, w1
  405938:	mov	w19, w0
  40593c:	add	x0, sp, #0x10
  405940:	mov	w2, #0x1014                	// #4116
  405944:	mov	w1, wzr
  405948:	bl	404f90 <memset@plt>
  40594c:	mov	x8, #0x14                  	// #20
  405950:	movk	x8, #0x10, lsl #32
  405954:	movk	x8, #0x5, lsl #48
  405958:	mov	w9, #0x3                   	// #3
  40595c:	sub	x0, x29, #0x38
  405960:	mov	w2, #0x10                  	// #16
  405964:	mov	w1, wzr
  405968:	stp	xzr, x8, [sp, #8]
  40596c:	strb	w9, [sp, #32]
  405970:	bl	40b410 <rtnl_open_byproto@@Base>
  405974:	tbnz	w0, #31, 405b80 <main@@Base+0x754>
  405978:	cbz	w19, 405a54 <main@@Base+0x628>
  40597c:	cmp	w19, #0x3
  405980:	b.ne	405a9c <main@@Base+0x670>  // b.any
  405984:	cmp	w21, #0x2
  405988:	b.ne	405ae0 <main@@Base+0x6b4>  // b.any
  40598c:	ldr	x0, [x20]
  405990:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405994:	add	x1, x1, #0xf4d
  405998:	bl	40749c <matches@@Base>
  40599c:	tbz	w0, #0, 4059f8 <main@@Base+0x5cc>
  4059a0:	ldr	x0, [x20]
  4059a4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  4059a8:	add	x1, x1, #0x0
  4059ac:	bl	40749c <matches@@Base>
  4059b0:	tbnz	w0, #0, 405b34 <main@@Base+0x708>
  4059b4:	ldr	x1, [x20, #8]
  4059b8:	sub	x0, x29, #0x48
  4059bc:	mov	w2, wzr
  4059c0:	bl	4066f4 <get_u16@@Base>
  4059c4:	cbnz	w0, 405b58 <main@@Base+0x72c>
  4059c8:	add	x0, sp, #0x10
  4059cc:	sub	x3, x29, #0x48
  4059d0:	mov	w1, #0x80                  	// #128
  4059d4:	mov	w2, #0x1                   	// #1
  4059d8:	mov	w4, #0x2                   	// #2
  4059dc:	bl	40cba8 <addattr_l@@Base>
  4059e0:	mov	w8, wzr
  4059e4:	cbz	w8, 405a28 <main@@Base+0x5fc>
  4059e8:	cmp	w8, #0x6
  4059ec:	b.ne	405ab0 <main@@Base+0x684>  // b.any
  4059f0:	mov	w19, #0xffffffff            	// #-1
  4059f4:	b	405aa0 <main@@Base+0x674>
  4059f8:	ldr	x1, [x20, #8]
  4059fc:	sub	x0, x29, #0x48
  405a00:	mov	w2, #0x10                  	// #16
  405a04:	bl	4086c0 <strlcpy@@Base>
  405a08:	sub	x0, x29, #0x48
  405a0c:	bl	404dc0 <strlen@plt>
  405a10:	add	w4, w0, #0x1
  405a14:	add	x0, sp, #0x10
  405a18:	sub	x3, x29, #0x48
  405a1c:	mov	w1, #0x80                  	// #128
  405a20:	mov	w2, #0x2                   	// #2
  405a24:	bl	40cba8 <addattr_l@@Base>
  405a28:	sub	x0, x29, #0x38
  405a2c:	add	x1, sp, #0x10
  405a30:	add	x2, sp, #0x8
  405a34:	bl	40c200 <rtnl_talk@@Base>
  405a38:	tbnz	w0, #31, 405b04 <main@@Base+0x6d8>
  405a3c:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405a40:	ldr	x0, [sp, #8]
  405a44:	ldr	x1, [x8, #792]
  405a48:	bl	40588c <main@@Base+0x460>
  405a4c:	tbnz	w0, #31, 405b1c <main@@Base+0x6f0>
  405a50:	cbnz	w19, 405a9c <main@@Base+0x670>
  405a54:	ldur	w8, [x29, #-28]
  405a58:	ldr	w2, [sp, #16]
  405a5c:	mov	w9, #0x301                 	// #769
  405a60:	sub	x0, x29, #0x38
  405a64:	add	w8, w8, #0x1
  405a68:	add	x1, sp, #0x10
  405a6c:	strh	w9, [sp, #22]
  405a70:	stp	w8, w8, [x29, #-28]
  405a74:	str	w8, [sp, #24]
  405a78:	bl	40bce8 <rtnl_send@@Base>
  405a7c:	tbnz	w0, #31, 405acc <main@@Base+0x6a0>
  405a80:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405a84:	ldr	x2, [x8, #792]
  405a88:	adrp	x1, 405000 <realloc@plt>
  405a8c:	add	x1, x1, #0x88c
  405a90:	sub	x0, x29, #0x38
  405a94:	mov	w3, wzr
  405a98:	bl	40bf28 <rtnl_dump_filter_nc@@Base>
  405a9c:	mov	w19, wzr
  405aa0:	ldr	x0, [sp, #8]
  405aa4:	bl	405110 <free@plt>
  405aa8:	sub	x0, x29, #0x38
  405aac:	bl	40b3e0 <rtnl_close@@Base>
  405ab0:	mov	w0, w19
  405ab4:	add	sp, sp, #0x1, lsl #12
  405ab8:	add	sp, sp, #0x70
  405abc:	ldp	x20, x19, [sp, #32]
  405ac0:	ldp	x28, x21, [sp, #16]
  405ac4:	ldp	x29, x30, [sp], #48
  405ac8:	ret
  405acc:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  405ad0:	add	x0, x0, #0xa9b
  405ad4:	bl	404de0 <perror@plt>
  405ad8:	mov	w19, #0xffffffff            	// #-1
  405adc:	b	405aa0 <main@@Base+0x674>
  405ae0:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405ae4:	ldr	x3, [x8, #784]
  405ae8:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  405aec:	add	x0, x0, #0xa39
  405af0:	mov	w1, #0x17                  	// #23
  405af4:	mov	w2, #0x1                   	// #1
  405af8:	bl	405170 <fwrite@plt>
  405afc:	mov	w19, #0xffffffff            	// #-1
  405b00:	b	405ab0 <main@@Base+0x684>
  405b04:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405b08:	ldr	x3, [x8, #784]
  405b0c:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  405b10:	add	x0, x0, #0xa6d
  405b14:	mov	w1, #0x1c                  	// #28
  405b18:	b	405b48 <main@@Base+0x71c>
  405b1c:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405b20:	ldr	x3, [x8, #784]
  405b24:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  405b28:	add	x0, x0, #0xa8a
  405b2c:	mov	w1, #0x10                  	// #16
  405b30:	b	405b48 <main@@Base+0x71c>
  405b34:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405b38:	ldr	x3, [x8, #784]
  405b3c:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  405b40:	add	x0, x0, #0xa5f
  405b44:	mov	w1, #0xd                   	// #13
  405b48:	mov	w2, #0x1                   	// #1
  405b4c:	bl	405170 <fwrite@plt>
  405b50:	mov	w19, #0xffffffff            	// #-1
  405b54:	b	405aa0 <main@@Base+0x674>
  405b58:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405b5c:	ldr	x3, [x8, #784]
  405b60:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  405b64:	add	x0, x0, #0xa51
  405b68:	mov	w1, #0xd                   	// #13
  405b6c:	mov	w2, #0x1                   	// #1
  405b70:	bl	405170 <fwrite@plt>
  405b74:	mov	w8, #0x6                   	// #6
  405b78:	cbnz	w8, 4059e8 <main@@Base+0x5bc>
  405b7c:	b	405a28 <main@@Base+0x5fc>
  405b80:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405b84:	ldr	x3, [x8, #784]
  405b88:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  405b8c:	add	x0, x0, #0xa15
  405b90:	mov	w1, #0x23                  	// #35
  405b94:	mov	w2, #0x1                   	// #1
  405b98:	bl	405170 <fwrite@plt>
  405b9c:	mov	w0, #0x1                   	// #1
  405ba0:	bl	404dd0 <exit@plt>
  405ba4:	stp	x29, x30, [sp, #-16]!
  405ba8:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405bac:	ldr	x3, [x8, #784]
  405bb0:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  405bb4:	add	x0, x0, #0xab8
  405bb8:	mov	w1, #0x9f                  	// #159
  405bbc:	mov	w2, #0x1                   	// #1
  405bc0:	mov	x29, sp
  405bc4:	bl	405170 <fwrite@plt>
  405bc8:	ldp	x29, x30, [sp], #16
  405bcc:	ret
  405bd0:	stp	x29, x30, [sp, #-80]!
  405bd4:	str	x28, [sp, #16]
  405bd8:	stp	x24, x23, [sp, #32]
  405bdc:	stp	x22, x21, [sp, #48]
  405be0:	stp	x20, x19, [sp, #64]
  405be4:	mov	x29, sp
  405be8:	sub	sp, sp, #0x850
  405bec:	ldrh	w3, [x1, #4]
  405bf0:	ldr	w8, [x1]
  405bf4:	cmp	w3, #0x10
  405bf8:	b.ne	405e78 <main@@Base+0xa4c>  // b.any
  405bfc:	mov	x19, x2
  405c00:	ldrb	w2, [x1, #16]
  405c04:	cmp	w2, #0x8
  405c08:	b.hi	405e94 <main@@Base+0xa68>  // b.pmore
  405c0c:	mov	w9, #0x1                   	// #1
  405c10:	lsl	w9, w9, w2
  405c14:	mov	w10, #0x18e                 	// #398
  405c18:	tst	w9, w10
  405c1c:	b.eq	405e94 <main@@Base+0xa68>  // b.none
  405c20:	subs	w3, w8, #0x14
  405c24:	b.mi	405eac <main@@Base+0xa80>  // b.first
  405c28:	add	x2, x1, #0x14
  405c2c:	sub	x0, x29, #0x40
  405c30:	mov	w1, #0x7                   	// #7
  405c34:	bl	40d0d8 <parse_rtattr@@Base>
  405c38:	ldur	x8, [x29, #-48]
  405c3c:	cbz	x8, 405c54 <main@@Base+0x828>
  405c40:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405c44:	add	x2, x8, #0x4
  405c48:	add	x1, x1, #0x8f7
  405c4c:	mov	x0, x19
  405c50:	bl	4052e0 <fprintf@plt>
  405c54:	ldur	x8, [x29, #-56]
  405c58:	cbz	x8, 405c70 <main@@Base+0x844>
  405c5c:	ldrh	w2, [x8, #4]
  405c60:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405c64:	add	x1, x1, #0x902
  405c68:	mov	x0, x19
  405c6c:	bl	4052e0 <fprintf@plt>
  405c70:	ldur	x20, [x29, #-40]
  405c74:	cbz	x20, 405e68 <main@@Base+0xa3c>
  405c78:	ldr	w2, [x20, #4]
  405c7c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405c80:	add	x1, x1, #0x90d
  405c84:	mov	x0, x19
  405c88:	bl	4052e0 <fprintf@plt>
  405c8c:	ldr	w20, [x20, #4]
  405c90:	ldur	x8, [x29, #-32]
  405c94:	cbz	x8, 405cac <main@@Base+0x880>
  405c98:	ldr	w2, [x8, #4]
  405c9c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405ca0:	add	x1, x1, #0x91d
  405ca4:	mov	x0, x19
  405ca8:	bl	4052e0 <fprintf@plt>
  405cac:	ldur	x8, [x29, #-24]
  405cb0:	cbz	x8, 405cc8 <main@@Base+0x89c>
  405cb4:	ldr	w2, [x8, #4]
  405cb8:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405cbc:	add	x1, x1, #0x92f
  405cc0:	mov	x0, x19
  405cc4:	bl	4052e0 <fprintf@plt>
  405cc8:	mov	w0, #0xa                   	// #10
  405ccc:	mov	x1, x19
  405cd0:	bl	404ea0 <fputc@plt>
  405cd4:	ldur	x2, [x29, #-16]
  405cd8:	cbz	x2, 405d8c <main@@Base+0x960>
  405cdc:	ldrh	w8, [x2], #4
  405ce0:	add	x0, sp, #0x8
  405ce4:	mov	w1, #0x100                 	// #256
  405ce8:	add	x24, sp, #0x8
  405cec:	sub	w3, w8, #0x4
  405cf0:	bl	40d0d8 <parse_rtattr@@Base>
  405cf4:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  405cf8:	add	x0, x0, #0x941
  405cfc:	mov	w1, #0x16                  	// #22
  405d00:	mov	w2, #0x1                   	// #1
  405d04:	mov	x3, x19
  405d08:	bl	405170 <fwrite@plt>
  405d0c:	adrp	x22, 40d000 <rta_addattr8@@Base+0x4>
  405d10:	adrp	x23, 40d000 <rta_addattr8@@Base+0x4>
  405d14:	mov	x21, xzr
  405d18:	add	x22, x22, #0x958
  405d1c:	add	x23, x23, #0x960
  405d20:	b	405d3c <main@@Base+0x910>
  405d24:	mov	w0, #0xa                   	// #10
  405d28:	mov	x1, x19
  405d2c:	bl	404ea0 <fputc@plt>
  405d30:	add	x21, x21, #0x1
  405d34:	cmp	x21, #0x100
  405d38:	b.eq	405d80 <main@@Base+0x954>  // b.none
  405d3c:	ldr	x8, [x24, x21, lsl #3]
  405d40:	cbz	x8, 405d30 <main@@Base+0x904>
  405d44:	mov	x0, x19
  405d48:	mov	x1, x22
  405d4c:	mov	w2, w21
  405d50:	bl	4052e0 <fprintf@plt>
  405d54:	ldr	x1, [x24, x21, lsl #3]
  405d58:	mov	x0, x19
  405d5c:	mov	w2, w20
  405d60:	bl	405ecc <main@@Base+0xaa0>
  405d64:	tbz	w0, #31, 405d24 <main@@Base+0x8f8>
  405d68:	mov	w1, #0x17                  	// #23
  405d6c:	mov	w2, #0x1                   	// #1
  405d70:	mov	x0, x23
  405d74:	mov	x3, x19
  405d78:	bl	405170 <fwrite@plt>
  405d7c:	b	405d24 <main@@Base+0x8f8>
  405d80:	mov	w0, #0xa                   	// #10
  405d84:	mov	x1, x19
  405d88:	bl	404ea0 <fputc@plt>
  405d8c:	ldur	x2, [x29, #-8]
  405d90:	cbz	x2, 405e40 <main@@Base+0xa14>
  405d94:	ldrh	w8, [x2], #4
  405d98:	add	x0, sp, #0x8
  405d9c:	mov	w1, #0x100                 	// #256
  405da0:	add	x23, sp, #0x8
  405da4:	sub	w3, w8, #0x4
  405da8:	bl	40d0d8 <parse_rtattr@@Base>
  405dac:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  405db0:	add	x0, x0, #0x978
  405db4:	mov	w1, #0x13                  	// #19
  405db8:	mov	w2, #0x1                   	// #1
  405dbc:	mov	x3, x19
  405dc0:	bl	405170 <fwrite@plt>
  405dc4:	adrp	x21, 40d000 <rta_addattr8@@Base+0x4>
  405dc8:	adrp	x22, 40d000 <rta_addattr8@@Base+0x4>
  405dcc:	mov	x20, xzr
  405dd0:	add	x21, x21, #0x958
  405dd4:	add	x22, x22, #0x98c
  405dd8:	b	405df4 <main@@Base+0x9c8>
  405ddc:	mov	w0, #0xa                   	// #10
  405de0:	mov	x1, x19
  405de4:	bl	404ea0 <fputc@plt>
  405de8:	add	x20, x20, #0x1
  405dec:	cmp	x20, #0x100
  405df0:	b.eq	405e34 <main@@Base+0xa08>  // b.none
  405df4:	ldr	x8, [x23, x20, lsl #3]
  405df8:	cbz	x8, 405de8 <main@@Base+0x9bc>
  405dfc:	mov	x0, x19
  405e00:	mov	x1, x21
  405e04:	mov	w2, w20
  405e08:	bl	4052e0 <fprintf@plt>
  405e0c:	ldr	x1, [x23, x20, lsl #3]
  405e10:	mov	x0, x19
  405e14:	bl	405f58 <main@@Base+0xb2c>
  405e18:	tbz	w0, #31, 405ddc <main@@Base+0x9b0>
  405e1c:	mov	w1, #0x15                  	// #21
  405e20:	mov	w2, #0x1                   	// #1
  405e24:	mov	x0, x22
  405e28:	mov	x3, x19
  405e2c:	bl	405170 <fwrite@plt>
  405e30:	b	405ddc <main@@Base+0x9b0>
  405e34:	mov	w0, #0xa                   	// #10
  405e38:	mov	x1, x19
  405e3c:	bl	404ea0 <fputc@plt>
  405e40:	mov	x0, x19
  405e44:	bl	405190 <fflush@plt>
  405e48:	mov	w0, wzr
  405e4c:	add	sp, sp, #0x850
  405e50:	ldp	x20, x19, [sp, #64]
  405e54:	ldp	x22, x21, [sp, #48]
  405e58:	ldp	x24, x23, [sp, #32]
  405e5c:	ldr	x28, [sp, #16]
  405e60:	ldp	x29, x30, [sp], #80
  405e64:	ret
  405e68:	mov	w20, #0x1                   	// #1
  405e6c:	ldur	x8, [x29, #-32]
  405e70:	cbnz	x8, 405c98 <main@@Base+0x86c>
  405e74:	b	405cac <main@@Base+0x880>
  405e78:	adrp	x9, 41f000 <memcpy@GLIBC_2.17>
  405e7c:	ldr	x0, [x9, #784]
  405e80:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405e84:	add	x1, x1, #0x87f
  405e88:	mov	w2, w8
  405e8c:	bl	4052e0 <fprintf@plt>
  405e90:	b	405e48 <main@@Base+0xa1c>
  405e94:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405e98:	ldr	x0, [x8, #784]
  405e9c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405ea0:	add	x1, x1, #0x8b7
  405ea4:	bl	4052e0 <fprintf@plt>
  405ea8:	b	405e48 <main@@Base+0xa1c>
  405eac:	adrp	x8, 41f000 <memcpy@GLIBC_2.17>
  405eb0:	ldr	x0, [x8, #784]
  405eb4:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405eb8:	add	x1, x1, #0x8d6
  405ebc:	mov	w2, w3
  405ec0:	bl	4052e0 <fprintf@plt>
  405ec4:	mov	w0, #0xffffffff            	// #-1
  405ec8:	b	405e4c <main@@Base+0xa20>
  405ecc:	sub	sp, sp, #0x40
  405ed0:	stp	x29, x30, [sp, #32]
  405ed4:	stp	x20, x19, [sp, #48]
  405ed8:	add	x29, sp, #0x20
  405edc:	cbz	x1, 405f44 <main@@Base+0xb18>
  405ee0:	mov	w20, w2
  405ee4:	mov	x2, x1
  405ee8:	ldrh	w8, [x2], #4
  405eec:	mov	x19, x0
  405ef0:	add	x0, sp, #0x8
  405ef4:	mov	w1, #0x2                   	// #2
  405ef8:	sub	w3, w8, #0x4
  405efc:	bl	40d0d8 <parse_rtattr@@Base>
  405f00:	ldr	x8, [sp, #16]
  405f04:	cbz	x8, 405f1c <main@@Base+0xaf0>
  405f08:	ldr	w2, [x8, #4]
  405f0c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405f10:	add	x1, x1, #0x9a2
  405f14:	mov	x0, x19
  405f18:	bl	4052e0 <fprintf@plt>
  405f1c:	cmp	w20, #0x2
  405f20:	mov	w0, wzr
  405f24:	b.cc	405f48 <main@@Base+0xb1c>  // b.lo, b.ul, b.last
  405f28:	ldr	x8, [sp, #24]
  405f2c:	cbz	x8, 405f48 <main@@Base+0xb1c>
  405f30:	ldr	w1, [x8, #4]
  405f34:	mov	x0, x19
  405f38:	bl	405fdc <main@@Base+0xbb0>
  405f3c:	mov	w0, wzr
  405f40:	b	405f48 <main@@Base+0xb1c>
  405f44:	mov	w0, #0xffffffff            	// #-1
  405f48:	ldp	x20, x19, [sp, #48]
  405f4c:	ldp	x29, x30, [sp, #32]
  405f50:	add	sp, sp, #0x40
  405f54:	ret
  405f58:	sub	sp, sp, #0x40
  405f5c:	stp	x29, x30, [sp, #32]
  405f60:	str	x19, [sp, #48]
  405f64:	add	x29, sp, #0x20
  405f68:	cbz	x1, 405fc8 <main@@Base+0xb9c>
  405f6c:	mov	x2, x1
  405f70:	ldrh	w8, [x2], #4
  405f74:	mov	x19, x0
  405f78:	add	x0, sp, #0x8
  405f7c:	mov	w1, #0x2                   	// #2
  405f80:	sub	w3, w8, #0x4
  405f84:	bl	40d0d8 <parse_rtattr@@Base>
  405f88:	ldr	x8, [sp, #24]
  405f8c:	cbz	x8, 405fa4 <main@@Base+0xb78>
  405f90:	ldr	w2, [x8, #4]
  405f94:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405f98:	add	x1, x1, #0x9a2
  405f9c:	mov	x0, x19
  405fa0:	bl	4052e0 <fprintf@plt>
  405fa4:	ldr	x8, [sp, #16]
  405fa8:	cbz	x8, 405fc0 <main@@Base+0xb94>
  405fac:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405fb0:	add	x2, x8, #0x4
  405fb4:	add	x1, x1, #0xa0a
  405fb8:	mov	x0, x19
  405fbc:	bl	4052e0 <fprintf@plt>
  405fc0:	mov	w0, wzr
  405fc4:	b	405fcc <main@@Base+0xba0>
  405fc8:	mov	w0, #0xffffffff            	// #-1
  405fcc:	ldr	x19, [sp, #48]
  405fd0:	ldp	x29, x30, [sp, #32]
  405fd4:	add	sp, sp, #0x40
  405fd8:	ret
  405fdc:	stp	x29, x30, [sp, #-32]!
  405fe0:	stp	x20, x19, [sp, #16]
  405fe4:	mov	w20, w1
  405fe8:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  405fec:	add	x1, x1, #0x9ac
  405ff0:	mov	w2, w20
  405ff4:	mov	x29, sp
  405ff8:	mov	x19, x0
  405ffc:	bl	4052e0 <fprintf@plt>
  406000:	cbz	w20, 406044 <main@@Base+0xc18>
  406004:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  406008:	add	x0, x0, #0x9c6
  40600c:	mov	w1, #0x3                   	// #3
  406010:	mov	w2, #0x1                   	// #1
  406014:	mov	x3, x19
  406018:	bl	405170 <fwrite@plt>
  40601c:	tbnz	w20, #0, 40605c <main@@Base+0xc30>
  406020:	tbnz	w20, #1, 406078 <main@@Base+0xc4c>
  406024:	tbnz	w20, #2, 406094 <main@@Base+0xc68>
  406028:	tbz	w20, #3, 406044 <main@@Base+0xc18>
  40602c:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  406030:	add	x0, x0, #0x9fe
  406034:	mov	w1, #0xb                   	// #11
  406038:	mov	w2, #0x1                   	// #1
  40603c:	mov	x3, x19
  406040:	bl	405170 <fwrite@plt>
  406044:	mov	w0, #0xa                   	// #10
  406048:	mov	x1, x19
  40604c:	bl	404ea0 <fputc@plt>
  406050:	ldp	x20, x19, [sp, #16]
  406054:	ldp	x29, x30, [sp], #32
  406058:	ret
  40605c:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  406060:	add	x0, x0, #0x9ca
  406064:	mov	w1, #0x1b                  	// #27
  406068:	mov	w2, #0x1                   	// #1
  40606c:	mov	x3, x19
  406070:	bl	405170 <fwrite@plt>
  406074:	tbz	w20, #1, 406024 <main@@Base+0xbf8>
  406078:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  40607c:	add	x0, x0, #0x9e6
  406080:	mov	w1, #0xa                   	// #10
  406084:	mov	w2, #0x1                   	// #1
  406088:	mov	x3, x19
  40608c:	bl	405170 <fwrite@plt>
  406090:	tbz	w20, #2, 406028 <main@@Base+0xbfc>
  406094:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  406098:	add	x0, x0, #0x9f1
  40609c:	mov	w1, #0xc                   	// #12
  4060a0:	mov	w2, #0x1                   	// #1
  4060a4:	mov	x3, x19
  4060a8:	bl	405170 <fwrite@plt>
  4060ac:	tbnz	w20, #3, 40602c <main@@Base+0xc00>
  4060b0:	b	406044 <main@@Base+0xc18>

00000000004060b4 <read_prop@@Base>:
  4060b4:	sub	sp, sp, #0x110
  4060b8:	stp	x20, x19, [sp, #256]
  4060bc:	mov	x19, x2
  4060c0:	mov	x20, x1
  4060c4:	adrp	x2, 40d000 <rta_addattr8@@Base+0x4>
  4060c8:	mov	x3, x0
  4060cc:	add	x2, x2, #0xbb6
  4060d0:	add	x0, sp, #0x60
  4060d4:	mov	w1, #0x80                  	// #128
  4060d8:	mov	x4, x20
  4060dc:	stp	x29, x30, [sp, #224]
  4060e0:	stp	x28, x21, [sp, #240]
  4060e4:	add	x29, sp, #0xe0
  4060e8:	bl	404ec0 <snprintf@plt>
  4060ec:	cmp	w0, #0x1
  4060f0:	b.lt	40619c <read_prop@@Base+0xe8>  // b.tstop
  4060f4:	cmp	w0, #0x80
  4060f8:	b.cs	40619c <read_prop@@Base+0xe8>  // b.hs, b.nlast
  4060fc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  406100:	add	x1, x1, #0x213
  406104:	add	x0, sp, #0x60
  406108:	bl	4051b0 <fopen64@plt>
  40610c:	cbz	x0, 4061c0 <read_prop@@Base+0x10c>
  406110:	mov	x21, x0
  406114:	add	x0, sp, #0x10
  406118:	mov	w1, #0x50                  	// #80
  40611c:	mov	x2, x21
  406120:	bl	4052f0 <fgets@plt>
  406124:	cbz	x0, 4061f4 <read_prop@@Base+0x140>
  406128:	add	x0, sp, #0x10
  40612c:	mov	w1, #0xa                   	// #10
  406130:	add	x20, sp, #0x10
  406134:	bl	405150 <strchr@plt>
  406138:	cbz	x0, 406140 <read_prop@@Base+0x8c>
  40613c:	strb	wzr, [x0]
  406140:	mov	x0, x21
  406144:	bl	404ef0 <fclose@plt>
  406148:	add	x0, sp, #0x10
  40614c:	add	x1, sp, #0x8
  406150:	mov	w2, wzr
  406154:	bl	4050c0 <strtol@plt>
  406158:	ldr	x8, [sp, #8]
  40615c:	cmp	x20, x8
  406160:	b.eq	406220 <read_prop@@Base+0x16c>  // b.none
  406164:	ldrb	w8, [x8]
  406168:	cbnz	w8, 406220 <read_prop@@Base+0x16c>
  40616c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
  406170:	add	x8, x0, x8
  406174:	mov	x20, x0
  406178:	cmp	x8, #0x1
  40617c:	b.hi	406190 <read_prop@@Base+0xdc>  // b.pmore
  406180:	bl	4052a0 <__errno_location@plt>
  406184:	ldr	w8, [x0]
  406188:	cmp	w8, #0x22
  40618c:	b.eq	406240 <read_prop@@Base+0x18c>  // b.none
  406190:	mov	w0, wzr
  406194:	str	x20, [x19]
  406198:	b	40628c <read_prop@@Base+0x1d8>
  40619c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  4061a0:	ldr	x8, [x8, #3992]
  4061a4:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  4061a8:	add	x0, x0, #0xbcb
  4061ac:	mov	w1, #0x26                  	// #38
  4061b0:	ldr	x3, [x8]
  4061b4:	mov	w2, #0x1                   	// #1
  4061b8:	bl	405170 <fwrite@plt>
  4061bc:	b	406288 <read_prop@@Base+0x1d4>
  4061c0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  4061c4:	ldr	x8, [x8, #3992]
  4061c8:	ldr	x19, [x8]
  4061cc:	bl	4052a0 <__errno_location@plt>
  4061d0:	ldr	w0, [x0]
  4061d4:	bl	405030 <strerror@plt>
  4061d8:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  4061dc:	mov	x3, x0
  4061e0:	add	x1, x1, #0xbf2
  4061e4:	add	x2, sp, #0x60
  4061e8:	mov	x0, x19
  4061ec:	bl	4052e0 <fprintf@plt>
  4061f0:	b	406288 <read_prop@@Base+0x1d4>
  4061f4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  4061f8:	ldr	x8, [x8, #3992]
  4061fc:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  406200:	add	x1, x1, #0xc00
  406204:	add	x3, sp, #0x60
  406208:	ldr	x0, [x8]
  40620c:	mov	x2, x20
  406210:	bl	4052e0 <fprintf@plt>
  406214:	mov	x0, x21
  406218:	bl	404ef0 <fclose@plt>
  40621c:	b	40626c <read_prop@@Base+0x1b8>
  406220:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  406224:	ldr	x8, [x8, #3992]
  406228:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  40622c:	add	x1, x1, #0xc2f
  406230:	add	x2, sp, #0x10
  406234:	ldr	x0, [x8]
  406238:	add	x3, sp, #0x60
  40623c:	b	406268 <read_prop@@Base+0x1b4>
  406240:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  406244:	ldr	x8, [x8, #3992]
  406248:	mov	w0, #0x22                  	// #34
  40624c:	ldr	x19, [x8]
  406250:	bl	405030 <strerror@plt>
  406254:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  406258:	mov	x3, x0
  40625c:	add	x1, x1, #0xc56
  406260:	add	x2, sp, #0x60
  406264:	mov	x0, x19
  406268:	bl	4052e0 <fprintf@plt>
  40626c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  406270:	ldr	x8, [x8, #3992]
  406274:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  406278:	add	x1, x1, #0xc64
  40627c:	add	x2, sp, #0x60
  406280:	ldr	x0, [x8]
  406284:	bl	4052e0 <fprintf@plt>
  406288:	mov	w0, #0xffffffff            	// #-1
  40628c:	ldp	x20, x19, [sp, #256]
  406290:	ldp	x28, x21, [sp, #240]
  406294:	ldp	x29, x30, [sp, #224]
  406298:	add	sp, sp, #0x110
  40629c:	ret

00000000004062a0 <get_hex@@Base>:
  4062a0:	sub	w8, w0, #0x41
  4062a4:	and	w8, w8, #0xff
  4062a8:	cmp	w8, #0x6
  4062ac:	and	w8, w0, #0xff
  4062b0:	b.cs	4062c0 <get_hex@@Base+0x20>  // b.hs, b.nlast
  4062b4:	mov	w9, #0xffffffc9            	// #-55
  4062b8:	add	w0, w9, w8
  4062bc:	ret
  4062c0:	sub	w9, w0, #0x61
  4062c4:	and	w9, w9, #0xff
  4062c8:	cmp	w9, #0x6
  4062cc:	b.cs	4062dc <get_hex@@Base+0x3c>  // b.hs, b.nlast
  4062d0:	mov	w9, #0xffffffa9            	// #-87
  4062d4:	add	w0, w9, w8
  4062d8:	ret
  4062dc:	sub	w9, w0, #0x30
  4062e0:	and	w9, w9, #0xff
  4062e4:	sub	w8, w8, #0x30
  4062e8:	cmp	w9, #0xa
  4062ec:	csinv	w0, w8, wzr, cc  // cc = lo, ul, last
  4062f0:	ret

00000000004062f4 <get_integer@@Base>:
  4062f4:	stp	x29, x30, [sp, #-48]!
  4062f8:	str	x21, [sp, #16]
  4062fc:	stp	x20, x19, [sp, #32]
  406300:	mov	x29, sp
  406304:	cbz	x1, 406344 <get_integer@@Base+0x50>
  406308:	ldrb	w8, [x1]
  40630c:	mov	x21, x1
  406310:	cbz	w8, 406344 <get_integer@@Base+0x50>
  406314:	mov	x19, x0
  406318:	add	x1, x29, #0x18
  40631c:	mov	x0, x21
  406320:	bl	4050c0 <strtol@plt>
  406324:	ldr	x8, [x29, #24]
  406328:	mov	x20, x0
  40632c:	mov	w0, #0xffffffff            	// #-1
  406330:	cbz	x8, 406348 <get_integer@@Base+0x54>
  406334:	cmp	x8, x21
  406338:	b.eq	406348 <get_integer@@Base+0x54>  // b.none
  40633c:	ldrb	w8, [x8]
  406340:	cbz	w8, 406358 <get_integer@@Base+0x64>
  406344:	mov	w0, #0xffffffff            	// #-1
  406348:	ldp	x20, x19, [sp, #32]
  40634c:	ldr	x21, [sp, #16]
  406350:	ldp	x29, x30, [sp], #48
  406354:	ret
  406358:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
  40635c:	add	x8, x20, x8
  406360:	cmp	x8, #0x1
  406364:	b.hi	406378 <get_integer@@Base+0x84>  // b.pmore
  406368:	bl	4052a0 <__errno_location@plt>
  40636c:	ldr	w8, [x0]
  406370:	cmp	w8, #0x22
  406374:	b.eq	406344 <get_integer@@Base+0x50>  // b.none
  406378:	cmp	x20, w20, sxtw
  40637c:	b.ne	406344 <get_integer@@Base+0x50>  // b.any
  406380:	mov	w0, wzr
  406384:	str	w20, [x19]
  406388:	b	406348 <get_integer@@Base+0x54>

000000000040638c <mask2bits@@Base>:
  40638c:	stp	x29, x30, [sp, #-16]!
  406390:	mov	x29, sp
  406394:	bl	4063cc <mask2bits@@Base+0x40>
  406398:	neg	w8, w0
  40639c:	bics	wzr, w8, w0
  4063a0:	b.eq	4063b0 <mask2bits@@Base+0x24>  // b.none
  4063a4:	mov	w0, #0xffffffff            	// #-1
  4063a8:	ldp	x29, x30, [sp], #16
  4063ac:	ret
  4063b0:	cbz	w0, 4063c4 <mask2bits@@Base+0x38>
  4063b4:	rbit	w8, w0
  4063b8:	clz	w8, w8
  4063bc:	mov	w9, #0x20                  	// #32
  4063c0:	sub	w0, w9, w8
  4063c4:	ldp	x29, x30, [sp], #16
  4063c8:	ret
  4063cc:	rev	w0, w0
  4063d0:	ret

00000000004063d4 <get_unsigned@@Base>:
  4063d4:	sub	sp, sp, #0x30
  4063d8:	stp	x29, x30, [sp, #16]
  4063dc:	stp	x20, x19, [sp, #32]
  4063e0:	add	x29, sp, #0x10
  4063e4:	cbz	x1, 40643c <get_unsigned@@Base+0x68>
  4063e8:	ldrb	w8, [x1]
  4063ec:	mov	x20, x1
  4063f0:	cbz	w8, 40643c <get_unsigned@@Base+0x68>
  4063f4:	mov	x19, x0
  4063f8:	add	x1, sp, #0x8
  4063fc:	mov	x0, x20
  406400:	bl	404db0 <strtoul@plt>
  406404:	ldr	x9, [sp, #8]
  406408:	mov	x8, x0
  40640c:	mov	w0, #0xffffffff            	// #-1
  406410:	cbz	x9, 406440 <get_unsigned@@Base+0x6c>
  406414:	cmp	x9, x20
  406418:	b.eq	406440 <get_unsigned@@Base+0x6c>  // b.none
  40641c:	ldrb	w9, [x9]
  406420:	mov	w0, #0xffffffff            	// #-1
  406424:	cbnz	w9, 406440 <get_unsigned@@Base+0x6c>
  406428:	lsr	x9, x8, #32
  40642c:	cbnz	x9, 406440 <get_unsigned@@Base+0x6c>
  406430:	mov	w0, wzr
  406434:	str	w8, [x19]
  406438:	b	406440 <get_unsigned@@Base+0x6c>
  40643c:	mov	w0, #0xffffffff            	// #-1
  406440:	ldp	x20, x19, [sp, #32]
  406444:	ldp	x29, x30, [sp, #16]
  406448:	add	sp, sp, #0x30
  40644c:	ret

0000000000406450 <get_time_rtt@@Base>:
  406450:	str	d8, [sp, #-64]!
  406454:	stp	x22, x21, [sp, #32]
  406458:	mov	x21, x1
  40645c:	stp	x20, x19, [sp, #48]
  406460:	mov	x19, x0
  406464:	mov	w1, #0x2e                  	// #46
  406468:	mov	x0, x21
  40646c:	stp	x29, x30, [sp, #16]
  406470:	mov	x29, sp
  406474:	mov	x20, x2
  406478:	bl	405150 <strchr@plt>
  40647c:	add	x1, x29, #0x8
  406480:	cbz	x0, 4064d0 <get_time_rtt@@Base+0x80>
  406484:	mov	x0, x21
  406488:	bl	404e10 <strtod@plt>
  40648c:	fcmp	d0, #0.0
  406490:	b.mi	4065a8 <get_time_rtt@@Base+0x158>  // b.first
  406494:	ldr	x8, [x29, #8]
  406498:	mov	w0, #0xffffffff            	// #-1
  40649c:	cbz	x8, 4065dc <get_time_rtt@@Base+0x18c>
  4064a0:	cmp	x8, x21
  4064a4:	b.eq	4065dc <get_time_rtt@@Base+0x18c>  // b.none
  4064a8:	mov	x8, #0x7ff0000000000000    	// #9218868437227405312
  4064ac:	mov	v8.16b, v0.16b
  4064b0:	fmov	d0, x8
  4064b4:	fcmp	d8, d0
  4064b8:	b.ne	406510 <get_time_rtt@@Base+0xc0>  // b.any
  4064bc:	bl	4052a0 <__errno_location@plt>
  4064c0:	ldr	w8, [x0]
  4064c4:	cmp	w8, #0x22
  4064c8:	b.ne	406510 <get_time_rtt@@Base+0xc0>  // b.any
  4064cc:	b	4065a8 <get_time_rtt@@Base+0x158>
  4064d0:	mov	x0, x21
  4064d4:	mov	w2, wzr
  4064d8:	bl	404db0 <strtoul@plt>
  4064dc:	ldr	x8, [x29, #8]
  4064e0:	mov	x22, x0
  4064e4:	mov	w0, #0xffffffff            	// #-1
  4064e8:	cbz	x8, 4065dc <get_time_rtt@@Base+0x18c>
  4064ec:	cmp	x8, x21
  4064f0:	b.eq	4065dc <get_time_rtt@@Base+0x18c>  // b.none
  4064f4:	cmn	x22, #0x1
  4064f8:	b.ne	40650c <get_time_rtt@@Base+0xbc>  // b.any
  4064fc:	bl	4052a0 <__errno_location@plt>
  406500:	ldr	w8, [x0]
  406504:	cmp	w8, #0x22
  406508:	b.eq	4065a8 <get_time_rtt@@Base+0x158>  // b.none
  40650c:	ucvtf	d8, x22
  406510:	ldr	x22, [x29, #8]
  406514:	cmp	x22, x21
  406518:	b.eq	4065a8 <get_time_rtt@@Base+0x158>  // b.none
  40651c:	mov	w8, #0x1                   	// #1
  406520:	str	w8, [x20]
  406524:	ldrb	w8, [x22]
  406528:	cbz	w8, 4065c0 <get_time_rtt@@Base+0x170>
  40652c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  406530:	add	x1, x1, #0xc62
  406534:	mov	x0, x22
  406538:	str	wzr, [x20]
  40653c:	bl	404ff0 <strcasecmp@plt>
  406540:	cbz	w0, 4065b0 <get_time_rtt@@Base+0x160>
  406544:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  406548:	add	x1, x1, #0xc79
  40654c:	mov	x0, x22
  406550:	bl	404ff0 <strcasecmp@plt>
  406554:	cbz	w0, 4065b0 <get_time_rtt@@Base+0x160>
  406558:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  40655c:	add	x1, x1, #0xc7e
  406560:	mov	x0, x22
  406564:	bl	404ff0 <strcasecmp@plt>
  406568:	cbz	w0, 4065b0 <get_time_rtt@@Base+0x160>
  40656c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  406570:	add	x1, x1, #0xd
  406574:	mov	x0, x22
  406578:	bl	404ff0 <strcasecmp@plt>
  40657c:	cbz	w0, 4065c0 <get_time_rtt@@Base+0x170>
  406580:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  406584:	add	x1, x1, #0xc78
  406588:	mov	x0, x22
  40658c:	bl	404ff0 <strcasecmp@plt>
  406590:	cbz	w0, 4065c0 <get_time_rtt@@Base+0x170>
  406594:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  406598:	add	x1, x1, #0xc7d
  40659c:	mov	x0, x22
  4065a0:	bl	404ff0 <strcasecmp@plt>
  4065a4:	cbz	w0, 4065c0 <get_time_rtt@@Base+0x170>
  4065a8:	mov	w0, #0xffffffff            	// #-1
  4065ac:	b	4065dc <get_time_rtt@@Base+0x18c>
  4065b0:	mov	x8, #0x400000000000        	// #70368744177664
  4065b4:	movk	x8, #0x408f, lsl #48
  4065b8:	fmov	d0, x8
  4065bc:	fmul	d8, d8, d0
  4065c0:	fcvtzu	w8, d8
  4065c4:	ucvtf	d0, w8
  4065c8:	fcmp	d8, d0
  4065cc:	cset	w9, gt
  4065d0:	add	w8, w9, w8
  4065d4:	mov	w0, wzr
  4065d8:	str	w8, [x19]
  4065dc:	ldp	x20, x19, [sp, #48]
  4065e0:	ldp	x22, x21, [sp, #32]
  4065e4:	ldp	x29, x30, [sp, #16]
  4065e8:	ldr	d8, [sp], #64
  4065ec:	ret

00000000004065f0 <get_u64@@Base>:
  4065f0:	stp	x29, x30, [sp, #-48]!
  4065f4:	str	x21, [sp, #16]
  4065f8:	stp	x20, x19, [sp, #32]
  4065fc:	mov	x29, sp
  406600:	cbz	x1, 406640 <get_u64@@Base+0x50>
  406604:	ldrb	w8, [x1]
  406608:	mov	x21, x1
  40660c:	cbz	w8, 406640 <get_u64@@Base+0x50>
  406610:	mov	x19, x0
  406614:	add	x1, x29, #0x18
  406618:	mov	x0, x21
  40661c:	bl	405160 <strtoull@plt>
  406620:	ldr	x8, [x29, #24]
  406624:	mov	x20, x0
  406628:	mov	w0, #0xffffffff            	// #-1
  40662c:	cbz	x8, 406644 <get_u64@@Base+0x54>
  406630:	cmp	x8, x21
  406634:	b.eq	406644 <get_u64@@Base+0x54>  // b.none
  406638:	ldrb	w8, [x8]
  40663c:	cbz	w8, 406654 <get_u64@@Base+0x64>
  406640:	mov	w0, #0xffffffff            	// #-1
  406644:	ldp	x20, x19, [sp, #32]
  406648:	ldr	x21, [sp, #16]
  40664c:	ldp	x29, x30, [sp], #48
  406650:	ret
  406654:	cmn	x20, #0x1
  406658:	b.ne	40666c <get_u64@@Base+0x7c>  // b.any
  40665c:	bl	4052a0 <__errno_location@plt>
  406660:	ldr	w8, [x0]
  406664:	cmp	w8, #0x22
  406668:	b.eq	406640 <get_u64@@Base+0x50>  // b.none
  40666c:	mov	w0, wzr
  406670:	str	x20, [x19]
  406674:	b	406644 <get_u64@@Base+0x54>

0000000000406678 <get_u32@@Base>:
  406678:	sub	sp, sp, #0x30
  40667c:	stp	x29, x30, [sp, #16]
  406680:	stp	x20, x19, [sp, #32]
  406684:	add	x29, sp, #0x10
  406688:	cbz	x1, 4066e0 <get_u32@@Base+0x68>
  40668c:	ldrb	w8, [x1]
  406690:	mov	x20, x1
  406694:	cbz	w8, 4066e0 <get_u32@@Base+0x68>
  406698:	mov	x19, x0
  40669c:	add	x1, sp, #0x8
  4066a0:	mov	x0, x20
  4066a4:	bl	404db0 <strtoul@plt>
  4066a8:	ldr	x9, [sp, #8]
  4066ac:	mov	x8, x0
  4066b0:	mov	w0, #0xffffffff            	// #-1
  4066b4:	cbz	x9, 4066e4 <get_u32@@Base+0x6c>
  4066b8:	cmp	x9, x20
  4066bc:	b.eq	4066e4 <get_u32@@Base+0x6c>  // b.none
  4066c0:	ldrb	w9, [x9]
  4066c4:	mov	w0, #0xffffffff            	// #-1
  4066c8:	cbnz	w9, 4066e4 <get_u32@@Base+0x6c>
  4066cc:	lsr	x9, x8, #32
  4066d0:	cbnz	x9, 4066e4 <get_u32@@Base+0x6c>
  4066d4:	mov	w0, wzr
  4066d8:	str	w8, [x19]
  4066dc:	b	4066e4 <get_u32@@Base+0x6c>
  4066e0:	mov	w0, #0xffffffff            	// #-1
  4066e4:	ldp	x20, x19, [sp, #32]
  4066e8:	ldp	x29, x30, [sp, #16]
  4066ec:	add	sp, sp, #0x30
  4066f0:	ret

00000000004066f4 <get_u16@@Base>:
  4066f4:	sub	sp, sp, #0x30
  4066f8:	stp	x29, x30, [sp, #16]
  4066fc:	stp	x20, x19, [sp, #32]
  406700:	add	x29, sp, #0x10
  406704:	cbz	x1, 40675c <get_u16@@Base+0x68>
  406708:	ldrb	w8, [x1]
  40670c:	mov	x20, x1
  406710:	cbz	w8, 40675c <get_u16@@Base+0x68>
  406714:	mov	x19, x0
  406718:	add	x1, sp, #0x8
  40671c:	mov	x0, x20
  406720:	bl	404db0 <strtoul@plt>
  406724:	ldr	x9, [sp, #8]
  406728:	mov	x8, x0
  40672c:	mov	w0, #0xffffffff            	// #-1
  406730:	cbz	x9, 406760 <get_u16@@Base+0x6c>
  406734:	cmp	x9, x20
  406738:	b.eq	406760 <get_u16@@Base+0x6c>  // b.none
  40673c:	ldrb	w9, [x9]
  406740:	mov	w0, #0xffffffff            	// #-1
  406744:	cbnz	w9, 406760 <get_u16@@Base+0x6c>
  406748:	lsr	x9, x8, #16
  40674c:	cbnz	x9, 406760 <get_u16@@Base+0x6c>
  406750:	mov	w0, wzr
  406754:	strh	w8, [x19]
  406758:	b	406760 <get_u16@@Base+0x6c>
  40675c:	mov	w0, #0xffffffff            	// #-1
  406760:	ldp	x20, x19, [sp, #32]
  406764:	ldp	x29, x30, [sp, #16]
  406768:	add	sp, sp, #0x30
  40676c:	ret

0000000000406770 <get_u8@@Base>:
  406770:	sub	sp, sp, #0x30
  406774:	stp	x29, x30, [sp, #16]
  406778:	stp	x20, x19, [sp, #32]
  40677c:	add	x29, sp, #0x10
  406780:	cbz	x1, 4067d8 <get_u8@@Base+0x68>
  406784:	ldrb	w8, [x1]
  406788:	mov	x20, x1
  40678c:	cbz	w8, 4067d8 <get_u8@@Base+0x68>
  406790:	mov	x19, x0
  406794:	add	x1, sp, #0x8
  406798:	mov	x0, x20
  40679c:	bl	404db0 <strtoul@plt>
  4067a0:	ldr	x9, [sp, #8]
  4067a4:	mov	x8, x0
  4067a8:	mov	w0, #0xffffffff            	// #-1
  4067ac:	cbz	x9, 4067dc <get_u8@@Base+0x6c>
  4067b0:	cmp	x9, x20
  4067b4:	b.eq	4067dc <get_u8@@Base+0x6c>  // b.none
  4067b8:	ldrb	w9, [x9]
  4067bc:	mov	w0, #0xffffffff            	// #-1
  4067c0:	cbnz	w9, 4067dc <get_u8@@Base+0x6c>
  4067c4:	cmp	x8, #0xff
  4067c8:	b.hi	4067dc <get_u8@@Base+0x6c>  // b.pmore
  4067cc:	mov	w0, wzr
  4067d0:	strb	w8, [x19]
  4067d4:	b	4067dc <get_u8@@Base+0x6c>
  4067d8:	mov	w0, #0xffffffff            	// #-1
  4067dc:	ldp	x20, x19, [sp, #32]
  4067e0:	ldp	x29, x30, [sp, #16]
  4067e4:	add	sp, sp, #0x30
  4067e8:	ret

00000000004067ec <get_s64@@Base>:
  4067ec:	sub	sp, sp, #0x40
  4067f0:	stp	x29, x30, [sp, #16]
  4067f4:	stp	x22, x21, [sp, #32]
  4067f8:	stp	x20, x19, [sp, #48]
  4067fc:	add	x29, sp, #0x10
  406800:	mov	w22, w2
  406804:	mov	x21, x1
  406808:	mov	x19, x0
  40680c:	bl	4052a0 <__errno_location@plt>
  406810:	str	wzr, [x0]
  406814:	cbz	x21, 406854 <get_s64@@Base+0x68>
  406818:	ldrb	w8, [x21]
  40681c:	cbz	w8, 406854 <get_s64@@Base+0x68>
  406820:	mov	x20, x0
  406824:	add	x1, sp, #0x8
  406828:	mov	x0, x21
  40682c:	mov	w2, w22
  406830:	bl	404e00 <strtoll@plt>
  406834:	ldr	x9, [sp, #8]
  406838:	mov	x8, x0
  40683c:	mov	w0, #0xffffffff            	// #-1
  406840:	cbz	x9, 406858 <get_s64@@Base+0x6c>
  406844:	cmp	x9, x21
  406848:	b.eq	406858 <get_s64@@Base+0x6c>  // b.none
  40684c:	ldrb	w9, [x9]
  406850:	cbz	w9, 40686c <get_s64@@Base+0x80>
  406854:	mov	w0, #0xffffffff            	// #-1
  406858:	ldp	x20, x19, [sp, #48]
  40685c:	ldp	x22, x21, [sp, #32]
  406860:	ldp	x29, x30, [sp, #16]
  406864:	add	sp, sp, #0x40
  406868:	ret
  40686c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
  406870:	add	x9, x8, x9
  406874:	cmp	x9, #0x1
  406878:	b.hi	406888 <get_s64@@Base+0x9c>  // b.pmore
  40687c:	ldr	w9, [x20]
  406880:	cmp	w9, #0x22
  406884:	b.eq	406854 <get_s64@@Base+0x68>  // b.none
  406888:	mov	w0, wzr
  40688c:	str	x8, [x19]
  406890:	b	406858 <get_s64@@Base+0x6c>

0000000000406894 <get_s32@@Base>:
  406894:	sub	sp, sp, #0x40
  406898:	stp	x29, x30, [sp, #16]
  40689c:	stp	x22, x21, [sp, #32]
  4068a0:	stp	x20, x19, [sp, #48]
  4068a4:	add	x29, sp, #0x10
  4068a8:	mov	w22, w2
  4068ac:	mov	x21, x1
  4068b0:	mov	x19, x0
  4068b4:	bl	4052a0 <__errno_location@plt>
  4068b8:	str	wzr, [x0]
  4068bc:	cbz	x21, 4068fc <get_s32@@Base+0x68>
  4068c0:	ldrb	w8, [x21]
  4068c4:	cbz	w8, 4068fc <get_s32@@Base+0x68>
  4068c8:	mov	x20, x0
  4068cc:	add	x1, sp, #0x8
  4068d0:	mov	x0, x21
  4068d4:	mov	w2, w22
  4068d8:	bl	4050c0 <strtol@plt>
  4068dc:	ldr	x9, [sp, #8]
  4068e0:	mov	x8, x0
  4068e4:	mov	w0, #0xffffffff            	// #-1
  4068e8:	cbz	x9, 406900 <get_s32@@Base+0x6c>
  4068ec:	cmp	x9, x21
  4068f0:	b.eq	406900 <get_s32@@Base+0x6c>  // b.none
  4068f4:	ldrb	w9, [x9]
  4068f8:	cbz	w9, 406914 <get_s32@@Base+0x80>
  4068fc:	mov	w0, #0xffffffff            	// #-1
  406900:	ldp	x20, x19, [sp, #48]
  406904:	ldp	x22, x21, [sp, #32]
  406908:	ldp	x29, x30, [sp, #16]
  40690c:	add	sp, sp, #0x40
  406910:	ret
  406914:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
  406918:	add	x9, x8, x9
  40691c:	cmp	x9, #0x1
  406920:	b.hi	406930 <get_s32@@Base+0x9c>  // b.pmore
  406924:	ldr	w9, [x20]
  406928:	cmp	w9, #0x22
  40692c:	b.eq	4068fc <get_s32@@Base+0x68>  // b.none
  406930:	cmp	x8, w8, sxtw
  406934:	b.ne	4068fc <get_s32@@Base+0x68>  // b.any
  406938:	mov	w0, wzr
  40693c:	str	w8, [x19]
  406940:	b	406900 <get_s32@@Base+0x6c>

0000000000406944 <get_be64@@Base>:
  406944:	sub	sp, sp, #0x40
  406948:	stp	x20, x19, [sp, #48]
  40694c:	mov	x19, x0
  406950:	add	x0, sp, #0x8
  406954:	stp	x29, x30, [sp, #16]
  406958:	stp	x22, x21, [sp, #32]
  40695c:	add	x29, sp, #0x10
  406960:	bl	4065f0 <get_u64@@Base>
  406964:	mov	w20, w0
  406968:	cbnz	w0, 4069a0 <get_be64@@Base+0x5c>
  40696c:	mov	w0, #0x1                   	// #1
  406970:	bl	4063cc <mask2bits@@Base+0x40>
  406974:	ldr	x21, [sp, #8]
  406978:	cmp	w0, #0x1
  40697c:	b.eq	40699c <get_be64@@Base+0x58>  // b.none
  406980:	mov	w0, w21
  406984:	bl	4063cc <mask2bits@@Base+0x40>
  406988:	mov	w22, w0
  40698c:	lsr	x0, x21, #32
  406990:	bl	4063cc <mask2bits@@Base+0x40>
  406994:	mov	w21, w0
  406998:	bfi	x21, x22, #32, #32
  40699c:	str	x21, [x19]
  4069a0:	mov	w0, w20
  4069a4:	ldp	x20, x19, [sp, #48]
  4069a8:	ldp	x22, x21, [sp, #32]
  4069ac:	ldp	x29, x30, [sp, #16]
  4069b0:	add	sp, sp, #0x40
  4069b4:	ret

00000000004069b8 <get_be32@@Base>:
  4069b8:	sub	sp, sp, #0x30
  4069bc:	stp	x29, x30, [sp, #16]
  4069c0:	add	x29, sp, #0x10
  4069c4:	stp	x20, x19, [sp, #32]
  4069c8:	mov	x19, x0
  4069cc:	sub	x0, x29, #0x4
  4069d0:	bl	406678 <get_u32@@Base>
  4069d4:	mov	w20, w0
  4069d8:	cbnz	w0, 4069e8 <get_be32@@Base+0x30>
  4069dc:	ldur	w0, [x29, #-4]
  4069e0:	bl	4063cc <mask2bits@@Base+0x40>
  4069e4:	str	w0, [x19]
  4069e8:	mov	w0, w20
  4069ec:	ldp	x20, x19, [sp, #32]
  4069f0:	ldp	x29, x30, [sp, #16]
  4069f4:	add	sp, sp, #0x30
  4069f8:	ret

00000000004069fc <get_be16@@Base>:
  4069fc:	sub	sp, sp, #0x30
  406a00:	stp	x29, x30, [sp, #16]
  406a04:	add	x29, sp, #0x10
  406a08:	stp	x20, x19, [sp, #32]
  406a0c:	mov	x19, x0
  406a10:	sub	x0, x29, #0x4
  406a14:	bl	4066f4 <get_u16@@Base>
  406a18:	mov	w20, w0
  406a1c:	cbnz	w0, 406a2c <get_be16@@Base+0x30>
  406a20:	ldurh	w0, [x29, #-4]
  406a24:	bl	406a40 <get_be16@@Base+0x44>
  406a28:	strh	w0, [x19]
  406a2c:	mov	w0, w20
  406a30:	ldp	x20, x19, [sp, #32]
  406a34:	ldp	x29, x30, [sp, #16]
  406a38:	add	sp, sp, #0x30
  406a3c:	ret
  406a40:	rev	w8, w0
  406a44:	lsr	w0, w8, #16
  406a48:	ret

0000000000406a4c <get_addr64@@Base>:
  406a4c:	sub	sp, sp, #0x50
  406a50:	stp	x29, x30, [sp, #16]
  406a54:	add	x29, sp, #0x10
  406a58:	stp	x22, x21, [sp, #48]
  406a5c:	stp	x20, x19, [sp, #64]
  406a60:	mov	x20, x1
  406a64:	mov	x19, x0
  406a68:	mov	x21, xzr
  406a6c:	add	x22, x29, #0x18
  406a70:	str	x23, [sp, #32]
  406a74:	add	x1, sp, #0x8
  406a78:	mov	w2, #0x10                  	// #16
  406a7c:	mov	x0, x20
  406a80:	bl	404db0 <strtoul@plt>
  406a84:	lsr	x9, x0, #16
  406a88:	mov	w8, #0x1                   	// #1
  406a8c:	cbnz	x9, 406acc <get_addr64@@Base+0x80>
  406a90:	ldr	x23, [sp, #8]
  406a94:	cmp	x23, x20
  406a98:	b.eq	406acc <get_addr64@@Base+0x80>  // b.none
  406a9c:	bl	406a40 <get_be16@@Base+0x44>
  406aa0:	strh	w0, [x22, x21]
  406aa4:	ldrb	w8, [x23]
  406aa8:	cbz	w8, 406ae0 <get_addr64@@Base+0x94>
  406aac:	cmp	x21, #0x6
  406ab0:	cset	w9, ne  // ne = any
  406ab4:	cmp	w8, #0x3a
  406ab8:	cset	w8, eq  // eq = none
  406abc:	and	w10, w9, w8
  406ac0:	tst	w9, w8
  406ac4:	csinc	x20, x20, x23, eq  // eq = none
  406ac8:	eor	w8, w10, #0x1
  406acc:	cbnz	w8, 406ae8 <get_addr64@@Base+0x9c>
  406ad0:	add	x21, x21, #0x2
  406ad4:	cmp	x21, #0x8
  406ad8:	b.ne	406a74 <get_addr64@@Base+0x28>  // b.any
  406adc:	b	406af0 <get_addr64@@Base+0xa4>
  406ae0:	mov	w8, #0x2                   	// #2
  406ae4:	cbz	w8, 406ad0 <get_addr64@@Base+0x84>
  406ae8:	cmp	w8, #0x2
  406aec:	b.ne	406b00 <get_addr64@@Base+0xb4>  // b.any
  406af0:	ldr	x8, [x29, #24]
  406af4:	mov	w0, #0x1                   	// #1
  406af8:	str	x8, [x19]
  406afc:	b	406b04 <get_addr64@@Base+0xb8>
  406b00:	mov	w0, #0xffffffff            	// #-1
  406b04:	ldp	x20, x19, [sp, #64]
  406b08:	ldp	x22, x21, [sp, #48]
  406b0c:	ldr	x23, [sp, #32]
  406b10:	ldp	x29, x30, [sp, #16]
  406b14:	add	sp, sp, #0x50
  406b18:	ret

0000000000406b1c <get_addr_1@@Base>:
  406b1c:	stp	x29, x30, [sp, #-32]!
  406b20:	str	x19, [sp, #16]
  406b24:	mov	x29, sp
  406b28:	mov	x19, x0
  406b2c:	bl	406b4c <get_addr_1@@Base+0x30>
  406b30:	cbnz	w0, 406b40 <get_addr_1@@Base+0x24>
  406b34:	mov	x0, x19
  406b38:	bl	406d60 <get_addr_1@@Base+0x244>
  406b3c:	mov	w0, wzr
  406b40:	ldr	x19, [sp, #16]
  406b44:	ldp	x29, x30, [sp], #32
  406b48:	ret
  406b4c:	stp	x29, x30, [sp, #-48]!
  406b50:	stp	x20, x19, [sp, #32]
  406b54:	mov	x20, x1
  406b58:	movi	v0.2d, #0x0
  406b5c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  406b60:	str	x21, [sp, #16]
  406b64:	mov	x19, x0
  406b68:	str	xzr, [x0, #256]
  406b6c:	stp	q0, q0, [x0, #224]
  406b70:	stp	q0, q0, [x0, #192]
  406b74:	stp	q0, q0, [x0, #160]
  406b78:	stp	q0, q0, [x0, #128]
  406b7c:	stp	q0, q0, [x0, #96]
  406b80:	stp	q0, q0, [x0, #64]
  406b84:	stp	q0, q0, [x0, #32]
  406b88:	stp	q0, q0, [x0]
  406b8c:	add	x1, x1, #0xfe9
  406b90:	mov	x0, x20
  406b94:	mov	x29, sp
  406b98:	mov	w21, w2
  406b9c:	bl	4050a0 <strcmp@plt>
  406ba0:	cbz	w0, 406c28 <get_addr_1@@Base+0x10c>
  406ba4:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  406ba8:	add	x1, x1, #0xff1
  406bac:	mov	x0, x20
  406bb0:	bl	4050a0 <strcmp@plt>
  406bb4:	cbz	w0, 406c08 <get_addr_1@@Base+0xec>
  406bb8:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  406bbc:	add	x1, x1, #0xff5
  406bc0:	mov	x0, x20
  406bc4:	bl	4050a0 <strcmp@plt>
  406bc8:	cbz	w0, 406c08 <get_addr_1@@Base+0xec>
  406bcc:	cmp	w21, #0x11
  406bd0:	b.ne	406c78 <get_addr_1@@Base+0x15c>  // b.any
  406bd4:	add	x0, x19, #0x8
  406bd8:	mov	w1, #0x100                 	// #256
  406bdc:	mov	x2, x20
  406be0:	bl	4097d8 <ll_addr_a2n@@Base>
  406be4:	tbnz	w0, #31, 406c34 <get_addr_1@@Base+0x118>
  406be8:	mov	w8, w0
  406bec:	mov	w9, #0x11                  	// #17
  406bf0:	strh	w8, [x19, #2]
  406bf4:	lsl	w8, w8, #3
  406bf8:	mov	w0, wzr
  406bfc:	strh	w9, [x19, #6]
  406c00:	strh	w8, [x19, #4]
  406c04:	b	406c68 <get_addr_1@@Base+0x14c>
  406c08:	orr	w8, w21, #0x10
  406c0c:	cmp	w8, #0x1c
  406c10:	b.eq	406c34 <get_addr_1@@Base+0x118>  // b.none
  406c14:	mov	w0, wzr
  406c18:	strh	w21, [x19, #6]
  406c1c:	mov	w8, #0xfffe0000            	// #-131072
  406c20:	stur	w8, [x19, #2]
  406c24:	b	406c68 <get_addr_1@@Base+0x14c>
  406c28:	orr	w8, w21, #0x10
  406c2c:	cmp	w8, #0x1c
  406c30:	b.ne	406c3c <get_addr_1@@Base+0x120>  // b.any
  406c34:	mov	w0, #0xffffffff            	// #-1
  406c38:	b	406c68 <get_addr_1@@Base+0x14c>
  406c3c:	and	w0, w21, #0xffff
  406c40:	strh	w21, [x19, #6]
  406c44:	bl	4079d8 <format_host_r@@Base+0xb4>
  406c48:	ldrh	w9, [x19]
  406c4c:	mov	w8, w0
  406c50:	strh	w8, [x19, #2]
  406c54:	mov	w8, #0xfffe                	// #65534
  406c58:	strh	w8, [x19, #4]
  406c5c:	orr	w8, w9, #0x1
  406c60:	mov	w0, wzr
  406c64:	strh	w8, [x19]
  406c68:	ldp	x20, x19, [sp, #32]
  406c6c:	ldr	x21, [sp, #16]
  406c70:	ldp	x29, x30, [sp], #48
  406c74:	ret
  406c78:	mov	w1, #0x3a                  	// #58
  406c7c:	mov	x0, x20
  406c80:	bl	405150 <strchr@plt>
  406c84:	cbz	x0, 406cc0 <get_addr_1@@Base+0x1a4>
  406c88:	mov	w8, #0xa                   	// #10
  406c8c:	cmp	w21, #0xa
  406c90:	strh	w8, [x19, #6]
  406c94:	b.eq	406c9c <get_addr_1@@Base+0x180>  // b.none
  406c98:	cbnz	w21, 406c34 <get_addr_1@@Base+0x118>
  406c9c:	add	x2, x19, #0x8
  406ca0:	mov	w0, #0xa                   	// #10
  406ca4:	mov	x1, x20
  406ca8:	bl	405120 <inet_pton@plt>
  406cac:	cmp	w0, #0x1
  406cb0:	b.lt	406c34 <get_addr_1@@Base+0x118>  // b.tstop
  406cb4:	mov	w0, wzr
  406cb8:	mov	w8, #0xffff0010            	// #-65520
  406cbc:	b	406c20 <get_addr_1@@Base+0x104>
  406cc0:	cmp	w21, #0x1c
  406cc4:	b.ne	406d28 <get_addr_1@@Base+0x20c>  // b.any
  406cc8:	add	x21, x19, #0x8
  406ccc:	mov	w8, #0x1c                  	// #28
  406cd0:	mov	w0, #0x1c                  	// #28
  406cd4:	mov	w3, #0x100                 	// #256
  406cd8:	mov	x1, x20
  406cdc:	mov	x2, x21
  406ce0:	strh	w8, [x19, #6]
  406ce4:	bl	40a840 <mpls_pton@@Base>
  406ce8:	cmp	w0, #0x1
  406cec:	b.lt	406c34 <get_addr_1@@Base+0x118>  // b.tstop
  406cf0:	mov	w8, #0x4                   	// #4
  406cf4:	mov	x20, xzr
  406cf8:	movk	w8, #0x14, lsl #16
  406cfc:	stur	w8, [x19, #2]
  406d00:	cmp	x20, #0x40
  406d04:	b.eq	406d58 <get_addr_1@@Base+0x23c>  // b.none
  406d08:	ldr	w0, [x21, x20, lsl #2]
  406d0c:	bl	4063cc <mask2bits@@Base+0x40>
  406d10:	add	x20, x20, #0x1
  406d14:	tbz	w0, #8, 406d00 <get_addr_1@@Base+0x1e4>
  406d18:	lsl	w8, w20, #2
  406d1c:	mov	w0, wzr
  406d20:	strh	w8, [x19, #2]
  406d24:	b	406c68 <get_addr_1@@Base+0x14c>
  406d28:	mov	w8, #0x2                   	// #2
  406d2c:	tst	w21, #0xfffffffd
  406d30:	strh	w8, [x19, #6]
  406d34:	b.ne	406c34 <get_addr_1@@Base+0x118>  // b.any
  406d38:	add	x0, x19, #0x8
  406d3c:	mov	x1, x20
  406d40:	bl	408c48 <sprint_time64@@Base+0xdc>
  406d44:	cmp	w0, #0x1
  406d48:	b.lt	406c34 <get_addr_1@@Base+0x118>  // b.tstop
  406d4c:	mov	w0, wzr
  406d50:	mov	w8, #0xffff0004            	// #-65532
  406d54:	b	406c20 <get_addr_1@@Base+0x104>
  406d58:	mov	w0, wzr
  406d5c:	b	406c68 <get_addr_1@@Base+0x14c>
  406d60:	stp	x29, x30, [sp, #-32]!
  406d64:	ldrh	w8, [x0, #6]
  406d68:	str	x19, [sp, #16]
  406d6c:	mov	x19, x0
  406d70:	mov	x29, sp
  406d74:	cmp	w8, #0xa
  406d78:	b.eq	406dac <get_addr_1@@Base+0x290>  // b.none
  406d7c:	cmp	w8, #0x2
  406d80:	b.ne	406df0 <get_addr_1@@Base+0x2d4>  // b.any
  406d84:	ldr	w0, [x19, #8]
  406d88:	cbz	w0, 406de4 <get_addr_1@@Base+0x2c8>
  406d8c:	bl	4063cc <mask2bits@@Base+0x40>
  406d90:	ldrh	w8, [x19]
  406d94:	lsr	w9, w0, #28
  406d98:	cmp	w9, #0xe
  406d9c:	b.ne	406ddc <get_addr_1@@Base+0x2c0>  // b.any
  406da0:	mov	w9, #0xa                   	// #10
  406da4:	orr	w8, w8, w9
  406da8:	b	406dec <get_addr_1@@Base+0x2d0>
  406dac:	ldr	w8, [x19, #8]
  406db0:	cbnz	w8, 406dcc <get_addr_1@@Base+0x2b0>
  406db4:	ldr	w8, [x19, #12]
  406db8:	cbnz	w8, 406dcc <get_addr_1@@Base+0x2b0>
  406dbc:	ldr	w8, [x19, #16]
  406dc0:	cbnz	w8, 406dcc <get_addr_1@@Base+0x2b0>
  406dc4:	ldr	w8, [x19, #20]
  406dc8:	cbz	w8, 406de4 <get_addr_1@@Base+0x2c8>
  406dcc:	ldrb	w9, [x19, #8]
  406dd0:	ldrh	w8, [x19]
  406dd4:	cmp	w9, #0xff
  406dd8:	b.eq	406da0 <get_addr_1@@Base+0x284>  // b.none
  406ddc:	orr	w8, w8, #0x2
  406de0:	b	406dec <get_addr_1@@Base+0x2d0>
  406de4:	ldrh	w8, [x19]
  406de8:	orr	w8, w8, #0x6
  406dec:	strh	w8, [x19]
  406df0:	ldr	x19, [sp, #16]
  406df4:	ldp	x29, x30, [sp], #32
  406df8:	ret

0000000000406dfc <af_bit_len@@Base>:
  406dfc:	sub	w8, w0, #0x2
  406e00:	cmp	w8, #0x1a
  406e04:	b.hi	406e2c <af_bit_len@@Base+0x30>  // b.pmore
  406e08:	adrp	x9, 40d000 <rta_addattr8@@Base+0x4>
  406e0c:	add	x9, x9, #0xb58
  406e10:	adr	x10, 406e24 <af_bit_len@@Base+0x28>
  406e14:	ldrb	w11, [x9, x8]
  406e18:	add	x10, x10, x11, lsl #2
  406e1c:	mov	w0, #0x80                  	// #128
  406e20:	br	x10
  406e24:	mov	w0, #0x20                  	// #32
  406e28:	ret
  406e2c:	mov	w0, wzr
  406e30:	ret
  406e34:	mov	w0, #0x50                  	// #80
  406e38:	ret
  406e3c:	mov	w0, #0x10                  	// #16
  406e40:	ret
  406e44:	mov	w0, #0x14                  	// #20
  406e48:	ret

0000000000406e4c <get_prefix_1@@Base>:
  406e4c:	sub	sp, sp, #0x40
  406e50:	stp	x22, x21, [sp, #32]
  406e54:	mov	x22, x1
  406e58:	stp	x20, x19, [sp, #48]
  406e5c:	mov	x19, x0
  406e60:	mov	w1, #0x2f                  	// #47
  406e64:	mov	x0, x22
  406e68:	stp	x29, x30, [sp, #16]
  406e6c:	add	x29, sp, #0x10
  406e70:	mov	w20, w2
  406e74:	bl	405150 <strchr@plt>
  406e78:	mov	x21, x0
  406e7c:	cbz	x0, 406e84 <get_prefix_1@@Base+0x38>
  406e80:	strb	wzr, [x21]
  406e84:	mov	x0, x19
  406e88:	mov	x1, x22
  406e8c:	mov	w2, w20
  406e90:	bl	406b1c <get_addr_1@@Base>
  406e94:	cbz	x21, 406ea0 <get_prefix_1@@Base+0x54>
  406e98:	mov	w8, #0x2f                  	// #47
  406e9c:	strb	w8, [x21]
  406ea0:	cbnz	w0, 406f1c <get_prefix_1@@Base+0xd0>
  406ea4:	ldrh	w0, [x19, #6]
  406ea8:	bl	406dfc <af_bit_len@@Base>
  406eac:	mov	w20, w0
  406eb0:	cbz	x21, 406edc <get_prefix_1@@Base+0x90>
  406eb4:	ldrsh	w8, [x19, #4]
  406eb8:	cmn	w8, #0x2
  406ebc:	b.eq	406ed0 <get_prefix_1@@Base+0x84>  // b.none
  406ec0:	add	x1, x21, #0x1
  406ec4:	sub	x0, x29, #0x4
  406ec8:	bl	406f30 <get_prefix_1@@Base+0xe4>
  406ecc:	cbz	w0, 406f04 <get_prefix_1@@Base+0xb8>
  406ed0:	mov	w8, wzr
  406ed4:	tbz	w8, #0, 406f18 <get_prefix_1@@Base+0xcc>
  406ed8:	b	406eec <get_prefix_1@@Base+0xa0>
  406edc:	ldrsh	w9, [x19, #4]
  406ee0:	mov	w8, wzr
  406ee4:	cmn	w9, #0x2
  406ee8:	csel	w20, wzr, w20, eq  // eq = none
  406eec:	ldrh	w9, [x19]
  406ef0:	mov	w0, wzr
  406ef4:	strh	w20, [x19, #4]
  406ef8:	orr	w8, w9, w8
  406efc:	strh	w8, [x19]
  406f00:	b	406f1c <get_prefix_1@@Base+0xd0>
  406f04:	ldur	w9, [x29, #-4]
  406f08:	cmp	w9, w20
  406f0c:	cset	w8, ls  // ls = plast
  406f10:	csel	w20, w20, w9, hi  // hi = pmore
  406f14:	tbnz	w8, #0, 406eec <get_prefix_1@@Base+0xa0>
  406f18:	mov	w0, #0xffffffff            	// #-1
  406f1c:	ldp	x20, x19, [sp, #48]
  406f20:	ldp	x22, x21, [sp, #32]
  406f24:	ldp	x29, x30, [sp, #16]
  406f28:	add	sp, sp, #0x40
  406f2c:	ret
  406f30:	sub	sp, sp, #0x140
  406f34:	mov	w2, wzr
  406f38:	stp	x29, x30, [sp, #272]
  406f3c:	str	x28, [sp, #288]
  406f40:	stp	x20, x19, [sp, #304]
  406f44:	add	x29, sp, #0x110
  406f48:	mov	x20, x1
  406f4c:	mov	x19, x0
  406f50:	bl	4063d4 <get_unsigned@@Base>
  406f54:	cbz	w0, 406f98 <get_prefix_1@@Base+0x14c>
  406f58:	add	x0, sp, #0x8
  406f5c:	mov	w2, #0x2                   	// #2
  406f60:	mov	x1, x20
  406f64:	bl	406b1c <get_addr_1@@Base>
  406f68:	cbnz	w0, 406f94 <get_prefix_1@@Base+0x148>
  406f6c:	ldrh	w8, [sp, #14]
  406f70:	cmp	w8, #0x2
  406f74:	b.ne	406f94 <get_prefix_1@@Base+0x148>  // b.any
  406f78:	ldr	w0, [sp, #16]
  406f7c:	bl	40638c <mask2bits@@Base>
  406f80:	tbnz	w0, #31, 406f94 <get_prefix_1@@Base+0x148>
  406f84:	mov	w8, w0
  406f88:	mov	w0, wzr
  406f8c:	str	w8, [x19]
  406f90:	b	406f98 <get_prefix_1@@Base+0x14c>
  406f94:	mov	w0, #0xffffffff            	// #-1
  406f98:	ldp	x20, x19, [sp, #304]
  406f9c:	ldr	x28, [sp, #288]
  406fa0:	ldp	x29, x30, [sp, #272]
  406fa4:	add	sp, sp, #0x140
  406fa8:	ret

0000000000406fac <get_addr@@Base>:
  406fac:	stp	x29, x30, [sp, #-48]!
  406fb0:	str	x21, [sp, #16]
  406fb4:	stp	x20, x19, [sp, #32]
  406fb8:	mov	x29, sp
  406fbc:	mov	w20, w2
  406fc0:	mov	x19, x1
  406fc4:	bl	406b1c <get_addr_1@@Base>
  406fc8:	cbnz	w0, 406fdc <get_addr@@Base+0x30>
  406fcc:	ldp	x20, x19, [sp, #32]
  406fd0:	ldr	x21, [sp, #16]
  406fd4:	ldp	x29, x30, [sp], #48
  406fd8:	ret
  406fdc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  406fe0:	ldr	x8, [x8, #3992]
  406fe4:	mov	w0, w20
  406fe8:	ldr	x21, [x8]
  406fec:	bl	407010 <get_addr@@Base+0x64>
  406ff0:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  406ff4:	mov	x2, x0
  406ff8:	add	x1, x1, #0xc83
  406ffc:	mov	x0, x21
  407000:	mov	x3, x19
  407004:	bl	4052e0 <fprintf@plt>
  407008:	mov	w0, #0x1                   	// #1
  40700c:	bl	404dd0 <exit@plt>
  407010:	cbz	w0, 407028 <get_addr@@Base+0x7c>
  407014:	stp	x29, x30, [sp, #-16]!
  407018:	mov	x29, sp
  40701c:	bl	4078b0 <family_name@@Base>
  407020:	ldp	x29, x30, [sp], #16
  407024:	ret
  407028:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  40702c:	add	x0, x0, #0xff9
  407030:	ret

0000000000407034 <get_addr_rta@@Base>:
  407034:	stp	x29, x30, [sp, #-16]!
  407038:	ldrh	w8, [x1], #4
  40703c:	mov	x29, sp
  407040:	sub	w8, w8, #0x6
  407044:	ror	w9, w8, #1
  407048:	cmp	w9, #0x7
  40704c:	mov	w8, #0xffffffff            	// #-1
  407050:	b.hi	407118 <get_addr_rta@@Base+0xe4>  // b.pmore
  407054:	adrp	x10, 40d000 <rta_addattr8@@Base+0x4>
  407058:	add	x10, x10, #0xb73
  40705c:	adr	x11, 40706c <get_addr_rta@@Base+0x38>
  407060:	ldrb	w12, [x10, x9]
  407064:	add	x11, x11, x12, lsl #2
  407068:	br	x11
  40706c:	mov	w8, #0xc                   	// #12
  407070:	mov	w9, #0x2                   	// #2
  407074:	strh	w8, [x0, #6]
  407078:	strh	w9, [x0, #2]
  40707c:	ldrh	w8, [x1]
  407080:	strh	w8, [x0, #8]
  407084:	cbnz	w2, 4070f0 <get_addr_rta@@Base+0xbc>
  407088:	b	4070fc <get_addr_rta@@Base+0xc8>
  40708c:	mov	w8, #0x2                   	// #2
  407090:	mov	w9, #0x4                   	// #4
  407094:	strh	w8, [x0, #6]
  407098:	strh	w9, [x0, #2]
  40709c:	ldr	w8, [x1]
  4070a0:	str	w8, [x0, #8]
  4070a4:	cbnz	w2, 4070f0 <get_addr_rta@@Base+0xbc>
  4070a8:	b	4070fc <get_addr_rta@@Base+0xc8>
  4070ac:	mov	w8, #0x4                   	// #4
  4070b0:	mov	w9, #0xa                   	// #10
  4070b4:	strh	w8, [x0, #6]
  4070b8:	strh	w9, [x0, #2]
  4070bc:	ldrh	w8, [x1, #8]
  4070c0:	ldr	x9, [x1]
  4070c4:	strh	w8, [x0, #16]
  4070c8:	str	x9, [x0, #8]
  4070cc:	cbnz	w2, 4070f0 <get_addr_rta@@Base+0xbc>
  4070d0:	b	4070fc <get_addr_rta@@Base+0xc8>
  4070d4:	mov	w8, #0xa                   	// #10
  4070d8:	mov	w9, #0x10                  	// #16
  4070dc:	strh	w8, [x0, #6]
  4070e0:	strh	w9, [x0, #2]
  4070e4:	ldr	q0, [x1]
  4070e8:	stur	q0, [x0, #8]
  4070ec:	cbz	w2, 4070fc <get_addr_rta@@Base+0xc8>
  4070f0:	ldrh	w8, [x0, #6]
  4070f4:	cmp	w8, w2
  4070f8:	b.ne	407114 <get_addr_rta@@Base+0xe0>  // b.any
  4070fc:	mov	w8, #0xffff                	// #65535
  407100:	strh	w8, [x0, #4]
  407104:	strh	wzr, [x0]
  407108:	bl	406d60 <get_addr_1@@Base+0x244>
  40710c:	mov	w8, wzr
  407110:	b	407118 <get_addr_rta@@Base+0xe4>
  407114:	mov	w8, #0xfffffffe            	// #-2
  407118:	mov	w0, w8
  40711c:	ldp	x29, x30, [sp], #16
  407120:	ret

0000000000407124 <get_prefix@@Base>:
  407124:	stp	x29, x30, [sp, #-48]!
  407128:	stp	x20, x19, [sp, #32]
  40712c:	mov	x19, x1
  407130:	cmp	w2, #0x11
  407134:	str	x21, [sp, #16]
  407138:	mov	x29, sp
  40713c:	b.eq	407160 <get_prefix@@Base+0x3c>  // b.none
  407140:	mov	x1, x19
  407144:	mov	w20, w2
  407148:	bl	406e4c <get_prefix_1@@Base>
  40714c:	cbnz	w0, 407184 <get_prefix@@Base+0x60>
  407150:	ldp	x20, x19, [sp, #32]
  407154:	ldr	x21, [sp, #16]
  407158:	ldp	x29, x30, [sp], #48
  40715c:	ret
  407160:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  407164:	ldr	x8, [x8, #3992]
  407168:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  40716c:	add	x1, x1, #0xcb4
  407170:	mov	x2, x19
  407174:	ldr	x0, [x8]
  407178:	bl	4052e0 <fprintf@plt>
  40717c:	mov	w0, #0x1                   	// #1
  407180:	bl	404dd0 <exit@plt>
  407184:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  407188:	ldr	x8, [x8, #3992]
  40718c:	mov	w0, w20
  407190:	ldr	x21, [x8]
  407194:	bl	407010 <get_addr@@Base+0x64>
  407198:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  40719c:	mov	x2, x0
  4071a0:	add	x1, x1, #0xcfc
  4071a4:	mov	x0, x21
  4071a8:	mov	x3, x19
  4071ac:	bl	4052e0 <fprintf@plt>
  4071b0:	mov	w0, #0x1                   	// #1
  4071b4:	bl	404dd0 <exit@plt>

00000000004071b8 <get_addr32@@Base>:
  4071b8:	sub	sp, sp, #0x130
  4071bc:	stp	x28, x19, [sp, #288]
  4071c0:	mov	x19, x0
  4071c4:	add	x0, sp, #0x8
  4071c8:	mov	w2, #0x2                   	// #2
  4071cc:	mov	x1, x19
  4071d0:	stp	x29, x30, [sp, #272]
  4071d4:	add	x29, sp, #0x110
  4071d8:	bl	406b1c <get_addr_1@@Base>
  4071dc:	cbnz	w0, 4071f4 <get_addr32@@Base+0x3c>
  4071e0:	ldr	w0, [sp, #16]
  4071e4:	ldp	x28, x19, [sp, #288]
  4071e8:	ldp	x29, x30, [sp, #272]
  4071ec:	add	sp, sp, #0x130
  4071f0:	ret
  4071f4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  4071f8:	ldr	x8, [x8, #3992]
  4071fc:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  407200:	add	x1, x1, #0xd2c
  407204:	mov	x2, x19
  407208:	ldr	x0, [x8]
  40720c:	bl	4052e0 <fprintf@plt>
  407210:	mov	w0, #0x1                   	// #1
  407214:	bl	404dd0 <exit@plt>

0000000000407218 <incomplete_command@@Base>:
  407218:	stp	x29, x30, [sp, #-16]!
  40721c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  407220:	ldr	x8, [x8, #3992]
  407224:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  407228:	add	x0, x0, #0xd5f
  40722c:	mov	w1, #0x30                  	// #48
  407230:	ldr	x3, [x8]
  407234:	mov	w2, #0x1                   	// #1
  407238:	mov	x29, sp
  40723c:	bl	405170 <fwrite@plt>
  407240:	mov	w0, #0xffffffff            	// #-1
  407244:	bl	404dd0 <exit@plt>

0000000000407248 <missarg@@Base>:
  407248:	stp	x29, x30, [sp, #-16]!
  40724c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  407250:	ldr	x8, [x8, #3992]
  407254:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  407258:	mov	x2, x0
  40725c:	add	x1, x1, #0xd90
  407260:	ldr	x8, [x8]
  407264:	mov	x29, sp
  407268:	mov	x0, x8
  40726c:	bl	4052e0 <fprintf@plt>
  407270:	mov	w0, #0xffffffff            	// #-1
  407274:	bl	404dd0 <exit@plt>

0000000000407278 <invarg@@Base>:
  407278:	stp	x29, x30, [sp, #-16]!
  40727c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  407280:	ldr	x8, [x8, #3992]
  407284:	mov	x2, x1
  407288:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  40728c:	mov	x3, x0
  407290:	ldr	x8, [x8]
  407294:	add	x1, x1, #0xdb2
  407298:	mov	x29, sp
  40729c:	mov	x0, x8
  4072a0:	bl	4052e0 <fprintf@plt>
  4072a4:	mov	w0, #0xffffffff            	// #-1
  4072a8:	bl	404dd0 <exit@plt>

00000000004072ac <duparg@@Base>:
  4072ac:	stp	x29, x30, [sp, #-16]!
  4072b0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  4072b4:	ldr	x8, [x8, #3992]
  4072b8:	mov	x3, x1
  4072bc:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  4072c0:	mov	x2, x0
  4072c4:	ldr	x8, [x8]
  4072c8:	add	x1, x1, #0xdd5
  4072cc:	mov	x29, sp
  4072d0:	mov	x0, x8
  4072d4:	bl	4052e0 <fprintf@plt>
  4072d8:	mov	w0, #0xffffffff            	// #-1
  4072dc:	bl	404dd0 <exit@plt>

00000000004072e0 <duparg2@@Base>:
  4072e0:	stp	x29, x30, [sp, #-16]!
  4072e4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  4072e8:	ldr	x8, [x8, #3992]
  4072ec:	mov	x3, x1
  4072f0:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  4072f4:	mov	x2, x0
  4072f8:	ldr	x8, [x8]
  4072fc:	add	x1, x1, #0xe07
  407300:	mov	x29, sp
  407304:	mov	x0, x8
  407308:	bl	4052e0 <fprintf@plt>
  40730c:	mov	w0, #0xffffffff            	// #-1
  407310:	bl	404dd0 <exit@plt>

0000000000407314 <nodev@@Base>:
  407314:	stp	x29, x30, [sp, #-16]!
  407318:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40731c:	ldr	x8, [x8, #3992]
  407320:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  407324:	mov	x2, x0
  407328:	add	x1, x1, #0xe3f
  40732c:	ldr	x8, [x8]
  407330:	mov	x29, sp
  407334:	mov	x0, x8
  407338:	bl	4052e0 <fprintf@plt>
  40733c:	mov	w0, #0xffffffff            	// #-1
  407340:	ldp	x29, x30, [sp], #16
  407344:	ret

0000000000407348 <check_ifname@@Base>:
  407348:	stp	x29, x30, [sp, #-32]!
  40734c:	str	x19, [sp, #16]
  407350:	mov	x29, sp
  407354:	mov	x19, x0
  407358:	bl	404dc0 <strlen@plt>
  40735c:	cmp	x0, #0xf
  407360:	b.ls	40736c <check_ifname@@Base+0x24>  // b.plast
  407364:	mov	w0, #0xffffffff            	// #-1
  407368:	b	407374 <check_ifname@@Base+0x2c>
  40736c:	mov	x0, x19
  407370:	bl	407380 <check_ifname@@Base+0x38>
  407374:	ldr	x19, [sp, #16]
  407378:	ldp	x29, x30, [sp], #32
  40737c:	ret
  407380:	stp	x29, x30, [sp, #-32]!
  407384:	stp	x20, x19, [sp, #16]
  407388:	ldrb	w8, [x0]
  40738c:	mov	x29, sp
  407390:	cbz	w8, 4073bc <check_ifname@@Base+0x74>
  407394:	mov	x19, x0
  407398:	ldrb	w20, [x19]
  40739c:	cbz	w20, 4073cc <check_ifname@@Base+0x84>
  4073a0:	cmp	w20, #0x2f
  4073a4:	b.eq	4073bc <check_ifname@@Base+0x74>  // b.none
  4073a8:	bl	4050b0 <__ctype_b_loc@plt>
  4073ac:	ldr	x8, [x0]
  4073b0:	add	x19, x19, #0x1
  4073b4:	ldrh	w8, [x8, x20, lsl #1]
  4073b8:	tbz	w8, #13, 407398 <check_ifname@@Base+0x50>
  4073bc:	mov	w0, #0xffffffff            	// #-1
  4073c0:	ldp	x20, x19, [sp, #16]
  4073c4:	ldp	x29, x30, [sp], #32
  4073c8:	ret
  4073cc:	mov	w0, wzr
  4073d0:	b	4073c0 <check_ifname@@Base+0x78>

00000000004073d4 <check_altifname@@Base>:
  4073d4:	stp	x29, x30, [sp, #-16]!
  4073d8:	mov	x29, sp
  4073dc:	bl	407380 <check_ifname@@Base+0x38>
  4073e0:	ldp	x29, x30, [sp], #16
  4073e4:	ret

00000000004073e8 <get_ifname@@Base>:
  4073e8:	stp	x29, x30, [sp, #-48]!
  4073ec:	stp	x20, x19, [sp, #32]
  4073f0:	mov	x20, x0
  4073f4:	mov	x0, x1
  4073f8:	str	x21, [sp, #16]
  4073fc:	mov	x29, sp
  407400:	mov	x19, x1
  407404:	bl	407348 <check_ifname@@Base>
  407408:	mov	w21, w0
  40740c:	cbnz	w0, 407420 <get_ifname@@Base+0x38>
  407410:	mov	w2, #0x10                  	// #16
  407414:	mov	x0, x20
  407418:	mov	x1, x19
  40741c:	bl	405250 <strncpy@plt>
  407420:	mov	w0, w21
  407424:	ldp	x20, x19, [sp, #32]
  407428:	ldr	x21, [sp, #16]
  40742c:	ldp	x29, x30, [sp], #48
  407430:	ret

0000000000407434 <get_ifname_rta@@Base>:
  407434:	stp	x29, x30, [sp, #-32]!
  407438:	str	x19, [sp, #16]
  40743c:	mov	x29, sp
  407440:	cbz	x1, 407468 <get_ifname_rta@@Base+0x34>
  407444:	mov	x0, x1
  407448:	bl	407494 <get_ifname_rta@@Base+0x60>
  40744c:	mov	x19, x0
  407450:	bl	407348 <check_ifname@@Base>
  407454:	cmp	w0, #0x0
  407458:	csel	x0, x19, xzr, eq  // eq = none
  40745c:	ldr	x19, [sp, #16]
  407460:	ldp	x29, x30, [sp], #32
  407464:	ret
  407468:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40746c:	ldr	x8, [x8, #3992]
  407470:	mov	w19, w0
  407474:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  407478:	add	x1, x1, #0xe58
  40747c:	ldr	x0, [x8]
  407480:	mov	w2, w19
  407484:	bl	4052e0 <fprintf@plt>
  407488:	mov	w0, w19
  40748c:	bl	408ef8 <ll_idx_n2a@@Base>
  407490:	b	40744c <get_ifname_rta@@Base+0x18>
  407494:	add	x0, x0, #0x4
  407498:	ret

000000000040749c <matches@@Base>:
  40749c:	ldrb	w8, [x0]
  4074a0:	cbz	w8, 4074d8 <matches@@Base+0x3c>
  4074a4:	ldrb	w9, [x1]
  4074a8:	cbz	w9, 4074c8 <matches@@Base+0x2c>
  4074ac:	add	x8, x1, #0x1
  4074b0:	ldrb	w10, [x0]
  4074b4:	cmp	w10, w9, uxtb
  4074b8:	b.ne	4074c8 <matches@@Base+0x2c>  // b.any
  4074bc:	ldrb	w9, [x8], #1
  4074c0:	add	x0, x0, #0x1
  4074c4:	cbnz	w9, 4074b0 <matches@@Base+0x14>
  4074c8:	ldrb	w8, [x0]
  4074cc:	cmp	w8, #0x0
  4074d0:	cset	w0, ne  // ne = any
  4074d4:	ret
  4074d8:	mov	w0, #0x1                   	// #1
  4074dc:	ret

00000000004074e0 <inet_addr_match@@Base>:
  4074e0:	stp	x29, x30, [sp, #-48]!
  4074e4:	stp	x22, x21, [sp, #16]
  4074e8:	stp	x20, x19, [sp, #32]
  4074ec:	mov	w21, w2
  4074f0:	mov	x19, x1
  4074f4:	asr	w22, w2, #5
  4074f8:	mov	x20, x0
  4074fc:	mov	x29, sp
  407500:	cbz	w22, 407524 <inet_addr_match@@Base+0x44>
  407504:	lsl	w8, w22, #2
  407508:	add	x1, x19, #0x8
  40750c:	add	x0, x20, #0x8
  407510:	sxtw	x2, w8
  407514:	bl	404fe0 <bcmp@plt>
  407518:	cbz	w0, 407524 <inet_addr_match@@Base+0x44>
  40751c:	mov	w0, #0xffffffff            	// #-1
  407520:	b	407568 <inet_addr_match@@Base+0x88>
  407524:	and	w8, w21, #0x1f
  407528:	cbz	w8, 407564 <inet_addr_match@@Base+0x84>
  40752c:	sbfiz	x9, x22, #2, #32
  407530:	add	x10, x20, x9
  407534:	add	x9, x19, x9
  407538:	ldr	w19, [x10, #8]
  40753c:	ldr	w20, [x9, #8]
  407540:	neg	w8, w8
  407544:	mov	w9, #0xffffffff            	// #-1
  407548:	lsl	w0, w9, w8
  40754c:	bl	4063cc <mask2bits@@Base+0x40>
  407550:	eor	w8, w20, w19
  407554:	tst	w8, w0
  407558:	b.eq	407564 <inet_addr_match@@Base+0x84>  // b.none
  40755c:	mov	w0, #0x1                   	// #1
  407560:	b	407568 <inet_addr_match@@Base+0x88>
  407564:	mov	w0, wzr
  407568:	ldp	x20, x19, [sp, #32]
  40756c:	ldp	x22, x21, [sp, #16]
  407570:	ldp	x29, x30, [sp], #48
  407574:	ret

0000000000407578 <inet_addr_match_rta@@Base>:
  407578:	sub	sp, sp, #0x130
  40757c:	stp	x29, x30, [sp, #272]
  407580:	stp	x28, x19, [sp, #288]
  407584:	add	x29, sp, #0x110
  407588:	cbz	x1, 4075b8 <inet_addr_match_rta@@Base+0x40>
  40758c:	ldrh	w2, [x0, #6]
  407590:	mov	x19, x0
  407594:	cbz	w2, 4075b8 <inet_addr_match_rta@@Base+0x40>
  407598:	ldrsh	w8, [x19, #4]
  40759c:	cmp	w8, #0x1
  4075a0:	b.lt	4075b8 <inet_addr_match_rta@@Base+0x40>  // b.tstop
  4075a4:	add	x0, sp, #0x8
  4075a8:	bl	407034 <get_addr_rta@@Base>
  4075ac:	cbz	w0, 4075cc <inet_addr_match_rta@@Base+0x54>
  4075b0:	mov	w0, #0xffffffff            	// #-1
  4075b4:	b	4075bc <inet_addr_match_rta@@Base+0x44>
  4075b8:	mov	w0, wzr
  4075bc:	ldp	x28, x19, [sp, #288]
  4075c0:	ldp	x29, x30, [sp, #272]
  4075c4:	add	sp, sp, #0x130
  4075c8:	ret
  4075cc:	ldrsh	w2, [x19, #4]
  4075d0:	add	x0, sp, #0x8
  4075d4:	mov	x1, x19
  4075d8:	bl	4074e0 <inet_addr_match@@Base>
  4075dc:	b	4075bc <inet_addr_match_rta@@Base+0x44>

00000000004075e0 <__get_hz@@Base>:
  4075e0:	stp	x29, x30, [sp, #-48]!
  4075e4:	str	x28, [sp, #16]
  4075e8:	stp	x20, x19, [sp, #32]
  4075ec:	mov	x29, sp
  4075f0:	sub	sp, sp, #0x400
  4075f4:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  4075f8:	add	x0, x0, #0xe84
  4075fc:	bl	4052b0 <getenv@plt>
  407600:	cbz	x0, 407610 <__get_hz@@Base+0x30>
  407604:	bl	404f00 <atoi@plt>
  407608:	mov	w20, w0
  40760c:	b	4076ac <__get_hz@@Base+0xcc>
  407610:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  407614:	add	x0, x0, #0xe87
  407618:	bl	4052b0 <getenv@plt>
  40761c:	cbz	x0, 407630 <__get_hz@@Base+0x50>
  407620:	adrp	x2, 40d000 <rta_addattr8@@Base+0x4>
  407624:	mov	x3, x0
  407628:	add	x2, x2, #0xc61
  40762c:	b	40764c <__get_hz@@Base+0x6c>
  407630:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  407634:	add	x0, x0, #0xe97
  407638:	bl	4052b0 <getenv@plt>
  40763c:	cbz	x0, 4076cc <__get_hz@@Base+0xec>
  407640:	adrp	x2, 40d000 <rta_addattr8@@Base+0x4>
  407644:	mov	x3, x0
  407648:	add	x2, x2, #0xea1
  40764c:	mov	x0, sp
  407650:	mov	w1, #0x3ff                 	// #1023
  407654:	bl	404ec0 <snprintf@plt>
  407658:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40765c:	add	x1, x1, #0x213
  407660:	mov	x0, sp
  407664:	bl	4051b0 <fopen64@plt>
  407668:	cbz	x0, 4076a8 <__get_hz@@Base+0xc8>
  40766c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  407670:	add	x1, x1, #0xec0
  407674:	add	x2, x29, #0x1c
  407678:	add	x3, x29, #0x18
  40767c:	mov	x19, x0
  407680:	bl	404f50 <__isoc99_fscanf@plt>
  407684:	ldp	w9, w8, [x29, #24]
  407688:	mov	w10, #0x4240                	// #16960
  40768c:	movk	w10, #0xf, lsl #16
  407690:	cmp	w8, w10
  407694:	ccmp	w0, #0x2, #0x0, eq  // eq = none
  407698:	mov	x0, x19
  40769c:	csel	w20, w9, wzr, eq  // eq = none
  4076a0:	bl	404ef0 <fclose@plt>
  4076a4:	b	4076ac <__get_hz@@Base+0xcc>
  4076a8:	mov	w20, wzr
  4076ac:	cmp	w20, #0x0
  4076b0:	mov	w8, #0x64                  	// #100
  4076b4:	csel	w0, w8, w20, eq  // eq = none
  4076b8:	add	sp, sp, #0x400
  4076bc:	ldp	x20, x19, [sp, #32]
  4076c0:	ldr	x28, [sp, #16]
  4076c4:	ldp	x29, x30, [sp], #48
  4076c8:	ret
  4076cc:	adrp	x8, 40d000 <rta_addattr8@@Base+0x4>
  4076d0:	add	x8, x8, #0xeaf
  4076d4:	ldr	q0, [x8]
  4076d8:	strb	wzr, [sp, #16]
  4076dc:	str	q0, [sp]
  4076e0:	b	407658 <__get_hz@@Base+0x78>

00000000004076e4 <__get_user_hz@@Base>:
  4076e4:	stp	x29, x30, [sp, #-16]!
  4076e8:	mov	w0, #0x2                   	// #2
  4076ec:	mov	x29, sp
  4076f0:	bl	4051e0 <sysconf@plt>
  4076f4:	ldp	x29, x30, [sp], #16
  4076f8:	ret

00000000004076fc <rt_addr_n2a_r@@Base>:
  4076fc:	stp	x29, x30, [sp, #-16]!
  407700:	sub	w9, w0, #0x2
  407704:	cmp	w9, #0x1a
  407708:	mov	x29, sp
  40770c:	b.hi	4077b4 <rt_addr_n2a_r@@Base+0xb8>  // b.pmore
  407710:	adrp	x10, 40d000 <rta_addattr8@@Base+0x4>
  407714:	add	x10, x10, #0xb7b
  407718:	adr	x11, 40772c <rt_addr_n2a_r@@Base+0x30>
  40771c:	ldrb	w12, [x10, x9]
  407720:	add	x11, x11, x12, lsl #2
  407724:	mov	x8, x2
  407728:	br	x11
  40772c:	mov	x1, x8
  407730:	mov	x2, x3
  407734:	mov	w3, w4
  407738:	bl	405300 <inet_ntop@plt>
  40773c:	ldp	x29, x30, [sp], #16
  407740:	ret
  407744:	ldrh	w9, [x8]
  407748:	cmp	w9, #0x2
  40774c:	b.eq	407794 <rt_addr_n2a_r@@Base+0x98>  // b.none
  407750:	cmp	w9, #0xa
  407754:	b.ne	4077c4 <rt_addr_n2a_r@@Base+0xc8>  // b.any
  407758:	mov	w0, #0xa                   	// #10
  40775c:	mov	w9, #0x8                   	// #8
  407760:	b	40779c <rt_addr_n2a_r@@Base+0xa0>
  407764:	mov	w2, #0xffff                	// #65535
  407768:	mov	x0, x8
  40776c:	bl	4096b8 <ll_addr_n2a@@Base>
  407770:	ldp	x29, x30, [sp], #16
  407774:	ret
  407778:	sxtw	x9, w4
  40777c:	mov	x1, x8
  407780:	mov	x2, x3
  407784:	mov	x3, x9
  407788:	bl	40a6fc <mpls_ntop@@Base>
  40778c:	ldp	x29, x30, [sp], #16
  407790:	ret
  407794:	mov	w0, #0x2                   	// #2
  407798:	mov	w9, #0x4                   	// #4
  40779c:	add	x1, x8, x9
  4077a0:	mov	x2, x3
  4077a4:	mov	w3, w4
  4077a8:	bl	405300 <inet_ntop@plt>
  4077ac:	mov	w8, wzr
  4077b0:	cbz	w8, 4077bc <rt_addr_n2a_r@@Base+0xc0>
  4077b4:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  4077b8:	add	x0, x0, #0xed3
  4077bc:	ldp	x29, x30, [sp], #16
  4077c0:	ret
  4077c4:	mov	w8, #0x1                   	// #1
  4077c8:	cbnz	w8, 4077b4 <rt_addr_n2a_r@@Base+0xb8>
  4077cc:	b	4077bc <rt_addr_n2a_r@@Base+0xc0>

00000000004077d0 <rt_addr_n2a@@Base>:
  4077d0:	stp	x29, x30, [sp, #-16]!
  4077d4:	adrp	x3, 41f000 <memcpy@GLIBC_2.17>
  4077d8:	add	x3, x3, #0x338
  4077dc:	mov	w4, #0x100                 	// #256
  4077e0:	mov	x29, sp
  4077e4:	bl	4076fc <rt_addr_n2a_r@@Base>
  4077e8:	ldp	x29, x30, [sp], #16
  4077ec:	ret

00000000004077f0 <read_family@@Base>:
  4077f0:	stp	x29, x30, [sp, #-32]!
  4077f4:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  4077f8:	add	x1, x1, #0xed7
  4077fc:	str	x19, [sp, #16]
  407800:	mov	x29, sp
  407804:	mov	x19, x0
  407808:	bl	4050a0 <strcmp@plt>
  40780c:	cbz	w0, 407880 <read_family@@Base+0x90>
  407810:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  407814:	add	x1, x1, #0xedc
  407818:	mov	x0, x19
  40781c:	bl	4050a0 <strcmp@plt>
  407820:	cbz	w0, 407888 <read_family@@Base+0x98>
  407824:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  407828:	add	x1, x1, #0x5a1
  40782c:	mov	x0, x19
  407830:	bl	4050a0 <strcmp@plt>
  407834:	cbz	w0, 407890 <read_family@@Base+0xa0>
  407838:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  40783c:	add	x1, x1, #0xee2
  407840:	mov	x0, x19
  407844:	bl	4050a0 <strcmp@plt>
  407848:	cbz	w0, 407898 <read_family@@Base+0xa8>
  40784c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  407850:	add	x1, x1, #0xee6
  407854:	mov	x0, x19
  407858:	bl	4050a0 <strcmp@plt>
  40785c:	cbz	w0, 4078a0 <read_family@@Base+0xb0>
  407860:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  407864:	add	x1, x1, #0xeeb
  407868:	mov	x0, x19
  40786c:	bl	4050a0 <strcmp@plt>
  407870:	cmp	w0, #0x0
  407874:	mov	w8, #0x7                   	// #7
  407878:	csel	w0, w8, wzr, eq  // eq = none
  40787c:	b	4078a4 <read_family@@Base+0xb4>
  407880:	mov	w0, #0x2                   	// #2
  407884:	b	4078a4 <read_family@@Base+0xb4>
  407888:	mov	w0, #0xa                   	// #10
  40788c:	b	4078a4 <read_family@@Base+0xb4>
  407890:	mov	w0, #0x11                  	// #17
  407894:	b	4078a4 <read_family@@Base+0xb4>
  407898:	mov	w0, #0x4                   	// #4
  40789c:	b	4078a4 <read_family@@Base+0xb4>
  4078a0:	mov	w0, #0x1c                  	// #28
  4078a4:	ldr	x19, [sp, #16]
  4078a8:	ldp	x29, x30, [sp], #32
  4078ac:	ret

00000000004078b0 <family_name@@Base>:
  4078b0:	sub	w8, w0, #0x2
  4078b4:	cmp	w8, #0x1a
  4078b8:	b.hi	4078e8 <family_name@@Base+0x38>  // b.pmore
  4078bc:	adrp	x9, 40d000 <rta_addattr8@@Base+0x4>
  4078c0:	add	x9, x9, #0xb96
  4078c4:	adr	x10, 4078dc <family_name@@Base+0x2c>
  4078c8:	ldrb	w11, [x9, x8]
  4078cc:	add	x10, x10, x11, lsl #2
  4078d0:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  4078d4:	add	x0, x0, #0xed7
  4078d8:	br	x10
  4078dc:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  4078e0:	add	x0, x0, #0xee2
  4078e4:	ret
  4078e8:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  4078ec:	add	x0, x0, #0xed3
  4078f0:	ret
  4078f4:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  4078f8:	add	x0, x0, #0xeeb
  4078fc:	ret
  407900:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  407904:	add	x0, x0, #0xedc
  407908:	ret
  40790c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  407910:	add	x0, x0, #0x5a1
  407914:	ret
  407918:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  40791c:	add	x0, x0, #0xee6
  407920:	ret

0000000000407924 <format_host_r@@Base>:
  407924:	stp	x29, x30, [sp, #-64]!
  407928:	str	x23, [sp, #16]
  40792c:	stp	x22, x21, [sp, #32]
  407930:	stp	x20, x19, [sp, #48]
  407934:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  407938:	ldr	x8, [x8, #4064]
  40793c:	mov	w19, w4
  407940:	mov	x20, x3
  407944:	mov	x21, x2
  407948:	ldr	w8, [x8]
  40794c:	mov	w23, w1
  407950:	mov	w22, w0
  407954:	mov	x29, sp
  407958:	cbz	w8, 4079ac <format_host_r@@Base+0x88>
  40795c:	cmp	w23, #0x0
  407960:	b.le	407970 <format_host_r@@Base+0x4c>
  407964:	cmp	w23, #0x1
  407968:	b.ge	407984 <format_host_r@@Base+0x60>  // b.tcont
  40796c:	b	4079a4 <format_host_r@@Base+0x80>
  407970:	mov	w0, w22
  407974:	bl	4079d8 <format_host_r@@Base+0xb4>
  407978:	mov	w23, w0
  40797c:	cmp	w23, #0x1
  407980:	b.lt	4079a4 <format_host_r@@Base+0x80>  // b.tstop
  407984:	mov	x0, x21
  407988:	mov	w1, w23
  40798c:	mov	w2, w22
  407990:	bl	4079fc <format_host_r@@Base+0xd8>
  407994:	cbz	x0, 4079a4 <format_host_r@@Base+0x80>
  407998:	mov	w8, wzr
  40799c:	cbnz	w8, 4079ac <format_host_r@@Base+0x88>
  4079a0:	b	4079c4 <format_host_r@@Base+0xa0>
  4079a4:	mov	w8, #0x1                   	// #1
  4079a8:	cbz	w8, 4079c4 <format_host_r@@Base+0xa0>
  4079ac:	mov	w0, w22
  4079b0:	mov	w1, w23
  4079b4:	mov	x2, x21
  4079b8:	mov	x3, x20
  4079bc:	mov	w4, w19
  4079c0:	bl	4076fc <rt_addr_n2a_r@@Base>
  4079c4:	ldp	x20, x19, [sp, #48]
  4079c8:	ldp	x22, x21, [sp, #32]
  4079cc:	ldr	x23, [sp, #16]
  4079d0:	ldp	x29, x30, [sp], #64
  4079d4:	ret
  4079d8:	stp	x29, x30, [sp, #-16]!
  4079dc:	mov	x29, sp
  4079e0:	bl	406dfc <af_bit_len@@Base>
  4079e4:	add	w8, w0, #0x7
  4079e8:	cmp	w0, #0x0
  4079ec:	csel	w8, w8, w0, lt  // lt = tstop
  4079f0:	asr	w0, w8, #3
  4079f4:	ldp	x29, x30, [sp], #16
  4079f8:	ret
  4079fc:	stp	x29, x30, [sp, #-80]!
  407a00:	stp	x22, x21, [sp, #48]
  407a04:	stp	x20, x19, [sp, #64]
  407a08:	mov	w21, w1
  407a0c:	cmp	w2, #0xa
  407a10:	mov	x19, x0
  407a14:	str	x25, [sp, #16]
  407a18:	stp	x24, x23, [sp, #32]
  407a1c:	mov	x29, sp
  407a20:	b.ne	407a34 <format_host_r@@Base+0x110>  // b.any
  407a24:	ldr	w8, [x19]
  407a28:	cbz	w8, 407b50 <format_host_r@@Base+0x22c>
  407a2c:	mov	w20, #0xa                   	// #10
  407a30:	b	407a38 <format_host_r@@Base+0x114>
  407a34:	mov	w20, w2
  407a38:	sxtw	x21, w21
  407a3c:	add	x8, x19, x21
  407a40:	ldur	w8, [x8, #-4]
  407a44:	mov	w9, #0xff01                	// #65281
  407a48:	movk	w9, #0xff00, lsl #16
  407a4c:	adrp	x23, 41f000 <memcpy@GLIBC_2.17>
  407a50:	mul	x9, x8, x9
  407a54:	lsr	x9, x9, #40
  407a58:	add	w9, w9, w9, lsl #8
  407a5c:	sub	w24, w8, w9
  407a60:	add	x23, x23, #0x540
  407a64:	ldr	x22, [x23, w24, uxtw #3]
  407a68:	cbnz	x22, 407b04 <format_host_r@@Base+0x1e0>
  407a6c:	mov	w0, #0x118                 	// #280
  407a70:	bl	404f20 <malloc@plt>
  407a74:	cbz	x0, 407b38 <format_host_r@@Base+0x214>
  407a78:	mov	x22, x0
  407a7c:	strh	w20, [x0, #22]
  407a80:	strh	w21, [x0, #18]
  407a84:	mov	x25, x0
  407a88:	add	x0, x0, #0x18
  407a8c:	mov	x1, x19
  407a90:	mov	x2, x21
  407a94:	str	xzr, [x25, #8]!
  407a98:	bl	404d90 <memcpy@plt>
  407a9c:	adrp	x9, 41f000 <memcpy@GLIBC_2.17>
  407aa0:	lsl	x8, x24, #3
  407aa4:	ldr	w11, [x9, #1336]
  407aa8:	ldr	x10, [x23, x8]
  407aac:	str	x22, [x23, x8]
  407ab0:	add	w8, w11, #0x1
  407ab4:	str	x10, [x22]
  407ab8:	str	w8, [x9, #1336]
  407abc:	cbnz	w11, 407ac8 <format_host_r@@Base+0x1a4>
  407ac0:	mov	w0, #0x1                   	// #1
  407ac4:	bl	404e30 <sethostent@plt>
  407ac8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  407acc:	ldr	x8, [x8, #4016]
  407ad0:	ldr	x0, [x8]
  407ad4:	bl	405190 <fflush@plt>
  407ad8:	mov	x0, x19
  407adc:	mov	w1, w21
  407ae0:	mov	w2, w20
  407ae4:	bl	405100 <gethostbyaddr@plt>
  407ae8:	cbz	x0, 407b34 <format_host_r@@Base+0x210>
  407aec:	ldr	x0, [x0]
  407af0:	bl	405020 <strdup@plt>
  407af4:	str	x0, [x25]
  407af8:	b	407b34 <format_host_r@@Base+0x210>
  407afc:	ldr	x22, [x22]
  407b00:	cbz	x22, 407a6c <format_host_r@@Base+0x148>
  407b04:	ldrh	w8, [x22, #22]
  407b08:	cmp	w20, w8
  407b0c:	b.ne	407afc <format_host_r@@Base+0x1d8>  // b.any
  407b10:	ldrh	w8, [x22, #18]
  407b14:	cmp	w21, w8
  407b18:	b.ne	407afc <format_host_r@@Base+0x1d8>  // b.any
  407b1c:	add	x0, x22, #0x18
  407b20:	mov	x1, x19
  407b24:	mov	x2, x21
  407b28:	bl	404fe0 <bcmp@plt>
  407b2c:	cbnz	w0, 407afc <format_host_r@@Base+0x1d8>
  407b30:	add	x25, x22, #0x8
  407b34:	ldr	x0, [x25]
  407b38:	ldp	x20, x19, [sp, #64]
  407b3c:	ldp	x22, x21, [sp, #48]
  407b40:	ldp	x24, x23, [sp, #32]
  407b44:	ldr	x25, [sp, #16]
  407b48:	ldp	x29, x30, [sp], #80
  407b4c:	ret
  407b50:	ldr	w8, [x19, #4]
  407b54:	mov	w20, #0xa                   	// #10
  407b58:	cbnz	w8, 407a38 <format_host_r@@Base+0x114>
  407b5c:	ldr	w22, [x19, #8]
  407b60:	mov	w0, #0xffff                	// #65535
  407b64:	bl	4063cc <mask2bits@@Base+0x40>
  407b68:	add	x8, x19, #0xc
  407b6c:	cmp	w22, w0
  407b70:	mov	w9, #0x4                   	// #4
  407b74:	mov	w10, #0x2                   	// #2
  407b78:	csel	w21, w9, w21, eq  // eq = none
  407b7c:	csel	w20, w10, w20, eq  // eq = none
  407b80:	csel	x19, x8, x19, eq  // eq = none
  407b84:	b	407a38 <format_host_r@@Base+0x114>

0000000000407b88 <format_host@@Base>:
  407b88:	stp	x29, x30, [sp, #-16]!
  407b8c:	adrp	x3, 41f000 <memcpy@GLIBC_2.17>
  407b90:	add	x3, x3, #0x438
  407b94:	mov	w4, #0x100                 	// #256
  407b98:	mov	x29, sp
  407b9c:	bl	407924 <format_host_r@@Base>
  407ba0:	ldp	x29, x30, [sp], #16
  407ba4:	ret

0000000000407ba8 <hexstring_n2a@@Base>:
  407ba8:	stp	x29, x30, [sp, #-80]!
  407bac:	stp	x20, x19, [sp, #64]
  407bb0:	mov	x19, x2
  407bb4:	cmp	w3, #0x3
  407bb8:	str	x25, [sp, #16]
  407bbc:	stp	x24, x23, [sp, #32]
  407bc0:	stp	x22, x21, [sp, #48]
  407bc4:	mov	x29, sp
  407bc8:	b.lt	407c1c <hexstring_n2a@@Base+0x74>  // b.tstop
  407bcc:	cmp	w1, #0x1
  407bd0:	b.lt	407c1c <hexstring_n2a@@Base+0x74>  // b.tstop
  407bd4:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x9a0>
  407bd8:	mov	w20, w3
  407bdc:	mov	x21, x0
  407be0:	mov	x24, xzr
  407be4:	sxtw	x25, w1
  407be8:	add	x22, x22, #0x51
  407bec:	mov	x23, x19
  407bf0:	ldrb	w2, [x21, x24]
  407bf4:	mov	x0, x23
  407bf8:	mov	x1, x22
  407bfc:	bl	404e60 <sprintf@plt>
  407c00:	cmp	w20, #0x5
  407c04:	b.lt	407c1c <hexstring_n2a@@Base+0x74>  // b.tstop
  407c08:	add	x24, x24, #0x1
  407c0c:	add	x23, x23, #0x2
  407c10:	cmp	x24, x25
  407c14:	sub	w20, w20, #0x2
  407c18:	b.lt	407bf0 <hexstring_n2a@@Base+0x48>  // b.tstop
  407c1c:	mov	x0, x19
  407c20:	ldp	x20, x19, [sp, #64]
  407c24:	ldp	x22, x21, [sp, #48]
  407c28:	ldp	x24, x23, [sp, #32]
  407c2c:	ldr	x25, [sp, #16]
  407c30:	ldp	x29, x30, [sp], #80
  407c34:	ret

0000000000407c38 <hexstring_a2n@@Base>:
  407c38:	sub	sp, sp, #0x50
  407c3c:	stp	x29, x30, [sp, #16]
  407c40:	stp	x24, x23, [sp, #32]
  407c44:	stp	x22, x21, [sp, #48]
  407c48:	stp	x20, x19, [sp, #64]
  407c4c:	add	x29, sp, #0x10
  407c50:	mov	x20, x3
  407c54:	mov	w21, w2
  407c58:	mov	x19, x1
  407c5c:	mov	x22, x0
  407c60:	bl	404dc0 <strlen@plt>
  407c64:	tbnz	w0, #0, 407cf4 <hexstring_a2n@@Base+0xbc>
  407c68:	mov	w24, wzr
  407c6c:	b	407c84 <hexstring_a2n@@Base+0x4c>
  407c70:	strb	w0, [x19, w24, uxtw]
  407c74:	add	w24, w24, #0x1
  407c78:	add	x22, x22, #0x2
  407c7c:	mov	w8, #0x1                   	// #1
  407c80:	tbz	w8, #0, 407cf4 <hexstring_a2n@@Base+0xbc>
  407c84:	cmp	w24, w21
  407c88:	b.cs	407cfc <hexstring_a2n@@Base+0xc4>  // b.hs, b.nlast
  407c8c:	mov	x0, x22
  407c90:	bl	404dc0 <strlen@plt>
  407c94:	cmp	x0, #0x2
  407c98:	b.cc	407cfc <hexstring_a2n@@Base+0xc4>  // b.lo, b.ul, b.last
  407c9c:	add	x0, sp, #0x4
  407ca0:	mov	w2, #0x2                   	// #2
  407ca4:	mov	x1, x22
  407ca8:	bl	405250 <strncpy@plt>
  407cac:	strb	wzr, [sp, #6]
  407cb0:	bl	4052a0 <__errno_location@plt>
  407cb4:	mov	x23, x0
  407cb8:	str	wzr, [x0]
  407cbc:	add	x0, sp, #0x4
  407cc0:	add	x1, sp, #0x8
  407cc4:	mov	w2, #0x10                  	// #16
  407cc8:	bl	404db0 <strtoul@plt>
  407ccc:	ldr	w9, [x23]
  407cd0:	mov	w8, wzr
  407cd4:	cbnz	w9, 407c80 <hexstring_a2n@@Base+0x48>
  407cd8:	cmp	w0, #0xff
  407cdc:	b.hi	407c80 <hexstring_a2n@@Base+0x48>  // b.pmore
  407ce0:	ldr	x8, [sp, #8]
  407ce4:	ldrb	w8, [x8]
  407ce8:	cbz	w8, 407c70 <hexstring_a2n@@Base+0x38>
  407cec:	mov	w8, wzr
  407cf0:	b	407c80 <hexstring_a2n@@Base+0x48>
  407cf4:	mov	x19, xzr
  407cf8:	b	407d04 <hexstring_a2n@@Base+0xcc>
  407cfc:	cbz	x20, 407d04 <hexstring_a2n@@Base+0xcc>
  407d00:	str	w24, [x20]
  407d04:	mov	x0, x19
  407d08:	ldp	x20, x19, [sp, #64]
  407d0c:	ldp	x22, x21, [sp, #48]
  407d10:	ldp	x24, x23, [sp, #32]
  407d14:	ldp	x29, x30, [sp, #16]
  407d18:	add	sp, sp, #0x50
  407d1c:	ret

0000000000407d20 <hex2mem@@Base>:
  407d20:	stp	x29, x30, [sp, #-48]!
  407d24:	cmp	w2, #0x1
  407d28:	stp	x22, x21, [sp, #16]
  407d2c:	stp	x20, x19, [sp, #32]
  407d30:	mov	x29, sp
  407d34:	b.lt	407d78 <hex2mem@@Base+0x58>  // b.tstop
  407d38:	mov	x19, x1
  407d3c:	mov	w20, w2
  407d40:	add	x21, x0, #0x1
  407d44:	ldurb	w0, [x21, #-1]
  407d48:	bl	4062a0 <get_hex@@Base>
  407d4c:	tbnz	w0, #31, 407d80 <hex2mem@@Base+0x60>
  407d50:	lsl	w22, w0, #4
  407d54:	strb	w22, [x19]
  407d58:	ldrb	w0, [x21]
  407d5c:	bl	4062a0 <get_hex@@Base>
  407d60:	tbnz	w0, #31, 407d80 <hex2mem@@Base+0x60>
  407d64:	orr	w8, w22, w0
  407d68:	subs	x20, x20, #0x1
  407d6c:	strb	w8, [x19], #1
  407d70:	add	x21, x21, #0x2
  407d74:	b.ne	407d44 <hex2mem@@Base+0x24>  // b.any
  407d78:	mov	w0, wzr
  407d7c:	b	407d84 <hex2mem@@Base+0x64>
  407d80:	mov	w0, #0xffffffff            	// #-1
  407d84:	ldp	x20, x19, [sp, #32]
  407d88:	ldp	x22, x21, [sp, #16]
  407d8c:	ldp	x29, x30, [sp], #48
  407d90:	ret

0000000000407d94 <addr64_n2a@@Base>:
  407d94:	sub	sp, sp, #0x60
  407d98:	stp	x26, x25, [sp, #32]
  407d9c:	stp	x22, x21, [sp, #64]
  407da0:	adrp	x21, 40d000 <rta_addattr8@@Base+0x4>
  407da4:	adrp	x26, 40d000 <rta_addattr8@@Base+0x4>
  407da8:	adrp	x22, 40d000 <rta_addattr8@@Base+0x4>
  407dac:	stp	x24, x23, [sp, #48]
  407db0:	stp	x20, x19, [sp, #80]
  407db4:	mov	x19, x2
  407db8:	mov	x20, x1
  407dbc:	mov	x24, xzr
  407dc0:	mov	x23, xzr
  407dc4:	add	x21, x21, #0xef2
  407dc8:	add	x25, sp, #0x8
  407dcc:	add	x26, x26, #0x957
  407dd0:	add	x22, x22, #0xef4
  407dd4:	stp	x29, x30, [sp, #16]
  407dd8:	add	x29, sp, #0x10
  407ddc:	str	x0, [sp, #8]
  407de0:	ldrh	w0, [x25, x24]
  407de4:	bl	406a40 <get_be16@@Base+0x44>
  407de8:	cmp	x24, #0x6
  407dec:	add	x8, x20, x23
  407df0:	csel	x21, x26, x21, eq  // eq = none
  407df4:	sub	x1, x19, x23
  407df8:	and	w3, w0, #0xffff
  407dfc:	mov	x0, x8
  407e00:	mov	x2, x22
  407e04:	mov	x4, x21
  407e08:	bl	404ec0 <snprintf@plt>
  407e0c:	tbnz	w0, #31, 407e24 <addr64_n2a@@Base+0x90>
  407e10:	add	x24, x24, #0x2
  407e14:	cmp	x24, #0x8
  407e18:	add	x23, x23, w0, sxtw
  407e1c:	b.ne	407de0 <addr64_n2a@@Base+0x4c>  // b.any
  407e20:	mov	w0, w23
  407e24:	ldp	x20, x19, [sp, #80]
  407e28:	ldp	x22, x21, [sp, #64]
  407e2c:	ldp	x24, x23, [sp, #48]
  407e30:	ldp	x26, x25, [sp, #32]
  407e34:	ldp	x29, x30, [sp, #16]
  407e38:	add	sp, sp, #0x60
  407e3c:	ret

0000000000407e40 <print_escape_buf@@Base>:
  407e40:	stp	x29, x30, [sp, #-64]!
  407e44:	stp	x24, x23, [sp, #16]
  407e48:	stp	x22, x21, [sp, #32]
  407e4c:	stp	x20, x19, [sp, #48]
  407e50:	mov	x29, sp
  407e54:	cbz	x1, 407ec4 <print_escape_buf@@Base+0x84>
  407e58:	mov	x19, x2
  407e5c:	mov	x20, x1
  407e60:	mov	x21, x0
  407e64:	bl	4050b0 <__ctype_b_loc@plt>
  407e68:	adrp	x23, 40d000 <rta_addattr8@@Base+0x4>
  407e6c:	mov	x22, x0
  407e70:	add	x23, x23, #0xef9
  407e74:	b	407e90 <print_escape_buf@@Base+0x50>
  407e78:	mov	x0, x23
  407e7c:	mov	w1, w24
  407e80:	bl	405280 <printf@plt>
  407e84:	subs	x20, x20, #0x1
  407e88:	add	x21, x21, #0x1
  407e8c:	b.eq	407ec4 <print_escape_buf@@Base+0x84>  // b.none
  407e90:	ldrb	w24, [x21]
  407e94:	cmp	x24, #0x5c
  407e98:	b.eq	407e78 <print_escape_buf@@Base+0x38>  // b.none
  407e9c:	ldr	x8, [x22]
  407ea0:	ldrh	w8, [x8, x24, lsl #1]
  407ea4:	tbz	w8, #14, 407e78 <print_escape_buf@@Base+0x38>
  407ea8:	mov	x0, x19
  407eac:	mov	w1, w24
  407eb0:	bl	405150 <strchr@plt>
  407eb4:	cbnz	x0, 407e78 <print_escape_buf@@Base+0x38>
  407eb8:	mov	w0, w24
  407ebc:	bl	4052c0 <putchar@plt>
  407ec0:	b	407e84 <print_escape_buf@@Base+0x44>
  407ec4:	ldp	x20, x19, [sp, #48]
  407ec8:	ldp	x22, x21, [sp, #32]
  407ecc:	ldp	x24, x23, [sp, #16]
  407ed0:	ldp	x29, x30, [sp], #64
  407ed4:	ret

0000000000407ed8 <print_timestamp@@Base>:
  407ed8:	sub	sp, sp, #0x60
  407edc:	stp	x29, x30, [sp, #64]
  407ee0:	add	x29, sp, #0x40
  407ee4:	stp	x20, x19, [sp, #80]
  407ee8:	mov	x19, x0
  407eec:	sub	x0, x29, #0x10
  407ef0:	mov	x1, xzr
  407ef4:	bl	404fa0 <gettimeofday@plt>
  407ef8:	sub	x0, x29, #0x10
  407efc:	bl	404ee0 <localtime@plt>
  407f00:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  407f04:	ldr	x8, [x8, #4032]
  407f08:	mov	x3, x0
  407f0c:	ldr	w8, [x8]
  407f10:	cbz	w8, 407f40 <print_timestamp@@Base+0x68>
  407f14:	adrp	x2, 40d000 <rta_addattr8@@Base+0x4>
  407f18:	add	x2, x2, #0xeff
  407f1c:	add	x0, sp, #0x8
  407f20:	mov	w1, #0x28                  	// #40
  407f24:	bl	404e90 <strftime@plt>
  407f28:	ldur	x3, [x29, #-8]
  407f2c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  407f30:	add	x1, x1, #0xf11
  407f34:	add	x2, sp, #0x8
  407f38:	mov	x0, x19
  407f3c:	b	407f6c <print_timestamp@@Base+0x94>
  407f40:	mov	x0, x3
  407f44:	bl	4051f0 <asctime@plt>
  407f48:	mov	x20, x0
  407f4c:	bl	404dc0 <strlen@plt>
  407f50:	add	x8, x0, x20
  407f54:	sturb	wzr, [x8, #-1]
  407f58:	ldur	x3, [x29, #-8]
  407f5c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  407f60:	add	x1, x1, #0xf1d
  407f64:	mov	x0, x19
  407f68:	mov	x2, x20
  407f6c:	bl	4052e0 <fprintf@plt>
  407f70:	ldp	x20, x19, [sp, #80]
  407f74:	ldp	x29, x30, [sp, #64]
  407f78:	mov	w0, wzr
  407f7c:	add	sp, sp, #0x60
  407f80:	ret

0000000000407f84 <print_name_and_link@@Base>:
  407f84:	sub	sp, sp, #0x70
  407f88:	stp	x29, x30, [sp, #64]
  407f8c:	stp	x22, x21, [sp, #80]
  407f90:	stp	x20, x19, [sp, #96]
  407f94:	ldr	x8, [x2, #40]
  407f98:	mov	x20, x1
  407f9c:	mov	x19, x0
  407fa0:	add	x29, sp, #0x40
  407fa4:	cbz	x8, 407fd8 <print_name_and_link@@Base+0x54>
  407fa8:	mov	x0, x8
  407fac:	mov	x22, x2
  407fb0:	bl	4080b0 <print_name_and_link@@Base+0x12c>
  407fb4:	cbz	w0, 407fe0 <print_name_and_link@@Base+0x5c>
  407fb8:	ldr	x8, [x22, #296]
  407fbc:	mov	w21, w0
  407fc0:	cbz	x8, 407ffc <print_name_and_link@@Base+0x78>
  407fc4:	bl	409a4c <is_json_context@@Base>
  407fc8:	tbz	w0, #0, 408034 <print_name_and_link@@Base+0xb0>
  407fcc:	mov	w0, w21
  407fd0:	bl	4080b8 <print_name_and_link@@Base+0x134>
  407fd4:	b	407fec <print_name_and_link@@Base+0x68>
  407fd8:	mov	w21, wzr
  407fdc:	b	408068 <print_name_and_link@@Base+0xe4>
  407fe0:	bl	409a4c <is_json_context@@Base>
  407fe4:	tbz	w0, #0, 40809c <print_name_and_link@@Base+0x118>
  407fe8:	bl	408110 <print_name_and_link@@Base+0x18c>
  407fec:	mov	x22, xzr
  407ff0:	mov	w21, wzr
  407ff4:	cbnz	x22, 408048 <print_name_and_link@@Base+0xc4>
  407ff8:	b	408068 <print_name_and_link@@Base+0xe4>
  407ffc:	mov	w0, w21
  408000:	bl	408f34 <ll_index_to_name@@Base>
  408004:	mov	x22, x0
  408008:	bl	409a4c <is_json_context@@Base>
  40800c:	tbz	w0, #0, 40801c <print_name_and_link@@Base+0x98>
  408010:	mov	x0, x22
  408014:	bl	4080e4 <print_name_and_link@@Base+0x160>
  408018:	mov	x22, xzr
  40801c:	mov	w0, w21
  408020:	bl	409108 <ll_index_to_flags@@Base>
  408024:	mvn	w8, w0
  408028:	and	w21, w8, #0x1
  40802c:	cbnz	x22, 408048 <print_name_and_link@@Base+0xc4>
  408030:	b	408068 <print_name_and_link@@Base+0xe4>
  408034:	mov	w0, w21
  408038:	bl	408ef8 <ll_idx_n2a@@Base>
  40803c:	mov	x22, x0
  408040:	mov	w21, wzr
  408044:	cbz	x22, 408068 <print_name_and_link@@Base+0xe4>
  408048:	adrp	x2, 40d000 <rta_addattr8@@Base+0x4>
  40804c:	add	x2, x2, #0xf45
  408050:	mov	x0, sp
  408054:	mov	w1, #0x40                  	// #64
  408058:	mov	x3, x20
  40805c:	mov	x4, x22
  408060:	bl	404ec0 <snprintf@plt>
  408064:	mov	x20, sp
  408068:	adrp	x2, 40d000 <rta_addattr8@@Base+0x4>
  40806c:	add	x2, x2, #0xf4b
  408070:	mov	w0, #0x4                   	// #4
  408074:	mov	w1, wzr
  408078:	mov	x3, x19
  40807c:	mov	x4, x20
  408080:	bl	40a0c8 <print_color_string@@Base>
  408084:	mov	w0, w21
  408088:	ldp	x20, x19, [sp, #96]
  40808c:	ldp	x22, x21, [sp, #80]
  408090:	ldp	x29, x30, [sp, #64]
  408094:	add	sp, sp, #0x70
  408098:	ret
  40809c:	adrp	x22, 40d000 <rta_addattr8@@Base+0x4>
  4080a0:	mov	w21, wzr
  4080a4:	add	x22, x22, #0xf40
  4080a8:	cbnz	x22, 408048 <print_name_and_link@@Base+0xc4>
  4080ac:	b	408068 <print_name_and_link@@Base+0xe4>
  4080b0:	ldr	w0, [x0, #4]
  4080b4:	ret
  4080b8:	stp	x29, x30, [sp, #-16]!
  4080bc:	adrp	x2, 40d000 <rta_addattr8@@Base+0x4>
  4080c0:	mov	w4, w0
  4080c4:	add	x2, x2, #0xf35
  4080c8:	mov	w0, #0x2                   	// #2
  4080cc:	mov	w1, #0x6                   	// #6
  4080d0:	mov	x3, xzr
  4080d4:	mov	x29, sp
  4080d8:	bl	409b80 <print_color_int@@Base>
  4080dc:	ldp	x29, x30, [sp], #16
  4080e0:	ret
  4080e4:	stp	x29, x30, [sp, #-16]!
  4080e8:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9a0>
  4080ec:	mov	x4, x0
  4080f0:	add	x2, x2, #0x5a1
  4080f4:	mov	w0, #0x2                   	// #2
  4080f8:	mov	w1, #0x6                   	// #6
  4080fc:	mov	x3, xzr
  408100:	mov	x29, sp
  408104:	bl	40a0c8 <print_color_string@@Base>
  408108:	ldp	x29, x30, [sp], #16
  40810c:	ret
  408110:	stp	x29, x30, [sp, #-16]!
  408114:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9a0>
  408118:	add	x2, x2, #0x5a1
  40811c:	mov	w0, #0x2                   	// #2
  408120:	mov	w1, #0x6                   	// #6
  408124:	mov	x3, xzr
  408128:	mov	x4, xzr
  40812c:	mov	x29, sp
  408130:	bl	40a324 <print_color_null@@Base>
  408134:	ldp	x29, x30, [sp], #16
  408138:	ret

000000000040813c <getcmdline@@Base>:
  40813c:	sub	sp, sp, #0x70
  408140:	stp	x29, x30, [sp, #16]
  408144:	stp	x28, x27, [sp, #32]
  408148:	stp	x26, x25, [sp, #48]
  40814c:	stp	x24, x23, [sp, #64]
  408150:	stp	x22, x21, [sp, #80]
  408154:	stp	x20, x19, [sp, #96]
  408158:	add	x29, sp, #0x10
  40815c:	mov	x19, x2
  408160:	mov	x20, x1
  408164:	mov	x21, x0
  408168:	bl	4050f0 <getline@plt>
  40816c:	mov	x22, x0
  408170:	tbnz	x0, #63, 4082b0 <getcmdline@@Base+0x174>
  408174:	adrp	x25, 41e000 <_IO_stdin_used@@Base+0x109a0>
  408178:	ldr	x25, [x25, #4000]
  40817c:	mov	w1, #0x23                  	// #35
  408180:	ldr	w8, [x25]
  408184:	add	w8, w8, #0x1
  408188:	str	w8, [x25]
  40818c:	ldr	x0, [x21]
  408190:	bl	405150 <strchr@plt>
  408194:	cbz	x0, 40819c <getcmdline@@Base+0x60>
  408198:	strb	wzr, [x0]
  40819c:	adrp	x23, 40d000 <rta_addattr8@@Base+0x4>
  4081a0:	add	x23, x23, #0xf52
  4081a4:	ldr	x0, [x21]
  4081a8:	mov	x1, x23
  4081ac:	bl	405230 <strstr@plt>
  4081b0:	cbz	x0, 4082b0 <getcmdline@@Base+0x174>
  4081b4:	mov	x28, x0
  4081b8:	add	x0, sp, #0x8
  4081bc:	mov	x1, sp
  4081c0:	mov	x2, x19
  4081c4:	stp	xzr, xzr, [sp]
  4081c8:	bl	4050f0 <getline@plt>
  4081cc:	mov	x27, x0
  4081d0:	tbnz	x0, #63, 408254 <getcmdline@@Base+0x118>
  4081d4:	ldr	w8, [x25]
  4081d8:	mov	w1, #0x23                  	// #35
  4081dc:	add	w8, w8, #0x1
  4081e0:	str	w8, [x25]
  4081e4:	strb	wzr, [x28]
  4081e8:	ldr	x0, [sp, #8]
  4081ec:	bl	405150 <strchr@plt>
  4081f0:	cbz	x0, 4081f8 <getcmdline@@Base+0xbc>
  4081f4:	strb	wzr, [x0]
  4081f8:	ldr	x28, [x21]
  4081fc:	mov	x0, x28
  408200:	bl	404dc0 <strlen@plt>
  408204:	ldr	x8, [sp, #8]
  408208:	mov	x24, x0
  40820c:	mov	x0, x8
  408210:	bl	404dc0 <strlen@plt>
  408214:	add	x8, x24, x0
  408218:	add	x1, x8, #0x1
  40821c:	mov	x0, x28
  408220:	str	x1, [x20]
  408224:	bl	405000 <realloc@plt>
  408228:	str	x0, [x21]
  40822c:	cbz	x0, 408280 <getcmdline@@Base+0x144>
  408230:	ldr	x1, [sp, #8]
  408234:	add	x8, x22, x27
  408238:	sub	x22, x8, #0x2
  40823c:	bl	404f70 <strcat@plt>
  408240:	ldr	x0, [sp, #8]
  408244:	bl	405110 <free@plt>
  408248:	mov	w8, #0x1                   	// #1
  40824c:	tbnz	w8, #0, 4081a4 <getcmdline@@Base+0x68>
  408250:	b	4082b4 <getcmdline@@Base+0x178>
  408254:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  408258:	ldr	x8, [x8, #3992]
  40825c:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  408260:	mov	w1, #0x1a                  	// #26
  408264:	mov	w2, #0x1                   	// #1
  408268:	ldr	x3, [x8]
  40826c:	add	x0, x0, #0xf55
  408270:	bl	405170 <fwrite@plt>
  408274:	mov	w8, wzr
  408278:	mov	x26, x27
  40827c:	b	40824c <getcmdline@@Base+0x110>
  408280:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  408284:	ldr	x8, [x8, #3992]
  408288:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  40828c:	mov	w1, #0xe                   	// #14
  408290:	mov	w2, #0x1                   	// #1
  408294:	ldr	x3, [x8]
  408298:	add	x0, x0, #0xf70
  40829c:	bl	405170 <fwrite@plt>
  4082a0:	mov	w8, wzr
  4082a4:	str	xzr, [x20]
  4082a8:	mov	x26, #0xffffffffffffffff    	// #-1
  4082ac:	b	40824c <getcmdline@@Base+0x110>
  4082b0:	mov	x26, x22
  4082b4:	mov	x0, x26
  4082b8:	ldp	x20, x19, [sp, #96]
  4082bc:	ldp	x22, x21, [sp, #80]
  4082c0:	ldp	x24, x23, [sp, #64]
  4082c4:	ldp	x26, x25, [sp, #48]
  4082c8:	ldp	x28, x27, [sp, #32]
  4082cc:	ldp	x29, x30, [sp, #16]
  4082d0:	add	sp, sp, #0x70
  4082d4:	ret

00000000004082d8 <makeargs@@Base>:
  4082d8:	stp	x29, x30, [sp, #-64]!
  4082dc:	stp	x24, x23, [sp, #16]
  4082e0:	stp	x22, x21, [sp, #32]
  4082e4:	stp	x20, x19, [sp, #48]
  4082e8:	ldrb	w8, [x0]
  4082ec:	mov	x19, x1
  4082f0:	mov	x29, sp
  4082f4:	cbz	w8, 40838c <makeargs@@Base+0xb4>
  4082f8:	adrp	x21, 40d000 <rta_addattr8@@Base+0x4>
  4082fc:	mov	x22, x0
  408300:	mov	w20, wzr
  408304:	sub	w23, w2, #0x1
  408308:	add	x21, x21, #0xbb1
  40830c:	b	408344 <makeargs@@Base+0x6c>
  408310:	mov	x0, x22
  408314:	mov	x1, x21
  408318:	add	w24, w20, #0x1
  40831c:	str	x22, [x19, w20, sxtw #3]
  408320:	bl	405260 <strcspn@plt>
  408324:	add	x0, x22, x0
  408328:	ldrb	w8, [x0]
  40832c:	mov	w20, w24
  408330:	cbz	w8, 408390 <makeargs@@Base+0xb8>
  408334:	mov	x22, x0
  408338:	ldrb	w8, [x22, #1]!
  40833c:	strb	wzr, [x0]
  408340:	cbz	w8, 408390 <makeargs@@Base+0xb8>
  408344:	mov	x0, x22
  408348:	mov	x1, x21
  40834c:	bl	405140 <strspn@plt>
  408350:	add	x22, x22, x0
  408354:	ldrb	w1, [x22]
  408358:	cbz	w1, 408390 <makeargs@@Base+0xb8>
  40835c:	cmp	w20, w23
  408360:	b.ge	4083ac <makeargs@@Base+0xd4>  // b.tcont
  408364:	cmp	w1, #0x27
  408368:	b.eq	408374 <makeargs@@Base+0x9c>  // b.none
  40836c:	cmp	w1, #0x22
  408370:	b.ne	408310 <makeargs@@Base+0x38>  // b.any
  408374:	add	x0, x22, #0x1
  408378:	str	x0, [x19, w20, sxtw #3]
  40837c:	bl	405150 <strchr@plt>
  408380:	cbz	x0, 4083c4 <makeargs@@Base+0xec>
  408384:	add	w20, w20, #0x1
  408388:	b	408334 <makeargs@@Base+0x5c>
  40838c:	mov	w20, wzr
  408390:	str	xzr, [x19, w20, sxtw #3]
  408394:	mov	w0, w20
  408398:	ldp	x20, x19, [sp, #48]
  40839c:	ldp	x22, x21, [sp, #32]
  4083a0:	ldp	x24, x23, [sp, #16]
  4083a4:	ldp	x29, x30, [sp], #64
  4083a8:	ret
  4083ac:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  4083b0:	ldr	x8, [x8, #3992]
  4083b4:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  4083b8:	add	x0, x0, #0xf7f
  4083bc:	mov	w1, #0x1e                  	// #30
  4083c0:	b	4083d8 <makeargs@@Base+0x100>
  4083c4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  4083c8:	ldr	x8, [x8, #3992]
  4083cc:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  4083d0:	add	x0, x0, #0xf9e
  4083d4:	mov	w1, #0x1b                  	// #27
  4083d8:	ldr	x3, [x8]
  4083dc:	mov	w2, #0x1                   	// #1
  4083e0:	bl	405170 <fwrite@plt>
  4083e4:	mov	w0, #0x1                   	// #1
  4083e8:	bl	404dd0 <exit@plt>

00000000004083ec <print_nlmsg_timestamp@@Base>:
  4083ec:	stp	x29, x30, [sp, #-48]!
  4083f0:	str	x21, [sp, #16]
  4083f4:	stp	x20, x19, [sp, #32]
  4083f8:	ldp	w8, w19, [x1, #16]
  4083fc:	mov	x29, sp
  408400:	mov	x20, x0
  408404:	add	x0, x29, #0x18
  408408:	str	x8, [x29, #24]
  40840c:	bl	404ee0 <localtime@plt>
  408410:	bl	4051f0 <asctime@plt>
  408414:	mov	x21, x0
  408418:	bl	404dc0 <strlen@plt>
  40841c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  408420:	add	x8, x0, x21
  408424:	add	x1, x1, #0xfba
  408428:	mov	x0, x20
  40842c:	mov	x2, x21
  408430:	mov	x3, x19
  408434:	sturb	wzr, [x8, #-1]
  408438:	bl	4052e0 <fprintf@plt>
  40843c:	ldp	x20, x19, [sp, #32]
  408440:	ldr	x21, [sp, #16]
  408444:	ldp	x29, x30, [sp], #48
  408448:	ret

000000000040844c <int_to_str@@Base>:
  40844c:	stp	x29, x30, [sp, #-32]!
  408450:	str	x19, [sp, #16]
  408454:	mov	x19, x1
  408458:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  40845c:	mov	w2, w0
  408460:	add	x1, x1, #0xfd0
  408464:	mov	x0, x19
  408468:	mov	x29, sp
  40846c:	bl	404e60 <sprintf@plt>
  408470:	mov	x0, x19
  408474:	ldr	x19, [sp, #16]
  408478:	ldp	x29, x30, [sp], #32
  40847c:	ret

0000000000408480 <get_guid@@Base>:
  408480:	stp	x29, x30, [sp, #-48]!
  408484:	stp	x20, x19, [sp, #32]
  408488:	mov	x20, x0
  40848c:	mov	x0, x1
  408490:	str	x21, [sp, #16]
  408494:	mov	x29, sp
  408498:	mov	x19, x1
  40849c:	bl	404dc0 <strlen@plt>
  4084a0:	cmp	x0, #0x17
  4084a4:	b.ne	408524 <get_guid@@Base+0xa4>  // b.any
  4084a8:	mov	w8, #0x2                   	// #2
  4084ac:	ldrb	w9, [x19, x8]
  4084b0:	cmp	w9, #0x3a
  4084b4:	b.ne	408524 <get_guid@@Base+0xa4>  // b.any
  4084b8:	add	x8, x8, #0x3
  4084bc:	cmp	x8, #0x17
  4084c0:	b.ne	4084ac <get_guid@@Base+0x2c>  // b.any
  4084c4:	mov	w21, #0x38                  	// #56
  4084c8:	str	xzr, [x20]
  4084cc:	add	x1, x29, #0x18
  4084d0:	mov	w2, #0x10                  	// #16
  4084d4:	mov	x0, x19
  4084d8:	bl	404db0 <strtoul@plt>
  4084dc:	mov	x8, x0
  4084e0:	cmp	x0, #0xff
  4084e4:	mov	w0, #0xffffffff            	// #-1
  4084e8:	b.hi	408528 <get_guid@@Base+0xa8>  // b.pmore
  4084ec:	ldr	x9, [x29, #24]
  4084f0:	add	x10, x19, #0x2
  4084f4:	cmp	x10, x9
  4084f8:	b.ne	408528 <get_guid@@Base+0xa8>  // b.any
  4084fc:	ldr	x9, [x20]
  408500:	lsl	x8, x8, x21
  408504:	sub	x21, x21, #0x8
  408508:	cmn	x21, #0x8
  40850c:	orr	x8, x9, x8
  408510:	add	x19, x19, #0x3
  408514:	str	x8, [x20]
  408518:	b.ne	4084cc <get_guid@@Base+0x4c>  // b.any
  40851c:	mov	w0, wzr
  408520:	b	408528 <get_guid@@Base+0xa8>
  408524:	mov	w0, #0xffffffff            	// #-1
  408528:	ldp	x20, x19, [sp, #32]
  40852c:	ldr	x21, [sp, #16]
  408530:	ldp	x29, x30, [sp], #48
  408534:	ret

0000000000408538 <get_real_family@@Base>:
  408538:	cmp	w0, #0x5
  40853c:	mov	w0, w1
  408540:	b.ne	408558 <get_real_family@@Base+0x20>  // b.any
  408544:	cmp	w0, #0x80
  408548:	b.eq	40855c <get_real_family@@Base+0x24>  // b.none
  40854c:	cmp	w0, #0x81
  408550:	b.ne	408558 <get_real_family@@Base+0x20>  // b.any
  408554:	mov	w0, #0xa                   	// #10
  408558:	ret
  40855c:	mov	w0, #0x2                   	// #2
  408560:	ret

0000000000408564 <get_rtnl_link_stats_rta@@Base>:
  408564:	stp	x29, x30, [sp, #-64]!
  408568:	stp	x28, x23, [sp, #16]
  40856c:	stp	x22, x21, [sp, #32]
  408570:	stp	x20, x19, [sp, #48]
  408574:	mov	x29, sp
  408578:	sub	sp, sp, #0x9b0
  40857c:	ldr	x22, [x1, #184]
  408580:	mov	x19, x0
  408584:	cbz	x22, 408594 <get_rtnl_link_stats_rta@@Base+0x30>
  408588:	mov	w20, #0xc0                  	// #192
  40858c:	mov	x21, x19
  408590:	b	4085a4 <get_rtnl_link_stats_rta@@Base+0x40>
  408594:	ldr	x22, [x1, #56]
  408598:	cbz	x22, 40860c <get_rtnl_link_stats_rta@@Base+0xa8>
  40859c:	sub	x21, x29, #0x60
  4085a0:	mov	w20, #0x60                  	// #96
  4085a4:	ldrh	w8, [x22]
  4085a8:	sub	x23, x8, #0x4
  4085ac:	subs	w9, w20, w23
  4085b0:	mov	w8, w20
  4085b4:	b.le	4085cc <get_rtnl_link_stats_rta@@Base+0x68>
  4085b8:	add	x0, x21, x23
  4085bc:	sxtw	x2, w9
  4085c0:	mov	w1, wzr
  4085c4:	bl	404f90 <memset@plt>
  4085c8:	mov	w8, w23
  4085cc:	add	x1, x22, #0x4
  4085d0:	sxtw	x2, w8
  4085d4:	mov	x0, x21
  4085d8:	bl	404d90 <memcpy@plt>
  4085dc:	cmp	x21, x19
  4085e0:	b.eq	4085f0 <get_rtnl_link_stats_rta@@Base+0x8c>  // b.none
  4085e4:	mov	x0, x19
  4085e8:	mov	x1, x21
  4085ec:	bl	4086a8 <get_rtnl_link_stats_rta@@Base+0x144>
  4085f0:	mov	w0, w20
  4085f4:	add	sp, sp, #0x9b0
  4085f8:	ldp	x20, x19, [sp, #48]
  4085fc:	ldp	x22, x21, [sp, #32]
  408600:	ldp	x28, x23, [sp, #16]
  408604:	ldp	x29, x30, [sp], #64
  408608:	ret
  40860c:	ldr	x2, [x1, #96]
  408610:	cbz	x2, 408640 <get_rtnl_link_stats_rta@@Base+0xdc>
  408614:	ldrh	w8, [x2], #4
  408618:	add	x0, sp, #0x8
  40861c:	mov	w1, #0x128                 	// #296
  408620:	sub	w3, w8, #0x4
  408624:	bl	40d0d8 <parse_rtattr@@Base>
  408628:	ldr	x1, [sp, #32]
  40862c:	cbz	x1, 408638 <get_rtnl_link_stats_rta@@Base+0xd4>
  408630:	mov	x0, x19
  408634:	bl	408648 <get_rtnl_link_stats_rta@@Base+0xe4>
  408638:	mov	w20, #0xc0                  	// #192
  40863c:	b	4085f0 <get_rtnl_link_stats_rta@@Base+0x8c>
  408640:	mov	w20, #0xffffffff            	// #-1
  408644:	b	4085f0 <get_rtnl_link_stats_rta@@Base+0x8c>
  408648:	movi	v0.2d, #0x0
  40864c:	stp	q0, q0, [x0, #160]
  408650:	stp	q0, q0, [x0, #128]
  408654:	stp	q0, q0, [x0, #96]
  408658:	stp	q0, q0, [x0, #64]
  40865c:	stp	q0, q0, [x0, #32]
  408660:	stp	q0, q0, [x0]
  408664:	ldur	x8, [x1, #12]
  408668:	str	x8, [x0]
  40866c:	ldur	x8, [x1, #20]
  408670:	str	x8, [x0, #16]
  408674:	ldur	x8, [x1, #44]
  408678:	str	x8, [x0, #8]
  40867c:	ldur	x8, [x1, #52]
  408680:	str	x8, [x0, #24]
  408684:	ldur	x8, [x1, #108]
  408688:	str	x8, [x0, #32]
  40868c:	ldur	x8, [x1, #116]
  408690:	str	x8, [x0, #40]
  408694:	ldur	x8, [x1, #188]
  408698:	str	x8, [x0, #64]
  40869c:	ldur	x8, [x1, #252]
  4086a0:	str	x8, [x0, #104]
  4086a4:	ret
  4086a8:	add	x8, x1, #0x60
  4086ac:	ldr	w9, [x1], #4
  4086b0:	cmp	x1, x8
  4086b4:	str	x9, [x0], #8
  4086b8:	b.cc	4086ac <get_rtnl_link_stats_rta@@Base+0x148>  // b.lo, b.ul, b.last
  4086bc:	ret

00000000004086c0 <strlcpy@@Base>:
  4086c0:	stp	x29, x30, [sp, #-48]!
  4086c4:	stp	x20, x19, [sp, #32]
  4086c8:	mov	x19, x0
  4086cc:	mov	x0, x1
  4086d0:	stp	x22, x21, [sp, #16]
  4086d4:	mov	x29, sp
  4086d8:	mov	x22, x2
  4086dc:	mov	x21, x1
  4086e0:	bl	404dc0 <strlen@plt>
  4086e4:	mov	x20, x0
  4086e8:	cbz	x22, 40870c <strlcpy@@Base+0x4c>
  4086ec:	sub	x8, x22, #0x1
  4086f0:	cmp	x20, x8
  4086f4:	csel	x22, x20, x8, cc  // cc = lo, ul, last
  4086f8:	mov	x0, x19
  4086fc:	mov	x1, x21
  408700:	mov	x2, x22
  408704:	bl	404d90 <memcpy@plt>
  408708:	strb	wzr, [x19, x22]
  40870c:	mov	x0, x20
  408710:	ldp	x20, x19, [sp, #32]
  408714:	ldp	x22, x21, [sp, #16]
  408718:	ldp	x29, x30, [sp], #48
  40871c:	ret

0000000000408720 <strlcat@@Base>:
  408720:	stp	x29, x30, [sp, #-48]!
  408724:	stp	x22, x21, [sp, #16]
  408728:	stp	x20, x19, [sp, #32]
  40872c:	mov	x29, sp
  408730:	mov	x21, x2
  408734:	mov	x20, x1
  408738:	mov	x22, x0
  40873c:	bl	404dc0 <strlen@plt>
  408740:	mov	x19, x0
  408744:	cmp	x0, x21
  408748:	b.cs	408760 <strlcat@@Base+0x40>  // b.hs, b.nlast
  40874c:	add	x0, x22, x19
  408750:	sub	x2, x21, x19
  408754:	mov	x1, x20
  408758:	bl	4086c0 <strlcpy@@Base>
  40875c:	b	408768 <strlcat@@Base+0x48>
  408760:	mov	x0, x20
  408764:	bl	404dc0 <strlen@plt>
  408768:	add	x0, x0, x19
  40876c:	ldp	x20, x19, [sp, #32]
  408770:	ldp	x22, x21, [sp, #16]
  408774:	ldp	x29, x30, [sp], #48
  408778:	ret

000000000040877c <drop_cap@@Base>:
  40877c:	stp	x29, x30, [sp, #-32]!
  408780:	str	x19, [sp, #16]
  408784:	mov	x29, sp
  408788:	bl	404e70 <getuid@plt>
  40878c:	cbz	w0, 4087e0 <drop_cap@@Base+0x64>
  408790:	bl	404e20 <geteuid@plt>
  408794:	cbz	w0, 4087e0 <drop_cap@@Base+0x64>
  408798:	bl	4050d0 <cap_get_proc@plt>
  40879c:	cbz	x0, 4087ec <drop_cap@@Base+0x70>
  4087a0:	add	x3, x29, #0x1c
  4087a4:	mov	w1, #0xc                   	// #12
  4087a8:	mov	w2, #0x2                   	// #2
  4087ac:	mov	x19, x0
  4087b0:	bl	404fd0 <cap_get_flag@plt>
  4087b4:	cbnz	w0, 4087ec <drop_cap@@Base+0x70>
  4087b8:	ldr	w8, [x29, #28]
  4087bc:	cbnz	w8, 4087d8 <drop_cap@@Base+0x5c>
  4087c0:	mov	x0, x19
  4087c4:	bl	4051c0 <cap_clear@plt>
  4087c8:	cbnz	w0, 4087ec <drop_cap@@Base+0x70>
  4087cc:	mov	x0, x19
  4087d0:	bl	405010 <cap_set_proc@plt>
  4087d4:	cbnz	w0, 4087ec <drop_cap@@Base+0x70>
  4087d8:	mov	x0, x19
  4087dc:	bl	405200 <cap_free@plt>
  4087e0:	ldr	x19, [sp, #16]
  4087e4:	ldp	x29, x30, [sp], #32
  4087e8:	ret
  4087ec:	mov	w0, #0x1                   	// #1
  4087f0:	bl	404dd0 <exit@plt>

00000000004087f4 <get_time@@Base>:
  4087f4:	sub	sp, sp, #0x40
  4087f8:	str	x21, [sp, #40]
  4087fc:	mov	x21, x1
  408800:	stp	x20, x19, [sp, #48]
  408804:	mov	x19, x0
  408808:	add	x1, sp, #0x8
  40880c:	mov	x0, x21
  408810:	str	d8, [sp, #16]
  408814:	stp	x29, x30, [sp, #24]
  408818:	add	x29, sp, #0x10
  40881c:	bl	404e10 <strtod@plt>
  408820:	ldr	x20, [sp, #8]
  408824:	cmp	x20, x21
  408828:	b.eq	4088ec <get_time@@Base+0xf8>  // b.none
  40882c:	ldrb	w8, [x20]
  408830:	mov	v8.16b, v0.16b
  408834:	cbz	w8, 408904 <get_time@@Base+0x110>
  408838:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  40883c:	add	x1, x1, #0xc62
  408840:	mov	x0, x20
  408844:	bl	404ff0 <strcasecmp@plt>
  408848:	cbz	w0, 4088f4 <get_time@@Base+0x100>
  40884c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  408850:	add	x1, x1, #0xc79
  408854:	mov	x0, x20
  408858:	bl	404ff0 <strcasecmp@plt>
  40885c:	cbz	w0, 4088f4 <get_time@@Base+0x100>
  408860:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  408864:	add	x1, x1, #0xc7e
  408868:	mov	x0, x20
  40886c:	bl	404ff0 <strcasecmp@plt>
  408870:	cbz	w0, 4088f4 <get_time@@Base+0x100>
  408874:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  408878:	add	x1, x1, #0xd
  40887c:	mov	x0, x20
  408880:	bl	404ff0 <strcasecmp@plt>
  408884:	cbz	w0, 408928 <get_time@@Base+0x134>
  408888:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  40888c:	add	x1, x1, #0xc78
  408890:	mov	x0, x20
  408894:	bl	404ff0 <strcasecmp@plt>
  408898:	cbz	w0, 408928 <get_time@@Base+0x134>
  40889c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  4088a0:	add	x1, x1, #0xc7d
  4088a4:	mov	x0, x20
  4088a8:	bl	404ff0 <strcasecmp@plt>
  4088ac:	cbz	w0, 408928 <get_time@@Base+0x134>
  4088b0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  4088b4:	add	x1, x1, #0x26
  4088b8:	mov	x0, x20
  4088bc:	bl	404ff0 <strcasecmp@plt>
  4088c0:	cbz	w0, 408904 <get_time@@Base+0x110>
  4088c4:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  4088c8:	add	x1, x1, #0xfd3
  4088cc:	mov	x0, x20
  4088d0:	bl	404ff0 <strcasecmp@plt>
  4088d4:	cbz	w0, 408904 <get_time@@Base+0x110>
  4088d8:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  4088dc:	add	x1, x1, #0xfd8
  4088e0:	mov	x0, x20
  4088e4:	bl	404ff0 <strcasecmp@plt>
  4088e8:	cbz	w0, 408904 <get_time@@Base+0x110>
  4088ec:	mov	w0, #0xffffffff            	// #-1
  4088f0:	b	408910 <get_time@@Base+0x11c>
  4088f4:	mov	x8, #0x848000000000        	// #145685290680320
  4088f8:	movk	x8, #0x412e, lsl #48
  4088fc:	fmov	d0, x8
  408900:	fmul	d8, d8, d0
  408904:	fcvtzu	w8, d8
  408908:	mov	w0, wzr
  40890c:	str	w8, [x19]
  408910:	ldp	x20, x19, [sp, #48]
  408914:	ldr	x21, [sp, #40]
  408918:	ldp	x29, x30, [sp, #24]
  40891c:	ldr	d8, [sp, #16]
  408920:	add	sp, sp, #0x40
  408924:	ret
  408928:	mov	x8, #0x400000000000        	// #70368744177664
  40892c:	movk	x8, #0x408f, lsl #48
  408930:	b	4088fc <get_time@@Base+0x108>

0000000000408934 <sprint_time@@Base>:
  408934:	stp	x29, x30, [sp, #-32]!
  408938:	str	x19, [sp, #16]
  40893c:	mov	x19, x1
  408940:	mov	w1, w0
  408944:	mov	x0, x19
  408948:	mov	x29, sp
  40894c:	bl	408960 <sprint_time@@Base+0x2c>
  408950:	mov	x0, x19
  408954:	ldr	x19, [sp, #16]
  408958:	ldp	x29, x30, [sp], #32
  40895c:	ret
  408960:	stp	x29, x30, [sp, #-16]!
  408964:	mov	w8, #0x4240                	// #16960
  408968:	movk	w8, #0xf, lsl #16
  40896c:	cmp	w1, w8
  408970:	ucvtf	d0, w1
  408974:	mov	x29, sp
  408978:	b.cc	408998 <sprint_time@@Base+0x64>  // b.lo, b.ul, b.last
  40897c:	mov	x8, #0x848000000000        	// #145685290680320
  408980:	movk	x8, #0x412e, lsl #48
  408984:	fmov	d1, x8
  408988:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40898c:	fdiv	d0, d0, d1
  408990:	add	x2, x2, #0x3
  408994:	b	4089bc <sprint_time@@Base+0x88>
  408998:	mov	w3, w1
  40899c:	cmp	w1, #0x3e8
  4089a0:	b.cc	4089cc <sprint_time@@Base+0x98>  // b.lo, b.ul, b.last
  4089a4:	mov	x8, #0x400000000000        	// #70368744177664
  4089a8:	movk	x8, #0x408f, lsl #48
  4089ac:	fmov	d1, x8
  4089b0:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9a0>
  4089b4:	fdiv	d0, d0, d1
  4089b8:	add	x2, x2, #0x9
  4089bc:	mov	w1, #0x3f                  	// #63
  4089c0:	bl	404ec0 <snprintf@plt>
  4089c4:	ldp	x29, x30, [sp], #16
  4089c8:	ret
  4089cc:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9a0>
  4089d0:	add	x2, x2, #0x10
  4089d4:	mov	w1, #0x3f                  	// #63
  4089d8:	bl	404ec0 <snprintf@plt>
  4089dc:	ldp	x29, x30, [sp], #16
  4089e0:	ret

00000000004089e4 <get_time64@@Base>:
  4089e4:	sub	sp, sp, #0x40
  4089e8:	str	x21, [sp, #40]
  4089ec:	mov	x21, x1
  4089f0:	stp	x20, x19, [sp, #48]
  4089f4:	mov	x19, x0
  4089f8:	add	x1, sp, #0x8
  4089fc:	mov	x0, x21
  408a00:	str	d8, [sp, #16]
  408a04:	stp	x29, x30, [sp, #24]
  408a08:	add	x29, sp, #0x10
  408a0c:	bl	404e10 <strtod@plt>
  408a10:	ldr	x20, [sp, #8]
  408a14:	cmp	x20, x21
  408a18:	b.eq	408b18 <get_time64@@Base+0x134>  // b.none
  408a1c:	ldrb	w8, [x20]
  408a20:	mov	v8.16b, v0.16b
  408a24:	cbz	w8, 408b30 <get_time64@@Base+0x14c>
  408a28:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  408a2c:	add	x1, x1, #0xc62
  408a30:	mov	x0, x20
  408a34:	bl	404ff0 <strcasecmp@plt>
  408a38:	cbz	w0, 408b20 <get_time64@@Base+0x13c>
  408a3c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  408a40:	add	x1, x1, #0xc79
  408a44:	mov	x0, x20
  408a48:	bl	404ff0 <strcasecmp@plt>
  408a4c:	cbz	w0, 408b20 <get_time64@@Base+0x13c>
  408a50:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  408a54:	add	x1, x1, #0xc7e
  408a58:	mov	x0, x20
  408a5c:	bl	404ff0 <strcasecmp@plt>
  408a60:	cbz	w0, 408b20 <get_time64@@Base+0x13c>
  408a64:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  408a68:	add	x1, x1, #0xd
  408a6c:	mov	x0, x20
  408a70:	bl	404ff0 <strcasecmp@plt>
  408a74:	cbz	w0, 408b54 <get_time64@@Base+0x170>
  408a78:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  408a7c:	add	x1, x1, #0xc78
  408a80:	mov	x0, x20
  408a84:	bl	404ff0 <strcasecmp@plt>
  408a88:	cbz	w0, 408b54 <get_time64@@Base+0x170>
  408a8c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  408a90:	add	x1, x1, #0xc7d
  408a94:	mov	x0, x20
  408a98:	bl	404ff0 <strcasecmp@plt>
  408a9c:	cbz	w0, 408b54 <get_time64@@Base+0x170>
  408aa0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  408aa4:	add	x1, x1, #0x26
  408aa8:	mov	x0, x20
  408aac:	bl	404ff0 <strcasecmp@plt>
  408ab0:	cbz	w0, 408b60 <get_time64@@Base+0x17c>
  408ab4:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  408ab8:	add	x1, x1, #0xfd3
  408abc:	mov	x0, x20
  408ac0:	bl	404ff0 <strcasecmp@plt>
  408ac4:	cbz	w0, 408b60 <get_time64@@Base+0x17c>
  408ac8:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  408acc:	add	x1, x1, #0xfd8
  408ad0:	mov	x0, x20
  408ad4:	bl	404ff0 <strcasecmp@plt>
  408ad8:	cbz	w0, 408b60 <get_time64@@Base+0x17c>
  408adc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  408ae0:	add	x1, x1, #0x2d
  408ae4:	mov	x0, x20
  408ae8:	bl	404ff0 <strcasecmp@plt>
  408aec:	cbz	w0, 408b30 <get_time64@@Base+0x14c>
  408af0:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  408af4:	add	x1, x1, #0xfde
  408af8:	mov	x0, x20
  408afc:	bl	404ff0 <strcasecmp@plt>
  408b00:	cbz	w0, 408b30 <get_time64@@Base+0x14c>
  408b04:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  408b08:	add	x1, x1, #0xfe3
  408b0c:	mov	x0, x20
  408b10:	bl	404ff0 <strcasecmp@plt>
  408b14:	cbz	w0, 408b30 <get_time64@@Base+0x14c>
  408b18:	mov	w0, #0xffffffff            	// #-1
  408b1c:	b	408b3c <get_time64@@Base+0x158>
  408b20:	mov	x8, #0xcd6500000000        	// #225833675390976
  408b24:	movk	x8, #0x41cd, lsl #48
  408b28:	fmov	d0, x8
  408b2c:	fmul	d8, d8, d0
  408b30:	fcvtzs	x8, d8
  408b34:	mov	w0, wzr
  408b38:	str	x8, [x19]
  408b3c:	ldp	x20, x19, [sp, #48]
  408b40:	ldr	x21, [sp, #40]
  408b44:	ldp	x29, x30, [sp, #24]
  408b48:	ldr	d8, [sp, #16]
  408b4c:	add	sp, sp, #0x40
  408b50:	ret
  408b54:	mov	x8, #0x848000000000        	// #145685290680320
  408b58:	movk	x8, #0x412e, lsl #48
  408b5c:	b	408b28 <get_time64@@Base+0x144>
  408b60:	mov	x8, #0x400000000000        	// #70368744177664
  408b64:	movk	x8, #0x408f, lsl #48
  408b68:	b	408b28 <get_time64@@Base+0x144>

0000000000408b6c <sprint_time64@@Base>:
  408b6c:	stp	x29, x30, [sp, #-32]!
  408b70:	str	x19, [sp, #16]
  408b74:	mov	x19, x1
  408b78:	mov	x1, x0
  408b7c:	mov	x0, x19
  408b80:	mov	x29, sp
  408b84:	bl	408b98 <sprint_time64@@Base+0x2c>
  408b88:	mov	x0, x19
  408b8c:	ldr	x19, [sp, #16]
  408b90:	ldp	x29, x30, [sp], #32
  408b94:	ret
  408b98:	stp	x29, x30, [sp, #-16]!
  408b9c:	mov	w8, #0xca00                	// #51712
  408ba0:	movk	w8, #0x3b9a, lsl #16
  408ba4:	cmp	x1, x8
  408ba8:	scvtf	d0, x1
  408bac:	mov	x29, sp
  408bb0:	b.lt	408bd0 <sprint_time64@@Base+0x64>  // b.tstop
  408bb4:	mov	x8, #0xcd6500000000        	// #225833675390976
  408bb8:	movk	x8, #0x41cd, lsl #48
  408bbc:	fmov	d1, x8
  408bc0:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9a0>
  408bc4:	fdiv	d0, d0, d1
  408bc8:	add	x2, x2, #0x15
  408bcc:	b	408c20 <sprint_time64@@Base+0xb4>
  408bd0:	mov	w8, #0x4240                	// #16960
  408bd4:	movk	w8, #0xf, lsl #16
  408bd8:	mov	x3, x1
  408bdc:	cmp	x1, x8
  408be0:	b.lt	408c00 <sprint_time64@@Base+0x94>  // b.tstop
  408be4:	mov	x8, #0x848000000000        	// #145685290680320
  408be8:	movk	x8, #0x412e, lsl #48
  408bec:	fmov	d1, x8
  408bf0:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9a0>
  408bf4:	fdiv	d0, d0, d1
  408bf8:	add	x2, x2, #0x1b
  408bfc:	b	408c20 <sprint_time64@@Base+0xb4>
  408c00:	cmp	x3, #0x3e8
  408c04:	b.lt	408c30 <sprint_time64@@Base+0xc4>  // b.tstop
  408c08:	mov	x8, #0x400000000000        	// #70368744177664
  408c0c:	movk	x8, #0x408f, lsl #48
  408c10:	fmov	d1, x8
  408c14:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9a0>
  408c18:	fdiv	d0, d0, d1
  408c1c:	add	x2, x2, #0x22
  408c20:	mov	w1, #0x3f                  	// #63
  408c24:	bl	404ec0 <snprintf@plt>
  408c28:	ldp	x29, x30, [sp], #16
  408c2c:	ret
  408c30:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9a0>
  408c34:	add	x2, x2, #0x29
  408c38:	mov	w1, #0x3f                  	// #63
  408c3c:	bl	404ec0 <snprintf@plt>
  408c40:	ldp	x29, x30, [sp], #16
  408c44:	ret
  408c48:	stp	x29, x30, [sp, #-48]!
  408c4c:	str	x21, [sp, #16]
  408c50:	stp	x20, x19, [sp, #32]
  408c54:	mov	x19, x1
  408c58:	mov	x20, x0
  408c5c:	mov	x21, xzr
  408c60:	mov	x29, sp
  408c64:	add	x1, x29, #0x18
  408c68:	mov	x0, x19
  408c6c:	mov	w2, wzr
  408c70:	bl	404db0 <strtoul@plt>
  408c74:	cmp	x0, #0xff
  408c78:	mov	w8, #0x1                   	// #1
  408c7c:	b.hi	408cb8 <sprint_time64@@Base+0x14c>  // b.pmore
  408c80:	ldr	x9, [x29, #24]
  408c84:	cmp	x9, x19
  408c88:	b.eq	408cb8 <sprint_time64@@Base+0x14c>  // b.none
  408c8c:	strb	w0, [x20, x21]
  408c90:	ldrb	w8, [x9]
  408c94:	cbz	w8, 408ccc <sprint_time64@@Base+0x160>
  408c98:	cmp	x21, #0x3
  408c9c:	cset	w10, ne  // ne = any
  408ca0:	cmp	w8, #0x2e
  408ca4:	cset	w8, eq  // eq = none
  408ca8:	and	w11, w10, w8
  408cac:	tst	w10, w8
  408cb0:	csinc	x19, x19, x9, eq  // eq = none
  408cb4:	eor	w8, w11, #0x1
  408cb8:	cbnz	w8, 408cd4 <sprint_time64@@Base+0x168>
  408cbc:	add	x21, x21, #0x1
  408cc0:	cmp	x21, #0x4
  408cc4:	b.ne	408c64 <sprint_time64@@Base+0xf8>  // b.any
  408cc8:	b	408cdc <sprint_time64@@Base+0x170>
  408ccc:	mov	w8, #0x2                   	// #2
  408cd0:	cbz	w8, 408cbc <sprint_time64@@Base+0x150>
  408cd4:	cmp	w8, #0x2
  408cd8:	b.ne	408ce4 <sprint_time64@@Base+0x178>  // b.any
  408cdc:	mov	w0, #0x1                   	// #1
  408ce0:	b	408ce8 <sprint_time64@@Base+0x17c>
  408ce4:	mov	w0, #0xffffffff            	// #-1
  408ce8:	ldp	x20, x19, [sp, #32]
  408cec:	ldr	x21, [sp, #16]
  408cf0:	ldp	x29, x30, [sp], #48
  408cf4:	ret

0000000000408cf8 <namehash@@Base>:
  408cf8:	ldrb	w8, [x0]
  408cfc:	cbz	w8, 408d1c <namehash@@Base+0x24>
  408d00:	add	x9, x0, #0x1
  408d04:	mov	w0, #0x1505                	// #5381
  408d08:	add	w10, w0, w0, lsl #5
  408d0c:	add	w0, w10, w8, uxtb
  408d10:	ldrb	w8, [x9], #1
  408d14:	cbnz	w8, 408d08 <namehash@@Base+0x10>
  408d18:	ret
  408d1c:	mov	w0, #0x1505                	// #5381
  408d20:	ret

0000000000408d24 <ll_remember_index@@Base>:
  408d24:	sub	sp, sp, #0x1f0
  408d28:	stp	x29, x30, [sp, #432]
  408d2c:	stp	x22, x21, [sp, #464]
  408d30:	stp	x20, x19, [sp, #480]
  408d34:	ldrh	w19, [x0, #4]
  408d38:	str	x28, [sp, #448]
  408d3c:	add	x29, sp, #0x1b0
  408d40:	and	w8, w19, #0xfffe
  408d44:	cmp	w8, #0x10
  408d48:	b.ne	408dc8 <ll_remember_index@@Base+0xa4>  // b.any
  408d4c:	ldr	w8, [x0]
  408d50:	mov	x22, x0
  408d54:	subs	w21, w8, #0x20
  408d58:	b.cs	408d64 <ll_remember_index@@Base+0x40>  // b.hs, b.nlast
  408d5c:	mov	w0, #0xffffffff            	// #-1
  408d60:	b	408dcc <ll_remember_index@@Base+0xa8>
  408d64:	ldr	w0, [x22, #20]
  408d68:	bl	408de4 <ll_remember_index@@Base+0xc0>
  408d6c:	cmp	w19, #0x11
  408d70:	mov	x19, x0
  408d74:	b.ne	408d88 <ll_remember_index@@Base+0x64>  // b.any
  408d78:	cbz	x19, 408dc8 <ll_remember_index@@Base+0xa4>
  408d7c:	mov	x0, x19
  408d80:	bl	408e20 <ll_remember_index@@Base+0xfc>
  408d84:	b	408dc8 <ll_remember_index@@Base+0xa4>
  408d88:	add	x2, x22, #0x20
  408d8c:	mov	x0, sp
  408d90:	mov	w1, #0x35                  	// #53
  408d94:	mov	w4, #0x8000                	// #32768
  408d98:	mov	w3, w21
  408d9c:	add	x20, x22, #0x10
  408da0:	bl	40d0f4 <parse_rtattr_flags@@Base>
  408da4:	cbz	x19, 408dbc <ll_remember_index@@Base+0x98>
  408da8:	mov	x2, sp
  408dac:	mov	x0, x19
  408db0:	mov	x1, x20
  408db4:	bl	408e4c <ll_remember_index@@Base+0x128>
  408db8:	b	408dc8 <ll_remember_index@@Base+0xa4>
  408dbc:	mov	x1, sp
  408dc0:	mov	x0, x20
  408dc4:	bl	408ea8 <ll_remember_index@@Base+0x184>
  408dc8:	mov	w0, wzr
  408dcc:	ldp	x20, x19, [sp, #480]
  408dd0:	ldp	x22, x21, [sp, #464]
  408dd4:	ldr	x28, [sp, #448]
  408dd8:	ldp	x29, x30, [sp, #432]
  408ddc:	add	sp, sp, #0x1f0
  408de0:	ret
  408de4:	adrp	x9, 41f000 <memcpy@GLIBC_2.17>
  408de8:	and	w8, w0, #0x3ff
  408dec:	add	x9, x9, #0xd70
  408df0:	ldr	x9, [x9, w8, uxtw #3]
  408df4:	cbz	x9, 408e10 <ll_remember_index@@Base+0xec>
  408df8:	ldr	w10, [x9, #36]
  408dfc:	cmp	w10, w0
  408e00:	csel	x8, x9, x8, eq  // eq = none
  408e04:	b.eq	408e18 <ll_remember_index@@Base+0xf4>  // b.none
  408e08:	ldr	x9, [x9]
  408e0c:	cbnz	x9, 408df8 <ll_remember_index@@Base+0xd4>
  408e10:	mov	x0, xzr
  408e14:	ret
  408e18:	mov	x0, x8
  408e1c:	ret
  408e20:	stp	x29, x30, [sp, #-32]!
  408e24:	str	x19, [sp, #16]
  408e28:	mov	x29, sp
  408e2c:	mov	x19, x0
  408e30:	bl	40930c <ll_init_map@@Base+0x94>
  408e34:	mov	w1, #0x1                   	// #1
  408e38:	mov	x0, x19
  408e3c:	bl	409348 <ll_init_map@@Base+0xd0>
  408e40:	ldr	x19, [sp, #16]
  408e44:	ldp	x29, x30, [sp], #32
  408e48:	ret
  408e4c:	stp	x29, x30, [sp, #-48]!
  408e50:	stp	x20, x19, [sp, #32]
  408e54:	ldr	x8, [x2, #24]
  408e58:	str	x21, [sp, #16]
  408e5c:	mov	x19, x2
  408e60:	mov	x20, x1
  408e64:	mov	x21, x0
  408e68:	mov	x29, sp
  408e6c:	cbz	x8, 408e88 <ll_remember_index@@Base+0x164>
  408e70:	mov	x0, x8
  408e74:	bl	40941c <ll_init_map@@Base+0x1a4>
  408e78:	mov	x2, x0
  408e7c:	mov	x0, x21
  408e80:	mov	x1, x20
  408e84:	bl	4093b8 <ll_init_map@@Base+0x140>
  408e88:	mov	x0, x21
  408e8c:	mov	x1, x20
  408e90:	mov	x2, x19
  408e94:	bl	409424 <ll_init_map@@Base+0x1ac>
  408e98:	ldp	x20, x19, [sp, #32]
  408e9c:	ldr	x21, [sp, #16]
  408ea0:	ldp	x29, x30, [sp], #48
  408ea4:	ret
  408ea8:	stp	x29, x30, [sp, #-32]!
  408eac:	stp	x20, x19, [sp, #16]
  408eb0:	ldr	x8, [x1, #24]
  408eb4:	mov	x29, sp
  408eb8:	cbz	x8, 408eec <ll_remember_index@@Base+0x1c8>
  408ebc:	mov	x20, x0
  408ec0:	mov	x0, x8
  408ec4:	mov	x19, x1
  408ec8:	bl	40941c <ll_init_map@@Base+0x1a4>
  408ecc:	mov	x1, x0
  408ed0:	mov	x0, x20
  408ed4:	mov	x2, xzr
  408ed8:	bl	4095c0 <ll_init_map@@Base+0x348>
  408edc:	cbz	x0, 408eec <ll_remember_index@@Base+0x1c8>
  408ee0:	mov	x1, x20
  408ee4:	mov	x2, x19
  408ee8:	bl	409520 <ll_init_map@@Base+0x2a8>
  408eec:	ldp	x20, x19, [sp, #16]
  408ef0:	ldp	x29, x30, [sp], #32
  408ef4:	ret

0000000000408ef8 <ll_idx_n2a@@Base>:
  408ef8:	stp	x29, x30, [sp, #-32]!
  408efc:	str	x19, [sp, #16]
  408f00:	adrp	x19, 41f000 <memcpy@GLIBC_2.17>
  408f04:	add	x19, x19, #0xd48
  408f08:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9a0>
  408f0c:	mov	w3, w0
  408f10:	add	x2, x2, #0x30
  408f14:	mov	w1, #0x10                  	// #16
  408f18:	mov	x0, x19
  408f1c:	mov	x29, sp
  408f20:	bl	404ec0 <snprintf@plt>
  408f24:	mov	x0, x19
  408f28:	ldr	x19, [sp, #16]
  408f2c:	ldp	x29, x30, [sp], #32
  408f30:	ret

0000000000408f34 <ll_index_to_name@@Base>:
  408f34:	stp	x29, x30, [sp, #-32]!
  408f38:	stp	x20, x19, [sp, #16]
  408f3c:	mov	x29, sp
  408f40:	cbz	w0, 408f58 <ll_index_to_name@@Base+0x24>
  408f44:	mov	w19, w0
  408f48:	bl	408de4 <ll_remember_index@@Base+0xc0>
  408f4c:	cbz	x0, 408f64 <ll_index_to_name@@Base+0x30>
  408f50:	add	x20, x0, #0x40
  408f54:	b	408fb8 <ll_index_to_name@@Base+0x84>
  408f58:	adrp	x20, 40e000 <_IO_stdin_used@@Base+0x9a0>
  408f5c:	add	x20, x20, #0x35
  408f60:	b	408fb8 <ll_index_to_name@@Base+0x84>
  408f64:	mov	w1, w19
  408f68:	bl	408fc8 <ll_index_to_name@@Base+0x94>
  408f6c:	cmp	w0, w19
  408f70:	b.ne	408f80 <ll_index_to_name@@Base+0x4c>  // b.any
  408f74:	mov	w0, w19
  408f78:	bl	408de4 <ll_remember_index@@Base+0xc0>
  408f7c:	cbnz	x0, 408f50 <ll_index_to_name@@Base+0x1c>
  408f80:	adrp	x20, 41f000 <memcpy@GLIBC_2.17>
  408f84:	add	x20, x20, #0xd58
  408f88:	mov	w0, w19
  408f8c:	mov	x1, x20
  408f90:	bl	404f80 <if_indextoname@plt>
  408f94:	cbnz	x0, 408fb8 <ll_index_to_name@@Base+0x84>
  408f98:	adrp	x20, 41f000 <memcpy@GLIBC_2.17>
  408f9c:	add	x20, x20, #0xd58
  408fa0:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9a0>
  408fa4:	add	x2, x2, #0x30
  408fa8:	mov	w1, #0x10                  	// #16
  408fac:	mov	x0, x20
  408fb0:	mov	w3, w19
  408fb4:	bl	404ec0 <snprintf@plt>
  408fb8:	mov	x0, x20
  408fbc:	ldp	x20, x19, [sp, #16]
  408fc0:	ldp	x29, x30, [sp], #32
  408fc4:	ret
  408fc8:	stp	x29, x30, [sp, #-48]!
  408fcc:	str	x28, [sp, #16]
  408fd0:	stp	x20, x19, [sp, #32]
  408fd4:	mov	x29, sp
  408fd8:	sub	sp, sp, #0x460
  408fdc:	mov	w20, w1
  408fe0:	mov	x19, x0
  408fe4:	add	x0, sp, #0x40
  408fe8:	mov	w2, #0x420                 	// #1056
  408fec:	mov	w1, wzr
  408ff0:	bl	404f90 <memset@plt>
  408ff4:	mov	x8, #0x20                  	// #32
  408ff8:	movk	x8, #0x12, lsl #32
  408ffc:	movk	x8, #0x1, lsl #48
  409000:	movi	v0.2d, #0x0
  409004:	mov	x0, sp
  409008:	mov	w1, wzr
  40900c:	str	w20, [sp, #84]
  409010:	str	xzr, [sp, #48]
  409014:	str	x8, [sp, #64]
  409018:	stp	q0, q0, [sp, #16]
  40901c:	str	q0, [sp]
  409020:	bl	40b5b0 <rtnl_open@@Base>
  409024:	tbnz	w0, #31, 4090b0 <ll_index_to_name@@Base+0x17c>
  409028:	add	x0, sp, #0x40
  40902c:	mov	w1, #0x420                 	// #1056
  409030:	mov	w2, #0x1d                  	// #29
  409034:	mov	w3, #0x9                   	// #9
  409038:	bl	40cc88 <addattr32@@Base>
  40903c:	cbz	x19, 409078 <ll_index_to_name@@Base+0x144>
  409040:	mov	x0, x19
  409044:	bl	407348 <check_ifname@@Base>
  409048:	cmp	w0, #0x0
  40904c:	mov	w8, #0x35                  	// #53
  409050:	mov	w9, #0x3                   	// #3
  409054:	mov	x0, x19
  409058:	csel	w20, w9, w8, eq  // eq = none
  40905c:	bl	404dc0 <strlen@plt>
  409060:	add	w4, w0, #0x1
  409064:	add	x0, sp, #0x40
  409068:	mov	w1, #0x420                 	// #1056
  40906c:	mov	w2, w20
  409070:	mov	x3, x19
  409074:	bl	40cba8 <addattr_l@@Base>
  409078:	mov	x0, sp
  40907c:	add	x1, sp, #0x40
  409080:	add	x2, x29, #0x18
  409084:	bl	40c674 <rtnl_talk_suppress_rtnl_errmsg@@Base>
  409088:	tbnz	w0, #31, 4090b8 <ll_index_to_name@@Base+0x184>
  40908c:	ldr	x0, [x29, #24]
  409090:	bl	408d24 <ll_remember_index@@Base>
  409094:	mov	w19, w0
  409098:	cbnz	w0, 4090a4 <ll_index_to_name@@Base+0x170>
  40909c:	ldr	x8, [x29, #24]
  4090a0:	ldr	w19, [x8, #20]
  4090a4:	ldr	x0, [x29, #24]
  4090a8:	bl	405110 <free@plt>
  4090ac:	b	4090bc <ll_index_to_name@@Base+0x188>
  4090b0:	mov	w19, wzr
  4090b4:	b	4090c4 <ll_index_to_name@@Base+0x190>
  4090b8:	mov	w19, wzr
  4090bc:	mov	x0, sp
  4090c0:	bl	40b3e0 <rtnl_close@@Base>
  4090c4:	mov	w0, w19
  4090c8:	add	sp, sp, #0x460
  4090cc:	ldp	x20, x19, [sp, #32]
  4090d0:	ldr	x28, [sp, #16]
  4090d4:	ldp	x29, x30, [sp], #48
  4090d8:	ret

00000000004090dc <ll_index_to_type@@Base>:
  4090dc:	stp	x29, x30, [sp, #-16]!
  4090e0:	mov	x29, sp
  4090e4:	cbz	w0, 4090fc <ll_index_to_type@@Base+0x20>
  4090e8:	bl	408de4 <ll_remember_index@@Base+0xc0>
  4090ec:	cbz	x0, 4090fc <ll_index_to_type@@Base+0x20>
  4090f0:	ldrh	w0, [x0, #40]
  4090f4:	ldp	x29, x30, [sp], #16
  4090f8:	ret
  4090fc:	mov	w0, #0xffffffff            	// #-1
  409100:	ldp	x29, x30, [sp], #16
  409104:	ret

0000000000409108 <ll_index_to_flags@@Base>:
  409108:	stp	x29, x30, [sp, #-16]!
  40910c:	mov	x29, sp
  409110:	cbz	w0, 409120 <ll_index_to_flags@@Base+0x18>
  409114:	bl	408de4 <ll_remember_index@@Base+0xc0>
  409118:	cbz	x0, 409128 <ll_index_to_flags@@Base+0x20>
  40911c:	ldr	w0, [x0, #32]
  409120:	ldp	x29, x30, [sp], #16
  409124:	ret
  409128:	mov	w0, #0xffffffff            	// #-1
  40912c:	ldp	x29, x30, [sp], #16
  409130:	ret

0000000000409134 <ll_name_to_index@@Base>:
  409134:	stp	x29, x30, [sp, #-32]!
  409138:	str	x19, [sp, #16]
  40913c:	mov	x29, sp
  409140:	cbz	x0, 40916c <ll_name_to_index@@Base+0x38>
  409144:	mov	x19, x0
  409148:	bl	409190 <ll_name_to_index@@Base+0x5c>
  40914c:	cbz	x0, 409158 <ll_name_to_index@@Base+0x24>
  409150:	ldr	w0, [x0, #36]
  409154:	b	40916c <ll_name_to_index@@Base+0x38>
  409158:	mov	x0, x19
  40915c:	mov	w1, wzr
  409160:	bl	408fc8 <ll_index_to_name@@Base+0x94>
  409164:	cbz	w0, 409178 <ll_name_to_index@@Base+0x44>
  409168:	cbz	w0, 409184 <ll_name_to_index@@Base+0x50>
  40916c:	ldr	x19, [sp, #16]
  409170:	ldp	x29, x30, [sp], #32
  409174:	ret
  409178:	mov	x0, x19
  40917c:	bl	405210 <if_nametoindex@plt>
  409180:	cbnz	w0, 40916c <ll_name_to_index@@Base+0x38>
  409184:	mov	x0, x19
  409188:	bl	4091f8 <ll_name_to_index@@Base+0xc4>
  40918c:	b	40916c <ll_name_to_index@@Base+0x38>
  409190:	stp	x29, x30, [sp, #-48]!
  409194:	str	x21, [sp, #16]
  409198:	stp	x20, x19, [sp, #32]
  40919c:	mov	x29, sp
  4091a0:	mov	x19, x0
  4091a4:	bl	408cf8 <namehash@@Base>
  4091a8:	adrp	x9, 421000 <stdout@@GLIBC_2.17+0x1ce8>
  4091ac:	and	w8, w0, #0x3ff
  4091b0:	add	x9, x9, #0xd70
  4091b4:	ldr	x21, [x9, w8, uxtw #3]
  4091b8:	cbz	x21, 4091e0 <ll_name_to_index@@Base+0xac>
  4091bc:	add	x0, x21, #0x30
  4091c0:	mov	x1, x19
  4091c4:	bl	4050a0 <strcmp@plt>
  4091c8:	sub	x8, x21, #0x10
  4091cc:	cmp	w0, #0x0
  4091d0:	csel	x20, x8, x20, eq  // eq = none
  4091d4:	cbz	w0, 4091e4 <ll_name_to_index@@Base+0xb0>
  4091d8:	ldr	x21, [x21]
  4091dc:	cbnz	x21, 4091bc <ll_name_to_index@@Base+0x88>
  4091e0:	mov	x20, xzr
  4091e4:	mov	x0, x20
  4091e8:	ldp	x20, x19, [sp, #32]
  4091ec:	ldr	x21, [sp, #16]
  4091f0:	ldp	x29, x30, [sp], #48
  4091f4:	ret
  4091f8:	sub	sp, sp, #0x20
  4091fc:	stp	x29, x30, [sp, #16]
  409200:	add	x29, sp, #0x10
  409204:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  409208:	add	x1, x1, #0x30
  40920c:	sub	x2, x29, #0x4
  409210:	bl	405240 <__isoc99_sscanf@plt>
  409214:	ldur	w8, [x29, #-4]
  409218:	ldp	x29, x30, [sp, #16]
  40921c:	cmp	w0, #0x1
  409220:	csel	w0, w8, wzr, eq  // eq = none
  409224:	add	sp, sp, #0x20
  409228:	ret

000000000040922c <ll_drop_by_index@@Base>:
  40922c:	stp	x29, x30, [sp, #-32]!
  409230:	str	x19, [sp, #16]
  409234:	mov	x29, sp
  409238:	bl	408de4 <ll_remember_index@@Base+0xc0>
  40923c:	cbz	x0, 409258 <ll_drop_by_index@@Base+0x2c>
  409240:	mov	x19, x0
  409244:	bl	409264 <ll_drop_by_index@@Base+0x38>
  409248:	add	x0, x19, #0x10
  40924c:	bl	409264 <ll_drop_by_index@@Base+0x38>
  409250:	mov	x0, x19
  409254:	bl	405110 <free@plt>
  409258:	ldr	x19, [sp, #16]
  40925c:	ldp	x29, x30, [sp], #32
  409260:	ret
  409264:	ldp	x8, x9, [x0]
  409268:	str	x8, [x9]
  40926c:	cbz	x8, 409274 <ll_drop_by_index@@Base+0x48>
  409270:	str	x9, [x8, #8]
  409274:	ret

0000000000409278 <ll_init_map@@Base>:
  409278:	stp	x29, x30, [sp, #-32]!
  40927c:	stp	x20, x19, [sp, #16]
  409280:	adrp	x20, 41f000 <memcpy@GLIBC_2.17>
  409284:	ldrb	w8, [x20, #3432]
  409288:	mov	x29, sp
  40928c:	tbnz	w8, #0, 4092c4 <ll_init_map@@Base+0x4c>
  409290:	mov	w1, wzr
  409294:	mov	x19, x0
  409298:	bl	40ba54 <rtnl_linkdump_req@@Base>
  40929c:	tbnz	w0, #31, 4092d0 <ll_init_map@@Base+0x58>
  4092a0:	adrp	x1, 41e000 <_IO_stdin_used@@Base+0x109a0>
  4092a4:	ldr	x1, [x1, #4008]
  4092a8:	mov	x0, x19
  4092ac:	mov	x2, xzr
  4092b0:	mov	w3, wzr
  4092b4:	bl	40bf28 <rtnl_dump_filter_nc@@Base>
  4092b8:	tbnz	w0, #31, 4092e4 <ll_init_map@@Base+0x6c>
  4092bc:	mov	w8, #0x1                   	// #1
  4092c0:	strb	w8, [x20, #3432]
  4092c4:	ldp	x20, x19, [sp, #16]
  4092c8:	ldp	x29, x30, [sp], #32
  4092cc:	ret
  4092d0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  4092d4:	add	x0, x0, #0x37
  4092d8:	bl	404de0 <perror@plt>
  4092dc:	mov	w0, #0x1                   	// #1
  4092e0:	bl	404dd0 <exit@plt>
  4092e4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  4092e8:	ldr	x8, [x8, #3992]
  4092ec:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  4092f0:	add	x0, x0, #0xa8a
  4092f4:	mov	w1, #0x10                  	// #16
  4092f8:	ldr	x3, [x8]
  4092fc:	mov	w2, #0x1                   	// #1
  409300:	bl	405170 <fwrite@plt>
  409304:	mov	w0, #0x1                   	// #1
  409308:	bl	404dd0 <exit@plt>
  40930c:	stp	x29, x30, [sp, #-32]!
  409310:	stp	x20, x19, [sp, #16]
  409314:	ldr	x20, [x0, #48]
  409318:	mov	x29, sp
  40931c:	mov	x19, x0
  409320:	sub	x0, x20, #0x30
  409324:	cmp	x0, x19
  409328:	b.eq	40933c <ll_init_map@@Base+0xc4>  // b.none
  40932c:	ldr	x20, [x20]
  409330:	mov	w1, wzr
  409334:	bl	409348 <ll_init_map@@Base+0xd0>
  409338:	b	409320 <ll_init_map@@Base+0xa8>
  40933c:	ldp	x20, x19, [sp, #16]
  409340:	ldp	x29, x30, [sp], #32
  409344:	ret
  409348:	stp	x29, x30, [sp, #-32]!
  40934c:	stp	x20, x19, [sp, #16]
  409350:	mov	x19, x0
  409354:	add	x0, x0, #0x10
  409358:	mov	x29, sp
  40935c:	mov	w20, w1
  409360:	bl	409264 <ll_drop_by_index@@Base+0x38>
  409364:	tbz	w20, #0, 409374 <ll_init_map@@Base+0xfc>
  409368:	mov	x0, x19
  40936c:	bl	409264 <ll_drop_by_index@@Base+0x38>
  409370:	b	40937c <ll_init_map@@Base+0x104>
  409374:	add	x0, x19, #0x30
  409378:	bl	409390 <ll_init_map@@Base+0x118>
  40937c:	mov	x0, x19
  409380:	bl	405110 <free@plt>
  409384:	ldp	x20, x19, [sp, #16]
  409388:	ldp	x29, x30, [sp], #32
  40938c:	ret
  409390:	stp	x29, x30, [sp, #-16]!
  409394:	ldp	x1, x8, [x0]
  409398:	mov	x29, sp
  40939c:	mov	x0, x8
  4093a0:	bl	4093ac <ll_init_map@@Base+0x134>
  4093a4:	ldp	x29, x30, [sp], #16
  4093a8:	ret
  4093ac:	str	x0, [x1, #8]
  4093b0:	str	x1, [x0]
  4093b4:	ret
  4093b8:	stp	x29, x30, [sp, #-32]!
  4093bc:	stp	x20, x19, [sp, #16]
  4093c0:	ldr	w8, [x1, #8]
  4093c4:	mov	x20, x0
  4093c8:	mov	x1, x2
  4093cc:	mov	x29, sp
  4093d0:	str	w8, [x0, #32]
  4093d4:	add	x0, x0, #0x40
  4093d8:	mov	x19, x2
  4093dc:	bl	4050a0 <strcmp@plt>
  4093e0:	cbz	w0, 409410 <ll_init_map@@Base+0x198>
  4093e4:	add	x20, x20, #0x10
  4093e8:	mov	x0, x20
  4093ec:	bl	409264 <ll_drop_by_index@@Base+0x38>
  4093f0:	mov	x0, x19
  4093f4:	bl	408cf8 <namehash@@Base>
  4093f8:	adrp	x9, 421000 <stdout@@GLIBC_2.17+0x1ce8>
  4093fc:	and	w8, w0, #0x3ff
  409400:	add	x9, x9, #0xd70
  409404:	add	x1, x9, w8, uxtw #3
  409408:	mov	x0, x20
  40940c:	bl	409504 <ll_init_map@@Base+0x28c>
  409410:	ldp	x20, x19, [sp, #16]
  409414:	ldp	x29, x30, [sp], #32
  409418:	ret
  40941c:	add	x0, x0, #0x4
  409420:	ret
  409424:	stp	x29, x30, [sp, #-80]!
  409428:	stp	x24, x23, [sp, #32]
  40942c:	stp	x22, x21, [sp, #48]
  409430:	stp	x20, x19, [sp, #64]
  409434:	ldr	x8, [x2, #416]
  409438:	mov	x21, x0
  40943c:	str	x25, [sp, #16]
  409440:	mov	x29, sp
  409444:	cbz	x8, 4094e4 <ll_init_map@@Base+0x26c>
  409448:	ldrh	w9, [x8]
  40944c:	mov	x19, x2
  409450:	mov	x20, x1
  409454:	cmp	w9, #0x8
  409458:	b.cc	4094c8 <ll_init_map@@Base+0x250>  // b.lo, b.ul, b.last
  40945c:	ldr	x10, [x21, #48]
  409460:	add	x22, x8, #0x4
  409464:	sub	w23, w9, #0x4
  409468:	sub	x24, x10, #0x30
  40946c:	b	409490 <ll_init_map@@Base+0x218>
  409470:	ldr	x8, [x24, #48]
  409474:	sub	x24, x8, #0x30
  409478:	add	w8, w25, #0x3
  40947c:	and	x8, x8, #0x1fffc
  409480:	sub	w23, w23, w8
  409484:	cmp	w23, #0x3
  409488:	add	x22, x22, x8
  40948c:	b.le	4094c8 <ll_init_map@@Base+0x250>
  409490:	ldrh	w25, [x22]
  409494:	cmp	w25, #0x4
  409498:	b.cc	4094c8 <ll_init_map@@Base+0x250>  // b.lo, b.ul, b.last
  40949c:	cmp	w23, w25
  4094a0:	b.lt	4094c8 <ll_init_map@@Base+0x250>  // b.tstop
  4094a4:	ldrh	w8, [x22, #2]
  4094a8:	cmp	w8, #0x35
  4094ac:	b.ne	409478 <ll_init_map@@Base+0x200>  // b.any
  4094b0:	cbz	x24, 4094c8 <ll_init_map@@Base+0x250>
  4094b4:	mov	x0, x22
  4094b8:	bl	40941c <ll_init_map@@Base+0x1a4>
  4094bc:	add	x1, x24, #0x40
  4094c0:	bl	4050a0 <strcmp@plt>
  4094c4:	cbz	w0, 409470 <ll_init_map@@Base+0x1f8>
  4094c8:	mov	x0, x21
  4094cc:	bl	40930c <ll_init_map@@Base+0x94>
  4094d0:	mov	x0, x21
  4094d4:	mov	x1, x20
  4094d8:	mov	x2, x19
  4094dc:	bl	409520 <ll_init_map@@Base+0x2a8>
  4094e0:	b	4094ec <ll_init_map@@Base+0x274>
  4094e4:	mov	x0, x21
  4094e8:	bl	40930c <ll_init_map@@Base+0x94>
  4094ec:	ldp	x20, x19, [sp, #64]
  4094f0:	ldp	x22, x21, [sp, #48]
  4094f4:	ldp	x24, x23, [sp, #32]
  4094f8:	ldr	x25, [sp, #16]
  4094fc:	ldp	x29, x30, [sp], #80
  409500:	ret
  409504:	ldr	x8, [x1]
  409508:	str	x8, [x0]
  40950c:	cbz	x8, 409514 <ll_init_map@@Base+0x29c>
  409510:	str	x0, [x8, #8]
  409514:	str	x0, [x1]
  409518:	str	x1, [x0, #8]
  40951c:	ret
  409520:	stp	x29, x30, [sp, #-48]!
  409524:	stp	x22, x21, [sp, #16]
  409528:	stp	x20, x19, [sp, #32]
  40952c:	ldr	x8, [x2, #416]
  409530:	mov	x29, sp
  409534:	cbz	x8, 4095b0 <ll_init_map@@Base+0x338>
  409538:	ldrh	w9, [x8]
  40953c:	cmp	w9, #0x8
  409540:	b.cc	4095b0 <ll_init_map@@Base+0x338>  // b.lo, b.ul, b.last
  409544:	mov	x19, x1
  409548:	mov	x20, x0
  40954c:	add	x21, x8, #0x4
  409550:	sub	w22, w9, #0x4
  409554:	b	409574 <ll_init_map@@Base+0x2fc>
  409558:	ldrh	w8, [x21]
  40955c:	add	w8, w8, #0x3
  409560:	and	x8, x8, #0x1fffc
  409564:	sub	w22, w22, w8
  409568:	cmp	w22, #0x3
  40956c:	add	x21, x21, x8
  409570:	b.le	4095b0 <ll_init_map@@Base+0x338>
  409574:	ldrh	w8, [x21]
  409578:	cmp	w8, #0x4
  40957c:	b.cc	4095b0 <ll_init_map@@Base+0x338>  // b.lo, b.ul, b.last
  409580:	cmp	w22, w8
  409584:	b.lt	4095b0 <ll_init_map@@Base+0x338>  // b.tstop
  409588:	ldrh	w8, [x21, #2]
  40958c:	cmp	w8, #0x35
  409590:	b.ne	409558 <ll_init_map@@Base+0x2e0>  // b.any
  409594:	mov	x0, x21
  409598:	bl	40941c <ll_init_map@@Base+0x1a4>
  40959c:	mov	x1, x0
  4095a0:	mov	x0, x19
  4095a4:	mov	x2, x20
  4095a8:	bl	4095c0 <ll_init_map@@Base+0x348>
  4095ac:	b	409558 <ll_init_map@@Base+0x2e0>
  4095b0:	ldp	x20, x19, [sp, #32]
  4095b4:	ldp	x22, x21, [sp, #16]
  4095b8:	ldp	x29, x30, [sp], #48
  4095bc:	ret
  4095c0:	stp	x29, x30, [sp, #-48]!
  4095c4:	stp	x22, x21, [sp, #16]
  4095c8:	mov	x22, x0
  4095cc:	mov	x0, x1
  4095d0:	stp	x20, x19, [sp, #32]
  4095d4:	mov	x29, sp
  4095d8:	mov	x21, x2
  4095dc:	mov	x20, x1
  4095e0:	bl	404dc0 <strlen@plt>
  4095e4:	add	x0, x0, #0x41
  4095e8:	bl	404f20 <malloc@plt>
  4095ec:	mov	x19, x0
  4095f0:	cbz	x0, 409670 <ll_init_map@@Base+0x3f8>
  4095f4:	ldr	w8, [x22, #4]
  4095f8:	add	x0, x19, #0x40
  4095fc:	mov	x1, x20
  409600:	str	w8, [x19, #36]
  409604:	bl	4051a0 <strcpy@plt>
  409608:	ldrh	w8, [x22, #2]
  40960c:	strh	w8, [x19, #40]
  409610:	ldr	w8, [x22, #8]
  409614:	str	w8, [x19, #32]
  409618:	cbz	x21, 40962c <ll_init_map@@Base+0x3b4>
  40961c:	add	x0, x19, #0x30
  409620:	add	x1, x21, #0x30
  409624:	bl	409684 <ll_init_map@@Base+0x40c>
  409628:	b	409650 <ll_init_map@@Base+0x3d8>
  40962c:	ldr	w8, [x22, #4]
  409630:	adrp	x9, 41f000 <memcpy@GLIBC_2.17>
  409634:	add	x9, x9, #0xd70
  409638:	mov	x0, x19
  40963c:	and	x8, x8, #0x3ff
  409640:	add	x1, x9, x8, lsl #3
  409644:	bl	409504 <ll_init_map@@Base+0x28c>
  409648:	add	x0, x19, #0x30
  40964c:	bl	4096a0 <ll_init_map@@Base+0x428>
  409650:	mov	x0, x20
  409654:	bl	408cf8 <namehash@@Base>
  409658:	adrp	x9, 421000 <stdout@@GLIBC_2.17+0x1ce8>
  40965c:	and	w8, w0, #0x3ff
  409660:	add	x9, x9, #0xd70
  409664:	add	x0, x19, #0x10
  409668:	add	x1, x9, w8, uxtw #3
  40966c:	bl	409504 <ll_init_map@@Base+0x28c>
  409670:	mov	x0, x19
  409674:	ldp	x20, x19, [sp, #32]
  409678:	ldp	x22, x21, [sp, #16]
  40967c:	ldp	x29, x30, [sp], #48
  409680:	ret
  409684:	stp	x29, x30, [sp, #-16]!
  409688:	mov	x2, x1
  40968c:	ldr	x1, [x1, #8]
  409690:	mov	x29, sp
  409694:	bl	4096a8 <ll_init_map@@Base+0x430>
  409698:	ldp	x29, x30, [sp], #16
  40969c:	ret
  4096a0:	stp	x0, x0, [x0]
  4096a4:	ret
  4096a8:	str	x0, [x2, #8]
  4096ac:	stp	x2, x1, [x0]
  4096b0:	str	x0, [x1]
  4096b4:	ret

00000000004096b8 <ll_addr_n2a@@Base>:
  4096b8:	stp	x29, x30, [sp, #-80]!
  4096bc:	stp	x22, x21, [sp, #48]
  4096c0:	stp	x20, x19, [sp, #64]
  4096c4:	mov	w20, w4
  4096c8:	mov	x19, x3
  4096cc:	mov	w22, w1
  4096d0:	cmp	w1, #0x10
  4096d4:	mov	x21, x0
  4096d8:	stp	x26, x25, [sp, #16]
  4096dc:	stp	x24, x23, [sp, #32]
  4096e0:	mov	x29, sp
  4096e4:	b.eq	409720 <ll_addr_n2a@@Base+0x68>  // b.none
  4096e8:	cmp	w22, #0x4
  4096ec:	b.ne	409764 <ll_addr_n2a@@Base+0xac>  // b.any
  4096f0:	sub	w8, w2, #0x300
  4096f4:	cmp	w8, #0xa
  4096f8:	b.hi	409718 <ll_addr_n2a@@Base+0x60>  // b.pmore
  4096fc:	mov	w9, #0x1                   	// #1
  409700:	lsl	w8, w9, w8
  409704:	mov	w9, #0x501                 	// #1281
  409708:	tst	w8, w9
  40970c:	b.eq	409718 <ll_addr_n2a@@Base+0x60>  // b.none
  409710:	mov	w0, #0x2                   	// #2
  409714:	b	409734 <ll_addr_n2a@@Base+0x7c>
  409718:	cmp	w22, #0x10
  40971c:	b.ne	409764 <ll_addr_n2a@@Base+0xac>  // b.any
  409720:	cmp	w2, #0x337
  409724:	b.eq	409730 <ll_addr_n2a@@Base+0x78>  // b.none
  409728:	cmp	w2, #0x301
  40972c:	b.ne	409764 <ll_addr_n2a@@Base+0xac>  // b.any
  409730:	mov	w0, #0xa                   	// #10
  409734:	mov	x1, x21
  409738:	mov	x2, x19
  40973c:	mov	w3, w20
  409740:	bl	405300 <inet_ntop@plt>
  409744:	mov	x19, x0
  409748:	mov	x0, x19
  40974c:	ldp	x20, x19, [sp, #64]
  409750:	ldp	x22, x21, [sp, #48]
  409754:	ldp	x24, x23, [sp, #32]
  409758:	ldp	x26, x25, [sp, #16]
  40975c:	ldp	x29, x30, [sp], #80
  409760:	ret
  409764:	ldrb	w3, [x21]
  409768:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40976c:	sxtw	x1, w20
  409770:	add	x2, x2, #0x51
  409774:	mov	x0, x19
  409778:	bl	404ec0 <snprintf@plt>
  40977c:	cmp	w22, #0x2
  409780:	b.lt	409748 <ll_addr_n2a@@Base+0x90>  // b.tstop
  409784:	cmp	w20, #0x3
  409788:	b.lt	409748 <ll_addr_n2a@@Base+0x90>  // b.tstop
  40978c:	sxtw	x23, w22
  409790:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x9a0>
  409794:	sub	w24, w20, #0x2
  409798:	mov	w25, #0x2                   	// #2
  40979c:	mov	w26, #0x1                   	// #1
  4097a0:	add	x22, x22, #0x50
  4097a4:	ldrb	w3, [x21, x26]
  4097a8:	add	x0, x19, x25
  4097ac:	sxtw	x1, w24
  4097b0:	mov	x2, x22
  4097b4:	bl	404ec0 <snprintf@plt>
  4097b8:	add	x26, x26, #0x1
  4097bc:	cmp	x26, x23
  4097c0:	b.ge	409748 <ll_addr_n2a@@Base+0x90>  // b.tcont
  4097c4:	add	x25, x25, #0x3
  4097c8:	cmp	w25, w20
  4097cc:	sub	w24, w24, #0x3
  4097d0:	b.lt	4097a4 <ll_addr_n2a@@Base+0xec>  // b.tstop
  4097d4:	b	409748 <ll_addr_n2a@@Base+0x90>

00000000004097d8 <ll_addr_a2n@@Base>:
  4097d8:	sub	sp, sp, #0x170
  4097dc:	stp	x22, x21, [sp, #336]
  4097e0:	stp	x20, x19, [sp, #352]
  4097e4:	mov	w21, w1
  4097e8:	mov	x20, x0
  4097ec:	mov	w1, #0x2e                  	// #46
  4097f0:	mov	x0, x2
  4097f4:	stp	x29, x30, [sp, #272]
  4097f8:	str	x28, [sp, #288]
  4097fc:	stp	x26, x25, [sp, #304]
  409800:	stp	x24, x23, [sp, #320]
  409804:	add	x29, sp, #0x110
  409808:	mov	x19, x2
  40980c:	bl	405150 <strchr@plt>
  409810:	cbz	x0, 409838 <ll_addr_a2n@@Base+0x60>
  409814:	add	x0, sp, #0x8
  409818:	mov	w2, #0x2                   	// #2
  40981c:	mov	x1, x19
  409820:	bl	406b1c <get_addr_1@@Base>
  409824:	cbnz	w0, 409924 <ll_addr_a2n@@Base+0x14c>
  409828:	cmp	w21, #0x4
  40982c:	b.ge	4098ec <ll_addr_a2n@@Base+0x114>  // b.tcont
  409830:	mov	w0, #0xffffffff            	// #-1
  409834:	b	409904 <ll_addr_a2n@@Base+0x12c>
  409838:	cmp	w21, #0x1
  40983c:	b.lt	4098fc <ll_addr_a2n@@Base+0x124>  // b.tstop
  409840:	adrp	x26, 41e000 <_IO_stdin_used@@Base+0x109a0>
  409844:	ldr	x26, [x26, #3992]
  409848:	mov	w24, w21
  40984c:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x9a0>
  409850:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x9a0>
  409854:	mov	x25, xzr
  409858:	add	x21, x21, #0x6f
  40985c:	add	x22, x22, #0x56
  409860:	mov	w1, #0x3a                  	// #58
  409864:	mov	x0, x19
  409868:	bl	405150 <strchr@plt>
  40986c:	mov	x23, x0
  409870:	cbz	x0, 409878 <ll_addr_a2n@@Base+0xa0>
  409874:	strb	wzr, [x23], #1
  409878:	add	x2, sp, #0x8
  40987c:	mov	x0, x19
  409880:	mov	x1, x21
  409884:	bl	405240 <__isoc99_sscanf@plt>
  409888:	cmp	w0, #0x1
  40988c:	b.ne	4098c4 <ll_addr_a2n@@Base+0xec>  // b.any
  409890:	ldr	w8, [sp, #8]
  409894:	cmp	w8, #0x100
  409898:	b.cs	4098c4 <ll_addr_a2n@@Base+0xec>  // b.hs, b.nlast
  40989c:	cmp	x23, #0x0
  4098a0:	strb	w8, [x20, x25]
  4098a4:	cset	w8, eq  // eq = none
  4098a8:	csel	x19, x19, x23, eq  // eq = none
  4098ac:	lsl	w8, w8, #1
  4098b0:	cbnz	w8, 4098dc <ll_addr_a2n@@Base+0x104>
  4098b4:	add	x25, x25, #0x1
  4098b8:	cmp	x24, x25
  4098bc:	b.ne	409860 <ll_addr_a2n@@Base+0x88>  // b.any
  4098c0:	b	409900 <ll_addr_a2n@@Base+0x128>
  4098c4:	ldr	x0, [x26]
  4098c8:	mov	x1, x22
  4098cc:	mov	x2, x19
  4098d0:	bl	4052e0 <fprintf@plt>
  4098d4:	mov	w8, #0x1                   	// #1
  4098d8:	cbz	w8, 4098b4 <ll_addr_a2n@@Base+0xdc>
  4098dc:	cmp	w8, #0x2
  4098e0:	b.ne	409830 <ll_addr_a2n@@Base+0x58>  // b.any
  4098e4:	mov	w24, w25
  4098e8:	b	409900 <ll_addr_a2n@@Base+0x128>
  4098ec:	ldr	w8, [sp, #16]
  4098f0:	mov	w0, #0x4                   	// #4
  4098f4:	str	w8, [x20]
  4098f8:	b	409904 <ll_addr_a2n@@Base+0x12c>
  4098fc:	mov	w24, wzr
  409900:	add	w0, w24, #0x1
  409904:	ldp	x20, x19, [sp, #352]
  409908:	ldp	x22, x21, [sp, #336]
  40990c:	ldp	x24, x23, [sp, #320]
  409910:	ldp	x26, x25, [sp, #304]
  409914:	ldr	x28, [sp, #288]
  409918:	ldp	x29, x30, [sp, #272]
  40991c:	add	sp, sp, #0x170
  409920:	ret
  409924:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  409928:	ldr	x8, [x8, #3992]
  40992c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  409930:	add	x1, x1, #0x56
  409934:	mov	x2, x19
  409938:	ldr	x0, [x8]
  40993c:	bl	4052e0 <fprintf@plt>
  409940:	b	409830 <ll_addr_a2n@@Base+0x58>

0000000000409944 <new_json_obj@@Base>:
  409944:	stp	x29, x30, [sp, #-16]!
  409948:	mov	w1, #0x1                   	// #1
  40994c:	mov	x29, sp
  409950:	bl	40995c <new_json_obj@@Base+0x18>
  409954:	ldp	x29, x30, [sp], #16
  409958:	ret
  40995c:	stp	x29, x30, [sp, #-32]!
  409960:	stp	x20, x19, [sp, #16]
  409964:	mov	x29, sp
  409968:	cbz	w0, 4099b0 <new_json_obj@@Base+0x6c>
  40996c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  409970:	ldr	x8, [x8, #4016]
  409974:	mov	w19, w1
  409978:	ldr	x0, [x8]
  40997c:	bl	40a9b0 <jsonw_new@@Base>
  409980:	adrp	x20, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  409984:	str	x0, [x20, #3440]
  409988:	cbz	x0, 4099bc <new_json_obj@@Base+0x78>
  40998c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  409990:	ldr	x8, [x8, #4056]
  409994:	ldr	w8, [x8]
  409998:	cbz	w8, 4099a4 <new_json_obj@@Base+0x60>
  40999c:	mov	w1, #0x1                   	// #1
  4099a0:	bl	40aa4c <jsonw_pretty@@Base>
  4099a4:	tbz	w19, #0, 4099b0 <new_json_obj@@Base+0x6c>
  4099a8:	ldr	x0, [x20, #3440]
  4099ac:	bl	40ae48 <jsonw_start_array@@Base>
  4099b0:	ldp	x20, x19, [sp, #16]
  4099b4:	ldp	x29, x30, [sp], #32
  4099b8:	ret
  4099bc:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  4099c0:	add	x0, x0, #0x91
  4099c4:	bl	404de0 <perror@plt>
  4099c8:	mov	w0, #0x1                   	// #1
  4099cc:	bl	404dd0 <exit@plt>

00000000004099d0 <delete_json_obj@@Base>:
  4099d0:	stp	x29, x30, [sp, #-16]!
  4099d4:	mov	w0, #0x1                   	// #1
  4099d8:	mov	x29, sp
  4099dc:	bl	4099e8 <delete_json_obj@@Base+0x18>
  4099e0:	ldp	x29, x30, [sp], #16
  4099e4:	ret
  4099e8:	stp	x29, x30, [sp, #-16]!
  4099ec:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  4099f0:	ldr	x8, [x8, #3440]
  4099f4:	mov	x29, sp
  4099f8:	cbz	x8, 409a14 <delete_json_obj@@Base+0x44>
  4099fc:	tbz	w0, #0, 409a08 <delete_json_obj@@Base+0x38>
  409a00:	mov	x0, x8
  409a04:	bl	40ae80 <jsonw_end_array@@Base>
  409a08:	adrp	x0, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  409a0c:	add	x0, x0, #0xd70
  409a10:	bl	40a9e4 <jsonw_destroy@@Base>
  409a14:	ldp	x29, x30, [sp], #16
  409a18:	ret

0000000000409a1c <new_json_obj_plain@@Base>:
  409a1c:	stp	x29, x30, [sp, #-16]!
  409a20:	mov	w1, wzr
  409a24:	mov	x29, sp
  409a28:	bl	40995c <new_json_obj@@Base+0x18>
  409a2c:	ldp	x29, x30, [sp], #16
  409a30:	ret

0000000000409a34 <delete_json_obj_plain@@Base>:
  409a34:	stp	x29, x30, [sp, #-16]!
  409a38:	mov	w0, wzr
  409a3c:	mov	x29, sp
  409a40:	bl	4099e8 <delete_json_obj@@Base+0x18>
  409a44:	ldp	x29, x30, [sp], #16
  409a48:	ret

0000000000409a4c <is_json_context@@Base>:
  409a4c:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  409a50:	ldr	x8, [x8, #3440]
  409a54:	cmp	x8, #0x0
  409a58:	cset	w0, ne  // ne = any
  409a5c:	ret

0000000000409a60 <get_json_writer@@Base>:
  409a60:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  409a64:	ldr	x0, [x8, #3440]
  409a68:	ret

0000000000409a6c <open_json_object@@Base>:
  409a6c:	stp	x29, x30, [sp, #-32]!
  409a70:	str	x19, [sp, #16]
  409a74:	adrp	x19, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  409a78:	ldr	x8, [x19, #3440]
  409a7c:	mov	x29, sp
  409a80:	cbz	x8, 409a9c <open_json_object@@Base+0x30>
  409a84:	mov	x1, x0
  409a88:	cbz	x0, 409a94 <open_json_object@@Base+0x28>
  409a8c:	mov	x0, x8
  409a90:	bl	40aa58 <jsonw_name@@Base>
  409a94:	ldr	x0, [x19, #3440]
  409a98:	bl	40ad64 <jsonw_start_object@@Base>
  409a9c:	ldr	x19, [sp, #16]
  409aa0:	ldp	x29, x30, [sp], #32
  409aa4:	ret

0000000000409aa8 <close_json_object@@Base>:
  409aa8:	stp	x29, x30, [sp, #-16]!
  409aac:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  409ab0:	ldr	x0, [x8, #3440]
  409ab4:	mov	x29, sp
  409ab8:	cbz	x0, 409ac0 <close_json_object@@Base+0x18>
  409abc:	bl	40adbc <jsonw_end_object@@Base>
  409ac0:	ldp	x29, x30, [sp], #16
  409ac4:	ret

0000000000409ac8 <open_json_array@@Base>:
  409ac8:	stp	x29, x30, [sp, #-32]!
  409acc:	str	x19, [sp, #16]
  409ad0:	tst	w0, #0x6
  409ad4:	adrp	x19, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  409ad8:	mov	x29, sp
  409adc:	b.eq	409b00 <open_json_array@@Base+0x38>  // b.none
  409ae0:	ldr	x8, [x19, #3440]
  409ae4:	cbz	x8, 409b00 <open_json_array@@Base+0x38>
  409ae8:	cbz	x1, 409af4 <open_json_array@@Base+0x2c>
  409aec:	mov	x0, x8
  409af0:	bl	40aa58 <jsonw_name@@Base>
  409af4:	ldr	x0, [x19, #3440]
  409af8:	bl	40ae48 <jsonw_start_array@@Base>
  409afc:	b	409b20 <open_json_array@@Base+0x58>
  409b00:	mov	w8, #0x5                   	// #5
  409b04:	tst	w0, w8
  409b08:	b.eq	409b20 <open_json_array@@Base+0x58>  // b.none
  409b0c:	ldr	x8, [x19, #3440]
  409b10:	cbnz	x8, 409b20 <open_json_array@@Base+0x58>
  409b14:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  409b18:	add	x0, x0, #0xc61
  409b1c:	bl	405280 <printf@plt>
  409b20:	ldr	x19, [sp, #16]
  409b24:	ldp	x29, x30, [sp], #32
  409b28:	ret

0000000000409b2c <close_json_array@@Base>:
  409b2c:	stp	x29, x30, [sp, #-16]!
  409b30:	tst	w0, #0x6
  409b34:	adrp	x9, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  409b38:	mov	x29, sp
  409b3c:	b.eq	409b58 <close_json_array@@Base+0x2c>  // b.none
  409b40:	ldr	x8, [x9, #3440]
  409b44:	cbz	x8, 409b58 <close_json_array@@Base+0x2c>
  409b48:	mov	x0, x8
  409b4c:	bl	40ae80 <jsonw_end_array@@Base>
  409b50:	ldp	x29, x30, [sp], #16
  409b54:	ret
  409b58:	mov	w8, #0x5                   	// #5
  409b5c:	tst	w0, w8
  409b60:	b.eq	409b78 <close_json_array@@Base+0x4c>  // b.none
  409b64:	ldr	x8, [x9, #3440]
  409b68:	cbnz	x8, 409b78 <close_json_array@@Base+0x4c>
  409b6c:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  409b70:	add	x0, x0, #0xc61
  409b74:	bl	405280 <printf@plt>
  409b78:	ldp	x29, x30, [sp], #16
  409b7c:	ret

0000000000409b80 <print_color_int@@Base>:
  409b80:	stp	x29, x30, [sp, #-16]!
  409b84:	mov	w8, w0
  409b88:	tst	w0, #0x6
  409b8c:	adrp	x9, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  409b90:	mov	x29, sp
  409b94:	b.eq	409bb8 <print_color_int@@Base+0x38>  // b.none
  409b98:	ldr	x0, [x9, #3440]
  409b9c:	cbz	x0, 409bb8 <print_color_int@@Base+0x38>
  409ba0:	cbz	x2, 409bec <print_color_int@@Base+0x6c>
  409ba4:	mov	x1, x2
  409ba8:	mov	w2, w4
  409bac:	bl	40b26c <jsonw_int_field@@Base>
  409bb0:	ldp	x29, x30, [sp], #16
  409bb4:	ret
  409bb8:	mov	w10, #0x5                   	// #5
  409bbc:	tst	w8, w10
  409bc0:	b.eq	409be4 <print_color_int@@Base+0x64>  // b.none
  409bc4:	ldr	x8, [x9, #3440]
  409bc8:	cbnz	x8, 409be4 <print_color_int@@Base+0x64>
  409bcc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  409bd0:	ldr	x8, [x8, #4016]
  409bd4:	mov	x2, x3
  409bd8:	mov	w3, w4
  409bdc:	ldr	x0, [x8]
  409be0:	bl	40a530 <color_fprintf@@Base>
  409be4:	ldp	x29, x30, [sp], #16
  409be8:	ret
  409bec:	mov	w1, w4
  409bf0:	bl	40b044 <jsonw_int@@Base>
  409bf4:	ldp	x29, x30, [sp], #16
  409bf8:	ret

0000000000409bfc <print_color_s64@@Base>:
  409bfc:	stp	x29, x30, [sp, #-16]!
  409c00:	mov	w8, w0
  409c04:	tst	w0, #0x6
  409c08:	adrp	x9, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  409c0c:	mov	x29, sp
  409c10:	b.eq	409c34 <print_color_s64@@Base+0x38>  // b.none
  409c14:	ldr	x0, [x9, #3440]
  409c18:	cbz	x0, 409c34 <print_color_s64@@Base+0x38>
  409c1c:	cbz	x2, 409c68 <print_color_s64@@Base+0x6c>
  409c20:	mov	x1, x2
  409c24:	mov	x2, x4
  409c28:	bl	40b29c <jsonw_s64_field@@Base>
  409c2c:	ldp	x29, x30, [sp], #16
  409c30:	ret
  409c34:	mov	w10, #0x5                   	// #5
  409c38:	tst	w8, w10
  409c3c:	b.eq	409c60 <print_color_s64@@Base+0x64>  // b.none
  409c40:	ldr	x8, [x9, #3440]
  409c44:	cbnz	x8, 409c60 <print_color_s64@@Base+0x64>
  409c48:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  409c4c:	ldr	x8, [x8, #4016]
  409c50:	mov	x2, x3
  409c54:	mov	x3, x4
  409c58:	ldr	x0, [x8]
  409c5c:	bl	40a530 <color_fprintf@@Base>
  409c60:	ldp	x29, x30, [sp], #16
  409c64:	ret
  409c68:	mov	x1, x4
  409c6c:	bl	40b064 <jsonw_s64@@Base>
  409c70:	ldp	x29, x30, [sp], #16
  409c74:	ret

0000000000409c78 <print_color_hhu@@Base>:
  409c78:	stp	x29, x30, [sp, #-16]!
  409c7c:	mov	w8, w0
  409c80:	tst	w0, #0x6
  409c84:	adrp	x9, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  409c88:	mov	x29, sp
  409c8c:	b.eq	409cb0 <print_color_hhu@@Base+0x38>  // b.none
  409c90:	ldr	x0, [x9, #3440]
  409c94:	cbz	x0, 409cb0 <print_color_hhu@@Base+0x38>
  409c98:	cbz	x2, 409ce8 <print_color_hhu@@Base+0x70>
  409c9c:	mov	x1, x2
  409ca0:	mov	w2, w4
  409ca4:	bl	40b1ac <jsonw_hhu_field@@Base>
  409ca8:	ldp	x29, x30, [sp], #16
  409cac:	ret
  409cb0:	mov	w10, #0x5                   	// #5
  409cb4:	tst	w8, w10
  409cb8:	b.eq	409ce0 <print_color_hhu@@Base+0x68>  // b.none
  409cbc:	ldr	x8, [x9, #3440]
  409cc0:	cbnz	x8, 409ce0 <print_color_hhu@@Base+0x68>
  409cc4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  409cc8:	ldr	x8, [x8, #4016]
  409ccc:	mov	x2, x3
  409cd0:	ldr	x0, [x8]
  409cd4:	and	w8, w4, #0xff
  409cd8:	mov	w3, w8
  409cdc:	bl	40a530 <color_fprintf@@Base>
  409ce0:	ldp	x29, x30, [sp], #16
  409ce4:	ret
  409ce8:	mov	w1, w4
  409cec:	bl	40af64 <jsonw_hhu@@Base>
  409cf0:	ldp	x29, x30, [sp], #16
  409cf4:	ret

0000000000409cf8 <print_color_hu@@Base>:
  409cf8:	stp	x29, x30, [sp, #-16]!
  409cfc:	mov	w8, w0
  409d00:	tst	w0, #0x6
  409d04:	adrp	x9, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  409d08:	mov	x29, sp
  409d0c:	b.eq	409d30 <print_color_hu@@Base+0x38>  // b.none
  409d10:	ldr	x0, [x9, #3440]
  409d14:	cbz	x0, 409d30 <print_color_hu@@Base+0x38>
  409d18:	cbz	x2, 409d68 <print_color_hu@@Base+0x70>
  409d1c:	mov	x1, x2
  409d20:	mov	w2, w4
  409d24:	bl	40b1dc <jsonw_hu_field@@Base>
  409d28:	ldp	x29, x30, [sp], #16
  409d2c:	ret
  409d30:	mov	w10, #0x5                   	// #5
  409d34:	tst	w8, w10
  409d38:	b.eq	409d60 <print_color_hu@@Base+0x68>  // b.none
  409d3c:	ldr	x8, [x9, #3440]
  409d40:	cbnz	x8, 409d60 <print_color_hu@@Base+0x68>
  409d44:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  409d48:	ldr	x8, [x8, #4016]
  409d4c:	mov	x2, x3
  409d50:	ldr	x0, [x8]
  409d54:	and	w8, w4, #0xffff
  409d58:	mov	w3, w8
  409d5c:	bl	40a530 <color_fprintf@@Base>
  409d60:	ldp	x29, x30, [sp], #16
  409d64:	ret
  409d68:	mov	w1, w4
  409d6c:	bl	40af84 <jsonw_hu@@Base>
  409d70:	ldp	x29, x30, [sp], #16
  409d74:	ret

0000000000409d78 <print_color_uint@@Base>:
  409d78:	stp	x29, x30, [sp, #-16]!
  409d7c:	mov	w8, w0
  409d80:	tst	w0, #0x6
  409d84:	adrp	x9, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  409d88:	mov	x29, sp
  409d8c:	b.eq	409db0 <print_color_uint@@Base+0x38>  // b.none
  409d90:	ldr	x0, [x9, #3440]
  409d94:	cbz	x0, 409db0 <print_color_uint@@Base+0x38>
  409d98:	cbz	x2, 409de4 <print_color_uint@@Base+0x6c>
  409d9c:	mov	x1, x2
  409da0:	mov	w2, w4
  409da4:	bl	40b11c <jsonw_uint_field@@Base>
  409da8:	ldp	x29, x30, [sp], #16
  409dac:	ret
  409db0:	mov	w10, #0x5                   	// #5
  409db4:	tst	w8, w10
  409db8:	b.eq	409ddc <print_color_uint@@Base+0x64>  // b.none
  409dbc:	ldr	x8, [x9, #3440]
  409dc0:	cbnz	x8, 409ddc <print_color_uint@@Base+0x64>
  409dc4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  409dc8:	ldr	x8, [x8, #4016]
  409dcc:	mov	x2, x3
  409dd0:	mov	w3, w4
  409dd4:	ldr	x0, [x8]
  409dd8:	bl	40a530 <color_fprintf@@Base>
  409ddc:	ldp	x29, x30, [sp], #16
  409de0:	ret
  409de4:	mov	w1, w4
  409de8:	bl	40afa4 <jsonw_uint@@Base>
  409dec:	ldp	x29, x30, [sp], #16
  409df0:	ret

0000000000409df4 <print_color_u64@@Base>:
  409df4:	stp	x29, x30, [sp, #-16]!
  409df8:	mov	w8, w0
  409dfc:	tst	w0, #0x6
  409e00:	adrp	x9, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  409e04:	mov	x29, sp
  409e08:	b.eq	409e2c <print_color_u64@@Base+0x38>  // b.none
  409e0c:	ldr	x0, [x9, #3440]
  409e10:	cbz	x0, 409e2c <print_color_u64@@Base+0x38>
  409e14:	cbz	x2, 409e60 <print_color_u64@@Base+0x6c>
  409e18:	mov	x1, x2
  409e1c:	mov	x2, x4
  409e20:	bl	40b14c <jsonw_u64_field@@Base>
  409e24:	ldp	x29, x30, [sp], #16
  409e28:	ret
  409e2c:	mov	w10, #0x5                   	// #5
  409e30:	tst	w8, w10
  409e34:	b.eq	409e58 <print_color_u64@@Base+0x64>  // b.none
  409e38:	ldr	x8, [x9, #3440]
  409e3c:	cbnz	x8, 409e58 <print_color_u64@@Base+0x64>
  409e40:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  409e44:	ldr	x8, [x8, #4016]
  409e48:	mov	x2, x3
  409e4c:	mov	x3, x4
  409e50:	ldr	x0, [x8]
  409e54:	bl	40a530 <color_fprintf@@Base>
  409e58:	ldp	x29, x30, [sp], #16
  409e5c:	ret
  409e60:	mov	x1, x4
  409e64:	bl	40afc4 <jsonw_u64@@Base>
  409e68:	ldp	x29, x30, [sp], #16
  409e6c:	ret

0000000000409e70 <print_color_luint@@Base>:
  409e70:	stp	x29, x30, [sp, #-16]!
  409e74:	mov	w8, w0
  409e78:	tst	w0, #0x6
  409e7c:	adrp	x9, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  409e80:	mov	x29, sp
  409e84:	b.eq	409ea8 <print_color_luint@@Base+0x38>  // b.none
  409e88:	ldr	x0, [x9, #3440]
  409e8c:	cbz	x0, 409ea8 <print_color_luint@@Base+0x38>
  409e90:	cbz	x2, 409edc <print_color_luint@@Base+0x6c>
  409e94:	mov	x1, x2
  409e98:	mov	x2, x4
  409e9c:	bl	40b20c <jsonw_luint_field@@Base>
  409ea0:	ldp	x29, x30, [sp], #16
  409ea4:	ret
  409ea8:	mov	w10, #0x5                   	// #5
  409eac:	tst	w8, w10
  409eb0:	b.eq	409ed4 <print_color_luint@@Base+0x64>  // b.none
  409eb4:	ldr	x8, [x9, #3440]
  409eb8:	cbnz	x8, 409ed4 <print_color_luint@@Base+0x64>
  409ebc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  409ec0:	ldr	x8, [x8, #4016]
  409ec4:	mov	x2, x3
  409ec8:	mov	x3, x4
  409ecc:	ldr	x0, [x8]
  409ed0:	bl	40a530 <color_fprintf@@Base>
  409ed4:	ldp	x29, x30, [sp], #16
  409ed8:	ret
  409edc:	mov	x1, x4
  409ee0:	bl	40b004 <jsonw_luint@@Base>
  409ee4:	ldp	x29, x30, [sp], #16
  409ee8:	ret

0000000000409eec <print_color_lluint@@Base>:
  409eec:	stp	x29, x30, [sp, #-16]!
  409ef0:	mov	w8, w0
  409ef4:	tst	w0, #0x6
  409ef8:	adrp	x9, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  409efc:	mov	x29, sp
  409f00:	b.eq	409f24 <print_color_lluint@@Base+0x38>  // b.none
  409f04:	ldr	x0, [x9, #3440]
  409f08:	cbz	x0, 409f24 <print_color_lluint@@Base+0x38>
  409f0c:	cbz	x2, 409f58 <print_color_lluint@@Base+0x6c>
  409f10:	mov	x1, x2
  409f14:	mov	x2, x4
  409f18:	bl	40b23c <jsonw_lluint_field@@Base>
  409f1c:	ldp	x29, x30, [sp], #16
  409f20:	ret
  409f24:	mov	w10, #0x5                   	// #5
  409f28:	tst	w8, w10
  409f2c:	b.eq	409f50 <print_color_lluint@@Base+0x64>  // b.none
  409f30:	ldr	x8, [x9, #3440]
  409f34:	cbnz	x8, 409f50 <print_color_lluint@@Base+0x64>
  409f38:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  409f3c:	ldr	x8, [x8, #4016]
  409f40:	mov	x2, x3
  409f44:	mov	x3, x4
  409f48:	ldr	x0, [x8]
  409f4c:	bl	40a530 <color_fprintf@@Base>
  409f50:	ldp	x29, x30, [sp], #16
  409f54:	ret
  409f58:	mov	x1, x4
  409f5c:	bl	40b024 <jsonw_lluint@@Base>
  409f60:	ldp	x29, x30, [sp], #16
  409f64:	ret

0000000000409f68 <print_color_float@@Base>:
  409f68:	stp	x29, x30, [sp, #-16]!
  409f6c:	mov	w8, w0
  409f70:	tst	w0, #0x6
  409f74:	adrp	x9, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  409f78:	mov	x29, sp
  409f7c:	b.eq	409f9c <print_color_float@@Base+0x34>  // b.none
  409f80:	ldr	x0, [x9, #3440]
  409f84:	cbz	x0, 409f9c <print_color_float@@Base+0x34>
  409f88:	cbz	x2, 409fcc <print_color_float@@Base+0x64>
  409f8c:	mov	x1, x2
  409f90:	bl	40b0e4 <jsonw_float_field@@Base>
  409f94:	ldp	x29, x30, [sp], #16
  409f98:	ret
  409f9c:	mov	w10, #0x5                   	// #5
  409fa0:	tst	w8, w10
  409fa4:	b.eq	409fc4 <print_color_float@@Base+0x5c>  // b.none
  409fa8:	ldr	x8, [x9, #3440]
  409fac:	cbnz	x8, 409fc4 <print_color_float@@Base+0x5c>
  409fb0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  409fb4:	ldr	x8, [x8, #4016]
  409fb8:	mov	x2, x3
  409fbc:	ldr	x0, [x8]
  409fc0:	bl	40a530 <color_fprintf@@Base>
  409fc4:	ldp	x29, x30, [sp], #16
  409fc8:	ret
  409fcc:	bl	40af48 <jsonw_float@@Base>
  409fd0:	ldp	x29, x30, [sp], #16
  409fd4:	ret

0000000000409fd8 <print_uint_name_value@@Base>:
  409fd8:	sub	sp, sp, #0x60
  409fdc:	stp	x20, x19, [sp, #80]
  409fe0:	mov	x20, x0
  409fe4:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9a0>
  409fe8:	mov	w19, w1
  409fec:	add	x2, x2, #0x72
  409ff0:	mov	x0, sp
  409ff4:	mov	w1, #0x40                  	// #64
  409ff8:	mov	x3, x20
  409ffc:	stp	x29, x30, [sp, #64]
  40a000:	add	x29, sp, #0x40
  40a004:	bl	404ec0 <snprintf@plt>
  40a008:	mov	x1, sp
  40a00c:	mov	x0, x20
  40a010:	mov	w2, w19
  40a014:	bl	40a028 <print_uint_name_value@@Base+0x50>
  40a018:	ldp	x20, x19, [sp, #80]
  40a01c:	ldp	x29, x30, [sp, #64]
  40a020:	add	sp, sp, #0x60
  40a024:	ret
  40a028:	stp	x29, x30, [sp, #-16]!
  40a02c:	mov	w4, w2
  40a030:	mov	x3, x1
  40a034:	mov	x2, x0
  40a038:	mov	w0, #0x4                   	// #4
  40a03c:	mov	w1, #0x6                   	// #6
  40a040:	mov	x29, sp
  40a044:	bl	409d78 <print_color_uint@@Base>
  40a048:	ldp	x29, x30, [sp], #16
  40a04c:	ret

000000000040a050 <print_string_name_value@@Base>:
  40a050:	sub	sp, sp, #0x60
  40a054:	stp	x20, x19, [sp, #80]
  40a058:	mov	x20, x0
  40a05c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40a060:	mov	x19, x1
  40a064:	add	x2, x2, #0x79
  40a068:	mov	x0, sp
  40a06c:	mov	w1, #0x40                  	// #64
  40a070:	mov	x3, x20
  40a074:	stp	x29, x30, [sp, #64]
  40a078:	add	x29, sp, #0x40
  40a07c:	bl	404ec0 <snprintf@plt>
  40a080:	mov	x2, sp
  40a084:	mov	w0, #0x4                   	// #4
  40a088:	mov	x1, x20
  40a08c:	mov	x3, x19
  40a090:	bl	40a0a4 <print_string_name_value@@Base+0x54>
  40a094:	ldp	x20, x19, [sp, #80]
  40a098:	ldp	x29, x30, [sp, #64]
  40a09c:	add	sp, sp, #0x60
  40a0a0:	ret
  40a0a4:	stp	x29, x30, [sp, #-16]!
  40a0a8:	mov	x4, x3
  40a0ac:	mov	x3, x2
  40a0b0:	mov	x2, x1
  40a0b4:	mov	w1, #0x6                   	// #6
  40a0b8:	mov	x29, sp
  40a0bc:	bl	40a0c8 <print_color_string@@Base>
  40a0c0:	ldp	x29, x30, [sp], #16
  40a0c4:	ret

000000000040a0c8 <print_color_string@@Base>:
  40a0c8:	stp	x29, x30, [sp, #-16]!
  40a0cc:	mov	w8, w0
  40a0d0:	tst	w0, #0x6
  40a0d4:	adrp	x9, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  40a0d8:	mov	x29, sp
  40a0dc:	b.eq	40a100 <print_color_string@@Base+0x38>  // b.none
  40a0e0:	ldr	x0, [x9, #3440]
  40a0e4:	cbz	x0, 40a100 <print_color_string@@Base+0x38>
  40a0e8:	cbz	x2, 40a134 <print_color_string@@Base+0x6c>
  40a0ec:	cbnz	x4, 40a134 <print_color_string@@Base+0x6c>
  40a0f0:	mov	x1, x2
  40a0f4:	bl	40aa58 <jsonw_name@@Base>
  40a0f8:	ldp	x29, x30, [sp], #16
  40a0fc:	ret
  40a100:	mov	w10, #0x5                   	// #5
  40a104:	tst	w8, w10
  40a108:	b.eq	40a12c <print_color_string@@Base+0x64>  // b.none
  40a10c:	ldr	x8, [x9, #3440]
  40a110:	cbnz	x8, 40a12c <print_color_string@@Base+0x64>
  40a114:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40a118:	ldr	x8, [x8, #4016]
  40a11c:	mov	x2, x3
  40a120:	mov	x3, x4
  40a124:	ldr	x0, [x8]
  40a128:	bl	40a530 <color_fprintf@@Base>
  40a12c:	ldp	x29, x30, [sp], #16
  40a130:	ret
  40a134:	cbnz	x2, 40a14c <print_color_string@@Base+0x84>
  40a138:	cbz	x4, 40a14c <print_color_string@@Base+0x84>
  40a13c:	mov	x1, x4
  40a140:	bl	40aec8 <jsonw_string@@Base>
  40a144:	ldp	x29, x30, [sp], #16
  40a148:	ret
  40a14c:	mov	x1, x2
  40a150:	mov	x2, x4
  40a154:	bl	40b084 <jsonw_string_field@@Base>
  40a158:	ldp	x29, x30, [sp], #16
  40a15c:	ret

000000000040a160 <print_color_bool@@Base>:
  40a160:	stp	x29, x30, [sp, #-16]!
  40a164:	mov	w8, w0
  40a168:	tst	w0, #0x6
  40a16c:	adrp	x9, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  40a170:	mov	x29, sp
  40a174:	b.eq	40a19c <print_color_bool@@Base+0x3c>  // b.none
  40a178:	ldr	x0, [x9, #3440]
  40a17c:	cbz	x0, 40a19c <print_color_bool@@Base+0x3c>
  40a180:	cbz	x2, 40a1e8 <print_color_bool@@Base+0x88>
  40a184:	and	w8, w4, #0x1
  40a188:	mov	x1, x2
  40a18c:	mov	w2, w8
  40a190:	bl	40b0b4 <jsonw_bool_field@@Base>
  40a194:	ldp	x29, x30, [sp], #16
  40a198:	ret
  40a19c:	mov	w10, #0x5                   	// #5
  40a1a0:	tst	w8, w10
  40a1a4:	b.eq	40a1e0 <print_color_bool@@Base+0x80>  // b.none
  40a1a8:	ldr	x8, [x9, #3440]
  40a1ac:	cbnz	x8, 40a1e0 <print_color_bool@@Base+0x80>
  40a1b0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40a1b4:	ldr	x8, [x8, #4016]
  40a1b8:	adrp	x9, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40a1bc:	add	x9, x9, #0x80
  40a1c0:	tst	w4, #0x1
  40a1c4:	ldr	x0, [x8]
  40a1c8:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40a1cc:	add	x8, x8, #0x85
  40a1d0:	csel	x8, x9, x8, ne  // ne = any
  40a1d4:	mov	x2, x3
  40a1d8:	mov	x3, x8
  40a1dc:	bl	40a530 <color_fprintf@@Base>
  40a1e0:	ldp	x29, x30, [sp], #16
  40a1e4:	ret
  40a1e8:	and	w1, w4, #0x1
  40a1ec:	bl	40aef8 <jsonw_bool@@Base>
  40a1f0:	ldp	x29, x30, [sp], #16
  40a1f4:	ret

000000000040a1f8 <print_color_0xhex@@Base>:
  40a1f8:	sub	sp, sp, #0x60
  40a1fc:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  40a200:	ldr	x8, [x8, #3440]
  40a204:	tst	w0, #0x6
  40a208:	stp	x29, x30, [sp, #64]
  40a20c:	str	x19, [sp, #80]
  40a210:	add	x29, sp, #0x40
  40a214:	b.eq	40a250 <print_color_0xhex@@Base+0x58>  // b.none
  40a218:	cbz	x8, 40a250 <print_color_0xhex@@Base+0x58>
  40a21c:	mov	x19, x2
  40a220:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40a224:	add	x2, x2, #0x8b
  40a228:	mov	x0, sp
  40a22c:	mov	w1, #0x40                  	// #64
  40a230:	mov	x3, x4
  40a234:	bl	404ec0 <snprintf@plt>
  40a238:	mov	x3, sp
  40a23c:	mov	w0, #0x2                   	// #2
  40a240:	mov	x1, x19
  40a244:	mov	x2, xzr
  40a248:	bl	40a0a4 <print_string_name_value@@Base+0x54>
  40a24c:	b	40a278 <print_color_0xhex@@Base+0x80>
  40a250:	mov	w9, #0x5                   	// #5
  40a254:	tst	w0, w9
  40a258:	b.eq	40a278 <print_color_0xhex@@Base+0x80>  // b.none
  40a25c:	cbnz	x8, 40a278 <print_color_0xhex@@Base+0x80>
  40a260:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40a264:	ldr	x8, [x8, #4016]
  40a268:	mov	x2, x3
  40a26c:	mov	x3, x4
  40a270:	ldr	x0, [x8]
  40a274:	bl	40a530 <color_fprintf@@Base>
  40a278:	ldr	x19, [sp, #80]
  40a27c:	ldp	x29, x30, [sp, #64]
  40a280:	add	sp, sp, #0x60
  40a284:	ret

000000000040a288 <print_color_hex@@Base>:
  40a288:	sub	sp, sp, #0x60
  40a28c:	stp	x20, x19, [sp, #80]
  40a290:	adrp	x20, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  40a294:	ldr	x8, [x20, #3440]
  40a298:	tst	w0, #0x6
  40a29c:	stp	x29, x30, [sp, #64]
  40a2a0:	add	x29, sp, #0x40
  40a2a4:	b.eq	40a2e0 <print_color_hex@@Base+0x58>  // b.none
  40a2a8:	cbz	x8, 40a2e0 <print_color_hex@@Base+0x58>
  40a2ac:	mov	x19, x2
  40a2b0:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40a2b4:	add	x2, x2, #0x6f
  40a2b8:	mov	x0, sp
  40a2bc:	mov	w1, #0x40                  	// #64
  40a2c0:	mov	w3, w4
  40a2c4:	bl	404ec0 <snprintf@plt>
  40a2c8:	ldr	x0, [x20, #3440]
  40a2cc:	cbz	x19, 40a30c <print_color_hex@@Base+0x84>
  40a2d0:	mov	x2, sp
  40a2d4:	mov	x1, x19
  40a2d8:	bl	40b084 <jsonw_string_field@@Base>
  40a2dc:	b	40a314 <print_color_hex@@Base+0x8c>
  40a2e0:	mov	w9, #0x5                   	// #5
  40a2e4:	tst	w0, w9
  40a2e8:	b.eq	40a314 <print_color_hex@@Base+0x8c>  // b.none
  40a2ec:	cbnz	x8, 40a314 <print_color_hex@@Base+0x8c>
  40a2f0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40a2f4:	ldr	x8, [x8, #4016]
  40a2f8:	mov	x2, x3
  40a2fc:	mov	w3, w4
  40a300:	ldr	x0, [x8]
  40a304:	bl	40a530 <color_fprintf@@Base>
  40a308:	b	40a314 <print_color_hex@@Base+0x8c>
  40a30c:	mov	x1, sp
  40a310:	bl	40aec8 <jsonw_string@@Base>
  40a314:	ldp	x20, x19, [sp, #80]
  40a318:	ldp	x29, x30, [sp, #64]
  40a31c:	add	sp, sp, #0x60
  40a320:	ret

000000000040a324 <print_color_null@@Base>:
  40a324:	stp	x29, x30, [sp, #-16]!
  40a328:	mov	w8, w0
  40a32c:	tst	w0, #0x6
  40a330:	adrp	x9, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  40a334:	mov	x29, sp
  40a338:	b.eq	40a358 <print_color_null@@Base+0x34>  // b.none
  40a33c:	ldr	x0, [x9, #3440]
  40a340:	cbz	x0, 40a358 <print_color_null@@Base+0x34>
  40a344:	cbz	x2, 40a38c <print_color_null@@Base+0x68>
  40a348:	mov	x1, x2
  40a34c:	bl	40b2cc <jsonw_null_field@@Base>
  40a350:	ldp	x29, x30, [sp], #16
  40a354:	ret
  40a358:	mov	w10, #0x5                   	// #5
  40a35c:	tst	w8, w10
  40a360:	b.eq	40a384 <print_color_null@@Base+0x60>  // b.none
  40a364:	ldr	x8, [x9, #3440]
  40a368:	cbnz	x8, 40a384 <print_color_null@@Base+0x60>
  40a36c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40a370:	ldr	x8, [x8, #4016]
  40a374:	mov	x2, x3
  40a378:	mov	x3, x4
  40a37c:	ldr	x0, [x8]
  40a380:	bl	40a530 <color_fprintf@@Base>
  40a384:	ldp	x29, x30, [sp], #16
  40a388:	ret
  40a38c:	bl	40af2c <jsonw_null@@Base>
  40a390:	ldp	x29, x30, [sp], #16
  40a394:	ret

000000000040a398 <print_nl@@Base>:
  40a398:	stp	x29, x30, [sp, #-16]!
  40a39c:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  40a3a0:	ldr	x8, [x8, #3440]
  40a3a4:	mov	x29, sp
  40a3a8:	cbz	x8, 40a3b4 <print_nl@@Base+0x1c>
  40a3ac:	ldp	x29, x30, [sp], #16
  40a3b0:	ret
  40a3b4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40a3b8:	ldr	x8, [x8, #4048]
  40a3bc:	adrp	x0, 40d000 <rta_addattr8@@Base+0x4>
  40a3c0:	add	x0, x0, #0xc61
  40a3c4:	ldr	x1, [x8]
  40a3c8:	bl	405280 <printf@plt>
  40a3cc:	ldp	x29, x30, [sp], #16
  40a3d0:	ret

000000000040a3d4 <check_enable_color@@Base>:
  40a3d4:	stp	x29, x30, [sp, #-16]!
  40a3d8:	mov	w8, w0
  40a3dc:	mov	w0, wzr
  40a3e0:	mov	x29, sp
  40a3e4:	cbz	w8, 40a414 <check_enable_color@@Base+0x40>
  40a3e8:	cbnz	w1, 40a414 <check_enable_color@@Base+0x40>
  40a3ec:	cmp	w8, #0x2
  40a3f0:	b.eq	40a40c <check_enable_color@@Base+0x38>  // b.none
  40a3f4:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40a3f8:	ldr	x8, [x8, #4016]
  40a3fc:	ldr	x0, [x8]
  40a400:	bl	404ed0 <fileno@plt>
  40a404:	bl	4051d0 <isatty@plt>
  40a408:	cbz	w0, 40a414 <check_enable_color@@Base+0x40>
  40a40c:	bl	40a41c <check_enable_color@@Base+0x48>
  40a410:	mov	w0, #0x1                   	// #1
  40a414:	ldp	x29, x30, [sp], #16
  40a418:	ret
  40a41c:	stp	x29, x30, [sp, #-16]!
  40a420:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  40a424:	mov	w9, #0x1                   	// #1
  40a428:	mov	x29, sp
  40a42c:	strb	w9, [x8, #3448]
  40a430:	bl	40a698 <oper_state_color@@Base+0x20>
  40a434:	ldp	x29, x30, [sp], #16
  40a438:	ret

000000000040a43c <matches_color@@Base>:
  40a43c:	stp	x29, x30, [sp, #-48]!
  40a440:	str	x21, [sp, #16]
  40a444:	stp	x20, x19, [sp, #32]
  40a448:	mov	x29, sp
  40a44c:	cbz	x1, 40a4b0 <matches_color@@Base+0x74>
  40a450:	mov	x19, x1
  40a454:	mov	x20, x0
  40a458:	bl	404dc0 <strlen@plt>
  40a45c:	add	x9, x0, #0x10
  40a460:	mov	x8, sp
  40a464:	and	x9, x9, #0xfffffffffffffff0
  40a468:	sub	x21, x8, x9
  40a46c:	add	x2, x0, #0x1
  40a470:	mov	sp, x21
  40a474:	mov	x0, x21
  40a478:	mov	x1, x20
  40a47c:	bl	404d90 <memcpy@plt>
  40a480:	mov	w1, #0x3d                  	// #61
  40a484:	mov	x0, x21
  40a488:	bl	405220 <strchrnul@plt>
  40a48c:	ldrb	w8, [x0]
  40a490:	mov	x20, x0
  40a494:	cbz	w8, 40a49c <matches_color@@Base+0x60>
  40a498:	strb	wzr, [x20], #1
  40a49c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40a4a0:	add	x1, x1, #0x9d
  40a4a4:	mov	x0, x21
  40a4a8:	bl	40749c <matches@@Base>
  40a4ac:	tbz	w0, #0, 40a4b8 <matches_color@@Base+0x7c>
  40a4b0:	mov	w0, wzr
  40a4b4:	b	40a510 <matches_color@@Base+0xd4>
  40a4b8:	ldrb	w8, [x20]
  40a4bc:	cbz	w8, 40a504 <matches_color@@Base+0xc8>
  40a4c0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40a4c4:	add	x1, x1, #0xa4
  40a4c8:	mov	x0, x20
  40a4cc:	bl	4050a0 <strcmp@plt>
  40a4d0:	cbz	w0, 40a504 <matches_color@@Base+0xc8>
  40a4d4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40a4d8:	add	x1, x1, #0xab
  40a4dc:	mov	x0, x20
  40a4e0:	bl	4050a0 <strcmp@plt>
  40a4e4:	cbz	w0, 40a524 <matches_color@@Base+0xe8>
  40a4e8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40a4ec:	add	x1, x1, #0xb0
  40a4f0:	mov	x0, x20
  40a4f4:	bl	4050a0 <strcmp@plt>
  40a4f8:	cbnz	w0, 40a4b0 <matches_color@@Base+0x74>
  40a4fc:	str	wzr, [x19]
  40a500:	b	40a50c <matches_color@@Base+0xd0>
  40a504:	mov	w8, #0x2                   	// #2
  40a508:	str	w8, [x19]
  40a50c:	mov	w0, #0x1                   	// #1
  40a510:	mov	sp, x29
  40a514:	ldp	x20, x19, [sp, #32]
  40a518:	ldr	x21, [sp, #16]
  40a51c:	ldp	x29, x30, [sp], #48
  40a520:	ret
  40a524:	mov	w0, #0x1                   	// #1
  40a528:	str	w0, [x19]
  40a52c:	b	40a510 <matches_color@@Base+0xd4>

000000000040a530 <color_fprintf@@Base>:
  40a530:	sub	sp, sp, #0x130
  40a534:	stp	x29, x30, [sp, #240]
  40a538:	add	x29, sp, #0xf0
  40a53c:	mov	x8, #0xffffffffffffffd8    	// #-40
  40a540:	mov	x9, sp
  40a544:	sub	x10, x29, #0x68
  40a548:	stp	x20, x19, [sp, #288]
  40a54c:	mov	x20, x2
  40a550:	mov	x19, x0
  40a554:	movk	x8, #0xff80, lsl #32
  40a558:	add	x11, x29, #0x40
  40a55c:	cmp	w1, #0x6
  40a560:	add	x9, x9, #0x80
  40a564:	add	x10, x10, #0x28
  40a568:	str	x28, [sp, #256]
  40a56c:	stp	x22, x21, [sp, #272]
  40a570:	stp	x3, x4, [x29, #-104]
  40a574:	stp	x5, x6, [x29, #-88]
  40a578:	stur	x7, [x29, #-72]
  40a57c:	stp	q1, q2, [sp, #16]
  40a580:	stp	q3, q4, [sp, #48]
  40a584:	str	q0, [sp]
  40a588:	stp	q5, q6, [sp, #80]
  40a58c:	str	q7, [sp, #112]
  40a590:	stp	x9, x8, [x29, #-16]
  40a594:	stp	x11, x10, [x29, #-32]
  40a598:	b.eq	40a628 <color_fprintf@@Base+0xf8>  // b.none
  40a59c:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  40a5a0:	ldrb	w8, [x8, #3448]
  40a5a4:	cbz	w8, 40a628 <color_fprintf@@Base+0xf8>
  40a5a8:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  40a5ac:	ldrb	w8, [x8, #3452]
  40a5b0:	adrp	x9, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40a5b4:	adrp	x10, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40a5b8:	add	x9, x9, #0x144
  40a5bc:	add	x10, x10, #0x128
  40a5c0:	cmp	w8, #0x0
  40a5c4:	csel	x8, x10, x9, ne  // ne = any
  40a5c8:	ldr	w8, [x8, w1, uxtw #2]
  40a5cc:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40a5d0:	add	x9, x9, #0xd00
  40a5d4:	adrp	x21, 40d000 <rta_addattr8@@Base+0x4>
  40a5d8:	ldr	x2, [x9, x8, lsl #3]
  40a5dc:	add	x21, x21, #0xc61
  40a5e0:	mov	x0, x19
  40a5e4:	mov	x1, x21
  40a5e8:	bl	4052e0 <fprintf@plt>
  40a5ec:	ldp	q0, q1, [x29, #-32]
  40a5f0:	mov	w22, w0
  40a5f4:	sub	x2, x29, #0x40
  40a5f8:	mov	x0, x19
  40a5fc:	mov	x1, x20
  40a600:	stp	q0, q1, [x29, #-64]
  40a604:	bl	405270 <vfprintf@plt>
  40a608:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40a60c:	add	w20, w0, w22
  40a610:	add	x2, x2, #0x122
  40a614:	mov	x0, x19
  40a618:	mov	x1, x21
  40a61c:	bl	4052e0 <fprintf@plt>
  40a620:	add	w0, w20, w0
  40a624:	b	40a640 <color_fprintf@@Base+0x110>
  40a628:	ldp	q0, q1, [x29, #-32]
  40a62c:	sub	x2, x29, #0x40
  40a630:	mov	x0, x19
  40a634:	mov	x1, x20
  40a638:	stp	q0, q1, [x29, #-64]
  40a63c:	bl	405270 <vfprintf@plt>
  40a640:	ldp	x20, x19, [sp, #288]
  40a644:	ldp	x22, x21, [sp, #272]
  40a648:	ldr	x28, [sp, #256]
  40a64c:	ldp	x29, x30, [sp, #240]
  40a650:	add	sp, sp, #0x130
  40a654:	ret

000000000040a658 <ifa_family_color@@Base>:
  40a658:	and	w8, w0, #0xff
  40a65c:	mov	w9, #0x6                   	// #6
  40a660:	mov	w10, #0x3                   	// #3
  40a664:	cmp	w8, #0xa
  40a668:	csel	w9, w10, w9, eq  // eq = none
  40a66c:	cmp	w8, #0x2
  40a670:	csel	w0, w8, w9, eq  // eq = none
  40a674:	ret

000000000040a678 <oper_state_color@@Base>:
  40a678:	and	w8, w0, #0xff
  40a67c:	mov	w9, #0x5                   	// #5
  40a680:	cmp	w8, #0x2
  40a684:	cinc	w9, w9, ne  // ne = any
  40a688:	cmp	w8, #0x6
  40a68c:	mov	w8, #0x4                   	// #4
  40a690:	csel	w0, w8, w9, eq  // eq = none
  40a694:	ret
  40a698:	stp	x29, x30, [sp, #-16]!
  40a69c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40a6a0:	add	x0, x0, #0xb6
  40a6a4:	mov	x29, sp
  40a6a8:	bl	4052b0 <getenv@plt>
  40a6ac:	cbz	x0, 40a6d4 <oper_state_color@@Base+0x5c>
  40a6b0:	mov	w1, #0x3b                  	// #59
  40a6b4:	bl	405050 <strrchr@plt>
  40a6b8:	cbz	x0, 40a6d4 <oper_state_color@@Base+0x5c>
  40a6bc:	ldrb	w8, [x0, #1]
  40a6c0:	sub	w9, w8, #0x30
  40a6c4:	cmp	w9, #0x7
  40a6c8:	b.cs	40a6f0 <oper_state_color@@Base+0x78>  // b.hs, b.nlast
  40a6cc:	ldrb	w8, [x0, #2]
  40a6d0:	cbz	w8, 40a6dc <oper_state_color@@Base+0x64>
  40a6d4:	ldp	x29, x30, [sp], #16
  40a6d8:	ret
  40a6dc:	adrp	x8, 423000 <stdout@@GLIBC_2.17+0x3ce8>
  40a6e0:	mov	w9, #0x1                   	// #1
  40a6e4:	strb	w9, [x8, #3452]
  40a6e8:	ldp	x29, x30, [sp], #16
  40a6ec:	ret
  40a6f0:	cmp	w8, #0x38
  40a6f4:	b.eq	40a6cc <oper_state_color@@Base+0x54>  // b.none
  40a6f8:	b	40a6d4 <oper_state_color@@Base+0x5c>

000000000040a6fc <mpls_ntop@@Base>:
  40a6fc:	stp	x29, x30, [sp, #-48]!
  40a700:	stp	x22, x21, [sp, #16]
  40a704:	stp	x20, x19, [sp, #32]
  40a708:	mov	x29, sp
  40a70c:	mov	x19, x3
  40a710:	mov	x20, x2
  40a714:	mov	x21, x1
  40a718:	mov	w22, w0
  40a71c:	bl	4052a0 <__errno_location@plt>
  40a720:	cmp	w22, #0x1c
  40a724:	mov	x8, x0
  40a728:	b.ne	40a744 <mpls_ntop@@Base+0x48>  // b.any
  40a72c:	mov	x0, x21
  40a730:	mov	x1, x20
  40a734:	mov	x2, x19
  40a738:	str	wzr, [x8]
  40a73c:	bl	40a760 <mpls_ntop@@Base+0x64>
  40a740:	b	40a750 <mpls_ntop@@Base+0x54>
  40a744:	mov	x0, xzr
  40a748:	mov	w9, #0x61                  	// #97
  40a74c:	str	w9, [x8]
  40a750:	ldp	x20, x19, [sp, #32]
  40a754:	ldp	x22, x21, [sp, #16]
  40a758:	ldp	x29, x30, [sp], #48
  40a75c:	ret
  40a760:	stp	x29, x30, [sp, #-80]!
  40a764:	stp	x22, x21, [sp, #48]
  40a768:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40a76c:	str	x25, [sp, #16]
  40a770:	stp	x24, x23, [sp, #32]
  40a774:	stp	x20, x19, [sp, #64]
  40a778:	mov	x23, x2
  40a77c:	mov	x19, x1
  40a780:	mov	x20, x0
  40a784:	add	x21, x21, #0x76
  40a788:	mov	w25, #0x2f                  	// #47
  40a78c:	mov	x22, x1
  40a790:	mov	x29, sp
  40a794:	b	40a7a4 <mpls_ntop@@Base+0xa8>
  40a798:	mov	w8, #0x3                   	// #3
  40a79c:	add	x20, x20, #0x4
  40a7a0:	cbnz	w8, 40a804 <mpls_ntop@@Base+0x108>
  40a7a4:	ldr	w0, [x20]
  40a7a8:	bl	40a838 <mpls_ntop@@Base+0x13c>
  40a7ac:	mov	w24, w0
  40a7b0:	lsr	w3, w0, #12
  40a7b4:	mov	x0, x22
  40a7b8:	mov	x1, x23
  40a7bc:	mov	x2, x21
  40a7c0:	bl	404ec0 <snprintf@plt>
  40a7c4:	sxtw	x8, w0
  40a7c8:	cmp	x23, x8
  40a7cc:	b.ls	40a798 <mpls_ntop@@Base+0x9c>  // b.plast
  40a7d0:	tbnz	w24, #8, 40a7f0 <mpls_ntop@@Base+0xf4>
  40a7d4:	subs	x9, x23, x8
  40a7d8:	add	x22, x22, x8
  40a7dc:	b.eq	40a7f8 <mpls_ntop@@Base+0xfc>  // b.none
  40a7e0:	mov	w8, wzr
  40a7e4:	strb	w25, [x22], #1
  40a7e8:	sub	x23, x9, #0x1
  40a7ec:	b	40a79c <mpls_ntop@@Base+0xa0>
  40a7f0:	mov	w8, #0x1                   	// #1
  40a7f4:	b	40a79c <mpls_ntop@@Base+0xa0>
  40a7f8:	mov	x23, xzr
  40a7fc:	mov	w8, wzr
  40a800:	b	40a79c <mpls_ntop@@Base+0xa0>
  40a804:	cmp	w8, #0x3
  40a808:	b.ne	40a81c <mpls_ntop@@Base+0x120>  // b.any
  40a80c:	bl	4052a0 <__errno_location@plt>
  40a810:	mov	x19, xzr
  40a814:	mov	w8, #0xfffffff9            	// #-7
  40a818:	str	w8, [x0]
  40a81c:	mov	x0, x19
  40a820:	ldp	x20, x19, [sp, #64]
  40a824:	ldp	x22, x21, [sp, #48]
  40a828:	ldp	x24, x23, [sp, #32]
  40a82c:	ldr	x25, [sp, #16]
  40a830:	ldp	x29, x30, [sp], #80
  40a834:	ret
  40a838:	rev	w0, w0
  40a83c:	ret

000000000040a840 <mpls_pton@@Base>:
  40a840:	stp	x29, x30, [sp, #-48]!
  40a844:	stp	x22, x21, [sp, #16]
  40a848:	stp	x20, x19, [sp, #32]
  40a84c:	mov	x29, sp
  40a850:	mov	x21, x3
  40a854:	mov	x19, x2
  40a858:	mov	x20, x1
  40a85c:	mov	w22, w0
  40a860:	bl	4052a0 <__errno_location@plt>
  40a864:	cmp	w22, #0x1c
  40a868:	b.ne	40a884 <mpls_pton@@Base+0x44>  // b.any
  40a86c:	lsr	x2, x21, #2
  40a870:	str	wzr, [x0]
  40a874:	mov	x0, x20
  40a878:	mov	x1, x19
  40a87c:	bl	40a8a0 <mpls_pton@@Base+0x60>
  40a880:	b	40a890 <mpls_pton@@Base+0x50>
  40a884:	mov	w8, #0x61                  	// #97
  40a888:	str	w8, [x0]
  40a88c:	mov	w0, #0xffffffff            	// #-1
  40a890:	ldp	x20, x19, [sp, #32]
  40a894:	ldp	x22, x21, [sp, #16]
  40a898:	ldp	x29, x30, [sp], #48
  40a89c:	ret
  40a8a0:	sub	sp, sp, #0x50
  40a8a4:	stp	x29, x30, [sp, #16]
  40a8a8:	stp	x24, x23, [sp, #32]
  40a8ac:	stp	x22, x21, [sp, #48]
  40a8b0:	stp	x20, x19, [sp, #64]
  40a8b4:	add	x29, sp, #0x10
  40a8b8:	cbz	w2, 40a968 <mpls_pton@@Base+0x128>
  40a8bc:	mov	w19, w2
  40a8c0:	mov	x20, x1
  40a8c4:	mov	x21, x0
  40a8c8:	b	40a8dc <mpls_pton@@Base+0x9c>
  40a8cc:	mov	w22, w8
  40a8d0:	tbz	w8, #0, 40a98c <mpls_pton@@Base+0x14c>
  40a8d4:	subs	w19, w19, #0x1
  40a8d8:	b.eq	40a968 <mpls_pton@@Base+0x128>  // b.none
  40a8dc:	add	x1, sp, #0x8
  40a8e0:	mov	x0, x21
  40a8e4:	mov	w2, wzr
  40a8e8:	bl	404db0 <strtoul@plt>
  40a8ec:	lsr	x9, x0, #20
  40a8f0:	mov	w8, wzr
  40a8f4:	cbnz	x9, 40a8cc <mpls_pton@@Base+0x8c>
  40a8f8:	ldr	x24, [sp, #8]
  40a8fc:	cmp	x24, x21
  40a900:	b.eq	40a8cc <mpls_pton@@Base+0x8c>  // b.none
  40a904:	lsl	w0, w0, #12
  40a908:	bl	40a9a8 <mpls_pton@@Base+0x168>
  40a90c:	str	w0, [x20]
  40a910:	ldrb	w8, [x24]
  40a914:	cmp	w8, #0x2f
  40a918:	b.eq	40a944 <mpls_pton@@Base+0x104>  // b.none
  40a91c:	cbnz	w8, 40a958 <mpls_pton@@Base+0x118>
  40a920:	mov	w23, w0
  40a924:	mov	w0, #0x100                 	// #256
  40a928:	bl	40a9a8 <mpls_pton@@Base+0x168>
  40a92c:	orr	w9, w0, w23
  40a930:	mov	w22, #0x1                   	// #1
  40a934:	mov	w8, wzr
  40a938:	str	w9, [x20]
  40a93c:	tbnz	wzr, #0, 40a8d4 <mpls_pton@@Base+0x94>
  40a940:	b	40a98c <mpls_pton@@Base+0x14c>
  40a944:	add	x21, x24, #0x1
  40a948:	add	x20, x20, #0x4
  40a94c:	mov	w8, #0x1                   	// #1
  40a950:	tbnz	w8, #0, 40a8d4 <mpls_pton@@Base+0x94>
  40a954:	b	40a98c <mpls_pton@@Base+0x14c>
  40a958:	mov	w22, wzr
  40a95c:	mov	w8, wzr
  40a960:	tbnz	wzr, #0, 40a8d4 <mpls_pton@@Base+0x94>
  40a964:	b	40a98c <mpls_pton@@Base+0x14c>
  40a968:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40a96c:	ldr	x8, [x8, #3992]
  40a970:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40a974:	add	x0, x0, #0x160
  40a978:	mov	w1, #0x18                  	// #24
  40a97c:	ldr	x3, [x8]
  40a980:	mov	w2, #0x1                   	// #1
  40a984:	bl	405170 <fwrite@plt>
  40a988:	mov	w22, wzr
  40a98c:	mov	w0, w22
  40a990:	ldp	x20, x19, [sp, #64]
  40a994:	ldp	x22, x21, [sp, #48]
  40a998:	ldp	x24, x23, [sp, #32]
  40a99c:	ldp	x29, x30, [sp, #16]
  40a9a0:	add	sp, sp, #0x50
  40a9a4:	ret
  40a9a8:	rev	w0, w0
  40a9ac:	ret

000000000040a9b0 <jsonw_new@@Base>:
  40a9b0:	stp	x29, x30, [sp, #-32]!
  40a9b4:	str	x19, [sp, #16]
  40a9b8:	mov	x19, x0
  40a9bc:	mov	w0, #0x10                  	// #16
  40a9c0:	mov	x29, sp
  40a9c4:	bl	404f20 <malloc@plt>
  40a9c8:	cbz	x0, 40a9d8 <jsonw_new@@Base+0x28>
  40a9cc:	str	x19, [x0]
  40a9d0:	str	wzr, [x0, #8]
  40a9d4:	strh	wzr, [x0, #12]
  40a9d8:	ldr	x19, [sp, #16]
  40a9dc:	ldp	x29, x30, [sp], #32
  40a9e0:	ret

000000000040a9e4 <jsonw_destroy@@Base>:
  40a9e4:	stp	x29, x30, [sp, #-32]!
  40a9e8:	stp	x20, x19, [sp, #16]
  40a9ec:	ldr	x20, [x0]
  40a9f0:	mov	x29, sp
  40a9f4:	ldr	w8, [x20, #8]
  40a9f8:	cbnz	w8, 40aa2c <jsonw_destroy@@Base+0x48>
  40a9fc:	ldr	x1, [x20]
  40aa00:	mov	x19, x0
  40aa04:	mov	w0, #0xa                   	// #10
  40aa08:	bl	404ea0 <fputc@plt>
  40aa0c:	ldr	x0, [x20]
  40aa10:	bl	405190 <fflush@plt>
  40aa14:	mov	x0, x20
  40aa18:	bl	405110 <free@plt>
  40aa1c:	str	xzr, [x19]
  40aa20:	ldp	x20, x19, [sp, #16]
  40aa24:	ldp	x29, x30, [sp], #32
  40aa28:	ret
  40aa2c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40aa30:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40aa34:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40aa38:	add	x0, x0, #0x1a1
  40aa3c:	add	x1, x1, #0x1b2
  40aa40:	add	x3, x3, #0x1c0
  40aa44:	mov	w2, #0x6e                  	// #110
  40aa48:	bl	405290 <__assert_fail@plt>

000000000040aa4c <jsonw_pretty@@Base>:
  40aa4c:	and	w8, w1, #0x1
  40aa50:	strb	w8, [x0, #12]
  40aa54:	ret

000000000040aa58 <jsonw_name@@Base>:
  40aa58:	stp	x29, x30, [sp, #-32]!
  40aa5c:	stp	x20, x19, [sp, #16]
  40aa60:	mov	x29, sp
  40aa64:	mov	x20, x1
  40aa68:	mov	x19, x0
  40aa6c:	bl	40aab4 <jsonw_name@@Base+0x5c>
  40aa70:	mov	x0, x19
  40aa74:	bl	40aae8 <jsonw_name@@Base+0x90>
  40aa78:	mov	x0, x19
  40aa7c:	mov	x1, x20
  40aa80:	strb	wzr, [x19, #13]
  40aa84:	bl	40ab20 <jsonw_name@@Base+0xc8>
  40aa88:	ldr	x1, [x19]
  40aa8c:	mov	w0, #0x3a                  	// #58
  40aa90:	bl	404e80 <putc@plt>
  40aa94:	ldrb	w8, [x19, #12]
  40aa98:	cbz	w8, 40aaa8 <jsonw_name@@Base+0x50>
  40aa9c:	ldr	x1, [x19]
  40aaa0:	mov	w0, #0x20                  	// #32
  40aaa4:	bl	404e80 <putc@plt>
  40aaa8:	ldp	x20, x19, [sp, #16]
  40aaac:	ldp	x29, x30, [sp], #32
  40aab0:	ret
  40aab4:	stp	x29, x30, [sp, #-32]!
  40aab8:	str	x19, [sp, #16]
  40aabc:	mov	x19, x0
  40aac0:	ldrb	w0, [x0, #13]
  40aac4:	mov	x29, sp
  40aac8:	cbz	w0, 40aad4 <jsonw_name@@Base+0x7c>
  40aacc:	ldr	x1, [x19]
  40aad0:	bl	404e80 <putc@plt>
  40aad4:	mov	w8, #0x2c                  	// #44
  40aad8:	strb	w8, [x19, #13]
  40aadc:	ldr	x19, [sp, #16]
  40aae0:	ldp	x29, x30, [sp], #32
  40aae4:	ret
  40aae8:	stp	x29, x30, [sp, #-32]!
  40aaec:	ldrb	w8, [x0, #12]
  40aaf0:	str	x19, [sp, #16]
  40aaf4:	mov	x29, sp
  40aaf8:	cbz	w8, 40ab14 <jsonw_name@@Base+0xbc>
  40aafc:	ldr	x1, [x0]
  40ab00:	mov	x19, x0
  40ab04:	mov	w0, #0xa                   	// #10
  40ab08:	bl	404e80 <putc@plt>
  40ab0c:	mov	x0, x19
  40ab10:	bl	40b2f4 <jsonw_null_field@@Base+0x28>
  40ab14:	ldr	x19, [sp, #16]
  40ab18:	ldp	x29, x30, [sp], #32
  40ab1c:	ret
  40ab20:	stp	x29, x30, [sp, #-96]!
  40ab24:	stp	x28, x27, [sp, #16]
  40ab28:	stp	x26, x25, [sp, #32]
  40ab2c:	stp	x24, x23, [sp, #48]
  40ab30:	stp	x22, x21, [sp, #64]
  40ab34:	stp	x20, x19, [sp, #80]
  40ab38:	ldr	x8, [x0]
  40ab3c:	mov	x19, x0
  40ab40:	mov	x20, x1
  40ab44:	mov	w0, #0x22                  	// #34
  40ab48:	mov	x1, x8
  40ab4c:	mov	x29, sp
  40ab50:	bl	404e80 <putc@plt>
  40ab54:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40ab58:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40ab5c:	adrp	x23, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40ab60:	adrp	x24, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40ab64:	adrp	x25, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40ab68:	adrp	x26, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40ab6c:	adrp	x27, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40ab70:	adrp	x28, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40ab74:	add	x21, x21, #0x179
  40ab78:	add	x22, x22, #0x218
  40ab7c:	add	x23, x23, #0x20c
  40ab80:	add	x24, x24, #0x20f
  40ab84:	add	x25, x25, #0x215
  40ab88:	add	x26, x26, #0x212
  40ab8c:	add	x27, x27, #0x21e
  40ab90:	add	x28, x28, #0x221
  40ab94:	b	40aba4 <jsonw_name@@Base+0x14c>
  40ab98:	ldr	x1, [x19]
  40ab9c:	bl	404e80 <putc@plt>
  40aba0:	add	x20, x20, #0x1
  40aba4:	ldrb	w0, [x20]
  40aba8:	cmp	w0, #0x27
  40abac:	b.hi	40abdc <jsonw_name@@Base+0x184>  // b.pmore
  40abb0:	adr	x8, 40ab98 <jsonw_name@@Base+0x140>
  40abb4:	ldrb	w9, [x21, x0]
  40abb8:	add	x8, x8, x9, lsl #2
  40abbc:	br	x8
  40abc0:	ldr	x3, [x19]
  40abc4:	mov	w1, #0x2                   	// #2
  40abc8:	mov	w2, #0x1                   	// #1
  40abcc:	mov	x0, x22
  40abd0:	bl	405170 <fwrite@plt>
  40abd4:	add	x20, x20, #0x1
  40abd8:	b	40aba4 <jsonw_name@@Base+0x14c>
  40abdc:	cmp	w0, #0x5c
  40abe0:	b.ne	40ab98 <jsonw_name@@Base+0x140>  // b.any
  40abe4:	ldr	x3, [x19]
  40abe8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40abec:	mov	w1, #0x2                   	// #2
  40abf0:	mov	w2, #0x1                   	// #1
  40abf4:	add	x0, x0, #0x21b
  40abf8:	bl	405170 <fwrite@plt>
  40abfc:	add	x20, x20, #0x1
  40ac00:	b	40aba4 <jsonw_name@@Base+0x14c>
  40ac04:	ldr	x3, [x19]
  40ac08:	mov	w1, #0x2                   	// #2
  40ac0c:	mov	w2, #0x1                   	// #1
  40ac10:	mov	x0, x23
  40ac14:	bl	405170 <fwrite@plt>
  40ac18:	add	x20, x20, #0x1
  40ac1c:	b	40aba4 <jsonw_name@@Base+0x14c>
  40ac20:	ldr	x3, [x19]
  40ac24:	mov	w1, #0x2                   	// #2
  40ac28:	mov	w2, #0x1                   	// #1
  40ac2c:	mov	x0, x24
  40ac30:	bl	405170 <fwrite@plt>
  40ac34:	add	x20, x20, #0x1
  40ac38:	b	40aba4 <jsonw_name@@Base+0x14c>
  40ac3c:	ldr	x3, [x19]
  40ac40:	mov	w1, #0x2                   	// #2
  40ac44:	mov	w2, #0x1                   	// #1
  40ac48:	mov	x0, x25
  40ac4c:	bl	405170 <fwrite@plt>
  40ac50:	add	x20, x20, #0x1
  40ac54:	b	40aba4 <jsonw_name@@Base+0x14c>
  40ac58:	ldr	x3, [x19]
  40ac5c:	mov	w1, #0x2                   	// #2
  40ac60:	mov	w2, #0x1                   	// #1
  40ac64:	mov	x0, x26
  40ac68:	bl	405170 <fwrite@plt>
  40ac6c:	add	x20, x20, #0x1
  40ac70:	b	40aba4 <jsonw_name@@Base+0x14c>
  40ac74:	ldr	x3, [x19]
  40ac78:	mov	w1, #0x2                   	// #2
  40ac7c:	mov	w2, #0x1                   	// #1
  40ac80:	mov	x0, x27
  40ac84:	bl	405170 <fwrite@plt>
  40ac88:	add	x20, x20, #0x1
  40ac8c:	b	40aba4 <jsonw_name@@Base+0x14c>
  40ac90:	ldr	x3, [x19]
  40ac94:	mov	w1, #0x2                   	// #2
  40ac98:	mov	w2, #0x1                   	// #1
  40ac9c:	mov	x0, x28
  40aca0:	bl	405170 <fwrite@plt>
  40aca4:	add	x20, x20, #0x1
  40aca8:	b	40aba4 <jsonw_name@@Base+0x14c>
  40acac:	ldr	x1, [x19]
  40acb0:	mov	w0, #0x22                  	// #34
  40acb4:	bl	404e80 <putc@plt>
  40acb8:	ldp	x20, x19, [sp, #80]
  40acbc:	ldp	x22, x21, [sp, #64]
  40acc0:	ldp	x24, x23, [sp, #48]
  40acc4:	ldp	x26, x25, [sp, #32]
  40acc8:	ldp	x28, x27, [sp, #16]
  40accc:	ldp	x29, x30, [sp], #96
  40acd0:	ret

000000000040acd4 <jsonw_printf@@Base>:
  40acd4:	sub	sp, sp, #0x120
  40acd8:	stp	x29, x30, [sp, #240]
  40acdc:	add	x29, sp, #0xf0
  40ace0:	mov	x8, #0xffffffffffffffd0    	// #-48
  40ace4:	mov	x9, sp
  40ace8:	sub	x10, x29, #0x70
  40acec:	movk	x8, #0xff80, lsl #32
  40acf0:	add	x11, x29, #0x30
  40acf4:	add	x9, x9, #0x80
  40acf8:	add	x10, x10, #0x30
  40acfc:	str	x28, [sp, #256]
  40ad00:	stp	x20, x19, [sp, #272]
  40ad04:	mov	x19, x1
  40ad08:	mov	x20, x0
  40ad0c:	stp	x2, x3, [x29, #-112]
  40ad10:	stp	x4, x5, [x29, #-96]
  40ad14:	stp	x6, x7, [x29, #-80]
  40ad18:	stp	q1, q2, [sp, #16]
  40ad1c:	stp	q3, q4, [sp, #48]
  40ad20:	str	q0, [sp]
  40ad24:	stp	q5, q6, [sp, #80]
  40ad28:	str	q7, [sp, #112]
  40ad2c:	stp	x9, x8, [x29, #-16]
  40ad30:	stp	x11, x10, [x29, #-32]
  40ad34:	bl	40aab4 <jsonw_name@@Base+0x5c>
  40ad38:	ldp	q0, q1, [x29, #-32]
  40ad3c:	ldr	x0, [x20]
  40ad40:	sub	x2, x29, #0x40
  40ad44:	mov	x1, x19
  40ad48:	stp	q0, q1, [x29, #-64]
  40ad4c:	bl	405270 <vfprintf@plt>
  40ad50:	ldp	x20, x19, [sp, #272]
  40ad54:	ldr	x28, [sp, #256]
  40ad58:	ldp	x29, x30, [sp, #240]
  40ad5c:	add	sp, sp, #0x120
  40ad60:	ret

000000000040ad64 <jsonw_start_object@@Base>:
  40ad64:	stp	x29, x30, [sp, #-16]!
  40ad68:	mov	w1, #0x7b                  	// #123
  40ad6c:	mov	x29, sp
  40ad70:	bl	40ad7c <jsonw_start_object@@Base+0x18>
  40ad74:	ldp	x29, x30, [sp], #16
  40ad78:	ret
  40ad7c:	stp	x29, x30, [sp, #-32]!
  40ad80:	stp	x20, x19, [sp, #16]
  40ad84:	mov	x29, sp
  40ad88:	mov	w19, w1
  40ad8c:	mov	x20, x0
  40ad90:	bl	40aab4 <jsonw_name@@Base+0x5c>
  40ad94:	ldr	x1, [x20]
  40ad98:	mov	w0, w19
  40ad9c:	bl	404e80 <putc@plt>
  40ada0:	ldr	w8, [x20, #8]
  40ada4:	strb	wzr, [x20, #13]
  40ada8:	add	w8, w8, #0x1
  40adac:	str	w8, [x20, #8]
  40adb0:	ldp	x20, x19, [sp, #16]
  40adb4:	ldp	x29, x30, [sp], #32
  40adb8:	ret

000000000040adbc <jsonw_end_object@@Base>:
  40adbc:	stp	x29, x30, [sp, #-16]!
  40adc0:	mov	w1, #0x7d                  	// #125
  40adc4:	mov	x29, sp
  40adc8:	bl	40add4 <jsonw_end_object@@Base+0x18>
  40adcc:	ldp	x29, x30, [sp], #16
  40add0:	ret
  40add4:	stp	x29, x30, [sp, #-32]!
  40add8:	stp	x20, x19, [sp, #16]
  40addc:	ldr	w8, [x0, #8]
  40ade0:	mov	x29, sp
  40ade4:	cbz	w8, 40ae28 <jsonw_end_object@@Base+0x6c>
  40ade8:	ldrb	w9, [x0, #13]
  40adec:	mov	x19, x0
  40adf0:	mov	w20, w1
  40adf4:	sub	w8, w8, #0x1
  40adf8:	str	w8, [x0, #8]
  40adfc:	cbz	w9, 40ae08 <jsonw_end_object@@Base+0x4c>
  40ae00:	mov	x0, x19
  40ae04:	bl	40aae8 <jsonw_name@@Base+0x90>
  40ae08:	ldr	x1, [x19]
  40ae0c:	mov	w0, w20
  40ae10:	bl	404e80 <putc@plt>
  40ae14:	mov	w8, #0x2c                  	// #44
  40ae18:	strb	w8, [x19, #13]
  40ae1c:	ldp	x20, x19, [sp, #16]
  40ae20:	ldp	x29, x30, [sp], #32
  40ae24:	ret
  40ae28:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40ae2c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40ae30:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40ae34:	add	x0, x0, #0x224
  40ae38:	add	x1, x1, #0x1b2
  40ae3c:	add	x3, x3, #0x234
  40ae40:	mov	w2, #0x85                  	// #133
  40ae44:	bl	405290 <__assert_fail@plt>

000000000040ae48 <jsonw_start_array@@Base>:
  40ae48:	stp	x29, x30, [sp, #-32]!
  40ae4c:	mov	w1, #0x5b                  	// #91
  40ae50:	str	x19, [sp, #16]
  40ae54:	mov	x29, sp
  40ae58:	mov	x19, x0
  40ae5c:	bl	40ad7c <jsonw_start_object@@Base+0x18>
  40ae60:	ldrb	w8, [x19, #12]
  40ae64:	cbz	w8, 40ae74 <jsonw_start_array@@Base+0x2c>
  40ae68:	ldr	x1, [x19]
  40ae6c:	mov	w0, #0x20                  	// #32
  40ae70:	bl	404e80 <putc@plt>
  40ae74:	ldr	x19, [sp, #16]
  40ae78:	ldp	x29, x30, [sp], #32
  40ae7c:	ret

000000000040ae80 <jsonw_end_array@@Base>:
  40ae80:	stp	x29, x30, [sp, #-32]!
  40ae84:	ldrb	w8, [x0, #12]
  40ae88:	str	x19, [sp, #16]
  40ae8c:	mov	x19, x0
  40ae90:	mov	x29, sp
  40ae94:	cbz	w8, 40aeac <jsonw_end_array@@Base+0x2c>
  40ae98:	ldrb	w8, [x19, #13]
  40ae9c:	cbz	w8, 40aeac <jsonw_end_array@@Base+0x2c>
  40aea0:	ldr	x1, [x19]
  40aea4:	mov	w0, #0x20                  	// #32
  40aea8:	bl	404e80 <putc@plt>
  40aeac:	mov	w1, #0x5d                  	// #93
  40aeb0:	mov	x0, x19
  40aeb4:	strb	wzr, [x19, #13]
  40aeb8:	bl	40add4 <jsonw_end_object@@Base+0x18>
  40aebc:	ldr	x19, [sp, #16]
  40aec0:	ldp	x29, x30, [sp], #32
  40aec4:	ret

000000000040aec8 <jsonw_string@@Base>:
  40aec8:	stp	x29, x30, [sp, #-32]!
  40aecc:	stp	x20, x19, [sp, #16]
  40aed0:	mov	x29, sp
  40aed4:	mov	x19, x1
  40aed8:	mov	x20, x0
  40aedc:	bl	40aab4 <jsonw_name@@Base+0x5c>
  40aee0:	mov	x0, x20
  40aee4:	mov	x1, x19
  40aee8:	bl	40ab20 <jsonw_name@@Base+0xc8>
  40aeec:	ldp	x20, x19, [sp, #16]
  40aef0:	ldp	x29, x30, [sp], #32
  40aef4:	ret

000000000040aef8 <jsonw_bool@@Base>:
  40aef8:	stp	x29, x30, [sp, #-16]!
  40aefc:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40af00:	adrp	x9, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40af04:	add	x8, x8, #0x85
  40af08:	add	x9, x9, #0x80
  40af0c:	tst	w1, #0x1
  40af10:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  40af14:	csel	x2, x9, x8, ne  // ne = any
  40af18:	add	x1, x1, #0xc61
  40af1c:	mov	x29, sp
  40af20:	bl	40acd4 <jsonw_printf@@Base>
  40af24:	ldp	x29, x30, [sp], #16
  40af28:	ret

000000000040af2c <jsonw_null@@Base>:
  40af2c:	stp	x29, x30, [sp, #-16]!
  40af30:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40af34:	add	x1, x1, #0x1e5
  40af38:	mov	x29, sp
  40af3c:	bl	40acd4 <jsonw_printf@@Base>
  40af40:	ldp	x29, x30, [sp], #16
  40af44:	ret

000000000040af48 <jsonw_float@@Base>:
  40af48:	stp	x29, x30, [sp, #-16]!
  40af4c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40af50:	add	x1, x1, #0x1ea
  40af54:	mov	x29, sp
  40af58:	bl	40acd4 <jsonw_printf@@Base>
  40af5c:	ldp	x29, x30, [sp], #16
  40af60:	ret

000000000040af64 <jsonw_hhu@@Base>:
  40af64:	stp	x29, x30, [sp, #-16]!
  40af68:	and	w2, w1, #0xff
  40af6c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40af70:	add	x1, x1, #0x1ed
  40af74:	mov	x29, sp
  40af78:	bl	40acd4 <jsonw_printf@@Base>
  40af7c:	ldp	x29, x30, [sp], #16
  40af80:	ret

000000000040af84 <jsonw_hu@@Base>:
  40af84:	stp	x29, x30, [sp, #-16]!
  40af88:	and	w2, w1, #0xffff
  40af8c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40af90:	add	x1, x1, #0x1f2
  40af94:	mov	x29, sp
  40af98:	bl	40acd4 <jsonw_printf@@Base>
  40af9c:	ldp	x29, x30, [sp], #16
  40afa0:	ret

000000000040afa4 <jsonw_uint@@Base>:
  40afa4:	stp	x29, x30, [sp, #-16]!
  40afa8:	mov	w2, w1
  40afac:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40afb0:	add	x1, x1, #0x76
  40afb4:	mov	x29, sp
  40afb8:	bl	40acd4 <jsonw_printf@@Base>
  40afbc:	ldp	x29, x30, [sp], #16
  40afc0:	ret

000000000040afc4 <jsonw_u64@@Base>:
  40afc4:	stp	x29, x30, [sp, #-16]!
  40afc8:	mov	x2, x1
  40afcc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40afd0:	add	x1, x1, #0x1f6
  40afd4:	mov	x29, sp
  40afd8:	bl	40acd4 <jsonw_printf@@Base>
  40afdc:	ldp	x29, x30, [sp], #16
  40afe0:	ret

000000000040afe4 <jsonw_xint@@Base>:
  40afe4:	stp	x29, x30, [sp, #-16]!
  40afe8:	mov	x2, x1
  40afec:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40aff0:	add	x1, x1, #0x1fa
  40aff4:	mov	x29, sp
  40aff8:	bl	40acd4 <jsonw_printf@@Base>
  40affc:	ldp	x29, x30, [sp], #16
  40b000:	ret

000000000040b004 <jsonw_luint@@Base>:
  40b004:	stp	x29, x30, [sp, #-16]!
  40b008:	mov	x2, x1
  40b00c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40b010:	add	x1, x1, #0x1f6
  40b014:	mov	x29, sp
  40b018:	bl	40acd4 <jsonw_printf@@Base>
  40b01c:	ldp	x29, x30, [sp], #16
  40b020:	ret

000000000040b024 <jsonw_lluint@@Base>:
  40b024:	stp	x29, x30, [sp, #-16]!
  40b028:	mov	x2, x1
  40b02c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40b030:	add	x1, x1, #0x1fe
  40b034:	mov	x29, sp
  40b038:	bl	40acd4 <jsonw_printf@@Base>
  40b03c:	ldp	x29, x30, [sp], #16
  40b040:	ret

000000000040b044 <jsonw_int@@Base>:
  40b044:	stp	x29, x30, [sp, #-16]!
  40b048:	mov	w2, w1
  40b04c:	adrp	x1, 40d000 <rta_addattr8@@Base+0x4>
  40b050:	add	x1, x1, #0xfd0
  40b054:	mov	x29, sp
  40b058:	bl	40acd4 <jsonw_printf@@Base>
  40b05c:	ldp	x29, x30, [sp], #16
  40b060:	ret

000000000040b064 <jsonw_s64@@Base>:
  40b064:	stp	x29, x30, [sp, #-16]!
  40b068:	mov	x2, x1
  40b06c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40b070:	add	x1, x1, #0x203
  40b074:	mov	x29, sp
  40b078:	bl	40acd4 <jsonw_printf@@Base>
  40b07c:	ldp	x29, x30, [sp], #16
  40b080:	ret

000000000040b084 <jsonw_string_field@@Base>:
  40b084:	stp	x29, x30, [sp, #-32]!
  40b088:	stp	x20, x19, [sp, #16]
  40b08c:	mov	x29, sp
  40b090:	mov	x19, x2
  40b094:	mov	x20, x0
  40b098:	bl	40aa58 <jsonw_name@@Base>
  40b09c:	mov	x0, x20
  40b0a0:	mov	x1, x19
  40b0a4:	bl	40aec8 <jsonw_string@@Base>
  40b0a8:	ldp	x20, x19, [sp, #16]
  40b0ac:	ldp	x29, x30, [sp], #32
  40b0b0:	ret

000000000040b0b4 <jsonw_bool_field@@Base>:
  40b0b4:	stp	x29, x30, [sp, #-32]!
  40b0b8:	stp	x20, x19, [sp, #16]
  40b0bc:	mov	x29, sp
  40b0c0:	mov	w19, w2
  40b0c4:	mov	x20, x0
  40b0c8:	bl	40aa58 <jsonw_name@@Base>
  40b0cc:	and	w1, w19, #0x1
  40b0d0:	mov	x0, x20
  40b0d4:	bl	40aef8 <jsonw_bool@@Base>
  40b0d8:	ldp	x20, x19, [sp, #16]
  40b0dc:	ldp	x29, x30, [sp], #32
  40b0e0:	ret

000000000040b0e4 <jsonw_float_field@@Base>:
  40b0e4:	str	d8, [sp, #-32]!
  40b0e8:	stp	x29, x30, [sp, #8]
  40b0ec:	str	x19, [sp, #24]
  40b0f0:	mov	x29, sp
  40b0f4:	mov	v8.16b, v0.16b
  40b0f8:	mov	x19, x0
  40b0fc:	bl	40aa58 <jsonw_name@@Base>
  40b100:	mov	x0, x19
  40b104:	mov	v0.16b, v8.16b
  40b108:	bl	40af48 <jsonw_float@@Base>
  40b10c:	ldr	x19, [sp, #24]
  40b110:	ldp	x29, x30, [sp, #8]
  40b114:	ldr	d8, [sp], #32
  40b118:	ret

000000000040b11c <jsonw_uint_field@@Base>:
  40b11c:	stp	x29, x30, [sp, #-32]!
  40b120:	stp	x20, x19, [sp, #16]
  40b124:	mov	x29, sp
  40b128:	mov	w19, w2
  40b12c:	mov	x20, x0
  40b130:	bl	40aa58 <jsonw_name@@Base>
  40b134:	mov	x0, x20
  40b138:	mov	w1, w19
  40b13c:	bl	40afa4 <jsonw_uint@@Base>
  40b140:	ldp	x20, x19, [sp, #16]
  40b144:	ldp	x29, x30, [sp], #32
  40b148:	ret

000000000040b14c <jsonw_u64_field@@Base>:
  40b14c:	stp	x29, x30, [sp, #-32]!
  40b150:	stp	x20, x19, [sp, #16]
  40b154:	mov	x29, sp
  40b158:	mov	x19, x2
  40b15c:	mov	x20, x0
  40b160:	bl	40aa58 <jsonw_name@@Base>
  40b164:	mov	x0, x20
  40b168:	mov	x1, x19
  40b16c:	bl	40afc4 <jsonw_u64@@Base>
  40b170:	ldp	x20, x19, [sp, #16]
  40b174:	ldp	x29, x30, [sp], #32
  40b178:	ret

000000000040b17c <jsonw_xint_field@@Base>:
  40b17c:	stp	x29, x30, [sp, #-32]!
  40b180:	stp	x20, x19, [sp, #16]
  40b184:	mov	x29, sp
  40b188:	mov	x19, x2
  40b18c:	mov	x20, x0
  40b190:	bl	40aa58 <jsonw_name@@Base>
  40b194:	mov	x0, x20
  40b198:	mov	x1, x19
  40b19c:	bl	40afe4 <jsonw_xint@@Base>
  40b1a0:	ldp	x20, x19, [sp, #16]
  40b1a4:	ldp	x29, x30, [sp], #32
  40b1a8:	ret

000000000040b1ac <jsonw_hhu_field@@Base>:
  40b1ac:	stp	x29, x30, [sp, #-32]!
  40b1b0:	stp	x20, x19, [sp, #16]
  40b1b4:	mov	x29, sp
  40b1b8:	mov	w19, w2
  40b1bc:	mov	x20, x0
  40b1c0:	bl	40aa58 <jsonw_name@@Base>
  40b1c4:	mov	x0, x20
  40b1c8:	mov	w1, w19
  40b1cc:	bl	40af64 <jsonw_hhu@@Base>
  40b1d0:	ldp	x20, x19, [sp, #16]
  40b1d4:	ldp	x29, x30, [sp], #32
  40b1d8:	ret

000000000040b1dc <jsonw_hu_field@@Base>:
  40b1dc:	stp	x29, x30, [sp, #-32]!
  40b1e0:	stp	x20, x19, [sp, #16]
  40b1e4:	mov	x29, sp
  40b1e8:	mov	w19, w2
  40b1ec:	mov	x20, x0
  40b1f0:	bl	40aa58 <jsonw_name@@Base>
  40b1f4:	mov	x0, x20
  40b1f8:	mov	w1, w19
  40b1fc:	bl	40af84 <jsonw_hu@@Base>
  40b200:	ldp	x20, x19, [sp, #16]
  40b204:	ldp	x29, x30, [sp], #32
  40b208:	ret

000000000040b20c <jsonw_luint_field@@Base>:
  40b20c:	stp	x29, x30, [sp, #-32]!
  40b210:	stp	x20, x19, [sp, #16]
  40b214:	mov	x29, sp
  40b218:	mov	x19, x2
  40b21c:	mov	x20, x0
  40b220:	bl	40aa58 <jsonw_name@@Base>
  40b224:	mov	x0, x20
  40b228:	mov	x1, x19
  40b22c:	bl	40b004 <jsonw_luint@@Base>
  40b230:	ldp	x20, x19, [sp, #16]
  40b234:	ldp	x29, x30, [sp], #32
  40b238:	ret

000000000040b23c <jsonw_lluint_field@@Base>:
  40b23c:	stp	x29, x30, [sp, #-32]!
  40b240:	stp	x20, x19, [sp, #16]
  40b244:	mov	x29, sp
  40b248:	mov	x19, x2
  40b24c:	mov	x20, x0
  40b250:	bl	40aa58 <jsonw_name@@Base>
  40b254:	mov	x0, x20
  40b258:	mov	x1, x19
  40b25c:	bl	40b024 <jsonw_lluint@@Base>
  40b260:	ldp	x20, x19, [sp, #16]
  40b264:	ldp	x29, x30, [sp], #32
  40b268:	ret

000000000040b26c <jsonw_int_field@@Base>:
  40b26c:	stp	x29, x30, [sp, #-32]!
  40b270:	stp	x20, x19, [sp, #16]
  40b274:	mov	x29, sp
  40b278:	mov	w19, w2
  40b27c:	mov	x20, x0
  40b280:	bl	40aa58 <jsonw_name@@Base>
  40b284:	mov	x0, x20
  40b288:	mov	w1, w19
  40b28c:	bl	40b044 <jsonw_int@@Base>
  40b290:	ldp	x20, x19, [sp, #16]
  40b294:	ldp	x29, x30, [sp], #32
  40b298:	ret

000000000040b29c <jsonw_s64_field@@Base>:
  40b29c:	stp	x29, x30, [sp, #-32]!
  40b2a0:	stp	x20, x19, [sp, #16]
  40b2a4:	mov	x29, sp
  40b2a8:	mov	x19, x2
  40b2ac:	mov	x20, x0
  40b2b0:	bl	40aa58 <jsonw_name@@Base>
  40b2b4:	mov	x0, x20
  40b2b8:	mov	x1, x19
  40b2bc:	bl	40b064 <jsonw_s64@@Base>
  40b2c0:	ldp	x20, x19, [sp, #16]
  40b2c4:	ldp	x29, x30, [sp], #32
  40b2c8:	ret

000000000040b2cc <jsonw_null_field@@Base>:
  40b2cc:	stp	x29, x30, [sp, #-32]!
  40b2d0:	str	x19, [sp, #16]
  40b2d4:	mov	x29, sp
  40b2d8:	mov	x19, x0
  40b2dc:	bl	40aa58 <jsonw_name@@Base>
  40b2e0:	mov	x0, x19
  40b2e4:	bl	40af2c <jsonw_null@@Base>
  40b2e8:	ldr	x19, [sp, #16]
  40b2ec:	ldp	x29, x30, [sp], #32
  40b2f0:	ret
  40b2f4:	stp	x29, x30, [sp, #-48]!
  40b2f8:	stp	x20, x19, [sp, #32]
  40b2fc:	ldr	w8, [x0, #8]
  40b300:	str	x21, [sp, #16]
  40b304:	mov	x29, sp
  40b308:	cbz	w8, 40b340 <jsonw_null_field@@Base+0x74>
  40b30c:	adrp	x20, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40b310:	mov	x19, x0
  40b314:	mov	w21, wzr
  40b318:	add	x20, x20, #0x207
  40b31c:	ldr	x3, [x19]
  40b320:	mov	w1, #0x4                   	// #4
  40b324:	mov	w2, #0x1                   	// #1
  40b328:	mov	x0, x20
  40b32c:	bl	405170 <fwrite@plt>
  40b330:	ldr	w8, [x19, #8]
  40b334:	add	w21, w21, #0x1
  40b338:	cmp	w21, w8
  40b33c:	b.cc	40b31c <jsonw_null_field@@Base+0x50>  // b.lo, b.ul, b.last
  40b340:	ldp	x20, x19, [sp, #32]
  40b344:	ldr	x21, [sp, #16]
  40b348:	ldp	x29, x30, [sp], #48
  40b34c:	ret

000000000040b350 <nl_dump_ext_ack@@Base>:
  40b350:	mov	w0, wzr
  40b354:	ret

000000000040b358 <nl_dump_ext_ack_done@@Base>:
  40b358:	mov	w0, wzr
  40b35c:	ret

000000000040b360 <rtnl_set_strict_dump@@Base>:
  40b360:	stp	x29, x30, [sp, #-32]!
  40b364:	mov	x29, sp
  40b368:	mov	w8, #0x1                   	// #1
  40b36c:	str	w8, [x29, #28]
  40b370:	str	x19, [sp, #16]
  40b374:	mov	x19, x0
  40b378:	ldr	w0, [x0]
  40b37c:	add	x3, x29, #0x1c
  40b380:	mov	w1, #0x10e                 	// #270
  40b384:	mov	w2, #0xc                   	// #12
  40b388:	mov	w4, #0x4                   	// #4
  40b38c:	bl	404f30 <setsockopt@plt>
  40b390:	tbnz	w0, #31, 40b3a0 <rtnl_set_strict_dump@@Base+0x40>
  40b394:	ldr	w8, [x19, #48]
  40b398:	orr	w8, w8, #0x4
  40b39c:	str	w8, [x19, #48]
  40b3a0:	ldr	x19, [sp, #16]
  40b3a4:	ldp	x29, x30, [sp], #32
  40b3a8:	ret

000000000040b3ac <rtnl_add_nl_group@@Base>:
  40b3ac:	sub	sp, sp, #0x20
  40b3b0:	stp	x29, x30, [sp, #16]
  40b3b4:	add	x29, sp, #0x10
  40b3b8:	stur	w1, [x29, #-4]
  40b3bc:	ldr	w0, [x0]
  40b3c0:	sub	x3, x29, #0x4
  40b3c4:	mov	w1, #0x10e                 	// #270
  40b3c8:	mov	w2, #0x1                   	// #1
  40b3cc:	mov	w4, #0x4                   	// #4
  40b3d0:	bl	404f30 <setsockopt@plt>
  40b3d4:	ldp	x29, x30, [sp, #16]
  40b3d8:	add	sp, sp, #0x20
  40b3dc:	ret

000000000040b3e0 <rtnl_close@@Base>:
  40b3e0:	stp	x29, x30, [sp, #-32]!
  40b3e4:	str	x19, [sp, #16]
  40b3e8:	mov	x19, x0
  40b3ec:	ldr	w0, [x0]
  40b3f0:	mov	x29, sp
  40b3f4:	tbnz	w0, #31, 40b404 <rtnl_close@@Base+0x24>
  40b3f8:	bl	405040 <close@plt>
  40b3fc:	mov	w8, #0xffffffff            	// #-1
  40b400:	str	w8, [x19]
  40b404:	ldr	x19, [sp, #16]
  40b408:	ldp	x29, x30, [sp], #32
  40b40c:	ret

000000000040b410 <rtnl_open_byproto@@Base>:
  40b410:	sub	sp, sp, #0x40
  40b414:	stp	x29, x30, [sp, #16]
  40b418:	stp	x20, x19, [sp, #48]
  40b41c:	add	x29, sp, #0x10
  40b420:	mov	w20, w1
  40b424:	mov	w8, #0x8000                	// #32768
  40b428:	mov	w9, #0x1                   	// #1
  40b42c:	movi	v0.2d, #0x0
  40b430:	mov	w1, #0x3                   	// #3
  40b434:	str	x21, [sp, #32]
  40b438:	mov	x19, x0
  40b43c:	str	w8, [x29, #24]
  40b440:	stur	w9, [x29, #-4]
  40b444:	stp	q0, q0, [x0, #16]
  40b448:	str	xzr, [x0, #48]
  40b44c:	str	q0, [x0]
  40b450:	str	w2, [x0, #36]
  40b454:	mov	w0, #0x10                  	// #16
  40b458:	movk	w1, #0x8, lsl #16
  40b45c:	bl	405180 <socket@plt>
  40b460:	str	w0, [x19]
  40b464:	tbnz	w0, #31, 40b52c <rtnl_open_byproto@@Base+0x11c>
  40b468:	add	x3, x29, #0x18
  40b46c:	mov	w1, #0x1                   	// #1
  40b470:	mov	w2, #0x7                   	// #7
  40b474:	mov	w4, #0x4                   	// #4
  40b478:	bl	404f30 <setsockopt@plt>
  40b47c:	tbnz	w0, #31, 40b538 <rtnl_open_byproto@@Base+0x128>
  40b480:	adrp	x3, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40b484:	ldr	w0, [x19]
  40b488:	ldr	x3, [x3, #4024]
  40b48c:	mov	w1, #0x1                   	// #1
  40b490:	mov	w2, #0x8                   	// #8
  40b494:	mov	w4, #0x4                   	// #4
  40b498:	bl	404f30 <setsockopt@plt>
  40b49c:	tbnz	w0, #31, 40b544 <rtnl_open_byproto@@Base+0x134>
  40b4a0:	ldr	w0, [x19]
  40b4a4:	sub	x3, x29, #0x4
  40b4a8:	mov	w1, #0x10e                 	// #270
  40b4ac:	mov	w2, #0xb                   	// #11
  40b4b0:	mov	w4, #0x4                   	// #4
  40b4b4:	bl	404f30 <setsockopt@plt>
  40b4b8:	mov	x21, x19
  40b4bc:	str	xzr, [x21, #4]!
  40b4c0:	mov	w8, #0x10                  	// #16
  40b4c4:	strh	w8, [x21]
  40b4c8:	ldr	w0, [x19]
  40b4cc:	mov	w2, #0xc                   	// #12
  40b4d0:	mov	x1, x21
  40b4d4:	str	w20, [x19, #12]
  40b4d8:	mov	w20, #0xc                   	// #12
  40b4dc:	bl	404e40 <bind@plt>
  40b4e0:	tbnz	w0, #31, 40b550 <rtnl_open_byproto@@Base+0x140>
  40b4e4:	str	w20, [x29, #28]
  40b4e8:	ldr	w0, [x19]
  40b4ec:	add	x2, x29, #0x1c
  40b4f0:	mov	x1, x21
  40b4f4:	bl	4052d0 <getsockname@plt>
  40b4f8:	tbnz	w0, #31, 40b55c <rtnl_open_byproto@@Base+0x14c>
  40b4fc:	ldr	w2, [x29, #28]
  40b500:	cmp	w2, #0xc
  40b504:	b.ne	40b56c <rtnl_open_byproto@@Base+0x15c>  // b.any
  40b508:	ldrh	w2, [x21]
  40b50c:	cmp	w2, #0x10
  40b510:	b.ne	40b580 <rtnl_open_byproto@@Base+0x170>  // b.any
  40b514:	mov	x0, xzr
  40b518:	bl	404f10 <time@plt>
  40b51c:	mov	x8, x0
  40b520:	mov	w0, wzr
  40b524:	str	w8, [x19, #28]
  40b528:	b	40b59c <rtnl_open_byproto@@Base+0x18c>
  40b52c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40b530:	add	x0, x0, #0x259
  40b534:	b	40b564 <rtnl_open_byproto@@Base+0x154>
  40b538:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40b53c:	add	x0, x0, #0x274
  40b540:	b	40b564 <rtnl_open_byproto@@Base+0x154>
  40b544:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40b548:	add	x0, x0, #0x27e
  40b54c:	b	40b564 <rtnl_open_byproto@@Base+0x154>
  40b550:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40b554:	add	x0, x0, #0x288
  40b558:	b	40b564 <rtnl_open_byproto@@Base+0x154>
  40b55c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40b560:	add	x0, x0, #0x2a3
  40b564:	bl	404de0 <perror@plt>
  40b568:	b	40b598 <rtnl_open_byproto@@Base+0x188>
  40b56c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40b570:	ldr	x8, [x8, #3992]
  40b574:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40b578:	add	x1, x1, #0x2b6
  40b57c:	b	40b590 <rtnl_open_byproto@@Base+0x180>
  40b580:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40b584:	ldr	x8, [x8, #3992]
  40b588:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40b58c:	add	x1, x1, #0x2cf
  40b590:	ldr	x0, [x8]
  40b594:	bl	4052e0 <fprintf@plt>
  40b598:	mov	w0, #0xffffffff            	// #-1
  40b59c:	ldp	x20, x19, [sp, #48]
  40b5a0:	ldr	x21, [sp, #32]
  40b5a4:	ldp	x29, x30, [sp, #16]
  40b5a8:	add	sp, sp, #0x40
  40b5ac:	ret

000000000040b5b0 <rtnl_open@@Base>:
  40b5b0:	stp	x29, x30, [sp, #-16]!
  40b5b4:	mov	w2, wzr
  40b5b8:	mov	x29, sp
  40b5bc:	bl	40b410 <rtnl_open_byproto@@Base>
  40b5c0:	ldp	x29, x30, [sp], #16
  40b5c4:	ret

000000000040b5c8 <rtnl_nexthopdump_req@@Base>:
  40b5c8:	sub	sp, sp, #0xc0
  40b5cc:	mov	x8, #0x18                  	// #24
  40b5d0:	movk	x8, #0x6a, lsl #32
  40b5d4:	movi	v0.2d, #0x0
  40b5d8:	movk	x8, #0x301, lsl #48
  40b5dc:	stp	x29, x30, [sp, #160]
  40b5e0:	str	xzr, [sp, #144]
  40b5e4:	stp	q0, q0, [sp, #112]
  40b5e8:	stp	q0, q0, [sp, #80]
  40b5ec:	stp	q0, q0, [sp, #48]
  40b5f0:	stp	q0, q0, [sp, #16]
  40b5f4:	str	q0, [sp]
  40b5f8:	str	x8, [sp]
  40b5fc:	ldr	w8, [x0, #28]
  40b600:	str	x19, [sp, #176]
  40b604:	mov	x19, x0
  40b608:	add	x29, sp, #0xa0
  40b60c:	add	w8, w8, #0x1
  40b610:	stp	w8, w8, [x0, #28]
  40b614:	str	w8, [sp, #8]
  40b618:	strb	w1, [sp, #16]
  40b61c:	cbz	x2, 40b630 <rtnl_nexthopdump_req@@Base+0x68>
  40b620:	mov	x0, sp
  40b624:	mov	w1, #0x98                  	// #152
  40b628:	blr	x2
  40b62c:	cbnz	w0, 40b644 <rtnl_nexthopdump_req@@Base+0x7c>
  40b630:	ldr	w0, [x19]
  40b634:	mov	x1, sp
  40b638:	mov	w2, #0x98                  	// #152
  40b63c:	mov	w3, wzr
  40b640:	bl	405130 <send@plt>
  40b644:	ldr	x19, [sp, #176]
  40b648:	ldp	x29, x30, [sp, #160]
  40b64c:	add	sp, sp, #0xc0
  40b650:	ret

000000000040b654 <rtnl_addrdump_req@@Base>:
  40b654:	sub	sp, sp, #0xc0
  40b658:	mov	x8, #0x18                  	// #24
  40b65c:	movk	x8, #0x16, lsl #32
  40b660:	movi	v0.2d, #0x0
  40b664:	movk	x8, #0x301, lsl #48
  40b668:	stp	x29, x30, [sp, #160]
  40b66c:	str	xzr, [sp, #144]
  40b670:	stp	q0, q0, [sp, #112]
  40b674:	stp	q0, q0, [sp, #80]
  40b678:	stp	q0, q0, [sp, #48]
  40b67c:	stp	q0, q0, [sp, #16]
  40b680:	str	q0, [sp]
  40b684:	str	x8, [sp]
  40b688:	ldr	w8, [x0, #28]
  40b68c:	str	x19, [sp, #176]
  40b690:	mov	x19, x0
  40b694:	add	x29, sp, #0xa0
  40b698:	add	w8, w8, #0x1
  40b69c:	stp	w8, w8, [x0, #28]
  40b6a0:	str	w8, [sp, #8]
  40b6a4:	strb	w1, [sp, #16]
  40b6a8:	cbz	x2, 40b6bc <rtnl_addrdump_req@@Base+0x68>
  40b6ac:	mov	x0, sp
  40b6b0:	mov	w1, #0x98                  	// #152
  40b6b4:	blr	x2
  40b6b8:	cbnz	w0, 40b6d0 <rtnl_addrdump_req@@Base+0x7c>
  40b6bc:	ldr	w0, [x19]
  40b6c0:	mov	x1, sp
  40b6c4:	mov	w2, #0x98                  	// #152
  40b6c8:	mov	w3, wzr
  40b6cc:	bl	405130 <send@plt>
  40b6d0:	ldr	x19, [sp, #176]
  40b6d4:	ldp	x29, x30, [sp, #160]
  40b6d8:	add	sp, sp, #0xc0
  40b6dc:	ret

000000000040b6e0 <rtnl_addrlbldump_req@@Base>:
  40b6e0:	sub	sp, sp, #0x30
  40b6e4:	mov	x8, #0x1c                  	// #28
  40b6e8:	movk	x8, #0x4a, lsl #32
  40b6ec:	movk	x8, #0x301, lsl #48
  40b6f0:	stp	x29, x30, [sp, #32]
  40b6f4:	str	x8, [sp]
  40b6f8:	ldr	w8, [x0, #28]
  40b6fc:	mov	w2, #0x1c                  	// #28
  40b700:	mov	w3, wzr
  40b704:	add	x29, sp, #0x20
  40b708:	add	w8, w8, #0x1
  40b70c:	stp	w8, w8, [x0, #28]
  40b710:	stp	w8, wzr, [sp, #8]
  40b714:	strb	w1, [sp, #16]
  40b718:	stur	xzr, [sp, #17]
  40b71c:	str	wzr, [sp, #24]
  40b720:	ldr	w0, [x0]
  40b724:	mov	x1, sp
  40b728:	bl	405130 <send@plt>
  40b72c:	ldp	x29, x30, [sp, #32]
  40b730:	add	sp, sp, #0x30
  40b734:	ret

000000000040b738 <rtnl_routedump_req@@Base>:
  40b738:	sub	sp, sp, #0xc0
  40b73c:	mov	x8, #0x1c                  	// #28
  40b740:	movk	x8, #0x1a, lsl #32
  40b744:	movi	v0.2d, #0x0
  40b748:	movk	x8, #0x301, lsl #48
  40b74c:	stp	x29, x30, [sp, #160]
  40b750:	stur	q0, [sp, #140]
  40b754:	stp	q0, q0, [sp, #112]
  40b758:	stp	q0, q0, [sp, #80]
  40b75c:	stp	q0, q0, [sp, #48]
  40b760:	stp	q0, q0, [sp, #16]
  40b764:	str	q0, [sp]
  40b768:	str	x8, [sp]
  40b76c:	ldr	w8, [x0, #28]
  40b770:	str	x19, [sp, #176]
  40b774:	mov	x19, x0
  40b778:	add	x29, sp, #0xa0
  40b77c:	add	w8, w8, #0x1
  40b780:	stp	w8, w8, [x0, #28]
  40b784:	str	w8, [sp, #8]
  40b788:	strb	w1, [sp, #16]
  40b78c:	cbz	x2, 40b7a0 <rtnl_routedump_req@@Base+0x68>
  40b790:	mov	x0, sp
  40b794:	mov	w1, #0x9c                  	// #156
  40b798:	blr	x2
  40b79c:	cbnz	w0, 40b7b4 <rtnl_routedump_req@@Base+0x7c>
  40b7a0:	ldr	w0, [x19]
  40b7a4:	mov	x1, sp
  40b7a8:	mov	w2, #0x9c                  	// #156
  40b7ac:	mov	w3, wzr
  40b7b0:	bl	405130 <send@plt>
  40b7b4:	ldr	x19, [sp, #176]
  40b7b8:	ldp	x29, x30, [sp, #160]
  40b7bc:	add	sp, sp, #0xc0
  40b7c0:	ret

000000000040b7c4 <rtnl_ruledump_req@@Base>:
  40b7c4:	sub	sp, sp, #0x30
  40b7c8:	mov	x8, #0x1c                  	// #28
  40b7cc:	movk	x8, #0x22, lsl #32
  40b7d0:	movk	x8, #0x301, lsl #48
  40b7d4:	stp	x29, x30, [sp, #32]
  40b7d8:	str	x8, [sp]
  40b7dc:	ldr	w8, [x0, #28]
  40b7e0:	mov	w2, #0x1c                  	// #28
  40b7e4:	mov	w3, wzr
  40b7e8:	add	x29, sp, #0x20
  40b7ec:	add	w8, w8, #0x1
  40b7f0:	stp	w8, w8, [x0, #28]
  40b7f4:	stp	w8, wzr, [sp, #8]
  40b7f8:	strb	w1, [sp, #16]
  40b7fc:	stur	xzr, [sp, #17]
  40b800:	str	wzr, [sp, #24]
  40b804:	ldr	w0, [x0]
  40b808:	mov	x1, sp
  40b80c:	bl	405130 <send@plt>
  40b810:	ldp	x29, x30, [sp, #32]
  40b814:	add	sp, sp, #0x30
  40b818:	ret

000000000040b81c <rtnl_neighdump_req@@Base>:
  40b81c:	sub	sp, sp, #0x140
  40b820:	mov	x8, sp
  40b824:	movi	v0.2d, #0x0
  40b828:	add	x8, x8, #0x10c
  40b82c:	str	q0, [x8]
  40b830:	mov	x8, #0x1c                  	// #28
  40b834:	movk	x8, #0x1e, lsl #32
  40b838:	movk	x8, #0x301, lsl #48
  40b83c:	stp	x29, x30, [sp, #288]
  40b840:	stp	x28, x19, [sp, #304]
  40b844:	stp	q0, q0, [sp, #224]
  40b848:	stp	q0, q0, [sp, #192]
  40b84c:	stp	q0, q0, [sp, #160]
  40b850:	stp	q0, q0, [sp, #128]
  40b854:	stp	q0, q0, [sp, #96]
  40b858:	stp	q0, q0, [sp, #64]
  40b85c:	stp	q0, q0, [sp, #32]
  40b860:	stp	q0, q0, [sp]
  40b864:	str	q0, [sp, #256]
  40b868:	str	x8, [sp]
  40b86c:	ldr	w8, [x0, #28]
  40b870:	mov	x19, x0
  40b874:	add	x29, sp, #0x120
  40b878:	add	w8, w8, #0x1
  40b87c:	stp	w8, w8, [x0, #28]
  40b880:	str	w8, [sp, #8]
  40b884:	strb	w1, [sp, #16]
  40b888:	cbz	x2, 40b89c <rtnl_neighdump_req@@Base+0x80>
  40b88c:	mov	x0, sp
  40b890:	mov	w1, #0x11c                 	// #284
  40b894:	blr	x2
  40b898:	cbnz	w0, 40b8b0 <rtnl_neighdump_req@@Base+0x94>
  40b89c:	ldr	w0, [x19]
  40b8a0:	mov	x1, sp
  40b8a4:	mov	w2, #0x11c                 	// #284
  40b8a8:	mov	w3, wzr
  40b8ac:	bl	405130 <send@plt>
  40b8b0:	ldp	x28, x19, [sp, #304]
  40b8b4:	ldp	x29, x30, [sp, #288]
  40b8b8:	add	sp, sp, #0x140
  40b8bc:	ret

000000000040b8c0 <rtnl_neightbldump_req@@Base>:
  40b8c0:	sub	sp, sp, #0x30
  40b8c4:	mov	x8, #0x14                  	// #20
  40b8c8:	movk	x8, #0x42, lsl #32
  40b8cc:	movk	x8, #0x301, lsl #48
  40b8d0:	stp	x29, x30, [sp, #32]
  40b8d4:	str	x8, [sp, #8]
  40b8d8:	ldr	w8, [x0, #28]
  40b8dc:	mov	w2, #0x14                  	// #20
  40b8e0:	mov	w3, wzr
  40b8e4:	add	x29, sp, #0x20
  40b8e8:	add	w8, w8, #0x1
  40b8ec:	stp	w8, w8, [x0, #28]
  40b8f0:	stp	w8, wzr, [sp, #16]
  40b8f4:	strb	w1, [sp, #24]
  40b8f8:	strb	wzr, [sp, #25]
  40b8fc:	strh	wzr, [sp, #26]
  40b900:	ldr	w0, [x0]
  40b904:	add	x1, sp, #0x8
  40b908:	bl	405130 <send@plt>
  40b90c:	ldp	x29, x30, [sp, #32]
  40b910:	add	sp, sp, #0x30
  40b914:	ret

000000000040b918 <rtnl_mdbdump_req@@Base>:
  40b918:	sub	sp, sp, #0x30
  40b91c:	mov	x8, #0x18                  	// #24
  40b920:	movk	x8, #0x56, lsl #32
  40b924:	movk	x8, #0x301, lsl #48
  40b928:	stp	x29, x30, [sp, #32]
  40b92c:	str	x8, [sp, #8]
  40b930:	ldr	w8, [x0, #28]
  40b934:	mov	w2, #0x18                  	// #24
  40b938:	mov	w3, wzr
  40b93c:	add	x29, sp, #0x20
  40b940:	add	w8, w8, #0x1
  40b944:	stp	w8, w8, [x0, #28]
  40b948:	stp	w8, wzr, [sp, #16]
  40b94c:	strb	w1, [sp, #24]
  40b950:	str	wzr, [sp, #28]
  40b954:	ldr	w0, [x0]
  40b958:	add	x1, sp, #0x8
  40b95c:	bl	405130 <send@plt>
  40b960:	ldp	x29, x30, [sp, #32]
  40b964:	add	sp, sp, #0x30
  40b968:	ret

000000000040b96c <rtnl_netconfdump_req@@Base>:
  40b96c:	sub	sp, sp, #0x30
  40b970:	mov	x8, #0x14                  	// #20
  40b974:	movk	x8, #0x52, lsl #32
  40b978:	movk	x8, #0x301, lsl #48
  40b97c:	stp	x29, x30, [sp, #32]
  40b980:	str	x8, [sp, #8]
  40b984:	ldr	w8, [x0, #28]
  40b988:	mov	w2, #0x14                  	// #20
  40b98c:	mov	w3, wzr
  40b990:	add	x29, sp, #0x20
  40b994:	add	w8, w8, #0x1
  40b998:	stp	w8, w8, [x0, #28]
  40b99c:	stp	w8, wzr, [sp, #16]
  40b9a0:	strb	w1, [sp, #24]
  40b9a4:	ldr	w0, [x0]
  40b9a8:	add	x1, sp, #0x8
  40b9ac:	bl	405130 <send@plt>
  40b9b0:	ldp	x29, x30, [sp, #32]
  40b9b4:	add	sp, sp, #0x30
  40b9b8:	ret

000000000040b9bc <rtnl_nsiddump_req_filter_fn@@Base>:
  40b9bc:	stp	x29, x30, [sp, #-48]!
  40b9c0:	stp	x28, x21, [sp, #16]
  40b9c4:	stp	x20, x19, [sp, #32]
  40b9c8:	mov	x29, sp
  40b9cc:	sub	sp, sp, #0x420
  40b9d0:	mov	x20, x2
  40b9d4:	mov	w21, w1
  40b9d8:	mov	x19, x0
  40b9dc:	add	x0, sp, #0x8
  40b9e0:	mov	w2, #0x414                 	// #1044
  40b9e4:	mov	w1, wzr
  40b9e8:	bl	404f90 <memset@plt>
  40b9ec:	mov	x8, #0x14                  	// #20
  40b9f0:	movk	x8, #0x5a, lsl #32
  40b9f4:	movk	x8, #0x301, lsl #48
  40b9f8:	str	x8, [sp, #8]
  40b9fc:	ldr	w8, [x19, #28]
  40ba00:	add	w8, w8, #0x1
  40ba04:	stp	w8, w8, [x19, #28]
  40ba08:	str	w8, [sp, #16]
  40ba0c:	strb	w21, [sp, #24]
  40ba10:	cbz	x20, 40ba3c <rtnl_nsiddump_req_filter_fn@@Base+0x80>
  40ba14:	add	x0, sp, #0x8
  40ba18:	mov	w1, #0x414                 	// #1044
  40ba1c:	blr	x20
  40ba20:	cbnz	w0, 40ba40 <rtnl_nsiddump_req_filter_fn@@Base+0x84>
  40ba24:	ldr	w0, [x19]
  40ba28:	ldr	w2, [sp, #8]
  40ba2c:	add	x1, sp, #0x8
  40ba30:	mov	w3, wzr
  40ba34:	bl	405130 <send@plt>
  40ba38:	b	40ba40 <rtnl_nsiddump_req_filter_fn@@Base+0x84>
  40ba3c:	mov	w0, #0xffffffea            	// #-22
  40ba40:	add	sp, sp, #0x420
  40ba44:	ldp	x20, x19, [sp, #32]
  40ba48:	ldp	x28, x21, [sp, #16]
  40ba4c:	ldp	x29, x30, [sp], #48
  40ba50:	ret

000000000040ba54 <rtnl_linkdump_req@@Base>:
  40ba54:	stp	x29, x30, [sp, #-16]!
  40ba58:	mov	x29, sp
  40ba5c:	cbz	w1, 40ba6c <rtnl_linkdump_req@@Base+0x18>
  40ba60:	bl	40baf4 <rtnl_linkdump_req_filter@@Base+0x78>
  40ba64:	ldp	x29, x30, [sp], #16
  40ba68:	ret
  40ba6c:	mov	w2, #0x1                   	// #1
  40ba70:	bl	40ba7c <rtnl_linkdump_req_filter@@Base>
  40ba74:	ldp	x29, x30, [sp], #16
  40ba78:	ret

000000000040ba7c <rtnl_linkdump_req_filter@@Base>:
  40ba7c:	sub	sp, sp, #0x40
  40ba80:	cmp	w1, #0x7
  40ba84:	stp	x29, x30, [sp, #48]
  40ba88:	add	x29, sp, #0x30
  40ba8c:	b.eq	40ba94 <rtnl_linkdump_req_filter@@Base+0x18>  // b.none
  40ba90:	cbnz	w1, 40bae4 <rtnl_linkdump_req_filter@@Base+0x68>
  40ba94:	mov	x8, #0x28                  	// #40
  40ba98:	movk	x8, #0x12, lsl #32
  40ba9c:	movk	x8, #0x301, lsl #48
  40baa0:	str	x8, [sp, #8]
  40baa4:	ldr	w8, [x0, #28]
  40baa8:	mov	w9, #0x8                   	// #8
  40baac:	movk	w9, #0x1d, lsl #16
  40bab0:	mov	w3, wzr
  40bab4:	add	w8, w8, #0x1
  40bab8:	stp	w8, w8, [x0, #28]
  40babc:	stp	w8, wzr, [sp, #16]
  40bac0:	strb	w1, [sp, #24]
  40bac4:	stur	xzr, [sp, #25]
  40bac8:	str	xzr, [sp, #32]
  40bacc:	stp	w9, w2, [sp, #40]
  40bad0:	ldr	w0, [x0]
  40bad4:	add	x1, sp, #0x8
  40bad8:	mov	w2, #0x28                  	// #40
  40badc:	bl	405130 <send@plt>
  40bae0:	b	40bae8 <rtnl_linkdump_req_filter@@Base+0x6c>
  40bae4:	bl	40baf4 <rtnl_linkdump_req_filter@@Base+0x78>
  40bae8:	ldp	x29, x30, [sp, #48]
  40baec:	add	sp, sp, #0x40
  40baf0:	ret
  40baf4:	sub	sp, sp, #0x30
  40baf8:	mov	x8, #0x20                  	// #32
  40bafc:	movk	x8, #0x12, lsl #32
  40bb00:	movk	x8, #0x301, lsl #48
  40bb04:	stp	x29, x30, [sp, #32]
  40bb08:	str	x8, [sp]
  40bb0c:	ldr	w8, [x0, #28]
  40bb10:	mov	w2, #0x20                  	// #32
  40bb14:	mov	w3, wzr
  40bb18:	add	x29, sp, #0x20
  40bb1c:	add	w8, w8, #0x1
  40bb20:	stp	w8, w8, [x0, #28]
  40bb24:	stp	w8, wzr, [sp, #8]
  40bb28:	strb	w1, [sp, #16]
  40bb2c:	stur	xzr, [sp, #17]
  40bb30:	str	xzr, [sp, #24]
  40bb34:	ldr	w0, [x0]
  40bb38:	mov	x1, sp
  40bb3c:	bl	405130 <send@plt>
  40bb40:	ldp	x29, x30, [sp, #32]
  40bb44:	add	sp, sp, #0x30
  40bb48:	ret

000000000040bb4c <rtnl_linkdump_req_filter_fn@@Base>:
  40bb4c:	stp	x29, x30, [sp, #-48]!
  40bb50:	stp	x28, x21, [sp, #16]
  40bb54:	stp	x20, x19, [sp, #32]
  40bb58:	mov	x29, sp
  40bb5c:	sub	sp, sp, #0x420
  40bb60:	mov	x20, x2
  40bb64:	mov	w21, w1
  40bb68:	cmp	w1, #0x11
  40bb6c:	mov	x19, x0
  40bb70:	b.eq	40bb78 <rtnl_linkdump_req_filter_fn@@Base+0x2c>  // b.none
  40bb74:	cbnz	w21, 40bbd8 <rtnl_linkdump_req_filter_fn@@Base+0x8c>
  40bb78:	mov	x0, sp
  40bb7c:	mov	w2, #0x420                 	// #1056
  40bb80:	mov	w1, wzr
  40bb84:	bl	404f90 <memset@plt>
  40bb88:	mov	x8, #0x20                  	// #32
  40bb8c:	movk	x8, #0x12, lsl #32
  40bb90:	movk	x8, #0x301, lsl #48
  40bb94:	str	x8, [sp]
  40bb98:	ldr	w8, [x19, #28]
  40bb9c:	add	w8, w8, #0x1
  40bba0:	stp	w8, w8, [x19, #28]
  40bba4:	str	w8, [sp, #8]
  40bba8:	strb	w21, [sp, #16]
  40bbac:	cbz	x20, 40bbe8 <rtnl_linkdump_req_filter_fn@@Base+0x9c>
  40bbb0:	mov	x0, sp
  40bbb4:	mov	w1, #0x420                 	// #1056
  40bbb8:	blr	x20
  40bbbc:	cbnz	w0, 40bbec <rtnl_linkdump_req_filter_fn@@Base+0xa0>
  40bbc0:	ldr	w0, [x19]
  40bbc4:	ldr	w2, [sp]
  40bbc8:	mov	x1, sp
  40bbcc:	mov	w3, wzr
  40bbd0:	bl	405130 <send@plt>
  40bbd4:	b	40bbec <rtnl_linkdump_req_filter_fn@@Base+0xa0>
  40bbd8:	mov	x0, x19
  40bbdc:	mov	w1, w21
  40bbe0:	bl	40baf4 <rtnl_linkdump_req_filter@@Base+0x78>
  40bbe4:	b	40bbec <rtnl_linkdump_req_filter_fn@@Base+0xa0>
  40bbe8:	mov	w0, #0xffffffea            	// #-22
  40bbec:	add	sp, sp, #0x420
  40bbf0:	ldp	x20, x19, [sp, #32]
  40bbf4:	ldp	x28, x21, [sp, #16]
  40bbf8:	ldp	x29, x30, [sp], #48
  40bbfc:	ret

000000000040bc00 <rtnl_fdb_linkdump_req_filter_fn@@Base>:
  40bc00:	sub	sp, sp, #0xc0
  40bc04:	mov	x9, #0x20                  	// #32
  40bc08:	movk	x9, #0x1e, lsl #32
  40bc0c:	movi	v0.2d, #0x0
  40bc10:	movk	x9, #0x301, lsl #48
  40bc14:	stp	x29, x30, [sp, #160]
  40bc18:	stp	q0, q0, [sp, #128]
  40bc1c:	stp	q0, q0, [sp, #96]
  40bc20:	stp	q0, q0, [sp, #64]
  40bc24:	stp	q0, q0, [sp, #32]
  40bc28:	stp	q0, q0, [sp]
  40bc2c:	str	x9, [sp]
  40bc30:	ldr	w9, [x0, #28]
  40bc34:	str	x19, [sp, #176]
  40bc38:	mov	x8, x1
  40bc3c:	mov	x19, x0
  40bc40:	add	w9, w9, #0x1
  40bc44:	stp	w9, w9, [x0, #28]
  40bc48:	str	w9, [sp, #8]
  40bc4c:	mov	w9, #0x7                   	// #7
  40bc50:	mov	x0, sp
  40bc54:	mov	w1, #0xa0                  	// #160
  40bc58:	add	x29, sp, #0xa0
  40bc5c:	strb	w9, [sp, #16]
  40bc60:	blr	x8
  40bc64:	cbnz	w0, 40bc7c <rtnl_fdb_linkdump_req_filter_fn@@Base+0x7c>
  40bc68:	ldr	w0, [x19]
  40bc6c:	mov	x1, sp
  40bc70:	mov	w2, #0xa0                  	// #160
  40bc74:	mov	w3, wzr
  40bc78:	bl	405130 <send@plt>
  40bc7c:	ldr	x19, [sp, #176]
  40bc80:	ldp	x29, x30, [sp, #160]
  40bc84:	add	sp, sp, #0xc0
  40bc88:	ret

000000000040bc8c <rtnl_statsdump_req_filter@@Base>:
  40bc8c:	sub	sp, sp, #0x30
  40bc90:	mov	x8, #0x1c                  	// #28
  40bc94:	movk	x8, #0x5e, lsl #32
  40bc98:	movk	x8, #0x301, lsl #48
  40bc9c:	stp	x29, x30, [sp, #32]
  40bca0:	stp	xzr, xzr, [sp, #8]
  40bca4:	str	wzr, [sp, #24]
  40bca8:	str	x8, [sp]
  40bcac:	ldr	w8, [x0, #28]
  40bcb0:	mov	w3, wzr
  40bcb4:	add	x29, sp, #0x20
  40bcb8:	add	w8, w8, #0x1
  40bcbc:	stp	w8, w8, [x0, #28]
  40bcc0:	stp	w8, wzr, [sp, #8]
  40bcc4:	strb	w1, [sp, #16]
  40bcc8:	str	w2, [sp, #24]
  40bccc:	ldr	w0, [x0]
  40bcd0:	mov	x1, sp
  40bcd4:	mov	w2, #0x1c                  	// #28
  40bcd8:	bl	405130 <send@plt>
  40bcdc:	ldp	x29, x30, [sp, #32]
  40bce0:	add	sp, sp, #0x30
  40bce4:	ret

000000000040bce8 <rtnl_send@@Base>:
  40bce8:	stp	x29, x30, [sp, #-16]!
  40bcec:	ldr	w0, [x0]
  40bcf0:	mov	w3, wzr
  40bcf4:	sxtw	x2, w2
  40bcf8:	mov	x29, sp
  40bcfc:	bl	405130 <send@plt>
  40bd00:	ldp	x29, x30, [sp], #16
  40bd04:	ret

000000000040bd08 <rtnl_send_check@@Base>:
  40bd08:	stp	x29, x30, [sp, #-32]!
  40bd0c:	stp	x28, x19, [sp, #16]
  40bd10:	mov	x29, sp
  40bd14:	sub	sp, sp, #0x400
  40bd18:	mov	x19, x0
  40bd1c:	ldr	w0, [x0]
  40bd20:	mov	w3, wzr
  40bd24:	sxtw	x2, w2
  40bd28:	bl	405130 <send@plt>
  40bd2c:	mov	x8, x0
  40bd30:	tbnz	w8, #31, 40bdcc <rtnl_send_check@@Base+0xc4>
  40bd34:	ldr	w0, [x19]
  40bd38:	mov	x1, sp
  40bd3c:	mov	w2, #0x400                 	// #1024
  40bd40:	mov	w3, #0x42                  	// #66
  40bd44:	bl	405060 <recv@plt>
  40bd48:	tbnz	w0, #31, 40bd9c <rtnl_send_check@@Base+0x94>
  40bd4c:	cmp	w0, #0x10
  40bd50:	b.lt	40bd94 <rtnl_send_check@@Base+0x8c>  // b.tstop
  40bd54:	mov	x9, sp
  40bd58:	ldr	w10, [x9]
  40bd5c:	mov	w8, wzr
  40bd60:	cmp	w10, #0x10
  40bd64:	b.cc	40bdcc <rtnl_send_check@@Base+0xc4>  // b.lo, b.ul, b.last
  40bd68:	cmp	w10, w0
  40bd6c:	b.hi	40bdcc <rtnl_send_check@@Base+0xc4>  // b.pmore
  40bd70:	ldrh	w8, [x9, #4]
  40bd74:	cmp	w8, #0x2
  40bd78:	b.eq	40bdb0 <rtnl_send_check@@Base+0xa8>  // b.none
  40bd7c:	add	w8, w10, #0x3
  40bd80:	and	w8, w8, #0xfffffffc
  40bd84:	sub	w0, w0, w8
  40bd88:	cmp	w0, #0xf
  40bd8c:	add	x9, x9, x8
  40bd90:	b.gt	40bd58 <rtnl_send_check@@Base+0x50>
  40bd94:	mov	w8, wzr
  40bd98:	b	40bdcc <rtnl_send_check@@Base+0xc4>
  40bd9c:	bl	4052a0 <__errno_location@plt>
  40bda0:	ldr	w8, [x0]
  40bda4:	cmp	w8, #0xb
  40bda8:	csetm	w8, ne  // ne = any
  40bdac:	b	40bdcc <rtnl_send_check@@Base+0xc4>
  40bdb0:	cmp	w10, #0x23
  40bdb4:	b.ls	40bde0 <rtnl_send_check@@Base+0xd8>  // b.plast
  40bdb8:	ldr	w8, [x9, #16]
  40bdbc:	neg	w19, w8
  40bdc0:	bl	4052a0 <__errno_location@plt>
  40bdc4:	str	w19, [x0]
  40bdc8:	mov	w8, #0xffffffff            	// #-1
  40bdcc:	mov	w0, w8
  40bdd0:	add	sp, sp, #0x400
  40bdd4:	ldp	x28, x19, [sp, #16]
  40bdd8:	ldp	x29, x30, [sp], #32
  40bddc:	ret
  40bde0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40bde4:	ldr	x8, [x8, #3992]
  40bde8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40bdec:	add	x0, x0, #0x2e8
  40bdf0:	mov	w1, #0x10                  	// #16
  40bdf4:	ldr	x3, [x8]
  40bdf8:	mov	w2, #0x1                   	// #1
  40bdfc:	bl	405170 <fwrite@plt>
  40be00:	b	40bdc8 <rtnl_send_check@@Base+0xc0>

000000000040be04 <rtnl_dump_request@@Base>:
  40be04:	sub	sp, sp, #0x90
  40be08:	stp	x29, x30, [sp, #128]
  40be0c:	add	x29, sp, #0x80
  40be10:	add	w8, w3, #0x10
  40be14:	mov	w9, #0x301                 	// #769
  40be18:	sturh	w1, [x29, #-12]
  40be1c:	adrp	x10, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40be20:	stur	w8, [x29, #-16]
  40be24:	sturh	w9, [x29, #-10]
  40be28:	add	x10, x10, #0x5f0
  40be2c:	ldr	w8, [x0, #28]
  40be30:	ldr	x13, [x10]
  40be34:	ldr	w10, [x10, #8]
  40be38:	sub	x11, x29, #0x10
  40be3c:	mov	w12, #0x10                  	// #16
  40be40:	sxtw	x9, w3
  40be44:	add	w8, w8, #0x1
  40be48:	stp	w8, w8, [x0, #28]
  40be4c:	stur	x13, [x29, #-32]
  40be50:	sub	x13, x29, #0x20
  40be54:	stur	w10, [x29, #-24]
  40be58:	mov	w10, #0xc                   	// #12
  40be5c:	stp	x11, x12, [sp, #64]
  40be60:	add	x11, sp, #0x40
  40be64:	stp	x2, x9, [sp, #80]
  40be68:	mov	w9, #0x2                   	// #2
  40be6c:	stp	w8, wzr, [x29, #-8]
  40be70:	str	x13, [sp, #8]
  40be74:	str	w10, [sp, #16]
  40be78:	stp	x11, x9, [sp, #24]
  40be7c:	stp	xzr, xzr, [sp, #40]
  40be80:	str	wzr, [sp, #56]
  40be84:	ldr	w0, [x0]
  40be88:	add	x1, sp, #0x8
  40be8c:	mov	w2, wzr
  40be90:	bl	404fb0 <sendmsg@plt>
  40be94:	ldp	x29, x30, [sp, #128]
  40be98:	add	sp, sp, #0x90
  40be9c:	ret

000000000040bea0 <rtnl_dump_request_n@@Base>:
  40bea0:	sub	sp, sp, #0x70
  40bea4:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40bea8:	add	x8, x8, #0x5fc
  40beac:	ldr	x9, [x8]
  40beb0:	ldr	w8, [x8, #8]
  40beb4:	stp	x29, x30, [sp, #96]
  40beb8:	add	x29, sp, #0x60
  40bebc:	stur	x9, [x29, #-16]
  40bec0:	stur	w8, [x29, #-8]
  40bec4:	ldr	w8, [x1]
  40bec8:	sub	x10, x29, #0x10
  40becc:	mov	w9, #0xc                   	// #12
  40bed0:	str	x10, [sp, #8]
  40bed4:	sub	x10, x29, #0x20
  40bed8:	str	w9, [sp, #16]
  40bedc:	mov	w9, #0x1                   	// #1
  40bee0:	stp	x10, x9, [sp, #24]
  40bee4:	mov	w9, #0x301                 	// #769
  40bee8:	stp	xzr, xzr, [sp, #40]
  40beec:	str	wzr, [sp, #56]
  40bef0:	stp	x1, x8, [x29, #-32]
  40bef4:	strh	w9, [x1, #6]
  40bef8:	str	wzr, [x1, #12]
  40befc:	ldr	w8, [x0, #28]
  40bf00:	mov	w2, wzr
  40bf04:	add	w8, w8, #0x1
  40bf08:	stp	w8, w8, [x0, #28]
  40bf0c:	str	w8, [x1, #8]
  40bf10:	ldr	w0, [x0]
  40bf14:	add	x1, sp, #0x8
  40bf18:	bl	404fb0 <sendmsg@plt>
  40bf1c:	ldp	x29, x30, [sp, #96]
  40bf20:	add	sp, sp, #0x70
  40bf24:	ret

000000000040bf28 <rtnl_dump_filter_nc@@Base>:
  40bf28:	sub	sp, sp, #0x40
  40bf2c:	stp	x1, x2, [sp]
  40bf30:	mov	x1, sp
  40bf34:	stp	x29, x30, [sp, #48]
  40bf38:	add	x29, sp, #0x30
  40bf3c:	strh	w3, [sp, #16]
  40bf40:	stp	xzr, xzr, [sp, #32]
  40bf44:	str	xzr, [sp, #24]
  40bf48:	bl	40bf58 <rtnl_dump_filter_nc@@Base+0x30>
  40bf4c:	ldp	x29, x30, [sp, #48]
  40bf50:	add	sp, sp, #0x40
  40bf54:	ret
  40bf58:	sub	sp, sp, #0xd0
  40bf5c:	stp	x29, x30, [sp, #112]
  40bf60:	add	x29, sp, #0x70
  40bf64:	stp	x28, x27, [sp, #128]
  40bf68:	stp	x20, x19, [sp, #192]
  40bf6c:	mov	x19, x1
  40bf70:	mov	x20, x0
  40bf74:	mov	w28, wzr
  40bf78:	sub	x8, x29, #0x10
  40bf7c:	mov	w9, #0xc                   	// #12
  40bf80:	sub	x10, x29, #0x20
  40bf84:	mov	w11, #0x1                   	// #1
  40bf88:	stp	x26, x25, [sp, #144]
  40bf8c:	stp	x24, x23, [sp, #160]
  40bf90:	stp	x22, x21, [sp, #176]
  40bf94:	stp	xzr, xzr, [sp, #56]
  40bf98:	str	wzr, [sp, #72]
  40bf9c:	str	x8, [sp, #24]
  40bfa0:	str	w9, [sp, #32]
  40bfa4:	stp	x10, x11, [sp, #40]
  40bfa8:	str	x1, [sp, #8]
  40bfac:	b	40bfc4 <rtnl_dump_filter_nc@@Base+0x9c>
  40bfb0:	mov	w21, #0x1                   	// #1
  40bfb4:	mov	w23, w24
  40bfb8:	orr	w8, w21, #0x2
  40bfbc:	cmp	w8, #0x2
  40bfc0:	b.ne	40c1b8 <rtnl_dump_filter_nc@@Base+0x290>  // b.any
  40bfc4:	ldr	w0, [x20]
  40bfc8:	add	x1, sp, #0x18
  40bfcc:	add	x2, sp, #0x10
  40bfd0:	bl	40d2b4 <__parse_rtattr_nested_compat@@Base+0x6c>
  40bfd4:	mov	w24, w0
  40bfd8:	tbnz	w0, #31, 40bfb0 <rtnl_dump_filter_nc@@Base+0x88>
  40bfdc:	ldr	x3, [x20, #40]
  40bfe0:	cbz	x3, 40bff8 <rtnl_dump_filter_nc@@Base+0xd0>
  40bfe4:	ldr	x0, [sp, #16]
  40bfe8:	add	w8, w24, #0x3
  40bfec:	and	w2, w8, #0xfffffffc
  40bff0:	mov	w1, #0x1                   	// #1
  40bff4:	bl	405170 <fwrite@plt>
  40bff8:	ldr	x8, [x19]
  40bffc:	cbz	x8, 40c128 <rtnl_dump_filter_nc@@Base+0x200>
  40c000:	mov	w22, wzr
  40c004:	ldr	x26, [sp, #16]
  40c008:	mov	w25, w24
  40c00c:	cmp	w25, #0x10
  40c010:	b.lt	40c114 <rtnl_dump_filter_nc@@Base+0x1ec>  // b.tstop
  40c014:	ldr	w8, [x26]
  40c018:	cmp	w8, #0x10
  40c01c:	b.cc	40c114 <rtnl_dump_filter_nc@@Base+0x1ec>  // b.lo, b.ul, b.last
  40c020:	cmp	w8, w25
  40c024:	b.hi	40c114 <rtnl_dump_filter_nc@@Base+0x1ec>  // b.pmore
  40c028:	ldrh	w8, [x19, #16]
  40c02c:	ldrh	w9, [x26, #6]
  40c030:	bic	w8, w9, w8
  40c034:	strh	w8, [x26, #6]
  40c038:	ldur	w9, [x29, #-12]
  40c03c:	cbnz	w9, 40c0d4 <rtnl_dump_filter_nc@@Base+0x1ac>
  40c040:	ldr	w9, [x26, #12]
  40c044:	ldr	w10, [x20, #8]
  40c048:	cmp	w9, w10
  40c04c:	b.ne	40c0d4 <rtnl_dump_filter_nc@@Base+0x1ac>  // b.any
  40c050:	ldr	w9, [x26, #8]
  40c054:	ldr	w10, [x20, #32]
  40c058:	cmp	w9, w10
  40c05c:	b.ne	40c0d4 <rtnl_dump_filter_nc@@Base+0x1ac>  // b.any
  40c060:	ldrh	w9, [x26, #4]
  40c064:	tst	w8, #0x10
  40c068:	csinc	w28, w28, wzr, eq  // eq = none
  40c06c:	cmp	w9, #0x2
  40c070:	b.eq	40c098 <rtnl_dump_filter_nc@@Base+0x170>  // b.none
  40c074:	cmp	w9, #0x3
  40c078:	b.ne	40c0bc <rtnl_dump_filter_nc@@Base+0x194>  // b.any
  40c07c:	mov	x0, x26
  40c080:	bl	40d378 <__parse_rtattr_nested_compat@@Base+0x130>
  40c084:	tbnz	w0, #31, 40c0a4 <rtnl_dump_filter_nc@@Base+0x17c>
  40c088:	mov	w21, #0x8                   	// #8
  40c08c:	mov	w22, #0x1                   	// #1
  40c090:	cbz	w21, 40c00c <rtnl_dump_filter_nc@@Base+0xe4>
  40c094:	b	40c10c <rtnl_dump_filter_nc@@Base+0x1e4>
  40c098:	mov	x0, x20
  40c09c:	mov	x1, x26
  40c0a0:	bl	40d430 <__parse_rtattr_nested_compat@@Base+0x1e8>
  40c0a4:	ldr	x0, [sp, #16]
  40c0a8:	bl	405110 <free@plt>
  40c0ac:	mov	w21, #0x1                   	// #1
  40c0b0:	mov	w23, #0xffffffff            	// #-1
  40c0b4:	cbz	w21, 40c00c <rtnl_dump_filter_nc@@Base+0xe4>
  40c0b8:	b	40c10c <rtnl_dump_filter_nc@@Base+0x1e4>
  40c0bc:	ldr	x8, [x20, #40]
  40c0c0:	cbnz	x8, 40c0d4 <rtnl_dump_filter_nc@@Base+0x1ac>
  40c0c4:	ldp	x8, x1, [x19]
  40c0c8:	mov	x0, x26
  40c0cc:	blr	x8
  40c0d0:	tbnz	w0, #31, 40c0f4 <rtnl_dump_filter_nc@@Base+0x1cc>
  40c0d4:	ldr	w8, [x26]
  40c0d8:	mov	w21, wzr
  40c0dc:	add	w8, w8, #0x3
  40c0e0:	and	w8, w8, #0xfffffffc
  40c0e4:	sub	w25, w25, w8
  40c0e8:	add	x26, x26, x8
  40c0ec:	cbz	w21, 40c00c <rtnl_dump_filter_nc@@Base+0xe4>
  40c0f0:	b	40c10c <rtnl_dump_filter_nc@@Base+0x1e4>
  40c0f4:	mov	w27, w0
  40c0f8:	ldr	x0, [sp, #16]
  40c0fc:	bl	405110 <free@plt>
  40c100:	mov	w21, #0x1                   	// #1
  40c104:	mov	w23, w27
  40c108:	cbz	w21, 40c00c <rtnl_dump_filter_nc@@Base+0xe4>
  40c10c:	cmp	w21, #0x8
  40c110:	b.ne	40c118 <rtnl_dump_filter_nc@@Base+0x1f0>  // b.any
  40c114:	mov	w21, wzr
  40c118:	cbnz	w21, 40c15c <rtnl_dump_filter_nc@@Base+0x234>
  40c11c:	ldr	x8, [x19, #24]!
  40c120:	cbnz	x8, 40c004 <rtnl_dump_filter_nc@@Base+0xdc>
  40c124:	b	40c130 <rtnl_dump_filter_nc@@Base+0x208>
  40c128:	mov	w22, wzr
  40c12c:	mov	w25, wzr
  40c130:	ldr	x0, [sp, #16]
  40c134:	bl	405110 <free@plt>
  40c138:	cbz	w22, 40c14c <rtnl_dump_filter_nc@@Base+0x224>
  40c13c:	cbnz	w28, 40c164 <rtnl_dump_filter_nc@@Base+0x23c>
  40c140:	mov	w23, wzr
  40c144:	mov	w21, #0x1                   	// #1
  40c148:	b	40c15c <rtnl_dump_filter_nc@@Base+0x234>
  40c14c:	ldrb	w8, [sp, #72]
  40c150:	tbnz	w8, #5, 40c190 <rtnl_dump_filter_nc@@Base+0x268>
  40c154:	cbnz	w25, 40c1dc <rtnl_dump_filter_nc@@Base+0x2b4>
  40c158:	mov	w21, wzr
  40c15c:	ldr	x19, [sp, #8]
  40c160:	b	40bfb8 <rtnl_dump_filter_nc@@Base+0x90>
  40c164:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40c168:	ldr	x8, [x8, #3992]
  40c16c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c170:	mov	w1, #0x2e                  	// #46
  40c174:	mov	w2, #0x1                   	// #1
  40c178:	ldr	x3, [x8]
  40c17c:	add	x0, x0, #0x4f6
  40c180:	mov	w21, #0x1                   	// #1
  40c184:	bl	405170 <fwrite@plt>
  40c188:	mov	w23, wzr
  40c18c:	b	40c15c <rtnl_dump_filter_nc@@Base+0x234>
  40c190:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40c194:	ldr	x8, [x8, #3992]
  40c198:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c19c:	mov	w1, #0x12                  	// #18
  40c1a0:	mov	w2, #0x1                   	// #1
  40c1a4:	ldr	x3, [x8]
  40c1a8:	add	x0, x0, #0x38e
  40c1ac:	bl	405170 <fwrite@plt>
  40c1b0:	mov	w21, #0x2                   	// #2
  40c1b4:	b	40c15c <rtnl_dump_filter_nc@@Base+0x234>
  40c1b8:	mov	w0, w23
  40c1bc:	ldp	x20, x19, [sp, #192]
  40c1c0:	ldp	x22, x21, [sp, #176]
  40c1c4:	ldp	x24, x23, [sp, #160]
  40c1c8:	ldp	x26, x25, [sp, #144]
  40c1cc:	ldp	x28, x27, [sp, #128]
  40c1d0:	ldp	x29, x30, [sp, #112]
  40c1d4:	add	sp, sp, #0xd0
  40c1d8:	ret
  40c1dc:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40c1e0:	ldr	x8, [x8, #3992]
  40c1e4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c1e8:	add	x1, x1, #0x3a1
  40c1ec:	mov	w2, w25
  40c1f0:	ldr	x0, [x8]
  40c1f4:	bl	4052e0 <fprintf@plt>
  40c1f8:	mov	w0, #0x1                   	// #1
  40c1fc:	bl	404dd0 <exit@plt>

000000000040c200 <rtnl_talk@@Base>:
  40c200:	stp	x29, x30, [sp, #-16]!
  40c204:	mov	w3, #0x1                   	// #1
  40c208:	mov	x29, sp
  40c20c:	bl	40c218 <rtnl_talk@@Base+0x18>
  40c210:	ldp	x29, x30, [sp], #16
  40c214:	ret
  40c218:	sub	sp, sp, #0x20
  40c21c:	stp	x29, x30, [sp, #16]
  40c220:	ldr	w9, [x1]
  40c224:	mov	x8, x2
  40c228:	and	w4, w3, #0x1
  40c22c:	mov	w2, #0x1                   	// #1
  40c230:	stp	x1, x9, [sp]
  40c234:	mov	x1, sp
  40c238:	mov	x3, x8
  40c23c:	add	x29, sp, #0x10
  40c240:	bl	40c268 <rtnl_talk_iov@@Base+0x18>
  40c244:	ldp	x29, x30, [sp, #16]
  40c248:	add	sp, sp, #0x20
  40c24c:	ret

000000000040c250 <rtnl_talk_iov@@Base>:
  40c250:	stp	x29, x30, [sp, #-16]!
  40c254:	mov	w4, #0x1                   	// #1
  40c258:	mov	x29, sp
  40c25c:	bl	40c268 <rtnl_talk_iov@@Base+0x18>
  40c260:	ldp	x29, x30, [sp], #16
  40c264:	ret
  40c268:	sub	sp, sp, #0xf0
  40c26c:	stp	x29, x30, [sp, #144]
  40c270:	add	x29, sp, #0x90
  40c274:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c278:	sub	x9, x29, #0x10
  40c27c:	add	x8, x8, #0x614
  40c280:	str	x9, [sp, #56]
  40c284:	mov	w9, #0xc                   	// #12
  40c288:	str	w9, [sp, #64]
  40c28c:	ldr	x9, [x8]
  40c290:	ldr	w8, [x8, #8]
  40c294:	stp	x22, x21, [sp, #208]
  40c298:	stp	x20, x19, [sp, #224]
  40c29c:	mov	w22, w4
  40c2a0:	mov	x19, x3
  40c2a4:	mov	x20, x2
  40c2a8:	mov	x21, x0
  40c2ac:	stp	x28, x27, [sp, #160]
  40c2b0:	stp	x26, x25, [sp, #176]
  40c2b4:	stp	x24, x23, [sp, #192]
  40c2b8:	stp	x1, x2, [sp, #72]
  40c2bc:	stp	xzr, xzr, [sp, #88]
  40c2c0:	stur	x9, [x29, #-16]
  40c2c4:	stur	w8, [x29, #-8]
  40c2c8:	str	wzr, [sp, #104]
  40c2cc:	cbz	x2, 40c310 <rtnl_talk_iov@@Base+0xc0>
  40c2d0:	ldr	w26, [x21, #28]
  40c2d4:	mov	x8, x20
  40c2d8:	b	40c2e8 <rtnl_talk_iov@@Base+0x98>
  40c2dc:	subs	x8, x8, #0x1
  40c2e0:	add	x1, x1, #0x10
  40c2e4:	b.eq	40c308 <rtnl_talk_iov@@Base+0xb8>  // b.none
  40c2e8:	ldr	x9, [x1]
  40c2ec:	add	w26, w26, #0x1
  40c2f0:	str	w26, [x9, #8]
  40c2f4:	cbnz	x19, 40c2dc <rtnl_talk_iov@@Base+0x8c>
  40c2f8:	ldrh	w10, [x9, #6]
  40c2fc:	orr	w10, w10, #0x4
  40c300:	strh	w10, [x9, #6]
  40c304:	b	40c2dc <rtnl_talk_iov@@Base+0x8c>
  40c308:	str	w26, [x21, #28]
  40c30c:	b	40c314 <rtnl_talk_iov@@Base+0xc4>
  40c310:	mov	w26, wzr
  40c314:	ldr	w0, [x21]
  40c318:	add	x1, sp, #0x38
  40c31c:	mov	w2, wzr
  40c320:	bl	404fb0 <sendmsg@plt>
  40c324:	tbnz	w0, #31, 40c614 <rtnl_talk_iov@@Base+0x3c4>
  40c328:	sub	x8, x29, #0x20
  40c32c:	mov	w9, #0x1                   	// #1
  40c330:	stp	x8, x9, [sp, #72]
  40c334:	ldr	w0, [x21]
  40c338:	add	x1, sp, #0x38
  40c33c:	add	x2, sp, #0x30
  40c340:	bl	40d2b4 <__parse_rtattr_nested_compat@@Base+0x6c>
  40c344:	mov	w23, w0
  40c348:	tbnz	w0, #31, 40c5f0 <rtnl_talk_iov@@Base+0x3a0>
  40c34c:	mov	w8, w26
  40c350:	eor	w9, w22, #0x1
  40c354:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c358:	mov	w25, wzr
  40c35c:	str	w9, [sp, #12]
  40c360:	mov	w9, #0x1                   	// #1
  40c364:	add	x22, x22, #0x35d
  40c368:	mov	w24, #0x7                   	// #7
  40c36c:	sub	x8, x8, x20
  40c370:	str	x20, [sp, #16]
  40c374:	str	x8, [sp, #32]
  40c378:	mov	w8, w25
  40c37c:	sxtw	x9, w9
  40c380:	ldr	w2, [sp, #64]
  40c384:	cmp	w2, #0xc
  40c388:	b.ne	40c63c <rtnl_talk_iov@@Base+0x3ec>  // b.any
  40c38c:	cmp	w23, #0x10
  40c390:	mov	w25, w20
  40c394:	str	x9, [sp, #40]
  40c398:	b.cc	40c58c <rtnl_talk_iov@@Base+0x33c>  // b.lo, b.ul, b.last
  40c39c:	ldr	x27, [sp, #48]
  40c3a0:	mvn	w8, w8
  40c3a4:	str	w8, [sp, #28]
  40c3a8:	b	40c3b4 <rtnl_talk_iov@@Base+0x164>
  40c3ac:	cmp	w23, #0xf
  40c3b0:	b.ls	40c58c <rtnl_talk_iov@@Base+0x33c>  // b.plast
  40c3b4:	ldr	w28, [x27]
  40c3b8:	cmp	w28, w23
  40c3bc:	b.gt	40c488 <rtnl_talk_iov@@Base+0x238>
  40c3c0:	sub	w8, w28, #0x10
  40c3c4:	tbnz	w8, #31, 40c488 <rtnl_talk_iov@@Base+0x238>
  40c3c8:	ldur	w9, [x29, #-12]
  40c3cc:	cbnz	w9, 40c464 <rtnl_talk_iov@@Base+0x214>
  40c3d0:	ldr	w9, [x27, #12]
  40c3d4:	ldr	w10, [x21, #8]
  40c3d8:	cmp	w9, w10
  40c3dc:	b.ne	40c464 <rtnl_talk_iov@@Base+0x214>  // b.any
  40c3e0:	ldr	w9, [x27, #8]
  40c3e4:	cmp	w9, w26
  40c3e8:	b.hi	40c464 <rtnl_talk_iov@@Base+0x214>  // b.pmore
  40c3ec:	ldr	x10, [sp, #32]
  40c3f0:	cmp	x10, x9
  40c3f4:	b.hi	40c464 <rtnl_talk_iov@@Base+0x214>  // b.pmore
  40c3f8:	ldrh	w9, [x27, #4]
  40c3fc:	cmp	w9, #0x2
  40c400:	b.ne	40c4c0 <rtnl_talk_iov@@Base+0x270>  // b.any
  40c404:	mov	x28, x27
  40c408:	ldr	w20, [x28, #16]!
  40c40c:	cmp	w8, #0x13
  40c410:	b.ls	40c500 <rtnl_talk_iov@@Base+0x2b0>  // b.plast
  40c414:	cbz	w20, 40c454 <rtnl_talk_iov@@Base+0x204>
  40c418:	mov	x24, x22
  40c41c:	neg	w22, w20
  40c420:	bl	4052a0 <__errno_location@plt>
  40c424:	str	w22, [x0]
  40c428:	ldr	w8, [x21, #36]
  40c42c:	ldr	w9, [sp, #12]
  40c430:	mov	x22, x24
  40c434:	mov	w24, #0x7                   	// #7
  40c438:	cmp	w8, #0x4
  40c43c:	cset	w8, eq  // eq = none
  40c440:	orr	w8, w8, w9
  40c444:	tbnz	w8, #0, 40c454 <rtnl_talk_iov@@Base+0x204>
  40c448:	mov	x0, x27
  40c44c:	mov	x1, x28
  40c450:	bl	40d584 <__parse_rtattr_nested_compat@@Base+0x33c>
  40c454:	ldr	x0, [sp, #48]
  40c458:	cbz	x19, 40c4d8 <rtnl_talk_iov@@Base+0x288>
  40c45c:	str	x0, [x19]
  40c460:	b	40c4dc <rtnl_talk_iov@@Base+0x28c>
  40c464:	add	w8, w28, #0x3
  40c468:	and	w8, w8, #0xfffffffc
  40c46c:	sub	w23, w23, w8
  40c470:	add	x27, x27, x8
  40c474:	mov	w20, #0x9                   	// #9
  40c478:	cbz	w20, 40c3ac <rtnl_talk_iov@@Base+0x15c>
  40c47c:	cmp	w20, #0x9
  40c480:	b.eq	40c3ac <rtnl_talk_iov@@Base+0x15c>  // b.none
  40c484:	b	40c55c <rtnl_talk_iov@@Base+0x30c>
  40c488:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40c48c:	ldrb	w8, [sp, #104]
  40c490:	ldr	x9, [x9, #3992]
  40c494:	ldr	x3, [x9]
  40c498:	tbz	w8, #5, 40c628 <rtnl_talk_iov@@Base+0x3d8>
  40c49c:	mov	w1, #0x12                  	// #18
  40c4a0:	mov	w2, #0x1                   	// #1
  40c4a4:	mov	w20, #0x1                   	// #1
  40c4a8:	mov	x0, x22
  40c4ac:	bl	405170 <fwrite@plt>
  40c4b0:	ldr	x0, [sp, #48]
  40c4b4:	bl	405110 <free@plt>
  40c4b8:	mov	w25, #0xffffffff            	// #-1
  40c4bc:	b	40c478 <rtnl_talk_iov@@Base+0x228>
  40c4c0:	cbz	x19, 40c524 <rtnl_talk_iov@@Base+0x2d4>
  40c4c4:	ldr	x8, [sp, #48]
  40c4c8:	mov	w25, wzr
  40c4cc:	mov	w20, #0x1                   	// #1
  40c4d0:	str	x8, [x19]
  40c4d4:	b	40c478 <rtnl_talk_iov@@Base+0x228>
  40c4d8:	bl	405110 <free@plt>
  40c4dc:	ldr	w8, [sp, #28]
  40c4e0:	ldr	x9, [sp, #16]
  40c4e4:	ldr	x10, [sp, #40]
  40c4e8:	cmp	w20, #0x0
  40c4ec:	csel	w8, w8, wzr, ne  // ne = any
  40c4f0:	cmp	x10, x9
  40c4f4:	csinc	w20, w24, wzr, cc  // cc = lo, ul, last
  40c4f8:	csel	w25, w25, w8, cc  // cc = lo, ul, last
  40c4fc:	b	40c478 <rtnl_talk_iov@@Base+0x228>
  40c500:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40c504:	ldr	x8, [x8, #3992]
  40c508:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c50c:	mov	w1, #0x10                  	// #16
  40c510:	mov	w2, #0x1                   	// #1
  40c514:	ldr	x3, [x8]
  40c518:	mov	w20, #0x1                   	// #1
  40c51c:	add	x0, x0, #0x2e8
  40c520:	b	40c4ac <rtnl_talk_iov@@Base+0x25c>
  40c524:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40c528:	ldr	x8, [x8, #3992]
  40c52c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c530:	mov	w1, #0x14                  	// #20
  40c534:	mov	w2, #0x1                   	// #1
  40c538:	ldr	x3, [x8]
  40c53c:	add	x0, x0, #0x5c3
  40c540:	bl	405170 <fwrite@plt>
  40c544:	add	w8, w28, #0x3
  40c548:	and	w8, w8, #0xfffffffc
  40c54c:	mov	w20, wzr
  40c550:	sub	w23, w23, w8
  40c554:	add	x27, x27, x8
  40c558:	b	40c478 <rtnl_talk_iov@@Base+0x228>
  40c55c:	cmp	w20, #0x7
  40c560:	b.ne	40c5ec <rtnl_talk_iov@@Base+0x39c>  // b.any
  40c564:	ldr	w0, [x21]
  40c568:	add	x1, sp, #0x38
  40c56c:	add	x2, sp, #0x30
  40c570:	mov	w20, w25
  40c574:	bl	40d2b4 <__parse_rtattr_nested_compat@@Base+0x6c>
  40c578:	ldr	x8, [sp, #40]
  40c57c:	mov	w23, w0
  40c580:	add	x9, x8, #0x1
  40c584:	tbz	w0, #31, 40c380 <rtnl_talk_iov@@Base+0x130>
  40c588:	b	40c5f0 <rtnl_talk_iov@@Base+0x3a0>
  40c58c:	ldr	x0, [sp, #48]
  40c590:	mov	w20, w25
  40c594:	bl	405110 <free@plt>
  40c598:	ldrb	w8, [sp, #104]
  40c59c:	ldr	x25, [sp, #40]
  40c5a0:	tbnz	w8, #5, 40c5c8 <rtnl_talk_iov@@Base+0x378>
  40c5a4:	cbnz	w23, 40c650 <rtnl_talk_iov@@Base+0x400>
  40c5a8:	ldr	w0, [x21]
  40c5ac:	add	x1, sp, #0x38
  40c5b0:	add	x2, sp, #0x30
  40c5b4:	bl	40d2b4 <__parse_rtattr_nested_compat@@Base+0x6c>
  40c5b8:	mov	w23, w0
  40c5bc:	add	x9, x25, #0x1
  40c5c0:	tbz	w0, #31, 40c378 <rtnl_talk_iov@@Base+0x128>
  40c5c4:	b	40c5f0 <rtnl_talk_iov@@Base+0x3a0>
  40c5c8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40c5cc:	ldr	x8, [x8, #3992]
  40c5d0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c5d4:	mov	w1, #0x12                  	// #18
  40c5d8:	mov	w2, #0x1                   	// #1
  40c5dc:	ldr	x3, [x8]
  40c5e0:	add	x0, x0, #0x38e
  40c5e4:	bl	405170 <fwrite@plt>
  40c5e8:	b	40c5a8 <rtnl_talk_iov@@Base+0x358>
  40c5ec:	mov	w23, w25
  40c5f0:	mov	w0, w23
  40c5f4:	ldp	x20, x19, [sp, #224]
  40c5f8:	ldp	x22, x21, [sp, #208]
  40c5fc:	ldp	x24, x23, [sp, #192]
  40c600:	ldp	x26, x25, [sp, #176]
  40c604:	ldp	x28, x27, [sp, #160]
  40c608:	ldp	x29, x30, [sp, #144]
  40c60c:	add	sp, sp, #0xf0
  40c610:	ret
  40c614:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c618:	add	x0, x0, #0x58d
  40c61c:	bl	404de0 <perror@plt>
  40c620:	mov	w23, #0xffffffff            	// #-1
  40c624:	b	40c5f0 <rtnl_talk_iov@@Base+0x3a0>
  40c628:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c62c:	add	x1, x1, #0x370
  40c630:	mov	x0, x3
  40c634:	mov	w2, w28
  40c638:	b	40c668 <rtnl_talk_iov@@Base+0x418>
  40c63c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40c640:	ldr	x8, [x8, #3992]
  40c644:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c648:	add	x1, x1, #0x5a6
  40c64c:	b	40c664 <rtnl_talk_iov@@Base+0x414>
  40c650:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40c654:	ldr	x8, [x8, #3992]
  40c658:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c65c:	add	x1, x1, #0x3a1
  40c660:	mov	w2, w23
  40c664:	ldr	x0, [x8]
  40c668:	bl	4052e0 <fprintf@plt>
  40c66c:	mov	w0, #0x1                   	// #1
  40c670:	bl	404dd0 <exit@plt>

000000000040c674 <rtnl_talk_suppress_rtnl_errmsg@@Base>:
  40c674:	stp	x29, x30, [sp, #-16]!
  40c678:	mov	w3, wzr
  40c67c:	mov	x29, sp
  40c680:	bl	40c218 <rtnl_talk@@Base+0x18>
  40c684:	ldp	x29, x30, [sp], #16
  40c688:	ret

000000000040c68c <rtnl_listen_all_nsid@@Base>:
  40c68c:	stp	x29, x30, [sp, #-32]!
  40c690:	mov	x29, sp
  40c694:	mov	w8, #0x1                   	// #1
  40c698:	str	w8, [x29, #28]
  40c69c:	str	x19, [sp, #16]
  40c6a0:	mov	x19, x0
  40c6a4:	ldr	w0, [x0]
  40c6a8:	add	x3, x29, #0x1c
  40c6ac:	mov	w1, #0x10e                 	// #270
  40c6b0:	mov	w2, #0x8                   	// #8
  40c6b4:	mov	w4, #0x4                   	// #4
  40c6b8:	bl	404f30 <setsockopt@plt>
  40c6bc:	tbnz	w0, #31, 40c6dc <rtnl_listen_all_nsid@@Base+0x50>
  40c6c0:	ldr	w8, [x19, #48]
  40c6c4:	mov	w0, wzr
  40c6c8:	orr	w8, w8, #0x1
  40c6cc:	str	w8, [x19, #48]
  40c6d0:	ldr	x19, [sp, #16]
  40c6d4:	ldp	x29, x30, [sp], #32
  40c6d8:	ret
  40c6dc:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c6e0:	add	x0, x0, #0x2f9
  40c6e4:	bl	404de0 <perror@plt>
  40c6e8:	mov	w0, #0xffffffff            	// #-1
  40c6ec:	b	40c6d0 <rtnl_listen_all_nsid@@Base+0x44>

000000000040c6f0 <rtnl_listen@@Base>:
  40c6f0:	stp	x29, x30, [sp, #-96]!
  40c6f4:	stp	x28, x27, [sp, #16]
  40c6f8:	stp	x26, x25, [sp, #32]
  40c6fc:	stp	x24, x23, [sp, #48]
  40c700:	stp	x22, x21, [sp, #64]
  40c704:	stp	x20, x19, [sp, #80]
  40c708:	mov	x29, sp
  40c70c:	sub	sp, sp, #0x6, lsl #12
  40c710:	sub	sp, sp, #0x70
  40c714:	adrp	x8, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c718:	add	x8, x8, #0x608
  40c71c:	ldr	x10, [x8]
  40c720:	ldr	w8, [x8, #8]
  40c724:	sub	x9, x29, #0x18
  40c728:	sub	x22, x29, #0x60
  40c72c:	stur	x9, [x29, #-96]
  40c730:	mov	w9, #0xc                   	// #12
  40c734:	str	w9, [x22, #8]
  40c738:	sub	x9, x29, #0x28
  40c73c:	stur	x10, [x29, #-24]
  40c740:	mov	w10, #0x1                   	// #1
  40c744:	stp	x9, x10, [x29, #-80]
  40c748:	stp	xzr, xzr, [x29, #-64]
  40c74c:	str	w8, [x22, #80]
  40c750:	str	wzr, [x22, #48]
  40c754:	ldrb	w8, [x0, #48]
  40c758:	mov	x19, x2
  40c75c:	mov	x20, x0
  40c760:	mov	x21, x1
  40c764:	tbz	w8, #0, 40c774 <rtnl_listen@@Base+0x84>
  40c768:	add	x8, sp, #0x10
  40c76c:	mov	w9, #0x2000                	// #8192
  40c770:	stp	x8, x9, [x29, #-64]
  40c774:	add	x8, sp, #0x2, lsl #12
  40c778:	add	x8, x8, #0x10
  40c77c:	mov	w24, #0x4000                	// #16384
  40c780:	stur	x8, [x29, #-40]
  40c784:	b	40c7bc <rtnl_listen@@Base+0xcc>
  40c788:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40c78c:	ldr	x8, [x8, #3992]
  40c790:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c794:	mov	w1, #0xf                   	// #15
  40c798:	mov	w2, #0x1                   	// #1
  40c79c:	ldr	x3, [x8]
  40c7a0:	add	x0, x0, #0x330
  40c7a4:	mov	w23, #0x1                   	// #1
  40c7a8:	bl	405170 <fwrite@plt>
  40c7ac:	mov	w26, #0xffffffff            	// #-1
  40c7b0:	orr	w8, w23, #0x2
  40c7b4:	cmp	w8, #0x2
  40c7b8:	b.ne	40c988 <rtnl_listen@@Base+0x298>  // b.any
  40c7bc:	stur	x24, [x29, #-32]
  40c7c0:	ldr	w0, [x20]
  40c7c4:	sub	x1, x29, #0x60
  40c7c8:	mov	w2, wzr
  40c7cc:	bl	404da0 <recvmsg@plt>
  40c7d0:	mov	x27, x0
  40c7d4:	tbnz	w27, #31, 40c88c <rtnl_listen@@Base+0x19c>
  40c7d8:	cbz	w27, 40c788 <rtnl_listen@@Base+0x98>
  40c7dc:	ldr	w2, [x22, #8]
  40c7e0:	cmp	w2, #0xc
  40c7e4:	b.ne	40c9b0 <rtnl_listen@@Base+0x2c0>  // b.any
  40c7e8:	ldrb	w8, [x20, #48]
  40c7ec:	tbnz	w8, #0, 40c900 <rtnl_listen@@Base+0x210>
  40c7f0:	add	x28, sp, #0x2, lsl #12
  40c7f4:	add	x28, x28, #0x10
  40c7f8:	b	40c808 <rtnl_listen@@Base+0x118>
  40c7fc:	mov	w23, #0x1                   	// #1
  40c800:	mov	w26, w0
  40c804:	cbnz	w23, 40c7b0 <rtnl_listen@@Base+0xc0>
  40c808:	cmp	w27, #0x10
  40c80c:	b.cc	40c8ec <rtnl_listen@@Base+0x1fc>  // b.lo, b.ul, b.last
  40c810:	ldr	w25, [x28]
  40c814:	cmp	w25, w27
  40c818:	b.gt	40c854 <rtnl_listen@@Base+0x164>
  40c81c:	sub	w8, w25, #0x10
  40c820:	tbnz	w8, #31, 40c854 <rtnl_listen@@Base+0x164>
  40c824:	add	x0, sp, #0x8
  40c828:	mov	x1, x28
  40c82c:	mov	x2, x19
  40c830:	blr	x21
  40c834:	tbnz	w0, #31, 40c7fc <rtnl_listen@@Base+0x10c>
  40c838:	add	w8, w25, #0x3
  40c83c:	and	w8, w8, #0xfffffffc
  40c840:	mov	w23, wzr
  40c844:	sub	w27, w27, w8
  40c848:	add	x28, x28, x8
  40c84c:	cbz	wzr, 40c808 <rtnl_listen@@Base+0x118>
  40c850:	b	40c7b0 <rtnl_listen@@Base+0xc0>
  40c854:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40c858:	ldrb	w8, [x22, #48]
  40c85c:	ldr	x9, [x9, #3992]
  40c860:	ldr	x3, [x9]
  40c864:	tbz	w8, #5, 40c9c4 <rtnl_listen@@Base+0x2d4>
  40c868:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c86c:	mov	w1, #0x12                  	// #18
  40c870:	mov	w2, #0x1                   	// #1
  40c874:	add	x0, x0, #0x35d
  40c878:	mov	w23, #0x1                   	// #1
  40c87c:	bl	405170 <fwrite@plt>
  40c880:	mov	w26, #0xffffffff            	// #-1
  40c884:	cbz	w23, 40c808 <rtnl_listen@@Base+0x118>
  40c888:	b	40c7b0 <rtnl_listen@@Base+0xc0>
  40c88c:	bl	4052a0 <__errno_location@plt>
  40c890:	mov	x25, x0
  40c894:	ldr	w0, [x0]
  40c898:	mov	w23, #0x2                   	// #2
  40c89c:	cmp	w0, #0x4
  40c8a0:	b.eq	40c7b0 <rtnl_listen@@Base+0xc0>  // b.none
  40c8a4:	cmp	w0, #0xb
  40c8a8:	b.eq	40c7b0 <rtnl_listen@@Base+0xc0>  // b.none
  40c8ac:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40c8b0:	ldr	x8, [x8, #3992]
  40c8b4:	ldr	x27, [x8]
  40c8b8:	bl	405030 <strerror@plt>
  40c8bc:	ldr	w3, [x25]
  40c8c0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c8c4:	mov	x2, x0
  40c8c8:	mov	x0, x27
  40c8cc:	add	x1, x1, #0x311
  40c8d0:	bl	4052e0 <fprintf@plt>
  40c8d4:	ldr	w8, [x25]
  40c8d8:	cmp	w8, #0x69
  40c8dc:	mov	w8, #0x1                   	// #1
  40c8e0:	cinc	w23, w8, eq  // eq = none
  40c8e4:	csinv	w26, w26, wzr, eq  // eq = none
  40c8e8:	b	40c7b0 <rtnl_listen@@Base+0xc0>
  40c8ec:	ldrb	w8, [x22, #48]
  40c8f0:	tbnz	w8, #5, 40c960 <rtnl_listen@@Base+0x270>
  40c8f4:	cbnz	w27, 40c9d8 <rtnl_listen@@Base+0x2e8>
  40c8f8:	mov	w23, wzr
  40c8fc:	b	40c7b0 <rtnl_listen@@Base+0xc0>
  40c900:	ldur	x1, [x29, #-64]
  40c904:	mov	w8, #0xffffffff            	// #-1
  40c908:	str	w8, [sp, #8]
  40c90c:	cbz	x1, 40c7f0 <rtnl_listen@@Base+0x100>
  40c910:	ldur	x8, [x29, #-56]
  40c914:	cmp	x8, #0x10
  40c918:	b.cs	40c930 <rtnl_listen@@Base+0x240>  // b.hs, b.nlast
  40c91c:	b	40c7f0 <rtnl_listen@@Base+0x100>
  40c920:	sub	x0, x29, #0x60
  40c924:	bl	404df0 <__cmsg_nxthdr@plt>
  40c928:	mov	x1, x0
  40c92c:	cbz	x0, 40c7f0 <rtnl_listen@@Base+0x100>
  40c930:	ldr	w8, [x1, #8]
  40c934:	cmp	w8, #0x10e
  40c938:	b.ne	40c920 <rtnl_listen@@Base+0x230>  // b.any
  40c93c:	ldr	w8, [x1, #12]
  40c940:	cmp	w8, #0x8
  40c944:	b.ne	40c920 <rtnl_listen@@Base+0x230>  // b.any
  40c948:	ldr	x8, [x1]
  40c94c:	cmp	x8, #0x14
  40c950:	b.ne	40c920 <rtnl_listen@@Base+0x230>  // b.any
  40c954:	ldr	w8, [x1, #16]
  40c958:	str	w8, [sp, #8]
  40c95c:	b	40c920 <rtnl_listen@@Base+0x230>
  40c960:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40c964:	ldr	x8, [x8, #3992]
  40c968:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c96c:	mov	w1, #0x12                  	// #18
  40c970:	mov	w2, #0x1                   	// #1
  40c974:	ldr	x3, [x8]
  40c978:	add	x0, x0, #0x38e
  40c97c:	bl	405170 <fwrite@plt>
  40c980:	mov	w23, #0x2                   	// #2
  40c984:	b	40c7b0 <rtnl_listen@@Base+0xc0>
  40c988:	mov	w0, w26
  40c98c:	add	sp, sp, #0x6, lsl #12
  40c990:	add	sp, sp, #0x70
  40c994:	ldp	x20, x19, [sp, #80]
  40c998:	ldp	x22, x21, [sp, #64]
  40c99c:	ldp	x24, x23, [sp, #48]
  40c9a0:	ldp	x26, x25, [sp, #32]
  40c9a4:	ldp	x28, x27, [sp, #16]
  40c9a8:	ldp	x29, x30, [sp], #96
  40c9ac:	ret
  40c9b0:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40c9b4:	ldr	x8, [x8, #3992]
  40c9b8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c9bc:	add	x1, x1, #0x340
  40c9c0:	b	40c9ec <rtnl_listen@@Base+0x2fc>
  40c9c4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c9c8:	add	x1, x1, #0x370
  40c9cc:	mov	x0, x3
  40c9d0:	mov	w2, w25
  40c9d4:	b	40c9f0 <rtnl_listen@@Base+0x300>
  40c9d8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40c9dc:	ldr	x8, [x8, #3992]
  40c9e0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40c9e4:	add	x1, x1, #0x3a1
  40c9e8:	mov	w2, w27
  40c9ec:	ldr	x0, [x8]
  40c9f0:	bl	4052e0 <fprintf@plt>
  40c9f4:	mov	w0, #0x1                   	// #1
  40c9f8:	bl	404dd0 <exit@plt>

000000000040c9fc <rtnl_from_file@@Base>:
  40c9fc:	stp	x29, x30, [sp, #-96]!
  40ca00:	stp	x28, x27, [sp, #16]
  40ca04:	stp	x26, x25, [sp, #32]
  40ca08:	stp	x24, x23, [sp, #48]
  40ca0c:	stp	x22, x21, [sp, #64]
  40ca10:	stp	x20, x19, [sp, #80]
  40ca14:	mov	x29, sp
  40ca18:	sub	sp, sp, #0x4, lsl #12
  40ca1c:	sub	sp, sp, #0x10
  40ca20:	adrp	x28, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40ca24:	ldr	x28, [x28, #3992]
  40ca28:	add	x8, sp, #0x8
  40ca2c:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40ca30:	adrp	x23, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40ca34:	adrp	x25, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40ca38:	mov	x19, x2
  40ca3c:	mov	x20, x1
  40ca40:	mov	x21, x0
  40ca44:	add	x22, x22, #0x3f1
  40ca48:	add	x23, x23, #0x3ce
  40ca4c:	add	x24, x8, #0x10
  40ca50:	add	x25, x25, #0x3b8
  40ca54:	b	40ca7c <rtnl_from_file@@Base+0x80>
  40ca58:	add	x1, sp, #0x8
  40ca5c:	mov	x0, xzr
  40ca60:	mov	x2, x19
  40ca64:	blr	x20
  40ca68:	cmp	w0, #0x0
  40ca6c:	mvn	w8, w0
  40ca70:	csel	w26, w0, w26, lt  // lt = tstop
  40ca74:	lsr	w8, w8, #31
  40ca78:	tbz	w8, #0, 40cb64 <rtnl_from_file@@Base+0x168>
  40ca7c:	add	x0, sp, #0x8
  40ca80:	mov	w1, #0x1                   	// #1
  40ca84:	mov	w2, #0x10                  	// #16
  40ca88:	mov	x3, x21
  40ca8c:	bl	4050e0 <fread@plt>
  40ca90:	cmp	x0, #0x10
  40ca94:	b.eq	40cac0 <rtnl_from_file@@Base+0xc4>  // b.none
  40ca98:	mov	x27, x0
  40ca9c:	cbnz	x0, 40caf8 <rtnl_from_file@@Base+0xfc>
  40caa0:	mov	x0, x21
  40caa4:	bl	405090 <feof@plt>
  40caa8:	cbz	w0, 40cab8 <rtnl_from_file@@Base+0xbc>
  40caac:	mov	w26, wzr
  40cab0:	mov	w8, wzr
  40cab4:	b	40ca78 <rtnl_from_file@@Base+0x7c>
  40cab8:	cmp	x27, #0x10
  40cabc:	b.ne	40caf8 <rtnl_from_file@@Base+0xfc>  // b.any
  40cac0:	ldr	w27, [sp, #8]
  40cac4:	cmp	w27, #0x4, lsl #12
  40cac8:	b.hi	40cb40 <rtnl_from_file@@Base+0x144>  // b.pmore
  40cacc:	sub	w8, w27, #0x10
  40cad0:	tbnz	w8, #31, 40cb40 <rtnl_from_file@@Base+0x144>
  40cad4:	sub	w8, w27, #0xd
  40cad8:	and	w27, w8, #0xfffffffc
  40cadc:	mov	w1, #0x1                   	// #1
  40cae0:	mov	x0, x24
  40cae4:	mov	x2, x27
  40cae8:	mov	x3, x21
  40caec:	bl	4050e0 <fread@plt>
  40caf0:	cmp	x0, x27
  40caf4:	b.eq	40ca58 <rtnl_from_file@@Base+0x5c>  // b.none
  40caf8:	mov	x0, x21
  40cafc:	bl	405310 <ferror@plt>
  40cb00:	cbnz	w0, 40cb1c <rtnl_from_file@@Base+0x120>
  40cb04:	mov	x0, x21
  40cb08:	bl	405090 <feof@plt>
  40cb0c:	cbnz	w0, 40cb28 <rtnl_from_file@@Base+0x12c>
  40cb10:	mov	w8, wzr
  40cb14:	mov	w26, #0xffffffff            	// #-1
  40cb18:	b	40ca78 <rtnl_from_file@@Base+0x7c>
  40cb1c:	mov	x0, x25
  40cb20:	bl	404de0 <perror@plt>
  40cb24:	b	40cb04 <rtnl_from_file@@Base+0x108>
  40cb28:	ldr	x3, [x28]
  40cb2c:	mov	w1, #0x22                  	// #34
  40cb30:	mov	w2, #0x1                   	// #1
  40cb34:	mov	x0, x23
  40cb38:	bl	405170 <fwrite@plt>
  40cb3c:	b	40cb10 <rtnl_from_file@@Base+0x114>
  40cb40:	ldr	x26, [x28]
  40cb44:	mov	x0, x21
  40cb48:	bl	404e50 <ftell@plt>
  40cb4c:	mov	x3, x0
  40cb50:	mov	x0, x26
  40cb54:	mov	x1, x22
  40cb58:	mov	w2, w27
  40cb5c:	bl	4052e0 <fprintf@plt>
  40cb60:	b	40cb10 <rtnl_from_file@@Base+0x114>
  40cb64:	mov	w0, w26
  40cb68:	add	sp, sp, #0x4, lsl #12
  40cb6c:	add	sp, sp, #0x10
  40cb70:	ldp	x20, x19, [sp, #80]
  40cb74:	ldp	x22, x21, [sp, #64]
  40cb78:	ldp	x24, x23, [sp, #48]
  40cb7c:	ldp	x26, x25, [sp, #32]
  40cb80:	ldp	x28, x27, [sp, #16]
  40cb84:	ldp	x29, x30, [sp], #96
  40cb88:	ret

000000000040cb8c <addattr@@Base>:
  40cb8c:	stp	x29, x30, [sp, #-16]!
  40cb90:	mov	x3, xzr
  40cb94:	mov	w4, wzr
  40cb98:	mov	x29, sp
  40cb9c:	bl	40cba8 <addattr_l@@Base>
  40cba0:	ldp	x29, x30, [sp], #16
  40cba4:	ret

000000000040cba8 <addattr_l@@Base>:
  40cba8:	stp	x29, x30, [sp, #-32]!
  40cbac:	stp	x20, x19, [sp, #16]
  40cbb0:	ldr	w9, [x0]
  40cbb4:	add	w10, w4, #0x7
  40cbb8:	and	w10, w10, #0xfffffffc
  40cbbc:	mov	x29, sp
  40cbc0:	add	w9, w9, #0x3
  40cbc4:	and	x9, x9, #0xfffffffc
  40cbc8:	add	w20, w9, w10
  40cbcc:	cmp	w20, w1
  40cbd0:	b.hi	40cc10 <addattr_l@@Base+0x68>  // b.pmore
  40cbd4:	mov	x19, x0
  40cbd8:	add	x8, x0, x9
  40cbdc:	add	w9, w4, #0x4
  40cbe0:	strh	w2, [x8, #2]
  40cbe4:	strh	w9, [x8]
  40cbe8:	cbz	w4, 40cbfc <addattr_l@@Base+0x54>
  40cbec:	sxtw	x2, w4
  40cbf0:	add	x0, x8, #0x4
  40cbf4:	mov	x1, x3
  40cbf8:	bl	404d90 <memcpy@plt>
  40cbfc:	mov	w0, wzr
  40cc00:	str	w20, [x19]
  40cc04:	ldp	x20, x19, [sp, #16]
  40cc08:	ldp	x29, x30, [sp], #32
  40cc0c:	ret
  40cc10:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40cc14:	ldr	x9, [x9, #3992]
  40cc18:	mov	w8, w1
  40cc1c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40cc20:	add	x1, x1, #0x414
  40cc24:	ldr	x0, [x9]
  40cc28:	mov	w2, w8
  40cc2c:	bl	4052e0 <fprintf@plt>
  40cc30:	mov	w0, #0xffffffff            	// #-1
  40cc34:	b	40cc04 <addattr_l@@Base+0x5c>

000000000040cc38 <addattr8@@Base>:
  40cc38:	sub	sp, sp, #0x20
  40cc3c:	stp	x29, x30, [sp, #16]
  40cc40:	add	x29, sp, #0x10
  40cc44:	sturb	w3, [x29, #-4]
  40cc48:	sub	x3, x29, #0x4
  40cc4c:	mov	w4, #0x1                   	// #1
  40cc50:	bl	40cba8 <addattr_l@@Base>
  40cc54:	ldp	x29, x30, [sp, #16]
  40cc58:	add	sp, sp, #0x20
  40cc5c:	ret

000000000040cc60 <addattr16@@Base>:
  40cc60:	sub	sp, sp, #0x20
  40cc64:	stp	x29, x30, [sp, #16]
  40cc68:	add	x29, sp, #0x10
  40cc6c:	sturh	w3, [x29, #-4]
  40cc70:	sub	x3, x29, #0x4
  40cc74:	mov	w4, #0x2                   	// #2
  40cc78:	bl	40cba8 <addattr_l@@Base>
  40cc7c:	ldp	x29, x30, [sp, #16]
  40cc80:	add	sp, sp, #0x20
  40cc84:	ret

000000000040cc88 <addattr32@@Base>:
  40cc88:	sub	sp, sp, #0x20
  40cc8c:	stp	x29, x30, [sp, #16]
  40cc90:	add	x29, sp, #0x10
  40cc94:	stur	w3, [x29, #-4]
  40cc98:	sub	x3, x29, #0x4
  40cc9c:	mov	w4, #0x4                   	// #4
  40cca0:	bl	40cba8 <addattr_l@@Base>
  40cca4:	ldp	x29, x30, [sp, #16]
  40cca8:	add	sp, sp, #0x20
  40ccac:	ret

000000000040ccb0 <addattr64@@Base>:
  40ccb0:	sub	sp, sp, #0x20
  40ccb4:	str	x3, [sp, #8]
  40ccb8:	add	x3, sp, #0x8
  40ccbc:	mov	w4, #0x8                   	// #8
  40ccc0:	stp	x29, x30, [sp, #16]
  40ccc4:	add	x29, sp, #0x10
  40ccc8:	bl	40cba8 <addattr_l@@Base>
  40cccc:	ldp	x29, x30, [sp, #16]
  40ccd0:	add	sp, sp, #0x20
  40ccd4:	ret

000000000040ccd8 <addattrstrz@@Base>:
  40ccd8:	stp	x29, x30, [sp, #-48]!
  40ccdc:	stp	x22, x21, [sp, #16]
  40cce0:	mov	x22, x0
  40cce4:	mov	x0, x3
  40cce8:	stp	x20, x19, [sp, #32]
  40ccec:	mov	x29, sp
  40ccf0:	mov	x19, x3
  40ccf4:	mov	w20, w2
  40ccf8:	mov	w21, w1
  40ccfc:	bl	404dc0 <strlen@plt>
  40cd00:	add	w4, w0, #0x1
  40cd04:	mov	x0, x22
  40cd08:	mov	w1, w21
  40cd0c:	mov	w2, w20
  40cd10:	mov	x3, x19
  40cd14:	bl	40cba8 <addattr_l@@Base>
  40cd18:	ldp	x20, x19, [sp, #32]
  40cd1c:	ldp	x22, x21, [sp, #16]
  40cd20:	ldp	x29, x30, [sp], #48
  40cd24:	ret

000000000040cd28 <addraw_l@@Base>:
  40cd28:	stp	x29, x30, [sp, #-48]!
  40cd2c:	stp	x22, x21, [sp, #16]
  40cd30:	stp	x20, x19, [sp, #32]
  40cd34:	ldr	w9, [x0]
  40cd38:	add	w10, w3, #0x3
  40cd3c:	and	w22, w10, #0xfffffffc
  40cd40:	mov	x29, sp
  40cd44:	add	w9, w9, #0x3
  40cd48:	and	w9, w9, #0xfffffffc
  40cd4c:	add	w10, w9, w22
  40cd50:	cmp	w10, w1
  40cd54:	b.hi	40cdbc <addraw_l@@Base+0x94>  // b.pmore
  40cd58:	mov	w20, w3
  40cd5c:	sxtw	x21, w20
  40cd60:	mov	x19, x0
  40cd64:	add	x0, x0, w9, uxtw
  40cd68:	mov	x1, x2
  40cd6c:	mov	x2, x21
  40cd70:	bl	404d90 <memcpy@plt>
  40cd74:	ldr	w8, [x19]
  40cd78:	sub	w2, w22, w20
  40cd7c:	mov	w1, wzr
  40cd80:	add	w8, w8, #0x3
  40cd84:	and	w8, w8, #0xfffffffc
  40cd88:	add	x8, x19, x8
  40cd8c:	add	x0, x8, x21
  40cd90:	bl	404f90 <memset@plt>
  40cd94:	ldr	w8, [x19]
  40cd98:	mov	w0, wzr
  40cd9c:	add	w8, w8, #0x3
  40cda0:	and	w8, w8, #0xfffffffc
  40cda4:	add	w8, w8, w22
  40cda8:	str	w8, [x19]
  40cdac:	ldp	x20, x19, [sp, #32]
  40cdb0:	ldp	x22, x21, [sp, #16]
  40cdb4:	ldp	x29, x30, [sp], #48
  40cdb8:	ret
  40cdbc:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40cdc0:	ldr	x9, [x9, #3992]
  40cdc4:	mov	w8, w1
  40cdc8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40cdcc:	add	x1, x1, #0x443
  40cdd0:	ldr	x0, [x9]
  40cdd4:	mov	w2, w8
  40cdd8:	bl	4052e0 <fprintf@plt>
  40cddc:	mov	w0, #0xffffffff            	// #-1
  40cde0:	b	40cdac <addraw_l@@Base+0x84>

000000000040cde4 <addattr_nest@@Base>:
  40cde4:	stp	x29, x30, [sp, #-32]!
  40cde8:	ldr	w8, [x0]
  40cdec:	mov	x3, xzr
  40cdf0:	mov	w4, wzr
  40cdf4:	str	x19, [sp, #16]
  40cdf8:	add	w8, w8, #0x3
  40cdfc:	and	w8, w8, #0xfffffffc
  40ce00:	mov	x29, sp
  40ce04:	add	x19, x0, x8
  40ce08:	bl	40cba8 <addattr_l@@Base>
  40ce0c:	mov	x0, x19
  40ce10:	ldr	x19, [sp, #16]
  40ce14:	ldp	x29, x30, [sp], #32
  40ce18:	ret

000000000040ce1c <addattr_nest_end@@Base>:
  40ce1c:	ldr	w8, [x0]
  40ce20:	add	w9, w8, #0x3
  40ce24:	and	w9, w9, #0xfffc
  40ce28:	add	w9, w0, w9
  40ce2c:	sub	w9, w9, w1
  40ce30:	mov	w0, w8
  40ce34:	strh	w9, [x1]
  40ce38:	ret

000000000040ce3c <addattr_nest_compat@@Base>:
  40ce3c:	stp	x29, x30, [sp, #-48]!
  40ce40:	stp	x22, x21, [sp, #16]
  40ce44:	stp	x20, x19, [sp, #32]
  40ce48:	ldr	w8, [x0]
  40ce4c:	mov	x29, sp
  40ce50:	mov	w19, w2
  40ce54:	mov	w20, w1
  40ce58:	add	w8, w8, #0x3
  40ce5c:	and	w8, w8, #0xfffffffc
  40ce60:	mov	x21, x0
  40ce64:	add	x22, x0, x8
  40ce68:	bl	40cba8 <addattr_l@@Base>
  40ce6c:	mov	x0, x21
  40ce70:	mov	w1, w20
  40ce74:	mov	w2, w19
  40ce78:	bl	40cde4 <addattr_nest@@Base>
  40ce7c:	mov	x0, x22
  40ce80:	ldp	x20, x19, [sp, #32]
  40ce84:	ldp	x22, x21, [sp, #16]
  40ce88:	ldp	x29, x30, [sp], #48
  40ce8c:	ret

000000000040ce90 <addattr_nest_compat_end@@Base>:
  40ce90:	stp	x29, x30, [sp, #-32]!
  40ce94:	ldr	w9, [x0]
  40ce98:	ldrh	w8, [x1]
  40ce9c:	str	x19, [sp, #16]
  40cea0:	mov	x19, x0
  40cea4:	add	w9, w9, #0x3
  40cea8:	add	w8, w8, #0x3
  40ceac:	and	w9, w9, #0xfffc
  40ceb0:	and	x8, x8, #0x1fffc
  40ceb4:	add	w9, w19, w9
  40ceb8:	add	x8, x1, x8
  40cebc:	sub	w9, w9, w1
  40cec0:	strh	w9, [x1]
  40cec4:	mov	x1, x8
  40cec8:	mov	x29, sp
  40cecc:	bl	40ce1c <addattr_nest_end@@Base>
  40ced0:	ldr	w0, [x19]
  40ced4:	ldr	x19, [sp, #16]
  40ced8:	ldp	x29, x30, [sp], #32
  40cedc:	ret

000000000040cee0 <rta_addattr32@@Base>:
  40cee0:	stp	x29, x30, [sp, #-16]!
  40cee4:	ldrh	w9, [x0]
  40cee8:	mov	x29, sp
  40ceec:	add	w9, w9, #0x3
  40cef0:	and	x9, x9, #0x1fffc
  40cef4:	add	w10, w9, #0x8
  40cef8:	cmp	w10, w1
  40cefc:	b.hi	40cf34 <rta_addattr32@@Base+0x54>  // b.pmore
  40cf00:	add	x9, x0, x9
  40cf04:	mov	w10, #0x8                   	// #8
  40cf08:	strh	w2, [x9, #2]
  40cf0c:	strh	w10, [x9]
  40cf10:	str	w3, [x9, #4]
  40cf14:	ldrh	w9, [x0]
  40cf18:	mov	w8, wzr
  40cf1c:	add	w9, w9, #0xb
  40cf20:	and	w9, w9, #0xfffc
  40cf24:	strh	w9, [x0]
  40cf28:	mov	w0, w8
  40cf2c:	ldp	x29, x30, [sp], #16
  40cf30:	ret
  40cf34:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40cf38:	ldr	x9, [x9, #3992]
  40cf3c:	mov	w8, w1
  40cf40:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40cf44:	add	x1, x1, #0x471
  40cf48:	ldr	x0, [x9]
  40cf4c:	mov	w2, w8
  40cf50:	bl	4052e0 <fprintf@plt>
  40cf54:	mov	w8, #0xffffffff            	// #-1
  40cf58:	b	40cf28 <rta_addattr32@@Base+0x48>

000000000040cf5c <rta_addattr_l@@Base>:
  40cf5c:	stp	x29, x30, [sp, #-32]!
  40cf60:	stp	x20, x19, [sp, #16]
  40cf64:	ldrh	w9, [x0]
  40cf68:	add	w10, w4, #0x7
  40cf6c:	and	w20, w10, #0xfffffffc
  40cf70:	mov	x29, sp
  40cf74:	add	w9, w9, #0x3
  40cf78:	and	x9, x9, #0x1fffc
  40cf7c:	add	w10, w9, w20
  40cf80:	cmp	w10, w1
  40cf84:	b.hi	40cfd4 <rta_addattr_l@@Base+0x78>  // b.pmore
  40cf88:	mov	x19, x0
  40cf8c:	add	x8, x0, x9
  40cf90:	add	w9, w4, #0x4
  40cf94:	strh	w2, [x8, #2]
  40cf98:	strh	w9, [x8]
  40cf9c:	cbz	w4, 40cfb0 <rta_addattr_l@@Base+0x54>
  40cfa0:	sxtw	x2, w4
  40cfa4:	add	x0, x8, #0x4
  40cfa8:	mov	x1, x3
  40cfac:	bl	404d90 <memcpy@plt>
  40cfb0:	ldrh	w8, [x19]
  40cfb4:	mov	w0, wzr
  40cfb8:	add	w8, w8, #0x3
  40cfbc:	and	w8, w8, #0xfffc
  40cfc0:	add	w8, w8, w20
  40cfc4:	strh	w8, [x19]
  40cfc8:	ldp	x20, x19, [sp, #16]
  40cfcc:	ldp	x29, x30, [sp], #32
  40cfd0:	ret
  40cfd4:	adrp	x9, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40cfd8:	ldr	x9, [x9, #3992]
  40cfdc:	mov	w8, w1
  40cfe0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40cfe4:	add	x1, x1, #0x4a6
  40cfe8:	ldr	x0, [x9]
  40cfec:	mov	w2, w8
  40cff0:	bl	4052e0 <fprintf@plt>
  40cff4:	mov	w0, #0xffffffff            	// #-1
  40cff8:	b	40cfc8 <rta_addattr_l@@Base+0x6c>

000000000040cffc <rta_addattr8@@Base>:
  40cffc:	sub	sp, sp, #0x20
  40d000:	stp	x29, x30, [sp, #16]
  40d004:	add	x29, sp, #0x10
  40d008:	sturb	w3, [x29, #-4]
  40d00c:	sub	x3, x29, #0x4
  40d010:	mov	w4, #0x1                   	// #1
  40d014:	bl	40cf5c <rta_addattr_l@@Base>
  40d018:	ldp	x29, x30, [sp, #16]
  40d01c:	add	sp, sp, #0x20
  40d020:	ret

000000000040d024 <rta_addattr16@@Base>:
  40d024:	sub	sp, sp, #0x20
  40d028:	stp	x29, x30, [sp, #16]
  40d02c:	add	x29, sp, #0x10
  40d030:	sturh	w3, [x29, #-4]
  40d034:	sub	x3, x29, #0x4
  40d038:	mov	w4, #0x2                   	// #2
  40d03c:	bl	40cf5c <rta_addattr_l@@Base>
  40d040:	ldp	x29, x30, [sp, #16]
  40d044:	add	sp, sp, #0x20
  40d048:	ret

000000000040d04c <rta_addattr64@@Base>:
  40d04c:	sub	sp, sp, #0x20
  40d050:	str	x3, [sp, #8]
  40d054:	add	x3, sp, #0x8
  40d058:	mov	w4, #0x8                   	// #8
  40d05c:	stp	x29, x30, [sp, #16]
  40d060:	add	x29, sp, #0x10
  40d064:	bl	40cf5c <rta_addattr_l@@Base>
  40d068:	ldp	x29, x30, [sp, #16]
  40d06c:	add	sp, sp, #0x20
  40d070:	ret

000000000040d074 <rta_nest@@Base>:
  40d074:	stp	x29, x30, [sp, #-32]!
  40d078:	ldrh	w8, [x0]
  40d07c:	mov	x3, xzr
  40d080:	mov	w4, wzr
  40d084:	str	x19, [sp, #16]
  40d088:	add	w8, w8, #0x3
  40d08c:	and	x8, x8, #0x1fffc
  40d090:	mov	x29, sp
  40d094:	add	x19, x0, x8
  40d098:	bl	40cf5c <rta_addattr_l@@Base>
  40d09c:	ldrh	w8, [x19, #2]
  40d0a0:	mov	x0, x19
  40d0a4:	orr	w8, w8, #0x8000
  40d0a8:	strh	w8, [x19, #2]
  40d0ac:	ldr	x19, [sp, #16]
  40d0b0:	ldp	x29, x30, [sp], #32
  40d0b4:	ret

000000000040d0b8 <rta_nest_end@@Base>:
  40d0b8:	ldrh	w8, [x0]
  40d0bc:	add	w8, w8, #0x3
  40d0c0:	and	w8, w8, #0xfffc
  40d0c4:	add	w8, w0, w8
  40d0c8:	sub	w8, w8, w1
  40d0cc:	strh	w8, [x1]
  40d0d0:	ldrh	w0, [x0]
  40d0d4:	ret

000000000040d0d8 <parse_rtattr@@Base>:
  40d0d8:	stp	x29, x30, [sp, #-16]!
  40d0dc:	mov	w4, wzr
  40d0e0:	mov	x29, sp
  40d0e4:	bl	40d0f4 <parse_rtattr_flags@@Base>
  40d0e8:	mov	w0, wzr
  40d0ec:	ldp	x29, x30, [sp], #16
  40d0f0:	ret

000000000040d0f4 <parse_rtattr_flags@@Base>:
  40d0f4:	stp	x29, x30, [sp, #-64]!
  40d0f8:	add	w8, w1, #0x1
  40d0fc:	stp	x22, x21, [sp, #32]
  40d100:	stp	x20, x19, [sp, #48]
  40d104:	mov	x20, x2
  40d108:	mov	w21, w1
  40d10c:	sbfiz	x2, x8, #3, #32
  40d110:	mov	w1, wzr
  40d114:	str	x23, [sp, #16]
  40d118:	mov	x29, sp
  40d11c:	mov	w23, w4
  40d120:	mov	w19, w3
  40d124:	mov	x22, x0
  40d128:	bl	404f90 <memset@plt>
  40d12c:	cmp	w19, #0x4
  40d130:	b.lt	40d18c <parse_rtattr_flags@@Base+0x98>  // b.tstop
  40d134:	mvn	w8, w23
  40d138:	b	40d154 <parse_rtattr_flags@@Base+0x60>
  40d13c:	add	w9, w9, #0x3
  40d140:	and	x9, x9, #0x1fffc
  40d144:	sub	w19, w19, w9
  40d148:	cmp	w19, #0x3
  40d14c:	add	x20, x20, x9
  40d150:	b.le	40d18c <parse_rtattr_flags@@Base+0x98>
  40d154:	ldrh	w9, [x20]
  40d158:	cmp	w9, #0x4
  40d15c:	b.cc	40d18c <parse_rtattr_flags@@Base+0x98>  // b.lo, b.ul, b.last
  40d160:	cmp	w19, w9
  40d164:	b.lt	40d18c <parse_rtattr_flags@@Base+0x98>  // b.tstop
  40d168:	ldrh	w10, [x20, #2]
  40d16c:	and	w10, w10, w8
  40d170:	cmp	w21, w10, uxth
  40d174:	b.lt	40d13c <parse_rtattr_flags@@Base+0x48>  // b.tstop
  40d178:	and	x10, x10, #0xffff
  40d17c:	ldr	x11, [x22, x10, lsl #3]
  40d180:	cbnz	x11, 40d13c <parse_rtattr_flags@@Base+0x48>
  40d184:	str	x20, [x22, x10, lsl #3]
  40d188:	b	40d13c <parse_rtattr_flags@@Base+0x48>
  40d18c:	cbnz	w19, 40d1a8 <parse_rtattr_flags@@Base+0xb4>
  40d190:	ldp	x20, x19, [sp, #48]
  40d194:	ldp	x22, x21, [sp, #32]
  40d198:	ldr	x23, [sp, #16]
  40d19c:	mov	w0, wzr
  40d1a0:	ldp	x29, x30, [sp], #64
  40d1a4:	ret
  40d1a8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40d1ac:	ldr	x8, [x8, #3992]
  40d1b0:	ldrh	w3, [x20]
  40d1b4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40d1b8:	add	x1, x1, #0x4db
  40d1bc:	ldr	x0, [x8]
  40d1c0:	mov	w2, w19
  40d1c4:	bl	4052e0 <fprintf@plt>
  40d1c8:	b	40d190 <parse_rtattr_flags@@Base+0x9c>

000000000040d1cc <parse_rtattr_one@@Base>:
  40d1cc:	stp	x29, x30, [sp, #-16]!
  40d1d0:	cmp	w2, #0x4
  40d1d4:	mov	x29, sp
  40d1d8:	b.lt	40d214 <parse_rtattr_one@@Base+0x48>  // b.tstop
  40d1dc:	ldrh	w8, [x1]
  40d1e0:	cmp	w8, #0x4
  40d1e4:	b.cc	40d214 <parse_rtattr_one@@Base+0x48>  // b.lo, b.ul, b.last
  40d1e8:	cmp	w2, w8
  40d1ec:	b.lt	40d214 <parse_rtattr_one@@Base+0x48>  // b.tstop
  40d1f0:	ldrh	w9, [x1, #2]
  40d1f4:	cmp	w9, w0
  40d1f8:	b.eq	40d21c <parse_rtattr_one@@Base+0x50>  // b.none
  40d1fc:	add	w8, w8, #0x3
  40d200:	and	x8, x8, #0x1fffc
  40d204:	sub	w2, w2, w8
  40d208:	cmp	w2, #0x3
  40d20c:	add	x1, x1, x8
  40d210:	b.gt	40d1dc <parse_rtattr_one@@Base+0x10>
  40d214:	cbnz	w2, 40d228 <parse_rtattr_one@@Base+0x5c>
  40d218:	mov	x1, xzr
  40d21c:	mov	x0, x1
  40d220:	ldp	x29, x30, [sp], #16
  40d224:	ret
  40d228:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40d22c:	ldr	x8, [x8, #3992]
  40d230:	ldrh	w3, [x1]
  40d234:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40d238:	add	x1, x1, #0x4db
  40d23c:	ldr	x0, [x8]
  40d240:	bl	4052e0 <fprintf@plt>
  40d244:	b	40d218 <parse_rtattr_one@@Base+0x4c>

000000000040d248 <__parse_rtattr_nested_compat@@Base>:
  40d248:	stp	x29, x30, [sp, #-16]!
  40d24c:	ldrh	w8, [x2]
  40d250:	mov	x29, sp
  40d254:	sub	x8, x8, #0x4
  40d258:	cmp	x8, w3, sxtw
  40d25c:	b.cs	40d26c <__parse_rtattr_nested_compat@@Base+0x24>  // b.hs, b.nlast
  40d260:	mov	w0, #0xffffffff            	// #-1
  40d264:	ldp	x29, x30, [sp], #16
  40d268:	ret
  40d26c:	add	w9, w3, #0x3
  40d270:	and	x9, x9, #0xfffffffc
  40d274:	add	x10, x9, #0x4
  40d278:	cmp	x8, x10
  40d27c:	b.cs	40d294 <__parse_rtattr_nested_compat@@Base+0x4c>  // b.hs, b.nlast
  40d280:	add	w8, w1, #0x1
  40d284:	sbfiz	x2, x8, #3, #32
  40d288:	mov	w1, wzr
  40d28c:	bl	404f90 <memset@plt>
  40d290:	b	40d2a8 <__parse_rtattr_nested_compat@@Base+0x60>
  40d294:	add	x8, x2, x9
  40d298:	ldrh	w9, [x8, #4]
  40d29c:	add	x2, x8, #0x8
  40d2a0:	sub	w3, w9, #0x4
  40d2a4:	bl	40d0d8 <parse_rtattr@@Base>
  40d2a8:	mov	w0, wzr
  40d2ac:	ldp	x29, x30, [sp], #16
  40d2b0:	ret
  40d2b4:	stp	x29, x30, [sp, #-64]!
  40d2b8:	stp	x24, x23, [sp, #16]
  40d2bc:	stp	x22, x21, [sp, #32]
  40d2c0:	stp	x20, x19, [sp, #48]
  40d2c4:	ldr	x24, [x1, #16]
  40d2c8:	mov	x19, x2
  40d2cc:	mov	w2, #0x22                  	// #34
  40d2d0:	mov	x29, sp
  40d2d4:	mov	x21, x1
  40d2d8:	mov	w22, w0
  40d2dc:	stp	xzr, xzr, [x24]
  40d2e0:	bl	40d4c0 <__parse_rtattr_nested_compat@@Base+0x278>
  40d2e4:	mov	w20, w0
  40d2e8:	tbnz	w0, #31, 40d338 <__parse_rtattr_nested_compat@@Base+0xf0>
  40d2ec:	cmp	w20, #0x8, lsl #12
  40d2f0:	mov	w8, #0x8000                	// #32768
  40d2f4:	csel	w20, w20, w8, gt
  40d2f8:	mov	x0, x20
  40d2fc:	bl	404f20 <malloc@plt>
  40d300:	cbz	x0, 40d350 <__parse_rtattr_nested_compat@@Base+0x108>
  40d304:	mov	x23, x0
  40d308:	stp	x0, x20, [x24]
  40d30c:	mov	w0, w22
  40d310:	mov	x1, x21
  40d314:	mov	w2, wzr
  40d318:	bl	40d4c0 <__parse_rtattr_nested_compat@@Base+0x278>
  40d31c:	mov	w20, w0
  40d320:	tbnz	w0, #31, 40d330 <__parse_rtattr_nested_compat@@Base+0xe8>
  40d324:	cbz	x19, 40d330 <__parse_rtattr_nested_compat@@Base+0xe8>
  40d328:	str	x23, [x19]
  40d32c:	b	40d338 <__parse_rtattr_nested_compat@@Base+0xf0>
  40d330:	mov	x0, x23
  40d334:	bl	405110 <free@plt>
  40d338:	mov	w0, w20
  40d33c:	ldp	x20, x19, [sp, #48]
  40d340:	ldp	x22, x21, [sp, #32]
  40d344:	ldp	x24, x23, [sp, #16]
  40d348:	ldp	x29, x30, [sp], #64
  40d34c:	ret
  40d350:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40d354:	ldr	x8, [x8, #3992]
  40d358:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40d35c:	add	x0, x0, #0x525
  40d360:	mov	w1, #0x20                  	// #32
  40d364:	ldr	x3, [x8]
  40d368:	mov	w2, #0x1                   	// #1
  40d36c:	bl	405170 <fwrite@plt>
  40d370:	mov	w20, #0xfffffff4            	// #-12
  40d374:	b	40d338 <__parse_rtattr_nested_compat@@Base+0xf0>
  40d378:	stp	x29, x30, [sp, #-32]!
  40d37c:	stp	x20, x19, [sp, #16]
  40d380:	ldr	w8, [x0]
  40d384:	mov	x29, sp
  40d388:	cmp	w8, #0x13
  40d38c:	b.ls	40d3ec <__parse_rtattr_nested_compat@@Base+0x1a4>  // b.plast
  40d390:	ldr	w19, [x0, #16]
  40d394:	tbnz	w19, #31, 40d3a0 <__parse_rtattr_nested_compat@@Base+0x158>
  40d398:	mov	w0, wzr
  40d39c:	b	40d424 <__parse_rtattr_nested_compat@@Base+0x1dc>
  40d3a0:	neg	w20, w19
  40d3a4:	bl	4052a0 <__errno_location@plt>
  40d3a8:	str	w20, [x0]
  40d3ac:	cmn	w19, #0x2
  40d3b0:	mov	w0, #0xffffffff            	// #-1
  40d3b4:	b.eq	40d424 <__parse_rtattr_nested_compat@@Base+0x1dc>  // b.none
  40d3b8:	cmp	w20, #0x5f
  40d3bc:	b.eq	40d424 <__parse_rtattr_nested_compat@@Base+0x1dc>  // b.none
  40d3c0:	cmp	w20, #0x5a
  40d3c4:	b.ne	40d414 <__parse_rtattr_nested_compat@@Base+0x1cc>  // b.any
  40d3c8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40d3cc:	ldr	x8, [x8, #3992]
  40d3d0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40d3d4:	add	x0, x0, #0x556
  40d3d8:	mov	w1, #0x24                  	// #36
  40d3dc:	ldr	x3, [x8]
  40d3e0:	mov	w2, #0x1                   	// #1
  40d3e4:	bl	405170 <fwrite@plt>
  40d3e8:	b	40d420 <__parse_rtattr_nested_compat@@Base+0x1d8>
  40d3ec:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40d3f0:	ldr	x8, [x8, #3992]
  40d3f4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40d3f8:	add	x0, x0, #0x546
  40d3fc:	mov	w1, #0xf                   	// #15
  40d400:	ldr	x3, [x8]
  40d404:	mov	w2, #0x1                   	// #1
  40d408:	bl	405170 <fwrite@plt>
  40d40c:	mov	w0, #0xffffffff            	// #-1
  40d410:	b	40d424 <__parse_rtattr_nested_compat@@Base+0x1dc>
  40d414:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40d418:	add	x0, x0, #0x57b
  40d41c:	bl	404de0 <perror@plt>
  40d420:	mov	w0, w19
  40d424:	ldp	x20, x19, [sp, #16]
  40d428:	ldp	x29, x30, [sp], #32
  40d42c:	ret
  40d430:	stp	x29, x30, [sp, #-32]!
  40d434:	stp	x20, x19, [sp, #16]
  40d438:	ldr	w8, [x1]
  40d43c:	mov	x29, sp
  40d440:	cmp	w8, #0x23
  40d444:	b.ls	40d48c <__parse_rtattr_nested_compat@@Base+0x244>  // b.plast
  40d448:	ldr	w8, [x1, #16]
  40d44c:	mov	x19, x0
  40d450:	neg	w20, w8
  40d454:	bl	4052a0 <__errno_location@plt>
  40d458:	str	w20, [x0]
  40d45c:	ldr	w8, [x19, #36]
  40d460:	cmp	w8, #0x4
  40d464:	b.ne	40d478 <__parse_rtattr_nested_compat@@Base+0x230>  // b.any
  40d468:	cmp	w20, #0x2
  40d46c:	b.eq	40d480 <__parse_rtattr_nested_compat@@Base+0x238>  // b.none
  40d470:	cmp	w20, #0x5f
  40d474:	b.eq	40d480 <__parse_rtattr_nested_compat@@Base+0x238>  // b.none
  40d478:	ldrb	w8, [x19, #48]
  40d47c:	tbz	w8, #1, 40d4b0 <__parse_rtattr_nested_compat@@Base+0x268>
  40d480:	ldp	x20, x19, [sp, #16]
  40d484:	ldp	x29, x30, [sp], #32
  40d488:	ret
  40d48c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40d490:	ldr	x8, [x8, #3992]
  40d494:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40d498:	add	x0, x0, #0x2e8
  40d49c:	mov	w1, #0x10                  	// #16
  40d4a0:	ldr	x3, [x8]
  40d4a4:	mov	w2, #0x1                   	// #1
  40d4a8:	bl	405170 <fwrite@plt>
  40d4ac:	b	40d480 <__parse_rtattr_nested_compat@@Base+0x238>
  40d4b0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40d4b4:	add	x0, x0, #0x57b
  40d4b8:	bl	404de0 <perror@plt>
  40d4bc:	b	40d480 <__parse_rtattr_nested_compat@@Base+0x238>
  40d4c0:	stp	x29, x30, [sp, #-48]!
  40d4c4:	stp	x22, x21, [sp, #16]
  40d4c8:	stp	x20, x19, [sp, #32]
  40d4cc:	mov	x29, sp
  40d4d0:	mov	w20, w2
  40d4d4:	mov	x21, x1
  40d4d8:	mov	w22, w0
  40d4dc:	bl	404da0 <recvmsg@plt>
  40d4e0:	tbnz	w0, #31, 40d510 <__parse_rtattr_nested_compat@@Base+0x2c8>
  40d4e4:	cbnz	w0, 40d574 <__parse_rtattr_nested_compat@@Base+0x32c>
  40d4e8:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40d4ec:	ldr	x8, [x8, #3992]
  40d4f0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40d4f4:	add	x0, x0, #0x330
  40d4f8:	mov	w1, #0xf                   	// #15
  40d4fc:	ldr	x3, [x8]
  40d500:	mov	w2, #0x1                   	// #1
  40d504:	bl	405170 <fwrite@plt>
  40d508:	mov	w0, #0xffffffc3            	// #-61
  40d50c:	b	40d574 <__parse_rtattr_nested_compat@@Base+0x32c>
  40d510:	bl	4052a0 <__errno_location@plt>
  40d514:	mov	x19, x0
  40d518:	b	40d530 <__parse_rtattr_nested_compat@@Base+0x2e8>
  40d51c:	mov	w0, w22
  40d520:	mov	x1, x21
  40d524:	mov	w2, w20
  40d528:	bl	404da0 <recvmsg@plt>
  40d52c:	tbz	w0, #31, 40d4e4 <__parse_rtattr_nested_compat@@Base+0x29c>
  40d530:	ldr	w0, [x19]
  40d534:	cmp	w0, #0xb
  40d538:	b.eq	40d51c <__parse_rtattr_nested_compat@@Base+0x2d4>  // b.none
  40d53c:	cmp	w0, #0x4
  40d540:	b.eq	40d51c <__parse_rtattr_nested_compat@@Base+0x2d4>  // b.none
  40d544:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40d548:	ldr	x8, [x8, #3992]
  40d54c:	ldr	x20, [x8]
  40d550:	bl	405030 <strerror@plt>
  40d554:	ldr	w3, [x19]
  40d558:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40d55c:	mov	x2, x0
  40d560:	add	x1, x1, #0x311
  40d564:	mov	x0, x20
  40d568:	bl	4052e0 <fprintf@plt>
  40d56c:	ldr	w8, [x19]
  40d570:	neg	w0, w8
  40d574:	ldp	x20, x19, [sp, #32]
  40d578:	ldp	x22, x21, [sp, #16]
  40d57c:	ldp	x29, x30, [sp], #48
  40d580:	ret
  40d584:	stp	x29, x30, [sp, #-32]!
  40d588:	str	x19, [sp, #16]
  40d58c:	adrp	x8, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40d590:	ldr	x8, [x8, #3992]
  40d594:	ldr	w9, [x1]
  40d598:	mov	x29, sp
  40d59c:	ldr	x19, [x8]
  40d5a0:	neg	w0, w9
  40d5a4:	bl	405030 <strerror@plt>
  40d5a8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x9a0>
  40d5ac:	mov	x2, x0
  40d5b0:	add	x1, x1, #0x5d8
  40d5b4:	mov	x0, x19
  40d5b8:	bl	4052e0 <fprintf@plt>
  40d5bc:	ldr	x19, [sp, #16]
  40d5c0:	ldp	x29, x30, [sp], #32
  40d5c4:	ret

000000000040d5c8 <__libc_csu_init@@Base>:
  40d5c8:	stp	x29, x30, [sp, #-64]!
  40d5cc:	mov	x29, sp
  40d5d0:	stp	x19, x20, [sp, #16]
  40d5d4:	adrp	x20, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40d5d8:	add	x20, x20, #0xcf8
  40d5dc:	stp	x21, x22, [sp, #32]
  40d5e0:	adrp	x21, 41e000 <_IO_stdin_used@@Base+0x109a0>
  40d5e4:	add	x21, x21, #0xcf0
  40d5e8:	sub	x20, x20, x21
  40d5ec:	mov	w22, w0
  40d5f0:	stp	x23, x24, [sp, #48]
  40d5f4:	mov	x23, x1
  40d5f8:	mov	x24, x2
  40d5fc:	bl	404d50 <memcpy@plt-0x40>
  40d600:	cmp	xzr, x20, asr #3
  40d604:	b.eq	40d630 <__libc_csu_init@@Base+0x68>  // b.none
  40d608:	asr	x20, x20, #3
  40d60c:	mov	x19, #0x0                   	// #0
  40d610:	ldr	x3, [x21, x19, lsl #3]
  40d614:	mov	x2, x24
  40d618:	add	x19, x19, #0x1
  40d61c:	mov	x1, x23
  40d620:	mov	w0, w22
  40d624:	blr	x3
  40d628:	cmp	x20, x19
  40d62c:	b.ne	40d610 <__libc_csu_init@@Base+0x48>  // b.any
  40d630:	ldp	x19, x20, [sp, #16]
  40d634:	ldp	x21, x22, [sp, #32]
  40d638:	ldp	x23, x24, [sp, #48]
  40d63c:	ldp	x29, x30, [sp], #64
  40d640:	ret
  40d644:	nop

000000000040d648 <__libc_csu_fini@@Base>:
  40d648:	ret

Disassembly of section .fini:

000000000040d64c <.fini>:
  40d64c:	stp	x29, x30, [sp, #-16]!
  40d650:	mov	x29, sp
  40d654:	ldp	x29, x30, [sp], #16
  40d658:	ret
