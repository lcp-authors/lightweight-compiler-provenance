
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//pbkdf2.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_crypto_pbkdf2>:
   0:	stp	x29, x30, [sp, #-320]!
   4:	cmp	w5, #0x0
   8:	mov	x8, #0xfffffffe            	// #4294967294
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	sub	x0, x7, #0x1
  1c:	stp	x23, x24, [sp, #48]
  20:	ccmp	x0, x8, #0x2, ne  // ne = any
  24:	ldr	x23, [x19, #32]
  28:	stp	x21, x22, [sp, #32]
  2c:	mov	x21, x1
  30:	str	w5, [sp, #108]
  34:	sub	x5, x23, #0x1
  38:	str	x4, [sp, #112]
  3c:	mov	x1, #0x3f                  	// #63
  40:	str	x6, [sp, #168]
  44:	ccmp	x5, x1, #0x2, ls  // ls = plast
  48:	b.ls	68 <grub_crypto_pbkdf2+0x68>  // b.plast
  4c:	mov	w3, #0xa                   	// #10
  50:	mov	w0, w3
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x21, x22, [sp, #32]
  5c:	ldp	x23, x24, [sp, #48]
  60:	ldp	x29, x30, [sp], #320
  64:	ret
  68:	udiv	x1, x0, x23
  6c:	mov	x22, x2
  70:	add	x0, x4, #0x4
  74:	mov	x24, x3
  78:	stp	x25, x26, [sp, #64]
  7c:	mov	x26, x4
  80:	mov	w25, w23
  84:	msub	w2, w23, w1, w7
  88:	add	w1, w1, #0x1
  8c:	str	x0, [sp, #152]
  90:	stp	w1, w2, [sp, #184]
  94:	bl	0 <grub_malloc>
  98:	str	x0, [sp, #128]
  9c:	mov	x20, x0
  a0:	cbz	x0, 3f4 <grub_crypto_pbkdf2+0x3f4>
  a4:	sub	w3, w23, #0x1
  a8:	mov	x1, x24
  ac:	mov	x2, x26
  b0:	stp	x27, x28, [sp, #80]
  b4:	lsr	w27, w23, #3
  b8:	str	x26, [sp, #112]
  bc:	and	w24, w23, #0xfffffff8
  c0:	str	w3, [sp, #120]
  c4:	bl	0 <grub_memmove>
  c8:	mov	w0, #0x1                   	// #1
  cc:	str	w0, [sp, #124]
  d0:	ldr	x0, [sp, #112]
  d4:	add	x28, sp, #0xc0
  d8:	add	x26, sp, #0x100
  dc:	str	wzr, [sp, #180]
  e0:	add	x0, x20, x0
  e4:	str	x0, [sp, #160]
  e8:	mov	w0, w27
  ec:	mov	x27, x23
  f0:	mov	w23, w0
  f4:	ldr	w0, [sp, #124]
  f8:	mov	x2, x27
  fc:	mov	w20, #0x0                   	// #0
 100:	lsr	w1, w0, #24
 104:	str	w1, [sp, #176]
 108:	ubfx	x1, x0, #16, #8
 10c:	ubfx	x0, x0, #8, #8
 110:	stp	x1, x0, [sp, #136]
 114:	mov	x0, x26
 118:	mov	w1, #0x0                   	// #0
 11c:	bl	0 <grub_memset>
 120:	mov	x0, x22
 124:	mov	w22, w23
 128:	mov	w23, w25
 12c:	mov	w25, w20
 130:	mov	x20, x0
 134:	nop
 138:	cbz	w25, 358 <grub_crypto_pbkdf2+0x358>
 13c:	mov	x5, x28
 140:	mov	x4, x27
 144:	mov	x3, x28
 148:	mov	x2, x20
 14c:	mov	x1, x21
 150:	mov	x0, x19
 154:	bl	0 <grub_crypto_hmac_buffer>
 158:	cbnz	w0, 3a0 <grub_crypto_pbkdf2+0x3a0>
 15c:	ldr	w1, [sp, #120]
 160:	cmp	w1, #0x6
 164:	b.ls	3d4 <grub_crypto_pbkdf2+0x3d4>  // b.plast
 168:	ldr	x3, [sp, #192]
 16c:	cmp	w22, #0x1
 170:	ldr	x1, [sp, #256]
 174:	eor	x1, x1, x3
 178:	str	x1, [sp, #256]
 17c:	b.ls	220 <grub_crypto_pbkdf2+0x220>  // b.plast
 180:	ldr	x3, [sp, #200]
 184:	cmp	w22, #0x2
 188:	ldr	x1, [sp, #264]
 18c:	eor	x1, x1, x3
 190:	str	x1, [sp, #264]
 194:	b.eq	220 <grub_crypto_pbkdf2+0x220>  // b.none
 198:	ldr	x3, [sp, #208]
 19c:	cmp	w22, #0x3
 1a0:	ldr	x1, [sp, #272]
 1a4:	eor	x1, x1, x3
 1a8:	str	x1, [sp, #272]
 1ac:	b.eq	220 <grub_crypto_pbkdf2+0x220>  // b.none
 1b0:	ldr	x3, [sp, #216]
 1b4:	cmp	w22, #0x4
 1b8:	ldr	x1, [sp, #280]
 1bc:	eor	x1, x1, x3
 1c0:	str	x1, [sp, #280]
 1c4:	b.eq	220 <grub_crypto_pbkdf2+0x220>  // b.none
 1c8:	ldr	x3, [sp, #224]
 1cc:	cmp	w22, #0x5
 1d0:	ldr	x1, [sp, #288]
 1d4:	eor	x1, x1, x3
 1d8:	str	x1, [sp, #288]
 1dc:	b.eq	220 <grub_crypto_pbkdf2+0x220>  // b.none
 1e0:	ldr	x3, [sp, #232]
 1e4:	cmp	w22, #0x6
 1e8:	ldr	x1, [sp, #296]
 1ec:	eor	x1, x1, x3
 1f0:	str	x1, [sp, #296]
 1f4:	b.eq	220 <grub_crypto_pbkdf2+0x220>  // b.none
 1f8:	ldr	x3, [sp, #240]
 1fc:	cmp	w22, #0x8
 200:	ldr	x1, [sp, #304]
 204:	eor	x1, x1, x3
 208:	str	x1, [sp, #304]
 20c:	b.ne	220 <grub_crypto_pbkdf2+0x220>  // b.any
 210:	ldr	x3, [sp, #248]
 214:	ldr	x1, [sp, #312]
 218:	eor	x1, x1, x3
 21c:	str	x1, [sp, #312]
 220:	cmp	w23, w24
 224:	b.eq	2e4 <grub_crypto_pbkdf2+0x2e4>  // b.none
 228:	mov	w1, w24
 22c:	ldrb	w4, [x26, w1, uxtw]
 230:	add	w3, w1, #0x1
 234:	ldrb	w5, [x28, w1, uxtw]
 238:	cmp	w23, w3
 23c:	eor	w4, w4, w5
 240:	strb	w4, [x26, w1, uxtw]
 244:	b.ls	2e4 <grub_crypto_pbkdf2+0x2e4>  // b.plast
 248:	ldrb	w5, [x26, w3, uxtw]
 24c:	add	w4, w1, #0x2
 250:	ldrb	w9, [x28, w3, uxtw]
 254:	cmp	w23, w4
 258:	eor	w5, w5, w9
 25c:	strb	w5, [x26, w3, uxtw]
 260:	b.ls	2e4 <grub_crypto_pbkdf2+0x2e4>  // b.plast
 264:	ldrb	w5, [x26, w4, uxtw]
 268:	add	w3, w1, #0x3
 26c:	ldrb	w9, [x28, w4, uxtw]
 270:	cmp	w23, w3
 274:	eor	w5, w5, w9
 278:	strb	w5, [x26, w4, uxtw]
 27c:	b.ls	2e4 <grub_crypto_pbkdf2+0x2e4>  // b.plast
 280:	ldrb	w5, [x26, w3, uxtw]
 284:	add	w4, w1, #0x4
 288:	ldrb	w9, [x28, w3, uxtw]
 28c:	cmp	w23, w4
 290:	eor	w5, w5, w9
 294:	strb	w5, [x26, w3, uxtw]
 298:	b.ls	2e4 <grub_crypto_pbkdf2+0x2e4>  // b.plast
 29c:	ldrb	w5, [x26, w4, uxtw]
 2a0:	add	w3, w1, #0x5
 2a4:	ldrb	w9, [x28, w4, uxtw]
 2a8:	cmp	w23, w3
 2ac:	eor	w5, w5, w9
 2b0:	strb	w5, [x26, w4, uxtw]
 2b4:	b.ls	2e4 <grub_crypto_pbkdf2+0x2e4>  // b.plast
 2b8:	ldrb	w4, [x26, w3, uxtw]
 2bc:	add	w1, w1, #0x6
 2c0:	ldrb	w5, [x28, w3, uxtw]
 2c4:	cmp	w23, w1
 2c8:	eor	w4, w4, w5
 2cc:	strb	w4, [x26, w3, uxtw]
 2d0:	b.ls	2e4 <grub_crypto_pbkdf2+0x2e4>  // b.plast
 2d4:	ldrb	w4, [x26, w1, uxtw]
 2d8:	ldrb	w3, [x28, w1, uxtw]
 2dc:	eor	w3, w3, w4
 2e0:	strb	w3, [x26, w1, uxtw]
 2e4:	ldr	w1, [sp, #108]
 2e8:	add	w25, w25, #0x1
 2ec:	cmp	w1, w25
 2f0:	b.hi	138 <grub_crypto_pbkdf2+0x138>  // b.pmore
 2f4:	ldr	w1, [sp, #124]
 2f8:	mov	w3, w0
 2fc:	ldr	w0, [sp, #184]
 300:	mov	w25, w23
 304:	mov	w23, w22
 308:	mov	x22, x20
 30c:	cmp	w0, w1
 310:	ldr	w0, [sp, #180]
 314:	ldr	x1, [sp, #168]
 318:	add	x0, x1, w0, uxtw
 31c:	b.eq	3dc <grub_crypto_pbkdf2+0x3dc>  // b.none
 320:	mov	x1, x26
 324:	mov	x2, x27
 328:	str	w3, [sp, #176]
 32c:	bl	0 <grub_memmove>
 330:	ldp	w3, w0, [sp, #176]
 334:	ldr	w1, [sp, #184]
 338:	add	w0, w0, w25
 33c:	str	w0, [sp, #180]
 340:	ldr	w0, [sp, #124]
 344:	cmp	w1, w0
 348:	add	w0, w0, #0x1
 34c:	b.ls	3a4 <grub_crypto_pbkdf2+0x3a4>  // b.plast
 350:	str	w0, [sp, #124]
 354:	b	f4 <grub_crypto_pbkdf2+0xf4>
 358:	ldr	x0, [sp, #112]
 35c:	mov	x5, x28
 360:	ldr	x3, [sp, #128]
 364:	mov	x2, x20
 368:	ldrb	w1, [sp, #176]
 36c:	ldr	x4, [sp, #152]
 370:	strb	w1, [x3, x0]
 374:	ldr	x0, [sp, #160]
 378:	ldrb	w1, [sp, #136]
 37c:	strb	w1, [x0, #1]
 380:	ldrb	w1, [sp, #144]
 384:	strb	w1, [x0, #2]
 388:	ldrb	w1, [sp, #124]
 38c:	strb	w1, [x0, #3]
 390:	mov	x1, x21
 394:	mov	x0, x19
 398:	bl	0 <grub_crypto_hmac_buffer>
 39c:	cbz	w0, 15c <grub_crypto_pbkdf2+0x15c>
 3a0:	mov	w3, w0
 3a4:	ldr	x0, [sp, #128]
 3a8:	str	w3, [sp, #108]
 3ac:	bl	0 <grub_free>
 3b0:	ldr	w3, [sp, #108]
 3b4:	ldp	x19, x20, [sp, #16]
 3b8:	mov	w0, w3
 3bc:	ldp	x21, x22, [sp, #32]
 3c0:	ldp	x23, x24, [sp, #48]
 3c4:	ldp	x25, x26, [sp, #64]
 3c8:	ldp	x27, x28, [sp, #80]
 3cc:	ldp	x29, x30, [sp], #320
 3d0:	ret
 3d4:	mov	w1, #0x0                   	// #0
 3d8:	b	22c <grub_crypto_pbkdf2+0x22c>
 3dc:	ldr	w2, [sp, #188]
 3e0:	mov	x1, x26
 3e4:	str	w3, [sp, #108]
 3e8:	bl	0 <grub_memmove>
 3ec:	ldr	w3, [sp, #108]
 3f0:	b	3a4 <grub_crypto_pbkdf2+0x3a4>
 3f4:	mov	w3, #0x22                  	// #34
 3f8:	ldp	x25, x26, [sp, #64]
 3fc:	b	50 <grub_crypto_pbkdf2+0x50>
