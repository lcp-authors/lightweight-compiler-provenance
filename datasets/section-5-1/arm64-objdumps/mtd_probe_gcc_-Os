
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mtd_probe_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400960 <_init>:
  400960:	stp	x29, x30, [sp, #-16]!
  400964:	mov	x29, sp
  400968:	bl	400c1c <call_weak_fn>
  40096c:	ldp	x29, x30, [sp], #16
  400970:	ret

Disassembly of section .plt:

0000000000400980 <.plt>:
  400980:	stp	x16, x30, [sp, #-16]!
  400984:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  400988:	ldr	x17, [x16, #3936]
  40098c:	add	x16, x16, #0xf60
  400990:	br	x17
  400994:	nop
  400998:	nop
  40099c:	nop

00000000004009a0 <__libc_start_main@plt>:
  4009a0:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  4009a4:	ldr	x17, [x16, #3944]
  4009a8:	add	x16, x16, #0xf68
  4009ac:	br	x17

00000000004009b0 <lseek64@plt>:
  4009b0:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  4009b4:	ldr	x17, [x16, #3952]
  4009b8:	add	x16, x16, #0xf70
  4009bc:	br	x17

00000000004009c0 <__gmon_start__@plt>:
  4009c0:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  4009c4:	ldr	x17, [x16, #3960]
  4009c8:	add	x16, x16, #0xf78
  4009cc:	br	x17

00000000004009d0 <safe_close@plt>:
  4009d0:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  4009d4:	ldr	x17, [x16, #3968]
  4009d8:	add	x16, x16, #0xf80
  4009dc:	br	x17

00000000004009e0 <abort@plt>:
  4009e0:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  4009e4:	ldr	x17, [x16, #3976]
  4009e8:	add	x16, x16, #0xf88
  4009ec:	br	x17

00000000004009f0 <__errno_location@plt>:
  4009f0:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  4009f4:	ldr	x17, [x16, #3984]
  4009f8:	add	x16, x16, #0xf90
  4009fc:	br	x17

0000000000400a00 <read@plt>:
  400a00:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  400a04:	ldr	x17, [x16, #3992]
  400a08:	add	x16, x16, #0xf98
  400a0c:	br	x17

0000000000400a10 <__stack_chk_fail@plt>:
  400a10:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  400a14:	ldr	x17, [x16, #4000]
  400a18:	add	x16, x16, #0xfa0
  400a1c:	br	x17

0000000000400a20 <memcmp@plt>:
  400a20:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  400a24:	ldr	x17, [x16, #4008]
  400a28:	add	x16, x16, #0xfa8
  400a2c:	br	x17

0000000000400a30 <malloc@plt>:
  400a30:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  400a34:	ldr	x17, [x16, #4016]
  400a38:	add	x16, x16, #0xfb0
  400a3c:	br	x17

0000000000400a40 <log_internal_realm@plt>:
  400a40:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  400a44:	ldr	x17, [x16, #4024]
  400a48:	add	x16, x16, #0xfb8
  400a4c:	br	x17

0000000000400a50 <ioctl@plt>:
  400a50:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  400a54:	ldr	x17, [x16, #4032]
  400a58:	add	x16, x16, #0xfc0
  400a5c:	br	x17

0000000000400a60 <free@plt>:
  400a60:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  400a64:	ldr	x17, [x16, #4040]
  400a68:	add	x16, x16, #0xfc8
  400a6c:	br	x17

0000000000400a70 <puts@plt>:
  400a70:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  400a74:	ldr	x17, [x16, #4048]
  400a78:	add	x16, x16, #0xfd0
  400a7c:	br	x17

0000000000400a80 <open64@plt>:
  400a80:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  400a84:	ldr	x17, [x16, #4056]
  400a88:	add	x16, x16, #0xfd8
  400a8c:	br	x17

0000000000400a90 <log_oom_internal@plt>:
  400a90:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  400a94:	ldr	x17, [x16, #4064]
  400a98:	add	x16, x16, #0xfe0
  400a9c:	br	x17

0000000000400aa0 <log_get_max_level_realm@plt>:
  400aa0:	adrp	x16, 411000 <__FRAME_END__+0xfd88>
  400aa4:	ldr	x17, [x16, #4072]
  400aa8:	add	x16, x16, #0xfe8
  400aac:	br	x17

Disassembly of section .text:

0000000000400ab0 <main>:
  400ab0:	stp	x29, x30, [sp, #-96]!
  400ab4:	mov	x2, x1
  400ab8:	cmp	w0, #0x2
  400abc:	mov	x29, sp
  400ac0:	str	x21, [sp, #32]
  400ac4:	adrp	x21, 411000 <__FRAME_END__+0xfd88>
  400ac8:	add	x21, x21, #0xd18
  400acc:	stp	x19, x20, [sp, #16]
  400ad0:	ldr	x1, [x21]
  400ad4:	str	x1, [sp, #88]
  400ad8:	mov	x1, #0x0                   	// #0
  400adc:	b.eq	400af8 <main+0x48>  // b.none
  400ae0:	mov	w20, #0xffffffff            	// #-1
  400ae4:	adrp	x0, 400000 <_init-0x960>
  400ae8:	add	x0, x0, #0xfc0
  400aec:	bl	400a70 <puts@plt>
  400af0:	mov	w19, #0x1                   	// #1
  400af4:	b	400b9c <main+0xec>
  400af8:	ldr	x0, [x2, #8]
  400afc:	mov	w1, #0x80000               	// #524288
  400b00:	bl	400a80 <open64@plt>
  400b04:	mov	w20, w0
  400b08:	tbz	w0, #31, 400b4c <main+0x9c>
  400b0c:	mov	w0, #0x1                   	// #1
  400b10:	bl	400aa0 <log_get_max_level_realm@plt>
  400b14:	cmp	w0, #0x2
  400b18:	b.le	400af0 <main+0x40>
  400b1c:	bl	4009f0 <__errno_location@plt>
  400b20:	adrp	x5, 400000 <_init-0x960>
  400b24:	adrp	x4, 401000 <_fini+0x64>
  400b28:	add	x5, x5, #0xfdd
  400b2c:	add	x4, x4, #0x37
  400b30:	mov	w3, #0x2e                  	// #46
  400b34:	ldr	w1, [x0]
  400b38:	adrp	x2, 400000 <_init-0x960>
  400b3c:	mov	w0, #0x403                 	// #1027
  400b40:	add	x2, x2, #0xff3
  400b44:	bl	400a40 <log_internal_realm@plt>
  400b48:	b	400af0 <main+0x40>
  400b4c:	mov	x1, #0x4d01                	// #19713
  400b50:	add	x2, sp, #0x38
  400b54:	movk	x1, #0x8020, lsl #16
  400b58:	bl	400a50 <ioctl@plt>
  400b5c:	tbz	w0, #31, 400b8c <main+0xdc>
  400b60:	mov	w0, #0x1                   	// #1
  400b64:	bl	400aa0 <log_get_max_level_realm@plt>
  400b68:	cmp	w0, #0x2
  400b6c:	b.le	400af0 <main+0x40>
  400b70:	bl	4009f0 <__errno_location@plt>
  400b74:	adrp	x5, 401000 <_fini+0x64>
  400b78:	adrp	x4, 401000 <_fini+0x64>
  400b7c:	add	x5, x5, #0x12
  400b80:	add	x4, x4, #0x37
  400b84:	mov	w3, #0x33                  	// #51
  400b88:	b	400b34 <main+0x84>
  400b8c:	add	x1, sp, #0x38
  400b90:	mov	w0, w20
  400b94:	bl	400cf8 <probe_smart_media>
  400b98:	lsr	w19, w0, #31
  400b9c:	mov	w0, w20
  400ba0:	bl	4009d0 <safe_close@plt>
  400ba4:	ldr	x1, [sp, #88]
  400ba8:	ldr	x0, [x21]
  400bac:	eor	x0, x1, x0
  400bb0:	cbz	x0, 400bb8 <main+0x108>
  400bb4:	bl	400a10 <__stack_chk_fail@plt>
  400bb8:	mov	w0, w19
  400bbc:	ldp	x19, x20, [sp, #16]
  400bc0:	ldr	x21, [sp, #32]
  400bc4:	ldp	x29, x30, [sp], #96
  400bc8:	ret

0000000000400bcc <_start>:
  400bcc:	mov	x29, #0x0                   	// #0
  400bd0:	mov	x30, #0x0                   	// #0
  400bd4:	mov	x5, x0
  400bd8:	ldr	x1, [sp]
  400bdc:	add	x2, sp, #0x8
  400be0:	mov	x6, sp
  400be4:	movz	x0, #0x0, lsl #48
  400be8:	movk	x0, #0x0, lsl #32
  400bec:	movk	x0, #0x40, lsl #16
  400bf0:	movk	x0, #0xab0
  400bf4:	movz	x3, #0x0, lsl #48
  400bf8:	movk	x3, #0x0, lsl #32
  400bfc:	movk	x3, #0x40, lsl #16
  400c00:	movk	x3, #0xf18
  400c04:	movz	x4, #0x0, lsl #48
  400c08:	movk	x4, #0x0, lsl #32
  400c0c:	movk	x4, #0x40, lsl #16
  400c10:	movk	x4, #0xf98
  400c14:	bl	4009a0 <__libc_start_main@plt>
  400c18:	bl	4009e0 <abort@plt>

0000000000400c1c <call_weak_fn>:
  400c1c:	adrp	x0, 411000 <__FRAME_END__+0xfd88>
  400c20:	ldr	x0, [x0, #4088]
  400c24:	cbz	x0, 400c2c <call_weak_fn+0x10>
  400c28:	b	4009c0 <__gmon_start__@plt>
  400c2c:	ret

0000000000400c30 <deregister_tm_clones>:
  400c30:	adrp	x0, 412000 <__TMC_END__>
  400c34:	add	x1, x0, #0x0
  400c38:	adrp	x0, 412000 <__TMC_END__>
  400c3c:	add	x0, x0, #0x0
  400c40:	cmp	x1, x0
  400c44:	b.eq	400c70 <deregister_tm_clones+0x40>  // b.none
  400c48:	sub	sp, sp, #0x10
  400c4c:	adrp	x1, 400000 <_init-0x960>
  400c50:	ldr	x1, [x1, #4016]
  400c54:	str	x1, [sp, #8]
  400c58:	cbz	x1, 400c68 <deregister_tm_clones+0x38>
  400c5c:	mov	x16, x1
  400c60:	add	sp, sp, #0x10
  400c64:	br	x16
  400c68:	add	sp, sp, #0x10
  400c6c:	ret
  400c70:	ret

0000000000400c74 <register_tm_clones>:
  400c74:	adrp	x0, 412000 <__TMC_END__>
  400c78:	add	x1, x0, #0x0
  400c7c:	adrp	x0, 412000 <__TMC_END__>
  400c80:	add	x0, x0, #0x0
  400c84:	sub	x1, x1, x0
  400c88:	mov	x2, #0x2                   	// #2
  400c8c:	asr	x1, x1, #3
  400c90:	sdiv	x1, x1, x2
  400c94:	cbz	x1, 400cc0 <register_tm_clones+0x4c>
  400c98:	sub	sp, sp, #0x10
  400c9c:	adrp	x2, 400000 <_init-0x960>
  400ca0:	ldr	x2, [x2, #4024]
  400ca4:	str	x2, [sp, #8]
  400ca8:	cbz	x2, 400cb8 <register_tm_clones+0x44>
  400cac:	mov	x16, x2
  400cb0:	add	sp, sp, #0x10
  400cb4:	br	x16
  400cb8:	add	sp, sp, #0x10
  400cbc:	ret
  400cc0:	ret

0000000000400cc4 <__do_global_dtors_aux>:
  400cc4:	stp	x29, x30, [sp, #-32]!
  400cc8:	mov	x29, sp
  400ccc:	str	x19, [sp, #16]
  400cd0:	adrp	x19, 412000 <__TMC_END__>
  400cd4:	ldrb	w0, [x19]
  400cd8:	cbnz	w0, 400ce8 <__do_global_dtors_aux+0x24>
  400cdc:	bl	400c30 <deregister_tm_clones>
  400ce0:	mov	w0, #0x1                   	// #1
  400ce4:	strb	w0, [x19]
  400ce8:	ldr	x19, [sp, #16]
  400cec:	ldp	x29, x30, [sp], #32
  400cf0:	ret

0000000000400cf4 <frame_dummy>:
  400cf4:	b	400c74 <register_tm_clones>

0000000000400cf8 <probe_smart_media>:
  400cf8:	stp	x29, x30, [sp, #-64]!
  400cfc:	mov	x29, sp
  400d00:	stp	x19, x20, [sp, #16]
  400d04:	mov	x19, x1
  400d08:	stp	x21, x22, [sp, #32]
  400d0c:	mov	w21, w0
  400d10:	mov	x0, #0x200                 	// #512
  400d14:	str	x23, [sp, #48]
  400d18:	bl	400a30 <malloc@plt>
  400d1c:	mov	x20, x0
  400d20:	cbnz	x0, 400d48 <probe_smart_media+0x50>
  400d24:	adrp	x3, 401000 <_fini+0x64>
  400d28:	adrp	x1, 401000 <_fini+0x64>
  400d2c:	add	x3, x3, #0xd6
  400d30:	add	x1, x1, #0x3f
  400d34:	mov	w2, #0x32                  	// #50
  400d38:	mov	w0, #0x1                   	// #1
  400d3c:	bl	400a90 <log_oom_internal@plt>
  400d40:	mov	w19, w0
  400d44:	b	400d68 <probe_smart_media+0x70>
  400d48:	ldrb	w0, [x19]
  400d4c:	cmp	w0, #0x4
  400d50:	b.eq	400db8 <probe_smart_media+0xc0>  // b.none
  400d54:	mov	w0, #0x1                   	// #1
  400d58:	bl	400aa0 <log_get_max_level_realm@plt>
  400d5c:	cmp	w0, #0x6
  400d60:	b.gt	400d88 <probe_smart_media+0x90>
  400d64:	mov	w19, #0xffffffea            	// #-22
  400d68:	mov	x0, x20
  400d6c:	bl	400a60 <free@plt>
  400d70:	mov	w0, w19
  400d74:	ldp	x19, x20, [sp, #16]
  400d78:	ldp	x21, x22, [sp, #32]
  400d7c:	ldr	x23, [sp, #48]
  400d80:	ldp	x29, x30, [sp], #64
  400d84:	ret
  400d88:	adrp	x5, 401000 <_fini+0x64>
  400d8c:	adrp	x4, 401000 <_fini+0x64>
  400d90:	add	x5, x5, #0x65
  400d94:	add	x4, x4, #0xd6
  400d98:	mov	w3, #0x35                  	// #53
  400d9c:	mov	w1, #0x16                  	// #22
  400da0:	adrp	x2, 401000 <_fini+0x64>
  400da4:	movk	w1, #0x4000, lsl #16
  400da8:	add	x2, x2, #0x3f
  400dac:	mov	w0, #0x407                 	// #1031
  400db0:	bl	400a40 <log_internal_realm@plt>
  400db4:	b	400d40 <probe_smart_media+0x48>
  400db8:	ldr	w23, [x19, #16]
  400dbc:	cmp	w23, #0x100
  400dc0:	b.eq	400dcc <probe_smart_media+0xd4>  // b.none
  400dc4:	cmp	w23, #0x200
  400dc8:	b.ne	400e38 <probe_smart_media+0x140>  // b.any
  400dcc:	ldr	w1, [x19, #8]
  400dd0:	lsr	w1, w1, #20
  400dd4:	cmp	w1, #0x2
  400dd8:	b.hi	400e28 <probe_smart_media+0x130>  // b.pmore
  400ddc:	cmp	w1, #0x0
  400de0:	mov	w2, #0x6                   	// #6
  400de4:	mov	w0, #0x18                  	// #24
  400de8:	ldr	w19, [x19, #12]
  400dec:	csel	w2, w2, w0, ne  // ne = any
  400df0:	mov	w22, #0x0                   	// #0
  400df4:	mul	w19, w2, w19
  400df8:	cmp	w19, w22
  400dfc:	b.gt	400e7c <probe_smart_media+0x184>
  400e00:	mov	w0, #0x1                   	// #1
  400e04:	bl	400aa0 <log_get_max_level_realm@plt>
  400e08:	cmp	w0, #0x6
  400e0c:	b.le	400d64 <probe_smart_media+0x6c>
  400e10:	adrp	x5, 401000 <_fini+0x64>
  400e14:	adrp	x4, 401000 <_fini+0x64>
  400e18:	add	x5, x5, #0x9a
  400e1c:	add	x4, x4, #0xd6
  400e20:	mov	w3, #0x57                  	// #87
  400e24:	b	400d9c <probe_smart_media+0xa4>
  400e28:	cmp	w1, #0x4
  400e2c:	mov	w2, #0x18                  	// #24
  400e30:	mov	w0, #0xc                   	// #12
  400e34:	b	400de8 <probe_smart_media+0xf0>
  400e38:	mov	w0, #0x1                   	// #1
  400e3c:	bl	400aa0 <log_get_max_level_realm@plt>
  400e40:	cmp	w0, #0x6
  400e44:	b.le	400d64 <probe_smart_media+0x6c>
  400e48:	mov	w1, #0x16                  	// #22
  400e4c:	mov	w6, w23
  400e50:	adrp	x5, 401000 <_fini+0x64>
  400e54:	adrp	x4, 401000 <_fini+0x64>
  400e58:	add	x5, x5, #0x7f
  400e5c:	add	x4, x4, #0xd6
  400e60:	mov	w3, #0x3d                  	// #61
  400e64:	adrp	x2, 401000 <_fini+0x64>
  400e68:	movk	w1, #0x4000, lsl #16
  400e6c:	add	x2, x2, #0x3f
  400e70:	mov	w0, #0x407                 	// #1031
  400e74:	bl	400a40 <log_internal_realm@plt>
  400e78:	b	400d40 <probe_smart_media+0x48>
  400e7c:	mov	w2, w22
  400e80:	mov	x1, #0x0                   	// #0
  400e84:	mov	w0, w21
  400e88:	bl	4009b0 <lseek64@plt>
  400e8c:	mov	x1, x20
  400e90:	mov	w0, w21
  400e94:	mov	x2, #0x200                 	// #512
  400e98:	bl	400a00 <read@plt>
  400e9c:	cmp	x0, #0x200
  400ea0:	b.eq	400ee8 <probe_smart_media+0x1f0>  // b.none
  400ea4:	add	w22, w22, w23
  400ea8:	b	400df8 <probe_smart_media+0x100>
  400eac:	mov	x1, x19
  400eb0:	add	x0, x20, #0x100
  400eb4:	mov	x2, #0xa                   	// #10
  400eb8:	bl	400a20 <memcmp@plt>
  400ebc:	cbz	w0, 400f04 <probe_smart_media+0x20c>
  400ec0:	mov	w0, #0x1                   	// #1
  400ec4:	bl	400aa0 <log_get_max_level_realm@plt>
  400ec8:	cmp	w0, #0x6
  400ecc:	b.le	400d64 <probe_smart_media+0x6c>
  400ed0:	adrp	x5, 401000 <_fini+0x64>
  400ed4:	adrp	x4, 401000 <_fini+0x64>
  400ed8:	add	x5, x5, #0xa8
  400edc:	add	x4, x4, #0xd6
  400ee0:	mov	w3, #0x5c                  	// #92
  400ee4:	b	400d9c <probe_smart_media+0xa4>
  400ee8:	adrp	x19, 401000 <_fini+0x64>
  400eec:	add	x19, x19, #0xe8
  400ef0:	mov	x1, x19
  400ef4:	mov	x0, x20
  400ef8:	mov	x2, #0xa                   	// #10
  400efc:	bl	400a20 <memcmp@plt>
  400f00:	cbnz	w0, 400eac <probe_smart_media+0x1b4>
  400f04:	adrp	x0, 401000 <_fini+0x64>
  400f08:	mov	w19, #0x0                   	// #0
  400f0c:	add	x0, x0, #0xc3
  400f10:	bl	400a70 <puts@plt>
  400f14:	b	400d68 <probe_smart_media+0x70>

0000000000400f18 <__libc_csu_init>:
  400f18:	stp	x29, x30, [sp, #-64]!
  400f1c:	mov	x29, sp
  400f20:	stp	x19, x20, [sp, #16]
  400f24:	adrp	x20, 411000 <__FRAME_END__+0xfd88>
  400f28:	add	x20, x20, #0xd10
  400f2c:	stp	x21, x22, [sp, #32]
  400f30:	adrp	x21, 411000 <__FRAME_END__+0xfd88>
  400f34:	add	x21, x21, #0xd08
  400f38:	sub	x20, x20, x21
  400f3c:	mov	w22, w0
  400f40:	stp	x23, x24, [sp, #48]
  400f44:	mov	x23, x1
  400f48:	mov	x24, x2
  400f4c:	bl	400960 <_init>
  400f50:	cmp	xzr, x20, asr #3
  400f54:	b.eq	400f80 <__libc_csu_init+0x68>  // b.none
  400f58:	asr	x20, x20, #3
  400f5c:	mov	x19, #0x0                   	// #0
  400f60:	ldr	x3, [x21, x19, lsl #3]
  400f64:	mov	x2, x24
  400f68:	add	x19, x19, #0x1
  400f6c:	mov	x1, x23
  400f70:	mov	w0, w22
  400f74:	blr	x3
  400f78:	cmp	x20, x19
  400f7c:	b.ne	400f60 <__libc_csu_init+0x48>  // b.any
  400f80:	ldp	x19, x20, [sp, #16]
  400f84:	ldp	x21, x22, [sp, #32]
  400f88:	ldp	x23, x24, [sp, #48]
  400f8c:	ldp	x29, x30, [sp], #64
  400f90:	ret
  400f94:	nop

0000000000400f98 <__libc_csu_fini>:
  400f98:	ret

Disassembly of section .fini:

0000000000400f9c <_fini>:
  400f9c:	stp	x29, x30, [sp, #-16]!
  400fa0:	mov	x29, sp
  400fa4:	ldp	x29, x30, [sp], #16
  400fa8:	ret
