
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//reiserfs.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_reiserfs_get_key_v1_type>:
       0:	ldr	w0, [x0, #12]
       4:	cmp	w0, #0x22b
       8:	b.eq	58 <grub_reiserfs_get_key_v1_type+0x58>  // b.none
       c:	b.hi	24 <grub_reiserfs_get_key_v1_type+0x24>  // b.pmore
      10:	cbz	w0, 20 <grub_reiserfs_get_key_v1_type+0x20>
      14:	cmp	w0, #0x1f4
      18:	mov	w0, #0x5                   	// #5
      1c:	csinc	w0, w0, wzr, ne  // ne = any
      20:	ret
      24:	cmn	w0, #0x2
      28:	b.eq	68 <grub_reiserfs_get_key_v1_type+0x68>  // b.none
      2c:	cmn	w0, #0x1
      30:	b.eq	60 <grub_reiserfs_get_key_v1_type+0x60>  // b.none
      34:	mov	w1, #0x10000000            	// #268435456
      38:	cmp	w0, w1
      3c:	b.eq	68 <grub_reiserfs_get_key_v1_type+0x68>  // b.none
      40:	mov	w1, #0x20000000            	// #536870912
      44:	cmp	w0, w1
      48:	mov	w0, #0x5                   	// #5
      4c:	mov	w1, #0x2                   	// #2
      50:	csel	w0, w0, w1, ne  // ne = any
      54:	b	20 <grub_reiserfs_get_key_v1_type+0x20>
      58:	mov	w0, #0x4                   	// #4
      5c:	b	20 <grub_reiserfs_get_key_v1_type+0x20>
      60:	mov	w0, #0x2                   	// #2
      64:	b	20 <grub_reiserfs_get_key_v1_type+0x20>
      68:	mov	w0, #0x3                   	// #3
      6c:	b	20 <grub_reiserfs_get_key_v1_type+0x20>

0000000000000070 <grub_reiserfs_get_key_type>:
      70:	mov	x2, x0
      74:	stp	x29, x30, [sp, #-16]!
      78:	mov	x29, sp
      7c:	bl	0 <grub_reiserfs_get_key_v1_type>
      80:	cmp	w0, #0x5
      84:	b.ne	9c <grub_reiserfs_get_key_type+0x2c>  // b.any
      88:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
      8c:	ldr	x1, [x0]
      90:	ldr	x0, [x2, #8]
      94:	lsr	x0, x0, #60
      98:	ldrb	w0, [x1, x0]
      9c:	ldp	x29, x30, [sp], #16
      a0:	ret
      a4:	nop
	...

00000000000000b0 <grub_reiserfs_close>:
      b0:	stp	x29, x30, [sp, #-32]!
      b4:	mov	x29, sp
      b8:	str	x19, [sp, #16]
      bc:	ldr	x19, [x0, #80]
      c0:	ldr	x0, [x19]
      c4:	bl	0 <grub_free>
      c8:	mov	x0, x19
      cc:	bl	0 <grub_free>
      d0:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
      d4:	ldr	x0, [x0]
      d8:	ldr	x0, [x0]
      dc:	bl	0 <grub_dl_unref>
      e0:	mov	w0, #0x0                   	// #0
      e4:	ldr	x19, [sp, #16]
      e8:	ldp	x29, x30, [sp], #32
      ec:	ret
	...

00000000000000f8 <grub_reiserfs_mount>:
      f8:	stp	x29, x30, [sp, #-48]!
      fc:	mov	x29, sp
     100:	stp	x19, x20, [sp, #16]
     104:	mov	x20, x0
     108:	mov	x0, #0x80                  	// #128
     10c:	str	x21, [sp, #32]
     110:	bl	0 <grub_malloc>
     114:	mov	x19, x0
     118:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     11c:	ldr	x21, [x0]
     120:	cbz	x19, 16c <grub_reiserfs_mount+0x74>
     124:	mov	x4, x19
     128:	mov	x0, x20
     12c:	mov	x3, #0x74                  	// #116
     130:	mov	x2, #0x0                   	// #0
     134:	mov	x1, #0x80                  	// #128
     138:	bl	0 <grub_disk_read>
     13c:	ldr	w0, [x21]
     140:	cbnz	w0, 16c <grub_reiserfs_mount+0x74>
     144:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     148:	mov	x2, #0x6                   	// #6
     14c:	ldr	x1, [x0]
     150:	add	x0, x19, #0x34
     154:	bl	0 <grub_memcmp>
     158:	cbz	w0, 198 <grub_reiserfs_mount+0xa0>
     15c:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     160:	ldr	x1, [x0]
     164:	mov	w0, #0x9                   	// #9
     168:	bl	0 <grub_error>
     16c:	ldr	w0, [x21]
     170:	cmp	w0, #0xb
     174:	b.ne	188 <grub_reiserfs_mount+0x90>  // b.any
     178:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     17c:	ldr	x1, [x0]
     180:	mov	w0, #0x9                   	// #9
     184:	bl	0 <grub_error>
     188:	mov	x0, x19
     18c:	mov	x19, #0x0                   	// #0
     190:	bl	0 <grub_free>
     194:	b	19c <grub_reiserfs_mount+0xa4>
     198:	str	x20, [x19, #120]
     19c:	mov	x0, x19
     1a0:	ldp	x19, x20, [sp, #16]
     1a4:	ldr	x21, [sp, #32]
     1a8:	ldp	x29, x30, [sp], #48
     1ac:	ret
	...

00000000000001c8 <grub_reiserfs_uuid>:
     1c8:	sub	sp, sp, #0x40
     1cc:	stp	x29, x30, [sp, #16]
     1d0:	add	x29, sp, #0x10
     1d4:	stp	x19, x20, [sp, #32]
     1d8:	mov	x20, x1
     1dc:	ldr	x19, [x0]
     1e0:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     1e4:	str	x21, [sp, #48]
     1e8:	ldr	x21, [x0]
     1ec:	ldr	x0, [x21]
     1f0:	bl	0 <grub_dl_ref>
     1f4:	str	xzr, [x20]
     1f8:	mov	x0, x19
     1fc:	bl	f8 <grub_reiserfs_mount>
     200:	mov	x19, x0
     204:	cbz	x0, 224 <grub_reiserfs_uuid+0x5c>
     208:	add	x0, x0, #0x54
     20c:	add	x1, x19, #0x64
     210:	ldrh	w2, [x0]
     214:	cbnz	w2, 254 <grub_reiserfs_uuid+0x8c>
     218:	add	x0, x0, #0x2
     21c:	cmp	x0, x1
     220:	b.ne	210 <grub_reiserfs_uuid+0x48>  // b.any
     224:	ldr	x0, [x21]
     228:	bl	0 <grub_dl_unref>
     22c:	mov	x0, x19
     230:	bl	0 <grub_free>
     234:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     238:	ldp	x29, x30, [sp, #16]
     23c:	ldr	x0, [x0]
     240:	ldp	x19, x20, [sp, #32]
     244:	ldr	w0, [x0]
     248:	ldr	x21, [sp, #48]
     24c:	add	sp, sp, #0x40
     250:	ret
     254:	ldrb	w8, [x19, #97]
     258:	ldrh	w7, [x19, #96]
     25c:	ldrh	w6, [x19, #94]
     260:	ldrh	w5, [x19, #92]
     264:	orr	w7, w8, w7, lsl #8
     268:	ldrb	w8, [x19, #95]
     26c:	ldrh	w4, [x19, #90]
     270:	and	w7, w7, #0xffff
     274:	ldrh	w3, [x19, #88]
     278:	orr	w6, w8, w6, lsl #8
     27c:	ldrb	w8, [x19, #93]
     280:	ldrh	w2, [x19, #86]
     284:	and	w6, w6, #0xffff
     288:	ldrh	w1, [x19, #84]
     28c:	orr	w5, w8, w5, lsl #8
     290:	ldrb	w8, [x19, #91]
     294:	ldrh	w0, [x19, #98]
     298:	and	w5, w5, #0xffff
     29c:	orr	w4, w8, w4, lsl #8
     2a0:	ldrb	w8, [x19, #89]
     2a4:	and	w4, w4, #0xffff
     2a8:	orr	w3, w8, w3, lsl #8
     2ac:	ldrb	w8, [x19, #87]
     2b0:	and	w3, w3, #0xffff
     2b4:	orr	w2, w8, w2, lsl #8
     2b8:	ldrb	w8, [x19, #85]
     2bc:	and	w2, w2, #0xffff
     2c0:	orr	w1, w8, w1, lsl #8
     2c4:	ldrb	w8, [x19, #99]
     2c8:	and	w1, w1, #0xffff
     2cc:	orr	w0, w8, w0, lsl #8
     2d0:	and	w0, w0, #0xffff
     2d4:	str	w0, [sp]
     2d8:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     2dc:	ldr	x0, [x0]
     2e0:	bl	0 <grub_xasprintf>
     2e4:	str	x0, [x20]
     2e8:	b	224 <grub_reiserfs_uuid+0x5c>
     2ec:	nop
	...

0000000000000308 <grub_reiserfs_label>:
     308:	stp	x29, x30, [sp, #-48]!
     30c:	mov	x29, sp
     310:	stp	x19, x20, [sp, #16]
     314:	mov	x20, x1
     318:	ldr	x19, [x0]
     31c:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     320:	str	x21, [sp, #32]
     324:	ldr	x21, [x0]
     328:	ldr	x0, [x21]
     32c:	bl	0 <grub_dl_ref>
     330:	mov	x0, x19
     334:	bl	f8 <grub_reiserfs_mount>
     338:	mov	x19, x0
     33c:	cbz	x0, 37c <grub_reiserfs_label+0x74>
     340:	add	x0, x0, #0x64
     344:	mov	x1, #0x10                  	// #16
     348:	bl	0 <grub_strndup>
     34c:	str	x0, [x20]
     350:	ldr	x0, [x21]
     354:	bl	0 <grub_dl_unref>
     358:	mov	x0, x19
     35c:	bl	0 <grub_free>
     360:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     364:	ldp	x19, x20, [sp, #16]
     368:	ldr	x0, [x0]
     36c:	ldr	x21, [sp, #32]
     370:	ldr	w0, [x0]
     374:	ldp	x29, x30, [sp], #48
     378:	ret
     37c:	str	xzr, [x20]
     380:	b	350 <grub_reiserfs_label+0x48>
     384:	nop
	...

0000000000000398 <grub_reiserfs_dir_iter>:
     398:	stp	x29, x30, [sp, #-64]!
     39c:	mov	x29, sp
     3a0:	stp	x19, x20, [sp, #16]
     3a4:	mov	w19, w1
     3a8:	mov	x20, x3
     3ac:	and	w19, w19, #0xff
     3b0:	mov	w1, #0x0                   	// #0
     3b4:	stp	x21, x22, [sp, #32]
     3b8:	mov	x21, x2
     3bc:	mov	x22, x0
     3c0:	mov	x2, #0x10                  	// #16
     3c4:	add	x0, sp, #0x30
     3c8:	bl	0 <grub_memset>
     3cc:	cmp	w19, #0x2
     3d0:	ldrb	w0, [sp, #48]
     3d4:	cset	w1, eq  // eq = none
     3d8:	and	w0, w0, #0xfffffffc
     3dc:	orr	w1, w1, #0x2
     3e0:	orr	w1, w1, w0
     3e4:	ldr	w0, [x21, #24]
     3e8:	strb	w1, [sp, #48]
     3ec:	str	w0, [sp, #52]
     3f0:	mov	x0, x21
     3f4:	bl	0 <grub_free>
     3f8:	ldp	x3, x2, [x20]
     3fc:	add	x1, sp, #0x30
     400:	mov	x0, x22
     404:	blr	x3
     408:	ldp	x19, x20, [sp, #16]
     40c:	ldp	x21, x22, [sp, #32]
     410:	ldp	x29, x30, [sp], #64
     414:	ret

0000000000000418 <real_assert.constprop.0>:
     418:	mov	w2, w1
     41c:	cbnz	w0, 434 <real_assert.constprop.0+0x1c>
     420:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     424:	ldr	x1, [x0]
     428:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     42c:	ldr	x0, [x0]
     430:	b	0 <grub_printf>
     434:	ret
	...

0000000000000448 <grub_reiserfs_set_key_type.constprop.0>:
     448:	stp	x29, x30, [sp, #-16]!
     44c:	mov	w3, w1
     450:	sub	w1, w1, #0x1
     454:	mov	x29, sp
     458:	cmp	w1, #0x3
     45c:	b.hi	4bc <grub_reiserfs_set_key_type.constprop.0+0x74>  // b.pmore
     460:	adrp	x2, 0 <grub_reiserfs_get_key_v1_type>
     464:	ldr	x2, [x2]
     468:	ldrb	w1, [x2, w1, uxtw]
     46c:	adr	x2, 478 <grub_reiserfs_set_key_type.constprop.0+0x30>
     470:	add	x1, x2, w1, sxtb #2
     474:	br	x1
     478:	mov	w2, #0xf                   	// #15
     47c:	ldr	x1, [x0, #8]
     480:	and	x1, x1, #0xfffffffffffffff
     484:	orr	x2, x1, x2, lsl #60
     488:	str	x2, [x0, #8]
     48c:	bl	70 <grub_reiserfs_get_key_type>
     490:	cmp	w3, w0
     494:	ldp	x29, x30, [sp], #16
     498:	cset	w0, eq  // eq = none
     49c:	mov	w1, #0x1a2                 	// #418
     4a0:	b	418 <real_assert.constprop.0>
     4a4:	mov	w2, #0x3                   	// #3
     4a8:	b	47c <grub_reiserfs_set_key_type.constprop.0+0x34>
     4ac:	mov	w2, w3
     4b0:	b	47c <grub_reiserfs_set_key_type.constprop.0+0x34>
     4b4:	mov	w2, #0x1                   	// #1
     4b8:	b	47c <grub_reiserfs_set_key_type.constprop.0+0x34>
     4bc:	mov	w2, #0x0                   	// #0
     4c0:	b	47c <grub_reiserfs_set_key_type.constprop.0+0x34>
     4c4:	nop
	...

00000000000004d0 <grub_reiserfs_get_key_offset>:
     4d0:	mov	x2, x0
     4d4:	stp	x29, x30, [sp, #-16]!
     4d8:	mov	x29, sp
     4dc:	bl	0 <grub_reiserfs_get_key_v1_type>
     4e0:	cmp	w0, #0x5
     4e4:	b.ne	4f8 <grub_reiserfs_get_key_offset+0x28>  // b.any
     4e8:	ldr	x0, [x2, #8]
     4ec:	and	x0, x0, #0xfffffffffffffff
     4f0:	ldp	x29, x30, [sp], #16
     4f4:	ret
     4f8:	ldr	w0, [x2, #8]
     4fc:	b	4f0 <grub_reiserfs_get_key_offset+0x20>

0000000000000500 <grub_reiserfs_compare_keys>:
     500:	ldr	w2, [x0]
     504:	mov	x4, x1
     508:	ldr	w1, [x1]
     50c:	cmp	w2, w1
     510:	b.cc	5b0 <grub_reiserfs_compare_keys+0xb0>  // b.lo, b.ul, b.last
     514:	b.hi	5b8 <grub_reiserfs_compare_keys+0xb8>  // b.pmore
     518:	ldr	w2, [x0, #4]
     51c:	mov	x3, x0
     520:	ldr	w1, [x4, #4]
     524:	cmp	w2, w1
     528:	b.cc	5b0 <grub_reiserfs_compare_keys+0xb0>  // b.lo, b.ul, b.last
     52c:	b.hi	5b8 <grub_reiserfs_compare_keys+0xb8>  // b.pmore
     530:	stp	x29, x30, [sp, #-16]!
     534:	mov	x29, sp
     538:	bl	4d0 <grub_reiserfs_get_key_offset>
     53c:	mov	x5, x0
     540:	mov	x0, x4
     544:	bl	4d0 <grub_reiserfs_get_key_offset>
     548:	cmp	x5, x0
     54c:	b.cc	5c8 <grub_reiserfs_compare_keys+0xc8>  // b.lo, b.ul, b.last
     550:	b.hi	5c0 <grub_reiserfs_compare_keys+0xc0>  // b.pmore
     554:	mov	x0, x3
     558:	bl	70 <grub_reiserfs_get_key_type>
     55c:	mov	w3, w0
     560:	mov	x0, x4
     564:	bl	70 <grub_reiserfs_get_key_type>
     568:	cmp	w3, #0x4
     56c:	b.ne	584 <grub_reiserfs_compare_keys+0x84>  // b.any
     570:	sub	w1, w0, #0x2
     574:	cmp	w1, #0x1
     578:	b.hi	5d0 <grub_reiserfs_compare_keys+0xd0>  // b.pmore
     57c:	mov	w0, #0x0                   	// #0
     580:	b	5a8 <grub_reiserfs_compare_keys+0xa8>
     584:	cmp	w0, #0x4
     588:	b.ne	598 <grub_reiserfs_compare_keys+0x98>  // b.any
     58c:	sub	w1, w3, #0x2
     590:	cmp	w1, #0x1
     594:	b.ls	57c <grub_reiserfs_compare_keys+0x7c>  // b.plast
     598:	cmp	w3, w0
     59c:	b.cc	5c8 <grub_reiserfs_compare_keys+0xc8>  // b.lo, b.ul, b.last
     5a0:	cmp	w3, w0
     5a4:	cset	w0, hi  // hi = pmore
     5a8:	ldp	x29, x30, [sp], #16
     5ac:	ret
     5b0:	mov	w0, #0xffffffff            	// #-1
     5b4:	ret
     5b8:	mov	w0, #0x1                   	// #1
     5bc:	ret
     5c0:	mov	w0, #0x1                   	// #1
     5c4:	b	5a8 <grub_reiserfs_compare_keys+0xa8>
     5c8:	mov	w0, #0xffffffff            	// #-1
     5cc:	b	5a8 <grub_reiserfs_compare_keys+0xa8>
     5d0:	cmp	w0, #0x4
     5d4:	b.ne	598 <grub_reiserfs_compare_keys+0x98>  // b.any
     5d8:	b	5a0 <grub_reiserfs_compare_keys+0xa0>

00000000000005dc <grub_reiserfs_get_item>:
     5dc:	stp	x29, x30, [sp, #-112]!
     5e0:	mov	x29, sp
     5e4:	stp	x21, x22, [sp, #32]
     5e8:	mov	x21, x0
     5ec:	ldrh	w0, [x0, #44]
     5f0:	stp	x27, x28, [sp, #80]
     5f4:	mov	x22, x1
     5f8:	ldrh	w28, [x21, #44]
     5fc:	stp	x19, x20, [sp, #16]
     600:	mov	x19, x2
     604:	stp	x23, x24, [sp, #48]
     608:	ldr	w24, [x21, #8]
     60c:	stp	x25, x26, [sp, #64]
     610:	stp	w0, w3, [sp, #100]
     614:	mov	x0, x28
     618:	bl	0 <grub_malloc>
     61c:	mov	x20, x0
     620:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     624:	ldr	x23, [x0]
     628:	cbz	x20, 6d8 <grub_reiserfs_get_item+0xfc>
     62c:	ldr	w0, [sp, #100]
     630:	str	xzr, [x19, #16]
     634:	lsr	w0, w0, #9
     638:	str	w0, [sp, #108]
     63c:	mov	w0, #0xffff                	// #65535
     640:	str	w0, [sp, #96]
     644:	ldr	w0, [sp, #100]
     648:	mov	x4, x20
     64c:	mov	x3, x28
     650:	umull	x2, w0, w24
     654:	ldr	w0, [sp, #108]
     658:	and	x2, x2, #0x1ff
     65c:	mul	w1, w0, w24
     660:	ldr	x0, [x21, #120]
     664:	bl	0 <grub_disk_read>
     668:	ldr	w26, [x23]
     66c:	cbnz	w26, 6d8 <grub_reiserfs_get_item+0xfc>
     670:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     674:	ldrh	w25, [x20]
     678:	mov	w1, #0x211                 	// #529
     67c:	ldr	x3, [x0]
     680:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     684:	mov	w4, w25
     688:	ldr	x2, [x0]
     68c:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     690:	add	x27, x0, #0x0
     694:	ldr	x0, [x0]
     698:	bl	0 <grub_real_dprintf>
     69c:	ldr	w0, [sp, #96]
     6a0:	cmp	w0, w25
     6a4:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     6a8:	add	x6, x0, #0x0
     6ac:	b.hi	710 <grub_reiserfs_get_item+0x134>  // b.pmore
     6b0:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     6b4:	mov	w1, #0x214                 	// #532
     6b8:	ldr	x2, [x6]
     6bc:	ldr	x3, [x0]
     6c0:	ldr	x0, [x27]
     6c4:	bl	0 <grub_real_dprintf>
     6c8:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     6cc:	ldr	x1, [x0]
     6d0:	mov	w0, #0x9                   	// #9
     6d4:	bl	0 <grub_error>
     6d8:	ldr	w0, [x23]
     6dc:	mov	w1, #0x292                 	// #658
     6e0:	cmp	w0, #0x0
     6e4:	cset	w0, ne  // ne = any
     6e8:	bl	418 <real_assert.constprop.0>
     6ec:	mov	x0, x20
     6f0:	bl	0 <grub_free>
     6f4:	ldr	w0, [x23]
     6f8:	mov	w1, #0x294                 	// #660
     6fc:	cmp	w0, #0x0
     700:	cset	w0, ne  // ne = any
     704:	bl	418 <real_assert.constprop.0>
     708:	ldr	w26, [x23]
     70c:	b	86c <grub_reiserfs_get_item+0x290>
     710:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     714:	ldrh	w27, [x20, #2]
     718:	mov	w1, #0x21a                 	// #538
     71c:	ldr	x3, [x0]
     720:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     724:	mov	w4, w27
     728:	ldr	x2, [x0]
     72c:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     730:	ldr	x0, [x0]
     734:	bl	0 <grub_real_dprintf>
     738:	add	x8, x20, #0x18
     73c:	cmp	w25, #0x1
     740:	b.ls	88c <grub_reiserfs_get_item+0x2b0>  // b.plast
     744:	mov	x7, x8
     748:	mov	x6, #0x0                   	// #0
     74c:	and	w9, w6, #0xffff
     750:	cmp	w27, w6, uxth
     754:	b.ls	770 <grub_reiserfs_get_item+0x194>  // b.plast
     758:	mov	x1, x7
     75c:	mov	x0, x22
     760:	bl	500 <grub_reiserfs_compare_keys>
     764:	add	x1, x6, #0x1
     768:	add	x7, x7, #0x10
     76c:	tbz	w0, #31, 7bc <grub_reiserfs_get_item+0x1e0>
     770:	lsl	x0, x6, #3
     774:	cmp	w9, w27
     778:	add	x0, x0, w27, uxtw #4
     77c:	ldr	w24, [x8, x0]
     780:	b.cs	7b4 <grub_reiserfs_get_item+0x1d8>  // b.hs, b.nlast
     784:	lsl	x1, x6, #4
     788:	ldr	w2, [x22]
     78c:	add	x0, x8, x6, lsl #4
     790:	ldr	w1, [x8, x1]
     794:	cmp	w2, w1
     798:	b.ne	7b4 <grub_reiserfs_get_item+0x1d8>  // b.any
     79c:	ldr	w1, [x0, #4]
     7a0:	ldr	w2, [x22, #4]
     7a4:	cmp	w2, w1
     7a8:	b.ne	7b4 <grub_reiserfs_get_item+0x1d8>  // b.any
     7ac:	bl	4d0 <grub_reiserfs_get_key_offset>
     7b0:	str	x0, [x19, #16]
     7b4:	str	w25, [sp, #96]
     7b8:	b	644 <grub_reiserfs_get_item+0x68>
     7bc:	mov	x6, x1
     7c0:	b	74c <grub_reiserfs_get_item+0x170>
     7c4:	madd	x7, x9, x10, x8
     7c8:	mov	x0, x22
     7cc:	mov	x1, x7
     7d0:	bl	500 <grub_reiserfs_compare_keys>
     7d4:	cbz	w0, 80c <grub_reiserfs_get_item+0x230>
     7d8:	tst	w11, w0, lsr #31
     7dc:	b.ne	8a8 <grub_reiserfs_get_item+0x2cc>  // b.any
     7e0:	add	x9, x9, #0x1
     7e4:	tbz	w0, #31, 89c <grub_reiserfs_get_item+0x2c0>
     7e8:	cbnz	w6, 7fc <grub_reiserfs_get_item+0x220>
     7ec:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     7f0:	ldr	x1, [x0]
     7f4:	mov	w0, #0xe                   	// #14
     7f8:	b	6d4 <grub_reiserfs_get_item+0xf8>
     7fc:	sub	w6, w6, #0x1
     800:	and	w6, w6, #0xffff
     804:	umull	x7, w6, w10
     808:	add	x7, x8, x7
     80c:	ldr	w0, [sp, #104]
     810:	cmp	w6, w27
     814:	eor	w3, w0, #0x1
     818:	cset	w0, eq  // eq = none
     81c:	tst	w3, w0
     820:	b.eq	838 <grub_reiserfs_get_item+0x25c>  // b.none
     824:	cbz	w6, 7ec <grub_reiserfs_get_item+0x210>
     828:	sub	w6, w6, #0x1
     82c:	mov	w7, #0x18                  	// #24
     830:	and	w6, w6, #0xffff
     834:	umaddl	x7, w6, w7, x8
     838:	str	x21, [x19]
     83c:	cbnz	x7, 8b0 <grub_reiserfs_get_item+0x2d4>
     840:	mov	w0, #0x5                   	// #5
     844:	str	wzr, [x19, #8]
     848:	strh	wzr, [x19, #12]
     84c:	str	w0, [x19, #40]
     850:	ldr	w0, [x23]
     854:	mov	w1, #0x28d                 	// #653
     858:	cmp	w0, #0x0
     85c:	cset	w0, eq  // eq = none
     860:	bl	418 <real_assert.constprop.0>
     864:	mov	x0, x20
     868:	bl	0 <grub_free>
     86c:	mov	w0, w26
     870:	ldp	x19, x20, [sp, #16]
     874:	ldp	x21, x22, [sp, #32]
     878:	ldp	x23, x24, [sp, #48]
     87c:	ldp	x25, x26, [sp, #64]
     880:	ldp	x27, x28, [sp, #80]
     884:	ldp	x29, x30, [sp], #112
     888:	ret
     88c:	ldr	w0, [sp, #104]
     890:	mov	x9, #0x0                   	// #0
     894:	mov	x10, #0x18                  	// #24
     898:	and	w11, w0, #0x1
     89c:	and	w6, w9, #0xffff
     8a0:	cmp	w27, w9, uxth
     8a4:	b.hi	7c4 <grub_reiserfs_get_item+0x1e8>  // b.pmore
     8a8:	mov	x7, #0x0                   	// #0
     8ac:	b	80c <grub_reiserfs_get_item+0x230>
     8b0:	str	w24, [x19, #8]
     8b4:	mov	x0, x7
     8b8:	strh	w6, [x19, #12]
     8bc:	bl	70 <grub_reiserfs_get_key_type>
     8c0:	str	w0, [x19, #40]
     8c4:	mov	w1, #0x18                  	// #24
     8c8:	add	x0, x19, #0x2c
     8cc:	mov	x2, #0x18                  	// #24
     8d0:	umaddl	x1, w6, w1, x8
     8d4:	bl	0 <grub_memmove>
     8d8:	b	850 <grub_reiserfs_get_item+0x274>
     8dc:	nop
	...

0000000000000920 <grub_reiserfs_set_key_offset>:
     920:	mov	x2, x0
     924:	mov	x3, x1
     928:	stp	x29, x30, [sp, #-16]!
     92c:	mov	x29, sp
     930:	bl	0 <grub_reiserfs_get_key_v1_type>
     934:	cmp	w0, #0x5
     938:	b.ne	950 <grub_reiserfs_set_key_offset+0x30>  // b.any
     93c:	ldr	x0, [x2, #8]
     940:	bfxil	x0, x3, #0, #60
     944:	str	x0, [x2, #8]
     948:	ldp	x29, x30, [sp], #16
     94c:	ret
     950:	str	w3, [x2, #8]
     954:	b	948 <grub_reiserfs_set_key_offset+0x28>

0000000000000958 <grub_reiserfs_read_real>:
     958:	stp	x29, x30, [sp, #-272]!
     95c:	mov	x29, sp
     960:	stp	x27, x28, [sp, #80]
     964:	ldr	x27, [x0]
     968:	stp	x21, x22, [sp, #32]
     96c:	mov	x22, x0
     970:	stp	x19, x20, [sp, #16]
     974:	mov	x20, x1
     978:	ldrh	w0, [x27, #44]
     97c:	str	w0, [sp, #136]
     980:	add	x21, x20, x3
     984:	ldur	x0, [x22, #44]
     988:	mov	w1, #0x4                   	// #4
     98c:	stp	x23, x24, [sp, #48]
     990:	mov	x23, x2
     994:	adrp	x24, 0 <grub_reiserfs_get_key_v1_type>
     998:	stp	x25, x26, [sp, #64]
     99c:	mov	x25, x3
     9a0:	stp	x4, x5, [sp, #112]
     9a4:	str	x0, [sp, #184]
     9a8:	add	x0, sp, #0xb8
     9ac:	str	xzr, [sp, #192]
     9b0:	bl	448 <grub_reiserfs_set_key_type.constprop.0>
     9b4:	ldr	x0, [x22, #32]
     9b8:	adrp	x22, 0 <grub_reiserfs_get_key_v1_type>
     9bc:	ldr	x2, [x24]
     9c0:	cmp	x21, x0
     9c4:	csel	x21, x21, x0, ls  // ls = plast
     9c8:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     9cc:	mov	x7, x25
     9d0:	mov	x4, x20
     9d4:	ldr	x3, [x0]
     9d8:	sub	x6, x21, x20
     9dc:	ldr	x0, [x22]
     9e0:	mov	x5, x21
     9e4:	mov	w1, #0x438                 	// #1080
     9e8:	bl	0 <grub_real_dprintf>
     9ec:	add	x1, x20, #0x1
     9f0:	add	x0, sp, #0xb8
     9f4:	bl	920 <grub_reiserfs_set_key_offset>
     9f8:	add	x2, sp, #0xc8
     9fc:	add	x1, sp, #0xb8
     a00:	mov	x0, x27
     a04:	mov	w3, #0x0                   	// #0
     a08:	bl	5dc <grub_reiserfs_get_item>
     a0c:	cbnz	w0, a2c <grub_reiserfs_read_real+0xd4>
     a10:	ldr	w0, [sp, #208]
     a14:	cbnz	w0, a40 <grub_reiserfs_read_real+0xe8>
     a18:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     a1c:	mov	x2, x20
     a20:	ldr	x1, [x0]
     a24:	mov	w0, #0xe                   	// #14
     a28:	bl	0 <grub_error>
     a2c:	mov	x26, #0x0                   	// #0
     a30:	mov	x0, x26
     a34:	bl	0 <grub_free>
     a38:	mov	x0, #0xffffffffffffffff    	// #-1
     a3c:	b	a8c <grub_reiserfs_read_real+0x134>
     a40:	add	x0, sp, #0xf4
     a44:	bl	4d0 <grub_reiserfs_get_key_offset>
     a48:	mov	x1, x0
     a4c:	sub	x19, x0, #0x1
     a50:	ldr	w0, [sp, #136]
     a54:	lsr	w0, w0, #9
     a58:	str	w0, [sp, #100]
     a5c:	cmp	x19, x21
     a60:	b.cc	aa8 <grub_reiserfs_read_real+0x150>  // b.lo, b.ul, b.last
     a64:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     a68:	sub	x19, x19, x20
     a6c:	ldr	x2, [x24]
     a70:	mov	x5, x25
     a74:	ldr	x3, [x0]
     a78:	mov	x4, x19
     a7c:	ldr	x0, [x22]
     a80:	mov	w1, #0x4ae                 	// #1198
     a84:	bl	0 <grub_real_dprintf>
     a88:	mov	x0, x19
     a8c:	ldp	x19, x20, [sp, #16]
     a90:	ldp	x21, x22, [sp, #32]
     a94:	ldp	x23, x24, [sp, #48]
     a98:	ldp	x25, x26, [sp, #64]
     a9c:	ldp	x27, x28, [sp, #80]
     aa0:	ldp	x29, x30, [sp], #272
     aa4:	ret
     aa8:	add	x0, sp, #0xb8
     aac:	bl	920 <grub_reiserfs_set_key_offset>
     ab0:	add	x2, sp, #0xc8
     ab4:	add	x1, sp, #0xb8
     ab8:	mov	x0, x27
     abc:	mov	w3, #0x1                   	// #1
     ac0:	bl	5dc <grub_reiserfs_get_item>
     ac4:	cbnz	w0, a2c <grub_reiserfs_read_real+0xd4>
     ac8:	ldr	w8, [sp, #208]
     acc:	cbz	w8, a2c <grub_reiserfs_read_real+0xd4>
     ad0:	ldr	w0, [sp, #240]
     ad4:	ldrh	w28, [sp, #262]
     ad8:	cmp	w0, #0x2
     adc:	b.eq	b88 <grub_reiserfs_read_real+0x230>  // b.none
     ae0:	cmp	w0, #0x3
     ae4:	b.ne	a2c <grub_reiserfs_read_real+0xd4>  // b.any
     ae8:	lsr	w0, w28, #2
     aec:	and	x28, x28, #0xffff
     af0:	str	w0, [sp, #140]
     af4:	mov	x0, x28
     af8:	bl	0 <grub_malloc>
     afc:	mov	x26, x0
     b00:	cbz	x0, a2c <grub_reiserfs_read_real+0xd4>
     b04:	ldr	w1, [sp, #208]
     b08:	mov	x4, x0
     b0c:	ldr	w0, [sp, #100]
     b10:	mov	x3, x28
     b14:	ldrh	w2, [sp, #264]
     b18:	mul	w1, w0, w1
     b1c:	ldr	x0, [sp, #200]
     b20:	ldr	x0, [x0, #120]
     b24:	bl	0 <grub_disk_read>
     b28:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     b2c:	ldr	x0, [x0]
     b30:	str	x0, [sp, #128]
     b34:	ldr	w0, [x0]
     b38:	cbnz	w0, a30 <grub_reiserfs_read_real+0xd8>
     b3c:	ldr	x0, [sp, #200]
     b40:	mov	x28, x19
     b44:	ldrh	w12, [sp, #136]
     b48:	mov	x19, #0x0                   	// #0
     b4c:	ldr	x1, [sp, #112]
     b50:	ldr	x0, [x0, #120]
     b54:	str	x1, [x0, #48]
     b58:	ldr	x1, [sp, #120]
     b5c:	str	x1, [x0, #56]
     b60:	ldr	w0, [sp, #140]
     b64:	cmp	w0, w19
     b68:	ccmp	x28, x21, #0x2, hi  // hi = pmore
     b6c:	b.cc	c6c <grub_reiserfs_read_real+0x314>  // b.lo, b.ul, b.last
     b70:	ldr	x0, [sp, #200]
     b74:	ldr	x0, [x0, #120]
     b78:	str	xzr, [x0, #48]
     b7c:	mov	x0, x26
     b80:	bl	0 <grub_free>
     b84:	b	c60 <grub_reiserfs_read_real+0x308>
     b88:	ldr	w0, [sp, #100]
     b8c:	mov	w1, #0x45b                 	// #1115
     b90:	umull	x8, w0, w8
     b94:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     b98:	str	x8, [sp, #104]
     b9c:	ldr	x3, [x0]
     ba0:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     ba4:	mov	w4, w8
     ba8:	ldr	x2, [x0]
     bac:	ldr	x0, [x22]
     bb0:	bl	0 <grub_real_dprintf>
     bb4:	and	x0, x28, #0xffff
     bb8:	add	x28, x19, w28, uxth
     bbc:	cmp	x28, x20
     bc0:	ldr	x8, [sp, #104]
     bc4:	b.ls	c60 <grub_reiserfs_read_real+0x308>  // b.plast
     bc8:	sub	x7, x21, x19
     bcc:	subs	w5, w20, w19
     bd0:	csel	w5, w5, wzr, pl  // pl = nfrst
     bd4:	cmp	x7, x0
     bd8:	csel	x26, x7, x0, ls  // ls = plast
     bdc:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     be0:	ldr	x2, [x24]
     be4:	sxtw	x9, w5
     be8:	ldr	x3, [x0]
     bec:	sub	x28, x26, w5, sxtw
     bf0:	ldr	x0, [x22]
     bf4:	mov	w4, w8
     bf8:	mov	w6, w26
     bfc:	mov	w1, #0x461                 	// #1121
     c00:	str	x9, [sp, #128]
     c04:	bl	0 <grub_real_dprintf>
     c08:	ldr	x0, [sp, #200]
     c0c:	mov	x4, x23
     c10:	ldp	x8, x1, [sp, #104]
     c14:	mov	x3, x28
     c18:	ldr	x0, [x0, #120]
     c1c:	ldr	x9, [sp, #128]
     c20:	ldrh	w2, [sp, #264]
     c24:	str	x1, [x0, #48]
     c28:	ldr	x1, [sp, #120]
     c2c:	str	x1, [x0, #56]
     c30:	add	x2, x2, x9
     c34:	mov	x1, x8
     c38:	bl	0 <grub_disk_read>
     c3c:	ldr	x0, [sp, #200]
     c40:	ldr	x0, [x0, #120]
     c44:	str	xzr, [x0, #48]
     c48:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     c4c:	ldr	x0, [x0]
     c50:	ldr	w0, [x0]
     c54:	cbnz	w0, a2c <grub_reiserfs_read_real+0xd4>
     c58:	add	x23, x23, x28
     c5c:	add	x28, x19, x26
     c60:	add	x1, x28, #0x1
     c64:	mov	x19, x28
     c68:	b	a5c <grub_reiserfs_read_real+0x104>
     c6c:	ldr	w0, [sp, #100]
     c70:	mov	w1, #0x489                 	// #1161
     c74:	ldr	w10, [x26, x19, lsl #2]
     c78:	str	x12, [sp, #144]
     c7c:	mul	w10, w0, w10
     c80:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     c84:	str	w10, [sp, #104]
     c88:	ldr	x3, [x0]
     c8c:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     c90:	mov	w4, w10
     c94:	ldr	x2, [x0]
     c98:	ldr	x0, [x22]
     c9c:	bl	0 <grub_real_dprintf>
     ca0:	ldr	x12, [sp, #144]
     ca4:	ldr	w10, [sp, #104]
     ca8:	add	x9, x12, x28
     cac:	cmp	x9, x20
     cb0:	b.cc	d40 <grub_reiserfs_read_real+0x3e8>  // b.lo, b.ul, b.last
     cb4:	subs	w5, w20, w28
     cb8:	sub	x9, x21, x28
     cbc:	csel	w5, w5, wzr, pl  // pl = nfrst
     cc0:	cmp	x9, x12
     cc4:	csel	x9, x9, x12, ls  // ls = plast
     cc8:	mov	w4, w10
     ccc:	sub	x0, x9, w5, sxtw
     cd0:	str	x0, [sp, #104]
     cd4:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     cd8:	sxtw	x13, w5
     cdc:	ldr	x2, [x24]
     ce0:	mov	w6, w9
     ce4:	ldr	x3, [x0]
     ce8:	mov	w1, #0x490                 	// #1168
     cec:	ldr	x0, [x22]
     cf0:	str	w10, [sp, #144]
     cf4:	stp	x9, x12, [sp, #152]
     cf8:	str	x13, [sp, #168]
     cfc:	bl	0 <grub_real_dprintf>
     d00:	ldr	x0, [sp, #200]
     d04:	mov	x4, x23
     d08:	ldr	w10, [sp, #144]
     d0c:	ldr	x3, [sp, #104]
     d10:	mov	w1, w10
     d14:	ldr	x0, [x0, #120]
     d18:	ldr	x13, [sp, #168]
     d1c:	mov	x2, x13
     d20:	bl	0 <grub_disk_read>
     d24:	ldr	x0, [sp, #128]
     d28:	ldr	w0, [x0]
     d2c:	cbnz	w0, a30 <grub_reiserfs_read_real+0xd8>
     d30:	ldp	x9, x12, [sp, #152]
     d34:	ldr	x0, [sp, #104]
     d38:	add	x23, x23, x0
     d3c:	add	x9, x28, x9
     d40:	add	x19, x19, #0x1
     d44:	mov	x28, x9
     d48:	b	b60 <grub_reiserfs_read_real+0x208>
     d4c:	nop
	...

0000000000000da8 <grub_reiserfs_read>:
     da8:	ldp	x4, x5, [x0, #88]
     dac:	mov	x3, x2
     db0:	mov	x2, x1
     db4:	ldr	x1, [x0, #24]
     db8:	ldr	x0, [x0, #80]
     dbc:	b	958 <grub_reiserfs_read_real>

0000000000000dc0 <grub_reiserfs_read_symlink>:
     dc0:	stp	x29, x30, [sp, #-48]!
     dc4:	mov	x29, sp
     dc8:	str	x21, [sp, #32]
     dcc:	ldr	x21, [x0, #32]
     dd0:	stp	x19, x20, [sp, #16]
     dd4:	mov	x20, x0
     dd8:	add	x0, x21, #0x1
     ddc:	bl	0 <grub_malloc>
     de0:	mov	x19, x0
     de4:	cbz	x0, e14 <grub_reiserfs_read_symlink+0x54>
     de8:	mov	x2, x0
     dec:	mov	x3, x21
     df0:	mov	x0, x20
     df4:	mov	x5, #0x0                   	// #0
     df8:	mov	x4, #0x0                   	// #0
     dfc:	mov	x1, #0x0                   	// #0
     e00:	bl	958 <grub_reiserfs_read_real>
     e04:	tbz	x0, #63, e28 <grub_reiserfs_read_symlink+0x68>
     e08:	mov	x0, x19
     e0c:	mov	x19, #0x0                   	// #0
     e10:	bl	0 <grub_free>
     e14:	mov	x0, x19
     e18:	ldp	x19, x20, [sp, #16]
     e1c:	ldr	x21, [sp, #32]
     e20:	ldp	x29, x30, [sp], #48
     e24:	ret
     e28:	strb	wzr, [x19, x0]
     e2c:	b	e14 <grub_reiserfs_read_symlink+0x54>

0000000000000e30 <grub_reiserfs_iterate_dir>:
     e30:	stp	x29, x30, [sp, #-272]!
     e34:	mov	x29, sp
     e38:	stp	x19, x20, [sp, #16]
     e3c:	mov	x19, x0
     e40:	ldr	w0, [x0, #40]
     e44:	stp	x21, x22, [sp, #32]
     e48:	cmp	w0, #0x1
     e4c:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     e50:	stp	x23, x24, [sp, #48]
     e54:	stp	x25, x26, [sp, #64]
     e58:	stp	x27, x28, [sp, #80]
     e5c:	stp	x1, x2, [sp, #152]
     e60:	ldr	x26, [x0]
     e64:	b.eq	ea0 <grub_reiserfs_iterate_dir+0x70>  // b.none
     e68:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     e6c:	mov	x20, #0x0                   	// #0
     e70:	ldr	x1, [x0]
     e74:	mov	w0, #0x4                   	// #4
     e78:	bl	0 <grub_error>
     e7c:	ldr	w0, [x26]
     e80:	mov	w1, #0x3e8                 	// #1000
     e84:	mov	w19, #0x0                   	// #0
     e88:	cmp	w0, #0x0
     e8c:	cset	w0, ne  // ne = any
     e90:	bl	418 <real_assert.constprop.0>
     e94:	mov	x0, x20
     e98:	bl	0 <grub_free>
     e9c:	b	1180 <grub_reiserfs_iterate_dir+0x350>
     ea0:	ldr	x24, [x19]
     ea4:	ldr	x0, [x19, #16]
     ea8:	str	x0, [sp, #112]
     eac:	ldrh	w27, [x24, #44]
     eb0:	add	w0, w27, #0x1
     eb4:	sxtw	x0, w0
     eb8:	bl	0 <grub_malloc>
     ebc:	mov	x20, x0
     ec0:	cbz	x0, e7c <grub_reiserfs_iterate_dir+0x4c>
     ec4:	ldrh	w21, [x19, #12]
     ec8:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
     ecc:	ldr	w22, [x19, #8]
     ed0:	adrp	x23, 0 <grub_reiserfs_get_key_v1_type>
     ed4:	adrp	x19, 0 <grub_reiserfs_get_key_v1_type>
     ed8:	mov	w1, #0x2e5                 	// #741
     edc:	ldr	x3, [x0]
     ee0:	ldr	x2, [x23]
     ee4:	ldr	x0, [x19]
     ee8:	bl	0 <grub_real_dprintf>
     eec:	stp	x23, x19, [sp, #128]
     ef0:	lsr	w0, w27, #9
     ef4:	str	w0, [sp, #144]
     ef8:	and	x0, x27, #0xffff
     efc:	str	x0, [sp, #96]
     f00:	ldr	w0, [sp, #144]
     f04:	umull	x2, w27, w22
     f08:	ldr	x3, [sp, #96]
     f0c:	mov	x4, x20
     f10:	and	x2, x2, #0x1ff
     f14:	mul	w1, w0, w22
     f18:	ldr	x0, [x24, #120]
     f1c:	bl	0 <grub_disk_read>
     f20:	ldr	w0, [x26]
     f24:	cbnz	w0, e7c <grub_reiserfs_iterate_dir+0x4c>
     f28:	ldr	x0, [sp, #96]
     f2c:	mov	w25, #0x0                   	// #0
     f30:	add	x0, x20, x0
     f34:	str	x0, [sp, #104]
     f38:	ldr	x0, [sp, #96]
     f3c:	strb	wzr, [x20, x0]
     f40:	and	x0, x21, #0xffff
     f44:	mov	x21, #0x18                  	// #24
     f48:	madd	x21, x0, x21, x21
     f4c:	add	x21, x20, x21
     f50:	ldrh	w0, [x21, #20]
     f54:	add	x0, x20, x0
     f58:	str	x0, [sp, #120]
     f5c:	ldrh	w0, [x21, #16]
     f60:	str	w0, [sp, #148]
     f64:	ldr	x0, [sp, #120]
     f68:	add	x23, x0, #0x4
     f6c:	ldr	w0, [sp, #148]
     f70:	cmp	w25, w0
     f74:	b.ne	fc0 <grub_reiserfs_iterate_dir+0x190>  // b.any
     f78:	ldr	x0, [sp, #112]
     f7c:	cbz	x0, fb8 <grub_reiserfs_iterate_dir+0x188>
     f80:	mov	x1, x0
     f84:	mov	x0, x21
     f88:	bl	920 <grub_reiserfs_set_key_offset>
     f8c:	add	x2, sp, #0xc8
     f90:	mov	x1, x21
     f94:	mov	x0, x24
     f98:	mov	w3, #0x1                   	// #1
     f9c:	bl	5dc <grub_reiserfs_get_item>
     fa0:	cbnz	w0, e7c <grub_reiserfs_iterate_dir+0x4c>
     fa4:	ldr	w22, [sp, #208]
     fa8:	ldr	x0, [sp, #216]
     fac:	str	x0, [sp, #112]
     fb0:	ldrh	w21, [sp, #212]
     fb4:	cbnz	w22, f00 <grub_reiserfs_iterate_dir+0xd0>
     fb8:	mov	w19, #0x0                   	// #0
     fbc:	b	1164 <grub_reiserfs_iterate_dir+0x334>
     fc0:	ldrh	w0, [x23, #10]
     fc4:	tbz	w0, #2, 122c <grub_reiserfs_iterate_dir+0x3fc>
     fc8:	ldr	x0, [sp, #120]
     fcc:	ldrh	w22, [x23, #8]
     fd0:	add	x22, x0, x22
     fd4:	cbnz	w25, 105c <grub_reiserfs_iterate_dir+0x22c>
     fd8:	ldrh	w19, [x21, #20]
     fdc:	ldrh	w0, [x21, #18]
     fe0:	add	x19, x19, x0
     fe4:	add	x19, x20, x19
     fe8:	cmp	x19, x22
     fec:	b.cc	106c <grub_reiserfs_iterate_dir+0x23c>  // b.lo, b.ul, b.last
     ff0:	ldr	x0, [sp, #104]
     ff4:	cmp	x0, x19
     ff8:	csel	x19, x0, x19, ls  // ls = plast
     ffc:	ldr	w0, [x23]
    1000:	mov	w1, #0x1                   	// #1
    1004:	str	w0, [sp, #184]
    1008:	ldr	w0, [x23, #4]
    100c:	str	w0, [sp, #188]
    1010:	add	x0, sp, #0xb8
    1014:	str	xzr, [sp, #192]
    1018:	bl	448 <grub_reiserfs_set_key_type.constprop.0>
    101c:	mov	x1, #0x1                   	// #1
    1020:	add	x0, sp, #0xb8
    1024:	bl	920 <grub_reiserfs_set_key_offset>
    1028:	mov	x0, #0x48                  	// #72
    102c:	bl	0 <grub_malloc>
    1030:	mov	x28, x0
    1034:	cbz	x0, e7c <grub_reiserfs_iterate_dir+0x4c>
    1038:	mov	x2, x0
    103c:	add	x1, sp, #0xb8
    1040:	mov	x0, x24
    1044:	mov	w3, #0x1                   	// #1
    1048:	bl	5dc <grub_reiserfs_get_item>
    104c:	cbz	w0, 1074 <grub_reiserfs_iterate_dir+0x244>
    1050:	mov	x0, x28
    1054:	bl	0 <grub_free>
    1058:	b	e7c <grub_reiserfs_iterate_dir+0x4c>
    105c:	ldr	x0, [sp, #120]
    1060:	ldurh	w19, [x23, #-8]
    1064:	add	x19, x0, x19
    1068:	b	fe8 <grub_reiserfs_iterate_dir+0x1b8>
    106c:	ldr	x19, [sp, #104]
    1070:	b	ffc <grub_reiserfs_iterate_dir+0x1cc>
    1074:	ldr	w0, [x28, #40]
    1078:	cmp	w0, #0x1
    107c:	b.eq	123c <grub_reiserfs_iterate_dir+0x40c>  // b.none
    1080:	add	x0, sp, #0xb8
    1084:	mov	x1, #0x0                   	// #0
    1088:	bl	920 <grub_reiserfs_set_key_offset>
    108c:	add	x0, sp, #0xb8
    1090:	mov	w1, #0x0                   	// #0
    1094:	bl	448 <grub_reiserfs_set_key_type.constprop.0>
    1098:	mov	x2, x28
    109c:	add	x1, sp, #0xb8
    10a0:	mov	x0, x24
    10a4:	mov	w3, #0x1                   	// #1
    10a8:	bl	5dc <grub_reiserfs_get_item>
    10ac:	cbnz	w0, 1050 <grub_reiserfs_iterate_dir+0x220>
    10b0:	ldr	w1, [x28, #8]
    10b4:	cbz	w1, 11dc <grub_reiserfs_iterate_dir+0x3ac>
    10b8:	ldr	w2, [sp, #144]
    10bc:	add	x4, sp, #0xc8
    10c0:	ldrh	w3, [x28, #66]
    10c4:	ldr	x0, [x24, #120]
    10c8:	mul	w1, w2, w1
    10cc:	ldrh	w2, [x28, #64]
    10d0:	cbnz	w3, 11a0 <grub_reiserfs_iterate_dir+0x370>
    10d4:	mov	x3, #0x20                  	// #32
    10d8:	bl	0 <grub_disk_read>
    10dc:	ldr	w0, [x26]
    10e0:	cbnz	w0, e7c <grub_reiserfs_iterate_dir+0x4c>
    10e4:	ldr	w0, [sp, #216]
    10e8:	mov	w1, #0xa000                	// #40960
    10ec:	str	w0, [x28, #24]
    10f0:	mov	w5, #0x3                   	// #3
    10f4:	ldrh	w0, [sp, #200]
    10f8:	and	w0, w0, w1
    10fc:	cmp	w0, w1
    1100:	ldr	w0, [sp, #208]
    1104:	csinc	w5, w5, wzr, eq  // eq = none
    1108:	str	x0, [x28, #32]
    110c:	ldrb	w4, [x19]
    1110:	mov	w1, w5
    1114:	stp	w5, w4, [sp, #168]
    1118:	mov	x2, x28
    111c:	ldr	x4, [sp, #152]
    1120:	strb	wzr, [x19]
    1124:	ldr	x3, [sp, #160]
    1128:	mov	x0, x22
    112c:	blr	x4
    1130:	ldp	w5, w4, [sp, #168]
    1134:	strb	w4, [x19]
    1138:	cbz	w0, 122c <grub_reiserfs_iterate_dir+0x3fc>
    113c:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    1140:	mov	x4, x22
    1144:	mov	w1, #0x3ca                 	// #970
    1148:	mov	w19, #0x1                   	// #1
    114c:	ldr	x3, [x0]
    1150:	ldr	x0, [sp, #128]
    1154:	ldr	x2, [x0]
    1158:	ldr	x0, [sp, #136]
    115c:	ldr	x0, [x0]
    1160:	bl	0 <grub_real_dprintf>
    1164:	ldr	w0, [x26]
    1168:	mov	w1, #0x3e4                 	// #996
    116c:	cmp	w0, #0x0
    1170:	cset	w0, eq  // eq = none
    1174:	bl	418 <real_assert.constprop.0>
    1178:	mov	x0, x20
    117c:	bl	0 <grub_free>
    1180:	mov	w0, w19
    1184:	ldp	x19, x20, [sp, #16]
    1188:	ldp	x21, x22, [sp, #32]
    118c:	ldp	x23, x24, [sp, #48]
    1190:	ldp	x25, x26, [sp, #64]
    1194:	ldp	x27, x28, [sp, #80]
    1198:	ldp	x29, x30, [sp], #272
    119c:	ret
    11a0:	mov	x3, #0x2c                  	// #44
    11a4:	bl	0 <grub_disk_read>
    11a8:	ldr	w0, [x26]
    11ac:	cbnz	w0, e7c <grub_reiserfs_iterate_dir+0x4c>
    11b0:	ldr	w0, [sp, #228]
    11b4:	mov	w1, #0xa000                	// #40960
    11b8:	str	w0, [x28, #24]
    11bc:	mov	w5, #0x3                   	// #3
    11c0:	ldr	x0, [sp, #208]
    11c4:	str	x0, [x28, #32]
    11c8:	ldrh	w0, [sp, #200]
    11cc:	and	w0, w0, w1
    11d0:	cmp	w0, w1
    11d4:	csinc	w5, w5, wzr, eq  // eq = none
    11d8:	b	110c <grub_reiserfs_iterate_dir+0x2dc>
    11dc:	add	x0, x22, #0x2
    11e0:	cmp	x19, x0
    11e4:	b.ne	1224 <grub_reiserfs_iterate_dir+0x3f4>  // b.any
    11e8:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    11ec:	mov	x2, #0x2                   	// #2
    11f0:	ldr	x1, [x0]
    11f4:	mov	x0, x22
    11f8:	bl	0 <grub_memcmp>
    11fc:	cbz	w0, 1224 <grub_reiserfs_iterate_dir+0x3f4>
    1200:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    1204:	mov	x4, x22
    1208:	mov	w1, #0x3bd                 	// #957
    120c:	ldr	x3, [x0]
    1210:	ldr	x0, [sp, #128]
    1214:	ldr	x2, [x0]
    1218:	ldr	x0, [sp, #136]
    121c:	ldr	x0, [x0]
    1220:	bl	0 <grub_real_dprintf>
    1224:	mov	x0, x28
    1228:	bl	0 <grub_free>
    122c:	add	w25, w25, #0x1
    1230:	add	x23, x23, #0x10
    1234:	and	w25, w25, #0xffff
    1238:	b	f6c <grub_reiserfs_iterate_dir+0x13c>
    123c:	mov	w5, #0x2                   	// #2
    1240:	b	110c <grub_reiserfs_iterate_dir+0x2dc>
    1244:	nop
	...

0000000000001288 <grub_reiserfs_open>:
    1288:	stp	x29, x30, [sp, #-160]!
    128c:	mov	x29, sp
    1290:	stp	x19, x20, [sp, #16]
    1294:	mov	x19, x0
    1298:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    129c:	stp	x23, x24, [sp, #48]
    12a0:	add	x23, sp, #0x58
    12a4:	ldr	x24, [x0]
    12a8:	stp	x21, x22, [sp, #32]
    12ac:	mov	x21, x1
    12b0:	str	xzr, [sp, #64]
    12b4:	ldr	x0, [x24]
    12b8:	bl	0 <grub_dl_ref>
    12bc:	ldr	x0, [x19, #8]
    12c0:	ldr	x0, [x0]
    12c4:	bl	f8 <grub_reiserfs_mount>
    12c8:	mov	x20, x0
    12cc:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    12d0:	ldr	x22, [x0]
    12d4:	cbz	x20, 132c <grub_reiserfs_open+0xa4>
    12d8:	mov	x0, #0x1                   	// #1
    12dc:	mov	w1, #0x1                   	// #1
    12e0:	movk	x0, #0x2, lsl #32
    12e4:	stp	x0, xzr, [sp, #72]
    12e8:	add	x0, sp, #0x48
    12ec:	bl	448 <grub_reiserfs_set_key_type.constprop.0>
    12f0:	add	x0, sp, #0x48
    12f4:	mov	x1, #0x1                   	// #1
    12f8:	bl	920 <grub_reiserfs_set_key_offset>
    12fc:	mov	x2, x23
    1300:	add	x1, sp, #0x48
    1304:	mov	x0, x20
    1308:	mov	w3, #0x1                   	// #1
    130c:	bl	5dc <grub_reiserfs_get_item>
    1310:	cbnz	w0, 132c <grub_reiserfs_open+0xa4>
    1314:	ldr	w0, [sp, #96]
    1318:	cbnz	w0, 1368 <grub_reiserfs_open+0xe0>
    131c:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    1320:	ldr	x1, [x0]
    1324:	mov	w0, #0x9                   	// #9
    1328:	bl	0 <grub_error>
    132c:	ldr	w0, [x22]
    1330:	mov	w1, #0x418                 	// #1048
    1334:	cmp	w0, #0x0
    1338:	cset	w0, ne  // ne = any
    133c:	bl	418 <real_assert.constprop.0>
    1340:	ldr	x0, [sp, #64]
    1344:	cmp	x0, x23
    1348:	b.eq	1350 <grub_reiserfs_open+0xc8>  // b.none
    134c:	bl	0 <grub_free>
    1350:	mov	x0, x20
    1354:	bl	0 <grub_free>
    1358:	ldr	x0, [x24]
    135c:	bl	0 <grub_dl_unref>
    1360:	ldr	w21, [x22]
    1364:	b	13d4 <grub_reiserfs_open+0x14c>
    1368:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    136c:	add	x2, sp, #0x40
    1370:	mov	x1, x23
    1374:	mov	w5, #0x1                   	// #1
    1378:	ldr	x4, [x0]
    137c:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    1380:	ldr	x3, [x0]
    1384:	mov	x0, x21
    1388:	bl	0 <grub_fshelp_find_file>
    138c:	ldr	w21, [x22]
    1390:	cbnz	w21, 132c <grub_reiserfs_open+0xa4>
    1394:	ldr	x0, [sp, #64]
    1398:	mov	w1, #0x410                 	// #1040
    139c:	ldr	x4, [x0, #32]
    13a0:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    13a4:	str	x4, [x19, #64]
    13a8:	ldr	x3, [x0]
    13ac:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    13b0:	mov	w6, w4
    13b4:	lsr	x5, x4, #32
    13b8:	ldr	x2, [x0]
    13bc:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    13c0:	ldr	x0, [x0]
    13c4:	bl	0 <grub_real_dprintf>
    13c8:	str	xzr, [x19, #24]
    13cc:	ldr	x0, [sp, #64]
    13d0:	str	x0, [x19, #80]
    13d4:	mov	w0, w21
    13d8:	ldp	x19, x20, [sp, #16]
    13dc:	ldp	x21, x22, [sp, #32]
    13e0:	ldp	x23, x24, [sp, #48]
    13e4:	ldp	x29, x30, [sp], #160
    13e8:	ret
    13ec:	nop
	...

0000000000001430 <grub_reiserfs_dir>:
    1430:	stp	x29, x30, [sp, #-160]!
    1434:	mov	x29, sp
    1438:	stp	x19, x20, [sp, #16]
    143c:	mov	x19, x0
    1440:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    1444:	stp	x21, x22, [sp, #32]
    1448:	mov	x20, x1
    144c:	ldr	x21, [x0]
    1450:	stp	x2, x3, [sp, #56]
    1454:	ldr	x0, [x21]
    1458:	bl	0 <grub_dl_ref>
    145c:	ldr	x0, [x19]
    1460:	bl	f8 <grub_reiserfs_mount>
    1464:	mov	x19, x0
    1468:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    146c:	ldr	x22, [x0]
    1470:	cbz	x19, 14c8 <grub_reiserfs_dir+0x98>
    1474:	mov	x0, #0x1                   	// #1
    1478:	mov	w1, #0x1                   	// #1
    147c:	movk	x0, #0x2, lsl #32
    1480:	stp	x0, xzr, [sp, #72]
    1484:	add	x0, sp, #0x48
    1488:	bl	448 <grub_reiserfs_set_key_type.constprop.0>
    148c:	add	x0, sp, #0x48
    1490:	mov	x1, #0x1                   	// #1
    1494:	bl	920 <grub_reiserfs_set_key_offset>
    1498:	add	x2, sp, #0x58
    149c:	add	x1, sp, #0x48
    14a0:	mov	x0, x19
    14a4:	mov	w3, #0x1                   	// #1
    14a8:	bl	5dc <grub_reiserfs_get_item>
    14ac:	cbnz	w0, 14c8 <grub_reiserfs_dir+0x98>
    14b0:	ldr	w0, [sp, #96]
    14b4:	cbnz	w0, 14e0 <grub_reiserfs_dir+0xb0>
    14b8:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    14bc:	ldr	x1, [x0]
    14c0:	mov	w0, #0x9                   	// #9
    14c4:	bl	0 <grub_error>
    14c8:	mov	x0, x19
    14cc:	bl	0 <grub_free>
    14d0:	ldr	x0, [x21]
    14d4:	bl	0 <grub_dl_unref>
    14d8:	ldr	w20, [x22]
    14dc:	b	1530 <grub_reiserfs_dir+0x100>
    14e0:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    14e4:	add	x2, sp, #0x30
    14e8:	add	x1, sp, #0x58
    14ec:	mov	w5, #0x2                   	// #2
    14f0:	ldr	x4, [x0]
    14f4:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    14f8:	ldr	x3, [x0]
    14fc:	mov	x0, x20
    1500:	bl	0 <grub_fshelp_find_file>
    1504:	ldr	w20, [x22]
    1508:	cbnz	w20, 14c8 <grub_reiserfs_dir+0x98>
    150c:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    1510:	add	x2, sp, #0x38
    1514:	ldr	x1, [x0]
    1518:	ldr	x0, [sp, #48]
    151c:	bl	e30 <grub_reiserfs_iterate_dir>
    1520:	mov	x0, x19
    1524:	bl	0 <grub_free>
    1528:	ldr	x0, [x21]
    152c:	bl	0 <grub_dl_unref>
    1530:	mov	w0, w20
    1534:	ldp	x19, x20, [sp, #16]
    1538:	ldp	x21, x22, [sp, #32]
    153c:	ldp	x29, x30, [sp], #160
    1540:	ret
    1544:	nop
	...

0000000000001578 <grub_mod_init>:
    1578:	stp	x29, x30, [sp, #-32]!
    157c:	mov	x29, sp
    1580:	str	x19, [sp, #16]
    1584:	mov	x19, x0
    1588:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    158c:	ldr	x1, [x0]
    1590:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    1594:	ldr	x0, [x0]
    1598:	bl	0 <grub_list_push>
    159c:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    15a0:	ldr	x0, [x0]
    15a4:	str	x19, [x0]
    15a8:	ldr	x19, [sp, #16]
    15ac:	ldp	x29, x30, [sp], #32
    15b0:	ret
    15b4:	nop
	...

00000000000015d0 <grub_mod_fini>:
    15d0:	adrp	x0, 0 <grub_reiserfs_get_key_v1_type>
    15d4:	ldr	x0, [x0]
    15d8:	b	0 <grub_list_remove>
    15dc:	nop
	...
