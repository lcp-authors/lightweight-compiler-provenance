
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//GEORGIAN-PS.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 12000 <gconv@@Base+0x11728>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0xf0>:
     760:	adrp	x0, 12000 <gconv@@Base+0x11728>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 13000 <gconv@@Base+0x12728>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 13000 <gconv@@Base+0x12728>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 12000 <gconv@@Base+0x11728>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 13000 <gconv@@Base+0x12728>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 13000 <gconv@@Base+0x12728>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 12000 <gconv@@Base+0x11728>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 13000 <gconv@@Base+0x12728>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 12000 <gconv@@Base+0x11728>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 13000 <gconv@@Base+0x12728>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop
     838:	and	x1, x1, #0xff
     83c:	adrp	x0, 1000 <gconv@@Base+0x728>
     840:	add	x0, x0, #0x710
     844:	ldr	w0, [x0, x1, lsl #2]
     848:	ret
     84c:	nop

0000000000000850 <gconv_init@@Base>:
     850:	stp	x29, x30, [sp, #-32]!
     854:	mov	x29, sp
     858:	stp	x19, x20, [sp, #16]
     85c:	mov	x19, x0
     860:	adrp	x20, 1000 <gconv@@Base+0x728>
     864:	ldr	x0, [x0, #24]
     868:	add	x20, x20, #0x580
     86c:	mov	x1, x20
     870:	bl	730 <strcmp@plt>
     874:	cbnz	w0, 8a8 <gconv_init@@Base+0x58>
     878:	adrp	x0, 0 <__cxa_finalize@plt-0x6f0>
     87c:	mov	x2, #0x100000001           	// #4294967297
     880:	add	x0, x0, #0x838
     884:	mov	x1, #0x400000004           	// #17179869188
     888:	str	x0, [x19, #48]
     88c:	stp	x2, x1, [x19, #72]
     890:	str	xzr, [x19, #96]
     894:	mov	w0, #0x0                   	// #0
     898:	str	wzr, [x19, #88]
     89c:	ldp	x19, x20, [sp, #16]
     8a0:	ldp	x29, x30, [sp], #32
     8a4:	ret
     8a8:	ldr	x0, [x19, #32]
     8ac:	mov	x1, x20
     8b0:	bl	730 <strcmp@plt>
     8b4:	cbnz	w0, 8d0 <gconv_init@@Base+0x80>
     8b8:	mov	x0, #0xffffffffffffffff    	// #-1
     8bc:	mov	x2, #0x400000004           	// #17179869188
     8c0:	mov	x1, #0x100000001           	// #4294967297
     8c4:	stp	x2, x1, [x19, #72]
     8c8:	str	x0, [x19, #96]
     8cc:	b	894 <gconv_init@@Base+0x44>
     8d0:	mov	w0, #0x1                   	// #1
     8d4:	b	89c <gconv_init@@Base+0x4c>

00000000000008d8 <gconv@@Base>:
     8d8:	stp	x29, x30, [sp, #-240]!
     8dc:	mov	x8, x4
     8e0:	mov	x29, sp
     8e4:	stp	x21, x22, [sp, #32]
     8e8:	mov	x21, x1
     8ec:	adrp	x1, 12000 <gconv@@Base+0x11728>
     8f0:	stp	x27, x28, [sp, #80]
     8f4:	mov	x28, x0
     8f8:	ldr	w14, [x21, #16]
     8fc:	ldr	x1, [x1, #4056]
     900:	stp	x19, x20, [sp, #16]
     904:	mov	x27, x2
     908:	ldr	x0, [x1]
     90c:	str	x0, [sp, #232]
     910:	mov	x0, #0x0                   	// #0
     914:	add	x1, x28, #0x68
     918:	add	x0, x21, #0x30
     91c:	stp	x25, x26, [sp, #64]
     920:	mov	x20, x3
     924:	stp	x1, x0, [sp, #136]
     928:	mov	x26, x5
     92c:	mov	x25, #0x0                   	// #0
     930:	str	w7, [sp, #168]
     934:	tbnz	w14, #0, 954 <gconv@@Base+0x7c>
     938:	ldr	x0, [x28, #104]
     93c:	ldr	x25, [x28, #144]
     940:	cbz	x0, 954 <gconv@@Base+0x7c>
     944:	adrp	x0, 12000 <gconv@@Base+0x11728>
     948:	ldr	x0, [x0, #4040]
     94c:	ldr	x0, [x0]
     950:	eor	x25, x25, x0
     954:	cbnz	w6, fe0 <gconv@@Base+0x708>
     958:	cmp	x8, #0x0
     95c:	add	x1, sp, #0xc0
     960:	csel	x2, x21, x8, eq  // eq = none
     964:	cmp	x26, #0x0
     968:	csel	x1, x1, xzr, ne  // ne = any
     96c:	stp	x23, x24, [sp, #48]
     970:	mov	x11, #0x0                   	// #0
     974:	ldr	x24, [x2]
     978:	str	x1, [sp, #152]
     97c:	ldr	w1, [sp, #168]
     980:	ldr	x0, [x28, #96]
     984:	cmp	w1, #0x0
     988:	cset	w1, ne  // ne = any
     98c:	str	w1, [sp, #172]
     990:	str	xzr, [sp, #192]
     994:	cmp	x0, #0x0
     998:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     99c:	ldr	x22, [x27]
     9a0:	ldr	x23, [x21, #8]
     9a4:	b.ne	d08 <gconv@@Base+0x430>  // b.any
     9a8:	adrp	x18, 1000 <gconv@@Base+0x728>
     9ac:	add	x14, x18, #0x710
     9b0:	add	x15, x14, #0x400
     9b4:	stp	x28, x8, [sp, #120]
     9b8:	mov	x28, x26
     9bc:	mov	x26, x23
     9c0:	mov	x23, x27
     9c4:	mov	x27, x11
     9c8:	add	x1, sp, #0xd8
     9cc:	str	x1, [sp, #160]
     9d0:	cbz	x28, 9dc <gconv@@Base+0x104>
     9d4:	ldr	x1, [x28]
     9d8:	add	x27, x27, x1
     9dc:	cbz	x0, b68 <gconv@@Base+0x290>
     9e0:	stp	x22, x24, [sp, #208]
     9e4:	mov	x19, x24
     9e8:	ldr	w7, [x21, #16]
     9ec:	cmp	x20, x22
     9f0:	b.eq	107c <gconv@@Base+0x7a4>  // b.none
     9f4:	mov	x0, x22
     9f8:	add	x3, sp, #0xd0
     9fc:	mov	w9, #0x4                   	// #4
     a00:	add	x1, x0, #0x4
     a04:	cmp	x20, x1
     a08:	b.cc	c08 <gconv@@Base+0x330>  // b.lo, b.ul, b.last
     a0c:	cmp	x26, x19
     a10:	b.ls	c14 <gconv@@Base+0x33c>  // b.plast
     a14:	ldr	w8, [x0]
     a18:	mov	w2, #0xfffe                	// #65534
     a1c:	cmp	w8, w2
     a20:	b.hi	b3c <gconv@@Base+0x264>  // b.pmore
     a24:	mov	w2, w8
     a28:	cmp	w8, #0x81
     a2c:	mov	x5, x15
     a30:	mov	w6, #0x90                  	// #144
     a34:	b.hi	a44 <gconv@@Base+0x16c>  // b.pmore
     a38:	b	a64 <gconv@@Base+0x18c>
     a3c:	ldrh	w6, [x2, #10]
     a40:	mov	x5, x2
     a44:	cmp	w8, w6
     a48:	add	x2, x5, #0x8
     a4c:	b.hi	a3c <gconv@@Base+0x164>  // b.pmore
     a50:	ldrh	w1, [x2]
     a54:	cmp	w8, w1
     a58:	b.cc	b48 <gconv@@Base+0x270>  // b.lo, b.ul, b.last
     a5c:	ldr	w2, [x5, #12]
     a60:	add	w2, w8, w2
     a64:	add	x1, x18, #0x710
     a68:	add	x1, x1, #0x480
     a6c:	ldrb	w1, [x1, w2, uxtw]
     a70:	cmp	w1, #0x0
     a74:	ccmp	w8, #0x0, #0x4, eq  // eq = none
     a78:	b.ne	b48 <gconv@@Base+0x270>  // b.any
     a7c:	add	x0, x19, #0x1
     a80:	str	x0, [sp, #216]
     a84:	strb	w1, [x19]
     a88:	ldp	x0, x19, [sp, #208]
     a8c:	add	x0, x0, #0x4
     a90:	str	x0, [sp, #208]
     a94:	cmp	x20, x0
     a98:	b.ne	a00 <gconv@@Base+0x128>  // b.any
     a9c:	nop
     aa0:	str	x0, [x23]
     aa4:	ldr	x0, [sp, #128]
     aa8:	cbnz	x0, bb4 <gconv@@Base+0x2dc>
     aac:	ldp	w1, w0, [x21, #16]
     ab0:	add	w0, w0, #0x1
     ab4:	str	w0, [x21, #20]
     ab8:	tbnz	w1, #0, cac <gconv@@Base+0x3d4>
     abc:	cmp	x24, x19
     ac0:	b.cs	cf8 <gconv@@Base+0x420>  // b.hs, b.nlast
     ac4:	ldr	x1, [x21]
     ac8:	mov	x0, x25
     acc:	stp	x14, x15, [sp, #96]
     ad0:	str	w9, [sp, #112]
     ad4:	str	x1, [sp, #200]
     ad8:	bl	740 <_dl_mcount_wrapper_check@plt>
     adc:	ldp	x0, x1, [sp, #136]
     ae0:	mov	x5, x28
     ae4:	ldr	w7, [sp, #168]
     ae8:	mov	x3, x19
     aec:	add	x2, sp, #0xc8
     af0:	mov	w6, #0x0                   	// #0
     af4:	mov	x4, #0x0                   	// #0
     af8:	blr	x25
     afc:	mov	w7, w0
     b00:	ldr	w9, [sp, #112]
     b04:	cmp	w0, #0x4
     b08:	adrp	x18, 1000 <gconv@@Base+0x728>
     b0c:	ldp	x14, x15, [sp, #96]
     b10:	b.eq	bf0 <gconv@@Base+0x318>  // b.none
     b14:	ldr	x9, [sp, #200]
     b18:	cmp	x9, x19
     b1c:	b.ne	e74 <gconv@@Base+0x59c>  // b.any
     b20:	ldr	x0, [sp, #120]
     b24:	ldr	x0, [x0, #96]
     b28:	cbnz	w7, 102c <gconv@@Base+0x754>
     b2c:	ldr	x24, [x21]
     b30:	ldr	x22, [x23]
     b34:	ldr	x27, [sp, #192]
     b38:	b	9d0 <gconv@@Base+0xf8>
     b3c:	mov	w0, #0x1c00                	// #7168
     b40:	cmp	w0, w8, lsr #7
     b44:	b.eq	fc4 <gconv@@Base+0x6ec>  // b.none
     b48:	ldr	x0, [sp, #152]
     b4c:	cbz	x0, 1238 <gconv@@Base+0x960>
     b50:	ldr	w0, [x21, #16]
     b54:	tbnz	w0, #3, c20 <gconv@@Base+0x348>
     b58:	ldr	x0, [sp, #208]
     b5c:	tbnz	w7, #1, c8c <gconv@@Base+0x3b4>
     b60:	mov	w9, #0x6                   	// #6
     b64:	b	aa0 <gconv@@Base+0x1c8>
     b68:	cmp	x20, x22
     b6c:	b.eq	c78 <gconv@@Base+0x3a0>  // b.none
     b70:	add	x0, x24, #0x4
     b74:	mov	x1, x22
     b78:	cmp	x0, x26
     b7c:	b.hi	fd0 <gconv@@Base+0x6f8>  // b.pmore
     b80:	ldrb	w2, [x1], #1
     b84:	mov	x19, x0
     b88:	cmp	x20, x1
     b8c:	ldr	w0, [x14, x2, lsl #2]
     b90:	stur	w0, [x19, #-4]
     b94:	b.eq	c80 <gconv@@Base+0x3a8>  // b.none
     b98:	add	x0, x19, #0x4
     b9c:	cmp	x26, x0
     ba0:	b.cs	b80 <gconv@@Base+0x2a8>  // b.hs, b.nlast
     ba4:	mov	w9, #0x5                   	// #5
     ba8:	str	x1, [x23]
     bac:	ldr	x0, [sp, #128]
     bb0:	cbz	x0, aac <gconv@@Base+0x1d4>
     bb4:	ldp	x23, x24, [sp, #48]
     bb8:	str	x19, [x0]
     bbc:	adrp	x0, 12000 <gconv@@Base+0x11728>
     bc0:	ldr	x0, [x0, #4056]
     bc4:	ldr	x1, [sp, #232]
     bc8:	ldr	x0, [x0]
     bcc:	eor	x0, x1, x0
     bd0:	cbnz	x0, 14c0 <gconv@@Base+0xbe8>
     bd4:	mov	w0, w9
     bd8:	ldp	x19, x20, [sp, #16]
     bdc:	ldp	x21, x22, [sp, #32]
     be0:	ldp	x25, x26, [sp, #64]
     be4:	ldp	x27, x28, [sp, #80]
     be8:	ldp	x29, x30, [sp], #240
     bec:	ret
     bf0:	cmp	w9, #0x5
     bf4:	b.eq	cec <gconv@@Base+0x414>  // b.none
     bf8:	ldr	x0, [sp, #120]
     bfc:	mov	w7, w9
     c00:	ldr	x0, [x0, #96]
     c04:	b	b28 <gconv@@Base+0x250>
     c08:	mov	w9, #0x7                   	// #7
     c0c:	ldr	x0, [sp, #208]
     c10:	b	aa0 <gconv@@Base+0x1c8>
     c14:	mov	w9, #0x5                   	// #5
     c18:	ldr	x0, [sp, #208]
     c1c:	b	aa0 <gconv@@Base+0x1c8>
     c20:	ldp	x6, x5, [sp, #152]
     c24:	mov	x4, x20
     c28:	ldr	x2, [x23]
     c2c:	mov	x1, x21
     c30:	ldr	x0, [sp, #120]
     c34:	str	x3, [sp, #96]
     c38:	str	w7, [sp, #104]
     c3c:	str	x14, [sp, #112]
     c40:	str	x15, [sp, #176]
     c44:	bl	700 <__gconv_transliterate@plt>
     c48:	ldr	w7, [sp, #104]
     c4c:	mov	w9, w0
     c50:	cmp	w0, #0x6
     c54:	adrp	x18, 1000 <gconv@@Base+0x728>
     c58:	ldr	x3, [sp, #96]
     c5c:	ldr	x14, [sp, #112]
     c60:	ldr	x15, [sp, #176]
     c64:	b.eq	fbc <gconv@@Base+0x6e4>  // b.none
     c68:	cmp	w0, #0x5
     c6c:	ldp	x0, x19, [sp, #208]
     c70:	b.ne	a94 <gconv@@Base+0x1bc>  // b.any
     c74:	b	aa0 <gconv@@Base+0x1c8>
     c78:	mov	x1, x20
     c7c:	mov	x19, x24
     c80:	mov	w9, #0x4                   	// #4
     c84:	str	x1, [x23]
     c88:	b	bac <gconv@@Base+0x2d4>
     c8c:	ldr	x2, [sp, #152]
     c90:	add	x0, x0, #0x4
     c94:	mov	w9, #0x6                   	// #6
     c98:	str	x0, [sp, #208]
     c9c:	ldr	x1, [x2]
     ca0:	add	x1, x1, #0x1
     ca4:	str	x1, [x2]
     ca8:	b	a94 <gconv@@Base+0x1bc>
     cac:	mov	x26, x28
     cb0:	mov	x27, x23
     cb4:	ldr	x1, [x28]
     cb8:	ldr	x28, [sp, #120]
     cbc:	ldr	x2, [sp, #192]
     cc0:	ldr	x0, [x28, #96]
     cc4:	str	x19, [x21]
     cc8:	add	x1, x1, x2
     ccc:	str	x1, [x26]
     cd0:	cmp	x0, #0x0
     cd4:	ldr	w0, [sp, #172]
     cd8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     cdc:	ccmp	w9, #0x7, #0x0, ne  // ne = any
     ce0:	b.eq	1170 <gconv@@Base+0x898>  // b.none
     ce4:	ldp	x23, x24, [sp, #48]
     ce8:	b	bbc <gconv@@Base+0x2e4>
     cec:	ldr	x0, [sp, #120]
     cf0:	ldr	x0, [x0, #96]
     cf4:	b	b2c <gconv@@Base+0x254>
     cf8:	ldr	x0, [sp, #120]
     cfc:	mov	w7, w9
     d00:	ldr	x0, [x0, #96]
     d04:	b	b28 <gconv@@Base+0x250>
     d08:	ldr	x7, [x21, #32]
     d0c:	ldr	w3, [x7]
     d10:	ands	w4, w3, #0x7
     d14:	b.eq	9a8 <gconv@@Base+0xd0>  // b.none
     d18:	cbnz	x8, 1498 <gconv@@Base+0xbc0>
     d1c:	stp	x22, x24, [sp, #208]
     d20:	cmp	w4, #0x4
     d24:	b.hi	1478 <gconv@@Base+0xba0>  // b.pmore
     d28:	mov	w19, w4
     d2c:	cbz	w4, 1250 <gconv@@Base+0x978>
     d30:	add	x6, x7, #0x3
     d34:	add	x11, sp, #0xe0
     d38:	mov	x0, #0x1                   	// #1
     d3c:	add	x1, x11, x0
     d40:	ldrb	w5, [x6, x0]
     d44:	cmp	x0, x19
     d48:	add	x0, x0, #0x1
     d4c:	sturb	w5, [x1, #-1]
     d50:	b.ne	d3c <gconv@@Base+0x464>  // b.any
     d54:	mov	x0, #0x4                   	// #4
     d58:	sub	x0, x0, x19
     d5c:	add	x0, x22, x0
     d60:	cmp	x20, x0
     d64:	b.cc	1310 <gconv@@Base+0xa38>  // b.lo, b.ul, b.last
     d68:	add	x0, x22, #0x1
     d6c:	add	x11, sp, #0xe0
     d70:	cmp	x24, x23
     d74:	b.cs	1244 <gconv@@Base+0x96c>  // b.hs, b.nlast
     d78:	add	x19, x19, #0x1
     d7c:	str	x0, [sp, #208]
     d80:	add	x1, x11, x19
     d84:	cmp	x19, #0x3
     d88:	ldurb	w2, [x0, #-1]
     d8c:	ccmp	x20, x0, #0x0, ls  // ls = plast
     d90:	add	x0, x0, #0x1
     d94:	sturb	w2, [x1, #-1]
     d98:	b.hi	d78 <gconv@@Base+0x4a0>  // b.pmore
     d9c:	ldr	w5, [sp, #224]
     da0:	mov	w0, #0xfffe                	// #65534
     da4:	str	x11, [sp, #208]
     da8:	cmp	w5, w0
     dac:	b.hi	1348 <gconv@@Base+0xa70>  // b.pmore
     db0:	mov	w1, w5
     db4:	cmp	w5, #0x81
     db8:	adrp	x3, 1000 <gconv@@Base+0x728>
     dbc:	b.ls	dfc <gconv@@Base+0x524>  // b.plast
     dc0:	adrp	x3, 1000 <gconv@@Base+0x728>
     dc4:	add	x1, x3, #0x710
     dc8:	add	x1, x1, #0x400
     dcc:	mov	w2, #0x90                  	// #144
     dd0:	b	ddc <gconv@@Base+0x504>
     dd4:	ldrh	w2, [x0, #10]
     dd8:	mov	x1, x0
     ddc:	cmp	w5, w2
     de0:	add	x0, x1, #0x8
     de4:	b.hi	dd4 <gconv@@Base+0x4fc>  // b.pmore
     de8:	ldrh	w0, [x0]
     dec:	cmp	w5, w0
     df0:	b.cc	12b8 <gconv@@Base+0x9e0>  // b.lo, b.ul, b.last
     df4:	ldr	w1, [x1, #12]
     df8:	add	w1, w5, w1
     dfc:	add	x0, x3, #0x710
     e00:	add	x0, x0, #0x480
     e04:	ldrb	w0, [x0, w1, uxtw]
     e08:	cmp	w0, #0x0
     e0c:	ccmp	w5, #0x0, #0x4, eq  // eq = none
     e10:	b.ne	12b8 <gconv@@Base+0x9e0>  // b.any
     e14:	add	x1, x24, #0x1
     e18:	str	x1, [sp, #216]
     e1c:	strb	w0, [x24]
     e20:	ldr	x0, [sp, #208]
     e24:	add	x0, x0, #0x4
     e28:	str	x0, [sp, #208]
     e2c:	cmp	x0, x11
     e30:	b.eq	12a8 <gconv@@Base+0x9d0>  // b.none
     e34:	ldr	w3, [x7]
     e38:	sub	x11, x0, x11
     e3c:	and	w4, w3, #0x7
     e40:	mov	w0, w4
     e44:	cmp	x0, x11
     e48:	b.ge	1550 <gconv@@Base+0xc78>  // b.tcont
     e4c:	ldr	x22, [x27]
     e50:	sub	x0, x11, x0
     e54:	and	w3, w3, #0xfffffff8
     e58:	add	x22, x22, x0
     e5c:	str	x22, [x27]
     e60:	ldr	x11, [sp, #192]
     e64:	ldr	x0, [x28, #96]
     e68:	ldr	x24, [sp, #216]
     e6c:	str	w3, [x7]
     e70:	b	9a8 <gconv@@Base+0xd0>
     e74:	mov	x0, #0x0                   	// #0
     e78:	cbz	x28, e80 <gconv@@Base+0x5a8>
     e7c:	ldr	x0, [x28]
     e80:	ldr	x1, [sp, #192]
     e84:	add	x0, x0, x1
     e88:	cmp	x0, x27
     e8c:	b.eq	1088 <gconv@@Base+0x7b0>  // b.none
     e90:	ldr	x0, [sp, #120]
     e94:	str	x22, [x23]
     e98:	ldr	x0, [x0, #96]
     e9c:	cbz	x0, 11c4 <gconv@@Base+0x8ec>
     ea0:	stp	x22, x24, [sp, #208]
     ea4:	cmp	x20, x22
     ea8:	ldr	w19, [x21, #16]
     eac:	b.eq	1440 <gconv@@Base+0xb68>  // b.none
     eb0:	add	x27, sp, #0xd0
     eb4:	mov	x4, x24
     eb8:	mov	x3, x27
     ebc:	mov	x27, x24
     ec0:	mov	x24, x21
     ec4:	mov	x10, x28
     ec8:	ldr	x21, [sp, #152]
     ecc:	mov	x28, x25
     ed0:	mov	w25, w19
     ed4:	mov	x19, x9
     ed8:	mov	x9, x26
     edc:	mov	x26, x23
     ee0:	mov	x23, x15
     ee4:	mov	x6, #0x4                   	// #4
     ee8:	add	x0, x22, #0x4
     eec:	cmp	x20, x0
     ef0:	b.cc	1208 <gconv@@Base+0x930>  // b.lo, b.ul, b.last
     ef4:	cmp	x19, x4
     ef8:	b.ls	125c <gconv@@Base+0x984>  // b.plast
     efc:	ldr	w8, [x22]
     f00:	mov	w1, #0xfffe                	// #65534
     f04:	cmp	w8, w1
     f08:	b.hi	128c <gconv@@Base+0x9b4>  // b.pmore
     f0c:	mov	w0, w8
     f10:	cmp	w8, #0x81
     f14:	mov	x2, x23
     f18:	mov	w5, #0x90                  	// #144
     f1c:	b.hi	f2c <gconv@@Base+0x654>  // b.pmore
     f20:	b	f4c <gconv@@Base+0x674>
     f24:	ldrh	w5, [x0, #10]
     f28:	mov	x2, x0
     f2c:	cmp	w8, w5
     f30:	add	x0, x2, #0x8
     f34:	b.hi	f24 <gconv@@Base+0x64c>  // b.pmore
     f38:	ldrh	w0, [x0]
     f3c:	cmp	w8, w0
     f40:	b.cc	1038 <gconv@@Base+0x760>  // b.lo, b.ul, b.last
     f44:	ldr	w0, [x2, #12]
     f48:	add	w0, w8, w0
     f4c:	add	x1, x18, #0x710
     f50:	add	x1, x1, #0x480
     f54:	ldrb	w0, [x1, w0, uxtw]
     f58:	cmp	w0, #0x0
     f5c:	ccmp	w8, #0x0, #0x4, eq  // eq = none
     f60:	b.ne	1038 <gconv@@Base+0x760>  // b.any
     f64:	add	x1, x4, #0x1
     f68:	str	x1, [sp, #216]
     f6c:	strb	w0, [x4]
     f70:	ldp	x22, x4, [sp, #208]
     f74:	add	x22, x22, #0x4
     f78:	str	x22, [sp, #208]
     f7c:	cmp	x20, x22
     f80:	b.ne	ee8 <gconv@@Base+0x610>  // b.any
     f84:	mov	x15, x23
     f88:	mov	x23, x26
     f8c:	mov	x26, x9
     f90:	mov	x25, x28
     f94:	ldr	x9, [sp, #200]
     f98:	mov	x21, x24
     f9c:	mov	x28, x10
     fa0:	mov	x24, x27
     fa4:	str	x20, [x23]
     fa8:	cmp	x4, x9
     fac:	b.ne	1218 <gconv@@Base+0x940>  // b.any
     fb0:	cmp	x6, #0x5
     fb4:	b.eq	1150 <gconv@@Base+0x878>  // b.none
     fb8:	b	105c <gconv@@Base+0x784>
     fbc:	ldr	x19, [sp, #216]
     fc0:	b	b58 <gconv@@Base+0x280>
     fc4:	mov	x0, x1
     fc8:	str	x1, [sp, #208]
     fcc:	b	a94 <gconv@@Base+0x1bc>
     fd0:	mov	x19, x24
     fd4:	mov	w9, #0x5                   	// #5
     fd8:	str	x1, [x23]
     fdc:	b	bac <gconv@@Base+0x2d4>
     fe0:	cbnz	x8, 1454 <gconv@@Base+0xb7c>
     fe4:	ldr	x0, [x21, #32]
     fe8:	mov	w9, #0x0                   	// #0
     fec:	str	xzr, [x0]
     ff0:	ldr	w0, [x21, #16]
     ff4:	tbnz	w0, #0, bbc <gconv@@Base+0x2e4>
     ff8:	mov	x0, x25
     ffc:	str	w6, [sp, #96]
    1000:	bl	740 <_dl_mcount_wrapper_check@plt>
    1004:	ldp	x0, x1, [sp, #136]
    1008:	mov	x5, x26
    100c:	ldr	w6, [sp, #96]
    1010:	mov	x4, #0x0                   	// #0
    1014:	ldr	w7, [sp, #168]
    1018:	mov	x3, #0x0                   	// #0
    101c:	mov	x2, #0x0                   	// #0
    1020:	blr	x25
    1024:	mov	w9, w0
    1028:	b	bbc <gconv@@Base+0x2e4>
    102c:	mov	x27, x23
    1030:	mov	w9, w7
    1034:	b	cd0 <gconv@@Base+0x3f8>
    1038:	cbz	x21, 1208 <gconv@@Base+0x930>
    103c:	ldr	w0, [x24, #16]
    1040:	tbnz	w0, #3, 10cc <gconv@@Base+0x7f4>
    1044:	ldr	x22, [sp, #208]
    1048:	tbnz	w25, #1, 10b0 <gconv@@Base+0x7d8>
    104c:	ldr	x0, [sp, #200]
    1050:	str	x22, [x26]
    1054:	cmp	x4, x0
    1058:	b.ne	1218 <gconv@@Base+0x940>  // b.any
    105c:	adrp	x3, 1000 <gconv@@Base+0x728>
    1060:	adrp	x1, 1000 <gconv@@Base+0x728>
    1064:	adrp	x0, 1000 <gconv@@Base+0x728>
    1068:	add	x3, x3, #0x708
    106c:	add	x1, x1, #0x590
    1070:	add	x0, x0, #0x6c0
    1074:	mov	w2, #0x2eb                 	// #747
    1078:	bl	750 <__assert_fail@plt>
    107c:	mov	x0, x20
    1080:	mov	w9, #0x4                   	// #4
    1084:	b	aa0 <gconv@@Base+0x1c8>
    1088:	ldr	x0, [sp, #120]
    108c:	sub	x9, x19, x9
    1090:	ldr	x1, [x23]
    1094:	ldr	x0, [x0, #96]
    1098:	cbz	x0, 12f8 <gconv@@Base+0xa20>
    109c:	ldr	x0, [sp, #120]
    10a0:	sub	x9, x1, x9, lsl #2
    10a4:	str	x9, [x23]
    10a8:	ldr	x0, [x0, #96]
    10ac:	b	b28 <gconv@@Base+0x250>
    10b0:	ldr	x0, [x21]
    10b4:	add	x22, x22, #0x4
    10b8:	mov	x6, #0x6                   	// #6
    10bc:	str	x22, [sp, #208]
    10c0:	add	x0, x0, #0x1
    10c4:	str	x0, [x21]
    10c8:	b	f7c <gconv@@Base+0x6a4>
    10cc:	ldr	x2, [x26]
    10d0:	mov	x6, x21
    10d4:	ldr	x0, [sp, #120]
    10d8:	mov	x4, x20
    10dc:	ldr	x5, [sp, #160]
    10e0:	mov	x1, x24
    10e4:	str	x3, [sp, #96]
    10e8:	str	w7, [sp, #104]
    10ec:	str	x9, [sp, #112]
    10f0:	stp	x10, x14, [sp, #176]
    10f4:	bl	700 <__gconv_transliterate@plt>
    10f8:	sxtw	x6, w0
    10fc:	ldr	w7, [sp, #104]
    1100:	cmp	w6, #0x6
    1104:	adrp	x18, 1000 <gconv@@Base+0x728>
    1108:	ldr	x3, [sp, #96]
    110c:	ldr	x9, [sp, #112]
    1110:	ldp	x10, x14, [sp, #176]
    1114:	b.eq	144c <gconv@@Base+0xb74>  // b.none
    1118:	cmp	w6, #0x5
    111c:	ldp	x22, x4, [sp, #208]
    1120:	b.ne	f7c <gconv@@Base+0x6a4>  // b.any
    1124:	mov	x15, x23
    1128:	mov	x23, x26
    112c:	ldr	x0, [sp, #200]
    1130:	mov	x25, x28
    1134:	str	x22, [x23]
    1138:	mov	x21, x24
    113c:	mov	x28, x10
    1140:	mov	x24, x27
    1144:	mov	x26, x9
    1148:	cmp	x0, x4
    114c:	b.ne	1218 <gconv@@Base+0x940>  // b.any
    1150:	ldr	x0, [sp, #120]
    1154:	cmp	x24, x4
    1158:	ldr	x0, [x0, #96]
    115c:	b.ne	b28 <gconv@@Base+0x250>  // b.any
    1160:	ldr	w1, [x21, #20]
    1164:	sub	w1, w1, #0x1
    1168:	str	w1, [x21, #20]
    116c:	b	b28 <gconv@@Base+0x250>
    1170:	ldr	x0, [x27]
    1174:	sub	x1, x20, x0
    1178:	cmp	x1, #0x3
    117c:	b.gt	1530 <gconv@@Base+0xc58>
    1180:	ldr	x2, [x21, #32]
    1184:	cmp	x0, x20
    1188:	add	x0, x0, #0x1
    118c:	add	x3, x2, #0x4
    1190:	b.cs	14b8 <gconv@@Base+0xbe0>  // b.hs, b.nlast
    1194:	str	x0, [x27]
    1198:	cmp	x20, x0
    119c:	add	x0, x0, #0x1
    11a0:	ldurb	w4, [x0, #-2]
    11a4:	strb	w4, [x3], #1
    11a8:	b.ne	1194 <gconv@@Base+0x8bc>  // b.any
    11ac:	ldr	w0, [x2]
    11b0:	ldp	x23, x24, [sp, #48]
    11b4:	and	w0, w0, #0xfffffff8
    11b8:	orr	w0, w0, w1
    11bc:	str	w0, [x2]
    11c0:	b	bbc <gconv@@Base+0x2e4>
    11c4:	cmp	x20, x22
    11c8:	b.eq	1440 <gconv@@Base+0xb68>  // b.none
    11cc:	add	x1, x24, #0x4
    11d0:	cmp	x1, x9
    11d4:	b.hi	1434 <gconv@@Base+0xb5c>  // b.pmore
    11d8:	ldrb	w0, [x22], #1
    11dc:	mov	x4, x1
    11e0:	cmp	x20, x22
    11e4:	ldr	w0, [x14, x0, lsl #2]
    11e8:	stur	w0, [x1, #-4]
    11ec:	b.eq	1364 <gconv@@Base+0xa8c>  // b.none
    11f0:	add	x1, x4, #0x4
    11f4:	cmp	x9, x1
    11f8:	b.cs	11d8 <gconv@@Base+0x900>  // b.hs, b.nlast
    11fc:	mov	x6, #0x5                   	// #5
    1200:	str	x22, [x23]
    1204:	b	fa8 <gconv@@Base+0x6d0>
    1208:	ldp	x0, x1, [sp, #200]
    120c:	str	x1, [x26]
    1210:	cmp	x4, x0
    1214:	b.eq	105c <gconv@@Base+0x784>  // b.none
    1218:	adrp	x3, 1000 <gconv@@Base+0x728>
    121c:	adrp	x1, 1000 <gconv@@Base+0x728>
    1220:	adrp	x0, 1000 <gconv@@Base+0x728>
    1224:	add	x3, x3, #0x708
    1228:	add	x1, x1, #0x590
    122c:	add	x0, x0, #0x6a8
    1230:	mov	w2, #0x2ea                 	// #746
    1234:	bl	750 <__assert_fail@plt>
    1238:	mov	w9, #0x6                   	// #6
    123c:	ldr	x0, [sp, #208]
    1240:	b	aa0 <gconv@@Base+0x1c8>
    1244:	mov	w9, #0x5                   	// #5
    1248:	ldp	x23, x24, [sp, #48]
    124c:	b	bbc <gconv@@Base+0x2e4>
    1250:	mov	x0, #0x4                   	// #4
    1254:	mov	x19, #0x0                   	// #0
    1258:	b	d5c <gconv@@Base+0x484>
    125c:	ldp	x0, x1, [sp, #200]
    1260:	mov	x15, x23
    1264:	mov	x23, x26
    1268:	mov	x25, x28
    126c:	mov	x21, x24
    1270:	mov	x28, x10
    1274:	mov	x24, x27
    1278:	mov	x26, x9
    127c:	str	x1, [x23]
    1280:	cmp	x4, x0
    1284:	b.eq	1150 <gconv@@Base+0x878>  // b.none
    1288:	b	1218 <gconv@@Base+0x940>
    128c:	mov	w1, #0x1c00                	// #7168
    1290:	cmp	w1, w8, lsr #7
    1294:	b.ne	1038 <gconv@@Base+0x760>  // b.any
    1298:	mov	x22, x0
    129c:	str	x0, [sp, #208]
    12a0:	b	f7c <gconv@@Base+0x6a4>
    12a4:	cbnz	w9, ce4 <gconv@@Base+0x40c>
    12a8:	ldr	x22, [x27]
    12ac:	ldr	x0, [x28, #96]
    12b0:	ldr	x11, [sp, #192]
    12b4:	b	9a8 <gconv@@Base+0xd0>
    12b8:	ldr	x0, [sp, #152]
    12bc:	cbz	x0, 12ec <gconv@@Base+0xa14>
    12c0:	tbnz	w14, #3, 1370 <gconv@@Base+0xa98>
    12c4:	tbz	w14, #1, 12ec <gconv@@Base+0xa14>
    12c8:	mov	x0, x11
    12cc:	ldr	x2, [sp, #152]
    12d0:	add	x0, x0, #0x4
    12d4:	str	x0, [sp, #208]
    12d8:	ldr	x1, [x2]
    12dc:	add	x1, x1, #0x1
    12e0:	str	x1, [x2]
    12e4:	cmp	x0, x11
    12e8:	b.ne	e34 <gconv@@Base+0x55c>  // b.any
    12ec:	mov	w9, #0x6                   	// #6
    12f0:	ldp	x23, x24, [sp, #48]
    12f4:	b	bbc <gconv@@Base+0x2e4>
    12f8:	add	x0, x9, #0x3
    12fc:	cmp	x9, #0x0
    1300:	csel	x9, x0, x9, lt  // lt = tstop
    1304:	sub	x0, x1, x9, asr #2
    1308:	str	x0, [x23]
    130c:	b	b20 <gconv@@Base+0x248>
    1310:	str	x20, [x27]
    1314:	cmp	x22, x20
    1318:	b.cs	133c <gconv@@Base+0xa64>  // b.hs, b.nlast
    131c:	add	x7, x7, x19
    1320:	add	x22, x22, #0x1
    1324:	str	x22, [sp, #208]
    1328:	cmp	x20, x22
    132c:	add	x7, x7, #0x1
    1330:	ldurb	w0, [x22, #-1]
    1334:	strb	w0, [x7, #3]
    1338:	b.ne	1320 <gconv@@Base+0xa48>  // b.any
    133c:	mov	w9, #0x7                   	// #7
    1340:	ldp	x23, x24, [sp, #48]
    1344:	b	bbc <gconv@@Base+0x2e4>
    1348:	mov	w0, #0x1c00                	// #7168
    134c:	cmp	w0, w5, lsr #7
    1350:	b.ne	12b8 <gconv@@Base+0x9e0>  // b.any
    1354:	add	x0, x11, #0x4
    1358:	mov	x11, #0x4                   	// #4
    135c:	str	x0, [sp, #208]
    1360:	b	e40 <gconv@@Base+0x568>
    1364:	mov	x6, #0x4                   	// #4
    1368:	str	x22, [x23]
    136c:	b	fa8 <gconv@@Base+0x6d0>
    1370:	add	x4, x11, x19
    1374:	mov	x6, x0
    1378:	mov	x2, x22
    137c:	add	x5, sp, #0xd8
    1380:	add	x3, sp, #0xd0
    1384:	mov	x1, x21
    1388:	mov	x0, x28
    138c:	stp	x4, x11, [sp, #96]
    1390:	str	w14, [sp, #112]
    1394:	stp	x7, x8, [sp, #120]
    1398:	bl	700 <__gconv_transliterate@plt>
    139c:	ldr	w14, [sp, #112]
    13a0:	mov	w9, w0
    13a4:	cmp	w0, #0x6
    13a8:	ldr	x11, [sp, #104]
    13ac:	ldp	x7, x8, [sp, #120]
    13b0:	ldr	x0, [sp, #208]
    13b4:	b.eq	1508 <gconv@@Base+0xc30>  // b.none
    13b8:	cmp	x0, x11
    13bc:	ldr	x4, [sp, #96]
    13c0:	b.ne	e34 <gconv@@Base+0x55c>  // b.any
    13c4:	cmp	w9, #0x7
    13c8:	b.ne	12a4 <gconv@@Base+0x9cc>  // b.any
    13cc:	add	x0, x11, #0x4
    13d0:	cmp	x4, x0
    13d4:	b.eq	14e8 <gconv@@Base+0xc10>  // b.none
    13d8:	ldr	w0, [x7]
    13dc:	ldr	x1, [x27]
    13e0:	and	x2, x0, #0x7
    13e4:	sub	x2, x19, x2
    13e8:	and	w0, w0, #0xfffffff8
    13ec:	add	x1, x1, x2
    13f0:	str	x1, [x27]
    13f4:	cmp	x19, w0, sxtw
    13f8:	b.le	14c8 <gconv@@Base+0xbf0>
    13fc:	cmp	x19, #0x4
    1400:	b.hi	1510 <gconv@@Base+0xc38>  // b.pmore
    1404:	orr	w0, w0, w19
    1408:	str	w0, [x7]
    140c:	cmp	x4, x11
    1410:	b.ls	133c <gconv@@Base+0xa64>  // b.plast
    1414:	add	x7, x7, #0x4
    1418:	add	x11, x11, #0x1
    141c:	str	x11, [sp, #208]
    1420:	cmp	x4, x11
    1424:	ldurb	w0, [x11, #-1]
    1428:	strb	w0, [x7], #1
    142c:	b.ne	1418 <gconv@@Base+0xb40>  // b.any
    1430:	b	133c <gconv@@Base+0xa64>
    1434:	cmp	x9, x24
    1438:	b.eq	1160 <gconv@@Base+0x888>  // b.none
    143c:	b	1218 <gconv@@Base+0x940>
    1440:	cmp	x9, x24
    1444:	b.eq	105c <gconv@@Base+0x784>  // b.none
    1448:	b	1218 <gconv@@Base+0x940>
    144c:	ldr	x4, [sp, #216]
    1450:	b	1044 <gconv@@Base+0x76c>
    1454:	adrp	x3, 1000 <gconv@@Base+0x728>
    1458:	adrp	x1, 1000 <gconv@@Base+0x728>
    145c:	adrp	x0, 1000 <gconv@@Base+0x728>
    1460:	add	x3, x3, #0x708
    1464:	add	x1, x1, #0x590
    1468:	add	x0, x0, #0x5a8
    146c:	mov	w2, #0x1a4                 	// #420
    1470:	stp	x23, x24, [sp, #48]
    1474:	bl	750 <__assert_fail@plt>
    1478:	adrp	x3, 1000 <gconv@@Base+0x728>
    147c:	adrp	x1, 1000 <gconv@@Base+0x728>
    1480:	adrp	x0, 1000 <gconv@@Base+0x728>
    1484:	add	x3, x3, #0x6f8
    1488:	add	x1, x1, #0x5c0
    148c:	add	x0, x0, #0x5d0
    1490:	mov	w2, #0x18b                 	// #395
    1494:	bl	750 <__assert_fail@plt>
    1498:	adrp	x3, 1000 <gconv@@Base+0x728>
    149c:	adrp	x1, 1000 <gconv@@Base+0x728>
    14a0:	adrp	x0, 1000 <gconv@@Base+0x728>
    14a4:	add	x3, x3, #0x708
    14a8:	add	x1, x1, #0x590
    14ac:	add	x0, x0, #0x5a8
    14b0:	mov	w2, #0x234                 	// #564
    14b4:	bl	750 <__assert_fail@plt>
    14b8:	mov	w1, #0x0                   	// #0
    14bc:	b	11ac <gconv@@Base+0x8d4>
    14c0:	stp	x23, x24, [sp, #48]
    14c4:	bl	710 <__stack_chk_fail@plt>
    14c8:	adrp	x3, 1000 <gconv@@Base+0x728>
    14cc:	adrp	x1, 1000 <gconv@@Base+0x728>
    14d0:	adrp	x0, 1000 <gconv@@Base+0x728>
    14d4:	add	x3, x3, #0x6f8
    14d8:	add	x1, x1, #0x5c0
    14dc:	add	x0, x0, #0x650
    14e0:	mov	w2, #0x1e5                 	// #485
    14e4:	bl	750 <__assert_fail@plt>
    14e8:	adrp	x3, 1000 <gconv@@Base+0x728>
    14ec:	adrp	x1, 1000 <gconv@@Base+0x728>
    14f0:	adrp	x0, 1000 <gconv@@Base+0x728>
    14f4:	add	x3, x3, #0x6f8
    14f8:	add	x1, x1, #0x5c0
    14fc:	add	x0, x0, #0x628
    1500:	mov	w2, #0x1db                 	// #475
    1504:	bl	750 <__assert_fail@plt>
    1508:	tbz	w14, #1, 12e4 <gconv@@Base+0xa0c>
    150c:	b	12cc <gconv@@Base+0x9f4>
    1510:	adrp	x3, 1000 <gconv@@Base+0x728>
    1514:	adrp	x1, 1000 <gconv@@Base+0x728>
    1518:	adrp	x0, 1000 <gconv@@Base+0x728>
    151c:	add	x3, x3, #0x6f8
    1520:	add	x1, x1, #0x5c0
    1524:	add	x0, x0, #0x678
    1528:	mov	w2, #0x1e6                 	// #486
    152c:	bl	750 <__assert_fail@plt>
    1530:	adrp	x3, 1000 <gconv@@Base+0x728>
    1534:	adrp	x1, 1000 <gconv@@Base+0x728>
    1538:	adrp	x0, 1000 <gconv@@Base+0x728>
    153c:	add	x3, x3, #0x708
    1540:	add	x1, x1, #0x590
    1544:	add	x0, x0, #0x6e0
    1548:	mov	w2, #0x31e                 	// #798
    154c:	bl	750 <__assert_fail@plt>
    1550:	adrp	x3, 1000 <gconv@@Base+0x728>
    1554:	adrp	x1, 1000 <gconv@@Base+0x728>
    1558:	adrp	x0, 1000 <gconv@@Base+0x728>
    155c:	add	x3, x3, #0x6f8
    1560:	add	x1, x1, #0x5c0
    1564:	add	x0, x0, #0x600
    1568:	mov	w2, #0x1c9                 	// #457
    156c:	bl	750 <__assert_fail@plt>

Disassembly of section .fini:

0000000000001570 <.fini>:
    1570:	stp	x29, x30, [sp, #-16]!
    1574:	mov	x29, sp
    1578:	ldp	x29, x30, [sp], #16
    157c:	ret
