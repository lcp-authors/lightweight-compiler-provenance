
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ordchr.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000608 <.init>:
 608:	stp	x29, x30, [sp, #-16]!
 60c:	mov	x29, sp
 610:	bl	6a0 <fprintf@plt+0x10>
 614:	ldp	x29, x30, [sp], #16
 618:	ret

Disassembly of section .plt:

0000000000000620 <exit@plt-0x20>:
 620:	stp	x16, x30, [sp, #-16]!
 624:	adrp	x16, 10000 <dl_load@@Base+0xf6c8>
 628:	ldr	x17, [x16, #4088]
 62c:	add	x16, x16, #0xff8
 630:	br	x17
 634:	nop
 638:	nop
 63c:	nop

0000000000000640 <exit@plt>:
 640:	adrp	x16, 11000 <exit@GLIBC_2.17>
 644:	ldr	x17, [x16]
 648:	add	x16, x16, #0x0
 64c:	br	x17

0000000000000650 <__cxa_finalize@plt>:
 650:	adrp	x16, 11000 <exit@GLIBC_2.17>
 654:	ldr	x17, [x16, #8]
 658:	add	x16, x16, #0x8
 65c:	br	x17

0000000000000660 <__gmon_start__@plt>:
 660:	adrp	x16, 11000 <exit@GLIBC_2.17>
 664:	ldr	x17, [x16, #16]
 668:	add	x16, x16, #0x10
 66c:	br	x17

0000000000000670 <fwrite@plt>:
 670:	adrp	x16, 11000 <exit@GLIBC_2.17>
 674:	ldr	x17, [x16, #24]
 678:	add	x16, x16, #0x18
 67c:	br	x17

0000000000000680 <dcgettext@plt>:
 680:	adrp	x16, 11000 <exit@GLIBC_2.17>
 684:	ldr	x17, [x16, #32]
 688:	add	x16, x16, #0x20
 68c:	br	x17

0000000000000690 <fprintf@plt>:
 690:	adrp	x16, 11000 <exit@GLIBC_2.17>
 694:	ldr	x17, [x16, #40]
 698:	add	x16, x16, #0x28
 69c:	br	x17

Disassembly of section .text:

00000000000006a0 <dl_load@@Base-0x298>:
 6a0:	adrp	x0, 10000 <dl_load@@Base+0xf6c8>
 6a4:	ldr	x0, [x0, #4056]
 6a8:	cbz	x0, 6b0 <fprintf@plt+0x20>
 6ac:	b	660 <__gmon_start__@plt>
 6b0:	ret
 6b4:	nop
 6b8:	adrp	x0, 11000 <dl_load@@Base+0x106c8>
 6bc:	add	x0, x0, #0x98
 6c0:	adrp	x1, 11000 <dl_load@@Base+0x106c8>
 6c4:	add	x1, x1, #0x98
 6c8:	cmp	x1, x0
 6cc:	b.eq	6e4 <fprintf@plt+0x54>  // b.none
 6d0:	adrp	x1, 10000 <dl_load@@Base+0xf6c8>
 6d4:	ldr	x1, [x1, #4032]
 6d8:	cbz	x1, 6e4 <fprintf@plt+0x54>
 6dc:	mov	x16, x1
 6e0:	br	x16
 6e4:	ret
 6e8:	adrp	x0, 11000 <dl_load@@Base+0x106c8>
 6ec:	add	x0, x0, #0x98
 6f0:	adrp	x1, 11000 <dl_load@@Base+0x106c8>
 6f4:	add	x1, x1, #0x98
 6f8:	sub	x1, x1, x0
 6fc:	lsr	x2, x1, #63
 700:	add	x1, x2, x1, asr #3
 704:	cmp	xzr, x1, asr #1
 708:	asr	x1, x1, #1
 70c:	b.eq	724 <fprintf@plt+0x94>  // b.none
 710:	adrp	x2, 10000 <dl_load@@Base+0xf6c8>
 714:	ldr	x2, [x2, #4064]
 718:	cbz	x2, 724 <fprintf@plt+0x94>
 71c:	mov	x16, x2
 720:	br	x16
 724:	ret
 728:	stp	x29, x30, [sp, #-32]!
 72c:	mov	x29, sp
 730:	str	x19, [sp, #16]
 734:	adrp	x19, 11000 <dl_load@@Base+0x106c8>
 738:	ldrb	w0, [x19, #152]
 73c:	cbnz	w0, 764 <fprintf@plt+0xd4>
 740:	adrp	x0, 10000 <dl_load@@Base+0xf6c8>
 744:	ldr	x0, [x0, #4040]
 748:	cbz	x0, 758 <fprintf@plt+0xc8>
 74c:	adrp	x0, 11000 <dl_load@@Base+0x106c8>
 750:	ldr	x0, [x0, #48]
 754:	bl	650 <__cxa_finalize@plt>
 758:	bl	6b8 <fprintf@plt+0x28>
 75c:	mov	w0, #0x1                   	// #1
 760:	strb	w0, [x19, #152]
 764:	ldr	x19, [sp, #16]
 768:	ldp	x29, x30, [sp], #32
 76c:	ret
 770:	b	6e8 <fprintf@plt+0x58>
 774:	nop
 778:	stp	x29, x30, [sp, #-80]!
 77c:	mov	w2, #0x2                   	// #2
 780:	mov	x29, sp
 784:	stp	x19, x20, [sp, #16]
 788:	adrp	x20, 11000 <dl_load@@Base+0x106c8>
 78c:	mov	x19, x1
 790:	str	x21, [sp, #32]
 794:	add	x21, x20, #0xa0
 798:	ldr	x0, [x20, #160]
 79c:	add	x3, sp, #0x30
 7a0:	ldr	x4, [x21, #8]
 7a4:	mov	x1, #0x0                   	// #0
 7a8:	str	d8, [sp, #40]
 7ac:	ldr	x4, [x4, #152]
 7b0:	blr	x4
 7b4:	cbz	w0, 7ec <fprintf@plt+0x15c>
 7b8:	ldr	x0, [sp, #56]
 7bc:	ldrb	w0, [x0]
 7c0:	ucvtf	d8, w0
 7c4:	mov	w1, #0x1                   	// #1
 7c8:	mov	x0, x19
 7cc:	ldr	x21, [sp, #32]
 7d0:	str	w1, [x19]
 7d4:	str	wzr, [x19, #16]
 7d8:	str	d8, [x19, #8]
 7dc:	ldp	x19, x20, [sp, #16]
 7e0:	ldr	d8, [sp, #40]
 7e4:	ldp	x29, x30, [sp], #80
 7e8:	ret
 7ec:	ldr	x0, [x21, #8]
 7f0:	fmov	d8, #-1.000000000000000000e+00
 7f4:	ldr	w1, [x0, #24]
 7f8:	cbz	w1, 7c4 <fprintf@plt+0x134>
 7fc:	ldr	x21, [x20, #160]
 800:	mov	w2, #0x5                   	// #5
 804:	ldr	x20, [x0, #112]
 808:	adrp	x1, 0 <exit@plt-0x640>
 80c:	mov	x0, #0x0                   	// #0
 810:	add	x1, x1, #0xa68
 814:	bl	680 <dcgettext@plt>
 818:	mov	x1, x0
 81c:	mov	x0, x21
 820:	blr	x20
 824:	b	7c4 <fprintf@plt+0x134>
 828:	stp	x29, x30, [sp, #-96]!
 82c:	mov	w2, #0x1                   	// #1
 830:	mov	x29, sp
 834:	stp	x19, x20, [sp, #16]
 838:	adrp	x20, 11000 <dl_load@@Base+0x106c8>
 83c:	mov	x19, x1
 840:	stp	x21, x22, [sp, #32]
 844:	add	x22, x20, #0xa0
 848:	add	x3, sp, #0x40
 84c:	ldr	x0, [x20, #160]
 850:	stp	x23, x24, [sp, #48]
 854:	mov	x1, #0x0                   	// #0
 858:	ldr	x4, [x22, #8]
 85c:	ldr	x4, [x4, #152]
 860:	blr	x4
 864:	cbz	w0, 8cc <fprintf@plt+0x23c>
 868:	ldr	d0, [sp, #72]
 86c:	ldr	x24, [x20, #160]
 870:	fcvtzu	w21, d0
 874:	ldr	x23, [x22, #8]
 878:	and	w21, w21, #0xff
 87c:	stp	xzr, xzr, [x19, #16]
 880:	mov	x2, #0x1                   	// #1
 884:	mov	w1, #0x2                   	// #2
 888:	stp	xzr, xzr, [x19]
 88c:	mov	x0, #0x2                   	// #2
 890:	str	x2, [x19, #16]
 894:	str	w1, [x19]
 898:	ldr	x1, [x23, #280]
 89c:	blr	x1
 8a0:	mov	x20, x0
 8a4:	cbz	x0, 910 <fprintf@plt+0x280>
 8a8:	strb	w21, [x20]
 8ac:	mov	x0, x19
 8b0:	strb	wzr, [x20, #1]
 8b4:	ldp	x21, x22, [sp, #32]
 8b8:	ldp	x23, x24, [sp, #48]
 8bc:	str	x20, [x19, #8]
 8c0:	ldp	x19, x20, [sp, #16]
 8c4:	ldp	x29, x30, [sp], #96
 8c8:	ret
 8cc:	ldr	x23, [x22, #8]
 8d0:	mov	w21, #0x0                   	// #0
 8d4:	ldr	x24, [x20, #160]
 8d8:	ldr	w0, [x23, #24]
 8dc:	cbz	w0, 87c <fprintf@plt+0x1ec>
 8e0:	ldr	x23, [x23, #112]
 8e4:	mov	w2, #0x5                   	// #5
 8e8:	adrp	x1, 0 <exit@plt-0x640>
 8ec:	mov	x0, #0x0                   	// #0
 8f0:	add	x1, x1, #0xa98
 8f4:	bl	680 <dcgettext@plt>
 8f8:	mov	x1, x0
 8fc:	mov	x0, x24
 900:	blr	x23
 904:	ldr	x24, [x20, #160]
 908:	ldr	x23, [x22, #8]
 90c:	b	87c <fprintf@plt+0x1ec>
 910:	ldr	x4, [x23, #96]
 914:	mov	x0, x24
 918:	adrp	x2, 0 <exit@plt-0x640>
 91c:	adrp	x1, 0 <exit@plt-0x640>
 920:	add	x2, x2, #0xac8
 924:	add	x1, x1, #0xad8
 928:	mov	x3, #0x2                   	// #2
 92c:	blr	x4
 930:	b	8a8 <fprintf@plt+0x218>
 934:	nop

0000000000000938 <dl_load@@Base>:
 938:	stp	x29, x30, [sp, #-64]!
 93c:	mov	x2, x0
 940:	mov	x0, x1
 944:	mov	x29, sp
 948:	stp	x19, x20, [sp, #16]
 94c:	adrp	x19, 11000 <dl_load@@Base+0x106c8>
 950:	add	x20, x19, #0xa0
 954:	stp	x21, x22, [sp, #32]
 958:	stp	x23, x24, [sp, #48]
 95c:	str	x1, [x19, #160]
 960:	ldr	w1, [x2]
 964:	str	x2, [x20, #8]
 968:	cmp	w1, #0x2
 96c:	b.ne	a08 <dl_load@@Base+0xd0>  // b.any
 970:	ldr	w1, [x2, #4]
 974:	tbnz	w1, #31, a08 <dl_load@@Base+0xd0>
 978:	adrp	x19, 11000 <dl_load@@Base+0x106c8>
 97c:	add	x19, x19, #0x38
 980:	adrp	x21, 0 <exit@plt-0x640>
 984:	adrp	x22, 0 <exit@plt-0x640>
 988:	add	x24, x19, #0x60
 98c:	add	x21, x21, #0xb58
 990:	add	x22, x22, #0xb60
 994:	mov	w23, #0x0                   	// #0
 998:	ldr	x1, [x19]
 99c:	cbz	x1, 9dc <dl_load@@Base+0xa4>
 9a0:	ldr	x3, [x2, #48]
 9a4:	mov	x1, x21
 9a8:	mov	x2, x19
 9ac:	blr	x3
 9b0:	cbnz	w0, 9cc <dl_load@@Base+0x94>
 9b4:	ldp	x0, x3, [x20]
 9b8:	add	w23, w23, #0x1
 9bc:	ldr	x2, [x19]
 9c0:	mov	x1, x22
 9c4:	ldr	x3, [x3, #104]
 9c8:	blr	x3
 9cc:	add	x19, x19, #0x30
 9d0:	cmp	x19, x24
 9d4:	ldp	x0, x2, [x20]
 9d8:	b.ne	998 <dl_load@@Base+0x60>  // b.any
 9dc:	ldr	x2, [x2, #88]
 9e0:	adrp	x1, 0 <exit@plt-0x640>
 9e4:	add	x1, x1, #0xb80
 9e8:	blr	x2
 9ec:	cmp	w23, #0x0
 9f0:	cset	w0, eq  // eq = none
 9f4:	ldp	x19, x20, [sp, #16]
 9f8:	ldp	x21, x22, [sp, #32]
 9fc:	ldp	x23, x24, [sp, #48]
 a00:	ldp	x29, x30, [sp], #64
 a04:	ret
 a08:	adrp	x20, 10000 <dl_load@@Base+0xf6c8>
 a0c:	add	x19, x19, #0xa0
 a10:	mov	x2, #0x25                  	// #37
 a14:	mov	x1, #0x1                   	// #1
 a18:	ldr	x20, [x20, #4048]
 a1c:	adrp	x0, 0 <exit@plt-0x640>
 a20:	add	x0, x0, #0xaf8
 a24:	ldr	x3, [x20]
 a28:	bl	670 <fwrite@plt>
 a2c:	ldr	x5, [x19, #8]
 a30:	adrp	x1, 0 <exit@plt-0x640>
 a34:	ldr	x0, [x20]
 a38:	add	x1, x1, #0xb20
 a3c:	ldp	w4, w5, [x5]
 a40:	mov	w3, #0x0                   	// #0
 a44:	mov	w2, #0x2                   	// #2
 a48:	bl	690 <fprintf@plt>
 a4c:	mov	w0, #0x1                   	// #1
 a50:	bl	640 <exit@plt>

Disassembly of section .fini:

0000000000000a54 <.fini>:
 a54:	stp	x29, x30, [sp, #-16]!
 a58:	mov	x29, sp
 a5c:	ldp	x29, x30, [sp], #16
 a60:	ret
