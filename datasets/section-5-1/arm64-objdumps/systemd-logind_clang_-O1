
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-logind_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000222810 <_start>:
  222810:	mov	x29, #0x0                   	// #0
  222814:	mov	x30, #0x0                   	// #0
  222818:	mov	x5, x0
  22281c:	ldr	x1, [sp]
  222820:	add	x2, sp, #0x8
  222824:	mov	x6, sp
  222828:	movz	x0, #0x0, lsl #48
  22282c:	movk	x0, #0x0, lsl #32
  222830:	movk	x0, #0x22, lsl #16
  222834:	movk	x0, #0x2960
  222838:	movz	x3, #0x0, lsl #48
  22283c:	movk	x3, #0x0, lsl #32
  222840:	movk	x3, #0x24, lsl #16
  222844:	movk	x3, #0x588
  222848:	movz	x4, #0x0, lsl #48
  22284c:	movk	x4, #0x0, lsl #32
  222850:	movk	x4, #0x24, lsl #16
  222854:	movk	x4, #0x608
  222858:	bl	240680 <__libc_start_main@plt>
  22285c:	bl	240690 <abort@plt>

0000000000222860 <call_weak_fn>:
  222860:	adrp	x0, 254000 <session_vtable+0x3d0>
  222864:	ldr	x0, [x0, #3328]
  222868:	cbz	x0, 222870 <call_weak_fn+0x10>
  22286c:	b	2406a0 <__gmon_start__@plt>
  222870:	ret

0000000000222874 <deregister_tm_clones>:
  222874:	adrp	x0, 265000 <string_hash_ops+0xf888>
  222878:	add	x0, x0, #0x798
  22287c:	adrp	x1, 265000 <string_hash_ops+0xf888>
  222880:	add	x1, x1, #0x798
  222884:	cmp	x0, x1
  222888:	b.eq	2228bc <deregister_tm_clones+0x48>  // b.none
  22288c:	stp	x29, x30, [sp, #-32]!
  222890:	mov	x29, sp
  222894:	adrp	x0, 206000 <inhibit_what_to_string.buffer+0x206000>
  222898:	ldr	x0, [x0, #3312]
  22289c:	str	x0, [sp, #24]
  2228a0:	mov	x1, x0
  2228a4:	cbz	x1, 2228b4 <deregister_tm_clones+0x40>
  2228a8:	adrp	x0, 265000 <string_hash_ops+0xf888>
  2228ac:	add	x0, x0, #0x798
  2228b0:	blr	x1
  2228b4:	ldp	x29, x30, [sp], #32
  2228b8:	ret
  2228bc:	ret

00000000002228c0 <register_tm_clones>:
  2228c0:	adrp	x0, 265000 <string_hash_ops+0xf888>
  2228c4:	add	x0, x0, #0x798
  2228c8:	adrp	x1, 265000 <string_hash_ops+0xf888>
  2228cc:	add	x1, x1, #0x798
  2228d0:	sub	x0, x0, x1
  2228d4:	lsr	x1, x0, #63
  2228d8:	add	x0, x1, x0, asr #3
  2228dc:	cmp	xzr, x0, asr #1
  2228e0:	b.eq	222918 <register_tm_clones+0x58>  // b.none
  2228e4:	stp	x29, x30, [sp, #-32]!
  2228e8:	mov	x29, sp
  2228ec:	asr	x1, x0, #1
  2228f0:	adrp	x0, 206000 <inhibit_what_to_string.buffer+0x206000>
  2228f4:	ldr	x0, [x0, #3320]
  2228f8:	str	x0, [sp, #24]
  2228fc:	mov	x2, x0
  222900:	cbz	x2, 222910 <register_tm_clones+0x50>
  222904:	adrp	x0, 265000 <string_hash_ops+0xf888>
  222908:	add	x0, x0, #0x798
  22290c:	blr	x2
  222910:	ldp	x29, x30, [sp], #32
  222914:	ret
  222918:	ret

000000000022291c <__do_global_dtors_aux>:
  22291c:	adrp	x0, 265000 <string_hash_ops+0xf888>
  222920:	ldrb	w0, [x0, #1944]
  222924:	cbnz	w0, 222948 <__do_global_dtors_aux+0x2c>
  222928:	stp	x29, x30, [sp, #-16]!
  22292c:	mov	x29, sp
  222930:	bl	222874 <deregister_tm_clones>
  222934:	adrp	x0, 265000 <string_hash_ops+0xf888>
  222938:	mov	w1, #0x1                   	// #1
  22293c:	strb	w1, [x0, #1944]
  222940:	ldp	x29, x30, [sp], #16
  222944:	ret
  222948:	ret

000000000022294c <frame_dummy>:
  22294c:	stp	x29, x30, [sp, #-16]!
  222950:	mov	x29, sp
  222954:	bl	2228c0 <register_tm_clones>
  222958:	ldp	x29, x30, [sp], #16
  22295c:	ret

0000000000222960 <main>:
  222960:	stp	x29, x30, [sp, #-32]!
  222964:	str	x19, [sp, #16]
  222968:	mov	x29, sp
  22296c:	mov	w19, w0
  222970:	bl	2229a4 <save_argc_argv>
  222974:	mov	w0, w19
  222978:	bl	2229b8 <run>
  22297c:	mov	w19, w0
  222980:	bl	2406b0 <ask_password_agent_close@plt>
  222984:	bl	2406c0 <polkit_agent_close@plt>
  222988:	bl	2406d0 <pager_close@plt>
  22298c:	bl	2406e0 <mac_selinux_finish@plt>
  222990:	bl	222c48 <static_destruct>
  222994:	lsr	w0, w19, #31
  222998:	ldr	x19, [sp, #16]
  22299c:	ldp	x29, x30, [sp], #32
  2229a0:	ret

00000000002229a4 <save_argc_argv>:
  2229a4:	adrp	x8, 265000 <string_hash_ops+0xf888>
  2229a8:	adrp	x9, 265000 <string_hash_ops+0xf888>
  2229ac:	str	w0, [x8, #1952]
  2229b0:	str	x1, [x9, #1960]
  2229b4:	ret

00000000002229b8 <run>:
  2229b8:	stp	x29, x30, [sp, #-32]!
  2229bc:	str	x19, [sp, #16]
  2229c0:	mov	x29, sp
  2229c4:	mov	w19, w0
  2229c8:	mov	w0, #0x20                  	// #32
  2229cc:	str	xzr, [x29, #24]
  2229d0:	bl	2406f0 <log_set_facility@plt>
  2229d4:	bl	240700 <log_setup_service@plt>
  2229d8:	mov	w0, #0x12                  	// #18
  2229dc:	bl	240710 <umask@plt>
  2229e0:	cmp	w19, #0x1
  2229e4:	b.ne	222b18 <run+0x160>  // b.any
  2229e8:	bl	240720 <mac_selinux_init@plt>
  2229ec:	tbnz	w0, #31, 222b58 <run+0x1a0>
  2229f0:	adrp	x0, 208000 <inhibit_what_to_string.buffer+0x208000>
  2229f4:	add	x0, x0, #0xe24
  2229f8:	mov	w1, #0x1ed                 	// #493
  2229fc:	bl	240730 <mkdir_label@plt>
  222a00:	adrp	x0, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  222a04:	add	x0, x0, #0xdc8
  222a08:	mov	w1, #0x1ed                 	// #493
  222a0c:	bl	240730 <mkdir_label@plt>
  222a10:	adrp	x0, 208000 <inhibit_what_to_string.buffer+0x208000>
  222a14:	add	x0, x0, #0xe37
  222a18:	mov	w1, #0x1ed                 	// #493
  222a1c:	bl	240730 <mkdir_label@plt>
  222a20:	mov	w2, #0x1                   	// #1
  222a24:	mov	w3, #0xf                   	// #15
  222a28:	mov	w4, #0x2                   	// #2
  222a2c:	mov	w5, #0x11                  	// #17
  222a30:	mov	w6, #0xffffffff            	// #-1
  222a34:	mov	w0, wzr
  222a38:	mov	x1, xzr
  222a3c:	bl	240740 <sigprocmask_many@plt>
  222a40:	tbnz	w0, #31, 222c24 <run+0x26c>
  222a44:	add	x0, x29, #0x18
  222a48:	bl	222cc4 <manager_new>
  222a4c:	tbnz	w0, #31, 222b90 <run+0x1d8>
  222a50:	ldr	x0, [x29, #24]
  222a54:	bl	227660 <manager_parse_config_file>
  222a58:	ldr	x0, [x29, #24]
  222a5c:	bl	222ee0 <manager_startup>
  222a60:	mov	w19, w0
  222a64:	mov	w0, wzr
  222a68:	bl	240750 <log_get_max_level_realm@plt>
  222a6c:	tbnz	w19, #31, 222bc8 <run+0x210>
  222a70:	cmp	w0, #0x7
  222a74:	b.lt	222aa8 <run+0xf0>  // b.tstop
  222a78:	bl	240760 <getpid_cached@plt>
  222a7c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  222a80:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  222a84:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  222a88:	mov	w6, w0
  222a8c:	add	x2, x2, #0x9d5
  222a90:	add	x4, x4, #0x85a
  222a94:	add	x5, x5, #0x94a
  222a98:	mov	w0, #0x7                   	// #7
  222a9c:	mov	w3, #0x4cd                 	// #1229
  222aa0:	mov	w1, wzr
  222aa4:	bl	240770 <log_internal_realm@plt>
  222aa8:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  222aac:	add	x1, x1, #0xe4d
  222ab0:	mov	w0, wzr
  222ab4:	bl	240780 <sd_notify@plt>
  222ab8:	ldr	x0, [x29, #24]
  222abc:	bl	223370 <manager_run>
  222ac0:	mov	w19, w0
  222ac4:	mov	w0, wzr
  222ac8:	bl	240750 <log_get_max_level_realm@plt>
  222acc:	cmp	w0, #0x7
  222ad0:	b.lt	222b04 <run+0x14c>  // b.tstop
  222ad4:	bl	240760 <getpid_cached@plt>
  222ad8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  222adc:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  222ae0:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  222ae4:	mov	w6, w0
  222ae8:	add	x2, x2, #0x9d5
  222aec:	add	x4, x4, #0x85a
  222af0:	add	x5, x5, #0x589
  222af4:	mov	w0, #0x7                   	// #7
  222af8:	mov	w3, #0x4d4                 	// #1236
  222afc:	mov	w1, wzr
  222b00:	bl	240770 <log_internal_realm@plt>
  222b04:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  222b08:	add	x1, x1, #0x88
  222b0c:	mov	w0, wzr
  222b10:	bl	240780 <sd_notify@plt>
  222b14:	b	222c0c <run+0x254>
  222b18:	mov	w0, wzr
  222b1c:	bl	240750 <log_get_max_level_realm@plt>
  222b20:	cmp	w0, #0x3
  222b24:	b.lt	222b50 <run+0x198>  // b.tstop
  222b28:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  222b2c:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  222b30:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  222b34:	add	x2, x2, #0x9d5
  222b38:	add	x4, x4, #0x85a
  222b3c:	add	x5, x5, #0x2cb
  222b40:	mov	w0, #0x3                   	// #3
  222b44:	mov	w3, #0x4b2                 	// #1202
  222b48:	mov	w1, wzr
  222b4c:	bl	240770 <log_internal_realm@plt>
  222b50:	mov	w19, #0xffffffea            	// #-22
  222b54:	b	222c0c <run+0x254>
  222b58:	mov	w19, w0
  222b5c:	mov	w0, wzr
  222b60:	bl	240750 <log_get_max_level_realm@plt>
  222b64:	cmp	w0, #0x3
  222b68:	b.lt	222c00 <run+0x248>  // b.tstop
  222b6c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  222b70:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  222b74:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  222b78:	add	x2, x2, #0x9d5
  222b7c:	add	x4, x4, #0x85a
  222b80:	add	x5, x5, #0x2ec
  222b84:	mov	w0, #0x3                   	// #3
  222b88:	mov	w3, #0x4b8                 	// #1208
  222b8c:	b	222bf0 <run+0x238>
  222b90:	mov	w19, w0
  222b94:	mov	w0, wzr
  222b98:	bl	240750 <log_get_max_level_realm@plt>
  222b9c:	cmp	w0, #0x3
  222ba0:	b.lt	222c00 <run+0x248>  // b.tstop
  222ba4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  222ba8:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  222bac:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  222bb0:	add	x2, x2, #0x9d5
  222bb4:	add	x4, x4, #0x85a
  222bb8:	add	x5, x5, #0x563
  222bbc:	mov	w0, #0x3                   	// #3
  222bc0:	mov	w3, #0x4c5                 	// #1221
  222bc4:	b	222bf0 <run+0x238>
  222bc8:	cmp	w0, #0x3
  222bcc:	b.lt	222c00 <run+0x248>  // b.tstop
  222bd0:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  222bd4:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  222bd8:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  222bdc:	add	x2, x2, #0x9d5
  222be0:	add	x4, x4, #0x85a
  222be4:	add	x5, x5, #0x322
  222be8:	mov	w0, #0x3                   	// #3
  222bec:	mov	w3, #0x4cb                 	// #1227
  222bf0:	mov	w1, w19
  222bf4:	bl	240770 <log_internal_realm@plt>
  222bf8:	mov	w19, w0
  222bfc:	b	222c0c <run+0x254>
  222c00:	mov	w8, wzr
  222c04:	neg	w9, w19
  222c08:	sub	w19, w8, w9, uxtb
  222c0c:	add	x0, x29, #0x18
  222c10:	bl	222ca8 <manager_unrefp>
  222c14:	mov	w0, w19
  222c18:	ldr	x19, [sp, #16]
  222c1c:	ldp	x29, x30, [sp], #32
  222c20:	ret
  222c24:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  222c28:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  222c2c:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  222c30:	add	x1, x1, #0x454
  222c34:	add	x2, x2, #0x9d5
  222c38:	add	x4, x4, #0xec
  222c3c:	mov	w3, #0x4c1                 	// #1217
  222c40:	mov	w0, wzr
  222c44:	bl	240790 <log_assert_failed_realm@plt>

0000000000222c48 <static_destruct>:
  222c48:	stp	x29, x30, [sp, #-32]!
  222c4c:	stp	x20, x19, [sp, #16]
  222c50:	adrp	x8, 254000 <session_vtable+0x3d0>
  222c54:	ldr	x8, [x8, #3336]
  222c58:	mov	x29, sp
  222c5c:	cbz	x8, 222c9c <static_destruct+0x54>
  222c60:	adrp	x0, 254000 <session_vtable+0x3d0>
  222c64:	ldr	x0, [x0, #3336]
  222c68:	bl	225e64 <ALIGN_TO>
  222c6c:	adrp	x20, 254000 <session_vtable+0x3d0>
  222c70:	ldr	x20, [x20, #3344]
  222c74:	cmp	x0, x20
  222c78:	b.cs	222c9c <static_destruct+0x54>  // b.hs, b.nlast
  222c7c:	mov	x19, x0
  222c80:	ldp	x0, x8, [x19]
  222c84:	blr	x8
  222c88:	add	x0, x19, #0x10
  222c8c:	bl	225e64 <ALIGN_TO>
  222c90:	mov	x19, x0
  222c94:	cmp	x0, x20
  222c98:	b.cc	222c80 <static_destruct+0x38>  // b.lo, b.ul, b.last
  222c9c:	ldp	x20, x19, [sp, #16]
  222ca0:	ldp	x29, x30, [sp], #32
  222ca4:	ret

0000000000222ca8 <manager_unrefp>:
  222ca8:	stp	x29, x30, [sp, #-16]!
  222cac:	ldr	x0, [x0]
  222cb0:	mov	x29, sp
  222cb4:	cbz	x0, 222cbc <manager_unrefp+0x14>
  222cb8:	bl	2233fc <manager_unref>
  222cbc:	ldp	x29, x30, [sp], #16
  222cc0:	ret

0000000000222cc4 <manager_new>:
  222cc4:	stp	x29, x30, [sp, #-48]!
  222cc8:	mov	x29, sp
  222ccc:	str	x21, [sp, #16]
  222cd0:	stp	x20, x19, [sp, #32]
  222cd4:	str	xzr, [x29, #24]
  222cd8:	cbz	x0, 222ec0 <manager_new+0x1fc>
  222cdc:	mov	x19, x0
  222ce0:	bl	223600 <malloc_multiply>
  222ce4:	str	x0, [x29, #24]
  222ce8:	cbz	x0, 222e98 <manager_new+0x1d4>
  222cec:	mov	x20, x0
  222cf0:	mov	w0, #0x1                   	// #1
  222cf4:	bl	2407a0 <now@plt>
  222cf8:	mov	w8, #0xffffffff            	// #-1
  222cfc:	movi	v0.2d, #0x0
  222d00:	str	w8, [x20, #152]
  222d04:	str	w8, [x20, #164]
  222d08:	mov	x8, x20
  222d0c:	adrp	x21, 255000 <sd_device_enumerator_unref@SD_SHARED>
  222d10:	str	xzr, [x20, #144]
  222d14:	stur	xzr, [x20, #156]
  222d18:	stp	q0, q0, [x20]
  222d1c:	stp	q0, q0, [x20, #32]
  222d20:	stp	q0, q0, [x20, #64]
  222d24:	stp	q0, q0, [x20, #96]
  222d28:	str	q0, [x20, #128]
  222d2c:	str	q0, [x8, #168]!
  222d30:	add	x21, x21, #0x778
  222d34:	stp	q0, q0, [x8, #96]
  222d38:	stp	q0, q0, [x8, #128]
  222d3c:	stp	q0, q0, [x8, #160]
  222d40:	str	q0, [x8, #192]
  222d44:	str	xzr, [x8, #208]
  222d48:	add	x8, x20, #0x188
  222d4c:	str	x0, [x20, #384]
  222d50:	mov	x0, x21
  222d54:	stur	q0, [x20, #184]
  222d58:	stur	q0, [x20, #200]
  222d5c:	stur	q0, [x20, #216]
  222d60:	stur	q0, [x20, #232]
  222d64:	stur	q0, [x20, #248]
  222d68:	str	xzr, [x8, #80]
  222d6c:	stp	q0, q0, [x8, #48]
  222d70:	stp	q0, q0, [x8, #16]
  222d74:	str	q0, [x8]
  222d78:	bl	2407b0 <internal_hashmap_new@plt>
  222d7c:	ldr	x20, [x29, #24]
  222d80:	str	x0, [x20, #16]
  222d84:	mov	x0, x21
  222d88:	bl	2407b0 <internal_hashmap_new@plt>
  222d8c:	str	x0, [x20, #24]
  222d90:	mov	x0, x21
  222d94:	bl	2407b0 <internal_hashmap_new@plt>
  222d98:	str	x0, [x20, #32]
  222d9c:	mov	x0, xzr
  222da0:	bl	2407b0 <internal_hashmap_new@plt>
  222da4:	str	x0, [x20, #40]
  222da8:	mov	x0, xzr
  222dac:	bl	2407b0 <internal_hashmap_new@plt>
  222db0:	str	x0, [x20, #48]
  222db4:	mov	x0, x21
  222db8:	bl	2407b0 <internal_hashmap_new@plt>
  222dbc:	str	x0, [x20, #56]
  222dc0:	mov	x0, x21
  222dc4:	bl	2407b0 <internal_hashmap_new@plt>
  222dc8:	str	x0, [x20, #64]
  222dcc:	mov	x0, x21
  222dd0:	bl	2407b0 <internal_hashmap_new@plt>
  222dd4:	str	x0, [x20, #224]
  222dd8:	mov	x0, x21
  222ddc:	bl	2407b0 <internal_hashmap_new@plt>
  222de0:	ldr	x8, [x20, #16]
  222de4:	str	x0, [x20, #216]
  222de8:	cbz	x8, 222e98 <manager_new+0x1d4>
  222dec:	ldr	x8, [x20, #24]
  222df0:	cbz	x8, 222e98 <manager_new+0x1d4>
  222df4:	ldr	x8, [x20, #32]
  222df8:	cbz	x8, 222e98 <manager_new+0x1d4>
  222dfc:	ldr	x8, [x20, #40]
  222e00:	cbz	x8, 222e98 <manager_new+0x1d4>
  222e04:	ldr	x8, [x20, #48]
  222e08:	cbz	x8, 222e98 <manager_new+0x1d4>
  222e0c:	ldr	x8, [x20, #56]
  222e10:	cbz	x8, 222e98 <manager_new+0x1d4>
  222e14:	ldr	x8, [x20, #64]
  222e18:	cbz	x8, 222e98 <manager_new+0x1d4>
  222e1c:	mov	w21, #0xfffffff4            	// #-12
  222e20:	cbz	x0, 222e9c <manager_new+0x1d8>
  222e24:	ldr	x8, [x20, #224]
  222e28:	cbz	x8, 222e9c <manager_new+0x1d8>
  222e2c:	mov	x0, x20
  222e30:	bl	2407c0 <sd_event_default@plt>
  222e34:	tbnz	w0, #31, 222eb8 <manager_new+0x1f4>
  222e38:	ldr	x0, [x20]
  222e3c:	mov	w2, #0x2                   	// #2
  222e40:	mov	x1, xzr
  222e44:	mov	x3, xzr
  222e48:	mov	x4, xzr
  222e4c:	bl	2407d0 <sd_event_add_signal@plt>
  222e50:	tbnz	w0, #31, 222eb8 <manager_new+0x1f4>
  222e54:	ldr	x0, [x20]
  222e58:	mov	w2, #0xf                   	// #15
  222e5c:	mov	x1, xzr
  222e60:	mov	x3, xzr
  222e64:	mov	x4, xzr
  222e68:	bl	2407d0 <sd_event_add_signal@plt>
  222e6c:	tbnz	w0, #31, 222eb8 <manager_new+0x1f4>
  222e70:	ldr	x0, [x20]
  222e74:	mov	w1, #0x1                   	// #1
  222e78:	bl	2407e0 <sd_event_set_watchdog@plt>
  222e7c:	mov	x0, x20
  222e80:	bl	227578 <manager_reset_config>
  222e84:	ldr	x8, [x29, #24]
  222e88:	mov	w21, wzr
  222e8c:	str	xzr, [x29, #24]
  222e90:	str	x8, [x19]
  222e94:	b	222e9c <manager_new+0x1d8>
  222e98:	mov	w21, #0xfffffff4            	// #-12
  222e9c:	add	x0, x29, #0x18
  222ea0:	bl	222ca8 <manager_unrefp>
  222ea4:	mov	w0, w21
  222ea8:	ldp	x20, x19, [sp, #32]
  222eac:	ldr	x21, [sp, #16]
  222eb0:	ldp	x29, x30, [sp], #48
  222eb4:	ret
  222eb8:	mov	w21, w0
  222ebc:	b	222e9c <manager_new+0x1d8>
  222ec0:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  222ec4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  222ec8:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  222ecc:	add	x1, x1, #0xa82
  222ed0:	add	x2, x2, #0x9d5
  222ed4:	add	x4, x4, #0x30f
  222ed8:	mov	w3, #0x29                  	// #41
  222edc:	bl	240790 <log_assert_failed_realm@plt>

0000000000222ee0 <manager_startup>:
  222ee0:	sub	sp, sp, #0x60
  222ee4:	stp	x29, x30, [sp, #64]
  222ee8:	stp	x20, x19, [sp, #80]
  222eec:	add	x29, sp, #0x40
  222ef0:	cbz	x0, 223350 <manager_startup+0x470>
  222ef4:	mov	x19, x0
  222ef8:	ldr	x0, [x0]
  222efc:	adrp	x3, 223000 <manager_startup+0x120>
  222f00:	add	x3, x3, #0x618
  222f04:	mov	w2, #0x1                   	// #1
  222f08:	mov	x1, xzr
  222f0c:	mov	x4, x19
  222f10:	bl	2407d0 <sd_event_add_signal@plt>
  222f14:	tbnz	w0, #31, 2231a0 <manager_startup+0x2c0>
  222f18:	mov	x0, x19
  222f1c:	bl	228f2c <manager_connect_utmp>
  222f20:	mov	x0, x19
  222f24:	bl	2236b8 <manager_connect_console>
  222f28:	tbnz	w0, #31, 223340 <manager_startup+0x460>
  222f2c:	mov	x0, x19
  222f30:	bl	2239b4 <manager_connect_udev>
  222f34:	tbnz	w0, #31, 2231d8 <manager_startup+0x2f8>
  222f38:	mov	x0, x19
  222f3c:	bl	223cb0 <manager_connect_bus>
  222f40:	tbnz	w0, #31, 223340 <manager_startup+0x460>
  222f44:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  222f48:	add	x2, x19, #0xa8
  222f4c:	add	x1, x1, #0xe02
  222f50:	mov	x0, x19
  222f54:	bl	2277b0 <manager_add_seat>
  222f58:	tbnz	w0, #31, 2232f4 <manager_startup+0x414>
  222f5c:	ldr	x1, [x19, #440]
  222f60:	mov	x0, x19
  222f64:	bl	2297e4 <manager_set_lid_switch_ignore>
  222f68:	tbz	w0, #31, 222fa8 <manager_startup+0xc8>
  222f6c:	mov	w20, w0
  222f70:	mov	w0, wzr
  222f74:	bl	240750 <log_get_max_level_realm@plt>
  222f78:	cmp	w0, #0x4
  222f7c:	b.lt	222fa8 <manager_startup+0xc8>  // b.tstop
  222f80:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  222f84:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  222f88:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  222f8c:	add	x2, x2, #0x9d5
  222f90:	add	x4, x4, #0x5c9
  222f94:	add	x5, x5, #0x561
  222f98:	mov	w0, #0x4                   	// #4
  222f9c:	mov	w3, #0x44e                 	// #1102
  222fa0:	mov	w1, w20
  222fa4:	bl	240770 <log_internal_realm@plt>
  222fa8:	mov	x0, x19
  222fac:	bl	224364 <manager_enumerate_devices>
  222fb0:	tbz	w0, #31, 222ff0 <manager_startup+0x110>
  222fb4:	mov	w20, w0
  222fb8:	mov	w0, wzr
  222fbc:	bl	240750 <log_get_max_level_realm@plt>
  222fc0:	cmp	w0, #0x4
  222fc4:	b.lt	222ff0 <manager_startup+0x110>  // b.tstop
  222fc8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  222fcc:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  222fd0:	adrp	x5, 210000 <inhibit_what_to_string.buffer+0x210000>
  222fd4:	add	x2, x2, #0x9d5
  222fd8:	add	x4, x4, #0x5c9
  222fdc:	add	x5, x5, #0x9e8
  222fe0:	mov	w0, #0x4                   	// #4
  222fe4:	mov	w3, #0x453                 	// #1107
  222fe8:	mov	w1, w20
  222fec:	bl	240770 <log_internal_realm@plt>
  222ff0:	mov	x0, x19
  222ff4:	bl	22441c <manager_enumerate_seats>
  222ff8:	tbz	w0, #31, 223038 <manager_startup+0x158>
  222ffc:	mov	w20, w0
  223000:	mov	w0, wzr
  223004:	bl	240750 <log_get_max_level_realm@plt>
  223008:	cmp	w0, #0x4
  22300c:	b.lt	223038 <manager_startup+0x158>  // b.tstop
  223010:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  223014:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  223018:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22301c:	add	x2, x2, #0x9d5
  223020:	add	x4, x4, #0x5c9
  223024:	add	x5, x5, #0x137
  223028:	mov	w0, #0x4                   	// #4
  22302c:	mov	w3, #0x457                 	// #1111
  223030:	mov	w1, w20
  223034:	bl	240770 <log_internal_realm@plt>
  223038:	mov	x0, x19
  22303c:	bl	2245f0 <manager_enumerate_users>
  223040:	tbz	w0, #31, 223080 <manager_startup+0x1a0>
  223044:	mov	w20, w0
  223048:	mov	w0, wzr
  22304c:	bl	240750 <log_get_max_level_realm@plt>
  223050:	cmp	w0, #0x4
  223054:	b.lt	223080 <manager_startup+0x1a0>  // b.tstop
  223058:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22305c:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  223060:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  223064:	add	x2, x2, #0x9d5
  223068:	add	x4, x4, #0x5c9
  22306c:	add	x5, x5, #0x880
  223070:	mov	w0, #0x4                   	// #4
  223074:	mov	w3, #0x45b                 	// #1115
  223078:	mov	w1, w20
  22307c:	bl	240770 <log_internal_realm@plt>
  223080:	mov	x0, x19
  223084:	bl	2247dc <manager_enumerate_sessions>
  223088:	tbz	w0, #31, 2230c8 <manager_startup+0x1e8>
  22308c:	mov	w20, w0
  223090:	mov	w0, wzr
  223094:	bl	240750 <log_get_max_level_realm@plt>
  223098:	cmp	w0, #0x4
  22309c:	b.lt	2230c8 <manager_startup+0x1e8>  // b.tstop
  2230a0:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2230a4:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2230a8:	adrp	x5, 210000 <inhibit_what_to_string.buffer+0x210000>
  2230ac:	add	x2, x2, #0x9d5
  2230b0:	add	x4, x4, #0x5c9
  2230b4:	add	x5, x5, #0x51c
  2230b8:	mov	w0, #0x4                   	// #4
  2230bc:	mov	w3, #0x45f                 	// #1119
  2230c0:	mov	w1, w20
  2230c4:	bl	240770 <log_internal_realm@plt>
  2230c8:	mov	x0, x19
  2230cc:	bl	2249d8 <manager_enumerate_inhibitors>
  2230d0:	tbz	w0, #31, 223110 <manager_startup+0x230>
  2230d4:	mov	w20, w0
  2230d8:	mov	w0, wzr
  2230dc:	bl	240750 <log_get_max_level_realm@plt>
  2230e0:	cmp	w0, #0x4
  2230e4:	b.lt	223110 <manager_startup+0x230>  // b.tstop
  2230e8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2230ec:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2230f0:	adrp	x5, 210000 <inhibit_what_to_string.buffer+0x210000>
  2230f4:	add	x2, x2, #0x9d5
  2230f8:	add	x4, x4, #0x5c9
  2230fc:	add	x5, x5, #0xa06
  223100:	mov	w0, #0x4                   	// #4
  223104:	mov	w3, #0x463                 	// #1123
  223108:	mov	w1, w20
  22310c:	bl	240770 <log_internal_realm@plt>
  223110:	mov	x0, x19
  223114:	bl	224bbc <manager_enumerate_buttons>
  223118:	tbz	w0, #31, 223158 <manager_startup+0x278>
  22311c:	mov	w20, w0
  223120:	mov	w0, wzr
  223124:	bl	240750 <log_get_max_level_realm@plt>
  223128:	cmp	w0, #0x4
  22312c:	b.lt	223158 <manager_startup+0x278>  // b.tstop
  223130:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  223134:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  223138:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  22313c:	add	x2, x2, #0x9d5
  223140:	add	x4, x4, #0x5c9
  223144:	add	x5, x5, #0xc05
  223148:	mov	w0, #0x4                   	// #4
  22314c:	mov	w3, #0x467                 	// #1127
  223150:	mov	w1, w20
  223154:	bl	240770 <log_internal_realm@plt>
  223158:	mov	x0, x19
  22315c:	mov	w1, wzr
  223160:	bl	224c9c <manager_gc>
  223164:	mov	x0, x19
  223168:	bl	224f0c <manager_reserve_vt>
  22316c:	mov	x0, x19
  223170:	bl	228c10 <manager_read_utmp>
  223174:	mov	w20, #0xfffffffe            	// #-2
  223178:	str	w20, [sp, #8]
  22317c:	str	xzr, [sp, #16]
  223180:	ldr	x0, [x19, #24]
  223184:	add	x1, sp, #0x8
  223188:	sub	x2, x29, #0x8
  22318c:	bl	224ff4 <hashmap_iterate>
  223190:	tbz	w0, #0, 223210 <manager_startup+0x330>
  223194:	ldur	x0, [x29, #-8]
  223198:	bl	23550c <seat_start>
  22319c:	b	223180 <manager_startup+0x2a0>
  2231a0:	mov	w20, w0
  2231a4:	mov	w0, wzr
  2231a8:	bl	240750 <log_get_max_level_realm@plt>
  2231ac:	cmp	w0, #0x3
  2231b0:	b.lt	223334 <manager_startup+0x454>  // b.tstop
  2231b4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2231b8:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2231bc:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  2231c0:	add	x2, x2, #0x9d5
  2231c4:	add	x4, x4, #0x5c9
  2231c8:	add	x5, x5, #0x951
  2231cc:	mov	w0, #0x3                   	// #3
  2231d0:	mov	w3, #0x433                 	// #1075
  2231d4:	b	223328 <manager_startup+0x448>
  2231d8:	mov	w20, w0
  2231dc:	mov	w0, wzr
  2231e0:	bl	240750 <log_get_max_level_realm@plt>
  2231e4:	cmp	w0, #0x3
  2231e8:	b.lt	223334 <manager_startup+0x454>  // b.tstop
  2231ec:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2231f0:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2231f4:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2231f8:	add	x2, x2, #0x9d5
  2231fc:	add	x4, x4, #0x5c9
  223200:	add	x5, x5, #0x85d
  223204:	mov	w0, #0x3                   	// #3
  223208:	mov	w3, #0x440                 	// #1088
  22320c:	b	223328 <manager_startup+0x448>
  223210:	str	w20, [sp, #8]
  223214:	str	xzr, [sp, #16]
  223218:	ldr	x0, [x19, #48]
  22321c:	add	x1, sp, #0x8
  223220:	sub	x2, x29, #0x18
  223224:	bl	224ff4 <hashmap_iterate>
  223228:	tbz	w0, #0, 223238 <manager_startup+0x358>
  22322c:	ldur	x0, [x29, #-24]
  223230:	bl	23e344 <user_start>
  223234:	b	223218 <manager_startup+0x338>
  223238:	mov	w20, #0xfffffffe            	// #-2
  22323c:	str	w20, [sp, #8]
  223240:	str	xzr, [sp, #16]
  223244:	ldr	x0, [x19, #32]
  223248:	add	x1, sp, #0x8
  22324c:	sub	x2, x29, #0x10
  223250:	bl	224ff4 <hashmap_iterate>
  223254:	tbz	w0, #0, 22326c <manager_startup+0x38c>
  223258:	ldur	x0, [x29, #-16]
  22325c:	mov	x1, xzr
  223260:	mov	x2, xzr
  223264:	bl	23b2d4 <session_start>
  223268:	b	223244 <manager_startup+0x364>
  22326c:	str	w20, [sp, #8]
  223270:	str	xzr, [sp, #16]
  223274:	ldr	x0, [x19, #56]
  223278:	add	x1, sp, #0x8
  22327c:	add	x2, sp, #0x18
  223280:	bl	224ff4 <hashmap_iterate>
  223284:	tbz	w0, #0, 2232b0 <manager_startup+0x3d0>
  223288:	ldr	x0, [sp, #24]
  22328c:	bl	2321e8 <inhibitor_start>
  223290:	ldr	x0, [sp, #24]
  223294:	bl	232ecc <inhibitor_is_orphan>
  223298:	tbz	w0, #0, 223274 <manager_startup+0x394>
  22329c:	ldr	x0, [sp, #24]
  2232a0:	bl	232584 <inhibitor_stop>
  2232a4:	ldr	x0, [sp, #24]
  2232a8:	bl	232154 <inhibitor_free>
  2232ac:	b	223274 <manager_startup+0x394>
  2232b0:	mov	w8, #0xfffffffe            	// #-2
  2232b4:	str	w8, [sp, #8]
  2232b8:	str	xzr, [sp, #16]
  2232bc:	ldr	x0, [x19, #64]
  2232c0:	add	x1, sp, #0x8
  2232c4:	add	x2, sp, #0x20
  2232c8:	bl	224ff4 <hashmap_iterate>
  2232cc:	tbz	w0, #0, 2232dc <manager_startup+0x3fc>
  2232d0:	ldr	x0, [sp, #32]
  2232d4:	bl	2272fc <button_check_switches>
  2232d8:	b	2232bc <manager_startup+0x3dc>
  2232dc:	mov	x0, xzr
  2232e0:	mov	x1, xzr
  2232e4:	mov	x2, x19
  2232e8:	bl	225010 <manager_dispatch_idle_action>
  2232ec:	mov	w0, wzr
  2232f0:	b	223340 <manager_startup+0x460>
  2232f4:	mov	w20, w0
  2232f8:	mov	w0, wzr
  2232fc:	bl	240750 <log_get_max_level_realm@plt>
  223300:	cmp	w0, #0x3
  223304:	b.lt	223334 <manager_startup+0x454>  // b.tstop
  223308:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22330c:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  223310:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  223314:	add	x2, x2, #0x9d5
  223318:	add	x4, x4, #0x5c9
  22331c:	add	x5, x5, #0xab
  223320:	mov	w0, #0x3                   	// #3
  223324:	mov	w3, #0x44a                 	// #1098
  223328:	mov	w1, w20
  22332c:	bl	240770 <log_internal_realm@plt>
  223330:	b	223340 <manager_startup+0x460>
  223334:	mov	w8, wzr
  223338:	neg	w9, w20
  22333c:	sub	w0, w8, w9, uxtb
  223340:	ldp	x20, x19, [sp, #80]
  223344:	ldp	x29, x30, [sp, #64]
  223348:	add	sp, sp, #0x60
  22334c:	ret
  223350:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  223354:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  223358:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22335c:	add	x1, x1, #0x102
  223360:	add	x2, x2, #0x9d5
  223364:	add	x4, x4, #0x5aa
  223368:	mov	w3, #0x42f                 	// #1071
  22336c:	bl	240790 <log_assert_failed_realm@plt>

0000000000223370 <manager_run>:
  223370:	stp	x29, x30, [sp, #-32]!
  223374:	str	x19, [sp, #16]
  223378:	mov	x29, sp
  22337c:	cbz	x0, 2233dc <manager_run+0x6c>
  223380:	mov	x19, x0
  223384:	ldr	x0, [x19]
  223388:	bl	2407f0 <sd_event_get_state@plt>
  22338c:	tbnz	w0, #31, 2233d0 <manager_run+0x60>
  223390:	cmp	w0, #0x5
  223394:	b.eq	2233cc <manager_run+0x5c>  // b.none
  223398:	mov	w1, #0x1                   	// #1
  22339c:	mov	x0, x19
  2233a0:	bl	224c9c <manager_gc>
  2233a4:	mov	x0, x19
  2233a8:	mov	w1, wzr
  2233ac:	bl	229948 <manager_dispatch_delayed>
  2233b0:	tbnz	w0, #31, 2233d0 <manager_run+0x60>
  2233b4:	cbnz	w0, 223384 <manager_run+0x14>
  2233b8:	ldr	x0, [x19]
  2233bc:	mov	x1, #0xffffffffffffffff    	// #-1
  2233c0:	bl	240800 <sd_event_run@plt>
  2233c4:	tbz	w0, #31, 223384 <manager_run+0x14>
  2233c8:	b	2233d0 <manager_run+0x60>
  2233cc:	mov	w0, wzr
  2233d0:	ldr	x19, [sp, #16]
  2233d4:	ldp	x29, x30, [sp], #32
  2233d8:	ret
  2233dc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2233e0:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2233e4:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  2233e8:	add	x1, x1, #0x102
  2233ec:	add	x2, x2, #0x9d5
  2233f0:	add	x4, x4, #0xf21
  2233f4:	mov	w3, #0x491                 	// #1169
  2233f8:	bl	240790 <log_assert_failed_realm@plt>

00000000002233fc <manager_unref>:
  2233fc:	cbz	x0, 2235b0 <manager_unref+0x1b4>
  223400:	stp	x29, x30, [sp, #-32]!
  223404:	str	x19, [sp, #16]
  223408:	mov	x19, x0
  22340c:	mov	x29, sp
  223410:	ldr	x0, [x19, #32]
  223414:	bl	2235b4 <hashmap_first>
  223418:	cbz	x0, 223428 <manager_unref+0x2c>
  22341c:	bl	239934 <session_free>
  223420:	b	223410 <manager_unref+0x14>
  223424:	bl	23dac4 <user_free>
  223428:	ldr	x0, [x19, #48]
  22342c:	bl	2235b4 <hashmap_first>
  223430:	cbnz	x0, 223424 <manager_unref+0x28>
  223434:	b	22343c <manager_unref+0x40>
  223438:	bl	231d54 <device_free>
  22343c:	ldr	x0, [x19, #16]
  223440:	bl	2235b4 <hashmap_first>
  223444:	cbnz	x0, 223438 <manager_unref+0x3c>
  223448:	b	223450 <manager_unref+0x54>
  22344c:	bl	2346a0 <seat_free>
  223450:	ldr	x0, [x19, #24]
  223454:	bl	2235b4 <hashmap_first>
  223458:	cbnz	x0, 22344c <manager_unref+0x50>
  22345c:	b	223464 <manager_unref+0x68>
  223460:	bl	232154 <inhibitor_free>
  223464:	ldr	x0, [x19, #56]
  223468:	bl	2235b4 <hashmap_first>
  22346c:	cbnz	x0, 223460 <manager_unref+0x64>
  223470:	b	223478 <manager_unref+0x7c>
  223474:	bl	2266fc <button_free>
  223478:	ldr	x0, [x19, #64]
  22347c:	bl	2235b4 <hashmap_first>
  223480:	cbnz	x0, 223474 <manager_unref+0x78>
  223484:	ldr	x0, [x19, #16]
  223488:	bl	2235d0 <hashmap_free>
  22348c:	ldr	x0, [x19, #24]
  223490:	bl	2235d0 <hashmap_free>
  223494:	ldr	x0, [x19, #32]
  223498:	bl	2235d0 <hashmap_free>
  22349c:	ldr	x0, [x19, #40]
  2234a0:	bl	2235d0 <hashmap_free>
  2234a4:	ldr	x0, [x19, #48]
  2234a8:	bl	2235d0 <hashmap_free>
  2234ac:	ldr	x0, [x19, #56]
  2234b0:	bl	2235d0 <hashmap_free>
  2234b4:	ldr	x0, [x19, #64]
  2234b8:	bl	2235d0 <hashmap_free>
  2234bc:	ldr	x0, [x19, #72]
  2234c0:	bl	2235d0 <hashmap_free>
  2234c4:	ldr	x0, [x19, #224]
  2234c8:	bl	2235d0 <hashmap_free>
  2234cc:	ldr	x0, [x19, #216]
  2234d0:	bl	2235d0 <hashmap_free>
  2234d4:	ldr	x0, [x19, #368]
  2234d8:	bl	240810 <sd_event_source_unref@plt>
  2234dc:	ldr	x0, [x19, #272]
  2234e0:	bl	240810 <sd_event_source_unref@plt>
  2234e4:	ldr	x0, [x19, #296]
  2234e8:	bl	240810 <sd_event_source_unref@plt>
  2234ec:	ldr	x0, [x19, #320]
  2234f0:	bl	240810 <sd_event_source_unref@plt>
  2234f4:	ldr	x0, [x19, #352]
  2234f8:	bl	240810 <sd_event_source_unref@plt>
  2234fc:	ldr	x0, [x19, #136]
  223500:	bl	240810 <sd_event_source_unref@plt>
  223504:	ldr	x0, [x19, #448]
  223508:	bl	240810 <sd_event_source_unref@plt>
  22350c:	ldr	x0, [x19, #144]
  223510:	bl	240810 <sd_event_source_unref@plt>
  223514:	ldr	w0, [x19, #152]
  223518:	bl	240820 <safe_close@plt>
  22351c:	ldr	x0, [x19, #104]
  223520:	bl	240830 <sd_device_monitor_unref@plt>
  223524:	ldr	x0, [x19, #112]
  223528:	bl	240830 <sd_device_monitor_unref@plt>
  22352c:	ldr	x0, [x19, #120]
  223530:	bl	240830 <sd_device_monitor_unref@plt>
  223534:	ldr	x0, [x19, #128]
  223538:	bl	240830 <sd_device_monitor_unref@plt>
  22353c:	ldrb	w8, [x19, #328]
  223540:	cbz	w8, 223550 <manager_unref+0x154>
  223544:	adrp	x0, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  223548:	add	x0, x0, #0x85e
  22354c:	bl	240840 <unlink_or_warn@plt>
  223550:	ldr	x0, [x19, #432]
  223554:	bl	240850 <bus_verify_polkit_async_registry_free@plt>
  223558:	ldr	x0, [x19, #8]
  22355c:	bl	240860 <sd_bus_flush_close_unref@plt>
  223560:	ldr	x0, [x19]
  223564:	bl	240870 <sd_event_unref@plt>
  223568:	ldr	w0, [x19, #164]
  22356c:	bl	240820 <safe_close@plt>
  223570:	ldr	x0, [x19, #176]
  223574:	bl	240880 <strv_free@plt>
  223578:	ldr	x0, [x19, #184]
  22357c:	bl	240880 <strv_free@plt>
  223580:	ldr	x0, [x19, #280]
  223584:	bl	240890 <free@plt>
  223588:	ldr	x0, [x19, #312]
  22358c:	bl	240890 <free@plt>
  223590:	ldr	x0, [x19, #336]
  223594:	bl	240890 <free@plt>
  223598:	ldr	x0, [x19, #264]
  22359c:	bl	240890 <free@plt>
  2235a0:	mov	x0, x19
  2235a4:	bl	2235ec <mfree>
  2235a8:	ldr	x19, [sp, #16]
  2235ac:	ldp	x29, x30, [sp], #32
  2235b0:	ret

00000000002235b4 <hashmap_first>:
  2235b4:	stp	x29, x30, [sp, #-16]!
  2235b8:	mov	w1, wzr
  2235bc:	mov	x2, xzr
  2235c0:	mov	x29, sp
  2235c4:	bl	2408a0 <internal_hashmap_first_key_and_value@plt>
  2235c8:	ldp	x29, x30, [sp], #16
  2235cc:	ret

00000000002235d0 <hashmap_free>:
  2235d0:	stp	x29, x30, [sp, #-16]!
  2235d4:	mov	x1, xzr
  2235d8:	mov	x2, xzr
  2235dc:	mov	x29, sp
  2235e0:	bl	2408b0 <internal_hashmap_free@plt>
  2235e4:	ldp	x29, x30, [sp], #16
  2235e8:	ret

00000000002235ec <mfree>:
  2235ec:	stp	x29, x30, [sp, #-16]!
  2235f0:	mov	x29, sp
  2235f4:	bl	240890 <free@plt>
  2235f8:	ldp	x29, x30, [sp], #16
  2235fc:	ret

0000000000223600 <malloc_multiply>:
  223600:	stp	x29, x30, [sp, #-16]!
  223604:	mov	w0, #0x1e0                 	// #480
  223608:	mov	x29, sp
  22360c:	bl	2408c0 <malloc@plt>
  223610:	ldp	x29, x30, [sp], #16
  223614:	ret

0000000000223618 <manager_dispatch_reload_signal>:
  223618:	stp	x29, x30, [sp, #-32]!
  22361c:	mov	x0, x2
  223620:	str	x19, [sp, #16]
  223624:	mov	x29, sp
  223628:	mov	x19, x2
  22362c:	bl	227578 <manager_reset_config>
  223630:	mov	x0, x19
  223634:	bl	227660 <manager_parse_config_file>
  223638:	mov	w19, w0
  22363c:	mov	w0, wzr
  223640:	bl	240750 <log_get_max_level_realm@plt>
  223644:	tbnz	w19, #31, 223678 <manager_dispatch_reload_signal+0x60>
  223648:	cmp	w0, #0x6
  22364c:	b.lt	2236a8 <manager_dispatch_reload_signal+0x90>  // b.tstop
  223650:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  223654:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  223658:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  22365c:	add	x2, x2, #0x9d5
  223660:	add	x4, x4, #0xe08
  223664:	add	x5, x5, #0xc23
  223668:	mov	w0, #0x6                   	// #6
  22366c:	mov	w3, #0x421                 	// #1057
  223670:	mov	w1, wzr
  223674:	b	2236a4 <manager_dispatch_reload_signal+0x8c>
  223678:	cmp	w0, #0x4
  22367c:	b.lt	2236a8 <manager_dispatch_reload_signal+0x90>  // b.tstop
  223680:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  223684:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  223688:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  22368c:	add	x2, x2, #0x9d5
  223690:	add	x4, x4, #0xe08
  223694:	add	x5, x5, #0xe73
  223698:	mov	w0, #0x4                   	// #4
  22369c:	mov	w3, #0x41f                 	// #1055
  2236a0:	mov	w1, w19
  2236a4:	bl	240770 <log_internal_realm@plt>
  2236a8:	ldr	x19, [sp, #16]
  2236ac:	mov	w0, wzr
  2236b0:	ldp	x29, x30, [sp], #32
  2236b4:	ret

00000000002236b8 <manager_connect_console>:
  2236b8:	stp	x29, x30, [sp, #-32]!
  2236bc:	stp	x20, x19, [sp, #16]
  2236c0:	mov	x29, sp
  2236c4:	cbz	x0, 223928 <manager_connect_console+0x270>
  2236c8:	ldr	w8, [x0, #152]
  2236cc:	mov	x19, x0
  2236d0:	tbz	w8, #31, 223948 <manager_connect_console+0x290>
  2236d4:	adrp	x0, 207000 <inhibit_what_to_string.buffer+0x207000>
  2236d8:	add	x0, x0, #0xe27
  2236dc:	mov	w1, wzr
  2236e0:	bl	2408d0 <access@plt>
  2236e4:	tbnz	w0, #31, 22381c <manager_connect_console+0x164>
  2236e8:	adrp	x0, 208000 <inhibit_what_to_string.buffer+0x208000>
  2236ec:	mov	w1, #0x100                 	// #256
  2236f0:	add	x0, x0, #0x2ad
  2236f4:	movk	w1, #0x8, lsl #16
  2236f8:	bl	2408e0 <open64@plt>
  2236fc:	str	w0, [x19, #152]
  223700:	tbnz	w0, #31, 2237cc <manager_connect_console+0x114>
  223704:	mov	x1, x19
  223708:	mov	w2, w0
  22370c:	ldr	x0, [x1], #136
  223710:	adrp	x4, 225000 <hashmap_iterate+0xc>
  223714:	add	x4, x4, #0x28c
  223718:	mov	w3, wzr
  22371c:	mov	x5, x19
  223720:	bl	2408f0 <sd_event_add_io@plt>
  223724:	tbnz	w0, #31, 223824 <manager_connect_console+0x16c>
  223728:	bl	240900 <__libc_current_sigrtmin@plt>
  22372c:	mov	w20, w0
  223730:	bl	240910 <__libc_current_sigrtmax@plt>
  223734:	cmp	w20, w0
  223738:	b.ge	223864 <manager_connect_console+0x1ac>  // b.tcont
  22373c:	bl	240900 <__libc_current_sigrtmin@plt>
  223740:	add	w0, w0, #0x1
  223744:	mov	w1, #0xffffffff            	// #-1
  223748:	bl	240920 <ignore_signals@plt>
  22374c:	tbnz	w0, #31, 22396c <manager_connect_console+0x2b4>
  223750:	bl	240900 <__libc_current_sigrtmin@plt>
  223754:	mov	w2, w0
  223758:	mov	w3, #0xffffffff            	// #-1
  22375c:	mov	w0, wzr
  223760:	mov	x1, xzr
  223764:	bl	240740 <sigprocmask_many@plt>
  223768:	tbnz	w0, #31, 223990 <manager_connect_console+0x2d8>
  22376c:	ldr	x20, [x19]
  223770:	bl	240900 <__libc_current_sigrtmin@plt>
  223774:	adrp	x3, 225000 <hashmap_iterate+0xc>
  223778:	mov	w2, w0
  22377c:	add	x3, x3, #0x324
  223780:	mov	x0, x20
  223784:	mov	x1, xzr
  223788:	mov	x4, x19
  22378c:	bl	2407d0 <sd_event_add_signal@plt>
  223790:	tbz	w0, #31, 22381c <manager_connect_console+0x164>
  223794:	mov	w19, w0
  223798:	mov	w0, wzr
  22379c:	bl	240750 <log_get_max_level_realm@plt>
  2237a0:	cmp	w0, #0x3
  2237a4:	b.lt	223910 <manager_connect_console+0x258>  // b.tstop
  2237a8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2237ac:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2237b0:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2237b4:	add	x2, x2, #0x9d5
  2237b8:	add	x4, x4, #0x894
  2237bc:	add	x5, x5, #0xa86
  2237c0:	mov	w0, #0x3                   	// #3
  2237c4:	mov	w3, #0x33d                 	// #829
  2237c8:	b	2238e0 <manager_connect_console+0x228>
  2237cc:	bl	240930 <__errno_location@plt>
  2237d0:	ldr	w19, [x0]
  2237d4:	mov	w0, wzr
  2237d8:	bl	240750 <log_get_max_level_realm@plt>
  2237dc:	cmp	w19, #0x2
  2237e0:	b.ne	2238b8 <manager_connect_console+0x200>  // b.any
  2237e4:	cmp	w0, #0x4
  2237e8:	b.lt	22381c <manager_connect_console+0x164>  // b.tstop
  2237ec:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2237f0:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2237f4:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2237f8:	add	x2, x2, #0x9d5
  2237fc:	add	x4, x4, #0x894
  223800:	add	x5, x5, #0x86b
  223804:	mov	w0, #0x4                   	// #4
  223808:	mov	w1, #0x2                   	// #2
  22380c:	mov	w3, #0x321                 	// #801
  223810:	bl	240770 <log_internal_realm@plt>
  223814:	mov	w0, wzr
  223818:	b	22391c <manager_connect_console+0x264>
  22381c:	mov	w0, wzr
  223820:	b	22391c <manager_connect_console+0x264>
  223824:	mov	w20, w0
  223828:	mov	w0, wzr
  22382c:	bl	240750 <log_get_max_level_realm@plt>
  223830:	cmp	w0, #0x3
  223834:	b.lt	2238ec <manager_connect_console+0x234>  // b.tstop
  223838:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22383c:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  223840:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  223844:	add	x2, x2, #0x9d5
  223848:	add	x4, x4, #0x894
  22384c:	add	x5, x5, #0x2c8
  223850:	mov	w0, #0x3                   	// #3
  223854:	mov	w3, #0x32a                 	// #810
  223858:	mov	w1, w20
  22385c:	bl	240770 <log_internal_realm@plt>
  223860:	b	22391c <manager_connect_console+0x264>
  223864:	mov	w0, wzr
  223868:	bl	240750 <log_get_max_level_realm@plt>
  22386c:	cmp	w0, #0x3
  223870:	b.lt	2238f8 <manager_connect_console+0x240>  // b.tstop
  223874:	bl	240900 <__libc_current_sigrtmin@plt>
  223878:	mov	w19, w0
  22387c:	bl	240910 <__libc_current_sigrtmax@plt>
  223880:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  223884:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  223888:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  22388c:	mov	w1, #0x16                  	// #22
  223890:	mov	w7, w0
  223894:	add	x2, x2, #0x9d5
  223898:	add	x4, x4, #0x894
  22389c:	add	x5, x5, #0xea3
  2238a0:	mov	w0, #0x3                   	// #3
  2238a4:	movk	w1, #0x4000, lsl #16
  2238a8:	mov	w3, #0x336                 	// #822
  2238ac:	mov	w6, w19
  2238b0:	bl	240770 <log_internal_realm@plt>
  2238b4:	b	22391c <manager_connect_console+0x264>
  2238b8:	cmp	w0, #0x3
  2238bc:	b.lt	223900 <manager_connect_console+0x248>  // b.tstop
  2238c0:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2238c4:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2238c8:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2238cc:	add	x2, x2, #0x9d5
  2238d0:	add	x4, x4, #0x894
  2238d4:	add	x5, x5, #0x153
  2238d8:	mov	w0, #0x3                   	// #3
  2238dc:	mov	w3, #0x325                 	// #805
  2238e0:	mov	w1, w19
  2238e4:	bl	240770 <log_internal_realm@plt>
  2238e8:	b	22391c <manager_connect_console+0x264>
  2238ec:	mov	w8, wzr
  2238f0:	neg	w9, w20
  2238f4:	b	223918 <manager_connect_console+0x260>
  2238f8:	mov	w0, #0xffffffea            	// #-22
  2238fc:	b	22391c <manager_connect_console+0x264>
  223900:	cmp	w19, #0x0
  223904:	mov	w8, wzr
  223908:	cneg	w9, w19, mi  // mi = first
  22390c:	b	223918 <manager_connect_console+0x260>
  223910:	mov	w8, wzr
  223914:	neg	w9, w19
  223918:	sub	w0, w8, w9, uxtb
  22391c:	ldp	x20, x19, [sp, #16]
  223920:	ldp	x29, x30, [sp], #32
  223924:	ret
  223928:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22392c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  223930:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  223934:	add	x1, x1, #0x102
  223938:	add	x2, x2, #0x9d5
  22393c:	add	x4, x4, #0x53b
  223940:	mov	w3, #0x312                 	// #786
  223944:	bl	240790 <log_assert_failed_realm@plt>
  223948:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22394c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  223950:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  223954:	add	x1, x1, #0x89c
  223958:	add	x2, x2, #0x9d5
  22395c:	add	x4, x4, #0x53b
  223960:	mov	w3, #0x313                 	// #787
  223964:	mov	w0, wzr
  223968:	bl	240790 <log_assert_failed_realm@plt>
  22396c:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  223970:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  223974:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  223978:	add	x1, x1, #0xed1
  22397c:	add	x2, x2, #0x9d5
  223980:	add	x4, x4, #0x53b
  223984:	mov	w3, #0x338                 	// #824
  223988:	mov	w0, wzr
  22398c:	bl	240790 <log_assert_failed_realm@plt>
  223990:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  223994:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  223998:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22399c:	add	x1, x1, #0x4a1
  2239a0:	add	x2, x2, #0x9d5
  2239a4:	add	x4, x4, #0x53b
  2239a8:	mov	w3, #0x339                 	// #825
  2239ac:	mov	w0, wzr
  2239b0:	bl	240790 <log_assert_failed_realm@plt>

00000000002239b4 <manager_connect_udev>:
  2239b4:	stp	x29, x30, [sp, #-64]!
  2239b8:	str	x23, [sp, #16]
  2239bc:	stp	x22, x21, [sp, #32]
  2239c0:	stp	x20, x19, [sp, #48]
  2239c4:	mov	x29, sp
  2239c8:	cbz	x0, 223c00 <manager_connect_udev+0x24c>
  2239cc:	mov	x23, x0
  2239d0:	ldr	x8, [x23, #104]!
  2239d4:	mov	x19, x0
  2239d8:	cbnz	x8, 223c20 <manager_connect_udev+0x26c>
  2239dc:	mov	x22, x19
  2239e0:	ldr	x8, [x22, #112]!
  2239e4:	cbnz	x8, 223c44 <manager_connect_udev+0x290>
  2239e8:	mov	x20, x19
  2239ec:	ldr	x8, [x20, #120]!
  2239f0:	cbnz	x8, 223c68 <manager_connect_udev+0x2b4>
  2239f4:	mov	x21, x19
  2239f8:	ldr	x8, [x21, #128]!
  2239fc:	cbnz	x8, 223c8c <manager_connect_udev+0x2d8>
  223a00:	mov	x0, x23
  223a04:	bl	240940 <sd_device_monitor_new@plt>
  223a08:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223a0c:	ldr	x0, [x23]
  223a10:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  223a14:	add	x1, x1, #0xe4e
  223a18:	bl	240950 <sd_device_monitor_filter_add_match_tag@plt>
  223a1c:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223a20:	ldr	x0, [x19, #104]
  223a24:	ldr	x1, [x19]
  223a28:	bl	240960 <sd_device_monitor_attach_event@plt>
  223a2c:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223a30:	ldr	x0, [x19, #104]
  223a34:	adrp	x1, 225000 <hashmap_iterate+0xc>
  223a38:	add	x1, x1, #0x4c0
  223a3c:	mov	x2, x19
  223a40:	bl	240970 <sd_device_monitor_start@plt>
  223a44:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223a48:	ldr	x0, [x23]
  223a4c:	bl	240980 <sd_device_monitor_get_event_source@plt>
  223a50:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  223a54:	add	x1, x1, #0xedc
  223a58:	bl	240990 <sd_event_source_set_description@plt>
  223a5c:	mov	x0, x22
  223a60:	bl	240940 <sd_device_monitor_new@plt>
  223a64:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223a68:	ldr	x0, [x22]
  223a6c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  223a70:	add	x1, x1, #0x557
  223a74:	mov	x2, xzr
  223a78:	bl	2409a0 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>
  223a7c:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223a80:	ldr	x0, [x22]
  223a84:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  223a88:	add	x1, x1, #0x96b
  223a8c:	mov	x2, xzr
  223a90:	bl	2409a0 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>
  223a94:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223a98:	ldr	x0, [x22]
  223a9c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  223aa0:	add	x1, x1, #0x55d
  223aa4:	mov	x2, xzr
  223aa8:	bl	2409a0 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>
  223aac:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223ab0:	ldr	x0, [x19, #112]
  223ab4:	ldr	x1, [x19]
  223ab8:	bl	240960 <sd_device_monitor_attach_event@plt>
  223abc:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223ac0:	ldr	x0, [x19, #112]
  223ac4:	adrp	x1, 225000 <hashmap_iterate+0xc>
  223ac8:	add	x1, x1, #0x528
  223acc:	mov	x2, x19
  223ad0:	bl	240970 <sd_device_monitor_start@plt>
  223ad4:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223ad8:	ldr	x0, [x19, #112]
  223adc:	bl	240980 <sd_device_monitor_get_event_source@plt>
  223ae0:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  223ae4:	add	x1, x1, #0x9c9
  223ae8:	bl	240990 <sd_event_source_set_description@plt>
  223aec:	mov	x0, x19
  223af0:	bl	228b94 <manager_all_buttons_ignored>
  223af4:	tbz	w0, #0, 223b6c <manager_connect_udev+0x1b8>
  223af8:	ldr	w8, [x19, #156]
  223afc:	cbz	w8, 223be8 <manager_connect_udev+0x234>
  223b00:	ldr	w8, [x19, #152]
  223b04:	tbnz	w8, #31, 223be8 <manager_connect_udev+0x234>
  223b08:	mov	x0, x20
  223b0c:	bl	240940 <sd_device_monitor_new@plt>
  223b10:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223b14:	ldr	x0, [x20]
  223b18:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  223b1c:	add	x1, x1, #0xef0
  223b20:	mov	x2, xzr
  223b24:	bl	2409a0 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>
  223b28:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223b2c:	ldr	x0, [x19, #120]
  223b30:	ldr	x1, [x19]
  223b34:	bl	240960 <sd_device_monitor_attach_event@plt>
  223b38:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223b3c:	ldr	x0, [x19, #120]
  223b40:	adrp	x1, 225000 <hashmap_iterate+0xc>
  223b44:	add	x1, x1, #0x5f8
  223b48:	mov	x2, x19
  223b4c:	bl	240970 <sd_device_monitor_start@plt>
  223b50:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223b54:	ldr	x0, [x20]
  223b58:	bl	240980 <sd_device_monitor_get_event_source@plt>
  223b5c:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  223b60:	add	x1, x1, #0x193
  223b64:	bl	240990 <sd_event_source_set_description@plt>
  223b68:	b	223be8 <manager_connect_udev+0x234>
  223b6c:	mov	x0, x21
  223b70:	bl	240940 <sd_device_monitor_new@plt>
  223b74:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223b78:	ldr	x0, [x21]
  223b7c:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  223b80:	add	x1, x1, #0x8ac
  223b84:	bl	240950 <sd_device_monitor_filter_add_match_tag@plt>
  223b88:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223b8c:	ldr	x0, [x21]
  223b90:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  223b94:	add	x1, x1, #0x557
  223b98:	mov	x2, xzr
  223b9c:	bl	2409a0 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>
  223ba0:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223ba4:	ldr	x0, [x19, #128]
  223ba8:	ldr	x1, [x19]
  223bac:	bl	240960 <sd_device_monitor_attach_event@plt>
  223bb0:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223bb4:	ldr	x0, [x19, #128]
  223bb8:	adrp	x1, 225000 <hashmap_iterate+0xc>
  223bbc:	add	x1, x1, #0x590
  223bc0:	mov	x2, x19
  223bc4:	bl	240970 <sd_device_monitor_start@plt>
  223bc8:	tbnz	w0, #31, 223bec <manager_connect_udev+0x238>
  223bcc:	ldr	x0, [x21]
  223bd0:	bl	240980 <sd_device_monitor_get_event_source@plt>
  223bd4:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  223bd8:	add	x1, x1, #0xb19
  223bdc:	bl	240990 <sd_event_source_set_description@plt>
  223be0:	ldr	w8, [x19, #156]
  223be4:	cbnz	w8, 223b00 <manager_connect_udev+0x14c>
  223be8:	mov	w0, wzr
  223bec:	ldp	x20, x19, [sp, #48]
  223bf0:	ldp	x22, x21, [sp, #32]
  223bf4:	ldr	x23, [sp, #16]
  223bf8:	ldp	x29, x30, [sp], #64
  223bfc:	ret
  223c00:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  223c04:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  223c08:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  223c0c:	add	x1, x1, #0x102
  223c10:	add	x2, x2, #0x9d5
  223c14:	add	x4, x4, #0xaa8
  223c18:	mov	w3, #0x345                 	// #837
  223c1c:	bl	240790 <log_assert_failed_realm@plt>
  223c20:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  223c24:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  223c28:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  223c2c:	add	x1, x1, #0xe68
  223c30:	add	x2, x2, #0x9d5
  223c34:	add	x4, x4, #0xaa8
  223c38:	mov	w3, #0x346                 	// #838
  223c3c:	mov	w0, wzr
  223c40:	bl	240790 <log_assert_failed_realm@plt>
  223c44:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  223c48:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  223c4c:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  223c50:	add	x1, x1, #0x8b5
  223c54:	add	x2, x2, #0x9d5
  223c58:	add	x4, x4, #0xaa8
  223c5c:	mov	w3, #0x347                 	// #839
  223c60:	mov	w0, wzr
  223c64:	bl	240790 <log_assert_failed_realm@plt>
  223c68:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  223c6c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  223c70:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  223c74:	add	x1, x1, #0x56e
  223c78:	add	x2, x2, #0x9d5
  223c7c:	add	x4, x4, #0xaa8
  223c80:	mov	w3, #0x348                 	// #840
  223c84:	mov	w0, wzr
  223c88:	bl	240790 <log_assert_failed_realm@plt>
  223c8c:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  223c90:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  223c94:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  223c98:	add	x1, x1, #0x346
  223c9c:	add	x2, x2, #0x9d5
  223ca0:	add	x4, x4, #0xaa8
  223ca4:	mov	w3, #0x349                 	// #841
  223ca8:	mov	w0, wzr
  223cac:	bl	240790 <log_assert_failed_realm@plt>

0000000000223cb0 <manager_connect_bus>:
  223cb0:	sub	sp, sp, #0x40
  223cb4:	stp	x29, x30, [sp, #16]
  223cb8:	str	x21, [sp, #32]
  223cbc:	stp	x20, x19, [sp, #48]
  223cc0:	add	x29, sp, #0x10
  223cc4:	cbz	x0, 224320 <manager_connect_bus+0x670>
  223cc8:	mov	x20, x0
  223ccc:	ldr	x8, [x20, #8]!
  223cd0:	mov	x19, x0
  223cd4:	cbnz	x8, 224340 <manager_connect_bus+0x690>
  223cd8:	mov	x0, x20
  223cdc:	bl	2409b0 <sd_bus_default_system@plt>
  223ce0:	tbnz	w0, #31, 223fc8 <manager_connect_bus+0x318>
  223ce4:	ldr	x0, [x19, #8]
  223ce8:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  223cec:	adrp	x3, 207000 <inhibit_what_to_string.buffer+0x207000>
  223cf0:	adrp	x4, 252000 <logind_gperf_lookup.wordlist+0x400>
  223cf4:	add	x2, x2, #0xad4
  223cf8:	add	x3, x3, #0xe5d
  223cfc:	add	x4, x4, #0x250
  223d00:	mov	x1, xzr
  223d04:	mov	x5, x19
  223d08:	bl	2409c0 <sd_bus_add_object_vtable@plt>
  223d0c:	tbnz	w0, #31, 224000 <manager_connect_bus+0x350>
  223d10:	ldr	x0, [x19, #8]
  223d14:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  223d18:	adrp	x3, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  223d1c:	adrp	x4, 253000 <manager_vtable+0xdb0>
  223d20:	adrp	x5, 233000 <manager_is_inhibited>
  223d24:	add	x2, x2, #0x8c8
  223d28:	add	x3, x3, #0x104
  223d2c:	add	x4, x4, #0x8a0
  223d30:	add	x5, x5, #0xca0
  223d34:	mov	x1, xzr
  223d38:	mov	x6, x19
  223d3c:	bl	2409d0 <sd_bus_add_fallback_vtable@plt>
  223d40:	tbnz	w0, #31, 224038 <manager_connect_bus+0x388>
  223d44:	ldr	x0, [x19, #8]
  223d48:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  223d4c:	adrp	x3, 233000 <manager_is_inhibited>
  223d50:	add	x2, x2, #0x8c8
  223d54:	add	x3, x3, #0xf1c
  223d58:	mov	x1, xzr
  223d5c:	mov	x4, x19
  223d60:	bl	2409e0 <sd_bus_add_node_enumerator@plt>
  223d64:	tbnz	w0, #31, 224070 <manager_connect_bus+0x3c0>
  223d68:	ldr	x0, [x19, #8]
  223d6c:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  223d70:	adrp	x3, 209000 <inhibit_what_to_string.buffer+0x209000>
  223d74:	adrp	x4, 253000 <manager_vtable+0xdb0>
  223d78:	adrp	x5, 237000 <method_pause_device_complete+0xd4>
  223d7c:	add	x2, x2, #0x32b
  223d80:	add	x3, x3, #0x5aa
  223d84:	add	x4, x4, #0xc30
  223d88:	add	x5, x5, #0x2bc
  223d8c:	mov	x1, xzr
  223d90:	mov	x6, x19
  223d94:	bl	2409d0 <sd_bus_add_fallback_vtable@plt>
  223d98:	tbnz	w0, #31, 2240a8 <manager_connect_bus+0x3f8>
  223d9c:	ldr	x0, [x19, #8]
  223da0:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  223da4:	adrp	x3, 237000 <method_pause_device_complete+0xd4>
  223da8:	add	x2, x2, #0x32b
  223dac:	add	x3, x3, #0x538
  223db0:	mov	x1, xzr
  223db4:	mov	x4, x19
  223db8:	bl	2409e0 <sd_bus_add_node_enumerator@plt>
  223dbc:	tbnz	w0, #31, 2240e0 <manager_connect_bus+0x430>
  223dc0:	ldr	x0, [x19, #8]
  223dc4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  223dc8:	adrp	x3, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  223dcc:	adrp	x4, 254000 <session_vtable+0x3d0>
  223dd0:	adrp	x5, 23d000 <property_get_idle_since_hint+0xd0>
  223dd4:	add	x2, x2, #0xd00
  223dd8:	add	x3, x3, #0xecb
  223ddc:	add	x4, x4, #0x6a8
  223de0:	add	x5, x5, #0xc8
  223de4:	mov	x1, xzr
  223de8:	mov	x6, x19
  223dec:	bl	2409d0 <sd_bus_add_fallback_vtable@plt>
  223df0:	tbnz	w0, #31, 224118 <manager_connect_bus+0x468>
  223df4:	ldr	x0, [x19, #8]
  223df8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  223dfc:	adrp	x3, 23d000 <property_get_idle_since_hint+0xd0>
  223e00:	add	x2, x2, #0xd00
  223e04:	add	x3, x3, #0x31c
  223e08:	mov	x1, xzr
  223e0c:	mov	x4, x19
  223e10:	bl	2409e0 <sd_bus_add_node_enumerator@plt>
  223e14:	tbnz	w0, #31, 224150 <manager_connect_bus+0x4a0>
  223e18:	ldr	x0, [x19, #8]
  223e1c:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  223e20:	adrp	x3, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  223e24:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  223e28:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  223e2c:	adrp	x6, 22e000 <method_inhibit+0x328>
  223e30:	add	x2, x2, #0x5eb
  223e34:	add	x3, x3, #0xee7
  223e38:	add	x4, x4, #0x2ef
  223e3c:	add	x5, x5, #0xaec
  223e40:	add	x6, x6, #0xfa4
  223e44:	mov	x1, xzr
  223e48:	mov	x7, xzr
  223e4c:	str	x19, [sp]
  223e50:	bl	2409f0 <sd_bus_match_signal_async@plt>
  223e54:	tbnz	w0, #31, 224188 <manager_connect_bus+0x4d8>
  223e58:	ldr	x0, [x19, #8]
  223e5c:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  223e60:	adrp	x3, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  223e64:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  223e68:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  223e6c:	adrp	x6, 22f000 <match_job_removed+0x5c>
  223e70:	add	x2, x2, #0x5eb
  223e74:	add	x3, x3, #0xee7
  223e78:	add	x4, x4, #0x2ef
  223e7c:	add	x5, x5, #0xddb
  223e80:	add	x6, x6, #0x2d4
  223e84:	mov	x1, xzr
  223e88:	mov	x7, xzr
  223e8c:	str	x19, [sp]
  223e90:	bl	2409f0 <sd_bus_match_signal_async@plt>
  223e94:	tbnz	w0, #31, 2241c0 <manager_connect_bus+0x510>
  223e98:	ldr	x0, [x19, #8]
  223e9c:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  223ea0:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  223ea4:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  223ea8:	adrp	x6, 22f000 <match_job_removed+0x5c>
  223eac:	add	x2, x2, #0x5eb
  223eb0:	add	x4, x4, #0x5b8
  223eb4:	add	x5, x5, #0x1ca
  223eb8:	add	x6, x6, #0x3c8
  223ebc:	mov	x1, xzr
  223ec0:	mov	x3, xzr
  223ec4:	mov	x7, xzr
  223ec8:	str	x19, [sp]
  223ecc:	bl	2409f0 <sd_bus_match_signal_async@plt>
  223ed0:	tbnz	w0, #31, 2241f8 <manager_connect_bus+0x548>
  223ed4:	ldr	x0, [x19, #8]
  223ed8:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  223edc:	adrp	x3, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  223ee0:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  223ee4:	adrp	x5, 211000 <inhibit_what_to_string.buffer+0x211000>
  223ee8:	adrp	x6, 22f000 <match_job_removed+0x5c>
  223eec:	add	x2, x2, #0x5eb
  223ef0:	add	x3, x3, #0xee7
  223ef4:	add	x4, x4, #0x2ef
  223ef8:	add	x5, x5, #0xaf8
  223efc:	add	x6, x6, #0x4a4
  223f00:	mov	x1, xzr
  223f04:	mov	x7, xzr
  223f08:	str	x19, [sp]
  223f0c:	bl	2409f0 <sd_bus_match_signal_async@plt>
  223f10:	tbnz	w0, #31, 224230 <manager_connect_bus+0x580>
  223f14:	ldr	x0, [x20]
  223f18:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  223f1c:	adrp	x3, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  223f20:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  223f24:	adrp	x5, 206000 <inhibit_what_to_string.buffer+0x206000>
  223f28:	add	x2, x2, #0x5eb
  223f2c:	add	x3, x3, #0xee7
  223f30:	add	x4, x4, #0x2ef
  223f34:	add	x5, x5, #0xd1d
  223f38:	mov	x1, xzr
  223f3c:	mov	x6, xzr
  223f40:	mov	x7, xzr
  223f44:	str	xzr, [sp]
  223f48:	bl	240a00 <sd_bus_call_method_async@plt>
  223f4c:	tbnz	w0, #31, 224268 <manager_connect_bus+0x5b8>
  223f50:	ldr	x0, [x20]
  223f54:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  223f58:	add	x2, x2, #0x8e1
  223f5c:	mov	x1, xzr
  223f60:	mov	x3, xzr
  223f64:	mov	x4, xzr
  223f68:	mov	x5, xzr
  223f6c:	bl	240a10 <sd_bus_request_name_async@plt>
  223f70:	tbnz	w0, #31, 2242c8 <manager_connect_bus+0x618>
  223f74:	ldp	x1, x0, [x19]
  223f78:	mov	w2, wzr
  223f7c:	bl	240a20 <sd_bus_attach_event@plt>
  223f80:	mov	w19, w0
  223f84:	mov	w0, wzr
  223f88:	tbz	w19, #31, 2242b4 <manager_connect_bus+0x604>
  223f8c:	mov	w0, wzr
  223f90:	bl	240750 <log_get_max_level_realm@plt>
  223f94:	cmp	w0, #0x3
  223f98:	b.lt	224314 <manager_connect_bus+0x664>  // b.tstop
  223f9c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  223fa0:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  223fa4:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  223fa8:	add	x2, x2, #0x9d5
  223fac:	add	x4, x4, #0x562
  223fb0:	add	x5, x5, #0x360
  223fb4:	mov	w0, #0x3                   	// #3
  223fb8:	mov	w3, #0x2cb                 	// #715
  223fbc:	mov	w1, w19
  223fc0:	bl	240770 <log_internal_realm@plt>
  223fc4:	b	2242b4 <manager_connect_bus+0x604>
  223fc8:	mov	w21, w0
  223fcc:	mov	w0, wzr
  223fd0:	bl	240750 <log_get_max_level_realm@plt>
  223fd4:	cmp	w0, #0x3
  223fd8:	b.lt	2242a8 <manager_connect_bus+0x5f8>  // b.tstop
  223fdc:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  223fe0:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  223fe4:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  223fe8:	add	x2, x2, #0x9d5
  223fec:	add	x4, x4, #0x562
  223ff0:	add	x5, x5, #0x586
  223ff4:	mov	w0, #0x3                   	// #3
  223ff8:	mov	w3, #0x26f                 	// #623
  223ffc:	b	22429c <manager_connect_bus+0x5ec>
  224000:	mov	w21, w0
  224004:	mov	w0, wzr
  224008:	bl	240750 <log_get_max_level_realm@plt>
  22400c:	cmp	w0, #0x3
  224010:	b.lt	2242a8 <manager_connect_bus+0x5f8>  // b.tstop
  224014:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224018:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22401c:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  224020:	add	x2, x2, #0x9d5
  224024:	add	x4, x4, #0x562
  224028:	add	x5, x5, #0x561
  22402c:	mov	w0, #0x3                   	// #3
  224030:	mov	w3, #0x273                 	// #627
  224034:	b	22429c <manager_connect_bus+0x5ec>
  224038:	mov	w21, w0
  22403c:	mov	w0, wzr
  224040:	bl	240750 <log_get_max_level_realm@plt>
  224044:	cmp	w0, #0x3
  224048:	b.lt	2242a8 <manager_connect_bus+0x5f8>  // b.tstop
  22404c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224050:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  224054:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  224058:	add	x2, x2, #0x9d5
  22405c:	add	x4, x4, #0x562
  224060:	add	x5, x5, #0xc39
  224064:	mov	w0, #0x3                   	// #3
  224068:	mov	w3, #0x277                 	// #631
  22406c:	b	22429c <manager_connect_bus+0x5ec>
  224070:	mov	w21, w0
  224074:	mov	w0, wzr
  224078:	bl	240750 <log_get_max_level_realm@plt>
  22407c:	cmp	w0, #0x3
  224080:	b.lt	2242a8 <manager_connect_bus+0x5f8>  // b.tstop
  224084:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224088:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22408c:	adrp	x5, 210000 <inhibit_what_to_string.buffer+0x210000>
  224090:	add	x2, x2, #0x9d5
  224094:	add	x4, x4, #0x562
  224098:	add	x5, x5, #0x576
  22409c:	mov	w0, #0x3                   	// #3
  2240a0:	mov	w3, #0x27b                 	// #635
  2240a4:	b	22429c <manager_connect_bus+0x5ec>
  2240a8:	mov	w21, w0
  2240ac:	mov	w0, wzr
  2240b0:	bl	240750 <log_get_max_level_realm@plt>
  2240b4:	cmp	w0, #0x3
  2240b8:	b.lt	2242a8 <manager_connect_bus+0x5f8>  // b.tstop
  2240bc:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2240c0:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  2240c4:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2240c8:	add	x2, x2, #0x9d5
  2240cc:	add	x4, x4, #0x562
  2240d0:	add	x5, x5, #0x8b9
  2240d4:	mov	w0, #0x3                   	// #3
  2240d8:	mov	w3, #0x27f                 	// #639
  2240dc:	b	22429c <manager_connect_bus+0x5ec>
  2240e0:	mov	w21, w0
  2240e4:	mov	w0, wzr
  2240e8:	bl	240750 <log_get_max_level_realm@plt>
  2240ec:	cmp	w0, #0x3
  2240f0:	b.lt	2242a8 <manager_connect_bus+0x5f8>  // b.tstop
  2240f4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2240f8:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  2240fc:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  224100:	add	x2, x2, #0x9d5
  224104:	add	x4, x4, #0x562
  224108:	add	x5, x5, #0xe7c
  22410c:	mov	w0, #0x3                   	// #3
  224110:	mov	w3, #0x283                 	// #643
  224114:	b	22429c <manager_connect_bus+0x5ec>
  224118:	mov	w21, w0
  22411c:	mov	w0, wzr
  224120:	bl	240750 <log_get_max_level_realm@plt>
  224124:	cmp	w0, #0x3
  224128:	b.lt	2242a8 <manager_connect_bus+0x5f8>  // b.tstop
  22412c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224130:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  224134:	adrp	x5, 211000 <inhibit_what_to_string.buffer+0x211000>
  224138:	add	x2, x2, #0x9d5
  22413c:	add	x4, x4, #0x562
  224140:	add	x5, x5, #0xef3
  224144:	mov	w0, #0x3                   	// #3
  224148:	mov	w3, #0x287                 	// #647
  22414c:	b	22429c <manager_connect_bus+0x5ec>
  224150:	mov	w21, w0
  224154:	mov	w0, wzr
  224158:	bl	240750 <log_get_max_level_realm@plt>
  22415c:	cmp	w0, #0x3
  224160:	b.lt	2242a8 <manager_connect_bus+0x5f8>  // b.tstop
  224164:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224168:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22416c:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  224170:	add	x2, x2, #0x9d5
  224174:	add	x4, x4, #0x562
  224178:	add	x5, x5, #0x5c9
  22417c:	mov	w0, #0x3                   	// #3
  224180:	mov	w3, #0x28b                 	// #651
  224184:	b	22429c <manager_connect_bus+0x5ec>
  224188:	mov	w21, w0
  22418c:	mov	w0, wzr
  224190:	bl	240750 <log_get_max_level_realm@plt>
  224194:	cmp	w0, #0x3
  224198:	b.lt	2242a8 <manager_connect_bus+0x5f8>  // b.tstop
  22419c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2241a0:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  2241a4:	adrp	x5, 211000 <inhibit_what_to_string.buffer+0x211000>
  2241a8:	add	x2, x2, #0x9d5
  2241ac:	add	x4, x4, #0x562
  2241b0:	add	x5, x5, #0x4df
  2241b4:	mov	w0, #0x3                   	// #3
  2241b8:	mov	w3, #0x296                 	// #662
  2241bc:	b	22429c <manager_connect_bus+0x5ec>
  2241c0:	mov	w21, w0
  2241c4:	mov	w0, wzr
  2241c8:	bl	240750 <log_get_max_level_realm@plt>
  2241cc:	cmp	w0, #0x3
  2241d0:	b.lt	2242a8 <manager_connect_bus+0x5f8>  // b.tstop
  2241d4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2241d8:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  2241dc:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2241e0:	add	x2, x2, #0x9d5
  2241e4:	add	x4, x4, #0x562
  2241e8:	add	x5, x5, #0x9e
  2241ec:	mov	w0, #0x3                   	// #3
  2241f0:	mov	w3, #0x2a1                 	// #673
  2241f4:	b	22429c <manager_connect_bus+0x5ec>
  2241f8:	mov	w21, w0
  2241fc:	mov	w0, wzr
  224200:	bl	240750 <log_get_max_level_realm@plt>
  224204:	cmp	w0, #0x3
  224208:	b.lt	2242a8 <manager_connect_bus+0x5f8>  // b.tstop
  22420c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224210:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  224214:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  224218:	add	x2, x2, #0x9d5
  22421c:	add	x4, x4, #0x562
  224220:	add	x5, x5, #0x974
  224224:	mov	w0, #0x3                   	// #3
  224228:	mov	w3, #0x2ac                 	// #684
  22422c:	b	22429c <manager_connect_bus+0x5ec>
  224230:	mov	w21, w0
  224234:	mov	w0, wzr
  224238:	bl	240750 <log_get_max_level_realm@plt>
  22423c:	cmp	w0, #0x3
  224240:	b.lt	2242a8 <manager_connect_bus+0x5f8>  // b.tstop
  224244:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224248:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22424c:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  224250:	add	x2, x2, #0x9d5
  224254:	add	x4, x4, #0x562
  224258:	add	x5, x5, #0x8e5
  22425c:	mov	w0, #0x3                   	// #3
  224260:	mov	w3, #0x2b7                 	// #695
  224264:	b	22429c <manager_connect_bus+0x5ec>
  224268:	mov	w21, w0
  22426c:	mov	w0, wzr
  224270:	bl	240750 <log_get_max_level_realm@plt>
  224274:	cmp	w0, #0x3
  224278:	b.lt	2242a8 <manager_connect_bus+0x5f8>  // b.tstop
  22427c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224280:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  224284:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  224288:	add	x2, x2, #0x9d5
  22428c:	add	x4, x4, #0x562
  224290:	add	x5, x5, #0x310
  224294:	mov	w0, #0x3                   	// #3
  224298:	mov	w3, #0x2c3                 	// #707
  22429c:	mov	w1, w21
  2242a0:	bl	240770 <log_internal_realm@plt>
  2242a4:	b	2242b4 <manager_connect_bus+0x604>
  2242a8:	mov	w8, wzr
  2242ac:	neg	w9, w21
  2242b0:	sub	w0, w8, w9, uxtb
  2242b4:	ldp	x20, x19, [sp, #48]
  2242b8:	ldr	x21, [sp, #32]
  2242bc:	ldp	x29, x30, [sp, #16]
  2242c0:	add	sp, sp, #0x40
  2242c4:	ret
  2242c8:	mov	w20, w0
  2242cc:	mov	w0, wzr
  2242d0:	bl	240750 <log_get_max_level_realm@plt>
  2242d4:	cmp	w0, #0x3
  2242d8:	b.lt	224308 <manager_connect_bus+0x658>  // b.tstop
  2242dc:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2242e0:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  2242e4:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  2242e8:	add	x2, x2, #0x9d5
  2242ec:	add	x4, x4, #0x562
  2242f0:	add	x5, x5, #0x9a6
  2242f4:	mov	w0, #0x3                   	// #3
  2242f8:	mov	w3, #0x2c7                 	// #711
  2242fc:	mov	w1, w20
  224300:	bl	240770 <log_internal_realm@plt>
  224304:	b	2242b4 <manager_connect_bus+0x604>
  224308:	mov	w8, wzr
  22430c:	neg	w9, w20
  224310:	b	2242b0 <manager_connect_bus+0x600>
  224314:	mov	w8, wzr
  224318:	neg	w9, w19
  22431c:	b	2242b0 <manager_connect_bus+0x600>
  224320:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  224324:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224328:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22432c:	add	x1, x1, #0x102
  224330:	add	x2, x2, #0x9d5
  224334:	add	x4, x4, #0x1a7
  224338:	mov	w3, #0x26a                 	// #618
  22433c:	bl	240790 <log_assert_failed_realm@plt>
  224340:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  224344:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224348:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22434c:	add	x1, x1, #0xacc
  224350:	add	x2, x2, #0x9d5
  224354:	add	x4, x4, #0x1a7
  224358:	mov	w3, #0x26b                 	// #619
  22435c:	mov	w0, wzr
  224360:	bl	240790 <log_assert_failed_realm@plt>

0000000000224364 <manager_enumerate_devices>:
  224364:	sub	sp, sp, #0x30
  224368:	stp	x29, x30, [sp, #16]
  22436c:	stp	x20, x19, [sp, #32]
  224370:	add	x29, sp, #0x10
  224374:	str	xzr, [sp, #8]
  224378:	cbz	x0, 2243fc <manager_enumerate_devices+0x98>
  22437c:	mov	x19, x0
  224380:	add	x0, sp, #0x8
  224384:	bl	240a30 <sd_device_enumerator_new@plt>
  224388:	tbnz	w0, #31, 2243dc <manager_enumerate_devices+0x78>
  22438c:	ldr	x0, [sp, #8]
  224390:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  224394:	add	x1, x1, #0xe4e
  224398:	bl	240a40 <sd_device_enumerator_add_match_tag@plt>
  22439c:	mov	w20, w0
  2243a0:	tbnz	w0, #31, 2243e0 <manager_enumerate_devices+0x7c>
  2243a4:	ldr	x0, [sp, #8]
  2243a8:	bl	240a50 <sd_device_enumerator_get_device_first@plt>
  2243ac:	cbz	x0, 2243e0 <manager_enumerate_devices+0x7c>
  2243b0:	mov	x1, x0
  2243b4:	mov	x0, x19
  2243b8:	bl	227cac <manager_process_seat_device>
  2243bc:	ldr	x8, [sp, #8]
  2243c0:	cmp	w0, #0x0
  2243c4:	csel	w20, w0, w20, lt  // lt = tstop
  2243c8:	mov	x0, x8
  2243cc:	bl	240a60 <sd_device_enumerator_get_device_next@plt>
  2243d0:	mov	x1, x0
  2243d4:	cbnz	x0, 2243b4 <manager_enumerate_devices+0x50>
  2243d8:	b	2243e0 <manager_enumerate_devices+0x7c>
  2243dc:	mov	w20, w0
  2243e0:	add	x0, sp, #0x8
  2243e4:	bl	2256e0 <sd_device_enumerator_unrefp>
  2243e8:	mov	w0, w20
  2243ec:	ldp	x20, x19, [sp, #32]
  2243f0:	ldp	x29, x30, [sp, #16]
  2243f4:	add	sp, sp, #0x30
  2243f8:	ret
  2243fc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  224400:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224404:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  224408:	add	x1, x1, #0x102
  22440c:	add	x2, x2, #0x9d5
  224410:	add	x4, x4, #0xde7
  224414:	mov	w3, #0xae                  	// #174
  224418:	bl	240790 <log_assert_failed_realm@plt>

000000000022441c <manager_enumerate_seats>:
  22441c:	stp	x29, x30, [sp, #-96]!
  224420:	mov	x29, sp
  224424:	str	x27, [sp, #16]
  224428:	stp	x26, x25, [sp, #32]
  22442c:	stp	x24, x23, [sp, #48]
  224430:	stp	x22, x21, [sp, #64]
  224434:	stp	x20, x19, [sp, #80]
  224438:	str	xzr, [x29, #24]
  22443c:	cbz	x0, 2245d0 <manager_enumerate_seats+0x1b4>
  224440:	mov	x19, x0
  224444:	adrp	x0, 208000 <inhibit_what_to_string.buffer+0x208000>
  224448:	add	x0, x0, #0xe24
  22444c:	bl	240a70 <opendir@plt>
  224450:	mov	x21, x0
  224454:	str	x0, [x29, #24]
  224458:	bl	240930 <__errno_location@plt>
  22445c:	mov	x20, x0
  224460:	cbz	x21, 224530 <manager_enumerate_seats+0x114>
  224464:	mov	x0, x21
  224468:	str	wzr, [x20]
  22446c:	bl	240a80 <readdir64@plt>
  224470:	cbz	x0, 224544 <manager_enumerate_seats+0x128>
  224474:	adrp	x22, 210000 <inhibit_what_to_string.buffer+0x210000>
  224478:	adrp	x23, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22447c:	adrp	x24, 209000 <inhibit_what_to_string.buffer+0x209000>
  224480:	mov	x26, x0
  224484:	mov	w27, wzr
  224488:	add	x22, x22, #0x9d5
  22448c:	add	x23, x23, #0x5d8
  224490:	add	x24, x24, #0x604
  224494:	b	2244b8 <manager_enumerate_seats+0x9c>
  224498:	bl	234bac <seat_load>
  22449c:	cmp	w0, #0x0
  2244a0:	csel	w27, w0, w27, lt  // lt = tstop
  2244a4:	mov	x0, x21
  2244a8:	str	wzr, [x20]
  2244ac:	bl	240a80 <readdir64@plt>
  2244b0:	mov	x26, x0
  2244b4:	cbz	x0, 224548 <manager_enumerate_seats+0x12c>
  2244b8:	add	x25, x26, #0x13
  2244bc:	mov	x0, x25
  2244c0:	bl	240a90 <hidden_or_backup_file@plt>
  2244c4:	tbnz	w0, #0, 2244a4 <manager_enumerate_seats+0x88>
  2244c8:	mov	x0, x26
  2244cc:	bl	240aa0 <dirent_is_file@plt>
  2244d0:	tbz	w0, #0, 2244a4 <manager_enumerate_seats+0x88>
  2244d4:	ldr	x0, [x19, #24]
  2244d8:	mov	x1, x25
  2244dc:	bl	225718 <hashmap_get>
  2244e0:	cbnz	x0, 224498 <manager_enumerate_seats+0x7c>
  2244e4:	mov	x0, x21
  2244e8:	bl	240ab0 <dirfd@plt>
  2244ec:	mov	x1, x25
  2244f0:	mov	w2, wzr
  2244f4:	bl	240ac0 <unlinkat@plt>
  2244f8:	tbz	w0, #31, 2244a4 <manager_enumerate_seats+0x88>
  2244fc:	mov	w0, wzr
  224500:	bl	240750 <log_get_max_level_realm@plt>
  224504:	cmp	w0, #0x4
  224508:	b.lt	2244a4 <manager_enumerate_seats+0x88>  // b.tstop
  22450c:	mov	w0, #0x4                   	// #4
  224510:	mov	w3, #0x107                 	// #263
  224514:	mov	w1, wzr
  224518:	mov	x2, x22
  22451c:	mov	x4, x23
  224520:	mov	x5, x24
  224524:	mov	x6, x25
  224528:	bl	240770 <log_internal_realm@plt>
  22452c:	b	2244a4 <manager_enumerate_seats+0x88>
  224530:	ldr	w19, [x20]
  224534:	cmp	w19, #0x2
  224538:	b.ne	22457c <manager_enumerate_seats+0x160>  // b.any
  22453c:	mov	w19, wzr
  224540:	b	224554 <manager_enumerate_seats+0x138>
  224544:	mov	w27, wzr
  224548:	ldr	w8, [x20]
  22454c:	cmp	w8, #0x0
  224550:	csneg	w19, w27, w8, le
  224554:	add	x0, x29, #0x18
  224558:	bl	2256fc <closedirp>
  22455c:	mov	w0, w19
  224560:	ldp	x20, x19, [sp, #80]
  224564:	ldp	x22, x21, [sp, #64]
  224568:	ldp	x24, x23, [sp, #48]
  22456c:	ldp	x26, x25, [sp, #32]
  224570:	ldr	x27, [sp, #16]
  224574:	ldp	x29, x30, [sp], #96
  224578:	ret
  22457c:	mov	w0, wzr
  224580:	bl	240750 <log_get_max_level_realm@plt>
  224584:	cmp	w0, #0x3
  224588:	b.lt	2245bc <manager_enumerate_seats+0x1a0>  // b.tstop
  22458c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224590:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  224594:	adrp	x5, 206000 <inhibit_what_to_string.buffer+0x206000>
  224598:	add	x2, x2, #0x9d5
  22459c:	add	x4, x4, #0x5d8
  2245a0:	add	x5, x5, #0xd27
  2245a4:	mov	w0, #0x3                   	// #3
  2245a8:	mov	w3, #0xf9                  	// #249
  2245ac:	mov	w1, w19
  2245b0:	bl	240770 <log_internal_realm@plt>
  2245b4:	mov	w19, w0
  2245b8:	b	224554 <manager_enumerate_seats+0x138>
  2245bc:	cmp	w19, #0x0
  2245c0:	mov	w8, wzr
  2245c4:	cneg	w9, w19, mi  // mi = first
  2245c8:	sub	w19, w8, w9, uxtb
  2245cc:	b	224554 <manager_enumerate_seats+0x138>
  2245d0:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2245d4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2245d8:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  2245dc:	add	x1, x1, #0x102
  2245e0:	add	x2, x2, #0x9d5
  2245e4:	add	x4, x4, #0x50a
  2245e8:	mov	w3, #0xee                  	// #238
  2245ec:	bl	240790 <log_assert_failed_realm@plt>

00000000002245f0 <manager_enumerate_users>:
  2245f0:	sub	sp, sp, #0x70
  2245f4:	stp	x29, x30, [sp, #16]
  2245f8:	add	x29, sp, #0x10
  2245fc:	str	x27, [sp, #32]
  224600:	stp	x26, x25, [sp, #48]
  224604:	stp	x24, x23, [sp, #64]
  224608:	stp	x22, x21, [sp, #80]
  22460c:	stp	x20, x19, [sp, #96]
  224610:	str	xzr, [x29, #24]
  224614:	cbz	x0, 2247bc <manager_enumerate_users+0x1cc>
  224618:	mov	x19, x0
  22461c:	bl	22572c <manager_enumerate_linger_users>
  224620:	mov	w22, w0
  224624:	adrp	x0, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  224628:	add	x0, x0, #0xdc8
  22462c:	bl	240a70 <opendir@plt>
  224630:	mov	x21, x0
  224634:	str	x0, [x29, #24]
  224638:	bl	240930 <__errno_location@plt>
  22463c:	mov	x20, x0
  224640:	cbz	x21, 22472c <manager_enumerate_users+0x13c>
  224644:	mov	x0, x21
  224648:	str	wzr, [x20]
  22464c:	bl	240a80 <readdir64@plt>
  224650:	cbz	x0, 22471c <manager_enumerate_users+0x12c>
  224654:	adrp	x23, 210000 <inhibit_what_to_string.buffer+0x210000>
  224658:	adrp	x24, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22465c:	adrp	x25, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  224660:	mov	x27, x0
  224664:	add	x23, x23, #0x9d5
  224668:	add	x24, x24, #0x8f8
  22466c:	add	x25, x25, #0x90f
  224670:	b	2246a0 <manager_enumerate_users+0xb0>
  224674:	ldr	x0, [sp, #8]
  224678:	bl	23e844 <user_add_to_gc_queue>
  22467c:	ldr	x0, [sp, #8]
  224680:	bl	23e150 <user_load>
  224684:	cmp	w0, #0x0
  224688:	csel	w22, w0, w22, lt  // lt = tstop
  22468c:	mov	x0, x21
  224690:	str	wzr, [x20]
  224694:	bl	240a80 <readdir64@plt>
  224698:	mov	x27, x0
  22469c:	cbz	x0, 22471c <manager_enumerate_users+0x12c>
  2246a0:	add	x26, x27, #0x13
  2246a4:	mov	x0, x26
  2246a8:	bl	240a90 <hidden_or_backup_file@plt>
  2246ac:	tbnz	w0, #0, 22468c <manager_enumerate_users+0x9c>
  2246b0:	mov	x0, x27
  2246b4:	bl	240aa0 <dirent_is_file@plt>
  2246b8:	tbz	w0, #0, 22468c <manager_enumerate_users+0x9c>
  2246bc:	add	x2, sp, #0x8
  2246c0:	mov	x0, x19
  2246c4:	mov	x1, x26
  2246c8:	bl	2279ec <manager_add_user_by_name>
  2246cc:	tbz	w0, #31, 224674 <manager_enumerate_users+0x84>
  2246d0:	mov	w27, w0
  2246d4:	mov	w0, wzr
  2246d8:	bl	240750 <log_get_max_level_realm@plt>
  2246dc:	cmp	w0, #0x4
  2246e0:	b.lt	22470c <manager_enumerate_users+0x11c>  // b.tstop
  2246e4:	mov	w0, #0x4                   	// #4
  2246e8:	mov	w3, #0x14c                 	// #332
  2246ec:	mov	w1, w27
  2246f0:	mov	x2, x23
  2246f4:	mov	x4, x24
  2246f8:	mov	x5, x25
  2246fc:	mov	x6, x26
  224700:	bl	240770 <log_internal_realm@plt>
  224704:	mov	w22, w0
  224708:	b	22468c <manager_enumerate_users+0x9c>
  22470c:	mov	w8, wzr
  224710:	neg	w9, w27
  224714:	sub	w22, w8, w9, uxtb
  224718:	b	22468c <manager_enumerate_users+0x9c>
  22471c:	ldr	w8, [x20]
  224720:	cmp	w8, #0x0
  224724:	csneg	w19, w22, w8, le
  224728:	b	224790 <manager_enumerate_users+0x1a0>
  22472c:	ldr	w19, [x20]
  224730:	cmp	w19, #0x2
  224734:	b.ne	224740 <manager_enumerate_users+0x150>  // b.any
  224738:	mov	w19, wzr
  22473c:	b	224790 <manager_enumerate_users+0x1a0>
  224740:	mov	w0, wzr
  224744:	bl	240750 <log_get_max_level_realm@plt>
  224748:	cmp	w0, #0x3
  22474c:	b.lt	224780 <manager_enumerate_users+0x190>  // b.tstop
  224750:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224754:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  224758:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  22475c:	add	x2, x2, #0x9d5
  224760:	add	x4, x4, #0x8f8
  224764:	add	x5, x5, #0x62f
  224768:	mov	w0, #0x3                   	// #3
  22476c:	mov	w3, #0x141                 	// #321
  224770:	mov	w1, w19
  224774:	bl	240770 <log_internal_realm@plt>
  224778:	mov	w19, w0
  22477c:	b	224790 <manager_enumerate_users+0x1a0>
  224780:	cmp	w19, #0x0
  224784:	mov	w8, wzr
  224788:	cneg	w9, w19, mi  // mi = first
  22478c:	sub	w19, w8, w9, uxtb
  224790:	add	x0, x29, #0x18
  224794:	bl	2256fc <closedirp>
  224798:	mov	w0, w19
  22479c:	ldp	x20, x19, [sp, #96]
  2247a0:	ldp	x22, x21, [sp, #80]
  2247a4:	ldp	x24, x23, [sp, #64]
  2247a8:	ldp	x26, x25, [sp, #48]
  2247ac:	ldr	x27, [sp, #32]
  2247b0:	ldp	x29, x30, [sp, #16]
  2247b4:	add	sp, sp, #0x70
  2247b8:	ret
  2247bc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2247c0:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2247c4:	adrp	x4, 206000 <inhibit_what_to_string.buffer+0x206000>
  2247c8:	add	x1, x1, #0x102
  2247cc:	add	x2, x2, #0x9d5
  2247d0:	add	x4, x4, #0xd4d
  2247d4:	mov	w3, #0x136                 	// #310
  2247d8:	bl	240790 <log_assert_failed_realm@plt>

00000000002247dc <manager_enumerate_sessions>:
  2247dc:	sub	sp, sp, #0x70
  2247e0:	stp	x29, x30, [sp, #16]
  2247e4:	add	x29, sp, #0x10
  2247e8:	str	x27, [sp, #32]
  2247ec:	stp	x26, x25, [sp, #48]
  2247f0:	stp	x24, x23, [sp, #64]
  2247f4:	stp	x22, x21, [sp, #80]
  2247f8:	stp	x20, x19, [sp, #96]
  2247fc:	str	xzr, [x29, #24]
  224800:	cbz	x0, 2249b8 <manager_enumerate_sessions+0x1dc>
  224804:	mov	x19, x0
  224808:	adrp	x0, 208000 <inhibit_what_to_string.buffer+0x208000>
  22480c:	add	x0, x0, #0xe37
  224810:	bl	240a70 <opendir@plt>
  224814:	mov	x21, x0
  224818:	str	x0, [x29, #24]
  22481c:	bl	240930 <__errno_location@plt>
  224820:	mov	x20, x0
  224824:	cbz	x21, 224904 <manager_enumerate_sessions+0x128>
  224828:	mov	x0, x21
  22482c:	str	wzr, [x20]
  224830:	bl	240a80 <readdir64@plt>
  224834:	cbz	x0, 224918 <manager_enumerate_sessions+0x13c>
  224838:	adrp	x23, 210000 <inhibit_what_to_string.buffer+0x210000>
  22483c:	adrp	x24, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  224840:	adrp	x25, 207000 <inhibit_what_to_string.buffer+0x207000>
  224844:	mov	x27, x0
  224848:	mov	w22, wzr
  22484c:	add	x23, x23, #0x9d5
  224850:	add	x24, x24, #0x8c1
  224854:	add	x25, x25, #0x34b
  224858:	b	224888 <manager_enumerate_sessions+0xac>
  22485c:	ldr	x0, [sp, #8]
  224860:	bl	23bc50 <session_add_to_gc_queue>
  224864:	ldr	x0, [sp, #8]
  224868:	bl	23a580 <session_load>
  22486c:	cmp	w0, #0x0
  224870:	csel	w22, w0, w22, lt  // lt = tstop
  224874:	mov	x0, x21
  224878:	str	wzr, [x20]
  22487c:	bl	240a80 <readdir64@plt>
  224880:	mov	x27, x0
  224884:	cbz	x0, 22491c <manager_enumerate_sessions+0x140>
  224888:	add	x26, x27, #0x13
  22488c:	mov	x0, x26
  224890:	bl	240a90 <hidden_or_backup_file@plt>
  224894:	tbnz	w0, #0, 224874 <manager_enumerate_sessions+0x98>
  224898:	mov	x0, x27
  22489c:	bl	240aa0 <dirent_is_file@plt>
  2248a0:	tbz	w0, #0, 224874 <manager_enumerate_sessions+0x98>
  2248a4:	add	x2, sp, #0x8
  2248a8:	mov	x0, x19
  2248ac:	mov	x1, x26
  2248b0:	bl	227860 <manager_add_session>
  2248b4:	tbz	w0, #31, 22485c <manager_enumerate_sessions+0x80>
  2248b8:	mov	w27, w0
  2248bc:	mov	w0, wzr
  2248c0:	bl	240750 <log_get_max_level_realm@plt>
  2248c4:	cmp	w0, #0x4
  2248c8:	b.lt	2248f4 <manager_enumerate_sessions+0x118>  // b.tstop
  2248cc:	mov	w0, #0x4                   	// #4
  2248d0:	mov	w3, #0x1df                 	// #479
  2248d4:	mov	w1, w27
  2248d8:	mov	x2, x23
  2248dc:	mov	x4, x24
  2248e0:	mov	x5, x25
  2248e4:	mov	x6, x26
  2248e8:	bl	240770 <log_internal_realm@plt>
  2248ec:	mov	w22, w0
  2248f0:	b	224874 <manager_enumerate_sessions+0x98>
  2248f4:	mov	w8, wzr
  2248f8:	neg	w9, w27
  2248fc:	sub	w22, w8, w9, uxtb
  224900:	b	224874 <manager_enumerate_sessions+0x98>
  224904:	ldr	w19, [x20]
  224908:	cmp	w19, #0x2
  22490c:	b.ne	22493c <manager_enumerate_sessions+0x160>  // b.any
  224910:	mov	w22, wzr
  224914:	b	22498c <manager_enumerate_sessions+0x1b0>
  224918:	mov	w22, wzr
  22491c:	ldr	w8, [x20]
  224920:	cmp	w8, #0x1
  224924:	b.lt	224930 <manager_enumerate_sessions+0x154>  // b.tstop
  224928:	neg	w22, w8
  22492c:	b	22498c <manager_enumerate_sessions+0x1b0>
  224930:	mov	x0, x19
  224934:	bl	225900 <manager_attach_fds>
  224938:	b	22498c <manager_enumerate_sessions+0x1b0>
  22493c:	mov	w0, wzr
  224940:	bl	240750 <log_get_max_level_realm@plt>
  224944:	cmp	w0, #0x3
  224948:	b.lt	22497c <manager_enumerate_sessions+0x1a0>  // b.tstop
  22494c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224950:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  224954:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  224958:	add	x2, x2, #0x9d5
  22495c:	add	x4, x4, #0x8c1
  224960:	add	x5, x5, #0x940
  224964:	mov	w0, #0x3                   	// #3
  224968:	mov	w3, #0x1d4                 	// #468
  22496c:	mov	w1, w19
  224970:	bl	240770 <log_internal_realm@plt>
  224974:	mov	w22, w0
  224978:	b	22498c <manager_enumerate_sessions+0x1b0>
  22497c:	cmp	w19, #0x0
  224980:	mov	w8, wzr
  224984:	cneg	w9, w19, mi  // mi = first
  224988:	sub	w22, w8, w9, uxtb
  22498c:	add	x0, x29, #0x18
  224990:	bl	2256fc <closedirp>
  224994:	mov	w0, w22
  224998:	ldp	x20, x19, [sp, #96]
  22499c:	ldp	x22, x21, [sp, #80]
  2249a0:	ldp	x24, x23, [sp, #64]
  2249a4:	ldp	x26, x25, [sp, #48]
  2249a8:	ldr	x27, [sp, #32]
  2249ac:	ldp	x29, x30, [sp, #16]
  2249b0:	add	sp, sp, #0x70
  2249b4:	ret
  2249b8:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2249bc:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2249c0:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2249c4:	add	x1, x1, #0x102
  2249c8:	add	x2, x2, #0x9d5
  2249cc:	add	x4, x4, #0xaf7
  2249d0:	mov	w3, #0x1cc                 	// #460
  2249d4:	bl	240790 <log_assert_failed_realm@plt>

00000000002249d8 <manager_enumerate_inhibitors>:
  2249d8:	sub	sp, sp, #0x70
  2249dc:	stp	x29, x30, [sp, #16]
  2249e0:	add	x29, sp, #0x10
  2249e4:	str	x27, [sp, #32]
  2249e8:	stp	x26, x25, [sp, #48]
  2249ec:	stp	x24, x23, [sp, #64]
  2249f0:	stp	x22, x21, [sp, #80]
  2249f4:	stp	x20, x19, [sp, #96]
  2249f8:	str	xzr, [x29, #24]
  2249fc:	cbz	x0, 224b9c <manager_enumerate_inhibitors+0x1c4>
  224a00:	mov	x19, x0
  224a04:	adrp	x0, 211000 <inhibit_what_to_string.buffer+0x211000>
  224a08:	add	x0, x0, #0xb2f
  224a0c:	bl	240a70 <opendir@plt>
  224a10:	mov	x21, x0
  224a14:	str	x0, [x29, #24]
  224a18:	bl	240930 <__errno_location@plt>
  224a1c:	mov	x20, x0
  224a20:	cbz	x21, 224af8 <manager_enumerate_inhibitors+0x120>
  224a24:	mov	x0, x21
  224a28:	str	wzr, [x20]
  224a2c:	bl	240a80 <readdir64@plt>
  224a30:	cbz	x0, 224b0c <manager_enumerate_inhibitors+0x134>
  224a34:	adrp	x22, 210000 <inhibit_what_to_string.buffer+0x210000>
  224a38:	adrp	x23, 211000 <inhibit_what_to_string.buffer+0x211000>
  224a3c:	adrp	x24, 210000 <inhibit_what_to_string.buffer+0x210000>
  224a40:	mov	x27, x0
  224a44:	mov	w25, wzr
  224a48:	add	x22, x22, #0x9d5
  224a4c:	add	x23, x23, #0xb44
  224a50:	add	x24, x24, #0xa7a
  224a54:	b	224a7c <manager_enumerate_inhibitors+0xa4>
  224a58:	ldr	x0, [sp, #8]
  224a5c:	bl	2326f4 <inhibitor_load>
  224a60:	cmp	w0, #0x0
  224a64:	csel	w25, w0, w25, lt  // lt = tstop
  224a68:	mov	x0, x21
  224a6c:	str	wzr, [x20]
  224a70:	bl	240a80 <readdir64@plt>
  224a74:	mov	x27, x0
  224a78:	cbz	x0, 224b10 <manager_enumerate_inhibitors+0x138>
  224a7c:	add	x26, x27, #0x13
  224a80:	mov	x0, x26
  224a84:	bl	240a90 <hidden_or_backup_file@plt>
  224a88:	tbnz	w0, #0, 224a68 <manager_enumerate_inhibitors+0x90>
  224a8c:	mov	x0, x27
  224a90:	bl	240aa0 <dirent_is_file@plt>
  224a94:	tbz	w0, #0, 224a68 <manager_enumerate_inhibitors+0x90>
  224a98:	add	x2, sp, #0x8
  224a9c:	mov	x0, x19
  224aa0:	mov	x1, x26
  224aa4:	bl	227b4c <manager_add_inhibitor>
  224aa8:	tbz	w0, #31, 224a58 <manager_enumerate_inhibitors+0x80>
  224aac:	mov	w27, w0
  224ab0:	mov	w0, wzr
  224ab4:	bl	240750 <log_get_max_level_realm@plt>
  224ab8:	cmp	w0, #0x4
  224abc:	b.lt	224ae8 <manager_enumerate_inhibitors+0x110>  // b.tstop
  224ac0:	mov	w0, #0x4                   	// #4
  224ac4:	mov	w3, #0x209                 	// #521
  224ac8:	mov	w1, w27
  224acc:	mov	x2, x22
  224ad0:	mov	x4, x23
  224ad4:	mov	x5, x24
  224ad8:	mov	x6, x26
  224adc:	bl	240770 <log_internal_realm@plt>
  224ae0:	mov	w25, w0
  224ae4:	b	224a68 <manager_enumerate_inhibitors+0x90>
  224ae8:	mov	w8, wzr
  224aec:	neg	w9, w27
  224af0:	sub	w25, w8, w9, uxtb
  224af4:	b	224a68 <manager_enumerate_inhibitors+0x90>
  224af8:	ldr	w19, [x20]
  224afc:	cmp	w19, #0x2
  224b00:	b.ne	224b48 <manager_enumerate_inhibitors+0x170>  // b.any
  224b04:	mov	w19, wzr
  224b08:	b	224b1c <manager_enumerate_inhibitors+0x144>
  224b0c:	mov	w25, wzr
  224b10:	ldr	w8, [x20]
  224b14:	cmp	w8, #0x0
  224b18:	csneg	w19, w25, w8, le
  224b1c:	add	x0, x29, #0x18
  224b20:	bl	2256fc <closedirp>
  224b24:	mov	w0, w19
  224b28:	ldp	x20, x19, [sp, #96]
  224b2c:	ldp	x22, x21, [sp, #80]
  224b30:	ldp	x24, x23, [sp, #64]
  224b34:	ldp	x26, x25, [sp, #48]
  224b38:	ldr	x27, [sp, #32]
  224b3c:	ldp	x29, x30, [sp, #16]
  224b40:	add	sp, sp, #0x70
  224b44:	ret
  224b48:	mov	w0, wzr
  224b4c:	bl	240750 <log_get_max_level_realm@plt>
  224b50:	cmp	w0, #0x3
  224b54:	b.lt	224b88 <manager_enumerate_inhibitors+0x1b0>  // b.tstop
  224b58:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224b5c:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  224b60:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  224b64:	add	x2, x2, #0x9d5
  224b68:	add	x4, x4, #0xb44
  224b6c:	add	x5, x5, #0x3b3
  224b70:	mov	w0, #0x3                   	// #3
  224b74:	mov	w3, #0x1fd                 	// #509
  224b78:	mov	w1, w19
  224b7c:	bl	240770 <log_internal_realm@plt>
  224b80:	mov	w19, w0
  224b84:	b	224b1c <manager_enumerate_inhibitors+0x144>
  224b88:	cmp	w19, #0x0
  224b8c:	mov	w8, wzr
  224b90:	cneg	w9, w19, mi  // mi = first
  224b94:	sub	w19, w8, w9, uxtb
  224b98:	b	224b1c <manager_enumerate_inhibitors+0x144>
  224b9c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  224ba0:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224ba4:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  224ba8:	add	x1, x1, #0x102
  224bac:	add	x2, x2, #0x9d5
  224bb0:	add	x4, x4, #0xe28
  224bb4:	mov	w3, #0x1f6                 	// #502
  224bb8:	bl	240790 <log_assert_failed_realm@plt>

0000000000224bbc <manager_enumerate_buttons>:
  224bbc:	sub	sp, sp, #0x30
  224bc0:	stp	x29, x30, [sp, #16]
  224bc4:	stp	x20, x19, [sp, #32]
  224bc8:	add	x29, sp, #0x10
  224bcc:	str	xzr, [sp, #8]
  224bd0:	cbz	x0, 224c7c <manager_enumerate_buttons+0xc0>
  224bd4:	mov	x19, x0
  224bd8:	bl	228b94 <manager_all_buttons_ignored>
  224bdc:	tbz	w0, #0, 224be8 <manager_enumerate_buttons+0x2c>
  224be0:	mov	w20, wzr
  224be4:	b	224c60 <manager_enumerate_buttons+0xa4>
  224be8:	add	x0, sp, #0x8
  224bec:	bl	240a30 <sd_device_enumerator_new@plt>
  224bf0:	tbnz	w0, #31, 224c5c <manager_enumerate_buttons+0xa0>
  224bf4:	ldr	x0, [sp, #8]
  224bf8:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  224bfc:	add	x1, x1, #0x557
  224c00:	mov	w2, #0x1                   	// #1
  224c04:	bl	240ad0 <sd_device_enumerator_add_match_subsystem@plt>
  224c08:	tbnz	w0, #31, 224c5c <manager_enumerate_buttons+0xa0>
  224c0c:	ldr	x0, [sp, #8]
  224c10:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  224c14:	add	x1, x1, #0x8ac
  224c18:	bl	240a40 <sd_device_enumerator_add_match_tag@plt>
  224c1c:	mov	w20, w0
  224c20:	tbnz	w0, #31, 224c60 <manager_enumerate_buttons+0xa4>
  224c24:	ldr	x0, [sp, #8]
  224c28:	bl	240a50 <sd_device_enumerator_get_device_first@plt>
  224c2c:	cbz	x0, 224c60 <manager_enumerate_buttons+0xa4>
  224c30:	mov	x1, x0
  224c34:	mov	x0, x19
  224c38:	bl	227eec <manager_process_button_device>
  224c3c:	ldr	x8, [sp, #8]
  224c40:	cmp	w0, #0x0
  224c44:	csel	w20, w0, w20, lt  // lt = tstop
  224c48:	mov	x0, x8
  224c4c:	bl	240a60 <sd_device_enumerator_get_device_next@plt>
  224c50:	mov	x1, x0
  224c54:	cbnz	x0, 224c34 <manager_enumerate_buttons+0x78>
  224c58:	b	224c60 <manager_enumerate_buttons+0xa4>
  224c5c:	mov	w20, w0
  224c60:	add	x0, sp, #0x8
  224c64:	bl	2256e0 <sd_device_enumerator_unrefp>
  224c68:	mov	w0, w20
  224c6c:	ldp	x20, x19, [sp, #32]
  224c70:	ldp	x29, x30, [sp, #16]
  224c74:	add	sp, sp, #0x30
  224c78:	ret
  224c7c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  224c80:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224c84:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  224c88:	add	x1, x1, #0x102
  224c8c:	add	x2, x2, #0x9d5
  224c90:	add	x4, x4, #0x9df
  224c94:	mov	w3, #0xcb                  	// #203
  224c98:	bl	240790 <log_assert_failed_realm@plt>

0000000000224c9c <manager_gc>:
  224c9c:	stp	x29, x30, [sp, #-48]!
  224ca0:	stp	x22, x21, [sp, #16]
  224ca4:	stp	x20, x19, [sp, #32]
  224ca8:	mov	x29, sp
  224cac:	cbz	x0, 224eec <manager_gc+0x250>
  224cb0:	mov	w19, w1
  224cb4:	mov	x20, x0
  224cb8:	ldr	x21, [x20, #80]
  224cbc:	cbz	x21, 224dd0 <manager_gc+0x134>
  224cc0:	mov	x8, x21
  224cc4:	ldr	x9, [x8, #80]!
  224cc8:	cbz	x9, 224cd4 <manager_gc+0x38>
  224ccc:	ldr	x10, [x21, #88]
  224cd0:	str	x10, [x9, #88]
  224cd4:	ldr	x9, [x21, #88]
  224cd8:	cbz	x9, 224ce8 <manager_gc+0x4c>
  224cdc:	ldr	x10, [x8]
  224ce0:	str	x10, [x9, #80]
  224ce4:	b	224cfc <manager_gc+0x60>
  224ce8:	ldr	x9, [x20, #80]
  224cec:	cmp	x9, x21
  224cf0:	b.ne	224e80 <manager_gc+0x1e4>  // b.any
  224cf4:	ldr	x9, [x8]
  224cf8:	str	x9, [x20, #80]
  224cfc:	stp	xzr, xzr, [x8]
  224d00:	ldrb	w8, [x21, #72]
  224d04:	and	w1, w19, #0x1
  224d08:	mov	x0, x21
  224d0c:	and	w8, w8, #0xfe
  224d10:	strb	w8, [x21, #72]
  224d14:	bl	235b68 <seat_may_gc>
  224d18:	tbz	w0, #0, 224cb8 <manager_gc+0x1c>
  224d1c:	mov	x0, x21
  224d20:	mov	w1, wzr
  224d24:	bl	2355d4 <seat_stop>
  224d28:	mov	x0, x21
  224d2c:	bl	2346a0 <seat_free>
  224d30:	b	224cb8 <manager_gc+0x1c>
  224d34:	ldr	x8, [x21, #288]
  224d38:	cbz	x8, 224d44 <manager_gc+0xa8>
  224d3c:	ldr	x9, [x21, #296]
  224d40:	str	x9, [x8, #296]
  224d44:	ldr	x9, [x21, #296]
  224d48:	add	x8, x21, #0x120
  224d4c:	cbz	x9, 224d5c <manager_gc+0xc0>
  224d50:	ldr	x10, [x8]
  224d54:	str	x10, [x9, #288]
  224d58:	b	224d70 <manager_gc+0xd4>
  224d5c:	ldr	x9, [x20, #88]
  224d60:	cmp	x9, x21
  224d64:	b.ne	224ea4 <manager_gc+0x208>  // b.any
  224d68:	ldr	x9, [x8]
  224d6c:	str	x9, [x20, #88]
  224d70:	stp	xzr, xzr, [x8]
  224d74:	ldrb	w8, [x21, #209]
  224d78:	and	w22, w19, #0x1
  224d7c:	mov	x0, x21
  224d80:	mov	w1, w22
  224d84:	and	w8, w8, #0xfe
  224d88:	strb	w8, [x21, #209]
  224d8c:	bl	23c2a8 <session_may_gc>
  224d90:	tbz	w0, #0, 224db0 <manager_gc+0x114>
  224d94:	mov	x0, x21
  224d98:	bl	23a384 <session_get_state>
  224d9c:	cmp	w0, #0x3
  224da0:	b.eq	224db0 <manager_gc+0x114>  // b.none
  224da4:	mov	x0, x21
  224da8:	mov	w1, wzr
  224dac:	bl	23b758 <session_stop>
  224db0:	mov	x0, x21
  224db4:	mov	w1, w22
  224db8:	bl	23c2a8 <session_may_gc>
  224dbc:	tbz	w0, #0, 224dd0 <manager_gc+0x134>
  224dc0:	mov	x0, x21
  224dc4:	bl	23bacc <session_finalize>
  224dc8:	mov	x0, x21
  224dcc:	bl	239934 <session_free>
  224dd0:	ldr	x21, [x20, #88]
  224dd4:	cbnz	x21, 224d34 <manager_gc+0x98>
  224dd8:	b	224e68 <manager_gc+0x1cc>
  224ddc:	mov	x8, x21
  224de0:	ldr	x9, [x8, #136]!
  224de4:	cbz	x9, 224df0 <manager_gc+0x154>
  224de8:	ldr	x10, [x21, #144]
  224dec:	str	x10, [x9, #144]
  224df0:	ldr	x9, [x21, #144]
  224df4:	cbz	x9, 224e04 <manager_gc+0x168>
  224df8:	ldr	x10, [x8]
  224dfc:	str	x10, [x9, #136]
  224e00:	b	224e18 <manager_gc+0x17c>
  224e04:	ldr	x9, [x20, #96]
  224e08:	cmp	x9, x21
  224e0c:	b.ne	224ec8 <manager_gc+0x22c>  // b.any
  224e10:	ldr	x9, [x8]
  224e14:	str	x9, [x20, #96]
  224e18:	stp	xzr, xzr, [x8]
  224e1c:	ldrb	w8, [x21, #120]
  224e20:	and	w22, w19, #0x1
  224e24:	mov	x0, x21
  224e28:	mov	w1, w22
  224e2c:	and	w8, w8, #0xfe
  224e30:	strb	w8, [x21, #120]
  224e34:	bl	23eaf8 <user_may_gc>
  224e38:	tbz	w0, #0, 224e48 <manager_gc+0x1ac>
  224e3c:	mov	x0, x21
  224e40:	mov	w1, wzr
  224e44:	bl	23e568 <user_stop>
  224e48:	mov	x0, x21
  224e4c:	mov	w1, w22
  224e50:	bl	23eaf8 <user_may_gc>
  224e54:	tbz	w0, #0, 224e68 <manager_gc+0x1cc>
  224e58:	mov	x0, x21
  224e5c:	bl	23e720 <user_finalize>
  224e60:	mov	x0, x21
  224e64:	bl	23dac4 <user_free>
  224e68:	ldr	x21, [x20, #96]
  224e6c:	cbnz	x21, 224ddc <manager_gc+0x140>
  224e70:	ldp	x20, x19, [sp, #32]
  224e74:	ldp	x22, x21, [sp, #16]
  224e78:	ldp	x29, x30, [sp], #48
  224e7c:	ret
  224e80:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  224e84:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224e88:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  224e8c:	add	x1, x1, #0xa19
  224e90:	add	x2, x2, #0x9d5
  224e94:	add	x4, x4, #0x8fb
  224e98:	mov	w3, #0x3b1                 	// #945
  224e9c:	mov	w0, wzr
  224ea0:	bl	240790 <log_assert_failed_realm@plt>
  224ea4:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  224ea8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224eac:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  224eb0:	add	x1, x1, #0xa19
  224eb4:	add	x2, x2, #0x9d5
  224eb8:	add	x4, x4, #0x8fb
  224ebc:	mov	w3, #0x3bb                 	// #955
  224ec0:	mov	w0, wzr
  224ec4:	bl	240790 <log_assert_failed_realm@plt>
  224ec8:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  224ecc:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224ed0:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  224ed4:	add	x1, x1, #0xa19
  224ed8:	add	x2, x2, #0x9d5
  224edc:	add	x4, x4, #0x8fb
  224ee0:	mov	w3, #0x3cd                 	// #973
  224ee4:	mov	w0, wzr
  224ee8:	bl	240790 <log_assert_failed_realm@plt>
  224eec:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  224ef0:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224ef4:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  224ef8:	add	x1, x1, #0x102
  224efc:	add	x2, x2, #0x9d5
  224f00:	add	x4, x4, #0x8fb
  224f04:	mov	w3, #0x3ae                 	// #942
  224f08:	bl	240790 <log_assert_failed_realm@plt>

0000000000224f0c <manager_reserve_vt>:
  224f0c:	stp	x29, x30, [sp, #-32]!
  224f10:	mov	x29, sp
  224f14:	str	x19, [sp, #16]
  224f18:	str	xzr, [x29, #24]
  224f1c:	cbz	x0, 224fd4 <manager_reserve_vt+0xc8>
  224f20:	ldr	w2, [x0, #160]
  224f24:	mov	x19, x0
  224f28:	cbz	w2, 224fc0 <manager_reserve_vt+0xb4>
  224f2c:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  224f30:	add	x1, x1, #0xe54
  224f34:	add	x0, x29, #0x18
  224f38:	bl	240ae0 <asprintf@plt>
  224f3c:	tbnz	w0, #31, 224fa4 <manager_reserve_vt+0x98>
  224f40:	ldr	x0, [x29, #24]
  224f44:	mov	w1, #0x902                 	// #2306
  224f48:	movk	w1, #0x8, lsl #16
  224f4c:	bl	2408e0 <open64@plt>
  224f50:	str	w0, [x19, #164]
  224f54:	tbz	w0, #31, 224fc0 <manager_reserve_vt+0xb4>
  224f58:	bl	240930 <__errno_location@plt>
  224f5c:	ldr	w19, [x0]
  224f60:	cmp	w19, #0x2
  224f64:	b.eq	224fc0 <manager_reserve_vt+0xb4>  // b.none
  224f68:	mov	w0, wzr
  224f6c:	bl	240750 <log_get_max_level_realm@plt>
  224f70:	cmp	w0, #0x4
  224f74:	b.lt	224fc0 <manager_reserve_vt+0xb4>  // b.tstop
  224f78:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224f7c:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  224f80:	adrp	x5, 210000 <inhibit_what_to_string.buffer+0x210000>
  224f84:	add	x2, x2, #0x9d5
  224f88:	add	x4, x4, #0x5f0
  224f8c:	add	x5, x5, #0xaa2
  224f90:	mov	w0, #0x4                   	// #4
  224f94:	mov	w3, #0x260                 	// #608
  224f98:	mov	w1, w19
  224f9c:	bl	240770 <log_internal_realm@plt>
  224fa0:	b	224fc0 <manager_reserve_vt+0xb4>
  224fa4:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  224fa8:	adrp	x3, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  224fac:	add	x1, x1, #0x9d5
  224fb0:	add	x3, x3, #0x5f0
  224fb4:	mov	w2, #0x259                 	// #601
  224fb8:	mov	w0, wzr
  224fbc:	bl	240af0 <log_oom_internal@plt>
  224fc0:	add	x0, x29, #0x18
  224fc4:	bl	225d1c <freep>
  224fc8:	ldr	x19, [sp, #16]
  224fcc:	ldp	x29, x30, [sp], #32
  224fd0:	ret
  224fd4:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  224fd8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  224fdc:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  224fe0:	add	x1, x1, #0x102
  224fe4:	add	x2, x2, #0x9d5
  224fe8:	add	x4, x4, #0x910
  224fec:	mov	w3, #0x253                 	// #595
  224ff0:	bl	240790 <log_assert_failed_realm@plt>

0000000000224ff4 <hashmap_iterate>:
  224ff4:	stp	x29, x30, [sp, #-16]!
  224ff8:	mov	x3, xzr
  224ffc:	mov	x29, sp
  225000:	bl	240b00 <internal_hashmap_iterate@plt>
  225004:	and	w0, w0, #0x1
  225008:	ldp	x29, x30, [sp], #16
  22500c:	ret

0000000000225010 <manager_dispatch_idle_action>:
  225010:	sub	sp, sp, #0x30
  225014:	stp	x29, x30, [sp, #16]
  225018:	stp	x20, x19, [sp, #32]
  22501c:	add	x29, sp, #0x10
  225020:	cbz	x2, 225268 <manager_dispatch_idle_action+0x258>
  225024:	ldr	w8, [x2, #392]
  225028:	mov	x19, x2
  22502c:	cbz	w8, 225194 <manager_dispatch_idle_action+0x184>
  225030:	ldr	x8, [x19, #376]
  225034:	cbz	x8, 225194 <manager_dispatch_idle_action+0x184>
  225038:	mov	w0, #0x1                   	// #1
  22503c:	bl	2407a0 <now@plt>
  225040:	mov	x20, x0
  225044:	mov	x1, sp
  225048:	mov	x0, x19
  22504c:	bl	22817c <manager_get_idle_hint>
  225050:	cmp	w0, #0x0
  225054:	b.le	2250f4 <manager_dispatch_idle_action+0xe4>
  225058:	ldr	x9, [sp, #8]
  22505c:	ldr	x8, [x19, #376]
  225060:	add	x9, x8, x9
  225064:	cmp	x20, x9
  225068:	b.cc	2250e0 <manager_dispatch_idle_action+0xd0>  // b.lo, b.ul, b.last
  22506c:	ldr	x9, [x19, #384]
  225070:	cbz	x9, 225080 <manager_dispatch_idle_action+0x70>
  225074:	add	x8, x9, x8
  225078:	cmp	x20, x8
  22507c:	b.cc	2250e0 <manager_dispatch_idle_action+0xd0>  // b.lo, b.ul, b.last
  225080:	mov	w0, wzr
  225084:	bl	240750 <log_get_max_level_realm@plt>
  225088:	cmp	w0, #0x6
  22508c:	b.lt	2250c4 <manager_dispatch_idle_action+0xb4>  // b.tstop
  225090:	ldr	w0, [x19, #392]
  225094:	bl	2264a8 <handle_action_to_string>
  225098:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22509c:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  2250a0:	adrp	x5, 206000 <inhibit_what_to_string.buffer+0x206000>
  2250a4:	mov	x6, x0
  2250a8:	add	x2, x2, #0x9d5
  2250ac:	add	x4, x4, #0xf18
  2250b0:	add	x5, x5, #0xd74
  2250b4:	mov	w0, #0x6                   	// #6
  2250b8:	mov	w3, #0x3f4                 	// #1012
  2250bc:	mov	w1, wzr
  2250c0:	bl	240770 <log_internal_realm@plt>
  2250c4:	ldr	w2, [x19, #392]
  2250c8:	mov	x0, x19
  2250cc:	mov	w1, wzr
  2250d0:	mov	w3, wzr
  2250d4:	mov	w4, wzr
  2250d8:	bl	225ec8 <manager_handle_action>
  2250dc:	str	x20, [x19, #384]
  2250e0:	ldr	x8, [sp, #8]
  2250e4:	ldp	x20, x9, [x19, #376]
  2250e8:	cmp	x8, x9
  2250ec:	csel	x8, x8, x9, hi  // hi = pmore
  2250f0:	b	2250f8 <manager_dispatch_idle_action+0xe8>
  2250f4:	ldr	x8, [x19, #376]
  2250f8:	ldr	x0, [x19, #368]
  2250fc:	add	x3, x8, x20
  225100:	add	x20, x19, #0x170
  225104:	cbz	x0, 22515c <manager_dispatch_idle_action+0x14c>
  225108:	mov	x1, x3
  22510c:	bl	240b10 <sd_event_source_set_time@plt>
  225110:	tbnz	w0, #31, 2251a8 <manager_dispatch_idle_action+0x198>
  225114:	ldr	x0, [x20]
  225118:	mov	w1, #0xffffffff            	// #-1
  22511c:	bl	240b20 <sd_event_source_set_enabled@plt>
  225120:	tbz	w0, #31, 225194 <manager_dispatch_idle_action+0x184>
  225124:	mov	w19, w0
  225128:	mov	w0, wzr
  22512c:	bl	240750 <log_get_max_level_realm@plt>
  225130:	cmp	w0, #0x3
  225134:	b.lt	225258 <manager_dispatch_idle_action+0x248>  // b.tstop
  225138:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22513c:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  225140:	adrp	x5, 210000 <inhibit_what_to_string.buffer+0x210000>
  225144:	add	x2, x2, #0x9d5
  225148:	add	x4, x4, #0xf18
  22514c:	add	x5, x5, #0xac0
  225150:	mov	w0, #0x3                   	// #3
  225154:	mov	w3, #0x412                 	// #1042
  225158:	b	22524c <manager_dispatch_idle_action+0x23c>
  22515c:	ldr	x0, [x19]
  225160:	adrp	x5, 225000 <hashmap_iterate+0xc>
  225164:	mov	w4, #0xc380                	// #50048
  225168:	add	x5, x5, #0x10
  22516c:	mov	w2, #0x1                   	// #1
  225170:	movk	w4, #0x1c9, lsl #16
  225174:	mov	x1, x20
  225178:	mov	x6, x19
  22517c:	bl	240b30 <sd_event_add_time@plt>
  225180:	tbnz	w0, #31, 2251e0 <manager_dispatch_idle_action+0x1d0>
  225184:	ldr	x0, [x20]
  225188:	mov	w1, #0x6e                  	// #110
  22518c:	bl	240b40 <sd_event_source_set_priority@plt>
  225190:	tbnz	w0, #31, 225218 <manager_dispatch_idle_action+0x208>
  225194:	mov	w0, wzr
  225198:	ldp	x20, x19, [sp, #32]
  22519c:	ldp	x29, x30, [sp, #16]
  2251a0:	add	sp, sp, #0x30
  2251a4:	ret
  2251a8:	mov	w19, w0
  2251ac:	mov	w0, wzr
  2251b0:	bl	240750 <log_get_max_level_realm@plt>
  2251b4:	cmp	w0, #0x3
  2251b8:	b.lt	225258 <manager_dispatch_idle_action+0x248>  // b.tstop
  2251bc:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2251c0:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  2251c4:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2251c8:	add	x2, x2, #0x9d5
  2251cc:	add	x4, x4, #0xf18
  2251d0:	add	x5, x5, #0x5fd
  2251d4:	mov	w0, #0x3                   	// #3
  2251d8:	mov	w3, #0x40e                 	// #1038
  2251dc:	b	22524c <manager_dispatch_idle_action+0x23c>
  2251e0:	mov	w19, w0
  2251e4:	mov	w0, wzr
  2251e8:	bl	240750 <log_get_max_level_realm@plt>
  2251ec:	cmp	w0, #0x3
  2251f0:	b.lt	225258 <manager_dispatch_idle_action+0x248>  // b.tstop
  2251f4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2251f8:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  2251fc:	adrp	x5, 211000 <inhibit_what_to_string.buffer+0x211000>
  225200:	add	x2, x2, #0x9d5
  225204:	add	x4, x4, #0xf18
  225208:	add	x5, x5, #0xb61
  22520c:	mov	w0, #0x3                   	// #3
  225210:	mov	w3, #0x406                 	// #1030
  225214:	b	22524c <manager_dispatch_idle_action+0x23c>
  225218:	mov	w19, w0
  22521c:	mov	w0, wzr
  225220:	bl	240750 <log_get_max_level_realm@plt>
  225224:	cmp	w0, #0x3
  225228:	b.lt	225258 <manager_dispatch_idle_action+0x248>  // b.tstop
  22522c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225230:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  225234:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  225238:	add	x2, x2, #0x9d5
  22523c:	add	x4, x4, #0xf18
  225240:	add	x5, x5, #0x91d
  225244:	mov	w0, #0x3                   	// #3
  225248:	mov	w3, #0x40a                 	// #1034
  22524c:	mov	w1, w19
  225250:	bl	240770 <log_internal_realm@plt>
  225254:	b	225198 <manager_dispatch_idle_action+0x188>
  225258:	mov	w8, wzr
  22525c:	neg	w9, w19
  225260:	sub	w0, w8, w9, uxtb
  225264:	b	225198 <manager_dispatch_idle_action+0x188>
  225268:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22526c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225270:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  225274:	add	x1, x1, #0x102
  225278:	add	x2, x2, #0x9d5
  22527c:	add	x4, x4, #0xf01
  225280:	mov	w3, #0x3e2                 	// #994
  225284:	mov	w0, wzr
  225288:	bl	240790 <log_assert_failed_realm@plt>

000000000022528c <manager_dispatch_console>:
  22528c:	stp	x29, x30, [sp, #-16]!
  225290:	mov	x29, sp
  225294:	cbz	x3, 2252bc <manager_dispatch_console+0x30>
  225298:	ldr	x0, [x3, #168]
  22529c:	cbz	x0, 2252e0 <manager_dispatch_console+0x54>
  2252a0:	ldr	w8, [x3, #152]
  2252a4:	cmp	w8, w1
  2252a8:	b.ne	225300 <manager_dispatch_console+0x74>  // b.any
  2252ac:	bl	235324 <seat_read_active_vt>
  2252b0:	mov	w0, wzr
  2252b4:	ldp	x29, x30, [sp], #16
  2252b8:	ret
  2252bc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2252c0:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2252c4:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  2252c8:	add	x1, x1, #0x102
  2252cc:	add	x2, x2, #0x9d5
  2252d0:	add	x4, x4, #0xef7
  2252d4:	mov	w3, #0x248                 	// #584
  2252d8:	mov	w0, wzr
  2252dc:	bl	240790 <log_assert_failed_realm@plt>
  2252e0:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  2252e4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2252e8:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  2252ec:	add	x1, x1, #0x4d6
  2252f0:	add	x2, x2, #0x9d5
  2252f4:	add	x4, x4, #0xef7
  2252f8:	mov	w3, #0x249                 	// #585
  2252fc:	bl	240790 <log_assert_failed_realm@plt>
  225300:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  225304:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225308:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22530c:	add	x1, x1, #0x5d9
  225310:	add	x2, x2, #0x9d5
  225314:	add	x4, x4, #0xef7
  225318:	mov	w3, #0x24a                 	// #586
  22531c:	mov	w0, wzr
  225320:	bl	240790 <log_assert_failed_realm@plt>

0000000000225324 <manager_vt_switch>:
  225324:	stp	x29, x30, [sp, #-32]!
  225328:	ldr	x0, [x2, #168]
  22532c:	str	x19, [sp, #16]
  225330:	mov	x29, sp
  225334:	cbz	x0, 225488 <manager_vt_switch+0x164>
  225338:	mov	x19, x2
  22533c:	bl	235324 <seat_read_active_vt>
  225340:	ldr	x9, [x19, #168]
  225344:	ldr	x0, [x9, #32]
  225348:	cbz	x0, 225364 <manager_vt_switch+0x40>
  22534c:	ldr	w8, [x0, #144]
  225350:	cbz	w8, 225364 <manager_vt_switch+0x40>
  225354:	ldr	w10, [x0, #148]
  225358:	tbnz	w10, #31, 22545c <manager_vt_switch+0x138>
  22535c:	bl	23c488 <session_leave_vt>
  225360:	b	22544c <manager_vt_switch+0x128>
  225364:	mov	w8, #0xffffffff            	// #-1
  225368:	mov	w0, wzr
  22536c:	str	w8, [x29, #28]
  225370:	bl	240750 <log_get_max_level_realm@plt>
  225374:	cmp	w0, #0x4
  225378:	b.lt	2253a4 <manager_vt_switch+0x80>  // b.tstop
  22537c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225380:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  225384:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  225388:	add	x2, x2, #0x9d5
  22538c:	add	x4, x4, #0x181
  225390:	add	x5, x5, #0xf77
  225394:	mov	w0, #0x4                   	// #4
  225398:	mov	w3, #0x2f0                 	// #752
  22539c:	mov	w1, wzr
  2253a0:	bl	240770 <log_internal_realm@plt>
  2253a4:	adrp	x0, 207000 <inhibit_what_to_string.buffer+0x207000>
  2253a8:	mov	w1, #0x902                 	// #2306
  2253ac:	add	x0, x0, #0xe27
  2253b0:	movk	w1, #0x8, lsl #16
  2253b4:	bl	240b50 <open_terminal@plt>
  2253b8:	mov	w19, w0
  2253bc:	str	w0, [x29, #28]
  2253c0:	tbnz	w0, #31, 22540c <manager_vt_switch+0xe8>
  2253c4:	mov	w1, #0x1                   	// #1
  2253c8:	mov	w0, w19
  2253cc:	bl	240b60 <vt_release@plt>
  2253d0:	tbz	w0, #31, 225444 <manager_vt_switch+0x120>
  2253d4:	mov	w19, w0
  2253d8:	mov	w0, wzr
  2253dc:	bl	240750 <log_get_max_level_realm@plt>
  2253e0:	cmp	w0, #0x4
  2253e4:	b.lt	225444 <manager_vt_switch+0x120>  // b.tstop
  2253e8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2253ec:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2253f0:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2253f4:	add	x2, x2, #0x9d5
  2253f8:	add	x4, x4, #0x181
  2253fc:	add	x5, x5, #0x595
  225400:	mov	w0, #0x4                   	// #4
  225404:	mov	w3, #0x2fc                 	// #764
  225408:	b	22543c <manager_vt_switch+0x118>
  22540c:	mov	w0, wzr
  225410:	bl	240750 <log_get_max_level_realm@plt>
  225414:	cmp	w0, #0x4
  225418:	b.lt	225444 <manager_vt_switch+0x120>  // b.tstop
  22541c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225420:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  225424:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  225428:	add	x2, x2, #0x9d5
  22542c:	add	x4, x4, #0x181
  225430:	add	x5, x5, #0xe31
  225434:	mov	w0, #0x4                   	// #4
  225438:	mov	w3, #0x2f6                 	// #758
  22543c:	mov	w1, w19
  225440:	bl	240770 <log_internal_realm@plt>
  225444:	add	x0, x29, #0x1c
  225448:	bl	2254a8 <closep>
  22544c:	ldr	x19, [sp, #16]
  225450:	mov	w0, wzr
  225454:	ldp	x29, x30, [sp], #32
  225458:	ret
  22545c:	ldr	x0, [x9, #48]
  225460:	cbnz	x0, 225470 <manager_vt_switch+0x14c>
  225464:	b	22544c <manager_vt_switch+0x128>
  225468:	ldr	x0, [x0, #272]
  22546c:	cbz	x0, 22544c <manager_vt_switch+0x128>
  225470:	ldr	w9, [x0, #144]
  225474:	cmp	w9, w8
  225478:	b.ne	225468 <manager_vt_switch+0x144>  // b.any
  22547c:	ldr	w9, [x0, #148]
  225480:	tbnz	w9, #31, 225468 <manager_vt_switch+0x144>
  225484:	b	22535c <manager_vt_switch+0x38>
  225488:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  22548c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225490:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  225494:	add	x1, x1, #0x4d6
  225498:	add	x2, x2, #0x9d5
  22549c:	add	x4, x4, #0x977
  2254a0:	mov	w3, #0x2e2                 	// #738
  2254a4:	bl	240790 <log_assert_failed_realm@plt>

00000000002254a8 <closep>:
  2254a8:	stp	x29, x30, [sp, #-16]!
  2254ac:	ldr	w0, [x0]
  2254b0:	mov	x29, sp
  2254b4:	bl	240820 <safe_close@plt>
  2254b8:	ldp	x29, x30, [sp], #16
  2254bc:	ret

00000000002254c0 <manager_dispatch_seat_udev>:
  2254c0:	stp	x29, x30, [sp, #-16]!
  2254c4:	mov	x0, x2
  2254c8:	mov	x29, sp
  2254cc:	cbz	x2, 2254e4 <manager_dispatch_seat_udev+0x24>
  2254d0:	cbz	x1, 225504 <manager_dispatch_seat_udev+0x44>
  2254d4:	bl	227cac <manager_process_seat_device>
  2254d8:	mov	w0, wzr
  2254dc:	ldp	x29, x30, [sp], #16
  2254e0:	ret
  2254e4:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2254e8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2254ec:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2254f0:	add	x1, x1, #0x102
  2254f4:	add	x2, x2, #0x9d5
  2254f8:	add	x4, x4, #0x55
  2254fc:	mov	w3, #0x218                 	// #536
  225500:	bl	240790 <log_assert_failed_realm@plt>
  225504:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  225508:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22550c:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  225510:	add	x1, x1, #0xb2f
  225514:	add	x2, x2, #0x9d5
  225518:	add	x4, x4, #0x55
  22551c:	mov	w3, #0x219                 	// #537
  225520:	mov	w0, wzr
  225524:	bl	240790 <log_assert_failed_realm@plt>

0000000000225528 <manager_dispatch_device_udev>:
  225528:	stp	x29, x30, [sp, #-16]!
  22552c:	mov	x0, x2
  225530:	mov	x29, sp
  225534:	cbz	x2, 22554c <manager_dispatch_device_udev+0x24>
  225538:	cbz	x1, 22556c <manager_dispatch_device_udev+0x44>
  22553c:	bl	227cac <manager_process_seat_device>
  225540:	mov	w0, wzr
  225544:	ldp	x29, x30, [sp], #16
  225548:	ret
  22554c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  225550:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225554:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  225558:	add	x1, x1, #0x102
  22555c:	add	x2, x2, #0x9d5
  225560:	add	x4, x4, #0xa27
  225564:	mov	w3, #0x222                 	// #546
  225568:	bl	240790 <log_assert_failed_realm@plt>
  22556c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  225570:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225574:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  225578:	add	x1, x1, #0xb2f
  22557c:	add	x2, x2, #0x9d5
  225580:	add	x4, x4, #0xa27
  225584:	mov	w3, #0x223                 	// #547
  225588:	mov	w0, wzr
  22558c:	bl	240790 <log_assert_failed_realm@plt>

0000000000225590 <manager_dispatch_button_udev>:
  225590:	stp	x29, x30, [sp, #-16]!
  225594:	mov	x0, x2
  225598:	mov	x29, sp
  22559c:	cbz	x2, 2255b4 <manager_dispatch_button_udev+0x24>
  2255a0:	cbz	x1, 2255d4 <manager_dispatch_button_udev+0x44>
  2255a4:	bl	227eec <manager_process_button_device>
  2255a8:	mov	w0, wzr
  2255ac:	ldp	x29, x30, [sp], #16
  2255b0:	ret
  2255b4:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2255b8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2255bc:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2255c0:	add	x1, x1, #0x102
  2255c4:	add	x2, x2, #0x9d5
  2255c8:	add	x4, x4, #0xe80
  2255cc:	mov	w3, #0x23e                 	// #574
  2255d0:	bl	240790 <log_assert_failed_realm@plt>
  2255d4:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2255d8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2255dc:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2255e0:	add	x1, x1, #0xb2f
  2255e4:	add	x2, x2, #0x9d5
  2255e8:	add	x4, x4, #0xe80
  2255ec:	mov	w3, #0x23f                 	// #575
  2255f0:	mov	w0, wzr
  2255f4:	bl	240790 <log_assert_failed_realm@plt>

00000000002255f8 <manager_dispatch_vcsa_udev>:
  2255f8:	sub	sp, sp, #0x30
  2255fc:	stp	x29, x30, [sp, #16]
  225600:	stp	x20, x19, [sp, #32]
  225604:	add	x29, sp, #0x10
  225608:	cbz	x2, 225660 <manager_dispatch_vcsa_udev+0x68>
  22560c:	mov	x20, x1
  225610:	cbz	x1, 225684 <manager_dispatch_vcsa_udev+0x8c>
  225614:	add	x1, sp, #0x8
  225618:	mov	x0, x20
  22561c:	mov	x19, x2
  225620:	bl	240b70 <sd_device_get_sysname@plt>
  225624:	tbnz	w0, #31, 22564c <manager_dispatch_vcsa_udev+0x54>
  225628:	ldr	x0, [sp, #8]
  22562c:	bl	2256a8 <startswith>
  225630:	cbz	x0, 22564c <manager_dispatch_vcsa_udev+0x54>
  225634:	mov	w1, #0x1                   	// #1
  225638:	mov	x0, x20
  22563c:	bl	240b80 <device_for_action@plt>
  225640:	tbz	w0, #0, 22564c <manager_dispatch_vcsa_udev+0x54>
  225644:	ldr	x0, [x19, #168]
  225648:	bl	234be0 <seat_preallocate_vts>
  22564c:	ldp	x20, x19, [sp, #32]
  225650:	ldp	x29, x30, [sp, #16]
  225654:	mov	w0, wzr
  225658:	add	sp, sp, #0x30
  22565c:	ret
  225660:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  225664:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225668:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22566c:	add	x1, x1, #0x102
  225670:	add	x2, x2, #0x9d5
  225674:	add	x4, x4, #0xfbe
  225678:	mov	w3, #0x22d                 	// #557
  22567c:	mov	w0, wzr
  225680:	bl	240790 <log_assert_failed_realm@plt>
  225684:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  225688:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22568c:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  225690:	add	x1, x1, #0xb2f
  225694:	add	x2, x2, #0x9d5
  225698:	add	x4, x4, #0xfbe
  22569c:	mov	w3, #0x22e                 	// #558
  2256a0:	mov	w0, wzr
  2256a4:	bl	240790 <log_assert_failed_realm@plt>

00000000002256a8 <startswith>:
  2256a8:	stp	x29, x30, [sp, #-32]!
  2256ac:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  2256b0:	add	x1, x1, #0xf1c
  2256b4:	mov	w2, #0x4                   	// #4
  2256b8:	str	x19, [sp, #16]
  2256bc:	mov	x29, sp
  2256c0:	mov	x19, x0
  2256c4:	bl	240b90 <strncmp@plt>
  2256c8:	add	x8, x19, #0x4
  2256cc:	ldr	x19, [sp, #16]
  2256d0:	cmp	w0, #0x0
  2256d4:	csel	x0, x8, xzr, eq  // eq = none
  2256d8:	ldp	x29, x30, [sp], #32
  2256dc:	ret

00000000002256e0 <sd_device_enumerator_unrefp>:
  2256e0:	stp	x29, x30, [sp, #-16]!
  2256e4:	ldr	x0, [x0]
  2256e8:	mov	x29, sp
  2256ec:	cbz	x0, 2256f4 <sd_device_enumerator_unrefp+0x14>
  2256f0:	bl	240ba0 <sd_device_enumerator_unref@plt>
  2256f4:	ldp	x29, x30, [sp], #16
  2256f8:	ret

00000000002256fc <closedirp>:
  2256fc:	stp	x29, x30, [sp, #-16]!
  225700:	ldr	x0, [x0]
  225704:	mov	x29, sp
  225708:	cbz	x0, 225710 <closedirp+0x14>
  22570c:	bl	240bb0 <closedir@plt>
  225710:	ldp	x29, x30, [sp], #16
  225714:	ret

0000000000225718 <hashmap_get>:
  225718:	stp	x29, x30, [sp, #-16]!
  22571c:	mov	x29, sp
  225720:	bl	240bc0 <internal_hashmap_get@plt>
  225724:	ldp	x29, x30, [sp], #16
  225728:	ret

000000000022572c <manager_enumerate_linger_users>:
  22572c:	stp	x29, x30, [sp, #-96]!
  225730:	mov	x29, sp
  225734:	str	x27, [sp, #16]
  225738:	stp	x26, x25, [sp, #32]
  22573c:	stp	x24, x23, [sp, #48]
  225740:	stp	x22, x21, [sp, #64]
  225744:	stp	x20, x19, [sp, #80]
  225748:	str	xzr, [x29, #24]
  22574c:	cbz	x0, 2258e0 <manager_enumerate_linger_users+0x1b4>
  225750:	mov	x19, x0
  225754:	adrp	x0, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  225758:	add	x0, x0, #0xe10
  22575c:	bl	240a70 <opendir@plt>
  225760:	mov	x21, x0
  225764:	str	x0, [x29, #24]
  225768:	bl	240930 <__errno_location@plt>
  22576c:	mov	x20, x0
  225770:	cbz	x21, 225840 <manager_enumerate_linger_users+0x114>
  225774:	mov	x0, x21
  225778:	str	wzr, [x20]
  22577c:	bl	240a80 <readdir64@plt>
  225780:	cbz	x0, 225854 <manager_enumerate_linger_users+0x128>
  225784:	adrp	x22, 210000 <inhibit_what_to_string.buffer+0x210000>
  225788:	adrp	x23, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22578c:	adrp	x24, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  225790:	mov	x27, x0
  225794:	mov	w25, wzr
  225798:	add	x22, x22, #0x9d5
  22579c:	add	x23, x23, #0x1dc
  2257a0:	add	x24, x24, #0x120
  2257a4:	b	2257c8 <manager_enumerate_linger_users+0x9c>
  2257a8:	mov	w8, wzr
  2257ac:	neg	w9, w27
  2257b0:	sub	w25, w8, w9, uxtb
  2257b4:	mov	x0, x21
  2257b8:	str	wzr, [x20]
  2257bc:	bl	240a80 <readdir64@plt>
  2257c0:	mov	x27, x0
  2257c4:	cbz	x0, 225858 <manager_enumerate_linger_users+0x12c>
  2257c8:	add	x26, x27, #0x13
  2257cc:	mov	x0, x26
  2257d0:	bl	240a90 <hidden_or_backup_file@plt>
  2257d4:	tbnz	w0, #0, 2257b4 <manager_enumerate_linger_users+0x88>
  2257d8:	mov	x0, x21
  2257dc:	mov	x1, x27
  2257e0:	bl	240bd0 <dirent_ensure_type@plt>
  2257e4:	mov	x0, x27
  2257e8:	bl	240aa0 <dirent_is_file@plt>
  2257ec:	tbz	w0, #0, 2257b4 <manager_enumerate_linger_users+0x88>
  2257f0:	mov	x0, x19
  2257f4:	mov	x1, x26
  2257f8:	mov	x2, xzr
  2257fc:	bl	2279ec <manager_add_user_by_name>
  225800:	tbz	w0, #31, 2257b4 <manager_enumerate_linger_users+0x88>
  225804:	mov	w27, w0
  225808:	mov	w0, wzr
  22580c:	bl	240750 <log_get_max_level_realm@plt>
  225810:	cmp	w0, #0x4
  225814:	b.lt	2257a8 <manager_enumerate_linger_users+0x7c>  // b.tstop
  225818:	mov	w0, #0x4                   	// #4
  22581c:	mov	w3, #0x12b                 	// #299
  225820:	mov	w1, w27
  225824:	mov	x2, x22
  225828:	mov	x4, x23
  22582c:	mov	x5, x24
  225830:	mov	x6, x26
  225834:	bl	240770 <log_internal_realm@plt>
  225838:	mov	w25, w0
  22583c:	b	2257b4 <manager_enumerate_linger_users+0x88>
  225840:	ldr	w19, [x20]
  225844:	cmp	w19, #0x2
  225848:	b.ne	22588c <manager_enumerate_linger_users+0x160>  // b.any
  22584c:	mov	w19, wzr
  225850:	b	225864 <manager_enumerate_linger_users+0x138>
  225854:	mov	w25, wzr
  225858:	ldr	w8, [x20]
  22585c:	cmp	w8, #0x0
  225860:	csneg	w19, w25, w8, le
  225864:	add	x0, x29, #0x18
  225868:	bl	2256fc <closedirp>
  22586c:	mov	w0, w19
  225870:	ldp	x20, x19, [sp, #80]
  225874:	ldp	x22, x21, [sp, #64]
  225878:	ldp	x24, x23, [sp, #48]
  22587c:	ldp	x26, x25, [sp, #32]
  225880:	ldr	x27, [sp, #16]
  225884:	ldp	x29, x30, [sp], #96
  225888:	ret
  22588c:	mov	w0, wzr
  225890:	bl	240750 <log_get_max_level_realm@plt>
  225894:	cmp	w0, #0x3
  225898:	b.lt	2258cc <manager_enumerate_linger_users+0x1a0>  // b.tstop
  22589c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2258a0:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2258a4:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2258a8:	add	x2, x2, #0x9d5
  2258ac:	add	x4, x4, #0x1dc
  2258b0:	add	x5, x5, #0x387
  2258b4:	mov	w0, #0x3                   	// #3
  2258b8:	mov	w3, #0x11f                 	// #287
  2258bc:	mov	w1, w19
  2258c0:	bl	240770 <log_internal_realm@plt>
  2258c4:	mov	w19, w0
  2258c8:	b	225864 <manager_enumerate_linger_users+0x138>
  2258cc:	cmp	w19, #0x0
  2258d0:	mov	w8, wzr
  2258d4:	cneg	w9, w19, mi  // mi = first
  2258d8:	sub	w19, w8, w9, uxtb
  2258dc:	b	225864 <manager_enumerate_linger_users+0x138>
  2258e0:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2258e4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2258e8:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  2258ec:	add	x1, x1, #0x102
  2258f0:	add	x2, x2, #0x9d5
  2258f4:	add	x4, x4, #0x655
  2258f8:	mov	w3, #0x118                 	// #280
  2258fc:	bl	240790 <log_assert_failed_realm@plt>

0000000000225900 <manager_attach_fds>:
  225900:	sub	sp, sp, #0x40
  225904:	stp	x20, x19, [sp, #48]
  225908:	mov	x19, x0
  22590c:	add	x1, sp, #0x8
  225910:	mov	w0, #0x1                   	// #1
  225914:	stp	x29, x30, [sp, #16]
  225918:	stp	x22, x21, [sp, #32]
  22591c:	add	x29, sp, #0x10
  225920:	str	xzr, [sp, #8]
  225924:	bl	240be0 <sd_listen_fds_with_names@plt>
  225928:	mov	w20, w0
  22592c:	tbnz	w0, #31, 22598c <manager_attach_fds+0x8c>
  225930:	cbz	w20, 2259c4 <manager_attach_fds+0xc4>
  225934:	mov	w22, w20
  225938:	adrp	x20, 207000 <inhibit_what_to_string.buffer+0x207000>
  22593c:	mov	x21, xzr
  225940:	add	x20, x20, #0x9c1
  225944:	b	225954 <manager_attach_fds+0x54>
  225948:	add	x21, x21, #0x1
  22594c:	cmp	x22, x21
  225950:	b.eq	2259c4 <manager_attach_fds+0xc4>  // b.none
  225954:	ldr	x8, [sp, #8]
  225958:	add	w2, w21, #0x3
  22595c:	mov	x0, x19
  225960:	ldr	x1, [x8, x21, lsl #3]
  225964:	bl	2259fc <deliver_fd>
  225968:	tbz	w0, #31, 225948 <manager_attach_fds+0x48>
  22596c:	add	w0, w21, #0x3
  225970:	bl	240820 <safe_close@plt>
  225974:	ldr	x8, [sp, #8]
  225978:	mov	w0, wzr
  22597c:	mov	x1, x20
  225980:	ldr	x2, [x8, x21, lsl #3]
  225984:	bl	240bf0 <sd_notifyf@plt>
  225988:	b	225948 <manager_attach_fds+0x48>
  22598c:	mov	w0, wzr
  225990:	bl	240750 <log_get_max_level_realm@plt>
  225994:	cmp	w0, #0x4
  225998:	b.lt	2259c4 <manager_attach_fds+0xc4>  // b.tstop
  22599c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2259a0:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2259a4:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2259a8:	add	x2, x2, #0x9d5
  2259ac:	add	x4, x4, #0x1fb
  2259b0:	add	x5, x5, #0x20e
  2259b4:	mov	w0, #0x4                   	// #4
  2259b8:	mov	w3, #0x1b1                 	// #433
  2259bc:	mov	w1, w20
  2259c0:	bl	240770 <log_internal_realm@plt>
  2259c4:	add	x0, sp, #0x8
  2259c8:	bl	2259e0 <strv_freep>
  2259cc:	ldp	x20, x19, [sp, #48]
  2259d0:	ldp	x22, x21, [sp, #32]
  2259d4:	ldp	x29, x30, [sp, #16]
  2259d8:	add	sp, sp, #0x40
  2259dc:	ret

00000000002259e0 <strv_freep>:
  2259e0:	stp	x29, x30, [sp, #-16]!
  2259e4:	ldr	x0, [x0]
  2259e8:	mov	x29, sp
  2259ec:	cbz	x0, 2259f4 <strv_freep+0x14>
  2259f0:	bl	240880 <strv_free@plt>
  2259f4:	ldp	x29, x30, [sp], #16
  2259f8:	ret

00000000002259fc <deliver_fd>:
  2259fc:	sub	sp, sp, #0xd0
  225a00:	stp	x29, x30, [sp, #144]
  225a04:	add	x29, sp, #0x90
  225a08:	str	x23, [sp, #160]
  225a0c:	stp	x22, x21, [sp, #176]
  225a10:	stp	x20, x19, [sp, #192]
  225a14:	str	xzr, [x29, #24]
  225a18:	cbz	x0, 225cd8 <deliver_fd+0x2dc>
  225a1c:	mov	w19, w2
  225a20:	tbnz	w2, #31, 225cf8 <deliver_fd+0x2fc>
  225a24:	mov	x20, x1
  225a28:	mov	x22, x0
  225a2c:	add	x1, x29, #0x18
  225a30:	add	x2, sp, #0x8
  225a34:	mov	x0, x20
  225a38:	bl	225d34 <parse_fdname>
  225a3c:	tbnz	w0, #31, 225b18 <deliver_fd+0x11c>
  225a40:	ldr	x21, [x29, #24]
  225a44:	ldr	x0, [x22, #32]
  225a48:	mov	x1, x21
  225a4c:	bl	225718 <hashmap_get>
  225a50:	cbz	x0, 225b58 <deliver_fd+0x15c>
  225a54:	mov	x20, x0
  225a58:	add	x1, sp, #0x10
  225a5c:	mov	w0, w19
  225a60:	bl	240610 <fstat64>
  225a64:	tbnz	w0, #31, 225be4 <deliver_fd+0x1e8>
  225a68:	ldr	w8, [sp, #32]
  225a6c:	and	w8, w8, #0xf000
  225a70:	cmp	w8, #0x2, lsl #12
  225a74:	b.ne	225ba0 <deliver_fd+0x1a4>  // b.any
  225a78:	ldr	x8, [sp, #48]
  225a7c:	ldr	x9, [sp, #8]
  225a80:	cmp	x8, x9
  225a84:	b.ne	225ba0 <deliver_fd+0x1a4>  // b.any
  225a88:	ldr	x0, [x20, #240]
  225a8c:	add	x1, sp, #0x8
  225a90:	bl	225718 <hashmap_get>
  225a94:	mov	x21, x0
  225a98:	mov	w0, wzr
  225a9c:	bl	240750 <log_get_max_level_realm@plt>
  225aa0:	cbz	x21, 225c4c <deliver_fd+0x250>
  225aa4:	cmp	w0, #0x7
  225aa8:	b.lt	225afc <deliver_fd+0x100>  // b.tstop
  225aac:	ldr	x22, [sp, #8]
  225ab0:	mov	x0, x22
  225ab4:	bl	240c00 <gnu_dev_major@plt>
  225ab8:	mov	w23, w0
  225abc:	mov	x0, x22
  225ac0:	bl	240c10 <gnu_dev_minor@plt>
  225ac4:	ldr	x8, [x20, #8]
  225ac8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225acc:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  225ad0:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  225ad4:	mov	w7, w0
  225ad8:	add	x2, x2, #0x9d5
  225adc:	add	x4, x4, #0x14d
  225ae0:	add	x5, x5, #0x5c7
  225ae4:	mov	w0, #0x7                   	// #7
  225ae8:	mov	w3, #0x1a2                 	// #418
  225aec:	mov	w1, wzr
  225af0:	mov	w6, w23
  225af4:	str	x8, [sp]
  225af8:	bl	240770 <log_internal_realm@plt>
  225afc:	ldrb	w8, [x20, #209]
  225b00:	mov	x0, x21
  225b04:	mov	w1, w19
  225b08:	ubfx	w2, w8, #3, #1
  225b0c:	bl	2393d0 <session_device_attach_fd>
  225b10:	mov	w19, wzr
  225b14:	b	225cb4 <deliver_fd+0x2b8>
  225b18:	mov	w21, w0
  225b1c:	mov	w0, wzr
  225b20:	bl	240750 <log_get_max_level_realm@plt>
  225b24:	cmp	w0, #0x7
  225b28:	b.lt	225b94 <deliver_fd+0x198>  // b.tstop
  225b2c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225b30:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  225b34:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  225b38:	add	x2, x2, #0x9d5
  225b3c:	add	x4, x4, #0x14d
  225b40:	add	x5, x5, #0x8dc
  225b44:	mov	w0, #0x7                   	// #7
  225b48:	mov	w3, #0x18a                 	// #394
  225b4c:	mov	w1, w21
  225b50:	mov	x6, x20
  225b54:	b	225c24 <deliver_fd+0x228>
  225b58:	bl	240750 <log_get_max_level_realm@plt>
  225b5c:	cmp	w0, #0x7
  225b60:	b.lt	225c30 <deliver_fd+0x234>  // b.tstop
  225b64:	mov	w8, #0x13                  	// #19
  225b68:	movk	w8, #0x4000, lsl #16
  225b6c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225b70:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  225b74:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  225b78:	sub	w1, w8, #0xd
  225b7c:	add	x2, x2, #0x9d5
  225b80:	add	x4, x4, #0x14d
  225b84:	add	x5, x5, #0x9ed
  225b88:	mov	w0, #0x7                   	// #7
  225b8c:	mov	w3, #0x190                 	// #400
  225b90:	b	225c20 <deliver_fd+0x224>
  225b94:	mov	w8, wzr
  225b98:	neg	w9, w21
  225b9c:	b	225c44 <deliver_fd+0x248>
  225ba0:	mov	w0, wzr
  225ba4:	bl	240750 <log_get_max_level_realm@plt>
  225ba8:	cmp	w0, #0x7
  225bac:	b.lt	225cb0 <deliver_fd+0x2b4>  // b.tstop
  225bb0:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225bb4:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  225bb8:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  225bbc:	mov	w1, #0x13                  	// #19
  225bc0:	add	x2, x2, #0x9d5
  225bc4:	add	x4, x4, #0x14d
  225bc8:	add	x5, x5, #0x589
  225bcc:	mov	w0, #0x7                   	// #7
  225bd0:	movk	w1, #0x4000, lsl #16
  225bd4:	mov	w3, #0x198                 	// #408
  225bd8:	bl	240770 <log_internal_realm@plt>
  225bdc:	mov	w19, w0
  225be0:	b	225cb4 <deliver_fd+0x2b8>
  225be4:	bl	240930 <__errno_location@plt>
  225be8:	ldr	w19, [x0]
  225bec:	mov	w0, wzr
  225bf0:	bl	240750 <log_get_max_level_realm@plt>
  225bf4:	cmp	w0, #0x7
  225bf8:	b.lt	225c38 <deliver_fd+0x23c>  // b.tstop
  225bfc:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225c00:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  225c04:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  225c08:	add	x2, x2, #0x9d5
  225c0c:	add	x4, x4, #0x14d
  225c10:	add	x5, x5, #0x5f4
  225c14:	mov	w0, #0x7                   	// #7
  225c18:	mov	w3, #0x195                 	// #405
  225c1c:	mov	w1, w19
  225c20:	mov	x6, x21
  225c24:	bl	240770 <log_internal_realm@plt>
  225c28:	mov	w19, w0
  225c2c:	b	225cb4 <deliver_fd+0x2b8>
  225c30:	mov	w19, #0xfffffffa            	// #-6
  225c34:	b	225cb4 <deliver_fd+0x2b8>
  225c38:	cmp	w19, #0x0
  225c3c:	mov	w8, wzr
  225c40:	cneg	w9, w19, mi  // mi = first
  225c44:	sub	w19, w8, w9, uxtb
  225c48:	b	225cb4 <deliver_fd+0x2b8>
  225c4c:	cmp	w0, #0x4
  225c50:	b.lt	225cb0 <deliver_fd+0x2b4>  // b.tstop
  225c54:	ldr	x19, [sp, #8]
  225c58:	mov	x0, x19
  225c5c:	bl	240c00 <gnu_dev_major@plt>
  225c60:	mov	w21, w0
  225c64:	mov	x0, x19
  225c68:	bl	240c10 <gnu_dev_minor@plt>
  225c6c:	ldr	x8, [x20, #8]
  225c70:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225c74:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  225c78:	adrp	x5, 211000 <inhibit_what_to_string.buffer+0x211000>
  225c7c:	mov	w1, #0x13                  	// #19
  225c80:	mov	w7, w0
  225c84:	add	x2, x2, #0x9d5
  225c88:	add	x4, x4, #0x14d
  225c8c:	add	x5, x5, #0x531
  225c90:	mov	w0, #0x4                   	// #4
  225c94:	movk	w1, #0x4000, lsl #16
  225c98:	mov	w3, #0x19f                 	// #415
  225c9c:	mov	w6, w21
  225ca0:	str	x8, [sp]
  225ca4:	bl	240770 <log_internal_realm@plt>
  225ca8:	mov	w19, w0
  225cac:	b	225cb4 <deliver_fd+0x2b8>
  225cb0:	mov	w19, #0xffffffed            	// #-19
  225cb4:	add	x0, x29, #0x18
  225cb8:	bl	225d1c <freep>
  225cbc:	mov	w0, w19
  225cc0:	ldp	x20, x19, [sp, #192]
  225cc4:	ldp	x22, x21, [sp, #176]
  225cc8:	ldr	x23, [sp, #160]
  225ccc:	ldp	x29, x30, [sp, #144]
  225cd0:	add	sp, sp, #0xd0
  225cd4:	ret
  225cd8:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  225cdc:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225ce0:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  225ce4:	add	x1, x1, #0x102
  225ce8:	add	x2, x2, #0x9d5
  225cec:	add	x4, x4, #0xb02
  225cf0:	mov	w3, #0x185                 	// #389
  225cf4:	bl	240790 <log_assert_failed_realm@plt>
  225cf8:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  225cfc:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225d00:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  225d04:	add	x1, x1, #0xb21
  225d08:	add	x2, x2, #0x9d5
  225d0c:	add	x4, x4, #0xb02
  225d10:	mov	w3, #0x186                 	// #390
  225d14:	mov	w0, wzr
  225d18:	bl	240790 <log_assert_failed_realm@plt>

0000000000225d1c <freep>:
  225d1c:	stp	x29, x30, [sp, #-16]!
  225d20:	ldr	x0, [x0]
  225d24:	mov	x29, sp
  225d28:	bl	240890 <free@plt>
  225d2c:	ldp	x29, x30, [sp], #16
  225d30:	ret

0000000000225d34 <parse_fdname>:
  225d34:	sub	sp, sp, #0x50
  225d38:	stp	x29, x30, [sp, #32]
  225d3c:	add	x29, sp, #0x20
  225d40:	stp	x22, x21, [sp, #48]
  225d44:	stp	x20, x19, [sp, #64]
  225d48:	mov	x20, x2
  225d4c:	mov	x19, x1
  225d50:	stur	xzr, [x29, #-8]
  225d54:	str	xzr, [sp, #16]
  225d58:	bl	225e28 <strv_split>
  225d5c:	stur	x0, [x29, #-8]
  225d60:	cbz	x0, 225df4 <parse_fdname+0xc0>
  225d64:	mov	x21, x0
  225d68:	bl	240c20 <strv_length@plt>
  225d6c:	cmp	x0, #0x5
  225d70:	b.ne	225d88 <parse_fdname+0x54>  // b.any
  225d74:	ldr	x0, [x21]
  225d78:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  225d7c:	add	x1, x1, #0xa72
  225d80:	bl	240c30 <strcmp@plt>
  225d84:	cbz	w0, 225d90 <parse_fdname+0x5c>
  225d88:	mov	w22, #0xffffffea            	// #-22
  225d8c:	b	225df8 <parse_fdname+0xc4>
  225d90:	ldr	x0, [x21, #8]
  225d94:	bl	240c40 <strdup@plt>
  225d98:	str	x0, [sp, #16]
  225d9c:	cbz	x0, 225df4 <parse_fdname+0xc0>
  225da0:	ldr	x0, [x21, #16]
  225da4:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  225da8:	add	x1, x1, #0xb2f
  225dac:	bl	240c30 <strcmp@plt>
  225db0:	cbnz	w0, 225d88 <parse_fdname+0x54>
  225db4:	ldr	x0, [x21, #24]
  225db8:	add	x1, sp, #0xc
  225dbc:	bl	225e48 <safe_atou>
  225dc0:	tbnz	w0, #31, 225e20 <parse_fdname+0xec>
  225dc4:	ldr	x0, [x21, #32]
  225dc8:	add	x1, sp, #0x8
  225dcc:	bl	225e48 <safe_atou>
  225dd0:	tbnz	w0, #31, 225e20 <parse_fdname+0xec>
  225dd4:	ldp	w1, w0, [sp, #8]
  225dd8:	bl	240c50 <gnu_dev_makedev@plt>
  225ddc:	str	x0, [x20]
  225de0:	ldr	x8, [sp, #16]
  225de4:	mov	w22, wzr
  225de8:	str	xzr, [sp, #16]
  225dec:	str	x8, [x19]
  225df0:	b	225df8 <parse_fdname+0xc4>
  225df4:	mov	w22, #0xfffffff4            	// #-12
  225df8:	add	x0, sp, #0x10
  225dfc:	bl	225d1c <freep>
  225e00:	sub	x0, x29, #0x8
  225e04:	bl	2259e0 <strv_freep>
  225e08:	mov	w0, w22
  225e0c:	ldp	x20, x19, [sp, #64]
  225e10:	ldp	x22, x21, [sp, #48]
  225e14:	ldp	x29, x30, [sp, #32]
  225e18:	add	sp, sp, #0x50
  225e1c:	ret
  225e20:	mov	w22, w0
  225e24:	b	225df8 <parse_fdname+0xc4>

0000000000225e28 <strv_split>:
  225e28:	stp	x29, x30, [sp, #-16]!
  225e2c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  225e30:	add	x1, x1, #0x683
  225e34:	mov	w2, wzr
  225e38:	mov	x29, sp
  225e3c:	bl	240c60 <strv_split_full@plt>
  225e40:	ldp	x29, x30, [sp], #16
  225e44:	ret

0000000000225e48 <safe_atou>:
  225e48:	stp	x29, x30, [sp, #-16]!
  225e4c:	mov	x2, x1
  225e50:	mov	w1, wzr
  225e54:	mov	x29, sp
  225e58:	bl	240c70 <safe_atou_full@plt>
  225e5c:	ldp	x29, x30, [sp], #16
  225e60:	ret

0000000000225e64 <ALIGN_TO>:
  225e64:	add	x8, x0, #0x7
  225e68:	and	x0, x8, #0xfffffffffffffff8
  225e6c:	ret

0000000000225e70 <manager_target_for_action>:
  225e70:	stp	x29, x30, [sp, #-16]!
  225e74:	mov	x29, sp
  225e78:	tbnz	w0, #31, 225ea4 <manager_target_for_action+0x34>
  225e7c:	cmp	w0, #0x9
  225e80:	b.gt	225e98 <manager_target_for_action+0x28>
  225e84:	adrp	x8, 251000 <__lxstat64@plt+0xf580>
  225e88:	add	x8, x8, #0xaa8
  225e8c:	ldr	x0, [x8, w0, sxtw #3]
  225e90:	ldp	x29, x30, [sp], #16
  225e94:	ret
  225e98:	mov	x0, xzr
  225e9c:	ldp	x29, x30, [sp], #16
  225ea0:	ret
  225ea4:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  225ea8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225eac:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  225eb0:	add	x1, x1, #0xf35
  225eb4:	add	x2, x2, #0xaf9
  225eb8:	add	x4, x4, #0xa08
  225ebc:	mov	w3, #0x20                  	// #32
  225ec0:	mov	w0, wzr
  225ec4:	bl	240790 <log_assert_failed_realm@plt>

0000000000225ec8 <manager_handle_action>:
  225ec8:	sub	sp, sp, #0xa0
  225ecc:	stp	x29, x30, [sp, #80]
  225ed0:	add	x29, sp, #0x50
  225ed4:	str	x25, [sp, #96]
  225ed8:	stp	x24, x23, [sp, #112]
  225edc:	stp	x22, x21, [sp, #128]
  225ee0:	stp	x20, x19, [sp, #144]
  225ee4:	stp	xzr, xzr, [x29, #-24]
  225ee8:	stur	xzr, [x29, #-8]
  225eec:	str	xzr, [x29, #24]
  225ef0:	cbz	x0, 226468 <manager_handle_action+0x5a0>
  225ef4:	mov	w19, w2
  225ef8:	cbz	w2, 225fe0 <manager_handle_action+0x118>
  225efc:	mov	w20, w4
  225f00:	mov	w22, w3
  225f04:	mov	w23, w1
  225f08:	mov	x21, x0
  225f0c:	cmp	w1, #0x40
  225f10:	b.ne	225f54 <manager_handle_action+0x8c>  // b.any
  225f14:	ldr	x8, [x21, #448]
  225f18:	cbz	x8, 225f54 <manager_handle_action+0x8c>
  225f1c:	mov	w0, wzr
  225f20:	bl	240750 <log_get_max_level_realm@plt>
  225f24:	cmp	w0, #0x7
  225f28:	mov	w20, wzr
  225f2c:	b.lt	226020 <manager_handle_action+0x158>  // b.tstop
  225f30:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225f34:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  225f38:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  225f3c:	add	x2, x2, #0xaf9
  225f40:	add	x4, x4, #0x6ab
  225f44:	add	x5, x5, #0x158
  225f48:	mov	w0, #0x7                   	// #7
  225f4c:	mov	w3, #0x4d                  	// #77
  225f50:	b	226014 <manager_handle_action+0x14c>
  225f54:	cmp	w23, #0x1
  225f58:	b.lt	226048 <manager_handle_action+0x180>  // b.tstop
  225f5c:	mov	w4, #0x1                   	// #1
  225f60:	mov	x0, x21
  225f64:	mov	w1, w23
  225f68:	mov	w2, wzr
  225f6c:	mov	x3, xzr
  225f70:	mov	w5, wzr
  225f74:	mov	w6, wzr
  225f78:	mov	x7, xzr
  225f7c:	bl	233000 <manager_is_inhibited>
  225f80:	tbz	w0, #0, 226048 <manager_handle_action+0x180>
  225f84:	mov	w0, wzr
  225f88:	bl	240750 <log_get_max_level_realm@plt>
  225f8c:	cmp	w0, #0x7
  225f90:	mov	w20, wzr
  225f94:	b.lt	226020 <manager_handle_action+0x158>  // b.tstop
  225f98:	mov	w0, w19
  225f9c:	bl	2264a8 <handle_action_to_string>
  225fa0:	mov	x19, x0
  225fa4:	mov	w0, w23
  225fa8:	bl	2331e8 <inhibit_what_to_string>
  225fac:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225fb0:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  225fb4:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  225fb8:	mov	x7, x0
  225fbc:	add	x2, x2, #0xaf9
  225fc0:	add	x4, x4, #0x6ab
  225fc4:	add	x5, x5, #0xc5e
  225fc8:	mov	w0, #0x7                   	// #7
  225fcc:	mov	w3, #0x57                  	// #87
  225fd0:	mov	w1, wzr
  225fd4:	mov	x6, x19
  225fd8:	bl	240770 <log_internal_realm@plt>
  225fdc:	b	22601c <manager_handle_action+0x154>
  225fe0:	mov	w0, wzr
  225fe4:	bl	240750 <log_get_max_level_realm@plt>
  225fe8:	cmp	w0, #0x7
  225fec:	mov	w20, wzr
  225ff0:	b.lt	226020 <manager_handle_action+0x158>  // b.tstop
  225ff4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  225ff8:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  225ffc:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  226000:	add	x2, x2, #0xaf9
  226004:	add	x4, x4, #0x6ab
  226008:	add	x5, x5, #0x24f
  22600c:	mov	w0, #0x7                   	// #7
  226010:	mov	w3, #0x43                  	// #67
  226014:	mov	w1, wzr
  226018:	bl	240770 <log_internal_realm@plt>
  22601c:	mov	w20, wzr
  226020:	sub	x0, x29, #0x18
  226024:	bl	240c80 <sd_bus_error_free@plt>
  226028:	mov	w0, w20
  22602c:	ldp	x20, x19, [sp, #144]
  226030:	ldp	x22, x21, [sp, #128]
  226034:	ldp	x24, x23, [sp, #112]
  226038:	ldr	x25, [sp, #96]
  22603c:	ldp	x29, x30, [sp, #80]
  226040:	add	sp, sp, #0xa0
  226044:	ret
  226048:	sub	w8, w19, #0x4
  22604c:	cmp	w8, #0x5
  226050:	b.hi	226188 <manager_handle_action+0x2c0>  // b.pmore
  226054:	adrp	x9, 212000 <inhibit_what_to_string.buffer+0x212000>
  226058:	add	x9, x9, #0x449
  22605c:	adr	x10, 22606c <manager_handle_action+0x1a4>
  226060:	ldrb	w11, [x9, x8]
  226064:	add	x10, x10, x11, lsl #2
  226068:	br	x10
  22606c:	adrp	x0, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  226070:	add	x0, x0, #0x641
  226074:	mov	w1, #0x1                   	// #1
  226078:	bl	2408d0 <access@plt>
  22607c:	mvn	w8, w0
  226080:	lsr	w8, w8, #31
  226084:	b	2260c0 <manager_handle_action+0x1f8>
  226088:	adrp	x0, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22608c:	add	x0, x0, #0x199
  226090:	b	2260b4 <manager_handle_action+0x1ec>
  226094:	adrp	x0, 207000 <inhibit_what_to_string.buffer+0x207000>
  226098:	add	x0, x0, #0xea1
  22609c:	b	2260b4 <manager_handle_action+0x1ec>
  2260a0:	adrp	x0, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2260a4:	add	x0, x0, #0x3db
  2260a8:	b	2260b4 <manager_handle_action+0x1ec>
  2260ac:	adrp	x0, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2260b0:	add	x0, x0, #0xb36
  2260b4:	bl	240c90 <can_sleep@plt>
  2260b8:	cmp	w0, #0x0
  2260bc:	cset	w8, gt
  2260c0:	sub	w9, w19, #0x6
  2260c4:	cmp	w9, #0x2
  2260c8:	b.hi	226198 <manager_handle_action+0x2d0>  // b.pmore
  2260cc:	cbnz	w8, 226198 <manager_handle_action+0x2d0>
  2260d0:	adrp	x0, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2260d4:	add	x0, x0, #0xb36
  2260d8:	bl	240c90 <can_sleep@plt>
  2260dc:	cmp	w0, #0x0
  2260e0:	cset	w8, gt
  2260e4:	cmp	w0, #0x1
  2260e8:	b.lt	226198 <manager_handle_action+0x2d0>  // b.tstop
  2260ec:	mov	w0, wzr
  2260f0:	bl	240750 <log_get_max_level_realm@plt>
  2260f4:	cmp	w0, #0x5
  2260f8:	b.lt	226190 <manager_handle_action+0x2c8>  // b.tstop
  2260fc:	mov	w0, w19
  226100:	bl	2264a8 <handle_action_to_string>
  226104:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  226108:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22610c:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  226110:	mov	x6, x0
  226114:	add	x2, x2, #0xaf9
  226118:	add	x4, x4, #0x6ab
  22611c:	add	x5, x5, #0x332
  226120:	mov	w0, #0x5                   	// #5
  226124:	mov	w3, #0x77                  	// #119
  226128:	mov	w1, wzr
  22612c:	mov	w19, #0x5                   	// #5
  226130:	bl	240770 <log_internal_realm@plt>
  226134:	b	226194 <manager_handle_action+0x2cc>
  226138:	tbz	w20, #0, 22601c <manager_handle_action+0x154>
  22613c:	mov	w0, wzr
  226140:	bl	240750 <log_get_max_level_realm@plt>
  226144:	cmp	w0, #0x6
  226148:	b.lt	226174 <manager_handle_action+0x2ac>  // b.tstop
  22614c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  226150:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  226154:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  226158:	add	x2, x2, #0xaf9
  22615c:	add	x4, x4, #0x6ab
  226160:	add	x5, x5, #0x62d
  226164:	mov	w0, #0x6                   	// #6
  226168:	mov	w3, #0x61                  	// #97
  22616c:	mov	w1, wzr
  226170:	bl	240770 <log_internal_realm@plt>
  226174:	mov	w1, #0x1                   	// #1
  226178:	mov	x0, x21
  22617c:	mov	w20, #0x1                   	// #1
  226180:	bl	237a78 <session_send_lock_all>
  226184:	b	226020 <manager_handle_action+0x158>
  226188:	mov	w8, #0x1                   	// #1
  22618c:	b	2260c0 <manager_handle_action+0x1f8>
  226190:	mov	w19, #0x5                   	// #5
  226194:	mov	w8, #0x1                   	// #1
  226198:	tbz	w8, #0, 22620c <manager_handle_action+0x344>
  22619c:	ldr	w23, [x21, #248]
  2261a0:	cmp	w23, #0x1
  2261a4:	b.lt	226264 <manager_handle_action+0x39c>  // b.tstop
  2261a8:	mov	w0, wzr
  2261ac:	bl	240750 <log_get_max_level_realm@plt>
  2261b0:	cmp	w0, #0x7
  2261b4:	b.lt	226390 <manager_handle_action+0x4c8>  // b.tstop
  2261b8:	mov	w0, w23
  2261bc:	bl	2331e8 <inhibit_what_to_string>
  2261c0:	mov	x20, x0
  2261c4:	mov	w0, w19
  2261c8:	bl	2264a8 <handle_action_to_string>
  2261cc:	mov	w8, #0x5f                  	// #95
  2261d0:	movk	w8, #0x4000, lsl #16
  2261d4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2261d8:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  2261dc:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2261e0:	mov	x7, x0
  2261e4:	add	w1, w8, #0x13
  2261e8:	add	x2, x2, #0xaf9
  2261ec:	add	x4, x4, #0x6ab
  2261f0:	add	x5, x5, #0x620
  2261f4:	mov	w0, #0x7                   	// #7
  2261f8:	mov	w3, #0x84                  	// #132
  2261fc:	mov	x6, x20
  226200:	bl	240770 <log_internal_realm@plt>
  226204:	mov	w20, w0
  226208:	b	226020 <manager_handle_action+0x158>
  22620c:	mov	w0, wzr
  226210:	bl	240750 <log_get_max_level_realm@plt>
  226214:	cmp	w0, #0x4
  226218:	b.lt	22625c <manager_handle_action+0x394>  // b.tstop
  22621c:	mov	w0, w19
  226220:	bl	2264a8 <handle_action_to_string>
  226224:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  226228:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22622c:	adrp	x5, 206000 <inhibit_what_to_string.buffer+0x206000>
  226230:	mov	w1, #0x5f                  	// #95
  226234:	mov	x6, x0
  226238:	add	x2, x2, #0xaf9
  22623c:	add	x4, x4, #0x6ab
  226240:	add	x5, x5, #0xd95
  226244:	mov	w0, #0x4                   	// #4
  226248:	movk	w1, #0x4000, lsl #16
  22624c:	mov	w3, #0x7e                  	// #126
  226250:	bl	240770 <log_internal_realm@plt>
  226254:	mov	w20, w0
  226258:	b	226020 <manager_handle_action+0x158>
  22625c:	mov	w20, #0xffffffa1            	// #-95
  226260:	b	226020 <manager_handle_action+0x158>
  226264:	mov	w0, w19
  226268:	bl	225e70 <manager_target_for_action>
  22626c:	cbz	x0, 226488 <manager_handle_action+0x5c0>
  226270:	sub	w8, w19, #0x5
  226274:	cmp	w8, #0x4
  226278:	mov	w8, #0x1                   	// #1
  22627c:	mov	x24, x0
  226280:	cinc	w23, w8, cc  // cc = lo, ul, last
  226284:	tbnz	w22, #0, 226398 <manager_handle_action+0x4d0>
  226288:	add	x7, x29, #0x18
  22628c:	mov	x0, x21
  226290:	mov	w1, w23
  226294:	mov	w2, wzr
  226298:	mov	x3, xzr
  22629c:	mov	w4, wzr
  2262a0:	mov	w5, wzr
  2262a4:	mov	w6, wzr
  2262a8:	bl	233000 <manager_is_inhibited>
  2262ac:	tbz	w0, #0, 226398 <manager_handle_action+0x4d0>
  2262b0:	ldr	x8, [x29, #24]
  2262b4:	stur	xzr, [x29, #-32]
  2262b8:	str	xzr, [sp, #40]
  2262bc:	sub	x1, x29, #0x20
  2262c0:	ldr	w0, [x8, #60]
  2262c4:	bl	240ca0 <get_process_comm@plt>
  2262c8:	ldr	x8, [x29, #24]
  2262cc:	ldr	w0, [x8, #64]
  2262d0:	bl	240cb0 <uid_to_name@plt>
  2262d4:	mov	x22, x0
  2262d8:	str	x0, [sp, #40]
  2262dc:	tst	w20, #0x1
  2262e0:	mov	w8, #0x7                   	// #7
  2262e4:	mov	w9, #0x3                   	// #3
  2262e8:	mov	w0, wzr
  2262ec:	csel	w21, w9, w8, ne  // ne = any
  2262f0:	bl	240750 <log_get_max_level_realm@plt>
  2262f4:	cmp	w0, w21
  2262f8:	b.lt	226378 <manager_handle_action+0x4b0>  // b.tstop
  2262fc:	mov	w0, w19
  226300:	bl	2264a8 <handle_action_to_string>
  226304:	mov	x19, x0
  226308:	mov	w0, w23
  22630c:	bl	2331e8 <inhibit_what_to_string>
  226310:	ldr	x24, [x29, #24]
  226314:	mov	x23, x0
  226318:	mov	x0, x22
  22631c:	ldr	w25, [x24, #64]
  226320:	bl	2264e0 <strna>
  226324:	ldur	x8, [x29, #-32]
  226328:	ldr	w24, [x24, #60]
  22632c:	mov	x22, x0
  226330:	mov	x0, x8
  226334:	bl	2264e0 <strna>
  226338:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22633c:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  226340:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  226344:	str	x0, [sp, #24]
  226348:	add	x2, x2, #0xaf9
  22634c:	add	x4, x4, #0x6ab
  226350:	add	x5, x5, #0xb3e
  226354:	mov	w3, #0x9a                  	// #154
  226358:	mov	w0, w21
  22635c:	mov	w1, wzr
  226360:	mov	x6, x19
  226364:	mov	x7, x23
  226368:	str	w24, [sp, #16]
  22636c:	str	x22, [sp, #8]
  226370:	str	w25, [sp]
  226374:	bl	240770 <log_internal_realm@plt>
  226378:	add	x0, sp, #0x28
  22637c:	sbfx	w20, w20, #0, #1
  226380:	bl	2264c8 <freep>
  226384:	sub	x0, x29, #0x20
  226388:	bl	2264c8 <freep>
  22638c:	b	226020 <manager_handle_action+0x158>
  226390:	mov	w20, #0xffffff8e            	// #-114
  226394:	b	226020 <manager_handle_action+0x158>
  226398:	mov	w0, wzr
  22639c:	bl	240750 <log_get_max_level_realm@plt>
  2263a0:	cmp	w0, #0x6
  2263a4:	b.lt	2263dc <manager_handle_action+0x514>  // b.tstop
  2263a8:	adrp	x8, 251000 <__lxstat64@plt+0xf580>
  2263ac:	add	x8, x8, #0xaf8
  2263b0:	ldr	x6, [x8, w19, sxtw #3]
  2263b4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2263b8:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  2263bc:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  2263c0:	add	x2, x2, #0xaf9
  2263c4:	add	x4, x4, #0x6ab
  2263c8:	add	x5, x5, #0xa3c
  2263cc:	mov	w0, #0x6                   	// #6
  2263d0:	mov	w3, #0x9f                  	// #159
  2263d4:	mov	w1, wzr
  2263d8:	bl	240770 <log_internal_realm@plt>
  2263dc:	sub	x3, x29, #0x18
  2263e0:	mov	x0, x21
  2263e4:	mov	x1, x24
  2263e8:	mov	w2, w23
  2263ec:	bl	229cf8 <bus_manager_shutdown_or_sleep_now_or_later>
  2263f0:	tbnz	w0, #31, 2263fc <manager_handle_action+0x534>
  2263f4:	mov	w20, #0x1                   	// #1
  2263f8:	b	226020 <manager_handle_action+0x158>
  2263fc:	mov	w20, w0
  226400:	mov	w0, wzr
  226404:	bl	240750 <log_get_max_level_realm@plt>
  226408:	cmp	w0, #0x3
  22640c:	b.lt	226458 <manager_handle_action+0x590>  // b.tstop
  226410:	mov	w0, w19
  226414:	bl	2264a8 <handle_action_to_string>
  226418:	mov	x19, x0
  22641c:	sub	x0, x29, #0x18
  226420:	mov	w1, w20
  226424:	bl	240cc0 <bus_error_message@plt>
  226428:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22642c:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  226430:	adrp	x5, 211000 <inhibit_what_to_string.buffer+0x211000>
  226434:	mov	x7, x0
  226438:	add	x2, x2, #0xaf9
  22643c:	add	x4, x4, #0x6ab
  226440:	add	x5, x5, #0xf41
  226444:	mov	w0, #0x3                   	// #3
  226448:	mov	w3, #0xa5                  	// #165
  22644c:	mov	w1, w20
  226450:	mov	x6, x19
  226454:	b	226200 <manager_handle_action+0x338>
  226458:	mov	w8, wzr
  22645c:	neg	w9, w20
  226460:	sub	w20, w8, w9, uxtb
  226464:	b	226020 <manager_handle_action+0x158>
  226468:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22646c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  226470:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  226474:	add	x1, x1, #0x102
  226478:	add	x2, x2, #0xaf9
  22647c:	add	x4, x4, #0xe7f
  226480:	mov	w3, #0x3f                  	// #63
  226484:	bl	240790 <log_assert_failed_realm@plt>
  226488:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22648c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  226490:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  226494:	add	x1, x1, #0xa29
  226498:	add	x2, x2, #0xaf9
  22649c:	add	x4, x4, #0xe7f
  2264a0:	mov	w3, #0x86                  	// #134
  2264a4:	bl	240790 <log_assert_failed_realm@plt>

00000000002264a8 <handle_action_to_string>:
  2264a8:	cmp	w0, #0x9
  2264ac:	b.ls	2264b8 <handle_action_to_string+0x10>  // b.plast
  2264b0:	mov	x0, xzr
  2264b4:	ret
  2264b8:	adrp	x8, 251000 <__lxstat64@plt+0xf580>
  2264bc:	add	x8, x8, #0xb48
  2264c0:	ldr	x0, [x8, w0, sxtw #3]
  2264c4:	ret

00000000002264c8 <freep>:
  2264c8:	stp	x29, x30, [sp, #-16]!
  2264cc:	ldr	x0, [x0]
  2264d0:	mov	x29, sp
  2264d4:	bl	240890 <free@plt>
  2264d8:	ldp	x29, x30, [sp], #16
  2264dc:	ret

00000000002264e0 <strna>:
  2264e0:	adrp	x8, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2264e4:	add	x8, x8, #0x7
  2264e8:	cmp	x0, #0x0
  2264ec:	csel	x0, x8, x0, eq  // eq = none
  2264f0:	ret

00000000002264f4 <handle_action_from_string>:
  2264f4:	stp	x29, x30, [sp, #-16]!
  2264f8:	mov	x2, x0
  2264fc:	adrp	x0, 251000 <__lxstat64@plt+0xf580>
  226500:	add	x0, x0, #0xb48
  226504:	mov	w1, #0xa                   	// #10
  226508:	mov	x29, sp
  22650c:	bl	240cd0 <string_table_lookup@plt>
  226510:	ldp	x29, x30, [sp], #16
  226514:	ret

0000000000226518 <config_parse_handle_action>:
  226518:	sub	sp, sp, #0x50
  22651c:	stp	x29, x30, [sp, #16]
  226520:	str	x23, [sp, #32]
  226524:	stp	x22, x21, [sp, #48]
  226528:	stp	x20, x19, [sp, #64]
  22652c:	add	x29, sp, #0x10
  226530:	cbz	x1, 2265cc <config_parse_handle_action+0xb4>
  226534:	cbz	x5, 2265d8 <config_parse_handle_action+0xc0>
  226538:	mov	x22, x7
  22653c:	cbz	x7, 2265e4 <config_parse_handle_action+0xcc>
  226540:	ldr	x23, [x29, #64]
  226544:	cbz	x23, 2265f0 <config_parse_handle_action+0xd8>
  226548:	mov	x21, x0
  22654c:	mov	x0, x22
  226550:	mov	w19, w2
  226554:	mov	x20, x1
  226558:	bl	2264f4 <handle_action_from_string>
  22655c:	tbnz	w0, #31, 226568 <config_parse_handle_action+0x50>
  226560:	str	w0, [x23]
  226564:	b	2265b0 <config_parse_handle_action+0x98>
  226568:	mov	w0, wzr
  22656c:	bl	240750 <log_get_max_level_realm@plt>
  226570:	cmp	w0, #0x3
  226574:	b.lt	2265b0 <config_parse_handle_action+0x98>  // b.tstop
  226578:	adrp	x8, 210000 <inhibit_what_to_string.buffer+0x210000>
  22657c:	adrp	x5, 210000 <inhibit_what_to_string.buffer+0x210000>
  226580:	adrp	x7, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  226584:	add	x8, x8, #0xb13
  226588:	add	x5, x5, #0xaf9
  22658c:	add	x7, x7, #0xca
  226590:	mov	w1, #0x3                   	// #3
  226594:	mov	w6, #0xb8                  	// #184
  226598:	mov	x0, x21
  22659c:	mov	x2, x20
  2265a0:	mov	w3, w19
  2265a4:	mov	w4, wzr
  2265a8:	stp	x8, x22, [sp]
  2265ac:	bl	240ce0 <log_syntax_internal@plt>
  2265b0:	ldp	x20, x19, [sp, #64]
  2265b4:	ldp	x22, x21, [sp, #48]
  2265b8:	ldr	x23, [sp, #32]
  2265bc:	ldp	x29, x30, [sp, #16]
  2265c0:	mov	w0, wzr
  2265c4:	add	sp, sp, #0x50
  2265c8:	ret
  2265cc:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2265d0:	add	x1, x1, #0xb7e
  2265d4:	b	2265f8 <config_parse_handle_action+0xe0>
  2265d8:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2265dc:	add	x1, x1, #0x94a
  2265e0:	b	2265f8 <config_parse_handle_action+0xe0>
  2265e4:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  2265e8:	add	x1, x1, #0x37a
  2265ec:	b	2265f8 <config_parse_handle_action+0xe0>
  2265f0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2265f4:	add	x1, x1, #0xb87
  2265f8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2265fc:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  226600:	add	x2, x2, #0xaf9
  226604:	add	x4, x4, #0x987
  226608:	mov	w3, #0xb8                  	// #184
  22660c:	mov	w0, wzr
  226610:	bl	240790 <log_assert_failed_realm@plt>

0000000000226614 <button_new>:
  226614:	stp	x29, x30, [sp, #-48]!
  226618:	str	x21, [sp, #16]
  22661c:	stp	x20, x19, [sp, #32]
  226620:	mov	x29, sp
  226624:	cbz	x0, 2266a4 <button_new+0x90>
  226628:	mov	x21, x1
  22662c:	cbz	x1, 2266c4 <button_new+0xb0>
  226630:	mov	x20, x0
  226634:	mov	w0, #0x1                   	// #1
  226638:	mov	w1, #0x30                  	// #48
  22663c:	bl	240cf0 <calloc@plt>
  226640:	mov	x19, x0
  226644:	cbz	x0, 226690 <button_new+0x7c>
  226648:	mov	x0, x21
  22664c:	bl	240c40 <strdup@plt>
  226650:	str	x0, [x19, #24]
  226654:	cbz	x0, 226684 <button_new+0x70>
  226658:	mov	x1, x0
  22665c:	ldr	x0, [x20, #64]
  226660:	mov	x2, x19
  226664:	bl	240d00 <hashmap_put@plt>
  226668:	tbnz	w0, #31, 22667c <button_new+0x68>
  22666c:	mov	w8, #0xffffffff            	// #-1
  226670:	str	x20, [x19]
  226674:	str	w8, [x19, #40]
  226678:	b	226690 <button_new+0x7c>
  22667c:	ldr	x0, [x19, #24]
  226680:	bl	240890 <free@plt>
  226684:	mov	x0, x19
  226688:	bl	2266e8 <mfree>
  22668c:	mov	x19, xzr
  226690:	mov	x0, x19
  226694:	ldp	x20, x19, [sp, #32]
  226698:	ldr	x21, [sp, #16]
  22669c:	ldp	x29, x30, [sp], #48
  2266a0:	ret
  2266a4:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2266a8:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  2266ac:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  2266b0:	add	x1, x1, #0x102
  2266b4:	add	x2, x2, #0x6c4
  2266b8:	add	x4, x4, #0x9e9
  2266bc:	mov	w3, #0x20                  	// #32
  2266c0:	bl	240790 <log_assert_failed_realm@plt>
  2266c4:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2266c8:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  2266cc:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  2266d0:	add	x1, x1, #0xa54
  2266d4:	add	x2, x2, #0x6c4
  2266d8:	add	x4, x4, #0x9e9
  2266dc:	mov	w3, #0x21                  	// #33
  2266e0:	mov	w0, wzr
  2266e4:	bl	240790 <log_assert_failed_realm@plt>

00000000002266e8 <mfree>:
  2266e8:	stp	x29, x30, [sp, #-16]!
  2266ec:	mov	x29, sp
  2266f0:	bl	240890 <free@plt>
  2266f4:	ldp	x29, x30, [sp], #16
  2266f8:	ret

00000000002266fc <button_free>:
  2266fc:	stp	x29, x30, [sp, #-32]!
  226700:	str	x19, [sp, #16]
  226704:	mov	x29, sp
  226708:	cbz	x0, 226760 <button_free+0x64>
  22670c:	ldr	x8, [x0]
  226710:	mov	x19, x0
  226714:	ldr	x1, [x19, #24]
  226718:	ldr	x0, [x8, #64]
  22671c:	bl	226780 <hashmap_remove>
  226720:	ldr	x0, [x19, #8]
  226724:	bl	240810 <sd_event_source_unref@plt>
  226728:	ldr	x0, [x19, #16]
  22672c:	bl	240810 <sd_event_source_unref@plt>
  226730:	ldr	w0, [x19, #40]
  226734:	tbnz	w0, #31, 22673c <button_free+0x40>
  226738:	bl	240d10 <close@plt>
  22673c:	ldr	x0, [x19, #24]
  226740:	bl	240890 <free@plt>
  226744:	ldr	x0, [x19, #32]
  226748:	bl	240890 <free@plt>
  22674c:	mov	x0, x19
  226750:	bl	240890 <free@plt>
  226754:	ldr	x19, [sp, #16]
  226758:	ldp	x29, x30, [sp], #32
  22675c:	ret
  226760:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  226764:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  226768:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22676c:	add	x1, x1, #0xb8c
  226770:	add	x2, x2, #0x6c4
  226774:	add	x4, x4, #0x970
  226778:	mov	w3, #0x37                  	// #55
  22677c:	bl	240790 <log_assert_failed_realm@plt>

0000000000226780 <hashmap_remove>:
  226780:	stp	x29, x30, [sp, #-16]!
  226784:	mov	x29, sp
  226788:	bl	240d20 <internal_hashmap_remove@plt>
  22678c:	ldp	x29, x30, [sp], #16
  226790:	ret

0000000000226794 <button_set_seat>:
  226794:	stp	x29, x30, [sp, #-32]!
  226798:	stp	x20, x19, [sp, #16]
  22679c:	mov	x29, sp
  2267a0:	cbz	x0, 2267e0 <button_set_seat+0x4c>
  2267a4:	cbz	x1, 226800 <button_set_seat+0x6c>
  2267a8:	mov	x19, x0
  2267ac:	mov	x0, x1
  2267b0:	bl	240c40 <strdup@plt>
  2267b4:	cbz	x0, 2267d0 <button_set_seat+0x3c>
  2267b8:	mov	x20, x0
  2267bc:	ldr	x0, [x19, #32]
  2267c0:	bl	240890 <free@plt>
  2267c4:	mov	w0, wzr
  2267c8:	str	x20, [x19, #32]
  2267cc:	b	2267d4 <button_set_seat+0x40>
  2267d0:	mov	w0, #0xfffffff4            	// #-12
  2267d4:	ldp	x20, x19, [sp, #16]
  2267d8:	ldp	x29, x30, [sp], #32
  2267dc:	ret
  2267e0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2267e4:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  2267e8:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  2267ec:	add	x1, x1, #0xb8c
  2267f0:	add	x2, x2, #0x6c4
  2267f4:	add	x4, x4, #0xf3e
  2267f8:	mov	w3, #0x4c                  	// #76
  2267fc:	bl	240790 <log_assert_failed_realm@plt>
  226800:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  226804:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  226808:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22680c:	add	x1, x1, #0xc3
  226810:	add	x2, x2, #0x6c4
  226814:	add	x4, x4, #0xf3e
  226818:	mov	w3, #0x4d                  	// #77
  22681c:	mov	w0, wzr
  226820:	bl	240790 <log_assert_failed_realm@plt>

0000000000226824 <button_open>:
  226824:	stp	x29, x30, [sp, #-64]!
  226828:	stp	x28, x23, [sp, #16]
  22682c:	stp	x22, x21, [sp, #32]
  226830:	stp	x20, x19, [sp, #48]
  226834:	mov	x29, sp
  226838:	sub	sp, sp, #0x110
  22683c:	mov	w8, #0xffffffff            	// #-1
  226840:	mov	x19, sp
  226844:	stur	w8, [x29, #-4]
  226848:	cbz	x0, 226b48 <button_open+0x324>
  22684c:	mov	x21, x0
  226850:	ldr	w0, [x0, #40]
  226854:	bl	240820 <safe_close@plt>
  226858:	adrp	x8, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22685c:	add	x8, x8, #0x669
  226860:	str	w0, [x21, #40]
  226864:	str	x8, [x19, #8]
  226868:	ldr	x8, [x21, #24]
  22686c:	mov	x22, xzr
  226870:	mov	x20, xzr
  226874:	add	x23, x19, #0x8
  226878:	str	x8, [x19, #16]
  22687c:	ldr	x0, [x23, x22]
  226880:	cbz	x0, 226898 <button_open+0x74>
  226884:	bl	240d30 <strlen@plt>
  226888:	add	x22, x22, #0x8
  22688c:	cmp	x22, #0x10
  226890:	add	x20, x0, x20
  226894:	b.ne	22687c <button_open+0x58>  // b.any
  226898:	add	x20, x20, #0x1
  22689c:	mov	x0, x20
  2268a0:	bl	226bb0 <size_multiply_overflow>
  2268a4:	tbnz	w0, #0, 226b68 <button_open+0x344>
  2268a8:	cmp	x20, #0x400, lsl #12
  2268ac:	b.hi	226b74 <button_open+0x350>  // b.pmore
  2268b0:	add	x9, x20, #0xf
  2268b4:	mov	x8, sp
  2268b8:	and	x9, x9, #0xfffffffffffffff0
  2268bc:	sub	x20, x8, x9
  2268c0:	mov	sp, x20
  2268c4:	mov	x22, xzr
  2268c8:	add	x23, x19, #0x8
  2268cc:	mov	x0, x20
  2268d0:	ldr	x1, [x23, x22]
  2268d4:	cbz	x1, 2268e8 <button_open+0xc4>
  2268d8:	bl	240d40 <stpcpy@plt>
  2268dc:	add	x22, x22, #0x8
  2268e0:	cmp	x22, #0x10
  2268e4:	b.ne	2268d0 <button_open+0xac>  // b.any
  2268e8:	mov	w1, #0x902                 	// #2306
  2268ec:	strb	wzr, [x0]
  2268f0:	movk	w1, #0x8, lsl #16
  2268f4:	mov	x0, x20
  2268f8:	bl	2408e0 <open64@plt>
  2268fc:	stur	w0, [x29, #-4]
  226900:	tbnz	w0, #31, 2269cc <button_open+0x1a8>
  226904:	mov	w22, w0
  226908:	bl	226bb8 <button_suitable>
  22690c:	mov	w23, w0
  226910:	tbnz	w0, #31, 226a0c <button_open+0x1e8>
  226914:	cbz	w23, 226a44 <button_open+0x220>
  226918:	mov	w1, #0x4506                	// #17670
  22691c:	add	x2, x19, #0x8
  226920:	movk	w1, #0x8100, lsl #16
  226924:	mov	w0, w22
  226928:	bl	240d50 <ioctl@plt>
  22692c:	tbnz	w0, #31, 226a8c <button_open+0x268>
  226930:	ldr	x0, [x21, #24]
  226934:	mov	w1, w22
  226938:	bl	226d50 <button_set_mask>
  22693c:	mov	x23, x21
  226940:	ldr	x0, [x23, #8]!
  226944:	bl	240810 <sd_event_source_unref@plt>
  226948:	str	x0, [x23]
  22694c:	ldr	x8, [x21]
  226950:	adrp	x4, 226000 <manager_handle_action+0x138>
  226954:	add	x4, x4, #0xf94
  226958:	mov	w3, #0x1                   	// #1
  22695c:	ldr	x0, [x8]
  226960:	mov	x1, x23
  226964:	mov	w2, w22
  226968:	mov	x5, x21
  22696c:	bl	2408f0 <sd_event_add_io@plt>
  226970:	tbnz	w0, #31, 226ae0 <button_open+0x2bc>
  226974:	mov	w8, #0xffffffff            	// #-1
  226978:	mov	w0, wzr
  22697c:	stur	w8, [x29, #-4]
  226980:	str	w22, [x21, #40]
  226984:	bl	240750 <log_get_max_level_realm@plt>
  226988:	cmp	w0, #0x6
  22698c:	mov	w21, wzr
  226990:	b.lt	226b24 <button_open+0x300>  // b.tstop
  226994:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  226998:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22699c:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  2269a0:	add	x2, x2, #0x6c4
  2269a4:	add	x4, x4, #0x98b
  2269a8:	add	x5, x5, #0xa34
  2269ac:	add	x7, x19, #0x8
  2269b0:	mov	w0, #0x6                   	// #6
  2269b4:	mov	w3, #0x15b                 	// #347
  2269b8:	mov	w1, wzr
  2269bc:	mov	x6, x20
  2269c0:	bl	240770 <log_internal_realm@plt>
  2269c4:	mov	w21, wzr
  2269c8:	b	226b24 <button_open+0x300>
  2269cc:	bl	240930 <__errno_location@plt>
  2269d0:	ldr	w21, [x0]
  2269d4:	mov	w0, wzr
  2269d8:	bl	240750 <log_get_max_level_realm@plt>
  2269dc:	cmp	w0, #0x4
  2269e0:	b.lt	226ac8 <button_open+0x2a4>  // b.tstop
  2269e4:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  2269e8:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2269ec:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  2269f0:	add	x2, x2, #0x6c4
  2269f4:	add	x4, x4, #0x98b
  2269f8:	add	x5, x5, #0x37f
  2269fc:	mov	w0, #0x4                   	// #4
  226a00:	mov	w3, #0x147                 	// #327
  226a04:	mov	w1, w21
  226a08:	b	226a7c <button_open+0x258>
  226a0c:	mov	w0, wzr
  226a10:	bl	240750 <log_get_max_level_realm@plt>
  226a14:	cmp	w0, #0x4
  226a18:	b.lt	226b18 <button_open+0x2f4>  // b.tstop
  226a1c:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  226a20:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  226a24:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  226a28:	add	x2, x2, #0x6c4
  226a2c:	add	x4, x4, #0x98b
  226a30:	add	x5, x5, #0xa3f
  226a34:	mov	w0, #0x4                   	// #4
  226a38:	mov	w3, #0x14b                 	// #331
  226a3c:	mov	w1, w23
  226a40:	b	226a7c <button_open+0x258>
  226a44:	mov	w0, wzr
  226a48:	bl	240750 <log_get_max_level_realm@plt>
  226a4c:	cmp	w0, #0x7
  226a50:	b.lt	226ad8 <button_open+0x2b4>  // b.tstop
  226a54:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  226a58:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  226a5c:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  226a60:	mov	w1, #0x63                  	// #99
  226a64:	add	x2, x2, #0x6c4
  226a68:	add	x4, x4, #0x98b
  226a6c:	add	x5, x5, #0x651
  226a70:	mov	w0, #0x7                   	// #7
  226a74:	movk	w1, #0x4000, lsl #16
  226a78:	mov	w3, #0x14e                 	// #334
  226a7c:	mov	x6, x20
  226a80:	bl	240770 <log_internal_realm@plt>
  226a84:	mov	w21, w0
  226a88:	b	226b24 <button_open+0x300>
  226a8c:	bl	240930 <__errno_location@plt>
  226a90:	ldr	w21, [x0]
  226a94:	mov	w0, wzr
  226a98:	bl	240750 <log_get_max_level_realm@plt>
  226a9c:	cmp	w0, #0x3
  226aa0:	b.lt	226ac8 <button_open+0x2a4>  // b.tstop
  226aa4:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  226aa8:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  226aac:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  226ab0:	add	x2, x2, #0x6c4
  226ab4:	add	x4, x4, #0x98b
  226ab8:	add	x5, x5, #0xb8e
  226abc:	mov	w0, #0x3                   	// #3
  226ac0:	mov	w3, #0x151                 	// #337
  226ac4:	b	226a04 <button_open+0x1e0>
  226ac8:	cmp	w21, #0x0
  226acc:	mov	w8, wzr
  226ad0:	cneg	w9, w21, mi  // mi = first
  226ad4:	b	226b20 <button_open+0x2fc>
  226ad8:	mov	w21, #0xffffff9d            	// #-99
  226adc:	b	226b24 <button_open+0x300>
  226ae0:	mov	w23, w0
  226ae4:	mov	w0, wzr
  226ae8:	bl	240750 <log_get_max_level_realm@plt>
  226aec:	cmp	w0, #0x3
  226af0:	b.lt	226b18 <button_open+0x2f4>  // b.tstop
  226af4:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  226af8:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  226afc:	adrp	x5, 211000 <inhibit_what_to_string.buffer+0x211000>
  226b00:	add	x2, x2, #0x6c4
  226b04:	add	x4, x4, #0x98b
  226b08:	add	x5, x5, #0x569
  226b0c:	mov	w0, #0x3                   	// #3
  226b10:	mov	w3, #0x158                 	// #344
  226b14:	b	226a3c <button_open+0x218>
  226b18:	mov	w8, wzr
  226b1c:	neg	w9, w23
  226b20:	sub	w21, w8, w9, uxtb
  226b24:	sub	x0, x29, #0x4
  226b28:	bl	226b98 <closep>
  226b2c:	mov	w0, w21
  226b30:	mov	sp, x29
  226b34:	ldp	x20, x19, [sp, #48]
  226b38:	ldp	x22, x21, [sp, #32]
  226b3c:	ldp	x28, x23, [sp, #16]
  226b40:	ldp	x29, x30, [sp], #64
  226b44:	ret
  226b48:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  226b4c:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  226b50:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  226b54:	add	x1, x1, #0xb8c
  226b58:	add	x2, x2, #0x6c4
  226b5c:	add	x4, x4, #0x10
  226b60:	mov	w3, #0x13f                 	// #319
  226b64:	bl	240790 <log_assert_failed_realm@plt>
  226b68:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  226b6c:	add	x1, x1, #0xf50
  226b70:	b	226b7c <button_open+0x358>
  226b74:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  226b78:	add	x1, x1, #0xa15
  226b7c:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  226b80:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  226b84:	add	x2, x2, #0x6c4
  226b88:	add	x4, x4, #0x10
  226b8c:	mov	w3, #0x143                 	// #323
  226b90:	mov	w0, wzr
  226b94:	bl	240790 <log_assert_failed_realm@plt>

0000000000226b98 <closep>:
  226b98:	stp	x29, x30, [sp, #-16]!
  226b9c:	ldr	w0, [x0]
  226ba0:	mov	x29, sp
  226ba4:	bl	240820 <safe_close@plt>
  226ba8:	ldp	x29, x30, [sp], #16
  226bac:	ret

0000000000226bb0 <size_multiply_overflow>:
  226bb0:	mov	w0, wzr
  226bb4:	ret

0000000000226bb8 <button_suitable>:
  226bb8:	sub	sp, sp, #0x60
  226bbc:	stp	x29, x30, [sp, #48]
  226bc0:	str	x21, [sp, #64]
  226bc4:	stp	x20, x19, [sp, #80]
  226bc8:	add	x29, sp, #0x30
  226bcc:	tbnz	w0, #31, 226d2c <button_suitable+0x174>
  226bd0:	mov	w1, #0x4520                	// #17696
  226bd4:	mov	w21, #0x4520                	// #17696
  226bd8:	add	x2, x29, #0x18
  226bdc:	movk	w1, #0x8008, lsl #16
  226be0:	mov	w19, w0
  226be4:	movk	w21, #0x8008, lsl #16
  226be8:	bl	240d50 <ioctl@plt>
  226bec:	tbnz	w0, #31, 226c58 <button_suitable+0xa0>
  226bf0:	add	x0, x29, #0x18
  226bf4:	mov	w1, #0x1                   	// #1
  226bf8:	bl	2273c0 <bitset_get>
  226bfc:	tbz	w0, #0, 226c7c <button_suitable+0xc4>
  226c00:	mov	w1, #0x4521                	// #17697
  226c04:	mov	x2, sp
  226c08:	movk	w1, #0x8030, lsl #16
  226c0c:	mov	w0, w19
  226c10:	bl	240d50 <ioctl@plt>
  226c14:	tbnz	w0, #31, 226c68 <button_suitable+0xb0>
  226c18:	mov	x0, sp
  226c1c:	mov	w1, #0x74                  	// #116
  226c20:	bl	2273c0 <bitset_get>
  226c24:	tbnz	w0, #0, 226c48 <button_suitable+0x90>
  226c28:	mov	x0, sp
  226c2c:	mov	w1, #0x164                 	// #356
  226c30:	bl	2273c0 <bitset_get>
  226c34:	tbnz	w0, #0, 226c48 <button_suitable+0x90>
  226c38:	mov	x0, sp
  226c3c:	mov	w1, #0x8e                  	// #142
  226c40:	bl	2273c0 <bitset_get>
  226c44:	tbz	w0, #0, 226d10 <button_suitable+0x158>
  226c48:	mov	w8, wzr
  226c4c:	mov	w20, #0x1                   	// #1
  226c50:	tbnz	w8, #0, 226c7c <button_suitable+0xc4>
  226c54:	b	226cf8 <button_suitable+0x140>
  226c58:	bl	240930 <__errno_location@plt>
  226c5c:	ldr	w8, [x0]
  226c60:	neg	w20, w8
  226c64:	b	226cf8 <button_suitable+0x140>
  226c68:	bl	240930 <__errno_location@plt>
  226c6c:	ldr	w9, [x0]
  226c70:	mov	w8, wzr
  226c74:	neg	w20, w9
  226c78:	tbz	w8, #0, 226cf8 <button_suitable+0x140>
  226c7c:	add	x0, x29, #0x18
  226c80:	mov	w1, #0x5                   	// #5
  226c84:	bl	2273c0 <bitset_get>
  226c88:	tbz	w0, #0, 226cf4 <button_suitable+0x13c>
  226c8c:	add	x1, x21, #0x5
  226c90:	mov	x2, sp
  226c94:	mov	w0, w19
  226c98:	bl	240d50 <ioctl@plt>
  226c9c:	tbnz	w0, #31, 226cc0 <button_suitable+0x108>
  226ca0:	mov	x0, sp
  226ca4:	mov	w1, wzr
  226ca8:	bl	2273c0 <bitset_get>
  226cac:	tbz	w0, #0, 226cd8 <button_suitable+0x120>
  226cb0:	mov	w8, wzr
  226cb4:	mov	w20, #0x1                   	// #1
  226cb8:	tbnz	w8, #0, 226cf4 <button_suitable+0x13c>
  226cbc:	b	226cf8 <button_suitable+0x140>
  226cc0:	bl	240930 <__errno_location@plt>
  226cc4:	ldr	w9, [x0]
  226cc8:	mov	w8, wzr
  226ccc:	neg	w20, w9
  226cd0:	tbnz	w8, #0, 226cf4 <button_suitable+0x13c>
  226cd4:	b	226cf8 <button_suitable+0x140>
  226cd8:	mov	x0, sp
  226cdc:	mov	w1, #0x5                   	// #5
  226ce0:	bl	2273c0 <bitset_get>
  226ce4:	tst	w0, #0x1
  226ce8:	csinc	w20, w20, wzr, eq  // eq = none
  226cec:	eor	w8, w0, #0x1
  226cf0:	tbz	w8, #0, 226cf8 <button_suitable+0x140>
  226cf4:	mov	w20, wzr
  226cf8:	mov	w0, w20
  226cfc:	ldp	x20, x19, [sp, #80]
  226d00:	ldr	x21, [sp, #64]
  226d04:	ldp	x29, x30, [sp, #48]
  226d08:	add	sp, sp, #0x60
  226d0c:	ret
  226d10:	mov	x0, sp
  226d14:	mov	w1, #0xcd                  	// #205
  226d18:	bl	2273c0 <bitset_get>
  226d1c:	eor	w8, w0, #0x1
  226d20:	mov	w20, #0x1                   	// #1
  226d24:	tbnz	w8, #0, 226c7c <button_suitable+0xc4>
  226d28:	b	226cf8 <button_suitable+0x140>
  226d2c:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  226d30:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  226d34:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  226d38:	add	x1, x1, #0xb21
  226d3c:	add	x2, x2, #0x6c4
  226d40:	add	x4, x4, #0x395
  226d44:	mov	w3, #0xe4                  	// #228
  226d48:	mov	w0, wzr
  226d4c:	bl	240790 <log_assert_failed_realm@plt>

0000000000226d50 <button_set_mask>:
  226d50:	sub	sp, sp, #0x80
  226d54:	stp	x29, x30, [sp, #80]
  226d58:	add	x29, sp, #0x50
  226d5c:	movi	v0.2d, #0x0
  226d60:	str	x21, [sp, #96]
  226d64:	stp	x20, x19, [sp, #112]
  226d68:	str	xzr, [x29, #24]
  226d6c:	stp	q0, q0, [sp, #48]
  226d70:	str	q0, [sp, #32]
  226d74:	str	xzr, [sp, #24]
  226d78:	cbz	x0, 226f50 <button_set_mask+0x200>
  226d7c:	mov	w20, w1
  226d80:	tbnz	w1, #31, 226f70 <button_set_mask+0x220>
  226d84:	mov	x19, x0
  226d88:	add	x0, x29, #0x18
  226d8c:	mov	w1, #0x1                   	// #1
  226d90:	add	x21, x29, #0x18
  226d94:	bl	227450 <bitset_put>
  226d98:	add	x0, x29, #0x18
  226d9c:	mov	w1, #0x5                   	// #5
  226da0:	bl	227450 <bitset_put>
  226da4:	mov	w1, #0x4593                	// #17811
  226da8:	mov	x8, #0x800000000           	// #34359738368
  226dac:	add	x2, sp, #0x8
  226db0:	movk	w1, #0x4010, lsl #16
  226db4:	mov	w0, w20
  226db8:	stp	x8, x21, [sp, #8]
  226dbc:	bl	240d50 <ioctl@plt>
  226dc0:	tbnz	w0, #31, 226e98 <button_set_mask+0x148>
  226dc4:	add	x0, sp, #0x20
  226dc8:	mov	w1, #0x74                  	// #116
  226dcc:	add	x21, sp, #0x20
  226dd0:	bl	227450 <bitset_put>
  226dd4:	add	x0, sp, #0x20
  226dd8:	mov	w1, #0x164                 	// #356
  226ddc:	bl	227450 <bitset_put>
  226de0:	add	x0, sp, #0x20
  226de4:	mov	w1, #0x8e                  	// #142
  226de8:	bl	227450 <bitset_put>
  226dec:	add	x0, sp, #0x20
  226df0:	mov	w1, #0xcd                  	// #205
  226df4:	bl	227450 <bitset_put>
  226df8:	mov	x8, #0x1                   	// #1
  226dfc:	mov	w1, #0x4593                	// #17811
  226e00:	movk	x8, #0x30, lsl #32
  226e04:	add	x2, sp, #0x8
  226e08:	movk	w1, #0x4010, lsl #16
  226e0c:	mov	w0, w20
  226e10:	stp	x8, x21, [sp, #8]
  226e14:	bl	240d50 <ioctl@plt>
  226e18:	tbnz	w0, #31, 226ec0 <button_set_mask+0x170>
  226e1c:	add	x0, sp, #0x18
  226e20:	mov	w1, wzr
  226e24:	add	x21, sp, #0x18
  226e28:	bl	227450 <bitset_put>
  226e2c:	add	x0, sp, #0x18
  226e30:	mov	w1, #0x5                   	// #5
  226e34:	bl	227450 <bitset_put>
  226e38:	mov	x8, #0x5                   	// #5
  226e3c:	mov	w1, #0x4593                	// #17811
  226e40:	movk	x8, #0x8, lsl #32
  226e44:	add	x2, sp, #0x8
  226e48:	movk	w1, #0x4010, lsl #16
  226e4c:	mov	w0, w20
  226e50:	stp	x8, x21, [sp, #8]
  226e54:	bl	240d50 <ioctl@plt>
  226e58:	tbz	w0, #31, 226f3c <button_set_mask+0x1ec>
  226e5c:	mov	w0, wzr
  226e60:	bl	240750 <log_get_max_level_realm@plt>
  226e64:	cmp	w0, #0x4
  226e68:	b.lt	226f3c <button_set_mask+0x1ec>  // b.tstop
  226e6c:	bl	240930 <__errno_location@plt>
  226e70:	ldr	w1, [x0]
  226e74:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  226e78:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  226e7c:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  226e80:	add	x2, x2, #0x6c4
  226e84:	add	x4, x4, #0xb47
  226e88:	add	x5, x5, #0xa1d
  226e8c:	mov	w0, #0x4                   	// #4
  226e90:	mov	w3, #0x134                 	// #308
  226e94:	b	226f34 <button_set_mask+0x1e4>
  226e98:	bl	240930 <__errno_location@plt>
  226e9c:	ldr	w20, [x0]
  226ea0:	cmp	w20, #0x16
  226ea4:	b.eq	226eb8 <button_set_mask+0x168>  // b.none
  226ea8:	cmp	w20, #0x5f
  226eac:	b.eq	226eb8 <button_set_mask+0x168>  // b.none
  226eb0:	cmp	w20, #0x19
  226eb4:	b.ne	226efc <button_set_mask+0x1ac>  // b.any
  226eb8:	mov	w21, #0x7                   	// #7
  226ebc:	b	226f00 <button_set_mask+0x1b0>
  226ec0:	mov	w0, wzr
  226ec4:	bl	240750 <log_get_max_level_realm@plt>
  226ec8:	cmp	w0, #0x4
  226ecc:	b.lt	226f3c <button_set_mask+0x1ec>  // b.tstop
  226ed0:	bl	240930 <__errno_location@plt>
  226ed4:	ldr	w1, [x0]
  226ed8:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  226edc:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  226ee0:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  226ee4:	add	x2, x2, #0x6c4
  226ee8:	add	x4, x4, #0xb47
  226eec:	add	x5, x5, #0xc6
  226ef0:	mov	w0, #0x4                   	// #4
  226ef4:	mov	w3, #0x128                 	// #296
  226ef8:	b	226f34 <button_set_mask+0x1e4>
  226efc:	mov	w21, #0x4                   	// #4
  226f00:	mov	w0, wzr
  226f04:	bl	240750 <log_get_max_level_realm@plt>
  226f08:	cmp	w0, w21
  226f0c:	b.lt	226f3c <button_set_mask+0x1ec>  // b.tstop
  226f10:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  226f14:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  226f18:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  226f1c:	add	x2, x2, #0x6c4
  226f20:	add	x4, x4, #0xb47
  226f24:	add	x5, x5, #0xb29
  226f28:	mov	w3, #0x11a                 	// #282
  226f2c:	mov	w0, w21
  226f30:	mov	w1, w20
  226f34:	mov	x6, x19
  226f38:	bl	240770 <log_internal_realm@plt>
  226f3c:	ldp	x20, x19, [sp, #112]
  226f40:	ldr	x21, [sp, #96]
  226f44:	ldp	x29, x30, [sp, #80]
  226f48:	add	sp, sp, #0x80
  226f4c:	ret
  226f50:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  226f54:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  226f58:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  226f5c:	add	x1, x1, #0xa54
  226f60:	add	x2, x2, #0x6c4
  226f64:	add	x4, x4, #0x3ae
  226f68:	mov	w3, #0x10b                 	// #267
  226f6c:	bl	240790 <log_assert_failed_realm@plt>
  226f70:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  226f74:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  226f78:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  226f7c:	add	x1, x1, #0xb21
  226f80:	add	x2, x2, #0x6c4
  226f84:	add	x4, x4, #0x3ae
  226f88:	mov	w3, #0x10c                 	// #268
  226f8c:	mov	w0, wzr
  226f90:	bl	240790 <log_assert_failed_realm@plt>

0000000000226f94 <button_dispatch>:
  226f94:	sub	sp, sp, #0x40
  226f98:	stp	x29, x30, [sp, #32]
  226f9c:	str	x19, [sp, #48]
  226fa0:	add	x29, sp, #0x20
  226fa4:	cbz	x0, 227294 <button_dispatch+0x300>
  226fa8:	ldr	w0, [x3, #40]
  226fac:	mov	x19, x3
  226fb0:	cmp	w0, w1
  226fb4:	b.ne	2272b4 <button_dispatch+0x320>  // b.any
  226fb8:	cbz	x19, 2272d8 <button_dispatch+0x344>
  226fbc:	add	x1, sp, #0x8
  226fc0:	mov	w2, #0x18                  	// #24
  226fc4:	bl	240d60 <read@plt>
  226fc8:	tbnz	x0, #63, 226fdc <button_dispatch+0x48>
  226fcc:	cmp	x0, #0x18
  226fd0:	b.cs	226ff0 <button_dispatch+0x5c>  // b.hs, b.nlast
  226fd4:	mov	w0, #0xfffffffb            	// #-5
  226fd8:	b	227244 <button_dispatch+0x2b0>
  226fdc:	bl	240930 <__errno_location@plt>
  226fe0:	ldr	w8, [x0]
  226fe4:	cmp	w8, #0xb
  226fe8:	csneg	w0, wzr, w8, eq  // eq = none
  226fec:	b	227244 <button_dispatch+0x2b0>
  226ff0:	ldrh	w8, [sp, #24]
  226ff4:	cmp	w8, #0x1
  226ff8:	b.ne	227070 <button_dispatch+0xdc>  // b.any
  226ffc:	ldr	w9, [sp, #28]
  227000:	cmp	w9, #0x1
  227004:	b.lt	227070 <button_dispatch+0xdc>  // b.tstop
  227008:	ldrh	w8, [sp, #26]
  22700c:	mov	w0, wzr
  227010:	cmp	w8, #0xcc
  227014:	b.gt	2270e8 <button_dispatch+0x154>
  227018:	cmp	w8, #0x74
  22701c:	b.eq	2270f8 <button_dispatch+0x164>  // b.none
  227020:	cmp	w8, #0x8e
  227024:	b.ne	227244 <button_dispatch+0x2b0>  // b.any
  227028:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  22702c:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  227030:	adrp	x5, 211000 <inhibit_what_to_string.buffer+0x211000>
  227034:	adrp	x6, 211000 <inhibit_what_to_string.buffer+0x211000>
  227038:	add	x2, x2, #0x6c4
  22703c:	add	x4, x4, #0xbba
  227040:	add	x5, x5, #0xfa2
  227044:	add	x6, x6, #0x58f
  227048:	mov	w0, #0x6                   	// #6
  22704c:	mov	w3, #0xaa                  	// #170
  227050:	mov	w1, wzr
  227054:	mov	x7, xzr
  227058:	bl	240d70 <log_struct_internal@plt>
  22705c:	ldr	x0, [x19]
  227060:	mov	w1, #0x10                  	// #16
  227064:	ldr	w2, [x0, #400]
  227068:	ldrb	w3, [x0, #421]
  22706c:	b	227238 <button_dispatch+0x2a4>
  227070:	cmp	w8, #0x5
  227074:	b.ne	227240 <button_dispatch+0x2ac>  // b.any
  227078:	ldr	w9, [sp, #28]
  22707c:	cmp	w9, #0x1
  227080:	b.lt	227140 <button_dispatch+0x1ac>  // b.tstop
  227084:	ldrh	w8, [sp, #26]
  227088:	cmp	w8, #0x5
  22708c:	b.eq	2271b0 <button_dispatch+0x21c>  // b.none
  227090:	cbnz	w8, 227240 <button_dispatch+0x2ac>
  227094:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  227098:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  22709c:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2270a0:	adrp	x6, 207000 <inhibit_what_to_string.buffer+0x207000>
  2270a4:	add	x2, x2, #0x6c4
  2270a8:	add	x4, x4, #0xbba
  2270ac:	add	x5, x5, #0x45
  2270b0:	add	x6, x6, #0xefb
  2270b4:	mov	w0, #0x6                   	// #6
  2270b8:	mov	w3, #0xbd                  	// #189
  2270bc:	mov	w1, wzr
  2270c0:	mov	x7, xzr
  2270c4:	bl	240d70 <log_struct_internal@plt>
  2270c8:	ldr	x0, [x19]
  2270cc:	mov	w8, #0x1                   	// #1
  2270d0:	mov	w1, #0x1                   	// #1
  2270d4:	strb	w8, [x19, #44]
  2270d8:	bl	227474 <button_lid_switch_handle_action>
  2270dc:	mov	x0, x19
  2270e0:	bl	2273dc <button_install_check_event_source>
  2270e4:	b	227240 <button_dispatch+0x2ac>
  2270e8:	cmp	w8, #0xcd
  2270ec:	b.eq	2271f4 <button_dispatch+0x260>  // b.none
  2270f0:	cmp	w8, #0x164
  2270f4:	b.ne	227244 <button_dispatch+0x2b0>  // b.any
  2270f8:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  2270fc:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  227100:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  227104:	adrp	x6, 207000 <inhibit_what_to_string.buffer+0x207000>
  227108:	add	x2, x2, #0x6c4
  22710c:	add	x4, x4, #0xbba
  227110:	add	x5, x5, #0x2a
  227114:	add	x6, x6, #0xecf
  227118:	mov	w0, #0x6                   	// #6
  22711c:	mov	w3, #0x9c                  	// #156
  227120:	mov	w1, wzr
  227124:	mov	x7, xzr
  227128:	bl	240d70 <log_struct_internal@plt>
  22712c:	ldr	x0, [x19]
  227130:	mov	w1, #0x8                   	// #8
  227134:	ldr	w2, [x0, #396]
  227138:	ldrb	w3, [x0, #420]
  22713c:	b	227238 <button_dispatch+0x2a4>
  227140:	cmp	w8, #0x5
  227144:	b.ne	227240 <button_dispatch+0x2ac>  // b.any
  227148:	ldr	w8, [sp, #28]
  22714c:	cbnz	w8, 227240 <button_dispatch+0x2ac>
  227150:	ldrh	w8, [sp, #26]
  227154:	cmp	w8, #0x5
  227158:	b.eq	227254 <button_dispatch+0x2c0>  // b.none
  22715c:	cbnz	w8, 227240 <button_dispatch+0x2ac>
  227160:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  227164:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  227168:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22716c:	adrp	x6, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  227170:	add	x2, x2, #0x6c4
  227174:	add	x4, x4, #0xbba
  227178:	add	x5, x5, #0x675
  22717c:	add	x6, x6, #0x997
  227180:	mov	w0, #0x6                   	// #6
  227184:	mov	w3, #0xd0                  	// #208
  227188:	mov	w1, wzr
  22718c:	mov	x7, xzr
  227190:	bl	240d70 <log_struct_internal@plt>
  227194:	ldr	x0, [x19, #16]
  227198:	strb	wzr, [x19, #44]
  22719c:	bl	240810 <sd_event_source_unref@plt>
  2271a0:	mov	x8, x0
  2271a4:	mov	w0, wzr
  2271a8:	str	x8, [x19, #16]
  2271ac:	b	227244 <button_dispatch+0x2b0>
  2271b0:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  2271b4:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  2271b8:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  2271bc:	adrp	x6, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2271c0:	add	x2, x2, #0x6c4
  2271c4:	add	x4, x4, #0xbba
  2271c8:	add	x5, x5, #0xa57
  2271cc:	add	x6, x6, #0x59
  2271d0:	mov	w0, #0x6                   	// #6
  2271d4:	mov	w3, #0xc6                  	// #198
  2271d8:	mov	w1, wzr
  2271dc:	mov	x7, xzr
  2271e0:	bl	240d70 <log_struct_internal@plt>
  2271e4:	mov	w8, #0x1                   	// #1
  2271e8:	mov	w0, wzr
  2271ec:	strb	w8, [x19, #45]
  2271f0:	b	227244 <button_dispatch+0x2b0>
  2271f4:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  2271f8:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  2271fc:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  227200:	adrp	x6, 209000 <inhibit_what_to_string.buffer+0x209000>
  227204:	add	x2, x2, #0x6c4
  227208:	add	x4, x4, #0xbba
  22720c:	add	x5, x5, #0xfb
  227210:	add	x6, x6, #0xc86
  227214:	mov	w0, #0x6                   	// #6
  227218:	mov	w3, #0xb2                  	// #178
  22721c:	mov	w1, wzr
  227220:	mov	x7, xzr
  227224:	bl	240d70 <log_struct_internal@plt>
  227228:	ldr	x0, [x19]
  22722c:	mov	w1, #0x20                  	// #32
  227230:	ldr	w2, [x0, #404]
  227234:	ldrb	w3, [x0, #422]
  227238:	mov	w4, #0x1                   	// #1
  22723c:	bl	225ec8 <manager_handle_action>
  227240:	mov	w0, wzr
  227244:	ldr	x19, [sp, #48]
  227248:	ldp	x29, x30, [sp, #32]
  22724c:	add	sp, sp, #0x40
  227250:	ret
  227254:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  227258:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  22725c:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  227260:	adrp	x6, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  227264:	add	x2, x2, #0x6c4
  227268:	add	x4, x4, #0xbba
  22726c:	add	x5, x5, #0x951
  227270:	add	x6, x6, #0x1b0
  227274:	mov	w0, #0x6                   	// #6
  227278:	mov	w3, #0xd8                  	// #216
  22727c:	mov	w1, wzr
  227280:	mov	x7, xzr
  227284:	bl	240d70 <log_struct_internal@plt>
  227288:	mov	w0, wzr
  22728c:	strb	wzr, [x19, #45]
  227290:	b	227244 <button_dispatch+0x2b0>
  227294:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  227298:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  22729c:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  2272a0:	add	x1, x1, #0x6de
  2272a4:	add	x2, x2, #0x6c4
  2272a8:	add	x4, x4, #0xf64
  2272ac:	mov	w3, #0x8a                  	// #138
  2272b0:	bl	240790 <log_assert_failed_realm@plt>
  2272b4:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2272b8:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  2272bc:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  2272c0:	add	x1, x1, #0xa51
  2272c4:	add	x2, x2, #0x6c4
  2272c8:	add	x4, x4, #0xf64
  2272cc:	mov	w3, #0x8b                  	// #139
  2272d0:	mov	w0, wzr
  2272d4:	bl	240790 <log_assert_failed_realm@plt>
  2272d8:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2272dc:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  2272e0:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  2272e4:	add	x1, x1, #0xb8c
  2272e8:	add	x2, x2, #0x6c4
  2272ec:	add	x4, x4, #0xf64
  2272f0:	mov	w3, #0x8c                  	// #140
  2272f4:	mov	w0, wzr
  2272f8:	bl	240790 <log_assert_failed_realm@plt>

00000000002272fc <button_check_switches>:
  2272fc:	sub	sp, sp, #0x30
  227300:	stp	x29, x30, [sp, #16]
  227304:	stp	x20, x19, [sp, #32]
  227308:	add	x29, sp, #0x10
  22730c:	str	xzr, [sp, #8]
  227310:	cbz	x0, 2273a0 <button_check_switches+0xa4>
  227314:	mov	x19, x0
  227318:	ldr	w0, [x0, #40]
  22731c:	tbnz	w0, #31, 22737c <button_check_switches+0x80>
  227320:	mov	w1, #0x451b                	// #17691
  227324:	add	x2, sp, #0x8
  227328:	movk	w1, #0x8008, lsl #16
  22732c:	bl	240d50 <ioctl@plt>
  227330:	tbnz	w0, #31, 227384 <button_check_switches+0x88>
  227334:	add	x0, sp, #0x8
  227338:	mov	w1, wzr
  22733c:	bl	2273c0 <bitset_get>
  227340:	mov	w20, w0
  227344:	and	w8, w0, #0x1
  227348:	add	x0, sp, #0x8
  22734c:	mov	w1, #0x5                   	// #5
  227350:	strb	w8, [x19, #44]
  227354:	bl	2273c0 <bitset_get>
  227358:	mov	w8, w0
  22735c:	mov	w0, wzr
  227360:	and	w8, w8, #0x1
  227364:	strb	w8, [x19, #45]
  227368:	tbz	w20, #0, 227390 <button_check_switches+0x94>
  22736c:	mov	x0, x19
  227370:	bl	2273dc <button_install_check_event_source>
  227374:	mov	w0, wzr
  227378:	b	227390 <button_check_switches+0x94>
  22737c:	mov	w0, #0xffffffea            	// #-22
  227380:	b	227390 <button_check_switches+0x94>
  227384:	bl	240930 <__errno_location@plt>
  227388:	ldr	w8, [x0]
  22738c:	neg	w0, w8
  227390:	ldp	x20, x19, [sp, #32]
  227394:	ldp	x29, x30, [sp, #16]
  227398:	add	sp, sp, #0x30
  22739c:	ret
  2273a0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2273a4:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  2273a8:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  2273ac:	add	x1, x1, #0xb8c
  2273b0:	add	x2, x2, #0x6c4
  2273b4:	add	x4, x4, #0xeab
  2273b8:	mov	w3, #0x161                 	// #353
  2273bc:	bl	240790 <log_assert_failed_realm@plt>

00000000002273c0 <bitset_get>:
  2273c0:	mov	w8, w1
  2273c4:	lsr	x9, x8, #3
  2273c8:	and	x9, x9, #0x1ffffff8
  2273cc:	ldr	x9, [x0, x9]
  2273d0:	lsr	x8, x9, x8
  2273d4:	and	w0, w8, #0x1
  2273d8:	ret

00000000002273dc <button_install_check_event_source>:
  2273dc:	stp	x29, x30, [sp, #-32]!
  2273e0:	str	x19, [sp, #16]
  2273e4:	mov	x29, sp
  2273e8:	cbz	x0, 227430 <button_install_check_event_source+0x54>
  2273ec:	mov	x19, x0
  2273f0:	ldr	x8, [x19, #16]!
  2273f4:	mov	x3, x0
  2273f8:	cbnz	x8, 227424 <button_install_check_event_source+0x48>
  2273fc:	ldr	x8, [x3]
  227400:	adrp	x2, 227000 <button_dispatch+0x6c>
  227404:	add	x2, x2, #0x500
  227408:	mov	x1, x19
  22740c:	ldr	x0, [x8]
  227410:	bl	240d80 <sd_event_add_post@plt>
  227414:	tbnz	w0, #31, 227424 <button_install_check_event_source+0x48>
  227418:	ldr	x0, [x19]
  22741c:	mov	w1, #0x65                  	// #101
  227420:	bl	240b40 <sd_event_source_set_priority@plt>
  227424:	ldr	x19, [sp, #16]
  227428:	ldp	x29, x30, [sp], #32
  22742c:	ret
  227430:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  227434:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  227438:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  22743c:	add	x1, x1, #0xb8c
  227440:	add	x2, x2, #0x6c4
  227444:	add	x4, x4, #0xf27
  227448:	mov	w3, #0x77                  	// #119
  22744c:	bl	240790 <log_assert_failed_realm@plt>

0000000000227450 <bitset_put>:
  227450:	mov	w8, w1
  227454:	lsr	x9, x8, #3
  227458:	and	x9, x9, #0x1ffffff8
  22745c:	ldr	x10, [x0, x9]
  227460:	mov	w11, #0x1                   	// #1
  227464:	lsl	x8, x11, x8
  227468:	orr	x8, x10, x8
  22746c:	str	x8, [x0, x9]
  227470:	ret

0000000000227474 <button_lid_switch_handle_action>:
  227474:	stp	x29, x30, [sp, #-32]!
  227478:	stp	x20, x19, [sp, #16]
  22747c:	mov	x29, sp
  227480:	cbz	x0, 2274e0 <button_lid_switch_handle_action+0x6c>
  227484:	mov	w20, w1
  227488:	mov	x19, x0
  22748c:	bl	22881c <manager_is_docked_or_external_displays>
  227490:	tbz	w0, #0, 22749c <button_lid_switch_handle_action+0x28>
  227494:	add	x8, x19, #0x1a0
  227498:	b	2274bc <button_lid_switch_handle_action+0x48>
  22749c:	ldr	w8, [x19, #412]
  2274a0:	cmn	w8, #0x1
  2274a4:	b.eq	2274b8 <button_lid_switch_handle_action+0x44>  // b.none
  2274a8:	bl	228b30 <manager_is_on_external_power>
  2274ac:	tbz	w0, #0, 2274b8 <button_lid_switch_handle_action+0x44>
  2274b0:	add	x8, x19, #0x19c
  2274b4:	b	2274bc <button_lid_switch_handle_action+0x48>
  2274b8:	add	x8, x19, #0x198
  2274bc:	ldr	w2, [x8]
  2274c0:	ldrb	w3, [x19, #423]
  2274c4:	and	w4, w20, #0x1
  2274c8:	mov	w1, #0x40                  	// #64
  2274cc:	mov	x0, x19
  2274d0:	bl	225ec8 <manager_handle_action>
  2274d4:	ldp	x20, x19, [sp, #16]
  2274d8:	ldp	x29, x30, [sp], #32
  2274dc:	ret
  2274e0:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2274e4:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  2274e8:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2274ec:	add	x1, x1, #0x96a
  2274f0:	add	x2, x2, #0x6c4
  2274f4:	add	x4, x4, #0x27f
  2274f8:	mov	w3, #0x5c                  	// #92
  2274fc:	bl	240790 <log_assert_failed_realm@plt>

0000000000227500 <button_recheck>:
  227500:	stp	x29, x30, [sp, #-16]!
  227504:	mov	x29, sp
  227508:	cbz	x1, 227530 <button_recheck+0x30>
  22750c:	ldrb	w8, [x1, #44]
  227510:	cmp	w8, #0x1
  227514:	b.ne	227554 <button_recheck+0x54>  // b.any
  227518:	ldr	x0, [x1]
  22751c:	mov	w1, wzr
  227520:	bl	227474 <button_lid_switch_handle_action>
  227524:	mov	w0, #0x1                   	// #1
  227528:	ldp	x29, x30, [sp], #16
  22752c:	ret
  227530:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  227534:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  227538:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22753c:	add	x1, x1, #0xb8c
  227540:	add	x2, x2, #0x6c4
  227544:	add	x4, x4, #0xbb2
  227548:	mov	w3, #0x6e                  	// #110
  22754c:	mov	w0, wzr
  227550:	bl	240790 <log_assert_failed_realm@plt>
  227554:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  227558:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  22755c:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  227560:	add	x1, x1, #0xecd
  227564:	add	x2, x2, #0x6c4
  227568:	add	x4, x4, #0xbb2
  22756c:	mov	w3, #0x6f                  	// #111
  227570:	mov	w0, wzr
  227574:	bl	240790 <log_assert_failed_realm@plt>

0000000000227578 <manager_reset_config>:
  227578:	stp	x29, x30, [sp, #-32]!
  22757c:	str	x19, [sp, #16]
  227580:	mov	x29, sp
  227584:	cbz	x0, 227640 <manager_reset_config+0xc8>
  227588:	mov	x8, #0x600000006           	// #25769803782
  22758c:	mov	w9, #0x4b40                	// #19264
  227590:	mov	w10, #0x9680                	// #38528
  227594:	movk	w9, #0x4c, lsl #16
  227598:	movk	w10, #0x98, lsl #16
  22759c:	mov	x11, #0x5                   	// #5
  2275a0:	stur	x8, [x0, #156]
  2275a4:	mov	x8, #0xffffffffffff0005    	// #-65531
  2275a8:	movk	x11, #0x6, lsl #32
  2275ac:	movk	x8, #0x0, lsl #16
  2275b0:	stp	x9, x10, [x0, #232]
  2275b4:	add	x9, x0, #0x1a0
  2275b8:	stp	x11, x8, [x0, #400]
  2275bc:	add	x8, x0, #0x1a7
  2275c0:	str	wzr, [x0, #416]
  2275c4:	stur	wzr, [x9, #3]
  2275c8:	mov	w9, #0x101                 	// #257
  2275cc:	strh	w9, [x8]
  2275d0:	mov	w8, #0xc380                	// #50048
  2275d4:	movk	w8, #0x1c9, lsl #16
  2275d8:	mov	w9, #0xd200                	// #53760
  2275dc:	movk	w9, #0x6b49, lsl #16
  2275e0:	str	x8, [x0, #440]
  2275e4:	mov	x8, #0x100000000           	// #4294967296
  2275e8:	mov	x19, x0
  2275ec:	str	x9, [x0, #376]
  2275f0:	str	x8, [x0, #392]
  2275f4:	mov	w0, #0xa                   	// #10
  2275f8:	mov	w1, #0x64                  	// #100
  2275fc:	bl	240d90 <physical_memory_scale@plt>
  227600:	ldr	x8, [x19, #176]
  227604:	mov	w9, #0x2000                	// #8192
  227608:	stp	x0, x9, [x19, #456]
  22760c:	str	x9, [x19, #472]
  227610:	mov	w9, #0x1                   	// #1
  227614:	mov	x0, x8
  227618:	strb	w9, [x19, #192]
  22761c:	bl	240880 <strv_free@plt>
  227620:	ldr	x8, [x19, #184]
  227624:	str	x0, [x19, #176]
  227628:	mov	x0, x8
  22762c:	bl	240880 <strv_free@plt>
  227630:	str	x0, [x19, #184]
  227634:	ldr	x19, [sp, #16]
  227638:	ldp	x29, x30, [sp], #32
  22763c:	ret
  227640:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  227644:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  227648:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22764c:	add	x1, x1, #0x102
  227650:	add	x2, x2, #0x9c6
  227654:	add	x4, x4, #0x6e0
  227658:	mov	w3, #0x20                  	// #32
  22765c:	bl	240790 <log_assert_failed_realm@plt>

0000000000227660 <manager_parse_config_file>:
  227660:	stp	x29, x30, [sp, #-16]!
  227664:	mov	x29, sp
  227668:	cbz	x0, 2276a8 <manager_parse_config_file+0x48>
  22766c:	adrp	x3, 254000 <session_vtable+0x3d0>
  227670:	adrp	x4, 254000 <session_vtable+0x3d0>
  227674:	ldr	x3, [x3, #3352]
  227678:	ldr	x4, [x4, #3360]
  22767c:	mov	x6, x0
  227680:	adrp	x0, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  227684:	adrp	x1, 212000 <inhibit_what_to_string.buffer+0x212000>
  227688:	adrp	x2, 212000 <inhibit_what_to_string.buffer+0x212000>
  22768c:	add	x0, x0, #0x9de
  227690:	add	x1, x1, #0x44f
  227694:	add	x2, x2, #0x4e5
  227698:	mov	w5, #0x4                   	// #4
  22769c:	bl	240da0 <config_parse_many_nulstr@plt>
  2276a0:	ldp	x29, x30, [sp], #16
  2276a4:	ret
  2276a8:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2276ac:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2276b0:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2276b4:	add	x1, x1, #0x102
  2276b8:	add	x2, x2, #0x9c6
  2276bc:	add	x4, x4, #0xa59
  2276c0:	mov	w3, #0x43                  	// #67
  2276c4:	bl	240790 <log_assert_failed_realm@plt>

00000000002276c8 <manager_add_device>:
  2276c8:	stp	x29, x30, [sp, #-48]!
  2276cc:	stp	x22, x21, [sp, #16]
  2276d0:	stp	x20, x19, [sp, #32]
  2276d4:	mov	x29, sp
  2276d8:	cbz	x0, 227758 <manager_add_device+0x90>
  2276dc:	mov	x21, x1
  2276e0:	cbz	x1, 227778 <manager_add_device+0xb0>
  2276e4:	mov	x22, x0
  2276e8:	ldr	x0, [x0, #16]
  2276ec:	mov	x1, x21
  2276f0:	mov	x19, x3
  2276f4:	mov	w20, w2
  2276f8:	bl	22779c <hashmap_get>
  2276fc:	cbz	x0, 22771c <manager_add_device+0x54>
  227700:	ldrb	w8, [x0, #24]
  227704:	cmp	w8, #0x0
  227708:	cset	w8, ne  // ne = any
  22770c:	orr	w8, w8, w20
  227710:	and	w8, w8, #0x1
  227714:	strb	w8, [x0, #24]
  227718:	b	227730 <manager_add_device+0x68>
  22771c:	and	w2, w20, #0x1
  227720:	mov	x0, x22
  227724:	mov	x1, x21
  227728:	bl	231c60 <device_new>
  22772c:	cbz	x0, 227740 <manager_add_device+0x78>
  227730:	mov	w8, wzr
  227734:	cbz	x19, 227744 <manager_add_device+0x7c>
  227738:	str	x0, [x19]
  22773c:	b	227744 <manager_add_device+0x7c>
  227740:	mov	w8, #0xfffffff4            	// #-12
  227744:	ldp	x20, x19, [sp, #32]
  227748:	ldp	x22, x21, [sp, #16]
  22774c:	mov	w0, w8
  227750:	ldp	x29, x30, [sp], #48
  227754:	ret
  227758:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22775c:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  227760:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  227764:	add	x1, x1, #0x102
  227768:	add	x2, x2, #0x9c6
  22776c:	add	x4, x4, #0xa81
  227770:	mov	w3, #0x4f                  	// #79
  227774:	bl	240790 <log_assert_failed_realm@plt>
  227778:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22777c:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  227780:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  227784:	add	x1, x1, #0x3e8
  227788:	add	x2, x2, #0x9c6
  22778c:	add	x4, x4, #0xa81
  227790:	mov	w3, #0x50                  	// #80
  227794:	mov	w0, wzr
  227798:	bl	240790 <log_assert_failed_realm@plt>

000000000022779c <hashmap_get>:
  22779c:	stp	x29, x30, [sp, #-16]!
  2277a0:	mov	x29, sp
  2277a4:	bl	240bc0 <internal_hashmap_get@plt>
  2277a8:	ldp	x29, x30, [sp], #16
  2277ac:	ret

00000000002277b0 <manager_add_seat>:
  2277b0:	stp	x29, x30, [sp, #-48]!
  2277b4:	str	x21, [sp, #16]
  2277b8:	stp	x20, x19, [sp, #32]
  2277bc:	mov	x29, sp
  2277c0:	cbz	x0, 22781c <manager_add_seat+0x6c>
  2277c4:	mov	x20, x1
  2277c8:	cbz	x1, 22783c <manager_add_seat+0x8c>
  2277cc:	mov	x21, x0
  2277d0:	ldr	x0, [x0, #24]
  2277d4:	mov	x1, x20
  2277d8:	mov	x19, x2
  2277dc:	bl	22779c <hashmap_get>
  2277e0:	str	x0, [x29, #24]
  2277e4:	cbnz	x0, 2277fc <manager_add_seat+0x4c>
  2277e8:	add	x0, x29, #0x18
  2277ec:	mov	x1, x21
  2277f0:	mov	x2, x20
  2277f4:	bl	23449c <seat_new>
  2277f8:	tbnz	w0, #31, 22780c <manager_add_seat+0x5c>
  2277fc:	mov	w0, wzr
  227800:	cbz	x19, 22780c <manager_add_seat+0x5c>
  227804:	ldr	x8, [x29, #24]
  227808:	str	x8, [x19]
  22780c:	ldp	x20, x19, [sp, #32]
  227810:	ldr	x21, [sp, #16]
  227814:	ldp	x29, x30, [sp], #48
  227818:	ret
  22781c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  227820:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  227824:	adrp	x4, 206000 <inhibit_what_to_string.buffer+0x206000>
  227828:	add	x1, x1, #0x102
  22782c:	add	x2, x2, #0x9c6
  227830:	add	x4, x4, #0xdc5
  227834:	mov	w3, #0x66                  	// #102
  227838:	bl	240790 <log_assert_failed_realm@plt>
  22783c:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  227840:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  227844:	adrp	x4, 206000 <inhibit_what_to_string.buffer+0x206000>
  227848:	add	x1, x1, #0x11a
  22784c:	add	x2, x2, #0x9c6
  227850:	add	x4, x4, #0xdc5
  227854:	mov	w3, #0x67                  	// #103
  227858:	mov	w0, wzr
  22785c:	bl	240790 <log_assert_failed_realm@plt>

0000000000227860 <manager_add_session>:
  227860:	stp	x29, x30, [sp, #-48]!
  227864:	str	x21, [sp, #16]
  227868:	stp	x20, x19, [sp, #32]
  22786c:	mov	x29, sp
  227870:	cbz	x0, 2278cc <manager_add_session+0x6c>
  227874:	mov	x20, x1
  227878:	cbz	x1, 2278ec <manager_add_session+0x8c>
  22787c:	mov	x21, x0
  227880:	ldr	x0, [x0, #32]
  227884:	mov	x1, x20
  227888:	mov	x19, x2
  22788c:	bl	22779c <hashmap_get>
  227890:	str	x0, [x29, #24]
  227894:	cbnz	x0, 2278ac <manager_add_session+0x4c>
  227898:	add	x0, x29, #0x18
  22789c:	mov	x1, x21
  2278a0:	mov	x2, x20
  2278a4:	bl	239744 <session_new>
  2278a8:	tbnz	w0, #31, 2278bc <manager_add_session+0x5c>
  2278ac:	mov	w0, wzr
  2278b0:	cbz	x19, 2278bc <manager_add_session+0x5c>
  2278b4:	ldr	x8, [x29, #24]
  2278b8:	str	x8, [x19]
  2278bc:	ldp	x20, x19, [sp, #32]
  2278c0:	ldr	x21, [sp, #16]
  2278c4:	ldp	x29, x30, [sp], #48
  2278c8:	ret
  2278cc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2278d0:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2278d4:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2278d8:	add	x1, x1, #0x102
  2278dc:	add	x2, x2, #0x9c6
  2278e0:	add	x4, x4, #0xe5
  2278e4:	mov	w3, #0x7a                  	// #122
  2278e8:	bl	240790 <log_assert_failed_realm@plt>
  2278ec:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2278f0:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2278f4:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2278f8:	add	x1, x1, #0x11a
  2278fc:	add	x2, x2, #0x9c6
  227900:	add	x4, x4, #0xe5
  227904:	mov	w3, #0x7b                  	// #123
  227908:	mov	w0, wzr
  22790c:	bl	240790 <log_assert_failed_realm@plt>

0000000000227910 <manager_add_user>:
  227910:	sub	sp, sp, #0x50
  227914:	stp	x29, x30, [sp, #16]
  227918:	stp	x24, x23, [sp, #32]
  22791c:	stp	x22, x21, [sp, #48]
  227920:	stp	x20, x19, [sp, #64]
  227924:	add	x29, sp, #0x10
  227928:	cbz	x0, 2279a8 <manager_add_user+0x98>
  22792c:	mov	x21, x3
  227930:	cbz	x3, 2279c8 <manager_add_user+0xb8>
  227934:	mov	x24, x0
  227938:	ldr	x0, [x0, #48]
  22793c:	mov	w8, w1
  227940:	mov	w23, w1
  227944:	add	x1, x8, #0x1
  227948:	mov	x19, x5
  22794c:	mov	x20, x4
  227950:	mov	w22, w2
  227954:	bl	22779c <hashmap_get>
  227958:	str	x0, [sp, #8]
  22795c:	cbnz	x0, 227980 <manager_add_user+0x70>
  227960:	add	x0, sp, #0x8
  227964:	mov	x1, x24
  227968:	mov	w2, w23
  22796c:	mov	w3, w22
  227970:	mov	x4, x21
  227974:	mov	x5, x20
  227978:	bl	23d7fc <user_new>
  22797c:	tbnz	w0, #31, 227990 <manager_add_user+0x80>
  227980:	mov	w0, wzr
  227984:	cbz	x19, 227990 <manager_add_user+0x80>
  227988:	ldr	x8, [sp, #8]
  22798c:	str	x8, [x19]
  227990:	ldp	x20, x19, [sp, #64]
  227994:	ldp	x22, x21, [sp, #48]
  227998:	ldp	x24, x23, [sp, #32]
  22799c:	ldp	x29, x30, [sp, #16]
  2279a0:	add	sp, sp, #0x50
  2279a4:	ret
  2279a8:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2279ac:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2279b0:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  2279b4:	add	x1, x1, #0x102
  2279b8:	add	x2, x2, #0x9c6
  2279bc:	add	x4, x4, #0x3d5
  2279c0:	mov	w3, #0x95                  	// #149
  2279c4:	bl	240790 <log_assert_failed_realm@plt>
  2279c8:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2279cc:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2279d0:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  2279d4:	add	x1, x1, #0xa54
  2279d8:	add	x2, x2, #0x9c6
  2279dc:	add	x4, x4, #0x3d5
  2279e0:	mov	w3, #0x96                  	// #150
  2279e4:	mov	w0, wzr
  2279e8:	bl	240790 <log_assert_failed_realm@plt>

00000000002279ec <manager_add_user_by_name>:
  2279ec:	sub	sp, sp, #0x40
  2279f0:	stp	x29, x30, [sp, #32]
  2279f4:	add	x29, sp, #0x20
  2279f8:	stp	x20, x19, [sp, #48]
  2279fc:	stur	x1, [x29, #-8]
  227a00:	str	xzr, [sp, #16]
  227a04:	cbz	x0, 227a5c <manager_add_user_by_name+0x70>
  227a08:	cbz	x1, 227a7c <manager_add_user_by_name+0x90>
  227a0c:	mov	x19, x2
  227a10:	mov	x20, x0
  227a14:	sub	x0, x29, #0x8
  227a18:	add	x1, sp, #0xc
  227a1c:	add	x2, sp, #0x8
  227a20:	add	x3, sp, #0x10
  227a24:	mov	x4, xzr
  227a28:	mov	w5, wzr
  227a2c:	bl	240db0 <get_user_creds@plt>
  227a30:	tbnz	w0, #31, 227a4c <manager_add_user_by_name+0x60>
  227a34:	ldp	w2, w1, [sp, #8]
  227a38:	ldur	x3, [x29, #-8]
  227a3c:	ldr	x4, [sp, #16]
  227a40:	mov	x0, x20
  227a44:	mov	x5, x19
  227a48:	bl	227910 <manager_add_user>
  227a4c:	ldp	x20, x19, [sp, #48]
  227a50:	ldp	x29, x30, [sp, #32]
  227a54:	add	sp, sp, #0x40
  227a58:	ret
  227a5c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  227a60:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  227a64:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  227a68:	add	x1, x1, #0x102
  227a6c:	add	x2, x2, #0x9c6
  227a70:	add	x4, x4, #0xf4c
  227a74:	mov	w3, #0xaf                  	// #175
  227a78:	bl	240790 <log_assert_failed_realm@plt>
  227a7c:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  227a80:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  227a84:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  227a88:	add	x1, x1, #0xa54
  227a8c:	add	x2, x2, #0x9c6
  227a90:	add	x4, x4, #0xf4c
  227a94:	mov	w3, #0xb0                  	// #176
  227a98:	mov	w0, wzr
  227a9c:	bl	240790 <log_assert_failed_realm@plt>

0000000000227aa0 <manager_add_user_by_uid>:
  227aa0:	stp	x29, x30, [sp, #-48]!
  227aa4:	str	x21, [sp, #16]
  227aa8:	stp	x20, x19, [sp, #32]
  227aac:	mov	x29, sp
  227ab0:	cbz	x0, 227b08 <manager_add_user_by_uid+0x68>
  227ab4:	mov	x19, x2
  227ab8:	mov	w20, w1
  227abc:	mov	x21, x0
  227ac0:	bl	240930 <__errno_location@plt>
  227ac4:	str	wzr, [x0]
  227ac8:	mov	w0, w20
  227acc:	bl	240dc0 <getpwuid@plt>
  227ad0:	cbz	x0, 227af4 <manager_add_user_by_uid+0x54>
  227ad4:	ldr	w2, [x0, #20]
  227ad8:	ldr	x3, [x0]
  227adc:	ldr	x4, [x0, #32]
  227ae0:	mov	x0, x21
  227ae4:	mov	w1, w20
  227ae8:	mov	x5, x19
  227aec:	bl	227910 <manager_add_user>
  227af0:	b	227af8 <manager_add_user_by_uid+0x58>
  227af4:	bl	227b28 <errno_or_else>
  227af8:	ldp	x20, x19, [sp, #32]
  227afc:	ldr	x21, [sp, #16]
  227b00:	ldp	x29, x30, [sp], #48
  227b04:	ret
  227b08:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  227b0c:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  227b10:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  227b14:	add	x1, x1, #0x102
  227b18:	add	x2, x2, #0x9c6
  227b1c:	add	x4, x4, #0x972
  227b20:	mov	w3, #0xbc                  	// #188
  227b24:	bl	240790 <log_assert_failed_realm@plt>

0000000000227b28 <errno_or_else>:
  227b28:	stp	x29, x30, [sp, #-16]!
  227b2c:	mov	x29, sp
  227b30:	bl	240930 <__errno_location@plt>
  227b34:	ldr	w8, [x0]
  227b38:	mov	w9, #0xfffffffe            	// #-2
  227b3c:	cmp	w8, #0x0
  227b40:	csneg	w0, w9, w8, le
  227b44:	ldp	x29, x30, [sp], #16
  227b48:	ret

0000000000227b4c <manager_add_inhibitor>:
  227b4c:	stp	x29, x30, [sp, #-48]!
  227b50:	str	x21, [sp, #16]
  227b54:	stp	x20, x19, [sp, #32]
  227b58:	mov	x29, sp
  227b5c:	cbz	x0, 227bb8 <manager_add_inhibitor+0x6c>
  227b60:	mov	x20, x1
  227b64:	cbz	x1, 227bd8 <manager_add_inhibitor+0x8c>
  227b68:	mov	x21, x0
  227b6c:	ldr	x0, [x0, #56]
  227b70:	mov	x1, x20
  227b74:	mov	x19, x2
  227b78:	bl	22779c <hashmap_get>
  227b7c:	str	x0, [x29, #24]
  227b80:	cbnz	x0, 227b98 <manager_add_inhibitor+0x4c>
  227b84:	add	x0, x29, #0x18
  227b88:	mov	x1, x21
  227b8c:	mov	x2, x20
  227b90:	bl	231fd8 <inhibitor_new>
  227b94:	tbnz	w0, #31, 227ba8 <manager_add_inhibitor+0x5c>
  227b98:	mov	w0, wzr
  227b9c:	cbz	x19, 227ba8 <manager_add_inhibitor+0x5c>
  227ba0:	ldr	x8, [x29, #24]
  227ba4:	str	x8, [x19]
  227ba8:	ldp	x20, x19, [sp, #32]
  227bac:	ldr	x21, [sp, #16]
  227bb0:	ldp	x29, x30, [sp], #48
  227bb4:	ret
  227bb8:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  227bbc:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  227bc0:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  227bc4:	add	x1, x1, #0x102
  227bc8:	add	x2, x2, #0x9c6
  227bcc:	add	x4, x4, #0x705
  227bd0:	mov	w3, #0xca                  	// #202
  227bd4:	bl	240790 <log_assert_failed_realm@plt>
  227bd8:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  227bdc:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  227be0:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  227be4:	add	x1, x1, #0x11a
  227be8:	add	x2, x2, #0x9c6
  227bec:	add	x4, x4, #0x705
  227bf0:	mov	w3, #0xcb                  	// #203
  227bf4:	mov	w0, wzr
  227bf8:	bl	240790 <log_assert_failed_realm@plt>

0000000000227bfc <manager_add_button>:
  227bfc:	stp	x29, x30, [sp, #-48]!
  227c00:	str	x21, [sp, #16]
  227c04:	stp	x20, x19, [sp, #32]
  227c08:	mov	x29, sp
  227c0c:	cbz	x0, 227c68 <manager_add_button+0x6c>
  227c10:	mov	x20, x1
  227c14:	cbz	x1, 227c88 <manager_add_button+0x8c>
  227c18:	mov	x21, x0
  227c1c:	ldr	x0, [x0, #64]
  227c20:	mov	x1, x20
  227c24:	mov	x19, x2
  227c28:	bl	22779c <hashmap_get>
  227c2c:	cbnz	x0, 227c40 <manager_add_button+0x44>
  227c30:	mov	x0, x21
  227c34:	mov	x1, x20
  227c38:	bl	226614 <button_new>
  227c3c:	cbz	x0, 227c50 <manager_add_button+0x54>
  227c40:	mov	w8, wzr
  227c44:	cbz	x19, 227c54 <manager_add_button+0x58>
  227c48:	str	x0, [x19]
  227c4c:	b	227c54 <manager_add_button+0x58>
  227c50:	mov	w8, #0xfffffff4            	// #-12
  227c54:	ldp	x20, x19, [sp, #32]
  227c58:	ldr	x21, [sp, #16]
  227c5c:	mov	w0, w8
  227c60:	ldp	x29, x30, [sp], #48
  227c64:	ret
  227c68:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  227c6c:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  227c70:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  227c74:	add	x1, x1, #0x102
  227c78:	add	x2, x2, #0x9c6
  227c7c:	add	x4, x4, #0xb5e
  227c80:	mov	w3, #0xdd                  	// #221
  227c84:	bl	240790 <log_assert_failed_realm@plt>
  227c88:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  227c8c:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  227c90:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  227c94:	add	x1, x1, #0xa54
  227c98:	add	x2, x2, #0x9c6
  227c9c:	add	x4, x4, #0xb5e
  227ca0:	mov	w3, #0xde                  	// #222
  227ca4:	mov	w0, wzr
  227ca8:	bl	240790 <log_assert_failed_realm@plt>

0000000000227cac <manager_process_seat_device>:
  227cac:	sub	sp, sp, #0x60
  227cb0:	stp	x29, x30, [sp, #48]
  227cb4:	str	x21, [sp, #64]
  227cb8:	stp	x20, x19, [sp, #80]
  227cbc:	add	x29, sp, #0x30
  227cc0:	cbz	x0, 227eb0 <manager_process_seat_device+0x204>
  227cc4:	mov	x20, x1
  227cc8:	mov	x19, x0
  227ccc:	mov	w1, #0x1                   	// #1
  227cd0:	mov	x0, x20
  227cd4:	bl	240b80 <device_for_action@plt>
  227cd8:	tbz	w0, #0, 227d14 <manager_process_seat_device+0x68>
  227cdc:	sub	x1, x29, #0x8
  227ce0:	mov	x0, x20
  227ce4:	bl	240dd0 <sd_device_get_syspath@plt>
  227ce8:	tbnz	w0, #31, 227e6c <manager_process_seat_device+0x1c0>
  227cec:	ldr	x0, [x19, #16]
  227cf0:	ldur	x1, [x29, #-8]
  227cf4:	bl	22779c <hashmap_get>
  227cf8:	str	x0, [x29, #24]
  227cfc:	cbz	x0, 227e6c <manager_process_seat_device+0x1c0>
  227d00:	ldr	x0, [x0, #16]
  227d04:	bl	235730 <seat_add_to_gc_queue>
  227d08:	ldr	x0, [x29, #24]
  227d0c:	bl	231d54 <device_free>
  227d10:	b	227e6c <manager_process_seat_device+0x1c0>
  227d14:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  227d18:	add	x1, x1, #0x2b6
  227d1c:	sub	x2, x29, #0x8
  227d20:	mov	x0, x20
  227d24:	bl	240de0 <sd_device_get_property_value@plt>
  227d28:	tbnz	w0, #31, 227d38 <manager_process_seat_device+0x8c>
  227d2c:	ldur	x0, [x29, #-8]
  227d30:	bl	227ed0 <isempty>
  227d34:	tbz	w0, #0, 227d44 <manager_process_seat_device+0x98>
  227d38:	adrp	x8, 207000 <inhibit_what_to_string.buffer+0x207000>
  227d3c:	add	x8, x8, #0xe02
  227d40:	stur	x8, [x29, #-8]
  227d44:	ldur	x0, [x29, #-8]
  227d48:	bl	234604 <seat_name_is_valid>
  227d4c:	tbz	w0, #0, 227d8c <manager_process_seat_device+0xe0>
  227d50:	ldr	x0, [x19, #24]
  227d54:	ldur	x1, [x29, #-8]
  227d58:	bl	22779c <hashmap_get>
  227d5c:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  227d60:	str	x0, [sp, #24]
  227d64:	add	x1, x1, #0xe4e
  227d68:	mov	x0, x20
  227d6c:	bl	240df0 <sd_device_has_tag@plt>
  227d70:	mov	w21, w0
  227d74:	cmp	w0, #0x0
  227d78:	b.gt	227dfc <manager_process_seat_device+0x150>
  227d7c:	ldr	x8, [sp, #24]
  227d80:	cbnz	x8, 227dfc <manager_process_seat_device+0x150>
  227d84:	mov	w20, wzr
  227d88:	b	227e68 <manager_process_seat_device+0x1bc>
  227d8c:	str	xzr, [x29, #24]
  227d90:	cbz	x20, 227da4 <manager_process_seat_device+0xf8>
  227d94:	mov	w0, wzr
  227d98:	bl	240750 <log_get_max_level_realm@plt>
  227d9c:	cmp	w0, #0x4
  227da0:	b.ge	227ea0 <manager_process_seat_device+0x1f4>  // b.tcont
  227da4:	ldr	x6, [x29, #24]
  227da8:	ldur	x8, [x29, #-8]
  227dac:	adrp	x9, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  227db0:	add	x9, x9, #0xbb5
  227db4:	cmp	x6, #0x0
  227db8:	str	x8, [sp, #16]
  227dbc:	adrp	x8, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  227dc0:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  227dc4:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  227dc8:	csel	x5, xzr, x9, eq  // eq = none
  227dcc:	add	x8, x8, #0x1dc
  227dd0:	add	x2, x2, #0x9c6
  227dd4:	add	x4, x4, #0xb99
  227dd8:	mov	w0, #0x4                   	// #4
  227ddc:	mov	w3, #0x10a                 	// #266
  227de0:	mov	w1, wzr
  227de4:	mov	x7, xzr
  227de8:	stp	xzr, x8, [sp]
  227dec:	bl	240e00 <log_object_internal@plt>
  227df0:	mov	w8, wzr
  227df4:	mov	w20, wzr
  227df8:	b	227e68 <manager_process_seat_device+0x1bc>
  227dfc:	sub	x1, x29, #0x10
  227e00:	mov	x0, x20
  227e04:	bl	240dd0 <sd_device_get_syspath@plt>
  227e08:	tbnz	w0, #31, 227e60 <manager_process_seat_device+0x1b4>
  227e0c:	ldur	x1, [x29, #-16]
  227e10:	cmp	w21, #0x0
  227e14:	cset	w2, gt
  227e18:	add	x3, x29, #0x18
  227e1c:	mov	x0, x19
  227e20:	bl	2276c8 <manager_add_device>
  227e24:	tbnz	w0, #31, 227e60 <manager_process_seat_device+0x1b4>
  227e28:	ldr	x8, [sp, #24]
  227e2c:	cbnz	x8, 227e44 <manager_process_seat_device+0x198>
  227e30:	ldur	x1, [x29, #-8]
  227e34:	add	x2, sp, #0x18
  227e38:	mov	x0, x19
  227e3c:	bl	2277b0 <manager_add_seat>
  227e40:	tbnz	w0, #31, 227e88 <manager_process_seat_device+0x1dc>
  227e44:	ldr	x0, [x29, #24]
  227e48:	ldr	x1, [sp, #24]
  227e4c:	bl	231eb4 <device_attach>
  227e50:	ldr	x0, [sp, #24]
  227e54:	bl	23550c <seat_start>
  227e58:	mov	w8, #0x1                   	// #1
  227e5c:	b	227e68 <manager_process_seat_device+0x1bc>
  227e60:	mov	w20, w0
  227e64:	mov	w8, wzr
  227e68:	cbz	w8, 227e70 <manager_process_seat_device+0x1c4>
  227e6c:	mov	w20, wzr
  227e70:	mov	w0, w20
  227e74:	ldp	x20, x19, [sp, #80]
  227e78:	ldr	x21, [sp, #64]
  227e7c:	ldp	x29, x30, [sp, #48]
  227e80:	add	sp, sp, #0x60
  227e84:	ret
  227e88:	mov	w20, w0
  227e8c:	ldr	x0, [x29, #24]
  227e90:	ldr	x8, [x0, #16]
  227e94:	cbnz	x8, 227e64 <manager_process_seat_device+0x1b8>
  227e98:	bl	231d54 <device_free>
  227e9c:	b	227e64 <manager_process_seat_device+0x1b8>
  227ea0:	add	x1, x29, #0x18
  227ea4:	mov	x0, x20
  227ea8:	bl	240b70 <sd_device_get_sysname@plt>
  227eac:	b	227da4 <manager_process_seat_device+0xf8>
  227eb0:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  227eb4:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  227eb8:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  227ebc:	add	x1, x1, #0x102
  227ec0:	add	x2, x2, #0x9c6
  227ec4:	add	x4, x4, #0xf8b
  227ec8:	mov	w3, #0xf1                  	// #241
  227ecc:	bl	240790 <log_assert_failed_realm@plt>

0000000000227ed0 <isempty>:
  227ed0:	cbz	x0, 227ee4 <isempty+0x14>
  227ed4:	ldrb	w8, [x0]
  227ed8:	cmp	w8, #0x0
  227edc:	cset	w0, eq  // eq = none
  227ee0:	ret
  227ee4:	mov	w0, #0x1                   	// #1
  227ee8:	ret

0000000000227eec <manager_process_button_device>:
  227eec:	sub	sp, sp, #0x40
  227ef0:	stp	x29, x30, [sp, #32]
  227ef4:	stp	x20, x19, [sp, #48]
  227ef8:	add	x29, sp, #0x20
  227efc:	cbz	x0, 227fb4 <manager_process_button_device+0xc8>
  227f00:	mov	x19, x1
  227f04:	mov	x20, x0
  227f08:	sub	x1, x29, #0x8
  227f0c:	mov	x0, x19
  227f10:	bl	240b70 <sd_device_get_sysname@plt>
  227f14:	tbnz	w0, #31, 227fa4 <manager_process_button_device+0xb8>
  227f18:	mov	w1, #0x1                   	// #1
  227f1c:	mov	x0, x19
  227f20:	bl	240b80 <device_for_action@plt>
  227f24:	tbz	w0, #0, 227f40 <manager_process_button_device+0x54>
  227f28:	ldr	x0, [x20, #64]
  227f2c:	ldur	x1, [x29, #-8]
  227f30:	bl	22779c <hashmap_get>
  227f34:	str	x0, [sp, #16]
  227f38:	cbnz	x0, 227f9c <manager_process_button_device+0xb0>
  227f3c:	b	227fa4 <manager_process_button_device+0xb8>
  227f40:	ldur	x1, [x29, #-8]
  227f44:	add	x2, sp, #0x10
  227f48:	mov	x0, x20
  227f4c:	bl	227bfc <manager_add_button>
  227f50:	tbnz	w0, #31, 227fa4 <manager_process_button_device+0xb8>
  227f54:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  227f58:	add	x1, x1, #0x2b6
  227f5c:	add	x2, sp, #0x8
  227f60:	mov	x0, x19
  227f64:	bl	240de0 <sd_device_get_property_value@plt>
  227f68:	tbnz	w0, #31, 227f78 <manager_process_button_device+0x8c>
  227f6c:	ldr	x0, [sp, #8]
  227f70:	bl	227ed0 <isempty>
  227f74:	tbz	w0, #0, 227f84 <manager_process_button_device+0x98>
  227f78:	adrp	x8, 207000 <inhibit_what_to_string.buffer+0x207000>
  227f7c:	add	x8, x8, #0xe02
  227f80:	str	x8, [sp, #8]
  227f84:	ldp	x1, x0, [sp, #8]
  227f88:	bl	226794 <button_set_seat>
  227f8c:	ldr	x0, [sp, #16]
  227f90:	bl	226824 <button_open>
  227f94:	tbz	w0, #31, 227fa0 <manager_process_button_device+0xb4>
  227f98:	ldr	x0, [sp, #16]
  227f9c:	bl	2266fc <button_free>
  227fa0:	mov	w0, wzr
  227fa4:	ldp	x20, x19, [sp, #48]
  227fa8:	ldp	x29, x30, [sp, #32]
  227fac:	add	sp, sp, #0x40
  227fb0:	ret
  227fb4:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  227fb8:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  227fbc:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  227fc0:	add	x1, x1, #0x102
  227fc4:	add	x2, x2, #0x9c6
  227fc8:	add	x4, x4, #0xf6a
  227fcc:	mov	w3, #0x133                 	// #307
  227fd0:	bl	240790 <log_assert_failed_realm@plt>

0000000000227fd4 <manager_get_session_by_pid>:
  227fd4:	sub	sp, sp, #0x40
  227fd8:	stp	x29, x30, [sp, #16]
  227fdc:	stp	x22, x21, [sp, #32]
  227fe0:	stp	x20, x19, [sp, #48]
  227fe4:	add	x29, sp, #0x10
  227fe8:	str	xzr, [sp, #8]
  227fec:	cbz	x0, 228084 <manager_get_session_by_pid+0xb0>
  227ff0:	mov	x20, x0
  227ff4:	mov	w0, w1
  227ff8:	mov	x19, x2
  227ffc:	mov	w21, w1
  228000:	bl	2280bc <pid_is_valid>
  228004:	tbz	w0, #0, 228054 <manager_get_session_by_pid+0x80>
  228008:	ldr	x22, [x20, #40]
  22800c:	mov	w0, w21
  228010:	bl	2280c8 <PID_TO_PTR>
  228014:	mov	x1, x0
  228018:	mov	x0, x22
  22801c:	bl	22779c <hashmap_get>
  228020:	cbnz	x0, 228040 <manager_get_session_by_pid+0x6c>
  228024:	add	x1, sp, #0x8
  228028:	mov	w0, w21
  22802c:	bl	240e10 <cg_pid_get_unit@plt>
  228030:	tbnz	w0, #31, 228078 <manager_get_session_by_pid+0xa4>
  228034:	ldr	x0, [x20, #216]
  228038:	ldr	x1, [sp, #8]
  22803c:	bl	22779c <hashmap_get>
  228040:	cbz	x19, 228048 <manager_get_session_by_pid+0x74>
  228044:	str	x0, [x19]
  228048:	cmp	x0, #0x0
  22804c:	cset	w19, ne  // ne = any
  228050:	b	228058 <manager_get_session_by_pid+0x84>
  228054:	mov	w19, #0xffffffea            	// #-22
  228058:	add	x0, sp, #0x8
  22805c:	bl	2280a4 <freep>
  228060:	mov	w0, w19
  228064:	ldp	x20, x19, [sp, #48]
  228068:	ldp	x22, x21, [sp, #32]
  22806c:	ldp	x29, x30, [sp, #16]
  228070:	add	sp, sp, #0x40
  228074:	ret
  228078:	mov	x0, xzr
  22807c:	cbnz	x19, 228044 <manager_get_session_by_pid+0x70>
  228080:	b	228048 <manager_get_session_by_pid+0x74>
  228084:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  228088:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22808c:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  228090:	add	x1, x1, #0x102
  228094:	add	x2, x2, #0x9c6
  228098:	add	x4, x4, #0xcb2
  22809c:	mov	w3, #0x15b                 	// #347
  2280a0:	bl	240790 <log_assert_failed_realm@plt>

00000000002280a4 <freep>:
  2280a4:	stp	x29, x30, [sp, #-16]!
  2280a8:	ldr	x0, [x0]
  2280ac:	mov	x29, sp
  2280b0:	bl	240890 <free@plt>
  2280b4:	ldp	x29, x30, [sp], #16
  2280b8:	ret

00000000002280bc <pid_is_valid>:
  2280bc:	cmp	w0, #0x0
  2280c0:	cset	w0, gt
  2280c4:	ret

00000000002280c8 <PID_TO_PTR>:
  2280c8:	sxtw	x0, w0
  2280cc:	ret

00000000002280d0 <manager_get_user_by_pid>:
  2280d0:	stp	x29, x30, [sp, #-48]!
  2280d4:	mov	x29, sp
  2280d8:	str	x21, [sp, #16]
  2280dc:	stp	x20, x19, [sp, #32]
  2280e0:	str	xzr, [x29, #24]
  2280e4:	cbz	x0, 22815c <manager_get_user_by_pid+0x8c>
  2280e8:	mov	x20, x0
  2280ec:	mov	w0, w1
  2280f0:	mov	x19, x2
  2280f4:	mov	w21, w1
  2280f8:	bl	2280bc <pid_is_valid>
  2280fc:	tbz	w0, #0, 228130 <manager_get_user_by_pid+0x60>
  228100:	add	x1, x29, #0x18
  228104:	mov	w0, w21
  228108:	bl	240e20 <cg_pid_get_slice@plt>
  22810c:	tbnz	w0, #31, 228150 <manager_get_user_by_pid+0x80>
  228110:	ldr	x0, [x20, #224]
  228114:	ldr	x1, [x29, #24]
  228118:	bl	22779c <hashmap_get>
  22811c:	cbz	x19, 228124 <manager_get_user_by_pid+0x54>
  228120:	str	x0, [x19]
  228124:	cmp	x0, #0x0
  228128:	cset	w19, ne  // ne = any
  22812c:	b	228134 <manager_get_user_by_pid+0x64>
  228130:	mov	w19, #0xffffffea            	// #-22
  228134:	add	x0, x29, #0x18
  228138:	bl	2280a4 <freep>
  22813c:	mov	w0, w19
  228140:	ldp	x20, x19, [sp, #32]
  228144:	ldr	x21, [sp, #16]
  228148:	ldp	x29, x30, [sp], #48
  22814c:	ret
  228150:	mov	x0, xzr
  228154:	cbnz	x19, 228120 <manager_get_user_by_pid+0x50>
  228158:	b	228124 <manager_get_user_by_pid+0x54>
  22815c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  228160:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228164:	adrp	x4, 206000 <inhibit_what_to_string.buffer+0x206000>
  228168:	add	x1, x1, #0x102
  22816c:	add	x2, x2, #0x9c6
  228170:	add	x4, x4, #0xdfc
  228174:	mov	w3, #0x172                 	// #370
  228178:	bl	240790 <log_assert_failed_realm@plt>

000000000022817c <manager_get_idle_hint>:
  22817c:	sub	sp, sp, #0x70
  228180:	stp	x29, x30, [sp, #48]
  228184:	stp	x24, x23, [sp, #64]
  228188:	stp	x22, x21, [sp, #80]
  22818c:	stp	x20, x19, [sp, #96]
  228190:	add	x29, sp, #0x30
  228194:	cbz	x0, 228278 <manager_get_idle_hint+0xfc>
  228198:	mov	x19, x1
  22819c:	mov	w1, #0x4                   	// #4
  2281a0:	mov	w2, wzr
  2281a4:	mov	x3, x19
  2281a8:	mov	w4, wzr
  2281ac:	mov	w5, wzr
  2281b0:	mov	w6, wzr
  2281b4:	mov	x7, xzr
  2281b8:	mov	x20, x0
  2281bc:	bl	233000 <manager_is_inhibited>
  2281c0:	mov	x23, xzr
  2281c4:	mov	x22, xzr
  2281c8:	eor	w21, w0, #0x1
  2281cc:	mov	w8, #0xfffffffe            	// #-2
  2281d0:	str	w8, [sp, #24]
  2281d4:	str	xzr, [sp, #32]
  2281d8:	b	2281f4 <manager_get_idle_hint+0x78>
  2281dc:	ldp	x22, x23, [sp, #8]
  2281e0:	mov	w21, wzr
  2281e4:	mov	w8, #0x1                   	// #1
  2281e8:	mov	w0, w24
  2281ec:	mov	w24, w0
  2281f0:	tbz	w8, #0, 228260 <manager_get_idle_hint+0xe4>
  2281f4:	ldr	x0, [x20, #32]
  2281f8:	add	x1, sp, #0x18
  2281fc:	sub	x2, x29, #0x8
  228200:	bl	228298 <hashmap_iterate>
  228204:	tbz	w0, #0, 228254 <manager_get_idle_hint+0xd8>
  228208:	ldur	x0, [x29, #-8]
  22820c:	add	x1, sp, #0x8
  228210:	bl	23bdd8 <session_get_idle_hint>
  228214:	tbnz	w0, #31, 228234 <manager_get_idle_hint+0xb8>
  228218:	cbz	w0, 22823c <manager_get_idle_hint+0xc0>
  22821c:	tbz	w21, #0, 2281e4 <manager_get_idle_hint+0x68>
  228220:	ldp	x9, x8, [sp, #8]
  228224:	cmp	x8, x23
  228228:	csel	x23, x8, x23, hi  // hi = pmore
  22822c:	csel	x22, x9, x22, hi  // hi = pmore
  228230:	b	2281e4 <manager_get_idle_hint+0x68>
  228234:	mov	w8, wzr
  228238:	b	2281ec <manager_get_idle_hint+0x70>
  22823c:	tbnz	w21, #0, 2281dc <manager_get_idle_hint+0x60>
  228240:	ldp	x9, x8, [sp, #8]
  228244:	cmp	x8, x23
  228248:	csel	x23, x8, x23, cc  // cc = lo, ul, last
  22824c:	csel	x22, x9, x22, cc  // cc = lo, ul, last
  228250:	b	2281e4 <manager_get_idle_hint+0x68>
  228254:	cbz	x19, 22825c <manager_get_idle_hint+0xe0>
  228258:	stp	x22, x23, [x19]
  22825c:	and	w0, w21, #0x1
  228260:	ldp	x20, x19, [sp, #96]
  228264:	ldp	x22, x21, [sp, #80]
  228268:	ldp	x24, x23, [sp, #64]
  22826c:	ldp	x29, x30, [sp, #48]
  228270:	add	sp, sp, #0x70
  228274:	ret
  228278:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22827c:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228280:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  228284:	add	x1, x1, #0x102
  228288:	add	x2, x2, #0x9c6
  22828c:	add	x4, x4, #0x20e
  228290:	mov	w3, #0x187                 	// #391
  228294:	bl	240790 <log_assert_failed_realm@plt>

0000000000228298 <hashmap_iterate>:
  228298:	stp	x29, x30, [sp, #-16]!
  22829c:	mov	x3, xzr
  2282a0:	mov	x29, sp
  2282a4:	bl	240b00 <internal_hashmap_iterate@plt>
  2282a8:	and	w0, w0, #0x1
  2282ac:	ldp	x29, x30, [sp], #16
  2282b0:	ret

00000000002282b4 <manager_shall_kill>:
  2282b4:	stp	x29, x30, [sp, #-48]!
  2282b8:	str	x21, [sp, #16]
  2282bc:	stp	x20, x19, [sp, #32]
  2282c0:	mov	x29, sp
  2282c4:	cbz	x0, 228348 <manager_shall_kill+0x94>
  2282c8:	mov	x19, x1
  2282cc:	cbz	x1, 228368 <manager_shall_kill+0xb4>
  2282d0:	ldr	x21, [x0, #184]
  2282d4:	mov	x20, x0
  2282d8:	cbnz	x21, 2282f0 <manager_shall_kill+0x3c>
  2282dc:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2282e0:	add	x1, x1, #0x68e
  2282e4:	mov	x0, x19
  2282e8:	bl	240c30 <strcmp@plt>
  2282ec:	cbz	w0, 228338 <manager_shall_kill+0x84>
  2282f0:	mov	x0, x21
  2282f4:	mov	x1, x19
  2282f8:	bl	240e30 <strv_find@plt>
  2282fc:	cbz	x0, 228308 <manager_shall_kill+0x54>
  228300:	mov	w0, wzr
  228304:	b	228338 <manager_shall_kill+0x84>
  228308:	ldr	x21, [x20, #176]
  22830c:	mov	x0, x21
  228310:	bl	22838c <strv_isempty>
  228314:	tbz	w0, #0, 228324 <manager_shall_kill+0x70>
  228318:	ldrb	w8, [x20, #192]
  22831c:	cmp	w8, #0x0
  228320:	b	228334 <manager_shall_kill+0x80>
  228324:	mov	x0, x21
  228328:	mov	x1, x19
  22832c:	bl	240e30 <strv_find@plt>
  228330:	cmp	x0, #0x0
  228334:	cset	w0, ne  // ne = any
  228338:	ldp	x20, x19, [sp, #32]
  22833c:	ldr	x21, [sp, #16]
  228340:	ldp	x29, x30, [sp], #48
  228344:	ret
  228348:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22834c:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228350:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  228354:	add	x1, x1, #0x102
  228358:	add	x2, x2, #0x9c6
  22835c:	add	x4, x4, #0x603
  228360:	mov	w3, #0x1a9                 	// #425
  228364:	bl	240790 <log_assert_failed_realm@plt>
  228368:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22836c:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228370:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  228374:	add	x1, x1, #0x689
  228378:	add	x2, x2, #0x9c6
  22837c:	add	x4, x4, #0x603
  228380:	mov	w3, #0x1aa                 	// #426
  228384:	mov	w0, wzr
  228388:	bl	240790 <log_assert_failed_realm@plt>

000000000022838c <strv_isempty>:
  22838c:	cbz	x0, 2283a0 <strv_isempty+0x14>
  228390:	ldr	x8, [x0]
  228394:	cmp	x8, #0x0
  228398:	cset	w0, eq  // eq = none
  22839c:	ret
  2283a0:	mov	w0, #0x1                   	// #1
  2283a4:	ret

00000000002283a8 <config_parse_n_autovts>:
  2283a8:	sub	sp, sp, #0x60
  2283ac:	stp	x29, x30, [sp, #32]
  2283b0:	stp	x24, x23, [sp, #48]
  2283b4:	stp	x22, x21, [sp, #64]
  2283b8:	stp	x20, x19, [sp, #80]
  2283bc:	add	x29, sp, #0x20
  2283c0:	cbz	x1, 2284ac <config_parse_n_autovts+0x104>
  2283c4:	cbz	x5, 2284d0 <config_parse_n_autovts+0x128>
  2283c8:	mov	x22, x7
  2283cc:	cbz	x7, 2284f4 <config_parse_n_autovts+0x14c>
  2283d0:	ldr	x24, [x29, #64]
  2283d4:	cbz	x24, 228518 <config_parse_n_autovts+0x170>
  2283d8:	mov	x20, x1
  2283dc:	mov	x21, x0
  2283e0:	sub	x1, x29, #0x4
  2283e4:	mov	x0, x22
  2283e8:	mov	w19, w2
  2283ec:	bl	22853c <safe_atou>
  2283f0:	mov	w23, w0
  2283f4:	tbnz	w0, #31, 22843c <config_parse_n_autovts+0x94>
  2283f8:	ldur	w8, [x29, #-4]
  2283fc:	cmp	w8, #0x10
  228400:	b.cc	22848c <config_parse_n_autovts+0xe4>  // b.lo, b.ul, b.last
  228404:	mov	w0, wzr
  228408:	bl	240750 <log_get_max_level_realm@plt>
  22840c:	cmp	w0, #0x3
  228410:	b.lt	228490 <config_parse_n_autovts+0xe8>  // b.tstop
  228414:	adrp	x8, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  228418:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22841c:	adrp	x7, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  228420:	add	x8, x8, #0x9a9
  228424:	add	x5, x5, #0x9c6
  228428:	add	x7, x7, #0xbbd
  22842c:	str	x22, [sp, #8]
  228430:	mov	w1, #0x3                   	// #3
  228434:	mov	w6, #0x1d4                 	// #468
  228438:	b	228470 <config_parse_n_autovts+0xc8>
  22843c:	mov	w0, wzr
  228440:	bl	240750 <log_get_max_level_realm@plt>
  228444:	cmp	w0, #0x3
  228448:	b.lt	228490 <config_parse_n_autovts+0xe8>  // b.tstop
  22844c:	adrp	x8, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  228450:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228454:	adrp	x7, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  228458:	add	x8, x8, #0xbd4
  22845c:	add	x5, x5, #0x9c6
  228460:	add	x7, x7, #0xbbd
  228464:	mov	w1, #0x3                   	// #3
  228468:	mov	w6, #0x1cf                 	// #463
  22846c:	str	x22, [sp, #8]
  228470:	mov	x0, x21
  228474:	mov	x2, x20
  228478:	mov	w3, w19
  22847c:	mov	w4, w23
  228480:	str	x8, [sp]
  228484:	bl	240ce0 <log_syntax_internal@plt>
  228488:	b	228490 <config_parse_n_autovts+0xe8>
  22848c:	str	w8, [x24]
  228490:	ldp	x20, x19, [sp, #80]
  228494:	ldp	x22, x21, [sp, #64]
  228498:	ldp	x24, x23, [sp, #48]
  22849c:	ldp	x29, x30, [sp, #32]
  2284a0:	mov	w0, wzr
  2284a4:	add	sp, sp, #0x60
  2284a8:	ret
  2284ac:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2284b0:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2284b4:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  2284b8:	add	x1, x1, #0xb7e
  2284bc:	add	x2, x2, #0x9c6
  2284c0:	add	x4, x4, #0xfc3
  2284c4:	mov	w3, #0x1c8                 	// #456
  2284c8:	mov	w0, wzr
  2284cc:	bl	240790 <log_assert_failed_realm@plt>
  2284d0:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2284d4:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2284d8:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  2284dc:	add	x1, x1, #0x94a
  2284e0:	add	x2, x2, #0x9c6
  2284e4:	add	x4, x4, #0xfc3
  2284e8:	mov	w3, #0x1c9                 	// #457
  2284ec:	mov	w0, wzr
  2284f0:	bl	240790 <log_assert_failed_realm@plt>
  2284f4:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  2284f8:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2284fc:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  228500:	add	x1, x1, #0x37a
  228504:	add	x2, x2, #0x9c6
  228508:	add	x4, x4, #0xfc3
  22850c:	mov	w3, #0x1ca                 	// #458
  228510:	mov	w0, wzr
  228514:	bl	240790 <log_assert_failed_realm@plt>
  228518:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22851c:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228520:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  228524:	add	x1, x1, #0xb87
  228528:	add	x2, x2, #0x9c6
  22852c:	add	x4, x4, #0xfc3
  228530:	mov	w3, #0x1cb                 	// #459
  228534:	mov	w0, wzr
  228538:	bl	240790 <log_assert_failed_realm@plt>

000000000022853c <safe_atou>:
  22853c:	stp	x29, x30, [sp, #-16]!
  228540:	mov	x2, x1
  228544:	mov	w1, wzr
  228548:	mov	x29, sp
  22854c:	bl	240c70 <safe_atou_full@plt>
  228550:	ldp	x29, x30, [sp], #16
  228554:	ret

0000000000228558 <manager_spawn_autovt>:
  228558:	sub	sp, sp, #0x80
  22855c:	stp	x29, x30, [sp, #80]
  228560:	add	x29, sp, #0x50
  228564:	str	x21, [sp, #96]
  228568:	stp	x20, x19, [sp, #112]
  22856c:	stp	xzr, xzr, [x29, #-24]
  228570:	stur	xzr, [x29, #-8]
  228574:	cbz	x0, 2286b4 <manager_spawn_autovt+0x15c>
  228578:	mov	w20, w1
  22857c:	cbz	w1, 2286d4 <manager_spawn_autovt+0x17c>
  228580:	ldr	w8, [x0, #156]
  228584:	mov	x19, x0
  228588:	cmp	w8, w20
  22858c:	b.cs	22859c <manager_spawn_autovt+0x44>  // b.hs, b.nlast
  228590:	ldr	w8, [x19, #160]
  228594:	cmp	w8, w20
  228598:	b.ne	22860c <manager_spawn_autovt+0xb4>  // b.any
  22859c:	ldr	w8, [x19, #160]
  2285a0:	cmp	w8, w20
  2285a4:	b.ne	228614 <manager_spawn_autovt+0xbc>  // b.any
  2285a8:	adrp	x2, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2285ac:	add	x2, x2, #0x693
  2285b0:	add	x0, sp, #0x18
  2285b4:	mov	w1, #0x1f                  	// #31
  2285b8:	mov	w3, w20
  2285bc:	add	x21, sp, #0x18
  2285c0:	bl	240e40 <snprintf@plt>
  2285c4:	ldr	x0, [x19, #8]
  2285c8:	adrp	x8, 208000 <inhibit_what_to_string.buffer+0x208000>
  2285cc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2285d0:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2285d4:	adrp	x3, 208000 <inhibit_what_to_string.buffer+0x208000>
  2285d8:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2285dc:	adrp	x7, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2285e0:	add	x8, x8, #0xac3
  2285e4:	add	x1, x1, #0x5eb
  2285e8:	add	x2, x2, #0xee7
  2285ec:	add	x3, x3, #0x2ef
  2285f0:	add	x4, x4, #0x24f
  2285f4:	add	x7, x7, #0xf7b
  2285f8:	sub	x5, x29, #0x18
  2285fc:	mov	x6, xzr
  228600:	stp	x21, x8, [sp]
  228604:	bl	240e50 <sd_bus_call_method@plt>
  228608:	tbnz	w0, #31, 228630 <manager_spawn_autovt+0xd8>
  22860c:	mov	w21, wzr
  228610:	b	228694 <manager_spawn_autovt+0x13c>
  228614:	mov	w0, w20
  228618:	bl	2286f8 <vt_is_busy>
  22861c:	mov	w21, w0
  228620:	tbnz	w0, #31, 228694 <manager_spawn_autovt+0x13c>
  228624:	cbz	w21, 2285a8 <manager_spawn_autovt+0x50>
  228628:	mov	w21, #0xfffffff0            	// #-16
  22862c:	b	228694 <manager_spawn_autovt+0x13c>
  228630:	mov	w19, w0
  228634:	mov	w0, wzr
  228638:	bl	240750 <log_get_max_level_realm@plt>
  22863c:	cmp	w0, #0x3
  228640:	b.lt	228688 <manager_spawn_autovt+0x130>  // b.tstop
  228644:	sub	x0, x29, #0x18
  228648:	mov	w1, w19
  22864c:	bl	240cc0 <bus_error_message@plt>
  228650:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228654:	adrp	x4, 206000 <inhibit_what_to_string.buffer+0x206000>
  228658:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22865c:	mov	x7, x0
  228660:	add	x2, x2, #0x9c6
  228664:	add	x4, x4, #0xe33
  228668:	add	x5, x5, #0x259
  22866c:	add	x6, sp, #0x18
  228670:	mov	w0, #0x3                   	// #3
  228674:	mov	w3, #0x21b                 	// #539
  228678:	mov	w1, w19
  22867c:	bl	240770 <log_internal_realm@plt>
  228680:	mov	w21, w0
  228684:	b	228694 <manager_spawn_autovt+0x13c>
  228688:	mov	w8, wzr
  22868c:	neg	w9, w19
  228690:	sub	w21, w8, w9, uxtb
  228694:	sub	x0, x29, #0x18
  228698:	bl	240c80 <sd_bus_error_free@plt>
  22869c:	mov	w0, w21
  2286a0:	ldp	x20, x19, [sp, #112]
  2286a4:	ldr	x21, [sp, #96]
  2286a8:	ldp	x29, x30, [sp, #80]
  2286ac:	add	sp, sp, #0x80
  2286b0:	ret
  2286b4:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2286b8:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2286bc:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2286c0:	add	x1, x1, #0x102
  2286c4:	add	x2, x2, #0x9c6
  2286c8:	add	x4, x4, #0x3ee
  2286cc:	mov	w3, #0x1fd                 	// #509
  2286d0:	bl	240790 <log_assert_failed_realm@plt>
  2286d4:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2286d8:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2286dc:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2286e0:	add	x1, x1, #0x245
  2286e4:	add	x2, x2, #0x9c6
  2286e8:	add	x4, x4, #0x3ee
  2286ec:	mov	w3, #0x1fe                 	// #510
  2286f0:	mov	w0, wzr
  2286f4:	bl	240790 <log_assert_failed_realm@plt>

00000000002286f8 <vt_is_busy>:
  2286f8:	sub	sp, sp, #0x30
  2286fc:	stp	x29, x30, [sp, #16]
  228700:	str	x19, [sp, #32]
  228704:	add	x29, sp, #0x10
  228708:	cbz	w0, 22877c <vt_is_busy+0x84>
  22870c:	mov	w19, w0
  228710:	cmp	w0, #0x10
  228714:	b.cs	22879c <vt_is_busy+0xa4>  // b.hs, b.nlast
  228718:	adrp	x0, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22871c:	mov	w1, #0x102                 	// #258
  228720:	add	x0, x0, #0x31b
  228724:	movk	w1, #0x8, lsl #16
  228728:	bl	240b50 <open_terminal@plt>
  22872c:	stur	w0, [x29, #-4]
  228730:	tbnz	w0, #31, 228754 <vt_is_busy+0x5c>
  228734:	add	x2, x29, #0x18
  228738:	mov	w1, #0x5603                	// #22019
  22873c:	bl	240d50 <ioctl@plt>
  228740:	tbnz	w0, #31, 228754 <vt_is_busy+0x5c>
  228744:	ldrh	w8, [x29, #28]
  228748:	lsr	w8, w8, w19
  22874c:	and	w19, w8, #0x1
  228750:	b	228760 <vt_is_busy+0x68>
  228754:	bl	240930 <__errno_location@plt>
  228758:	ldr	w8, [x0]
  22875c:	neg	w19, w8
  228760:	sub	x0, x29, #0x4
  228764:	bl	22910c <closep>
  228768:	mov	w0, w19
  22876c:	ldr	x19, [sp, #32]
  228770:	ldp	x29, x30, [sp, #16]
  228774:	add	sp, sp, #0x30
  228778:	ret
  22877c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  228780:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228784:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  228788:	add	x1, x1, #0x245
  22878c:	add	x2, x2, #0x9c6
  228790:	add	x4, x4, #0x9c
  228794:	mov	w3, #0x1e1                 	// #481
  228798:	bl	240790 <log_assert_failed_realm@plt>
  22879c:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  2287a0:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2287a4:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2287a8:	add	x1, x1, #0x381
  2287ac:	add	x2, x2, #0x9c6
  2287b0:	add	x4, x4, #0x9c
  2287b4:	mov	w3, #0x1e4                 	// #484
  2287b8:	mov	w0, wzr
  2287bc:	bl	240790 <log_assert_failed_realm@plt>

00000000002287c0 <manager_is_lid_closed>:
  2287c0:	sub	sp, sp, #0x30
  2287c4:	str	x19, [sp, #32]
  2287c8:	mov	x19, x0
  2287cc:	mov	w8, #0xfffffffe            	// #-2
  2287d0:	stp	x29, x30, [sp, #16]
  2287d4:	add	x29, sp, #0x10
  2287d8:	str	w8, [sp]
  2287dc:	str	xzr, [sp, #8]
  2287e0:	ldr	x0, [x19, #64]
  2287e4:	mov	x1, sp
  2287e8:	add	x2, x29, #0x18
  2287ec:	bl	228298 <hashmap_iterate>
  2287f0:	tbz	w0, #0, 228808 <manager_is_lid_closed+0x48>
  2287f4:	ldr	x8, [x29, #24]
  2287f8:	ldrb	w8, [x8, #44]
  2287fc:	cbz	w8, 2287e0 <manager_is_lid_closed+0x20>
  228800:	mov	w0, #0x1                   	// #1
  228804:	b	22880c <manager_is_lid_closed+0x4c>
  228808:	mov	w0, wzr
  22880c:	ldr	x19, [sp, #32]
  228810:	ldp	x29, x30, [sp, #16]
  228814:	add	sp, sp, #0x30
  228818:	ret

000000000022881c <manager_is_docked_or_external_displays>:
  22881c:	stp	x29, x30, [sp, #-32]!
  228820:	str	x19, [sp, #16]
  228824:	mov	x29, sp
  228828:	bl	22890c <manager_is_docked>
  22882c:	tbz	w0, #0, 22886c <manager_is_docked_or_external_displays+0x50>
  228830:	mov	w0, wzr
  228834:	bl	240750 <log_get_max_level_realm@plt>
  228838:	cmp	w0, #0x7
  22883c:	b.lt	2288b8 <manager_is_docked_or_external_displays+0x9c>  // b.tstop
  228840:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228844:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  228848:	adrp	x5, 210000 <inhibit_what_to_string.buffer+0x210000>
  22884c:	add	x2, x2, #0x9c6
  228850:	add	x4, x4, #0x746
  228854:	add	x5, x5, #0x598
  228858:	mov	w0, #0x7                   	// #7
  22885c:	mov	w3, #0x278                 	// #632
  228860:	mov	w1, wzr
  228864:	bl	240770 <log_internal_realm@plt>
  228868:	b	2288b8 <manager_is_docked_or_external_displays+0x9c>
  22886c:	bl	228968 <manager_count_external_displays>
  228870:	mov	w19, w0
  228874:	tbnz	w0, #31, 2288c8 <manager_is_docked_or_external_displays+0xac>
  228878:	mov	w0, wzr
  22887c:	cbz	w19, 2288bc <manager_is_docked_or_external_displays+0xa0>
  228880:	bl	240750 <log_get_max_level_realm@plt>
  228884:	cmp	w0, #0x7
  228888:	b.lt	2288b8 <manager_is_docked_or_external_displays+0x9c>  // b.tstop
  22888c:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228890:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  228894:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  228898:	add	x2, x2, #0x9c6
  22889c:	add	x4, x4, #0x746
  2288a0:	add	x5, x5, #0x9dd
  2288a4:	mov	w0, #0x7                   	// #7
  2288a8:	mov	w3, #0x282                 	// #642
  2288ac:	mov	w1, wzr
  2288b0:	mov	w6, w19
  2288b4:	bl	240770 <log_internal_realm@plt>
  2288b8:	mov	w0, #0x1                   	// #1
  2288bc:	ldr	x19, [sp, #16]
  2288c0:	ldp	x29, x30, [sp], #32
  2288c4:	ret
  2288c8:	mov	w0, wzr
  2288cc:	bl	240750 <log_get_max_level_realm@plt>
  2288d0:	cmp	w0, #0x4
  2288d4:	mov	w0, wzr
  2288d8:	b.lt	2288bc <manager_is_docked_or_external_displays+0xa0>  // b.tstop
  2288dc:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2288e0:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  2288e4:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  2288e8:	add	x2, x2, #0x9c6
  2288ec:	add	x4, x4, #0x746
  2288f0:	add	x5, x5, #0xf57
  2288f4:	mov	w0, #0x4                   	// #4
  2288f8:	mov	w3, #0x280                 	// #640
  2288fc:	mov	w1, w19
  228900:	bl	240770 <log_internal_realm@plt>
  228904:	mov	w0, wzr
  228908:	b	2288bc <manager_is_docked_or_external_displays+0xa0>

000000000022890c <manager_is_docked>:
  22890c:	sub	sp, sp, #0x30
  228910:	str	x19, [sp, #32]
  228914:	mov	x19, x0
  228918:	mov	w8, #0xfffffffe            	// #-2
  22891c:	stp	x29, x30, [sp, #16]
  228920:	add	x29, sp, #0x10
  228924:	str	w8, [sp]
  228928:	str	xzr, [sp, #8]
  22892c:	ldr	x0, [x19, #64]
  228930:	mov	x1, sp
  228934:	add	x2, x29, #0x18
  228938:	bl	228298 <hashmap_iterate>
  22893c:	tbz	w0, #0, 228954 <manager_is_docked+0x48>
  228940:	ldr	x8, [x29, #24]
  228944:	ldrb	w8, [x8, #45]
  228948:	cbz	w8, 22892c <manager_is_docked+0x20>
  22894c:	mov	w0, #0x1                   	// #1
  228950:	b	228958 <manager_is_docked+0x4c>
  228954:	mov	w0, wzr
  228958:	ldr	x19, [sp, #32]
  22895c:	ldp	x29, x30, [sp, #16]
  228960:	add	sp, sp, #0x30
  228964:	ret

0000000000228968 <manager_count_external_displays>:
  228968:	sub	sp, sp, #0xf0
  22896c:	stp	x29, x30, [sp, #144]
  228970:	add	x29, sp, #0x90
  228974:	sub	x0, x29, #0x8
  228978:	stp	x28, x27, [sp, #160]
  22897c:	stp	x26, x25, [sp, #176]
  228980:	stp	x24, x23, [sp, #192]
  228984:	stp	x22, x21, [sp, #208]
  228988:	stp	x20, x19, [sp, #224]
  22898c:	stur	xzr, [x29, #-8]
  228990:	bl	240a30 <sd_device_enumerator_new@plt>
  228994:	tbnz	w0, #31, 228a04 <manager_count_external_displays+0x9c>
  228998:	ldur	x0, [x29, #-8]
  22899c:	bl	240e60 <sd_device_enumerator_allow_uninitialized@plt>
  2289a0:	tbnz	w0, #31, 228a04 <manager_count_external_displays+0x9c>
  2289a4:	ldur	x0, [x29, #-8]
  2289a8:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2289ac:	add	x1, x1, #0x55d
  2289b0:	mov	w2, #0x1                   	// #1
  2289b4:	bl	240ad0 <sd_device_enumerator_add_match_subsystem@plt>
  2289b8:	tbnz	w0, #31, 228a04 <manager_count_external_displays+0x9c>
  2289bc:	ldur	x0, [x29, #-8]
  2289c0:	bl	240a50 <sd_device_enumerator_get_device_first@plt>
  2289c4:	cbz	x0, 228a34 <manager_count_external_displays+0xcc>
  2289c8:	mov	x8, sp
  2289cc:	adrp	x20, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2289d0:	adrp	x26, 251000 <__lxstat64@plt+0xf580>
  2289d4:	adrp	x21, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2289d8:	adrp	x22, 206000 <inhibit_what_to_string.buffer+0x206000>
  2289dc:	adrp	x23, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2289e0:	mov	x24, x0
  2289e4:	mov	w19, wzr
  2289e8:	add	x20, x20, #0x55d
  2289ec:	add	x26, x26, #0xba0
  2289f0:	add	x21, x21, #0xc0f
  2289f4:	add	x22, x22, #0xe65
  2289f8:	add	x27, x8, #0x8
  2289fc:	add	x23, x23, #0xc20
  228a00:	b	228a50 <manager_count_external_displays+0xe8>
  228a04:	mov	w19, w0
  228a08:	sub	x0, x29, #0x8
  228a0c:	bl	229124 <sd_device_enumerator_unrefp>
  228a10:	mov	w0, w19
  228a14:	ldp	x20, x19, [sp, #224]
  228a18:	ldp	x22, x21, [sp, #208]
  228a1c:	ldp	x24, x23, [sp, #192]
  228a20:	ldp	x26, x25, [sp, #176]
  228a24:	ldp	x28, x27, [sp, #160]
  228a28:	ldp	x29, x30, [sp, #144]
  228a2c:	add	sp, sp, #0xf0
  228a30:	ret
  228a34:	mov	w19, wzr
  228a38:	b	228a08 <manager_count_external_displays+0xa0>
  228a3c:	add	w19, w19, #0x1
  228a40:	ldur	x0, [x29, #-8]
  228a44:	bl	240a60 <sd_device_enumerator_get_device_next@plt>
  228a48:	mov	x24, x0
  228a4c:	cbz	x0, 228a08 <manager_count_external_displays+0xa0>
  228a50:	sub	x1, x29, #0x30
  228a54:	mov	x0, x24
  228a58:	bl	240e70 <sd_device_get_parent@plt>
  228a5c:	tbnz	w0, #31, 228a40 <manager_count_external_displays+0xd8>
  228a60:	ldur	x0, [x29, #-48]
  228a64:	sub	x1, x29, #0x28
  228a68:	bl	240e80 <sd_device_get_subsystem@plt>
  228a6c:	tbnz	w0, #31, 228a40 <manager_count_external_displays+0xd8>
  228a70:	ldur	x0, [x29, #-40]
  228a74:	mov	x1, x20
  228a78:	bl	240c30 <strcmp@plt>
  228a7c:	cbnz	w0, 228a40 <manager_count_external_displays+0xd8>
  228a80:	sub	x1, x29, #0x20
  228a84:	mov	x0, x24
  228a88:	bl	240b70 <sd_device_get_sysname@plt>
  228a8c:	tbnz	w0, #31, 228a40 <manager_count_external_displays+0xd8>
  228a90:	ldur	x0, [x29, #-32]
  228a94:	mov	w1, #0x2d                  	// #45
  228a98:	bl	240e90 <strchr@plt>
  228a9c:	cbz	x0, 228a40 <manager_count_external_displays+0xd8>
  228aa0:	ldp	q0, q5, [x26]
  228aa4:	ldp	q1, q2, [x26, #32]
  228aa8:	ldp	q3, q4, [x26, #64]
  228aac:	stp	q0, q5, [sp]
  228ab0:	ldr	x1, [sp]
  228ab4:	stp	q1, q2, [sp, #32]
  228ab8:	stp	q3, q4, [sp, #64]
  228abc:	cbz	x1, 228adc <manager_count_external_displays+0x174>
  228ac0:	add	x25, x0, #0x1
  228ac4:	mov	x28, x27
  228ac8:	mov	x0, x25
  228acc:	bl	229140 <startswith>
  228ad0:	cbnz	x0, 228ae0 <manager_count_external_displays+0x178>
  228ad4:	ldr	x1, [x28], #8
  228ad8:	cbnz	x1, 228ac8 <manager_count_external_displays+0x160>
  228adc:	mov	x0, xzr
  228ae0:	cbz	x0, 228a40 <manager_count_external_displays+0xd8>
  228ae4:	sub	x2, x29, #0x18
  228ae8:	mov	x0, x24
  228aec:	mov	x1, x21
  228af0:	bl	240ea0 <sd_device_get_sysattr_value@plt>
  228af4:	tbnz	w0, #31, 228a40 <manager_count_external_displays+0xd8>
  228af8:	ldur	x0, [x29, #-24]
  228afc:	mov	x1, x21
  228b00:	bl	240c30 <strcmp@plt>
  228b04:	cbnz	w0, 228a40 <manager_count_external_displays+0xd8>
  228b08:	sub	x2, x29, #0x10
  228b0c:	mov	x0, x24
  228b10:	mov	x1, x22
  228b14:	bl	240ea0 <sd_device_get_sysattr_value@plt>
  228b18:	tbnz	w0, #31, 228a3c <manager_count_external_displays+0xd4>
  228b1c:	ldur	x0, [x29, #-16]
  228b20:	mov	x1, x23
  228b24:	bl	240c30 <strcmp@plt>
  228b28:	cbnz	w0, 228a3c <manager_count_external_displays+0xd4>
  228b2c:	b	228a40 <manager_count_external_displays+0xd8>

0000000000228b30 <manager_is_on_external_power>:
  228b30:	stp	x29, x30, [sp, #-32]!
  228b34:	str	x19, [sp, #16]
  228b38:	mov	x29, sp
  228b3c:	bl	240eb0 <on_ac_power@plt>
  228b40:	mov	w19, w0
  228b44:	tbz	w0, #31, 228b80 <manager_is_on_external_power+0x50>
  228b48:	mov	w0, wzr
  228b4c:	bl	240750 <log_get_max_level_realm@plt>
  228b50:	cmp	w0, #0x4
  228b54:	b.lt	228b80 <manager_is_on_external_power+0x50>  // b.tstop
  228b58:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228b5c:	adrp	x4, 206000 <inhibit_what_to_string.buffer+0x206000>
  228b60:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  228b64:	add	x2, x2, #0x9c6
  228b68:	add	x4, x4, #0xe48
  228b6c:	add	x5, x5, #0x2be
  228b70:	mov	w0, #0x4                   	// #4
  228b74:	mov	w3, #0x290                 	// #656
  228b78:	mov	w1, w19
  228b7c:	bl	240770 <log_internal_realm@plt>
  228b80:	cmp	w19, #0x0
  228b84:	ldr	x19, [sp, #16]
  228b88:	cset	w0, ne  // ne = any
  228b8c:	ldp	x29, x30, [sp], #32
  228b90:	ret

0000000000228b94 <manager_all_buttons_ignored>:
  228b94:	stp	x29, x30, [sp, #-16]!
  228b98:	mov	x29, sp
  228b9c:	cbz	x0, 228bf0 <manager_all_buttons_ignored+0x5c>
  228ba0:	ldr	w8, [x0, #396]
  228ba4:	cbnz	w8, 228bc0 <manager_all_buttons_ignored+0x2c>
  228ba8:	ldr	w8, [x0, #400]
  228bac:	cbnz	w8, 228bc0 <manager_all_buttons_ignored+0x2c>
  228bb0:	ldr	w8, [x0, #404]
  228bb4:	cbnz	w8, 228bc0 <manager_all_buttons_ignored+0x2c>
  228bb8:	ldr	w8, [x0, #408]
  228bbc:	cbz	w8, 228bcc <manager_all_buttons_ignored+0x38>
  228bc0:	mov	w0, wzr
  228bc4:	ldp	x29, x30, [sp], #16
  228bc8:	ret
  228bcc:	ldr	w8, [x0, #412]
  228bd0:	add	w8, w8, #0x1
  228bd4:	cmp	w8, #0x1
  228bd8:	b.hi	228bc0 <manager_all_buttons_ignored+0x2c>  // b.pmore
  228bdc:	ldr	w8, [x0, #416]
  228be0:	cmp	w8, #0x0
  228be4:	cset	w0, eq  // eq = none
  228be8:	ldp	x29, x30, [sp], #16
  228bec:	ret
  228bf0:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  228bf4:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228bf8:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  228bfc:	add	x1, x1, #0x102
  228c00:	add	x2, x2, #0x9c6
  228c04:	add	x4, x4, #0x635
  228c08:	mov	w3, #0x296                 	// #662
  228c0c:	bl	240790 <log_assert_failed_realm@plt>

0000000000228c10 <manager_read_utmp>:
  228c10:	sub	sp, sp, #0x70
  228c14:	stp	x29, x30, [sp, #16]
  228c18:	stp	x28, x27, [sp, #32]
  228c1c:	stp	x26, x25, [sp, #48]
  228c20:	stp	x24, x23, [sp, #64]
  228c24:	stp	x22, x21, [sp, #80]
  228c28:	stp	x20, x19, [sp, #96]
  228c2c:	add	x29, sp, #0x10
  228c30:	cbz	x0, 228edc <manager_read_utmp+0x2cc>
  228c34:	mov	x19, x0
  228c38:	adrp	x0, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228c3c:	add	x0, x0, #0x9f7
  228c40:	bl	240ec0 <utmpxname@plt>
  228c44:	tbnz	w0, #31, 228e60 <manager_read_utmp+0x250>
  228c48:	bl	240ed0 <setutxent@plt>
  228c4c:	bl	240930 <__errno_location@plt>
  228c50:	adrp	x21, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228c54:	adrp	x22, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  228c58:	adrp	x23, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  228c5c:	adrp	x24, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  228c60:	mov	x20, x0
  228c64:	add	x21, x21, #0x9c6
  228c68:	add	x22, x22, #0x85
  228c6c:	add	x23, x23, #0xbe0
  228c70:	add	x24, x24, #0x696
  228c74:	b	228c88 <manager_read_utmp+0x78>
  228c78:	mov	w25, wzr
  228c7c:	add	x0, sp, #0x8
  228c80:	bl	2280a4 <freep>
  228c84:	cbnz	w25, 228e58 <manager_read_utmp+0x248>
  228c88:	str	xzr, [sp, #8]
  228c8c:	str	wzr, [x20]
  228c90:	bl	240ee0 <getutxent@plt>
  228c94:	cbz	x0, 228d94 <manager_read_utmp+0x184>
  228c98:	ldrh	w8, [x0]
  228c9c:	mov	x28, x0
  228ca0:	cmp	w8, #0x7
  228ca4:	b.ne	228c78 <manager_read_utmp+0x68>  // b.any
  228ca8:	ldr	w0, [x28, #4]
  228cac:	bl	2280bc <pid_is_valid>
  228cb0:	tbz	w0, #0, 228c78 <manager_read_utmp+0x68>
  228cb4:	add	x0, x28, #0x8
  228cb8:	mov	w1, #0x20                  	// #32
  228cbc:	bl	240ef0 <strndup@plt>
  228cc0:	str	x0, [sp, #8]
  228cc4:	cbz	x0, 228dd4 <manager_read_utmp+0x1c4>
  228cc8:	mov	x1, x24
  228ccc:	bl	240f00 <path_startswith@plt>
  228cd0:	cbz	x0, 228ce8 <manager_read_utmp+0xd8>
  228cd4:	mov	x1, x0
  228cd8:	add	x0, sp, #0x8
  228cdc:	bl	240f10 <free_and_strdup@plt>
  228ce0:	mov	w27, w0
  228ce4:	tbnz	w0, #31, 228df0 <manager_read_utmp+0x1e0>
  228ce8:	ldr	x0, [sp, #8]
  228cec:	bl	227ed0 <isempty>
  228cf0:	tbnz	w0, #0, 228c78 <manager_read_utmp+0x68>
  228cf4:	ldr	w0, [x28, #4]
  228cf8:	ldr	x25, [x19, #40]
  228cfc:	bl	2280c8 <PID_TO_PTR>
  228d00:	mov	x1, x0
  228d04:	mov	x0, x25
  228d08:	bl	22779c <hashmap_get>
  228d0c:	cbz	x0, 228c78 <manager_read_utmp+0x68>
  228d10:	ldr	w26, [x0, #80]
  228d14:	mov	x28, x0
  228d18:	cmp	w26, #0x1
  228d1c:	b.ne	228d34 <manager_read_utmp+0x124>  // b.any
  228d20:	ldr	x25, [x28, #72]
  228d24:	ldr	x1, [sp, #8]
  228d28:	mov	x0, x25
  228d2c:	bl	228efc <streq_ptr>
  228d30:	tbz	w0, #0, 228e0c <manager_read_utmp+0x1fc>
  228d34:	mov	w25, wzr
  228d38:	tbz	w26, #31, 228c7c <manager_read_utmp+0x6c>
  228d3c:	ldr	x8, [x28, #72]
  228d40:	cbnz	x8, 228c7c <manager_read_utmp+0x6c>
  228d44:	ldr	x8, [sp, #8]
  228d48:	mov	w9, #0x1                   	// #1
  228d4c:	mov	w0, wzr
  228d50:	str	xzr, [sp, #8]
  228d54:	str	w9, [x28, #80]
  228d58:	str	x8, [x28, #72]
  228d5c:	bl	240750 <log_get_max_level_realm@plt>
  228d60:	cmp	w0, #0x7
  228d64:	b.lt	228c78 <manager_read_utmp+0x68>  // b.tstop
  228d68:	ldr	x6, [x28, #72]
  228d6c:	ldr	x7, [x28, #8]
  228d70:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  228d74:	mov	w0, #0x7                   	// #7
  228d78:	mov	w3, #0x2ef                 	// #751
  228d7c:	mov	w1, wzr
  228d80:	mov	x2, x21
  228d84:	mov	x4, x22
  228d88:	add	x5, x5, #0x122
  228d8c:	bl	240770 <log_internal_realm@plt>
  228d90:	b	228c78 <manager_read_utmp+0x68>
  228d94:	ldr	w27, [x20]
  228d98:	cbz	w27, 228dcc <manager_read_utmp+0x1bc>
  228d9c:	mov	w0, wzr
  228da0:	bl	240750 <log_get_max_level_realm@plt>
  228da4:	cmp	w0, #0x4
  228da8:	b.lt	228dc8 <manager_read_utmp+0x1b8>  // b.tstop
  228dac:	mov	w0, #0x4                   	// #4
  228db0:	mov	w3, #0x2bd                 	// #701
  228db4:	mov	w1, w27
  228db8:	mov	x2, x21
  228dbc:	mov	x4, x22
  228dc0:	mov	x5, x23
  228dc4:	bl	240770 <log_internal_realm@plt>
  228dc8:	mov	w27, wzr
  228dcc:	mov	w25, #0x1                   	// #1
  228dd0:	b	228c7c <manager_read_utmp+0x6c>
  228dd4:	mov	w2, #0x2ca                 	// #714
  228dd8:	mov	x1, x21
  228ddc:	mov	x3, x22
  228de0:	bl	240af0 <log_oom_internal@plt>
  228de4:	mov	w27, w0
  228de8:	mov	w25, #0x1                   	// #1
  228dec:	b	228c7c <manager_read_utmp+0x6c>
  228df0:	mov	w2, #0x2d2                 	// #722
  228df4:	mov	w0, wzr
  228df8:	mov	x1, x21
  228dfc:	mov	x3, x22
  228e00:	bl	240af0 <log_oom_internal@plt>
  228e04:	mov	w25, #0x1                   	// #1
  228e08:	b	228c7c <manager_read_utmp+0x6c>
  228e0c:	mov	x0, x25
  228e10:	bl	228f18 <mfree>
  228e14:	mov	w8, #0x2                   	// #2
  228e18:	mov	w0, wzr
  228e1c:	str	xzr, [x28, #72]
  228e20:	str	w8, [x28, #80]
  228e24:	bl	240750 <log_get_max_level_realm@plt>
  228e28:	cmp	w0, #0x7
  228e2c:	b.lt	228c78 <manager_read_utmp+0x68>  // b.tstop
  228e30:	ldr	x6, [x28, #8]
  228e34:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  228e38:	mov	w0, #0x7                   	// #7
  228e3c:	mov	w3, #0x2e5                 	// #741
  228e40:	mov	w1, wzr
  228e44:	mov	x2, x21
  228e48:	mov	x4, x22
  228e4c:	add	x5, x5, #0xa82
  228e50:	bl	240770 <log_internal_realm@plt>
  228e54:	b	228c78 <manager_read_utmp+0x68>
  228e58:	bl	240f20 <endutxent@plt>
  228e5c:	b	228eb8 <manager_read_utmp+0x2a8>
  228e60:	bl	240930 <__errno_location@plt>
  228e64:	ldr	w19, [x0]
  228e68:	mov	w0, wzr
  228e6c:	bl	240750 <log_get_max_level_realm@plt>
  228e70:	cmp	w0, #0x3
  228e74:	b.lt	228ea8 <manager_read_utmp+0x298>  // b.tstop
  228e78:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228e7c:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  228e80:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  228e84:	add	x2, x2, #0x9c6
  228e88:	add	x4, x4, #0x85
  228e8c:	add	x5, x5, #0x428
  228e90:	mov	w0, #0x3                   	// #3
  228e94:	mov	w3, #0x2af                 	// #687
  228e98:	mov	w1, w19
  228e9c:	bl	240770 <log_internal_realm@plt>
  228ea0:	mov	w27, w0
  228ea4:	b	228eb8 <manager_read_utmp+0x2a8>
  228ea8:	cmp	w19, #0x0
  228eac:	mov	w8, wzr
  228eb0:	cneg	w9, w19, mi  // mi = first
  228eb4:	sub	w27, w8, w9, uxtb
  228eb8:	mov	w0, w27
  228ebc:	ldp	x20, x19, [sp, #96]
  228ec0:	ldp	x22, x21, [sp, #80]
  228ec4:	ldp	x24, x23, [sp, #64]
  228ec8:	ldp	x26, x25, [sp, #48]
  228ecc:	ldp	x28, x27, [sp, #32]
  228ed0:	ldp	x29, x30, [sp, #16]
  228ed4:	add	sp, sp, #0x70
  228ed8:	ret
  228edc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  228ee0:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228ee4:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  228ee8:	add	x1, x1, #0x102
  228eec:	add	x2, x2, #0x9c6
  228ef0:	add	x4, x4, #0xa6e
  228ef4:	mov	w3, #0x2ac                 	// #684
  228ef8:	bl	240790 <log_assert_failed_realm@plt>

0000000000228efc <streq_ptr>:
  228efc:	stp	x29, x30, [sp, #-16]!
  228f00:	mov	x29, sp
  228f04:	bl	240f30 <strcmp_ptr@plt>
  228f08:	cmp	w0, #0x0
  228f0c:	cset	w0, eq  // eq = none
  228f10:	ldp	x29, x30, [sp], #16
  228f14:	ret

0000000000228f18 <mfree>:
  228f18:	stp	x29, x30, [sp, #-16]!
  228f1c:	mov	x29, sp
  228f20:	bl	240890 <free@plt>
  228f24:	ldp	x29, x30, [sp], #16
  228f28:	ret

0000000000228f2c <manager_connect_utmp>:
  228f2c:	stp	x29, x30, [sp, #-48]!
  228f30:	mov	x29, sp
  228f34:	str	x21, [sp, #16]
  228f38:	stp	x20, x19, [sp, #32]
  228f3c:	str	xzr, [x29, #24]
  228f40:	cbz	x0, 22903c <manager_connect_utmp+0x110>
  228f44:	mov	x19, x0
  228f48:	ldr	x0, [x0]
  228f4c:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228f50:	adrp	x4, 229000 <manager_connect_utmp+0xd4>
  228f54:	add	x2, x2, #0x9f7
  228f58:	add	x4, x4, #0x5c
  228f5c:	add	x1, x29, #0x18
  228f60:	mov	w3, #0xc06                 	// #3078
  228f64:	mov	x5, x19
  228f68:	bl	240f40 <sd_event_add_inotify@plt>
  228f6c:	tbnz	w0, #31, 228fd0 <manager_connect_utmp+0xa4>
  228f70:	ldr	x0, [x29, #24]
  228f74:	mov	w1, #0x64                  	// #100
  228f78:	bl	240b40 <sd_event_source_set_priority@plt>
  228f7c:	tbz	w0, #31, 228fbc <manager_connect_utmp+0x90>
  228f80:	mov	w20, w0
  228f84:	mov	w0, wzr
  228f88:	bl	240750 <log_get_max_level_realm@plt>
  228f8c:	cmp	w0, #0x4
  228f90:	b.lt	228fbc <manager_connect_utmp+0x90>  // b.tstop
  228f94:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228f98:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  228f9c:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  228fa0:	add	x2, x2, #0x9c6
  228fa4:	add	x4, x4, #0xc0b
  228fa8:	add	x5, x5, #0x2e1
  228fac:	mov	w0, #0x4                   	// #4
  228fb0:	mov	w3, #0x31e                 	// #798
  228fb4:	mov	w1, w20
  228fb8:	bl	240770 <log_internal_realm@plt>
  228fbc:	ldr	x0, [x29, #24]
  228fc0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  228fc4:	add	x1, x1, #0x97
  228fc8:	bl	240990 <sd_event_source_set_description@plt>
  228fcc:	b	22901c <manager_connect_utmp+0xf0>
  228fd0:	mov	w20, w0
  228fd4:	cmn	w0, #0x2
  228fd8:	mov	w8, #0x4                   	// #4
  228fdc:	mov	w9, #0x7                   	// #7
  228fe0:	mov	w0, wzr
  228fe4:	csel	w21, w9, w8, eq  // eq = none
  228fe8:	bl	240750 <log_get_max_level_realm@plt>
  228fec:	cmp	w0, w21
  228ff0:	b.lt	22901c <manager_connect_utmp+0xf0>  // b.tstop
  228ff4:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  228ff8:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  228ffc:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  229000:	add	x2, x2, #0x9c6
  229004:	add	x4, x4, #0xc0b
  229008:	add	x5, x5, #0xcef
  22900c:	mov	w3, #0x31a                 	// #794
  229010:	mov	w0, w21
  229014:	mov	w1, w20
  229018:	bl	240770 <log_internal_realm@plt>
  22901c:	ldr	x0, [x19, #144]
  229020:	bl	240810 <sd_event_source_unref@plt>
  229024:	ldr	x8, [x29, #24]
  229028:	ldr	x21, [sp, #16]
  22902c:	str	x8, [x19, #144]
  229030:	ldp	x20, x19, [sp, #32]
  229034:	ldp	x29, x30, [sp], #48
  229038:	ret
  22903c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  229040:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  229044:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  229048:	add	x1, x1, #0x102
  22904c:	add	x2, x2, #0x9c6
  229050:	add	x4, x4, #0xa8f
  229054:	mov	w3, #0x30e                 	// #782
  229058:	bl	240790 <log_assert_failed_realm@plt>

000000000022905c <manager_dispatch_utmp>:
  22905c:	stp	x29, x30, [sp, #-32]!
  229060:	str	x19, [sp, #16]
  229064:	mov	x29, sp
  229068:	cbz	x2, 2290a0 <manager_dispatch_utmp+0x44>
  22906c:	ldrh	w8, [x1, #4]
  229070:	mov	w9, #0x6c04                	// #27652
  229074:	mov	x19, x2
  229078:	tst	w8, w9
  22907c:	b.eq	229088 <manager_dispatch_utmp+0x2c>  // b.none
  229080:	mov	x0, x19
  229084:	bl	228f2c <manager_connect_utmp>
  229088:	mov	x0, x19
  22908c:	bl	228c10 <manager_read_utmp>
  229090:	ldr	x19, [sp, #16]
  229094:	mov	w0, wzr
  229098:	ldp	x29, x30, [sp], #32
  22909c:	ret
  2290a0:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2290a4:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2290a8:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  2290ac:	add	x1, x1, #0x102
  2290b0:	add	x2, x2, #0x9c6
  2290b4:	add	x4, x4, #0x38c
  2290b8:	mov	w3, #0x2fd                 	// #765
  2290bc:	mov	w0, wzr
  2290c0:	bl	240790 <log_assert_failed_realm@plt>

00000000002290c4 <manager_reconnect_utmp>:
  2290c4:	stp	x29, x30, [sp, #-16]!
  2290c8:	mov	x29, sp
  2290cc:	cbz	x0, 2290ec <manager_reconnect_utmp+0x28>
  2290d0:	ldr	x8, [x0, #144]
  2290d4:	cbz	x8, 2290e0 <manager_reconnect_utmp+0x1c>
  2290d8:	ldp	x29, x30, [sp], #16
  2290dc:	ret
  2290e0:	bl	228f2c <manager_connect_utmp>
  2290e4:	ldp	x29, x30, [sp], #16
  2290e8:	ret
  2290ec:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2290f0:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2290f4:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2290f8:	add	x1, x1, #0x102
  2290fc:	add	x2, x2, #0x9c6
  229100:	add	x4, x4, #0xa05
  229104:	mov	w3, #0x32a                 	// #810
  229108:	bl	240790 <log_assert_failed_realm@plt>

000000000022910c <closep>:
  22910c:	stp	x29, x30, [sp, #-16]!
  229110:	ldr	w0, [x0]
  229114:	mov	x29, sp
  229118:	bl	240820 <safe_close@plt>
  22911c:	ldp	x29, x30, [sp], #16
  229120:	ret

0000000000229124 <sd_device_enumerator_unrefp>:
  229124:	stp	x29, x30, [sp, #-16]!
  229128:	ldr	x0, [x0]
  22912c:	mov	x29, sp
  229130:	cbz	x0, 229138 <sd_device_enumerator_unrefp+0x14>
  229134:	bl	240ba0 <sd_device_enumerator_unref@plt>
  229138:	ldp	x29, x30, [sp], #16
  22913c:	ret

0000000000229140 <startswith>:
  229140:	stp	x29, x30, [sp, #-48]!
  229144:	stp	x20, x19, [sp, #32]
  229148:	mov	x20, x0
  22914c:	mov	x0, x1
  229150:	str	x21, [sp, #16]
  229154:	mov	x29, sp
  229158:	mov	x19, x1
  22915c:	bl	240d30 <strlen@plt>
  229160:	mov	x21, x0
  229164:	mov	x0, x20
  229168:	mov	x1, x19
  22916c:	mov	x2, x21
  229170:	bl	240b90 <strncmp@plt>
  229174:	add	x8, x20, x21
  229178:	ldp	x20, x19, [sp, #32]
  22917c:	ldr	x21, [sp, #16]
  229180:	cmp	w0, #0x0
  229184:	csel	x0, x8, xzr, eq  // eq = none
  229188:	ldp	x29, x30, [sp], #48
  22918c:	ret

0000000000229190 <logind_gperf_lookup>:
  229190:	stp	x29, x30, [sp, #-32]!
  229194:	sub	x8, x1, #0xe
  229198:	cmp	x8, #0x14
  22919c:	stp	x20, x19, [sp, #16]
  2291a0:	mov	x29, sp
  2291a4:	b.hi	229200 <logind_gperf_lookup+0x70>  // b.pmore
  2291a8:	mov	x20, x0
  2291ac:	bl	229220 <logind_gperf_hash>
  2291b0:	cmp	w0, #0x31
  2291b4:	b.hi	2291f8 <logind_gperf_lookup+0x68>  // b.pmore
  2291b8:	adrp	x9, 251000 <__lxstat64@plt+0xf580>
  2291bc:	mov	w8, w0
  2291c0:	add	x9, x9, #0xc00
  2291c4:	add	x19, x9, x8, lsl #5
  2291c8:	ldr	x8, [x19]
  2291cc:	cbz	x8, 2291f0 <logind_gperf_lookup+0x60>
  2291d0:	ldrb	w9, [x20]
  2291d4:	ldrb	w10, [x8]
  2291d8:	cmp	w9, w10
  2291dc:	b.ne	2291f0 <logind_gperf_lookup+0x60>  // b.any
  2291e0:	add	x0, x20, #0x1
  2291e4:	add	x1, x8, #0x1
  2291e8:	bl	240c30 <strcmp@plt>
  2291ec:	cbz	w0, 229214 <logind_gperf_lookup+0x84>
  2291f0:	mov	w8, wzr
  2291f4:	cbnz	w8, 2291fc <logind_gperf_lookup+0x6c>
  2291f8:	mov	w8, wzr
  2291fc:	cbnz	w8, 229204 <logind_gperf_lookup+0x74>
  229200:	mov	x19, xzr
  229204:	mov	x0, x19
  229208:	ldp	x20, x19, [sp, #16]
  22920c:	ldp	x29, x30, [sp], #32
  229210:	ret
  229214:	mov	w8, #0x1                   	// #1
  229218:	cbnz	w8, 2291fc <logind_gperf_lookup+0x6c>
  22921c:	b	2291f8 <logind_gperf_lookup+0x68>

0000000000229220 <logind_gperf_hash>:
  229220:	ldrb	w8, [x0, #9]
  229224:	adrp	x9, 212000 <inhibit_what_to_string.buffer+0x212000>
  229228:	add	x9, x9, #0x4ec
  22922c:	ldrb	w8, [x9, x8]
  229230:	add	w0, w8, w1
  229234:	ret

0000000000229238 <manager_get_session_from_creds>:
  229238:	stp	x29, x30, [sp, #-64]!
  22923c:	str	x23, [sp, #16]
  229240:	stp	x22, x21, [sp, #32]
  229244:	stp	x20, x19, [sp, #48]
  229248:	mov	x29, sp
  22924c:	cbz	x0, 2292fc <manager_get_session_from_creds+0xc4>
  229250:	mov	x19, x4
  229254:	cbz	x4, 22931c <manager_get_session_from_creds+0xe4>
  229258:	mov	x23, x0
  22925c:	mov	x0, x2
  229260:	mov	x20, x3
  229264:	mov	x21, x2
  229268:	mov	x22, x1
  22926c:	bl	229340 <SEAT_IS_SELF>
  229270:	tbz	w0, #0, 229284 <manager_get_session_from_creds+0x4c>
  229274:	mov	x0, x23
  229278:	mov	x1, x22
  22927c:	mov	w2, wzr
  229280:	b	22929c <manager_get_session_from_creds+0x64>
  229284:	mov	x0, x21
  229288:	bl	2294c0 <SEAT_IS_AUTO>
  22928c:	tbz	w0, #0, 2292bc <manager_get_session_from_creds+0x84>
  229290:	mov	w2, #0x1                   	// #1
  229294:	mov	x0, x23
  229298:	mov	x1, x22
  22929c:	mov	x3, x20
  2292a0:	mov	x4, x19
  2292a4:	bl	229384 <get_sender_session>
  2292a8:	ldp	x20, x19, [sp, #48]
  2292ac:	ldp	x22, x21, [sp, #32]
  2292b0:	ldr	x23, [sp, #16]
  2292b4:	ldp	x29, x30, [sp], #64
  2292b8:	ret
  2292bc:	ldr	x0, [x23, #32]
  2292c0:	mov	x1, x21
  2292c4:	bl	2294e0 <hashmap_get>
  2292c8:	cbz	x0, 2292dc <manager_get_session_from_creds+0xa4>
  2292cc:	mov	x8, x0
  2292d0:	mov	w0, wzr
  2292d4:	str	x8, [x19]
  2292d8:	b	2292a8 <manager_get_session_from_creds+0x70>
  2292dc:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  2292e0:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  2292e4:	add	x1, x1, #0x5bb
  2292e8:	add	x2, x2, #0x7ad
  2292ec:	mov	x0, x20
  2292f0:	mov	x3, x21
  2292f4:	bl	240f50 <sd_bus_error_setf@plt>
  2292f8:	b	2292a8 <manager_get_session_from_creds+0x70>
  2292fc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  229300:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229304:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  229308:	add	x1, x1, #0x102
  22930c:	add	x2, x2, #0xe6f
  229310:	add	x4, x4, #0x6bc
  229314:	mov	w3, #0x74                  	// #116
  229318:	bl	240790 <log_assert_failed_realm@plt>
  22931c:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  229320:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229324:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  229328:	add	x1, x1, #0xa82
  22932c:	add	x2, x2, #0xe6f
  229330:	add	x4, x4, #0x6bc
  229334:	mov	w3, #0x75                  	// #117
  229338:	mov	w0, wzr
  22933c:	bl	240790 <log_assert_failed_realm@plt>

0000000000229340 <SEAT_IS_SELF>:
  229340:	stp	x29, x30, [sp, #-32]!
  229344:	str	x19, [sp, #16]
  229348:	mov	x29, sp
  22934c:	mov	x19, x0
  229350:	bl	22fbe8 <isempty>
  229354:	tbz	w0, #0, 229360 <SEAT_IS_SELF+0x20>
  229358:	mov	w0, #0x1                   	// #1
  22935c:	b	229378 <SEAT_IS_SELF+0x38>
  229360:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  229364:	add	x1, x1, #0x7d9
  229368:	mov	x0, x19
  22936c:	bl	240c30 <strcmp@plt>
  229370:	cmp	w0, #0x0
  229374:	cset	w0, eq  // eq = none
  229378:	ldr	x19, [sp, #16]
  22937c:	ldp	x29, x30, [sp], #32
  229380:	ret

0000000000229384 <get_sender_session>:
  229384:	sub	sp, sp, #0x50
  229388:	mov	x9, #0x200000              	// #2097152
  22938c:	movk	x9, #0x8000, lsl #48
  229390:	stp	x29, x30, [sp, #16]
  229394:	add	x29, sp, #0x10
  229398:	mov	x8, x1
  22939c:	orr	x10, x9, #0x400000
  2293a0:	tst	w2, #0x1
  2293a4:	str	x23, [sp, #32]
  2293a8:	stp	x20, x19, [sp, #64]
  2293ac:	mov	w20, w2
  2293b0:	mov	x23, x0
  2293b4:	csel	x1, x10, x9, ne  // ne = any
  2293b8:	add	x2, x29, #0x18
  2293bc:	mov	x0, x8
  2293c0:	stp	x22, x21, [sp, #48]
  2293c4:	mov	x21, x4
  2293c8:	mov	x19, x3
  2293cc:	str	xzr, [x29, #24]
  2293d0:	bl	240f60 <sd_bus_query_sender_creds@plt>
  2293d4:	tbnz	w0, #31, 22946c <get_sender_session+0xe8>
  2293d8:	ldr	x0, [x29, #24]
  2293dc:	add	x1, sp, #0x8
  2293e0:	bl	240f70 <sd_bus_creds_get_session@plt>
  2293e4:	tbnz	w0, #31, 229404 <get_sender_session+0x80>
  2293e8:	ldr	x0, [x23, #32]
  2293ec:	ldr	x1, [sp, #8]
  2293f0:	bl	2294e0 <hashmap_get>
  2293f4:	cbz	x0, 229444 <get_sender_session+0xc0>
  2293f8:	mov	w22, wzr
  2293fc:	str	x0, [x21]
  229400:	b	229470 <get_sender_session+0xec>
  229404:	mov	w22, w0
  229408:	cmn	w0, #0x6
  22940c:	b.ne	229470 <get_sender_session+0xec>  // b.any
  229410:	tbz	w20, #0, 229494 <get_sender_session+0x110>
  229414:	ldr	x0, [x29, #24]
  229418:	add	x1, sp, #0x4
  22941c:	bl	240f80 <sd_bus_creds_get_owner_uid@plt>
  229420:	mov	w22, w0
  229424:	tbnz	w0, #31, 22949c <get_sender_session+0x118>
  229428:	ldr	w8, [sp, #4]
  22942c:	ldr	x0, [x23, #48]
  229430:	add	x1, x8, #0x1
  229434:	bl	2294e0 <hashmap_get>
  229438:	cbz	x0, 2294a8 <get_sender_session+0x124>
  22943c:	ldr	x0, [x0, #80]
  229440:	b	2294a8 <get_sender_session+0x124>
  229444:	adrp	x8, 209000 <inhibit_what_to_string.buffer+0x209000>
  229448:	adrp	x9, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22944c:	add	x8, x8, #0x7d
  229450:	add	x9, x9, #0xc61
  229454:	tst	w20, #0x1
  229458:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22945c:	csel	x2, x9, x8, ne  // ne = any
  229460:	add	x1, x1, #0xda0
  229464:	mov	x0, x19
  229468:	bl	240f50 <sd_bus_error_setf@plt>
  22946c:	mov	w22, w0
  229470:	add	x0, x29, #0x18
  229474:	bl	230374 <sd_bus_creds_unrefp>
  229478:	mov	w0, w22
  22947c:	ldp	x20, x19, [sp, #64]
  229480:	ldp	x22, x21, [sp, #48]
  229484:	ldr	x23, [sp, #32]
  229488:	ldp	x29, x30, [sp, #16]
  22948c:	add	sp, sp, #0x50
  229490:	ret
  229494:	mov	x0, xzr
  229498:	b	2293f4 <get_sender_session+0x70>
  22949c:	cmn	w22, #0x6
  2294a0:	mov	x0, xzr
  2294a4:	b.ne	2294b4 <get_sender_session+0x130>  // b.any
  2294a8:	mov	w8, #0x1                   	// #1
  2294ac:	tbnz	w8, #0, 2293f4 <get_sender_session+0x70>
  2294b0:	b	229470 <get_sender_session+0xec>
  2294b4:	mov	w8, wzr
  2294b8:	tbnz	wzr, #0, 2293f4 <get_sender_session+0x70>
  2294bc:	b	229470 <get_sender_session+0xec>

00000000002294c0 <SEAT_IS_AUTO>:
  2294c0:	stp	x29, x30, [sp, #-16]!
  2294c4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2294c8:	add	x1, x1, #0x834
  2294cc:	mov	x29, sp
  2294d0:	bl	22f1cc <streq_ptr>
  2294d4:	and	w0, w0, #0x1
  2294d8:	ldp	x29, x30, [sp], #16
  2294dc:	ret

00000000002294e0 <hashmap_get>:
  2294e0:	stp	x29, x30, [sp, #-16]!
  2294e4:	mov	x29, sp
  2294e8:	bl	240bc0 <internal_hashmap_get@plt>
  2294ec:	ldp	x29, x30, [sp], #16
  2294f0:	ret

00000000002294f4 <manager_get_user_from_creds>:
  2294f4:	stp	x29, x30, [sp, #-64]!
  2294f8:	str	x23, [sp, #16]
  2294fc:	stp	x22, x21, [sp, #32]
  229500:	stp	x20, x19, [sp, #48]
  229504:	mov	x29, sp
  229508:	cbz	x0, 22959c <manager_get_user_from_creds+0xa8>
  22950c:	mov	x20, x4
  229510:	cbz	x4, 2295bc <manager_get_user_from_creds+0xc8>
  229514:	mov	x23, x0
  229518:	mov	w0, w2
  22951c:	mov	x19, x3
  229520:	mov	w21, w2
  229524:	mov	x22, x1
  229528:	bl	240f90 <uid_is_valid@plt>
  22952c:	tbz	w0, #0, 229554 <manager_get_user_from_creds+0x60>
  229530:	ldr	x0, [x23, #48]
  229534:	mov	w8, w21
  229538:	add	x1, x8, #0x1
  22953c:	bl	2294e0 <hashmap_get>
  229540:	cbz	x0, 22956c <manager_get_user_from_creds+0x78>
  229544:	mov	x8, x0
  229548:	mov	w0, wzr
  22954c:	str	x8, [x20]
  229550:	b	229588 <manager_get_user_from_creds+0x94>
  229554:	mov	x0, x23
  229558:	mov	x1, x22
  22955c:	mov	x2, x19
  229560:	mov	x3, x20
  229564:	bl	2295e0 <get_sender_user>
  229568:	b	229588 <manager_get_user_from_creds+0x94>
  22956c:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  229570:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  229574:	add	x1, x1, #0xee7
  229578:	add	x2, x2, #0xfd8
  22957c:	mov	x0, x19
  229580:	mov	w3, w21
  229584:	bl	240f50 <sd_bus_error_setf@plt>
  229588:	ldp	x20, x19, [sp, #48]
  22958c:	ldp	x22, x21, [sp, #32]
  229590:	ldr	x23, [sp, #16]
  229594:	ldp	x29, x30, [sp], #64
  229598:	ret
  22959c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2295a0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2295a4:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  2295a8:	add	x1, x1, #0x102
  2295ac:	add	x2, x2, #0xe6f
  2295b0:	add	x4, x4, #0xfc5
  2295b4:	mov	w3, #0xa3                  	// #163
  2295b8:	bl	240790 <log_assert_failed_realm@plt>
  2295bc:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2295c0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2295c4:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  2295c8:	add	x1, x1, #0xa82
  2295cc:	add	x2, x2, #0xe6f
  2295d0:	add	x4, x4, #0xfc5
  2295d4:	mov	w3, #0xa4                  	// #164
  2295d8:	mov	w0, wzr
  2295dc:	bl	240790 <log_assert_failed_realm@plt>

00000000002295e0 <get_sender_user>:
  2295e0:	sub	sp, sp, #0x40
  2295e4:	mov	x8, x1
  2295e8:	mov	x1, #0x400000              	// #4194304
  2295ec:	stp	x22, x21, [sp, #32]
  2295f0:	stp	x20, x19, [sp, #48]
  2295f4:	mov	x19, x2
  2295f8:	mov	x22, x0
  2295fc:	add	x2, sp, #0x8
  229600:	movk	x1, #0x8000, lsl #48
  229604:	mov	x0, x8
  229608:	stp	x29, x30, [sp, #16]
  22960c:	add	x29, sp, #0x10
  229610:	mov	x20, x3
  229614:	str	xzr, [sp, #8]
  229618:	bl	240f60 <sd_bus_query_sender_creds@plt>
  22961c:	tbnz	w0, #31, 22967c <get_sender_user+0x9c>
  229620:	ldr	x0, [sp, #8]
  229624:	add	x1, sp, #0x4
  229628:	bl	240f80 <sd_bus_creds_get_owner_uid@plt>
  22962c:	tbnz	w0, #31, 229650 <get_sender_user+0x70>
  229630:	ldr	w8, [sp, #4]
  229634:	ldr	x0, [x22, #48]
  229638:	add	x1, x8, #0x1
  22963c:	bl	2294e0 <hashmap_get>
  229640:	cbz	x0, 229664 <get_sender_user+0x84>
  229644:	mov	w21, wzr
  229648:	str	x0, [x20]
  22964c:	b	229680 <get_sender_user+0xa0>
  229650:	mov	w21, w0
  229654:	cmn	w0, #0x6
  229658:	b.ne	229680 <get_sender_user+0xa0>  // b.any
  22965c:	mov	x0, xzr
  229660:	cbnz	x0, 229644 <get_sender_user+0x64>
  229664:	adrp	x1, 212000 <inhibit_what_to_string.buffer+0x212000>
  229668:	adrp	x2, 212000 <inhibit_what_to_string.buffer+0x212000>
  22966c:	add	x1, x1, #0xa1
  229670:	add	x2, x2, #0xc5
  229674:	mov	x0, x19
  229678:	bl	240f50 <sd_bus_error_setf@plt>
  22967c:	mov	w21, w0
  229680:	add	x0, sp, #0x8
  229684:	bl	230374 <sd_bus_creds_unrefp>
  229688:	mov	w0, w21
  22968c:	ldp	x20, x19, [sp, #48]
  229690:	ldp	x22, x21, [sp, #32]
  229694:	ldp	x29, x30, [sp, #16]
  229698:	add	sp, sp, #0x40
  22969c:	ret

00000000002296a0 <manager_get_seat_from_creds>:
  2296a0:	stp	x29, x30, [sp, #-64]!
  2296a4:	str	x23, [sp, #16]
  2296a8:	stp	x22, x21, [sp, #32]
  2296ac:	stp	x20, x19, [sp, #48]
  2296b0:	mov	x29, sp
  2296b4:	cbz	x0, 2297a0 <manager_get_seat_from_creds+0x100>
  2296b8:	mov	x19, x4
  2296bc:	cbz	x4, 2297c0 <manager_get_seat_from_creds+0x120>
  2296c0:	mov	x23, x0
  2296c4:	mov	x0, x2
  2296c8:	mov	x20, x3
  2296cc:	mov	x21, x2
  2296d0:	mov	x22, x1
  2296d4:	bl	229340 <SEAT_IS_SELF>
  2296d8:	tbnz	w0, #0, 2296e8 <manager_get_seat_from_creds+0x48>
  2296dc:	mov	x0, x21
  2296e0:	bl	2294c0 <SEAT_IS_AUTO>
  2296e4:	tbz	w0, #0, 229728 <manager_get_seat_from_creds+0x88>
  2296e8:	add	x4, x29, #0x18
  2296ec:	mov	x0, x23
  2296f0:	mov	x1, x22
  2296f4:	mov	x2, x21
  2296f8:	mov	x3, x20
  2296fc:	bl	229238 <manager_get_session_from_creds>
  229700:	tbnz	w0, #31, 22971c <manager_get_seat_from_creds+0x7c>
  229704:	ldr	x9, [x29, #24]
  229708:	ldr	x8, [x9, #136]
  22970c:	cbz	x8, 22975c <manager_get_seat_from_creds+0xbc>
  229710:	mov	w9, #0x1                   	// #1
  229714:	tbnz	w9, #0, 229784 <manager_get_seat_from_creds+0xe4>
  229718:	b	22978c <manager_get_seat_from_creds+0xec>
  22971c:	mov	w9, wzr
  229720:	tbnz	w9, #0, 229784 <manager_get_seat_from_creds+0xe4>
  229724:	b	22978c <manager_get_seat_from_creds+0xec>
  229728:	ldr	x0, [x23, #24]
  22972c:	mov	x1, x21
  229730:	bl	2294e0 <hashmap_get>
  229734:	mov	x8, x0
  229738:	cbnz	x0, 229784 <manager_get_seat_from_creds+0xe4>
  22973c:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  229740:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  229744:	add	x1, x1, #0xb5c
  229748:	add	x2, x2, #0x5aa
  22974c:	mov	x0, x20
  229750:	mov	x3, x21
  229754:	bl	240f50 <sd_bus_error_setf@plt>
  229758:	b	22978c <manager_get_seat_from_creds+0xec>
  22975c:	ldr	x3, [x9, #8]
  229760:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  229764:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229768:	add	x1, x1, #0xb5c
  22976c:	add	x2, x2, #0xe87
  229770:	mov	x0, x20
  229774:	bl	240f50 <sd_bus_error_setf@plt>
  229778:	mov	x8, xzr
  22977c:	mov	w9, wzr
  229780:	tbz	w9, #0, 22978c <manager_get_seat_from_creds+0xec>
  229784:	mov	w0, wzr
  229788:	str	x8, [x19]
  22978c:	ldp	x20, x19, [sp, #48]
  229790:	ldp	x22, x21, [sp, #32]
  229794:	ldr	x23, [sp, #16]
  229798:	ldp	x29, x30, [sp], #64
  22979c:	ret
  2297a0:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2297a4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2297a8:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2297ac:	add	x1, x1, #0x102
  2297b0:	add	x2, x2, #0xe6f
  2297b4:	add	x4, x4, #0xd5
  2297b8:	mov	w3, #0xbc                  	// #188
  2297bc:	bl	240790 <log_assert_failed_realm@plt>
  2297c0:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2297c4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2297c8:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2297cc:	add	x1, x1, #0xa82
  2297d0:	add	x2, x2, #0xe6f
  2297d4:	add	x4, x4, #0xd5
  2297d8:	mov	w3, #0xbd                  	// #189
  2297dc:	mov	w0, wzr
  2297e0:	bl	240790 <log_assert_failed_realm@plt>

00000000002297e4 <manager_set_lid_switch_ignore>:
  2297e4:	stp	x29, x30, [sp, #-48]!
  2297e8:	str	x21, [sp, #16]
  2297ec:	stp	x20, x19, [sp, #32]
  2297f0:	mov	x29, sp
  2297f4:	cbz	x0, 2298b0 <manager_set_lid_switch_ignore+0xcc>
  2297f8:	mov	x20, x0
  2297fc:	mov	w0, #0x1                   	// #1
  229800:	mov	x19, x1
  229804:	bl	2407a0 <now@plt>
  229808:	cmp	x0, x19
  22980c:	b.cs	22984c <manager_set_lid_switch_ignore+0x68>  // b.hs, b.nlast
  229810:	ldr	x0, [x20, #448]
  229814:	add	x21, x20, #0x1c0
  229818:	cbz	x0, 229854 <manager_set_lid_switch_ignore+0x70>
  22981c:	add	x1, x29, #0x18
  229820:	bl	240fa0 <sd_event_source_get_time@plt>
  229824:	tbnz	w0, #31, 22987c <manager_set_lid_switch_ignore+0x98>
  229828:	ldr	x8, [x29, #24]
  22982c:	cmp	x8, x19
  229830:	b.cs	2298a0 <manager_set_lid_switch_ignore+0xbc>  // b.hs, b.nlast
  229834:	ldr	x0, [x21]
  229838:	mov	x1, x19
  22983c:	bl	240b10 <sd_event_source_set_time@plt>
  229840:	mov	w8, #0x1                   	// #1
  229844:	tbnz	w8, #0, 229888 <manager_set_lid_switch_ignore+0xa4>
  229848:	b	22988c <manager_set_lid_switch_ignore+0xa8>
  22984c:	mov	w1, wzr
  229850:	b	22988c <manager_set_lid_switch_ignore+0xa8>
  229854:	ldr	x0, [x20]
  229858:	adrp	x5, 229000 <manager_connect_utmp+0xd4>
  22985c:	add	x5, x5, #0x8d0
  229860:	mov	w2, #0x1                   	// #1
  229864:	mov	x1, x21
  229868:	mov	x3, x19
  22986c:	mov	x4, xzr
  229870:	mov	x6, x20
  229874:	bl	240b30 <sd_event_add_time@plt>
  229878:	b	229888 <manager_set_lid_switch_ignore+0xa4>
  22987c:	mov	w1, w0
  229880:	mov	w8, wzr
  229884:	tbz	wzr, #0, 22988c <manager_set_lid_switch_ignore+0xa8>
  229888:	mov	w1, w0
  22988c:	ldp	x20, x19, [sp, #32]
  229890:	ldr	x21, [sp, #16]
  229894:	mov	w0, w1
  229898:	ldp	x29, x30, [sp], #48
  22989c:	ret
  2298a0:	mov	w1, wzr
  2298a4:	mov	w8, wzr
  2298a8:	tbnz	wzr, #0, 229888 <manager_set_lid_switch_ignore+0xa4>
  2298ac:	b	22988c <manager_set_lid_switch_ignore+0xa8>
  2298b0:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2298b4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2298b8:	adrp	x4, 206000 <inhibit_what_to_string.buffer+0x206000>
  2298bc:	add	x1, x1, #0x102
  2298c0:	add	x2, x2, #0xe6f
  2298c4:	add	x4, x4, #0xea1
  2298c8:	mov	w3, #0x60b                 	// #1547
  2298cc:	bl	240790 <log_assert_failed_realm@plt>

00000000002298d0 <lid_switch_ignore_handler>:
  2298d0:	stp	x29, x30, [sp, #-32]!
  2298d4:	str	x19, [sp, #16]
  2298d8:	mov	x29, sp
  2298dc:	cbz	x0, 229904 <lid_switch_ignore_handler+0x34>
  2298e0:	mov	x19, x2
  2298e4:	cbz	x2, 229924 <lid_switch_ignore_handler+0x54>
  2298e8:	ldr	x0, [x19, #448]
  2298ec:	bl	240810 <sd_event_source_unref@plt>
  2298f0:	str	x0, [x19, #448]
  2298f4:	ldr	x19, [sp, #16]
  2298f8:	mov	w0, wzr
  2298fc:	ldp	x29, x30, [sp], #32
  229900:	ret
  229904:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  229908:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22990c:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  229910:	add	x1, x1, #0x6d2
  229914:	add	x2, x2, #0xe6f
  229918:	add	x4, x4, #0x4a9
  22991c:	mov	w3, #0x601                 	// #1537
  229920:	bl	240790 <log_assert_failed_realm@plt>
  229924:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  229928:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22992c:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  229930:	add	x1, x1, #0x102
  229934:	add	x2, x2, #0xe6f
  229938:	add	x4, x4, #0x4a9
  22993c:	mov	w3, #0x602                 	// #1538
  229940:	mov	w0, wzr
  229944:	bl	240790 <log_assert_failed_realm@plt>

0000000000229948 <manager_dispatch_delayed>:
  229948:	sub	sp, sp, #0x70
  22994c:	stp	x29, x30, [sp, #64]
  229950:	add	x29, sp, #0x40
  229954:	stp	x22, x21, [sp, #80]
  229958:	stp	x20, x19, [sp, #96]
  22995c:	stp	xzr, xzr, [x29, #-24]
  229960:	stur	xzr, [x29, #-8]
  229964:	str	xzr, [sp, #32]
  229968:	cbz	x0, 229b00 <manager_dispatch_delayed+0x1b8>
  22996c:	mov	w20, w1
  229970:	ldr	w1, [x0, #248]
  229974:	mov	x19, x0
  229978:	cbz	w1, 229984 <manager_dispatch_delayed+0x3c>
  22997c:	ldr	x8, [x19, #264]
  229980:	cbz	x8, 2299a8 <manager_dispatch_delayed+0x60>
  229984:	mov	w20, wzr
  229988:	sub	x0, x29, #0x18
  22998c:	bl	240c80 <sd_bus_error_free@plt>
  229990:	mov	w0, w20
  229994:	ldp	x20, x19, [sp, #96]
  229998:	ldp	x22, x21, [sp, #80]
  22999c:	ldp	x29, x30, [sp, #64]
  2299a0:	add	sp, sp, #0x70
  2299a4:	ret
  2299a8:	add	x7, sp, #0x20
  2299ac:	mov	w2, #0x1                   	// #1
  2299b0:	mov	x0, x19
  2299b4:	mov	x3, xzr
  2299b8:	mov	w4, wzr
  2299bc:	mov	w5, wzr
  2299c0:	mov	w6, wzr
  2299c4:	bl	233000 <manager_is_inhibited>
  2299c8:	tbz	w0, #0, 229a74 <manager_dispatch_delayed+0x12c>
  2299cc:	stp	xzr, xzr, [sp, #16]
  2299d0:	tbz	w20, #0, 229aec <manager_dispatch_delayed+0x1a4>
  2299d4:	ldr	x8, [sp, #32]
  2299d8:	add	x1, sp, #0x18
  2299dc:	ldr	w0, [x8, #60]
  2299e0:	bl	240ca0 <get_process_comm@plt>
  2299e4:	ldr	x8, [sp, #32]
  2299e8:	ldr	w0, [x8, #64]
  2299ec:	bl	240cb0 <uid_to_name@plt>
  2299f0:	mov	x20, x0
  2299f4:	str	x0, [sp, #16]
  2299f8:	mov	w0, wzr
  2299fc:	bl	240750 <log_get_max_level_realm@plt>
  229a00:	cmp	w0, #0x5
  229a04:	b.lt	229a64 <manager_dispatch_delayed+0x11c>  // b.tstop
  229a08:	ldr	x22, [sp, #32]
  229a0c:	mov	x0, x20
  229a10:	ldr	w21, [x22, #64]
  229a14:	bl	229b38 <strna>
  229a18:	ldr	x8, [sp, #24]
  229a1c:	ldr	w22, [x22, #60]
  229a20:	mov	x20, x0
  229a24:	mov	x0, x8
  229a28:	bl	229b38 <strna>
  229a2c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229a30:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  229a34:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  229a38:	str	x0, [sp, #8]
  229a3c:	add	x2, x2, #0xe6f
  229a40:	add	x4, x4, #0x139
  229a44:	add	x5, x5, #0xa57
  229a48:	mov	w0, #0x5                   	// #5
  229a4c:	mov	w3, #0x684                 	// #1668
  229a50:	mov	w1, wzr
  229a54:	mov	w6, w21
  229a58:	mov	x7, x20
  229a5c:	str	w22, [sp]
  229a60:	bl	240770 <log_internal_realm@plt>
  229a64:	add	x0, sp, #0x10
  229a68:	bl	229b20 <freep>
  229a6c:	add	x0, sp, #0x18
  229a70:	bl	229b20 <freep>
  229a74:	ldr	w1, [x19, #248]
  229a78:	ldr	x2, [x19, #256]
  229a7c:	sub	x3, x29, #0x18
  229a80:	mov	x0, x19
  229a84:	bl	229b4c <execute_shutdown_or_sleep>
  229a88:	tbnz	w0, #31, 229a94 <manager_dispatch_delayed+0x14c>
  229a8c:	mov	w20, #0x1                   	// #1
  229a90:	b	229988 <manager_dispatch_delayed+0x40>
  229a94:	mov	w20, w0
  229a98:	mov	w0, wzr
  229a9c:	bl	240750 <log_get_max_level_realm@plt>
  229aa0:	cmp	w0, #0x4
  229aa4:	b.lt	229ae0 <manager_dispatch_delayed+0x198>  // b.tstop
  229aa8:	sub	x0, x29, #0x18
  229aac:	mov	w1, w20
  229ab0:	bl	240cc0 <bus_error_message@plt>
  229ab4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229ab8:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  229abc:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  229ac0:	mov	x6, x0
  229ac4:	add	x2, x2, #0xe6f
  229ac8:	add	x4, x4, #0x139
  229acc:	add	x5, x5, #0x325
  229ad0:	mov	w0, #0x4                   	// #4
  229ad4:	mov	w3, #0x68b                 	// #1675
  229ad8:	mov	w1, wzr
  229adc:	bl	240770 <log_internal_realm@plt>
  229ae0:	str	xzr, [x19, #256]
  229ae4:	str	wzr, [x19, #248]
  229ae8:	b	229988 <manager_dispatch_delayed+0x40>
  229aec:	add	x0, sp, #0x10
  229af0:	bl	229b20 <freep>
  229af4:	add	x0, sp, #0x18
  229af8:	bl	229b20 <freep>
  229afc:	b	229984 <manager_dispatch_delayed+0x3c>
  229b00:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  229b04:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229b08:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  229b0c:	add	x1, x1, #0x96a
  229b10:	add	x2, x2, #0xe6f
  229b14:	add	x4, x4, #0x3df
  229b18:	mov	w3, #0x674                 	// #1652
  229b1c:	bl	240790 <log_assert_failed_realm@plt>

0000000000229b20 <freep>:
  229b20:	stp	x29, x30, [sp, #-16]!
  229b24:	ldr	x0, [x0]
  229b28:	mov	x29, sp
  229b2c:	bl	240890 <free@plt>
  229b30:	ldp	x29, x30, [sp], #16
  229b34:	ret

0000000000229b38 <strna>:
  229b38:	adrp	x8, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  229b3c:	add	x8, x8, #0x7
  229b40:	cmp	x0, #0x0
  229b44:	csel	x0, x8, x0, eq  // eq = none
  229b48:	ret

0000000000229b4c <execute_shutdown_or_sleep>:
  229b4c:	sub	sp, sp, #0x50
  229b50:	stp	x29, x30, [sp, #32]
  229b54:	add	x29, sp, #0x20
  229b58:	stp	x22, x21, [sp, #48]
  229b5c:	stp	x20, x19, [sp, #64]
  229b60:	stur	xzr, [x29, #-8]
  229b64:	cbz	x0, 229c6c <execute_shutdown_or_sleep+0x120>
  229b68:	mov	w20, w1
  229b6c:	cmp	w1, #0x0
  229b70:	b.le	229c8c <execute_shutdown_or_sleep+0x140>
  229b74:	cmp	w20, #0x80
  229b78:	b.ge	229cb0 <execute_shutdown_or_sleep+0x164>  // b.tcont
  229b7c:	mov	x21, x2
  229b80:	cbz	x2, 229cd4 <execute_shutdown_or_sleep+0x188>
  229b84:	mov	x22, x3
  229b88:	mov	x19, x0
  229b8c:	cmp	w20, #0x1
  229b90:	b.ne	229ba0 <execute_shutdown_or_sleep+0x54>  // b.any
  229b94:	mov	x0, x19
  229b98:	mov	x1, x21
  229b9c:	bl	230390 <bus_manager_log_shutdown>
  229ba0:	ldr	x0, [x19, #8]
  229ba4:	adrp	x8, 206000 <inhibit_what_to_string.buffer+0x206000>
  229ba8:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  229bac:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  229bb0:	adrp	x3, 208000 <inhibit_what_to_string.buffer+0x208000>
  229bb4:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  229bb8:	adrp	x7, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  229bbc:	add	x8, x8, #0xf41
  229bc0:	add	x1, x1, #0x5eb
  229bc4:	add	x2, x2, #0xee7
  229bc8:	add	x3, x3, #0x2ef
  229bcc:	add	x4, x4, #0x24f
  229bd0:	add	x7, x7, #0xf7b
  229bd4:	sub	x6, x29, #0x8
  229bd8:	mov	x5, x22
  229bdc:	stp	x21, x8, [sp]
  229be0:	bl	240e50 <sd_bus_call_method@plt>
  229be4:	tbnz	w0, #31, 229c38 <execute_shutdown_or_sleep+0xec>
  229be8:	ldur	x0, [x29, #-8]
  229bec:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  229bf0:	add	x1, x1, #0x293
  229bf4:	add	x2, sp, #0x10
  229bf8:	bl	240fb0 <sd_bus_message_read@plt>
  229bfc:	tbnz	w0, #31, 229c38 <execute_shutdown_or_sleep+0xec>
  229c00:	ldr	x1, [sp, #16]
  229c04:	add	x0, x19, #0x108
  229c08:	bl	240f10 <free_and_strdup@plt>
  229c0c:	tbnz	w0, #31, 229c38 <execute_shutdown_or_sleep+0xec>
  229c10:	mov	w0, #0x1                   	// #1
  229c14:	str	x21, [x19, #256]
  229c18:	str	w20, [x19, #248]
  229c1c:	bl	2407a0 <now@plt>
  229c20:	ldr	x8, [x19, #440]
  229c24:	add	x1, x8, x0
  229c28:	mov	x0, x19
  229c2c:	bl	2297e4 <manager_set_lid_switch_ignore>
  229c30:	mov	w22, wzr
  229c34:	b	229c4c <execute_shutdown_or_sleep+0x100>
  229c38:	mov	w22, w0
  229c3c:	mov	x0, x19
  229c40:	mov	w1, w20
  229c44:	mov	w2, wzr
  229c48:	bl	229ef8 <send_prepare_for>
  229c4c:	sub	x0, x29, #0x8
  229c50:	bl	22fbb8 <sd_bus_message_unrefp>
  229c54:	mov	w0, w22
  229c58:	ldp	x20, x19, [sp, #64]
  229c5c:	ldp	x22, x21, [sp, #48]
  229c60:	ldp	x29, x30, [sp, #32]
  229c64:	add	sp, sp, #0x50
  229c68:	ret
  229c6c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  229c70:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229c74:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  229c78:	add	x1, x1, #0x102
  229c7c:	add	x2, x2, #0xe6f
  229c80:	add	x4, x4, #0x7de
  229c84:	mov	w3, #0x643                 	// #1603
  229c88:	bl	240790 <log_assert_failed_realm@plt>
  229c8c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  229c90:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229c94:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  229c98:	add	x1, x1, #0x152
  229c9c:	add	x2, x2, #0xe6f
  229ca0:	add	x4, x4, #0x7de
  229ca4:	mov	w3, #0x644                 	// #1604
  229ca8:	mov	w0, wzr
  229cac:	bl	240790 <log_assert_failed_realm@plt>
  229cb0:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  229cb4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229cb8:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  229cbc:	add	x1, x1, #0x5e0
  229cc0:	add	x2, x2, #0xe6f
  229cc4:	add	x4, x4, #0x7de
  229cc8:	mov	w3, #0x645                 	// #1605
  229ccc:	mov	w0, wzr
  229cd0:	bl	240790 <log_assert_failed_realm@plt>
  229cd4:	adrp	x1, 212000 <inhibit_what_to_string.buffer+0x212000>
  229cd8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229cdc:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  229ce0:	add	x1, x1, #0x1
  229ce4:	add	x2, x2, #0xe6f
  229ce8:	add	x4, x4, #0x7de
  229cec:	mov	w3, #0x646                 	// #1606
  229cf0:	mov	w0, wzr
  229cf4:	bl	240790 <log_assert_failed_realm@plt>

0000000000229cf8 <bus_manager_shutdown_or_sleep_now_or_later>:
  229cf8:	stp	x29, x30, [sp, #-64]!
  229cfc:	mov	x29, sp
  229d00:	str	x23, [sp, #16]
  229d04:	stp	x22, x21, [sp, #32]
  229d08:	stp	x20, x19, [sp, #48]
  229d0c:	str	xzr, [x29, #24]
  229d10:	cbz	x0, 229e48 <bus_manager_shutdown_or_sleep_now_or_later+0x150>
  229d14:	mov	x19, x1
  229d18:	cbz	x1, 229e68 <bus_manager_shutdown_or_sleep_now_or_later+0x170>
  229d1c:	mov	w20, w2
  229d20:	cmp	w2, #0x0
  229d24:	b.le	229e8c <bus_manager_shutdown_or_sleep_now_or_later+0x194>
  229d28:	cmp	w20, #0x80
  229d2c:	b.ge	229eb0 <bus_manager_shutdown_or_sleep_now_or_later+0x1b8>  // b.tcont
  229d30:	ldr	x8, [x0, #264]
  229d34:	mov	x22, x0
  229d38:	cbnz	x8, 229ed4 <bus_manager_shutdown_or_sleep_now_or_later+0x1dc>
  229d3c:	ldr	x0, [x22, #8]
  229d40:	add	x2, x29, #0x18
  229d44:	mov	x1, x19
  229d48:	mov	x21, x3
  229d4c:	bl	240fc0 <unit_load_state@plt>
  229d50:	tbnz	w0, #31, 229e24 <bus_manager_shutdown_or_sleep_now_or_later+0x12c>
  229d54:	ldr	x23, [x29, #24]
  229d58:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  229d5c:	add	x1, x1, #0xaa5
  229d60:	mov	x0, x23
  229d64:	bl	240c30 <strcmp@plt>
  229d68:	cbz	w0, 229db4 <bus_manager_shutdown_or_sleep_now_or_later+0xbc>
  229d6c:	mov	w0, wzr
  229d70:	bl	240750 <log_get_max_level_realm@plt>
  229d74:	cmp	w0, #0x5
  229d78:	b.lt	229e08 <bus_manager_shutdown_or_sleep_now_or_later+0x110>  // b.tstop
  229d7c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229d80:	adrp	x4, 212000 <inhibit_what_to_string.buffer+0x212000>
  229d84:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  229d88:	mov	w1, #0xd                   	// #13
  229d8c:	add	x2, x2, #0xe6f
  229d90:	add	x4, x4, #0xb
  229d94:	add	x5, x5, #0xaac
  229d98:	mov	w0, #0x5                   	// #5
  229d9c:	movk	w1, #0x4000, lsl #16
  229da0:	mov	w3, #0x6df                 	// #1759
  229da4:	mov	x6, x19
  229da8:	mov	x7, x23
  229dac:	bl	240770 <log_internal_realm@plt>
  229db0:	b	229e24 <bus_manager_shutdown_or_sleep_now_or_later+0x12c>
  229db4:	mov	w2, #0x1                   	// #1
  229db8:	mov	x0, x22
  229dbc:	mov	w1, w20
  229dc0:	bl	229ef8 <send_prepare_for>
  229dc4:	ldr	x8, [x22, #232]
  229dc8:	cbz	x8, 229e10 <bus_manager_shutdown_or_sleep_now_or_later+0x118>
  229dcc:	mov	w2, #0x1                   	// #1
  229dd0:	mov	x0, x22
  229dd4:	mov	w1, w20
  229dd8:	mov	x3, xzr
  229ddc:	mov	w4, wzr
  229de0:	mov	w5, wzr
  229de4:	mov	w6, wzr
  229de8:	mov	x7, xzr
  229dec:	bl	233000 <manager_is_inhibited>
  229df0:	tbz	w0, #0, 229e10 <bus_manager_shutdown_or_sleep_now_or_later+0x118>
  229df4:	mov	x0, x22
  229df8:	mov	w1, w20
  229dfc:	mov	x2, x19
  229e00:	bl	229f98 <delay_shutdown_or_sleep>
  229e04:	b	229e24 <bus_manager_shutdown_or_sleep_now_or_later+0x12c>
  229e08:	mov	w23, #0xfffffff3            	// #-13
  229e0c:	b	229e28 <bus_manager_shutdown_or_sleep_now_or_later+0x130>
  229e10:	mov	x0, x22
  229e14:	mov	w1, w20
  229e18:	mov	x2, x19
  229e1c:	mov	x3, x21
  229e20:	bl	229b4c <execute_shutdown_or_sleep>
  229e24:	mov	w23, w0
  229e28:	add	x0, x29, #0x18
  229e2c:	bl	229b20 <freep>
  229e30:	mov	w0, w23
  229e34:	ldp	x20, x19, [sp, #48]
  229e38:	ldp	x22, x21, [sp, #32]
  229e3c:	ldr	x23, [sp, #16]
  229e40:	ldp	x29, x30, [sp], #64
  229e44:	ret
  229e48:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  229e4c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229e50:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  229e54:	add	x1, x1, #0x102
  229e58:	add	x2, x2, #0xe6f
  229e5c:	add	x4, x4, #0xf83
  229e60:	mov	w3, #0x6d2                 	// #1746
  229e64:	bl	240790 <log_assert_failed_realm@plt>
  229e68:	adrp	x1, 212000 <inhibit_what_to_string.buffer+0x212000>
  229e6c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229e70:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  229e74:	add	x1, x1, #0x1
  229e78:	add	x2, x2, #0xe6f
  229e7c:	add	x4, x4, #0xf83
  229e80:	mov	w3, #0x6d3                 	// #1747
  229e84:	mov	w0, wzr
  229e88:	bl	240790 <log_assert_failed_realm@plt>
  229e8c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  229e90:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229e94:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  229e98:	add	x1, x1, #0x152
  229e9c:	add	x2, x2, #0xe6f
  229ea0:	add	x4, x4, #0xf83
  229ea4:	mov	w3, #0x6d4                 	// #1748
  229ea8:	mov	w0, wzr
  229eac:	bl	240790 <log_assert_failed_realm@plt>
  229eb0:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  229eb4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229eb8:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  229ebc:	add	x1, x1, #0x5e0
  229ec0:	add	x2, x2, #0xe6f
  229ec4:	add	x4, x4, #0xf83
  229ec8:	mov	w3, #0x6d5                 	// #1749
  229ecc:	mov	w0, wzr
  229ed0:	bl	240790 <log_assert_failed_realm@plt>
  229ed4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  229ed8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229edc:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  229ee0:	add	x1, x1, #0x7c3
  229ee4:	add	x2, x2, #0xe6f
  229ee8:	add	x4, x4, #0xf83
  229eec:	mov	w3, #0x6d6                 	// #1750
  229ef0:	mov	w0, wzr
  229ef4:	bl	240790 <log_assert_failed_realm@plt>

0000000000229ef8 <send_prepare_for>:
  229ef8:	stp	x29, x30, [sp, #-16]!
  229efc:	mov	x29, sp
  229f00:	cbz	x0, 229f54 <send_prepare_for+0x5c>
  229f04:	sub	w8, w1, #0x1
  229f08:	cmp	w8, #0x2
  229f0c:	b.cs	229f74 <send_prepare_for+0x7c>  // b.hs, b.nlast
  229f10:	ldr	x0, [x0, #8]
  229f14:	adrp	x8, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  229f18:	adrp	x9, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  229f1c:	and	w5, w2, #0x1
  229f20:	add	x8, x8, #0x178
  229f24:	add	x9, x9, #0x439
  229f28:	cmp	w1, #0x1
  229f2c:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  229f30:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  229f34:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  229f38:	csel	x3, x9, x8, eq  // eq = none
  229f3c:	add	x1, x1, #0xad4
  229f40:	add	x2, x2, #0xe5d
  229f44:	add	x4, x4, #0xb8c
  229f48:	bl	240fd0 <sd_bus_emit_signal@plt>
  229f4c:	ldp	x29, x30, [sp], #16
  229f50:	ret
  229f54:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  229f58:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229f5c:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  229f60:	add	x1, x1, #0x102
  229f64:	add	x2, x2, #0xe6f
  229f68:	add	x4, x4, #0x839
  229f6c:	mov	w3, #0x62e                 	// #1582
  229f70:	bl	240790 <log_assert_failed_realm@plt>
  229f74:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  229f78:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  229f7c:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  229f80:	add	x1, x1, #0xc66
  229f84:	add	x2, x2, #0xe6f
  229f88:	add	x4, x4, #0x839
  229f8c:	mov	w3, #0x62f                 	// #1583
  229f90:	mov	w0, wzr
  229f94:	bl	240790 <log_assert_failed_realm@plt>

0000000000229f98 <delay_shutdown_or_sleep>:
  229f98:	stp	x29, x30, [sp, #-64]!
  229f9c:	str	x23, [sp, #16]
  229fa0:	stp	x22, x21, [sp, #32]
  229fa4:	stp	x20, x19, [sp, #48]
  229fa8:	mov	x29, sp
  229fac:	cbz	x0, 22a0d4 <delay_shutdown_or_sleep+0x13c>
  229fb0:	mov	w19, w1
  229fb4:	tbnz	w1, #31, 22a0f4 <delay_shutdown_or_sleep+0x15c>
  229fb8:	cmp	w19, #0x80
  229fbc:	b.ge	22a118 <delay_shutdown_or_sleep+0x180>  // b.tcont
  229fc0:	mov	x20, x2
  229fc4:	cbz	x2, 22a13c <delay_shutdown_or_sleep+0x1a4>
  229fc8:	mov	x21, x0
  229fcc:	mov	w0, #0x1                   	// #1
  229fd0:	bl	2407a0 <now@plt>
  229fd4:	ldr	x9, [x21, #232]
  229fd8:	mov	x8, x0
  229fdc:	ldr	x0, [x21, #272]
  229fe0:	add	x23, x21, #0x110
  229fe4:	add	x3, x9, x8
  229fe8:	cbz	x0, 22a040 <delay_shutdown_or_sleep+0xa8>
  229fec:	mov	x1, x3
  229ff0:	bl	240b10 <sd_event_source_set_time@plt>
  229ff4:	tbnz	w0, #31, 22a074 <delay_shutdown_or_sleep+0xdc>
  229ff8:	ldr	x0, [x23]
  229ffc:	mov	w1, #0xffffffff            	// #-1
  22a000:	bl	240b20 <sd_event_source_set_enabled@plt>
  22a004:	tbz	w0, #31, 22a064 <delay_shutdown_or_sleep+0xcc>
  22a008:	mov	w22, w0
  22a00c:	mov	w0, wzr
  22a010:	bl	240750 <log_get_max_level_realm@plt>
  22a014:	cmp	w0, #0x3
  22a018:	b.lt	22a0b4 <delay_shutdown_or_sleep+0x11c>  // b.tstop
  22a01c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a020:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22a024:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22a028:	add	x2, x2, #0xe6f
  22a02c:	add	x4, x4, #0xb8
  22a030:	add	x5, x5, #0xb65
  22a034:	mov	w0, #0x3                   	// #3
  22a038:	mov	w3, #0x6ba                 	// #1722
  22a03c:	b	22a0a8 <delay_shutdown_or_sleep+0x110>
  22a040:	ldr	x0, [x21]
  22a044:	adrp	x5, 230000 <manager_kill_unit+0x20>
  22a048:	add	x5, x5, #0x68c
  22a04c:	mov	w2, #0x1                   	// #1
  22a050:	mov	x1, x23
  22a054:	mov	x4, xzr
  22a058:	mov	x6, x21
  22a05c:	bl	240b30 <sd_event_add_time@plt>
  22a060:	tbnz	w0, #31, 22a0c0 <delay_shutdown_or_sleep+0x128>
  22a064:	mov	w0, wzr
  22a068:	str	x20, [x21, #256]
  22a06c:	str	w19, [x21, #248]
  22a070:	b	22a0c0 <delay_shutdown_or_sleep+0x128>
  22a074:	mov	w22, w0
  22a078:	mov	w0, wzr
  22a07c:	bl	240750 <log_get_max_level_realm@plt>
  22a080:	cmp	w0, #0x3
  22a084:	b.lt	22a0b4 <delay_shutdown_or_sleep+0x11c>  // b.tstop
  22a088:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a08c:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22a090:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22a094:	add	x2, x2, #0xe6f
  22a098:	add	x4, x4, #0xb8
  22a09c:	add	x5, x5, #0x6d4
  22a0a0:	mov	w0, #0x3                   	// #3
  22a0a4:	mov	w3, #0x6b6                 	// #1718
  22a0a8:	mov	w1, w22
  22a0ac:	bl	240770 <log_internal_realm@plt>
  22a0b0:	b	22a0c0 <delay_shutdown_or_sleep+0x128>
  22a0b4:	mov	w8, wzr
  22a0b8:	neg	w9, w22
  22a0bc:	sub	w0, w8, w9, uxtb
  22a0c0:	ldp	x20, x19, [sp, #48]
  22a0c4:	ldp	x22, x21, [sp, #32]
  22a0c8:	ldr	x23, [sp, #16]
  22a0cc:	ldp	x29, x30, [sp], #64
  22a0d0:	ret
  22a0d4:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22a0d8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a0dc:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22a0e0:	add	x1, x1, #0x102
  22a0e4:	add	x2, x2, #0xe6f
  22a0e8:	add	x4, x4, #0x62a
  22a0ec:	mov	w3, #0x6ac                 	// #1708
  22a0f0:	bl	240790 <log_assert_failed_realm@plt>
  22a0f4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22a0f8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a0fc:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22a100:	add	x1, x1, #0x86d
  22a104:	add	x2, x2, #0xe6f
  22a108:	add	x4, x4, #0x62a
  22a10c:	mov	w3, #0x6ad                 	// #1709
  22a110:	mov	w0, wzr
  22a114:	bl	240790 <log_assert_failed_realm@plt>
  22a118:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  22a11c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a120:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22a124:	add	x1, x1, #0x5e0
  22a128:	add	x2, x2, #0xe6f
  22a12c:	add	x4, x4, #0x62a
  22a130:	mov	w3, #0x6ae                 	// #1710
  22a134:	mov	w0, wzr
  22a138:	bl	240790 <log_assert_failed_realm@plt>
  22a13c:	adrp	x1, 212000 <inhibit_what_to_string.buffer+0x212000>
  22a140:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a144:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22a148:	add	x1, x1, #0x1
  22a14c:	add	x2, x2, #0xe6f
  22a150:	add	x4, x4, #0x62a
  22a154:	mov	w3, #0x6af                 	// #1711
  22a158:	mov	w0, wzr
  22a15c:	bl	240790 <log_assert_failed_realm@plt>

000000000022a160 <property_get_reboot_parameter>:
  22a160:	sub	sp, sp, #0x30
  22a164:	stp	x29, x30, [sp, #16]
  22a168:	stp	x20, x19, [sp, #32]
  22a16c:	add	x29, sp, #0x10
  22a170:	str	xzr, [sp, #8]
  22a174:	cbz	x0, 22a1c4 <property_get_reboot_parameter+0x64>
  22a178:	mov	x19, x4
  22a17c:	cbz	x4, 22a1e4 <property_get_reboot_parameter+0x84>
  22a180:	cbz	x5, 22a208 <property_get_reboot_parameter+0xa8>
  22a184:	add	x0, sp, #0x8
  22a188:	bl	240fe0 <read_reboot_parameter@plt>
  22a18c:	tbnz	w0, #31, 22a1a4 <property_get_reboot_parameter+0x44>
  22a190:	ldr	x2, [sp, #8]
  22a194:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22a198:	add	x1, x1, #0x6de
  22a19c:	mov	x0, x19
  22a1a0:	bl	240ff0 <sd_bus_message_append@plt>
  22a1a4:	mov	w20, w0
  22a1a8:	add	x0, sp, #0x8
  22a1ac:	bl	229b20 <freep>
  22a1b0:	mov	w0, w20
  22a1b4:	ldp	x20, x19, [sp, #32]
  22a1b8:	ldp	x29, x30, [sp, #16]
  22a1bc:	add	sp, sp, #0x30
  22a1c0:	ret
  22a1c4:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22a1c8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a1cc:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22a1d0:	add	x1, x1, #0x887
  22a1d4:	add	x2, x2, #0xe6f
  22a1d8:	add	x4, x4, #0x2c2
  22a1dc:	mov	w3, #0x9be                 	// #2494
  22a1e0:	bl	240790 <log_assert_failed_realm@plt>
  22a1e4:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22a1e8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a1ec:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22a1f0:	add	x1, x1, #0xbb3
  22a1f4:	add	x2, x2, #0xe6f
  22a1f8:	add	x4, x4, #0x2c2
  22a1fc:	mov	w3, #0x9bf                 	// #2495
  22a200:	mov	w0, wzr
  22a204:	bl	240790 <log_assert_failed_realm@plt>
  22a208:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22a20c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a210:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22a214:	add	x1, x1, #0x874
  22a218:	add	x2, x2, #0xe6f
  22a21c:	add	x4, x4, #0x2c2
  22a220:	mov	w3, #0x9c0                 	// #2496
  22a224:	mov	w0, wzr
  22a228:	bl	240790 <log_assert_failed_realm@plt>

000000000022a22c <property_get_reboot_to_firmware_setup>:
  22a22c:	stp	x29, x30, [sp, #-48]!
  22a230:	str	x21, [sp, #16]
  22a234:	stp	x20, x19, [sp, #32]
  22a238:	mov	x29, sp
  22a23c:	cbz	x0, 22a384 <property_get_reboot_to_firmware_setup+0x158>
  22a240:	mov	x19, x4
  22a244:	cbz	x4, 22a3a4 <property_get_reboot_to_firmware_setup+0x178>
  22a248:	cbz	x5, 22a3c8 <property_get_reboot_to_firmware_setup+0x19c>
  22a24c:	adrp	x0, 208000 <inhibit_what_to_string.buffer+0x208000>
  22a250:	add	x0, x0, #0x2
  22a254:	bl	241000 <getenv_bool@plt>
  22a258:	cmn	w0, #0x6
  22a25c:	b.ne	22a2a8 <property_get_reboot_to_firmware_setup+0x7c>  // b.any
  22a260:	bl	241010 <efi_get_reboot_to_firmware@plt>
  22a264:	mov	w20, w0
  22a268:	tbz	w0, #31, 22a35c <property_get_reboot_to_firmware_setup+0x130>
  22a26c:	cmn	w20, #0x5f
  22a270:	b.eq	22a35c <property_get_reboot_to_firmware_setup+0x130>  // b.none
  22a274:	mov	w0, wzr
  22a278:	bl	240750 <log_get_max_level_realm@plt>
  22a27c:	cmp	w0, #0x4
  22a280:	b.lt	22a35c <property_get_reboot_to_firmware_setup+0x130>  // b.tstop
  22a284:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a288:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22a28c:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22a290:	add	x2, x2, #0xe6f
  22a294:	add	x4, x4, #0x1a8
  22a298:	add	x5, x5, #0x88b
  22a29c:	mov	w0, #0x4                   	// #4
  22a2a0:	mov	w3, #0xa21                 	// #2593
  22a2a4:	b	22a300 <property_get_reboot_to_firmware_setup+0xd4>
  22a2a8:	mov	w20, w0
  22a2ac:	tbnz	w0, #31, 22a2d0 <property_get_reboot_to_firmware_setup+0xa4>
  22a2b0:	cbz	w20, 22a35c <property_get_reboot_to_firmware_setup+0x130>
  22a2b4:	adrp	x0, 211000 <inhibit_what_to_string.buffer+0x211000>
  22a2b8:	add	x0, x0, #0x698
  22a2bc:	mov	w1, wzr
  22a2c0:	bl	2408d0 <access@plt>
  22a2c4:	tbnz	w0, #31, 22a30c <property_get_reboot_to_firmware_setup+0xe0>
  22a2c8:	mov	w20, #0x1                   	// #1
  22a2cc:	b	22a35c <property_get_reboot_to_firmware_setup+0x130>
  22a2d0:	mov	w0, wzr
  22a2d4:	bl	240750 <log_get_max_level_realm@plt>
  22a2d8:	cmp	w0, #0x4
  22a2dc:	b.lt	22a35c <property_get_reboot_to_firmware_setup+0x130>  // b.tstop
  22a2e0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a2e4:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22a2e8:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  22a2ec:	add	x2, x2, #0xe6f
  22a2f0:	add	x4, x4, #0x1a8
  22a2f4:	add	x5, x5, #0x4cb
  22a2f8:	mov	w0, #0x4                   	// #4
  22a2fc:	mov	w3, #0xa23                 	// #2595
  22a300:	mov	w1, w20
  22a304:	bl	240770 <log_internal_realm@plt>
  22a308:	b	22a35c <property_get_reboot_to_firmware_setup+0x130>
  22a30c:	bl	240930 <__errno_location@plt>
  22a310:	ldr	w21, [x0]
  22a314:	cmp	w21, #0x2
  22a318:	b.eq	22a358 <property_get_reboot_to_firmware_setup+0x12c>  // b.none
  22a31c:	mov	w0, wzr
  22a320:	bl	240750 <log_get_max_level_realm@plt>
  22a324:	cmp	w0, #0x4
  22a328:	mov	w20, wzr
  22a32c:	b.lt	22a35c <property_get_reboot_to_firmware_setup+0x130>  // b.tstop
  22a330:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a334:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22a338:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22a33c:	add	x2, x2, #0xe6f
  22a340:	add	x4, x4, #0x1a8
  22a344:	add	x5, x5, #0xb31
  22a348:	mov	w0, #0x4                   	// #4
  22a34c:	mov	w3, #0xa28                 	// #2600
  22a350:	mov	w1, w21
  22a354:	bl	240770 <log_internal_realm@plt>
  22a358:	mov	w20, wzr
  22a35c:	cmp	w20, #0x0
  22a360:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22a364:	cset	w2, gt
  22a368:	add	x1, x1, #0xb8c
  22a36c:	mov	x0, x19
  22a370:	bl	240ff0 <sd_bus_message_append@plt>
  22a374:	ldp	x20, x19, [sp, #32]
  22a378:	ldr	x21, [sp, #16]
  22a37c:	ldp	x29, x30, [sp], #48
  22a380:	ret
  22a384:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22a388:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a38c:	adrp	x4, 212000 <inhibit_what_to_string.buffer+0x212000>
  22a390:	add	x1, x1, #0x887
  22a394:	add	x2, x2, #0xe6f
  22a398:	add	x4, x4, #0x10e
  22a39c:	mov	w3, #0xa18                 	// #2584
  22a3a0:	bl	240790 <log_assert_failed_realm@plt>
  22a3a4:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22a3a8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a3ac:	adrp	x4, 212000 <inhibit_what_to_string.buffer+0x212000>
  22a3b0:	add	x1, x1, #0xbb3
  22a3b4:	add	x2, x2, #0xe6f
  22a3b8:	add	x4, x4, #0x10e
  22a3bc:	mov	w3, #0xa19                 	// #2585
  22a3c0:	mov	w0, wzr
  22a3c4:	bl	240790 <log_assert_failed_realm@plt>
  22a3c8:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22a3cc:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a3d0:	adrp	x4, 212000 <inhibit_what_to_string.buffer+0x212000>
  22a3d4:	add	x1, x1, #0x874
  22a3d8:	add	x2, x2, #0xe6f
  22a3dc:	add	x4, x4, #0x10e
  22a3e0:	mov	w3, #0xa1a                 	// #2586
  22a3e4:	mov	w0, wzr
  22a3e8:	bl	240790 <log_assert_failed_realm@plt>

000000000022a3ec <property_get_reboot_to_boot_loader_menu>:
  22a3ec:	sub	sp, sp, #0x40
  22a3f0:	stp	x29, x30, [sp, #32]
  22a3f4:	add	x29, sp, #0x20
  22a3f8:	mov	x8, #0xffffffffffffffff    	// #-1
  22a3fc:	stp	x20, x19, [sp, #48]
  22a400:	stur	x8, [x29, #-8]
  22a404:	cbz	x0, 22a670 <property_get_reboot_to_boot_loader_menu+0x284>
  22a408:	mov	x19, x4
  22a40c:	cbz	x4, 22a690 <property_get_reboot_to_boot_loader_menu+0x2a4>
  22a410:	cbz	x5, 22a6b4 <property_get_reboot_to_boot_loader_menu+0x2c8>
  22a414:	adrp	x0, 209000 <inhibit_what_to_string.buffer+0x209000>
  22a418:	add	x0, x0, #0xd0
  22a41c:	bl	241000 <getenv_bool@plt>
  22a420:	cmn	w0, #0x6
  22a424:	b.ne	22a4c0 <property_get_reboot_to_boot_loader_menu+0xd4>  // b.any
  22a428:	mov	x0, #0x674a                	// #26442
  22a42c:	mov	x1, #0xc7b6                	// #51126
  22a430:	movk	x0, #0x82b0, lsl #16
  22a434:	movk	x1, #0xb44, lsl #16
  22a438:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  22a43c:	movk	x0, #0x4c0a, lsl #32
  22a440:	movk	x1, #0xbb29, lsl #32
  22a444:	add	x2, x2, #0x23
  22a448:	add	x3, sp, #0x10
  22a44c:	movk	x0, #0xcf41, lsl #48
  22a450:	movk	x1, #0x4f8c, lsl #48
  22a454:	str	xzr, [sp, #16]
  22a458:	bl	241020 <efi_get_variable_string@plt>
  22a45c:	tbnz	w0, #31, 22a52c <property_get_reboot_to_boot_loader_menu+0x140>
  22a460:	ldr	x0, [sp, #16]
  22a464:	add	x1, sp, #0x8
  22a468:	bl	230704 <safe_atou64>
  22a46c:	tbnz	w0, #31, 22a5a8 <property_get_reboot_to_boot_loader_menu+0x1bc>
  22a470:	ldr	x8, [sp, #8]
  22a474:	mov	x9, #0xb5ee                	// #46574
  22a478:	movk	x9, #0xf7a0, lsl #16
  22a47c:	movk	x9, #0x10c6, lsl #32
  22a480:	cmp	x8, x9
  22a484:	b.cc	22a5ec <property_get_reboot_to_boot_loader_menu+0x200>  // b.lo, b.ul, b.last
  22a488:	mov	w0, wzr
  22a48c:	bl	240750 <log_get_max_level_realm@plt>
  22a490:	cmp	w0, #0x4
  22a494:	b.lt	22a644 <property_get_reboot_to_boot_loader_menu+0x258>  // b.tstop
  22a498:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a49c:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22a4a0:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22a4a4:	add	x2, x2, #0xe6f
  22a4a8:	add	x4, x4, #0x48d
  22a4ac:	add	x5, x5, #0x3d3
  22a4b0:	mov	w0, #0x4                   	// #4
  22a4b4:	mov	w3, #0xac7                 	// #2759
  22a4b8:	mov	w1, wzr
  22a4bc:	b	22a640 <property_get_reboot_to_boot_loader_menu+0x254>
  22a4c0:	mov	w20, w0
  22a4c4:	tbnz	w0, #31, 22a56c <property_get_reboot_to_boot_loader_menu+0x180>
  22a4c8:	cbz	w20, 22a64c <property_get_reboot_to_boot_loader_menu+0x260>
  22a4cc:	adrp	x0, 209000 <inhibit_what_to_string.buffer+0x209000>
  22a4d0:	add	x0, x0, #0xe10
  22a4d4:	add	x1, sp, #0x10
  22a4d8:	str	xzr, [sp, #16]
  22a4dc:	bl	241030 <read_one_line_file@plt>
  22a4e0:	tbnz	w0, #31, 22a600 <property_get_reboot_to_boot_loader_menu+0x214>
  22a4e4:	ldr	x0, [sp, #16]
  22a4e8:	sub	x1, x29, #0x8
  22a4ec:	bl	230704 <safe_atou64>
  22a4f0:	tbz	w0, #31, 22a644 <property_get_reboot_to_boot_loader_menu+0x258>
  22a4f4:	mov	w20, w0
  22a4f8:	mov	w0, wzr
  22a4fc:	bl	240750 <log_get_max_level_realm@plt>
  22a500:	cmp	w0, #0x4
  22a504:	b.lt	22a644 <property_get_reboot_to_boot_loader_menu+0x258>  // b.tstop
  22a508:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a50c:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22a510:	adrp	x5, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a514:	add	x2, x2, #0xe6f
  22a518:	add	x4, x4, #0x48d
  22a51c:	add	x5, x5, #0xfe0
  22a520:	mov	w0, #0x4                   	// #4
  22a524:	mov	w3, #0xada                 	// #2778
  22a528:	b	22a63c <property_get_reboot_to_boot_loader_menu+0x250>
  22a52c:	mov	w20, w0
  22a530:	cmn	w0, #0x2
  22a534:	b.eq	22a644 <property_get_reboot_to_boot_loader_menu+0x258>  // b.none
  22a538:	mov	w0, wzr
  22a53c:	bl	240750 <log_get_max_level_realm@plt>
  22a540:	cmp	w0, #0x4
  22a544:	b.lt	22a644 <property_get_reboot_to_boot_loader_menu+0x258>  // b.tstop
  22a548:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a54c:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22a550:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  22a554:	add	x2, x2, #0xe6f
  22a558:	add	x4, x4, #0x48d
  22a55c:	add	x5, x5, #0xf3
  22a560:	mov	w0, #0x4                   	// #4
  22a564:	mov	w3, #0xabf                 	// #2751
  22a568:	b	22a63c <property_get_reboot_to_boot_loader_menu+0x250>
  22a56c:	mov	w0, wzr
  22a570:	bl	240750 <log_get_max_level_realm@plt>
  22a574:	cmp	w0, #0x4
  22a578:	b.lt	22a64c <property_get_reboot_to_boot_loader_menu+0x260>  // b.tstop
  22a57c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a580:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22a584:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  22a588:	add	x2, x2, #0xe6f
  22a58c:	add	x4, x4, #0x48d
  22a590:	add	x5, x5, #0xb76
  22a594:	mov	w0, #0x4                   	// #4
  22a598:	mov	w3, #0xacd                 	// #2765
  22a59c:	mov	w1, w20
  22a5a0:	bl	240770 <log_internal_realm@plt>
  22a5a4:	b	22a64c <property_get_reboot_to_boot_loader_menu+0x260>
  22a5a8:	mov	w20, w0
  22a5ac:	mov	w0, wzr
  22a5b0:	bl	240750 <log_get_max_level_realm@plt>
  22a5b4:	cmp	w0, #0x4
  22a5b8:	b.lt	22a644 <property_get_reboot_to_boot_loader_menu+0x258>  // b.tstop
  22a5bc:	ldr	x6, [sp, #16]
  22a5c0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a5c4:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22a5c8:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22a5cc:	add	x2, x2, #0xe6f
  22a5d0:	add	x4, x4, #0x48d
  22a5d4:	add	x5, x5, #0xb7a
  22a5d8:	mov	w0, #0x4                   	// #4
  22a5dc:	mov	w3, #0xac5                 	// #2757
  22a5e0:	mov	w1, w20
  22a5e4:	bl	240770 <log_internal_realm@plt>
  22a5e8:	b	22a644 <property_get_reboot_to_boot_loader_menu+0x258>
  22a5ec:	mov	w9, #0x4240                	// #16960
  22a5f0:	movk	w9, #0xf, lsl #16
  22a5f4:	mul	x8, x8, x9
  22a5f8:	stur	x8, [x29, #-8]
  22a5fc:	b	22a644 <property_get_reboot_to_boot_loader_menu+0x258>
  22a600:	mov	w20, w0
  22a604:	cmn	w0, #0x2
  22a608:	b.eq	22a644 <property_get_reboot_to_boot_loader_menu+0x258>  // b.none
  22a60c:	mov	w0, wzr
  22a610:	bl	240750 <log_get_max_level_realm@plt>
  22a614:	cmp	w0, #0x4
  22a618:	b.lt	22a644 <property_get_reboot_to_boot_loader_menu+0x258>  // b.tstop
  22a61c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a620:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22a624:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22a628:	add	x2, x2, #0xe6f
  22a62c:	add	x4, x4, #0x48d
  22a630:	add	x5, x5, #0x406
  22a634:	mov	w0, #0x4                   	// #4
  22a638:	mov	w3, #0xad6                 	// #2774
  22a63c:	mov	w1, w20
  22a640:	bl	240770 <log_internal_realm@plt>
  22a644:	add	x0, sp, #0x10
  22a648:	bl	229b20 <freep>
  22a64c:	ldur	x2, [x29, #-8]
  22a650:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  22a654:	add	x1, x1, #0xfe8
  22a658:	mov	x0, x19
  22a65c:	bl	240ff0 <sd_bus_message_append@plt>
  22a660:	ldp	x20, x19, [sp, #48]
  22a664:	ldp	x29, x30, [sp, #32]
  22a668:	add	sp, sp, #0x40
  22a66c:	ret
  22a670:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22a674:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a678:	adrp	x4, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a67c:	add	x1, x1, #0x887
  22a680:	add	x2, x2, #0xe6f
  22a684:	add	x4, x4, #0xf56
  22a688:	mov	w3, #0xaad                 	// #2733
  22a68c:	bl	240790 <log_assert_failed_realm@plt>
  22a690:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22a694:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a698:	adrp	x4, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a69c:	add	x1, x1, #0xbb3
  22a6a0:	add	x2, x2, #0xe6f
  22a6a4:	add	x4, x4, #0xf56
  22a6a8:	mov	w3, #0xaae                 	// #2734
  22a6ac:	mov	w0, wzr
  22a6b0:	bl	240790 <log_assert_failed_realm@plt>
  22a6b4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22a6b8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a6bc:	adrp	x4, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a6c0:	add	x1, x1, #0x874
  22a6c4:	add	x2, x2, #0xe6f
  22a6c8:	add	x4, x4, #0xf56
  22a6cc:	mov	w3, #0xaaf                 	// #2735
  22a6d0:	mov	w0, wzr
  22a6d4:	bl	240790 <log_assert_failed_realm@plt>

000000000022a6d8 <property_get_reboot_to_boot_loader_entry>:
  22a6d8:	sub	sp, sp, #0x30
  22a6dc:	stp	x29, x30, [sp, #16]
  22a6e0:	stp	x20, x19, [sp, #32]
  22a6e4:	add	x29, sp, #0x10
  22a6e8:	str	xzr, [sp, #8]
  22a6ec:	cbz	x0, 22a8f0 <property_get_reboot_to_boot_loader_entry+0x218>
  22a6f0:	mov	x19, x4
  22a6f4:	cbz	x4, 22a910 <property_get_reboot_to_boot_loader_entry+0x238>
  22a6f8:	cbz	x5, 22a934 <property_get_reboot_to_boot_loader_entry+0x25c>
  22a6fc:	adrp	x0, 209000 <inhibit_what_to_string.buffer+0x209000>
  22a700:	add	x0, x0, #0xe38
  22a704:	bl	241000 <getenv_bool@plt>
  22a708:	cmn	w0, #0x6
  22a70c:	b.ne	22a790 <property_get_reboot_to_boot_loader_entry+0xb8>  // b.any
  22a710:	mov	x0, #0x674a                	// #26442
  22a714:	mov	x1, #0xc7b6                	// #51126
  22a718:	movk	x0, #0x82b0, lsl #16
  22a71c:	movk	x1, #0xb44, lsl #16
  22a720:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22a724:	movk	x0, #0x4c0a, lsl #32
  22a728:	movk	x1, #0xbb29, lsl #32
  22a72c:	add	x2, x2, #0xbb4
  22a730:	add	x3, sp, #0x8
  22a734:	movk	x0, #0xcf41, lsl #48
  22a738:	movk	x1, #0x4f8c, lsl #48
  22a73c:	bl	241020 <efi_get_variable_string@plt>
  22a740:	tbnz	w0, #31, 22a804 <property_get_reboot_to_boot_loader_entry+0x12c>
  22a744:	ldr	x0, [sp, #8]
  22a748:	bl	241040 <efi_loader_entry_name_valid@plt>
  22a74c:	tbnz	w0, #0, 22a87c <property_get_reboot_to_boot_loader_entry+0x1a4>
  22a750:	mov	w0, wzr
  22a754:	bl	240750 <log_get_max_level_realm@plt>
  22a758:	cmp	w0, #0x4
  22a75c:	b.lt	22a7f4 <property_get_reboot_to_boot_loader_entry+0x11c>  // b.tstop
  22a760:	ldr	x6, [sp, #8]
  22a764:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a768:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22a76c:	adrp	x5, 211000 <inhibit_what_to_string.buffer+0x211000>
  22a770:	add	x2, x2, #0xe6f
  22a774:	add	x4, x4, #0x1ce
  22a778:	add	x5, x5, #0x97
  22a77c:	mov	w0, #0x4                   	// #4
  22a780:	mov	w3, #0xb77                 	// #2935
  22a784:	mov	w1, wzr
  22a788:	bl	240770 <log_internal_realm@plt>
  22a78c:	b	22a7f4 <property_get_reboot_to_boot_loader_entry+0x11c>
  22a790:	mov	w20, w0
  22a794:	tbnz	w0, #31, 22a844 <property_get_reboot_to_boot_loader_entry+0x16c>
  22a798:	cbz	w20, 22a87c <property_get_reboot_to_boot_loader_entry+0x1a4>
  22a79c:	adrp	x0, 208000 <inhibit_what_to_string.buffer+0x208000>
  22a7a0:	add	x0, x0, #0xaf4
  22a7a4:	add	x1, sp, #0x8
  22a7a8:	bl	241030 <read_one_line_file@plt>
  22a7ac:	tbnz	w0, #31, 22a8b0 <property_get_reboot_to_boot_loader_entry+0x1d8>
  22a7b0:	ldr	x0, [sp, #8]
  22a7b4:	bl	241040 <efi_loader_entry_name_valid@plt>
  22a7b8:	tbnz	w0, #0, 22a87c <property_get_reboot_to_boot_loader_entry+0x1a4>
  22a7bc:	mov	w0, wzr
  22a7c0:	bl	240750 <log_get_max_level_realm@plt>
  22a7c4:	cmp	w0, #0x4
  22a7c8:	b.lt	22a7f4 <property_get_reboot_to_boot_loader_entry+0x11c>  // b.tstop
  22a7cc:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a7d0:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22a7d4:	adrp	x5, 210000 <inhibit_what_to_string.buffer+0x210000>
  22a7d8:	add	x2, x2, #0xe6f
  22a7dc:	add	x4, x4, #0x1ce
  22a7e0:	add	x5, x5, #0xea
  22a7e4:	mov	w0, #0x4                   	// #4
  22a7e8:	mov	w3, #0xb85                 	// #2949
  22a7ec:	mov	w1, wzr
  22a7f0:	bl	240770 <log_internal_realm@plt>
  22a7f4:	ldr	x0, [sp, #8]
  22a7f8:	bl	22f1b8 <mfree>
  22a7fc:	str	xzr, [sp, #8]
  22a800:	b	22a87c <property_get_reboot_to_boot_loader_entry+0x1a4>
  22a804:	mov	w20, w0
  22a808:	cmn	w0, #0x2
  22a80c:	b.eq	22a87c <property_get_reboot_to_boot_loader_entry+0x1a4>  // b.none
  22a810:	mov	w0, wzr
  22a814:	bl	240750 <log_get_max_level_realm@plt>
  22a818:	cmp	w0, #0x4
  22a81c:	b.lt	22a87c <property_get_reboot_to_boot_loader_entry+0x1a4>  // b.tstop
  22a820:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a824:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22a828:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22a82c:	add	x2, x2, #0xe6f
  22a830:	add	x4, x4, #0x1ce
  22a834:	add	x5, x5, #0xfda
  22a838:	mov	w0, #0x4                   	// #4
  22a83c:	mov	w3, #0xb75                 	// #2933
  22a840:	b	22a874 <property_get_reboot_to_boot_loader_entry+0x19c>
  22a844:	mov	w0, wzr
  22a848:	bl	240750 <log_get_max_level_realm@plt>
  22a84c:	cmp	w0, #0x4
  22a850:	b.lt	22a87c <property_get_reboot_to_boot_loader_entry+0x1a4>  // b.tstop
  22a854:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a858:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22a85c:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22a860:	add	x2, x2, #0xe6f
  22a864:	add	x4, x4, #0x1ce
  22a868:	add	x5, x5, #0x6fa
  22a86c:	mov	w0, #0x4                   	// #4
  22a870:	mov	w3, #0xb7b                 	// #2939
  22a874:	mov	w1, w20
  22a878:	bl	240770 <log_internal_realm@plt>
  22a87c:	ldr	x2, [sp, #8]
  22a880:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22a884:	add	x1, x1, #0x6de
  22a888:	mov	x0, x19
  22a88c:	bl	240ff0 <sd_bus_message_append@plt>
  22a890:	mov	w19, w0
  22a894:	add	x0, sp, #0x8
  22a898:	bl	229b20 <freep>
  22a89c:	mov	w0, w19
  22a8a0:	ldp	x20, x19, [sp, #32]
  22a8a4:	ldp	x29, x30, [sp, #16]
  22a8a8:	add	sp, sp, #0x30
  22a8ac:	ret
  22a8b0:	mov	w20, w0
  22a8b4:	cmn	w0, #0x2
  22a8b8:	b.eq	22a87c <property_get_reboot_to_boot_loader_entry+0x1a4>  // b.none
  22a8bc:	mov	w0, wzr
  22a8c0:	bl	240750 <log_get_max_level_realm@plt>
  22a8c4:	cmp	w0, #0x4
  22a8c8:	b.lt	22a87c <property_get_reboot_to_boot_loader_entry+0x1a4>  // b.tstop
  22a8cc:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a8d0:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22a8d4:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22a8d8:	add	x2, x2, #0xe6f
  22a8dc:	add	x4, x4, #0x1ce
  22a8e0:	add	x5, x5, #0xbe8
  22a8e4:	mov	w0, #0x4                   	// #4
  22a8e8:	mov	w3, #0xb83                 	// #2947
  22a8ec:	b	22a874 <property_get_reboot_to_boot_loader_entry+0x19c>
  22a8f0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22a8f4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a8f8:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22a8fc:	add	x1, x1, #0x887
  22a900:	add	x2, x2, #0xe6f
  22a904:	add	x4, x4, #0x5f
  22a908:	mov	w3, #0xb6a                 	// #2922
  22a90c:	bl	240790 <log_assert_failed_realm@plt>
  22a910:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22a914:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a918:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22a91c:	add	x1, x1, #0xbb3
  22a920:	add	x2, x2, #0xe6f
  22a924:	add	x4, x4, #0x5f
  22a928:	mov	w3, #0xb6b                 	// #2923
  22a92c:	mov	w0, wzr
  22a930:	bl	240790 <log_assert_failed_realm@plt>
  22a934:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22a938:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22a93c:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22a940:	add	x1, x1, #0x874
  22a944:	add	x2, x2, #0xe6f
  22a948:	add	x4, x4, #0x5f
  22a94c:	mov	w3, #0xb6c                 	// #2924
  22a950:	mov	w0, wzr
  22a954:	bl	240790 <log_assert_failed_realm@plt>

000000000022a958 <property_get_boot_loader_entries>:
  22a958:	sub	sp, sp, #0xa0
  22a95c:	movi	v0.2d, #0x0
  22a960:	stp	x29, x30, [sp, #96]
  22a964:	str	x23, [sp, #112]
  22a968:	stp	x22, x21, [sp, #128]
  22a96c:	stp	x20, x19, [sp, #144]
  22a970:	add	x29, sp, #0x60
  22a974:	str	xzr, [sp, #80]
  22a978:	stp	q0, q0, [sp, #48]
  22a97c:	stp	q0, q0, [sp, #16]
  22a980:	str	q0, [sp]
  22a984:	cbz	x0, 22aa54 <property_get_boot_loader_entries+0xfc>
  22a988:	mov	x19, x4
  22a98c:	cbz	x4, 22aa74 <property_get_boot_loader_entries+0x11c>
  22a990:	cbz	x5, 22aa98 <property_get_boot_loader_entries+0x140>
  22a994:	mov	x2, sp
  22a998:	mov	x0, xzr
  22a99c:	mov	x1, xzr
  22a9a0:	bl	241050 <boot_entries_load_config_auto@plt>
  22a9a4:	tbz	w0, #31, 22a9b4 <property_get_boot_loader_entries+0x5c>
  22a9a8:	mov	w20, w0
  22a9ac:	cmn	w0, #0x7e
  22a9b0:	b.ne	22aa30 <property_get_boot_loader_entries+0xd8>  // b.any
  22a9b4:	mov	x0, sp
  22a9b8:	mov	w1, #0x1                   	// #1
  22a9bc:	bl	241060 <boot_entries_augment_from_loader@plt>
  22a9c0:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  22a9c4:	add	x2, x2, #0x6de
  22a9c8:	mov	w1, #0x61                  	// #97
  22a9cc:	mov	x0, x19
  22a9d0:	bl	241070 <sd_bus_message_open_container@plt>
  22a9d4:	tbnz	w0, #31, 22aa2c <property_get_boot_loader_entries+0xd4>
  22a9d8:	ldr	x8, [sp, #72]
  22a9dc:	cbz	x8, 22aa24 <property_get_boot_loader_entries+0xcc>
  22a9e0:	adrp	x21, 209000 <inhibit_what_to_string.buffer+0x209000>
  22a9e4:	mov	x22, xzr
  22a9e8:	mov	w23, #0x8                   	// #8
  22a9ec:	add	x21, x21, #0x6de
  22a9f0:	ldr	x8, [sp, #64]
  22a9f4:	mov	x0, x19
  22a9f8:	mov	x1, x21
  22a9fc:	ldr	x2, [x8, x23]
  22aa00:	bl	240ff0 <sd_bus_message_append@plt>
  22aa04:	cmp	w0, #0x0
  22aa08:	csel	w20, w0, w20, lt  // lt = tstop
  22aa0c:	tbnz	w0, #31, 22aa30 <property_get_boot_loader_entries+0xd8>
  22aa10:	ldr	x8, [sp, #72]
  22aa14:	add	x22, x22, #0x1
  22aa18:	add	x23, x23, #0x70
  22aa1c:	cmp	x22, x8
  22aa20:	b.cc	22a9f0 <property_get_boot_loader_entries+0x98>  // b.lo, b.ul, b.last
  22aa24:	mov	x0, x19
  22aa28:	bl	241080 <sd_bus_message_close_container@plt>
  22aa2c:	mov	w20, w0
  22aa30:	mov	x0, sp
  22aa34:	bl	241090 <boot_config_free@plt>
  22aa38:	mov	w0, w20
  22aa3c:	ldp	x20, x19, [sp, #144]
  22aa40:	ldp	x22, x21, [sp, #128]
  22aa44:	ldr	x23, [sp, #112]
  22aa48:	ldp	x29, x30, [sp, #96]
  22aa4c:	add	sp, sp, #0xa0
  22aa50:	ret
  22aa54:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22aa58:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22aa5c:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22aa60:	add	x1, x1, #0x887
  22aa64:	add	x2, x2, #0xe6f
  22aa68:	add	x4, x4, #0x8c2
  22aa6c:	mov	w3, #0xc2a                 	// #3114
  22aa70:	bl	240790 <log_assert_failed_realm@plt>
  22aa74:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22aa78:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22aa7c:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22aa80:	add	x1, x1, #0xbb3
  22aa84:	add	x2, x2, #0xe6f
  22aa88:	add	x4, x4, #0x8c2
  22aa8c:	mov	w3, #0xc2b                 	// #3115
  22aa90:	mov	w0, wzr
  22aa94:	bl	240790 <log_assert_failed_realm@plt>
  22aa98:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22aa9c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22aaa0:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22aaa4:	add	x1, x1, #0x874
  22aaa8:	add	x2, x2, #0xe6f
  22aaac:	add	x4, x4, #0x8c2
  22aab0:	mov	w3, #0xc2c                 	// #3116
  22aab4:	mov	w0, wzr
  22aab8:	bl	240790 <log_assert_failed_realm@plt>

000000000022aabc <property_get_idle_hint>:
  22aabc:	stp	x29, x30, [sp, #-32]!
  22aac0:	str	x19, [sp, #16]
  22aac4:	mov	x29, sp
  22aac8:	cbz	x0, 22ab08 <property_get_idle_hint+0x4c>
  22aacc:	mov	x19, x4
  22aad0:	cbz	x4, 22ab28 <property_get_idle_hint+0x6c>
  22aad4:	cbz	x5, 22ab4c <property_get_idle_hint+0x90>
  22aad8:	mov	x0, x5
  22aadc:	mov	x1, xzr
  22aae0:	bl	22817c <manager_get_idle_hint>
  22aae4:	cmp	w0, #0x0
  22aae8:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22aaec:	cset	w2, gt
  22aaf0:	add	x1, x1, #0xb8c
  22aaf4:	mov	x0, x19
  22aaf8:	bl	240ff0 <sd_bus_message_append@plt>
  22aafc:	ldr	x19, [sp, #16]
  22ab00:	ldp	x29, x30, [sp], #32
  22ab04:	ret
  22ab08:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22ab0c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ab10:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22ab14:	add	x1, x1, #0x887
  22ab18:	add	x2, x2, #0xe6f
  22ab1c:	add	x4, x4, #0x1a6
  22ab20:	mov	w3, #0xf9                  	// #249
  22ab24:	bl	240790 <log_assert_failed_realm@plt>
  22ab28:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22ab2c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ab30:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22ab34:	add	x1, x1, #0xbb3
  22ab38:	add	x2, x2, #0xe6f
  22ab3c:	add	x4, x4, #0x1a6
  22ab40:	mov	w3, #0xfa                  	// #250
  22ab44:	mov	w0, wzr
  22ab48:	bl	240790 <log_assert_failed_realm@plt>
  22ab4c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22ab50:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ab54:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22ab58:	add	x1, x1, #0x102
  22ab5c:	add	x2, x2, #0xe6f
  22ab60:	add	x4, x4, #0x1a6
  22ab64:	mov	w3, #0xfb                  	// #251
  22ab68:	mov	w0, wzr
  22ab6c:	bl	240790 <log_assert_failed_realm@plt>

000000000022ab70 <property_get_idle_since_hint>:
  22ab70:	sub	sp, sp, #0x40
  22ab74:	stp	x29, x30, [sp, #16]
  22ab78:	str	x21, [sp, #32]
  22ab7c:	stp	x20, x19, [sp, #48]
  22ab80:	add	x29, sp, #0x10
  22ab84:	stp	xzr, xzr, [sp]
  22ab88:	cbz	x0, 22abf0 <property_get_idle_since_hint+0x80>
  22ab8c:	mov	x19, x4
  22ab90:	cbz	x4, 22ac10 <property_get_idle_since_hint+0xa0>
  22ab94:	cbz	x5, 22ac34 <property_get_idle_since_hint+0xc4>
  22ab98:	mov	x1, sp
  22ab9c:	mov	x0, x5
  22aba0:	mov	x20, x3
  22aba4:	mov	x21, sp
  22aba8:	bl	22817c <manager_get_idle_hint>
  22abac:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  22abb0:	add	x1, x1, #0xbea
  22abb4:	mov	x0, x20
  22abb8:	bl	240c30 <strcmp@plt>
  22abbc:	add	x8, x21, #0x8
  22abc0:	cmp	w0, #0x0
  22abc4:	csel	x8, x21, x8, eq  // eq = none
  22abc8:	ldr	x2, [x8]
  22abcc:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  22abd0:	add	x1, x1, #0xfe8
  22abd4:	mov	x0, x19
  22abd8:	bl	240ff0 <sd_bus_message_append@plt>
  22abdc:	ldp	x20, x19, [sp, #48]
  22abe0:	ldr	x21, [sp, #32]
  22abe4:	ldp	x29, x30, [sp, #16]
  22abe8:	add	sp, sp, #0x40
  22abec:	ret
  22abf0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22abf4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22abf8:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22abfc:	add	x1, x1, #0x887
  22ac00:	add	x2, x2, #0xe6f
  22ac04:	add	x4, x4, #0x66c
  22ac08:	mov	w3, #0x10c                 	// #268
  22ac0c:	bl	240790 <log_assert_failed_realm@plt>
  22ac10:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22ac14:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ac18:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22ac1c:	add	x1, x1, #0xbb3
  22ac20:	add	x2, x2, #0xe6f
  22ac24:	add	x4, x4, #0x66c
  22ac28:	mov	w3, #0x10d                 	// #269
  22ac2c:	mov	w0, wzr
  22ac30:	bl	240790 <log_assert_failed_realm@plt>
  22ac34:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22ac38:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ac3c:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22ac40:	add	x1, x1, #0x102
  22ac44:	add	x2, x2, #0xe6f
  22ac48:	add	x4, x4, #0x66c
  22ac4c:	mov	w3, #0x10e                 	// #270
  22ac50:	mov	w0, wzr
  22ac54:	bl	240790 <log_assert_failed_realm@plt>

000000000022ac58 <property_get_inhibited>:
  22ac58:	stp	x29, x30, [sp, #-32]!
  22ac5c:	stp	x20, x19, [sp, #16]
  22ac60:	mov	x29, sp
  22ac64:	cbz	x0, 22acbc <property_get_inhibited+0x64>
  22ac68:	mov	x19, x4
  22ac6c:	cbz	x4, 22acdc <property_get_inhibited+0x84>
  22ac70:	mov	x20, x5
  22ac74:	cbz	x5, 22ad00 <property_get_inhibited+0xa8>
  22ac78:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22ac7c:	add	x1, x1, #0x7d2
  22ac80:	mov	x0, x3
  22ac84:	bl	240c30 <strcmp@plt>
  22ac88:	cmp	w0, #0x0
  22ac8c:	cset	w1, ne  // ne = any
  22ac90:	mov	x0, x20
  22ac94:	bl	232f30 <manager_inhibit_what>
  22ac98:	bl	2331e8 <inhibit_what_to_string>
  22ac9c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22aca0:	mov	x2, x0
  22aca4:	add	x1, x1, #0x6de
  22aca8:	mov	x0, x19
  22acac:	bl	240ff0 <sd_bus_message_append@plt>
  22acb0:	ldp	x20, x19, [sp, #16]
  22acb4:	ldp	x29, x30, [sp], #32
  22acb8:	ret
  22acbc:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22acc0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22acc4:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22acc8:	add	x1, x1, #0x887
  22accc:	add	x2, x2, #0xe6f
  22acd0:	add	x4, x4, #0xcb3
  22acd4:	mov	w3, #0x121                 	// #289
  22acd8:	bl	240790 <log_assert_failed_realm@plt>
  22acdc:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22ace0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ace4:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22ace8:	add	x1, x1, #0xbb3
  22acec:	add	x2, x2, #0xe6f
  22acf0:	add	x4, x4, #0xcb3
  22acf4:	mov	w3, #0x122                 	// #290
  22acf8:	mov	w0, wzr
  22acfc:	bl	240790 <log_assert_failed_realm@plt>
  22ad00:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22ad04:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ad08:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22ad0c:	add	x1, x1, #0x102
  22ad10:	add	x2, x2, #0xe6f
  22ad14:	add	x4, x4, #0xcb3
  22ad18:	mov	w3, #0x123                 	// #291
  22ad1c:	mov	w0, wzr
  22ad20:	bl	240790 <log_assert_failed_realm@plt>

000000000022ad24 <property_get_handle_action>:
  22ad24:	stp	x29, x30, [sp, #-32]!
  22ad28:	str	x19, [sp, #16]
  22ad2c:	mov	x29, sp
  22ad30:	cbz	x0, 22ad68 <property_get_handle_action+0x44>
  22ad34:	mov	x19, x4
  22ad38:	cbz	x4, 22ad88 <property_get_handle_action+0x64>
  22ad3c:	cbz	x5, 22ad94 <property_get_handle_action+0x70>
  22ad40:	ldr	w0, [x5]
  22ad44:	bl	2264a8 <handle_action_to_string>
  22ad48:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22ad4c:	mov	x2, x0
  22ad50:	add	x1, x1, #0x6de
  22ad54:	mov	x0, x19
  22ad58:	bl	240ff0 <sd_bus_message_append@plt>
  22ad5c:	ldr	x19, [sp, #16]
  22ad60:	ldp	x29, x30, [sp], #32
  22ad64:	ret
  22ad68:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22ad6c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ad70:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  22ad74:	add	x1, x1, #0x887
  22ad78:	add	x2, x2, #0xe6f
  22ad7c:	add	x4, x4, #0x4ec
  22ad80:	mov	w3, #0x15d                 	// #349
  22ad84:	bl	240790 <log_assert_failed_realm@plt>
  22ad88:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22ad8c:	add	x1, x1, #0xbb3
  22ad90:	b	22ad9c <property_get_handle_action+0x78>
  22ad94:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22ad98:	add	x1, x1, #0xb87
  22ad9c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ada0:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  22ada4:	add	x2, x2, #0xe6f
  22ada8:	add	x4, x4, #0x4ec
  22adac:	mov	w3, #0x15d                 	// #349
  22adb0:	mov	w0, wzr
  22adb4:	bl	240790 <log_assert_failed_realm@plt>

000000000022adb8 <property_get_preparing>:
  22adb8:	stp	x29, x30, [sp, #-32]!
  22adbc:	stp	x20, x19, [sp, #16]
  22adc0:	mov	x29, sp
  22adc4:	cbz	x0, 22ae1c <property_get_preparing+0x64>
  22adc8:	mov	x19, x4
  22adcc:	cbz	x4, 22ae3c <property_get_preparing+0x84>
  22add0:	mov	x20, x5
  22add4:	cbz	x5, 22ae60 <property_get_preparing+0xa8>
  22add8:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22addc:	add	x1, x1, #0x759
  22ade0:	mov	x0, x3
  22ade4:	bl	240c30 <strcmp@plt>
  22ade8:	ldr	w8, [x20, #248]
  22adec:	cmp	w0, #0x0
  22adf0:	mov	w9, #0x1                   	// #1
  22adf4:	cinc	w9, w9, ne  // ne = any
  22adf8:	tst	w9, w8
  22adfc:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22ae00:	cset	w2, ne  // ne = any
  22ae04:	add	x1, x1, #0xb8c
  22ae08:	mov	x0, x19
  22ae0c:	bl	240ff0 <sd_bus_message_append@plt>
  22ae10:	ldp	x20, x19, [sp, #16]
  22ae14:	ldp	x29, x30, [sp], #32
  22ae18:	ret
  22ae1c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22ae20:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ae24:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  22ae28:	add	x1, x1, #0x887
  22ae2c:	add	x2, x2, #0xe6f
  22ae30:	add	x4, x4, #0x6be
  22ae34:	mov	w3, #0x136                 	// #310
  22ae38:	bl	240790 <log_assert_failed_realm@plt>
  22ae3c:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22ae40:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ae44:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  22ae48:	add	x1, x1, #0xbb3
  22ae4c:	add	x2, x2, #0xe6f
  22ae50:	add	x4, x4, #0x6be
  22ae54:	mov	w3, #0x137                 	// #311
  22ae58:	mov	w0, wzr
  22ae5c:	bl	240790 <log_assert_failed_realm@plt>
  22ae60:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22ae64:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ae68:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  22ae6c:	add	x1, x1, #0x102
  22ae70:	add	x2, x2, #0xe6f
  22ae74:	add	x4, x4, #0x6be
  22ae78:	mov	w3, #0x138                 	// #312
  22ae7c:	mov	w0, wzr
  22ae80:	bl	240790 <log_assert_failed_realm@plt>

000000000022ae84 <property_get_scheduled_shutdown>:
  22ae84:	stp	x29, x30, [sp, #-32]!
  22ae88:	stp	x20, x19, [sp, #16]
  22ae8c:	mov	x29, sp
  22ae90:	cbz	x0, 22aee8 <property_get_scheduled_shutdown+0x64>
  22ae94:	mov	x19, x4
  22ae98:	cbz	x4, 22af08 <property_get_scheduled_shutdown+0x84>
  22ae9c:	mov	x20, x5
  22aea0:	cbz	x5, 22af2c <property_get_scheduled_shutdown+0xa8>
  22aea4:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22aea8:	add	x2, x2, #0x6b9
  22aeac:	mov	w1, #0x72                  	// #114
  22aeb0:	mov	x0, x19
  22aeb4:	bl	241070 <sd_bus_message_open_container@plt>
  22aeb8:	tbnz	w0, #31, 22aedc <property_get_scheduled_shutdown+0x58>
  22aebc:	ldp	x2, x3, [x20, #280]
  22aec0:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22aec4:	add	x1, x1, #0x6b9
  22aec8:	mov	x0, x19
  22aecc:	bl	240ff0 <sd_bus_message_append@plt>
  22aed0:	tbnz	w0, #31, 22aedc <property_get_scheduled_shutdown+0x58>
  22aed4:	mov	x0, x19
  22aed8:	bl	241080 <sd_bus_message_close_container@plt>
  22aedc:	ldp	x20, x19, [sp, #16]
  22aee0:	ldp	x29, x30, [sp], #32
  22aee4:	ret
  22aee8:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22aeec:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22aef0:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22aef4:	add	x1, x1, #0x887
  22aef8:	add	x2, x2, #0xe6f
  22aefc:	add	x4, x4, #0x501
  22af00:	mov	w3, #0x14e                 	// #334
  22af04:	bl	240790 <log_assert_failed_realm@plt>
  22af08:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22af0c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22af10:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22af14:	add	x1, x1, #0xbb3
  22af18:	add	x2, x2, #0xe6f
  22af1c:	add	x4, x4, #0x501
  22af20:	mov	w3, #0x14f                 	// #335
  22af24:	mov	w0, wzr
  22af28:	bl	240790 <log_assert_failed_realm@plt>
  22af2c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22af30:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22af34:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22af38:	add	x1, x1, #0x102
  22af3c:	add	x2, x2, #0xe6f
  22af40:	add	x4, x4, #0x501
  22af44:	mov	w3, #0x150                 	// #336
  22af48:	mov	w0, wzr
  22af4c:	bl	240790 <log_assert_failed_realm@plt>

000000000022af50 <property_get_docked>:
  22af50:	stp	x29, x30, [sp, #-32]!
  22af54:	str	x19, [sp, #16]
  22af58:	mov	x29, sp
  22af5c:	cbz	x0, 22af94 <property_get_docked+0x44>
  22af60:	mov	x19, x4
  22af64:	cbz	x4, 22afb4 <property_get_docked+0x64>
  22af68:	cbz	x5, 22afc0 <property_get_docked+0x70>
  22af6c:	mov	x0, x5
  22af70:	bl	22881c <manager_is_docked_or_external_displays>
  22af74:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22af78:	and	w2, w0, #0x1
  22af7c:	add	x1, x1, #0xb8c
  22af80:	mov	x0, x19
  22af84:	bl	240ff0 <sd_bus_message_append@plt>
  22af88:	ldr	x19, [sp, #16]
  22af8c:	ldp	x29, x30, [sp], #32
  22af90:	ret
  22af94:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22af98:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22af9c:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22afa0:	add	x1, x1, #0x887
  22afa4:	add	x2, x2, #0xe6f
  22afa8:	add	x4, x4, #0xbcd
  22afac:	mov	w3, #0x15e                 	// #350
  22afb0:	bl	240790 <log_assert_failed_realm@plt>
  22afb4:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22afb8:	add	x1, x1, #0xbb3
  22afbc:	b	22afc8 <property_get_docked+0x78>
  22afc0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22afc4:	add	x1, x1, #0xb87
  22afc8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22afcc:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22afd0:	add	x2, x2, #0xe6f
  22afd4:	add	x4, x4, #0xbcd
  22afd8:	mov	w3, #0x15e                 	// #350
  22afdc:	mov	w0, wzr
  22afe0:	bl	240790 <log_assert_failed_realm@plt>

000000000022afe4 <property_get_lid_closed>:
  22afe4:	stp	x29, x30, [sp, #-32]!
  22afe8:	str	x19, [sp, #16]
  22afec:	mov	x29, sp
  22aff0:	cbz	x0, 22b028 <property_get_lid_closed+0x44>
  22aff4:	mov	x19, x4
  22aff8:	cbz	x4, 22b048 <property_get_lid_closed+0x64>
  22affc:	cbz	x5, 22b054 <property_get_lid_closed+0x70>
  22b000:	mov	x0, x5
  22b004:	bl	2287c0 <manager_is_lid_closed>
  22b008:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22b00c:	and	w2, w0, #0x1
  22b010:	add	x1, x1, #0xb8c
  22b014:	mov	x0, x19
  22b018:	bl	240ff0 <sd_bus_message_append@plt>
  22b01c:	ldr	x19, [sp, #16]
  22b020:	ldp	x29, x30, [sp], #32
  22b024:	ret
  22b028:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22b02c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b030:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22b034:	add	x1, x1, #0x887
  22b038:	add	x2, x2, #0xe6f
  22b03c:	add	x4, x4, #0xe5c
  22b040:	mov	w3, #0x15f                 	// #351
  22b044:	bl	240790 <log_assert_failed_realm@plt>
  22b048:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22b04c:	add	x1, x1, #0xbb3
  22b050:	b	22b05c <property_get_lid_closed+0x78>
  22b054:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22b058:	add	x1, x1, #0xb87
  22b05c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b060:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22b064:	add	x2, x2, #0xe6f
  22b068:	add	x4, x4, #0xe5c
  22b06c:	mov	w3, #0x15f                 	// #351
  22b070:	mov	w0, wzr
  22b074:	bl	240790 <log_assert_failed_realm@plt>

000000000022b078 <property_get_on_external_power>:
  22b078:	stp	x29, x30, [sp, #-16]!
  22b07c:	mov	x29, sp
  22b080:	cbz	x0, 22b0a8 <property_get_on_external_power+0x30>
  22b084:	cbz	x4, 22b0c8 <property_get_on_external_power+0x50>
  22b088:	adrp	x2, 254000 <session_vtable+0x3d0>
  22b08c:	ldr	x2, [x2, #3368]
  22b090:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22b094:	add	x1, x1, #0xb8c
  22b098:	mov	x0, x4
  22b09c:	bl	240ff0 <sd_bus_message_append@plt>
  22b0a0:	ldp	x29, x30, [sp], #16
  22b0a4:	ret
  22b0a8:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22b0ac:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b0b0:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22b0b4:	add	x1, x1, #0x887
  22b0b8:	add	x2, x2, #0xe6f
  22b0bc:	add	x4, x4, #0xbc7
  22b0c0:	mov	w3, #0x160                 	// #352
  22b0c4:	bl	240790 <log_assert_failed_realm@plt>
  22b0c8:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22b0cc:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b0d0:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22b0d4:	add	x1, x1, #0xbb3
  22b0d8:	add	x2, x2, #0xe6f
  22b0dc:	add	x4, x4, #0xbc7
  22b0e0:	mov	w3, #0x160                 	// #352
  22b0e4:	mov	w0, wzr
  22b0e8:	bl	240790 <log_assert_failed_realm@plt>

000000000022b0ec <property_get_hashmap_size>:
  22b0ec:	stp	x29, x30, [sp, #-32]!
  22b0f0:	str	x19, [sp, #16]
  22b0f4:	mov	x29, sp
  22b0f8:	cbz	x0, 22b130 <property_get_hashmap_size+0x44>
  22b0fc:	mov	x19, x4
  22b100:	cbz	x4, 22b150 <property_get_hashmap_size+0x64>
  22b104:	cbz	x5, 22b15c <property_get_hashmap_size+0x70>
  22b108:	ldr	x0, [x5]
  22b10c:	bl	230718 <hashmap_size>
  22b110:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  22b114:	mov	w2, w0
  22b118:	add	x1, x1, #0xfe8
  22b11c:	mov	x0, x19
  22b120:	bl	240ff0 <sd_bus_message_append@plt>
  22b124:	ldr	x19, [sp, #16]
  22b128:	ldp	x29, x30, [sp], #32
  22b12c:	ret
  22b130:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22b134:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b138:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22b13c:	add	x1, x1, #0x887
  22b140:	add	x2, x2, #0xe6f
  22b144:	add	x4, x4, #0x12a
  22b148:	mov	w3, #0x162                 	// #354
  22b14c:	bl	240790 <log_assert_failed_realm@plt>
  22b150:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22b154:	add	x1, x1, #0xbb3
  22b158:	b	22b164 <property_get_hashmap_size+0x78>
  22b15c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22b160:	add	x1, x1, #0xb87
  22b164:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b168:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22b16c:	add	x2, x2, #0xe6f
  22b170:	add	x4, x4, #0x12a
  22b174:	mov	w3, #0x162                 	// #354
  22b178:	mov	w0, wzr
  22b17c:	bl	240790 <log_assert_failed_realm@plt>

000000000022b180 <property_get_compat_user_tasks_max>:
  22b180:	stp	x29, x30, [sp, #-16]!
  22b184:	mov	x29, sp
  22b188:	cbz	x0, 22b1ac <property_get_compat_user_tasks_max+0x2c>
  22b18c:	cbz	x4, 22b1cc <property_get_compat_user_tasks_max+0x4c>
  22b190:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  22b194:	add	x1, x1, #0xfe8
  22b198:	mov	x2, #0xffffffffffffffff    	// #-1
  22b19c:	mov	x0, x4
  22b1a0:	bl	240ff0 <sd_bus_message_append@plt>
  22b1a4:	ldp	x29, x30, [sp], #16
  22b1a8:	ret
  22b1ac:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22b1b0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b1b4:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22b1b8:	add	x1, x1, #0x887
  22b1bc:	add	x2, x2, #0xe6f
  22b1c0:	add	x4, x4, #0xc48
  22b1c4:	mov	w3, #0x161                 	// #353
  22b1c8:	bl	240790 <log_assert_failed_realm@plt>
  22b1cc:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22b1d0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b1d4:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22b1d8:	add	x1, x1, #0xbb3
  22b1dc:	add	x2, x2, #0xe6f
  22b1e0:	add	x4, x4, #0xc48
  22b1e4:	mov	w3, #0x161                 	// #353
  22b1e8:	mov	w0, wzr
  22b1ec:	bl	240790 <log_assert_failed_realm@plt>

000000000022b1f0 <method_get_session>:
  22b1f0:	sub	sp, sp, #0x50
  22b1f4:	stp	x29, x30, [sp, #32]
  22b1f8:	add	x29, sp, #0x20
  22b1fc:	stp	x22, x21, [sp, #48]
  22b200:	stp	x20, x19, [sp, #64]
  22b204:	stur	xzr, [x29, #-8]
  22b208:	cbz	x0, 22b29c <method_get_session+0xac>
  22b20c:	mov	x21, x1
  22b210:	cbz	x1, 22b2bc <method_get_session+0xcc>
  22b214:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22b218:	mov	x20, x2
  22b21c:	add	x1, x1, #0x6de
  22b220:	add	x2, sp, #0x10
  22b224:	mov	x19, x0
  22b228:	bl	240fb0 <sd_bus_message_read@plt>
  22b22c:	tbnz	w0, #31, 22b270 <method_get_session+0x80>
  22b230:	ldr	x2, [sp, #16]
  22b234:	add	x4, sp, #0x8
  22b238:	mov	x0, x21
  22b23c:	mov	x1, x19
  22b240:	mov	x3, x20
  22b244:	bl	229238 <manager_get_session_from_creds>
  22b248:	tbnz	w0, #31, 22b270 <method_get_session+0x80>
  22b24c:	ldr	x0, [sp, #8]
  22b250:	bl	2374bc <session_bus_path>
  22b254:	stur	x0, [x29, #-8]
  22b258:	cbz	x0, 22b294 <method_get_session+0xa4>
  22b25c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22b260:	mov	x2, x0
  22b264:	add	x1, x1, #0x293
  22b268:	mov	x0, x19
  22b26c:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22b270:	mov	w22, w0
  22b274:	sub	x0, x29, #0x8
  22b278:	bl	229b20 <freep>
  22b27c:	mov	w0, w22
  22b280:	ldp	x20, x19, [sp, #64]
  22b284:	ldp	x22, x21, [sp, #48]
  22b288:	ldp	x29, x30, [sp, #32]
  22b28c:	add	sp, sp, #0x50
  22b290:	ret
  22b294:	mov	w22, #0xfffffff4            	// #-12
  22b298:	b	22b274 <method_get_session+0x84>
  22b29c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22b2a0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b2a4:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22b2a8:	add	x1, x1, #0x30
  22b2ac:	add	x2, x2, #0xe6f
  22b2b0:	add	x4, x4, #0xc24
  22b2b4:	mov	w3, #0x16b                 	// #363
  22b2b8:	bl	240790 <log_assert_failed_realm@plt>
  22b2bc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22b2c0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b2c4:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22b2c8:	add	x1, x1, #0x102
  22b2cc:	add	x2, x2, #0xe6f
  22b2d0:	add	x4, x4, #0xc24
  22b2d4:	mov	w3, #0x16c                 	// #364
  22b2d8:	mov	w0, wzr
  22b2dc:	bl	240790 <log_assert_failed_realm@plt>

000000000022b2e0 <method_get_session_by_pid>:
  22b2e0:	sub	sp, sp, #0x50
  22b2e4:	stp	x29, x30, [sp, #32]
  22b2e8:	add	x29, sp, #0x20
  22b2ec:	stp	x22, x21, [sp, #48]
  22b2f0:	stp	x20, x19, [sp, #64]
  22b2f4:	stur	xzr, [x29, #-8]
  22b2f8:	str	xzr, [sp, #16]
  22b2fc:	cbz	x0, 22b3dc <method_get_session_by_pid+0xfc>
  22b300:	mov	x21, x1
  22b304:	cbz	x1, 22b3fc <method_get_session_by_pid+0x11c>
  22b308:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22b30c:	mov	x20, x2
  22b310:	add	x1, x1, #0x420
  22b314:	add	x2, sp, #0xc
  22b318:	mov	x19, x0
  22b31c:	bl	240fb0 <sd_bus_message_read@plt>
  22b320:	tbnz	w0, #31, 22b3b0 <method_get_session_by_pid+0xd0>
  22b324:	ldr	w1, [sp, #12]
  22b328:	tbnz	w1, #31, 22b368 <method_get_session_by_pid+0x88>
  22b32c:	cbz	w1, 22b370 <method_get_session_by_pid+0x90>
  22b330:	add	x2, sp, #0x10
  22b334:	mov	x0, x21
  22b338:	bl	227fd4 <manager_get_session_by_pid>
  22b33c:	tbnz	w0, #31, 22b3b0 <method_get_session_by_pid+0xd0>
  22b340:	ldr	x8, [sp, #16]
  22b344:	cbnz	x8, 22b38c <method_get_session_by_pid+0xac>
  22b348:	ldr	w3, [sp, #12]
  22b34c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22b350:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  22b354:	add	x1, x1, #0xda0
  22b358:	add	x2, x2, #0x1a6
  22b35c:	mov	x0, x20
  22b360:	bl	240f50 <sd_bus_error_setf@plt>
  22b364:	b	22b3b0 <method_get_session_by_pid+0xd0>
  22b368:	mov	w22, #0xffffffea            	// #-22
  22b36c:	b	22b3b4 <method_get_session_by_pid+0xd4>
  22b370:	add	x4, sp, #0x10
  22b374:	mov	x0, x21
  22b378:	mov	x1, x19
  22b37c:	mov	x2, xzr
  22b380:	mov	x3, x20
  22b384:	bl	229238 <manager_get_session_from_creds>
  22b388:	tbnz	w0, #31, 22b3b0 <method_get_session_by_pid+0xd0>
  22b38c:	ldr	x0, [sp, #16]
  22b390:	bl	2374bc <session_bus_path>
  22b394:	stur	x0, [x29, #-8]
  22b398:	cbz	x0, 22b3d4 <method_get_session_by_pid+0xf4>
  22b39c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22b3a0:	mov	x2, x0
  22b3a4:	add	x1, x1, #0x293
  22b3a8:	mov	x0, x19
  22b3ac:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22b3b0:	mov	w22, w0
  22b3b4:	sub	x0, x29, #0x8
  22b3b8:	bl	229b20 <freep>
  22b3bc:	mov	w0, w22
  22b3c0:	ldp	x20, x19, [sp, #64]
  22b3c4:	ldp	x22, x21, [sp, #48]
  22b3c8:	ldp	x29, x30, [sp, #32]
  22b3cc:	add	sp, sp, #0x50
  22b3d0:	ret
  22b3d4:	mov	w22, #0xfffffff4            	// #-12
  22b3d8:	b	22b3b4 <method_get_session_by_pid+0xd4>
  22b3dc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22b3e0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b3e4:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22b3e8:	add	x1, x1, #0x30
  22b3ec:	add	x2, x2, #0xe6f
  22b3f0:	add	x4, x4, #0x12b
  22b3f4:	mov	w3, #0x187                 	// #391
  22b3f8:	bl	240790 <log_assert_failed_realm@plt>
  22b3fc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22b400:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b404:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22b408:	add	x1, x1, #0x102
  22b40c:	add	x2, x2, #0xe6f
  22b410:	add	x4, x4, #0x12b
  22b414:	mov	w3, #0x188                 	// #392
  22b418:	mov	w0, wzr
  22b41c:	bl	240790 <log_assert_failed_realm@plt>

000000000022b420 <method_get_user>:
  22b420:	sub	sp, sp, #0x50
  22b424:	stp	x29, x30, [sp, #32]
  22b428:	add	x29, sp, #0x20
  22b42c:	stp	x22, x21, [sp, #48]
  22b430:	stp	x20, x19, [sp, #64]
  22b434:	stur	xzr, [x29, #-8]
  22b438:	cbz	x0, 22b4cc <method_get_user+0xac>
  22b43c:	mov	x21, x1
  22b440:	cbz	x1, 22b4ec <method_get_user+0xcc>
  22b444:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22b448:	mov	x20, x2
  22b44c:	add	x1, x1, #0x420
  22b450:	sub	x2, x29, #0xc
  22b454:	mov	x19, x0
  22b458:	bl	240fb0 <sd_bus_message_read@plt>
  22b45c:	tbnz	w0, #31, 22b4a0 <method_get_user+0x80>
  22b460:	ldur	w2, [x29, #-12]
  22b464:	add	x4, sp, #0x8
  22b468:	mov	x0, x21
  22b46c:	mov	x1, x19
  22b470:	mov	x3, x20
  22b474:	bl	2294f4 <manager_get_user_from_creds>
  22b478:	tbnz	w0, #31, 22b4a0 <method_get_user+0x80>
  22b47c:	ldr	x0, [sp, #8]
  22b480:	bl	23d2c0 <user_bus_path>
  22b484:	stur	x0, [x29, #-8]
  22b488:	cbz	x0, 22b4c4 <method_get_user+0xa4>
  22b48c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22b490:	mov	x2, x0
  22b494:	add	x1, x1, #0x293
  22b498:	mov	x0, x19
  22b49c:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22b4a0:	mov	w22, w0
  22b4a4:	sub	x0, x29, #0x8
  22b4a8:	bl	229b20 <freep>
  22b4ac:	mov	w0, w22
  22b4b0:	ldp	x20, x19, [sp, #64]
  22b4b4:	ldp	x22, x21, [sp, #48]
  22b4b8:	ldp	x29, x30, [sp, #32]
  22b4bc:	add	sp, sp, #0x50
  22b4c0:	ret
  22b4c4:	mov	w22, #0xfffffff4            	// #-12
  22b4c8:	b	22b4a4 <method_get_user+0x84>
  22b4cc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22b4d0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b4d4:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22b4d8:	add	x1, x1, #0x30
  22b4dc:	add	x2, x2, #0xe6f
  22b4e0:	add	x4, x4, #0x441
  22b4e4:	mov	w3, #0x1ae                 	// #430
  22b4e8:	bl	240790 <log_assert_failed_realm@plt>
  22b4ec:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22b4f0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b4f4:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22b4f8:	add	x1, x1, #0x102
  22b4fc:	add	x2, x2, #0xe6f
  22b500:	add	x4, x4, #0x441
  22b504:	mov	w3, #0x1af                 	// #431
  22b508:	mov	w0, wzr
  22b50c:	bl	240790 <log_assert_failed_realm@plt>

000000000022b510 <method_get_user_by_pid>:
  22b510:	sub	sp, sp, #0x50
  22b514:	stp	x29, x30, [sp, #32]
  22b518:	add	x29, sp, #0x20
  22b51c:	stp	x22, x21, [sp, #48]
  22b520:	stp	x20, x19, [sp, #64]
  22b524:	stur	xzr, [x29, #-8]
  22b528:	str	xzr, [sp, #16]
  22b52c:	cbz	x0, 22b60c <method_get_user_by_pid+0xfc>
  22b530:	mov	x21, x1
  22b534:	cbz	x1, 22b62c <method_get_user_by_pid+0x11c>
  22b538:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22b53c:	mov	x20, x2
  22b540:	add	x1, x1, #0x420
  22b544:	add	x2, sp, #0xc
  22b548:	mov	x19, x0
  22b54c:	bl	240fb0 <sd_bus_message_read@plt>
  22b550:	tbnz	w0, #31, 22b5e0 <method_get_user_by_pid+0xd0>
  22b554:	ldr	w1, [sp, #12]
  22b558:	tbnz	w1, #31, 22b598 <method_get_user_by_pid+0x88>
  22b55c:	cbz	w1, 22b5a0 <method_get_user_by_pid+0x90>
  22b560:	add	x2, sp, #0x10
  22b564:	mov	x0, x21
  22b568:	bl	2280d0 <manager_get_user_by_pid>
  22b56c:	tbnz	w0, #31, 22b5e0 <method_get_user_by_pid+0xd0>
  22b570:	ldr	x8, [sp, #16]
  22b574:	cbnz	x8, 22b5bc <method_get_user_by_pid+0xac>
  22b578:	ldr	w3, [sp, #12]
  22b57c:	adrp	x1, 212000 <inhibit_what_to_string.buffer+0x212000>
  22b580:	adrp	x2, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22b584:	add	x1, x1, #0xa1
  22b588:	add	x2, x2, #0x21f
  22b58c:	mov	x0, x20
  22b590:	bl	240f50 <sd_bus_error_setf@plt>
  22b594:	b	22b5e0 <method_get_user_by_pid+0xd0>
  22b598:	mov	w22, #0xffffffea            	// #-22
  22b59c:	b	22b5e4 <method_get_user_by_pid+0xd4>
  22b5a0:	add	x4, sp, #0x10
  22b5a4:	mov	w2, #0xffffffff            	// #-1
  22b5a8:	mov	x0, x21
  22b5ac:	mov	x1, x19
  22b5b0:	mov	x3, x20
  22b5b4:	bl	2294f4 <manager_get_user_from_creds>
  22b5b8:	tbnz	w0, #31, 22b5e0 <method_get_user_by_pid+0xd0>
  22b5bc:	ldr	x0, [sp, #16]
  22b5c0:	bl	23d2c0 <user_bus_path>
  22b5c4:	stur	x0, [x29, #-8]
  22b5c8:	cbz	x0, 22b604 <method_get_user_by_pid+0xf4>
  22b5cc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22b5d0:	mov	x2, x0
  22b5d4:	add	x1, x1, #0x293
  22b5d8:	mov	x0, x19
  22b5dc:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22b5e0:	mov	w22, w0
  22b5e4:	sub	x0, x29, #0x8
  22b5e8:	bl	229b20 <freep>
  22b5ec:	mov	w0, w22
  22b5f0:	ldp	x20, x19, [sp, #64]
  22b5f4:	ldp	x22, x21, [sp, #48]
  22b5f8:	ldp	x29, x30, [sp, #32]
  22b5fc:	add	sp, sp, #0x50
  22b600:	ret
  22b604:	mov	w22, #0xfffffff4            	// #-12
  22b608:	b	22b5e4 <method_get_user_by_pid+0xd4>
  22b60c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22b610:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b614:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22b618:	add	x1, x1, #0x30
  22b61c:	add	x2, x2, #0xe6f
  22b620:	add	x4, x4, #0x87d
  22b624:	mov	w3, #0x1c7                 	// #455
  22b628:	bl	240790 <log_assert_failed_realm@plt>
  22b62c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22b630:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b634:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22b638:	add	x1, x1, #0x102
  22b63c:	add	x2, x2, #0xe6f
  22b640:	add	x4, x4, #0x87d
  22b644:	mov	w3, #0x1c8                 	// #456
  22b648:	mov	w0, wzr
  22b64c:	bl	240790 <log_assert_failed_realm@plt>

000000000022b650 <method_get_seat>:
  22b650:	sub	sp, sp, #0x50
  22b654:	stp	x29, x30, [sp, #32]
  22b658:	add	x29, sp, #0x20
  22b65c:	stp	x22, x21, [sp, #48]
  22b660:	stp	x20, x19, [sp, #64]
  22b664:	stur	xzr, [x29, #-8]
  22b668:	cbz	x0, 22b6fc <method_get_seat+0xac>
  22b66c:	mov	x21, x1
  22b670:	cbz	x1, 22b71c <method_get_seat+0xcc>
  22b674:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22b678:	mov	x20, x2
  22b67c:	add	x1, x1, #0x6de
  22b680:	add	x2, sp, #0x10
  22b684:	mov	x19, x0
  22b688:	bl	240fb0 <sd_bus_message_read@plt>
  22b68c:	tbnz	w0, #31, 22b6d0 <method_get_seat+0x80>
  22b690:	ldr	x2, [sp, #16]
  22b694:	add	x4, sp, #0x8
  22b698:	mov	x0, x21
  22b69c:	mov	x1, x19
  22b6a0:	mov	x3, x20
  22b6a4:	bl	2296a0 <manager_get_seat_from_creds>
  22b6a8:	tbnz	w0, #31, 22b6d0 <method_get_seat+0x80>
  22b6ac:	ldr	x0, [sp, #8]
  22b6b0:	bl	233ea0 <seat_bus_path>
  22b6b4:	stur	x0, [x29, #-8]
  22b6b8:	cbz	x0, 22b6f4 <method_get_seat+0xa4>
  22b6bc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22b6c0:	mov	x2, x0
  22b6c4:	add	x1, x1, #0x293
  22b6c8:	mov	x0, x19
  22b6cc:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22b6d0:	mov	w22, w0
  22b6d4:	sub	x0, x29, #0x8
  22b6d8:	bl	229b20 <freep>
  22b6dc:	mov	w0, w22
  22b6e0:	ldp	x20, x19, [sp, #64]
  22b6e4:	ldp	x22, x21, [sp, #48]
  22b6e8:	ldp	x29, x30, [sp, #32]
  22b6ec:	add	sp, sp, #0x50
  22b6f0:	ret
  22b6f4:	mov	w22, #0xfffffff4            	// #-12
  22b6f8:	b	22b6d4 <method_get_seat+0x84>
  22b6fc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22b700:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b704:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22b708:	add	x1, x1, #0x30
  22b70c:	add	x2, x2, #0xe6f
  22b710:	add	x4, x4, #0x733
  22b714:	mov	w3, #0x1ee                 	// #494
  22b718:	bl	240790 <log_assert_failed_realm@plt>
  22b71c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22b720:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b724:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22b728:	add	x1, x1, #0x102
  22b72c:	add	x2, x2, #0xe6f
  22b730:	add	x4, x4, #0x733
  22b734:	mov	w3, #0x1ef                 	// #495
  22b738:	mov	w0, wzr
  22b73c:	bl	240790 <log_assert_failed_realm@plt>

000000000022b740 <method_list_sessions>:
  22b740:	sub	sp, sp, #0x60
  22b744:	stp	x29, x30, [sp, #32]
  22b748:	add	x29, sp, #0x20
  22b74c:	str	x23, [sp, #48]
  22b750:	stp	x22, x21, [sp, #64]
  22b754:	stp	x20, x19, [sp, #80]
  22b758:	str	xzr, [x29, #24]
  22b75c:	cbz	x0, 22b878 <method_list_sessions+0x138>
  22b760:	mov	x19, x1
  22b764:	cbz	x1, 22b898 <method_list_sessions+0x158>
  22b768:	add	x1, x29, #0x18
  22b76c:	bl	2410b0 <sd_bus_message_new_method_return@plt>
  22b770:	tbnz	w0, #31, 22b850 <method_list_sessions+0x110>
  22b774:	ldr	x0, [x29, #24]
  22b778:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22b77c:	add	x2, x2, #0x1aa
  22b780:	mov	w1, #0x61                  	// #97
  22b784:	bl	241070 <sd_bus_message_open_container@plt>
  22b788:	tbnz	w0, #31, 22b850 <method_list_sessions+0x110>
  22b78c:	adrp	x22, 210000 <inhibit_what_to_string.buffer+0x210000>
  22b790:	adrp	x21, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22b794:	mov	w8, #0xfffffffe            	// #-2
  22b798:	add	x22, x22, #0xb7e
  22b79c:	add	x21, x21, #0x1aa
  22b7a0:	str	xzr, [sp, #16]
  22b7a4:	str	w8, [sp, #8]
  22b7a8:	b	22b7c0 <method_list_sessions+0x80>
  22b7ac:	mov	w23, wzr
  22b7b0:	mov	w20, #0xfffffff4            	// #-12
  22b7b4:	mov	x0, sp
  22b7b8:	bl	229b20 <freep>
  22b7bc:	tbz	w23, #0, 22b854 <method_list_sessions+0x114>
  22b7c0:	ldr	x0, [x19, #32]
  22b7c4:	add	x1, sp, #0x8
  22b7c8:	sub	x2, x29, #0x8
  22b7cc:	bl	22f5d4 <hashmap_iterate>
  22b7d0:	tbz	w0, #0, 22b834 <method_list_sessions+0xf4>
  22b7d4:	ldur	x0, [x29, #-8]
  22b7d8:	str	xzr, [sp]
  22b7dc:	bl	2374bc <session_bus_path>
  22b7e0:	str	x0, [sp]
  22b7e4:	cbz	x0, 22b7ac <method_list_sessions+0x6c>
  22b7e8:	ldur	x8, [x29, #-8]
  22b7ec:	mov	x6, x0
  22b7f0:	ldr	x0, [x29, #24]
  22b7f4:	ldr	x9, [x8, #40]
  22b7f8:	ldr	x2, [x8, #8]
  22b7fc:	ldr	x8, [x8, #136]
  22b800:	ldr	w3, [x9, #8]
  22b804:	ldr	x4, [x9, #16]
  22b808:	cbz	x8, 22b814 <method_list_sessions+0xd4>
  22b80c:	ldr	x5, [x8, #8]
  22b810:	b	22b818 <method_list_sessions+0xd8>
  22b814:	mov	x5, x22
  22b818:	mov	x1, x21
  22b81c:	bl	240ff0 <sd_bus_message_append@plt>
  22b820:	mvn	w8, w0
  22b824:	cmp	w0, #0x0
  22b828:	lsr	w23, w8, #31
  22b82c:	csel	w20, w0, w20, lt  // lt = tstop
  22b830:	b	22b7b4 <method_list_sessions+0x74>
  22b834:	ldr	x0, [x29, #24]
  22b838:	bl	241080 <sd_bus_message_close_container@plt>
  22b83c:	tbnz	w0, #31, 22b850 <method_list_sessions+0x110>
  22b840:	ldr	x1, [x29, #24]
  22b844:	mov	x0, xzr
  22b848:	mov	x2, xzr
  22b84c:	bl	2410c0 <sd_bus_send@plt>
  22b850:	mov	w20, w0
  22b854:	add	x0, x29, #0x18
  22b858:	bl	22fbb8 <sd_bus_message_unrefp>
  22b85c:	mov	w0, w20
  22b860:	ldp	x20, x19, [sp, #80]
  22b864:	ldp	x22, x21, [sp, #64]
  22b868:	ldr	x23, [sp, #48]
  22b86c:	ldp	x29, x30, [sp, #32]
  22b870:	add	sp, sp, #0x60
  22b874:	ret
  22b878:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22b87c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b880:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22b884:	add	x1, x1, #0x30
  22b888:	add	x2, x2, #0xe6f
  22b88c:	add	x4, x4, #0x4b5
  22b890:	mov	w3, #0x207                 	// #519
  22b894:	bl	240790 <log_assert_failed_realm@plt>
  22b898:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22b89c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b8a0:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22b8a4:	add	x1, x1, #0x102
  22b8a8:	add	x2, x2, #0xe6f
  22b8ac:	add	x4, x4, #0x4b5
  22b8b0:	mov	w3, #0x208                 	// #520
  22b8b4:	mov	w0, wzr
  22b8b8:	bl	240790 <log_assert_failed_realm@plt>

000000000022b8bc <method_list_users>:
  22b8bc:	sub	sp, sp, #0x60
  22b8c0:	stp	x29, x30, [sp, #48]
  22b8c4:	add	x29, sp, #0x30
  22b8c8:	stp	x22, x21, [sp, #64]
  22b8cc:	stp	x20, x19, [sp, #80]
  22b8d0:	stur	xzr, [x29, #-8]
  22b8d4:	cbz	x0, 22b9c4 <method_list_users+0x108>
  22b8d8:	mov	x19, x1
  22b8dc:	cbz	x1, 22b9e4 <method_list_users+0x128>
  22b8e0:	sub	x1, x29, #0x8
  22b8e4:	bl	2410b0 <sd_bus_message_new_method_return@plt>
  22b8e8:	tbnz	w0, #31, 22b9a0 <method_list_users+0xe4>
  22b8ec:	ldur	x0, [x29, #-8]
  22b8f0:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22b8f4:	add	x2, x2, #0xc65
  22b8f8:	mov	w1, #0x61                  	// #97
  22b8fc:	bl	241070 <sd_bus_message_open_container@plt>
  22b900:	tbnz	w0, #31, 22b9a0 <method_list_users+0xe4>
  22b904:	adrp	x21, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22b908:	mov	w8, #0xfffffffe            	// #-2
  22b90c:	add	x21, x21, #0xc65
  22b910:	str	xzr, [sp, #24]
  22b914:	str	w8, [sp, #16]
  22b918:	b	22b950 <method_list_users+0x94>
  22b91c:	mov	x4, x0
  22b920:	ldp	x8, x0, [x29, #-16]
  22b924:	mov	x1, x21
  22b928:	ldr	w2, [x8, #8]
  22b92c:	ldr	x3, [x8, #16]
  22b930:	bl	240ff0 <sd_bus_message_append@plt>
  22b934:	mvn	w8, w0
  22b938:	cmp	w0, #0x0
  22b93c:	lsr	w22, w8, #31
  22b940:	csel	w20, w0, w20, lt  // lt = tstop
  22b944:	add	x0, sp, #0x8
  22b948:	bl	229b20 <freep>
  22b94c:	tbz	w22, #0, 22b9a4 <method_list_users+0xe8>
  22b950:	ldr	x0, [x19, #48]
  22b954:	add	x1, sp, #0x10
  22b958:	sub	x2, x29, #0x10
  22b95c:	bl	22f5d4 <hashmap_iterate>
  22b960:	tbz	w0, #0, 22b984 <method_list_users+0xc8>
  22b964:	ldur	x0, [x29, #-16]
  22b968:	str	xzr, [sp, #8]
  22b96c:	bl	23d2c0 <user_bus_path>
  22b970:	str	x0, [sp, #8]
  22b974:	cbnz	x0, 22b91c <method_list_users+0x60>
  22b978:	mov	w22, wzr
  22b97c:	mov	w20, #0xfffffff4            	// #-12
  22b980:	b	22b944 <method_list_users+0x88>
  22b984:	ldur	x0, [x29, #-8]
  22b988:	bl	241080 <sd_bus_message_close_container@plt>
  22b98c:	tbnz	w0, #31, 22b9a0 <method_list_users+0xe4>
  22b990:	ldur	x1, [x29, #-8]
  22b994:	mov	x0, xzr
  22b998:	mov	x2, xzr
  22b99c:	bl	2410c0 <sd_bus_send@plt>
  22b9a0:	mov	w20, w0
  22b9a4:	sub	x0, x29, #0x8
  22b9a8:	bl	22fbb8 <sd_bus_message_unrefp>
  22b9ac:	mov	w0, w20
  22b9b0:	ldp	x20, x19, [sp, #80]
  22b9b4:	ldp	x22, x21, [sp, #64]
  22b9b8:	ldp	x29, x30, [sp, #48]
  22b9bc:	add	sp, sp, #0x60
  22b9c0:	ret
  22b9c4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22b9c8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b9cc:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  22b9d0:	add	x1, x1, #0x30
  22b9d4:	add	x2, x2, #0xe6f
  22b9d8:	add	x4, x4, #0x569
  22b9dc:	mov	w3, #0x231                 	// #561
  22b9e0:	bl	240790 <log_assert_failed_realm@plt>
  22b9e4:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22b9e8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22b9ec:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  22b9f0:	add	x1, x1, #0x102
  22b9f4:	add	x2, x2, #0xe6f
  22b9f8:	add	x4, x4, #0x569
  22b9fc:	mov	w3, #0x232                 	// #562
  22ba00:	mov	w0, wzr
  22ba04:	bl	240790 <log_assert_failed_realm@plt>

000000000022ba08 <method_list_seats>:
  22ba08:	sub	sp, sp, #0x60
  22ba0c:	stp	x29, x30, [sp, #48]
  22ba10:	add	x29, sp, #0x30
  22ba14:	stp	x22, x21, [sp, #64]
  22ba18:	stp	x20, x19, [sp, #80]
  22ba1c:	stur	xzr, [x29, #-8]
  22ba20:	cbz	x0, 22bb0c <method_list_seats+0x104>
  22ba24:	mov	x19, x1
  22ba28:	cbz	x1, 22bb2c <method_list_seats+0x124>
  22ba2c:	sub	x1, x29, #0x8
  22ba30:	bl	2410b0 <sd_bus_message_new_method_return@plt>
  22ba34:	tbnz	w0, #31, 22bae8 <method_list_seats+0xe0>
  22ba38:	ldur	x0, [x29, #-8]
  22ba3c:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  22ba40:	add	x2, x2, #0x3e
  22ba44:	mov	w1, #0x61                  	// #97
  22ba48:	bl	241070 <sd_bus_message_open_container@plt>
  22ba4c:	tbnz	w0, #31, 22bae8 <method_list_seats+0xe0>
  22ba50:	adrp	x21, 208000 <inhibit_what_to_string.buffer+0x208000>
  22ba54:	mov	w8, #0xfffffffe            	// #-2
  22ba58:	add	x21, x21, #0x3e
  22ba5c:	str	xzr, [sp, #24]
  22ba60:	str	w8, [sp, #16]
  22ba64:	b	22ba98 <method_list_seats+0x90>
  22ba68:	mov	x3, x0
  22ba6c:	ldp	x8, x0, [x29, #-16]
  22ba70:	mov	x1, x21
  22ba74:	ldr	x2, [x8, #8]
  22ba78:	bl	240ff0 <sd_bus_message_append@plt>
  22ba7c:	mvn	w8, w0
  22ba80:	cmp	w0, #0x0
  22ba84:	lsr	w22, w8, #31
  22ba88:	csel	w20, w0, w20, lt  // lt = tstop
  22ba8c:	add	x0, sp, #0x8
  22ba90:	bl	229b20 <freep>
  22ba94:	tbz	w22, #0, 22baec <method_list_seats+0xe4>
  22ba98:	ldr	x0, [x19, #24]
  22ba9c:	add	x1, sp, #0x10
  22baa0:	sub	x2, x29, #0x10
  22baa4:	bl	22f5d4 <hashmap_iterate>
  22baa8:	tbz	w0, #0, 22bacc <method_list_seats+0xc4>
  22baac:	ldur	x0, [x29, #-16]
  22bab0:	str	xzr, [sp, #8]
  22bab4:	bl	233ea0 <seat_bus_path>
  22bab8:	str	x0, [sp, #8]
  22babc:	cbnz	x0, 22ba68 <method_list_seats+0x60>
  22bac0:	mov	w22, wzr
  22bac4:	mov	w20, #0xfffffff4            	// #-12
  22bac8:	b	22ba8c <method_list_seats+0x84>
  22bacc:	ldur	x0, [x29, #-8]
  22bad0:	bl	241080 <sd_bus_message_close_container@plt>
  22bad4:	tbnz	w0, #31, 22bae8 <method_list_seats+0xe0>
  22bad8:	ldur	x1, [x29, #-8]
  22badc:	mov	x0, xzr
  22bae0:	mov	x2, xzr
  22bae4:	bl	2410c0 <sd_bus_send@plt>
  22bae8:	mov	w20, w0
  22baec:	sub	x0, x29, #0x8
  22baf0:	bl	22fbb8 <sd_bus_message_unrefp>
  22baf4:	mov	w0, w20
  22baf8:	ldp	x20, x19, [sp, #80]
  22bafc:	ldp	x22, x21, [sp, #64]
  22bb00:	ldp	x29, x30, [sp, #48]
  22bb04:	add	sp, sp, #0x60
  22bb08:	ret
  22bb0c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22bb10:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22bb14:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22bb18:	add	x1, x1, #0x30
  22bb1c:	add	x2, x2, #0xe6f
  22bb20:	add	x4, x4, #0x1d2
  22bb24:	mov	w3, #0x259                 	// #601
  22bb28:	bl	240790 <log_assert_failed_realm@plt>
  22bb2c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22bb30:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22bb34:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22bb38:	add	x1, x1, #0x102
  22bb3c:	add	x2, x2, #0xe6f
  22bb40:	add	x4, x4, #0x1d2
  22bb44:	mov	w3, #0x25a                 	// #602
  22bb48:	mov	w0, wzr
  22bb4c:	bl	240790 <log_assert_failed_realm@plt>

000000000022bb50 <method_list_inhibitors>:
  22bb50:	sub	sp, sp, #0x60
  22bb54:	stp	x29, x30, [sp, #32]
  22bb58:	add	x29, sp, #0x20
  22bb5c:	stp	x24, x23, [sp, #48]
  22bb60:	stp	x22, x21, [sp, #64]
  22bb64:	stp	x20, x19, [sp, #80]
  22bb68:	stur	xzr, [x29, #-8]
  22bb6c:	cbz	x0, 22bc80 <method_list_inhibitors+0x130>
  22bb70:	mov	x19, x1
  22bb74:	cbz	x1, 22bca0 <method_list_inhibitors+0x150>
  22bb78:	sub	x1, x29, #0x8
  22bb7c:	bl	2410b0 <sd_bus_message_new_method_return@plt>
  22bb80:	tbnz	w0, #31, 22bc58 <method_list_inhibitors+0x108>
  22bb84:	ldur	x0, [x29, #-8]
  22bb88:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22bb8c:	add	x2, x2, #0x173
  22bb90:	mov	w1, #0x61                  	// #97
  22bb94:	bl	241070 <sd_bus_message_open_container@plt>
  22bb98:	tbnz	w0, #31, 22bc58 <method_list_inhibitors+0x108>
  22bb9c:	adrp	x20, 210000 <inhibit_what_to_string.buffer+0x210000>
  22bba0:	mov	w8, #0xfffffffe            	// #-2
  22bba4:	add	x20, x20, #0x173
  22bba8:	str	xzr, [sp, #8]
  22bbac:	str	w8, [sp]
  22bbb0:	ldr	x0, [x19, #56]
  22bbb4:	mov	x1, sp
  22bbb8:	add	x2, sp, #0x10
  22bbbc:	bl	22f5d4 <hashmap_iterate>
  22bbc0:	ldur	x21, [x29, #-8]
  22bbc4:	tbz	w0, #0, 22bc3c <method_list_inhibitors+0xec>
  22bbc8:	ldr	x8, [sp, #16]
  22bbcc:	ldr	w0, [x8, #36]
  22bbd0:	bl	2331e8 <inhibit_what_to_string>
  22bbd4:	bl	22fbd4 <strempty>
  22bbd8:	ldr	x24, [sp, #16]
  22bbdc:	mov	x22, x0
  22bbe0:	ldr	x8, [x24, #40]
  22bbe4:	mov	x0, x8
  22bbe8:	bl	22fbd4 <strempty>
  22bbec:	ldr	x8, [x24, #48]
  22bbf0:	mov	x23, x0
  22bbf4:	mov	x0, x8
  22bbf8:	bl	22fbd4 <strempty>
  22bbfc:	ldr	w8, [x24, #56]
  22bc00:	mov	x24, x0
  22bc04:	mov	w0, w8
  22bc08:	bl	2322f8 <inhibit_mode_to_string>
  22bc0c:	bl	22fbd4 <strempty>
  22bc10:	ldr	x8, [sp, #16]
  22bc14:	mov	x5, x0
  22bc18:	mov	x0, x21
  22bc1c:	mov	x1, x20
  22bc20:	ldp	w7, w6, [x8, #60]
  22bc24:	mov	x2, x22
  22bc28:	mov	x3, x23
  22bc2c:	mov	x4, x24
  22bc30:	bl	240ff0 <sd_bus_message_append@plt>
  22bc34:	tbz	w0, #31, 22bbb0 <method_list_inhibitors+0x60>
  22bc38:	b	22bc58 <method_list_inhibitors+0x108>
  22bc3c:	mov	x0, x21
  22bc40:	bl	241080 <sd_bus_message_close_container@plt>
  22bc44:	tbnz	w0, #31, 22bc58 <method_list_inhibitors+0x108>
  22bc48:	ldur	x1, [x29, #-8]
  22bc4c:	mov	x0, xzr
  22bc50:	mov	x2, xzr
  22bc54:	bl	2410c0 <sd_bus_send@plt>
  22bc58:	mov	w21, w0
  22bc5c:	sub	x0, x29, #0x8
  22bc60:	bl	22fbb8 <sd_bus_message_unrefp>
  22bc64:	mov	w0, w21
  22bc68:	ldp	x20, x19, [sp, #80]
  22bc6c:	ldp	x22, x21, [sp, #64]
  22bc70:	ldp	x24, x23, [sp, #48]
  22bc74:	ldp	x29, x30, [sp, #32]
  22bc78:	add	sp, sp, #0x60
  22bc7c:	ret
  22bc80:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22bc84:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22bc88:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22bc8c:	add	x1, x1, #0x30
  22bc90:	add	x2, x2, #0xe6f
  22bc94:	add	x4, x4, #0x771
  22bc98:	mov	w3, #0x27e                 	// #638
  22bc9c:	bl	240790 <log_assert_failed_realm@plt>
  22bca0:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22bca4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22bca8:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22bcac:	add	x1, x1, #0x102
  22bcb0:	add	x2, x2, #0xe6f
  22bcb4:	add	x4, x4, #0x771
  22bcb8:	mov	w3, #0x27f                 	// #639
  22bcbc:	mov	w0, wzr
  22bcc0:	bl	240790 <log_assert_failed_realm@plt>

000000000022bcc4 <method_create_session>:
  22bcc4:	sub	sp, sp, #0x110
  22bcc8:	stp	x29, x30, [sp, #176]
  22bccc:	add	x29, sp, #0xb0
  22bcd0:	str	x28, [sp, #192]
  22bcd4:	stp	x26, x25, [sp, #208]
  22bcd8:	stp	x24, x23, [sp, #224]
  22bcdc:	stp	x22, x21, [sp, #240]
  22bce0:	stp	x20, x19, [sp, #256]
  22bce4:	stp	xzr, xzr, [x29, #-80]
  22bce8:	stur	wzr, [x29, #-84]
  22bcec:	str	xzr, [sp, #80]
  22bcf0:	str	wzr, [sp, #64]
  22bcf4:	cbz	x0, 22c450 <method_create_session+0x78c>
  22bcf8:	mov	x21, x1
  22bcfc:	cbz	x1, 22c470 <method_create_session+0x7ac>
  22bd00:	adrp	x1, 212000 <inhibit_what_to_string.buffer+0x212000>
  22bd04:	mov	x19, x2
  22bd08:	sub	x8, x29, #0x38
  22bd0c:	sub	x9, x29, #0x30
  22bd10:	add	x10, sp, #0x44
  22bd14:	sub	x11, x29, #0x28
  22bd18:	sub	x12, x29, #0x20
  22bd1c:	add	x13, sp, #0x40
  22bd20:	sub	x14, x29, #0x18
  22bd24:	add	x1, x1, #0x196
  22bd28:	add	x2, sp, #0x48
  22bd2c:	add	x3, sp, #0x4c
  22bd30:	add	x4, x29, #0x18
  22bd34:	sub	x5, x29, #0x8
  22bd38:	sub	x6, x29, #0x10
  22bd3c:	sub	x7, x29, #0x40
  22bd40:	mov	x20, x0
  22bd44:	stp	x9, x8, [sp, #40]
  22bd48:	stp	x11, x10, [sp, #24]
  22bd4c:	stp	x13, x12, [sp, #8]
  22bd50:	str	x14, [sp]
  22bd54:	bl	240fb0 <sd_bus_message_read@plt>
  22bd58:	tbnz	w0, #31, 22bdb0 <method_create_session+0xec>
  22bd5c:	ldr	w0, [sp, #72]
  22bd60:	bl	240f90 <uid_is_valid@plt>
  22bd64:	tbz	w0, #0, 22bd98 <method_create_session+0xd4>
  22bd68:	ldr	w22, [sp, #76]
  22bd6c:	tbnz	w22, #31, 22bd84 <method_create_session+0xc0>
  22bd70:	cmp	w22, #0x1
  22bd74:	b.eq	22bd84 <method_create_session+0xc0>  // b.none
  22bd78:	bl	240760 <getpid_cached@plt>
  22bd7c:	cmp	w22, w0
  22bd80:	b.ne	22bde0 <method_create_session+0x11c>  // b.any
  22bd84:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22bd88:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22bd8c:	add	x1, x1, #0x47f
  22bd90:	add	x2, x2, #0x6cd
  22bd94:	b	22bda8 <method_create_session+0xe4>
  22bd98:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22bd9c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22bda0:	add	x1, x1, #0x47f
  22bda4:	add	x2, x2, #0xc43
  22bda8:	mov	x0, x19
  22bdac:	bl	240f50 <sd_bus_error_setf@plt>
  22bdb0:	mov	w24, w0
  22bdb4:	sub	x0, x29, #0x48
  22bdb8:	bl	229b20 <freep>
  22bdbc:	mov	w0, w24
  22bdc0:	ldp	x20, x19, [sp, #256]
  22bdc4:	ldp	x22, x21, [sp, #240]
  22bdc8:	ldp	x24, x23, [sp, #224]
  22bdcc:	ldp	x26, x25, [sp, #208]
  22bdd0:	ldr	x28, [sp, #192]
  22bdd4:	ldp	x29, x30, [sp, #176]
  22bdd8:	add	sp, sp, #0x110
  22bddc:	ret
  22bde0:	ldur	x22, [x29, #-8]
  22bde4:	mov	x0, x22
  22bde8:	bl	22fbe8 <isempty>
  22bdec:	tbz	w0, #0, 22bdf8 <method_create_session+0x134>
  22bdf0:	mov	w23, #0xffffffff            	// #-1
  22bdf4:	b	22be08 <method_create_session+0x144>
  22bdf8:	mov	x0, x22
  22bdfc:	bl	23ad4c <session_type_from_string>
  22be00:	mov	w23, w0
  22be04:	tbnz	w0, #31, 22bef0 <method_create_session+0x22c>
  22be08:	ldur	x22, [x29, #-16]
  22be0c:	mov	x0, x22
  22be10:	bl	22fbe8 <isempty>
  22be14:	tbz	w0, #0, 22be20 <method_create_session+0x15c>
  22be18:	mov	w25, #0xffffffff            	// #-1
  22be1c:	b	22be30 <method_create_session+0x16c>
  22be20:	mov	x0, x22
  22be24:	bl	23ad70 <session_class_from_string>
  22be28:	mov	w25, w0
  22be2c:	tbnz	w0, #31, 22bf18 <method_create_session+0x254>
  22be30:	ldur	x22, [x29, #-64]
  22be34:	mov	x0, x22
  22be38:	bl	22fbe8 <isempty>
  22be3c:	tbz	w0, #0, 22be48 <method_create_session+0x184>
  22be40:	stur	xzr, [x29, #-64]
  22be44:	b	22be54 <method_create_session+0x190>
  22be48:	mov	x0, x22
  22be4c:	bl	2410d0 <string_is_safe@plt>
  22be50:	tbz	w0, #0, 22bf04 <method_create_session+0x240>
  22be54:	ldur	x22, [x29, #-24]
  22be58:	mov	x0, x22
  22be5c:	bl	22fbe8 <isempty>
  22be60:	tbz	w0, #0, 22be6c <method_create_session+0x1a8>
  22be64:	mov	x22, xzr
  22be68:	b	22be80 <method_create_session+0x1bc>
  22be6c:	ldr	x0, [x21, #24]
  22be70:	mov	x1, x22
  22be74:	bl	2294e0 <hashmap_get>
  22be78:	mov	x22, x0
  22be7c:	cbz	x0, 22bf38 <method_create_session+0x274>
  22be80:	ldur	x0, [x29, #-32]
  22be84:	bl	2410e0 <tty_is_vc@plt>
  22be88:	tbz	w0, #0, 22bec0 <method_create_session+0x1fc>
  22be8c:	ldr	x8, [x21, #168]
  22be90:	cbz	x22, 22bf54 <method_create_session+0x290>
  22be94:	cmp	x22, x8
  22be98:	b.eq	22bf58 <method_create_session+0x294>  // b.none
  22be9c:	ldur	x3, [x29, #-32]
  22bea0:	ldr	x4, [x22, #8]
  22bea4:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22bea8:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  22beac:	add	x1, x1, #0x47f
  22beb0:	add	x2, x2, #0x737
  22beb4:	mov	x0, x19
  22beb8:	bl	240f50 <sd_bus_error_setf@plt>
  22bebc:	b	22bfb0 <method_create_session+0x2ec>
  22bec0:	ldur	x0, [x29, #-32]
  22bec4:	bl	2410f0 <tty_is_console@plt>
  22bec8:	tbz	w0, #0, 22bfdc <method_create_session+0x318>
  22becc:	ldr	x8, [x21, #168]
  22bed0:	cbz	x22, 22bfbc <method_create_session+0x2f8>
  22bed4:	cmp	x22, x8
  22bed8:	b.eq	22bfc0 <method_create_session+0x2fc>  // b.none
  22bedc:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22bee0:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22bee4:	add	x1, x1, #0x47f
  22bee8:	add	x2, x2, #0xc6b
  22beec:	b	22bda8 <method_create_session+0xe4>
  22bef0:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22bef4:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22bef8:	add	x1, x1, #0x47f
  22befc:	add	x2, x2, #0xccd
  22bf00:	b	22bf28 <method_create_session+0x264>
  22bf04:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22bf08:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  22bf0c:	add	x1, x1, #0x47f
  22bf10:	add	x2, x2, #0x5c7
  22bf14:	b	22bf28 <method_create_session+0x264>
  22bf18:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22bf1c:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  22bf20:	add	x1, x1, #0x47f
  22bf24:	add	x2, x2, #0xed6
  22bf28:	mov	x0, x19
  22bf2c:	mov	x3, x22
  22bf30:	bl	240f50 <sd_bus_error_setf@plt>
  22bf34:	b	22bdb0 <method_create_session+0xec>
  22bf38:	ldur	x3, [x29, #-24]
  22bf3c:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  22bf40:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22bf44:	add	x1, x1, #0xb5c
  22bf48:	add	x2, x2, #0x5aa
  22bf4c:	mov	x0, x19
  22bf50:	b	22bf30 <method_create_session+0x26c>
  22bf54:	mov	x22, x8
  22bf58:	ldur	x0, [x29, #-32]
  22bf5c:	bl	241100 <vtnr_from_tty@plt>
  22bf60:	cmp	w0, #0x0
  22bf64:	b.le	22bf94 <method_create_session+0x2d0>
  22bf68:	ldr	w8, [sp, #64]
  22bf6c:	cbz	w8, 22bfe4 <method_create_session+0x320>
  22bf70:	cmp	w8, w0
  22bf74:	b.eq	22bfe8 <method_create_session+0x324>  // b.none
  22bf78:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22bf7c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22bf80:	add	x1, x1, #0x47f
  22bf84:	add	x2, x2, #0x6eb
  22bf88:	mov	x0, x19
  22bf8c:	bl	240f50 <sd_bus_error_setf@plt>
  22bf90:	b	22bfb0 <method_create_session+0x2ec>
  22bf94:	ldur	x3, [x29, #-32]
  22bf98:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22bf9c:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22bfa0:	add	x1, x1, #0x47f
  22bfa4:	add	x2, x2, #0x4f8
  22bfa8:	mov	x0, x19
  22bfac:	bl	240f50 <sd_bus_error_setf@plt>
  22bfb0:	mov	w24, w0
  22bfb4:	mov	w8, wzr
  22bfb8:	b	22bfec <method_create_session+0x328>
  22bfbc:	mov	x22, x8
  22bfc0:	ldr	w8, [sp, #64]
  22bfc4:	cbz	w8, 22bfdc <method_create_session+0x318>
  22bfc8:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22bfcc:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22bfd0:	add	x1, x1, #0x47f
  22bfd4:	add	x2, x2, #0xc4f
  22bfd8:	b	22bda8 <method_create_session+0xe4>
  22bfdc:	cbnz	x22, 22bff4 <method_create_session+0x330>
  22bfe0:	b	22c03c <method_create_session+0x378>
  22bfe4:	str	w0, [sp, #64]
  22bfe8:	mov	w8, #0x1                   	// #1
  22bfec:	tbz	w8, #0, 22bdb4 <method_create_session+0xf0>
  22bff0:	cbz	x22, 22c03c <method_create_session+0x378>
  22bff4:	mov	x0, x22
  22bff8:	bl	234d50 <seat_has_vts>
  22bffc:	ldr	w8, [sp, #64]
  22c000:	tbz	w0, #0, 22c024 <method_create_session+0x360>
  22c004:	sub	w8, w8, #0x1
  22c008:	cmp	w8, #0x3f
  22c00c:	b.cc	22c03c <method_create_session+0x378>  // b.lo, b.ul, b.last
  22c010:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22c014:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22c018:	add	x1, x1, #0x47f
  22c01c:	add	x2, x2, #0x6e0
  22c020:	b	22bda8 <method_create_session+0xe4>
  22c024:	cbz	w8, 22c03c <method_create_session+0x378>
  22c028:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22c02c:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  22c030:	add	x1, x1, #0x47f
  22c034:	add	x2, x2, #0x212
  22c038:	b	22bda8 <method_create_session+0xe4>
  22c03c:	cmn	w23, #0x1
  22c040:	b.ne	22c068 <method_create_session+0x3a4>  // b.any
  22c044:	ldur	x0, [x29, #-40]
  22c048:	bl	22fbe8 <isempty>
  22c04c:	tbz	w0, #0, 22c064 <method_create_session+0x3a0>
  22c050:	ldur	x0, [x29, #-32]
  22c054:	bl	22fbe8 <isempty>
  22c058:	mvn	w8, w0
  22c05c:	and	w23, w8, #0x1
  22c060:	b	22c068 <method_create_session+0x3a4>
  22c064:	mov	w23, #0x2                   	// #2
  22c068:	ldr	w8, [sp, #76]
  22c06c:	cmp	w23, #0x0
  22c070:	mov	w9, #0x3                   	// #3
  22c074:	csel	w9, w9, wzr, eq  // eq = none
  22c078:	cmn	w25, #0x1
  22c07c:	csel	w25, w9, w25, eq  // eq = none
  22c080:	cbnz	w8, 22c0d0 <method_create_session+0x40c>
  22c084:	add	x2, sp, #0x38
  22c088:	mov	w1, #0x1                   	// #1
  22c08c:	mov	x0, x20
  22c090:	str	xzr, [sp, #56]
  22c094:	bl	240f60 <sd_bus_query_sender_creds@plt>
  22c098:	tbnz	w0, #31, 22c0bc <method_create_session+0x3f8>
  22c09c:	ldr	x0, [sp, #56]
  22c0a0:	add	x1, sp, #0x4c
  22c0a4:	bl	241110 <sd_bus_creds_get_pid@plt>
  22c0a8:	mvn	w8, w0
  22c0ac:	cmp	w0, #0x0
  22c0b0:	lsr	w26, w8, #31
  22c0b4:	csel	w24, w0, w24, lt  // lt = tstop
  22c0b8:	b	22c0c4 <method_create_session+0x400>
  22c0bc:	mov	w26, wzr
  22c0c0:	mov	w24, w0
  22c0c4:	add	x0, sp, #0x38
  22c0c8:	bl	230374 <sd_bus_creds_unrefp>
  22c0cc:	cbz	w26, 22bdb4 <method_create_session+0xf0>
  22c0d0:	ldr	w1, [sp, #76]
  22c0d4:	mov	x0, x21
  22c0d8:	mov	x2, xzr
  22c0dc:	bl	2280d0 <manager_get_user_by_pid>
  22c0e0:	mov	w24, w0
  22c0e4:	tbnz	w0, #31, 22bdb4 <method_create_session+0xf0>
  22c0e8:	cbz	w24, 22c100 <method_create_session+0x43c>
  22c0ec:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22c0f0:	adrp	x2, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22c0f4:	add	x1, x1, #0x7b6
  22c0f8:	add	x2, x2, #0x25e
  22c0fc:	b	22bda8 <method_create_session+0xe4>
  22c100:	cmp	w25, #0x1
  22c104:	b.eq	22c138 <method_create_session+0x474>  // b.none
  22c108:	ldr	w8, [sp, #64]
  22c10c:	cbz	w8, 22c138 <method_create_session+0x474>
  22c110:	ldr	x9, [x21, #168]
  22c114:	ldr	x10, [x9, #64]
  22c118:	cmp	x10, x8
  22c11c:	b.ls	22c138 <method_create_session+0x474>  // b.plast
  22c120:	ldr	x9, [x9, #56]
  22c124:	ldr	x8, [x9, x8, lsl #3]
  22c128:	cbz	x8, 22c138 <method_create_session+0x474>
  22c12c:	ldr	w8, [x8, #24]
  22c130:	cmp	w8, #0x1
  22c134:	b.ne	22c42c <method_create_session+0x768>  // b.any
  22c138:	ldr	x0, [x21, #32]
  22c13c:	bl	230718 <hashmap_size>
  22c140:	ldr	x3, [x21, #464]
  22c144:	cmp	x3, w0, uxtw
  22c148:	b.ls	22c3f0 <method_create_session+0x72c>  // b.plast
  22c14c:	ldr	w0, [sp, #76]
  22c150:	sub	x1, x29, #0x54
  22c154:	bl	241120 <audit_session_from_pid@plt>
  22c158:	ldur	w24, [x29, #-84]
  22c15c:	mov	w0, w24
  22c160:	bl	23072c <audit_session_is_valid>
  22c164:	tbz	w0, #0, 22c1e0 <method_create_session+0x51c>
  22c168:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  22c16c:	add	x1, x1, #0x43
  22c170:	sub	x0, x29, #0x48
  22c174:	mov	w2, w24
  22c178:	bl	240ae0 <asprintf@plt>
  22c17c:	tbnz	w0, #31, 22c424 <method_create_session+0x760>
  22c180:	ldr	x0, [x21, #32]
  22c184:	ldur	x1, [x29, #-72]
  22c188:	bl	23073c <hashmap_contains>
  22c18c:	tbz	w0, #0, 22c1e0 <method_create_session+0x51c>
  22c190:	mov	w0, wzr
  22c194:	bl	240750 <log_get_max_level_realm@plt>
  22c198:	cmp	w0, #0x4
  22c19c:	b.lt	22c1cc <method_create_session+0x508>  // b.tstop
  22c1a0:	ldur	x6, [x29, #-72]
  22c1a4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22c1a8:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22c1ac:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  22c1b0:	add	x2, x2, #0xe6f
  22c1b4:	add	x4, x4, #0x8c2
  22c1b8:	add	x5, x5, #0x236
  22c1bc:	mov	w0, #0x4                   	// #4
  22c1c0:	mov	w3, #0x353                 	// #851
  22c1c4:	mov	w1, wzr
  22c1c8:	bl	240770 <log_internal_realm@plt>
  22c1cc:	ldur	x0, [x29, #-72]
  22c1d0:	mov	w8, #0xffffffff            	// #-1
  22c1d4:	stur	w8, [x29, #-84]
  22c1d8:	bl	22f1b8 <mfree>
  22c1dc:	stur	xzr, [x29, #-72]
  22c1e0:	ldur	x8, [x29, #-72]
  22c1e4:	cbnz	x8, 22c228 <method_create_session+0x564>
  22c1e8:	adrp	x24, 210000 <inhibit_what_to_string.buffer+0x210000>
  22c1ec:	add	x24, x24, #0x17c
  22c1f0:	ldur	x0, [x29, #-72]
  22c1f4:	bl	22f1b8 <mfree>
  22c1f8:	stur	xzr, [x29, #-72]
  22c1fc:	ldr	x8, [x21, #200]
  22c200:	sub	x0, x29, #0x48
  22c204:	mov	x1, x24
  22c208:	add	x2, x8, #0x1
  22c20c:	str	x2, [x21, #200]
  22c210:	bl	240ae0 <asprintf@plt>
  22c214:	tbnz	w0, #31, 22c424 <method_create_session+0x760>
  22c218:	ldr	x0, [x21, #32]
  22c21c:	ldur	x1, [x29, #-72]
  22c220:	bl	23073c <hashmap_contains>
  22c224:	tbnz	w0, #0, 22c1f0 <method_create_session+0x52c>
  22c228:	ldur	x24, [x29, #-72]
  22c22c:	mov	x0, x24
  22c230:	bl	230754 <SESSION_IS_SELF>
  22c234:	tbnz	w0, #0, 22c494 <method_create_session+0x7d0>
  22c238:	mov	x0, x24
  22c23c:	bl	230798 <SESSION_IS_AUTO>
  22c240:	tbnz	w0, #0, 22c4b8 <method_create_session+0x7f4>
  22c244:	mov	x0, x21
  22c248:	bl	2290c4 <manager_reconnect_utmp>
  22c24c:	ldr	w1, [sp, #72]
  22c250:	add	x2, sp, #0x50
  22c254:	mov	x0, x21
  22c258:	bl	227aa0 <manager_add_user_by_uid>
  22c25c:	tbnz	w0, #31, 22c404 <method_create_session+0x740>
  22c260:	ldur	x1, [x29, #-72]
  22c264:	sub	x2, x29, #0x50
  22c268:	mov	x0, x21
  22c26c:	bl	227860 <manager_add_session>
  22c270:	tbnz	w0, #31, 22c404 <method_create_session+0x740>
  22c274:	ldur	x0, [x29, #-80]
  22c278:	ldr	x1, [sp, #80]
  22c27c:	bl	239cc8 <session_set_user>
  22c280:	ldur	x0, [x29, #-80]
  22c284:	ldr	w1, [sp, #76]
  22c288:	bl	239d4c <session_set_leader>
  22c28c:	tbnz	w0, #31, 22c404 <method_create_session+0x740>
  22c290:	ldur	x8, [x29, #-80]
  22c294:	stp	w23, w25, [x8, #20]
  22c298:	ldr	w9, [sp, #68]
  22c29c:	cmp	w9, #0x0
  22c2a0:	cset	w9, ne  // ne = any
  22c2a4:	strb	w9, [x8, #84]
  22c2a8:	ldr	w9, [sp, #64]
  22c2ac:	str	w9, [x8, #144]
  22c2b0:	ldur	x21, [x29, #-32]
  22c2b4:	mov	x0, x21
  22c2b8:	bl	22fbe8 <isempty>
  22c2bc:	tbnz	w0, #0, 22c2d8 <method_create_session+0x614>
  22c2c0:	mov	x0, x21
  22c2c4:	bl	240c40 <strdup@plt>
  22c2c8:	ldur	x8, [x29, #-80]
  22c2cc:	str	x0, [x8, #72]
  22c2d0:	cbz	x0, 22c440 <method_create_session+0x77c>
  22c2d4:	str	wzr, [x8, #80]
  22c2d8:	ldur	x21, [x29, #-40]
  22c2dc:	mov	x0, x21
  22c2e0:	bl	22fbe8 <isempty>
  22c2e4:	tbnz	w0, #0, 22c2fc <method_create_session+0x638>
  22c2e8:	mov	x0, x21
  22c2ec:	bl	240c40 <strdup@plt>
  22c2f0:	ldur	x8, [x29, #-80]
  22c2f4:	str	x0, [x8, #64]
  22c2f8:	cbz	x0, 22c440 <method_create_session+0x77c>
  22c2fc:	ldur	x21, [x29, #-48]
  22c300:	mov	x0, x21
  22c304:	bl	22fbe8 <isempty>
  22c308:	tbnz	w0, #0, 22c320 <method_create_session+0x65c>
  22c30c:	mov	x0, x21
  22c310:	bl	240c40 <strdup@plt>
  22c314:	ldur	x8, [x29, #-80]
  22c318:	str	x0, [x8, #88]
  22c31c:	cbz	x0, 22c440 <method_create_session+0x77c>
  22c320:	ldur	x21, [x29, #-56]
  22c324:	mov	x0, x21
  22c328:	bl	22fbe8 <isempty>
  22c32c:	tbnz	w0, #0, 22c344 <method_create_session+0x680>
  22c330:	mov	x0, x21
  22c334:	bl	240c40 <strdup@plt>
  22c338:	ldur	x8, [x29, #-80]
  22c33c:	str	x0, [x8, #96]
  22c340:	cbz	x0, 22c440 <method_create_session+0x77c>
  22c344:	ldr	x21, [x29, #24]
  22c348:	mov	x0, x21
  22c34c:	bl	22fbe8 <isempty>
  22c350:	tbnz	w0, #0, 22c368 <method_create_session+0x6a4>
  22c354:	mov	x0, x21
  22c358:	bl	240c40 <strdup@plt>
  22c35c:	ldur	x8, [x29, #-80]
  22c360:	str	x0, [x8, #104]
  22c364:	cbz	x0, 22c440 <method_create_session+0x77c>
  22c368:	ldur	x21, [x29, #-64]
  22c36c:	mov	x0, x21
  22c370:	bl	22fbe8 <isempty>
  22c374:	tbnz	w0, #0, 22c38c <method_create_session+0x6c8>
  22c378:	mov	x0, x21
  22c37c:	bl	240c40 <strdup@plt>
  22c380:	ldur	x8, [x29, #-80]
  22c384:	str	x0, [x8, #112]
  22c388:	cbz	x0, 22c440 <method_create_session+0x77c>
  22c38c:	cbz	x22, 22c3a0 <method_create_session+0x6dc>
  22c390:	ldur	x1, [x29, #-80]
  22c394:	mov	x0, x22
  22c398:	bl	235890 <seat_attach_session>
  22c39c:	tbnz	w0, #31, 22c404 <method_create_session+0x740>
  22c3a0:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22c3a4:	add	x2, x2, #0x6c8
  22c3a8:	mov	w1, #0x61                  	// #97
  22c3ac:	mov	x0, x20
  22c3b0:	bl	241130 <sd_bus_message_enter_container@plt>
  22c3b4:	tbnz	w0, #31, 22c404 <method_create_session+0x740>
  22c3b8:	ldur	x0, [x29, #-80]
  22c3bc:	mov	x1, x20
  22c3c0:	mov	x2, x19
  22c3c4:	bl	23b2d4 <session_start>
  22c3c8:	tbnz	w0, #31, 22c404 <method_create_session+0x740>
  22c3cc:	mov	x0, x20
  22c3d0:	bl	241140 <sd_bus_message_exit_container@plt>
  22c3d4:	tbnz	w0, #31, 22c404 <method_create_session+0x740>
  22c3d8:	mov	x0, x20
  22c3dc:	bl	241150 <sd_bus_message_ref@plt>
  22c3e0:	ldur	x8, [x29, #-80]
  22c3e4:	mov	w24, #0x1                   	// #1
  22c3e8:	str	x0, [x8, #216]
  22c3ec:	b	22bdb4 <method_create_session+0xf0>
  22c3f0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22c3f4:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22c3f8:	add	x1, x1, #0x945
  22c3fc:	add	x2, x2, #0xd2c
  22c400:	b	22bf4c <method_create_session+0x288>
  22c404:	mov	w24, w0
  22c408:	ldur	x0, [x29, #-80]
  22c40c:	cbz	x0, 22c414 <method_create_session+0x750>
  22c410:	bl	23bc50 <session_add_to_gc_queue>
  22c414:	ldr	x0, [sp, #80]
  22c418:	cbz	x0, 22bdb4 <method_create_session+0xf0>
  22c41c:	bl	23e844 <user_add_to_gc_queue>
  22c420:	b	22bdb4 <method_create_session+0xf0>
  22c424:	mov	w24, #0xfffffff4            	// #-12
  22c428:	b	22bdb4 <method_create_session+0xf0>
  22c42c:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22c430:	adrp	x2, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22c434:	add	x1, x1, #0x7b6
  22c438:	add	x2, x2, #0x4a6
  22c43c:	b	22bda8 <method_create_session+0xe4>
  22c440:	mov	w24, #0xfffffff4            	// #-12
  22c444:	ldur	x0, [x29, #-80]
  22c448:	cbnz	x0, 22c410 <method_create_session+0x74c>
  22c44c:	b	22c414 <method_create_session+0x750>
  22c450:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22c454:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22c458:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22c45c:	add	x1, x1, #0x30
  22c460:	add	x2, x2, #0xe6f
  22c464:	add	x4, x4, #0x583
  22c468:	mov	w3, #0x2ad                 	// #685
  22c46c:	bl	240790 <log_assert_failed_realm@plt>
  22c470:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22c474:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22c478:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22c47c:	add	x1, x1, #0x102
  22c480:	add	x2, x2, #0xe6f
  22c484:	add	x4, x4, #0x583
  22c488:	mov	w3, #0x2ae                 	// #686
  22c48c:	mov	w0, wzr
  22c490:	bl	240790 <log_assert_failed_realm@plt>
  22c494:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22c498:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22c49c:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22c4a0:	add	x1, x1, #0x4c4
  22c4a4:	add	x2, x2, #0xe6f
  22c4a8:	add	x4, x4, #0x583
  22c4ac:	mov	w3, #0x364                 	// #868
  22c4b0:	mov	w0, wzr
  22c4b4:	bl	240790 <log_assert_failed_realm@plt>
  22c4b8:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22c4bc:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22c4c0:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22c4c4:	add	x1, x1, #0xc97
  22c4c8:	add	x2, x2, #0xe6f
  22c4cc:	add	x4, x4, #0x583
  22c4d0:	mov	w3, #0x365                 	// #869
  22c4d4:	mov	w0, wzr
  22c4d8:	bl	240790 <log_assert_failed_realm@plt>

000000000022c4dc <method_release_session>:
  22c4dc:	sub	sp, sp, #0x40
  22c4e0:	stp	x29, x30, [sp, #16]
  22c4e4:	str	x21, [sp, #32]
  22c4e8:	stp	x20, x19, [sp, #48]
  22c4ec:	add	x29, sp, #0x10
  22c4f0:	cbz	x0, 22c560 <method_release_session+0x84>
  22c4f4:	mov	x21, x1
  22c4f8:	cbz	x1, 22c580 <method_release_session+0xa4>
  22c4fc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22c500:	mov	x20, x2
  22c504:	add	x1, x1, #0x6de
  22c508:	add	x2, sp, #0x8
  22c50c:	mov	x19, x0
  22c510:	bl	240fb0 <sd_bus_message_read@plt>
  22c514:	tbnz	w0, #31, 22c54c <method_release_session+0x70>
  22c518:	ldr	x2, [sp, #8]
  22c51c:	add	x4, x29, #0x18
  22c520:	mov	x0, x21
  22c524:	mov	x1, x19
  22c528:	mov	x3, x20
  22c52c:	bl	229238 <manager_get_session_from_creds>
  22c530:	tbnz	w0, #31, 22c54c <method_release_session+0x70>
  22c534:	ldr	x0, [x29, #24]
  22c538:	bl	23bcb4 <session_release>
  22c53c:	tbnz	w0, #31, 22c54c <method_release_session+0x70>
  22c540:	mov	x0, x19
  22c544:	mov	x1, xzr
  22c548:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22c54c:	ldp	x20, x19, [sp, #48]
  22c550:	ldr	x21, [sp, #32]
  22c554:	ldp	x29, x30, [sp, #16]
  22c558:	add	sp, sp, #0x40
  22c55c:	ret
  22c560:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22c564:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22c568:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22c56c:	add	x1, x1, #0x30
  22c570:	add	x2, x2, #0xe6f
  22c574:	add	x4, x4, #0xa42
  22c578:	mov	w3, #0x3d7                 	// #983
  22c57c:	bl	240790 <log_assert_failed_realm@plt>
  22c580:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22c584:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22c588:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22c58c:	add	x1, x1, #0x102
  22c590:	add	x2, x2, #0xe6f
  22c594:	add	x4, x4, #0xa42
  22c598:	mov	w3, #0x3d8                 	// #984
  22c59c:	mov	w0, wzr
  22c5a0:	bl	240790 <log_assert_failed_realm@plt>

000000000022c5a4 <method_activate_session>:
  22c5a4:	sub	sp, sp, #0x40
  22c5a8:	stp	x29, x30, [sp, #16]
  22c5ac:	str	x21, [sp, #32]
  22c5b0:	stp	x20, x19, [sp, #48]
  22c5b4:	add	x29, sp, #0x10
  22c5b8:	cbz	x0, 22c620 <method_activate_session+0x7c>
  22c5bc:	mov	x21, x1
  22c5c0:	cbz	x1, 22c640 <method_activate_session+0x9c>
  22c5c4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22c5c8:	mov	x19, x2
  22c5cc:	add	x1, x1, #0x6de
  22c5d0:	add	x2, sp, #0x8
  22c5d4:	mov	x20, x0
  22c5d8:	bl	240fb0 <sd_bus_message_read@plt>
  22c5dc:	tbnz	w0, #31, 22c60c <method_activate_session+0x68>
  22c5e0:	ldr	x2, [sp, #8]
  22c5e4:	add	x4, x29, #0x18
  22c5e8:	mov	x0, x21
  22c5ec:	mov	x1, x20
  22c5f0:	mov	x3, x19
  22c5f4:	bl	229238 <manager_get_session_from_creds>
  22c5f8:	tbnz	w0, #31, 22c60c <method_activate_session+0x68>
  22c5fc:	ldr	x1, [x29, #24]
  22c600:	mov	x0, x20
  22c604:	mov	x2, x19
  22c608:	bl	235d44 <bus_session_method_activate>
  22c60c:	ldp	x20, x19, [sp, #48]
  22c610:	ldr	x21, [sp, #32]
  22c614:	ldp	x29, x30, [sp, #16]
  22c618:	add	sp, sp, #0x40
  22c61c:	ret
  22c620:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22c624:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22c628:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22c62c:	add	x1, x1, #0x30
  22c630:	add	x2, x2, #0xe6f
  22c634:	add	x4, x4, #0xce5
  22c638:	mov	w3, #0x3ef                 	// #1007
  22c63c:	bl	240790 <log_assert_failed_realm@plt>
  22c640:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22c644:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22c648:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22c64c:	add	x1, x1, #0x102
  22c650:	add	x2, x2, #0xe6f
  22c654:	add	x4, x4, #0xce5
  22c658:	mov	w3, #0x3f0                 	// #1008
  22c65c:	mov	w0, wzr
  22c660:	bl	240790 <log_assert_failed_realm@plt>

000000000022c664 <method_activate_session_on_seat>:
  22c664:	sub	sp, sp, #0x50
  22c668:	stp	x29, x30, [sp, #32]
  22c66c:	str	x21, [sp, #48]
  22c670:	stp	x20, x19, [sp, #64]
  22c674:	add	x29, sp, #0x20
  22c678:	cbz	x0, 22c738 <method_activate_session_on_seat+0xd4>
  22c67c:	mov	x21, x1
  22c680:	cbz	x1, 22c758 <method_activate_session_on_seat+0xf4>
  22c684:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22c688:	mov	x20, x2
  22c68c:	add	x1, x1, #0xf7b
  22c690:	add	x2, x29, #0x18
  22c694:	sub	x3, x29, #0x8
  22c698:	mov	x19, x0
  22c69c:	bl	240fb0 <sd_bus_message_read@plt>
  22c6a0:	tbnz	w0, #31, 22c724 <method_activate_session_on_seat+0xc0>
  22c6a4:	ldr	x2, [x29, #24]
  22c6a8:	add	x4, sp, #0x10
  22c6ac:	mov	x0, x21
  22c6b0:	mov	x1, x19
  22c6b4:	mov	x3, x20
  22c6b8:	bl	229238 <manager_get_session_from_creds>
  22c6bc:	tbnz	w0, #31, 22c724 <method_activate_session_on_seat+0xc0>
  22c6c0:	ldur	x2, [x29, #-8]
  22c6c4:	add	x4, sp, #0x8
  22c6c8:	mov	x0, x21
  22c6cc:	mov	x1, x19
  22c6d0:	mov	x3, x20
  22c6d4:	bl	2296a0 <manager_get_seat_from_creds>
  22c6d8:	tbnz	w0, #31, 22c724 <method_activate_session_on_seat+0xc0>
  22c6dc:	ldp	x9, x0, [sp, #8]
  22c6e0:	ldr	x8, [x0, #136]
  22c6e4:	cmp	x8, x9
  22c6e8:	b.eq	22c710 <method_activate_session_on_seat+0xac>  // b.none
  22c6ec:	ldr	x3, [x29, #24]
  22c6f0:	ldur	x4, [x29, #-8]
  22c6f4:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22c6f8:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22c6fc:	add	x1, x1, #0xd48
  22c700:	add	x2, x2, #0x9
  22c704:	mov	x0, x20
  22c708:	bl	240f50 <sd_bus_error_setf@plt>
  22c70c:	b	22c724 <method_activate_session_on_seat+0xc0>
  22c710:	bl	23b214 <session_activate>
  22c714:	tbnz	w0, #31, 22c724 <method_activate_session_on_seat+0xc0>
  22c718:	mov	x0, x19
  22c71c:	mov	x1, xzr
  22c720:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22c724:	ldp	x20, x19, [sp, #64]
  22c728:	ldr	x21, [sp, #48]
  22c72c:	ldp	x29, x30, [sp, #32]
  22c730:	add	sp, sp, #0x50
  22c734:	ret
  22c738:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22c73c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22c740:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22c744:	add	x1, x1, #0x30
  22c748:	add	x2, x2, #0xe6f
  22c74c:	add	x4, x4, #0x6f7
  22c750:	mov	w3, #0x404                 	// #1028
  22c754:	bl	240790 <log_assert_failed_realm@plt>
  22c758:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22c75c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22c760:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22c764:	add	x1, x1, #0x102
  22c768:	add	x2, x2, #0xe6f
  22c76c:	add	x4, x4, #0x6f7
  22c770:	mov	w3, #0x405                 	// #1029
  22c774:	mov	w0, wzr
  22c778:	bl	240790 <log_assert_failed_realm@plt>

000000000022c77c <method_lock_session>:
  22c77c:	sub	sp, sp, #0x40
  22c780:	stp	x29, x30, [sp, #16]
  22c784:	str	x21, [sp, #32]
  22c788:	stp	x20, x19, [sp, #48]
  22c78c:	add	x29, sp, #0x10
  22c790:	cbz	x0, 22c7f8 <method_lock_session+0x7c>
  22c794:	mov	x21, x1
  22c798:	cbz	x1, 22c818 <method_lock_session+0x9c>
  22c79c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22c7a0:	mov	x19, x2
  22c7a4:	add	x1, x1, #0x6de
  22c7a8:	add	x2, sp, #0x8
  22c7ac:	mov	x20, x0
  22c7b0:	bl	240fb0 <sd_bus_message_read@plt>
  22c7b4:	tbnz	w0, #31, 22c7e4 <method_lock_session+0x68>
  22c7b8:	ldr	x2, [sp, #8]
  22c7bc:	add	x4, x29, #0x18
  22c7c0:	mov	x0, x21
  22c7c4:	mov	x1, x20
  22c7c8:	mov	x3, x19
  22c7cc:	bl	229238 <manager_get_session_from_creds>
  22c7d0:	tbnz	w0, #31, 22c7e4 <method_lock_session+0x68>
  22c7d4:	ldr	x1, [x29, #24]
  22c7d8:	mov	x0, x20
  22c7dc:	mov	x2, x19
  22c7e0:	bl	235dc4 <bus_session_method_lock>
  22c7e4:	ldp	x20, x19, [sp, #48]
  22c7e8:	ldr	x21, [sp, #32]
  22c7ec:	ldp	x29, x30, [sp, #16]
  22c7f0:	add	sp, sp, #0x40
  22c7f4:	ret
  22c7f8:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22c7fc:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22c800:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  22c804:	add	x1, x1, #0x30
  22c808:	add	x2, x2, #0xe6f
  22c80c:	add	x4, x4, #0x76a
  22c810:	mov	w3, #0x426                 	// #1062
  22c814:	bl	240790 <log_assert_failed_realm@plt>
  22c818:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22c81c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22c820:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  22c824:	add	x1, x1, #0x102
  22c828:	add	x2, x2, #0xe6f
  22c82c:	add	x4, x4, #0x76a
  22c830:	mov	w3, #0x427                 	// #1063
  22c834:	mov	w0, wzr
  22c838:	bl	240790 <log_assert_failed_realm@plt>

000000000022c83c <method_lock_sessions>:
  22c83c:	stp	x29, x30, [sp, #-32]!
  22c840:	stp	x20, x19, [sp, #16]
  22c844:	mov	x29, sp
  22c848:	cbz	x0, 22c8cc <method_lock_sessions+0x90>
  22c84c:	mov	x20, x1
  22c850:	cbz	x1, 22c8ec <method_lock_sessions+0xb0>
  22c854:	mov	x7, x2
  22c858:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22c85c:	add	x6, x20, #0x1b0
  22c860:	add	x2, x2, #0xc7c
  22c864:	mov	w1, #0x15                  	// #21
  22c868:	mov	w5, #0xffffffff            	// #-1
  22c86c:	mov	x3, xzr
  22c870:	mov	w4, wzr
  22c874:	mov	x19, x0
  22c878:	bl	241160 <bus_verify_polkit_async@plt>
  22c87c:	tbnz	w0, #31, 22c8c0 <method_lock_sessions+0x84>
  22c880:	cbz	w0, 22c8bc <method_lock_sessions+0x80>
  22c884:	mov	x0, x19
  22c888:	bl	241170 <sd_bus_message_get_member@plt>
  22c88c:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  22c890:	add	x1, x1, #0x487
  22c894:	bl	240c30 <strcmp@plt>
  22c898:	cmp	w0, #0x0
  22c89c:	cset	w1, eq  // eq = none
  22c8a0:	mov	x0, x20
  22c8a4:	bl	237a78 <session_send_lock_all>
  22c8a8:	tbnz	w0, #31, 22c8c0 <method_lock_sessions+0x84>
  22c8ac:	mov	x0, x19
  22c8b0:	mov	x1, xzr
  22c8b4:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22c8b8:	b	22c8c0 <method_lock_sessions+0x84>
  22c8bc:	mov	w0, #0x1                   	// #1
  22c8c0:	ldp	x20, x19, [sp, #16]
  22c8c4:	ldp	x29, x30, [sp], #32
  22c8c8:	ret
  22c8cc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22c8d0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22c8d4:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22c8d8:	add	x1, x1, #0x30
  22c8dc:	add	x2, x2, #0xe6f
  22c8e0:	add	x4, x4, #0xa87
  22c8e4:	mov	w3, #0x438                 	// #1080
  22c8e8:	bl	240790 <log_assert_failed_realm@plt>
  22c8ec:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22c8f0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22c8f4:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22c8f8:	add	x1, x1, #0x102
  22c8fc:	add	x2, x2, #0xe6f
  22c900:	add	x4, x4, #0xa87
  22c904:	mov	w3, #0x439                 	// #1081
  22c908:	mov	w0, wzr
  22c90c:	bl	240790 <log_assert_failed_realm@plt>

000000000022c910 <method_kill_session>:
  22c910:	sub	sp, sp, #0x40
  22c914:	stp	x29, x30, [sp, #16]
  22c918:	str	x21, [sp, #32]
  22c91c:	stp	x20, x19, [sp, #48]
  22c920:	add	x29, sp, #0x10
  22c924:	cbz	x0, 22c98c <method_kill_session+0x7c>
  22c928:	mov	x21, x1
  22c92c:	cbz	x1, 22c9ac <method_kill_session+0x9c>
  22c930:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22c934:	mov	x19, x2
  22c938:	add	x1, x1, #0x6de
  22c93c:	add	x2, x29, #0x18
  22c940:	mov	x20, x0
  22c944:	bl	240fb0 <sd_bus_message_read@plt>
  22c948:	tbnz	w0, #31, 22c978 <method_kill_session+0x68>
  22c94c:	ldr	x2, [x29, #24]
  22c950:	add	x4, sp, #0x8
  22c954:	mov	x0, x21
  22c958:	mov	x1, x20
  22c95c:	mov	x3, x19
  22c960:	bl	229238 <manager_get_session_from_creds>
  22c964:	tbnz	w0, #31, 22c978 <method_kill_session+0x68>
  22c968:	ldr	x1, [sp, #8]
  22c96c:	mov	x0, x20
  22c970:	mov	x2, x19
  22c974:	bl	235f48 <bus_session_method_kill>
  22c978:	ldp	x20, x19, [sp, #48]
  22c97c:	ldr	x21, [sp, #32]
  22c980:	ldp	x29, x30, [sp, #16]
  22c984:	add	sp, sp, #0x40
  22c988:	ret
  22c98c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22c990:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22c994:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22c998:	add	x1, x1, #0x30
  22c99c:	add	x2, x2, #0xe6f
  22c9a0:	add	x4, x4, #0x7d9
  22c9a4:	mov	w3, #0x456                 	// #1110
  22c9a8:	bl	240790 <log_assert_failed_realm@plt>
  22c9ac:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22c9b0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22c9b4:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22c9b8:	add	x1, x1, #0x102
  22c9bc:	add	x2, x2, #0xe6f
  22c9c0:	add	x4, x4, #0x7d9
  22c9c4:	mov	w3, #0x457                 	// #1111
  22c9c8:	mov	w0, wzr
  22c9cc:	bl	240790 <log_assert_failed_realm@plt>

000000000022c9d0 <method_kill_user>:
  22c9d0:	sub	sp, sp, #0x40
  22c9d4:	stp	x29, x30, [sp, #16]
  22c9d8:	str	x21, [sp, #32]
  22c9dc:	stp	x20, x19, [sp, #48]
  22c9e0:	add	x29, sp, #0x10
  22c9e4:	cbz	x0, 22ca4c <method_kill_user+0x7c>
  22c9e8:	mov	x21, x1
  22c9ec:	cbz	x1, 22ca6c <method_kill_user+0x9c>
  22c9f0:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22c9f4:	mov	x19, x2
  22c9f8:	add	x1, x1, #0x420
  22c9fc:	add	x2, x29, #0x1c
  22ca00:	mov	x20, x0
  22ca04:	bl	240fb0 <sd_bus_message_read@plt>
  22ca08:	tbnz	w0, #31, 22ca38 <method_kill_user+0x68>
  22ca0c:	ldr	w2, [x29, #28]
  22ca10:	add	x4, sp, #0x8
  22ca14:	mov	x0, x21
  22ca18:	mov	x1, x20
  22ca1c:	mov	x3, x19
  22ca20:	bl	2294f4 <manager_get_user_from_creds>
  22ca24:	tbnz	w0, #31, 22ca38 <method_kill_user+0x68>
  22ca28:	ldr	x1, [sp, #8]
  22ca2c:	mov	x0, x20
  22ca30:	mov	x2, x19
  22ca34:	bl	23ca7c <bus_user_method_kill>
  22ca38:	ldp	x20, x19, [sp, #48]
  22ca3c:	ldr	x21, [sp, #32]
  22ca40:	ldp	x29, x30, [sp, #16]
  22ca44:	add	sp, sp, #0x40
  22ca48:	ret
  22ca4c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22ca50:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ca54:	adrp	x4, 212000 <inhibit_what_to_string.buffer+0x212000>
  22ca58:	add	x1, x1, #0x30
  22ca5c:	add	x2, x2, #0xe6f
  22ca60:	add	x4, x4, #0x1a4
  22ca64:	mov	w3, #0x46a                 	// #1130
  22ca68:	bl	240790 <log_assert_failed_realm@plt>
  22ca6c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22ca70:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ca74:	adrp	x4, 212000 <inhibit_what_to_string.buffer+0x212000>
  22ca78:	add	x1, x1, #0x102
  22ca7c:	add	x2, x2, #0xe6f
  22ca80:	add	x4, x4, #0x1a4
  22ca84:	mov	w3, #0x46b                 	// #1131
  22ca88:	mov	w0, wzr
  22ca8c:	bl	240790 <log_assert_failed_realm@plt>

000000000022ca90 <method_terminate_session>:
  22ca90:	sub	sp, sp, #0x40
  22ca94:	stp	x29, x30, [sp, #16]
  22ca98:	str	x21, [sp, #32]
  22ca9c:	stp	x20, x19, [sp, #48]
  22caa0:	add	x29, sp, #0x10
  22caa4:	cbz	x0, 22cb0c <method_terminate_session+0x7c>
  22caa8:	mov	x21, x1
  22caac:	cbz	x1, 22cb2c <method_terminate_session+0x9c>
  22cab0:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22cab4:	mov	x19, x2
  22cab8:	add	x1, x1, #0x6de
  22cabc:	add	x2, x29, #0x18
  22cac0:	mov	x20, x0
  22cac4:	bl	240fb0 <sd_bus_message_read@plt>
  22cac8:	tbnz	w0, #31, 22caf8 <method_terminate_session+0x68>
  22cacc:	ldr	x2, [x29, #24]
  22cad0:	add	x4, sp, #0x8
  22cad4:	mov	x0, x21
  22cad8:	mov	x1, x20
  22cadc:	mov	x3, x19
  22cae0:	bl	229238 <manager_get_session_from_creds>
  22cae4:	tbnz	w0, #31, 22caf8 <method_terminate_session+0x68>
  22cae8:	ldr	x1, [sp, #8]
  22caec:	mov	x0, x20
  22caf0:	mov	x2, x19
  22caf4:	bl	235c80 <bus_session_method_terminate>
  22caf8:	ldp	x20, x19, [sp, #48]
  22cafc:	ldr	x21, [sp, #32]
  22cb00:	ldp	x29, x30, [sp, #16]
  22cb04:	add	sp, sp, #0x40
  22cb08:	ret
  22cb0c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22cb10:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22cb14:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22cb18:	add	x1, x1, #0x30
  22cb1c:	add	x2, x2, #0xe6f
  22cb20:	add	x4, x4, #0x745
  22cb24:	mov	w3, #0x47e                 	// #1150
  22cb28:	bl	240790 <log_assert_failed_realm@plt>
  22cb2c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22cb30:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22cb34:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22cb38:	add	x1, x1, #0x102
  22cb3c:	add	x2, x2, #0xe6f
  22cb40:	add	x4, x4, #0x745
  22cb44:	mov	w3, #0x47f                 	// #1151
  22cb48:	mov	w0, wzr
  22cb4c:	bl	240790 <log_assert_failed_realm@plt>

000000000022cb50 <method_terminate_user>:
  22cb50:	sub	sp, sp, #0x40
  22cb54:	stp	x29, x30, [sp, #16]
  22cb58:	str	x21, [sp, #32]
  22cb5c:	stp	x20, x19, [sp, #48]
  22cb60:	add	x29, sp, #0x10
  22cb64:	cbz	x0, 22cbcc <method_terminate_user+0x7c>
  22cb68:	mov	x21, x1
  22cb6c:	cbz	x1, 22cbec <method_terminate_user+0x9c>
  22cb70:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22cb74:	mov	x19, x2
  22cb78:	add	x1, x1, #0x420
  22cb7c:	add	x2, x29, #0x1c
  22cb80:	mov	x20, x0
  22cb84:	bl	240fb0 <sd_bus_message_read@plt>
  22cb88:	tbnz	w0, #31, 22cbb8 <method_terminate_user+0x68>
  22cb8c:	ldr	w2, [x29, #28]
  22cb90:	add	x4, sp, #0x8
  22cb94:	mov	x0, x21
  22cb98:	mov	x1, x20
  22cb9c:	mov	x3, x19
  22cba0:	bl	2294f4 <manager_get_user_from_creds>
  22cba4:	tbnz	w0, #31, 22cbb8 <method_terminate_user+0x68>
  22cba8:	ldr	x1, [sp, #8]
  22cbac:	mov	x0, x20
  22cbb0:	mov	x2, x19
  22cbb4:	bl	23c9bc <bus_user_method_terminate>
  22cbb8:	ldp	x20, x19, [sp, #48]
  22cbbc:	ldr	x21, [sp, #32]
  22cbc0:	ldp	x29, x30, [sp, #16]
  22cbc4:	add	sp, sp, #0x40
  22cbc8:	ret
  22cbcc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22cbd0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22cbd4:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22cbd8:	add	x1, x1, #0x30
  22cbdc:	add	x2, x2, #0xe6f
  22cbe0:	add	x4, x4, #0xb1d
  22cbe4:	mov	w3, #0x492                 	// #1170
  22cbe8:	bl	240790 <log_assert_failed_realm@plt>
  22cbec:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22cbf0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22cbf4:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22cbf8:	add	x1, x1, #0x102
  22cbfc:	add	x2, x2, #0xe6f
  22cc00:	add	x4, x4, #0xb1d
  22cc04:	mov	w3, #0x493                 	// #1171
  22cc08:	mov	w0, wzr
  22cc0c:	bl	240790 <log_assert_failed_realm@plt>

000000000022cc10 <method_terminate_seat>:
  22cc10:	sub	sp, sp, #0x40
  22cc14:	stp	x29, x30, [sp, #16]
  22cc18:	str	x21, [sp, #32]
  22cc1c:	stp	x20, x19, [sp, #48]
  22cc20:	add	x29, sp, #0x10
  22cc24:	cbz	x0, 22cc8c <method_terminate_seat+0x7c>
  22cc28:	mov	x21, x1
  22cc2c:	cbz	x1, 22ccac <method_terminate_seat+0x9c>
  22cc30:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22cc34:	mov	x19, x2
  22cc38:	add	x1, x1, #0x6de
  22cc3c:	add	x2, x29, #0x18
  22cc40:	mov	x20, x0
  22cc44:	bl	240fb0 <sd_bus_message_read@plt>
  22cc48:	tbnz	w0, #31, 22cc78 <method_terminate_seat+0x68>
  22cc4c:	ldr	x2, [x29, #24]
  22cc50:	add	x4, sp, #0x8
  22cc54:	mov	x0, x21
  22cc58:	mov	x1, x20
  22cc5c:	mov	x3, x19
  22cc60:	bl	2296a0 <manager_get_seat_from_creds>
  22cc64:	tbnz	w0, #31, 22cc78 <method_terminate_seat+0x68>
  22cc68:	ldr	x1, [sp, #8]
  22cc6c:	mov	x0, x20
  22cc70:	mov	x2, x19
  22cc74:	bl	23338c <bus_seat_method_terminate>
  22cc78:	ldp	x20, x19, [sp, #48]
  22cc7c:	ldr	x21, [sp, #32]
  22cc80:	ldp	x29, x30, [sp, #16]
  22cc84:	add	sp, sp, #0x40
  22cc88:	ret
  22cc8c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22cc90:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22cc94:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22cc98:	add	x1, x1, #0x30
  22cc9c:	add	x2, x2, #0xe6f
  22cca0:	add	x4, x4, #0x342
  22cca4:	mov	w3, #0x4a6                 	// #1190
  22cca8:	bl	240790 <log_assert_failed_realm@plt>
  22ccac:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22ccb0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ccb4:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22ccb8:	add	x1, x1, #0x102
  22ccbc:	add	x2, x2, #0xe6f
  22ccc0:	add	x4, x4, #0x342
  22ccc4:	mov	w3, #0x4a7                 	// #1191
  22ccc8:	mov	w0, wzr
  22cccc:	bl	240790 <log_assert_failed_realm@plt>

000000000022ccd0 <method_set_user_linger>:
  22ccd0:	stp	x29, x30, [sp, #-64]!
  22ccd4:	stp	x24, x23, [sp, #16]
  22ccd8:	stp	x22, x21, [sp, #32]
  22ccdc:	stp	x20, x19, [sp, #48]
  22cce0:	mov	x29, sp
  22cce4:	sub	sp, sp, #0x30
  22cce8:	stp	xzr, xzr, [x29, #-16]
  22ccec:	cbz	x0, 22cf70 <method_set_user_linger+0x2a0>
  22ccf0:	mov	x20, x1
  22ccf4:	cbz	x1, 22cf90 <method_set_user_linger+0x2c0>
  22ccf8:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22ccfc:	mov	x22, x2
  22cd00:	add	x1, x1, #0xfba
  22cd04:	sub	x2, x29, #0x1c
  22cd08:	sub	x3, x29, #0x14
  22cd0c:	sub	x4, x29, #0x18
  22cd10:	mov	x19, x0
  22cd14:	bl	240fb0 <sd_bus_message_read@plt>
  22cd18:	tbnz	w0, #31, 22ced8 <method_set_user_linger+0x208>
  22cd1c:	mov	x1, #0x10                  	// #16
  22cd20:	movk	x1, #0x40, lsl #16
  22cd24:	sub	x2, x29, #0x8
  22cd28:	movk	x1, #0x8000, lsl #48
  22cd2c:	mov	x0, x19
  22cd30:	bl	240f60 <sd_bus_query_sender_creds@plt>
  22cd34:	tbnz	w0, #31, 22ced8 <method_set_user_linger+0x208>
  22cd38:	ldur	w0, [x29, #-28]
  22cd3c:	bl	240f90 <uid_is_valid@plt>
  22cd40:	tbnz	w0, #0, 22cd54 <method_set_user_linger+0x84>
  22cd44:	ldur	x0, [x29, #-8]
  22cd48:	sub	x1, x29, #0x1c
  22cd4c:	bl	240f80 <sd_bus_creds_get_owner_uid@plt>
  22cd50:	tbnz	w0, #31, 22ced8 <method_set_user_linger+0x208>
  22cd54:	ldur	x0, [x29, #-8]
  22cd58:	sub	x1, x29, #0x20
  22cd5c:	bl	241180 <sd_bus_creds_get_euid@plt>
  22cd60:	tbnz	w0, #31, 22ced8 <method_set_user_linger+0x208>
  22cd64:	bl	240930 <__errno_location@plt>
  22cd68:	str	wzr, [x0]
  22cd6c:	mov	x21, x0
  22cd70:	ldur	w0, [x29, #-28]
  22cd74:	bl	240dc0 <getpwuid@plt>
  22cd78:	cbz	x0, 22ced4 <method_set_user_linger+0x204>
  22cd7c:	ldp	w9, w8, [x29, #-32]
  22cd80:	ldur	w11, [x29, #-24]
  22cd84:	adrp	x10, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22cd88:	adrp	x12, 208000 <inhibit_what_to_string.buffer+0x208000>
  22cd8c:	add	x10, x10, #0x78c
  22cd90:	add	x12, x12, #0xba6
  22cd94:	cmp	w8, w9
  22cd98:	csel	x2, x12, x10, eq  // eq = none
  22cd9c:	cmp	w11, #0x0
  22cda0:	mov	x24, x0
  22cda4:	cset	w4, ne  // ne = any
  22cda8:	add	x6, x20, #0x1b0
  22cdac:	mov	w1, #0x15                  	// #21
  22cdb0:	mov	w5, #0xffffffff            	// #-1
  22cdb4:	mov	x0, x19
  22cdb8:	mov	x3, xzr
  22cdbc:	mov	x7, x22
  22cdc0:	bl	241160 <bus_verify_polkit_async@plt>
  22cdc4:	mov	w23, w0
  22cdc8:	tbnz	w0, #31, 22cedc <method_set_user_linger+0x20c>
  22cdcc:	cbz	w23, 22cf08 <method_set_user_linger+0x238>
  22cdd0:	adrp	x0, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22cdd4:	add	x0, x0, #0x7b3
  22cdd8:	mov	w1, #0x1ed                 	// #493
  22cddc:	bl	241190 <mkdir_p_label@plt>
  22cde0:	adrp	x0, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22cde4:	add	x0, x0, #0xe10
  22cde8:	mov	w1, #0x1ed                 	// #493
  22cdec:	mov	w4, #0x2                   	// #2
  22cdf0:	mov	w2, wzr
  22cdf4:	mov	w3, wzr
  22cdf8:	bl	2411a0 <mkdir_safe_label@plt>
  22cdfc:	tbnz	w0, #31, 22ced8 <method_set_user_linger+0x208>
  22ce00:	ldr	x0, [x24]
  22ce04:	bl	2411b0 <cescape@plt>
  22ce08:	stur	x0, [x29, #-16]
  22ce0c:	cbz	x0, 22cf10 <method_set_user_linger+0x240>
  22ce10:	ldur	x8, [x29, #-16]
  22ce14:	adrp	x9, 208000 <inhibit_what_to_string.buffer+0x208000>
  22ce18:	mov	x23, xzr
  22ce1c:	mov	x22, xzr
  22ce20:	add	x9, x9, #0x46
  22ce24:	sub	x24, x29, #0x30
  22ce28:	stp	x9, x8, [x29, #-48]
  22ce2c:	ldr	x0, [x24, x23]
  22ce30:	cbz	x0, 22ce48 <method_set_user_linger+0x178>
  22ce34:	bl	240d30 <strlen@plt>
  22ce38:	add	x23, x23, #0x8
  22ce3c:	cmp	x23, #0x10
  22ce40:	add	x22, x0, x22
  22ce44:	b.ne	22ce2c <method_set_user_linger+0x15c>  // b.any
  22ce48:	add	x22, x22, #0x1
  22ce4c:	mov	w0, #0x1                   	// #1
  22ce50:	mov	x1, x22
  22ce54:	bl	22f7ac <size_multiply_overflow>
  22ce58:	tbnz	w0, #0, 22cfb4 <method_set_user_linger+0x2e4>
  22ce5c:	cmp	x22, #0x400, lsl #12
  22ce60:	b.hi	22cfc0 <method_set_user_linger+0x2f0>  // b.pmore
  22ce64:	add	x9, x22, #0xf
  22ce68:	mov	x8, sp
  22ce6c:	and	x9, x9, #0xfffffffffffffff0
  22ce70:	sub	x22, x8, x9
  22ce74:	mov	sp, x22
  22ce78:	mov	x23, xzr
  22ce7c:	sub	x24, x29, #0x30
  22ce80:	mov	x0, x22
  22ce84:	ldr	x1, [x24, x23]
  22ce88:	cbz	x1, 22ce9c <method_set_user_linger+0x1cc>
  22ce8c:	bl	240d40 <stpcpy@plt>
  22ce90:	add	x23, x23, #0x8
  22ce94:	cmp	x23, #0x10
  22ce98:	b.ne	22ce84 <method_set_user_linger+0x1b4>  // b.any
  22ce9c:	strb	wzr, [x0]
  22cea0:	ldur	w8, [x29, #-20]
  22cea4:	cbz	w8, 22cf18 <method_set_user_linger+0x248>
  22cea8:	mov	x0, x22
  22ceac:	bl	2411c0 <touch@plt>
  22ceb0:	tbnz	w0, #31, 22ced8 <method_set_user_linger+0x208>
  22ceb4:	ldur	w1, [x29, #-28]
  22ceb8:	sub	x2, x29, #0x30
  22cebc:	mov	x0, x20
  22cec0:	bl	227aa0 <manager_add_user_by_uid>
  22cec4:	tbnz	w0, #31, 22cf50 <method_set_user_linger+0x280>
  22cec8:	ldur	x0, [x29, #-48]
  22cecc:	bl	23e344 <user_start>
  22ced0:	b	22cf50 <method_set_user_linger+0x280>
  22ced4:	bl	2307b8 <errno_or_else>
  22ced8:	mov	w23, w0
  22cedc:	sub	x0, x29, #0x10
  22cee0:	bl	229b20 <freep>
  22cee4:	sub	x0, x29, #0x8
  22cee8:	bl	230374 <sd_bus_creds_unrefp>
  22ceec:	mov	w0, w23
  22cef0:	mov	sp, x29
  22cef4:	ldp	x20, x19, [sp, #48]
  22cef8:	ldp	x22, x21, [sp, #32]
  22cefc:	ldp	x24, x23, [sp, #16]
  22cf00:	ldp	x29, x30, [sp], #64
  22cf04:	ret
  22cf08:	mov	w23, #0x1                   	// #1
  22cf0c:	b	22cedc <method_set_user_linger+0x20c>
  22cf10:	mov	w23, #0xfffffff4            	// #-12
  22cf14:	b	22cedc <method_set_user_linger+0x20c>
  22cf18:	mov	x0, x22
  22cf1c:	bl	2411d0 <unlink@plt>
  22cf20:	tbz	w0, #31, 22cf30 <method_set_user_linger+0x260>
  22cf24:	ldr	w9, [x21]
  22cf28:	cmp	w9, #0x2
  22cf2c:	b.ne	22cf60 <method_set_user_linger+0x290>  // b.any
  22cf30:	ldur	w8, [x29, #-28]
  22cf34:	ldr	x0, [x20, #48]
  22cf38:	add	x1, x8, #0x1
  22cf3c:	bl	2294e0 <hashmap_get>
  22cf40:	cbz	x0, 22cf48 <method_set_user_linger+0x278>
  22cf44:	bl	23e844 <user_add_to_gc_queue>
  22cf48:	mov	w8, #0x1                   	// #1
  22cf4c:	cbz	w8, 22cedc <method_set_user_linger+0x20c>
  22cf50:	mov	x0, x19
  22cf54:	mov	x1, xzr
  22cf58:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22cf5c:	b	22ced8 <method_set_user_linger+0x208>
  22cf60:	mov	w8, wzr
  22cf64:	neg	w23, w9
  22cf68:	cbz	w8, 22cedc <method_set_user_linger+0x20c>
  22cf6c:	b	22cf50 <method_set_user_linger+0x280>
  22cf70:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22cf74:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22cf78:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22cf7c:	add	x1, x1, #0x30
  22cf80:	add	x2, x2, #0xe6f
  22cf84:	add	x4, x4, #0xb61
  22cf88:	mov	w3, #0x4bd                 	// #1213
  22cf8c:	bl	240790 <log_assert_failed_realm@plt>
  22cf90:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22cf94:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22cf98:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22cf9c:	add	x1, x1, #0x102
  22cfa0:	add	x2, x2, #0xe6f
  22cfa4:	add	x4, x4, #0xb61
  22cfa8:	mov	w3, #0x4be                 	// #1214
  22cfac:	mov	w0, wzr
  22cfb0:	bl	240790 <log_assert_failed_realm@plt>
  22cfb4:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22cfb8:	add	x1, x1, #0xf50
  22cfbc:	b	22cfc8 <method_set_user_linger+0x2f8>
  22cfc0:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  22cfc4:	add	x1, x1, #0xa15
  22cfc8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22cfcc:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22cfd0:	add	x2, x2, #0xe6f
  22cfd4:	add	x4, x4, #0xb61
  22cfd8:	mov	w3, #0x4f3                 	// #1267
  22cfdc:	mov	w0, wzr
  22cfe0:	bl	240790 <log_assert_failed_realm@plt>

000000000022cfe4 <method_attach_device>:
  22cfe4:	sub	sp, sp, #0x50
  22cfe8:	stp	x29, x30, [sp, #32]
  22cfec:	stp	x22, x21, [sp, #48]
  22cff0:	stp	x20, x19, [sp, #64]
  22cff4:	add	x29, sp, #0x20
  22cff8:	cbz	x0, 22d164 <method_attach_device+0x180>
  22cffc:	mov	x21, x1
  22d000:	cbz	x1, 22d184 <method_attach_device+0x1a0>
  22d004:	adrp	x1, 206000 <inhibit_what_to_string.buffer+0x206000>
  22d008:	mov	x20, x2
  22d00c:	add	x1, x1, #0xee9
  22d010:	add	x2, sp, #0x10
  22d014:	sub	x3, x29, #0x8
  22d018:	add	x4, sp, #0xc
  22d01c:	mov	x19, x0
  22d020:	bl	240fb0 <sd_bus_message_read@plt>
  22d024:	tbnz	w0, #31, 22d0c4 <method_attach_device+0xe0>
  22d028:	ldur	x22, [x29, #-8]
  22d02c:	mov	x0, x22
  22d030:	bl	2411e0 <path_is_normalized@plt>
  22d034:	tbz	w0, #0, 22d094 <method_attach_device+0xb0>
  22d038:	adrp	x1, 212000 <inhibit_what_to_string.buffer+0x212000>
  22d03c:	add	x1, x1, #0x1e3
  22d040:	mov	x0, x22
  22d044:	bl	240f00 <path_startswith@plt>
  22d048:	cbz	x0, 22d0a8 <method_attach_device+0xc4>
  22d04c:	ldr	x22, [sp, #16]
  22d050:	mov	x0, x22
  22d054:	bl	229340 <SEAT_IS_SELF>
  22d058:	tbnz	w0, #0, 22d068 <method_attach_device+0x84>
  22d05c:	mov	x0, x22
  22d060:	bl	2294c0 <SEAT_IS_AUTO>
  22d064:	tbz	w0, #0, 22d0d8 <method_attach_device+0xf4>
  22d068:	mov	x4, sp
  22d06c:	mov	x0, x21
  22d070:	mov	x1, x19
  22d074:	mov	x2, x22
  22d078:	mov	x3, x20
  22d07c:	bl	2296a0 <manager_get_seat_from_creds>
  22d080:	tbnz	w0, #31, 22d0c4 <method_attach_device+0xe0>
  22d084:	ldr	x8, [sp]
  22d088:	ldr	x8, [x8, #8]
  22d08c:	str	x8, [sp, #16]
  22d090:	b	22d0e4 <method_attach_device+0x100>
  22d094:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22d098:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  22d09c:	add	x1, x1, #0x47f
  22d0a0:	add	x2, x2, #0x7ac
  22d0a4:	b	22d0b8 <method_attach_device+0xd4>
  22d0a8:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22d0ac:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  22d0b0:	add	x1, x1, #0x47f
  22d0b4:	add	x2, x2, #0x7c6
  22d0b8:	mov	x0, x20
  22d0bc:	mov	x3, x22
  22d0c0:	bl	240f50 <sd_bus_error_setf@plt>
  22d0c4:	ldp	x20, x19, [sp, #64]
  22d0c8:	ldp	x22, x21, [sp, #48]
  22d0cc:	ldp	x29, x30, [sp, #32]
  22d0d0:	add	sp, sp, #0x50
  22d0d4:	ret
  22d0d8:	mov	x0, x22
  22d0dc:	bl	234604 <seat_name_is_valid>
  22d0e0:	tbz	w0, #0, 22d148 <method_attach_device+0x164>
  22d0e4:	ldr	w8, [sp, #12]
  22d0e8:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  22d0ec:	add	x6, x21, #0x1b0
  22d0f0:	add	x2, x2, #0x5f
  22d0f4:	cmp	w8, #0x0
  22d0f8:	cset	w4, ne  // ne = any
  22d0fc:	mov	w1, #0x15                  	// #21
  22d100:	mov	w5, #0xffffffff            	// #-1
  22d104:	mov	x0, x19
  22d108:	mov	x3, xzr
  22d10c:	mov	x7, x20
  22d110:	bl	241160 <bus_verify_polkit_async@plt>
  22d114:	tbnz	w0, #31, 22d0c4 <method_attach_device+0xe0>
  22d118:	cbz	w0, 22d140 <method_attach_device+0x15c>
  22d11c:	ldr	x1, [sp, #16]
  22d120:	ldur	x2, [x29, #-8]
  22d124:	mov	x0, x21
  22d128:	bl	2307dc <attach_device>
  22d12c:	tbnz	w0, #31, 22d0c4 <method_attach_device+0xe0>
  22d130:	mov	x0, x19
  22d134:	mov	x1, xzr
  22d138:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22d13c:	b	22d0c4 <method_attach_device+0xe0>
  22d140:	mov	w0, #0x1                   	// #1
  22d144:	b	22d0c4 <method_attach_device+0xe0>
  22d148:	ldr	x3, [sp, #16]
  22d14c:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22d150:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22d154:	add	x1, x1, #0x47f
  22d158:	add	x2, x2, #0x3c9
  22d15c:	mov	x0, x20
  22d160:	b	22d0c0 <method_attach_device+0xdc>
  22d164:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22d168:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22d16c:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22d170:	add	x1, x1, #0x30
  22d174:	add	x2, x2, #0xe6f
  22d178:	add	x4, x4, #0x386
  22d17c:	mov	w3, #0x579                 	// #1401
  22d180:	bl	240790 <log_assert_failed_realm@plt>
  22d184:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22d188:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22d18c:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22d190:	add	x1, x1, #0x102
  22d194:	add	x2, x2, #0xe6f
  22d198:	add	x4, x4, #0x386
  22d19c:	mov	w3, #0x57a                 	// #1402
  22d1a0:	mov	w0, wzr
  22d1a4:	bl	240790 <log_assert_failed_realm@plt>

000000000022d1a8 <method_flush_devices>:
  22d1a8:	stp	x29, x30, [sp, #-48]!
  22d1ac:	str	x21, [sp, #16]
  22d1b0:	stp	x20, x19, [sp, #32]
  22d1b4:	mov	x29, sp
  22d1b8:	cbz	x0, 22d248 <method_flush_devices+0xa0>
  22d1bc:	mov	x20, x1
  22d1c0:	cbz	x1, 22d268 <method_flush_devices+0xc0>
  22d1c4:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22d1c8:	mov	x21, x2
  22d1cc:	add	x1, x1, #0xb8c
  22d1d0:	add	x2, x29, #0x1c
  22d1d4:	mov	x19, x0
  22d1d8:	bl	240fb0 <sd_bus_message_read@plt>
  22d1dc:	tbnz	w0, #31, 22d238 <method_flush_devices+0x90>
  22d1e0:	ldr	w8, [x29, #28]
  22d1e4:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22d1e8:	add	x6, x20, #0x1b0
  22d1ec:	add	x2, x2, #0xd71
  22d1f0:	cmp	w8, #0x0
  22d1f4:	cset	w4, ne  // ne = any
  22d1f8:	mov	w1, #0x15                  	// #21
  22d1fc:	mov	w5, #0xffffffff            	// #-1
  22d200:	mov	x0, x19
  22d204:	mov	x3, xzr
  22d208:	mov	x7, x21
  22d20c:	bl	241160 <bus_verify_polkit_async@plt>
  22d210:	tbnz	w0, #31, 22d238 <method_flush_devices+0x90>
  22d214:	cbz	w0, 22d234 <method_flush_devices+0x8c>
  22d218:	mov	x0, x20
  22d21c:	bl	230adc <flush_devices>
  22d220:	tbnz	w0, #31, 22d238 <method_flush_devices+0x90>
  22d224:	mov	x0, x19
  22d228:	mov	x1, xzr
  22d22c:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22d230:	b	22d238 <method_flush_devices+0x90>
  22d234:	mov	w0, #0x1                   	// #1
  22d238:	ldp	x20, x19, [sp, #32]
  22d23c:	ldr	x21, [sp, #16]
  22d240:	ldp	x29, x30, [sp], #48
  22d244:	ret
  22d248:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22d24c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22d250:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22d254:	add	x1, x1, #0x30
  22d258:	add	x2, x2, #0xe6f
  22d25c:	add	x4, x4, #0x9df
  22d260:	mov	w3, #0x5aa                 	// #1450
  22d264:	bl	240790 <log_assert_failed_realm@plt>
  22d268:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22d26c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22d270:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22d274:	add	x1, x1, #0x102
  22d278:	add	x2, x2, #0xe6f
  22d27c:	add	x4, x4, #0x9df
  22d280:	mov	w3, #0x5ab                 	// #1451
  22d284:	mov	w0, wzr
  22d288:	bl	240790 <log_assert_failed_realm@plt>

000000000022d28c <method_poweroff>:
  22d28c:	sub	sp, sp, #0x20
  22d290:	adrp	x9, 210000 <inhibit_what_to_string.buffer+0x210000>
  22d294:	mov	x8, x0
  22d298:	add	x9, x9, #0xae6
  22d29c:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22d2a0:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22d2a4:	adrp	x6, 208000 <inhibit_what_to_string.buffer+0x208000>
  22d2a8:	add	x4, x4, #0x29e
  22d2ac:	add	x5, x5, #0x81b
  22d2b0:	add	x6, x6, #0x8b
  22d2b4:	mov	w3, #0x1                   	// #1
  22d2b8:	str	x2, [sp]
  22d2bc:	mov	x0, x1
  22d2c0:	mov	x1, x8
  22d2c4:	mov	x2, x9
  22d2c8:	mov	x7, xzr
  22d2cc:	stp	x29, x30, [sp, #16]
  22d2d0:	add	x29, sp, #0x10
  22d2d4:	bl	230d04 <method_do_shutdown_or_sleep>
  22d2d8:	ldp	x29, x30, [sp, #16]
  22d2dc:	add	sp, sp, #0x20
  22d2e0:	ret

000000000022d2e4 <method_reboot>:
  22d2e4:	sub	sp, sp, #0x20
  22d2e8:	adrp	x9, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22d2ec:	mov	x8, x0
  22d2f0:	add	x9, x9, #0x932
  22d2f4:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22d2f8:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  22d2fc:	adrp	x6, 210000 <inhibit_what_to_string.buffer+0x210000>
  22d300:	add	x4, x4, #0xd2b
  22d304:	add	x5, x5, #0xbd9
  22d308:	add	x6, x6, #0x188
  22d30c:	mov	w3, #0x1                   	// #1
  22d310:	str	x2, [sp]
  22d314:	mov	x0, x1
  22d318:	mov	x1, x8
  22d31c:	mov	x2, x9
  22d320:	mov	x7, xzr
  22d324:	stp	x29, x30, [sp, #16]
  22d328:	add	x29, sp, #0x10
  22d32c:	bl	230d04 <method_do_shutdown_or_sleep>
  22d330:	ldp	x29, x30, [sp, #16]
  22d334:	add	sp, sp, #0x20
  22d338:	ret

000000000022d33c <method_halt>:
  22d33c:	sub	sp, sp, #0x20
  22d340:	adrp	x9, 211000 <inhibit_what_to_string.buffer+0x211000>
  22d344:	mov	x8, x0
  22d348:	add	x9, x9, #0xb85
  22d34c:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  22d350:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22d354:	adrp	x6, 210000 <inhibit_what_to_string.buffer+0x210000>
  22d358:	add	x4, x4, #0xbd4
  22d35c:	add	x5, x5, #0x66
  22d360:	add	x6, x6, #0x714
  22d364:	mov	w3, #0x1                   	// #1
  22d368:	str	x2, [sp]
  22d36c:	mov	x0, x1
  22d370:	mov	x1, x8
  22d374:	mov	x2, x9
  22d378:	mov	x7, xzr
  22d37c:	stp	x29, x30, [sp, #16]
  22d380:	add	x29, sp, #0x10
  22d384:	bl	230d04 <method_do_shutdown_or_sleep>
  22d388:	ldp	x29, x30, [sp, #16]
  22d38c:	add	sp, sp, #0x20
  22d390:	ret

000000000022d394 <method_suspend>:
  22d394:	sub	sp, sp, #0x20
  22d398:	adrp	x9, 209000 <inhibit_what_to_string.buffer+0x209000>
  22d39c:	mov	x8, x0
  22d3a0:	add	x9, x9, #0x685
  22d3a4:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22d3a8:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22d3ac:	adrp	x6, 209000 <inhibit_what_to_string.buffer+0x209000>
  22d3b0:	adrp	x7, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22d3b4:	add	x4, x4, #0x28e
  22d3b8:	add	x5, x5, #0xaca
  22d3bc:	add	x6, x6, #0x8d8
  22d3c0:	add	x7, x7, #0xb36
  22d3c4:	mov	w3, #0x2                   	// #2
  22d3c8:	str	x2, [sp]
  22d3cc:	mov	x0, x1
  22d3d0:	mov	x1, x8
  22d3d4:	mov	x2, x9
  22d3d8:	stp	x29, x30, [sp, #16]
  22d3dc:	add	x29, sp, #0x10
  22d3e0:	bl	230d04 <method_do_shutdown_or_sleep>
  22d3e4:	ldp	x29, x30, [sp, #16]
  22d3e8:	add	sp, sp, #0x20
  22d3ec:	ret

000000000022d3f0 <method_hibernate>:
  22d3f0:	sub	sp, sp, #0x20
  22d3f4:	adrp	x9, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22d3f8:	mov	x8, x0
  22d3fc:	add	x9, x9, #0x940
  22d400:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22d404:	adrp	x5, 211000 <inhibit_what_to_string.buffer+0x211000>
  22d408:	adrp	x6, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22d40c:	adrp	x7, 207000 <inhibit_what_to_string.buffer+0x207000>
  22d410:	add	x4, x4, #0xd96
  22d414:	add	x5, x5, #0xd6
  22d418:	add	x6, x6, #0xafb
  22d41c:	add	x7, x7, #0xea1
  22d420:	mov	w3, #0x2                   	// #2
  22d424:	str	x2, [sp]
  22d428:	mov	x0, x1
  22d42c:	mov	x1, x8
  22d430:	mov	x2, x9
  22d434:	stp	x29, x30, [sp, #16]
  22d438:	add	x29, sp, #0x10
  22d43c:	bl	230d04 <method_do_shutdown_or_sleep>
  22d440:	ldp	x29, x30, [sp, #16]
  22d444:	add	sp, sp, #0x20
  22d448:	ret

000000000022d44c <method_hybrid_sleep>:
  22d44c:	sub	sp, sp, #0x20
  22d450:	adrp	x9, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22d454:	mov	x8, x0
  22d458:	add	x9, x9, #0x951
  22d45c:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22d460:	adrp	x5, 211000 <inhibit_what_to_string.buffer+0x211000>
  22d464:	adrp	x6, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22d468:	adrp	x7, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22d46c:	add	x4, x4, #0xd96
  22d470:	add	x5, x5, #0xd6
  22d474:	add	x6, x6, #0xafb
  22d478:	add	x7, x7, #0x3db
  22d47c:	mov	w3, #0x2                   	// #2
  22d480:	str	x2, [sp]
  22d484:	mov	x0, x1
  22d488:	mov	x1, x8
  22d48c:	mov	x2, x9
  22d490:	stp	x29, x30, [sp, #16]
  22d494:	add	x29, sp, #0x10
  22d498:	bl	230d04 <method_do_shutdown_or_sleep>
  22d49c:	ldp	x29, x30, [sp, #16]
  22d4a0:	add	sp, sp, #0x20
  22d4a4:	ret

000000000022d4a8 <method_suspend_then_hibernate>:
  22d4a8:	sub	sp, sp, #0x20
  22d4ac:	adrp	x9, 211000 <inhibit_what_to_string.buffer+0x211000>
  22d4b0:	mov	x8, x0
  22d4b4:	add	x9, x9, #0xb91
  22d4b8:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22d4bc:	adrp	x5, 211000 <inhibit_what_to_string.buffer+0x211000>
  22d4c0:	adrp	x6, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22d4c4:	adrp	x7, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22d4c8:	add	x4, x4, #0xd96
  22d4cc:	add	x5, x5, #0xd6
  22d4d0:	add	x6, x6, #0xafb
  22d4d4:	add	x7, x7, #0x3db
  22d4d8:	mov	w3, #0x2                   	// #2
  22d4dc:	str	x2, [sp]
  22d4e0:	mov	x0, x1
  22d4e4:	mov	x1, x8
  22d4e8:	mov	x2, x9
  22d4ec:	stp	x29, x30, [sp, #16]
  22d4f0:	add	x29, sp, #0x10
  22d4f4:	bl	230d04 <method_do_shutdown_or_sleep>
  22d4f8:	ldp	x29, x30, [sp, #16]
  22d4fc:	add	sp, sp, #0x20
  22d500:	ret

000000000022d504 <method_can_poweroff>:
  22d504:	stp	x29, x30, [sp, #-16]!
  22d508:	mov	x8, x0
  22d50c:	adrp	x3, 209000 <inhibit_what_to_string.buffer+0x209000>
  22d510:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22d514:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  22d518:	mov	x7, x2
  22d51c:	add	x3, x3, #0x29e
  22d520:	add	x4, x4, #0x81b
  22d524:	add	x5, x5, #0x8b
  22d528:	mov	w2, #0x1                   	// #1
  22d52c:	mov	x0, x1
  22d530:	mov	x1, x8
  22d534:	mov	x6, xzr
  22d538:	mov	x29, sp
  22d53c:	bl	231188 <method_can_shutdown_or_sleep>
  22d540:	ldp	x29, x30, [sp], #16
  22d544:	ret

000000000022d548 <method_can_reboot>:
  22d548:	stp	x29, x30, [sp, #-16]!
  22d54c:	mov	x8, x0
  22d550:	adrp	x3, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22d554:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22d558:	adrp	x5, 210000 <inhibit_what_to_string.buffer+0x210000>
  22d55c:	mov	x7, x2
  22d560:	add	x3, x3, #0xd2b
  22d564:	add	x4, x4, #0xbd9
  22d568:	add	x5, x5, #0x188
  22d56c:	mov	w2, #0x1                   	// #1
  22d570:	mov	x0, x1
  22d574:	mov	x1, x8
  22d578:	mov	x6, xzr
  22d57c:	mov	x29, sp
  22d580:	bl	231188 <method_can_shutdown_or_sleep>
  22d584:	ldp	x29, x30, [sp], #16
  22d588:	ret

000000000022d58c <method_can_halt>:
  22d58c:	stp	x29, x30, [sp, #-16]!
  22d590:	mov	x8, x0
  22d594:	adrp	x3, 207000 <inhibit_what_to_string.buffer+0x207000>
  22d598:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22d59c:	adrp	x5, 210000 <inhibit_what_to_string.buffer+0x210000>
  22d5a0:	mov	x7, x2
  22d5a4:	add	x3, x3, #0xbd4
  22d5a8:	add	x4, x4, #0x66
  22d5ac:	add	x5, x5, #0x714
  22d5b0:	mov	w2, #0x1                   	// #1
  22d5b4:	mov	x0, x1
  22d5b8:	mov	x1, x8
  22d5bc:	mov	x6, xzr
  22d5c0:	mov	x29, sp
  22d5c4:	bl	231188 <method_can_shutdown_or_sleep>
  22d5c8:	ldp	x29, x30, [sp], #16
  22d5cc:	ret

000000000022d5d0 <method_can_suspend>:
  22d5d0:	stp	x29, x30, [sp, #-16]!
  22d5d4:	mov	x8, x0
  22d5d8:	adrp	x3, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22d5dc:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22d5e0:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  22d5e4:	adrp	x6, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22d5e8:	mov	x7, x2
  22d5ec:	add	x3, x3, #0x28e
  22d5f0:	add	x4, x4, #0xaca
  22d5f4:	add	x5, x5, #0x8d8
  22d5f8:	add	x6, x6, #0xb36
  22d5fc:	mov	w2, #0x2                   	// #2
  22d600:	mov	x0, x1
  22d604:	mov	x1, x8
  22d608:	mov	x29, sp
  22d60c:	bl	231188 <method_can_shutdown_or_sleep>
  22d610:	ldp	x29, x30, [sp], #16
  22d614:	ret

000000000022d618 <method_can_hibernate>:
  22d618:	stp	x29, x30, [sp, #-16]!
  22d61c:	mov	x8, x0
  22d620:	adrp	x3, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22d624:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  22d628:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22d62c:	adrp	x6, 207000 <inhibit_what_to_string.buffer+0x207000>
  22d630:	mov	x7, x2
  22d634:	add	x3, x3, #0xd96
  22d638:	add	x4, x4, #0xd6
  22d63c:	add	x5, x5, #0xafb
  22d640:	add	x6, x6, #0xea1
  22d644:	mov	w2, #0x2                   	// #2
  22d648:	mov	x0, x1
  22d64c:	mov	x1, x8
  22d650:	mov	x29, sp
  22d654:	bl	231188 <method_can_shutdown_or_sleep>
  22d658:	ldp	x29, x30, [sp], #16
  22d65c:	ret

000000000022d660 <method_can_hybrid_sleep>:
  22d660:	stp	x29, x30, [sp, #-16]!
  22d664:	mov	x8, x0
  22d668:	adrp	x3, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22d66c:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  22d670:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22d674:	adrp	x6, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22d678:	mov	x7, x2
  22d67c:	add	x3, x3, #0xd96
  22d680:	add	x4, x4, #0xd6
  22d684:	add	x5, x5, #0xafb
  22d688:	add	x6, x6, #0x3db
  22d68c:	mov	w2, #0x2                   	// #2
  22d690:	mov	x0, x1
  22d694:	mov	x1, x8
  22d698:	mov	x29, sp
  22d69c:	bl	231188 <method_can_shutdown_or_sleep>
  22d6a0:	ldp	x29, x30, [sp], #16
  22d6a4:	ret

000000000022d6a8 <method_can_suspend_then_hibernate>:
  22d6a8:	stp	x29, x30, [sp, #-16]!
  22d6ac:	mov	x8, x0
  22d6b0:	adrp	x3, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22d6b4:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  22d6b8:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22d6bc:	adrp	x6, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22d6c0:	mov	x7, x2
  22d6c4:	add	x3, x3, #0xd96
  22d6c8:	add	x4, x4, #0xd6
  22d6cc:	add	x5, x5, #0xafb
  22d6d0:	add	x6, x6, #0x199
  22d6d4:	mov	w2, #0x2                   	// #2
  22d6d8:	mov	x0, x1
  22d6dc:	mov	x1, x8
  22d6e0:	mov	x29, sp
  22d6e4:	bl	231188 <method_can_shutdown_or_sleep>
  22d6e8:	ldp	x29, x30, [sp], #16
  22d6ec:	ret

000000000022d6f0 <method_schedule_shutdown>:
  22d6f0:	sub	sp, sp, #0x60
  22d6f4:	stp	x29, x30, [sp, #32]
  22d6f8:	add	x29, sp, #0x20
  22d6fc:	str	x23, [sp, #48]
  22d700:	stp	x22, x21, [sp, #64]
  22d704:	stp	x20, x19, [sp, #80]
  22d708:	str	xzr, [x29, #24]
  22d70c:	cbz	x1, 22db60 <method_schedule_shutdown+0x470>
  22d710:	mov	x19, x0
  22d714:	cbz	x0, 22db84 <method_schedule_shutdown+0x494>
  22d718:	mov	x20, x1
  22d71c:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22d720:	mov	x21, x2
  22d724:	add	x1, x1, #0x6b9
  22d728:	add	x2, sp, #0x10
  22d72c:	sub	x3, x29, #0x8
  22d730:	mov	x0, x19
  22d734:	bl	240fb0 <sd_bus_message_read@plt>
  22d738:	tbnz	w0, #31, 22dacc <method_schedule_shutdown+0x3dc>
  22d73c:	ldr	x22, [sp, #16]
  22d740:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  22d744:	add	x1, x1, #0x5c7
  22d748:	mov	x0, x22
  22d74c:	bl	230cb4 <startswith>
  22d750:	cbz	x0, 22d764 <method_schedule_shutdown+0x74>
  22d754:	add	x8, x22, #0x4
  22d758:	mov	w23, #0x1                   	// #1
  22d75c:	str	x8, [sp, #16]
  22d760:	b	22d768 <method_schedule_shutdown+0x78>
  22d764:	mov	w23, wzr
  22d768:	ldr	x22, [sp, #16]
  22d76c:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22d770:	add	x1, x1, #0xf47
  22d774:	mov	x0, x22
  22d778:	bl	240c30 <strcmp@plt>
  22d77c:	cbz	w0, 22d7c4 <method_schedule_shutdown+0xd4>
  22d780:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22d784:	add	x1, x1, #0x662
  22d788:	mov	x0, x22
  22d78c:	bl	240c30 <strcmp@plt>
  22d790:	cbz	w0, 22d7e0 <method_schedule_shutdown+0xf0>
  22d794:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22d798:	add	x1, x1, #0x965
  22d79c:	mov	x0, x22
  22d7a0:	bl	240c30 <strcmp@plt>
  22d7a4:	cbz	w0, 22d7fc <method_schedule_shutdown+0x10c>
  22d7a8:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22d7ac:	adrp	x2, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22d7b0:	add	x1, x1, #0x47f
  22d7b4:	add	x2, x2, #0x2ad
  22d7b8:	mov	x0, x21
  22d7bc:	bl	240f50 <sd_bus_error_setf@plt>
  22d7c0:	b	22dacc <method_schedule_shutdown+0x3dc>
  22d7c4:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22d7c8:	adrp	x6, 208000 <inhibit_what_to_string.buffer+0x208000>
  22d7cc:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22d7d0:	add	x5, x5, #0x81b
  22d7d4:	add	x6, x6, #0x8b
  22d7d8:	add	x4, x4, #0x29e
  22d7dc:	b	22d814 <method_schedule_shutdown+0x124>
  22d7e0:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  22d7e4:	adrp	x6, 210000 <inhibit_what_to_string.buffer+0x210000>
  22d7e8:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22d7ec:	add	x5, x5, #0xbd9
  22d7f0:	add	x6, x6, #0x188
  22d7f4:	add	x4, x4, #0xd2b
  22d7f8:	b	22d814 <method_schedule_shutdown+0x124>
  22d7fc:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22d800:	adrp	x6, 210000 <inhibit_what_to_string.buffer+0x210000>
  22d804:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  22d808:	add	x5, x5, #0x66
  22d80c:	add	x6, x6, #0x714
  22d810:	add	x4, x4, #0xbd4
  22d814:	mov	w2, #0x1                   	// #1
  22d818:	mov	x0, x20
  22d81c:	mov	x1, x19
  22d820:	mov	w3, wzr
  22d824:	mov	x7, x21
  22d828:	bl	230ec0 <verify_shutdown_creds>
  22d82c:	mov	w22, w0
  22d830:	cbnz	w0, 22dad0 <method_schedule_shutdown+0x3e0>
  22d834:	ldr	x0, [x20, #296]
  22d838:	add	x21, x20, #0x128
  22d83c:	cbz	x0, 22d894 <method_schedule_shutdown+0x1a4>
  22d840:	ldur	x1, [x29, #-8]
  22d844:	bl	240b10 <sd_event_source_set_time@plt>
  22d848:	tbnz	w0, #31, 22d930 <method_schedule_shutdown+0x240>
  22d84c:	ldr	x0, [x21]
  22d850:	mov	w1, #0xffffffff            	// #-1
  22d854:	bl	240b20 <sd_event_source_set_enabled@plt>
  22d858:	tbz	w0, #31, 22d8bc <method_schedule_shutdown+0x1cc>
  22d85c:	mov	w22, w0
  22d860:	mov	w0, wzr
  22d864:	bl	240750 <log_get_max_level_realm@plt>
  22d868:	cmp	w0, #0x3
  22d86c:	b.lt	22daf4 <method_schedule_shutdown+0x404>  // b.tstop
  22d870:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22d874:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22d878:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22d87c:	add	x2, x2, #0xe6f
  22d880:	add	x4, x4, #0x2bf
  22d884:	add	x5, x5, #0xb65
  22d888:	mov	w0, #0x3                   	// #3
  22d88c:	mov	w3, #0x88c                 	// #2188
  22d890:	b	22dac4 <method_schedule_shutdown+0x3d4>
  22d894:	ldr	x0, [x20]
  22d898:	ldur	x3, [x29, #-8]
  22d89c:	adrp	x5, 231000 <verify_shutdown_creds+0x140>
  22d8a0:	add	x5, x5, #0x53c
  22d8a4:	mov	x1, x21
  22d8a8:	mov	w2, wzr
  22d8ac:	mov	x4, xzr
  22d8b0:	mov	x6, x20
  22d8b4:	bl	240b30 <sd_event_add_time@plt>
  22d8b8:	tbnz	w0, #31, 22d994 <method_schedule_shutdown+0x2a4>
  22d8bc:	ldr	x1, [sp, #16]
  22d8c0:	add	x0, x20, #0x118
  22d8c4:	bl	240f10 <free_and_strdup@plt>
  22d8c8:	tbnz	w0, #31, 22d968 <method_schedule_shutdown+0x278>
  22d8cc:	ldr	x0, [x20, #320]
  22d8d0:	strb	w23, [x20, #360]
  22d8d4:	add	x23, x20, #0x140
  22d8d8:	cbz	x0, 22d9cc <method_schedule_shutdown+0x2dc>
  22d8dc:	ldur	x1, [x29, #-8]
  22d8e0:	bl	240b10 <sd_event_source_set_time@plt>
  22d8e4:	tbnz	w0, #31, 22da58 <method_schedule_shutdown+0x368>
  22d8e8:	ldr	x0, [x23]
  22d8ec:	mov	w1, #0xffffffff            	// #-1
  22d8f0:	bl	240b20 <sd_event_source_set_enabled@plt>
  22d8f4:	tbz	w0, #31, 22da00 <method_schedule_shutdown+0x310>
  22d8f8:	mov	w22, w0
  22d8fc:	mov	w0, wzr
  22d900:	bl	240750 <log_get_max_level_realm@plt>
  22d904:	cmp	w0, #0x3
  22d908:	b.lt	22daf4 <method_schedule_shutdown+0x404>  // b.tstop
  22d90c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22d910:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22d914:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22d918:	add	x2, x2, #0xe6f
  22d91c:	add	x4, x4, #0x2bf
  22d920:	add	x5, x5, #0xb65
  22d924:	mov	w0, #0x3                   	// #3
  22d928:	mov	w3, #0x8a3                 	// #2211
  22d92c:	b	22dac4 <method_schedule_shutdown+0x3d4>
  22d930:	mov	w22, w0
  22d934:	mov	w0, wzr
  22d938:	bl	240750 <log_get_max_level_realm@plt>
  22d93c:	cmp	w0, #0x3
  22d940:	b.lt	22daf4 <method_schedule_shutdown+0x404>  // b.tstop
  22d944:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22d948:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22d94c:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22d950:	add	x2, x2, #0xe6f
  22d954:	add	x4, x4, #0x2bf
  22d958:	add	x5, x5, #0x6d4
  22d95c:	mov	w0, #0x3                   	// #3
  22d960:	mov	w3, #0x888                 	// #2184
  22d964:	b	22dac4 <method_schedule_shutdown+0x3d4>
  22d968:	ldr	x0, [x21]
  22d96c:	bl	240810 <sd_event_source_unref@plt>
  22d970:	adrp	x1, 206000 <inhibit_what_to_string.buffer+0x206000>
  22d974:	adrp	x3, 209000 <inhibit_what_to_string.buffer+0x209000>
  22d978:	str	x0, [x21]
  22d97c:	add	x1, x1, #0xe6f
  22d980:	add	x3, x3, #0x2bf
  22d984:	mov	w2, #0x897                 	// #2199
  22d988:	mov	w0, wzr
  22d98c:	bl	240af0 <log_oom_internal@plt>
  22d990:	b	22dacc <method_schedule_shutdown+0x3dc>
  22d994:	mov	w22, w0
  22d998:	mov	w0, wzr
  22d99c:	bl	240750 <log_get_max_level_realm@plt>
  22d9a0:	cmp	w0, #0x3
  22d9a4:	b.lt	22daf4 <method_schedule_shutdown+0x404>  // b.tstop
  22d9a8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22d9ac:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22d9b0:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  22d9b4:	add	x2, x2, #0xe6f
  22d9b8:	add	x4, x4, #0x2bf
  22d9bc:	add	x5, x5, #0x906
  22d9c0:	mov	w0, #0x3                   	// #3
  22d9c4:	mov	w3, #0x891                 	// #2193
  22d9c8:	b	22dac4 <method_schedule_shutdown+0x3d4>
  22d9cc:	ldur	x8, [x29, #-8]
  22d9d0:	ldr	x0, [x20]
  22d9d4:	mov	x9, #0xffffffffffff5d00    	// #-41728
  22d9d8:	movk	x9, #0xee1e, lsl #16
  22d9dc:	adrp	x5, 231000 <verify_shutdown_creds+0x140>
  22d9e0:	add	x3, x8, x9
  22d9e4:	add	x5, x5, #0x744
  22d9e8:	mov	x1, x23
  22d9ec:	mov	w2, wzr
  22d9f0:	mov	x4, xzr
  22d9f4:	mov	x6, x20
  22d9f8:	bl	240b30 <sd_event_add_time@plt>
  22d9fc:	tbnz	w0, #31, 22da90 <method_schedule_shutdown+0x3a0>
  22da00:	ldur	x8, [x29, #-8]
  22da04:	mov	x1, #0x8                   	// #8
  22da08:	movk	x1, #0x4000, lsl #16
  22da0c:	add	x2, x29, #0x18
  22da10:	movk	x1, #0x8000, lsl #48
  22da14:	mov	x0, x19
  22da18:	str	x8, [x20, #288]
  22da1c:	bl	240f60 <sd_bus_query_sender_creds@plt>
  22da20:	tbnz	w0, #31, 22db38 <method_schedule_shutdown+0x448>
  22da24:	ldr	x0, [x29, #24]
  22da28:	add	x1, x20, #0x130
  22da2c:	str	xzr, [sp, #8]
  22da30:	bl	2411f0 <sd_bus_creds_get_uid@plt>
  22da34:	ldr	x0, [x29, #24]
  22da38:	add	x1, sp, #0x8
  22da3c:	bl	241200 <sd_bus_creds_get_tty@plt>
  22da40:	ldr	x1, [sp, #8]
  22da44:	add	x0, x20, #0x138
  22da48:	bl	240f10 <free_and_strdup@plt>
  22da4c:	tbnz	w0, #31, 22db04 <method_schedule_shutdown+0x414>
  22da50:	mov	w8, #0x1                   	// #1
  22da54:	b	22db34 <method_schedule_shutdown+0x444>
  22da58:	mov	w22, w0
  22da5c:	mov	w0, wzr
  22da60:	bl	240750 <log_get_max_level_realm@plt>
  22da64:	cmp	w0, #0x3
  22da68:	b.lt	22daf4 <method_schedule_shutdown+0x404>  // b.tstop
  22da6c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22da70:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22da74:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22da78:	add	x2, x2, #0xe6f
  22da7c:	add	x4, x4, #0x2bf
  22da80:	add	x5, x5, #0x6d4
  22da84:	mov	w0, #0x3                   	// #3
  22da88:	mov	w3, #0x89f                 	// #2207
  22da8c:	b	22dac4 <method_schedule_shutdown+0x3d4>
  22da90:	mov	w22, w0
  22da94:	mov	w0, wzr
  22da98:	bl	240750 <log_get_max_level_realm@plt>
  22da9c:	cmp	w0, #0x3
  22daa0:	b.lt	22daf4 <method_schedule_shutdown+0x404>  // b.tstop
  22daa4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22daa8:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22daac:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  22dab0:	add	x2, x2, #0xe6f
  22dab4:	add	x4, x4, #0x2bf
  22dab8:	add	x5, x5, #0x906
  22dabc:	mov	w0, #0x3                   	// #3
  22dac0:	mov	w3, #0x8a8                 	// #2216
  22dac4:	mov	w1, w22
  22dac8:	bl	240770 <log_internal_realm@plt>
  22dacc:	mov	w22, w0
  22dad0:	add	x0, x29, #0x18
  22dad4:	bl	230374 <sd_bus_creds_unrefp>
  22dad8:	mov	w0, w22
  22dadc:	ldp	x20, x19, [sp, #80]
  22dae0:	ldp	x22, x21, [sp, #64]
  22dae4:	ldr	x23, [sp, #48]
  22dae8:	ldp	x29, x30, [sp, #32]
  22daec:	add	sp, sp, #0x60
  22daf0:	ret
  22daf4:	mov	w8, wzr
  22daf8:	neg	w9, w22
  22dafc:	sub	w22, w8, w9, uxtb
  22db00:	b	22dad0 <method_schedule_shutdown+0x3e0>
  22db04:	ldr	x0, [x21]
  22db08:	bl	240810 <sd_event_source_unref@plt>
  22db0c:	adrp	x1, 206000 <inhibit_what_to_string.buffer+0x206000>
  22db10:	adrp	x3, 209000 <inhibit_what_to_string.buffer+0x209000>
  22db14:	str	x0, [x21]
  22db18:	add	x1, x1, #0xe6f
  22db1c:	add	x3, x3, #0x2bf
  22db20:	mov	w2, #0x8b7                 	// #2231
  22db24:	mov	w0, wzr
  22db28:	bl	240af0 <log_oom_internal@plt>
  22db2c:	mov	w22, w0
  22db30:	mov	w8, wzr
  22db34:	cbz	w8, 22dad0 <method_schedule_shutdown+0x3e0>
  22db38:	mov	x0, x20
  22db3c:	bl	23f7dc <manager_setup_wall_message_timer>
  22db40:	tbnz	w0, #31, 22dacc <method_schedule_shutdown+0x3dc>
  22db44:	mov	x0, x20
  22db48:	bl	2317ac <update_schedule_file>
  22db4c:	tbnz	w0, #31, 22dacc <method_schedule_shutdown+0x3dc>
  22db50:	mov	x0, x19
  22db54:	mov	x1, xzr
  22db58:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22db5c:	b	22dacc <method_schedule_shutdown+0x3dc>
  22db60:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22db64:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22db68:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22db6c:	add	x1, x1, #0x102
  22db70:	add	x2, x2, #0xe6f
  22db74:	add	x4, x4, #0x3e3
  22db78:	mov	w3, #0x865                 	// #2149
  22db7c:	mov	w0, wzr
  22db80:	bl	240790 <log_assert_failed_realm@plt>
  22db84:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22db88:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22db8c:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22db90:	add	x1, x1, #0x30
  22db94:	add	x2, x2, #0xe6f
  22db98:	add	x4, x4, #0x3e3
  22db9c:	mov	w3, #0x866                 	// #2150
  22dba0:	mov	w0, wzr
  22dba4:	bl	240790 <log_assert_failed_realm@plt>

000000000022dba8 <method_cancel_scheduled_shutdown>:
  22dba8:	sub	sp, sp, #0x50
  22dbac:	stp	x29, x30, [sp, #32]
  22dbb0:	str	x21, [sp, #48]
  22dbb4:	stp	x20, x19, [sp, #64]
  22dbb8:	add	x29, sp, #0x20
  22dbbc:	cbz	x1, 22dc90 <method_cancel_scheduled_shutdown+0xe8>
  22dbc0:	mov	x19, x0
  22dbc4:	cbz	x0, 22dcb4 <method_cancel_scheduled_shutdown+0x10c>
  22dbc8:	ldr	x21, [x1, #280]
  22dbcc:	mov	x0, x1
  22dbd0:	mov	x20, x1
  22dbd4:	bl	2319dc <reset_scheduled_shutdown>
  22dbd8:	cbz	x21, 22dc64 <method_cancel_scheduled_shutdown+0xbc>
  22dbdc:	ldr	w8, [x20, #344]
  22dbe0:	cbz	w8, 22dc64 <method_cancel_scheduled_shutdown+0xbc>
  22dbe4:	mov	x1, #0x8                   	// #8
  22dbe8:	movk	x1, #0x4000, lsl #16
  22dbec:	add	x2, x29, #0x18
  22dbf0:	movk	x1, #0x8000, lsl #48
  22dbf4:	mov	x0, x19
  22dbf8:	str	xzr, [x29, #24]
  22dbfc:	stur	xzr, [x29, #-8]
  22dc00:	str	xzr, [sp, #16]
  22dc04:	str	wzr, [sp, #12]
  22dc08:	bl	240f60 <sd_bus_query_sender_creds@plt>
  22dc0c:	tbnz	w0, #31, 22dc28 <method_cancel_scheduled_shutdown+0x80>
  22dc10:	ldr	x0, [x29, #24]
  22dc14:	add	x1, sp, #0xc
  22dc18:	bl	2411f0 <sd_bus_creds_get_uid@plt>
  22dc1c:	ldr	x0, [x29, #24]
  22dc20:	add	x1, sp, #0x10
  22dc24:	bl	241200 <sd_bus_creds_get_tty@plt>
  22dc28:	ldr	w0, [sp, #12]
  22dc2c:	bl	240cb0 <uid_to_name@plt>
  22dc30:	stur	x0, [x29, #-8]
  22dc34:	adrp	x3, 254000 <session_vtable+0x3d0>
  22dc38:	ldr	x2, [sp, #16]
  22dc3c:	ldr	x3, [x3, #3376]
  22dc40:	mov	x1, x0
  22dc44:	adrp	x0, 209000 <inhibit_what_to_string.buffer+0x209000>
  22dc48:	add	x0, x0, #0x311
  22dc4c:	mov	x4, x20
  22dc50:	bl	241210 <utmp_wall@plt>
  22dc54:	sub	x0, x29, #0x8
  22dc58:	bl	229b20 <freep>
  22dc5c:	add	x0, x29, #0x18
  22dc60:	bl	230374 <sd_bus_creds_unrefp>
  22dc64:	cmp	x21, #0x0
  22dc68:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22dc6c:	cset	w2, ne  // ne = any
  22dc70:	add	x1, x1, #0xb8c
  22dc74:	mov	x0, x19
  22dc78:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22dc7c:	ldp	x20, x19, [sp, #64]
  22dc80:	ldr	x21, [sp, #48]
  22dc84:	ldp	x29, x30, [sp, #32]
  22dc88:	add	sp, sp, #0x50
  22dc8c:	ret
  22dc90:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22dc94:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22dc98:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22dc9c:	add	x1, x1, #0x102
  22dca0:	add	x2, x2, #0xe6f
  22dca4:	add	x4, x4, #0x5fd
  22dca8:	mov	w3, #0x8ca                 	// #2250
  22dcac:	mov	w0, wzr
  22dcb0:	bl	240790 <log_assert_failed_realm@plt>
  22dcb4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22dcb8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22dcbc:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22dcc0:	add	x1, x1, #0x30
  22dcc4:	add	x2, x2, #0xe6f
  22dcc8:	add	x4, x4, #0x5fd
  22dccc:	mov	w3, #0x8cb                 	// #2251
  22dcd0:	mov	w0, wzr
  22dcd4:	bl	240790 <log_assert_failed_realm@plt>

000000000022dcd8 <method_inhibit>:
  22dcd8:	sub	sp, sp, #0x90
  22dcdc:	stp	x29, x30, [sp, #80]
  22dce0:	add	x29, sp, #0x50
  22dce4:	mov	w8, #0xffffffff            	// #-1
  22dce8:	stp	x24, x23, [sp, #96]
  22dcec:	stp	x22, x21, [sp, #112]
  22dcf0:	stp	x20, x19, [sp, #128]
  22dcf4:	stur	xzr, [x29, #-8]
  22dcf8:	str	xzr, [sp, #32]
  22dcfc:	str	w8, [sp, #28]
  22dd00:	str	xzr, [sp, #16]
  22dd04:	cbz	x0, 22e020 <method_inhibit+0x348>
  22dd08:	mov	x20, x1
  22dd0c:	cbz	x1, 22e040 <method_inhibit+0x368>
  22dd10:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22dd14:	mov	x21, x2
  22dd18:	add	x1, x1, #0xc8c
  22dd1c:	sub	x2, x29, #0x20
  22dd20:	sub	x3, x29, #0x10
  22dd24:	sub	x4, x29, #0x18
  22dd28:	add	x5, sp, #0x28
  22dd2c:	mov	x19, x0
  22dd30:	bl	240fb0 <sd_bus_message_read@plt>
  22dd34:	tbnz	w0, #31, 22dddc <method_inhibit+0x104>
  22dd38:	ldur	x0, [x29, #-32]
  22dd3c:	bl	232a3c <inhibit_what_from_string>
  22dd40:	cmp	w0, #0x0
  22dd44:	b.le	22dd80 <method_inhibit+0xa8>
  22dd48:	mov	w22, w0
  22dd4c:	ldr	x0, [sp, #40]
  22dd50:	bl	232c8c <inhibit_mode_from_string>
  22dd54:	tbnz	w0, #31, 22dd98 <method_inhibit+0xc0>
  22dd58:	mov	w23, w0
  22dd5c:	cmp	w22, #0x4
  22dd60:	b.cc	22ddb8 <method_inhibit+0xe0>  // b.lo, b.ul, b.last
  22dd64:	cmp	w23, #0x1
  22dd68:	b.ne	22ddb8 <method_inhibit+0xe0>  // b.any
  22dd6c:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22dd70:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  22dd74:	add	x1, x1, #0x47f
  22dd78:	add	x2, x2, #0xc09
  22dd7c:	b	22ddd4 <method_inhibit+0xfc>
  22dd80:	ldur	x3, [x29, #-32]
  22dd84:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22dd88:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22dd8c:	add	x1, x1, #0x47f
  22dd90:	add	x2, x2, #0x8fa
  22dd94:	b	22ddac <method_inhibit+0xd4>
  22dd98:	ldr	x3, [sp, #40]
  22dd9c:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22dda0:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22dda4:	add	x1, x1, #0x47f
  22dda8:	add	x2, x2, #0xcc9
  22ddac:	mov	x0, x21
  22ddb0:	bl	240f50 <sd_bus_error_setf@plt>
  22ddb4:	b	22dddc <method_inhibit+0x104>
  22ddb8:	ldr	w8, [x20, #248]
  22ddbc:	tst	w8, w22
  22ddc0:	b.eq	22de14 <method_inhibit+0x13c>  // b.none
  22ddc4:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22ddc8:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  22ddcc:	add	x1, x1, #0xbb9
  22ddd0:	add	x2, x2, #0x338
  22ddd4:	mov	x0, x21
  22ddd8:	bl	240f50 <sd_bus_error_setf@plt>
  22dddc:	mov	w24, w0
  22dde0:	add	x0, sp, #0x1c
  22dde4:	bl	231a98 <closep>
  22dde8:	add	x0, sp, #0x20
  22ddec:	bl	229b20 <freep>
  22ddf0:	sub	x0, x29, #0x8
  22ddf4:	bl	230374 <sd_bus_creds_unrefp>
  22ddf8:	mov	w0, w24
  22ddfc:	ldp	x20, x19, [sp, #128]
  22de00:	ldp	x22, x21, [sp, #112]
  22de04:	ldp	x24, x23, [sp, #96]
  22de08:	ldp	x29, x30, [sp, #80]
  22de0c:	add	sp, sp, #0x90
  22de10:	ret
  22de14:	sub	w8, w22, #0x1
  22de18:	cmp	w8, #0xf
  22de1c:	b.hi	22de70 <method_inhibit+0x198>  // b.pmore
  22de20:	adrp	x9, 212000 <inhibit_what_to_string.buffer+0x212000>
  22de24:	add	x9, x9, #0x5ec
  22de28:	adr	x10, 22de40 <method_inhibit+0x168>
  22de2c:	ldrb	w11, [x9, x8]
  22de30:	add	x10, x10, x11, lsl #2
  22de34:	adrp	x2, 212000 <inhibit_what_to_string.buffer+0x212000>
  22de38:	add	x2, x2, #0x1e8
  22de3c:	br	x10
  22de40:	adrp	x8, 207000 <inhibit_what_to_string.buffer+0x207000>
  22de44:	adrp	x9, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22de48:	add	x8, x8, #0x47
  22de4c:	add	x9, x9, #0x220
  22de50:	b	22de64 <method_inhibit+0x18c>
  22de54:	adrp	x8, 209000 <inhibit_what_to_string.buffer+0x209000>
  22de58:	adrp	x9, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22de5c:	add	x8, x8, #0x925
  22de60:	add	x9, x9, #0x2e5
  22de64:	cmp	w23, #0x0
  22de68:	csel	x2, x9, x8, eq  // eq = none
  22de6c:	b	22dea0 <method_inhibit+0x1c8>
  22de70:	adrp	x8, 207000 <inhibit_what_to_string.buffer+0x207000>
  22de74:	adrp	x9, 207000 <inhibit_what_to_string.buffer+0x207000>
  22de78:	add	x8, x8, #0xc24
  22de7c:	add	x9, x9, #0xbf0
  22de80:	cmp	w22, #0x20
  22de84:	csel	x2, x9, x8, eq  // eq = none
  22de88:	b	22dea0 <method_inhibit+0x1c8>
  22de8c:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22de90:	add	x2, x2, #0x310
  22de94:	b	22dea0 <method_inhibit+0x1c8>
  22de98:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22de9c:	add	x2, x2, #0xce7
  22dea0:	add	x6, x20, #0x1b0
  22dea4:	mov	w1, #0x16                  	// #22
  22dea8:	mov	w5, #0xffffffff            	// #-1
  22deac:	mov	x0, x19
  22deb0:	mov	x3, xzr
  22deb4:	mov	w4, wzr
  22deb8:	mov	x7, x21
  22debc:	bl	241160 <bus_verify_polkit_async@plt>
  22dec0:	mov	w24, w0
  22dec4:	tbnz	w0, #31, 22dde0 <method_inhibit+0x108>
  22dec8:	cbz	w24, 22dfe8 <method_inhibit+0x310>
  22decc:	sub	x2, x29, #0x8
  22ded0:	mov	w1, #0x11                  	// #17
  22ded4:	mov	x0, x19
  22ded8:	bl	240f60 <sd_bus_query_sender_creds@plt>
  22dedc:	tbnz	w0, #31, 22dddc <method_inhibit+0x104>
  22dee0:	ldur	x0, [x29, #-8]
  22dee4:	add	x1, sp, #0x8
  22dee8:	bl	241180 <sd_bus_creds_get_euid@plt>
  22deec:	tbnz	w0, #31, 22dddc <method_inhibit+0x104>
  22def0:	ldur	x0, [x29, #-8]
  22def4:	add	x1, sp, #0xc
  22def8:	bl	241110 <sd_bus_creds_get_pid@plt>
  22defc:	tbnz	w0, #31, 22dddc <method_inhibit+0x104>
  22df00:	ldr	x0, [x20, #56]
  22df04:	bl	230718 <hashmap_size>
  22df08:	ldr	x3, [x20, #472]
  22df0c:	cmp	x3, w0, uxtw
  22df10:	b.ls	22dff0 <method_inhibit+0x318>  // b.plast
  22df14:	adrp	x21, 210000 <inhibit_what_to_string.buffer+0x210000>
  22df18:	add	x21, x21, #0xcd0
  22df1c:	ldr	x0, [sp, #32]
  22df20:	bl	22f1b8 <mfree>
  22df24:	str	xzr, [sp, #32]
  22df28:	ldr	x8, [x20, #208]
  22df2c:	add	x0, sp, #0x20
  22df30:	mov	x1, x21
  22df34:	add	x2, x8, #0x1
  22df38:	str	x2, [x20, #208]
  22df3c:	bl	240ae0 <asprintf@plt>
  22df40:	tbnz	w0, #31, 22e004 <method_inhibit+0x32c>
  22df44:	ldr	x0, [x20, #56]
  22df48:	ldr	x1, [sp, #32]
  22df4c:	bl	2294e0 <hashmap_get>
  22df50:	cbnz	x0, 22df1c <method_inhibit+0x244>
  22df54:	ldr	x1, [sp, #32]
  22df58:	add	x2, sp, #0x10
  22df5c:	mov	x0, x20
  22df60:	bl	227b4c <manager_add_inhibitor>
  22df64:	tbnz	w0, #31, 22dddc <method_inhibit+0x104>
  22df68:	ldr	x8, [sp, #16]
  22df6c:	str	w22, [x8, #36]
  22df70:	ldr	w9, [sp, #12]
  22df74:	stp	w23, w9, [x8, #56]
  22df78:	ldr	w9, [sp, #8]
  22df7c:	str	w9, [x8, #64]
  22df80:	ldur	x0, [x29, #-24]
  22df84:	bl	240c40 <strdup@plt>
  22df88:	ldr	x8, [sp, #16]
  22df8c:	str	x0, [x8, #48]
  22df90:	ldur	x0, [x29, #-16]
  22df94:	bl	240c40 <strdup@plt>
  22df98:	mov	x8, x0
  22df9c:	ldr	x0, [sp, #16]
  22dfa0:	mov	w24, #0xfffffff4            	// #-12
  22dfa4:	str	x8, [x0, #40]
  22dfa8:	cbz	x8, 22e010 <method_inhibit+0x338>
  22dfac:	ldr	x8, [x0, #48]
  22dfb0:	cbz	x8, 22e010 <method_inhibit+0x338>
  22dfb4:	bl	232cc8 <inhibitor_create_fifo>
  22dfb8:	mov	w24, w0
  22dfbc:	str	w0, [sp, #28]
  22dfc0:	tbnz	w0, #31, 22e010 <method_inhibit+0x338>
  22dfc4:	ldr	x0, [sp, #16]
  22dfc8:	bl	2321e8 <inhibitor_start>
  22dfcc:	tbnz	w0, #31, 22e00c <method_inhibit+0x334>
  22dfd0:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22dfd4:	add	x1, x1, #0xa34
  22dfd8:	mov	x0, x19
  22dfdc:	mov	w2, w24
  22dfe0:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22dfe4:	b	22dddc <method_inhibit+0x104>
  22dfe8:	mov	w24, #0x1                   	// #1
  22dfec:	b	22dde0 <method_inhibit+0x108>
  22dff0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22dff4:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22dff8:	add	x1, x1, #0x945
  22dffc:	add	x2, x2, #0x24e
  22e000:	b	22ddac <method_inhibit+0xd4>
  22e004:	mov	w24, #0xfffffff4            	// #-12
  22e008:	b	22dde0 <method_inhibit+0x108>
  22e00c:	mov	w24, w0
  22e010:	ldr	x0, [sp, #16]
  22e014:	cbz	x0, 22dde0 <method_inhibit+0x108>
  22e018:	bl	232154 <inhibitor_free>
  22e01c:	b	22dde0 <method_inhibit+0x108>
  22e020:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e024:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e028:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22e02c:	add	x1, x1, #0x30
  22e030:	add	x2, x2, #0xe6f
  22e034:	add	x4, x4, #0xdbe
  22e038:	mov	w3, #0xc77                 	// #3191
  22e03c:	bl	240790 <log_assert_failed_realm@plt>
  22e040:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22e044:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e048:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22e04c:	add	x1, x1, #0x102
  22e050:	add	x2, x2, #0xe6f
  22e054:	add	x4, x4, #0xdbe
  22e058:	mov	w3, #0xc78                 	// #3192
  22e05c:	mov	w0, wzr
  22e060:	bl	240790 <log_assert_failed_realm@plt>

000000000022e064 <method_can_reboot_parameter>:
  22e064:	stp	x29, x30, [sp, #-32]!
  22e068:	stp	x20, x19, [sp, #16]
  22e06c:	mov	x29, sp
  22e070:	cbz	x0, 22e0c8 <method_can_reboot_parameter+0x64>
  22e074:	cbz	x1, 22e0e8 <method_can_reboot_parameter+0x84>
  22e078:	mov	x20, x2
  22e07c:	mov	x19, x0
  22e080:	bl	241220 <detect_container@plt>
  22e084:	tbnz	w0, #31, 22e0bc <method_can_reboot_parameter+0x58>
  22e088:	cbz	w0, 22e0a8 <method_can_reboot_parameter+0x44>
  22e08c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e090:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22e094:	add	x1, x1, #0x6de
  22e098:	add	x2, x2, #0x8d3
  22e09c:	mov	x0, x19
  22e0a0:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22e0a4:	b	22e0bc <method_can_reboot_parameter+0x58>
  22e0a8:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22e0ac:	add	x1, x1, #0x340
  22e0b0:	mov	x0, x19
  22e0b4:	mov	x2, x20
  22e0b8:	bl	231ab0 <return_test_polkit>
  22e0bc:	ldp	x20, x19, [sp, #16]
  22e0c0:	ldp	x29, x30, [sp], #32
  22e0c4:	ret
  22e0c8:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e0cc:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e0d0:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22e0d4:	add	x1, x1, #0x30
  22e0d8:	add	x2, x2, #0xe6f
  22e0dc:	add	x4, x4, #0x206
  22e0e0:	mov	w3, #0x9fc                 	// #2556
  22e0e4:	bl	240790 <log_assert_failed_realm@plt>
  22e0e8:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22e0ec:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e0f0:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22e0f4:	add	x1, x1, #0x102
  22e0f8:	add	x2, x2, #0xe6f
  22e0fc:	add	x4, x4, #0x206
  22e100:	mov	w3, #0x9fd                 	// #2557
  22e104:	mov	w0, wzr
  22e108:	bl	240790 <log_assert_failed_realm@plt>

000000000022e10c <method_set_reboot_parameter>:
  22e10c:	stp	x29, x30, [sp, #-48]!
  22e110:	str	x21, [sp, #16]
  22e114:	stp	x20, x19, [sp, #32]
  22e118:	mov	x29, sp
  22e11c:	cbz	x0, 22e1d0 <method_set_reboot_parameter+0xc4>
  22e120:	mov	x21, x1
  22e124:	cbz	x1, 22e1f0 <method_set_reboot_parameter+0xe4>
  22e128:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e12c:	mov	x20, x2
  22e130:	add	x1, x1, #0x6de
  22e134:	add	x2, x29, #0x18
  22e138:	mov	x19, x0
  22e13c:	bl	240fb0 <sd_bus_message_read@plt>
  22e140:	tbnz	w0, #31, 22e168 <method_set_reboot_parameter+0x5c>
  22e144:	bl	241220 <detect_container@plt>
  22e148:	tbnz	w0, #31, 22e168 <method_set_reboot_parameter+0x5c>
  22e14c:	cbz	w0, 22e178 <method_set_reboot_parameter+0x6c>
  22e150:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  22e154:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e158:	add	x1, x1, #0xc9b
  22e15c:	add	x2, x2, #0x950
  22e160:	mov	x0, x20
  22e164:	bl	240f50 <sd_bus_error_setf@plt>
  22e168:	ldp	x20, x19, [sp, #32]
  22e16c:	ldr	x21, [sp, #16]
  22e170:	ldp	x29, x30, [sp], #48
  22e174:	ret
  22e178:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22e17c:	add	x6, x21, #0x1b0
  22e180:	add	x2, x2, #0x340
  22e184:	mov	w1, #0x15                  	// #21
  22e188:	mov	w5, #0xffffffff            	// #-1
  22e18c:	mov	x0, x19
  22e190:	mov	x3, xzr
  22e194:	mov	w4, wzr
  22e198:	mov	x7, x20
  22e19c:	bl	241160 <bus_verify_polkit_async@plt>
  22e1a0:	tbnz	w0, #31, 22e168 <method_set_reboot_parameter+0x5c>
  22e1a4:	cbz	w0, 22e1c8 <method_set_reboot_parameter+0xbc>
  22e1a8:	ldr	x0, [x29, #24]
  22e1ac:	mov	w1, wzr
  22e1b0:	bl	241230 <update_reboot_parameter_and_warn@plt>
  22e1b4:	tbnz	w0, #31, 22e168 <method_set_reboot_parameter+0x5c>
  22e1b8:	mov	x0, x19
  22e1bc:	mov	x1, xzr
  22e1c0:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22e1c4:	b	22e168 <method_set_reboot_parameter+0x5c>
  22e1c8:	mov	w0, #0x1                   	// #1
  22e1cc:	b	22e168 <method_set_reboot_parameter+0x5c>
  22e1d0:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e1d4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e1d8:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22e1dc:	add	x1, x1, #0x30
  22e1e0:	add	x2, x2, #0xe6f
  22e1e4:	add	x4, x4, #0x580
  22e1e8:	mov	w3, #0x9d2                 	// #2514
  22e1ec:	bl	240790 <log_assert_failed_realm@plt>
  22e1f0:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22e1f4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e1f8:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22e1fc:	add	x1, x1, #0x102
  22e200:	add	x2, x2, #0xe6f
  22e204:	add	x4, x4, #0x580
  22e208:	mov	w3, #0x9d3                 	// #2515
  22e20c:	mov	w0, wzr
  22e210:	bl	240790 <log_assert_failed_realm@plt>

000000000022e214 <method_can_reboot_to_firmware_setup>:
  22e214:	stp	x29, x30, [sp, #-48]!
  22e218:	str	x21, [sp, #16]
  22e21c:	stp	x20, x19, [sp, #32]
  22e220:	mov	x29, sp
  22e224:	cbz	x0, 22e318 <method_can_reboot_to_firmware_setup+0x104>
  22e228:	cbz	x1, 22e338 <method_can_reboot_to_firmware_setup+0x124>
  22e22c:	mov	x19, x0
  22e230:	adrp	x0, 208000 <inhibit_what_to_string.buffer+0x208000>
  22e234:	add	x0, x0, #0x2
  22e238:	mov	x20, x2
  22e23c:	bl	241000 <getenv_bool@plt>
  22e240:	cmn	w0, #0x6
  22e244:	b.ne	22e290 <method_can_reboot_to_firmware_setup+0x7c>  // b.any
  22e248:	bl	241240 <efi_reboot_to_firmware_supported@plt>
  22e24c:	tbz	w0, #31, 22e29c <method_can_reboot_to_firmware_setup+0x88>
  22e250:	mov	w21, w0
  22e254:	cmn	w0, #0x5f
  22e258:	b.eq	22e2f0 <method_can_reboot_to_firmware_setup+0xdc>  // b.none
  22e25c:	mov	w0, wzr
  22e260:	bl	240750 <log_get_max_level_realm@plt>
  22e264:	cmp	w0, #0x4
  22e268:	b.lt	22e2f0 <method_can_reboot_to_firmware_setup+0xdc>  // b.tstop
  22e26c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e270:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22e274:	adrp	x5, 212000 <inhibit_what_to_string.buffer+0x212000>
  22e278:	add	x2, x2, #0xe6f
  22e27c:	add	x4, x4, #0x94
  22e280:	add	x5, x5, #0x212
  22e284:	mov	w0, #0x4                   	// #4
  22e288:	mov	w3, #0xa8a                 	// #2698
  22e28c:	b	22e2e8 <method_can_reboot_to_firmware_setup+0xd4>
  22e290:	mov	w21, w0
  22e294:	cmp	w0, #0x0
  22e298:	b.le	22e2b4 <method_can_reboot_to_firmware_setup+0xa0>
  22e29c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e2a0:	add	x1, x1, #0xf5f
  22e2a4:	mov	x0, x19
  22e2a8:	mov	x2, x20
  22e2ac:	bl	231ab0 <return_test_polkit>
  22e2b0:	b	22e308 <method_can_reboot_to_firmware_setup+0xf4>
  22e2b4:	tbz	w21, #31, 22e2f0 <method_can_reboot_to_firmware_setup+0xdc>
  22e2b8:	mov	w0, wzr
  22e2bc:	bl	240750 <log_get_max_level_realm@plt>
  22e2c0:	cmp	w0, #0x4
  22e2c4:	b.lt	22e2f0 <method_can_reboot_to_firmware_setup+0xdc>  // b.tstop
  22e2c8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e2cc:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22e2d0:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  22e2d4:	add	x2, x2, #0xe6f
  22e2d8:	add	x4, x4, #0x94
  22e2dc:	add	x5, x5, #0x4cb
  22e2e0:	mov	w0, #0x4                   	// #4
  22e2e4:	mov	w3, #0xa93                 	// #2707
  22e2e8:	mov	w1, w21
  22e2ec:	bl	240770 <log_internal_realm@plt>
  22e2f0:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e2f4:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22e2f8:	add	x1, x1, #0x6de
  22e2fc:	add	x2, x2, #0x8d3
  22e300:	mov	x0, x19
  22e304:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22e308:	ldp	x20, x19, [sp, #32]
  22e30c:	ldr	x21, [sp, #16]
  22e310:	ldp	x29, x30, [sp], #48
  22e314:	ret
  22e318:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e31c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e320:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22e324:	add	x1, x1, #0x30
  22e328:	add	x2, x2, #0xe6f
  22e32c:	add	x4, x4, #0x42a
  22e330:	mov	w3, #0xa80                 	// #2688
  22e334:	bl	240790 <log_assert_failed_realm@plt>
  22e338:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22e33c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e340:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22e344:	add	x1, x1, #0x102
  22e348:	add	x2, x2, #0xe6f
  22e34c:	add	x4, x4, #0x42a
  22e350:	mov	w3, #0xa81                 	// #2689
  22e354:	mov	w0, wzr
  22e358:	bl	240790 <log_assert_failed_realm@plt>

000000000022e35c <method_set_reboot_to_firmware_setup>:
  22e35c:	sub	sp, sp, #0x40
  22e360:	stp	x29, x30, [sp, #16]
  22e364:	stp	x22, x21, [sp, #32]
  22e368:	stp	x20, x19, [sp, #48]
  22e36c:	add	x29, sp, #0x10
  22e370:	cbz	x0, 22e4d8 <method_set_reboot_to_firmware_setup+0x17c>
  22e374:	mov	x21, x1
  22e378:	cbz	x1, 22e4f8 <method_set_reboot_to_firmware_setup+0x19c>
  22e37c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22e380:	mov	x20, x2
  22e384:	add	x1, x1, #0xb8c
  22e388:	sub	x2, x29, #0x4
  22e38c:	mov	x19, x0
  22e390:	bl	240fb0 <sd_bus_message_read@plt>
  22e394:	tbnz	w0, #31, 22e4bc <method_set_reboot_to_firmware_setup+0x160>
  22e398:	adrp	x0, 208000 <inhibit_what_to_string.buffer+0x208000>
  22e39c:	add	x0, x0, #0x2
  22e3a0:	bl	241000 <getenv_bool@plt>
  22e3a4:	cmn	w0, #0x6
  22e3a8:	b.ne	22e3c4 <method_set_reboot_to_firmware_setup+0x68>  // b.any
  22e3ac:	bl	241240 <efi_reboot_to_firmware_supported@plt>
  22e3b0:	cmn	w0, #0x5f
  22e3b4:	b.eq	22e45c <method_set_reboot_to_firmware_setup+0x100>  // b.none
  22e3b8:	tbnz	w0, #31, 22e4bc <method_set_reboot_to_firmware_setup+0x160>
  22e3bc:	mov	w22, #0x1                   	// #1
  22e3c0:	b	22e3d4 <method_set_reboot_to_firmware_setup+0x78>
  22e3c4:	mov	w22, w0
  22e3c8:	cmp	w0, #0x0
  22e3cc:	b.le	22e420 <method_set_reboot_to_firmware_setup+0xc4>
  22e3d0:	mov	w22, wzr
  22e3d4:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e3d8:	add	x6, x21, #0x1b0
  22e3dc:	add	x2, x2, #0xf5f
  22e3e0:	mov	w1, #0x15                  	// #21
  22e3e4:	mov	w5, #0xffffffff            	// #-1
  22e3e8:	mov	x0, x19
  22e3ec:	mov	x3, xzr
  22e3f0:	mov	w4, wzr
  22e3f4:	mov	x7, x20
  22e3f8:	bl	241160 <bus_verify_polkit_async@plt>
  22e3fc:	tbnz	w0, #31, 22e4bc <method_set_reboot_to_firmware_setup+0x160>
  22e400:	cbz	w0, 22e478 <method_set_reboot_to_firmware_setup+0x11c>
  22e404:	ldur	w8, [x29, #-4]
  22e408:	cbz	w22, 22e480 <method_set_reboot_to_firmware_setup+0x124>
  22e40c:	cmp	w8, #0x0
  22e410:	cset	w0, ne  // ne = any
  22e414:	bl	241250 <efi_set_reboot_to_firmware@plt>
  22e418:	tbz	w0, #31, 22e4b0 <method_set_reboot_to_firmware_setup+0x154>
  22e41c:	b	22e4bc <method_set_reboot_to_firmware_setup+0x160>
  22e420:	tbz	w22, #31, 22e45c <method_set_reboot_to_firmware_setup+0x100>
  22e424:	mov	w0, wzr
  22e428:	bl	240750 <log_get_max_level_realm@plt>
  22e42c:	cmp	w0, #0x4
  22e430:	b.lt	22e45c <method_set_reboot_to_firmware_setup+0x100>  // b.tstop
  22e434:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e438:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22e43c:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  22e440:	add	x2, x2, #0xe6f
  22e444:	add	x4, x4, #0xdfb
  22e448:	add	x5, x5, #0x4cb
  22e44c:	mov	w0, #0x4                   	// #4
  22e450:	mov	w3, #0xa52                 	// #2642
  22e454:	mov	w1, w22
  22e458:	bl	240770 <log_internal_realm@plt>
  22e45c:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  22e460:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  22e464:	add	x1, x1, #0xc9b
  22e468:	add	x2, x2, #0xc55
  22e46c:	mov	x0, x20
  22e470:	bl	240f50 <sd_bus_error_setf@plt>
  22e474:	b	22e4bc <method_set_reboot_to_firmware_setup+0x160>
  22e478:	mov	w0, #0x1                   	// #1
  22e47c:	b	22e4bc <method_set_reboot_to_firmware_setup+0x160>
  22e480:	adrp	x0, 211000 <inhibit_what_to_string.buffer+0x211000>
  22e484:	add	x0, x0, #0x698
  22e488:	cbz	w8, 22e498 <method_set_reboot_to_firmware_setup+0x13c>
  22e48c:	bl	2411c0 <touch@plt>
  22e490:	tbz	w0, #31, 22e4b0 <method_set_reboot_to_firmware_setup+0x154>
  22e494:	b	22e4bc <method_set_reboot_to_firmware_setup+0x160>
  22e498:	bl	2411d0 <unlink@plt>
  22e49c:	tbz	w0, #31, 22e4b0 <method_set_reboot_to_firmware_setup+0x154>
  22e4a0:	bl	240930 <__errno_location@plt>
  22e4a4:	ldr	w8, [x0]
  22e4a8:	cmp	w8, #0x2
  22e4ac:	b.ne	22e4d0 <method_set_reboot_to_firmware_setup+0x174>  // b.any
  22e4b0:	mov	x0, x19
  22e4b4:	mov	x1, xzr
  22e4b8:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22e4bc:	ldp	x20, x19, [sp, #48]
  22e4c0:	ldp	x22, x21, [sp, #32]
  22e4c4:	ldp	x29, x30, [sp, #16]
  22e4c8:	add	sp, sp, #0x40
  22e4cc:	ret
  22e4d0:	neg	w0, w8
  22e4d4:	b	22e4bc <method_set_reboot_to_firmware_setup+0x160>
  22e4d8:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e4dc:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e4e0:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  22e4e4:	add	x1, x1, #0x30
  22e4e8:	add	x2, x2, #0xe6f
  22e4ec:	add	x4, x4, #0x7f3
  22e4f0:	mov	w3, #0xa3b                 	// #2619
  22e4f4:	bl	240790 <log_assert_failed_realm@plt>
  22e4f8:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22e4fc:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e500:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  22e504:	add	x1, x1, #0x102
  22e508:	add	x2, x2, #0xe6f
  22e50c:	add	x4, x4, #0x7f3
  22e510:	mov	w3, #0xa3c                 	// #2620
  22e514:	mov	w0, wzr
  22e518:	bl	240790 <log_assert_failed_realm@plt>

000000000022e51c <method_can_reboot_to_boot_loader_menu>:
  22e51c:	stp	x29, x30, [sp, #-48]!
  22e520:	str	x21, [sp, #16]
  22e524:	stp	x20, x19, [sp, #32]
  22e528:	mov	x29, sp
  22e52c:	cbz	x0, 22e658 <method_can_reboot_to_boot_loader_menu+0x13c>
  22e530:	cbz	x1, 22e678 <method_can_reboot_to_boot_loader_menu+0x15c>
  22e534:	mov	x19, x0
  22e538:	adrp	x0, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e53c:	add	x0, x0, #0xd0
  22e540:	mov	x20, x2
  22e544:	bl	241000 <getenv_bool@plt>
  22e548:	cmn	w0, #0x6
  22e54c:	b.ne	22e574 <method_can_reboot_to_boot_loader_menu+0x58>  // b.any
  22e550:	add	x0, x29, #0x18
  22e554:	str	xzr, [x29, #24]
  22e558:	bl	241260 <efi_loader_get_features@plt>
  22e55c:	tbnz	w0, #31, 22e5d8 <method_can_reboot_to_boot_loader_menu+0xbc>
  22e560:	ldrb	w8, [x29, #24]
  22e564:	tbz	w8, #1, 22e614 <method_can_reboot_to_boot_loader_menu+0xf8>
  22e568:	mov	w8, #0x1                   	// #1
  22e56c:	tbnz	w8, #0, 22e634 <method_can_reboot_to_boot_loader_menu+0x118>
  22e570:	b	22e648 <method_can_reboot_to_boot_loader_menu+0x12c>
  22e574:	mov	w21, w0
  22e578:	cmp	w0, #0x0
  22e57c:	b.gt	22e634 <method_can_reboot_to_boot_loader_menu+0x118>
  22e580:	tbz	w21, #31, 22e5bc <method_can_reboot_to_boot_loader_menu+0xa0>
  22e584:	mov	w0, wzr
  22e588:	bl	240750 <log_get_max_level_realm@plt>
  22e58c:	cmp	w0, #0x4
  22e590:	b.lt	22e5bc <method_can_reboot_to_boot_loader_menu+0xa0>  // b.tstop
  22e594:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e598:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e59c:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  22e5a0:	add	x2, x2, #0xe6f
  22e5a4:	add	x4, x4, #0xf93
  22e5a8:	add	x5, x5, #0xb76
  22e5ac:	mov	w0, #0x4                   	// #4
  22e5b0:	mov	w3, #0xb50                 	// #2896
  22e5b4:	mov	w1, w21
  22e5b8:	bl	240770 <log_internal_realm@plt>
  22e5bc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e5c0:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22e5c4:	add	x1, x1, #0x6de
  22e5c8:	add	x2, x2, #0x8d3
  22e5cc:	mov	x0, x19
  22e5d0:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22e5d4:	b	22e648 <method_can_reboot_to_boot_loader_menu+0x12c>
  22e5d8:	mov	w21, w0
  22e5dc:	mov	w0, wzr
  22e5e0:	bl	240750 <log_get_max_level_realm@plt>
  22e5e4:	cmp	w0, #0x4
  22e5e8:	b.lt	22e614 <method_can_reboot_to_boot_loader_menu+0xf8>  // b.tstop
  22e5ec:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e5f0:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e5f4:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22e5f8:	add	x2, x2, #0xe6f
  22e5fc:	add	x4, x4, #0xf93
  22e600:	add	x5, x5, #0x7ef
  22e604:	mov	w0, #0x4                   	// #4
  22e608:	mov	w3, #0xb48                 	// #2888
  22e60c:	mov	w1, w21
  22e610:	bl	240770 <log_internal_realm@plt>
  22e614:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e618:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22e61c:	add	x1, x1, #0x6de
  22e620:	add	x2, x2, #0x8d3
  22e624:	mov	x0, x19
  22e628:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22e62c:	mov	w8, wzr
  22e630:	tbz	w8, #0, 22e648 <method_can_reboot_to_boot_loader_menu+0x12c>
  22e634:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  22e638:	add	x1, x1, #0xcc3
  22e63c:	mov	x0, x19
  22e640:	mov	x2, x20
  22e644:	bl	231ab0 <return_test_polkit>
  22e648:	ldp	x20, x19, [sp, #32]
  22e64c:	ldr	x21, [sp, #16]
  22e650:	ldp	x29, x30, [sp], #48
  22e654:	ret
  22e658:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e65c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e660:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22e664:	add	x1, x1, #0x30
  22e668:	add	x2, x2, #0xe6f
  22e66c:	add	x4, x4, #0x2c7
  22e670:	mov	w3, #0xb3d                 	// #2877
  22e674:	bl	240790 <log_assert_failed_realm@plt>
  22e678:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22e67c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e680:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22e684:	add	x1, x1, #0x102
  22e688:	add	x2, x2, #0xe6f
  22e68c:	add	x4, x4, #0x2c7
  22e690:	mov	w3, #0xb3e                 	// #2878
  22e694:	mov	w0, wzr
  22e698:	bl	240790 <log_assert_failed_realm@plt>

000000000022e69c <method_set_reboot_to_boot_loader_menu>:
  22e69c:	sub	sp, sp, #0x60
  22e6a0:	stp	x29, x30, [sp, #32]
  22e6a4:	str	x23, [sp, #48]
  22e6a8:	stp	x22, x21, [sp, #64]
  22e6ac:	stp	x20, x19, [sp, #80]
  22e6b0:	add	x29, sp, #0x20
  22e6b4:	cbz	x0, 22e978 <method_set_reboot_to_boot_loader_menu+0x2dc>
  22e6b8:	mov	x22, x1
  22e6bc:	cbz	x1, 22e998 <method_set_reboot_to_boot_loader_menu+0x2fc>
  22e6c0:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  22e6c4:	mov	x20, x2
  22e6c8:	add	x1, x1, #0xfe8
  22e6cc:	add	x2, x29, #0x18
  22e6d0:	mov	x19, x0
  22e6d4:	bl	240fb0 <sd_bus_message_read@plt>
  22e6d8:	tbnz	w0, #31, 22e950 <method_set_reboot_to_boot_loader_menu+0x2b4>
  22e6dc:	adrp	x0, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e6e0:	add	x0, x0, #0xd0
  22e6e4:	bl	241000 <getenv_bool@plt>
  22e6e8:	cmn	w0, #0x6
  22e6ec:	b.ne	22e710 <method_set_reboot_to_boot_loader_menu+0x74>  // b.any
  22e6f0:	add	x0, sp, #0x8
  22e6f4:	bl	241260 <efi_loader_get_features@plt>
  22e6f8:	tbnz	w0, #31, 22e724 <method_set_reboot_to_boot_loader_menu+0x88>
  22e6fc:	ldrb	w8, [sp, #8]
  22e700:	tbz	w8, #1, 22e760 <method_set_reboot_to_boot_loader_menu+0xc4>
  22e704:	mov	w8, #0x1                   	// #1
  22e708:	tbnz	w8, #0, 22e784 <method_set_reboot_to_boot_loader_menu+0xe8>
  22e70c:	b	22e954 <method_set_reboot_to_boot_loader_menu+0x2b8>
  22e710:	mov	w21, w0
  22e714:	cmp	w0, #0x0
  22e718:	b.le	22e848 <method_set_reboot_to_boot_loader_menu+0x1ac>
  22e71c:	mov	w23, wzr
  22e720:	b	22e788 <method_set_reboot_to_boot_loader_menu+0xec>
  22e724:	mov	w21, w0
  22e728:	mov	w0, wzr
  22e72c:	bl	240750 <log_get_max_level_realm@plt>
  22e730:	cmp	w0, #0x4
  22e734:	b.lt	22e760 <method_set_reboot_to_boot_loader_menu+0xc4>  // b.tstop
  22e738:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e73c:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22e740:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22e744:	add	x2, x2, #0xe6f
  22e748:	add	x4, x4, #0xc40
  22e74c:	add	x5, x5, #0x7ef
  22e750:	mov	w0, #0x4                   	// #4
  22e754:	mov	w3, #0xafa                 	// #2810
  22e758:	mov	w1, w21
  22e75c:	bl	240770 <log_internal_realm@plt>
  22e760:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  22e764:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22e768:	add	x1, x1, #0xc9b
  22e76c:	add	x2, x2, #0x837
  22e770:	mov	x0, x20
  22e774:	bl	240f50 <sd_bus_error_setf@plt>
  22e778:	mov	w21, w0
  22e77c:	mov	w8, wzr
  22e780:	tbz	w8, #0, 22e954 <method_set_reboot_to_boot_loader_menu+0x2b8>
  22e784:	mov	w23, #0x1                   	// #1
  22e788:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  22e78c:	add	x6, x22, #0x1b0
  22e790:	add	x2, x2, #0xcc3
  22e794:	mov	w1, #0x15                  	// #21
  22e798:	mov	w5, #0xffffffff            	// #-1
  22e79c:	mov	x0, x19
  22e7a0:	mov	x3, xzr
  22e7a4:	mov	w4, wzr
  22e7a8:	mov	x7, x20
  22e7ac:	bl	241160 <bus_verify_polkit_async@plt>
  22e7b0:	tbnz	w0, #31, 22e950 <method_set_reboot_to_boot_loader_menu+0x2b4>
  22e7b4:	cbz	w0, 22e8a0 <method_set_reboot_to_boot_loader_menu+0x204>
  22e7b8:	ldr	x3, [x29, #24]
  22e7bc:	cmn	x3, #0x1
  22e7c0:	cbz	w23, 22e8a8 <method_set_reboot_to_boot_loader_menu+0x20c>
  22e7c4:	b.eq	22e8e8 <method_set_reboot_to_boot_loader_menu+0x24c>  // b.none
  22e7c8:	mov	x8, #0x34db                	// #13531
  22e7cc:	movk	x8, #0xd7b6, lsl #16
  22e7d0:	movk	x8, #0xde82, lsl #32
  22e7d4:	movk	x8, #0x431b, lsl #48
  22e7d8:	umulh	x8, x3, x8
  22e7dc:	mov	w9, #0x4240                	// #16960
  22e7e0:	lsr	x8, x8, #18
  22e7e4:	movk	w9, #0xf, lsl #16
  22e7e8:	msub	x9, x8, x9, x3
  22e7ec:	cmp	x9, #0x0
  22e7f0:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22e7f4:	cinc	x3, x8, ne  // ne = any
  22e7f8:	add	x2, x2, #0xcd0
  22e7fc:	add	x0, sp, #0x8
  22e800:	mov	w1, #0x17                  	// #23
  22e804:	bl	240e40 <snprintf@plt>
  22e808:	cmp	w0, #0x17
  22e80c:	b.cs	22e9bc <method_set_reboot_to_boot_loader_menu+0x320>  // b.hs, b.nlast
  22e810:	mov	x0, #0x674a                	// #26442
  22e814:	mov	x1, #0xc7b6                	// #51126
  22e818:	movk	x0, #0x82b0, lsl #16
  22e81c:	movk	x1, #0xb44, lsl #16
  22e820:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  22e824:	movk	x0, #0x4c0a, lsl #32
  22e828:	movk	x1, #0xbb29, lsl #32
  22e82c:	add	x2, x2, #0x23
  22e830:	add	x3, sp, #0x8
  22e834:	movk	x0, #0xcf41, lsl #48
  22e838:	movk	x1, #0x4f8c, lsl #48
  22e83c:	bl	241270 <efi_set_variable_string@plt>
  22e840:	tbz	w0, #31, 22e944 <method_set_reboot_to_boot_loader_menu+0x2a8>
  22e844:	b	22e950 <method_set_reboot_to_boot_loader_menu+0x2b4>
  22e848:	tbz	w21, #31, 22e884 <method_set_reboot_to_boot_loader_menu+0x1e8>
  22e84c:	mov	w0, wzr
  22e850:	bl	240750 <log_get_max_level_realm@plt>
  22e854:	cmp	w0, #0x4
  22e858:	b.lt	22e884 <method_set_reboot_to_boot_loader_menu+0x1e8>  // b.tstop
  22e85c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e860:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22e864:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  22e868:	add	x2, x2, #0xe6f
  22e86c:	add	x4, x4, #0xc40
  22e870:	add	x5, x5, #0xb76
  22e874:	mov	w0, #0x4                   	// #4
  22e878:	mov	w3, #0xb04                 	// #2820
  22e87c:	mov	w1, w21
  22e880:	bl	240770 <log_internal_realm@plt>
  22e884:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  22e888:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22e88c:	add	x1, x1, #0xc9b
  22e890:	add	x2, x2, #0x837
  22e894:	mov	x0, x20
  22e898:	bl	240f50 <sd_bus_error_setf@plt>
  22e89c:	b	22e950 <method_set_reboot_to_boot_loader_menu+0x2b4>
  22e8a0:	mov	w21, #0x1                   	// #1
  22e8a4:	b	22e954 <method_set_reboot_to_boot_loader_menu+0x2b8>
  22e8a8:	b.eq	22e924 <method_set_reboot_to_boot_loader_menu+0x288>  // b.none
  22e8ac:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22e8b0:	add	x2, x2, #0xcd0
  22e8b4:	add	x0, sp, #0x8
  22e8b8:	mov	w1, #0x17                  	// #23
  22e8bc:	bl	240e40 <snprintf@plt>
  22e8c0:	cmp	w0, #0x17
  22e8c4:	b.cs	22e9e0 <method_set_reboot_to_boot_loader_menu+0x344>  // b.hs, b.nlast
  22e8c8:	adrp	x0, 211000 <inhibit_what_to_string.buffer+0x211000>
  22e8cc:	add	x0, x0, #0x121
  22e8d0:	add	x1, sp, #0x8
  22e8d4:	bl	230978 <write_string_file_atomic_label>
  22e8d8:	cmp	w0, #0x0
  22e8dc:	csel	w21, w0, w21, lt  // lt = tstop
  22e8e0:	tbz	w0, #31, 22e944 <method_set_reboot_to_boot_loader_menu+0x2a8>
  22e8e4:	b	22e954 <method_set_reboot_to_boot_loader_menu+0x2b8>
  22e8e8:	mov	x0, #0x674a                	// #26442
  22e8ec:	mov	x1, #0xc7b6                	// #51126
  22e8f0:	movk	x0, #0x82b0, lsl #16
  22e8f4:	movk	x1, #0xb44, lsl #16
  22e8f8:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  22e8fc:	movk	x0, #0x4c0a, lsl #32
  22e900:	movk	x1, #0xbb29, lsl #32
  22e904:	add	x2, x2, #0x23
  22e908:	movk	x0, #0xcf41, lsl #48
  22e90c:	movk	x1, #0x4f8c, lsl #48
  22e910:	mov	x3, xzr
  22e914:	mov	x4, xzr
  22e918:	bl	241280 <efi_set_variable@plt>
  22e91c:	tbz	w0, #31, 22e944 <method_set_reboot_to_boot_loader_menu+0x2a8>
  22e920:	b	22e950 <method_set_reboot_to_boot_loader_menu+0x2b4>
  22e924:	adrp	x0, 211000 <inhibit_what_to_string.buffer+0x211000>
  22e928:	add	x0, x0, #0x121
  22e92c:	bl	2411d0 <unlink@plt>
  22e930:	tbz	w0, #31, 22e944 <method_set_reboot_to_boot_loader_menu+0x2a8>
  22e934:	bl	240930 <__errno_location@plt>
  22e938:	ldr	w8, [x0]
  22e93c:	cmp	w8, #0x2
  22e940:	b.ne	22e970 <method_set_reboot_to_boot_loader_menu+0x2d4>  // b.any
  22e944:	mov	x0, x19
  22e948:	mov	x1, xzr
  22e94c:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22e950:	mov	w21, w0
  22e954:	mov	w0, w21
  22e958:	ldp	x20, x19, [sp, #80]
  22e95c:	ldp	x22, x21, [sp, #64]
  22e960:	ldr	x23, [sp, #48]
  22e964:	ldp	x29, x30, [sp, #32]
  22e968:	add	sp, sp, #0x60
  22e96c:	ret
  22e970:	neg	w21, w8
  22e974:	b	22e954 <method_set_reboot_to_boot_loader_menu+0x2b8>
  22e978:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22e97c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e980:	adrp	x4, 212000 <inhibit_what_to_string.buffer+0x212000>
  22e984:	add	x1, x1, #0x30
  22e988:	add	x2, x2, #0xe6f
  22e98c:	add	x4, x4, #0x252
  22e990:	mov	w3, #0xaeb                 	// #2795
  22e994:	bl	240790 <log_assert_failed_realm@plt>
  22e998:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22e99c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e9a0:	adrp	x4, 212000 <inhibit_what_to_string.buffer+0x212000>
  22e9a4:	add	x1, x1, #0x102
  22e9a8:	add	x2, x2, #0xe6f
  22e9ac:	add	x4, x4, #0x252
  22e9b0:	mov	w3, #0xaec                 	// #2796
  22e9b4:	mov	w0, wzr
  22e9b8:	bl	240790 <log_assert_failed_realm@plt>
  22e9bc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22e9c0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e9c4:	adrp	x4, 212000 <inhibit_what_to_string.buffer+0x212000>
  22e9c8:	add	x1, x1, #0xd49
  22e9cc:	add	x2, x2, #0xe6f
  22e9d0:	add	x4, x4, #0x252
  22e9d4:	mov	w3, #0xb1d                 	// #2845
  22e9d8:	mov	w0, wzr
  22e9dc:	bl	240790 <log_assert_failed_realm@plt>
  22e9e0:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22e9e4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22e9e8:	adrp	x4, 212000 <inhibit_what_to_string.buffer+0x212000>
  22e9ec:	add	x1, x1, #0xd49
  22e9f0:	add	x2, x2, #0xe6f
  22e9f4:	add	x4, x4, #0x252
  22e9f8:	mov	w3, #0xb2a                 	// #2858
  22e9fc:	mov	w0, wzr
  22ea00:	bl	240790 <log_assert_failed_realm@plt>

000000000022ea04 <method_can_reboot_to_boot_loader_entry>:
  22ea04:	stp	x29, x30, [sp, #-48]!
  22ea08:	str	x21, [sp, #16]
  22ea0c:	stp	x20, x19, [sp, #32]
  22ea10:	mov	x29, sp
  22ea14:	cbz	x0, 22eb40 <method_can_reboot_to_boot_loader_entry+0x13c>
  22ea18:	cbz	x1, 22eb60 <method_can_reboot_to_boot_loader_entry+0x15c>
  22ea1c:	mov	x19, x0
  22ea20:	adrp	x0, 209000 <inhibit_what_to_string.buffer+0x209000>
  22ea24:	add	x0, x0, #0xe38
  22ea28:	mov	x20, x2
  22ea2c:	bl	241000 <getenv_bool@plt>
  22ea30:	cmn	w0, #0x6
  22ea34:	b.ne	22ea5c <method_can_reboot_to_boot_loader_entry+0x58>  // b.any
  22ea38:	add	x0, x29, #0x18
  22ea3c:	str	xzr, [x29, #24]
  22ea40:	bl	241260 <efi_loader_get_features@plt>
  22ea44:	tbnz	w0, #31, 22eac0 <method_can_reboot_to_boot_loader_entry+0xbc>
  22ea48:	ldrb	w8, [x29, #24]
  22ea4c:	tbz	w8, #3, 22eafc <method_can_reboot_to_boot_loader_entry+0xf8>
  22ea50:	mov	w8, #0x1                   	// #1
  22ea54:	tbnz	w8, #0, 22eb1c <method_can_reboot_to_boot_loader_entry+0x118>
  22ea58:	b	22eb30 <method_can_reboot_to_boot_loader_entry+0x12c>
  22ea5c:	mov	w21, w0
  22ea60:	cmp	w0, #0x0
  22ea64:	b.gt	22eb1c <method_can_reboot_to_boot_loader_entry+0x118>
  22ea68:	tbz	w21, #31, 22eaa4 <method_can_reboot_to_boot_loader_entry+0xa0>
  22ea6c:	mov	w0, wzr
  22ea70:	bl	240750 <log_get_max_level_realm@plt>
  22ea74:	cmp	w0, #0x4
  22ea78:	b.lt	22eaa4 <method_can_reboot_to_boot_loader_entry+0xa0>  // b.tstop
  22ea7c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ea80:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22ea84:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22ea88:	add	x2, x2, #0xe6f
  22ea8c:	add	x4, x4, #0xd19
  22ea90:	add	x5, x5, #0x6fa
  22ea94:	mov	w0, #0x4                   	// #4
  22ea98:	mov	w3, #0xc0f                 	// #3087
  22ea9c:	mov	w1, w21
  22eaa0:	bl	240770 <log_internal_realm@plt>
  22eaa4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22eaa8:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22eaac:	add	x1, x1, #0x6de
  22eab0:	add	x2, x2, #0x8d3
  22eab4:	mov	x0, x19
  22eab8:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22eabc:	b	22eb30 <method_can_reboot_to_boot_loader_entry+0x12c>
  22eac0:	mov	w21, w0
  22eac4:	mov	w0, wzr
  22eac8:	bl	240750 <log_get_max_level_realm@plt>
  22eacc:	cmp	w0, #0x4
  22ead0:	b.lt	22eafc <method_can_reboot_to_boot_loader_entry+0xf8>  // b.tstop
  22ead4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ead8:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22eadc:	adrp	x5, 211000 <inhibit_what_to_string.buffer+0x211000>
  22eae0:	add	x2, x2, #0xe6f
  22eae4:	add	x4, x4, #0xd19
  22eae8:	add	x5, x5, #0x845
  22eaec:	mov	w0, #0x4                   	// #4
  22eaf0:	mov	w3, #0xc07                 	// #3079
  22eaf4:	mov	w1, w21
  22eaf8:	bl	240770 <log_internal_realm@plt>
  22eafc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22eb00:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22eb04:	add	x1, x1, #0x6de
  22eb08:	add	x2, x2, #0x8d3
  22eb0c:	mov	x0, x19
  22eb10:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22eb14:	mov	w8, wzr
  22eb18:	tbz	w8, #0, 22eb30 <method_can_reboot_to_boot_loader_entry+0x12c>
  22eb1c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22eb20:	add	x1, x1, #0x47c
  22eb24:	mov	x0, x19
  22eb28:	mov	x2, x20
  22eb2c:	bl	231ab0 <return_test_polkit>
  22eb30:	ldp	x20, x19, [sp, #32]
  22eb34:	ldr	x21, [sp, #16]
  22eb38:	ldp	x29, x30, [sp], #48
  22eb3c:	ret
  22eb40:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22eb44:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22eb48:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  22eb4c:	add	x1, x1, #0x30
  22eb50:	add	x2, x2, #0xe6f
  22eb54:	add	x4, x4, #0x606
  22eb58:	mov	w3, #0xbfc                 	// #3068
  22eb5c:	bl	240790 <log_assert_failed_realm@plt>
  22eb60:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22eb64:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22eb68:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  22eb6c:	add	x1, x1, #0x102
  22eb70:	add	x2, x2, #0xe6f
  22eb74:	add	x4, x4, #0x606
  22eb78:	mov	w3, #0xbfd                 	// #3069
  22eb7c:	mov	w0, wzr
  22eb80:	bl	240790 <log_assert_failed_realm@plt>

000000000022eb84 <method_set_reboot_to_boot_loader_entry>:
  22eb84:	sub	sp, sp, #0x40
  22eb88:	stp	x29, x30, [sp, #16]
  22eb8c:	stp	x22, x21, [sp, #32]
  22eb90:	stp	x20, x19, [sp, #48]
  22eb94:	add	x29, sp, #0x10
  22eb98:	cbz	x0, 22ee40 <method_set_reboot_to_boot_loader_entry+0x2bc>
  22eb9c:	mov	x21, x1
  22eba0:	cbz	x1, 22ee60 <method_set_reboot_to_boot_loader_entry+0x2dc>
  22eba4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22eba8:	mov	x20, x2
  22ebac:	add	x1, x1, #0x6de
  22ebb0:	add	x2, sp, #0x8
  22ebb4:	mov	x19, x0
  22ebb8:	bl	240fb0 <sd_bus_message_read@plt>
  22ebbc:	tbnz	w0, #31, 22ee2c <method_set_reboot_to_boot_loader_entry+0x2a8>
  22ebc0:	ldr	x22, [sp, #8]
  22ebc4:	mov	x0, x22
  22ebc8:	bl	22fbe8 <isempty>
  22ebcc:	tbz	w0, #0, 22ec08 <method_set_reboot_to_boot_loader_entry+0x84>
  22ebd0:	str	xzr, [sp, #8]
  22ebd4:	adrp	x0, 209000 <inhibit_what_to_string.buffer+0x209000>
  22ebd8:	add	x0, x0, #0xe38
  22ebdc:	bl	241000 <getenv_bool@plt>
  22ebe0:	cmn	w0, #0x6
  22ebe4:	b.ne	22ec40 <method_set_reboot_to_boot_loader_entry+0xbc>  // b.any
  22ebe8:	mov	x0, sp
  22ebec:	bl	241260 <efi_loader_get_features@plt>
  22ebf0:	tbnz	w0, #31, 22ec70 <method_set_reboot_to_boot_loader_entry+0xec>
  22ebf4:	ldrb	w8, [sp]
  22ebf8:	tbz	w8, #3, 22ecac <method_set_reboot_to_boot_loader_entry+0x128>
  22ebfc:	mov	w8, #0x1                   	// #1
  22ec00:	tbnz	w8, #0, 22eccc <method_set_reboot_to_boot_loader_entry+0x148>
  22ec04:	b	22ee2c <method_set_reboot_to_boot_loader_entry+0x2a8>
  22ec08:	mov	x0, x22
  22ec0c:	bl	241040 <efi_loader_entry_name_valid@plt>
  22ec10:	ldr	x3, [sp, #8]
  22ec14:	tbz	w0, #0, 22ec54 <method_set_reboot_to_boot_loader_entry+0xd0>
  22ec18:	mov	x0, x3
  22ec1c:	bl	231b28 <boot_loader_entry_exists>
  22ec20:	tbnz	w0, #31, 22ee2c <method_set_reboot_to_boot_loader_entry+0x2a8>
  22ec24:	cbnz	w0, 22ebd4 <method_set_reboot_to_boot_loader_entry+0x50>
  22ec28:	ldr	x3, [sp, #8]
  22ec2c:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  22ec30:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  22ec34:	add	x1, x1, #0xc9b
  22ec38:	add	x2, x2, #0x144
  22ec3c:	b	22ec64 <method_set_reboot_to_boot_loader_entry+0xe0>
  22ec40:	mov	w22, w0
  22ec44:	cmp	w0, #0x0
  22ec48:	b.le	22ed50 <method_set_reboot_to_boot_loader_entry+0x1cc>
  22ec4c:	mov	w22, wzr
  22ec50:	b	22ecd0 <method_set_reboot_to_boot_loader_entry+0x14c>
  22ec54:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22ec58:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  22ec5c:	add	x1, x1, #0x47f
  22ec60:	add	x2, x2, #0x65b
  22ec64:	mov	x0, x20
  22ec68:	bl	240f50 <sd_bus_error_setf@plt>
  22ec6c:	b	22ee2c <method_set_reboot_to_boot_loader_entry+0x2a8>
  22ec70:	mov	w22, w0
  22ec74:	mov	w0, wzr
  22ec78:	bl	240750 <log_get_max_level_realm@plt>
  22ec7c:	cmp	w0, #0x4
  22ec80:	b.lt	22ecac <method_set_reboot_to_boot_loader_entry+0x128>  // b.tstop
  22ec84:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ec88:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  22ec8c:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  22ec90:	add	x2, x2, #0xe6f
  22ec94:	add	x4, x4, #0x75
  22ec98:	add	x5, x5, #0x68f
  22ec9c:	mov	w0, #0x4                   	// #4
  22eca0:	mov	w3, #0xbc0                 	// #3008
  22eca4:	mov	w1, w22
  22eca8:	bl	240770 <log_internal_realm@plt>
  22ecac:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  22ecb0:	adrp	x2, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22ecb4:	add	x1, x1, #0xc9b
  22ecb8:	add	x2, x2, #0x4ee
  22ecbc:	mov	x0, x20
  22ecc0:	bl	240f50 <sd_bus_error_setf@plt>
  22ecc4:	mov	w8, wzr
  22ecc8:	tbz	w8, #0, 22ee2c <method_set_reboot_to_boot_loader_entry+0x2a8>
  22eccc:	mov	w22, #0x1                   	// #1
  22ecd0:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22ecd4:	add	x6, x21, #0x1b0
  22ecd8:	add	x2, x2, #0x47c
  22ecdc:	mov	w1, #0x15                  	// #21
  22ece0:	mov	w5, #0xffffffff            	// #-1
  22ece4:	mov	x0, x19
  22ece8:	mov	x3, xzr
  22ecec:	mov	w4, wzr
  22ecf0:	mov	x7, x20
  22ecf4:	bl	241160 <bus_verify_polkit_async@plt>
  22ecf8:	tbnz	w0, #31, 22ee2c <method_set_reboot_to_boot_loader_entry+0x2a8>
  22ecfc:	cbz	w0, 22eda8 <method_set_reboot_to_boot_loader_entry+0x224>
  22ed00:	ldr	x20, [sp, #8]
  22ed04:	mov	x0, x20
  22ed08:	bl	22fbe8 <isempty>
  22ed0c:	cbz	w22, 22edb0 <method_set_reboot_to_boot_loader_entry+0x22c>
  22ed10:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22ed14:	add	x2, x2, #0xbb4
  22ed18:	tbz	w0, #0, 22eddc <method_set_reboot_to_boot_loader_entry+0x258>
  22ed1c:	mov	x0, #0x674a                	// #26442
  22ed20:	mov	x1, #0xc7b6                	// #51126
  22ed24:	movk	x0, #0x82b0, lsl #16
  22ed28:	movk	x1, #0xb44, lsl #16
  22ed2c:	movk	x0, #0x4c0a, lsl #32
  22ed30:	movk	x1, #0xbb29, lsl #32
  22ed34:	movk	x0, #0xcf41, lsl #48
  22ed38:	movk	x1, #0x4f8c, lsl #48
  22ed3c:	mov	x3, xzr
  22ed40:	mov	x4, xzr
  22ed44:	bl	241280 <efi_set_variable@plt>
  22ed48:	tbz	w0, #31, 22ee20 <method_set_reboot_to_boot_loader_entry+0x29c>
  22ed4c:	b	22ee2c <method_set_reboot_to_boot_loader_entry+0x2a8>
  22ed50:	tbz	w22, #31, 22ed8c <method_set_reboot_to_boot_loader_entry+0x208>
  22ed54:	mov	w0, wzr
  22ed58:	bl	240750 <log_get_max_level_realm@plt>
  22ed5c:	cmp	w0, #0x4
  22ed60:	b.lt	22ed8c <method_set_reboot_to_boot_loader_entry+0x208>  // b.tstop
  22ed64:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ed68:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  22ed6c:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22ed70:	add	x2, x2, #0xe6f
  22ed74:	add	x4, x4, #0x75
  22ed78:	add	x5, x5, #0x6fa
  22ed7c:	mov	w0, #0x4                   	// #4
  22ed80:	mov	w3, #0xbca                 	// #3018
  22ed84:	mov	w1, w22
  22ed88:	bl	240770 <log_internal_realm@plt>
  22ed8c:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  22ed90:	adrp	x2, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22ed94:	add	x1, x1, #0xc9b
  22ed98:	add	x2, x2, #0x4ee
  22ed9c:	mov	x0, x20
  22eda0:	bl	240f50 <sd_bus_error_setf@plt>
  22eda4:	b	22ee2c <method_set_reboot_to_boot_loader_entry+0x2a8>
  22eda8:	mov	w0, #0x1                   	// #1
  22edac:	b	22ee2c <method_set_reboot_to_boot_loader_entry+0x2a8>
  22edb0:	tbz	w0, #0, 22ee0c <method_set_reboot_to_boot_loader_entry+0x288>
  22edb4:	adrp	x0, 208000 <inhibit_what_to_string.buffer+0x208000>
  22edb8:	add	x0, x0, #0xaf4
  22edbc:	bl	2411d0 <unlink@plt>
  22edc0:	tbz	w0, #31, 22ee20 <method_set_reboot_to_boot_loader_entry+0x29c>
  22edc4:	bl	240930 <__errno_location@plt>
  22edc8:	ldr	w8, [x0]
  22edcc:	cmp	w8, #0x2
  22edd0:	b.eq	22ee20 <method_set_reboot_to_boot_loader_entry+0x29c>  // b.none
  22edd4:	neg	w0, w8
  22edd8:	b	22ee2c <method_set_reboot_to_boot_loader_entry+0x2a8>
  22eddc:	mov	x0, #0x674a                	// #26442
  22ede0:	mov	x1, #0xc7b6                	// #51126
  22ede4:	movk	x0, #0x82b0, lsl #16
  22ede8:	movk	x1, #0xb44, lsl #16
  22edec:	movk	x0, #0x4c0a, lsl #32
  22edf0:	movk	x1, #0xbb29, lsl #32
  22edf4:	movk	x0, #0xcf41, lsl #48
  22edf8:	movk	x1, #0x4f8c, lsl #48
  22edfc:	mov	x3, x20
  22ee00:	bl	241270 <efi_set_variable_string@plt>
  22ee04:	tbz	w0, #31, 22ee20 <method_set_reboot_to_boot_loader_entry+0x29c>
  22ee08:	b	22ee2c <method_set_reboot_to_boot_loader_entry+0x2a8>
  22ee0c:	adrp	x0, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22ee10:	add	x0, x0, #0xb53
  22ee14:	mov	x1, x20
  22ee18:	bl	230978 <write_string_file_atomic_label>
  22ee1c:	tbnz	w0, #31, 22ee2c <method_set_reboot_to_boot_loader_entry+0x2a8>
  22ee20:	mov	x0, x19
  22ee24:	mov	x1, xzr
  22ee28:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22ee2c:	ldp	x20, x19, [sp, #48]
  22ee30:	ldp	x22, x21, [sp, #32]
  22ee34:	ldp	x29, x30, [sp, #16]
  22ee38:	add	sp, sp, #0x40
  22ee3c:	ret
  22ee40:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22ee44:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ee48:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22ee4c:	add	x1, x1, #0x30
  22ee50:	add	x2, x2, #0xe6f
  22ee54:	add	x4, x4, #0x5ca
  22ee58:	mov	w3, #0xba6                 	// #2982
  22ee5c:	bl	240790 <log_assert_failed_realm@plt>
  22ee60:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22ee64:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ee68:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22ee6c:	add	x1, x1, #0x102
  22ee70:	add	x2, x2, #0xe6f
  22ee74:	add	x4, x4, #0x5ca
  22ee78:	mov	w3, #0xba7                 	// #2983
  22ee7c:	mov	w0, wzr
  22ee80:	bl	240790 <log_assert_failed_realm@plt>

000000000022ee84 <method_set_wall_message>:
  22ee84:	sub	sp, sp, #0x40
  22ee88:	stp	x29, x30, [sp, #16]
  22ee8c:	str	x21, [sp, #32]
  22ee90:	stp	x20, x19, [sp, #48]
  22ee94:	add	x29, sp, #0x10
  22ee98:	cbz	x0, 22ef60 <method_set_wall_message+0xdc>
  22ee9c:	mov	x20, x1
  22eea0:	cbz	x1, 22ef80 <method_set_wall_message+0xfc>
  22eea4:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22eea8:	mov	x21, x2
  22eeac:	add	x1, x1, #0xf6e
  22eeb0:	add	x2, x29, #0x18
  22eeb4:	sub	x3, x29, #0x4
  22eeb8:	mov	x19, x0
  22eebc:	bl	240fb0 <sd_bus_message_read@plt>
  22eec0:	tbnz	w0, #31, 22ef4c <method_set_wall_message+0xc8>
  22eec4:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  22eec8:	add	x6, x20, #0x1b0
  22eecc:	add	x2, x2, #0x169
  22eed0:	mov	w1, #0x15                  	// #21
  22eed4:	mov	w5, #0xffffffff            	// #-1
  22eed8:	mov	x0, x19
  22eedc:	mov	x3, xzr
  22eee0:	mov	w4, wzr
  22eee4:	mov	x7, x21
  22eee8:	bl	241160 <bus_verify_polkit_async@plt>
  22eeec:	tbnz	w0, #31, 22ef4c <method_set_wall_message+0xc8>
  22eef0:	cbz	w0, 22ef28 <method_set_wall_message+0xa4>
  22eef4:	ldr	x0, [x29, #24]
  22eef8:	add	x21, x20, #0x150
  22eefc:	bl	231c38 <empty_to_null>
  22ef00:	mov	x1, x0
  22ef04:	mov	x0, x21
  22ef08:	bl	240f10 <free_and_strdup@plt>
  22ef0c:	tbnz	w0, #31, 22ef30 <method_set_wall_message+0xac>
  22ef10:	ldur	w8, [x29, #-4]
  22ef14:	mov	x0, x19
  22ef18:	mov	x1, xzr
  22ef1c:	str	w8, [x20, #344]
  22ef20:	bl	2410a0 <sd_bus_reply_method_return@plt>
  22ef24:	b	22ef4c <method_set_wall_message+0xc8>
  22ef28:	mov	w0, #0x1                   	// #1
  22ef2c:	b	22ef4c <method_set_wall_message+0xc8>
  22ef30:	adrp	x1, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ef34:	adrp	x3, 209000 <inhibit_what_to_string.buffer+0x209000>
  22ef38:	add	x1, x1, #0xe6f
  22ef3c:	add	x3, x3, #0x37b
  22ef40:	mov	w2, #0xc63                 	// #3171
  22ef44:	mov	w0, wzr
  22ef48:	bl	240af0 <log_oom_internal@plt>
  22ef4c:	ldp	x20, x19, [sp, #48]
  22ef50:	ldr	x21, [sp, #32]
  22ef54:	ldp	x29, x30, [sp, #16]
  22ef58:	add	sp, sp, #0x40
  22ef5c:	ret
  22ef60:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22ef64:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ef68:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22ef6c:	add	x1, x1, #0x30
  22ef70:	add	x2, x2, #0xe6f
  22ef74:	add	x4, x4, #0x297
  22ef78:	mov	w3, #0xc4d                 	// #3149
  22ef7c:	bl	240790 <log_assert_failed_realm@plt>
  22ef80:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22ef84:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ef88:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22ef8c:	add	x1, x1, #0x102
  22ef90:	add	x2, x2, #0xe6f
  22ef94:	add	x4, x4, #0x297
  22ef98:	mov	w3, #0xc4e                 	// #3150
  22ef9c:	mov	w0, wzr
  22efa0:	bl	240790 <log_assert_failed_realm@plt>

000000000022efa4 <match_job_removed>:
  22efa4:	sub	sp, sp, #0x50
  22efa8:	stp	x29, x30, [sp, #32]
  22efac:	str	x21, [sp, #48]
  22efb0:	stp	x20, x19, [sp, #64]
  22efb4:	add	x29, sp, #0x20
  22efb8:	cbz	x0, 22f174 <match_job_removed+0x1d0>
  22efbc:	mov	x19, x1
  22efc0:	cbz	x1, 22f194 <match_job_removed+0x1f0>
  22efc4:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  22efc8:	add	x1, x1, #0xb90
  22efcc:	add	x2, sp, #0xc
  22efd0:	add	x3, x29, #0x18
  22efd4:	add	x4, sp, #0x10
  22efd8:	sub	x5, x29, #0x8
  22efdc:	bl	240fb0 <sd_bus_message_read@plt>
  22efe0:	tbnz	w0, #31, 22f0bc <match_job_removed+0x118>
  22efe4:	ldr	x0, [x19, #264]
  22efe8:	cbz	x0, 22eff8 <match_job_removed+0x54>
  22efec:	ldr	x1, [x29, #24]
  22eff0:	bl	240c30 <strcmp@plt>
  22eff4:	cbz	w0, 22f0fc <match_job_removed+0x158>
  22eff8:	ldr	x0, [x19, #216]
  22effc:	ldr	x1, [sp, #16]
  22f000:	bl	2294e0 <hashmap_get>
  22f004:	cbz	x0, 22f054 <match_job_removed+0xb0>
  22f008:	mov	x20, x0
  22f00c:	ldr	x21, [x20, #128]
  22f010:	ldr	x0, [x29, #24]
  22f014:	mov	x1, x21
  22f018:	bl	22f1cc <streq_ptr>
  22f01c:	tbz	w0, #0, 22f04c <match_job_removed+0xa8>
  22f020:	mov	x0, x21
  22f024:	bl	22f1b8 <mfree>
  22f028:	str	xzr, [x20, #128]
  22f02c:	ldr	x1, [sp, #16]
  22f030:	ldur	x2, [x29, #-8]
  22f034:	mov	x0, x20
  22f038:	bl	22f1e8 <session_jobs_reply>
  22f03c:	mov	x0, x20
  22f040:	bl	239e28 <session_save>
  22f044:	ldr	x0, [x20, #40]
  22f048:	bl	23dc5c <user_save>
  22f04c:	mov	x0, x20
  22f050:	bl	23bc50 <session_add_to_gc_queue>
  22f054:	ldr	x0, [x19, #224]
  22f058:	ldr	x1, [sp, #16]
  22f05c:	bl	2294e0 <hashmap_get>
  22f060:	cbz	x0, 22f15c <match_job_removed+0x1b8>
  22f064:	mov	x19, x0
  22f068:	ldr	x20, [x19, #72]
  22f06c:	ldr	x0, [x29, #24]
  22f070:	mov	x1, x20
  22f074:	bl	22f1cc <streq_ptr>
  22f078:	tbz	w0, #0, 22f0b0 <match_job_removed+0x10c>
  22f07c:	mov	x0, x20
  22f080:	bl	22f1b8 <mfree>
  22f084:	ldr	x20, [x19, #128]
  22f088:	str	xzr, [x19, #72]
  22f08c:	cbz	x20, 22f0a8 <match_job_removed+0x104>
  22f090:	ldr	x1, [sp, #16]
  22f094:	mov	x0, x20
  22f098:	mov	x2, xzr
  22f09c:	bl	22f1e8 <session_jobs_reply>
  22f0a0:	ldr	x20, [x20, #256]
  22f0a4:	cbnz	x20, 22f090 <match_job_removed+0xec>
  22f0a8:	mov	x0, x19
  22f0ac:	bl	23dc5c <user_save>
  22f0b0:	mov	x0, x19
  22f0b4:	bl	23e844 <user_add_to_gc_queue>
  22f0b8:	b	22f15c <match_job_removed+0x1b8>
  22f0bc:	mov	w20, w0
  22f0c0:	mov	w0, wzr
  22f0c4:	bl	240750 <log_get_max_level_realm@plt>
  22f0c8:	cmp	w0, #0x3
  22f0cc:	b.lt	22f15c <match_job_removed+0x1b8>  // b.tstop
  22f0d0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f0d4:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22f0d8:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22f0dc:	add	x2, x2, #0xe6f
  22f0e0:	add	x4, x4, #0x44c
  22f0e4:	add	x5, x5, #0xaa7
  22f0e8:	mov	w0, #0x3                   	// #3
  22f0ec:	mov	w3, #0xd71                 	// #3441
  22f0f0:	mov	w1, w20
  22f0f4:	bl	240770 <log_internal_realm@plt>
  22f0f8:	b	22f15c <match_job_removed+0x1b8>
  22f0fc:	bl	240750 <log_get_max_level_realm@plt>
  22f100:	cmp	w0, #0x6
  22f104:	b.lt	22f13c <match_job_removed+0x198>  // b.tstop
  22f108:	ldr	w0, [x19, #248]
  22f10c:	bl	2331e8 <inhibit_what_to_string>
  22f110:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f114:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22f118:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22f11c:	mov	x6, x0
  22f120:	add	x2, x2, #0xe6f
  22f124:	add	x4, x4, #0x44c
  22f128:	add	x5, x5, #0xfc1
  22f12c:	mov	w0, #0x6                   	// #6
  22f130:	mov	w3, #0xd76                 	// #3446
  22f134:	mov	w1, wzr
  22f138:	bl	240770 <log_internal_realm@plt>
  22f13c:	ldr	w1, [x19, #248]
  22f140:	mov	x0, x19
  22f144:	mov	w2, wzr
  22f148:	bl	229ef8 <send_prepare_for>
  22f14c:	ldr	x0, [x19, #264]
  22f150:	bl	22f1b8 <mfree>
  22f154:	str	wzr, [x19, #248]
  22f158:	stp	xzr, xzr, [x19, #256]
  22f15c:	ldp	x20, x19, [sp, #64]
  22f160:	ldr	x21, [sp, #48]
  22f164:	ldp	x29, x30, [sp, #32]
  22f168:	mov	w0, wzr
  22f16c:	add	sp, sp, #0x50
  22f170:	ret
  22f174:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22f178:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f17c:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22f180:	add	x1, x1, #0x30
  22f184:	add	x2, x2, #0xe6f
  22f188:	add	x4, x4, #0xb0e
  22f18c:	mov	w3, #0xd6c                 	// #3436
  22f190:	bl	240790 <log_assert_failed_realm@plt>
  22f194:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22f198:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f19c:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22f1a0:	add	x1, x1, #0x102
  22f1a4:	add	x2, x2, #0xe6f
  22f1a8:	add	x4, x4, #0xb0e
  22f1ac:	mov	w3, #0xd6d                 	// #3437
  22f1b0:	mov	w0, wzr
  22f1b4:	bl	240790 <log_assert_failed_realm@plt>

000000000022f1b8 <mfree>:
  22f1b8:	stp	x29, x30, [sp, #-16]!
  22f1bc:	mov	x29, sp
  22f1c0:	bl	240890 <free@plt>
  22f1c4:	ldp	x29, x30, [sp], #16
  22f1c8:	ret

000000000022f1cc <streq_ptr>:
  22f1cc:	stp	x29, x30, [sp, #-16]!
  22f1d0:	mov	x29, sp
  22f1d4:	bl	240f30 <strcmp_ptr@plt>
  22f1d8:	cmp	w0, #0x0
  22f1dc:	cset	w0, eq  // eq = none
  22f1e0:	ldp	x29, x30, [sp], #16
  22f1e4:	ret

000000000022f1e8 <session_jobs_reply>:
  22f1e8:	sub	sp, sp, #0x50
  22f1ec:	stp	x29, x30, [sp, #32]
  22f1f0:	str	x21, [sp, #48]
  22f1f4:	stp	x20, x19, [sp, #64]
  22f1f8:	add	x29, sp, #0x20
  22f1fc:	cbz	x0, 22f290 <session_jobs_reply+0xa8>
  22f200:	mov	x21, x1
  22f204:	cbz	x1, 22f2b0 <session_jobs_reply+0xc8>
  22f208:	ldrb	w8, [x0, #209]
  22f20c:	mov	x19, x0
  22f210:	tbz	w8, #1, 22f27c <session_jobs_reply+0x94>
  22f214:	mov	x20, x2
  22f218:	cbz	x2, 22f270 <session_jobs_reply+0x88>
  22f21c:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22f220:	add	x1, x1, #0x870
  22f224:	mov	x0, x20
  22f228:	bl	240c30 <strcmp@plt>
  22f22c:	cbz	w0, 22f270 <session_jobs_reply+0x88>
  22f230:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22f234:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  22f238:	add	x1, x1, #0xde9
  22f23c:	add	x2, x2, #0x64c
  22f240:	add	x0, sp, #0x8
  22f244:	mov	x3, x21
  22f248:	mov	x4, x20
  22f24c:	stp	xzr, xzr, [sp, #8]
  22f250:	str	xzr, [sp, #24]
  22f254:	bl	240f50 <sd_bus_error_setf@plt>
  22f258:	add	x1, sp, #0x8
  22f25c:	mov	x0, x19
  22f260:	bl	237b24 <session_send_create_reply>
  22f264:	add	x0, sp, #0x8
  22f268:	bl	240c80 <sd_bus_error_free@plt>
  22f26c:	b	22f27c <session_jobs_reply+0x94>
  22f270:	mov	x0, x19
  22f274:	mov	x1, xzr
  22f278:	bl	237b24 <session_send_create_reply>
  22f27c:	ldp	x20, x19, [sp, #64]
  22f280:	ldr	x21, [sp, #48]
  22f284:	ldp	x29, x30, [sp, #32]
  22f288:	add	sp, sp, #0x50
  22f28c:	ret
  22f290:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22f294:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f298:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  22f29c:	add	x1, x1, #0x6de
  22f2a0:	add	x2, x2, #0xe6f
  22f2a4:	add	x4, x4, #0x88e
  22f2a8:	mov	w3, #0xd53                 	// #3411
  22f2ac:	bl	240790 <log_assert_failed_realm@plt>
  22f2b0:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  22f2b4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f2b8:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  22f2bc:	add	x1, x1, #0x649
  22f2c0:	add	x2, x2, #0xe6f
  22f2c4:	add	x4, x4, #0x88e
  22f2c8:	mov	w3, #0xd54                 	// #3412
  22f2cc:	mov	w0, wzr
  22f2d0:	bl	240790 <log_assert_failed_realm@plt>

000000000022f2d4 <match_unit_removed>:
  22f2d4:	sub	sp, sp, #0x30
  22f2d8:	stp	x29, x30, [sp, #16]
  22f2dc:	stp	x20, x19, [sp, #32]
  22f2e0:	add	x29, sp, #0x10
  22f2e4:	cbz	x0, 22f384 <match_unit_removed+0xb0>
  22f2e8:	mov	x19, x1
  22f2ec:	cbz	x1, 22f3a4 <match_unit_removed+0xd0>
  22f2f0:	adrp	x1, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f2f4:	add	x1, x1, #0xeed
  22f2f8:	mov	x2, sp
  22f2fc:	add	x3, sp, #0x8
  22f300:	bl	240fb0 <sd_bus_message_read@plt>
  22f304:	tbnz	w0, #31, 22f334 <match_unit_removed+0x60>
  22f308:	ldr	x0, [x19, #216]
  22f30c:	ldr	x1, [sp]
  22f310:	bl	2294e0 <hashmap_get>
  22f314:	cbz	x0, 22f31c <match_unit_removed+0x48>
  22f318:	bl	23bc50 <session_add_to_gc_queue>
  22f31c:	ldr	x0, [x19, #224]
  22f320:	ldr	x1, [sp]
  22f324:	bl	2294e0 <hashmap_get>
  22f328:	cbz	x0, 22f370 <match_unit_removed+0x9c>
  22f32c:	bl	23e844 <user_add_to_gc_queue>
  22f330:	b	22f370 <match_unit_removed+0x9c>
  22f334:	mov	w20, w0
  22f338:	mov	w0, wzr
  22f33c:	bl	240750 <log_get_max_level_realm@plt>
  22f340:	cmp	w0, #0x3
  22f344:	b.lt	22f370 <match_unit_removed+0x9c>  // b.tstop
  22f348:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f34c:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22f350:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22f354:	add	x2, x2, #0xe6f
  22f358:	add	x4, x4, #0xb4e
  22f35c:	add	x5, x5, #0xaa7
  22f360:	mov	w0, #0x3                   	// #3
  22f364:	mov	w3, #0xdab                 	// #3499
  22f368:	mov	w1, w20
  22f36c:	bl	240770 <log_internal_realm@plt>
  22f370:	ldp	x20, x19, [sp, #32]
  22f374:	ldp	x29, x30, [sp, #16]
  22f378:	mov	w0, wzr
  22f37c:	add	sp, sp, #0x30
  22f380:	ret
  22f384:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22f388:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f38c:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22f390:	add	x1, x1, #0x30
  22f394:	add	x2, x2, #0xe6f
  22f398:	add	x4, x4, #0xac7
  22f39c:	mov	w3, #0xda6                 	// #3494
  22f3a0:	bl	240790 <log_assert_failed_realm@plt>
  22f3a4:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22f3a8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f3ac:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22f3b0:	add	x1, x1, #0x102
  22f3b4:	add	x2, x2, #0xe6f
  22f3b8:	add	x4, x4, #0xac7
  22f3bc:	mov	w3, #0xda7                 	// #3495
  22f3c0:	mov	w0, wzr
  22f3c4:	bl	240790 <log_assert_failed_realm@plt>

000000000022f3c8 <match_properties_changed>:
  22f3c8:	stp	x29, x30, [sp, #-32]!
  22f3cc:	mov	x29, sp
  22f3d0:	str	x19, [sp, #16]
  22f3d4:	str	xzr, [x29, #24]
  22f3d8:	cbz	x0, 22f460 <match_properties_changed+0x98>
  22f3dc:	mov	x19, x1
  22f3e0:	cbz	x1, 22f480 <match_properties_changed+0xb8>
  22f3e4:	bl	241290 <sd_bus_message_get_path@plt>
  22f3e8:	cbz	x0, 22f448 <match_properties_changed+0x80>
  22f3ec:	add	x1, x29, #0x18
  22f3f0:	bl	2412a0 <unit_name_from_dbus_path@plt>
  22f3f4:	cmn	w0, #0x16
  22f3f8:	b.eq	22f448 <match_properties_changed+0x80>  // b.none
  22f3fc:	tbnz	w0, #31, 22f42c <match_properties_changed+0x64>
  22f400:	ldr	x0, [x19, #216]
  22f404:	ldr	x1, [x29, #24]
  22f408:	bl	2294e0 <hashmap_get>
  22f40c:	cbz	x0, 22f414 <match_properties_changed+0x4c>
  22f410:	bl	23bc50 <session_add_to_gc_queue>
  22f414:	ldr	x0, [x19, #224]
  22f418:	ldr	x1, [x29, #24]
  22f41c:	bl	2294e0 <hashmap_get>
  22f420:	cbz	x0, 22f448 <match_properties_changed+0x80>
  22f424:	bl	23e844 <user_add_to_gc_queue>
  22f428:	b	22f448 <match_properties_changed+0x80>
  22f42c:	adrp	x1, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f430:	adrp	x3, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22f434:	add	x1, x1, #0xe6f
  22f438:	add	x3, x3, #0x7a8
  22f43c:	mov	w2, #0xdcd                 	// #3533
  22f440:	mov	w0, wzr
  22f444:	bl	240af0 <log_oom_internal@plt>
  22f448:	add	x0, x29, #0x18
  22f44c:	bl	229b20 <freep>
  22f450:	ldr	x19, [sp, #16]
  22f454:	mov	w0, wzr
  22f458:	ldp	x29, x30, [sp], #32
  22f45c:	ret
  22f460:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22f464:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f468:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22f46c:	add	x1, x1, #0x30
  22f470:	add	x2, x2, #0xe6f
  22f474:	add	x4, x4, #0xb61
  22f478:	mov	w3, #0xdc2                 	// #3522
  22f47c:	bl	240790 <log_assert_failed_realm@plt>
  22f480:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22f484:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f488:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22f48c:	add	x1, x1, #0x102
  22f490:	add	x2, x2, #0xe6f
  22f494:	add	x4, x4, #0xb61
  22f498:	mov	w3, #0xdc3                 	// #3523
  22f49c:	mov	w0, wzr
  22f4a0:	bl	240790 <log_assert_failed_realm@plt>

000000000022f4a4 <match_reloading>:
  22f4a4:	sub	sp, sp, #0x40
  22f4a8:	stp	x29, x30, [sp, #32]
  22f4ac:	stp	x20, x19, [sp, #48]
  22f4b0:	add	x29, sp, #0x20
  22f4b4:	cbz	x0, 22f590 <match_reloading+0xec>
  22f4b8:	mov	x19, x1
  22f4bc:	cbz	x1, 22f5b0 <match_reloading+0x10c>
  22f4c0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22f4c4:	add	x1, x1, #0xb8c
  22f4c8:	add	x2, sp, #0x4
  22f4cc:	bl	240fb0 <sd_bus_message_read@plt>
  22f4d0:	tbnz	w0, #31, 22f540 <match_reloading+0x9c>
  22f4d4:	ldr	w8, [sp, #4]
  22f4d8:	cbnz	w8, 22f57c <match_reloading+0xd8>
  22f4dc:	mov	w0, wzr
  22f4e0:	bl	240750 <log_get_max_level_realm@plt>
  22f4e4:	cmp	w0, #0x7
  22f4e8:	b.lt	22f514 <match_reloading+0x70>  // b.tstop
  22f4ec:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f4f0:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22f4f4:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  22f4f8:	add	x2, x2, #0xe6f
  22f4fc:	add	x4, x4, #0x124
  22f500:	add	x5, x5, #0x38
  22f504:	mov	w0, #0x7                   	// #7
  22f508:	mov	w3, #0xdef                 	// #3567
  22f50c:	mov	w1, wzr
  22f510:	bl	240770 <log_internal_realm@plt>
  22f514:	mov	w8, #0xfffffffe            	// #-2
  22f518:	str	w8, [sp, #8]
  22f51c:	str	xzr, [sp, #16]
  22f520:	ldr	x0, [x19, #32]
  22f524:	add	x1, sp, #0x8
  22f528:	sub	x2, x29, #0x8
  22f52c:	bl	22f5d4 <hashmap_iterate>
  22f530:	tbz	w0, #0, 22f57c <match_reloading+0xd8>
  22f534:	ldur	x0, [x29, #-8]
  22f538:	bl	23bc50 <session_add_to_gc_queue>
  22f53c:	b	22f520 <match_reloading+0x7c>
  22f540:	mov	w20, w0
  22f544:	mov	w0, wzr
  22f548:	bl	240750 <log_get_max_level_realm@plt>
  22f54c:	cmp	w0, #0x3
  22f550:	b.lt	22f57c <match_reloading+0xd8>  // b.tstop
  22f554:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f558:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22f55c:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22f560:	add	x2, x2, #0xe6f
  22f564:	add	x4, x4, #0x124
  22f568:	add	x5, x5, #0xaa7
  22f56c:	mov	w0, #0x3                   	// #3
  22f570:	mov	w3, #0xde7                 	// #3559
  22f574:	mov	w1, w20
  22f578:	bl	240770 <log_internal_realm@plt>
  22f57c:	ldp	x20, x19, [sp, #48]
  22f580:	ldp	x29, x30, [sp, #32]
  22f584:	mov	w0, wzr
  22f588:	add	sp, sp, #0x40
  22f58c:	ret
  22f590:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22f594:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f598:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22f59c:	add	x1, x1, #0x30
  22f5a0:	add	x2, x2, #0xe6f
  22f5a4:	add	x4, x4, #0x162
  22f5a8:	mov	w3, #0xde2                 	// #3554
  22f5ac:	bl	240790 <log_assert_failed_realm@plt>
  22f5b0:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22f5b4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f5b8:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22f5bc:	add	x1, x1, #0x102
  22f5c0:	add	x2, x2, #0xe6f
  22f5c4:	add	x4, x4, #0x162
  22f5c8:	mov	w3, #0xde3                 	// #3555
  22f5cc:	mov	w0, wzr
  22f5d0:	bl	240790 <log_assert_failed_realm@plt>

000000000022f5d4 <hashmap_iterate>:
  22f5d4:	stp	x29, x30, [sp, #-16]!
  22f5d8:	mov	x3, xzr
  22f5dc:	mov	x29, sp
  22f5e0:	bl	240b00 <internal_hashmap_iterate@plt>
  22f5e4:	and	w0, w0, #0x1
  22f5e8:	ldp	x29, x30, [sp], #16
  22f5ec:	ret

000000000022f5f0 <manager_send_changed>:
  22f5f0:	stp	x29, x30, [sp, #-32]!
  22f5f4:	stp	x20, x19, [sp, #16]
  22f5f8:	mov	x29, sp
  22f5fc:	sub	sp, sp, #0xe0
  22f600:	stp	x2, x3, [x29, #-88]
  22f604:	stp	x4, x5, [x29, #-72]
  22f608:	stp	x6, x7, [x29, #-56]
  22f60c:	stp	q1, q2, [x29, #-208]
  22f610:	stp	q3, q4, [x29, #-176]
  22f614:	stur	q0, [x29, #-224]
  22f618:	stp	q5, q6, [x29, #-144]
  22f61c:	stur	q7, [x29, #-112]
  22f620:	stur	x1, [x29, #-8]
  22f624:	cbz	x0, 22f75c <manager_send_changed+0x16c>
  22f628:	mov	x19, x0
  22f62c:	cbz	x1, 22f730 <manager_send_changed+0x140>
  22f630:	mov	x9, #0xffffffffffffffd0    	// #-48
  22f634:	sub	x8, x29, #0xe0
  22f638:	sub	x11, x29, #0x58
  22f63c:	movk	x9, #0xff80, lsl #32
  22f640:	add	x10, x29, #0x20
  22f644:	mov	w20, #0x8                   	// #8
  22f648:	add	x12, x8, #0x80
  22f64c:	add	x8, x11, #0x30
  22f650:	mov	w1, #0x1                   	// #1
  22f654:	stp	x12, x9, [x29, #-24]
  22f658:	stp	x10, x8, [x29, #-40]
  22f65c:	b	22f67c <manager_send_changed+0x8c>
  22f660:	ldur	x9, [x29, #-40]
  22f664:	add	x10, x9, #0x8
  22f668:	stur	x10, [x29, #-40]
  22f66c:	ldr	x9, [x9]
  22f670:	add	x20, x20, #0x8
  22f674:	add	x1, x1, #0x1
  22f678:	cbz	x9, 22f69c <manager_send_changed+0xac>
  22f67c:	ldursw	x9, [x29, #-16]
  22f680:	tbz	w9, #31, 22f660 <manager_send_changed+0x70>
  22f684:	add	w10, w9, #0x8
  22f688:	cmp	w10, #0x0
  22f68c:	stur	w10, [x29, #-16]
  22f690:	b.gt	22f660 <manager_send_changed+0x70>
  22f694:	add	x9, x8, x9
  22f698:	b	22f66c <manager_send_changed+0x7c>
  22f69c:	mov	w0, #0x8                   	// #8
  22f6a0:	bl	22f7ac <size_multiply_overflow>
  22f6a4:	tbnz	w0, #0, 22f77c <manager_send_changed+0x18c>
  22f6a8:	cmp	x20, #0x400, lsl #12
  22f6ac:	b.hi	22f788 <manager_send_changed+0x198>  // b.pmore
  22f6b0:	add	x9, x20, #0xf
  22f6b4:	mov	x8, sp
  22f6b8:	and	x9, x9, #0xfffffffffffffff0
  22f6bc:	sub	x3, x8, x9
  22f6c0:	mov	sp, x3
  22f6c4:	ldur	x10, [x29, #-8]
  22f6c8:	mov	x8, x3
  22f6cc:	mov	x11, #0xffffffffffffffd0    	// #-48
  22f6d0:	sub	x9, x29, #0xe0
  22f6d4:	sub	x12, x29, #0x58
  22f6d8:	movk	x11, #0xff80, lsl #32
  22f6dc:	add	x13, x29, #0x20
  22f6e0:	add	x14, x9, #0x80
  22f6e4:	add	x9, x12, #0x30
  22f6e8:	str	x10, [x8], #8
  22f6ec:	stp	x14, x11, [x29, #-24]
  22f6f0:	stp	x13, x9, [x29, #-40]
  22f6f4:	b	22f710 <manager_send_changed+0x120>
  22f6f8:	ldur	x10, [x29, #-40]
  22f6fc:	add	x11, x10, #0x8
  22f700:	stur	x11, [x29, #-40]
  22f704:	ldr	x10, [x10]
  22f708:	str	x10, [x8], #8
  22f70c:	cbz	x10, 22f734 <manager_send_changed+0x144>
  22f710:	ldursw	x10, [x29, #-16]
  22f714:	tbz	w10, #31, 22f6f8 <manager_send_changed+0x108>
  22f718:	add	w11, w10, #0x8
  22f71c:	cmp	w11, #0x0
  22f720:	stur	w11, [x29, #-16]
  22f724:	b.gt	22f6f8 <manager_send_changed+0x108>
  22f728:	add	x10, x9, x10
  22f72c:	b	22f704 <manager_send_changed+0x114>
  22f730:	sub	x3, x29, #0x8
  22f734:	ldr	x0, [x19, #8]
  22f738:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22f73c:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  22f740:	add	x1, x1, #0xad4
  22f744:	add	x2, x2, #0xe5d
  22f748:	bl	2412b0 <sd_bus_emit_properties_changed_strv@plt>
  22f74c:	mov	sp, x29
  22f750:	ldp	x20, x19, [sp, #16]
  22f754:	ldp	x29, x30, [sp], #32
  22f758:	ret
  22f75c:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22f760:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f764:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22f768:	add	x1, x1, #0x96a
  22f76c:	add	x2, x2, #0xe6f
  22f770:	add	x4, x4, #0xcaa
  22f774:	mov	w3, #0xdfa                 	// #3578
  22f778:	bl	240790 <log_assert_failed_realm@plt>
  22f77c:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22f780:	add	x1, x1, #0x45e
  22f784:	b	22f790 <manager_send_changed+0x1a0>
  22f788:	adrp	x1, 212000 <inhibit_what_to_string.buffer+0x212000>
  22f78c:	add	x1, x1, #0x6f
  22f790:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22f794:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22f798:	add	x2, x2, #0xe6f
  22f79c:	add	x4, x4, #0xcaa
  22f7a0:	mov	w3, #0xdfc                 	// #3580
  22f7a4:	mov	w0, wzr
  22f7a8:	bl	240790 <log_assert_failed_realm@plt>

000000000022f7ac <size_multiply_overflow>:
  22f7ac:	umulh	x8, x1, x0
  22f7b0:	cmp	xzr, x8
  22f7b4:	cset	w0, ne  // ne = any
  22f7b8:	ret

000000000022f7bc <manager_start_scope>:
  22f7bc:	sub	sp, sp, #0x70
  22f7c0:	stp	x29, x30, [sp, #16]
  22f7c4:	stp	x28, x27, [sp, #32]
  22f7c8:	stp	x26, x25, [sp, #48]
  22f7cc:	stp	x24, x23, [sp, #64]
  22f7d0:	stp	x22, x21, [sp, #80]
  22f7d4:	stp	x20, x19, [sp, #96]
  22f7d8:	add	x29, sp, #0x10
  22f7dc:	stp	xzr, xzr, [sp]
  22f7e0:	cbz	x0, 22fb2c <manager_start_scope+0x370>
  22f7e4:	mov	x28, x1
  22f7e8:	cbz	x1, 22fb4c <manager_start_scope+0x390>
  22f7ec:	mov	w21, w2
  22f7f0:	cmp	w2, #0x1
  22f7f4:	b.le	22fb70 <manager_start_scope+0x3b4>
  22f7f8:	ldr	x19, [x29, #112]
  22f7fc:	cbz	x19, 22fb94 <manager_start_scope+0x3d8>
  22f800:	mov	x20, x0
  22f804:	ldr	x0, [x0, #8]
  22f808:	mov	x24, x5
  22f80c:	mov	x25, x4
  22f810:	mov	x27, x3
  22f814:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  22f818:	adrp	x3, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22f81c:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22f820:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22f824:	add	x2, x2, #0x5eb
  22f828:	add	x3, x3, #0xee7
  22f82c:	add	x4, x4, #0x2ef
  22f830:	add	x5, x5, #0x7c1
  22f834:	add	x1, sp, #0x8
  22f838:	mov	x22, x7
  22f83c:	mov	x23, x6
  22f840:	bl	2412c0 <sd_bus_message_new_method_call@plt>
  22f844:	tbnz	w0, #31, 22fae4 <manager_start_scope+0x328>
  22f848:	ldr	x26, [sp, #8]
  22f84c:	mov	x0, x28
  22f850:	bl	22fbd4 <strempty>
  22f854:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22f858:	adrp	x3, 208000 <inhibit_what_to_string.buffer+0x208000>
  22f85c:	mov	x2, x0
  22f860:	add	x1, x1, #0xf7b
  22f864:	add	x3, x3, #0xac3
  22f868:	mov	x0, x26
  22f86c:	bl	240ff0 <sd_bus_message_append@plt>
  22f870:	tbnz	w0, #31, 22fae4 <manager_start_scope+0x328>
  22f874:	ldr	x0, [sp, #8]
  22f878:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22f87c:	add	x2, x2, #0x6c8
  22f880:	mov	w1, #0x61                  	// #97
  22f884:	bl	241070 <sd_bus_message_open_container@plt>
  22f888:	tbnz	w0, #31, 22fae4 <manager_start_scope+0x328>
  22f88c:	mov	x0, x27
  22f890:	bl	22fbe8 <isempty>
  22f894:	tbnz	w0, #0, 22f8c0 <manager_start_scope+0x104>
  22f898:	ldr	x0, [sp, #8]
  22f89c:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22f8a0:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22f8a4:	adrp	x3, 209000 <inhibit_what_to_string.buffer+0x209000>
  22f8a8:	add	x1, x1, #0x6c8
  22f8ac:	add	x2, x2, #0x10
  22f8b0:	add	x3, x3, #0x6de
  22f8b4:	mov	x4, x27
  22f8b8:	bl	240ff0 <sd_bus_message_append@plt>
  22f8bc:	tbnz	w0, #31, 22fae4 <manager_start_scope+0x328>
  22f8c0:	mov	x0, x25
  22f8c4:	bl	22fbe8 <isempty>
  22f8c8:	tbnz	w0, #0, 22f8f4 <manager_start_scope+0x138>
  22f8cc:	ldr	x0, [sp, #8]
  22f8d0:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22f8d4:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  22f8d8:	adrp	x3, 209000 <inhibit_what_to_string.buffer+0x209000>
  22f8dc:	add	x1, x1, #0x6c8
  22f8e0:	add	x2, x2, #0x71
  22f8e4:	add	x3, x3, #0x6de
  22f8e8:	mov	x4, x25
  22f8ec:	bl	240ff0 <sd_bus_message_append@plt>
  22f8f0:	tbnz	w0, #31, 22fae4 <manager_start_scope+0x328>
  22f8f4:	cbz	x24, 22f940 <manager_start_scope+0x184>
  22f8f8:	ldr	x5, [x24]
  22f8fc:	cbz	x5, 22f940 <manager_start_scope+0x184>
  22f900:	add	x28, x24, #0x8
  22f904:	adrp	x24, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22f908:	adrp	x25, 210000 <inhibit_what_to_string.buffer+0x210000>
  22f90c:	adrp	x27, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22f910:	add	x24, x24, #0x6c8
  22f914:	add	x25, x25, #0xb95
  22f918:	add	x27, x27, #0x15c
  22f91c:	ldr	x0, [sp, #8]
  22f920:	mov	w4, #0x1                   	// #1
  22f924:	mov	x1, x24
  22f928:	mov	x2, x25
  22f92c:	mov	x3, x27
  22f930:	bl	240ff0 <sd_bus_message_append@plt>
  22f934:	tbnz	w0, #31, 22fae4 <manager_start_scope+0x328>
  22f938:	ldr	x5, [x28], #8
  22f93c:	cbnz	x5, 22f91c <manager_start_scope+0x160>
  22f940:	cbz	x23, 22f98c <manager_start_scope+0x1d0>
  22f944:	ldr	x5, [x23]
  22f948:	cbz	x5, 22f98c <manager_start_scope+0x1d0>
  22f94c:	add	x27, x23, #0x8
  22f950:	adrp	x23, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22f954:	adrp	x24, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22f958:	adrp	x25, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22f95c:	add	x23, x23, #0x6c8
  22f960:	add	x24, x24, #0x134
  22f964:	add	x25, x25, #0x15c
  22f968:	ldr	x0, [sp, #8]
  22f96c:	mov	w4, #0x1                   	// #1
  22f970:	mov	x1, x23
  22f974:	mov	x2, x24
  22f978:	mov	x3, x25
  22f97c:	bl	240ff0 <sd_bus_message_append@plt>
  22f980:	tbnz	w0, #31, 22fae4 <manager_start_scope+0x328>
  22f984:	ldr	x5, [x27], #8
  22f988:	cbnz	x5, 22f968 <manager_start_scope+0x1ac>
  22f98c:	mov	x0, x22
  22f990:	bl	2412d0 <empty_or_root@plt>
  22f994:	tbnz	w0, #0, 22f9c4 <manager_start_scope+0x208>
  22f998:	ldr	x0, [sp, #8]
  22f99c:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22f9a0:	adrp	x2, 212000 <inhibit_what_to_string.buffer+0x212000>
  22f9a4:	adrp	x3, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  22f9a8:	add	x1, x1, #0x6c8
  22f9ac:	add	x2, x2, #0x8f
  22f9b0:	add	x3, x3, #0x15c
  22f9b4:	mov	w4, #0x1                   	// #1
  22f9b8:	mov	x5, x22
  22f9bc:	bl	240ff0 <sd_bus_message_append@plt>
  22f9c0:	tbnz	w0, #31, 22fae4 <manager_start_scope+0x328>
  22f9c4:	ldr	x0, [sp, #8]
  22f9c8:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22f9cc:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22f9d0:	adrp	x3, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22f9d4:	add	x1, x1, #0x6c8
  22f9d8:	add	x2, x2, #0xb9b
  22f9dc:	add	x3, x3, #0xb8c
  22f9e0:	mov	w4, #0x1                   	// #1
  22f9e4:	bl	240ff0 <sd_bus_message_append@plt>
  22f9e8:	tbnz	w0, #31, 22fae4 <manager_start_scope+0x328>
  22f9ec:	ldr	x0, [sp, #8]
  22f9f0:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22f9f4:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22f9f8:	adrp	x3, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22f9fc:	add	x1, x1, #0x6c8
  22fa00:	add	x2, x2, #0xb3b
  22fa04:	add	x3, x3, #0x13a
  22fa08:	mov	w4, #0x1                   	// #1
  22fa0c:	mov	w5, w21
  22fa10:	bl	240ff0 <sd_bus_message_append@plt>
  22fa14:	tbnz	w0, #31, 22fae4 <manager_start_scope+0x328>
  22fa18:	ldr	x0, [sp, #8]
  22fa1c:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22fa20:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  22fa24:	adrp	x3, 207000 <inhibit_what_to_string.buffer+0x207000>
  22fa28:	add	x1, x1, #0x6c8
  22fa2c:	add	x2, x2, #0x621
  22fa30:	add	x3, x3, #0xfe8
  22fa34:	mov	x4, #0xffffffffffffffff    	// #-1
  22fa38:	bl	240ff0 <sd_bus_message_append@plt>
  22fa3c:	tbnz	w0, #31, 22faa8 <manager_start_scope+0x2ec>
  22fa40:	ldr	x1, [x29, #96]
  22fa44:	cbz	x1, 22fa58 <manager_start_scope+0x29c>
  22fa48:	ldr	x0, [sp, #8]
  22fa4c:	mov	w2, #0x1                   	// #1
  22fa50:	bl	2412e0 <sd_bus_message_copy@plt>
  22fa54:	tbnz	w0, #31, 22fae4 <manager_start_scope+0x328>
  22fa58:	ldr	x0, [sp, #8]
  22fa5c:	bl	241080 <sd_bus_message_close_container@plt>
  22fa60:	tbnz	w0, #31, 22fae4 <manager_start_scope+0x328>
  22fa64:	ldr	x0, [sp, #8]
  22fa68:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22fa6c:	add	x1, x1, #0x82a
  22fa70:	mov	w2, wzr
  22fa74:	bl	240ff0 <sd_bus_message_append@plt>
  22fa78:	tbnz	w0, #31, 22fae4 <manager_start_scope+0x328>
  22fa7c:	ldr	x3, [x29, #104]
  22fa80:	ldr	x0, [x20, #8]
  22fa84:	ldr	x1, [sp, #8]
  22fa88:	mov	x4, sp
  22fa8c:	mov	x2, xzr
  22fa90:	bl	2412f0 <sd_bus_call@plt>
  22fa94:	tbnz	w0, #31, 22fae4 <manager_start_scope+0x328>
  22fa98:	ldr	x0, [sp]
  22fa9c:	mov	x1, x19
  22faa0:	bl	22fc04 <strdup_job>
  22faa4:	b	22fae4 <manager_start_scope+0x328>
  22faa8:	mov	w21, w0
  22faac:	mov	w0, wzr
  22fab0:	bl	240750 <log_get_max_level_realm@plt>
  22fab4:	cmp	w0, #0x3
  22fab8:	b.lt	22fb1c <manager_start_scope+0x360>  // b.tstop
  22fabc:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22fac0:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22fac4:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22fac8:	add	x2, x2, #0xe6f
  22facc:	add	x4, x4, #0x439
  22fad0:	add	x5, x5, #0xb40
  22fad4:	mov	w0, #0x3                   	// #3
  22fad8:	mov	w3, #0xe69                 	// #3689
  22fadc:	mov	w1, w21
  22fae0:	bl	240770 <log_internal_realm@plt>
  22fae4:	mov	w26, w0
  22fae8:	mov	x0, sp
  22faec:	bl	22fbb8 <sd_bus_message_unrefp>
  22faf0:	add	x0, sp, #0x8
  22faf4:	bl	22fbb8 <sd_bus_message_unrefp>
  22faf8:	mov	w0, w26
  22fafc:	ldp	x20, x19, [sp, #96]
  22fb00:	ldp	x22, x21, [sp, #80]
  22fb04:	ldp	x24, x23, [sp, #64]
  22fb08:	ldp	x26, x25, [sp, #48]
  22fb0c:	ldp	x28, x27, [sp, #32]
  22fb10:	ldp	x29, x30, [sp, #16]
  22fb14:	add	sp, sp, #0x70
  22fb18:	ret
  22fb1c:	mov	w8, wzr
  22fb20:	neg	w9, w21
  22fb24:	sub	w26, w8, w9, uxtb
  22fb28:	b	22fae8 <manager_start_scope+0x32c>
  22fb2c:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22fb30:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22fb34:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22fb38:	add	x1, x1, #0x96a
  22fb3c:	add	x2, x2, #0xe6f
  22fb40:	add	x4, x4, #0xf71
  22fb44:	mov	w3, #0xe27                 	// #3623
  22fb48:	bl	240790 <log_assert_failed_realm@plt>
  22fb4c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22fb50:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22fb54:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22fb58:	add	x1, x1, #0x1a0
  22fb5c:	add	x2, x2, #0xe6f
  22fb60:	add	x4, x4, #0xf71
  22fb64:	mov	w3, #0xe28                 	// #3624
  22fb68:	mov	w0, wzr
  22fb6c:	bl	240790 <log_assert_failed_realm@plt>
  22fb70:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  22fb74:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22fb78:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22fb7c:	add	x1, x1, #0x619
  22fb80:	add	x2, x2, #0xe6f
  22fb84:	add	x4, x4, #0xf71
  22fb88:	mov	w3, #0xe29                 	// #3625
  22fb8c:	mov	w0, wzr
  22fb90:	bl	240790 <log_assert_failed_realm@plt>
  22fb94:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22fb98:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22fb9c:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22fba0:	add	x1, x1, #0xd6b
  22fba4:	add	x2, x2, #0xe6f
  22fba8:	add	x4, x4, #0xf71
  22fbac:	mov	w3, #0xe2a                 	// #3626
  22fbb0:	mov	w0, wzr
  22fbb4:	bl	240790 <log_assert_failed_realm@plt>

000000000022fbb8 <sd_bus_message_unrefp>:
  22fbb8:	stp	x29, x30, [sp, #-16]!
  22fbbc:	ldr	x0, [x0]
  22fbc0:	mov	x29, sp
  22fbc4:	cbz	x0, 22fbcc <sd_bus_message_unrefp+0x14>
  22fbc8:	bl	241300 <sd_bus_message_unref@plt>
  22fbcc:	ldp	x29, x30, [sp], #16
  22fbd0:	ret

000000000022fbd4 <strempty>:
  22fbd4:	adrp	x8, 210000 <inhibit_what_to_string.buffer+0x210000>
  22fbd8:	add	x8, x8, #0xb7e
  22fbdc:	cmp	x0, #0x0
  22fbe0:	csel	x0, x8, x0, eq  // eq = none
  22fbe4:	ret

000000000022fbe8 <isempty>:
  22fbe8:	cbz	x0, 22fbfc <isempty+0x14>
  22fbec:	ldrb	w8, [x0]
  22fbf0:	cmp	w8, #0x0
  22fbf4:	cset	w0, eq  // eq = none
  22fbf8:	ret
  22fbfc:	mov	w0, #0x1                   	// #1
  22fc00:	ret

000000000022fc04 <strdup_job>:
  22fc04:	stp	x29, x30, [sp, #-32]!
  22fc08:	str	x19, [sp, #16]
  22fc0c:	mov	x29, sp
  22fc10:	mov	x19, x1
  22fc14:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22fc18:	add	x1, x1, #0x293
  22fc1c:	add	x2, x29, #0x18
  22fc20:	bl	240fb0 <sd_bus_message_read@plt>
  22fc24:	tbnz	w0, #31, 22fc44 <strdup_job+0x40>
  22fc28:	ldr	x0, [x29, #24]
  22fc2c:	bl	240c40 <strdup@plt>
  22fc30:	cbz	x0, 22fc40 <strdup_job+0x3c>
  22fc34:	str	x0, [x19]
  22fc38:	mov	w0, #0x1                   	// #1
  22fc3c:	b	22fc44 <strdup_job+0x40>
  22fc40:	mov	w0, #0xfffffff4            	// #-12
  22fc44:	ldr	x19, [sp, #16]
  22fc48:	ldp	x29, x30, [sp], #32
  22fc4c:	ret

000000000022fc50 <manager_start_unit>:
  22fc50:	sub	sp, sp, #0x40
  22fc54:	stp	x29, x30, [sp, #32]
  22fc58:	add	x29, sp, #0x20
  22fc5c:	stp	x20, x19, [sp, #48]
  22fc60:	stur	xzr, [x29, #-8]
  22fc64:	cbz	x0, 22fcec <manager_start_unit+0x9c>
  22fc68:	cbz	x1, 22fd0c <manager_start_unit+0xbc>
  22fc6c:	mov	x19, x3
  22fc70:	cbz	x3, 22fd30 <manager_start_unit+0xe0>
  22fc74:	ldr	x0, [x0, #8]
  22fc78:	adrp	x9, 209000 <inhibit_what_to_string.buffer+0x209000>
  22fc7c:	adrp	x8, 209000 <inhibit_what_to_string.buffer+0x209000>
  22fc80:	mov	x5, x2
  22fc84:	add	x9, x9, #0xd6f
  22fc88:	add	x8, x8, #0x5eb
  22fc8c:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22fc90:	adrp	x3, 208000 <inhibit_what_to_string.buffer+0x208000>
  22fc94:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22fc98:	adrp	x7, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22fc9c:	add	x2, x2, #0xee7
  22fca0:	add	x3, x3, #0x2ef
  22fca4:	add	x4, x4, #0x24f
  22fca8:	add	x7, x7, #0xf7b
  22fcac:	sub	x6, x29, #0x8
  22fcb0:	stp	x1, x9, [sp]
  22fcb4:	mov	x1, x8
  22fcb8:	bl	240e50 <sd_bus_call_method@plt>
  22fcbc:	tbnz	w0, #31, 22fccc <manager_start_unit+0x7c>
  22fcc0:	ldur	x0, [x29, #-8]
  22fcc4:	mov	x1, x19
  22fcc8:	bl	22fc04 <strdup_job>
  22fccc:	mov	w20, w0
  22fcd0:	sub	x0, x29, #0x8
  22fcd4:	bl	22fbb8 <sd_bus_message_unrefp>
  22fcd8:	mov	w0, w20
  22fcdc:	ldp	x20, x19, [sp, #48]
  22fce0:	ldp	x29, x30, [sp, #32]
  22fce4:	add	sp, sp, #0x40
  22fce8:	ret
  22fcec:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22fcf0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22fcf4:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22fcf8:	add	x1, x1, #0x96a
  22fcfc:	add	x2, x2, #0xe6f
  22fd00:	add	x4, x4, #0x16
  22fd04:	mov	w3, #0xe85                 	// #3717
  22fd08:	bl	240790 <log_assert_failed_realm@plt>
  22fd0c:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  22fd10:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22fd14:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22fd18:	add	x1, x1, #0x649
  22fd1c:	add	x2, x2, #0xe6f
  22fd20:	add	x4, x4, #0x16
  22fd24:	mov	w3, #0xe86                 	// #3718
  22fd28:	mov	w0, wzr
  22fd2c:	bl	240790 <log_assert_failed_realm@plt>
  22fd30:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22fd34:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22fd38:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  22fd3c:	add	x1, x1, #0xd6b
  22fd40:	add	x2, x2, #0xe6f
  22fd44:	add	x4, x4, #0x16
  22fd48:	mov	w3, #0xe87                 	// #3719
  22fd4c:	mov	w0, wzr
  22fd50:	bl	240790 <log_assert_failed_realm@plt>

000000000022fd54 <manager_stop_unit>:
  22fd54:	sub	sp, sp, #0x40
  22fd58:	stp	x29, x30, [sp, #16]
  22fd5c:	add	x29, sp, #0x10
  22fd60:	str	x21, [sp, #32]
  22fd64:	stp	x20, x19, [sp, #48]
  22fd68:	str	xzr, [x29, #24]
  22fd6c:	cbz	x0, 22fe3c <manager_stop_unit+0xe8>
  22fd70:	cbz	x1, 22fe5c <manager_stop_unit+0x108>
  22fd74:	mov	x19, x3
  22fd78:	cbz	x3, 22fe80 <manager_stop_unit+0x12c>
  22fd7c:	ldr	x0, [x0, #8]
  22fd80:	adrp	x9, 208000 <inhibit_what_to_string.buffer+0x208000>
  22fd84:	adrp	x8, 209000 <inhibit_what_to_string.buffer+0x209000>
  22fd88:	mov	x20, x2
  22fd8c:	add	x9, x9, #0xac3
  22fd90:	add	x8, x8, #0x5eb
  22fd94:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22fd98:	adrp	x3, 208000 <inhibit_what_to_string.buffer+0x208000>
  22fd9c:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22fda0:	adrp	x7, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22fda4:	add	x2, x2, #0xee7
  22fda8:	add	x3, x3, #0x2ef
  22fdac:	add	x4, x4, #0xba8
  22fdb0:	add	x7, x7, #0xf7b
  22fdb4:	add	x6, x29, #0x18
  22fdb8:	stp	x1, x9, [sp]
  22fdbc:	mov	x1, x8
  22fdc0:	mov	x5, x20
  22fdc4:	bl	240e50 <sd_bus_call_method@plt>
  22fdc8:	tbnz	w0, #31, 22fde0 <manager_stop_unit+0x8c>
  22fdcc:	ldr	x0, [x29, #24]
  22fdd0:	mov	x1, x19
  22fdd4:	bl	22fc04 <strdup_job>
  22fdd8:	mov	w21, w0
  22fddc:	b	22fe1c <manager_stop_unit+0xc8>
  22fde0:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22fde4:	mov	w21, w0
  22fde8:	add	x1, x1, #0x393
  22fdec:	mov	x0, x20
  22fdf0:	bl	241310 <sd_bus_error_has_name@plt>
  22fdf4:	cbnz	w0, 22fe0c <manager_stop_unit+0xb8>
  22fdf8:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22fdfc:	add	x1, x1, #0xbb1
  22fe00:	mov	x0, x20
  22fe04:	bl	241310 <sd_bus_error_has_name@plt>
  22fe08:	cbz	w0, 22fe1c <manager_stop_unit+0xc8>
  22fe0c:	mov	x0, x20
  22fe10:	str	xzr, [x19]
  22fe14:	bl	240c80 <sd_bus_error_free@plt>
  22fe18:	mov	w21, wzr
  22fe1c:	add	x0, x29, #0x18
  22fe20:	bl	22fbb8 <sd_bus_message_unrefp>
  22fe24:	mov	w0, w21
  22fe28:	ldp	x20, x19, [sp, #48]
  22fe2c:	ldr	x21, [sp, #32]
  22fe30:	ldp	x29, x30, [sp, #16]
  22fe34:	add	sp, sp, #0x40
  22fe38:	ret
  22fe3c:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22fe40:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22fe44:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22fe48:	add	x1, x1, #0x96a
  22fe4c:	add	x2, x2, #0xe6f
  22fe50:	add	x4, x4, #0x44d
  22fe54:	mov	w3, #0xe9c                 	// #3740
  22fe58:	bl	240790 <log_assert_failed_realm@plt>
  22fe5c:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  22fe60:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22fe64:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22fe68:	add	x1, x1, #0x649
  22fe6c:	add	x2, x2, #0xe6f
  22fe70:	add	x4, x4, #0x44d
  22fe74:	mov	w3, #0xe9d                 	// #3741
  22fe78:	mov	w0, wzr
  22fe7c:	bl	240790 <log_assert_failed_realm@plt>
  22fe80:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22fe84:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22fe88:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  22fe8c:	add	x1, x1, #0xd6b
  22fe90:	add	x2, x2, #0xe6f
  22fe94:	add	x4, x4, #0x44d
  22fe98:	mov	w3, #0xe9e                 	// #3742
  22fe9c:	mov	w0, wzr
  22fea0:	bl	240790 <log_assert_failed_realm@plt>

000000000022fea4 <manager_abandon_scope>:
  22fea4:	sub	sp, sp, #0x40
  22fea8:	stp	x29, x30, [sp, #32]
  22feac:	stp	x20, x19, [sp, #48]
  22feb0:	add	x29, sp, #0x20
  22feb4:	stp	xzr, xzr, [sp, #8]
  22feb8:	str	xzr, [sp, #24]
  22febc:	str	xzr, [sp]
  22fec0:	cbz	x0, 22ff9c <manager_abandon_scope+0xf8>
  22fec4:	cbz	x1, 22ffbc <manager_abandon_scope+0x118>
  22fec8:	mov	x20, x0
  22fecc:	mov	x0, x1
  22fed0:	mov	x19, x2
  22fed4:	bl	241320 <unit_dbus_path_from_name@plt>
  22fed8:	str	x0, [sp]
  22fedc:	cbz	x0, 22ff1c <manager_abandon_scope+0x78>
  22fee0:	mov	x2, x0
  22fee4:	ldr	x0, [x20, #8]
  22fee8:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22feec:	adrp	x3, 207000 <inhibit_what_to_string.buffer+0x207000>
  22fef0:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  22fef4:	add	x1, x1, #0x5eb
  22fef8:	add	x3, x3, #0xb2f
  22fefc:	add	x4, x4, #0xb08
  22ff00:	add	x5, sp, #0x8
  22ff04:	mov	x6, xzr
  22ff08:	mov	x7, xzr
  22ff0c:	bl	240e50 <sd_bus_call_method@plt>
  22ff10:	tbnz	w0, #31, 22ff24 <manager_abandon_scope+0x80>
  22ff14:	mov	w20, #0x1                   	// #1
  22ff18:	b	22ff68 <manager_abandon_scope+0xc4>
  22ff1c:	mov	w20, #0xfffffff4            	// #-12
  22ff20:	b	22ff68 <manager_abandon_scope+0xc4>
  22ff24:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22ff28:	mov	w20, w0
  22ff2c:	add	x1, x1, #0x393
  22ff30:	add	x0, sp, #0x8
  22ff34:	bl	241310 <sd_bus_error_has_name@plt>
  22ff38:	cbnz	w0, 22ff64 <manager_abandon_scope+0xc0>
  22ff3c:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  22ff40:	add	x1, x1, #0xbb1
  22ff44:	add	x0, sp, #0x8
  22ff48:	bl	241310 <sd_bus_error_has_name@plt>
  22ff4c:	cbnz	w0, 22ff64 <manager_abandon_scope+0xc0>
  22ff50:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  22ff54:	add	x1, x1, #0xd77
  22ff58:	add	x0, sp, #0x8
  22ff5c:	bl	241310 <sd_bus_error_has_name@plt>
  22ff60:	cbz	w0, 22ff8c <manager_abandon_scope+0xe8>
  22ff64:	mov	w20, wzr
  22ff68:	mov	x0, sp
  22ff6c:	bl	229b20 <freep>
  22ff70:	add	x0, sp, #0x8
  22ff74:	bl	240c80 <sd_bus_error_free@plt>
  22ff78:	mov	w0, w20
  22ff7c:	ldp	x20, x19, [sp, #48]
  22ff80:	ldp	x29, x30, [sp, #32]
  22ff84:	add	sp, sp, #0x40
  22ff88:	ret
  22ff8c:	add	x1, sp, #0x8
  22ff90:	mov	x0, x19
  22ff94:	bl	241330 <sd_bus_error_move@plt>
  22ff98:	b	22ff68 <manager_abandon_scope+0xc4>
  22ff9c:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  22ffa0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ffa4:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  22ffa8:	add	x1, x1, #0x96a
  22ffac:	add	x2, x2, #0xe6f
  22ffb0:	add	x4, x4, #0x64e
  22ffb4:	mov	w3, #0xebd                 	// #3773
  22ffb8:	bl	240790 <log_assert_failed_realm@plt>
  22ffbc:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22ffc0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  22ffc4:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  22ffc8:	add	x1, x1, #0x1a0
  22ffcc:	add	x2, x2, #0xe6f
  22ffd0:	add	x4, x4, #0x64e
  22ffd4:	mov	w3, #0xebe                 	// #3774
  22ffd8:	mov	w0, wzr
  22ffdc:	bl	240790 <log_assert_failed_realm@plt>

000000000022ffe0 <manager_kill_unit>:
  22ffe0:	sub	sp, sp, #0x30
  22ffe4:	stp	x29, x30, [sp, #32]
  22ffe8:	add	x29, sp, #0x20
  22ffec:	cbz	x0, 23005c <manager_kill_unit+0x7c>
  22fff0:	cbz	x1, 23007c <manager_kill_unit+0x9c>
  22fff4:	adrp	x8, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  22fff8:	adrp	x9, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  22fffc:	ldr	x0, [x0, #8]
  230000:	add	x8, x8, #0xb61
  230004:	add	x9, x9, #0x7d4
  230008:	cmp	w2, #0x0
  23000c:	csel	x9, x9, x8, eq  // eq = none
  230010:	adrp	x8, 209000 <inhibit_what_to_string.buffer+0x209000>
  230014:	mov	x5, x4
  230018:	str	w3, [sp, #16]
  23001c:	add	x8, x8, #0x5eb
  230020:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  230024:	adrp	x3, 208000 <inhibit_what_to_string.buffer+0x208000>
  230028:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  23002c:	adrp	x7, 209000 <inhibit_what_to_string.buffer+0x209000>
  230030:	add	x2, x2, #0xee7
  230034:	add	x3, x3, #0x2ef
  230038:	add	x4, x4, #0xb4e
  23003c:	add	x7, x7, #0xd50
  230040:	stp	x1, x9, [sp]
  230044:	mov	x1, x8
  230048:	mov	x6, xzr
  23004c:	bl	240e50 <sd_bus_call_method@plt>
  230050:	ldp	x29, x30, [sp, #32]
  230054:	add	sp, sp, #0x30
  230058:	ret
  23005c:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  230060:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  230064:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  230068:	add	x1, x1, #0x96a
  23006c:	add	x2, x2, #0xe6f
  230070:	add	x4, x4, #0x13d
  230074:	mov	w3, #0xedb                 	// #3803
  230078:	bl	240790 <log_assert_failed_realm@plt>
  23007c:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  230080:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  230084:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  230088:	add	x1, x1, #0x649
  23008c:	add	x2, x2, #0xe6f
  230090:	add	x4, x4, #0x13d
  230094:	mov	w3, #0xedc                 	// #3804
  230098:	mov	w0, wzr
  23009c:	bl	240790 <log_assert_failed_realm@plt>

00000000002300a0 <manager_unit_is_active>:
  2300a0:	sub	sp, sp, #0x70
  2300a4:	stp	x29, x30, [sp, #80]
  2300a8:	add	x29, sp, #0x50
  2300ac:	stp	x20, x19, [sp, #96]
  2300b0:	stp	xzr, xzr, [x29, #-24]
  2300b4:	stur	xzr, [x29, #-8]
  2300b8:	stur	xzr, [x29, #-32]
  2300bc:	str	xzr, [sp, #40]
  2300c0:	cbz	x0, 23020c <manager_unit_is_active+0x16c>
  2300c4:	cbz	x1, 23022c <manager_unit_is_active+0x18c>
  2300c8:	mov	x19, x0
  2300cc:	mov	x0, x1
  2300d0:	mov	x20, x2
  2300d4:	bl	241320 <unit_dbus_path_from_name@plt>
  2300d8:	str	x0, [sp, #40]
  2300dc:	cbz	x0, 230160 <manager_unit_is_active+0xc0>
  2300e0:	mov	x2, x0
  2300e4:	ldr	x0, [x19, #8]
  2300e8:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2300ec:	adrp	x3, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2300f0:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  2300f4:	adrp	x7, 209000 <inhibit_what_to_string.buffer+0x209000>
  2300f8:	add	x1, x1, #0x5eb
  2300fc:	add	x3, x3, #0xb10
  230100:	add	x4, x4, #0x49d
  230104:	add	x7, x7, #0x6de
  230108:	sub	x5, x29, #0x18
  23010c:	sub	x6, x29, #0x20
  230110:	bl	241340 <sd_bus_get_property@plt>
  230114:	tbnz	w0, #31, 230168 <manager_unit_is_active+0xc8>
  230118:	ldur	x0, [x29, #-32]
  23011c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  230120:	add	x1, x1, #0x6de
  230124:	add	x2, sp, #0x20
  230128:	bl	240fb0 <sd_bus_message_read@plt>
  23012c:	tbnz	w0, #31, 23019c <manager_unit_is_active+0xfc>
  230130:	adrp	x8, 253000 <manager_vtable+0xdb0>
  230134:	add	x8, x8, #0x868
  230138:	ldr	q0, [x8]
  23013c:	ldr	x8, [x8, #16]
  230140:	ldr	x1, [sp, #32]
  230144:	mov	x0, sp
  230148:	str	q0, [sp]
  23014c:	str	x8, [sp, #16]
  230150:	bl	240e30 <strv_find@plt>
  230154:	cmp	x0, #0x0
  230158:	cset	w19, eq  // eq = none
  23015c:	b	2301a0 <manager_unit_is_active+0x100>
  230160:	mov	w19, #0xfffffff4            	// #-12
  230164:	b	2301a0 <manager_unit_is_active+0x100>
  230168:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23016c:	mov	w19, w0
  230170:	add	x1, x1, #0xd25
  230174:	sub	x0, x29, #0x18
  230178:	bl	241310 <sd_bus_error_has_name@plt>
  23017c:	cbnz	w0, 230194 <manager_unit_is_active+0xf4>
  230180:	adrp	x1, 206000 <inhibit_what_to_string.buffer+0x206000>
  230184:	add	x1, x1, #0xef0
  230188:	sub	x0, x29, #0x18
  23018c:	bl	241310 <sd_bus_error_has_name@plt>
  230190:	cbz	w0, 2301cc <manager_unit_is_active+0x12c>
  230194:	mov	w19, #0x1                   	// #1
  230198:	b	2301a0 <manager_unit_is_active+0x100>
  23019c:	mov	w19, w0
  2301a0:	add	x0, sp, #0x28
  2301a4:	bl	229b20 <freep>
  2301a8:	sub	x0, x29, #0x20
  2301ac:	bl	22fbb8 <sd_bus_message_unrefp>
  2301b0:	sub	x0, x29, #0x18
  2301b4:	bl	240c80 <sd_bus_error_free@plt>
  2301b8:	mov	w0, w19
  2301bc:	ldp	x20, x19, [sp, #96]
  2301c0:	ldp	x29, x30, [sp, #80]
  2301c4:	add	sp, sp, #0x70
  2301c8:	ret
  2301cc:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2301d0:	add	x1, x1, #0x393
  2301d4:	sub	x0, x29, #0x18
  2301d8:	bl	241310 <sd_bus_error_has_name@plt>
  2301dc:	cbnz	w0, 2301f4 <manager_unit_is_active+0x154>
  2301e0:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2301e4:	add	x1, x1, #0xbb1
  2301e8:	sub	x0, x29, #0x18
  2301ec:	bl	241310 <sd_bus_error_has_name@plt>
  2301f0:	cbz	w0, 2301fc <manager_unit_is_active+0x15c>
  2301f4:	mov	w19, wzr
  2301f8:	b	2301a0 <manager_unit_is_active+0x100>
  2301fc:	sub	x1, x29, #0x18
  230200:	mov	x0, x20
  230204:	bl	241330 <sd_bus_error_move@plt>
  230208:	b	2301a0 <manager_unit_is_active+0x100>
  23020c:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  230210:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  230214:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  230218:	add	x1, x1, #0x96a
  23021c:	add	x2, x2, #0xe6f
  230220:	add	x4, x4, #0xce1
  230224:	mov	w3, #0xef0                 	// #3824
  230228:	bl	240790 <log_assert_failed_realm@plt>
  23022c:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  230230:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  230234:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  230238:	add	x1, x1, #0x649
  23023c:	add	x2, x2, #0xe6f
  230240:	add	x4, x4, #0xce1
  230244:	mov	w3, #0xef1                 	// #3825
  230248:	mov	w0, wzr
  23024c:	bl	240790 <log_assert_failed_realm@plt>

0000000000230250 <manager_job_is_active>:
  230250:	sub	sp, sp, #0x40
  230254:	stp	x29, x30, [sp, #32]
  230258:	stp	x20, x19, [sp, #48]
  23025c:	add	x29, sp, #0x20
  230260:	stp	xzr, xzr, [sp, #8]
  230264:	str	xzr, [sp, #24]
  230268:	str	xzr, [sp]
  23026c:	cbz	x0, 230330 <manager_job_is_active+0xe0>
  230270:	mov	x19, x2
  230274:	mov	x2, x1
  230278:	cbz	x1, 230350 <manager_job_is_active+0x100>
  23027c:	ldr	x0, [x0, #8]
  230280:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  230284:	adrp	x3, 207000 <inhibit_what_to_string.buffer+0x207000>
  230288:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  23028c:	adrp	x7, 209000 <inhibit_what_to_string.buffer+0x209000>
  230290:	add	x1, x1, #0x5eb
  230294:	add	x3, x3, #0xb57
  230298:	add	x4, x4, #0xc60
  23029c:	add	x7, x7, #0x6de
  2302a0:	add	x5, sp, #0x8
  2302a4:	mov	x6, sp
  2302a8:	bl	241340 <sd_bus_get_property@plt>
  2302ac:	tbz	w0, #31, 2302dc <manager_job_is_active+0x8c>
  2302b0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2302b4:	mov	w20, w0
  2302b8:	add	x1, x1, #0xd25
  2302bc:	add	x0, sp, #0x8
  2302c0:	bl	241310 <sd_bus_error_has_name@plt>
  2302c4:	cbnz	w0, 2302dc <manager_job_is_active+0x8c>
  2302c8:	adrp	x1, 206000 <inhibit_what_to_string.buffer+0x206000>
  2302cc:	add	x1, x1, #0xef0
  2302d0:	add	x0, sp, #0x8
  2302d4:	bl	241310 <sd_bus_error_has_name@plt>
  2302d8:	cbz	w0, 230304 <manager_job_is_active+0xb4>
  2302dc:	mov	w20, #0x1                   	// #1
  2302e0:	mov	x0, sp
  2302e4:	bl	22fbb8 <sd_bus_message_unrefp>
  2302e8:	add	x0, sp, #0x8
  2302ec:	bl	240c80 <sd_bus_error_free@plt>
  2302f0:	mov	w0, w20
  2302f4:	ldp	x20, x19, [sp, #48]
  2302f8:	ldp	x29, x30, [sp, #32]
  2302fc:	add	sp, sp, #0x40
  230300:	ret
  230304:	adrp	x1, 206000 <inhibit_what_to_string.buffer+0x206000>
  230308:	add	x1, x1, #0xf18
  23030c:	add	x0, sp, #0x8
  230310:	bl	241310 <sd_bus_error_has_name@plt>
  230314:	cbz	w0, 230320 <manager_job_is_active+0xd0>
  230318:	mov	w20, wzr
  23031c:	b	2302e0 <manager_job_is_active+0x90>
  230320:	add	x1, sp, #0x8
  230324:	mov	x0, x19
  230328:	bl	241330 <sd_bus_error_move@plt>
  23032c:	b	2302e0 <manager_job_is_active+0x90>
  230330:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  230334:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  230338:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  23033c:	add	x1, x1, #0x96a
  230340:	add	x2, x2, #0xe6f
  230344:	add	x4, x4, #0xc1d
  230348:	mov	w3, #0xf1d                 	// #3869
  23034c:	bl	240790 <log_assert_failed_realm@plt>
  230350:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  230354:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  230358:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  23035c:	add	x1, x1, #0x92
  230360:	add	x2, x2, #0xe6f
  230364:	add	x4, x4, #0xc1d
  230368:	mov	w3, #0xf1e                 	// #3870
  23036c:	mov	w0, wzr
  230370:	bl	240790 <log_assert_failed_realm@plt>

0000000000230374 <sd_bus_creds_unrefp>:
  230374:	stp	x29, x30, [sp, #-16]!
  230378:	ldr	x0, [x0]
  23037c:	mov	x29, sp
  230380:	cbz	x0, 230388 <sd_bus_creds_unrefp+0x14>
  230384:	bl	241350 <sd_bus_creds_unref@plt>
  230388:	ldp	x29, x30, [sp], #16
  23038c:	ret

0000000000230390 <bus_manager_log_shutdown>:
  230390:	stp	x29, x30, [sp, #-64]!
  230394:	str	x23, [sp, #16]
  230398:	stp	x22, x21, [sp, #32]
  23039c:	stp	x20, x19, [sp, #48]
  2303a0:	mov	x29, sp
  2303a4:	sub	sp, sp, #0x20
  2303a8:	cbz	x0, 2305e8 <bus_manager_log_shutdown+0x258>
  2303ac:	mov	x19, x1
  2303b0:	cbz	x1, 230608 <bus_manager_log_shutdown+0x278>
  2303b4:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  2303b8:	mov	x20, x0
  2303bc:	add	x1, x1, #0xae6
  2303c0:	mov	x0, x19
  2303c4:	bl	240c30 <strcmp@plt>
  2303c8:	cbz	w0, 23042c <bus_manager_log_shutdown+0x9c>
  2303cc:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2303d0:	add	x1, x1, #0x932
  2303d4:	mov	x0, x19
  2303d8:	bl	240c30 <strcmp@plt>
  2303dc:	cbz	w0, 230440 <bus_manager_log_shutdown+0xb0>
  2303e0:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  2303e4:	add	x1, x1, #0xb85
  2303e8:	mov	x0, x19
  2303ec:	bl	240c30 <strcmp@plt>
  2303f0:	cbz	w0, 230454 <bus_manager_log_shutdown+0xc4>
  2303f4:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2303f8:	add	x1, x1, #0x620
  2303fc:	mov	x0, x19
  230400:	bl	240c30 <strcmp@plt>
  230404:	adrp	x8, 212000 <inhibit_what_to_string.buffer+0x212000>
  230408:	adrp	x9, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23040c:	adrp	x10, 210000 <inhibit_what_to_string.buffer+0x210000>
  230410:	add	x8, x8, #0xff
  230414:	cmp	w0, #0x0
  230418:	add	x9, x9, #0x18a
  23041c:	add	x10, x10, #0xba6
  230420:	csel	x19, x8, xzr, eq  // eq = none
  230424:	csel	x21, x10, x9, eq  // eq = none
  230428:	b	230464 <bus_manager_log_shutdown+0xd4>
  23042c:	adrp	x21, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  230430:	adrp	x19, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  230434:	add	x21, x21, #0x188
  230438:	add	x19, x19, #0xbd5
  23043c:	b	230464 <bus_manager_log_shutdown+0xd4>
  230440:	adrp	x21, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  230444:	adrp	x19, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  230448:	add	x21, x21, #0x3b7
  23044c:	add	x19, x19, #0x832
  230450:	b	230464 <bus_manager_log_shutdown+0xd4>
  230454:	adrp	x21, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  230458:	adrp	x19, 209000 <inhibit_what_to_string.buffer+0x209000>
  23045c:	add	x21, x21, #0x2a8
  230460:	add	x19, x19, #0xaa
  230464:	ldr	x0, [x20, #336]
  230468:	bl	22fbe8 <isempty>
  23046c:	tbz	w0, #0, 2304fc <bus_manager_log_shutdown+0x16c>
  230470:	adrp	x8, 207000 <inhibit_what_to_string.buffer+0x207000>
  230474:	add	x8, x8, #0xb74
  230478:	mov	x22, xzr
  23047c:	mov	x20, xzr
  230480:	stp	x21, x8, [x29, #-32]
  230484:	sub	x21, x29, #0x20
  230488:	ldr	x0, [x21, x22]
  23048c:	cbz	x0, 2304a4 <bus_manager_log_shutdown+0x114>
  230490:	bl	240d30 <strlen@plt>
  230494:	add	x22, x22, #0x8
  230498:	cmp	x22, #0x10
  23049c:	add	x20, x0, x20
  2304a0:	b.ne	230488 <bus_manager_log_shutdown+0xf8>  // b.any
  2304a4:	add	x20, x20, #0x1
  2304a8:	mov	w0, #0x1                   	// #1
  2304ac:	mov	x1, x20
  2304b0:	bl	22f7ac <size_multiply_overflow>
  2304b4:	tbnz	w0, #0, 23062c <bus_manager_log_shutdown+0x29c>
  2304b8:	cmp	x20, #0x400, lsl #12
  2304bc:	b.hi	230638 <bus_manager_log_shutdown+0x2a8>  // b.pmore
  2304c0:	add	x9, x20, #0xf
  2304c4:	mov	x8, sp
  2304c8:	and	x9, x9, #0xfffffffffffffff0
  2304cc:	sub	x20, x8, x9
  2304d0:	mov	sp, x20
  2304d4:	mov	x21, xzr
  2304d8:	sub	x22, x29, #0x20
  2304dc:	mov	x0, x20
  2304e0:	ldr	x1, [x22, x21]
  2304e4:	cbz	x1, 230594 <bus_manager_log_shutdown+0x204>
  2304e8:	bl	240d40 <stpcpy@plt>
  2304ec:	add	x21, x21, #0x8
  2304f0:	cmp	x21, #0x10
  2304f4:	b.ne	2304e0 <bus_manager_log_shutdown+0x150>  // b.any
  2304f8:	b	230594 <bus_manager_log_shutdown+0x204>
  2304fc:	adrp	x8, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  230500:	add	x8, x8, #0x48a
  230504:	stp	x21, x8, [x29, #-32]
  230508:	ldr	x8, [x20, #336]
  23050c:	adrp	x9, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  230510:	mov	x23, xzr
  230514:	mov	x22, xzr
  230518:	add	x9, x9, #0xb2e
  23051c:	sub	x20, x29, #0x20
  230520:	stp	x8, x9, [x29, #-16]
  230524:	ldr	x0, [x20, x23]
  230528:	cbz	x0, 230540 <bus_manager_log_shutdown+0x1b0>
  23052c:	bl	240d30 <strlen@plt>
  230530:	add	x23, x23, #0x8
  230534:	cmp	x23, #0x20
  230538:	add	x22, x0, x22
  23053c:	b.ne	230524 <bus_manager_log_shutdown+0x194>  // b.any
  230540:	add	x20, x22, #0x1
  230544:	mov	w0, #0x1                   	// #1
  230548:	mov	x1, x20
  23054c:	bl	22f7ac <size_multiply_overflow>
  230550:	tbnz	w0, #0, 23065c <bus_manager_log_shutdown+0x2cc>
  230554:	cmp	x20, #0x400, lsl #12
  230558:	b.hi	230668 <bus_manager_log_shutdown+0x2d8>  // b.pmore
  23055c:	add	x9, x20, #0xf
  230560:	mov	x8, sp
  230564:	and	x9, x9, #0xfffffffffffffff0
  230568:	sub	x20, x8, x9
  23056c:	mov	sp, x20
  230570:	mov	x21, xzr
  230574:	sub	x22, x29, #0x20
  230578:	mov	x0, x20
  23057c:	ldr	x1, [x22, x21]
  230580:	cbz	x1, 230594 <bus_manager_log_shutdown+0x204>
  230584:	bl	240d40 <stpcpy@plt>
  230588:	add	x21, x21, #0x8
  23058c:	cmp	x21, #0x20
  230590:	b.ne	23057c <bus_manager_log_shutdown+0x1ec>  // b.any
  230594:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  230598:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23059c:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2305a0:	strb	wzr, [x0]
  2305a4:	add	x2, x2, #0xe6f
  2305a8:	add	x4, x4, #0x842
  2305ac:	add	x5, x5, #0x85b
  2305b0:	mov	w0, #0x5                   	// #5
  2305b4:	mov	w3, #0x5fb                 	// #1531
  2305b8:	str	xzr, [sp, #-16]!
  2305bc:	mov	w1, wzr
  2305c0:	mov	x6, x20
  2305c4:	mov	x7, x19
  2305c8:	bl	240d70 <log_struct_internal@plt>
  2305cc:	add	sp, sp, #0x10
  2305d0:	mov	sp, x29
  2305d4:	ldp	x20, x19, [sp, #48]
  2305d8:	ldp	x22, x21, [sp, #32]
  2305dc:	ldr	x23, [sp, #16]
  2305e0:	ldp	x29, x30, [sp], #64
  2305e4:	ret
  2305e8:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2305ec:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2305f0:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  2305f4:	add	x1, x1, #0x102
  2305f8:	add	x2, x2, #0xe6f
  2305fc:	add	x4, x4, #0x495
  230600:	mov	w3, #0x5df                 	// #1503
  230604:	bl	240790 <log_assert_failed_realm@plt>
  230608:	adrp	x1, 212000 <inhibit_what_to_string.buffer+0x212000>
  23060c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  230610:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  230614:	add	x1, x1, #0x1
  230618:	add	x2, x2, #0xe6f
  23061c:	add	x4, x4, #0x495
  230620:	mov	w3, #0x5e0                 	// #1504
  230624:	mov	w0, wzr
  230628:	bl	240790 <log_assert_failed_realm@plt>
  23062c:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  230630:	add	x1, x1, #0xf50
  230634:	b	230640 <bus_manager_log_shutdown+0x2b0>
  230638:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  23063c:	add	x1, x1, #0xa15
  230640:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  230644:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  230648:	add	x2, x2, #0xe6f
  23064c:	add	x4, x4, #0x495
  230650:	mov	w3, #0x5f4                 	// #1524
  230654:	mov	w0, wzr
  230658:	bl	240790 <log_assert_failed_realm@plt>
  23065c:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  230660:	add	x1, x1, #0xf50
  230664:	b	230670 <bus_manager_log_shutdown+0x2e0>
  230668:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  23066c:	add	x1, x1, #0xa15
  230670:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  230674:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  230678:	add	x2, x2, #0xe6f
  23067c:	add	x4, x4, #0x495
  230680:	mov	w3, #0x5f6                 	// #1526
  230684:	mov	w0, wzr
  230688:	bl	240790 <log_assert_failed_realm@plt>

000000000023068c <manager_inhibit_timeout_handler>:
  23068c:	stp	x29, x30, [sp, #-16]!
  230690:	mov	x29, sp
  230694:	cbz	x2, 2306bc <manager_inhibit_timeout_handler+0x30>
  230698:	ldr	x8, [x2, #272]
  23069c:	cmp	x8, x0
  2306a0:	b.ne	2306e0 <manager_inhibit_timeout_handler+0x54>  // b.any
  2306a4:	mov	w1, #0x1                   	// #1
  2306a8:	mov	x0, x2
  2306ac:	bl	229948 <manager_dispatch_delayed>
  2306b0:	and	w0, w0, w0, asr #31
  2306b4:	ldp	x29, x30, [sp], #16
  2306b8:	ret
  2306bc:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2306c0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2306c4:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  2306c8:	add	x1, x1, #0x96a
  2306cc:	add	x2, x2, #0xe6f
  2306d0:	add	x4, x4, #0xdc7
  2306d4:	mov	w3, #0x69d                 	// #1693
  2306d8:	mov	w0, wzr
  2306dc:	bl	240790 <log_assert_failed_realm@plt>
  2306e0:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2306e4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2306e8:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  2306ec:	add	x1, x1, #0xb8e
  2306f0:	add	x2, x2, #0xe6f
  2306f4:	add	x4, x4, #0xdc7
  2306f8:	mov	w3, #0x69e                 	// #1694
  2306fc:	mov	w0, wzr
  230700:	bl	240790 <log_assert_failed_realm@plt>

0000000000230704 <safe_atou64>:
  230704:	stp	x29, x30, [sp, #-16]!
  230708:	mov	x29, sp
  23070c:	bl	241360 <safe_atollu@plt>
  230710:	ldp	x29, x30, [sp], #16
  230714:	ret

0000000000230718 <hashmap_size>:
  230718:	stp	x29, x30, [sp, #-16]!
  23071c:	mov	x29, sp
  230720:	bl	241370 <internal_hashmap_size@plt>
  230724:	ldp	x29, x30, [sp], #16
  230728:	ret

000000000023072c <audit_session_is_valid>:
  23072c:	add	w8, w0, #0x1
  230730:	cmp	w8, #0x1
  230734:	cset	w0, hi  // hi = pmore
  230738:	ret

000000000023073c <hashmap_contains>:
  23073c:	stp	x29, x30, [sp, #-16]!
  230740:	mov	x29, sp
  230744:	bl	241380 <internal_hashmap_contains@plt>
  230748:	and	w0, w0, #0x1
  23074c:	ldp	x29, x30, [sp], #16
  230750:	ret

0000000000230754 <SESSION_IS_SELF>:
  230754:	stp	x29, x30, [sp, #-32]!
  230758:	str	x19, [sp, #16]
  23075c:	mov	x29, sp
  230760:	mov	x19, x0
  230764:	bl	22fbe8 <isempty>
  230768:	tbz	w0, #0, 230774 <SESSION_IS_SELF+0x20>
  23076c:	mov	w0, #0x1                   	// #1
  230770:	b	23078c <SESSION_IS_SELF+0x38>
  230774:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  230778:	add	x1, x1, #0x7d9
  23077c:	mov	x0, x19
  230780:	bl	240c30 <strcmp@plt>
  230784:	cmp	w0, #0x0
  230788:	cset	w0, eq  // eq = none
  23078c:	ldr	x19, [sp, #16]
  230790:	ldp	x29, x30, [sp], #32
  230794:	ret

0000000000230798 <SESSION_IS_AUTO>:
  230798:	stp	x29, x30, [sp, #-16]!
  23079c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2307a0:	add	x1, x1, #0x834
  2307a4:	mov	x29, sp
  2307a8:	bl	22f1cc <streq_ptr>
  2307ac:	and	w0, w0, #0x1
  2307b0:	ldp	x29, x30, [sp], #16
  2307b4:	ret

00000000002307b8 <errno_or_else>:
  2307b8:	stp	x29, x30, [sp, #-16]!
  2307bc:	mov	x29, sp
  2307c0:	bl	240930 <__errno_location@plt>
  2307c4:	ldr	w8, [x0]
  2307c8:	mov	w9, #0xfffffffe            	// #-2
  2307cc:	cmp	w8, #0x0
  2307d0:	csneg	w0, w9, w8, le
  2307d4:	ldp	x29, x30, [sp], #16
  2307d8:	ret

00000000002307dc <attach_device>:
  2307dc:	sub	sp, sp, #0x50
  2307e0:	stp	x29, x30, [sp, #32]
  2307e4:	add	x29, sp, #0x20
  2307e8:	str	x21, [sp, #48]
  2307ec:	stp	x20, x19, [sp, #64]
  2307f0:	str	xzr, [x29, #24]
  2307f4:	stur	xzr, [x29, #-8]
  2307f8:	str	xzr, [sp, #16]
  2307fc:	cbz	x0, 2308f4 <attach_device+0x118>
  230800:	mov	x20, x1
  230804:	cbz	x1, 230914 <attach_device+0x138>
  230808:	cbz	x2, 230938 <attach_device+0x15c>
  23080c:	mov	x19, x0
  230810:	add	x0, x29, #0x18
  230814:	mov	x1, x2
  230818:	bl	241390 <sd_device_new_from_syspath@plt>
  23081c:	tbnz	w0, #31, 2308b0 <attach_device+0xd4>
  230820:	ldr	x0, [x29, #24]
  230824:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  230828:	add	x1, x1, #0x289
  23082c:	bl	240df0 <sd_device_has_tag@plt>
  230830:	cmp	w0, #0x1
  230834:	b.lt	2308b8 <attach_device+0xdc>  // b.tstop
  230838:	ldr	x0, [x29, #24]
  23083c:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  230840:	add	x1, x1, #0xbcd
  230844:	add	x2, sp, #0x8
  230848:	bl	240de0 <sd_device_get_property_value@plt>
  23084c:	tbnz	w0, #31, 2308b8 <attach_device+0xdc>
  230850:	ldr	x2, [sp, #8]
  230854:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  230858:	add	x1, x1, #0x52f
  23085c:	add	x0, sp, #0x10
  230860:	bl	240ae0 <asprintf@plt>
  230864:	tbnz	w0, #31, 2308c0 <attach_device+0xe4>
  230868:	ldr	x2, [sp, #8]
  23086c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  230870:	add	x1, x1, #0x9a8
  230874:	sub	x0, x29, #0x8
  230878:	mov	x3, x20
  23087c:	bl	240ae0 <asprintf@plt>
  230880:	tbnz	w0, #31, 2308c0 <attach_device+0xe4>
  230884:	adrp	x0, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  230888:	add	x0, x0, #0xd70
  23088c:	mov	w1, #0x1ed                 	// #493
  230890:	bl	241190 <mkdir_p_label@plt>
  230894:	ldr	x0, [sp, #16]
  230898:	ldur	x1, [x29, #-8]
  23089c:	bl	230978 <write_string_file_atomic_label>
  2308a0:	tbnz	w0, #31, 2308b0 <attach_device+0xd4>
  2308a4:	ldr	x1, [x29, #24]
  2308a8:	mov	x0, x19
  2308ac:	bl	230990 <trigger_device>
  2308b0:	mov	w21, w0
  2308b4:	b	2308c4 <attach_device+0xe8>
  2308b8:	mov	w21, #0xffffffed            	// #-19
  2308bc:	b	2308c4 <attach_device+0xe8>
  2308c0:	mov	w21, #0xfffffff4            	// #-12
  2308c4:	add	x0, sp, #0x10
  2308c8:	bl	229b20 <freep>
  2308cc:	sub	x0, x29, #0x8
  2308d0:	bl	229b20 <freep>
  2308d4:	add	x0, x29, #0x18
  2308d8:	bl	23095c <sd_device_unrefp>
  2308dc:	mov	w0, w21
  2308e0:	ldp	x20, x19, [sp, #64]
  2308e4:	ldr	x21, [sp, #48]
  2308e8:	ldp	x29, x30, [sp, #32]
  2308ec:	add	sp, sp, #0x50
  2308f0:	ret
  2308f4:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2308f8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2308fc:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  230900:	add	x1, x1, #0x102
  230904:	add	x2, x2, #0xe6f
  230908:	add	x4, x4, #0x96f
  23090c:	mov	w3, #0x539                 	// #1337
  230910:	bl	240790 <log_assert_failed_realm@plt>
  230914:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  230918:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  23091c:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  230920:	add	x1, x1, #0x289
  230924:	add	x2, x2, #0xe6f
  230928:	add	x4, x4, #0x96f
  23092c:	mov	w3, #0x53a                 	// #1338
  230930:	mov	w0, wzr
  230934:	bl	240790 <log_assert_failed_realm@plt>
  230938:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23093c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  230940:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  230944:	add	x1, x1, #0x3e8
  230948:	add	x2, x2, #0xe6f
  23094c:	add	x4, x4, #0x96f
  230950:	mov	w3, #0x53b                 	// #1339
  230954:	mov	w0, wzr
  230958:	bl	240790 <log_assert_failed_realm@plt>

000000000023095c <sd_device_unrefp>:
  23095c:	stp	x29, x30, [sp, #-16]!
  230960:	ldr	x0, [x0]
  230964:	mov	x29, sp
  230968:	cbz	x0, 230970 <sd_device_unrefp+0x14>
  23096c:	bl	2413a0 <sd_device_unref@plt>
  230970:	ldp	x29, x30, [sp], #16
  230974:	ret

0000000000230978 <write_string_file_atomic_label>:
  230978:	stp	x29, x30, [sp, #-16]!
  23097c:	mov	x2, xzr
  230980:	mov	x29, sp
  230984:	bl	2413b0 <write_string_file_atomic_label_ts@plt>
  230988:	ldp	x29, x30, [sp], #16
  23098c:	ret

0000000000230990 <trigger_device>:
  230990:	sub	sp, sp, #0x40
  230994:	stp	x29, x30, [sp, #16]
  230998:	add	x29, sp, #0x10
  23099c:	str	x21, [sp, #32]
  2309a0:	stp	x20, x19, [sp, #48]
  2309a4:	str	xzr, [x29, #24]
  2309a8:	cbz	x0, 230a7c <trigger_device+0xec>
  2309ac:	add	x0, x29, #0x18
  2309b0:	mov	x20, x1
  2309b4:	bl	240a30 <sd_device_enumerator_new@plt>
  2309b8:	tbnz	w0, #31, 230a58 <trigger_device+0xc8>
  2309bc:	ldr	x0, [x29, #24]
  2309c0:	bl	240e60 <sd_device_enumerator_allow_uninitialized@plt>
  2309c4:	tbnz	w0, #31, 230a58 <trigger_device+0xc8>
  2309c8:	cbz	x20, 2309dc <trigger_device+0x4c>
  2309cc:	ldr	x0, [x29, #24]
  2309d0:	mov	x1, x20
  2309d4:	bl	2413c0 <sd_device_enumerator_add_match_parent@plt>
  2309d8:	tbnz	w0, #31, 230a58 <trigger_device+0xc8>
  2309dc:	ldr	x0, [x29, #24]
  2309e0:	bl	240a50 <sd_device_enumerator_get_device_first@plt>
  2309e4:	cbz	x0, 230a50 <trigger_device+0xc0>
  2309e8:	adrp	x20, 208000 <inhibit_what_to_string.buffer+0x208000>
  2309ec:	add	x20, x20, #0x84
  2309f0:	mov	x1, sp
  2309f4:	str	xzr, [sp, #8]
  2309f8:	bl	240dd0 <sd_device_get_syspath@plt>
  2309fc:	tbnz	w0, #31, 230a24 <trigger_device+0x94>
  230a00:	ldr	x0, [sp]
  230a04:	mov	x2, #0xffffffffffffffff    	// #-1
  230a08:	mov	x1, x20
  230a0c:	bl	2413d0 <path_join_internal@plt>
  230a10:	str	x0, [sp, #8]
  230a14:	cbz	x0, 230a30 <trigger_device+0xa0>
  230a18:	bl	230ab8 <write_string_file>
  230a1c:	mov	w21, #0x1                   	// #1
  230a20:	b	230a38 <trigger_device+0xa8>
  230a24:	mov	w21, wzr
  230a28:	mov	w19, w0
  230a2c:	b	230a38 <trigger_device+0xa8>
  230a30:	mov	w21, wzr
  230a34:	mov	w19, #0xfffffff4            	// #-12
  230a38:	add	x0, sp, #0x8
  230a3c:	bl	229b20 <freep>
  230a40:	cbz	w21, 230a5c <trigger_device+0xcc>
  230a44:	ldr	x0, [x29, #24]
  230a48:	bl	240a60 <sd_device_enumerator_get_device_next@plt>
  230a4c:	cbnz	x0, 2309f0 <trigger_device+0x60>
  230a50:	mov	w19, wzr
  230a54:	b	230a5c <trigger_device+0xcc>
  230a58:	mov	w19, w0
  230a5c:	add	x0, x29, #0x18
  230a60:	bl	230a9c <sd_device_enumerator_unrefp>
  230a64:	mov	w0, w19
  230a68:	ldp	x20, x19, [sp, #48]
  230a6c:	ldr	x21, [sp, #32]
  230a70:	ldp	x29, x30, [sp, #16]
  230a74:	add	sp, sp, #0x40
  230a78:	ret
  230a7c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  230a80:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  230a84:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  230a88:	add	x1, x1, #0x102
  230a8c:	add	x2, x2, #0xe6f
  230a90:	add	x4, x4, #0x552
  230a94:	mov	w3, #0x511                 	// #1297
  230a98:	bl	240790 <log_assert_failed_realm@plt>

0000000000230a9c <sd_device_enumerator_unrefp>:
  230a9c:	stp	x29, x30, [sp, #-16]!
  230aa0:	ldr	x0, [x0]
  230aa4:	mov	x29, sp
  230aa8:	cbz	x0, 230ab0 <sd_device_enumerator_unrefp+0x14>
  230aac:	bl	240ba0 <sd_device_enumerator_unref@plt>
  230ab0:	ldp	x29, x30, [sp], #16
  230ab4:	ret

0000000000230ab8 <write_string_file>:
  230ab8:	stp	x29, x30, [sp, #-16]!
  230abc:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  230ac0:	add	x1, x1, #0x5a9
  230ac4:	mov	w2, #0x20                  	// #32
  230ac8:	mov	x3, xzr
  230acc:	mov	x29, sp
  230ad0:	bl	2413e0 <write_string_file_ts@plt>
  230ad4:	ldp	x29, x30, [sp], #16
  230ad8:	ret

0000000000230adc <flush_devices>:
  230adc:	stp	x29, x30, [sp, #-96]!
  230ae0:	str	x27, [sp, #16]
  230ae4:	stp	x26, x25, [sp, #32]
  230ae8:	stp	x24, x23, [sp, #48]
  230aec:	stp	x22, x21, [sp, #64]
  230af0:	stp	x20, x19, [sp, #80]
  230af4:	mov	x29, sp
  230af8:	cbz	x0, 230c78 <flush_devices+0x19c>
  230afc:	mov	x19, x0
  230b00:	adrp	x0, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  230b04:	add	x0, x0, #0xd70
  230b08:	bl	240a70 <opendir@plt>
  230b0c:	mov	x20, x0
  230b10:	str	x0, [x29, #24]
  230b14:	bl	240930 <__errno_location@plt>
  230b18:	mov	x21, x0
  230b1c:	cbz	x20, 230bfc <flush_devices+0x120>
  230b20:	mov	x0, x20
  230b24:	str	wzr, [x21]
  230b28:	bl	240a80 <readdir64@plt>
  230b2c:	cbz	x0, 230c40 <flush_devices+0x164>
  230b30:	adrp	x22, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  230b34:	adrp	x23, 210000 <inhibit_what_to_string.buffer+0x210000>
  230b38:	adrp	x24, 206000 <inhibit_what_to_string.buffer+0x206000>
  230b3c:	adrp	x25, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  230b40:	adrp	x26, 208000 <inhibit_what_to_string.buffer+0x208000>
  230b44:	mov	x27, x0
  230b48:	add	x22, x22, #0x23
  230b4c:	add	x23, x23, #0x181
  230b50:	add	x24, x24, #0xe6f
  230b54:	add	x25, x25, #0xa22
  230b58:	add	x26, x26, #0x5e1
  230b5c:	b	230b74 <flush_devices+0x98>
  230b60:	mov	x0, x20
  230b64:	str	wzr, [x21]
  230b68:	bl	240a80 <readdir64@plt>
  230b6c:	mov	x27, x0
  230b70:	cbz	x0, 230c40 <flush_devices+0x164>
  230b74:	mov	x0, x20
  230b78:	mov	x1, x27
  230b7c:	bl	240bd0 <dirent_ensure_type@plt>
  230b80:	mov	x0, x27
  230b84:	bl	240aa0 <dirent_is_file@plt>
  230b88:	tbz	w0, #0, 230b60 <flush_devices+0x84>
  230b8c:	add	x27, x27, #0x13
  230b90:	mov	x0, x27
  230b94:	mov	x1, x22
  230b98:	bl	230cb4 <startswith>
  230b9c:	cbz	x0, 230b60 <flush_devices+0x84>
  230ba0:	mov	x0, x27
  230ba4:	mov	x1, x23
  230ba8:	bl	2413f0 <endswith@plt>
  230bac:	cbz	x0, 230b60 <flush_devices+0x84>
  230bb0:	mov	x0, x20
  230bb4:	bl	240ab0 <dirfd@plt>
  230bb8:	mov	x1, x27
  230bbc:	mov	w2, wzr
  230bc0:	bl	240ac0 <unlinkat@plt>
  230bc4:	tbz	w0, #31, 230b60 <flush_devices+0x84>
  230bc8:	mov	w0, wzr
  230bcc:	bl	240750 <log_get_max_level_realm@plt>
  230bd0:	cmp	w0, #0x4
  230bd4:	b.lt	230b60 <flush_devices+0x84>  // b.tstop
  230bd8:	ldr	w1, [x21]
  230bdc:	mov	w0, #0x4                   	// #4
  230be0:	mov	w3, #0x56d                 	// #1389
  230be4:	mov	x2, x24
  230be8:	mov	x4, x25
  230bec:	mov	x5, x26
  230bf0:	mov	x6, x27
  230bf4:	bl	240770 <log_internal_realm@plt>
  230bf8:	b	230b60 <flush_devices+0x84>
  230bfc:	ldr	w20, [x21]
  230c00:	cmp	w20, #0x2
  230c04:	b.eq	230c40 <flush_devices+0x164>  // b.none
  230c08:	mov	w0, wzr
  230c0c:	bl	240750 <log_get_max_level_realm@plt>
  230c10:	cmp	w0, #0x4
  230c14:	b.lt	230c40 <flush_devices+0x164>  // b.tstop
  230c18:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  230c1c:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  230c20:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  230c24:	add	x2, x2, #0xe6f
  230c28:	add	x4, x4, #0xa22
  230c2c:	add	x5, x5, #0x279
  230c30:	mov	w0, #0x4                   	// #4
  230c34:	mov	w3, #0x55d                 	// #1373
  230c38:	mov	w1, w20
  230c3c:	bl	240770 <log_internal_realm@plt>
  230c40:	mov	x0, x19
  230c44:	mov	x1, xzr
  230c48:	bl	230990 <trigger_device>
  230c4c:	mov	w19, w0
  230c50:	add	x0, x29, #0x18
  230c54:	bl	230c98 <closedirp>
  230c58:	mov	w0, w19
  230c5c:	ldp	x20, x19, [sp, #80]
  230c60:	ldp	x22, x21, [sp, #64]
  230c64:	ldp	x24, x23, [sp, #48]
  230c68:	ldp	x26, x25, [sp, #32]
  230c6c:	ldr	x27, [sp, #16]
  230c70:	ldp	x29, x30, [sp], #96
  230c74:	ret
  230c78:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  230c7c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  230c80:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  230c84:	add	x1, x1, #0x102
  230c88:	add	x2, x2, #0xe6f
  230c8c:	add	x4, x4, #0xcac
  230c90:	mov	w3, #0x558                 	// #1368
  230c94:	bl	240790 <log_assert_failed_realm@plt>

0000000000230c98 <closedirp>:
  230c98:	stp	x29, x30, [sp, #-16]!
  230c9c:	ldr	x0, [x0]
  230ca0:	mov	x29, sp
  230ca4:	cbz	x0, 230cac <closedirp+0x14>
  230ca8:	bl	240bb0 <closedir@plt>
  230cac:	ldp	x29, x30, [sp], #16
  230cb0:	ret

0000000000230cb4 <startswith>:
  230cb4:	stp	x29, x30, [sp, #-48]!
  230cb8:	stp	x20, x19, [sp, #32]
  230cbc:	mov	x20, x0
  230cc0:	mov	x0, x1
  230cc4:	str	x21, [sp, #16]
  230cc8:	mov	x29, sp
  230ccc:	mov	x19, x1
  230cd0:	bl	240d30 <strlen@plt>
  230cd4:	mov	x21, x0
  230cd8:	mov	x0, x20
  230cdc:	mov	x1, x19
  230ce0:	mov	x2, x21
  230ce4:	bl	240b90 <strncmp@plt>
  230ce8:	add	x8, x20, x21
  230cec:	ldp	x20, x19, [sp, #32]
  230cf0:	ldr	x21, [sp, #16]
  230cf4:	cmp	w0, #0x0
  230cf8:	csel	x0, x8, xzr, eq  // eq = none
  230cfc:	ldp	x29, x30, [sp], #48
  230d00:	ret

0000000000230d04 <method_do_shutdown_or_sleep>:
  230d04:	stp	x29, x30, [sp, #-96]!
  230d08:	str	x27, [sp, #16]
  230d0c:	stp	x26, x25, [sp, #32]
  230d10:	stp	x24, x23, [sp, #48]
  230d14:	stp	x22, x21, [sp, #64]
  230d18:	stp	x20, x19, [sp, #80]
  230d1c:	mov	x29, sp
  230d20:	cbz	x0, 230e58 <method_do_shutdown_or_sleep+0x154>
  230d24:	mov	x19, x1
  230d28:	cbz	x1, 230e78 <method_do_shutdown_or_sleep+0x174>
  230d2c:	mov	x21, x2
  230d30:	cbz	x2, 230e9c <method_do_shutdown_or_sleep+0x198>
  230d34:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  230d38:	mov	x22, x0
  230d3c:	add	x1, x1, #0xb8c
  230d40:	add	x2, x29, #0x1c
  230d44:	mov	x0, x19
  230d48:	mov	x27, x7
  230d4c:	mov	x23, x6
  230d50:	mov	x24, x5
  230d54:	mov	x26, x4
  230d58:	mov	w20, w3
  230d5c:	bl	240fb0 <sd_bus_message_read@plt>
  230d60:	tbnz	w0, #31, 230d8c <method_do_shutdown_or_sleep+0x88>
  230d64:	ldr	w8, [x22, #248]
  230d68:	ldr	x25, [x29, #96]
  230d6c:	cmp	w8, #0x1
  230d70:	b.lt	230da8 <method_do_shutdown_or_sleep+0xa4>  // b.tstop
  230d74:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  230d78:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  230d7c:	add	x1, x1, #0xbb9
  230d80:	add	x2, x2, #0x2c
  230d84:	mov	x0, x25
  230d88:	bl	240f50 <sd_bus_error_setf@plt>
  230d8c:	ldp	x20, x19, [sp, #80]
  230d90:	ldp	x22, x21, [sp, #64]
  230d94:	ldp	x24, x23, [sp, #48]
  230d98:	ldp	x26, x25, [sp, #32]
  230d9c:	ldr	x27, [sp, #16]
  230da0:	ldp	x29, x30, [sp], #96
  230da4:	ret
  230da8:	cbz	x27, 230e00 <method_do_shutdown_or_sleep+0xfc>
  230dac:	mov	x0, x27
  230db0:	bl	240c90 <can_sleep@plt>
  230db4:	cbz	w0, 230ddc <method_do_shutdown_or_sleep+0xd8>
  230db8:	cmn	w0, #0x1c
  230dbc:	b.ne	230dfc <method_do_shutdown_or_sleep+0xf8>  // b.any
  230dc0:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  230dc4:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  230dc8:	add	x1, x1, #0xeef
  230dcc:	add	x2, x2, #0xbae
  230dd0:	mov	x0, x25
  230dd4:	bl	241400 <sd_bus_error_set@plt>
  230dd8:	b	230d8c <method_do_shutdown_or_sleep+0x88>
  230ddc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  230de0:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  230de4:	add	x1, x1, #0xeef
  230de8:	add	x2, x2, #0xca1
  230dec:	mov	x0, x25
  230df0:	mov	x3, x27
  230df4:	bl	240f50 <sd_bus_error_setf@plt>
  230df8:	b	230d8c <method_do_shutdown_or_sleep+0x88>
  230dfc:	tbnz	w0, #31, 230d8c <method_do_shutdown_or_sleep+0x88>
  230e00:	ldr	w8, [x29, #28]
  230e04:	mov	x0, x22
  230e08:	mov	x1, x19
  230e0c:	mov	w2, w20
  230e10:	cmp	w8, #0x0
  230e14:	cset	w3, ne  // ne = any
  230e18:	mov	x4, x26
  230e1c:	mov	x5, x24
  230e20:	mov	x6, x23
  230e24:	mov	x7, x25
  230e28:	bl	230ec0 <verify_shutdown_creds>
  230e2c:	cbnz	w0, 230d8c <method_do_shutdown_or_sleep+0x88>
  230e30:	mov	x0, x22
  230e34:	mov	x1, x21
  230e38:	mov	w2, w20
  230e3c:	mov	x3, x25
  230e40:	bl	229cf8 <bus_manager_shutdown_or_sleep_now_or_later>
  230e44:	tbnz	w0, #31, 230d8c <method_do_shutdown_or_sleep+0x88>
  230e48:	mov	x0, x19
  230e4c:	mov	x1, xzr
  230e50:	bl	2410a0 <sd_bus_reply_method_return@plt>
  230e54:	b	230d8c <method_do_shutdown_or_sleep+0x88>
  230e58:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  230e5c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  230e60:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  230e64:	add	x1, x1, #0x102
  230e68:	add	x2, x2, #0xe6f
  230e6c:	add	x4, x4, #0x1b2
  230e70:	mov	w3, #0x73f                 	// #1855
  230e74:	bl	240790 <log_assert_failed_realm@plt>
  230e78:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  230e7c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  230e80:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  230e84:	add	x1, x1, #0x30
  230e88:	add	x2, x2, #0xe6f
  230e8c:	add	x4, x4, #0x1b2
  230e90:	mov	w3, #0x740                 	// #1856
  230e94:	mov	w0, wzr
  230e98:	bl	240790 <log_assert_failed_realm@plt>
  230e9c:	adrp	x1, 212000 <inhibit_what_to_string.buffer+0x212000>
  230ea0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  230ea4:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  230ea8:	add	x1, x1, #0x1
  230eac:	add	x2, x2, #0xe6f
  230eb0:	add	x4, x4, #0x1b2
  230eb4:	mov	w3, #0x741                 	// #1857
  230eb8:	mov	w0, wzr
  230ebc:	bl	240790 <log_assert_failed_realm@plt>

0000000000230ec0 <verify_shutdown_creds>:
  230ec0:	sub	sp, sp, #0x70
  230ec4:	stp	x29, x30, [sp, #16]
  230ec8:	add	x29, sp, #0x10
  230ecc:	str	x27, [sp, #32]
  230ed0:	stp	x26, x25, [sp, #48]
  230ed4:	stp	x24, x23, [sp, #64]
  230ed8:	stp	x22, x21, [sp, #80]
  230edc:	stp	x20, x19, [sp, #96]
  230ee0:	str	xzr, [x29, #24]
  230ee4:	cbz	x0, 231068 <verify_shutdown_creds+0x1a8>
  230ee8:	mov	x21, x1
  230eec:	cbz	x1, 231088 <verify_shutdown_creds+0x1c8>
  230ef0:	mov	w27, w2
  230ef4:	tbnz	w2, #31, 2310ac <verify_shutdown_creds+0x1ec>
  230ef8:	cmp	w27, #0x81
  230efc:	b.ge	2310d0 <verify_shutdown_creds+0x210>  // b.tcont
  230f00:	mov	x23, x0
  230f04:	add	x2, x29, #0x18
  230f08:	mov	w1, #0x10                  	// #16
  230f0c:	mov	x0, x21
  230f10:	mov	x19, x7
  230f14:	mov	x25, x6
  230f18:	mov	x26, x5
  230f1c:	mov	x20, x4
  230f20:	mov	w22, w3
  230f24:	bl	240f60 <sd_bus_query_sender_creds@plt>
  230f28:	tbnz	w0, #31, 230ff4 <verify_shutdown_creds+0x134>
  230f2c:	ldr	x0, [x29, #24]
  230f30:	sub	x1, x29, #0x4
  230f34:	bl	241180 <sd_bus_creds_get_euid@plt>
  230f38:	tbnz	w0, #31, 230ff4 <verify_shutdown_creds+0x134>
  230f3c:	ldur	w1, [x29, #-4]
  230f40:	mov	x0, x23
  230f44:	bl	2310f4 <have_multiple_sessions>
  230f48:	mov	w24, w0
  230f4c:	tbnz	w0, #31, 230ff8 <verify_shutdown_creds+0x138>
  230f50:	ldur	w6, [x29, #-4]
  230f54:	mov	w5, #0x1                   	// #1
  230f58:	mov	x0, x23
  230f5c:	mov	w1, w27
  230f60:	mov	w2, wzr
  230f64:	mov	x3, xzr
  230f68:	mov	w4, wzr
  230f6c:	mov	x7, xzr
  230f70:	bl	233000 <manager_is_inhibited>
  230f74:	mov	w27, w0
  230f78:	cbz	x26, 230fac <verify_shutdown_creds+0xec>
  230f7c:	cbz	w24, 230fac <verify_shutdown_creds+0xec>
  230f80:	add	x6, x23, #0x1b0
  230f84:	and	w4, w22, #0x1
  230f88:	mov	w1, #0x16                  	// #22
  230f8c:	mov	w5, #0xffffffff            	// #-1
  230f90:	mov	x0, x21
  230f94:	mov	x2, x26
  230f98:	mov	x3, xzr
  230f9c:	mov	x7, x19
  230fa0:	bl	241160 <bus_verify_polkit_async@plt>
  230fa4:	tbnz	w0, #31, 230ff4 <verify_shutdown_creds+0x134>
  230fa8:	cbz	w0, 231060 <verify_shutdown_creds+0x1a0>
  230fac:	cmp	x25, #0x0
  230fb0:	cset	w8, eq  // eq = none
  230fb4:	orn	w8, w8, w27
  230fb8:	tbnz	w8, #0, 230fe8 <verify_shutdown_creds+0x128>
  230fbc:	add	x6, x23, #0x1b0
  230fc0:	and	w4, w22, #0x1
  230fc4:	mov	w1, #0x16                  	// #22
  230fc8:	mov	w5, #0xffffffff            	// #-1
  230fcc:	mov	x0, x21
  230fd0:	mov	x2, x25
  230fd4:	mov	x3, xzr
  230fd8:	mov	x7, x19
  230fdc:	bl	241160 <bus_verify_polkit_async@plt>
  230fe0:	tbnz	w0, #31, 230ff4 <verify_shutdown_creds+0x134>
  230fe4:	cbz	w0, 231060 <verify_shutdown_creds+0x1a0>
  230fe8:	cbz	w24, 231024 <verify_shutdown_creds+0x164>
  230fec:	mov	w24, wzr
  230ff0:	b	230ff8 <verify_shutdown_creds+0x138>
  230ff4:	mov	w24, w0
  230ff8:	add	x0, x29, #0x18
  230ffc:	bl	230374 <sd_bus_creds_unrefp>
  231000:	mov	w0, w24
  231004:	ldp	x20, x19, [sp, #96]
  231008:	ldp	x22, x21, [sp, #80]
  23100c:	ldp	x24, x23, [sp, #64]
  231010:	ldp	x26, x25, [sp, #48]
  231014:	ldr	x27, [sp, #32]
  231018:	ldp	x29, x30, [sp, #16]
  23101c:	add	sp, sp, #0x70
  231020:	ret
  231024:	cbz	x20, 230fec <verify_shutdown_creds+0x12c>
  231028:	eor	w8, w27, #0x1
  23102c:	tbz	w8, #0, 230fec <verify_shutdown_creds+0x12c>
  231030:	add	x6, x23, #0x1b0
  231034:	and	w4, w22, #0x1
  231038:	mov	w1, #0x16                  	// #22
  23103c:	mov	w5, #0xffffffff            	// #-1
  231040:	mov	x0, x21
  231044:	mov	x2, x20
  231048:	mov	x3, xzr
  23104c:	mov	x7, x19
  231050:	bl	241160 <bus_verify_polkit_async@plt>
  231054:	mov	w24, w0
  231058:	tbnz	w0, #31, 230ff8 <verify_shutdown_creds+0x138>
  23105c:	cbnz	w24, 230fec <verify_shutdown_creds+0x12c>
  231060:	mov	w24, #0x1                   	// #1
  231064:	b	230ff8 <verify_shutdown_creds+0x138>
  231068:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23106c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  231070:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  231074:	add	x1, x1, #0x102
  231078:	add	x2, x2, #0xe6f
  23107c:	add	x4, x4, #0x84e
  231080:	mov	w3, #0x703                 	// #1795
  231084:	bl	240790 <log_assert_failed_realm@plt>
  231088:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23108c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  231090:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  231094:	add	x1, x1, #0x30
  231098:	add	x2, x2, #0xe6f
  23109c:	add	x4, x4, #0x84e
  2310a0:	mov	w3, #0x704                 	// #1796
  2310a4:	mov	w0, wzr
  2310a8:	bl	240790 <log_assert_failed_realm@plt>
  2310ac:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2310b0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2310b4:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2310b8:	add	x1, x1, #0x86d
  2310bc:	add	x2, x2, #0xe6f
  2310c0:	add	x4, x4, #0x84e
  2310c4:	mov	w3, #0x705                 	// #1797
  2310c8:	mov	w0, wzr
  2310cc:	bl	240790 <log_assert_failed_realm@plt>
  2310d0:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  2310d4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2310d8:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2310dc:	add	x1, x1, #0x5b0
  2310e0:	add	x2, x2, #0xe6f
  2310e4:	add	x4, x4, #0x84e
  2310e8:	mov	w3, #0x706                 	// #1798
  2310ec:	mov	w0, wzr
  2310f0:	bl	240790 <log_assert_failed_realm@plt>

00000000002310f4 <have_multiple_sessions>:
  2310f4:	sub	sp, sp, #0x40
  2310f8:	stp	x29, x30, [sp, #32]
  2310fc:	stp	x20, x19, [sp, #48]
  231100:	add	x29, sp, #0x20
  231104:	cbz	x0, 231168 <have_multiple_sessions+0x74>
  231108:	mov	w19, w1
  23110c:	mov	x20, x0
  231110:	mov	w8, #0xfffffffe            	// #-2
  231114:	str	w8, [sp, #8]
  231118:	str	xzr, [sp, #16]
  23111c:	ldr	x0, [x20, #32]
  231120:	add	x1, sp, #0x8
  231124:	sub	x2, x29, #0x8
  231128:	bl	22f5d4 <hashmap_iterate>
  23112c:	tbz	w0, #0, 231154 <have_multiple_sessions+0x60>
  231130:	ldur	x8, [x29, #-8]
  231134:	ldr	w9, [x8, #24]
  231138:	cbnz	w9, 23111c <have_multiple_sessions+0x28>
  23113c:	ldr	x8, [x8, #40]
  231140:	ldr	w8, [x8, #8]
  231144:	cmp	w8, w19
  231148:	b.eq	23111c <have_multiple_sessions+0x28>  // b.none
  23114c:	mov	w0, #0x1                   	// #1
  231150:	b	231158 <have_multiple_sessions+0x64>
  231154:	mov	w0, wzr
  231158:	ldp	x20, x19, [sp, #48]
  23115c:	ldp	x29, x30, [sp, #32]
  231160:	add	sp, sp, #0x40
  231164:	ret
  231168:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23116c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  231170:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  231174:	add	x1, x1, #0x102
  231178:	add	x2, x2, #0xe6f
  23117c:	add	x4, x4, #0xf1c
  231180:	mov	w3, #0x5cd                 	// #1485
  231184:	bl	240790 <log_assert_failed_realm@plt>

0000000000231188 <method_can_shutdown_or_sleep>:
  231188:	sub	sp, sp, #0x80
  23118c:	stp	x29, x30, [sp, #32]
  231190:	add	x29, sp, #0x20
  231194:	stp	x28, x27, [sp, #48]
  231198:	stp	x26, x25, [sp, #64]
  23119c:	stp	x24, x23, [sp, #80]
  2311a0:	stp	x22, x21, [sp, #96]
  2311a4:	stp	x20, x19, [sp, #112]
  2311a8:	stur	xzr, [x29, #-8]
  2311ac:	cbz	x0, 23148c <method_can_shutdown_or_sleep+0x304>
  2311b0:	mov	x19, x1
  2311b4:	cbz	x1, 2314ac <method_can_shutdown_or_sleep+0x324>
  2311b8:	mov	x21, x3
  2311bc:	cbz	x3, 2314d0 <method_can_shutdown_or_sleep+0x348>
  2311c0:	mov	x24, x4
  2311c4:	cbz	x4, 2314f4 <method_can_shutdown_or_sleep+0x36c>
  2311c8:	mov	x22, x5
  2311cc:	cbz	x5, 231518 <method_can_shutdown_or_sleep+0x390>
  2311d0:	mov	x20, x7
  2311d4:	mov	x28, x6
  2311d8:	mov	w25, w2
  2311dc:	mov	x26, x0
  2311e0:	cbz	x6, 23121c <method_can_shutdown_or_sleep+0x94>
  2311e4:	mov	x0, x28
  2311e8:	bl	240c90 <can_sleep@plt>
  2311ec:	cbz	w0, 2311fc <method_can_shutdown_or_sleep+0x74>
  2311f0:	mov	w27, w0
  2311f4:	cmn	w0, #0x1c
  2311f8:	b.ne	231218 <method_can_shutdown_or_sleep+0x90>  // b.any
  2311fc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  231200:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  231204:	add	x1, x1, #0x6de
  231208:	add	x2, x2, #0x8d3
  23120c:	mov	x0, x19
  231210:	bl	2410a0 <sd_bus_reply_method_return@plt>
  231214:	b	2312d8 <method_can_shutdown_or_sleep+0x150>
  231218:	tbnz	w27, #31, 2312dc <method_can_shutdown_or_sleep+0x154>
  23121c:	sub	x2, x29, #0x8
  231220:	mov	w1, #0x10                  	// #16
  231224:	mov	x0, x19
  231228:	bl	240f60 <sd_bus_query_sender_creds@plt>
  23122c:	tbnz	w0, #31, 2312d8 <method_can_shutdown_or_sleep+0x150>
  231230:	ldur	x0, [x29, #-8]
  231234:	sub	x1, x29, #0xc
  231238:	bl	241180 <sd_bus_creds_get_euid@plt>
  23123c:	tbnz	w0, #31, 2312d8 <method_can_shutdown_or_sleep+0x150>
  231240:	ldur	w1, [x29, #-12]
  231244:	mov	x0, x26
  231248:	bl	2310f4 <have_multiple_sessions>
  23124c:	mov	w23, w0
  231250:	tbnz	w0, #31, 231308 <method_can_shutdown_or_sleep+0x180>
  231254:	ldur	w6, [x29, #-12]
  231258:	mov	w5, #0x1                   	// #1
  23125c:	mov	x0, x26
  231260:	mov	w1, w25
  231264:	mov	w2, wzr
  231268:	mov	x3, xzr
  23126c:	mov	w4, wzr
  231270:	mov	x7, xzr
  231274:	bl	233000 <manager_is_inhibited>
  231278:	mov	w25, w0
  23127c:	mov	x0, x28
  231280:	bl	2264f4 <handle_action_from_string>
  231284:	tbnz	w0, #31, 231310 <method_can_shutdown_or_sleep+0x188>
  231288:	bl	225e70 <manager_target_for_action>
  23128c:	cbz	x0, 231318 <method_can_shutdown_or_sleep+0x190>
  231290:	str	xzr, [sp, #8]
  231294:	mov	x1, x0
  231298:	ldr	x0, [x26, #8]
  23129c:	add	x2, sp, #0x8
  2312a0:	bl	240fc0 <unit_load_state@plt>
  2312a4:	mov	w27, w0
  2312a8:	tbnz	w0, #31, 231320 <method_can_shutdown_or_sleep+0x198>
  2312ac:	ldr	x0, [sp, #8]
  2312b0:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2312b4:	add	x1, x1, #0xaa5
  2312b8:	bl	240c30 <strcmp@plt>
  2312bc:	adrp	x8, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2312c0:	add	x8, x8, #0x57d
  2312c4:	cmp	w0, #0x0
  2312c8:	mov	w9, #0x11                  	// #17
  2312cc:	csel	x26, xzr, x8, eq  // eq = none
  2312d0:	csel	w28, wzr, w9, eq  // eq = none
  2312d4:	b	231328 <method_can_shutdown_or_sleep+0x1a0>
  2312d8:	mov	w27, w0
  2312dc:	sub	x0, x29, #0x8
  2312e0:	bl	230374 <sd_bus_creds_unrefp>
  2312e4:	mov	w0, w27
  2312e8:	ldp	x20, x19, [sp, #112]
  2312ec:	ldp	x22, x21, [sp, #96]
  2312f0:	ldp	x24, x23, [sp, #80]
  2312f4:	ldp	x26, x25, [sp, #64]
  2312f8:	ldp	x28, x27, [sp, #48]
  2312fc:	ldp	x29, x30, [sp, #32]
  231300:	add	sp, sp, #0x80
  231304:	ret
  231308:	mov	w27, w23
  23130c:	b	2312dc <method_can_shutdown_or_sleep+0x154>
  231310:	mov	x26, xzr
  231314:	b	231344 <method_can_shutdown_or_sleep+0x1bc>
  231318:	mov	x26, xzr
  23131c:	b	231334 <method_can_shutdown_or_sleep+0x1ac>
  231320:	mov	x26, xzr
  231324:	mov	w28, #0x1                   	// #1
  231328:	add	x0, sp, #0x8
  23132c:	bl	229b20 <freep>
  231330:	cbnz	w28, 231338 <method_can_shutdown_or_sleep+0x1b0>
  231334:	mov	w28, wzr
  231338:	cmp	w28, #0x11
  23133c:	b.eq	23146c <method_can_shutdown_or_sleep+0x2e4>  // b.none
  231340:	cbnz	w28, 2312dc <method_can_shutdown_or_sleep+0x154>
  231344:	cbz	w23, 23139c <method_can_shutdown_or_sleep+0x214>
  231348:	add	x5, sp, #0x8
  23134c:	mov	w1, #0x16                  	// #22
  231350:	mov	w4, #0xffffffff            	// #-1
  231354:	mov	x0, x19
  231358:	mov	x2, x24
  23135c:	mov	x3, xzr
  231360:	mov	x6, x20
  231364:	bl	241410 <bus_test_polkit@plt>
  231368:	mov	w27, w0
  23136c:	tbnz	w0, #31, 2312dc <method_can_shutdown_or_sleep+0x154>
  231370:	cbz	w27, 231380 <method_can_shutdown_or_sleep+0x1f8>
  231374:	adrp	x26, 208000 <inhibit_what_to_string.buffer+0x208000>
  231378:	add	x26, x26, #0x5f9
  23137c:	b	23139c <method_can_shutdown_or_sleep+0x214>
  231380:	ldrb	w8, [sp, #8]
  231384:	adrp	x9, 211000 <inhibit_what_to_string.buffer+0x211000>
  231388:	adrp	x10, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23138c:	add	x9, x9, #0xc91
  231390:	add	x10, x10, #0x57d
  231394:	cmp	w8, #0x0
  231398:	csel	x26, x10, x9, eq  // eq = none
  23139c:	tbz	w25, #0, 2313dc <method_can_shutdown_or_sleep+0x254>
  2313a0:	add	x5, sp, #0x8
  2313a4:	mov	w1, #0x16                  	// #22
  2313a8:	mov	w4, #0xffffffff            	// #-1
  2313ac:	mov	x0, x19
  2313b0:	mov	x2, x22
  2313b4:	mov	x3, xzr
  2313b8:	mov	x6, x20
  2313bc:	bl	241410 <bus_test_polkit@plt>
  2313c0:	mov	w27, w0
  2313c4:	tbnz	w0, #31, 2312dc <method_can_shutdown_or_sleep+0x154>
  2313c8:	cbz	w27, 231424 <method_can_shutdown_or_sleep+0x29c>
  2313cc:	adrp	x8, 208000 <inhibit_what_to_string.buffer+0x208000>
  2313d0:	add	x8, x8, #0x5f9
  2313d4:	cmp	x26, #0x0
  2313d8:	csel	x26, x8, x26, eq  // eq = none
  2313dc:	cmp	w23, #0x0
  2313e0:	cset	w8, ne  // ne = any
  2313e4:	orr	w8, w8, w25
  2313e8:	tbnz	w8, #0, 23146c <method_can_shutdown_or_sleep+0x2e4>
  2313ec:	add	x5, sp, #0x8
  2313f0:	mov	w1, #0x16                  	// #22
  2313f4:	mov	w4, #0xffffffff            	// #-1
  2313f8:	mov	x0, x19
  2313fc:	mov	x2, x21
  231400:	mov	x3, xzr
  231404:	mov	x6, x20
  231408:	bl	241410 <bus_test_polkit@plt>
  23140c:	mov	w27, w0
  231410:	tbnz	w0, #31, 2312dc <method_can_shutdown_or_sleep+0x154>
  231414:	cbz	w27, 231450 <method_can_shutdown_or_sleep+0x2c8>
  231418:	adrp	x26, 208000 <inhibit_what_to_string.buffer+0x208000>
  23141c:	add	x26, x26, #0x5f9
  231420:	b	23146c <method_can_shutdown_or_sleep+0x2e4>
  231424:	ldrb	w8, [sp, #8]
  231428:	cbz	w8, 231480 <method_can_shutdown_or_sleep+0x2f8>
  23142c:	cbz	x26, 231444 <method_can_shutdown_or_sleep+0x2bc>
  231430:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  231434:	add	x1, x1, #0x5f9
  231438:	mov	x0, x26
  23143c:	bl	240c30 <strcmp@plt>
  231440:	cbnz	w0, 2313dc <method_can_shutdown_or_sleep+0x254>
  231444:	adrp	x26, 211000 <inhibit_what_to_string.buffer+0x211000>
  231448:	add	x26, x26, #0xc91
  23144c:	b	2313dc <method_can_shutdown_or_sleep+0x254>
  231450:	ldrb	w8, [sp, #8]
  231454:	adrp	x9, 211000 <inhibit_what_to_string.buffer+0x211000>
  231458:	adrp	x10, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23145c:	add	x9, x9, #0xc91
  231460:	add	x10, x10, #0x57d
  231464:	cmp	w8, #0x0
  231468:	csel	x26, x10, x9, eq  // eq = none
  23146c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  231470:	add	x1, x1, #0x6de
  231474:	mov	x0, x19
  231478:	mov	x2, x26
  23147c:	b	231210 <method_can_shutdown_or_sleep+0x88>
  231480:	adrp	x26, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  231484:	add	x26, x26, #0x57d
  231488:	b	2313dc <method_can_shutdown_or_sleep+0x254>
  23148c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  231490:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  231494:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  231498:	add	x1, x1, #0x102
  23149c:	add	x2, x2, #0xe6f
  2314a0:	add	x4, x4, #0x252
  2314a4:	mov	w3, #0x8f6                 	// #2294
  2314a8:	bl	240790 <log_assert_failed_realm@plt>
  2314ac:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2314b0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2314b4:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2314b8:	add	x1, x1, #0x30
  2314bc:	add	x2, x2, #0xe6f
  2314c0:	add	x4, x4, #0x252
  2314c4:	mov	w3, #0x8f7                 	// #2295
  2314c8:	mov	w0, wzr
  2314cc:	bl	240790 <log_assert_failed_realm@plt>
  2314d0:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  2314d4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2314d8:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2314dc:	add	x1, x1, #0x1c
  2314e0:	add	x2, x2, #0xe6f
  2314e4:	add	x4, x4, #0x252
  2314e8:	mov	w3, #0x8fa                 	// #2298
  2314ec:	mov	w0, wzr
  2314f0:	bl	240790 <log_assert_failed_realm@plt>
  2314f4:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2314f8:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2314fc:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  231500:	add	x1, x1, #0xd82
  231504:	add	x2, x2, #0xe6f
  231508:	add	x4, x4, #0x252
  23150c:	mov	w3, #0x8fb                 	// #2299
  231510:	mov	w0, wzr
  231514:	bl	240790 <log_assert_failed_realm@plt>
  231518:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23151c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  231520:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  231524:	add	x1, x1, #0xf49
  231528:	add	x2, x2, #0xe6f
  23152c:	add	x4, x4, #0x252
  231530:	mov	w3, #0x8fc                 	// #2300
  231534:	mov	w0, wzr
  231538:	bl	240790 <log_assert_failed_realm@plt>

000000000023153c <manager_scheduled_shutdown_handler>:
  23153c:	sub	sp, sp, #0x50
  231540:	stp	x29, x30, [sp, #32]
  231544:	str	x21, [sp, #48]
  231548:	stp	x20, x19, [sp, #64]
  23154c:	add	x29, sp, #0x20
  231550:	stp	xzr, xzr, [sp, #8]
  231554:	str	xzr, [sp, #24]
  231558:	cbz	x2, 2316fc <manager_scheduled_shutdown_handler+0x1c0>
  23155c:	ldr	x20, [x2, #280]
  231560:	mov	x19, x2
  231564:	mov	x0, x20
  231568:	bl	22fbe8 <isempty>
  23156c:	tbz	w0, #0, 231578 <manager_scheduled_shutdown_handler+0x3c>
  231570:	mov	w21, wzr
  231574:	b	231628 <manager_scheduled_shutdown_handler+0xec>
  231578:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23157c:	add	x1, x1, #0xf47
  231580:	mov	x0, x20
  231584:	bl	240c30 <strcmp@plt>
  231588:	cbz	w0, 2315c0 <manager_scheduled_shutdown_handler+0x84>
  23158c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  231590:	add	x1, x1, #0x662
  231594:	mov	x0, x20
  231598:	bl	240c30 <strcmp@plt>
  23159c:	cbz	w0, 2315cc <manager_scheduled_shutdown_handler+0x90>
  2315a0:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2315a4:	add	x1, x1, #0x965
  2315a8:	mov	x0, x20
  2315ac:	bl	240c30 <strcmp@plt>
  2315b0:	cbnz	w0, 231720 <manager_scheduled_shutdown_handler+0x1e4>
  2315b4:	adrp	x20, 211000 <inhibit_what_to_string.buffer+0x211000>
  2315b8:	add	x20, x20, #0xb85
  2315bc:	b	2315d4 <manager_scheduled_shutdown_handler+0x98>
  2315c0:	adrp	x20, 210000 <inhibit_what_to_string.buffer+0x210000>
  2315c4:	add	x20, x20, #0xae6
  2315c8:	b	2315d4 <manager_scheduled_shutdown_handler+0x98>
  2315cc:	adrp	x20, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2315d0:	add	x20, x20, #0x932
  2315d4:	ldr	w8, [x19, #248]
  2315d8:	cmp	w8, #0x1
  2315dc:	b.lt	231648 <manager_scheduled_shutdown_handler+0x10c>  // b.tstop
  2315e0:	mov	w0, wzr
  2315e4:	bl	240750 <log_get_max_level_realm@plt>
  2315e8:	cmp	w0, #0x3
  2315ec:	b.lt	23161c <manager_scheduled_shutdown_handler+0xe0>  // b.tstop
  2315f0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2315f4:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2315f8:	adrp	x5, 210000 <inhibit_what_to_string.buffer+0x210000>
  2315fc:	add	x2, x2, #0xe6f
  231600:	add	x4, x4, #0xd9b
  231604:	add	x5, x5, #0x1b5
  231608:	mov	w0, #0x3                   	// #3
  23160c:	mov	w3, #0x83c                 	// #2108
  231610:	mov	w1, wzr
  231614:	mov	x6, x20
  231618:	bl	240770 <log_internal_realm@plt>
  23161c:	mov	w21, #0xffffff8e            	// #-114
  231620:	mov	x0, x19
  231624:	bl	2319dc <reset_scheduled_shutdown>
  231628:	add	x0, sp, #0x8
  23162c:	bl	240c80 <sd_bus_error_free@plt>
  231630:	mov	w0, w21
  231634:	ldp	x20, x19, [sp, #64]
  231638:	ldr	x21, [sp, #48]
  23163c:	ldp	x29, x30, [sp, #32]
  231640:	add	sp, sp, #0x50
  231644:	ret
  231648:	ldrb	w8, [x19, #360]
  23164c:	cbz	w8, 2316a0 <manager_scheduled_shutdown_handler+0x164>
  231650:	mov	x0, x19
  231654:	mov	x1, x20
  231658:	bl	230390 <bus_manager_log_shutdown>
  23165c:	mov	w0, wzr
  231660:	bl	240750 <log_get_max_level_realm@plt>
  231664:	cmp	w0, #0x6
  231668:	b.lt	231694 <manager_scheduled_shutdown_handler+0x158>  // b.tstop
  23166c:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  231670:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  231674:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  231678:	add	x2, x2, #0xe6f
  23167c:	add	x4, x4, #0xd9b
  231680:	add	x5, x5, #0xb2b
  231684:	mov	w0, #0x6                   	// #6
  231688:	mov	w3, #0x847                 	// #2119
  23168c:	mov	w1, wzr
  231690:	bl	240770 <log_internal_realm@plt>
  231694:	mov	x0, x19
  231698:	bl	2319dc <reset_scheduled_shutdown>
  23169c:	b	231570 <manager_scheduled_shutdown_handler+0x34>
  2316a0:	add	x3, sp, #0x8
  2316a4:	mov	w2, #0x1                   	// #1
  2316a8:	mov	x0, x19
  2316ac:	mov	x1, x20
  2316b0:	bl	229cf8 <bus_manager_shutdown_or_sleep_now_or_later>
  2316b4:	tbz	w0, #31, 231570 <manager_scheduled_shutdown_handler+0x34>
  2316b8:	mov	w21, w0
  2316bc:	mov	w0, wzr
  2316c0:	bl	240750 <log_get_max_level_realm@plt>
  2316c4:	cmp	w0, #0x3
  2316c8:	b.lt	231620 <manager_scheduled_shutdown_handler+0xe4>  // b.tstop
  2316cc:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2316d0:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2316d4:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  2316d8:	add	x2, x2, #0xe6f
  2316dc:	add	x4, x4, #0xd9b
  2316e0:	add	x5, x5, #0x23
  2316e4:	mov	w0, #0x3                   	// #3
  2316e8:	mov	w3, #0x84f                 	// #2127
  2316ec:	mov	w1, w21
  2316f0:	mov	x6, x20
  2316f4:	bl	240770 <log_internal_realm@plt>
  2316f8:	b	231620 <manager_scheduled_shutdown_handler+0xe4>
  2316fc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  231700:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  231704:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  231708:	add	x1, x1, #0x102
  23170c:	add	x2, x2, #0xe6f
  231710:	add	x4, x4, #0xbb
  231714:	mov	w3, #0x82b                 	// #2091
  231718:	mov	w0, wzr
  23171c:	bl	240790 <log_assert_failed_realm@plt>
  231720:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  231724:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  231728:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  23172c:	add	x1, x1, #0xa30
  231730:	add	x2, x2, #0xe6f
  231734:	add	x4, x4, #0xbb
  231738:	mov	w3, #0x837                 	// #2103
  23173c:	mov	w0, wzr
  231740:	bl	241420 <log_assert_failed_unreachable_realm@plt>

0000000000231744 <nologin_timeout_handler>:
  231744:	stp	x29, x30, [sp, #-32]!
  231748:	mov	w0, wzr
  23174c:	str	x19, [sp, #16]
  231750:	mov	x29, sp
  231754:	mov	x19, x2
  231758:	bl	240750 <log_get_max_level_realm@plt>
  23175c:	cmp	w0, #0x6
  231760:	b.lt	23178c <nologin_timeout_handler+0x48>  // b.tstop
  231764:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  231768:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  23176c:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  231770:	add	x2, x2, #0xe6f
  231774:	add	x4, x4, #0x109
  231778:	add	x5, x5, #0xdb7
  23177c:	mov	w0, #0x6                   	// #6
  231780:	mov	w3, #0x7cf                 	// #1999
  231784:	mov	w1, wzr
  231788:	bl	240770 <log_internal_realm@plt>
  23178c:	bl	241430 <create_shutdown_run_nologin_or_warn@plt>
  231790:	mvn	w8, w0
  231794:	lsr	w8, w8, #31
  231798:	strb	w8, [x19, #328]
  23179c:	ldr	x19, [sp, #16]
  2317a0:	mov	w0, wzr
  2317a4:	ldp	x29, x30, [sp], #32
  2317a8:	ret

00000000002317ac <update_schedule_file>:
  2317ac:	sub	sp, sp, #0x40
  2317b0:	stp	x29, x30, [sp, #32]
  2317b4:	add	x29, sp, #0x20
  2317b8:	stp	x20, x19, [sp, #48]
  2317bc:	stur	xzr, [x29, #-8]
  2317c0:	str	xzr, [sp, #16]
  2317c4:	cbz	x0, 2319bc <update_schedule_file+0x210>
  2317c8:	mov	x20, x0
  2317cc:	adrp	x0, 211000 <inhibit_what_to_string.buffer+0x211000>
  2317d0:	add	x0, x0, #0x7dd
  2317d4:	mov	w1, #0x1ed                 	// #493
  2317d8:	mov	w4, #0x2                   	// #2
  2317dc:	mov	w2, wzr
  2317e0:	mov	w3, wzr
  2317e4:	bl	2411a0 <mkdir_safe_label@plt>
  2317e8:	tbnz	w0, #31, 23186c <update_schedule_file+0xc0>
  2317ec:	adrp	x0, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2317f0:	add	x0, x0, #0xbe4
  2317f4:	add	x1, sp, #0x10
  2317f8:	sub	x2, x29, #0x8
  2317fc:	bl	241440 <fopen_temporary@plt>
  231800:	mov	w19, w0
  231804:	tbnz	w0, #31, 2318a4 <update_schedule_file+0xf8>
  231808:	ldr	x0, [sp, #16]
  23180c:	bl	241450 <fileno@plt>
  231810:	mov	w1, #0x1a4                 	// #420
  231814:	bl	241460 <fchmod@plt>
  231818:	ldr	x0, [sp, #16]
  23181c:	ldr	w3, [x20, #344]
  231820:	ldp	x4, x2, [x20, #280]
  231824:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  231828:	add	x1, x1, #0x107
  23182c:	bl	241470 <fprintf@plt>
  231830:	ldr	x20, [x20, #336]
  231834:	mov	x0, x20
  231838:	bl	22fbe8 <isempty>
  23183c:	tbnz	w0, #0, 2318f8 <update_schedule_file+0x14c>
  231840:	mov	x0, x20
  231844:	bl	2411b0 <cescape@plt>
  231848:	str	x0, [sp, #8]
  23184c:	cbz	x0, 2318e4 <update_schedule_file+0x138>
  231850:	mov	x2, x0
  231854:	ldr	x0, [sp, #16]
  231858:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  23185c:	add	x1, x1, #0xcbf
  231860:	bl	241470 <fprintf@plt>
  231864:	mov	w20, #0x1                   	// #1
  231868:	b	2318ec <update_schedule_file+0x140>
  23186c:	mov	w19, w0
  231870:	mov	w0, wzr
  231874:	bl	240750 <log_get_max_level_realm@plt>
  231878:	cmp	w0, #0x3
  23187c:	b.lt	2318d8 <update_schedule_file+0x12c>  // b.tstop
  231880:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  231884:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  231888:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23188c:	add	x2, x2, #0xe6f
  231890:	add	x4, x4, #0x4d9
  231894:	add	x5, x5, #0x7c4
  231898:	mov	w0, #0x3                   	// #3
  23189c:	mov	w3, #0x7e0                 	// #2016
  2318a0:	b	231978 <update_schedule_file+0x1cc>
  2318a4:	mov	w0, wzr
  2318a8:	bl	240750 <log_get_max_level_realm@plt>
  2318ac:	cmp	w0, #0x3
  2318b0:	b.lt	2318d8 <update_schedule_file+0x12c>  // b.tstop
  2318b4:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2318b8:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2318bc:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  2318c0:	add	x2, x2, #0xe6f
  2318c4:	add	x4, x4, #0x4d9
  2318c8:	add	x5, x5, #0x2d8
  2318cc:	mov	w0, #0x3                   	// #3
  2318d0:	mov	w3, #0x7e4                 	// #2020
  2318d4:	b	231978 <update_schedule_file+0x1cc>
  2318d8:	mov	w8, wzr
  2318dc:	neg	w9, w19
  2318e0:	b	231994 <update_schedule_file+0x1e8>
  2318e4:	mov	w20, wzr
  2318e8:	mov	w19, #0xfffffff4            	// #-12
  2318ec:	add	x0, sp, #0x8
  2318f0:	bl	229b20 <freep>
  2318f4:	cbz	w20, 231934 <update_schedule_file+0x188>
  2318f8:	ldr	x0, [sp, #16]
  2318fc:	bl	241480 <fflush_and_check@plt>
  231900:	tbnz	w0, #31, 231920 <update_schedule_file+0x174>
  231904:	ldur	x0, [x29, #-8]
  231908:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23190c:	add	x1, x1, #0xbe4
  231910:	bl	241490 <rename@plt>
  231914:	tbnz	w0, #31, 231928 <update_schedule_file+0x17c>
  231918:	mov	w19, wzr
  23191c:	b	231998 <update_schedule_file+0x1ec>
  231920:	mov	w19, w0
  231924:	b	231934 <update_schedule_file+0x188>
  231928:	bl	240930 <__errno_location@plt>
  23192c:	ldr	w8, [x0]
  231930:	neg	w19, w8
  231934:	ldur	x0, [x29, #-8]
  231938:	bl	2411d0 <unlink@plt>
  23193c:	adrp	x0, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  231940:	add	x0, x0, #0xbe4
  231944:	bl	2411d0 <unlink@plt>
  231948:	mov	w0, wzr
  23194c:	bl	240750 <log_get_max_level_realm@plt>
  231950:	cmp	w0, #0x3
  231954:	b.lt	231988 <update_schedule_file+0x1dc>  // b.tstop
  231958:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  23195c:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  231960:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  231964:	add	x2, x2, #0xe6f
  231968:	add	x4, x4, #0x4d9
  23196c:	add	x5, x5, #0x5cc
  231970:	mov	w0, #0x3                   	// #3
  231974:	mov	w3, #0x80b                 	// #2059
  231978:	mov	w1, w19
  23197c:	bl	240770 <log_internal_realm@plt>
  231980:	mov	w19, w0
  231984:	b	231998 <update_schedule_file+0x1ec>
  231988:	cmp	w19, #0x0
  23198c:	mov	w8, wzr
  231990:	cneg	w9, w19, mi  // mi = first
  231994:	sub	w19, w8, w9, uxtb
  231998:	add	x0, sp, #0x10
  23199c:	bl	231a80 <fclosep>
  2319a0:	sub	x0, x29, #0x8
  2319a4:	bl	229b20 <freep>
  2319a8:	mov	w0, w19
  2319ac:	ldp	x20, x19, [sp, #48]
  2319b0:	ldp	x29, x30, [sp, #32]
  2319b4:	add	sp, sp, #0x40
  2319b8:	ret
  2319bc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2319c0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  2319c4:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2319c8:	add	x1, x1, #0x102
  2319cc:	add	x2, x2, #0xe6f
  2319d0:	add	x4, x4, #0x8d6
  2319d4:	mov	w3, #0x7dc                 	// #2012
  2319d8:	bl	240790 <log_assert_failed_realm@plt>

00000000002319dc <reset_scheduled_shutdown>:
  2319dc:	stp	x29, x30, [sp, #-32]!
  2319e0:	str	x19, [sp, #16]
  2319e4:	mov	x29, sp
  2319e8:	cbz	x0, 231a60 <reset_scheduled_shutdown+0x84>
  2319ec:	mov	x19, x0
  2319f0:	ldr	x0, [x0, #296]
  2319f4:	bl	240810 <sd_event_source_unref@plt>
  2319f8:	ldr	x8, [x19, #352]
  2319fc:	str	x0, [x19, #296]
  231a00:	mov	x0, x8
  231a04:	bl	240810 <sd_event_source_unref@plt>
  231a08:	ldr	x8, [x19, #320]
  231a0c:	str	x0, [x19, #352]
  231a10:	mov	x0, x8
  231a14:	bl	240810 <sd_event_source_unref@plt>
  231a18:	ldr	x8, [x19, #280]
  231a1c:	str	x0, [x19, #320]
  231a20:	mov	x0, x8
  231a24:	bl	22f1b8 <mfree>
  231a28:	ldrb	w8, [x19, #328]
  231a2c:	strb	wzr, [x19, #360]
  231a30:	stp	xzr, xzr, [x19, #280]
  231a34:	cbz	w8, 231a48 <reset_scheduled_shutdown+0x6c>
  231a38:	adrp	x0, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  231a3c:	add	x0, x0, #0x85e
  231a40:	bl	240840 <unlink_or_warn@plt>
  231a44:	strb	wzr, [x19, #328]
  231a48:	adrp	x0, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  231a4c:	add	x0, x0, #0xbe4
  231a50:	bl	2411d0 <unlink@plt>
  231a54:	ldr	x19, [sp, #16]
  231a58:	ldp	x29, x30, [sp], #32
  231a5c:	ret
  231a60:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  231a64:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  231a68:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  231a6c:	add	x1, x1, #0x102
  231a70:	add	x2, x2, #0xe6f
  231a74:	add	x4, x4, #0x1f7
  231a78:	mov	w3, #0x80f                 	// #2063
  231a7c:	bl	240790 <log_assert_failed_realm@plt>

0000000000231a80 <fclosep>:
  231a80:	stp	x29, x30, [sp, #-16]!
  231a84:	ldr	x0, [x0]
  231a88:	mov	x29, sp
  231a8c:	bl	2414a0 <safe_fclose@plt>
  231a90:	ldp	x29, x30, [sp], #16
  231a94:	ret

0000000000231a98 <closep>:
  231a98:	stp	x29, x30, [sp, #-16]!
  231a9c:	ldr	w0, [x0]
  231aa0:	mov	x29, sp
  231aa4:	bl	240820 <safe_close@plt>
  231aa8:	ldp	x29, x30, [sp], #16
  231aac:	ret

0000000000231ab0 <return_test_polkit>:
  231ab0:	stp	x29, x30, [sp, #-32]!
  231ab4:	mov	x29, sp
  231ab8:	mov	x6, x2
  231abc:	mov	x2, x1
  231ac0:	add	x5, x29, #0x1c
  231ac4:	mov	w1, #0x15                  	// #21
  231ac8:	mov	w4, #0xffffffff            	// #-1
  231acc:	mov	x3, xzr
  231ad0:	str	x19, [sp, #16]
  231ad4:	mov	x19, x0
  231ad8:	bl	241410 <bus_test_polkit@plt>
  231adc:	tbnz	w0, #31, 231b1c <return_test_polkit+0x6c>
  231ae0:	ldrb	w8, [x29, #28]
  231ae4:	adrp	x9, 211000 <inhibit_what_to_string.buffer+0x211000>
  231ae8:	adrp	x10, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  231aec:	add	x9, x9, #0xc91
  231af0:	add	x10, x10, #0x57d
  231af4:	adrp	x11, 208000 <inhibit_what_to_string.buffer+0x208000>
  231af8:	cmp	w8, #0x0
  231afc:	add	x11, x11, #0x5f9
  231b00:	csel	x8, x10, x9, eq  // eq = none
  231b04:	cmp	w0, #0x0
  231b08:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  231b0c:	csel	x2, x8, x11, eq  // eq = none
  231b10:	add	x1, x1, #0x6de
  231b14:	mov	x0, x19
  231b18:	bl	2410a0 <sd_bus_reply_method_return@plt>
  231b1c:	ldr	x19, [sp, #16]
  231b20:	ldp	x29, x30, [sp], #32
  231b24:	ret

0000000000231b28 <boot_loader_entry_exists>:
  231b28:	sub	sp, sp, #0x80
  231b2c:	movi	v0.2d, #0x0
  231b30:	stp	x29, x30, [sp, #96]
  231b34:	stp	x20, x19, [sp, #112]
  231b38:	add	x29, sp, #0x60
  231b3c:	str	xzr, [sp, #80]
  231b40:	stp	q0, q0, [sp, #48]
  231b44:	stp	q0, q0, [sp, #16]
  231b48:	str	q0, [sp]
  231b4c:	cbz	x0, 231bac <boot_loader_entry_exists+0x84>
  231b50:	mov	x19, x0
  231b54:	mov	x2, sp
  231b58:	mov	x0, xzr
  231b5c:	mov	x1, xzr
  231b60:	bl	241050 <boot_entries_load_config_auto@plt>
  231b64:	tbz	w0, #31, 231b74 <boot_loader_entry_exists+0x4c>
  231b68:	mov	w20, w0
  231b6c:	cmn	w0, #0x7e
  231b70:	b.ne	231b90 <boot_loader_entry_exists+0x68>  // b.any
  231b74:	mov	x0, sp
  231b78:	mov	w1, #0x1                   	// #1
  231b7c:	bl	241060 <boot_entries_augment_from_loader@plt>
  231b80:	mov	x0, sp
  231b84:	mov	x1, x19
  231b88:	bl	231bcc <boot_config_has_entry>
  231b8c:	and	w20, w0, #0x1
  231b90:	mov	x0, sp
  231b94:	bl	241090 <boot_config_free@plt>
  231b98:	mov	w0, w20
  231b9c:	ldp	x20, x19, [sp, #112]
  231ba0:	ldp	x29, x30, [sp, #96]
  231ba4:	add	sp, sp, #0x80
  231ba8:	ret
  231bac:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  231bb0:	adrp	x2, 206000 <inhibit_what_to_string.buffer+0x206000>
  231bb4:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  231bb8:	add	x1, x1, #0x11a
  231bbc:	add	x2, x2, #0xe6f
  231bc0:	add	x4, x4, #0x988
  231bc4:	mov	w3, #0xb91                 	// #2961
  231bc8:	bl	240790 <log_assert_failed_realm@plt>

0000000000231bcc <boot_config_has_entry>:
  231bcc:	stp	x29, x30, [sp, #-48]!
  231bd0:	stp	x22, x21, [sp, #16]
  231bd4:	stp	x20, x19, [sp, #32]
  231bd8:	ldr	x8, [x0, #72]
  231bdc:	mov	x29, sp
  231be0:	cbz	x8, 231c1c <boot_config_has_entry+0x50>
  231be4:	ldr	x8, [x0, #64]
  231be8:	mov	x19, x0
  231bec:	mov	x20, x1
  231bf0:	mov	x21, xzr
  231bf4:	add	x22, x8, #0x8
  231bf8:	ldr	x0, [x22]
  231bfc:	mov	x1, x20
  231c00:	bl	240c30 <strcmp@plt>
  231c04:	cbz	w0, 231c24 <boot_config_has_entry+0x58>
  231c08:	ldr	x8, [x19, #72]
  231c0c:	add	x21, x21, #0x1
  231c10:	add	x22, x22, #0x70
  231c14:	cmp	x21, x8
  231c18:	b.cc	231bf8 <boot_config_has_entry+0x2c>  // b.lo, b.ul, b.last
  231c1c:	mov	w0, wzr
  231c20:	b	231c28 <boot_config_has_entry+0x5c>
  231c24:	mov	w0, #0x1                   	// #1
  231c28:	ldp	x20, x19, [sp, #32]
  231c2c:	ldp	x22, x21, [sp, #16]
  231c30:	ldp	x29, x30, [sp], #48
  231c34:	ret

0000000000231c38 <empty_to_null>:
  231c38:	stp	x29, x30, [sp, #-32]!
  231c3c:	str	x19, [sp, #16]
  231c40:	mov	x29, sp
  231c44:	mov	x19, x0
  231c48:	bl	22fbe8 <isempty>
  231c4c:	tst	w0, #0x1
  231c50:	csel	x0, xzr, x19, ne  // ne = any
  231c54:	ldr	x19, [sp, #16]
  231c58:	ldp	x29, x30, [sp], #32
  231c5c:	ret

0000000000231c60 <device_new>:
  231c60:	stp	x29, x30, [sp, #-48]!
  231c64:	stp	x22, x21, [sp, #16]
  231c68:	stp	x20, x19, [sp, #32]
  231c6c:	mov	x29, sp
  231c70:	cbz	x0, 231cfc <device_new+0x9c>
  231c74:	mov	x22, x1
  231c78:	cbz	x1, 231d1c <device_new+0xbc>
  231c7c:	mov	x20, x0
  231c80:	mov	w0, #0x1                   	// #1
  231c84:	mov	w1, #0x48                  	// #72
  231c88:	mov	w21, w2
  231c8c:	bl	240cf0 <calloc@plt>
  231c90:	mov	x19, x0
  231c94:	cbz	x0, 231ce8 <device_new+0x88>
  231c98:	mov	x0, x22
  231c9c:	bl	240c40 <strdup@plt>
  231ca0:	str	x0, [x19, #8]
  231ca4:	cbz	x0, 231cdc <device_new+0x7c>
  231ca8:	mov	x1, x0
  231cac:	ldr	x0, [x20, #16]
  231cb0:	mov	x2, x19
  231cb4:	bl	240d00 <hashmap_put@plt>
  231cb8:	tbnz	w0, #31, 231cd4 <device_new+0x74>
  231cbc:	and	w8, w21, #0x1
  231cc0:	add	x0, x19, #0x20
  231cc4:	str	x20, [x19]
  231cc8:	strb	w8, [x19, #24]
  231ccc:	bl	2414b0 <dual_timestamp_get@plt>
  231cd0:	b	231ce8 <device_new+0x88>
  231cd4:	ldr	x0, [x19, #8]
  231cd8:	bl	240890 <free@plt>
  231cdc:	mov	x0, x19
  231ce0:	bl	231d40 <mfree>
  231ce4:	mov	x19, xzr
  231ce8:	mov	x0, x19
  231cec:	ldp	x20, x19, [sp, #32]
  231cf0:	ldp	x22, x21, [sp, #16]
  231cf4:	ldp	x29, x30, [sp], #48
  231cf8:	ret
  231cfc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  231d00:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  231d04:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  231d08:	add	x1, x1, #0x102
  231d0c:	add	x2, x2, #0xc86
  231d10:	add	x4, x4, #0xca0
  231d14:	mov	w3, #0xd                   	// #13
  231d18:	bl	240790 <log_assert_failed_realm@plt>
  231d1c:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  231d20:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  231d24:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  231d28:	add	x1, x1, #0x3e8
  231d2c:	add	x2, x2, #0xc86
  231d30:	add	x4, x4, #0xca0
  231d34:	mov	w3, #0xe                   	// #14
  231d38:	mov	w0, wzr
  231d3c:	bl	240790 <log_assert_failed_realm@plt>

0000000000231d40 <mfree>:
  231d40:	stp	x29, x30, [sp, #-16]!
  231d44:	mov	x29, sp
  231d48:	bl	240890 <free@plt>
  231d4c:	ldp	x29, x30, [sp], #16
  231d50:	ret

0000000000231d54 <device_free>:
  231d54:	stp	x29, x30, [sp, #-32]!
  231d58:	str	x19, [sp, #16]
  231d5c:	mov	x29, sp
  231d60:	cbz	x0, 231d94 <device_free+0x40>
  231d64:	mov	x19, x0
  231d68:	bl	231db4 <device_detach>
  231d6c:	ldp	x8, x1, [x19]
  231d70:	ldr	x0, [x8, #16]
  231d74:	bl	231ea0 <hashmap_remove>
  231d78:	ldr	x0, [x19, #8]
  231d7c:	bl	240890 <free@plt>
  231d80:	mov	x0, x19
  231d84:	bl	240890 <free@plt>
  231d88:	ldr	x19, [sp, #16]
  231d8c:	ldp	x29, x30, [sp], #32
  231d90:	ret
  231d94:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  231d98:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  231d9c:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  231da0:	add	x1, x1, #0x250
  231da4:	add	x2, x2, #0xc86
  231da8:	add	x4, x4, #0xb8
  231dac:	mov	w3, #0x3b                  	// #59
  231db0:	bl	240790 <log_assert_failed_realm@plt>

0000000000231db4 <device_detach>:
  231db4:	stp	x29, x30, [sp, #-32]!
  231db8:	stp	x20, x19, [sp, #16]
  231dbc:	mov	x29, sp
  231dc0:	cbz	x0, 231e5c <device_detach+0xa8>
  231dc4:	ldr	x8, [x0, #16]
  231dc8:	mov	x19, x0
  231dcc:	cbnz	x8, 231dd8 <device_detach+0x24>
  231dd0:	b	231e50 <device_detach+0x9c>
  231dd4:	bl	238bb4 <session_device_free>
  231dd8:	ldr	x0, [x19, #64]
  231ddc:	cbnz	x0, 231dd4 <device_detach+0x20>
  231de0:	mov	x8, x19
  231de4:	ldr	x9, [x8, #48]!
  231de8:	ldur	x20, [x8, #-32]
  231dec:	cbz	x9, 231df8 <device_detach+0x44>
  231df0:	ldr	x10, [x19, #56]
  231df4:	str	x10, [x9, #56]
  231df8:	ldr	x9, [x19, #56]
  231dfc:	cbz	x9, 231e08 <device_detach+0x54>
  231e00:	add	x9, x9, #0x30
  231e04:	b	231e18 <device_detach+0x64>
  231e08:	add	x9, x20, #0x18
  231e0c:	ldr	x10, [x9]
  231e10:	cmp	x10, x19
  231e14:	b.ne	231e7c <device_detach+0xc8>  // b.any
  231e18:	ldr	x10, [x19, #48]
  231e1c:	mov	x0, x20
  231e20:	str	x10, [x9]
  231e24:	str	xzr, [x19, #16]
  231e28:	stp	xzr, xzr, [x8]
  231e2c:	bl	235a28 <seat_has_master_device>
  231e30:	tbnz	w0, #0, 231e50 <device_detach+0x9c>
  231e34:	mov	x0, x20
  231e38:	bl	235730 <seat_add_to_gc_queue>
  231e3c:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  231e40:	add	x1, x1, #0x2dd
  231e44:	mov	x0, x20
  231e48:	mov	x2, xzr
  231e4c:	bl	234278 <seat_send_changed>
  231e50:	ldp	x20, x19, [sp, #16]
  231e54:	ldp	x29, x30, [sp], #32
  231e58:	ret
  231e5c:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  231e60:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  231e64:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  231e68:	add	x1, x1, #0x250
  231e6c:	add	x2, x2, #0xc86
  231e70:	add	x4, x4, #0xfb9
  231e74:	mov	w3, #0x28                  	// #40
  231e78:	bl	240790 <log_assert_failed_realm@plt>
  231e7c:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  231e80:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  231e84:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  231e88:	add	x1, x1, #0xa19
  231e8c:	add	x2, x2, #0xc86
  231e90:	add	x4, x4, #0xfb9
  231e94:	mov	w3, #0x31                  	// #49
  231e98:	mov	w0, wzr
  231e9c:	bl	240790 <log_assert_failed_realm@plt>

0000000000231ea0 <hashmap_remove>:
  231ea0:	stp	x29, x30, [sp, #-16]!
  231ea4:	mov	x29, sp
  231ea8:	bl	240d20 <internal_hashmap_remove@plt>
  231eac:	ldp	x29, x30, [sp], #16
  231eb0:	ret

0000000000231eb4 <device_attach>:
  231eb4:	stp	x29, x30, [sp, #-32]!
  231eb8:	stp	x20, x19, [sp, #16]
  231ebc:	mov	x29, sp
  231ec0:	cbz	x0, 231f94 <device_attach+0xe0>
  231ec4:	mov	x19, x1
  231ec8:	cbz	x1, 231fb4 <device_attach+0x100>
  231ecc:	ldr	x8, [x0, #16]
  231ed0:	mov	x20, x0
  231ed4:	cmp	x8, x19
  231ed8:	b.eq	231f50 <device_attach+0x9c>  // b.none
  231edc:	cbz	x8, 231ee8 <device_attach+0x34>
  231ee0:	mov	x0, x20
  231ee4:	bl	231db4 <device_detach>
  231ee8:	mov	x0, x19
  231eec:	str	x19, [x20, #16]
  231ef0:	bl	235a28 <seat_has_master_device>
  231ef4:	ldrb	w8, [x20, #24]
  231ef8:	cbz	w8, 231f5c <device_attach+0xa8>
  231efc:	mov	x10, x19
  231f00:	ldr	x11, [x10, #24]!
  231f04:	mov	x9, xzr
  231f08:	str	x11, [x20, #48]
  231f0c:	cbz	x11, 231f14 <device_attach+0x60>
  231f10:	str	x20, [x11, #56]
  231f14:	cmp	w8, #0x0
  231f18:	cset	w8, eq  // eq = none
  231f1c:	orr	w8, w0, w8
  231f20:	str	x9, [x20, #56]
  231f24:	str	x20, [x10]
  231f28:	tbnz	w8, #0, 231f50 <device_attach+0x9c>
  231f2c:	ldrb	w8, [x19, #72]
  231f30:	tbz	w8, #1, 231f50 <device_attach+0x9c>
  231f34:	mov	x0, x19
  231f38:	bl	2347cc <seat_save>
  231f3c:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  231f40:	add	x1, x1, #0x2dd
  231f44:	mov	x0, x19
  231f48:	mov	x2, xzr
  231f4c:	bl	234278 <seat_send_changed>
  231f50:	ldp	x20, x19, [sp, #16]
  231f54:	ldp	x29, x30, [sp], #32
  231f58:	ret
  231f5c:	ldr	x11, [x19, #24]
  231f60:	cbz	x11, 231efc <device_attach+0x48>
  231f64:	mov	x9, x11
  231f68:	ldr	x11, [x11, #48]
  231f6c:	cbz	x11, 231f88 <device_attach+0xd4>
  231f70:	ldrb	w10, [x9, #24]
  231f74:	cbnz	w10, 231f64 <device_attach+0xb0>
  231f78:	add	x10, x9, #0x30
  231f7c:	str	x11, [x20, #48]
  231f80:	cbnz	x11, 231f10 <device_attach+0x5c>
  231f84:	b	231f14 <device_attach+0x60>
  231f88:	add	x10, x9, #0x30
  231f8c:	str	x11, [x20, #48]
  231f90:	b	231f14 <device_attach+0x60>
  231f94:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  231f98:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  231f9c:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  231fa0:	add	x1, x1, #0x250
  231fa4:	add	x2, x2, #0xc86
  231fa8:	add	x4, x4, #0x252
  231fac:	mov	w3, #0x49                  	// #73
  231fb0:	bl	240790 <log_assert_failed_realm@plt>
  231fb4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  231fb8:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  231fbc:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  231fc0:	add	x1, x1, #0x6de
  231fc4:	add	x2, x2, #0xc86
  231fc8:	add	x4, x4, #0x252
  231fcc:	mov	w3, #0x4a                  	// #74
  231fd0:	mov	w0, wzr
  231fd4:	bl	240790 <log_assert_failed_realm@plt>

0000000000231fd8 <inhibitor_new>:
  231fd8:	stp	x29, x30, [sp, #-48]!
  231fdc:	mov	x29, sp
  231fe0:	str	x21, [sp, #16]
  231fe4:	stp	x20, x19, [sp, #32]
  231fe8:	str	xzr, [x29, #24]
  231fec:	cbz	x0, 2320b8 <inhibitor_new+0xe0>
  231ff0:	mov	x20, x1
  231ff4:	cbz	x1, 2320d8 <inhibitor_new+0x100>
  231ff8:	mov	x21, x2
  231ffc:	cbz	x2, 2320fc <inhibitor_new+0x124>
  232000:	mov	x19, x0
  232004:	bl	23213c <malloc_multiply>
  232008:	str	x0, [x29, #24]
  23200c:	cbz	x0, 232090 <inhibitor_new+0xb8>
  232010:	mov	x8, #0xffffffff00000000    	// #-4294967296
  232014:	mov	w9, #0xffffffff            	// #-1
  232018:	stp	x20, xzr, [x0]
  23201c:	stp	xzr, xzr, [x0, #16]
  232020:	stur	xzr, [x0, #68]
  232024:	stur	xzr, [x0, #84]
  232028:	stur	xzr, [x0, #76]
  23202c:	str	wzr, [x0, #92]
  232030:	stp	x8, xzr, [x0, #32]
  232034:	stp	xzr, x9, [x0, #48]
  232038:	str	w9, [x0, #64]
  23203c:	str	x9, [x0, #96]
  232040:	adrp	x0, 211000 <inhibit_what_to_string.buffer+0x211000>
  232044:	add	x0, x0, #0xb2f
  232048:	mov	x2, #0xffffffffffffffff    	// #-1
  23204c:	mov	x1, x21
  232050:	bl	2413d0 <path_join_internal@plt>
  232054:	ldr	x21, [x29, #24]
  232058:	str	x0, [x21, #24]
  23205c:	cbz	x0, 232090 <inhibitor_new+0xb8>
  232060:	bl	2414c0 <basename@plt>
  232064:	str	x0, [x21, #16]
  232068:	mov	x1, x0
  23206c:	ldr	x0, [x20, #56]
  232070:	mov	x2, x21
  232074:	bl	240d00 <hashmap_put@plt>
  232078:	tbnz	w0, #31, 2320b0 <inhibitor_new+0xd8>
  23207c:	ldr	x8, [x29, #24]
  232080:	mov	w20, wzr
  232084:	str	xzr, [x29, #24]
  232088:	str	x8, [x19]
  23208c:	b	232094 <inhibitor_new+0xbc>
  232090:	mov	w20, #0xfffffff4            	// #-12
  232094:	add	x0, x29, #0x18
  232098:	bl	232120 <inhibitor_freep>
  23209c:	mov	w0, w20
  2320a0:	ldp	x20, x19, [sp, #32]
  2320a4:	ldr	x21, [sp, #16]
  2320a8:	ldp	x29, x30, [sp], #48
  2320ac:	ret
  2320b0:	mov	w20, w0
  2320b4:	b	232094 <inhibitor_new+0xbc>
  2320b8:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2320bc:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2320c0:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  2320c4:	add	x1, x1, #0xa82
  2320c8:	add	x2, x2, #0x8cf
  2320cc:	add	x4, x4, #0xfd6
  2320d0:	mov	w3, #0x21                  	// #33
  2320d4:	bl	240790 <log_assert_failed_realm@plt>
  2320d8:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2320dc:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2320e0:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  2320e4:	add	x1, x1, #0x102
  2320e8:	add	x2, x2, #0x8cf
  2320ec:	add	x4, x4, #0xfd6
  2320f0:	mov	w3, #0x22                  	// #34
  2320f4:	mov	w0, wzr
  2320f8:	bl	240790 <log_assert_failed_realm@plt>
  2320fc:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  232100:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  232104:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  232108:	add	x1, x1, #0x11a
  23210c:	add	x2, x2, #0x8cf
  232110:	add	x4, x4, #0xfd6
  232114:	mov	w3, #0x23                  	// #35
  232118:	mov	w0, wzr
  23211c:	bl	240790 <log_assert_failed_realm@plt>

0000000000232120 <inhibitor_freep>:
  232120:	stp	x29, x30, [sp, #-16]!
  232124:	ldr	x0, [x0]
  232128:	mov	x29, sp
  23212c:	cbz	x0, 232134 <inhibitor_freep+0x14>
  232130:	bl	232154 <inhibitor_free>
  232134:	ldp	x29, x30, [sp], #16
  232138:	ret

000000000023213c <malloc_multiply>:
  23213c:	stp	x29, x30, [sp, #-16]!
  232140:	mov	w0, #0x68                  	// #104
  232144:	mov	x29, sp
  232148:	bl	2408c0 <malloc@plt>
  23214c:	ldp	x29, x30, [sp], #16
  232150:	ret

0000000000232154 <inhibitor_free>:
  232154:	cbz	x0, 2321b8 <inhibitor_free+0x64>
  232158:	stp	x29, x30, [sp, #-32]!
  23215c:	str	x19, [sp, #16]
  232160:	mov	x19, x0
  232164:	ldr	x0, [x0, #40]
  232168:	mov	x29, sp
  23216c:	bl	240890 <free@plt>
  232170:	ldr	x0, [x19, #48]
  232174:	bl	240890 <free@plt>
  232178:	ldr	x0, [x19, #8]
  23217c:	bl	240810 <sd_event_source_unref@plt>
  232180:	ldr	w0, [x19, #96]
  232184:	bl	240820 <safe_close@plt>
  232188:	ldr	x8, [x19]
  23218c:	ldr	x1, [x19, #16]
  232190:	ldr	x0, [x8, #56]
  232194:	bl	2321c0 <hashmap_remove>
  232198:	ldr	x0, [x19, #24]
  23219c:	bl	240890 <free@plt>
  2321a0:	ldr	x0, [x19, #88]
  2321a4:	bl	240890 <free@plt>
  2321a8:	mov	x0, x19
  2321ac:	bl	2321d4 <mfree>
  2321b0:	ldr	x19, [sp, #16]
  2321b4:	ldp	x29, x30, [sp], #32
  2321b8:	mov	x0, xzr
  2321bc:	ret

00000000002321c0 <hashmap_remove>:
  2321c0:	stp	x29, x30, [sp, #-16]!
  2321c4:	mov	x29, sp
  2321c8:	bl	240d20 <internal_hashmap_remove@plt>
  2321cc:	ldp	x29, x30, [sp], #16
  2321d0:	ret

00000000002321d4 <mfree>:
  2321d4:	stp	x29, x30, [sp, #-16]!
  2321d8:	mov	x29, sp
  2321dc:	bl	240890 <free@plt>
  2321e0:	ldp	x29, x30, [sp], #16
  2321e4:	ret

00000000002321e8 <inhibitor_start>:
  2321e8:	sub	sp, sp, #0x60
  2321ec:	stp	x29, x30, [sp, #32]
  2321f0:	str	x23, [sp, #48]
  2321f4:	stp	x22, x21, [sp, #64]
  2321f8:	stp	x20, x19, [sp, #80]
  2321fc:	add	x29, sp, #0x20
  232200:	cbz	x0, 2322c4 <inhibitor_start+0xdc>
  232204:	ldrb	w8, [x0, #32]
  232208:	mov	x19, x0
  23220c:	cbnz	w8, 2322a8 <inhibitor_start+0xc0>
  232210:	add	x0, x19, #0x48
  232214:	bl	2414b0 <dual_timestamp_get@plt>
  232218:	mov	w0, wzr
  23221c:	bl	240750 <log_get_max_level_realm@plt>
  232220:	cmp	w0, #0x7
  232224:	b.lt	232290 <inhibitor_start+0xa8>  // b.tstop
  232228:	ldr	x0, [x19, #40]
  23222c:	bl	2322e4 <strna>
  232230:	ldr	x8, [x19, #48]
  232234:	mov	x20, x0
  232238:	mov	x0, x8
  23223c:	bl	2322e4 <strna>
  232240:	ldr	w8, [x19, #56]
  232244:	ldp	w23, w22, [x19, #60]
  232248:	mov	x21, x0
  23224c:	mov	w0, w8
  232250:	bl	2322f8 <inhibit_mode_to_string>
  232254:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  232258:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  23225c:	adrp	x5, 211000 <inhibit_what_to_string.buffer+0x211000>
  232260:	str	x0, [sp, #16]
  232264:	add	x2, x2, #0x8cf
  232268:	add	x4, x4, #0x9b3
  23226c:	add	x5, x5, #0x191
  232270:	mov	w0, #0x7                   	// #7
  232274:	mov	w3, #0xb4                  	// #180
  232278:	mov	w1, wzr
  23227c:	mov	x6, x20
  232280:	mov	x7, x21
  232284:	str	w22, [sp, #8]
  232288:	str	w23, [sp]
  23228c:	bl	240770 <log_internal_realm@plt>
  232290:	mov	w8, #0x1                   	// #1
  232294:	mov	x0, x19
  232298:	strb	w8, [x19, #32]
  23229c:	bl	232318 <inhibitor_save>
  2322a0:	mov	x0, x19
  2322a4:	bl	232528 <bus_manager_send_inhibited_change>
  2322a8:	ldp	x20, x19, [sp, #80]
  2322ac:	ldp	x22, x21, [sp, #64]
  2322b0:	ldr	x23, [sp, #48]
  2322b4:	ldp	x29, x30, [sp, #32]
  2322b8:	mov	w0, wzr
  2322bc:	add	sp, sp, #0x60
  2322c0:	ret
  2322c4:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  2322c8:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2322cc:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  2322d0:	add	x1, x1, #0xc66
  2322d4:	add	x2, x2, #0x8cf
  2322d8:	add	x4, x4, #0xcf9
  2322dc:	mov	w3, #0xaa                  	// #170
  2322e0:	bl	240790 <log_assert_failed_realm@plt>

00000000002322e4 <strna>:
  2322e4:	adrp	x8, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2322e8:	add	x8, x8, #0x7
  2322ec:	cmp	x0, #0x0
  2322f0:	csel	x0, x8, x0, eq  // eq = none
  2322f4:	ret

00000000002322f8 <inhibit_mode_to_string>:
  2322f8:	cmp	w0, #0x1
  2322fc:	b.ls	232308 <inhibit_mode_to_string+0x10>  // b.plast
  232300:	mov	x0, xzr
  232304:	ret
  232308:	adrp	x8, 253000 <manager_vtable+0xdb0>
  23230c:	add	x8, x8, #0x880
  232310:	ldr	x0, [x8, w0, sxtw #3]
  232314:	ret

0000000000232318 <inhibitor_save>:
  232318:	sub	sp, sp, #0x50
  23231c:	stp	x29, x30, [sp, #32]
  232320:	add	x29, sp, #0x20
  232324:	stp	x22, x21, [sp, #48]
  232328:	stp	x20, x19, [sp, #64]
  23232c:	stur	xzr, [x29, #-8]
  232330:	str	xzr, [sp, #16]
  232334:	cbz	x0, 232508 <inhibitor_save+0x1f0>
  232338:	mov	x19, x0
  23233c:	adrp	x0, 211000 <inhibit_what_to_string.buffer+0x211000>
  232340:	add	x0, x0, #0xb2f
  232344:	mov	w1, #0x1ed                 	// #493
  232348:	mov	w4, #0x2                   	// #2
  23234c:	mov	w2, wzr
  232350:	mov	w3, wzr
  232354:	bl	2411a0 <mkdir_safe_label@plt>
  232358:	tbnz	w0, #31, 232490 <inhibitor_save+0x178>
  23235c:	ldr	x0, [x19, #24]
  232360:	add	x1, sp, #0x10
  232364:	sub	x2, x29, #0x8
  232368:	bl	241440 <fopen_temporary@plt>
  23236c:	mov	w20, w0
  232370:	tbnz	w0, #31, 232494 <inhibitor_save+0x17c>
  232374:	ldr	x0, [sp, #16]
  232378:	bl	241450 <fileno@plt>
  23237c:	mov	w1, #0x1a4                 	// #420
  232380:	bl	241460 <fchmod@plt>
  232384:	ldr	w0, [x19, #36]
  232388:	ldr	x21, [sp, #16]
  23238c:	bl	2331e8 <inhibit_what_to_string>
  232390:	ldr	w8, [x19, #56]
  232394:	mov	x22, x0
  232398:	mov	w0, w8
  23239c:	bl	2322f8 <inhibit_mode_to_string>
  2323a0:	ldp	w5, w4, [x19, #60]
  2323a4:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2323a8:	mov	x3, x0
  2323ac:	add	x1, x1, #0x527
  2323b0:	mov	x0, x21
  2323b4:	mov	x2, x22
  2323b8:	bl	241470 <fprintf@plt>
  2323bc:	ldr	x0, [x19, #40]
  2323c0:	cbz	x0, 232404 <inhibitor_save+0xec>
  2323c4:	str	xzr, [sp, #8]
  2323c8:	bl	2411b0 <cescape@plt>
  2323cc:	str	x0, [sp, #8]
  2323d0:	cbz	x0, 2323f0 <inhibitor_save+0xd8>
  2323d4:	mov	x2, x0
  2323d8:	ldr	x0, [sp, #16]
  2323dc:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  2323e0:	add	x1, x1, #0x689
  2323e4:	bl	241470 <fprintf@plt>
  2323e8:	mov	w21, #0x1                   	// #1
  2323ec:	b	2323f8 <inhibitor_save+0xe0>
  2323f0:	mov	w21, wzr
  2323f4:	mov	w20, #0xfffffff4            	// #-12
  2323f8:	add	x0, sp, #0x8
  2323fc:	bl	232a24 <freep>
  232400:	cbz	w21, 232494 <inhibitor_save+0x17c>
  232404:	ldr	x0, [x19, #48]
  232408:	cbz	x0, 23244c <inhibitor_save+0x134>
  23240c:	str	xzr, [sp, #8]
  232410:	bl	2411b0 <cescape@plt>
  232414:	str	x0, [sp, #8]
  232418:	cbz	x0, 232438 <inhibitor_save+0x120>
  23241c:	mov	x2, x0
  232420:	ldr	x0, [sp, #16]
  232424:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  232428:	add	x1, x1, #0x654
  23242c:	bl	241470 <fprintf@plt>
  232430:	mov	w21, #0x1                   	// #1
  232434:	b	232440 <inhibitor_save+0x128>
  232438:	mov	w21, wzr
  23243c:	mov	w20, #0xfffffff4            	// #-12
  232440:	add	x0, sp, #0x8
  232444:	bl	232a24 <freep>
  232448:	cbz	w21, 232494 <inhibitor_save+0x17c>
  23244c:	ldr	x2, [x19, #88]
  232450:	cbz	x2, 232464 <inhibitor_save+0x14c>
  232454:	ldr	x0, [sp, #16]
  232458:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23245c:	add	x1, x1, #0x403
  232460:	bl	241470 <fprintf@plt>
  232464:	ldr	x0, [sp, #16]
  232468:	bl	241480 <fflush_and_check@plt>
  23246c:	tbnz	w0, #31, 232490 <inhibitor_save+0x178>
  232470:	ldur	x0, [x29, #-8]
  232474:	ldr	x1, [x19, #24]
  232478:	bl	241490 <rename@plt>
  23247c:	tbz	w0, #31, 2324e4 <inhibitor_save+0x1cc>
  232480:	bl	240930 <__errno_location@plt>
  232484:	ldr	w8, [x0]
  232488:	neg	w20, w8
  23248c:	b	232494 <inhibitor_save+0x17c>
  232490:	mov	w20, w0
  232494:	ldr	x0, [x19, #24]
  232498:	bl	2411d0 <unlink@plt>
  23249c:	ldur	x0, [x29, #-8]
  2324a0:	cbz	x0, 2324a8 <inhibitor_save+0x190>
  2324a4:	bl	2411d0 <unlink@plt>
  2324a8:	mov	w0, wzr
  2324ac:	bl	240750 <log_get_max_level_realm@plt>
  2324b0:	cmp	w0, #0x3
  2324b4:	b.lt	2324e4 <inhibitor_save+0x1cc>  // b.tstop
  2324b8:	ldr	x6, [x19, #24]
  2324bc:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2324c0:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  2324c4:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2324c8:	add	x2, x2, #0x8cf
  2324cc:	add	x4, x4, #0xd31
  2324d0:	add	x5, x5, #0xd6c
  2324d4:	mov	w0, #0x3                   	// #3
  2324d8:	mov	w3, #0x9c                  	// #156
  2324dc:	mov	w1, w20
  2324e0:	bl	240770 <log_internal_realm@plt>
  2324e4:	add	x0, sp, #0x10
  2324e8:	bl	233374 <fclosep>
  2324ec:	sub	x0, x29, #0x8
  2324f0:	bl	232a24 <freep>
  2324f4:	ldp	x20, x19, [sp, #64]
  2324f8:	ldp	x22, x21, [sp, #48]
  2324fc:	ldp	x29, x30, [sp, #32]
  232500:	add	sp, sp, #0x50
  232504:	ret
  232508:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  23250c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  232510:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  232514:	add	x1, x1, #0xc66
  232518:	add	x2, x2, #0x8cf
  23251c:	add	x4, x4, #0xa49
  232520:	mov	w3, #0x59                  	// #89
  232524:	bl	240790 <log_assert_failed_realm@plt>

0000000000232528 <bus_manager_send_inhibited_change>:
  232528:	stp	x29, x30, [sp, #-16]!
  23252c:	mov	x29, sp
  232530:	cbz	x0, 232564 <bus_manager_send_inhibited_change+0x3c>
  232534:	ldr	w8, [x0, #56]
  232538:	ldr	x0, [x0]
  23253c:	adrp	x9, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  232540:	adrp	x10, 209000 <inhibit_what_to_string.buffer+0x209000>
  232544:	add	x9, x9, #0x726
  232548:	add	x10, x10, #0x7d2
  23254c:	cmp	w8, #0x0
  232550:	csel	x1, x10, x9, eq  // eq = none
  232554:	mov	x2, xzr
  232558:	bl	22f5f0 <manager_send_changed>
  23255c:	ldp	x29, x30, [sp], #16
  232560:	ret
  232564:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  232568:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  23256c:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  232570:	add	x1, x1, #0xc66
  232574:	add	x2, x2, #0x8cf
  232578:	add	x4, x4, #0xe3e
  23257c:	mov	w3, #0xa2                  	// #162
  232580:	bl	240790 <log_assert_failed_realm@plt>

0000000000232584 <inhibitor_stop>:
  232584:	sub	sp, sp, #0x60
  232588:	stp	x29, x30, [sp, #32]
  23258c:	str	x23, [sp, #48]
  232590:	stp	x22, x21, [sp, #64]
  232594:	stp	x20, x19, [sp, #80]
  232598:	add	x29, sp, #0x20
  23259c:	cbz	x0, 23265c <inhibitor_stop+0xd8>
  2325a0:	ldrb	w8, [x0, #32]
  2325a4:	mov	x19, x0
  2325a8:	cbz	w8, 232624 <inhibitor_stop+0xa0>
  2325ac:	mov	w0, wzr
  2325b0:	bl	240750 <log_get_max_level_realm@plt>
  2325b4:	cmp	w0, #0x7
  2325b8:	b.lt	232624 <inhibitor_stop+0xa0>  // b.tstop
  2325bc:	ldr	x0, [x19, #40]
  2325c0:	bl	2322e4 <strna>
  2325c4:	ldr	x8, [x19, #48]
  2325c8:	mov	x20, x0
  2325cc:	mov	x0, x8
  2325d0:	bl	2322e4 <strna>
  2325d4:	ldr	w8, [x19, #56]
  2325d8:	ldp	w23, w22, [x19, #60]
  2325dc:	mov	x21, x0
  2325e0:	mov	w0, w8
  2325e4:	bl	2322f8 <inhibit_mode_to_string>
  2325e8:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2325ec:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  2325f0:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2325f4:	str	x0, [sp, #16]
  2325f8:	add	x2, x2, #0x8cf
  2325fc:	add	x4, x4, #0x675
  232600:	add	x5, x5, #0x61f
  232604:	mov	w0, #0x7                   	// #7
  232608:	mov	w3, #0xc6                  	// #198
  23260c:	mov	w1, wzr
  232610:	mov	x6, x20
  232614:	mov	x7, x21
  232618:	str	w22, [sp, #8]
  23261c:	str	w23, [sp]
  232620:	bl	240770 <log_internal_realm@plt>
  232624:	mov	x0, x19
  232628:	bl	23267c <inhibitor_remove_fifo>
  23262c:	ldr	x0, [x19, #24]
  232630:	cbz	x0, 232638 <inhibitor_stop+0xb4>
  232634:	bl	2411d0 <unlink@plt>
  232638:	mov	x0, x19
  23263c:	strb	wzr, [x19, #32]
  232640:	bl	232528 <bus_manager_send_inhibited_change>
  232644:	ldp	x20, x19, [sp, #80]
  232648:	ldp	x22, x21, [sp, #64]
  23264c:	ldr	x23, [sp, #48]
  232650:	ldp	x29, x30, [sp, #32]
  232654:	add	sp, sp, #0x60
  232658:	ret
  23265c:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  232660:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  232664:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  232668:	add	x1, x1, #0xc66
  23266c:	add	x2, x2, #0x8cf
  232670:	add	x4, x4, #0x393
  232674:	mov	w3, #0xc0                  	// #192
  232678:	bl	240790 <log_assert_failed_realm@plt>

000000000023267c <inhibitor_remove_fifo>:
  23267c:	stp	x29, x30, [sp, #-32]!
  232680:	str	x19, [sp, #16]
  232684:	mov	x29, sp
  232688:	cbz	x0, 2326d4 <inhibitor_remove_fifo+0x58>
  23268c:	mov	x19, x0
  232690:	ldr	x0, [x0, #8]
  232694:	bl	240810 <sd_event_source_unref@plt>
  232698:	ldr	w8, [x19, #96]
  23269c:	str	x0, [x19, #8]
  2326a0:	mov	w0, w8
  2326a4:	bl	240820 <safe_close@plt>
  2326a8:	ldr	x8, [x19, #88]
  2326ac:	str	w0, [x19, #96]
  2326b0:	cbz	x8, 2326c8 <inhibitor_remove_fifo+0x4c>
  2326b4:	mov	x0, x8
  2326b8:	bl	2411d0 <unlink@plt>
  2326bc:	ldr	x0, [x19, #88]
  2326c0:	bl	2321d4 <mfree>
  2326c4:	str	xzr, [x19, #88]
  2326c8:	ldr	x19, [sp, #16]
  2326cc:	ldp	x29, x30, [sp], #32
  2326d0:	ret
  2326d4:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  2326d8:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2326dc:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  2326e0:	add	x1, x1, #0xc66
  2326e4:	add	x2, x2, #0x8cf
  2326e8:	add	x4, x4, #0x16c
  2326ec:	mov	w3, #0x158                 	// #344
  2326f0:	bl	240790 <log_assert_failed_realm@plt>

00000000002326f4 <inhibitor_load>:
  2326f4:	sub	sp, sp, #0xb0
  2326f8:	stp	x29, x30, [sp, #128]
  2326fc:	add	x29, sp, #0x80
  232700:	stp	x20, x19, [sp, #160]
  232704:	str	xzr, [x29, #24]
  232708:	stp	xzr, xzr, [x29, #-16]
  23270c:	stp	xzr, xzr, [x29, #-32]
  232710:	stur	xzr, [x29, #-40]
  232714:	ldr	x1, [x0, #24]
  232718:	adrp	x8, 207000 <inhibit_what_to_string.buffer+0x207000>
  23271c:	adrp	x10, 210000 <inhibit_what_to_string.buffer+0x210000>
  232720:	adrp	x12, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  232724:	adrp	x14, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  232728:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23272c:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  232730:	adrp	x6, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  232734:	str	x21, [sp, #144]
  232738:	mov	x19, x0
  23273c:	add	x21, x0, #0x58
  232740:	add	x8, x8, #0x6da
  232744:	sub	x9, x29, #0x28
  232748:	add	x10, x10, #0x277
  23274c:	sub	x11, x29, #0x20
  232750:	add	x12, x12, #0x31b
  232754:	sub	x13, x29, #0x18
  232758:	add	x14, x14, #0x523
  23275c:	add	x2, x2, #0xd3
  232760:	add	x4, x4, #0xcd3
  232764:	add	x6, x6, #0x650
  232768:	add	x3, x29, #0x18
  23276c:	sub	x5, x29, #0x8
  232770:	sub	x7, x29, #0x10
  232774:	mov	x0, xzr
  232778:	stp	x21, xzr, [sp, #56]
  23277c:	stp	x9, x8, [sp, #40]
  232780:	stp	x11, x10, [sp, #24]
  232784:	stp	x13, x12, [sp, #8]
  232788:	str	x14, [sp]
  23278c:	bl	2414d0 <parse_env_file_sentinel@plt>
  232790:	tbnz	w0, #31, 2328e4 <inhibitor_load+0x1f0>
  232794:	ldr	x0, [x29, #24]
  232798:	cbz	x0, 2327a0 <inhibitor_load+0xac>
  23279c:	bl	232a3c <inhibit_what_from_string>
  2327a0:	tbnz	w0, #31, 2327a8 <inhibitor_load+0xb4>
  2327a4:	str	w0, [x19, #36]
  2327a8:	ldur	x0, [x29, #-40]
  2327ac:	cbz	x0, 2327b4 <inhibitor_load+0xc0>
  2327b0:	bl	232c8c <inhibit_mode_from_string>
  2327b4:	tbnz	w0, #31, 2327bc <inhibitor_load+0xc8>
  2327b8:	str	w0, [x19, #56]
  2327bc:	ldur	x0, [x29, #-8]
  2327c0:	cbz	x0, 232810 <inhibitor_load+0x11c>
  2327c4:	add	x1, x19, #0x40
  2327c8:	bl	2414e0 <parse_uid@plt>
  2327cc:	tbz	w0, #31, 232810 <inhibitor_load+0x11c>
  2327d0:	mov	w20, w0
  2327d4:	mov	w0, wzr
  2327d8:	bl	240750 <log_get_max_level_realm@plt>
  2327dc:	cmp	w0, #0x7
  2327e0:	b.lt	232810 <inhibitor_load+0x11c>  // b.tstop
  2327e4:	ldur	x6, [x29, #-8]
  2327e8:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2327ec:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2327f0:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  2327f4:	add	x2, x2, #0x8cf
  2327f8:	add	x4, x4, #0x36c
  2327fc:	add	x5, x5, #0xcd7
  232800:	mov	w0, #0x7                   	// #7
  232804:	mov	w3, #0xf7                  	// #247
  232808:	mov	w1, w20
  23280c:	bl	240770 <log_internal_realm@plt>
  232810:	ldur	x0, [x29, #-16]
  232814:	cbz	x0, 232864 <inhibitor_load+0x170>
  232818:	add	x1, x19, #0x3c
  23281c:	bl	2414f0 <parse_pid@plt>
  232820:	tbz	w0, #31, 232864 <inhibitor_load+0x170>
  232824:	mov	w20, w0
  232828:	mov	w0, wzr
  23282c:	bl	240750 <log_get_max_level_realm@plt>
  232830:	cmp	w0, #0x7
  232834:	b.lt	232864 <inhibitor_load+0x170>  // b.tstop
  232838:	ldur	x6, [x29, #-16]
  23283c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  232840:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  232844:	adrp	x5, 211000 <inhibit_what_to_string.buffer+0x211000>
  232848:	add	x2, x2, #0x8cf
  23284c:	add	x4, x4, #0x36c
  232850:	add	x5, x5, #0x1c2
  232854:	mov	w0, #0x7                   	// #7
  232858:	mov	w3, #0xfd                  	// #253
  23285c:	mov	w1, w20
  232860:	bl	240770 <log_internal_realm@plt>
  232864:	ldur	x0, [x29, #-24]
  232868:	cbz	x0, 232890 <inhibitor_load+0x19c>
  23286c:	sub	x2, x29, #0x30
  232870:	mov	w1, wzr
  232874:	bl	241500 <cunescape@plt>
  232878:	tbnz	w0, #31, 23293c <inhibitor_load+0x248>
  23287c:	ldr	x0, [x19, #40]
  232880:	bl	240890 <free@plt>
  232884:	ldur	x8, [x29, #-48]
  232888:	str	x8, [x19, #40]
  23288c:	stur	xzr, [x29, #-48]
  232890:	ldur	x0, [x29, #-32]
  232894:	cbz	x0, 2328bc <inhibitor_load+0x1c8>
  232898:	sub	x2, x29, #0x30
  23289c:	mov	w1, wzr
  2328a0:	bl	241500 <cunescape@plt>
  2328a4:	tbnz	w0, #31, 232954 <inhibitor_load+0x260>
  2328a8:	ldr	x0, [x19, #48]
  2328ac:	bl	240890 <free@plt>
  2328b0:	ldur	x8, [x29, #-48]
  2328b4:	str	x8, [x19, #48]
  2328b8:	stur	xzr, [x29, #-48]
  2328bc:	ldr	x8, [x21]
  2328c0:	cbz	x8, 2329d8 <inhibitor_load+0x2e4>
  2328c4:	mov	w8, #0xffffffff            	// #-1
  2328c8:	mov	x0, x19
  2328cc:	stur	w8, [x29, #-52]
  2328d0:	bl	232cc8 <inhibitor_create_fifo>
  2328d4:	stur	w0, [x29, #-52]
  2328d8:	tbnz	w0, #31, 232978 <inhibitor_load+0x284>
  2328dc:	mov	w20, #0x1                   	// #1
  2328e0:	b	2329cc <inhibitor_load+0x2d8>
  2328e4:	mov	w20, w0
  2328e8:	mov	w0, wzr
  2328ec:	bl	240750 <log_get_max_level_realm@plt>
  2328f0:	cmp	w0, #0x3
  2328f4:	b.lt	23292c <inhibitor_load+0x238>  // b.tstop
  2328f8:	ldr	x6, [x19, #24]
  2328fc:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  232900:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  232904:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  232908:	add	x2, x2, #0x8cf
  23290c:	add	x4, x4, #0x36c
  232910:	add	x5, x5, #0x3b4
  232914:	mov	w0, #0x3                   	// #3
  232918:	mov	w3, #0xea                  	// #234
  23291c:	mov	w1, w20
  232920:	bl	240770 <log_internal_realm@plt>
  232924:	mov	w19, w0
  232928:	b	2329dc <inhibitor_load+0x2e8>
  23292c:	mov	w8, wzr
  232930:	neg	w9, w20
  232934:	sub	w19, w8, w9, uxtb
  232938:	b	2329dc <inhibitor_load+0x2e8>
  23293c:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  232940:	adrp	x3, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  232944:	add	x1, x1, #0x8cf
  232948:	add	x3, x3, #0x36c
  23294c:	mov	w2, #0x103                 	// #259
  232950:	b	232968 <inhibitor_load+0x274>
  232954:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  232958:	adrp	x3, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23295c:	add	x1, x1, #0x8cf
  232960:	add	x3, x3, #0x36c
  232964:	mov	w2, #0x10b                 	// #267
  232968:	mov	w0, wzr
  23296c:	bl	240af0 <log_oom_internal@plt>
  232970:	mov	w19, w0
  232974:	b	2329dc <inhibitor_load+0x2e8>
  232978:	mov	w19, w0
  23297c:	mov	w0, wzr
  232980:	bl	240750 <log_get_max_level_realm@plt>
  232984:	cmp	w0, #0x3
  232988:	b.lt	2329c0 <inhibitor_load+0x2cc>  // b.tstop
  23298c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  232990:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  232994:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  232998:	add	x2, x2, #0x8cf
  23299c:	add	x4, x4, #0x36c
  2329a0:	add	x5, x5, #0xc68
  2329a4:	mov	w0, #0x3                   	// #3
  2329a8:	mov	w3, #0x116                 	// #278
  2329ac:	mov	w1, w19
  2329b0:	bl	240770 <log_internal_realm@plt>
  2329b4:	mov	w19, w0
  2329b8:	mov	w20, wzr
  2329bc:	b	2329cc <inhibitor_load+0x2d8>
  2329c0:	mov	w20, wzr
  2329c4:	neg	w8, w19
  2329c8:	sub	w19, w20, w8, uxtb
  2329cc:	sub	x0, x29, #0x34
  2329d0:	bl	232cb0 <closep>
  2329d4:	cbz	w20, 2329dc <inhibitor_load+0x2e8>
  2329d8:	mov	w19, wzr
  2329dc:	sub	x0, x29, #0x28
  2329e0:	bl	232a24 <freep>
  2329e4:	sub	x0, x29, #0x20
  2329e8:	bl	232a24 <freep>
  2329ec:	sub	x0, x29, #0x18
  2329f0:	bl	232a24 <freep>
  2329f4:	sub	x0, x29, #0x10
  2329f8:	bl	232a24 <freep>
  2329fc:	sub	x0, x29, #0x8
  232a00:	bl	232a24 <freep>
  232a04:	add	x0, x29, #0x18
  232a08:	bl	232a24 <freep>
  232a0c:	mov	w0, w19
  232a10:	ldp	x20, x19, [sp, #160]
  232a14:	ldr	x21, [sp, #144]
  232a18:	ldp	x29, x30, [sp, #128]
  232a1c:	add	sp, sp, #0xb0
  232a20:	ret

0000000000232a24 <freep>:
  232a24:	stp	x29, x30, [sp, #-16]!
  232a28:	ldr	x0, [x0]
  232a2c:	mov	x29, sp
  232a30:	bl	240890 <free@plt>
  232a34:	ldp	x29, x30, [sp], #16
  232a38:	ret

0000000000232a3c <inhibit_what_from_string>:
  232a3c:	sub	sp, sp, #0x70
  232a40:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  232a44:	str	x0, [sp, #8]
  232a48:	add	x2, x2, #0xd1a
  232a4c:	add	x0, sp, #0x8
  232a50:	mov	x1, sp
  232a54:	mov	w3, wzr
  232a58:	stp	x29, x30, [sp, #16]
  232a5c:	stp	x28, x27, [sp, #32]
  232a60:	stp	x26, x25, [sp, #48]
  232a64:	stp	x24, x23, [sp, #64]
  232a68:	stp	x22, x21, [sp, #80]
  232a6c:	stp	x20, x19, [sp, #96]
  232a70:	add	x29, sp, #0x10
  232a74:	bl	241510 <split@plt>
  232a78:	cbz	x0, 232c6c <inhibit_what_from_string+0x230>
  232a7c:	adrp	x26, 212000 <inhibit_what_to_string.buffer+0x212000>
  232a80:	adrp	x20, 211000 <inhibit_what_to_string.buffer+0x211000>
  232a84:	adrp	x21, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  232a88:	adrp	x22, 207000 <inhibit_what_to_string.buffer+0x207000>
  232a8c:	adrp	x23, 211000 <inhibit_what_to_string.buffer+0x211000>
  232a90:	adrp	x24, 210000 <inhibit_what_to_string.buffer+0x210000>
  232a94:	mov	x27, x0
  232a98:	mov	w28, wzr
  232a9c:	add	x26, x26, #0x5fc
  232aa0:	add	x20, x20, #0xd1a
  232aa4:	add	x21, x21, #0x2fe
  232aa8:	add	x22, x22, #0xcfc
  232aac:	add	x23, x23, #0xd1c
  232ab0:	add	x24, x24, #0x281
  232ab4:	b	232ae0 <inhibit_what_from_string+0xa4>
  232ab8:	mov	w25, #0x20                  	// #32
  232abc:	add	x0, sp, #0x8
  232ac0:	mov	x1, sp
  232ac4:	mov	x2, x20
  232ac8:	mov	w3, wzr
  232acc:	orr	w28, w28, w25
  232ad0:	bl	241510 <split@plt>
  232ad4:	mov	x27, x0
  232ad8:	mov	w0, w28
  232adc:	cbz	x27, 232c6c <inhibit_what_from_string+0x230>
  232ae0:	ldr	x19, [sp]
  232ae4:	mov	w0, #0xffffffff            	// #-1
  232ae8:	sub	x25, x19, #0x4
  232aec:	cmp	x25, #0x10
  232af0:	b.hi	232c6c <inhibit_what_from_string+0x230>  // b.pmore
  232af4:	adr	x8, 232b04 <inhibit_what_from_string+0xc8>
  232af8:	ldrb	w9, [x26, x25]
  232afc:	add	x8, x8, x9, lsl #2
  232b00:	br	x8
  232b04:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  232b08:	mov	w2, #0x4                   	// #4
  232b0c:	mov	x0, x27
  232b10:	add	x1, x1, #0x27c
  232b14:	mov	w25, #0x4                   	// #4
  232b18:	bl	240b90 <strncmp@plt>
  232b1c:	cbz	w0, 232abc <inhibit_what_from_string+0x80>
  232b20:	sub	x8, x19, #0x10
  232b24:	cmp	x8, #0x4
  232b28:	mov	w0, #0xffffffff            	// #-1
  232b2c:	b.hi	232c6c <inhibit_what_from_string+0x230>  // b.pmore
  232b30:	adrp	x11, 212000 <inhibit_what_to_string.buffer+0x212000>
  232b34:	add	x11, x11, #0x62f
  232b38:	adr	x9, 232bc0 <inhibit_what_from_string+0x184>
  232b3c:	ldrb	w10, [x11, x8]
  232b40:	add	x9, x9, x10, lsl #2
  232b44:	br	x9
  232b48:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  232b4c:	mov	w2, #0x8                   	// #8
  232b50:	mov	x0, x27
  232b54:	add	x1, x1, #0x94c
  232b58:	bl	240b90 <strncmp@plt>
  232b5c:	cbz	w0, 232c60 <inhibit_what_from_string+0x224>
  232b60:	cmp	x25, #0x10
  232b64:	mov	w0, #0xffffffff            	// #-1
  232b68:	b.hi	232c6c <inhibit_what_from_string+0x230>  // b.pmore
  232b6c:	adrp	x10, 212000 <inhibit_what_to_string.buffer+0x212000>
  232b70:	add	x10, x10, #0x60d
  232b74:	adr	x8, 232b04 <inhibit_what_from_string+0xc8>
  232b78:	ldrb	w9, [x10, x25]
  232b7c:	add	x8, x8, x9, lsl #2
  232b80:	br	x8
  232b84:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  232b88:	mov	w2, #0x5                   	// #5
  232b8c:	mov	x0, x27
  232b90:	add	x1, x1, #0x918
  232b94:	bl	240b90 <strncmp@plt>
  232b98:	cbz	w0, 232c58 <inhibit_what_from_string+0x21c>
  232b9c:	cmp	x25, #0x10
  232ba0:	mov	w0, #0xffffffff            	// #-1
  232ba4:	b.hi	232c6c <inhibit_what_from_string+0x230>  // b.pmore
  232ba8:	adrp	x10, 212000 <inhibit_what_to_string.buffer+0x212000>
  232bac:	add	x10, x10, #0x61e
  232bb0:	adr	x8, 232b04 <inhibit_what_from_string+0xc8>
  232bb4:	ldrb	w9, [x10, x25]
  232bb8:	add	x8, x8, x9, lsl #2
  232bbc:	br	x8
  232bc0:	mov	w2, #0x10                  	// #16
  232bc4:	mov	x0, x27
  232bc8:	mov	x1, x21
  232bcc:	bl	240b90 <strncmp@plt>
  232bd0:	cbz	w0, 232c50 <inhibit_what_from_string+0x214>
  232bd4:	cmp	x19, #0x11
  232bd8:	b.eq	232c2c <inhibit_what_from_string+0x1f0>  // b.none
  232bdc:	cmp	x19, #0x14
  232be0:	b.eq	232c10 <inhibit_what_from_string+0x1d4>  // b.none
  232be4:	cmp	x19, #0x12
  232be8:	b.ne	232c68 <inhibit_what_from_string+0x22c>  // b.any
  232bec:	mov	w2, #0x12                  	// #18
  232bf0:	mov	x0, x27
  232bf4:	mov	x1, x24
  232bf8:	bl	240b90 <strncmp@plt>
  232bfc:	cbz	w0, 232c48 <inhibit_what_from_string+0x20c>
  232c00:	cmp	x19, #0x11
  232c04:	b.eq	232c2c <inhibit_what_from_string+0x1f0>  // b.none
  232c08:	cmp	x19, #0x14
  232c0c:	b.ne	232c68 <inhibit_what_from_string+0x22c>  // b.any
  232c10:	mov	w2, #0x14                  	// #20
  232c14:	mov	x0, x27
  232c18:	mov	x1, x23
  232c1c:	bl	240b90 <strncmp@plt>
  232c20:	cbz	w0, 232ab8 <inhibit_what_from_string+0x7c>
  232c24:	cmp	x19, #0x11
  232c28:	b.ne	232c68 <inhibit_what_from_string+0x22c>  // b.any
  232c2c:	mov	w2, #0x11                  	// #17
  232c30:	mov	x0, x27
  232c34:	mov	x1, x22
  232c38:	bl	240b90 <strncmp@plt>
  232c3c:	cbnz	w0, 232c68 <inhibit_what_from_string+0x22c>
  232c40:	mov	w25, #0x40                  	// #64
  232c44:	b	232abc <inhibit_what_from_string+0x80>
  232c48:	mov	w25, #0x10                  	// #16
  232c4c:	b	232abc <inhibit_what_from_string+0x80>
  232c50:	mov	w25, #0x8                   	// #8
  232c54:	b	232abc <inhibit_what_from_string+0x80>
  232c58:	mov	w25, #0x2                   	// #2
  232c5c:	b	232abc <inhibit_what_from_string+0x80>
  232c60:	mov	w25, #0x1                   	// #1
  232c64:	b	232abc <inhibit_what_from_string+0x80>
  232c68:	mov	w0, #0xffffffff            	// #-1
  232c6c:	ldp	x20, x19, [sp, #96]
  232c70:	ldp	x22, x21, [sp, #80]
  232c74:	ldp	x24, x23, [sp, #64]
  232c78:	ldp	x26, x25, [sp, #48]
  232c7c:	ldp	x28, x27, [sp, #32]
  232c80:	ldp	x29, x30, [sp, #16]
  232c84:	add	sp, sp, #0x70
  232c88:	ret

0000000000232c8c <inhibit_mode_from_string>:
  232c8c:	stp	x29, x30, [sp, #-16]!
  232c90:	mov	x2, x0
  232c94:	adrp	x0, 253000 <manager_vtable+0xdb0>
  232c98:	add	x0, x0, #0x880
  232c9c:	mov	w1, #0x2                   	// #2
  232ca0:	mov	x29, sp
  232ca4:	bl	240cd0 <string_table_lookup@plt>
  232ca8:	ldp	x29, x30, [sp], #16
  232cac:	ret

0000000000232cb0 <closep>:
  232cb0:	stp	x29, x30, [sp, #-16]!
  232cb4:	ldr	w0, [x0]
  232cb8:	mov	x29, sp
  232cbc:	bl	240820 <safe_close@plt>
  232cc0:	ldp	x29, x30, [sp], #16
  232cc4:	ret

0000000000232cc8 <inhibitor_create_fifo>:
  232cc8:	stp	x29, x30, [sp, #-48]!
  232ccc:	str	x21, [sp, #16]
  232cd0:	stp	x20, x19, [sp, #32]
  232cd4:	mov	x29, sp
  232cd8:	cbz	x0, 232e00 <inhibitor_create_fifo+0x138>
  232cdc:	ldr	x8, [x0, #88]
  232ce0:	mov	x19, x0
  232ce4:	cbz	x8, 232d3c <inhibitor_create_fifo+0x74>
  232ce8:	ldr	w8, [x19, #96]
  232cec:	mov	w21, #0x800                 	// #2048
  232cf0:	movk	w21, #0x8, lsl #16
  232cf4:	tbz	w8, #31, 232d10 <inhibitor_create_fifo+0x48>
  232cf8:	ldr	x0, [x19, #88]
  232cfc:	mov	w1, #0x800                 	// #2048
  232d00:	movk	w1, #0x8, lsl #16
  232d04:	bl	2408e0 <open64@plt>
  232d08:	str	w0, [x19, #96]
  232d0c:	tbnz	w0, #31, 232d2c <inhibitor_create_fifo+0x64>
  232d10:	mov	x20, x19
  232d14:	ldr	x8, [x20, #8]!
  232d18:	cbz	x8, 232da0 <inhibitor_create_fifo+0xd8>
  232d1c:	ldr	x0, [x19, #88]
  232d20:	add	w1, w21, #0x1
  232d24:	bl	2408e0 <open64@plt>
  232d28:	tbz	w0, #31, 232df0 <inhibitor_create_fifo+0x128>
  232d2c:	bl	240930 <__errno_location@plt>
  232d30:	ldr	w8, [x0]
  232d34:	neg	w0, w8
  232d38:	b	232df0 <inhibitor_create_fifo+0x128>
  232d3c:	adrp	x0, 211000 <inhibit_what_to_string.buffer+0x211000>
  232d40:	add	x0, x0, #0xb2f
  232d44:	mov	w1, #0x1ed                 	// #493
  232d48:	mov	w4, #0x2                   	// #2
  232d4c:	mov	w2, wzr
  232d50:	mov	w3, wzr
  232d54:	bl	2411a0 <mkdir_safe_label@plt>
  232d58:	tbnz	w0, #31, 232df0 <inhibitor_create_fifo+0x128>
  232d5c:	ldr	x1, [x19, #16]
  232d60:	adrp	x0, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  232d64:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  232d68:	add	x0, x0, #0x37b
  232d6c:	add	x2, x2, #0x684
  232d70:	mov	x3, xzr
  232d74:	bl	241520 <strjoin_real@plt>
  232d78:	str	x0, [x19, #88]
  232d7c:	cbz	x0, 232dec <inhibitor_create_fifo+0x124>
  232d80:	mov	w1, #0x180                 	// #384
  232d84:	bl	241530 <mkfifo@plt>
  232d88:	tbz	w0, #31, 232ce8 <inhibitor_create_fifo+0x20>
  232d8c:	bl	240930 <__errno_location@plt>
  232d90:	ldr	w8, [x0]
  232d94:	cmp	w8, #0x11
  232d98:	b.eq	232ce8 <inhibitor_create_fifo+0x20>  // b.none
  232d9c:	b	232d34 <inhibitor_create_fifo+0x6c>
  232da0:	ldr	x8, [x19]
  232da4:	ldr	w2, [x19, #96]
  232da8:	adrp	x4, 232000 <inhibitor_new+0x28>
  232dac:	add	x4, x4, #0xe20
  232db0:	ldr	x0, [x8]
  232db4:	mov	x1, x20
  232db8:	mov	w3, wzr
  232dbc:	mov	x5, x19
  232dc0:	bl	2408f0 <sd_event_add_io@plt>
  232dc4:	tbnz	w0, #31, 232df0 <inhibitor_create_fifo+0x128>
  232dc8:	ldr	x0, [x20]
  232dcc:	mov	w1, #0x5a                  	// #90
  232dd0:	bl	240b40 <sd_event_source_set_priority@plt>
  232dd4:	tbnz	w0, #31, 232df0 <inhibitor_create_fifo+0x128>
  232dd8:	ldr	x0, [x20]
  232ddc:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  232de0:	add	x1, x1, #0xcd4
  232de4:	bl	240990 <sd_event_source_set_description@plt>
  232de8:	b	232d1c <inhibitor_create_fifo+0x54>
  232dec:	mov	w0, #0xfffffff4            	// #-12
  232df0:	ldp	x20, x19, [sp, #32]
  232df4:	ldr	x21, [sp, #16]
  232df8:	ldp	x29, x30, [sp], #48
  232dfc:	ret
  232e00:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  232e04:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  232e08:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  232e0c:	add	x1, x1, #0xc66
  232e10:	add	x2, x2, #0x8cf
  232e14:	add	x4, x4, #0x1e7
  232e18:	mov	w3, #0x12c                 	// #300
  232e1c:	bl	240790 <log_assert_failed_realm@plt>

0000000000232e20 <inhibitor_dispatch_fifo>:
  232e20:	stp	x29, x30, [sp, #-32]!
  232e24:	str	x19, [sp, #16]
  232e28:	mov	x29, sp
  232e2c:	cbz	x0, 232e64 <inhibitor_dispatch_fifo+0x44>
  232e30:	ldr	w8, [x3, #96]
  232e34:	mov	x19, x3
  232e38:	cmp	w8, w1
  232e3c:	b.ne	232e84 <inhibitor_dispatch_fifo+0x64>  // b.any
  232e40:	cbz	x19, 232ea8 <inhibitor_dispatch_fifo+0x88>
  232e44:	mov	x0, x19
  232e48:	bl	232584 <inhibitor_stop>
  232e4c:	mov	x0, x19
  232e50:	bl	232154 <inhibitor_free>
  232e54:	ldr	x19, [sp, #16]
  232e58:	mov	w0, wzr
  232e5c:	ldp	x29, x30, [sp], #32
  232e60:	ret
  232e64:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  232e68:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  232e6c:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  232e70:	add	x1, x1, #0x6de
  232e74:	add	x2, x2, #0x8cf
  232e78:	add	x4, x4, #0x126
  232e7c:	mov	w3, #0x11f                 	// #287
  232e80:	bl	240790 <log_assert_failed_realm@plt>
  232e84:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  232e88:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  232e8c:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  232e90:	add	x1, x1, #0x391
  232e94:	add	x2, x2, #0x8cf
  232e98:	add	x4, x4, #0x126
  232e9c:	mov	w3, #0x120                 	// #288
  232ea0:	mov	w0, wzr
  232ea4:	bl	240790 <log_assert_failed_realm@plt>
  232ea8:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  232eac:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  232eb0:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  232eb4:	add	x1, x1, #0xc66
  232eb8:	add	x2, x2, #0x8cf
  232ebc:	add	x4, x4, #0x126
  232ec0:	mov	w3, #0x121                 	// #289
  232ec4:	mov	w0, wzr
  232ec8:	bl	240790 <log_assert_failed_realm@plt>

0000000000232ecc <inhibitor_is_orphan>:
  232ecc:	stp	x29, x30, [sp, #-16]!
  232ed0:	mov	x29, sp
  232ed4:	cbz	x0, 232f10 <inhibitor_is_orphan+0x44>
  232ed8:	ldrb	w8, [x0, #32]
  232edc:	cbz	w8, 232f04 <inhibitor_is_orphan+0x38>
  232ee0:	ldr	x8, [x0, #88]
  232ee4:	cbz	x8, 232f04 <inhibitor_is_orphan+0x38>
  232ee8:	ldr	w0, [x0, #96]
  232eec:	tbnz	w0, #31, 232f04 <inhibitor_is_orphan+0x38>
  232ef0:	bl	241540 <pipe_eof@plt>
  232ef4:	cmp	w0, #0x0
  232ef8:	cset	w0, ne  // ne = any
  232efc:	ldp	x29, x30, [sp], #16
  232f00:	ret
  232f04:	mov	w0, #0x1                   	// #1
  232f08:	ldp	x29, x30, [sp], #16
  232f0c:	ret
  232f10:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  232f14:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  232f18:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  232f1c:	add	x1, x1, #0xc66
  232f20:	add	x2, x2, #0x8cf
  232f24:	add	x4, x4, #0x3ca
  232f28:	mov	w3, #0x164                 	// #356
  232f2c:	bl	240790 <log_assert_failed_realm@plt>

0000000000232f30 <manager_inhibit_what>:
  232f30:	sub	sp, sp, #0x40
  232f34:	stp	x29, x30, [sp, #16]
  232f38:	str	x21, [sp, #32]
  232f3c:	stp	x20, x19, [sp, #48]
  232f40:	add	x29, sp, #0x10
  232f44:	cbz	x0, 232fc4 <manager_inhibit_what+0x94>
  232f48:	mov	w8, #0xfffffffe            	// #-2
  232f4c:	str	w8, [sp]
  232f50:	str	xzr, [sp, #8]
  232f54:	mov	x20, x0
  232f58:	ldr	x0, [x0, #56]
  232f5c:	mov	w19, w1
  232f60:	mov	x1, sp
  232f64:	add	x2, x29, #0x18
  232f68:	bl	232fe4 <hashmap_iterate>
  232f6c:	mov	w21, wzr
  232f70:	tbnz	w0, #0, 232fa0 <manager_inhibit_what+0x70>
  232f74:	mov	w0, w21
  232f78:	ldp	x20, x19, [sp, #48]
  232f7c:	ldr	x21, [sp, #32]
  232f80:	ldp	x29, x30, [sp, #16]
  232f84:	add	sp, sp, #0x40
  232f88:	ret
  232f8c:	ldr	x0, [x20, #56]
  232f90:	mov	x1, sp
  232f94:	add	x2, x29, #0x18
  232f98:	bl	232fe4 <hashmap_iterate>
  232f9c:	tbz	w0, #0, 232f74 <manager_inhibit_what+0x44>
  232fa0:	ldr	x8, [x29, #24]
  232fa4:	ldr	w9, [x8, #56]
  232fa8:	cmp	w9, w19
  232fac:	b.ne	232f8c <manager_inhibit_what+0x5c>  // b.any
  232fb0:	ldrb	w9, [x8, #32]
  232fb4:	cbz	w9, 232f8c <manager_inhibit_what+0x5c>
  232fb8:	ldr	w8, [x8, #36]
  232fbc:	orr	w21, w8, w21
  232fc0:	b	232f8c <manager_inhibit_what+0x5c>
  232fc4:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  232fc8:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  232fcc:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  232fd0:	add	x1, x1, #0x102
  232fd4:	add	x2, x2, #0x8cf
  232fd8:	add	x4, x4, #0x8ea
  232fdc:	mov	w3, #0x17a                 	// #378
  232fe0:	bl	240790 <log_assert_failed_realm@plt>

0000000000232fe4 <hashmap_iterate>:
  232fe4:	stp	x29, x30, [sp, #-16]!
  232fe8:	mov	x3, xzr
  232fec:	mov	x29, sp
  232ff0:	bl	240b00 <internal_hashmap_iterate@plt>
  232ff4:	and	w0, w0, #0x1
  232ff8:	ldp	x29, x30, [sp], #16
  232ffc:	ret

0000000000233000 <manager_is_inhibited>:
  233000:	sub	sp, sp, #0x80
  233004:	stp	x29, x30, [sp, #32]
  233008:	stp	x28, x27, [sp, #48]
  23300c:	stp	x26, x25, [sp, #64]
  233010:	stp	x24, x23, [sp, #80]
  233014:	stp	x22, x21, [sp, #96]
  233018:	stp	x20, x19, [sp, #112]
  23301c:	add	x29, sp, #0x20
  233020:	cbz	x0, 233168 <manager_is_inhibited+0x168>
  233024:	sub	w8, w1, #0x1
  233028:	mov	w25, w1
  23302c:	cmp	w8, #0x7f
  233030:	b.cs	233188 <manager_is_inhibited+0x188>  // b.hs, b.nlast
  233034:	mov	w8, #0xfffffffe            	// #-2
  233038:	str	w8, [sp, #8]
  23303c:	str	xzr, [sp, #16]
  233040:	mov	x26, x0
  233044:	ldr	x0, [x0, #56]
  233048:	mov	w24, w2
  23304c:	add	x1, sp, #0x8
  233050:	sub	x2, x29, #0x8
  233054:	mov	x20, x7
  233058:	mov	w21, w6
  23305c:	mov	w22, w5
  233060:	mov	w23, w4
  233064:	mov	x19, x3
  233068:	bl	232fe4 <hashmap_iterate>
  23306c:	tbz	w0, #0, 233130 <manager_is_inhibited+0x130>
  233070:	str	x20, [sp]
  233074:	mov	x27, xzr
  233078:	mov	x28, xzr
  23307c:	mov	w20, wzr
  233080:	b	233098 <manager_is_inhibited+0x98>
  233084:	ldr	x0, [x26, #56]
  233088:	add	x1, sp, #0x8
  23308c:	sub	x2, x29, #0x8
  233090:	bl	232fe4 <hashmap_iterate>
  233094:	tbz	w0, #0, 23313c <manager_is_inhibited+0x13c>
  233098:	ldur	x8, [x29, #-8]
  23309c:	ldrb	w9, [x8, #32]
  2330a0:	cbz	w9, 233084 <manager_is_inhibited+0x84>
  2330a4:	ldr	w9, [x8, #36]
  2330a8:	tst	w9, w25
  2330ac:	b.eq	233084 <manager_is_inhibited+0x84>  // b.none
  2330b0:	ldr	w9, [x8, #56]
  2330b4:	cmp	w9, w24
  2330b8:	b.ne	233084 <manager_is_inhibited+0x84>  // b.any
  2330bc:	tbz	w23, #0, 2330d4 <manager_is_inhibited+0xd4>
  2330c0:	ldr	w1, [x8, #60]
  2330c4:	mov	x0, x26
  2330c8:	bl	2331ac <pid_is_active>
  2330cc:	cmp	w0, #0x0
  2330d0:	b.le	233084 <manager_is_inhibited+0x84>
  2330d4:	tbz	w22, #0, 2330e8 <manager_is_inhibited+0xe8>
  2330d8:	ldur	x8, [x29, #-8]
  2330dc:	ldr	w8, [x8, #64]
  2330e0:	cmp	w8, w21
  2330e4:	b.eq	233084 <manager_is_inhibited+0x84>  // b.none
  2330e8:	tbz	w20, #0, 2330fc <manager_is_inhibited+0xfc>
  2330ec:	ldur	x8, [x29, #-8]
  2330f0:	ldr	x8, [x8, #80]
  2330f4:	cmp	x8, x28
  2330f8:	b.cs	233104 <manager_is_inhibited+0x104>  // b.hs, b.nlast
  2330fc:	ldur	x8, [x29, #-8]
  233100:	ldp	x27, x28, [x8, #72]
  233104:	ldr	x9, [sp]
  233108:	cbz	x9, 233114 <manager_is_inhibited+0x114>
  23310c:	ldur	x8, [x29, #-8]
  233110:	str	x8, [x9]
  233114:	ldr	x0, [x26, #56]
  233118:	add	x1, sp, #0x8
  23311c:	sub	x2, x29, #0x8
  233120:	bl	232fe4 <hashmap_iterate>
  233124:	mov	w20, #0x1                   	// #1
  233128:	tbnz	w0, #0, 233098 <manager_is_inhibited+0x98>
  23312c:	b	23313c <manager_is_inhibited+0x13c>
  233130:	mov	w20, wzr
  233134:	mov	x28, xzr
  233138:	mov	x27, xzr
  23313c:	cbz	x19, 233144 <manager_is_inhibited+0x144>
  233140:	stp	x27, x28, [x19]
  233144:	and	w0, w20, #0x1
  233148:	ldp	x20, x19, [sp, #112]
  23314c:	ldp	x22, x21, [sp, #96]
  233150:	ldp	x24, x23, [sp, #80]
  233154:	ldp	x26, x25, [sp, #64]
  233158:	ldp	x28, x27, [sp, #48]
  23315c:	ldp	x29, x30, [sp, #32]
  233160:	add	sp, sp, #0x80
  233164:	ret
  233168:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23316c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  233170:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  233174:	add	x1, x1, #0x102
  233178:	add	x2, x2, #0x8cf
  23317c:	add	x4, x4, #0xce2
  233180:	mov	w3, #0x1a4                 	// #420
  233184:	bl	240790 <log_assert_failed_realm@plt>
  233188:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23318c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  233190:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  233194:	add	x1, x1, #0xe1f
  233198:	add	x2, x2, #0x8cf
  23319c:	add	x4, x4, #0xce2
  2331a0:	mov	w3, #0x1a5                 	// #421
  2331a4:	mov	w0, wzr
  2331a8:	bl	240790 <log_assert_failed_realm@plt>

00000000002331ac <pid_is_active>:
  2331ac:	sub	sp, sp, #0x20
  2331b0:	add	x2, sp, #0x8
  2331b4:	stp	x29, x30, [sp, #16]
  2331b8:	add	x29, sp, #0x10
  2331bc:	bl	227fd4 <manager_get_session_by_pid>
  2331c0:	tbnz	w0, #31, 2331dc <pid_is_active+0x30>
  2331c4:	cbz	w0, 2331d8 <pid_is_active+0x2c>
  2331c8:	ldr	x0, [sp, #8]
  2331cc:	bl	23a310 <session_is_active>
  2331d0:	and	w0, w0, #0x1
  2331d4:	b	2331dc <pid_is_active+0x30>
  2331d8:	mov	w0, #0x1                   	// #1
  2331dc:	ldp	x29, x30, [sp, #16]
  2331e0:	add	sp, sp, #0x20
  2331e4:	ret

00000000002331e8 <inhibit_what_to_string>:
  2331e8:	cmp	w0, #0x7f
  2331ec:	b.ls	2331f8 <inhibit_what_to_string+0x10>  // b.plast
  2331f0:	mov	x0, xzr
  2331f4:	ret
  2331f8:	stp	x29, x30, [sp, #-16]!
  2331fc:	mov	x29, sp
  233200:	mov	w8, w0
  233204:	movz	x0, #0x0, lsl #16
  233208:	movk	x0, #0x10
  23320c:	nop
  233210:	nop
  233214:	mrs	x9, tpidr_el0
  233218:	tbnz	w8, #0, 233228 <inhibit_what_to_string+0x40>
  23321c:	add	x10, x9, x0
  233220:	tbnz	w8, #1, 23325c <inhibit_what_to_string+0x74>
  233224:	b	23327c <inhibit_what_to_string+0x94>
  233228:	movz	x0, #0x0, lsl #16
  23322c:	movk	x0, #0x10
  233230:	nop
  233234:	nop
  233238:	adrp	x10, 210000 <inhibit_what_to_string.buffer+0x210000>
  23323c:	add	x10, x10, #0xd57
  233240:	ldr	x10, [x10]
  233244:	add	x11, x9, x0
  233248:	mov	w12, #0x3a                  	// #58
  23324c:	strh	w12, [x11, #8]
  233250:	str	x10, [x11]
  233254:	add	x10, x11, #0x9
  233258:	tbz	w8, #1, 23327c <inhibit_what_to_string+0x94>
  23325c:	mov	w11, #0x7065                	// #28773
  233260:	movk	w11, #0x3a, lsl #16
  233264:	mov	w12, #0x6c73                	// #27763
  233268:	stur	w11, [x10, #3]
  23326c:	add	x11, x10, #0x6
  233270:	movk	w12, #0x6565, lsl #16
  233274:	str	w12, [x10]
  233278:	mov	x10, x11
  23327c:	tbnz	w8, #2, 2332e0 <inhibit_what_to_string+0xf8>
  233280:	tbnz	w8, #3, 233300 <inhibit_what_to_string+0x118>
  233284:	tbnz	w8, #4, 233324 <inhibit_what_to_string+0x13c>
  233288:	tbnz	w8, #5, 23334c <inhibit_what_to_string+0x164>
  23328c:	tbz	w8, #6, 2332b4 <inhibit_what_to_string+0xcc>
  233290:	adrp	x8, 211000 <inhibit_what_to_string.buffer+0x211000>
  233294:	add	x8, x8, #0x939
  233298:	ldr	q0, [x8]
  23329c:	mov	w8, #0x6863                	// #26723
  2332a0:	movk	w8, #0x3a, lsl #16
  2332a4:	stur	w8, [x10, #15]
  2332a8:	add	x8, x10, #0x12
  2332ac:	str	q0, [x10]
  2332b0:	mov	x10, x8
  2332b4:	movz	x0, #0x0, lsl #16
  2332b8:	movk	x0, #0x10
  2332bc:	nop
  2332c0:	nop
  2332c4:	add	x0, x9, x0
  2332c8:	sub	x8, x10, #0x1
  2332cc:	cmp	x10, x0
  2332d0:	csel	x8, x8, x10, hi  // hi = pmore
  2332d4:	strb	wzr, [x8]
  2332d8:	ldp	x29, x30, [sp], #16
  2332dc:	ret
  2332e0:	mov	w11, #0x3a                  	// #58
  2332e4:	mov	w12, #0x6469                	// #25705
  2332e8:	strh	w11, [x10, #4]
  2332ec:	add	x11, x10, #0x5
  2332f0:	movk	w12, #0x656c, lsl #16
  2332f4:	str	w12, [x10]
  2332f8:	mov	x10, x11
  2332fc:	tbz	w8, #3, 233284 <inhibit_what_to_string+0x9c>
  233300:	adrp	x11, 209000 <inhibit_what_to_string.buffer+0x209000>
  233304:	add	x11, x11, #0x3f1
  233308:	ldr	q0, [x11]
  23330c:	mov	w11, #0x3a                  	// #58
  233310:	strh	w11, [x10, #16]
  233314:	add	x11, x10, #0x11
  233318:	str	q0, [x10]
  23331c:	mov	x10, x11
  233320:	tbz	w8, #4, 233288 <inhibit_what_to_string+0xa0>
  233324:	adrp	x11, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  233328:	add	x11, x11, #0x2ea
  23332c:	ldr	q0, [x11]
  233330:	mov	w11, #0x7965                	// #31077
  233334:	movk	w11, #0x3a, lsl #16
  233338:	str	w11, [x10, #16]
  23333c:	add	x11, x10, #0x13
  233340:	str	q0, [x10]
  233344:	mov	x10, x11
  233348:	tbz	w8, #5, 23328c <inhibit_what_to_string+0xa4>
  23334c:	adrp	x11, 211000 <inhibit_what_to_string.buffer+0x211000>
  233350:	add	x11, x11, #0x923
  233354:	ldur	x12, [x11, #14]
  233358:	ldr	q0, [x11]
  23335c:	add	x11, x10, #0x15
  233360:	stur	x12, [x10, #14]
  233364:	str	q0, [x10]
  233368:	mov	x10, x11
  23336c:	tbnz	w8, #6, 233290 <inhibit_what_to_string+0xa8>
  233370:	b	2332b4 <inhibit_what_to_string+0xcc>

0000000000233374 <fclosep>:
  233374:	stp	x29, x30, [sp, #-16]!
  233378:	ldr	x0, [x0]
  23337c:	mov	x29, sp
  233380:	bl	2414a0 <safe_fclose@plt>
  233384:	ldp	x29, x30, [sp], #16
  233388:	ret

000000000023338c <bus_seat_method_terminate>:
  23338c:	stp	x29, x30, [sp, #-32]!
  233390:	stp	x20, x19, [sp, #16]
  233394:	mov	x29, sp
  233398:	cbz	x0, 233408 <bus_seat_method_terminate+0x7c>
  23339c:	mov	x20, x1
  2333a0:	cbz	x1, 233428 <bus_seat_method_terminate+0x9c>
  2333a4:	ldr	x8, [x20]
  2333a8:	mov	x7, x2
  2333ac:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2333b0:	add	x2, x2, #0x51b
  2333b4:	add	x6, x8, #0x1b0
  2333b8:	mov	w1, #0x5                   	// #5
  2333bc:	mov	w5, #0xffffffff            	// #-1
  2333c0:	mov	x3, xzr
  2333c4:	mov	w4, wzr
  2333c8:	mov	x19, x0
  2333cc:	bl	241160 <bus_verify_polkit_async@plt>
  2333d0:	tbnz	w0, #31, 2333fc <bus_seat_method_terminate+0x70>
  2333d4:	cbz	w0, 2333f8 <bus_seat_method_terminate+0x6c>
  2333d8:	mov	w1, #0x1                   	// #1
  2333dc:	mov	x0, x20
  2333e0:	bl	2356b4 <seat_stop_sessions>
  2333e4:	tbnz	w0, #31, 2333fc <bus_seat_method_terminate+0x70>
  2333e8:	mov	x0, x19
  2333ec:	mov	x1, xzr
  2333f0:	bl	2410a0 <sd_bus_reply_method_return@plt>
  2333f4:	b	2333fc <bus_seat_method_terminate+0x70>
  2333f8:	mov	w0, #0x1                   	// #1
  2333fc:	ldp	x20, x19, [sp, #16]
  233400:	ldp	x29, x30, [sp], #32
  233404:	ret
  233408:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23340c:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233410:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233414:	add	x1, x1, #0x30
  233418:	add	x2, x2, #0x4b6
  23341c:	add	x4, x4, #0x4d3
  233420:	mov	w3, #0x88                  	// #136
  233424:	bl	240790 <log_assert_failed_realm@plt>
  233428:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23342c:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233430:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233434:	add	x1, x1, #0x6de
  233438:	add	x2, x2, #0x4b6
  23343c:	add	x4, x4, #0x4d3
  233440:	mov	w3, #0x89                  	// #137
  233444:	mov	w0, wzr
  233448:	bl	240790 <log_assert_failed_realm@plt>

000000000023344c <property_get_active_session>:
  23344c:	sub	sp, sp, #0x30
  233450:	stp	x29, x30, [sp, #16]
  233454:	stp	x20, x19, [sp, #32]
  233458:	add	x29, sp, #0x10
  23345c:	str	xzr, [sp, #8]
  233460:	cbz	x0, 2334ec <property_get_active_session+0xa0>
  233464:	mov	x19, x4
  233468:	cbz	x4, 23350c <property_get_active_session+0xc0>
  23346c:	mov	x20, x5
  233470:	cbz	x5, 233530 <property_get_active_session+0xe4>
  233474:	ldr	x0, [x20, #32]
  233478:	cbz	x0, 233484 <property_get_active_session+0x38>
  23347c:	bl	2374bc <session_bus_path>
  233480:	b	233490 <property_get_active_session+0x44>
  233484:	adrp	x0, 207000 <inhibit_what_to_string.buffer+0x207000>
  233488:	add	x0, x0, #0xd32
  23348c:	bl	240c40 <strdup@plt>
  233490:	mov	x3, x0
  233494:	str	x0, [sp, #8]
  233498:	cbz	x0, 2334ac <property_get_active_session+0x60>
  23349c:	ldr	x8, [x20, #32]
  2334a0:	cbz	x8, 2334b4 <property_get_active_session+0x68>
  2334a4:	ldr	x2, [x8, #8]
  2334a8:	b	2334bc <property_get_active_session+0x70>
  2334ac:	mov	w19, #0xfffffff4            	// #-12
  2334b0:	b	2334d0 <property_get_active_session+0x84>
  2334b4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2334b8:	add	x2, x2, #0xb7e
  2334bc:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  2334c0:	add	x1, x1, #0x3e
  2334c4:	mov	x0, x19
  2334c8:	bl	240ff0 <sd_bus_message_append@plt>
  2334cc:	mov	w19, w0
  2334d0:	add	x0, sp, #0x8
  2334d4:	bl	233e24 <freep>
  2334d8:	mov	w0, w19
  2334dc:	ldp	x20, x19, [sp, #32]
  2334e0:	ldp	x29, x30, [sp, #16]
  2334e4:	add	sp, sp, #0x30
  2334e8:	ret
  2334ec:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2334f0:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2334f4:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2334f8:	add	x1, x1, #0x887
  2334fc:	add	x2, x2, #0x4b6
  233500:	add	x4, x4, #0x37b
  233504:	mov	w3, #0x23                  	// #35
  233508:	bl	240790 <log_assert_failed_realm@plt>
  23350c:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  233510:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233514:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  233518:	add	x1, x1, #0xbb3
  23351c:	add	x2, x2, #0x4b6
  233520:	add	x4, x4, #0x37b
  233524:	mov	w3, #0x24                  	// #36
  233528:	mov	w0, wzr
  23352c:	bl	240790 <log_assert_failed_realm@plt>
  233530:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  233534:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233538:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23353c:	add	x1, x1, #0x6de
  233540:	add	x2, x2, #0x4b6
  233544:	add	x4, x4, #0x37b
  233548:	mov	w3, #0x25                  	// #37
  23354c:	mov	w0, wzr
  233550:	bl	240790 <log_assert_failed_realm@plt>

0000000000233554 <property_get_can_multi_session>:
  233554:	stp	x29, x30, [sp, #-32]!
  233558:	str	x19, [sp, #16]
  23355c:	mov	x29, sp
  233560:	cbz	x0, 233598 <property_get_can_multi_session+0x44>
  233564:	mov	x19, x4
  233568:	cbz	x4, 2335b8 <property_get_can_multi_session+0x64>
  23356c:	cbz	x5, 2335c4 <property_get_can_multi_session+0x70>
  233570:	mov	x0, x5
  233574:	bl	234af8 <seat_can_multi_session>
  233578:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23357c:	and	w2, w0, #0x1
  233580:	add	x1, x1, #0xb8c
  233584:	mov	x0, x19
  233588:	bl	240ff0 <sd_bus_message_append@plt>
  23358c:	ldr	x19, [sp, #16]
  233590:	ldp	x29, x30, [sp], #32
  233594:	ret
  233598:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23359c:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2335a0:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  2335a4:	add	x1, x1, #0x887
  2335a8:	add	x2, x2, #0x4b6
  2335ac:	add	x4, x4, #0x6cb
  2335b0:	mov	w3, #0x13                  	// #19
  2335b4:	bl	240790 <log_assert_failed_realm@plt>
  2335b8:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2335bc:	add	x1, x1, #0xbb3
  2335c0:	b	2335cc <property_get_can_multi_session+0x78>
  2335c4:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2335c8:	add	x1, x1, #0xb87
  2335cc:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2335d0:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  2335d4:	add	x2, x2, #0x4b6
  2335d8:	add	x4, x4, #0x6cb
  2335dc:	mov	w3, #0x13                  	// #19
  2335e0:	mov	w0, wzr
  2335e4:	bl	240790 <log_assert_failed_realm@plt>

00000000002335e8 <property_get_can_tty>:
  2335e8:	stp	x29, x30, [sp, #-32]!
  2335ec:	str	x19, [sp, #16]
  2335f0:	mov	x29, sp
  2335f4:	cbz	x0, 23362c <property_get_can_tty+0x44>
  2335f8:	mov	x19, x4
  2335fc:	cbz	x4, 23364c <property_get_can_tty+0x64>
  233600:	cbz	x5, 233658 <property_get_can_tty+0x70>
  233604:	mov	x0, x5
  233608:	bl	234b34 <seat_can_tty>
  23360c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  233610:	and	w2, w0, #0x1
  233614:	add	x1, x1, #0xb8c
  233618:	mov	x0, x19
  23361c:	bl	240ff0 <sd_bus_message_append@plt>
  233620:	ldr	x19, [sp, #16]
  233624:	ldp	x29, x30, [sp], #32
  233628:	ret
  23362c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  233630:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233634:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  233638:	add	x1, x1, #0x887
  23363c:	add	x2, x2, #0x4b6
  233640:	add	x4, x4, #0xd77
  233644:	mov	w3, #0x14                  	// #20
  233648:	bl	240790 <log_assert_failed_realm@plt>
  23364c:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  233650:	add	x1, x1, #0xbb3
  233654:	b	233660 <property_get_can_tty+0x78>
  233658:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23365c:	add	x1, x1, #0xb87
  233660:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233664:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  233668:	add	x2, x2, #0x4b6
  23366c:	add	x4, x4, #0xd77
  233670:	mov	w3, #0x14                  	// #20
  233674:	mov	w0, wzr
  233678:	bl	240790 <log_assert_failed_realm@plt>

000000000023367c <property_get_can_graphical>:
  23367c:	stp	x29, x30, [sp, #-32]!
  233680:	str	x19, [sp, #16]
  233684:	mov	x29, sp
  233688:	cbz	x0, 2336c0 <property_get_can_graphical+0x44>
  23368c:	mov	x19, x4
  233690:	cbz	x4, 2336e0 <property_get_can_graphical+0x64>
  233694:	cbz	x5, 2336ec <property_get_can_graphical+0x70>
  233698:	mov	x0, x5
  23369c:	bl	234b70 <seat_can_graphical>
  2336a0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2336a4:	and	w2, w0, #0x1
  2336a8:	add	x1, x1, #0xb8c
  2336ac:	mov	x0, x19
  2336b0:	bl	240ff0 <sd_bus_message_append@plt>
  2336b4:	ldr	x19, [sp, #16]
  2336b8:	ldp	x29, x30, [sp], #32
  2336bc:	ret
  2336c0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2336c4:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2336c8:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  2336cc:	add	x1, x1, #0x887
  2336d0:	add	x2, x2, #0x4b6
  2336d4:	add	x4, x4, #0x74c
  2336d8:	mov	w3, #0x15                  	// #21
  2336dc:	bl	240790 <log_assert_failed_realm@plt>
  2336e0:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2336e4:	add	x1, x1, #0xbb3
  2336e8:	b	2336f4 <property_get_can_graphical+0x78>
  2336ec:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2336f0:	add	x1, x1, #0xb87
  2336f4:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2336f8:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  2336fc:	add	x2, x2, #0x4b6
  233700:	add	x4, x4, #0x74c
  233704:	mov	w3, #0x15                  	// #21
  233708:	mov	w0, wzr
  23370c:	bl	240790 <log_assert_failed_realm@plt>

0000000000233710 <property_get_sessions>:
  233710:	stp	x29, x30, [sp, #-64]!
  233714:	str	x23, [sp, #16]
  233718:	stp	x22, x21, [sp, #32]
  23371c:	stp	x20, x19, [sp, #48]
  233720:	mov	x29, sp
  233724:	cbz	x0, 2337e8 <property_get_sessions+0xd8>
  233728:	mov	x19, x4
  23372c:	cbz	x4, 233808 <property_get_sessions+0xf8>
  233730:	mov	x21, x5
  233734:	cbz	x5, 23382c <property_get_sessions+0x11c>
  233738:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23373c:	add	x2, x2, #0x3e
  233740:	mov	w1, #0x61                  	// #97
  233744:	mov	x0, x19
  233748:	bl	241070 <sd_bus_message_open_container@plt>
  23374c:	tbnz	w0, #31, 2337cc <property_get_sessions+0xbc>
  233750:	ldr	x21, [x21, #48]
  233754:	cbz	x21, 2337b8 <property_get_sessions+0xa8>
  233758:	adrp	x22, 208000 <inhibit_what_to_string.buffer+0x208000>
  23375c:	add	x22, x22, #0x3e
  233760:	mov	x0, x21
  233764:	str	xzr, [x29, #24]
  233768:	bl	2374bc <session_bus_path>
  23376c:	str	x0, [x29, #24]
  233770:	cbz	x0, 23379c <property_get_sessions+0x8c>
  233774:	ldr	x2, [x21, #8]
  233778:	mov	x3, x0
  23377c:	mov	x0, x19
  233780:	mov	x1, x22
  233784:	bl	240ff0 <sd_bus_message_append@plt>
  233788:	cmp	w0, #0x0
  23378c:	mvn	w8, w0
  233790:	csel	w20, w0, w20, lt  // lt = tstop
  233794:	lsr	w23, w8, #31
  233798:	b	2337a4 <property_get_sessions+0x94>
  23379c:	mov	w23, wzr
  2337a0:	mov	w20, #0xfffffff4            	// #-12
  2337a4:	add	x0, x29, #0x18
  2337a8:	bl	233e24 <freep>
  2337ac:	tbz	w23, #0, 2337d0 <property_get_sessions+0xc0>
  2337b0:	ldr	x21, [x21, #272]
  2337b4:	cbnz	x21, 233760 <property_get_sessions+0x50>
  2337b8:	mov	x0, x19
  2337bc:	bl	241080 <sd_bus_message_close_container@plt>
  2337c0:	cmp	w0, #0x0
  2337c4:	csinc	w20, w0, wzr, lt  // lt = tstop
  2337c8:	b	2337d0 <property_get_sessions+0xc0>
  2337cc:	mov	w20, w0
  2337d0:	mov	w0, w20
  2337d4:	ldp	x20, x19, [sp, #48]
  2337d8:	ldp	x22, x21, [sp, #32]
  2337dc:	ldr	x23, [sp, #16]
  2337e0:	ldp	x29, x30, [sp], #64
  2337e4:	ret
  2337e8:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2337ec:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2337f0:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  2337f4:	add	x1, x1, #0x887
  2337f8:	add	x2, x2, #0x4b6
  2337fc:	add	x4, x4, #0x75d
  233800:	mov	w3, #0x3b                  	// #59
  233804:	bl	240790 <log_assert_failed_realm@plt>
  233808:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23380c:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233810:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  233814:	add	x1, x1, #0xbb3
  233818:	add	x2, x2, #0x4b6
  23381c:	add	x4, x4, #0x75d
  233820:	mov	w3, #0x3c                  	// #60
  233824:	mov	w0, wzr
  233828:	bl	240790 <log_assert_failed_realm@plt>
  23382c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  233830:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233834:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  233838:	add	x1, x1, #0x6de
  23383c:	add	x2, x2, #0x4b6
  233840:	add	x4, x4, #0x75d
  233844:	mov	w3, #0x3d                  	// #61
  233848:	mov	w0, wzr
  23384c:	bl	240790 <log_assert_failed_realm@plt>

0000000000233850 <property_get_idle_hint>:
  233850:	stp	x29, x30, [sp, #-32]!
  233854:	str	x19, [sp, #16]
  233858:	mov	x29, sp
  23385c:	cbz	x0, 23389c <property_get_idle_hint+0x4c>
  233860:	mov	x19, x4
  233864:	cbz	x4, 2338bc <property_get_idle_hint+0x6c>
  233868:	cbz	x5, 2338e0 <property_get_idle_hint+0x90>
  23386c:	mov	x0, x5
  233870:	mov	x1, xzr
  233874:	bl	235a7c <seat_get_idle_hint>
  233878:	cmp	w0, #0x0
  23387c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  233880:	cset	w2, gt
  233884:	add	x1, x1, #0xb8c
  233888:	mov	x0, x19
  23388c:	bl	240ff0 <sd_bus_message_append@plt>
  233890:	ldr	x19, [sp, #16]
  233894:	ldp	x29, x30, [sp], #32
  233898:	ret
  23389c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2338a0:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2338a4:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2338a8:	add	x1, x1, #0x887
  2338ac:	add	x2, x2, #0x4b6
  2338b0:	add	x4, x4, #0x1a6
  2338b4:	mov	w3, #0x62                  	// #98
  2338b8:	bl	240790 <log_assert_failed_realm@plt>
  2338bc:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2338c0:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2338c4:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2338c8:	add	x1, x1, #0xbb3
  2338cc:	add	x2, x2, #0x4b6
  2338d0:	add	x4, x4, #0x1a6
  2338d4:	mov	w3, #0x63                  	// #99
  2338d8:	mov	w0, wzr
  2338dc:	bl	240790 <log_assert_failed_realm@plt>
  2338e0:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2338e4:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2338e8:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2338ec:	add	x1, x1, #0x6de
  2338f0:	add	x2, x2, #0x4b6
  2338f4:	add	x4, x4, #0x1a6
  2338f8:	mov	w3, #0x64                  	// #100
  2338fc:	mov	w0, wzr
  233900:	bl	240790 <log_assert_failed_realm@plt>

0000000000233904 <property_get_idle_since_hint>:
  233904:	sub	sp, sp, #0x40
  233908:	stp	x29, x30, [sp, #16]
  23390c:	str	x21, [sp, #32]
  233910:	stp	x20, x19, [sp, #48]
  233914:	add	x29, sp, #0x10
  233918:	cbz	x0, 233984 <property_get_idle_since_hint+0x80>
  23391c:	mov	x19, x4
  233920:	cbz	x4, 2339a4 <property_get_idle_since_hint+0xa0>
  233924:	cbz	x5, 2339c8 <property_get_idle_since_hint+0xc4>
  233928:	mov	x1, sp
  23392c:	mov	x0, x5
  233930:	mov	x20, x3
  233934:	mov	x21, sp
  233938:	bl	235a7c <seat_get_idle_hint>
  23393c:	tbnz	w0, #31, 233970 <property_get_idle_since_hint+0x6c>
  233940:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  233944:	add	x1, x1, #0xbea
  233948:	mov	x0, x20
  23394c:	bl	240c30 <strcmp@plt>
  233950:	add	x8, x21, #0x8
  233954:	cmp	w0, #0x0
  233958:	csel	x8, x21, x8, eq  // eq = none
  23395c:	ldr	x2, [x8]
  233960:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  233964:	add	x1, x1, #0xfe8
  233968:	mov	x0, x19
  23396c:	bl	240ff0 <sd_bus_message_append@plt>
  233970:	ldp	x20, x19, [sp, #48]
  233974:	ldr	x21, [sp, #32]
  233978:	ldp	x29, x30, [sp, #16]
  23397c:	add	sp, sp, #0x40
  233980:	ret
  233984:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  233988:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23398c:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  233990:	add	x1, x1, #0x887
  233994:	add	x2, x2, #0x4b6
  233998:	add	x4, x4, #0x66c
  23399c:	mov	w3, #0x77                  	// #119
  2339a0:	bl	240790 <log_assert_failed_realm@plt>
  2339a4:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2339a8:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2339ac:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  2339b0:	add	x1, x1, #0xbb3
  2339b4:	add	x2, x2, #0x4b6
  2339b8:	add	x4, x4, #0x66c
  2339bc:	mov	w3, #0x78                  	// #120
  2339c0:	mov	w0, wzr
  2339c4:	bl	240790 <log_assert_failed_realm@plt>
  2339c8:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2339cc:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2339d0:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  2339d4:	add	x1, x1, #0x6de
  2339d8:	add	x2, x2, #0x4b6
  2339dc:	add	x4, x4, #0x66c
  2339e0:	mov	w3, #0x79                  	// #121
  2339e4:	mov	w0, wzr
  2339e8:	bl	240790 <log_assert_failed_realm@plt>

00000000002339ec <method_activate_session>:
  2339ec:	stp	x29, x30, [sp, #-48]!
  2339f0:	str	x21, [sp, #16]
  2339f4:	stp	x20, x19, [sp, #32]
  2339f8:	mov	x29, sp
  2339fc:	cbz	x0, 233aac <method_activate_session+0xc0>
  233a00:	mov	x21, x1
  233a04:	cbz	x1, 233acc <method_activate_session+0xe0>
  233a08:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  233a0c:	mov	x19, x2
  233a10:	add	x1, x1, #0x6de
  233a14:	add	x2, x29, #0x18
  233a18:	mov	x20, x0
  233a1c:	bl	240fb0 <sd_bus_message_read@plt>
  233a20:	tbnz	w0, #31, 233a9c <method_activate_session+0xb0>
  233a24:	ldr	x8, [x21]
  233a28:	ldr	x1, [x29, #24]
  233a2c:	ldr	x0, [x8, #32]
  233a30:	bl	2341b0 <hashmap_get>
  233a34:	cbz	x0, 233a68 <method_activate_session+0x7c>
  233a38:	ldr	x8, [x0, #136]
  233a3c:	cmp	x8, x21
  233a40:	b.eq	233a88 <method_activate_session+0x9c>  // b.none
  233a44:	ldr	x3, [x29, #24]
  233a48:	ldr	x4, [x21, #8]
  233a4c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  233a50:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  233a54:	add	x1, x1, #0xd48
  233a58:	add	x2, x2, #0x9
  233a5c:	mov	x0, x19
  233a60:	bl	240f50 <sd_bus_error_setf@plt>
  233a64:	b	233a9c <method_activate_session+0xb0>
  233a68:	ldr	x3, [x29, #24]
  233a6c:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  233a70:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  233a74:	add	x1, x1, #0x5bb
  233a78:	add	x2, x2, #0x7ad
  233a7c:	mov	x0, x19
  233a80:	bl	240f50 <sd_bus_error_setf@plt>
  233a84:	b	233a9c <method_activate_session+0xb0>
  233a88:	bl	23b214 <session_activate>
  233a8c:	tbnz	w0, #31, 233a9c <method_activate_session+0xb0>
  233a90:	mov	x0, x20
  233a94:	mov	x1, xzr
  233a98:	bl	2410a0 <sd_bus_reply_method_return@plt>
  233a9c:	ldp	x20, x19, [sp, #32]
  233aa0:	ldr	x21, [sp, #16]
  233aa4:	ldp	x29, x30, [sp], #48
  233aa8:	ret
  233aac:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  233ab0:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233ab4:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233ab8:	add	x1, x1, #0x30
  233abc:	add	x2, x2, #0x4b6
  233ac0:	add	x4, x4, #0xce5
  233ac4:	mov	w3, #0xa6                  	// #166
  233ac8:	bl	240790 <log_assert_failed_realm@plt>
  233acc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  233ad0:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233ad4:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233ad8:	add	x1, x1, #0x6de
  233adc:	add	x2, x2, #0x4b6
  233ae0:	add	x4, x4, #0xce5
  233ae4:	mov	w3, #0xa7                  	// #167
  233ae8:	mov	w0, wzr
  233aec:	bl	240790 <log_assert_failed_realm@plt>

0000000000233af0 <method_switch_to>:
  233af0:	sub	sp, sp, #0x30
  233af4:	stp	x29, x30, [sp, #16]
  233af8:	stp	x20, x19, [sp, #32]
  233afc:	add	x29, sp, #0x10
  233b00:	cbz	x0, 233b5c <method_switch_to+0x6c>
  233b04:	mov	x20, x1
  233b08:	cbz	x1, 233b7c <method_switch_to+0x8c>
  233b0c:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  233b10:	add	x1, x1, #0x420
  233b14:	sub	x2, x29, #0x4
  233b18:	mov	x19, x0
  233b1c:	bl	240fb0 <sd_bus_message_read@plt>
  233b20:	tbnz	w0, #31, 233b4c <method_switch_to+0x5c>
  233b24:	ldur	w1, [x29, #-4]
  233b28:	cbz	w1, 233b48 <method_switch_to+0x58>
  233b2c:	mov	x0, x20
  233b30:	bl	23508c <seat_switch_to>
  233b34:	tbnz	w0, #31, 233b4c <method_switch_to+0x5c>
  233b38:	mov	x0, x19
  233b3c:	mov	x1, xzr
  233b40:	bl	2410a0 <sd_bus_reply_method_return@plt>
  233b44:	b	233b4c <method_switch_to+0x5c>
  233b48:	mov	w0, #0xffffffea            	// #-22
  233b4c:	ldp	x20, x19, [sp, #32]
  233b50:	ldp	x29, x30, [sp, #16]
  233b54:	add	sp, sp, #0x30
  233b58:	ret
  233b5c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  233b60:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233b64:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  233b68:	add	x1, x1, #0x30
  233b6c:	add	x2, x2, #0x4b6
  233b70:	add	x4, x4, #0xc14
  233b74:	mov	w3, #0xc0                  	// #192
  233b78:	bl	240790 <log_assert_failed_realm@plt>
  233b7c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  233b80:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233b84:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  233b88:	add	x1, x1, #0x6de
  233b8c:	add	x2, x2, #0x4b6
  233b90:	add	x4, x4, #0xc14
  233b94:	mov	w3, #0xc1                  	// #193
  233b98:	mov	w0, wzr
  233b9c:	bl	240790 <log_assert_failed_realm@plt>

0000000000233ba0 <method_switch_to_next>:
  233ba0:	stp	x29, x30, [sp, #-32]!
  233ba4:	str	x19, [sp, #16]
  233ba8:	mov	x29, sp
  233bac:	cbz	x0, 233bdc <method_switch_to_next+0x3c>
  233bb0:	cbz	x1, 233bfc <method_switch_to_next+0x5c>
  233bb4:	mov	x19, x0
  233bb8:	mov	x0, x1
  233bbc:	bl	2350fc <seat_switch_to_next>
  233bc0:	tbnz	w0, #31, 233bd0 <method_switch_to_next+0x30>
  233bc4:	mov	x0, x19
  233bc8:	mov	x1, xzr
  233bcc:	bl	2410a0 <sd_bus_reply_method_return@plt>
  233bd0:	ldr	x19, [sp, #16]
  233bd4:	ldp	x29, x30, [sp], #32
  233bd8:	ret
  233bdc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  233be0:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233be4:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233be8:	add	x1, x1, #0x30
  233bec:	add	x2, x2, #0x4b6
  233bf0:	add	x4, x4, #0x564
  233bf4:	mov	w3, #0xd5                  	// #213
  233bf8:	bl	240790 <log_assert_failed_realm@plt>
  233bfc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  233c00:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233c04:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233c08:	add	x1, x1, #0x6de
  233c0c:	add	x2, x2, #0x4b6
  233c10:	add	x4, x4, #0x564
  233c14:	mov	w3, #0xd6                  	// #214
  233c18:	mov	w0, wzr
  233c1c:	bl	240790 <log_assert_failed_realm@plt>

0000000000233c20 <method_switch_to_previous>:
  233c20:	stp	x29, x30, [sp, #-32]!
  233c24:	str	x19, [sp, #16]
  233c28:	mov	x29, sp
  233c2c:	cbz	x0, 233c5c <method_switch_to_previous+0x3c>
  233c30:	cbz	x1, 233c7c <method_switch_to_previous+0x5c>
  233c34:	mov	x19, x0
  233c38:	mov	x0, x1
  233c3c:	bl	235188 <seat_switch_to_previous>
  233c40:	tbnz	w0, #31, 233c50 <method_switch_to_previous+0x30>
  233c44:	mov	x0, x19
  233c48:	mov	x1, xzr
  233c4c:	bl	2410a0 <sd_bus_reply_method_return@plt>
  233c50:	ldr	x19, [sp, #16]
  233c54:	ldp	x29, x30, [sp], #32
  233c58:	ret
  233c5c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  233c60:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233c64:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  233c68:	add	x1, x1, #0x30
  233c6c:	add	x2, x2, #0x4b6
  233c70:	add	x4, x4, #0x65c
  233c74:	mov	w3, #0xe3                  	// #227
  233c78:	bl	240790 <log_assert_failed_realm@plt>
  233c7c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  233c80:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233c84:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  233c88:	add	x1, x1, #0x6de
  233c8c:	add	x2, x2, #0x4b6
  233c90:	add	x4, x4, #0x65c
  233c94:	mov	w3, #0xe4                  	// #228
  233c98:	mov	w0, wzr
  233c9c:	bl	240790 <log_assert_failed_realm@plt>

0000000000233ca0 <seat_object_find>:
  233ca0:	sub	sp, sp, #0x50
  233ca4:	stp	x29, x30, [sp, #16]
  233ca8:	add	x29, sp, #0x10
  233cac:	str	x23, [sp, #32]
  233cb0:	stp	x22, x21, [sp, #48]
  233cb4:	stp	x20, x19, [sp, #64]
  233cb8:	str	xzr, [x29, #24]
  233cbc:	cbz	x0, 233d74 <seat_object_find+0xd4>
  233cc0:	cbz	x1, 233d94 <seat_object_find+0xf4>
  233cc4:	cbz	x2, 233db8 <seat_object_find+0x118>
  233cc8:	mov	x19, x4
  233ccc:	cbz	x4, 233ddc <seat_object_find+0x13c>
  233cd0:	mov	x21, x3
  233cd4:	cbz	x3, 233e00 <seat_object_find+0x160>
  233cd8:	mov	x22, x0
  233cdc:	mov	x0, x1
  233ce0:	mov	x20, x5
  233ce4:	bl	233e3c <startswith>
  233ce8:	cbz	x0, 233d2c <seat_object_find+0x8c>
  233cec:	bl	233e74 <bus_label_unescape>
  233cf0:	str	x0, [x29, #24]
  233cf4:	cbz	x0, 233d34 <seat_object_find+0x94>
  233cf8:	mov	x23, x0
  233cfc:	mov	x0, x22
  233d00:	bl	241550 <sd_bus_get_current_message@plt>
  233d04:	mov	x1, x0
  233d08:	add	x4, sp, #0x8
  233d0c:	mov	x0, x21
  233d10:	mov	x2, x23
  233d14:	mov	x3, x20
  233d18:	bl	2296a0 <manager_get_seat_from_creds>
  233d1c:	cmn	w0, #0x6
  233d20:	b.ne	233d3c <seat_object_find+0x9c>  // b.any
  233d24:	mov	x0, x20
  233d28:	bl	240c80 <sd_bus_error_free@plt>
  233d2c:	mov	w21, wzr
  233d30:	b	233d50 <seat_object_find+0xb0>
  233d34:	mov	w21, #0xfffffff4            	// #-12
  233d38:	b	233d50 <seat_object_find+0xb0>
  233d3c:	mov	w21, w0
  233d40:	tbnz	w0, #31, 233d50 <seat_object_find+0xb0>
  233d44:	ldr	x8, [sp, #8]
  233d48:	mov	w21, #0x1                   	// #1
  233d4c:	str	x8, [x19]
  233d50:	add	x0, x29, #0x18
  233d54:	bl	233e24 <freep>
  233d58:	mov	w0, w21
  233d5c:	ldp	x20, x19, [sp, #64]
  233d60:	ldp	x22, x21, [sp, #48]
  233d64:	ldr	x23, [sp, #32]
  233d68:	ldp	x29, x30, [sp, #16]
  233d6c:	add	sp, sp, #0x50
  233d70:	ret
  233d74:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  233d78:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233d7c:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  233d80:	add	x1, x1, #0x887
  233d84:	add	x2, x2, #0x4b6
  233d88:	add	x4, x4, #0x31f
  233d8c:	mov	w3, #0x10b                 	// #267
  233d90:	bl	240790 <log_assert_failed_realm@plt>
  233d94:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  233d98:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233d9c:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  233da0:	add	x1, x1, #0x92
  233da4:	add	x2, x2, #0x4b6
  233da8:	add	x4, x4, #0x31f
  233dac:	mov	w3, #0x10c                 	// #268
  233db0:	mov	w0, wzr
  233db4:	bl	240790 <log_assert_failed_realm@plt>
  233db8:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  233dbc:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233dc0:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  233dc4:	add	x1, x1, #0xa77
  233dc8:	add	x2, x2, #0x4b6
  233dcc:	add	x4, x4, #0x31f
  233dd0:	mov	w3, #0x10d                 	// #269
  233dd4:	mov	w0, wzr
  233dd8:	bl	240790 <log_assert_failed_realm@plt>
  233ddc:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  233de0:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233de4:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  233de8:	add	x1, x1, #0xd40
  233dec:	add	x2, x2, #0x4b6
  233df0:	add	x4, x4, #0x31f
  233df4:	mov	w3, #0x10e                 	// #270
  233df8:	mov	w0, wzr
  233dfc:	bl	240790 <log_assert_failed_realm@plt>
  233e00:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233e04:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233e08:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  233e0c:	add	x1, x1, #0x102
  233e10:	add	x2, x2, #0x4b6
  233e14:	add	x4, x4, #0x31f
  233e18:	mov	w3, #0x10f                 	// #271
  233e1c:	mov	w0, wzr
  233e20:	bl	240790 <log_assert_failed_realm@plt>

0000000000233e24 <freep>:
  233e24:	stp	x29, x30, [sp, #-16]!
  233e28:	ldr	x0, [x0]
  233e2c:	mov	x29, sp
  233e30:	bl	240890 <free@plt>
  233e34:	ldp	x29, x30, [sp], #16
  233e38:	ret

0000000000233e3c <startswith>:
  233e3c:	stp	x29, x30, [sp, #-32]!
  233e40:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  233e44:	add	x1, x1, #0x73f
  233e48:	mov	w2, #0x1d                  	// #29
  233e4c:	str	x19, [sp, #16]
  233e50:	mov	x29, sp
  233e54:	mov	x19, x0
  233e58:	bl	240b90 <strncmp@plt>
  233e5c:	add	x8, x19, #0x1d
  233e60:	ldr	x19, [sp, #16]
  233e64:	cmp	w0, #0x0
  233e68:	csel	x0, x8, xzr, eq  // eq = none
  233e6c:	ldp	x29, x30, [sp], #32
  233e70:	ret

0000000000233e74 <bus_label_unescape>:
  233e74:	stp	x29, x30, [sp, #-32]!
  233e78:	str	x19, [sp, #16]
  233e7c:	mov	x29, sp
  233e80:	mov	x19, x0
  233e84:	bl	234484 <strlen_ptr>
  233e88:	mov	x1, x0
  233e8c:	mov	x0, x19
  233e90:	bl	241560 <bus_label_unescape_n@plt>
  233e94:	ldr	x19, [sp, #16]
  233e98:	ldp	x29, x30, [sp], #32
  233e9c:	ret

0000000000233ea0 <seat_bus_path>:
  233ea0:	stp	x29, x30, [sp, #-32]!
  233ea4:	mov	x29, sp
  233ea8:	str	x19, [sp, #16]
  233eac:	str	xzr, [x29, #24]
  233eb0:	cbz	x0, 233efc <seat_bus_path+0x5c>
  233eb4:	ldr	x0, [x0, #8]
  233eb8:	bl	241570 <bus_label_escape@plt>
  233ebc:	str	x0, [x29, #24]
  233ec0:	cbz	x0, 233ee0 <seat_bus_path+0x40>
  233ec4:	mov	x1, x0
  233ec8:	adrp	x0, 210000 <inhibit_what_to_string.buffer+0x210000>
  233ecc:	add	x0, x0, #0x73f
  233ed0:	mov	x2, xzr
  233ed4:	bl	241520 <strjoin_real@plt>
  233ed8:	mov	x19, x0
  233edc:	b	233ee4 <seat_bus_path+0x44>
  233ee0:	mov	x19, xzr
  233ee4:	add	x0, x29, #0x18
  233ee8:	bl	233e24 <freep>
  233eec:	mov	x0, x19
  233ef0:	ldr	x19, [sp, #16]
  233ef4:	ldp	x29, x30, [sp], #32
  233ef8:	ret
  233efc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  233f00:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  233f04:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  233f08:	add	x1, x1, #0x6de
  233f0c:	add	x2, x2, #0x4b6
  233f10:	add	x4, x4, #0x6af
  233f14:	mov	w3, #0x12a                 	// #298
  233f18:	bl	240790 <log_assert_failed_realm@plt>

0000000000233f1c <seat_node_enumerator>:
  233f1c:	sub	sp, sp, #0x70
  233f20:	stp	x29, x30, [sp, #48]
  233f24:	add	x29, sp, #0x30
  233f28:	str	x23, [sp, #64]
  233f2c:	stp	x22, x21, [sp, #80]
  233f30:	stp	x20, x19, [sp, #96]
  233f34:	str	xzr, [x29, #24]
  233f38:	cbz	x0, 2340f4 <seat_node_enumerator+0x1d8>
  233f3c:	cbz	x1, 234114 <seat_node_enumerator+0x1f8>
  233f40:	mov	x19, x3
  233f44:	cbz	x3, 234138 <seat_node_enumerator+0x21c>
  233f48:	mov	x21, x2
  233f4c:	mov	x22, x0
  233f50:	mov	w8, #0xfffffffe            	// #-2
  233f54:	str	w8, [sp, #24]
  233f58:	str	xzr, [sp, #32]
  233f5c:	b	233f6c <seat_node_enumerator+0x50>
  233f60:	mov	w20, #0xfffffff4            	// #-12
  233f64:	mov	w8, wzr
  233f68:	tbz	wzr, #0, 2340c0 <seat_node_enumerator+0x1a4>
  233f6c:	ldr	x0, [x21, #24]
  233f70:	add	x1, sp, #0x18
  233f74:	sub	x2, x29, #0x8
  233f78:	bl	234178 <hashmap_iterate>
  233f7c:	tbz	w0, #0, 233fb0 <seat_node_enumerator+0x94>
  233f80:	ldur	x0, [x29, #-8]
  233f84:	bl	233ea0 <seat_bus_path>
  233f88:	cbz	x0, 233f60 <seat_node_enumerator+0x44>
  233f8c:	mov	x1, x0
  233f90:	add	x0, x29, #0x18
  233f94:	bl	241580 <strv_consume@plt>
  233f98:	mvn	w8, w0
  233f9c:	cmp	w0, #0x0
  233fa0:	lsr	w8, w8, #31
  233fa4:	csel	w20, w0, w20, lt  // lt = tstop
  233fa8:	tbnz	w8, #0, 233f6c <seat_node_enumerator+0x50>
  233fac:	b	2340c0 <seat_node_enumerator+0x1a4>
  233fb0:	mov	x0, x22
  233fb4:	bl	241550 <sd_bus_get_current_message@plt>
  233fb8:	cbz	x0, 2340b0 <seat_node_enumerator+0x194>
  233fbc:	mov	x1, #0x600000              	// #6291456
  233fc0:	add	x2, sp, #0x10
  233fc4:	movk	x1, #0x8000, lsl #48
  233fc8:	str	xzr, [sp, #16]
  233fcc:	bl	240f60 <sd_bus_query_sender_creds@plt>
  233fd0:	tbnz	w0, #31, 2340a0 <seat_node_enumerator+0x184>
  233fd4:	ldr	x0, [sp, #16]
  233fd8:	add	x1, sp, #0x8
  233fdc:	bl	240f70 <sd_bus_creds_get_session@plt>
  233fe0:	tbnz	w0, #31, 234038 <seat_node_enumerator+0x11c>
  233fe4:	ldr	x0, [x21, #32]
  233fe8:	ldr	x1, [sp, #8]
  233fec:	bl	2341b0 <hashmap_get>
  233ff0:	cbz	x0, 234024 <seat_node_enumerator+0x108>
  233ff4:	ldr	x8, [x0, #136]
  233ff8:	cbz	x8, 234024 <seat_node_enumerator+0x108>
  233ffc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  234000:	add	x1, x1, #0x542
  234004:	add	x0, x29, #0x18
  234008:	bl	241590 <strv_extend@plt>
  23400c:	mov	w22, #0x1                   	// #1
  234010:	tbz	w0, #31, 234028 <seat_node_enumerator+0x10c>
  234014:	mov	w22, wzr
  234018:	mov	w23, #0x1                   	// #1
  23401c:	mov	w20, w0
  234020:	b	23402c <seat_node_enumerator+0x110>
  234024:	mov	w22, wzr
  234028:	mov	w23, wzr
  23402c:	cbnz	w23, 23409c <seat_node_enumerator+0x180>
  234030:	tbz	w22, #0, 234040 <seat_node_enumerator+0x124>
  234034:	b	234080 <seat_node_enumerator+0x164>
  234038:	mov	w22, wzr
  23403c:	tbnz	w22, #0, 234080 <seat_node_enumerator+0x164>
  234040:	ldr	x0, [sp, #16]
  234044:	add	x1, sp, #0x4
  234048:	bl	240f80 <sd_bus_creds_get_owner_uid@plt>
  23404c:	tbnz	w0, #31, 234080 <seat_node_enumerator+0x164>
  234050:	ldr	w8, [sp, #4]
  234054:	ldr	x0, [x21, #48]
  234058:	add	x1, x8, #0x1
  23405c:	bl	2341b0 <hashmap_get>
  234060:	cbz	x0, 23407c <seat_node_enumerator+0x160>
  234064:	ldr	x8, [x0, #80]
  234068:	cbz	x8, 23407c <seat_node_enumerator+0x160>
  23406c:	ldr	x8, [x8, #136]
  234070:	cmp	x8, #0x0
  234074:	cset	w22, ne  // ne = any
  234078:	b	234080 <seat_node_enumerator+0x164>
  23407c:	mov	w22, wzr
  234080:	cbz	w22, 234098 <seat_node_enumerator+0x17c>
  234084:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  234088:	add	x1, x1, #0x9cd
  23408c:	add	x0, x29, #0x18
  234090:	bl	241590 <strv_extend@plt>
  234094:	tbnz	w0, #31, 2340e4 <seat_node_enumerator+0x1c8>
  234098:	mov	w23, wzr
  23409c:	cbnz	w23, 2340a4 <seat_node_enumerator+0x188>
  2340a0:	mov	w23, wzr
  2340a4:	add	x0, sp, #0x10
  2340a8:	bl	234194 <sd_bus_creds_unrefp>
  2340ac:	cbnz	w23, 2340c0 <seat_node_enumerator+0x1a4>
  2340b0:	ldr	x8, [x29, #24]
  2340b4:	mov	w20, #0x1                   	// #1
  2340b8:	str	xzr, [x29, #24]
  2340bc:	str	x8, [x19]
  2340c0:	add	x0, x29, #0x18
  2340c4:	bl	23415c <strv_freep>
  2340c8:	mov	w0, w20
  2340cc:	ldp	x20, x19, [sp, #96]
  2340d0:	ldp	x22, x21, [sp, #80]
  2340d4:	ldr	x23, [sp, #64]
  2340d8:	ldp	x29, x30, [sp, #48]
  2340dc:	add	sp, sp, #0x70
  2340e0:	ret
  2340e4:	mov	w23, #0x1                   	// #1
  2340e8:	mov	w20, w0
  2340ec:	cbnz	w23, 2340a4 <seat_node_enumerator+0x188>
  2340f0:	b	2340a0 <seat_node_enumerator+0x184>
  2340f4:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2340f8:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2340fc:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  234100:	add	x1, x1, #0x887
  234104:	add	x2, x2, #0x4b6
  234108:	add	x4, x4, #0x56c
  23410c:	mov	w3, #0x13b                 	// #315
  234110:	bl	240790 <log_assert_failed_realm@plt>
  234114:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  234118:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23411c:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  234120:	add	x1, x1, #0x92
  234124:	add	x2, x2, #0x4b6
  234128:	add	x4, x4, #0x56c
  23412c:	mov	w3, #0x13c                 	// #316
  234130:	mov	w0, wzr
  234134:	bl	240790 <log_assert_failed_realm@plt>
  234138:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  23413c:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  234140:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  234144:	add	x1, x1, #0x294
  234148:	add	x2, x2, #0x4b6
  23414c:	add	x4, x4, #0x56c
  234150:	mov	w3, #0x13d                 	// #317
  234154:	mov	w0, wzr
  234158:	bl	240790 <log_assert_failed_realm@plt>

000000000023415c <strv_freep>:
  23415c:	stp	x29, x30, [sp, #-16]!
  234160:	ldr	x0, [x0]
  234164:	mov	x29, sp
  234168:	cbz	x0, 234170 <strv_freep+0x14>
  23416c:	bl	240880 <strv_free@plt>
  234170:	ldp	x29, x30, [sp], #16
  234174:	ret

0000000000234178 <hashmap_iterate>:
  234178:	stp	x29, x30, [sp, #-16]!
  23417c:	mov	x3, xzr
  234180:	mov	x29, sp
  234184:	bl	240b00 <internal_hashmap_iterate@plt>
  234188:	and	w0, w0, #0x1
  23418c:	ldp	x29, x30, [sp], #16
  234190:	ret

0000000000234194 <sd_bus_creds_unrefp>:
  234194:	stp	x29, x30, [sp, #-16]!
  234198:	ldr	x0, [x0]
  23419c:	mov	x29, sp
  2341a0:	cbz	x0, 2341a8 <sd_bus_creds_unrefp+0x14>
  2341a4:	bl	241350 <sd_bus_creds_unref@plt>
  2341a8:	ldp	x29, x30, [sp], #16
  2341ac:	ret

00000000002341b0 <hashmap_get>:
  2341b0:	stp	x29, x30, [sp, #-16]!
  2341b4:	mov	x29, sp
  2341b8:	bl	240bc0 <internal_hashmap_get@plt>
  2341bc:	ldp	x29, x30, [sp], #16
  2341c0:	ret

00000000002341c4 <seat_send_signal>:
  2341c4:	sub	sp, sp, #0x30
  2341c8:	stp	x29, x30, [sp, #16]
  2341cc:	stp	x20, x19, [sp, #32]
  2341d0:	add	x29, sp, #0x10
  2341d4:	str	xzr, [sp, #8]
  2341d8:	cbz	x0, 234258 <seat_send_signal+0x94>
  2341dc:	mov	w19, w1
  2341e0:	mov	x20, x0
  2341e4:	bl	233ea0 <seat_bus_path>
  2341e8:	str	x0, [sp, #8]
  2341ec:	cbz	x0, 234238 <seat_send_signal+0x74>
  2341f0:	ldp	x8, x5, [x20]
  2341f4:	mov	x6, x0
  2341f8:	adrp	x9, 210000 <inhibit_what_to_string.buffer+0x210000>
  2341fc:	add	x9, x9, #0x611
  234200:	ldr	x0, [x8, #8]
  234204:	adrp	x8, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  234208:	add	x8, x8, #0xa36
  23420c:	tst	w19, #0x1
  234210:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  234214:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  234218:	adrp	x4, 206000 <inhibit_what_to_string.buffer+0x206000>
  23421c:	csel	x3, x9, x8, ne  // ne = any
  234220:	add	x1, x1, #0xad4
  234224:	add	x2, x2, #0xe5d
  234228:	add	x4, x4, #0xeed
  23422c:	bl	240fd0 <sd_bus_emit_signal@plt>
  234230:	mov	w19, w0
  234234:	b	23423c <seat_send_signal+0x78>
  234238:	mov	w19, #0xfffffff4            	// #-12
  23423c:	add	x0, sp, #0x8
  234240:	bl	233e24 <freep>
  234244:	mov	w0, w19
  234248:	ldp	x20, x19, [sp, #32]
  23424c:	ldp	x29, x30, [sp, #16]
  234250:	add	sp, sp, #0x30
  234254:	ret
  234258:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23425c:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  234260:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  234264:	add	x1, x1, #0x6de
  234268:	add	x2, x2, #0x4b6
  23426c:	add	x4, x4, #0xd0e
  234270:	mov	w3, #0x17d                 	// #381
  234274:	bl	240790 <log_assert_failed_realm@plt>

0000000000234278 <seat_send_changed>:
  234278:	stp	x29, x30, [sp, #-48]!
  23427c:	stp	x28, x21, [sp, #16]
  234280:	stp	x20, x19, [sp, #32]
  234284:	mov	x29, sp
  234288:	sub	sp, sp, #0xe0
  23428c:	stp	x2, x3, [x29, #-96]
  234290:	stp	x4, x5, [x29, #-80]
  234294:	stp	x6, x7, [x29, #-64]
  234298:	stp	q1, q2, [x29, #-208]
  23429c:	stp	q3, q4, [x29, #-176]
  2342a0:	stur	q0, [x29, #-224]
  2342a4:	stp	q5, q6, [x29, #-144]
  2342a8:	stur	q7, [x29, #-112]
  2342ac:	stp	xzr, x1, [x29, #-16]
  2342b0:	cbz	x0, 234428 <seat_send_changed+0x1b0>
  2342b4:	ldrb	w8, [x0, #72]
  2342b8:	mov	x19, x0
  2342bc:	tbnz	w8, #1, 2342c8 <seat_send_changed+0x50>
  2342c0:	mov	w19, wzr
  2342c4:	b	234408 <seat_send_changed+0x190>
  2342c8:	mov	x0, x19
  2342cc:	bl	233ea0 <seat_bus_path>
  2342d0:	stur	x0, [x29, #-16]
  2342d4:	cbz	x0, 2343e0 <seat_send_changed+0x168>
  2342d8:	ldur	x8, [x29, #-8]
  2342dc:	mov	x20, x0
  2342e0:	cbz	x8, 2343e8 <seat_send_changed+0x170>
  2342e4:	mov	x9, #0xffffffffffffffd0    	// #-48
  2342e8:	sub	x8, x29, #0xe0
  2342ec:	sub	x11, x29, #0x60
  2342f0:	movk	x9, #0xff80, lsl #32
  2342f4:	add	x10, x29, #0x30
  2342f8:	mov	w21, #0x8                   	// #8
  2342fc:	add	x12, x8, #0x80
  234300:	add	x8, x11, #0x30
  234304:	mov	w0, #0x1                   	// #1
  234308:	stp	x12, x9, [x29, #-32]
  23430c:	stp	x10, x8, [x29, #-48]
  234310:	b	234330 <seat_send_changed+0xb8>
  234314:	ldur	x9, [x29, #-48]
  234318:	add	x10, x9, #0x8
  23431c:	stur	x10, [x29, #-48]
  234320:	ldr	x9, [x9]
  234324:	add	x21, x21, #0x8
  234328:	add	x0, x0, #0x1
  23432c:	cbz	x9, 234350 <seat_send_changed+0xd8>
  234330:	ldursw	x9, [x29, #-24]
  234334:	tbz	w9, #31, 234314 <seat_send_changed+0x9c>
  234338:	add	w10, w9, #0x8
  23433c:	cmp	w10, #0x0
  234340:	stur	w10, [x29, #-24]
  234344:	b.gt	234314 <seat_send_changed+0x9c>
  234348:	add	x9, x8, x9
  23434c:	b	234320 <seat_send_changed+0xa8>
  234350:	bl	234478 <size_multiply_overflow>
  234354:	tbnz	w0, #0, 234448 <seat_send_changed+0x1d0>
  234358:	cmp	x21, #0x400, lsl #12
  23435c:	b.hi	234454 <seat_send_changed+0x1dc>  // b.pmore
  234360:	add	x9, x21, #0xf
  234364:	mov	x8, sp
  234368:	and	x9, x9, #0xfffffffffffffff0
  23436c:	sub	x3, x8, x9
  234370:	mov	sp, x3
  234374:	ldur	x10, [x29, #-8]
  234378:	mov	x8, x3
  23437c:	mov	x11, #0xffffffffffffffd0    	// #-48
  234380:	sub	x9, x29, #0xe0
  234384:	sub	x12, x29, #0x60
  234388:	movk	x11, #0xff80, lsl #32
  23438c:	add	x13, x29, #0x30
  234390:	add	x14, x9, #0x80
  234394:	add	x9, x12, #0x30
  234398:	str	x10, [x8], #8
  23439c:	stp	x14, x11, [x29, #-32]
  2343a0:	stp	x13, x9, [x29, #-48]
  2343a4:	b	2343c0 <seat_send_changed+0x148>
  2343a8:	ldur	x10, [x29, #-48]
  2343ac:	add	x11, x10, #0x8
  2343b0:	stur	x11, [x29, #-48]
  2343b4:	ldr	x10, [x10]
  2343b8:	str	x10, [x8], #8
  2343bc:	cbz	x10, 2343ec <seat_send_changed+0x174>
  2343c0:	ldursw	x10, [x29, #-24]
  2343c4:	tbz	w10, #31, 2343a8 <seat_send_changed+0x130>
  2343c8:	add	w11, w10, #0x8
  2343cc:	cmp	w11, #0x0
  2343d0:	stur	w11, [x29, #-24]
  2343d4:	b.gt	2343a8 <seat_send_changed+0x130>
  2343d8:	add	x10, x9, x10
  2343dc:	b	2343b4 <seat_send_changed+0x13c>
  2343e0:	mov	w19, #0xfffffff4            	// #-12
  2343e4:	b	234408 <seat_send_changed+0x190>
  2343e8:	sub	x3, x29, #0x8
  2343ec:	ldr	x8, [x19]
  2343f0:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2343f4:	add	x2, x2, #0x104
  2343f8:	mov	x1, x20
  2343fc:	ldr	x0, [x8, #8]
  234400:	bl	2412b0 <sd_bus_emit_properties_changed_strv@plt>
  234404:	mov	w19, w0
  234408:	sub	x0, x29, #0x10
  23440c:	bl	233e24 <freep>
  234410:	mov	w0, w19
  234414:	mov	sp, x29
  234418:	ldp	x20, x19, [sp, #32]
  23441c:	ldp	x28, x21, [sp, #16]
  234420:	ldp	x29, x30, [sp], #48
  234424:	ret
  234428:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23442c:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  234430:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  234434:	add	x1, x1, #0x6de
  234438:	add	x2, x2, #0x4b6
  23443c:	add	x4, x4, #0xd46
  234440:	mov	w3, #0x18f                 	// #399
  234444:	bl	240790 <log_assert_failed_realm@plt>
  234448:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23444c:	add	x1, x1, #0x45e
  234450:	b	23445c <seat_send_changed+0x1e4>
  234454:	adrp	x1, 212000 <inhibit_what_to_string.buffer+0x212000>
  234458:	add	x1, x1, #0x6f
  23445c:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  234460:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  234464:	add	x2, x2, #0x4b6
  234468:	add	x4, x4, #0xd46
  23446c:	mov	w3, #0x198                 	// #408
  234470:	mov	w0, wzr
  234474:	bl	240790 <log_assert_failed_realm@plt>

0000000000234478 <size_multiply_overflow>:
  234478:	cmp	xzr, x0, lsr #61
  23447c:	cset	w0, ne  // ne = any
  234480:	ret

0000000000234484 <strlen_ptr>:
  234484:	cbz	x0, 234498 <strlen_ptr+0x14>
  234488:	stp	x29, x30, [sp, #-16]!
  23448c:	mov	x29, sp
  234490:	bl	240d30 <strlen@plt>
  234494:	ldp	x29, x30, [sp], #16
  234498:	ret

000000000023449c <seat_new>:
  23449c:	stp	x29, x30, [sp, #-48]!
  2344a0:	mov	x29, sp
  2344a4:	str	x21, [sp, #16]
  2344a8:	stp	x20, x19, [sp, #32]
  2344ac:	str	xzr, [x29, #24]
  2344b0:	cbz	x0, 234580 <seat_new+0xe4>
  2344b4:	mov	x20, x1
  2344b8:	cbz	x1, 2345a0 <seat_new+0x104>
  2344bc:	mov	x21, x2
  2344c0:	cbz	x2, 2345c4 <seat_new+0x128>
  2344c4:	mov	x19, x0
  2344c8:	mov	x0, x21
  2344cc:	bl	234604 <seat_name_is_valid>
  2344d0:	tbz	w0, #0, 234550 <seat_new+0xb4>
  2344d4:	bl	234688 <malloc_multiply>
  2344d8:	str	x0, [x29, #24]
  2344dc:	cbz	x0, 234558 <seat_new+0xbc>
  2344e0:	movi	v0.2d, #0x0
  2344e4:	str	x20, [x0]
  2344e8:	stur	q0, [x0, #8]
  2344ec:	stur	q0, [x0, #24]
  2344f0:	stur	q0, [x0, #40]
  2344f4:	stur	q0, [x0, #56]
  2344f8:	stur	q0, [x0, #72]
  2344fc:	str	xzr, [x0, #88]
  234500:	adrp	x0, 208000 <inhibit_what_to_string.buffer+0x208000>
  234504:	add	x0, x0, #0xe24
  234508:	mov	x2, #0xffffffffffffffff    	// #-1
  23450c:	mov	x1, x21
  234510:	bl	2413d0 <path_join_internal@plt>
  234514:	ldr	x21, [x29, #24]
  234518:	str	x0, [x21, #16]
  23451c:	cbz	x0, 234558 <seat_new+0xbc>
  234520:	bl	2414c0 <basename@plt>
  234524:	str	x0, [x21, #8]
  234528:	mov	x1, x0
  23452c:	ldr	x0, [x20, #24]
  234530:	mov	x2, x21
  234534:	bl	240d00 <hashmap_put@plt>
  234538:	tbnz	w0, #31, 234578 <seat_new+0xdc>
  23453c:	ldr	x8, [x29, #24]
  234540:	mov	w20, wzr
  234544:	str	xzr, [x29, #24]
  234548:	str	x8, [x19]
  23454c:	b	23455c <seat_new+0xc0>
  234550:	mov	w20, #0xffffffea            	// #-22
  234554:	b	23455c <seat_new+0xc0>
  234558:	mov	w20, #0xfffffff4            	// #-12
  23455c:	add	x0, x29, #0x18
  234560:	bl	2345e8 <seat_freep>
  234564:	mov	w0, w20
  234568:	ldp	x20, x19, [sp, #32]
  23456c:	ldr	x21, [sp, #16]
  234570:	ldp	x29, x30, [sp], #48
  234574:	ret
  234578:	mov	w20, w0
  23457c:	b	23455c <seat_new+0xc0>
  234580:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  234584:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234588:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23458c:	add	x1, x1, #0xa82
  234590:	add	x2, x2, #0x29d
  234594:	add	x4, x4, #0xe71
  234598:	mov	w3, #0x20                  	// #32
  23459c:	bl	240790 <log_assert_failed_realm@plt>
  2345a0:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2345a4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2345a8:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2345ac:	add	x1, x1, #0x102
  2345b0:	add	x2, x2, #0x29d
  2345b4:	add	x4, x4, #0xe71
  2345b8:	mov	w3, #0x21                  	// #33
  2345bc:	mov	w0, wzr
  2345c0:	bl	240790 <log_assert_failed_realm@plt>
  2345c4:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2345c8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2345cc:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2345d0:	add	x1, x1, #0x11a
  2345d4:	add	x2, x2, #0x29d
  2345d8:	add	x4, x4, #0xe71
  2345dc:	mov	w3, #0x22                  	// #34
  2345e0:	mov	w0, wzr
  2345e4:	bl	240790 <log_assert_failed_realm@plt>

00000000002345e8 <seat_freep>:
  2345e8:	stp	x29, x30, [sp, #-16]!
  2345ec:	ldr	x0, [x0]
  2345f0:	mov	x29, sp
  2345f4:	cbz	x0, 2345fc <seat_freep+0x14>
  2345f8:	bl	2346a0 <seat_free>
  2345fc:	ldp	x29, x30, [sp], #16
  234600:	ret

0000000000234604 <seat_name_is_valid>:
  234604:	stp	x29, x30, [sp, #-32]!
  234608:	stp	x20, x19, [sp, #16]
  23460c:	mov	x29, sp
  234610:	cbz	x0, 234668 <seat_name_is_valid+0x64>
  234614:	mov	x19, x0
  234618:	bl	235be0 <startswith>
  23461c:	cbz	x0, 23465c <seat_name_is_valid+0x58>
  234620:	ldrb	w8, [x19, #4]
  234624:	cbz	w8, 234658 <seat_name_is_valid+0x54>
  234628:	ldrb	w0, [x19]
  23462c:	cbz	w0, 234644 <seat_name_is_valid+0x40>
  234630:	add	x20, x19, #0x1
  234634:	bl	235c18 <seat_name_valid_char>
  234638:	tbz	w0, #0, 234658 <seat_name_is_valid+0x54>
  23463c:	ldrb	w0, [x20], #1
  234640:	cbnz	w0, 234634 <seat_name_is_valid+0x30>
  234644:	mov	x0, x19
  234648:	bl	240d30 <strlen@plt>
  23464c:	cmp	x0, #0x100
  234650:	cset	w0, cc  // cc = lo, ul, last
  234654:	b	23465c <seat_name_is_valid+0x58>
  234658:	mov	w0, wzr
  23465c:	ldp	x20, x19, [sp, #16]
  234660:	ldp	x29, x30, [sp], #32
  234664:	ret
  234668:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23466c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234670:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  234674:	add	x1, x1, #0xa54
  234678:	add	x2, x2, #0x29d
  23467c:	add	x4, x4, #0x3f9
  234680:	mov	w3, #0x28f                 	// #655
  234684:	bl	240790 <log_assert_failed_realm@plt>

0000000000234688 <malloc_multiply>:
  234688:	stp	x29, x30, [sp, #-16]!
  23468c:	mov	w0, #0x60                  	// #96
  234690:	mov	x29, sp
  234694:	bl	2408c0 <malloc@plt>
  234698:	ldp	x29, x30, [sp], #16
  23469c:	ret

00000000002346a0 <seat_free>:
  2346a0:	stp	x29, x30, [sp, #-32]!
  2346a4:	str	x19, [sp, #16]
  2346a8:	mov	x29, sp
  2346ac:	cbz	x0, 23474c <seat_free+0xac>
  2346b0:	ldrb	w8, [x0, #72]
  2346b4:	mov	x19, x0
  2346b8:	tbz	w8, #0, 234704 <seat_free+0x64>
  2346bc:	mov	x8, x19
  2346c0:	ldr	x9, [x19]
  2346c4:	ldr	x10, [x8, #80]!
  2346c8:	cbz	x10, 2346d4 <seat_free+0x34>
  2346cc:	ldr	x11, [x19, #88]
  2346d0:	str	x11, [x10, #88]
  2346d4:	ldr	x10, [x19, #88]
  2346d8:	cbz	x10, 2346e4 <seat_free+0x44>
  2346dc:	add	x9, x10, #0x50
  2346e0:	b	2346f0 <seat_free+0x50>
  2346e4:	ldr	x10, [x9, #80]!
  2346e8:	cmp	x10, x19
  2346ec:	b.ne	234780 <seat_free+0xe0>  // b.any
  2346f0:	ldr	x10, [x8]
  2346f4:	str	x10, [x9]
  2346f8:	stp	xzr, xzr, [x8]
  2346fc:	b	234704 <seat_free+0x64>
  234700:	bl	239934 <session_free>
  234704:	ldr	x0, [x19, #48]
  234708:	cbnz	x0, 234700 <seat_free+0x60>
  23470c:	ldr	x8, [x19, #32]
  234710:	cbnz	x8, 23475c <seat_free+0xbc>
  234714:	ldr	x0, [x19, #24]
  234718:	cbz	x0, 234728 <seat_free+0x88>
  23471c:	bl	231d54 <device_free>
  234720:	ldr	x0, [x19, #24]
  234724:	cbnz	x0, 23471c <seat_free+0x7c>
  234728:	ldp	x8, x1, [x19]
  23472c:	ldr	x0, [x8, #24]
  234730:	bl	2347a4 <hashmap_remove>
  234734:	ldr	x0, [x19, #56]
  234738:	bl	240890 <free@plt>
  23473c:	ldr	x0, [x19, #16]
  234740:	bl	240890 <free@plt>
  234744:	mov	x0, x19
  234748:	bl	2347b8 <mfree>
  23474c:	ldr	x19, [sp, #16]
  234750:	mov	x0, xzr
  234754:	ldp	x29, x30, [sp], #32
  234758:	ret
  23475c:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  234760:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234764:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  234768:	add	x1, x1, #0xe0c
  23476c:	add	x2, x2, #0x29d
  234770:	add	x4, x4, #0x6a4
  234774:	mov	w3, #0x47                  	// #71
  234778:	mov	w0, wzr
  23477c:	bl	240790 <log_assert_failed_realm@plt>
  234780:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  234784:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234788:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23478c:	add	x1, x1, #0xa19
  234790:	add	x2, x2, #0x29d
  234794:	add	x4, x4, #0x6a4
  234798:	mov	w3, #0x42                  	// #66
  23479c:	mov	w0, wzr
  2347a0:	bl	240790 <log_assert_failed_realm@plt>

00000000002347a4 <hashmap_remove>:
  2347a4:	stp	x29, x30, [sp, #-16]!
  2347a8:	mov	x29, sp
  2347ac:	bl	240d20 <internal_hashmap_remove@plt>
  2347b0:	ldp	x29, x30, [sp], #16
  2347b4:	ret

00000000002347b8 <mfree>:
  2347b8:	stp	x29, x30, [sp, #-16]!
  2347bc:	mov	x29, sp
  2347c0:	bl	240890 <free@plt>
  2347c4:	ldp	x29, x30, [sp], #16
  2347c8:	ret

00000000002347cc <seat_save>:
  2347cc:	sub	sp, sp, #0x50
  2347d0:	stp	x29, x30, [sp, #16]
  2347d4:	add	x29, sp, #0x10
  2347d8:	str	x23, [sp, #32]
  2347dc:	stp	x22, x21, [sp, #48]
  2347e0:	stp	x20, x19, [sp, #64]
  2347e4:	str	xzr, [x29, #24]
  2347e8:	str	xzr, [sp, #8]
  2347ec:	cbz	x0, 234a40 <seat_save+0x274>
  2347f0:	ldrb	w8, [x0, #72]
  2347f4:	mov	x19, x0
  2347f8:	tbnz	w8, #1, 234804 <seat_save+0x38>
  2347fc:	mov	w19, wzr
  234800:	b	234a14 <seat_save+0x248>
  234804:	adrp	x0, 208000 <inhibit_what_to_string.buffer+0x208000>
  234808:	add	x0, x0, #0xe24
  23480c:	mov	w1, #0x1ed                 	// #493
  234810:	mov	w4, #0x2                   	// #2
  234814:	mov	w2, wzr
  234818:	mov	w3, wzr
  23481c:	bl	2411a0 <mkdir_safe_label@plt>
  234820:	tbnz	w0, #31, 2349a8 <seat_save+0x1dc>
  234824:	ldr	x0, [x19, #16]
  234828:	add	x1, sp, #0x8
  23482c:	add	x2, x29, #0x18
  234830:	bl	241440 <fopen_temporary@plt>
  234834:	tbnz	w0, #31, 2349a8 <seat_save+0x1dc>
  234838:	ldr	x0, [sp, #8]
  23483c:	bl	241450 <fileno@plt>
  234840:	mov	w1, #0x1a4                 	// #420
  234844:	bl	241460 <fchmod@plt>
  234848:	ldr	x20, [sp, #8]
  23484c:	mov	x0, x19
  234850:	bl	234ab4 <seat_is_seat0>
  234854:	and	w21, w0, #0x1
  234858:	mov	x0, x19
  23485c:	bl	234af8 <seat_can_multi_session>
  234860:	and	w22, w0, #0x1
  234864:	mov	x0, x19
  234868:	bl	234b34 <seat_can_tty>
  23486c:	and	w23, w0, #0x1
  234870:	mov	x0, x19
  234874:	bl	234b70 <seat_can_graphical>
  234878:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  23487c:	and	w5, w0, #0x1
  234880:	add	x1, x1, #0xd67
  234884:	mov	x0, x20
  234888:	mov	w2, w21
  23488c:	mov	w3, w22
  234890:	mov	w4, w23
  234894:	bl	241470 <fprintf@plt>
  234898:	ldr	x8, [x19, #32]
  23489c:	cbz	x8, 2348c0 <seat_save+0xf4>
  2348a0:	ldr	x9, [x8, #40]
  2348a4:	cbz	x9, 234a60 <seat_save+0x294>
  2348a8:	ldr	x0, [sp, #8]
  2348ac:	ldr	x2, [x8, #8]
  2348b0:	ldr	w3, [x9, #8]
  2348b4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2348b8:	add	x1, x1, #0x40c
  2348bc:	bl	241470 <fprintf@plt>
  2348c0:	ldr	x8, [x19, #48]
  2348c4:	cbz	x8, 23497c <seat_save+0x1b0>
  2348c8:	ldr	x3, [sp, #8]
  2348cc:	adrp	x0, 210000 <inhibit_what_to_string.buffer+0x210000>
  2348d0:	add	x0, x0, #0xdcb
  2348d4:	mov	w1, #0x9                   	// #9
  2348d8:	mov	w2, #0x1                   	// #1
  2348dc:	bl	2415a0 <fwrite@plt>
  2348e0:	ldr	x21, [x19, #48]
  2348e4:	ldr	x8, [sp, #8]
  2348e8:	cbz	x21, 234924 <seat_save+0x158>
  2348ec:	adrp	x20, 207000 <inhibit_what_to_string.buffer+0x207000>
  2348f0:	mov	w22, #0x20                  	// #32
  2348f4:	mov	w23, #0xa                   	// #10
  2348f8:	add	x20, x20, #0x9c
  2348fc:	ldr	x9, [x21, #272]
  234900:	ldr	x2, [x21, #8]
  234904:	mov	x0, x8
  234908:	mov	x1, x20
  23490c:	cmp	x9, #0x0
  234910:	csel	w3, w23, w22, eq  // eq = none
  234914:	bl	241470 <fprintf@plt>
  234918:	ldr	x21, [x21, #272]
  23491c:	ldr	x8, [sp, #8]
  234920:	cbnz	x21, 2348fc <seat_save+0x130>
  234924:	adrp	x0, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  234928:	add	x0, x0, #0x91e
  23492c:	mov	w1, #0x5                   	// #5
  234930:	mov	w2, #0x1                   	// #1
  234934:	mov	x3, x8
  234938:	bl	2415a0 <fwrite@plt>
  23493c:	ldr	x21, [x19, #48]
  234940:	cbz	x21, 23497c <seat_save+0x1b0>
  234944:	adrp	x20, 210000 <inhibit_what_to_string.buffer+0x210000>
  234948:	mov	w22, #0x20                  	// #32
  23494c:	mov	w23, #0xa                   	// #10
  234950:	add	x20, x20, #0x7d5
  234954:	ldr	x8, [x21, #40]
  234958:	ldr	x9, [x21, #272]
  23495c:	ldr	x0, [sp, #8]
  234960:	mov	x1, x20
  234964:	ldr	w2, [x8, #8]
  234968:	cmp	x9, #0x0
  23496c:	csel	w3, w23, w22, eq  // eq = none
  234970:	bl	241470 <fprintf@plt>
  234974:	ldr	x21, [x21, #272]
  234978:	cbnz	x21, 234954 <seat_save+0x188>
  23497c:	ldr	x0, [sp, #8]
  234980:	bl	241480 <fflush_and_check@plt>
  234984:	tbnz	w0, #31, 2349a8 <seat_save+0x1dc>
  234988:	ldr	x0, [x29, #24]
  23498c:	ldr	x1, [x19, #16]
  234990:	bl	241490 <rename@plt>
  234994:	tbz	w0, #31, 2347fc <seat_save+0x30>
  234998:	bl	240930 <__errno_location@plt>
  23499c:	ldr	w8, [x0]
  2349a0:	neg	w20, w8
  2349a4:	b	2349ac <seat_save+0x1e0>
  2349a8:	mov	w20, w0
  2349ac:	ldr	x0, [x19, #16]
  2349b0:	bl	2411d0 <unlink@plt>
  2349b4:	ldr	x0, [x29, #24]
  2349b8:	cbz	x0, 2349c0 <seat_save+0x1f4>
  2349bc:	bl	2411d0 <unlink@plt>
  2349c0:	mov	w0, wzr
  2349c4:	bl	240750 <log_get_max_level_realm@plt>
  2349c8:	cmp	w0, #0x3
  2349cc:	b.lt	234a04 <seat_save+0x238>  // b.tstop
  2349d0:	ldr	x6, [x19, #16]
  2349d4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2349d8:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2349dc:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2349e0:	add	x2, x2, #0x29d
  2349e4:	add	x4, x4, #0xc53
  2349e8:	add	x5, x5, #0x885
  2349ec:	mov	w0, #0x3                   	// #3
  2349f0:	mov	w3, #0xa1                  	// #161
  2349f4:	mov	w1, w20
  2349f8:	bl	240770 <log_internal_realm@plt>
  2349fc:	mov	w19, w0
  234a00:	b	234a14 <seat_save+0x248>
  234a04:	cmp	w20, #0x0
  234a08:	mov	w8, wzr
  234a0c:	cneg	w9, w20, mi  // mi = first
  234a10:	sub	w19, w8, w9, uxtb
  234a14:	add	x0, sp, #0x8
  234a18:	bl	234a9c <fclosep>
  234a1c:	add	x0, x29, #0x18
  234a20:	bl	234a84 <freep>
  234a24:	mov	w0, w19
  234a28:	ldp	x20, x19, [sp, #64]
  234a2c:	ldp	x22, x21, [sp, #48]
  234a30:	ldr	x23, [sp, #32]
  234a34:	ldp	x29, x30, [sp, #16]
  234a38:	add	sp, sp, #0x50
  234a3c:	ret
  234a40:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  234a44:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234a48:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  234a4c:	add	x1, x1, #0x6de
  234a50:	add	x2, x2, #0x29d
  234a54:	add	x4, x4, #0xd8f
  234a58:	mov	w3, #0x59                  	// #89
  234a5c:	bl	240790 <log_assert_failed_realm@plt>
  234a60:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  234a64:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234a68:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  234a6c:	add	x1, x1, #0x2b5
  234a70:	add	x2, x2, #0x29d
  234a74:	add	x4, x4, #0xd8f
  234a78:	mov	w3, #0x74                  	// #116
  234a7c:	mov	w0, wzr
  234a80:	bl	240790 <log_assert_failed_realm@plt>

0000000000234a84 <freep>:
  234a84:	stp	x29, x30, [sp, #-16]!
  234a88:	ldr	x0, [x0]
  234a8c:	mov	x29, sp
  234a90:	bl	240890 <free@plt>
  234a94:	ldp	x29, x30, [sp], #16
  234a98:	ret

0000000000234a9c <fclosep>:
  234a9c:	stp	x29, x30, [sp, #-16]!
  234aa0:	ldr	x0, [x0]
  234aa4:	mov	x29, sp
  234aa8:	bl	2414a0 <safe_fclose@plt>
  234aac:	ldp	x29, x30, [sp], #16
  234ab0:	ret

0000000000234ab4 <seat_is_seat0>:
  234ab4:	stp	x29, x30, [sp, #-16]!
  234ab8:	mov	x29, sp
  234abc:	cbz	x0, 234ad8 <seat_is_seat0+0x24>
  234ac0:	ldr	x8, [x0]
  234ac4:	ldr	x8, [x8, #168]
  234ac8:	cmp	x8, x0
  234acc:	cset	w0, eq  // eq = none
  234ad0:	ldp	x29, x30, [sp], #16
  234ad4:	ret
  234ad8:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  234adc:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234ae0:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  234ae4:	add	x1, x1, #0x6de
  234ae8:	add	x2, x2, #0x29d
  234aec:	add	x4, x4, #0x2d9
  234af0:	mov	w3, #0x22c                 	// #556
  234af4:	bl	240790 <log_assert_failed_realm@plt>

0000000000234af8 <seat_can_multi_session>:
  234af8:	stp	x29, x30, [sp, #-16]!
  234afc:	mov	x29, sp
  234b00:	cbz	x0, 234b14 <seat_can_multi_session+0x1c>
  234b04:	bl	234d50 <seat_has_vts>
  234b08:	and	w0, w0, #0x1
  234b0c:	ldp	x29, x30, [sp], #16
  234b10:	ret
  234b14:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  234b18:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234b1c:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  234b20:	add	x1, x1, #0x6de
  234b24:	add	x2, x2, #0x29d
  234b28:	add	x4, x4, #0x805
  234b2c:	mov	w3, #0x232                 	// #562
  234b30:	bl	240790 <log_assert_failed_realm@plt>

0000000000234b34 <seat_can_tty>:
  234b34:	stp	x29, x30, [sp, #-16]!
  234b38:	mov	x29, sp
  234b3c:	cbz	x0, 234b50 <seat_can_tty+0x1c>
  234b40:	bl	234d50 <seat_has_vts>
  234b44:	and	w0, w0, #0x1
  234b48:	ldp	x29, x30, [sp], #16
  234b4c:	ret
  234b50:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  234b54:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234b58:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  234b5c:	add	x1, x1, #0x6de
  234b60:	add	x2, x2, #0x29d
  234b64:	add	x4, x4, #0xc5d
  234b68:	mov	w3, #0x238                 	// #568
  234b6c:	bl	240790 <log_assert_failed_realm@plt>

0000000000234b70 <seat_can_graphical>:
  234b70:	stp	x29, x30, [sp, #-16]!
  234b74:	mov	x29, sp
  234b78:	cbz	x0, 234b8c <seat_can_graphical+0x1c>
  234b7c:	bl	235a28 <seat_has_master_device>
  234b80:	and	w0, w0, #0x1
  234b84:	ldp	x29, x30, [sp], #16
  234b88:	ret
  234b8c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  234b90:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234b94:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  234b98:	add	x1, x1, #0x6de
  234b9c:	add	x2, x2, #0x29d
  234ba0:	add	x4, x4, #0xf
  234ba4:	mov	w3, #0x245                 	// #581
  234ba8:	bl	240790 <log_assert_failed_realm@plt>

0000000000234bac <seat_load>:
  234bac:	cbz	x0, 234bb8 <seat_load+0xc>
  234bb0:	mov	w0, wzr
  234bb4:	ret
  234bb8:	stp	x29, x30, [sp, #-16]!
  234bbc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  234bc0:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234bc4:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  234bc8:	add	x1, x1, #0x6de
  234bcc:	add	x2, x2, #0x29d
  234bd0:	add	x4, x4, #0x9ef
  234bd4:	mov	w3, #0xa5                  	// #165
  234bd8:	mov	x29, sp
  234bdc:	bl	240790 <log_assert_failed_realm@plt>

0000000000234be0 <seat_preallocate_vts>:
  234be0:	stp	x29, x30, [sp, #-80]!
  234be4:	str	x25, [sp, #16]
  234be8:	stp	x24, x23, [sp, #32]
  234bec:	stp	x22, x21, [sp, #48]
  234bf0:	stp	x20, x19, [sp, #64]
  234bf4:	mov	x29, sp
  234bf8:	cbz	x0, 234d0c <seat_preallocate_vts+0x12c>
  234bfc:	ldr	x8, [x0]
  234c00:	mov	x19, x0
  234c04:	cbz	x8, 234d2c <seat_preallocate_vts+0x14c>
  234c08:	ldr	w8, [x8, #156]
  234c0c:	cbz	w8, 234cec <seat_preallocate_vts+0x10c>
  234c10:	mov	x0, x19
  234c14:	bl	234d50 <seat_has_vts>
  234c18:	tbz	w0, #0, 234cec <seat_preallocate_vts+0x10c>
  234c1c:	mov	w0, wzr
  234c20:	bl	240750 <log_get_max_level_realm@plt>
  234c24:	cmp	w0, #0x7
  234c28:	b.lt	234c54 <seat_preallocate_vts+0x74>  // b.tstop
  234c2c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234c30:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  234c34:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  234c38:	add	x2, x2, #0x29d
  234c3c:	add	x4, x4, #0xa1
  234c40:	add	x5, x5, #0x6df
  234c44:	mov	w0, #0x7                   	// #7
  234c48:	mov	w3, #0xc7                  	// #199
  234c4c:	mov	w1, wzr
  234c50:	bl	240770 <log_internal_realm@plt>
  234c54:	ldr	x8, [x19]
  234c58:	ldr	w8, [x8, #156]
  234c5c:	cbz	w8, 234cec <seat_preallocate_vts+0x10c>
  234c60:	adrp	x21, 210000 <inhibit_what_to_string.buffer+0x210000>
  234c64:	adrp	x22, 207000 <inhibit_what_to_string.buffer+0x207000>
  234c68:	adrp	x23, 208000 <inhibit_what_to_string.buffer+0x208000>
  234c6c:	mov	w24, wzr
  234c70:	mov	w20, #0x1                   	// #1
  234c74:	add	x21, x21, #0x29d
  234c78:	add	x22, x22, #0xa1
  234c7c:	add	x23, x23, #0x194
  234c80:	b	234ca4 <seat_preallocate_vts+0xc4>
  234c84:	mov	w8, wzr
  234c88:	neg	w9, w25
  234c8c:	sub	w24, w8, w9, uxtb
  234c90:	ldr	x8, [x19]
  234c94:	add	w20, w20, #0x1
  234c98:	ldr	w8, [x8, #156]
  234c9c:	cmp	w20, w8
  234ca0:	b.hi	234cf0 <seat_preallocate_vts+0x110>  // b.pmore
  234ca4:	mov	w0, w20
  234ca8:	bl	234db0 <vt_allocate>
  234cac:	tbz	w0, #31, 234c90 <seat_preallocate_vts+0xb0>
  234cb0:	mov	w25, w0
  234cb4:	mov	w0, wzr
  234cb8:	bl	240750 <log_get_max_level_realm@plt>
  234cbc:	cmp	w0, #0x3
  234cc0:	b.lt	234c84 <seat_preallocate_vts+0xa4>  // b.tstop
  234cc4:	mov	w0, #0x3                   	// #3
  234cc8:	mov	w3, #0xce                  	// #206
  234ccc:	mov	w1, w25
  234cd0:	mov	x2, x21
  234cd4:	mov	x4, x22
  234cd8:	mov	x5, x23
  234cdc:	mov	w6, w20
  234ce0:	bl	240770 <log_internal_realm@plt>
  234ce4:	mov	w24, w0
  234ce8:	b	234c90 <seat_preallocate_vts+0xb0>
  234cec:	mov	w24, wzr
  234cf0:	mov	w0, w24
  234cf4:	ldp	x20, x19, [sp, #64]
  234cf8:	ldp	x22, x21, [sp, #48]
  234cfc:	ldp	x24, x23, [sp, #32]
  234d00:	ldr	x25, [sp, #16]
  234d04:	ldp	x29, x30, [sp], #80
  234d08:	ret
  234d0c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  234d10:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234d14:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  234d18:	add	x1, x1, #0x6de
  234d1c:	add	x2, x2, #0x29d
  234d20:	add	x4, x4, #0x8a5
  234d24:	mov	w3, #0xbe                  	// #190
  234d28:	bl	240790 <log_assert_failed_realm@plt>
  234d2c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  234d30:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234d34:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  234d38:	add	x1, x1, #0xda5
  234d3c:	add	x2, x2, #0x29d
  234d40:	add	x4, x4, #0x8a5
  234d44:	mov	w3, #0xbf                  	// #191
  234d48:	mov	w0, wzr
  234d4c:	bl	240790 <log_assert_failed_realm@plt>

0000000000234d50 <seat_has_vts>:
  234d50:	stp	x29, x30, [sp, #-32]!
  234d54:	str	x19, [sp, #16]
  234d58:	mov	x29, sp
  234d5c:	cbz	x0, 234d90 <seat_has_vts+0x40>
  234d60:	mov	x19, x0
  234d64:	bl	234ab4 <seat_is_seat0>
  234d68:	tbz	w0, #0, 234d80 <seat_has_vts+0x30>
  234d6c:	ldr	x8, [x19]
  234d70:	ldr	w8, [x8, #152]
  234d74:	mvn	w8, w8
  234d78:	lsr	w0, w8, #31
  234d7c:	b	234d84 <seat_has_vts+0x34>
  234d80:	mov	w0, wzr
  234d84:	ldr	x19, [sp, #16]
  234d88:	ldp	x29, x30, [sp], #32
  234d8c:	ret
  234d90:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  234d94:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234d98:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  234d9c:	add	x1, x1, #0x6de
  234da0:	add	x2, x2, #0x29d
  234da4:	add	x4, x4, #0xe2
  234da8:	mov	w3, #0x226                 	// #550
  234dac:	bl	240790 <log_assert_failed_realm@plt>

0000000000234db0 <vt_allocate>:
  234db0:	sub	sp, sp, #0x40
  234db4:	stp	x29, x30, [sp, #32]
  234db8:	add	x29, sp, #0x20
  234dbc:	mov	w8, #0xffffffff            	// #-1
  234dc0:	str	x19, [sp, #48]
  234dc4:	str	w8, [x29, #28]
  234dc8:	cbz	w0, 234e20 <vt_allocate+0x70>
  234dcc:	adrp	x2, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  234dd0:	mov	w3, w0
  234dd4:	add	x2, x2, #0xe54
  234dd8:	add	x0, sp, #0x8
  234ddc:	mov	w1, #0x15                  	// #21
  234de0:	bl	240e40 <snprintf@plt>
  234de4:	cmp	w0, #0x15
  234de8:	b.cs	234e40 <vt_allocate+0x90>  // b.hs, b.nlast
  234dec:	mov	w1, #0x102                 	// #258
  234df0:	add	x0, sp, #0x8
  234df4:	movk	w1, #0x8, lsl #16
  234df8:	bl	240b50 <open_terminal@plt>
  234dfc:	str	w0, [x29, #28]
  234e00:	and	w19, w0, w0, asr #31
  234e04:	add	x0, x29, #0x1c
  234e08:	bl	235c68 <closep>
  234e0c:	mov	w0, w19
  234e10:	ldr	x19, [sp, #48]
  234e14:	ldp	x29, x30, [sp, #32]
  234e18:	add	sp, sp, #0x40
  234e1c:	ret
  234e20:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  234e24:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234e28:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  234e2c:	add	x1, x1, #0x245
  234e30:	add	x2, x2, #0x29d
  234e34:	add	x4, x4, #0x974
  234e38:	mov	w3, #0xb0                  	// #176
  234e3c:	bl	240790 <log_assert_failed_realm@plt>
  234e40:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  234e44:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234e48:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  234e4c:	add	x1, x1, #0x7da
  234e50:	add	x2, x2, #0x29d
  234e54:	add	x4, x4, #0x974
  234e58:	mov	w3, #0xb2                  	// #178
  234e5c:	mov	w0, wzr
  234e60:	bl	240790 <log_assert_failed_realm@plt>

0000000000234e64 <seat_apply_acls>:
  234e64:	stp	x29, x30, [sp, #-32]!
  234e68:	str	x19, [sp, #16]
  234e6c:	mov	x29, sp
  234e70:	cbz	x0, 234f24 <seat_apply_acls+0xc0>
  234e74:	mov	x8, x0
  234e78:	ldr	x0, [x0, #8]
  234e7c:	cbz	x1, 234e9c <seat_apply_acls+0x38>
  234e80:	ldr	x9, [x1, #40]
  234e84:	ldr	w3, [x9, #8]
  234e88:	ldr	x8, [x8, #32]
  234e8c:	cbz	x8, 234ea8 <seat_apply_acls+0x44>
  234e90:	ldr	x9, [x8, #40]
  234e94:	ldr	w5, [x9, #8]
  234e98:	b	234eac <seat_apply_acls+0x48>
  234e9c:	mov	w3, wzr
  234ea0:	ldr	x8, [x8, #32]
  234ea4:	cbnz	x8, 234e90 <seat_apply_acls+0x2c>
  234ea8:	mov	w5, wzr
  234eac:	cmp	x8, #0x0
  234eb0:	cset	w4, ne  // ne = any
  234eb4:	cmp	x1, #0x0
  234eb8:	cset	w2, ne  // ne = any
  234ebc:	mov	w1, wzr
  234ec0:	bl	240094 <devnode_acl_all>
  234ec4:	mov	w19, w0
  234ec8:	mov	w0, wzr
  234ecc:	tbz	w19, #31, 234f18 <seat_apply_acls+0xb4>
  234ed0:	mov	w0, wzr
  234ed4:	bl	240750 <log_get_max_level_realm@plt>
  234ed8:	cmp	w0, #0x3
  234edc:	b.lt	234f0c <seat_apply_acls+0xa8>  // b.tstop
  234ee0:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234ee4:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  234ee8:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  234eec:	add	x2, x2, #0x29d
  234ef0:	add	x4, x4, #0xd8
  234ef4:	add	x5, x5, #0xdb0
  234ef8:	mov	w0, #0x3                   	// #3
  234efc:	mov	w3, #0xdf                  	// #223
  234f00:	mov	w1, w19
  234f04:	bl	240770 <log_internal_realm@plt>
  234f08:	b	234f18 <seat_apply_acls+0xb4>
  234f0c:	mov	w8, wzr
  234f10:	neg	w9, w19
  234f14:	sub	w0, w8, w9, uxtb
  234f18:	ldr	x19, [sp, #16]
  234f1c:	ldp	x29, x30, [sp], #32
  234f20:	ret
  234f24:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  234f28:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  234f2c:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  234f30:	add	x1, x1, #0x6de
  234f34:	add	x2, x2, #0x29d
  234f38:	add	x4, x4, #0xa05
  234f3c:	mov	w3, #0xd7                  	// #215
  234f40:	bl	240790 <log_assert_failed_realm@plt>

0000000000234f44 <seat_set_active>:
  234f44:	stp	x29, x30, [sp, #-48]!
  234f48:	str	x21, [sp, #16]
  234f4c:	stp	x20, x19, [sp, #32]
  234f50:	mov	x29, sp
  234f54:	cbz	x0, 235048 <seat_set_active+0x104>
  234f58:	mov	x19, x1
  234f5c:	mov	x21, x0
  234f60:	cbz	x1, 234f70 <seat_set_active+0x2c>
  234f64:	ldr	x8, [x19, #136]
  234f68:	cmp	x8, x21
  234f6c:	b.ne	235068 <seat_set_active+0x124>  // b.any
  234f70:	ldr	x20, [x21, #32]
  234f74:	cmp	x20, x19
  234f78:	b.eq	235034 <seat_set_active+0xf0>  // b.none
  234f7c:	str	x19, [x21, #32]
  234f80:	cbz	x20, 234fa0 <seat_set_active+0x5c>
  234f84:	mov	x0, x20
  234f88:	bl	2392a4 <session_device_pause_all>
  234f8c:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  234f90:	add	x1, x1, #0x20e
  234f94:	mov	x0, x20
  234f98:	mov	x2, xzr
  234f9c:	bl	23786c <session_send_changed>
  234fa0:	mov	x0, x21
  234fa4:	mov	x1, x20
  234fa8:	bl	234e64 <seat_apply_acls>
  234fac:	cbz	x19, 234fdc <seat_set_active+0x98>
  234fb0:	ldrb	w8, [x19, #209]
  234fb4:	tbz	w8, #1, 234fd4 <seat_set_active+0x90>
  234fb8:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  234fbc:	add	x1, x1, #0x20e
  234fc0:	mov	x0, x19
  234fc4:	mov	x2, xzr
  234fc8:	bl	23786c <session_send_changed>
  234fcc:	mov	x0, x19
  234fd0:	bl	238fc0 <session_device_resume_all>
  234fd4:	ldrb	w8, [x19, #209]
  234fd8:	tbz	w8, #1, 234ff0 <seat_set_active+0xac>
  234fdc:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  234fe0:	add	x1, x1, #0xa69
  234fe4:	mov	x0, x21
  234fe8:	mov	x2, xzr
  234fec:	bl	234278 <seat_send_changed>
  234ff0:	mov	x0, x21
  234ff4:	bl	2347cc <seat_save>
  234ff8:	cbz	x19, 23500c <seat_set_active+0xc8>
  234ffc:	mov	x0, x19
  235000:	bl	239e28 <session_save>
  235004:	ldr	x0, [x19, #40]
  235008:	bl	23dc5c <user_save>
  23500c:	cbz	x20, 235034 <seat_set_active+0xf0>
  235010:	mov	x0, x20
  235014:	bl	239e28 <session_save>
  235018:	cbz	x19, 23502c <seat_set_active+0xe8>
  23501c:	ldr	x8, [x19, #40]
  235020:	ldr	x9, [x20, #40]
  235024:	cmp	x8, x9
  235028:	b.eq	235034 <seat_set_active+0xf0>  // b.none
  23502c:	ldr	x0, [x20, #40]
  235030:	bl	23dc5c <user_save>
  235034:	ldp	x20, x19, [sp, #32]
  235038:	ldr	x21, [sp, #16]
  23503c:	mov	w0, wzr
  235040:	ldp	x29, x30, [sp], #48
  235044:	ret
  235048:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23504c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  235050:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  235054:	add	x1, x1, #0x6de
  235058:	add	x2, x2, #0x29d
  23505c:	add	x4, x4, #0xb7c
  235060:	mov	w3, #0xe7                  	// #231
  235064:	bl	240790 <log_assert_failed_realm@plt>
  235068:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23506c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  235070:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  235074:	add	x1, x1, #0x3ab
  235078:	add	x2, x2, #0x29d
  23507c:	add	x4, x4, #0xb7c
  235080:	mov	w3, #0xe8                  	// #232
  235084:	mov	w0, wzr
  235088:	bl	240790 <log_assert_failed_realm@plt>

000000000023508c <seat_switch_to>:
  23508c:	stp	x29, x30, [sp, #-32]!
  235090:	str	x19, [sp, #16]
  235094:	mov	x29, sp
  235098:	cbz	w1, 2350ec <seat_switch_to+0x60>
  23509c:	ldr	x9, [x0, #64]
  2350a0:	mov	w8, w1
  2350a4:	mov	w19, w1
  2350a8:	cmp	x9, x8
  2350ac:	b.ls	2350c8 <seat_switch_to+0x3c>  // b.plast
  2350b0:	ldr	x9, [x0, #56]
  2350b4:	ldr	x8, [x9, x8, lsl #3]
  2350b8:	cbz	x8, 2350c8 <seat_switch_to+0x3c>
  2350bc:	mov	x0, x8
  2350c0:	bl	23b214 <session_activate>
  2350c4:	b	2350f0 <seat_switch_to+0x64>
  2350c8:	bl	234d50 <seat_has_vts>
  2350cc:	mov	w8, w0
  2350d0:	cmp	w19, #0x3f
  2350d4:	mov	w0, #0xffffffea            	// #-22
  2350d8:	b.hi	2350f0 <seat_switch_to+0x64>  // b.pmore
  2350dc:	tbz	w8, #0, 2350f0 <seat_switch_to+0x64>
  2350e0:	mov	w0, w19
  2350e4:	bl	2415b0 <chvt@plt>
  2350e8:	b	2350f0 <seat_switch_to+0x64>
  2350ec:	mov	w0, #0xffffffea            	// #-22
  2350f0:	ldr	x19, [sp, #16]
  2350f4:	ldp	x29, x30, [sp], #32
  2350f8:	ret

00000000002350fc <seat_switch_to_next>:
  2350fc:	stp	x29, x30, [sp, #-16]!
  235100:	ldr	x10, [x0, #64]
  235104:	mov	x29, sp
  235108:	cbz	x10, 23517c <seat_switch_to_next+0x80>
  23510c:	ldr	x8, [x0, #32]
  235110:	cbz	x8, 235124 <seat_switch_to_next+0x28>
  235114:	ldr	w8, [x8, #16]
  235118:	cmp	w8, #0x0
  23511c:	csinc	w9, w8, wzr, ne  // ne = any
  235120:	b	235128 <seat_switch_to_next+0x2c>
  235124:	mov	w9, #0x1                   	// #1
  235128:	add	w11, w9, #0x1
  23512c:	mov	w11, w11
  235130:	cmp	x10, x11
  235134:	b.ls	235158 <seat_switch_to_next+0x5c>  // b.plast
  235138:	ldr	x8, [x0, #56]
  23513c:	ldr	x8, [x8, x11, lsl #3]
  235140:	add	w11, w11, #0x1
  235144:	cbz	x8, 23512c <seat_switch_to_next+0x30>
  235148:	mov	x0, x8
  23514c:	bl	23b214 <session_activate>
  235150:	ldp	x29, x30, [sp], #16
  235154:	ret
  235158:	cmp	w9, #0x2
  23515c:	b.cc	23517c <seat_switch_to_next+0x80>  // b.lo, b.ul, b.last
  235160:	ldr	x8, [x0, #56]
  235164:	mov	w10, #0x1                   	// #1
  235168:	ldr	x0, [x8, w10, uxtw #3]
  23516c:	cbnz	x0, 23514c <seat_switch_to_next+0x50>
  235170:	add	w10, w10, #0x1
  235174:	cmp	w9, w10
  235178:	b.ne	235168 <seat_switch_to_next+0x6c>  // b.any
  23517c:	mov	w0, #0xffffffea            	// #-22
  235180:	ldp	x29, x30, [sp], #16
  235184:	ret

0000000000235188 <seat_switch_to_previous>:
  235188:	stp	x29, x30, [sp, #-16]!
  23518c:	ldr	x10, [x0, #64]
  235190:	mov	x29, sp
  235194:	cbz	x10, 2351fc <seat_switch_to_previous+0x74>
  235198:	ldr	x8, [x0, #32]
  23519c:	cbz	x8, 2351b0 <seat_switch_to_previous+0x28>
  2351a0:	ldr	w8, [x8, #16]
  2351a4:	cmp	w8, #0x0
  2351a8:	csinc	w9, w8, wzr, ne  // ne = any
  2351ac:	b	2351b4 <seat_switch_to_previous+0x2c>
  2351b0:	mov	w9, #0x1                   	// #1
  2351b4:	sub	w11, w9, #0x1
  2351b8:	cbz	w11, 2351d0 <seat_switch_to_previous+0x48>
  2351bc:	ldr	x8, [x0, #56]
  2351c0:	ldr	x8, [x8, w11, uxtw #3]
  2351c4:	sub	w11, w11, #0x1
  2351c8:	cbz	x8, 2351b8 <seat_switch_to_previous+0x30>
  2351cc:	b	2351ec <seat_switch_to_previous+0x64>
  2351d0:	sub	w10, w10, #0x1
  2351d4:	cmp	w10, w9
  2351d8:	b.ls	2351fc <seat_switch_to_previous+0x74>  // b.plast
  2351dc:	ldr	x8, [x0, #56]
  2351e0:	ldr	x8, [x8, w10, uxtw #3]
  2351e4:	sub	w10, w10, #0x1
  2351e8:	cbz	x8, 2351d4 <seat_switch_to_previous+0x4c>
  2351ec:	mov	x0, x8
  2351f0:	bl	23b214 <session_activate>
  2351f4:	ldp	x29, x30, [sp], #16
  2351f8:	ret
  2351fc:	mov	w0, #0xffffffea            	// #-22
  235200:	ldp	x29, x30, [sp], #16
  235204:	ret

0000000000235208 <seat_active_vt_changed>:
  235208:	stp	x29, x30, [sp, #-32]!
  23520c:	stp	x20, x19, [sp, #16]
  235210:	mov	x29, sp
  235214:	cbz	x0, 2352e0 <seat_active_vt_changed+0xd8>
  235218:	mov	w19, w1
  23521c:	cbz	w1, 235300 <seat_active_vt_changed+0xf8>
  235220:	mov	x20, x0
  235224:	bl	234d50 <seat_has_vts>
  235228:	tbz	w0, #0, 2352b0 <seat_active_vt_changed+0xa8>
  23522c:	mov	w0, wzr
  235230:	bl	240750 <log_get_max_level_realm@plt>
  235234:	cmp	w0, #0x7
  235238:	b.lt	235268 <seat_active_vt_changed+0x60>  // b.tstop
  23523c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  235240:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  235244:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  235248:	add	x2, x2, #0x29d
  23524c:	add	x4, x4, #0x5a8
  235250:	add	x5, x5, #0xe8
  235254:	mov	w0, #0x7                   	// #7
  235258:	mov	w3, #0x154                 	// #340
  23525c:	mov	w1, wzr
  235260:	mov	w6, w19
  235264:	bl	240770 <log_internal_realm@plt>
  235268:	ldr	x1, [x20, #48]
  23526c:	cbnz	x1, 23527c <seat_active_vt_changed+0x74>
  235270:	b	235290 <seat_active_vt_changed+0x88>
  235274:	ldr	x1, [x1, #272]
  235278:	cbz	x1, 235290 <seat_active_vt_changed+0x88>
  23527c:	ldr	w8, [x1, #144]
  235280:	cmp	w8, w19
  235284:	b.ne	235274 <seat_active_vt_changed+0x6c>  // b.any
  235288:	ldrb	w8, [x1, #209]
  23528c:	tbnz	w8, #2, 235274 <seat_active_vt_changed+0x6c>
  235290:	cbz	x1, 2352c0 <seat_active_vt_changed+0xb8>
  235294:	mov	x0, x20
  235298:	bl	234f44 <seat_set_active>
  23529c:	ldr	x0, [x20]
  2352a0:	mov	w1, w19
  2352a4:	bl	228558 <manager_spawn_autovt>
  2352a8:	mov	w0, wzr
  2352ac:	b	2352b4 <seat_active_vt_changed+0xac>
  2352b0:	mov	w0, #0xffffffea            	// #-22
  2352b4:	ldp	x20, x19, [sp, #16]
  2352b8:	ldp	x29, x30, [sp], #32
  2352bc:	ret
  2352c0:	ldr	x1, [x20, #48]
  2352c4:	cbz	x1, 235294 <seat_active_vt_changed+0x8c>
  2352c8:	ldr	w8, [x1, #144]
  2352cc:	cmp	w8, w19
  2352d0:	b.eq	235294 <seat_active_vt_changed+0x8c>  // b.none
  2352d4:	ldr	x1, [x1, #272]
  2352d8:	cbnz	x1, 2352c8 <seat_active_vt_changed+0xc0>
  2352dc:	b	235294 <seat_active_vt_changed+0x8c>
  2352e0:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2352e4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2352e8:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  2352ec:	add	x1, x1, #0x6de
  2352f0:	add	x2, x2, #0x29d
  2352f4:	add	x4, x4, #0x7c9
  2352f8:	mov	w3, #0x14e                 	// #334
  2352fc:	bl	240790 <log_assert_failed_realm@plt>
  235300:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  235304:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  235308:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  23530c:	add	x1, x1, #0x245
  235310:	add	x2, x2, #0x29d
  235314:	add	x4, x4, #0x7c9
  235318:	mov	w3, #0x14f                 	// #335
  23531c:	mov	w0, wzr
  235320:	bl	240790 <log_assert_failed_realm@plt>

0000000000235324 <seat_read_active_vt>:
  235324:	sub	sp, sp, #0x70
  235328:	stp	x29, x30, [sp, #64]
  23532c:	str	x21, [sp, #80]
  235330:	stp	x20, x19, [sp, #96]
  235334:	add	x29, sp, #0x40
  235338:	cbz	x0, 2354d0 <seat_read_active_vt+0x1ac>
  23533c:	mov	x19, x0
  235340:	bl	234d50 <seat_has_vts>
  235344:	tbz	w0, #0, 2353b0 <seat_read_active_vt+0x8c>
  235348:	ldr	x8, [x19]
  23534c:	mov	x1, xzr
  235350:	mov	w2, wzr
  235354:	ldr	w0, [x8, #152]
  235358:	bl	2415c0 <lseek64@plt>
  23535c:	tbnz	x0, #63, 2353b8 <seat_read_active_vt+0x94>
  235360:	ldr	x8, [x19]
  235364:	mov	x1, sp
  235368:	mov	w2, #0x3f                  	// #63
  23536c:	mov	x21, sp
  235370:	ldr	w0, [x8, #152]
  235374:	bl	240d60 <read@plt>
  235378:	mov	x20, x0
  23537c:	cmp	x0, #0x0
  235380:	b.le	2353fc <seat_read_active_vt+0xd8>
  235384:	mov	x0, sp
  235388:	strb	wzr, [x21, x20]
  23538c:	bl	2415d0 <truncate_nl@plt>
  235390:	mov	x0, sp
  235394:	bl	241100 <vtnr_from_tty@plt>
  235398:	mov	w20, w0
  23539c:	tbnz	w0, #31, 235430 <seat_read_active_vt+0x10c>
  2353a0:	mov	x0, x19
  2353a4:	mov	w1, w20
  2353a8:	bl	235208 <seat_active_vt_changed>
  2353ac:	b	2354bc <seat_read_active_vt+0x198>
  2353b0:	mov	w0, wzr
  2353b4:	b	2354bc <seat_read_active_vt+0x198>
  2353b8:	bl	240930 <__errno_location@plt>
  2353bc:	ldr	w19, [x0]
  2353c0:	mov	w0, wzr
  2353c4:	bl	240750 <log_get_max_level_realm@plt>
  2353c8:	cmp	w0, #0x3
  2353cc:	b.lt	23541c <seat_read_active_vt+0xf8>  // b.tstop
  2353d0:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2353d4:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  2353d8:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  2353dc:	add	x2, x2, #0x29d
  2353e0:	add	x4, x4, #0x2c5
  2353e4:	add	x5, x5, #0x6f4
  2353e8:	mov	w0, #0x3                   	// #3
  2353ec:	mov	w3, #0x179                 	// #377
  2353f0:	mov	w1, w19
  2353f4:	bl	240770 <log_internal_realm@plt>
  2353f8:	b	2354bc <seat_read_active_vt+0x198>
  2353fc:	mov	w0, wzr
  235400:	bl	240750 <log_get_max_level_realm@plt>
  235404:	cmp	w0, #0x3
  235408:	b.lt	2354a4 <seat_read_active_vt+0x180>  // b.tstop
  23540c:	tbnz	x20, #63, 23546c <seat_read_active_vt+0x148>
  235410:	adrp	x6, 208000 <inhibit_what_to_string.buffer+0x208000>
  235414:	add	x6, x6, #0xc82
  235418:	b	23547c <seat_read_active_vt+0x158>
  23541c:	cmp	w19, #0x0
  235420:	mov	w8, wzr
  235424:	cneg	w9, w19, mi  // mi = first
  235428:	sub	w0, w8, w9, uxtb
  23542c:	b	2354bc <seat_read_active_vt+0x198>
  235430:	mov	w0, wzr
  235434:	bl	240750 <log_get_max_level_realm@plt>
  235438:	cmp	w0, #0x3
  23543c:	b.lt	2354a8 <seat_read_active_vt+0x184>  // b.tstop
  235440:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  235444:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  235448:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23544c:	add	x2, x2, #0x29d
  235450:	add	x4, x4, #0x2c5
  235454:	add	x5, x5, #0x8c6
  235458:	mov	w0, #0x3                   	// #3
  23545c:	mov	w3, #0x186                 	// #390
  235460:	mov	w1, w20
  235464:	bl	240770 <log_internal_realm@plt>
  235468:	b	2354a8 <seat_read_active_vt+0x184>
  23546c:	bl	240930 <__errno_location@plt>
  235470:	ldr	w0, [x0]
  235474:	bl	2354f0 <strerror_safe>
  235478:	mov	x6, x0
  23547c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  235480:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  235484:	adrp	x5, 211000 <inhibit_what_to_string.buffer+0x211000>
  235488:	add	x2, x2, #0x29d
  23548c:	add	x4, x4, #0x2c5
  235490:	add	x5, x5, #0xd40
  235494:	mov	w0, #0x3                   	// #3
  235498:	mov	w3, #0x17d                 	// #381
  23549c:	mov	w1, wzr
  2354a0:	bl	240770 <log_internal_realm@plt>
  2354a4:	tbnz	x20, #63, 2354b0 <seat_read_active_vt+0x18c>
  2354a8:	mov	w0, #0xfffffffb            	// #-5
  2354ac:	b	2354bc <seat_read_active_vt+0x198>
  2354b0:	bl	240930 <__errno_location@plt>
  2354b4:	ldr	w8, [x0]
  2354b8:	neg	w0, w8
  2354bc:	ldp	x20, x19, [sp, #96]
  2354c0:	ldr	x21, [sp, #80]
  2354c4:	ldp	x29, x30, [sp, #64]
  2354c8:	add	sp, sp, #0x70
  2354cc:	ret
  2354d0:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2354d4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2354d8:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2354dc:	add	x1, x1, #0x6de
  2354e0:	add	x2, x2, #0x29d
  2354e4:	add	x4, x4, #0x5bf
  2354e8:	mov	w3, #0x173                 	// #371
  2354ec:	bl	240790 <log_assert_failed_realm@plt>

00000000002354f0 <strerror_safe>:
  2354f0:	stp	x29, x30, [sp, #-16]!
  2354f4:	cmp	w0, #0x0
  2354f8:	cneg	w0, w0, mi  // mi = first
  2354fc:	mov	x29, sp
  235500:	bl	2415e0 <strerror@plt>
  235504:	ldp	x29, x30, [sp], #16
  235508:	ret

000000000023550c <seat_start>:
  23550c:	sub	sp, sp, #0x40
  235510:	stp	x29, x30, [sp, #32]
  235514:	str	x19, [sp, #48]
  235518:	add	x29, sp, #0x20
  23551c:	cbz	x0, 2355b4 <seat_start+0xa8>
  235520:	ldrb	w8, [x0, #72]
  235524:	mov	x19, x0
  235528:	tbnz	w8, #1, 2355a0 <seat_start+0x94>
  23552c:	ldr	x7, [x19, #8]
  235530:	adrp	x8, 211000 <inhibit_what_to_string.buffer+0x211000>
  235534:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  235538:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  23553c:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  235540:	adrp	x6, 209000 <inhibit_what_to_string.buffer+0x209000>
  235544:	add	x8, x8, #0x955
  235548:	add	x2, x2, #0x29d
  23554c:	add	x4, x4, #0x7fa
  235550:	add	x5, x5, #0xdee
  235554:	add	x6, x6, #0x43c
  235558:	mov	w0, #0x6                   	// #6
  23555c:	mov	w3, #0x196                 	// #406
  235560:	mov	w1, wzr
  235564:	stp	x7, xzr, [sp, #8]
  235568:	str	x8, [sp]
  23556c:	bl	240d70 <log_struct_internal@plt>
  235570:	mov	x0, x19
  235574:	bl	234be0 <seat_preallocate_vts>
  235578:	mov	x0, x19
  23557c:	bl	235324 <seat_read_active_vt>
  235580:	ldrb	w8, [x19, #72]
  235584:	mov	x0, x19
  235588:	orr	w8, w8, #0x2
  23558c:	strb	w8, [x19, #72]
  235590:	bl	2347cc <seat_save>
  235594:	mov	w1, #0x1                   	// #1
  235598:	mov	x0, x19
  23559c:	bl	2341c4 <seat_send_signal>
  2355a0:	ldr	x19, [sp, #48]
  2355a4:	ldp	x29, x30, [sp, #32]
  2355a8:	mov	w0, wzr
  2355ac:	add	sp, sp, #0x40
  2355b0:	ret
  2355b4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2355b8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2355bc:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  2355c0:	add	x1, x1, #0x6de
  2355c4:	add	x2, x2, #0x29d
  2355c8:	add	x4, x4, #0x425
  2355cc:	mov	w3, #0x18e                 	// #398
  2355d0:	bl	240790 <log_assert_failed_realm@plt>

00000000002355d4 <seat_stop>:
  2355d4:	sub	sp, sp, #0x40
  2355d8:	stp	x29, x30, [sp, #32]
  2355dc:	stp	x20, x19, [sp, #48]
  2355e0:	add	x29, sp, #0x20
  2355e4:	cbz	x0, 235694 <seat_stop+0xc0>
  2355e8:	ldrb	w8, [x0, #72]
  2355ec:	mov	w20, w1
  2355f0:	mov	x19, x0
  2355f4:	tbz	w8, #1, 23563c <seat_stop+0x68>
  2355f8:	ldr	x7, [x19, #8]
  2355fc:	adrp	x8, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  235600:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  235604:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  235608:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  23560c:	adrp	x6, 209000 <inhibit_what_to_string.buffer+0x209000>
  235610:	add	x8, x8, #0x5df
  235614:	add	x2, x2, #0x29d
  235618:	add	x4, x4, #0x96a
  23561c:	add	x5, x5, #0xb6
  235620:	add	x6, x6, #0x43c
  235624:	mov	w0, #0x6                   	// #6
  235628:	mov	w3, #0x1b1                 	// #433
  23562c:	mov	w1, wzr
  235630:	stp	x7, xzr, [sp, #8]
  235634:	str	x8, [sp]
  235638:	bl	240d70 <log_struct_internal@plt>
  23563c:	and	w1, w20, #0x1
  235640:	mov	x0, x19
  235644:	bl	2356b4 <seat_stop_sessions>
  235648:	ldr	x8, [x19, #16]
  23564c:	mov	w20, w0
  235650:	mov	x0, x8
  235654:	bl	2411d0 <unlink@plt>
  235658:	mov	x0, x19
  23565c:	bl	235730 <seat_add_to_gc_queue>
  235660:	ldrb	w8, [x19, #72]
  235664:	tbz	w8, #1, 235674 <seat_stop+0xa0>
  235668:	mov	x0, x19
  23566c:	mov	w1, wzr
  235670:	bl	2341c4 <seat_send_signal>
  235674:	ldrb	w8, [x19, #72]
  235678:	mov	w0, w20
  23567c:	and	w8, w8, #0xfffffffd
  235680:	strb	w8, [x19, #72]
  235684:	ldp	x20, x19, [sp, #48]
  235688:	ldp	x29, x30, [sp, #32]
  23568c:	add	sp, sp, #0x40
  235690:	ret
  235694:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  235698:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  23569c:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2356a0:	add	x1, x1, #0x6de
  2356a4:	add	x2, x2, #0x29d
  2356a8:	add	x4, x4, #0x5bf
  2356ac:	mov	w3, #0x1ab                 	// #427
  2356b0:	bl	240790 <log_assert_failed_realm@plt>

00000000002356b4 <seat_stop_sessions>:
  2356b4:	stp	x29, x30, [sp, #-48]!
  2356b8:	str	x21, [sp, #16]
  2356bc:	stp	x20, x19, [sp, #32]
  2356c0:	mov	x29, sp
  2356c4:	cbz	x0, 235710 <seat_stop_sessions+0x5c>
  2356c8:	ldr	x20, [x0, #48]
  2356cc:	cbz	x20, 2356f8 <seat_stop_sessions+0x44>
  2356d0:	mov	w19, wzr
  2356d4:	and	w21, w1, #0x1
  2356d8:	mov	x0, x20
  2356dc:	mov	w1, w21
  2356e0:	bl	23b758 <session_stop>
  2356e4:	ldr	x20, [x20, #272]
  2356e8:	cmp	w0, #0x0
  2356ec:	csel	w19, w0, w19, lt  // lt = tstop
  2356f0:	cbnz	x20, 2356d8 <seat_stop_sessions+0x24>
  2356f4:	b	2356fc <seat_stop_sessions+0x48>
  2356f8:	mov	w19, wzr
  2356fc:	mov	w0, w19
  235700:	ldp	x20, x19, [sp, #32]
  235704:	ldr	x21, [sp, #16]
  235708:	ldp	x29, x30, [sp], #48
  23570c:	ret
  235710:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  235714:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  235718:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  23571c:	add	x1, x1, #0x6de
  235720:	add	x2, x2, #0x29d
  235724:	add	x4, x4, #0xa2c
  235728:	mov	w3, #0x1c4                 	// #452
  23572c:	bl	240790 <log_assert_failed_realm@plt>

0000000000235730 <seat_add_to_gc_queue>:
  235730:	stp	x29, x30, [sp, #-16]!
  235734:	mov	x29, sp
  235738:	cbz	x0, 235774 <seat_add_to_gc_queue+0x44>
  23573c:	ldrb	w8, [x0, #72]
  235740:	tbnz	w8, #0, 23576c <seat_add_to_gc_queue+0x3c>
  235744:	ldr	x8, [x0]
  235748:	ldr	x9, [x8, #80]
  23574c:	str	x9, [x0, #80]
  235750:	cbz	x9, 235758 <seat_add_to_gc_queue+0x28>
  235754:	str	x0, [x9, #88]
  235758:	str	xzr, [x0, #88]
  23575c:	str	x0, [x8, #80]
  235760:	ldrb	w8, [x0, #72]
  235764:	orr	w8, w8, #0x1
  235768:	strb	w8, [x0, #72]
  23576c:	ldp	x29, x30, [sp], #16
  235770:	ret
  235774:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  235778:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  23577c:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  235780:	add	x1, x1, #0x6de
  235784:	add	x2, x2, #0x29d
  235788:	add	x4, x4, #0x8fc
  23578c:	mov	w3, #0x27b                 	// #635
  235790:	bl	240790 <log_assert_failed_realm@plt>

0000000000235794 <seat_evict_position>:
  235794:	stp	x29, x30, [sp, #-48]!
  235798:	stp	x20, x19, [sp, #32]
  23579c:	str	x21, [sp, #16]
  2357a0:	ldr	w21, [x1, #16]
  2357a4:	mov	x29, sp
  2357a8:	str	wzr, [x1, #16]
  2357ac:	cbz	w21, 2357d0 <seat_evict_position+0x3c>
  2357b0:	ldr	x8, [x0, #64]
  2357b4:	mov	x19, x0
  2357b8:	cmp	x8, x21
  2357bc:	b.ls	2357d0 <seat_evict_position+0x3c>  // b.plast
  2357c0:	ldr	x8, [x19, #56]
  2357c4:	ldr	x9, [x8, x21, lsl #3]
  2357c8:	cmp	x9, x1
  2357cc:	b.eq	2357e0 <seat_evict_position+0x4c>  // b.none
  2357d0:	ldp	x20, x19, [sp, #32]
  2357d4:	ldr	x21, [sp, #16]
  2357d8:	ldp	x29, x30, [sp], #48
  2357dc:	ret
  2357e0:	str	xzr, [x8, x21, lsl #3]
  2357e4:	ldr	x20, [x19, #48]
  2357e8:	cbnz	x20, 2357f8 <seat_evict_position+0x64>
  2357ec:	b	2357d0 <seat_evict_position+0x3c>
  2357f0:	ldr	x20, [x20, #272]
  2357f4:	cbz	x20, 2357d0 <seat_evict_position+0x3c>
  2357f8:	ldr	w8, [x20, #16]
  2357fc:	cmp	w8, w21
  235800:	b.ne	2357f0 <seat_evict_position+0x5c>  // b.any
  235804:	mov	x0, x20
  235808:	bl	23a384 <session_get_state>
  23580c:	cmp	w0, #0x3
  235810:	b.eq	2357f0 <seat_evict_position+0x5c>  // b.none
  235814:	ldr	x8, [x19, #56]
  235818:	str	x20, [x8, x21, lsl #3]
  23581c:	b	2357d0 <seat_evict_position+0x3c>

0000000000235820 <seat_claim_position>:
  235820:	stp	x29, x30, [sp, #-48]!
  235824:	stp	x22, x21, [sp, #16]
  235828:	stp	x20, x19, [sp, #32]
  23582c:	mov	x29, sp
  235830:	mov	w20, w2
  235834:	mov	x19, x1
  235838:	mov	x21, x0
  23583c:	bl	234d50 <seat_has_vts>
  235840:	tbz	w0, #0, 235848 <seat_claim_position+0x28>
  235844:	ldr	w20, [x19, #144]
  235848:	add	x22, x21, #0x38
  23584c:	add	x1, x21, #0x40
  235850:	add	w2, w20, #0x1
  235854:	mov	w3, #0x8                   	// #8
  235858:	mov	x0, x22
  23585c:	bl	2415f0 <greedy_realloc0@plt>
  235860:	cbz	x0, 235880 <seat_claim_position+0x60>
  235864:	mov	x0, x21
  235868:	mov	x1, x19
  23586c:	bl	235794 <seat_evict_position>
  235870:	str	w20, [x19, #16]
  235874:	cbz	w20, 235880 <seat_claim_position+0x60>
  235878:	ldr	x8, [x22]
  23587c:	str	x19, [x8, w20, uxtw #3]
  235880:	ldp	x20, x19, [sp, #32]
  235884:	ldp	x22, x21, [sp, #16]
  235888:	ldp	x29, x30, [sp], #48
  23588c:	ret

0000000000235890 <seat_attach_session>:
  235890:	stp	x29, x30, [sp, #-32]!
  235894:	stp	x20, x19, [sp, #16]
  235898:	mov	x29, sp
  23589c:	cbz	x0, 235924 <seat_attach_session+0x94>
  2358a0:	mov	x19, x1
  2358a4:	cbz	x1, 235944 <seat_attach_session+0xb4>
  2358a8:	ldr	x8, [x19, #136]
  2358ac:	cbnz	x8, 235968 <seat_attach_session+0xd8>
  2358b0:	mov	x20, x0
  2358b4:	bl	234d50 <seat_has_vts>
  2358b8:	ldr	w8, [x19, #144]
  2358bc:	cmp	w8, #0x0
  2358c0:	cset	w8, eq  // eq = none
  2358c4:	eor	w8, w0, w8
  2358c8:	tbnz	w8, #0, 2358d4 <seat_attach_session+0x44>
  2358cc:	mov	w0, #0xffffffea            	// #-22
  2358d0:	b	235918 <seat_attach_session+0x88>
  2358d4:	str	x20, [x19, #136]
  2358d8:	ldr	x8, [x20, #48]
  2358dc:	str	x8, [x19, #272]
  2358e0:	cbz	x8, 2358e8 <seat_attach_session+0x58>
  2358e4:	str	x19, [x8, #280]
  2358e8:	mov	x0, x20
  2358ec:	mov	x1, x19
  2358f0:	str	xzr, [x19, #280]
  2358f4:	str	x19, [x20, #48]
  2358f8:	bl	23598c <seat_assign_position>
  2358fc:	mov	x0, x20
  235900:	bl	234d50 <seat_has_vts>
  235904:	tbnz	w0, #0, 235914 <seat_attach_session+0x84>
  235908:	mov	x0, x20
  23590c:	mov	x1, x19
  235910:	bl	234f44 <seat_set_active>
  235914:	mov	w0, wzr
  235918:	ldp	x20, x19, [sp, #16]
  23591c:	ldp	x29, x30, [sp], #32
  235920:	ret
  235924:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  235928:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  23592c:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  235930:	add	x1, x1, #0x6de
  235934:	add	x2, x2, #0x29d
  235938:	add	x4, x4, #0xd63
  23593c:	mov	w3, #0x204                 	// #516
  235940:	bl	240790 <log_assert_failed_realm@plt>
  235944:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  235948:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  23594c:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  235950:	add	x1, x1, #0xa72
  235954:	add	x2, x2, #0x29d
  235958:	add	x4, x4, #0xd63
  23595c:	mov	w3, #0x205                 	// #517
  235960:	mov	w0, wzr
  235964:	bl	240790 <log_assert_failed_realm@plt>
  235968:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23596c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  235970:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  235974:	add	x1, x1, #0xa52
  235978:	add	x2, x2, #0x29d
  23597c:	add	x4, x4, #0xd63
  235980:	mov	w3, #0x206                 	// #518
  235984:	mov	w0, wzr
  235988:	bl	240790 <log_assert_failed_realm@plt>

000000000023598c <seat_assign_position>:
  23598c:	stp	x29, x30, [sp, #-16]!
  235990:	ldr	w8, [x1, #16]
  235994:	mov	x29, sp
  235998:	cbz	w8, 2359a4 <seat_assign_position+0x18>
  23599c:	ldp	x29, x30, [sp], #16
  2359a0:	ret
  2359a4:	ldr	x8, [x0, #64]
  2359a8:	cmp	x8, #0x2
  2359ac:	b.cc	2359d4 <seat_assign_position+0x48>  // b.lo, b.ul, b.last
  2359b0:	ldr	x8, [x0, #56]
  2359b4:	mov	w2, #0x1                   	// #1
  2359b8:	ldr	x9, [x8, x2, lsl #3]
  2359bc:	cbz	x9, 2359d8 <seat_assign_position+0x4c>
  2359c0:	ldr	x9, [x0, #64]
  2359c4:	add	w2, w2, #0x1
  2359c8:	cmp	x9, x2
  2359cc:	b.hi	2359b8 <seat_assign_position+0x2c>  // b.pmore
  2359d0:	b	2359d8 <seat_assign_position+0x4c>
  2359d4:	mov	w2, #0x1                   	// #1
  2359d8:	bl	235820 <seat_claim_position>
  2359dc:	ldp	x29, x30, [sp], #16
  2359e0:	ret

00000000002359e4 <seat_complete_switch>:
  2359e4:	stp	x29, x30, [sp, #-16]!
  2359e8:	mov	x29, sp
  2359ec:	cbz	x0, 235a08 <seat_complete_switch+0x24>
  2359f0:	ldr	x1, [x0, #40]
  2359f4:	cbz	x1, 235a00 <seat_complete_switch+0x1c>
  2359f8:	str	xzr, [x0, #40]
  2359fc:	bl	234f44 <seat_set_active>
  235a00:	ldp	x29, x30, [sp], #16
  235a04:	ret
  235a08:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  235a0c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  235a10:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  235a14:	add	x1, x1, #0x6de
  235a18:	add	x2, x2, #0x29d
  235a1c:	add	x4, x4, #0x5f8
  235a20:	mov	w3, #0x21a                 	// #538
  235a24:	bl	240790 <log_assert_failed_realm@plt>

0000000000235a28 <seat_has_master_device>:
  235a28:	stp	x29, x30, [sp, #-16]!
  235a2c:	mov	x29, sp
  235a30:	cbz	x0, 235a5c <seat_has_master_device+0x34>
  235a34:	ldr	x8, [x0, #24]
  235a38:	cbz	x8, 235a50 <seat_has_master_device+0x28>
  235a3c:	ldrb	w8, [x8, #24]
  235a40:	cmp	w8, #0x0
  235a44:	cset	w0, ne  // ne = any
  235a48:	ldp	x29, x30, [sp], #16
  235a4c:	ret
  235a50:	mov	w0, wzr
  235a54:	ldp	x29, x30, [sp], #16
  235a58:	ret
  235a5c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  235a60:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  235a64:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  235a68:	add	x1, x1, #0x6de
  235a6c:	add	x2, x2, #0x29d
  235a70:	add	x4, x4, #0xf9
  235a74:	mov	w3, #0x23e                 	// #574
  235a78:	bl	240790 <log_assert_failed_realm@plt>

0000000000235a7c <seat_get_idle_hint>:
  235a7c:	sub	sp, sp, #0x50
  235a80:	stp	x29, x30, [sp, #16]
  235a84:	stp	x24, x23, [sp, #32]
  235a88:	stp	x22, x21, [sp, #48]
  235a8c:	stp	x20, x19, [sp, #64]
  235a90:	add	x29, sp, #0x10
  235a94:	cbz	x0, 235b48 <seat_get_idle_hint+0xcc>
  235a98:	ldr	x20, [x0, #48]
  235a9c:	mov	x19, x1
  235aa0:	cbz	x20, 235b34 <seat_get_idle_hint+0xb8>
  235aa4:	mov	x24, xzr
  235aa8:	mov	x22, xzr
  235aac:	mov	w23, #0x1                   	// #1
  235ab0:	mov	x1, sp
  235ab4:	mov	x0, x20
  235ab8:	bl	23bdd8 <session_get_idle_hint>
  235abc:	tbnz	w0, #31, 235acc <seat_get_idle_hint+0x50>
  235ac0:	cbz	w0, 235adc <seat_get_idle_hint+0x60>
  235ac4:	tbnz	w23, #0, 235aec <seat_get_idle_hint+0x70>
  235ac8:	b	235afc <seat_get_idle_hint+0x80>
  235acc:	mov	w8, wzr
  235ad0:	mov	w21, w0
  235ad4:	tbnz	w8, #0, 235b04 <seat_get_idle_hint+0x88>
  235ad8:	b	235b18 <seat_get_idle_hint+0x9c>
  235adc:	tbz	w23, #0, 235aec <seat_get_idle_hint+0x70>
  235ae0:	ldp	x22, x24, [sp]
  235ae4:	mov	w23, wzr
  235ae8:	b	235afc <seat_get_idle_hint+0x80>
  235aec:	ldp	x9, x8, [sp]
  235af0:	cmp	x8, x24
  235af4:	csel	x22, x9, x22, hi  // hi = pmore
  235af8:	csel	x24, x8, x24, hi  // hi = pmore
  235afc:	mov	w8, #0x1                   	// #1
  235b00:	tbz	w8, #0, 235b18 <seat_get_idle_hint+0x9c>
  235b04:	ldr	x20, [x20, #272]
  235b08:	cbnz	x20, 235ab0 <seat_get_idle_hint+0x34>
  235b0c:	cbz	x19, 235b14 <seat_get_idle_hint+0x98>
  235b10:	stp	x22, x24, [x19]
  235b14:	and	w21, w23, #0x1
  235b18:	mov	w0, w21
  235b1c:	ldp	x20, x19, [sp, #64]
  235b20:	ldp	x22, x21, [sp, #48]
  235b24:	ldp	x24, x23, [sp, #32]
  235b28:	ldp	x29, x30, [sp, #16]
  235b2c:	add	sp, sp, #0x50
  235b30:	ret
  235b34:	mov	x22, xzr
  235b38:	mov	x24, xzr
  235b3c:	mov	w23, #0x1                   	// #1
  235b40:	cbnz	x19, 235b10 <seat_get_idle_hint+0x94>
  235b44:	b	235b14 <seat_get_idle_hint+0x98>
  235b48:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  235b4c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  235b50:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  235b54:	add	x1, x1, #0x6de
  235b58:	add	x2, x2, #0x29d
  235b5c:	add	x4, x4, #0xdc9
  235b60:	mov	w3, #0x24f                 	// #591
  235b64:	bl	240790 <log_assert_failed_realm@plt>

0000000000235b68 <seat_may_gc>:
  235b68:	stp	x29, x30, [sp, #-32]!
  235b6c:	str	x19, [sp, #16]
  235b70:	mov	x29, sp
  235b74:	cbz	x0, 235bc0 <seat_may_gc+0x58>
  235b78:	mov	x19, x0
  235b7c:	tbz	w1, #0, 235b90 <seat_may_gc+0x28>
  235b80:	ldrb	w8, [x19, #72]
  235b84:	tbnz	w8, #1, 235b90 <seat_may_gc+0x28>
  235b88:	mov	w8, #0x1                   	// #1
  235b8c:	b	235bb0 <seat_may_gc+0x48>
  235b90:	mov	x0, x19
  235b94:	bl	234ab4 <seat_is_seat0>
  235b98:	tbz	w0, #0, 235ba4 <seat_may_gc+0x3c>
  235b9c:	mov	w8, wzr
  235ba0:	b	235bb0 <seat_may_gc+0x48>
  235ba4:	mov	x0, x19
  235ba8:	bl	235a28 <seat_has_master_device>
  235bac:	eor	w8, w0, #0x1
  235bb0:	ldr	x19, [sp, #16]
  235bb4:	and	w0, w8, #0x1
  235bb8:	ldp	x29, x30, [sp], #32
  235bbc:	ret
  235bc0:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  235bc4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  235bc8:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  235bcc:	add	x1, x1, #0x6de
  235bd0:	add	x2, x2, #0x29d
  235bd4:	add	x4, x4, #0x11e
  235bd8:	mov	w3, #0x26f                 	// #623
  235bdc:	bl	240790 <log_assert_failed_realm@plt>

0000000000235be0 <startswith>:
  235be0:	stp	x29, x30, [sp, #-32]!
  235be4:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  235be8:	add	x1, x1, #0x289
  235bec:	mov	w2, #0x4                   	// #4
  235bf0:	str	x19, [sp, #16]
  235bf4:	mov	x29, sp
  235bf8:	mov	x19, x0
  235bfc:	bl	240b90 <strncmp@plt>
  235c00:	add	x8, x19, #0x4
  235c04:	ldr	x19, [sp, #16]
  235c08:	cmp	w0, #0x0
  235c0c:	csel	x0, x8, xzr, eq  // eq = none
  235c10:	ldp	x29, x30, [sp], #32
  235c14:	ret

0000000000235c18 <seat_name_valid_char>:
  235c18:	sub	w9, w0, #0x30
  235c1c:	and	w9, w9, #0xff
  235c20:	mov	w8, w0
  235c24:	cmp	w9, #0xa
  235c28:	mov	w0, #0x1                   	// #1
  235c2c:	b.cc	235c5c <seat_name_valid_char+0x44>  // b.lo, b.ul, b.last
  235c30:	and	w9, w8, #0xffffffdf
  235c34:	sub	w9, w9, #0x41
  235c38:	and	w9, w9, #0xff
  235c3c:	cmp	w9, #0x1a
  235c40:	b.cc	235c5c <seat_name_valid_char+0x44>  // b.lo, b.ul, b.last
  235c44:	and	w8, w8, #0xff
  235c48:	cmp	w8, #0x5f
  235c4c:	b.eq	235c58 <seat_name_valid_char+0x40>  // b.none
  235c50:	cmp	w8, #0x2d
  235c54:	b.ne	235c60 <seat_name_valid_char+0x48>  // b.any
  235c58:	mov	w0, #0x1                   	// #1
  235c5c:	ret
  235c60:	mov	w0, wzr
  235c64:	ret

0000000000235c68 <closep>:
  235c68:	stp	x29, x30, [sp, #-16]!
  235c6c:	ldr	w0, [x0]
  235c70:	mov	x29, sp
  235c74:	bl	240820 <safe_close@plt>
  235c78:	ldp	x29, x30, [sp], #16
  235c7c:	ret

0000000000235c80 <bus_session_method_terminate>:
  235c80:	stp	x29, x30, [sp, #-32]!
  235c84:	stp	x20, x19, [sp, #16]
  235c88:	mov	x29, sp
  235c8c:	cbz	x0, 235d00 <bus_session_method_terminate+0x80>
  235c90:	mov	x20, x1
  235c94:	cbz	x1, 235d20 <bus_session_method_terminate+0xa0>
  235c98:	ldr	x8, [x20, #40]
  235c9c:	ldr	x9, [x20]
  235ca0:	mov	x7, x2
  235ca4:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  235ca8:	ldr	w5, [x8, #8]
  235cac:	add	x6, x9, #0x1b0
  235cb0:	add	x2, x2, #0x51b
  235cb4:	mov	w1, #0x5                   	// #5
  235cb8:	mov	x3, xzr
  235cbc:	mov	w4, wzr
  235cc0:	mov	x19, x0
  235cc4:	bl	241160 <bus_verify_polkit_async@plt>
  235cc8:	tbnz	w0, #31, 235cf4 <bus_session_method_terminate+0x74>
  235ccc:	cbz	w0, 235cf0 <bus_session_method_terminate+0x70>
  235cd0:	mov	w1, #0x1                   	// #1
  235cd4:	mov	x0, x20
  235cd8:	bl	23b758 <session_stop>
  235cdc:	tbnz	w0, #31, 235cf4 <bus_session_method_terminate+0x74>
  235ce0:	mov	x0, x19
  235ce4:	mov	x1, xzr
  235ce8:	bl	2410a0 <sd_bus_reply_method_return@plt>
  235cec:	b	235cf4 <bus_session_method_terminate+0x74>
  235cf0:	mov	w0, #0x1                   	// #1
  235cf4:	ldp	x20, x19, [sp, #16]
  235cf8:	ldp	x29, x30, [sp], #32
  235cfc:	ret
  235d00:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  235d04:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  235d08:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  235d0c:	add	x1, x1, #0x30
  235d10:	add	x2, x2, #0x218
  235d14:	add	x4, x4, #0x71a
  235d18:	mov	w3, #0xa2                  	// #162
  235d1c:	bl	240790 <log_assert_failed_realm@plt>
  235d20:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  235d24:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  235d28:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  235d2c:	add	x1, x1, #0x6de
  235d30:	add	x2, x2, #0x218
  235d34:	add	x4, x4, #0x71a
  235d38:	mov	w3, #0xa3                  	// #163
  235d3c:	mov	w0, wzr
  235d40:	bl	240790 <log_assert_failed_realm@plt>

0000000000235d44 <bus_session_method_activate>:
  235d44:	stp	x29, x30, [sp, #-32]!
  235d48:	str	x19, [sp, #16]
  235d4c:	mov	x29, sp
  235d50:	cbz	x0, 235d80 <bus_session_method_activate+0x3c>
  235d54:	cbz	x1, 235da0 <bus_session_method_activate+0x5c>
  235d58:	mov	x19, x0
  235d5c:	mov	x0, x1
  235d60:	bl	23b214 <session_activate>
  235d64:	tbnz	w0, #31, 235d74 <bus_session_method_activate+0x30>
  235d68:	mov	x0, x19
  235d6c:	mov	x1, xzr
  235d70:	bl	2410a0 <sd_bus_reply_method_return@plt>
  235d74:	ldr	x19, [sp, #16]
  235d78:	ldp	x29, x30, [sp], #32
  235d7c:	ret
  235d80:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  235d84:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  235d88:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  235d8c:	add	x1, x1, #0x30
  235d90:	add	x2, x2, #0x218
  235d94:	add	x4, x4, #0x6bc
  235d98:	mov	w3, #0xbe                  	// #190
  235d9c:	bl	240790 <log_assert_failed_realm@plt>
  235da0:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  235da4:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  235da8:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  235dac:	add	x1, x1, #0x6de
  235db0:	add	x2, x2, #0x218
  235db4:	add	x4, x4, #0x6bc
  235db8:	mov	w3, #0xbf                  	// #191
  235dbc:	mov	w0, wzr
  235dc0:	bl	240790 <log_assert_failed_realm@plt>

0000000000235dc4 <bus_session_method_lock>:
  235dc4:	stp	x29, x30, [sp, #-32]!
  235dc8:	stp	x20, x19, [sp, #16]
  235dcc:	mov	x29, sp
  235dd0:	cbz	x0, 235e5c <bus_session_method_lock+0x98>
  235dd4:	mov	x20, x1
  235dd8:	cbz	x1, 235e7c <bus_session_method_lock+0xb8>
  235ddc:	ldr	x8, [x20, #40]
  235de0:	ldr	x9, [x20]
  235de4:	mov	x7, x2
  235de8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  235dec:	ldr	w5, [x8, #8]
  235df0:	add	x6, x9, #0x1b0
  235df4:	add	x2, x2, #0xc7c
  235df8:	mov	w1, #0x15                  	// #21
  235dfc:	mov	x3, xzr
  235e00:	mov	w4, wzr
  235e04:	mov	x19, x0
  235e08:	bl	241160 <bus_verify_polkit_async@plt>
  235e0c:	tbnz	w0, #31, 235e50 <bus_session_method_lock+0x8c>
  235e10:	cbz	w0, 235e4c <bus_session_method_lock+0x88>
  235e14:	mov	x0, x19
  235e18:	bl	241170 <sd_bus_message_get_member@plt>
  235e1c:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  235e20:	add	x1, x1, #0x1b4
  235e24:	bl	241600 <strstr@plt>
  235e28:	cmp	x0, #0x0
  235e2c:	cset	w1, ne  // ne = any
  235e30:	mov	x0, x20
  235e34:	bl	235ea0 <session_send_lock>
  235e38:	tbnz	w0, #31, 235e50 <bus_session_method_lock+0x8c>
  235e3c:	mov	x0, x19
  235e40:	mov	x1, xzr
  235e44:	bl	2410a0 <sd_bus_reply_method_return@plt>
  235e48:	b	235e50 <bus_session_method_lock+0x8c>
  235e4c:	mov	w0, #0x1                   	// #1
  235e50:	ldp	x20, x19, [sp, #16]
  235e54:	ldp	x29, x30, [sp], #32
  235e58:	ret
  235e5c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  235e60:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  235e64:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  235e68:	add	x1, x1, #0x30
  235e6c:	add	x2, x2, #0x218
  235e70:	add	x4, x4, #0x7fb
  235e74:	mov	w3, #0xcc                  	// #204
  235e78:	bl	240790 <log_assert_failed_realm@plt>
  235e7c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  235e80:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  235e84:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  235e88:	add	x1, x1, #0x6de
  235e8c:	add	x2, x2, #0x218
  235e90:	add	x4, x4, #0x7fb
  235e94:	mov	w3, #0xcd                  	// #205
  235e98:	mov	w0, wzr
  235e9c:	bl	240790 <log_assert_failed_realm@plt>

0000000000235ea0 <session_send_lock>:
  235ea0:	sub	sp, sp, #0x30
  235ea4:	stp	x29, x30, [sp, #16]
  235ea8:	stp	x20, x19, [sp, #32]
  235eac:	add	x29, sp, #0x10
  235eb0:	str	xzr, [sp, #8]
  235eb4:	cbz	x0, 235f28 <session_send_lock+0x88>
  235eb8:	mov	w19, w1
  235ebc:	mov	x20, x0
  235ec0:	bl	2374bc <session_bus_path>
  235ec4:	str	x0, [sp, #8]
  235ec8:	cbz	x0, 235f08 <session_send_lock+0x68>
  235ecc:	ldr	x8, [x20]
  235ed0:	mov	x1, x0
  235ed4:	adrp	x9, 208000 <inhibit_what_to_string.buffer+0x208000>
  235ed8:	add	x9, x9, #0x1b4
  235edc:	ldr	x0, [x8, #8]
  235ee0:	adrp	x8, 208000 <inhibit_what_to_string.buffer+0x208000>
  235ee4:	add	x8, x8, #0x82a
  235ee8:	tst	w19, #0x1
  235eec:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  235ef0:	csel	x3, x9, x8, ne  // ne = any
  235ef4:	add	x2, x2, #0x5aa
  235ef8:	mov	x4, xzr
  235efc:	bl	240fd0 <sd_bus_emit_signal@plt>
  235f00:	mov	w19, w0
  235f04:	b	235f0c <session_send_lock+0x6c>
  235f08:	mov	w19, #0xfffffff4            	// #-12
  235f0c:	add	x0, sp, #0x8
  235f10:	bl	237440 <freep>
  235f14:	mov	w0, w19
  235f18:	ldp	x20, x19, [sp, #32]
  235f1c:	ldp	x29, x30, [sp, #16]
  235f20:	add	sp, sp, #0x30
  235f24:	ret
  235f28:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  235f2c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  235f30:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  235f34:	add	x1, x1, #0x6de
  235f38:	add	x2, x2, #0x218
  235f3c:	add	x4, x4, #0x1c0
  235f40:	mov	w3, #0x2e8                 	// #744
  235f44:	bl	240790 <log_assert_failed_realm@plt>

0000000000235f48 <bus_session_method_kill>:
  235f48:	sub	sp, sp, #0x50
  235f4c:	stp	x29, x30, [sp, #16]
  235f50:	str	x23, [sp, #32]
  235f54:	stp	x22, x21, [sp, #48]
  235f58:	stp	x20, x19, [sp, #64]
  235f5c:	add	x29, sp, #0x10
  235f60:	cbz	x0, 23607c <bus_session_method_kill+0x134>
  235f64:	mov	x20, x1
  235f68:	cbz	x1, 23609c <bus_session_method_kill+0x154>
  235f6c:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  235f70:	mov	x21, x2
  235f74:	add	x1, x1, #0x238
  235f78:	add	x2, x29, #0x18
  235f7c:	sub	x3, x29, #0x4
  235f80:	mov	x19, x0
  235f84:	bl	240fb0 <sd_bus_message_read@plt>
  235f88:	tbnz	w0, #31, 236064 <bus_session_method_kill+0x11c>
  235f8c:	ldr	x23, [x29, #24]
  235f90:	mov	x0, x23
  235f94:	bl	2360c0 <isempty>
  235f98:	tbz	w0, #0, 235fa4 <bus_session_method_kill+0x5c>
  235f9c:	mov	w22, #0x1                   	// #1
  235fa0:	b	235fb4 <bus_session_method_kill+0x6c>
  235fa4:	mov	x0, x23
  235fa8:	bl	23c86c <kill_who_from_string>
  235fac:	mov	w22, w0
  235fb0:	tbnz	w0, #31, 236040 <bus_session_method_kill+0xf8>
  235fb4:	ldur	w23, [x29, #-4]
  235fb8:	mov	w0, w23
  235fbc:	bl	2360dc <SIGNAL_VALID>
  235fc0:	tbz	w0, #0, 236020 <bus_session_method_kill+0xd8>
  235fc4:	ldr	x8, [x20, #40]
  235fc8:	ldr	x9, [x20]
  235fcc:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  235fd0:	add	x2, x2, #0x51b
  235fd4:	ldr	w5, [x8, #8]
  235fd8:	add	x6, x9, #0x1b0
  235fdc:	mov	w1, #0x5                   	// #5
  235fe0:	mov	x0, x19
  235fe4:	mov	x3, xzr
  235fe8:	mov	w4, wzr
  235fec:	mov	x7, x21
  235ff0:	bl	241160 <bus_verify_polkit_async@plt>
  235ff4:	tbnz	w0, #31, 236064 <bus_session_method_kill+0x11c>
  235ff8:	cbz	w0, 236060 <bus_session_method_kill+0x118>
  235ffc:	ldur	w2, [x29, #-4]
  236000:	mov	x0, x20
  236004:	mov	w1, w22
  236008:	bl	23c42c <session_kill>
  23600c:	tbnz	w0, #31, 236064 <bus_session_method_kill+0x11c>
  236010:	mov	x0, x19
  236014:	mov	x1, xzr
  236018:	bl	2410a0 <sd_bus_reply_method_return@plt>
  23601c:	b	236064 <bus_session_method_kill+0x11c>
  236020:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  236024:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  236028:	add	x1, x1, #0x47f
  23602c:	add	x2, x2, #0xc78
  236030:	mov	x0, x21
  236034:	mov	w3, w23
  236038:	bl	240f50 <sd_bus_error_setf@plt>
  23603c:	b	236064 <bus_session_method_kill+0x11c>
  236040:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  236044:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  236048:	add	x1, x1, #0x47f
  23604c:	add	x2, x2, #0xfd
  236050:	mov	x0, x21
  236054:	mov	x3, x23
  236058:	bl	240f50 <sd_bus_error_setf@plt>
  23605c:	b	236064 <bus_session_method_kill+0x11c>
  236060:	mov	w0, #0x1                   	// #1
  236064:	ldp	x20, x19, [sp, #64]
  236068:	ldp	x22, x21, [sp, #48]
  23606c:	ldr	x23, [sp, #32]
  236070:	ldp	x29, x30, [sp, #16]
  236074:	add	sp, sp, #0x50
  236078:	ret
  23607c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  236080:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236084:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  236088:	add	x1, x1, #0x30
  23608c:	add	x2, x2, #0x218
  236090:	add	x4, x4, #0x420
  236094:	mov	w3, #0x125                 	// #293
  236098:	bl	240790 <log_assert_failed_realm@plt>
  23609c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2360a0:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2360a4:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2360a8:	add	x1, x1, #0x6de
  2360ac:	add	x2, x2, #0x218
  2360b0:	add	x4, x4, #0x420
  2360b4:	mov	w3, #0x126                 	// #294
  2360b8:	mov	w0, wzr
  2360bc:	bl	240790 <log_assert_failed_realm@plt>

00000000002360c0 <isempty>:
  2360c0:	cbz	x0, 2360d4 <isempty+0x14>
  2360c4:	ldrb	w8, [x0]
  2360c8:	cmp	w8, #0x0
  2360cc:	cset	w0, eq  // eq = none
  2360d0:	ret
  2360d4:	mov	w0, #0x1                   	// #1
  2360d8:	ret

00000000002360dc <SIGNAL_VALID>:
  2360dc:	sub	w8, w0, #0x1
  2360e0:	cmp	w8, #0x40
  2360e4:	cset	w0, cc  // cc = lo, ul, last
  2360e8:	ret

00000000002360ec <property_get_user>:
  2360ec:	sub	sp, sp, #0x30
  2360f0:	stp	x29, x30, [sp, #16]
  2360f4:	stp	x20, x19, [sp, #32]
  2360f8:	add	x29, sp, #0x10
  2360fc:	str	xzr, [sp, #8]
  236100:	cbz	x0, 236168 <property_get_user+0x7c>
  236104:	mov	x19, x4
  236108:	cbz	x4, 236188 <property_get_user+0x9c>
  23610c:	mov	x20, x5
  236110:	cbz	x5, 2361ac <property_get_user+0xc0>
  236114:	ldr	x0, [x20, #40]
  236118:	bl	23d2c0 <user_bus_path>
  23611c:	str	x0, [sp, #8]
  236120:	cbz	x0, 236148 <property_get_user+0x5c>
  236124:	ldr	x8, [x20, #40]
  236128:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23612c:	mov	x3, x0
  236130:	add	x1, x1, #0x61a
  236134:	ldr	w2, [x8, #8]
  236138:	mov	x0, x19
  23613c:	bl	240ff0 <sd_bus_message_append@plt>
  236140:	mov	w19, w0
  236144:	b	23614c <property_get_user+0x60>
  236148:	mov	w19, #0xfffffff4            	// #-12
  23614c:	add	x0, sp, #0x8
  236150:	bl	237440 <freep>
  236154:	mov	w0, w19
  236158:	ldp	x20, x19, [sp, #32]
  23615c:	ldp	x29, x30, [sp, #16]
  236160:	add	sp, sp, #0x30
  236164:	ret
  236168:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23616c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236170:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  236174:	add	x1, x1, #0x887
  236178:	add	x2, x2, #0x218
  23617c:	add	x4, x4, #0xcee
  236180:	mov	w3, #0x26                  	// #38
  236184:	bl	240790 <log_assert_failed_realm@plt>
  236188:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23618c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236190:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  236194:	add	x1, x1, #0xbb3
  236198:	add	x2, x2, #0x218
  23619c:	add	x4, x4, #0xcee
  2361a0:	mov	w3, #0x27                  	// #39
  2361a4:	mov	w0, wzr
  2361a8:	bl	240790 <log_assert_failed_realm@plt>
  2361ac:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2361b0:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2361b4:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2361b8:	add	x1, x1, #0x6de
  2361bc:	add	x2, x2, #0x218
  2361c0:	add	x4, x4, #0xcee
  2361c4:	mov	w3, #0x28                  	// #40
  2361c8:	mov	w0, wzr
  2361cc:	bl	240790 <log_assert_failed_realm@plt>

00000000002361d0 <property_get_name>:
  2361d0:	stp	x29, x30, [sp, #-16]!
  2361d4:	mov	x29, sp
  2361d8:	cbz	x0, 236204 <property_get_name+0x34>
  2361dc:	cbz	x4, 236224 <property_get_name+0x54>
  2361e0:	cbz	x5, 236248 <property_get_name+0x78>
  2361e4:	ldr	x8, [x5, #40]
  2361e8:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2361ec:	add	x1, x1, #0x6de
  2361f0:	mov	x0, x4
  2361f4:	ldr	x2, [x8, #16]
  2361f8:	bl	240ff0 <sd_bus_message_append@plt>
  2361fc:	ldp	x29, x30, [sp], #16
  236200:	ret
  236204:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  236208:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  23620c:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  236210:	add	x1, x1, #0x887
  236214:	add	x2, x2, #0x218
  236218:	add	x4, x4, #0xbbd
  23621c:	mov	w3, #0x3c                  	// #60
  236220:	bl	240790 <log_assert_failed_realm@plt>
  236224:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  236228:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  23622c:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  236230:	add	x1, x1, #0xbb3
  236234:	add	x2, x2, #0x218
  236238:	add	x4, x4, #0xbbd
  23623c:	mov	w3, #0x3d                  	// #61
  236240:	mov	w0, wzr
  236244:	bl	240790 <log_assert_failed_realm@plt>
  236248:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23624c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236250:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  236254:	add	x1, x1, #0x6de
  236258:	add	x2, x2, #0x218
  23625c:	add	x4, x4, #0xbbd
  236260:	mov	w3, #0x3e                  	// #62
  236264:	mov	w0, wzr
  236268:	bl	240790 <log_assert_failed_realm@plt>

000000000023626c <property_get_seat>:
  23626c:	sub	sp, sp, #0x30
  236270:	stp	x29, x30, [sp, #16]
  236274:	stp	x20, x19, [sp, #32]
  236278:	add	x29, sp, #0x10
  23627c:	str	xzr, [sp, #8]
  236280:	cbz	x0, 23630c <property_get_seat+0xa0>
  236284:	mov	x19, x4
  236288:	cbz	x4, 23632c <property_get_seat+0xc0>
  23628c:	mov	x20, x5
  236290:	cbz	x5, 236350 <property_get_seat+0xe4>
  236294:	ldr	x0, [x20, #136]
  236298:	cbz	x0, 2362a4 <property_get_seat+0x38>
  23629c:	bl	233ea0 <seat_bus_path>
  2362a0:	b	2362b0 <property_get_seat+0x44>
  2362a4:	adrp	x0, 207000 <inhibit_what_to_string.buffer+0x207000>
  2362a8:	add	x0, x0, #0xd32
  2362ac:	bl	240c40 <strdup@plt>
  2362b0:	mov	x3, x0
  2362b4:	str	x0, [sp, #8]
  2362b8:	cbz	x0, 2362cc <property_get_seat+0x60>
  2362bc:	ldr	x8, [x20, #136]
  2362c0:	cbz	x8, 2362d4 <property_get_seat+0x68>
  2362c4:	ldr	x2, [x8, #8]
  2362c8:	b	2362dc <property_get_seat+0x70>
  2362cc:	mov	w19, #0xfffffff4            	// #-12
  2362d0:	b	2362f0 <property_get_seat+0x84>
  2362d4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2362d8:	add	x2, x2, #0xb7e
  2362dc:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  2362e0:	add	x1, x1, #0x3e
  2362e4:	mov	x0, x19
  2362e8:	bl	240ff0 <sd_bus_message_append@plt>
  2362ec:	mov	w19, w0
  2362f0:	add	x0, sp, #0x8
  2362f4:	bl	237440 <freep>
  2362f8:	mov	w0, w19
  2362fc:	ldp	x20, x19, [sp, #32]
  236300:	ldp	x29, x30, [sp, #16]
  236304:	add	sp, sp, #0x30
  236308:	ret
  23630c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  236310:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236314:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  236318:	add	x1, x1, #0x887
  23631c:	add	x2, x2, #0x218
  236320:	add	x4, x4, #0x84e
  236324:	mov	w3, #0x4f                  	// #79
  236328:	bl	240790 <log_assert_failed_realm@plt>
  23632c:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  236330:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236334:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  236338:	add	x1, x1, #0xbb3
  23633c:	add	x2, x2, #0x218
  236340:	add	x4, x4, #0x84e
  236344:	mov	w3, #0x50                  	// #80
  236348:	mov	w0, wzr
  23634c:	bl	240790 <log_assert_failed_realm@plt>
  236350:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  236354:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236358:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23635c:	add	x1, x1, #0x6de
  236360:	add	x2, x2, #0x218
  236364:	add	x4, x4, #0x84e
  236368:	mov	w3, #0x51                  	// #81
  23636c:	mov	w0, wzr
  236370:	bl	240790 <log_assert_failed_realm@plt>

0000000000236374 <property_get_type>:
  236374:	stp	x29, x30, [sp, #-32]!
  236378:	str	x19, [sp, #16]
  23637c:	mov	x29, sp
  236380:	cbz	x0, 2363b8 <property_get_type+0x44>
  236384:	mov	x19, x4
  236388:	cbz	x4, 2363d8 <property_get_type+0x64>
  23638c:	cbz	x5, 2363e4 <property_get_type+0x70>
  236390:	ldr	w0, [x5]
  236394:	bl	23a400 <session_type_to_string>
  236398:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23639c:	mov	x2, x0
  2363a0:	add	x1, x1, #0x6de
  2363a4:	mov	x0, x19
  2363a8:	bl	240ff0 <sd_bus_message_append@plt>
  2363ac:	ldr	x19, [sp, #16]
  2363b0:	ldp	x29, x30, [sp], #32
  2363b4:	ret
  2363b8:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2363bc:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2363c0:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2363c4:	add	x1, x1, #0x887
  2363c8:	add	x2, x2, #0x218
  2363cc:	add	x4, x4, #0x46b
  2363d0:	mov	w3, #0x5a                  	// #90
  2363d4:	bl	240790 <log_assert_failed_realm@plt>
  2363d8:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2363dc:	add	x1, x1, #0xbb3
  2363e0:	b	2363ec <property_get_type+0x78>
  2363e4:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2363e8:	add	x1, x1, #0xb87
  2363ec:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2363f0:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2363f4:	add	x2, x2, #0x218
  2363f8:	add	x4, x4, #0x46b
  2363fc:	mov	w3, #0x5a                  	// #90
  236400:	mov	w0, wzr
  236404:	bl	240790 <log_assert_failed_realm@plt>

0000000000236408 <property_get_class>:
  236408:	stp	x29, x30, [sp, #-32]!
  23640c:	str	x19, [sp, #16]
  236410:	mov	x29, sp
  236414:	cbz	x0, 23644c <property_get_class+0x44>
  236418:	mov	x19, x4
  23641c:	cbz	x4, 23646c <property_get_class+0x64>
  236420:	cbz	x5, 236478 <property_get_class+0x70>
  236424:	ldr	w0, [x5]
  236428:	bl	23a420 <session_class_to_string>
  23642c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  236430:	mov	x2, x0
  236434:	add	x1, x1, #0x6de
  236438:	mov	x0, x19
  23643c:	bl	240ff0 <sd_bus_message_append@plt>
  236440:	ldr	x19, [sp, #16]
  236444:	ldp	x29, x30, [sp], #32
  236448:	ret
  23644c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  236450:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236454:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  236458:	add	x1, x1, #0x887
  23645c:	add	x2, x2, #0x218
  236460:	add	x4, x4, #0xa6f
  236464:	mov	w3, #0x5b                  	// #91
  236468:	bl	240790 <log_assert_failed_realm@plt>
  23646c:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  236470:	add	x1, x1, #0xbb3
  236474:	b	236480 <property_get_class+0x78>
  236478:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23647c:	add	x1, x1, #0xb87
  236480:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236484:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  236488:	add	x2, x2, #0x218
  23648c:	add	x4, x4, #0xa6f
  236490:	mov	w3, #0x5b                  	// #91
  236494:	mov	w0, wzr
  236498:	bl	240790 <log_assert_failed_realm@plt>

000000000023649c <property_get_active>:
  23649c:	stp	x29, x30, [sp, #-32]!
  2364a0:	str	x19, [sp, #16]
  2364a4:	mov	x29, sp
  2364a8:	cbz	x0, 2364e0 <property_get_active+0x44>
  2364ac:	mov	x19, x4
  2364b0:	cbz	x4, 236500 <property_get_active+0x64>
  2364b4:	cbz	x5, 23650c <property_get_active+0x70>
  2364b8:	mov	x0, x5
  2364bc:	bl	23a310 <session_is_active>
  2364c0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2364c4:	and	w2, w0, #0x1
  2364c8:	add	x1, x1, #0xb8c
  2364cc:	mov	x0, x19
  2364d0:	bl	240ff0 <sd_bus_message_append@plt>
  2364d4:	ldr	x19, [sp, #16]
  2364d8:	ldp	x29, x30, [sp], #32
  2364dc:	ret
  2364e0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2364e4:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2364e8:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2364ec:	add	x1, x1, #0x887
  2364f0:	add	x2, x2, #0x218
  2364f4:	add	x4, x4, #0xea0
  2364f8:	mov	w3, #0x5c                  	// #92
  2364fc:	bl	240790 <log_assert_failed_realm@plt>
  236500:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  236504:	add	x1, x1, #0xbb3
  236508:	b	236514 <property_get_active+0x78>
  23650c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  236510:	add	x1, x1, #0xb87
  236514:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236518:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23651c:	add	x2, x2, #0x218
  236520:	add	x4, x4, #0xea0
  236524:	mov	w3, #0x5c                  	// #92
  236528:	mov	w0, wzr
  23652c:	bl	240790 <log_assert_failed_realm@plt>

0000000000236530 <property_get_state>:
  236530:	stp	x29, x30, [sp, #-32]!
  236534:	str	x19, [sp, #16]
  236538:	mov	x29, sp
  23653c:	cbz	x0, 236578 <property_get_state+0x48>
  236540:	mov	x19, x4
  236544:	cbz	x4, 236598 <property_get_state+0x68>
  236548:	cbz	x5, 2365a4 <property_get_state+0x74>
  23654c:	mov	x0, x5
  236550:	bl	23a384 <session_get_state>
  236554:	bl	23a364 <session_state_to_string>
  236558:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23655c:	mov	x2, x0
  236560:	add	x1, x1, #0x6de
  236564:	mov	x0, x19
  236568:	bl	240ff0 <sd_bus_message_append@plt>
  23656c:	ldr	x19, [sp, #16]
  236570:	ldp	x29, x30, [sp], #32
  236574:	ret
  236578:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23657c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236580:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  236584:	add	x1, x1, #0x887
  236588:	add	x2, x2, #0x218
  23658c:	add	x4, x4, #0x3ca
  236590:	mov	w3, #0x5d                  	// #93
  236594:	bl	240790 <log_assert_failed_realm@plt>
  236598:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23659c:	add	x1, x1, #0xbb3
  2365a0:	b	2365ac <property_get_state+0x7c>
  2365a4:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2365a8:	add	x1, x1, #0xb87
  2365ac:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2365b0:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2365b4:	add	x2, x2, #0x218
  2365b8:	add	x4, x4, #0x3ca
  2365bc:	mov	w3, #0x5d                  	// #93
  2365c0:	mov	w0, wzr
  2365c4:	bl	240790 <log_assert_failed_realm@plt>

00000000002365c8 <property_get_idle_hint>:
  2365c8:	stp	x29, x30, [sp, #-32]!
  2365cc:	str	x19, [sp, #16]
  2365d0:	mov	x29, sp
  2365d4:	cbz	x0, 236614 <property_get_idle_hint+0x4c>
  2365d8:	mov	x19, x4
  2365dc:	cbz	x4, 236634 <property_get_idle_hint+0x6c>
  2365e0:	cbz	x5, 236658 <property_get_idle_hint+0x90>
  2365e4:	mov	x0, x5
  2365e8:	mov	x1, xzr
  2365ec:	bl	23bdd8 <session_get_idle_hint>
  2365f0:	cmp	w0, #0x0
  2365f4:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2365f8:	cset	w2, gt
  2365fc:	add	x1, x1, #0xb8c
  236600:	mov	x0, x19
  236604:	bl	240ff0 <sd_bus_message_append@plt>
  236608:	ldr	x19, [sp, #16]
  23660c:	ldp	x29, x30, [sp], #32
  236610:	ret
  236614:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  236618:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  23661c:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  236620:	add	x1, x1, #0x887
  236624:	add	x2, x2, #0x218
  236628:	add	x4, x4, #0x1a6
  23662c:	mov	w3, #0x6a                  	// #106
  236630:	bl	240790 <log_assert_failed_realm@plt>
  236634:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  236638:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  23663c:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  236640:	add	x1, x1, #0xbb3
  236644:	add	x2, x2, #0x218
  236648:	add	x4, x4, #0x1a6
  23664c:	mov	w3, #0x6b                  	// #107
  236650:	mov	w0, wzr
  236654:	bl	240790 <log_assert_failed_realm@plt>
  236658:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23665c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236660:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  236664:	add	x1, x1, #0x6de
  236668:	add	x2, x2, #0x218
  23666c:	add	x4, x4, #0x1a6
  236670:	mov	w3, #0x6c                  	// #108
  236674:	mov	w0, wzr
  236678:	bl	240790 <log_assert_failed_realm@plt>

000000000023667c <property_get_idle_since_hint>:
  23667c:	sub	sp, sp, #0x40
  236680:	stp	x29, x30, [sp, #16]
  236684:	str	x21, [sp, #32]
  236688:	stp	x20, x19, [sp, #48]
  23668c:	add	x29, sp, #0x10
  236690:	stp	xzr, xzr, [sp]
  236694:	cbz	x0, 236700 <property_get_idle_since_hint+0x84>
  236698:	mov	x19, x4
  23669c:	cbz	x4, 236720 <property_get_idle_since_hint+0xa4>
  2366a0:	cbz	x5, 236744 <property_get_idle_since_hint+0xc8>
  2366a4:	mov	x1, sp
  2366a8:	mov	x0, x5
  2366ac:	mov	x20, x3
  2366b0:	mov	x21, sp
  2366b4:	bl	23bdd8 <session_get_idle_hint>
  2366b8:	tbnz	w0, #31, 2366ec <property_get_idle_since_hint+0x70>
  2366bc:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  2366c0:	add	x1, x1, #0xbea
  2366c4:	mov	x0, x20
  2366c8:	bl	240c30 <strcmp@plt>
  2366cc:	add	x8, x21, #0x8
  2366d0:	cmp	w0, #0x0
  2366d4:	csel	x8, x21, x8, eq  // eq = none
  2366d8:	ldr	x2, [x8]
  2366dc:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  2366e0:	add	x1, x1, #0xfe8
  2366e4:	mov	x0, x19
  2366e8:	bl	240ff0 <sd_bus_message_append@plt>
  2366ec:	ldp	x20, x19, [sp, #48]
  2366f0:	ldr	x21, [sp, #32]
  2366f4:	ldp	x29, x30, [sp, #16]
  2366f8:	add	sp, sp, #0x40
  2366fc:	ret
  236700:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  236704:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236708:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23670c:	add	x1, x1, #0x887
  236710:	add	x2, x2, #0x218
  236714:	add	x4, x4, #0x66c
  236718:	mov	w3, #0x7f                  	// #127
  23671c:	bl	240790 <log_assert_failed_realm@plt>
  236720:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  236724:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236728:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23672c:	add	x1, x1, #0xbb3
  236730:	add	x2, x2, #0x218
  236734:	add	x4, x4, #0x66c
  236738:	mov	w3, #0x80                  	// #128
  23673c:	mov	w0, wzr
  236740:	bl	240790 <log_assert_failed_realm@plt>
  236744:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  236748:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  23674c:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  236750:	add	x1, x1, #0x6de
  236754:	add	x2, x2, #0x218
  236758:	add	x4, x4, #0x66c
  23675c:	mov	w3, #0x81                  	// #129
  236760:	mov	w0, wzr
  236764:	bl	240790 <log_assert_failed_realm@plt>

0000000000236768 <property_get_locked_hint>:
  236768:	stp	x29, x30, [sp, #-32]!
  23676c:	str	x19, [sp, #16]
  236770:	mov	x29, sp
  236774:	cbz	x0, 2367b0 <property_get_locked_hint+0x48>
  236778:	mov	x19, x4
  23677c:	cbz	x4, 2367d0 <property_get_locked_hint+0x68>
  236780:	cbz	x5, 2367f4 <property_get_locked_hint+0x8c>
  236784:	mov	x0, x5
  236788:	bl	23c18c <session_get_locked_hint>
  23678c:	cmp	w0, #0x0
  236790:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  236794:	cset	w2, gt
  236798:	add	x1, x1, #0xb8c
  23679c:	mov	x0, x19
  2367a0:	bl	240ff0 <sd_bus_message_append@plt>
  2367a4:	ldr	x19, [sp, #16]
  2367a8:	ldp	x29, x30, [sp], #32
  2367ac:	ret
  2367b0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2367b4:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2367b8:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2367bc:	add	x1, x1, #0x887
  2367c0:	add	x2, x2, #0x218
  2367c4:	add	x4, x4, #0x69f
  2367c8:	mov	w3, #0x97                  	// #151
  2367cc:	bl	240790 <log_assert_failed_realm@plt>
  2367d0:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2367d4:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2367d8:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2367dc:	add	x1, x1, #0xbb3
  2367e0:	add	x2, x2, #0x218
  2367e4:	add	x4, x4, #0x69f
  2367e8:	mov	w3, #0x98                  	// #152
  2367ec:	mov	w0, wzr
  2367f0:	bl	240790 <log_assert_failed_realm@plt>
  2367f4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2367f8:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2367fc:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  236800:	add	x1, x1, #0x6de
  236804:	add	x2, x2, #0x218
  236808:	add	x4, x4, #0x69f
  23680c:	mov	w3, #0x99                  	// #153
  236810:	mov	w0, wzr
  236814:	bl	240790 <log_assert_failed_realm@plt>

0000000000236818 <method_set_idle_hint>:
  236818:	sub	sp, sp, #0x40
  23681c:	stp	x29, x30, [sp, #16]
  236820:	stp	x22, x21, [sp, #32]
  236824:	stp	x20, x19, [sp, #48]
  236828:	add	x29, sp, #0x10
  23682c:	str	xzr, [sp, #8]
  236830:	cbz	x0, 2368f4 <method_set_idle_hint+0xdc>
  236834:	mov	x20, x1
  236838:	cbz	x1, 236914 <method_set_idle_hint+0xfc>
  23683c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  236840:	mov	x21, x2
  236844:	add	x1, x1, #0xb8c
  236848:	mov	x2, sp
  23684c:	mov	x19, x0
  236850:	bl	240fb0 <sd_bus_message_read@plt>
  236854:	tbnz	w0, #31, 2368d0 <method_set_idle_hint+0xb8>
  236858:	add	x2, sp, #0x8
  23685c:	mov	w1, #0x10                  	// #16
  236860:	mov	x0, x19
  236864:	bl	240f60 <sd_bus_query_sender_creds@plt>
  236868:	tbnz	w0, #31, 2368d0 <method_set_idle_hint+0xb8>
  23686c:	ldr	x0, [sp, #8]
  236870:	add	x1, sp, #0x4
  236874:	bl	241180 <sd_bus_creds_get_euid@plt>
  236878:	tbnz	w0, #31, 2368d0 <method_set_idle_hint+0xb8>
  23687c:	ldr	w8, [sp, #4]
  236880:	cbz	w8, 236894 <method_set_idle_hint+0x7c>
  236884:	ldr	x9, [x20, #40]
  236888:	ldr	w9, [x9, #8]
  23688c:	cmp	w8, w9
  236890:	b.ne	2368b8 <method_set_idle_hint+0xa0>  // b.any
  236894:	ldr	w8, [sp]
  236898:	mov	x0, x20
  23689c:	cmp	w8, #0x0
  2368a0:	cset	w1, ne  // ne = any
  2368a4:	bl	23c094 <session_set_idle_hint>
  2368a8:	mov	x0, x19
  2368ac:	mov	x1, xzr
  2368b0:	bl	2410a0 <sd_bus_reply_method_return@plt>
  2368b4:	b	2368d0 <method_set_idle_hint+0xb8>
  2368b8:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  2368bc:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2368c0:	add	x1, x1, #0x1e8
  2368c4:	add	x2, x2, #0x31b
  2368c8:	mov	x0, x21
  2368cc:	bl	240f50 <sd_bus_error_setf@plt>
  2368d0:	mov	w22, w0
  2368d4:	add	x0, sp, #0x8
  2368d8:	bl	237788 <sd_bus_creds_unrefp>
  2368dc:	mov	w0, w22
  2368e0:	ldp	x20, x19, [sp, #48]
  2368e4:	ldp	x22, x21, [sp, #32]
  2368e8:	ldp	x29, x30, [sp, #16]
  2368ec:	add	sp, sp, #0x40
  2368f0:	ret
  2368f4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2368f8:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2368fc:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  236900:	add	x1, x1, #0x30
  236904:	add	x2, x2, #0x218
  236908:	add	x4, x4, #0xc31
  23690c:	mov	w3, #0xea                  	// #234
  236910:	bl	240790 <log_assert_failed_realm@plt>
  236914:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  236918:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  23691c:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  236920:	add	x1, x1, #0x6de
  236924:	add	x2, x2, #0x218
  236928:	add	x4, x4, #0xc31
  23692c:	mov	w3, #0xeb                  	// #235
  236930:	mov	w0, wzr
  236934:	bl	240790 <log_assert_failed_realm@plt>

0000000000236938 <method_set_locked_hint>:
  236938:	sub	sp, sp, #0x40
  23693c:	stp	x29, x30, [sp, #16]
  236940:	stp	x22, x21, [sp, #32]
  236944:	stp	x20, x19, [sp, #48]
  236948:	add	x29, sp, #0x10
  23694c:	str	xzr, [sp, #8]
  236950:	cbz	x0, 236a14 <method_set_locked_hint+0xdc>
  236954:	mov	x20, x1
  236958:	cbz	x1, 236a34 <method_set_locked_hint+0xfc>
  23695c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  236960:	mov	x21, x2
  236964:	add	x1, x1, #0xb8c
  236968:	mov	x2, sp
  23696c:	mov	x19, x0
  236970:	bl	240fb0 <sd_bus_message_read@plt>
  236974:	tbnz	w0, #31, 2369f0 <method_set_locked_hint+0xb8>
  236978:	add	x2, sp, #0x8
  23697c:	mov	w1, #0x10                  	// #16
  236980:	mov	x0, x19
  236984:	bl	240f60 <sd_bus_query_sender_creds@plt>
  236988:	tbnz	w0, #31, 2369f0 <method_set_locked_hint+0xb8>
  23698c:	ldr	x0, [sp, #8]
  236990:	add	x1, sp, #0x4
  236994:	bl	241180 <sd_bus_creds_get_euid@plt>
  236998:	tbnz	w0, #31, 2369f0 <method_set_locked_hint+0xb8>
  23699c:	ldr	w8, [sp, #4]
  2369a0:	cbz	w8, 2369b4 <method_set_locked_hint+0x7c>
  2369a4:	ldr	x9, [x20, #40]
  2369a8:	ldr	w9, [x9, #8]
  2369ac:	cmp	w8, w9
  2369b0:	b.ne	2369d8 <method_set_locked_hint+0xa0>  // b.any
  2369b4:	ldr	w8, [sp]
  2369b8:	mov	x0, x20
  2369bc:	cmp	w8, #0x0
  2369c0:	cset	w1, ne  // ne = any
  2369c4:	bl	23c1c4 <session_set_locked_hint>
  2369c8:	mov	x0, x19
  2369cc:	mov	x1, xzr
  2369d0:	bl	2410a0 <sd_bus_reply_method_return@plt>
  2369d4:	b	2369f0 <method_set_locked_hint+0xb8>
  2369d8:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  2369dc:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  2369e0:	add	x1, x1, #0x1e8
  2369e4:	add	x2, x2, #0xcc7
  2369e8:	mov	x0, x21
  2369ec:	bl	240f50 <sd_bus_error_setf@plt>
  2369f0:	mov	w22, w0
  2369f4:	add	x0, sp, #0x8
  2369f8:	bl	237788 <sd_bus_creds_unrefp>
  2369fc:	mov	w0, w22
  236a00:	ldp	x20, x19, [sp, #48]
  236a04:	ldp	x22, x21, [sp, #32]
  236a08:	ldp	x29, x30, [sp, #16]
  236a0c:	add	sp, sp, #0x40
  236a10:	ret
  236a14:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  236a18:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236a1c:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  236a20:	add	x1, x1, #0x30
  236a24:	add	x2, x2, #0x218
  236a28:	add	x4, x4, #0x771
  236a2c:	mov	w3, #0x107                 	// #263
  236a30:	bl	240790 <log_assert_failed_realm@plt>
  236a34:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  236a38:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236a3c:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  236a40:	add	x1, x1, #0x6de
  236a44:	add	x2, x2, #0x218
  236a48:	add	x4, x4, #0x771
  236a4c:	mov	w3, #0x108                 	// #264
  236a50:	mov	w0, wzr
  236a54:	bl	240790 <log_assert_failed_realm@plt>

0000000000236a58 <method_take_control>:
  236a58:	sub	sp, sp, #0x40
  236a5c:	stp	x29, x30, [sp, #16]
  236a60:	stp	x22, x21, [sp, #32]
  236a64:	stp	x20, x19, [sp, #48]
  236a68:	add	x29, sp, #0x10
  236a6c:	str	xzr, [sp, #8]
  236a70:	cbz	x0, 236b50 <method_take_control+0xf8>
  236a74:	mov	x20, x1
  236a78:	cbz	x1, 236b70 <method_take_control+0x118>
  236a7c:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  236a80:	mov	x21, x2
  236a84:	add	x1, x1, #0xb8c
  236a88:	add	x2, sp, #0x4
  236a8c:	mov	x19, x0
  236a90:	bl	240fb0 <sd_bus_message_read@plt>
  236a94:	tbnz	w0, #31, 236b2c <method_take_control+0xd4>
  236a98:	add	x2, sp, #0x8
  236a9c:	mov	w1, #0x10                  	// #16
  236aa0:	mov	x0, x19
  236aa4:	bl	240f60 <sd_bus_query_sender_creds@plt>
  236aa8:	tbnz	w0, #31, 236b2c <method_take_control+0xd4>
  236aac:	ldr	x0, [sp, #8]
  236ab0:	mov	x1, sp
  236ab4:	bl	241180 <sd_bus_creds_get_euid@plt>
  236ab8:	tbnz	w0, #31, 236b2c <method_take_control+0xd4>
  236abc:	ldr	w8, [sp]
  236ac0:	cbz	w8, 236adc <method_take_control+0x84>
  236ac4:	ldr	w9, [sp, #4]
  236ac8:	cbnz	w9, 236b14 <method_take_control+0xbc>
  236acc:	ldr	x9, [x20, #40]
  236ad0:	ldr	w9, [x9, #8]
  236ad4:	cmp	w8, w9
  236ad8:	b.ne	236b14 <method_take_control+0xbc>  // b.any
  236adc:	mov	x0, x19
  236ae0:	bl	241610 <sd_bus_message_get_sender@plt>
  236ae4:	ldr	w8, [sp, #4]
  236ae8:	mov	x1, x0
  236aec:	mov	w3, #0x1                   	// #1
  236af0:	mov	x0, x20
  236af4:	cmp	w8, #0x0
  236af8:	cset	w2, ne  // ne = any
  236afc:	bl	23aedc <session_set_controller>
  236b00:	tbnz	w0, #31, 236b2c <method_take_control+0xd4>
  236b04:	mov	x0, x19
  236b08:	mov	x1, xzr
  236b0c:	bl	2410a0 <sd_bus_reply_method_return@plt>
  236b10:	b	236b2c <method_take_control+0xd4>
  236b14:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  236b18:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  236b1c:	add	x1, x1, #0x1e8
  236b20:	add	x2, x2, #0xe17
  236b24:	mov	x0, x21
  236b28:	bl	240f50 <sd_bus_error_setf@plt>
  236b2c:	mov	w22, w0
  236b30:	add	x0, sp, #0x8
  236b34:	bl	237788 <sd_bus_creds_unrefp>
  236b38:	mov	w0, w22
  236b3c:	ldp	x20, x19, [sp, #48]
  236b40:	ldp	x22, x21, [sp, #32]
  236b44:	ldp	x29, x30, [sp, #16]
  236b48:	add	sp, sp, #0x40
  236b4c:	ret
  236b50:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  236b54:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236b58:	adrp	x4, 212000 <inhibit_what_to_string.buffer+0x212000>
  236b5c:	add	x1, x1, #0x30
  236b60:	add	x2, x2, #0x218
  236b64:	add	x4, x4, #0x2a6
  236b68:	mov	w3, #0x152                 	// #338
  236b6c:	bl	240790 <log_assert_failed_realm@plt>
  236b70:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  236b74:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236b78:	adrp	x4, 212000 <inhibit_what_to_string.buffer+0x212000>
  236b7c:	add	x1, x1, #0x6de
  236b80:	add	x2, x2, #0x218
  236b84:	add	x4, x4, #0x2a6
  236b88:	mov	w3, #0x153                 	// #339
  236b8c:	mov	w0, wzr
  236b90:	bl	240790 <log_assert_failed_realm@plt>

0000000000236b94 <method_release_control>:
  236b94:	stp	x29, x30, [sp, #-48]!
  236b98:	str	x21, [sp, #16]
  236b9c:	stp	x20, x19, [sp, #32]
  236ba0:	mov	x29, sp
  236ba4:	cbz	x0, 236c0c <method_release_control+0x78>
  236ba8:	mov	x21, x1
  236bac:	cbz	x1, 236c2c <method_release_control+0x98>
  236bb0:	mov	x20, x2
  236bb4:	mov	x19, x0
  236bb8:	bl	241610 <sd_bus_message_get_sender@plt>
  236bbc:	mov	x1, x0
  236bc0:	mov	x0, x21
  236bc4:	bl	23c528 <session_is_controller>
  236bc8:	tbz	w0, #0, 236be4 <method_release_control+0x50>
  236bcc:	mov	x0, x21
  236bd0:	bl	239bd0 <session_drop_controller>
  236bd4:	mov	x0, x19
  236bd8:	mov	x1, xzr
  236bdc:	bl	2410a0 <sd_bus_reply_method_return@plt>
  236be0:	b	236bfc <method_release_control+0x68>
  236be4:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  236be8:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  236bec:	add	x1, x1, #0x8c2
  236bf0:	add	x2, x2, #0xae4
  236bf4:	mov	x0, x20
  236bf8:	bl	240f50 <sd_bus_error_setf@plt>
  236bfc:	ldp	x20, x19, [sp, #32]
  236c00:	ldr	x21, [sp, #16]
  236c04:	ldp	x29, x30, [sp], #48
  236c08:	ret
  236c0c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  236c10:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236c14:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  236c18:	add	x1, x1, #0x30
  236c1c:	add	x2, x2, #0x218
  236c20:	add	x4, x4, #0xe1f
  236c24:	mov	w3, #0x16e                 	// #366
  236c28:	bl	240790 <log_assert_failed_realm@plt>
  236c2c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  236c30:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236c34:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  236c38:	add	x1, x1, #0x6de
  236c3c:	add	x2, x2, #0x218
  236c40:	add	x4, x4, #0xe1f
  236c44:	mov	w3, #0x16f                 	// #367
  236c48:	mov	w0, wzr
  236c4c:	bl	240790 <log_assert_failed_realm@plt>

0000000000236c50 <method_take_device>:
  236c50:	sub	sp, sp, #0x50
  236c54:	stp	x29, x30, [sp, #32]
  236c58:	stp	x22, x21, [sp, #48]
  236c5c:	stp	x20, x19, [sp, #64]
  236c60:	add	x29, sp, #0x20
  236c64:	cbz	x0, 236da8 <method_take_device+0x158>
  236c68:	mov	x19, x1
  236c6c:	cbz	x1, 236dc8 <method_take_device+0x178>
  236c70:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  236c74:	mov	x21, x2
  236c78:	add	x1, x1, #0x14f
  236c7c:	sub	x2, x29, #0x4
  236c80:	sub	x3, x29, #0x8
  236c84:	mov	x20, x0
  236c88:	bl	240fb0 <sd_bus_message_read@plt>
  236c8c:	tbnz	w0, #31, 236d20 <method_take_device+0xd0>
  236c90:	ldur	w8, [x29, #-4]
  236c94:	cmp	w8, #0xfff
  236c98:	b.hi	236cf4 <method_take_device+0xa4>  // b.pmore
  236c9c:	ldur	w8, [x29, #-8]
  236ca0:	cmp	w8, #0x100, lsl #12
  236ca4:	b.cs	236cf4 <method_take_device+0xa4>  // b.hs, b.nlast
  236ca8:	mov	x0, x20
  236cac:	bl	241610 <sd_bus_message_get_sender@plt>
  236cb0:	mov	x1, x0
  236cb4:	mov	x0, x19
  236cb8:	bl	23c528 <session_is_controller>
  236cbc:	tbz	w0, #0, 236d08 <method_take_device+0xb8>
  236cc0:	ldp	w1, w0, [x29, #-8]
  236cc4:	bl	240c50 <gnu_dev_makedev@plt>
  236cc8:	str	x0, [sp, #8]
  236ccc:	ldr	x0, [x19, #240]
  236cd0:	add	x1, sp, #0x8
  236cd4:	bl	2377a4 <hashmap_get>
  236cd8:	str	x0, [sp, #16]
  236cdc:	cbz	x0, 236d3c <method_take_device+0xec>
  236ce0:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  236ce4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  236ce8:	add	x1, x1, #0x43f
  236cec:	add	x2, x2, #0xdd5
  236cf0:	b	236d18 <method_take_device+0xc8>
  236cf4:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  236cf8:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  236cfc:	add	x1, x1, #0x47f
  236d00:	add	x2, x2, #0x929
  236d04:	b	236d18 <method_take_device+0xc8>
  236d08:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  236d0c:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  236d10:	add	x1, x1, #0x8c2
  236d14:	add	x2, x2, #0xae4
  236d18:	mov	x0, x21
  236d1c:	bl	240f50 <sd_bus_error_setf@plt>
  236d20:	mov	w22, w0
  236d24:	mov	w0, w22
  236d28:	ldp	x20, x19, [sp, #64]
  236d2c:	ldp	x22, x21, [sp, #48]
  236d30:	ldp	x29, x30, [sp, #32]
  236d34:	add	sp, sp, #0x50
  236d38:	ret
  236d3c:	ldr	x1, [sp, #8]
  236d40:	add	x3, sp, #0x10
  236d44:	mov	w2, #0x1                   	// #1
  236d48:	mov	x0, x19
  236d4c:	bl	238788 <session_device_new>
  236d50:	tbnz	w0, #31, 236d20 <method_take_device+0xd0>
  236d54:	ldr	x0, [sp, #16]
  236d58:	bl	239184 <session_device_save>
  236d5c:	tbnz	w0, #31, 236d98 <method_take_device+0x148>
  236d60:	ldr	x8, [sp, #16]
  236d64:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  236d68:	add	x1, x1, #0xdfa
  236d6c:	mov	x0, x20
  236d70:	ldrb	w9, [x8, #36]
  236d74:	ldr	w2, [x8, #32]
  236d78:	mov	w8, #0x1                   	// #1
  236d7c:	bic	w3, w8, w9, lsr #3
  236d80:	bl	2410a0 <sd_bus_reply_method_return@plt>
  236d84:	tbnz	w0, #31, 236d98 <method_take_device+0x148>
  236d88:	mov	x0, x19
  236d8c:	bl	239e28 <session_save>
  236d90:	mov	w22, #0x1                   	// #1
  236d94:	b	236d24 <method_take_device+0xd4>
  236d98:	mov	w22, w0
  236d9c:	ldr	x0, [sp, #16]
  236da0:	bl	238bb4 <session_device_free>
  236da4:	b	236d24 <method_take_device+0xd4>
  236da8:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  236dac:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236db0:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  236db4:	add	x1, x1, #0x30
  236db8:	add	x2, x2, #0x218
  236dbc:	add	x4, x4, #0xe64
  236dc0:	mov	w3, #0x180                 	// #384
  236dc4:	bl	240790 <log_assert_failed_realm@plt>
  236dc8:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  236dcc:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236dd0:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  236dd4:	add	x1, x1, #0x6de
  236dd8:	add	x2, x2, #0x218
  236ddc:	add	x4, x4, #0xe64
  236de0:	mov	w3, #0x181                 	// #385
  236de4:	mov	w0, wzr
  236de8:	bl	240790 <log_assert_failed_realm@plt>

0000000000236dec <method_release_device>:
  236dec:	sub	sp, sp, #0x40
  236df0:	stp	x29, x30, [sp, #16]
  236df4:	str	x21, [sp, #32]
  236df8:	stp	x20, x19, [sp, #48]
  236dfc:	add	x29, sp, #0x10
  236e00:	cbz	x0, 236ee8 <method_release_device+0xfc>
  236e04:	mov	x21, x1
  236e08:	cbz	x1, 236f08 <method_release_device+0x11c>
  236e0c:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  236e10:	mov	x19, x2
  236e14:	add	x1, x1, #0x14f
  236e18:	add	x2, x29, #0x1c
  236e1c:	add	x3, x29, #0x18
  236e20:	mov	x20, x0
  236e24:	bl	240fb0 <sd_bus_message_read@plt>
  236e28:	tbnz	w0, #31, 236ed4 <method_release_device+0xe8>
  236e2c:	ldr	w8, [x29, #28]
  236e30:	cmp	w8, #0xfff
  236e34:	b.hi	236e94 <method_release_device+0xa8>  // b.pmore
  236e38:	ldr	w8, [x29, #24]
  236e3c:	cmp	w8, #0x100, lsl #12
  236e40:	b.cs	236e94 <method_release_device+0xa8>  // b.hs, b.nlast
  236e44:	mov	x0, x20
  236e48:	bl	241610 <sd_bus_message_get_sender@plt>
  236e4c:	mov	x1, x0
  236e50:	mov	x0, x21
  236e54:	bl	23c528 <session_is_controller>
  236e58:	tbz	w0, #0, 236ea8 <method_release_device+0xbc>
  236e5c:	ldp	w1, w0, [x29, #24]
  236e60:	bl	240c50 <gnu_dev_makedev@plt>
  236e64:	str	x0, [sp, #8]
  236e68:	ldr	x0, [x21, #240]
  236e6c:	add	x1, sp, #0x8
  236e70:	bl	2377a4 <hashmap_get>
  236e74:	cbz	x0, 236ebc <method_release_device+0xd0>
  236e78:	bl	238bb4 <session_device_free>
  236e7c:	mov	x0, x21
  236e80:	bl	239e28 <session_save>
  236e84:	mov	x0, x20
  236e88:	mov	x1, xzr
  236e8c:	bl	2410a0 <sd_bus_reply_method_return@plt>
  236e90:	b	236ed4 <method_release_device+0xe8>
  236e94:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  236e98:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  236e9c:	add	x1, x1, #0x47f
  236ea0:	add	x2, x2, #0x929
  236ea4:	b	236ecc <method_release_device+0xe0>
  236ea8:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  236eac:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  236eb0:	add	x1, x1, #0x8c2
  236eb4:	add	x2, x2, #0xae4
  236eb8:	b	236ecc <method_release_device+0xe0>
  236ebc:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  236ec0:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  236ec4:	add	x1, x1, #0x99d
  236ec8:	add	x2, x2, #0x5ed
  236ecc:	mov	x0, x19
  236ed0:	bl	240f50 <sd_bus_error_setf@plt>
  236ed4:	ldp	x20, x19, [sp, #48]
  236ed8:	ldr	x21, [sp, #32]
  236edc:	ldp	x29, x30, [sp, #16]
  236ee0:	add	sp, sp, #0x40
  236ee4:	ret
  236ee8:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  236eec:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236ef0:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  236ef4:	add	x1, x1, #0x30
  236ef8:	add	x2, x2, #0x218
  236efc:	add	x4, x4, #0x715
  236f00:	mov	w3, #0x1b2                 	// #434
  236f04:	bl	240790 <log_assert_failed_realm@plt>
  236f08:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  236f0c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  236f10:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  236f14:	add	x1, x1, #0x6de
  236f18:	add	x2, x2, #0x218
  236f1c:	add	x4, x4, #0x715
  236f20:	mov	w3, #0x1b3                 	// #435
  236f24:	mov	w0, wzr
  236f28:	bl	240790 <log_assert_failed_realm@plt>

0000000000236f2c <method_pause_device_complete>:
  236f2c:	sub	sp, sp, #0x40
  236f30:	stp	x29, x30, [sp, #16]
  236f34:	str	x21, [sp, #32]
  236f38:	stp	x20, x19, [sp, #48]
  236f3c:	add	x29, sp, #0x10
  236f40:	cbz	x0, 237020 <method_pause_device_complete+0xf4>
  236f44:	mov	x21, x1
  236f48:	cbz	x1, 237040 <method_pause_device_complete+0x114>
  236f4c:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  236f50:	mov	x19, x2
  236f54:	add	x1, x1, #0x14f
  236f58:	add	x2, x29, #0x1c
  236f5c:	add	x3, x29, #0x18
  236f60:	mov	x20, x0
  236f64:	bl	240fb0 <sd_bus_message_read@plt>
  236f68:	tbnz	w0, #31, 23700c <method_pause_device_complete+0xe0>
  236f6c:	ldr	w8, [x29, #28]
  236f70:	cmp	w8, #0xfff
  236f74:	b.hi	236fcc <method_pause_device_complete+0xa0>  // b.pmore
  236f78:	ldr	w8, [x29, #24]
  236f7c:	cmp	w8, #0x100, lsl #12
  236f80:	b.cs	236fcc <method_pause_device_complete+0xa0>  // b.hs, b.nlast
  236f84:	mov	x0, x20
  236f88:	bl	241610 <sd_bus_message_get_sender@plt>
  236f8c:	mov	x1, x0
  236f90:	mov	x0, x21
  236f94:	bl	23c528 <session_is_controller>
  236f98:	tbz	w0, #0, 236fe0 <method_pause_device_complete+0xb4>
  236f9c:	ldp	w1, w0, [x29, #24]
  236fa0:	bl	240c50 <gnu_dev_makedev@plt>
  236fa4:	str	x0, [sp, #8]
  236fa8:	ldr	x0, [x21, #240]
  236fac:	add	x1, sp, #0x8
  236fb0:	bl	2377a4 <hashmap_get>
  236fb4:	cbz	x0, 236ff4 <method_pause_device_complete+0xc8>
  236fb8:	bl	238f34 <session_device_complete_pause>
  236fbc:	mov	x0, x20
  236fc0:	mov	x1, xzr
  236fc4:	bl	2410a0 <sd_bus_reply_method_return@plt>
  236fc8:	b	23700c <method_pause_device_complete+0xe0>
  236fcc:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  236fd0:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  236fd4:	add	x1, x1, #0x47f
  236fd8:	add	x2, x2, #0x929
  236fdc:	b	237004 <method_pause_device_complete+0xd8>
  236fe0:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  236fe4:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  236fe8:	add	x1, x1, #0x8c2
  236fec:	add	x2, x2, #0xae4
  236ff0:	b	237004 <method_pause_device_complete+0xd8>
  236ff4:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  236ff8:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  236ffc:	add	x1, x1, #0x99d
  237000:	add	x2, x2, #0x5ed
  237004:	mov	x0, x19
  237008:	bl	240f50 <sd_bus_error_setf@plt>
  23700c:	ldp	x20, x19, [sp, #48]
  237010:	ldr	x21, [sp, #32]
  237014:	ldp	x29, x30, [sp, #16]
  237018:	add	sp, sp, #0x40
  23701c:	ret
  237020:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  237024:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  237028:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23702c:	add	x1, x1, #0x30
  237030:	add	x2, x2, #0x218
  237034:	add	x4, x4, #0x152
  237038:	mov	w3, #0x1d1                 	// #465
  23703c:	bl	240790 <log_assert_failed_realm@plt>
  237040:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  237044:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  237048:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23704c:	add	x1, x1, #0x6de
  237050:	add	x2, x2, #0x218
  237054:	add	x4, x4, #0x152
  237058:	mov	w3, #0x1d2                 	// #466
  23705c:	mov	w0, wzr
  237060:	bl	240790 <log_assert_failed_realm@plt>

0000000000237064 <method_set_brightness>:
  237064:	sub	sp, sp, #0x80
  237068:	stp	x29, x30, [sp, #80]
  23706c:	add	x29, sp, #0x50
  237070:	stp	x22, x21, [sp, #96]
  237074:	stp	x20, x19, [sp, #112]
  237078:	stp	xzr, xzr, [x29, #-16]
  23707c:	cbz	x0, 237278 <method_set_brightness+0x214>
  237080:	mov	x21, x1
  237084:	cbz	x1, 237298 <method_set_brightness+0x234>
  237088:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  23708c:	mov	x19, x2
  237090:	add	x1, x1, #0x119
  237094:	sub	x2, x29, #0x18
  237098:	sub	x3, x29, #0x20
  23709c:	add	x4, sp, #0x24
  2370a0:	mov	x20, x0
  2370a4:	bl	240fb0 <sd_bus_message_read@plt>
  2370a8:	tbnz	w0, #31, 23715c <method_set_brightness+0xf8>
  2370ac:	adrp	x8, 254000 <session_vtable+0x3d0>
  2370b0:	add	x8, x8, #0x5d0
  2370b4:	ldur	x22, [x29, #-24]
  2370b8:	ldr	q0, [x8]
  2370bc:	ldr	x8, [x8, #16]
  2370c0:	mov	x0, sp
  2370c4:	mov	x1, x22
  2370c8:	str	q0, [sp]
  2370cc:	str	x8, [sp, #16]
  2370d0:	bl	240e30 <strv_find@plt>
  2370d4:	cbz	x0, 237110 <method_set_brightness+0xac>
  2370d8:	ldur	x22, [x29, #-32]
  2370dc:	mov	x0, x22
  2370e0:	bl	241620 <filename_is_valid@plt>
  2370e4:	tbz	w0, #0, 237124 <method_set_brightness+0xc0>
  2370e8:	ldr	x8, [x21, #136]
  2370ec:	cbz	x8, 237144 <method_set_brightness+0xe0>
  2370f0:	ldr	x8, [x8, #32]
  2370f4:	cmp	x8, x21
  2370f8:	b.eq	237188 <method_set_brightness+0x124>  // b.none
  2370fc:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  237100:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  237104:	add	x1, x1, #0xd96
  237108:	add	x2, x2, #0xd62
  23710c:	b	237154 <method_set_brightness+0xf0>
  237110:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  237114:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  237118:	add	x1, x1, #0xc9b
  23711c:	add	x2, x2, #0x7b6
  237120:	b	237134 <method_set_brightness+0xd0>
  237124:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  237128:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23712c:	add	x1, x1, #0x47f
  237130:	add	x2, x2, #0x19d
  237134:	mov	x0, x19
  237138:	mov	x3, x22
  23713c:	bl	240f50 <sd_bus_error_setf@plt>
  237140:	b	23715c <method_set_brightness+0xf8>
  237144:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  237148:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  23714c:	add	x1, x1, #0xd96
  237150:	add	x2, x2, #0x9c3
  237154:	mov	x0, x19
  237158:	bl	240f50 <sd_bus_error_setf@plt>
  23715c:	mov	w22, w0
  237160:	sub	x0, x29, #0x10
  237164:	bl	237d7c <sd_device_unrefp>
  237168:	sub	x0, x29, #0x8
  23716c:	bl	237788 <sd_bus_creds_unrefp>
  237170:	mov	w0, w22
  237174:	ldp	x20, x19, [sp, #112]
  237178:	ldp	x22, x21, [sp, #96]
  23717c:	ldp	x29, x30, [sp, #80]
  237180:	add	sp, sp, #0x80
  237184:	ret
  237188:	sub	x2, x29, #0x8
  23718c:	mov	w1, #0x10                  	// #16
  237190:	mov	x0, x20
  237194:	bl	240f60 <sd_bus_query_sender_creds@plt>
  237198:	tbnz	w0, #31, 23715c <method_set_brightness+0xf8>
  23719c:	ldur	x0, [x29, #-8]
  2371a0:	add	x1, sp, #0x20
  2371a4:	bl	241180 <sd_bus_creds_get_euid@plt>
  2371a8:	tbnz	w0, #31, 23715c <method_set_brightness+0xf8>
  2371ac:	ldr	w8, [sp, #32]
  2371b0:	cbz	w8, 2371c4 <method_set_brightness+0x160>
  2371b4:	ldr	x9, [x21, #40]
  2371b8:	ldr	w9, [x9, #8]
  2371bc:	cmp	w8, w9
  2371c0:	b.ne	237224 <method_set_brightness+0x1c0>  // b.any
  2371c4:	ldp	x2, x1, [x29, #-32]
  2371c8:	sub	x0, x29, #0x10
  2371cc:	bl	241630 <sd_device_new_from_subsystem_sysname@plt>
  2371d0:	tbnz	w0, #31, 237238 <method_set_brightness+0x1d4>
  2371d4:	ldur	x0, [x29, #-16]
  2371d8:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2371dc:	add	x1, x1, #0x2b6
  2371e0:	add	x2, sp, #0x28
  2371e4:	bl	240de0 <sd_device_get_property_value@plt>
  2371e8:	tbnz	w0, #31, 237204 <method_set_brightness+0x1a0>
  2371ec:	ldr	x8, [x21, #136]
  2371f0:	ldr	x0, [sp, #40]
  2371f4:	ldr	x22, [x8, #8]
  2371f8:	mov	x1, x22
  2371fc:	bl	237d98 <streq_ptr>
  237200:	tbz	w0, #0, 237254 <method_set_brightness+0x1f0>
  237204:	ldr	x0, [x21]
  237208:	ldur	x1, [x29, #-16]
  23720c:	ldr	w2, [sp, #36]
  237210:	mov	x3, x20
  237214:	bl	237dcc <manager_write_brightness>
  237218:	cmp	w0, #0x0
  23721c:	csinc	w22, w0, wzr, lt  // lt = tstop
  237220:	b	237160 <method_set_brightness+0xfc>
  237224:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  237228:	adrp	x2, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23722c:	add	x1, x1, #0x1e8
  237230:	add	x2, x2, #0x759
  237234:	b	237154 <method_set_brightness+0xf0>
  237238:	ldp	x4, x3, [x29, #-32]
  23723c:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  237240:	mov	w1, w0
  237244:	add	x2, x2, #0x44f
  237248:	mov	x0, x19
  23724c:	bl	241640 <sd_bus_error_set_errnof@plt>
  237250:	b	23715c <method_set_brightness+0xf8>
  237254:	ldp	x4, x3, [x29, #-32]
  237258:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  23725c:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  237260:	add	x1, x1, #0xd96
  237264:	add	x2, x2, #0xd34
  237268:	mov	x0, x19
  23726c:	mov	x5, x22
  237270:	bl	240f50 <sd_bus_error_setf@plt>
  237274:	b	23715c <method_set_brightness+0xf8>
  237278:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23727c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  237280:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  237284:	add	x1, x1, #0x30
  237288:	add	x2, x2, #0x218
  23728c:	add	x4, x4, #0x464
  237290:	mov	w3, #0x1f1                 	// #497
  237294:	bl	240790 <log_assert_failed_realm@plt>
  237298:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23729c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2372a0:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2372a4:	add	x1, x1, #0x6de
  2372a8:	add	x2, x2, #0x218
  2372ac:	add	x4, x4, #0x464
  2372b0:	mov	w3, #0x1f2                 	// #498
  2372b4:	mov	w0, wzr
  2372b8:	bl	240790 <log_assert_failed_realm@plt>

00000000002372bc <session_object_find>:
  2372bc:	sub	sp, sp, #0x50
  2372c0:	stp	x29, x30, [sp, #16]
  2372c4:	add	x29, sp, #0x10
  2372c8:	str	x23, [sp, #32]
  2372cc:	stp	x22, x21, [sp, #48]
  2372d0:	stp	x20, x19, [sp, #64]
  2372d4:	str	xzr, [x29, #24]
  2372d8:	cbz	x0, 237390 <session_object_find+0xd4>
  2372dc:	cbz	x1, 2373b0 <session_object_find+0xf4>
  2372e0:	cbz	x2, 2373d4 <session_object_find+0x118>
  2372e4:	mov	x19, x4
  2372e8:	cbz	x4, 2373f8 <session_object_find+0x13c>
  2372ec:	mov	x21, x3
  2372f0:	cbz	x3, 23741c <session_object_find+0x160>
  2372f4:	mov	x22, x0
  2372f8:	mov	x0, x1
  2372fc:	mov	x20, x5
  237300:	bl	237458 <startswith>
  237304:	cbz	x0, 237348 <session_object_find+0x8c>
  237308:	bl	237490 <bus_label_unescape>
  23730c:	str	x0, [x29, #24]
  237310:	cbz	x0, 237350 <session_object_find+0x94>
  237314:	mov	x23, x0
  237318:	mov	x0, x22
  23731c:	bl	241550 <sd_bus_get_current_message@plt>
  237320:	mov	x1, x0
  237324:	add	x4, sp, #0x8
  237328:	mov	x0, x21
  23732c:	mov	x2, x23
  237330:	mov	x3, x20
  237334:	bl	229238 <manager_get_session_from_creds>
  237338:	cmn	w0, #0x6
  23733c:	b.ne	237358 <session_object_find+0x9c>  // b.any
  237340:	mov	x0, x20
  237344:	bl	240c80 <sd_bus_error_free@plt>
  237348:	mov	w21, wzr
  23734c:	b	23736c <session_object_find+0xb0>
  237350:	mov	w21, #0xfffffff4            	// #-12
  237354:	b	23736c <session_object_find+0xb0>
  237358:	mov	w21, w0
  23735c:	tbnz	w0, #31, 23736c <session_object_find+0xb0>
  237360:	ldr	x8, [sp, #8]
  237364:	mov	w21, #0x1                   	// #1
  237368:	str	x8, [x19]
  23736c:	add	x0, x29, #0x18
  237370:	bl	237440 <freep>
  237374:	mov	w0, w21
  237378:	ldp	x20, x19, [sp, #64]
  23737c:	ldp	x22, x21, [sp, #48]
  237380:	ldr	x23, [sp, #32]
  237384:	ldp	x29, x30, [sp, #16]
  237388:	add	sp, sp, #0x50
  23738c:	ret
  237390:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  237394:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  237398:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23739c:	add	x1, x1, #0x887
  2373a0:	add	x2, x2, #0x218
  2373a4:	add	x4, x4, #0x640
  2373a8:	mov	w3, #0x255                 	// #597
  2373ac:	bl	240790 <log_assert_failed_realm@plt>
  2373b0:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  2373b4:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2373b8:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2373bc:	add	x1, x1, #0x92
  2373c0:	add	x2, x2, #0x218
  2373c4:	add	x4, x4, #0x640
  2373c8:	mov	w3, #0x256                 	// #598
  2373cc:	mov	w0, wzr
  2373d0:	bl	240790 <log_assert_failed_realm@plt>
  2373d4:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2373d8:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2373dc:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2373e0:	add	x1, x1, #0xa77
  2373e4:	add	x2, x2, #0x218
  2373e8:	add	x4, x4, #0x640
  2373ec:	mov	w3, #0x257                 	// #599
  2373f0:	mov	w0, wzr
  2373f4:	bl	240790 <log_assert_failed_realm@plt>
  2373f8:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2373fc:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  237400:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  237404:	add	x1, x1, #0xd40
  237408:	add	x2, x2, #0x218
  23740c:	add	x4, x4, #0x640
  237410:	mov	w3, #0x258                 	// #600
  237414:	mov	w0, wzr
  237418:	bl	240790 <log_assert_failed_realm@plt>
  23741c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  237420:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  237424:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  237428:	add	x1, x1, #0x102
  23742c:	add	x2, x2, #0x218
  237430:	add	x4, x4, #0x640
  237434:	mov	w3, #0x259                 	// #601
  237438:	mov	w0, wzr
  23743c:	bl	240790 <log_assert_failed_realm@plt>

0000000000237440 <freep>:
  237440:	stp	x29, x30, [sp, #-16]!
  237444:	ldr	x0, [x0]
  237448:	mov	x29, sp
  23744c:	bl	240890 <free@plt>
  237450:	ldp	x29, x30, [sp], #16
  237454:	ret

0000000000237458 <startswith>:
  237458:	stp	x29, x30, [sp, #-32]!
  23745c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  237460:	add	x1, x1, #0xdfd
  237464:	mov	w2, #0x20                  	// #32
  237468:	str	x19, [sp, #16]
  23746c:	mov	x29, sp
  237470:	mov	x19, x0
  237474:	bl	240b90 <strncmp@plt>
  237478:	add	x8, x19, #0x20
  23747c:	ldr	x19, [sp, #16]
  237480:	cmp	w0, #0x0
  237484:	csel	x0, x8, xzr, eq  // eq = none
  237488:	ldp	x29, x30, [sp], #32
  23748c:	ret

0000000000237490 <bus_label_unescape>:
  237490:	stp	x29, x30, [sp, #-32]!
  237494:	str	x19, [sp, #16]
  237498:	mov	x29, sp
  23749c:	mov	x19, x0
  2374a0:	bl	237db4 <strlen_ptr>
  2374a4:	mov	x1, x0
  2374a8:	mov	x0, x19
  2374ac:	bl	241560 <bus_label_unescape_n@plt>
  2374b0:	ldr	x19, [sp, #16]
  2374b4:	ldp	x29, x30, [sp], #32
  2374b8:	ret

00000000002374bc <session_bus_path>:
  2374bc:	stp	x29, x30, [sp, #-32]!
  2374c0:	mov	x29, sp
  2374c4:	str	x19, [sp, #16]
  2374c8:	str	xzr, [x29, #24]
  2374cc:	cbz	x0, 237518 <session_bus_path+0x5c>
  2374d0:	ldr	x0, [x0, #8]
  2374d4:	bl	241570 <bus_label_escape@plt>
  2374d8:	str	x0, [x29, #24]
  2374dc:	cbz	x0, 2374fc <session_bus_path+0x40>
  2374e0:	mov	x1, x0
  2374e4:	adrp	x0, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2374e8:	add	x0, x0, #0xdfd
  2374ec:	mov	x2, xzr
  2374f0:	bl	241520 <strjoin_real@plt>
  2374f4:	mov	x19, x0
  2374f8:	b	237500 <session_bus_path+0x44>
  2374fc:	mov	x19, xzr
  237500:	add	x0, x29, #0x18
  237504:	bl	237440 <freep>
  237508:	mov	x0, x19
  23750c:	ldr	x19, [sp, #16]
  237510:	ldp	x29, x30, [sp], #32
  237514:	ret
  237518:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23751c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  237520:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  237524:	add	x1, x1, #0x6de
  237528:	add	x2, x2, #0x218
  23752c:	add	x4, x4, #0x11d
  237530:	mov	w3, #0x274                 	// #628
  237534:	bl	240790 <log_assert_failed_realm@plt>

0000000000237538 <session_node_enumerator>:
  237538:	sub	sp, sp, #0x70
  23753c:	stp	x29, x30, [sp, #64]
  237540:	add	x29, sp, #0x40
  237544:	stp	x22, x21, [sp, #80]
  237548:	stp	x20, x19, [sp, #96]
  23754c:	stur	xzr, [x29, #-8]
  237550:	cbz	x0, 2376e8 <session_node_enumerator+0x1b0>
  237554:	cbz	x1, 237708 <session_node_enumerator+0x1d0>
  237558:	mov	x19, x3
  23755c:	cbz	x3, 23772c <session_node_enumerator+0x1f4>
  237560:	mov	x21, x2
  237564:	mov	x22, x0
  237568:	mov	w8, #0xfffffffe            	// #-2
  23756c:	str	w8, [sp, #32]
  237570:	str	xzr, [sp, #40]
  237574:	b	237584 <session_node_enumerator+0x4c>
  237578:	mov	w20, #0xfffffff4            	// #-12
  23757c:	mov	w8, wzr
  237580:	tbz	wzr, #0, 2376ac <session_node_enumerator+0x174>
  237584:	ldr	x0, [x21, #32]
  237588:	add	x1, sp, #0x20
  23758c:	sub	x2, x29, #0x10
  237590:	bl	23776c <hashmap_iterate>
  237594:	tbz	w0, #0, 2375c8 <session_node_enumerator+0x90>
  237598:	ldur	x0, [x29, #-16]
  23759c:	bl	2374bc <session_bus_path>
  2375a0:	cbz	x0, 237578 <session_node_enumerator+0x40>
  2375a4:	mov	x1, x0
  2375a8:	sub	x0, x29, #0x8
  2375ac:	bl	241580 <strv_consume@plt>
  2375b0:	mvn	w8, w0
  2375b4:	cmp	w0, #0x0
  2375b8:	lsr	w8, w8, #31
  2375bc:	csel	w20, w0, w20, lt  // lt = tstop
  2375c0:	tbnz	w8, #0, 237584 <session_node_enumerator+0x4c>
  2375c4:	b	2376ac <session_node_enumerator+0x174>
  2375c8:	mov	x0, x22
  2375cc:	bl	241550 <sd_bus_get_current_message@plt>
  2375d0:	cbz	x0, 23769c <session_node_enumerator+0x164>
  2375d4:	mov	x1, #0x600000              	// #6291456
  2375d8:	add	x2, sp, #0x18
  2375dc:	movk	x1, #0x8000, lsl #48
  2375e0:	str	xzr, [sp, #24]
  2375e4:	bl	240f60 <sd_bus_query_sender_creds@plt>
  2375e8:	tbnz	w0, #31, 23768c <session_node_enumerator+0x154>
  2375ec:	ldr	x0, [sp, #24]
  2375f0:	add	x1, sp, #0x10
  2375f4:	bl	240f70 <sd_bus_creds_get_session@plt>
  2375f8:	tbnz	w0, #31, 237634 <session_node_enumerator+0xfc>
  2375fc:	ldr	x0, [x21, #32]
  237600:	ldr	x1, [sp, #16]
  237604:	bl	2377a4 <hashmap_get>
  237608:	stur	x0, [x29, #-16]
  23760c:	cbz	x0, 237634 <session_node_enumerator+0xfc>
  237610:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  237614:	add	x1, x1, #0x3a
  237618:	sub	x0, x29, #0x8
  23761c:	bl	241590 <strv_extend@plt>
  237620:	mov	w22, #0x1                   	// #1
  237624:	tbz	w0, #31, 237638 <session_node_enumerator+0x100>
  237628:	mov	w20, w0
  23762c:	cbnz	w22, 237690 <session_node_enumerator+0x158>
  237630:	b	23768c <session_node_enumerator+0x154>
  237634:	mov	w22, wzr
  237638:	tbnz	w22, #0, 23766c <session_node_enumerator+0x134>
  23763c:	ldr	x0, [sp, #24]
  237640:	add	x1, sp, #0xc
  237644:	bl	240f80 <sd_bus_creds_get_owner_uid@plt>
  237648:	tbnz	w0, #31, 23766c <session_node_enumerator+0x134>
  23764c:	ldr	w8, [sp, #12]
  237650:	ldr	x0, [x21, #48]
  237654:	add	x1, x8, #0x1
  237658:	bl	2377a4 <hashmap_get>
  23765c:	cbz	x0, 2376dc <session_node_enumerator+0x1a4>
  237660:	ldr	x8, [x0, #80]
  237664:	cmp	x8, #0x0
  237668:	cset	w22, ne  // ne = any
  23766c:	cbz	w22, 237684 <session_node_enumerator+0x14c>
  237670:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  237674:	add	x1, x1, #0x13f
  237678:	sub	x0, x29, #0x8
  23767c:	bl	241590 <strv_extend@plt>
  237680:	tbnz	w0, #31, 2376cc <session_node_enumerator+0x194>
  237684:	mov	w22, wzr
  237688:	cbnz	w22, 237690 <session_node_enumerator+0x158>
  23768c:	mov	w22, wzr
  237690:	add	x0, sp, #0x18
  237694:	bl	237788 <sd_bus_creds_unrefp>
  237698:	cbnz	w22, 2376ac <session_node_enumerator+0x174>
  23769c:	ldur	x8, [x29, #-8]
  2376a0:	mov	w20, #0x1                   	// #1
  2376a4:	stur	xzr, [x29, #-8]
  2376a8:	str	x8, [x19]
  2376ac:	sub	x0, x29, #0x8
  2376b0:	bl	237750 <strv_freep>
  2376b4:	mov	w0, w20
  2376b8:	ldp	x20, x19, [sp, #96]
  2376bc:	ldp	x22, x21, [sp, #80]
  2376c0:	ldp	x29, x30, [sp, #64]
  2376c4:	add	sp, sp, #0x70
  2376c8:	ret
  2376cc:	mov	w22, #0x1                   	// #1
  2376d0:	mov	w20, w0
  2376d4:	cbnz	w22, 237690 <session_node_enumerator+0x158>
  2376d8:	b	23768c <session_node_enumerator+0x154>
  2376dc:	mov	w22, wzr
  2376e0:	cbnz	w22, 237670 <session_node_enumerator+0x138>
  2376e4:	b	237684 <session_node_enumerator+0x14c>
  2376e8:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2376ec:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2376f0:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2376f4:	add	x1, x1, #0x887
  2376f8:	add	x2, x2, #0x218
  2376fc:	add	x4, x4, #0xc98
  237700:	mov	w3, #0x285                 	// #645
  237704:	bl	240790 <log_assert_failed_realm@plt>
  237708:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  23770c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  237710:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  237714:	add	x1, x1, #0x92
  237718:	add	x2, x2, #0x218
  23771c:	add	x4, x4, #0xc98
  237720:	mov	w3, #0x286                 	// #646
  237724:	mov	w0, wzr
  237728:	bl	240790 <log_assert_failed_realm@plt>
  23772c:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  237730:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  237734:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  237738:	add	x1, x1, #0x294
  23773c:	add	x2, x2, #0x218
  237740:	add	x4, x4, #0xc98
  237744:	mov	w3, #0x287                 	// #647
  237748:	mov	w0, wzr
  23774c:	bl	240790 <log_assert_failed_realm@plt>

0000000000237750 <strv_freep>:
  237750:	stp	x29, x30, [sp, #-16]!
  237754:	ldr	x0, [x0]
  237758:	mov	x29, sp
  23775c:	cbz	x0, 237764 <strv_freep+0x14>
  237760:	bl	240880 <strv_free@plt>
  237764:	ldp	x29, x30, [sp], #16
  237768:	ret

000000000023776c <hashmap_iterate>:
  23776c:	stp	x29, x30, [sp, #-16]!
  237770:	mov	x3, xzr
  237774:	mov	x29, sp
  237778:	bl	240b00 <internal_hashmap_iterate@plt>
  23777c:	and	w0, w0, #0x1
  237780:	ldp	x29, x30, [sp], #16
  237784:	ret

0000000000237788 <sd_bus_creds_unrefp>:
  237788:	stp	x29, x30, [sp, #-16]!
  23778c:	ldr	x0, [x0]
  237790:	mov	x29, sp
  237794:	cbz	x0, 23779c <sd_bus_creds_unrefp+0x14>
  237798:	bl	241350 <sd_bus_creds_unref@plt>
  23779c:	ldp	x29, x30, [sp], #16
  2377a0:	ret

00000000002377a4 <hashmap_get>:
  2377a4:	stp	x29, x30, [sp, #-16]!
  2377a8:	mov	x29, sp
  2377ac:	bl	240bc0 <internal_hashmap_get@plt>
  2377b0:	ldp	x29, x30, [sp], #16
  2377b4:	ret

00000000002377b8 <session_send_signal>:
  2377b8:	sub	sp, sp, #0x30
  2377bc:	stp	x29, x30, [sp, #16]
  2377c0:	stp	x20, x19, [sp, #32]
  2377c4:	add	x29, sp, #0x10
  2377c8:	str	xzr, [sp, #8]
  2377cc:	cbz	x0, 23784c <session_send_signal+0x94>
  2377d0:	mov	w19, w1
  2377d4:	mov	x20, x0
  2377d8:	bl	2374bc <session_bus_path>
  2377dc:	str	x0, [sp, #8]
  2377e0:	cbz	x0, 23782c <session_send_signal+0x74>
  2377e4:	ldp	x8, x5, [x20]
  2377e8:	mov	x6, x0
  2377ec:	adrp	x9, 210000 <inhibit_what_to_string.buffer+0x210000>
  2377f0:	add	x9, x9, #0x606
  2377f4:	ldr	x0, [x8, #8]
  2377f8:	adrp	x8, 211000 <inhibit_what_to_string.buffer+0x211000>
  2377fc:	add	x8, x8, #0x83
  237800:	tst	w19, #0x1
  237804:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  237808:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  23780c:	adrp	x4, 206000 <inhibit_what_to_string.buffer+0x206000>
  237810:	csel	x3, x9, x8, ne  // ne = any
  237814:	add	x1, x1, #0xad4
  237818:	add	x2, x2, #0xe5d
  23781c:	add	x4, x4, #0xeed
  237820:	bl	240fd0 <sd_bus_emit_signal@plt>
  237824:	mov	w19, w0
  237828:	b	237830 <session_send_signal+0x78>
  23782c:	mov	w19, #0xfffffff4            	// #-12
  237830:	add	x0, sp, #0x8
  237834:	bl	237440 <freep>
  237838:	mov	w0, w19
  23783c:	ldp	x20, x19, [sp, #32]
  237840:	ldp	x29, x30, [sp, #16]
  237844:	add	sp, sp, #0x30
  237848:	ret
  23784c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  237850:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  237854:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  237858:	add	x1, x1, #0x6de
  23785c:	add	x2, x2, #0x218
  237860:	add	x4, x4, #0xc9d
  237864:	mov	w3, #0x2c5                 	// #709
  237868:	bl	240790 <log_assert_failed_realm@plt>

000000000023786c <session_send_changed>:
  23786c:	stp	x29, x30, [sp, #-48]!
  237870:	stp	x28, x21, [sp, #16]
  237874:	stp	x20, x19, [sp, #32]
  237878:	mov	x29, sp
  23787c:	sub	sp, sp, #0xe0
  237880:	stp	x2, x3, [x29, #-96]
  237884:	stp	x4, x5, [x29, #-80]
  237888:	stp	x6, x7, [x29, #-64]
  23788c:	stp	q1, q2, [x29, #-208]
  237890:	stp	q3, q4, [x29, #-176]
  237894:	stur	q0, [x29, #-224]
  237898:	stp	q5, q6, [x29, #-144]
  23789c:	stur	q7, [x29, #-112]
  2378a0:	stp	xzr, x1, [x29, #-16]
  2378a4:	cbz	x0, 237a1c <session_send_changed+0x1b0>
  2378a8:	ldrb	w8, [x0, #209]
  2378ac:	mov	x19, x0
  2378b0:	tbnz	w8, #1, 2378bc <session_send_changed+0x50>
  2378b4:	mov	w19, wzr
  2378b8:	b	2379fc <session_send_changed+0x190>
  2378bc:	mov	x0, x19
  2378c0:	bl	2374bc <session_bus_path>
  2378c4:	stur	x0, [x29, #-16]
  2378c8:	cbz	x0, 2379d4 <session_send_changed+0x168>
  2378cc:	ldur	x8, [x29, #-8]
  2378d0:	mov	x20, x0
  2378d4:	cbz	x8, 2379dc <session_send_changed+0x170>
  2378d8:	mov	x9, #0xffffffffffffffd0    	// #-48
  2378dc:	sub	x8, x29, #0xe0
  2378e0:	sub	x11, x29, #0x60
  2378e4:	movk	x9, #0xff80, lsl #32
  2378e8:	add	x10, x29, #0x30
  2378ec:	mov	w21, #0x8                   	// #8
  2378f0:	add	x12, x8, #0x80
  2378f4:	add	x8, x11, #0x30
  2378f8:	mov	w0, #0x1                   	// #1
  2378fc:	stp	x12, x9, [x29, #-32]
  237900:	stp	x10, x8, [x29, #-48]
  237904:	b	237924 <session_send_changed+0xb8>
  237908:	ldur	x9, [x29, #-48]
  23790c:	add	x10, x9, #0x8
  237910:	stur	x10, [x29, #-48]
  237914:	ldr	x9, [x9]
  237918:	add	x21, x21, #0x8
  23791c:	add	x0, x0, #0x1
  237920:	cbz	x9, 237944 <session_send_changed+0xd8>
  237924:	ldursw	x9, [x29, #-24]
  237928:	tbz	w9, #31, 237908 <session_send_changed+0x9c>
  23792c:	add	w10, w9, #0x8
  237930:	cmp	w10, #0x0
  237934:	stur	w10, [x29, #-24]
  237938:	b.gt	237908 <session_send_changed+0x9c>
  23793c:	add	x9, x8, x9
  237940:	b	237914 <session_send_changed+0xa8>
  237944:	bl	237a6c <size_multiply_overflow>
  237948:	tbnz	w0, #0, 237a3c <session_send_changed+0x1d0>
  23794c:	cmp	x21, #0x400, lsl #12
  237950:	b.hi	237a48 <session_send_changed+0x1dc>  // b.pmore
  237954:	add	x9, x21, #0xf
  237958:	mov	x8, sp
  23795c:	and	x9, x9, #0xfffffffffffffff0
  237960:	sub	x3, x8, x9
  237964:	mov	sp, x3
  237968:	ldur	x10, [x29, #-8]
  23796c:	mov	x8, x3
  237970:	mov	x11, #0xffffffffffffffd0    	// #-48
  237974:	sub	x9, x29, #0xe0
  237978:	sub	x12, x29, #0x60
  23797c:	movk	x11, #0xff80, lsl #32
  237980:	add	x13, x29, #0x30
  237984:	add	x14, x9, #0x80
  237988:	add	x9, x12, #0x30
  23798c:	str	x10, [x8], #8
  237990:	stp	x14, x11, [x29, #-32]
  237994:	stp	x13, x9, [x29, #-48]
  237998:	b	2379b4 <session_send_changed+0x148>
  23799c:	ldur	x10, [x29, #-48]
  2379a0:	add	x11, x10, #0x8
  2379a4:	stur	x11, [x29, #-48]
  2379a8:	ldr	x10, [x10]
  2379ac:	str	x10, [x8], #8
  2379b0:	cbz	x10, 2379e0 <session_send_changed+0x174>
  2379b4:	ldursw	x10, [x29, #-24]
  2379b8:	tbz	w10, #31, 23799c <session_send_changed+0x130>
  2379bc:	add	w11, w10, #0x8
  2379c0:	cmp	w11, #0x0
  2379c4:	stur	w11, [x29, #-24]
  2379c8:	b.gt	23799c <session_send_changed+0x130>
  2379cc:	add	x10, x9, x10
  2379d0:	b	2379a8 <session_send_changed+0x13c>
  2379d4:	mov	w19, #0xfffffff4            	// #-12
  2379d8:	b	2379fc <session_send_changed+0x190>
  2379dc:	sub	x3, x29, #0x8
  2379e0:	ldr	x8, [x19]
  2379e4:	adrp	x2, 209000 <inhibit_what_to_string.buffer+0x209000>
  2379e8:	add	x2, x2, #0x5aa
  2379ec:	mov	x1, x20
  2379f0:	ldr	x0, [x8, #8]
  2379f4:	bl	2412b0 <sd_bus_emit_properties_changed_strv@plt>
  2379f8:	mov	w19, w0
  2379fc:	sub	x0, x29, #0x10
  237a00:	bl	237440 <freep>
  237a04:	mov	w0, w19
  237a08:	mov	sp, x29
  237a0c:	ldp	x20, x19, [sp, #32]
  237a10:	ldp	x28, x21, [sp, #16]
  237a14:	ldp	x29, x30, [sp], #48
  237a18:	ret
  237a1c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  237a20:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  237a24:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  237a28:	add	x1, x1, #0x6de
  237a2c:	add	x2, x2, #0x218
  237a30:	add	x4, x4, #0x164
  237a34:	mov	w3, #0x2d7                 	// #727
  237a38:	bl	240790 <log_assert_failed_realm@plt>
  237a3c:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  237a40:	add	x1, x1, #0x45e
  237a44:	b	237a50 <session_send_changed+0x1e4>
  237a48:	adrp	x1, 212000 <inhibit_what_to_string.buffer+0x212000>
  237a4c:	add	x1, x1, #0x6f
  237a50:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  237a54:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  237a58:	add	x2, x2, #0x218
  237a5c:	add	x4, x4, #0x164
  237a60:	mov	w3, #0x2e0                 	// #736
  237a64:	mov	w0, wzr
  237a68:	bl	240790 <log_assert_failed_realm@plt>

0000000000237a6c <size_multiply_overflow>:
  237a6c:	cmp	xzr, x0, lsr #61
  237a70:	cset	w0, ne  // ne = any
  237a74:	ret

0000000000237a78 <session_send_lock_all>:
  237a78:	sub	sp, sp, #0x40
  237a7c:	stp	x29, x30, [sp, #16]
  237a80:	str	x21, [sp, #32]
  237a84:	stp	x20, x19, [sp, #48]
  237a88:	add	x29, sp, #0x10
  237a8c:	cbz	x0, 237b04 <session_send_lock_all+0x8c>
  237a90:	mov	w8, #0xfffffffe            	// #-2
  237a94:	str	w8, [sp]
  237a98:	str	xzr, [sp, #8]
  237a9c:	mov	x19, x0
  237aa0:	ldr	x0, [x0, #32]
  237aa4:	mov	w21, w1
  237aa8:	mov	x1, sp
  237aac:	add	x2, x29, #0x18
  237ab0:	bl	23776c <hashmap_iterate>
  237ab4:	mov	w20, wzr
  237ab8:	tbz	w0, #0, 237aec <session_send_lock_all+0x74>
  237abc:	and	w21, w21, #0x1
  237ac0:	ldr	x0, [x29, #24]
  237ac4:	mov	w1, w21
  237ac8:	bl	235ea0 <session_send_lock>
  237acc:	ldr	x8, [x19, #32]
  237ad0:	cmp	w0, #0x0
  237ad4:	csel	w20, w0, w20, lt  // lt = tstop
  237ad8:	mov	x1, sp
  237adc:	add	x2, x29, #0x18
  237ae0:	mov	x0, x8
  237ae4:	bl	23776c <hashmap_iterate>
  237ae8:	tbnz	w0, #0, 237ac0 <session_send_lock_all+0x48>
  237aec:	mov	w0, w20
  237af0:	ldp	x20, x19, [sp, #48]
  237af4:	ldr	x21, [sp, #32]
  237af8:	ldp	x29, x30, [sp, #16]
  237afc:	add	sp, sp, #0x40
  237b00:	ret
  237b04:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  237b08:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  237b0c:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  237b10:	add	x1, x1, #0x102
  237b14:	add	x2, x2, #0x218
  237b18:	add	x4, x4, #0x251
  237b1c:	mov	w3, #0x2fb                 	// #763
  237b20:	bl	240790 <log_assert_failed_realm@plt>

0000000000237b24 <session_send_create_reply>:
  237b24:	sub	sp, sp, #0x70
  237b28:	stp	x29, x30, [sp, #64]
  237b2c:	add	x29, sp, #0x40
  237b30:	mov	w8, #0xffffffff            	// #-1
  237b34:	stp	x22, x21, [sp, #80]
  237b38:	stp	x20, x19, [sp, #96]
  237b3c:	stur	xzr, [x29, #-8]
  237b40:	stur	w8, [x29, #-12]
  237b44:	stur	xzr, [x29, #-24]
  237b48:	cbz	x0, 237cd0 <session_send_create_reply+0x1ac>
  237b4c:	ldr	x8, [x0, #216]
  237b50:	mov	x20, x0
  237b54:	cbz	x8, 237b98 <session_send_create_reply+0x74>
  237b58:	mov	x0, x1
  237b5c:	mov	x19, x1
  237b60:	bl	241650 <sd_bus_error_is_set@plt>
  237b64:	cbnz	w0, 237b74 <session_send_create_reply+0x50>
  237b68:	mov	x0, x20
  237b6c:	bl	237d24 <session_ready>
  237b70:	tbz	w0, #0, 237b98 <session_send_create_reply+0x74>
  237b74:	ldr	x21, [x20, #216]
  237b78:	str	xzr, [x20, #216]
  237b7c:	stur	x21, [x29, #-8]
  237b80:	cbz	x19, 237bcc <session_send_create_reply+0xa8>
  237b84:	mov	x0, x21
  237b88:	mov	x1, x19
  237b8c:	bl	241660 <sd_bus_reply_method_error@plt>
  237b90:	mov	w19, w0
  237b94:	b	237b9c <session_send_create_reply+0x78>
  237b98:	mov	w19, wzr
  237b9c:	sub	x0, x29, #0x18
  237ba0:	bl	237440 <freep>
  237ba4:	sub	x0, x29, #0xc
  237ba8:	bl	237d0c <closep>
  237bac:	sub	x0, x29, #0x8
  237bb0:	bl	237cf0 <sd_bus_message_unrefp>
  237bb4:	mov	w0, w19
  237bb8:	ldp	x20, x19, [sp, #96]
  237bbc:	ldp	x22, x21, [sp, #80]
  237bc0:	ldp	x29, x30, [sp, #64]
  237bc4:	add	sp, sp, #0x70
  237bc8:	ret
  237bcc:	mov	x0, x20
  237bd0:	bl	23ad94 <session_create_fifo>
  237bd4:	mov	w19, w0
  237bd8:	stur	w0, [x29, #-12]
  237bdc:	tbnz	w0, #31, 237b9c <session_send_create_reply+0x78>
  237be0:	mov	x0, x20
  237be4:	bl	239e28 <session_save>
  237be8:	mov	x0, x20
  237bec:	bl	2374bc <session_bus_path>
  237bf0:	stur	x0, [x29, #-24]
  237bf4:	cbz	x0, 237c2c <session_send_create_reply+0x108>
  237bf8:	mov	x22, x0
  237bfc:	mov	w0, wzr
  237c00:	bl	240750 <log_get_max_level_realm@plt>
  237c04:	cmp	w0, #0x7
  237c08:	b.lt	237c80 <session_send_create_reply+0x15c>  // b.tstop
  237c0c:	ldr	x9, [x20, #40]
  237c10:	ldr	x6, [x20, #8]
  237c14:	ldr	x10, [x20, #136]
  237c18:	ldr	w8, [x9, #8]
  237c1c:	ldr	x9, [x9, #40]
  237c20:	cbz	x10, 237c34 <session_send_create_reply+0x110>
  237c24:	ldr	x10, [x10, #8]
  237c28:	b	237c3c <session_send_create_reply+0x118>
  237c2c:	mov	w19, #0xfffffff4            	// #-12
  237c30:	b	237b9c <session_send_create_reply+0x78>
  237c34:	adrp	x10, 210000 <inhibit_what_to_string.buffer+0x210000>
  237c38:	add	x10, x10, #0xb7e
  237c3c:	ldr	w11, [x20, #144]
  237c40:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  237c44:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  237c48:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  237c4c:	add	x2, x2, #0x218
  237c50:	add	x4, x4, #0x831
  237c54:	add	x5, x5, #0x928
  237c58:	mov	w0, #0x7                   	// #7
  237c5c:	mov	w3, #0x339                 	// #825
  237c60:	mov	w1, wzr
  237c64:	mov	x7, x22
  237c68:	str	w11, [sp, #32]
  237c6c:	str	x10, [sp, #24]
  237c70:	str	w19, [sp, #16]
  237c74:	str	x9, [sp, #8]
  237c78:	str	w8, [sp]
  237c7c:	bl	240770 <log_internal_realm@plt>
  237c80:	ldr	x9, [x20, #40]
  237c84:	ldr	x2, [x20, #8]
  237c88:	ldr	x8, [x20, #136]
  237c8c:	ldr	x4, [x9, #40]
  237c90:	ldr	w6, [x9, #8]
  237c94:	cbz	x8, 237ca0 <session_send_create_reply+0x17c>
  237c98:	ldr	x7, [x8, #8]
  237c9c:	b	237ca8 <session_send_create_reply+0x184>
  237ca0:	adrp	x7, 210000 <inhibit_what_to_string.buffer+0x210000>
  237ca4:	add	x7, x7, #0xb7e
  237ca8:	ldr	w8, [x20, #144]
  237cac:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  237cb0:	add	x1, x1, #0xfa3
  237cb4:	mov	x0, x21
  237cb8:	mov	x3, x22
  237cbc:	mov	w5, w19
  237cc0:	str	wzr, [sp, #8]
  237cc4:	str	w8, [sp]
  237cc8:	bl	2410a0 <sd_bus_reply_method_return@plt>
  237ccc:	b	237b90 <session_send_create_reply+0x6c>
  237cd0:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  237cd4:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  237cd8:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  237cdc:	add	x1, x1, #0x6de
  237ce0:	add	x2, x2, #0x218
  237ce4:	add	x4, x4, #0x27d
  237ce8:	mov	w3, #0x316                 	// #790
  237cec:	bl	240790 <log_assert_failed_realm@plt>

0000000000237cf0 <sd_bus_message_unrefp>:
  237cf0:	stp	x29, x30, [sp, #-16]!
  237cf4:	ldr	x0, [x0]
  237cf8:	mov	x29, sp
  237cfc:	cbz	x0, 237d04 <sd_bus_message_unrefp+0x14>
  237d00:	bl	241300 <sd_bus_message_unref@plt>
  237d04:	ldp	x29, x30, [sp], #16
  237d08:	ret

0000000000237d0c <closep>:
  237d0c:	stp	x29, x30, [sp, #-16]!
  237d10:	ldr	w0, [x0]
  237d14:	mov	x29, sp
  237d18:	bl	240820 <safe_close@plt>
  237d1c:	ldp	x29, x30, [sp], #16
  237d20:	ret

0000000000237d24 <session_ready>:
  237d24:	stp	x29, x30, [sp, #-16]!
  237d28:	mov	x29, sp
  237d2c:	cbz	x0, 237d5c <session_ready+0x38>
  237d30:	ldr	x8, [x0, #128]
  237d34:	cbz	x8, 237d44 <session_ready+0x20>
  237d38:	mov	w0, wzr
  237d3c:	ldp	x29, x30, [sp], #16
  237d40:	ret
  237d44:	ldr	x8, [x0, #40]
  237d48:	ldr	x8, [x8, #72]
  237d4c:	cmp	x8, #0x0
  237d50:	cset	w0, eq  // eq = none
  237d54:	ldp	x29, x30, [sp], #16
  237d58:	ret
  237d5c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  237d60:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  237d64:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  237d68:	add	x1, x1, #0x6de
  237d6c:	add	x2, x2, #0x218
  237d70:	add	x4, x4, #0xe3e
  237d74:	mov	w3, #0x309                 	// #777
  237d78:	bl	240790 <log_assert_failed_realm@plt>

0000000000237d7c <sd_device_unrefp>:
  237d7c:	stp	x29, x30, [sp, #-16]!
  237d80:	ldr	x0, [x0]
  237d84:	mov	x29, sp
  237d88:	cbz	x0, 237d90 <sd_device_unrefp+0x14>
  237d8c:	bl	2413a0 <sd_device_unref@plt>
  237d90:	ldp	x29, x30, [sp], #16
  237d94:	ret

0000000000237d98 <streq_ptr>:
  237d98:	stp	x29, x30, [sp, #-16]!
  237d9c:	mov	x29, sp
  237da0:	bl	240f30 <strcmp_ptr@plt>
  237da4:	cmp	w0, #0x0
  237da8:	cset	w0, eq  // eq = none
  237dac:	ldp	x29, x30, [sp], #16
  237db0:	ret

0000000000237db4 <strlen_ptr>:
  237db4:	cbz	x0, 237dc8 <strlen_ptr+0x14>
  237db8:	stp	x29, x30, [sp, #-16]!
  237dbc:	mov	x29, sp
  237dc0:	bl	240d30 <strlen@plt>
  237dc4:	ldp	x29, x30, [sp], #16
  237dc8:	ret

0000000000237dcc <manager_write_brightness>:
  237dcc:	sub	sp, sp, #0x70
  237dd0:	stp	x29, x30, [sp, #48]
  237dd4:	add	x29, sp, #0x30
  237dd8:	stp	x24, x23, [sp, #64]
  237ddc:	stp	x22, x21, [sp, #80]
  237de0:	stp	x20, x19, [sp, #96]
  237de4:	stur	xzr, [x29, #-8]
  237de8:	cbz	x0, 2380bc <manager_write_brightness+0x2f0>
  237dec:	mov	x22, x1
  237df0:	cbz	x1, 2380dc <manager_write_brightness+0x310>
  237df4:	mov	x20, x0
  237df8:	sub	x1, x29, #0x10
  237dfc:	mov	x0, x22
  237e00:	mov	x19, x3
  237e04:	mov	w21, w2
  237e08:	bl	240dd0 <sd_device_get_syspath@plt>
  237e0c:	tbnz	w0, #31, 237e4c <manager_write_brightness+0x80>
  237e10:	mov	x23, x20
  237e14:	ldr	x0, [x23, #72]!
  237e18:	ldur	x1, [x29, #-16]
  237e1c:	bl	23811c <hashmap_get>
  237e20:	cbz	x0, 237eb0 <manager_write_brightness+0xe4>
  237e24:	mov	x24, x0
  237e28:	add	x0, x0, #0x30
  237e2c:	mov	x1, x19
  237e30:	bl	238130 <set_add_message>
  237e34:	tbnz	w0, #31, 237f5c <manager_write_brightness+0x190>
  237e38:	mov	w8, #0x1                   	// #1
  237e3c:	mov	w19, wzr
  237e40:	str	w21, [x24, #28]
  237e44:	strb	w8, [x24, #32]
  237e48:	b	238074 <manager_write_brightness+0x2a8>
  237e4c:	mov	w23, w0
  237e50:	mov	w0, wzr
  237e54:	str	xzr, [sp, #24]
  237e58:	bl	240750 <log_get_max_level_realm@plt>
  237e5c:	cmp	w0, #0x3
  237e60:	b.ge	2380ac <manager_write_brightness+0x2e0>  // b.tcont
  237e64:	ldr	x6, [sp, #24]
  237e68:	adrp	x8, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  237e6c:	add	x8, x8, #0xbb5
  237e70:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  237e74:	cmp	x6, #0x0
  237e78:	csel	x5, xzr, x8, eq  // eq = none
  237e7c:	adrp	x8, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  237e80:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  237e84:	add	x8, x8, #0xa90
  237e88:	add	x2, x2, #0x2fd
  237e8c:	add	x4, x4, #0x94a
  237e90:	mov	w0, #0x3                   	// #3
  237e94:	mov	w3, #0xcd                  	// #205
  237e98:	mov	w1, w23
  237e9c:	mov	x7, xzr
  237ea0:	stp	xzr, x8, [sp]
  237ea4:	bl	240e00 <log_object_internal@plt>
  237ea8:	mov	w19, w0
  237eac:	b	238074 <manager_write_brightness+0x2a8>
  237eb0:	adrp	x1, 254000 <session_vtable+0x3d0>
  237eb4:	add	x1, x1, #0x5e8
  237eb8:	mov	x0, x23
  237ebc:	bl	241670 <internal_hashmap_ensure_allocated@plt>
  237ec0:	tbnz	w0, #31, 237fa0 <manager_write_brightness+0x1d4>
  237ec4:	bl	2381c0 <malloc_multiply>
  237ec8:	stur	x0, [x29, #-8]
  237ecc:	cbz	x0, 237fb8 <manager_write_brightness+0x1ec>
  237ed0:	mov	x24, x0
  237ed4:	mov	x0, x22
  237ed8:	bl	241680 <sd_device_ref@plt>
  237edc:	ldur	x8, [x29, #-16]
  237ee0:	mov	x22, x0
  237ee4:	mov	x0, x8
  237ee8:	bl	240c40 <strdup@plt>
  237eec:	ldr	w8, [sp, #16]
  237ef0:	ldur	w9, [sp, #19]
  237ef4:	stp	wzr, w21, [x24, #24]
  237ef8:	ldur	x21, [x29, #-8]
  237efc:	stp	xzr, x22, [x24]
  237f00:	str	x0, [x24, #16]
  237f04:	strb	wzr, [x24, #32]
  237f08:	stp	xzr, xzr, [x24, #48]
  237f0c:	stur	w8, [x24, #33]
  237f10:	str	w9, [x24, #36]
  237f14:	str	xzr, [x24, #40]
  237f18:	ldr	x1, [x21, #16]
  237f1c:	cbz	x1, 237fd0 <manager_write_brightness+0x204>
  237f20:	ldr	x0, [x23]
  237f24:	mov	x2, x21
  237f28:	bl	240d00 <hashmap_put@plt>
  237f2c:	tbnz	w0, #31, 237ff4 <manager_write_brightness+0x228>
  237f30:	mov	x0, x21
  237f34:	str	x20, [x0], #40
  237f38:	mov	x1, x19
  237f3c:	bl	238130 <set_add_message>
  237f40:	tbnz	w0, #31, 238030 <manager_write_brightness+0x264>
  237f44:	mov	x0, x21
  237f48:	bl	2381d8 <brightness_writer_fork>
  237f4c:	tbnz	w0, #31, 2380a4 <manager_write_brightness+0x2d8>
  237f50:	mov	w19, wzr
  237f54:	stur	xzr, [x29, #-8]
  237f58:	b	238074 <manager_write_brightness+0x2a8>
  237f5c:	mov	w19, w0
  237f60:	mov	w0, wzr
  237f64:	bl	240750 <log_get_max_level_realm@plt>
  237f68:	cmp	w0, #0x3
  237f6c:	b.lt	238068 <manager_write_brightness+0x29c>  // b.tstop
  237f70:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  237f74:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  237f78:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  237f7c:	add	x2, x2, #0x2fd
  237f80:	add	x4, x4, #0x94a
  237f84:	add	x5, x5, #0x210
  237f88:	mov	w0, #0x3                   	// #3
  237f8c:	mov	w3, #0xd6                  	// #214
  237f90:	mov	w1, w19
  237f94:	bl	240770 <log_internal_realm@plt>
  237f98:	mov	w19, w0
  237f9c:	b	238074 <manager_write_brightness+0x2a8>
  237fa0:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  237fa4:	adrp	x3, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  237fa8:	add	x1, x1, #0x2fd
  237fac:	add	x3, x3, #0x94a
  237fb0:	mov	w2, #0xe2                  	// #226
  237fb4:	b	237fe4 <manager_write_brightness+0x218>
  237fb8:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  237fbc:	adrp	x3, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  237fc0:	add	x1, x1, #0x2fd
  237fc4:	add	x3, x3, #0x94a
  237fc8:	mov	w2, #0xe6                  	// #230
  237fcc:	b	237fe8 <manager_write_brightness+0x21c>
  237fd0:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  237fd4:	adrp	x3, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  237fd8:	add	x1, x1, #0x2fd
  237fdc:	add	x3, x3, #0x94a
  237fe0:	mov	w2, #0xef                  	// #239
  237fe4:	mov	w0, wzr
  237fe8:	bl	240af0 <log_oom_internal@plt>
  237fec:	mov	w19, w0
  237ff0:	b	238074 <manager_write_brightness+0x2a8>
  237ff4:	mov	w22, w0
  237ff8:	mov	w0, wzr
  237ffc:	bl	240750 <log_get_max_level_realm@plt>
  238000:	cmp	w0, #0x3
  238004:	b.lt	238098 <manager_write_brightness+0x2cc>  // b.tstop
  238008:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  23800c:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  238010:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  238014:	add	x2, x2, #0x2fd
  238018:	add	x4, x4, #0x94a
  23801c:	add	x5, x5, #0xf16
  238020:	mov	w0, #0x3                   	// #3
  238024:	mov	w3, #0xf3                  	// #243
  238028:	mov	w1, w22
  23802c:	b	237f94 <manager_write_brightness+0x1c8>
  238030:	mov	w19, w0
  238034:	mov	w0, wzr
  238038:	bl	240750 <log_get_max_level_realm@plt>
  23803c:	cmp	w0, #0x3
  238040:	b.lt	238068 <manager_write_brightness+0x29c>  // b.tstop
  238044:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  238048:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23804c:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  238050:	add	x2, x2, #0x2fd
  238054:	add	x4, x4, #0x94a
  238058:	add	x5, x5, #0x210
  23805c:	mov	w0, #0x3                   	// #3
  238060:	mov	w3, #0xf8                  	// #248
  238064:	b	237f90 <manager_write_brightness+0x1c4>
  238068:	mov	w8, wzr
  23806c:	neg	w9, w19
  238070:	sub	w19, w8, w9, uxtb
  238074:	sub	x0, x29, #0x8
  238078:	bl	238100 <brightness_writer_freep>
  23807c:	mov	w0, w19
  238080:	ldp	x20, x19, [sp, #96]
  238084:	ldp	x22, x21, [sp, #80]
  238088:	ldp	x24, x23, [sp, #64]
  23808c:	ldp	x29, x30, [sp, #48]
  238090:	add	sp, sp, #0x70
  238094:	ret
  238098:	mov	w8, wzr
  23809c:	neg	w9, w22
  2380a0:	b	238070 <manager_write_brightness+0x2a4>
  2380a4:	mov	w19, w0
  2380a8:	b	238074 <manager_write_brightness+0x2a8>
  2380ac:	add	x1, sp, #0x18
  2380b0:	mov	x0, x22
  2380b4:	bl	240b70 <sd_device_get_sysname@plt>
  2380b8:	b	237e64 <manager_write_brightness+0x98>
  2380bc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2380c0:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2380c4:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  2380c8:	add	x1, x1, #0x102
  2380cc:	add	x2, x2, #0x2fd
  2380d0:	add	x4, x4, #0x9e7
  2380d4:	mov	w3, #0xc8                  	// #200
  2380d8:	bl	240790 <log_assert_failed_realm@plt>
  2380dc:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2380e0:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2380e4:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  2380e8:	add	x1, x1, #0xb2f
  2380ec:	add	x2, x2, #0x2fd
  2380f0:	add	x4, x4, #0x9e7
  2380f4:	mov	w3, #0xc9                  	// #201
  2380f8:	mov	w0, wzr
  2380fc:	bl	240790 <log_assert_failed_realm@plt>

0000000000238100 <brightness_writer_freep>:
  238100:	stp	x29, x30, [sp, #-16]!
  238104:	ldr	x0, [x0]
  238108:	mov	x29, sp
  23810c:	cbz	x0, 238114 <brightness_writer_freep+0x14>
  238110:	bl	238420 <brightness_writer_free>
  238114:	ldp	x29, x30, [sp], #16
  238118:	ret

000000000023811c <hashmap_get>:
  23811c:	stp	x29, x30, [sp, #-16]!
  238120:	mov	x29, sp
  238124:	bl	240bc0 <internal_hashmap_get@plt>
  238128:	ldp	x29, x30, [sp], #16
  23812c:	ret

0000000000238130 <set_add_message>:
  238130:	stp	x29, x30, [sp, #-32]!
  238134:	stp	x20, x19, [sp, #16]
  238138:	mov	x29, sp
  23813c:	cbz	x0, 2381a0 <set_add_message+0x70>
  238140:	mov	x19, x1
  238144:	cbz	x1, 238190 <set_add_message+0x60>
  238148:	mov	x20, x0
  23814c:	mov	x0, x19
  238150:	bl	241690 <sd_bus_message_get_expect_reply@plt>
  238154:	cmp	w0, #0x1
  238158:	b.lt	238194 <set_add_message+0x64>  // b.tstop
  23815c:	adrp	x1, 254000 <session_vtable+0x3d0>
  238160:	ldr	x1, [x1, #3384]
  238164:	mov	x0, x20
  238168:	bl	2416a0 <internal_set_ensure_allocated@plt>
  23816c:	tbnz	w0, #31, 238194 <set_add_message+0x64>
  238170:	ldr	x0, [x20]
  238174:	mov	x1, x19
  238178:	bl	2416b0 <set_put@plt>
  23817c:	tbnz	w0, #31, 238194 <set_add_message+0x64>
  238180:	mov	x0, x19
  238184:	bl	241150 <sd_bus_message_ref@plt>
  238188:	mov	w0, #0x1                   	// #1
  23818c:	b	238194 <set_add_message+0x64>
  238190:	mov	w0, wzr
  238194:	ldp	x20, x19, [sp, #16]
  238198:	ldp	x29, x30, [sp], #32
  23819c:	ret
  2381a0:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2381a4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2381a8:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  2381ac:	add	x1, x1, #0xe1e
  2381b0:	add	x2, x2, #0x2fd
  2381b4:	add	x4, x4, #0xdbb
  2381b8:	mov	w3, #0xa8                  	// #168
  2381bc:	bl	240790 <log_assert_failed_realm@plt>

00000000002381c0 <malloc_multiply>:
  2381c0:	stp	x29, x30, [sp, #-16]!
  2381c4:	mov	w0, #0x40                  	// #64
  2381c8:	mov	x29, sp
  2381cc:	bl	2408c0 <malloc@plt>
  2381d0:	ldp	x29, x30, [sp], #16
  2381d4:	ret

00000000002381d8 <brightness_writer_fork>:
  2381d8:	sub	sp, sp, #0x50
  2381dc:	stp	x29, x30, [sp, #32]
  2381e0:	str	x21, [sp, #48]
  2381e4:	stp	x20, x19, [sp, #64]
  2381e8:	add	x29, sp, #0x20
  2381ec:	cbz	x0, 2382b8 <brightness_writer_fork+0xe0>
  2381f0:	ldr	x8, [x0]
  2381f4:	mov	x19, x0
  2381f8:	cbz	x8, 2382d8 <brightness_writer_fork+0x100>
  2381fc:	mov	x20, x19
  238200:	ldr	w8, [x20, #24]!
  238204:	cbnz	w8, 2382fc <brightness_writer_fork+0x124>
  238208:	mov	x21, x19
  23820c:	ldr	x8, [x21, #56]!
  238210:	cbnz	x8, 238320 <brightness_writer_fork+0x148>
  238214:	mov	x0, x20
  238218:	bl	2384d4 <safe_fork>
  23821c:	tbnz	w0, #31, 2382a4 <brightness_writer_fork+0xcc>
  238220:	cbz	w0, 238344 <brightness_writer_fork+0x16c>
  238224:	ldr	x8, [x19]
  238228:	ldr	w2, [x19, #24]
  23822c:	adrp	x4, 238000 <manager_write_brightness+0x234>
  238230:	add	x4, x4, #0x500
  238234:	ldr	x0, [x8]
  238238:	mov	w3, #0x4                   	// #4
  23823c:	mov	x1, x21
  238240:	mov	x5, x19
  238244:	bl	2416c0 <sd_event_add_child@plt>
  238248:	tbnz	w0, #31, 238254 <brightness_writer_fork+0x7c>
  23824c:	mov	w0, wzr
  238250:	b	2382a4 <brightness_writer_fork+0xcc>
  238254:	mov	w19, w0
  238258:	mov	w0, wzr
  23825c:	bl	240750 <log_get_max_level_realm@plt>
  238260:	cmp	w0, #0x3
  238264:	b.lt	238298 <brightness_writer_fork+0xc0>  // b.tstop
  238268:	ldr	w6, [x20]
  23826c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  238270:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  238274:	adrp	x5, 212000 <inhibit_what_to_string.buffer+0x212000>
  238278:	add	x2, x2, #0x2fd
  23827c:	add	x4, x4, #0x5fe
  238280:	add	x5, x5, #0x2f3
  238284:	mov	w0, #0x3                   	// #3
  238288:	mov	w3, #0xa0                  	// #160
  23828c:	mov	w1, w19
  238290:	bl	240770 <log_internal_realm@plt>
  238294:	b	2382a4 <brightness_writer_fork+0xcc>
  238298:	mov	w8, wzr
  23829c:	neg	w9, w19
  2382a0:	sub	w0, w8, w9, uxtb
  2382a4:	ldp	x20, x19, [sp, #64]
  2382a8:	ldr	x21, [sp, #48]
  2382ac:	ldp	x29, x30, [sp, #32]
  2382b0:	add	sp, sp, #0x50
  2382b4:	ret
  2382b8:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2382bc:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2382c0:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  2382c4:	add	x1, x1, #0xea5
  2382c8:	add	x2, x2, #0x2fd
  2382cc:	add	x4, x4, #0x8e6
  2382d0:	mov	w3, #0x87                  	// #135
  2382d4:	bl	240790 <log_assert_failed_realm@plt>
  2382d8:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  2382dc:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2382e0:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  2382e4:	add	x1, x1, #0x84b
  2382e8:	add	x2, x2, #0x2fd
  2382ec:	add	x4, x4, #0x8e6
  2382f0:	mov	w3, #0x88                  	// #136
  2382f4:	mov	w0, wzr
  2382f8:	bl	240790 <log_assert_failed_realm@plt>
  2382fc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  238300:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  238304:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  238308:	add	x1, x1, #0xb0b
  23830c:	add	x2, x2, #0x2fd
  238310:	add	x4, x4, #0x8e6
  238314:	mov	w3, #0x89                  	// #137
  238318:	mov	w0, wzr
  23831c:	bl	240790 <log_assert_failed_realm@plt>
  238320:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  238324:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  238328:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23832c:	add	x1, x1, #0x4df
  238330:	add	x2, x2, #0x2fd
  238334:	add	x4, x4, #0x8e6
  238338:	mov	w3, #0x8a                  	// #138
  23833c:	mov	w0, wzr
  238340:	bl	240790 <log_assert_failed_realm@plt>
  238344:	ldr	w3, [x19, #28]
  238348:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23834c:	add	x2, x2, #0x43
  238350:	add	x0, sp, #0x10
  238354:	mov	w1, #0xd                   	// #13
  238358:	bl	240e40 <snprintf@plt>
  23835c:	cmp	w0, #0xd
  238360:	b.cc	238388 <brightness_writer_fork+0x1b0>  // b.lo, b.ul, b.last
  238364:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  238368:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  23836c:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  238370:	add	x1, x1, #0x7fd
  238374:	add	x2, x2, #0x2fd
  238378:	add	x4, x4, #0x8e6
  23837c:	mov	w3, #0x93                  	// #147
  238380:	mov	w0, wzr
  238384:	bl	240790 <log_assert_failed_realm@plt>
  238388:	ldr	x0, [x19, #8]
  23838c:	adrp	x1, 212000 <inhibit_what_to_string.buffer+0x212000>
  238390:	add	x1, x1, #0x2e8
  238394:	add	x2, sp, #0x10
  238398:	bl	2416d0 <sd_device_set_sysattr_value@plt>
  23839c:	tbz	w0, #31, 238418 <brightness_writer_fork+0x240>
  2383a0:	str	xzr, [x29, #24]
  2383a4:	ldr	x19, [x19, #8]
  2383a8:	mov	w20, w0
  2383ac:	cbz	x19, 2383cc <brightness_writer_fork+0x1f4>
  2383b0:	mov	w0, wzr
  2383b4:	bl	240750 <log_get_max_level_realm@plt>
  2383b8:	cmp	w0, #0x3
  2383bc:	b.lt	2383cc <brightness_writer_fork+0x1f4>  // b.tstop
  2383c0:	add	x1, x29, #0x18
  2383c4:	mov	x0, x19
  2383c8:	bl	240b70 <sd_device_get_sysname@plt>
  2383cc:	ldr	x6, [x29, #24]
  2383d0:	adrp	x8, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2383d4:	add	x8, x8, #0xbb5
  2383d8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2383dc:	cmp	x6, #0x0
  2383e0:	csel	x5, xzr, x8, eq  // eq = none
  2383e4:	adrp	x8, 210000 <inhibit_what_to_string.buffer+0x210000>
  2383e8:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2383ec:	add	x8, x8, #0x31b
  2383f0:	add	x2, x2, #0x2fd
  2383f4:	add	x4, x4, #0x5fe
  2383f8:	mov	w0, #0x3                   	// #3
  2383fc:	mov	w3, #0x97                  	// #151
  238400:	mov	w1, w20
  238404:	mov	x7, xzr
  238408:	stp	xzr, x8, [sp]
  23840c:	bl	240e00 <log_object_internal@plt>
  238410:	mov	w0, #0x1                   	// #1
  238414:	bl	2416e0 <_exit@plt>
  238418:	mov	w0, wzr
  23841c:	bl	2416e0 <_exit@plt>

0000000000238420 <brightness_writer_free>:
  238420:	cbz	x0, 23848c <brightness_writer_free+0x6c>
  238424:	stp	x29, x30, [sp, #-32]!
  238428:	ldr	x8, [x0]
  23842c:	str	x19, [sp, #16]
  238430:	mov	x19, x0
  238434:	mov	x29, sp
  238438:	cbz	x8, 238450 <brightness_writer_free+0x30>
  23843c:	ldr	x1, [x19, #16]
  238440:	cbz	x1, 238450 <brightness_writer_free+0x30>
  238444:	ldr	x0, [x8, #72]
  238448:	mov	x2, x19
  23844c:	bl	238490 <hashmap_remove_value>
  238450:	ldr	x0, [x19, #8]
  238454:	bl	2413a0 <sd_device_unref@plt>
  238458:	ldr	x0, [x19, #16]
  23845c:	bl	240890 <free@plt>
  238460:	ldr	x0, [x19, #40]
  238464:	bl	2384a4 <set_free>
  238468:	ldr	x0, [x19, #48]
  23846c:	bl	2384a4 <set_free>
  238470:	ldr	x0, [x19, #56]
  238474:	bl	240810 <sd_event_source_unref@plt>
  238478:	str	x0, [x19, #56]
  23847c:	mov	x0, x19
  238480:	bl	240890 <free@plt>
  238484:	ldr	x19, [sp, #16]
  238488:	ldp	x29, x30, [sp], #32
  23848c:	ret

0000000000238490 <hashmap_remove_value>:
  238490:	stp	x29, x30, [sp, #-16]!
  238494:	mov	x29, sp
  238498:	bl	2416f0 <internal_hashmap_remove_value@plt>
  23849c:	ldp	x29, x30, [sp], #16
  2384a0:	ret

00000000002384a4 <set_free>:
  2384a4:	stp	x29, x30, [sp, #-16]!
  2384a8:	mov	x1, xzr
  2384ac:	mov	x2, xzr
  2384b0:	mov	x29, sp
  2384b4:	bl	2408b0 <internal_hashmap_free@plt>
  2384b8:	ldp	x29, x30, [sp], #16
  2384bc:	ret

00000000002384c0 <__unique_prefix_static_free_wrapper4>:
  2384c0:	stp	x29, x30, [sp, #-16]!
  2384c4:	mov	x29, sp
  2384c8:	bl	238420 <brightness_writer_free>
  2384cc:	ldp	x29, x30, [sp], #16
  2384d0:	ret

00000000002384d4 <safe_fork>:
  2384d4:	stp	x29, x30, [sp, #-16]!
  2384d8:	mov	x4, x0
  2384dc:	adrp	x0, 208000 <inhibit_what_to_string.buffer+0x208000>
  2384e0:	add	x0, x0, #0x231
  2384e4:	mov	w3, #0x2e                  	// #46
  2384e8:	mov	x1, xzr
  2384ec:	mov	x2, xzr
  2384f0:	mov	x29, sp
  2384f4:	bl	241700 <safe_fork_full@plt>
  2384f8:	ldp	x29, x30, [sp], #16
  2384fc:	ret

0000000000238500 <on_brightness_writer_exit>:
  238500:	stp	x29, x30, [sp, #-32]!
  238504:	stp	x20, x19, [sp, #16]
  238508:	mov	x29, sp
  23850c:	cbz	x0, 2385b0 <on_brightness_writer_exit+0xb0>
  238510:	mov	x20, x1
  238514:	cbz	x1, 2385d0 <on_brightness_writer_exit+0xd0>
  238518:	mov	x19, x2
  23851c:	cbz	x2, 2385f4 <on_brightness_writer_exit+0xf4>
  238520:	ldr	w8, [x20, #16]
  238524:	ldr	w9, [x19, #24]
  238528:	cmp	w8, w9
  23852c:	b.ne	238618 <on_brightness_writer_exit+0x118>  // b.any
  238530:	ldr	x0, [x19, #56]
  238534:	str	wzr, [x19, #24]
  238538:	bl	240810 <sd_event_source_unref@plt>
  23853c:	str	x0, [x19, #56]
  238540:	ldr	w8, [x20, #8]
  238544:	mov	w1, #0xffffffb9            	// #-71
  238548:	cmp	w8, #0x1
  23854c:	b.ne	23855c <on_brightness_writer_exit+0x5c>  // b.any
  238550:	ldr	w8, [x20, #24]
  238554:	cmp	w8, #0x0
  238558:	csel	w1, wzr, w1, eq  // eq = none
  23855c:	mov	x0, x19
  238560:	bl	23863c <brightness_writer_reply>
  238564:	ldrb	w8, [x19, #32]
  238568:	cbz	w8, 238598 <on_brightness_writer_exit+0x98>
  23856c:	ldr	x0, [x19, #40]
  238570:	strb	wzr, [x19, #32]
  238574:	bl	2384a4 <set_free>
  238578:	ldr	x8, [x19, #48]
  23857c:	mov	x0, x19
  238580:	stp	x8, xzr, [x19, #40]
  238584:	bl	2381d8 <brightness_writer_fork>
  238588:	tbz	w0, #31, 2385a0 <on_brightness_writer_exit+0xa0>
  23858c:	mov	w1, w0
  238590:	mov	x0, x19
  238594:	bl	23863c <brightness_writer_reply>
  238598:	mov	x0, x19
  23859c:	bl	238420 <brightness_writer_free>
  2385a0:	ldp	x20, x19, [sp, #16]
  2385a4:	mov	w0, wzr
  2385a8:	ldp	x29, x30, [sp], #32
  2385ac:	ret
  2385b0:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2385b4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2385b8:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  2385bc:	add	x1, x1, #0x6de
  2385c0:	add	x2, x2, #0x2fd
  2385c4:	add	x4, x4, #0x344
  2385c8:	mov	w3, #0x66                  	// #102
  2385cc:	bl	240790 <log_assert_failed_realm@plt>
  2385d0:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  2385d4:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2385d8:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  2385dc:	add	x1, x1, #0x238
  2385e0:	add	x2, x2, #0x2fd
  2385e4:	add	x4, x4, #0x344
  2385e8:	mov	w3, #0x67                  	// #103
  2385ec:	mov	w0, wzr
  2385f0:	bl	240790 <log_assert_failed_realm@plt>
  2385f4:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2385f8:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  2385fc:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  238600:	add	x1, x1, #0xea5
  238604:	add	x2, x2, #0x2fd
  238608:	add	x4, x4, #0x344
  23860c:	mov	w3, #0x68                  	// #104
  238610:	mov	w0, wzr
  238614:	bl	240790 <log_assert_failed_realm@plt>
  238618:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23861c:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  238620:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  238624:	add	x1, x1, #0x786
  238628:	add	x2, x2, #0x2fd
  23862c:	add	x4, x4, #0x344
  238630:	mov	w3, #0x6a                  	// #106
  238634:	mov	w0, wzr
  238638:	bl	240790 <log_assert_failed_realm@plt>

000000000023863c <brightness_writer_reply>:
  23863c:	stp	x29, x30, [sp, #-80]!
  238640:	str	x25, [sp, #16]
  238644:	stp	x24, x23, [sp, #32]
  238648:	stp	x22, x21, [sp, #48]
  23864c:	stp	x20, x19, [sp, #64]
  238650:	mov	x29, sp
  238654:	cbz	x0, 238730 <brightness_writer_reply+0xf4>
  238658:	str	xzr, [x29, #24]
  23865c:	mov	x20, x0
  238660:	ldr	x0, [x0, #40]
  238664:	mov	w19, w1
  238668:	bl	23876c <set_steal_first>
  23866c:	str	x0, [x29, #24]
  238670:	cbz	x0, 238710 <brightness_writer_reply+0xd4>
  238674:	adrp	x21, 210000 <inhibit_what_to_string.buffer+0x210000>
  238678:	adrp	x22, 208000 <inhibit_what_to_string.buffer+0x208000>
  23867c:	adrp	x23, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  238680:	adrp	x24, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  238684:	add	x21, x21, #0x2fd
  238688:	add	x22, x22, #0x856
  23868c:	add	x23, x23, #0x34d
  238690:	add	x24, x24, #0xf45
  238694:	b	2386b4 <brightness_writer_reply+0x78>
  238698:	add	x0, x29, #0x18
  23869c:	bl	238750 <sd_bus_message_unrefp>
  2386a0:	str	xzr, [x29, #24]
  2386a4:	ldr	x0, [x20, #40]
  2386a8:	bl	23876c <set_steal_first>
  2386ac:	str	x0, [x29, #24]
  2386b0:	cbz	x0, 238710 <brightness_writer_reply+0xd4>
  2386b4:	cbz	w19, 2386d0 <brightness_writer_reply+0x94>
  2386b8:	mov	w1, w19
  2386bc:	mov	x2, x24
  2386c0:	bl	241710 <sd_bus_reply_method_errnof@plt>
  2386c4:	mov	w25, w0
  2386c8:	tbz	w0, #31, 238698 <brightness_writer_reply+0x5c>
  2386cc:	b	2386e0 <brightness_writer_reply+0xa4>
  2386d0:	mov	x1, xzr
  2386d4:	bl	2410a0 <sd_bus_reply_method_return@plt>
  2386d8:	mov	w25, w0
  2386dc:	tbz	w0, #31, 238698 <brightness_writer_reply+0x5c>
  2386e0:	mov	w0, wzr
  2386e4:	bl	240750 <log_get_max_level_realm@plt>
  2386e8:	cmp	w0, #0x4
  2386ec:	b.lt	238698 <brightness_writer_reply+0x5c>  // b.tstop
  2386f0:	mov	w0, #0x4                   	// #4
  2386f4:	mov	w3, #0x5c                  	// #92
  2386f8:	mov	w1, w25
  2386fc:	mov	x2, x21
  238700:	mov	x4, x22
  238704:	mov	x5, x23
  238708:	bl	240770 <log_internal_realm@plt>
  23870c:	b	238698 <brightness_writer_reply+0x5c>
  238710:	add	x0, x29, #0x18
  238714:	bl	238750 <sd_bus_message_unrefp>
  238718:	ldp	x20, x19, [sp, #64]
  23871c:	ldp	x22, x21, [sp, #48]
  238720:	ldp	x24, x23, [sp, #32]
  238724:	ldr	x25, [sp, #16]
  238728:	ldp	x29, x30, [sp], #80
  23872c:	ret
  238730:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  238734:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  238738:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23873c:	add	x1, x1, #0xea5
  238740:	add	x2, x2, #0x2fd
  238744:	add	x4, x4, #0x915
  238748:	mov	w3, #0x4e                  	// #78
  23874c:	bl	240790 <log_assert_failed_realm@plt>

0000000000238750 <sd_bus_message_unrefp>:
  238750:	stp	x29, x30, [sp, #-16]!
  238754:	ldr	x0, [x0]
  238758:	mov	x29, sp
  23875c:	cbz	x0, 238764 <sd_bus_message_unrefp+0x14>
  238760:	bl	241300 <sd_bus_message_unref@plt>
  238764:	ldp	x29, x30, [sp], #16
  238768:	ret

000000000023876c <set_steal_first>:
  23876c:	stp	x29, x30, [sp, #-16]!
  238770:	mov	w1, #0x1                   	// #1
  238774:	mov	x2, xzr
  238778:	mov	x29, sp
  23877c:	bl	2408a0 <internal_hashmap_first_key_and_value@plt>
  238780:	ldp	x29, x30, [sp], #16
  238784:	ret

0000000000238788 <session_device_new>:
  238788:	stp	x29, x30, [sp, #-64]!
  23878c:	stp	x24, x23, [sp, #16]
  238790:	stp	x22, x21, [sp, #32]
  238794:	stp	x20, x19, [sp, #48]
  238798:	mov	x29, sp
  23879c:	cbz	x0, 2388e8 <session_device_new+0x160>
  2387a0:	mov	x20, x3
  2387a4:	cbz	x3, 238908 <session_device_new+0x180>
  2387a8:	ldr	x8, [x0, #136]
  2387ac:	mov	x21, x0
  2387b0:	cbz	x8, 2388a0 <session_device_new+0x118>
  2387b4:	mov	x23, x1
  2387b8:	mov	w0, #0x1                   	// #1
  2387bc:	mov	w1, #0x38                  	// #56
  2387c0:	mov	w24, w2
  2387c4:	bl	240cf0 <calloc@plt>
  2387c8:	cbz	x0, 2388cc <session_device_new+0x144>
  2387cc:	mov	x22, x0
  2387d0:	str	x21, [x0]
  2387d4:	str	x23, [x22, #16]!
  2387d8:	ldrb	w8, [x0, #36]
  2387dc:	mov	w9, #0xffffffff            	// #-1
  2387e0:	mov	x19, x0
  2387e4:	str	w9, [x0, #32]
  2387e8:	and	w8, w8, #0xf8
  2387ec:	strb	w8, [x0, #36]
  2387f0:	bl	23892c <session_device_verify>
  2387f4:	tbnz	w0, #31, 2388a8 <session_device_new+0x120>
  2387f8:	ldr	x0, [x21, #240]
  2387fc:	mov	x1, x22
  238800:	mov	x2, x19
  238804:	bl	240d00 <hashmap_put@plt>
  238808:	tbnz	w0, #31, 2388a8 <session_device_new+0x120>
  23880c:	tbz	w24, #0, 238878 <session_device_new+0xf0>
  238810:	mov	x0, x21
  238814:	bl	23a310 <session_is_active>
  238818:	ldrb	w8, [x19, #36]
  23881c:	tst	w0, #0x1
  238820:	mov	w9, #0x8                   	// #8
  238824:	csel	w9, w9, wzr, ne  // ne = any
  238828:	and	w8, w8, #0xfffffff7
  23882c:	orr	w8, w8, w9
  238830:	and	w1, w0, #0x1
  238834:	mov	x0, x19
  238838:	strb	w8, [x19, #36]
  23883c:	bl	238a84 <session_device_open>
  238840:	mov	w23, w0
  238844:	tbz	w0, #31, 238874 <session_device_new+0xec>
  238848:	cmn	w23, #0x16
  23884c:	b.ne	238870 <session_device_new+0xe8>  // b.any
  238850:	ldrb	w8, [x19, #36]
  238854:	tbz	w8, #3, 238870 <session_device_new+0xe8>
  238858:	and	w8, w8, #0xfffffff7
  23885c:	mov	x0, x19
  238860:	mov	w1, wzr
  238864:	strb	w8, [x19, #36]
  238868:	bl	238a84 <session_device_open>
  23886c:	mov	w23, w0
  238870:	tbnz	w23, #31, 2388ac <session_device_new+0x124>
  238874:	str	w23, [x19, #32]
  238878:	ldr	x8, [x19, #8]
  23887c:	ldr	x9, [x8, #64]
  238880:	str	x9, [x19, #40]
  238884:	cbz	x9, 23888c <session_device_new+0x104>
  238888:	str	x19, [x9, #48]
  23888c:	mov	w23, wzr
  238890:	str	xzr, [x19, #48]
  238894:	str	x19, [x8, #64]
  238898:	str	x19, [x20]
  23889c:	b	2388d0 <session_device_new+0x148>
  2388a0:	mov	w23, #0xffffffff            	// #-1
  2388a4:	b	2388d0 <session_device_new+0x148>
  2388a8:	mov	w23, w0
  2388ac:	ldr	x0, [x21, #240]
  2388b0:	mov	x1, x22
  2388b4:	bl	238ba0 <hashmap_remove>
  2388b8:	ldr	x0, [x19, #24]
  2388bc:	bl	240890 <free@plt>
  2388c0:	mov	x0, x19
  2388c4:	bl	240890 <free@plt>
  2388c8:	b	2388d0 <session_device_new+0x148>
  2388cc:	mov	w23, #0xfffffff4            	// #-12
  2388d0:	mov	w0, w23
  2388d4:	ldp	x20, x19, [sp, #48]
  2388d8:	ldp	x22, x21, [sp, #32]
  2388dc:	ldp	x24, x23, [sp, #16]
  2388e0:	ldp	x29, x30, [sp], #64
  2388e4:	ret
  2388e8:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  2388ec:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2388f0:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2388f4:	add	x1, x1, #0x6de
  2388f8:	add	x2, x2, #0x2b9
  2388fc:	add	x4, x4, #0xe5d
  238900:	mov	w3, #0x14d                 	// #333
  238904:	bl	240790 <log_assert_failed_realm@plt>
  238908:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  23890c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  238910:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  238914:	add	x1, x1, #0x23d
  238918:	add	x2, x2, #0x2b9
  23891c:	add	x4, x4, #0xe5d
  238920:	mov	w3, #0x14e                 	// #334
  238924:	mov	w0, wzr
  238928:	bl	240790 <log_assert_failed_realm@plt>

000000000023892c <session_device_verify>:
  23892c:	sub	sp, sp, #0x40
  238930:	stp	x29, x30, [sp, #32]
  238934:	add	x29, sp, #0x20
  238938:	stp	x20, x19, [sp, #48]
  23893c:	stur	xzr, [x29, #-8]
  238940:	ldr	x2, [x0, #16]
  238944:	mov	x19, x0
  238948:	sub	x0, x29, #0x8
  23894c:	mov	w1, #0x63                  	// #99
  238950:	bl	241720 <sd_device_new_from_devnum@plt>
  238954:	tbnz	w0, #31, 238a48 <session_device_verify+0x11c>
  238958:	ldur	x0, [x29, #-8]
  23895c:	add	x1, sp, #0x10
  238960:	str	x0, [sp]
  238964:	bl	240dd0 <sd_device_get_syspath@plt>
  238968:	tbnz	w0, #31, 238a08 <session_device_verify+0xdc>
  23896c:	ldr	x0, [sp]
  238970:	add	x1, sp, #0x8
  238974:	bl	241730 <sd_device_get_devname@plt>
  238978:	tbnz	w0, #31, 238a08 <session_device_verify+0xdc>
  23897c:	ldr	x0, [sp]
  238980:	bl	2394c0 <detect_device_type>
  238984:	ldrb	w9, [x19, #36]
  238988:	and	w8, w0, #0x7
  23898c:	cmp	w8, #0x1
  238990:	bfxil	w9, w0, #0, #3
  238994:	strb	w9, [x19, #36]
  238998:	b.eq	2389d0 <session_device_verify+0xa4>  // b.none
  23899c:	cmp	w8, #0x2
  2389a0:	b.ne	238a40 <session_device_verify+0x114>  // b.any
  2389a4:	ldur	x0, [x29, #-8]
  2389a8:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2389ac:	add	x1, x1, #0x557
  2389b0:	mov	x3, sp
  2389b4:	mov	x2, xzr
  2389b8:	bl	241740 <sd_device_get_parent_with_subsystem_devtype@plt>
  2389bc:	tbnz	w0, #31, 238a40 <session_device_verify+0x114>
  2389c0:	ldr	x0, [sp]
  2389c4:	add	x1, sp, #0x10
  2389c8:	bl	240dd0 <sd_device_get_syspath@plt>
  2389cc:	tbnz	w0, #31, 238a40 <session_device_verify+0x114>
  2389d0:	ldr	x8, [x19]
  2389d4:	ldr	x1, [sp, #16]
  2389d8:	ldr	x8, [x8]
  2389dc:	ldr	x0, [x8, #16]
  2389e0:	bl	23956c <hashmap_get>
  2389e4:	str	x0, [x19, #8]
  2389e8:	cbz	x0, 238a10 <session_device_verify+0xe4>
  2389ec:	ldp	x9, x8, [x19]
  2389f0:	ldr	x8, [x8, #16]
  2389f4:	ldr	x9, [x9, #136]
  2389f8:	cmp	x8, x9
  2389fc:	b.eq	238a68 <session_device_verify+0x13c>  // b.none
  238a00:	mov	w20, #0xffffffff            	// #-1
  238a04:	b	238a4c <session_device_verify+0x120>
  238a08:	mov	w20, #0xffffffea            	// #-22
  238a0c:	b	238a4c <session_device_verify+0x120>
  238a10:	ldr	x8, [x19]
  238a14:	ldr	x1, [sp]
  238a18:	ldr	x0, [x8]
  238a1c:	bl	227cac <manager_process_seat_device>
  238a20:	tbnz	w0, #31, 238a48 <session_device_verify+0x11c>
  238a24:	ldr	x8, [x19]
  238a28:	ldr	x1, [sp, #16]
  238a2c:	ldr	x8, [x8]
  238a30:	ldr	x0, [x8, #16]
  238a34:	bl	23956c <hashmap_get>
  238a38:	str	x0, [x19, #8]
  238a3c:	cbnz	x0, 2389ec <session_device_verify+0xc0>
  238a40:	mov	w20, #0xffffffed            	// #-19
  238a44:	b	238a4c <session_device_verify+0x120>
  238a48:	mov	w20, w0
  238a4c:	sub	x0, x29, #0x8
  238a50:	bl	2394a4 <sd_device_unrefp>
  238a54:	mov	w0, w20
  238a58:	ldp	x20, x19, [sp, #48]
  238a5c:	ldp	x29, x30, [sp, #32]
  238a60:	add	sp, sp, #0x40
  238a64:	ret
  238a68:	ldr	x0, [sp, #8]
  238a6c:	bl	240c40 <strdup@plt>
  238a70:	cmp	x0, #0x0
  238a74:	mov	w8, #0xfffffff4            	// #-12
  238a78:	csel	w20, w8, wzr, eq  // eq = none
  238a7c:	str	x0, [x19, #24]
  238a80:	b	238a4c <session_device_verify+0x120>

0000000000238a84 <session_device_open>:
  238a84:	stp	x29, x30, [sp, #-48]!
  238a88:	str	x21, [sp, #16]
  238a8c:	stp	x20, x19, [sp, #32]
  238a90:	mov	x29, sp
  238a94:	cbz	x0, 238b3c <session_device_open+0xb8>
  238a98:	ldrb	w8, [x0, #36]
  238a9c:	mov	x21, x0
  238aa0:	tst	w8, #0x7
  238aa4:	b.eq	238b5c <session_device_open+0xd8>  // b.none
  238aa8:	ldr	x0, [x21, #24]
  238aac:	cbz	x0, 238b80 <session_device_open+0xfc>
  238ab0:	mov	w20, w1
  238ab4:	mov	w1, #0x902                 	// #2306
  238ab8:	movk	w1, #0x8, lsl #16
  238abc:	bl	2408e0 <open64@plt>
  238ac0:	tbnz	w0, #31, 238b04 <session_device_open+0x80>
  238ac4:	ldrb	w8, [x21, #36]
  238ac8:	mov	w19, w0
  238acc:	and	w8, w8, #0x7
  238ad0:	cmp	w8, #0x2
  238ad4:	b.eq	238b14 <session_device_open+0x90>  // b.none
  238ad8:	cmp	w8, #0x1
  238adc:	b.ne	238b28 <session_device_open+0xa4>  // b.any
  238ae0:	mov	w0, w19
  238ae4:	tbz	w20, #0, 238b24 <session_device_open+0xa0>
  238ae8:	bl	2395d0 <sd_drmsetmaster>
  238aec:	tbz	w0, #31, 238b28 <session_device_open+0xa4>
  238af0:	mov	w20, w0
  238af4:	mov	w0, w19
  238af8:	bl	241750 <close_nointr@plt>
  238afc:	mov	w19, w20
  238b00:	b	238b28 <session_device_open+0xa4>
  238b04:	bl	240930 <__errno_location@plt>
  238b08:	ldr	w8, [x0]
  238b0c:	neg	w19, w8
  238b10:	b	238b28 <session_device_open+0xa4>
  238b14:	tbnz	w20, #0, 238b28 <session_device_open+0xa4>
  238b18:	mov	w0, w19
  238b1c:	bl	239678 <sd_eviocrevoke>
  238b20:	b	238b28 <session_device_open+0xa4>
  238b24:	bl	239634 <sd_drmdropmaster>
  238b28:	mov	w0, w19
  238b2c:	ldp	x20, x19, [sp, #32]
  238b30:	ldr	x21, [sp, #16]
  238b34:	ldp	x29, x30, [sp], #48
  238b38:	ret
  238b3c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  238b40:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  238b44:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  238b48:	add	x1, x1, #0xb19
  238b4c:	add	x2, x2, #0x2b9
  238b50:	add	x4, x4, #0xf6e
  238b54:	mov	w3, #0x7f                  	// #127
  238b58:	bl	240790 <log_assert_failed_realm@plt>
  238b5c:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  238b60:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  238b64:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  238b68:	add	x1, x1, #0x390
  238b6c:	add	x2, x2, #0x2b9
  238b70:	add	x4, x4, #0xf6e
  238b74:	mov	w3, #0x80                  	// #128
  238b78:	mov	w0, wzr
  238b7c:	bl	240790 <log_assert_failed_realm@plt>
  238b80:	adrp	x1, 212000 <inhibit_what_to_string.buffer+0x212000>
  238b84:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  238b88:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  238b8c:	add	x1, x1, #0x322
  238b90:	add	x2, x2, #0x2b9
  238b94:	add	x4, x4, #0xf6e
  238b98:	mov	w3, #0x81                  	// #129
  238b9c:	bl	240790 <log_assert_failed_realm@plt>

0000000000238ba0 <hashmap_remove>:
  238ba0:	stp	x29, x30, [sp, #-16]!
  238ba4:	mov	x29, sp
  238ba8:	bl	240d20 <internal_hashmap_remove@plt>
  238bac:	ldp	x29, x30, [sp], #16
  238bb0:	ret

0000000000238bb4 <session_device_free>:
  238bb4:	stp	x29, x30, [sp, #-48]!
  238bb8:	stp	x22, x21, [sp, #16]
  238bbc:	stp	x20, x19, [sp, #32]
  238bc0:	mov	x29, sp
  238bc4:	cbz	x0, 238c9c <session_device_free+0xe8>
  238bc8:	ldrb	w8, [x0, #36]
  238bcc:	mov	x19, x0
  238bd0:	tbz	w8, #4, 238c10 <session_device_free+0x5c>
  238bd4:	ldr	x8, [x19]
  238bd8:	ldr	x21, [x19, #16]
  238bdc:	ldr	x20, [x8, #8]
  238be0:	mov	x0, x21
  238be4:	bl	240c00 <gnu_dev_major@plt>
  238be8:	mov	w22, w0
  238bec:	mov	x0, x21
  238bf0:	bl	240c10 <gnu_dev_minor@plt>
  238bf4:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  238bf8:	mov	w4, w0
  238bfc:	add	x1, x1, #0xe9f
  238c00:	mov	w0, wzr
  238c04:	mov	x2, x20
  238c08:	mov	w3, w22
  238c0c:	bl	240bf0 <sd_notifyf@plt>
  238c10:	mov	x0, x19
  238c14:	bl	238ce0 <session_device_stop>
  238c18:	mov	w1, #0x3                   	// #3
  238c1c:	mov	x0, x19
  238c20:	bl	238d9c <session_device_notify>
  238c24:	ldr	w0, [x19, #32]
  238c28:	bl	240820 <safe_close@plt>
  238c2c:	mov	x8, x19
  238c30:	ldr	x10, [x8, #40]!
  238c34:	ldur	x9, [x8, #-32]
  238c38:	cbz	x10, 238c44 <session_device_free+0x90>
  238c3c:	ldr	x11, [x19, #48]
  238c40:	str	x11, [x10, #48]
  238c44:	ldr	x10, [x19, #48]
  238c48:	cbz	x10, 238c54 <session_device_free+0xa0>
  238c4c:	add	x9, x10, #0x28
  238c50:	b	238c60 <session_device_free+0xac>
  238c54:	ldr	x10, [x9, #64]!
  238c58:	cmp	x10, x19
  238c5c:	b.ne	238cbc <session_device_free+0x108>  // b.any
  238c60:	ldr	x10, [x19, #40]
  238c64:	add	x1, x19, #0x10
  238c68:	str	x10, [x9]
  238c6c:	stp	xzr, xzr, [x8]
  238c70:	ldr	x8, [x19]
  238c74:	ldr	x0, [x8, #240]
  238c78:	bl	238ba0 <hashmap_remove>
  238c7c:	ldr	x0, [x19, #24]
  238c80:	bl	240890 <free@plt>
  238c84:	mov	x0, x19
  238c88:	bl	240890 <free@plt>
  238c8c:	ldp	x20, x19, [sp, #32]
  238c90:	ldp	x22, x21, [sp, #16]
  238c94:	ldp	x29, x30, [sp], #48
  238c98:	ret
  238c9c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  238ca0:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  238ca4:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  238ca8:	add	x1, x1, #0xb19
  238cac:	add	x2, x2, #0x2b9
  238cb0:	add	x4, x4, #0xde9
  238cb4:	mov	w3, #0x184                 	// #388
  238cb8:	bl	240790 <log_assert_failed_realm@plt>
  238cbc:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  238cc0:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  238cc4:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  238cc8:	add	x1, x1, #0xa19
  238ccc:	add	x2, x2, #0x2b9
  238cd0:	add	x4, x4, #0xde9
  238cd4:	mov	w3, #0x191                 	// #401
  238cd8:	mov	w0, wzr
  238cdc:	bl	240790 <log_assert_failed_realm@plt>

0000000000238ce0 <session_device_stop>:
  238ce0:	stp	x29, x30, [sp, #-32]!
  238ce4:	str	x19, [sp, #16]
  238ce8:	mov	x29, sp
  238cec:	cbz	x0, 238d7c <session_device_stop+0x9c>
  238cf0:	ldrb	w8, [x0, #36]
  238cf4:	mov	x19, x0
  238cf8:	tbz	w8, #3, 238d34 <session_device_stop+0x54>
  238cfc:	and	w8, w8, #0x7
  238d00:	cmp	w8, #0x2
  238d04:	b.eq	238d20 <session_device_stop+0x40>  // b.none
  238d08:	cmp	w8, #0x1
  238d0c:	b.ne	238d28 <session_device_stop+0x48>  // b.any
  238d10:	ldr	w0, [x19, #32]
  238d14:	tbnz	w0, #31, 238d40 <session_device_stop+0x60>
  238d18:	bl	239634 <sd_drmdropmaster>
  238d1c:	b	238d28 <session_device_stop+0x48>
  238d20:	ldr	w0, [x19, #32]
  238d24:	bl	239678 <sd_eviocrevoke>
  238d28:	ldrb	w8, [x19, #36]
  238d2c:	and	w8, w8, #0xfffffff7
  238d30:	strb	w8, [x19, #36]
  238d34:	ldr	x19, [sp, #16]
  238d38:	ldp	x29, x30, [sp], #32
  238d3c:	ret
  238d40:	mov	w0, wzr
  238d44:	bl	240750 <log_get_max_level_realm@plt>
  238d48:	cmp	w0, #0x3
  238d4c:	b.lt	238d34 <session_device_stop+0x54>  // b.tstop
  238d50:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  238d54:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  238d58:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  238d5c:	add	x2, x2, #0x2b9
  238d60:	add	x4, x4, #0x669
  238d64:	add	x5, x5, #0x475
  238d68:	mov	w0, #0x3                   	// #3
  238d6c:	mov	w3, #0xde                  	// #222
  238d70:	mov	w1, wzr
  238d74:	bl	240770 <log_internal_realm@plt>
  238d78:	b	238d34 <session_device_stop+0x54>
  238d7c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  238d80:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  238d84:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  238d88:	add	x1, x1, #0xb19
  238d8c:	add	x2, x2, #0x2b9
  238d90:	add	x4, x4, #0x63f
  238d94:	mov	w3, #0xd5                  	// #213
  238d98:	bl	240790 <log_assert_failed_realm@plt>

0000000000238d9c <session_device_notify>:
  238d9c:	sub	sp, sp, #0x40
  238da0:	stp	x29, x30, [sp, #16]
  238da4:	stp	x22, x21, [sp, #32]
  238da8:	stp	x20, x19, [sp, #48]
  238dac:	add	x29, sp, #0x10
  238db0:	stp	xzr, xzr, [sp]
  238db4:	cbz	x0, 238f14 <session_device_notify+0x178>
  238db8:	ldr	x21, [x0, #16]
  238dbc:	mov	x19, x0
  238dc0:	mov	w22, w1
  238dc4:	mov	x0, x21
  238dc8:	bl	240c00 <gnu_dev_major@plt>
  238dcc:	mov	w20, w0
  238dd0:	mov	x0, x21
  238dd4:	bl	240c10 <gnu_dev_minor@plt>
  238dd8:	ldr	x8, [x19]
  238ddc:	ldr	x9, [x8, #232]
  238de0:	cbz	x9, 238ef0 <session_device_notify+0x154>
  238de4:	mov	w21, w0
  238de8:	mov	x0, x8
  238dec:	bl	2374bc <session_bus_path>
  238df0:	str	x0, [sp]
  238df4:	cbz	x0, 238ef0 <session_device_notify+0x154>
  238df8:	ldr	x8, [x19]
  238dfc:	mov	x2, x0
  238e00:	adrp	x9, 210000 <inhibit_what_to_string.buffer+0x210000>
  238e04:	add	x9, x9, #0x841
  238e08:	ldr	x8, [x8]
  238e0c:	cmp	w22, #0x0
  238e10:	adrp	x3, 209000 <inhibit_what_to_string.buffer+0x209000>
  238e14:	add	x3, x3, #0x5aa
  238e18:	ldr	x0, [x8, #8]
  238e1c:	adrp	x8, 207000 <inhibit_what_to_string.buffer+0x207000>
  238e20:	add	x8, x8, #0x765
  238e24:	csel	x4, x9, x8, eq  // eq = none
  238e28:	add	x1, sp, #0x8
  238e2c:	bl	241760 <sd_bus_message_new_signal@plt>
  238e30:	ldr	x0, [sp, #8]
  238e34:	cbz	x0, 238ef0 <session_device_notify+0x154>
  238e38:	ldr	x8, [x19]
  238e3c:	ldr	x1, [x8, #232]
  238e40:	bl	241770 <sd_bus_message_set_destination@plt>
  238e44:	tbnz	w0, #31, 238ef0 <session_device_notify+0x154>
  238e48:	cmp	w22, #0x3
  238e4c:	b.hi	238ef0 <session_device_notify+0x154>  // b.pmore
  238e50:	adrp	x9, 212000 <inhibit_what_to_string.buffer+0x212000>
  238e54:	mov	w8, w22
  238e58:	add	x9, x9, #0x634
  238e5c:	adr	x10, 238e74 <session_device_notify+0xd8>
  238e60:	ldrb	w11, [x9, x8]
  238e64:	add	x10, x10, x11, lsl #2
  238e68:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  238e6c:	add	x4, x4, #0x4a8
  238e70:	br	x10
  238e74:	ldr	x0, [sp, #8]
  238e78:	ldr	w4, [x19, #32]
  238e7c:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  238e80:	add	x1, x1, #0xc99
  238e84:	mov	w2, w20
  238e88:	mov	w3, w21
  238e8c:	bl	240ff0 <sd_bus_message_append@plt>
  238e90:	tbnz	w0, #31, 238ef0 <session_device_notify+0x154>
  238e94:	mov	x4, xzr
  238e98:	cbnz	x4, 238ebc <session_device_notify+0x120>
  238e9c:	b	238ed8 <session_device_notify+0x13c>
  238ea0:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  238ea4:	add	x4, x4, #0xdf6
  238ea8:	cbnz	x4, 238ebc <session_device_notify+0x120>
  238eac:	b	238ed8 <session_device_notify+0x13c>
  238eb0:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  238eb4:	add	x4, x4, #0x79d
  238eb8:	cbz	x4, 238ed8 <session_device_notify+0x13c>
  238ebc:	ldr	x0, [sp, #8]
  238ec0:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  238ec4:	add	x1, x1, #0x711
  238ec8:	mov	w2, w20
  238ecc:	mov	w3, w21
  238ed0:	bl	240ff0 <sd_bus_message_append@plt>
  238ed4:	tbnz	w0, #31, 238ef0 <session_device_notify+0x154>
  238ed8:	ldr	x8, [x19]
  238edc:	ldr	x1, [sp, #8]
  238ee0:	mov	x2, xzr
  238ee4:	ldr	x8, [x8]
  238ee8:	ldr	x0, [x8, #8]
  238eec:	bl	2410c0 <sd_bus_send@plt>
  238ef0:	mov	x0, sp
  238ef4:	bl	2393b8 <freep>
  238ef8:	add	x0, sp, #0x8
  238efc:	bl	239728 <sd_bus_message_unrefp>
  238f00:	ldp	x20, x19, [sp, #48]
  238f04:	ldp	x22, x21, [sp, #32]
  238f08:	ldp	x29, x30, [sp, #16]
  238f0c:	add	sp, sp, #0x40
  238f10:	ret
  238f14:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  238f18:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  238f1c:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  238f20:	add	x1, x1, #0xb19
  238f24:	add	x2, x2, #0x2b9
  238f28:	add	x4, x4, #0x963
  238f2c:	mov	w3, #0x23                  	// #35
  238f30:	bl	240790 <log_assert_failed_realm@plt>

0000000000238f34 <session_device_complete_pause>:
  238f34:	sub	sp, sp, #0x30
  238f38:	stp	x29, x30, [sp, #16]
  238f3c:	ldrb	w8, [x0, #36]
  238f40:	str	x19, [sp, #32]
  238f44:	add	x29, sp, #0x10
  238f48:	tbz	w8, #3, 238f94 <session_device_complete_pause+0x60>
  238f4c:	mov	x19, x0
  238f50:	bl	238ce0 <session_device_stop>
  238f54:	mov	w8, #0xfffffffe            	// #-2
  238f58:	str	w8, [sp]
  238f5c:	str	xzr, [sp, #8]
  238f60:	ldr	x8, [x19]
  238f64:	mov	x1, sp
  238f68:	add	x2, x29, #0x18
  238f6c:	ldr	x0, [x8, #240]
  238f70:	bl	238fa4 <hashmap_iterate>
  238f74:	tbz	w0, #0, 238f88 <session_device_complete_pause+0x54>
  238f78:	ldr	x8, [x29, #24]
  238f7c:	ldrb	w8, [x8, #36]
  238f80:	tbz	w8, #3, 238f60 <session_device_complete_pause+0x2c>
  238f84:	b	238f94 <session_device_complete_pause+0x60>
  238f88:	ldr	x8, [x19]
  238f8c:	ldr	x0, [x8, #136]
  238f90:	bl	2359e4 <seat_complete_switch>
  238f94:	ldr	x19, [sp, #32]
  238f98:	ldp	x29, x30, [sp, #16]
  238f9c:	add	sp, sp, #0x30
  238fa0:	ret

0000000000238fa4 <hashmap_iterate>:
  238fa4:	stp	x29, x30, [sp, #-16]!
  238fa8:	mov	x3, xzr
  238fac:	mov	x29, sp
  238fb0:	bl	240b00 <internal_hashmap_iterate@plt>
  238fb4:	and	w0, w0, #0x1
  238fb8:	ldp	x29, x30, [sp], #16
  238fbc:	ret

0000000000238fc0 <session_device_resume_all>:
  238fc0:	sub	sp, sp, #0x30
  238fc4:	stp	x29, x30, [sp, #16]
  238fc8:	str	x19, [sp, #32]
  238fcc:	add	x29, sp, #0x10
  238fd0:	cbz	x0, 239038 <session_device_resume_all+0x78>
  238fd4:	mov	x19, x0
  238fd8:	mov	w8, #0xfffffffe            	// #-2
  238fdc:	str	w8, [sp]
  238fe0:	str	xzr, [sp, #8]
  238fe4:	ldr	x0, [x19, #240]
  238fe8:	mov	x1, sp
  238fec:	add	x2, x29, #0x18
  238ff0:	bl	238fa4 <hashmap_iterate>
  238ff4:	tbz	w0, #0, 239028 <session_device_resume_all+0x68>
  238ff8:	ldr	x0, [x29, #24]
  238ffc:	ldrb	w8, [x0, #36]
  239000:	tbnz	w8, #3, 238fe4 <session_device_resume_all+0x24>
  239004:	bl	239058 <session_device_start>
  239008:	tbnz	w0, #31, 238fe4 <session_device_resume_all+0x24>
  23900c:	ldr	x0, [x29, #24]
  239010:	bl	239184 <session_device_save>
  239014:	tbnz	w0, #31, 238fe4 <session_device_resume_all+0x24>
  239018:	ldr	x0, [x29, #24]
  23901c:	mov	w1, wzr
  239020:	bl	238d9c <session_device_notify>
  239024:	b	238fe4 <session_device_resume_all+0x24>
  239028:	ldr	x19, [sp, #32]
  23902c:	ldp	x29, x30, [sp, #16]
  239030:	add	sp, sp, #0x30
  239034:	ret
  239038:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23903c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  239040:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  239044:	add	x1, x1, #0x6de
  239048:	add	x2, x2, #0x2b9
  23904c:	add	x4, x4, #0xd6c
  239050:	mov	w3, #0x1af                 	// #431
  239054:	bl	240790 <log_assert_failed_realm@plt>

0000000000239058 <session_device_start>:
  239058:	stp	x29, x30, [sp, #-32]!
  23905c:	stp	x20, x19, [sp, #16]
  239060:	mov	x29, sp
  239064:	cbz	x0, 239140 <session_device_start+0xe8>
  239068:	mov	x19, x0
  23906c:	ldr	x0, [x0]
  239070:	bl	23a310 <session_is_active>
  239074:	tbz	w0, #0, 239160 <session_device_start+0x108>
  239078:	ldrb	w8, [x19, #36]
  23907c:	tbnz	w8, #3, 2390ac <session_device_start+0x54>
  239080:	and	w8, w8, #0x7
  239084:	cmp	w8, #0x2
  239088:	b.eq	2390b4 <session_device_start+0x5c>  // b.none
  23908c:	cmp	w8, #0x1
  239090:	b.ne	2390d4 <session_device_start+0x7c>  // b.any
  239094:	ldr	w0, [x19, #32]
  239098:	tbnz	w0, #31, 2390f4 <session_device_start+0x9c>
  23909c:	bl	2395d0 <sd_drmsetmaster>
  2390a0:	tbz	w0, #31, 2390d4 <session_device_start+0x7c>
  2390a4:	mov	w20, w0
  2390a8:	b	2390e4 <session_device_start+0x8c>
  2390ac:	mov	w20, wzr
  2390b0:	b	2390e4 <session_device_start+0x8c>
  2390b4:	mov	w1, #0x1                   	// #1
  2390b8:	mov	x0, x19
  2390bc:	bl	238a84 <session_device_open>
  2390c0:	mov	w20, w0
  2390c4:	tbnz	w0, #31, 2390e4 <session_device_start+0x8c>
  2390c8:	ldr	w0, [x19, #32]
  2390cc:	bl	240820 <safe_close@plt>
  2390d0:	str	w20, [x19, #32]
  2390d4:	ldrb	w8, [x19, #36]
  2390d8:	mov	w20, wzr
  2390dc:	orr	w8, w8, #0x8
  2390e0:	strb	w8, [x19, #36]
  2390e4:	mov	w0, w20
  2390e8:	ldp	x20, x19, [sp, #16]
  2390ec:	ldp	x29, x30, [sp], #32
  2390f0:	ret
  2390f4:	mov	w0, wzr
  2390f8:	bl	240750 <log_get_max_level_realm@plt>
  2390fc:	cmp	w0, #0x3
  239100:	b.lt	239138 <session_device_start+0xe0>  // b.tstop
  239104:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  239108:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23910c:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  239110:	mov	w1, #0x9                   	// #9
  239114:	add	x2, x2, #0x2b9
  239118:	add	x4, x4, #0x7a2
  23911c:	add	x5, x5, #0x377
  239120:	mov	w0, #0x3                   	// #3
  239124:	movk	w1, #0x4000, lsl #16
  239128:	mov	w3, #0xb5                  	// #181
  23912c:	bl	240770 <log_internal_realm@plt>
  239130:	mov	w20, w0
  239134:	b	2390e4 <session_device_start+0x8c>
  239138:	mov	w20, #0xfffffff7            	// #-9
  23913c:	b	2390e4 <session_device_start+0x8c>
  239140:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  239144:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  239148:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23914c:	add	x1, x1, #0xb19
  239150:	add	x2, x2, #0x2b9
  239154:	add	x4, x4, #0xece
  239158:	mov	w3, #0xaa                  	// #170
  23915c:	bl	240790 <log_assert_failed_realm@plt>
  239160:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  239164:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  239168:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23916c:	add	x1, x1, #0x94b
  239170:	add	x2, x2, #0x2b9
  239174:	add	x4, x4, #0xece
  239178:	mov	w3, #0xab                  	// #171
  23917c:	mov	w0, wzr
  239180:	bl	240790 <log_assert_failed_realm@plt>

0000000000239184 <session_device_save>:
  239184:	sub	sp, sp, #0x40
  239188:	stp	x29, x30, [sp, #16]
  23918c:	stp	x22, x21, [sp, #32]
  239190:	stp	x20, x19, [sp, #48]
  239194:	add	x29, sp, #0x10
  239198:	str	xzr, [sp, #8]
  23919c:	cbz	x0, 239260 <session_device_save+0xdc>
  2391a0:	ldrb	w8, [x0, #36]
  2391a4:	mov	x19, x0
  2391a8:	tbnz	w8, #4, 239234 <session_device_save+0xb0>
  2391ac:	ldr	x8, [x19]
  2391b0:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  2391b4:	add	x1, x1, #0x86e
  2391b8:	ldr	x20, [x8, #8]
  2391bc:	mov	x0, x20
  2391c0:	bl	241780 <strcspn@plt>
  2391c4:	ldrb	w8, [x20, x0]
  2391c8:	cbnz	w8, 239280 <session_device_save+0xfc>
  2391cc:	ldr	x21, [x19, #16]
  2391d0:	mov	x0, x21
  2391d4:	bl	240c00 <gnu_dev_major@plt>
  2391d8:	mov	w22, w0
  2391dc:	mov	x0, x21
  2391e0:	bl	240c10 <gnu_dev_minor@plt>
  2391e4:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2391e8:	mov	w4, w0
  2391ec:	add	x1, x1, #0x615
  2391f0:	add	x0, sp, #0x8
  2391f4:	mov	x2, x20
  2391f8:	mov	w3, w22
  2391fc:	bl	240ae0 <asprintf@plt>
  239200:	tbnz	w0, #31, 23923c <session_device_save+0xb8>
  239204:	ldr	x2, [sp, #8]
  239208:	add	x3, x19, #0x20
  23920c:	mov	w4, #0x1                   	// #1
  239210:	mov	w0, wzr
  239214:	mov	w1, wzr
  239218:	bl	241790 <sd_pid_notify_with_fds@plt>
  23921c:	tbnz	w0, #31, 23923c <session_device_save+0xb8>
  239220:	ldrb	w8, [x19, #36]
  239224:	mov	w20, #0x1                   	// #1
  239228:	orr	w8, w8, #0x10
  23922c:	strb	w8, [x19, #36]
  239230:	b	239240 <session_device_save+0xbc>
  239234:	mov	w20, wzr
  239238:	b	239240 <session_device_save+0xbc>
  23923c:	mov	w20, w0
  239240:	add	x0, sp, #0x8
  239244:	bl	2393b8 <freep>
  239248:	mov	w0, w20
  23924c:	ldp	x20, x19, [sp, #48]
  239250:	ldp	x22, x21, [sp, #32]
  239254:	ldp	x29, x30, [sp, #16]
  239258:	add	sp, sp, #0x40
  23925c:	ret
  239260:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  239264:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  239268:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23926c:	add	x1, x1, #0xb19
  239270:	add	x2, x2, #0x2b9
  239274:	add	x4, x4, #0xe22
  239278:	mov	w3, #0x1e4                 	// #484
  23927c:	bl	240790 <log_assert_failed_realm@plt>
  239280:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  239284:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  239288:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23928c:	add	x1, x1, #0xd8a
  239290:	add	x2, x2, #0x2b9
  239294:	add	x4, x4, #0xe22
  239298:	mov	w3, #0x1f2                 	// #498
  23929c:	mov	w0, wzr
  2392a0:	bl	240790 <log_assert_failed_realm@plt>

00000000002392a4 <session_device_pause_all>:
  2392a4:	sub	sp, sp, #0x30
  2392a8:	stp	x29, x30, [sp, #16]
  2392ac:	str	x19, [sp, #32]
  2392b0:	add	x29, sp, #0x10
  2392b4:	cbz	x0, 23930c <session_device_pause_all+0x68>
  2392b8:	mov	x19, x0
  2392bc:	mov	w8, #0xfffffffe            	// #-2
  2392c0:	str	w8, [sp]
  2392c4:	str	xzr, [sp, #8]
  2392c8:	ldr	x0, [x19, #240]
  2392cc:	mov	x1, sp
  2392d0:	add	x2, x29, #0x18
  2392d4:	bl	238fa4 <hashmap_iterate>
  2392d8:	tbz	w0, #0, 2392fc <session_device_pause_all+0x58>
  2392dc:	ldr	x0, [x29, #24]
  2392e0:	ldrb	w8, [x0, #36]
  2392e4:	tbz	w8, #3, 2392c8 <session_device_pause_all+0x24>
  2392e8:	bl	238ce0 <session_device_stop>
  2392ec:	ldr	x0, [x29, #24]
  2392f0:	mov	w1, #0x2                   	// #2
  2392f4:	bl	238d9c <session_device_notify>
  2392f8:	b	2392c8 <session_device_pause_all+0x24>
  2392fc:	ldr	x19, [sp, #32]
  239300:	ldp	x29, x30, [sp, #16]
  239304:	add	sp, sp, #0x30
  239308:	ret
  23930c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  239310:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  239314:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  239318:	add	x1, x1, #0x6de
  23931c:	add	x2, x2, #0x2b9
  239320:	add	x4, x4, #0xc79
  239324:	mov	w3, #0x1c2                 	// #450
  239328:	bl	240790 <log_assert_failed_realm@plt>

000000000023932c <session_device_try_pause_all>:
  23932c:	sub	sp, sp, #0x40
  239330:	stp	x29, x30, [sp, #32]
  239334:	stp	x20, x19, [sp, #48]
  239338:	add	x29, sp, #0x20
  23933c:	cbz	x0, 239398 <session_device_try_pause_all+0x6c>
  239340:	mov	x19, x0
  239344:	mov	w20, wzr
  239348:	mov	w8, #0xfffffffe            	// #-2
  23934c:	str	w8, [sp, #8]
  239350:	str	xzr, [sp, #16]
  239354:	ldr	x0, [x19, #240]
  239358:	add	x1, sp, #0x8
  23935c:	sub	x2, x29, #0x8
  239360:	bl	238fa4 <hashmap_iterate>
  239364:	tbz	w0, #0, 239384 <session_device_try_pause_all+0x58>
  239368:	ldur	x0, [x29, #-8]
  23936c:	ldrb	w8, [x0, #36]
  239370:	tbz	w8, #3, 239354 <session_device_try_pause_all+0x28>
  239374:	mov	w1, #0x1                   	// #1
  239378:	bl	238d9c <session_device_notify>
  23937c:	add	w20, w20, #0x1
  239380:	b	239354 <session_device_try_pause_all+0x28>
  239384:	mov	w0, w20
  239388:	ldp	x20, x19, [sp, #48]
  23938c:	ldp	x29, x30, [sp, #32]
  239390:	add	sp, sp, #0x40
  239394:	ret
  239398:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23939c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2393a0:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  2393a4:	add	x1, x1, #0x6de
  2393a8:	add	x2, x2, #0x2b9
  2393ac:	add	x4, x4, #0x71a
  2393b0:	mov	w3, #0x1d2                 	// #466
  2393b4:	bl	240790 <log_assert_failed_realm@plt>

00000000002393b8 <freep>:
  2393b8:	stp	x29, x30, [sp, #-16]!
  2393bc:	ldr	x0, [x0]
  2393c0:	mov	x29, sp
  2393c4:	bl	240890 <free@plt>
  2393c8:	ldp	x29, x30, [sp], #16
  2393cc:	ret

00000000002393d0 <session_device_attach_fd>:
  2393d0:	stp	x29, x30, [sp, #-16]!
  2393d4:	mov	x29, sp
  2393d8:	tbnz	w1, #31, 239418 <session_device_attach_fd+0x48>
  2393dc:	cbz	x0, 23943c <session_device_attach_fd+0x6c>
  2393e0:	ldr	w8, [x0, #32]
  2393e4:	tbz	w8, #31, 23945c <session_device_attach_fd+0x8c>
  2393e8:	ldrb	w8, [x0, #36]
  2393ec:	tbnz	w8, #3, 239480 <session_device_attach_fd+0xb0>
  2393f0:	tst	w2, #0x1
  2393f4:	mov	w9, #0x10                  	// #16
  2393f8:	mov	w10, #0x18                  	// #24
  2393fc:	and	w8, w8, #0xffffffe7
  239400:	csel	w9, w10, w9, ne  // ne = any
  239404:	orr	w8, w9, w8
  239408:	str	w1, [x0, #32]
  23940c:	strb	w8, [x0, #36]
  239410:	ldp	x29, x30, [sp], #16
  239414:	ret
  239418:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23941c:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  239420:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  239424:	add	x1, x1, #0xb21
  239428:	add	x2, x2, #0x2b9
  23942c:	add	x4, x4, #0x1c3
  239430:	mov	w3, #0x203                 	// #515
  239434:	mov	w0, wzr
  239438:	bl	240790 <log_assert_failed_realm@plt>
  23943c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  239440:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  239444:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  239448:	add	x1, x1, #0xb19
  23944c:	add	x2, x2, #0x2b9
  239450:	add	x4, x4, #0x1c3
  239454:	mov	w3, #0x204                 	// #516
  239458:	bl	240790 <log_assert_failed_realm@plt>
  23945c:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  239460:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  239464:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  239468:	add	x1, x1, #0x19b
  23946c:	add	x2, x2, #0x2b9
  239470:	add	x4, x4, #0x1c3
  239474:	mov	w3, #0x205                 	// #517
  239478:	mov	w0, wzr
  23947c:	bl	240790 <log_assert_failed_realm@plt>
  239480:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  239484:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  239488:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23948c:	add	x1, x1, #0xdea
  239490:	add	x2, x2, #0x2b9
  239494:	add	x4, x4, #0x1c3
  239498:	mov	w3, #0x206                 	// #518
  23949c:	mov	w0, wzr
  2394a0:	bl	240790 <log_assert_failed_realm@plt>

00000000002394a4 <sd_device_unrefp>:
  2394a4:	stp	x29, x30, [sp, #-16]!
  2394a8:	ldr	x0, [x0]
  2394ac:	mov	x29, sp
  2394b0:	cbz	x0, 2394b8 <sd_device_unrefp+0x14>
  2394b4:	bl	2413a0 <sd_device_unref@plt>
  2394b8:	ldp	x29, x30, [sp], #16
  2394bc:	ret

00000000002394c0 <detect_device_type>:
  2394c0:	sub	sp, sp, #0x30
  2394c4:	stp	x29, x30, [sp, #16]
  2394c8:	add	x29, sp, #0x10
  2394cc:	add	x1, x29, #0x18
  2394d0:	str	x19, [sp, #32]
  2394d4:	mov	x19, x0
  2394d8:	bl	240b70 <sd_device_get_sysname@plt>
  2394dc:	tbnz	w0, #31, 23951c <detect_device_type+0x5c>
  2394e0:	add	x1, sp, #0x8
  2394e4:	mov	x0, x19
  2394e8:	bl	240e80 <sd_device_get_subsystem@plt>
  2394ec:	tbnz	w0, #31, 23951c <detect_device_type+0x5c>
  2394f0:	ldr	x19, [sp, #8]
  2394f4:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  2394f8:	add	x1, x1, #0x55d
  2394fc:	mov	x0, x19
  239500:	bl	240c30 <strcmp@plt>
  239504:	cbz	w0, 239530 <detect_device_type+0x70>
  239508:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23950c:	add	x1, x1, #0x557
  239510:	mov	x0, x19
  239514:	bl	240c30 <strcmp@plt>
  239518:	cbz	w0, 23954c <detect_device_type+0x8c>
  23951c:	mov	w0, wzr
  239520:	ldr	x19, [sp, #32]
  239524:	ldp	x29, x30, [sp, #16]
  239528:	add	sp, sp, #0x30
  23952c:	ret
  239530:	ldr	x0, [x29, #24]
  239534:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  239538:	add	x1, x1, #0xea7
  23953c:	bl	239580 <startswith>
  239540:	cmp	x0, #0x0
  239544:	cset	w0, ne  // ne = any
  239548:	b	239520 <detect_device_type+0x60>
  23954c:	ldr	x0, [x29, #24]
  239550:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  239554:	add	x1, x1, #0x46f
  239558:	bl	239580 <startswith>
  23955c:	cmp	x0, #0x0
  239560:	cset	w8, ne  // ne = any
  239564:	lsl	w0, w8, #1
  239568:	b	239520 <detect_device_type+0x60>

000000000023956c <hashmap_get>:
  23956c:	stp	x29, x30, [sp, #-16]!
  239570:	mov	x29, sp
  239574:	bl	240bc0 <internal_hashmap_get@plt>
  239578:	ldp	x29, x30, [sp], #16
  23957c:	ret

0000000000239580 <startswith>:
  239580:	stp	x29, x30, [sp, #-48]!
  239584:	stp	x20, x19, [sp, #32]
  239588:	mov	x20, x0
  23958c:	mov	x0, x1
  239590:	str	x21, [sp, #16]
  239594:	mov	x29, sp
  239598:	mov	x19, x1
  23959c:	bl	240d30 <strlen@plt>
  2395a0:	mov	x21, x0
  2395a4:	mov	x0, x20
  2395a8:	mov	x1, x19
  2395ac:	mov	x2, x21
  2395b0:	bl	240b90 <strncmp@plt>
  2395b4:	add	x8, x20, x21
  2395b8:	ldp	x20, x19, [sp, #32]
  2395bc:	ldr	x21, [sp, #16]
  2395c0:	cmp	w0, #0x0
  2395c4:	csel	x0, x8, xzr, eq  // eq = none
  2395c8:	ldp	x29, x30, [sp], #48
  2395cc:	ret

00000000002395d0 <sd_drmsetmaster>:
  2395d0:	stp	x29, x30, [sp, #-16]!
  2395d4:	mov	x29, sp
  2395d8:	tbnz	w0, #31, 239610 <sd_drmsetmaster+0x40>
  2395dc:	mov	w1, #0x641e                	// #25630
  2395e0:	mov	w2, wzr
  2395e4:	bl	240d50 <ioctl@plt>
  2395e8:	mov	w8, w0
  2395ec:	mov	w0, wzr
  2395f0:	tbnz	w8, #31, 2395fc <sd_drmsetmaster+0x2c>
  2395f4:	ldp	x29, x30, [sp], #16
  2395f8:	ret
  2395fc:	bl	240930 <__errno_location@plt>
  239600:	ldr	w8, [x0]
  239604:	neg	w0, w8
  239608:	ldp	x29, x30, [sp], #16
  23960c:	ret
  239610:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  239614:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  239618:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  23961c:	add	x1, x1, #0xb21
  239620:	add	x2, x2, #0x2b9
  239624:	add	x4, x4, #0xb1c
  239628:	mov	w3, #0x6b                  	// #107
  23962c:	mov	w0, wzr
  239630:	bl	240790 <log_assert_failed_realm@plt>

0000000000239634 <sd_drmdropmaster>:
  239634:	stp	x29, x30, [sp, #-16]!
  239638:	mov	x29, sp
  23963c:	tbnz	w0, #31, 239654 <sd_drmdropmaster+0x20>
  239640:	mov	w1, #0x641f                	// #25631
  239644:	mov	w2, wzr
  239648:	bl	240d50 <ioctl@plt>
  23964c:	ldp	x29, x30, [sp], #16
  239650:	ret
  239654:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  239658:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  23965c:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  239660:	add	x1, x1, #0xb21
  239664:	add	x2, x2, #0x2b9
  239668:	add	x4, x4, #0x820
  23966c:	mov	w3, #0x74                  	// #116
  239670:	mov	w0, wzr
  239674:	bl	240790 <log_assert_failed_realm@plt>

0000000000239678 <sd_eviocrevoke>:
  239678:	stp	x29, x30, [sp, #-32]!
  23967c:	str	x19, [sp, #16]
  239680:	mov	x29, sp
  239684:	tbnz	w0, #31, 239704 <sd_eviocrevoke+0x8c>
  239688:	mov	w1, #0x4591                	// #17809
  23968c:	movk	w1, #0x4004, lsl #16
  239690:	mov	x2, xzr
  239694:	bl	240d50 <ioctl@plt>
  239698:	tbz	w0, #31, 2396f8 <sd_eviocrevoke+0x80>
  23969c:	bl	240930 <__errno_location@plt>
  2396a0:	ldr	w8, [x0]
  2396a4:	cmp	w8, #0x16
  2396a8:	b.ne	2396f8 <sd_eviocrevoke+0x80>  // b.any
  2396ac:	adrp	x19, 265000 <string_hash_ops+0xf888>
  2396b0:	ldrb	w8, [x19, #1945]
  2396b4:	tbnz	w8, #0, 2396f8 <sd_eviocrevoke+0x80>
  2396b8:	mov	w0, wzr
  2396bc:	bl	240750 <log_get_max_level_realm@plt>
  2396c0:	cmp	w0, #0x4
  2396c4:	b.lt	2396f0 <sd_eviocrevoke+0x78>  // b.tstop
  2396c8:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  2396cc:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  2396d0:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  2396d4:	add	x2, x2, #0x2b9
  2396d8:	add	x4, x4, #0x2db
  2396dc:	add	x5, x5, #0x83a
  2396e0:	mov	w0, #0x4                   	// #4
  2396e4:	mov	w1, #0x16                  	// #22
  2396e8:	mov	w3, #0x64                  	// #100
  2396ec:	bl	240770 <log_internal_realm@plt>
  2396f0:	mov	w8, #0x1                   	// #1
  2396f4:	strb	w8, [x19, #1945]
  2396f8:	ldr	x19, [sp, #16]
  2396fc:	ldp	x29, x30, [sp], #32
  239700:	ret
  239704:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  239708:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  23970c:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  239710:	add	x1, x1, #0xb21
  239714:	add	x2, x2, #0x2b9
  239718:	add	x4, x4, #0xdad
  23971c:	mov	w3, #0x5f                  	// #95
  239720:	mov	w0, wzr
  239724:	bl	240790 <log_assert_failed_realm@plt>

0000000000239728 <sd_bus_message_unrefp>:
  239728:	stp	x29, x30, [sp, #-16]!
  23972c:	ldr	x0, [x0]
  239730:	mov	x29, sp
  239734:	cbz	x0, 23973c <sd_bus_message_unrefp+0x14>
  239738:	bl	241300 <sd_bus_message_unref@plt>
  23973c:	ldp	x29, x30, [sp], #16
  239740:	ret

0000000000239744 <session_new>:
  239744:	stp	x29, x30, [sp, #-48]!
  239748:	mov	x29, sp
  23974c:	str	x21, [sp, #16]
  239750:	stp	x20, x19, [sp, #32]
  239754:	str	xzr, [x29, #24]
  239758:	cbz	x0, 23987c <session_new+0x138>
  23975c:	mov	x20, x1
  239760:	cbz	x1, 23989c <session_new+0x158>
  239764:	mov	x21, x2
  239768:	cbz	x2, 2398c0 <session_new+0x17c>
  23976c:	mov	x19, x0
  239770:	mov	x0, x21
  239774:	bl	2417a0 <session_id_valid@plt>
  239778:	tbz	w0, #0, 23984c <session_new+0x108>
  23977c:	bl	239900 <malloc_multiply>
  239780:	str	x0, [x29, #24]
  239784:	cbz	x0, 239854 <session_new+0x110>
  239788:	mov	w8, #0xffffffff            	// #-1
  23978c:	movi	v0.2d, #0x0
  239790:	str	w8, [x0, #80]
  239794:	stur	x8, [x0, #148]
  239798:	mov	x8, #0xffffffffffffffff    	// #-1
  23979c:	str	x20, [x0]
  2397a0:	str	xzr, [x0, #72]
  2397a4:	stur	q0, [x0, #8]
  2397a8:	stur	q0, [x0, #24]
  2397ac:	stur	q0, [x0, #40]
  2397b0:	stur	q0, [x0, #56]
  2397b4:	stur	q0, [x0, #84]
  2397b8:	stur	q0, [x0, #100]
  2397bc:	stur	q0, [x0, #116]
  2397c0:	stur	q0, [x0, #132]
  2397c4:	stur	x8, [x0, #156]
  2397c8:	stur	q0, [x0, #180]
  2397cc:	stur	q0, [x0, #196]
  2397d0:	stur	q0, [x0, #212]
  2397d4:	stur	q0, [x0, #228]
  2397d8:	stur	q0, [x0, #244]
  2397dc:	str	q0, [x0, #288]
  2397e0:	str	q0, [x0, #164]!
  2397e4:	stp	q0, q0, [x0, #96]
  2397e8:	adrp	x0, 208000 <inhibit_what_to_string.buffer+0x208000>
  2397ec:	add	x0, x0, #0xe37
  2397f0:	mov	x2, #0xffffffffffffffff    	// #-1
  2397f4:	mov	x1, x21
  2397f8:	bl	2413d0 <path_join_internal@plt>
  2397fc:	ldr	x21, [x29, #24]
  239800:	str	x0, [x21, #32]
  239804:	cbz	x0, 239854 <session_new+0x110>
  239808:	bl	2414c0 <basename@plt>
  23980c:	str	x0, [x21, #8]
  239810:	adrp	x0, 254000 <session_vtable+0x3d0>
  239814:	ldr	x0, [x0, #3392]
  239818:	bl	2407b0 <internal_hashmap_new@plt>
  23981c:	str	x0, [x21, #240]
  239820:	cbz	x0, 239854 <session_new+0x110>
  239824:	ldr	x0, [x20, #32]
  239828:	ldr	x1, [x21, #8]
  23982c:	mov	x2, x21
  239830:	bl	240d00 <hashmap_put@plt>
  239834:	tbnz	w0, #31, 239874 <session_new+0x130>
  239838:	ldr	x8, [x29, #24]
  23983c:	mov	w20, wzr
  239840:	str	xzr, [x29, #24]
  239844:	str	x8, [x19]
  239848:	b	239858 <session_new+0x114>
  23984c:	mov	w20, #0xffffffea            	// #-22
  239850:	b	239858 <session_new+0x114>
  239854:	mov	w20, #0xfffffff4            	// #-12
  239858:	add	x0, x29, #0x18
  23985c:	bl	2398e4 <session_freep>
  239860:	mov	w0, w20
  239864:	ldp	x20, x19, [sp, #32]
  239868:	ldr	x21, [sp, #16]
  23986c:	ldp	x29, x30, [sp], #48
  239870:	ret
  239874:	mov	w20, w0
  239878:	b	239858 <session_new+0x114>
  23987c:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  239880:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  239884:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  239888:	add	x1, x1, #0xa82
  23988c:	add	x2, x2, #0x3ce
  239890:	add	x4, x4, #0xa38
  239894:	mov	w3, #0x32                  	// #50
  239898:	bl	240790 <log_assert_failed_realm@plt>
  23989c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  2398a0:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2398a4:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  2398a8:	add	x1, x1, #0x102
  2398ac:	add	x2, x2, #0x3ce
  2398b0:	add	x4, x4, #0xa38
  2398b4:	mov	w3, #0x33                  	// #51
  2398b8:	mov	w0, wzr
  2398bc:	bl	240790 <log_assert_failed_realm@plt>
  2398c0:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  2398c4:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2398c8:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  2398cc:	add	x1, x1, #0x11a
  2398d0:	add	x2, x2, #0x3ce
  2398d4:	add	x4, x4, #0xa38
  2398d8:	mov	w3, #0x34                  	// #52
  2398dc:	mov	w0, wzr
  2398e0:	bl	240790 <log_assert_failed_realm@plt>

00000000002398e4 <session_freep>:
  2398e4:	stp	x29, x30, [sp, #-16]!
  2398e8:	ldr	x0, [x0]
  2398ec:	mov	x29, sp
  2398f0:	cbz	x0, 2398f8 <session_freep+0x14>
  2398f4:	bl	239934 <session_free>
  2398f8:	ldp	x29, x30, [sp], #16
  2398fc:	ret

0000000000239900 <malloc_multiply>:
  239900:	stp	x29, x30, [sp, #-16]!
  239904:	mov	w0, #0x130                 	// #304
  239908:	mov	w1, #0x1                   	// #1
  23990c:	mov	x29, sp
  239910:	bl	23c890 <size_multiply_overflow>
  239914:	tbz	w0, #0, 239924 <malloc_multiply+0x24>
  239918:	mov	x0, xzr
  23991c:	ldp	x29, x30, [sp], #16
  239920:	ret
  239924:	mov	w0, #0x130                 	// #304
  239928:	bl	2408c0 <malloc@plt>
  23992c:	ldp	x29, x30, [sp], #16
  239930:	ret

0000000000239934 <session_free>:
  239934:	stp	x29, x30, [sp, #-48]!
  239938:	str	x21, [sp, #16]
  23993c:	stp	x20, x19, [sp, #32]
  239940:	mov	x29, sp
  239944:	cbz	x0, 239b50 <session_free+0x21c>
  239948:	ldrb	w8, [x0, #209]
  23994c:	mov	x19, x0
  239950:	tbz	w8, #0, 239994 <session_free+0x60>
  239954:	ldr	x9, [x19, #288]
  239958:	ldr	x8, [x19]
  23995c:	cbz	x9, 239968 <session_free+0x34>
  239960:	ldr	x10, [x19, #296]
  239964:	str	x10, [x9, #296]
  239968:	ldr	x9, [x19, #296]
  23996c:	cbz	x9, 239978 <session_free+0x44>
  239970:	add	x8, x9, #0x120
  239974:	b	239984 <session_free+0x50>
  239978:	ldr	x9, [x8, #88]!
  23997c:	cmp	x9, x19
  239980:	b.ne	239bac <session_free+0x278>  // b.any
  239984:	add	x9, x19, #0x120
  239988:	ldr	x10, [x9]
  23998c:	str	x10, [x8]
  239990:	stp	xzr, xzr, [x9]
  239994:	ldr	x0, [x19, #224]
  239998:	bl	240810 <sd_event_source_unref@plt>
  23999c:	str	x0, [x19, #224]
  2399a0:	mov	x0, x19
  2399a4:	bl	239bd0 <session_drop_controller>
  2399a8:	ldr	x0, [x19, #240]
  2399ac:	bl	239c40 <hashmap_first>
  2399b0:	cbz	x0, 2399bc <session_free+0x88>
  2399b4:	bl	238bb4 <session_device_free>
  2399b8:	b	2399a8 <session_free+0x74>
  2399bc:	ldr	x0, [x19, #240]
  2399c0:	bl	239c5c <hashmap_free>
  2399c4:	ldr	x8, [x19, #40]
  2399c8:	cbz	x8, 239a20 <session_free+0xec>
  2399cc:	ldr	x9, [x19, #256]
  2399d0:	cbz	x9, 2399dc <session_free+0xa8>
  2399d4:	ldr	x10, [x19, #264]
  2399d8:	str	x10, [x9, #264]
  2399dc:	ldr	x9, [x19, #264]
  2399e0:	cbz	x9, 2399ec <session_free+0xb8>
  2399e4:	add	x8, x9, #0x100
  2399e8:	b	2399f8 <session_free+0xc4>
  2399ec:	ldr	x9, [x8, #128]!
  2399f0:	cmp	x9, x19
  2399f4:	b.ne	239b64 <session_free+0x230>  // b.any
  2399f8:	ldr	x9, [x19, #256]
  2399fc:	add	x10, x19, #0x100
  239a00:	str	x9, [x8]
  239a04:	stp	xzr, xzr, [x10]
  239a08:	ldr	x0, [x19, #40]
  239a0c:	ldr	x8, [x0, #80]
  239a10:	cmp	x8, x19
  239a14:	b.ne	239a1c <session_free+0xe8>  // b.any
  239a18:	str	xzr, [x0, #80]
  239a1c:	bl	23f1b8 <user_update_last_session_timer>
  239a20:	ldr	x0, [x19, #136]
  239a24:	cbz	x0, 239a90 <session_free+0x15c>
  239a28:	ldr	x8, [x0, #32]
  239a2c:	cmp	x8, x19
  239a30:	b.ne	239a38 <session_free+0x104>  // b.any
  239a34:	str	xzr, [x0, #32]
  239a38:	ldr	x8, [x0, #40]
  239a3c:	cmp	x8, x19
  239a40:	b.ne	239a48 <session_free+0x114>  // b.any
  239a44:	str	xzr, [x0, #40]
  239a48:	mov	x1, x19
  239a4c:	bl	235794 <seat_evict_position>
  239a50:	ldr	x9, [x19, #272]
  239a54:	ldr	x8, [x19, #136]
  239a58:	cbz	x9, 239a64 <session_free+0x130>
  239a5c:	ldr	x10, [x19, #280]
  239a60:	str	x10, [x9, #280]
  239a64:	ldr	x9, [x19, #280]
  239a68:	cbz	x9, 239a74 <session_free+0x140>
  239a6c:	add	x8, x9, #0x110
  239a70:	b	239a80 <session_free+0x14c>
  239a74:	ldr	x9, [x8, #48]!
  239a78:	cmp	x9, x19
  239a7c:	b.ne	239b88 <session_free+0x254>  // b.any
  239a80:	add	x9, x19, #0x110
  239a84:	ldr	x10, [x9]
  239a88:	str	x10, [x8]
  239a8c:	stp	xzr, xzr, [x9]
  239a90:	ldr	x1, [x19, #120]
  239a94:	cbz	x1, 239aac <session_free+0x178>
  239a98:	ldr	x8, [x19]
  239a9c:	ldr	x0, [x8, #216]
  239aa0:	bl	239c78 <hashmap_remove>
  239aa4:	ldr	x0, [x19, #120]
  239aa8:	bl	240890 <free@plt>
  239aac:	ldr	w20, [x19, #152]
  239ab0:	mov	w0, w20
  239ab4:	bl	239c8c <pid_is_valid>
  239ab8:	tbz	w0, #0, 239adc <session_free+0x1a8>
  239abc:	ldr	x8, [x19]
  239ac0:	mov	w0, w20
  239ac4:	ldr	x21, [x8, #40]
  239ac8:	bl	239cac <PID_TO_PTR>
  239acc:	mov	x1, x0
  239ad0:	mov	x0, x21
  239ad4:	mov	x2, x19
  239ad8:	bl	239c98 <hashmap_remove_value>
  239adc:	ldr	x0, [x19, #128]
  239ae0:	bl	240890 <free@plt>
  239ae4:	ldr	x0, [x19, #216]
  239ae8:	bl	241300 <sd_bus_message_unref@plt>
  239aec:	ldr	x0, [x19, #72]
  239af0:	bl	240890 <free@plt>
  239af4:	ldr	x0, [x19, #64]
  239af8:	bl	240890 <free@plt>
  239afc:	ldr	x0, [x19, #96]
  239b00:	bl	240890 <free@plt>
  239b04:	ldr	x0, [x19, #88]
  239b08:	bl	240890 <free@plt>
  239b0c:	ldr	x0, [x19, #104]
  239b10:	bl	240890 <free@plt>
  239b14:	ldr	x0, [x19, #112]
  239b18:	bl	240890 <free@plt>
  239b1c:	ldp	x8, x1, [x19]
  239b20:	ldr	x0, [x8, #32]
  239b24:	bl	239c78 <hashmap_remove>
  239b28:	ldr	x0, [x19, #176]
  239b2c:	bl	240810 <sd_event_source_unref@plt>
  239b30:	ldr	w0, [x19, #160]
  239b34:	bl	240820 <safe_close@plt>
  239b38:	ldr	x0, [x19, #32]
  239b3c:	bl	240890 <free@plt>
  239b40:	ldr	x0, [x19, #168]
  239b44:	bl	240890 <free@plt>
  239b48:	mov	x0, x19
  239b4c:	bl	239cb4 <mfree>
  239b50:	ldp	x20, x19, [sp, #32]
  239b54:	ldr	x21, [sp, #16]
  239b58:	mov	x0, xzr
  239b5c:	ldp	x29, x30, [sp], #48
  239b60:	ret
  239b64:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  239b68:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  239b6c:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  239b70:	add	x1, x1, #0xa19
  239b74:	add	x2, x2, #0x3ce
  239b78:	add	x4, x4, #0xca2
  239b7c:	mov	w3, #0x6a                  	// #106
  239b80:	mov	w0, wzr
  239b84:	bl	240790 <log_assert_failed_realm@plt>
  239b88:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  239b8c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  239b90:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  239b94:	add	x1, x1, #0xa19
  239b98:	add	x2, x2, #0x3ce
  239b9c:	add	x4, x4, #0xca2
  239ba0:	mov	w3, #0x79                  	// #121
  239ba4:	mov	w0, wzr
  239ba8:	bl	240790 <log_assert_failed_realm@plt>
  239bac:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  239bb0:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  239bb4:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  239bb8:	add	x1, x1, #0xa19
  239bbc:	add	x2, x2, #0x3ce
  239bc0:	add	x4, x4, #0xca2
  239bc4:	mov	w3, #0x5e                  	// #94
  239bc8:	mov	w0, wzr
  239bcc:	bl	240790 <log_assert_failed_realm@plt>

0000000000239bd0 <session_drop_controller>:
  239bd0:	stp	x29, x30, [sp, #-32]!
  239bd4:	str	x19, [sp, #16]
  239bd8:	mov	x29, sp
  239bdc:	cbz	x0, 239c20 <session_drop_controller+0x50>
  239be0:	ldr	x8, [x0, #232]
  239be4:	mov	x19, x0
  239be8:	cbz	x8, 239c14 <session_drop_controller+0x44>
  239bec:	ldr	x0, [x19, #248]
  239bf0:	bl	2417b0 <sd_bus_track_unref@plt>
  239bf4:	str	x0, [x19, #248]
  239bf8:	mov	x0, x19
  239bfc:	mov	w1, wzr
  239c00:	bl	23c7c8 <session_release_controller>
  239c04:	mov	x0, x19
  239c08:	bl	239e28 <session_save>
  239c0c:	mov	x0, x19
  239c10:	bl	23b158 <session_restore_vt>
  239c14:	ldr	x19, [sp, #16]
  239c18:	ldp	x29, x30, [sp], #32
  239c1c:	ret
  239c20:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  239c24:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  239c28:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  239c2c:	add	x1, x1, #0x6de
  239c30:	add	x2, x2, #0x3ce
  239c34:	add	x4, x4, #0xf68
  239c38:	mov	w3, #0x567                 	// #1383
  239c3c:	bl	240790 <log_assert_failed_realm@plt>

0000000000239c40 <hashmap_first>:
  239c40:	stp	x29, x30, [sp, #-16]!
  239c44:	mov	w1, wzr
  239c48:	mov	x2, xzr
  239c4c:	mov	x29, sp
  239c50:	bl	2408a0 <internal_hashmap_first_key_and_value@plt>
  239c54:	ldp	x29, x30, [sp], #16
  239c58:	ret

0000000000239c5c <hashmap_free>:
  239c5c:	stp	x29, x30, [sp, #-16]!
  239c60:	mov	x1, xzr
  239c64:	mov	x2, xzr
  239c68:	mov	x29, sp
  239c6c:	bl	2408b0 <internal_hashmap_free@plt>
  239c70:	ldp	x29, x30, [sp], #16
  239c74:	ret

0000000000239c78 <hashmap_remove>:
  239c78:	stp	x29, x30, [sp, #-16]!
  239c7c:	mov	x29, sp
  239c80:	bl	240d20 <internal_hashmap_remove@plt>
  239c84:	ldp	x29, x30, [sp], #16
  239c88:	ret

0000000000239c8c <pid_is_valid>:
  239c8c:	cmp	w0, #0x0
  239c90:	cset	w0, gt
  239c94:	ret

0000000000239c98 <hashmap_remove_value>:
  239c98:	stp	x29, x30, [sp, #-16]!
  239c9c:	mov	x29, sp
  239ca0:	bl	2416f0 <internal_hashmap_remove_value@plt>
  239ca4:	ldp	x29, x30, [sp], #16
  239ca8:	ret

0000000000239cac <PID_TO_PTR>:
  239cac:	sxtw	x0, w0
  239cb0:	ret

0000000000239cb4 <mfree>:
  239cb4:	stp	x29, x30, [sp, #-16]!
  239cb8:	mov	x29, sp
  239cbc:	bl	240890 <free@plt>
  239cc0:	ldp	x29, x30, [sp], #16
  239cc4:	ret

0000000000239cc8 <session_set_user>:
  239cc8:	stp	x29, x30, [sp, #-16]!
  239ccc:	mov	x29, sp
  239cd0:	cbz	x0, 239d08 <session_set_user+0x40>
  239cd4:	ldr	x8, [x0, #40]
  239cd8:	cbnz	x8, 239d28 <session_set_user+0x60>
  239cdc:	str	x1, [x0, #40]
  239ce0:	ldr	x8, [x1, #128]
  239ce4:	str	x8, [x0, #256]
  239ce8:	cbz	x8, 239cf0 <session_set_user+0x28>
  239cec:	str	x0, [x8, #264]
  239cf0:	str	xzr, [x0, #264]
  239cf4:	str	x0, [x1, #128]
  239cf8:	mov	x0, x1
  239cfc:	bl	23f1b8 <user_update_last_session_timer>
  239d00:	ldp	x29, x30, [sp], #16
  239d04:	ret
  239d08:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  239d0c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  239d10:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  239d14:	add	x1, x1, #0x6de
  239d18:	add	x2, x2, #0x3ce
  239d1c:	add	x4, x4, #0x1a6
  239d20:	mov	w3, #0x9d                  	// #157
  239d24:	bl	240790 <log_assert_failed_realm@plt>
  239d28:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  239d2c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  239d30:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  239d34:	add	x1, x1, #0xe4b
  239d38:	add	x2, x2, #0x3ce
  239d3c:	add	x4, x4, #0x1a6
  239d40:	mov	w3, #0x9e                  	// #158
  239d44:	mov	w0, wzr
  239d48:	bl	240790 <log_assert_failed_realm@plt>

0000000000239d4c <session_set_leader>:
  239d4c:	stp	x29, x30, [sp, #-48]!
  239d50:	stp	x22, x21, [sp, #16]
  239d54:	stp	x20, x19, [sp, #32]
  239d58:	mov	x29, sp
  239d5c:	cbz	x0, 239e08 <session_set_leader+0xbc>
  239d60:	mov	x20, x0
  239d64:	mov	w0, w1
  239d68:	mov	w19, w1
  239d6c:	bl	239c8c <pid_is_valid>
  239d70:	tbz	w0, #0, 239d88 <session_set_leader+0x3c>
  239d74:	ldr	w8, [x20, #152]
  239d78:	cmp	w8, w19
  239d7c:	b.ne	239d90 <session_set_leader+0x44>  // b.any
  239d80:	mov	w0, wzr
  239d84:	b	239df8 <session_set_leader+0xac>
  239d88:	mov	w0, #0xffffffea            	// #-22
  239d8c:	b	239df8 <session_set_leader+0xac>
  239d90:	ldr	x8, [x20]
  239d94:	mov	w0, w19
  239d98:	ldr	x21, [x8, #40]
  239d9c:	bl	239cac <PID_TO_PTR>
  239da0:	mov	x1, x0
  239da4:	mov	x0, x21
  239da8:	mov	x2, x20
  239dac:	bl	240d00 <hashmap_put@plt>
  239db0:	tbnz	w0, #31, 239df8 <session_set_leader+0xac>
  239db4:	ldr	w21, [x20, #152]
  239db8:	mov	w0, w21
  239dbc:	bl	239c8c <pid_is_valid>
  239dc0:	tbz	w0, #0, 239de4 <session_set_leader+0x98>
  239dc4:	ldr	x8, [x20]
  239dc8:	mov	w0, w21
  239dcc:	ldr	x22, [x8, #40]
  239dd0:	bl	239cac <PID_TO_PTR>
  239dd4:	mov	x1, x0
  239dd8:	mov	x0, x22
  239ddc:	mov	x2, x20
  239de0:	bl	239c98 <hashmap_remove_value>
  239de4:	add	x1, x20, #0x9c
  239de8:	mov	w0, w19
  239dec:	str	w19, [x20, #152]
  239df0:	bl	241120 <audit_session_from_pid@plt>
  239df4:	mov	w0, #0x1                   	// #1
  239df8:	ldp	x20, x19, [sp, #32]
  239dfc:	ldp	x22, x21, [sp, #16]
  239e00:	ldp	x29, x30, [sp], #48
  239e04:	ret
  239e08:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  239e0c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  239e10:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  239e14:	add	x1, x1, #0x6de
  239e18:	add	x2, x2, #0x3ce
  239e1c:	add	x4, x4, #0xeac
  239e20:	mov	w3, #0xa9                  	// #169
  239e24:	bl	240790 <log_assert_failed_realm@plt>

0000000000239e28 <session_save>:
  239e28:	sub	sp, sp, #0x60
  239e2c:	stp	x29, x30, [sp, #16]
  239e30:	add	x29, sp, #0x10
  239e34:	str	x25, [sp, #32]
  239e38:	stp	x24, x23, [sp, #48]
  239e3c:	stp	x22, x21, [sp, #64]
  239e40:	stp	x20, x19, [sp, #80]
  239e44:	str	xzr, [x29, #24]
  239e48:	str	xzr, [sp, #8]
  239e4c:	cbz	x0, 23a2c0 <session_save+0x498>
  239e50:	ldr	x8, [x0, #40]
  239e54:	mov	x19, x0
  239e58:	cbz	x8, 239e6c <session_save+0x44>
  239e5c:	ldrb	w8, [x19, #209]
  239e60:	tbnz	w8, #1, 239e74 <session_save+0x4c>
  239e64:	mov	w19, wzr
  239e68:	b	23a290 <session_save+0x468>
  239e6c:	mov	w19, #0xffffff8c            	// #-116
  239e70:	b	23a290 <session_save+0x468>
  239e74:	adrp	x0, 208000 <inhibit_what_to_string.buffer+0x208000>
  239e78:	add	x0, x0, #0xe37
  239e7c:	mov	w1, #0x1ed                 	// #493
  239e80:	mov	w4, #0x2                   	// #2
  239e84:	mov	w2, wzr
  239e88:	mov	w3, wzr
  239e8c:	bl	2411a0 <mkdir_safe_label@plt>
  239e90:	tbnz	w0, #31, 23a224 <session_save+0x3fc>
  239e94:	ldr	x0, [x19, #32]
  239e98:	add	x1, sp, #0x8
  239e9c:	add	x2, x29, #0x18
  239ea0:	bl	241440 <fopen_temporary@plt>
  239ea4:	mov	w20, w0
  239ea8:	tbnz	w0, #31, 23a228 <session_save+0x400>
  239eac:	ldr	x0, [sp, #8]
  239eb0:	bl	241450 <fileno@plt>
  239eb4:	mov	w1, #0x1a4                 	// #420
  239eb8:	bl	241460 <fchmod@plt>
  239ebc:	ldr	x8, [x19, #40]
  239ec0:	ldr	x21, [sp, #8]
  239ec4:	mov	x0, x19
  239ec8:	ldr	w22, [x8, #8]
  239ecc:	ldr	x23, [x8, #16]
  239ed0:	bl	23a310 <session_is_active>
  239ed4:	ldr	x8, [x19, #40]
  239ed8:	and	w24, w0, #0x1
  239edc:	mov	x0, x19
  239ee0:	ldr	x8, [x8, #80]
  239ee4:	cmp	x8, x19
  239ee8:	cset	w25, eq  // eq = none
  239eec:	bl	23a384 <session_get_state>
  239ef0:	bl	23a364 <session_state_to_string>
  239ef4:	ldrb	w7, [x19, #84]
  239ef8:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  239efc:	mov	x6, x0
  239f00:	add	x1, x1, #0x67d
  239f04:	mov	x0, x21
  239f08:	mov	w2, w22
  239f0c:	mov	x3, x23
  239f10:	mov	w4, w24
  239f14:	mov	w5, w25
  239f18:	bl	241470 <fprintf@plt>
  239f1c:	ldr	w0, [x19, #20]
  239f20:	tbnz	w0, #31, 239f40 <session_save+0x118>
  239f24:	ldr	x21, [sp, #8]
  239f28:	bl	23a400 <session_type_to_string>
  239f2c:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  239f30:	mov	x2, x0
  239f34:	add	x1, x1, #0xe13
  239f38:	mov	x0, x21
  239f3c:	bl	241470 <fprintf@plt>
  239f40:	ldr	w0, [x19, #24]
  239f44:	tbnz	w0, #31, 239f64 <session_save+0x13c>
  239f48:	ldr	x21, [sp, #8]
  239f4c:	bl	23a420 <session_class_to_string>
  239f50:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  239f54:	mov	x2, x0
  239f58:	add	x1, x1, #0x871
  239f5c:	mov	x0, x21
  239f60:	bl	241470 <fprintf@plt>
  239f64:	ldr	x2, [x19, #120]
  239f68:	cbz	x2, 239f7c <session_save+0x154>
  239f6c:	ldr	x0, [sp, #8]
  239f70:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  239f74:	add	x1, x1, #0x2ea
  239f78:	bl	241470 <fprintf@plt>
  239f7c:	ldr	x2, [x19, #128]
  239f80:	cbz	x2, 239f94 <session_save+0x16c>
  239f84:	ldr	x0, [sp, #8]
  239f88:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  239f8c:	add	x1, x1, #0xe1c
  239f90:	bl	241470 <fprintf@plt>
  239f94:	ldr	x2, [x19, #168]
  239f98:	cbz	x2, 239fac <session_save+0x184>
  239f9c:	ldr	x0, [sp, #8]
  239fa0:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  239fa4:	add	x1, x1, #0x403
  239fa8:	bl	241470 <fprintf@plt>
  239fac:	ldr	x8, [x19, #136]
  239fb0:	cbz	x8, 239fc8 <session_save+0x1a0>
  239fb4:	ldr	x0, [sp, #8]
  239fb8:	ldr	x2, [x8, #8]
  239fbc:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  239fc0:	add	x1, x1, #0x6de
  239fc4:	bl	241470 <fprintf@plt>
  239fc8:	ldr	x2, [x19, #72]
  239fcc:	cbz	x2, 239fe0 <session_save+0x1b8>
  239fd0:	ldr	x0, [sp, #8]
  239fd4:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  239fd8:	add	x1, x1, #0x4f6
  239fdc:	bl	241470 <fprintf@plt>
  239fe0:	ldr	w0, [x19, #80]
  239fe4:	tbnz	w0, #31, 23a004 <session_save+0x1dc>
  239fe8:	ldr	x21, [sp, #8]
  239fec:	bl	23a440 <tty_validity_to_string>
  239ff0:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  239ff4:	mov	x2, x0
  239ff8:	add	x1, x1, #0xcf1
  239ffc:	mov	x0, x21
  23a000:	bl	241470 <fprintf@plt>
  23a004:	ldr	x2, [x19, #64]
  23a008:	cbz	x2, 23a01c <session_save+0x1f4>
  23a00c:	ldr	x0, [sp, #8]
  23a010:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  23a014:	add	x1, x1, #0x87b
  23a018:	bl	241470 <fprintf@plt>
  23a01c:	ldr	x0, [x19, #96]
  23a020:	cbz	x0, 23a060 <session_save+0x238>
  23a024:	bl	2411b0 <cescape@plt>
  23a028:	str	x0, [sp]
  23a02c:	cbz	x0, 23a04c <session_save+0x224>
  23a030:	mov	x2, x0
  23a034:	ldr	x0, [sp, #8]
  23a038:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  23a03c:	add	x1, x1, #0x241
  23a040:	bl	241470 <fprintf@plt>
  23a044:	mov	w21, #0x1                   	// #1
  23a048:	b	23a054 <session_save+0x22c>
  23a04c:	mov	w21, wzr
  23a050:	mov	w20, #0xfffffff4            	// #-12
  23a054:	mov	x0, sp
  23a058:	bl	23a2e0 <freep>
  23a05c:	cbz	w21, 23a228 <session_save+0x400>
  23a060:	ldr	x0, [x19, #88]
  23a064:	cbz	x0, 23a0a4 <session_save+0x27c>
  23a068:	bl	2411b0 <cescape@plt>
  23a06c:	str	x0, [sp]
  23a070:	cbz	x0, 23a090 <session_save+0x268>
  23a074:	mov	x2, x0
  23a078:	ldr	x0, [sp, #8]
  23a07c:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  23a080:	add	x1, x1, #0xd02
  23a084:	bl	241470 <fprintf@plt>
  23a088:	mov	w21, #0x1                   	// #1
  23a08c:	b	23a098 <session_save+0x270>
  23a090:	mov	w21, wzr
  23a094:	mov	w20, #0xfffffff4            	// #-12
  23a098:	mov	x0, sp
  23a09c:	bl	23a2e0 <freep>
  23a0a0:	cbz	w21, 23a228 <session_save+0x400>
  23a0a4:	ldr	x0, [x19, #104]
  23a0a8:	cbz	x0, 23a0e8 <session_save+0x2c0>
  23a0ac:	bl	2411b0 <cescape@plt>
  23a0b0:	str	x0, [sp]
  23a0b4:	cbz	x0, 23a0d4 <session_save+0x2ac>
  23a0b8:	mov	x2, x0
  23a0bc:	ldr	x0, [sp, #8]
  23a0c0:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23a0c4:	add	x1, x1, #0x5f
  23a0c8:	bl	241470 <fprintf@plt>
  23a0cc:	mov	w21, #0x1                   	// #1
  23a0d0:	b	23a0dc <session_save+0x2b4>
  23a0d4:	mov	w21, wzr
  23a0d8:	mov	w20, #0xfffffff4            	// #-12
  23a0dc:	mov	x0, sp
  23a0e0:	bl	23a2e0 <freep>
  23a0e4:	cbz	w21, 23a228 <session_save+0x400>
  23a0e8:	ldr	x0, [x19, #112]
  23a0ec:	cbz	x0, 23a12c <session_save+0x304>
  23a0f0:	bl	2411b0 <cescape@plt>
  23a0f4:	str	x0, [sp]
  23a0f8:	cbz	x0, 23a118 <session_save+0x2f0>
  23a0fc:	mov	x2, x0
  23a100:	ldr	x0, [sp, #8]
  23a104:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23a108:	add	x1, x1, #0x4ae
  23a10c:	bl	241470 <fprintf@plt>
  23a110:	mov	w21, #0x1                   	// #1
  23a114:	b	23a120 <session_save+0x2f8>
  23a118:	mov	w21, wzr
  23a11c:	mov	w20, #0xfffffff4            	// #-12
  23a120:	mov	x0, sp
  23a124:	bl	23a2e0 <freep>
  23a128:	cbz	w21, 23a228 <session_save+0x400>
  23a12c:	ldr	x0, [x19, #136]
  23a130:	cbz	x0, 23a150 <session_save+0x328>
  23a134:	bl	234d50 <seat_has_vts>
  23a138:	tbz	w0, #0, 23a150 <session_save+0x328>
  23a13c:	ldr	x0, [sp, #8]
  23a140:	ldr	w2, [x19, #144]
  23a144:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23a148:	add	x1, x1, #0x1fe
  23a14c:	bl	241470 <fprintf@plt>
  23a150:	ldr	w8, [x19, #144]
  23a154:	cbnz	w8, 23a16c <session_save+0x344>
  23a158:	ldr	x0, [sp, #8]
  23a15c:	ldr	w2, [x19, #16]
  23a160:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23a164:	add	x1, x1, #0x6e7
  23a168:	bl	241470 <fprintf@plt>
  23a16c:	ldr	w20, [x19, #152]
  23a170:	mov	w0, w20
  23a174:	bl	239c8c <pid_is_valid>
  23a178:	tbz	w0, #0, 23a190 <session_save+0x368>
  23a17c:	ldr	x0, [sp, #8]
  23a180:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23a184:	add	x1, x1, #0x6f4
  23a188:	mov	w2, w20
  23a18c:	bl	241470 <fprintf@plt>
  23a190:	ldr	w20, [x19, #156]
  23a194:	mov	w0, w20
  23a198:	bl	23a460 <audit_session_is_valid>
  23a19c:	tbz	w0, #0, 23a1b4 <session_save+0x38c>
  23a1a0:	ldr	x0, [sp, #8]
  23a1a4:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23a1a8:	add	x1, x1, #0xcc3
  23a1ac:	mov	w2, w20
  23a1b0:	bl	241470 <fprintf@plt>
  23a1b4:	add	x0, x19, #0x30
  23a1b8:	bl	23a470 <dual_timestamp_is_set>
  23a1bc:	tbz	w0, #0, 23a1d4 <session_save+0x3ac>
  23a1c0:	ldr	x0, [sp, #8]
  23a1c4:	ldp	x2, x3, [x19, #48]
  23a1c8:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23a1cc:	add	x1, x1, #0xe54
  23a1d0:	bl	241470 <fprintf@plt>
  23a1d4:	ldr	x2, [x19, #232]
  23a1d8:	cbz	x2, 23a1f8 <session_save+0x3d0>
  23a1dc:	ldr	x0, [sp, #8]
  23a1e0:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23a1e4:	add	x1, x1, #0x3e9
  23a1e8:	bl	241470 <fprintf@plt>
  23a1ec:	ldr	x1, [sp, #8]
  23a1f0:	mov	x0, x19
  23a1f4:	bl	23a4ac <session_save_devices>
  23a1f8:	ldr	x0, [sp, #8]
  23a1fc:	bl	241480 <fflush_and_check@plt>
  23a200:	tbnz	w0, #31, 23a224 <session_save+0x3fc>
  23a204:	ldr	x0, [x29, #24]
  23a208:	ldr	x1, [x19, #32]
  23a20c:	bl	241490 <rename@plt>
  23a210:	tbz	w0, #31, 239e64 <session_save+0x3c>
  23a214:	bl	240930 <__errno_location@plt>
  23a218:	ldr	w8, [x0]
  23a21c:	neg	w20, w8
  23a220:	b	23a228 <session_save+0x400>
  23a224:	mov	w20, w0
  23a228:	ldr	x0, [x19, #32]
  23a22c:	bl	2411d0 <unlink@plt>
  23a230:	ldr	x0, [x29, #24]
  23a234:	cbz	x0, 23a23c <session_save+0x414>
  23a238:	bl	2411d0 <unlink@plt>
  23a23c:	mov	w0, wzr
  23a240:	bl	240750 <log_get_max_level_realm@plt>
  23a244:	cmp	w0, #0x3
  23a248:	b.lt	23a280 <session_save+0x458>  // b.tstop
  23a24c:	ldr	x6, [x19, #32]
  23a250:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23a254:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23a258:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23a25c:	add	x2, x2, #0x3ce
  23a260:	add	x4, x4, #0xccd
  23a264:	add	x5, x5, #0xef8
  23a268:	mov	w0, #0x3                   	// #3
  23a26c:	mov	w3, #0x163                 	// #355
  23a270:	mov	w1, w20
  23a274:	bl	240770 <log_internal_realm@plt>
  23a278:	mov	w19, w0
  23a27c:	b	23a290 <session_save+0x468>
  23a280:	cmp	w20, #0x0
  23a284:	mov	w8, wzr
  23a288:	cneg	w9, w20, mi  // mi = first
  23a28c:	sub	w19, w8, w9, uxtb
  23a290:	add	x0, sp, #0x8
  23a294:	bl	23a2f8 <fclosep>
  23a298:	add	x0, x29, #0x18
  23a29c:	bl	23a2e0 <freep>
  23a2a0:	mov	w0, w19
  23a2a4:	ldp	x20, x19, [sp, #80]
  23a2a8:	ldp	x22, x21, [sp, #64]
  23a2ac:	ldp	x24, x23, [sp, #48]
  23a2b0:	ldr	x25, [sp, #32]
  23a2b4:	ldp	x29, x30, [sp, #16]
  23a2b8:	add	sp, sp, #0x60
  23a2bc:	ret
  23a2c0:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23a2c4:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23a2c8:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23a2cc:	add	x1, x1, #0x6de
  23a2d0:	add	x2, x2, #0x3ce
  23a2d4:	add	x4, x4, #0x3b0
  23a2d8:	mov	w3, #0xcf                  	// #207
  23a2dc:	bl	240790 <log_assert_failed_realm@plt>

000000000023a2e0 <freep>:
  23a2e0:	stp	x29, x30, [sp, #-16]!
  23a2e4:	ldr	x0, [x0]
  23a2e8:	mov	x29, sp
  23a2ec:	bl	240890 <free@plt>
  23a2f0:	ldp	x29, x30, [sp], #16
  23a2f4:	ret

000000000023a2f8 <fclosep>:
  23a2f8:	stp	x29, x30, [sp, #-16]!
  23a2fc:	ldr	x0, [x0]
  23a300:	mov	x29, sp
  23a304:	bl	2414a0 <safe_fclose@plt>
  23a308:	ldp	x29, x30, [sp], #16
  23a30c:	ret

000000000023a310 <session_is_active>:
  23a310:	stp	x29, x30, [sp, #-16]!
  23a314:	mov	x29, sp
  23a318:	cbz	x0, 23a344 <session_is_active+0x34>
  23a31c:	ldr	x8, [x0, #136]
  23a320:	cbz	x8, 23a338 <session_is_active+0x28>
  23a324:	ldr	x8, [x8, #32]
  23a328:	cmp	x8, x0
  23a32c:	cset	w0, eq  // eq = none
  23a330:	ldp	x29, x30, [sp], #16
  23a334:	ret
  23a338:	mov	w0, #0x1                   	// #1
  23a33c:	ldp	x29, x30, [sp], #16
  23a340:	ret
  23a344:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23a348:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23a34c:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23a350:	add	x1, x1, #0x6de
  23a354:	add	x2, x2, #0x3ce
  23a358:	add	x4, x4, #0x4ba
  23a35c:	mov	w3, #0x379                 	// #889
  23a360:	bl	240790 <log_assert_failed_realm@plt>

000000000023a364 <session_state_to_string>:
  23a364:	cmp	w0, #0x3
  23a368:	b.ls	23a374 <session_state_to_string+0x10>  // b.plast
  23a36c:	mov	x0, xzr
  23a370:	ret
  23a374:	adrp	x8, 254000 <session_vtable+0x3d0>
  23a378:	add	x8, x8, #0x610
  23a37c:	ldr	x0, [x8, w0, sxtw #3]
  23a380:	ret

000000000023a384 <session_get_state>:
  23a384:	stp	x29, x30, [sp, #-16]!
  23a388:	mov	x29, sp
  23a38c:	cbz	x0, 23a3e0 <session_get_state+0x5c>
  23a390:	ldrb	w8, [x0, #209]
  23a394:	tbnz	w8, #2, 23a3a0 <session_get_state+0x1c>
  23a398:	ldr	x8, [x0, #224]
  23a39c:	cbz	x8, 23a3ac <session_get_state+0x28>
  23a3a0:	mov	w0, #0x3                   	// #3
  23a3a4:	ldp	x29, x30, [sp], #16
  23a3a8:	ret
  23a3ac:	ldr	x8, [x0, #128]
  23a3b0:	cbz	x8, 23a3c0 <session_get_state+0x3c>
  23a3b4:	mov	w0, wzr
  23a3b8:	ldp	x29, x30, [sp], #16
  23a3bc:	ret
  23a3c0:	ldr	w8, [x0, #160]
  23a3c4:	tbnz	w8, #31, 23a3b4 <session_get_state+0x30>
  23a3c8:	bl	23a310 <session_is_active>
  23a3cc:	tst	w0, #0x1
  23a3d0:	mov	w8, #0x1                   	// #1
  23a3d4:	cinc	w0, w8, ne  // ne = any
  23a3d8:	ldp	x29, x30, [sp], #16
  23a3dc:	ret
  23a3e0:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23a3e4:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23a3e8:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23a3ec:	add	x1, x1, #0x6de
  23a3f0:	add	x2, x2, #0x3ce
  23a3f4:	add	x4, x4, #0xf0e
  23a3f8:	mov	w3, #0x478                 	// #1144
  23a3fc:	bl	240790 <log_assert_failed_realm@plt>

000000000023a400 <session_type_to_string>:
  23a400:	cmp	w0, #0x5
  23a404:	b.ls	23a410 <session_type_to_string+0x10>  // b.plast
  23a408:	mov	x0, xzr
  23a40c:	ret
  23a410:	adrp	x8, 254000 <session_vtable+0x3d0>
  23a414:	add	x8, x8, #0x630
  23a418:	ldr	x0, [x8, w0, sxtw #3]
  23a41c:	ret

000000000023a420 <session_class_to_string>:
  23a420:	cmp	w0, #0x3
  23a424:	b.ls	23a430 <session_class_to_string+0x10>  // b.plast
  23a428:	mov	x0, xzr
  23a42c:	ret
  23a430:	adrp	x8, 254000 <session_vtable+0x3d0>
  23a434:	add	x8, x8, #0x660
  23a438:	ldr	x0, [x8, w0, sxtw #3]
  23a43c:	ret

000000000023a440 <tty_validity_to_string>:
  23a440:	cmp	w0, #0x2
  23a444:	b.ls	23a450 <tty_validity_to_string+0x10>  // b.plast
  23a448:	mov	x0, xzr
  23a44c:	ret
  23a450:	adrp	x8, 254000 <session_vtable+0x3d0>
  23a454:	add	x8, x8, #0x690
  23a458:	ldr	x0, [x8, w0, sxtw #3]
  23a45c:	ret

000000000023a460 <audit_session_is_valid>:
  23a460:	add	w8, w0, #0x1
  23a464:	cmp	w8, #0x1
  23a468:	cset	w0, hi  // hi = pmore
  23a46c:	ret

000000000023a470 <dual_timestamp_is_set>:
  23a470:	stp	x29, x30, [sp, #-32]!
  23a474:	str	x19, [sp, #16]
  23a478:	mov	x19, x0
  23a47c:	ldr	x0, [x0]
  23a480:	mov	x29, sp
  23a484:	bl	23c8a0 <timestamp_is_set>
  23a488:	tbz	w0, #0, 23a494 <dual_timestamp_is_set+0x24>
  23a48c:	mov	w0, #0x1                   	// #1
  23a490:	b	23a49c <dual_timestamp_is_set+0x2c>
  23a494:	ldr	x0, [x19, #8]
  23a498:	bl	23c8a0 <timestamp_is_set>
  23a49c:	ldr	x19, [sp, #16]
  23a4a0:	and	w0, w0, #0x1
  23a4a4:	ldp	x29, x30, [sp], #32
  23a4a8:	ret

000000000023a4ac <session_save_devices>:
  23a4ac:	sub	sp, sp, #0x50
  23a4b0:	stp	x29, x30, [sp, #16]
  23a4b4:	stp	x22, x21, [sp, #48]
  23a4b8:	stp	x20, x19, [sp, #64]
  23a4bc:	mov	x20, x0
  23a4c0:	ldr	x0, [x0, #240]
  23a4c4:	str	x23, [sp, #32]
  23a4c8:	add	x29, sp, #0x10
  23a4cc:	mov	x19, x1
  23a4d0:	bl	23c8b0 <hashmap_isempty>
  23a4d4:	tbnz	w0, #0, 23a568 <session_save_devices+0xbc>
  23a4d8:	adrp	x0, 207000 <inhibit_what_to_string.buffer+0x207000>
  23a4dc:	add	x0, x0, #0x8a6
  23a4e0:	mov	w1, #0x8                   	// #8
  23a4e4:	mov	w2, #0x1                   	// #1
  23a4e8:	mov	x3, x19
  23a4ec:	bl	2415a0 <fwrite@plt>
  23a4f0:	mov	w8, #0xfffffffe            	// #-2
  23a4f4:	str	w8, [sp]
  23a4f8:	str	xzr, [sp, #8]
  23a4fc:	ldr	x0, [x20, #240]
  23a500:	mov	x1, sp
  23a504:	add	x2, x29, #0x18
  23a508:	bl	23c8cc <hashmap_iterate>
  23a50c:	tbz	w0, #0, 23a55c <session_save_devices+0xb0>
  23a510:	adrp	x21, 207000 <inhibit_what_to_string.buffer+0x207000>
  23a514:	add	x21, x21, #0xdbf
  23a518:	ldr	x8, [x29, #24]
  23a51c:	ldr	x22, [x8, #16]
  23a520:	mov	x0, x22
  23a524:	bl	240c00 <gnu_dev_major@plt>
  23a528:	mov	w23, w0
  23a52c:	mov	x0, x22
  23a530:	bl	240c10 <gnu_dev_minor@plt>
  23a534:	mov	w3, w0
  23a538:	mov	x0, x19
  23a53c:	mov	x1, x21
  23a540:	mov	w2, w23
  23a544:	bl	241470 <fprintf@plt>
  23a548:	ldr	x0, [x20, #240]
  23a54c:	mov	x1, sp
  23a550:	add	x2, x29, #0x18
  23a554:	bl	23c8cc <hashmap_iterate>
  23a558:	tbnz	w0, #0, 23a518 <session_save_devices+0x6c>
  23a55c:	mov	w0, #0xa                   	// #10
  23a560:	mov	x1, x19
  23a564:	bl	2417c0 <fputc@plt>
  23a568:	ldp	x20, x19, [sp, #64]
  23a56c:	ldp	x22, x21, [sp, #48]
  23a570:	ldr	x23, [sp, #32]
  23a574:	ldp	x29, x30, [sp, #16]
  23a578:	add	sp, sp, #0x50
  23a57c:	ret

000000000023a580 <session_load>:
  23a580:	stp	x29, x30, [sp, #-96]!
  23a584:	stp	x28, x27, [sp, #16]
  23a588:	stp	x26, x25, [sp, #32]
  23a58c:	stp	x24, x23, [sp, #48]
  23a590:	stp	x22, x21, [sp, #64]
  23a594:	stp	x20, x19, [sp, #80]
  23a598:	mov	x29, sp
  23a59c:	sub	sp, sp, #0x210
  23a5a0:	stp	xzr, xzr, [x29, #-24]
  23a5a4:	stp	xzr, xzr, [x29, #-40]
  23a5a8:	stp	xzr, xzr, [x29, #-56]
  23a5ac:	stp	xzr, xzr, [x29, #-72]
  23a5b0:	stp	xzr, xzr, [x29, #-88]
  23a5b4:	stp	xzr, xzr, [x29, #-104]
  23a5b8:	stp	xzr, xzr, [x29, #-120]
  23a5bc:	stp	xzr, xzr, [x29, #-136]
  23a5c0:	cbz	x0, 23acd8 <session_load+0x758>
  23a5c4:	adrp	x17, 207000 <inhibit_what_to_string.buffer+0x207000>
  23a5c8:	sub	x16, x29, #0x80
  23a5cc:	add	x17, x17, #0xd96
  23a5d0:	ldr	x7, [x0, #32]
  23a5d4:	stp	x17, x16, [sp, #320]
  23a5d8:	adrp	x17, 210000 <inhibit_what_to_string.buffer+0x210000>
  23a5dc:	add	x8, x0, #0x78
  23a5e0:	sub	x16, x29, #0x30
  23a5e4:	add	x17, x17, #0xe01
  23a5e8:	stur	x8, [x29, #-152]
  23a5ec:	add	x8, x0, #0x80
  23a5f0:	adrp	x15, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23a5f4:	adrp	x3, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23a5f8:	adrp	x6, 209000 <inhibit_what_to_string.buffer+0x209000>
  23a5fc:	stp	x17, x16, [sp, #160]
  23a600:	adrp	x16, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23a604:	mov	x19, x0
  23a608:	stur	x8, [x29, #-160]
  23a60c:	add	x8, x0, #0xa8
  23a610:	add	x1, x0, #0x48
  23a614:	add	x14, x0, #0x40
  23a618:	add	x10, x0, #0x60
  23a61c:	add	x11, x0, #0x58
  23a620:	add	x12, x0, #0x68
  23a624:	add	x13, x0, #0x70
  23a628:	add	x15, x15, #0x9af
  23a62c:	adrp	x0, 211000 <inhibit_what_to_string.buffer+0x211000>
  23a630:	sub	x2, x29, #0x70
  23a634:	add	x3, x3, #0xdc6
  23a638:	sub	x4, x29, #0x68
  23a63c:	add	x6, x6, #0x4c9
  23a640:	sub	x5, x29, #0x88
  23a644:	add	x16, x16, #0x91e
  23a648:	sub	x18, x29, #0x78
  23a64c:	add	x0, x0, #0x2fb
  23a650:	adrp	x21, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23a654:	stp	x15, x5, [sp, #336]
  23a658:	adrp	x15, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23a65c:	stp	x3, x2, [sp, #288]
  23a660:	stp	x6, x4, [sp, #272]
  23a664:	adrp	x2, 212000 <inhibit_what_to_string.buffer+0x212000>
  23a668:	adrp	x3, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23a66c:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  23a670:	adrp	x6, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23a674:	stp	x16, x1, [sp, #32]
  23a678:	mov	x1, x7
  23a67c:	ldp	x7, x5, [x29, #-160]
  23a680:	sub	x20, x29, #0x60
  23a684:	add	x21, x21, #0xe8c
  23a688:	adrp	x22, 211000 <inhibit_what_to_string.buffer+0x211000>
  23a68c:	sub	x9, x29, #0x38
  23a690:	add	x15, x15, #0x704
  23a694:	stp	x0, x18, [sp, #304]
  23a698:	adrp	x0, 210000 <inhibit_what_to_string.buffer+0x210000>
  23a69c:	add	x2, x2, #0x32b
  23a6a0:	add	x3, x3, #0x99e
  23a6a4:	add	x4, x4, #0xb35
  23a6a8:	add	x6, x6, #0x7b7
  23a6ac:	adrp	x24, 207000 <inhibit_what_to_string.buffer+0x207000>
  23a6b0:	adrp	x26, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23a6b4:	adrp	x28, 210000 <inhibit_what_to_string.buffer+0x210000>
  23a6b8:	sub	x30, x29, #0x40
  23a6bc:	add	x22, x22, #0x2f4
  23a6c0:	sub	x18, x29, #0x28
  23a6c4:	add	x0, x0, #0xdfc
  23a6c8:	stp	x21, x20, [sp, #256]
  23a6cc:	adrp	x20, 210000 <inhibit_what_to_string.buffer+0x210000>
  23a6d0:	stp	x15, x9, [sp, #176]
  23a6d4:	adrp	x15, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23a6d8:	stp	x2, x13, [sp, #128]
  23a6dc:	stp	x3, x12, [sp, #112]
  23a6e0:	adrp	x12, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23a6e4:	stp	x4, x11, [sp, #96]
  23a6e8:	adrp	x11, 207000 <inhibit_what_to_string.buffer+0x207000>
  23a6ec:	stp	x6, x10, [sp, #80]
  23a6f0:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23a6f4:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  23a6f8:	adrp	x6, 211000 <inhibit_what_to_string.buffer+0x211000>
  23a6fc:	sub	x23, x29, #0x58
  23a700:	add	x24, x24, #0xcd3
  23a704:	sub	x25, x29, #0x50
  23a708:	add	x26, x26, #0x9a6
  23a70c:	sub	x27, x29, #0x48
  23a710:	add	x28, x28, #0xe07
  23a714:	stp	x22, x30, [sp, #192]
  23a718:	mov	x22, x8
  23a71c:	add	x20, x20, #0x96a
  23a720:	sub	x8, x29, #0x20
  23a724:	add	x15, x15, #0x207
  23a728:	stp	x0, x18, [sp, #144]
  23a72c:	sub	x13, x29, #0x18
  23a730:	add	x12, x12, #0x6ff
  23a734:	add	x11, x11, #0x6da
  23a738:	add	x2, x2, #0x997
  23a73c:	add	x4, x4, #0x867
  23a740:	add	x6, x6, #0xe2a
  23a744:	sub	x3, x29, #0x10
  23a748:	mov	x0, xzr
  23a74c:	str	xzr, [sp, #352]
  23a750:	stp	x24, x23, [sp, #240]
  23a754:	stp	x26, x25, [sp, #224]
  23a758:	stp	x28, x27, [sp, #208]
  23a75c:	stp	x20, x14, [sp, #64]
  23a760:	stp	x15, x8, [sp, #48]
  23a764:	stp	x12, x13, [sp, #16]
  23a768:	stp	x11, x22, [sp]
  23a76c:	bl	2414d0 <parse_env_file_sentinel@plt>
  23a770:	mov	w20, w0
  23a774:	tbnz	w0, #31, 23a7c8 <session_load+0x248>
  23a778:	ldr	x8, [x19, #40]
  23a77c:	cbnz	x8, 23a900 <session_load+0x380>
  23a780:	ldur	x0, [x29, #-88]
  23a784:	cbz	x0, 23a81c <session_load+0x29c>
  23a788:	sub	x1, x29, #0x8c
  23a78c:	bl	2414e0 <parse_uid@plt>
  23a790:	mov	w20, w0
  23a794:	tbnz	w0, #31, 23a858 <session_load+0x2d8>
  23a798:	ldr	x8, [x19]
  23a79c:	ldur	w9, [x29, #-140]
  23a7a0:	ldr	x0, [x8, #48]
  23a7a4:	add	x1, x9, #0x1
  23a7a8:	bl	23acf8 <hashmap_get>
  23a7ac:	cbz	x0, 23a8a8 <session_load+0x328>
  23a7b0:	mov	x1, x0
  23a7b4:	mov	x0, x19
  23a7b8:	bl	239cc8 <session_set_user>
  23a7bc:	mov	w8, #0x1                   	// #1
  23a7c0:	cbnz	w8, 23a900 <session_load+0x380>
  23a7c4:	b	23ac34 <session_load+0x6b4>
  23a7c8:	mov	w0, wzr
  23a7cc:	bl	240750 <log_get_max_level_realm@plt>
  23a7d0:	cmp	w0, #0x3
  23a7d4:	b.lt	23a80c <session_load+0x28c>  // b.tstop
  23a7d8:	ldr	x6, [x19, #32]
  23a7dc:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23a7e0:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23a7e4:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  23a7e8:	add	x2, x2, #0x3ce
  23a7ec:	add	x4, x4, #0xed5
  23a7f0:	add	x5, x5, #0x3b4
  23a7f4:	mov	w0, #0x3                   	// #3
  23a7f8:	mov	w3, #0x1be                 	// #446
  23a7fc:	mov	w1, w20
  23a800:	bl	240770 <log_internal_realm@plt>
  23a804:	mov	w21, w0
  23a808:	b	23ac34 <session_load+0x6b4>
  23a80c:	mov	w8, wzr
  23a810:	neg	w9, w20
  23a814:	sub	w21, w8, w9, uxtb
  23a818:	b	23ac34 <session_load+0x6b4>
  23a81c:	bl	240750 <log_get_max_level_realm@plt>
  23a820:	cmp	w0, #0x3
  23a824:	b.lt	23a8f4 <session_load+0x374>  // b.tstop
  23a828:	ldr	x6, [x19, #8]
  23a82c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23a830:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23a834:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23a838:	mov	w1, #0x2                   	// #2
  23a83c:	add	x2, x2, #0x3ce
  23a840:	add	x4, x4, #0xed5
  23a844:	add	x5, x5, #0x70d
  23a848:	mov	w0, #0x3                   	// #3
  23a84c:	movk	w1, #0x4000, lsl #16
  23a850:	mov	w3, #0x1c7                 	// #455
  23a854:	b	23a8e0 <session_load+0x360>
  23a858:	mov	w0, wzr
  23a85c:	bl	240750 <log_get_max_level_realm@plt>
  23a860:	cmp	w0, #0x3
  23a864:	b.lt	23a898 <session_load+0x318>  // b.tstop
  23a868:	ldur	x6, [x29, #-88]
  23a86c:	ldr	x7, [x19, #8]
  23a870:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23a874:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23a878:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23a87c:	add	x2, x2, #0x3ce
  23a880:	add	x4, x4, #0xed5
  23a884:	add	x5, x5, #0x214
  23a888:	mov	w0, #0x3                   	// #3
  23a88c:	mov	w3, #0x1cb                 	// #459
  23a890:	mov	w1, wzr
  23a894:	bl	240770 <log_internal_realm@plt>
  23a898:	mov	w8, wzr
  23a89c:	mov	w21, w20
  23a8a0:	cbnz	w8, 23a900 <session_load+0x380>
  23a8a4:	b	23ac34 <session_load+0x6b4>
  23a8a8:	bl	240750 <log_get_max_level_realm@plt>
  23a8ac:	cmp	w0, #0x3
  23a8b0:	b.lt	23a8f4 <session_load+0x374>  // b.tstop
  23a8b4:	ldr	x6, [x19, #8]
  23a8b8:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23a8bc:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23a8c0:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23a8c4:	mov	w1, #0x2                   	// #2
  23a8c8:	add	x2, x2, #0x3ce
  23a8cc:	add	x4, x4, #0xed5
  23a8d0:	add	x5, x5, #0xf1b
  23a8d4:	mov	w0, #0x3                   	// #3
  23a8d8:	movk	w1, #0x4000, lsl #16
  23a8dc:	mov	w3, #0x1d3                 	// #467
  23a8e0:	bl	240770 <log_internal_realm@plt>
  23a8e4:	mov	w21, w0
  23a8e8:	mov	w8, wzr
  23a8ec:	cbnz	w8, 23a900 <session_load+0x380>
  23a8f0:	b	23ac34 <session_load+0x6b4>
  23a8f4:	mov	w8, wzr
  23a8f8:	mov	w21, #0xfffffffe            	// #-2
  23a8fc:	cbz	w8, 23ac34 <session_load+0x6b4>
  23a900:	ldur	x0, [x29, #-16]
  23a904:	cbz	x0, 23a91c <session_load+0x39c>
  23a908:	bl	2417d0 <parse_boolean@plt>
  23a90c:	tbnz	w0, #31, 23a91c <session_load+0x39c>
  23a910:	cmp	w0, #0x0
  23a914:	cset	w8, ne  // ne = any
  23a918:	strb	w8, [x19, #84]
  23a91c:	ldur	x0, [x29, #-40]
  23a920:	cbz	x0, 23a92c <session_load+0x3ac>
  23a924:	add	x1, x19, #0x90
  23a928:	bl	23ad0c <safe_atou>
  23a92c:	ldur	x1, [x29, #-24]
  23a930:	cbz	x1, 23a9a8 <session_load+0x428>
  23a934:	ldr	x8, [x19, #136]
  23a938:	cbnz	x8, 23a9a8 <session_load+0x428>
  23a93c:	ldr	x8, [x19]
  23a940:	ldr	x0, [x8, #24]
  23a944:	bl	23acf8 <hashmap_get>
  23a948:	mov	x21, x0
  23a94c:	cbz	x0, 23a960 <session_load+0x3e0>
  23a950:	mov	x0, x21
  23a954:	mov	x1, x19
  23a958:	bl	235890 <seat_attach_session>
  23a95c:	mov	w20, w0
  23a960:	cbz	x21, 23a968 <session_load+0x3e8>
  23a964:	tbz	w20, #31, 23a9a8 <session_load+0x428>
  23a968:	mov	w0, wzr
  23a96c:	bl	240750 <log_get_max_level_realm@plt>
  23a970:	cmp	w0, #0x3
  23a974:	b.lt	23a9a8 <session_load+0x428>  // b.tstop
  23a978:	ldr	x6, [x19, #8]
  23a97c:	ldur	x7, [x29, #-24]
  23a980:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23a984:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23a988:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23a98c:	add	x2, x2, #0x3ce
  23a990:	add	x4, x4, #0xed5
  23a994:	add	x5, x5, #0xe95
  23a998:	mov	w0, #0x3                   	// #3
  23a99c:	mov	w3, #0x1e8                 	// #488
  23a9a0:	mov	w1, wzr
  23a9a4:	bl	240770 <log_internal_realm@plt>
  23a9a8:	ldr	x0, [x19, #136]
  23a9ac:	cbz	x0, 23a9b8 <session_load+0x438>
  23a9b0:	bl	234d50 <seat_has_vts>
  23a9b4:	tbnz	w0, #0, 23a9bc <session_load+0x43c>
  23a9b8:	str	wzr, [x19, #144]
  23a9bc:	ldur	x0, [x29, #-56]
  23a9c0:	cbz	x0, 23a9e4 <session_load+0x464>
  23a9c4:	ldr	x8, [x19, #136]
  23a9c8:	cbz	x8, 23a9e4 <session_load+0x464>
  23a9cc:	sub	x1, x29, #0x8c
  23a9d0:	bl	23ad0c <safe_atou>
  23a9d4:	ldr	x0, [x19, #136]
  23a9d8:	ldur	w2, [x29, #-140]
  23a9dc:	mov	x1, x19
  23a9e0:	bl	235820 <seat_claim_position>
  23a9e4:	ldur	x21, [x29, #-32]
  23a9e8:	cbz	x21, 23aa3c <session_load+0x4bc>
  23a9ec:	mov	x0, x21
  23a9f0:	bl	23ad28 <tty_validity_from_string>
  23a9f4:	tbnz	w0, #31, 23aa00 <session_load+0x480>
  23a9f8:	str	w0, [x19, #80]
  23a9fc:	b	23aa3c <session_load+0x4bc>
  23aa00:	mov	w0, wzr
  23aa04:	bl	240750 <log_get_max_level_realm@plt>
  23aa08:	cmp	w0, #0x7
  23aa0c:	b.lt	23aa3c <session_load+0x4bc>  // b.tstop
  23aa10:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23aa14:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23aa18:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  23aa1c:	add	x2, x2, #0x3ce
  23aa20:	add	x4, x4, #0xed5
  23aa24:	add	x5, x5, #0xd9e
  23aa28:	mov	w0, #0x7                   	// #7
  23aa2c:	mov	w3, #0x1fa                 	// #506
  23aa30:	mov	w1, wzr
  23aa34:	mov	x6, x21
  23aa38:	bl	240770 <log_internal_realm@plt>
  23aa3c:	ldur	x0, [x29, #-64]
  23aa40:	cbz	x0, 23aae0 <session_load+0x560>
  23aa44:	sub	x1, x29, #0x8c
  23aa48:	bl	2414f0 <parse_pid@plt>
  23aa4c:	tbnz	w0, #31, 23aaa0 <session_load+0x520>
  23aa50:	ldur	w1, [x29, #-140]
  23aa54:	mov	x0, x19
  23aa58:	bl	239d4c <session_set_leader>
  23aa5c:	mov	w20, w0
  23aa60:	tbz	w0, #31, 23aae0 <session_load+0x560>
  23aa64:	mov	w0, wzr
  23aa68:	bl	240750 <log_get_max_level_realm@plt>
  23aa6c:	cmp	w0, #0x4
  23aa70:	b.lt	23aae0 <session_load+0x560>  // b.tstop
  23aa74:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23aa78:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23aa7c:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23aa80:	add	x2, x2, #0x3ce
  23aa84:	add	x4, x4, #0xed5
  23aa88:	add	x5, x5, #0xf39
  23aa8c:	mov	w0, #0x4                   	// #4
  23aa90:	mov	w3, #0x208                 	// #520
  23aa94:	mov	w1, w20
  23aa98:	bl	240770 <log_internal_realm@plt>
  23aa9c:	b	23aae0 <session_load+0x560>
  23aaa0:	mov	w20, w0
  23aaa4:	mov	w0, wzr
  23aaa8:	bl	240750 <log_get_max_level_realm@plt>
  23aaac:	cmp	w0, #0x7
  23aab0:	b.lt	23aae0 <session_load+0x560>  // b.tstop
  23aab4:	ldur	x6, [x29, #-64]
  23aab8:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23aabc:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23aac0:	adrp	x5, 210000 <inhibit_what_to_string.buffer+0x210000>
  23aac4:	add	x2, x2, #0x3ce
  23aac8:	add	x4, x4, #0xed5
  23aacc:	add	x5, x5, #0x3cc
  23aad0:	mov	w0, #0x7                   	// #7
  23aad4:	mov	w3, #0x204                 	// #516
  23aad8:	mov	w1, w20
  23aadc:	bl	240770 <log_internal_realm@plt>
  23aae0:	ldur	x0, [x29, #-72]
  23aae4:	cbz	x0, 23aaf4 <session_load+0x574>
  23aae8:	bl	23ad4c <session_type_from_string>
  23aaec:	tbnz	w0, #31, 23aaf4 <session_load+0x574>
  23aaf0:	str	w0, [x19, #20]
  23aaf4:	ldur	x0, [x29, #-80]
  23aaf8:	cbz	x0, 23ab08 <session_load+0x588>
  23aafc:	bl	23ad70 <session_class_from_string>
  23ab00:	tbnz	w0, #31, 23ab08 <session_load+0x588>
  23ab04:	str	w0, [x19, #24]
  23ab08:	ldur	x0, [x29, #-48]
  23ab0c:	cbz	x0, 23ab2c <session_load+0x5ac>
  23ab10:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23ab14:	add	x1, x1, #0x4fe
  23ab18:	bl	240c30 <strcmp@plt>
  23ab1c:	cbnz	w0, 23ab2c <session_load+0x5ac>
  23ab20:	ldrb	w8, [x19, #209]
  23ab24:	orr	w8, w8, #0x4
  23ab28:	strb	w8, [x19, #209]
  23ab2c:	ldr	x8, [x22]
  23ab30:	cbz	x8, 23ab40 <session_load+0x5c0>
  23ab34:	mov	x0, x19
  23ab38:	bl	23ad94 <session_create_fifo>
  23ab3c:	bl	240820 <safe_close@plt>
  23ab40:	ldur	x0, [x29, #-96]
  23ab44:	cbz	x0, 23ab50 <session_load+0x5d0>
  23ab48:	add	x1, x19, #0x30
  23ab4c:	bl	2417e0 <deserialize_usec@plt>
  23ab50:	ldur	x0, [x29, #-104]
  23ab54:	cbz	x0, 23ab60 <session_load+0x5e0>
  23ab58:	add	x1, x19, #0x38
  23ab5c:	bl	2417e0 <deserialize_usec@plt>
  23ab60:	ldur	x0, [x29, #-120]
  23ab64:	cbz	x0, 23ab88 <session_load+0x608>
  23ab68:	bl	2417d0 <parse_boolean@plt>
  23ab6c:	tbnz	w0, #31, 23ab88 <session_load+0x608>
  23ab70:	ldrb	w8, [x19, #209]
  23ab74:	cmp	w0, #0x0
  23ab78:	cset	w9, ne  // ne = any
  23ab7c:	and	w8, w8, #0xfffffff7
  23ab80:	orr	w8, w8, w9, lsl #3
  23ab84:	strb	w8, [x19, #209]
  23ab88:	ldur	x0, [x29, #-136]
  23ab8c:	cbz	x0, 23abe4 <session_load+0x664>
  23ab90:	bl	2417d0 <parse_boolean@plt>
  23ab94:	mov	w21, w0
  23ab98:	tbnz	w0, #31, 23abac <session_load+0x62c>
  23ab9c:	cbz	w21, 23abe4 <session_load+0x664>
  23aba0:	ldr	x8, [x19, #40]
  23aba4:	str	x19, [x8, #80]
  23aba8:	b	23abe4 <session_load+0x664>
  23abac:	mov	w0, wzr
  23abb0:	bl	240750 <log_get_max_level_realm@plt>
  23abb4:	cmp	w0, #0x4
  23abb8:	b.lt	23abe4 <session_load+0x664>  // b.tstop
  23abbc:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23abc0:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23abc4:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23abc8:	add	x2, x2, #0x3ce
  23abcc:	add	x4, x4, #0xed5
  23abd0:	add	x5, x5, #0x74f
  23abd4:	mov	w0, #0x4                   	// #4
  23abd8:	mov	w3, #0x23f                 	// #575
  23abdc:	mov	w1, w21
  23abe0:	bl	240770 <log_internal_realm@plt>
  23abe4:	ldur	x1, [x29, #-112]
  23abe8:	cbz	x1, 23ac30 <session_load+0x6b0>
  23abec:	ldr	x8, [x19]
  23abf0:	mov	x2, xzr
  23abf4:	ldr	x0, [x8, #8]
  23abf8:	bl	2417f0 <bus_name_has_owner@plt>
  23abfc:	cmp	w0, #0x1
  23ac00:	b.lt	23ac28 <session_load+0x6a8>  // b.tstop
  23ac04:	ldur	x1, [x29, #-112]
  23ac08:	mov	x0, x19
  23ac0c:	mov	w2, wzr
  23ac10:	mov	w3, wzr
  23ac14:	bl	23aedc <session_set_controller>
  23ac18:	ldur	x1, [x29, #-128]
  23ac1c:	mov	x0, x19
  23ac20:	bl	23b040 <session_load_devices>
  23ac24:	b	23ac30 <session_load+0x6b0>
  23ac28:	mov	x0, x19
  23ac2c:	bl	23b158 <session_restore_vt>
  23ac30:	mov	w21, w20
  23ac34:	sub	x0, x29, #0x88
  23ac38:	bl	23a2e0 <freep>
  23ac3c:	sub	x0, x29, #0x80
  23ac40:	bl	23a2e0 <freep>
  23ac44:	sub	x0, x29, #0x78
  23ac48:	bl	23a2e0 <freep>
  23ac4c:	sub	x0, x29, #0x70
  23ac50:	bl	23a2e0 <freep>
  23ac54:	sub	x0, x29, #0x68
  23ac58:	bl	23a2e0 <freep>
  23ac5c:	sub	x0, x29, #0x60
  23ac60:	bl	23a2e0 <freep>
  23ac64:	sub	x0, x29, #0x58
  23ac68:	bl	23a2e0 <freep>
  23ac6c:	sub	x0, x29, #0x50
  23ac70:	bl	23a2e0 <freep>
  23ac74:	sub	x0, x29, #0x48
  23ac78:	bl	23a2e0 <freep>
  23ac7c:	sub	x0, x29, #0x40
  23ac80:	bl	23a2e0 <freep>
  23ac84:	sub	x0, x29, #0x38
  23ac88:	bl	23a2e0 <freep>
  23ac8c:	sub	x0, x29, #0x30
  23ac90:	bl	23a2e0 <freep>
  23ac94:	sub	x0, x29, #0x28
  23ac98:	bl	23a2e0 <freep>
  23ac9c:	sub	x0, x29, #0x20
  23aca0:	bl	23a2e0 <freep>
  23aca4:	sub	x0, x29, #0x18
  23aca8:	bl	23a2e0 <freep>
  23acac:	sub	x0, x29, #0x10
  23acb0:	bl	23a2e0 <freep>
  23acb4:	mov	w0, w21
  23acb8:	add	sp, sp, #0x210
  23acbc:	ldp	x20, x19, [sp, #80]
  23acc0:	ldp	x22, x21, [sp, #64]
  23acc4:	ldp	x24, x23, [sp, #48]
  23acc8:	ldp	x26, x25, [sp, #32]
  23accc:	ldp	x28, x27, [sp, #16]
  23acd0:	ldp	x29, x30, [sp], #96
  23acd4:	ret
  23acd8:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23acdc:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23ace0:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23ace4:	add	x1, x1, #0x6de
  23ace8:	add	x2, x2, #0x3ce
  23acec:	add	x4, x4, #0xe70
  23acf0:	mov	w3, #0x1a0                 	// #416
  23acf4:	bl	240790 <log_assert_failed_realm@plt>

000000000023acf8 <hashmap_get>:
  23acf8:	stp	x29, x30, [sp, #-16]!
  23acfc:	mov	x29, sp
  23ad00:	bl	240bc0 <internal_hashmap_get@plt>
  23ad04:	ldp	x29, x30, [sp], #16
  23ad08:	ret

000000000023ad0c <safe_atou>:
  23ad0c:	stp	x29, x30, [sp, #-16]!
  23ad10:	mov	x2, x1
  23ad14:	mov	w1, wzr
  23ad18:	mov	x29, sp
  23ad1c:	bl	240c70 <safe_atou_full@plt>
  23ad20:	ldp	x29, x30, [sp], #16
  23ad24:	ret

000000000023ad28 <tty_validity_from_string>:
  23ad28:	stp	x29, x30, [sp, #-16]!
  23ad2c:	mov	x2, x0
  23ad30:	adrp	x0, 254000 <session_vtable+0x3d0>
  23ad34:	add	x0, x0, #0x690
  23ad38:	mov	w1, #0x3                   	// #3
  23ad3c:	mov	x29, sp
  23ad40:	bl	240cd0 <string_table_lookup@plt>
  23ad44:	ldp	x29, x30, [sp], #16
  23ad48:	ret

000000000023ad4c <session_type_from_string>:
  23ad4c:	stp	x29, x30, [sp, #-16]!
  23ad50:	mov	x2, x0
  23ad54:	adrp	x0, 254000 <session_vtable+0x3d0>
  23ad58:	add	x0, x0, #0x630
  23ad5c:	mov	w1, #0x6                   	// #6
  23ad60:	mov	x29, sp
  23ad64:	bl	240cd0 <string_table_lookup@plt>
  23ad68:	ldp	x29, x30, [sp], #16
  23ad6c:	ret

000000000023ad70 <session_class_from_string>:
  23ad70:	stp	x29, x30, [sp, #-16]!
  23ad74:	mov	x2, x0
  23ad78:	adrp	x0, 254000 <session_vtable+0x3d0>
  23ad7c:	add	x0, x0, #0x660
  23ad80:	mov	w1, #0x4                   	// #4
  23ad84:	mov	x29, sp
  23ad88:	bl	240cd0 <string_table_lookup@plt>
  23ad8c:	ldp	x29, x30, [sp], #16
  23ad90:	ret

000000000023ad94 <session_create_fifo>:
  23ad94:	stp	x29, x30, [sp, #-48]!
  23ad98:	str	x21, [sp, #16]
  23ad9c:	stp	x20, x19, [sp, #32]
  23ada0:	mov	x29, sp
  23ada4:	cbz	x0, 23aebc <session_create_fifo+0x128>
  23ada8:	ldr	x8, [x0, #168]
  23adac:	mov	x19, x0
  23adb0:	cbz	x8, 23ae08 <session_create_fifo+0x74>
  23adb4:	ldr	w8, [x19, #160]
  23adb8:	mov	w21, #0x800                 	// #2048
  23adbc:	movk	w21, #0x8, lsl #16
  23adc0:	tbz	w8, #31, 23addc <session_create_fifo+0x48>
  23adc4:	ldr	x0, [x19, #168]
  23adc8:	mov	w1, #0x800                 	// #2048
  23adcc:	movk	w1, #0x8, lsl #16
  23add0:	bl	2408e0 <open64@plt>
  23add4:	str	w0, [x19, #160]
  23add8:	tbnz	w0, #31, 23adf8 <session_create_fifo+0x64>
  23addc:	mov	x20, x19
  23ade0:	ldr	x8, [x20, #176]!
  23ade4:	cbz	x8, 23ae6c <session_create_fifo+0xd8>
  23ade8:	ldr	x0, [x19, #168]
  23adec:	add	w1, w21, #0x1
  23adf0:	bl	2408e0 <open64@plt>
  23adf4:	tbz	w0, #31, 23aeac <session_create_fifo+0x118>
  23adf8:	bl	240930 <__errno_location@plt>
  23adfc:	ldr	w8, [x0]
  23ae00:	neg	w0, w8
  23ae04:	b	23aeac <session_create_fifo+0x118>
  23ae08:	adrp	x0, 208000 <inhibit_what_to_string.buffer+0x208000>
  23ae0c:	add	x0, x0, #0xe37
  23ae10:	mov	w1, #0x1ed                 	// #493
  23ae14:	mov	w4, #0x2                   	// #2
  23ae18:	mov	w2, wzr
  23ae1c:	mov	w3, wzr
  23ae20:	bl	2411a0 <mkdir_safe_label@plt>
  23ae24:	tbnz	w0, #31, 23aeac <session_create_fifo+0x118>
  23ae28:	ldr	x1, [x19, #8]
  23ae2c:	adrp	x0, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23ae30:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23ae34:	add	x0, x0, #0x9ba
  23ae38:	add	x2, x2, #0x684
  23ae3c:	mov	x3, xzr
  23ae40:	bl	241520 <strjoin_real@plt>
  23ae44:	str	x0, [x19, #168]
  23ae48:	cbz	x0, 23aea8 <session_create_fifo+0x114>
  23ae4c:	mov	w1, #0x180                 	// #384
  23ae50:	bl	241530 <mkfifo@plt>
  23ae54:	tbz	w0, #31, 23adb4 <session_create_fifo+0x20>
  23ae58:	bl	240930 <__errno_location@plt>
  23ae5c:	ldr	w8, [x0]
  23ae60:	cmp	w8, #0x11
  23ae64:	b.eq	23adb4 <session_create_fifo+0x20>  // b.none
  23ae68:	b	23ae00 <session_create_fifo+0x6c>
  23ae6c:	ldr	x8, [x19]
  23ae70:	ldr	w2, [x19, #160]
  23ae74:	adrp	x4, 23c000 <get_process_ctty_atime+0x14>
  23ae78:	add	x4, x4, #0x21c
  23ae7c:	ldr	x0, [x8]
  23ae80:	mov	x1, x20
  23ae84:	mov	w3, wzr
  23ae88:	mov	x5, x19
  23ae8c:	bl	2408f0 <sd_event_add_io@plt>
  23ae90:	tbnz	w0, #31, 23aeac <session_create_fifo+0x118>
  23ae94:	ldr	x0, [x20]
  23ae98:	mov	x1, #0xfffffffffffffff6    	// #-10
  23ae9c:	bl	240b40 <sd_event_source_set_priority@plt>
  23aea0:	tbz	w0, #31, 23ade8 <session_create_fifo+0x54>
  23aea4:	b	23aeac <session_create_fifo+0x118>
  23aea8:	mov	w0, #0xfffffff4            	// #-12
  23aeac:	ldp	x20, x19, [sp, #32]
  23aeb0:	ldr	x21, [sp, #16]
  23aeb4:	ldp	x29, x30, [sp], #48
  23aeb8:	ret
  23aebc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23aec0:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23aec4:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  23aec8:	add	x1, x1, #0x6de
  23aecc:	add	x2, x2, #0x3ce
  23aed0:	add	x4, x4, #0xe34
  23aed4:	mov	w3, #0x40f                 	// #1039
  23aed8:	bl	240790 <log_assert_failed_realm@plt>

000000000023aedc <session_set_controller>:
  23aedc:	stp	x29, x30, [sp, #-64]!
  23aee0:	mov	x29, sp
  23aee4:	str	x23, [sp, #16]
  23aee8:	stp	x22, x21, [sp, #32]
  23aeec:	stp	x20, x19, [sp, #48]
  23aef0:	str	xzr, [x29, #24]
  23aef4:	cbz	x0, 23affc <session_set_controller+0x120>
  23aef8:	mov	x21, x1
  23aefc:	cbz	x1, 23b01c <session_set_controller+0x140>
  23af00:	mov	x1, x21
  23af04:	mov	w20, w3
  23af08:	mov	w22, w2
  23af0c:	mov	x19, x0
  23af10:	bl	23c528 <session_is_controller>
  23af14:	tbz	w0, #0, 23af20 <session_set_controller+0x44>
  23af18:	mov	w22, wzr
  23af1c:	b	23afc8 <session_set_controller+0xec>
  23af20:	ldr	x8, [x19, #232]
  23af24:	cbz	x8, 23af34 <session_set_controller+0x58>
  23af28:	tbnz	w22, #0, 23af34 <session_set_controller+0x58>
  23af2c:	mov	w22, #0xfffffff0            	// #-16
  23af30:	b	23afc8 <session_set_controller+0xec>
  23af34:	mov	x0, x21
  23af38:	bl	240c40 <strdup@plt>
  23af3c:	str	x0, [x29, #24]
  23af40:	cbz	x0, 23afc4 <session_set_controller+0xe8>
  23af44:	mov	x21, x19
  23af48:	mov	x23, x0
  23af4c:	ldr	x0, [x21, #248]!
  23af50:	bl	2417b0 <sd_bus_track_unref@plt>
  23af54:	str	x0, [x21]
  23af58:	ldr	x8, [x19]
  23af5c:	adrp	x2, 23c000 <get_process_ctty_atime+0x14>
  23af60:	add	x2, x2, #0x584
  23af64:	mov	x1, x21
  23af68:	ldr	x0, [x8, #8]
  23af6c:	mov	x3, x19
  23af70:	bl	241800 <sd_bus_track_new@plt>
  23af74:	tbnz	w0, #31, 23afbc <session_set_controller+0xe0>
  23af78:	ldr	x0, [x21]
  23af7c:	mov	x1, x23
  23af80:	bl	241810 <sd_bus_track_add_name@plt>
  23af84:	tbnz	w0, #31, 23afbc <session_set_controller+0xe0>
  23af88:	tbz	w20, #0, 23af98 <session_set_controller+0xbc>
  23af8c:	mov	x0, x19
  23af90:	bl	23c5ec <session_prepare_vt>
  23af94:	tbnz	w0, #31, 23afe8 <session_set_controller+0x10c>
  23af98:	mov	w1, #0x1                   	// #1
  23af9c:	mov	x0, x19
  23afa0:	bl	23c7c8 <session_release_controller>
  23afa4:	ldr	x8, [x29, #24]
  23afa8:	mov	x0, x19
  23afac:	str	xzr, [x29, #24]
  23afb0:	str	x8, [x19, #232]
  23afb4:	bl	239e28 <session_save>
  23afb8:	b	23af18 <session_set_controller+0x3c>
  23afbc:	mov	w22, w0
  23afc0:	b	23afc8 <session_set_controller+0xec>
  23afc4:	mov	w22, #0xfffffff4            	// #-12
  23afc8:	add	x0, x29, #0x18
  23afcc:	bl	23a2e0 <freep>
  23afd0:	mov	w0, w22
  23afd4:	ldp	x20, x19, [sp, #48]
  23afd8:	ldp	x22, x21, [sp, #32]
  23afdc:	ldr	x23, [sp, #16]
  23afe0:	ldp	x29, x30, [sp], #64
  23afe4:	ret
  23afe8:	mov	w22, w0
  23afec:	ldr	x0, [x21]
  23aff0:	bl	2417b0 <sd_bus_track_unref@plt>
  23aff4:	str	x0, [x21]
  23aff8:	b	23afc8 <session_set_controller+0xec>
  23affc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23b000:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b004:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  23b008:	add	x1, x1, #0x6de
  23b00c:	add	x2, x2, #0x3ce
  23b010:	add	x4, x4, #0xe57
  23b014:	mov	w3, #0x539                 	// #1337
  23b018:	bl	240790 <log_assert_failed_realm@plt>
  23b01c:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  23b020:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b024:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  23b028:	add	x1, x1, #0x302
  23b02c:	add	x2, x2, #0x3ce
  23b030:	add	x4, x4, #0xe57
  23b034:	mov	w3, #0x53a                 	// #1338
  23b038:	mov	w0, wzr
  23b03c:	bl	240790 <log_assert_failed_realm@plt>

000000000023b040 <session_load_devices>:
  23b040:	sub	sp, sp, #0x50
  23b044:	stp	x29, x30, [sp, #32]
  23b048:	str	x21, [sp, #48]
  23b04c:	stp	x20, x19, [sp, #64]
  23b050:	add	x29, sp, #0x20
  23b054:	cbz	x0, 23b138 <session_load_devices+0xf8>
  23b058:	mov	x19, x0
  23b05c:	mov	w20, wzr
  23b060:	str	x1, [x29, #24]
  23b064:	b	23b078 <session_load_devices+0x38>
  23b068:	mov	w21, #0x1                   	// #1
  23b06c:	sub	x0, x29, #0x8
  23b070:	bl	23a2e0 <freep>
  23b074:	cbnz	w21, 23b0e4 <session_load_devices+0xa4>
  23b078:	add	x0, x29, #0x18
  23b07c:	sub	x1, x29, #0x8
  23b080:	mov	x2, xzr
  23b084:	mov	w3, wzr
  23b088:	stur	xzr, [x29, #-8]
  23b08c:	bl	241820 <extract_first_word@plt>
  23b090:	cbz	w0, 23b068 <session_load_devices+0x28>
  23b094:	tbnz	w0, #31, 23b0cc <session_load_devices+0x8c>
  23b098:	ldur	x0, [x29, #-8]
  23b09c:	add	x1, sp, #0x8
  23b0a0:	bl	241830 <parse_dev@plt>
  23b0a4:	tbnz	w0, #31, 23b0d8 <session_load_devices+0x98>
  23b0a8:	ldr	x1, [sp, #8]
  23b0ac:	add	x3, sp, #0x10
  23b0b0:	mov	x0, x19
  23b0b4:	mov	w2, wzr
  23b0b8:	bl	238788 <session_device_new>
  23b0bc:	cmp	w0, #0x0
  23b0c0:	mov	w21, wzr
  23b0c4:	csel	w20, w0, w20, lt  // lt = tstop
  23b0c8:	b	23b06c <session_load_devices+0x2c>
  23b0cc:	mov	w21, #0x1                   	// #1
  23b0d0:	mov	w20, w0
  23b0d4:	b	23b06c <session_load_devices+0x2c>
  23b0d8:	mov	w21, wzr
  23b0dc:	mov	w20, w0
  23b0e0:	b	23b06c <session_load_devices+0x2c>
  23b0e4:	tbz	w20, #31, 23b124 <session_load_devices+0xe4>
  23b0e8:	mov	w0, wzr
  23b0ec:	bl	240750 <log_get_max_level_realm@plt>
  23b0f0:	cmp	w0, #0x3
  23b0f4:	b.lt	23b124 <session_load_devices+0xe4>  // b.tstop
  23b0f8:	ldr	x6, [x19, #8]
  23b0fc:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b100:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  23b104:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23b108:	add	x2, x2, #0x3ce
  23b10c:	add	x4, x4, #0x1cf
  23b110:	add	x5, x5, #0xac3
  23b114:	mov	w0, #0x3                   	// #3
  23b118:	mov	w3, #0x187                 	// #391
  23b11c:	mov	w1, w20
  23b120:	bl	240770 <log_internal_realm@plt>
  23b124:	ldp	x20, x19, [sp, #64]
  23b128:	ldr	x21, [sp, #48]
  23b12c:	ldp	x29, x30, [sp, #32]
  23b130:	add	sp, sp, #0x50
  23b134:	ret
  23b138:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23b13c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b140:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23b144:	add	x1, x1, #0x6de
  23b148:	add	x2, x2, #0x3ce
  23b14c:	add	x4, x4, #0x7f4
  23b150:	mov	w3, #0x16a                 	// #362
  23b154:	bl	240790 <log_assert_failed_realm@plt>

000000000023b158 <session_restore_vt>:
  23b158:	stp	x29, x30, [sp, #-48]!
  23b15c:	stp	x20, x19, [sp, #32]
  23b160:	mov	x19, x0
  23b164:	ldr	w0, [x0, #148]
  23b168:	str	x21, [sp, #16]
  23b16c:	mov	x29, sp
  23b170:	bl	241840 <vt_restore@plt>
  23b174:	mov	w20, w0
  23b178:	cmn	w0, #0x5
  23b17c:	b.ne	23b1b0 <session_restore_vt+0x58>  // b.any
  23b180:	ldr	w21, [x19, #148]
  23b184:	mov	w8, #0xffffffff            	// #-1
  23b188:	mov	x0, x19
  23b18c:	str	w8, [x19, #148]
  23b190:	bl	23c8fc <session_open_vt>
  23b194:	mov	w20, w0
  23b198:	mov	w0, w21
  23b19c:	bl	240820 <safe_close@plt>
  23b1a0:	tbnz	w20, #31, 23b1f0 <session_restore_vt+0x98>
  23b1a4:	mov	w0, w20
  23b1a8:	bl	241840 <vt_restore@plt>
  23b1ac:	mov	w20, w0
  23b1b0:	tbz	w20, #31, 23b1f8 <session_restore_vt+0xa0>
  23b1b4:	mov	w0, wzr
  23b1b8:	bl	240750 <log_get_max_level_realm@plt>
  23b1bc:	cmp	w0, #0x4
  23b1c0:	b.lt	23b1f8 <session_restore_vt+0xa0>  // b.tstop
  23b1c4:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b1c8:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23b1cc:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  23b1d0:	add	x2, x2, #0x3ce
  23b1d4:	add	x4, x4, #0x7ab
  23b1d8:	add	x5, x5, #0x4d3
  23b1dc:	mov	w0, #0x4                   	// #4
  23b1e0:	mov	w3, #0x4f0                 	// #1264
  23b1e4:	mov	w1, w20
  23b1e8:	bl	240770 <log_internal_realm@plt>
  23b1ec:	b	23b1f8 <session_restore_vt+0xa0>
  23b1f0:	mov	w20, #0xfffffffb            	// #-5
  23b1f4:	tbnz	w20, #31, 23b1b4 <session_restore_vt+0x5c>
  23b1f8:	ldr	w0, [x19, #148]
  23b1fc:	bl	240820 <safe_close@plt>
  23b200:	str	w0, [x19, #148]
  23b204:	ldp	x20, x19, [sp, #32]
  23b208:	ldr	x21, [sp, #16]
  23b20c:	ldp	x29, x30, [sp], #48
  23b210:	ret

000000000023b214 <session_activate>:
  23b214:	stp	x29, x30, [sp, #-32]!
  23b218:	str	x19, [sp, #16]
  23b21c:	mov	x29, sp
  23b220:	cbz	x0, 23b290 <session_activate+0x7c>
  23b224:	ldr	x8, [x0, #40]
  23b228:	mov	x19, x0
  23b22c:	cbz	x8, 23b2b0 <session_activate+0x9c>
  23b230:	ldr	x0, [x19, #136]
  23b234:	cbz	x0, 23b25c <session_activate+0x48>
  23b238:	ldr	x8, [x0, #32]
  23b23c:	cmp	x8, x19
  23b240:	b.eq	23b280 <session_activate+0x6c>  // b.none
  23b244:	bl	234d50 <seat_has_vts>
  23b248:	tbz	w0, #0, 23b264 <session_activate+0x50>
  23b24c:	ldr	w0, [x19, #144]
  23b250:	cbz	w0, 23b25c <session_activate+0x48>
  23b254:	bl	2415b0 <chvt@plt>
  23b258:	b	23b284 <session_activate+0x70>
  23b25c:	mov	w0, #0xffffffa1            	// #-95
  23b260:	b	23b284 <session_activate+0x70>
  23b264:	ldr	x8, [x19, #136]
  23b268:	mov	x0, x19
  23b26c:	str	x19, [x8, #40]
  23b270:	bl	23932c <session_device_try_pause_all>
  23b274:	cbnz	w0, 23b280 <session_activate+0x6c>
  23b278:	ldr	x0, [x19, #136]
  23b27c:	bl	2359e4 <seat_complete_switch>
  23b280:	mov	w0, wzr
  23b284:	ldr	x19, [sp, #16]
  23b288:	ldp	x29, x30, [sp], #32
  23b28c:	ret
  23b290:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23b294:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b298:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23b29c:	add	x1, x1, #0x6de
  23b2a0:	add	x2, x2, #0x3ce
  23b2a4:	add	x4, x4, #0x72e
  23b2a8:	mov	w3, #0x252                 	// #594
  23b2ac:	bl	240790 <log_assert_failed_realm@plt>
  23b2b0:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23b2b4:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b2b8:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23b2bc:	add	x1, x1, #0x74e
  23b2c0:	add	x2, x2, #0x3ce
  23b2c4:	add	x4, x4, #0x72e
  23b2c8:	mov	w3, #0x253                 	// #595
  23b2cc:	mov	w0, wzr
  23b2d0:	bl	240790 <log_assert_failed_realm@plt>

000000000023b2d4 <session_start>:
  23b2d4:	sub	sp, sp, #0x70
  23b2d8:	stp	x29, x30, [sp, #64]
  23b2dc:	str	x21, [sp, #80]
  23b2e0:	stp	x20, x19, [sp, #96]
  23b2e4:	add	x29, sp, #0x40
  23b2e8:	cbz	x0, 23b460 <session_start+0x18c>
  23b2ec:	mov	x19, x0
  23b2f0:	ldr	x0, [x0, #40]
  23b2f4:	cbz	x0, 23b440 <session_start+0x16c>
  23b2f8:	ldrb	w8, [x19, #209]
  23b2fc:	tbnz	w8, #2, 23b448 <session_start+0x174>
  23b300:	tbnz	w8, #1, 23b438 <session_start+0x164>
  23b304:	mov	x20, x2
  23b308:	mov	x21, x1
  23b30c:	bl	23e344 <user_start>
  23b310:	tbnz	w0, #31, 23b44c <session_start+0x178>
  23b314:	mov	x0, x19
  23b318:	mov	x1, x21
  23b31c:	mov	x2, x20
  23b320:	bl	23b480 <session_start_scope>
  23b324:	tbnz	w0, #31, 23b44c <session_start+0x178>
  23b328:	ldr	x8, [x19, #40]
  23b32c:	ldr	w9, [x19, #24]
  23b330:	ldr	w10, [x19, #152]
  23b334:	ldr	x7, [x19, #8]
  23b338:	ldr	x8, [x8, #16]
  23b33c:	cmp	w9, #0x3
  23b340:	mov	w9, #0x6                   	// #6
  23b344:	cinc	w0, w9, eq  // eq = none
  23b348:	adrp	x9, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23b34c:	str	w10, [sp, #24]
  23b350:	adrp	x10, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23b354:	adrp	x11, 208000 <inhibit_what_to_string.buffer+0x208000>
  23b358:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b35c:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  23b360:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  23b364:	adrp	x6, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23b368:	add	x9, x9, #0xeb9
  23b36c:	add	x10, x10, #0x7c3
  23b370:	add	x11, x11, #0x27d
  23b374:	add	x2, x2, #0x3ce
  23b378:	add	x4, x4, #0xb41
  23b37c:	add	x5, x5, #0x251
  23b380:	add	x6, x6, #0x6b
  23b384:	mov	w3, #0x2bf                 	// #703
  23b388:	mov	w1, wzr
  23b38c:	stp	x8, xzr, [sp, #48]
  23b390:	stp	x9, x7, [sp, #32]
  23b394:	stp	x8, x10, [sp, #8]
  23b398:	str	x11, [sp]
  23b39c:	bl	240d70 <log_struct_internal@plt>
  23b3a0:	add	x20, x19, #0x30
  23b3a4:	mov	x0, x20
  23b3a8:	bl	23a470 <dual_timestamp_is_set>
  23b3ac:	tbnz	w0, #0, 23b3b8 <session_start+0xe4>
  23b3b0:	mov	x0, x20
  23b3b4:	bl	2414b0 <dual_timestamp_get@plt>
  23b3b8:	ldr	x0, [x19, #136]
  23b3bc:	cbz	x0, 23b3c4 <session_start+0xf0>
  23b3c0:	bl	235324 <seat_read_active_vt>
  23b3c4:	ldrb	w8, [x19, #209]
  23b3c8:	ldr	x0, [x19, #40]
  23b3cc:	orr	w8, w8, #0x2
  23b3d0:	strb	w8, [x19, #209]
  23b3d4:	bl	23ef10 <user_elect_display>
  23b3d8:	mov	x0, x19
  23b3dc:	bl	239e28 <session_save>
  23b3e0:	ldr	x0, [x19, #40]
  23b3e4:	bl	23dc5c <user_save>
  23b3e8:	ldr	x0, [x19, #136]
  23b3ec:	cbz	x0, 23b3f4 <session_start+0x120>
  23b3f0:	bl	2347cc <seat_save>
  23b3f4:	mov	w1, #0x1                   	// #1
  23b3f8:	mov	x0, x19
  23b3fc:	bl	2377b8 <session_send_signal>
  23b400:	ldr	x0, [x19, #40]
  23b404:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23b408:	add	x1, x1, #0x447
  23b40c:	mov	x2, xzr
  23b410:	bl	23d5f0 <user_send_changed>
  23b414:	ldr	x0, [x19, #136]
  23b418:	cbz	x0, 23b44c <session_start+0x178>
  23b41c:	ldr	x8, [x0, #32]
  23b420:	cmp	x8, x19
  23b424:	b.ne	23b438 <session_start+0x164>  // b.any
  23b428:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23b42c:	add	x1, x1, #0xa69
  23b430:	mov	x2, xzr
  23b434:	bl	234278 <seat_send_changed>
  23b438:	mov	w0, wzr
  23b43c:	b	23b44c <session_start+0x178>
  23b440:	mov	w0, #0xffffff8c            	// #-116
  23b444:	b	23b44c <session_start+0x178>
  23b448:	mov	w0, #0xffffffea            	// #-22
  23b44c:	ldp	x20, x19, [sp, #96]
  23b450:	ldr	x21, [sp, #80]
  23b454:	ldp	x29, x30, [sp, #64]
  23b458:	add	sp, sp, #0x70
  23b45c:	ret
  23b460:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23b464:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b468:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23b46c:	add	x1, x1, #0x6de
  23b470:	add	x2, x2, #0x3ce
  23b474:	add	x4, x4, #0xe0c
  23b478:	mov	w3, #0x2a7                 	// #679
  23b47c:	bl	240790 <log_assert_failed_realm@plt>

000000000023b480 <session_start_scope>:
  23b480:	stp	x29, x30, [sp, #-80]!
  23b484:	stp	x26, x25, [sp, #16]
  23b488:	stp	x24, x23, [sp, #32]
  23b48c:	stp	x22, x21, [sp, #48]
  23b490:	stp	x20, x19, [sp, #64]
  23b494:	mov	x29, sp
  23b498:	sub	sp, sp, #0x70
  23b49c:	cbz	x0, 23b6e4 <session_start_scope+0x264>
  23b4a0:	ldr	x8, [x0, #40]
  23b4a4:	mov	x19, x0
  23b4a8:	cbz	x8, 23b704 <session_start_scope+0x284>
  23b4ac:	ldr	x8, [x19, #120]
  23b4b0:	cbnz	x8, 23b6ac <session_start_scope+0x22c>
  23b4b4:	stur	xzr, [x29, #-8]
  23b4b8:	mov	x24, x19
  23b4bc:	ldr	x0, [x24, #128]!
  23b4c0:	mov	x20, x2
  23b4c4:	mov	x22, x1
  23b4c8:	bl	239cb4 <mfree>
  23b4cc:	ldur	x1, [x24, #-120]
  23b4d0:	adrp	x0, 212000 <inhibit_what_to_string.buffer+0x212000>
  23b4d4:	adrp	x2, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23b4d8:	add	x0, x0, #0x382
  23b4dc:	add	x2, x2, #0x506
  23b4e0:	mov	x3, xzr
  23b4e4:	str	xzr, [x24]
  23b4e8:	bl	241520 <strjoin_real@plt>
  23b4ec:	mov	x21, x0
  23b4f0:	stur	x0, [x29, #-8]
  23b4f4:	cbz	x0, 23b618 <session_start_scope+0x198>
  23b4f8:	adrp	x8, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23b4fc:	add	x8, x8, #0xaf5
  23b500:	stur	x8, [x29, #-40]
  23b504:	ldr	x8, [x19, #8]
  23b508:	adrp	x9, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23b50c:	add	x9, x9, #0xdd1
  23b510:	mov	x25, xzr
  23b514:	stp	x8, x9, [x29, #-32]
  23b518:	ldr	x8, [x19, #40]
  23b51c:	mov	x23, xzr
  23b520:	sub	x26, x29, #0x28
  23b524:	ldr	x8, [x8, #16]
  23b528:	stur	x8, [x29, #-16]
  23b52c:	ldr	x0, [x26, x25]
  23b530:	cbz	x0, 23b548 <session_start_scope+0xc8>
  23b534:	bl	240d30 <strlen@plt>
  23b538:	add	x25, x25, #0x8
  23b53c:	cmp	x25, #0x20
  23b540:	add	x23, x0, x23
  23b544:	b.ne	23b52c <session_start_scope+0xac>  // b.any
  23b548:	add	x23, x23, #0x1
  23b54c:	mov	w0, #0x1                   	// #1
  23b550:	mov	x1, x23
  23b554:	bl	23c890 <size_multiply_overflow>
  23b558:	tbnz	w0, #0, 23b728 <session_start_scope+0x2a8>
  23b55c:	cmp	x23, #0x400, lsl #12
  23b560:	b.hi	23b734 <session_start_scope+0x2b4>  // b.pmore
  23b564:	add	x9, x23, #0xf
  23b568:	mov	x8, sp
  23b56c:	and	x9, x9, #0xfffffffffffffff0
  23b570:	sub	x23, x8, x9
  23b574:	mov	sp, x23
  23b578:	mov	x25, xzr
  23b57c:	sub	x26, x29, #0x28
  23b580:	mov	x0, x23
  23b584:	ldr	x1, [x26, x25]
  23b588:	cbz	x1, 23b59c <session_start_scope+0x11c>
  23b58c:	bl	240d40 <stpcpy@plt>
  23b590:	add	x25, x25, #0x8
  23b594:	cmp	x25, #0x20
  23b598:	b.ne	23b584 <session_start_scope+0x104>  // b.any
  23b59c:	strb	wzr, [x0]
  23b5a0:	ldr	x8, [x19, #40]
  23b5a4:	adrp	x9, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23b5a8:	adrp	x12, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23b5ac:	add	x9, x9, #0x4dd
  23b5b0:	ldp	x11, x10, [x8, #56]
  23b5b4:	add	x12, x12, #0xfc2
  23b5b8:	ldr	x0, [x19]
  23b5bc:	ldr	w2, [x19, #152]
  23b5c0:	ldr	x3, [x8, #48]
  23b5c4:	stp	x10, x11, [x29, #-64]
  23b5c8:	stp	x9, x12, [x29, #-104]
  23b5cc:	stur	xzr, [x29, #-48]
  23b5d0:	stp	x10, x11, [x29, #-88]
  23b5d4:	stur	xzr, [x29, #-72]
  23b5d8:	ldr	x7, [x8, #24]
  23b5dc:	sub	sp, sp, #0x20
  23b5e0:	sub	x5, x29, #0x40
  23b5e4:	sub	x6, x29, #0x68
  23b5e8:	mov	x1, x21
  23b5ec:	mov	x4, x23
  23b5f0:	stp	x20, x24, [sp, #8]
  23b5f4:	str	x22, [sp]
  23b5f8:	bl	22f7bc <manager_start_scope>
  23b5fc:	add	sp, sp, #0x20
  23b600:	tbnz	w0, #31, 23b638 <session_start_scope+0x1b8>
  23b604:	ldur	x8, [x29, #-8]
  23b608:	mov	w21, #0x1                   	// #1
  23b60c:	stur	xzr, [x29, #-8]
  23b610:	str	x8, [x19, #120]
  23b614:	b	23b6a0 <session_start_scope+0x220>
  23b618:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b61c:	adrp	x3, 207000 <inhibit_what_to_string.buffer+0x207000>
  23b620:	add	x1, x1, #0x3ce
  23b624:	add	x3, x3, #0xdc6
  23b628:	mov	w2, #0x282                 	// #642
  23b62c:	bl	240af0 <log_oom_internal@plt>
  23b630:	mov	w20, w0
  23b634:	b	23b6a0 <session_start_scope+0x220>
  23b638:	mov	w22, w0
  23b63c:	mov	w0, wzr
  23b640:	bl	240750 <log_get_max_level_realm@plt>
  23b644:	cmp	w0, #0x3
  23b648:	b.lt	23b694 <session_start_scope+0x214>  // b.tstop
  23b64c:	mov	x0, x20
  23b650:	mov	w1, w22
  23b654:	bl	240cc0 <bus_error_message@plt>
  23b658:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b65c:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  23b660:	adrp	x5, 212000 <inhibit_what_to_string.buffer+0x212000>
  23b664:	mov	x7, x0
  23b668:	add	x2, x2, #0x3ce
  23b66c:	add	x4, x4, #0xdc6
  23b670:	add	x5, x5, #0x38b
  23b674:	mov	w0, #0x3                   	// #3
  23b678:	mov	w3, #0x29a                 	// #666
  23b67c:	mov	w1, w22
  23b680:	mov	x6, x21
  23b684:	bl	240770 <log_internal_realm@plt>
  23b688:	mov	w20, w0
  23b68c:	mov	w21, wzr
  23b690:	b	23b6a0 <session_start_scope+0x220>
  23b694:	mov	w21, wzr
  23b698:	neg	w8, w22
  23b69c:	sub	w20, w21, w8, uxtb
  23b6a0:	sub	x0, x29, #0x8
  23b6a4:	bl	23a2e0 <freep>
  23b6a8:	cbz	w21, 23b6c4 <session_start_scope+0x244>
  23b6ac:	ldr	x8, [x19]
  23b6b0:	ldr	x1, [x19, #120]
  23b6b4:	mov	x2, x19
  23b6b8:	ldr	x0, [x8, #216]
  23b6bc:	bl	240d00 <hashmap_put@plt>
  23b6c0:	mov	w20, wzr
  23b6c4:	mov	w0, w20
  23b6c8:	mov	sp, x29
  23b6cc:	ldp	x20, x19, [sp, #64]
  23b6d0:	ldp	x22, x21, [sp, #48]
  23b6d4:	ldp	x24, x23, [sp, #32]
  23b6d8:	ldp	x26, x25, [sp, #16]
  23b6dc:	ldp	x29, x30, [sp], #80
  23b6e0:	ret
  23b6e4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23b6e8:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b6ec:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23b6f0:	add	x1, x1, #0x6de
  23b6f4:	add	x2, x2, #0x3ce
  23b6f8:	add	x4, x4, #0x7f1
  23b6fc:	mov	w3, #0x277                 	// #631
  23b700:	bl	240790 <log_assert_failed_realm@plt>
  23b704:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23b708:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b70c:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23b710:	add	x1, x1, #0x74e
  23b714:	add	x2, x2, #0x3ce
  23b718:	add	x4, x4, #0x7f1
  23b71c:	mov	w3, #0x278                 	// #632
  23b720:	mov	w0, wzr
  23b724:	bl	240790 <log_assert_failed_realm@plt>
  23b728:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23b72c:	add	x1, x1, #0xf50
  23b730:	b	23b73c <session_start_scope+0x2bc>
  23b734:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  23b738:	add	x1, x1, #0xa15
  23b73c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b740:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23b744:	add	x2, x2, #0x3ce
  23b748:	add	x4, x4, #0x7f1
  23b74c:	mov	w3, #0x284                 	// #644
  23b750:	mov	w0, wzr
  23b754:	bl	240790 <log_assert_failed_realm@plt>

000000000023b758 <session_stop>:
  23b758:	stp	x29, x30, [sp, #-32]!
  23b75c:	stp	x20, x19, [sp, #16]
  23b760:	mov	x29, sp
  23b764:	cbz	x0, 23b804 <session_stop+0xac>
  23b768:	ldr	x8, [x0, #40]
  23b76c:	mov	x19, x0
  23b770:	cbz	x8, 23b7e8 <session_stop+0x90>
  23b774:	ldrb	w8, [x19, #209]
  23b778:	and	w8, w8, #0x6
  23b77c:	cmp	w8, #0x2
  23b780:	b.ne	23b7f0 <session_stop+0x98>  // b.any
  23b784:	ldr	x0, [x19, #224]
  23b788:	mov	w20, w1
  23b78c:	bl	240810 <sd_event_source_unref@plt>
  23b790:	ldr	x8, [x19, #136]
  23b794:	str	x0, [x19, #224]
  23b798:	cbz	x8, 23b7a8 <session_stop+0x50>
  23b79c:	mov	x0, x8
  23b7a0:	mov	x1, x19
  23b7a4:	bl	235794 <seat_evict_position>
  23b7a8:	mov	x0, x19
  23b7ac:	bl	23b824 <session_remove_fifo>
  23b7b0:	and	w1, w20, #0x1
  23b7b4:	mov	x0, x19
  23b7b8:	bl	23b89c <session_stop_scope>
  23b7bc:	ldrb	w8, [x19, #209]
  23b7c0:	mov	w20, w0
  23b7c4:	ldr	x0, [x19, #40]
  23b7c8:	orr	w8, w8, #0x4
  23b7cc:	strb	w8, [x19, #209]
  23b7d0:	bl	23ef10 <user_elect_display>
  23b7d4:	mov	x0, x19
  23b7d8:	bl	239e28 <session_save>
  23b7dc:	ldr	x0, [x19, #40]
  23b7e0:	bl	23dc5c <user_save>
  23b7e4:	b	23b7f4 <session_stop+0x9c>
  23b7e8:	mov	w20, #0xffffff8c            	// #-116
  23b7ec:	b	23b7f4 <session_stop+0x9c>
  23b7f0:	mov	w20, wzr
  23b7f4:	mov	w0, w20
  23b7f8:	ldp	x20, x19, [sp, #16]
  23b7fc:	ldp	x29, x30, [sp], #32
  23b800:	ret
  23b804:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23b808:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b80c:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23b810:	add	x1, x1, #0x6de
  23b814:	add	x2, x2, #0x3ce
  23b818:	add	x4, x4, #0xedc
  23b81c:	mov	w3, #0x30c                 	// #780
  23b820:	bl	240790 <log_assert_failed_realm@plt>

000000000023b824 <session_remove_fifo>:
  23b824:	stp	x29, x30, [sp, #-32]!
  23b828:	str	x19, [sp, #16]
  23b82c:	mov	x29, sp
  23b830:	cbz	x0, 23b87c <session_remove_fifo+0x58>
  23b834:	mov	x19, x0
  23b838:	ldr	x0, [x0, #176]
  23b83c:	bl	240810 <sd_event_source_unref@plt>
  23b840:	ldr	w8, [x19, #160]
  23b844:	str	x0, [x19, #176]
  23b848:	mov	w0, w8
  23b84c:	bl	240820 <safe_close@plt>
  23b850:	ldr	x8, [x19, #168]
  23b854:	str	w0, [x19, #160]
  23b858:	cbz	x8, 23b870 <session_remove_fifo+0x4c>
  23b85c:	mov	x0, x8
  23b860:	bl	2411d0 <unlink@plt>
  23b864:	ldr	x0, [x19, #168]
  23b868:	bl	239cb4 <mfree>
  23b86c:	str	xzr, [x19, #168]
  23b870:	ldr	x19, [sp, #16]
  23b874:	ldp	x29, x30, [sp], #32
  23b878:	ret
  23b87c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23b880:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b884:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23b888:	add	x1, x1, #0x6de
  23b88c:	add	x2, x2, #0x3ce
  23b890:	add	x4, x4, #0x787
  23b894:	mov	w3, #0x43b                 	// #1083
  23b898:	bl	240790 <log_assert_failed_realm@plt>

000000000023b89c <session_stop_scope>:
  23b89c:	sub	sp, sp, #0x80
  23b8a0:	stp	x29, x30, [sp, #80]
  23b8a4:	add	x29, sp, #0x50
  23b8a8:	str	x21, [sp, #96]
  23b8ac:	stp	x20, x19, [sp, #112]
  23b8b0:	stp	xzr, xzr, [x29, #-24]
  23b8b4:	stur	xzr, [x29, #-8]
  23b8b8:	cbz	x0, 23baac <session_stop_scope+0x210>
  23b8bc:	mov	w19, w1
  23b8c0:	ldr	x1, [x0, #120]
  23b8c4:	mov	x20, x0
  23b8c8:	cbz	x1, 23ba78 <session_stop_scope+0x1dc>
  23b8cc:	ldr	x0, [x20]
  23b8d0:	sub	x2, x29, #0x18
  23b8d4:	bl	22fea4 <manager_abandon_scope>
  23b8d8:	tbz	w0, #31, 23b930 <session_stop_scope+0x94>
  23b8dc:	mov	w21, w0
  23b8e0:	mov	w0, wzr
  23b8e4:	bl	240750 <log_get_max_level_realm@plt>
  23b8e8:	cmp	w0, #0x4
  23b8ec:	b.lt	23b928 <session_stop_scope+0x8c>  // b.tstop
  23b8f0:	sub	x0, x29, #0x18
  23b8f4:	mov	w1, w21
  23b8f8:	bl	240cc0 <bus_error_message@plt>
  23b8fc:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b900:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b904:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  23b908:	mov	x6, x0
  23b90c:	add	x2, x2, #0x3ce
  23b910:	add	x4, x4, #0x417
  23b914:	add	x5, x5, #0xb4f
  23b918:	mov	w0, #0x4                   	// #4
  23b91c:	mov	w3, #0x2ea                 	// #746
  23b920:	mov	w1, w21
  23b924:	bl	240770 <log_internal_realm@plt>
  23b928:	sub	x0, x29, #0x18
  23b92c:	bl	240c80 <sd_bus_error_free@plt>
  23b930:	mov	x21, x20
  23b934:	ldr	x0, [x21, #128]!
  23b938:	bl	239cb4 <mfree>
  23b93c:	str	xzr, [x21]
  23b940:	tbnz	w19, #0, 23b958 <session_stop_scope+0xbc>
  23b944:	ldr	x8, [x20, #40]
  23b948:	ldr	x0, [x20]
  23b94c:	ldr	x1, [x8, #16]
  23b950:	bl	2282b4 <manager_shall_kill>
  23b954:	tbz	w0, #0, 23b9c8 <session_stop_scope+0x12c>
  23b958:	ldr	x0, [x20]
  23b95c:	ldr	x1, [x20, #120]
  23b960:	sub	x2, x29, #0x18
  23b964:	mov	x3, x21
  23b968:	bl	22fd54 <manager_stop_unit>
  23b96c:	tbz	w0, #31, 23ba78 <session_stop_scope+0x1dc>
  23b970:	mov	w20, w0
  23b974:	mov	w0, wzr
  23b978:	bl	240750 <log_get_max_level_realm@plt>
  23b97c:	tbz	w19, #0, 23ba38 <session_stop_scope+0x19c>
  23b980:	cmp	w0, #0x3
  23b984:	b.lt	23ba9c <session_stop_scope+0x200>  // b.tstop
  23b988:	sub	x0, x29, #0x18
  23b98c:	mov	w1, w20
  23b990:	bl	240cc0 <bus_error_message@plt>
  23b994:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b998:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b99c:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23b9a0:	mov	x6, x0
  23b9a4:	add	x2, x2, #0x3ce
  23b9a8:	add	x4, x4, #0x417
  23b9ac:	add	x5, x5, #0xfe0
  23b9b0:	mov	w0, #0x3                   	// #3
  23b9b4:	mov	w3, #0x2f6                 	// #758
  23b9b8:	mov	w1, w20
  23b9bc:	bl	240770 <log_internal_realm@plt>
  23b9c0:	mov	w19, w0
  23b9c4:	b	23ba7c <session_stop_scope+0x1e0>
  23b9c8:	ldr	x8, [x20, #40]
  23b9cc:	ldr	w9, [x20, #24]
  23b9d0:	ldr	w10, [x20, #152]
  23b9d4:	ldr	x6, [x20, #8]
  23b9d8:	ldr	x8, [x8, #16]
  23b9dc:	cmp	w9, #0x3
  23b9e0:	mov	w9, #0x6                   	// #6
  23b9e4:	cinc	w0, w9, eq  // eq = none
  23b9e8:	adrp	x9, 207000 <inhibit_what_to_string.buffer+0x207000>
  23b9ec:	str	w10, [sp, #16]
  23b9f0:	adrp	x10, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23b9f4:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b9f8:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23b9fc:	adrp	x5, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23ba00:	adrp	x7, 208000 <inhibit_what_to_string.buffer+0x208000>
  23ba04:	add	x9, x9, #0x8af
  23ba08:	add	x10, x10, #0x7c3
  23ba0c:	add	x2, x2, #0x3ce
  23ba10:	add	x4, x4, #0x417
  23ba14:	add	x5, x5, #0x6b
  23ba18:	add	x7, x7, #0x27d
  23ba1c:	mov	w3, #0x303                 	// #771
  23ba20:	mov	w1, wzr
  23ba24:	stp	x6, xzr, [sp, #32]
  23ba28:	str	x9, [sp, #24]
  23ba2c:	stp	x8, x10, [sp]
  23ba30:	bl	240d70 <log_struct_internal@plt>
  23ba34:	b	23ba78 <session_stop_scope+0x1dc>
  23ba38:	cmp	w0, #0x4
  23ba3c:	b.lt	23ba78 <session_stop_scope+0x1dc>  // b.tstop
  23ba40:	sub	x0, x29, #0x18
  23ba44:	mov	w1, w20
  23ba48:	bl	240cc0 <bus_error_message@plt>
  23ba4c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23ba50:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23ba54:	adrp	x5, 211000 <inhibit_what_to_string.buffer+0x211000>
  23ba58:	mov	x6, x0
  23ba5c:	add	x2, x2, #0x3ce
  23ba60:	add	x4, x4, #0x417
  23ba64:	add	x5, x5, #0x309
  23ba68:	mov	w0, #0x4                   	// #4
  23ba6c:	mov	w3, #0x2f8                 	// #760
  23ba70:	mov	w1, w20
  23ba74:	bl	240770 <log_internal_realm@plt>
  23ba78:	mov	w19, wzr
  23ba7c:	sub	x0, x29, #0x18
  23ba80:	bl	240c80 <sd_bus_error_free@plt>
  23ba84:	mov	w0, w19
  23ba88:	ldp	x20, x19, [sp, #112]
  23ba8c:	ldr	x21, [sp, #96]
  23ba90:	ldp	x29, x30, [sp, #80]
  23ba94:	add	sp, sp, #0x80
  23ba98:	ret
  23ba9c:	mov	w8, wzr
  23baa0:	neg	w9, w20
  23baa4:	sub	w19, w8, w9, uxtb
  23baa8:	b	23ba7c <session_stop_scope+0x1e0>
  23baac:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23bab0:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23bab4:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  23bab8:	add	x1, x1, #0x6de
  23babc:	add	x2, x2, #0x3ce
  23bac0:	add	x4, x4, #0x1e4
  23bac4:	mov	w3, #0x2e0                 	// #736
  23bac8:	bl	240790 <log_assert_failed_realm@plt>

000000000023bacc <session_finalize>:
  23bacc:	sub	sp, sp, #0x60
  23bad0:	stp	x29, x30, [sp, #64]
  23bad4:	str	x19, [sp, #80]
  23bad8:	add	x29, sp, #0x40
  23badc:	cbz	x0, 23bc30 <session_finalize+0x164>
  23bae0:	ldr	x8, [x0, #40]
  23bae4:	mov	x19, x0
  23bae8:	cbz	x8, 23bc1c <session_finalize+0x150>
  23baec:	ldrb	w9, [x19, #209]
  23baf0:	tbz	w9, #1, 23bb68 <session_finalize+0x9c>
  23baf4:	ldr	w9, [x19, #24]
  23baf8:	ldr	w10, [x19, #152]
  23bafc:	ldr	x7, [x19, #8]
  23bb00:	ldr	x8, [x8, #16]
  23bb04:	cmp	w9, #0x3
  23bb08:	mov	w9, #0x6                   	// #6
  23bb0c:	cinc	w0, w9, eq  // eq = none
  23bb10:	adrp	x9, 208000 <inhibit_what_to_string.buffer+0x208000>
  23bb14:	str	w10, [sp, #24]
  23bb18:	adrp	x10, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23bb1c:	adrp	x11, 208000 <inhibit_what_to_string.buffer+0x208000>
  23bb20:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23bb24:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  23bb28:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23bb2c:	adrp	x6, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23bb30:	add	x9, x9, #0xd12
  23bb34:	add	x10, x10, #0x7c3
  23bb38:	add	x11, x11, #0x27d
  23bb3c:	add	x2, x2, #0x3ce
  23bb40:	add	x4, x4, #0x288
  23bb44:	add	x5, x5, #0xee2
  23bb48:	add	x6, x6, #0x6b
  23bb4c:	mov	w3, #0x33d                 	// #829
  23bb50:	mov	w1, wzr
  23bb54:	stp	x7, xzr, [sp, #40]
  23bb58:	str	x9, [sp, #32]
  23bb5c:	stp	x8, x10, [sp, #8]
  23bb60:	str	x11, [sp]
  23bb64:	bl	240d70 <log_struct_internal@plt>
  23bb68:	ldr	x0, [x19, #224]
  23bb6c:	bl	240810 <sd_event_source_unref@plt>
  23bb70:	ldr	x8, [x19, #136]
  23bb74:	str	x0, [x19, #224]
  23bb78:	cbz	x8, 23bb90 <session_finalize+0xc4>
  23bb7c:	mov	x0, x8
  23bb80:	mov	x1, x19
  23bb84:	bl	235794 <seat_evict_position>
  23bb88:	b	23bb90 <session_finalize+0xc4>
  23bb8c:	bl	238bb4 <session_device_free>
  23bb90:	ldr	x0, [x19, #240]
  23bb94:	bl	239c40 <hashmap_first>
  23bb98:	cbnz	x0, 23bb8c <session_finalize+0xc0>
  23bb9c:	ldr	x0, [x19, #32]
  23bba0:	bl	2411d0 <unlink@plt>
  23bba4:	mov	x0, x19
  23bba8:	bl	23bc50 <session_add_to_gc_queue>
  23bbac:	ldr	x0, [x19, #40]
  23bbb0:	bl	23e844 <user_add_to_gc_queue>
  23bbb4:	ldrb	w8, [x19, #209]
  23bbb8:	tbz	w8, #1, 23bbd4 <session_finalize+0x108>
  23bbbc:	mov	x0, x19
  23bbc0:	mov	w1, wzr
  23bbc4:	bl	2377b8 <session_send_signal>
  23bbc8:	ldrb	w8, [x19, #209]
  23bbcc:	and	w8, w8, #0xfffffffd
  23bbd0:	strb	w8, [x19, #209]
  23bbd4:	ldr	x0, [x19, #136]
  23bbd8:	cbz	x0, 23bbf8 <session_finalize+0x12c>
  23bbdc:	ldr	x8, [x0, #32]
  23bbe0:	cmp	x8, x19
  23bbe4:	b.ne	23bbf0 <session_finalize+0x124>  // b.any
  23bbe8:	mov	x1, xzr
  23bbec:	bl	234f44 <seat_set_active>
  23bbf0:	ldr	x0, [x19, #136]
  23bbf4:	bl	2347cc <seat_save>
  23bbf8:	ldr	x0, [x19, #40]
  23bbfc:	bl	23dc5c <user_save>
  23bc00:	ldr	x0, [x19, #40]
  23bc04:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23bc08:	add	x1, x1, #0x447
  23bc0c:	mov	x2, xzr
  23bc10:	bl	23d5f0 <user_send_changed>
  23bc14:	mov	w0, wzr
  23bc18:	b	23bc20 <session_finalize+0x154>
  23bc1c:	mov	w0, #0xffffff8c            	// #-116
  23bc20:	ldr	x19, [sp, #80]
  23bc24:	ldp	x29, x30, [sp, #64]
  23bc28:	add	sp, sp, #0x60
  23bc2c:	ret
  23bc30:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23bc34:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23bc38:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23bc3c:	add	x1, x1, #0x6de
  23bc40:	add	x2, x2, #0x3ce
  23bc44:	add	x4, x4, #0xe4b
  23bc48:	mov	w3, #0x332                 	// #818
  23bc4c:	bl	240790 <log_assert_failed_realm@plt>

000000000023bc50 <session_add_to_gc_queue>:
  23bc50:	stp	x29, x30, [sp, #-16]!
  23bc54:	mov	x29, sp
  23bc58:	cbz	x0, 23bc94 <session_add_to_gc_queue+0x44>
  23bc5c:	ldrb	w8, [x0, #209]
  23bc60:	tbnz	w8, #0, 23bc8c <session_add_to_gc_queue+0x3c>
  23bc64:	ldr	x8, [x0]
  23bc68:	ldr	x9, [x8, #88]
  23bc6c:	str	x9, [x0, #288]
  23bc70:	cbz	x9, 23bc78 <session_add_to_gc_queue+0x28>
  23bc74:	str	x0, [x9, #296]
  23bc78:	str	xzr, [x0, #296]
  23bc7c:	str	x0, [x8, #88]
  23bc80:	ldrb	w8, [x0, #209]
  23bc84:	orr	w8, w8, #0x1
  23bc88:	strb	w8, [x0, #209]
  23bc8c:	ldp	x29, x30, [sp], #16
  23bc90:	ret
  23bc94:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23bc98:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23bc9c:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  23bca0:	add	x1, x1, #0x6de
  23bca4:	add	x2, x2, #0x3ce
  23bca8:	add	x4, x4, #0xd2e
  23bcac:	mov	w3, #0x46e                 	// #1134
  23bcb0:	bl	240790 <log_assert_failed_realm@plt>

000000000023bcb4 <session_release>:
  23bcb4:	stp	x29, x30, [sp, #-48]!
  23bcb8:	str	x21, [sp, #16]
  23bcbc:	stp	x20, x19, [sp, #32]
  23bcc0:	mov	x29, sp
  23bcc4:	cbz	x0, 23bd38 <session_release+0x84>
  23bcc8:	ldrb	w8, [x0, #209]
  23bccc:	mov	x19, x0
  23bcd0:	and	w8, w8, #0x6
  23bcd4:	cmp	w8, #0x2
  23bcd8:	b.ne	23bce8 <session_release+0x34>  // b.any
  23bcdc:	mov	x20, x19
  23bce0:	ldr	x8, [x20, #224]!
  23bce4:	cbz	x8, 23bcfc <session_release+0x48>
  23bce8:	mov	w0, wzr
  23bcec:	ldp	x20, x19, [sp, #32]
  23bcf0:	ldr	x21, [sp, #16]
  23bcf4:	ldp	x29, x30, [sp], #48
  23bcf8:	ret
  23bcfc:	ldr	x8, [x19]
  23bd00:	mov	w0, #0x1                   	// #1
  23bd04:	ldr	x21, [x8]
  23bd08:	bl	2407a0 <now@plt>
  23bd0c:	bl	23bd58 <usec_add>
  23bd10:	adrp	x5, 23b000 <session_set_controller+0x124>
  23bd14:	mov	x3, x0
  23bd18:	add	x5, x5, #0xd6c
  23bd1c:	mov	w2, #0x1                   	// #1
  23bd20:	mov	x0, x21
  23bd24:	mov	x1, x20
  23bd28:	mov	x4, xzr
  23bd2c:	mov	x6, x19
  23bd30:	bl	240b30 <sd_event_add_time@plt>
  23bd34:	b	23bcec <session_release+0x38>
  23bd38:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23bd3c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23bd40:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23bd44:	add	x1, x1, #0x6de
  23bd48:	add	x2, x2, #0x3ce
  23bd4c:	add	x4, x4, #0x3f8
  23bd50:	mov	w3, #0x369                 	// #873
  23bd54:	bl	240790 <log_assert_failed_realm@plt>

000000000023bd58 <usec_add>:
  23bd58:	mov	w8, #0x2d00                	// #11520
  23bd5c:	movk	w8, #0x131, lsl #16
  23bd60:	adds	x8, x0, x8
  23bd64:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
  23bd68:	ret

000000000023bd6c <release_timeout_callback>:
  23bd6c:	stp	x29, x30, [sp, #-16]!
  23bd70:	mov	x29, sp
  23bd74:	cbz	x0, 23bd94 <release_timeout_callback+0x28>
  23bd78:	cbz	x2, 23bdb4 <release_timeout_callback+0x48>
  23bd7c:	mov	x0, x2
  23bd80:	mov	w1, wzr
  23bd84:	bl	23b758 <session_stop>
  23bd88:	mov	w0, wzr
  23bd8c:	ldp	x29, x30, [sp], #16
  23bd90:	ret
  23bd94:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23bd98:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23bd9c:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23bda0:	add	x1, x1, #0xb7d
  23bda4:	add	x2, x2, #0x3ce
  23bda8:	add	x4, x4, #0xf38
  23bdac:	mov	w3, #0x361                 	// #865
  23bdb0:	bl	240790 <log_assert_failed_realm@plt>
  23bdb4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23bdb8:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23bdbc:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23bdc0:	add	x1, x1, #0x6de
  23bdc4:	add	x2, x2, #0x3ce
  23bdc8:	add	x4, x4, #0xf38
  23bdcc:	mov	w3, #0x362                 	// #866
  23bdd0:	mov	w0, wzr
  23bdd4:	bl	240790 <log_assert_failed_realm@plt>

000000000023bdd8 <session_get_idle_hint>:
  23bdd8:	stp	x29, x30, [sp, #-48]!
  23bddc:	mov	x29, sp
  23bde0:	str	x21, [sp, #16]
  23bde4:	stp	x20, x19, [sp, #32]
  23bde8:	str	xzr, [x29, #24]
  23bdec:	cbz	x0, 23bec0 <session_get_idle_hint+0xe8>
  23bdf0:	ldrb	w8, [x0, #184]
  23bdf4:	mov	x20, x1
  23bdf8:	mov	x19, x0
  23bdfc:	cbz	w8, 23be1c <session_get_idle_hint+0x44>
  23be00:	cbz	x20, 23be0c <session_get_idle_hint+0x34>
  23be04:	ldr	q0, [x19, #192]
  23be08:	str	q0, [x20]
  23be0c:	ldrb	w8, [x19, #184]
  23be10:	cmp	w8, #0x0
  23be14:	cset	w0, ne  // ne = any
  23be18:	b	23bea8 <session_get_idle_hint+0xd0>
  23be1c:	ldr	w8, [x19, #20]
  23be20:	sub	w8, w8, #0x2
  23be24:	cmp	w8, #0x3
  23be28:	b.cc	23be98 <session_get_idle_hint+0xc0>  // b.lo, b.ul, b.last
  23be2c:	ldr	x0, [x19, #72]
  23be30:	cbz	x0, 23be40 <session_get_idle_hint+0x68>
  23be34:	add	x1, x29, #0x18
  23be38:	bl	23bee0 <get_tty_atime>
  23be3c:	tbz	w0, #31, 23be60 <session_get_idle_hint+0x88>
  23be40:	ldr	w21, [x19, #152]
  23be44:	mov	w0, w21
  23be48:	bl	239c8c <pid_is_valid>
  23be4c:	tbz	w0, #0, 23be98 <session_get_idle_hint+0xc0>
  23be50:	add	x1, x29, #0x18
  23be54:	mov	w0, w21
  23be58:	bl	23bfec <get_process_ctty_atime>
  23be5c:	tbnz	w0, #31, 23be98 <session_get_idle_hint+0xc0>
  23be60:	cbz	x20, 23be70 <session_get_idle_hint+0x98>
  23be64:	ldr	x1, [x29, #24]
  23be68:	mov	x0, x20
  23be6c:	bl	241850 <dual_timestamp_from_realtime@plt>
  23be70:	mov	w0, wzr
  23be74:	bl	2407a0 <now@plt>
  23be78:	ldr	x8, [x19]
  23be7c:	ldr	x8, [x8, #376]
  23be80:	cbz	x8, 23beb8 <session_get_idle_hint+0xe0>
  23be84:	ldr	x9, [x29, #24]
  23be88:	add	x8, x9, x8
  23be8c:	cmp	x8, x0
  23be90:	cset	w0, ls  // ls = plast
  23be94:	b	23bea8 <session_get_idle_hint+0xd0>
  23be98:	mov	w0, wzr
  23be9c:	cbz	x20, 23bea8 <session_get_idle_hint+0xd0>
  23bea0:	ldr	q0, [x19, #192]
  23bea4:	str	q0, [x20]
  23bea8:	ldp	x20, x19, [sp, #32]
  23beac:	ldr	x21, [sp, #16]
  23beb0:	ldp	x29, x30, [sp], #48
  23beb4:	ret
  23beb8:	mov	w0, wzr
  23bebc:	b	23bea8 <session_get_idle_hint+0xd0>
  23bec0:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23bec4:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23bec8:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23becc:	add	x1, x1, #0x6de
  23bed0:	add	x2, x2, #0x3ce
  23bed4:	add	x4, x4, #0x756
  23bed8:	mov	w3, #0x3aa                 	// #938
  23bedc:	bl	240790 <log_assert_failed_realm@plt>

000000000023bee0 <get_tty_atime>:
  23bee0:	sub	sp, sp, #0xb0
  23bee4:	stp	x29, x30, [sp, #128]
  23bee8:	add	x29, sp, #0x80
  23beec:	str	x21, [sp, #144]
  23bef0:	stp	x20, x19, [sp, #160]
  23bef4:	str	xzr, [x29, #24]
  23bef8:	cbz	x0, 23bfa8 <get_tty_atime+0xc8>
  23befc:	mov	x19, x1
  23bf00:	cbz	x1, 23bfc8 <get_tty_atime+0xe8>
  23bf04:	mov	x20, x0
  23bf08:	bl	241860 <path_is_absolute@plt>
  23bf0c:	tbz	w0, #0, 23bf2c <get_tty_atime+0x4c>
  23bf10:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23bf14:	add	x1, x1, #0x696
  23bf18:	mov	x0, x20
  23bf1c:	bl	240f00 <path_startswith@plt>
  23bf20:	cbnz	x0, 23bf4c <get_tty_atime+0x6c>
  23bf24:	mov	w20, #0xfffffffe            	// #-2
  23bf28:	b	23bf88 <get_tty_atime+0xa8>
  23bf2c:	adrp	x0, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23bf30:	add	x0, x0, #0x9d1
  23bf34:	mov	x2, #0xffffffffffffffff    	// #-1
  23bf38:	mov	x1, x20
  23bf3c:	bl	2413d0 <path_join_internal@plt>
  23bf40:	mov	x20, x0
  23bf44:	str	x0, [x29, #24]
  23bf48:	cbz	x0, 23bf84 <get_tty_atime+0xa4>
  23bf4c:	mov	x1, sp
  23bf50:	mov	x0, x20
  23bf54:	mov	x21, sp
  23bf58:	bl	240620 <lstat64>
  23bf5c:	tbnz	w0, #31, 23bf74 <get_tty_atime+0x94>
  23bf60:	add	x0, x21, #0x48
  23bf64:	bl	241870 <timespec_load@plt>
  23bf68:	mov	w20, wzr
  23bf6c:	str	x0, [x19]
  23bf70:	b	23bf88 <get_tty_atime+0xa8>
  23bf74:	bl	240930 <__errno_location@plt>
  23bf78:	ldr	w8, [x0]
  23bf7c:	neg	w20, w8
  23bf80:	b	23bf88 <get_tty_atime+0xa8>
  23bf84:	mov	w20, #0xfffffff4            	// #-12
  23bf88:	add	x0, x29, #0x18
  23bf8c:	bl	23a2e0 <freep>
  23bf90:	mov	w0, w20
  23bf94:	ldp	x20, x19, [sp, #160]
  23bf98:	ldr	x21, [sp, #144]
  23bf9c:	ldp	x29, x30, [sp, #128]
  23bfa0:	add	sp, sp, #0xb0
  23bfa4:	ret
  23bfa8:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  23bfac:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23bfb0:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23bfb4:	add	x1, x1, #0xe99
  23bfb8:	add	x2, x2, #0x3ce
  23bfbc:	add	x4, x4, #0xe6b
  23bfc0:	mov	w3, #0x385                 	// #901
  23bfc4:	bl	240790 <log_assert_failed_realm@plt>
  23bfc8:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23bfcc:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23bfd0:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23bfd4:	add	x1, x1, #0x9ac
  23bfd8:	add	x2, x2, #0x3ce
  23bfdc:	add	x4, x4, #0xe6b
  23bfe0:	mov	w3, #0x386                 	// #902
  23bfe4:	mov	w0, wzr
  23bfe8:	bl	240790 <log_assert_failed_realm@plt>

000000000023bfec <get_process_ctty_atime>:
  23bfec:	sub	sp, sp, #0x30
  23bff0:	cmp	w0, #0x0
  23bff4:	stp	x29, x30, [sp, #16]
  23bff8:	stp	x20, x19, [sp, #32]
  23bffc:	add	x29, sp, #0x10
  23c000:	str	xzr, [sp, #8]
  23c004:	b.le	23c04c <get_process_ctty_atime+0x60>
  23c008:	mov	x19, x1
  23c00c:	cbz	x1, 23c070 <get_process_ctty_atime+0x84>
  23c010:	add	x2, sp, #0x8
  23c014:	mov	x1, xzr
  23c018:	bl	241880 <get_ctty@plt>
  23c01c:	tbnz	w0, #31, 23c02c <get_process_ctty_atime+0x40>
  23c020:	ldr	x0, [sp, #8]
  23c024:	mov	x1, x19
  23c028:	bl	23bee0 <get_tty_atime>
  23c02c:	mov	w20, w0
  23c030:	add	x0, sp, #0x8
  23c034:	bl	23a2e0 <freep>
  23c038:	mov	w0, w20
  23c03c:	ldp	x20, x19, [sp, #32]
  23c040:	ldp	x29, x30, [sp, #16]
  23c044:	add	sp, sp, #0x30
  23c048:	ret
  23c04c:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23c050:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c054:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23c058:	add	x1, x1, #0x77f
  23c05c:	add	x2, x2, #0x3ce
  23c060:	add	x4, x4, #0x241
  23c064:	mov	w3, #0x39c                 	// #924
  23c068:	mov	w0, wzr
  23c06c:	bl	240790 <log_assert_failed_realm@plt>
  23c070:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23c074:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c078:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23c07c:	add	x1, x1, #0x9ac
  23c080:	add	x2, x2, #0x3ce
  23c084:	add	x4, x4, #0x241
  23c088:	mov	w3, #0x39d                 	// #925
  23c08c:	mov	w0, wzr
  23c090:	bl	240790 <log_assert_failed_realm@plt>

000000000023c094 <session_set_idle_hint>:
  23c094:	stp	x29, x30, [sp, #-48]!
  23c098:	stp	x22, x21, [sp, #16]
  23c09c:	stp	x20, x19, [sp, #32]
  23c0a0:	mov	x29, sp
  23c0a4:	cbz	x0, 23c16c <session_set_idle_hint+0xd8>
  23c0a8:	ldrb	w9, [x0, #184]
  23c0ac:	and	w8, w1, #0x1
  23c0b0:	mov	x19, x0
  23c0b4:	cmp	w9, w8
  23c0b8:	b.eq	23c15c <session_set_idle_hint+0xc8>  // b.none
  23c0bc:	add	x0, x19, #0xc0
  23c0c0:	strb	w8, [x19, #184]
  23c0c4:	bl	2414b0 <dual_timestamp_get@plt>
  23c0c8:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  23c0cc:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  23c0d0:	adrp	x3, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c0d4:	add	x1, x1, #0xac8
  23c0d8:	add	x2, x2, #0xbea
  23c0dc:	add	x3, x3, #0xc2f
  23c0e0:	mov	x0, x19
  23c0e4:	mov	x4, xzr
  23c0e8:	bl	23786c <session_send_changed>
  23c0ec:	ldr	x0, [x19, #136]
  23c0f0:	cbz	x0, 23c114 <session_set_idle_hint+0x80>
  23c0f4:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  23c0f8:	adrp	x2, 211000 <inhibit_what_to_string.buffer+0x211000>
  23c0fc:	adrp	x3, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c100:	add	x1, x1, #0xac8
  23c104:	add	x2, x2, #0xbea
  23c108:	add	x3, x3, #0xc2f
  23c10c:	mov	x4, xzr
  23c110:	bl	234278 <seat_send_changed>
  23c114:	ldr	x0, [x19, #40]
  23c118:	adrp	x20, 208000 <inhibit_what_to_string.buffer+0x208000>
  23c11c:	adrp	x21, 211000 <inhibit_what_to_string.buffer+0x211000>
  23c120:	adrp	x22, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c124:	add	x20, x20, #0xac8
  23c128:	add	x21, x21, #0xbea
  23c12c:	add	x22, x22, #0xc2f
  23c130:	mov	x1, x20
  23c134:	mov	x2, x21
  23c138:	mov	x3, x22
  23c13c:	mov	x4, xzr
  23c140:	bl	23d5f0 <user_send_changed>
  23c144:	ldr	x0, [x19]
  23c148:	mov	x1, x20
  23c14c:	mov	x2, x21
  23c150:	mov	x3, x22
  23c154:	mov	x4, xzr
  23c158:	bl	22f5f0 <manager_send_changed>
  23c15c:	ldp	x20, x19, [sp, #32]
  23c160:	ldp	x22, x21, [sp, #16]
  23c164:	ldp	x29, x30, [sp], #48
  23c168:	ret
  23c16c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23c170:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c174:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23c178:	add	x1, x1, #0x6de
  23c17c:	add	x2, x2, #0x3ce
  23c180:	add	x4, x4, #0x3f6
  23c184:	mov	w3, #0x3dc                 	// #988
  23c188:	bl	240790 <log_assert_failed_realm@plt>

000000000023c18c <session_get_locked_hint>:
  23c18c:	stp	x29, x30, [sp, #-16]!
  23c190:	mov	x29, sp
  23c194:	cbz	x0, 23c1a4 <session_get_locked_hint+0x18>
  23c198:	ldrb	w0, [x0, #208]
  23c19c:	ldp	x29, x30, [sp], #16
  23c1a0:	ret
  23c1a4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23c1a8:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c1ac:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23c1b0:	add	x1, x1, #0x6de
  23c1b4:	add	x2, x2, #0x3ce
  23c1b8:	add	x4, x4, #0x423
  23c1bc:	mov	w3, #0x3ee                 	// #1006
  23c1c0:	bl	240790 <log_assert_failed_realm@plt>

000000000023c1c4 <session_set_locked_hint>:
  23c1c4:	stp	x29, x30, [sp, #-16]!
  23c1c8:	mov	x29, sp
  23c1cc:	cbz	x0, 23c1fc <session_set_locked_hint+0x38>
  23c1d0:	ldrb	w9, [x0, #208]
  23c1d4:	and	w8, w1, #0x1
  23c1d8:	cmp	w9, w8
  23c1dc:	b.eq	23c1f4 <session_set_locked_hint+0x30>  // b.none
  23c1e0:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23c1e4:	add	x1, x1, #0x5e2
  23c1e8:	mov	x2, xzr
  23c1ec:	strb	w8, [x0, #208]
  23c1f0:	bl	23786c <session_send_changed>
  23c1f4:	ldp	x29, x30, [sp], #16
  23c1f8:	ret
  23c1fc:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23c200:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c204:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23c208:	add	x1, x1, #0x6de
  23c20c:	add	x2, x2, #0x3ce
  23c210:	add	x4, x4, #0x78d
  23c214:	mov	w3, #0x3f4                 	// #1012
  23c218:	bl	240790 <log_assert_failed_realm@plt>

000000000023c21c <session_dispatch_fifo>:
  23c21c:	stp	x29, x30, [sp, #-32]!
  23c220:	str	x19, [sp, #16]
  23c224:	mov	x29, sp
  23c228:	cbz	x3, 23c260 <session_dispatch_fifo+0x44>
  23c22c:	ldr	w8, [x3, #160]
  23c230:	mov	x19, x3
  23c234:	cmp	w8, w1
  23c238:	b.ne	23c284 <session_dispatch_fifo+0x68>  // b.any
  23c23c:	mov	x0, x19
  23c240:	bl	23b824 <session_remove_fifo>
  23c244:	mov	x0, x19
  23c248:	mov	w1, wzr
  23c24c:	bl	23b758 <session_stop>
  23c250:	ldr	x19, [sp, #16]
  23c254:	mov	w0, #0x1                   	// #1
  23c258:	ldp	x29, x30, [sp], #32
  23c25c:	ret
  23c260:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23c264:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c268:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23c26c:	add	x1, x1, #0x6de
  23c270:	add	x2, x2, #0x3ce
  23c274:	add	x4, x4, #0x488
  23c278:	mov	w3, #0x401                 	// #1025
  23c27c:	mov	w0, wzr
  23c280:	bl	240790 <log_assert_failed_realm@plt>
  23c284:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23c288:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c28c:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23c290:	add	x1, x1, #0x26d
  23c294:	add	x2, x2, #0x3ce
  23c298:	add	x4, x4, #0x488
  23c29c:	mov	w3, #0x402                 	// #1026
  23c2a0:	mov	w0, wzr
  23c2a4:	bl	240790 <log_assert_failed_realm@plt>

000000000023c2a8 <session_may_gc>:
  23c2a8:	sub	sp, sp, #0x50
  23c2ac:	stp	x29, x30, [sp, #32]
  23c2b0:	str	x21, [sp, #48]
  23c2b4:	stp	x20, x19, [sp, #64]
  23c2b8:	add	x29, sp, #0x20
  23c2bc:	cbz	x0, 23c40c <session_may_gc+0x164>
  23c2c0:	mov	x19, x0
  23c2c4:	tbz	w1, #0, 23c2d0 <session_may_gc+0x28>
  23c2c8:	ldrb	w8, [x19, #209]
  23c2cc:	tbz	w8, #1, 23c3f4 <session_may_gc+0x14c>
  23c2d0:	ldr	x8, [x19, #40]
  23c2d4:	cbz	x8, 23c3f4 <session_may_gc+0x14c>
  23c2d8:	ldr	w0, [x19, #160]
  23c2dc:	tbnz	w0, #31, 23c2ec <session_may_gc+0x44>
  23c2e0:	bl	241540 <pipe_eof@plt>
  23c2e4:	cmp	w0, #0x1
  23c2e8:	b.lt	23c3ec <session_may_gc+0x144>  // b.tstop
  23c2ec:	ldr	x1, [x19, #128]
  23c2f0:	cbz	x1, 23c36c <session_may_gc+0xc4>
  23c2f4:	stp	xzr, xzr, [sp, #8]
  23c2f8:	str	xzr, [sp, #24]
  23c2fc:	ldr	x0, [x19]
  23c300:	add	x2, sp, #0x8
  23c304:	bl	230250 <manager_job_is_active>
  23c308:	mov	w20, w0
  23c30c:	tbz	w0, #31, 23c360 <session_may_gc+0xb8>
  23c310:	mov	w0, wzr
  23c314:	bl	240750 <log_get_max_level_realm@plt>
  23c318:	cmp	w0, #0x7
  23c31c:	b.lt	23c360 <session_may_gc+0xb8>  // b.tstop
  23c320:	ldr	x21, [x19, #128]
  23c324:	add	x0, sp, #0x8
  23c328:	mov	w1, w20
  23c32c:	bl	240cc0 <bus_error_message@plt>
  23c330:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c334:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  23c338:	adrp	x5, 210000 <inhibit_what_to_string.buffer+0x210000>
  23c33c:	mov	x7, x0
  23c340:	add	x2, x2, #0x3ce
  23c344:	add	x4, x4, #0x86d
  23c348:	add	x5, x5, #0x44a
  23c34c:	mov	w0, #0x7                   	// #7
  23c350:	mov	w3, #0x45b                 	// #1115
  23c354:	mov	w1, w20
  23c358:	mov	x6, x21
  23c35c:	bl	240770 <log_internal_realm@plt>
  23c360:	add	x0, sp, #0x8
  23c364:	bl	240c80 <sd_bus_error_free@plt>
  23c368:	cbnz	w20, 23c3ec <session_may_gc+0x144>
  23c36c:	ldr	x1, [x19, #120]
  23c370:	cbz	x1, 23c3f4 <session_may_gc+0x14c>
  23c374:	stp	xzr, xzr, [sp, #8]
  23c378:	str	xzr, [sp, #24]
  23c37c:	ldr	x0, [x19]
  23c380:	add	x2, sp, #0x8
  23c384:	bl	2300a0 <manager_unit_is_active>
  23c388:	mov	w20, w0
  23c38c:	tbz	w0, #31, 23c3e0 <session_may_gc+0x138>
  23c390:	mov	w0, wzr
  23c394:	bl	240750 <log_get_max_level_realm@plt>
  23c398:	cmp	w0, #0x7
  23c39c:	b.lt	23c3e0 <session_may_gc+0x138>  // b.tstop
  23c3a0:	ldr	x19, [x19, #120]
  23c3a4:	add	x0, sp, #0x8
  23c3a8:	mov	w1, w20
  23c3ac:	bl	240cc0 <bus_error_message@plt>
  23c3b0:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c3b4:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  23c3b8:	adrp	x5, 212000 <inhibit_what_to_string.buffer+0x212000>
  23c3bc:	mov	x7, x0
  23c3c0:	add	x2, x2, #0x3ce
  23c3c4:	add	x4, x4, #0x86d
  23c3c8:	add	x5, x5, #0x333
  23c3cc:	mov	w0, #0x7                   	// #7
  23c3d0:	mov	w3, #0x465                 	// #1125
  23c3d4:	mov	w1, w20
  23c3d8:	mov	x6, x19
  23c3dc:	bl	240770 <log_internal_realm@plt>
  23c3e0:	add	x0, sp, #0x8
  23c3e4:	bl	240c80 <sd_bus_error_free@plt>
  23c3e8:	cbz	w20, 23c3f4 <session_may_gc+0x14c>
  23c3ec:	mov	w0, wzr
  23c3f0:	b	23c3f8 <session_may_gc+0x150>
  23c3f4:	mov	w0, #0x1                   	// #1
  23c3f8:	ldp	x20, x19, [sp, #64]
  23c3fc:	ldr	x21, [sp, #48]
  23c400:	ldp	x29, x30, [sp, #32]
  23c404:	add	sp, sp, #0x50
  23c408:	ret
  23c40c:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23c410:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c414:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23c418:	add	x1, x1, #0x6de
  23c41c:	add	x2, x2, #0x3ce
  23c420:	add	x4, x4, #0x7cd
  23c424:	mov	w3, #0x449                 	// #1097
  23c428:	bl	240790 <log_assert_failed_realm@plt>

000000000023c42c <session_kill>:
  23c42c:	stp	x29, x30, [sp, #-16]!
  23c430:	mov	x29, sp
  23c434:	cbz	x0, 23c468 <session_kill+0x3c>
  23c438:	mov	w3, w2
  23c43c:	mov	w2, w1
  23c440:	ldr	x1, [x0, #120]
  23c444:	cbz	x1, 23c45c <session_kill+0x30>
  23c448:	ldr	x0, [x0]
  23c44c:	mov	x4, xzr
  23c450:	bl	22ffe0 <manager_kill_unit>
  23c454:	ldp	x29, x30, [sp], #16
  23c458:	ret
  23c45c:	mov	w0, #0xfffffffd            	// #-3
  23c460:	ldp	x29, x30, [sp], #16
  23c464:	ret
  23c468:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23c46c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c470:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  23c474:	add	x1, x1, #0x6de
  23c478:	add	x2, x2, #0x3ce
  23c47c:	add	x4, x4, #0x87c
  23c480:	mov	w3, #0x488                 	// #1160
  23c484:	bl	240790 <log_assert_failed_realm@plt>

000000000023c488 <session_leave_vt>:
  23c488:	stp	x29, x30, [sp, #-32]!
  23c48c:	stp	x20, x19, [sp, #16]
  23c490:	mov	x29, sp
  23c494:	cbz	x0, 23c508 <session_leave_vt+0x80>
  23c498:	ldr	w8, [x0, #148]
  23c49c:	mov	x19, x0
  23c4a0:	tbnz	w8, #31, 23c4fc <session_leave_vt+0x74>
  23c4a4:	mov	x0, x19
  23c4a8:	bl	2392a4 <session_device_pause_all>
  23c4ac:	ldr	w0, [x19, #148]
  23c4b0:	mov	w1, wzr
  23c4b4:	bl	240b60 <vt_release@plt>
  23c4b8:	tbz	w0, #31, 23c4fc <session_leave_vt+0x74>
  23c4bc:	mov	w20, w0
  23c4c0:	mov	w0, wzr
  23c4c4:	bl	240750 <log_get_max_level_realm@plt>
  23c4c8:	cmp	w0, #0x7
  23c4cc:	b.lt	23c4fc <session_leave_vt+0x74>  // b.tstop
  23c4d0:	ldr	x6, [x19, #8]
  23c4d4:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c4d8:	adrp	x4, 212000 <inhibit_what_to_string.buffer+0x212000>
  23c4dc:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23c4e0:	add	x2, x2, #0x3ce
  23c4e4:	add	x4, x4, #0x371
  23c4e8:	add	x5, x5, #0xf9e
  23c4ec:	mov	w0, #0x7                   	// #7
  23c4f0:	mov	w3, #0x50b                 	// #1291
  23c4f4:	mov	w1, w20
  23c4f8:	bl	240770 <log_internal_realm@plt>
  23c4fc:	ldp	x20, x19, [sp, #16]
  23c500:	ldp	x29, x30, [sp], #32
  23c504:	ret
  23c508:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23c50c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c510:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23c514:	add	x1, x1, #0x6de
  23c518:	add	x2, x2, #0x3ce
  23c51c:	add	x4, x4, #0xcda
  23c520:	mov	w3, #0x4f8                 	// #1272
  23c524:	bl	240790 <log_assert_failed_realm@plt>

000000000023c528 <session_is_controller>:
  23c528:	stp	x29, x30, [sp, #-16]!
  23c52c:	mov	x29, sp
  23c530:	cbz	x0, 23c548 <session_is_controller+0x20>
  23c534:	ldr	x0, [x0, #232]
  23c538:	bl	23c568 <streq_ptr>
  23c53c:	and	w0, w0, #0x1
  23c540:	ldp	x29, x30, [sp], #16
  23c544:	ret
  23c548:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23c54c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c550:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23c554:	add	x1, x1, #0x6de
  23c558:	add	x2, x2, #0x3ce
  23c55c:	add	x4, x4, #0x7bc
  23c560:	mov	w3, #0x50f                 	// #1295
  23c564:	bl	240790 <log_assert_failed_realm@plt>

000000000023c568 <streq_ptr>:
  23c568:	stp	x29, x30, [sp, #-16]!
  23c56c:	mov	x29, sp
  23c570:	bl	240f30 <strcmp_ptr@plt>
  23c574:	cmp	w0, #0x0
  23c578:	cset	w0, eq  // eq = none
  23c57c:	ldp	x29, x30, [sp], #16
  23c580:	ret

000000000023c584 <on_bus_track>:
  23c584:	stp	x29, x30, [sp, #-16]!
  23c588:	mov	x29, sp
  23c58c:	cbz	x0, 23c5a8 <on_bus_track+0x24>
  23c590:	cbz	x1, 23c5c8 <on_bus_track+0x44>
  23c594:	mov	x0, x1
  23c598:	bl	239bd0 <session_drop_controller>
  23c59c:	mov	w0, wzr
  23c5a0:	ldp	x29, x30, [sp], #16
  23c5a4:	ret
  23c5a8:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  23c5ac:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c5b0:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  23c5b4:	add	x1, x1, #0x8ed
  23c5b8:	add	x2, x2, #0x3ce
  23c5bc:	add	x4, x4, #0x4f6
  23c5c0:	mov	w3, #0x52d                 	// #1325
  23c5c4:	bl	240790 <log_assert_failed_realm@plt>
  23c5c8:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23c5cc:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c5d0:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  23c5d4:	add	x1, x1, #0x6de
  23c5d8:	add	x2, x2, #0x3ce
  23c5dc:	add	x4, x4, #0x4f6
  23c5e0:	mov	w3, #0x52e                 	// #1326
  23c5e4:	mov	w0, wzr
  23c5e8:	bl	240790 <log_assert_failed_realm@plt>

000000000023c5ec <session_prepare_vt>:
  23c5ec:	stp	x29, x30, [sp, #-48]!
  23c5f0:	mov	x29, sp
  23c5f4:	stp	x20, x19, [sp, #32]
  23c5f8:	str	xzr, [x29, #24]
  23c5fc:	ldr	w8, [x0, #144]
  23c600:	str	x21, [sp, #16]
  23c604:	cbz	w8, 23c688 <session_prepare_vt+0x9c>
  23c608:	mov	x19, x0
  23c60c:	bl	23c8fc <session_open_vt>
  23c610:	mov	w20, w0
  23c614:	tbnz	w0, #31, 23c7b4 <session_prepare_vt+0x1c8>
  23c618:	ldr	x8, [x19, #40]
  23c61c:	mov	w2, #0xffffffff            	// #-1
  23c620:	mov	w0, w20
  23c624:	ldr	w1, [x8, #8]
  23c628:	bl	241890 <fchown@plt>
  23c62c:	tbnz	w0, #31, 23c690 <session_prepare_vt+0xa4>
  23c630:	mov	w1, #0x4b45                	// #19269
  23c634:	mov	w2, #0x4                   	// #4
  23c638:	mov	w0, w20
  23c63c:	bl	240d50 <ioctl@plt>
  23c640:	tbnz	w0, #31, 23c6d0 <session_prepare_vt+0xe4>
  23c644:	mov	w1, #0x4b3a                	// #19258
  23c648:	mov	w2, #0x1                   	// #1
  23c64c:	mov	w0, w20
  23c650:	mov	w21, #0x1                   	// #1
  23c654:	bl	240d50 <ioctl@plt>
  23c658:	tbnz	w0, #31, 23c710 <session_prepare_vt+0x124>
  23c65c:	strb	w21, [x29, #24]
  23c660:	bl	240900 <__libc_current_sigrtmin@plt>
  23c664:	strh	w0, [x29, #26]
  23c668:	bl	240900 <__libc_current_sigrtmin@plt>
  23c66c:	add	w8, w0, #0x1
  23c670:	add	x2, x29, #0x18
  23c674:	mov	w1, #0x5602                	// #22018
  23c678:	mov	w0, w20
  23c67c:	strh	w8, [x29, #28]
  23c680:	bl	240d50 <ioctl@plt>
  23c684:	tbnz	w0, #31, 23c750 <session_prepare_vt+0x164>
  23c688:	mov	w20, wzr
  23c68c:	b	23c7b4 <session_prepare_vt+0x1c8>
  23c690:	bl	240930 <__errno_location@plt>
  23c694:	ldr	w20, [x0]
  23c698:	mov	w0, wzr
  23c69c:	bl	240750 <log_get_max_level_realm@plt>
  23c6a0:	cmp	w0, #0x3
  23c6a4:	b.lt	23c79c <session_prepare_vt+0x1b0>  // b.tstop
  23c6a8:	ldr	w6, [x19, #144]
  23c6ac:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c6b0:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  23c6b4:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23c6b8:	add	x2, x2, #0x3ce
  23c6bc:	add	x4, x4, #0x51f
  23c6c0:	add	x5, x5, #0x7be
  23c6c4:	mov	w0, #0x3                   	// #3
  23c6c8:	mov	w3, #0x4b0                 	// #1200
  23c6cc:	b	23c78c <session_prepare_vt+0x1a0>
  23c6d0:	bl	240930 <__errno_location@plt>
  23c6d4:	ldr	w20, [x0]
  23c6d8:	mov	w0, wzr
  23c6dc:	bl	240750 <log_get_max_level_realm@plt>
  23c6e0:	cmp	w0, #0x3
  23c6e4:	b.lt	23c79c <session_prepare_vt+0x1b0>  // b.tstop
  23c6e8:	ldr	w6, [x19, #144]
  23c6ec:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c6f0:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  23c6f4:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  23c6f8:	add	x2, x2, #0x3ce
  23c6fc:	add	x4, x4, #0x51f
  23c700:	add	x5, x5, #0x887
  23c704:	mov	w0, #0x3                   	// #3
  23c708:	mov	w3, #0x4b8                 	// #1208
  23c70c:	b	23c78c <session_prepare_vt+0x1a0>
  23c710:	bl	240930 <__errno_location@plt>
  23c714:	ldr	w20, [x0]
  23c718:	mov	w0, wzr
  23c71c:	bl	240750 <log_get_max_level_realm@plt>
  23c720:	cmp	w0, #0x3
  23c724:	b.lt	23c79c <session_prepare_vt+0x1b0>  // b.tstop
  23c728:	ldr	w6, [x19, #144]
  23c72c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c730:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  23c734:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c738:	add	x2, x2, #0x3ce
  23c73c:	add	x4, x4, #0x51f
  23c740:	add	x5, x5, #0x42a
  23c744:	mov	w0, #0x3                   	// #3
  23c748:	mov	w3, #0x4c0                 	// #1216
  23c74c:	b	23c78c <session_prepare_vt+0x1a0>
  23c750:	bl	240930 <__errno_location@plt>
  23c754:	ldr	w20, [x0]
  23c758:	mov	w0, wzr
  23c75c:	bl	240750 <log_get_max_level_realm@plt>
  23c760:	cmp	w0, #0x3
  23c764:	b.lt	23c79c <session_prepare_vt+0x1b0>  // b.tstop
  23c768:	ldr	w6, [x19, #144]
  23c76c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c770:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  23c774:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  23c778:	add	x2, x2, #0x3ce
  23c77c:	add	x4, x4, #0x51f
  23c780:	add	x5, x5, #0xdda
  23c784:	mov	w0, #0x3                   	// #3
  23c788:	mov	w3, #0x4ce                 	// #1230
  23c78c:	mov	w1, w20
  23c790:	bl	240770 <log_internal_realm@plt>
  23c794:	mov	w20, w0
  23c798:	b	23c7ac <session_prepare_vt+0x1c0>
  23c79c:	cmp	w20, #0x0
  23c7a0:	mov	w8, wzr
  23c7a4:	cneg	w9, w20, mi  // mi = first
  23c7a8:	sub	w20, w8, w9, uxtb
  23c7ac:	mov	x0, x19
  23c7b0:	bl	23b158 <session_restore_vt>
  23c7b4:	mov	w0, w20
  23c7b8:	ldp	x20, x19, [sp, #32]
  23c7bc:	ldr	x21, [sp, #16]
  23c7c0:	ldp	x29, x30, [sp], #48
  23c7c4:	ret

000000000023c7c8 <session_release_controller>:
  23c7c8:	stp	x29, x30, [sp, #-32]!
  23c7cc:	mov	x29, sp
  23c7d0:	str	xzr, [x29, #24]
  23c7d4:	ldr	x8, [x0, #232]
  23c7d8:	str	x19, [sp, #16]
  23c7dc:	cbz	x8, 23c814 <session_release_controller+0x4c>
  23c7e0:	mov	x19, x0
  23c7e4:	str	x8, [x29, #24]
  23c7e8:	tbnz	w1, #0, 23c7f8 <session_release_controller+0x30>
  23c7ec:	str	xzr, [x19, #232]
  23c7f0:	b	23c7f8 <session_release_controller+0x30>
  23c7f4:	bl	238bb4 <session_device_free>
  23c7f8:	ldr	x0, [x19, #240]
  23c7fc:	bl	239c40 <hashmap_first>
  23c800:	cbnz	x0, 23c7f4 <session_release_controller+0x2c>
  23c804:	ldr	x0, [x19, #248]
  23c808:	str	xzr, [x19, #232]
  23c80c:	bl	2417b0 <sd_bus_track_unref@plt>
  23c810:	str	x0, [x19, #248]
  23c814:	add	x0, x29, #0x18
  23c818:	bl	23a2e0 <freep>
  23c81c:	ldr	x19, [sp, #16]
  23c820:	ldp	x29, x30, [sp], #32
  23c824:	ret

000000000023c828 <session_state_from_string>:
  23c828:	stp	x29, x30, [sp, #-16]!
  23c82c:	mov	x2, x0
  23c830:	adrp	x0, 254000 <session_vtable+0x3d0>
  23c834:	add	x0, x0, #0x610
  23c838:	mov	w1, #0x4                   	// #4
  23c83c:	mov	x29, sp
  23c840:	bl	240cd0 <string_table_lookup@plt>
  23c844:	ldp	x29, x30, [sp], #16
  23c848:	ret

000000000023c84c <kill_who_to_string>:
  23c84c:	cmp	w0, #0x1
  23c850:	b.ls	23c85c <kill_who_to_string+0x10>  // b.plast
  23c854:	mov	x0, xzr
  23c858:	ret
  23c85c:	adrp	x8, 254000 <session_vtable+0x3d0>
  23c860:	add	x8, x8, #0x680
  23c864:	ldr	x0, [x8, w0, sxtw #3]
  23c868:	ret

000000000023c86c <kill_who_from_string>:
  23c86c:	stp	x29, x30, [sp, #-16]!
  23c870:	mov	x2, x0
  23c874:	adrp	x0, 254000 <session_vtable+0x3d0>
  23c878:	add	x0, x0, #0x680
  23c87c:	mov	w1, #0x2                   	// #2
  23c880:	mov	x29, sp
  23c884:	bl	240cd0 <string_table_lookup@plt>
  23c888:	ldp	x29, x30, [sp], #16
  23c88c:	ret

000000000023c890 <size_multiply_overflow>:
  23c890:	umulh	x8, x1, x0
  23c894:	cmp	xzr, x8
  23c898:	cset	w0, ne  // ne = any
  23c89c:	ret

000000000023c8a0 <timestamp_is_set>:
  23c8a0:	add	x8, x0, #0x1
  23c8a4:	cmp	x8, #0x1
  23c8a8:	cset	w0, hi  // hi = pmore
  23c8ac:	ret

000000000023c8b0 <hashmap_isempty>:
  23c8b0:	stp	x29, x30, [sp, #-16]!
  23c8b4:	mov	x29, sp
  23c8b8:	bl	23c8e8 <hashmap_size>
  23c8bc:	cmp	w0, #0x0
  23c8c0:	cset	w0, eq  // eq = none
  23c8c4:	ldp	x29, x30, [sp], #16
  23c8c8:	ret

000000000023c8cc <hashmap_iterate>:
  23c8cc:	stp	x29, x30, [sp, #-16]!
  23c8d0:	mov	x3, xzr
  23c8d4:	mov	x29, sp
  23c8d8:	bl	240b00 <internal_hashmap_iterate@plt>
  23c8dc:	and	w0, w0, #0x1
  23c8e0:	ldp	x29, x30, [sp], #16
  23c8e4:	ret

000000000023c8e8 <hashmap_size>:
  23c8e8:	stp	x29, x30, [sp, #-16]!
  23c8ec:	mov	x29, sp
  23c8f0:	bl	241370 <internal_hashmap_size@plt>
  23c8f4:	ldp	x29, x30, [sp], #16
  23c8f8:	ret

000000000023c8fc <session_open_vt>:
  23c8fc:	sub	sp, sp, #0x40
  23c900:	stp	x29, x30, [sp, #32]
  23c904:	stp	x20, x19, [sp, #48]
  23c908:	ldr	w2, [x0, #144]
  23c90c:	add	x29, sp, #0x20
  23c910:	cbz	w2, 23c994 <session_open_vt+0x98>
  23c914:	ldr	w19, [x0, #148]
  23c918:	mov	x20, x0
  23c91c:	tbz	w19, #31, 23c998 <session_open_vt+0x9c>
  23c920:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23c924:	add	x1, x1, #0xe54
  23c928:	add	x0, sp, #0x8
  23c92c:	bl	2418a0 <sprintf@plt>
  23c930:	mov	w1, #0x902                 	// #2306
  23c934:	add	x0, sp, #0x8
  23c938:	movk	w1, #0x8, lsl #16
  23c93c:	bl	240b50 <open_terminal@plt>
  23c940:	mov	w19, w0
  23c944:	str	w0, [x20, #148]
  23c948:	tbz	w0, #31, 23c998 <session_open_vt+0x9c>
  23c94c:	mov	w0, wzr
  23c950:	bl	240750 <log_get_max_level_realm@plt>
  23c954:	cmp	w0, #0x3
  23c958:	b.lt	23c9ac <session_open_vt+0xb0>  // b.tstop
  23c95c:	ldr	x7, [x20, #8]
  23c960:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23c964:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23c968:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  23c96c:	add	x2, x2, #0x3ce
  23c970:	add	x4, x4, #0xf7a
  23c974:	add	x5, x5, #0x20d
  23c978:	add	x6, sp, #0x8
  23c97c:	mov	w0, #0x3                   	// #3
  23c980:	mov	w3, #0x49c                 	// #1180
  23c984:	mov	w1, w19
  23c988:	bl	240770 <log_internal_realm@plt>
  23c98c:	mov	w19, w0
  23c990:	b	23c998 <session_open_vt+0x9c>
  23c994:	mov	w19, #0xffffffed            	// #-19
  23c998:	mov	w0, w19
  23c99c:	ldp	x20, x19, [sp, #48]
  23c9a0:	ldp	x29, x30, [sp, #32]
  23c9a4:	add	sp, sp, #0x40
  23c9a8:	ret
  23c9ac:	mov	w8, wzr
  23c9b0:	neg	w9, w19
  23c9b4:	sub	w19, w8, w9, uxtb
  23c9b8:	b	23c998 <session_open_vt+0x9c>

000000000023c9bc <bus_user_method_terminate>:
  23c9bc:	stp	x29, x30, [sp, #-32]!
  23c9c0:	stp	x20, x19, [sp, #16]
  23c9c4:	mov	x29, sp
  23c9c8:	cbz	x0, 23ca38 <bus_user_method_terminate+0x7c>
  23c9cc:	mov	x20, x1
  23c9d0:	cbz	x1, 23ca58 <bus_user_method_terminate+0x9c>
  23c9d4:	ldr	x8, [x20]
  23c9d8:	ldr	w5, [x20, #8]
  23c9dc:	mov	x7, x2
  23c9e0:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23c9e4:	add	x6, x8, #0x1b0
  23c9e8:	add	x2, x2, #0x51b
  23c9ec:	mov	w1, #0x5                   	// #5
  23c9f0:	mov	x3, xzr
  23c9f4:	mov	w4, wzr
  23c9f8:	mov	x19, x0
  23c9fc:	bl	241160 <bus_verify_polkit_async@plt>
  23ca00:	tbnz	w0, #31, 23ca2c <bus_user_method_terminate+0x70>
  23ca04:	cbz	w0, 23ca28 <bus_user_method_terminate+0x6c>
  23ca08:	mov	w1, #0x1                   	// #1
  23ca0c:	mov	x0, x20
  23ca10:	bl	23e568 <user_stop>
  23ca14:	tbnz	w0, #31, 23ca2c <bus_user_method_terminate+0x70>
  23ca18:	mov	x0, x19
  23ca1c:	mov	x1, xzr
  23ca20:	bl	2410a0 <sd_bus_reply_method_return@plt>
  23ca24:	b	23ca2c <bus_user_method_terminate+0x70>
  23ca28:	mov	w0, #0x1                   	// #1
  23ca2c:	ldp	x20, x19, [sp, #16]
  23ca30:	ldp	x29, x30, [sp], #32
  23ca34:	ret
  23ca38:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23ca3c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23ca40:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  23ca44:	add	x1, x1, #0x30
  23ca48:	add	x2, x2, #0x456
  23ca4c:	add	x4, x4, #0x334
  23ca50:	mov	w3, #0x92                  	// #146
  23ca54:	bl	240790 <log_assert_failed_realm@plt>
  23ca58:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23ca5c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23ca60:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  23ca64:	add	x1, x1, #0x420
  23ca68:	add	x2, x2, #0x456
  23ca6c:	add	x4, x4, #0x334
  23ca70:	mov	w3, #0x93                  	// #147
  23ca74:	mov	w0, wzr
  23ca78:	bl	240790 <log_assert_failed_realm@plt>

000000000023ca7c <bus_user_method_kill>:
  23ca7c:	sub	sp, sp, #0x40
  23ca80:	stp	x29, x30, [sp, #16]
  23ca84:	stp	x22, x21, [sp, #32]
  23ca88:	stp	x20, x19, [sp, #48]
  23ca8c:	add	x29, sp, #0x10
  23ca90:	cbz	x0, 23cb54 <bus_user_method_kill+0xd8>
  23ca94:	mov	x21, x1
  23ca98:	cbz	x1, 23cb74 <bus_user_method_kill+0xf8>
  23ca9c:	ldr	x8, [x21]
  23caa0:	ldr	w5, [x21, #8]
  23caa4:	mov	x20, x2
  23caa8:	adrp	x2, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23caac:	add	x6, x8, #0x1b0
  23cab0:	add	x2, x2, #0x51b
  23cab4:	mov	w1, #0x5                   	// #5
  23cab8:	mov	x3, xzr
  23cabc:	mov	w4, wzr
  23cac0:	mov	x7, x20
  23cac4:	mov	x19, x0
  23cac8:	bl	241160 <bus_verify_polkit_async@plt>
  23cacc:	tbnz	w0, #31, 23cb40 <bus_user_method_kill+0xc4>
  23cad0:	cbz	w0, 23cb1c <bus_user_method_kill+0xa0>
  23cad4:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  23cad8:	add	x1, x1, #0xc66
  23cadc:	sub	x2, x29, #0x4
  23cae0:	mov	x0, x19
  23cae4:	bl	240fb0 <sd_bus_message_read@plt>
  23cae8:	tbnz	w0, #31, 23cb40 <bus_user_method_kill+0xc4>
  23caec:	ldur	w22, [x29, #-4]
  23caf0:	mov	w0, w22
  23caf4:	bl	23cb98 <SIGNAL_VALID>
  23caf8:	tbz	w0, #0, 23cb24 <bus_user_method_kill+0xa8>
  23cafc:	mov	x0, x21
  23cb00:	mov	w1, w22
  23cb04:	bl	23eec0 <user_kill>
  23cb08:	tbnz	w0, #31, 23cb40 <bus_user_method_kill+0xc4>
  23cb0c:	mov	x0, x19
  23cb10:	mov	x1, xzr
  23cb14:	bl	2410a0 <sd_bus_reply_method_return@plt>
  23cb18:	b	23cb40 <bus_user_method_kill+0xc4>
  23cb1c:	mov	w0, #0x1                   	// #1
  23cb20:	b	23cb40 <bus_user_method_kill+0xc4>
  23cb24:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23cb28:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23cb2c:	add	x1, x1, #0x47f
  23cb30:	add	x2, x2, #0xc78
  23cb34:	mov	x0, x20
  23cb38:	mov	w3, w22
  23cb3c:	bl	240f50 <sd_bus_error_setf@plt>
  23cb40:	ldp	x20, x19, [sp, #48]
  23cb44:	ldp	x22, x21, [sp, #32]
  23cb48:	ldp	x29, x30, [sp, #16]
  23cb4c:	add	sp, sp, #0x40
  23cb50:	ret
  23cb54:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23cb58:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23cb5c:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23cb60:	add	x1, x1, #0x30
  23cb64:	add	x2, x2, #0x456
  23cb68:	add	x4, x4, #0x473
  23cb6c:	mov	w3, #0xaf                  	// #175
  23cb70:	bl	240790 <log_assert_failed_realm@plt>
  23cb74:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23cb78:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23cb7c:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23cb80:	add	x1, x1, #0x420
  23cb84:	add	x2, x2, #0x456
  23cb88:	add	x4, x4, #0x473
  23cb8c:	mov	w3, #0xb0                  	// #176
  23cb90:	mov	w0, wzr
  23cb94:	bl	240790 <log_assert_failed_realm@plt>

000000000023cb98 <SIGNAL_VALID>:
  23cb98:	sub	w8, w0, #0x1
  23cb9c:	cmp	w8, #0x40
  23cba0:	cset	w0, cc  // cc = lo, ul, last
  23cba4:	ret

000000000023cba8 <property_get_display>:
  23cba8:	sub	sp, sp, #0x30
  23cbac:	stp	x29, x30, [sp, #16]
  23cbb0:	stp	x20, x19, [sp, #32]
  23cbb4:	add	x29, sp, #0x10
  23cbb8:	str	xzr, [sp, #8]
  23cbbc:	cbz	x0, 23cc48 <property_get_display+0xa0>
  23cbc0:	mov	x19, x4
  23cbc4:	cbz	x4, 23cc68 <property_get_display+0xc0>
  23cbc8:	mov	x20, x5
  23cbcc:	cbz	x5, 23cc8c <property_get_display+0xe4>
  23cbd0:	ldr	x0, [x20, #80]
  23cbd4:	cbz	x0, 23cbe0 <property_get_display+0x38>
  23cbd8:	bl	2374bc <session_bus_path>
  23cbdc:	b	23cbec <property_get_display+0x44>
  23cbe0:	adrp	x0, 207000 <inhibit_what_to_string.buffer+0x207000>
  23cbe4:	add	x0, x0, #0xd32
  23cbe8:	bl	240c40 <strdup@plt>
  23cbec:	mov	x3, x0
  23cbf0:	str	x0, [sp, #8]
  23cbf4:	cbz	x0, 23cc08 <property_get_display+0x60>
  23cbf8:	ldr	x8, [x20, #80]
  23cbfc:	cbz	x8, 23cc10 <property_get_display+0x68>
  23cc00:	ldr	x2, [x8, #8]
  23cc04:	b	23cc18 <property_get_display+0x70>
  23cc08:	mov	w19, #0xfffffff4            	// #-12
  23cc0c:	b	23cc2c <property_get_display+0x84>
  23cc10:	adrp	x2, 210000 <inhibit_what_to_string.buffer+0x210000>
  23cc14:	add	x2, x2, #0xb7e
  23cc18:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  23cc1c:	add	x1, x1, #0x3e
  23cc20:	mov	x0, x19
  23cc24:	bl	240ff0 <sd_bus_message_append@plt>
  23cc28:	mov	w19, w0
  23cc2c:	add	x0, sp, #0x8
  23cc30:	bl	23d5d8 <freep>
  23cc34:	mov	w0, w19
  23cc38:	ldp	x20, x19, [sp, #32]
  23cc3c:	ldp	x29, x30, [sp, #16]
  23cc40:	add	sp, sp, #0x30
  23cc44:	ret
  23cc48:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23cc4c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23cc50:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23cc54:	add	x1, x1, #0x887
  23cc58:	add	x2, x2, #0x456
  23cc5c:	add	x4, x4, #0xddb
  23cc60:	mov	w3, #0x20                  	// #32
  23cc64:	bl	240790 <log_assert_failed_realm@plt>
  23cc68:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23cc6c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23cc70:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23cc74:	add	x1, x1, #0xbb3
  23cc78:	add	x2, x2, #0x456
  23cc7c:	add	x4, x4, #0xddb
  23cc80:	mov	w3, #0x21                  	// #33
  23cc84:	mov	w0, wzr
  23cc88:	bl	240790 <log_assert_failed_realm@plt>
  23cc8c:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23cc90:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23cc94:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23cc98:	add	x1, x1, #0x420
  23cc9c:	add	x2, x2, #0x456
  23cca0:	add	x4, x4, #0xddb
  23cca4:	mov	w3, #0x22                  	// #34
  23cca8:	mov	w0, wzr
  23ccac:	bl	240790 <log_assert_failed_realm@plt>

000000000023ccb0 <property_get_state>:
  23ccb0:	stp	x29, x30, [sp, #-32]!
  23ccb4:	str	x19, [sp, #16]
  23ccb8:	mov	x29, sp
  23ccbc:	cbz	x0, 23ccf8 <property_get_state+0x48>
  23ccc0:	mov	x19, x4
  23ccc4:	cbz	x4, 23cd18 <property_get_state+0x68>
  23ccc8:	cbz	x5, 23cd24 <property_get_state+0x74>
  23cccc:	mov	x0, x5
  23ccd0:	bl	23edd8 <user_get_state>
  23ccd4:	bl	23f3e8 <user_state_to_string>
  23ccd8:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23ccdc:	mov	x2, x0
  23cce0:	add	x1, x1, #0x6de
  23cce4:	mov	x0, x19
  23cce8:	bl	240ff0 <sd_bus_message_append@plt>
  23ccec:	ldr	x19, [sp, #16]
  23ccf0:	ldp	x29, x30, [sp], #32
  23ccf4:	ret
  23ccf8:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23ccfc:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23cd00:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23cd04:	add	x1, x1, #0x887
  23cd08:	add	x2, x2, #0x456
  23cd0c:	add	x4, x4, #0x3ca
  23cd10:	mov	w3, #0x12                  	// #18
  23cd14:	bl	240790 <log_assert_failed_realm@plt>
  23cd18:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23cd1c:	add	x1, x1, #0xbb3
  23cd20:	b	23cd2c <property_get_state+0x7c>
  23cd24:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23cd28:	add	x1, x1, #0xb87
  23cd2c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23cd30:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23cd34:	add	x2, x2, #0x456
  23cd38:	add	x4, x4, #0x3ca
  23cd3c:	mov	w3, #0x12                  	// #18
  23cd40:	mov	w0, wzr
  23cd44:	bl	240790 <log_assert_failed_realm@plt>

000000000023cd48 <property_get_sessions>:
  23cd48:	stp	x29, x30, [sp, #-64]!
  23cd4c:	str	x23, [sp, #16]
  23cd50:	stp	x22, x21, [sp, #32]
  23cd54:	stp	x20, x19, [sp, #48]
  23cd58:	mov	x29, sp
  23cd5c:	cbz	x0, 23ce14 <property_get_sessions+0xcc>
  23cd60:	mov	x19, x4
  23cd64:	cbz	x4, 23ce34 <property_get_sessions+0xec>
  23cd68:	mov	x21, x5
  23cd6c:	cbz	x5, 23ce58 <property_get_sessions+0x110>
  23cd70:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23cd74:	add	x2, x2, #0x3e
  23cd78:	mov	w1, #0x61                  	// #97
  23cd7c:	mov	x0, x19
  23cd80:	bl	241070 <sd_bus_message_open_container@plt>
  23cd84:	tbnz	w0, #31, 23cdf8 <property_get_sessions+0xb0>
  23cd88:	ldr	x21, [x21, #128]
  23cd8c:	cbz	x21, 23cdf0 <property_get_sessions+0xa8>
  23cd90:	adrp	x22, 208000 <inhibit_what_to_string.buffer+0x208000>
  23cd94:	add	x22, x22, #0x3e
  23cd98:	mov	x0, x21
  23cd9c:	str	xzr, [x29, #24]
  23cda0:	bl	2374bc <session_bus_path>
  23cda4:	str	x0, [x29, #24]
  23cda8:	cbz	x0, 23cdd4 <property_get_sessions+0x8c>
  23cdac:	ldr	x2, [x21, #8]
  23cdb0:	mov	x3, x0
  23cdb4:	mov	x0, x19
  23cdb8:	mov	x1, x22
  23cdbc:	bl	240ff0 <sd_bus_message_append@plt>
  23cdc0:	cmp	w0, #0x0
  23cdc4:	mvn	w8, w0
  23cdc8:	csel	w20, w0, w20, lt  // lt = tstop
  23cdcc:	lsr	w23, w8, #31
  23cdd0:	b	23cddc <property_get_sessions+0x94>
  23cdd4:	mov	w23, wzr
  23cdd8:	mov	w20, #0xfffffff4            	// #-12
  23cddc:	add	x0, x29, #0x18
  23cde0:	bl	23d5d8 <freep>
  23cde4:	tbz	w23, #0, 23cdfc <property_get_sessions+0xb4>
  23cde8:	ldr	x21, [x21, #256]
  23cdec:	cbnz	x21, 23cd98 <property_get_sessions+0x50>
  23cdf0:	mov	x0, x19
  23cdf4:	bl	241080 <sd_bus_message_close_container@plt>
  23cdf8:	mov	w20, w0
  23cdfc:	mov	w0, w20
  23ce00:	ldp	x20, x19, [sp, #48]
  23ce04:	ldp	x22, x21, [sp, #32]
  23ce08:	ldr	x23, [sp, #16]
  23ce0c:	ldp	x29, x30, [sp], #64
  23ce10:	ret
  23ce14:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23ce18:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23ce1c:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23ce20:	add	x1, x1, #0x887
  23ce24:	add	x2, x2, #0x456
  23ce28:	add	x4, x4, #0x75d
  23ce2c:	mov	w3, #0x38                  	// #56
  23ce30:	bl	240790 <log_assert_failed_realm@plt>
  23ce34:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23ce38:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23ce3c:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23ce40:	add	x1, x1, #0xbb3
  23ce44:	add	x2, x2, #0x456
  23ce48:	add	x4, x4, #0x75d
  23ce4c:	mov	w3, #0x39                  	// #57
  23ce50:	mov	w0, wzr
  23ce54:	bl	240790 <log_assert_failed_realm@plt>
  23ce58:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23ce5c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23ce60:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23ce64:	add	x1, x1, #0x420
  23ce68:	add	x2, x2, #0x456
  23ce6c:	add	x4, x4, #0x75d
  23ce70:	mov	w3, #0x3a                  	// #58
  23ce74:	mov	w0, wzr
  23ce78:	bl	240790 <log_assert_failed_realm@plt>

000000000023ce7c <property_get_idle_hint>:
  23ce7c:	stp	x29, x30, [sp, #-32]!
  23ce80:	str	x19, [sp, #16]
  23ce84:	mov	x29, sp
  23ce88:	cbz	x0, 23cec8 <property_get_idle_hint+0x4c>
  23ce8c:	mov	x19, x4
  23ce90:	cbz	x4, 23cee8 <property_get_idle_hint+0x6c>
  23ce94:	cbz	x5, 23cf0c <property_get_idle_hint+0x90>
  23ce98:	mov	x0, x5
  23ce9c:	mov	x1, xzr
  23cea0:	bl	23e8a8 <user_get_idle_hint>
  23cea4:	cmp	w0, #0x0
  23cea8:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23ceac:	cset	w2, gt
  23ceb0:	add	x1, x1, #0xb8c
  23ceb4:	mov	x0, x19
  23ceb8:	bl	240ff0 <sd_bus_message_append@plt>
  23cebc:	ldr	x19, [sp, #16]
  23cec0:	ldp	x29, x30, [sp], #32
  23cec4:	ret
  23cec8:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23cecc:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23ced0:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23ced4:	add	x1, x1, #0x887
  23ced8:	add	x2, x2, #0x456
  23cedc:	add	x4, x4, #0x1a6
  23cee0:	mov	w3, #0x5b                  	// #91
  23cee4:	bl	240790 <log_assert_failed_realm@plt>
  23cee8:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23ceec:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23cef0:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23cef4:	add	x1, x1, #0xbb3
  23cef8:	add	x2, x2, #0x456
  23cefc:	add	x4, x4, #0x1a6
  23cf00:	mov	w3, #0x5c                  	// #92
  23cf04:	mov	w0, wzr
  23cf08:	bl	240790 <log_assert_failed_realm@plt>
  23cf0c:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23cf10:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23cf14:	adrp	x4, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23cf18:	add	x1, x1, #0x420
  23cf1c:	add	x2, x2, #0x456
  23cf20:	add	x4, x4, #0x1a6
  23cf24:	mov	w3, #0x5d                  	// #93
  23cf28:	mov	w0, wzr
  23cf2c:	bl	240790 <log_assert_failed_realm@plt>

000000000023cf30 <property_get_idle_since_hint>:
  23cf30:	sub	sp, sp, #0x40
  23cf34:	stp	x29, x30, [sp, #16]
  23cf38:	str	x21, [sp, #32]
  23cf3c:	stp	x20, x19, [sp, #48]
  23cf40:	add	x29, sp, #0x10
  23cf44:	stp	xzr, xzr, [sp]
  23cf48:	cbz	x0, 23cfb0 <property_get_idle_since_hint+0x80>
  23cf4c:	mov	x19, x4
  23cf50:	cbz	x4, 23cfd0 <property_get_idle_since_hint+0xa0>
  23cf54:	cbz	x5, 23cff4 <property_get_idle_since_hint+0xc4>
  23cf58:	mov	x1, sp
  23cf5c:	mov	x0, x5
  23cf60:	mov	x20, x3
  23cf64:	mov	x21, sp
  23cf68:	bl	23e8a8 <user_get_idle_hint>
  23cf6c:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  23cf70:	add	x1, x1, #0xbea
  23cf74:	mov	x0, x20
  23cf78:	bl	240c30 <strcmp@plt>
  23cf7c:	add	x8, x21, #0x8
  23cf80:	cmp	w0, #0x0
  23cf84:	csel	x8, x21, x8, eq  // eq = none
  23cf88:	ldr	x2, [x8]
  23cf8c:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  23cf90:	add	x1, x1, #0xfe8
  23cf94:	mov	x0, x19
  23cf98:	bl	240ff0 <sd_bus_message_append@plt>
  23cf9c:	ldp	x20, x19, [sp, #48]
  23cfa0:	ldr	x21, [sp, #32]
  23cfa4:	ldp	x29, x30, [sp, #16]
  23cfa8:	add	sp, sp, #0x40
  23cfac:	ret
  23cfb0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23cfb4:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23cfb8:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23cfbc:	add	x1, x1, #0x887
  23cfc0:	add	x2, x2, #0x456
  23cfc4:	add	x4, x4, #0x66c
  23cfc8:	mov	w3, #0x6f                  	// #111
  23cfcc:	bl	240790 <log_assert_failed_realm@plt>
  23cfd0:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23cfd4:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23cfd8:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23cfdc:	add	x1, x1, #0xbb3
  23cfe0:	add	x2, x2, #0x456
  23cfe4:	add	x4, x4, #0x66c
  23cfe8:	mov	w3, #0x70                  	// #112
  23cfec:	mov	w0, wzr
  23cff0:	bl	240790 <log_assert_failed_realm@plt>
  23cff4:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23cff8:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23cffc:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23d000:	add	x1, x1, #0x420
  23d004:	add	x2, x2, #0x456
  23d008:	add	x4, x4, #0x66c
  23d00c:	mov	w3, #0x71                  	// #113
  23d010:	mov	w0, wzr
  23d014:	bl	240790 <log_assert_failed_realm@plt>

000000000023d018 <property_get_linger>:
  23d018:	stp	x29, x30, [sp, #-32]!
  23d01c:	str	x19, [sp, #16]
  23d020:	mov	x29, sp
  23d024:	cbz	x0, 23d060 <property_get_linger+0x48>
  23d028:	mov	x19, x4
  23d02c:	cbz	x4, 23d080 <property_get_linger+0x68>
  23d030:	cbz	x5, 23d0a4 <property_get_linger+0x8c>
  23d034:	mov	x0, x5
  23d038:	bl	23e9b0 <user_check_linger_file>
  23d03c:	cmp	w0, #0x0
  23d040:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23d044:	cset	w2, gt
  23d048:	add	x1, x1, #0xb8c
  23d04c:	mov	x0, x19
  23d050:	bl	240ff0 <sd_bus_message_append@plt>
  23d054:	ldr	x19, [sp, #16]
  23d058:	ldp	x29, x30, [sp], #32
  23d05c:	ret
  23d060:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23d064:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d068:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d06c:	add	x1, x1, #0x887
  23d070:	add	x2, x2, #0x456
  23d074:	add	x4, x4, #0xf90
  23d078:	mov	w3, #0x85                  	// #133
  23d07c:	bl	240790 <log_assert_failed_realm@plt>
  23d080:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23d084:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d088:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d08c:	add	x1, x1, #0xbb3
  23d090:	add	x2, x2, #0x456
  23d094:	add	x4, x4, #0xf90
  23d098:	mov	w3, #0x86                  	// #134
  23d09c:	mov	w0, wzr
  23d0a0:	bl	240790 <log_assert_failed_realm@plt>
  23d0a4:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23d0a8:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d0ac:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d0b0:	add	x1, x1, #0x420
  23d0b4:	add	x2, x2, #0x456
  23d0b8:	add	x4, x4, #0xf90
  23d0bc:	mov	w3, #0x87                  	// #135
  23d0c0:	mov	w0, wzr
  23d0c4:	bl	240790 <log_assert_failed_realm@plt>

000000000023d0c8 <user_object_find>:
  23d0c8:	sub	sp, sp, #0x50
  23d0cc:	stp	x29, x30, [sp, #16]
  23d0d0:	str	x23, [sp, #32]
  23d0d4:	stp	x22, x21, [sp, #48]
  23d0d8:	stp	x20, x19, [sp, #64]
  23d0dc:	add	x29, sp, #0x10
  23d0e0:	cbz	x0, 23d1c4 <user_object_find+0xfc>
  23d0e4:	mov	x22, x1
  23d0e8:	cbz	x1, 23d1e4 <user_object_find+0x11c>
  23d0ec:	cbz	x2, 23d208 <user_object_find+0x140>
  23d0f0:	mov	x19, x4
  23d0f4:	cbz	x4, 23d22c <user_object_find+0x164>
  23d0f8:	mov	x20, x3
  23d0fc:	cbz	x3, 23d250 <user_object_find+0x188>
  23d100:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  23d104:	mov	x23, x0
  23d108:	add	x1, x1, #0xeaf
  23d10c:	mov	x0, x22
  23d110:	mov	x21, x5
  23d114:	bl	240c30 <strcmp@plt>
  23d118:	cbz	w0, 23d150 <user_object_find+0x88>
  23d11c:	mov	x0, x22
  23d120:	bl	23d274 <startswith>
  23d124:	cbz	x0, 23d1ac <user_object_find+0xe4>
  23d128:	add	x1, x29, #0x1c
  23d12c:	bl	2414e0 <parse_uid@plt>
  23d130:	tbnz	w0, #31, 23d1a8 <user_object_find+0xe0>
  23d134:	ldr	w8, [x29, #28]
  23d138:	ldr	x0, [x20, #48]
  23d13c:	add	x1, x8, #0x1
  23d140:	bl	23d2ac <hashmap_get>
  23d144:	str	x0, [sp, #8]
  23d148:	cbnz	x0, 23d198 <user_object_find+0xd0>
  23d14c:	b	23d1ac <user_object_find+0xe4>
  23d150:	mov	x0, x23
  23d154:	bl	241550 <sd_bus_get_current_message@plt>
  23d158:	mov	x1, x0
  23d15c:	add	x4, sp, #0x8
  23d160:	mov	w2, #0xffffffff            	// #-1
  23d164:	mov	x0, x20
  23d168:	mov	x3, x21
  23d16c:	bl	2294f4 <manager_get_user_from_creds>
  23d170:	cmn	w0, #0x6
  23d174:	b.ne	23d18c <user_object_find+0xc4>  // b.any
  23d178:	mov	x0, x21
  23d17c:	bl	240c80 <sd_bus_error_free@plt>
  23d180:	mov	w0, wzr
  23d184:	tbnz	wzr, #0, 23d198 <user_object_find+0xd0>
  23d188:	b	23d1ac <user_object_find+0xe4>
  23d18c:	mvn	w8, w0
  23d190:	lsr	w8, w8, #31
  23d194:	tbz	w8, #0, 23d1ac <user_object_find+0xe4>
  23d198:	ldr	x8, [sp, #8]
  23d19c:	mov	w0, #0x1                   	// #1
  23d1a0:	str	x8, [x19]
  23d1a4:	b	23d1ac <user_object_find+0xe4>
  23d1a8:	mov	w0, wzr
  23d1ac:	ldp	x20, x19, [sp, #64]
  23d1b0:	ldp	x22, x21, [sp, #48]
  23d1b4:	ldr	x23, [sp, #32]
  23d1b8:	ldp	x29, x30, [sp, #16]
  23d1bc:	add	sp, sp, #0x50
  23d1c0:	ret
  23d1c4:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23d1c8:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d1cc:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d1d0:	add	x1, x1, #0x887
  23d1d4:	add	x2, x2, #0x456
  23d1d8:	add	x4, x4, #0x9ed
  23d1dc:	mov	w3, #0xec                  	// #236
  23d1e0:	bl	240790 <log_assert_failed_realm@plt>
  23d1e4:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  23d1e8:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d1ec:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d1f0:	add	x1, x1, #0x92
  23d1f4:	add	x2, x2, #0x456
  23d1f8:	add	x4, x4, #0x9ed
  23d1fc:	mov	w3, #0xed                  	// #237
  23d200:	mov	w0, wzr
  23d204:	bl	240790 <log_assert_failed_realm@plt>
  23d208:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23d20c:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d210:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d214:	add	x1, x1, #0xa77
  23d218:	add	x2, x2, #0x456
  23d21c:	add	x4, x4, #0x9ed
  23d220:	mov	w3, #0xee                  	// #238
  23d224:	mov	w0, wzr
  23d228:	bl	240790 <log_assert_failed_realm@plt>
  23d22c:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23d230:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d234:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d238:	add	x1, x1, #0xd40
  23d23c:	add	x2, x2, #0x456
  23d240:	add	x4, x4, #0x9ed
  23d244:	mov	w3, #0xef                  	// #239
  23d248:	mov	w0, wzr
  23d24c:	bl	240790 <log_assert_failed_realm@plt>
  23d250:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23d254:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d258:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d25c:	add	x1, x1, #0x102
  23d260:	add	x2, x2, #0x456
  23d264:	add	x4, x4, #0x9ed
  23d268:	mov	w3, #0xf0                  	// #240
  23d26c:	mov	w0, wzr
  23d270:	bl	240790 <log_assert_failed_realm@plt>

000000000023d274 <startswith>:
  23d274:	stp	x29, x30, [sp, #-32]!
  23d278:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23d27c:	add	x1, x1, #0x7fb
  23d280:	mov	w2, #0x1e                  	// #30
  23d284:	str	x19, [sp, #16]
  23d288:	mov	x29, sp
  23d28c:	mov	x19, x0
  23d290:	bl	240b90 <strncmp@plt>
  23d294:	add	x8, x19, #0x1e
  23d298:	ldr	x19, [sp, #16]
  23d29c:	cmp	w0, #0x0
  23d2a0:	csel	x0, x8, xzr, eq  // eq = none
  23d2a4:	ldp	x29, x30, [sp], #32
  23d2a8:	ret

000000000023d2ac <hashmap_get>:
  23d2ac:	stp	x29, x30, [sp, #-16]!
  23d2b0:	mov	x29, sp
  23d2b4:	bl	240bc0 <internal_hashmap_get@plt>
  23d2b8:	ldp	x29, x30, [sp], #16
  23d2bc:	ret

000000000023d2c0 <user_bus_path>:
  23d2c0:	sub	sp, sp, #0x20
  23d2c4:	stp	x29, x30, [sp, #16]
  23d2c8:	add	x29, sp, #0x10
  23d2cc:	cbz	x0, 23d2fc <user_bus_path+0x3c>
  23d2d0:	ldr	w2, [x0, #8]
  23d2d4:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  23d2d8:	add	x1, x1, #0x37c
  23d2dc:	add	x0, sp, #0x8
  23d2e0:	bl	240ae0 <asprintf@plt>
  23d2e4:	ldr	x8, [sp, #8]
  23d2e8:	ldp	x29, x30, [sp, #16]
  23d2ec:	cmp	w0, #0x0
  23d2f0:	csel	x0, xzr, x8, lt  // lt = tstop
  23d2f4:	add	sp, sp, #0x20
  23d2f8:	ret
  23d2fc:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23d300:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d304:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d308:	add	x1, x1, #0x420
  23d30c:	add	x2, x2, #0x456
  23d310:	add	x4, x4, #0x4ba
  23d314:	mov	w3, #0x115                 	// #277
  23d318:	bl	240790 <log_assert_failed_realm@plt>

000000000023d31c <user_node_enumerator>:
  23d31c:	sub	sp, sp, #0x60
  23d320:	stp	x29, x30, [sp, #48]
  23d324:	add	x29, sp, #0x30
  23d328:	stp	x22, x21, [sp, #64]
  23d32c:	stp	x20, x19, [sp, #80]
  23d330:	stur	xzr, [x29, #-8]
  23d334:	cbz	x0, 23d464 <user_node_enumerator+0x148>
  23d338:	cbz	x1, 23d484 <user_node_enumerator+0x168>
  23d33c:	mov	x19, x3
  23d340:	cbz	x3, 23d4a8 <user_node_enumerator+0x18c>
  23d344:	mov	x21, x2
  23d348:	mov	x22, x0
  23d34c:	mov	w8, #0xfffffffe            	// #-2
  23d350:	str	w8, [sp, #16]
  23d354:	str	xzr, [sp, #24]
  23d358:	b	23d368 <user_node_enumerator+0x4c>
  23d35c:	mov	w20, #0xfffffff4            	// #-12
  23d360:	mov	w8, wzr
  23d364:	tbz	wzr, #0, 23d434 <user_node_enumerator+0x118>
  23d368:	ldr	x0, [x21, #48]
  23d36c:	add	x1, sp, #0x10
  23d370:	sub	x2, x29, #0x10
  23d374:	bl	23d4e8 <hashmap_iterate>
  23d378:	tbz	w0, #0, 23d3ac <user_node_enumerator+0x90>
  23d37c:	ldur	x0, [x29, #-16]
  23d380:	bl	23d2c0 <user_bus_path>
  23d384:	cbz	x0, 23d35c <user_node_enumerator+0x40>
  23d388:	mov	x1, x0
  23d38c:	sub	x0, x29, #0x8
  23d390:	bl	241580 <strv_consume@plt>
  23d394:	mvn	w8, w0
  23d398:	cmp	w0, #0x0
  23d39c:	lsr	w8, w8, #31
  23d3a0:	csel	w20, w0, w20, lt  // lt = tstop
  23d3a4:	tbnz	w8, #0, 23d368 <user_node_enumerator+0x4c>
  23d3a8:	b	23d434 <user_node_enumerator+0x118>
  23d3ac:	mov	x0, x22
  23d3b0:	bl	241550 <sd_bus_get_current_message@plt>
  23d3b4:	cbz	x0, 23d424 <user_node_enumerator+0x108>
  23d3b8:	mov	x1, #0x400000              	// #4194304
  23d3bc:	add	x2, sp, #0x8
  23d3c0:	movk	x1, #0x8000, lsl #48
  23d3c4:	str	xzr, [sp, #8]
  23d3c8:	bl	240f60 <sd_bus_query_sender_creds@plt>
  23d3cc:	tbnz	w0, #31, 23d414 <user_node_enumerator+0xf8>
  23d3d0:	ldr	x0, [sp, #8]
  23d3d4:	add	x1, sp, #0x4
  23d3d8:	bl	240f80 <sd_bus_creds_get_owner_uid@plt>
  23d3dc:	tbnz	w0, #31, 23d40c <user_node_enumerator+0xf0>
  23d3e0:	ldr	w8, [sp, #4]
  23d3e4:	ldr	x0, [x21, #48]
  23d3e8:	add	x1, x8, #0x1
  23d3ec:	bl	23d2ac <hashmap_get>
  23d3f0:	stur	x0, [x29, #-16]
  23d3f4:	cbz	x0, 23d40c <user_node_enumerator+0xf0>
  23d3f8:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  23d3fc:	add	x1, x1, #0xeaf
  23d400:	sub	x0, x29, #0x8
  23d404:	bl	241590 <strv_extend@plt>
  23d408:	tbnz	w0, #31, 23d454 <user_node_enumerator+0x138>
  23d40c:	mov	w21, wzr
  23d410:	cbnz	w21, 23d418 <user_node_enumerator+0xfc>
  23d414:	mov	w21, wzr
  23d418:	add	x0, sp, #0x8
  23d41c:	bl	23d504 <sd_bus_creds_unrefp>
  23d420:	cbnz	w21, 23d434 <user_node_enumerator+0x118>
  23d424:	ldur	x8, [x29, #-8]
  23d428:	mov	w20, #0x1                   	// #1
  23d42c:	stur	xzr, [x29, #-8]
  23d430:	str	x8, [x19]
  23d434:	sub	x0, x29, #0x8
  23d438:	bl	23d4cc <strv_freep>
  23d43c:	mov	w0, w20
  23d440:	ldp	x20, x19, [sp, #80]
  23d444:	ldp	x22, x21, [sp, #64]
  23d448:	ldp	x29, x30, [sp, #48]
  23d44c:	add	sp, sp, #0x60
  23d450:	ret
  23d454:	mov	w21, #0x1                   	// #1
  23d458:	mov	w20, w0
  23d45c:	cbnz	w21, 23d418 <user_node_enumerator+0xfc>
  23d460:	b	23d414 <user_node_enumerator+0xf8>
  23d464:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23d468:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d46c:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  23d470:	add	x1, x1, #0x887
  23d474:	add	x2, x2, #0x456
  23d478:	add	x4, x4, #0xb8f
  23d47c:	mov	w3, #0x125                 	// #293
  23d480:	bl	240790 <log_assert_failed_realm@plt>
  23d484:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  23d488:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d48c:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  23d490:	add	x1, x1, #0x92
  23d494:	add	x2, x2, #0x456
  23d498:	add	x4, x4, #0xb8f
  23d49c:	mov	w3, #0x126                 	// #294
  23d4a0:	mov	w0, wzr
  23d4a4:	bl	240790 <log_assert_failed_realm@plt>
  23d4a8:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  23d4ac:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d4b0:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  23d4b4:	add	x1, x1, #0x294
  23d4b8:	add	x2, x2, #0x456
  23d4bc:	add	x4, x4, #0xb8f
  23d4c0:	mov	w3, #0x127                 	// #295
  23d4c4:	mov	w0, wzr
  23d4c8:	bl	240790 <log_assert_failed_realm@plt>

000000000023d4cc <strv_freep>:
  23d4cc:	stp	x29, x30, [sp, #-16]!
  23d4d0:	ldr	x0, [x0]
  23d4d4:	mov	x29, sp
  23d4d8:	cbz	x0, 23d4e0 <strv_freep+0x14>
  23d4dc:	bl	240880 <strv_free@plt>
  23d4e0:	ldp	x29, x30, [sp], #16
  23d4e4:	ret

000000000023d4e8 <hashmap_iterate>:
  23d4e8:	stp	x29, x30, [sp, #-16]!
  23d4ec:	mov	x3, xzr
  23d4f0:	mov	x29, sp
  23d4f4:	bl	240b00 <internal_hashmap_iterate@plt>
  23d4f8:	and	w0, w0, #0x1
  23d4fc:	ldp	x29, x30, [sp], #16
  23d500:	ret

000000000023d504 <sd_bus_creds_unrefp>:
  23d504:	stp	x29, x30, [sp, #-16]!
  23d508:	ldr	x0, [x0]
  23d50c:	mov	x29, sp
  23d510:	cbz	x0, 23d518 <sd_bus_creds_unrefp+0x14>
  23d514:	bl	241350 <sd_bus_creds_unref@plt>
  23d518:	ldp	x29, x30, [sp], #16
  23d51c:	ret

000000000023d520 <user_send_signal>:
  23d520:	sub	sp, sp, #0x30
  23d524:	stp	x29, x30, [sp, #16]
  23d528:	stp	x20, x19, [sp, #32]
  23d52c:	add	x29, sp, #0x10
  23d530:	str	xzr, [sp, #8]
  23d534:	cbz	x0, 23d5b8 <user_send_signal+0x98>
  23d538:	mov	w19, w1
  23d53c:	mov	x20, x0
  23d540:	bl	23d2c0 <user_bus_path>
  23d544:	str	x0, [sp, #8]
  23d548:	cbz	x0, 23d598 <user_send_signal+0x78>
  23d54c:	ldr	x8, [x20]
  23d550:	mov	x6, x0
  23d554:	ldr	w5, [x20, #8]
  23d558:	adrp	x9, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23d55c:	ldr	x0, [x8, #8]
  23d560:	adrp	x8, 209000 <inhibit_what_to_string.buffer+0x209000>
  23d564:	add	x9, x9, #0x6bc
  23d568:	add	x8, x8, #0xd63
  23d56c:	tst	w19, #0x1
  23d570:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d574:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  23d578:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23d57c:	csel	x3, x8, x9, ne  // ne = any
  23d580:	add	x1, x1, #0xad4
  23d584:	add	x2, x2, #0xe5d
  23d588:	add	x4, x4, #0xfbe
  23d58c:	bl	240fd0 <sd_bus_emit_signal@plt>
  23d590:	mov	w19, w0
  23d594:	b	23d59c <user_send_signal+0x7c>
  23d598:	mov	w19, #0xfffffff4            	// #-12
  23d59c:	add	x0, sp, #0x8
  23d5a0:	bl	23d5d8 <freep>
  23d5a4:	mov	w0, w19
  23d5a8:	ldp	x20, x19, [sp, #32]
  23d5ac:	ldp	x29, x30, [sp, #16]
  23d5b0:	add	sp, sp, #0x30
  23d5b4:	ret
  23d5b8:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23d5bc:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d5c0:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23d5c4:	add	x1, x1, #0x420
  23d5c8:	add	x2, x2, #0x456
  23d5cc:	add	x4, x4, #0x82e
  23d5d0:	mov	w3, #0x151                 	// #337
  23d5d4:	bl	240790 <log_assert_failed_realm@plt>

000000000023d5d8 <freep>:
  23d5d8:	stp	x29, x30, [sp, #-16]!
  23d5dc:	ldr	x0, [x0]
  23d5e0:	mov	x29, sp
  23d5e4:	bl	240890 <free@plt>
  23d5e8:	ldp	x29, x30, [sp], #16
  23d5ec:	ret

000000000023d5f0 <user_send_changed>:
  23d5f0:	stp	x29, x30, [sp, #-48]!
  23d5f4:	stp	x28, x21, [sp, #16]
  23d5f8:	stp	x20, x19, [sp, #32]
  23d5fc:	mov	x29, sp
  23d600:	sub	sp, sp, #0xe0
  23d604:	stp	x2, x3, [x29, #-96]
  23d608:	stp	x4, x5, [x29, #-80]
  23d60c:	stp	x6, x7, [x29, #-64]
  23d610:	stp	q1, q2, [x29, #-208]
  23d614:	stp	q3, q4, [x29, #-176]
  23d618:	stur	q0, [x29, #-224]
  23d61c:	stp	q5, q6, [x29, #-144]
  23d620:	stur	q7, [x29, #-112]
  23d624:	stp	xzr, x1, [x29, #-16]
  23d628:	cbz	x0, 23d7a0 <user_send_changed+0x1b0>
  23d62c:	ldrb	w8, [x0, #120]
  23d630:	mov	x19, x0
  23d634:	tbnz	w8, #1, 23d640 <user_send_changed+0x50>
  23d638:	mov	w19, wzr
  23d63c:	b	23d780 <user_send_changed+0x190>
  23d640:	mov	x0, x19
  23d644:	bl	23d2c0 <user_bus_path>
  23d648:	stur	x0, [x29, #-16]
  23d64c:	cbz	x0, 23d758 <user_send_changed+0x168>
  23d650:	ldur	x8, [x29, #-8]
  23d654:	mov	x20, x0
  23d658:	cbz	x8, 23d760 <user_send_changed+0x170>
  23d65c:	mov	x9, #0xffffffffffffffd0    	// #-48
  23d660:	sub	x8, x29, #0xe0
  23d664:	sub	x11, x29, #0x60
  23d668:	movk	x9, #0xff80, lsl #32
  23d66c:	add	x10, x29, #0x30
  23d670:	mov	w21, #0x8                   	// #8
  23d674:	add	x12, x8, #0x80
  23d678:	add	x8, x11, #0x30
  23d67c:	mov	w0, #0x1                   	// #1
  23d680:	stp	x12, x9, [x29, #-32]
  23d684:	stp	x10, x8, [x29, #-48]
  23d688:	b	23d6a8 <user_send_changed+0xb8>
  23d68c:	ldur	x9, [x29, #-48]
  23d690:	add	x10, x9, #0x8
  23d694:	stur	x10, [x29, #-48]
  23d698:	ldr	x9, [x9]
  23d69c:	add	x21, x21, #0x8
  23d6a0:	add	x0, x0, #0x1
  23d6a4:	cbz	x9, 23d6c8 <user_send_changed+0xd8>
  23d6a8:	ldursw	x9, [x29, #-24]
  23d6ac:	tbz	w9, #31, 23d68c <user_send_changed+0x9c>
  23d6b0:	add	w10, w9, #0x8
  23d6b4:	cmp	w10, #0x0
  23d6b8:	stur	w10, [x29, #-24]
  23d6bc:	b.gt	23d68c <user_send_changed+0x9c>
  23d6c0:	add	x9, x8, x9
  23d6c4:	b	23d698 <user_send_changed+0xa8>
  23d6c8:	bl	23d7f0 <size_multiply_overflow>
  23d6cc:	tbnz	w0, #0, 23d7c0 <user_send_changed+0x1d0>
  23d6d0:	cmp	x21, #0x400, lsl #12
  23d6d4:	b.hi	23d7cc <user_send_changed+0x1dc>  // b.pmore
  23d6d8:	add	x9, x21, #0xf
  23d6dc:	mov	x8, sp
  23d6e0:	and	x9, x9, #0xfffffffffffffff0
  23d6e4:	sub	x3, x8, x9
  23d6e8:	mov	sp, x3
  23d6ec:	ldur	x10, [x29, #-8]
  23d6f0:	mov	x8, x3
  23d6f4:	mov	x11, #0xffffffffffffffd0    	// #-48
  23d6f8:	sub	x9, x29, #0xe0
  23d6fc:	sub	x12, x29, #0x60
  23d700:	movk	x11, #0xff80, lsl #32
  23d704:	add	x13, x29, #0x30
  23d708:	add	x14, x9, #0x80
  23d70c:	add	x9, x12, #0x30
  23d710:	str	x10, [x8], #8
  23d714:	stp	x14, x11, [x29, #-32]
  23d718:	stp	x13, x9, [x29, #-48]
  23d71c:	b	23d738 <user_send_changed+0x148>
  23d720:	ldur	x10, [x29, #-48]
  23d724:	add	x11, x10, #0x8
  23d728:	stur	x11, [x29, #-48]
  23d72c:	ldr	x10, [x10]
  23d730:	str	x10, [x8], #8
  23d734:	cbz	x10, 23d764 <user_send_changed+0x174>
  23d738:	ldursw	x10, [x29, #-24]
  23d73c:	tbz	w10, #31, 23d720 <user_send_changed+0x130>
  23d740:	add	w11, w10, #0x8
  23d744:	cmp	w11, #0x0
  23d748:	stur	w11, [x29, #-24]
  23d74c:	b.gt	23d720 <user_send_changed+0x130>
  23d750:	add	x10, x9, x10
  23d754:	b	23d72c <user_send_changed+0x13c>
  23d758:	mov	w19, #0xfffffff4            	// #-12
  23d75c:	b	23d780 <user_send_changed+0x190>
  23d760:	sub	x3, x29, #0x8
  23d764:	ldr	x8, [x19]
  23d768:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23d76c:	add	x2, x2, #0xecb
  23d770:	mov	x1, x20
  23d774:	ldr	x0, [x8, #8]
  23d778:	bl	2412b0 <sd_bus_emit_properties_changed_strv@plt>
  23d77c:	mov	w19, w0
  23d780:	sub	x0, x29, #0x10
  23d784:	bl	23d5d8 <freep>
  23d788:	mov	w0, w19
  23d78c:	mov	sp, x29
  23d790:	ldp	x20, x19, [sp, #32]
  23d794:	ldp	x28, x21, [sp, #16]
  23d798:	ldp	x29, x30, [sp], #48
  23d79c:	ret
  23d7a0:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23d7a4:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d7a8:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d7ac:	add	x1, x1, #0x420
  23d7b0:	add	x2, x2, #0x456
  23d7b4:	add	x4, x4, #0x4d6
  23d7b8:	mov	w3, #0x163                 	// #355
  23d7bc:	bl	240790 <log_assert_failed_realm@plt>
  23d7c0:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23d7c4:	add	x1, x1, #0x45e
  23d7c8:	b	23d7d4 <user_send_changed+0x1e4>
  23d7cc:	adrp	x1, 212000 <inhibit_what_to_string.buffer+0x212000>
  23d7d0:	add	x1, x1, #0x6f
  23d7d4:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d7d8:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d7dc:	add	x2, x2, #0x456
  23d7e0:	add	x4, x4, #0x4d6
  23d7e4:	mov	w3, #0x16c                 	// #364
  23d7e8:	mov	w0, wzr
  23d7ec:	bl	240790 <log_assert_failed_realm@plt>

000000000023d7f0 <size_multiply_overflow>:
  23d7f0:	cmp	xzr, x0, lsr #61
  23d7f4:	cset	w0, ne  // ne = any
  23d7f8:	ret

000000000023d7fc <user_new>:
  23d7fc:	sub	sp, sp, #0x60
  23d800:	stp	x29, x30, [sp, #16]
  23d804:	add	x29, sp, #0x10
  23d808:	str	x25, [sp, #32]
  23d80c:	stp	x24, x23, [sp, #48]
  23d810:	stp	x22, x21, [sp, #64]
  23d814:	stp	x20, x19, [sp, #80]
  23d818:	str	xzr, [x29, #24]
  23d81c:	cbz	x0, 23d9e8 <user_new+0x1ec>
  23d820:	mov	x20, x1
  23d824:	cbz	x1, 23da08 <user_new+0x20c>
  23d828:	mov	x22, x4
  23d82c:	cbz	x4, 23da2c <user_new+0x230>
  23d830:	mov	x24, x5
  23d834:	mov	w25, w3
  23d838:	mov	w21, w2
  23d83c:	mov	x19, x0
  23d840:	bl	23da90 <malloc_multiply>
  23d844:	str	x0, [x29, #24]
  23d848:	cbz	x0, 23d9b4 <user_new+0x1b8>
  23d84c:	movi	v0.2d, #0x0
  23d850:	mov	x8, #0xffffffffffffffff    	// #-1
  23d854:	mov	x23, x0
  23d858:	str	x20, [x0]
  23d85c:	stp	w21, w25, [x0, #8]
  23d860:	stp	q0, q0, [x0, #16]
  23d864:	stp	q0, q0, [x0, #48]
  23d868:	str	q0, [x0, #80]
  23d86c:	stp	xzr, x8, [x0, #96]
  23d870:	stp	q0, q0, [x0, #112]
  23d874:	str	xzr, [x0, #144]
  23d878:	mov	x0, x22
  23d87c:	bl	240c40 <strdup@plt>
  23d880:	ldr	x22, [x29, #24]
  23d884:	str	x0, [x22, #16]
  23d888:	cbz	x0, 23d9b4 <user_new+0x1b8>
  23d88c:	mov	x0, x24
  23d890:	bl	240c40 <strdup@plt>
  23d894:	str	x0, [x22, #24]
  23d898:	cbz	x0, 23d9b4 <user_new+0x1b8>
  23d89c:	mov	w1, #0x1                   	// #1
  23d8a0:	bl	2418b0 <path_simplify@plt>
  23d8a4:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23d8a8:	add	x0, x22, #0x20
  23d8ac:	add	x1, x1, #0xe52
  23d8b0:	mov	w2, w21
  23d8b4:	bl	240ae0 <asprintf@plt>
  23d8b8:	tbnz	w0, #31, 23d9b4 <user_new+0x1b8>
  23d8bc:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  23d8c0:	add	x0, x22, #0x28
  23d8c4:	add	x1, x1, #0x8f3
  23d8c8:	mov	w2, w21
  23d8cc:	bl	240ae0 <asprintf@plt>
  23d8d0:	tbnz	w0, #31, 23d9b4 <user_new+0x1b8>
  23d8d4:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23d8d8:	add	x2, x2, #0x43
  23d8dc:	mov	x0, sp
  23d8e0:	mov	w1, #0xd                   	// #13
  23d8e4:	mov	w3, w21
  23d8e8:	bl	240e40 <snprintf@plt>
  23d8ec:	cmp	w0, #0xd
  23d8f0:	b.cs	23da50 <user_new+0x254>  // b.hs, b.nlast
  23d8f4:	adrp	x0, 211000 <inhibit_what_to_string.buffer+0x211000>
  23d8f8:	add	x2, x22, #0x30
  23d8fc:	add	x0, x0, #0xa6d
  23d900:	mov	x1, sp
  23d904:	bl	2418c0 <slice_build_subslice@plt>
  23d908:	tbnz	w0, #31, 23d9e0 <user_new+0x1e4>
  23d90c:	adrp	x0, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23d910:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23d914:	add	x3, x22, #0x38
  23d918:	add	x0, x0, #0x689
  23d91c:	add	x2, x2, #0x9ba
  23d920:	mov	x1, sp
  23d924:	bl	2418d0 <unit_name_build@plt>
  23d928:	tbnz	w0, #31, 23d9e0 <user_new+0x1e4>
  23d92c:	adrp	x0, 209000 <inhibit_what_to_string.buffer+0x209000>
  23d930:	adrp	x2, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23d934:	add	x3, x22, #0x40
  23d938:	add	x0, x0, #0x532
  23d93c:	add	x2, x2, #0x9ba
  23d940:	mov	x1, sp
  23d944:	bl	2418d0 <unit_name_build@plt>
  23d948:	tbnz	w0, #31, 23d9e0 <user_new+0x1e4>
  23d94c:	ldr	x0, [x20, #48]
  23d950:	mov	w8, w21
  23d954:	add	x1, x8, #0x1
  23d958:	mov	x2, x23
  23d95c:	bl	240d00 <hashmap_put@plt>
  23d960:	tbnz	w0, #31, 23d9e0 <user_new+0x1e4>
  23d964:	ldr	x0, [x20, #224]
  23d968:	ldr	x1, [x22, #48]
  23d96c:	mov	x2, x22
  23d970:	bl	240d00 <hashmap_put@plt>
  23d974:	tbnz	w0, #31, 23d9e0 <user_new+0x1e4>
  23d978:	ldr	x0, [x20, #224]
  23d97c:	ldr	x1, [x22, #56]
  23d980:	mov	x2, x22
  23d984:	bl	240d00 <hashmap_put@plt>
  23d988:	tbnz	w0, #31, 23d9e0 <user_new+0x1e4>
  23d98c:	ldr	x0, [x20, #224]
  23d990:	ldr	x1, [x22, #64]
  23d994:	mov	x2, x22
  23d998:	bl	240d00 <hashmap_put@plt>
  23d99c:	tbnz	w0, #31, 23d9e0 <user_new+0x1e4>
  23d9a0:	ldr	x8, [x29, #24]
  23d9a4:	mov	w24, wzr
  23d9a8:	str	xzr, [x29, #24]
  23d9ac:	str	x8, [x19]
  23d9b0:	b	23d9b8 <user_new+0x1bc>
  23d9b4:	mov	w24, #0xfffffff4            	// #-12
  23d9b8:	add	x0, x29, #0x18
  23d9bc:	bl	23da74 <user_freep>
  23d9c0:	mov	w0, w24
  23d9c4:	ldp	x20, x19, [sp, #80]
  23d9c8:	ldp	x22, x21, [sp, #64]
  23d9cc:	ldp	x24, x23, [sp, #48]
  23d9d0:	ldr	x25, [sp, #32]
  23d9d4:	ldp	x29, x30, [sp, #16]
  23d9d8:	add	sp, sp, #0x60
  23d9dc:	ret
  23d9e0:	mov	w24, w0
  23d9e4:	b	23d9b8 <user_new+0x1bc>
  23d9e8:	adrp	x1, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23d9ec:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23d9f0:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  23d9f4:	add	x1, x1, #0xa82
  23d9f8:	add	x2, x2, #0xd60
  23d9fc:	add	x4, x4, #0xd78
  23da00:	mov	w3, #0x31                  	// #49
  23da04:	bl	240790 <log_assert_failed_realm@plt>
  23da08:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23da0c:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23da10:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  23da14:	add	x1, x1, #0x102
  23da18:	add	x2, x2, #0xd60
  23da1c:	add	x4, x4, #0xd78
  23da20:	mov	w3, #0x32                  	// #50
  23da24:	mov	w0, wzr
  23da28:	bl	240790 <log_assert_failed_realm@plt>
  23da2c:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23da30:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23da34:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  23da38:	add	x1, x1, #0xa54
  23da3c:	add	x2, x2, #0xd60
  23da40:	add	x4, x4, #0xd78
  23da44:	mov	w3, #0x33                  	// #51
  23da48:	mov	w0, wzr
  23da4c:	bl	240790 <log_assert_failed_realm@plt>
  23da50:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23da54:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23da58:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  23da5c:	add	x1, x1, #0xeff
  23da60:	add	x2, x2, #0xd60
  23da64:	add	x4, x4, #0xd78
  23da68:	mov	w3, #0x50                  	// #80
  23da6c:	mov	w0, wzr
  23da70:	bl	240790 <log_assert_failed_realm@plt>

000000000023da74 <user_freep>:
  23da74:	stp	x29, x30, [sp, #-16]!
  23da78:	ldr	x0, [x0]
  23da7c:	mov	x29, sp
  23da80:	cbz	x0, 23da88 <user_freep+0x14>
  23da84:	bl	23dac4 <user_free>
  23da88:	ldp	x29, x30, [sp], #16
  23da8c:	ret

000000000023da90 <malloc_multiply>:
  23da90:	stp	x29, x30, [sp, #-16]!
  23da94:	mov	w0, #0x98                  	// #152
  23da98:	mov	w1, #0x1                   	// #1
  23da9c:	mov	x29, sp
  23daa0:	bl	23eae8 <size_multiply_overflow>
  23daa4:	tbz	w0, #0, 23dab4 <malloc_multiply+0x24>
  23daa8:	mov	x0, xzr
  23daac:	ldp	x29, x30, [sp], #16
  23dab0:	ret
  23dab4:	mov	w0, #0x98                  	// #152
  23dab8:	bl	2408c0 <malloc@plt>
  23dabc:	ldp	x29, x30, [sp], #16
  23dac0:	ret

000000000023dac4 <user_free>:
  23dac4:	stp	x29, x30, [sp, #-32]!
  23dac8:	str	x19, [sp, #16]
  23dacc:	mov	x29, sp
  23dad0:	cbz	x0, 23dc00 <user_free+0x13c>
  23dad4:	ldrb	w8, [x0, #120]
  23dad8:	mov	x19, x0
  23dadc:	tbz	w8, #0, 23db28 <user_free+0x64>
  23dae0:	mov	x8, x19
  23dae4:	ldr	x9, [x19]
  23dae8:	ldr	x10, [x8, #136]!
  23daec:	cbz	x10, 23daf8 <user_free+0x34>
  23daf0:	ldr	x11, [x19, #144]
  23daf4:	str	x11, [x10, #144]
  23daf8:	ldr	x10, [x19, #144]
  23dafc:	cbz	x10, 23db08 <user_free+0x44>
  23db00:	add	x9, x10, #0x88
  23db04:	b	23db14 <user_free+0x50>
  23db08:	ldr	x10, [x9, #96]!
  23db0c:	cmp	x10, x19
  23db10:	b.ne	23dc10 <user_free+0x14c>  // b.any
  23db14:	ldr	x10, [x8]
  23db18:	str	x10, [x9]
  23db1c:	stp	xzr, xzr, [x8]
  23db20:	b	23db28 <user_free+0x64>
  23db24:	bl	239934 <session_free>
  23db28:	ldr	x0, [x19, #128]
  23db2c:	cbnz	x0, 23db24 <user_free+0x60>
  23db30:	ldr	x1, [x19, #56]
  23db34:	cbz	x1, 23db48 <user_free+0x84>
  23db38:	ldr	x8, [x19]
  23db3c:	mov	x2, x19
  23db40:	ldr	x0, [x8, #224]
  23db44:	bl	23dc34 <hashmap_remove_value>
  23db48:	ldr	x1, [x19, #64]
  23db4c:	cbz	x1, 23db60 <user_free+0x9c>
  23db50:	ldr	x8, [x19]
  23db54:	mov	x2, x19
  23db58:	ldr	x0, [x8, #224]
  23db5c:	bl	23dc34 <hashmap_remove_value>
  23db60:	ldr	x1, [x19, #48]
  23db64:	cbz	x1, 23db78 <user_free+0xb4>
  23db68:	ldr	x8, [x19]
  23db6c:	mov	x2, x19
  23db70:	ldr	x0, [x8, #224]
  23db74:	bl	23dc34 <hashmap_remove_value>
  23db78:	ldr	x8, [x19]
  23db7c:	ldr	w9, [x19, #8]
  23db80:	mov	x2, x19
  23db84:	ldr	x0, [x8, #48]
  23db88:	add	x1, x9, #0x1
  23db8c:	bl	23dc34 <hashmap_remove_value>
  23db90:	ldr	x0, [x19, #112]
  23db94:	bl	240810 <sd_event_source_unref@plt>
  23db98:	ldr	x0, [x19, #72]
  23db9c:	bl	23dc48 <mfree>
  23dba0:	ldr	x0, [x19, #56]
  23dba4:	str	xzr, [x19, #72]
  23dba8:	bl	23dc48 <mfree>
  23dbac:	ldr	x0, [x19, #64]
  23dbb0:	str	xzr, [x19, #56]
  23dbb4:	bl	23dc48 <mfree>
  23dbb8:	ldr	x0, [x19, #48]
  23dbbc:	str	xzr, [x19, #64]
  23dbc0:	bl	23dc48 <mfree>
  23dbc4:	ldr	x0, [x19, #40]
  23dbc8:	str	xzr, [x19, #48]
  23dbcc:	bl	23dc48 <mfree>
  23dbd0:	ldr	x0, [x19, #32]
  23dbd4:	str	xzr, [x19, #40]
  23dbd8:	bl	23dc48 <mfree>
  23dbdc:	ldr	x0, [x19, #16]
  23dbe0:	str	xzr, [x19, #32]
  23dbe4:	bl	23dc48 <mfree>
  23dbe8:	ldr	x0, [x19, #24]
  23dbec:	str	xzr, [x19, #16]
  23dbf0:	bl	23dc48 <mfree>
  23dbf4:	mov	x0, x19
  23dbf8:	str	xzr, [x19, #24]
  23dbfc:	bl	23dc48 <mfree>
  23dc00:	ldr	x19, [sp, #16]
  23dc04:	mov	x0, xzr
  23dc08:	ldp	x29, x30, [sp], #32
  23dc0c:	ret
  23dc10:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23dc14:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23dc18:	adrp	x4, 212000 <inhibit_what_to_string.buffer+0x212000>
  23dc1c:	add	x1, x1, #0xa19
  23dc20:	add	x2, x2, #0xd60
  23dc24:	add	x4, x4, #0x3b0
  23dc28:	mov	w3, #0x76                  	// #118
  23dc2c:	mov	w0, wzr
  23dc30:	bl	240790 <log_assert_failed_realm@plt>

000000000023dc34 <hashmap_remove_value>:
  23dc34:	stp	x29, x30, [sp, #-16]!
  23dc38:	mov	x29, sp
  23dc3c:	bl	2416f0 <internal_hashmap_remove_value@plt>
  23dc40:	ldp	x29, x30, [sp], #16
  23dc44:	ret

000000000023dc48 <mfree>:
  23dc48:	stp	x29, x30, [sp, #-16]!
  23dc4c:	mov	x29, sp
  23dc50:	bl	240890 <free@plt>
  23dc54:	ldp	x29, x30, [sp], #16
  23dc58:	ret

000000000023dc5c <user_save>:
  23dc5c:	stp	x29, x30, [sp, #-16]!
  23dc60:	mov	x29, sp
  23dc64:	cbz	x0, 23dc88 <user_save+0x2c>
  23dc68:	ldrb	w8, [x0, #120]
  23dc6c:	tbnz	w8, #1, 23dc7c <user_save+0x20>
  23dc70:	mov	w0, wzr
  23dc74:	ldp	x29, x30, [sp], #16
  23dc78:	ret
  23dc7c:	bl	23dca8 <user_save_internal>
  23dc80:	ldp	x29, x30, [sp], #16
  23dc84:	ret
  23dc88:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23dc8c:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23dc90:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23dc94:	add	x1, x1, #0x420
  23dc98:	add	x2, x2, #0xd60
  23dc9c:	add	x4, x4, #0xf91
  23dca0:	mov	w3, #0x131                 	// #305
  23dca4:	bl	240790 <log_assert_failed_realm@plt>

000000000023dca8 <user_save_internal>:
  23dca8:	sub	sp, sp, #0x40
  23dcac:	stp	x29, x30, [sp, #16]
  23dcb0:	stp	x22, x21, [sp, #32]
  23dcb4:	stp	x20, x19, [sp, #48]
  23dcb8:	add	x29, sp, #0x10
  23dcbc:	stp	xzr, xzr, [sp]
  23dcc0:	cbz	x0, 23e10c <user_save_internal+0x464>
  23dcc4:	ldr	x8, [x0, #32]
  23dcc8:	mov	x19, x0
  23dccc:	cbz	x8, 23e12c <user_save_internal+0x484>
  23dcd0:	adrp	x0, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23dcd4:	add	x0, x0, #0xdc8
  23dcd8:	mov	w1, #0x1ed                 	// #493
  23dcdc:	mov	w4, #0x2                   	// #2
  23dce0:	mov	w2, wzr
  23dce4:	mov	w3, wzr
  23dce8:	bl	2411a0 <mkdir_safe_label@plt>
  23dcec:	tbnz	w0, #31, 23e068 <user_save_internal+0x3c0>
  23dcf0:	ldr	x0, [x19, #32]
  23dcf4:	mov	x1, sp
  23dcf8:	add	x2, sp, #0x8
  23dcfc:	bl	241440 <fopen_temporary@plt>
  23dd00:	tbnz	w0, #31, 23e068 <user_save_internal+0x3c0>
  23dd04:	ldr	x0, [sp]
  23dd08:	bl	241450 <fileno@plt>
  23dd0c:	mov	w1, #0x1a4                 	// #420
  23dd10:	bl	241460 <fchmod@plt>
  23dd14:	ldr	x20, [sp]
  23dd18:	ldr	x21, [x19, #16]
  23dd1c:	mov	x0, x19
  23dd20:	bl	23edd8 <user_get_state>
  23dd24:	bl	23f3e8 <user_state_to_string>
  23dd28:	ldrb	w8, [x19, #120]
  23dd2c:	mov	x22, x0
  23dd30:	ubfx	w0, w8, #2, #1
  23dd34:	bl	23f740 <yes_no>
  23dd38:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23dd3c:	mov	x4, x0
  23dd40:	add	x1, x1, #0x82
  23dd44:	mov	x0, x20
  23dd48:	mov	x2, x21
  23dd4c:	mov	x3, x22
  23dd50:	bl	241470 <fprintf@plt>
  23dd54:	ldr	x2, [x19, #40]
  23dd58:	cbz	x2, 23dd6c <user_save_internal+0xc4>
  23dd5c:	ldr	x0, [sp]
  23dd60:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23dd64:	add	x1, x1, #0x55a
  23dd68:	bl	241470 <fprintf@plt>
  23dd6c:	ldr	x2, [x19, #72]
  23dd70:	cbz	x2, 23dd84 <user_save_internal+0xdc>
  23dd74:	ldr	x0, [sp]
  23dd78:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  23dd7c:	add	x1, x1, #0x918
  23dd80:	bl	241470 <fprintf@plt>
  23dd84:	ldr	x8, [x19, #80]
  23dd88:	cbz	x8, 23dda0 <user_save_internal+0xf8>
  23dd8c:	ldr	x0, [sp]
  23dd90:	ldr	x2, [x8, #8]
  23dd94:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  23dd98:	add	x1, x1, #0x87b
  23dd9c:	bl	241470 <fprintf@plt>
  23dda0:	add	x0, x19, #0x58
  23dda4:	bl	23e52c <dual_timestamp_is_set>
  23dda8:	tbz	w0, #0, 23ddc0 <user_save_internal+0x118>
  23ddac:	ldr	x0, [sp]
  23ddb0:	ldp	x2, x3, [x19, #88]
  23ddb4:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23ddb8:	add	x1, x1, #0xe54
  23ddbc:	bl	241470 <fprintf@plt>
  23ddc0:	ldr	x2, [x19, #104]
  23ddc4:	cmn	x2, #0x1
  23ddc8:	b.eq	23dddc <user_save_internal+0x134>  // b.none
  23ddcc:	ldr	x0, [sp]
  23ddd0:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23ddd4:	add	x1, x1, #0x9d1
  23ddd8:	bl	241470 <fprintf@plt>
  23dddc:	ldr	x8, [x19, #128]
  23dde0:	cbz	x8, 23e044 <user_save_internal+0x39c>
  23dde4:	ldr	x3, [sp]
  23dde8:	adrp	x0, 210000 <inhibit_what_to_string.buffer+0x210000>
  23ddec:	add	x0, x0, #0xdcb
  23ddf0:	mov	w1, #0x9                   	// #9
  23ddf4:	mov	w2, #0x1                   	// #1
  23ddf8:	bl	2415a0 <fwrite@plt>
  23ddfc:	ldr	x20, [x19, #128]
  23de00:	cbz	x20, 23de38 <user_save_internal+0x190>
  23de04:	mov	w21, #0x1                   	// #1
  23de08:	b	23de2c <user_save_internal+0x184>
  23de0c:	ldr	x1, [sp]
  23de10:	mov	w0, #0x20                  	// #32
  23de14:	bl	2417c0 <fputc@plt>
  23de18:	ldr	x0, [x20, #8]
  23de1c:	ldr	x1, [sp]
  23de20:	bl	2418e0 <fputs@plt>
  23de24:	ldr	x20, [x20, #256]
  23de28:	cbz	x20, 23de38 <user_save_internal+0x190>
  23de2c:	tbz	w21, #0, 23de0c <user_save_internal+0x164>
  23de30:	mov	w21, wzr
  23de34:	b	23de18 <user_save_internal+0x170>
  23de38:	ldr	x3, [sp]
  23de3c:	adrp	x0, 212000 <inhibit_what_to_string.buffer+0x212000>
  23de40:	add	x0, x0, #0x412
  23de44:	mov	w1, #0x7                   	// #7
  23de48:	mov	w2, #0x1                   	// #1
  23de4c:	bl	2415a0 <fwrite@plt>
  23de50:	ldr	x20, [x19, #128]
  23de54:	cbz	x20, 23de98 <user_save_internal+0x1f0>
  23de58:	mov	w21, #0x1                   	// #1
  23de5c:	b	23de84 <user_save_internal+0x1dc>
  23de60:	ldr	x1, [sp]
  23de64:	mov	w0, #0x20                  	// #32
  23de68:	bl	2417c0 <fputc@plt>
  23de6c:	ldr	x8, [x20, #136]
  23de70:	ldr	x1, [sp]
  23de74:	ldr	x0, [x8, #8]
  23de78:	bl	2418e0 <fputs@plt>
  23de7c:	ldr	x20, [x20, #256]
  23de80:	cbz	x20, 23de98 <user_save_internal+0x1f0>
  23de84:	ldr	x8, [x20, #136]
  23de88:	cbz	x8, 23de7c <user_save_internal+0x1d4>
  23de8c:	tbz	w21, #0, 23de60 <user_save_internal+0x1b8>
  23de90:	mov	w21, wzr
  23de94:	b	23de6c <user_save_internal+0x1c4>
  23de98:	ldr	x3, [sp]
  23de9c:	adrp	x0, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23dea0:	add	x0, x0, #0xa60
  23dea4:	mov	w1, #0x11                  	// #17
  23dea8:	mov	w2, #0x1                   	// #1
  23deac:	bl	2415a0 <fwrite@plt>
  23deb0:	ldr	x20, [x19, #128]
  23deb4:	cbz	x20, 23def8 <user_save_internal+0x250>
  23deb8:	mov	w21, #0x1                   	// #1
  23debc:	b	23dee0 <user_save_internal+0x238>
  23dec0:	ldr	x1, [sp]
  23dec4:	mov	w0, #0x20                  	// #32
  23dec8:	bl	2417c0 <fputc@plt>
  23decc:	ldr	x0, [x20, #8]
  23ded0:	ldr	x1, [sp]
  23ded4:	bl	2418e0 <fputs@plt>
  23ded8:	ldr	x20, [x20, #256]
  23dedc:	cbz	x20, 23def8 <user_save_internal+0x250>
  23dee0:	mov	x0, x20
  23dee4:	bl	23a310 <session_is_active>
  23dee8:	tbz	w0, #0, 23ded8 <user_save_internal+0x230>
  23deec:	tbz	w21, #0, 23dec0 <user_save_internal+0x218>
  23def0:	mov	w21, wzr
  23def4:	b	23decc <user_save_internal+0x224>
  23def8:	ldr	x3, [sp]
  23defc:	adrp	x0, 211000 <inhibit_what_to_string.buffer+0x211000>
  23df00:	add	x0, x0, #0xeb5
  23df04:	mov	w1, #0x11                  	// #17
  23df08:	mov	w2, #0x1                   	// #1
  23df0c:	bl	2415a0 <fwrite@plt>
  23df10:	ldr	x20, [x19, #128]
  23df14:	cbz	x20, 23df5c <user_save_internal+0x2b4>
  23df18:	mov	w21, #0x1                   	// #1
  23df1c:	b	23df40 <user_save_internal+0x298>
  23df20:	ldr	x1, [sp]
  23df24:	mov	w0, #0x20                  	// #32
  23df28:	bl	2417c0 <fputc@plt>
  23df2c:	ldr	x0, [x20, #8]
  23df30:	ldr	x1, [sp]
  23df34:	bl	2418e0 <fputs@plt>
  23df38:	ldr	x20, [x20, #256]
  23df3c:	cbz	x20, 23df5c <user_save_internal+0x2b4>
  23df40:	mov	x0, x20
  23df44:	bl	23a384 <session_get_state>
  23df48:	cmp	w0, #0x3
  23df4c:	b.eq	23df38 <user_save_internal+0x290>  // b.none
  23df50:	tbz	w21, #0, 23df20 <user_save_internal+0x278>
  23df54:	mov	w21, wzr
  23df58:	b	23df2c <user_save_internal+0x284>
  23df5c:	ldr	x3, [sp]
  23df60:	adrp	x0, 207000 <inhibit_what_to_string.buffer+0x207000>
  23df64:	add	x0, x0, #0x931
  23df68:	mov	w1, #0xe                   	// #14
  23df6c:	mov	w2, #0x1                   	// #1
  23df70:	bl	2415a0 <fwrite@plt>
  23df74:	ldr	x20, [x19, #128]
  23df78:	cbz	x20, 23dfc8 <user_save_internal+0x320>
  23df7c:	mov	w21, #0x1                   	// #1
  23df80:	b	23dfa8 <user_save_internal+0x300>
  23df84:	ldr	x1, [sp]
  23df88:	mov	w0, #0x20                  	// #32
  23df8c:	bl	2417c0 <fputc@plt>
  23df90:	ldr	x8, [x20, #136]
  23df94:	ldr	x1, [sp]
  23df98:	ldr	x0, [x8, #8]
  23df9c:	bl	2418e0 <fputs@plt>
  23dfa0:	ldr	x20, [x20, #256]
  23dfa4:	cbz	x20, 23dfc8 <user_save_internal+0x320>
  23dfa8:	mov	x0, x20
  23dfac:	bl	23a310 <session_is_active>
  23dfb0:	tbz	w0, #0, 23dfa0 <user_save_internal+0x2f8>
  23dfb4:	ldr	x8, [x20, #136]
  23dfb8:	cbz	x8, 23dfa0 <user_save_internal+0x2f8>
  23dfbc:	tbz	w21, #0, 23df84 <user_save_internal+0x2dc>
  23dfc0:	mov	w21, wzr
  23dfc4:	b	23df90 <user_save_internal+0x2e8>
  23dfc8:	ldr	x3, [sp]
  23dfcc:	adrp	x0, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23dfd0:	add	x0, x0, #0x79
  23dfd4:	mov	w1, #0xe                   	// #14
  23dfd8:	mov	w2, #0x1                   	// #1
  23dfdc:	bl	2415a0 <fwrite@plt>
  23dfe0:	ldr	x20, [x19, #128]
  23dfe4:	cbz	x20, 23e038 <user_save_internal+0x390>
  23dfe8:	mov	w21, #0x1                   	// #1
  23dfec:	b	23e014 <user_save_internal+0x36c>
  23dff0:	ldr	x1, [sp]
  23dff4:	mov	w0, #0x20                  	// #32
  23dff8:	bl	2417c0 <fputc@plt>
  23dffc:	ldr	x8, [x20, #136]
  23e000:	ldr	x1, [sp]
  23e004:	ldr	x0, [x8, #8]
  23e008:	bl	2418e0 <fputs@plt>
  23e00c:	ldr	x20, [x20, #256]
  23e010:	cbz	x20, 23e038 <user_save_internal+0x390>
  23e014:	mov	x0, x20
  23e018:	bl	23a384 <session_get_state>
  23e01c:	cmp	w0, #0x3
  23e020:	b.eq	23e00c <user_save_internal+0x364>  // b.none
  23e024:	ldr	x8, [x20, #136]
  23e028:	cbz	x8, 23e00c <user_save_internal+0x364>
  23e02c:	tbz	w21, #0, 23dff0 <user_save_internal+0x348>
  23e030:	mov	w21, wzr
  23e034:	b	23dffc <user_save_internal+0x354>
  23e038:	ldr	x1, [sp]
  23e03c:	mov	w0, #0xa                   	// #10
  23e040:	bl	2417c0 <fputc@plt>
  23e044:	ldr	x0, [sp]
  23e048:	bl	241480 <fflush_and_check@plt>
  23e04c:	tbnz	w0, #31, 23e068 <user_save_internal+0x3c0>
  23e050:	ldr	x0, [sp, #8]
  23e054:	ldr	x1, [x19, #32]
  23e058:	bl	241490 <rename@plt>
  23e05c:	tbnz	w0, #31, 23e0fc <user_save_internal+0x454>
  23e060:	mov	w19, wzr
  23e064:	b	23e0d4 <user_save_internal+0x42c>
  23e068:	mov	w20, w0
  23e06c:	ldr	x0, [x19, #32]
  23e070:	bl	2411d0 <unlink@plt>
  23e074:	ldr	x0, [sp, #8]
  23e078:	cbz	x0, 23e080 <user_save_internal+0x3d8>
  23e07c:	bl	2411d0 <unlink@plt>
  23e080:	mov	w0, wzr
  23e084:	bl	240750 <log_get_max_level_realm@plt>
  23e088:	cmp	w0, #0x3
  23e08c:	b.lt	23e0c4 <user_save_internal+0x41c>  // b.tstop
  23e090:	ldr	x6, [x19, #32]
  23e094:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e098:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23e09c:	adrp	x5, 210000 <inhibit_what_to_string.buffer+0x210000>
  23e0a0:	add	x2, x2, #0xd60
  23e0a4:	add	x4, x4, #0x852
  23e0a8:	add	x5, x5, #0x4cc
  23e0ac:	mov	w0, #0x3                   	// #3
  23e0b0:	mov	w3, #0x12d                 	// #301
  23e0b4:	mov	w1, w20
  23e0b8:	bl	240770 <log_internal_realm@plt>
  23e0bc:	mov	w19, w0
  23e0c0:	b	23e0d4 <user_save_internal+0x42c>
  23e0c4:	cmp	w20, #0x0
  23e0c8:	mov	w8, wzr
  23e0cc:	cneg	w9, w20, mi  // mi = first
  23e0d0:	sub	w19, w8, w9, uxtb
  23e0d4:	mov	x0, sp
  23e0d8:	bl	23f728 <fclosep>
  23e0dc:	add	x0, sp, #0x8
  23e0e0:	bl	23e32c <freep>
  23e0e4:	mov	w0, w19
  23e0e8:	ldp	x20, x19, [sp, #48]
  23e0ec:	ldp	x22, x21, [sp, #32]
  23e0f0:	ldp	x29, x30, [sp, #16]
  23e0f4:	add	sp, sp, #0x40
  23e0f8:	ret
  23e0fc:	bl	240930 <__errno_location@plt>
  23e100:	ldr	w8, [x0]
  23e104:	neg	w20, w8
  23e108:	b	23e06c <user_save_internal+0x3c4>
  23e10c:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23e110:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e114:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  23e118:	add	x1, x1, #0x420
  23e11c:	add	x2, x2, #0xd60
  23e120:	add	x4, x4, #0x283
  23e124:	mov	w3, #0x9a                  	// #154
  23e128:	bl	240790 <log_assert_failed_realm@plt>
  23e12c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23e130:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e134:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  23e138:	add	x1, x1, #0x74
  23e13c:	add	x2, x2, #0xd60
  23e140:	add	x4, x4, #0x283
  23e144:	mov	w3, #0x9b                  	// #155
  23e148:	mov	w0, wzr
  23e14c:	bl	240790 <log_assert_failed_realm@plt>

000000000023e150 <user_load>:
  23e150:	sub	sp, sp, #0x70
  23e154:	stp	x29, x30, [sp, #64]
  23e158:	add	x29, sp, #0x40
  23e15c:	str	x21, [sp, #80]
  23e160:	stp	x20, x19, [sp, #96]
  23e164:	str	xzr, [x29, #24]
  23e168:	stp	xzr, xzr, [x29, #-16]
  23e16c:	stur	xzr, [x29, #-24]
  23e170:	cbz	x0, 23e30c <user_load+0x1bc>
  23e174:	ldr	x1, [x0, #32]
  23e178:	adrp	x9, 209000 <inhibit_what_to_string.buffer+0x209000>
  23e17c:	adrp	x11, 209000 <inhibit_what_to_string.buffer+0x209000>
  23e180:	adrp	x2, 207000 <inhibit_what_to_string.buffer+0x207000>
  23e184:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23e188:	adrp	x6, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23e18c:	mov	x19, x0
  23e190:	add	x3, x0, #0x48
  23e194:	sub	x8, x29, #0x18
  23e198:	add	x9, x9, #0x543
  23e19c:	sub	x10, x29, #0x8
  23e1a0:	add	x11, x11, #0x4c9
  23e1a4:	add	x2, x2, #0x23d
  23e1a8:	add	x4, x4, #0xfa7
  23e1ac:	add	x6, x6, #0xe8c
  23e1b0:	sub	x5, x29, #0x10
  23e1b4:	add	x7, x29, #0x18
  23e1b8:	mov	x0, xzr
  23e1bc:	stp	x8, xzr, [sp, #24]
  23e1c0:	stp	x10, x9, [sp, #8]
  23e1c4:	str	x11, [sp]
  23e1c8:	bl	2414d0 <parse_env_file_sentinel@plt>
  23e1cc:	cmn	w0, #0x2
  23e1d0:	b.eq	23e2d0 <user_load+0x180>  // b.none
  23e1d4:	mov	w20, w0
  23e1d8:	tbnz	w0, #31, 23e210 <user_load+0xc0>
  23e1dc:	ldur	x20, [x29, #-16]
  23e1e0:	cbz	x20, 23e2a0 <user_load+0x150>
  23e1e4:	mov	x0, x20
  23e1e8:	bl	2417d0 <parse_boolean@plt>
  23e1ec:	mov	w21, w0
  23e1f0:	tbnz	w0, #31, 23e264 <user_load+0x114>
  23e1f4:	ldrb	w8, [x19, #120]
  23e1f8:	cmp	w21, #0x0
  23e1fc:	cset	w9, ne  // ne = any
  23e200:	and	w8, w8, #0xfffffffb
  23e204:	orr	w8, w8, w9, lsl #2
  23e208:	strb	w8, [x19, #120]
  23e20c:	b	23e2a0 <user_load+0x150>
  23e210:	mov	w0, wzr
  23e214:	bl	240750 <log_get_max_level_realm@plt>
  23e218:	cmp	w0, #0x3
  23e21c:	b.lt	23e254 <user_load+0x104>  // b.tstop
  23e220:	ldr	x6, [x19, #32]
  23e224:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e228:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e22c:	adrp	x5, 209000 <inhibit_what_to_string.buffer+0x209000>
  23e230:	add	x2, x2, #0xd60
  23e234:	add	x4, x4, #0x8bd
  23e238:	add	x5, x5, #0x3b4
  23e23c:	mov	w0, #0x3                   	// #3
  23e240:	mov	w3, #0x148                 	// #328
  23e244:	mov	w1, w20
  23e248:	bl	240770 <log_internal_realm@plt>
  23e24c:	mov	w19, w0
  23e250:	b	23e2d4 <user_load+0x184>
  23e254:	mov	w8, wzr
  23e258:	neg	w9, w20
  23e25c:	sub	w19, w8, w9, uxtb
  23e260:	b	23e2d4 <user_load+0x184>
  23e264:	mov	w0, wzr
  23e268:	bl	240750 <log_get_max_level_realm@plt>
  23e26c:	cmp	w0, #0x7
  23e270:	b.lt	23e2a0 <user_load+0x150>  // b.tstop
  23e274:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e278:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e27c:	adrp	x5, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23e280:	add	x2, x2, #0xd60
  23e284:	add	x4, x4, #0x8bd
  23e288:	add	x5, x5, #0x507
  23e28c:	mov	w0, #0x7                   	// #7
  23e290:	mov	w3, #0x14d                 	// #333
  23e294:	mov	w1, w21
  23e298:	mov	x6, x20
  23e29c:	bl	240770 <log_internal_realm@plt>
  23e2a0:	ldr	x0, [x29, #24]
  23e2a4:	cbz	x0, 23e2b0 <user_load+0x160>
  23e2a8:	add	x1, x19, #0x58
  23e2ac:	bl	2417e0 <deserialize_usec@plt>
  23e2b0:	ldur	x0, [x29, #-8]
  23e2b4:	cbz	x0, 23e2c0 <user_load+0x170>
  23e2b8:	add	x1, x19, #0x60
  23e2bc:	bl	2417e0 <deserialize_usec@plt>
  23e2c0:	ldur	x0, [x29, #-24]
  23e2c4:	cbz	x0, 23e2d0 <user_load+0x180>
  23e2c8:	add	x1, x19, #0x68
  23e2cc:	bl	2417e0 <deserialize_usec@plt>
  23e2d0:	mov	w19, wzr
  23e2d4:	sub	x0, x29, #0x18
  23e2d8:	bl	23e32c <freep>
  23e2dc:	sub	x0, x29, #0x10
  23e2e0:	bl	23e32c <freep>
  23e2e4:	sub	x0, x29, #0x8
  23e2e8:	bl	23e32c <freep>
  23e2ec:	add	x0, x29, #0x18
  23e2f0:	bl	23e32c <freep>
  23e2f4:	mov	w0, w19
  23e2f8:	ldp	x20, x19, [sp, #96]
  23e2fc:	ldr	x21, [sp, #80]
  23e300:	ldp	x29, x30, [sp, #64]
  23e304:	add	sp, sp, #0x70
  23e308:	ret
  23e30c:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23e310:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e314:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  23e318:	add	x1, x1, #0x420
  23e31c:	add	x2, x2, #0xd60
  23e320:	add	x4, x4, #0xa78
  23e324:	mov	w3, #0x13d                 	// #317
  23e328:	bl	240790 <log_assert_failed_realm@plt>

000000000023e32c <freep>:
  23e32c:	stp	x29, x30, [sp, #-16]!
  23e330:	ldr	x0, [x0]
  23e334:	mov	x29, sp
  23e338:	bl	240890 <free@plt>
  23e33c:	ldp	x29, x30, [sp], #16
  23e340:	ret

000000000023e344 <user_start>:
  23e344:	stp	x29, x30, [sp, #-32]!
  23e348:	stp	x20, x19, [sp, #16]
  23e34c:	mov	x29, sp
  23e350:	cbz	x0, 23e410 <user_start+0xcc>
  23e354:	ldrb	w8, [x0, #120]
  23e358:	mov	x19, x0
  23e35c:	and	w9, w8, #0x6
  23e360:	cmp	w9, #0x2
  23e364:	b.eq	23e400 <user_start+0xbc>  // b.none
  23e368:	and	w9, w8, #0xfffffffb
  23e36c:	strb	w9, [x19, #120]
  23e370:	tbnz	w8, #1, 23e3b0 <user_start+0x6c>
  23e374:	mov	w0, wzr
  23e378:	bl	240750 <log_get_max_level_realm@plt>
  23e37c:	cmp	w0, #0x7
  23e380:	b.lt	23e3b0 <user_start+0x6c>  // b.tstop
  23e384:	ldr	x6, [x19, #16]
  23e388:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e38c:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23e390:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  23e394:	add	x2, x2, #0xd60
  23e398:	add	x4, x4, #0x4f4
  23e39c:	add	x5, x5, #0x249
  23e3a0:	mov	w0, #0x7                   	// #7
  23e3a4:	mov	w3, #0x17b                 	// #379
  23e3a8:	mov	w1, wzr
  23e3ac:	bl	240770 <log_internal_realm@plt>
  23e3b0:	mov	x0, x19
  23e3b4:	bl	23dca8 <user_save_internal>
  23e3b8:	mov	x0, x19
  23e3bc:	bl	23e430 <user_start_service>
  23e3c0:	ldrb	w8, [x19, #120]
  23e3c4:	tbnz	w8, #1, 23e3f8 <user_start+0xb4>
  23e3c8:	add	x20, x19, #0x58
  23e3cc:	mov	x0, x20
  23e3d0:	bl	23e52c <dual_timestamp_is_set>
  23e3d4:	tbnz	w0, #0, 23e3e0 <user_start+0x9c>
  23e3d8:	mov	x0, x20
  23e3dc:	bl	2414b0 <dual_timestamp_get@plt>
  23e3e0:	mov	w1, #0x1                   	// #1
  23e3e4:	mov	x0, x19
  23e3e8:	bl	23d520 <user_send_signal>
  23e3ec:	ldrb	w8, [x19, #120]
  23e3f0:	orr	w8, w8, #0x2
  23e3f4:	strb	w8, [x19, #120]
  23e3f8:	mov	x0, x19
  23e3fc:	bl	23dc5c <user_save>
  23e400:	ldp	x20, x19, [sp, #16]
  23e404:	mov	w0, wzr
  23e408:	ldp	x29, x30, [sp], #32
  23e40c:	ret
  23e410:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23e414:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e418:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23e41c:	add	x1, x1, #0x420
  23e420:	add	x2, x2, #0xd60
  23e424:	add	x4, x4, #0xa49
  23e428:	mov	w3, #0x16f                 	// #367
  23e42c:	bl	240790 <log_assert_failed_realm@plt>

000000000023e430 <user_start_service>:
  23e430:	sub	sp, sp, #0x50
  23e434:	stp	x29, x30, [sp, #32]
  23e438:	str	x21, [sp, #48]
  23e43c:	stp	x20, x19, [sp, #64]
  23e440:	add	x29, sp, #0x20
  23e444:	stp	xzr, xzr, [sp, #8]
  23e448:	str	xzr, [sp, #24]
  23e44c:	cbz	x0, 23e50c <user_start_service+0xdc>
  23e450:	mov	x20, x0
  23e454:	mov	x19, x0
  23e458:	ldr	x0, [x20, #72]!
  23e45c:	bl	23dc48 <mfree>
  23e460:	str	xzr, [x20]
  23e464:	ldr	x0, [x19]
  23e468:	ldr	x1, [x19, #56]
  23e46c:	add	x2, sp, #0x8
  23e470:	mov	x3, x20
  23e474:	bl	22fc50 <manager_start_unit>
  23e478:	tbz	w0, #31, 23e4f0 <user_start_service+0xc0>
  23e47c:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23e480:	mov	w20, w0
  23e484:	add	x1, x1, #0xd1c
  23e488:	add	x0, sp, #0x8
  23e48c:	bl	241310 <sd_bus_error_has_name@plt>
  23e490:	cmp	w0, #0x0
  23e494:	mov	w8, #0x7                   	// #7
  23e498:	mov	w9, #0x4                   	// #4
  23e49c:	mov	w0, wzr
  23e4a0:	csel	w21, w9, w8, eq  // eq = none
  23e4a4:	bl	240750 <log_get_max_level_realm@plt>
  23e4a8:	cmp	w0, w21
  23e4ac:	b.lt	23e4f0 <user_start_service+0xc0>  // b.tstop
  23e4b0:	ldr	x19, [x19, #56]
  23e4b4:	add	x0, sp, #0x8
  23e4b8:	mov	w1, w20
  23e4bc:	bl	240cc0 <bus_error_message@plt>
  23e4c0:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e4c4:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23e4c8:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23e4cc:	mov	x7, x0
  23e4d0:	add	x2, x2, #0xd60
  23e4d4:	add	x4, x4, #0x84a
  23e4d8:	add	x5, x5, #0xd40
  23e4dc:	mov	w3, #0x16b                 	// #363
  23e4e0:	mov	w0, w21
  23e4e4:	mov	w1, w20
  23e4e8:	mov	x6, x19
  23e4ec:	bl	240770 <log_internal_realm@plt>
  23e4f0:	add	x0, sp, #0x8
  23e4f4:	bl	240c80 <sd_bus_error_free@plt>
  23e4f8:	ldp	x20, x19, [sp, #64]
  23e4fc:	ldr	x21, [sp, #48]
  23e500:	ldp	x29, x30, [sp, #32]
  23e504:	add	sp, sp, #0x50
  23e508:	ret
  23e50c:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23e510:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e514:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23e518:	add	x1, x1, #0x420
  23e51c:	add	x2, x2, #0xd60
  23e520:	add	x4, x4, #0x865
  23e524:	mov	w3, #0x160                 	// #352
  23e528:	bl	240790 <log_assert_failed_realm@plt>

000000000023e52c <dual_timestamp_is_set>:
  23e52c:	stp	x29, x30, [sp, #-32]!
  23e530:	str	x19, [sp, #16]
  23e534:	mov	x19, x0
  23e538:	ldr	x0, [x0]
  23e53c:	mov	x29, sp
  23e540:	bl	23f75c <timestamp_is_set>
  23e544:	tbz	w0, #0, 23e550 <dual_timestamp_is_set+0x24>
  23e548:	mov	w0, #0x1                   	// #1
  23e54c:	b	23e558 <dual_timestamp_is_set+0x2c>
  23e550:	ldr	x0, [x19, #8]
  23e554:	bl	23f75c <timestamp_is_set>
  23e558:	ldr	x19, [sp, #16]
  23e55c:	and	w0, w0, #0x1
  23e560:	ldp	x29, x30, [sp], #32
  23e564:	ret

000000000023e568 <user_stop>:
  23e568:	stp	x29, x30, [sp, #-48]!
  23e56c:	stp	x22, x21, [sp, #16]
  23e570:	stp	x20, x19, [sp, #32]
  23e574:	mov	x29, sp
  23e578:	cbz	x0, 23e600 <user_stop+0x98>
  23e57c:	ldrb	w8, [x0, #120]
  23e580:	mov	x19, x0
  23e584:	tbnz	w8, #1, 23e590 <user_stop+0x28>
  23e588:	mov	w20, wzr
  23e58c:	b	23e5ec <user_stop+0x84>
  23e590:	tbnz	w8, #2, 23e5c4 <user_stop+0x5c>
  23e594:	ldr	x21, [x19, #128]
  23e598:	cbz	x21, 23e5cc <user_stop+0x64>
  23e59c:	mov	w20, wzr
  23e5a0:	and	w22, w1, #0x1
  23e5a4:	mov	x0, x21
  23e5a8:	mov	w1, w22
  23e5ac:	bl	23b758 <session_stop>
  23e5b0:	ldr	x21, [x21, #256]
  23e5b4:	cmp	w0, #0x0
  23e5b8:	csel	w20, w0, w20, lt  // lt = tstop
  23e5bc:	cbnz	x21, 23e5a4 <user_stop+0x3c>
  23e5c0:	b	23e5d0 <user_stop+0x68>
  23e5c4:	mov	w20, wzr
  23e5c8:	b	23e5e4 <user_stop+0x7c>
  23e5cc:	mov	w20, wzr
  23e5d0:	mov	x0, x19
  23e5d4:	bl	23e620 <user_stop_service>
  23e5d8:	ldrb	w8, [x19, #120]
  23e5dc:	orr	w8, w8, #0x4
  23e5e0:	strb	w8, [x19, #120]
  23e5e4:	mov	x0, x19
  23e5e8:	bl	23dc5c <user_save>
  23e5ec:	mov	w0, w20
  23e5f0:	ldp	x20, x19, [sp, #32]
  23e5f4:	ldp	x22, x21, [sp, #16]
  23e5f8:	ldp	x29, x30, [sp], #48
  23e5fc:	ret
  23e600:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23e604:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e608:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23e60c:	add	x1, x1, #0x420
  23e610:	add	x2, x2, #0xd60
  23e614:	add	x4, x4, #0x972
  23e618:	mov	w3, #0x1a5                 	// #421
  23e61c:	bl	240790 <log_assert_failed_realm@plt>

000000000023e620 <user_stop_service>:
  23e620:	sub	sp, sp, #0x40
  23e624:	stp	x29, x30, [sp, #32]
  23e628:	stp	x20, x19, [sp, #48]
  23e62c:	add	x29, sp, #0x20
  23e630:	stp	xzr, xzr, [sp, #8]
  23e634:	str	xzr, [sp, #24]
  23e638:	cbz	x0, 23e6dc <user_stop_service+0xbc>
  23e63c:	ldr	x8, [x0, #56]
  23e640:	mov	x19, x0
  23e644:	cbz	x8, 23e6fc <user_stop_service+0xdc>
  23e648:	mov	x20, x19
  23e64c:	ldr	x0, [x20, #72]!
  23e650:	bl	23dc48 <mfree>
  23e654:	str	xzr, [x20]
  23e658:	ldr	x0, [x19]
  23e65c:	ldr	x1, [x19, #56]
  23e660:	add	x2, sp, #0x8
  23e664:	mov	x3, x20
  23e668:	bl	22fd54 <manager_stop_unit>
  23e66c:	tbz	w0, #31, 23e6c4 <user_stop_service+0xa4>
  23e670:	mov	w20, w0
  23e674:	mov	w0, wzr
  23e678:	bl	240750 <log_get_max_level_realm@plt>
  23e67c:	cmp	w0, #0x4
  23e680:	b.lt	23e6c4 <user_stop_service+0xa4>  // b.tstop
  23e684:	ldr	x19, [x19, #56]
  23e688:	add	x0, sp, #0x8
  23e68c:	mov	w1, w20
  23e690:	bl	240cc0 <bus_error_message@plt>
  23e694:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e698:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  23e69c:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e6a0:	mov	x7, x0
  23e6a4:	add	x2, x2, #0xd60
  23e6a8:	add	x4, x4, #0xaaf
  23e6ac:	add	x5, x5, #0xdd6
  23e6b0:	mov	w0, #0x4                   	// #4
  23e6b4:	mov	w3, #0x19f                 	// #415
  23e6b8:	mov	w1, w20
  23e6bc:	mov	x6, x19
  23e6c0:	bl	240770 <log_internal_realm@plt>
  23e6c4:	add	x0, sp, #0x8
  23e6c8:	bl	240c80 <sd_bus_error_free@plt>
  23e6cc:	ldp	x20, x19, [sp, #48]
  23e6d0:	ldp	x29, x30, [sp, #32]
  23e6d4:	add	sp, sp, #0x40
  23e6d8:	ret
  23e6dc:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23e6e0:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e6e4:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23e6e8:	add	x1, x1, #0x420
  23e6ec:	add	x2, x2, #0xd60
  23e6f0:	add	x4, x4, #0xed1
  23e6f4:	mov	w3, #0x195                 	// #405
  23e6f8:	bl	240790 <log_assert_failed_realm@plt>
  23e6fc:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  23e700:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e704:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23e708:	add	x1, x1, #0xef0
  23e70c:	add	x2, x2, #0xd60
  23e710:	add	x4, x4, #0xed1
  23e714:	mov	w3, #0x196                 	// #406
  23e718:	mov	w0, wzr
  23e71c:	bl	240790 <log_assert_failed_realm@plt>

000000000023e720 <user_finalize>:
  23e720:	stp	x29, x30, [sp, #-48]!
  23e724:	str	x21, [sp, #16]
  23e728:	stp	x20, x19, [sp, #32]
  23e72c:	mov	x29, sp
  23e730:	cbz	x0, 23e818 <user_finalize+0xf8>
  23e734:	ldrb	w8, [x0, #120]
  23e738:	mov	x19, x0
  23e73c:	tbz	w8, #1, 23e77c <user_finalize+0x5c>
  23e740:	mov	w0, wzr
  23e744:	bl	240750 <log_get_max_level_realm@plt>
  23e748:	cmp	w0, #0x7
  23e74c:	b.lt	23e77c <user_finalize+0x5c>  // b.tstop
  23e750:	ldr	x6, [x19, #16]
  23e754:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e758:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23e75c:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23e760:	add	x2, x2, #0xd60
  23e764:	add	x4, x4, #0x9c3
  23e768:	add	x5, x5, #0x836
  23e76c:	mov	w0, #0x7                   	// #7
  23e770:	mov	w3, #0x1cf                 	// #463
  23e774:	mov	w1, wzr
  23e778:	bl	240770 <log_internal_realm@plt>
  23e77c:	ldr	x21, [x19, #128]
  23e780:	cbz	x21, 23e7a4 <user_finalize+0x84>
  23e784:	mov	w20, wzr
  23e788:	mov	x0, x21
  23e78c:	bl	23bacc <session_finalize>
  23e790:	ldr	x21, [x21, #256]
  23e794:	cmp	w0, #0x0
  23e798:	csel	w20, w0, w20, lt  // lt = tstop
  23e79c:	cbnz	x21, 23e788 <user_finalize+0x68>
  23e7a0:	b	23e7a8 <user_finalize+0x88>
  23e7a4:	mov	w20, wzr
  23e7a8:	ldr	x8, [x19]
  23e7ac:	ldrb	w8, [x8, #424]
  23e7b0:	cbz	w8, 23e7d4 <user_finalize+0xb4>
  23e7b4:	ldr	w21, [x19, #8]
  23e7b8:	mov	w0, w21
  23e7bc:	bl	23e838 <uid_is_system>
  23e7c0:	tbnz	w0, #0, 23e7d4 <user_finalize+0xb4>
  23e7c4:	mov	w0, w21
  23e7c8:	bl	2418f0 <clean_ipc_by_uid@plt>
  23e7cc:	cmp	w0, #0x0
  23e7d0:	csel	w20, w0, w20, lt  // lt = tstop
  23e7d4:	ldr	x0, [x19, #32]
  23e7d8:	bl	2411d0 <unlink@plt>
  23e7dc:	mov	x0, x19
  23e7e0:	bl	23e844 <user_add_to_gc_queue>
  23e7e4:	ldrb	w8, [x19, #120]
  23e7e8:	tbz	w8, #1, 23e804 <user_finalize+0xe4>
  23e7ec:	mov	x0, x19
  23e7f0:	mov	w1, wzr
  23e7f4:	bl	23d520 <user_send_signal>
  23e7f8:	ldrb	w8, [x19, #120]
  23e7fc:	and	w8, w8, #0xfffffffd
  23e800:	strb	w8, [x19, #120]
  23e804:	mov	w0, w20
  23e808:	ldp	x20, x19, [sp, #32]
  23e80c:	ldr	x21, [sp, #16]
  23e810:	ldp	x29, x30, [sp], #48
  23e814:	ret
  23e818:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23e81c:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e820:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23e824:	add	x1, x1, #0x420
  23e828:	add	x2, x2, #0xd60
  23e82c:	add	x4, x4, #0x4ff
  23e830:	mov	w3, #0x1c9                 	// #457
  23e834:	bl	240790 <log_assert_failed_realm@plt>

000000000023e838 <uid_is_system>:
  23e838:	cmp	w0, #0x3e8
  23e83c:	cset	w0, cc  // cc = lo, ul, last
  23e840:	ret

000000000023e844 <user_add_to_gc_queue>:
  23e844:	stp	x29, x30, [sp, #-16]!
  23e848:	mov	x29, sp
  23e84c:	cbz	x0, 23e888 <user_add_to_gc_queue+0x44>
  23e850:	ldrb	w8, [x0, #120]
  23e854:	tbnz	w8, #0, 23e880 <user_add_to_gc_queue+0x3c>
  23e858:	ldr	x8, [x0]
  23e85c:	ldr	x9, [x8, #96]
  23e860:	str	x9, [x0, #136]
  23e864:	cbz	x9, 23e86c <user_add_to_gc_queue+0x28>
  23e868:	str	x0, [x9, #144]
  23e86c:	str	xzr, [x0, #144]
  23e870:	str	x0, [x8, #96]
  23e874:	ldrb	w8, [x0, #120]
  23e878:	orr	w8, w8, #0x1
  23e87c:	strb	w8, [x0, #120]
  23e880:	ldp	x29, x30, [sp], #16
  23e884:	ret
  23e888:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23e88c:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e890:	adrp	x4, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23e894:	add	x1, x1, #0x420
  23e898:	add	x2, x2, #0xd60
  23e89c:	add	x4, x4, #0x519
  23e8a0:	mov	w3, #0x267                 	// #615
  23e8a4:	bl	240790 <log_assert_failed_realm@plt>

000000000023e8a8 <user_get_idle_hint>:
  23e8a8:	sub	sp, sp, #0x50
  23e8ac:	stp	x29, x30, [sp, #16]
  23e8b0:	stp	x24, x23, [sp, #32]
  23e8b4:	stp	x22, x21, [sp, #48]
  23e8b8:	stp	x20, x19, [sp, #64]
  23e8bc:	add	x29, sp, #0x10
  23e8c0:	cbz	x0, 23e990 <user_get_idle_hint+0xe8>
  23e8c4:	ldr	x20, [x0, #128]
  23e8c8:	mov	x19, x1
  23e8cc:	cbz	x20, 23e95c <user_get_idle_hint+0xb4>
  23e8d0:	mov	x24, xzr
  23e8d4:	mov	x22, xzr
  23e8d8:	mov	w23, #0x1                   	// #1
  23e8dc:	mov	x1, sp
  23e8e0:	mov	x0, x20
  23e8e4:	bl	23bdd8 <session_get_idle_hint>
  23e8e8:	tbnz	w0, #31, 23e910 <user_get_idle_hint+0x68>
  23e8ec:	cbz	w0, 23e920 <user_get_idle_hint+0x78>
  23e8f0:	tbz	w23, #0, 23e92c <user_get_idle_hint+0x84>
  23e8f4:	ldp	x9, x8, [sp]
  23e8f8:	cmp	x8, x24
  23e8fc:	csel	x22, x9, x22, hi  // hi = pmore
  23e900:	csel	x24, x8, x24, hi  // hi = pmore
  23e904:	mov	w8, #0x1                   	// #1
  23e908:	tbnz	w8, #0, 23e934 <user_get_idle_hint+0x8c>
  23e90c:	b	23e974 <user_get_idle_hint+0xcc>
  23e910:	mov	w8, wzr
  23e914:	mov	w21, w0
  23e918:	tbnz	w8, #0, 23e934 <user_get_idle_hint+0x8c>
  23e91c:	b	23e974 <user_get_idle_hint+0xcc>
  23e920:	tbz	w23, #0, 23e940 <user_get_idle_hint+0x98>
  23e924:	ldp	x22, x24, [sp]
  23e928:	mov	w23, wzr
  23e92c:	mov	w8, #0x1                   	// #1
  23e930:	tbz	w8, #0, 23e974 <user_get_idle_hint+0xcc>
  23e934:	ldr	x20, [x20, #256]
  23e938:	cbnz	x20, 23e8dc <user_get_idle_hint+0x34>
  23e93c:	b	23e968 <user_get_idle_hint+0xc0>
  23e940:	ldp	x9, x8, [sp]
  23e944:	cmp	x8, x24
  23e948:	csel	x22, x9, x22, cc  // cc = lo, ul, last
  23e94c:	csel	x24, x8, x24, cc  // cc = lo, ul, last
  23e950:	mov	w8, #0x1                   	// #1
  23e954:	tbnz	w8, #0, 23e934 <user_get_idle_hint+0x8c>
  23e958:	b	23e974 <user_get_idle_hint+0xcc>
  23e95c:	mov	x22, xzr
  23e960:	mov	x24, xzr
  23e964:	mov	w23, #0x1                   	// #1
  23e968:	cbz	x19, 23e970 <user_get_idle_hint+0xc8>
  23e96c:	stp	x22, x24, [x19]
  23e970:	and	w21, w23, #0x1
  23e974:	mov	w0, w21
  23e978:	ldp	x20, x19, [sp, #64]
  23e97c:	ldp	x22, x21, [sp, #48]
  23e980:	ldp	x24, x23, [sp, #32]
  23e984:	ldp	x29, x30, [sp, #16]
  23e988:	add	sp, sp, #0x50
  23e98c:	ret
  23e990:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23e994:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e998:	adrp	x4, 207000 <inhibit_what_to_string.buffer+0x207000>
  23e99c:	add	x1, x1, #0x420
  23e9a0:	add	x2, x2, #0xd60
  23e9a4:	add	x4, x4, #0x900
  23e9a8:	mov	w3, #0x1f3                 	// #499
  23e9ac:	bl	240790 <log_assert_failed_realm@plt>

000000000023e9b0 <user_check_linger_file>:
  23e9b0:	stp	x29, x30, [sp, #-48]!
  23e9b4:	str	x21, [sp, #16]
  23e9b8:	stp	x20, x19, [sp, #32]
  23e9bc:	mov	x29, sp
  23e9c0:	sub	sp, sp, #0x10
  23e9c4:	str	xzr, [x29, #24]
  23e9c8:	ldr	x0, [x0, #16]
  23e9cc:	bl	2411b0 <cescape@plt>
  23e9d0:	str	x0, [x29, #24]
  23e9d4:	cbz	x0, 23ea80 <user_check_linger_file+0xd0>
  23e9d8:	ldr	x8, [x29, #24]
  23e9dc:	adrp	x9, 208000 <inhibit_what_to_string.buffer+0x208000>
  23e9e0:	mov	x20, xzr
  23e9e4:	mov	x19, xzr
  23e9e8:	add	x9, x9, #0x46
  23e9ec:	sub	x21, x29, #0x10
  23e9f0:	stp	x9, x8, [x29, #-16]
  23e9f4:	ldr	x0, [x21, x20]
  23e9f8:	cbz	x0, 23ea10 <user_check_linger_file+0x60>
  23e9fc:	bl	240d30 <strlen@plt>
  23ea00:	add	x20, x20, #0x8
  23ea04:	cmp	x20, #0x10
  23ea08:	add	x19, x0, x19
  23ea0c:	b.ne	23e9f4 <user_check_linger_file+0x44>  // b.any
  23ea10:	add	x19, x19, #0x1
  23ea14:	mov	w0, #0x1                   	// #1
  23ea18:	mov	x1, x19
  23ea1c:	bl	23eae8 <size_multiply_overflow>
  23ea20:	tbnz	w0, #0, 23eab8 <user_check_linger_file+0x108>
  23ea24:	cmp	x19, #0x400, lsl #12
  23ea28:	b.hi	23eac4 <user_check_linger_file+0x114>  // b.pmore
  23ea2c:	add	x9, x19, #0xf
  23ea30:	mov	x8, sp
  23ea34:	and	x9, x9, #0xfffffffffffffff0
  23ea38:	sub	x19, x8, x9
  23ea3c:	mov	sp, x19
  23ea40:	mov	x20, xzr
  23ea44:	sub	x21, x29, #0x10
  23ea48:	mov	x0, x19
  23ea4c:	ldr	x1, [x21, x20]
  23ea50:	cbz	x1, 23ea64 <user_check_linger_file+0xb4>
  23ea54:	bl	240d40 <stpcpy@plt>
  23ea58:	add	x20, x20, #0x8
  23ea5c:	cmp	x20, #0x10
  23ea60:	b.ne	23ea4c <user_check_linger_file+0x9c>  // b.any
  23ea64:	strb	wzr, [x0]
  23ea68:	mov	x0, x19
  23ea6c:	mov	w1, wzr
  23ea70:	bl	2408d0 <access@plt>
  23ea74:	tbnz	w0, #31, 23ea88 <user_check_linger_file+0xd8>
  23ea78:	mov	w19, #0x1                   	// #1
  23ea7c:	b	23ea98 <user_check_linger_file+0xe8>
  23ea80:	mov	w19, #0xfffffff4            	// #-12
  23ea84:	b	23ea98 <user_check_linger_file+0xe8>
  23ea88:	bl	240930 <__errno_location@plt>
  23ea8c:	ldr	w8, [x0]
  23ea90:	cmp	w8, #0x2
  23ea94:	csneg	w19, wzr, w8, eq  // eq = none
  23ea98:	add	x0, x29, #0x18
  23ea9c:	bl	23e32c <freep>
  23eaa0:	mov	w0, w19
  23eaa4:	mov	sp, x29
  23eaa8:	ldp	x20, x19, [sp, #32]
  23eaac:	ldr	x21, [sp, #16]
  23eab0:	ldp	x29, x30, [sp], #48
  23eab4:	ret
  23eab8:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23eabc:	add	x1, x1, #0xf50
  23eac0:	b	23eacc <user_check_linger_file+0x11c>
  23eac4:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  23eac8:	add	x1, x1, #0xa15
  23eacc:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23ead0:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  23ead4:	add	x2, x2, #0xd60
  23ead8:	add	x4, x4, #0x8c7
  23eadc:	mov	w3, #0x21a                 	// #538
  23eae0:	mov	w0, wzr
  23eae4:	bl	240790 <log_assert_failed_realm@plt>

000000000023eae8 <size_multiply_overflow>:
  23eae8:	umulh	x8, x1, x0
  23eaec:	cmp	xzr, x8
  23eaf0:	cset	w0, ne  // ne = any
  23eaf4:	ret

000000000023eaf8 <user_may_gc>:
  23eaf8:	sub	sp, sp, #0x40
  23eafc:	stp	x29, x30, [sp, #32]
  23eb00:	stp	x20, x19, [sp, #48]
  23eb04:	add	x29, sp, #0x20
  23eb08:	cbz	x0, 23ec28 <user_may_gc+0x130>
  23eb0c:	mov	x19, x0
  23eb10:	tbz	w1, #0, 23eb24 <user_may_gc+0x2c>
  23eb14:	ldrb	w8, [x19, #120]
  23eb18:	tbnz	w8, #1, 23eb24 <user_may_gc+0x2c>
  23eb1c:	mov	w0, #0x1                   	// #1
  23eb20:	b	23eb30 <user_may_gc+0x38>
  23eb24:	ldr	x8, [x19, #128]
  23eb28:	cbz	x8, 23eb40 <user_may_gc+0x48>
  23eb2c:	mov	w0, wzr
  23eb30:	ldp	x20, x19, [sp, #48]
  23eb34:	ldp	x29, x30, [sp, #32]
  23eb38:	add	sp, sp, #0x40
  23eb3c:	ret
  23eb40:	ldr	x8, [x19, #104]
  23eb44:	cmn	x8, #0x1
  23eb48:	b.eq	23eb88 <user_may_gc+0x90>  // b.none
  23eb4c:	ldr	x8, [x19]
  23eb50:	ldr	x8, [x8, #240]
  23eb54:	cmn	x8, #0x1
  23eb58:	b.eq	23eb2c <user_may_gc+0x34>  // b.none
  23eb5c:	cbz	x8, 23eb88 <user_may_gc+0x90>
  23eb60:	mov	w0, #0x1                   	// #1
  23eb64:	bl	2407a0 <now@plt>
  23eb68:	ldr	x9, [x19]
  23eb6c:	ldr	x8, [x19, #104]
  23eb70:	mov	x20, x0
  23eb74:	ldr	x1, [x9, #240]
  23eb78:	mov	x0, x8
  23eb7c:	bl	23ec48 <usec_add>
  23eb80:	cmp	x20, x0
  23eb84:	b.cc	23eb2c <user_may_gc+0x34>  // b.lo, b.ul, b.last
  23eb88:	mov	x0, x19
  23eb8c:	bl	23e9b0 <user_check_linger_file>
  23eb90:	cmp	w0, #0x1
  23eb94:	b.lt	23eba4 <user_may_gc+0xac>  // b.tstop
  23eb98:	mov	x0, x19
  23eb9c:	bl	23ec68 <user_unit_active>
  23eba0:	tbnz	w0, #0, 23eb2c <user_may_gc+0x34>
  23eba4:	ldr	x1, [x19, #72]
  23eba8:	cbz	x1, 23eb1c <user_may_gc+0x24>
  23ebac:	stp	xzr, xzr, [sp, #8]
  23ebb0:	str	xzr, [sp, #24]
  23ebb4:	ldr	x0, [x19]
  23ebb8:	add	x2, sp, #0x8
  23ebbc:	bl	230250 <manager_job_is_active>
  23ebc0:	mov	w20, w0
  23ebc4:	tbz	w0, #31, 23ec18 <user_may_gc+0x120>
  23ebc8:	mov	w0, wzr
  23ebcc:	bl	240750 <log_get_max_level_realm@plt>
  23ebd0:	cmp	w0, #0x7
  23ebd4:	b.lt	23ec18 <user_may_gc+0x120>  // b.tstop
  23ebd8:	ldr	x19, [x19, #72]
  23ebdc:	add	x0, sp, #0x8
  23ebe0:	mov	w1, w20
  23ebe4:	bl	240cc0 <bus_error_message@plt>
  23ebe8:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23ebec:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23ebf0:	adrp	x5, 210000 <inhibit_what_to_string.buffer+0x210000>
  23ebf4:	mov	x7, x0
  23ebf8:	add	x2, x2, #0xd60
  23ebfc:	add	x4, x4, #0x1
  23ec00:	add	x5, x5, #0x44a
  23ec04:	mov	w0, #0x7                   	// #7
  23ec08:	mov	w3, #0x25b                 	// #603
  23ec0c:	mov	w1, w20
  23ec10:	mov	x6, x19
  23ec14:	bl	240770 <log_internal_realm@plt>
  23ec18:	add	x0, sp, #0x8
  23ec1c:	bl	240c80 <sd_bus_error_free@plt>
  23ec20:	cbnz	w20, 23eb2c <user_may_gc+0x34>
  23ec24:	b	23eb1c <user_may_gc+0x24>
  23ec28:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23ec2c:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23ec30:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23ec34:	add	x1, x1, #0x420
  23ec38:	add	x2, x2, #0xd60
  23ec3c:	add	x4, x4, #0xcfb
  23ec40:	mov	w3, #0x23d                 	// #573
  23ec44:	bl	240790 <log_assert_failed_realm@plt>

000000000023ec48 <usec_add>:
  23ec48:	adds	x8, x1, x0
  23ec4c:	cset	w9, cs  // cs = hs, nlast
  23ec50:	cmp	x8, x1
  23ec54:	cset	w10, cc  // cc = lo, ul, last
  23ec58:	orr	w9, w9, w10
  23ec5c:	cmp	w9, #0x0
  23ec60:	csinv	x0, x8, xzr, eq  // eq = none
  23ec64:	ret

000000000023ec68 <user_unit_active>:
  23ec68:	sub	sp, sp, #0x90
  23ec6c:	stp	x29, x30, [sp, #64]
  23ec70:	stp	x24, x23, [sp, #96]
  23ec74:	stp	x22, x21, [sp, #112]
  23ec78:	stp	x20, x19, [sp, #128]
  23ec7c:	ldr	x1, [x0, #56]
  23ec80:	str	x25, [sp, #80]
  23ec84:	add	x29, sp, #0x40
  23ec88:	cbz	x1, 23ed6c <user_unit_active+0x104>
  23ec8c:	ldr	x8, [x0, #64]
  23ec90:	mov	x19, x0
  23ec94:	cbz	x8, 23ed90 <user_unit_active+0x128>
  23ec98:	ldr	x8, [x19, #48]
  23ec9c:	cbz	x8, 23edb4 <user_unit_active+0x14c>
  23eca0:	ldr	x8, [x19, #64]
  23eca4:	add	x9, sp, #0x20
  23eca8:	adrp	x20, 208000 <inhibit_what_to_string.buffer+0x208000>
  23ecac:	adrp	x21, 211000 <inhibit_what_to_string.buffer+0x211000>
  23ecb0:	stp	x1, x8, [sp, #32]
  23ecb4:	ldr	x8, [x19, #48]
  23ecb8:	adrp	x22, 212000 <inhibit_what_to_string.buffer+0x212000>
  23ecbc:	add	x20, x20, #0xd60
  23ecc0:	add	x21, x21, #0xac1
  23ecc4:	add	x25, x9, #0x8
  23ecc8:	add	x22, x22, #0x333
  23eccc:	stp	x8, xzr, [sp, #48]
  23ecd0:	stp	xzr, xzr, [sp, #8]
  23ecd4:	str	xzr, [sp, #24]
  23ecd8:	ldr	x0, [x19]
  23ecdc:	add	x2, sp, #0x8
  23ece0:	bl	2300a0 <manager_unit_is_active>
  23ece4:	mov	w23, w0
  23ece8:	tbz	w0, #31, 23ed30 <user_unit_active+0xc8>
  23ecec:	mov	w0, wzr
  23ecf0:	bl	240750 <log_get_max_level_realm@plt>
  23ecf4:	cmp	w0, #0x7
  23ecf8:	b.lt	23ed30 <user_unit_active+0xc8>  // b.tstop
  23ecfc:	ldr	x24, [x19, #56]
  23ed00:	add	x0, sp, #0x8
  23ed04:	mov	w1, w23
  23ed08:	bl	240cc0 <bus_error_message@plt>
  23ed0c:	mov	x7, x0
  23ed10:	mov	w0, #0x7                   	// #7
  23ed14:	mov	w3, #0x232                 	// #562
  23ed18:	mov	w1, w23
  23ed1c:	mov	x2, x20
  23ed20:	mov	x4, x21
  23ed24:	mov	x5, x22
  23ed28:	mov	x6, x24
  23ed2c:	bl	240770 <log_internal_realm@plt>
  23ed30:	add	x0, sp, #0x8
  23ed34:	bl	240c80 <sd_bus_error_free@plt>
  23ed38:	cbnz	w23, 23ed4c <user_unit_active+0xe4>
  23ed3c:	ldr	x1, [x25], #8
  23ed40:	cbnz	x1, 23ecd0 <user_unit_active+0x68>
  23ed44:	mov	w0, wzr
  23ed48:	b	23ed50 <user_unit_active+0xe8>
  23ed4c:	mov	w0, #0x1                   	// #1
  23ed50:	ldp	x20, x19, [sp, #128]
  23ed54:	ldp	x22, x21, [sp, #112]
  23ed58:	ldp	x24, x23, [sp, #96]
  23ed5c:	ldr	x25, [sp, #80]
  23ed60:	ldp	x29, x30, [sp, #64]
  23ed64:	add	sp, sp, #0x90
  23ed68:	ret
  23ed6c:	adrp	x1, 210000 <inhibit_what_to_string.buffer+0x210000>
  23ed70:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23ed74:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23ed78:	add	x1, x1, #0xef0
  23ed7c:	add	x2, x2, #0xd60
  23ed80:	add	x4, x4, #0x29e
  23ed84:	mov	w3, #0x229                 	// #553
  23ed88:	mov	w0, wzr
  23ed8c:	bl	240790 <log_assert_failed_realm@plt>
  23ed90:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23ed94:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23ed98:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23ed9c:	add	x1, x1, #0xd70
  23eda0:	add	x2, x2, #0xd60
  23eda4:	add	x4, x4, #0x29e
  23eda8:	mov	w3, #0x22a                 	// #554
  23edac:	mov	w0, wzr
  23edb0:	bl	240790 <log_assert_failed_realm@plt>
  23edb4:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23edb8:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23edbc:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23edc0:	add	x1, x1, #0xc6
  23edc4:	add	x2, x2, #0xd60
  23edc8:	add	x4, x4, #0x29e
  23edcc:	mov	w3, #0x22b                 	// #555
  23edd0:	mov	w0, wzr
  23edd4:	bl	240790 <log_assert_failed_realm@plt>

000000000023edd8 <user_get_state>:
  23edd8:	stp	x29, x30, [sp, #-32]!
  23eddc:	stp	x20, x19, [sp, #16]
  23ede0:	mov	x29, sp
  23ede4:	cbz	x0, 23eea0 <user_get_state+0xc8>
  23ede8:	ldrb	w8, [x0, #120]
  23edec:	mov	x20, x0
  23edf0:	tbnz	w8, #2, 23ee7c <user_get_state+0xa4>
  23edf4:	tbz	w8, #1, 23ee00 <user_get_state+0x28>
  23edf8:	ldr	x8, [x20, #72]
  23edfc:	cbz	x8, 23ee08 <user_get_state+0x30>
  23ee00:	mov	w0, #0x1                   	// #1
  23ee04:	b	23ee80 <user_get_state+0xa8>
  23ee08:	ldr	x19, [x20, #128]
  23ee0c:	cbz	x19, 23ee58 <user_get_state+0x80>
  23ee10:	mov	w20, #0x1                   	// #1
  23ee14:	b	23ee28 <user_get_state+0x50>
  23ee18:	mov	w8, #0x1                   	// #1
  23ee1c:	cbz	w8, 23ee50 <user_get_state+0x78>
  23ee20:	ldr	x19, [x19, #256]
  23ee24:	cbz	x19, 23ee8c <user_get_state+0xb4>
  23ee28:	mov	x0, x19
  23ee2c:	bl	23a384 <session_get_state>
  23ee30:	cmp	w0, #0x2
  23ee34:	b.eq	23ee48 <user_get_state+0x70>  // b.none
  23ee38:	cmp	w0, #0x3
  23ee3c:	b.eq	23ee18 <user_get_state+0x40>  // b.none
  23ee40:	mov	w20, wzr
  23ee44:	b	23ee18 <user_get_state+0x40>
  23ee48:	mov	w8, wzr
  23ee4c:	cbnz	w8, 23ee20 <user_get_state+0x48>
  23ee50:	mov	w0, #0x4                   	// #4
  23ee54:	b	23ee80 <user_get_state+0xa8>
  23ee58:	mov	x0, x20
  23ee5c:	bl	23e9b0 <user_check_linger_file>
  23ee60:	cmp	w0, #0x1
  23ee64:	b.lt	23ee7c <user_get_state+0xa4>  // b.tstop
  23ee68:	mov	x0, x20
  23ee6c:	bl	23ec68 <user_unit_active>
  23ee70:	tbz	w0, #0, 23ee7c <user_get_state+0xa4>
  23ee74:	mov	w0, #0x2                   	// #2
  23ee78:	b	23ee80 <user_get_state+0xa8>
  23ee7c:	mov	w0, #0x5                   	// #5
  23ee80:	ldp	x20, x19, [sp, #16]
  23ee84:	ldp	x29, x30, [sp], #32
  23ee88:	ret
  23ee8c:	tst	w20, #0x1
  23ee90:	mov	w8, #0x3                   	// #3
  23ee94:	mov	w9, #0x5                   	// #5
  23ee98:	csel	w0, w9, w8, ne  // ne = any
  23ee9c:	b	23ee80 <user_get_state+0xa8>
  23eea0:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23eea4:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23eea8:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  23eeac:	add	x1, x1, #0x420
  23eeb0:	add	x2, x2, #0xd60
  23eeb4:	add	x4, x4, #0xa8e
  23eeb8:	mov	w3, #0x273                 	// #627
  23eebc:	bl	240790 <log_assert_failed_realm@plt>

000000000023eec0 <user_kill>:
  23eec0:	stp	x29, x30, [sp, #-16]!
  23eec4:	mov	x29, sp
  23eec8:	cbz	x0, 23eef0 <user_kill+0x30>
  23eecc:	ldr	x8, [x0]
  23eed0:	mov	w3, w1
  23eed4:	ldr	x1, [x0, #48]
  23eed8:	mov	w2, #0x1                   	// #1
  23eedc:	mov	x0, x8
  23eee0:	mov	x4, xzr
  23eee4:	bl	22ffe0 <manager_kill_unit>
  23eee8:	ldp	x29, x30, [sp], #16
  23eeec:	ret
  23eef0:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23eef4:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23eef8:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23eefc:	add	x1, x1, #0x420
  23ef00:	add	x2, x2, #0xd60
  23ef04:	add	x4, x4, #0x98f
  23ef08:	mov	w3, #0x292                 	// #658
  23ef0c:	bl	240790 <log_assert_failed_realm@plt>

000000000023ef10 <user_elect_display>:
  23ef10:	stp	x29, x30, [sp, #-80]!
  23ef14:	stp	x26, x25, [sp, #16]
  23ef18:	stp	x24, x23, [sp, #32]
  23ef1c:	stp	x22, x21, [sp, #48]
  23ef20:	stp	x20, x19, [sp, #64]
  23ef24:	mov	x29, sp
  23ef28:	cbz	x0, 23f058 <user_elect_display+0x148>
  23ef2c:	mov	x19, x0
  23ef30:	mov	w0, wzr
  23ef34:	bl	240750 <log_get_max_level_realm@plt>
  23ef38:	cmp	w0, #0x7
  23ef3c:	b.lt	23ef6c <user_elect_display+0x5c>  // b.tstop
  23ef40:	ldr	x6, [x19, #16]
  23ef44:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23ef48:	adrp	x4, 208000 <inhibit_what_to_string.buffer+0x208000>
  23ef4c:	adrp	x5, 212000 <inhibit_what_to_string.buffer+0x212000>
  23ef50:	add	x2, x2, #0xd60
  23ef54:	add	x4, x4, #0xdc3
  23ef58:	add	x5, x5, #0x3c8
  23ef5c:	mov	w0, #0x7                   	// #7
  23ef60:	mov	w3, #0x2cb                 	// #715
  23ef64:	mov	w1, wzr
  23ef68:	bl	240770 <log_internal_realm@plt>
  23ef6c:	ldr	x20, [x19, #128]
  23ef70:	cbz	x20, 23f040 <user_elect_display+0x130>
  23ef74:	adrp	x26, 209000 <inhibit_what_to_string.buffer+0x209000>
  23ef78:	adrp	x21, 208000 <inhibit_what_to_string.buffer+0x208000>
  23ef7c:	adrp	x22, 208000 <inhibit_what_to_string.buffer+0x208000>
  23ef80:	adrp	x23, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23ef84:	adrp	x24, 208000 <inhibit_what_to_string.buffer+0x208000>
  23ef88:	add	x26, x26, #0x683
  23ef8c:	add	x21, x21, #0xd60
  23ef90:	add	x22, x22, #0xdc3
  23ef94:	add	x23, x23, #0x53b
  23ef98:	add	x24, x24, #0x299
  23ef9c:	b	23efcc <user_elect_display+0xbc>
  23efa0:	ldr	x7, [x25, #8]
  23efa4:	mov	w0, #0x7                   	// #7
  23efa8:	mov	w3, #0x2d4                 	// #724
  23efac:	mov	w1, wzr
  23efb0:	mov	x2, x21
  23efb4:	mov	x4, x22
  23efb8:	mov	x5, x23
  23efbc:	bl	240770 <log_internal_realm@plt>
  23efc0:	str	x20, [x19, #80]
  23efc4:	ldr	x20, [x20, #256]
  23efc8:	cbz	x20, 23f040 <user_elect_display+0x130>
  23efcc:	mov	x0, x20
  23efd0:	bl	23f078 <elect_display_filter>
  23efd4:	tbz	w0, #0, 23f00c <user_elect_display+0xfc>
  23efd8:	ldr	x25, [x19, #80]
  23efdc:	mov	x0, x20
  23efe0:	mov	x1, x25
  23efe4:	bl	23f0d4 <elect_display_compare>
  23efe8:	tbz	w0, #31, 23efc4 <user_elect_display+0xb4>
  23efec:	mov	w0, wzr
  23eff0:	bl	240750 <log_get_max_level_realm@plt>
  23eff4:	cmp	w0, #0x7
  23eff8:	b.lt	23efc0 <user_elect_display+0xb0>  // b.tstop
  23effc:	ldr	x6, [x20, #8]
  23f000:	cbnz	x25, 23efa0 <user_elect_display+0x90>
  23f004:	mov	x7, x26
  23f008:	b	23efa4 <user_elect_display+0x94>
  23f00c:	mov	w0, wzr
  23f010:	bl	240750 <log_get_max_level_realm@plt>
  23f014:	cmp	w0, #0x7
  23f018:	b.lt	23efc4 <user_elect_display+0xb4>  // b.tstop
  23f01c:	ldr	x6, [x20, #8]
  23f020:	mov	w0, #0x7                   	// #7
  23f024:	mov	w3, #0x2cf                 	// #719
  23f028:	mov	w1, wzr
  23f02c:	mov	x2, x21
  23f030:	mov	x4, x22
  23f034:	mov	x5, x24
  23f038:	bl	240770 <log_internal_realm@plt>
  23f03c:	b	23efc4 <user_elect_display+0xb4>
  23f040:	ldp	x20, x19, [sp, #64]
  23f044:	ldp	x22, x21, [sp, #48]
  23f048:	ldp	x24, x23, [sp, #32]
  23f04c:	ldp	x26, x25, [sp, #16]
  23f050:	ldp	x29, x30, [sp], #80
  23f054:	ret
  23f058:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23f05c:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f060:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23f064:	add	x1, x1, #0x420
  23f068:	add	x2, x2, #0xd60
  23f06c:	add	x4, x4, #0x27e
  23f070:	mov	w3, #0x2c7                 	// #711
  23f074:	bl	240790 <log_assert_failed_realm@plt>

000000000023f078 <elect_display_filter>:
  23f078:	stp	x29, x30, [sp, #-16]!
  23f07c:	mov	x29, sp
  23f080:	cbz	x0, 23f0b4 <elect_display_filter+0x3c>
  23f084:	ldr	w8, [x0, #24]
  23f088:	cmp	w8, #0x1
  23f08c:	b.hi	23f098 <elect_display_filter+0x20>  // b.pmore
  23f090:	ldrb	w8, [x0, #209]
  23f094:	tbnz	w8, #1, 23f0a4 <elect_display_filter+0x2c>
  23f098:	mov	w0, wzr
  23f09c:	ldp	x29, x30, [sp], #16
  23f0a0:	ret
  23f0a4:	tst	w8, #0x4
  23f0a8:	cset	w0, eq  // eq = none
  23f0ac:	ldp	x29, x30, [sp], #16
  23f0b0:	ret
  23f0b4:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  23f0b8:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f0bc:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  23f0c0:	add	x1, x1, #0x6de
  23f0c4:	add	x2, x2, #0xd60
  23f0c8:	add	x4, x4, #0xad2
  23f0cc:	mov	w3, #0x299                 	// #665
  23f0d0:	bl	240790 <log_assert_failed_realm@plt>

000000000023f0d4 <elect_display_compare>:
  23f0d4:	orr	x8, x0, x1
  23f0d8:	cbz	x8, 23f1b0 <elect_display_compare+0xdc>
  23f0dc:	cmp	x0, #0x0
  23f0e0:	cset	w8, eq  // eq = none
  23f0e4:	cmp	x1, #0x0
  23f0e8:	cset	w9, eq  // eq = none
  23f0ec:	cmp	w8, w9
  23f0f0:	b.eq	23f10c <elect_display_compare+0x38>  // b.none
  23f0f4:	cmp	x1, #0x0
  23f0f8:	cset	w8, eq  // eq = none
  23f0fc:	cmp	x0, #0x0
  23f100:	cset	w9, eq  // eq = none
  23f104:	sub	w0, w9, w8
  23f108:	ret
  23f10c:	ldrb	w8, [x0, #209]
  23f110:	ldrb	w9, [x1, #209]
  23f114:	ubfx	w8, w8, #2, #1
  23f118:	ubfx	w9, w9, #2, #1
  23f11c:	subs	w8, w8, w9
  23f120:	b.ne	23f1b0 <elect_display_compare+0xdc>  // b.any
  23f124:	ldr	w8, [x0, #24]
  23f128:	ldr	w9, [x1, #24]
  23f12c:	cmp	w8, #0x0
  23f130:	cset	w10, ne  // ne = any
  23f134:	cmp	w9, #0x0
  23f138:	cset	w11, ne  // ne = any
  23f13c:	cmp	w10, w11
  23f140:	b.eq	23f158 <elect_display_compare+0x84>  // b.none
  23f144:	cmp	w9, #0x0
  23f148:	cset	w9, ne  // ne = any
  23f14c:	cmp	w8, #0x0
  23f150:	cset	w8, ne  // ne = any
  23f154:	b	23f1ac <elect_display_compare+0xd8>
  23f158:	ldrsw	x8, [x0, #20]
  23f15c:	ldrsw	x9, [x1, #20]
  23f160:	cmn	x8, #0x1
  23f164:	cset	w10, eq  // eq = none
  23f168:	cmn	x9, #0x1
  23f16c:	cset	w11, eq  // eq = none
  23f170:	cmp	w10, w11
  23f174:	b.eq	23f18c <elect_display_compare+0xb8>  // b.none
  23f178:	cmn	w9, #0x1
  23f17c:	cset	w9, eq  // eq = none
  23f180:	cmn	w8, #0x1
  23f184:	cset	w8, eq  // eq = none
  23f188:	b	23f1ac <elect_display_compare+0xd8>
  23f18c:	cmp	w8, w9
  23f190:	b.ne	23f19c <elect_display_compare+0xc8>  // b.any
  23f194:	mov	w0, wzr
  23f198:	ret
  23f19c:	adrp	x10, 212000 <inhibit_what_to_string.buffer+0x212000>
  23f1a0:	add	x10, x10, #0x638
  23f1a4:	ldr	w8, [x10, x8, lsl #2]
  23f1a8:	ldr	w9, [x10, x9, lsl #2]
  23f1ac:	sub	w8, w8, w9
  23f1b0:	mov	w0, w8
  23f1b4:	ret

000000000023f1b8 <user_update_last_session_timer>:
  23f1b8:	sub	sp, sp, #0x70
  23f1bc:	stp	x29, x30, [sp, #64]
  23f1c0:	str	x21, [sp, #80]
  23f1c4:	stp	x20, x19, [sp, #96]
  23f1c8:	add	x29, sp, #0x40
  23f1cc:	cbz	x0, 23f364 <user_update_last_session_timer+0x1ac>
  23f1d0:	ldr	x8, [x0, #128]
  23f1d4:	mov	x19, x0
  23f1d8:	cbz	x8, 23f1f4 <user_update_last_session_timer+0x3c>
  23f1dc:	ldr	x0, [x19, #112]
  23f1e0:	mov	x8, #0xffffffffffffffff    	// #-1
  23f1e4:	str	x8, [x19, #104]
  23f1e8:	bl	240810 <sd_event_source_unref@plt>
  23f1ec:	str	x0, [x19, #112]
  23f1f0:	b	23f22c <user_update_last_session_timer+0x74>
  23f1f4:	ldr	x8, [x19, #104]
  23f1f8:	cmn	x8, #0x1
  23f1fc:	b.ne	23f22c <user_update_last_session_timer+0x74>  // b.any
  23f200:	mov	w0, #0x1                   	// #1
  23f204:	bl	2407a0 <now@plt>
  23f208:	mov	x20, x19
  23f20c:	ldr	x8, [x20, #112]!
  23f210:	stur	x0, [x20, #-8]
  23f214:	cbnz	x8, 23f384 <user_update_last_session_timer+0x1cc>
  23f218:	ldr	x8, [x19]
  23f21c:	ldr	x9, [x8, #240]
  23f220:	add	x9, x9, #0x1
  23f224:	cmp	x9, #0x2
  23f228:	b.cs	23f240 <user_update_last_session_timer+0x88>  // b.hs, b.nlast
  23f22c:	ldp	x20, x19, [sp, #96]
  23f230:	ldr	x21, [sp, #80]
  23f234:	ldp	x29, x30, [sp, #64]
  23f238:	add	sp, sp, #0x70
  23f23c:	ret
  23f240:	ldr	x0, [x8]
  23f244:	bl	2407f0 <sd_event_get_state@plt>
  23f248:	cmp	w0, #0x5
  23f24c:	b.ne	23f28c <user_update_last_session_timer+0xd4>  // b.any
  23f250:	mov	w0, wzr
  23f254:	bl	240750 <log_get_max_level_realm@plt>
  23f258:	cmp	w0, #0x7
  23f25c:	b.lt	23f22c <user_update_last_session_timer+0x74>  // b.tstop
  23f260:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f264:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23f268:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23f26c:	add	x2, x2, #0xd60
  23f270:	add	x4, x4, #0x9aa
  23f274:	add	x5, x5, #0x81a
  23f278:	mov	w0, #0x7                   	// #7
  23f27c:	mov	w3, #0x2fa                 	// #762
  23f280:	mov	w1, wzr
  23f284:	bl	240770 <log_internal_realm@plt>
  23f288:	b	23f22c <user_update_last_session_timer+0x74>
  23f28c:	ldr	x8, [x19]
  23f290:	ldr	x0, [x19, #104]
  23f294:	ldr	x1, [x8, #240]
  23f298:	ldr	x21, [x8]
  23f29c:	bl	23ec48 <usec_add>
  23f2a0:	adrp	x5, 23f000 <user_elect_display+0xf0>
  23f2a4:	mov	x3, x0
  23f2a8:	add	x5, x5, #0x3a8
  23f2ac:	mov	w2, #0x1                   	// #1
  23f2b0:	mov	x0, x21
  23f2b4:	mov	x1, x20
  23f2b8:	mov	x4, xzr
  23f2bc:	mov	x6, x19
  23f2c0:	bl	240b30 <sd_event_add_time@plt>
  23f2c4:	tbz	w0, #31, 23f304 <user_update_last_session_timer+0x14c>
  23f2c8:	mov	w20, w0
  23f2cc:	mov	w0, wzr
  23f2d0:	bl	240750 <log_get_max_level_realm@plt>
  23f2d4:	cmp	w0, #0x4
  23f2d8:	b.lt	23f304 <user_update_last_session_timer+0x14c>  // b.tstop
  23f2dc:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f2e0:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23f2e4:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23f2e8:	add	x2, x2, #0xd60
  23f2ec:	add	x4, x4, #0x9aa
  23f2f0:	add	x5, x5, #0xd
  23f2f4:	mov	w0, #0x4                   	// #4
  23f2f8:	mov	w3, #0x304                 	// #772
  23f2fc:	mov	w1, w20
  23f300:	bl	240770 <log_internal_realm@plt>
  23f304:	mov	w0, wzr
  23f308:	bl	240750 <log_get_max_level_realm@plt>
  23f30c:	cmp	w0, #0x7
  23f310:	b.lt	23f22c <user_update_last_session_timer+0x74>  // b.tstop
  23f314:	ldr	x8, [x19]
  23f318:	ldr	x19, [x19, #16]
  23f31c:	mov	x0, sp
  23f320:	mov	w1, #0x40                  	// #64
  23f324:	ldr	x2, [x8, #240]
  23f328:	mov	w3, #0x3e8                 	// #1000
  23f32c:	bl	241900 <format_timespan@plt>
  23f330:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f334:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23f338:	adrp	x5, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23f33c:	mov	x7, x0
  23f340:	add	x2, x2, #0xd60
  23f344:	add	x4, x4, #0x9aa
  23f348:	add	x5, x5, #0x50d
  23f34c:	mov	w0, #0x7                   	// #7
  23f350:	mov	w3, #0x30b                 	// #779
  23f354:	mov	w1, wzr
  23f358:	mov	x6, x19
  23f35c:	bl	240770 <log_internal_realm@plt>
  23f360:	b	23f22c <user_update_last_session_timer+0x74>
  23f364:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23f368:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f36c:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23f370:	add	x1, x1, #0x420
  23f374:	add	x2, x2, #0xd60
  23f378:	add	x4, x4, #0xf21
  23f37c:	mov	w3, #0x2e6                 	// #742
  23f380:	bl	240790 <log_assert_failed_realm@plt>
  23f384:	adrp	x1, 207000 <inhibit_what_to_string.buffer+0x207000>
  23f388:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f38c:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23f390:	add	x1, x1, #0x26c
  23f394:	add	x2, x2, #0xd60
  23f398:	add	x4, x4, #0xf21
  23f39c:	mov	w3, #0x2f4                 	// #756
  23f3a0:	mov	w0, wzr
  23f3a4:	bl	240790 <log_assert_failed_realm@plt>

000000000023f3a8 <user_stop_timeout_callback>:
  23f3a8:	stp	x29, x30, [sp, #-16]!
  23f3ac:	mov	x0, x2
  23f3b0:	mov	x29, sp
  23f3b4:	cbz	x2, 23f3c8 <user_stop_timeout_callback+0x20>
  23f3b8:	bl	23e844 <user_add_to_gc_queue>
  23f3bc:	mov	w0, wzr
  23f3c0:	ldp	x29, x30, [sp], #16
  23f3c4:	ret
  23f3c8:	adrp	x1, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23f3cc:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f3d0:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23f3d4:	add	x1, x1, #0x420
  23f3d8:	add	x2, x2, #0xd60
  23f3dc:	add	x4, x4, #0x2bd
  23f3e0:	mov	w3, #0x2dd                 	// #733
  23f3e4:	bl	240790 <log_assert_failed_realm@plt>

000000000023f3e8 <user_state_to_string>:
  23f3e8:	cmp	w0, #0x5
  23f3ec:	b.ls	23f3f8 <user_state_to_string+0x10>  // b.plast
  23f3f0:	mov	x0, xzr
  23f3f4:	ret
  23f3f8:	adrp	x8, 254000 <session_vtable+0x3d0>
  23f3fc:	add	x8, x8, #0xae0
  23f400:	ldr	x0, [x8, w0, sxtw #3]
  23f404:	ret

000000000023f408 <user_state_from_string>:
  23f408:	stp	x29, x30, [sp, #-16]!
  23f40c:	mov	x2, x0
  23f410:	adrp	x0, 254000 <session_vtable+0x3d0>
  23f414:	add	x0, x0, #0xae0
  23f418:	mov	w1, #0x6                   	// #6
  23f41c:	mov	x29, sp
  23f420:	bl	240cd0 <string_table_lookup@plt>
  23f424:	ldp	x29, x30, [sp], #16
  23f428:	ret

000000000023f42c <config_parse_tmpfs_size>:
  23f42c:	sub	sp, sp, #0x60
  23f430:	stp	x29, x30, [sp, #16]
  23f434:	str	x25, [sp, #32]
  23f438:	stp	x24, x23, [sp, #48]
  23f43c:	stp	x22, x21, [sp, #64]
  23f440:	stp	x20, x19, [sp, #80]
  23f444:	add	x29, sp, #0x10
  23f448:	cbz	x1, 23f540 <config_parse_tmpfs_size+0x114>
  23f44c:	cbz	x5, 23f564 <config_parse_tmpfs_size+0x138>
  23f450:	mov	x22, x7
  23f454:	cbz	x7, 23f588 <config_parse_tmpfs_size+0x15c>
  23f458:	ldr	x25, [x29, #80]
  23f45c:	cbz	x25, 23f5ac <config_parse_tmpfs_size+0x180>
  23f460:	mov	x21, x0
  23f464:	mov	x0, x22
  23f468:	mov	w19, w2
  23f46c:	mov	x20, x1
  23f470:	bl	241910 <parse_permille@plt>
  23f474:	sub	w8, w0, #0x1
  23f478:	cmp	w8, #0x3e6
  23f47c:	b.hi	23f494 <config_parse_tmpfs_size+0x68>  // b.pmore
  23f480:	sxtw	x0, w0
  23f484:	mov	w1, #0x3e8                 	// #1000
  23f488:	bl	240d90 <physical_memory_scale@plt>
  23f48c:	str	x0, [x25]
  23f490:	b	23f520 <config_parse_tmpfs_size+0xf4>
  23f494:	add	x2, x29, #0x18
  23f498:	mov	w1, #0x400                 	// #1024
  23f49c:	mov	x0, x22
  23f4a0:	bl	241920 <parse_size@plt>
  23f4a4:	ldr	x24, [x29, #24]
  23f4a8:	mov	w8, #0xffffffff            	// #-1
  23f4ac:	cmp	x24, #0x0
  23f4b0:	ccmp	w0, w8, #0x4, eq  // eq = none
  23f4b4:	mov	w8, #0xffffffde            	// #-34
  23f4b8:	csel	w23, w8, w0, gt
  23f4bc:	tbnz	w23, #31, 23f4d8 <config_parse_tmpfs_size+0xac>
  23f4c0:	bl	241930 <page_size@plt>
  23f4c4:	mov	x1, x0
  23f4c8:	mov	x0, x24
  23f4cc:	bl	23f5d0 <ALIGN_TO>
  23f4d0:	str	x0, [x25]
  23f4d4:	b	23f520 <config_parse_tmpfs_size+0xf4>
  23f4d8:	mov	w0, wzr
  23f4dc:	bl	240750 <log_get_max_level_realm@plt>
  23f4e0:	cmp	w0, #0x3
  23f4e4:	b.lt	23f520 <config_parse_tmpfs_size+0xf4>  // b.tstop
  23f4e8:	adrp	x8, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f4ec:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f4f0:	adrp	x7, 211000 <inhibit_what_to_string.buffer+0x211000>
  23f4f4:	add	x8, x8, #0x8ea
  23f4f8:	add	x5, x5, #0xd60
  23f4fc:	add	x7, x7, #0xe9d
  23f500:	mov	w1, #0x3                   	// #3
  23f504:	mov	w6, #0x33b                 	// #827
  23f508:	mov	x0, x21
  23f50c:	mov	x2, x20
  23f510:	mov	w3, w19
  23f514:	mov	w4, w23
  23f518:	stp	x8, x22, [sp]
  23f51c:	bl	240ce0 <log_syntax_internal@plt>
  23f520:	ldp	x20, x19, [sp, #80]
  23f524:	ldp	x22, x21, [sp, #64]
  23f528:	ldp	x24, x23, [sp, #48]
  23f52c:	ldr	x25, [sp, #32]
  23f530:	ldp	x29, x30, [sp, #16]
  23f534:	mov	w0, wzr
  23f538:	add	sp, sp, #0x60
  23f53c:	ret
  23f540:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23f544:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f548:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  23f54c:	add	x1, x1, #0xb7e
  23f550:	add	x2, x2, #0xd60
  23f554:	add	x4, x4, #0x39d
  23f558:	mov	w3, #0x329                 	// #809
  23f55c:	mov	w0, wzr
  23f560:	bl	240790 <log_assert_failed_realm@plt>
  23f564:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23f568:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f56c:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  23f570:	add	x1, x1, #0x94a
  23f574:	add	x2, x2, #0xd60
  23f578:	add	x4, x4, #0x39d
  23f57c:	mov	w3, #0x32a                 	// #810
  23f580:	mov	w0, wzr
  23f584:	bl	240790 <log_assert_failed_realm@plt>
  23f588:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f58c:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f590:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  23f594:	add	x1, x1, #0x37a
  23f598:	add	x2, x2, #0xd60
  23f59c:	add	x4, x4, #0x39d
  23f5a0:	mov	w3, #0x32b                 	// #811
  23f5a4:	mov	w0, wzr
  23f5a8:	bl	240790 <log_assert_failed_realm@plt>
  23f5ac:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23f5b0:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f5b4:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  23f5b8:	add	x1, x1, #0xb87
  23f5bc:	add	x2, x2, #0xd60
  23f5c0:	add	x4, x4, #0x39d
  23f5c4:	mov	w3, #0x32c                 	// #812
  23f5c8:	mov	w0, wzr
  23f5cc:	bl	240790 <log_assert_failed_realm@plt>

000000000023f5d0 <ALIGN_TO>:
  23f5d0:	add	x8, x0, x1
  23f5d4:	sub	x8, x8, #0x1
  23f5d8:	neg	x9, x1
  23f5dc:	and	x0, x8, x9
  23f5e0:	ret

000000000023f5e4 <config_parse_compat_user_tasks_max>:
  23f5e4:	sub	sp, sp, #0x50
  23f5e8:	stp	x29, x30, [sp, #16]
  23f5ec:	str	x23, [sp, #32]
  23f5f0:	stp	x22, x21, [sp, #48]
  23f5f4:	stp	x20, x19, [sp, #64]
  23f5f8:	add	x29, sp, #0x10
  23f5fc:	cbz	x1, 23f6bc <config_parse_compat_user_tasks_max+0xd8>
  23f600:	mov	x23, x5
  23f604:	cbz	x5, 23f6e0 <config_parse_compat_user_tasks_max+0xfc>
  23f608:	mov	x19, x7
  23f60c:	cbz	x7, 23f704 <config_parse_compat_user_tasks_max+0x120>
  23f610:	mov	x22, x0
  23f614:	mov	w0, wzr
  23f618:	mov	w20, w2
  23f61c:	mov	x21, x1
  23f620:	bl	240750 <log_get_max_level_realm@plt>
  23f624:	cmp	w0, #0x5
  23f628:	b.lt	23f664 <config_parse_compat_user_tasks_max+0x80>  // b.tstop
  23f62c:	adrp	x8, 212000 <inhibit_what_to_string.buffer+0x212000>
  23f630:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f634:	adrp	x7, 209000 <inhibit_what_to_string.buffer+0x209000>
  23f638:	add	x8, x8, #0x3e9
  23f63c:	add	x5, x5, #0xd60
  23f640:	add	x7, x7, #0xbe2
  23f644:	mov	w1, #0x5                   	// #5
  23f648:	mov	w6, #0x357                 	// #855
  23f64c:	mov	x0, x22
  23f650:	mov	x2, x21
  23f654:	mov	w3, w20
  23f658:	mov	w4, wzr
  23f65c:	stp	x8, x23, [sp]
  23f660:	bl	240ce0 <log_syntax_internal@plt>
  23f664:	mov	w0, wzr
  23f668:	bl	240750 <log_get_max_level_realm@plt>
  23f66c:	cmp	w0, #0x5
  23f670:	b.le	23f6a0 <config_parse_compat_user_tasks_max+0xbc>
  23f674:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f678:	adrp	x4, 209000 <inhibit_what_to_string.buffer+0x209000>
  23f67c:	adrp	x5, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23f680:	add	x2, x2, #0xd60
  23f684:	add	x4, x4, #0xbe2
  23f688:	add	x5, x5, #0x6
  23f68c:	mov	w0, #0x6                   	// #6
  23f690:	mov	w3, #0x35b                 	// #859
  23f694:	mov	w1, wzr
  23f698:	mov	x6, x19
  23f69c:	bl	240770 <log_internal_realm@plt>
  23f6a0:	ldp	x20, x19, [sp, #64]
  23f6a4:	ldp	x22, x21, [sp, #48]
  23f6a8:	ldr	x23, [sp, #32]
  23f6ac:	ldp	x29, x30, [sp, #16]
  23f6b0:	mov	w0, wzr
  23f6b4:	add	sp, sp, #0x50
  23f6b8:	ret
  23f6bc:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23f6c0:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f6c4:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23f6c8:	add	x1, x1, #0xb7e
  23f6cc:	add	x2, x2, #0xd60
  23f6d0:	add	x4, x4, #0x44
  23f6d4:	mov	w3, #0x351                 	// #849
  23f6d8:	mov	w0, wzr
  23f6dc:	bl	240790 <log_assert_failed_realm@plt>
  23f6e0:	adrp	x1, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23f6e4:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f6e8:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23f6ec:	add	x1, x1, #0x94a
  23f6f0:	add	x2, x2, #0xd60
  23f6f4:	add	x4, x4, #0x44
  23f6f8:	mov	w3, #0x352                 	// #850
  23f6fc:	mov	w0, wzr
  23f700:	bl	240790 <log_assert_failed_realm@plt>
  23f704:	adrp	x1, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f708:	adrp	x2, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f70c:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23f710:	add	x1, x1, #0x37a
  23f714:	add	x2, x2, #0xd60
  23f718:	add	x4, x4, #0x44
  23f71c:	mov	w3, #0x353                 	// #851
  23f720:	mov	w0, wzr
  23f724:	bl	240790 <log_assert_failed_realm@plt>

000000000023f728 <fclosep>:
  23f728:	stp	x29, x30, [sp, #-16]!
  23f72c:	ldr	x0, [x0]
  23f730:	mov	x29, sp
  23f734:	bl	2414a0 <safe_fclose@plt>
  23f738:	ldp	x29, x30, [sp], #16
  23f73c:	ret

000000000023f740 <yes_no>:
  23f740:	adrp	x8, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23f744:	adrp	x9, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f748:	add	x8, x8, #0x57d
  23f74c:	add	x9, x9, #0x5f9
  23f750:	tst	w0, #0x1
  23f754:	csel	x0, x9, x8, ne  // ne = any
  23f758:	ret

000000000023f75c <timestamp_is_set>:
  23f75c:	add	x8, x0, #0x1
  23f760:	cmp	x8, #0x1
  23f764:	cset	w0, hi  // hi = pmore
  23f768:	ret

000000000023f76c <logind_wall_tty_filter>:
  23f76c:	stp	x29, x30, [sp, #-32]!
  23f770:	str	x19, [sp, #16]
  23f774:	mov	x29, sp
  23f778:	cbz	x1, 23f7b8 <logind_wall_tty_filter+0x4c>
  23f77c:	ldr	x19, [x1, #312]
  23f780:	cbz	x19, 23f7a8 <logind_wall_tty_filter+0x3c>
  23f784:	adrp	x1, 20a000 <inhibit_what_to_string.buffer+0x20a000>
  23f788:	add	x1, x1, #0x696
  23f78c:	bl	240f00 <path_startswith@plt>
  23f790:	cbz	x0, 23f7a8 <logind_wall_tty_filter+0x3c>
  23f794:	mov	x1, x19
  23f798:	bl	240c30 <strcmp@plt>
  23f79c:	cmp	w0, #0x0
  23f7a0:	cset	w0, ne  // ne = any
  23f7a4:	b	23f7ac <logind_wall_tty_filter+0x40>
  23f7a8:	mov	w0, #0x1                   	// #1
  23f7ac:	ldr	x19, [sp, #16]
  23f7b0:	ldp	x29, x30, [sp], #32
  23f7b4:	ret
  23f7b8:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23f7bc:	adrp	x2, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23f7c0:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23f7c4:	add	x1, x1, #0x102
  23f7c8:	add	x2, x2, #0xb01
  23f7cc:	add	x4, x4, #0x52e
  23f7d0:	mov	w3, #0x30                  	// #48
  23f7d4:	mov	w0, wzr
  23f7d8:	bl	240790 <log_assert_failed_realm@plt>

000000000023f7dc <manager_setup_wall_message_timer>:
  23f7dc:	stp	x29, x30, [sp, #-48]!
  23f7e0:	str	x21, [sp, #16]
  23f7e4:	stp	x20, x19, [sp, #32]
  23f7e8:	mov	x29, sp
  23f7ec:	cbz	x0, 23f98c <manager_setup_wall_message_timer+0x1b0>
  23f7f0:	mov	x19, x0
  23f7f4:	mov	w0, wzr
  23f7f8:	bl	2407a0 <now@plt>
  23f7fc:	ldp	x8, x21, [x19, #280]
  23f800:	mov	x20, x0
  23f804:	mov	x0, x8
  23f808:	bl	23f9ac <isempty>
  23f80c:	tbz	w0, #0, 23f824 <manager_setup_wall_message_timer+0x48>
  23f810:	mov	x0, x19
  23f814:	mov	x1, x20
  23f818:	bl	23f9c8 <warn_wall>
  23f81c:	mov	w0, wzr
  23f820:	b	23f97c <manager_setup_wall_message_timer+0x1a0>
  23f824:	subs	x8, x21, x20
  23f828:	b.cs	23f834 <manager_setup_wall_message_timer+0x58>  // b.hs, b.nlast
  23f82c:	mov	w0, wzr
  23f830:	b	23f97c <manager_setup_wall_message_timer+0x1a0>
  23f834:	mov	w9, #0xe8ff                	// #59647
  23f838:	movk	w9, #0x35a4, lsl #16
  23f83c:	cmp	x8, x9
  23f840:	b.hi	23f854 <manager_setup_wall_message_timer+0x78>  // b.pmore
  23f844:	mov	x0, x19
  23f848:	mov	x1, x20
  23f84c:	bl	23f9c8 <warn_wall>
  23f850:	cbz	w0, 23f97c <manager_setup_wall_message_timer+0x1a0>
  23f854:	mov	x0, x20
  23f858:	mov	x1, x21
  23f85c:	bl	23fb2c <when_wall>
  23f860:	cbz	x0, 23f97c <manager_setup_wall_message_timer+0x1a0>
  23f864:	ldr	x8, [x19, #352]
  23f868:	add	x21, x19, #0x160
  23f86c:	cbz	x8, 23f8c8 <manager_setup_wall_message_timer+0xec>
  23f870:	add	x1, x0, x20
  23f874:	mov	x0, x8
  23f878:	bl	240b10 <sd_event_source_set_time@plt>
  23f87c:	tbnz	w0, #31, 23f930 <manager_setup_wall_message_timer+0x154>
  23f880:	ldr	x0, [x21]
  23f884:	mov	w1, #0xffffffff            	// #-1
  23f888:	bl	240b20 <sd_event_source_set_enabled@plt>
  23f88c:	tbz	w0, #31, 23f82c <manager_setup_wall_message_timer+0x50>
  23f890:	mov	w19, w0
  23f894:	mov	w0, wzr
  23f898:	bl	240750 <log_get_max_level_realm@plt>
  23f89c:	cmp	w0, #0x3
  23f8a0:	b.lt	23f970 <manager_setup_wall_message_timer+0x194>  // b.tstop
  23f8a4:	adrp	x2, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23f8a8:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23f8ac:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  23f8b0:	add	x2, x2, #0xb01
  23f8b4:	add	x4, x4, #0x301
  23f8b8:	add	x5, x5, #0x928
  23f8bc:	mov	w0, #0x3                   	// #3
  23f8c0:	mov	w3, #0xa0                  	// #160
  23f8c4:	b	23f964 <manager_setup_wall_message_timer+0x188>
  23f8c8:	ldr	x8, [x19]
  23f8cc:	adrp	x5, 23f000 <user_elect_display+0xf0>
  23f8d0:	add	x3, x0, x20
  23f8d4:	add	x5, x5, #0xbac
  23f8d8:	mov	x0, x8
  23f8dc:	mov	x1, x21
  23f8e0:	mov	w2, wzr
  23f8e4:	mov	x4, xzr
  23f8e8:	mov	x6, x19
  23f8ec:	bl	240b30 <sd_event_add_time@plt>
  23f8f0:	mov	w19, w0
  23f8f4:	mov	w0, wzr
  23f8f8:	tbz	w19, #31, 23f97c <manager_setup_wall_message_timer+0x1a0>
  23f8fc:	mov	w0, wzr
  23f900:	bl	240750 <log_get_max_level_realm@plt>
  23f904:	cmp	w0, #0x3
  23f908:	b.lt	23f970 <manager_setup_wall_message_timer+0x194>  // b.tstop
  23f90c:	adrp	x2, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23f910:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23f914:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23f918:	add	x2, x2, #0xb01
  23f91c:	add	x4, x4, #0x301
  23f920:	add	x5, x5, #0xfd6
  23f924:	mov	w0, #0x3                   	// #3
  23f928:	mov	w3, #0xa5                  	// #165
  23f92c:	b	23f964 <manager_setup_wall_message_timer+0x188>
  23f930:	mov	w19, w0
  23f934:	mov	w0, wzr
  23f938:	bl	240750 <log_get_max_level_realm@plt>
  23f93c:	cmp	w0, #0x3
  23f940:	b.lt	23f970 <manager_setup_wall_message_timer+0x194>  // b.tstop
  23f944:	adrp	x2, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23f948:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23f94c:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23f950:	add	x2, x2, #0xb01
  23f954:	add	x4, x4, #0x301
  23f958:	add	x5, x5, #0xfb0
  23f95c:	mov	w0, #0x3                   	// #3
  23f960:	mov	w3, #0x9c                  	// #156
  23f964:	mov	w1, w19
  23f968:	bl	240770 <log_internal_realm@plt>
  23f96c:	b	23f97c <manager_setup_wall_message_timer+0x1a0>
  23f970:	mov	w8, wzr
  23f974:	neg	w9, w19
  23f978:	sub	w0, w8, w9, uxtb
  23f97c:	ldp	x20, x19, [sp, #32]
  23f980:	ldr	x21, [sp, #16]
  23f984:	ldp	x29, x30, [sp], #48
  23f988:	ret
  23f98c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23f990:	adrp	x2, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23f994:	adrp	x4, 210000 <inhibit_what_to_string.buffer+0x210000>
  23f998:	add	x1, x1, #0x102
  23f99c:	add	x2, x2, #0xb01
  23f9a0:	add	x4, x4, #0x4ec
  23f9a4:	mov	w3, #0x7f                  	// #127
  23f9a8:	bl	240790 <log_assert_failed_realm@plt>

000000000023f9ac <isempty>:
  23f9ac:	cbz	x0, 23f9c0 <isempty+0x14>
  23f9b0:	ldrb	w8, [x0]
  23f9b4:	cmp	w8, #0x0
  23f9b8:	cset	w0, eq  // eq = none
  23f9bc:	ret
  23f9c0:	mov	w0, #0x1                   	// #1
  23f9c4:	ret

000000000023f9c8 <warn_wall>:
  23f9c8:	sub	sp, sp, #0x80
  23f9cc:	movi	v0.2d, #0x0
  23f9d0:	stp	x29, x30, [sp, #64]
  23f9d4:	stp	x24, x23, [sp, #80]
  23f9d8:	stp	x22, x21, [sp, #96]
  23f9dc:	stp	x20, x19, [sp, #112]
  23f9e0:	add	x29, sp, #0x40
  23f9e4:	stur	xzr, [sp, #46]
  23f9e8:	stp	xzr, xzr, [sp]
  23f9ec:	stp	q0, q0, [sp, #16]
  23f9f0:	cbz	x0, 23fb0c <warn_wall+0x144>
  23f9f4:	ldr	w8, [x0, #344]
  23f9f8:	mov	x19, x0
  23f9fc:	cbz	w8, 23fadc <warn_wall+0x114>
  23fa00:	ldr	x23, [x19, #336]
  23fa04:	ldr	x21, [x19, #288]
  23fa08:	mov	x22, x1
  23fa0c:	mov	x0, x23
  23fa10:	bl	23fd30 <strempty>
  23fa14:	mov	x20, x0
  23fa18:	mov	x0, x23
  23fa1c:	bl	23f9ac <isempty>
  23fa20:	adrp	x8, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23fa24:	adrp	x6, 210000 <inhibit_what_to_string.buffer+0x210000>
  23fa28:	add	x8, x8, #0x103
  23fa2c:	add	x6, x6, #0xb7e
  23fa30:	tst	w0, #0x1
  23fa34:	ldr	x23, [x19, #280]
  23fa38:	adrp	x9, 210000 <inhibit_what_to_string.buffer+0x210000>
  23fa3c:	csel	x24, x6, x8, ne  // ne = any
  23fa40:	adrp	x8, 212000 <inhibit_what_to_string.buffer+0x212000>
  23fa44:	add	x9, x9, #0x9c9
  23fa48:	add	x8, x8, #0x422
  23fa4c:	cmp	x21, x22
  23fa50:	csel	x22, x8, x9, hi  // hi = pmore
  23fa54:	b.ls	23fa6c <warn_wall+0xa4>  // b.plast
  23fa58:	add	x0, sp, #0x10
  23fa5c:	mov	w1, #0x26                  	// #38
  23fa60:	mov	x2, x21
  23fa64:	bl	241940 <format_timestamp@plt>
  23fa68:	mov	x6, x0
  23fa6c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23fa70:	add	x1, x1, #0xf4d
  23fa74:	add	x0, sp, #0x8
  23fa78:	mov	x2, x20
  23fa7c:	mov	x3, x24
  23fa80:	mov	x4, x23
  23fa84:	mov	x5, x22
  23fa88:	bl	240ae0 <asprintf@plt>
  23fa8c:	tbnz	w0, #31, 23fac0 <warn_wall+0xf8>
  23fa90:	ldr	w0, [x19, #304]
  23fa94:	bl	240cb0 <uid_to_name@plt>
  23fa98:	str	x0, [sp]
  23fa9c:	adrp	x3, 254000 <session_vtable+0x3d0>
  23faa0:	mov	x1, x0
  23faa4:	ldr	x0, [sp, #8]
  23faa8:	ldr	x2, [x19, #312]
  23faac:	ldr	x3, [x3, #3376]
  23fab0:	mov	x4, x19
  23fab4:	bl	241210 <utmp_wall@plt>
  23fab8:	mov	w19, #0x1                   	// #1
  23fabc:	b	23fae0 <warn_wall+0x118>
  23fac0:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23fac4:	adrp	x3, 207000 <inhibit_what_to_string.buffer+0x207000>
  23fac8:	add	x1, x1, #0xb01
  23facc:	add	x3, x3, #0x940
  23fad0:	mov	w2, #0x50                  	// #80
  23fad4:	mov	w0, wzr
  23fad8:	bl	240af0 <log_oom_internal@plt>
  23fadc:	mov	w19, wzr
  23fae0:	mov	x0, sp
  23fae4:	bl	23fd18 <freep>
  23fae8:	add	x0, sp, #0x8
  23faec:	bl	23fd18 <freep>
  23faf0:	mov	w0, w19
  23faf4:	ldp	x20, x19, [sp, #112]
  23faf8:	ldp	x22, x21, [sp, #96]
  23fafc:	ldp	x24, x23, [sp, #80]
  23fb00:	ldp	x29, x30, [sp, #64]
  23fb04:	add	sp, sp, #0x80
  23fb08:	ret
  23fb0c:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23fb10:	adrp	x2, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23fb14:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23fb18:	add	x1, x1, #0x102
  23fb1c:	add	x2, x2, #0xb01
  23fb20:	add	x4, x4, #0xe2
  23fb24:	mov	w3, #0x42                  	// #66
  23fb28:	bl	240790 <log_assert_failed_realm@plt>

000000000023fb2c <when_wall>:
  23fb2c:	subs	x8, x1, x0
  23fb30:	b.ls	23fb90 <when_wall+0x64>  // b.plast
  23fb34:	adrp	x10, 212000 <inhibit_what_to_string.buffer+0x212000>
  23fb38:	mov	w11, #0x8700                	// #34560
  23fb3c:	mov	x9, xzr
  23fb40:	add	x10, x10, #0x650
  23fb44:	movk	w11, #0x393, lsl #16
  23fb48:	add	x12, x10, x9
  23fb4c:	ldrsw	x12, [x12, #4]
  23fb50:	mul	x12, x12, x11
  23fb54:	cmp	x12, x8
  23fb58:	b.cs	23fb98 <when_wall+0x6c>  // b.hs, b.nlast
  23fb5c:	add	x9, x9, #0x4
  23fb60:	cmp	w9, #0x48
  23fb64:	b.ne	23fb48 <when_wall+0x1c>  // b.any
  23fb68:	mov	x9, #0x29c5                	// #10693
  23fb6c:	movk	x9, #0x3e5, lsl #16
  23fb70:	movk	x9, #0xbf2c, lsl #32
  23fb74:	movk	x9, #0x98b5, lsl #48
  23fb78:	umulh	x9, x8, x9
  23fb7c:	mov	w10, #0xa400                	// #41984
  23fb80:	lsr	x9, x9, #31
  23fb84:	movk	w10, #0xd693, lsl #16
  23fb88:	msub	x0, x9, x10, x8
  23fb8c:	ret
  23fb90:	mov	x0, xzr
  23fb94:	ret
  23fb98:	ldrsw	x9, [x10, x9]
  23fb9c:	mov	x10, #0xffffffffffff7900    	// #-34560
  23fba0:	movk	x10, #0xfc6c, lsl #16
  23fba4:	madd	x0, x9, x10, x8
  23fba8:	ret

000000000023fbac <wall_message_timeout_handler>:
  23fbac:	stp	x29, x30, [sp, #-48]!
  23fbb0:	str	x21, [sp, #16]
  23fbb4:	stp	x20, x19, [sp, #32]
  23fbb8:	mov	x29, sp
  23fbbc:	cbz	x2, 23fcd0 <wall_message_timeout_handler+0x124>
  23fbc0:	ldr	x8, [x2, #352]
  23fbc4:	mov	x20, x2
  23fbc8:	mov	x19, x0
  23fbcc:	cmp	x8, x0
  23fbd0:	b.ne	23fcf4 <wall_message_timeout_handler+0x148>  // b.any
  23fbd4:	mov	w0, wzr
  23fbd8:	bl	2407a0 <now@plt>
  23fbdc:	mov	x21, x0
  23fbe0:	mov	x0, x20
  23fbe4:	mov	x1, x21
  23fbe8:	bl	23f9c8 <warn_wall>
  23fbec:	cbz	w0, 23fcc0 <wall_message_timeout_handler+0x114>
  23fbf0:	ldr	x1, [x20, #288]
  23fbf4:	mov	x0, x21
  23fbf8:	bl	23fb2c <when_wall>
  23fbfc:	cbz	x0, 23fcc0 <wall_message_timeout_handler+0x114>
  23fc00:	add	x1, x0, x21
  23fc04:	mov	x0, x19
  23fc08:	bl	240b10 <sd_event_source_set_time@plt>
  23fc0c:	tbnz	w0, #31, 23fc28 <wall_message_timeout_handler+0x7c>
  23fc10:	mov	w1, #0xffffffff            	// #-1
  23fc14:	mov	x0, x19
  23fc18:	bl	240b20 <sd_event_source_set_enabled@plt>
  23fc1c:	tbnz	w0, #31, 23fc68 <wall_message_timeout_handler+0xbc>
  23fc20:	mov	w0, wzr
  23fc24:	b	23fcc0 <wall_message_timeout_handler+0x114>
  23fc28:	mov	w20, w0
  23fc2c:	mov	w0, wzr
  23fc30:	bl	240750 <log_get_max_level_realm@plt>
  23fc34:	cmp	w0, #0x3
  23fc38:	b.lt	23fca8 <wall_message_timeout_handler+0xfc>  // b.tstop
  23fc3c:	adrp	x2, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23fc40:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23fc44:	adrp	x5, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23fc48:	add	x2, x2, #0xb01
  23fc4c:	add	x4, x4, #0xcf
  23fc50:	add	x5, x5, #0xfb0
  23fc54:	mov	w0, #0x3                   	// #3
  23fc58:	mov	w3, #0x70                  	// #112
  23fc5c:	mov	w1, w20
  23fc60:	bl	240770 <log_internal_realm@plt>
  23fc64:	b	23fcc0 <wall_message_timeout_handler+0x114>
  23fc68:	mov	w19, w0
  23fc6c:	mov	w0, wzr
  23fc70:	bl	240750 <log_get_max_level_realm@plt>
  23fc74:	cmp	w0, #0x3
  23fc78:	b.lt	23fcb4 <wall_message_timeout_handler+0x108>  // b.tstop
  23fc7c:	adrp	x2, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23fc80:	adrp	x4, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23fc84:	adrp	x5, 208000 <inhibit_what_to_string.buffer+0x208000>
  23fc88:	add	x2, x2, #0xb01
  23fc8c:	add	x4, x4, #0xcf
  23fc90:	add	x5, x5, #0x928
  23fc94:	mov	w0, #0x3                   	// #3
  23fc98:	mov	w3, #0x74                  	// #116
  23fc9c:	mov	w1, w19
  23fca0:	bl	240770 <log_internal_realm@plt>
  23fca4:	b	23fcc0 <wall_message_timeout_handler+0x114>
  23fca8:	mov	w8, wzr
  23fcac:	neg	w9, w20
  23fcb0:	b	23fcbc <wall_message_timeout_handler+0x110>
  23fcb4:	mov	w8, wzr
  23fcb8:	neg	w9, w19
  23fcbc:	sub	w0, w8, w9, uxtb
  23fcc0:	ldp	x20, x19, [sp, #32]
  23fcc4:	ldr	x21, [sp, #16]
  23fcc8:	ldp	x29, x30, [sp], #48
  23fccc:	ret
  23fcd0:	adrp	x1, 20d000 <inhibit_what_to_string.buffer+0x20d000>
  23fcd4:	adrp	x2, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23fcd8:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23fcdc:	add	x1, x1, #0x102
  23fce0:	add	x2, x2, #0xb01
  23fce4:	add	x4, x4, #0xff5
  23fce8:	mov	w3, #0x63                  	// #99
  23fcec:	mov	w0, wzr
  23fcf0:	bl	240790 <log_assert_failed_realm@plt>
  23fcf4:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  23fcf8:	adrp	x2, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  23fcfc:	adrp	x4, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  23fd00:	add	x1, x1, #0x430
  23fd04:	add	x2, x2, #0xb01
  23fd08:	add	x4, x4, #0xff5
  23fd0c:	mov	w3, #0x64                  	// #100
  23fd10:	mov	w0, wzr
  23fd14:	bl	240790 <log_assert_failed_realm@plt>

000000000023fd18 <freep>:
  23fd18:	stp	x29, x30, [sp, #-16]!
  23fd1c:	ldr	x0, [x0]
  23fd20:	mov	x29, sp
  23fd24:	bl	240890 <free@plt>
  23fd28:	ldp	x29, x30, [sp], #16
  23fd2c:	ret

000000000023fd30 <strempty>:
  23fd30:	adrp	x8, 210000 <inhibit_what_to_string.buffer+0x210000>
  23fd34:	add	x8, x8, #0xb7e
  23fd38:	cmp	x0, #0x0
  23fd3c:	csel	x0, x8, x0, eq  // eq = none
  23fd40:	ret

000000000023fd44 <devnode_acl>:
  23fd44:	sub	sp, sp, #0x60
  23fd48:	stp	x29, x30, [sp, #32]
  23fd4c:	add	x29, sp, #0x20
  23fd50:	stp	x24, x23, [sp, #48]
  23fd54:	stp	x22, x21, [sp, #64]
  23fd58:	stp	x20, x19, [sp, #80]
  23fd5c:	stur	w5, [x29, #-4]
  23fd60:	cbz	x0, 23ff60 <devnode_acl+0x21c>
  23fd64:	mov	w20, w1
  23fd68:	mov	w1, #0x8000                	// #32768
  23fd6c:	mov	w21, w4
  23fd70:	mov	w22, w3
  23fd74:	mov	w23, w2
  23fd78:	mov	x19, x0
  23fd7c:	bl	241950 <acl_get_file@plt>
  23fd80:	str	x0, [sp, #16]
  23fd84:	cbz	x0, 23fda4 <devnode_acl+0x60>
  23fd88:	tbz	w20, #0, 23fdb4 <devnode_acl+0x70>
  23fd8c:	bl	23ff80 <flush_acl>
  23fd90:	mov	w20, w0
  23fd94:	tbnz	w0, #31, 23ff3c <devnode_acl+0x1f8>
  23fd98:	cmp	w20, #0x0
  23fd9c:	cset	w24, ne  // ne = any
  23fda0:	b	23fe30 <devnode_acl+0xec>
  23fda4:	bl	240930 <__errno_location@plt>
  23fda8:	ldr	w8, [x0]
  23fdac:	neg	w20, w8
  23fdb0:	b	23ff44 <devnode_acl+0x200>
  23fdb4:	mov	w24, wzr
  23fdb8:	mov	w20, wzr
  23fdbc:	cbz	w22, 23fe30 <devnode_acl+0xec>
  23fdc0:	tbz	w23, #0, 23fe30 <devnode_acl+0xec>
  23fdc4:	add	x2, sp, #0x8
  23fdc8:	mov	w1, w22
  23fdcc:	bl	241960 <acl_find_uid@plt>
  23fdd0:	mov	w20, w0
  23fdd4:	tbnz	w0, #31, 23fdf8 <devnode_acl+0xb4>
  23fdd8:	cbz	w20, 23fe08 <devnode_acl+0xc4>
  23fddc:	ldp	x1, x0, [sp, #8]
  23fde0:	bl	241970 <acl_delete_entry@plt>
  23fde4:	tbnz	w0, #31, 23fe18 <devnode_acl+0xd4>
  23fde8:	mov	w24, #0x1                   	// #1
  23fdec:	mov	w8, #0x1                   	// #1
  23fdf0:	cbnz	w8, 23fe30 <devnode_acl+0xec>
  23fdf4:	b	23ff3c <devnode_acl+0x1f8>
  23fdf8:	mov	w24, wzr
  23fdfc:	mov	w8, wzr
  23fe00:	cbnz	w8, 23fe30 <devnode_acl+0xec>
  23fe04:	b	23ff3c <devnode_acl+0x1f8>
  23fe08:	mov	w24, wzr
  23fe0c:	mov	w8, #0x1                   	// #1
  23fe10:	cbnz	w8, 23fe30 <devnode_acl+0xec>
  23fe14:	b	23ff3c <devnode_acl+0x1f8>
  23fe18:	bl	240930 <__errno_location@plt>
  23fe1c:	ldr	w9, [x0]
  23fe20:	mov	w24, wzr
  23fe24:	mov	w8, wzr
  23fe28:	neg	w20, w9
  23fe2c:	cbz	w8, 23ff3c <devnode_acl+0x1f8>
  23fe30:	ldur	w1, [x29, #-4]
  23fe34:	cbz	w1, 23ff04 <devnode_acl+0x1c0>
  23fe38:	tbz	w21, #0, 23ff04 <devnode_acl+0x1c0>
  23fe3c:	ldr	x0, [sp, #16]
  23fe40:	add	x2, sp, #0x8
  23fe44:	bl	241960 <acl_find_uid@plt>
  23fe48:	mov	w20, w0
  23fe4c:	tbnz	w0, #31, 23fe98 <devnode_acl+0x154>
  23fe50:	cbz	w20, 23fea0 <devnode_acl+0x15c>
  23fe54:	ldr	x0, [sp, #8]
  23fe58:	mov	x1, sp
  23fe5c:	bl	241980 <acl_get_permset@plt>
  23fe60:	tbnz	w0, #31, 23fef0 <devnode_acl+0x1ac>
  23fe64:	ldr	x0, [sp]
  23fe68:	mov	w1, #0x4                   	// #4
  23fe6c:	bl	241990 <acl_get_perm@plt>
  23fe70:	tbnz	w0, #31, 23fef0 <devnode_acl+0x1ac>
  23fe74:	mov	w21, w0
  23fe78:	ldr	x0, [sp]
  23fe7c:	mov	w1, #0x2                   	// #2
  23fe80:	bl	241990 <acl_get_perm@plt>
  23fe84:	tbnz	w0, #31, 23fef0 <devnode_acl+0x1ac>
  23fe88:	cbz	w21, 23fed4 <devnode_acl+0x190>
  23fe8c:	cbz	w0, 23fed4 <devnode_acl+0x190>
  23fe90:	mov	w8, #0x1                   	// #1
  23fe94:	b	23ff00 <devnode_acl+0x1bc>
  23fe98:	mov	w8, wzr
  23fe9c:	b	23ff00 <devnode_acl+0x1bc>
  23fea0:	add	x0, sp, #0x10
  23fea4:	add	x1, sp, #0x8
  23fea8:	bl	2419a0 <acl_create_entry@plt>
  23feac:	tbnz	w0, #31, 23fef0 <devnode_acl+0x1ac>
  23feb0:	ldr	x0, [sp, #8]
  23feb4:	mov	w1, #0x2                   	// #2
  23feb8:	bl	2419b0 <acl_set_tag_type@plt>
  23febc:	tbnz	w0, #31, 23fef0 <devnode_acl+0x1ac>
  23fec0:	ldr	x0, [sp, #8]
  23fec4:	sub	x1, x29, #0x4
  23fec8:	bl	2419c0 <acl_set_qualifier@plt>
  23fecc:	tbz	w0, #31, 23fe54 <devnode_acl+0x110>
  23fed0:	b	23fef0 <devnode_acl+0x1ac>
  23fed4:	ldr	x0, [sp]
  23fed8:	mov	w1, #0x6                   	// #6
  23fedc:	bl	2419d0 <acl_add_perm@plt>
  23fee0:	tbnz	w0, #31, 23fef0 <devnode_acl+0x1ac>
  23fee4:	mov	w24, #0x1                   	// #1
  23fee8:	mov	w8, #0x1                   	// #1
  23feec:	b	23ff00 <devnode_acl+0x1bc>
  23fef0:	bl	240930 <__errno_location@plt>
  23fef4:	ldr	w9, [x0]
  23fef8:	mov	w8, wzr
  23fefc:	neg	w20, w9
  23ff00:	cbz	w8, 23ff3c <devnode_acl+0x1f8>
  23ff04:	cbz	w24, 23ff3c <devnode_acl+0x1f8>
  23ff08:	add	x0, sp, #0x10
  23ff0c:	bl	2419e0 <acl_calc_mask@plt>
  23ff10:	tbnz	w0, #31, 23ff30 <devnode_acl+0x1ec>
  23ff14:	ldr	x2, [sp, #16]
  23ff18:	mov	w1, #0x8000                	// #32768
  23ff1c:	mov	x0, x19
  23ff20:	bl	2419f0 <acl_set_file@plt>
  23ff24:	tbnz	w0, #31, 23ff30 <devnode_acl+0x1ec>
  23ff28:	mov	w20, wzr
  23ff2c:	b	23ff3c <devnode_acl+0x1f8>
  23ff30:	bl	240930 <__errno_location@plt>
  23ff34:	ldr	w8, [x0]
  23ff38:	neg	w20, w8
  23ff3c:	ldr	x0, [sp, #16]
  23ff40:	bl	241a00 <acl_free@plt>
  23ff44:	mov	w0, w20
  23ff48:	ldp	x20, x19, [sp, #80]
  23ff4c:	ldp	x22, x21, [sp, #64]
  23ff50:	ldp	x24, x23, [sp, #48]
  23ff54:	ldp	x29, x30, [sp, #32]
  23ff58:	add	sp, sp, #0x60
  23ff5c:	ret
  23ff60:	adrp	x1, 211000 <inhibit_what_to_string.buffer+0x211000>
  23ff64:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  23ff68:	adrp	x4, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  23ff6c:	add	x1, x1, #0x92
  23ff70:	add	x2, x2, #0x3e
  23ff74:	add	x4, x4, #0xd87
  23ff78:	mov	w3, #0x3b                  	// #59
  23ff7c:	bl	240790 <log_assert_failed_realm@plt>

000000000023ff80 <flush_acl>:
  23ff80:	sub	sp, sp, #0x40
  23ff84:	stp	x29, x30, [sp, #16]
  23ff88:	str	x21, [sp, #32]
  23ff8c:	stp	x20, x19, [sp, #48]
  23ff90:	add	x29, sp, #0x10
  23ff94:	cbz	x0, 240074 <flush_acl+0xf4>
  23ff98:	add	x2, x29, #0x18
  23ff9c:	mov	w1, wzr
  23ffa0:	mov	x19, x0
  23ffa4:	bl	241a10 <acl_get_entry@plt>
  23ffa8:	cmp	w0, #0x1
  23ffac:	b.lt	240040 <flush_acl+0xc0>  // b.tstop
  23ffb0:	mov	w21, wzr
  23ffb4:	b	23ffd0 <flush_acl+0x50>
  23ffb8:	add	x2, x29, #0x18
  23ffbc:	mov	w1, #0x1                   	// #1
  23ffc0:	mov	x0, x19
  23ffc4:	bl	241a10 <acl_get_entry@plt>
  23ffc8:	cmp	w0, #0x0
  23ffcc:	b.le	240044 <flush_acl+0xc4>
  23ffd0:	ldr	x0, [x29, #24]
  23ffd4:	sub	x1, x29, #0x4
  23ffd8:	bl	241a20 <acl_get_tag_type@plt>
  23ffdc:	tbnz	w0, #31, 240010 <flush_acl+0x90>
  23ffe0:	ldur	w8, [x29, #-4]
  23ffe4:	cmp	w8, #0x2
  23ffe8:	b.ne	24002c <flush_acl+0xac>  // b.any
  23ffec:	ldr	x1, [x29, #24]
  23fff0:	mov	x0, x19
  23fff4:	bl	241970 <acl_delete_entry@plt>
  23fff8:	tbnz	w0, #31, 240010 <flush_acl+0x90>
  23fffc:	mov	w8, wzr
  240000:	mov	w21, #0x1                   	// #1
  240004:	cmp	w8, #0x6
  240008:	b.ne	240038 <flush_acl+0xb8>  // b.any
  24000c:	b	23ffb8 <flush_acl+0x38>
  240010:	bl	240930 <__errno_location@plt>
  240014:	ldr	w8, [x0]
  240018:	neg	w20, w8
  24001c:	mov	w8, #0x1                   	// #1
  240020:	cmp	w8, #0x6
  240024:	b.ne	240038 <flush_acl+0xb8>  // b.any
  240028:	b	23ffb8 <flush_acl+0x38>
  24002c:	mov	w8, #0x6                   	// #6
  240030:	cmp	w8, #0x6
  240034:	b.eq	23ffb8 <flush_acl+0x38>  // b.none
  240038:	cbz	w8, 23ffb8 <flush_acl+0x38>
  24003c:	b	24005c <flush_acl+0xdc>
  240040:	mov	w21, wzr
  240044:	tbnz	w0, #31, 240050 <flush_acl+0xd0>
  240048:	and	w20, w21, #0x1
  24004c:	b	24005c <flush_acl+0xdc>
  240050:	bl	240930 <__errno_location@plt>
  240054:	ldr	w8, [x0]
  240058:	neg	w20, w8
  24005c:	mov	w0, w20
  240060:	ldp	x20, x19, [sp, #48]
  240064:	ldr	x21, [sp, #32]
  240068:	ldp	x29, x30, [sp, #16]
  24006c:	add	sp, sp, #0x40
  240070:	ret
  240074:	adrp	x1, 20e000 <inhibit_what_to_string.buffer+0x20e000>
  240078:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  24007c:	adrp	x4, 211000 <inhibit_what_to_string.buffer+0x211000>
  240080:	add	x1, x1, #0x553
  240084:	add	x2, x2, #0x3e
  240088:	add	x4, x4, #0xec7
  24008c:	mov	w3, #0x18                  	// #24
  240090:	bl	240790 <log_assert_failed_realm@plt>

0000000000240094 <devnode_acl_all>:
  240094:	sub	sp, sp, #0xc0
  240098:	stp	x29, x30, [sp, #96]
  24009c:	add	x29, sp, #0x60
  2400a0:	stp	x28, x27, [sp, #112]
  2400a4:	stp	x26, x25, [sp, #128]
  2400a8:	stp	x24, x23, [sp, #144]
  2400ac:	stp	x22, x21, [sp, #160]
  2400b0:	stp	x20, x19, [sp, #176]
  2400b4:	str	w4, [sp, #36]
  2400b8:	mov	x24, x0
  2400bc:	stp	xzr, xzr, [x29, #-16]
  2400c0:	stur	xzr, [x29, #-24]
  2400c4:	adrp	x0, 254000 <session_vtable+0x3d0>
  2400c8:	ldr	x0, [x0, #3400]
  2400cc:	mov	w19, w5
  2400d0:	mov	w21, w3
  2400d4:	mov	w22, w2
  2400d8:	mov	w20, w1
  2400dc:	bl	241a30 <internal_set_new@plt>
  2400e0:	stur	x0, [x29, #-16]
  2400e4:	cbz	x0, 24023c <devnode_acl_all+0x1a8>
  2400e8:	mov	x23, x0
  2400ec:	sub	x0, x29, #0x8
  2400f0:	bl	240a30 <sd_device_enumerator_new@plt>
  2400f4:	tbnz	w0, #31, 240234 <devnode_acl_all+0x1a0>
  2400f8:	mov	x0, x24
  2400fc:	bl	240534 <isempty>
  240100:	ldur	x8, [x29, #-8]
  240104:	adrp	x28, 207000 <inhibit_what_to_string.buffer+0x207000>
  240108:	adrp	x1, 209000 <inhibit_what_to_string.buffer+0x209000>
  24010c:	add	x28, x28, #0xe02
  240110:	tst	w0, #0x1
  240114:	add	x1, x1, #0x566
  240118:	mov	x0, x8
  24011c:	csel	x24, x28, x24, ne  // ne = any
  240120:	bl	240a40 <sd_device_enumerator_add_match_tag@plt>
  240124:	tbnz	w0, #31, 240234 <devnode_acl_all+0x1a0>
  240128:	ldur	x0, [x29, #-8]
  24012c:	bl	240a50 <sd_device_enumerator_get_device_first@plt>
  240130:	cbz	x0, 24027c <devnode_acl_all+0x1e8>
  240134:	adrp	x27, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  240138:	mov	x26, x0
  24013c:	add	x27, x27, #0x2b6
  240140:	add	x2, sp, #0x30
  240144:	mov	x0, x26
  240148:	mov	x1, x27
  24014c:	bl	240de0 <sd_device_get_property_value@plt>
  240150:	tbnz	w0, #31, 240160 <devnode_acl_all+0xcc>
  240154:	ldr	x0, [sp, #48]
  240158:	bl	240534 <isempty>
  24015c:	tbz	w0, #0, 240164 <devnode_acl_all+0xd0>
  240160:	str	x28, [sp, #48]
  240164:	ldr	x1, [sp, #48]
  240168:	mov	x0, x24
  24016c:	bl	240c30 <strcmp@plt>
  240170:	cbz	w0, 24017c <devnode_acl_all+0xe8>
  240174:	mov	w8, #0x4                   	// #4
  240178:	b	240204 <devnode_acl_all+0x170>
  24017c:	sub	x1, x29, #0x28
  240180:	mov	x0, x26
  240184:	bl	241730 <sd_device_get_devname@plt>
  240188:	tbnz	w0, #31, 240174 <devnode_acl_all+0xe0>
  24018c:	mov	w0, wzr
  240190:	str	xzr, [sp, #40]
  240194:	bl	240750 <log_get_max_level_realm@plt>
  240198:	cmp	w0, #0x7
  24019c:	b.ge	240224 <devnode_acl_all+0x190>  // b.tcont
  2401a0:	ldr	x6, [sp, #40]
  2401a4:	ldur	x8, [x29, #-40]
  2401a8:	adrp	x9, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2401ac:	add	x9, x9, #0xbb5
  2401b0:	cmp	x6, #0x0
  2401b4:	stp	x8, x24, [sp, #16]
  2401b8:	adrp	x8, 208000 <inhibit_what_to_string.buffer+0x208000>
  2401bc:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2401c0:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2401c4:	csel	x5, xzr, x9, eq  // eq = none
  2401c8:	add	x8, x8, #0xe05
  2401cc:	mov	w0, #0x7                   	// #7
  2401d0:	mov	w3, #0xd0                  	// #208
  2401d4:	mov	w1, wzr
  2401d8:	add	x2, x2, #0x3e
  2401dc:	add	x4, x4, #0xa72
  2401e0:	mov	x7, xzr
  2401e4:	stp	xzr, x8, [sp]
  2401e8:	bl	240e00 <log_object_internal@plt>
  2401ec:	ldur	x1, [x29, #-40]
  2401f0:	mov	x0, x23
  2401f4:	bl	241a40 <set_put_strdup@plt>
  2401f8:	cmp	w0, #0x0
  2401fc:	lsr	w8, w0, #31
  240200:	csel	w25, w0, w25, lt  // lt = tstop
  240204:	orr	w8, w8, #0x4
  240208:	cmp	w8, #0x4
  24020c:	b.ne	240240 <devnode_acl_all+0x1ac>  // b.any
  240210:	ldur	x0, [x29, #-8]
  240214:	bl	240a60 <sd_device_enumerator_get_device_next@plt>
  240218:	mov	x26, x0
  24021c:	cbnz	x0, 240140 <devnode_acl_all+0xac>
  240220:	b	24027c <devnode_acl_all+0x1e8>
  240224:	add	x1, sp, #0x28
  240228:	mov	x0, x26
  24022c:	bl	240b70 <sd_device_get_sysname@plt>
  240230:	b	2401a0 <devnode_acl_all+0x10c>
  240234:	mov	w25, w0
  240238:	b	240240 <devnode_acl_all+0x1ac>
  24023c:	mov	w25, #0xfffffff4            	// #-12
  240240:	sub	x0, x29, #0x18
  240244:	bl	240518 <closedirp>
  240248:	sub	x0, x29, #0x10
  24024c:	bl	2404fc <set_free_freep>
  240250:	sub	x0, x29, #0x8
  240254:	bl	2404e0 <sd_device_enumerator_unrefp>
  240258:	mov	w0, w25
  24025c:	ldp	x20, x19, [sp, #176]
  240260:	ldp	x22, x21, [sp, #160]
  240264:	ldp	x24, x23, [sp, #144]
  240268:	ldp	x26, x25, [sp, #128]
  24026c:	ldp	x28, x27, [sp, #112]
  240270:	ldp	x29, x30, [sp, #96]
  240274:	add	sp, sp, #0xc0
  240278:	ret
  24027c:	adrp	x0, 212000 <inhibit_what_to_string.buffer+0x212000>
  240280:	add	x0, x0, #0x426
  240284:	bl	240a70 <opendir@plt>
  240288:	stur	x0, [x29, #-24]
  24028c:	cbz	x0, 2403b0 <devnode_acl_all+0x31c>
  240290:	mov	x27, x0
  240294:	str	w20, [sp, #32]
  240298:	bl	240930 <__errno_location@plt>
  24029c:	mov	x28, x0
  2402a0:	str	wzr, [x0]
  2402a4:	b	2402ac <devnode_acl_all+0x218>
  2402a8:	str	wzr, [x28]
  2402ac:	mov	x0, x27
  2402b0:	bl	240a80 <readdir64@plt>
  2402b4:	cbz	x0, 240398 <devnode_acl_all+0x304>
  2402b8:	add	x26, x0, #0x13
  2402bc:	mov	x0, x26
  2402c0:	bl	240a90 <hidden_or_backup_file@plt>
  2402c4:	tbnz	w0, #0, 2402a8 <devnode_acl_all+0x214>
  2402c8:	sub	x2, x29, #0x28
  2402cc:	mov	w1, #0x1                   	// #1
  2402d0:	mov	x0, x26
  2402d4:	stur	xzr, [x29, #-40]
  2402d8:	mov	w20, #0x1                   	// #1
  2402dc:	bl	241500 <cunescape@plt>
  2402e0:	tbnz	w0, #31, 240360 <devnode_acl_all+0x2cc>
  2402e4:	ldur	x1, [x29, #-40]
  2402e8:	adrp	x0, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2402ec:	mov	x2, #0xffffffffffffffff    	// #-1
  2402f0:	add	x0, x0, #0x9d1
  2402f4:	bl	2413d0 <path_join_internal@plt>
  2402f8:	str	x0, [sp, #48]
  2402fc:	cbz	x0, 240368 <devnode_acl_all+0x2d4>
  240300:	mov	x26, x0
  240304:	mov	w0, wzr
  240308:	bl	240750 <log_get_max_level_realm@plt>
  24030c:	cmp	w0, #0x7
  240310:	b.lt	240344 <devnode_acl_all+0x2b0>  // b.tstop
  240314:	adrp	x2, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  240318:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  24031c:	adrp	x5, 210000 <inhibit_what_to_string.buffer+0x210000>
  240320:	mov	w0, #0x7                   	// #7
  240324:	mov	w3, #0xe4                  	// #228
  240328:	mov	w1, wzr
  24032c:	add	x2, x2, #0x3e
  240330:	add	x4, x4, #0xa72
  240334:	add	x5, x5, #0xefb
  240338:	mov	x6, x26
  24033c:	mov	x7, x24
  240340:	bl	240770 <log_internal_realm@plt>
  240344:	ldr	x1, [sp, #48]
  240348:	mov	x0, x23
  24034c:	bl	241a50 <set_consume@plt>
  240350:	cmn	w0, #0x11
  240354:	b.ne	240374 <devnode_acl_all+0x2e0>  // b.any
  240358:	mov	w20, #0x7                   	// #7
  24035c:	b	240380 <devnode_acl_all+0x2ec>
  240360:	mov	w25, #0xfffffff4            	// #-12
  240364:	b	240380 <devnode_acl_all+0x2ec>
  240368:	mov	w25, #0xfffffff4            	// #-12
  24036c:	mov	w20, #0x1                   	// #1
  240370:	b	240380 <devnode_acl_all+0x2ec>
  240374:	cmp	w0, #0x0
  240378:	lsr	w20, w0, #31
  24037c:	csel	w25, w0, w25, lt  // lt = tstop
  240380:	sub	x0, x29, #0x28
  240384:	bl	240550 <freep>
  240388:	cmp	w20, #0x7
  24038c:	b.eq	2402a8 <devnode_acl_all+0x214>  // b.none
  240390:	cbz	w20, 2402a8 <devnode_acl_all+0x214>
  240394:	b	240240 <devnode_acl_all+0x1ac>
  240398:	ldr	w8, [x28]
  24039c:	ldr	w20, [sp, #32]
  2403a0:	cmp	w8, #0x1
  2403a4:	b.lt	2403b0 <devnode_acl_all+0x31c>  // b.tstop
  2403a8:	neg	w25, w8
  2403ac:	b	240240 <devnode_acl_all+0x1ac>
  2403b0:	mov	w8, #0xfffffffe            	// #-2
  2403b4:	sub	x1, x29, #0x28
  2403b8:	add	x2, sp, #0x30
  2403bc:	mov	x0, x23
  2403c0:	stur	w8, [x29, #-40]
  2403c4:	stur	xzr, [x29, #-32]
  2403c8:	bl	241a60 <set_iterate@plt>
  2403cc:	mov	w25, wzr
  2403d0:	tbz	w0, #0, 240240 <devnode_acl_all+0x1ac>
  2403d4:	adrp	x8, 210000 <inhibit_what_to_string.buffer+0x210000>
  2403d8:	adrp	x9, 210000 <inhibit_what_to_string.buffer+0x210000>
  2403dc:	add	x8, x8, #0xb7e
  2403e0:	add	x9, x9, #0x9cd
  2403e4:	tst	w22, #0x1
  2403e8:	csel	x27, x9, x8, ne  // ne = any
  2403ec:	ldr	w9, [sp, #36]
  2403f0:	adrp	x10, 20b000 <inhibit_what_to_string.buffer+0x20b000>
  2403f4:	adrp	x11, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2403f8:	add	x10, x10, #0x88f
  2403fc:	add	x11, x11, #0x3e
  240400:	tst	w9, #0x1
  240404:	and	w26, w20, #0x1
  240408:	mov	x20, x11
  24040c:	csel	x28, x10, x8, ne  // ne = any
  240410:	b	240434 <devnode_acl_all+0x3a0>
  240414:	cmp	w0, #0x0
  240418:	ccmp	w25, #0x0, #0x0, lt  // lt = tstop
  24041c:	csel	w25, w0, w25, eq  // eq = none
  240420:	sub	x1, x29, #0x28
  240424:	add	x2, sp, #0x30
  240428:	mov	x0, x23
  24042c:	bl	241a60 <set_iterate@plt>
  240430:	tbz	w0, #0, 240240 <devnode_acl_all+0x1ac>
  240434:	mov	w0, wzr
  240438:	bl	240750 <log_get_max_level_realm@plt>
  24043c:	cmp	w0, #0x7
  240440:	b.lt	24047c <devnode_acl_all+0x3e8>  // b.tstop
  240444:	ldr	x6, [sp, #48]
  240448:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  24044c:	adrp	x5, 20f000 <inhibit_what_to_string.buffer+0x20f000>
  240450:	mov	w0, #0x7                   	// #7
  240454:	mov	w3, #0xf3                  	// #243
  240458:	mov	w1, wzr
  24045c:	mov	x2, x20
  240460:	add	x4, x4, #0xa72
  240464:	add	x5, x5, #0x105
  240468:	mov	x7, x24
  24046c:	stp	x27, x28, [sp, #16]
  240470:	str	w19, [sp, #8]
  240474:	str	w21, [sp]
  240478:	bl	240770 <log_internal_realm@plt>
  24047c:	ldr	w8, [sp, #36]
  240480:	ldr	x0, [sp, #48]
  240484:	and	w2, w22, #0x1
  240488:	mov	w1, w26
  24048c:	and	w4, w8, #0x1
  240490:	mov	w3, w21
  240494:	mov	w5, w19
  240498:	bl	23fd44 <devnode_acl>
  24049c:	cmn	w0, #0x2
  2404a0:	b.ne	240414 <devnode_acl_all+0x380>  // b.any
  2404a4:	mov	w0, wzr
  2404a8:	bl	240750 <log_get_max_level_realm@plt>
  2404ac:	cmp	w0, #0x7
  2404b0:	b.lt	240420 <devnode_acl_all+0x38c>  // b.tstop
  2404b4:	ldr	x6, [sp, #48]
  2404b8:	adrp	x4, 20c000 <inhibit_what_to_string.buffer+0x20c000>
  2404bc:	adrp	x5, 207000 <inhibit_what_to_string.buffer+0x207000>
  2404c0:	mov	w0, #0x7                   	// #7
  2404c4:	mov	w3, #0xf7                  	// #247
  2404c8:	mov	w1, wzr
  2404cc:	mov	x2, x20
  2404d0:	add	x4, x4, #0xa72
  2404d4:	add	x5, x5, #0x2a2
  2404d8:	bl	240770 <log_internal_realm@plt>
  2404dc:	b	240420 <devnode_acl_all+0x38c>

00000000002404e0 <sd_device_enumerator_unrefp>:
  2404e0:	stp	x29, x30, [sp, #-16]!
  2404e4:	ldr	x0, [x0]
  2404e8:	mov	x29, sp
  2404ec:	cbz	x0, 2404f4 <sd_device_enumerator_unrefp+0x14>
  2404f0:	bl	240ba0 <sd_device_enumerator_unref@plt>
  2404f4:	ldp	x29, x30, [sp], #16
  2404f8:	ret

00000000002404fc <set_free_freep>:
  2404fc:	stp	x29, x30, [sp, #-16]!
  240500:	ldr	x0, [x0]
  240504:	mov	x29, sp
  240508:	cbz	x0, 240510 <set_free_freep+0x14>
  24050c:	bl	240568 <set_free_free>
  240510:	ldp	x29, x30, [sp], #16
  240514:	ret

0000000000240518 <closedirp>:
  240518:	stp	x29, x30, [sp, #-16]!
  24051c:	ldr	x0, [x0]
  240520:	mov	x29, sp
  240524:	cbz	x0, 24052c <closedirp+0x14>
  240528:	bl	240bb0 <closedir@plt>
  24052c:	ldp	x29, x30, [sp], #16
  240530:	ret

0000000000240534 <isempty>:
  240534:	cbz	x0, 240548 <isempty+0x14>
  240538:	ldrb	w8, [x0]
  24053c:	cmp	w8, #0x0
  240540:	cset	w0, eq  // eq = none
  240544:	ret
  240548:	mov	w0, #0x1                   	// #1
  24054c:	ret

0000000000240550 <freep>:
  240550:	stp	x29, x30, [sp, #-16]!
  240554:	ldr	x0, [x0]
  240558:	mov	x29, sp
  24055c:	bl	240890 <free@plt>
  240560:	ldp	x29, x30, [sp], #16
  240564:	ret

0000000000240568 <set_free_free>:
  240568:	stp	x29, x30, [sp, #-16]!
  24056c:	adrp	x1, 254000 <session_vtable+0x3d0>
  240570:	ldr	x1, [x1, #3408]
  240574:	mov	x2, xzr
  240578:	mov	x29, sp
  24057c:	bl	2408b0 <internal_hashmap_free@plt>
  240580:	ldp	x29, x30, [sp], #16
  240584:	ret

0000000000240588 <__libc_csu_init>:
  240588:	stp	x29, x30, [sp, #-64]!
  24058c:	mov	x29, sp
  240590:	stp	x19, x20, [sp, #16]
  240594:	adrp	x20, 251000 <__lxstat64@plt+0xf580>
  240598:	add	x20, x20, #0xaa0
  24059c:	stp	x21, x22, [sp, #32]
  2405a0:	adrp	x21, 251000 <__lxstat64@plt+0xf580>
  2405a4:	add	x21, x21, #0xa98
  2405a8:	sub	x20, x20, x21
  2405ac:	mov	w22, w0
  2405b0:	stp	x23, x24, [sp, #48]
  2405b4:	mov	x23, x1
  2405b8:	mov	x24, x2
  2405bc:	bl	240630 <_init>
  2405c0:	cmp	xzr, x20, asr #3
  2405c4:	b.eq	2405f0 <__libc_csu_init+0x68>  // b.none
  2405c8:	asr	x20, x20, #3
  2405cc:	mov	x19, #0x0                   	// #0
  2405d0:	ldr	x3, [x21, x19, lsl #3]
  2405d4:	mov	x2, x24
  2405d8:	add	x19, x19, #0x1
  2405dc:	mov	x1, x23
  2405e0:	mov	w0, w22
  2405e4:	blr	x3
  2405e8:	cmp	x20, x19
  2405ec:	b.ne	2405d0 <__libc_csu_init+0x48>  // b.any
  2405f0:	ldp	x19, x20, [sp, #16]
  2405f4:	ldp	x21, x22, [sp, #32]
  2405f8:	ldp	x23, x24, [sp, #48]
  2405fc:	ldp	x29, x30, [sp], #64
  240600:	ret
  240604:	nop

0000000000240608 <__libc_csu_fini>:
  240608:	ret
  24060c:	udf	#0

0000000000240610 <fstat64>:
  240610:	mov	x2, x1
  240614:	mov	w1, w0
  240618:	mov	w0, #0x0                   	// #0
  24061c:	b	241a70 <__fxstat64@plt>

0000000000240620 <lstat64>:
  240620:	mov	x2, x1
  240624:	mov	x1, x0
  240628:	mov	w0, #0x0                   	// #0
  24062c:	b	241a80 <__lxstat64@plt>

Disassembly of section .init:

0000000000240630 <_init>:
  240630:	stp	x29, x30, [sp, #-16]!
  240634:	mov	x29, sp
  240638:	bl	222860 <call_weak_fn>
  24063c:	ldp	x29, x30, [sp], #16
  240640:	ret

Disassembly of section .fini:

0000000000240644 <_fini>:
  240644:	stp	x29, x30, [sp, #-16]!
  240648:	mov	x29, sp
  24064c:	ldp	x29, x30, [sp], #16
  240650:	ret

Disassembly of section .plt:

0000000000240660 <__libc_start_main@plt-0x20>:
  240660:	stp	x16, x30, [sp, #-16]!
  240664:	adrp	x16, 254000 <session_vtable+0x3d0>
  240668:	ldr	x17, [x16, #3432]
  24066c:	add	x16, x16, #0xd68
  240670:	br	x17
  240674:	nop
  240678:	nop
  24067c:	nop

0000000000240680 <__libc_start_main@plt>:
  240680:	adrp	x16, 254000 <session_vtable+0x3d0>
  240684:	ldr	x17, [x16, #3440]
  240688:	add	x16, x16, #0xd70
  24068c:	br	x17

0000000000240690 <abort@plt>:
  240690:	adrp	x16, 254000 <session_vtable+0x3d0>
  240694:	ldr	x17, [x16, #3448]
  240698:	add	x16, x16, #0xd78
  24069c:	br	x17

00000000002406a0 <__gmon_start__@plt>:
  2406a0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2406a4:	ldr	x17, [x16, #3456]
  2406a8:	add	x16, x16, #0xd80
  2406ac:	br	x17

00000000002406b0 <ask_password_agent_close@plt>:
  2406b0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2406b4:	ldr	x17, [x16, #3464]
  2406b8:	add	x16, x16, #0xd88
  2406bc:	br	x17

00000000002406c0 <polkit_agent_close@plt>:
  2406c0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2406c4:	ldr	x17, [x16, #3472]
  2406c8:	add	x16, x16, #0xd90
  2406cc:	br	x17

00000000002406d0 <pager_close@plt>:
  2406d0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2406d4:	ldr	x17, [x16, #3480]
  2406d8:	add	x16, x16, #0xd98
  2406dc:	br	x17

00000000002406e0 <mac_selinux_finish@plt>:
  2406e0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2406e4:	ldr	x17, [x16, #3488]
  2406e8:	add	x16, x16, #0xda0
  2406ec:	br	x17

00000000002406f0 <log_set_facility@plt>:
  2406f0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2406f4:	ldr	x17, [x16, #3496]
  2406f8:	add	x16, x16, #0xda8
  2406fc:	br	x17

0000000000240700 <log_setup_service@plt>:
  240700:	adrp	x16, 254000 <session_vtable+0x3d0>
  240704:	ldr	x17, [x16, #3504]
  240708:	add	x16, x16, #0xdb0
  24070c:	br	x17

0000000000240710 <umask@plt>:
  240710:	adrp	x16, 254000 <session_vtable+0x3d0>
  240714:	ldr	x17, [x16, #3512]
  240718:	add	x16, x16, #0xdb8
  24071c:	br	x17

0000000000240720 <mac_selinux_init@plt>:
  240720:	adrp	x16, 254000 <session_vtable+0x3d0>
  240724:	ldr	x17, [x16, #3520]
  240728:	add	x16, x16, #0xdc0
  24072c:	br	x17

0000000000240730 <mkdir_label@plt>:
  240730:	adrp	x16, 254000 <session_vtable+0x3d0>
  240734:	ldr	x17, [x16, #3528]
  240738:	add	x16, x16, #0xdc8
  24073c:	br	x17

0000000000240740 <sigprocmask_many@plt>:
  240740:	adrp	x16, 254000 <session_vtable+0x3d0>
  240744:	ldr	x17, [x16, #3536]
  240748:	add	x16, x16, #0xdd0
  24074c:	br	x17

0000000000240750 <log_get_max_level_realm@plt>:
  240750:	adrp	x16, 254000 <session_vtable+0x3d0>
  240754:	ldr	x17, [x16, #3544]
  240758:	add	x16, x16, #0xdd8
  24075c:	br	x17

0000000000240760 <getpid_cached@plt>:
  240760:	adrp	x16, 254000 <session_vtable+0x3d0>
  240764:	ldr	x17, [x16, #3552]
  240768:	add	x16, x16, #0xde0
  24076c:	br	x17

0000000000240770 <log_internal_realm@plt>:
  240770:	adrp	x16, 254000 <session_vtable+0x3d0>
  240774:	ldr	x17, [x16, #3560]
  240778:	add	x16, x16, #0xde8
  24077c:	br	x17

0000000000240780 <sd_notify@plt>:
  240780:	adrp	x16, 254000 <session_vtable+0x3d0>
  240784:	ldr	x17, [x16, #3568]
  240788:	add	x16, x16, #0xdf0
  24078c:	br	x17

0000000000240790 <log_assert_failed_realm@plt>:
  240790:	adrp	x16, 254000 <session_vtable+0x3d0>
  240794:	ldr	x17, [x16, #3576]
  240798:	add	x16, x16, #0xdf8
  24079c:	br	x17

00000000002407a0 <now@plt>:
  2407a0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2407a4:	ldr	x17, [x16, #3584]
  2407a8:	add	x16, x16, #0xe00
  2407ac:	br	x17

00000000002407b0 <internal_hashmap_new@plt>:
  2407b0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2407b4:	ldr	x17, [x16, #3592]
  2407b8:	add	x16, x16, #0xe08
  2407bc:	br	x17

00000000002407c0 <sd_event_default@plt>:
  2407c0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2407c4:	ldr	x17, [x16, #3600]
  2407c8:	add	x16, x16, #0xe10
  2407cc:	br	x17

00000000002407d0 <sd_event_add_signal@plt>:
  2407d0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2407d4:	ldr	x17, [x16, #3608]
  2407d8:	add	x16, x16, #0xe18
  2407dc:	br	x17

00000000002407e0 <sd_event_set_watchdog@plt>:
  2407e0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2407e4:	ldr	x17, [x16, #3616]
  2407e8:	add	x16, x16, #0xe20
  2407ec:	br	x17

00000000002407f0 <sd_event_get_state@plt>:
  2407f0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2407f4:	ldr	x17, [x16, #3624]
  2407f8:	add	x16, x16, #0xe28
  2407fc:	br	x17

0000000000240800 <sd_event_run@plt>:
  240800:	adrp	x16, 254000 <session_vtable+0x3d0>
  240804:	ldr	x17, [x16, #3632]
  240808:	add	x16, x16, #0xe30
  24080c:	br	x17

0000000000240810 <sd_event_source_unref@plt>:
  240810:	adrp	x16, 254000 <session_vtable+0x3d0>
  240814:	ldr	x17, [x16, #3640]
  240818:	add	x16, x16, #0xe38
  24081c:	br	x17

0000000000240820 <safe_close@plt>:
  240820:	adrp	x16, 254000 <session_vtable+0x3d0>
  240824:	ldr	x17, [x16, #3648]
  240828:	add	x16, x16, #0xe40
  24082c:	br	x17

0000000000240830 <sd_device_monitor_unref@plt>:
  240830:	adrp	x16, 254000 <session_vtable+0x3d0>
  240834:	ldr	x17, [x16, #3656]
  240838:	add	x16, x16, #0xe48
  24083c:	br	x17

0000000000240840 <unlink_or_warn@plt>:
  240840:	adrp	x16, 254000 <session_vtable+0x3d0>
  240844:	ldr	x17, [x16, #3664]
  240848:	add	x16, x16, #0xe50
  24084c:	br	x17

0000000000240850 <bus_verify_polkit_async_registry_free@plt>:
  240850:	adrp	x16, 254000 <session_vtable+0x3d0>
  240854:	ldr	x17, [x16, #3672]
  240858:	add	x16, x16, #0xe58
  24085c:	br	x17

0000000000240860 <sd_bus_flush_close_unref@plt>:
  240860:	adrp	x16, 254000 <session_vtable+0x3d0>
  240864:	ldr	x17, [x16, #3680]
  240868:	add	x16, x16, #0xe60
  24086c:	br	x17

0000000000240870 <sd_event_unref@plt>:
  240870:	adrp	x16, 254000 <session_vtable+0x3d0>
  240874:	ldr	x17, [x16, #3688]
  240878:	add	x16, x16, #0xe68
  24087c:	br	x17

0000000000240880 <strv_free@plt>:
  240880:	adrp	x16, 254000 <session_vtable+0x3d0>
  240884:	ldr	x17, [x16, #3696]
  240888:	add	x16, x16, #0xe70
  24088c:	br	x17

0000000000240890 <free@plt>:
  240890:	adrp	x16, 254000 <session_vtable+0x3d0>
  240894:	ldr	x17, [x16, #3704]
  240898:	add	x16, x16, #0xe78
  24089c:	br	x17

00000000002408a0 <internal_hashmap_first_key_and_value@plt>:
  2408a0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2408a4:	ldr	x17, [x16, #3712]
  2408a8:	add	x16, x16, #0xe80
  2408ac:	br	x17

00000000002408b0 <internal_hashmap_free@plt>:
  2408b0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2408b4:	ldr	x17, [x16, #3720]
  2408b8:	add	x16, x16, #0xe88
  2408bc:	br	x17

00000000002408c0 <malloc@plt>:
  2408c0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2408c4:	ldr	x17, [x16, #3728]
  2408c8:	add	x16, x16, #0xe90
  2408cc:	br	x17

00000000002408d0 <access@plt>:
  2408d0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2408d4:	ldr	x17, [x16, #3736]
  2408d8:	add	x16, x16, #0xe98
  2408dc:	br	x17

00000000002408e0 <open64@plt>:
  2408e0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2408e4:	ldr	x17, [x16, #3744]
  2408e8:	add	x16, x16, #0xea0
  2408ec:	br	x17

00000000002408f0 <sd_event_add_io@plt>:
  2408f0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2408f4:	ldr	x17, [x16, #3752]
  2408f8:	add	x16, x16, #0xea8
  2408fc:	br	x17

0000000000240900 <__libc_current_sigrtmin@plt>:
  240900:	adrp	x16, 254000 <session_vtable+0x3d0>
  240904:	ldr	x17, [x16, #3760]
  240908:	add	x16, x16, #0xeb0
  24090c:	br	x17

0000000000240910 <__libc_current_sigrtmax@plt>:
  240910:	adrp	x16, 254000 <session_vtable+0x3d0>
  240914:	ldr	x17, [x16, #3768]
  240918:	add	x16, x16, #0xeb8
  24091c:	br	x17

0000000000240920 <ignore_signals@plt>:
  240920:	adrp	x16, 254000 <session_vtable+0x3d0>
  240924:	ldr	x17, [x16, #3776]
  240928:	add	x16, x16, #0xec0
  24092c:	br	x17

0000000000240930 <__errno_location@plt>:
  240930:	adrp	x16, 254000 <session_vtable+0x3d0>
  240934:	ldr	x17, [x16, #3784]
  240938:	add	x16, x16, #0xec8
  24093c:	br	x17

0000000000240940 <sd_device_monitor_new@plt>:
  240940:	adrp	x16, 254000 <session_vtable+0x3d0>
  240944:	ldr	x17, [x16, #3792]
  240948:	add	x16, x16, #0xed0
  24094c:	br	x17

0000000000240950 <sd_device_monitor_filter_add_match_tag@plt>:
  240950:	adrp	x16, 254000 <session_vtable+0x3d0>
  240954:	ldr	x17, [x16, #3800]
  240958:	add	x16, x16, #0xed8
  24095c:	br	x17

0000000000240960 <sd_device_monitor_attach_event@plt>:
  240960:	adrp	x16, 254000 <session_vtable+0x3d0>
  240964:	ldr	x17, [x16, #3808]
  240968:	add	x16, x16, #0xee0
  24096c:	br	x17

0000000000240970 <sd_device_monitor_start@plt>:
  240970:	adrp	x16, 254000 <session_vtable+0x3d0>
  240974:	ldr	x17, [x16, #3816]
  240978:	add	x16, x16, #0xee8
  24097c:	br	x17

0000000000240980 <sd_device_monitor_get_event_source@plt>:
  240980:	adrp	x16, 254000 <session_vtable+0x3d0>
  240984:	ldr	x17, [x16, #3824]
  240988:	add	x16, x16, #0xef0
  24098c:	br	x17

0000000000240990 <sd_event_source_set_description@plt>:
  240990:	adrp	x16, 254000 <session_vtable+0x3d0>
  240994:	ldr	x17, [x16, #3832]
  240998:	add	x16, x16, #0xef8
  24099c:	br	x17

00000000002409a0 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>:
  2409a0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2409a4:	ldr	x17, [x16, #3840]
  2409a8:	add	x16, x16, #0xf00
  2409ac:	br	x17

00000000002409b0 <sd_bus_default_system@plt>:
  2409b0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2409b4:	ldr	x17, [x16, #3848]
  2409b8:	add	x16, x16, #0xf08
  2409bc:	br	x17

00000000002409c0 <sd_bus_add_object_vtable@plt>:
  2409c0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2409c4:	ldr	x17, [x16, #3856]
  2409c8:	add	x16, x16, #0xf10
  2409cc:	br	x17

00000000002409d0 <sd_bus_add_fallback_vtable@plt>:
  2409d0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2409d4:	ldr	x17, [x16, #3864]
  2409d8:	add	x16, x16, #0xf18
  2409dc:	br	x17

00000000002409e0 <sd_bus_add_node_enumerator@plt>:
  2409e0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2409e4:	ldr	x17, [x16, #3872]
  2409e8:	add	x16, x16, #0xf20
  2409ec:	br	x17

00000000002409f0 <sd_bus_match_signal_async@plt>:
  2409f0:	adrp	x16, 254000 <session_vtable+0x3d0>
  2409f4:	ldr	x17, [x16, #3880]
  2409f8:	add	x16, x16, #0xf28
  2409fc:	br	x17

0000000000240a00 <sd_bus_call_method_async@plt>:
  240a00:	adrp	x16, 254000 <session_vtable+0x3d0>
  240a04:	ldr	x17, [x16, #3888]
  240a08:	add	x16, x16, #0xf30
  240a0c:	br	x17

0000000000240a10 <sd_bus_request_name_async@plt>:
  240a10:	adrp	x16, 254000 <session_vtable+0x3d0>
  240a14:	ldr	x17, [x16, #3896]
  240a18:	add	x16, x16, #0xf38
  240a1c:	br	x17

0000000000240a20 <sd_bus_attach_event@plt>:
  240a20:	adrp	x16, 254000 <session_vtable+0x3d0>
  240a24:	ldr	x17, [x16, #3904]
  240a28:	add	x16, x16, #0xf40
  240a2c:	br	x17

0000000000240a30 <sd_device_enumerator_new@plt>:
  240a30:	adrp	x16, 254000 <session_vtable+0x3d0>
  240a34:	ldr	x17, [x16, #3912]
  240a38:	add	x16, x16, #0xf48
  240a3c:	br	x17

0000000000240a40 <sd_device_enumerator_add_match_tag@plt>:
  240a40:	adrp	x16, 254000 <session_vtable+0x3d0>
  240a44:	ldr	x17, [x16, #3920]
  240a48:	add	x16, x16, #0xf50
  240a4c:	br	x17

0000000000240a50 <sd_device_enumerator_get_device_first@plt>:
  240a50:	adrp	x16, 254000 <session_vtable+0x3d0>
  240a54:	ldr	x17, [x16, #3928]
  240a58:	add	x16, x16, #0xf58
  240a5c:	br	x17

0000000000240a60 <sd_device_enumerator_get_device_next@plt>:
  240a60:	adrp	x16, 254000 <session_vtable+0x3d0>
  240a64:	ldr	x17, [x16, #3936]
  240a68:	add	x16, x16, #0xf60
  240a6c:	br	x17

0000000000240a70 <opendir@plt>:
  240a70:	adrp	x16, 254000 <session_vtable+0x3d0>
  240a74:	ldr	x17, [x16, #3944]
  240a78:	add	x16, x16, #0xf68
  240a7c:	br	x17

0000000000240a80 <readdir64@plt>:
  240a80:	adrp	x16, 254000 <session_vtable+0x3d0>
  240a84:	ldr	x17, [x16, #3952]
  240a88:	add	x16, x16, #0xf70
  240a8c:	br	x17

0000000000240a90 <hidden_or_backup_file@plt>:
  240a90:	adrp	x16, 254000 <session_vtable+0x3d0>
  240a94:	ldr	x17, [x16, #3960]
  240a98:	add	x16, x16, #0xf78
  240a9c:	br	x17

0000000000240aa0 <dirent_is_file@plt>:
  240aa0:	adrp	x16, 254000 <session_vtable+0x3d0>
  240aa4:	ldr	x17, [x16, #3968]
  240aa8:	add	x16, x16, #0xf80
  240aac:	br	x17

0000000000240ab0 <dirfd@plt>:
  240ab0:	adrp	x16, 254000 <session_vtable+0x3d0>
  240ab4:	ldr	x17, [x16, #3976]
  240ab8:	add	x16, x16, #0xf88
  240abc:	br	x17

0000000000240ac0 <unlinkat@plt>:
  240ac0:	adrp	x16, 254000 <session_vtable+0x3d0>
  240ac4:	ldr	x17, [x16, #3984]
  240ac8:	add	x16, x16, #0xf90
  240acc:	br	x17

0000000000240ad0 <sd_device_enumerator_add_match_subsystem@plt>:
  240ad0:	adrp	x16, 254000 <session_vtable+0x3d0>
  240ad4:	ldr	x17, [x16, #3992]
  240ad8:	add	x16, x16, #0xf98
  240adc:	br	x17

0000000000240ae0 <asprintf@plt>:
  240ae0:	adrp	x16, 254000 <session_vtable+0x3d0>
  240ae4:	ldr	x17, [x16, #4000]
  240ae8:	add	x16, x16, #0xfa0
  240aec:	br	x17

0000000000240af0 <log_oom_internal@plt>:
  240af0:	adrp	x16, 254000 <session_vtable+0x3d0>
  240af4:	ldr	x17, [x16, #4008]
  240af8:	add	x16, x16, #0xfa8
  240afc:	br	x17

0000000000240b00 <internal_hashmap_iterate@plt>:
  240b00:	adrp	x16, 254000 <session_vtable+0x3d0>
  240b04:	ldr	x17, [x16, #4016]
  240b08:	add	x16, x16, #0xfb0
  240b0c:	br	x17

0000000000240b10 <sd_event_source_set_time@plt>:
  240b10:	adrp	x16, 254000 <session_vtable+0x3d0>
  240b14:	ldr	x17, [x16, #4024]
  240b18:	add	x16, x16, #0xfb8
  240b1c:	br	x17

0000000000240b20 <sd_event_source_set_enabled@plt>:
  240b20:	adrp	x16, 254000 <session_vtable+0x3d0>
  240b24:	ldr	x17, [x16, #4032]
  240b28:	add	x16, x16, #0xfc0
  240b2c:	br	x17

0000000000240b30 <sd_event_add_time@plt>:
  240b30:	adrp	x16, 254000 <session_vtable+0x3d0>
  240b34:	ldr	x17, [x16, #4040]
  240b38:	add	x16, x16, #0xfc8
  240b3c:	br	x17

0000000000240b40 <sd_event_source_set_priority@plt>:
  240b40:	adrp	x16, 254000 <session_vtable+0x3d0>
  240b44:	ldr	x17, [x16, #4048]
  240b48:	add	x16, x16, #0xfd0
  240b4c:	br	x17

0000000000240b50 <open_terminal@plt>:
  240b50:	adrp	x16, 254000 <session_vtable+0x3d0>
  240b54:	ldr	x17, [x16, #4056]
  240b58:	add	x16, x16, #0xfd8
  240b5c:	br	x17

0000000000240b60 <vt_release@plt>:
  240b60:	adrp	x16, 254000 <session_vtable+0x3d0>
  240b64:	ldr	x17, [x16, #4064]
  240b68:	add	x16, x16, #0xfe0
  240b6c:	br	x17

0000000000240b70 <sd_device_get_sysname@plt>:
  240b70:	adrp	x16, 254000 <session_vtable+0x3d0>
  240b74:	ldr	x17, [x16, #4072]
  240b78:	add	x16, x16, #0xfe8
  240b7c:	br	x17

0000000000240b80 <device_for_action@plt>:
  240b80:	adrp	x16, 254000 <session_vtable+0x3d0>
  240b84:	ldr	x17, [x16, #4080]
  240b88:	add	x16, x16, #0xff0
  240b8c:	br	x17

0000000000240b90 <strncmp@plt>:
  240b90:	adrp	x16, 254000 <session_vtable+0x3d0>
  240b94:	ldr	x17, [x16, #4088]
  240b98:	add	x16, x16, #0xff8
  240b9c:	br	x17

0000000000240ba0 <sd_device_enumerator_unref@plt>:
  240ba0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240ba4:	ldr	x17, [x16]
  240ba8:	add	x16, x16, #0x0
  240bac:	br	x17

0000000000240bb0 <closedir@plt>:
  240bb0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240bb4:	ldr	x17, [x16, #8]
  240bb8:	add	x16, x16, #0x8
  240bbc:	br	x17

0000000000240bc0 <internal_hashmap_get@plt>:
  240bc0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240bc4:	ldr	x17, [x16, #16]
  240bc8:	add	x16, x16, #0x10
  240bcc:	br	x17

0000000000240bd0 <dirent_ensure_type@plt>:
  240bd0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240bd4:	ldr	x17, [x16, #24]
  240bd8:	add	x16, x16, #0x18
  240bdc:	br	x17

0000000000240be0 <sd_listen_fds_with_names@plt>:
  240be0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240be4:	ldr	x17, [x16, #32]
  240be8:	add	x16, x16, #0x20
  240bec:	br	x17

0000000000240bf0 <sd_notifyf@plt>:
  240bf0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240bf4:	ldr	x17, [x16, #40]
  240bf8:	add	x16, x16, #0x28
  240bfc:	br	x17

0000000000240c00 <gnu_dev_major@plt>:
  240c00:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240c04:	ldr	x17, [x16, #48]
  240c08:	add	x16, x16, #0x30
  240c0c:	br	x17

0000000000240c10 <gnu_dev_minor@plt>:
  240c10:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240c14:	ldr	x17, [x16, #56]
  240c18:	add	x16, x16, #0x38
  240c1c:	br	x17

0000000000240c20 <strv_length@plt>:
  240c20:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240c24:	ldr	x17, [x16, #64]
  240c28:	add	x16, x16, #0x40
  240c2c:	br	x17

0000000000240c30 <strcmp@plt>:
  240c30:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240c34:	ldr	x17, [x16, #72]
  240c38:	add	x16, x16, #0x48
  240c3c:	br	x17

0000000000240c40 <strdup@plt>:
  240c40:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240c44:	ldr	x17, [x16, #80]
  240c48:	add	x16, x16, #0x50
  240c4c:	br	x17

0000000000240c50 <gnu_dev_makedev@plt>:
  240c50:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240c54:	ldr	x17, [x16, #88]
  240c58:	add	x16, x16, #0x58
  240c5c:	br	x17

0000000000240c60 <strv_split_full@plt>:
  240c60:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240c64:	ldr	x17, [x16, #96]
  240c68:	add	x16, x16, #0x60
  240c6c:	br	x17

0000000000240c70 <safe_atou_full@plt>:
  240c70:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240c74:	ldr	x17, [x16, #104]
  240c78:	add	x16, x16, #0x68
  240c7c:	br	x17

0000000000240c80 <sd_bus_error_free@plt>:
  240c80:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240c84:	ldr	x17, [x16, #112]
  240c88:	add	x16, x16, #0x70
  240c8c:	br	x17

0000000000240c90 <can_sleep@plt>:
  240c90:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240c94:	ldr	x17, [x16, #120]
  240c98:	add	x16, x16, #0x78
  240c9c:	br	x17

0000000000240ca0 <get_process_comm@plt>:
  240ca0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240ca4:	ldr	x17, [x16, #128]
  240ca8:	add	x16, x16, #0x80
  240cac:	br	x17

0000000000240cb0 <uid_to_name@plt>:
  240cb0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240cb4:	ldr	x17, [x16, #136]
  240cb8:	add	x16, x16, #0x88
  240cbc:	br	x17

0000000000240cc0 <bus_error_message@plt>:
  240cc0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240cc4:	ldr	x17, [x16, #144]
  240cc8:	add	x16, x16, #0x90
  240ccc:	br	x17

0000000000240cd0 <string_table_lookup@plt>:
  240cd0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240cd4:	ldr	x17, [x16, #152]
  240cd8:	add	x16, x16, #0x98
  240cdc:	br	x17

0000000000240ce0 <log_syntax_internal@plt>:
  240ce0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240ce4:	ldr	x17, [x16, #160]
  240ce8:	add	x16, x16, #0xa0
  240cec:	br	x17

0000000000240cf0 <calloc@plt>:
  240cf0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240cf4:	ldr	x17, [x16, #168]
  240cf8:	add	x16, x16, #0xa8
  240cfc:	br	x17

0000000000240d00 <hashmap_put@plt>:
  240d00:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240d04:	ldr	x17, [x16, #176]
  240d08:	add	x16, x16, #0xb0
  240d0c:	br	x17

0000000000240d10 <close@plt>:
  240d10:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240d14:	ldr	x17, [x16, #184]
  240d18:	add	x16, x16, #0xb8
  240d1c:	br	x17

0000000000240d20 <internal_hashmap_remove@plt>:
  240d20:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240d24:	ldr	x17, [x16, #192]
  240d28:	add	x16, x16, #0xc0
  240d2c:	br	x17

0000000000240d30 <strlen@plt>:
  240d30:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240d34:	ldr	x17, [x16, #200]
  240d38:	add	x16, x16, #0xc8
  240d3c:	br	x17

0000000000240d40 <stpcpy@plt>:
  240d40:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240d44:	ldr	x17, [x16, #208]
  240d48:	add	x16, x16, #0xd0
  240d4c:	br	x17

0000000000240d50 <ioctl@plt>:
  240d50:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240d54:	ldr	x17, [x16, #216]
  240d58:	add	x16, x16, #0xd8
  240d5c:	br	x17

0000000000240d60 <read@plt>:
  240d60:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240d64:	ldr	x17, [x16, #224]
  240d68:	add	x16, x16, #0xe0
  240d6c:	br	x17

0000000000240d70 <log_struct_internal@plt>:
  240d70:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240d74:	ldr	x17, [x16, #232]
  240d78:	add	x16, x16, #0xe8
  240d7c:	br	x17

0000000000240d80 <sd_event_add_post@plt>:
  240d80:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240d84:	ldr	x17, [x16, #240]
  240d88:	add	x16, x16, #0xf0
  240d8c:	br	x17

0000000000240d90 <physical_memory_scale@plt>:
  240d90:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240d94:	ldr	x17, [x16, #248]
  240d98:	add	x16, x16, #0xf8
  240d9c:	br	x17

0000000000240da0 <config_parse_many_nulstr@plt>:
  240da0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240da4:	ldr	x17, [x16, #256]
  240da8:	add	x16, x16, #0x100
  240dac:	br	x17

0000000000240db0 <get_user_creds@plt>:
  240db0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240db4:	ldr	x17, [x16, #264]
  240db8:	add	x16, x16, #0x108
  240dbc:	br	x17

0000000000240dc0 <getpwuid@plt>:
  240dc0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240dc4:	ldr	x17, [x16, #272]
  240dc8:	add	x16, x16, #0x110
  240dcc:	br	x17

0000000000240dd0 <sd_device_get_syspath@plt>:
  240dd0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240dd4:	ldr	x17, [x16, #280]
  240dd8:	add	x16, x16, #0x118
  240ddc:	br	x17

0000000000240de0 <sd_device_get_property_value@plt>:
  240de0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240de4:	ldr	x17, [x16, #288]
  240de8:	add	x16, x16, #0x120
  240dec:	br	x17

0000000000240df0 <sd_device_has_tag@plt>:
  240df0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240df4:	ldr	x17, [x16, #296]
  240df8:	add	x16, x16, #0x128
  240dfc:	br	x17

0000000000240e00 <log_object_internal@plt>:
  240e00:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240e04:	ldr	x17, [x16, #304]
  240e08:	add	x16, x16, #0x130
  240e0c:	br	x17

0000000000240e10 <cg_pid_get_unit@plt>:
  240e10:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240e14:	ldr	x17, [x16, #312]
  240e18:	add	x16, x16, #0x138
  240e1c:	br	x17

0000000000240e20 <cg_pid_get_slice@plt>:
  240e20:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240e24:	ldr	x17, [x16, #320]
  240e28:	add	x16, x16, #0x140
  240e2c:	br	x17

0000000000240e30 <strv_find@plt>:
  240e30:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240e34:	ldr	x17, [x16, #328]
  240e38:	add	x16, x16, #0x148
  240e3c:	br	x17

0000000000240e40 <snprintf@plt>:
  240e40:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240e44:	ldr	x17, [x16, #336]
  240e48:	add	x16, x16, #0x150
  240e4c:	br	x17

0000000000240e50 <sd_bus_call_method@plt>:
  240e50:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240e54:	ldr	x17, [x16, #344]
  240e58:	add	x16, x16, #0x158
  240e5c:	br	x17

0000000000240e60 <sd_device_enumerator_allow_uninitialized@plt>:
  240e60:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240e64:	ldr	x17, [x16, #352]
  240e68:	add	x16, x16, #0x160
  240e6c:	br	x17

0000000000240e70 <sd_device_get_parent@plt>:
  240e70:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240e74:	ldr	x17, [x16, #360]
  240e78:	add	x16, x16, #0x168
  240e7c:	br	x17

0000000000240e80 <sd_device_get_subsystem@plt>:
  240e80:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240e84:	ldr	x17, [x16, #368]
  240e88:	add	x16, x16, #0x170
  240e8c:	br	x17

0000000000240e90 <strchr@plt>:
  240e90:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240e94:	ldr	x17, [x16, #376]
  240e98:	add	x16, x16, #0x178
  240e9c:	br	x17

0000000000240ea0 <sd_device_get_sysattr_value@plt>:
  240ea0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240ea4:	ldr	x17, [x16, #384]
  240ea8:	add	x16, x16, #0x180
  240eac:	br	x17

0000000000240eb0 <on_ac_power@plt>:
  240eb0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240eb4:	ldr	x17, [x16, #392]
  240eb8:	add	x16, x16, #0x188
  240ebc:	br	x17

0000000000240ec0 <utmpxname@plt>:
  240ec0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240ec4:	ldr	x17, [x16, #400]
  240ec8:	add	x16, x16, #0x190
  240ecc:	br	x17

0000000000240ed0 <setutxent@plt>:
  240ed0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240ed4:	ldr	x17, [x16, #408]
  240ed8:	add	x16, x16, #0x198
  240edc:	br	x17

0000000000240ee0 <getutxent@plt>:
  240ee0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240ee4:	ldr	x17, [x16, #416]
  240ee8:	add	x16, x16, #0x1a0
  240eec:	br	x17

0000000000240ef0 <strndup@plt>:
  240ef0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240ef4:	ldr	x17, [x16, #424]
  240ef8:	add	x16, x16, #0x1a8
  240efc:	br	x17

0000000000240f00 <path_startswith@plt>:
  240f00:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240f04:	ldr	x17, [x16, #432]
  240f08:	add	x16, x16, #0x1b0
  240f0c:	br	x17

0000000000240f10 <free_and_strdup@plt>:
  240f10:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240f14:	ldr	x17, [x16, #440]
  240f18:	add	x16, x16, #0x1b8
  240f1c:	br	x17

0000000000240f20 <endutxent@plt>:
  240f20:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240f24:	ldr	x17, [x16, #448]
  240f28:	add	x16, x16, #0x1c0
  240f2c:	br	x17

0000000000240f30 <strcmp_ptr@plt>:
  240f30:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240f34:	ldr	x17, [x16, #456]
  240f38:	add	x16, x16, #0x1c8
  240f3c:	br	x17

0000000000240f40 <sd_event_add_inotify@plt>:
  240f40:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240f44:	ldr	x17, [x16, #464]
  240f48:	add	x16, x16, #0x1d0
  240f4c:	br	x17

0000000000240f50 <sd_bus_error_setf@plt>:
  240f50:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240f54:	ldr	x17, [x16, #472]
  240f58:	add	x16, x16, #0x1d8
  240f5c:	br	x17

0000000000240f60 <sd_bus_query_sender_creds@plt>:
  240f60:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240f64:	ldr	x17, [x16, #480]
  240f68:	add	x16, x16, #0x1e0
  240f6c:	br	x17

0000000000240f70 <sd_bus_creds_get_session@plt>:
  240f70:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240f74:	ldr	x17, [x16, #488]
  240f78:	add	x16, x16, #0x1e8
  240f7c:	br	x17

0000000000240f80 <sd_bus_creds_get_owner_uid@plt>:
  240f80:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240f84:	ldr	x17, [x16, #496]
  240f88:	add	x16, x16, #0x1f0
  240f8c:	br	x17

0000000000240f90 <uid_is_valid@plt>:
  240f90:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240f94:	ldr	x17, [x16, #504]
  240f98:	add	x16, x16, #0x1f8
  240f9c:	br	x17

0000000000240fa0 <sd_event_source_get_time@plt>:
  240fa0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240fa4:	ldr	x17, [x16, #512]
  240fa8:	add	x16, x16, #0x200
  240fac:	br	x17

0000000000240fb0 <sd_bus_message_read@plt>:
  240fb0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240fb4:	ldr	x17, [x16, #520]
  240fb8:	add	x16, x16, #0x208
  240fbc:	br	x17

0000000000240fc0 <unit_load_state@plt>:
  240fc0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240fc4:	ldr	x17, [x16, #528]
  240fc8:	add	x16, x16, #0x210
  240fcc:	br	x17

0000000000240fd0 <sd_bus_emit_signal@plt>:
  240fd0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240fd4:	ldr	x17, [x16, #536]
  240fd8:	add	x16, x16, #0x218
  240fdc:	br	x17

0000000000240fe0 <read_reboot_parameter@plt>:
  240fe0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240fe4:	ldr	x17, [x16, #544]
  240fe8:	add	x16, x16, #0x220
  240fec:	br	x17

0000000000240ff0 <sd_bus_message_append@plt>:
  240ff0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  240ff4:	ldr	x17, [x16, #552]
  240ff8:	add	x16, x16, #0x228
  240ffc:	br	x17

0000000000241000 <getenv_bool@plt>:
  241000:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241004:	ldr	x17, [x16, #560]
  241008:	add	x16, x16, #0x230
  24100c:	br	x17

0000000000241010 <efi_get_reboot_to_firmware@plt>:
  241010:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241014:	ldr	x17, [x16, #568]
  241018:	add	x16, x16, #0x238
  24101c:	br	x17

0000000000241020 <efi_get_variable_string@plt>:
  241020:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241024:	ldr	x17, [x16, #576]
  241028:	add	x16, x16, #0x240
  24102c:	br	x17

0000000000241030 <read_one_line_file@plt>:
  241030:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241034:	ldr	x17, [x16, #584]
  241038:	add	x16, x16, #0x248
  24103c:	br	x17

0000000000241040 <efi_loader_entry_name_valid@plt>:
  241040:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241044:	ldr	x17, [x16, #592]
  241048:	add	x16, x16, #0x250
  24104c:	br	x17

0000000000241050 <boot_entries_load_config_auto@plt>:
  241050:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241054:	ldr	x17, [x16, #600]
  241058:	add	x16, x16, #0x258
  24105c:	br	x17

0000000000241060 <boot_entries_augment_from_loader@plt>:
  241060:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241064:	ldr	x17, [x16, #608]
  241068:	add	x16, x16, #0x260
  24106c:	br	x17

0000000000241070 <sd_bus_message_open_container@plt>:
  241070:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241074:	ldr	x17, [x16, #616]
  241078:	add	x16, x16, #0x268
  24107c:	br	x17

0000000000241080 <sd_bus_message_close_container@plt>:
  241080:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241084:	ldr	x17, [x16, #624]
  241088:	add	x16, x16, #0x270
  24108c:	br	x17

0000000000241090 <boot_config_free@plt>:
  241090:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241094:	ldr	x17, [x16, #632]
  241098:	add	x16, x16, #0x278
  24109c:	br	x17

00000000002410a0 <sd_bus_reply_method_return@plt>:
  2410a0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2410a4:	ldr	x17, [x16, #640]
  2410a8:	add	x16, x16, #0x280
  2410ac:	br	x17

00000000002410b0 <sd_bus_message_new_method_return@plt>:
  2410b0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2410b4:	ldr	x17, [x16, #648]
  2410b8:	add	x16, x16, #0x288
  2410bc:	br	x17

00000000002410c0 <sd_bus_send@plt>:
  2410c0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2410c4:	ldr	x17, [x16, #656]
  2410c8:	add	x16, x16, #0x290
  2410cc:	br	x17

00000000002410d0 <string_is_safe@plt>:
  2410d0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2410d4:	ldr	x17, [x16, #664]
  2410d8:	add	x16, x16, #0x298
  2410dc:	br	x17

00000000002410e0 <tty_is_vc@plt>:
  2410e0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2410e4:	ldr	x17, [x16, #672]
  2410e8:	add	x16, x16, #0x2a0
  2410ec:	br	x17

00000000002410f0 <tty_is_console@plt>:
  2410f0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2410f4:	ldr	x17, [x16, #680]
  2410f8:	add	x16, x16, #0x2a8
  2410fc:	br	x17

0000000000241100 <vtnr_from_tty@plt>:
  241100:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241104:	ldr	x17, [x16, #688]
  241108:	add	x16, x16, #0x2b0
  24110c:	br	x17

0000000000241110 <sd_bus_creds_get_pid@plt>:
  241110:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241114:	ldr	x17, [x16, #696]
  241118:	add	x16, x16, #0x2b8
  24111c:	br	x17

0000000000241120 <audit_session_from_pid@plt>:
  241120:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241124:	ldr	x17, [x16, #704]
  241128:	add	x16, x16, #0x2c0
  24112c:	br	x17

0000000000241130 <sd_bus_message_enter_container@plt>:
  241130:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241134:	ldr	x17, [x16, #712]
  241138:	add	x16, x16, #0x2c8
  24113c:	br	x17

0000000000241140 <sd_bus_message_exit_container@plt>:
  241140:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241144:	ldr	x17, [x16, #720]
  241148:	add	x16, x16, #0x2d0
  24114c:	br	x17

0000000000241150 <sd_bus_message_ref@plt>:
  241150:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241154:	ldr	x17, [x16, #728]
  241158:	add	x16, x16, #0x2d8
  24115c:	br	x17

0000000000241160 <bus_verify_polkit_async@plt>:
  241160:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241164:	ldr	x17, [x16, #736]
  241168:	add	x16, x16, #0x2e0
  24116c:	br	x17

0000000000241170 <sd_bus_message_get_member@plt>:
  241170:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241174:	ldr	x17, [x16, #744]
  241178:	add	x16, x16, #0x2e8
  24117c:	br	x17

0000000000241180 <sd_bus_creds_get_euid@plt>:
  241180:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241184:	ldr	x17, [x16, #752]
  241188:	add	x16, x16, #0x2f0
  24118c:	br	x17

0000000000241190 <mkdir_p_label@plt>:
  241190:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241194:	ldr	x17, [x16, #760]
  241198:	add	x16, x16, #0x2f8
  24119c:	br	x17

00000000002411a0 <mkdir_safe_label@plt>:
  2411a0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2411a4:	ldr	x17, [x16, #768]
  2411a8:	add	x16, x16, #0x300
  2411ac:	br	x17

00000000002411b0 <cescape@plt>:
  2411b0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2411b4:	ldr	x17, [x16, #776]
  2411b8:	add	x16, x16, #0x308
  2411bc:	br	x17

00000000002411c0 <touch@plt>:
  2411c0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2411c4:	ldr	x17, [x16, #784]
  2411c8:	add	x16, x16, #0x310
  2411cc:	br	x17

00000000002411d0 <unlink@plt>:
  2411d0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2411d4:	ldr	x17, [x16, #792]
  2411d8:	add	x16, x16, #0x318
  2411dc:	br	x17

00000000002411e0 <path_is_normalized@plt>:
  2411e0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2411e4:	ldr	x17, [x16, #800]
  2411e8:	add	x16, x16, #0x320
  2411ec:	br	x17

00000000002411f0 <sd_bus_creds_get_uid@plt>:
  2411f0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2411f4:	ldr	x17, [x16, #808]
  2411f8:	add	x16, x16, #0x328
  2411fc:	br	x17

0000000000241200 <sd_bus_creds_get_tty@plt>:
  241200:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241204:	ldr	x17, [x16, #816]
  241208:	add	x16, x16, #0x330
  24120c:	br	x17

0000000000241210 <utmp_wall@plt>:
  241210:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241214:	ldr	x17, [x16, #824]
  241218:	add	x16, x16, #0x338
  24121c:	br	x17

0000000000241220 <detect_container@plt>:
  241220:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241224:	ldr	x17, [x16, #832]
  241228:	add	x16, x16, #0x340
  24122c:	br	x17

0000000000241230 <update_reboot_parameter_and_warn@plt>:
  241230:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241234:	ldr	x17, [x16, #840]
  241238:	add	x16, x16, #0x348
  24123c:	br	x17

0000000000241240 <efi_reboot_to_firmware_supported@plt>:
  241240:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241244:	ldr	x17, [x16, #848]
  241248:	add	x16, x16, #0x350
  24124c:	br	x17

0000000000241250 <efi_set_reboot_to_firmware@plt>:
  241250:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241254:	ldr	x17, [x16, #856]
  241258:	add	x16, x16, #0x358
  24125c:	br	x17

0000000000241260 <efi_loader_get_features@plt>:
  241260:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241264:	ldr	x17, [x16, #864]
  241268:	add	x16, x16, #0x360
  24126c:	br	x17

0000000000241270 <efi_set_variable_string@plt>:
  241270:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241274:	ldr	x17, [x16, #872]
  241278:	add	x16, x16, #0x368
  24127c:	br	x17

0000000000241280 <efi_set_variable@plt>:
  241280:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241284:	ldr	x17, [x16, #880]
  241288:	add	x16, x16, #0x370
  24128c:	br	x17

0000000000241290 <sd_bus_message_get_path@plt>:
  241290:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241294:	ldr	x17, [x16, #888]
  241298:	add	x16, x16, #0x378
  24129c:	br	x17

00000000002412a0 <unit_name_from_dbus_path@plt>:
  2412a0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2412a4:	ldr	x17, [x16, #896]
  2412a8:	add	x16, x16, #0x380
  2412ac:	br	x17

00000000002412b0 <sd_bus_emit_properties_changed_strv@plt>:
  2412b0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2412b4:	ldr	x17, [x16, #904]
  2412b8:	add	x16, x16, #0x388
  2412bc:	br	x17

00000000002412c0 <sd_bus_message_new_method_call@plt>:
  2412c0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2412c4:	ldr	x17, [x16, #912]
  2412c8:	add	x16, x16, #0x390
  2412cc:	br	x17

00000000002412d0 <empty_or_root@plt>:
  2412d0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2412d4:	ldr	x17, [x16, #920]
  2412d8:	add	x16, x16, #0x398
  2412dc:	br	x17

00000000002412e0 <sd_bus_message_copy@plt>:
  2412e0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2412e4:	ldr	x17, [x16, #928]
  2412e8:	add	x16, x16, #0x3a0
  2412ec:	br	x17

00000000002412f0 <sd_bus_call@plt>:
  2412f0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2412f4:	ldr	x17, [x16, #936]
  2412f8:	add	x16, x16, #0x3a8
  2412fc:	br	x17

0000000000241300 <sd_bus_message_unref@plt>:
  241300:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241304:	ldr	x17, [x16, #944]
  241308:	add	x16, x16, #0x3b0
  24130c:	br	x17

0000000000241310 <sd_bus_error_has_name@plt>:
  241310:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241314:	ldr	x17, [x16, #952]
  241318:	add	x16, x16, #0x3b8
  24131c:	br	x17

0000000000241320 <unit_dbus_path_from_name@plt>:
  241320:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241324:	ldr	x17, [x16, #960]
  241328:	add	x16, x16, #0x3c0
  24132c:	br	x17

0000000000241330 <sd_bus_error_move@plt>:
  241330:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241334:	ldr	x17, [x16, #968]
  241338:	add	x16, x16, #0x3c8
  24133c:	br	x17

0000000000241340 <sd_bus_get_property@plt>:
  241340:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241344:	ldr	x17, [x16, #976]
  241348:	add	x16, x16, #0x3d0
  24134c:	br	x17

0000000000241350 <sd_bus_creds_unref@plt>:
  241350:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241354:	ldr	x17, [x16, #984]
  241358:	add	x16, x16, #0x3d8
  24135c:	br	x17

0000000000241360 <safe_atollu@plt>:
  241360:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241364:	ldr	x17, [x16, #992]
  241368:	add	x16, x16, #0x3e0
  24136c:	br	x17

0000000000241370 <internal_hashmap_size@plt>:
  241370:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241374:	ldr	x17, [x16, #1000]
  241378:	add	x16, x16, #0x3e8
  24137c:	br	x17

0000000000241380 <internal_hashmap_contains@plt>:
  241380:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241384:	ldr	x17, [x16, #1008]
  241388:	add	x16, x16, #0x3f0
  24138c:	br	x17

0000000000241390 <sd_device_new_from_syspath@plt>:
  241390:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241394:	ldr	x17, [x16, #1016]
  241398:	add	x16, x16, #0x3f8
  24139c:	br	x17

00000000002413a0 <sd_device_unref@plt>:
  2413a0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2413a4:	ldr	x17, [x16, #1024]
  2413a8:	add	x16, x16, #0x400
  2413ac:	br	x17

00000000002413b0 <write_string_file_atomic_label_ts@plt>:
  2413b0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2413b4:	ldr	x17, [x16, #1032]
  2413b8:	add	x16, x16, #0x408
  2413bc:	br	x17

00000000002413c0 <sd_device_enumerator_add_match_parent@plt>:
  2413c0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2413c4:	ldr	x17, [x16, #1040]
  2413c8:	add	x16, x16, #0x410
  2413cc:	br	x17

00000000002413d0 <path_join_internal@plt>:
  2413d0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2413d4:	ldr	x17, [x16, #1048]
  2413d8:	add	x16, x16, #0x418
  2413dc:	br	x17

00000000002413e0 <write_string_file_ts@plt>:
  2413e0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2413e4:	ldr	x17, [x16, #1056]
  2413e8:	add	x16, x16, #0x420
  2413ec:	br	x17

00000000002413f0 <endswith@plt>:
  2413f0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2413f4:	ldr	x17, [x16, #1064]
  2413f8:	add	x16, x16, #0x428
  2413fc:	br	x17

0000000000241400 <sd_bus_error_set@plt>:
  241400:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241404:	ldr	x17, [x16, #1072]
  241408:	add	x16, x16, #0x430
  24140c:	br	x17

0000000000241410 <bus_test_polkit@plt>:
  241410:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241414:	ldr	x17, [x16, #1080]
  241418:	add	x16, x16, #0x438
  24141c:	br	x17

0000000000241420 <log_assert_failed_unreachable_realm@plt>:
  241420:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241424:	ldr	x17, [x16, #1088]
  241428:	add	x16, x16, #0x440
  24142c:	br	x17

0000000000241430 <create_shutdown_run_nologin_or_warn@plt>:
  241430:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241434:	ldr	x17, [x16, #1096]
  241438:	add	x16, x16, #0x448
  24143c:	br	x17

0000000000241440 <fopen_temporary@plt>:
  241440:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241444:	ldr	x17, [x16, #1104]
  241448:	add	x16, x16, #0x450
  24144c:	br	x17

0000000000241450 <fileno@plt>:
  241450:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241454:	ldr	x17, [x16, #1112]
  241458:	add	x16, x16, #0x458
  24145c:	br	x17

0000000000241460 <fchmod@plt>:
  241460:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241464:	ldr	x17, [x16, #1120]
  241468:	add	x16, x16, #0x460
  24146c:	br	x17

0000000000241470 <fprintf@plt>:
  241470:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241474:	ldr	x17, [x16, #1128]
  241478:	add	x16, x16, #0x468
  24147c:	br	x17

0000000000241480 <fflush_and_check@plt>:
  241480:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241484:	ldr	x17, [x16, #1136]
  241488:	add	x16, x16, #0x470
  24148c:	br	x17

0000000000241490 <rename@plt>:
  241490:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241494:	ldr	x17, [x16, #1144]
  241498:	add	x16, x16, #0x478
  24149c:	br	x17

00000000002414a0 <safe_fclose@plt>:
  2414a0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2414a4:	ldr	x17, [x16, #1152]
  2414a8:	add	x16, x16, #0x480
  2414ac:	br	x17

00000000002414b0 <dual_timestamp_get@plt>:
  2414b0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2414b4:	ldr	x17, [x16, #1160]
  2414b8:	add	x16, x16, #0x488
  2414bc:	br	x17

00000000002414c0 <basename@plt>:
  2414c0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2414c4:	ldr	x17, [x16, #1168]
  2414c8:	add	x16, x16, #0x490
  2414cc:	br	x17

00000000002414d0 <parse_env_file_sentinel@plt>:
  2414d0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2414d4:	ldr	x17, [x16, #1176]
  2414d8:	add	x16, x16, #0x498
  2414dc:	br	x17

00000000002414e0 <parse_uid@plt>:
  2414e0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2414e4:	ldr	x17, [x16, #1184]
  2414e8:	add	x16, x16, #0x4a0
  2414ec:	br	x17

00000000002414f0 <parse_pid@plt>:
  2414f0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2414f4:	ldr	x17, [x16, #1192]
  2414f8:	add	x16, x16, #0x4a8
  2414fc:	br	x17

0000000000241500 <cunescape@plt>:
  241500:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241504:	ldr	x17, [x16, #1200]
  241508:	add	x16, x16, #0x4b0
  24150c:	br	x17

0000000000241510 <split@plt>:
  241510:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241514:	ldr	x17, [x16, #1208]
  241518:	add	x16, x16, #0x4b8
  24151c:	br	x17

0000000000241520 <strjoin_real@plt>:
  241520:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241524:	ldr	x17, [x16, #1216]
  241528:	add	x16, x16, #0x4c0
  24152c:	br	x17

0000000000241530 <mkfifo@plt>:
  241530:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241534:	ldr	x17, [x16, #1224]
  241538:	add	x16, x16, #0x4c8
  24153c:	br	x17

0000000000241540 <pipe_eof@plt>:
  241540:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241544:	ldr	x17, [x16, #1232]
  241548:	add	x16, x16, #0x4d0
  24154c:	br	x17

0000000000241550 <sd_bus_get_current_message@plt>:
  241550:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241554:	ldr	x17, [x16, #1240]
  241558:	add	x16, x16, #0x4d8
  24155c:	br	x17

0000000000241560 <bus_label_unescape_n@plt>:
  241560:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241564:	ldr	x17, [x16, #1248]
  241568:	add	x16, x16, #0x4e0
  24156c:	br	x17

0000000000241570 <bus_label_escape@plt>:
  241570:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241574:	ldr	x17, [x16, #1256]
  241578:	add	x16, x16, #0x4e8
  24157c:	br	x17

0000000000241580 <strv_consume@plt>:
  241580:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241584:	ldr	x17, [x16, #1264]
  241588:	add	x16, x16, #0x4f0
  24158c:	br	x17

0000000000241590 <strv_extend@plt>:
  241590:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241594:	ldr	x17, [x16, #1272]
  241598:	add	x16, x16, #0x4f8
  24159c:	br	x17

00000000002415a0 <fwrite@plt>:
  2415a0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2415a4:	ldr	x17, [x16, #1280]
  2415a8:	add	x16, x16, #0x500
  2415ac:	br	x17

00000000002415b0 <chvt@plt>:
  2415b0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2415b4:	ldr	x17, [x16, #1288]
  2415b8:	add	x16, x16, #0x508
  2415bc:	br	x17

00000000002415c0 <lseek64@plt>:
  2415c0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2415c4:	ldr	x17, [x16, #1296]
  2415c8:	add	x16, x16, #0x510
  2415cc:	br	x17

00000000002415d0 <truncate_nl@plt>:
  2415d0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2415d4:	ldr	x17, [x16, #1304]
  2415d8:	add	x16, x16, #0x518
  2415dc:	br	x17

00000000002415e0 <strerror@plt>:
  2415e0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2415e4:	ldr	x17, [x16, #1312]
  2415e8:	add	x16, x16, #0x520
  2415ec:	br	x17

00000000002415f0 <greedy_realloc0@plt>:
  2415f0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2415f4:	ldr	x17, [x16, #1320]
  2415f8:	add	x16, x16, #0x528
  2415fc:	br	x17

0000000000241600 <strstr@plt>:
  241600:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241604:	ldr	x17, [x16, #1328]
  241608:	add	x16, x16, #0x530
  24160c:	br	x17

0000000000241610 <sd_bus_message_get_sender@plt>:
  241610:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241614:	ldr	x17, [x16, #1336]
  241618:	add	x16, x16, #0x538
  24161c:	br	x17

0000000000241620 <filename_is_valid@plt>:
  241620:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241624:	ldr	x17, [x16, #1344]
  241628:	add	x16, x16, #0x540
  24162c:	br	x17

0000000000241630 <sd_device_new_from_subsystem_sysname@plt>:
  241630:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241634:	ldr	x17, [x16, #1352]
  241638:	add	x16, x16, #0x548
  24163c:	br	x17

0000000000241640 <sd_bus_error_set_errnof@plt>:
  241640:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241644:	ldr	x17, [x16, #1360]
  241648:	add	x16, x16, #0x550
  24164c:	br	x17

0000000000241650 <sd_bus_error_is_set@plt>:
  241650:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241654:	ldr	x17, [x16, #1368]
  241658:	add	x16, x16, #0x558
  24165c:	br	x17

0000000000241660 <sd_bus_reply_method_error@plt>:
  241660:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241664:	ldr	x17, [x16, #1376]
  241668:	add	x16, x16, #0x560
  24166c:	br	x17

0000000000241670 <internal_hashmap_ensure_allocated@plt>:
  241670:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241674:	ldr	x17, [x16, #1384]
  241678:	add	x16, x16, #0x568
  24167c:	br	x17

0000000000241680 <sd_device_ref@plt>:
  241680:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241684:	ldr	x17, [x16, #1392]
  241688:	add	x16, x16, #0x570
  24168c:	br	x17

0000000000241690 <sd_bus_message_get_expect_reply@plt>:
  241690:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241694:	ldr	x17, [x16, #1400]
  241698:	add	x16, x16, #0x578
  24169c:	br	x17

00000000002416a0 <internal_set_ensure_allocated@plt>:
  2416a0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2416a4:	ldr	x17, [x16, #1408]
  2416a8:	add	x16, x16, #0x580
  2416ac:	br	x17

00000000002416b0 <set_put@plt>:
  2416b0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2416b4:	ldr	x17, [x16, #1416]
  2416b8:	add	x16, x16, #0x588
  2416bc:	br	x17

00000000002416c0 <sd_event_add_child@plt>:
  2416c0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2416c4:	ldr	x17, [x16, #1424]
  2416c8:	add	x16, x16, #0x590
  2416cc:	br	x17

00000000002416d0 <sd_device_set_sysattr_value@plt>:
  2416d0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2416d4:	ldr	x17, [x16, #1432]
  2416d8:	add	x16, x16, #0x598
  2416dc:	br	x17

00000000002416e0 <_exit@plt>:
  2416e0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2416e4:	ldr	x17, [x16, #1440]
  2416e8:	add	x16, x16, #0x5a0
  2416ec:	br	x17

00000000002416f0 <internal_hashmap_remove_value@plt>:
  2416f0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2416f4:	ldr	x17, [x16, #1448]
  2416f8:	add	x16, x16, #0x5a8
  2416fc:	br	x17

0000000000241700 <safe_fork_full@plt>:
  241700:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241704:	ldr	x17, [x16, #1456]
  241708:	add	x16, x16, #0x5b0
  24170c:	br	x17

0000000000241710 <sd_bus_reply_method_errnof@plt>:
  241710:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241714:	ldr	x17, [x16, #1464]
  241718:	add	x16, x16, #0x5b8
  24171c:	br	x17

0000000000241720 <sd_device_new_from_devnum@plt>:
  241720:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241724:	ldr	x17, [x16, #1472]
  241728:	add	x16, x16, #0x5c0
  24172c:	br	x17

0000000000241730 <sd_device_get_devname@plt>:
  241730:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241734:	ldr	x17, [x16, #1480]
  241738:	add	x16, x16, #0x5c8
  24173c:	br	x17

0000000000241740 <sd_device_get_parent_with_subsystem_devtype@plt>:
  241740:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241744:	ldr	x17, [x16, #1488]
  241748:	add	x16, x16, #0x5d0
  24174c:	br	x17

0000000000241750 <close_nointr@plt>:
  241750:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241754:	ldr	x17, [x16, #1496]
  241758:	add	x16, x16, #0x5d8
  24175c:	br	x17

0000000000241760 <sd_bus_message_new_signal@plt>:
  241760:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241764:	ldr	x17, [x16, #1504]
  241768:	add	x16, x16, #0x5e0
  24176c:	br	x17

0000000000241770 <sd_bus_message_set_destination@plt>:
  241770:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241774:	ldr	x17, [x16, #1512]
  241778:	add	x16, x16, #0x5e8
  24177c:	br	x17

0000000000241780 <strcspn@plt>:
  241780:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241784:	ldr	x17, [x16, #1520]
  241788:	add	x16, x16, #0x5f0
  24178c:	br	x17

0000000000241790 <sd_pid_notify_with_fds@plt>:
  241790:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241794:	ldr	x17, [x16, #1528]
  241798:	add	x16, x16, #0x5f8
  24179c:	br	x17

00000000002417a0 <session_id_valid@plt>:
  2417a0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2417a4:	ldr	x17, [x16, #1536]
  2417a8:	add	x16, x16, #0x600
  2417ac:	br	x17

00000000002417b0 <sd_bus_track_unref@plt>:
  2417b0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2417b4:	ldr	x17, [x16, #1544]
  2417b8:	add	x16, x16, #0x608
  2417bc:	br	x17

00000000002417c0 <fputc@plt>:
  2417c0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2417c4:	ldr	x17, [x16, #1552]
  2417c8:	add	x16, x16, #0x610
  2417cc:	br	x17

00000000002417d0 <parse_boolean@plt>:
  2417d0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2417d4:	ldr	x17, [x16, #1560]
  2417d8:	add	x16, x16, #0x618
  2417dc:	br	x17

00000000002417e0 <deserialize_usec@plt>:
  2417e0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2417e4:	ldr	x17, [x16, #1568]
  2417e8:	add	x16, x16, #0x620
  2417ec:	br	x17

00000000002417f0 <bus_name_has_owner@plt>:
  2417f0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2417f4:	ldr	x17, [x16, #1576]
  2417f8:	add	x16, x16, #0x628
  2417fc:	br	x17

0000000000241800 <sd_bus_track_new@plt>:
  241800:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241804:	ldr	x17, [x16, #1584]
  241808:	add	x16, x16, #0x630
  24180c:	br	x17

0000000000241810 <sd_bus_track_add_name@plt>:
  241810:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241814:	ldr	x17, [x16, #1592]
  241818:	add	x16, x16, #0x638
  24181c:	br	x17

0000000000241820 <extract_first_word@plt>:
  241820:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241824:	ldr	x17, [x16, #1600]
  241828:	add	x16, x16, #0x640
  24182c:	br	x17

0000000000241830 <parse_dev@plt>:
  241830:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241834:	ldr	x17, [x16, #1608]
  241838:	add	x16, x16, #0x648
  24183c:	br	x17

0000000000241840 <vt_restore@plt>:
  241840:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241844:	ldr	x17, [x16, #1616]
  241848:	add	x16, x16, #0x650
  24184c:	br	x17

0000000000241850 <dual_timestamp_from_realtime@plt>:
  241850:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241854:	ldr	x17, [x16, #1624]
  241858:	add	x16, x16, #0x658
  24185c:	br	x17

0000000000241860 <path_is_absolute@plt>:
  241860:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241864:	ldr	x17, [x16, #1632]
  241868:	add	x16, x16, #0x660
  24186c:	br	x17

0000000000241870 <timespec_load@plt>:
  241870:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241874:	ldr	x17, [x16, #1640]
  241878:	add	x16, x16, #0x668
  24187c:	br	x17

0000000000241880 <get_ctty@plt>:
  241880:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241884:	ldr	x17, [x16, #1648]
  241888:	add	x16, x16, #0x670
  24188c:	br	x17

0000000000241890 <fchown@plt>:
  241890:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241894:	ldr	x17, [x16, #1656]
  241898:	add	x16, x16, #0x678
  24189c:	br	x17

00000000002418a0 <sprintf@plt>:
  2418a0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2418a4:	ldr	x17, [x16, #1664]
  2418a8:	add	x16, x16, #0x680
  2418ac:	br	x17

00000000002418b0 <path_simplify@plt>:
  2418b0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2418b4:	ldr	x17, [x16, #1672]
  2418b8:	add	x16, x16, #0x688
  2418bc:	br	x17

00000000002418c0 <slice_build_subslice@plt>:
  2418c0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2418c4:	ldr	x17, [x16, #1680]
  2418c8:	add	x16, x16, #0x690
  2418cc:	br	x17

00000000002418d0 <unit_name_build@plt>:
  2418d0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2418d4:	ldr	x17, [x16, #1688]
  2418d8:	add	x16, x16, #0x698
  2418dc:	br	x17

00000000002418e0 <fputs@plt>:
  2418e0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2418e4:	ldr	x17, [x16, #1696]
  2418e8:	add	x16, x16, #0x6a0
  2418ec:	br	x17

00000000002418f0 <clean_ipc_by_uid@plt>:
  2418f0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2418f4:	ldr	x17, [x16, #1704]
  2418f8:	add	x16, x16, #0x6a8
  2418fc:	br	x17

0000000000241900 <format_timespan@plt>:
  241900:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241904:	ldr	x17, [x16, #1712]
  241908:	add	x16, x16, #0x6b0
  24190c:	br	x17

0000000000241910 <parse_permille@plt>:
  241910:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241914:	ldr	x17, [x16, #1720]
  241918:	add	x16, x16, #0x6b8
  24191c:	br	x17

0000000000241920 <parse_size@plt>:
  241920:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241924:	ldr	x17, [x16, #1728]
  241928:	add	x16, x16, #0x6c0
  24192c:	br	x17

0000000000241930 <page_size@plt>:
  241930:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241934:	ldr	x17, [x16, #1736]
  241938:	add	x16, x16, #0x6c8
  24193c:	br	x17

0000000000241940 <format_timestamp@plt>:
  241940:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241944:	ldr	x17, [x16, #1744]
  241948:	add	x16, x16, #0x6d0
  24194c:	br	x17

0000000000241950 <acl_get_file@plt>:
  241950:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241954:	ldr	x17, [x16, #1752]
  241958:	add	x16, x16, #0x6d8
  24195c:	br	x17

0000000000241960 <acl_find_uid@plt>:
  241960:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241964:	ldr	x17, [x16, #1760]
  241968:	add	x16, x16, #0x6e0
  24196c:	br	x17

0000000000241970 <acl_delete_entry@plt>:
  241970:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241974:	ldr	x17, [x16, #1768]
  241978:	add	x16, x16, #0x6e8
  24197c:	br	x17

0000000000241980 <acl_get_permset@plt>:
  241980:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241984:	ldr	x17, [x16, #1776]
  241988:	add	x16, x16, #0x6f0
  24198c:	br	x17

0000000000241990 <acl_get_perm@plt>:
  241990:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241994:	ldr	x17, [x16, #1784]
  241998:	add	x16, x16, #0x6f8
  24199c:	br	x17

00000000002419a0 <acl_create_entry@plt>:
  2419a0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2419a4:	ldr	x17, [x16, #1792]
  2419a8:	add	x16, x16, #0x700
  2419ac:	br	x17

00000000002419b0 <acl_set_tag_type@plt>:
  2419b0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2419b4:	ldr	x17, [x16, #1800]
  2419b8:	add	x16, x16, #0x708
  2419bc:	br	x17

00000000002419c0 <acl_set_qualifier@plt>:
  2419c0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2419c4:	ldr	x17, [x16, #1808]
  2419c8:	add	x16, x16, #0x710
  2419cc:	br	x17

00000000002419d0 <acl_add_perm@plt>:
  2419d0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2419d4:	ldr	x17, [x16, #1816]
  2419d8:	add	x16, x16, #0x718
  2419dc:	br	x17

00000000002419e0 <acl_calc_mask@plt>:
  2419e0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2419e4:	ldr	x17, [x16, #1824]
  2419e8:	add	x16, x16, #0x720
  2419ec:	br	x17

00000000002419f0 <acl_set_file@plt>:
  2419f0:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  2419f4:	ldr	x17, [x16, #1832]
  2419f8:	add	x16, x16, #0x728
  2419fc:	br	x17

0000000000241a00 <acl_free@plt>:
  241a00:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241a04:	ldr	x17, [x16, #1840]
  241a08:	add	x16, x16, #0x730
  241a0c:	br	x17

0000000000241a10 <acl_get_entry@plt>:
  241a10:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241a14:	ldr	x17, [x16, #1848]
  241a18:	add	x16, x16, #0x738
  241a1c:	br	x17

0000000000241a20 <acl_get_tag_type@plt>:
  241a20:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241a24:	ldr	x17, [x16, #1856]
  241a28:	add	x16, x16, #0x740
  241a2c:	br	x17

0000000000241a30 <internal_set_new@plt>:
  241a30:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241a34:	ldr	x17, [x16, #1864]
  241a38:	add	x16, x16, #0x748
  241a3c:	br	x17

0000000000241a40 <set_put_strdup@plt>:
  241a40:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241a44:	ldr	x17, [x16, #1872]
  241a48:	add	x16, x16, #0x750
  241a4c:	br	x17

0000000000241a50 <set_consume@plt>:
  241a50:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241a54:	ldr	x17, [x16, #1880]
  241a58:	add	x16, x16, #0x758
  241a5c:	br	x17

0000000000241a60 <set_iterate@plt>:
  241a60:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241a64:	ldr	x17, [x16, #1888]
  241a68:	add	x16, x16, #0x760
  241a6c:	br	x17

0000000000241a70 <__fxstat64@plt>:
  241a70:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241a74:	ldr	x17, [x16, #1896]
  241a78:	add	x16, x16, #0x768
  241a7c:	br	x17

0000000000241a80 <__lxstat64@plt>:
  241a80:	adrp	x16, 255000 <sd_device_enumerator_unref@SD_SHARED>
  241a84:	ldr	x17, [x16, #1904]
  241a88:	add	x16, x16, #0x770
  241a8c:	br	x17
