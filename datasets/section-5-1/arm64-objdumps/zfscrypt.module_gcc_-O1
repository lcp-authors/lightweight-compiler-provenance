
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//zfscrypt.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_gcm_mul>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	mov	x19, x0
      10:	mov	x2, #0x10                  	// #16
      14:	add	x0, sp, #0x20
      18:	bl	0 <grub_memmove>
      1c:	mov	x2, #0x10                  	// #16
      20:	mov	w1, #0x0                   	// #0
      24:	add	x0, sp, #0x30
      28:	bl	0 <grub_memset>
      2c:	mov	w2, #0x0                   	// #0
      30:	mov	w7, #0x0                   	// #0
      34:	b	f0 <grub_gcm_mul+0xf0>
      38:	mov	x9, x3
      3c:	cmp	x5, #0x7
      40:	b.ls	80 <grub_gcm_mul+0x80>  // b.plast
      44:	sub	x8, x5, #0x8
      48:	and	x8, x8, #0xfffffffffffffff8
      4c:	add	x8, x8, #0x8
      50:	mov	x4, x1
      54:	ldr	x6, [x3, x4]
      58:	ldr	x9, [x0, x4]
      5c:	eor	x6, x6, x9
      60:	str	x6, [x3, x4]
      64:	add	x4, x4, #0x8
      68:	cmp	x8, x4
      6c:	b.ne	54 <grub_gcm_mul+0x54>  // b.any
      70:	add	x9, x3, x8
      74:	add	x0, x0, x8
      78:	mov	x3, x9
      7c:	and	x5, x5, #0x7
      80:	cbz	x5, 11c <grub_gcm_mul+0x11c>
      84:	ldrb	w4, [x9, x1]
      88:	ldrb	w6, [x0, x1]
      8c:	eor	w4, w4, w6
      90:	strb	w4, [x3, x1]
      94:	add	x1, x1, #0x1
      98:	cmp	x1, x5
      9c:	b.ne	84 <grub_gcm_mul+0x84>  // b.any
      a0:	b	11c <grub_gcm_mul+0x11c>
      a4:	mov	x5, #0x10                  	// #16
      a8:	add	x0, sp, #0x20
      ac:	add	x3, sp, #0x30
      b0:	orr	x1, x0, x3
      b4:	ands	x1, x1, #0x7
      b8:	b.eq	38 <grub_gcm_mul+0x38>  // b.none
      bc:	ldrb	w1, [x3]
      c0:	ldrb	w4, [x0], #1
      c4:	eor	w1, w1, w4
      c8:	strb	w1, [x3], #1
      cc:	subs	x5, x5, #0x1
      d0:	b.ne	b0 <grub_gcm_mul+0xb0>  // b.any
      d4:	b	11c <grub_gcm_mul+0x11c>
      d8:	ldrb	w0, [sp, #32]
      dc:	eor	w0, w0, #0xffffffe1
      e0:	strb	w0, [sp, #32]
      e4:	add	w2, w2, #0x1
      e8:	cmp	w2, #0x80
      ec:	b.eq	150 <grub_gcm_mul+0x150>  // b.none
      f0:	add	w1, w2, #0x7
      f4:	cmp	w2, #0x0
      f8:	csel	w1, w1, w2, lt  // lt = tstop
      fc:	asr	w1, w1, #3
     100:	ldrb	w3, [x19, w1, sxtw]
     104:	negs	w1, w2
     108:	and	w0, w2, #0x7
     10c:	and	w1, w1, #0x7
     110:	csneg	w0, w0, w1, mi  // mi = first
     114:	lsl	w0, w3, w0
     118:	tbnz	w0, #7, a4 <grub_gcm_mul+0xa4>
     11c:	add	x0, sp, #0x20
     120:	add	x5, x0, #0x10
     124:	mov	w4, w7
     128:	ldrb	w1, [x0]
     12c:	mov	w3, w4
     130:	and	w4, w1, #0x1
     134:	lsl	w3, w3, #7
     138:	orr	w1, w3, w1, lsr #1
     13c:	strb	w1, [x0], #1
     140:	cmp	x0, x5
     144:	b.ne	128 <grub_gcm_mul+0x128>  // b.any
     148:	cbz	w4, e4 <grub_gcm_mul+0xe4>
     14c:	b	d8 <grub_gcm_mul+0xd8>
     150:	mov	x2, #0x10                  	// #16
     154:	add	x1, sp, #0x30
     158:	mov	x0, x19
     15c:	bl	0 <grub_memmove>
     160:	ldr	x19, [sp, #16]
     164:	ldp	x29, x30, [sp], #64
     168:	ret

000000000000016c <algo_decrypt>:
     16c:	stp	x29, x30, [sp, #-208]!
     170:	mov	x29, sp
     174:	stp	x19, x20, [sp, #16]
     178:	stp	x21, x22, [sp, #32]
     17c:	stp	x23, x24, [sp, #48]
     180:	stp	x25, x26, [sp, #64]
     184:	stp	x27, x28, [sp, #80]
     188:	mov	x25, x0
     18c:	str	x2, [sp, #104]
     190:	mov	x27, x3
     194:	mov	x22, x4
     198:	mov	x23, x5
     19c:	mov	x19, x6
     1a0:	mov	w21, w7
     1a4:	cbz	x1, 274 <algo_decrypt+0x108>
     1a8:	mov	w24, #0x4                   	// #4
     1ac:	cmp	x1, #0x1
     1b0:	b.ne	5cc <algo_decrypt+0x460>  // b.any
     1b4:	mov	x2, #0x10                  	// #16
     1b8:	mov	w1, #0x0                   	// #0
     1bc:	add	x0, sp, #0xa0
     1c0:	bl	0 <grub_memset>
     1c4:	mov	x3, #0x10                  	// #16
     1c8:	add	x2, sp, #0xa0
     1cc:	add	x1, sp, #0xb0
     1d0:	mov	x0, x25
     1d4:	bl	0 <grub_crypto_ecb_encrypt>
     1d8:	mov	w24, w0
     1dc:	cbnz	w0, 5cc <algo_decrypt+0x460>
     1e0:	mov	w7, #0xf                   	// #15
     1e4:	sub	w21, w7, w21
     1e8:	cmp	w21, #0xc
     1ec:	b.eq	5f4 <algo_decrypt+0x488>  // b.none
     1f0:	mov	x2, #0x10                  	// #16
     1f4:	mov	w1, #0x0                   	// #0
     1f8:	add	x0, sp, #0x80
     1fc:	bl	0 <grub_memset>
     200:	mov	w2, w21
     204:	mov	x1, x19
     208:	add	x0, sp, #0x80
     20c:	bl	0 <grub_memmove>
     210:	add	x1, sp, #0xb0
     214:	add	x0, sp, #0x80
     218:	bl	0 <grub_gcm_mul>
     21c:	ubfiz	w21, w21, #3, #5
     220:	ldrb	w0, [sp, #143]
     224:	eor	w21, w0, w21
     228:	strb	w21, [sp, #143]
     22c:	add	x1, sp, #0xb0
     230:	add	x0, sp, #0x80
     234:	bl	0 <grub_gcm_mul>
     238:	mov	x3, #0x10                  	// #16
     23c:	add	x2, sp, #0x80
     240:	add	x1, sp, #0xc0
     244:	mov	x0, x25
     248:	bl	0 <grub_crypto_ecb_encrypt>
     24c:	mov	w24, w0
     250:	cbnz	w0, 5cc <algo_decrypt+0x460>
     254:	add	x0, x22, #0xf
     258:	lsr	x1, x0, #4
     25c:	str	x1, [sp, #112]
     260:	cmp	x0, #0xf
     264:	b.ls	7cc <algo_decrypt+0x660>  // b.plast
     268:	mov	w26, w24
     26c:	mov	x28, #0x10                  	// #16
     270:	b	758 <algo_decrypt+0x5ec>
     274:	mov	w2, #0xf                   	// #15
     278:	sub	w0, w2, w7
     27c:	str	w0, [sp, #124]
     280:	sub	w2, w2, w7
     284:	mov	x1, x6
     288:	add	x0, sp, #0xa1
     28c:	bl	0 <grub_memmove>
     290:	sub	w19, w21, #0x1
     294:	and	w19, w19, #0xff
     298:	ldr	w0, [sp, #208]
     29c:	sub	w0, w0, #0x2
     2a0:	lsr	w0, w0, #1
     2a4:	ubfiz	w0, w0, #3, #5
     2a8:	orr	w0, w19, w0
     2ac:	strb	w0, [sp, #160]
     2b0:	cbz	w21, 2dc <algo_decrypt+0x170>
     2b4:	mov	w0, #0x0                   	// #0
     2b8:	mov	w4, #0xf                   	// #15
     2bc:	add	x3, sp, #0xa0
     2c0:	sub	w2, w4, w0
     2c4:	lsl	w1, w0, #3
     2c8:	lsr	x1, x22, x1
     2cc:	strb	w1, [x3, w2, uxtw]
     2d0:	add	w0, w0, #0x1
     2d4:	cmp	w21, w0
     2d8:	b.ne	2c0 <algo_decrypt+0x154>  // b.any
     2dc:	mov	x3, #0x10                  	// #16
     2e0:	add	x2, sp, #0xa0
     2e4:	add	x1, sp, #0xc0
     2e8:	mov	x0, x25
     2ec:	bl	0 <grub_crypto_ecb_encrypt>
     2f0:	mov	w24, w0
     2f4:	cbnz	w0, 5cc <algo_decrypt+0x460>
     2f8:	strb	w19, [sp, #160]
     2fc:	add	x0, x22, #0xf
     300:	lsr	x1, x0, #4
     304:	str	x1, [sp, #112]
     308:	cmp	x0, #0xf
     30c:	b.ls	4e0 <algo_decrypt+0x374>  // b.plast
     310:	mov	w26, w24
     314:	mov	x28, #0x10                  	// #16
     318:	b	440 <algo_decrypt+0x2d4>
     31c:	cmp	x1, #0x7
     320:	b.ls	360 <algo_decrypt+0x1f4>  // b.plast
     324:	sub	x3, x1, #0x8
     328:	and	x3, x3, #0xfffffffffffffff8
     32c:	add	x3, x3, #0x8
     330:	mov	x6, x0
     334:	ldr	x7, [x20, x6]
     338:	ldr	x8, [x4, x6]
     33c:	eor	x7, x7, x8
     340:	str	x7, [x5, x6]
     344:	add	x6, x6, #0x8
     348:	cmp	x6, x3
     34c:	b.ne	334 <algo_decrypt+0x1c8>  // b.any
     350:	add	x20, x20, x3
     354:	add	x4, x4, x3
     358:	add	x5, x5, x3
     35c:	and	x1, x1, #0x7
     360:	cbz	x1, 384 <algo_decrypt+0x218>
     364:	ldrb	w3, [x20, x0]
     368:	ldrb	w6, [x4, x0]
     36c:	eor	w3, w3, w6
     370:	strb	w3, [x5, x0]
     374:	add	x0, x0, #0x1
     378:	cmp	x0, x1
     37c:	b.ne	364 <algo_decrypt+0x1f8>  // b.any
     380:	cbz	x19, 418 <algo_decrypt+0x2ac>
     384:	add	x1, sp, #0xc0
     388:	orr	x0, x2, x1
     38c:	ands	x0, x0, #0x7
     390:	b.eq	3b0 <algo_decrypt+0x244>  // b.none
     394:	ldrb	w0, [x1]
     398:	ldrb	w3, [x2], #1
     39c:	eor	w0, w0, w3
     3a0:	strb	w0, [x1], #1
     3a4:	subs	x19, x19, #0x1
     3a8:	b.ne	388 <algo_decrypt+0x21c>  // b.any
     3ac:	b	418 <algo_decrypt+0x2ac>
     3b0:	mov	x4, x1
     3b4:	cmp	x19, #0x7
     3b8:	b.ls	3f8 <algo_decrypt+0x28c>  // b.plast
     3bc:	sub	x3, x19, #0x8
     3c0:	and	x3, x3, #0xfffffffffffffff8
     3c4:	add	x3, x3, #0x8
     3c8:	mov	x4, x0
     3cc:	ldr	x5, [x1, x4]
     3d0:	ldr	x6, [x2, x4]
     3d4:	eor	x5, x5, x6
     3d8:	str	x5, [x1, x4]
     3dc:	add	x4, x4, #0x8
     3e0:	cmp	x3, x4
     3e4:	b.ne	3cc <algo_decrypt+0x260>  // b.any
     3e8:	add	x4, x1, x3
     3ec:	add	x2, x2, x3
     3f0:	mov	x1, x4
     3f4:	and	x19, x19, #0x7
     3f8:	cbz	x19, 418 <algo_decrypt+0x2ac>
     3fc:	ldrb	w3, [x4, x0]
     400:	ldrb	w5, [x2, x0]
     404:	eor	w3, w3, w5
     408:	strb	w3, [x1, x0]
     40c:	add	x0, x0, #0x1
     410:	cmp	x0, x19
     414:	b.ne	3fc <algo_decrypt+0x290>  // b.any
     418:	mov	x3, x28
     41c:	add	x2, sp, #0xc0
     420:	mov	x1, x2
     424:	mov	x0, x25
     428:	bl	0 <grub_crypto_ecb_encrypt>
     42c:	cbnz	w0, 5ec <algo_decrypt+0x480>
     430:	add	w26, w26, #0x1
     434:	ldr	x0, [sp, #112]
     438:	cmp	x0, w26, uxtw
     43c:	b.ls	4e0 <algo_decrypt+0x374>  // b.plast
     440:	lsl	w20, w26, #4
     444:	sub	x19, x22, x20
     448:	cmp	x19, #0x10
     44c:	csel	x19, x19, x28, cc  // cc = lo, ul, last
     450:	cbz	w21, 480 <algo_decrypt+0x314>
     454:	mov	w0, w24
     458:	add	w2, w26, #0x1
     45c:	mov	w1, #0xf                   	// #15
     460:	sub	w3, w1, w0
     464:	lsl	w1, w0, #3
     468:	lsr	w1, w2, w1
     46c:	add	x4, sp, #0xa0
     470:	strb	w1, [x4, w3, uxtw]
     474:	add	w0, w0, #0x1
     478:	cmp	w21, w0
     47c:	b.ne	45c <algo_decrypt+0x2f0>  // b.any
     480:	mov	x3, x28
     484:	add	x2, sp, #0xa0
     488:	add	x1, sp, #0xb0
     48c:	mov	x0, x25
     490:	bl	0 <grub_crypto_ecb_encrypt>
     494:	cbnz	w0, 5c8 <algo_decrypt+0x45c>
     498:	ldr	x0, [sp, #104]
     49c:	add	x2, x0, x20
     4a0:	add	x20, x27, x20
     4a4:	mov	x1, x19
     4a8:	mov	x5, x2
     4ac:	add	x4, sp, #0xb0
     4b0:	cbz	x19, 380 <algo_decrypt+0x214>
     4b4:	orr	x0, x4, x20
     4b8:	orr	x0, x5, x0
     4bc:	ands	x0, x0, #0x7
     4c0:	b.eq	31c <algo_decrypt+0x1b0>  // b.none
     4c4:	ldrb	w0, [x20], #1
     4c8:	ldrb	w3, [x4], #1
     4cc:	eor	w0, w0, w3
     4d0:	strb	w0, [x5], #1
     4d4:	subs	x1, x1, #0x1
     4d8:	b.ne	4b4 <algo_decrypt+0x348>  // b.any
     4dc:	b	380 <algo_decrypt+0x214>
     4e0:	cbz	w21, 500 <algo_decrypt+0x394>
     4e4:	mov	w0, #0xf                   	// #15
     4e8:	add	x1, sp, #0xa0
     4ec:	strb	wzr, [x1, w0, uxtw]
     4f0:	sub	w0, w0, #0x1
     4f4:	ldr	w2, [sp, #124]
     4f8:	cmp	w2, w0
     4fc:	b.ne	4ec <algo_decrypt+0x380>  // b.any
     500:	mov	x3, #0x10                  	// #16
     504:	add	x2, sp, #0xa0
     508:	add	x1, sp, #0xb0
     50c:	mov	x0, x25
     510:	bl	0 <grub_crypto_ecb_encrypt>
     514:	mov	w24, w0
     518:	cbnz	w0, 5cc <algo_decrypt+0x460>
     51c:	cbz	x23, 5cc <algo_decrypt+0x460>
     520:	ldr	w3, [sp, #208]
     524:	ldr	w0, [sp, #208]
     528:	add	x2, sp, #0xb0
     52c:	add	x1, sp, #0xc0
     530:	cbz	w0, 5cc <algo_decrypt+0x460>
     534:	orr	x0, x2, x1
     538:	orr	x0, x23, x0
     53c:	ands	x0, x0, #0x7
     540:	b.eq	560 <algo_decrypt+0x3f4>  // b.none
     544:	ldrb	w0, [x1], #1
     548:	ldrb	w4, [x2], #1
     54c:	eor	w0, w0, w4
     550:	strb	w0, [x23], #1
     554:	subs	x3, x3, #0x1
     558:	b.ne	534 <algo_decrypt+0x3c8>  // b.any
     55c:	b	5cc <algo_decrypt+0x460>
     560:	cmp	x3, #0x7
     564:	b.ls	5a4 <algo_decrypt+0x438>  // b.plast
     568:	sub	x7, x3, #0x8
     56c:	and	x7, x7, #0xfffffffffffffff8
     570:	add	x7, x7, #0x8
     574:	mov	x4, x0
     578:	ldr	x5, [x1, x4]
     57c:	ldr	x6, [x2, x4]
     580:	eor	x5, x5, x6
     584:	str	x5, [x23, x4]
     588:	add	x4, x4, #0x8
     58c:	cmp	x7, x4
     590:	b.ne	578 <algo_decrypt+0x40c>  // b.any
     594:	add	x1, x1, x7
     598:	add	x2, x2, x7
     59c:	add	x23, x23, x7
     5a0:	and	x3, x3, #0x7
     5a4:	cbz	x3, 5cc <algo_decrypt+0x460>
     5a8:	ldrb	w4, [x1, x0]
     5ac:	ldrb	w5, [x2, x0]
     5b0:	eor	w4, w4, w5
     5b4:	strb	w4, [x23, x0]
     5b8:	add	x0, x0, #0x1
     5bc:	cmp	x0, x3
     5c0:	b.ne	5a8 <algo_decrypt+0x43c>  // b.any
     5c4:	b	5cc <algo_decrypt+0x460>
     5c8:	mov	w24, w0
     5cc:	mov	w0, w24
     5d0:	ldp	x19, x20, [sp, #16]
     5d4:	ldp	x21, x22, [sp, #32]
     5d8:	ldp	x23, x24, [sp, #48]
     5dc:	ldp	x25, x26, [sp, #64]
     5e0:	ldp	x27, x28, [sp, #80]
     5e4:	ldp	x29, x30, [sp], #208
     5e8:	ret
     5ec:	mov	w24, w0
     5f0:	b	5cc <algo_decrypt+0x460>
     5f4:	mov	x2, #0xc                   	// #12
     5f8:	mov	x1, x19
     5fc:	add	x0, sp, #0x80
     600:	bl	0 <grub_memmove>
     604:	strb	wzr, [sp, #140]
     608:	strb	wzr, [sp, #141]
     60c:	strb	wzr, [sp, #142]
     610:	mov	w0, #0x1                   	// #1
     614:	strb	w0, [sp, #143]
     618:	b	238 <algo_decrypt+0xcc>
     61c:	mov	x5, x1
     620:	cmp	x2, #0x7
     624:	b.ls	664 <algo_decrypt+0x4f8>  // b.plast
     628:	sub	x4, x2, #0x8
     62c:	and	x4, x4, #0xfffffffffffffff8
     630:	add	x4, x4, #0x8
     634:	mov	x5, x0
     638:	ldr	x6, [x1, x5]
     63c:	ldr	x7, [x3, x5]
     640:	eor	x6, x6, x7
     644:	str	x6, [x1, x5]
     648:	add	x5, x5, #0x8
     64c:	cmp	x5, x4
     650:	b.ne	638 <algo_decrypt+0x4cc>  // b.any
     654:	add	x5, x1, x4
     658:	add	x3, x3, x4
     65c:	mov	x1, x5
     660:	and	x2, x2, #0x7
     664:	cbz	x2, 684 <algo_decrypt+0x518>
     668:	ldrb	w4, [x5, x0]
     66c:	ldrb	w6, [x3, x0]
     670:	eor	w4, w4, w6
     674:	strb	w4, [x1, x0]
     678:	add	x0, x0, #0x1
     67c:	cmp	x0, x2
     680:	b.ne	668 <algo_decrypt+0x4fc>  // b.any
     684:	add	x1, sp, #0xb0
     688:	add	x0, sp, #0xa0
     68c:	bl	0 <grub_gcm_mul>
     690:	mov	x3, x28
     694:	add	x2, sp, #0x80
     698:	add	x1, sp, #0x90
     69c:	mov	x0, x25
     6a0:	bl	0 <grub_crypto_ecb_encrypt>
     6a4:	cbnz	w0, 8ac <algo_decrypt+0x740>
     6a8:	ldr	x0, [sp, #104]
     6ac:	add	x20, x0, x20
     6b0:	add	x2, sp, #0x90
     6b4:	cbz	x19, 748 <algo_decrypt+0x5dc>
     6b8:	orr	x0, x2, x21
     6bc:	orr	x0, x20, x0
     6c0:	ands	x0, x0, #0x7
     6c4:	b.eq	6e4 <algo_decrypt+0x578>  // b.none
     6c8:	ldrb	w0, [x21], #1
     6cc:	ldrb	w1, [x2], #1
     6d0:	eor	w0, w0, w1
     6d4:	strb	w0, [x20], #1
     6d8:	subs	x19, x19, #0x1
     6dc:	b.ne	6b8 <algo_decrypt+0x54c>  // b.any
     6e0:	b	748 <algo_decrypt+0x5dc>
     6e4:	cmp	x19, #0x7
     6e8:	b.ls	728 <algo_decrypt+0x5bc>  // b.plast
     6ec:	sub	x1, x19, #0x8
     6f0:	and	x1, x1, #0xfffffffffffffff8
     6f4:	add	x1, x1, #0x8
     6f8:	mov	x3, x0
     6fc:	ldr	x4, [x21, x3]
     700:	ldr	x5, [x2, x3]
     704:	eor	x4, x4, x5
     708:	str	x4, [x20, x3]
     70c:	add	x3, x3, #0x8
     710:	cmp	x3, x1
     714:	b.ne	6fc <algo_decrypt+0x590>  // b.any
     718:	add	x21, x21, x1
     71c:	add	x2, x2, x1
     720:	add	x20, x20, x1
     724:	and	x19, x19, #0x7
     728:	cbz	x19, 748 <algo_decrypt+0x5dc>
     72c:	ldrb	w1, [x21, x0]
     730:	ldrb	w3, [x2, x0]
     734:	eor	w1, w1, w3
     738:	strb	w1, [x20, x0]
     73c:	add	x0, x0, #0x1
     740:	cmp	x0, x19
     744:	b.ne	72c <algo_decrypt+0x5c0>  // b.any
     748:	add	w26, w26, #0x1
     74c:	ldr	x0, [sp, #112]
     750:	cmp	x0, w26, uxtw
     754:	b.ls	7cc <algo_decrypt+0x660>  // b.plast
     758:	lsl	w20, w26, #4
     75c:	sub	x19, x22, x20
     760:	cmp	x19, #0x10
     764:	csel	x19, x19, x28, cc  // cc = lo, ul, last
     768:	add	x1, sp, #0x80
     76c:	ldrb	w0, [x1, #15]
     770:	add	w0, w0, #0x1
     774:	and	w0, w0, #0xff
     778:	strb	w0, [x1, #15]
     77c:	cbnz	w0, 790 <algo_decrypt+0x624>
     780:	sub	x1, x1, #0x1
     784:	add	x0, sp, #0x7c
     788:	cmp	x0, x1
     78c:	b.ne	76c <algo_decrypt+0x600>  // b.any
     790:	add	x21, x27, x20
     794:	mov	x2, x19
     798:	mov	x3, x21
     79c:	add	x1, sp, #0xa0
     7a0:	cbz	x19, 684 <algo_decrypt+0x518>
     7a4:	orr	x0, x3, x1
     7a8:	ands	x0, x0, #0x7
     7ac:	b.eq	61c <algo_decrypt+0x4b0>  // b.none
     7b0:	ldrb	w0, [x1]
     7b4:	ldrb	w4, [x3], #1
     7b8:	eor	w0, w0, w4
     7bc:	strb	w0, [x1], #1
     7c0:	subs	x2, x2, #0x1
     7c4:	b.ne	7a4 <algo_decrypt+0x638>  // b.any
     7c8:	b	684 <algo_decrypt+0x518>
     7cc:	lsl	x22, x22, #3
     7d0:	add	x2, sp, #0xaf
     7d4:	mov	w0, w24
     7d8:	lsr	x3, x22, x0
     7dc:	ldrb	w1, [x2]
     7e0:	eor	w1, w1, w3
     7e4:	strb	w1, [x2], #-1
     7e8:	add	w0, w0, #0x8
     7ec:	cmp	w0, #0x40
     7f0:	b.ne	7d8 <algo_decrypt+0x66c>  // b.any
     7f4:	add	x1, sp, #0xb0
     7f8:	add	x0, sp, #0xa0
     7fc:	bl	0 <grub_gcm_mul>
     800:	cbz	x23, 5cc <algo_decrypt+0x460>
     804:	ldr	w3, [sp, #208]
     808:	ldr	w0, [sp, #208]
     80c:	add	x2, sp, #0xc0
     810:	add	x1, sp, #0xa0
     814:	cbz	w0, 5cc <algo_decrypt+0x460>
     818:	orr	x0, x2, x1
     81c:	orr	x0, x23, x0
     820:	ands	x0, x0, #0x7
     824:	b.eq	844 <algo_decrypt+0x6d8>  // b.none
     828:	ldrb	w0, [x1], #1
     82c:	ldrb	w4, [x2], #1
     830:	eor	w0, w0, w4
     834:	strb	w0, [x23], #1
     838:	subs	x3, x3, #0x1
     83c:	b.ne	818 <algo_decrypt+0x6ac>  // b.any
     840:	b	5cc <algo_decrypt+0x460>
     844:	cmp	x3, #0x7
     848:	b.ls	888 <algo_decrypt+0x71c>  // b.plast
     84c:	sub	x7, x3, #0x8
     850:	and	x7, x7, #0xfffffffffffffff8
     854:	add	x7, x7, #0x8
     858:	mov	x4, x0
     85c:	ldr	x5, [x1, x4]
     860:	ldr	x6, [x2, x4]
     864:	eor	x5, x5, x6
     868:	str	x5, [x23, x4]
     86c:	add	x4, x4, #0x8
     870:	cmp	x4, x7
     874:	b.ne	85c <algo_decrypt+0x6f0>  // b.any
     878:	add	x1, x1, x7
     87c:	add	x2, x2, x7
     880:	add	x23, x23, x7
     884:	and	x3, x3, #0x7
     888:	cbz	x3, 5cc <algo_decrypt+0x460>
     88c:	ldrb	w4, [x1, x0]
     890:	ldrb	w5, [x2, x0]
     894:	eor	w4, w4, w5
     898:	strb	w4, [x23, x0]
     89c:	add	x0, x0, #0x1
     8a0:	cmp	x0, x3
     8a4:	b.ne	88c <algo_decrypt+0x720>  // b.any
     8a8:	b	5cc <algo_decrypt+0x460>
     8ac:	mov	w24, w0
     8b0:	b	5cc <algo_decrypt+0x460>

00000000000008b4 <grub_zfs_load_key_real>:
     8b4:	sub	sp, sp, #0xe0
     8b8:	stp	x29, x30, [sp, #16]
     8bc:	add	x29, sp, #0x10
     8c0:	stp	x19, x20, [sp, #32]
     8c4:	str	x2, [sp, #120]
     8c8:	cmp	x1, #0x88
     8cc:	b.ne	920 <grub_zfs_load_key_real+0x6c>  // b.any
     8d0:	stp	x21, x22, [sp, #48]
     8d4:	stp	x23, x24, [sp, #64]
     8d8:	mov	x21, x0
     8dc:	mov	x24, x3
     8e0:	mov	x2, #0x10                  	// #16
     8e4:	adrp	x0, 0 <grub_gcm_mul>
     8e8:	ldr	x1, [x0]
     8ec:	add	x0, x21, #0x38
     8f0:	bl	0 <grub_memcmp>
     8f4:	mov	w23, #0x10                  	// #16
     8f8:	cbnz	w0, 95c <grub_zfs_load_key_real+0xa8>
     8fc:	adrp	x0, 0 <grub_gcm_mul>
     900:	ldr	x0, [x0]
     904:	ldr	x20, [x0]
     908:	cbz	x20, bf0 <grub_zfs_load_key_real+0x33c>
     90c:	stp	x25, x26, [sp, #80]
     910:	add	x25, x21, #0x18
     914:	mov	w22, w23
     918:	add	x26, x25, x22
     91c:	b	a40 <grub_zfs_load_key_real+0x18c>
     920:	mov	x4, x1
     924:	adrp	x0, 0 <grub_gcm_mul>
     928:	ldr	x3, [x0]
     92c:	adrp	x0, 0 <grub_gcm_mul>
     930:	ldr	x2, [x0]
     934:	mov	w1, #0x140                 	// #320
     938:	adrp	x0, 0 <grub_gcm_mul>
     93c:	ldr	x0, [x0]
     940:	bl	0 <grub_real_dprintf>
     944:	mov	x20, #0x0                   	// #0
     948:	mov	x0, x20
     94c:	ldp	x19, x20, [sp, #32]
     950:	ldp	x29, x30, [sp, #16]
     954:	add	sp, sp, #0xe0
     958:	ret
     95c:	adrp	x0, 0 <grub_gcm_mul>
     960:	ldr	x1, [x0]
     964:	mov	x2, #0x8                   	// #8
     968:	add	x1, x1, #0x18
     96c:	add	x0, x21, #0x40
     970:	bl	0 <grub_memcmp>
     974:	cmp	w0, #0x0
     978:	mov	w23, #0x18                  	// #24
     97c:	mov	w0, #0x20                  	// #32
     980:	csel	w23, w23, w0, eq  // eq = none
     984:	b	8fc <grub_zfs_load_key_real+0x48>
     988:	adrp	x0, 0 <grub_gcm_mul>
     98c:	ldr	x0, [x0]
     990:	str	wzr, [x0]
     994:	mov	x20, x19
     998:	ldp	x21, x22, [sp, #48]
     99c:	ldp	x23, x24, [sp, #64]
     9a0:	ldp	x25, x26, [sp, #80]
     9a4:	b	948 <grub_zfs_load_key_real+0x94>
     9a8:	mov	x7, x22
     9ac:	add	x6, sp, #0xc0
     9b0:	mov	w5, #0x3e8                 	// #1000
     9b4:	mov	x4, #0x8                   	// #8
     9b8:	add	x3, sp, #0x78
     9bc:	ldr	x2, [x20, #8]
     9c0:	add	x1, x20, #0x18
     9c4:	adrp	x0, 0 <grub_gcm_mul>
     9c8:	ldr	x0, [x0]
     9cc:	bl	0 <grub_crypto_pbkdf2>
     9d0:	cbz	w0, a84 <grub_zfs_load_key_real+0x1d0>
     9d4:	adrp	x0, 0 <grub_gcm_mul>
     9d8:	ldr	x0, [x0]
     9dc:	str	wzr, [x0]
     9e0:	mov	x0, x19
     9e4:	bl	0 <grub_free>
     9e8:	b	a38 <grub_zfs_load_key_real+0x184>
     9ec:	adrp	x0, 0 <grub_gcm_mul>
     9f0:	ldr	x0, [x0]
     9f4:	str	wzr, [x0]
     9f8:	mov	x0, x19
     9fc:	bl	0 <grub_free>
     a00:	b	a38 <grub_zfs_load_key_real+0x184>
     a04:	adrp	x0, 0 <grub_gcm_mul>
     a08:	ldr	x3, [x0]
     a0c:	adrp	x0, 0 <grub_gcm_mul>
     a10:	ldr	x2, [x0]
     a14:	mov	w1, #0x177                 	// #375
     a18:	adrp	x0, 0 <grub_gcm_mul>
     a1c:	ldr	x0, [x0]
     a20:	bl	0 <grub_real_dprintf>
     a24:	adrp	x0, 0 <grub_gcm_mul>
     a28:	ldr	x0, [x0]
     a2c:	str	wzr, [x0]
     a30:	mov	x0, x19
     a34:	bl	0 <grub_free>
     a38:	ldr	x20, [x20]
     a3c:	cbz	x20, be0 <grub_zfs_load_key_real+0x32c>
     a40:	adrp	x0, 0 <grub_gcm_mul>
     a44:	ldr	x0, [x0]
     a48:	bl	0 <grub_crypto_cipher_open>
     a4c:	mov	x19, x0
     a50:	cbz	x0, 988 <grub_zfs_load_key_real+0xd4>
     a54:	mov	x2, #0x20                  	// #32
     a58:	mov	w1, #0x0                   	// #0
     a5c:	add	x0, sp, #0xc0
     a60:	bl	0 <grub_memset>
     a64:	ldr	w0, [x20, #16]
     a68:	cbnz	w0, 9a8 <grub_zfs_load_key_real+0xf4>
     a6c:	ldr	x2, [x20, #8]
     a70:	cmp	x2, x22
     a74:	csel	x2, x2, x22, ls  // ls = plast
     a78:	add	x1, x20, #0x18
     a7c:	add	x0, sp, #0xc0
     a80:	bl	0 <grub_memmove>
     a84:	mov	w2, w23
     a88:	add	x1, sp, #0xc0
     a8c:	mov	x0, x19
     a90:	bl	0 <grub_crypto_cipher_set_key>
     a94:	cbnz	w0, 9ec <grub_zfs_load_key_real+0x138>
     a98:	mov	w0, #0x10                  	// #16
     a9c:	str	w0, [sp]
     aa0:	mov	w7, #0x2                   	// #2
     aa4:	add	x6, x21, #0x48
     aa8:	add	x5, sp, #0xa0
     aac:	mov	x4, #0x20                  	// #32
     ab0:	add	x3, x21, #0x58
     ab4:	add	x2, sp, #0x80
     ab8:	mov	x1, x24
     abc:	mov	x0, x19
     ac0:	bl	16c <algo_decrypt>
     ac4:	cbnz	w0, a04 <grub_zfs_load_key_real+0x150>
     ac8:	mov	x2, #0x10                  	// #16
     acc:	add	x1, x21, #0x78
     ad0:	add	x0, sp, #0xa0
     ad4:	bl	0 <grub_crypto_memcmp>
     ad8:	cbnz	w0, a04 <grub_zfs_load_key_real+0x150>
     adc:	mov	w0, #0x10                  	// #16
     ae0:	str	w0, [sp]
     ae4:	mov	w7, #0x2                   	// #2
     ae8:	add	x6, x21, #0x8
     aec:	add	x5, sp, #0xa0
     af0:	mov	x4, x22
     af4:	mov	x3, x25
     af8:	add	x2, sp, #0x80
     afc:	mov	x1, x24
     b00:	mov	x0, x19
     b04:	bl	16c <algo_decrypt>
     b08:	cbnz	w0, b20 <grub_zfs_load_key_real+0x26c>
     b0c:	mov	x2, #0x10                  	// #16
     b10:	mov	x1, x26
     b14:	add	x0, sp, #0xa0
     b18:	bl	0 <grub_crypto_memcmp>
     b1c:	cbz	w0, b58 <grub_zfs_load_key_real+0x2a4>
     b20:	adrp	x0, 0 <grub_gcm_mul>
     b24:	ldr	x3, [x0]
     b28:	adrp	x0, 0 <grub_gcm_mul>
     b2c:	ldr	x2, [x0]
     b30:	mov	w1, #0x181                 	// #385
     b34:	adrp	x0, 0 <grub_gcm_mul>
     b38:	ldr	x0, [x0]
     b3c:	bl	0 <grub_real_dprintf>
     b40:	adrp	x0, 0 <grub_gcm_mul>
     b44:	ldr	x0, [x0]
     b48:	str	wzr, [x0]
     b4c:	mov	x0, x19
     b50:	bl	0 <grub_free>
     b54:	b	a38 <grub_zfs_load_key_real+0x184>
     b58:	str	x27, [sp, #96]
     b5c:	adrp	x0, 0 <grub_gcm_mul>
     b60:	ldr	x0, [x0]
     b64:	bl	0 <grub_crypto_cipher_open>
     b68:	mov	x27, x0
     b6c:	cbz	x0, ba0 <grub_zfs_load_key_real+0x2ec>
     b70:	mov	w2, w23
     b74:	add	x1, sp, #0x80
     b78:	bl	0 <grub_crypto_cipher_set_key>
     b7c:	cbnz	w0, bbc <grub_zfs_load_key_real+0x308>
     b80:	mov	x0, x19
     b84:	bl	0 <grub_free>
     b88:	mov	x20, x27
     b8c:	ldp	x21, x22, [sp, #48]
     b90:	ldp	x23, x24, [sp, #64]
     b94:	ldp	x25, x26, [sp, #80]
     b98:	ldr	x27, [sp, #96]
     b9c:	b	948 <grub_zfs_load_key_real+0x94>
     ba0:	adrp	x0, 0 <grub_gcm_mul>
     ba4:	ldr	x0, [x0]
     ba8:	str	wzr, [x0]
     bac:	mov	x0, x19
     bb0:	bl	0 <grub_free>
     bb4:	ldr	x27, [sp, #96]
     bb8:	b	a38 <grub_zfs_load_key_real+0x184>
     bbc:	adrp	x0, 0 <grub_gcm_mul>
     bc0:	ldr	x0, [x0]
     bc4:	str	wzr, [x0]
     bc8:	mov	x0, x27
     bcc:	bl	0 <grub_free>
     bd0:	mov	x0, x19
     bd4:	bl	0 <grub_free>
     bd8:	ldr	x27, [sp, #96]
     bdc:	b	a38 <grub_zfs_load_key_real+0x184>
     be0:	ldp	x21, x22, [sp, #48]
     be4:	ldp	x23, x24, [sp, #64]
     be8:	ldp	x25, x26, [sp, #80]
     bec:	b	948 <grub_zfs_load_key_real+0x94>
     bf0:	ldp	x21, x22, [sp, #48]
     bf4:	ldp	x23, x24, [sp, #64]
     bf8:	b	948 <grub_zfs_load_key_real+0x94>
     bfc:	nop
	...

0000000000000c48 <grub_zfs_decrypt_real>:
     c48:	sub	sp, sp, #0x70
     c4c:	stp	x29, x30, [sp, #16]
     c50:	add	x29, sp, #0x10
     c54:	stp	x19, x20, [sp, #32]
     c58:	stp	x21, x22, [sp, #48]
     c5c:	stp	x23, x24, [sp, #64]
     c60:	mov	x21, x0
     c64:	mov	x23, x1
     c68:	mov	x1, x2
     c6c:	mov	x22, x3
     c70:	mov	x24, x4
     c74:	mov	x20, x5
     c78:	mov	w19, w6
     c7c:	mov	x2, #0x10                  	// #16
     c80:	add	x0, sp, #0x50
     c84:	bl	0 <grub_memmove>
     c88:	cbz	w19, ca8 <grub_zfs_decrypt_real+0x60>
     c8c:	add	x2, sp, #0x50
     c90:	add	x0, x2, #0x10
     c94:	ldr	w7, [x2]
     c98:	rev	w7, w7
     c9c:	str	w7, [x2], #4
     ca0:	cmp	x2, x0
     ca4:	b.ne	c94 <grub_zfs_decrypt_real+0x4c>  // b.any
     ca8:	cbz	x21, cec <grub_zfs_decrypt_real+0xa4>
     cac:	mov	w0, #0xc                   	// #12
     cb0:	str	w0, [sp]
     cb4:	mov	w7, #0x3                   	// #3
     cb8:	add	x6, sp, #0x54
     cbc:	add	x5, sp, #0x60
     cc0:	mov	x4, x24
     cc4:	mov	x3, x22
     cc8:	mov	x2, x22
     ccc:	mov	x1, x23
     cd0:	mov	x0, x21
     cd4:	bl	16c <algo_decrypt>
     cd8:	add	x3, sp, #0x60
     cdc:	mov	x1, #0x0                   	// #0
     ce0:	cbz	w0, d38 <grub_zfs_decrypt_real+0xf0>
     ce4:	bl	0 <grub_crypto_gcry_error>
     ce8:	b	cfc <grub_zfs_decrypt_real+0xb4>
     cec:	adrp	x0, 0 <grub_gcm_mul>
     cf0:	ldr	x1, [x0]
     cf4:	mov	w0, #0x1e                  	// #30
     cf8:	bl	0 <grub_error>
     cfc:	ldp	x19, x20, [sp, #32]
     d00:	ldp	x21, x22, [sp, #48]
     d04:	ldp	x23, x24, [sp, #64]
     d08:	ldp	x29, x30, [sp, #16]
     d0c:	add	sp, sp, #0x70
     d10:	ret
     d14:	ldr	w4, [x20, x1]
     d18:	ldr	w2, [x3]
     d1c:	rev	w2, w2
     d20:	cmp	w4, w2
     d24:	b.ne	d48 <grub_zfs_decrypt_real+0x100>  // b.any
     d28:	add	x3, x3, #0x4
     d2c:	add	x1, x1, #0x4
     d30:	cmp	x1, #0xc
     d34:	b.eq	cfc <grub_zfs_decrypt_real+0xb4>  // b.none
     d38:	cbnz	w19, d14 <grub_zfs_decrypt_real+0xcc>
     d3c:	ldr	w4, [x20, x1]
     d40:	rev	w4, w4
     d44:	b	d18 <grub_zfs_decrypt_real+0xd0>
     d48:	adrp	x0, 0 <grub_gcm_mul>
     d4c:	ldr	x1, [x0]
     d50:	mov	w0, #0x9                   	// #9
     d54:	bl	0 <grub_error>
     d58:	b	cfc <grub_zfs_decrypt_real+0xb4>
     d5c:	nop
	...

0000000000000d70 <grub_zfs_add_key>:
     d70:	stp	x29, x30, [sp, #-48]!
     d74:	mov	x29, sp
     d78:	stp	x19, x20, [sp, #16]
     d7c:	stp	x21, x22, [sp, #32]
     d80:	mov	x22, x0
     d84:	mov	w21, w2
     d88:	cmp	x1, #0x20
     d8c:	ccmp	w2, #0x0, #0x0, hi  // hi = pmore
     d90:	mov	x20, #0x20                  	// #32
     d94:	csel	x20, x1, x20, ne  // ne = any
     d98:	add	x0, x20, #0x18
     d9c:	bl	0 <grub_malloc>
     da0:	cbz	x0, de8 <grub_zfs_add_key+0x78>
     da4:	mov	x19, x0
     da8:	str	w21, [x0, #16]
     dac:	str	x20, [x0, #8]
     db0:	mov	x2, x20
     db4:	mov	x1, x22
     db8:	add	x0, x0, #0x18
     dbc:	bl	0 <grub_memmove>
     dc0:	adrp	x0, 0 <grub_gcm_mul>
     dc4:	ldr	x0, [x0]
     dc8:	ldr	x1, [x0]
     dcc:	str	x1, [x19]
     dd0:	str	x19, [x0]
     dd4:	mov	w0, #0x0                   	// #0
     dd8:	ldp	x19, x20, [sp, #16]
     ddc:	ldp	x21, x22, [sp, #32]
     de0:	ldp	x29, x30, [sp], #48
     de4:	ret
     de8:	adrp	x0, 0 <grub_gcm_mul>
     dec:	ldr	x0, [x0]
     df0:	ldr	w0, [x0]
     df4:	b	dd8 <grub_zfs_add_key+0x68>
	...

0000000000000e08 <grub_cmd_zfs_key>:
     e08:	sub	sp, sp, #0x430
     e0c:	stp	x29, x30, [sp]
     e10:	mov	x29, sp
     e14:	stp	x19, x20, [sp, #16]
     e18:	mov	x20, x0
     e1c:	mov	w19, w1
     e20:	cmp	w1, #0x0
     e24:	b.gt	e84 <grub_cmd_zfs_key+0x7c>
     e28:	str	x21, [sp, #32]
     e2c:	adrp	x0, 0 <grub_gcm_mul>
     e30:	ldr	x0, [x0]
     e34:	ldr	x21, [x0]
     e38:	adrp	x0, 0 <grub_gcm_mul>
     e3c:	ldr	x0, [x0]
     e40:	ldr	x1, [x0]
     e44:	adrp	x0, 0 <grub_gcm_mul>
     e48:	ldr	x0, [x0]
     e4c:	blr	x1
     e50:	blr	x21
     e54:	mov	w1, #0x3ff                 	// #1023
     e58:	add	x0, sp, #0x30
     e5c:	bl	0 <grub_password_get>
     e60:	cbnz	w0, ec4 <grub_cmd_zfs_key+0xbc>
     e64:	adrp	x0, 0 <grub_gcm_mul>
     e68:	ldr	x0, [x0]
     e6c:	ldr	w0, [x0]
     e70:	ldr	x21, [sp, #32]
     e74:	ldp	x19, x20, [sp, #16]
     e78:	ldp	x29, x30, [sp]
     e7c:	add	sp, sp, #0x430
     e80:	ret
     e84:	mov	w1, #0x25                  	// #37
     e88:	ldr	x0, [x2]
     e8c:	bl	0 <grub_file_open>
     e90:	cbz	x0, eb4 <grub_cmd_zfs_key+0xac>
     e94:	mov	x2, #0x400                 	// #1024
     e98:	add	x1, sp, #0x30
     e9c:	bl	0 <grub_file_read>
     ea0:	tbz	x0, #63, ed0 <grub_cmd_zfs_key+0xc8>
     ea4:	adrp	x0, 0 <grub_gcm_mul>
     ea8:	ldr	x0, [x0]
     eac:	ldr	w0, [x0]
     eb0:	b	e74 <grub_cmd_zfs_key+0x6c>
     eb4:	adrp	x0, 0 <grub_gcm_mul>
     eb8:	ldr	x0, [x0]
     ebc:	ldr	w0, [x0]
     ec0:	b	e74 <grub_cmd_zfs_key+0x6c>
     ec4:	add	x0, sp, #0x30
     ec8:	bl	0 <grub_strlen>
     ecc:	ldr	x21, [sp, #32]
     ed0:	ldr	x3, [x20, #8]
     ed4:	ldr	w1, [x3, #16]
     ed8:	cbz	w1, f80 <grub_cmd_zfs_key+0x178>
     edc:	add	x1, x0, x0, lsr #63
     ee0:	asr	x1, x1, #1
     ee4:	cmp	x0, #0x1
     ee8:	b.le	f70 <grub_cmd_zfs_key+0x168>
     eec:	add	x5, sp, #0x30
     ef0:	mov	x7, x5
     ef4:	mov	x6, #0x0                   	// #0
     ef8:	ldrb	w0, [x5]
     efc:	sub	w3, w0, #0x41
     f00:	add	w2, w0, #0x20
     f04:	cmp	w3, #0x1a
     f08:	csel	w0, w2, w0, cc  // cc = lo, ul, last
     f0c:	and	w2, w0, #0xff
     f10:	sub	w3, w2, #0x30
     f14:	and	w3, w3, #0xff
     f18:	ldrb	w0, [x5, #1]
     f1c:	sub	w8, w0, #0x41
     f20:	add	w4, w0, #0x20
     f24:	cmp	w8, #0x1a
     f28:	csel	w0, w4, w0, cc  // cc = lo, ul, last
     f2c:	and	w0, w0, #0xff
     f30:	sub	w4, w0, #0x30
     f34:	and	w4, w4, #0xff
     f38:	sub	w2, w2, #0x57
     f3c:	and	w2, w2, #0xff
     f40:	cmp	w3, #0x9
     f44:	csel	w3, w2, w3, hi  // hi = pmore
     f48:	sub	w0, w0, #0x57
     f4c:	and	w0, w0, #0xff
     f50:	cmp	w4, #0x9
     f54:	csel	w4, w0, w4, hi  // hi = pmore
     f58:	orr	w3, w4, w3, lsl #4
     f5c:	strb	w3, [x7], #1
     f60:	add	x6, x6, #0x1
     f64:	add	x5, x5, #0x2
     f68:	cmp	x1, x6
     f6c:	b.gt	ef8 <grub_cmd_zfs_key+0xf0>
     f70:	mov	w2, #0x0                   	// #0
     f74:	add	x0, sp, #0x30
     f78:	bl	d70 <grub_zfs_add_key>
     f7c:	b	e74 <grub_cmd_zfs_key+0x6c>
     f80:	mov	x1, x0
     f84:	ldr	w2, [x3, #32]
     f88:	cbnz	w2, fa0 <grub_cmd_zfs_key+0x198>
     f8c:	cbnz	w19, fa4 <grub_cmd_zfs_key+0x19c>
     f90:	ldr	w0, [x3]
     f94:	cmp	w0, #0x0
     f98:	cset	w2, eq  // eq = none
     f9c:	b	fa4 <grub_cmd_zfs_key+0x19c>
     fa0:	mov	w2, #0x1                   	// #1
     fa4:	add	x0, sp, #0x30
     fa8:	bl	d70 <grub_zfs_add_key>
     fac:	b	e74 <grub_cmd_zfs_key+0x6c>
	...

0000000000000fd0 <grub_mod_init>:
     fd0:	stp	x29, x30, [sp, #-16]!
     fd4:	mov	x29, sp
     fd8:	adrp	x0, 0 <grub_gcm_mul>
     fdc:	ldr	x0, [x0]
     fe0:	adrp	x1, 0 <grub_gcm_mul>
     fe4:	ldr	x1, [x1]
     fe8:	str	x1, [x0]
     fec:	adrp	x0, 0 <grub_gcm_mul>
     ff0:	ldr	x0, [x0]
     ff4:	adrp	x1, 0 <grub_gcm_mul>
     ff8:	ldr	x1, [x1]
     ffc:	str	x1, [x0]
    1000:	adrp	x0, 0 <grub_gcm_mul>
    1004:	ldr	x5, [x0]
    1008:	add	x5, x5, #0x28
    100c:	adrp	x0, 0 <grub_gcm_mul>
    1010:	ldr	x4, [x0]
    1014:	adrp	x0, 0 <grub_gcm_mul>
    1018:	ldr	x3, [x0]
    101c:	mov	w2, #0x0                   	// #0
    1020:	adrp	x0, 0 <grub_gcm_mul>
    1024:	ldr	x1, [x0]
    1028:	adrp	x0, 0 <grub_gcm_mul>
    102c:	ldr	x0, [x0]
    1030:	bl	0 <grub_register_extcmd>
    1034:	adrp	x1, 0 <grub_gcm_mul>
    1038:	ldr	x1, [x1]
    103c:	str	x0, [x1, #8]
    1040:	ldp	x29, x30, [sp], #16
    1044:	ret
	...

0000000000001098 <grub_mod_fini>:
    1098:	stp	x29, x30, [sp, #-16]!
    109c:	mov	x29, sp
    10a0:	adrp	x0, 0 <grub_gcm_mul>
    10a4:	ldr	x0, [x0]
    10a8:	str	xzr, [x0]
    10ac:	adrp	x0, 0 <grub_gcm_mul>
    10b0:	ldr	x0, [x0]
    10b4:	str	xzr, [x0]
    10b8:	adrp	x0, 0 <grub_gcm_mul>
    10bc:	ldr	x0, [x0]
    10c0:	ldr	x0, [x0, #8]
    10c4:	bl	0 <grub_unregister_extcmd>
    10c8:	ldp	x29, x30, [sp], #16
    10cc:	ret
	...
