
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//zlib.cpython-38-aarch64-linux-gnu.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001c90 <.init>:
    1c90:	stp	x29, x30, [sp, #-16]!
    1c94:	mov	x29, sp
    1c98:	bl	2020 <PyThread_free_lock@plt+0x10>
    1c9c:	ldp	x29, x30, [sp], #16
    1ca0:	ret

Disassembly of section .plt:

0000000000001cb0 <memcpy@plt-0x20>:
    1cb0:	stp	x16, x30, [sp, #-16]!
    1cb4:	adrp	x16, 18000 <PyInit_zlib@@Base+0x1213c>
    1cb8:	ldr	x17, [x16, #4088]
    1cbc:	add	x16, x16, #0xff8
    1cc0:	br	x17
    1cc4:	nop
    1cc8:	nop
    1ccc:	nop

0000000000001cd0 <memcpy@plt>:
    1cd0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1cd4:	ldr	x17, [x16]
    1cd8:	add	x16, x16, #0x0
    1cdc:	br	x17

0000000000001ce0 <PyModule_AddIntConstant@plt>:
    1ce0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #8]
    1ce8:	add	x16, x16, #0x8
    1cec:	br	x17

0000000000001cf0 <_PyBytes_Resize@plt>:
    1cf0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1cf4:	ldr	x17, [x16, #16]
    1cf8:	add	x16, x16, #0x10
    1cfc:	br	x17

0000000000001d00 <inflate@plt>:
    1d00:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d04:	ldr	x17, [x16, #24]
    1d08:	add	x16, x16, #0x18
    1d0c:	br	x17

0000000000001d10 <PyEval_RestoreThread@plt>:
    1d10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d14:	ldr	x17, [x16, #32]
    1d18:	add	x16, x16, #0x20
    1d1c:	br	x17

0000000000001d20 <PyBuffer_Release@plt>:
    1d20:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d24:	ldr	x17, [x16, #40]
    1d28:	add	x16, x16, #0x28
    1d2c:	br	x17

0000000000001d30 <__cxa_finalize@plt>:
    1d30:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d34:	ldr	x17, [x16, #48]
    1d38:	add	x16, x16, #0x30
    1d3c:	br	x17

0000000000001d40 <PyMem_RawMalloc@plt>:
    1d40:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d44:	ldr	x17, [x16, #56]
    1d48:	add	x16, x16, #0x38
    1d4c:	br	x17

0000000000001d50 <crc32@plt>:
    1d50:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d54:	ldr	x17, [x16, #64]
    1d58:	add	x16, x16, #0x40
    1d5c:	br	x17

0000000000001d60 <PyBuffer_IsContiguous@plt>:
    1d60:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d64:	ldr	x17, [x16, #72]
    1d68:	add	x16, x16, #0x48
    1d6c:	br	x17

0000000000001d70 <PyBytes_FromStringAndSize@plt>:
    1d70:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d74:	ldr	x17, [x16, #80]
    1d78:	add	x16, x16, #0x50
    1d7c:	br	x17

0000000000001d80 <_Py_Dealloc@plt>:
    1d80:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d84:	ldr	x17, [x16, #88]
    1d88:	add	x16, x16, #0x58
    1d8c:	br	x17

0000000000001d90 <PyErr_NoMemory@plt>:
    1d90:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d94:	ldr	x17, [x16, #96]
    1d98:	add	x16, x16, #0x60
    1d9c:	br	x17

0000000000001da0 <PyThread_acquire_lock@plt>:
    1da0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1da4:	ldr	x17, [x16, #104]
    1da8:	add	x16, x16, #0x68
    1dac:	br	x17

0000000000001db0 <_PyArg_UnpackKeywords@plt>:
    1db0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1db4:	ldr	x17, [x16, #112]
    1db8:	add	x16, x16, #0x70
    1dbc:	br	x17

0000000000001dc0 <PyErr_SetString@plt>:
    1dc0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1dc4:	ldr	x17, [x16, #120]
    1dc8:	add	x16, x16, #0x78
    1dcc:	br	x17

0000000000001dd0 <deflate@plt>:
    1dd0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1dd4:	ldr	x17, [x16, #128]
    1dd8:	add	x16, x16, #0x80
    1ddc:	br	x17

0000000000001de0 <_PyLong_FromNbIndexOrNbInt@plt>:
    1de0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1de4:	ldr	x17, [x16, #136]
    1de8:	add	x16, x16, #0x88
    1dec:	br	x17

0000000000001df0 <PyObject_Free@plt>:
    1df0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1df4:	ldr	x17, [x16, #144]
    1df8:	add	x16, x16, #0x90
    1dfc:	br	x17

0000000000001e00 <deflateInit2_@plt>:
    1e00:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e04:	ldr	x17, [x16, #152]
    1e08:	add	x16, x16, #0x98
    1e0c:	br	x17

0000000000001e10 <PyType_Ready@plt>:
    1e10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e14:	ldr	x17, [x16, #160]
    1e18:	add	x16, x16, #0xa0
    1e1c:	br	x17

0000000000001e20 <PyLong_AsSsize_t@plt>:
    1e20:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e24:	ldr	x17, [x16, #168]
    1e28:	add	x16, x16, #0xa8
    1e2c:	br	x17

0000000000001e30 <_PyArg_BadArgument@plt>:
    1e30:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e34:	ldr	x17, [x16, #176]
    1e38:	add	x16, x16, #0xb0
    1e3c:	br	x17

0000000000001e40 <PyErr_NewException@plt>:
    1e40:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e44:	ldr	x17, [x16, #184]
    1e48:	add	x16, x16, #0xb8
    1e4c:	br	x17

0000000000001e50 <deflateInit_@plt>:
    1e50:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e54:	ldr	x17, [x16, #192]
    1e58:	add	x16, x16, #0xc0
    1e5c:	br	x17

0000000000001e60 <PyLong_AsUnsignedLongMask@plt>:
    1e60:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e64:	ldr	x17, [x16, #200]
    1e68:	add	x16, x16, #0xc8
    1e6c:	br	x17

0000000000001e70 <__gmon_start__@plt>:
    1e70:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e74:	ldr	x17, [x16, #208]
    1e78:	add	x16, x16, #0xd0
    1e7c:	br	x17

0000000000001e80 <_PyArg_CheckPositional@plt>:
    1e80:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e84:	ldr	x17, [x16, #216]
    1e88:	add	x16, x16, #0xd8
    1e8c:	br	x17

0000000000001e90 <inflateEnd@plt>:
    1e90:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e94:	ldr	x17, [x16, #224]
    1e98:	add	x16, x16, #0xe0
    1e9c:	br	x17

0000000000001ea0 <inflateCopy@plt>:
    1ea0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ea4:	ldr	x17, [x16, #232]
    1ea8:	add	x16, x16, #0xe8
    1eac:	br	x17

0000000000001eb0 <PyErr_Occurred@plt>:
    1eb0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1eb4:	ldr	x17, [x16, #240]
    1eb8:	add	x16, x16, #0xf0
    1ebc:	br	x17

0000000000001ec0 <PyModule_Create2@plt>:
    1ec0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ec4:	ldr	x17, [x16, #248]
    1ec8:	add	x16, x16, #0xf8
    1ecc:	br	x17

0000000000001ed0 <inflateSetDictionary@plt>:
    1ed0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ed4:	ldr	x17, [x16, #256]
    1ed8:	add	x16, x16, #0x100
    1edc:	br	x17

0000000000001ee0 <adler32@plt>:
    1ee0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ee4:	ldr	x17, [x16, #264]
    1ee8:	add	x16, x16, #0x108
    1eec:	br	x17

0000000000001ef0 <PyMem_RawFree@plt>:
    1ef0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ef4:	ldr	x17, [x16, #272]
    1ef8:	add	x16, x16, #0x110
    1efc:	br	x17

0000000000001f00 <PyThread_allocate_lock@plt>:
    1f00:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f04:	ldr	x17, [x16, #280]
    1f08:	add	x16, x16, #0x118
    1f0c:	br	x17

0000000000001f10 <deflateEnd@plt>:
    1f10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f14:	ldr	x17, [x16, #288]
    1f18:	add	x16, x16, #0x120
    1f1c:	br	x17

0000000000001f20 <PyThread_release_lock@plt>:
    1f20:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f24:	ldr	x17, [x16, #296]
    1f28:	add	x16, x16, #0x128
    1f2c:	br	x17

0000000000001f30 <PyObject_GetBuffer@plt>:
    1f30:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f34:	ldr	x17, [x16, #304]
    1f38:	add	x16, x16, #0x130
    1f3c:	br	x17

0000000000001f40 <deflateCopy@plt>:
    1f40:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f44:	ldr	x17, [x16, #312]
    1f48:	add	x16, x16, #0x138
    1f4c:	br	x17

0000000000001f50 <PyLong_FromUnsignedLong@plt>:
    1f50:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f54:	ldr	x17, [x16, #320]
    1f58:	add	x16, x16, #0x140
    1f5c:	br	x17

0000000000001f60 <_PyObject_New@plt>:
    1f60:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f64:	ldr	x17, [x16, #328]
    1f68:	add	x16, x16, #0x148
    1f6c:	br	x17

0000000000001f70 <PyUnicode_FromString@plt>:
    1f70:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f74:	ldr	x17, [x16, #336]
    1f78:	add	x16, x16, #0x150
    1f7c:	br	x17

0000000000001f80 <inflateInit2_@plt>:
    1f80:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f84:	ldr	x17, [x16, #344]
    1f88:	add	x16, x16, #0x158
    1f8c:	br	x17

0000000000001f90 <PyModule_AddStringConstant@plt>:
    1f90:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f94:	ldr	x17, [x16, #352]
    1f98:	add	x16, x16, #0x160
    1f9c:	br	x17

0000000000001fa0 <PyEval_SaveThread@plt>:
    1fa0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1fa4:	ldr	x17, [x16, #360]
    1fa8:	add	x16, x16, #0x168
    1fac:	br	x17

0000000000001fb0 <PyModule_AddObject@plt>:
    1fb0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1fb4:	ldr	x17, [x16, #368]
    1fb8:	add	x16, x16, #0x170
    1fbc:	br	x17

0000000000001fc0 <zlibVersion@plt>:
    1fc0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1fc4:	ldr	x17, [x16, #376]
    1fc8:	add	x16, x16, #0x178
    1fcc:	br	x17

0000000000001fd0 <PyType_IsSubtype@plt>:
    1fd0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1fd4:	ldr	x17, [x16, #384]
    1fd8:	add	x16, x16, #0x180
    1fdc:	br	x17

0000000000001fe0 <PyErr_Format@plt>:
    1fe0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1fe4:	ldr	x17, [x16, #392]
    1fe8:	add	x16, x16, #0x188
    1fec:	br	x17

0000000000001ff0 <_PyLong_AsInt@plt>:
    1ff0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ff4:	ldr	x17, [x16, #400]
    1ff8:	add	x16, x16, #0x190
    1ffc:	br	x17

0000000000002000 <deflateSetDictionary@plt>:
    2000:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2004:	ldr	x17, [x16, #408]
    2008:	add	x16, x16, #0x198
    200c:	br	x17

0000000000002010 <PyThread_free_lock@plt>:
    2010:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2014:	ldr	x17, [x16, #416]
    2018:	add	x16, x16, #0x1a0
    201c:	br	x17

Disassembly of section .text:

0000000000002020 <PyInit_zlib@@Base-0x3ea4>:
    2020:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    2024:	ldr	x0, [x0, #4048]
    2028:	cbz	x0, 2030 <PyThread_free_lock@plt+0x20>
    202c:	b	1e70 <__gmon_start__@plt>
    2030:	ret
    2034:	stp	x29, x30, [sp, #-32]!
    2038:	mov	x29, sp
    203c:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    2040:	add	x0, x0, #0x998
    2044:	str	x0, [sp, #24]
    2048:	ldr	x0, [sp, #24]
    204c:	str	x0, [sp, #24]
    2050:	ldr	x1, [sp, #24]
    2054:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    2058:	add	x0, x0, #0x998
    205c:	cmp	x1, x0
    2060:	b.eq	2098 <PyThread_free_lock@plt+0x88>  // b.none
    2064:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    2068:	ldr	x0, [x0, #4000]
    206c:	str	x0, [sp, #16]
    2070:	ldr	x0, [sp, #16]
    2074:	str	x0, [sp, #16]
    2078:	ldr	x0, [sp, #16]
    207c:	cmp	x0, #0x0
    2080:	b.eq	209c <PyThread_free_lock@plt+0x8c>  // b.none
    2084:	ldr	x1, [sp, #16]
    2088:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    208c:	add	x0, x0, #0x998
    2090:	blr	x1
    2094:	b	209c <PyThread_free_lock@plt+0x8c>
    2098:	nop
    209c:	ldp	x29, x30, [sp], #32
    20a0:	ret
    20a4:	stp	x29, x30, [sp, #-48]!
    20a8:	mov	x29, sp
    20ac:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    20b0:	add	x0, x0, #0x998
    20b4:	str	x0, [sp, #40]
    20b8:	ldr	x0, [sp, #40]
    20bc:	str	x0, [sp, #40]
    20c0:	ldr	x1, [sp, #40]
    20c4:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    20c8:	add	x0, x0, #0x998
    20cc:	sub	x0, x1, x0
    20d0:	asr	x0, x0, #3
    20d4:	lsr	x1, x0, #63
    20d8:	add	x0, x1, x0
    20dc:	asr	x0, x0, #1
    20e0:	str	x0, [sp, #32]
    20e4:	ldr	x0, [sp, #32]
    20e8:	cmp	x0, #0x0
    20ec:	b.eq	2128 <PyThread_free_lock@plt+0x118>  // b.none
    20f0:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    20f4:	ldr	x0, [x0, #4064]
    20f8:	str	x0, [sp, #24]
    20fc:	ldr	x0, [sp, #24]
    2100:	str	x0, [sp, #24]
    2104:	ldr	x0, [sp, #24]
    2108:	cmp	x0, #0x0
    210c:	b.eq	212c <PyThread_free_lock@plt+0x11c>  // b.none
    2110:	ldr	x2, [sp, #24]
    2114:	ldr	x1, [sp, #32]
    2118:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    211c:	add	x0, x0, #0x998
    2120:	blr	x2
    2124:	b	212c <PyThread_free_lock@plt+0x11c>
    2128:	nop
    212c:	ldp	x29, x30, [sp], #48
    2130:	ret
    2134:	stp	x29, x30, [sp, #-16]!
    2138:	mov	x29, sp
    213c:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    2140:	add	x0, x0, #0x998
    2144:	ldrb	w0, [x0]
    2148:	and	x0, x0, #0xff
    214c:	cmp	x0, #0x0
    2150:	b.ne	218c <PyThread_free_lock@plt+0x17c>  // b.any
    2154:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    2158:	ldr	x0, [x0, #4016]
    215c:	cmp	x0, #0x0
    2160:	b.eq	2174 <PyThread_free_lock@plt+0x164>  // b.none
    2164:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    2168:	add	x0, x0, #0x1a8
    216c:	ldr	x0, [x0]
    2170:	bl	1d30 <__cxa_finalize@plt>
    2174:	bl	2034 <PyThread_free_lock@plt+0x24>
    2178:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    217c:	add	x0, x0, #0x998
    2180:	mov	w1, #0x1                   	// #1
    2184:	strb	w1, [x0]
    2188:	b	2190 <PyThread_free_lock@plt+0x180>
    218c:	nop
    2190:	ldp	x29, x30, [sp], #16
    2194:	ret
    2198:	stp	x29, x30, [sp, #-16]!
    219c:	mov	x29, sp
    21a0:	bl	20a4 <PyThread_free_lock@plt+0x94>
    21a4:	nop
    21a8:	ldp	x29, x30, [sp], #16
    21ac:	ret
    21b0:	sub	sp, sp, #0x10
    21b4:	str	x0, [sp, #8]
    21b8:	ldr	x0, [sp, #8]
    21bc:	ldr	x0, [x0]
    21c0:	add	x1, x0, #0x1
    21c4:	ldr	x0, [sp, #8]
    21c8:	str	x1, [x0]
    21cc:	nop
    21d0:	add	sp, sp, #0x10
    21d4:	ret
    21d8:	stp	x29, x30, [sp, #-48]!
    21dc:	mov	x29, sp
    21e0:	str	x0, [sp, #40]
    21e4:	str	w1, [sp, #36]
    21e8:	str	x2, [sp, #24]
    21ec:	ldr	x0, [sp, #24]
    21f0:	ldr	x0, [x0]
    21f4:	sub	x1, x0, #0x1
    21f8:	ldr	x0, [sp, #24]
    21fc:	str	x1, [x0]
    2200:	ldr	x0, [sp, #24]
    2204:	ldr	x0, [x0]
    2208:	cmp	x0, #0x0
    220c:	b.ne	2218 <PyThread_free_lock@plt+0x208>  // b.any
    2210:	ldr	x0, [sp, #24]
    2214:	bl	1d80 <_Py_Dealloc@plt>
    2218:	nop
    221c:	ldp	x29, x30, [sp], #48
    2220:	ret
    2224:	stp	x29, x30, [sp, #-32]!
    2228:	mov	x29, sp
    222c:	str	x0, [sp, #24]
    2230:	ldr	x0, [sp, #24]
    2234:	cmp	x0, #0x0
    2238:	b.eq	2244 <PyThread_free_lock@plt+0x234>  // b.none
    223c:	ldr	x0, [sp, #24]
    2240:	bl	21b0 <PyThread_free_lock@plt+0x1a0>
    2244:	nop
    2248:	ldp	x29, x30, [sp], #32
    224c:	ret
    2250:	stp	x29, x30, [sp, #-32]!
    2254:	mov	x29, sp
    2258:	str	x0, [sp, #24]
    225c:	ldr	x0, [sp, #24]
    2260:	cmp	x0, #0x0
    2264:	b.eq	227c <PyThread_free_lock@plt+0x26c>  // b.none
    2268:	ldr	x2, [sp, #24]
    226c:	mov	w1, #0x21d                 	// #541
    2270:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2274:	add	x0, x0, #0x1b8
    2278:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    227c:	nop
    2280:	ldp	x29, x30, [sp], #32
    2284:	ret
    2288:	stp	x29, x30, [sp, #-64]!
    228c:	mov	x29, sp
    2290:	str	x19, [sp, #16]
    2294:	mov	x19, x0
    2298:	str	w1, [sp, #44]
    229c:	str	x2, [sp, #32]
    22a0:	str	xzr, [sp, #56]
    22a4:	ldr	w0, [sp, #44]
    22a8:	cmn	w0, #0x6
    22ac:	b.ne	22bc <PyThread_free_lock@plt+0x2ac>  // b.any
    22b0:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    22b4:	add	x0, x0, #0x1f0
    22b8:	str	x0, [sp, #56]
    22bc:	ldr	x0, [sp, #56]
    22c0:	cmp	x0, #0x0
    22c4:	b.ne	22d0 <PyThread_free_lock@plt+0x2c0>  // b.any
    22c8:	ldr	x0, [x19, #48]
    22cc:	str	x0, [sp, #56]
    22d0:	ldr	x0, [sp, #56]
    22d4:	cmp	x0, #0x0
    22d8:	b.ne	2340 <PyThread_free_lock@plt+0x330>  // b.any
    22dc:	ldr	w0, [sp, #44]
    22e0:	cmn	w0, #0x2
    22e4:	b.eq	2320 <PyThread_free_lock@plt+0x310>  // b.none
    22e8:	ldr	w0, [sp, #44]
    22ec:	cmn	w0, #0x2
    22f0:	b.gt	2344 <PyThread_free_lock@plt+0x334>
    22f4:	ldr	w0, [sp, #44]
    22f8:	cmn	w0, #0x5
    22fc:	b.eq	2310 <PyThread_free_lock@plt+0x300>  // b.none
    2300:	ldr	w0, [sp, #44]
    2304:	cmn	w0, #0x3
    2308:	b.eq	2330 <PyThread_free_lock@plt+0x320>  // b.none
    230c:	b	2344 <PyThread_free_lock@plt+0x334>
    2310:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2314:	add	x0, x0, #0x210
    2318:	str	x0, [sp, #56]
    231c:	b	2344 <PyThread_free_lock@plt+0x334>
    2320:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2324:	add	x0, x0, #0x230
    2328:	str	x0, [sp, #56]
    232c:	b	2344 <PyThread_free_lock@plt+0x334>
    2330:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2334:	add	x0, x0, #0x250
    2338:	str	x0, [sp, #56]
    233c:	b	2344 <PyThread_free_lock@plt+0x334>
    2340:	nop
    2344:	ldr	x0, [sp, #56]
    2348:	cmp	x0, #0x0
    234c:	b.ne	2378 <PyThread_free_lock@plt+0x368>  // b.any
    2350:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    2354:	add	x0, x0, #0x9a0
    2358:	ldr	x4, [x0]
    235c:	ldr	x3, [sp, #32]
    2360:	ldr	w2, [sp, #44]
    2364:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2368:	add	x1, x0, #0x268
    236c:	mov	x0, x4
    2370:	bl	1fe0 <PyErr_Format@plt>
    2374:	b	23a0 <PyThread_free_lock@plt+0x390>
    2378:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    237c:	add	x0, x0, #0x9a0
    2380:	ldr	x5, [x0]
    2384:	ldr	x4, [sp, #56]
    2388:	ldr	x3, [sp, #32]
    238c:	ldr	w2, [sp, #44]
    2390:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2394:	add	x1, x0, #0x278
    2398:	mov	x0, x5
    239c:	bl	1fe0 <PyErr_Format@plt>
    23a0:	nop
    23a4:	ldr	x19, [sp, #16]
    23a8:	ldp	x29, x30, [sp], #64
    23ac:	ret
    23b0:	stp	x29, x30, [sp, #-48]!
    23b4:	mov	x29, sp
    23b8:	str	x0, [sp, #24]
    23bc:	ldr	x0, [sp, #24]
    23c0:	bl	1f60 <_PyObject_New@plt>
    23c4:	str	x0, [sp, #40]
    23c8:	ldr	x0, [sp, #40]
    23cc:	cmp	x0, #0x0
    23d0:	b.ne	23dc <PyThread_free_lock@plt+0x3cc>  // b.any
    23d4:	mov	x0, #0x0                   	// #0
    23d8:	b	24e0 <PyThread_free_lock@plt+0x4d0>
    23dc:	ldr	x0, [sp, #40]
    23e0:	strb	wzr, [x0, #144]
    23e4:	ldr	x0, [sp, #40]
    23e8:	str	wzr, [x0, #148]
    23ec:	ldr	x0, [sp, #40]
    23f0:	str	xzr, [x0, #152]
    23f4:	mov	x1, #0x0                   	// #0
    23f8:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    23fc:	add	x0, x0, #0x290
    2400:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    2404:	mov	x1, x0
    2408:	ldr	x0, [sp, #40]
    240c:	str	x1, [x0, #128]
    2410:	ldr	x0, [sp, #40]
    2414:	ldr	x0, [x0, #128]
    2418:	cmp	x0, #0x0
    241c:	b.ne	243c <PyThread_free_lock@plt+0x42c>  // b.any
    2420:	ldr	x2, [sp, #40]
    2424:	mov	w1, #0x64                  	// #100
    2428:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    242c:	add	x0, x0, #0x298
    2430:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    2434:	mov	x0, #0x0                   	// #0
    2438:	b	24e0 <PyThread_free_lock@plt+0x4d0>
    243c:	mov	x1, #0x0                   	// #0
    2440:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2444:	add	x0, x0, #0x290
    2448:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    244c:	mov	x1, x0
    2450:	ldr	x0, [sp, #40]
    2454:	str	x1, [x0, #136]
    2458:	ldr	x0, [sp, #40]
    245c:	ldr	x0, [x0, #136]
    2460:	cmp	x0, #0x0
    2464:	b.ne	2484 <PyThread_free_lock@plt+0x474>  // b.any
    2468:	ldr	x2, [sp, #40]
    246c:	mov	w1, #0x69                  	// #105
    2470:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2474:	add	x0, x0, #0x298
    2478:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    247c:	mov	x0, #0x0                   	// #0
    2480:	b	24e0 <PyThread_free_lock@plt+0x4d0>
    2484:	bl	1f00 <PyThread_allocate_lock@plt>
    2488:	mov	x1, x0
    248c:	ldr	x0, [sp, #40]
    2490:	str	x1, [x0, #160]
    2494:	ldr	x0, [sp, #40]
    2498:	ldr	x0, [x0, #160]
    249c:	cmp	x0, #0x0
    24a0:	b.ne	24dc <PyThread_free_lock@plt+0x4cc>  // b.any
    24a4:	ldr	x2, [sp, #40]
    24a8:	mov	w1, #0x6e                  	// #110
    24ac:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    24b0:	add	x0, x0, #0x298
    24b4:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    24b8:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    24bc:	ldr	x0, [x0, #4024]
    24c0:	ldr	x2, [x0]
    24c4:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    24c8:	add	x1, x0, #0x2c8
    24cc:	mov	x0, x2
    24d0:	bl	1dc0 <PyErr_SetString@plt>
    24d4:	mov	x0, #0x0                   	// #0
    24d8:	b	24e0 <PyThread_free_lock@plt+0x4d0>
    24dc:	ldr	x0, [sp, #40]
    24e0:	ldp	x29, x30, [sp], #48
    24e4:	ret
    24e8:	stp	x29, x30, [sp, #-32]!
    24ec:	mov	x29, sp
    24f0:	str	x0, [sp, #24]
    24f4:	str	w1, [sp, #20]
    24f8:	str	w2, [sp, #16]
    24fc:	ldr	w0, [sp, #16]
    2500:	cmp	w0, #0x0
    2504:	b.eq	2528 <PyThread_free_lock@plt+0x518>  // b.none
    2508:	ldr	w1, [sp, #20]
    250c:	ldr	w0, [sp, #16]
    2510:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    2514:	udiv	x0, x2, x0
    2518:	cmp	x1, x0
    251c:	b.ls	2528 <PyThread_free_lock@plt+0x518>  // b.plast
    2520:	mov	x0, #0x0                   	// #0
    2524:	b	2538 <PyThread_free_lock@plt+0x528>
    2528:	ldr	w1, [sp, #20]
    252c:	ldr	w0, [sp, #16]
    2530:	mul	x0, x1, x0
    2534:	bl	1d40 <PyMem_RawMalloc@plt>
    2538:	ldp	x29, x30, [sp], #32
    253c:	ret
    2540:	stp	x29, x30, [sp, #-32]!
    2544:	mov	x29, sp
    2548:	str	x0, [sp, #24]
    254c:	str	x1, [sp, #16]
    2550:	ldr	x0, [sp, #16]
    2554:	bl	1ef0 <PyMem_RawFree@plt>
    2558:	nop
    255c:	ldp	x29, x30, [sp], #32
    2560:	ret
    2564:	sub	sp, sp, #0x10
    2568:	str	x0, [sp, #8]
    256c:	str	x1, [sp]
    2570:	ldr	x0, [sp]
    2574:	ldr	x0, [x0]
    2578:	mov	x1, x0
    257c:	mov	x0, #0xffffffff            	// #4294967295
    2580:	cmp	x1, x0
    2584:	b.hi	2594 <PyThread_free_lock@plt+0x584>  // b.pmore
    2588:	ldr	x0, [sp]
    258c:	ldr	x0, [x0]
    2590:	b	2598 <PyThread_free_lock@plt+0x588>
    2594:	mov	w0, #0xffffffff            	// #-1
    2598:	ldr	x1, [sp, #8]
    259c:	str	w0, [x1, #8]
    25a0:	ldr	x0, [sp]
    25a4:	ldr	x1, [x0]
    25a8:	ldr	x0, [sp, #8]
    25ac:	ldr	w0, [x0, #8]
    25b0:	mov	w0, w0
    25b4:	sub	x1, x1, x0
    25b8:	ldr	x0, [sp]
    25bc:	str	x1, [x0]
    25c0:	nop
    25c4:	add	sp, sp, #0x10
    25c8:	ret
    25cc:	stp	x29, x30, [sp, #-64]!
    25d0:	mov	x29, sp
    25d4:	str	x0, [sp, #40]
    25d8:	str	x1, [sp, #32]
    25dc:	str	x2, [sp, #24]
    25e0:	str	x3, [sp, #16]
    25e4:	ldr	x0, [sp, #32]
    25e8:	ldr	x0, [x0]
    25ec:	cmp	x0, #0x0
    25f0:	b.ne	262c <PyThread_free_lock@plt+0x61c>  // b.any
    25f4:	ldr	x1, [sp, #24]
    25f8:	mov	x0, #0x0                   	// #0
    25fc:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    2600:	mov	x1, x0
    2604:	ldr	x0, [sp, #32]
    2608:	str	x1, [x0]
    260c:	ldr	x0, [sp, #32]
    2610:	ldr	x0, [x0]
    2614:	cmp	x0, #0x0
    2618:	b.ne	2624 <PyThread_free_lock@plt+0x614>  // b.any
    261c:	mov	x0, #0xffffffffffffffff    	// #-1
    2620:	b	271c <PyThread_free_lock@plt+0x70c>
    2624:	str	xzr, [sp, #56]
    2628:	b	26c0 <PyThread_free_lock@plt+0x6b0>
    262c:	ldr	x0, [sp, #40]
    2630:	ldr	x1, [x0, #24]
    2634:	ldr	x0, [sp, #32]
    2638:	ldr	x0, [x0]
    263c:	add	x0, x0, #0x20
    2640:	sub	x0, x1, x0
    2644:	str	x0, [sp, #56]
    2648:	ldr	x1, [sp, #24]
    264c:	ldr	x0, [sp, #56]
    2650:	cmp	x1, x0
    2654:	b.ne	26c0 <PyThread_free_lock@plt+0x6b0>  // b.any
    2658:	ldr	x1, [sp, #24]
    265c:	ldr	x0, [sp, #16]
    2660:	cmp	x1, x0
    2664:	b.ne	2670 <PyThread_free_lock@plt+0x660>  // b.any
    2668:	mov	x0, #0xfffffffffffffffe    	// #-2
    266c:	b	271c <PyThread_free_lock@plt+0x70c>
    2670:	ldr	x0, [sp, #16]
    2674:	asr	x0, x0, #1
    2678:	ldr	x1, [sp, #24]
    267c:	cmp	x1, x0
    2680:	b.gt	2694 <PyThread_free_lock@plt+0x684>
    2684:	ldr	x0, [sp, #24]
    2688:	lsl	x0, x0, #1
    268c:	str	x0, [sp, #48]
    2690:	b	269c <PyThread_free_lock@plt+0x68c>
    2694:	ldr	x0, [sp, #16]
    2698:	str	x0, [sp, #48]
    269c:	ldr	x1, [sp, #48]
    26a0:	ldr	x0, [sp, #32]
    26a4:	bl	1cf0 <_PyBytes_Resize@plt>
    26a8:	cmp	w0, #0x0
    26ac:	b.ge	26b8 <PyThread_free_lock@plt+0x6a8>  // b.tcont
    26b0:	mov	x0, #0xffffffffffffffff    	// #-1
    26b4:	b	271c <PyThread_free_lock@plt+0x70c>
    26b8:	ldr	x0, [sp, #48]
    26bc:	str	x0, [sp, #24]
    26c0:	ldr	x1, [sp, #24]
    26c4:	ldr	x0, [sp, #56]
    26c8:	sub	x0, x1, x0
    26cc:	mov	x1, x0
    26d0:	mov	x0, #0xffffffff            	// #4294967295
    26d4:	cmp	x1, x0
    26d8:	b.hi	26f0 <PyThread_free_lock@plt+0x6e0>  // b.pmore
    26dc:	ldr	x0, [sp, #24]
    26e0:	mov	w1, w0
    26e4:	ldr	x0, [sp, #56]
    26e8:	sub	w0, w1, w0
    26ec:	b	26f4 <PyThread_free_lock@plt+0x6e4>
    26f0:	mov	w0, #0xffffffff            	// #-1
    26f4:	ldr	x1, [sp, #40]
    26f8:	str	w0, [x1, #32]
    26fc:	ldr	x0, [sp, #32]
    2700:	ldr	x0, [x0]
    2704:	add	x1, x0, #0x20
    2708:	ldr	x0, [sp, #56]
    270c:	add	x1, x1, x0
    2710:	ldr	x0, [sp, #40]
    2714:	str	x1, [x0, #24]
    2718:	ldr	x0, [sp, #24]
    271c:	ldp	x29, x30, [sp], #64
    2720:	ret
    2724:	stp	x29, x30, [sp, #-64]!
    2728:	mov	x29, sp
    272c:	str	x0, [sp, #40]
    2730:	str	x1, [sp, #32]
    2734:	str	x2, [sp, #24]
    2738:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
    273c:	ldr	x2, [sp, #24]
    2740:	ldr	x1, [sp, #32]
    2744:	ldr	x0, [sp, #40]
    2748:	bl	25cc <PyThread_free_lock@plt+0x5bc>
    274c:	str	x0, [sp, #56]
    2750:	ldr	x0, [sp, #56]
    2754:	cmn	x0, #0x2
    2758:	b.ne	2760 <PyThread_free_lock@plt+0x750>  // b.any
    275c:	bl	1d90 <PyErr_NoMemory@plt>
    2760:	ldr	x0, [sp, #56]
    2764:	ldp	x29, x30, [sp], #64
    2768:	ret
    276c:	stp	x29, x30, [sp, #-320]!
    2770:	mov	x29, sp
    2774:	str	x0, [sp, #152]
    2778:	str	x1, [sp, #144]
    277c:	str	w2, [sp, #140]
    2780:	str	xzr, [sp, #280]
    2784:	mov	x0, #0x4000                	// #16384
    2788:	str	x0, [sp, #312]
    278c:	ldr	x0, [sp, #144]
    2790:	ldr	x0, [x0]
    2794:	str	x0, [sp, #304]
    2798:	ldr	x0, [sp, #144]
    279c:	ldr	x0, [x0, #16]
    27a0:	str	x0, [sp, #272]
    27a4:	str	xzr, [sp, #240]
    27a8:	adrp	x0, 2000 <deflateSetDictionary@plt>
    27ac:	add	x0, x0, #0x4e8
    27b0:	str	x0, [sp, #224]
    27b4:	adrp	x0, 2000 <deflateSetDictionary@plt>
    27b8:	add	x0, x0, #0x540
    27bc:	str	x0, [sp, #232]
    27c0:	ldr	x0, [sp, #304]
    27c4:	str	x0, [sp, #160]
    27c8:	add	x4, sp, #0xa0
    27cc:	mov	w3, #0x70                  	// #112
    27d0:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    27d4:	add	x2, x0, #0x2e0
    27d8:	ldr	w1, [sp, #140]
    27dc:	mov	x0, x4
    27e0:	bl	1e50 <deflateInit_@plt>
    27e4:	str	w0, [sp, #300]
    27e8:	ldr	w0, [sp, #300]
    27ec:	cmp	w0, #0x0
    27f0:	b.eq	28c4 <PyThread_free_lock@plt+0x8b4>  // b.none
    27f4:	ldr	w0, [sp, #300]
    27f8:	cmp	w0, #0x0
    27fc:	b.gt	285c <PyThread_free_lock@plt+0x84c>
    2800:	ldr	w0, [sp, #300]
    2804:	cmn	w0, #0x4
    2808:	b.eq	281c <PyThread_free_lock@plt+0x80c>  // b.none
    280c:	ldr	w0, [sp, #300]
    2810:	cmn	w0, #0x2
    2814:	b.eq	283c <PyThread_free_lock@plt+0x82c>  // b.none
    2818:	b	285c <PyThread_free_lock@plt+0x84c>
    281c:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    2820:	ldr	x0, [x0, #4024]
    2824:	ldr	x2, [x0]
    2828:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    282c:	add	x1, x0, #0x2e8
    2830:	mov	x0, x2
    2834:	bl	1dc0 <PyErr_SetString@plt>
    2838:	b	2a60 <PyThread_free_lock@plt+0xa50>
    283c:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    2840:	add	x0, x0, #0x9a0
    2844:	ldr	x2, [x0]
    2848:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    284c:	add	x1, x0, #0x310
    2850:	mov	x0, x2
    2854:	bl	1dc0 <PyErr_SetString@plt>
    2858:	b	2a60 <PyThread_free_lock@plt+0xa50>
    285c:	add	x0, sp, #0xa0
    2860:	bl	1f10 <deflateEnd@plt>
    2864:	add	x0, sp, #0x10
    2868:	add	x1, sp, #0xa0
    286c:	ldp	x2, x3, [x1]
    2870:	stp	x2, x3, [x0]
    2874:	ldp	x2, x3, [x1, #16]
    2878:	stp	x2, x3, [x0, #16]
    287c:	ldp	x2, x3, [x1, #32]
    2880:	stp	x2, x3, [x0, #32]
    2884:	ldp	x2, x3, [x1, #48]
    2888:	stp	x2, x3, [x0, #48]
    288c:	ldp	x2, x3, [x1, #64]
    2890:	stp	x2, x3, [x0, #64]
    2894:	ldp	x2, x3, [x1, #80]
    2898:	stp	x2, x3, [x0, #80]
    289c:	ldp	x2, x3, [x1, #96]
    28a0:	stp	x2, x3, [x0, #96]
    28a4:	add	x3, sp, #0x10
    28a8:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    28ac:	add	x2, x0, #0x328
    28b0:	ldr	w1, [sp, #300]
    28b4:	mov	x0, x3
    28b8:	bl	2288 <PyThread_free_lock@plt+0x278>
    28bc:	b	2a60 <PyThread_free_lock@plt+0xa50>
    28c0:	nop
    28c4:	add	x1, sp, #0x110
    28c8:	add	x0, sp, #0xa0
    28cc:	bl	2564 <PyThread_free_lock@plt+0x554>
    28d0:	ldr	x0, [sp, #272]
    28d4:	cmp	x0, #0x0
    28d8:	b.ne	28e4 <PyThread_free_lock@plt+0x8d4>  // b.any
    28dc:	mov	w0, #0x4                   	// #4
    28e0:	b	28e8 <PyThread_free_lock@plt+0x8d8>
    28e4:	mov	w0, #0x0                   	// #0
    28e8:	str	w0, [sp, #296]
    28ec:	add	x1, sp, #0x118
    28f0:	add	x0, sp, #0xa0
    28f4:	ldr	x2, [sp, #312]
    28f8:	bl	2724 <PyThread_free_lock@plt+0x714>
    28fc:	str	x0, [sp, #312]
    2900:	ldr	x0, [sp, #312]
    2904:	cmp	x0, #0x0
    2908:	b.ge	2918 <PyThread_free_lock@plt+0x908>  // b.tcont
    290c:	add	x0, sp, #0xa0
    2910:	bl	1f10 <deflateEnd@plt>
    2914:	b	2a60 <PyThread_free_lock@plt+0xa50>
    2918:	bl	1fa0 <PyEval_SaveThread@plt>
    291c:	str	x0, [sp, #288]
    2920:	add	x0, sp, #0xa0
    2924:	ldr	w1, [sp, #296]
    2928:	bl	1dd0 <deflate@plt>
    292c:	str	w0, [sp, #300]
    2930:	ldr	x0, [sp, #288]
    2934:	bl	1d10 <PyEval_RestoreThread@plt>
    2938:	ldr	w0, [sp, #300]
    293c:	cmn	w0, #0x2
    2940:	b.ne	29a8 <PyThread_free_lock@plt+0x998>  // b.any
    2944:	add	x0, sp, #0xa0
    2948:	bl	1f10 <deflateEnd@plt>
    294c:	add	x0, sp, #0x10
    2950:	add	x1, sp, #0xa0
    2954:	ldp	x2, x3, [x1]
    2958:	stp	x2, x3, [x0]
    295c:	ldp	x2, x3, [x1, #16]
    2960:	stp	x2, x3, [x0, #16]
    2964:	ldp	x2, x3, [x1, #32]
    2968:	stp	x2, x3, [x0, #32]
    296c:	ldp	x2, x3, [x1, #48]
    2970:	stp	x2, x3, [x0, #48]
    2974:	ldp	x2, x3, [x1, #64]
    2978:	stp	x2, x3, [x0, #64]
    297c:	ldp	x2, x3, [x1, #80]
    2980:	stp	x2, x3, [x0, #80]
    2984:	ldp	x2, x3, [x1, #96]
    2988:	stp	x2, x3, [x0, #96]
    298c:	add	x3, sp, #0x10
    2990:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2994:	add	x2, x0, #0x328
    2998:	ldr	w1, [sp, #300]
    299c:	mov	x0, x3
    29a0:	bl	2288 <PyThread_free_lock@plt+0x278>
    29a4:	b	2a60 <PyThread_free_lock@plt+0xa50>
    29a8:	ldr	w0, [sp, #192]
    29ac:	cmp	w0, #0x0
    29b0:	b.eq	28ec <PyThread_free_lock@plt+0x8dc>  // b.none
    29b4:	ldr	w0, [sp, #296]
    29b8:	cmp	w0, #0x4
    29bc:	b.ne	28c0 <PyThread_free_lock@plt+0x8b0>  // b.any
    29c0:	add	x0, sp, #0xa0
    29c4:	bl	1f10 <deflateEnd@plt>
    29c8:	str	w0, [sp, #300]
    29cc:	ldr	w0, [sp, #300]
    29d0:	cmp	w0, #0x0
    29d4:	b.ne	2a00 <PyThread_free_lock@plt+0x9f0>  // b.any
    29d8:	ldr	x1, [sp, #184]
    29dc:	ldr	x0, [sp, #280]
    29e0:	add	x0, x0, #0x20
    29e4:	sub	x1, x1, x0
    29e8:	add	x0, sp, #0x118
    29ec:	bl	1cf0 <_PyBytes_Resize@plt>
    29f0:	cmp	w0, #0x0
    29f4:	b.lt	2a5c <PyThread_free_lock@plt+0xa4c>  // b.tstop
    29f8:	ldr	x0, [sp, #280]
    29fc:	b	2a6c <PyThread_free_lock@plt+0xa5c>
    2a00:	add	x0, sp, #0x10
    2a04:	add	x1, sp, #0xa0
    2a08:	ldp	x2, x3, [x1]
    2a0c:	stp	x2, x3, [x0]
    2a10:	ldp	x2, x3, [x1, #16]
    2a14:	stp	x2, x3, [x0, #16]
    2a18:	ldp	x2, x3, [x1, #32]
    2a1c:	stp	x2, x3, [x0, #32]
    2a20:	ldp	x2, x3, [x1, #48]
    2a24:	stp	x2, x3, [x0, #48]
    2a28:	ldp	x2, x3, [x1, #64]
    2a2c:	stp	x2, x3, [x0, #64]
    2a30:	ldp	x2, x3, [x1, #80]
    2a34:	stp	x2, x3, [x0, #80]
    2a38:	ldp	x2, x3, [x1, #96]
    2a3c:	stp	x2, x3, [x0, #96]
    2a40:	add	x3, sp, #0x10
    2a44:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2a48:	add	x2, x0, #0x340
    2a4c:	ldr	w1, [sp, #300]
    2a50:	mov	x0, x3
    2a54:	bl	2288 <PyThread_free_lock@plt+0x278>
    2a58:	b	2a60 <PyThread_free_lock@plt+0xa50>
    2a5c:	nop
    2a60:	ldr	x0, [sp, #280]
    2a64:	bl	2250 <PyThread_free_lock@plt+0x240>
    2a68:	mov	x0, #0x0                   	// #0
    2a6c:	ldp	x29, x30, [sp], #320
    2a70:	ret
    2a74:	stp	x29, x30, [sp, #-48]!
    2a78:	mov	x29, sp
    2a7c:	str	x0, [sp, #24]
    2a80:	str	x1, [sp, #16]
    2a84:	ldr	x0, [sp, #24]
    2a88:	bl	1de0 <_PyLong_FromNbIndexOrNbInt@plt>
    2a8c:	str	x0, [sp, #40]
    2a90:	ldr	x0, [sp, #40]
    2a94:	cmp	x0, #0x0
    2a98:	b.ne	2aa4 <PyThread_free_lock@plt+0xa94>  // b.any
    2a9c:	mov	w0, #0x0                   	// #0
    2aa0:	b	2af4 <PyThread_free_lock@plt+0xae4>
    2aa4:	ldr	x0, [sp, #40]
    2aa8:	bl	1e20 <PyLong_AsSsize_t@plt>
    2aac:	str	x0, [sp, #32]
    2ab0:	ldr	x2, [sp, #40]
    2ab4:	mov	w1, #0x12d                 	// #301
    2ab8:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2abc:	add	x0, x0, #0x298
    2ac0:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    2ac4:	ldr	x0, [sp, #32]
    2ac8:	cmn	x0, #0x1
    2acc:	b.ne	2ae4 <PyThread_free_lock@plt+0xad4>  // b.any
    2ad0:	bl	1eb0 <PyErr_Occurred@plt>
    2ad4:	cmp	x0, #0x0
    2ad8:	b.eq	2ae4 <PyThread_free_lock@plt+0xad4>  // b.none
    2adc:	mov	w0, #0x0                   	// #0
    2ae0:	b	2af4 <PyThread_free_lock@plt+0xae4>
    2ae4:	ldr	x0, [sp, #16]
    2ae8:	ldr	x1, [sp, #32]
    2aec:	str	x1, [x0]
    2af0:	mov	w0, #0x1                   	// #1
    2af4:	ldp	x29, x30, [sp], #48
    2af8:	ret
    2afc:	stp	x29, x30, [sp, #-320]!
    2b00:	mov	x29, sp
    2b04:	str	x0, [sp, #152]
    2b08:	str	x1, [sp, #144]
    2b0c:	str	w2, [sp, #140]
    2b10:	str	x3, [sp, #128]
    2b14:	str	xzr, [sp, #288]
    2b18:	ldr	x0, [sp, #128]
    2b1c:	cmp	x0, #0x0
    2b20:	b.ge	2b48 <PyThread_free_lock@plt+0xb38>  // b.tcont
    2b24:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    2b28:	ldr	x0, [x0, #4032]
    2b2c:	ldr	x2, [x0]
    2b30:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2b34:	add	x1, x0, #0x360
    2b38:	mov	x0, x2
    2b3c:	bl	1dc0 <PyErr_SetString@plt>
    2b40:	mov	x0, #0x0                   	// #0
    2b44:	b	2ed4 <PyThread_free_lock@plt+0xec4>
    2b48:	ldr	x0, [sp, #128]
    2b4c:	cmp	x0, #0x0
    2b50:	b.ne	2b5c <PyThread_free_lock@plt+0xb4c>  // b.any
    2b54:	mov	x0, #0x1                   	// #1
    2b58:	str	x0, [sp, #128]
    2b5c:	ldr	x0, [sp, #144]
    2b60:	ldr	x0, [x0]
    2b64:	str	x0, [sp, #312]
    2b68:	ldr	x0, [sp, #144]
    2b6c:	ldr	x0, [x0, #16]
    2b70:	str	x0, [sp, #280]
    2b74:	str	xzr, [sp, #248]
    2b78:	adrp	x0, 2000 <deflateSetDictionary@plt>
    2b7c:	add	x0, x0, #0x4e8
    2b80:	str	x0, [sp, #232]
    2b84:	adrp	x0, 2000 <deflateSetDictionary@plt>
    2b88:	add	x0, x0, #0x540
    2b8c:	str	x0, [sp, #240]
    2b90:	str	wzr, [sp, #176]
    2b94:	ldr	x0, [sp, #312]
    2b98:	str	x0, [sp, #168]
    2b9c:	add	x4, sp, #0xa8
    2ba0:	mov	w3, #0x70                  	// #112
    2ba4:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2ba8:	add	x2, x0, #0x2e0
    2bac:	ldr	w1, [sp, #140]
    2bb0:	mov	x0, x4
    2bb4:	bl	1f80 <inflateInit2_@plt>
    2bb8:	str	w0, [sp, #308]
    2bbc:	ldr	w0, [sp, #308]
    2bc0:	cmn	w0, #0x4
    2bc4:	b.eq	2bd8 <PyThread_free_lock@plt+0xbc8>  // b.none
    2bc8:	ldr	w0, [sp, #308]
    2bcc:	cmp	w0, #0x0
    2bd0:	b.ne	2bf8 <PyThread_free_lock@plt+0xbe8>  // b.any
    2bd4:	b	2c60 <PyThread_free_lock@plt+0xc50>
    2bd8:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    2bdc:	ldr	x0, [x0, #4024]
    2be0:	ldr	x2, [x0]
    2be4:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2be8:	add	x1, x0, #0x380
    2bec:	mov	x0, x2
    2bf0:	bl	1dc0 <PyErr_SetString@plt>
    2bf4:	b	2ec8 <PyThread_free_lock@plt+0xeb8>
    2bf8:	add	x0, sp, #0xa8
    2bfc:	bl	1e90 <inflateEnd@plt>
    2c00:	add	x0, sp, #0x10
    2c04:	add	x1, sp, #0xa8
    2c08:	ldp	x2, x3, [x1]
    2c0c:	stp	x2, x3, [x0]
    2c10:	ldp	x2, x3, [x1, #16]
    2c14:	stp	x2, x3, [x0, #16]
    2c18:	ldp	x2, x3, [x1, #32]
    2c1c:	stp	x2, x3, [x0, #32]
    2c20:	ldp	x2, x3, [x1, #48]
    2c24:	stp	x2, x3, [x0, #48]
    2c28:	ldp	x2, x3, [x1, #64]
    2c2c:	stp	x2, x3, [x0, #64]
    2c30:	ldp	x2, x3, [x1, #80]
    2c34:	stp	x2, x3, [x0, #80]
    2c38:	ldp	x2, x3, [x1, #96]
    2c3c:	stp	x2, x3, [x0, #96]
    2c40:	add	x3, sp, #0x10
    2c44:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2c48:	add	x2, x0, #0x3a8
    2c4c:	ldr	w1, [sp, #308]
    2c50:	mov	x0, x3
    2c54:	bl	2288 <PyThread_free_lock@plt+0x278>
    2c58:	b	2ec8 <PyThread_free_lock@plt+0xeb8>
    2c5c:	nop
    2c60:	add	x1, sp, #0x118
    2c64:	add	x0, sp, #0xa8
    2c68:	bl	2564 <PyThread_free_lock@plt+0x554>
    2c6c:	ldr	x0, [sp, #280]
    2c70:	cmp	x0, #0x0
    2c74:	b.ne	2c80 <PyThread_free_lock@plt+0xc70>  // b.any
    2c78:	mov	w0, #0x4                   	// #4
    2c7c:	b	2c84 <PyThread_free_lock@plt+0xc74>
    2c80:	mov	w0, #0x0                   	// #0
    2c84:	str	w0, [sp, #304]
    2c88:	add	x1, sp, #0x120
    2c8c:	add	x0, sp, #0xa8
    2c90:	ldr	x2, [sp, #128]
    2c94:	bl	2724 <PyThread_free_lock@plt+0x714>
    2c98:	str	x0, [sp, #128]
    2c9c:	ldr	x0, [sp, #128]
    2ca0:	cmp	x0, #0x0
    2ca4:	b.ge	2cb4 <PyThread_free_lock@plt+0xca4>  // b.tcont
    2ca8:	add	x0, sp, #0xa8
    2cac:	bl	1e90 <inflateEnd@plt>
    2cb0:	b	2ec8 <PyThread_free_lock@plt+0xeb8>
    2cb4:	bl	1fa0 <PyEval_SaveThread@plt>
    2cb8:	str	x0, [sp, #296]
    2cbc:	add	x0, sp, #0xa8
    2cc0:	ldr	w1, [sp, #304]
    2cc4:	bl	1d00 <inflate@plt>
    2cc8:	str	w0, [sp, #308]
    2ccc:	ldr	x0, [sp, #296]
    2cd0:	bl	1d10 <PyEval_RestoreThread@plt>
    2cd4:	ldr	w0, [sp, #308]
    2cd8:	cmp	w0, #0x1
    2cdc:	b.gt	2d2c <PyThread_free_lock@plt+0xd1c>
    2ce0:	ldr	w0, [sp, #308]
    2ce4:	cmp	w0, #0x0
    2ce8:	b.ge	2d90 <PyThread_free_lock@plt+0xd80>  // b.tcont
    2cec:	ldr	w0, [sp, #308]
    2cf0:	cmn	w0, #0x5
    2cf4:	b.eq	2d90 <PyThread_free_lock@plt+0xd80>  // b.none
    2cf8:	ldr	w0, [sp, #308]
    2cfc:	cmn	w0, #0x4
    2d00:	b.ne	2d2c <PyThread_free_lock@plt+0xd1c>  // b.any
    2d04:	add	x0, sp, #0xa8
    2d08:	bl	1e90 <inflateEnd@plt>
    2d0c:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    2d10:	ldr	x0, [x0, #4024]
    2d14:	ldr	x2, [x0]
    2d18:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2d1c:	add	x1, x0, #0x380
    2d20:	mov	x0, x2
    2d24:	bl	1dc0 <PyErr_SetString@plt>
    2d28:	b	2ec8 <PyThread_free_lock@plt+0xeb8>
    2d2c:	add	x0, sp, #0xa8
    2d30:	bl	1e90 <inflateEnd@plt>
    2d34:	add	x0, sp, #0x10
    2d38:	add	x1, sp, #0xa8
    2d3c:	ldp	x2, x3, [x1]
    2d40:	stp	x2, x3, [x0]
    2d44:	ldp	x2, x3, [x1, #16]
    2d48:	stp	x2, x3, [x0, #16]
    2d4c:	ldp	x2, x3, [x1, #32]
    2d50:	stp	x2, x3, [x0, #32]
    2d54:	ldp	x2, x3, [x1, #48]
    2d58:	stp	x2, x3, [x0, #48]
    2d5c:	ldp	x2, x3, [x1, #64]
    2d60:	stp	x2, x3, [x0, #64]
    2d64:	ldp	x2, x3, [x1, #80]
    2d68:	stp	x2, x3, [x0, #80]
    2d6c:	ldp	x2, x3, [x1, #96]
    2d70:	stp	x2, x3, [x0, #96]
    2d74:	add	x3, sp, #0x10
    2d78:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2d7c:	add	x2, x0, #0x3d0
    2d80:	ldr	w1, [sp, #308]
    2d84:	mov	x0, x3
    2d88:	bl	2288 <PyThread_free_lock@plt+0x278>
    2d8c:	b	2ec8 <PyThread_free_lock@plt+0xeb8>
    2d90:	nop
    2d94:	ldr	w0, [sp, #200]
    2d98:	cmp	w0, #0x0
    2d9c:	b.eq	2c88 <PyThread_free_lock@plt+0xc78>  // b.none
    2da0:	ldr	w0, [sp, #308]
    2da4:	cmp	w0, #0x1
    2da8:	b.eq	2db8 <PyThread_free_lock@plt+0xda8>  // b.none
    2dac:	ldr	x0, [sp, #280]
    2db0:	cmp	x0, #0x0
    2db4:	b.ne	2c5c <PyThread_free_lock@plt+0xc4c>  // b.any
    2db8:	ldr	w0, [sp, #308]
    2dbc:	cmp	w0, #0x1
    2dc0:	b.eq	2e28 <PyThread_free_lock@plt+0xe18>  // b.none
    2dc4:	add	x0, sp, #0xa8
    2dc8:	bl	1e90 <inflateEnd@plt>
    2dcc:	add	x0, sp, #0x10
    2dd0:	add	x1, sp, #0xa8
    2dd4:	ldp	x2, x3, [x1]
    2dd8:	stp	x2, x3, [x0]
    2ddc:	ldp	x2, x3, [x1, #16]
    2de0:	stp	x2, x3, [x0, #16]
    2de4:	ldp	x2, x3, [x1, #32]
    2de8:	stp	x2, x3, [x0, #32]
    2dec:	ldp	x2, x3, [x1, #48]
    2df0:	stp	x2, x3, [x0, #48]
    2df4:	ldp	x2, x3, [x1, #64]
    2df8:	stp	x2, x3, [x0, #64]
    2dfc:	ldp	x2, x3, [x1, #80]
    2e00:	stp	x2, x3, [x0, #80]
    2e04:	ldp	x2, x3, [x1, #96]
    2e08:	stp	x2, x3, [x0, #96]
    2e0c:	add	x3, sp, #0x10
    2e10:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2e14:	add	x2, x0, #0x3d0
    2e18:	ldr	w1, [sp, #308]
    2e1c:	mov	x0, x3
    2e20:	bl	2288 <PyThread_free_lock@plt+0x278>
    2e24:	b	2ec8 <PyThread_free_lock@plt+0xeb8>
    2e28:	add	x0, sp, #0xa8
    2e2c:	bl	1e90 <inflateEnd@plt>
    2e30:	str	w0, [sp, #308]
    2e34:	ldr	w0, [sp, #308]
    2e38:	cmp	w0, #0x0
    2e3c:	b.eq	2e9c <PyThread_free_lock@plt+0xe8c>  // b.none
    2e40:	add	x0, sp, #0x10
    2e44:	add	x1, sp, #0xa8
    2e48:	ldp	x2, x3, [x1]
    2e4c:	stp	x2, x3, [x0]
    2e50:	ldp	x2, x3, [x1, #16]
    2e54:	stp	x2, x3, [x0, #16]
    2e58:	ldp	x2, x3, [x1, #32]
    2e5c:	stp	x2, x3, [x0, #32]
    2e60:	ldp	x2, x3, [x1, #48]
    2e64:	stp	x2, x3, [x0, #48]
    2e68:	ldp	x2, x3, [x1, #64]
    2e6c:	stp	x2, x3, [x0, #64]
    2e70:	ldp	x2, x3, [x1, #80]
    2e74:	stp	x2, x3, [x0, #80]
    2e78:	ldp	x2, x3, [x1, #96]
    2e7c:	stp	x2, x3, [x0, #96]
    2e80:	add	x3, sp, #0x10
    2e84:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2e88:	add	x2, x0, #0x3f0
    2e8c:	ldr	w1, [sp, #308]
    2e90:	mov	x0, x3
    2e94:	bl	2288 <PyThread_free_lock@plt+0x278>
    2e98:	b	2ec8 <PyThread_free_lock@plt+0xeb8>
    2e9c:	ldr	x1, [sp, #192]
    2ea0:	ldr	x0, [sp, #288]
    2ea4:	add	x0, x0, #0x20
    2ea8:	sub	x1, x1, x0
    2eac:	add	x0, sp, #0x120
    2eb0:	bl	1cf0 <_PyBytes_Resize@plt>
    2eb4:	cmp	w0, #0x0
    2eb8:	b.lt	2ec4 <PyThread_free_lock@plt+0xeb4>  // b.tstop
    2ebc:	ldr	x0, [sp, #288]
    2ec0:	b	2ed4 <PyThread_free_lock@plt+0xec4>
    2ec4:	nop
    2ec8:	ldr	x0, [sp, #288]
    2ecc:	bl	2250 <PyThread_free_lock@plt+0x240>
    2ed0:	mov	x0, #0x0                   	// #0
    2ed4:	ldp	x29, x30, [sp], #320
    2ed8:	ret
    2edc:	stp	x29, x30, [sp, #-208]!
    2ee0:	mov	x29, sp
    2ee4:	str	x0, [sp, #168]
    2ee8:	str	w1, [sp, #164]
    2eec:	str	w2, [sp, #160]
    2ef0:	str	w3, [sp, #156]
    2ef4:	str	w4, [sp, #152]
    2ef8:	str	w5, [sp, #148]
    2efc:	str	x6, [sp, #136]
    2f00:	str	xzr, [sp, #200]
    2f04:	ldr	x0, [sp, #136]
    2f08:	ldr	x0, [x0]
    2f0c:	cmp	x0, #0x0
    2f10:	b.eq	2f4c <PyThread_free_lock@plt+0xf3c>  // b.none
    2f14:	ldr	x0, [sp, #136]
    2f18:	ldr	x0, [x0, #16]
    2f1c:	mov	x1, x0
    2f20:	mov	x0, #0xffffffff            	// #4294967295
    2f24:	cmp	x1, x0
    2f28:	b.ls	2f4c <PyThread_free_lock@plt+0xf3c>  // b.plast
    2f2c:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    2f30:	ldr	x0, [x0, #4056]
    2f34:	ldr	x2, [x0]
    2f38:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2f3c:	add	x1, x0, #0x410
    2f40:	mov	x0, x2
    2f44:	bl	1dc0 <PyErr_SetString@plt>
    2f48:	b	314c <PyThread_free_lock@plt+0x113c>
    2f4c:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    2f50:	add	x0, x0, #0x1b0
    2f54:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    2f58:	str	x0, [sp, #200]
    2f5c:	ldr	x0, [sp, #200]
    2f60:	cmp	x0, #0x0
    2f64:	b.eq	3148 <PyThread_free_lock@plt+0x1138>  // b.none
    2f68:	ldr	x0, [sp, #200]
    2f6c:	str	xzr, [x0, #96]
    2f70:	ldr	x0, [sp, #200]
    2f74:	adrp	x1, 2000 <deflateSetDictionary@plt>
    2f78:	add	x1, x1, #0x4e8
    2f7c:	str	x1, [x0, #80]
    2f80:	ldr	x0, [sp, #200]
    2f84:	adrp	x1, 2000 <deflateSetDictionary@plt>
    2f88:	add	x1, x1, #0x540
    2f8c:	str	x1, [x0, #88]
    2f90:	ldr	x0, [sp, #200]
    2f94:	str	xzr, [x0, #16]
    2f98:	ldr	x0, [sp, #200]
    2f9c:	str	wzr, [x0, #24]
    2fa0:	ldr	x0, [sp, #200]
    2fa4:	add	x8, x0, #0x10
    2fa8:	mov	w7, #0x70                  	// #112
    2fac:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    2fb0:	add	x6, x0, #0x2e0
    2fb4:	ldr	w5, [sp, #148]
    2fb8:	ldr	w4, [sp, #152]
    2fbc:	ldr	w3, [sp, #156]
    2fc0:	ldr	w2, [sp, #160]
    2fc4:	ldr	w1, [sp, #164]
    2fc8:	mov	x0, x8
    2fcc:	bl	1e00 <deflateInit2_@plt>
    2fd0:	str	w0, [sp, #196]
    2fd4:	ldr	w0, [sp, #196]
    2fd8:	cmp	w0, #0x0
    2fdc:	b.eq	3008 <PyThread_free_lock@plt+0xff8>  // b.none
    2fe0:	ldr	w0, [sp, #196]
    2fe4:	cmp	w0, #0x0
    2fe8:	b.gt	30e8 <PyThread_free_lock@plt+0x10d8>
    2fec:	ldr	w0, [sp, #196]
    2ff0:	cmn	w0, #0x4
    2ff4:	b.eq	30a8 <PyThread_free_lock@plt+0x1098>  // b.none
    2ff8:	ldr	w0, [sp, #196]
    2ffc:	cmn	w0, #0x2
    3000:	b.eq	30c8 <PyThread_free_lock@plt+0x10b8>  // b.none
    3004:	b	30e8 <PyThread_free_lock@plt+0x10d8>
    3008:	ldr	x0, [sp, #200]
    300c:	mov	w1, #0x1                   	// #1
    3010:	str	w1, [x0, #148]
    3014:	ldr	x0, [sp, #136]
    3018:	ldr	x0, [x0]
    301c:	cmp	x0, #0x0
    3020:	b.eq	317c <PyThread_free_lock@plt+0x116c>  // b.none
    3024:	ldr	x0, [sp, #200]
    3028:	add	x3, x0, #0x10
    302c:	ldr	x0, [sp, #136]
    3030:	ldr	x1, [x0]
    3034:	ldr	x0, [sp, #136]
    3038:	ldr	x0, [x0, #16]
    303c:	mov	w2, w0
    3040:	mov	x0, x3
    3044:	bl	2000 <deflateSetDictionary@plt>
    3048:	str	w0, [sp, #196]
    304c:	ldr	w0, [sp, #196]
    3050:	cmn	w0, #0x2
    3054:	b.eq	3068 <PyThread_free_lock@plt+0x1058>  // b.none
    3058:	ldr	w0, [sp, #196]
    305c:	cmp	w0, #0x0
    3060:	b.ne	3088 <PyThread_free_lock@plt+0x1078>  // b.any
    3064:	b	3188 <PyThread_free_lock@plt+0x1178>
    3068:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    306c:	ldr	x0, [x0, #4032]
    3070:	ldr	x2, [x0]
    3074:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3078:	add	x1, x0, #0x440
    307c:	mov	x0, x2
    3080:	bl	1dc0 <PyErr_SetString@plt>
    3084:	b	314c <PyThread_free_lock@plt+0x113c>
    3088:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    308c:	ldr	x0, [x0, #4032]
    3090:	ldr	x2, [x0]
    3094:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3098:	add	x1, x0, #0x458
    309c:	mov	x0, x2
    30a0:	bl	1dc0 <PyErr_SetString@plt>
    30a4:	b	314c <PyThread_free_lock@plt+0x113c>
    30a8:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    30ac:	ldr	x0, [x0, #4024]
    30b0:	ldr	x2, [x0]
    30b4:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    30b8:	add	x1, x0, #0x470
    30bc:	mov	x0, x2
    30c0:	bl	1dc0 <PyErr_SetString@plt>
    30c4:	b	314c <PyThread_free_lock@plt+0x113c>
    30c8:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    30cc:	ldr	x0, [x0, #4032]
    30d0:	ldr	x2, [x0]
    30d4:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    30d8:	add	x1, x0, #0x4a0
    30dc:	mov	x0, x2
    30e0:	bl	1dc0 <PyErr_SetString@plt>
    30e4:	b	314c <PyThread_free_lock@plt+0x113c>
    30e8:	ldr	x0, [sp, #200]
    30ec:	add	x1, x0, #0x10
    30f0:	add	x0, sp, #0x10
    30f4:	ldp	x2, x3, [x1]
    30f8:	stp	x2, x3, [x0]
    30fc:	ldp	x2, x3, [x1, #16]
    3100:	stp	x2, x3, [x0, #16]
    3104:	ldp	x2, x3, [x1, #32]
    3108:	stp	x2, x3, [x0, #32]
    310c:	ldp	x2, x3, [x1, #48]
    3110:	stp	x2, x3, [x0, #48]
    3114:	ldp	x2, x3, [x1, #64]
    3118:	stp	x2, x3, [x0, #64]
    311c:	ldp	x2, x3, [x1, #80]
    3120:	stp	x2, x3, [x0, #80]
    3124:	ldp	x2, x3, [x1, #96]
    3128:	stp	x2, x3, [x0, #96]
    312c:	add	x3, sp, #0x10
    3130:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3134:	add	x2, x0, #0x4c0
    3138:	ldr	w1, [sp, #196]
    313c:	mov	x0, x3
    3140:	bl	2288 <PyThread_free_lock@plt+0x278>
    3144:	b	314c <PyThread_free_lock@plt+0x113c>
    3148:	nop
    314c:	ldr	x0, [sp, #200]
    3150:	str	x0, [sp, #184]
    3154:	ldr	x0, [sp, #184]
    3158:	cmp	x0, #0x0
    315c:	b.eq	3184 <PyThread_free_lock@plt+0x1174>  // b.none
    3160:	str	xzr, [sp, #200]
    3164:	ldr	x2, [sp, #184]
    3168:	mov	w1, #0x1fa                 	// #506
    316c:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3170:	add	x0, x0, #0x298
    3174:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    3178:	b	3188 <PyThread_free_lock@plt+0x1178>
    317c:	nop
    3180:	b	3188 <PyThread_free_lock@plt+0x1178>
    3184:	nop
    3188:	ldr	x0, [sp, #200]
    318c:	ldp	x29, x30, [sp], #208
    3190:	ret
    3194:	stp	x29, x30, [sp, #-240]!
    3198:	mov	x29, sp
    319c:	str	x0, [sp, #136]
    31a0:	ldr	x0, [sp, #136]
    31a4:	ldr	x0, [x0, #152]
    31a8:	add	x1, sp, #0x98
    31ac:	mov	w2, #0x0                   	// #0
    31b0:	bl	1f30 <PyObject_GetBuffer@plt>
    31b4:	cmn	w0, #0x1
    31b8:	b.ne	31c4 <PyThread_free_lock@plt+0x11b4>  // b.any
    31bc:	mov	w0, #0xffffffff            	// #-1
    31c0:	b	3298 <PyThread_free_lock@plt+0x1288>
    31c4:	ldr	x0, [sp, #168]
    31c8:	mov	x1, x0
    31cc:	mov	x0, #0xffffffff            	// #4294967295
    31d0:	cmp	x1, x0
    31d4:	b.ls	3204 <PyThread_free_lock@plt+0x11f4>  // b.plast
    31d8:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    31dc:	ldr	x0, [x0, #4056]
    31e0:	ldr	x2, [x0]
    31e4:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    31e8:	add	x1, x0, #0x410
    31ec:	mov	x0, x2
    31f0:	bl	1dc0 <PyErr_SetString@plt>
    31f4:	add	x0, sp, #0x98
    31f8:	bl	1d20 <PyBuffer_Release@plt>
    31fc:	mov	w0, #0xffffffff            	// #-1
    3200:	b	3298 <PyThread_free_lock@plt+0x1288>
    3204:	ldr	x0, [sp, #136]
    3208:	add	x0, x0, #0x10
    320c:	ldr	x1, [sp, #152]
    3210:	ldr	x2, [sp, #168]
    3214:	bl	1ed0 <inflateSetDictionary@plt>
    3218:	str	w0, [sp, #236]
    321c:	add	x0, sp, #0x98
    3220:	bl	1d20 <PyBuffer_Release@plt>
    3224:	ldr	w0, [sp, #236]
    3228:	cmp	w0, #0x0
    322c:	b.eq	3294 <PyThread_free_lock@plt+0x1284>  // b.none
    3230:	ldr	x0, [sp, #136]
    3234:	add	x1, x0, #0x10
    3238:	add	x0, sp, #0x10
    323c:	ldp	x2, x3, [x1]
    3240:	stp	x2, x3, [x0]
    3244:	ldp	x2, x3, [x1, #16]
    3248:	stp	x2, x3, [x0, #16]
    324c:	ldp	x2, x3, [x1, #32]
    3250:	stp	x2, x3, [x0, #32]
    3254:	ldp	x2, x3, [x1, #48]
    3258:	stp	x2, x3, [x0, #48]
    325c:	ldp	x2, x3, [x1, #64]
    3260:	stp	x2, x3, [x0, #64]
    3264:	ldp	x2, x3, [x1, #80]
    3268:	stp	x2, x3, [x0, #80]
    326c:	ldp	x2, x3, [x1, #96]
    3270:	stp	x2, x3, [x0, #96]
    3274:	add	x3, sp, #0x10
    3278:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    327c:	add	x2, x0, #0x4e8
    3280:	ldr	w1, [sp, #236]
    3284:	mov	x0, x3
    3288:	bl	2288 <PyThread_free_lock@plt+0x278>
    328c:	mov	w0, #0xffffffff            	// #-1
    3290:	b	3298 <PyThread_free_lock@plt+0x1288>
    3294:	mov	w0, #0x0                   	// #0
    3298:	ldp	x29, x30, [sp], #240
    329c:	ret
    32a0:	stp	x29, x30, [sp, #-176]!
    32a4:	mov	x29, sp
    32a8:	str	x0, [sp, #152]
    32ac:	str	w1, [sp, #148]
    32b0:	str	x2, [sp, #136]
    32b4:	ldr	x0, [sp, #136]
    32b8:	cmp	x0, #0x0
    32bc:	b.eq	3310 <PyThread_free_lock@plt+0x1300>  // b.none
    32c0:	ldr	x0, [sp, #136]
    32c4:	ldr	x0, [x0, #8]
    32c8:	ldr	x0, [x0, #160]
    32cc:	cmp	x0, #0x0
    32d0:	b.eq	32ec <PyThread_free_lock@plt+0x12dc>  // b.none
    32d4:	ldr	x0, [sp, #136]
    32d8:	ldr	x0, [x0, #8]
    32dc:	ldr	x0, [x0, #160]
    32e0:	ldr	x0, [x0]
    32e4:	cmp	x0, #0x0
    32e8:	b.ne	3310 <PyThread_free_lock@plt+0x1300>  // b.any
    32ec:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    32f0:	ldr	x0, [x0, #4040]
    32f4:	ldr	x2, [x0]
    32f8:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    32fc:	add	x1, x0, #0x500
    3300:	mov	x0, x2
    3304:	bl	1dc0 <PyErr_SetString@plt>
    3308:	mov	x0, #0x0                   	// #0
    330c:	b	3524 <PyThread_free_lock@plt+0x1514>
    3310:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    3314:	add	x0, x0, #0x350
    3318:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    331c:	str	x0, [sp, #168]
    3320:	ldr	x0, [sp, #168]
    3324:	cmp	x0, #0x0
    3328:	b.ne	3334 <PyThread_free_lock@plt+0x1324>  // b.any
    332c:	mov	x0, #0x0                   	// #0
    3330:	b	3524 <PyThread_free_lock@plt+0x1514>
    3334:	ldr	x0, [sp, #168]
    3338:	str	xzr, [x0, #96]
    333c:	ldr	x0, [sp, #168]
    3340:	adrp	x1, 2000 <deflateSetDictionary@plt>
    3344:	add	x1, x1, #0x4e8
    3348:	str	x1, [x0, #80]
    334c:	ldr	x0, [sp, #168]
    3350:	adrp	x1, 2000 <deflateSetDictionary@plt>
    3354:	add	x1, x1, #0x540
    3358:	str	x1, [x0, #88]
    335c:	ldr	x0, [sp, #168]
    3360:	str	xzr, [x0, #16]
    3364:	ldr	x0, [sp, #168]
    3368:	str	wzr, [x0, #24]
    336c:	ldr	x0, [sp, #136]
    3370:	cmp	x0, #0x0
    3374:	b.eq	338c <PyThread_free_lock@plt+0x137c>  // b.none
    3378:	ldr	x0, [sp, #136]
    337c:	bl	21b0 <PyThread_free_lock@plt+0x1a0>
    3380:	ldr	x0, [sp, #168]
    3384:	ldr	x1, [sp, #136]
    3388:	str	x1, [x0, #152]
    338c:	ldr	x0, [sp, #168]
    3390:	add	x4, x0, #0x10
    3394:	mov	w3, #0x70                  	// #112
    3398:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    339c:	add	x2, x0, #0x2e0
    33a0:	ldr	w1, [sp, #148]
    33a4:	mov	x0, x4
    33a8:	bl	1f80 <inflateInit2_@plt>
    33ac:	str	w0, [sp, #164]
    33b0:	ldr	w0, [sp, #164]
    33b4:	cmp	w0, #0x0
    33b8:	b.eq	33e4 <PyThread_free_lock@plt+0x13d4>  // b.none
    33bc:	ldr	w0, [sp, #164]
    33c0:	cmp	w0, #0x0
    33c4:	b.gt	34b0 <PyThread_free_lock@plt+0x14a0>
    33c8:	ldr	w0, [sp, #164]
    33cc:	cmn	w0, #0x4
    33d0:	b.eq	3478 <PyThread_free_lock@plt+0x1468>  // b.none
    33d4:	ldr	w0, [sp, #164]
    33d8:	cmn	w0, #0x2
    33dc:	b.eq	3440 <PyThread_free_lock@plt+0x1430>  // b.none
    33e0:	b	34b0 <PyThread_free_lock@plt+0x14a0>
    33e4:	ldr	x0, [sp, #168]
    33e8:	mov	w1, #0x1                   	// #1
    33ec:	str	w1, [x0, #148]
    33f0:	ldr	x0, [sp, #168]
    33f4:	ldr	x0, [x0, #152]
    33f8:	cmp	x0, #0x0
    33fc:	b.eq	3438 <PyThread_free_lock@plt+0x1428>  // b.none
    3400:	ldr	w0, [sp, #148]
    3404:	cmp	w0, #0x0
    3408:	b.ge	3438 <PyThread_free_lock@plt+0x1428>  // b.tcont
    340c:	ldr	x0, [sp, #168]
    3410:	bl	3194 <PyThread_free_lock@plt+0x1184>
    3414:	cmp	w0, #0x0
    3418:	b.ge	3438 <PyThread_free_lock@plt+0x1428>  // b.tcont
    341c:	ldr	x2, [sp, #168]
    3420:	mov	w1, #0x244                 	// #580
    3424:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3428:	add	x0, x0, #0x298
    342c:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    3430:	mov	x0, #0x0                   	// #0
    3434:	b	3524 <PyThread_free_lock@plt+0x1514>
    3438:	ldr	x0, [sp, #168]
    343c:	b	3524 <PyThread_free_lock@plt+0x1514>
    3440:	ldr	x2, [sp, #168]
    3444:	mov	w1, #0x251                 	// #593
    3448:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    344c:	add	x0, x0, #0x298
    3450:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    3454:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    3458:	ldr	x0, [x0, #4032]
    345c:	ldr	x2, [x0]
    3460:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3464:	add	x1, x0, #0x4a0
    3468:	mov	x0, x2
    346c:	bl	1dc0 <PyErr_SetString@plt>
    3470:	mov	x0, #0x0                   	// #0
    3474:	b	3524 <PyThread_free_lock@plt+0x1514>
    3478:	ldr	x2, [sp, #168]
    347c:	mov	w1, #0x255                 	// #597
    3480:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3484:	add	x0, x0, #0x298
    3488:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    348c:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    3490:	ldr	x0, [x0, #4024]
    3494:	ldr	x2, [x0]
    3498:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    349c:	add	x1, x0, #0x530
    34a0:	mov	x0, x2
    34a4:	bl	1dc0 <PyErr_SetString@plt>
    34a8:	mov	x0, #0x0                   	// #0
    34ac:	b	3524 <PyThread_free_lock@plt+0x1514>
    34b0:	ldr	x0, [sp, #168]
    34b4:	add	x1, x0, #0x10
    34b8:	add	x0, sp, #0x10
    34bc:	ldp	x2, x3, [x1]
    34c0:	stp	x2, x3, [x0]
    34c4:	ldp	x2, x3, [x1, #16]
    34c8:	stp	x2, x3, [x0, #16]
    34cc:	ldp	x2, x3, [x1, #32]
    34d0:	stp	x2, x3, [x0, #32]
    34d4:	ldp	x2, x3, [x1, #48]
    34d8:	stp	x2, x3, [x0, #48]
    34dc:	ldp	x2, x3, [x1, #64]
    34e0:	stp	x2, x3, [x0, #64]
    34e4:	ldp	x2, x3, [x1, #80]
    34e8:	stp	x2, x3, [x0, #80]
    34ec:	ldp	x2, x3, [x1, #96]
    34f0:	stp	x2, x3, [x0, #96]
    34f4:	add	x3, sp, #0x10
    34f8:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    34fc:	add	x2, x0, #0x560
    3500:	ldr	w1, [sp, #164]
    3504:	mov	x0, x3
    3508:	bl	2288 <PyThread_free_lock@plt+0x278>
    350c:	ldr	x2, [sp, #168]
    3510:	mov	w1, #0x25b                 	// #603
    3514:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3518:	add	x0, x0, #0x298
    351c:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    3520:	mov	x0, #0x0                   	// #0
    3524:	ldp	x29, x30, [sp], #176
    3528:	ret
    352c:	stp	x29, x30, [sp, #-32]!
    3530:	mov	x29, sp
    3534:	str	x0, [sp, #24]
    3538:	ldr	x0, [sp, #24]
    353c:	ldr	x0, [x0, #160]
    3540:	bl	2010 <PyThread_free_lock@plt>
    3544:	ldr	x0, [sp, #24]
    3548:	ldr	x0, [x0, #128]
    354c:	bl	2250 <PyThread_free_lock@plt+0x240>
    3550:	ldr	x0, [sp, #24]
    3554:	ldr	x0, [x0, #136]
    3558:	bl	2250 <PyThread_free_lock@plt+0x240>
    355c:	ldr	x0, [sp, #24]
    3560:	ldr	x0, [x0, #152]
    3564:	bl	2250 <PyThread_free_lock@plt+0x240>
    3568:	ldr	x0, [sp, #24]
    356c:	bl	1df0 <PyObject_Free@plt>
    3570:	nop
    3574:	ldp	x29, x30, [sp], #32
    3578:	ret
    357c:	stp	x29, x30, [sp, #-32]!
    3580:	mov	x29, sp
    3584:	str	x0, [sp, #24]
    3588:	ldr	x0, [sp, #24]
    358c:	ldr	w0, [x0, #148]
    3590:	cmp	w0, #0x0
    3594:	b.eq	35a4 <PyThread_free_lock@plt+0x1594>  // b.none
    3598:	ldr	x0, [sp, #24]
    359c:	add	x0, x0, #0x10
    35a0:	bl	1f10 <deflateEnd@plt>
    35a4:	ldr	x0, [sp, #24]
    35a8:	bl	352c <PyThread_free_lock@plt+0x151c>
    35ac:	nop
    35b0:	ldp	x29, x30, [sp], #32
    35b4:	ret
    35b8:	stp	x29, x30, [sp, #-32]!
    35bc:	mov	x29, sp
    35c0:	str	x0, [sp, #24]
    35c4:	ldr	x0, [sp, #24]
    35c8:	ldr	w0, [x0, #148]
    35cc:	cmp	w0, #0x0
    35d0:	b.eq	35e0 <PyThread_free_lock@plt+0x15d0>  // b.none
    35d4:	ldr	x0, [sp, #24]
    35d8:	add	x0, x0, #0x10
    35dc:	bl	1e90 <inflateEnd@plt>
    35e0:	ldr	x0, [sp, #24]
    35e4:	bl	352c <PyThread_free_lock@plt+0x151c>
    35e8:	nop
    35ec:	ldp	x29, x30, [sp], #32
    35f0:	ret
    35f4:	stp	x29, x30, [sp, #-208]!
    35f8:	mov	x29, sp
    35fc:	str	x0, [sp, #136]
    3600:	str	x1, [sp, #128]
    3604:	str	xzr, [sp, #160]
    3608:	mov	x0, #0x4000                	// #16384
    360c:	str	x0, [sp, #200]
    3610:	ldr	x0, [sp, #128]
    3614:	ldr	x1, [x0]
    3618:	ldr	x0, [sp, #136]
    361c:	str	x1, [x0, #16]
    3620:	ldr	x0, [sp, #128]
    3624:	ldr	x0, [x0, #16]
    3628:	str	x0, [sp, #152]
    362c:	bl	1fa0 <PyEval_SaveThread@plt>
    3630:	str	x0, [sp, #192]
    3634:	ldr	x0, [sp, #136]
    3638:	ldr	x0, [x0, #160]
    363c:	mov	w1, #0x1                   	// #1
    3640:	bl	1da0 <PyThread_acquire_lock@plt>
    3644:	ldr	x0, [sp, #192]
    3648:	bl	1d10 <PyEval_RestoreThread@plt>
    364c:	ldr	x0, [sp, #136]
    3650:	add	x0, x0, #0x10
    3654:	add	x1, sp, #0x98
    3658:	bl	2564 <PyThread_free_lock@plt+0x554>
    365c:	ldr	x0, [sp, #136]
    3660:	add	x0, x0, #0x10
    3664:	add	x1, sp, #0xa0
    3668:	ldr	x2, [sp, #200]
    366c:	bl	2724 <PyThread_free_lock@plt+0x714>
    3670:	str	x0, [sp, #200]
    3674:	ldr	x0, [sp, #200]
    3678:	cmp	x0, #0x0
    367c:	b.lt	3754 <PyThread_free_lock@plt+0x1744>  // b.tstop
    3680:	bl	1fa0 <PyEval_SaveThread@plt>
    3684:	str	x0, [sp, #184]
    3688:	ldr	x0, [sp, #136]
    368c:	add	x0, x0, #0x10
    3690:	mov	w1, #0x0                   	// #0
    3694:	bl	1dd0 <deflate@plt>
    3698:	str	w0, [sp, #180]
    369c:	ldr	x0, [sp, #184]
    36a0:	bl	1d10 <PyEval_RestoreThread@plt>
    36a4:	ldr	w0, [sp, #180]
    36a8:	cmn	w0, #0x2
    36ac:	b.ne	3710 <PyThread_free_lock@plt+0x1700>  // b.any
    36b0:	ldr	x0, [sp, #136]
    36b4:	add	x1, x0, #0x10
    36b8:	add	x0, sp, #0x10
    36bc:	ldp	x2, x3, [x1]
    36c0:	stp	x2, x3, [x0]
    36c4:	ldp	x2, x3, [x1, #16]
    36c8:	stp	x2, x3, [x0, #16]
    36cc:	ldp	x2, x3, [x1, #32]
    36d0:	stp	x2, x3, [x0, #32]
    36d4:	ldp	x2, x3, [x1, #48]
    36d8:	stp	x2, x3, [x0, #48]
    36dc:	ldp	x2, x3, [x1, #64]
    36e0:	stp	x2, x3, [x0, #64]
    36e4:	ldp	x2, x3, [x1, #80]
    36e8:	stp	x2, x3, [x0, #80]
    36ec:	ldp	x2, x3, [x1, #96]
    36f0:	stp	x2, x3, [x0, #96]
    36f4:	add	x3, sp, #0x10
    36f8:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    36fc:	add	x2, x0, #0x328
    3700:	ldr	w1, [sp, #180]
    3704:	mov	x0, x3
    3708:	bl	2288 <PyThread_free_lock@plt+0x278>
    370c:	b	3758 <PyThread_free_lock@plt+0x1748>
    3710:	ldr	x0, [sp, #136]
    3714:	ldr	w0, [x0, #48]
    3718:	cmp	w0, #0x0
    371c:	b.eq	365c <PyThread_free_lock@plt+0x164c>  // b.none
    3720:	ldr	x0, [sp, #152]
    3724:	cmp	x0, #0x0
    3728:	b.ne	364c <PyThread_free_lock@plt+0x163c>  // b.any
    372c:	ldr	x0, [sp, #136]
    3730:	ldr	x1, [x0, #40]
    3734:	ldr	x0, [sp, #160]
    3738:	add	x0, x0, #0x20
    373c:	sub	x1, x1, x0
    3740:	add	x0, sp, #0xa0
    3744:	bl	1cf0 <_PyBytes_Resize@plt>
    3748:	cmp	w0, #0x0
    374c:	b.eq	3788 <PyThread_free_lock@plt+0x1778>  // b.none
    3750:	b	3758 <PyThread_free_lock@plt+0x1748>
    3754:	nop
    3758:	ldr	x0, [sp, #160]
    375c:	str	x0, [sp, #168]
    3760:	ldr	x0, [sp, #168]
    3764:	cmp	x0, #0x0
    3768:	b.eq	3790 <PyThread_free_lock@plt+0x1780>  // b.none
    376c:	str	xzr, [sp, #160]
    3770:	ldr	x2, [sp, #168]
    3774:	mov	w1, #0x2b0                 	// #688
    3778:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    377c:	add	x0, x0, #0x298
    3780:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    3784:	b	3794 <PyThread_free_lock@plt+0x1784>
    3788:	nop
    378c:	b	3794 <PyThread_free_lock@plt+0x1784>
    3790:	nop
    3794:	ldr	x0, [sp, #136]
    3798:	ldr	x0, [x0, #160]
    379c:	bl	1f20 <PyThread_release_lock@plt>
    37a0:	ldr	x0, [sp, #160]
    37a4:	ldp	x29, x30, [sp], #208
    37a8:	ret
    37ac:	stp	x29, x30, [sp, #-112]!
    37b0:	mov	x29, sp
    37b4:	str	x0, [sp, #40]
    37b8:	str	x1, [sp, #32]
    37bc:	str	w2, [sp, #28]
    37c0:	ldr	w0, [sp, #28]
    37c4:	cmp	w0, #0x1
    37c8:	b.ne	38f0 <PyThread_free_lock@plt+0x18e0>  // b.any
    37cc:	ldr	x0, [sp, #40]
    37d0:	ldr	w0, [x0, #24]
    37d4:	cmp	w0, #0x0
    37d8:	b.eq	38f0 <PyThread_free_lock@plt+0x18e0>  // b.none
    37dc:	ldr	x0, [sp, #40]
    37e0:	ldr	x0, [x0, #128]
    37e4:	ldr	x0, [x0, #16]
    37e8:	str	x0, [sp, #104]
    37ec:	ldr	x0, [sp, #32]
    37f0:	ldr	x0, [x0]
    37f4:	ldr	x1, [sp, #32]
    37f8:	ldr	x1, [x1, #16]
    37fc:	add	x1, x0, x1
    3800:	ldr	x0, [sp, #40]
    3804:	ldr	x0, [x0, #16]
    3808:	sub	x0, x1, x0
    380c:	str	x0, [sp, #96]
    3810:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
    3814:	ldr	x0, [sp, #104]
    3818:	sub	x0, x1, x0
    381c:	ldr	x1, [sp, #96]
    3820:	cmp	x1, x0
    3824:	b.le	3834 <PyThread_free_lock@plt+0x1824>
    3828:	bl	1d90 <PyErr_NoMemory@plt>
    382c:	mov	w0, #0xffffffff            	// #-1
    3830:	b	3990 <PyThread_free_lock@plt+0x1980>
    3834:	ldr	x1, [sp, #104]
    3838:	ldr	x0, [sp, #96]
    383c:	add	x0, x1, x0
    3840:	str	x0, [sp, #88]
    3844:	ldr	x1, [sp, #88]
    3848:	mov	x0, #0x0                   	// #0
    384c:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    3850:	str	x0, [sp, #80]
    3854:	ldr	x0, [sp, #80]
    3858:	cmp	x0, #0x0
    385c:	b.ne	3868 <PyThread_free_lock@plt+0x1858>  // b.any
    3860:	mov	w0, #0xffffffff            	// #-1
    3864:	b	3990 <PyThread_free_lock@plt+0x1980>
    3868:	ldr	x0, [sp, #80]
    386c:	add	x3, x0, #0x20
    3870:	ldr	x0, [sp, #40]
    3874:	ldr	x0, [x0, #128]
    3878:	add	x0, x0, #0x20
    387c:	ldr	x1, [sp, #104]
    3880:	mov	x2, x1
    3884:	mov	x1, x0
    3888:	mov	x0, x3
    388c:	bl	1cd0 <memcpy@plt>
    3890:	ldr	x0, [sp, #80]
    3894:	add	x1, x0, #0x20
    3898:	ldr	x0, [sp, #104]
    389c:	add	x3, x1, x0
    38a0:	ldr	x0, [sp, #40]
    38a4:	ldr	x0, [x0, #16]
    38a8:	ldr	x1, [sp, #96]
    38ac:	mov	x2, x1
    38b0:	mov	x1, x0
    38b4:	mov	x0, x3
    38b8:	bl	1cd0 <memcpy@plt>
    38bc:	ldr	x0, [sp, #40]
    38c0:	ldr	x0, [x0, #128]
    38c4:	str	x0, [sp, #72]
    38c8:	ldr	x0, [sp, #40]
    38cc:	ldr	x1, [sp, #80]
    38d0:	str	x1, [x0, #128]
    38d4:	ldr	x2, [sp, #72]
    38d8:	mov	w1, #0x2cf                 	// #719
    38dc:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    38e0:	add	x0, x0, #0x298
    38e4:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    38e8:	ldr	x0, [sp, #40]
    38ec:	str	wzr, [x0, #24]
    38f0:	ldr	x0, [sp, #40]
    38f4:	ldr	w0, [x0, #24]
    38f8:	cmp	w0, #0x0
    38fc:	b.ne	3914 <PyThread_free_lock@plt+0x1904>  // b.any
    3900:	ldr	x0, [sp, #40]
    3904:	ldr	x0, [x0, #136]
    3908:	ldr	x0, [x0, #16]
    390c:	cmp	x0, #0x0
    3910:	b.eq	398c <PyThread_free_lock@plt+0x197c>  // b.none
    3914:	ldr	x0, [sp, #32]
    3918:	ldr	x0, [x0]
    391c:	ldr	x1, [sp, #32]
    3920:	ldr	x1, [x1, #16]
    3924:	add	x1, x0, x1
    3928:	ldr	x0, [sp, #40]
    392c:	ldr	x0, [x0, #16]
    3930:	sub	x0, x1, x0
    3934:	str	x0, [sp, #64]
    3938:	ldr	x0, [sp, #40]
    393c:	ldr	x0, [x0, #16]
    3940:	ldr	x1, [sp, #64]
    3944:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    3948:	str	x0, [sp, #56]
    394c:	ldr	x0, [sp, #56]
    3950:	cmp	x0, #0x0
    3954:	b.ne	3960 <PyThread_free_lock@plt+0x1950>  // b.any
    3958:	mov	w0, #0xffffffff            	// #-1
    395c:	b	3990 <PyThread_free_lock@plt+0x1980>
    3960:	ldr	x0, [sp, #40]
    3964:	ldr	x0, [x0, #136]
    3968:	str	x0, [sp, #48]
    396c:	ldr	x0, [sp, #40]
    3970:	ldr	x1, [sp, #56]
    3974:	str	x1, [x0, #136]
    3978:	ldr	x2, [sp, #48]
    397c:	mov	w1, #0x2dd                 	// #733
    3980:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3984:	add	x0, x0, #0x298
    3988:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    398c:	mov	w0, #0x0                   	// #0
    3990:	ldp	x29, x30, [sp], #112
    3994:	ret
    3998:	stp	x29, x30, [sp, #-224]!
    399c:	mov	x29, sp
    39a0:	str	x0, [sp, #152]
    39a4:	str	x1, [sp, #144]
    39a8:	str	x2, [sp, #136]
    39ac:	str	wzr, [sp, #220]
    39b0:	mov	x0, #0x4000                	// #16384
    39b4:	str	x0, [sp, #208]
    39b8:	str	xzr, [sp, #160]
    39bc:	ldr	x0, [sp, #136]
    39c0:	cmp	x0, #0x0
    39c4:	b.ge	39ec <PyThread_free_lock@plt+0x19dc>  // b.tcont
    39c8:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    39cc:	ldr	x0, [x0, #4032]
    39d0:	ldr	x2, [x0]
    39d4:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    39d8:	add	x1, x0, #0x588
    39dc:	mov	x0, x2
    39e0:	bl	1dc0 <PyErr_SetString@plt>
    39e4:	mov	x0, #0x0                   	// #0
    39e8:	b	3cbc <PyThread_free_lock@plt+0x1cac>
    39ec:	ldr	x0, [sp, #136]
    39f0:	cmp	x0, #0x0
    39f4:	b.ne	3a04 <PyThread_free_lock@plt+0x19f4>  // b.any
    39f8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    39fc:	str	x0, [sp, #200]
    3a00:	b	3a0c <PyThread_free_lock@plt+0x19fc>
    3a04:	ldr	x0, [sp, #136]
    3a08:	str	x0, [sp, #200]
    3a0c:	ldr	x0, [sp, #144]
    3a10:	ldr	x1, [x0]
    3a14:	ldr	x0, [sp, #152]
    3a18:	str	x1, [x0, #16]
    3a1c:	ldr	x0, [sp, #144]
    3a20:	ldr	x0, [x0, #16]
    3a24:	str	x0, [sp, #168]
    3a28:	ldr	x0, [sp, #136]
    3a2c:	cmp	x0, #0x0
    3a30:	b.eq	3a4c <PyThread_free_lock@plt+0x1a3c>  // b.none
    3a34:	ldr	x1, [sp, #208]
    3a38:	ldr	x0, [sp, #136]
    3a3c:	cmp	x1, x0
    3a40:	b.le	3a4c <PyThread_free_lock@plt+0x1a3c>
    3a44:	ldr	x0, [sp, #136]
    3a48:	str	x0, [sp, #208]
    3a4c:	bl	1fa0 <PyEval_SaveThread@plt>
    3a50:	str	x0, [sp, #192]
    3a54:	ldr	x0, [sp, #152]
    3a58:	ldr	x0, [x0, #160]
    3a5c:	mov	w1, #0x1                   	// #1
    3a60:	bl	1da0 <PyThread_acquire_lock@plt>
    3a64:	ldr	x0, [sp, #192]
    3a68:	bl	1d10 <PyEval_RestoreThread@plt>
    3a6c:	ldr	x0, [sp, #152]
    3a70:	add	x0, x0, #0x10
    3a74:	add	x1, sp, #0xa8
    3a78:	bl	2564 <PyThread_free_lock@plt+0x554>
    3a7c:	ldr	x0, [sp, #152]
    3a80:	add	x0, x0, #0x10
    3a84:	add	x1, sp, #0xa0
    3a88:	ldr	x3, [sp, #200]
    3a8c:	ldr	x2, [sp, #208]
    3a90:	bl	25cc <PyThread_free_lock@plt+0x5bc>
    3a94:	str	x0, [sp, #208]
    3a98:	ldr	x0, [sp, #208]
    3a9c:	cmn	x0, #0x2
    3aa0:	b.ne	3ab4 <PyThread_free_lock@plt+0x1aa4>  // b.any
    3aa4:	ldr	x0, [sp, #136]
    3aa8:	cmp	x0, #0x0
    3aac:	b.gt	3b74 <PyThread_free_lock@plt+0x1b64>
    3ab0:	bl	1d90 <PyErr_NoMemory@plt>
    3ab4:	ldr	x0, [sp, #208]
    3ab8:	cmp	x0, #0x0
    3abc:	b.lt	3c5c <PyThread_free_lock@plt+0x1c4c>  // b.tstop
    3ac0:	bl	1fa0 <PyEval_SaveThread@plt>
    3ac4:	str	x0, [sp, #184]
    3ac8:	ldr	x0, [sp, #152]
    3acc:	add	x0, x0, #0x10
    3ad0:	mov	w1, #0x2                   	// #2
    3ad4:	bl	1d00 <inflate@plt>
    3ad8:	str	w0, [sp, #220]
    3adc:	ldr	x0, [sp, #184]
    3ae0:	bl	1d10 <PyEval_RestoreThread@plt>
    3ae4:	ldr	w0, [sp, #220]
    3ae8:	cmn	w0, #0x5
    3aec:	b.eq	3b38 <PyThread_free_lock@plt+0x1b28>  // b.none
    3af0:	ldr	w0, [sp, #220]
    3af4:	cmn	w0, #0x5
    3af8:	b.lt	3b08 <PyThread_free_lock@plt+0x1af8>  // b.tstop
    3afc:	ldr	w0, [sp, #220]
    3b00:	cmp	w0, #0x1
    3b04:	b.ls	3b38 <PyThread_free_lock@plt+0x1b28>  // b.plast
    3b08:	ldr	w0, [sp, #220]
    3b0c:	cmp	w0, #0x2
    3b10:	b.ne	3b7c <PyThread_free_lock@plt+0x1b6c>  // b.any
    3b14:	ldr	x0, [sp, #152]
    3b18:	ldr	x0, [x0, #152]
    3b1c:	cmp	x0, #0x0
    3b20:	b.eq	3b7c <PyThread_free_lock@plt+0x1b6c>  // b.none
    3b24:	ldr	x0, [sp, #152]
    3b28:	bl	3194 <PyThread_free_lock@plt+0x1184>
    3b2c:	cmp	w0, #0x0
    3b30:	b.lt	3c64 <PyThread_free_lock@plt+0x1c54>  // b.tstop
    3b34:	b	3b3c <PyThread_free_lock@plt+0x1b2c>
    3b38:	nop
    3b3c:	ldr	x0, [sp, #152]
    3b40:	ldr	w0, [x0, #48]
    3b44:	cmp	w0, #0x0
    3b48:	b.eq	3a7c <PyThread_free_lock@plt+0x1a6c>  // b.none
    3b4c:	ldr	w0, [sp, #220]
    3b50:	cmp	w0, #0x2
    3b54:	b.eq	3a7c <PyThread_free_lock@plt+0x1a6c>  // b.none
    3b58:	ldr	w0, [sp, #220]
    3b5c:	cmp	w0, #0x1
    3b60:	b.eq	3b84 <PyThread_free_lock@plt+0x1b74>  // b.none
    3b64:	ldr	x0, [sp, #168]
    3b68:	cmp	x0, #0x0
    3b6c:	b.ne	3a6c <PyThread_free_lock@plt+0x1a5c>  // b.any
    3b70:	b	3b84 <PyThread_free_lock@plt+0x1b74>
    3b74:	nop
    3b78:	b	3b88 <PyThread_free_lock@plt+0x1b78>
    3b7c:	nop
    3b80:	b	3b88 <PyThread_free_lock@plt+0x1b78>
    3b84:	nop
    3b88:	ldr	w2, [sp, #220]
    3b8c:	ldr	x1, [sp, #144]
    3b90:	ldr	x0, [sp, #152]
    3b94:	bl	37ac <PyThread_free_lock@plt+0x179c>
    3b98:	cmp	w0, #0x0
    3b9c:	b.lt	3c6c <PyThread_free_lock@plt+0x1c5c>  // b.tstop
    3ba0:	ldr	w0, [sp, #220]
    3ba4:	cmp	w0, #0x1
    3ba8:	b.ne	3bbc <PyThread_free_lock@plt+0x1bac>  // b.any
    3bac:	ldr	x0, [sp, #152]
    3bb0:	mov	w1, #0x1                   	// #1
    3bb4:	strb	w1, [x0, #144]
    3bb8:	b	3c34 <PyThread_free_lock@plt+0x1c24>
    3bbc:	ldr	w0, [sp, #220]
    3bc0:	cmp	w0, #0x0
    3bc4:	b.eq	3c34 <PyThread_free_lock@plt+0x1c24>  // b.none
    3bc8:	ldr	w0, [sp, #220]
    3bcc:	cmn	w0, #0x5
    3bd0:	b.eq	3c34 <PyThread_free_lock@plt+0x1c24>  // b.none
    3bd4:	ldr	x0, [sp, #152]
    3bd8:	add	x1, x0, #0x10
    3bdc:	add	x0, sp, #0x10
    3be0:	ldp	x2, x3, [x1]
    3be4:	stp	x2, x3, [x0]
    3be8:	ldp	x2, x3, [x1, #16]
    3bec:	stp	x2, x3, [x0, #16]
    3bf0:	ldp	x2, x3, [x1, #32]
    3bf4:	stp	x2, x3, [x0, #32]
    3bf8:	ldp	x2, x3, [x1, #48]
    3bfc:	stp	x2, x3, [x0, #48]
    3c00:	ldp	x2, x3, [x1, #64]
    3c04:	stp	x2, x3, [x0, #64]
    3c08:	ldp	x2, x3, [x1, #80]
    3c0c:	stp	x2, x3, [x0, #80]
    3c10:	ldp	x2, x3, [x1, #96]
    3c14:	stp	x2, x3, [x0, #96]
    3c18:	add	x3, sp, #0x10
    3c1c:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3c20:	add	x2, x0, #0x3d0
    3c24:	ldr	w1, [sp, #220]
    3c28:	mov	x0, x3
    3c2c:	bl	2288 <PyThread_free_lock@plt+0x278>
    3c30:	b	3c70 <PyThread_free_lock@plt+0x1c60>
    3c34:	ldr	x0, [sp, #152]
    3c38:	ldr	x1, [x0, #40]
    3c3c:	ldr	x0, [sp, #160]
    3c40:	add	x0, x0, #0x20
    3c44:	sub	x1, x1, x0
    3c48:	add	x0, sp, #0xa0
    3c4c:	bl	1cf0 <_PyBytes_Resize@plt>
    3c50:	cmp	w0, #0x0
    3c54:	b.eq	3ca0 <PyThread_free_lock@plt+0x1c90>  // b.none
    3c58:	b	3c70 <PyThread_free_lock@plt+0x1c60>
    3c5c:	nop
    3c60:	b	3c70 <PyThread_free_lock@plt+0x1c60>
    3c64:	nop
    3c68:	b	3c70 <PyThread_free_lock@plt+0x1c60>
    3c6c:	nop
    3c70:	ldr	x0, [sp, #160]
    3c74:	str	x0, [sp, #176]
    3c78:	ldr	x0, [sp, #176]
    3c7c:	cmp	x0, #0x0
    3c80:	b.eq	3ca8 <PyThread_free_lock@plt+0x1c98>  // b.none
    3c84:	str	xzr, [sp, #160]
    3c88:	ldr	x2, [sp, #176]
    3c8c:	mov	w1, #0x34c                 	// #844
    3c90:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3c94:	add	x0, x0, #0x298
    3c98:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    3c9c:	b	3cac <PyThread_free_lock@plt+0x1c9c>
    3ca0:	nop
    3ca4:	b	3cac <PyThread_free_lock@plt+0x1c9c>
    3ca8:	nop
    3cac:	ldr	x0, [sp, #152]
    3cb0:	ldr	x0, [x0, #160]
    3cb4:	bl	1f20 <PyThread_release_lock@plt>
    3cb8:	ldr	x0, [sp, #160]
    3cbc:	ldp	x29, x30, [sp], #224
    3cc0:	ret
    3cc4:	stp	x29, x30, [sp, #-224]!
    3cc8:	mov	x29, sp
    3ccc:	str	x0, [sp, #136]
    3cd0:	str	w1, [sp, #132]
    3cd4:	mov	x0, #0x4000                	// #16384
    3cd8:	str	x0, [sp, #216]
    3cdc:	str	xzr, [sp, #144]
    3ce0:	ldr	w0, [sp, #132]
    3ce4:	cmp	w0, #0x0
    3ce8:	b.ne	3cfc <PyThread_free_lock@plt+0x1cec>  // b.any
    3cec:	mov	x1, #0x0                   	// #0
    3cf0:	mov	x0, #0x0                   	// #0
    3cf4:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    3cf8:	b	403c <PyThread_free_lock@plt+0x202c>
    3cfc:	bl	1fa0 <PyEval_SaveThread@plt>
    3d00:	str	x0, [sp, #208]
    3d04:	ldr	x0, [sp, #136]
    3d08:	ldr	x0, [x0, #160]
    3d0c:	mov	w1, #0x1                   	// #1
    3d10:	bl	1da0 <PyThread_acquire_lock@plt>
    3d14:	ldr	x0, [sp, #208]
    3d18:	bl	1d10 <PyEval_RestoreThread@plt>
    3d1c:	ldr	x0, [sp, #136]
    3d20:	str	wzr, [x0, #24]
    3d24:	ldr	x0, [sp, #136]
    3d28:	add	x0, x0, #0x10
    3d2c:	add	x1, sp, #0x90
    3d30:	ldr	x2, [sp, #216]
    3d34:	bl	2724 <PyThread_free_lock@plt+0x714>
    3d38:	str	x0, [sp, #216]
    3d3c:	ldr	x0, [sp, #216]
    3d40:	cmp	x0, #0x0
    3d44:	b.ge	3d78 <PyThread_free_lock@plt+0x1d68>  // b.tcont
    3d48:	ldr	x0, [sp, #144]
    3d4c:	str	x0, [sp, #152]
    3d50:	ldr	x0, [sp, #152]
    3d54:	cmp	x0, #0x0
    3d58:	b.eq	4008 <PyThread_free_lock@plt+0x1ff8>  // b.none
    3d5c:	str	xzr, [sp, #144]
    3d60:	ldr	x2, [sp, #152]
    3d64:	mov	w1, #0x374                 	// #884
    3d68:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3d6c:	add	x0, x0, #0x298
    3d70:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    3d74:	b	4008 <PyThread_free_lock@plt+0x1ff8>
    3d78:	bl	1fa0 <PyEval_SaveThread@plt>
    3d7c:	str	x0, [sp, #200]
    3d80:	ldr	x0, [sp, #136]
    3d84:	add	x0, x0, #0x10
    3d88:	ldr	w1, [sp, #132]
    3d8c:	bl	1dd0 <deflate@plt>
    3d90:	str	w0, [sp, #196]
    3d94:	ldr	x0, [sp, #200]
    3d98:	bl	1d10 <PyEval_RestoreThread@plt>
    3d9c:	ldr	w0, [sp, #196]
    3da0:	cmn	w0, #0x2
    3da4:	b.ne	3e34 <PyThread_free_lock@plt+0x1e24>  // b.any
    3da8:	ldr	x0, [sp, #136]
    3dac:	add	x1, x0, #0x10
    3db0:	add	x0, sp, #0x10
    3db4:	ldp	x2, x3, [x1]
    3db8:	stp	x2, x3, [x0]
    3dbc:	ldp	x2, x3, [x1, #16]
    3dc0:	stp	x2, x3, [x0, #16]
    3dc4:	ldp	x2, x3, [x1, #32]
    3dc8:	stp	x2, x3, [x0, #32]
    3dcc:	ldp	x2, x3, [x1, #48]
    3dd0:	stp	x2, x3, [x0, #48]
    3dd4:	ldp	x2, x3, [x1, #64]
    3dd8:	stp	x2, x3, [x0, #64]
    3ddc:	ldp	x2, x3, [x1, #80]
    3de0:	stp	x2, x3, [x0, #80]
    3de4:	ldp	x2, x3, [x1, #96]
    3de8:	stp	x2, x3, [x0, #96]
    3dec:	add	x3, sp, #0x10
    3df0:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3df4:	add	x2, x0, #0x5a8
    3df8:	ldr	w1, [sp, #196]
    3dfc:	mov	x0, x3
    3e00:	bl	2288 <PyThread_free_lock@plt+0x278>
    3e04:	ldr	x0, [sp, #144]
    3e08:	str	x0, [sp, #160]
    3e0c:	ldr	x0, [sp, #160]
    3e10:	cmp	x0, #0x0
    3e14:	b.eq	4010 <PyThread_free_lock@plt+0x2000>  // b.none
    3e18:	str	xzr, [sp, #144]
    3e1c:	ldr	x2, [sp, #160]
    3e20:	mov	w1, #0x37e                 	// #894
    3e24:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3e28:	add	x0, x0, #0x298
    3e2c:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    3e30:	b	4010 <PyThread_free_lock@plt+0x2000>
    3e34:	ldr	x0, [sp, #136]
    3e38:	ldr	w0, [x0, #48]
    3e3c:	cmp	w0, #0x0
    3e40:	b.eq	3d24 <PyThread_free_lock@plt+0x1d14>  // b.none
    3e44:	ldr	w0, [sp, #196]
    3e48:	cmp	w0, #0x1
    3e4c:	b.ne	3f10 <PyThread_free_lock@plt+0x1f00>  // b.any
    3e50:	ldr	w0, [sp, #132]
    3e54:	cmp	w0, #0x4
    3e58:	b.ne	3f10 <PyThread_free_lock@plt+0x1f00>  // b.any
    3e5c:	ldr	x0, [sp, #136]
    3e60:	add	x0, x0, #0x10
    3e64:	bl	1f10 <deflateEnd@plt>
    3e68:	str	w0, [sp, #196]
    3e6c:	ldr	w0, [sp, #196]
    3e70:	cmp	w0, #0x0
    3e74:	b.eq	3f04 <PyThread_free_lock@plt+0x1ef4>  // b.none
    3e78:	ldr	x0, [sp, #136]
    3e7c:	add	x1, x0, #0x10
    3e80:	add	x0, sp, #0x10
    3e84:	ldp	x2, x3, [x1]
    3e88:	stp	x2, x3, [x0]
    3e8c:	ldp	x2, x3, [x1, #16]
    3e90:	stp	x2, x3, [x0, #16]
    3e94:	ldp	x2, x3, [x1, #32]
    3e98:	stp	x2, x3, [x0, #32]
    3e9c:	ldp	x2, x3, [x1, #48]
    3ea0:	stp	x2, x3, [x0, #48]
    3ea4:	ldp	x2, x3, [x1, #64]
    3ea8:	stp	x2, x3, [x0, #64]
    3eac:	ldp	x2, x3, [x1, #80]
    3eb0:	stp	x2, x3, [x0, #80]
    3eb4:	ldp	x2, x3, [x1, #96]
    3eb8:	stp	x2, x3, [x0, #96]
    3ebc:	add	x3, sp, #0x10
    3ec0:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3ec4:	add	x2, x0, #0x340
    3ec8:	ldr	w1, [sp, #196]
    3ecc:	mov	x0, x3
    3ed0:	bl	2288 <PyThread_free_lock@plt+0x278>
    3ed4:	ldr	x0, [sp, #144]
    3ed8:	str	x0, [sp, #184]
    3edc:	ldr	x0, [sp, #184]
    3ee0:	cmp	x0, #0x0
    3ee4:	b.eq	4018 <PyThread_free_lock@plt+0x2008>  // b.none
    3ee8:	str	xzr, [sp, #144]
    3eec:	ldr	x2, [sp, #184]
    3ef0:	mov	w1, #0x38b                 	// #907
    3ef4:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3ef8:	add	x0, x0, #0x298
    3efc:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    3f00:	b	4018 <PyThread_free_lock@plt+0x2008>
    3f04:	ldr	x0, [sp, #136]
    3f08:	str	wzr, [x0, #148]
    3f0c:	b	3fb4 <PyThread_free_lock@plt+0x1fa4>
    3f10:	ldr	w0, [sp, #196]
    3f14:	cmp	w0, #0x0
    3f18:	b.eq	3fb4 <PyThread_free_lock@plt+0x1fa4>  // b.none
    3f1c:	ldr	w0, [sp, #196]
    3f20:	cmn	w0, #0x5
    3f24:	b.eq	3fb4 <PyThread_free_lock@plt+0x1fa4>  // b.none
    3f28:	ldr	x0, [sp, #136]
    3f2c:	add	x1, x0, #0x10
    3f30:	add	x0, sp, #0x10
    3f34:	ldp	x2, x3, [x1]
    3f38:	stp	x2, x3, [x0]
    3f3c:	ldp	x2, x3, [x1, #16]
    3f40:	stp	x2, x3, [x0, #16]
    3f44:	ldp	x2, x3, [x1, #32]
    3f48:	stp	x2, x3, [x0, #32]
    3f4c:	ldp	x2, x3, [x1, #48]
    3f50:	stp	x2, x3, [x0, #48]
    3f54:	ldp	x2, x3, [x1, #64]
    3f58:	stp	x2, x3, [x0, #64]
    3f5c:	ldp	x2, x3, [x1, #80]
    3f60:	stp	x2, x3, [x0, #80]
    3f64:	ldp	x2, x3, [x1, #96]
    3f68:	stp	x2, x3, [x0, #96]
    3f6c:	add	x3, sp, #0x10
    3f70:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3f74:	add	x2, x0, #0x5a8
    3f78:	ldr	w1, [sp, #196]
    3f7c:	mov	x0, x3
    3f80:	bl	2288 <PyThread_free_lock@plt+0x278>
    3f84:	ldr	x0, [sp, #144]
    3f88:	str	x0, [sp, #176]
    3f8c:	ldr	x0, [sp, #176]
    3f90:	cmp	x0, #0x0
    3f94:	b.eq	4020 <PyThread_free_lock@plt+0x2010>  // b.none
    3f98:	str	xzr, [sp, #144]
    3f9c:	ldr	x2, [sp, #176]
    3fa0:	mov	w1, #0x397                 	// #919
    3fa4:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3fa8:	add	x0, x0, #0x298
    3fac:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    3fb0:	b	4020 <PyThread_free_lock@plt+0x2010>
    3fb4:	ldr	x0, [sp, #136]
    3fb8:	ldr	x1, [x0, #40]
    3fbc:	ldr	x0, [sp, #144]
    3fc0:	add	x0, x0, #0x20
    3fc4:	sub	x1, x1, x0
    3fc8:	add	x0, sp, #0x90
    3fcc:	bl	1cf0 <_PyBytes_Resize@plt>
    3fd0:	cmp	w0, #0x0
    3fd4:	b.ge	4028 <PyThread_free_lock@plt+0x2018>  // b.tcont
    3fd8:	ldr	x0, [sp, #144]
    3fdc:	str	x0, [sp, #168]
    3fe0:	ldr	x0, [sp, #168]
    3fe4:	cmp	x0, #0x0
    3fe8:	b.eq	4028 <PyThread_free_lock@plt+0x2018>  // b.none
    3fec:	str	xzr, [sp, #144]
    3ff0:	ldr	x2, [sp, #168]
    3ff4:	mov	w1, #0x39d                 	// #925
    3ff8:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    3ffc:	add	x0, x0, #0x298
    4000:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    4004:	b	402c <PyThread_free_lock@plt+0x201c>
    4008:	nop
    400c:	b	402c <PyThread_free_lock@plt+0x201c>
    4010:	nop
    4014:	b	402c <PyThread_free_lock@plt+0x201c>
    4018:	nop
    401c:	b	402c <PyThread_free_lock@plt+0x201c>
    4020:	nop
    4024:	b	402c <PyThread_free_lock@plt+0x201c>
    4028:	nop
    402c:	ldr	x0, [sp, #136]
    4030:	ldr	x0, [x0, #160]
    4034:	bl	1f20 <PyThread_release_lock@plt>
    4038:	ldr	x0, [sp, #144]
    403c:	ldp	x29, x30, [sp], #224
    4040:	ret
    4044:	stp	x29, x30, [sp, #-192]!
    4048:	mov	x29, sp
    404c:	str	x0, [sp, #136]
    4050:	str	xzr, [sp, #184]
    4054:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    4058:	add	x0, x0, #0x1b0
    405c:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    4060:	str	x0, [sp, #184]
    4064:	ldr	x0, [sp, #184]
    4068:	cmp	x0, #0x0
    406c:	b.ne	4078 <PyThread_free_lock@plt+0x2068>  // b.any
    4070:	mov	x0, #0x0                   	// #0
    4074:	b	4264 <PyThread_free_lock@plt+0x2254>
    4078:	bl	1fa0 <PyEval_SaveThread@plt>
    407c:	str	x0, [sp, #176]
    4080:	ldr	x0, [sp, #136]
    4084:	ldr	x0, [x0, #160]
    4088:	mov	w1, #0x1                   	// #1
    408c:	bl	1da0 <PyThread_acquire_lock@plt>
    4090:	ldr	x0, [sp, #176]
    4094:	bl	1d10 <PyEval_RestoreThread@plt>
    4098:	ldr	x0, [sp, #184]
    409c:	add	x2, x0, #0x10
    40a0:	ldr	x0, [sp, #136]
    40a4:	add	x0, x0, #0x10
    40a8:	mov	x1, x0
    40ac:	mov	x0, x2
    40b0:	bl	1f40 <deflateCopy@plt>
    40b4:	str	w0, [sp, #172]
    40b8:	ldr	w0, [sp, #172]
    40bc:	cmp	w0, #0x0
    40c0:	b.eq	4188 <PyThread_free_lock@plt+0x2178>  // b.none
    40c4:	ldr	w0, [sp, #172]
    40c8:	cmp	w0, #0x0
    40cc:	b.gt	4128 <PyThread_free_lock@plt+0x2118>
    40d0:	ldr	w0, [sp, #172]
    40d4:	cmn	w0, #0x4
    40d8:	b.eq	4108 <PyThread_free_lock@plt+0x20f8>  // b.none
    40dc:	ldr	w0, [sp, #172]
    40e0:	cmn	w0, #0x2
    40e4:	b.ne	4128 <PyThread_free_lock@plt+0x2118>  // b.any
    40e8:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    40ec:	ldr	x0, [x0, #4032]
    40f0:	ldr	x2, [x0]
    40f4:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    40f8:	add	x1, x0, #0x5b8
    40fc:	mov	x0, x2
    4100:	bl	1dc0 <PyErr_SetString@plt>
    4104:	b	424c <PyThread_free_lock@plt+0x223c>
    4108:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    410c:	ldr	x0, [x0, #4024]
    4110:	ldr	x2, [x0]
    4114:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    4118:	add	x1, x0, #0x470
    411c:	mov	x0, x2
    4120:	bl	1dc0 <PyErr_SetString@plt>
    4124:	b	424c <PyThread_free_lock@plt+0x223c>
    4128:	ldr	x0, [sp, #136]
    412c:	add	x1, x0, #0x10
    4130:	add	x0, sp, #0x10
    4134:	ldp	x2, x3, [x1]
    4138:	stp	x2, x3, [x0]
    413c:	ldp	x2, x3, [x1, #16]
    4140:	stp	x2, x3, [x0, #16]
    4144:	ldp	x2, x3, [x1, #32]
    4148:	stp	x2, x3, [x0, #32]
    414c:	ldp	x2, x3, [x1, #48]
    4150:	stp	x2, x3, [x0, #48]
    4154:	ldp	x2, x3, [x1, #64]
    4158:	stp	x2, x3, [x0, #64]
    415c:	ldp	x2, x3, [x1, #80]
    4160:	stp	x2, x3, [x0, #80]
    4164:	ldp	x2, x3, [x1, #96]
    4168:	stp	x2, x3, [x0, #96]
    416c:	add	x3, sp, #0x10
    4170:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    4174:	add	x2, x0, #0x5d8
    4178:	ldr	w1, [sp, #172]
    417c:	mov	x0, x3
    4180:	bl	2288 <PyThread_free_lock@plt+0x278>
    4184:	b	424c <PyThread_free_lock@plt+0x223c>
    4188:	nop
    418c:	ldr	x0, [sp, #136]
    4190:	ldr	x0, [x0, #128]
    4194:	bl	21b0 <PyThread_free_lock@plt+0x1a0>
    4198:	ldr	x0, [sp, #184]
    419c:	ldr	x0, [x0, #128]
    41a0:	str	x0, [sp, #160]
    41a4:	ldr	x0, [sp, #136]
    41a8:	ldr	x1, [x0, #128]
    41ac:	ldr	x0, [sp, #184]
    41b0:	str	x1, [x0, #128]
    41b4:	ldr	x0, [sp, #160]
    41b8:	bl	2250 <PyThread_free_lock@plt+0x240>
    41bc:	ldr	x0, [sp, #136]
    41c0:	ldr	x0, [x0, #136]
    41c4:	bl	21b0 <PyThread_free_lock@plt+0x1a0>
    41c8:	ldr	x0, [sp, #184]
    41cc:	ldr	x0, [x0, #136]
    41d0:	str	x0, [sp, #152]
    41d4:	ldr	x0, [sp, #136]
    41d8:	ldr	x1, [x0, #136]
    41dc:	ldr	x0, [sp, #184]
    41e0:	str	x1, [x0, #136]
    41e4:	ldr	x0, [sp, #152]
    41e8:	bl	2250 <PyThread_free_lock@plt+0x240>
    41ec:	ldr	x0, [sp, #136]
    41f0:	ldr	x0, [x0, #152]
    41f4:	bl	2224 <PyThread_free_lock@plt+0x214>
    41f8:	ldr	x0, [sp, #184]
    41fc:	ldr	x0, [x0, #152]
    4200:	str	x0, [sp, #144]
    4204:	ldr	x0, [sp, #136]
    4208:	ldr	x1, [x0, #152]
    420c:	ldr	x0, [sp, #184]
    4210:	str	x1, [x0, #152]
    4214:	ldr	x0, [sp, #144]
    4218:	bl	2250 <PyThread_free_lock@plt+0x240>
    421c:	ldr	x0, [sp, #136]
    4220:	ldrb	w1, [x0, #144]
    4224:	ldr	x0, [sp, #184]
    4228:	strb	w1, [x0, #144]
    422c:	ldr	x0, [sp, #184]
    4230:	mov	w1, #0x1                   	// #1
    4234:	str	w1, [x0, #148]
    4238:	ldr	x0, [sp, #136]
    423c:	ldr	x0, [x0, #160]
    4240:	bl	1f20 <PyThread_release_lock@plt>
    4244:	ldr	x0, [sp, #184]
    4248:	b	4264 <PyThread_free_lock@plt+0x2254>
    424c:	ldr	x0, [sp, #136]
    4250:	ldr	x0, [x0, #160]
    4254:	bl	1f20 <PyThread_release_lock@plt>
    4258:	ldr	x0, [sp, #184]
    425c:	bl	2250 <PyThread_free_lock@plt+0x240>
    4260:	mov	x0, #0x0                   	// #0
    4264:	ldp	x29, x30, [sp], #192
    4268:	ret
    426c:	stp	x29, x30, [sp, #-32]!
    4270:	mov	x29, sp
    4274:	str	x0, [sp, #24]
    4278:	ldr	x0, [sp, #24]
    427c:	bl	4044 <PyThread_free_lock@plt+0x2034>
    4280:	ldp	x29, x30, [sp], #32
    4284:	ret
    4288:	stp	x29, x30, [sp, #-32]!
    428c:	mov	x29, sp
    4290:	str	x0, [sp, #24]
    4294:	str	x1, [sp, #16]
    4298:	ldr	x0, [sp, #24]
    429c:	bl	4044 <PyThread_free_lock@plt+0x2034>
    42a0:	ldp	x29, x30, [sp], #32
    42a4:	ret
    42a8:	stp	x29, x30, [sp, #-192]!
    42ac:	mov	x29, sp
    42b0:	str	x0, [sp, #136]
    42b4:	str	xzr, [sp, #184]
    42b8:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    42bc:	add	x0, x0, #0x350
    42c0:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    42c4:	str	x0, [sp, #184]
    42c8:	ldr	x0, [sp, #184]
    42cc:	cmp	x0, #0x0
    42d0:	b.ne	42dc <PyThread_free_lock@plt+0x22cc>  // b.any
    42d4:	mov	x0, #0x0                   	// #0
    42d8:	b	44c8 <PyThread_free_lock@plt+0x24b8>
    42dc:	bl	1fa0 <PyEval_SaveThread@plt>
    42e0:	str	x0, [sp, #176]
    42e4:	ldr	x0, [sp, #136]
    42e8:	ldr	x0, [x0, #160]
    42ec:	mov	w1, #0x1                   	// #1
    42f0:	bl	1da0 <PyThread_acquire_lock@plt>
    42f4:	ldr	x0, [sp, #176]
    42f8:	bl	1d10 <PyEval_RestoreThread@plt>
    42fc:	ldr	x0, [sp, #184]
    4300:	add	x2, x0, #0x10
    4304:	ldr	x0, [sp, #136]
    4308:	add	x0, x0, #0x10
    430c:	mov	x1, x0
    4310:	mov	x0, x2
    4314:	bl	1ea0 <inflateCopy@plt>
    4318:	str	w0, [sp, #172]
    431c:	ldr	w0, [sp, #172]
    4320:	cmp	w0, #0x0
    4324:	b.eq	43ec <PyThread_free_lock@plt+0x23dc>  // b.none
    4328:	ldr	w0, [sp, #172]
    432c:	cmp	w0, #0x0
    4330:	b.gt	438c <PyThread_free_lock@plt+0x237c>
    4334:	ldr	w0, [sp, #172]
    4338:	cmn	w0, #0x4
    433c:	b.eq	436c <PyThread_free_lock@plt+0x235c>  // b.none
    4340:	ldr	w0, [sp, #172]
    4344:	cmn	w0, #0x2
    4348:	b.ne	438c <PyThread_free_lock@plt+0x237c>  // b.any
    434c:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    4350:	ldr	x0, [x0, #4032]
    4354:	ldr	x2, [x0]
    4358:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    435c:	add	x1, x0, #0x5b8
    4360:	mov	x0, x2
    4364:	bl	1dc0 <PyErr_SetString@plt>
    4368:	b	44b0 <PyThread_free_lock@plt+0x24a0>
    436c:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    4370:	ldr	x0, [x0, #4024]
    4374:	ldr	x2, [x0]
    4378:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    437c:	add	x1, x0, #0x530
    4380:	mov	x0, x2
    4384:	bl	1dc0 <PyErr_SetString@plt>
    4388:	b	44b0 <PyThread_free_lock@plt+0x24a0>
    438c:	ldr	x0, [sp, #136]
    4390:	add	x1, x0, #0x10
    4394:	add	x0, sp, #0x10
    4398:	ldp	x2, x3, [x1]
    439c:	stp	x2, x3, [x0]
    43a0:	ldp	x2, x3, [x1, #16]
    43a4:	stp	x2, x3, [x0, #16]
    43a8:	ldp	x2, x3, [x1, #32]
    43ac:	stp	x2, x3, [x0, #32]
    43b0:	ldp	x2, x3, [x1, #48]
    43b4:	stp	x2, x3, [x0, #48]
    43b8:	ldp	x2, x3, [x1, #64]
    43bc:	stp	x2, x3, [x0, #64]
    43c0:	ldp	x2, x3, [x1, #80]
    43c4:	stp	x2, x3, [x0, #80]
    43c8:	ldp	x2, x3, [x1, #96]
    43cc:	stp	x2, x3, [x0, #96]
    43d0:	add	x3, sp, #0x10
    43d4:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    43d8:	add	x2, x0, #0x600
    43dc:	ldr	w1, [sp, #172]
    43e0:	mov	x0, x3
    43e4:	bl	2288 <PyThread_free_lock@plt+0x278>
    43e8:	b	44b0 <PyThread_free_lock@plt+0x24a0>
    43ec:	nop
    43f0:	ldr	x0, [sp, #136]
    43f4:	ldr	x0, [x0, #128]
    43f8:	bl	21b0 <PyThread_free_lock@plt+0x1a0>
    43fc:	ldr	x0, [sp, #184]
    4400:	ldr	x0, [x0, #128]
    4404:	str	x0, [sp, #160]
    4408:	ldr	x0, [sp, #136]
    440c:	ldr	x1, [x0, #128]
    4410:	ldr	x0, [sp, #184]
    4414:	str	x1, [x0, #128]
    4418:	ldr	x0, [sp, #160]
    441c:	bl	2250 <PyThread_free_lock@plt+0x240>
    4420:	ldr	x0, [sp, #136]
    4424:	ldr	x0, [x0, #136]
    4428:	bl	21b0 <PyThread_free_lock@plt+0x1a0>
    442c:	ldr	x0, [sp, #184]
    4430:	ldr	x0, [x0, #136]
    4434:	str	x0, [sp, #152]
    4438:	ldr	x0, [sp, #136]
    443c:	ldr	x1, [x0, #136]
    4440:	ldr	x0, [sp, #184]
    4444:	str	x1, [x0, #136]
    4448:	ldr	x0, [sp, #152]
    444c:	bl	2250 <PyThread_free_lock@plt+0x240>
    4450:	ldr	x0, [sp, #136]
    4454:	ldr	x0, [x0, #152]
    4458:	bl	2224 <PyThread_free_lock@plt+0x214>
    445c:	ldr	x0, [sp, #184]
    4460:	ldr	x0, [x0, #152]
    4464:	str	x0, [sp, #144]
    4468:	ldr	x0, [sp, #136]
    446c:	ldr	x1, [x0, #152]
    4470:	ldr	x0, [sp, #184]
    4474:	str	x1, [x0, #152]
    4478:	ldr	x0, [sp, #144]
    447c:	bl	2250 <PyThread_free_lock@plt+0x240>
    4480:	ldr	x0, [sp, #136]
    4484:	ldrb	w1, [x0, #144]
    4488:	ldr	x0, [sp, #184]
    448c:	strb	w1, [x0, #144]
    4490:	ldr	x0, [sp, #184]
    4494:	mov	w1, #0x1                   	// #1
    4498:	str	w1, [x0, #148]
    449c:	ldr	x0, [sp, #136]
    44a0:	ldr	x0, [x0, #160]
    44a4:	bl	1f20 <PyThread_release_lock@plt>
    44a8:	ldr	x0, [sp, #184]
    44ac:	b	44c8 <PyThread_free_lock@plt+0x24b8>
    44b0:	ldr	x0, [sp, #136]
    44b4:	ldr	x0, [x0, #160]
    44b8:	bl	1f20 <PyThread_release_lock@plt>
    44bc:	ldr	x0, [sp, #184]
    44c0:	bl	2250 <PyThread_free_lock@plt+0x240>
    44c4:	mov	x0, #0x0                   	// #0
    44c8:	ldp	x29, x30, [sp], #192
    44cc:	ret
    44d0:	stp	x29, x30, [sp, #-32]!
    44d4:	mov	x29, sp
    44d8:	str	x0, [sp, #24]
    44dc:	ldr	x0, [sp, #24]
    44e0:	bl	42a8 <PyThread_free_lock@plt+0x2298>
    44e4:	ldp	x29, x30, [sp], #32
    44e8:	ret
    44ec:	stp	x29, x30, [sp, #-32]!
    44f0:	mov	x29, sp
    44f4:	str	x0, [sp, #24]
    44f8:	str	x1, [sp, #16]
    44fc:	ldr	x0, [sp, #24]
    4500:	bl	42a8 <PyThread_free_lock@plt+0x2298>
    4504:	ldp	x29, x30, [sp], #32
    4508:	ret
    450c:	stp	x29, x30, [sp, #-288]!
    4510:	mov	x29, sp
    4514:	str	x0, [sp, #136]
    4518:	str	x1, [sp, #128]
    451c:	str	xzr, [sp, #160]
    4520:	ldr	x0, [sp, #128]
    4524:	cmp	x0, #0x0
    4528:	b.gt	4550 <PyThread_free_lock@plt+0x2540>
    452c:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    4530:	ldr	x0, [x0, #4032]
    4534:	ldr	x2, [x0]
    4538:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    453c:	add	x1, x0, #0x628
    4540:	mov	x0, x2
    4544:	bl	1dc0 <PyErr_SetString@plt>
    4548:	mov	x0, #0x0                   	// #0
    454c:	b	4800 <PyThread_free_lock@plt+0x27f0>
    4550:	ldr	x0, [sp, #136]
    4554:	ldr	x0, [x0, #136]
    4558:	add	x1, sp, #0xa8
    455c:	mov	w2, #0x0                   	// #0
    4560:	bl	1f30 <PyObject_GetBuffer@plt>
    4564:	cmn	w0, #0x1
    4568:	b.ne	4574 <PyThread_free_lock@plt+0x2564>  // b.any
    456c:	mov	x0, #0x0                   	// #0
    4570:	b	4800 <PyThread_free_lock@plt+0x27f0>
    4574:	bl	1fa0 <PyEval_SaveThread@plt>
    4578:	str	x0, [sp, #280]
    457c:	ldr	x0, [sp, #136]
    4580:	ldr	x0, [x0, #160]
    4584:	mov	w1, #0x1                   	// #1
    4588:	bl	1da0 <PyThread_acquire_lock@plt>
    458c:	ldr	x0, [sp, #280]
    4590:	bl	1d10 <PyEval_RestoreThread@plt>
    4594:	ldr	x1, [sp, #168]
    4598:	ldr	x0, [sp, #136]
    459c:	str	x1, [x0, #16]
    45a0:	ldr	x0, [sp, #184]
    45a4:	str	x0, [sp, #152]
    45a8:	ldr	x0, [sp, #136]
    45ac:	add	x0, x0, #0x10
    45b0:	add	x1, sp, #0x98
    45b4:	bl	2564 <PyThread_free_lock@plt+0x554>
    45b8:	ldr	x0, [sp, #152]
    45bc:	cmp	x0, #0x0
    45c0:	b.ne	45cc <PyThread_free_lock@plt+0x25bc>  // b.any
    45c4:	mov	w0, #0x4                   	// #4
    45c8:	b	45d0 <PyThread_free_lock@plt+0x25c0>
    45cc:	mov	w0, #0x0                   	// #0
    45d0:	str	w0, [sp, #276]
    45d4:	ldr	x0, [sp, #136]
    45d8:	add	x0, x0, #0x10
    45dc:	add	x1, sp, #0xa0
    45e0:	ldr	x2, [sp, #128]
    45e4:	bl	2724 <PyThread_free_lock@plt+0x714>
    45e8:	str	x0, [sp, #128]
    45ec:	ldr	x0, [sp, #128]
    45f0:	cmp	x0, #0x0
    45f4:	b.lt	4798 <PyThread_free_lock@plt+0x2788>  // b.tstop
    45f8:	bl	1fa0 <PyEval_SaveThread@plt>
    45fc:	str	x0, [sp, #264]
    4600:	ldr	x0, [sp, #136]
    4604:	add	x0, x0, #0x10
    4608:	ldr	w1, [sp, #276]
    460c:	bl	1d00 <inflate@plt>
    4610:	str	w0, [sp, #260]
    4614:	ldr	x0, [sp, #264]
    4618:	bl	1d10 <PyEval_RestoreThread@plt>
    461c:	ldr	w0, [sp, #260]
    4620:	cmn	w0, #0x5
    4624:	b.eq	4670 <PyThread_free_lock@plt+0x2660>  // b.none
    4628:	ldr	w0, [sp, #260]
    462c:	cmn	w0, #0x5
    4630:	b.lt	4640 <PyThread_free_lock@plt+0x2630>  // b.tstop
    4634:	ldr	w0, [sp, #260]
    4638:	cmp	w0, #0x1
    463c:	b.ls	4670 <PyThread_free_lock@plt+0x2660>  // b.plast
    4640:	ldr	w0, [sp, #260]
    4644:	cmp	w0, #0x2
    4648:	b.ne	46ac <PyThread_free_lock@plt+0x269c>  // b.any
    464c:	ldr	x0, [sp, #136]
    4650:	ldr	x0, [x0, #152]
    4654:	cmp	x0, #0x0
    4658:	b.eq	46ac <PyThread_free_lock@plt+0x269c>  // b.none
    465c:	ldr	x0, [sp, #136]
    4660:	bl	3194 <PyThread_free_lock@plt+0x1184>
    4664:	cmp	w0, #0x0
    4668:	b.lt	47a0 <PyThread_free_lock@plt+0x2790>  // b.tstop
    466c:	b	4674 <PyThread_free_lock@plt+0x2664>
    4670:	nop
    4674:	ldr	x0, [sp, #136]
    4678:	ldr	w0, [x0, #48]
    467c:	cmp	w0, #0x0
    4680:	b.eq	45d4 <PyThread_free_lock@plt+0x25c4>  // b.none
    4684:	ldr	w0, [sp, #260]
    4688:	cmp	w0, #0x2
    468c:	b.eq	45d4 <PyThread_free_lock@plt+0x25c4>  // b.none
    4690:	ldr	w0, [sp, #260]
    4694:	cmp	w0, #0x1
    4698:	b.eq	46b4 <PyThread_free_lock@plt+0x26a4>  // b.none
    469c:	ldr	x0, [sp, #152]
    46a0:	cmp	x0, #0x0
    46a4:	b.ne	45a8 <PyThread_free_lock@plt+0x2598>  // b.any
    46a8:	b	46b4 <PyThread_free_lock@plt+0x26a4>
    46ac:	nop
    46b0:	b	46b8 <PyThread_free_lock@plt+0x26a8>
    46b4:	nop
    46b8:	add	x0, sp, #0xa8
    46bc:	ldr	w2, [sp, #260]
    46c0:	mov	x1, x0
    46c4:	ldr	x0, [sp, #136]
    46c8:	bl	37ac <PyThread_free_lock@plt+0x179c>
    46cc:	cmp	w0, #0x0
    46d0:	b.lt	47a8 <PyThread_free_lock@plt+0x2798>  // b.tstop
    46d4:	ldr	w0, [sp, #260]
    46d8:	cmp	w0, #0x1
    46dc:	b.ne	4770 <PyThread_free_lock@plt+0x2760>  // b.any
    46e0:	ldr	x0, [sp, #136]
    46e4:	mov	w1, #0x1                   	// #1
    46e8:	strb	w1, [x0, #144]
    46ec:	ldr	x0, [sp, #136]
    46f0:	str	wzr, [x0, #148]
    46f4:	ldr	x0, [sp, #136]
    46f8:	add	x0, x0, #0x10
    46fc:	bl	1e90 <inflateEnd@plt>
    4700:	str	w0, [sp, #260]
    4704:	ldr	w0, [sp, #260]
    4708:	cmp	w0, #0x0
    470c:	b.eq	4770 <PyThread_free_lock@plt+0x2760>  // b.none
    4710:	ldr	x0, [sp, #136]
    4714:	add	x1, x0, #0x10
    4718:	add	x0, sp, #0x10
    471c:	ldp	x2, x3, [x1]
    4720:	stp	x2, x3, [x0]
    4724:	ldp	x2, x3, [x1, #16]
    4728:	stp	x2, x3, [x0, #16]
    472c:	ldp	x2, x3, [x1, #32]
    4730:	stp	x2, x3, [x0, #32]
    4734:	ldp	x2, x3, [x1, #48]
    4738:	stp	x2, x3, [x0, #48]
    473c:	ldp	x2, x3, [x1, #64]
    4740:	stp	x2, x3, [x0, #64]
    4744:	ldp	x2, x3, [x1, #80]
    4748:	stp	x2, x3, [x0, #80]
    474c:	ldp	x2, x3, [x1, #96]
    4750:	stp	x2, x3, [x0, #96]
    4754:	add	x3, sp, #0x10
    4758:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    475c:	add	x2, x0, #0x3f0
    4760:	ldr	w1, [sp, #260]
    4764:	mov	x0, x3
    4768:	bl	2288 <PyThread_free_lock@plt+0x278>
    476c:	b	47ac <PyThread_free_lock@plt+0x279c>
    4770:	ldr	x0, [sp, #136]
    4774:	ldr	x1, [x0, #40]
    4778:	ldr	x0, [sp, #160]
    477c:	add	x0, x0, #0x20
    4780:	sub	x1, x1, x0
    4784:	add	x0, sp, #0xa0
    4788:	bl	1cf0 <_PyBytes_Resize@plt>
    478c:	cmp	w0, #0x0
    4790:	b.eq	47dc <PyThread_free_lock@plt+0x27cc>  // b.none
    4794:	b	47ac <PyThread_free_lock@plt+0x279c>
    4798:	nop
    479c:	b	47ac <PyThread_free_lock@plt+0x279c>
    47a0:	nop
    47a4:	b	47ac <PyThread_free_lock@plt+0x279c>
    47a8:	nop
    47ac:	ldr	x0, [sp, #160]
    47b0:	str	x0, [sp, #248]
    47b4:	ldr	x0, [sp, #248]
    47b8:	cmp	x0, #0x0
    47bc:	b.eq	47e4 <PyThread_free_lock@plt+0x27d4>  // b.none
    47c0:	str	xzr, [sp, #160]
    47c4:	ldr	x2, [sp, #248]
    47c8:	mov	w1, #0x49f                 	// #1183
    47cc:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    47d0:	add	x0, x0, #0x298
    47d4:	bl	21d8 <PyThread_free_lock@plt+0x1c8>
    47d8:	b	47e8 <PyThread_free_lock@plt+0x27d8>
    47dc:	nop
    47e0:	b	47e8 <PyThread_free_lock@plt+0x27d8>
    47e4:	nop
    47e8:	add	x0, sp, #0xa8
    47ec:	bl	1d20 <PyBuffer_Release@plt>
    47f0:	ldr	x0, [sp, #136]
    47f4:	ldr	x0, [x0, #160]
    47f8:	bl	1f20 <PyThread_release_lock@plt>
    47fc:	ldr	x0, [sp, #160]
    4800:	ldp	x29, x30, [sp], #288
    4804:	ret
    4808:	sub	sp, sp, #0xc0
    480c:	stp	x29, x30, [sp, #16]
    4810:	add	x29, sp, #0x10
    4814:	str	x0, [sp, #56]
    4818:	str	x1, [sp, #48]
    481c:	str	x2, [sp, #40]
    4820:	str	x3, [sp, #32]
    4824:	str	xzr, [sp, #184]
    4828:	ldr	x0, [sp, #32]
    482c:	cmp	x0, #0x0
    4830:	b.eq	4840 <PyThread_free_lock@plt+0x2830>  // b.none
    4834:	ldr	x0, [sp, #32]
    4838:	ldr	x0, [x0, #16]
    483c:	b	4844 <PyThread_free_lock@plt+0x2834>
    4840:	mov	x0, #0x0                   	// #0
    4844:	ldr	x1, [sp, #40]
    4848:	add	x0, x0, x1
    484c:	sub	x0, x0, #0x1
    4850:	str	x0, [sp, #168]
    4854:	stp	xzr, xzr, [sp, #72]
    4858:	stp	xzr, xzr, [sp, #88]
    485c:	stp	xzr, xzr, [sp, #104]
    4860:	stp	xzr, xzr, [sp, #120]
    4864:	stp	xzr, xzr, [sp, #136]
    4868:	mov	w0, #0xffffffff            	// #-1
    486c:	str	w0, [sp, #180]
    4870:	ldr	x0, [sp, #32]
    4874:	cmp	x0, #0x0
    4878:	b.ne	48a0 <PyThread_free_lock@plt+0x2890>  // b.any
    487c:	ldr	x0, [sp, #40]
    4880:	cmp	x0, #0x0
    4884:	b.le	48a0 <PyThread_free_lock@plt+0x2890>
    4888:	ldr	x0, [sp, #40]
    488c:	cmp	x0, #0x2
    4890:	b.gt	48a0 <PyThread_free_lock@plt+0x2890>
    4894:	ldr	x0, [sp, #48]
    4898:	cmp	x0, #0x0
    489c:	b.ne	48d4 <PyThread_free_lock@plt+0x28c4>  // b.any
    48a0:	add	x0, sp, #0x98
    48a4:	str	x0, [sp]
    48a8:	mov	w7, #0x0                   	// #0
    48ac:	mov	w6, #0x2                   	// #2
    48b0:	mov	w5, #0x1                   	// #1
    48b4:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    48b8:	add	x4, x0, #0x858
    48bc:	ldr	x3, [sp, #32]
    48c0:	mov	x2, #0x0                   	// #0
    48c4:	ldr	x1, [sp, #40]
    48c8:	ldr	x0, [sp, #48]
    48cc:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    48d0:	b	48d8 <PyThread_free_lock@plt+0x28c8>
    48d4:	ldr	x0, [sp, #48]
    48d8:	str	x0, [sp, #48]
    48dc:	ldr	x0, [sp, #48]
    48e0:	cmp	x0, #0x0
    48e4:	b.eq	4a10 <PyThread_free_lock@plt+0x2a00>  // b.none
    48e8:	ldr	x0, [sp, #48]
    48ec:	ldr	x0, [x0]
    48f0:	add	x1, sp, #0x48
    48f4:	mov	w2, #0x0                   	// #0
    48f8:	bl	1f30 <PyObject_GetBuffer@plt>
    48fc:	cmp	w0, #0x0
    4900:	b.ne	4a18 <PyThread_free_lock@plt+0x2a08>  // b.any
    4904:	add	x0, sp, #0x48
    4908:	mov	w1, #0x43                  	// #67
    490c:	bl	1d60 <PyBuffer_IsContiguous@plt>
    4910:	cmp	w0, #0x0
    4914:	b.ne	4944 <PyThread_free_lock@plt+0x2934>  // b.any
    4918:	ldr	x0, [sp, #48]
    491c:	ldr	x0, [x0]
    4920:	mov	x3, x0
    4924:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    4928:	add	x2, x0, #0x718
    492c:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    4930:	add	x1, x0, #0x730
    4934:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    4938:	add	x0, x0, #0x740
    493c:	bl	1e30 <_PyArg_BadArgument@plt>
    4940:	b	4a24 <PyThread_free_lock@plt+0x2a14>
    4944:	ldr	x0, [sp, #168]
    4948:	cmp	x0, #0x0
    494c:	b.eq	49e8 <PyThread_free_lock@plt+0x29d8>  // b.none
    4950:	ldr	x0, [sp, #48]
    4954:	add	x0, x0, #0x8
    4958:	ldr	x0, [x0]
    495c:	ldr	x1, [x0, #8]
    4960:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    4964:	ldr	x0, [x0, #4008]
    4968:	cmp	x1, x0
    496c:	b.eq	4998 <PyThread_free_lock@plt+0x2988>  // b.none
    4970:	ldr	x0, [sp, #48]
    4974:	add	x0, x0, #0x8
    4978:	ldr	x0, [x0]
    497c:	ldr	x2, [x0, #8]
    4980:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    4984:	ldr	x1, [x0, #4008]
    4988:	mov	x0, x2
    498c:	bl	1fd0 <PyType_IsSubtype@plt>
    4990:	cmp	w0, #0x0
    4994:	b.eq	49b8 <PyThread_free_lock@plt+0x29a8>  // b.none
    4998:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    499c:	ldr	x0, [x0, #4040]
    49a0:	ldr	x2, [x0]
    49a4:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    49a8:	add	x1, x0, #0x750
    49ac:	mov	x0, x2
    49b0:	bl	1dc0 <PyErr_SetString@plt>
    49b4:	b	4a24 <PyThread_free_lock@plt+0x2a14>
    49b8:	ldr	x0, [sp, #48]
    49bc:	add	x0, x0, #0x8
    49c0:	ldr	x0, [x0]
    49c4:	bl	1ff0 <_PyLong_AsInt@plt>
    49c8:	str	w0, [sp, #180]
    49cc:	ldr	w0, [sp, #180]
    49d0:	cmn	w0, #0x1
    49d4:	b.ne	49f0 <PyThread_free_lock@plt+0x29e0>  // b.any
    49d8:	bl	1eb0 <PyErr_Occurred@plt>
    49dc:	cmp	x0, #0x0
    49e0:	b.ne	4a20 <PyThread_free_lock@plt+0x2a10>  // b.any
    49e4:	b	49f0 <PyThread_free_lock@plt+0x29e0>
    49e8:	nop
    49ec:	b	49f4 <PyThread_free_lock@plt+0x29e4>
    49f0:	nop
    49f4:	add	x0, sp, #0x48
    49f8:	ldr	w2, [sp, #180]
    49fc:	mov	x1, x0
    4a00:	ldr	x0, [sp, #56]
    4a04:	bl	276c <PyThread_free_lock@plt+0x75c>
    4a08:	str	x0, [sp, #184]
    4a0c:	b	4a24 <PyThread_free_lock@plt+0x2a14>
    4a10:	nop
    4a14:	b	4a24 <PyThread_free_lock@plt+0x2a14>
    4a18:	nop
    4a1c:	b	4a24 <PyThread_free_lock@plt+0x2a14>
    4a20:	nop
    4a24:	ldr	x0, [sp, #80]
    4a28:	cmp	x0, #0x0
    4a2c:	b.eq	4a38 <PyThread_free_lock@plt+0x2a28>  // b.none
    4a30:	add	x0, sp, #0x48
    4a34:	bl	1d20 <PyBuffer_Release@plt>
    4a38:	ldr	x0, [sp, #184]
    4a3c:	ldp	x29, x30, [sp, #16]
    4a40:	add	sp, sp, #0xc0
    4a44:	ret
    4a48:	sub	sp, sp, #0xd0
    4a4c:	stp	x29, x30, [sp, #16]
    4a50:	add	x29, sp, #0x10
    4a54:	str	x0, [sp, #56]
    4a58:	str	x1, [sp, #48]
    4a5c:	str	x2, [sp, #40]
    4a60:	str	x3, [sp, #32]
    4a64:	str	xzr, [sp, #200]
    4a68:	ldr	x0, [sp, #32]
    4a6c:	cmp	x0, #0x0
    4a70:	b.eq	4a80 <PyThread_free_lock@plt+0x2a70>  // b.none
    4a74:	ldr	x0, [sp, #32]
    4a78:	ldr	x0, [x0, #16]
    4a7c:	b	4a84 <PyThread_free_lock@plt+0x2a74>
    4a80:	mov	x0, #0x0                   	// #0
    4a84:	ldr	x1, [sp, #40]
    4a88:	add	x0, x0, x1
    4a8c:	sub	x0, x0, #0x1
    4a90:	str	x0, [sp, #184]
    4a94:	stp	xzr, xzr, [sp, #80]
    4a98:	stp	xzr, xzr, [sp, #96]
    4a9c:	stp	xzr, xzr, [sp, #112]
    4aa0:	stp	xzr, xzr, [sp, #128]
    4aa4:	stp	xzr, xzr, [sp, #144]
    4aa8:	mov	w0, #0xf                   	// #15
    4aac:	str	w0, [sp, #196]
    4ab0:	mov	x0, #0x4000                	// #16384
    4ab4:	str	x0, [sp, #72]
    4ab8:	ldr	x0, [sp, #32]
    4abc:	cmp	x0, #0x0
    4ac0:	b.ne	4ae8 <PyThread_free_lock@plt+0x2ad8>  // b.any
    4ac4:	ldr	x0, [sp, #40]
    4ac8:	cmp	x0, #0x0
    4acc:	b.le	4ae8 <PyThread_free_lock@plt+0x2ad8>
    4ad0:	ldr	x0, [sp, #40]
    4ad4:	cmp	x0, #0x3
    4ad8:	b.gt	4ae8 <PyThread_free_lock@plt+0x2ad8>
    4adc:	ldr	x0, [sp, #48]
    4ae0:	cmp	x0, #0x0
    4ae4:	b.ne	4b1c <PyThread_free_lock@plt+0x2b0c>  // b.any
    4ae8:	add	x0, sp, #0xa0
    4aec:	str	x0, [sp]
    4af0:	mov	w7, #0x0                   	// #0
    4af4:	mov	w6, #0x3                   	// #3
    4af8:	mov	w5, #0x1                   	// #1
    4afc:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    4b00:	add	x4, x0, #0x898
    4b04:	ldr	x3, [sp, #32]
    4b08:	mov	x2, #0x0                   	// #0
    4b0c:	ldr	x1, [sp, #40]
    4b10:	ldr	x0, [sp, #48]
    4b14:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    4b18:	b	4b20 <PyThread_free_lock@plt+0x2b10>
    4b1c:	ldr	x0, [sp, #48]
    4b20:	str	x0, [sp, #48]
    4b24:	ldr	x0, [sp, #48]
    4b28:	cmp	x0, #0x0
    4b2c:	b.eq	4ca8 <PyThread_free_lock@plt+0x2c98>  // b.none
    4b30:	ldr	x0, [sp, #48]
    4b34:	ldr	x0, [x0]
    4b38:	add	x1, sp, #0x50
    4b3c:	mov	w2, #0x0                   	// #0
    4b40:	bl	1f30 <PyObject_GetBuffer@plt>
    4b44:	cmp	w0, #0x0
    4b48:	b.ne	4cb0 <PyThread_free_lock@plt+0x2ca0>  // b.any
    4b4c:	add	x0, sp, #0x50
    4b50:	mov	w1, #0x43                  	// #67
    4b54:	bl	1d60 <PyBuffer_IsContiguous@plt>
    4b58:	cmp	w0, #0x0
    4b5c:	b.ne	4b8c <PyThread_free_lock@plt+0x2b7c>  // b.any
    4b60:	ldr	x0, [sp, #48]
    4b64:	ldr	x0, [x0]
    4b68:	mov	x3, x0
    4b6c:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    4b70:	add	x2, x0, #0x718
    4b74:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    4b78:	add	x1, x0, #0x730
    4b7c:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    4b80:	add	x0, x0, #0x880
    4b84:	bl	1e30 <_PyArg_BadArgument@plt>
    4b88:	b	4cc4 <PyThread_free_lock@plt+0x2cb4>
    4b8c:	ldr	x0, [sp, #184]
    4b90:	cmp	x0, #0x0
    4b94:	b.eq	4c78 <PyThread_free_lock@plt+0x2c68>  // b.none
    4b98:	ldr	x0, [sp, #48]
    4b9c:	add	x0, x0, #0x8
    4ba0:	ldr	x0, [x0]
    4ba4:	cmp	x0, #0x0
    4ba8:	b.eq	4c58 <PyThread_free_lock@plt+0x2c48>  // b.none
    4bac:	ldr	x0, [sp, #48]
    4bb0:	add	x0, x0, #0x8
    4bb4:	ldr	x0, [x0]
    4bb8:	ldr	x1, [x0, #8]
    4bbc:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    4bc0:	ldr	x0, [x0, #4008]
    4bc4:	cmp	x1, x0
    4bc8:	b.eq	4bf4 <PyThread_free_lock@plt+0x2be4>  // b.none
    4bcc:	ldr	x0, [sp, #48]
    4bd0:	add	x0, x0, #0x8
    4bd4:	ldr	x0, [x0]
    4bd8:	ldr	x2, [x0, #8]
    4bdc:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    4be0:	ldr	x1, [x0, #4008]
    4be4:	mov	x0, x2
    4be8:	bl	1fd0 <PyType_IsSubtype@plt>
    4bec:	cmp	w0, #0x0
    4bf0:	b.eq	4c14 <PyThread_free_lock@plt+0x2c04>  // b.none
    4bf4:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    4bf8:	ldr	x0, [x0, #4040]
    4bfc:	ldr	x2, [x0]
    4c00:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    4c04:	add	x1, x0, #0x750
    4c08:	mov	x0, x2
    4c0c:	bl	1dc0 <PyErr_SetString@plt>
    4c10:	b	4cc4 <PyThread_free_lock@plt+0x2cb4>
    4c14:	ldr	x0, [sp, #48]
    4c18:	add	x0, x0, #0x8
    4c1c:	ldr	x0, [x0]
    4c20:	bl	1ff0 <_PyLong_AsInt@plt>
    4c24:	str	w0, [sp, #196]
    4c28:	ldr	w0, [sp, #196]
    4c2c:	cmn	w0, #0x1
    4c30:	b.ne	4c40 <PyThread_free_lock@plt+0x2c30>  // b.any
    4c34:	bl	1eb0 <PyErr_Occurred@plt>
    4c38:	cmp	x0, #0x0
    4c3c:	b.ne	4cb8 <PyThread_free_lock@plt+0x2ca8>  // b.any
    4c40:	ldr	x0, [sp, #184]
    4c44:	sub	x0, x0, #0x1
    4c48:	str	x0, [sp, #184]
    4c4c:	ldr	x0, [sp, #184]
    4c50:	cmp	x0, #0x0
    4c54:	b.eq	4c80 <PyThread_free_lock@plt+0x2c70>  // b.none
    4c58:	ldr	x0, [sp, #48]
    4c5c:	add	x0, x0, #0x10
    4c60:	ldr	x0, [x0]
    4c64:	add	x1, sp, #0x48
    4c68:	bl	2a74 <PyThread_free_lock@plt+0xa64>
    4c6c:	cmp	w0, #0x0
    4c70:	b.eq	4cc0 <PyThread_free_lock@plt+0x2cb0>  // b.none
    4c74:	b	4c84 <PyThread_free_lock@plt+0x2c74>
    4c78:	nop
    4c7c:	b	4c84 <PyThread_free_lock@plt+0x2c74>
    4c80:	nop
    4c84:	ldr	x1, [sp, #72]
    4c88:	add	x0, sp, #0x50
    4c8c:	mov	x3, x1
    4c90:	ldr	w2, [sp, #196]
    4c94:	mov	x1, x0
    4c98:	ldr	x0, [sp, #56]
    4c9c:	bl	2afc <PyThread_free_lock@plt+0xaec>
    4ca0:	str	x0, [sp, #200]
    4ca4:	b	4cc4 <PyThread_free_lock@plt+0x2cb4>
    4ca8:	nop
    4cac:	b	4cc4 <PyThread_free_lock@plt+0x2cb4>
    4cb0:	nop
    4cb4:	b	4cc4 <PyThread_free_lock@plt+0x2cb4>
    4cb8:	nop
    4cbc:	b	4cc4 <PyThread_free_lock@plt+0x2cb4>
    4cc0:	nop
    4cc4:	ldr	x0, [sp, #88]
    4cc8:	cmp	x0, #0x0
    4ccc:	b.eq	4cd8 <PyThread_free_lock@plt+0x2cc8>  // b.none
    4cd0:	add	x0, sp, #0x50
    4cd4:	bl	1d20 <PyBuffer_Release@plt>
    4cd8:	ldr	x0, [sp, #200]
    4cdc:	ldp	x29, x30, [sp, #16]
    4ce0:	add	sp, sp, #0xd0
    4ce4:	ret
    4ce8:	sub	sp, sp, #0xf0
    4cec:	stp	x29, x30, [sp, #16]
    4cf0:	add	x29, sp, #0x10
    4cf4:	str	x0, [sp, #56]
    4cf8:	str	x1, [sp, #48]
    4cfc:	str	x2, [sp, #40]
    4d00:	str	x3, [sp, #32]
    4d04:	str	xzr, [sp, #232]
    4d08:	ldr	x0, [sp, #32]
    4d0c:	cmp	x0, #0x0
    4d10:	b.eq	4d20 <PyThread_free_lock@plt+0x2d10>  // b.none
    4d14:	ldr	x0, [sp, #32]
    4d18:	ldr	x0, [x0, #16]
    4d1c:	b	4d24 <PyThread_free_lock@plt+0x2d14>
    4d20:	mov	x0, #0x0                   	// #0
    4d24:	ldr	x1, [sp, #40]
    4d28:	add	x0, x0, x1
    4d2c:	str	x0, [sp, #224]
    4d30:	mov	w0, #0xffffffff            	// #-1
    4d34:	str	w0, [sp, #220]
    4d38:	mov	w0, #0x8                   	// #8
    4d3c:	str	w0, [sp, #216]
    4d40:	mov	w0, #0xf                   	// #15
    4d44:	str	w0, [sp, #212]
    4d48:	mov	w0, #0x8                   	// #8
    4d4c:	str	w0, [sp, #208]
    4d50:	str	wzr, [sp, #204]
    4d54:	stp	xzr, xzr, [sp, #72]
    4d58:	stp	xzr, xzr, [sp, #88]
    4d5c:	stp	xzr, xzr, [sp, #104]
    4d60:	stp	xzr, xzr, [sp, #120]
    4d64:	stp	xzr, xzr, [sp, #136]
    4d68:	ldr	x0, [sp, #32]
    4d6c:	cmp	x0, #0x0
    4d70:	b.ne	4d98 <PyThread_free_lock@plt+0x2d88>  // b.any
    4d74:	ldr	x0, [sp, #40]
    4d78:	cmp	x0, #0x0
    4d7c:	b.lt	4d98 <PyThread_free_lock@plt+0x2d88>  // b.tstop
    4d80:	ldr	x0, [sp, #40]
    4d84:	cmp	x0, #0x6
    4d88:	b.gt	4d98 <PyThread_free_lock@plt+0x2d88>
    4d8c:	ldr	x0, [sp, #48]
    4d90:	cmp	x0, #0x0
    4d94:	b.ne	4dcc <PyThread_free_lock@plt+0x2dbc>  // b.any
    4d98:	add	x0, sp, #0x98
    4d9c:	str	x0, [sp]
    4da0:	mov	w7, #0x0                   	// #0
    4da4:	mov	w6, #0x6                   	// #6
    4da8:	mov	w5, #0x0                   	// #0
    4dac:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    4db0:	add	x4, x0, #0x8d8
    4db4:	ldr	x3, [sp, #32]
    4db8:	mov	x2, #0x0                   	// #0
    4dbc:	ldr	x1, [sp, #40]
    4dc0:	ldr	x0, [sp, #48]
    4dc4:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    4dc8:	b	4dd0 <PyThread_free_lock@plt+0x2dc0>
    4dcc:	ldr	x0, [sp, #48]
    4dd0:	str	x0, [sp, #48]
    4dd4:	ldr	x0, [sp, #48]
    4dd8:	cmp	x0, #0x0
    4ddc:	b.eq	5260 <PyThread_free_lock@plt+0x3250>  // b.none
    4de0:	ldr	x0, [sp, #224]
    4de4:	cmp	x0, #0x0
    4de8:	b.eq	5200 <PyThread_free_lock@plt+0x31f0>  // b.none
    4dec:	ldr	x0, [sp, #48]
    4df0:	ldr	x0, [x0]
    4df4:	cmp	x0, #0x0
    4df8:	b.eq	4e9c <PyThread_free_lock@plt+0x2e8c>  // b.none
    4dfc:	ldr	x0, [sp, #48]
    4e00:	ldr	x0, [x0]
    4e04:	ldr	x1, [x0, #8]
    4e08:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    4e0c:	ldr	x0, [x0, #4008]
    4e10:	cmp	x1, x0
    4e14:	b.eq	4e3c <PyThread_free_lock@plt+0x2e2c>  // b.none
    4e18:	ldr	x0, [sp, #48]
    4e1c:	ldr	x0, [x0]
    4e20:	ldr	x2, [x0, #8]
    4e24:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    4e28:	ldr	x1, [x0, #4008]
    4e2c:	mov	x0, x2
    4e30:	bl	1fd0 <PyType_IsSubtype@plt>
    4e34:	cmp	w0, #0x0
    4e38:	b.eq	4e5c <PyThread_free_lock@plt+0x2e4c>  // b.none
    4e3c:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    4e40:	ldr	x0, [x0, #4040]
    4e44:	ldr	x2, [x0]
    4e48:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    4e4c:	add	x1, x0, #0x750
    4e50:	mov	x0, x2
    4e54:	bl	1dc0 <PyErr_SetString@plt>
    4e58:	b	5294 <PyThread_free_lock@plt+0x3284>
    4e5c:	ldr	x0, [sp, #48]
    4e60:	ldr	x0, [x0]
    4e64:	bl	1ff0 <_PyLong_AsInt@plt>
    4e68:	str	w0, [sp, #220]
    4e6c:	ldr	w0, [sp, #220]
    4e70:	cmn	w0, #0x1
    4e74:	b.ne	4e84 <PyThread_free_lock@plt+0x2e74>  // b.any
    4e78:	bl	1eb0 <PyErr_Occurred@plt>
    4e7c:	cmp	x0, #0x0
    4e80:	b.ne	5268 <PyThread_free_lock@plt+0x3258>  // b.any
    4e84:	ldr	x0, [sp, #224]
    4e88:	sub	x0, x0, #0x1
    4e8c:	str	x0, [sp, #224]
    4e90:	ldr	x0, [sp, #224]
    4e94:	cmp	x0, #0x0
    4e98:	b.eq	5208 <PyThread_free_lock@plt+0x31f8>  // b.none
    4e9c:	ldr	x0, [sp, #48]
    4ea0:	add	x0, x0, #0x8
    4ea4:	ldr	x0, [x0]
    4ea8:	cmp	x0, #0x0
    4eac:	b.eq	4f5c <PyThread_free_lock@plt+0x2f4c>  // b.none
    4eb0:	ldr	x0, [sp, #48]
    4eb4:	add	x0, x0, #0x8
    4eb8:	ldr	x0, [x0]
    4ebc:	ldr	x1, [x0, #8]
    4ec0:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    4ec4:	ldr	x0, [x0, #4008]
    4ec8:	cmp	x1, x0
    4ecc:	b.eq	4ef8 <PyThread_free_lock@plt+0x2ee8>  // b.none
    4ed0:	ldr	x0, [sp, #48]
    4ed4:	add	x0, x0, #0x8
    4ed8:	ldr	x0, [x0]
    4edc:	ldr	x2, [x0, #8]
    4ee0:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    4ee4:	ldr	x1, [x0, #4008]
    4ee8:	mov	x0, x2
    4eec:	bl	1fd0 <PyType_IsSubtype@plt>
    4ef0:	cmp	w0, #0x0
    4ef4:	b.eq	4f18 <PyThread_free_lock@plt+0x2f08>  // b.none
    4ef8:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    4efc:	ldr	x0, [x0, #4040]
    4f00:	ldr	x2, [x0]
    4f04:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    4f08:	add	x1, x0, #0x750
    4f0c:	mov	x0, x2
    4f10:	bl	1dc0 <PyErr_SetString@plt>
    4f14:	b	5294 <PyThread_free_lock@plt+0x3284>
    4f18:	ldr	x0, [sp, #48]
    4f1c:	add	x0, x0, #0x8
    4f20:	ldr	x0, [x0]
    4f24:	bl	1ff0 <_PyLong_AsInt@plt>
    4f28:	str	w0, [sp, #216]
    4f2c:	ldr	w0, [sp, #216]
    4f30:	cmn	w0, #0x1
    4f34:	b.ne	4f44 <PyThread_free_lock@plt+0x2f34>  // b.any
    4f38:	bl	1eb0 <PyErr_Occurred@plt>
    4f3c:	cmp	x0, #0x0
    4f40:	b.ne	5270 <PyThread_free_lock@plt+0x3260>  // b.any
    4f44:	ldr	x0, [sp, #224]
    4f48:	sub	x0, x0, #0x1
    4f4c:	str	x0, [sp, #224]
    4f50:	ldr	x0, [sp, #224]
    4f54:	cmp	x0, #0x0
    4f58:	b.eq	5210 <PyThread_free_lock@plt+0x3200>  // b.none
    4f5c:	ldr	x0, [sp, #48]
    4f60:	add	x0, x0, #0x10
    4f64:	ldr	x0, [x0]
    4f68:	cmp	x0, #0x0
    4f6c:	b.eq	501c <PyThread_free_lock@plt+0x300c>  // b.none
    4f70:	ldr	x0, [sp, #48]
    4f74:	add	x0, x0, #0x10
    4f78:	ldr	x0, [x0]
    4f7c:	ldr	x1, [x0, #8]
    4f80:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    4f84:	ldr	x0, [x0, #4008]
    4f88:	cmp	x1, x0
    4f8c:	b.eq	4fb8 <PyThread_free_lock@plt+0x2fa8>  // b.none
    4f90:	ldr	x0, [sp, #48]
    4f94:	add	x0, x0, #0x10
    4f98:	ldr	x0, [x0]
    4f9c:	ldr	x2, [x0, #8]
    4fa0:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    4fa4:	ldr	x1, [x0, #4008]
    4fa8:	mov	x0, x2
    4fac:	bl	1fd0 <PyType_IsSubtype@plt>
    4fb0:	cmp	w0, #0x0
    4fb4:	b.eq	4fd8 <PyThread_free_lock@plt+0x2fc8>  // b.none
    4fb8:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    4fbc:	ldr	x0, [x0, #4040]
    4fc0:	ldr	x2, [x0]
    4fc4:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    4fc8:	add	x1, x0, #0x750
    4fcc:	mov	x0, x2
    4fd0:	bl	1dc0 <PyErr_SetString@plt>
    4fd4:	b	5294 <PyThread_free_lock@plt+0x3284>
    4fd8:	ldr	x0, [sp, #48]
    4fdc:	add	x0, x0, #0x10
    4fe0:	ldr	x0, [x0]
    4fe4:	bl	1ff0 <_PyLong_AsInt@plt>
    4fe8:	str	w0, [sp, #212]
    4fec:	ldr	w0, [sp, #212]
    4ff0:	cmn	w0, #0x1
    4ff4:	b.ne	5004 <PyThread_free_lock@plt+0x2ff4>  // b.any
    4ff8:	bl	1eb0 <PyErr_Occurred@plt>
    4ffc:	cmp	x0, #0x0
    5000:	b.ne	5278 <PyThread_free_lock@plt+0x3268>  // b.any
    5004:	ldr	x0, [sp, #224]
    5008:	sub	x0, x0, #0x1
    500c:	str	x0, [sp, #224]
    5010:	ldr	x0, [sp, #224]
    5014:	cmp	x0, #0x0
    5018:	b.eq	5218 <PyThread_free_lock@plt+0x3208>  // b.none
    501c:	ldr	x0, [sp, #48]
    5020:	add	x0, x0, #0x18
    5024:	ldr	x0, [x0]
    5028:	cmp	x0, #0x0
    502c:	b.eq	50dc <PyThread_free_lock@plt+0x30cc>  // b.none
    5030:	ldr	x0, [sp, #48]
    5034:	add	x0, x0, #0x18
    5038:	ldr	x0, [x0]
    503c:	ldr	x1, [x0, #8]
    5040:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    5044:	ldr	x0, [x0, #4008]
    5048:	cmp	x1, x0
    504c:	b.eq	5078 <PyThread_free_lock@plt+0x3068>  // b.none
    5050:	ldr	x0, [sp, #48]
    5054:	add	x0, x0, #0x18
    5058:	ldr	x0, [x0]
    505c:	ldr	x2, [x0, #8]
    5060:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    5064:	ldr	x1, [x0, #4008]
    5068:	mov	x0, x2
    506c:	bl	1fd0 <PyType_IsSubtype@plt>
    5070:	cmp	w0, #0x0
    5074:	b.eq	5098 <PyThread_free_lock@plt+0x3088>  // b.none
    5078:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    507c:	ldr	x0, [x0, #4040]
    5080:	ldr	x2, [x0]
    5084:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    5088:	add	x1, x0, #0x750
    508c:	mov	x0, x2
    5090:	bl	1dc0 <PyErr_SetString@plt>
    5094:	b	5294 <PyThread_free_lock@plt+0x3284>
    5098:	ldr	x0, [sp, #48]
    509c:	add	x0, x0, #0x18
    50a0:	ldr	x0, [x0]
    50a4:	bl	1ff0 <_PyLong_AsInt@plt>
    50a8:	str	w0, [sp, #208]
    50ac:	ldr	w0, [sp, #208]
    50b0:	cmn	w0, #0x1
    50b4:	b.ne	50c4 <PyThread_free_lock@plt+0x30b4>  // b.any
    50b8:	bl	1eb0 <PyErr_Occurred@plt>
    50bc:	cmp	x0, #0x0
    50c0:	b.ne	5280 <PyThread_free_lock@plt+0x3270>  // b.any
    50c4:	ldr	x0, [sp, #224]
    50c8:	sub	x0, x0, #0x1
    50cc:	str	x0, [sp, #224]
    50d0:	ldr	x0, [sp, #224]
    50d4:	cmp	x0, #0x0
    50d8:	b.eq	5220 <PyThread_free_lock@plt+0x3210>  // b.none
    50dc:	ldr	x0, [sp, #48]
    50e0:	add	x0, x0, #0x20
    50e4:	ldr	x0, [x0]
    50e8:	cmp	x0, #0x0
    50ec:	b.eq	519c <PyThread_free_lock@plt+0x318c>  // b.none
    50f0:	ldr	x0, [sp, #48]
    50f4:	add	x0, x0, #0x20
    50f8:	ldr	x0, [x0]
    50fc:	ldr	x1, [x0, #8]
    5100:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    5104:	ldr	x0, [x0, #4008]
    5108:	cmp	x1, x0
    510c:	b.eq	5138 <PyThread_free_lock@plt+0x3128>  // b.none
    5110:	ldr	x0, [sp, #48]
    5114:	add	x0, x0, #0x20
    5118:	ldr	x0, [x0]
    511c:	ldr	x2, [x0, #8]
    5120:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    5124:	ldr	x1, [x0, #4008]
    5128:	mov	x0, x2
    512c:	bl	1fd0 <PyType_IsSubtype@plt>
    5130:	cmp	w0, #0x0
    5134:	b.eq	5158 <PyThread_free_lock@plt+0x3148>  // b.none
    5138:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    513c:	ldr	x0, [x0, #4040]
    5140:	ldr	x2, [x0]
    5144:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    5148:	add	x1, x0, #0x750
    514c:	mov	x0, x2
    5150:	bl	1dc0 <PyErr_SetString@plt>
    5154:	b	5294 <PyThread_free_lock@plt+0x3284>
    5158:	ldr	x0, [sp, #48]
    515c:	add	x0, x0, #0x20
    5160:	ldr	x0, [x0]
    5164:	bl	1ff0 <_PyLong_AsInt@plt>
    5168:	str	w0, [sp, #204]
    516c:	ldr	w0, [sp, #204]
    5170:	cmn	w0, #0x1
    5174:	b.ne	5184 <PyThread_free_lock@plt+0x3174>  // b.any
    5178:	bl	1eb0 <PyErr_Occurred@plt>
    517c:	cmp	x0, #0x0
    5180:	b.ne	5288 <PyThread_free_lock@plt+0x3278>  // b.any
    5184:	ldr	x0, [sp, #224]
    5188:	sub	x0, x0, #0x1
    518c:	str	x0, [sp, #224]
    5190:	ldr	x0, [sp, #224]
    5194:	cmp	x0, #0x0
    5198:	b.eq	5228 <PyThread_free_lock@plt+0x3218>  // b.none
    519c:	ldr	x0, [sp, #48]
    51a0:	add	x0, x0, #0x28
    51a4:	ldr	x0, [x0]
    51a8:	add	x1, sp, #0x48
    51ac:	mov	w2, #0x0                   	// #0
    51b0:	bl	1f30 <PyObject_GetBuffer@plt>
    51b4:	cmp	w0, #0x0
    51b8:	b.ne	5290 <PyThread_free_lock@plt+0x3280>  // b.any
    51bc:	add	x0, sp, #0x48
    51c0:	mov	w1, #0x43                  	// #67
    51c4:	bl	1d60 <PyBuffer_IsContiguous@plt>
    51c8:	cmp	w0, #0x0
    51cc:	b.ne	5230 <PyThread_free_lock@plt+0x3220>  // b.any
    51d0:	ldr	x0, [sp, #48]
    51d4:	add	x0, x0, #0x28
    51d8:	ldr	x0, [x0]
    51dc:	mov	x3, x0
    51e0:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    51e4:	add	x2, x0, #0x718
    51e8:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    51ec:	add	x1, x0, #0xd00
    51f0:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    51f4:	add	x0, x0, #0xd18
    51f8:	bl	1e30 <_PyArg_BadArgument@plt>
    51fc:	b	5294 <PyThread_free_lock@plt+0x3284>
    5200:	nop
    5204:	b	5234 <PyThread_free_lock@plt+0x3224>
    5208:	nop
    520c:	b	5234 <PyThread_free_lock@plt+0x3224>
    5210:	nop
    5214:	b	5234 <PyThread_free_lock@plt+0x3224>
    5218:	nop
    521c:	b	5234 <PyThread_free_lock@plt+0x3224>
    5220:	nop
    5224:	b	5234 <PyThread_free_lock@plt+0x3224>
    5228:	nop
    522c:	b	5234 <PyThread_free_lock@plt+0x3224>
    5230:	nop
    5234:	add	x0, sp, #0x48
    5238:	mov	x6, x0
    523c:	ldr	w5, [sp, #204]
    5240:	ldr	w4, [sp, #208]
    5244:	ldr	w3, [sp, #212]
    5248:	ldr	w2, [sp, #216]
    524c:	ldr	w1, [sp, #220]
    5250:	ldr	x0, [sp, #56]
    5254:	bl	2edc <PyThread_free_lock@plt+0xecc>
    5258:	str	x0, [sp, #232]
    525c:	b	5294 <PyThread_free_lock@plt+0x3284>
    5260:	nop
    5264:	b	5294 <PyThread_free_lock@plt+0x3284>
    5268:	nop
    526c:	b	5294 <PyThread_free_lock@plt+0x3284>
    5270:	nop
    5274:	b	5294 <PyThread_free_lock@plt+0x3284>
    5278:	nop
    527c:	b	5294 <PyThread_free_lock@plt+0x3284>
    5280:	nop
    5284:	b	5294 <PyThread_free_lock@plt+0x3284>
    5288:	nop
    528c:	b	5294 <PyThread_free_lock@plt+0x3284>
    5290:	nop
    5294:	ldr	x0, [sp, #80]
    5298:	cmp	x0, #0x0
    529c:	b.eq	52a8 <PyThread_free_lock@plt+0x3298>  // b.none
    52a0:	add	x0, sp, #0x48
    52a4:	bl	1d20 <PyBuffer_Release@plt>
    52a8:	ldr	x0, [sp, #232]
    52ac:	ldp	x29, x30, [sp, #16]
    52b0:	add	sp, sp, #0xf0
    52b4:	ret
    52b8:	sub	sp, sp, #0x70
    52bc:	stp	x29, x30, [sp, #16]
    52c0:	add	x29, sp, #0x10
    52c4:	str	x0, [sp, #56]
    52c8:	str	x1, [sp, #48]
    52cc:	str	x2, [sp, #40]
    52d0:	str	x3, [sp, #32]
    52d4:	str	xzr, [sp, #104]
    52d8:	ldr	x0, [sp, #32]
    52dc:	cmp	x0, #0x0
    52e0:	b.eq	52f0 <PyThread_free_lock@plt+0x32e0>  // b.none
    52e4:	ldr	x0, [sp, #32]
    52e8:	ldr	x0, [x0, #16]
    52ec:	b	52f4 <PyThread_free_lock@plt+0x32e4>
    52f0:	mov	x0, #0x0                   	// #0
    52f4:	ldr	x1, [sp, #40]
    52f8:	add	x0, x0, x1
    52fc:	str	x0, [sp, #80]
    5300:	mov	w0, #0xf                   	// #15
    5304:	str	w0, [sp, #100]
    5308:	str	xzr, [sp, #88]
    530c:	ldr	x0, [sp, #32]
    5310:	cmp	x0, #0x0
    5314:	b.ne	533c <PyThread_free_lock@plt+0x332c>  // b.any
    5318:	ldr	x0, [sp, #40]
    531c:	cmp	x0, #0x0
    5320:	b.lt	533c <PyThread_free_lock@plt+0x332c>  // b.tstop
    5324:	ldr	x0, [sp, #40]
    5328:	cmp	x0, #0x2
    532c:	b.gt	533c <PyThread_free_lock@plt+0x332c>
    5330:	ldr	x0, [sp, #48]
    5334:	cmp	x0, #0x0
    5338:	b.ne	5370 <PyThread_free_lock@plt+0x3360>  // b.any
    533c:	add	x0, sp, #0x40
    5340:	str	x0, [sp]
    5344:	mov	w7, #0x0                   	// #0
    5348:	mov	w6, #0x2                   	// #2
    534c:	mov	w5, #0x0                   	// #0
    5350:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    5354:	add	x4, x0, #0x918
    5358:	ldr	x3, [sp, #32]
    535c:	mov	x2, #0x0                   	// #0
    5360:	ldr	x1, [sp, #40]
    5364:	ldr	x0, [sp, #48]
    5368:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    536c:	b	5374 <PyThread_free_lock@plt+0x3364>
    5370:	ldr	x0, [sp, #48]
    5374:	str	x0, [sp, #48]
    5378:	ldr	x0, [sp, #48]
    537c:	cmp	x0, #0x0
    5380:	b.eq	5474 <PyThread_free_lock@plt+0x3464>  // b.none
    5384:	ldr	x0, [sp, #80]
    5388:	cmp	x0, #0x0
    538c:	b.eq	5450 <PyThread_free_lock@plt+0x3440>  // b.none
    5390:	ldr	x0, [sp, #48]
    5394:	ldr	x0, [x0]
    5398:	cmp	x0, #0x0
    539c:	b.eq	5440 <PyThread_free_lock@plt+0x3430>  // b.none
    53a0:	ldr	x0, [sp, #48]
    53a4:	ldr	x0, [x0]
    53a8:	ldr	x1, [x0, #8]
    53ac:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    53b0:	ldr	x0, [x0, #4008]
    53b4:	cmp	x1, x0
    53b8:	b.eq	53e0 <PyThread_free_lock@plt+0x33d0>  // b.none
    53bc:	ldr	x0, [sp, #48]
    53c0:	ldr	x0, [x0]
    53c4:	ldr	x2, [x0, #8]
    53c8:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    53cc:	ldr	x1, [x0, #4008]
    53d0:	mov	x0, x2
    53d4:	bl	1fd0 <PyType_IsSubtype@plt>
    53d8:	cmp	w0, #0x0
    53dc:	b.eq	5400 <PyThread_free_lock@plt+0x33f0>  // b.none
    53e0:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    53e4:	ldr	x0, [x0, #4040]
    53e8:	ldr	x2, [x0]
    53ec:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    53f0:	add	x1, x0, #0x750
    53f4:	mov	x0, x2
    53f8:	bl	1dc0 <PyErr_SetString@plt>
    53fc:	b	5480 <PyThread_free_lock@plt+0x3470>
    5400:	ldr	x0, [sp, #48]
    5404:	ldr	x0, [x0]
    5408:	bl	1ff0 <_PyLong_AsInt@plt>
    540c:	str	w0, [sp, #100]
    5410:	ldr	w0, [sp, #100]
    5414:	cmn	w0, #0x1
    5418:	b.ne	5428 <PyThread_free_lock@plt+0x3418>  // b.any
    541c:	bl	1eb0 <PyErr_Occurred@plt>
    5420:	cmp	x0, #0x0
    5424:	b.ne	547c <PyThread_free_lock@plt+0x346c>  // b.any
    5428:	ldr	x0, [sp, #80]
    542c:	sub	x0, x0, #0x1
    5430:	str	x0, [sp, #80]
    5434:	ldr	x0, [sp, #80]
    5438:	cmp	x0, #0x0
    543c:	b.eq	5458 <PyThread_free_lock@plt+0x3448>  // b.none
    5440:	ldr	x0, [sp, #48]
    5444:	ldr	x0, [x0, #8]
    5448:	str	x0, [sp, #88]
    544c:	b	545c <PyThread_free_lock@plt+0x344c>
    5450:	nop
    5454:	b	545c <PyThread_free_lock@plt+0x344c>
    5458:	nop
    545c:	ldr	x2, [sp, #88]
    5460:	ldr	w1, [sp, #100]
    5464:	ldr	x0, [sp, #56]
    5468:	bl	32a0 <PyThread_free_lock@plt+0x1290>
    546c:	str	x0, [sp, #104]
    5470:	b	5480 <PyThread_free_lock@plt+0x3470>
    5474:	nop
    5478:	b	5480 <PyThread_free_lock@plt+0x3470>
    547c:	nop
    5480:	ldr	x0, [sp, #104]
    5484:	ldp	x29, x30, [sp, #16]
    5488:	add	sp, sp, #0x70
    548c:	ret
    5490:	stp	x29, x30, [sp, #-128]!
    5494:	mov	x29, sp
    5498:	str	x0, [sp, #24]
    549c:	str	x1, [sp, #16]
    54a0:	str	xzr, [sp, #120]
    54a4:	stp	xzr, xzr, [sp, #40]
    54a8:	stp	xzr, xzr, [sp, #56]
    54ac:	stp	xzr, xzr, [sp, #72]
    54b0:	stp	xzr, xzr, [sp, #88]
    54b4:	stp	xzr, xzr, [sp, #104]
    54b8:	add	x0, sp, #0x28
    54bc:	mov	w2, #0x0                   	// #0
    54c0:	mov	x1, x0
    54c4:	ldr	x0, [sp, #16]
    54c8:	bl	1f30 <PyObject_GetBuffer@plt>
    54cc:	cmp	w0, #0x0
    54d0:	b.ne	5524 <PyThread_free_lock@plt+0x3514>  // b.any
    54d4:	add	x0, sp, #0x28
    54d8:	mov	w1, #0x43                  	// #67
    54dc:	bl	1d60 <PyBuffer_IsContiguous@plt>
    54e0:	cmp	w0, #0x0
    54e4:	b.ne	550c <PyThread_free_lock@plt+0x34fc>  // b.any
    54e8:	ldr	x3, [sp, #16]
    54ec:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    54f0:	add	x2, x0, #0x718
    54f4:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    54f8:	add	x1, x0, #0xf70
    54fc:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    5500:	add	x0, x0, #0x740
    5504:	bl	1e30 <_PyArg_BadArgument@plt>
    5508:	b	5528 <PyThread_free_lock@plt+0x3518>
    550c:	add	x0, sp, #0x28
    5510:	mov	x1, x0
    5514:	ldr	x0, [sp, #24]
    5518:	bl	35f4 <PyThread_free_lock@plt+0x15e4>
    551c:	str	x0, [sp, #120]
    5520:	b	5528 <PyThread_free_lock@plt+0x3518>
    5524:	nop
    5528:	ldr	x0, [sp, #48]
    552c:	cmp	x0, #0x0
    5530:	b.eq	553c <PyThread_free_lock@plt+0x352c>  // b.none
    5534:	add	x0, sp, #0x28
    5538:	bl	1d20 <PyBuffer_Release@plt>
    553c:	ldr	x0, [sp, #120]
    5540:	ldp	x29, x30, [sp], #128
    5544:	ret
    5548:	sub	sp, sp, #0xc0
    554c:	stp	x29, x30, [sp, #16]
    5550:	add	x29, sp, #0x10
    5554:	str	x0, [sp, #56]
    5558:	str	x1, [sp, #48]
    555c:	str	x2, [sp, #40]
    5560:	str	x3, [sp, #32]
    5564:	str	xzr, [sp, #184]
    5568:	ldr	x0, [sp, #32]
    556c:	cmp	x0, #0x0
    5570:	b.eq	5580 <PyThread_free_lock@plt+0x3570>  // b.none
    5574:	ldr	x0, [sp, #32]
    5578:	ldr	x0, [x0, #16]
    557c:	b	5584 <PyThread_free_lock@plt+0x3574>
    5580:	mov	x0, #0x0                   	// #0
    5584:	ldr	x1, [sp, #40]
    5588:	add	x0, x0, x1
    558c:	sub	x0, x0, #0x1
    5590:	str	x0, [sp, #176]
    5594:	stp	xzr, xzr, [sp, #80]
    5598:	stp	xzr, xzr, [sp, #96]
    559c:	stp	xzr, xzr, [sp, #112]
    55a0:	stp	xzr, xzr, [sp, #128]
    55a4:	stp	xzr, xzr, [sp, #144]
    55a8:	str	xzr, [sp, #72]
    55ac:	ldr	x0, [sp, #32]
    55b0:	cmp	x0, #0x0
    55b4:	b.ne	55dc <PyThread_free_lock@plt+0x35cc>  // b.any
    55b8:	ldr	x0, [sp, #40]
    55bc:	cmp	x0, #0x0
    55c0:	b.le	55dc <PyThread_free_lock@plt+0x35cc>
    55c4:	ldr	x0, [sp, #40]
    55c8:	cmp	x0, #0x2
    55cc:	b.gt	55dc <PyThread_free_lock@plt+0x35cc>
    55d0:	ldr	x0, [sp, #48]
    55d4:	cmp	x0, #0x0
    55d8:	b.ne	5610 <PyThread_free_lock@plt+0x3600>  // b.any
    55dc:	add	x0, sp, #0xa0
    55e0:	str	x0, [sp]
    55e4:	mov	w7, #0x0                   	// #0
    55e8:	mov	w6, #0x2                   	// #2
    55ec:	mov	w5, #0x1                   	// #1
    55f0:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    55f4:	add	x4, x0, #0x958
    55f8:	ldr	x3, [sp, #32]
    55fc:	mov	x2, #0x0                   	// #0
    5600:	ldr	x1, [sp, #40]
    5604:	ldr	x0, [sp, #48]
    5608:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    560c:	b	5614 <PyThread_free_lock@plt+0x3604>
    5610:	ldr	x0, [sp, #48]
    5614:	str	x0, [sp, #48]
    5618:	ldr	x0, [sp, #48]
    561c:	cmp	x0, #0x0
    5620:	b.eq	56d0 <PyThread_free_lock@plt+0x36c0>  // b.none
    5624:	ldr	x0, [sp, #48]
    5628:	ldr	x0, [x0]
    562c:	add	x1, sp, #0x50
    5630:	mov	w2, #0x0                   	// #0
    5634:	bl	1f30 <PyObject_GetBuffer@plt>
    5638:	cmp	w0, #0x0
    563c:	b.ne	56d8 <PyThread_free_lock@plt+0x36c8>  // b.any
    5640:	add	x0, sp, #0x50
    5644:	mov	w1, #0x43                  	// #67
    5648:	bl	1d60 <PyBuffer_IsContiguous@plt>
    564c:	cmp	w0, #0x0
    5650:	b.ne	5680 <PyThread_free_lock@plt+0x3670>  // b.any
    5654:	ldr	x0, [sp, #48]
    5658:	ldr	x0, [x0]
    565c:	mov	x3, x0
    5660:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    5664:	add	x2, x0, #0x718
    5668:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    566c:	add	x1, x0, #0x730
    5670:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    5674:	add	x0, x0, #0x880
    5678:	bl	1e30 <_PyArg_BadArgument@plt>
    567c:	b	56e4 <PyThread_free_lock@plt+0x36d4>
    5680:	ldr	x0, [sp, #176]
    5684:	cmp	x0, #0x0
    5688:	b.eq	56ac <PyThread_free_lock@plt+0x369c>  // b.none
    568c:	ldr	x0, [sp, #48]
    5690:	add	x0, x0, #0x8
    5694:	ldr	x0, [x0]
    5698:	add	x1, sp, #0x48
    569c:	bl	2a74 <PyThread_free_lock@plt+0xa64>
    56a0:	cmp	w0, #0x0
    56a4:	b.eq	56e0 <PyThread_free_lock@plt+0x36d0>  // b.none
    56a8:	b	56b0 <PyThread_free_lock@plt+0x36a0>
    56ac:	nop
    56b0:	ldr	x1, [sp, #72]
    56b4:	add	x0, sp, #0x50
    56b8:	mov	x2, x1
    56bc:	mov	x1, x0
    56c0:	ldr	x0, [sp, #56]
    56c4:	bl	3998 <PyThread_free_lock@plt+0x1988>
    56c8:	str	x0, [sp, #184]
    56cc:	b	56e4 <PyThread_free_lock@plt+0x36d4>
    56d0:	nop
    56d4:	b	56e4 <PyThread_free_lock@plt+0x36d4>
    56d8:	nop
    56dc:	b	56e4 <PyThread_free_lock@plt+0x36d4>
    56e0:	nop
    56e4:	ldr	x0, [sp, #88]
    56e8:	cmp	x0, #0x0
    56ec:	b.eq	56f8 <PyThread_free_lock@plt+0x36e8>  // b.none
    56f0:	add	x0, sp, #0x50
    56f4:	bl	1d20 <PyBuffer_Release@plt>
    56f8:	ldr	x0, [sp, #184]
    56fc:	ldp	x29, x30, [sp, #16]
    5700:	add	sp, sp, #0xc0
    5704:	ret
    5708:	stp	x29, x30, [sp, #-64]!
    570c:	mov	x29, sp
    5710:	str	x0, [sp, #40]
    5714:	str	x1, [sp, #32]
    5718:	str	x2, [sp, #24]
    571c:	str	xzr, [sp, #56]
    5720:	mov	w0, #0x4                   	// #4
    5724:	str	w0, [sp, #52]
    5728:	ldr	x0, [sp, #24]
    572c:	cmp	x0, #0x0
    5730:	b.lt	5740 <PyThread_free_lock@plt+0x3730>  // b.tstop
    5734:	ldr	x0, [sp, #24]
    5738:	cmp	x0, #0x1
    573c:	b.le	5760 <PyThread_free_lock@plt+0x3750>
    5740:	mov	x3, #0x1                   	// #1
    5744:	mov	x2, #0x0                   	// #0
    5748:	ldr	x1, [sp, #24]
    574c:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    5750:	add	x0, x0, #0x2b0
    5754:	bl	1e80 <_PyArg_CheckPositional@plt>
    5758:	cmp	w0, #0x0
    575c:	b.eq	5818 <PyThread_free_lock@plt+0x3808>  // b.none
    5760:	ldr	x0, [sp, #24]
    5764:	cmp	x0, #0x0
    5768:	b.le	57f8 <PyThread_free_lock@plt+0x37e8>
    576c:	ldr	x0, [sp, #32]
    5770:	ldr	x0, [x0]
    5774:	ldr	x1, [x0, #8]
    5778:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    577c:	ldr	x0, [x0, #4008]
    5780:	cmp	x1, x0
    5784:	b.eq	57ac <PyThread_free_lock@plt+0x379c>  // b.none
    5788:	ldr	x0, [sp, #32]
    578c:	ldr	x0, [x0]
    5790:	ldr	x2, [x0, #8]
    5794:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    5798:	ldr	x1, [x0, #4008]
    579c:	mov	x0, x2
    57a0:	bl	1fd0 <PyType_IsSubtype@plt>
    57a4:	cmp	w0, #0x0
    57a8:	b.eq	57cc <PyThread_free_lock@plt+0x37bc>  // b.none
    57ac:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    57b0:	ldr	x0, [x0, #4040]
    57b4:	ldr	x2, [x0]
    57b8:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    57bc:	add	x1, x0, #0x750
    57c0:	mov	x0, x2
    57c4:	bl	1dc0 <PyErr_SetString@plt>
    57c8:	b	5824 <PyThread_free_lock@plt+0x3814>
    57cc:	ldr	x0, [sp, #32]
    57d0:	ldr	x0, [x0]
    57d4:	bl	1ff0 <_PyLong_AsInt@plt>
    57d8:	str	w0, [sp, #52]
    57dc:	ldr	w0, [sp, #52]
    57e0:	cmn	w0, #0x1
    57e4:	b.ne	5800 <PyThread_free_lock@plt+0x37f0>  // b.any
    57e8:	bl	1eb0 <PyErr_Occurred@plt>
    57ec:	cmp	x0, #0x0
    57f0:	b.ne	5820 <PyThread_free_lock@plt+0x3810>  // b.any
    57f4:	b	5800 <PyThread_free_lock@plt+0x37f0>
    57f8:	nop
    57fc:	b	5804 <PyThread_free_lock@plt+0x37f4>
    5800:	nop
    5804:	ldr	w1, [sp, #52]
    5808:	ldr	x0, [sp, #40]
    580c:	bl	3cc4 <PyThread_free_lock@plt+0x1cb4>
    5810:	str	x0, [sp, #56]
    5814:	b	5824 <PyThread_free_lock@plt+0x3814>
    5818:	nop
    581c:	b	5824 <PyThread_free_lock@plt+0x3814>
    5820:	nop
    5824:	ldr	x0, [sp, #56]
    5828:	ldp	x29, x30, [sp], #64
    582c:	ret
    5830:	stp	x29, x30, [sp, #-32]!
    5834:	mov	x29, sp
    5838:	str	x0, [sp, #24]
    583c:	str	x1, [sp, #16]
    5840:	ldr	x0, [sp, #24]
    5844:	bl	4044 <PyThread_free_lock@plt+0x2034>
    5848:	ldp	x29, x30, [sp], #32
    584c:	ret
    5850:	stp	x29, x30, [sp, #-32]!
    5854:	mov	x29, sp
    5858:	str	x0, [sp, #24]
    585c:	str	x1, [sp, #16]
    5860:	ldr	x0, [sp, #24]
    5864:	bl	426c <PyThread_free_lock@plt+0x225c>
    5868:	ldp	x29, x30, [sp], #32
    586c:	ret
    5870:	stp	x29, x30, [sp, #-32]!
    5874:	mov	x29, sp
    5878:	str	x0, [sp, #24]
    587c:	str	x1, [sp, #16]
    5880:	ldr	x0, [sp, #24]
    5884:	bl	42a8 <PyThread_free_lock@plt+0x2298>
    5888:	ldp	x29, x30, [sp], #32
    588c:	ret
    5890:	stp	x29, x30, [sp, #-32]!
    5894:	mov	x29, sp
    5898:	str	x0, [sp, #24]
    589c:	str	x1, [sp, #16]
    58a0:	ldr	x0, [sp, #24]
    58a4:	bl	44d0 <PyThread_free_lock@plt+0x24c0>
    58a8:	ldp	x29, x30, [sp], #32
    58ac:	ret
    58b0:	stp	x29, x30, [sp, #-64]!
    58b4:	mov	x29, sp
    58b8:	str	x0, [sp, #40]
    58bc:	str	x1, [sp, #32]
    58c0:	str	x2, [sp, #24]
    58c4:	str	xzr, [sp, #56]
    58c8:	mov	x0, #0x4000                	// #16384
    58cc:	str	x0, [sp, #48]
    58d0:	ldr	x0, [sp, #24]
    58d4:	cmp	x0, #0x0
    58d8:	b.lt	58e8 <PyThread_free_lock@plt+0x38d8>  // b.tstop
    58dc:	ldr	x0, [sp, #24]
    58e0:	cmp	x0, #0x1
    58e4:	b.le	5908 <PyThread_free_lock@plt+0x38f8>
    58e8:	mov	x3, #0x1                   	// #1
    58ec:	mov	x2, #0x0                   	// #0
    58f0:	ldr	x1, [sp, #24]
    58f4:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    58f8:	add	x0, x0, #0x2b0
    58fc:	bl	1e80 <_PyArg_CheckPositional@plt>
    5900:	cmp	w0, #0x0
    5904:	b.eq	594c <PyThread_free_lock@plt+0x393c>  // b.none
    5908:	ldr	x0, [sp, #24]
    590c:	cmp	x0, #0x0
    5910:	b.le	5930 <PyThread_free_lock@plt+0x3920>
    5914:	ldr	x0, [sp, #32]
    5918:	ldr	x0, [x0]
    591c:	add	x1, sp, #0x30
    5920:	bl	2a74 <PyThread_free_lock@plt+0xa64>
    5924:	cmp	w0, #0x0
    5928:	b.eq	5954 <PyThread_free_lock@plt+0x3944>  // b.none
    592c:	b	5934 <PyThread_free_lock@plt+0x3924>
    5930:	nop
    5934:	ldr	x0, [sp, #48]
    5938:	mov	x1, x0
    593c:	ldr	x0, [sp, #40]
    5940:	bl	450c <PyThread_free_lock@plt+0x24fc>
    5944:	str	x0, [sp, #56]
    5948:	b	5958 <PyThread_free_lock@plt+0x3948>
    594c:	nop
    5950:	b	5958 <PyThread_free_lock@plt+0x3948>
    5954:	nop
    5958:	ldr	x0, [sp, #56]
    595c:	ldp	x29, x30, [sp], #64
    5960:	ret
    5964:	stp	x29, x30, [sp, #-144]!
    5968:	mov	x29, sp
    596c:	str	x0, [sp, #40]
    5970:	str	x1, [sp, #32]
    5974:	str	x2, [sp, #24]
    5978:	str	xzr, [sp, #136]
    597c:	stp	xzr, xzr, [sp, #48]
    5980:	stp	xzr, xzr, [sp, #64]
    5984:	stp	xzr, xzr, [sp, #80]
    5988:	stp	xzr, xzr, [sp, #96]
    598c:	stp	xzr, xzr, [sp, #112]
    5990:	mov	w0, #0x1                   	// #1
    5994:	str	w0, [sp, #132]
    5998:	ldr	x0, [sp, #24]
    599c:	cmp	x0, #0x0
    59a0:	b.le	59b0 <PyThread_free_lock@plt+0x39a0>
    59a4:	ldr	x0, [sp, #24]
    59a8:	cmp	x0, #0x2
    59ac:	b.le	59d0 <PyThread_free_lock@plt+0x39c0>
    59b0:	mov	x3, #0x2                   	// #2
    59b4:	mov	x2, #0x1                   	// #1
    59b8:	ldr	x1, [sp, #24]
    59bc:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    59c0:	add	x0, x0, #0x500
    59c4:	bl	1e80 <_PyArg_CheckPositional@plt>
    59c8:	cmp	w0, #0x0
    59cc:	b.eq	5af8 <PyThread_free_lock@plt+0x3ae8>  // b.none
    59d0:	ldr	x0, [sp, #32]
    59d4:	ldr	x0, [x0]
    59d8:	add	x1, sp, #0x30
    59dc:	mov	w2, #0x0                   	// #0
    59e0:	bl	1f30 <PyObject_GetBuffer@plt>
    59e4:	cmp	w0, #0x0
    59e8:	b.ne	5b00 <PyThread_free_lock@plt+0x3af0>  // b.any
    59ec:	add	x0, sp, #0x30
    59f0:	mov	w1, #0x43                  	// #67
    59f4:	bl	1d60 <PyBuffer_IsContiguous@plt>
    59f8:	cmp	w0, #0x0
    59fc:	b.ne	5a2c <PyThread_free_lock@plt+0x3a1c>  // b.any
    5a00:	ldr	x0, [sp, #32]
    5a04:	ldr	x0, [x0]
    5a08:	mov	x3, x0
    5a0c:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    5a10:	add	x2, x0, #0x718
    5a14:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    5a18:	add	x1, x0, #0x730
    5a1c:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    5a20:	add	x0, x0, #0x500
    5a24:	bl	1e30 <_PyArg_BadArgument@plt>
    5a28:	b	5b0c <PyThread_free_lock@plt+0x3afc>
    5a2c:	ldr	x0, [sp, #24]
    5a30:	cmp	x0, #0x1
    5a34:	b.le	5ad0 <PyThread_free_lock@plt+0x3ac0>
    5a38:	ldr	x0, [sp, #32]
    5a3c:	add	x0, x0, #0x8
    5a40:	ldr	x0, [x0]
    5a44:	ldr	x1, [x0, #8]
    5a48:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    5a4c:	ldr	x0, [x0, #4008]
    5a50:	cmp	x1, x0
    5a54:	b.eq	5a80 <PyThread_free_lock@plt+0x3a70>  // b.none
    5a58:	ldr	x0, [sp, #32]
    5a5c:	add	x0, x0, #0x8
    5a60:	ldr	x0, [x0]
    5a64:	ldr	x2, [x0, #8]
    5a68:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    5a6c:	ldr	x1, [x0, #4008]
    5a70:	mov	x0, x2
    5a74:	bl	1fd0 <PyType_IsSubtype@plt>
    5a78:	cmp	w0, #0x0
    5a7c:	b.eq	5aa0 <PyThread_free_lock@plt+0x3a90>  // b.none
    5a80:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    5a84:	ldr	x0, [x0, #4040]
    5a88:	ldr	x2, [x0]
    5a8c:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    5a90:	add	x1, x0, #0x750
    5a94:	mov	x0, x2
    5a98:	bl	1dc0 <PyErr_SetString@plt>
    5a9c:	b	5b0c <PyThread_free_lock@plt+0x3afc>
    5aa0:	ldr	x0, [sp, #32]
    5aa4:	add	x0, x0, #0x8
    5aa8:	ldr	x0, [x0]
    5aac:	bl	1e60 <PyLong_AsUnsignedLongMask@plt>
    5ab0:	str	w0, [sp, #132]
    5ab4:	ldr	w0, [sp, #132]
    5ab8:	cmn	w0, #0x1
    5abc:	b.ne	5ad8 <PyThread_free_lock@plt+0x3ac8>  // b.any
    5ac0:	bl	1eb0 <PyErr_Occurred@plt>
    5ac4:	cmp	x0, #0x0
    5ac8:	b.ne	5b08 <PyThread_free_lock@plt+0x3af8>  // b.any
    5acc:	b	5ad8 <PyThread_free_lock@plt+0x3ac8>
    5ad0:	nop
    5ad4:	b	5adc <PyThread_free_lock@plt+0x3acc>
    5ad8:	nop
    5adc:	add	x0, sp, #0x30
    5ae0:	ldr	w2, [sp, #132]
    5ae4:	mov	x1, x0
    5ae8:	ldr	x0, [sp, #40]
    5aec:	bl	5cf0 <PyThread_free_lock@plt+0x3ce0>
    5af0:	str	x0, [sp, #136]
    5af4:	b	5b0c <PyThread_free_lock@plt+0x3afc>
    5af8:	nop
    5afc:	b	5b0c <PyThread_free_lock@plt+0x3afc>
    5b00:	nop
    5b04:	b	5b0c <PyThread_free_lock@plt+0x3afc>
    5b08:	nop
    5b0c:	ldr	x0, [sp, #56]
    5b10:	cmp	x0, #0x0
    5b14:	b.eq	5b20 <PyThread_free_lock@plt+0x3b10>  // b.none
    5b18:	add	x0, sp, #0x30
    5b1c:	bl	1d20 <PyBuffer_Release@plt>
    5b20:	ldr	x0, [sp, #136]
    5b24:	ldp	x29, x30, [sp], #144
    5b28:	ret
    5b2c:	stp	x29, x30, [sp, #-144]!
    5b30:	mov	x29, sp
    5b34:	str	x0, [sp, #40]
    5b38:	str	x1, [sp, #32]
    5b3c:	str	x2, [sp, #24]
    5b40:	str	xzr, [sp, #136]
    5b44:	stp	xzr, xzr, [sp, #48]
    5b48:	stp	xzr, xzr, [sp, #64]
    5b4c:	stp	xzr, xzr, [sp, #80]
    5b50:	stp	xzr, xzr, [sp, #96]
    5b54:	stp	xzr, xzr, [sp, #112]
    5b58:	str	wzr, [sp, #132]
    5b5c:	ldr	x0, [sp, #24]
    5b60:	cmp	x0, #0x0
    5b64:	b.le	5b74 <PyThread_free_lock@plt+0x3b64>
    5b68:	ldr	x0, [sp, #24]
    5b6c:	cmp	x0, #0x2
    5b70:	b.le	5b94 <PyThread_free_lock@plt+0x3b84>
    5b74:	mov	x3, #0x2                   	// #2
    5b78:	mov	x2, #0x1                   	// #1
    5b7c:	ldr	x1, [sp, #24]
    5b80:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    5b84:	add	x0, x0, #0x5a8
    5b88:	bl	1e80 <_PyArg_CheckPositional@plt>
    5b8c:	cmp	w0, #0x0
    5b90:	b.eq	5cbc <PyThread_free_lock@plt+0x3cac>  // b.none
    5b94:	ldr	x0, [sp, #32]
    5b98:	ldr	x0, [x0]
    5b9c:	add	x1, sp, #0x30
    5ba0:	mov	w2, #0x0                   	// #0
    5ba4:	bl	1f30 <PyObject_GetBuffer@plt>
    5ba8:	cmp	w0, #0x0
    5bac:	b.ne	5cc4 <PyThread_free_lock@plt+0x3cb4>  // b.any
    5bb0:	add	x0, sp, #0x30
    5bb4:	mov	w1, #0x43                  	// #67
    5bb8:	bl	1d60 <PyBuffer_IsContiguous@plt>
    5bbc:	cmp	w0, #0x0
    5bc0:	b.ne	5bf0 <PyThread_free_lock@plt+0x3be0>  // b.any
    5bc4:	ldr	x0, [sp, #32]
    5bc8:	ldr	x0, [x0]
    5bcc:	mov	x3, x0
    5bd0:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    5bd4:	add	x2, x0, #0x718
    5bd8:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    5bdc:	add	x1, x0, #0x730
    5be0:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    5be4:	add	x0, x0, #0x5a8
    5be8:	bl	1e30 <_PyArg_BadArgument@plt>
    5bec:	b	5cd0 <PyThread_free_lock@plt+0x3cc0>
    5bf0:	ldr	x0, [sp, #24]
    5bf4:	cmp	x0, #0x1
    5bf8:	b.le	5c94 <PyThread_free_lock@plt+0x3c84>
    5bfc:	ldr	x0, [sp, #32]
    5c00:	add	x0, x0, #0x8
    5c04:	ldr	x0, [x0]
    5c08:	ldr	x1, [x0, #8]
    5c0c:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    5c10:	ldr	x0, [x0, #4008]
    5c14:	cmp	x1, x0
    5c18:	b.eq	5c44 <PyThread_free_lock@plt+0x3c34>  // b.none
    5c1c:	ldr	x0, [sp, #32]
    5c20:	add	x0, x0, #0x8
    5c24:	ldr	x0, [x0]
    5c28:	ldr	x2, [x0, #8]
    5c2c:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    5c30:	ldr	x1, [x0, #4008]
    5c34:	mov	x0, x2
    5c38:	bl	1fd0 <PyType_IsSubtype@plt>
    5c3c:	cmp	w0, #0x0
    5c40:	b.eq	5c64 <PyThread_free_lock@plt+0x3c54>  // b.none
    5c44:	adrp	x0, 18000 <PyInit_zlib@@Base+0x1213c>
    5c48:	ldr	x0, [x0, #4040]
    5c4c:	ldr	x2, [x0]
    5c50:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    5c54:	add	x1, x0, #0x750
    5c58:	mov	x0, x2
    5c5c:	bl	1dc0 <PyErr_SetString@plt>
    5c60:	b	5cd0 <PyThread_free_lock@plt+0x3cc0>
    5c64:	ldr	x0, [sp, #32]
    5c68:	add	x0, x0, #0x8
    5c6c:	ldr	x0, [x0]
    5c70:	bl	1e60 <PyLong_AsUnsignedLongMask@plt>
    5c74:	str	w0, [sp, #132]
    5c78:	ldr	w0, [sp, #132]
    5c7c:	cmn	w0, #0x1
    5c80:	b.ne	5c9c <PyThread_free_lock@plt+0x3c8c>  // b.any
    5c84:	bl	1eb0 <PyErr_Occurred@plt>
    5c88:	cmp	x0, #0x0
    5c8c:	b.ne	5ccc <PyThread_free_lock@plt+0x3cbc>  // b.any
    5c90:	b	5c9c <PyThread_free_lock@plt+0x3c8c>
    5c94:	nop
    5c98:	b	5ca0 <PyThread_free_lock@plt+0x3c90>
    5c9c:	nop
    5ca0:	add	x0, sp, #0x30
    5ca4:	ldr	w2, [sp, #132]
    5ca8:	mov	x1, x0
    5cac:	ldr	x0, [sp, #40]
    5cb0:	bl	5dd8 <PyThread_free_lock@plt+0x3dc8>
    5cb4:	str	x0, [sp, #136]
    5cb8:	b	5cd0 <PyThread_free_lock@plt+0x3cc0>
    5cbc:	nop
    5cc0:	b	5cd0 <PyThread_free_lock@plt+0x3cc0>
    5cc4:	nop
    5cc8:	b	5cd0 <PyThread_free_lock@plt+0x3cc0>
    5ccc:	nop
    5cd0:	ldr	x0, [sp, #56]
    5cd4:	cmp	x0, #0x0
    5cd8:	b.eq	5ce4 <PyThread_free_lock@plt+0x3cd4>  // b.none
    5cdc:	add	x0, sp, #0x30
    5ce0:	bl	1d20 <PyBuffer_Release@plt>
    5ce4:	ldr	x0, [sp, #136]
    5ce8:	ldp	x29, x30, [sp], #144
    5cec:	ret
    5cf0:	stp	x29, x30, [sp, #-80]!
    5cf4:	mov	x29, sp
    5cf8:	str	x0, [sp, #40]
    5cfc:	str	x1, [sp, #32]
    5d00:	str	w2, [sp, #28]
    5d04:	ldr	x0, [sp, #32]
    5d08:	ldr	x1, [x0, #16]
    5d0c:	mov	x0, #0x1400                	// #5120
    5d10:	cmp	x1, x0
    5d14:	b.le	5da4 <PyThread_free_lock@plt+0x3d94>
    5d18:	ldr	x0, [sp, #32]
    5d1c:	ldr	x0, [x0]
    5d20:	str	x0, [sp, #72]
    5d24:	ldr	x0, [sp, #32]
    5d28:	ldr	x0, [x0, #16]
    5d2c:	str	x0, [sp, #64]
    5d30:	bl	1fa0 <PyEval_SaveThread@plt>
    5d34:	str	x0, [sp, #56]
    5d38:	b	5d70 <PyThread_free_lock@plt+0x3d60>
    5d3c:	ldr	w0, [sp, #28]
    5d40:	mov	w2, #0xffffffff            	// #-1
    5d44:	ldr	x1, [sp, #72]
    5d48:	bl	1ee0 <adler32@plt>
    5d4c:	str	w0, [sp, #28]
    5d50:	ldr	x1, [sp, #72]
    5d54:	mov	x0, #0xffffffff            	// #4294967295
    5d58:	add	x0, x1, x0
    5d5c:	str	x0, [sp, #72]
    5d60:	ldr	x1, [sp, #64]
    5d64:	mov	x0, #0xffffffff00000001    	// #-4294967295
    5d68:	add	x0, x1, x0
    5d6c:	str	x0, [sp, #64]
    5d70:	ldr	x1, [sp, #64]
    5d74:	mov	x0, #0xffffffff            	// #4294967295
    5d78:	cmp	x1, x0
    5d7c:	b.hi	5d3c <PyThread_free_lock@plt+0x3d2c>  // b.pmore
    5d80:	ldr	w0, [sp, #28]
    5d84:	ldr	x1, [sp, #64]
    5d88:	mov	w2, w1
    5d8c:	ldr	x1, [sp, #72]
    5d90:	bl	1ee0 <adler32@plt>
    5d94:	str	w0, [sp, #28]
    5d98:	ldr	x0, [sp, #56]
    5d9c:	bl	1d10 <PyEval_RestoreThread@plt>
    5da0:	b	5dc8 <PyThread_free_lock@plt+0x3db8>
    5da4:	ldr	w3, [sp, #28]
    5da8:	ldr	x0, [sp, #32]
    5dac:	ldr	x1, [x0]
    5db0:	ldr	x0, [sp, #32]
    5db4:	ldr	x0, [x0, #16]
    5db8:	mov	w2, w0
    5dbc:	mov	x0, x3
    5dc0:	bl	1ee0 <adler32@plt>
    5dc4:	str	w0, [sp, #28]
    5dc8:	ldr	w0, [sp, #28]
    5dcc:	bl	1f50 <PyLong_FromUnsignedLong@plt>
    5dd0:	ldp	x29, x30, [sp], #80
    5dd4:	ret
    5dd8:	stp	x29, x30, [sp, #-80]!
    5ddc:	mov	x29, sp
    5de0:	str	x0, [sp, #40]
    5de4:	str	x1, [sp, #32]
    5de8:	str	w2, [sp, #28]
    5dec:	ldr	x0, [sp, #32]
    5df0:	ldr	x1, [x0, #16]
    5df4:	mov	x0, #0x1400                	// #5120
    5df8:	cmp	x1, x0
    5dfc:	b.le	5e8c <PyThread_free_lock@plt+0x3e7c>
    5e00:	ldr	x0, [sp, #32]
    5e04:	ldr	x0, [x0]
    5e08:	str	x0, [sp, #64]
    5e0c:	ldr	x0, [sp, #32]
    5e10:	ldr	x0, [x0, #16]
    5e14:	str	x0, [sp, #56]
    5e18:	bl	1fa0 <PyEval_SaveThread@plt>
    5e1c:	str	x0, [sp, #48]
    5e20:	b	5e58 <PyThread_free_lock@plt+0x3e48>
    5e24:	ldr	w0, [sp, #28]
    5e28:	mov	w2, #0xffffffff            	// #-1
    5e2c:	ldr	x1, [sp, #64]
    5e30:	bl	1d50 <crc32@plt>
    5e34:	str	w0, [sp, #28]
    5e38:	ldr	x1, [sp, #64]
    5e3c:	mov	x0, #0xffffffff            	// #4294967295
    5e40:	add	x0, x1, x0
    5e44:	str	x0, [sp, #64]
    5e48:	ldr	x1, [sp, #56]
    5e4c:	mov	x0, #0xffffffff00000001    	// #-4294967295
    5e50:	add	x0, x1, x0
    5e54:	str	x0, [sp, #56]
    5e58:	ldr	x1, [sp, #56]
    5e5c:	mov	x0, #0xffffffff            	// #4294967295
    5e60:	cmp	x1, x0
    5e64:	b.hi	5e24 <PyThread_free_lock@plt+0x3e14>  // b.pmore
    5e68:	ldr	w0, [sp, #28]
    5e6c:	ldr	x1, [sp, #56]
    5e70:	mov	w2, w1
    5e74:	ldr	x1, [sp, #64]
    5e78:	bl	1d50 <crc32@plt>
    5e7c:	str	w0, [sp, #76]
    5e80:	ldr	x0, [sp, #48]
    5e84:	bl	1d10 <PyEval_RestoreThread@plt>
    5e88:	b	5eb0 <PyThread_free_lock@plt+0x3ea0>
    5e8c:	ldr	w3, [sp, #28]
    5e90:	ldr	x0, [sp, #32]
    5e94:	ldr	x1, [x0]
    5e98:	ldr	x0, [sp, #32]
    5e9c:	ldr	x0, [x0, #16]
    5ea0:	mov	w2, w0
    5ea4:	mov	x0, x3
    5ea8:	bl	1d50 <crc32@plt>
    5eac:	str	w0, [sp, #76]
    5eb0:	ldr	w0, [sp, #76]
    5eb4:	mov	w0, w0
    5eb8:	bl	1f50 <PyLong_FromUnsignedLong@plt>
    5ebc:	ldp	x29, x30, [sp], #80
    5ec0:	ret

0000000000005ec4 <PyInit_zlib@@Base>:
    5ec4:	stp	x29, x30, [sp, #-32]!
    5ec8:	mov	x29, sp
    5ecc:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    5ed0:	add	x0, x0, #0x1b0
    5ed4:	bl	1e10 <PyType_Ready@plt>
    5ed8:	cmp	w0, #0x0
    5edc:	b.ge	5ee8 <PyInit_zlib@@Base+0x24>  // b.tcont
    5ee0:	mov	x0, #0x0                   	// #0
    5ee4:	b	619c <PyInit_zlib@@Base+0x2d8>
    5ee8:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    5eec:	add	x0, x0, #0x350
    5ef0:	bl	1e10 <PyType_Ready@plt>
    5ef4:	cmp	w0, #0x0
    5ef8:	b.ge	5f04 <PyInit_zlib@@Base+0x40>  // b.tcont
    5efc:	mov	x0, #0x0                   	// #0
    5f00:	b	619c <PyInit_zlib@@Base+0x2d8>
    5f04:	mov	w1, #0x3f5                 	// #1013
    5f08:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    5f0c:	add	x0, x0, #0x7f0
    5f10:	bl	1ec0 <PyModule_Create2@plt>
    5f14:	str	x0, [sp, #24]
    5f18:	ldr	x0, [sp, #24]
    5f1c:	cmp	x0, #0x0
    5f20:	b.ne	5f2c <PyInit_zlib@@Base+0x68>  // b.any
    5f24:	mov	x0, #0x0                   	// #0
    5f28:	b	619c <PyInit_zlib@@Base+0x2d8>
    5f2c:	mov	x2, #0x0                   	// #0
    5f30:	mov	x1, #0x0                   	// #0
    5f34:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    5f38:	add	x0, x0, #0x8b8
    5f3c:	bl	1e40 <PyErr_NewException@plt>
    5f40:	mov	x1, x0
    5f44:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    5f48:	add	x0, x0, #0x9a0
    5f4c:	str	x1, [x0]
    5f50:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    5f54:	add	x0, x0, #0x9a0
    5f58:	ldr	x0, [x0]
    5f5c:	cmp	x0, #0x0
    5f60:	b.eq	5f94 <PyInit_zlib@@Base+0xd0>  // b.none
    5f64:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    5f68:	add	x0, x0, #0x9a0
    5f6c:	ldr	x0, [x0]
    5f70:	bl	21b0 <PyThread_free_lock@plt+0x1a0>
    5f74:	adrp	x0, 19000 <PyInit_zlib@@Base+0x1313c>
    5f78:	add	x0, x0, #0x9a0
    5f7c:	ldr	x0, [x0]
    5f80:	mov	x2, x0
    5f84:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    5f88:	add	x1, x0, #0x8c8
    5f8c:	ldr	x0, [sp, #24]
    5f90:	bl	1fb0 <PyModule_AddObject@plt>
    5f94:	mov	x2, #0xf                   	// #15
    5f98:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    5f9c:	add	x1, x0, #0x8d0
    5fa0:	ldr	x0, [sp, #24]
    5fa4:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5fa8:	mov	x2, #0x8                   	// #8
    5fac:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    5fb0:	add	x1, x0, #0x8e0
    5fb4:	ldr	x0, [sp, #24]
    5fb8:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5fbc:	mov	x2, #0x8                   	// #8
    5fc0:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    5fc4:	add	x1, x0, #0x8f0
    5fc8:	ldr	x0, [sp, #24]
    5fcc:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5fd0:	mov	x2, #0x4000                	// #16384
    5fd4:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    5fd8:	add	x1, x0, #0x900
    5fdc:	ldr	x0, [sp, #24]
    5fe0:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5fe4:	mov	x2, #0x0                   	// #0
    5fe8:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    5fec:	add	x1, x0, #0x910
    5ff0:	ldr	x0, [sp, #24]
    5ff4:	bl	1ce0 <PyModule_AddIntConstant@plt>
    5ff8:	mov	x2, #0x1                   	// #1
    5ffc:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    6000:	add	x1, x0, #0x928
    6004:	ldr	x0, [sp, #24]
    6008:	bl	1ce0 <PyModule_AddIntConstant@plt>
    600c:	mov	x2, #0x9                   	// #9
    6010:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    6014:	add	x1, x0, #0x938
    6018:	ldr	x0, [sp, #24]
    601c:	bl	1ce0 <PyModule_AddIntConstant@plt>
    6020:	mov	x2, #0xffffffffffffffff    	// #-1
    6024:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    6028:	add	x1, x0, #0x950
    602c:	ldr	x0, [sp, #24]
    6030:	bl	1ce0 <PyModule_AddIntConstant@plt>
    6034:	mov	x2, #0x1                   	// #1
    6038:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    603c:	add	x1, x0, #0x968
    6040:	ldr	x0, [sp, #24]
    6044:	bl	1ce0 <PyModule_AddIntConstant@plt>
    6048:	mov	x2, #0x2                   	// #2
    604c:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    6050:	add	x1, x0, #0x978
    6054:	ldr	x0, [sp, #24]
    6058:	bl	1ce0 <PyModule_AddIntConstant@plt>
    605c:	mov	x2, #0x3                   	// #3
    6060:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    6064:	add	x1, x0, #0x988
    6068:	ldr	x0, [sp, #24]
    606c:	bl	1ce0 <PyModule_AddIntConstant@plt>
    6070:	mov	x2, #0x4                   	// #4
    6074:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    6078:	add	x1, x0, #0x990
    607c:	ldr	x0, [sp, #24]
    6080:	bl	1ce0 <PyModule_AddIntConstant@plt>
    6084:	mov	x2, #0x0                   	// #0
    6088:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    608c:	add	x1, x0, #0x998
    6090:	ldr	x0, [sp, #24]
    6094:	bl	1ce0 <PyModule_AddIntConstant@plt>
    6098:	mov	x2, #0x0                   	// #0
    609c:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    60a0:	add	x1, x0, #0x9b0
    60a4:	ldr	x0, [sp, #24]
    60a8:	bl	1ce0 <PyModule_AddIntConstant@plt>
    60ac:	mov	x2, #0x1                   	// #1
    60b0:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    60b4:	add	x1, x0, #0x9c0
    60b8:	ldr	x0, [sp, #24]
    60bc:	bl	1ce0 <PyModule_AddIntConstant@plt>
    60c0:	mov	x2, #0x2                   	// #2
    60c4:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    60c8:	add	x1, x0, #0x9d0
    60cc:	ldr	x0, [sp, #24]
    60d0:	bl	1ce0 <PyModule_AddIntConstant@plt>
    60d4:	mov	x2, #0x3                   	// #3
    60d8:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    60dc:	add	x1, x0, #0x9e0
    60e0:	ldr	x0, [sp, #24]
    60e4:	bl	1ce0 <PyModule_AddIntConstant@plt>
    60e8:	mov	x2, #0x4                   	// #4
    60ec:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    60f0:	add	x1, x0, #0x9f0
    60f4:	ldr	x0, [sp, #24]
    60f8:	bl	1ce0 <PyModule_AddIntConstant@plt>
    60fc:	mov	x2, #0x5                   	// #5
    6100:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    6104:	add	x1, x0, #0xa00
    6108:	ldr	x0, [sp, #24]
    610c:	bl	1ce0 <PyModule_AddIntConstant@plt>
    6110:	mov	x2, #0x6                   	// #6
    6114:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    6118:	add	x1, x0, #0xa08
    611c:	ldr	x0, [sp, #24]
    6120:	bl	1ce0 <PyModule_AddIntConstant@plt>
    6124:	adrp	x0, 6000 <PyInit_zlib@@Base+0x13c>
    6128:	add	x0, x0, #0x2e0
    612c:	bl	1f70 <PyUnicode_FromString@plt>
    6130:	str	x0, [sp, #16]
    6134:	ldr	x0, [sp, #16]
    6138:	cmp	x0, #0x0
    613c:	b.eq	6154 <PyInit_zlib@@Base+0x290>  // b.none
    6140:	ldr	x2, [sp, #16]
    6144:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    6148:	add	x1, x0, #0xa10
    614c:	ldr	x0, [sp, #24]
    6150:	bl	1fb0 <PyModule_AddObject@plt>
    6154:	bl	1fc0 <zlibVersion@plt>
    6158:	bl	1f70 <PyUnicode_FromString@plt>
    615c:	str	x0, [sp, #16]
    6160:	ldr	x0, [sp, #16]
    6164:	cmp	x0, #0x0
    6168:	b.eq	6180 <PyInit_zlib@@Base+0x2bc>  // b.none
    616c:	ldr	x2, [sp, #16]
    6170:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    6174:	add	x1, x0, #0xa20
    6178:	ldr	x0, [sp, #24]
    617c:	bl	1fb0 <PyModule_AddObject@plt>
    6180:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    6184:	add	x2, x0, #0xa38
    6188:	adrp	x0, 7000 <PyInit_zlib@@Base+0x113c>
    618c:	add	x1, x0, #0xa40
    6190:	ldr	x0, [sp, #24]
    6194:	bl	1f90 <PyModule_AddStringConstant@plt>
    6198:	ldr	x0, [sp, #24]
    619c:	ldp	x29, x30, [sp], #32
    61a0:	ret

Disassembly of section .fini:

00000000000061a4 <.fini>:
    61a4:	stp	x29, x30, [sp, #-16]!
    61a8:	mov	x29, sp
    61ac:	ldp	x29, x30, [sp], #16
    61b0:	ret
