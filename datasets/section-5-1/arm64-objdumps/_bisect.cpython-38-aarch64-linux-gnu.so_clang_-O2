
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_bisect.cpython-38-aarch64-linux-gnu.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b30 <.init>:
 b30:	stp	x29, x30, [sp, #-16]!
 b34:	mov	x29, sp
 b38:	bl	c30 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x10>
 b3c:	ldp	x29, x30, [sp], #16
 b40:	ret

Disassembly of section .plt:

0000000000000b50 <PyList_Insert@plt-0x20>:
 b50:	stp	x16, x30, [sp, #-16]!
 b54:	adrp	x16, 11000 <PyInit__bisect@@Base+0x102fc>
 b58:	ldr	x17, [x16, #4088]
 b5c:	add	x16, x16, #0xff8
 b60:	br	x17
 b64:	nop
 b68:	nop
 b6c:	nop

0000000000000b70 <PyList_Insert@plt>:
 b70:	adrp	x16, 12000 <PyList_Insert>
 b74:	ldr	x17, [x16]
 b78:	add	x16, x16, #0x0
 b7c:	br	x17

0000000000000b80 <__cxa_finalize@plt>:
 b80:	adrp	x16, 12000 <PyList_Insert>
 b84:	ldr	x17, [x16, #8]
 b88:	add	x16, x16, #0x8
 b8c:	br	x17

0000000000000b90 <_Py_Dealloc@plt>:
 b90:	adrp	x16, 12000 <PyList_Insert>
 b94:	ldr	x17, [x16, #16]
 b98:	add	x16, x16, #0x10
 b9c:	br	x17

0000000000000ba0 <PyErr_SetString@plt>:
 ba0:	adrp	x16, 12000 <PyList_Insert>
 ba4:	ldr	x17, [x16, #24]
 ba8:	add	x16, x16, #0x18
 bac:	br	x17

0000000000000bb0 <PySequence_GetItem@plt>:
 bb0:	adrp	x16, 12000 <PyList_Insert>
 bb4:	ldr	x17, [x16, #32]
 bb8:	add	x16, x16, #0x20
 bbc:	br	x17

0000000000000bc0 <PyLong_FromSsize_t@plt>:
 bc0:	adrp	x16, 12000 <PyList_Insert>
 bc4:	ldr	x17, [x16, #40]
 bc8:	add	x16, x16, #0x28
 bcc:	br	x17

0000000000000bd0 <PyObject_RichCompareBool@plt>:
 bd0:	adrp	x16, 12000 <PyList_Insert>
 bd4:	ldr	x17, [x16, #48]
 bd8:	add	x16, x16, #0x30
 bdc:	br	x17

0000000000000be0 <PySequence_Size@plt>:
 be0:	adrp	x16, 12000 <PyList_Insert>
 be4:	ldr	x17, [x16, #56]
 be8:	add	x16, x16, #0x38
 bec:	br	x17

0000000000000bf0 <__gmon_start__@plt>:
 bf0:	adrp	x16, 12000 <PyList_Insert>
 bf4:	ldr	x17, [x16, #64]
 bf8:	add	x16, x16, #0x40
 bfc:	br	x17

0000000000000c00 <PyModule_Create2@plt>:
 c00:	adrp	x16, 12000 <PyList_Insert>
 c04:	ldr	x17, [x16, #72]
 c08:	add	x16, x16, #0x48
 c0c:	br	x17

0000000000000c10 <_PyObject_CallMethodId_SizeT@plt>:
 c10:	adrp	x16, 12000 <PyList_Insert>
 c14:	ldr	x17, [x16, #80]
 c18:	add	x16, x16, #0x50
 c1c:	br	x17

0000000000000c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
 c20:	adrp	x16, 12000 <PyList_Insert>
 c24:	ldr	x17, [x16, #88]
 c28:	add	x16, x16, #0x58
 c2c:	br	x17

Disassembly of section .text:

0000000000000c30 <PyInit__bisect@@Base-0xd4>:
     c30:	adrp	x0, 11000 <PyInit__bisect@@Base+0x102fc>
     c34:	ldr	x0, [x0, #4040]
     c38:	cbz	x0, c40 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x20>
     c3c:	b	bf0 <__gmon_start__@plt>
     c40:	ret
     c44:	nop
     c48:	adrp	x0, 12000 <PyInit__bisect@@Base+0x112fc>
     c4c:	add	x0, x0, #0x228
     c50:	adrp	x1, 12000 <PyInit__bisect@@Base+0x112fc>
     c54:	add	x1, x1, #0x228
     c58:	cmp	x1, x0
     c5c:	b.eq	c74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x54>  // b.none
     c60:	adrp	x1, 11000 <PyInit__bisect@@Base+0x102fc>
     c64:	ldr	x1, [x1, #4016]
     c68:	cbz	x1, c74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x54>
     c6c:	mov	x16, x1
     c70:	br	x16
     c74:	ret
     c78:	adrp	x0, 12000 <PyInit__bisect@@Base+0x112fc>
     c7c:	add	x0, x0, #0x228
     c80:	adrp	x1, 12000 <PyInit__bisect@@Base+0x112fc>
     c84:	add	x1, x1, #0x228
     c88:	sub	x1, x1, x0
     c8c:	lsr	x2, x1, #63
     c90:	add	x1, x2, x1, asr #3
     c94:	cmp	xzr, x1, asr #1
     c98:	asr	x1, x1, #1
     c9c:	b.eq	cb4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x94>  // b.none
     ca0:	adrp	x2, 11000 <PyInit__bisect@@Base+0x102fc>
     ca4:	ldr	x2, [x2, #4056]
     ca8:	cbz	x2, cb4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x94>
     cac:	mov	x16, x2
     cb0:	br	x16
     cb4:	ret
     cb8:	stp	x29, x30, [sp, #-32]!
     cbc:	mov	x29, sp
     cc0:	str	x19, [sp, #16]
     cc4:	adrp	x19, 12000 <PyInit__bisect@@Base+0x112fc>
     cc8:	ldrb	w0, [x19, #552]
     ccc:	cbnz	w0, cf4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xd4>
     cd0:	adrp	x0, 11000 <PyInit__bisect@@Base+0x102fc>
     cd4:	ldr	x0, [x0, #4024]
     cd8:	cbz	x0, ce8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xc8>
     cdc:	adrp	x0, 12000 <PyInit__bisect@@Base+0x112fc>
     ce0:	ldr	x0, [x0, #96]
     ce4:	bl	b80 <__cxa_finalize@plt>
     ce8:	bl	c48 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x28>
     cec:	mov	w0, #0x1                   	// #1
     cf0:	strb	w0, [x19, #552]
     cf4:	ldr	x19, [sp, #16]
     cf8:	ldp	x29, x30, [sp], #32
     cfc:	ret
     d00:	b	c78 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x58>

0000000000000d04 <PyInit__bisect@@Base>:
     d04:	adrp	x0, 12000 <PyInit__bisect@@Base+0x112fc>
     d08:	add	x0, x0, #0x68
     d0c:	mov	w1, #0x3f5                 	// #1013
     d10:	b	c00 <PyModule_Create2@plt>
     d14:	sub	sp, sp, #0x70
     d18:	stp	x29, x30, [sp, #32]
     d1c:	str	x25, [sp, #48]
     d20:	stp	x24, x23, [sp, #64]
     d24:	stp	x22, x21, [sp, #80]
     d28:	stp	x20, x19, [sp, #96]
     d2c:	add	x29, sp, #0x20
     d30:	mov	x8, #0xffffffffffffffff    	// #-1
     d34:	stp	x8, xzr, [sp, #8]
     d38:	cbnz	x2, d5c <PyInit__bisect@@Base+0x58>
     d3c:	ldr	x8, [x1, #16]
     d40:	cmp	x8, #0x2
     d44:	b.ne	d5c <PyInit__bisect@@Base+0x58>  // b.any
     d48:	ldp	x20, x21, [x1, #24]
     d4c:	mov	x19, xzr
     d50:	str	x20, [x29, #24]
     d54:	stur	x21, [x29, #-8]
     d58:	b	dac <PyInit__bisect@@Base+0xa8>
     d5c:	adrp	x8, 1000 <PyInit__bisect@@Base+0x2fc>
     d60:	add	x8, x8, #0x366
     d64:	adrp	x3, 12000 <PyInit__bisect@@Base+0x112fc>
     d68:	add	x3, x3, #0x170
     d6c:	add	x4, x29, #0x18
     d70:	sub	x5, x29, #0x8
     d74:	add	x6, sp, #0x10
     d78:	add	x7, sp, #0x8
     d7c:	mov	x0, x1
     d80:	mov	x1, x2
     d84:	mov	x2, x8
     d88:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
     d8c:	cbz	w0, e4c <PyInit__bisect@@Base+0x148>
     d90:	ldr	x19, [sp, #16]
     d94:	tbnz	x19, #63, e34 <PyInit__bisect@@Base+0x130>
     d98:	ldr	x22, [sp, #8]
     d9c:	ldr	x20, [x29, #24]
     da0:	ldur	x21, [x29, #-8]
     da4:	cmn	x22, #0x1
     da8:	b.ne	dbc <PyInit__bisect@@Base+0xb8>  // b.any
     dac:	mov	x0, x20
     db0:	bl	be0 <PySequence_Size@plt>
     db4:	mov	x22, x0
     db8:	tbnz	x0, #63, e4c <PyInit__bisect@@Base+0x148>
     dbc:	cmp	x22, x19
     dc0:	b.le	e28 <PyInit__bisect@@Base+0x124>
     dc4:	add	x8, x22, x19
     dc8:	lsr	x23, x8, #1
     dcc:	mov	x0, x20
     dd0:	mov	x1, x23
     dd4:	bl	bb0 <PySequence_GetItem@plt>
     dd8:	cbz	x0, e50 <PyInit__bisect@@Base+0x14c>
     ddc:	mov	x24, x0
     de0:	mov	x0, x21
     de4:	mov	x1, x24
     de8:	mov	w2, wzr
     dec:	bl	bd0 <PyObject_RichCompareBool@plt>
     df0:	ldr	x8, [x24]
     df4:	mov	w25, w0
     df8:	subs	x8, x8, #0x1
     dfc:	str	x8, [x24]
     e00:	b.ne	e0c <PyInit__bisect@@Base+0x108>  // b.any
     e04:	mov	x0, x24
     e08:	bl	b90 <_Py_Dealloc@plt>
     e0c:	tbnz	w25, #31, e4c <PyInit__bisect@@Base+0x148>
     e10:	cmp	w25, #0x0
     e14:	csel	x22, x22, x23, eq  // eq = none
     e18:	csinc	x19, x19, x23, ne  // ne = any
     e1c:	cmp	x19, x22
     e20:	b.lt	dc4 <PyInit__bisect@@Base+0xc0>  // b.tstop
     e24:	tbnz	x19, #63, e4c <PyInit__bisect@@Base+0x148>
     e28:	mov	x0, x19
     e2c:	bl	bc0 <PyLong_FromSsize_t@plt>
     e30:	b	e50 <PyInit__bisect@@Base+0x14c>
     e34:	adrp	x8, 11000 <PyInit__bisect@@Base+0x102fc>
     e38:	ldr	x8, [x8, #4032]
     e3c:	adrp	x1, 1000 <PyInit__bisect@@Base+0x2fc>
     e40:	add	x1, x1, #0x379
     e44:	ldr	x0, [x8]
     e48:	bl	ba0 <PyErr_SetString@plt>
     e4c:	mov	x0, xzr
     e50:	ldp	x20, x19, [sp, #96]
     e54:	ldp	x22, x21, [sp, #80]
     e58:	ldp	x24, x23, [sp, #64]
     e5c:	ldr	x25, [sp, #48]
     e60:	ldp	x29, x30, [sp, #32]
     e64:	add	sp, sp, #0x70
     e68:	ret
     e6c:	sub	sp, sp, #0x70
     e70:	stp	x29, x30, [sp, #32]
     e74:	str	x25, [sp, #48]
     e78:	stp	x24, x23, [sp, #64]
     e7c:	stp	x22, x21, [sp, #80]
     e80:	stp	x20, x19, [sp, #96]
     e84:	add	x29, sp, #0x20
     e88:	mov	x8, #0xffffffffffffffff    	// #-1
     e8c:	stp	x8, xzr, [sp, #8]
     e90:	cbnz	x2, eb4 <PyInit__bisect@@Base+0x1b0>
     e94:	ldr	x8, [x1, #16]
     e98:	cmp	x8, #0x2
     e9c:	b.ne	eb4 <PyInit__bisect@@Base+0x1b0>  // b.any
     ea0:	ldp	x20, x21, [x1, #24]
     ea4:	mov	x19, xzr
     ea8:	str	x20, [x29, #24]
     eac:	stur	x21, [x29, #-8]
     eb0:	b	f04 <PyInit__bisect@@Base+0x200>
     eb4:	adrp	x8, 1000 <PyInit__bisect@@Base+0x2fc>
     eb8:	add	x8, x8, #0x391
     ebc:	adrp	x3, 12000 <PyInit__bisect@@Base+0x112fc>
     ec0:	add	x3, x3, #0x198
     ec4:	add	x4, x29, #0x18
     ec8:	sub	x5, x29, #0x8
     ecc:	add	x6, sp, #0x10
     ed0:	add	x7, sp, #0x8
     ed4:	mov	x0, x1
     ed8:	mov	x1, x2
     edc:	mov	x2, x8
     ee0:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
     ee4:	cbz	w0, fe8 <PyInit__bisect@@Base+0x2e4>
     ee8:	ldr	x19, [sp, #16]
     eec:	tbnz	x19, #63, fd0 <PyInit__bisect@@Base+0x2cc>
     ef0:	ldr	x22, [sp, #8]
     ef4:	ldr	x20, [x29, #24]
     ef8:	ldur	x21, [x29, #-8]
     efc:	cmn	x22, #0x1
     f00:	b.ne	f14 <PyInit__bisect@@Base+0x210>  // b.any
     f04:	mov	x0, x20
     f08:	bl	be0 <PySequence_Size@plt>
     f0c:	mov	x22, x0
     f10:	tbnz	x0, #63, fe8 <PyInit__bisect@@Base+0x2e4>
     f14:	cmp	x22, x19
     f18:	b.le	f80 <PyInit__bisect@@Base+0x27c>
     f1c:	add	x8, x22, x19
     f20:	lsr	x23, x8, #1
     f24:	mov	x0, x20
     f28:	mov	x1, x23
     f2c:	bl	bb0 <PySequence_GetItem@plt>
     f30:	cbz	x0, fec <PyInit__bisect@@Base+0x2e8>
     f34:	mov	x24, x0
     f38:	mov	x0, x21
     f3c:	mov	x1, x24
     f40:	mov	w2, wzr
     f44:	bl	bd0 <PyObject_RichCompareBool@plt>
     f48:	ldr	x8, [x24]
     f4c:	mov	w25, w0
     f50:	subs	x8, x8, #0x1
     f54:	str	x8, [x24]
     f58:	b.ne	f64 <PyInit__bisect@@Base+0x260>  // b.any
     f5c:	mov	x0, x24
     f60:	bl	b90 <_Py_Dealloc@plt>
     f64:	tbnz	w25, #31, fe8 <PyInit__bisect@@Base+0x2e4>
     f68:	cmp	w25, #0x0
     f6c:	csel	x22, x22, x23, eq  // eq = none
     f70:	csinc	x19, x19, x23, ne  // ne = any
     f74:	cmp	x19, x22
     f78:	b.lt	f1c <PyInit__bisect@@Base+0x218>  // b.tstop
     f7c:	tbnz	x19, #63, fe8 <PyInit__bisect@@Base+0x2e4>
     f80:	ldr	x0, [x29, #24]
     f84:	adrp	x9, 11000 <PyInit__bisect@@Base+0x102fc>
     f88:	ldur	x4, [x29, #-8]
     f8c:	ldr	x8, [x0, #8]
     f90:	ldr	x9, [x9, #4064]
     f94:	cmp	x8, x9
     f98:	b.eq	1008 <PyInit__bisect@@Base+0x304>  // b.none
     f9c:	adrp	x1, 12000 <PyInit__bisect@@Base+0x112fc>
     fa0:	adrp	x2, 1000 <PyInit__bisect@@Base+0x2fc>
     fa4:	add	x1, x1, #0x1c0
     fa8:	add	x2, x2, #0x3a4
     fac:	mov	x3, x19
     fb0:	bl	c10 <_PyObject_CallMethodId_SizeT@plt>
     fb4:	cbz	x0, fec <PyInit__bisect@@Base+0x2e8>
     fb8:	ldr	x8, [x0]
     fbc:	subs	x8, x8, #0x1
     fc0:	str	x8, [x0]
     fc4:	b.ne	1018 <PyInit__bisect@@Base+0x314>  // b.any
     fc8:	bl	b90 <_Py_Dealloc@plt>
     fcc:	b	1018 <PyInit__bisect@@Base+0x314>
     fd0:	adrp	x8, 11000 <PyInit__bisect@@Base+0x102fc>
     fd4:	ldr	x8, [x8, #4032]
     fd8:	adrp	x1, 1000 <PyInit__bisect@@Base+0x2fc>
     fdc:	add	x1, x1, #0x379
     fe0:	ldr	x0, [x8]
     fe4:	bl	ba0 <PyErr_SetString@plt>
     fe8:	mov	x0, xzr
     fec:	ldp	x20, x19, [sp, #96]
     ff0:	ldp	x22, x21, [sp, #80]
     ff4:	ldp	x24, x23, [sp, #64]
     ff8:	ldr	x25, [sp, #48]
     ffc:	ldp	x29, x30, [sp, #32]
    1000:	add	sp, sp, #0x70
    1004:	ret
    1008:	mov	x1, x19
    100c:	mov	x2, x4
    1010:	bl	b70 <PyList_Insert@plt>
    1014:	tbnz	w0, #31, fe8 <PyInit__bisect@@Base+0x2e4>
    1018:	adrp	x0, 11000 <PyInit__bisect@@Base+0x102fc>
    101c:	ldr	x0, [x0, #4048]
    1020:	ldr	x8, [x0]
    1024:	add	x8, x8, #0x1
    1028:	str	x8, [x0]
    102c:	b	fec <PyInit__bisect@@Base+0x2e8>
    1030:	sub	sp, sp, #0x70
    1034:	stp	x29, x30, [sp, #32]
    1038:	str	x25, [sp, #48]
    103c:	stp	x24, x23, [sp, #64]
    1040:	stp	x22, x21, [sp, #80]
    1044:	stp	x20, x19, [sp, #96]
    1048:	add	x29, sp, #0x20
    104c:	mov	x8, #0xffffffffffffffff    	// #-1
    1050:	stp	x8, xzr, [sp, #8]
    1054:	cbnz	x2, 1078 <PyInit__bisect@@Base+0x374>
    1058:	ldr	x8, [x1, #16]
    105c:	cmp	x8, #0x2
    1060:	b.ne	1078 <PyInit__bisect@@Base+0x374>  // b.any
    1064:	ldp	x20, x21, [x1, #24]
    1068:	mov	x19, xzr
    106c:	str	x20, [x29, #24]
    1070:	stur	x21, [x29, #-8]
    1074:	b	10c8 <PyInit__bisect@@Base+0x3c4>
    1078:	adrp	x8, 1000 <PyInit__bisect@@Base+0x2fc>
    107c:	add	x8, x8, #0x3ae
    1080:	adrp	x3, 12000 <PyInit__bisect@@Base+0x112fc>
    1084:	add	x3, x3, #0x1d8
    1088:	add	x4, x29, #0x18
    108c:	sub	x5, x29, #0x8
    1090:	add	x6, sp, #0x10
    1094:	add	x7, sp, #0x8
    1098:	mov	x0, x1
    109c:	mov	x1, x2
    10a0:	mov	x2, x8
    10a4:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    10a8:	cbz	w0, 1164 <PyInit__bisect@@Base+0x460>
    10ac:	ldr	x19, [sp, #16]
    10b0:	tbnz	x19, #63, 114c <PyInit__bisect@@Base+0x448>
    10b4:	ldr	x22, [sp, #8]
    10b8:	ldr	x20, [x29, #24]
    10bc:	ldur	x21, [x29, #-8]
    10c0:	cmn	x22, #0x1
    10c4:	b.ne	10d8 <PyInit__bisect@@Base+0x3d4>  // b.any
    10c8:	mov	x0, x20
    10cc:	bl	be0 <PySequence_Size@plt>
    10d0:	mov	x22, x0
    10d4:	tbnz	x0, #63, 1164 <PyInit__bisect@@Base+0x460>
    10d8:	cmp	x22, x19
    10dc:	b.le	1140 <PyInit__bisect@@Base+0x43c>
    10e0:	add	x8, x22, x19
    10e4:	lsr	x23, x8, #1
    10e8:	mov	x0, x20
    10ec:	mov	x1, x23
    10f0:	bl	bb0 <PySequence_GetItem@plt>
    10f4:	cbz	x0, 1168 <PyInit__bisect@@Base+0x464>
    10f8:	mov	x1, x21
    10fc:	mov	w2, wzr
    1100:	mov	x24, x0
    1104:	bl	bd0 <PyObject_RichCompareBool@plt>
    1108:	ldr	x8, [x24]
    110c:	mov	w25, w0
    1110:	subs	x8, x8, #0x1
    1114:	str	x8, [x24]
    1118:	b.ne	1124 <PyInit__bisect@@Base+0x420>  // b.any
    111c:	mov	x0, x24
    1120:	bl	b90 <_Py_Dealloc@plt>
    1124:	tbnz	w25, #31, 1164 <PyInit__bisect@@Base+0x460>
    1128:	cmp	w25, #0x0
    112c:	csel	x22, x23, x22, eq  // eq = none
    1130:	csinc	x19, x19, x23, eq  // eq = none
    1134:	cmp	x19, x22
    1138:	b.lt	10e0 <PyInit__bisect@@Base+0x3dc>  // b.tstop
    113c:	tbnz	x19, #63, 1164 <PyInit__bisect@@Base+0x460>
    1140:	mov	x0, x19
    1144:	bl	bc0 <PyLong_FromSsize_t@plt>
    1148:	b	1168 <PyInit__bisect@@Base+0x464>
    114c:	adrp	x8, 11000 <PyInit__bisect@@Base+0x102fc>
    1150:	ldr	x8, [x8, #4032]
    1154:	adrp	x1, 1000 <PyInit__bisect@@Base+0x2fc>
    1158:	add	x1, x1, #0x379
    115c:	ldr	x0, [x8]
    1160:	bl	ba0 <PyErr_SetString@plt>
    1164:	mov	x0, xzr
    1168:	ldp	x20, x19, [sp, #96]
    116c:	ldp	x22, x21, [sp, #80]
    1170:	ldp	x24, x23, [sp, #64]
    1174:	ldr	x25, [sp, #48]
    1178:	ldp	x29, x30, [sp, #32]
    117c:	add	sp, sp, #0x70
    1180:	ret
    1184:	sub	sp, sp, #0x70
    1188:	stp	x29, x30, [sp, #32]
    118c:	str	x25, [sp, #48]
    1190:	stp	x24, x23, [sp, #64]
    1194:	stp	x22, x21, [sp, #80]
    1198:	stp	x20, x19, [sp, #96]
    119c:	add	x29, sp, #0x20
    11a0:	mov	x8, #0xffffffffffffffff    	// #-1
    11a4:	stp	x8, xzr, [sp, #8]
    11a8:	cbnz	x2, 11cc <PyInit__bisect@@Base+0x4c8>
    11ac:	ldr	x8, [x1, #16]
    11b0:	cmp	x8, #0x2
    11b4:	b.ne	11cc <PyInit__bisect@@Base+0x4c8>  // b.any
    11b8:	ldp	x20, x21, [x1, #24]
    11bc:	mov	x19, xzr
    11c0:	str	x20, [x29, #24]
    11c4:	stur	x21, [x29, #-8]
    11c8:	b	121c <PyInit__bisect@@Base+0x518>
    11cc:	adrp	x8, 1000 <PyInit__bisect@@Base+0x2fc>
    11d0:	add	x8, x8, #0x3c0
    11d4:	adrp	x3, 12000 <PyInit__bisect@@Base+0x112fc>
    11d8:	add	x3, x3, #0x200
    11dc:	add	x4, x29, #0x18
    11e0:	sub	x5, x29, #0x8
    11e4:	add	x6, sp, #0x10
    11e8:	add	x7, sp, #0x8
    11ec:	mov	x0, x1
    11f0:	mov	x1, x2
    11f4:	mov	x2, x8
    11f8:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    11fc:	cbz	w0, 12fc <PyInit__bisect@@Base+0x5f8>
    1200:	ldr	x19, [sp, #16]
    1204:	tbnz	x19, #63, 12e4 <PyInit__bisect@@Base+0x5e0>
    1208:	ldr	x22, [sp, #8]
    120c:	ldr	x20, [x29, #24]
    1210:	ldur	x21, [x29, #-8]
    1214:	cmn	x22, #0x1
    1218:	b.ne	122c <PyInit__bisect@@Base+0x528>  // b.any
    121c:	mov	x0, x20
    1220:	bl	be0 <PySequence_Size@plt>
    1224:	mov	x22, x0
    1228:	tbnz	x0, #63, 12fc <PyInit__bisect@@Base+0x5f8>
    122c:	cmp	x22, x19
    1230:	b.le	1294 <PyInit__bisect@@Base+0x590>
    1234:	add	x8, x22, x19
    1238:	lsr	x23, x8, #1
    123c:	mov	x0, x20
    1240:	mov	x1, x23
    1244:	bl	bb0 <PySequence_GetItem@plt>
    1248:	cbz	x0, 1300 <PyInit__bisect@@Base+0x5fc>
    124c:	mov	x1, x21
    1250:	mov	w2, wzr
    1254:	mov	x24, x0
    1258:	bl	bd0 <PyObject_RichCompareBool@plt>
    125c:	ldr	x8, [x24]
    1260:	mov	w25, w0
    1264:	subs	x8, x8, #0x1
    1268:	str	x8, [x24]
    126c:	b.ne	1278 <PyInit__bisect@@Base+0x574>  // b.any
    1270:	mov	x0, x24
    1274:	bl	b90 <_Py_Dealloc@plt>
    1278:	tbnz	w25, #31, 12fc <PyInit__bisect@@Base+0x5f8>
    127c:	cmp	w25, #0x0
    1280:	csel	x22, x23, x22, eq  // eq = none
    1284:	csinc	x19, x19, x23, eq  // eq = none
    1288:	cmp	x19, x22
    128c:	b.lt	1234 <PyInit__bisect@@Base+0x530>  // b.tstop
    1290:	tbnz	x19, #63, 12fc <PyInit__bisect@@Base+0x5f8>
    1294:	ldr	x0, [x29, #24]
    1298:	adrp	x9, 11000 <PyInit__bisect@@Base+0x102fc>
    129c:	ldur	x4, [x29, #-8]
    12a0:	ldr	x8, [x0, #8]
    12a4:	ldr	x9, [x9, #4064]
    12a8:	cmp	x8, x9
    12ac:	b.eq	131c <PyInit__bisect@@Base+0x618>  // b.none
    12b0:	adrp	x1, 12000 <PyInit__bisect@@Base+0x112fc>
    12b4:	adrp	x2, 1000 <PyInit__bisect@@Base+0x2fc>
    12b8:	add	x1, x1, #0x1c0
    12bc:	add	x2, x2, #0x3a4
    12c0:	mov	x3, x19
    12c4:	bl	c10 <_PyObject_CallMethodId_SizeT@plt>
    12c8:	cbz	x0, 1300 <PyInit__bisect@@Base+0x5fc>
    12cc:	ldr	x8, [x0]
    12d0:	subs	x8, x8, #0x1
    12d4:	str	x8, [x0]
    12d8:	b.ne	132c <PyInit__bisect@@Base+0x628>  // b.any
    12dc:	bl	b90 <_Py_Dealloc@plt>
    12e0:	b	132c <PyInit__bisect@@Base+0x628>
    12e4:	adrp	x8, 11000 <PyInit__bisect@@Base+0x102fc>
    12e8:	ldr	x8, [x8, #4032]
    12ec:	adrp	x1, 1000 <PyInit__bisect@@Base+0x2fc>
    12f0:	add	x1, x1, #0x379
    12f4:	ldr	x0, [x8]
    12f8:	bl	ba0 <PyErr_SetString@plt>
    12fc:	mov	x0, xzr
    1300:	ldp	x20, x19, [sp, #96]
    1304:	ldp	x22, x21, [sp, #80]
    1308:	ldp	x24, x23, [sp, #64]
    130c:	ldr	x25, [sp, #48]
    1310:	ldp	x29, x30, [sp, #32]
    1314:	add	sp, sp, #0x70
    1318:	ret
    131c:	mov	x1, x19
    1320:	mov	x2, x4
    1324:	bl	b70 <PyList_Insert@plt>
    1328:	tbnz	w0, #31, 12fc <PyInit__bisect@@Base+0x5f8>
    132c:	adrp	x0, 11000 <PyInit__bisect@@Base+0x102fc>
    1330:	ldr	x0, [x0, #4048]
    1334:	ldr	x8, [x0]
    1338:	add	x8, x8, #0x1
    133c:	str	x8, [x0]
    1340:	b	1300 <PyInit__bisect@@Base+0x5fc>

Disassembly of section .fini:

0000000000001344 <.fini>:
    1344:	stp	x29, x30, [sp, #-16]!
    1348:	mov	x29, sp
    134c:	ldp	x29, x30, [sp], #16
    1350:	ret
