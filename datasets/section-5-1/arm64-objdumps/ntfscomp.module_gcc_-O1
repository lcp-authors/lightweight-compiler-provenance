
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ntfscomp.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <decomp_nextvcn>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w0, [x0, #8]
  14:	ldr	w1, [x19, #12]
  18:	cmp	w0, w1
  1c:	b.ge	9c <decomp_nextvcn+0x9c>  // b.tcont
  20:	add	x0, x19, w0, sxtw #3
  24:	ldr	w1, [x19, #152]
  28:	add	w2, w1, #0x9
  2c:	mov	w3, #0x1                   	// #1
  30:	lsl	w3, w3, w2
  34:	ldr	w2, [x0, #20]
  38:	ldr	w4, [x19, #148]
  3c:	add	w2, w2, w4
  40:	ldr	w0, [x0, #16]
  44:	sub	w0, w2, w0
  48:	ldr	x4, [x19, #160]
  4c:	sxtw	x3, w3
  50:	mov	x2, #0x0                   	// #0
  54:	lsl	w1, w0, w1
  58:	ldr	x0, [x19]
  5c:	bl	0 <grub_disk_read>
  60:	cbnz	w0, b0 <decomp_nextvcn+0xb0>
  64:	ldr	w1, [x19, #148]
  68:	add	w1, w1, #0x1
  6c:	str	w1, [x19, #148]
  70:	ldr	w2, [x19, #8]
  74:	add	x3, x19, w2, sxtw #3
  78:	ldr	w3, [x3, #16]
  7c:	cmp	w1, w3
  80:	b.cc	8c <decomp_nextvcn+0x8c>  // b.lo, b.ul, b.last
  84:	add	w2, w2, #0x1
  88:	str	w2, [x19, #8]
  8c:	str	wzr, [x19, #144]
  90:	ldr	x19, [sp, #16]
  94:	ldp	x29, x30, [sp], #32
  98:	ret
  9c:	adrp	x0, 0 <decomp_nextvcn>
  a0:	ldr	x1, [x0]
  a4:	mov	w0, #0x9                   	// #9
  a8:	bl	0 <grub_error>
  ac:	b	90 <decomp_nextvcn+0x90>
  b0:	adrp	x0, 0 <decomp_nextvcn>
  b4:	ldr	x0, [x0]
  b8:	ldr	w0, [x0]
  bc:	b	90 <decomp_nextvcn+0x90>
	...

00000000000000d0 <decomp_getch>:
  d0:	stp	x29, x30, [sp, #-32]!
  d4:	mov	x29, sp
  d8:	stp	x19, x20, [sp, #16]
  dc:	mov	x19, x0
  e0:	mov	x20, x1
  e4:	ldr	w0, [x0, #152]
  e8:	add	w2, w0, #0x9
  ec:	ldr	w0, [x19, #144]
  f0:	lsr	w0, w0, w2
  f4:	cbnz	w0, 120 <decomp_getch+0x50>
  f8:	ldr	x1, [x19, #160]
  fc:	ldr	w0, [x19, #144]
 100:	add	w2, w0, #0x1
 104:	str	w2, [x19, #144]
 108:	ldrb	w0, [x1, w0, uxtw]
 10c:	strb	w0, [x20]
 110:	mov	w0, #0x0                   	// #0
 114:	ldp	x19, x20, [sp, #16]
 118:	ldp	x29, x30, [sp], #32
 11c:	ret
 120:	mov	x0, x19
 124:	bl	0 <decomp_nextvcn>
 128:	cbz	w0, f8 <decomp_getch+0x28>
 12c:	adrp	x0, 0 <decomp_nextvcn>
 130:	ldr	x0, [x0]
 134:	ldr	w0, [x0]
 138:	b	114 <decomp_getch+0x44>
 13c:	nop
	...

0000000000000148 <decomp_get16>:
 148:	stp	x29, x30, [sp, #-48]!
 14c:	mov	x29, sp
 150:	stp	x19, x20, [sp, #16]
 154:	mov	x19, x0
 158:	mov	x20, x1
 15c:	strb	wzr, [sp, #47]
 160:	strb	wzr, [sp, #46]
 164:	add	x1, sp, #0x2f
 168:	bl	d0 <decomp_getch>
 16c:	cbz	w0, 188 <decomp_get16+0x40>
 170:	adrp	x0, 0 <decomp_nextvcn>
 174:	ldr	x0, [x0]
 178:	ldr	w0, [x0]
 17c:	ldp	x19, x20, [sp, #16]
 180:	ldp	x29, x30, [sp], #48
 184:	ret
 188:	add	x1, sp, #0x2e
 18c:	mov	x0, x19
 190:	bl	d0 <decomp_getch>
 194:	cbnz	w0, 170 <decomp_get16+0x28>
 198:	ldrb	w1, [sp, #46]
 19c:	ubfiz	w1, w1, #8, #8
 1a0:	ldrb	w2, [sp, #47]
 1a4:	add	w1, w1, w2
 1a8:	strh	w1, [x20]
 1ac:	b	17c <decomp_get16+0x34>
	...

00000000000001b8 <read_block>:
 1b8:	stp	x29, x30, [sp, #-128]!
 1bc:	mov	x29, sp
 1c0:	stp	x19, x20, [sp, #16]
 1c4:	stp	x23, x24, [sp, #48]
 1c8:	stp	x27, x28, [sp, #80]
 1cc:	mov	x19, x0
 1d0:	mov	x23, x1
 1d4:	mov	x27, x2
 1d8:	ldr	w0, [x0, #208]
 1dc:	mov	w1, #0x3                   	// #3
 1e0:	sub	w0, w1, w0
 1e4:	str	w0, [sp, #108]
 1e8:	cbz	x2, 7f0 <read_block+0x638>
 1ec:	stp	x21, x22, [sp, #32]
 1f0:	b	2b8 <read_block+0x100>
 1f4:	adrp	x0, 0 <decomp_nextvcn>
 1f8:	ldr	x1, [x0]
 1fc:	mov	w0, #0x9                   	// #9
 200:	bl	0 <grub_error>
 204:	ldp	x21, x22, [sp, #32]
 208:	b	368 <read_block+0x1b0>
 20c:	mov	x0, x19
 210:	bl	0 <grub_ntfs_read_run_list>
 214:	cbz	w0, 308 <read_block+0x150>
 218:	adrp	x0, 0 <decomp_nextvcn>
 21c:	ldr	x0, [x0]
 220:	ldr	w0, [x0]
 224:	ldp	x21, x22, [sp, #32]
 228:	b	368 <read_block+0x1b0>
 22c:	ldr	x0, [x19, #8]
 230:	and	w1, w0, #0xf
 234:	mov	w22, #0x10                  	// #16
 238:	sub	w22, w22, w1
 23c:	ldrb	w1, [sp, #108]
 240:	lsr	w22, w22, w1
 244:	cmp	x22, x27
 248:	csel	x22, x22, x27, ls  // ls = plast
 24c:	sub	x27, x27, x22
 250:	ldr	w1, [x19]
 254:	tbz	w1, #0, 648 <read_block+0x490>
 258:	ldrb	w1, [sp, #108]
 25c:	lsl	x1, x22, x1
 260:	add	x0, x1, x0
 264:	str	x0, [x19, #8]
 268:	ldr	w0, [x19, #68]
 26c:	cbnz	w0, 37c <read_block+0x1c4>
 270:	cbz	x23, 2b4 <read_block+0xfc>
 274:	lsl	x20, x22, #12
 278:	mov	x2, x20
 27c:	mov	w1, #0x0                   	// #0
 280:	mov	x0, x23
 284:	bl	0 <grub_memset>
 288:	add	x23, x23, x20
 28c:	adrp	x0, 0 <decomp_nextvcn>
 290:	ldr	x0, [x0]
 294:	ldr	x4, [x0]
 298:	cbz	x4, 2b4 <read_block+0xfc>
 29c:	ldr	x3, [x19, #224]
 2a0:	cbz	x3, 2b4 <read_block+0xfc>
 2a4:	lsl	w2, w22, #12
 2a8:	mov	w1, #0x0                   	// #0
 2ac:	mov	x0, #0x0                   	// #0
 2b0:	blr	x4
 2b4:	cbz	x27, 7e4 <read_block+0x62c>
 2b8:	ldr	x0, [x19, #8]
 2bc:	tst	x0, #0xf
 2c0:	b.ne	22c <read_block+0x74>  // b.any
 2c4:	ldr	w2, [x19, #64]
 2c8:	ldr	w1, [x19, #68]
 2cc:	cmp	w2, w1
 2d0:	b.eq	2dc <read_block+0x124>  // b.none
 2d4:	ldr	w1, [x19]
 2d8:	tbz	w1, #0, 1f4 <read_block+0x3c>
 2dc:	str	wzr, [x19, #68]
 2e0:	str	wzr, [x19, #64]
 2e4:	str	w0, [x19, #204]
 2e8:	ldr	w1, [x19, #208]
 2ec:	add	w2, w1, #0x9
 2f0:	mov	w1, #0x1                   	// #1
 2f4:	lsl	w1, w1, w2
 2f8:	str	w1, [x19, #200]
 2fc:	ldr	x1, [x19, #24]
 300:	cmp	x0, x1
 304:	b.cs	20c <read_block+0x54>  // b.hs, b.nlast
 308:	ldr	x0, [x19, #8]
 30c:	ldr	x2, [x19, #24]
 310:	add	x1, x0, #0x10
 314:	cmp	x1, x2
 318:	b.ls	22c <read_block+0x74>  // b.plast
 31c:	ldr	w1, [x19]
 320:	tbnz	w1, #0, 7f8 <read_block+0x640>
 324:	ldr	w1, [x19, #68]
 328:	add	x3, x19, w1, sxtw #3
 32c:	str	w2, [x3, #72]
 330:	ldr	x0, [x19, #32]
 334:	add	w0, w0, w2
 338:	ldr	x2, [x19, #16]
 33c:	sub	w0, w0, w2
 340:	str	w0, [x3, #76]
 344:	add	w1, w1, #0x1
 348:	str	w1, [x19, #68]
 34c:	mov	x0, x19
 350:	bl	0 <grub_ntfs_read_run_list>
 354:	cbz	w0, 308 <read_block+0x150>
 358:	adrp	x0, 0 <decomp_nextvcn>
 35c:	ldr	x0, [x0]
 360:	ldr	w0, [x0]
 364:	ldp	x21, x22, [sp, #32]
 368:	ldp	x19, x20, [sp, #16]
 36c:	ldp	x23, x24, [sp, #48]
 370:	ldp	x27, x28, [sp, #80]
 374:	ldp	x29, x30, [sp], #128
 378:	ret
 37c:	cbz	x22, 2b4 <read_block+0xfc>
 380:	stp	x25, x26, [sp, #64]
 384:	b	5f0 <read_block+0x438>
 388:	adrp	x0, 0 <decomp_nextvcn>
 38c:	ldr	x0, [x0]
 390:	ldr	w0, [x0]
 394:	cbz	w0, 5b8 <read_block+0x400>
 398:	adrp	x0, 0 <decomp_nextvcn>
 39c:	ldr	x0, [x0]
 3a0:	ldr	w0, [x0]
 3a4:	ldp	x21, x22, [sp, #32]
 3a8:	ldp	x25, x26, [sp, #64]
 3ac:	b	368 <read_block+0x1b0>
 3b0:	mov	x24, x23
 3b4:	b	628 <read_block+0x470>
 3b8:	strb	wzr, [sp, #123]
 3bc:	mov	w24, w25
 3c0:	mov	w20, w25
 3c4:	b	43c <read_block+0x284>
 3c8:	adrp	x0, 0 <decomp_nextvcn>
 3cc:	ldr	x1, [x0]
 3d0:	mov	w0, #0x9                   	// #9
 3d4:	bl	0 <grub_error>
 3d8:	mov	w25, w0
 3dc:	b	544 <read_block+0x38c>
 3e0:	adrp	x0, 0 <decomp_nextvcn>
 3e4:	ldr	x0, [x0]
 3e8:	ldr	w25, [x0]
 3ec:	b	544 <read_block+0x38c>
 3f0:	ldrb	w0, [sp, #123]
 3f4:	tbnz	w0, #0, 464 <read_block+0x2ac>
 3f8:	strb	wzr, [sp, #126]
 3fc:	add	x1, sp, #0x7e
 400:	mov	x0, x26
 404:	bl	d0 <decomp_getch>
 408:	cbnz	w0, 518 <read_block+0x360>
 40c:	ldrb	w0, [sp, #126]
 410:	strb	w0, [x23, w20, uxtw]
 414:	sub	w21, w21, #0x1
 418:	and	w21, w21, #0xffff
 41c:	add	w20, w20, #0x1
 420:	ldrb	w0, [sp, #123]
 424:	lsr	w0, w0, #1
 428:	strb	w0, [sp, #123]
 42c:	sub	w24, w24, #0x1
 430:	cbz	w21, 544 <read_block+0x38c>
 434:	cmp	w20, #0x1, lsl #12
 438:	b.hi	3c8 <read_block+0x210>  // b.pmore
 43c:	cbnz	w24, 3f0 <read_block+0x238>
 440:	add	x1, sp, #0x7b
 444:	mov	x0, x26
 448:	bl	d0 <decomp_getch>
 44c:	cbnz	w0, 3e0 <read_block+0x228>
 450:	sub	w21, w21, #0x1
 454:	ands	w21, w21, #0xffff
 458:	b.eq	528 <read_block+0x370>  // b.none
 45c:	mov	w24, #0x8                   	// #8
 460:	b	3f0 <read_block+0x238>
 464:	strh	wzr, [sp, #126]
 468:	add	x1, sp, #0x7e
 46c:	mov	x0, x26
 470:	bl	148 <decomp_get16>
 474:	cbnz	w0, 4e4 <read_block+0x32c>
 478:	ldrh	w3, [sp, #126]
 47c:	sub	w21, w21, #0x2
 480:	and	w21, w21, #0xffff
 484:	cbz	w20, 4f4 <read_block+0x33c>
 488:	sub	w1, w20, #0x1
 48c:	cmp	w1, #0xf
 490:	b.ls	50c <read_block+0x354>  // b.plast
 494:	mov	w0, #0xc                   	// #12
 498:	mov	w2, #0xfff                 	// #4095
 49c:	lsr	w2, w2, #1
 4a0:	sub	w0, w0, #0x1
 4a4:	lsr	w1, w1, #1
 4a8:	cmp	w1, #0xf
 4ac:	b.hi	49c <read_block+0x2e4>  // b.pmore
 4b0:	lsr	w0, w3, w0
 4b4:	and	w2, w3, w2
 4b8:	add	w1, w20, #0x3
 4bc:	add	w2, w2, w1
 4c0:	mvn	w0, w0
 4c4:	add	w1, w0, w20
 4c8:	ldrb	w1, [x23, w1, uxtw]
 4cc:	strb	w1, [x23, w20, uxtw]
 4d0:	add	w20, w20, #0x1
 4d4:	cmp	w2, w20
 4d8:	b.ne	4c4 <read_block+0x30c>  // b.any
 4dc:	mov	w20, w2
 4e0:	b	420 <read_block+0x268>
 4e4:	adrp	x0, 0 <decomp_nextvcn>
 4e8:	ldr	x0, [x0]
 4ec:	ldr	w25, [x0]
 4f0:	b	544 <read_block+0x38c>
 4f4:	adrp	x0, 0 <decomp_nextvcn>
 4f8:	ldr	x1, [x0]
 4fc:	mov	w0, #0x9                   	// #9
 500:	bl	0 <grub_error>
 504:	mov	w25, w20
 508:	b	544 <read_block+0x38c>
 50c:	mov	w0, #0xc                   	// #12
 510:	mov	w2, #0xfff                 	// #4095
 514:	b	4b0 <read_block+0x2f8>
 518:	adrp	x0, 0 <decomp_nextvcn>
 51c:	ldr	x0, [x0]
 520:	ldr	w25, [x0]
 524:	b	544 <read_block+0x38c>
 528:	mov	w25, w0
 52c:	b	544 <read_block+0x38c>
 530:	adrp	x0, 0 <decomp_nextvcn>
 534:	ldr	x1, [x0]
 538:	mov	w0, #0x9                   	// #9
 53c:	bl	0 <grub_error>
 540:	mov	w25, w0
 544:	cbz	w25, 5bc <read_block+0x404>
 548:	b	398 <read_block+0x1e0>
 54c:	sxtw	x25, w20
 550:	ldr	x0, [x19, #216]
 554:	mov	x2, x25
 558:	add	x1, x0, w1, uxtw
 55c:	mov	x0, x24
 560:	bl	0 <grub_memmove>
 564:	add	x24, x24, x25
 568:	b	5a0 <read_block+0x3e8>
 56c:	mov	x0, x26
 570:	bl	0 <decomp_nextvcn>
 574:	cbnz	w0, 630 <read_block+0x478>
 578:	ldr	w1, [x19, #200]
 57c:	ldr	w20, [x19, #208]
 580:	add	w20, w20, #0x9
 584:	lsl	w20, w28, w20
 588:	sub	w20, w20, w1
 58c:	cmp	w21, w20
 590:	csel	w20, w21, w20, le
 594:	cmp	x24, #0x0
 598:	ccmp	w20, #0x0, #0x4, ne  // ne = any
 59c:	b.ne	54c <read_block+0x394>  // b.any
 5a0:	sub	w21, w21, w20
 5a4:	ldr	w0, [x19, #200]
 5a8:	add	w20, w0, w20
 5ac:	str	w20, [x19, #200]
 5b0:	ands	w21, w21, #0xffff
 5b4:	b.ne	56c <read_block+0x3b4>  // b.any
 5b8:	cbz	x23, 5c0 <read_block+0x408>
 5bc:	add	x23, x23, #0x1, lsl #12
 5c0:	adrp	x0, 0 <decomp_nextvcn>
 5c4:	ldr	x0, [x0]
 5c8:	ldr	x4, [x0]
 5cc:	cbz	x4, 5e8 <read_block+0x430>
 5d0:	ldr	x3, [x19, #224]
 5d4:	cbz	x3, 5e8 <read_block+0x430>
 5d8:	mov	w2, #0x1000                	// #4096
 5dc:	mov	w1, #0x0                   	// #0
 5e0:	mov	x0, #0x0                   	// #0
 5e4:	blr	x4
 5e8:	subs	x22, x22, #0x1
 5ec:	b.eq	640 <read_block+0x488>  // b.none
 5f0:	add	x26, x19, #0x38
 5f4:	add	x1, sp, #0x7c
 5f8:	mov	x0, x26
 5fc:	bl	148 <decomp_get16>
 600:	mov	w25, w0
 604:	cbnz	w0, 388 <read_block+0x1d0>
 608:	ldrh	w0, [sp, #124]
 60c:	and	w21, w0, #0xfff
 610:	add	w21, w21, #0x1
 614:	cbz	x23, 3b0 <read_block+0x1f8>
 618:	tbnz	w0, #15, 3b8 <read_block+0x200>
 61c:	mov	x24, x23
 620:	cmp	w21, #0x1, lsl #12
 624:	b.ne	530 <read_block+0x378>  // b.any
 628:	mov	w28, #0x1                   	// #1
 62c:	b	578 <read_block+0x3c0>
 630:	adrp	x0, 0 <decomp_nextvcn>
 634:	ldr	x0, [x0]
 638:	ldr	w0, [x0]
 63c:	b	394 <read_block+0x1dc>
 640:	ldp	x25, x26, [sp, #64]
 644:	b	2b4 <read_block+0xfc>
 648:	ldrb	w0, [sp, #108]
 64c:	lsl	x22, x22, x0
 650:	ldr	w0, [x19, #64]
 654:	ldr	w1, [x19, #68]
 658:	cmp	x22, #0x0
 65c:	ccmp	w0, w1, #0x0, ne  // ne = any
 660:	b.ge	74c <read_block+0x594>  // b.tcont
 664:	adrp	x21, 0 <decomp_nextvcn>
 668:	b	6c8 <read_block+0x510>
 66c:	adrp	x0, 0 <decomp_nextvcn>
 670:	ldr	x0, [x0]
 674:	ldr	w0, [x0]
 678:	ldp	x21, x22, [sp, #32]
 67c:	b	368 <read_block+0x1b0>
 680:	ldr	w0, [x19, #208]
 684:	add	w0, w0, #0x9
 688:	lsl	x0, x20, x0
 68c:	add	x23, x23, x0
 690:	sub	x22, x22, x20
 694:	ldr	w0, [x19, #64]
 698:	add	x1, x19, w0, sxtw #3
 69c:	ldr	w1, [x1, #72]
 6a0:	ldr	x2, [x19, #8]
 6a4:	cmp	x2, x1
 6a8:	b.cc	6b4 <read_block+0x4fc>  // b.lo, b.ul, b.last
 6ac:	add	w0, w0, #0x1
 6b0:	str	w0, [x19, #64]
 6b4:	ldr	w0, [x19, #64]
 6b8:	ldr	w1, [x19, #68]
 6bc:	cmp	x22, #0x0
 6c0:	ccmp	w0, w1, #0x0, ne  // ne = any
 6c4:	b.ge	74c <read_block+0x594>  // b.tcont
 6c8:	add	x0, x19, w0, sxtw #3
 6cc:	ldr	w2, [x0, #72]
 6d0:	ldr	x1, [x19, #8]
 6d4:	sub	x20, x2, x1
 6d8:	cmp	x20, x22
 6dc:	csel	x20, x20, x22, ls  // ls = plast
 6e0:	add	x1, x1, x20
 6e4:	str	x1, [x19, #8]
 6e8:	cbz	x23, 690 <read_block+0x4d8>
 6ec:	ldr	w5, [x19, #208]
 6f0:	add	w3, w5, #0x9
 6f4:	ldr	w0, [x0, #76]
 6f8:	sub	x0, x0, x2
 6fc:	add	x1, x0, x1
 700:	mov	x4, x23
 704:	lsl	x3, x20, x3
 708:	mov	x2, #0x0                   	// #0
 70c:	lsl	x1, x1, x5
 710:	ldr	x0, [x19, #56]
 714:	bl	0 <grub_disk_read>
 718:	cbnz	w0, 66c <read_block+0x4b4>
 71c:	ldr	x0, [x21]
 720:	ldr	x4, [x0]
 724:	cbz	x4, 680 <read_block+0x4c8>
 728:	ldr	x3, [x19, #224]
 72c:	cbz	x3, 680 <read_block+0x4c8>
 730:	ldr	w2, [x19, #208]
 734:	add	w2, w2, #0x9
 738:	lsl	x2, x20, x2
 73c:	mov	w1, #0x0                   	// #0
 740:	mov	x0, #0x0                   	// #0
 744:	blr	x4
 748:	b	680 <read_block+0x4c8>
 74c:	cbz	x22, 2b4 <read_block+0xfc>
 750:	cbz	x23, 7c0 <read_block+0x608>
 754:	ldr	w1, [x19, #208]
 758:	add	w3, w1, #0x9
 75c:	ldr	x0, [x19, #8]
 760:	ldr	x2, [x19, #32]
 764:	add	x0, x0, x2
 768:	ldr	x2, [x19, #16]
 76c:	sub	x0, x0, x2
 770:	mov	x4, x23
 774:	lsl	x3, x22, x3
 778:	mov	x2, #0x0                   	// #0
 77c:	lsl	x1, x0, x1
 780:	ldr	x0, [x19, #56]
 784:	bl	0 <grub_disk_read>
 788:	cbnz	w0, 7d0 <read_block+0x618>
 78c:	ldr	w2, [x19, #208]
 790:	add	w2, w2, #0x9
 794:	lsl	x2, x22, x2
 798:	add	x23, x23, x2
 79c:	adrp	x0, 0 <decomp_nextvcn>
 7a0:	ldr	x0, [x0]
 7a4:	ldr	x4, [x0]
 7a8:	cbz	x4, 7c0 <read_block+0x608>
 7ac:	ldr	x3, [x19, #224]
 7b0:	cbz	x3, 7c0 <read_block+0x608>
 7b4:	mov	w1, #0x0                   	// #0
 7b8:	mov	x0, #0x0                   	// #0
 7bc:	blr	x4
 7c0:	ldr	x0, [x19, #8]
 7c4:	add	x22, x0, x22
 7c8:	str	x22, [x19, #8]
 7cc:	b	2b4 <read_block+0xfc>
 7d0:	adrp	x0, 0 <decomp_nextvcn>
 7d4:	ldr	x0, [x0]
 7d8:	ldr	w0, [x0]
 7dc:	ldp	x21, x22, [sp, #32]
 7e0:	b	368 <read_block+0x1b0>
 7e4:	mov	w0, #0x0                   	// #0
 7e8:	ldp	x21, x22, [sp, #32]
 7ec:	b	368 <read_block+0x1b0>
 7f0:	mov	w0, #0x0                   	// #0
 7f4:	b	368 <read_block+0x1b0>
 7f8:	and	w1, w0, #0xf
 7fc:	mov	w22, #0x10                  	// #16
 800:	sub	w22, w22, w1
 804:	ldrb	w1, [sp, #108]
 808:	lsr	w22, w22, w1
 80c:	cmp	x22, x27
 810:	csel	x22, x22, x27, ls  // ls = plast
 814:	sub	x27, x27, x22
 818:	b	258 <read_block+0xa0>
 81c:	nop
	...

0000000000000850 <ntfscomp>:
 850:	stp	x29, x30, [sp, #-80]!
 854:	mov	x29, sp
 858:	stp	x19, x20, [sp, #16]
 85c:	stp	x21, x22, [sp, #32]
 860:	stp	x23, x24, [sp, #48]
 864:	mov	x23, x0
 868:	mov	x21, x1
 86c:	mov	x22, x2
 870:	mov	x19, x3
 874:	ldr	x20, [x3, #48]
 878:	ldr	x1, [x20, #56]
 87c:	cbz	x1, 960 <ntfscomp+0x110>
 880:	ldr	w0, [x20, #48]
 884:	and	x2, x21, #0xfffffffffffff000
 888:	cmp	x2, x0
 88c:	b.eq	8f0 <ntfscomp+0xa0>  // b.none
 890:	ldr	w0, [x19, #208]
 894:	mov	w20, #0x8                   	// #8
 898:	asr	w20, w20, w0
 89c:	sxtw	x20, w20
 8a0:	lsr	x0, x21, #12
 8a4:	mul	x20, x20, x0
 8a8:	and	x0, x20, #0xfffffffffffffff0
 8ac:	str	x0, [x19, #8]
 8b0:	ldr	x4, [x19, #24]
 8b4:	ldr	x3, [x19, #8]
 8b8:	cmp	x4, x3
 8bc:	b.hi	994 <ntfscomp+0x144>  // b.pmore
 8c0:	mov	x0, x19
 8c4:	bl	0 <grub_ntfs_read_run_list>
 8c8:	cbz	w0, 8b0 <ntfscomp+0x60>
 8cc:	adrp	x0, 0 <decomp_nextvcn>
 8d0:	ldr	x0, [x0]
 8d4:	ldr	w20, [x0]
 8d8:	mov	w0, w20
 8dc:	ldp	x19, x20, [sp, #16]
 8e0:	ldp	x21, x22, [sp, #32]
 8e4:	ldp	x23, x24, [sp, #48]
 8e8:	ldp	x29, x30, [sp], #80
 8ec:	ret
 8f0:	stp	x25, x26, [sp, #64]
 8f4:	sub	x24, x0, x21
 8f8:	add	x24, x24, #0x1, lsl #12
 8fc:	cmp	x22, x24
 900:	csel	x25, x22, x24, ls  // ls = plast
 904:	sub	x0, x21, x0
 908:	mov	x2, x25
 90c:	add	x1, x1, x0
 910:	mov	x0, x23
 914:	bl	0 <grub_memmove>
 918:	adrp	x0, 0 <decomp_nextvcn>
 91c:	ldr	x0, [x0]
 920:	ldr	x4, [x0]
 924:	cbz	x4, 940 <ntfscomp+0xf0>
 928:	ldr	x3, [x19, #224]
 92c:	cbz	x3, 940 <ntfscomp+0xf0>
 930:	mov	w2, w25
 934:	mov	w1, #0x0                   	// #0
 938:	mov	x0, #0x0                   	// #0
 93c:	blr	x4
 940:	mov	w20, #0x0                   	// #0
 944:	cmp	x22, x24
 948:	b.ls	bc8 <ntfscomp+0x378>  // b.plast
 94c:	add	x23, x23, x25
 950:	sub	x22, x22, x25
 954:	add	x21, x21, x25
 958:	ldp	x25, x26, [sp, #64]
 95c:	b	890 <ntfscomp+0x40>
 960:	mov	x0, #0x1000                	// #4096
 964:	bl	0 <grub_malloc>
 968:	str	x0, [x20, #56]
 96c:	ldr	x0, [x19, #48]
 970:	ldr	x1, [x0, #56]
 974:	cbz	x1, 984 <ntfscomp+0x134>
 978:	mov	w1, #0x1                   	// #1
 97c:	str	w1, [x0, #48]
 980:	b	890 <ntfscomp+0x40>
 984:	adrp	x0, 0 <decomp_nextvcn>
 988:	ldr	x0, [x0]
 98c:	ldr	w20, [x0]
 990:	b	8d8 <ntfscomp+0x88>
 994:	str	wzr, [x19, #68]
 998:	str	wzr, [x19, #64]
 99c:	ldr	w0, [x19, #208]
 9a0:	add	w1, w0, #0x9
 9a4:	mov	w0, #0x1                   	// #1
 9a8:	lsl	w0, w0, w1
 9ac:	sxtw	x0, w0
 9b0:	bl	0 <grub_malloc>
 9b4:	str	x0, [x19, #216]
 9b8:	cbz	x0, bc0 <ntfscomp+0x370>
 9bc:	ldr	x0, [x19, #8]
 9c0:	cmp	x20, x0
 9c4:	b.hi	ab8 <ntfscomp+0x268>  // b.pmore
 9c8:	tst	x21, #0xfff
 9cc:	b.eq	a88 <ntfscomp+0x238>  // b.none
 9d0:	stp	x25, x26, [sp, #64]
 9d4:	ldr	x26, [x19, #224]
 9d8:	str	xzr, [x19, #224]
 9dc:	ldr	x24, [x19, #8]
 9e0:	ldr	w25, [x19, #208]
 9e4:	ldr	x0, [x19, #48]
 9e8:	mov	x2, #0x1                   	// #1
 9ec:	ldr	x1, [x0, #56]
 9f0:	mov	x0, x19
 9f4:	bl	1b8 <read_block>
 9f8:	mov	w20, w0
 9fc:	cbnz	w0, aec <ntfscomp+0x29c>
 a00:	str	x26, [x19, #224]
 a04:	ldr	x0, [x19, #48]
 a08:	add	w25, w25, #0x9
 a0c:	lsl	x24, x24, x25
 a10:	str	w24, [x0, #48]
 a14:	and	w21, w21, #0xfff
 a18:	mov	w24, #0x1000                	// #4096
 a1c:	sub	w0, w24, w21
 a20:	sub	w24, w24, w21
 a24:	cmp	x0, x22
 a28:	csel	w25, w22, w24, hi  // hi = pmore
 a2c:	csel	w24, w22, w24, hi  // hi = pmore
 a30:	ldr	x0, [x19, #48]
 a34:	mov	w21, w21
 a38:	ldr	x1, [x0, #56]
 a3c:	mov	x2, x24
 a40:	add	x1, x1, x21
 a44:	mov	x0, x23
 a48:	bl	0 <grub_memmove>
 a4c:	adrp	x0, 0 <decomp_nextvcn>
 a50:	ldr	x0, [x0]
 a54:	ldr	x4, [x0]
 a58:	cbz	x4, a74 <ntfscomp+0x224>
 a5c:	ldr	x3, [x19, #224]
 a60:	cbz	x3, a74 <ntfscomp+0x224>
 a64:	mov	w2, w25
 a68:	mov	w1, #0x0                   	// #0
 a6c:	mov	x0, #0x0                   	// #0
 a70:	blr	x4
 a74:	cmp	x24, x22
 a78:	b.eq	bb8 <ntfscomp+0x368>  // b.none
 a7c:	add	x23, x23, x24
 a80:	sub	x22, x22, x24
 a84:	ldp	x25, x26, [sp, #64]
 a88:	lsr	x2, x22, #12
 a8c:	mov	x1, x23
 a90:	mov	x0, x19
 a94:	bl	1b8 <read_block>
 a98:	mov	w20, w0
 a9c:	cbnz	w0, b00 <ntfscomp+0x2b0>
 aa0:	ands	x21, x22, #0xfff
 aa4:	b.ne	b10 <ntfscomp+0x2c0>  // b.any
 aa8:	ldr	x0, [x19, #216]
 aac:	cbz	x0, 8d8 <ntfscomp+0x88>
 ab0:	bl	0 <grub_free>
 ab4:	b	8d8 <ntfscomp+0x88>
 ab8:	sub	x20, x20, x0
 abc:	ldr	w0, [x19, #208]
 ac0:	mov	w2, #0x3                   	// #3
 ac4:	sub	w2, w2, w0
 ac8:	lsr	x2, x20, x2
 acc:	mov	x1, #0x0                   	// #0
 ad0:	mov	x0, x19
 ad4:	bl	1b8 <read_block>
 ad8:	cbz	w0, 9c8 <ntfscomp+0x178>
 adc:	adrp	x0, 0 <decomp_nextvcn>
 ae0:	ldr	x0, [x0]
 ae4:	ldr	w20, [x0]
 ae8:	b	aa8 <ntfscomp+0x258>
 aec:	adrp	x0, 0 <decomp_nextvcn>
 af0:	ldr	x0, [x0]
 af4:	ldr	w20, [x0]
 af8:	ldp	x25, x26, [sp, #64]
 afc:	b	aa8 <ntfscomp+0x258>
 b00:	adrp	x0, 0 <decomp_nextvcn>
 b04:	ldr	x0, [x0]
 b08:	ldr	w20, [x0]
 b0c:	b	aa8 <ntfscomp+0x258>
 b10:	stp	x25, x26, [sp, #64]
 b14:	ldr	x26, [x19, #224]
 b18:	str	xzr, [x19, #224]
 b1c:	ldr	x24, [x19, #8]
 b20:	ldr	w25, [x19, #208]
 b24:	ldr	x0, [x19, #48]
 b28:	mov	x2, #0x1                   	// #1
 b2c:	ldr	x1, [x0, #56]
 b30:	mov	x0, x19
 b34:	bl	1b8 <read_block>
 b38:	mov	w20, w0
 b3c:	cbz	w0, b54 <ntfscomp+0x304>
 b40:	adrp	x0, 0 <decomp_nextvcn>
 b44:	ldr	x0, [x0]
 b48:	ldr	w20, [x0]
 b4c:	ldp	x25, x26, [sp, #64]
 b50:	b	aa8 <ntfscomp+0x258>
 b54:	ldr	x0, [x19, #48]
 b58:	add	w25, w25, #0x9
 b5c:	lsl	x24, x24, x25
 b60:	str	w24, [x0, #48]
 b64:	ldr	x1, [x19, #48]
 b68:	and	x0, x22, #0xfffffffffffff000
 b6c:	mov	x2, x21
 b70:	ldr	x1, [x1, #56]
 b74:	add	x0, x23, x0
 b78:	bl	0 <grub_memmove>
 b7c:	adrp	x0, 0 <decomp_nextvcn>
 b80:	ldr	x0, [x0]
 b84:	ldr	x4, [x0]
 b88:	cmp	x26, #0x0
 b8c:	ccmp	x4, #0x0, #0x4, ne  // ne = any
 b90:	b.ne	b9c <ntfscomp+0x34c>  // b.any
 b94:	ldp	x25, x26, [sp, #64]
 b98:	b	aa8 <ntfscomp+0x258>
 b9c:	mov	x3, x26
 ba0:	mov	w2, w21
 ba4:	mov	w1, #0x0                   	// #0
 ba8:	mov	x0, #0x0                   	// #0
 bac:	blr	x4
 bb0:	ldp	x25, x26, [sp, #64]
 bb4:	b	aa8 <ntfscomp+0x258>
 bb8:	ldp	x25, x26, [sp, #64]
 bbc:	b	aa8 <ntfscomp+0x258>
 bc0:	mov	w20, #0x0                   	// #0
 bc4:	b	8d8 <ntfscomp+0x88>
 bc8:	ldp	x25, x26, [sp, #64]
 bcc:	b	8d8 <ntfscomp+0x88>
	...

0000000000000be0 <grub_mod_init>:
 be0:	adrp	x0, 0 <decomp_nextvcn>
 be4:	ldr	x0, [x0]
 be8:	adrp	x1, 0 <decomp_nextvcn>
 bec:	ldr	x1, [x1]
 bf0:	str	x1, [x0]
 bf4:	ret
	...

0000000000000c08 <grub_mod_fini>:
 c08:	adrp	x0, 0 <decomp_nextvcn>
 c0c:	ldr	x0, [x0]
 c10:	str	xzr, [x0]
 c14:	ret
	...
